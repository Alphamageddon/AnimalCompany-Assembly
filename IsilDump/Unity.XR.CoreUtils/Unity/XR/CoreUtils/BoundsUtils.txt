Type: Unity.XR.CoreUtils.BoundsUtils

Method: UnityEngine.Bounds GetBounds(System.Collections.Generic.List`1<UnityEngine.GameObject> gameObjects)

Disassembly:
	0x03B22E38 CSET W9, LS
	0x03B22E3C AND W0, W8, W9, 0x0
	0x03B22E40 RET
	0x03B22E44 STR D8, [X31 - 0x20]!
	0x03B22E48 STP X30, X19, [X31 + 0x10]
	0x03B22E4C CBZ X0, 0x3B22EB0
	0x03B22E50 ADRP X8, 0xFFFFFFFFFCFC8000
	0x03B22E54 LDR V1, [X8 + 0x104]
	0x03B22E58 FMOV S2, 0.5
	0x03B22E5C FMUL S0, S0, S2
	0x03B22E60 MOV X19, X0
	0x03B22E64 FMUL S0, S0, S1
	0x03B22E68 BL 0x3EB1E50
	0x03B22E6C MOV X0, X19
	0x03B22E70 MOV X1, X31
	0x03B22E74 MOV V8.16B, V0.16B
	0x03B22E78 BL 0x3C039DC
	0x03B22E7C ADRP X8, 0xFFFFFFFFFCFC8000
	0x03B22E80 LDR V1, [X8 + 0x16C]
	0x03B22E84 FSQRT S0, S0
	0x03B22E88 FMUL S1, S8, S1
	0x03B22E8C FDIV S0, S1, S0
	0x03B22E90 BL 0x3EB1BE0
	0x03B22E94 ADRP X8, 0xFFFFFFFFFCFC8000
	0x03B22E98 LDR V1, [X8 + 0x448]
	0x03B22E9C LDP X30, X19, [X31 + 0x10]
	0x03B22EA0 FADD S0, S0, S0
	0x03B22EA4 FMUL S0, S0, S1
	0x03B22EA8 LDR V8, [X31], #0x20
	0x03B22EAC RET
	0x03B22EB0 BL 0x1C16F20
	0x03B22EB4 STR D8, [X31 - 0x20]!
	0x03B22EB8 STP X30, X19, [X31 + 0x10]
	0x03B22EBC CBZ X0, 0x3B22F14
	0x03B22EC0 MOV X1, X31
	0x03B22EC4 MOV X19, X0
	0x03B22EC8 BL 0x3C03654
	0x03B22ECC ADRP X8, 0xFFFFFFFFFCFC8000
	0x03B22ED0 LDR V1, [X8 + 0x104]
	0x03B22ED4 FMOV S2, 0.5
	0x03B22ED8 FMUL S0, S0, S2
	0x03B22EDC FMUL S0, S0, S1
	0x03B22EE0 BL 0x3EB1E50
	0x03B22EE4 MOV X0, X19
	0x03B22EE8 MOV X1, X31
	0x03B22EEC MOV V8.16B, V0.16B
	0x03B22EF0 BL 0x3C039DC
	0x03B22EF4 FMUL S0, S8, S0
	0x03B22EF8 BL 0x3EB1BE0
	0x03B22EFC ADRP X8, 0xFFFFFFFFFCFC8000
	0x03B22F00 LDR V1, [X8 + 0x448]
	0x03B22F04 LDP X30, X19, [X31 + 0x10]
	0x03B22F08 FMUL S0, S0, S1
	0x03B22F0C LDR V8, [X31], #0x20
	0x03B22F10 RET
	0x03B22F14 BL 0x1C16F20
	0x03B22F18 STR D8, [X31 - 0x10]!
	0x03B22F1C STR X30, [X31 + 0x8]
	0x03B22F20 CBZ X0, 0x3B22F50
	0x03B22F24 MOV X1, X31
	0x03B22F28 MOV V8.16B, V0.16B
	0x03B22F2C BL 0x3C039DC
	0x03B22F30 ADRP X8, 0xFFFFFFFFFCFC8000
	0x03B22F34 LDR V1, [X8 + 0x16C]
	0x03B22F38 LDR X30, [X31 + 0x8]
	0x03B22F3C FSQRT S0, S0
	0x03B22F40 FMUL S1, S8, S1
	0x03B22F44 FDIV S0, S1, S0
	0x03B22F48 LDR V8, [X31], #0x10
	0x03B22F4C RET
	0x03B22F50 BL 0x1C16F20
	0x03B22F54 STP X30, X21, [X31 - 0x20]!
	0x03B22F58 STP X20, X19, [X31 + 0x10]
	0x03B22F5C ADRP X19, 0x8C0000
	0x03B22F60 ADRP X21, 0x5D1000
	0x03B22F64 ADRP X20, 0x5F9000
	0x03B22F68 LDRB W8, [X19 + 0x745]
	0x03B22F6C LDR X21, [X21 + 0x8F0]
	0x03B22F70 LDR X20, [X20 + 0x8B8]
	0x03B22F74 TBNZ X8, 0x0, 0x3B22F98
	0x03B22F78 ADRP X0, 0x5F9000
	0x03B22F7C LDR X0, [X0 + 0x8B8]
	0x03B22F80 BL 0x1C16CF4
	0x03B22F84 ADRP X0, 0x5D1000
	0x03B22F88 LDR X0, [X0 + 0x8F0]
	0x03B22F8C BL 0x1C16CF4
	0x03B22F90 MOVZ W8, 0x1
	0x03B22F94 STRB W8, [X19 + 0x745]
	0x03B22F98 LDR X0, [X21]
	0x03B22F9C BL 0x1C16F10
	0x03B22FA0 MOV X1, X31
	0x03B22FA4 MOV X19, X0
	0x03B22FA8 BL 0x3231AC4
	0x03B22FAC LDR X8, [X20]
	0x03B22FB0 LDR X8, [X8 + 0xB8]
	0x03B22FB4 STR X19, [X8]
	0x03B22FB8 LDP X20, X19, [X31 + 0x10]
	0x03B22FBC LDP X30, X21, [X31], #0x20
	0x03B22FC0 RET
	0x03B22FC4 SUB X31, X31, 0x40
	0x03B22FC8 STP X30, X23, [X31 + 0x10]
	0x03B22FCC STP X22, X21, [X31 + 0x20]
	0x03B22FD0 STP X20, X19, [X31 + 0x30]
	0x03B22FD4 ADRP X21, 0x8C0000
	0x03B22FD8 LDRB W8, [X21 + 0x746]
	0x03B22FDC MOV W20, W1
	0x03B22FE0 MOV X19, X0
	0x03B22FE4 TBNZ X8, 0x0, 0x3B23014
	0x03B22FE8 ADRP X0, 0x5D1000
	0x03B22FEC LDR X0, [X0 + 0xE00]
	0x03B22FF0 BL 0x1C16CF4
	0x03B22FF4 ADRP X0, 0x5D1000
	0x03B22FF8 LDR X0, [X0 + 0xE18]
	0x03B22FFC BL 0x1C16CF4
	0x03B23000 ADRP X0, 0x5D2000
	0x03B23004 LDR X0, [X0 + 0x638]
	0x03B23008 BL 0x1C16CF4
	0x03B2300C MOVZ W8, 0x1
	0x03B23010 STRB W8, [X21 + 0x746]
	0x03B23014 CBZ X19, 0x3B231EC
	0x03B23018 MOV X0, X19
	0x03B2301C MOV W1, W20
	0x03B23020 MOV X2, X31
	0x03B23024 BL 0x3C396EC
	0x03B23028 MOV X0, X19
	0x03B2302C MOV X1, X31
	0x03B23030 BL 0x3C356F8
	0x03B23034 CBZ X0, 0x3B231EC
	0x03B23038 ADRP X21, 0x5D0000
	0x03B2303C LDR X21, [X21 + 0xE00]
	0x03B23040 MOV X1, X31
	0x03B23044 BL 0x3C4100C
	0x03B23048 MOV X19, X0
	0x03B2304C CBZ X0, 0x3B231F0
	0x03B23050 ADRP X22, 0x5D0000
	0x03B23054 ADRP X23, 0x5D2000
	0x03B23058 LDR X22, [X22 + 0xE18]
	0x03B2305C LDR X23, [X23 + 0x638]
	0x03B23060 LDR X8, [X19]
	0x03B23064 LDR X1, [X22]
	0x03B23068 LDRH W9, [X8 + 0x12E]
	0x03B2306C CBZ X9, 0x3B23090
	0x03B23070 LDR X10, [X8 + 0xB0]
	0x03B23074 ADD X10, X10, 0x8
	0x03B23078 LDUR X11, [X10 - 0x8]
	0x03B2307C CMP X11, X1
	0x03B23080 B.EQ 0x3B230A0
	0x03B23084 SUBS X9, X9, 0x1
	0x03B23088 ADD X10, X10, 0x10
	0x03B2308C B.NE 0x3B23078
	0x03B23090 MOV X0, X19
	0x03B23094 MOV W2, W31
	0x03B23098 BL 0x1C5C788
	0x03B2309C B 0x3B230AC
	0x03B230A0 LDRSW X9, [X10]
	0x03B230A4 ADD X8, X8, X9, 0x4, LSL
	0x03B230A8 ADD X0, X8, 0x138
	0x03B230AC LDP X8, X1, [X0]
	0x03B230B0 MOV X0, X19
	0x03B230B4 BLR X8
	0x03B230B8 TBZ X0, 0x0, 0x3B2315C
	0x03B230BC LDR X8, [X19]
	0x03B230C0 LDR X1, [X22]
	0x03B230C4 LDRH W9, [X8 + 0x12E]
	0x03B230C8 CBZ X9, 0x3B230EC
	0x03B230CC LDR X10, [X8 + 0xB0]
	0x03B230D0 ADD X10, X10, 0x8
	0x03B230D4 LDUR X11, [X10 - 0x8]
	0x03B230D8 CMP X11, X1
	0x03B230DC B.EQ 0x3B230FC
	0x03B230E0 SUBS X9, X9, 0x1
	0x03B230E4 ADD X10, X10, 0x10
	0x03B230E8 B.NE 0x3B230D4
	0x03B230EC MOVZ W2, 0x1
	0x03B230F0 MOV X0, X19
	0x03B230F4 BL 0x1C5C788
	0x03B230F8 B 0x3B2310C
	0x03B230FC LDR W9, [X10]
	0x03B23100 ADD W9, W9, 0x1
	0x03B23104 ADD X8, X8, W9, 0x4, SXTW
	0x03B23108 ADD X0, X8, 0x138
	0x03B2310C LDP X8, X1, [X0]
	0x03B23110 MOV X0, X19
	0x03B23114 BLR X8
	0x03B23118 CBZ X0, 0x3B231E8
	0x03B2311C LDR X8, [X0]
	0x03B23120 LDR X1, [X23]
	0x03B23124 LDRB W10, [X8 + 0x130]
	0x03B23128 LDRB W9, [X1 + 0x130]
	0x03B2312C CMP W10, W9
	0x03B23130 B.CC 0x3B231E4
	0x03B23134 LDR X8, [X8 + 0xC8]
	0x03B23138 ADD X8, X8, X9, 0x3, LSL
	0x03B2313C LDUR X8, [X8 - 0x8]
	0x03B23140 CMP X8, X1
	0x03B23144 B.NE 0x3B231E4
	0x03B23148 MOV X1, X31
	0x03B2314C BL 0x3C32ECC
	0x03B23150 MOV W1, W20
	0x03B23154 BL 0x3B22FC4
	0x03B23158 B 0x3B23060
	0x03B2315C MOV X20, X31
	0x03B23160 LDR X1, [X21]
	0x03B23164 MOV X0, X19
	0x03B23168 BL 0x1C16E00
	0x03B2316C CBZ X0, 0x3B231CC
	0x03B23170 LDR X8, [X0]
	0x03B23174 LDR X1, [X21]
	0x03B23178 MOV X19, X0
	0x03B2317C LDRH W9, [X8 + 0x12E]
	0x03B23180 CBZ X9, 0x3B231A4
	0x03B23184 LDR X10, [X8 + 0xB0]
	0x03B23188 ADD X10, X10, 0x8
	0x03B2318C LDUR X11, [X10 - 0x8]
	0x03B23190 CMP X11, X1
	0x03B23194 B.EQ 0x3B231B4
	0x03B23198 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+128], D13
	003 Move [X31+136], D12
	004 Move [X31+144], D11
	005 Move [X31+152], D10
	006 Move [X31+160], D9
	007 Move [X31+168], D8
	008 Move [X31+176], X30
	009 Move [X31+184], X25
	010 Move [X31+192], X24
	011 Move [X31+200], X23
	012 Move [X31+208], X22
	013 Move [X31+216], X21
	014 Move [X31+224], X20
	015 Move [X31+232], X19
	016 Move X21, 0x8C1000
	017 Move W9, [X21+1855]
	018 Move X20, X0
	019 Move X19, X8
	020 Move TEMP, X9
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {53}
	024 Move X0, 0x638000
	025 Move X0, [X0+2968]
	026 Call 0x1C17CF4
	027 Move X0, 0x5D8000
	028 Move X0, [X0+3536]
	029 Call 0x1C17CF4
	030 Move X0, 0x5D8000
	031 Move X0, [X0+3544]
	032 Call 0x1C17CF4
	033 Move X0, 0x5D8000
	034 Move X0, [X0+3552]
	035 Call 0x1C17CF4
	036 Move X0, 0x5D8000
	037 Move X0, [X0+3560]
	038 Call 0x1C17CF4
	039 Move X0, 0x5D8000
	040 Move X0, [X0+3344]
	041 Call 0x1C17CF4
	042 Move X0, 0x5D8000
	043 Move X0, [X0+3320]
	044 Call 0x1C17CF4
	045 Move X0, 0x5D8000
	046 Move X0, [X0+3352]
	047 Call 0x1C17CF4
	048 Move X0, 0x638000
	049 Move X0, [X0+2976]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+1855], W8
	053 Move [X31+32], X31
	054 Move [X31+40], X31
	055 Move [X31+48], X31
	056 Move [X31+72], X31
	057 Move [X31+80], X31
	058 Move [X31+64], X31
	059 Move [X31+88], W31
	060 Compare X20, 0
	061 JumpIfEqual {212}
	062 Move X8, 0x5D8000
	063 Move X8, [X8+3560]
	064 Move X21, 0x5D8000
	065 Move X23, 0x638000
	066 Move X21, [X21+3544]
	067 Move X23, [X23+2968]
	068 Move X1, [X8]
	069 Move X24, 0x5D8000
	070 Move X25, 0x638000
	071 Move X22, 0x5D8000
	072 Move X24, [X24+3320]
	073 Move X25, [X25+2976]
	074 Move X22, [X22+3536]
	075 Add X8, X31, 0
	076 Move X0, X20
	077 Call List`1<Object>.GetEnumerator, X0
	078 Move V0, [X31]
	079 Move X8, [X31+16]
	080 NotImplemented "Instruction MOVI not yet implemented."
	081 Move S9, 0.5
	082 Move [X31+2], V0
	083 Move [X31+48], X8
	084 Move X1, [X21]
	085 Add X0, X31, 32
	086 Call Enumerator<Object>.MoveNext, X0
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {188}
	091 Move X0, [X31+48]
	092 Compare X0, 0
	093 JumpIfEqual {211}
	094 Move X1, X31
	095 Call GameObject.get_transform, X0
	096 Move X20, X0
	097 Move X0, [X23]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Add X8, X31, 0
	103 Move X0, X20
	104 Call BoundsUtils.GetBounds, X0
	105 Move V11, [X31]
	106 Move V10, [X31+8]
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 Move W8, [X31+64]
	109 Move V13, [X31+20]
	110 Compare W8, 0
	111 JumpIfEqual {172}
	112 Move X1, [X25]
	113 Add X8, X31, 0
	114 Add X0, X31, 64
	115 Call Nullable`1<Bounds>.get_Value, X0
	116 Move V0, [X31]
	117 Move V1, [X31+8]
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 Move V3, [X31+20]
	120 Subtract V4, V11, V12
	121 Subtract S5, S10, S13
	122 Subtract V16, V0, V2
	123 Subtract S17, S1, S3
	124 Add V6, V11, V12
	125 Add S7, S10, S13
	126 Add V0, V0, V2
	127 NotImplemented "Instruction INVALID not yet implemented."
	128 NotImplemented "Instruction FCMP not yet implemented."
	129 Add S1, S1, S3
	130 NotImplemented "Instruction INVALID not yet implemented."
	131 NotImplemented "Instruction INVALID not yet implemented."
	132 NotImplemented "Instruction FCSEL not yet implemented."
	133 NotImplemented "Instruction FCMP not yet implemented."
	134 NotImplemented "Instruction INVALID not yet implemented."
	135 NotImplemented "Instruction FCSEL not yet implemented."
	136 Subtract V3, V3, V2
	137 Subtract S5, S5, S4
	138 NotImplemented "Instruction INVALID not yet implemented."
	139 Multiply S5, S5, S9
	140 Add V2, V2, V3
	141 Add S4, S4, S5
	142 Subtract V6, V2, V3
	143 Add V2, V3, V2
	144 Subtract S3, S4, S5
	145 NotImplemented "Instruction INVALID not yet implemented."
	146 Add S4, S5, S4
	147 NotImplemented "Instruction INVALID not yet implemented."
	148 NotImplemented "Instruction FCMP not yet implemented."
	149 NotImplemented "Instruction INVALID not yet implemented."
	150 NotImplemented "Instruction INVALID not yet implemented."
	151 NotImplemented "Instruction FCSEL not yet implemented."
	152 NotImplemented "Instruction FCMP not yet implemented."
	153 Subtract V0, V0, V6
	154 NotImplemented "Instruction FCSEL not yet implemented."
	155 Move X2, [X24]
	156 NotImplemented "Instruction INVALID not yet implemented."
	157 Subtract S1, S1, S2
	158 Add V3, V6, V0
	159 Move [X31+116], D0
	160 Multiply S0, S1, S9
	161 Add S1, S2, S0
	162 Move [X31], X31
	163 Move [X31+8], X31
	164 Move [X31+24], W31
	165 Move [X31+16], X31
	166 Move [X31+104], D3
	167 Move [X31+112], S1
	168 Move [X31+124], S0
	169 Add X0, X31, 0
	170 Add X1, X31, 104
	171 Call Nullable`1<Bounds>..ctor, X0, X1
	172 Move X2, [X24]
	173 Move [X31], X31
	174 Move [X31+8], X31
	175 Move [X31+24], W31
	176 Move [X31+16], X31
	177 Move [X31+104], D11
	178 Move [X31+112], S10
	179 Move [X31+116], D12
	180 Move [X31+124], S13
	181 Add X0, X31, 0
	182 Add X1, X31, 104
	183 Call Nullable`1<Bounds>..ctor, X0, X1
	184 Move V0, [X31]
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 Move [X31+4], V0
	187 Move [X31+76], V1
	188 Move X1, [X22]
	189 Add X0, X31, 32
	190 Call Enumerator<Object>.Dispose, X0
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 Move X22, [X31+208]
	194 Move X21, [X31+216]
	195 Move X24, [X31+192]
	196 Move X23, [X31+200]
	197 Move [X19+16], X8
	198 Move [X19], V0
	199 Move X20, [X31+224]
	200 Move X19, [X31+232]
	201 Move X30, [X31+176]
	202 Move X25, [X31+184]
	203 Move D9, [X31+160]
	204 Move D8, [X31+168]
	205 Move D11, [X31+144]
	206 Move D10, [X31+152]
	207 Move D13, [X31+128]
	208 Move D12, [X31+136]
	209 Add X31, X31, 240
	210 Return X0
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 Move X20, X0
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X0, X20
	216 Call 0x3EB2AD0
	217 Move X21, [X0]
	218 Call 0x3EB2AE0
	219 Move X1, [X22]
	220 Add X0, X31, 32
	221 Call Enumerator<Object>.Dispose, X0
	222 Compare X21, 0
	223 JumpIfEqual {191}
	224 Move X0, X21
	225 Call 0x1C17F18
	226 Move X21, X31
	227 Move X20, X0
	228 Move X1, [X22]
	229 Add X0, X31, 32
	230 Call Enumerator<Object>.Dispose, X0
	231 Compare X21, 0
	232 JumpIfNotEqual {235}
	233 Move X0, X20
	234 Call 0x1D2D690
	235 Move X0, X21
	236 Call 0x1C17F18
	237 Call 0x1991590

Method: UnityEngine.Bounds GetBounds(UnityEngine.Transform[] transforms)

Disassembly:
	0x03B23554 LDR X1, [X21]
	0x03B23558 LDRH W9, [X8 + 0x12E]
	0x03B2355C CBZ X9, 0x3B23580
	0x03B23560 LDR X10, [X8 + 0xB0]
	0x03B23564 ADD X10, X10, 0x8
	0x03B23568 LDUR X11, [X10 - 0x8]
	0x03B2356C CMP X11, X1
	0x03B23570 B.EQ 0x3B23590
	0x03B23574 SUBS X9, X9, 0x1
	0x03B23578 ADD X10, X10, 0x10
	0x03B2357C B.NE 0x3B23568
	0x03B23580 MOV X0, X19
	0x03B23584 MOV W2, W31
	0x03B23588 BL 0x1C5C788
	0x03B2358C B 0x3B2359C
	0x03B23590 LDRSW X9, [X10]
	0x03B23594 ADD X8, X8, X9, 0x4, LSL
	0x03B23598 ADD X0, X8, 0x138
	0x03B2359C LDP X8, X1, [X0]
	0x03B235A0 MOV X0, X19
	0x03B235A4 BLR X8
	0x03B235A8 CBNZ X20, 0x3B235B4
	0x03B235AC LDR X0, [X31 + 0x8]
	0x03B235B0 BL 0x1D2C690
	0x03B235B4 MOV X0, X20
	0x03B235B8 BL 0x1C16F18
	0x03B235BC BL 0x1990590
	0x03B235C0 SUB X31, X31, 0x40
	0x03B235C4 STP X30, X23, [X31 + 0x10]
	0x03B235C8 STP X22, X21, [X31 + 0x20]
	0x03B235CC STP X20, X19, [X31 + 0x30]
	0x03B235D0 ADRP X21, 0x8BF000
	0x03B235D4 LDRB W8, [X21 + 0x748]
	0x03B235D8 MOV W20, W1
	0x03B235DC MOV X19, X0
	0x03B235E0 TBNZ X8, 0x0, 0x3B23610
	0x03B235E4 ADRP X0, 0x5D0000
	0x03B235E8 LDR X0, [X0 + 0xE00]
	0x03B235EC BL 0x1C16CF4
	0x03B235F0 ADRP X0, 0x5D0000
	0x03B235F4 LDR X0, [X0 + 0xE18]
	0x03B235F8 BL 0x1C16CF4
	0x03B235FC ADRP X0, 0x5D2000
	0x03B23600 LDR X0, [X0 + 0x638]
	0x03B23604 BL 0x1C16CF4
	0x03B23608 MOVZ W8, 0x1
	0x03B2360C STRB W8, [X21 + 0x748]
	0x03B23610 CBZ X19, 0x3B237E8
	0x03B23614 MOV X0, X19
	0x03B23618 MOV W1, W20
	0x03B2361C MOV X2, X31
	0x03B23620 BL 0x3C35770
	0x03B23624 MOV X0, X19
	0x03B23628 MOV X1, X31
	0x03B2362C BL 0x3C356F8
	0x03B23630 CBZ X0, 0x3B237E8
	0x03B23634 ADRP X21, 0x5D0000
	0x03B23638 LDR X21, [X21 + 0xE00]
	0x03B2363C MOV X1, X31
	0x03B23640 BL 0x3C4100C
	0x03B23644 MOV X19, X0
	0x03B23648 CBZ X0, 0x3B237EC
	0x03B2364C ADRP X22, 0x5D0000
	0x03B23650 ADRP X23, 0x5D2000
	0x03B23654 LDR X22, [X22 + 0xE18]
	0x03B23658 LDR X23, [X23 + 0x638]
	0x03B2365C LDR X8, [X19]
	0x03B23660 LDR X1, [X22]
	0x03B23664 LDRH W9, [X8 + 0x12E]
	0x03B23668 CBZ X9, 0x3B2368C
	0x03B2366C LDR X10, [X8 + 0xB0]
	0x03B23670 ADD X10, X10, 0x8
	0x03B23674 LDUR X11, [X10 - 0x8]
	0x03B23678 CMP X11, X1
	0x03B2367C B.EQ 0x3B2369C
	0x03B23680 SUBS X9, X9, 0x1
	0x03B23684 ADD X10, X10, 0x10
	0x03B23688 B.NE 0x3B23674
	0x03B2368C MOV X0, X19
	0x03B23690 MOV W2, W31
	0x03B23694 BL 0x1C5C788
	0x03B23698 B 0x3B236A8
	0x03B2369C LDRSW X9, [X10]
	0x03B236A0 ADD X8, X8, X9, 0x4, LSL
	0x03B236A4 ADD X0, X8, 0x138
	0x03B236A8 LDP X8, X1, [X0]
	0x03B236AC MOV X0, X19
	0x03B236B0 BLR X8
	0x03B236B4 TBZ X0, 0x0, 0x3B23758
	0x03B236B8 LDR X8, [X19]
	0x03B236BC LDR X1, [X22]
	0x03B236C0 LDRH W9, [X8 + 0x12E]
	0x03B236C4 CBZ X9, 0x3B236E8
	0x03B236C8 LDR X10, [X8 + 0xB0]
	0x03B236CC ADD X10, X10, 0x8
	0x03B236D0 LDUR X11, [X10 - 0x8]
	0x03B236D4 CMP X11, X1
	0x03B236D8 B.EQ 0x3B236F8
	0x03B236DC SUBS X9, X9, 0x1
	0x03B236E0 ADD X10, X10, 0x10
	0x03B236E4 B.NE 0x3B236D0
	0x03B236E8 MOVZ W2, 0x1
	0x03B236EC MOV X0, X19
	0x03B236F0 BL 0x1C5C788
	0x03B236F4 B 0x3B23708
	0x03B236F8 LDR W9, [X10]
	0x03B236FC ADD W9, W9, 0x1
	0x03B23700 ADD X8, X8, W9, 0x4, SXTW
	0x03B23704 ADD X0, X8, 0x138
	0x03B23708 LDP X8, X1, [X0]
	0x03B2370C MOV X0, X19
	0x03B23710 BLR X8
	0x03B23714 CBZ X0, 0x3B237E4
	0x03B23718 LDR X8, [X0]
	0x03B2371C LDR X1, [X23]
	0x03B23720 LDRB W10, [X8 + 0x130]
	0x03B23724 LDRB W9, [X1 + 0x130]
	0x03B23728 CMP W10, W9
	0x03B2372C B.CC 0x3B237E0
	0x03B23730 LDR X8, [X8 + 0xC8]
	0x03B23734 ADD X8, X8, X9, 0x3, LSL
	0x03B23738 LDUR X8, [X8 - 0x8]
	0x03B2373C CMP X8, X1
	0x03B23740 B.NE 0x3B237E0
	0x03B23744 MOV X1, X31
	0x03B23748 BL 0x3C32ECC
	0x03B2374C MOV W1, W20
	0x03B23750 BL 0x3B235C0
	0x03B23754 B 0x3B2365C
	0x03B23758 MOV X20, X31
	0x03B2375C LDR X1, [X21]
	0x03B23760 MOV X0, X19
	0x03B23764 BL 0x1C16E00
	0x03B23768 CBZ X0, 0x3B237C8
	0x03B2376C LDR X8, [X0]
	0x03B23770 LDR X1, [X21]
	0x03B23774 MOV X19, X0
	0x03B23778 LDRH W9, [X8 + 0x12E]
	0x03B2377C CBZ X9, 0x3B237A0
	0x03B23780 LDR X10, [X8 + 0xB0]
	0x03B23784 ADD X10, X10, 0x8
	0x03B23788 LDUR X11, [X10 - 0x8]
	0x03B2378C CMP X11, X1
	0x03B23790 B.EQ 0x3B237B0
	0x03B23794 SUBS X9, X9, 0x1
	0x03B23798 ADD X10, X10, 0x10
	0x03B2379C B.NE 0x3B23788

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+64], D13
	003 Move [X31+72], D12
	004 Move [X31+80], D11
	005 Move [X31+88], D10
	006 Move [X31+96], D9
	007 Move [X31+104], D8
	008 Move [X31+112], X30
	009 Move [X31+128], X26
	010 Move [X31+136], X25
	011 Move [X31+144], X24
	012 Move [X31+152], X23
	013 Move [X31+160], X22
	014 Move [X31+168], X21
	015 Move [X31+176], X20
	016 Move [X31+184], X19
	017 Move X21, 0x8C0000
	018 Move W9, [X21+1856]
	019 Move X19, X0
	020 Move X20, X8
	021 Move TEMP, X9
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0x637000
	026 Move X0, [X0+2968]
	027 Call 0x1C17CF4
	028 Move X0, 0x5D7000
	029 Move X0, [X0+3344]
	030 Call 0x1C17CF4
	031 Move X0, 0x5D7000
	032 Move X0, [X0+3320]
	033 Call 0x1C17CF4
	034 Move X0, 0x5D7000
	035 Move X0, [X0+3352]
	036 Call 0x1C17CF4
	037 Move X0, 0x637000
	038 Move X0, [X0+2976]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+1856], W8
	042 Move [X31+8], X31
	043 Move [X31+16], X31
	044 Move [X31+32], W31
	045 Move [X31+24], X31
	046 Compare X19, 0
	047 JumpIfEqual {164}
	048 Move X8, [X19+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X23, 0x637000
	051 Move X24, 0x5D7000
	052 Move X25, 0x637000
	053 Move X23, [X23+2968]
	054 Move X24, [X24+3320]
	055 Move X25, [X25+2976]
	056 Move X22, X31
	057 And X8, X8, 0
	058 Add X26, X19, 32
	059 NotImplemented "Instruction MOVI not yet implemented."
	060 Move S9, 0.5
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X23]
	063 Move X21, [X26]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Add X8, X31, 40
	069 Move X0, X21
	070 Call BoundsUtils.GetBounds, X0
	071 Move V11, [X31+40]
	072 Move V10, [X31+48]
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move W8, [X31+8]
	075 Move V13, [X31+60]
	076 Compare W8, 0
	077 JumpIfEqual {131}
	078 Move X1, [X25]
	079 Add X8, X31, 40
	080 Add X0, X31, 8
	081 Call Nullable`1<Bounds>.get_Value, X0
	082 Move V0, [X31+40]
	083 Move V1, [X31+48]
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 Move V3, [X31+60]
	086 Subtract V4, V11, V12
	087 Subtract S5, S10, S13
	088 Subtract V16, V0, V2
	089 Subtract S17, S1, S3
	090 Add V6, V11, V12
	091 Add S7, S10, S13
	092 Add V0, V0, V2
	093 NotImplemented "Instruction INVALID not yet implemented."
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 Add S1, S1, S3
	096 NotImplemented "Instruction INVALID not yet implemented."
	097 NotImplemented "Instruction INVALID not yet implemented."
	098 NotImplemented "Instruction FCSEL not yet implemented."
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 NotImplemented "Instruction INVALID not yet implemented."
	101 NotImplemented "Instruction FCSEL not yet implemented."
	102 Subtract V3, V3, V2
	103 Subtract S5, S5, S4
	104 NotImplemented "Instruction INVALID not yet implemented."
	105 Multiply S5, S5, S9
	106 Add V2, V2, V3
	107 Add S4, S4, S5
	108 Subtract V6, V2, V3
	109 Add V2, V3, V2
	110 Subtract S3, S4, S5
	111 NotImplemented "Instruction INVALID not yet implemented."
	112 Add S4, S5, S4
	113 NotImplemented "Instruction INVALID not yet implemented."
	114 NotImplemented "Instruction FCMP not yet implemented."
	115 NotImplemented "Instruction INVALID not yet implemented."
	116 NotImplemented "Instruction INVALID not yet implemented."
	117 NotImplemented "Instruction FCSEL not yet implemented."
	118 NotImplemented "Instruction FCMP not yet implemented."
	119 Move X2, [X24]
	120 Subtract V0, V0, V6
	121 NotImplemented "Instruction FCSEL not yet implemented."
	122 NotImplemented "Instruction INVALID not yet implemented."
	123 Subtract S1, S1, S2
	124 Add V3, V6, V0
	125 Move [X31+52], D0
	126 Multiply S0, S1, S9
	127 Add S1, S2, S0
	128 Move [X31+40], D3
	129 Move [X31+48], S1
	130 Move [X31+60], S0
	131 Move X2, [X24]
	132 Move [X31+40], D11
	133 Move [X31+48], S10
	134 Move [X31+52], D12
	135 Move [X31+60], S13
	136 Add X0, X31, 8
	137 Add X1, X31, 40
	138 Call Nullable`1<Bounds>..ctor, X0, X1
	139 Move W8, [X19+24]
	140 Add X22, X22, 1
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 Move X22, [X31+160]
	145 Move X21, [X31+168]
	146 Move X24, [X31+144]
	147 Move X23, [X31+152]
	148 Move [X20+16], X8
	149 Move [X20], V0
	150 Move X20, [X31+176]
	151 Move X19, [X31+184]
	152 Move X26, [X31+128]
	153 Move X25, [X31+136]
	154 Move X30, [X31+112]
	155 Move D9, [X31+96]
	156 Move D8, [X31+104]
	157 Move D11, [X31+80]
	158 Move D10, [X31+88]
	159 Move D13, [X31+64]
	160 Move D12, [X31+72]
	161 Add X31, X31, 192
	162 Return X0
	163 Call 0x1C17F28
	164 Call 0x1C17F20

Method: UnityEngine.Bounds GetBounds(UnityEngine.Transform transform)

Disassembly:
	0x03B2319C ADD X10, X10, 0x10
	0x03B231A0 B.NE 0x3B2318C
	0x03B231A4 MOV X0, X19
	0x03B231A8 MOV W2, W31
	0x03B231AC BL 0x1C5C788
	0x03B231B0 B 0x3B231C0
	0x03B231B4 LDRSW X9, [X10]
	0x03B231B8 ADD X8, X8, X9, 0x4, LSL
	0x03B231BC ADD X0, X8, 0x138
	0x03B231C0 LDP X8, X1, [X0]
	0x03B231C4 MOV X0, X19
	0x03B231C8 BLR X8
	0x03B231CC CBNZ X20, 0x3B231F4
	0x03B231D0 LDP X20, X19, [X31 + 0x30]
	0x03B231D4 LDP X22, X21, [X31 + 0x20]
	0x03B231D8 LDP X30, X23, [X31 + 0x10]
	0x03B231DC ADD X31, X31, 0x40
	0x03B231E0 RET
	0x03B231E4 BL 0x1C171E0
	0x03B231E8 BL 0x1C16F20
	0x03B231EC BL 0x1C16F20
	0x03B231F0 BL 0x1C16F20
	0x03B231F4 MOV X0, X20
	0x03B231F8 BL 0x1C16F18
	0x03B231FC B 0x3B23210
	0x03B23200 B 0x3B23210
	0x03B23204 B 0x3B23210
	0x03B23208 B 0x3B23210
	0x03B2320C B 0x3B23210
	0x03B23210 CMP W1, 0x1
	0x03B23214 B.NE 0x3B23228
	0x03B23218 BL 0x3EB1AD0
	0x03B2321C LDR X20, [X0]
	0x03B23220 BL 0x3EB1AE0
	0x03B23224 B 0x3B23160
	0x03B23228 STR X0, [X31 + 0x8]
	0x03B2322C MOV X20, X31
	0x03B23230 B 0x3B23238
	0x03B23234 STR X0, [X31 + 0x8]
	0x03B23238 LDR X1, [X21]
	0x03B2323C MOV X0, X19
	0x03B23240 BL 0x1C16E00
	0x03B23244 MOV X19, X0
	0x03B23248 CBZ X0, 0x3B232A4
	0x03B2324C LDR X8, [X19]
	0x03B23250 LDR X1, [X21]
	0x03B23254 LDRH W9, [X8 + 0x12E]
	0x03B23258 CBZ X9, 0x3B2327C
	0x03B2325C LDR X10, [X8 + 0xB0]
	0x03B23260 ADD X10, X10, 0x8
	0x03B23264 LDUR X11, [X10 - 0x8]
	0x03B23268 CMP X11, X1
	0x03B2326C B.EQ 0x3B2328C
	0x03B23270 SUBS X9, X9, 0x1
	0x03B23274 ADD X10, X10, 0x10
	0x03B23278 B.NE 0x3B23264
	0x03B2327C MOV X0, X19
	0x03B23280 MOV W2, W31
	0x03B23284 BL 0x1C5C788
	0x03B23288 B 0x3B23298
	0x03B2328C LDRSW X9, [X10]
	0x03B23290 ADD X8, X8, X9, 0x4, LSL
	0x03B23294 ADD X0, X8, 0x138
	0x03B23298 LDP X8, X1, [X0]
	0x03B2329C MOV X0, X19
	0x03B232A0 BLR X8
	0x03B232A4 CBNZ X20, 0x3B232B0
	0x03B232A8 LDR X0, [X31 + 0x8]
	0x03B232AC BL 0x1D2C690
	0x03B232B0 MOV X0, X20
	0x03B232B4 BL 0x1C16F18
	0x03B232B8 BL 0x1990590
	0x03B232BC SUB X31, X31, 0x40
	0x03B232C0 STP X30, X23, [X31 + 0x10]
	0x03B232C4 STP X22, X21, [X31 + 0x20]
	0x03B232C8 STP X20, X19, [X31 + 0x30]
	0x03B232CC ADRP X21, 0x8BF000
	0x03B232D0 LDRB W8, [X21 + 0x747]
	0x03B232D4 MOV W20, W1
	0x03B232D8 MOV X19, X0
	0x03B232DC TBNZ X8, 0x0, 0x3B2330C
	0x03B232E0 ADRP X0, 0x5D0000
	0x03B232E4 LDR X0, [X0 + 0xE00]
	0x03B232E8 BL 0x1C16CF4
	0x03B232EC ADRP X0, 0x5D0000
	0x03B232F0 LDR X0, [X0 + 0xE18]
	0x03B232F4 BL 0x1C16CF4
	0x03B232F8 ADRP X0, 0x5D2000
	0x03B232FC LDR X0, [X0 + 0x638]
	0x03B23300 BL 0x1C16CF4
	0x03B23304 MOVZ W8, 0x1
	0x03B23308 STRB W8, [X21 + 0x747]
	0x03B2330C CBZ X19, 0x3B234F0
	0x03B23310 MOV X0, X19
	0x03B23314 MOV X1, X31
	0x03B23318 BL 0x3C396B0
	0x03B2331C ORR W1, W0, W20, 0x0
	0x03B23320 MOV X0, X19
	0x03B23324 MOV X2, X31
	0x03B23328 BL 0x3C396EC
	0x03B2332C MOV X0, X19
	0x03B23330 MOV X1, X31
	0x03B23334 BL 0x3C356F8
	0x03B23338 CBZ X0, 0x3B234F0
	0x03B2333C ADRP X21, 0x5D0000
	0x03B23340 LDR X21, [X21 + 0xE00]
	0x03B23344 MOV X1, X31
	0x03B23348 BL 0x3C4100C
	0x03B2334C MOV X19, X0
	0x03B23350 CBZ X0, 0x3B234F4
	0x03B23354 ADRP X22, 0x5D0000
	0x03B23358 ADRP X23, 0x5D2000
	0x03B2335C LDR X22, [X22 + 0xE18]
	0x03B23360 LDR X23, [X23 + 0x638]
	0x03B23364 LDR X8, [X19]
	0x03B23368 LDR X1, [X22]
	0x03B2336C LDRH W9, [X8 + 0x12E]
	0x03B23370 CBZ X9, 0x3B23394
	0x03B23374 LDR X10, [X8 + 0xB0]
	0x03B23378 ADD X10, X10, 0x8
	0x03B2337C LDUR X11, [X10 - 0x8]
	0x03B23380 CMP X11, X1
	0x03B23384 B.EQ 0x3B233A4
	0x03B23388 SUBS X9, X9, 0x1
	0x03B2338C ADD X10, X10, 0x10
	0x03B23390 B.NE 0x3B2337C
	0x03B23394 MOV X0, X19
	0x03B23398 MOV W2, W31
	0x03B2339C BL 0x1C5C788
	0x03B233A0 B 0x3B233B0
	0x03B233A4 LDRSW X9, [X10]
	0x03B233A8 ADD X8, X8, X9, 0x4, LSL
	0x03B233AC ADD X0, X8, 0x138
	0x03B233B0 LDP X8, X1, [X0]
	0x03B233B4 MOV X0, X19
	0x03B233B8 BLR X8
	0x03B233BC TBZ X0, 0x0, 0x3B23460
	0x03B233C0 LDR X8, [X19]
	0x03B233C4 LDR X1, [X22]
	0x03B233C8 LDRH W9, [X8 + 0x12E]
	0x03B233CC CBZ X9, 0x3B233F0
	0x03B233D0 LDR X10, [X8 + 0xB0]
	0x03B233D4 ADD X10, X10, 0x8
	0x03B233D8 LDUR X11, [X10 - 0x8]
	0x03B233DC CMP X11, X1
	0x03B233E0 B.EQ 0x3B23400
	0x03B233E4 SUBS X9, X9, 0x1
	0x03B233E8 ADD X10, X10, 0x10
	0x03B233EC B.NE 0x3B233D8
	0x03B233F0 MOVZ W2, 0x1
	0x03B233F4 MOV X0, X19
	0x03B233F8 BL 0x1C5C788
	0x03B233FC B 0x3B23410
	0x03B23400 LDR W9, [X10]
	0x03B23404 ADD W9, W9, 0x1
	0x03B23408 ADD X8, X8, W9, 0x4, SXTW
	0x03B2340C ADD X0, X8, 0x138
	0x03B23410 LDP X8, X1, [X0]
	0x03B23414 MOV X0, X19
	0x03B23418 BLR X8
	0x03B2341C CBZ X0, 0x3B234EC
	0x03B23420 LDR X8, [X0]
	0x03B23424 LDR X1, [X23]
	0x03B23428 LDRB W10, [X8 + 0x130]
	0x03B2342C LDRB W9, [X1 + 0x130]
	0x03B23430 CMP W10, W9
	0x03B23434 B.CC 0x3B234E8
	0x03B23438 LDR X8, [X8 + 0xC8]
	0x03B2343C ADD X8, X8, X9, 0x3, LSL
	0x03B23440 LDUR X8, [X8 - 0x8]
	0x03B23444 CMP X8, X1
	0x03B23448 B.NE 0x3B234E8
	0x03B2344C MOV X1, X31
	0x03B23450 BL 0x3C32ECC
	0x03B23454 MOV W1, W20
	0x03B23458 BL 0x3B232BC
	0x03B2345C B 0x3B23364
	0x03B23460 MOV X20, X31
	0x03B23464 LDR X1, [X21]
	0x03B23468 MOV X0, X19
	0x03B2346C BL 0x1C16E00
	0x03B23470 CBZ X0, 0x3B234D0
	0x03B23474 LDR X8, [X0]
	0x03B23478 LDR X1, [X21]
	0x03B2347C MOV X19, X0
	0x03B23480 LDRH W9, [X8 + 0x12E]
	0x03B23484 CBZ X9, 0x3B234A8
	0x03B23488 LDR X10, [X8 + 0xB0]
	0x03B2348C ADD X10, X10, 0x8
	0x03B23490 LDUR X11, [X10 - 0x8]
	0x03B23494 CMP X11, X1
	0x03B23498 B.EQ 0x3B234B8
	0x03B2349C SUBS X9, X9, 0x1
	0x03B234A0 ADD X10, X10, 0x10
	0x03B234A4 B.NE 0x3B23490
	0x03B234A8 MOV X0, X19
	0x03B234AC MOV W2, W31
	0x03B234B0 BL 0x1C5C788
	0x03B234B4 B 0x3B234C4
	0x03B234B8 LDRSW X9, [X10]
	0x03B234BC ADD X8, X8, X9, 0x4, LSL
	0x03B234C0 ADD X0, X8, 0x138
	0x03B234C4 LDP X8, X1, [X0]
	0x03B234C8 MOV X0, X19
	0x03B234CC BLR X8
	0x03B234D0 CBNZ X20, 0x3B234F8
	0x03B234D4 LDP X20, X19, [X31 + 0x30]
	0x03B234D8 LDP X22, X21, [X31 + 0x20]
	0x03B234DC LDP X30, X23, [X31 + 0x10]
	0x03B234E0 ADD X31, X31, 0x40
	0x03B234E4 RET
	0x03B234E8 BL 0x1C171E0
	0x03B234EC BL 0x1C16F20
	0x03B234F0 BL 0x1C16F20
	0x03B234F4 BL 0x1C16F20
	0x03B234F8 MOV X0, X20
	0x03B234FC BL 0x1C16F18
	0x03B23500 B 0x3B23514
	0x03B23504 B 0x3B23514
	0x03B23508 B 0x3B23514
	0x03B2350C B 0x3B23514
	0x03B23510 B 0x3B23514
	0x03B23514 CMP W1, 0x1
	0x03B23518 B.NE 0x3B2352C
	0x03B2351C BL 0x3EB1AD0
	0x03B23520 LDR X20, [X0]
	0x03B23524 BL 0x3EB1AE0
	0x03B23528 B 0x3B23464
	0x03B2352C STR X0, [X31 + 0x8]
	0x03B23530 MOV X20, X31
	0x03B23534 B 0x3B2353C
	0x03B23538 STR X0, [X31 + 0x8]
	0x03B2353C LDR X1, [X21]
	0x03B23540 MOV X0, X19
	0x03B23544 BL 0x1C16E00
	0x03B23548 MOV X19, X0
	0x03B2354C CBZ X0, 0x3B235A8
	0x03B23550 LDR X8, [X19]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D13
	003 Move [X31+72], D12
	004 Move [X31+80], D11
	005 Move [X31+88], D10
	006 Move [X31+96], D9
	007 Move [X31+104], D8
	008 Move [X31+112], X30
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X22, 0x8C0000
	014 Move X21, 0x637000
	015 Move X19, X8
	016 Move W8, [X22+1857]
	017 Move X21, [X21+2968]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {52}
	023 Move X0, 0x637000
	024 Move X0, [X0+2968]
	025 Call 0x1C17CF4
	026 Move X0, 0x637000
	027 Move X0, [X0+2984]
	028 Call 0x1C17CF4
	029 Move X0, 0x637000
	030 Move X0, [X0+2992]
	031 Call 0x1C17CF4
	032 Move X0, 0x5D8000
	033 Move X0, [X0+2368]
	034 Call 0x1C17CF4
	035 Move X0, 0x5D8000
	036 Move X0, [X0+2376]
	037 Call 0x1C17CF4
	038 Move X0, 0x5D8000
	039 Move X0, [X0+2384]
	040 Call 0x1C17CF4
	041 Move X0, 0x5D8000
	042 Move X0, [X0+2408]
	043 Call 0x1C17CF4
	044 Move X0, 0x5D8000
	045 Move X0, [X0+2232]
	046 Call 0x1C17CF4
	047 Move X0, 0x5D8000
	048 Move X0, [X0+2240]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X22+1857], W8
	052 Move X0, [X21]
	053 Move [X31+40], X31
	054 Move [X31+48], X31
	055 Move [X31+56], X31
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Compare X20, 0
	061 JumpIfEqual {237}
	062 Move X8, [X21]
	063 Move X9, 0x637000
	064 Move X0, X20
	065 Move X8, [X8+184]
	066 Move X9, [X9+2984]
	067 Move X1, [X8]
	068 Move X2, [X9]
	069 Call 0x21A5608, X0, X1
	070 Move X8, [X21]
	071 Move X8, [X8+184]
	072 Move X0, [X8]
	073 Add X8, X31, 16
	074 Call BoundsUtils.GetBounds, X0
	075 Move S8, [X31+24]
	076 Move S11, [X31+28]
	077 Move V3, [X31+32]
	078 Move X22, 0x8B6000
	079 Move W8, [X22+1923]
	080 Move S9, [X31+16]
	081 Move S10, [X31+20]
	082 Add S13, S11, S11
	083 Add V12, V3, V3
	084 Move [X31], V3
	085 Compare W8, 0
	086 JumpIfNotEqual {93}
	087 Move X0, 0x5D1000
	088 Move X0, [X0+1440]
	089 Call 0x1C17CF4
	090 Move V3, [X31]
	091 Move W8, 1
	092 Move [X22+1923], W8
	093 Move X8, 0x5D1000
	094 Move X8, [X8+1440]
	095 Move X8, [X8]
	096 Move X8, [X8+184]
	097 Move V0, [X8]
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 Move X8, -50565120
	100 Move V2, [X8+3872]
	101 Subtract S0, S13, S0
	102 Subtract V1, V12, V1
	103 Multiply S0, S0, S0
	104 NotImplemented "Instruction INVALID not yet implemented."
	105 Add S0, S0, S1
	106 Move S1, V1.S[1]
	107 Add S0, S1, S0
	108 NotImplemented "Instruction FCMP not yet implemented."
	109 Move S12, V3.S[1]
	110 Move X0, [X21]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {116}
	114 Call 0x1C17DFC
	115 Move X0, [X21]
	116 Move X9, 0x637000
	117 Move X8, [X0+184]
	118 Move X9, [X9+2992]
	119 Move X0, X20
	120 Move X1, [X8+8]
	121 Move X2, [X9]
	122 Call 0x21A5608, X0, X1
	123 Move X0, [X21]
	124 Move X8, [X0+184]
	125 Move X8, [X8+8]
	126 Compare X8, 0
	127 JumpIfEqual {237}
	128 Move W9, [X8+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W9, [X0+224]
	131 Compare W9, 0
	132 JumpIfNotEqual {139}
	133 Call 0x1C17DFC
	134 Move X8, [X21]
	135 Move X8, [X8+184]
	136 Move X8, [X8+8]
	137 Compare X8, 0
	138 JumpIfEqual {237}
	139 Move X9, 0x5D8000
	140 Move X9, [X9+2240]
	141 Move X0, X8
	142 Move W1, W31
	143 Move X2, [X9]
	144 Call List`1<Object>.get_Item, X0, X1
	145 Compare X0, 0
	146 JumpIfEqual {237}
	147 Move X1, X31
	148 Call Transform.get_position, X0
	149 Move X0, [X21]
	150 Move V9, V0
	151 Move V10, V1
	152 Move V8, V2
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {158}
	156 Call 0x1C17DFC
	157 Move X0, [X21]
	158 Move X8, [X0+184]
	159 Move X0, [X8+8]
	160 Compare X0, 0
	161 JumpIfEqual {237}
	162 Move X8, 0x5D8000
	163 Move X8, [X8+2408]
	164 Move X1, [X8]
	165 Add X8, X31, 40
	166 Call List`1<Object>.GetEnumerator, X0
	167 Move X20, 0x5D8000
	168 Move X20, [X20+2376]
	169 Move S13, 0.5
	170 Move X1, [X20]
	171 Add X0, X31, 40
	172 Call Enumerator<Object>.MoveNext, X0
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {211}
	177 Move X0, [X31+56]
	178 Compare X0, 0
	179 JumpIfEqual {236}
	180 Move X1, X31
	181 Call Transform.get_position, X0
	182 Move V7, [X31]
	183 Subtract S3, S9, S11
	184 NotImplemented "Instruction FCMP not yet implemented."
	185 Subtract S5, S8, S12
	186 Subtract S4, S10, S7
	187 NotImplemented "Instruction FCSEL not yet implemented."
	188 NotImplemented "Instruction FCMP not yet implemented."
	189 Add S6, S11, S9
	190 NotImplemented "Instruction FCSEL not yet implemented."
	191 NotImplemented "Instruction FCMP not yet implemented."
	192 Add S7, S7, S10
	193 NotImplemented "Instruction FCSEL not yet implemented."
	194 NotImplemented "Instruction FCMP not yet implemented."
	195 Add S16, S8, S12
	196 NotImplemented "Instruction FCSEL not yet implemented."
	197 NotImplemented "Instruction FCMP not yet implemented."
	198 NotImplemented "Instruction FCSEL not yet implemented."
	199 NotImplemented "Instruction FCMP not yet implemented."
	200 Subtract S0, S0, S3
	201 NotImplemented "Instruction FCSEL not yet implemented."
	202 Subtract S1, S1, S4
	203 Multiply S11, S0, S13
	204 Subtract S0, S2, S5
	205 Multiply S1, S1, S13
	206 Multiply S12, S0, S13
	207 Add S9, S3, S11
	208 Add S10, S4, S1
	209 Add S8, S5, S12
	210 Move [X31], V1
	211 Move X8, 0x5D8000
	212 Move X8, [X8+2368]
	213 Add X0, X31, 40
	214 Move X1, [X8]
	215 Call Enumerator<Object>.Dispose, X0
	216 Move V0, [X31]
	217 Move [X19], S9
	218 Move [X19+8], S10
	219 Move [X19+8], S8
	220 Move [X19+16], S11
	221 Move X22, [X31+128]
	222 Move X21, [X31+136]
	223 Move [X19+16], S0
	224 Move [X19+24], S12
	225 Move X20, [X31+144]
	226 Move X19, [X31+152]
	227 Move X30, [X31+112]
	228 Move D9, [X31+96]
	229 Move D8, [X31+104]
	230 Move D11, [X31+80]
	231 Move D10, [X31+88]
	232 Move D13, [X31+64]
	233 Move D12, [X31+72]
	234 Add X31, X31, 160
	235 Return X0
	236 Call 0x1C17F20
	237 Call 0x1C17F20
	238 Move X21, X0
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Move X0, X21
	241 Call 0x3EB2AD0
	242 Move X20, [X0]
	243 Call 0x3EB2AE0
	244 Move X8, 0x5D8000
	245 Move X8, [X8+2368]
	246 Add X0, X31, 40
	247 Move X1, [X8]
	248 Call Enumerator<Object>.Dispose, X0
	249 Compare X20, 0
	250 JumpIfEqual {216}
	251 Move X0, X20
	252 Call 0x1C17F18
	253 Move X20, X31
	254 Move X21, X0
	255 Move X8, 0x5D8000
	256 Move X8, [X8+2368]
	257 Move X1, [X8]
	258 Add X0, X31, 40
	259 Call Enumerator<Object>.Dispose, X0
	260 Compare X20, 0
	261 JumpIfNotEqual {264}
	262 Move X0, X21
	263 Call 0x1D2D690
	264 Move X0, X20
	265 Call 0x1C17F18
	266 Call 0x1991590

Method: UnityEngine.Bounds GetBounds(System.Collections.Generic.List`1<UnityEngine.Renderer> renderers)

Disassembly:
	0x03B237A0 MOV X0, X19
	0x03B237A4 MOV W2, W31
	0x03B237A8 BL 0x1C5C788
	0x03B237AC B 0x3B237BC
	0x03B237B0 LDRSW X9, [X10]
	0x03B237B4 ADD X8, X8, X9, 0x4, LSL
	0x03B237B8 ADD X0, X8, 0x138
	0x03B237BC LDP X8, X1, [X0]
	0x03B237C0 MOV X0, X19
	0x03B237C4 BLR X8
	0x03B237C8 CBNZ X20, 0x3B237F0
	0x03B237CC LDP X20, X19, [X31 + 0x30]
	0x03B237D0 LDP X22, X21, [X31 + 0x20]
	0x03B237D4 LDP X30, X23, [X31 + 0x10]
	0x03B237D8 ADD X31, X31, 0x40
	0x03B237DC RET
	0x03B237E0 BL 0x1C171E0
	0x03B237E4 BL 0x1C16F20
	0x03B237E8 BL 0x1C16F20
	0x03B237EC BL 0x1C16F20
	0x03B237F0 MOV X0, X20
	0x03B237F4 BL 0x1C16F18
	0x03B237F8 B 0x3B2380C
	0x03B237FC B 0x3B2380C
	0x03B23800 B 0x3B2380C
	0x03B23804 B 0x3B2380C
	0x03B23808 B 0x3B2380C
	0x03B2380C CMP W1, 0x1
	0x03B23810 B.NE 0x3B23824
	0x03B23814 BL 0x3EB1AD0
	0x03B23818 LDR X20, [X0]
	0x03B2381C BL 0x3EB1AE0
	0x03B23820 B 0x3B2375C
	0x03B23824 STR X0, [X31 + 0x8]
	0x03B23828 MOV X20, X31
	0x03B2382C B 0x3B23834
	0x03B23830 STR X0, [X31 + 0x8]
	0x03B23834 LDR X1, [X21]
	0x03B23838 MOV X0, X19
	0x03B2383C BL 0x1C16E00
	0x03B23840 MOV X19, X0
	0x03B23844 CBZ X0, 0x3B238A0
	0x03B23848 LDR X8, [X19]
	0x03B2384C LDR X1, [X21]
	0x03B23850 LDRH W9, [X8 + 0x12E]
	0x03B23854 CBZ X9, 0x3B23878
	0x03B23858 LDR X10, [X8 + 0xB0]
	0x03B2385C ADD X10, X10, 0x8
	0x03B23860 LDUR X11, [X10 - 0x8]
	0x03B23864 CMP X11, X1
	0x03B23868 B.EQ 0x3B23888
	0x03B2386C SUBS X9, X9, 0x1
	0x03B23870 ADD X10, X10, 0x10
	0x03B23874 B.NE 0x3B23860
	0x03B23878 MOV X0, X19
	0x03B2387C MOV W2, W31
	0x03B23880 BL 0x1C5C788
	0x03B23884 B 0x3B23894
	0x03B23888 LDRSW X9, [X10]
	0x03B2388C ADD X8, X8, X9, 0x4, LSL
	0x03B23890 ADD X0, X8, 0x138
	0x03B23894 LDP X8, X1, [X0]
	0x03B23898 MOV X0, X19
	0x03B2389C BLR X8
	0x03B238A0 CBNZ X20, 0x3B238AC
	0x03B238A4 LDR X0, [X31 + 0x8]
	0x03B238A8 BL 0x1D2C690
	0x03B238AC MOV X0, X20
	0x03B238B0 BL 0x1C16F18
	0x03B238B4 BL 0x1990590
	0x03B238B8 STR X30, [X31 - 0x40]!
	0x03B238BC STP X24, X23, [X31 + 0x10]
	0x03B238C0 STP X22, X21, [X31 + 0x20]
	0x03B238C4 STP X20, X19, [X31 + 0x30]
	0x03B238C8 ADRP X22, 0x8BF000
	0x03B238CC LDRB W8, [X22 + 0x749]
	0x03B238D0 MOV W20, W2
	0x03B238D4 MOV W21, W1
	0x03B238D8 MOV X19, X0
	0x03B238DC TBNZ X8, 0x0, 0x3B2390C
	0x03B238E0 ADRP X0, 0x5D0000
	0x03B238E4 LDR X0, [X0 + 0xE00]
	0x03B238E8 BL 0x1C16CF4
	0x03B238EC ADRP X0, 0x5D0000
	0x03B238F0 LDR X0, [X0 + 0xE18]
	0x03B238F4 BL 0x1C16CF4
	0x03B238F8 ADRP X0, 0x5D2000
	0x03B238FC LDR X0, [X0 + 0x638]
	0x03B23900 BL 0x1C16CF4
	0x03B23904 MOVZ W8, 0x1
	0x03B23908 STRB W8, [X22 + 0x749]
	0x03B2390C CBZ X19, 0x3B23B04
	0x03B23910 MOV X0, X19
	0x03B23914 MOV W1, W21
	0x03B23918 MOV X2, X31
	0x03B2391C BL 0x3C35770
	0x03B23920 MOV X0, X19
	0x03B23924 MOV X1, X31
	0x03B23928 BL 0x3C396B0
	0x03B2392C ORR W1, W0, W20, 0x0
	0x03B23930 MOV X0, X19
	0x03B23934 MOV X2, X31
	0x03B23938 BL 0x3C396EC
	0x03B2393C MOV X0, X19
	0x03B23940 MOV X1, X31
	0x03B23944 BL 0x3C356F8
	0x03B23948 CBZ X0, 0x3B23B04
	0x03B2394C ADRP X22, 0x5D0000
	0x03B23950 LDR X22, [X22 + 0xE00]
	0x03B23954 MOV X1, X31
	0x03B23958 BL 0x3C4100C
	0x03B2395C MOV X19, X0
	0x03B23960 CBZ X0, 0x3B23B08
	0x03B23964 ADRP X23, 0x5D0000
	0x03B23968 ADRP X24, 0x5D2000
	0x03B2396C LDR X23, [X23 + 0xE18]
	0x03B23970 LDR X24, [X24 + 0x638]
	0x03B23974 LDR X8, [X19]
	0x03B23978 LDR X1, [X23]
	0x03B2397C LDRH W9, [X8 + 0x12E]
	0x03B23980 CBZ X9, 0x3B239A4
	0x03B23984 LDR X10, [X8 + 0xB0]
	0x03B23988 ADD X10, X10, 0x8
	0x03B2398C LDUR X11, [X10 - 0x8]
	0x03B23990 CMP X11, X1
	0x03B23994 B.EQ 0x3B239B4
	0x03B23998 SUBS X9, X9, 0x1
	0x03B2399C ADD X10, X10, 0x10
	0x03B239A0 B.NE 0x3B2398C
	0x03B239A4 MOV X0, X19
	0x03B239A8 MOV W2, W31
	0x03B239AC BL 0x1C5C788
	0x03B239B0 B 0x3B239C0
	0x03B239B4 LDRSW X9, [X10]
	0x03B239B8 ADD X8, X8, X9, 0x4, LSL
	0x03B239BC ADD X0, X8, 0x138
	0x03B239C0 LDP X8, X1, [X0]
	0x03B239C4 MOV X0, X19
	0x03B239C8 BLR X8
	0x03B239CC TBZ X0, 0x0, 0x3B23A74
	0x03B239D0 LDR X8, [X19]
	0x03B239D4 LDR X1, [X23]
	0x03B239D8 LDRH W9, [X8 + 0x12E]
	0x03B239DC CBZ X9, 0x3B23A00
	0x03B239E0 LDR X10, [X8 + 0xB0]
	0x03B239E4 ADD X10, X10, 0x8
	0x03B239E8 LDUR X11, [X10 - 0x8]
	0x03B239EC CMP X11, X1
	0x03B239F0 B.EQ 0x3B23A10
	0x03B239F4 SUBS X9, X9, 0x1
	0x03B239F8 ADD X10, X10, 0x10
	0x03B239FC B.NE 0x3B239E8
	0x03B23A00 MOVZ W2, 0x1
	0x03B23A04 MOV X0, X19
	0x03B23A08 BL 0x1C5C788
	0x03B23A0C B 0x3B23A20
	0x03B23A10 LDR W9, [X10]
	0x03B23A14 ADD W9, W9, 0x1
	0x03B23A18 ADD X8, X8, W9, 0x4, SXTW
	0x03B23A1C ADD X0, X8, 0x138
	0x03B23A20 LDP X8, X1, [X0]
	0x03B23A24 MOV X0, X19
	0x03B23A28 BLR X8
	0x03B23A2C CBZ X0, 0x3B23B00
	0x03B23A30 LDR X8, [X0]
	0x03B23A34 LDR X1, [X24]
	0x03B23A38 LDRB W10, [X8 + 0x130]
	0x03B23A3C LDRB W9, [X1 + 0x130]
	0x03B23A40 CMP W10, W9
	0x03B23A44 B.CC 0x3B23AFC
	0x03B23A48 LDR X8, [X8 + 0xC8]
	0x03B23A4C ADD X8, X8, X9, 0x3, LSL
	0x03B23A50 LDUR X8, [X8 - 0x8]
	0x03B23A54 CMP X8, X1
	0x03B23A58 B.NE 0x3B23AFC
	0x03B23A5C MOV X1, X31
	0x03B23A60 BL 0x3C32ECC
	0x03B23A64 MOV W1, W21
	0x03B23A68 MOV W2, W20
	0x03B23A6C BL 0x3B238B8
	0x03B23A70 B 0x3B23974
	0x03B23A74 MOV X20, X31
	0x03B23A78 LDR X1, [X22]
	0x03B23A7C MOV X0, X19
	0x03B23A80 BL 0x1C16E00
	0x03B23A84 CBZ X0, 0x3B23AE4
	0x03B23A88 LDR X8, [X0]
	0x03B23A8C LDR X1, [X22]
	0x03B23A90 MOV X19, X0
	0x03B23A94 LDRH W9, [X8 + 0x12E]
	0x03B23A98 CBZ X9, 0x3B23ABC
	0x03B23A9C LDR X10, [X8 + 0xB0]
	0x03B23AA0 ADD X10, X10, 0x8
	0x03B23AA4 LDUR X11, [X10 - 0x8]
	0x03B23AA8 CMP X11, X1
	0x03B23AAC B.EQ 0x3B23ACC
	0x03B23AB0 SUBS X9, X9, 0x1
	0x03B23AB4 ADD X10, X10, 0x10
	0x03B23AB8 B.NE 0x3B23AA4
	0x03B23ABC MOV X0, X19
	0x03B23AC0 MOV W2, W31
	0x03B23AC4 BL 0x1C5C788
	0x03B23AC8 B 0x3B23AD8
	0x03B23ACC LDRSW X9, [X10]
	0x03B23AD0 ADD X8, X8, X9, 0x4, LSL
	0x03B23AD4 ADD X0, X8, 0x138
	0x03B23AD8 LDP X8, X1, [X0]
	0x03B23ADC MOV X0, X19
	0x03B23AE0 BLR X8
	0x03B23AE4 CBNZ X20, 0x3B23B0C
	0x03B23AE8 LDP X20, X19, [X31 + 0x30]
	0x03B23AEC LDP X22, X21, [X31 + 0x20]
	0x03B23AF0 LDP X24, X23, [X31 + 0x10]
	0x03B23AF4 LDR X30, [X31], #0x40
	0x03B23AF8 RET
	0x03B23AFC BL 0x1C171E0
	0x03B23B00 BL 0x1C16F20
	0x03B23B04 BL 0x1C16F20
	0x03B23B08 BL 0x1C16F20
	0x03B23B0C MOV X0, X20
	0x03B23B10 BL 0x1C16F18
	0x03B23B14 B 0x3B23B28
	0x03B23B18 B 0x3B23B28
	0x03B23B1C B 0x3B23B28
	0x03B23B20 B 0x3B23B28
	0x03B23B24 B 0x3B23B28
	0x03B23B28 MOV X21, X0
	0x03B23B2C CMP W1, 0x1
	0x03B23B30 B.NE 0x3B23B48
	0x03B23B34 MOV X0, X21
	0x03B23B38 BL 0x3EB1AD0
	0x03B23B3C LDR X20, [X0]
	0x03B23B40 BL 0x3EB1AE0
	0x03B23B44 B 0x3B23A78
	0x03B23B48 MOV X20, X31
	0x03B23B4C B 0x3B23B54
	0x03B23B50 MOV X21, X0
	0x03B23B54 LDR X1, [X22]
	0x03B23B58 MOV X0, X19
	0x03B23B5C BL 0x1C16E00
	0x03B23B60 MOV X19, X0
	0x03B23B64 CBZ X0, 0x3B23BC0
	0x03B23B68 LDR X8, [X19]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+136], X25
	012 Move [X31+144], X24
	013 Move [X31+152], X23
	014 Move [X31+160], X22
	015 Move [X31+168], X21
	016 Move [X31+176], X20
	017 Move [X31+184], X19
	018 Move X20, 0x8C0000
	019 Move W9, [X20+1858]
	020 Move X21, X0
	021 Move X19, X8
	022 Move TEMP, X9
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0x637000
	027 Move X0, [X0+3000]
	028 Call 0x1C17CF4
	029 Move X0, 0x637000
	030 Move X0, [X0+3008]
	031 Call 0x1C17CF4
	032 Move X0, 0x637000
	033 Move X0, [X0+3016]
	034 Call 0x1C17CF4
	035 Move X0, 0x637000
	036 Move X0, [X0+3024]
	037 Call 0x1C17CF4
	038 Move X0, 0x5D4000
	039 Move X0, [X0+4056]
	040 Call 0x1C17CF4
	041 Move X0, 0x5D4000
	042 Move X0, [X0+4064]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+1858], W8
	046 Move [X31+32], X31
	047 Move [X31+40], X31
	048 Move [X31+48], X31
	049 Compare X21, 0
	050 JumpIfEqual {250}
	051 Move W8, [X21+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, 0x5D4000
	054 Move X8, [X8+4064]
	055 Move X0, X21
	056 Move W1, W31
	057 Move X2, [X8]
	058 Call List`1<Object>.get_Item, X0, X1
	059 Compare X0, 0
	060 JumpIfEqual {250}
	061 Move X1, X31
	062 Call Component.get_transform, X0
	063 Compare X0, 0
	064 JumpIfEqual {250}
	065 Move X25, 0x637000
	066 Move X25, [X25+3024]
	067 Move X1, X31
	068 Call Transform.get_position, X0
	069 Move X23, 0x8B6000
	070 Move W8, [X23+1923]
	071 Move V10, V2
	072 Move [X31], S0
	073 Move [X31+8], S1
	074 Compare W8, 0
	075 JumpIfNotEqual {81}
	076 Move X0, 0x5D1000
	077 Move X0, [X0+1440]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X23+1923], W8
	081 Move X20, 0x5D1000
	082 Move X20, [X20+1440]
	083 Move X24, 0x637000
	084 Move X22, 0x637000
	085 Move S14, 0.5
	086 Move X8, [X20]
	087 Move X0, X21
	088 Move X8, [X8+184]
	089 Move X24, [X24+3008]
	090 Move X22, [X22+3000]
	091 Move X1, [X25]
	092 Move S0, [X8]
	093 Move S1, [X8+4]
	094 Move V2, [X8+8]
	095 Add X8, X31, 8
	096 Multiply S13, S0, S14
	097 Multiply S12, S1, S14
	098 Multiply S11, S2, S14
	099 Call List`1<Object>.GetEnumerator, X0
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 Move X8, [X31+24]
	102 Move X9, -50565120
	103 Move V15, [X9+3872]
	104 Move [X31+2], V0
	105 Move [X31+48], X8
	106 Move W25, 1
	107 Move X1, [X24]
	108 Add X0, X31, 32
	109 Call Enumerator<Object>.MoveNext, X0
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {217}
	114 Move X21, [X31+48]
	115 Compare X21, 0
	116 JumpIfEqual {249}
	117 Add X8, X31, 8
	118 Move X0, X21
	119 Move X1, X31
	120 Call Renderer.get_bounds, X0
	121 Move V8, [X31+20]
	122 Move W8, [X23+1923]
	123 Move V9, [X31+24]
	124 Compare W8, 0
	125 JumpIfNotEqual {129}
	126 Move X0, X20
	127 Call 0x1C17CF4
	128 Move [X23+1923], W25
	129 Move X8, [X20]
	130 Add S2, S8, S8
	131 Add V3, V9, V9
	132 Move X8, [X8+184]
	133 Move V0, [X8]
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 Subtract S0, S2, S0
	136 Subtract V1, V3, V1
	137 Multiply S0, S0, S0
	138 NotImplemented "Instruction INVALID not yet implemented."
	139 Add S0, S0, S1
	140 Move S1, V1.S[1]
	141 Add S0, S1, S0
	142 NotImplemented "Instruction FCMP not yet implemented."
	143 Add X8, X31, 8
	144 Move X0, X21
	145 Move X1, X31
	146 Call Renderer.get_bounds, X0
	147 Move S0, [X31+8]
	148 Move S1, [X31+12]
	149 Move S2, [X31+16]
	150 Move S3, [X31+20]
	151 Move S17, [X31]
	152 Move S18, [X31+4]
	153 Move S4, [X31+24]
	154 Move S5, [X31+28]
	155 Subtract S16, S10, S11
	156 Subtract S20, S0, S3
	157 Subtract S6, S17, S13
	158 Subtract S7, S18, S12
	159 Subtract S21, S1, S4
	160 NotImplemented "Instruction FCMP not yet implemented."
	161 Subtract S22, S2, S5
	162 Add S0, S0, S3
	163 NotImplemented "Instruction FCSEL not yet implemented."
	164 NotImplemented "Instruction FCMP not yet implemented."
	165 Add S17, S13, S17
	166 Add S1, S1, S4
	167 NotImplemented "Instruction FCSEL not yet implemented."
	168 NotImplemented "Instruction FCMP not yet implemented."
	169 Add S18, S12, S18
	170 Add S2, S2, S5
	171 NotImplemented "Instruction FCSEL not yet implemented."
	172 NotImplemented "Instruction FCMP not yet implemented."
	173 Add S19, S11, S10
	174 NotImplemented "Instruction FCSEL not yet implemented."
	175 NotImplemented "Instruction FCMP not yet implemented."
	176 NotImplemented "Instruction FCSEL not yet implemented."
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 Subtract S6, S6, S3
	179 NotImplemented "Instruction FCSEL not yet implemented."
	180 Subtract S7, S7, S4
	181 Multiply S6, S6, S14
	182 Subtract S16, S16, S5
	183 Multiply S7, S7, S14
	184 Add S3, S3, S6
	185 Multiply S16, S16, S14
	186 Add S4, S4, S7
	187 Subtract S17, S3, S6
	188 Add S3, S6, S3
	189 Add S5, S5, S16
	190 Subtract S6, S4, S7
	191 NotImplemented "Instruction FCMP not yet implemented."
	192 Add S4, S7, S4
	193 Subtract S7, S5, S16
	194 NotImplemented "Instruction FCSEL not yet implemented."
	195 NotImplemented "Instruction FCMP not yet implemented."
	196 NotImplemented "Instruction FCSEL not yet implemented."
	197 NotImplemented "Instruction FCMP not yet implemented."
	198 NotImplemented "Instruction FCSEL not yet implemented."
	199 NotImplemented "Instruction FCMP not yet implemented."
	200 Add S5, S16, S5
	201 NotImplemented "Instruction FCSEL not yet implemented."
	202 NotImplemented "Instruction FCMP not yet implemented."
	203 NotImplemented "Instruction FCSEL not yet implemented."
	204 NotImplemented "Instruction FCMP not yet implemented."
	205 Subtract S0, S0, S17
	206 NotImplemented "Instruction FCSEL not yet implemented."
	207 Subtract S1, S1, S6
	208 Multiply S13, S0, S14
	209 Subtract S0, S2, S7
	210 Multiply S12, S1, S14
	211 Multiply S11, S0, S14
	212 Add S1, S17, S13
	213 Add S0, S6, S12
	214 Add S10, S7, S11
	215 Move [X31], S1
	216 Move [X31+8], S0
	217 Move X1, [X22]
	218 Add X0, X31, 32
	219 Call Enumerator<Object>.Dispose, X0
	220 Move V1, [X31]
	221 Move V0, [X31+4]
	222 Move [X19+8], S10
	223 Move [X19+16], S13
	224 Move [X19+16], S12
	225 Move [X19+24], S11
	226 Move [X19], S1
	227 Move [X19+8], S0
	228 Move [X19], X31
	229 Move [X19+8], X31
	230 Move [X19+16], X31
	231 Move X20, [X31+176]
	232 Move X19, [X31+184]
	233 Move X22, [X31+160]
	234 Move X21, [X31+168]
	235 Move X24, [X31+144]
	236 Move X23, [X31+152]
	237 Move X30, [X31+128]
	238 Move X25, [X31+136]
	239 Move D9, [X31+112]
	240 Move D8, [X31+120]
	241 Move D11, [X31+96]
	242 Move D10, [X31+104]
	243 Move D13, [X31+80]
	244 Move D12, [X31+88]
	245 Move D15, [X31+64]
	246 Move D14, [X31+72]
	247 Add X31, X31, 192
	248 Return X0
	249 Call 0x1C17F20
	250 Call 0x1C17F20
	251 Move X20, X0
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X0, X20
	254 Call 0x3EB2AD0
	255 Move X21, [X0]
	256 Call 0x3EB2AE0
	257 Move X1, [X22]
	258 Add X0, X31, 32
	259 Call Enumerator<Object>.Dispose, X0
	260 Compare X21, 0
	261 JumpIfEqual {220}
	262 Move X0, X21
	263 Call 0x1C17F18
	264 Move X21, X31
	265 Move X20, X0
	266 Move X1, [X22]
	267 Add X0, X31, 32
	268 Call Enumerator<Object>.Dispose, X0
	269 Compare X21, 0
	270 JumpIfNotEqual {273}
	271 Move X0, X20
	272 Call 0x1D2D690
	273 Move X0, X21
	274 Call 0x1C17F18
	275 Call 0x1991590

Method: UnityEngine.Bounds GetBounds(System.Collections.Generic.List`1<T> colliders)

Disassembly:
	0x021A108C TBNZ X8, 0x0, 0x21A1094
	0x021A1090 BL 0x1C5C684
	0x021A1094 LDR X8, [X0 + 0xB8]
	0x021A1098 LDR X0, [X8]
	0x021A109C LDP X30, X19, [X31], #0x10
	0x021A10A0 RET
	0x021A10A4 STP X30, X19, [X31 - 0x10]!
	0x021A10A8 LDR X8, [X0 + 0x38]
	0x021A10AC MOV X19, X0
	0x021A10B0 CBNZ X8, 0x21A10C0
	0x021A10B4 MOV X0, X19
	0x021A10B8 BL 0x1C5C6E0
	0x021A10BC LDR X8, [X19 + 0x38]
	0x021A10C0 LDR X0, [X8 + 0x8]
	0x021A10C4 LDRB W8, [X0 + 0x135]
	0x021A10C8 TBNZ X8, 0x0, 0x21A10D0
	0x021A10CC BL 0x1C5C684
	0x021A10D0 LDR W8, [X0 + 0xE0]
	0x021A10D4 CBNZ W8, 0x21A10DC
	0x021A10D8 BL 0x1C16DFC
	0x021A10DC LDR X8, [X19 + 0x38]
	0x021A10E0 LDR X0, [X8 + 0x8]
	0x021A10E4 LDRB W8, [X0 + 0x135]
	0x021A10E8 TBNZ X8, 0x0, 0x21A10F0
	0x021A10EC BL 0x1C5C684
	0x021A10F0 LDR X8, [X0 + 0xB8]
	0x021A10F4 LDR X0, [X8]
	0x021A10F8 LDP X30, X19, [X31], #0x10
	0x021A10FC RET
	0x021A1100 STP X30, X19, [X31 - 0x10]!
	0x021A1104 LDR X8, [X0 + 0x38]
	0x021A1108 MOV X19, X0
	0x021A110C CBNZ X8, 0x21A111C
	0x021A1110 MOV X0, X19
	0x021A1114 BL 0x1C5C6E0
	0x021A1118 LDR X8, [X19 + 0x38]
	0x021A111C LDR X0, [X8 + 0x8]
	0x021A1120 LDRB W8, [X0 + 0x135]
	0x021A1124 TBNZ X8, 0x0, 0x21A112C
	0x021A1128 BL 0x1C5C684
	0x021A112C LDR W8, [X0 + 0xE0]
	0x021A1130 CBNZ W8, 0x21A1138
	0x021A1134 BL 0x1C16DFC
	0x021A1138 LDR X8, [X19 + 0x38]
	0x021A113C LDR X0, [X8 + 0x8]
	0x021A1140 LDRB W8, [X0 + 0x135]
	0x021A1144 TBNZ X8, 0x0, 0x21A114C
	0x021A1148 BL 0x1C5C684
	0x021A114C LDR X8, [X0 + 0xB8]
	0x021A1150 LDR X0, [X8]
	0x021A1154 LDP X30, X19, [X31], #0x10
	0x021A1158 RET
	0x021A115C STP X30, X19, [X31 - 0x10]!
	0x021A1160 LDR X8, [X0 + 0x38]
	0x021A1164 MOV X19, X0
	0x021A1168 CBNZ X8, 0x21A1178
	0x021A116C MOV X0, X19
	0x021A1170 BL 0x1C5C6E0
	0x021A1174 LDR X8, [X19 + 0x38]
	0x021A1178 LDR X0, [X8 + 0x8]
	0x021A117C LDRB W8, [X0 + 0x135]
	0x021A1180 TBNZ X8, 0x0, 0x21A1188
	0x021A1184 BL 0x1C5C684
	0x021A1188 LDR W8, [X0 + 0xE0]
	0x021A118C CBNZ W8, 0x21A1194
	0x021A1190 BL 0x1C16DFC
	0x021A1194 LDR X8, [X19 + 0x38]
	0x021A1198 LDR X0, [X8 + 0x8]
	0x021A119C LDRB W8, [X0 + 0x135]
	0x021A11A0 TBNZ X8, 0x0, 0x21A11A8
	0x021A11A4 BL 0x1C5C684
	0x021A11A8 LDR X8, [X0 + 0xB8]
	0x021A11AC LDR X0, [X8]
	0x021A11B0 LDP X30, X19, [X31], #0x10
	0x021A11B4 RET
	0x021A11B8 STP X30, X23, [X31 - 0x30]!
	0x021A11BC STP X22, X21, [X31 + 0x10]
	0x021A11C0 STP X20, X19, [X31 + 0x20]
	0x021A11C4 LDR X8, [X2 + 0x38]
	0x021A11C8 MOV X19, X2
	0x021A11CC MOV X21, X1
	0x021A11D0 MOV W20, W0
	0x021A11D4 CBNZ X8, 0x21A1200
	0x021A11D8 ADRP X0, 0x1F7A000
	0x021A11DC LDR X0, [X0 + 0x880]
	0x021A11E0 BL 0x1C16CF4
	0x021A11E4 ADRP X0, 0x1F7A000
	0x021A11E8 LDR X0, [X0 + 0x888]
	0x021A11EC BL 0x1C16CF4
	0x021A11F0 LDR X8, [X19 + 0x38]
	0x021A11F4 CBNZ X8, 0x21A1200
	0x021A11F8 MOV X0, X19
	0x021A11FC BL 0x1C5C6E0
	0x021A1200 CBZ X21, 0x21A12C4
	0x021A1204 ADRP X23, 0x1F7A000
	0x021A1208 LDR X23, [X23 + 0x880]
	0x021A120C LDR X0, [X23]
	0x021A1210 LDR W8, [X0 + 0xE0]
	0x021A1214 CBNZ W8, 0x21A1220
	0x021A1218 BL 0x1C16DFC
	0x021A121C LDR X0, [X23]
	0x021A1220 LDR X8, [X19 + 0x38]
	0x021A1224 LDR X9, [X0 + 0xB8]
	0x021A1228 LDR X8, [X8 + 0x8]
	0x021A122C LDR X22, [X9 + 0x8]
	0x021A1230 LDRB W10, [X8 + 0x135]
	0x021A1234 TBNZ X10, 0x0, 0x21A1244
	0x021A1238 MOV X0, X8
	0x021A123C BL 0x1C5C684
	0x021A1240 MOV X8, X0
	0x021A1244 MOV X0, X8
	0x021A1248 BL 0x1C16F10
	0x021A124C LDR X8, [X19 + 0x38]
	0x021A1250 MOV X1, X21
	0x021A1254 MOV X19, X0
	0x021A1258 LDR X2, [X8 + 0x10]
	0x021A125C BL 0x25C8FC8
	0x021A1260 CBZ X22, 0x21A1300
	0x021A1264 ADRP X8, 0x1F7A000
	0x021A1268 LDR X8, [X8 + 0x888]
	0x021A126C MOV X0, X22
	0x021A1270 MOV W1, W20
	0x021A1274 MOV X2, X19
	0x021A1278 LDR X3, [X8]
	0x021A127C BL 0x2B1AE98
	0x021A1280 MOVZ W8, 0x89F6
	0x021A1284 MOVK W8, 0x77380000
	0x021A1288 CMP W20, W8
	0x021A128C B.NE 0x21A12B4
	0x021A1290 LDR X0, [X23]
	0x021A1294 LDR W8, [X0 + 0xE0]
	0x021A1298 CBNZ W8, 0x21A12A0
	0x021A129C BL 0x1C16DFC
	0x021A12A0 LDP X20, X19, [X31 + 0x20]
	0x021A12A4 LDP X22, X21, [X31 + 0x10]
	0x021A12A8 MOV X0, X31
	0x021A12AC LDP X30, X23, [X31], #0x30
	0x021A12B0 B 0x34B2B14
	0x021A12B4 LDP X20, X19, [X31 + 0x20]
	0x021A12B8 LDP X22, X21, [X31 + 0x10]
	0x021A12BC LDP X30, X23, [X31], #0x30
	0x021A12C0 RET
	0x021A12C4 ADRP X0, 0x1F52000
	0x021A12C8 LDR X0, [X0 + 0x7D0]
	0x021A12CC BL 0x1C16D08
	0x021A12D0 BL 0x1C16F10
	0x021A12D4 MOV X20, X0
	0x021A12D8 ADRP X0, 0x1F7A000
	0x021A12DC LDR X0, [X0 + 0x890]
	0x021A12E0 BL 0x1C16D08
	0x021A12E4 MOV X1, X0
	0x021A12E8 MOV X0, X20
	0x021A12EC MOV X2, X31
	0x021A12F0 BL 0x33B2C70
	0x021A12F4 MOV X0, X20
	0x021A12F8 MOV X1, X19
	0x021A12FC BL 0x1C16DEC
	0x021A1300 BL 0x1C16F20
	0x021A1304 STP X30, X23, [X31 - 0x30]!
	0x021A1308 STP X22, X21, [X31 + 0x10]
	0x021A130C STP X20, X19, [X31 + 0x20]
	0x021A1310 LDR X8, [X2 + 0x38]
	0x021A1314 MOV X19, X2
	0x021A1318 MOV X21, X1
	0x021A131C MOV W20, W0
	0x021A1320 CBNZ X8, 0x21A134C
	0x021A1324 ADRP X0, 0x1F7A000
	0x021A1328 LDR X0, [X0 + 0x880]
	0x021A132C BL 0x1C16CF4
	0x021A1330 ADRP X0, 0x1F7A000
	0x021A1334 LDR X0, [X0 + 0x888]
	0x021A1338 BL 0x1C16CF4
	0x021A133C LDR X8, [X19 + 0x38]
	0x021A1340 CBNZ X8, 0x21A134C
	0x021A1344 MOV X0, X19
	0x021A1348 BL 0x1C5C6E0
	0x021A134C CBZ X21, 0x21A1414
	0x021A1350 ADRP X23, 0x1F7A000
	0x021A1354 LDR X23, [X23 + 0x880]
	0x021A1358 LDR X0, [X23]
	0x021A135C LDR W8, [X0 + 0xE0]
	0x021A1360 CBNZ W8, 0x21A136C
	0x021A1364 BL 0x1C16DFC
	0x021A1368 LDR X0, [X23]
	0x021A136C LDR X8, [X19 + 0x38]
	0x021A1370 LDR X9, [X0 + 0xB8]
	0x021A1374 LDR X8, [X8 + 0x8]
	0x021A1378 LDR X22, [X9 + 0x8]
	0x021A137C LDRB W10, [X8 + 0x135]
	0x021A1380 TBNZ X10, 0x0, 0x21A1390
	0x021A1384 MOV X0, X8
	0x021A1388 BL 0x1C5C684
	0x021A138C MOV X8, X0
	0x021A1390 MOV X0, X8
	0x021A1394 BL 0x1C16F10
	0x021A1398 LDR X8, [X19 + 0x38]
	0x021A139C MOV X1, X21
	0x021A13A0 MOV X19, X0
	0x021A13A4 LDR X2, [X8 + 0x10]
	0x021A13A8 LDR X8, [X2]
	0x021A13AC BLR X8
	0x021A13B0 CBZ X22, 0x21A1450
	0x021A13B4 ADRP X8, 0x1F7A000
	0x021A13B8 LDR X8, [X8 + 0x888]
	0x021A13BC MOV X0, X22
	0x021A13C0 MOV W1, W20
	0x021A13C4 MOV X2, X19
	0x021A13C8 LDR X3, [X8]
	0x021A13CC BL 0x2B1AE98
	0x021A13D0 MOVZ W8, 0x89F6
	0x021A13D4 MOVK W8, 0x77380000
	0x021A13D8 CMP W20, W8
	0x021A13DC B.NE 0x21A1404
	0x021A13E0 LDR X0, [X23]
	0x021A13E4 LDR W8, [X0 + 0xE0]
	0x021A13E8 CBNZ W8, 0x21A13F0
	0x021A13EC BL 0x1C16DFC
	0x021A13F0 LDP X20, X19, [X31 + 0x20]
	0x021A13F4 LDP X22, X21, [X31 + 0x10]
	0x021A13F8 MOV X0, X31
	0x021A13FC LDP X30, X23, [X31], #0x30
	0x021A1400 B 0x34B2B14
	0x021A1404 LDP X20, X19, [X31 + 0x20]
	0x021A1408 LDP X22, X21, [X31 + 0x10]
	0x021A140C LDP X30, X23, [X31], #0x30
	0x021A1410 RET

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+144], X24
	012 Move [X31+152], X23
	013 Move [X31+160], X22
	014 Move [X31+168], X21
	015 Move [X31+176], X20
	016 Move [X31+184], X19
	017 Move X9, [X1+56]
	018 Move X20, X1
	019 Move X22, X0
	020 Move X19, X8
	021 Compare X9, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X20
	024 Call 0x1C5D6E0
	025 Move [X31+32], X31
	026 Move [X31+40], X31
	027 Move [X31+48], X31
	028 Compare X22, 0
	029 JumpIfEqual {231}
	030 Move W8, [X22+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X20+56]
	033 Move X0, X22
	034 Move W1, W31
	035 Move X2, [X8+16]
	036 Call List`1<Object>.get_Item, X0, X1
	037 Compare X0, 0
	038 JumpIfEqual {231}
	039 Move X1, X31
	040 Call Component.get_transform, X0
	041 Compare X0, 0
	042 JumpIfEqual {231}
	043 Move X1, X31
	044 Call Transform.get_position, X0
	045 Move X23, 0x2238000
	046 Move W8, [X23+1923]
	047 Move V10, V2
	048 Move [X31+136], S0
	049 Move [X31+144], S1
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0x1F53000
	053 Move X0, [X0+1440]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X23+1923], W8
	057 Move X21, 0x1F53000
	058 Move X21, [X21+1440]
	059 Move X9, [X20+56]
	060 Move S14, 0.5
	061 Move X0, X22
	062 Move X8, [X21]
	063 Move X1, [X9+32]
	064 Move X8, [X8+184]
	065 Move S0, [X8]
	066 Move S1, [X8+4]
	067 Move V2, [X8+8]
	068 Add X8, X31, 8
	069 Multiply S13, S0, S14
	070 Multiply S12, S1, S14
	071 Multiply S11, S2, S14
	072 Call List`1<Object>.GetEnumerator, X0
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move X8, [X31+24]
	075 Move X9, -23818240
	076 Move V15, [X9+3872]
	077 Move [X31+2], V0
	078 Move [X31+48], X8
	079 Move W24, 1
	080 Move X8, [X20+56]
	081 Move X1, [X8+64]
	082 Add X0, X31, 32
	083 Call Enumerator<Object>.MoveNext, X0
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {191}
	088 Move X22, [X31+48]
	089 Compare X22, 0
	090 JumpIfEqual {230}
	091 Add X8, X31, 8
	092 Move X0, X22
	093 Move X1, X31
	094 Call Collider.get_bounds, X0
	095 Move V8, [X31+20]
	096 Move W8, [X23+1923]
	097 Move V9, [X31+24]
	098 Compare W8, 0
	099 JumpIfNotEqual {103}
	100 Move X0, X21
	101 Call 0x1C17CF4
	102 Move [X23+1923], W24
	103 Move X8, [X21]
	104 Add S2, S8, S8
	105 Add V3, V9, V9
	106 Move X8, [X8+184]
	107 Move V0, [X8]
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 Subtract S0, S2, S0
	110 Subtract V1, V3, V1
	111 Multiply S0, S0, S0
	112 NotImplemented "Instruction INVALID not yet implemented."
	113 Add S0, S0, S1
	114 Move S1, V1.S[1]
	115 Add S0, S1, S0
	116 NotImplemented "Instruction FCMP not yet implemented."
	117 Add X8, X31, 8
	118 Move X0, X22
	119 Move X1, X31
	120 Call Collider.get_bounds, X0
	121 Move S0, [X31+8]
	122 Move S1, [X31+12]
	123 Move S2, [X31+16]
	124 Move S3, [X31+20]
	125 Move S17, [X31+136]
	126 Move S18, [X31+140]
	127 Move S4, [X31+24]
	128 Move S5, [X31+28]
	129 Subtract S16, S10, S11
	130 Subtract S20, S0, S3
	131 Subtract S6, S17, S13
	132 Subtract S7, S18, S12
	133 Subtract S21, S1, S4
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 Subtract S22, S2, S5
	136 Add S0, S0, S3
	137 NotImplemented "Instruction FCSEL not yet implemented."
	138 NotImplemented "Instruction FCMP not yet implemented."
	139 Add S17, S13, S17
	140 Add S1, S1, S4
	141 NotImplemented "Instruction FCSEL not yet implemented."
	142 NotImplemented "Instruction FCMP not yet implemented."
	143 Add S18, S12, S18
	144 Add S2, S2, S5
	145 NotImplemented "Instruction FCSEL not yet implemented."
	146 NotImplemented "Instruction FCMP not yet implemented."
	147 Add S19, S11, S10
	148 NotImplemented "Instruction FCSEL not yet implemented."
	149 NotImplemented "Instruction FCMP not yet implemented."
	150 NotImplemented "Instruction FCSEL not yet implemented."
	151 NotImplemented "Instruction FCMP not yet implemented."
	152 Subtract S6, S6, S3
	153 NotImplemented "Instruction FCSEL not yet implemented."
	154 Subtract S7, S7, S4
	155 Multiply S6, S6, S14
	156 Subtract S16, S16, S5
	157 Multiply S7, S7, S14
	158 Add S3, S3, S6
	159 Multiply S16, S16, S14
	160 Add S4, S4, S7
	161 Subtract S17, S3, S6
	162 Add S3, S6, S3
	163 Add S5, S5, S16
	164 Subtract S6, S4, S7
	165 NotImplemented "Instruction FCMP not yet implemented."
	166 Add S4, S7, S4
	167 Subtract S7, S5, S16
	168 NotImplemented "Instruction FCSEL not yet implemented."
	169 NotImplemented "Instruction FCMP not yet implemented."
	170 NotImplemented "Instruction FCSEL not yet implemented."
	171 NotImplemented "Instruction FCMP not yet implemented."
	172 NotImplemented "Instruction FCSEL not yet implemented."
	173 NotImplemented "Instruction FCMP not yet implemented."
	174 Add S5, S16, S5
	175 NotImplemented "Instruction FCSEL not yet implemented."
	176 NotImplemented "Instruction FCMP not yet implemented."
	177 NotImplemented "Instruction FCSEL not yet implemented."
	178 NotImplemented "Instruction FCMP not yet implemented."
	179 Subtract S0, S0, S17
	180 NotImplemented "Instruction FCSEL not yet implemented."
	181 Subtract S1, S1, S6
	182 Multiply S13, S0, S14
	183 Subtract S0, S2, S7
	184 Multiply S12, S1, S14
	185 Multiply S11, S0, S14
	186 Add S1, S17, S13
	187 Add S0, S6, S12
	188 Add S10, S7, S11
	189 Move [X31+136], S1
	190 Move [X31+144], S0
	191 Move X22, X31
	192 Move W21, 5
	193 Move X8, [X20+56]
	194 Add X0, X31, 32
	195 Move X1, [X8+72]
	196 Call Enumerator<Object>.Dispose, X0
	197 Compare X22, 0
	198 JumpIfNotEqual {232}
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Compare W21, 0
	201 JumpIfNotEqual {213}
	202 Move V1, [X31+136]
	203 Move V0, [X31+140]
	204 Move [X19+8], S10
	205 Move [X19+16], S13
	206 Move [X19+16], S12
	207 Move [X19+24], S11
	208 Move [X19], S1
	209 Move [X19+8], S0
	210 Move [X19], X31
	211 Move [X19+8], X31
	212 Move [X19+16], X31
	213 Move X20, [X31+176]
	214 Move X19, [X31+184]
	215 Move X22, [X31+160]
	216 Move X21, [X31+168]
	217 Move X24, [X31+144]
	218 Move X23, [X31+152]
	219 Move X30, [X31+128]
	220 Move D9, [X31+112]
	221 Move D8, [X31+120]
	222 Move D11, [X31+96]
	223 Move D10, [X31+104]
	224 Move D13, [X31+80]
	225 Move D12, [X31+88]
	226 Move D15, [X31+64]
	227 Move D14, [X31+72]
	228 Add X31, X31, 192
	229 Return X0
	230 Call 0x1C17F20
	231 Call 0x1C17F20
	232 Move X0, X22
	233 Call 0x1C17F18
	234 Move X21, X0
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X0, X21
	237 Call 0x3EB2AD0
	238 Move X22, [X0]
	239 Call 0x3EB2AE0
	240 Move W21, W31
	241 Move X22, X31
	242 Move X21, X0
	243 Move X8, [X20+56]
	244 Move X1, [X8+72]
	245 Add X0, X31, 32
	246 Call Enumerator<Object>.Dispose, X0
	247 Compare X22, 0
	248 JumpIfNotEqual {251}
	249 Move X0, X21
	250 Call 0x1D2D690
	251 Move X0, X22
	252 Call 0x1C17F18
	253 Call 0x1991590

Method: UnityEngine.Bounds GetBounds(System.Collections.Generic.List`1<UnityEngine.Vector3> points)

Disassembly:
	0x03B23B6C LDR X1, [X22]
	0x03B23B70 LDRH W9, [X8 + 0x12E]
	0x03B23B74 CBZ X9, 0x3B23B98
	0x03B23B78 LDR X10, [X8 + 0xB0]
	0x03B23B7C ADD X10, X10, 0x8
	0x03B23B80 LDUR X11, [X10 - 0x8]
	0x03B23B84 CMP X11, X1
	0x03B23B88 B.EQ 0x3B23BA8
	0x03B23B8C SUBS X9, X9, 0x1
	0x03B23B90 ADD X10, X10, 0x10
	0x03B23B94 B.NE 0x3B23B80
	0x03B23B98 MOV X0, X19
	0x03B23B9C MOV W2, W31
	0x03B23BA0 BL 0x1C5C788
	0x03B23BA4 B 0x3B23BB4
	0x03B23BA8 LDRSW X9, [X10]
	0x03B23BAC ADD X8, X8, X9, 0x4, LSL
	0x03B23BB0 ADD X0, X8, 0x138
	0x03B23BB4 LDP X8, X1, [X0]
	0x03B23BB8 MOV X0, X19
	0x03B23BBC BLR X8
	0x03B23BC0 CBNZ X20, 0x3B23BCC
	0x03B23BC4 MOV X0, X21
	0x03B23BC8 BL 0x1D2C690
	0x03B23BCC MOV X0, X20
	0x03B23BD0 BL 0x1C16F18
	0x03B23BD4 BL 0x1990590
	0x03B23BD8 STR X30, [X31 - 0x40]!
	0x03B23BDC STP X24, X23, [X31 + 0x10]
	0x03B23BE0 STP X22, X21, [X31 + 0x20]
	0x03B23BE4 STP X20, X19, [X31 + 0x30]
	0x03B23BE8 ADRP X22, 0x8BF000
	0x03B23BEC LDRB W8, [X22 + 0x74A]
	0x03B23BF0 MOV W20, W2
	0x03B23BF4 MOV W21, W1
	0x03B23BF8 MOV X19, X0
	0x03B23BFC TBNZ X8, 0x0, 0x3B23C2C
	0x03B23C00 ADRP X0, 0x5D0000
	0x03B23C04 LDR X0, [X0 + 0xE00]
	0x03B23C08 BL 0x1C16CF4
	0x03B23C0C ADRP X0, 0x5D0000
	0x03B23C10 LDR X0, [X0 + 0xE18]
	0x03B23C14 BL 0x1C16CF4
	0x03B23C18 ADRP X0, 0x5D2000
	0x03B23C1C LDR X0, [X0 + 0x638]
	0x03B23C20 BL 0x1C16CF4
	0x03B23C24 MOVZ W8, 0x1
	0x03B23C28 STRB W8, [X22 + 0x74A]
	0x03B23C2C CBZ X19, 0x3B23E18
	0x03B23C30 MOV X0, X19
	0x03B23C34 MOV W1, W21
	0x03B23C38 MOV X2, X31
	0x03B23C3C BL 0x3C35770
	0x03B23C40 MOV X0, X19
	0x03B23C44 MOV W1, W20
	0x03B23C48 MOV X2, X31
	0x03B23C4C BL 0x3C396EC
	0x03B23C50 MOV X0, X19
	0x03B23C54 MOV X1, X31
	0x03B23C58 BL 0x3C356F8
	0x03B23C5C CBZ X0, 0x3B23E18
	0x03B23C60 ADRP X22, 0x5D0000
	0x03B23C64 LDR X22, [X22 + 0xE00]
	0x03B23C68 MOV X1, X31
	0x03B23C6C BL 0x3C4100C
	0x03B23C70 MOV X19, X0
	0x03B23C74 CBZ X0, 0x3B23E1C
	0x03B23C78 ADRP X23, 0x5D0000
	0x03B23C7C ADRP X24, 0x5D2000
	0x03B23C80 LDR X23, [X23 + 0xE18]
	0x03B23C84 LDR X24, [X24 + 0x638]
	0x03B23C88 LDR X8, [X19]
	0x03B23C8C LDR X1, [X23]
	0x03B23C90 LDRH W9, [X8 + 0x12E]
	0x03B23C94 CBZ X9, 0x3B23CB8
	0x03B23C98 LDR X10, [X8 + 0xB0]
	0x03B23C9C ADD X10, X10, 0x8
	0x03B23CA0 LDUR X11, [X10 - 0x8]
	0x03B23CA4 CMP X11, X1
	0x03B23CA8 B.EQ 0x3B23CC8
	0x03B23CAC SUBS X9, X9, 0x1
	0x03B23CB0 ADD X10, X10, 0x10
	0x03B23CB4 B.NE 0x3B23CA0
	0x03B23CB8 MOV X0, X19
	0x03B23CBC MOV W2, W31
	0x03B23CC0 BL 0x1C5C788
	0x03B23CC4 B 0x3B23CD4

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x8C0000
	013 Move W9, [X21+1859]
	014 Move X20, X0
	015 Move X19, X8
	016 Move TEMP, X9
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x5D5000
	021 Move X0, [X0+2424]
	022 Call 0x1C17CF4
	023 Move X0, 0x5D5000
	024 Move X0, [X0+2432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1859], W8
	028 Compare X20, 0
	029 JumpIfEqual {100}
	030 Move W8, [X20+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X22, 0x5D5000
	033 Move X22, [X22+2432]
	034 Move X0, X20
	035 Move W1, W31
	036 Move X2, [X22]
	037 Call List`1<Vector3>.get_Item, X0, X1
	038 Move W8, [X20+24]
	039 Move V9, V0
	040 Move V8, V1
	041 Move V10, V2
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W21, 1
	044 Move V13, V9
	045 Move V12, V8
	046 Move V11, V10
	047 Move X2, [X22]
	048 Move X0, X20
	049 Move W1, W21
	050 Call List`1<Vector3>.get_Item, X0, X1
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 NotImplemented "Instruction FCSEL not yet implemented."
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move W8, [X20+24]
	055 NotImplemented "Instruction FCSEL not yet implemented."
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 NotImplemented "Instruction FCSEL not yet implemented."
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction FCSEL not yet implemented."
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 Add W21, W21, 1
	062 NotImplemented "Instruction FCSEL not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 NotImplemented "Instruction FCSEL not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move [X19], X31
	067 Move [X19+8], X31
	068 Move [X19+16], X31
	069 Move V11, V10
	070 Move V12, V8
	071 Move V13, V9
	072 Subtract S0, S13, S9
	073 Subtract S1, S12, S8
	074 Subtract S2, S11, S10
	075 Move S3, 0.5
	076 Multiply S0, S0, S3
	077 Multiply S1, S1, S3
	078 Multiply S2, S2, S3
	079 Add S3, S9, S0
	080 Add S4, S8, S1
	081 Add S5, S10, S2
	082 Move [X19], S3
	083 Move [X19+8], S4
	084 Move [X19+8], S5
	085 Move [X19+16], S0
	086 Move [X19+16], S1
	087 Move [X19+24], S2
	088 Move X20, [X31+80]
	089 Move X19, [X31+88]
	090 Move X22, [X31+64]
	091 Move X21, [X31+72]
	092 Move X30, [X31+48]
	093 Move D9, [X31+32]
	094 Move D8, [X31+40]
	095 Move D11, [X31+16]
	096 Move D10, [X31+24]
	097 Move D13, [X31+96]
	098 Move D12, [X31+104]
	099 Return X0
	100 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03B23CC8 LDRSW X9, [X10]
	0x03B23CCC ADD X8, X8, X9, 0x4, LSL
	0x03B23CD0 ADD X0, X8, 0x138
	0x03B23CD4 LDP X8, X1, [X0]
	0x03B23CD8 MOV X0, X19
	0x03B23CDC BLR X8
	0x03B23CE0 TBZ X0, 0x0, 0x3B23D88
	0x03B23CE4 LDR X8, [X19]
	0x03B23CE8 LDR X1, [X23]
	0x03B23CEC LDRH W9, [X8 + 0x12E]
	0x03B23CF0 CBZ X9, 0x3B23D14
	0x03B23CF4 LDR X10, [X8 + 0xB0]
	0x03B23CF8 ADD X10, X10, 0x8
	0x03B23CFC LDUR X11, [X10 - 0x8]
	0x03B23D00 CMP X11, X1
	0x03B23D04 B.EQ 0x3B23D24
	0x03B23D08 SUBS X9, X9, 0x1
	0x03B23D0C ADD X10, X10, 0x10
	0x03B23D10 B.NE 0x3B23CFC
	0x03B23D14 MOVZ W2, 0x1
	0x03B23D18 MOV X0, X19
	0x03B23D1C BL 0x1C5C788
	0x03B23D20 B 0x3B23D34
	0x03B23D24 LDR W9, [X10]
	0x03B23D28 ADD W9, W9, 0x1
	0x03B23D2C ADD X8, X8, W9, 0x4, SXTW
	0x03B23D30 ADD X0, X8, 0x138
	0x03B23D34 LDP X8, X1, [X0]
	0x03B23D38 MOV X0, X19
	0x03B23D3C BLR X8
	0x03B23D40 CBZ X0, 0x3B23E14
	0x03B23D44 LDR X8, [X0]
	0x03B23D48 LDR X1, [X24]
	0x03B23D4C LDRB W10, [X8 + 0x130]
	0x03B23D50 LDRB W9, [X1 + 0x130]
	0x03B23D54 CMP W10, W9
	0x03B23D58 B.CC 0x3B23E10
	0x03B23D5C LDR X8, [X8 + 0xC8]
	0x03B23D60 ADD X8, X8, X9, 0x3, LSL
	0x03B23D64 LDUR X8, [X8 - 0x8]
	0x03B23D68 CMP X8, X1
	0x03B23D6C B.NE 0x3B23E10
	0x03B23D70 MOV X1, X31
	0x03B23D74 BL 0x3C32ECC
	0x03B23D78 MOV W1, W21
	0x03B23D7C MOV W2, W20
	0x03B23D80 BL 0x3B23BD8
	0x03B23D84 B 0x3B23C88
	0x03B23D88 MOV X20, X31
	0x03B23D8C LDR X1, [X22]
	0x03B23D90 MOV X0, X19
	0x03B23D94 BL 0x1C16E00
	0x03B23D98 CBZ X0, 0x3B23DF8
	0x03B23D9C LDR X8, [X0]
	0x03B23DA0 LDR X1, [X22]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x8C0000
	009 Move X24, 0x637000
	010 Move X19, 0x637000
	011 Move X20, 0x637000
	012 Move X22, 0x5D8000
	013 Move X21, 0x5D8000
	014 Move W8, [X23+1860]
	015 Move X24, [X24+3032]
	016 Move X19, [X19+3040]
	017 Move X20, [X20+2968]
	018 Move X22, [X22+2352]
	019 Move X21, [X21+2360]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x637000
	025 Move X0, [X0+2968]
	026 Call 0x1C17CF4
	027 Move X0, 0x637000
	028 Move X0, [X0+3040]
	029 Call 0x1C17CF4
	030 Move X0, 0x5D8000
	031 Move X0, [X0+2360]
	032 Call 0x1C17CF4
	033 Move X0, 0x5D8000
	034 Move X0, [X0+2352]
	035 Call 0x1C17CF4
	036 Move X0, 0x637000
	037 Move X0, [X0+3032]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+1860], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X19]
	044 Move X19, X0
	045 Call List`1<Object>..ctor, X0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8], X19
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X19, X0
	053 Call List`1<Object>..ctor, X0
	054 Move X8, [X20]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X8, [X8+184]
	060 Move [X8+8], X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+64]
	064 Return 

