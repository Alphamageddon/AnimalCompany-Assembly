Type: Nakama.UnitySocket

Method: System.Void Nakama.ISocketAdapter.add_Connected(System.Action value)

Disassembly:
	0x03419B48 LDR X1, [X23]
	0x03419B4C MOV X20, X0
	0x03419B50 BL 0x301B7C4
	0x03419B54 STR X20, [X19 + 0x38]
	0x03419B58 LDR X0, [X22]
	0x03419B5C BL 0x1C16F10
	0x03419B60 LDR X1, [X21]
	0x03419B64 MOV X20, X0
	0x03419B68 BL 0x301B7C4
	0x03419B6C STR X20, [X19 + 0x40]
	0x03419B70 MOV X0, X19
	0x03419B74 LDP X20, X19, [X31 + 0x50]
	0x03419B78 LDP X22, X21, [X31 + 0x40]
	0x03419B7C LDP X24, X23, [X31 + 0x30]
	0x03419B80 LDP X26, X25, [X31 + 0x20]
	0x03419B84 LDP X28, X27, [X31 + 0x10]
	0x03419B88 MOV X1, X31
	0x03419B8C LDR X30, [X31], #0x60
	0x03419B90 B 0x3C36C30
	0x03419B94 LDR X0, [X0 + 0x20]
	0x03419B98 RET
	0x03419B9C STR X1, [X0 + 0x20]
	0x03419BA0 RET
	0x03419BA4 STP X30, X21, [X31 - 0x20]!
	0x03419BA8 STP X20, X19, [X31 + 0x10]
	0x03419BAC ADRP X20, 0xFC4000
	0x03419BB0 ADRP X21, 0xCDD000
	0x03419BB4 ADRP X19, 0xD15000
	0x03419BB8 LDRB W8, [X20 + 0x5FA]
	0x03419BBC LDR X21, [X21 + 0x118]
	0x03419BC0 LDR X19, [X19 + 0xAC8]
	0x03419BC4 TBNZ X8, 0x0, 0x3419BE8
	0x03419BC8 ADRP X0, 0xCDD000
	0x03419BCC LDR X0, [X0 + 0x118]
	0x03419BD0 BL 0x1C16CF4
	0x03419BD4 ADRP X0, 0xD15000
	0x03419BD8 LDR X0, [X0 + 0xAC8]
	0x03419BDC BL 0x1C16CF4
	0x03419BE0 MOVZ W8, 0x1
	0x03419BE4 STRB W8, [X20 + 0x5FA]
	0x03419BE8 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFC5000
	006 Move W8, [X21+1509]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD16000
	014 Move X0, [X0+2568]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1509], W8
	018 Move X0, [X20+40]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X9, 0xD16000
	022 Move X9, [X9+2568]
	023 Move W10, [X0+28]
	024 Move X8, [X0+16]
	025 Move X9, [X9]
	026 Add W10, W10, 1
	027 Move [X0+28], W10
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W11, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W10, 1
	034 Add X8, X8, X10
	035 Move [X0+24], W9
	036 Move [X8+32], X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X8, [X9+32]
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+192]
	047 Move X2, [X8+112]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call List`1<Object>.AddWithResize, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void Nakama.ISocketAdapter.remove_Connected(System.Action value)

Disassembly:
	0x03419BEC BL 0x1C16F10
	0x03419BF0 LDR X2, [X19]
	0x03419BF4 MOV X1, X31
	0x03419BF8 MOV X3, X31
	0x03419BFC MOV X19, X0
	0x03419C00 BL 0x3484840
	0x03419C04 MOV X0, X19
	0x03419C08 LDP X20, X19, [X31 + 0x10]
	0x03419C0C LDP X30, X21, [X31], #0x20
	0x03419C10 RET
	0x03419C14 SUB X31, X31, 0x50
	0x03419C18 STR X30, [X31 + 0x10]
	0x03419C1C STP X24, X23, [X31 + 0x20]
	0x03419C20 STP X22, X21, [X31 + 0x30]
	0x03419C24 STP X20, X19, [X31 + 0x40]
	0x03419C28 ADRP X19, 0xFC4000
	0x03419C2C ADRP X22, 0xD15000
	0x03419C30 LDRB W8, [X19 + 0x5FB]
	0x03419C34 LDR X22, [X22 + 0xAD0]
	0x03419C38 TBNZ X8, 0x0, 0x3419C98
	0x03419C3C ADRP X0, 0xD15000
	0x03419C40 LDR X0, [X0 + 0xAD8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFC5000
	006 Move W8, [X21+1510]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD16000
	014 Move X0, [X0+2576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1510], W8
	018 Move X0, [X20+40]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0xD16000
	022 Move X8, [X8+2576]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.Remove, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void Nakama.ISocketAdapter.add_Closed(System.Action value)

Disassembly:
	0x03419C44 BL 0x1C16CF4
	0x03419C48 ADRP X0, 0xD15000
	0x03419C4C LDR X0, [X0 + 0xAE0]
	0x03419C50 BL 0x1C16CF4
	0x03419C54 ADRP X0, 0xCDA000
	0x03419C58 LDR X0, [X0 + 0xA58]
	0x03419C5C BL 0x1C16CF4
	0x03419C60 ADRP X0, 0xCDA000
	0x03419C64 LDR X0, [X0 + 0x598]
	0x03419C68 BL 0x1C16CF4
	0x03419C6C ADRP X0, 0xD15000
	0x03419C70 LDR X0, [X0 + 0xAD0]
	0x03419C74 BL 0x1C16CF4
	0x03419C78 ADRP X0, 0xD15000
	0x03419C7C LDR X0, [X0 + 0x918]
	0x03419C80 BL 0x1C16CF4
	0x03419C84 ADRP X0, 0xD15000
	0x03419C88 LDR X0, [X0 + 0x920]
	0x03419C8C BL 0x1C16CF4
	0x03419C90 MOVZ W8, 0x1
	0x03419C94 STRB W8, [X19 + 0x5FB]
	0x03419C98 LDR X0, [X22]
	0x03419C9C LDR W8, [X0 + 0xE0]
	0x03419CA0 CBNZ W8, 0x3419CAC
	0x03419CA4 BL 0x1C16DFC
	0x03419CA8 LDR X0, [X22]
	0x03419CAC LDR X8, [X0 + 0xB8]
	0x03419CB0 LDR X19, [X8]
	0x03419CB4 STRB W31, [X31 + 0x1C]
	0x03419CB8 ADD X1, X31, 0x1C
	0x03419CBC MOV X0, X19
	0x03419CC0 MOV X2, X31
	0x03419CC4 BL 0x33DE64C
	0x03419CC8 LDR X0, [X22]
	0x03419CCC LDR W8, [X0 + 0xE0]
	0x03419CD0 CBNZ W8, 0x3419CDC
	0x03419CD4 BL 0x1C16DFC
	0x03419CD8 LDR X0, [X22]
	0x03419CDC ADRP X23, 0xCDA000
	0x03419CE0 LDR X23, [X23 + 0x598]
	0x03419CE4 LDR X9, [X0 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFC5000
	006 Move W8, [X21+1511]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD16000
	014 Move X0, [X0+2568]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1511], W8
	018 Move X0, [X20+48]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X9, 0xD16000
	022 Move X9, [X9+2568]
	023 Move W10, [X0+28]
	024 Move X8, [X0+16]
	025 Move X9, [X9]
	026 Add W10, W10, 1
	027 Move [X0+28], W10
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W11, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W10, 1
	034 Add X8, X8, X10
	035 Move [X0+24], W9
	036 Move [X8+32], X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X8, [X9+32]
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+192]
	047 Move X2, [X8+112]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call List`1<Object>.AddWithResize, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void Nakama.ISocketAdapter.remove_Closed(System.Action value)

Disassembly:
	0x03419CE8 LDR X8, [X23]
	0x03419CEC LDR X20, [X9 + 0x8]
	0x03419CF0 LDR W10, [X8 + 0xE0]
	0x03419CF4 CBNZ W10, 0x3419D00
	0x03419CF8 MOV X0, X8
	0x03419CFC BL 0x1C16DFC
	0x03419D00 MOV X0, X20
	0x03419D04 MOV X1, X31
	0x03419D08 MOV X2, X31
	0x03419D0C BL 0x3C354F8
	0x03419D10 TBZ X0, 0x0, 0x3419D38
	0x03419D14 LDR X0, [X22]
	0x03419D18 LDR W8, [X0 + 0xE0]
	0x03419D1C CBNZ W8, 0x3419D28
	0x03419D20 BL 0x1C16DFC
	0x03419D24 LDR X0, [X22]
	0x03419D28 LDR X8, [X0 + 0xB8]
	0x03419D2C MOV X21, X31
	0x03419D30 LDR X20, [X8 + 0x8]
	0x03419D34 B 0x3419E3C
	0x03419D38 ADRP X8, 0xD15000
	0x03419D3C LDR X8, [X8 + 0x920]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFC5000
	006 Move W8, [X21+1512]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD16000
	014 Move X0, [X0+2576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1512], W8
	018 Move X0, [X20+48]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0xD16000
	022 Move X8, [X8+2576]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.Remove, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void Nakama.ISocketAdapter.add_ReceivedError(System.Action`1<System.Exception> value)

Disassembly:
	0x03419D40 LDR X0, [X8]
	0x03419D44 MOV X1, X31
	0x03419D48 BL 0x3C35B9C
	0x03419D4C MOV X20, X0
	0x03419D50 LDR X0, [X23]
	0x03419D54 LDR W8, [X0 + 0xE0]
	0x03419D58 CBNZ W8, 0x3419D60
	0x03419D5C BL 0x1C16DFC
	0x03419D60 MOV X0, X20
	0x03419D64 MOV X1, X31
	0x03419D68 MOV X2, X31
	0x03419D6C BL 0x3C3883C
	0x03419D70 TBZ X0, 0x0, 0x3419D9C
	0x03419D74 ADRP X8, 0xCDA000
	0x03419D78 LDR X8, [X8 + 0xA58]
	0x03419D7C LDR X0, [X8]
	0x03419D80 BL 0x1C16F10
	0x03419D84 ADRP X8, 0xD15000
	0x03419D88 LDR X8, [X8 + 0x918]
	0x03419D8C MOV X20, X0
	0x03419D90 LDR X1, [X8]
	0x03419D94 MOV X2, X31
	0x03419D98 BL 0x3C35934
	0x03419D9C CBZ X20, 0x3419E78
	0x03419DA0 ADRP X24, 0xD15000
	0x03419DA4 LDR X24, [X24 + 0xAE0]
	0x03419DA8 LDR X1, [X24]
	0x03419DAC MOV X0, X20
	0x03419DB0 BL 0x21E52E4
	0x03419DB4 MOV X21, X0
	0x03419DB8 LDR X0, [X23]
	0x03419DBC LDR W8, [X0 + 0xE0]
	0x03419DC0 CBNZ W8, 0x3419DC8
	0x03419DC4 BL 0x1C16DFC
	0x03419DC8 MOV X0, X21
	0x03419DCC MOV X1, X31
	0x03419DD0 MOV X2, X31
	0x03419DD4 BL 0x3C3883C
	0x03419DD8 TBZ X0, 0x0, 0x3419DF0
	0x03419DDC ADRP X8, 0xD15000
	0x03419DE0 LDR X8, [X8 + 0xAD8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFC5000
	006 Move W8, [X21+1513]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD16000
	014 Move X0, [X0+2584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1513], W8
	018 Move X0, [X20+56]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X9, 0xD16000
	022 Move X9, [X9+2584]
	023 Move W10, [X0+28]
	024 Move X8, [X0+16]
	025 Move X9, [X9]
	026 Add W10, W10, 1
	027 Move [X0+28], W10
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W11, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W10, 1
	034 Add X8, X8, X10
	035 Move [X0+24], W9
	036 Move [X8+32], X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X8, [X9+32]
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+192]
	047 Move X2, [X8+112]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call List`1<Object>.AddWithResize, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void Nakama.ISocketAdapter.remove_ReceivedError(System.Action`1<System.Exception> value)

Disassembly:
	0x03419DE4 LDR X1, [X8]
	0x03419DE8 MOV X0, X20
	0x03419DEC BL 0x21E51FC
	0x03419DF0 LDR X0, [X23]
	0x03419DF4 LDR W8, [X0 + 0xE0]
	0x03419DF8 CBNZ W8, 0x3419E00
	0x03419DFC BL 0x1C16DFC
	0x03419E00 MOV X0, X20
	0x03419E04 MOV X1, X31
	0x03419E08 BL 0x3C39674
	0x03419E0C LDR X1, [X24]
	0x03419E10 MOV X0, X20
	0x03419E14 BL 0x21E52E4
	0x03419E18 MOV X20, X0
	0x03419E1C LDR X0, [X22]
	0x03419E20 LDR W8, [X0 + 0xE0]
	0x03419E24 CBNZ W8, 0x3419E30
	0x03419E28 BL 0x1C16DFC
	0x03419E2C LDR X0, [X22]
	0x03419E30 LDR X8, [X0 + 0xB8]
	0x03419E34 MOV X21, X31
	0x03419E38 STR X20, [X8 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFC5000
	006 Move W8, [X21+1514]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD16000
	014 Move X0, [X0+2592]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1514], W8
	018 Move X0, [X20+56]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0xD16000
	022 Move X8, [X8+2592]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.Remove, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Void Nakama.ISocketAdapter.add_Received(System.Action`1<System.ArraySegment`1<System.Byte>> value)

Disassembly:
	0x03419E3C LDRB W8, [X31 + 0x1C]
	0x03419E40 CBZ W8, 0x3419E50
	0x03419E44 MOV X0, X19
	0x03419E48 MOV X1, X31
	0x03419E4C BL 0x33E14E4
	0x03419E50 CBNZ X21, 0x3419E70
	0x03419E54 MOV X0, X20
	0x03419E58 LDP X20, X19, [X31 + 0x40]
	0x03419E5C LDP X22, X21, [X31 + 0x30]
	0x03419E60 LDP X24, X23, [X31 + 0x20]
	0x03419E64 LDR X30, [X31 + 0x10]
	0x03419E68 ADD X31, X31, 0x50
	0x03419E6C RET
	0x03419E70 MOV X0, X21
	0x03419E74 BL 0x1C16F18
	0x03419E78 BL 0x1C16F20
	0x03419E7C B 0x3419EB0
	0x03419E80 B 0x3419EB0
	0x03419E84 B 0x3419EB0
	0x03419E88 B 0x3419EB0
	0x03419E8C B 0x3419EB0
	0x03419E90 B 0x3419EB0
	0x03419E94 B 0x3419EB0
	0x03419E98 B 0x3419EB0
	0x03419E9C B 0x3419EB0
	0x03419EA0 B 0x3419EB0
	0x03419EA4 B 0x3419EB0
	0x03419EA8 B 0x3419EB0
	0x03419EAC B 0x3419EB0
	0x03419EB0 MOV X20, X0
	0x03419EB4 CMP W1, 0x1
	0x03419EB8 B.NE 0x3419EDC
	0x03419EBC MOV X0, X20
	0x03419EC0 BL 0x3EB1AD0
	0x03419EC4 LDR X8, [X0]
	0x03419EC8 STR X8, [X31 + 0x8]
	0x03419ECC BL 0x3EB1AE0
	0x03419ED0 LDR X21, [X31 + 0x8]
	0x03419ED4 MOV X20, X31
	0x03419ED8 B 0x3419E3C
	0x03419EDC STR X31, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFC5000
	006 Move W8, [X21+1515]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD16000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1515], W8
	018 Move X0, [X20+64]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X9, 0xD16000
	022 Move X9, [X9+2600]
	023 Move W10, [X0+28]
	024 Move X8, [X0+16]
	025 Move X9, [X9]
	026 Add W10, W10, 1
	027 Move [X0+28], W10
	028 Compare X8, 0
	029 JumpIfEqual {52}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W11, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W10, 1
	034 Add X8, X8, X10
	035 Move [X0+24], W9
	036 Move [X8+32], X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X8, [X9+32]
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+192]
	047 Move X2, [X8+112]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call List`1<Object>.AddWithResize, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Void Nakama.ISocketAdapter.remove_Received(System.Action`1<System.ArraySegment`1<System.Byte>> value)

Disassembly:
	0x03419EE0 B 0x3419EE8
	0x03419EE4 MOV X20, X0
	0x03419EE8 LDRB W8, [X31 + 0x1C]
	0x03419EEC CBZ W8, 0x3419EFC
	0x03419EF0 MOV X0, X19
	0x03419EF4 MOV X1, X31
	0x03419EF8 BL 0x33E14E4
	0x03419EFC LDR X8, [X31 + 0x8]
	0x03419F00 CBNZ X8, 0x3419F0C
	0x03419F04 MOV X0, X20
	0x03419F08 BL 0x1D2C690
	0x03419F0C LDR X0, [X31 + 0x8]
	0x03419F10 BL 0x1C16F18
	0x03419F14 BL 0x1990590
	0x03419F18 MOV X1, X31
	0x03419F1C B 0x3C36C30
	0x03419F20 SUB X31, X31, 0x80
	0x03419F24 STP X29, X30, [X31 + 0x20]
	0x03419F28 STP X28, X27, [X31 + 0x30]
	0x03419F2C STP X26, X25, [X31 + 0x40]
	0x03419F30 STP X24, X23, [X31 + 0x50]
	0x03419F34 STP X22, X21, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xFC5000
	006 Move W8, [X21+1516]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xD16000
	014 Move X0, [X0+2608]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1516], W8
	018 Move X0, [X20+64]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0xD16000
	022 Move X8, [X8+2608]
	023 Move X1, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.Remove, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: System.Boolean Nakama.ISocketAdapter.get_IsConnected()

Disassembly:
	0x03419F38 STP X20, X19, [X31 + 0x70]
	0x03419F3C ADRP X29, 0xFC4000
	0x03419F40 ADRP X21, 0xD15000
	0x03419F44 LDRB W8, [X29 + 0x5FC]
	0x03419F48 LDR X21, [X21 + 0xAE8]
	0x03419F4C MOV X20, X7
	0x03419F50 MOV X22, X6
	0x03419F54 MOV W23, W5
	0x03419F58 MOV X24, X4
	0x03419F5C MOV X25, X3
	0x03419F60 MOV X26, X2
	0x03419F64 MOV X27, X1
	0x03419F68 MOV X19, X0
	0x03419F6C TBNZ X8, 0x0, 0x341A020
	0x03419F70 ADRP X0, 0xD15000
	0x03419F74 LDR X0, [X0 + 0xAF0]
	0x03419F78 BL 0x1C16CF4
	0x03419F7C ADRP X0, 0xCDB000
	0x03419F80 LDR X0, [X0 + 0xE68]
	0x03419F84 BL 0x1C16CF4
	0x03419F88 ADRP X0, 0xCDB000
	0x03419F8C LDR X0, [X0 + 0xE70]
	0x03419F90 BL 0x1C16CF4
	0x03419F94 ADRP X0, 0xCE2000
	0x03419F98 LDR X0, [X0 + 0x7D8]
	0x03419F9C BL 0x1C16CF4
	0x03419FA0 ADRP X0, 0xD15000
	0x03419FA4 LDR X0, [X0 + 0x938]
	0x03419FA8 BL 0x1C16CF4
	0x03419FAC ADRP X0, 0xCDD000
	0x03419FB0 LDR X0, [X0 + 0x1C8]
	0x03419FB4 BL 0x1C16CF4
	0x03419FB8 ADRP X0, 0xD15000
	0x03419FBC LDR X0, [X0 + 0x940]
	0x03419FC0 BL 0x1C16CF4
	0x03419FC4 ADRP X0, 0xD15000
	0x03419FC8 LDR X0, [X0 + 0x948]
	0x03419FCC BL 0x1C16CF4
	0x03419FD0 ADRP X0, 0xD15000
	0x03419FD4 LDR X0, [X0 + 0x950]
	0x03419FD8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFC5000
	005 Move W8, [X20+1517]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD16000
	012 Move X0, [X0+2528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1517], W8
	016 Move X19, [X19+72]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0xD16000
	020 Move X8, [X19]
	021 Move X10, [X10+2528]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 8
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 8
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Boolean Nakama.ISocketAdapter.get_IsConnecting()

Disassembly:
	0x03419FDC ADRP X0, 0xD15000
	0x03419FE0 LDR X0, [X0 + 0xAF8]
	0x03419FE4 BL 0x1C16CF4
	0x03419FE8 ADRP X0, 0xD15000
	0x03419FEC LDR X0, [X0 + 0xB00]
	0x03419FF0 BL 0x1C16CF4
	0x03419FF4 ADRP X0, 0xD15000
	0x03419FF8 LDR X0, [X0 + 0xB08]
	0x03419FFC BL 0x1C16CF4
	0x0341A000 ADRP X0, 0xD14000
	0x0341A004 LDR X0, [X0 + 0xAE8]
	0x0341A008 BL 0x1C16CF4
	0x0341A00C ADRP X0, 0xD14000
	0x0341A010 LDR X0, [X0 + 0xAD0]
	0x0341A014 BL 0x1C16CF4
	0x0341A018 MOVZ W8, 0x1
	0x0341A01C STRB W8, [X29 + 0x5FC]
	0x0341A020 LDR X0, [X21]
	0x0341A024 ADRP X28, 0xD14000
	0x0341A028 ADRP X29, 0xD14000
	0x0341A02C LDR X28, [X28 + 0x950]
	0x0341A030 LDR X29, [X29 + 0x940]
	0x0341A034 STR X31, [X31 + 0x18]
	0x0341A038 BL 0x1C16F10
	0x0341A03C MOV X1, X31
	0x0341A040 MOV X21, X0
	0x0341A044 BL 0x33BDD8C
	0x0341A048 ADRP X8, 0xD14000
	0x0341A04C LDR X8, [X8 + 0xAD0]
	0x0341A050 LDR X0, [X8]
	0x0341A054 LDR W8, [X0 + 0xE0]
	0x0341A058 CBNZ W8, 0x341A060
	0x0341A05C BL 0x1C16DFC
	0x0341A060 MOV X0, X27
	0x0341A064 MOV X1, X26
	0x0341A068 MOV X2, X25
	0x0341A06C MOV X3, X24
	0x0341A070 MOV W4, W23
	0x0341A074 BL 0x341A1C8
	0x0341A078 LDR X8, [X28]
	0x0341A07C MOV X23, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFC5000
	005 Move W8, [X20+1518]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD16000
	012 Move X0, [X0+2528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1518], W8
	016 Move X19, [X19+72]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0xD15000
	020 Move X8, [X19]
	021 Move X10, [X10+2528]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 9
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 9
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: Nakama.UnitySocket Create(Nakama.ISocketAdapter adapter)

Disassembly:
	0x03419614 BL 0x1C16CF4
	0x03419618 ADRP X0, 0xD0D000
	0x0341961C LDR X0, [X0 + 0xD00]
	0x03419620 BL 0x1C16CF4
	0x03419624 ADRP X0, 0xD02000
	0x03419628 LDR X0, [X0 + 0x5B0]
	0x0341962C BL 0x1C16CF4
	0x03419630 ADRP X0, 0xCDA000
	0x03419634 LDR X0, [X0 + 0x618]
	0x03419638 BL 0x1C16CF4
	0x0341963C ADRP X0, 0xD15000
	0x03419640 LDR X0, [X0 + 0xA38]
	0x03419644 BL 0x1C16CF4
	0x03419648 ADRP X0, 0xCDA000
	0x0341964C LDR X0, [X0 + 0x9D0]
	0x03419650 BL 0x1C16CF4
	0x03419654 ADRP X0, 0xD15000
	0x03419658 LDR X0, [X0 + 0xA40]
	0x0341965C BL 0x1C16CF4
	0x03419660 MOVZ W8, 0x1
	0x03419664 STRB W8, [X22 + 0x5F6]
	0x03419668 LDR X0, [X24]
	0x0341966C ADRP X22, 0xCDA000
	0x03419670 LDR W8, [X0 + 0xE0]
	0x03419674 LDR X22, [X22 + 0x618]
	0x03419678 CBNZ W8, 0x3419680
	0x0341967C BL 0x1C16DFC
	0x03419680 ADRP X28, 0xCDA000
	0x03419684 LDR X28, [X28 + 0x9D0]
	0x03419688 LDR X0, [X22]
	0x0341968C ADRP X27, 0xCE5000
	0x03419690 ADRP X26, 0xD15000
	0x03419694 ADRP X25, 0xD15000
	0x03419698 LDR X27, [X27 + 0xE68]
	0x0341969C LDR X26, [X26 + 0xA40]
	0x034196A0 LDR X25, [X25 + 0xA38]
	0x034196A4 MOV W1, W23
	0x034196A8 BL 0x1C16D6C
	0x034196AC ADD W8, W23, W20
	0x034196B0 CMP W8, W20
	0x034196B4 CSEL W8, W8, W20, GT
	0x034196B8 MOV X22, X0
	0x034196BC MOV W29, W31
	0x034196C0 SUB W23, W20, W8
	0x034196C4 LDR X0, [X24]
	0x034196C8 LDR W8, [X0 + 0xE0]
	0x034196CC CBNZ W8, 0x34196D4
	0x034196D0 BL 0x1C16DFC
	0x034196D4 ADD W8, W23, W29
	0x034196D8 CBZ W8, 0x3419728
	0x034196DC LDR X0, [X24]
	0x034196E0 LDR W8, [X0 + 0xE0]
	0x034196E4 CBNZ W8, 0x34196EC
	0x034196E8 BL 0x1C16DFC
	0x034196EC CBZ X21, 0x34197E0
	0x034196F0 LDR W9, [X21 + 0x18]
	0x034196F4 ADD W8, W20, W29
	0x034196F8 CMP W8, W9
	0x034196FC B.CS 0x34197E4
	0x03419700 CBZ X22, 0x34197E0
	0x03419704 LDR W9, [X22 + 0x18]
	0x03419708 CMP W29, W9
	0x0341970C B.CS 0x34197E4
	0x03419710 ADD X8, X21, W8, SXTW
	0x03419714 LDRB W8, [X8 + 0x20]
	0x03419718 ADD X9, X22, W29, SXTW
	0x0341971C ADD W29, W29, 0x1
	0x03419720 STRB W8, [X9 + 0x20]
	0x03419724 B 0x34196C4
	0x03419728 LDR X0, [X28]
	0x0341972C LDR X20, [X19 + 0x20]
	0x03419730 LDR X23, [X19 + 0x40]
	0x03419734 MOVZ W1, 0x1
	0x03419738 BL 0x1C16D6C
	0x0341973C LDR X2, [X27]
	0x03419740 MOV X19, X0
	0x03419744 ADD X0, X31, 0x10
	0x03419748 MOV X1, X22
	0x0341974C STP X31, X31, [X31 + 0x10]
	0x03419750 BL 0x2B87B6C
	0x03419754 LDR V0, [X31 + 0x1]
	0x03419758 LDR X0, [X24]
	0x0341975C ADD X1, X31, 0x0
	0x03419760 STR V0, [X31]
	0x03419764 BL 0x1C16E04
	0x03419768 CBZ X19, 0x34197E0
	0x0341976C MOV X21, X0
	0x03419770 CBZ X0, 0x3419788
	0x03419774 LDR X8, [X19]
	0x03419778 MOV X0, X21
	0x0341977C LDR X1, [X8 + 0x40]
	0x03419780 BL 0x1C16E00
	0x03419784 CBZ X0, 0x34197E8
	0x03419788 LDR W8, [X19 + 0x18]
	0x0341978C CBZ W8, 0x34197E4
	0x03419790 STR X21, [X19 + 0x20]
	0x03419794 LDR X0, [X26]
	0x03419798 BL 0x1C16F10
	0x0341979C MOV X1, X31
	0x034197A0 MOV X21, X0
	0x034197A4 BL 0x33BDD8C
	0x034197A8 STP X23, X19, [X21 + 0x10]
	0x034197AC CBZ X20, 0x34197E0
	0x034197B0 LDR X2, [X25]
	0x034197B4 MOV X0, X20
	0x034197B8 MOV X1, X21
	0x034197BC BL 0x2992C14
	0x034197C0 LDP X20, X19, [X31 + 0x70]
	0x034197C4 LDP X22, X21, [X31 + 0x60]
	0x034197C8 LDP X24, X23, [X31 + 0x50]
	0x034197CC LDP X26, X25, [X31 + 0x40]
	0x034197D0 LDP X28, X27, [X31 + 0x30]
	0x034197D4 LDP X29, X30, [X31 + 0x20]
	0x034197D8 ADD X31, X31, 0x80
	0x034197DC RET
	0x034197E0 BL 0x1C16F20
	0x034197E4 BL 0x1C16F28
	0x034197E8 BL 0x1C16F44
	0x034197EC MOV X1, X31
	0x034197F0 BL 0x1C16DEC
	0x034197F4 SUB X31, X31, 0x30
	0x034197F8 STP X30, X21, [X31 + 0x10]
	0x034197FC STP X20, X19, [X31 + 0x20]
	0x03419800 ADRP X20, 0xFC4000
	0x03419804 LDRB W8, [X20 + 0x5F7]
	0x03419808 MOV X19, X0
	0x0341980C TBNZ X8, 0x0, 0x3419830
	0x03419810 ADRP X0, 0xD15000
	0x03419814 LDR X0, [X0 + 0xA48]
	0x03419818 BL 0x1C16CF4
	0x0341981C ADRP X0, 0xD15000
	0x03419820 LDR X0, [X0 + 0xA50]
	0x03419824 BL 0x1C16CF4
	0x03419828 MOVZ W8, 0x1
	0x0341982C STRB W8, [X20 + 0x5F7]
	0x03419830 STR X31, [X31 + 0x8]
	0x03419834 LDR X0, [X19 + 0x20]
	0x03419838 CBZ X0, 0x3419888
	0x0341983C ADRP X20, 0xD15000
	0x03419840 ADRP X21, 0xD15000
	0x03419844 LDR X20, [X20 + 0xA50]
	0x03419848 LDR X21, [X21 + 0xA48]
	0x0341984C LDR X1, [X20]
	0x03419850 BL 0x299207C
	0x03419854 CMP W0, 0x0
	0x03419858 B.LE 0x341988C
	0x0341985C LDR X0, [X19 + 0x20]
	0x03419860 CBZ X0, 0x3419888
	0x03419864 LDR X2, [X21]
	0x03419868 ADD X1, X31, 0x8
	0x0341986C BL 0x2992E94
	0x03419870 TBZ X0, 0x0, 0x3419880
	0x03419874 LDR X0, [X31 + 0x8]
	0x03419878 CBZ X0, 0x3419888
	0x0341987C BL 0x341989C
	0x03419880 LDR X0, [X19 + 0x20]
	0x03419884 CBNZ X0, 0x341984C
	0x03419888 BL 0x1C16F20
	0x0341988C LDP X20, X19, [X31 + 0x20]
	0x03419890 LDP X30, X21, [X31 + 0x10]
	0x03419894 ADD X31, X31, 0x30
	0x03419898 RET
	0x0341989C SUB X31, X31, 0x50
	0x034198A0 STR X30, [X31 + 0x20]
	0x034198A4 STP X22, X21, [X31 + 0x30]
	0x034198A8 STP X20, X19, [X31 + 0x40]
	0x034198AC ADRP X21, 0xFC4000
	0x034198B0 ADRP X22, 0xD15000
	0x034198B4 ADRP X20, 0xD15000
	0x034198B8 LDRB W8, [X21 + 0x5F9]
	0x034198BC LDR X22, [X22 + 0xA58]
	0x034198C0 LDR X20, [X20 + 0xA60]
	0x034198C4 MOV X19, X0
	0x034198C8 TBNZ X8, 0x0, 0x341991C
	0x034198CC ADRP X0, 0xD15000
	0x034198D0 LDR X0, [X0 + 0xA68]
	0x034198D4 BL 0x1C16CF4
	0x034198D8 ADRP X0, 0xD15000
	0x034198DC LDR X0, [X0 + 0xA70]
	0x034198E0 BL 0x1C16CF4
	0x034198E4 ADRP X0, 0xD15000
	0x034198E8 LDR X0, [X0 + 0xA78]
	0x034198EC BL 0x1C16CF4
	0x034198F0 ADRP X0, 0xD15000
	0x034198F4 LDR X0, [X0 + 0xA80]
	0x034198F8 BL 0x1C16CF4
	0x034198FC ADRP X0, 0xD15000
	0x03419900 LDR X0, [X0 + 0xA60]
	0x03419904 BL 0x1C16CF4
	0x03419908 ADRP X0, 0xD15000
	0x0341990C LDR X0, [X0 + 0xA58]
	0x03419910 BL 0x1C16CF4
	0x03419914 MOVZ W8, 0x1
	0x03419918 STRB W8, [X21 + 0x5F9]
	0x0341991C STP X31, X31, [X31 + 0x8]
	0x03419920 STR X31, [X31 + 0x18]
	0x03419924 LDR X0, [X22]
	0x03419928 LDR X21, [X19 + 0x10]
	0x0341992C BL 0x1C16F10
	0x03419930 LDR X2, [X20]
	0x03419934 MOV X1, X21
	0x03419938 MOV X20, X0
	0x0341993C BL 0x301B8E0
	0x03419940 CBZ X20, 0x34199B8
	0x03419944 ADRP X8, 0xD15000
	0x03419948 LDR X8, [X8 + 0xA80]
	0x0341994C ADRP X22, 0xD15000
	0x03419950 ADRP X21, 0xD15000
	0x03419954 MOV X0, X20
	0x03419958 LDR X1, [X8]
	0x0341995C LDR X22, [X22 + 0xA70]
	0x03419960 LDR X21, [X21 + 0xA68]
	0x03419964 ADD X8, X31, 0x8
	0x03419968 BL 0x301CB58
	0x0341996C LDR X1, [X22]
	0x03419970 ADD X0, X31, 0x8
	0x03419974 BL 0x2BC4350
	0x03419978 TBZ X0, 0x0, 0x3419994
	0x0341997C LDR X0, [X31 + 0x18]
	0x03419980 CBZ X0, 0x34199B4
	0x03419984 LDR X1, [X19 + 0x18]
	0x03419988 MOV X2, X31
	0x0341998C BL 0x33C5660
	0x03419990 B 0x341996C
	0x03419994 LDR X1, [X21]
	0x03419998 ADD X0, X31, 0x8
	0x0341999C BL 0x2BC434C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xFC5000
	009 Move X23, 0xCDB000
	010 Move X19, 0xD16000
	011 Move X21, 0xCDB000
	012 Move W8, [X22+1519]
	013 Move X23, [X23+2648]
	014 Move X19, [X19+2504]
	015 Move X21, [X21+1432]
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0xD16000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0xCDE000
	025 Move X0, [X0+712]
	026 Call 0x1C17CF4
	027 Move X0, 0xCDC000
	028 Move X0, [X0+3696]
	029 Call 0x1C17CF4
	030 Move X0, 0xD16000
	031 Move X0, [X0+2520]
	032 Call 0x1C17CF4
	033 Move X0, 0xCDB000
	034 Move X0, [X0+2648]
	035 Call 0x1C17CF4
	036 Move X0, 0xD16000
	037 Move X0, [X0+2528]
	038 Call 0x1C17CF4
	039 Move X0, 0xCDB000
	040 Move X0, [X0+1432]
	041 Call 0x1C17CF4
	042 Move X0, 0xD16000
	043 Move X0, [X0+2536]
	044 Call 0x1C17CF4
	045 Move X0, 0xD16000
	046 Move X0, [X0+2544]
	047 Call 0x1C17CF4
	048 Move X0, 0xD16000
	049 Move X0, [X0+2552]
	050 Call 0x1C17CF4
	051 Move X0, 0xD16000
	052 Move X0, [X0+2560]
	053 Call 0x1C17CF4
	054 Move X0, 0xD16000
	055 Move X0, [X0+2504]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+1519], W8
	059 Move X0, [X23]
	060 Call 0x1C17F10
	061 Move X1, [X19]
	062 Move X2, X31
	063 Move X19, X0
	064 Call GameObject..ctor, X0, X1
	065 Move X0, [X21]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X19
	071 Move X1, X31
	072 Call Object.DontDestroyOnLoad, X0
	073 Compare X19, 0
	074 JumpIfEqual {239}
	075 Move X8, 0xD16000
	076 Move X8, [X8+2520]
	077 Move X0, X19
	078 Move X1, [X8]
	079 Call 0x21E61FC, X0
	080 Compare X0, 0
	081 JumpIfEqual {239}
	082 Move X23, 0xCDC000
	083 Move X23, [X23+3696]
	084 Move [X0+72], X20
	085 Move X19, X0
	086 Move X21, 0xD16000
	087 Move X0, [X23]
	088 Move X21, [X21+2536]
	089 Call 0x1C17F10
	090 Move X2, [X21]
	091 Move X1, X19
	092 Move X3, X31
	093 Move X21, X0
	094 Call Action..ctor, X0, X1, X2
	095 Compare X20, 0
	096 JumpIfEqual {239}
	097 Move X22, 0xD16000
	098 Move X8, [X20]
	099 Move X22, [X22+2528]
	100 Move X24, 0xD16000
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Move X1, [X22]
	103 Move X24, [X24+2544]
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move W2, 2
	113 Move X0, X20
	114 Call 0x1C5D788
	115 Move W9, [X10]
	116 Add W9, W9, 2
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X2, [X0+8]
	121 Move X0, X20
	122 Move X1, X21
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X0, [X23]
	125 Move X20, [X19+72]
	126 Call 0x1C17F10
	127 Move X2, [X24]
	128 Move X1, X19
	129 Move X3, X31
	130 Move X21, X0
	131 Call Action..ctor, X0, X1, X2
	132 Compare X20, 0
	133 JumpIfEqual {239}
	134 Move X8, [X20]
	135 Move X24, 0xD16000
	136 Move X23, 0xD16000
	137 Move X1, [X22]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Move X24, [X24+2512]
	140 Move X23, [X23+2560]
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move X0, X20
	150 Move W2, W31
	151 Call 0x1C5D788
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Add X8, X8, X9
	154 Add X0, X8, 312
	155 Move X8, [X0]
	156 Move X2, [X0+8]
	157 Move X0, X20
	158 Move X1, X21
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Move X0, [X24]
	161 Move X20, [X19+72]
	162 Call 0x1C17F10
	163 Move X2, [X23]
	164 Move X1, X19
	165 Move X3, X31
	166 Move X21, X0
	167 Call Action`1<ArraySegment`1<Byte>>..ctor, X0, X1, X2
	168 Compare X20, 0
	169 JumpIfEqual {239}
	170 Move X8, [X20]
	171 Move X24, 0xCDE000
	172 Move X23, 0xD16000
	173 Move X1, [X22]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Move X24, [X24+712]
	176 Move X23, [X23+2552]
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move W2, 6
	186 Move X0, X20
	187 Call 0x1C5D788
	188 Move W9, [X10]
	189 Add W9, W9, 6
	190 Add X8, X8, W9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X2, [X0+8]
	194 Move X0, X20
	195 Move X1, X21
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X0, [X24]
	198 Move X20, [X19+72]
	199 Call 0x1C17F10
	200 Move X2, [X23]
	201 Move X1, X19
	202 Move X3, X31
	203 Move X21, X0
	204 Call Action`1<Object>..ctor, X0, X1, X2
	205 Compare X20, 0
	206 JumpIfEqual {239}
	207 Move X8, [X20]
	208 Move X1, [X22]
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 4
	219 Move X0, X20
	220 Call 0x1C5D788
	221 Move W9, [X10]
	222 Add W9, W9, 4
	223 Add X8, X8, W9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X2, [X0+8]
	227 Move X0, X20
	228 Move X1, X21
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X0, X19
	231 Move X20, [X31+48]
	232 Move X19, [X31+56]
	233 Move X22, [X31+32]
	234 Move X21, [X31+40]
	235 Move X24, [X31+16]
	236 Move X23, [X31+24]
	237 Move X30, [X31+64]
	238 Return X0
	239 Call 0x1C17F20

Method: System.Threading.Tasks.Task Nakama.ISocketAdapter.CloseAsync()

Disassembly:
	0x0341A080 MOV X0, X8
	0x0341A084 BL 0x1C16F10
	0x0341A088 LDR X1, [X29]
	0x0341A08C MOV X24, X0
	0x0341A090 BL 0x267AFB4
	0x0341A094 CBZ X21, 0x341A1BC
	0x0341A098 ADRP X29, 0xCDA000
	0x0341A09C ADRP X27, 0xD14000
	0x0341A0A0 ADRP X26, 0xD14000
	0x0341A0A4 ADRP X25, 0xD14000
	0x0341A0A8 LDR X29, [X29 + 0xE68]
	0x0341A0AC LDR X27, [X27 + 0xB00]
	0x0341A0B0 LDR X26, [X26 + 0xAF0]
	0x0341A0B4 LDR X25, [X25 + 0xB08]
	0x0341A0B8 ANDS W31, W22, 0xFF
	0x0341A0BC STR X24, [X21 + 0x10]
	0x0341A0C0 B.EQ 0x341A120
	0x0341A0C4 ADRP X8, 0xCDA000
	0x0341A0C8 LDR X8, [X8 + 0xE70]
	0x0341A0CC ADRP X22, 0xD14000
	0x0341A0D0 ADRP X24, 0xCE1000
	0x0341A0D4 LDR X0, [X8]
	0x0341A0D8 LDR X22, [X22 + 0xAF8]
	0x0341A0DC LDR X24, [X24 + 0x7D8]
	0x0341A0E0 STR X20, [X31 + 0x18]
	0x0341A0E4 BL 0x1C16F10
	0x0341A0E8 LDR X2, [X22]
	0x0341A0EC MOV X1, X21
	0x0341A0F0 MOV X3, X31
	0x0341A0F4 MOV X20, X0
	0x0341A0F8 BL 0x3314368
	0x0341A0FC LDR X0, [X24]
	0x0341A100 LDR W8, [X0 + 0xE0]
	0x0341A104 CBNZ W8, 0x341A10C
	0x0341A108 BL 0x1C16DFC
	0x0341A10C ADD X8, X31, 0x0
	0x0341A110 ADD X0, X31, 0x18
	0x0341A114 MOV X1, X20
	0x0341A118 MOV X2, X31
	0x0341A11C BL 0x33DD3A4
	0x0341A120 LDR X0, [X29]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xFC4000
	005 Move W8, [X20+1520]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xD15000
	012 Move X0, [X0+2528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1520], W8
	016 Move X19, [X19+72]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0xD15000
	020 Move X8, [X19]
	021 Move X10, [X10+2528]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 10
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 10
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Threading.Tasks.Task Nakama.ISocketAdapter.ConnectAsync(System.Uri uri, System.Int32 timeout)

Disassembly:
	0x0341A124 BL 0x1C16F10
	0x0341A128 LDR X2, [X27]
	0x0341A12C MOV X1, X21
	0x0341A130 MOV X3, X31
	0x0341A134 MOV X20, X0
	0x0341A138 BL 0x2A6B948
	0x0341A13C LDR X0, [X26]
	0x0341A140 BL 0x1C16F10
	0x0341A144 LDR X2, [X25]
	0x0341A148 MOV X1, X21
	0x0341A14C MOV X3, X31
	0x0341A150 MOV X22, X0
	0x0341A154 BL 0x2A6B948
	0x0341A158 ADRP X8, 0xD14000
	0x0341A15C LDR X8, [X8 + 0xAD0]
	0x0341A160 LDR X0, [X8]
	0x0341A164 LDR W8, [X0 + 0xE0]
	0x0341A168 CBNZ W8, 0x341A170
	0x0341A16C BL 0x1C16DFC
	0x0341A170 MOV X0, X23
	0x0341A174 MOV X1, X20
	0x0341A178 MOV X2, X22
	0x0341A17C BL 0x341A67C
	0x0341A180 MOV X1, X0
	0x0341A184 MOV X0, X19
	0x0341A188 MOV X2, X31
	0x0341A18C BL 0x3C366FC
	0x0341A190 LDR X8, [X21 + 0x10]
	0x0341A194 CBZ X8, 0x341A1BC
	0x0341A198 LDR X0, [X8 + 0x10]
	0x0341A19C LDP X20, X19, [X31 + 0x70]
	0x0341A1A0 LDP X22, X21, [X31 + 0x60]
	0x0341A1A4 LDP X24, X23, [X31 + 0x50]
	0x0341A1A8 LDP X26, X25, [X31 + 0x40]
	0x0341A1AC LDP X28, X27, [X31 + 0x30]
	0x0341A1B0 LDP X29, X30, [X31 + 0x20]
	0x0341A1B4 ADD X31, X31, 0x80
	0x0341A1B8 RET
	0x0341A1BC BL 0x1C16F20
	0x0341A1C0 MOV X1, X31
	0x0341A1C4 B 0x33BDD8C
	0x0341A1C8 STP X30, X25, [X31 - 0x40]!
	0x0341A1CC STP X24, X23, [X31 + 0x10]
	0x0341A1D0 STP X22, X21, [X31 + 0x20]
	0x0341A1D4 STP X20, X19, [X31 + 0x30]
	0x0341A1D8 ADRP X20, 0xFC3000
	0x0341A1DC ADRP X25, 0xD02000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xFC4000
	007 Move W8, [X22+1521]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xD15000
	016 Move X0, [X0+2528]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1521], W8
	020 Move X21, [X21+72]
	021 Compare X21, 0
	022 JumpIfEqual {54}
	023 Move X10, 0xD15000
	024 Move X8, [X21]
	025 Move X10, [X10+2528]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 11
	037 Move X0, X21
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 11
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X4, [X0]
	044 Move X3, [X0+8]
	045 Move X0, X21
	046 Move X1, X20
	047 Move W2, W19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 CallNoReturn X4
	054 Call 0x1C17F20

Method: System.Threading.Tasks.Task Nakama.ISocketAdapter.SendAsync(System.ArraySegment`1<System.Byte> buffer, System.Boolean reliable, System.Threading.CancellationToken canceller)

Disassembly:
	0x0341A1E0 LDRB W8, [X20 + 0x5FD]
	0x0341A1E4 LDR X25, [X25 + 0x4D8]
	0x0341A1E8 MOV W19, W4
	0x0341A1EC MOV X23, X3
	0x0341A1F0 MOV X21, X2
	0x0341A1F4 MOV X22, X1
	0x0341A1F8 MOV X24, X0
	0x0341A1FC TBNZ X8, 0x0, 0x341A2B0
	0x0341A200 ADRP X0, 0xD14000
	0x0341A204 LDR X0, [X0 + 0x970]
	0x0341A208 BL 0x1C16CF4
	0x0341A20C ADRP X0, 0xCD9000
	0x0341A210 LDR X0, [X0 + 0xE00]
	0x0341A214 BL 0x1C16CF4
	0x0341A218 ADRP X0, 0xCDC000
	0x0341A21C LDR X0, [X0 + 0x190]
	0x0341A220 BL 0x1C16CF4
	0x0341A224 ADRP X0, 0xCDC000
	0x0341A228 LDR X0, [X0 + 0x198]
	0x0341A22C BL 0x1C16CF4
	0x0341A230 ADRP X0, 0xCD9000
	0x0341A234 LDR X0, [X0 + 0xE18]
	0x0341A238 BL 0x1C16CF4
	0x0341A23C ADRP X0, 0xCDC000
	0x0341A240 LDR X0, [X0 + 0x1B0]
	0x0341A244 BL 0x1C16CF4
	0x0341A248 ADRP X0, 0xCDC000
	0x0341A24C LDR X0, [X0 + 0x1B8]
	0x0341A250 BL 0x1C16CF4
	0x0341A254 ADRP X0, 0xD14000
	0x0341A258 LDR X0, [X0 + 0x978]
	0x0341A25C BL 0x1C16CF4
	0x0341A260 ADRP X0, 0xD14000
	0x0341A264 LDR X0, [X0 + 0x980]
	0x0341A268 BL 0x1C16CF4
	0x0341A26C ADRP X0, 0xD02000
	0x0341A270 LDR X0, [X0 + 0x4E0]
	0x0341A274 BL 0x1C16CF4
	0x0341A278 ADRP X0, 0xD02000
	0x0341A27C LDR X0, [X0 + 0x4D8]
	0x0341A280 BL 0x1C16CF4
	0x0341A284 ADRP X0, 0xD14000
	0x0341A288 LDR X0, [X0 + 0x988]
	0x0341A28C BL 0x1C16CF4
	0x0341A290 ADRP X0, 0xCDC000
	0x0341A294 LDR X0, [X0 + 0x208]
	0x0341A298 BL 0x1C16CF4
	0x0341A29C ADRP X0, 0xD02000
	0x0341A2A0 LDR X0, [X0 + 0x4C8]
	0x0341A2A4 BL 0x1C16CF4
	0x0341A2A8 MOVZ W8, 0x1
	0x0341A2AC STRB W8, [X20 + 0x5FD]
	0x0341A2B0 LDR X1, [X25]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xFC4000
	009 Move W8, [X24+1522]
	010 Move X19, X4
	011 Move W22, W3
	012 Move X20, X2
	013 Move X21, X1
	014 Move X23, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xD15000
	020 Move X0, [X0+2528]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+1522], W8
	024 Move X23, [X23+72]
	025 Compare X23, 0
	026 JumpIfEqual {62}
	027 Move X10, 0xD15000
	028 Move X8, [X23]
	029 Move X10, [X10+2528]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Move X1, [X10]
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move W2, 12
	041 Move X0, X23
	042 Call 0x1C5D788
	043 Move W9, [X10]
	044 Add W9, W9, 12
	045 Add X8, X8, W9
	046 Add X0, X8, 312
	047 Move X6, [X0]
	048 Move X5, [X0+8]
	049 And W3, W22, 1
	050 Move X0, X23
	051 Move X1, X21
	052 Move X2, X20
	053 Move X4, X19
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 CallNoReturn X6
	062 Call 0x1C17F20

Method: System.Void OnClosed()

Disassembly:
	0x0341A2B4 MOVZ W2, 0x5
	0x0341A2B8 MOV X0, X24
	0x0341A2BC MOV X3, X31
	0x0341A2C0 BL 0x3226C60
	0x0341A2C4 TBNZ X0, 0x0, 0x341A2E8
	0x0341A2C8 ADRP X8, 0xD02000
	0x0341A2CC LDR X8, [X8 + 0x4E0]
	0x0341A2D0 MOVZ W2, 0x5
	0x0341A2D4 MOV X0, X24
	0x0341A2D8 MOV X3, X31
	0x0341A2DC LDR X1, [X8]
	0x0341A2E0 BL 0x3226C60
	0x0341A2E4 TBZ X0, 0x0, 0x341A374
	0x0341A2E8 ADRP X8, 0xD14000
	0x0341A2EC LDR X8, [X8 + 0x978]
	0x0341A2F0 ADRP X25, 0xD14000
	0x0341A2F4 LDR X0, [X8]
	0x0341A2F8 LDR X25, [X25 + 0x980]
	0x0341A2FC BL 0x1C16F10
	0x0341A300 MOV X1, X22
	0x0341A304 MOV X2, X24
	0x0341A308 MOV X3, X31
	0x0341A30C MOV X20, X0
	0x0341A310 BL 0x3E5E9F4
	0x0341A314 LDR X0, [X25]
	0x0341A318 BL 0x1C16F10
	0x0341A31C MOV X1, X23
	0x0341A320 MOV X2, X31
	0x0341A324 MOV X22, X0
	0x0341A328 BL 0x3E60878
	0x0341A32C CBZ X20, 0x341A5C0
	0x0341A330 ADRP X23, 0xD14000
	0x0341A334 LDR X23, [X23 + 0x970]
	0x0341A338 MOV X0, X20
	0x0341A33C MOV X1, X22
	0x0341A340 MOV X2, X31
	0x0341A344 BL 0x3E5ED00
	0x0341A348 LDR X0, [X23]
	0x0341A34C BL 0x1C16F10
	0x0341A350 MOV X1, X31
	0x0341A354 MOV X22, X0
	0x0341A358 BL 0x3E5E4D8
	0x0341A35C MOV X0, X20
	0x0341A360 MOV X1, X22
	0x0341A364 MOV X2, X31
	0x0341A368 BL 0x3E5EBFC
	0x0341A36C CBNZ X20, 0x341A3B8
	0x0341A370 B 0x341A5C0
	0x0341A374 ADRP X8, 0xD02000
	0x0341A378 LDR X8, [X8 + 0x4C8]
	0x0341A37C MOVZ W2, 0x5
	0x0341A380 MOV X0, X24
	0x0341A384 MOV X3, X31
	0x0341A388 LDR X1, [X8]
	0x0341A38C BL 0x3226C60
	0x0341A390 TBZ X0, 0x0, 0x341A3A4
	0x0341A394 MOV X0, X22
	0x0341A398 MOV X1, X31
	0x0341A39C BL 0x3E60598
	0x0341A3A0 B 0x341A3B0
	0x0341A3A4 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFC4000
	007 Move X19, 0xCDA000
	008 Move W8, [X20+1523]
	009 Move X19, [X19+2504]
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xCDA000
	016 Move X0, [X0+2504]
	017 Call 0x1C17CF4
	018 Move X0, 0xD15000
	019 Move X0, [X0+2616]
	020 Call 0x1C17CF4
	021 Move X0, 0xD15000
	022 Move X0, [X0+2624]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1523], W8
	026 Move X20, [X19]
	027 Move X19, [X21+32]
	028 Move X21, [X21+48]
	029 Move X8, [X20+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X20
	033 Call 0x1C5D6E0
	034 Move X8, [X20+56]
	035 Move X0, [X8+16]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X8, [X20+56]
	047 Move X20, 0xD15000
	048 Move X0, [X8+16]
	049 Move W8, [X0+309]
	050 Move X20, [X20+2624]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+184]
	057 Move X0, [X20]
	058 Move X22, [X8]
	059 Call 0x1C17F10
	060 Move X1, X31
	061 Move X20, X0
	062 Call Object..ctor, X0
	063 Move [X20+16], X21
	064 Move [X20+24], X22
	065 Compare X19, 0
	066 JumpIfEqual {79}
	067 Move X8, 0xD15000
	068 Move X8, [X8+2616]
	069 Move X0, X19
	070 Move X1, X20
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X2, [X8]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Call ConcurrentQueue`1<Object>.Enqueue, X0, X1
	078 Return 
	079 Call 0x1C17F20

Method: System.Void OnConnected()

Disassembly:
	0x0341A3D4 LDR X2, [X9]
	0x0341A3D8 BL 0x3E5FD24
	0x0341A3DC CBZ X21, 0x341A5C0
	0x0341A3E0 ADRP X10, 0xCDC000
	0x0341A3E4 LDR X8, [X21]
	0x0341A3E8 LDR X10, [X10 + 0x190]
	0x0341A3EC LDRH W9, [X8 + 0x12E]
	0x0341A3F0 LDR X1, [X10]
	0x0341A3F4 CBZ X9, 0x341A418
	0x0341A3F8 LDR X10, [X8 + 0xB0]
	0x0341A3FC ADD X10, X10, 0x8
	0x0341A400 LDUR X11, [X10 - 0x8]
	0x0341A404 CMP X11, X1
	0x0341A408 B.EQ 0x341A428
	0x0341A40C SUBS X9, X9, 0x1
	0x0341A410 ADD X10, X10, 0x10
	0x0341A414 B.NE 0x341A400
	0x0341A418 MOV X0, X21
	0x0341A41C MOV W2, W31
	0x0341A420 BL 0x1C5C788
	0x0341A424 B 0x341A434
	0x0341A428 LDRSW X9, [X10]
	0x0341A42C ADD X8, X8, X9, 0x4, LSL
	0x0341A430 ADD X0, X8, 0x138
	0x0341A434 LDP X8, X1, [X0]
	0x0341A438 ADRP X24, 0xCD9000
	0x0341A43C LDR X24, [X24 + 0xE00]
	0x0341A440 MOV X0, X21
	0x0341A444 BLR X8
	0x0341A448 MOV X21, X0
	0x0341A44C CBZ X0, 0x341A5C4
	0x0341A450 ADRP X22, 0xCD9000
	0x0341A454 ADRP X23, 0xCDC000
	0x0341A458 LDR X22, [X22 + 0xE18]
	0x0341A45C LDR X23, [X23 + 0x198]
	0x0341A460 LDR X8, [X21]
	0x0341A464 LDR X1, [X22]
	0x0341A468 LDRH W9, [X8 + 0x12E]
	0x0341A46C CBZ X9, 0x341A490
	0x0341A470 LDR X10, [X8 + 0xB0]
	0x0341A474 ADD X10, X10, 0x8
	0x0341A478 LDUR X11, [X10 - 0x8]
	0x0341A47C CMP X11, X1
	0x0341A480 B.EQ 0x341A4A0
	0x0341A484 SUBS X9, X9, 0x1
	0x0341A488 ADD X10, X10, 0x10
	0x0341A48C B.NE 0x341A478
	0x0341A490 MOV X0, X21
	0x0341A494 MOV W2, W31
	0x0341A498 BL 0x1C5C788
	0x0341A49C B 0x341A4AC
	0x0341A4A0 LDRSW X9, [X10]
	0x0341A4A4 ADD X8, X8, X9, 0x4, LSL
	0x0341A4A8 ADD X0, X8, 0x138
	0x0341A4AC LDP X8, X1, [X0]
	0x0341A4B0 MOV X0, X21
	0x0341A4B4 BLR X8
	0x0341A4B8 TBZ X0, 0x0, 0x341A534
	0x0341A4BC LDR X8, [X21]
	0x0341A4C0 LDR X1, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFC4000
	007 Move X19, 0xCDA000
	008 Move W8, [X20+1524]
	009 Move X19, [X19+2504]
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xCDA000
	016 Move X0, [X0+2504]
	017 Call 0x1C17CF4
	018 Move X0, 0xD15000
	019 Move X0, [X0+2616]
	020 Call 0x1C17CF4
	021 Move X0, 0xD15000
	022 Move X0, [X0+2624]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1524], W8
	026 Move X20, [X19]
	027 Move X19, [X21+32]
	028 Move X21, [X21+40]
	029 Move X8, [X20+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {35}
	032 Move X0, X20
	033 Call 0x1C5D6E0
	034 Move X8, [X20+56]
	035 Move X0, [X8+16]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X8, [X20+56]
	047 Move X20, 0xD15000
	048 Move X0, [X8+16]
	049 Move W8, [X0+309]
	050 Move X20, [X20+2624]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+184]
	057 Move X0, [X20]
	058 Move X22, [X8]
	059 Call 0x1C17F10
	060 Move X1, X31
	061 Move X20, X0
	062 Call Object..ctor, X0
	063 Move [X20+16], X21
	064 Move [X20+24], X22
	065 Compare X19, 0
	066 JumpIfEqual {79}
	067 Move X8, 0xD15000
	068 Move X8, [X8+2616]
	069 Move X0, X19
	070 Move X1, X20
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X2, [X8]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Call ConcurrentQueue`1<Object>.Enqueue, X0, X1
	078 Return 
	079 Call 0x1C17F20

Method: System.Void OnReceivedError(System.Exception obj)

Disassembly:
	0x0341A4C4 LDRH W9, [X8 + 0x12E]
	0x0341A4C8 CBZ X9, 0x341A4EC
	0x0341A4CC LDR X10, [X8 + 0xB0]
	0x0341A4D0 ADD X10, X10, 0x8
	0x0341A4D4 LDUR X11, [X10 - 0x8]
	0x0341A4D8 CMP X11, X1
	0x0341A4DC B.EQ 0x341A4FC
	0x0341A4E0 SUBS X9, X9, 0x1
	0x0341A4E4 ADD X10, X10, 0x10
	0x0341A4E8 B.NE 0x341A4D4
	0x0341A4EC MOV X0, X21
	0x0341A4F0 MOV W2, W31
	0x0341A4F4 BL 0x1C5C788
	0x0341A4F8 B 0x341A508
	0x0341A4FC LDRSW X9, [X10]
	0x0341A500 ADD X8, X8, X9, 0x4, LSL
	0x0341A504 ADD X0, X8, 0x138
	0x0341A508 LDP X8, X1, [X0]
	0x0341A50C MOV X0, X21
	0x0341A510 BLR X8
	0x0341A514 MOV X2, X0
	0x0341A518 MOV X3, X1
	0x0341A51C MOV X0, X20
	0x0341A520 MOV X1, X2
	0x0341A524 MOV X2, X3
	0x0341A528 MOV X3, X31
	0x0341A52C BL 0x3E5FD24
	0x0341A530 B 0x341A460
	0x0341A534 MOV X22, X31
	0x0341A538 CBZ X21, 0x341A594
	0x0341A53C LDR X8, [X21]
	0x0341A540 LDR X1, [X24]
	0x0341A544 LDRH W9, [X8 + 0x12E]
	0x0341A548 CBZ X9, 0x341A56C
	0x0341A54C LDR X10, [X8 + 0xB0]
	0x0341A550 ADD X10, X10, 0x8
	0x0341A554 LDUR X11, [X10 - 0x8]
	0x0341A558 CMP X11, X1
	0x0341A55C B.EQ 0x341A57C
	0x0341A560 SUBS X9, X9, 0x1
	0x0341A564 ADD X10, X10, 0x10
	0x0341A568 B.NE 0x341A554
	0x0341A56C MOV X0, X21
	0x0341A570 MOV W2, W31
	0x0341A574 BL 0x1C5C788
	0x0341A578 B 0x341A588
	0x0341A57C LDRSW X9, [X10]
	0x0341A580 ADD X8, X8, X9, 0x4, LSL
	0x0341A584 ADD X0, X8, 0x138
	0x0341A588 LDP X8, X1, [X0]
	0x0341A58C MOV X0, X21
	0x0341A590 BLR X8
	0x0341A594 CBNZ X22, 0x341A5C8
	0x0341A598 MOV X0, X20
	0x0341A59C MOV W1, W19
	0x0341A5A0 MOV X2, X31
	0x0341A5A4 BL 0x3E60300
	0x0341A5A8 MOV X0, X20
	0x0341A5AC LDP X20, X19, [X31 + 0x30]
	0x0341A5B0 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xFC4000
	008 Move X23, 0xCDA000
	009 Move W8, [X20+1525]
	010 Move X23, [X23+2512]
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xD15000
	018 Move X0, [X0+2616]
	019 Call 0x1C17CF4
	020 Move X0, 0xCDA000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0xD15000
	024 Move X0, [X0+2624]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1525], W8
	028 Move X0, [X23]
	029 Move X20, [X21+32]
	030 Move X22, [X21+56]
	031 Move W1, 1
	032 Call 0x1C17D6C
	033 Compare X0, 0
	034 JumpIfEqual {72}
	035 Move X21, X0
	036 Compare X19, 0
	037 JumpIfEqual {44}
	038 Move X8, [X21]
	039 Move X0, X19
	040 Move X1, [X8+64]
	041 Call 0x1C17E00
	042 Compare X0, 0
	043 JumpIfEqual {74}
	044 Move W8, [X21+24]
	045 Compare W8, 0
	046 JumpIfEqual {73}
	047 Move X8, 0xD15000
	048 Move X8, [X8+2624]
	049 Move [X21+32], X19
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move X1, X31
	053 Move X19, X0
	054 Call Object..ctor, X0
	055 Move [X19+16], X22
	056 Move [X19+24], X21
	057 Compare X20, 0
	058 JumpIfEqual {72}
	059 Move X8, 0xD15000
	060 Move X8, [X8+2616]
	061 Move X0, X20
	062 Move X1, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X2, [X8]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Call ConcurrentQueue`1<Object>.Enqueue, X0, X1
	071 Return 
	072 Call 0x1C17F20
	073 Call 0x1C17F28
	074 Call 0x1C17F44
	075 Move X1, X31
	076 Call 0x1C17DEC

Method: System.Void OnReceived(System.ArraySegment`1<System.Byte> obj)

Disassembly:
	0x0341A5B4 LDP X24, X23, [X31 + 0x10]
	0x0341A5B8 LDP X30, X25, [X31], #0x40
	0x0341A5BC RET
	0x0341A5C0 BL 0x1C16F20
	0x0341A5C4 BL 0x1C16F20
	0x0341A5C8 MOV X0, X22
	0x0341A5CC BL 0x1C16F18
	0x0341A5D0 B 0x341A5DC
	0x0341A5D4 B 0x341A5DC
	0x0341A5D8 B 0x341A5DC
	0x0341A5DC MOV X23, X0
	0x0341A5E0 CMP W1, 0x1
	0x0341A5E4 B.NE 0x341A5FC
	0x0341A5E8 MOV X0, X23
	0x0341A5EC BL 0x3EB1AD0
	0x0341A5F0 LDR X22, [X0]
	0x0341A5F4 BL 0x3EB1AE0
	0x0341A5F8 B 0x341A538
	0x0341A5FC MOV X22, X31
	0x0341A600 B 0x341A608
	0x0341A604 MOV X23, X0
	0x0341A608 CBZ X21, 0x341A664
	0x0341A60C LDR X8, [X21]
	0x0341A610 LDR X1, [X24]
	0x0341A614 LDRH W9, [X8 + 0x12E]
	0x0341A618 CBZ X9, 0x341A63C
	0x0341A61C LDR X10, [X8 + 0xB0]
	0x0341A620 ADD X10, X10, 0x8
	0x0341A624 LDUR X11, [X10 - 0x8]
	0x0341A628 CMP X11, X1
	0x0341A62C B.EQ 0x341A64C
	0x0341A630 SUBS X9, X9, 0x1
	0x0341A634 ADD X10, X10, 0x10
	0x0341A638 B.NE 0x341A624
	0x0341A63C MOV X0, X21
	0x0341A640 MOV W2, W31
	0x0341A644 BL 0x1C5C788
	0x0341A648 B 0x341A658
	0x0341A64C LDRSW X9, [X10]
	0x0341A650 ADD X8, X8, X9, 0x4, LSL
	0x0341A654 ADD X0, X8, 0x138
	0x0341A658 LDP X8, X1, [X0]
	0x0341A65C MOV X0, X21
	0x0341A660 BLR X8
	0x0341A664 CBNZ X22, 0x341A670
	0x0341A668 MOV X0, X23
	0x0341A66C BL 0x1D2C690
	0x0341A670 MOV X0, X22
	0x0341A674 BL 0x1C16F18
	0x0341A678 BL 0x1990590
	0x0341A67C STP X30, X23, [X31 - 0x30]!
	0x0341A680 STP X22, X21, [X31 + 0x10]
	0x0341A684 STP X20, X19, [X31 + 0x20]
	0x0341A688 ADRP X22, 0xFC3000
	0x0341A68C ADRP X23, 0xD14000
	0x0341A690 LDRB W8, [X22 + 0x5FE]
	0x0341A694 LDR X23, [X23 + 0xB10]
	0x0341A698 MOV X19, X2
	0x0341A69C MOV X20, X1
	0x0341A6A0 MOV X21, X0
	0x0341A6A4 TBNZ X8, 0x0, 0x341A6BC
	0x0341A6A8 ADRP X0, 0xD14000
	0x0341A6AC LDR X0, [X0 + 0xB10]
	0x0341A6B0 BL 0x1C16CF4
	0x0341A6B4 MOVZ W8, 0x1
	0x0341A6B8 STRB W8, [X22 + 0x5FE]
	0x0341A6BC LDR X0, [X23]
	0x0341A6C0 BL 0x1C16F10
	0x0341A6C4 MOV X1, X31
	0x0341A6C8 MOV X22, X0
	0x0341A6CC BL 0x33BDD8C
	0x0341A6D0 STR W31, [X22 + 0x10]
	0x0341A6D4 STP X19, X20, [X22 + 0x28]
	0x0341A6D8 STR X21, [X22 + 0x20]
	0x0341A6DC MOV X0, X22
	0x0341A6E0 LDP X20, X19, [X31 + 0x20]
	0x0341A6E4 LDP X22, X21, [X31 + 0x10]
	0x0341A6E8 LDP X30, X23, [X31], #0x30
	0x0341A6EC RET
	0x0341A6F0 STR X30, [X31 - 0x20]!
	0x0341A6F4 STP X20, X19, [X31 + 0x10]
	0x0341A6F8 MOV W19, W1
	0x0341A6FC MOV X1, X31
	0x0341A700 MOV X20, X0
	0x0341A704 BL 0x33BDD8C
	0x0341A708 STR W19, [X20 + 0x10]
	0x0341A70C LDP X20, X19, [X31 + 0x10]
	0x0341A710 LDR X30, [X31], #0x20
	0x0341A714 RET
	0x0341A718 STR X30, [X31 - 0x10]!
	0x0341A71C CBZ X0, 0x341A738
	0x0341A720 MOV X1, X31
	0x0341A724 BL 0x3E5F54C
	0x0341A728 CMP W0, 0x3
	0x0341A72C CSET W0, EQ
	0x0341A730 LDR X30, [X31], #0x10
	0x0341A734 RET
	0x0341A738 BL 0x1C16F20
	0x0341A73C STR X30, [X31 - 0x10]!
	0x0341A740 CBZ X0, 0x341A75C
	0x0341A744 MOV X1, X31
	0x0341A748 BL 0x3E5F54C
	0x0341A74C CMP W0, 0x2
	0x0341A750 CSET W0, EQ
	0x0341A754 LDR X30, [X31], #0x10
	0x0341A758 RET
	0x0341A75C BL 0x1C16F20
	0x0341A760 STR X30, [X31 - 0x20]!
	0x0341A764 STP X20, X19, [X31 + 0x10]
	0x0341A768 ADRP X20, 0xFC3000
	0x0341A76C LDRB W8, [X20 + 0x5FF]
	0x0341A770 MOV X19, X0
	0x0341A774 TBNZ X8, 0x0, 0x341A78C
	0x0341A778 ADRP X0, 0xCDA000
	0x0341A77C LDR X0, [X0 + 0x6F0]
	0x0341A780 BL 0x1C16CF4
	0x0341A784 MOVZ W8, 0x1
	0x0341A788 STRB W8, [X20 + 0x5FF]
	0x0341A78C CBZ X19, 0x341A7A8
	0x0341A790 ADRP X8, 0xCDA000
	0x0341A794 LDR X8, [X8 + 0x6F0]
	0x0341A798 LDR X9, [X19]
	0x0341A79C LDR X8, [X8]
	0x0341A7A0 CMP X9, X8
	0x0341A7A4 B.EQ 0x341A7B8
	0x0341A7A8 MOV W0, W31
	0x0341A7AC LDP X20, X19, [X31 + 0x10]
	0x0341A7B0 LDR X30, [X31], #0x20
	0x0341A7B4 RET
	0x0341A7B8 LDR X8, [X19 + 0x90]
	0x0341A7BC MOVZ W0, 0x1
	0x0341A7C0 ADDS X31, X8, 0x1
	0x0341A7C4 B.EQ 0x341A7AC
	0x0341A7C8 CMP X8, 0x1F4
	0x0341A7CC B.EQ 0x341A7AC
	0x0341A7D0 SUB X8, X8, 0x1F6
	0x0341A7D4 CMP X8, 0x3
	0x0341A7D8 B.CS 0x341A7A8
	0x0341A7DC MOVZ W0, 0x1
	0x0341A7E0 B 0x341A7AC
	0x0341A7E4 STP X30, X21, [X31 - 0x20]!
	0x0341A7E8 STP X20, X19, [X31 + 0x10]
	0x0341A7EC ADRP X19, 0xFC3000
	0x0341A7F0 ADRP X21, 0xCDF000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0xFC4000
	015 Move X24, 0xD02000
	016 Move W8, [X22+1526]
	017 Move X24, [X24+1456]
	018 Move X20, X2
	019 Move X21, X1
	020 Move X19, X0
	021 Move X23, X2
	022 ShiftRight X23, 32
	023 And X23, X23, 0x7FFFFFFF
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {57}
	028 Move X0, 0xCE5000
	029 Move X0, [X0+3688]
	030 Call 0x1C17CF4
	031 Move X0, 0xD0D000
	032 Move X0, [X0+3312]
	033 Call 0x1C17CF4
	034 Move X0, 0xD0D000
	035 Move X0, [X0+3320]
	036 Call 0x1C17CF4
	037 Move X0, 0xD0D000
	038 Move X0, [X0+3328]
	039 Call 0x1C17CF4
	040 Move X0, 0xD02000
	041 Move X0, [X0+1456]
	042 Call 0x1C17CF4
	043 Move X0, 0xCDA000
	044 Move X0, [X0+1560]
	045 Call 0x1C17CF4
	046 Move X0, 0xD15000
	047 Move X0, [X0+2616]
	048 Call 0x1C17CF4
	049 Move X0, 0xCDA000
	050 Move X0, [X0+2512]
	051 Call 0x1C17CF4
	052 Move X0, 0xD15000
	053 Move X0, [X0+2624]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X22+1526], W8
	057 Move X0, [X24]
	058 Move X22, 0xCDA000
	059 Move W8, [X0+224]
	060 Move X22, [X22+1560]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X28, 0xCDA000
	065 Move X28, [X28+2512]
	066 Move X0, [X22]
	067 Move X27, 0xCE5000
	068 Move X26, 0xD15000
	069 Move X25, 0xD15000
	070 Move X27, [X27+3688]
	071 Move X26, [X26+2624]
	072 Move X25, [X25+2616]
	073 Move W1, W23
	074 Call 0x1C17D6C
	075 Add W8, W23, W20
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Move X22, X0
	079 Move W29, W31
	080 Subtract W23, W20, W8
	081 Move X0, [X24]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Add W8, W23, W29
	087 Compare W8, 0
	088 JumpIfEqual {108}
	089 Move X0, [X24]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Compare X21, 0
	095 JumpIfEqual {167}
	096 Move W9, [X21+24]
	097 Add W8, W20, W29
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Compare X22, 0
	100 JumpIfEqual {167}
	101 Move W9, [X22+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add X8, X21, W8
	104 Move W8, [X8+32]
	105 Add X9, X22, W29
	106 Add W29, W29, 1
	107 Move [X9+32], W8
	108 Move X0, [X28]
	109 Move X20, [X19+32]
	110 Move X23, [X19+64]
	111 Move W1, 1
	112 Call 0x1C17D6C
	113 Move X2, [X27]
	114 Move X19, X0
	115 Add X0, X31, 16
	116 Move X1, X22
	117 Move [X31+16], X31
	118 Move [X31+24], X31
	119 Call 0x2B88B6C, X0, X1
	120 Move V0, [X31+1]
	121 Move X0, [X24]
	122 Add X1, X31, 0
	123 Move [X31], V0
	124 Call 0x1C17E04
	125 Compare X19, 0
	126 JumpIfEqual {167}
	127 Move X21, X0
	128 Compare X0, 0
	129 JumpIfEqual {136}
	130 Move X8, [X19]
	131 Move X0, X21
	132 Move X1, [X8+64]
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {169}
	136 Move W8, [X19+24]
	137 Compare W8, 0
	138 JumpIfEqual {168}
	139 Move [X19+32], X21
	140 Move X0, [X26]
	141 Call 0x1C17F10
	142 Move X1, X31
	143 Move X21, X0
	144 Call Object..ctor, X0
	145 Move [X21+16], X23
	146 Move [X21+24], X19
	147 Compare X20, 0
	148 JumpIfEqual {167}
	149 Move X2, [X25]
	150 Move X0, X20
	151 Move X1, X21
	152 Call ConcurrentQueue`1<Object>.Enqueue, X0, X1
	153 Move X20, [X31+112]
	154 Move X19, [X31+120]
	155 Move X22, [X31+96]
	156 Move X21, [X31+104]
	157 Move X24, [X31+80]
	158 Move X23, [X31+88]
	159 Move X26, [X31+64]
	160 Move X25, [X31+72]
	161 Move X28, [X31+48]
	162 Move X27, [X31+56]
	163 Move X29, [X31+32]
	164 Move X30, [X31+40]
	165 Add X31, X31, 128
	166 Return 
	167 Call 0x1C17F20
	168 Call 0x1C17F28
	169 Call 0x1C17F44
	170 Move X1, X31
	171 Call 0x1C17DEC

Method: System.Void Update()

Disassembly:
	0x0341A7F4 ADRP X20, 0xD14000
	0x0341A7F8 LDRB W8, [X19 + 0x600]
	0x0341A7FC LDR X21, [X21 + 0xCC0]
	0x0341A800 LDR X20, [X20 + 0xAD0]
	0x0341A804 TBNZ X8, 0x0, 0x341A828
	0x0341A808 ADRP X0, 0xCDF000
	0x0341A80C LDR X0, [X0 + 0xCC0]
	0x0341A810 BL 0x1C16CF4
	0x0341A814 ADRP X0, 0xD14000
	0x0341A818 LDR X0, [X0 + 0xAD0]
	0x0341A81C BL 0x1C16CF4
	0x0341A820 MOVZ W8, 0x1
	0x0341A824 STRB W8, [X19 + 0x600]
	0x0341A828 LDR X0, [X21]
	0x0341A82C BL 0x1C16F10
	0x0341A830 MOV X1, X31
	0x0341A834 MOV X19, X0
	0x0341A838 BL 0x33BDD8C
	0x0341A83C LDR X8, [X20]
	0x0341A840 LDR X8, [X8 + 0xB8]
	0x0341A844 STR X19, [X8]
	0x0341A848 LDP X20, X19, [X31 + 0x10]
	0x0341A84C LDP X30, X21, [X31], #0x20
	0x0341A850 RET
	0x0341A854 STR X30, [X31 - 0x20]!
	0x0341A858 STP X20, X19, [X31 + 0x10]
	0x0341A85C ADRP X20, 0xFC3000
	0x0341A860 LDRB W8, [X20 + 0x601]
	0x0341A864 MOV X19, X0
	0x0341A868 TBNZ X8, 0x0, 0x341A880
	0x0341A86C ADRP X0, 0xD14000
	0x0341A870 LDR X0, [X0 + 0x9A0]
	0x0341A874 BL 0x1C16CF4
	0x0341A878 MOVZ W8, 0x1
	0x0341A87C STRB W8, [X20 + 0x601]
	0x0341A880 LDR X0, [X19 + 0x10]
	0x0341A884 CBZ X0, 0x341A8A0
	0x0341A888 ADRP X8, 0xD14000
	0x0341A88C LDR X8, [X8 + 0x9A0]
	0x0341A890 LDP X20, X19, [X31 + 0x10]
	0x0341A894 LDR X1, [X8]
	0x0341A898 LDR X30, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xFC4000
	007 Move W8, [X20+1527]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xD15000
	014 Move X0, [X0+2632]
	015 Call 0x1C17CF4
	016 Move X0, 0xD15000
	017 Move X0, [X0+2640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1527], W8
	021 Move [X31+8], X31
	022 Move X0, [X19+32]
	023 Compare X0, 0
	024 JumpIfEqual {49}
	025 Move X20, 0xD15000
	026 Move X21, 0xD15000
	027 Move X20, [X20+2640]
	028 Move X21, [X21+2632]
	029 Move X1, [X20]
	030 Call ConcurrentQueue`1<Object>.get_Count, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, [X19+32]
	033 Compare X0, 0
	034 JumpIfEqual {49}
	035 Move X2, [X21]
	036 Add X1, X31, 8
	037 Call ConcurrentQueue`1<Object>.TryDequeue, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {46}
	042 Move X0, [X31+8]
	043 Compare X0, 0
	044 JumpIfEqual {49}
	045 Call QueuedEvent.Dispatch, X0
	046 Move X0, [X19+32]
	047 Compare X0, 0
	048 JumpIfNotEqual {29}
	049 Call 0x1C17F20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Add X31, X31, 48
	055 Return 

Method: System.Void .ctor()

Disassembly:
	0x0341AA28 MOVZ W0, 0x1
	0x0341AA2C STR W0, [X19 + 0x10]
	0x0341AA30 B 0x341ACA4
	0x0341AA34 MOVN W8, 0x0
	0x0341AA38 STR W8, [X19 + 0x10]
	0x0341AA3C ADRP X25, 0xD14000
	0x0341AA40 LDR X25, [X25 + 0xAD0]
	0x0341AA44 LDR X20, [X19 + 0x20]
	0x0341AA48 LDR X0, [X25]
	0x0341AA4C LDR W8, [X0 + 0xE0]
	0x0341AA50 CBNZ W8, 0x341AA58
	0x0341AA54 BL 0x1C16DFC
	0x0341AA58 CBZ X20, 0x341ADF0
	0x0341AA5C MOV X0, X20
	0x0341AA60 MOV X1, X31
	0x0341AA64 BL 0x3E5F54C
	0x0341AA68 CMP W0, 0x2
	0x0341AA6C B.NE 0x341AAC4
	0x0341AA70 LDR X0, [X19 + 0x20]
	0x0341AA74 CBZ X0, 0x341ADF0
	0x0341AA78 LDR X22, [X19 + 0x28]
	0x0341AA7C MOV X1, X31
	0x0341AA80 BL 0x3E5F3A8
	0x0341AA84 ADRP X8, 0xCDA000
	0x0341AA88 LDR X8, [X8 + 0x6F0]
	0x0341AA8C MOV X21, X0
	0x0341AA90 LDR X8, [X8]
	0x0341AA94 MOV X0, X8
	0x0341AA98 BL 0x1C16F10
	0x0341AA9C MOV X1, X21
	0x0341AAA0 MOV X2, X31
	0x0341AAA4 MOV X20, X0
	0x0341AAA8 BL 0x340036C
	0x0341AAAC CBZ X22, 0x341ADF0
	0x0341AAB0 LDR X8, [X22 + 0x18]
	0x0341AAB4 LDR X0, [X22 + 0x40]
	0x0341AAB8 LDR X2, [X22 + 0x28]
	0x0341AABC MOV X1, X20
	0x0341AAC0 B 0x341AC8C
	0x0341AAC4 LDR X0, [X25]
	0x0341AAC8 LDR X20, [X19 + 0x20]
	0x0341AACC LDR W8, [X0 + 0xE0]
	0x0341AAD0 CBNZ W8, 0x341AAD8
	0x0341AAD4 BL 0x1C16DFC
	0x0341AAD8 CBZ X20, 0x341ADF0
	0x0341AADC MOV X0, X20
	0x0341AAE0 MOV X1, X31
	0x0341AAE4 BL 0x3E5F54C
	0x0341AAE8 CMP W0, 0x3
	0x0341AAEC B.NE 0x341ABD8
	0x0341AAF0 LDR X0, [X19 + 0x20]
	0x0341AAF4 CBZ X0, 0x341ADF0
	0x0341AAF8 MOV X1, X31
	0x0341AAFC BL 0x3E5F588
	0x0341AB00 CMP X0, 0x1F4
	0x0341AB04 B.GE 0x341AC10
	0x0341AB08 LDR X0, [X19 + 0x20]
	0x0341AB0C CBZ X0, 0x341ADF0
	0x0341AB10 MOV X1, X31
	0x0341AB14 BL 0x3E5F00C
	0x0341AB18 CBZ X0, 0x341ADF0
	0x0341AB1C MOV X1, X31
	0x0341AB20 BL 0x3E5DE60
	0x0341AB24 ADRP X8, 0xCDC000
	0x0341AB28 LDR X8, [X8 + 0x1A8]
	0x0341AB2C LDR X1, [X8]
	0x0341AB30 BL 0x220E6DC
	0x0341AB34 LDR X8, [X19 + 0x20]
	0x0341AB38 CBZ X8, 0x341ADF0
	0x0341AB3C MOV X20, X0
	0x0341AB40 MOV X0, X8
	0x0341AB44 MOV X1, X31
	0x0341AB48 BL 0x3E5F00C
	0x0341AB4C CBZ X0, 0x341ADF0
	0x0341AB50 MOV X1, X31
	0x0341AB54 BL 0x3E5DE60
	0x0341AB58 ADRP X24, 0xCDA000
	0x0341AB5C LDR X24, [X24 + 0x6F0]
	0x0341AB60 MOV X22, X0
	0x0341AB64 LDR X8, [X24]
	0x0341AB68 MOV X0, X8
	0x0341AB6C BL 0x1C16F10
	0x0341AB70 MOV X1, X22
	0x0341AB74 MOV X2, X31
	0x0341AB78 MOV X21, X0
	0x0341AB7C BL 0x340036C
	0x0341AB80 CBZ X20, 0x341ADD0
	0x0341AB84 ADRP X21, 0xCDC000
	0x0341AB88 ADRP X26, 0xCDB000
	0x0341AB8C LDR X21, [X21 + 0x220]
	0x0341AB90 LDR X26, [X26 + 0x220]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0xFC4000
	013 Move X28, 0xD15000
	014 Move X20, 0xD15000
	015 Move X26, 0xD15000
	016 Move X25, 0xD15000
	017 Move X24, 0xD15000
	018 Move X23, 0xD15000
	019 Move X22, 0xD15000
	020 Move X21, 0xD15000
	021 Move X28, [X28+2696]
	022 Move X20, [X20+2704]
	023 Move X26, [X26+2712]
	024 Move W8, [X27+1528]
	025 Move X25, [X25+2720]
	026 Move X24, [X24+2728]
	027 Move X23, [X23+2736]
	028 Move X22, [X22+2744]
	029 Move X21, [X21+2752]
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {61}
	035 Move X0, 0xD15000
	036 Move X0, [X0+2704]
	037 Call 0x1C17CF4
	038 Move X0, 0xD15000
	039 Move X0, [X0+2696]
	040 Call 0x1C17CF4
	041 Move X0, 0xD15000
	042 Move X0, [X0+2736]
	043 Call 0x1C17CF4
	044 Move X0, 0xD15000
	045 Move X0, [X0+2752]
	046 Call 0x1C17CF4
	047 Move X0, 0xD15000
	048 Move X0, [X0+2720]
	049 Call 0x1C17CF4
	050 Move X0, 0xD15000
	051 Move X0, [X0+2744]
	052 Call 0x1C17CF4
	053 Move X0, 0xD15000
	054 Move X0, [X0+2728]
	055 Call 0x1C17CF4
	056 Move X0, 0xD15000
	057 Move X0, [X0+2712]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X27+1528], W8
	061 Move X0, [X28]
	062 Call 0x1C17F10
	063 Move X1, [X20]
	064 Move X20, X0
	065 Call ConcurrentQueue`1<Object>..ctor, X0
	066 Move [X19+32], X20
	067 Move X0, [X26]
	068 Call 0x1C17F10
	069 Move X1, [X25]
	070 Move X20, X0
	071 Call List`1<Object>..ctor, X0
	072 Move [X19+40], X20
	073 Move X0, [X26]
	074 Call 0x1C17F10
	075 Move X1, [X25]
	076 Move X20, X0
	077 Call List`1<Object>..ctor, X0
	078 Move [X19+48], X20
	079 Move X0, [X24]
	080 Call 0x1C17F10
	081 Move X1, [X23]
	082 Move X20, X0
	083 Call List`1<Object>..ctor, X0
	084 Move [X19+56], X20
	085 Move X0, [X22]
	086 Call 0x1C17F10
	087 Move X1, [X21]
	088 Move X20, X0
	089 Call List`1<Object>..ctor, X0
	090 Move [X19+64], X20
	091 Move X0, X19
	092 Move X20, [X31+80]
	093 Move X19, [X31+88]
	094 Move X22, [X31+64]
	095 Move X21, [X31+72]
	096 Move X24, [X31+48]
	097 Move X23, [X31+56]
	098 Move X26, [X31+32]
	099 Move X25, [X31+40]
	100 Move X28, [X31+16]
	101 Move X27, [X31+24]
	102 Move X1, X31
	103 Move X30, [X31+96]
	104 Call MonoBehaviour..ctor, X0
	105 Return 

