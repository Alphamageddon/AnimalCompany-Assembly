Type: Unity.Collections.NativeArray`1/ReadOnly

Method: System.Void .ctor(System.Void* buffer, System.Int32 length)

Disassembly:
	0x024F52E4 STP V3, V2, [X31]
	0x024F52E8 LDR X0, [X19 + 0x20]
	0x024F52EC LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], W2
	003 Return 

Method: System.Int32 get_Length()

Disassembly:
	0x024F52F0 TBNZ X8, 0x0, 0x24F52F8
	0x024F52F4 BL 0x1C5C684

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: T get_Item(System.Int32 index)

Disassembly:
	0x024F52F8 LDR X8, [X0 + 0xC0]
	0x024F52FC ADD X1, X31, 0x0
	0x024F5300 LDR X0, [X8 + 0x18]
	0x024F5304 BL 0x1C16E04
	0x024F5308 LDP X20, X19, [X31 + 0x90]
	0x024F530C LDR X30, [X31 + 0x80]
	0x024F5310 ADD X31, X31, 0xA0
	0x024F5314 RET
	0x024F5318 SUB X31, X31, 0xA0
	0x024F531C STR X30, [X31 + 0x80]
	0x024F5320 STP X20, X19, [X31 + 0x90]
	0x024F5324 LDR X8, [X1 + 0x20]
	0x024F5328 MOV X19, X1
	0x024F532C MOV X20, X0
	0x024F5330 LDRB W9, [X8 + 0x135]
	0x024F5334 TBNZ X9, 0x0, 0x24F5344
	0x024F5338 MOV X0, X8
	0x024F533C BL 0x1C5C684
	0x024F5340 MOV X8, X0
	0x024F5344 LDR X8, [X8 + 0xC0]
	0x024F5348 MOV X0, X20
	0x024F534C LDR X1, [X8 + 0x30]
	0x024F5350 ADD X8, X31, 0x40
	0x024F5354 BL 0x24F522C
	0x024F5358 LDP V1, V0, [X31 + 0x60]
	0x024F535C LDP V3, V2, [X31 + 0x40]
	0x024F5360 STP V1, V0, [X31 + 0x20]
	0x024F5364 STP V3, V2, [X31]
	0x024F5368 LDR X0, [X19 + 0x20]
	0x024F536C LDRB W8, [X0 + 0x135]
	0x024F5370 TBNZ X8, 0x0, 0x24F5378
	0x024F5374 BL 0x1C5C684
	0x024F5378 LDR X8, [X0 + 0xC0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move [X31+32], X31
	007 Move [X31+40], X31
	008 Move [X31+56], W31
	009 Move [X31+48], X31
	010 Move X9, X0
	011 Move X0, [X2+32]
	012 Move X21, [X9]
	013 Move W20, W1
	014 Move X19, X8
	015 Move W10, [X0+309]
	016 Move TEMP, X10
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move W8, 28
	022 NotImplemented "Instruction SMADDL not yet implemented."
	023 Move W9, [X8+24]
	024 Move X10, [X8+16]
	025 Move V0, [X8]
	026 Move X30, [X31+64]
	027 Move X21, [X31+72]
	028 Move [X31+24], W9
	029 Move [X31+16], X10
	030 Move [X31], V0
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 Move [X31+2], V0
	033 Move [X31+44], V1
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 Move V1, [X31+2]
	036 Move [X19+12], V0
	037 Move [X19], V1
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Add X31, X31, 96
	041 Return X0

Method: Unity.Collections.NativeArray`1/ReadOnly/Enumerator<T> GetEnumerator()

Disassembly:
	0x024F537C ADD X1, X31, 0x0
	0x024F5380 LDR X0, [X8 + 0x18]
	0x024F5384 BL 0x1C16E04
	0x024F5388 LDP X20, X19, [X31 + 0x90]
	0x024F538C LDR X30, [X31 + 0x80]
	0x024F5390 ADD X31, X31, 0xA0
	0x024F5394 RET
	0x024F5398 STR X1, [X0]
	0x024F539C STR W2, [X0 + 0x8]
	0x024F53A0 RET
	0x024F53A4 LDR W0, [X0 + 0x8]
	0x024F53A8 RET
	0x024F53AC SUB X31, X31, 0x170
	0x024F53B0 STR X29, [X31 + 0x130]
	0x024F53B4 STP X30, X23, [X31 + 0x140]
	0x024F53B8 STP X22, X21, [X31 + 0x150]
	0x024F53BC STP X20, X19, [X31 + 0x160]
	0x024F53C0 MOV X21, X2
	0x024F53C4 MOV W20, W1
	0x024F53C8 MOV X22, X0
	0x024F53CC ADD X0, X31, 0x98
	0x024F53D0 MOVZ W2, 0x98
	0x024F53D4 MOV W1, W31
	0x024F53D8 MOV X19, X8
	0x024F53DC MOVZ W23, 0x98
	0x024F53E0 BL 0x3EB1B10
	0x024F53E4 LDR X0, [X21 + 0x20]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+112], X20
	004 Move [X31+120], X19
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move [X31+16], V0
	007 Move [X31+24], V0
	008 Move [X31], V0
	009 Move X20, X0
	010 Move X0, [X1+32]
	011 Move X19, X8
	012 Move W9, [X0+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move X8, [X0+192]
	019 Add X0, X31, 0
	020 Move X1, X20
	021 Move X2, [X8+32]
	022 Call 0x2BB59A4, X0, X1
	023 Move V1, [X31+16]
	024 Move V0, [X31+32]
	025 Move V2, [X31]
	026 Move X30, [X31+96]
	027 Move [X19+16], V1
	028 Move [X19+24], V0
	029 Move [X19], V2
	030 Move X20, [X31+112]
	031 Move X19, [X31+120]
	032 Move [X31+64], V1
	033 Move [X31+72], V0
	034 Move [X31+3], V2
	035 Add X31, X31, 128
	036 Return X0

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x024F53E8 LDR X21, [X22]
	0x024F53EC LDRB W8, [X0 + 0x135]
	0x024F53F0 TBNZ X8, 0x0, 0x24F53F8
	0x024F53F4 BL 0x1C5C684
	0x024F53F8 SMADDL X1, X20, X23, X21
	0x024F53FC ADD X0, X31, 0x0
	0x024F5400 MOVZ W2, 0x98
	0x024F5404 BL 0x3EB1B30
	0x024F5408 ADD X0, X31, 0x98
	0x024F540C ADD X1, X31, 0x0
	0x024F5410 MOVZ W2, 0x98
	0x024F5414 BL 0x3EB1AC0
	0x024F5418 ADD X1, X31, 0x98
	0x024F541C MOVZ W2, 0x98
	0x024F5420 MOV X0, X19
	0x024F5424 BL 0x3EB1AC0
	0x024F5428 LDP X20, X19, [X31 + 0x160]
	0x024F542C LDP X22, X21, [X31 + 0x150]
	0x024F5430 LDP X30, X23, [X31 + 0x140]
	0x024F5434 LDR X29, [X31 + 0x130]
	0x024F5438 ADD X31, X31, 0x170
	0x024F543C RET
	0x024F5440 SUB X31, X31, 0x190
	0x024F5444 STR X29, [X31 + 0x160]
	0x024F5448 STP X30, X21, [X31 + 0x170]
	0x024F544C STP X20, X19, [X31 + 0x180]
	0x024F5450 MOV X21, X1
	0x024F5454 MOV X20, X0
	0x024F5458 ADD X0, X31, 0x0
	0x024F545C MOVZ W2, 0xB0
	0x024F5460 MOV W1, W31
	0x024F5464 MOV X19, X8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+112], X20
	004 Move [X31+120], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, X20
	018 Move X1, [X8+48]
	019 Add X8, X31, 48
	020 Call 0x24F537C, X0
	021 Move V1, [X31+64]
	022 Move V0, [X31+80]
	023 Move V2, [X31+3]
	024 Move [X31+16], V1
	025 Move [X31+24], V0
	026 Move [X31], V2
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Add X1, X31, 0
	036 Move X0, [X8+24]
	037 Call 0x1C17E04
	038 Move X20, [X31+112]
	039 Move X19, [X31+120]
	040 Move X30, [X31+96]
	041 Add X31, X31, 128
	042 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x024F5468 BL 0x3EB1B10
	0x024F546C LDR X0, [X21 + 0x20]
	0x024F5470 LDRB W8, [X0 + 0x135]
	0x024F5474 TBNZ X8, 0x0, 0x24F547C
	0x024F5478 BL 0x1C5C684
	0x024F547C LDR X8, [X0 + 0xC0]
	0x024F5480 ADD X0, X31, 0x0
	0x024F5484 MOV X1, X20
	0x024F5488 LDR X2, [X8 + 0x20]
	0x024F548C BL 0x2BB8E6C
	0x024F5490 ADD X0, X31, 0xB0
	0x024F5494 ADD X1, X31, 0x0
	0x024F5498 MOVZ W2, 0xB0
	0x024F549C BL 0x3EB1AC0
	0x024F54A0 ADD X1, X31, 0xB0
	0x024F54A4 MOVZ W2, 0xB0
	0x024F54A8 MOV X0, X19
	0x024F54AC BL 0x3EB1AC0
	0x024F54B0 LDP X20, X19, [X31 + 0x180]
	0x024F54B4 LDP X30, X21, [X31 + 0x170]
	0x024F54B8 LDR X29, [X31 + 0x160]
	0x024F54BC ADD X31, X31, 0x190
	0x024F54C0 RET
	0x024F54C4 SUB X31, X31, 0x180
	0x024F54C8 STP X29, X30, [X31 + 0x160]
	0x024F54CC STP X20, X19, [X31 + 0x170]
	0x024F54D0 LDR X8, [X1 + 0x20]
	0x024F54D4 MOV X19, X1
	0x024F54D8 MOV X20, X0
	0x024F54DC LDRB W9, [X8 + 0x135]
	0x024F54E0 TBNZ X9, 0x0, 0x24F54F0
	0x024F54E4 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+112], X20
	004 Move [X31+120], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, X20
	018 Move X1, [X8+48]
	019 Add X8, X31, 48
	020 Call 0x24F537C, X0
	021 Move V1, [X31+64]
	022 Move V0, [X31+80]
	023 Move V2, [X31+3]
	024 Move [X31+16], V1
	025 Move [X31+24], V0
	026 Move [X31], V2
	027 Move X0, [X19+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Add X1, X31, 0
	036 Move X0, [X8+24]
	037 Call 0x1C17E04
	038 Move X20, [X31+112]
	039 Move X19, [X31+120]
	040 Move X30, [X31+96]
	041 Add X31, X31, 128
	042 Return X0

