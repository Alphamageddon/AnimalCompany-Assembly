Type: Unity.Collections.NativeSlice`1

Method: System.Void .ctor(Unity.Collections.NativeSlice`1<T> slice, System.Int32 start, System.Int32 length)

Disassembly:
	0x02404F88 MOV W1, W23
	0x02404F8C MOV X2, X24
	0x02404F90 MOV W3, W19
	0x02404F94 LDP X20, X19, [X31 + 0x30]
	0x02404F98 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Multiply W8, W2, W3
	002 Add X8, X1, W8
	003 Move [X0], X8
	004 Move [X0+8], W2
	005 Move [X0+12], W4
	006 Return 

Method: System.Void .ctor(Unity.Collections.NativeArray`1<T> array)

Disassembly:
	0x02404F9C LDP X24, X23, [X31 + 0x10]
	0x02404FA0 MOVZ W4, 0x10
	0x02404FA4 MOV X6, X31
	0x02404FA8 LDR X30, [X31], #0x40
	0x02404FAC B 0x3C00098
	0x02404FB0 SUB X31, X31, 0x40
	0x02404FB4 STP X30, X23, [X31 + 0x10]
	0x02404FB8 STP X22, X21, [X31 + 0x20]
	0x02404FBC STP X20, X19, [X31 + 0x30]
	0x02404FC0 MOV X8, X1
	0x02404FC4 MOV X20, X2
	0x02404FC8 MOV X19, X0
	0x02404FCC MOVZ W1, 0x3
	0x02404FD0 MOV X0, X8
	0x02404FD4 MOV X2, X31
	0x02404FD8 BL 0x32C0780
	0x02404FDC STR X0, [X31 + 0x8]
	0x02404FE0 ADD X0, X31, 0x8
	0x02404FE4 MOV X1, X31
	0x02404FE8 BL 0x32C0690
	0x02404FEC LDR X8, [X20 + 0x20]
	0x02404FF0 MOV X21, X0
	0x02404FF4 ADD X9, X8, 0x135

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move X8, [X8+192]
	018 Move X8, [X8+32]
	019 Move X0, [X8+32]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move W8, 152
	027 Move [X21], X20
	028 Move [X21+8], W8
	029 Move [X21+12], W19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 

Method: Unity.Collections.NativeSlice`1<T> op_Implicit(Unity.Collections.NativeArray`1<T> array)

Disassembly:
	0x02404FF8 LDRH W9, [X9]
	0x02404FFC TBNZ X9, 0x0, 0x2405014
	0x02405000 MOV X0, X8
	0x02405004 BL 0x1C5C684
	0x02405008 LDR X8, [X20 + 0x20]
	0x0240500C ADD X9, X8, 0x135
	0x02405010 LDRH W9, [X9]
	0x02405014 LDP X22, X23, [X19]
	0x02405018 TBNZ X9, 0x0, 0x2405028
	0x0240501C MOV X0, X8
	0x02405020 BL 0x1C5C684
	0x02405024 MOV X8, X0
	0x02405028 LDR X8, [X8 + 0xC0]
	0x0240502C MOV X0, X22
	0x02405030 MOV X1, X23
	0x02405034 LDR X2, [X8 + 0x58]
	0x02405038 BL 0x22232A0
	0x0240503C LDR X8, [X20 + 0x20]
	0x02405040 MOV X20, X0
	0x02405044 LDRB W9, [X8 + 0x135]
	0x02405048 TBNZ X9, 0x0, 0x2405054
	0x0240504C MOV X0, X8
	0x02405050 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31], X31
	007 Move X8, [X2+32]
	008 Move X19, X1
	009 Move X20, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Add X0, X31, 0
	020 Move X1, X20
	021 Move X2, X19
	022 Move X3, [X8+48]
	023 Call 0x2404F9C, X0, X1
	024 Move X0, [X31]
	025 Move X1, [X31+8]
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Void .ctor(Unity.Collections.NativeArray`1<T> array, System.Int32 start, System.Int32 length)

Disassembly:
	0x02405054 LDR W22, [X19 + 0x8]
	0x02405058 MOV X0, X21
	0x0240505C MOV X1, X31
	0x02405060 BL 0x33C6948
	0x02405064 LDR W5, [X19 + 0xC]
	0x02405068 MOV X2, X0
	0x0240506C MOVZ W3, 0x10
	0x02405070 MOVZ W4, 0x10
	0x02405074 MOV X0, X20
	0x02405078 MOV W1, W22
	0x0240507C MOV X6, X31
	0x02405080 BL 0x3C00098
	0x02405084 ADD X0, X31, 0x8
	0x02405088 MOV X1, X31
	0x0240508C BL 0x32C0794
	0x02405090 LDP X20, X19, [X31 + 0x30]
	0x02405094 LDP X22, X21, [X31 + 0x20]
	0x02405098 LDP X30, X23, [X31 + 0x10]
	0x0240509C ADD X31, X31, 0x40
	0x024050A0 RET
	0x024050A4 LDR W0, [X0 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X5+32]
	007 Move W19, W4
	008 Move W21, W3
	009 Move X20, X1
	010 Move W9, [X8+309]
	011 Move X22, X0
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {18}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move W8, 152
	019 Multiply W9, W21, W8
	020 Add X9, X20, W9
	021 Move [X22], X9
	022 Move [X22+8], W8
	023 Move [X22+12], W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Return 

Method: T get_Item(System.Int32 index)

Disassembly:
	0x024050A8 RET
	0x024050AC LDR W0, [X0 + 0xC]
	0x024050B0 RET
	0x024050B4 SUB X31, X31, 0x60
	0x024050B8 STR X30, [X31 + 0x40]
	0x024050BC STP X20, X19, [X31 + 0x50]
	0x024050C0 STP X31, X31, [X31 + 0x8]
	0x024050C4 STR X31, [X31 + 0x18]
	0x024050C8 MOV X20, X0
	0x024050CC LDR X0, [X1 + 0x20]
	0x024050D0 MOV X19, X8
	0x024050D4 LDRB W9, [X0 + 0x135]
	0x024050D8 TBNZ X9, 0x0, 0x24050E0
	0x024050DC BL 0x1C5C684
	0x024050E0 LDR X8, [X0 + 0xC0]
	0x024050E4 ADD X0, X31, 0x8
	0x024050E8 MOV X1, X20
	0x024050EC LDR X2, [X8 + 0x80]
	0x024050F0 BL 0x2BBAB68
	0x024050F4 LDR X8, [X31 + 0x18]
	0x024050F8 LDUR V0, [X31 + 0x8]
	0x024050FC LDR X30, [X31 + 0x40]
	0x02405100 STR X8, [X19 + 0x10]
	0x02405104 STR V0, [X19]
	0x02405108 LDP X20, X19, [X31 + 0x50]
	0x0240510C STR X8, [X31 + 0x30]
	0x02405110 STR V0, [X31 + 0x2]
	0x02405114 ADD X31, X31, 0x60
	0x02405118 RET
	0x0240511C SUB X31, X31, 0x50
	0x02405120 STP X31, X30, [X31 + 0x28]
	0x02405124 STP X20, X19, [X31 + 0x40]
	0x02405128 STP X31, X31, [X31 + 0x18]
	0x0240512C LDR X8, [X1 + 0x20]
	0x02405130 MOV X19, X1
	0x02405134 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X22
	005 Move [X31+328], X21
	006 Move [X31+336], X20
	007 Move [X31+344], X19
	008 Move X21, X2
	009 Move W20, W1
	010 Move X22, X0
	011 Add X0, X31, 152
	012 Move W2, 152
	013 Move W1, W31
	014 Move X19, X8
	015 Call 0x3EB2B10
	016 Move X0, [X21+32]
	017 Move X21, [X22]
	018 NotImplemented "Instruction LDRSW not yet implemented."
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, W20
	026 NotImplemented "Instruction MADD not yet implemented."
	027 Add X0, X31, 0
	028 Move W2, 152
	029 Call 0x3EB2B30
	030 Add X0, X31, 152
	031 Add X1, X31, 0
	032 Move W2, 152
	033 Call 0x3EB2AC0
	034 Add X1, X31, 152
	035 Move W2, 152
	036 Move X0, X19
	037 Call 0x3EB2AC0
	038 Move X20, [X31+336]
	039 Move X19, [X31+344]
	040 Move X22, [X31+320]
	041 Move X21, [X31+328]
	042 Move X29, [X31+304]
	043 Move X30, [X31+312]
	044 Add X31, X31, 352
	045 Return X0

Method: System.Void set_Item(System.Int32 index, T value)

Disassembly:
	0x02405138 LDRB W9, [X8 + 0x135]
	0x0240513C TBNZ X9, 0x0, 0x240514C
	0x02405140 MOV X0, X8
	0x02405144 BL 0x1C5C684
	0x02405148 MOV X8, X0
	0x0240514C LDR X8, [X8 + 0xC0]
	0x02405150 ADD X0, X31, 0x18
	0x02405154 MOV X1, X20
	0x02405158 LDR X2, [X8 + 0x80]
	0x0240515C BL 0x2BBAB68
	0x02405160 LDR X8, [X31 + 0x28]
	0x02405164 LDUR V0, [X31 + 0x18]
	0x02405168 STR X8, [X31 + 0x10]
	0x0240516C STR V0, [X31]
	0x02405170 LDR X0, [X19 + 0x20]
	0x02405174 LDRB W8, [X0 + 0x135]
	0x02405178 TBNZ X8, 0x0, 0x2405180
	0x0240517C BL 0x1C5C684
	0x02405180 LDR X8, [X0 + 0xC0]
	0x02405184 ADD X1, X31, 0x0
	0x02405188 LDR X0, [X8 + 0x78]
	0x0240518C BL 0x1C16E04
	0x02405190 LDP X20, X19, [X31 + 0x40]
	0x02405194 LDR X30, [X31 + 0x30]
	0x02405198 ADD X31, X31, 0x50
	0x0240519C RET
	0x024051A0 SUB X31, X31, 0x50
	0x024051A4 STR X30, [X31 + 0x30]
	0x024051A8 STP X20, X19, [X31 + 0x40]
	0x024051AC LDR X8, [X1 + 0x20]
	0x024051B0 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X22
	005 Move [X31+328], X21
	006 Move [X31+336], X20
	007 Move [X31+344], X19
	008 Move X21, [X0]
	009 NotImplemented "Instruction LDRSW not yet implemented."
	010 Move X8, X2
	011 Move W19, W1
	012 Add X0, X31, 0
	013 Move W2, 152
	014 Move X1, X8
	015 Move X20, X3
	016 Call 0x3EB2AC0
	017 Move X0, [X20+32]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Add X0, X31, 152
	025 Add X1, X31, 0
	026 Move W2, 152
	027 Call 0x3EB2AC0
	028 Move X8, W19
	029 NotImplemented "Instruction MADD not yet implemented."
	030 Add X1, X31, 152
	031 Move W2, 152
	032 Call 0x3EB2B30
	033 Move X20, [X31+336]
	034 Move X19, [X31+344]
	035 Move X22, [X31+320]
	036 Move X21, [X31+328]
	037 Move X29, [X31+304]
	038 Move X30, [X31+312]
	039 Add X31, X31, 352
	040 Return 

Method: System.Void CopyFrom(Unity.Collections.NativeSlice`1<T> slice)

Disassembly:
	0x024051B4 MOV X20, X0
	0x024051B8 LDRB W9, [X8 + 0x135]
	0x024051BC TBNZ X9, 0x0, 0x24051CC
	0x024051C0 MOV X0, X8
	0x024051C4 BL 0x1C5C684
	0x024051C8 MOV X8, X0
	0x024051CC LDR X8, [X8 + 0xC0]
	0x024051D0 MOV X0, X20
	0x024051D4 LDR X1, [X8 + 0x98]
	0x024051D8 ADD X8, X31, 0x18
	0x024051DC BL 0x24050B4
	0x024051E0 LDR X8, [X31 + 0x28]
	0x024051E4 LDUR V0, [X31 + 0x18]
	0x024051E8 STR X8, [X31 + 0x10]
	0x024051EC STR V0, [X31]
	0x024051F0 LDR X0, [X19 + 0x20]
	0x024051F4 LDRB W8, [X0 + 0x135]
	0x024051F8 TBNZ X8, 0x0, 0x2405200
	0x024051FC BL 0x1C5C684
	0x02405200 LDR X8, [X0 + 0xC0]
	0x02405204 ADD X1, X31, 0x0
	0x02405208 LDR X0, [X8 + 0x78]
	0x0240520C BL 0x1C16E04
	0x02405210 LDP X20, X19, [X31 + 0x40]
	0x02405214 LDR X30, [X31 + 0x30]
	0x02405218 ADD X31, X31, 0x50
	0x0240521C RET
	0x02405220 LDR X8, [X0]
	0x02405224 CMP X1, X8
	0x02405228 B.NE 0x240524C
	0x0240522C LDR W8, [X0 + 0x8]
	0x02405230 CMP W8, W2
	0x02405234 B.NE 0x240524C
	0x02405238 LDR W8, [X0 + 0xC]
	0x0240523C UBFM X9, X2, 0x20, 0x3F
	0x02405240 CMP W8, W9
	0x02405244 CSET W0, EQ
	0x02405248 RET
	0x0240524C MOV W0, W31
	0x02405250 RET
	0x02405254 STP X30, X21, [X31 - 0x20]!
	0x02405258 STP X20, X19, [X31 + 0x10]
	0x0240525C CBZ X1, 0x2405328
	0x02405260 MOV X19, X0
	0x02405264 LDR X0, [X2 + 0x20]
	0x02405268 MOV X20, X2
	0x0240526C MOV X21, X1
	0x02405270 LDRB W8, [X0 + 0x135]
	0x02405274 TBNZ X8, 0x0, 0x240527C
	0x02405278 BL 0x1C5C684
	0x0240527C LDR X8, [X0 + 0xC0]
	0x02405280 LDR X0, [X8]
	0x02405284 LDRB W8, [X0 + 0x135]
	0x02405288 TBNZ X8, 0x0, 0x2405290
	0x0240528C BL 0x1C5C684
	0x02405290 LDR X8, [X21]
	0x02405294 CMP X8, X0
	0x02405298 B.NE 0x2405328
	0x0240529C LDR X0, [X20 + 0x20]
	0x024052A0 LDRB W8, [X0 + 0x135]
	0x024052A4 TBNZ X8, 0x0, 0x24052AC
	0x024052A8 BL 0x1C5C684
	0x024052AC LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, X0
	009 Move X0, [X3+32]
	010 Move X23, [X20]
	011 Move X22, [X20+8]
	012 Move X21, X3
	013 Move X19, X2
	014 Move W8, [X0+309]
	015 Move X24, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move X8, [X0+192]
	022 Move X0, X23
	023 Move X1, X22
	024 Move X2, [X8+88]
	025 Call 0x2224298, X0
	026 Move X8, [X21+32]
	027 Move X22, X0
	028 Add X9, X8, 309
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Move TEMP, X9
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X0, X8
	035 Call 0x1C5D684
	036 Move X8, [X21+32]
	037 Add X9, X8, 309
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move W23, [X20+8]
	040 Move TEMP, X9
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {47}
	044 Move X0, X8
	045 Call 0x1C5D684
	046 Move X8, X0
	047 Move X8, [X8+192]
	048 Move X0, X24
	049 Move X1, X19
	050 Move X2, [X8+104]
	051 Call 0x22242CC, X0
	052 Move X8, [X21+32]
	053 Move X24, X0
	054 Add X9, X8, 309
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Move TEMP, X9
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {65}
	060 Move X0, X8
	061 Call 0x1C5D684
	062 Move X8, [X21+32]
	063 Add X9, X8, 309
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move TEMP, X9
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {71}
	069 Move X0, X8
	070 Call 0x1C5D684
	071 Move W5, [X20+12]
	072 Move X0, X22
	073 Move W1, W23
	074 Move X2, X24
	075 Move W3, W19
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move W4, 152
	083 Move X6, X31
	084 Move X30, [X31+64]
	085 Call UnsafeUtility.MemCpyStride, X0, X1, X2, X3, X4, X5
	086 Return 

Method: System.Void CopyFrom(T[] array)

Disassembly:
	0x024052B0 LDR X1, [X8]
	0x024052B4 LDRB W8, [X1 + 0x135]
	0x024052B8 TBNZ X8, 0x0, 0x24052C8
	0x024052BC MOV X0, X1
	0x024052C0 BL 0x1C5C684
	0x024052C4 MOV X1, X0
	0x024052C8 LDR X8, [X21]
	0x024052CC LDR X9, [X1 + 0x40]
	0x024052D0 MOV X0, X21
	0x024052D4 LDR X8, [X8 + 0x40]
	0x024052D8 CMP X8, X9
	0x024052DC B.NE 0x2405338
	0x024052E0 BL 0x1C16E08
	0x024052E4 MOV X8, X0
	0x024052E8 LDR X0, [X20 + 0x20]
	0x024052EC LDP X21, X20, [X8]
	0x024052F0 LDRB W9, [X0 + 0x135]
	0x024052F4 TBNZ X9, 0x0, 0x24052FC
	0x024052F8 BL 0x1C5C684
	0x024052FC LDR X8, [X19]
	0x02405300 CMP X21, X8
	0x02405304 B.NE 0x2405328
	0x02405308 LDR W8, [X19 + 0x8]
	0x0240530C CMP W8, W20
	0x02405310 B.NE 0x2405328
	0x02405314 LDR W8, [X19 + 0xC]
	0x02405318 UBFM X9, X20, 0x20, 0x3F
	0x0240531C CMP W8, W9
	0x02405320 CSET W0, EQ
	0x02405324 B 0x240532C
	0x02405328 MOV W0, W31
	0x0240532C LDP X20, X19, [X31 + 0x10]
	0x02405330 LDP X30, X21, [X31], #0x20
	0x02405334 RET
	0x02405338 BL 0x1C171E0
	0x0240533C LDR W8, [X0]
	0x02405340 LDP W9, W11, [X0 + 0x8]
	0x02405344 MOVZ W10, 0x18D
	0x02405348 MUL W8, W8, W10
	0x0240534C EOR W8, W8, W9, 0x0
	0x02405350 MUL W8, W8, W10
	0x02405354 EOR W0, W8, W11, 0x0
	0x02405358 RET
	0x0240535C MUL W8, W2, W3
	0x02405360 ADD X8, X1, W8, SXTW
	0x02405364 STR X8, [X0]
	0x02405368 STP W2, W4, [X0 + 0x8]
	0x0240536C RET
	0x02405370 STP X30, X21, [X31 - 0x20]!
	0x02405374 STP X20, X19, [X31 + 0x10]
	0x02405378 LDR X8, [X3 + 0x20]
	0x0240537C MOV X19, X2
	0x02405380 MOV X20, X1
	0x02405384 MOV X21, X0
	0x02405388 LDRB W9, [X8 + 0x135]
	0x0240538C TBNZ X9, 0x0, 0x240539C
	0x02405390 MOV X0, X8
	0x02405394 BL 0x1C5C684
	0x02405398 MOV X8, X0
	0x0240539C LDR X8, [X8 + 0xC0]
	0x024053A0 LDR X8, [X8 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, X1
	009 Move X20, X2
	010 Move X19, X0
	011 Move W1, 3
	012 Move X0, X8
	013 Move X2, X31
	014 Call GCHandle.Alloc, X0, X1
	015 Move [X31+8], X0
	016 Add X0, X31, 8
	017 Move X1, X31
	018 Call GCHandle.AddrOfPinnedObject, X0
	019 Move X8, [X20+32]
	020 Move X21, X0
	021 Add X9, X8, 309
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move TEMP, X9
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, X8
	028 Call 0x1C5D684
	029 Move X8, [X20+32]
	030 Add X9, X8, 309
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X22, [X19]
	033 Move X23, [X19+8]
	034 Move TEMP, X9
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X8
	039 Call 0x1C5D684
	040 Move X8, X0
	041 Move X8, [X8+192]
	042 Move X0, X22
	043 Move X1, X23
	044 Move X2, [X8+88]
	045 Call 0x2224298, X0
	046 Move X8, [X20+32]
	047 Move X20, X0
	048 Move W9, [X8+309]
	049 Move TEMP, X9
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {55}
	053 Move X0, X8
	054 Call 0x1C5D684
	055 Move W22, [X19+8]
	056 Move X0, X21
	057 Move X1, X31
	058 Call IntPtr.op_Explicit, X0
	059 Move W5, [X19+12]
	060 Move X2, X0
	061 Move W3, 152
	062 Move W4, 152
	063 Move X0, X20
	064 Move W1, W22
	065 Move X6, X31
	066 Call UnsafeUtility.MemCpyStride, X0, X1, X2, X3, X4, X5
	067 Add X0, X31, 8
	068 Move X1, X31
	069 Call GCHandle.Free, X0
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X30, [X31+16]
	075 Move X23, [X31+24]
	076 Add X31, X31, 64
	077 Return 

Method: System.Int32 get_Stride()

Disassembly:
	0x024053A4 LDR X0, [X8 + 0x20]
	0x024053A8 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Int32 get_Length()

Disassembly:
	0x024053AC TBNZ X8, 0x0, 0x24053B4
	0x024053B0 BL 0x1C5C684

ISIL:
	001 Move W0, [X0+12]
	002 Return X0

Method: Unity.Collections.NativeSlice`1/Enumerator<T> GetEnumerator()

Disassembly:
	0x024053B4 MOVZ W8, 0x10
	0x024053B8 STR X20, [X21]
	0x024053BC STP W8, W19, [X21 + 0x8]
	0x024053C0 LDP X20, X19, [X31 + 0x10]
	0x024053C4 LDP X30, X21, [X31], #0x20
	0x024053C8 RET
	0x024053CC SUB X31, X31, 0x30
	0x024053D0 STP X31, X30, [X31 + 0x8]
	0x024053D4 STP X20, X19, [X31 + 0x20]
	0x024053D8 STR X31, [X31]
	0x024053DC LDR X8, [X2 + 0x20]
	0x024053E0 MOV X19, X1
	0x024053E4 MOV X20, X0
	0x024053E8 LDRB W9, [X8 + 0x135]
	0x024053EC TBNZ X9, 0x0, 0x24053FC
	0x024053F0 MOV X0, X8
	0x024053F4 BL 0x1C5C684
	0x024053F8 MOV X8, X0
	0x024053FC LDR X8, [X8 + 0xC0]
	0x02405400 ADD X0, X31, 0x0
	0x02405404 MOV X1, X20
	0x02405408 MOV X2, X19
	0x0240540C LDR X3, [X8 + 0x30]
	0x02405410 BL 0x2405370
	0x02405414 LDP X0, X1, [X31]
	0x02405418 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Move [X31+8], X31
	006 Move [X31+16], X31
	007 Move [X31+24], X31
	008 Move X20, X0
	009 Move X0, [X1+32]
	010 Move X19, X8
	011 Move W9, [X0+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Add X0, X31, 8
	019 Move X1, X20
	020 Move X2, [X8+128]
	021 Call 0x2BB9D1C, X0, X1
	022 Move X8, [X31+24]
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 Move X30, [X31+64]
	025 Move [X19+16], X8
	026 Move [X19], V0
	027 Move X20, [X31+80]
	028 Move X19, [X31+88]
	029 Move [X31+48], X8
	030 Move [X31+2], V0
	031 Add X31, X31, 96
	032 Return X0

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x0240541C LDR X30, [X31 + 0x10]
	0x02405420 ADD X31, X31, 0x30
	0x02405424 RET
	0x02405428 STR X30, [X31 - 0x30]!
	0x0240542C STP X22, X21, [X31 + 0x10]
	0x02405430 STP X20, X19, [X31 + 0x20]
	0x02405434 LDR X8, [X5 + 0x20]
	0x02405438 MOV W19, W4
	0x0240543C MOV W21, W3
	0x02405440 MOV X20, X1
	0x02405444 LDRB W9, [X8 + 0x135]
	0x02405448 MOV X22, X0
	0x0240544C TBNZ X9, 0x0, 0x2405458
	0x02405450 MOV X0, X8
	0x02405454 BL 0x1C5C684
	0x02405458 UBFM W9, W21, 0x1C, 0x1B
	0x0240545C MOVZ W8, 0x10
	0x02405460 ADD X9, X20, W9, SXTW
	0x02405464 STR X9, [X22]
	0x02405468 STP W8, W19, [X22 + 0x8]
	0x0240546C LDP X20, X19, [X31 + 0x20]
	0x02405470 LDP X22, X21, [X31 + 0x10]
	0x02405474 LDR X30, [X31], #0x30
	0x02405478 RET
	0x0240547C STP X30, X21, [X31 - 0x20]!
	0x02405480 STP X20, X19, [X31 + 0x10]
	0x02405484 MOV X8, X0
	0x02405488 LDR X0, [X2 + 0x20]
	0x0240548C LDR X20, [X8]
	0x02405490 LDRSW X21, [X8 + 0x8]
	0x02405494 MOV W19, W1
	0x02405498 LDRB W9, [X0 + 0x135]
	0x0240549C TBNZ X9, 0x0, 0x24054A4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+40], X31
	003 Move [X31+48], X30
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move [X31+24], X31
	007 Move [X31+32], X31
	008 Move X8, [X1+32]
	009 Move X19, X1
	010 Move X20, X0
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X8, [X8+192]
	020 Add X0, X31, 24
	021 Move X1, X20
	022 Move X2, [X8+128]
	023 Call 0x2BB9D1C, X0, X1
	024 Move X8, [X31+40]
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move [X31+16], X8
	027 Move [X31], V0
	028 Move X0, [X19+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Add X1, X31, 0
	037 Move X0, [X8+120]
	038 Call 0x1C17E04
	039 Move X20, [X31+64]
	040 Move X19, [X31+72]
	041 Move X30, [X31+48]
	042 Add X31, X31, 80
	043 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x024054A0 BL 0x1C5C684
	0x024054A4 SXTW X8, W19
	0x024054A8 MADD X8, X21, X8, X20
	0x024054AC LDP X0, X1, [X8]
	0x024054B0 LDP X20, X19, [X31 + 0x10]
	0x024054B4 LDP X30, X21, [X31], #0x20
	0x024054B8 RET
	0x024054BC STP X30, X23, [X31 - 0x30]!
	0x024054C0 STP X22, X21, [X31 + 0x10]
	0x024054C4 STP X20, X19, [X31 + 0x20]
	0x024054C8 MOV X8, X0
	0x024054CC LDR X0, [X4 + 0x20]
	0x024054D0 LDR X22, [X8]
	0x024054D4 LDRSW X23, [X8 + 0x8]
	0x024054D8 MOV X19, X3
	0x024054DC LDRB W9, [X0 + 0x135]
	0x024054E0 MOV X20, X2
	0x024054E4 MOV W21, W1
	0x024054E8 TBNZ X9, 0x0, 0x24054F0
	0x024054EC BL 0x1C5C684
	0x024054F0 SXTW X8, W21
	0x024054F4 MADD X8, X23, X8, X22
	0x024054F8 STP X20, X19, [X8]
	0x024054FC LDP X20, X19, [X31 + 0x20]
	0x02405500 LDP X22, X21, [X31 + 0x10]
	0x02405504 LDP X30, X23, [X31], #0x30
	0x02405508 RET
	0x0240550C STR X30, [X31 - 0x40]!
	0x02405510 STP X24, X23, [X31 + 0x10]
	0x02405514 STP X22, X21, [X31 + 0x20]
	0x02405518 STP X20, X19, [X31 + 0x30]
	0x0240551C MOV X20, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, X20
	018 Move X1, [X8+152]
	019 Add X8, X31, 24
	020 Call 0x24053B4, X0
	021 Move X8, [X31+40]
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move [X31+16], X8
	024 Move [X31], V0
	025 Move X0, [X19+32]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move X8, [X0+192]
	033 Add X1, X31, 0
	034 Move X0, [X8+120]
	035 Call 0x1C17E04
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X30, [X31+48]
	039 Add X31, X31, 80
	040 Return X0

Method: System.Boolean Equals(Unity.Collections.NativeSlice`1<T> other)

Disassembly:
	0x02405520 LDR X0, [X3 + 0x20]
	0x02405524 LDP X23, X22, [X20]
	0x02405528 MOV X21, X3
	0x0240552C MOV X19, X2
	0x02405530 LDRB W8, [X0 + 0x135]
	0x02405534 MOV X24, X1
	0x02405538 TBNZ X8, 0x0, 0x2405540
	0x0240553C BL 0x1C5C684
	0x02405540 LDR X8, [X0 + 0xC0]
	0x02405544 MOV X0, X23
	0x02405548 MOV X1, X22
	0x0240554C LDR X2, [X8 + 0x58]
	0x02405550 BL 0x22232A4

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+8]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, [X0+12]
	006 Move X9, X2
	007 ShiftRight X9, 32
	008 And X9, X9, 0x7FFFFFFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Return X0
	012 Move W0, W31
	013 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x02405554 LDR X8, [X21 + 0x20]
	0x02405558 MOV X22, X0
	0x0240555C ADD X9, X8, 0x135
	0x02405560 LDRH W9, [X9]
	0x02405564 TBNZ X9, 0x0, 0x240557C
	0x02405568 MOV X0, X8
	0x0240556C BL 0x1C5C684
	0x02405570 LDR X8, [X21 + 0x20]
	0x02405574 ADD X9, X8, 0x135
	0x02405578 LDRH W9, [X9]
	0x0240557C LDR W23, [X20 + 0x8]
	0x02405580 TBNZ X9, 0x0, 0x2405590
	0x02405584 MOV X0, X8
	0x02405588 BL 0x1C5C684
	0x0240558C MOV X8, X0
	0x02405590 LDR X8, [X8 + 0xC0]
	0x02405594 MOV X0, X24
	0x02405598 MOV X1, X19
	0x0240559C LDR X2, [X8 + 0x68]
	0x024055A0 BL 0x22232D8
	0x024055A4 LDR X8, [X21 + 0x20]
	0x024055A8 MOV X24, X0
	0x024055AC ADD X9, X8, 0x135
	0x024055B0 LDRH W9, [X9]
	0x024055B4 TBNZ X9, 0x0, 0x24055CC
	0x024055B8 MOV X0, X8
	0x024055BC BL 0x1C5C684
	0x024055C0 LDR X8, [X21 + 0x20]
	0x024055C4 ADD X9, X8, 0x135
	0x024055C8 LDRH W9, [X9]
	0x024055CC TBNZ X9, 0x0, 0x24055D8
	0x024055D0 MOV X0, X8
	0x024055D4 BL 0x1C5C684
	0x024055D8 LDR W5, [X20 + 0xC]
	0x024055DC MOV X0, X22
	0x024055E0 MOV W1, W23
	0x024055E4 MOV X2, X24
	0x024055E8 MOV W3, W19
	0x024055EC LDP X20, X19, [X31 + 0x30]
	0x024055F0 LDP X22, X21, [X31 + 0x20]
	0x024055F4 LDP X24, X23, [X31 + 0x10]
	0x024055F8 MOVZ W4, 0x10
	0x024055FC MOV X6, X31
	0x02405600 LDR X30, [X31], #0x40
	0x02405604 B 0x3C00098
	0x02405608 SUB X31, X31, 0x40
	0x0240560C STP X30, X23, [X31 + 0x10]
	0x02405610 STP X22, X21, [X31 + 0x20]
	0x02405614 STP X20, X19, [X31 + 0x30]
	0x02405618 MOV X8, X1
	0x0240561C MOV X20, X2
	0x02405620 MOV X19, X0
	0x02405624 MOVZ W1, 0x3
	0x02405628 MOV X0, X8
	0x0240562C MOV X2, X31
	0x02405630 BL 0x32C0780
	0x02405634 STR X0, [X31 + 0x8]
	0x02405638 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {70}
	007 Move X19, X0
	008 Move X0, [X2+32]
	009 Move X20, X2
	010 Move X21, X1
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Move X0, [X8]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X21]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, [X20+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X1, [X8]
	036 Move W8, [X1+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X1
	042 Call 0x1C5D684
	043 Move X1, X0
	044 Move X8, [X21]
	045 Move X9, [X1+64]
	046 Move X0, X21
	047 Move X8, [X8+64]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Call 0x1C17E08
	050 Move X8, X0
	051 Move X0, [X20+32]
	052 Move X21, [X8]
	053 Move X20, [X8+8]
	054 Move W9, [X0+309]
	055 Move TEMP, X9
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Move X8, [X19]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W8, [X19+8]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, [X19+12]
	065 Move X9, X20
	066 ShiftRight X9, 32
	067 And X9, X9, 0x7FFFFFFF
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSET not yet implemented."
	070 Move W0, W31
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Return X0
	076 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x0240563C MOV X1, X31
	0x02405640 BL 0x32C0690
	0x02405644 LDR X8, [X20 + 0x20]
	0x02405648 MOV X21, X0
	0x0240564C ADD X9, X8, 0x135
	0x02405650 LDRH W9, [X9]
	0x02405654 TBNZ X9, 0x0, 0x240566C
	0x02405658 MOV X0, X8

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+8]
	003 Move W11, [X0+12]
	004 Move W10, 397
	005 Multiply W8, W8, W10
	006 Xor W8, W8, W9
	007 Multiply W8, W8, W10
	008 Xor W0, W8, W11
	009 Return X0

