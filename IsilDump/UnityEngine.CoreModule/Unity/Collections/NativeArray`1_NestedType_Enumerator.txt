Type: Unity.Collections.NativeArray`1/Enumerator

Method: System.Void .ctor(ref Unity.Collections.NativeArray`1<T> array)

Disassembly:
	0x02BB5848 LDR X8, [X20 + 0xC0]
	0x02BB584C ADD X1, X31, 0x8
	0x02BB5850 LDR X0, [X8 + 0x10]
	0x02BB5854 BL 0x1C16E04
	0x02BB5858 LDP X20, X19, [X31 + 0xA0]
	0x02BB585C LDP X22, X21, [X31 + 0x90]
	0x02BB5860 LDR X30, [X31 + 0x80]
	0x02BB5864 ADD X31, X31, 0xB0
	0x02BB5868 RET

ISIL:
	001 Move V0, [X1]
	002 Move TEMP, 0
	003 Not TEMP
	004 Move W8, TEMP
	005 Move [X0+20], X31
	006 Move [X0+36], X31
	007 Move [X0+28], X31
	008 Move [X0+16], W8
	009 Move [X0], V0
	010 Move [X0+44], W31
	011 Return 

Method: System.Void Dispose()

Disassembly:
	0x02BB586C BL 0x1C16F20

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02BB5870 STP X30, X19, [X31 - 0x10]!
	0x02BB5874 LDR X8, [X0]
	0x02BB5878 CBZ X8, 0x2BB58BC
	0x02BB587C LDR W9, [X0 + 0xC]
	0x02BB5880 LDR W8, [X8 + 0x1C]
	0x02BB5884 MOV X19, X0
	0x02BB5888 CMP W9, W8
	0x02BB588C B.EQ 0x2BB5898
	0x02BB5890 MOV X0, X31
	0x02BB5894 BL 0x339E09C
	0x02BB5898 MOVI V0.2D, 0x0
	0x02BB589C STR W31, [X19 + 0x8]
	0x02BB58A0 STP V0, V0, [X19 + 0x10]
	0x02BB58A4 STP V0, V0, [X19 + 0x30]
	0x02BB58A8 STP V0, V0, [X19 + 0x50]
	0x02BB58AC STR V0, [X19 + 0x7]
	0x02BB58B0 STR X31, [X19 + 0x80]
	0x02BB58B4 LDP X30, X19, [X31], #0x10
	0x02BB58B8 RET
	0x02BB58BC BL 0x1C16F20
	0x02BB58C0 STR X30, [X31 - 0x10]!
	0x02BB58C4 STR X1, [X0]
	0x02BB58C8 CBZ X1, 0x2BB58F8
	0x02BB58CC LDR W8, [X1 + 0x1C]
	0x02BB58D0 MOVN W9, 0x1
	0x02BB58D4 MOVI V0.2D, 0x0
	0x02BB58D8 STP V0, V0, [X0 + 0x10]
	0x02BB58DC STP V0, V0, [X0 + 0x30]
	0x02BB58E0 STP V0, V0, [X0 + 0x50]
	0x02BB58E4 STR V0, [X0 + 0x7]
	0x02BB58E8 STP W8, W9, [X0 + 0x8]
	0x02BB58EC STR X31, [X0 + 0x80]
	0x02BB58F0 LDR X30, [X31], #0x10
	0x02BB58F4 RET
	0x02BB58F8 BL 0x1C16F20
	0x02BB58FC MOVN W8, 0x0
	0x02BB5900 STR W8, [X0 + 0xC]
	0x02BB5904 RET
	0x02BB5908 STR X30, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move W8, [X0+16]
	008 Move W20, [X0+8]
	009 Move X19, X0
	010 Add W21, W8, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move [X0+16], W21
	013 Move X0, [X1+32]
	014 Move X22, [X19]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move W8, 28
	022 NotImplemented "Instruction SMADDL not yet implemented."
	023 Move W9, [X8+24]
	024 Move X10, [X8+16]
	025 Move V0, [X8]
	026 Move [X31+24], W9
	027 Move [X31+16], X10
	028 Move [X31], V0
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Move [X19+2], V1
	031 Move [X19+20], V0
	032 Move [X19+28], X31
	033 Move [X19+20], X31
	034 Move [X19+44], W31
	035 Move [X19+36], X31
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+64]
	038 Move X19, [X31+72]
	039 Move X22, [X31+48]
	040 Move X21, [X31+56]
	041 Move X30, [X31+32]
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Add X31, X31, 80
	044 Return X0

Method: System.Void Reset()

Disassembly:
	0x02BB590C STP X20, X19, [X31 + 0x10]
	0x02BB5910 LDR X8, [X0]
	0x02BB5914 CBZ X8, 0x2BB59F4

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+16], W8
	005 Return 

Method: T get_Current()

Disassembly:
	0x02BB5918 LDR W9, [X0 + 0x8]
	0x02BB591C LDR W10, [X8 + 0x1C]
	0x02BB5920 CMP W9, W10
	0x02BB5924 B.NE 0x2BB59F8
	0x02BB5928 LDR W10, [X0 + 0xC]

ISIL:
	001 Move V0, [X0+2]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+12], V0
	004 Move [X8], V1
	005 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BB592C ADDS W31, W10, 0x1
	0x02BB5930 B.EQ 0x2BB5984
	0x02BB5934 ADDS W31, W10, 0x2
	0x02BB5938 B.NE 0x2BB598C
	0x02BB593C LDR W19, [X8 + 0x18]
	0x02BB5940 SUB W9, W19, 0x1
	0x02BB5944 STR W9, [X0 + 0xC]
	0x02BB5948 TBNZ X9, 0x1F, 0x2BB5978
	0x02BB594C LDR X8, [X8 + 0x10]
	0x02BB5950 CBZ X8, 0x2BB59F4
	0x02BB5954 LDR W10, [X8 + 0x18]
	0x02BB5958 CMP W9, W10
	0x02BB595C B.CS 0x2BB5A38
	0x02BB5960 MOVZ W10, 0x78
	0x02BB5964 UMADDL X8, X9, X10, X8
	0x02BB5968 ADD X1, X8, 0x20
	0x02BB596C ADD X0, X0, 0x10
	0x02BB5970 MOVZ W2, 0x78
	0x02BB5974 BL 0x3EB1B30
	0x02BB5978 SUB W8, W31, W19
	0x02BB597C UBFM W0, W8, 0x1F, 0x1F
	0x02BB5980 B 0x2BB59E8
	0x02BB5984 MOV W0, W31
	0x02BB5988 B 0x2BB59E8
	0x02BB598C SUB W9, W10, 0x1
	0x02BB5990 SUB W19, W31, W10
	0x02BB5994 STR W9, [X0 + 0xC]
	0x02BB5998 TBNZ X9, 0x1F, 0x2BB59CC
	0x02BB599C LDR X8, [X8 + 0x10]
	0x02BB59A0 CBZ X8, 0x2BB59F4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X8, [X1+32]
	006 Move X19, X0
	007 Add X9, X8, 309
	008 NotImplemented "Instruction LDRH not yet implemented."
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {19}
	013 Move X0, X8
	014 Move X20, X1
	015 Call 0x1C5D684
	016 Move X8, [X20+32]
	017 Add X9, X8, 309
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Move V0, [X19+2]
	020 NotImplemented "Instruction LDUR not yet implemented."
	021 Move [X31+12], V0
	022 Move [X31], V1
	023 Move TEMP, X9
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {30}
	027 Move X0, X8
	028 Call 0x1C5D684
	029 Move X8, X0
	030 Move X8, [X8+192]
	031 Add X1, X31, 0
	032 Move X0, [X8+24]
	033 Call 0x1C17E04
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X30, [X31+32]
	037 Add X31, X31, 64
	038 Return X0

