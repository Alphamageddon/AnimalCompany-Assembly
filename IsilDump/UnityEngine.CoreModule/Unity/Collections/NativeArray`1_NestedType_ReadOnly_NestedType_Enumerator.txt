Type: Unity.Collections.NativeArray`1/ReadOnly/Enumerator

Method: System.Void .ctor(in Unity.Collections.NativeArray`1/ReadOnly<T> array)

Disassembly:
	0x02BB59A4 LDR W10, [X8 + 0x18]
	0x02BB59A8 CMP W9, W10
	0x02BB59AC B.CS 0x2BB5A38
	0x02BB59B0 MOVZ W10, 0x78
	0x02BB59B4 UMADDL X8, X9, X10, X8
	0x02BB59B8 ADD X1, X8, 0x20
	0x02BB59BC ADD X0, X0, 0x10
	0x02BB59C0 MOVZ W2, 0x78
	0x02BB59C4 BL 0x3EB1B30

ISIL:
	001 Move V0, [X1]
	002 Move TEMP, 0
	003 Not TEMP
	004 Move W8, TEMP
	005 Move [X0+20], X31
	006 Move [X0+36], X31
	007 Move [X0+28], X31
	008 Move [X0+16], W8
	009 Move [X0], V0
	010 Move [X0+44], W31
	011 Return 

Method: System.Void Dispose()

Disassembly:
	0x02BB59C8 B 0x2BB59E4

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02BB59CC MOVI V0.2D, 0x0
	0x02BB59D0 STR X31, [X0 + 0x80]
	0x02BB59D4 STP V0, V0, [X0 + 0x60]
	0x02BB59D8 STP V0, V0, [X0 + 0x40]
	0x02BB59DC STP V0, V0, [X0 + 0x20]
	0x02BB59E0 STR V0, [X0 + 0x1]
	0x02BB59E4 UBFM W0, W19, 0x1F, 0x1F
	0x02BB59E8 LDP X20, X19, [X31 + 0x10]
	0x02BB59EC LDR X30, [X31], #0x20
	0x02BB59F0 RET
	0x02BB59F4 BL 0x1C16F20
	0x02BB59F8 ADRP X0, 0x153E000
	0x02BB59FC LDR X0, [X0 + 0x5B0]
	0x02BB5A00 MOV X19, X1
	0x02BB5A04 BL 0x1C16D08
	0x02BB5A08 BL 0x1C16F10
	0x02BB5A0C MOV X20, X0
	0x02BB5A10 ADRP X0, 0x1568000
	0x02BB5A14 LDR X0, [X0 + 0x288]
	0x02BB5A18 BL 0x1C16D08
	0x02BB5A1C MOV X1, X0
	0x02BB5A20 MOV X0, X20
	0x02BB5A24 MOV X2, X31
	0x02BB5A28 BL 0x337DF1C
	0x02BB5A2C MOV X0, X20
	0x02BB5A30 MOV X1, X19
	0x02BB5A34 BL 0x1C16DEC
	0x02BB5A38 BL 0x1C16F28
	0x02BB5A3C STR X30, [X31 - 0x10]!
	0x02BB5A40 LDR W9, [X0 + 0xC]
	0x02BB5A44 TBNZ X9, 0x1F, 0x2BB5A5C
	0x02BB5A48 ADD X1, X0, 0x10
	0x02BB5A4C MOVZ W2, 0x78
	0x02BB5A50 MOV X0, X8
	0x02BB5A54 LDR X30, [X31], #0x10
	0x02BB5A58 B 0x3EB1AC0
	0x02BB5A5C STR X0, [X31 + 0x8]
	0x02BB5A60 LDR X0, [X1 + 0x20]
	0x02BB5A64 LDRB W8, [X0 + 0x135]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move W8, [X0+16]
	008 Move W20, [X0+8]
	009 Move X19, X0
	010 Add W21, W8, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move [X0+16], W21
	013 Move X0, [X1+32]
	014 Move X22, [X19]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move W8, 28
	022 NotImplemented "Instruction SMADDL not yet implemented."
	023 Move W9, [X8+24]
	024 Move X10, [X8+16]
	025 Move V0, [X8]
	026 Move [X31+24], W9
	027 Move [X31+16], X10
	028 Move [X31], V0
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Move [X19+2], V1
	031 Move [X19+20], V0
	032 Move [X19+28], X31
	033 Move [X19+20], X31
	034 Move [X19+44], W31
	035 Move [X19+36], X31
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+64]
	038 Move X19, [X31+72]
	039 Move X22, [X31+48]
	040 Move X21, [X31+56]
	041 Move X30, [X31+32]
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Add X31, X31, 80
	044 Return X0

Method: System.Void Reset()

Disassembly:
	0x02BB5A68 TBNZ X8, 0x0, 0x2BB5A70
	0x02BB5A6C BL 0x1C5C684
	0x02BB5A70 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+16], W8
	005 Return 

Method: T get_Current()

Disassembly:
	0x02BB5A74 LDR X0, [X31 + 0x8]
	0x02BB5A78 LDR X1, [X8 + 0x20]
	0x02BB5A7C BL 0x2BB5A80
	0x02BB5A80 STP X30, X21, [X31 - 0x20]!
	0x02BB5A84 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move V0, [X0+2]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 Move [X8+12], V0
	004 Move [X8], V1
	005 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02BB5A88 LDR W8, [X0 + 0xC]
	0x02BB5A8C ADRP X9, 0x1569000
	0x02BB5A90 ADRP X10, 0x1569000
	0x02BB5A94 LDR X9, [X9 + 0xC40]
	0x02BB5A98 LDR X10, [X10 + 0xC48]
	0x02BB5A9C ADDS W31, W8, 0x2
	0x02BB5AA0 MOV X19, X1
	0x02BB5AA4 CSEL X0, X10, X9, EQ
	0x02BB5AA8 BL 0x1C16D08
	0x02BB5AAC MOV X20, X0
	0x02BB5AB0 ADRP X0, 0x153E000
	0x02BB5AB4 LDR X0, [X0 + 0x5B0]
	0x02BB5AB8 BL 0x1C16D08
	0x02BB5ABC BL 0x1C16F10
	0x02BB5AC0 MOV X1, X20
	0x02BB5AC4 MOV X2, X31
	0x02BB5AC8 MOV X21, X0
	0x02BB5ACC BL 0x337DF1C
	0x02BB5AD0 MOV X0, X21
	0x02BB5AD4 MOV X1, X19
	0x02BB5AD8 BL 0x1C16DEC
	0x02BB5ADC SUB X31, X31, 0x110
	0x02BB5AE0 STP X29, X30, [X31 + 0xF0]
	0x02BB5AE4 STP X20, X19, [X31 + 0x100]
	0x02BB5AE8 LDR X8, [X1 + 0x20]
	0x02BB5AEC MOV X19, X1
	0x02BB5AF0 MOV X20, X0
	0x02BB5AF4 LDRB W9, [X8 + 0x135]
	0x02BB5AF8 TBNZ X9, 0x0, 0x2BB5B08
	0x02BB5AFC MOV X0, X8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X8, [X1+32]
	006 Move X19, X0
	007 Add X9, X8, 309
	008 NotImplemented "Instruction LDRH not yet implemented."
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {19}
	013 Move X0, X8
	014 Move X20, X1
	015 Call 0x1C5D684
	016 Move X8, [X20+32]
	017 Add X9, X8, 309
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Move V0, [X19+2]
	020 NotImplemented "Instruction LDUR not yet implemented."
	021 Move [X31+12], V0
	022 Move [X31], V1
	023 Move TEMP, X9
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {30}
	027 Move X0, X8
	028 Call 0x1C5D684
	029 Move X8, X0
	030 Move X8, [X8+192]
	031 Add X1, X31, 0
	032 Move X0, [X8+24]
	033 Call 0x1C17E04
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X30, [X31+32]
	037 Add X31, X31, 64
	038 Return X0

