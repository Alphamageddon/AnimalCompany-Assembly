Type: Unity.Jobs.IJobParallelForExtensions/ParallelForJobStruct`1

Method: System.Void Initialize()

Disassembly:
	0x024A2488 MOV W1, W21
	0x024A248C BL 0x1C16D6C
	0x024A2490 CBZ X0, 0x24A2514
	0x024A2494 LDR W8, [X0 + 0x18]
	0x024A2498 MOV X21, X0
	0x024A249C CMP W8, 0x1
	0x024A24A0 B.LT 0x24A24F8
	0x024A24A4 MOV X23, X31
	0x024A24A8 ADD X24, X21, 0x20
	0x024A24AC LDR X8, [X20 + 0x20]
	0x024A24B0 LDR X8, [X8 + 0xC0]
	0x024A24B4 LDR X0, [X8 + 0x8]
	0x024A24B8 LDRB W8, [X0 + 0x135]
	0x024A24BC TBNZ X8, 0x0, 0x24A24C4
	0x024A24C0 BL 0x1C5C684
	0x024A24C4 BL 0x1C16F10
	0x024A24C8 LDR X8, [X20 + 0x20]
	0x024A24CC MOV X22, X0
	0x024A24D0 LDR X8, [X8 + 0xC0]
	0x024A24D4 LDR X1, [X8 + 0x10]
	0x024A24D8 BL 0x3198258
	0x024A24DC LDR W8, [X21 + 0x18]
	0x024A24E0 CMP X23, X8
	0x024A24E4 B.CS 0x24A2510
	0x024A24E8 STR X22, [X24, X23, LSL #3]
	0x024A24EC ADD X23, X23, 0x1
	0x024A24F0 CMP X23, W8, SXTW
	0x024A24F4 B.LT 0x24A24AC
	0x024A24F8 STR X21, [X19 + 0x10]
	0x024A24FC LDP X20, X19, [X31 + 0x30]
	0x024A2500 LDP X22, X21, [X31 + 0x20]
	0x024A2504 LDP X24, X23, [X31 + 0x10]
	0x024A2508 LDR X30, [X31], #0x40
	0x024A250C RET
	0x024A2510 BL 0x1C16F28
	0x024A2514 BL 0x1C16F20
	0x024A2518 STP X30, X23, [X31 - 0x30]!
	0x024A251C STP X22, X21, [X31 + 0x10]
	0x024A2520 STP X20, X19, [X31 + 0x20]
	0x024A2524 ADRP X23, 0x1F37000
	0x024A2528 ADRP X22, 0x1C7A000
	0x024A252C LDRB W8, [X23 + 0xBB5]
	0x024A2530 LDR X22, [X22 + 0xE48]
	0x024A2534 MOV X19, X2
	0x024A2538 MOV X20, X1
	0x024A253C MOV X21, X0
	0x024A2540 TBNZ X8, 0x0, 0x24A2558
	0x024A2544 ADRP X0, 0x1C7A000
	0x024A2548 LDR X0, [X0 + 0xE48]
	0x024A254C BL 0x1C16CF4
	0x024A2550 MOVZ W8, 0x1
	0x024A2554 STRB W8, [X23 + 0xBB5]
	0x024A2558 LDR X0, [X22]
	0x024A255C LDR X21, [X21 + 0x10]
	0x024A2560 LDR W8, [X0 + 0xE0]
	0x024A2564 CBNZ W8, 0x24A256C
	0x024A2568 BL 0x1C16DFC
	0x024A256C MOV X0, X31
	0x024A2570 BL 0x32254F0
	0x024A2574 CBZ X21, 0x24A25EC
	0x024A2578 LDR W8, [X21 + 0x18]
	0x024A257C CMP W8, 0x1
	0x024A2580 B.LT 0x24A25D8
	0x024A2584 SDIV W9, W0, W8
	0x024A2588 MOV W22, W31
	0x024A258C MSUB W23, W9, W8, W0
	0x024A2590 CMP W23, W8
	0x024A2594 B.CS 0x24A25E8
	0x024A2598 ADD X8, X21, W23, 0x3, SXTW
	0x024A259C LDR X0, [X8 + 0x20]
	0x024A25A0 CBZ X0, 0x24A25EC
	0x024A25A4 LDR X8, [X19 + 0x20]
	0x024A25A8 MOV X1, X20
	0x024A25AC LDR X8, [X8 + 0xC0]
	0x024A25B0 LDR X2, [X8 + 0x30]
	0x024A25B4 BL 0x24A61D4
	0x024A25B8 TBNZ X0, 0x0, 0x24A25D8
	0x024A25BC LDR W8, [X21 + 0x18]
	0x024A25C0 ADD W9, W23, 0x1
	0x024A25C4 ADD W22, W22, 0x1
	0x024A25C8 CMP W9, W8
	0x024A25CC CSINC W23, W31, W23, EQ
	0x024A25D0 CMP W22, W8
	0x024A25D4 B.LT 0x24A2590
	0x024A25D8 LDP X20, X19, [X31 + 0x20]
	0x024A25DC LDP X22, X21, [X31 + 0x10]
	0x024A25E0 LDP X30, X23, [X31], #0x30
	0x024A25E4 RET
	0x024A25E8 BL 0x1C16F28
	0x024A25EC BL 0x1C16F20
	0x024A25F0 STP X30, X23, [X31 - 0x30]!
	0x024A25F4 STP X22, X21, [X31 + 0x10]
	0x024A25F8 STP X20, X19, [X31 + 0x20]
	0x024A25FC ADRP X21, 0x1F37000
	0x024A2600 ADRP X20, 0x1C7A000
	0x024A2604 LDRB W8, [X21 + 0xBB6]
	0x024A2608 LDR X20, [X20 + 0xE48]
	0x024A260C MOV X19, X0
	0x024A2610 TBNZ X8, 0x0, 0x24A2628
	0x024A2614 ADRP X0, 0x1C7A000
	0x024A2618 LDR X0, [X0 + 0xE48]
	0x024A261C BL 0x1C16CF4
	0x024A2620 MOVZ W8, 0x1
	0x024A2624 STRB W8, [X21 + 0xBB6]
	0x024A2628 LDR X0, [X20]
	0x024A262C LDR X21, [X19 + 0x10]
	0x024A2630 LDR W8, [X0 + 0xE0]
	0x024A2634 CBNZ W8, 0x24A263C
	0x024A2638 BL 0x1C16DFC
	0x024A263C MOV X0, X31
	0x024A2640 BL 0x32254F0
	0x024A2644 CBZ X21, 0x24A2708
	0x024A2648 LDR W8, [X21 + 0x18]
	0x024A264C CMP W8, 0x1
	0x024A2650 B.LT 0x24A26F0
	0x024A2654 SDIV W9, W0, W8
	0x024A2658 MOV W22, W31
	0x024A265C MSUB W23, W9, W8, W0
	0x024A2660 CMP W23, W8
	0x024A2664 B.CS 0x24A270C
	0x024A2668 ADD X8, X21, W23, 0x3, SXTW
	0x024A266C LDR X19, [X8 + 0x20]
	0x024A2670 CBZ X19, 0x24A2708
	0x024A2674 MOV X0, X19
	0x024A2678 MOV X1, X31
	0x024A267C BL 0x33E14E0
	0x024A2680 LDR W9, [X19 + 0x18]
	0x024A2684 CMP W9, 0x0
	0x024A2688 B.LE 0x24A26C8
	0x024A268C LDR X8, [X19 + 0x10]
	0x024A2690 SUB W9, W9, 0x1
	0x024A2694 STR W9, [X19 + 0x18]
	0x024A2698 CBZ X8, 0x24A2708
	0x024A269C LDR W10, [X8 + 0x18]
	0x024A26A0 CMP W9, W10
	0x024A26A4 B.CS 0x24A270C
	0x024A26A8 ADD X8, X8, W9, 0x3, UXTW
	0x024A26AC LDR X20, [X8 + 0x20]
	0x024A26B0 MOV X0, X19
	0x024A26B4 MOV X1, X31
	0x024A26B8 STR X31, [X8 + 0x20]
	0x024A26BC BL 0x33E14E4
	0x024A26C0 CBZ X20, 0x24A26D4
	0x024A26C4 B 0x24A26F4
	0x024A26C8 MOV X0, X19
	0x024A26CC MOV X1, X31
	0x024A26D0 BL 0x33E14E4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x1F38000
	008 Move W8, [X20+2988]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x1C7A000
	015 Move X0, [X0+2960]
	016 Call 0x1C17CF4
	017 Move X0, 0x1C52000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2988], W8
	022 Move X0, [X19+32]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+192]
	030 Move X0, [X8+8]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, [X19+32]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+192]
	049 Move X20, 0x1C7A000
	050 Move X0, [X8+8]
	051 Move W8, [X0+309]
	052 Move X20, [X20+2960]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Move X0, [X0+184]
	059 Move X1, [X20]
	060 Call 0x25E7504, X0
	061 Move X0, [X0]
	062 Move X1, X31
	063 Move X2, X31
	064 Call IntPtr.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {196}
	069 Move X0, [X19+32]
	070 Move W8, [X0+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {76}
	075 Call 0x1C5D684
	076 Move X8, [X0+192]
	077 Move X0, [X8+8]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, [X19+32]
	089 Move W8, [X0+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {95}
	094 Call 0x1C5D684
	095 Move X8, [X0+192]
	096 Move X0, [X8+8]
	097 Move W8, [X0+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {103}
	102 Call 0x1C5D684
	103 Move X0, [X0+184]
	104 Move X1, [X20]
	105 Move X21, 0x1C52000
	106 Move X21, [X21+1728]
	107 Call 0x25E7504, X0
	108 Move X8, [X19+32]
	109 Move X20, X0
	110 Move W9, [X8+309]
	111 Move TEMP, X9
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {118}
	115 Move X0, X8
	116 Call 0x1C5D684
	117 Move X8, X0
	118 Move X0, [X21]
	119 Move X8, [X8+192]
	120 Move W9, [X0+224]
	121 Move X21, [X8+16]
	122 Compare W9, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X21
	126 Move X1, X31
	127 Call Type.GetTypeFromHandle, X0
	128 Move X8, [X19+32]
	129 Move X21, X0
	130 Move W9, [X8+309]
	131 Move TEMP, X9
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {138}
	135 Move X0, X8
	136 Call 0x1C5D684
	137 Move X8, X0
	138 Move X8, [X8+192]
	139 Move X0, [X8+32]
	140 Move W8, [X0+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {146}
	145 Call 0x1C5D684
	146 Call 0x1C17F10
	147 Move X8, [X19+32]
	148 Move X22, X0
	149 Add X9, X8, 309
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Move TEMP, X9
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {160}
	155 Move X0, X8
	156 Call 0x1C5D684
	157 Move X8, [X19+32]
	158 Add X9, X8, 309
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 Move X0, X8
	161 Move X10, [X0+192]
	162 Move X10, [X10+40]
	163 Move X23, [X10]
	164 Move TEMP, X9
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {173}
	168 Move X0, X8
	169 Call 0x1C5D684
	170 Move X8, [X19+32]
	171 Add X9, X8, 309
	172 NotImplemented "Instruction LDRH not yet implemented."
	173 Move X0, X8
	174 Move X10, [X0+192]
	175 Move X19, [X10+24]
	176 Move TEMP, X9
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfEqual {183}
	180 Move X0, X8
	181 Call 0x1C5D684
	182 Move X8, X0
	183 Move X8, [X8+192]
	184 Move X0, X22
	185 Move X1, X31
	186 Move X2, X19
	187 Move X3, [X8+40]
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move X0, X21
	190 Move X1, X22
	191 Move X2, X31
	192 Move X3, X31
	193 Move X4, X31
	194 Call JobsUtility.CreateJobReflectionData, X0, X1, X2, X3
	195 Move [X20], X0
	196 Move X20, [X31+32]
	197 Move X19, [X31+40]
	198 Move X22, [X31+16]
	199 Move X21, [X31+24]
	200 Move X30, [X31+48]
	201 Move X23, [X31+56]
	202 Return 

Method: System.Void Execute(ref T jobData, System.IntPtr additionalPtr, System.IntPtr bufferRangePatchData, ref Unity.Jobs.LowLevel.Unsafe.JobRanges ranges, System.Int32 jobIndex)

Disassembly:
	0x024A26D4 LDR W8, [X21 + 0x18]
	0x024A26D8 ADD W9, W23, 0x1
	0x024A26DC ADD W22, W22, 0x1
	0x024A26E0 CMP W9, W8
	0x024A26E4 CSINC W23, W31, W23, EQ
	0x024A26E8 CMP W22, W8
	0x024A26EC B.LT 0x24A2660
	0x024A26F0 MOV X20, X31
	0x024A26F4 MOV X0, X20
	0x024A26F8 LDP X20, X19, [X31 + 0x20]
	0x024A26FC LDP X22, X21, [X31 + 0x10]
	0x024A2700 LDP X30, X23, [X31], #0x30
	0x024A2704 RET
	0x024A2708 BL 0x1C16F20
	0x024A270C BL 0x1C16F28
	0x024A2710 STP X30, X25, [X31 - 0x40]!
	0x024A2714 STP X24, X23, [X31 + 0x10]
	0x024A2718 STP X22, X21, [X31 + 0x20]
	0x024A271C STP X20, X19, [X31 + 0x30]
	0x024A2720 LDR X24, [X0 + 0x10]
	0x024A2724 CBZ X24, 0x24A27C4
	0x024A2728 LDR W9, [X24 + 0x18]
	0x024A272C CMP W9, 0x1
	0x024A2730 B.LT 0x24A27A8
	0x024A2734 MOV X19, X5
	0x024A2738 MOV X20, X4
	0x024A273C MOV W21, W3
	0x024A2740 MOV W22, W2
	0x024A2744 MOV W23, W1
	0x024A2748 MOV W8, W31
	0x024A274C CMP W8, W9
	0x024A2750 B.CS 0x24A27C0
	0x024A2754 CBZ X20, 0x24A27C4
	0x024A2758 LDR W9, [X20 + 0x18]
	0x024A275C SXTW X25, W8
	0x024A2760 CMP W25, W9
	0x024A2764 B.CS 0x24A27C0
	0x024A2768 ADD X8, X24, X25, 0x3, LSL
	0x024A276C LDR X0, [X8 + 0x20]
	0x024A2770 CBZ X0, 0x24A27C4
	0x024A2774 LDR X8, [X19 + 0x20]
	0x024A2778 ADD X9, X20, X25, 0x2, LSL
	0x024A277C LDR W4, [X9 + 0x20]
	0x024A2780 MOV W1, W23
	0x024A2784 LDR X8, [X8 + 0xC0]
	0x024A2788 MOV W2, W22
	0x024A278C MOV W3, W21
	0x024A2790 LDR X5, [X8 + 0x48]
	0x024A2794 BL 0x3198004
	0x024A2798 LDR W9, [X24 + 0x18]
	0x024A279C ADD W8, W25, 0x1
	0x024A27A0 CMP W8, W9
	0x024A27A4 B.LT 0x24A274C
	0x024A27A8 LDP X20, X19, [X31 + 0x30]
	0x024A27AC LDP X22, X21, [X31 + 0x20]
	0x024A27B0 LDP X24, X23, [X31 + 0x10]
	0x024A27B4 MOVZ W0, 0x1
	0x024A27B8 LDP X30, X25, [X31], #0x40
	0x024A27BC RET
	0x024A27C0 BL 0x1C16F28
	0x024A27C4 BL 0x1C16F20
	0x024A27C8 STR X30, [X31 - 0x40]!
	0x024A27CC STP X24, X23, [X31 + 0x10]
	0x024A27D0 STP X22, X21, [X31 + 0x20]
	0x024A27D4 STP X20, X19, [X31 + 0x30]
	0x024A27D8 ADRP X22, 0x1F37000
	0x024A27DC ADRP X21, 0x1C51000
	0x024A27E0 LDRB W8, [X22 + 0xBB7]
	0x024A27E4 LDR X21, [X21 + 0x5A8]
	0x024A27E8 MOV X20, X1
	0x024A27EC MOV X19, X0
	0x024A27F0 TBNZ X8, 0x0, 0x24A2808
	0x024A27F4 ADRP X0, 0x1C51000
	0x024A27F8 LDR X0, [X0 + 0x5A8]
	0x024A27FC BL 0x1C16CF4
	0x024A2800 MOVZ W8, 0x1
	0x024A2804 STRB W8, [X22 + 0xBB7]
	0x024A2808 MOV X0, X19
	0x024A280C MOV X1, X31
	0x024A2810 BL 0x33BDD8C
	0x024A2814 MOV X0, X31
	0x024A2818 BL 0x33C236C
	0x024A281C LDR X8, [X21]
	0x024A2820 MOV W21, W0
	0x024A2824 LDR W9, [X8 + 0xE0]
	0x024A2828 CBNZ W9, 0x24A2834
	0x024A282C MOV X0, X8
	0x024A2830 BL 0x1C16DFC
	0x024A2834 MOVZ W1, 0x40
	0x024A2838 MOV W0, W21
	0x024A283C MOV X2, X31
	0x024A2840 BL 0x337EE94
	0x024A2844 LDR X8, [X20 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 32
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X25+40]
	017 Move X19, X5
	018 Move W20, W4
	019 Move X21, X3
	020 Move [X29-8], X8
	021 Move X8, [X5+32]
	022 Move X22, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {31}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X8, X0
	031 Move X8, [X8+192]
	032 Move X0, [X8+56]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move W8, [X0+252]
	040 Add X9, X31, 0
	041 Add W8, W8, 16
	042 Add X8, X8, 15
	043 And X8, X8, 0x1FFFFFFFF
	044 Subtract X23, X9, X8
	045 Add X31, X23, 0
	046 Subtract X2, X29, 28
	047 Subtract X3, X29, 32
	048 Move X0, X21
	049 Move W1, W20
	050 Move X4, X31
	051 Move [X29-32], X31
	052 Call JobsUtility.GetWorkStealingRange, X0, X1, X2, X3
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {107}
	057 Subtract X26, X29, 12
	058 Move W27, [X29-32]
	059 Move W28, [X29-28]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, [X19+32]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Move X8, [X0+192]
	069 Move X24, [X8+56]
	070 Move W8, [X24+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {78}
	075 Move X0, X24
	076 Call 0x1C5D684
	077 Move X24, X0
	078 Move X0, [X19+32]
	079 Move W8, [X0+309]
	080 Move TEMP, X8
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {85}
	084 Call 0x1C5D684
	085 Move X8, [X0+192]
	086 Subtract X4, X29, 24
	087 Subtract X5, X29, 12
	088 Move X0, X24
	089 Move X1, [X8+64]
	090 Move X2, X23
	091 Move X3, X22
	092 Move [X29-12], W28
	093 Move [X29-24], X26
	094 Call 0x1C18728
	095 Add W28, W28, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Subtract X2, X29, 28
	098 Subtract X3, X29, 32
	099 Move X0, X21
	100 Move W1, W20
	101 Move X4, X31
	102 Call JobsUtility.GetWorkStealingRange, X0, X1, X2, X3
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {58}
	107 Move X8, [X25+40]
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X31, X29, 0
	111 Move X20, [X31+80]
	112 Move X19, [X31+88]
	113 Move X22, [X31+64]
	114 Move X21, [X31+72]
	115 Move X24, [X31+48]
	116 Move X23, [X31+56]
	117 Move X26, [X31+32]
	118 Move X25, [X31+40]
	119 Move X28, [X31+16]
	120 Move X27, [X31+24]
	121 Move X29, [X31+96]
	122 Move X30, [X31+104]
	123 Return 
	124 Call 0x3EB2B20

Method: System.Void .cctor()

Disassembly:
	0x024A2848 MOV W21, W0
	0x024A284C LDR X8, [X8 + 0xC0]
	0x024A2850 LDR X8, [X8]
	0x024A2854 LDRB W9, [X8 + 0x135]
	0x024A2858 TBNZ X9, 0x0, 0x24A2868
	0x024A285C MOV X0, X8
	0x024A2860 BL 0x1C5C684
	0x024A2864 MOV X8, X0
	0x024A2868 MOV X0, X8
	0x024A286C MOV W1, W21
	0x024A2870 BL 0x1C16D6C
	0x024A2874 CBZ X0, 0x24A28FC
	0x024A2878 LDR W8, [X0 + 0x18]
	0x024A287C MOV X21, X0
	0x024A2880 CMP W8, 0x1
	0x024A2884 B.LT 0x24A28E0
	0x024A2888 MOV X23, X31
	0x024A288C ADD X24, X21, 0x20
	0x024A2890 LDR X8, [X20 + 0x20]
	0x024A2894 LDR X8, [X8 + 0xC0]
	0x024A2898 LDR X0, [X8 + 0x8]
	0x024A289C LDRB W8, [X0 + 0x135]
	0x024A28A0 TBNZ X8, 0x0, 0x24A28A8
	0x024A28A4 BL 0x1C5C684
	0x024A28A8 BL 0x1C16F10
	0x024A28AC LDR X8, [X20 + 0x20]
	0x024A28B0 MOV X22, X0
	0x024A28B4 LDR X8, [X8 + 0xC0]
	0x024A28B8 LDR X1, [X8 + 0x10]
	0x024A28BC LDR X8, [X1]
	0x024A28C0 BLR X8
	0x024A28C4 LDR W8, [X21 + 0x18]
	0x024A28C8 CMP X23, X8
	0x024A28CC B.CS 0x24A28F8
	0x024A28D0 STR X22, [X24, X23, LSL #3]
	0x024A28D4 ADD X23, X23, 0x1
	0x024A28D8 CMP X23, W8, SXTW
	0x024A28DC B.LT 0x24A2890
	0x024A28E0 STR X21, [X19 + 0x10]
	0x024A28E4 LDP X20, X19, [X31 + 0x30]
	0x024A28E8 LDP X22, X21, [X31 + 0x20]
	0x024A28EC LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 Move X19, X0
	006 Add X9, X8, 309
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, [X19+32]
	015 Add X9, X8, 309
	016 NotImplemented "Instruction LDRH not yet implemented."
	017 Move X0, X8
	018 Move X10, [X0+192]
	019 Move X10, [X10+72]
	020 Move X20, [X10]
	021 Move TEMP, X9
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X8
	026 Call 0x1C5D684
	027 Move X8, X0
	028 Move X8, [X8+192]
	029 Move W0, W31
	030 Move X1, [X8+72]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X19+32]
	033 Move X19, X0
	034 Move W9, [X8+309]
	035 Move TEMP, X9
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {42}
	039 Move X0, X8
	040 Call 0x1C5D684
	041 Move X8, X0
	042 Move X8, [X8+192]
	043 Move X0, [X8+8]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+184]
	051 Move [X8], X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return 

