Type: Unity.Jobs.IJobForExtensions/ForJobStruct`1

Method: System.Void Initialize()

Disassembly:
	0x02D24630 LDR X8, [X8 + 0xC0]
	0x02D24634 LDR X0, [X8 + 0x8]
	0x02D24638 LDRB W8, [X0 + 0x135]
	0x02D2463C TBNZ X8, 0x0, 0x2D24644
	0x02D24640 BL 0x1C5C684
	0x02D24644 LDR X8, [X0 + 0xB8]
	0x02D24648 STR X19, [X8]
	0x02D2464C LDP X30, X19, [X31], #0x10
	0x02D24650 RET
	0x02D24654 STP X30, X23, [X31 - 0x30]!
	0x02D24658 STP X22, X21, [X31 + 0x10]
	0x02D2465C STP X20, X19, [X31 + 0x20]
	0x02D24660 ADRP X20, 0x16B7000
	0x02D24664 LDRB W8, [X20 + 0x7E8]
	0x02D24668 MOV X19, X0
	0x02D2466C TBNZ X8, 0x0, 0x2D24690
	0x02D24670 ADRP X0, 0x13F7000
	0x02D24674 LDR X0, [X0 + 0xB90]
	0x02D24678 BL 0x1C16CF4
	0x02D2467C ADRP X0, 0x13CF000
	0x02D24680 LDR X0, [X0 + 0x6C0]
	0x02D24684 BL 0x1C16CF4
	0x02D24688 MOVZ W8, 0x1
	0x02D2468C STRB W8, [X20 + 0x7E8]
	0x02D24690 LDR X0, [X19 + 0x20]
	0x02D24694 LDRB W8, [X0 + 0x135]
	0x02D24698 TBNZ X8, 0x0, 0x2D246A0
	0x02D2469C BL 0x1C5C684
	0x02D246A0 LDR X8, [X0 + 0xC0]
	0x02D246A4 LDR X0, [X8 + 0x8]
	0x02D246A8 LDRB W8, [X0 + 0x135]
	0x02D246AC TBNZ X8, 0x0, 0x2D246B4
	0x02D246B0 BL 0x1C5C684
	0x02D246B4 LDR W8, [X0 + 0xE0]
	0x02D246B8 CBNZ W8, 0x2D246C0
	0x02D246BC BL 0x1C16DFC
	0x02D246C0 LDR X0, [X19 + 0x20]
	0x02D246C4 LDRB W8, [X0 + 0x135]
	0x02D246C8 TBNZ X8, 0x0, 0x2D246D0
	0x02D246CC BL 0x1C5C684
	0x02D246D0 LDR X8, [X0 + 0xC0]
	0x02D246D4 ADRP X20, 0x13F7000
	0x02D246D8 LDR X0, [X8 + 0x8]
	0x02D246DC LDRB W8, [X0 + 0x135]
	0x02D246E0 LDR X20, [X20 + 0xB90]
	0x02D246E4 TBNZ X8, 0x0, 0x2D246EC
	0x02D246E8 BL 0x1C5C684
	0x02D246EC LDR X0, [X0 + 0xB8]
	0x02D246F0 LDR X1, [X20]
	0x02D246F4 BL 0x25E6504
	0x02D246F8 LDR X0, [X0]
	0x02D246FC MOV X1, X31
	0x02D24700 MOV X2, X31
	0x02D24704 BL 0x33BE5B0
	0x02D24708 TBZ X0, 0x0, 0x2D24890
	0x02D2470C LDR X0, [X19 + 0x20]
	0x02D24710 LDRB W8, [X0 + 0x135]
	0x02D24714 TBNZ X8, 0x0, 0x2D2471C
	0x02D24718 BL 0x1C5C684
	0x02D2471C LDR X8, [X0 + 0xC0]
	0x02D24720 LDR X0, [X8 + 0x8]
	0x02D24724 LDRB W8, [X0 + 0x135]
	0x02D24728 TBNZ X8, 0x0, 0x2D24730
	0x02D2472C BL 0x1C5C684
	0x02D24730 LDR W8, [X0 + 0xE0]
	0x02D24734 CBNZ W8, 0x2D2473C
	0x02D24738 BL 0x1C16DFC
	0x02D2473C LDR X0, [X19 + 0x20]
	0x02D24740 LDRB W8, [X0 + 0x135]
	0x02D24744 TBNZ X8, 0x0, 0x2D2474C
	0x02D24748 BL 0x1C5C684
	0x02D2474C LDR X8, [X0 + 0xC0]
	0x02D24750 LDR X0, [X8 + 0x8]
	0x02D24754 LDRB W8, [X0 + 0x135]
	0x02D24758 TBNZ X8, 0x0, 0x2D24760
	0x02D2475C BL 0x1C5C684
	0x02D24760 LDR X0, [X0 + 0xB8]
	0x02D24764 LDR X1, [X20]
	0x02D24768 ADRP X21, 0x13CF000
	0x02D2476C LDR X21, [X21 + 0x6C0]
	0x02D24770 BL 0x25E6504
	0x02D24774 LDR X8, [X19 + 0x20]
	0x02D24778 MOV X20, X0
	0x02D2477C LDRB W9, [X8 + 0x135]
	0x02D24780 TBNZ X9, 0x0, 0x2D24790
	0x02D24784 MOV X0, X8
	0x02D24788 BL 0x1C5C684
	0x02D2478C MOV X8, X0
	0x02D24790 LDR X0, [X21]
	0x02D24794 LDR X8, [X8 + 0xC0]
	0x02D24798 LDR W9, [X0 + 0xE0]
	0x02D2479C LDR X21, [X8 + 0x10]
	0x02D247A0 CBNZ W9, 0x2D247A8
	0x02D247A4 BL 0x1C16DFC
	0x02D247A8 MOV X0, X21
	0x02D247AC MOV X1, X31
	0x02D247B0 BL 0x338C698
	0x02D247B4 LDR X8, [X19 + 0x20]
	0x02D247B8 MOV X21, X0
	0x02D247BC LDRB W9, [X8 + 0x135]
	0x02D247C0 TBNZ X9, 0x0, 0x2D247D0
	0x02D247C4 MOV X0, X8
	0x02D247C8 BL 0x1C5C684
	0x02D247CC MOV X8, X0
	0x02D247D0 LDR X8, [X8 + 0xC0]
	0x02D247D4 LDR X0, [X8 + 0x20]
	0x02D247D8 LDRB W8, [X0 + 0x135]
	0x02D247DC TBNZ X8, 0x0, 0x2D247E4
	0x02D247E0 BL 0x1C5C684
	0x02D247E4 BL 0x1C16F10
	0x02D247E8 LDR X8, [X19 + 0x20]
	0x02D247EC MOV X22, X0
	0x02D247F0 ADD X9, X8, 0x135
	0x02D247F4 LDRH W9, [X9]
	0x02D247F8 TBNZ X9, 0x0, 0x2D24814
	0x02D247FC MOV X0, X8
	0x02D24800 BL 0x1C5C684
	0x02D24804 LDR X8, [X19 + 0x20]
	0x02D24808 ADD X9, X8, 0x135
	0x02D2480C LDRH W9, [X9]
	0x02D24810 B 0x2D24818
	0x02D24814 MOV X0, X8
	0x02D24818 LDR X10, [X0 + 0xC0]
	0x02D2481C LDR X10, [X10 + 0x28]
	0x02D24820 LDR X23, [X10]
	0x02D24824 TBNZ X9, 0x0, 0x2D24840
	0x02D24828 MOV X0, X8
	0x02D2482C BL 0x1C5C684
	0x02D24830 LDR X8, [X19 + 0x20]
	0x02D24834 ADD X9, X8, 0x135
	0x02D24838 LDRH W9, [X9]
	0x02D2483C B 0x2D24844
	0x02D24840 MOV X0, X8
	0x02D24844 LDR X10, [X0 + 0xC0]
	0x02D24848 LDR X19, [X10 + 0x18]
	0x02D2484C TBNZ X9, 0x0, 0x2D2485C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x16B8000
	007 Move W8, [X20+2018]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x13F8000
	014 Move X0, [X0+2960]
	015 Call 0x1C17CF4
	016 Move X0, 0x13D0000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2018], W8
	021 Move X0, [X19+32]
	022 Move W8, [X0+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move X8, [X0+192]
	029 Move X0, [X8+8]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, [X19+32]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X0+192]
	048 Move X20, 0x13F8000
	049 Move X0, [X8+8]
	050 Move W8, [X0+309]
	051 Move X20, [X20+2960]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X0, [X0+184]
	058 Move X1, [X20]
	059 Call 0x25E7504, X0
	060 Move X0, [X0]
	061 Move X1, X31
	062 Move X2, X31
	063 Call IntPtr.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {182}
	068 Move X0, [X19+32]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X8, [X0+192]
	076 Move X0, [X8+8]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, [X19+32]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X8, [X0+192]
	095 Move X0, [X8+8]
	096 Move W8, [X0+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {102}
	101 Call 0x1C5D684
	102 Move X0, [X0+184]
	103 Move X1, [X20]
	104 Move X21, 0x13D0000
	105 Move X21, [X21+1728]
	106 Call 0x25E7504, X0
	107 Move X8, [X19+32]
	108 Move X20, X0
	109 Move W9, [X8+309]
	110 Move TEMP, X9
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {117}
	114 Move X0, X8
	115 Call 0x1C5D684
	116 Move X8, X0
	117 Move X0, [X21]
	118 Move X8, [X8+192]
	119 Move W9, [X0+224]
	120 Move X21, [X8+16]
	121 Compare W9, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X21
	125 Move X1, X31
	126 Call Type.GetTypeFromHandle, X0
	127 Move X8, [X19+32]
	128 Move X21, X0
	129 Move W9, [X8+309]
	130 Move TEMP, X9
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {137}
	134 Move X0, X8
	135 Call 0x1C5D684
	136 Move X8, X0
	137 Move X8, [X8+192]
	138 Move X0, [X8+32]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Call 0x1C17F10
	146 Move X8, [X19+32]
	147 Move X22, X0
	148 Add X9, X8, 309
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Move TEMP, X9
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {159}
	154 Move X0, X8
	155 Call 0x1C5D684
	156 Move X8, [X19+32]
	157 Add X9, X8, 309
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Move X0, X8
	160 Move X10, [X0+192]
	161 Move X19, [X10+24]
	162 Move TEMP, X9
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {169}
	166 Move X0, X8
	167 Call 0x1C5D684
	168 Move X8, X0
	169 Move X8, [X8+192]
	170 Move X0, X22
	171 Move X1, X31
	172 Move X2, X19
	173 Move X3, [X8+40]
	174 Call 0x2D10744, X0, X1, X2
	175 Move X0, X21
	176 Move X1, X22
	177 Move X2, X31
	178 Move X3, X31
	179 Move X4, X31
	180 Call JobsUtility.CreateJobReflectionData, X0, X1, X2, X3
	181 Move [X20], X0
	182 Move X20, [X31+32]
	183 Move X19, [X31+40]
	184 Move X22, [X31+16]
	185 Move X21, [X31+24]
	186 Move X30, [X31+48]
	187 Return 

Method: System.Void Execute(ref T jobData, System.IntPtr additionalPtr, System.IntPtr bufferRangePatchData, ref Unity.Jobs.LowLevel.Unsafe.JobRanges ranges, System.Int32 jobIndex)

Disassembly:
	0x02D24850 MOV X0, X8
	0x02D24854 BL 0x1C5C684
	0x02D24858 MOV X8, X0
	0x02D2485C LDR X8, [X8 + 0xC0]
	0x02D24860 MOV X0, X22
	0x02D24864 MOV X1, X31
	0x02D24868 MOV X2, X19
	0x02D2486C LDR X3, [X8 + 0x28]
	0x02D24870 BLR X23
	0x02D24874 MOV X0, X21
	0x02D24878 MOV X1, X22
	0x02D2487C MOV X2, X31
	0x02D24880 MOV X3, X31
	0x02D24884 MOV X4, X31
	0x02D24888 BL 0x3BFE3B0
	0x02D2488C STR X0, [X20]
	0x02D24890 LDP X20, X19, [X31 + 0x20]
	0x02D24894 LDP X22, X21, [X31 + 0x10]
	0x02D24898 LDP X30, X23, [X31], #0x30
	0x02D2489C RET
	0x02D248A0 STP X29, X30, [X31 - 0x60]!
	0x02D248A4 STP X28, X27, [X31 + 0x10]
	0x02D248A8 STP X26, X25, [X31 + 0x20]
	0x02D248AC STP X24, X23, [X31 + 0x30]
	0x02D248B0 STP X22, X21, [X31 + 0x40]
	0x02D248B4 STP X20, X19, [X31 + 0x50]
	0x02D248B8 ADD X29, X31, 0x0
	0x02D248BC SUB X31, X31, 0x20
	0x02D248C0 MRS X25, 0xC000
	0x02D248C4 LDR X8, [X25 + 0x28]
	0x02D248C8 MOV X19, X5
	0x02D248CC MOV W20, W4
	0x02D248D0 MOV X21, X3
	0x02D248D4 STUR X8, [X29 - 0x8]
	0x02D248D8 LDR X8, [X5 + 0x20]
	0x02D248DC MOV X22, X0
	0x02D248E0 LDRB W9, [X8 + 0x135]
	0x02D248E4 TBNZ X9, 0x0, 0x2D248F4
	0x02D248E8 MOV X0, X8
	0x02D248EC BL 0x1C5C684
	0x02D248F0 MOV X8, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, X3
	009 Move X19, X5
	010 Move W20, W4
	011 Move X22, X0
	012 Add X2, X31, 12
	013 Add X3, X31, 8
	014 Move X0, X21
	015 Move W1, W4
	016 Move [X31+8], X31
	017 Move X4, X31
	018 Call JobsUtility.GetWorkStealingRange, X0, X1, X2, X3
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {44}
	023 Move W24, [X31+8]
	024 Move W23, [X31+12]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, [X19+32]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+192]
	034 Move X0, X22
	035 Move W1, W23
	036 Move X2, [X8+64]
	037 Call LightMinMaxZJob.Execute, X0, X1
	038 Add W23, W23, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X2, X31, 12
	041 Add X3, X31, 8
	042 Move X0, X21
	043 Move W1, W20
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 

Method: System.Void .cctor()

Disassembly:
	0x02D248F4 LDR X8, [X8 + 0xC0]
	0x02D248F8 LDR X0, [X8 + 0x38]
	0x02D248FC LDRB W8, [X0 + 0x135]
	0x02D24900 TBNZ X8, 0x0, 0x2D24908
	0x02D24904 BL 0x1C5C684
	0x02D24908 LDR W8, [X0 + 0xFC]
	0x02D2490C ADD X9, X31, 0x0
	0x02D24910 ADD W8, W8, 0x10
	0x02D24914 ADD X8, X8, 0xF
	0x02D24918 AND X8, X8, 0x1FFFFFFFF
	0x02D2491C SUB X23, X9, X8
	0x02D24920 ADD X31, X23, 0x0
	0x02D24924 SUB X2, X29, 0x1C
	0x02D24928 SUB X3, X29, 0x20
	0x02D2492C MOV X0, X21
	0x02D24930 MOV W1, W20
	0x02D24934 MOV X4, X31
	0x02D24938 STUR X31, [X29 - 0x20]
	0x02D2493C BL 0x3BFE0D8
	0x02D24940 TBZ X0, 0x0, 0x2D249E0
	0x02D24944 SUB X26, X29, 0xC
	0x02D24948 LDP W27, W28, [X29 - 0x20]
	0x02D2494C CMP W28, W27
	0x02D24950 B.GE 0x2D249C4
	0x02D24954 LDR X0, [X19 + 0x20]
	0x02D24958 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move W0, W31
	013 Move X1, [X8+72]
	014 Call 0x2136688, X0
	015 Move X8, [X19+32]
	016 Move X19, X0
	017 Move W9, [X8+309]
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X8
	023 Call 0x1C5D684
	024 Move X8, X0
	025 Move X8, [X8+192]
	026 Move X0, [X8+8]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+184]
	034 Move [X8], X19
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Return 

