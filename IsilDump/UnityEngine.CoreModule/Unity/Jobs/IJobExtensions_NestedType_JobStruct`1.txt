Type: Unity.Jobs.IJobExtensions/JobStruct`1

Method: System.Void Initialize()

Disassembly:
	0x02EA61CC STP X30, X19, [X31 - 0x10]!
	0x02EA61D0 MOV X19, X0
	0x02EA61D4 LDR X0, [X0 + 0x20]
	0x02EA61D8 LDRB W8, [X0 + 0x135]
	0x02EA61DC TBNZ X8, 0x0, 0x2EA61E4
	0x02EA61E0 BL 0x1C5C684
	0x02EA61E4 LDR X8, [X0 + 0xC0]
	0x02EA61E8 MOV W0, W31
	0x02EA61EC LDR X1, [X8 + 0x48]
	0x02EA61F0 BL 0x2135BB0
	0x02EA61F4 LDR X8, [X19 + 0x20]
	0x02EA61F8 MOV X19, X0
	0x02EA61FC LDRB W9, [X8 + 0x135]
	0x02EA6200 TBNZ X9, 0x0, 0x2EA6210
	0x02EA6204 MOV X0, X8
	0x02EA6208 BL 0x1C5C684
	0x02EA620C MOV X8, X0
	0x02EA6210 LDR X8, [X8 + 0xC0]
	0x02EA6214 LDR X0, [X8 + 0x8]
	0x02EA6218 LDRB W8, [X0 + 0x135]
	0x02EA621C TBNZ X8, 0x0, 0x2EA6224
	0x02EA6220 BL 0x1C5C684
	0x02EA6224 LDR X8, [X0 + 0xB8]
	0x02EA6228 STR X19, [X8]
	0x02EA622C LDP X30, X19, [X31], #0x10
	0x02EA6230 RET
	0x02EA6234 STP X30, X23, [X31 - 0x30]!
	0x02EA6238 STP X22, X21, [X31 + 0x10]
	0x02EA623C STP X20, X19, [X31 + 0x20]
	0x02EA6240 ADRP X20, 0x1535000
	0x02EA6244 LDRB W8, [X20 + 0xA56]
	0x02EA6248 MOV X19, X0
	0x02EA624C TBNZ X8, 0x0, 0x2EA6270
	0x02EA6250 ADRP X0, 0x1275000
	0x02EA6254 LDR X0, [X0 + 0xB90]
	0x02EA6258 BL 0x1C16CF4
	0x02EA625C ADRP X0, 0x124D000
	0x02EA6260 LDR X0, [X0 + 0x6C0]
	0x02EA6264 BL 0x1C16CF4
	0x02EA6268 MOVZ W8, 0x1
	0x02EA626C STRB W8, [X20 + 0xA56]
	0x02EA6270 LDR X0, [X19 + 0x20]
	0x02EA6274 LDRB W8, [X0 + 0x135]
	0x02EA6278 TBNZ X8, 0x0, 0x2EA6280
	0x02EA627C BL 0x1C5C684
	0x02EA6280 LDR X8, [X0 + 0xC0]
	0x02EA6284 LDR X0, [X8 + 0x8]
	0x02EA6288 LDRB W8, [X0 + 0x135]
	0x02EA628C TBNZ X8, 0x0, 0x2EA6294
	0x02EA6290 BL 0x1C5C684
	0x02EA6294 LDR W8, [X0 + 0xE0]
	0x02EA6298 CBNZ W8, 0x2EA62A0
	0x02EA629C BL 0x1C16DFC
	0x02EA62A0 LDR X0, [X19 + 0x20]
	0x02EA62A4 LDRB W8, [X0 + 0x135]
	0x02EA62A8 TBNZ X8, 0x0, 0x2EA62B0
	0x02EA62AC BL 0x1C5C684
	0x02EA62B0 LDR X8, [X0 + 0xC0]
	0x02EA62B4 ADRP X20, 0x1275000
	0x02EA62B8 LDR X0, [X8 + 0x8]
	0x02EA62BC LDRB W8, [X0 + 0x135]
	0x02EA62C0 LDR X20, [X20 + 0xB90]
	0x02EA62C4 TBNZ X8, 0x0, 0x2EA62CC
	0x02EA62C8 BL 0x1C5C684
	0x02EA62CC LDR X0, [X0 + 0xB8]
	0x02EA62D0 LDR X1, [X20]
	0x02EA62D4 BL 0x25E6504
	0x02EA62D8 LDR X0, [X0]
	0x02EA62DC MOV X1, X31
	0x02EA62E0 MOV X2, X31
	0x02EA62E4 BL 0x33BE5B0
	0x02EA62E8 TBZ X0, 0x0, 0x2EA6470
	0x02EA62EC LDR X0, [X19 + 0x20]
	0x02EA62F0 LDRB W8, [X0 + 0x135]
	0x02EA62F4 TBNZ X8, 0x0, 0x2EA62FC
	0x02EA62F8 BL 0x1C5C684
	0x02EA62FC LDR X8, [X0 + 0xC0]
	0x02EA6300 LDR X0, [X8 + 0x8]
	0x02EA6304 LDRB W8, [X0 + 0x135]
	0x02EA6308 TBNZ X8, 0x0, 0x2EA6310
	0x02EA630C BL 0x1C5C684
	0x02EA6310 LDR W8, [X0 + 0xE0]
	0x02EA6314 CBNZ W8, 0x2EA631C
	0x02EA6318 BL 0x1C16DFC
	0x02EA631C LDR X0, [X19 + 0x20]
	0x02EA6320 LDRB W8, [X0 + 0x135]
	0x02EA6324 TBNZ X8, 0x0, 0x2EA632C
	0x02EA6328 BL 0x1C5C684
	0x02EA632C LDR X8, [X0 + 0xC0]
	0x02EA6330 LDR X0, [X8 + 0x8]
	0x02EA6334 LDRB W8, [X0 + 0x135]
	0x02EA6338 TBNZ X8, 0x0, 0x2EA6340
	0x02EA633C BL 0x1C5C684
	0x02EA6340 LDR X0, [X0 + 0xB8]
	0x02EA6344 LDR X1, [X20]
	0x02EA6348 ADRP X21, 0x124D000
	0x02EA634C LDR X21, [X21 + 0x6C0]
	0x02EA6350 BL 0x25E6504
	0x02EA6354 LDR X8, [X19 + 0x20]
	0x02EA6358 MOV X20, X0
	0x02EA635C LDRB W9, [X8 + 0x135]
	0x02EA6360 TBNZ X9, 0x0, 0x2EA6370
	0x02EA6364 MOV X0, X8
	0x02EA6368 BL 0x1C5C684
	0x02EA636C MOV X8, X0
	0x02EA6370 LDR X0, [X21]
	0x02EA6374 LDR X8, [X8 + 0xC0]
	0x02EA6378 LDR W9, [X0 + 0xE0]
	0x02EA637C LDR X21, [X8 + 0x10]
	0x02EA6380 CBNZ W9, 0x2EA6388
	0x02EA6384 BL 0x1C16DFC
	0x02EA6388 MOV X0, X21
	0x02EA638C MOV X1, X31
	0x02EA6390 BL 0x338C698
	0x02EA6394 LDR X8, [X19 + 0x20]
	0x02EA6398 MOV X21, X0
	0x02EA639C LDRB W9, [X8 + 0x135]
	0x02EA63A0 TBNZ X9, 0x0, 0x2EA63B0
	0x02EA63A4 MOV X0, X8
	0x02EA63A8 BL 0x1C5C684
	0x02EA63AC MOV X8, X0
	0x02EA63B0 LDR X8, [X8 + 0xC0]
	0x02EA63B4 LDR X0, [X8 + 0x20]
	0x02EA63B8 LDRB W8, [X0 + 0x135]
	0x02EA63BC TBNZ X8, 0x0, 0x2EA63C4
	0x02EA63C0 BL 0x1C5C684
	0x02EA63C4 BL 0x1C16F10
	0x02EA63C8 LDR X8, [X19 + 0x20]
	0x02EA63CC MOV X22, X0
	0x02EA63D0 ADD X9, X8, 0x135
	0x02EA63D4 LDRH W9, [X9]
	0x02EA63D8 TBNZ X9, 0x0, 0x2EA63F4
	0x02EA63DC MOV X0, X8
	0x02EA63E0 BL 0x1C5C684
	0x02EA63E4 LDR X8, [X19 + 0x20]
	0x02EA63E8 ADD X9, X8, 0x135

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1536000
	007 Move W8, [X20+2640]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x1276000
	014 Move X0, [X0+2960]
	015 Call 0x1C17CF4
	016 Move X0, 0x124E000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2640], W8
	021 Move X0, [X19+32]
	022 Move W8, [X0+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move X8, [X0+192]
	029 Move X0, [X8+8]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, [X19+32]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Move X8, [X0+192]
	048 Move X20, 0x1276000
	049 Move X0, [X8+8]
	050 Move W8, [X0+309]
	051 Move X20, [X20+2960]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X0, [X0+184]
	058 Move X1, [X20]
	059 Call 0x25E7504, X0
	060 Move X0, [X0]
	061 Move X1, X31
	062 Move X2, X31
	063 Call IntPtr.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {182}
	068 Move X0, [X19+32]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X8, [X0+192]
	076 Move X0, [X8+8]
	077 Move W8, [X0+309]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, [X19+32]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move X8, [X0+192]
	095 Move X0, [X8+8]
	096 Move W8, [X0+309]
	097 Move TEMP, X8
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {102}
	101 Call 0x1C5D684
	102 Move X0, [X0+184]
	103 Move X1, [X20]
	104 Move X21, 0x124E000
	105 Move X21, [X21+1728]
	106 Call 0x25E7504, X0
	107 Move X8, [X19+32]
	108 Move X20, X0
	109 Move W9, [X8+309]
	110 Move TEMP, X9
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {117}
	114 Move X0, X8
	115 Call 0x1C5D684
	116 Move X8, X0
	117 Move X0, [X21]
	118 Move X8, [X8+192]
	119 Move W9, [X0+224]
	120 Move X21, [X8+16]
	121 Compare W9, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X21
	125 Move X1, X31
	126 Call Type.GetTypeFromHandle, X0
	127 Move X8, [X19+32]
	128 Move X21, X0
	129 Move W9, [X8+309]
	130 Move TEMP, X9
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfEqual {137}
	134 Move X0, X8
	135 Call 0x1C5D684
	136 Move X8, X0
	137 Move X8, [X8+192]
	138 Move X0, [X8+32]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Call 0x1C17F10
	146 Move X8, [X19+32]
	147 Move X22, X0
	148 Add X9, X8, 309
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Move TEMP, X9
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {159}
	154 Move X0, X8
	155 Call 0x1C5D684
	156 Move X8, [X19+32]
	157 Add X9, X8, 309
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Move X0, X8
	160 Move X10, [X0+192]
	161 Move X19, [X10+24]
	162 Move TEMP, X9
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {169}
	166 Move X0, X8
	167 Call 0x1C5D684
	168 Move X8, X0
	169 Move X8, [X8+192]
	170 Move X0, X22
	171 Move X1, X31
	172 Move X2, X19
	173 Move X3, [X8+40]
	174 Call 0x2D1030C, X0, X1, X2
	175 Move X0, X21
	176 Move X1, X22
	177 Move X2, X31
	178 Move X3, X31
	179 Move X4, X31
	180 Call JobsUtility.CreateJobReflectionData, X0, X1, X2, X3
	181 Move [X20], X0
	182 Move X20, [X31+32]
	183 Move X19, [X31+40]
	184 Move X22, [X31+16]
	185 Move X21, [X31+24]
	186 Move X30, [X31+48]
	187 Return 

Method: System.Void Execute(ref T data, System.IntPtr additionalPtr, System.IntPtr bufferRangePatchData, ref Unity.Jobs.LowLevel.Unsafe.JobRanges ranges, System.Int32 jobIndex)

Disassembly:
	0x02EA63EC LDRH W9, [X9]
	0x02EA63F0 B 0x2EA63F8
	0x02EA63F4 MOV X0, X8
	0x02EA63F8 LDR X10, [X0 + 0xC0]
	0x02EA63FC LDR X10, [X10 + 0x28]
	0x02EA6400 LDR X23, [X10]
	0x02EA6404 TBNZ X9, 0x0, 0x2EA6420
	0x02EA6408 MOV X0, X8
	0x02EA640C BL 0x1C5C684
	0x02EA6410 LDR X8, [X19 + 0x20]
	0x02EA6414 ADD X9, X8, 0x135
	0x02EA6418 LDRH W9, [X9]
	0x02EA641C B 0x2EA6424

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X5+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X0, X19
	015 Move X1, [X8+64]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call ColorTweenJob.Execute, X0
	019 Return 

Method: System.Void .cctor()

Disassembly:
	0x02EA6420 MOV X0, X8
	0x02EA6424 LDR X10, [X0 + 0xC0]
	0x02EA6428 LDR X19, [X10 + 0x18]
	0x02EA642C TBNZ X9, 0x0, 0x2EA643C
	0x02EA6430 MOV X0, X8
	0x02EA6434 BL 0x1C5C684
	0x02EA6438 MOV X8, X0
	0x02EA643C LDR X8, [X8 + 0xC0]
	0x02EA6440 MOV X0, X22
	0x02EA6444 MOV X1, X31
	0x02EA6448 MOV X2, X19
	0x02EA644C LDR X3, [X8 + 0x28]
	0x02EA6450 BLR X23
	0x02EA6454 MOV X0, X21
	0x02EA6458 MOV X1, X22
	0x02EA645C MOV X2, X31
	0x02EA6460 MOV X3, X31
	0x02EA6464 MOV X4, X31
	0x02EA6468 BL 0x3BFE3B0
	0x02EA646C STR X0, [X20]
	0x02EA6470 LDP X20, X19, [X31 + 0x20]
	0x02EA6474 LDP X22, X21, [X31 + 0x10]
	0x02EA6478 LDP X30, X23, [X31], #0x30
	0x02EA647C RET
	0x02EA6480 STP X29, X30, [X31 - 0x40]!
	0x02EA6484 STR X23, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Move W8, [X0+309]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {11}
	010 Call 0x1C5D684
	011 Move X8, [X0+192]
	012 Move W0, W31
	013 Move X1, [X8+72]
	014 Call SharedStatic`1<IntPtr>.GetOrCreate, X0
	015 Move X8, [X19+32]
	016 Move X19, X0
	017 Move W9, [X8+309]
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X8
	023 Call 0x1C5D684
	024 Move X8, X0
	025 Move X8, [X8+192]
	026 Move X0, [X8+8]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+184]
	034 Move [X8], X19
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Return 

