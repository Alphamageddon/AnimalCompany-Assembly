Type: Unity.Jobs.LowLevel.Unsafe.JobsUtility

Method: System.Void GetJobRange(ref Unity.Jobs.LowLevel.Unsafe.JobRanges ranges, System.Int32 jobIndex, out System.Int32 beginIndex, out System.Int32 endIndex)

Disassembly:
	0x03BFF090 LDR X1, [X20 + 0xC80]
	0x03BFF094 MOV X19, X0
	0x03BFF098 CBNZ X1, 0x3BFF0B0
	0x03BFF09C ADRP X0, 0xFFFFFFFFFCF1D000
	0x03BFF0A0 ADD X0, X0, 0xB3C
	0x03BFF0A4 BL 0x1C16CB8
	0x03BFF0A8 MOV X1, X0
	0x03BFF0AC STR X0, [X20 + 0xC80]
	0x03BFF0B0 MOV X0, X19
	0x03BFF0B4 LDP X20, X19, [X31 + 0x10]
	0x03BFF0B8 LDR X30, [X31], #0x20
	0x03BFF0BC BR X1
	0x03BFF0C0 STR X30, [X31 - 0x30]!
	0x03BFF0C4 STP X22, X21, [X31 + 0x10]
	0x03BFF0C8 STP X20, X19, [X31 + 0x20]
	0x03BFF0CC ADRP X22, 0x7E4000
	0x03BFF0D0 LDR X3, [X22 + 0xC88]
	0x03BFF0D4 MOV X19, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X0, [X0+16]
	006 Move W21, W1
	007 Move X1, X31
	008 Move X19, X3
	009 Move X20, X2
	010 Call IntPtr.op_Explicit, X0
	011 Move W8, W21
	012 ShiftRight W8, 31
	013 And W8, W8, 0x3FFFFFFF
	014 Move W8, [X0]
	015 Move W9, 1
	016 NotImplemented "Instruction BFM not yet implemented."
	017 Move [X20], W8
	018 Move W8, [X0]
	019 Move [X19], W8
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Return 

Method: System.Boolean GetWorkStealingRange(ref Unity.Jobs.LowLevel.Unsafe.JobRanges ranges, System.Int32 jobIndex, out System.Int32 beginIndex, out System.Int32 endIndex)

Disassembly:
	0x03BFF0D8 MOV W20, W1
	0x03BFF0DC MOV X21, X0
	0x03BFF0E0 CBNZ X3, 0x3BFF0F8
	0x03BFF0E4 ADRP X0, 0xFFFFFFFFFCF1B000
	0x03BFF0E8 ADD X0, X0, 0x780
	0x03BFF0EC BL 0x1C16CB8
	0x03BFF0F0 MOV X3, X0
	0x03BFF0F4 STR X0, [X22 + 0xC88]
	0x03BFF0F8 MOV X0, X21
	0x03BFF0FC MOV W1, W20
	0x03BFF100 MOV X2, X19
	0x03BFF104 LDP X20, X19, [X31 + 0x20]
	0x03BFF108 LDP X22, X21, [X31 + 0x10]
	0x03BFF10C LDR X30, [X31], #0x30
	0x03BFF110 BR X3
	0x03BFF114 STR X30, [X31 - 0x20]!
	0x03BFF118 STP X20, X19, [X31 + 0x10]
	0x03BFF11C LDR X9, [X0]
	0x03BFF120 CBZ X9, 0x3BFF15C
	0x03BFF124 ADRP X20, 0x7E4000
	0x03BFF128 LDR X8, [X20 + 0xC60]
	0x03BFF12C MOV X19, X0
	0x03BFF130 STR X9, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7E5000
	008 Move X4, [X23+3104]
	009 Move X19, X3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51240960
	016 Add X0, X0, 1683
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3104], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: Unity.Jobs.JobHandle Schedule(ref Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters parameters)

Disassembly:
	0x03BFF134 CBNZ X8, 0x3BFF14C
	0x03BFF138 ADRP X0, 0xFFFFFFFFFCEFF000
	0x03BFF13C ADD X0, X0, 0xB1A
	0x03BFF140 BL 0x1C16CB8
	0x03BFF144 MOV X8, X0
	0x03BFF148 STR X0, [X20 + 0xC60]
	0x03BFF14C ADD X0, X31, 0x8
	0x03BFF150 MOVZ W1, 0x4
	0x03BFF154 BLR X8
	0x03BFF158 STR X31, [X19]
	0x03BFF15C LDP X20, X19, [X31 + 0x10]
	0x03BFF160 LDR X30, [X31], #0x20
	0x03BFF164 RET
	0x03BFF168 STP X1, X2, [X0]
	0x03BFF16C RET
	0x03BFF170 STR W1, [X0 + 0x10]
	0x03BFF174 RET
	0x03BFF178 STR W1, [X0 + 0x14]
	0x03BFF17C RET
	0x03BFF180 STR W1, [X0 + 0x18]
	0x03BFF184 RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7E5000
	007 Move X8, [X20+3136]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51306496
	013 Add X0, X0, 3244
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+3136], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X0, [X31]
	021 Move X1, [X31+8]
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return X0

Method: Unity.Jobs.JobHandle ScheduleParallelFor(ref Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters parameters, System.Int32 arrayLength, System.Int32 innerloopBatchCount)

Disassembly:
	0x03BFF1CC STR X8, [X31 + 0x18]
	0x03BFF1D0 STP X31, X31, [X31]
	0x03BFF1D4 STR X31, [X31 + 0x10]
	0x03BFF1D8 B.LS 0x3BFF214
	0x03BFF1DC ADD X8, X31, 0x0
	0x03BFF1E0 BL 0x3BFF274
	0x03BFF1E4 LDR X8, [X31 + 0x10]
	0x03BFF1E8 LDR V0, [X31]
	0x03BFF1EC STR X8, [X19 + 0x10]
	0x03BFF1F0 STR V0, [X19]
	0x03BFF1F4 LDR X8, [X20 + 0x28]
	0x03BFF1F8 LDR X9, [X31 + 0x18]
	0x03BFF1FC CMP X8, X9
	0x03BFF200 B.NE 0x3BFF270
	0x03BFF204 LDP X20, X19, [X31 + 0x30]
	0x03BFF208 LDR X30, [X31 + 0x20]
	0x03BFF20C ADD X31, X31, 0x40
	0x03BFF210 RET
	0x03BFF214 ADRP X0, 0x4FC000
	0x03BFF218 LDR X0, [X0 + 0x578]
	0x03BFF21C BL 0x1C16D08
	0x03BFF220 BL 0x1C16F10
	0x03BFF224 MOV X19, X0
	0x03BFF228 ADRP X0, 0x55F000
	0x03BFF22C LDR X0, [X0 + 0xA80]
	0x03BFF230 BL 0x1C16D08
	0x03BFF234 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x7E5000
	009 Move X8, [X22+3144]
	010 Move W19, W2
	011 Move W20, W1
	012 Move X21, X0
	013 Move [X31], X31
	014 Compare X8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, -51339264
	017 Add X0, X0, 2883
	018 Call 0x1C17CB8
	019 Move X8, X0
	020 Move [X22+3144], X0
	021 Add X3, X31, 0
	022 Move X0, X21
	023 Move W1, W20
	024 Move W2, W19
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X0, [X31]
	027 Move X1, [X31+8]
	028 Move X20, [X31+48]
	029 Move X19, [X31+56]
	030 Move X22, [X31+32]
	031 Move X21, [X31+40]
	032 Move X30, [X31+16]
	033 Add X31, X31, 64
	034 Return X0

Method: Unity.Jobs.JobHandle ScheduleParallelForTransform(ref Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters parameters, System.IntPtr transfromAccesssArray)

Disassembly:
	0x03BFF294 LDR X8, [X21 + 0xC98]
	0x03BFF298 STP X0, X31, [X31 + 0x8]
	0x03BFF29C STP X31, X31, [X31 + 0x18]
	0x03BFF2A0 CBNZ X8, 0x3BFF2B8
	0x03BFF2A4 ADRP X0, 0xFFFFFFFFFCF09000
	0x03BFF2A8 ADD X0, X0, 0xC4E
	0x03BFF2AC BL 0x1C16CB8
	0x03BFF2B0 MOV X8, X0
	0x03BFF2B4 STR X0, [X21 + 0xC98]
	0x03BFF2B8 ADD X0, X31, 0x8
	0x03BFF2BC ADD X1, X31, 0x10
	0x03BFF2C0 BLR X8
	0x03BFF2C4 LDR X8, [X31 + 0x20]
	0x03BFF2C8 LDR V0, [X31 + 0x1]
	0x03BFF2CC STR X8, [X19 + 0x10]
	0x03BFF2D0 STR V0, [X19]
	0x03BFF2D4 LDR X8, [X20 + 0x28]
	0x03BFF2D8 LDR X9, [X31 + 0x28]
	0x03BFF2DC CMP X8, X9
	0x03BFF2E0 B.NE 0x3BFF2F4
	0x03BFF2E4 LDP X20, X19, [X31 + 0x40]
	0x03BFF2E8 LDP X30, X21, [X31 + 0x30]
	0x03BFF2EC ADD X31, X31, 0x50

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7E5000
	007 Move X8, [X21+3152]
	008 Move X19, X1
	009 Move X20, X0
	010 Move [X31], X31
	011 Move [X31+8], X31
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51257344
	015 Add X0, X0, 2699
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X21+3152], X0
	019 Add X2, X31, 0
	020 Move X0, X20
	021 Move X1, X19
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, [X31]
	024 Move X1, [X31+8]
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.IntPtr CreateJobReflectionData(System.Type wrapperJobType, System.Type userJobType, System.Object managedJobFunction0, System.Object managedJobFunction1, System.Object managedJobFunction2)

Disassembly:
	0x03BFF344 BLR X8
	0x03BFF348 LDR X0, [X31]
	0x03BFF34C LDP X20, X19, [X31 + 0x20]
	0x03BFF350 LDP X30, X21, [X31 + 0x10]
	0x03BFF354 ADD X31, X31, 0x30
	0x03BFF358 RET
	0x03BFF35C STP X30, X23, [X31 - 0x30]!
	0x03BFF360 STP X22, X21, [X31 + 0x10]
	0x03BFF364 STP X20, X19, [X31 + 0x20]
	0x03BFF368 ADRP X23, 0x7E4000
	0x03BFF36C LDR X4, [X23 + 0xC90]
	0x03BFF370 MOV X19, X3
	0x03BFF374 MOV W20, W2
	0x03BFF378 MOV X21, X1
	0x03BFF37C MOV X22, X0
	0x03BFF380 CBNZ X4, 0x3BFF398
	0x03BFF384 ADRP X0, 0xFFFFFFFFFCF2B000
	0x03BFF388 ADD X0, X0, 0x465
	0x03BFF38C BL 0x1C16CB8
	0x03BFF390 MOV X4, X0
	0x03BFF394 STR X0, [X23 + 0xC90]
	0x03BFF398 MOV X0, X22
	0x03BFF39C MOV X1, X21
	0x03BFF3A0 MOV W2, W20
	0x03BFF3A4 MOV X3, X19
	0x03BFF3A8 LDP X20, X19, [X31 + 0x20]
	0x03BFF3AC LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7E5000
	009 Move X5, [X24+3112]
	010 Move X19, X4
	011 Move X20, X3
	012 Move X21, X2
	013 Move X22, X1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51224576
	018 Add X0, X0, 2343
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+3112], X0
	022 Move X0, X23
	023 Move X1, X22
	024 Move X2, X21
	025 Move X3, X20
	026 Move X4, X19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.IntPtr CreateJobReflectionData(System.Type type, System.Object managedJobFunction0, System.Object managedJobFunction1 = null, System.Object managedJobFunction2 = null)

Disassembly:
	0x03BFF3B0 LDP X30, X23, [X31], #0x30
	0x03BFF3B4 BR X4
	0x03BFF3B8 STP X30, X21, [X31 - 0x20]!
	0x03BFF3BC STP X20, X19, [X31 + 0x10]
	0x03BFF3C0 ADRP X21, 0x7E4000
	0x03BFF3C4 LDR X2, [X21 + 0xC98]
	0x03BFF3C8 MOV X19, X1
	0x03BFF3CC MOV X20, X0
	0x03BFF3D0 CBNZ X2, 0x3BFF3E8
	0x03BFF3D4 ADRP X0, 0xFFFFFFFFFCF09000
	0x03BFF3D8 ADD X0, X0, 0xC4E
	0x03BFF3DC BL 0x1C16CB8
	0x03BFF3E0 MOV X2, X0
	0x03BFF3E4 STR X0, [X21 + 0xC98]
	0x03BFF3E8 MOV X0, X20
	0x03BFF3EC MOV X1, X19
	0x03BFF3F0 LDP X20, X19, [X31 + 0x10]
	0x03BFF3F4 LDP X30, X21, [X31], #0x20
	0x03BFF3F8 BR X2
	0x03BFF3FC STR X30, [X31 - 0x30]!
	0x03BFF400 STP X22, X21, [X31 + 0x10]
	0x03BFF404 STP X20, X19, [X31 + 0x20]
	0x03BFF408 ADRP X22, 0x7E4000
	0x03BFF40C LDR X3, [X22 + 0xCA0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7E5000
	008 Move X5, [X23+3112]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X5, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51224576
	016 Add X0, X0, 2343
	017 Call 0x1C17CB8
	018 Move X5, X0
	019 Move [X23+3112], X0
	020 Move X0, X22
	021 Move X1, X22
	022 Move X2, X21
	023 Move X3, X20
	024 Move X4, X19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Move X23, [X31+56]
	031 CallNoReturn X5

Method: System.Void set_JobCompilerEnabled(System.Boolean value)

Disassembly:
	0x03BFF410 MOV W19, W2
	0x03BFF414 MOV W20, W1
	0x03BFF418 MOV X21, X0
	0x03BFF41C CBNZ X3, 0x3BFF434
	0x03BFF420 ADRP X0, 0xFFFFFFFFFCF05000
	0x03BFF424 ADD X0, X0, 0xDB7
	0x03BFF428 BL 0x1C16CB8
	0x03BFF42C MOV X3, X0
	0x03BFF430 STR X0, [X22 + 0xCA0]
	0x03BFF434 MOV X0, X21
	0x03BFF438 MOV W1, W20
	0x03BFF43C MOV W2, W19
	0x03BFF440 LDP X20, X19, [X31 + 0x20]
	0x03BFF444 LDP X22, X21, [X31 + 0x10]
	0x03BFF448 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E5000
	005 Move X1, [X20+3120]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51257344
	010 Add X0, X0, 2620
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3120], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void InvokePanicFunction()

Disassembly:
	0x03BFF44C BR X3
	0x03BFF450 STP X30, X21, [X31 - 0x20]!
	0x03BFF454 STP X20, X19, [X31 + 0x10]
	0x03BFF458 ADRP X21, 0x7E4000
	0x03BFF45C LDR X2, [X21 + 0xCE0]
	0x03BFF460 MOV X19, X1
	0x03BFF464 MOV W20, W0
	0x03BFF468 CBNZ X2, 0x3BFF480
	0x03BFF46C ADRP X0, 0xFFFFFFFFFCEFF000
	0x03BFF470 ADD X0, X0, 0xCD5
	0x03BFF474 BL 0x1C16CB8
	0x03BFF478 MOV X2, X0
	0x03BFF47C STR X0, [X21 + 0xCE0]
	0x03BFF480 MOV W0, W20
	0x03BFF484 MOV X1, X19
	0x03BFF488 LDP X20, X19, [X31 + 0x10]
	0x03BFF48C LDP X30, X21, [X31], #0x20
	0x03BFF490 BR X2
	0x03BFF494 STR X30, [X31 - 0x40]!
	0x03BFF498 STP X24, X23, [X31 + 0x10]
	0x03BFF49C STP X22, X21, [X31 + 0x20]
	0x03BFF4A0 STP X20, X19, [X31 + 0x30]
	0x03BFF4A4 ADRP X24, 0x7E4000
	0x03BFF4A8 LDR X5, [X24 + 0xCB0]
	0x03BFF4AC MOV W19, W4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7E5000
	005 Move X20, 0x560000
	006 Move W8, [X19+3128]
	007 Move X20, [X20+2664]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x560000
	013 Move X0, [X0+2664]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3128], W8
	017 Move X8, [X20]
	018 Move X8, [X8+184]
	019 Move X8, [X8]
	020 Compare X8, 0
	021 JumpIfEqual {29}
	022 Move X2, [X8+24]
	023 Move X0, [X8+64]
	024 Move X1, [X8+40]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 CallNoReturn X2
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 

Method: System.Void Schedule_Injected(ref Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters parameters, out Unity.Jobs.JobHandle ret)

Disassembly:
	0x03BFF188 LDRH W0, [X0 + 0x2]
	0x03BFF18C RET
	0x03BFF190 STR X1, [X0]
	0x03BFF194 RET
	0x03BFF198 LDR X8, [X0]
	0x03BFF19C ADD X8, X8, 0x1
	0x03BFF1A0 CMP X8, 0x1
	0x03BFF1A4 CSET W0, HI
	0x03BFF1A8 RET
	0x03BFF1AC SUB X31, X31, 0x40
	0x03BFF1B0 STR X30, [X31 + 0x20]
	0x03BFF1B4 STP X20, X19, [X31 + 0x30]
	0x03BFF1B8 MRS X20, 0xC000
	0x03BFF1BC MOV X19, X8
	0x03BFF1C0 LDR X8, [X20 + 0x28]
	0x03BFF1C4 ADD X9, X0, 0x1
	0x03BFF1C8 CMP X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E5000
	006 Move X2, [X21+3136]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51306496
	012 Add X0, X0, 3244
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3136], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void ScheduleParallelFor_Injected(ref Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters parameters, System.Int32 arrayLength, System.Int32 innerloopBatchCount, out Unity.Jobs.JobHandle ret)

Disassembly:
	0x03BFF238 ADRP X0, 0x528000
	0x03BFF23C LDR X0, [X0 + 0x440]
	0x03BFF240 BL 0x1C16D08
	0x03BFF244 MOV X2, X0
	0x03BFF248 MOV X0, X19
	0x03BFF24C MOV X1, X20
	0x03BFF250 MOV X3, X31
	0x03BFF254 BL 0x330E16C
	0x03BFF258 ADRP X0, 0x55F000
	0x03BFF25C LDR X0, [X0 + 0xA88]
	0x03BFF260 BL 0x1C16D08
	0x03BFF264 MOV X1, X0
	0x03BFF268 MOV X0, X19
	0x03BFF26C BL 0x1C16DEC
	0x03BFF270 BL 0x3EB1B20
	0x03BFF274 SUB X31, X31, 0x50
	0x03BFF278 STP X30, X21, [X31 + 0x30]
	0x03BFF27C STP X20, X19, [X31 + 0x40]
	0x03BFF280 MRS X20, 0xC000
	0x03BFF284 MOV X19, X8
	0x03BFF288 LDR X8, [X20 + 0x28]
	0x03BFF28C ADRP X21, 0x7E4000
	0x03BFF290 STR X8, [X31 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7E5000
	008 Move X4, [X23+3144]
	009 Move X19, X3
	010 Move W20, W2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51339264
	016 Add X0, X0, 2883
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3144], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move W2, W20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void ScheduleParallelForTransform_Injected(ref Unity.Jobs.LowLevel.Unsafe.JobsUtility/JobScheduleParameters parameters, System.IntPtr transfromAccesssArray, out Unity.Jobs.JobHandle ret)

Disassembly:
	0x03BFF2F0 RET
	0x03BFF2F4 BL 0x3EB1B20
	0x03BFF2F8 SUB X31, X31, 0x30
	0x03BFF2FC STP X30, X21, [X31 + 0x10]
	0x03BFF300 STP X20, X19, [X31 + 0x20]
	0x03BFF304 ADRP X21, 0x7E4000
	0x03BFF308 LDR X8, [X21 + 0xC90]
	0x03BFF30C MOV W19, W2
	0x03BFF310 MOV X20, X1
	0x03BFF314 STRH W0, [X31 + 0x8]
	0x03BFF318 STR X31, [X31]
	0x03BFF31C CBNZ X8, 0x3BFF334
	0x03BFF320 ADRP X0, 0xFFFFFFFFFCF2B000
	0x03BFF324 ADD X0, X0, 0x465
	0x03BFF328 BL 0x1C16CB8
	0x03BFF32C MOV X8, X0
	0x03BFF330 STR X0, [X21 + 0xC90]
	0x03BFF334 ADD X0, X31, 0x8
	0x03BFF338 ADD X3, X31, 0x0
	0x03BFF33C MOV X1, X20
	0x03BFF340 MOV W2, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E5000
	007 Move X3, [X22+3152]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51257344
	014 Add X0, X0, 2699
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3152], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

