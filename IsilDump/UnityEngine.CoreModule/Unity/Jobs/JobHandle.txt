Type: Unity.Jobs.JobHandle

Method: System.Void Complete()

Disassembly:
	0x03BFECAC RET
	0x03BFECB0 SUB X31, X31, 0x20
	0x03BFECB4 STP X30, X19, [X31 + 0x10]
	0x03BFECB8 MOV X19, X0
	0x03BFECBC BL 0x3BFEBBC
	0x03BFECC0 LDR X9, [X19]
	0x03BFECC4 ADRP X19, 0x7E5000
	0x03BFECC8 LDR X8, [X19 + 0xC68]
	0x03BFECCC STR X9, [X31 + 0x8]
	0x03BFECD0 CBNZ X8, 0x3BFECE8
	0x03BFECD4 ADRP X0, 0xFFFFFFFFFCF14000
	0x03BFECD8 ADD X0, X0, 0x8DD
	0x03BFECDC BL 0x1C16CB8
	0x03BFECE0 MOV X8, X0
	0x03BFECE4 STR X0, [X19 + 0xC68]
	0x03BFECE8 ADD X0, X31, 0x8
	0x03BFECEC BLR X8
	0x03BFECF0 LDP X30, X19, [X31 + 0x10]
	0x03BFECF4 ADD X31, X31, 0x20
	0x03BFECF8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Compare X8, 0
	006 JumpIfEqual {22}
	007 Move X20, 0x7E6000
	008 Move X1, [X20+3064]
	009 Move X19, X0
	010 Compare X1, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51187712
	013 Add X0, X0, 1102
	014 Call 0x1C17CB8
	015 Move X1, X0
	016 Move [X20+3064], X0
	017 Move X0, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 CallNoReturn X1
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x03BFED38 RET
	0x03BFED3C SUB X31, X31, 0x20
	0x03BFED40 STP X30, X19, [X31 + 0x10]
	0x03BFED44 MOV X19, X0
	0x03BFED48 BL 0x3BFEBBC
	0x03BFED4C LDR X9, [X19]
	0x03BFED50 ADRP X19, 0x7E5000
	0x03BFED54 LDR X8, [X19 + 0xC70]
	0x03BFED58 STR X9, [X31 + 0x8]
	0x03BFED5C CBNZ X8, 0x3BFED74
	0x03BFED60 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03BFED64 ADD X0, X0, 0xDE3
	0x03BFED68 BL 0x1C16CB8
	0x03BFED6C MOV X8, X0
	0x03BFED70 STR X0, [X19 + 0xC70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E6000
	005 Move X1, [X20+3072]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51253248
	010 Add X0, X0, 2541
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3072], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void ScheduleBatchedJobs()

Disassembly:
	0x03BFEDB0 BL 0x1C16CB8
	0x03BFEDB4 MOV X8, X0
	0x03BFEDB8 STR X0, [X20 + 0xC70]
	0x03BFEDBC ADD X0, X31, 0x8
	0x03BFEDC0 MOV W1, W19
	0x03BFEDC4 BLR X8
	0x03BFEDC8 LDP X20, X19, [X31 + 0x10]
	0x03BFEDCC LDR X30, [X31], #0x20
	0x03BFEDD0 RET
	0x03BFEDD4 SUB X31, X31, 0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E6000
	004 Move X0, [X19+3056]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51433472
	008 Add X0, X0, 2791
	009 Call 0x1C17CB8
	010 Move [X19+3056], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void ScheduleBatchedJobsAndComplete(ref Unity.Jobs.JobHandle job)

Disassembly:
	0x03BFECFC SUB X31, X31, 0x20
	0x03BFED00 STP X30, X19, [X31 + 0x10]
	0x03BFED04 ADRP X19, 0x7E5000
	0x03BFED08 LDR X8, [X19 + 0xC68]
	0x03BFED0C STR X0, [X31 + 0x8]
	0x03BFED10 CBNZ X8, 0x3BFED28
	0x03BFED14 ADRP X0, 0xFFFFFFFFFCF14000
	0x03BFED18 ADD X0, X0, 0x8DD
	0x03BFED1C BL 0x1C16CB8
	0x03BFED20 MOV X8, X0
	0x03BFED24 STR X0, [X19 + 0xC68]
	0x03BFED28 ADD X0, X31, 0x8
	0x03BFED2C BLR X8
	0x03BFED30 LDP X30, X19, [X31 + 0x10]
	0x03BFED34 ADD X31, X31, 0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E6000
	005 Move X1, [X20+3064]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51187712
	010 Add X0, X0, 1102
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3064], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean ScheduleBatchedJobsAndIsCompleted(ref Unity.Jobs.JobHandle job)

Disassembly:
	0x03BFED74 ADD X0, X31, 0x8
	0x03BFED78 MOV W1, W31
	0x03BFED7C BLR X8
	0x03BFED80 LDP X30, X19, [X31 + 0x10]
	0x03BFED84 ADD X31, X31, 0x20
	0x03BFED88 RET
	0x03BFED8C STR X30, [X31 - 0x20]!
	0x03BFED90 STP X20, X19, [X31 + 0x10]
	0x03BFED94 ADRP X20, 0x7E5000
	0x03BFED98 LDR X8, [X20 + 0xC70]
	0x03BFED9C MOV W19, W1
	0x03BFEDA0 STR X0, [X31 + 0x8]
	0x03BFEDA4 CBNZ X8, 0x3BFEDBC
	0x03BFEDA8 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03BFEDAC ADD X0, X0, 0xDE3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E6000
	005 Move X1, [X20+3072]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51253248
	010 Add X0, X0, 2541
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3072], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: Unity.Jobs.JobHandle CombineDependencies(Unity.Jobs.JobHandle job0, Unity.Jobs.JobHandle job1)

Disassembly:
	0x03BFEDD8 STP X30, X19, [X31 + 0x10]
	0x03BFEDDC MOV X19, X0
	0x03BFEDE0 BL 0x3BFEBBC
	0x03BFEDE4 LDR X9, [X19]
	0x03BFEDE8 ADRP X19, 0x7E5000
	0x03BFEDEC LDR X8, [X19 + 0xC80]
	0x03BFEDF0 STR X9, [X31 + 0x8]
	0x03BFEDF4 CBNZ X8, 0x3BFEE0C
	0x03BFEDF8 ADRP X0, 0xFFFFFFFFFCF1E000
	0x03BFEDFC ADD X0, X0, 0xB3C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+24], X1
	003 Move [X31+32], X30
	004 Move [X31+8], X3
	005 Move [X31+16], X0
	006 Add X0, X31, 16
	007 Add X1, X31, 0
	008 Move [X31], X2
	009 Call JobHandle.CombineDependenciesInternal2, X0, X1
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return X0

Method: Unity.Jobs.JobHandle CombineDependencies(Unity.Collections.NativeArray`1<Unity.Jobs.JobHandle> jobs)

Disassembly:
	0x03BFEE5C AND W0, W0, 0x1
	0x03BFEE60 ADD X31, X31, 0x20
	0x03BFEE64 RET
	0x03BFEE68 SUB X31, X31, 0x40
	0x03BFEE6C STP X30, X21, [X31 + 0x20]
	0x03BFEE70 STP X20, X19, [X31 + 0x30]
	0x03BFEE74 MOV W19, W1
	0x03BFEE78 MOV X20, X0
	0x03BFEE7C MOV X21, X8
	0x03BFEE80 STP X31, X31, [X31 + 0x8]
	0x03BFEE84 STR X31, [X31 + 0x18]
	0x03BFEE88 BL 0x3BFEBBC
	0x03BFEE8C LDR X0, [X20]
	0x03BFEE90 ADD X8, X31, 0x8
	0x03BFEE94 MOV W1, W19
	0x03BFEE98 BL 0x3BFEEBC
	0x03BFEE9C LDR X8, [X31 + 0x18]
	0x03BFEEA0 LDUR V0, [X31 + 0x8]
	0x03BFEEA4 LDP X20, X19, [X31 + 0x30]
	0x03BFEEA8 STR X8, [X21 + 0x10]
	0x03BFEEAC STR V0, [X21]
	0x03BFEEB0 LDP X30, X21, [X31 + 0x20]
	0x03BFEEB4 ADD X31, X31, 0x40
	0x03BFEEB8 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E6000
	007 Move X21, 0x561000
	008 Move W8, [X22+3080]
	009 Move X21, [X21+2640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x561000
	017 Move X0, [X0+2640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3080], W8
	021 Move X2, [X21]
	022 Move X0, X20
	023 Move X1, X19
	024 Call NativeArrayUnsafeUtility.GetUnsafeReadOnlyPtr, X0
	025 Move W1, W19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]

Method: Unity.Jobs.JobHandle CombineDependencies(Unity.Collections.NativeSlice`1<Unity.Jobs.JobHandle> jobs)

Disassembly:
	0x03BFEF18 STR V0, [X19]
	0x03BFEF1C LDP X20, X19, [X31 + 0x30]
	0x03BFEF20 ADD X31, X31, 0x40
	0x03BFEF24 RET
	0x03BFEF28 STP X30, X23, [X31 - 0x30]!
	0x03BFEF2C STP X22, X21, [X31 + 0x10]
	0x03BFEF30 STP X20, X19, [X31 + 0x20]
	0x03BFEF34 ADRP X23, 0x7E5000
	0x03BFEF38 LDR X4, [X23 + 0xC58]
	0x03BFEF3C MOV X19, X3
	0x03BFEF40 MOV W20, W2
	0x03BFEF44 MOV W21, W1
	0x03BFEF48 MOV X22, X0
	0x03BFEF4C CBNZ X4, 0x3BFEF64
	0x03BFEF50 ADRP X0, 0xFFFFFFFFFCF02000
	0x03BFEF54 ADD X0, X0, 0xB0A
	0x03BFEF58 BL 0x1C16CB8
	0x03BFEF5C MOV X4, X0
	0x03BFEF60 STR X0, [X23 + 0xC58]
	0x03BFEF64 MOV X0, X22
	0x03BFEF68 MOV W1, W21
	0x03BFEF6C MOV W2, W20
	0x03BFEF70 MOV X3, X19
	0x03BFEF74 LDP X20, X19, [X31 + 0x20]
	0x03BFEF78 LDP X22, X21, [X31 + 0x10]
	0x03BFEF7C LDP X30, X23, [X31], #0x30
	0x03BFEF80 BR X4
	0x03BFEF84 STP X30, X21, [X31 - 0x20]!
	0x03BFEF88 STP X20, X19, [X31 + 0x10]
	0x03BFEF8C ADRP X21, 0x7E5000
	0x03BFEF90 LDR X2, [X21 + 0xC60]
	0x03BFEF94 MOV W19, W1
	0x03BFEF98 MOV X20, X0
	0x03BFEF9C CBNZ X2, 0x3BFEFB4
	0x03BFEFA0 ADRP X0, 0xFFFFFFFFFCF00000
	0x03BFEFA4 ADD X0, X0, 0xB1A
	0x03BFEFA8 BL 0x1C16CB8
	0x03BFEFAC MOV X2, X0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x7E6000
	009 Move [X31], X0
	010 Move [X31+8], X1
	011 Move X23, 0x561000
	012 Move X21, 0x561000
	013 Move W8, [X22+3081]
	014 Move X23, [X23+2648]
	015 Move X21, [X21+2656]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x561000
	023 Move X0, [X0+2648]
	024 Call 0x1C17CF4
	025 Move X0, 0x561000
	026 Move X0, [X0+2656]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3081], W8
	030 Move X2, [X23]
	031 Move X0, X20
	032 Move X1, X19
	033 Call NativeSliceUnsafeUtility.GetUnsafeReadOnlyPtr, X0
	034 Move X1, [X21]
	035 Move X19, X0
	036 Add X0, X31, 0
	037 Call NativeSlice`1<JobHandle>.get_Length, X0
	038 Move W1, W0
	039 Move X0, X19
	040 Call JobHandle.CombineDependenciesInternalPtr, X0, X1
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X30, [X31+16]
	046 Move X23, [X31+24]
	047 Add X31, X31, 64
	048 Return X0

Method: Unity.Jobs.JobHandle CombineDependenciesInternal2(ref Unity.Jobs.JobHandle job0, ref Unity.Jobs.JobHandle job1)

Disassembly:
	0x03BFEE00 BL 0x1C16CB8
	0x03BFEE04 MOV X8, X0
	0x03BFEE08 STR X0, [X19 + 0xC80]
	0x03BFEE0C ADD X0, X31, 0x8
	0x03BFEE10 BLR X8
	0x03BFEE14 LDP X30, X19, [X31 + 0x10]
	0x03BFEE18 AND W0, W0, 0x1
	0x03BFEE1C ADD X31, X31, 0x20
	0x03BFEE20 RET
	0x03BFEE24 SUB X31, X31, 0x20
	0x03BFEE28 STP X30, X19, [X31 + 0x10]
	0x03BFEE2C ADRP X19, 0x7E5000
	0x03BFEE30 LDR X8, [X19 + 0xC80]
	0x03BFEE34 STR X0, [X31 + 0x8]
	0x03BFEE38 CBNZ X8, 0x3BFEE50
	0x03BFEE3C ADRP X0, 0xFFFFFFFFFCF1E000
	0x03BFEE40 ADD X0, X0, 0xB3C
	0x03BFEE44 BL 0x1C16CB8
	0x03BFEE48 MOV X8, X0
	0x03BFEE4C STR X0, [X19 + 0xC80]
	0x03BFEE50 ADD X0, X31, 0x8
	0x03BFEE54 BLR X8
	0x03BFEE58 LDP X30, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7E6000
	007 Move X8, [X21+3088]
	008 Move X19, X1
	009 Move X20, X0
	010 Move [X31], X31
	011 Move [X31+8], X31
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51302400
	015 Add X0, X0, 3117
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X21+3088], X0
	019 Add X2, X31, 0
	020 Move X0, X20
	021 Move X1, X19
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, [X31]
	024 Move X1, [X31+8]
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: Unity.Jobs.JobHandle CombineDependenciesInternalPtr(System.Void* jobs, System.Int32 count)

Disassembly:
	0x03BFEEBC SUB X31, X31, 0x40
	0x03BFEEC0 STP X30, X21, [X31 + 0x20]
	0x03BFEEC4 STP X20, X19, [X31 + 0x30]
	0x03BFEEC8 ADRP X21, 0x7E5000
	0x03BFEECC MOV X19, X8
	0x03BFEED0 LDR X8, [X21 + 0xC88]
	0x03BFEED4 MOV W20, W1
	0x03BFEED8 STP X31, X0, [X31 + 0x10]
	0x03BFEEDC STP X31, X31, [X31]
	0x03BFEEE0 CBNZ X8, 0x3BFEEF8
	0x03BFEEE4 ADRP X0, 0xFFFFFFFFFCF1C000
	0x03BFEEE8 ADD X0, X0, 0x780
	0x03BFEEEC BL 0x1C16CB8
	0x03BFEEF0 MOV X8, X0
	0x03BFEEF4 STR X0, [X21 + 0xC88]
	0x03BFEEF8 ADD X0, X31, 0x18
	0x03BFEEFC ADD X2, X31, 0x0
	0x03BFEF00 MOV W1, W20
	0x03BFEF04 BLR X8
	0x03BFEF08 LDR X8, [X31 + 0x10]
	0x03BFEF0C LDR V0, [X31]
	0x03BFEF10 LDP X30, X21, [X31 + 0x20]
	0x03BFEF14 STR X8, [X19 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7E6000
	007 Move X8, [X21+3096]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31], X31
	011 Move [X31+8], X31
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51318784
	015 Add X0, X0, 2822
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X21+3096], X0
	019 Add X2, X31, 0
	020 Move X0, X20
	021 Move W1, W19
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, [X31]
	024 Move X1, [X31+8]
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Boolean Equals(Unity.Jobs.JobHandle other)

Disassembly:
	0x03BFF058 MOV X19, X0
	0x03BFF05C CBNZ X1, 0x3BFF074
	0x03BFF060 ADRP X0, 0xFFFFFFFFFCF09000
	0x03BFF064 ADD X0, X0, 0xBF7

ISIL:
	001 Move X8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void CombineDependenciesInternal2_Injected(ref Unity.Jobs.JobHandle job0, ref Unity.Jobs.JobHandle job1, out Unity.Jobs.JobHandle ret)

Disassembly:
	0x03BFEFB0 STR X0, [X21 + 0xC60]
	0x03BFEFB4 MOV X0, X20
	0x03BFEFB8 MOV W1, W19
	0x03BFEFBC LDP X20, X19, [X31 + 0x10]
	0x03BFEFC0 LDP X30, X21, [X31], #0x20
	0x03BFEFC4 BR X2
	0x03BFEFC8 STR X30, [X31 - 0x20]!
	0x03BFEFCC STP X20, X19, [X31 + 0x10]
	0x03BFEFD0 ADRP X20, 0x7E5000
	0x03BFEFD4 LDR X1, [X20 + 0xC68]
	0x03BFEFD8 MOV X19, X0
	0x03BFEFDC CBNZ X1, 0x3BFEFF4
	0x03BFEFE0 ADRP X0, 0xFFFFFFFFFCF14000
	0x03BFEFE4 ADD X0, X0, 0x8DD
	0x03BFEFE8 BL 0x1C16CB8
	0x03BFEFEC MOV X1, X0
	0x03BFEFF0 STR X0, [X20 + 0xC68]
	0x03BFEFF4 MOV X0, X19
	0x03BFEFF8 LDP X20, X19, [X31 + 0x10]
	0x03BFEFFC LDR X30, [X31], #0x20
	0x03BFF000 BR X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E6000
	007 Move X3, [X22+3088]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51302400
	014 Add X0, X0, 3117
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3088], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void CombineDependenciesInternalPtr_Injected(System.Void* jobs, System.Int32 count, out Unity.Jobs.JobHandle ret)

Disassembly:
	0x03BFF004 STP X30, X21, [X31 - 0x20]!
	0x03BFF008 STP X20, X19, [X31 + 0x10]
	0x03BFF00C ADRP X21, 0x7E4000
	0x03BFF010 LDR X2, [X21 + 0xC70]
	0x03BFF014 MOV W19, W1
	0x03BFF018 MOV X20, X0
	0x03BFF01C CBNZ X2, 0x3BFF034
	0x03BFF020 ADRP X0, 0xFFFFFFFFFCEF7000
	0x03BFF024 ADD X0, X0, 0xDE3
	0x03BFF028 BL 0x1C16CB8
	0x03BFF02C MOV X2, X0
	0x03BFF030 STR X0, [X21 + 0xC70]
	0x03BFF034 MOV X0, X20
	0x03BFF038 MOV W1, W19
	0x03BFF03C LDP X20, X19, [X31 + 0x10]
	0x03BFF040 LDP X30, X21, [X31], #0x20
	0x03BFF044 BR X2
	0x03BFF048 STR X30, [X31 - 0x20]!
	0x03BFF04C STP X20, X19, [X31 + 0x10]
	0x03BFF050 ADRP X20, 0x7E4000
	0x03BFF054 LDR X1, [X20 + 0xC78]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E5000
	007 Move X3, [X22+3096]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51322880
	014 Add X0, X0, 2822
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3096], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

