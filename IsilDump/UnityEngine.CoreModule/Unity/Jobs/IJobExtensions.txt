Type: Unity.Jobs.IJobExtensions

Method: System.Void EarlyJobInit()

Disassembly:
	0x021EEBAC STR X31, [X31 + 0x20]
	0x021EEBB0 STP V0, V0, [X31]
	0x021EEBB4 LDR X1, [X8 + 0x8]
	0x021EEBB8 MOV X0, X24
	0x021EEBBC LDR X8, [X1]
	0x021EEBC0 BLR X8
	0x021EEBC4 LDR X8, [X23 + 0x38]
	0x021EEBC8 MOV X23, X0
	0x021EEBCC LDR X8, [X8 + 0x18]
	0x021EEBD0 LDR X9, [X8]
	0x021EEBD4 MOV X0, X8
	0x021EEBD8 BLR X9
	0x021EEBDC MOV X2, X0
	0x021EEBE0 ADD X0, X31, 0x0
	0x021EEBE4 MOVZ W5, 0x1
	0x021EEBE8 MOV X1, X23
	0x021EEBEC MOV X3, X22
	0x021EEBF0 MOV X4, X21

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call 0x1C5D6E0
	009 Move X8, [X19+56]
	010 Move X0, [X8+8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 Move X8, [X19+56]
	022 Move X0, [X8]
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Call JobStruct`1<NativeArrayDisposeJob>.Initialize
	026 Return 

Method: System.IntPtr GetReflectionData()

Disassembly:
	0x021EEC40 BL 0x1C16CF4
	0x021EEC44 LDR X8, [X19 + 0x38]
	0x021EEC48 CBNZ X8, 0x21EEC58
	0x021EEC4C MOV X0, X19
	0x021EEC50 BL 0x1C5C6E0
	0x021EEC54 LDR X8, [X19 + 0x38]
	0x021EEC58 LDR X0, [X8 + 0x8]
	0x021EEC5C LDRB W8, [X0 + 0x135]
	0x021EEC60 TBNZ X8, 0x0, 0x21EEC68
	0x021EEC64 BL 0x1C5C684
	0x021EEC68 LDR W8, [X0 + 0xE0]
	0x021EEC6C CBNZ W8, 0x21EEC74
	0x021EEC70 BL 0x1C16DFC
	0x021EEC74 LDR X8, [X19 + 0x38]
	0x021EEC78 LDR X0, [X8]
	0x021EEC7C LDR X8, [X0]
	0x021EEC80 BLR X8
	0x021EEC84 LDR X8, [X19 + 0x38]
	0x021EEC88 LDR X0, [X8 + 0x8]
	0x021EEC8C LDRB W8, [X0 + 0x135]
	0x021EEC90 TBNZ X8, 0x0, 0x21EEC98
	0x021EEC94 BL 0x1C5C684
	0x021EEC98 ADRP X8, 0x1F2D000
	0x021EEC9C LDR X0, [X0 + 0xB8]
	0x021EECA0 LDR X8, [X8 + 0xB90]
	0x021EECA4 LDR X1, [X8]
	0x021EECA8 BL 0x25E6504
	0x021EECAC LDR X0, [X0]
	0x021EECB0 LDP X30, X19, [X31], #0x10
	0x021EECB4 RET
	0x021EECB8 STP X30, X19, [X31 - 0x10]!
	0x021EECBC LDR X8, [X0 + 0x38]
	0x021EECC0 MOV X19, X0
	0x021EECC4 CBNZ X8, 0x21EECE8
	0x021EECC8 ADRP X0, 0x1F2D000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfNotEqual {16}
	007 Move X0, 0x1F2E000
	008 Move X0, [X0+2960]
	009 Call 0x1C17CF4
	010 Move X8, [X19+56]
	011 Compare X8, 0
	012 JumpIfNotEqual {16}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Move X8, [X19+56]
	016 Move X0, [X8+8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X8, [X19+56]
	028 Move X0, [X8]
	029 Call 0x2EA61CC
	030 Move X8, [X19+56]
	031 Move X0, [X8+8]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, 0x1F2E000
	039 Move X0, [X0+184]
	040 Move X8, [X8+2960]
	041 Move X1, [X8]
	042 Call 0x25E7504, X0
	043 Move X0, [X0]
	044 Move X30, [X31+16]
	045 Move X19, [X31+24]
	046 Return X0

Method: Unity.Jobs.JobHandle Schedule(T jobData, Unity.Jobs.JobHandle dependsOn = null)

Disassembly:
	0x021EF0A4 BL 0x1C5C6E0
	0x021EF0A8 LDR X8, [X22 + 0x38]
	0x021EF0AC MOVI V0.2D, 0x0
	0x021EF0B0 STR X31, [X31 + 0x20]
	0x021EF0B4 STP V0, V0, [X31]
	0x021EF0B8 LDR X0, [X8 + 0x18]
	0x021EF0BC BL 0x21EEF34
	0x021EF0C0 MOV X2, X0
	0x021EF0C4 ADD X0, X31, 0x0
	0x021EF0C8 MOVZ W5, 0x1
	0x021EF0CC MOV X1, X21
	0x021EF0D0 MOV X3, X20
	0x021EF0D4 MOV X4, X19
	0x021EF0D8 MOV X6, X31
	0x021EF0DC BL 0x3BFE4B0
	0x021EF0E0 ADD X0, X31, 0x38
	0x021EF0E4 MOV X1, X31
	0x021EF0E8 BL 0x3C437D8
	0x021EF0EC MOV X1, X0
	0x021EF0F0 ADD X0, X31, 0x0
	0x021EF0F4 MOV X2, X31
	0x021EF0F8 BL 0x3BFE294
	0x021EF0FC LDP X20, X19, [X31 + 0x50]
	0x021EF100 LDP X22, X21, [X31 + 0x40]
	0x021EF104 LDR X30, [X31 + 0x30]
	0x021EF108 ADD X31, X31, 0x60
	0x021EF10C RET
	0x021EF110 STP X30, X21, [X31 - 0x20]!
	0x021EF114 STP X20, X19, [X31 + 0x10]
	0x021EF118 LDR X8, [X2 + 0x38]
	0x021EF11C MOV X20, X2
	0x021EF120 MOV X19, X1
	0x021EF124 MOV X21, X0
	0x021EF128 CBNZ X8, 0x21EF140

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X8, [X3+56]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {17}
	013 Move X0, X3
	014 Move X22, X3
	015 Call 0x1C5D6E0
	016 Move X8, [X22+56]
	017 NotImplemented "Instruction MOVI not yet implemented."
	018 Move [X31+32], X31
	019 Move [X31], V0
	020 Move [X31+8], V0
	021 Move X0, [X8+24]
	022 Call 0x21EEC40
	023 Move X2, X0
	024 Add X0, X31, 0
	025 Move W5, 2
	026 Move X1, X21
	027 Move X3, X20
	028 Move X4, X19
	029 Move X6, X31
	030 Call JobScheduleParameters..ctor, X0, X1, X2, X3, X4
	031 Add X0, X31, 0
	032 Move X1, X31
	033 Call JobsUtility.Schedule, X0
	034 Move X20, [X31+80]
	035 Move X19, [X31+88]
	036 Move X22, [X31+64]
	037 Move X21, [X31+72]
	038 Move X30, [X31+48]
	039 Add X31, X31, 96
	040 Return X0

