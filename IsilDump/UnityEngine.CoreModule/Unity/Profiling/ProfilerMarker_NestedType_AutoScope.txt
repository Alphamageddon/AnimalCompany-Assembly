Type: Unity.Profiling.ProfilerMarker/AutoScope

Method: System.Void .ctor(System.IntPtr markerPtr)

Disassembly:
	0x03BFF910 ADD W20, W12, 0x1
	0x03BFF914 ADD X12, X19, W12, SXTW
	0x03BFF918 MOV W13, W11
	0x03BFF91C MOV W11, W31
	0x03BFF920 STRB W10, [X12 + 0x20]
	0x03BFF924 MOVZ W10, 0x1
	0x03BFF928 MOV W12, W20
	0x03BFF92C TBNZ X13, 0x0, 0x3BFF900
	0x03BFF930 ADD X8, X8, 0x2
	0x03BFF934 CMP X9, X8
	0x03BFF938 B.NE 0x3BFF8F4
	0x03BFF93C MOV W0, W20
	0x03BFF940 LDP X20, X19, [X31 + 0x10]
	0x03BFF944 LDP X30, X21, [X31], #0x20
	0x03BFF948 RET
	0x03BFF94C BL 0x1C16F28
	0x03BFF950 BL 0x1C16F20
	0x03BFF954 STR X30, [X31 - 0x30]!
	0x03BFF958 STP X22, X21, [X31 + 0x10]
	0x03BFF95C STP X20, X19, [X31 + 0x20]
	0x03BFF960 ADRP X22, 0x7E4000
	0x03BFF964 LDR X3, [X22 + 0xD30]
	0x03BFF968 MOV X19, X2
	0x03BFF96C MOV X20, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move [X0], X1
	006 Move X0, X1
	007 Move X1, X31
	008 Move X2, X31
	009 Call IntPtr.op_Inequality, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {28}
	014 Move X20, 0x7E5000
	015 Move X1, [X20+3264]
	016 Compare X1, 0
	017 JumpIfNotEqual {23}
	018 Move X0, -51273728
	019 Add X0, X0, 1368
	020 Call 0x1C17CB8
	021 Move X1, X0
	022 Move [X20+3264], X0
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 CallNoReturn X1
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return 

Method: System.Void Dispose()

Disassembly:
	0x03BFF9AC STP X22, X21, [X31 + 0x10]
	0x03BFF9B0 STP X20, X19, [X31 + 0x20]
	0x03BFF9B4 ADRP X21, 0x7E4000
	0x03BFF9B8 ADRP X22, 0x55F000
	0x03BFF9BC LDRB W8, [X21 + 0xCE9]
	0x03BFF9C0 LDR X22, [X22 + 0xA90]
	0x03BFF9C4 MOV W20, W1
	0x03BFF9C8 MOV X19, X0
	0x03BFF9CC TBNZ X8, 0x0, 0x3BFF9E4
	0x03BFF9D0 ADRP X0, 0x55F000
	0x03BFF9D4 LDR X0, [X0 + 0xA90]
	0x03BFF9D8 BL 0x1C16CF4
	0x03BFF9DC MOVZ W8, 0x1
	0x03BFF9E0 STRB W8, [X21 + 0xCE9]
	0x03BFF9E4 LDR X8, [X22]
	0x03BFF9E8 LDR X9, [X8 + 0xB8]
	0x03BFF9EC LDR X8, [X9]
	0x03BFF9F0 CBZ X8, 0x3BFFA1C
	0x03BFF9F4 STR X31, [X9]
	0x03BFF9F8 LDR X4, [X8 + 0x18]
	0x03BFF9FC LDR X0, [X8 + 0x40]
	0x03BFFA00 LDR X3, [X8 + 0x28]
	0x03BFFA04 AND W2, W20, 0x1
	0x03BFFA08 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0]
	006 Move X1, X31
	007 Move X2, X31
	008 Call IntPtr.op_Inequality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {28}
	013 Move X20, 0x7E5000
	014 Move X1, [X20+3272]
	015 Move X19, [X19]
	016 Compare X1, 0
	017 JumpIfNotEqual {23}
	018 Move X0, -51363840
	019 Add X0, X0, 3224
	020 Call 0x1C17CB8
	021 Move X1, X0
	022 Move [X20+3272], X0
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 CallNoReturn X1
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return 

