Type: Unity.Profiling.Memory.MemoryProfiler

Method: System.Byte[] PrepareMetadata()

Disassembly:
	0x03C00630 STP X20, X19, [X31 + 0x10]
	0x03C00634 ADRP X21, 0x7E3000
	0x03C00638 LDR X2, [X21 + 0xD88]
	0x03C0063C MOV X19, X1
	0x03C00640 MOV X20, X0
	0x03C00644 CBNZ X2, 0x3C0065C
	0x03C00648 ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C0064C ADD X0, X0, 0xBBF
	0x03C00650 BL 0x1C16CB8
	0x03C00654 MOV X2, X0
	0x03C00658 STR X0, [X21 + 0xD88]
	0x03C0065C MOV X0, X20
	0x03C00660 MOV X1, X19
	0x03C00664 LDP X20, X19, [X31 + 0x10]
	0x03C00668 LDP X30, X21, [X31], #0x20
	0x03C0066C BR X2
	0x03C00670 STR X30, [X31 - 0x20]!
	0x03C00674 STP X20, X19, [X31 + 0x10]
	0x03C00678 ADRP X20, 0x7E3000
	0x03C0067C LDR X1, [X20 + 0xD90]
	0x03C00680 MOV W19, W0
	0x03C00684 CBNZ X1, 0x3C0069C
	0x03C00688 ADRP X0, 0xFFFFFFFFFCF2C000
	0x03C0068C ADD X0, X0, 0x56E
	0x03C00690 BL 0x1C16CB8
	0x03C00694 MOV X1, X0
	0x03C00698 STR X0, [X20 + 0xD90]
	0x03C0069C MOV W0, W19
	0x03C006A0 LDP X20, X19, [X31 + 0x10]
	0x03C006A4 LDR X30, [X31], #0x20
	0x03C006A8 BR X1
	0x03C006AC STR X30, [X31 - 0x20]!
	0x03C006B0 STP X20, X19, [X31 + 0x10]
	0x03C006B4 ADRP X20, 0x7E3000
	0x03C006B8 LDR X1, [X20 + 0xDA0]
	0x03C006BC MOV W19, W0
	0x03C006C0 CBNZ X1, 0x3C006D8
	0x03C006C4 ADRP X0, 0xFFFFFFFFFCF0E000
	0x03C006C8 ADD X0, X0, 0xD7F
	0x03C006CC BL 0x1C16CB8
	0x03C006D0 MOV X1, X0
	0x03C006D4 STR X0, [X20 + 0xDA0]
	0x03C006D8 MOV W0, W19
	0x03C006DC LDP X20, X19, [X31 + 0x10]
	0x03C006E0 LDR X30, [X31], #0x20
	0x03C006E4 BR X1
	0x03C006E8 STP X30, X19, [X31 - 0x10]!
	0x03C006EC ADRP X19, 0x7E3000
	0x03C006F0 LDR X0, [X19 + 0xDA8]
	0x03C006F4 CBNZ X0, 0x3C00708
	0x03C006F8 ADRP X0, 0xFFFFFFFFFCEFA000
	0x03C006FC ADD X0, X0, 0xE45
	0x03C00700 BL 0x1C16CB8
	0x03C00704 STR X0, [X19 + 0xDA8]
	0x03C00708 LDP X30, X19, [X31], #0x10
	0x03C0070C BR X0
	0x03C00710 STR X30, [X31 - 0x40]!
	0x03C00714 STP X24, X23, [X31 + 0x10]
	0x03C00718 STP X22, X21, [X31 + 0x20]
	0x03C0071C STP X20, X19, [X31 + 0x30]
	0x03C00720 ADRP X24, 0x7E3000
	0x03C00724 LDR X5, [X24 + 0xDB0]
	0x03C00728 MOV W19, W4
	0x03C0072C MOV X20, X3
	0x03C00730 MOV X21, X2
	0x03C00734 MOV W22, W1
	0x03C00738 MOV X23, X0
	0x03C0073C CBNZ X5, 0x3C00754
	0x03C00740 ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C00744 ADD X0, X0, 0xB13
	0x03C00748 BL 0x1C16CB8
	0x03C0074C MOV X5, X0
	0x03C00750 STR X0, [X24 + 0xDB0]
	0x03C00754 MOV X0, X23
	0x03C00758 MOV W1, W22
	0x03C0075C MOV X2, X21
	0x03C00760 MOV X3, X20
	0x03C00764 MOV W4, W19
	0x03C00768 LDP X20, X19, [X31 + 0x30]
	0x03C0076C LDP X22, X21, [X31 + 0x20]
	0x03C00770 LDP X24, X23, [X31 + 0x10]
	0x03C00774 LDR X30, [X31], #0x40
	0x03C00778 BR X5
	0x03C0077C STR X30, [X31 - 0x40]!
	0x03C00780 STP X24, X23, [X31 + 0x10]
	0x03C00784 STP X22, X21, [X31 + 0x20]
	0x03C00788 STP X20, X19, [X31 + 0x30]
	0x03C0078C ADRP X24, 0x7E3000
	0x03C00790 LDR X5, [X24 + 0xDB8]
	0x03C00794 MOV W19, W4
	0x03C00798 MOV X20, X3
	0x03C0079C MOV X21, X2
	0x03C007A0 MOV W22, W1
	0x03C007A4 MOV X23, X0
	0x03C007A8 CBNZ X5, 0x3C007C0
	0x03C007AC ADRP X0, 0xFFFFFFFFFCF16000
	0x03C007B0 ADD X0, X0, 0x2DC
	0x03C007B4 BL 0x1C16CB8
	0x03C007B8 MOV X5, X0
	0x03C007BC STR X0, [X24 + 0xDB8]
	0x03C007C0 MOV X0, X23
	0x03C007C4 MOV W1, W22
	0x03C007C8 MOV X2, X21
	0x03C007CC MOV X3, X20
	0x03C007D0 MOV W4, W19
	0x03C007D4 LDP X20, X19, [X31 + 0x30]
	0x03C007D8 LDP X22, X21, [X31 + 0x20]
	0x03C007DC LDP X24, X23, [X31 + 0x10]
	0x03C007E0 LDR X30, [X31], #0x40
	0x03C007E4 BR X5
	0x03C007E8 STR X30, [X31 - 0x20]!
	0x03C007EC STP X20, X19, [X31 + 0x10]
	0x03C007F0 ADRP X20, 0x7E3000
	0x03C007F4 LDR X1, [X20 + 0xDC0]
	0x03C007F8 MOV X19, X0
	0x03C007FC CBNZ X1, 0x3C00814
	0x03C00800 ADRP X0, 0xFFFFFFFFFCF16000
	0x03C00804 ADD X0, X0, 0x37E
	0x03C00808 BL 0x1C16CB8
	0x03C0080C MOV X1, X0
	0x03C00810 STR X0, [X20 + 0xDC0]
	0x03C00814 MOV X0, X19
	0x03C00818 LDP X20, X19, [X31 + 0x10]
	0x03C0081C LDR X30, [X31], #0x20
	0x03C00820 BR X1
	0x03C00824 MOV X1, X31
	0x03C00828 B 0x33A51F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x7E4000
	008 Move X21, 0x55F000
	009 Move W8, [X19+3304]
	010 Move X21, [X21+2704]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x4F4000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0x55F000
	019 Move X0, [X0+2704]
	020 Call 0x1C17CF4
	021 Move X0, 0x55F000
	022 Move X0, [X0+2712]
	023 Call 0x1C17CF4
	024 Move X0, 0x4F6000
	025 Move X0, [X0+632]
	026 Call 0x1C17CF4
	027 Move X0, 0x4F4000
	028 Move X0, [X0+2440]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+3304], W8
	032 Move X8, [X21]
	033 Move X20, 0x4F4000
	034 Move X8, [X8+184]
	035 Move X8, [X8+16]
	036 Move X20, [X20+1560]
	037 Compare X8, 0
	038 JumpIfEqual {81}
	039 Move X8, 0x55F000
	040 Move X8, [X8+2712]
	041 Move X0, [X8]
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X19, X0
	045 Call Object..ctor, X0
	046 Compare X19, 0
	047 JumpIfEqual {151}
	048 Move X8, 0x4F6000
	049 Move X8, [X8+632]
	050 Move X8, [X8]
	051 Move X8, [X8+184]
	052 Move X8, [X8]
	053 Move [X19+16], X8
	054 Move X8, [X21]
	055 Move X8, [X8+184]
	056 Move X8, [X8+16]
	057 Compare X8, 0
	058 JumpIfEqual {151}
	059 Move X9, [X8+24]
	060 Move X0, [X8+64]
	061 Move X2, [X8+40]
	062 Move X1, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X8, [X19+16]
	065 Compare X8, 0
	066 JumpIfNotEqual {73}
	067 Move X8, 0x4F4000
	068 Move X8, [X8+2440]
	069 Move X8, [X8]
	070 Move [X19+16], X8
	071 Compare X8, 0
	072 JumpIfEqual {151}
	073 Move W8, [X8+16]
	074 Move X9, [X19+24]
	075 Move W8, W8
	076 ShiftRight W8, 31
	077 And W8, W8, 0x3FFFFFFF
	078 Compare X9, 0
	079 JumpIfEqual {91}
	080 Move W21, [X9+24]
	081 Move X0, [X20]
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move W1, W31
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Call 0x1C17D6C
	090 Return X0
	091 Move W21, W31
	092 Move X0, [X20]
	093 Add W8, W8, W21
	094 Add W1, W8, 12
	095 Call 0x1C17D6C
	096 Move X8, [X19+16]
	097 Compare X8, 0
	098 JumpIfEqual {151}
	099 Move W2, [X8+16]
	100 Move W1, W31
	101 Move X20, X0
	102 Call MemoryProfiler.WriteIntToByteArray, X0, X1, X2
	103 Move X2, [X19+16]
	104 Move W1, W0
	105 Move X0, X20
	106 Call MemoryProfiler.WriteStringToByteArray, X0, X1, X2
	107 Move W1, W0
	108 Move X0, X20
	109 Move W2, W21
	110 Call MemoryProfiler.WriteIntToByteArray, X0, X1, X2
	111 Move X8, [X19+24]
	112 Compare X8, 0
	113 JumpIfEqual {120}
	114 Move W9, [X8+24]
	115 Add X8, X8, 32
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CSEL not yet implemented."
	118 Compare X20, 0
	119 JumpIfNotEqual {123}
	120 Move X19, X31
	121 Compare X20, 0
	122 JumpIfEqual {127}
	123 Move W8, [X20+24]
	124 Compare W8, 0
	125 JumpIfEqual {127}
	126 Add X9, X20, 32
	127 Move X9, X31
	128 Move X23, 0x7E4000
	129 Move X8, [X23+3376]
	130 Add X22, X9, W0
	131 Move X21, W21
	132 Compare X8, 0
	133 JumpIfNotEqual {139}
	134 Move X0, -51449856
	135 Add X0, X0, 3080
	136 Call 0x1C17CB8
	137 Move X8, X0
	138 Move [X23+3376], X0
	139 Move X0, X22
	140 Move X1, X19
	141 Move X2, X21
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X0, X20
	144 Move X20, [X31+32]
	145 Move X19, [X31+40]
	146 Move X22, [X31+16]
	147 Move X21, [X31+24]
	148 Move X30, [X31+48]
	149 Move X23, [X31+56]
	150 Return X0
	151 Call 0x1C17F20

Method: System.Int32 WriteIntToByteArray(System.Byte[] array, System.Int32 offset, System.Int32 value)

Disassembly:
	0x03C0082C MOV X1, X31
	0x03C00830 B 0x33A51F0
	0x03C00834 STR X30, [X31 - 0x20]!
	0x03C00838 STP X20, X19, [X31 + 0x10]
	0x03C0083C MOV X19, X1
	0x03C00840 MOV X1, X31
	0x03C00844 MOV X20, X0
	0x03C00848 BL 0x33A51F0
	0x03C0084C STR X19, [X20 + 0x10]
	0x03C00850 STRB W31, [X20 + 0x18]
	0x03C00854 LDP X20, X19, [X31 + 0x10]
	0x03C00858 LDR X30, [X31], #0x20
	0x03C0085C RET
	0x03C00860 STP X30, X21, [X31 - 0x20]!
	0x03C00864 STP X20, X19, [X31 + 0x10]
	0x03C00868 MOV X19, X1
	0x03C0086C MOV X1, X31
	0x03C00870 MOV X20, X0
	0x03C00874 AND W21, W2, 0x1
	0x03C00878 BL 0x33A51F0
	0x03C0087C STR X19, [X20 + 0x10]
	0x03C00880 STRB W21, [X20 + 0x18]
	0x03C00884 LDP X20, X19, [X31 + 0x10]
	0x03C00888 LDP X30, X21, [X31], #0x20
	0x03C0088C RET
	0x03C00890 MOV X1, X31
	0x03C00894 B 0x33A51F0
	0x03C00898 MOV X1, X31
	0x03C0089C B 0x33A51F0
	0x03C008A0 STR X30, [X31 - 0x20]!
	0x03C008A4 STP X20, X19, [X31 + 0x10]
	0x03C008A8 MOV W19, W1
	0x03C008AC MOV X1, X31
	0x03C008B0 MOV X20, X0
	0x03C008B4 BL 0x33A51F0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W2
	003 Compare X0, 0
	004 JumpIfEqual {32}
	005 Move W8, [X0+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X0, W1
	008 Move [X8+32], W2
	009 Move W9, [X0+24]
	010 Add W8, W1, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W9, [X31+13]
	013 Add X8, X0, W8
	014 Move [X8+32], W9
	015 Move W9, [X0+24]
	016 Add W8, W1, 2
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W9, [X31+14]
	019 Add X8, X0, W8
	020 Move [X8+32], W9
	021 Move W8, [X0+24]
	022 Add W9, W1, 3
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W10, [X31+15]
	025 Add W8, W1, 4
	026 Add X9, X0, W9
	027 Move W0, W8
	028 Move [X9+32], W10
	029 Move X30, [X31+16]
	030 Return X0
	031 Call 0x1C17F28
	032 Call 0x1C17F20

Method: System.Int32 WriteStringToByteArray(System.Byte[] array, System.Int32 offset, System.String value)

Disassembly:
	0x03C008B8 STR W19, [X20 + 0x10]
	0x03C008BC LDP X20, X19, [X31 + 0x10]
	0x03C008C0 LDR X30, [X31], #0x20
	0x03C008C4 RET
	0x03C008C8 MOV X1, X31
	0x03C008CC B 0x33A51F0
	0x03C008D0 LDR W0, [X0]
	0x03C008D4 RET
	0x03C008D8 STR X30, [X31 - 0x20]!
	0x03C008DC STP X20, X19, [X31 + 0x10]
	0x03C008E0 ADRP X20, 0x7E3000
	0x03C008E4 LDR X1, [X20 + 0xDD8]
	0x03C008E8 LDR W19, [X0]
	0x03C008EC CBNZ X1, 0x3C00904
	0x03C008F0 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C008F4 ADD X0, X0, 0xD2D
	0x03C008F8 BL 0x1C16CB8
	0x03C008FC MOV X1, X0
	0x03C00900 STR X0, [X20 + 0xDD8]
	0x03C00904 MOV W0, W19
	0x03C00908 LDP X20, X19, [X31 + 0x10]
	0x03C0090C LDR X30, [X31], #0x20
	0x03C00910 BR X1
	0x03C00914 STR X30, [X31 - 0x20]!
	0x03C00918 STP X20, X19, [X31 + 0x10]
	0x03C0091C ADRP X20, 0x7E3000
	0x03C00920 LDR X1, [X20 + 0xDD8]
	0x03C00924 MOV W19, W0
	0x03C00928 CBNZ X1, 0x3C00940
	0x03C0092C ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C00930 ADD X0, X0, 0xD2D
	0x03C00934 BL 0x1C16CB8
	0x03C00938 MOV X1, X0
	0x03C0093C STR X0, [X20 + 0xDD8]
	0x03C00940 MOV W0, W19
	0x03C00944 LDP X20, X19, [X31 + 0x10]
	0x03C00948 LDR X30, [X31], #0x20
	0x03C0094C BR X1
	0x03C00950 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X2, 0
	006 JumpIfEqual {48}
	007 Move W8, [X2+16]
	008 Move X21, X2
	009 Move W20, W1
	010 Compare W8, 0
	011 JumpIfEqual {41}
	012 Move X19, X0
	013 Move X0, X31
	014 Call RuntimeHelpers.get_OffsetToStringData
	015 NotImplemented "Instruction LDRSW not yet implemented."
	016 Compare W9, 0
	017 JumpIfEqual {41}
	018 Compare X19, 0
	019 JumpIfEqual {48}
	020 Add X8, X21, W0
	021 Add X9, X8, X9
	022 Move X10, X31
	023 Move W11, 1
	024 Move W12, W20
	025 Move W13, [X19+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W10, [X8]
	028 Add W20, W12, 1
	029 Add X12, X19, W12
	030 Move W13, W11
	031 Move W11, W31
	032 Move [X12+32], W10
	033 Move W10, 1
	034 Move W12, W20
	035 Move TEMP, X13
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {25}
	039 Add X8, X8, 2
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W0, W20
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F28
	048 Call 0x1C17F20

Method: System.Void FinalizeSnapshot(System.String path, System.Boolean result)

Disassembly:
	0x03C009A8 LDR W1, [X19 + 0x18]
	0x03C009AC LDR X0, [X8]
	0x03C009B0 BL 0x1C16D6C
	0x03C009B4 LDR X9, [X19 + 0x18]
	0x03C009B8 CMP W9, 0x1
	0x03C009BC B.LT 0x3C00A00
	0x03C009C0 CBZ X0, 0x3C00A0C
	0x03C009C4 AND X9, X9, 0x0
	0x03C009C8 MOV X8, X31
	0x03C009CC ADD X10, X19, 0x20
	0x03C009D0 SXTW X11, W9
	0x03C009D4 ADD X12, X0, 0x20
	0x03C009D8 CMP X8, X9
	0x03C009DC B.CS 0x3C00A08
	0x03C009E0 LDR W13, [X0 + 0x18]
	0x03C009E4 CMP X8, X13
	0x03C009E8 B.CS 0x3C00A08
	0x03C009EC LDR W13, [X10, X8, LSL #2]
	0x03C009F0 STR W13, [X12, X8, LSL #2]
	0x03C009F4 ADD X8, X8, 0x1
	0x03C009F8 CMP X8, X11
	0x03C009FC B.LT 0x3C009D8
	0x03C00A00 LDP X30, X19, [X31], #0x10
	0x03C00A04 RET
	0x03C00A08 BL 0x1C16F28
	0x03C00A0C BL 0x1C16F20
	0x03C00A10 STP X30, X19, [X31 - 0x10]!
	0x03C00A14 ADRP X19, 0x7E3000
	0x03C00A18 LDR X0, [X19 + 0xDD0]
	0x03C00A1C CBNZ X0, 0x3C00A30
	0x03C00A20 ADRP X0, 0xFFFFFFFFFCF0A000
	0x03C00A24 ADD X0, X0, 0xDED
	0x03C00A28 BL 0x1C16CB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7E4000
	007 Move X22, 0x55F000
	008 Move W8, [X21+3305]
	009 Move X22, [X22+2704]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x55F000
	017 Move X0, [X0+2704]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3305], W8
	021 Move X8, [X22]
	022 Move X9, [X8+184]
	023 Move X8, [X9]
	024 Compare X8, 0
	025 JumpIfEqual {38}
	026 Move [X9], X31
	027 Move X4, [X8+24]
	028 Move X0, [X8+64]
	029 Move X3, [X8+40]
	030 And W2, W20, 1
	031 Move X1, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 CallNoReturn X4
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 

Method: System.Void SaveScreenshotToDisk(System.String path, System.Boolean result, System.IntPtr pixelsPtr, System.Int32 pixelsCount, UnityEngine.TextureFormat format, System.Int32 width, System.Int32 height)

Disassembly:
	0x03C00A2C STR X0, [X19 + 0xDD0]
	0x03C00A30 LDP X30, X19, [X31], #0x10
	0x03C00A34 BR X0
	0x03C00A38 STR X30, [X31 - 0x20]!
	0x03C00A3C STP X20, X19, [X31 + 0x10]
	0x03C00A40 ADRP X20, 0x7E3000
	0x03C00A44 LDR X1, [X20 + 0xDE0]
	0x03C00A48 MOV W19, W0
	0x03C00A4C CBNZ X1, 0x3C00A64
	0x03C00A50 ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C00A54 ADD X0, X0, 0xD78
	0x03C00A58 BL 0x1C16CB8
	0x03C00A5C MOV X1, X0
	0x03C00A60 STR X0, [X20 + 0xDE0]
	0x03C00A64 MOV W0, W19
	0x03C00A68 LDP X20, X19, [X31 + 0x10]
	0x03C00A6C LDR X30, [X31], #0x20
	0x03C00A70 BR X1
	0x03C00A74 STP S0, S1, [X0]
	0x03C00A78 STP X31, X31, [X0 + 0x8]
	0x03C00A7C STR W31, [X0 + 0x18]
	0x03C00A80 RET
	0x03C00A84 STP S0, S1, [X0]
	0x03C00A88 STP S2, S3, [X0 + 0x8]
	0x03C00A8C STR W31, [X0 + 0x18]
	0x03C00A90 STR X31, [X0 + 0x10]
	0x03C00A94 RET
	0x03C00A98 LDR V0, [X0]
	0x03C00A9C RET
	0x03C00AA0 STR S0, [X0]
	0x03C00AA4 RET
	0x03C00AA8 LDR V0, [X0 + 0x4]
	0x03C00AAC RET
	0x03C00AB0 STR S0, [X0 + 0x4]
	0x03C00AB4 RET
	0x03C00AB8 LDR V0, [X0 + 0x8]
	0x03C00ABC RET
	0x03C00AC0 STR S0, [X0 + 0x8]
	0x03C00AC4 RET
	0x03C00AC8 LDR V0, [X0 + 0xC]
	0x03C00ACC RET
	0x03C00AD0 STR S0, [X0 + 0xC]
	0x03C00AD4 RET
	0x03C00AD8 LDR V0, [X0 + 0x14]
	0x03C00ADC RET
	0x03C00AE0 STR S0, [X0 + 0x14]
	0x03C00AE4 RET
	0x03C00AE8 LDR V0, [X0 + 0x18]
	0x03C00AEC RET
	0x03C00AF0 STR S0, [X0 + 0x18]
	0x03C00AF4 RET
	0x03C00AF8 LDR W0, [X0 + 0x10]
	0x03C00AFC RET
	0x03C00B00 STR W1, [X0 + 0x10]
	0x03C00B04 RET
	0x03C00B08 STR X30, [X31 - 0x20]!
	0x03C00B0C STP X20, X19, [X31 + 0x10]
	0x03C00B10 ADRP X20, 0x7E3000
	0x03C00B14 LDR X1, [X20 + 0xDE8]
	0x03C00B18 MOV X19, X0
	0x03C00B1C CBNZ X1, 0x3C00B34
	0x03C00B20 ADRP X0, 0xFFFFFFFFFCF0A000
	0x03C00B24 ADD X0, X0, 0xE24

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X26, 0x7E4000
	013 Move X27, 0x55F000
	014 Move W8, [X26+3306]
	015 Move X27, [X27+2704]
	016 Move W21, W6
	017 Move W22, W5
	018 Move W23, W4
	019 Move W24, W3
	020 Move X25, X2
	021 Move W20, W1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x55F000
	028 Move X0, [X0+2704]
	029 Call 0x1C17CF4
	030 Move X0, 0x54B000
	031 Move X0, [X0+208]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X26+3306], W8
	035 Move X8, [X27]
	036 Move X8, [X8+184]
	037 Move X26, [X8+8]
	038 Compare X26, 0
	039 JumpIfEqual {71}
	040 Move [X8+8], X31
	041 Move TEMP, X20
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {52}
	045 Move X8, 0x54B000
	046 Move X8, [X8+208]
	047 Move W2, 4
	048 Move X0, X25
	049 Move W1, W24
	050 Move X3, [X8]
	051 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	052 Move X0, X31
	053 Move X1, X31
	054 Move W23, W31
	055 Move W22, W31
	056 Move W21, W31
	057 Move X9, [X26+24]
	058 Move X8, [X26+64]
	059 Move [X31], X0
	060 Move [X31+8], X1
	061 Move [X31+16], W23
	062 Move [X31+20], W22
	063 Move [X31+24], W21
	064 Move [X31+28], W31
	065 Move X4, [X26+40]
	066 And W2, W20, 1
	067 Add X3, X31, 0
	068 Move X0, X8
	069 Move X1, X19
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X20, [X31+96]
	072 Move X19, [X31+104]
	073 Move X22, [X31+80]
	074 Move X21, [X31+88]
	075 Move X24, [X31+64]
	076 Move X23, [X31+72]
	077 Move X26, [X31+48]
	078 Move X25, [X31+56]
	079 Move X30, [X31+32]
	080 Move X27, [X31+40]
	081 Add X31, X31, 112
	082 Return 

