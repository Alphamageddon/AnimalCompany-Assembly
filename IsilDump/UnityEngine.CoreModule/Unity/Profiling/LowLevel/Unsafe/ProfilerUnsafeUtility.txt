Type: Unity.Profiling.LowLevel.Unsafe.ProfilerUnsafeUtility

Method: System.UInt16 CreateCategory__Unmanaged(System.Byte* name, System.Int32 nameLen, Unity.Profiling.ProfilerCategoryColor colorIndex)

Disassembly:
	0x03C003FC CBZ X21, 0x3C00554
	0x03C00400 MOV X0, X21
	0x03C00404 MOV X1, X31
	0x03C00408 BL 0x33970C4
	0x03C0040C TBZ X0, 0x0, 0x3C0042C
	0x03C00410 MOV X0, X21
	0x03C00414 MOV X1, X31
	0x03C00418 BL 0x3397374
	0x03C0041C TBZ X0, 0x0, 0x3C00458
	0x03C00420 ADRP X8, 0x55E000
	0x03C00424 LDR X8, [X8 + 0xAB0]
	0x03C00428 B 0x3C00434
	0x03C0042C ADRP X8, 0x55E000
	0x03C00430 LDR X8, [X8 + 0xAB8]
	0x03C00434 LDR X0, [X8]
	0x03C00438 MOV X1, X19
	0x03C0043C MOV X2, X21
	0x03C00440 LDP X20, X19, [X31 + 0x30]
	0x03C00444 LDP X22, X21, [X31 + 0x20]
	0x03C00448 LDP X24, X23, [X31 + 0x10]
	0x03C0044C MOV X3, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E4000
	007 Move X3, [X22+3232]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51359744
	014 Add X0, X0, 3511
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3232], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: Unity.Profiling.LowLevel.Unsafe.ProfilerCategoryDescription GetCategoryDescription(System.UInt16 categoryId)

Disassembly:
	0x03BFF61C RET
	0x03BFF620 LDR X0, [X0 + 0x18]
	0x03BFF624 RET
	0x03BFF628 MOV X1, X31
	0x03BFF62C B 0x33BDD8C
	0x03BFF630 STP X30, X23, [X31 - 0x30]!
	0x03BFF634 STP X22, X21, [X31 + 0x10]
	0x03BFF638 STP X20, X19, [X31 + 0x20]
	0x03BFF63C ADRP X19, 0x7E4000
	0x03BFF640 ADRP X21, 0x55F000
	0x03BFF644 LDRB W8, [X19 + 0xCE8]
	0x03BFF648 LDR X21, [X21 + 0xA90]
	0x03BFF64C TBNZ X8, 0x0, 0x3BFF694
	0x03BFF650 ADRP X0, 0x4F4000
	0x03BFF654 LDR X0, [X0 + 0x618]
	0x03BFF658 BL 0x1C16CF4
	0x03BFF65C ADRP X0, 0x55F000
	0x03BFF660 LDR X0, [X0 + 0xA90]
	0x03BFF664 BL 0x1C16CF4
	0x03BFF668 ADRP X0, 0x55F000
	0x03BFF66C LDR X0, [X0 + 0xA98]
	0x03BFF670 BL 0x1C16CF4
	0x03BFF674 ADRP X0, 0x4F6000
	0x03BFF678 LDR X0, [X0 + 0x278]
	0x03BFF67C BL 0x1C16CF4
	0x03BFF680 ADRP X0, 0x4F4000
	0x03BFF684 LDR X0, [X0 + 0x988]
	0x03BFF688 BL 0x1C16CF4
	0x03BFF68C MOVZ W8, 0x1
	0x03BFF690 STRB W8, [X19 + 0xCE8]
	0x03BFF694 LDR X8, [X21]
	0x03BFF698 ADRP X20, 0x4F4000
	0x03BFF69C LDR X8, [X8 + 0xB8]
	0x03BFF6A0 LDR X8, [X8 + 0x10]
	0x03BFF6A4 LDR X20, [X20 + 0x618]
	0x03BFF6A8 CBZ X8, 0x3BFF73C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X19, X8
	009 Move X8, [X21+40]
	010 Move X22, 0x7E5000
	011 Move W20, W0
	012 Move [X31+24], X8
	013 Move X8, [X22+3296]
	014 Move [X31], X31
	015 Move [X31+8], X31
	016 Move [X31+16], X31
	017 Compare X8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51380224
	020 Add X0, X0, 3285
	021 Call 0x1C17CB8
	022 Move X8, X0
	023 Move [X22+3296], X0
	024 Add X1, X31, 0
	025 Move W0, W20
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X31+16]
	028 Move V0, [X31]
	029 Move [X19+16], X8
	030 Move [X19], V0
	031 Move X8, [X21+40]
	032 Move X9, [X31+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+64]
	035 Move X19, [X31+72]
	036 Move X22, [X31+48]
	037 Move X21, [X31+56]
	038 Move X30, [X31+32]
	039 Add X31, X31, 80
	040 Return X0
	041 Call 0x3EB2B20

Method: System.IntPtr CreateMarker(System.String name, System.UInt16 categoryId, Unity.Profiling.LowLevel.MarkerFlags flags, System.Int32 metadataCount)

Disassembly:
	0x03BFF7FC MOV X8, X0
	0x03BFF800 STR X0, [X23 + 0xD30]
	0x03BFF804 MOV X0, X22
	0x03BFF808 MOV X1, X19
	0x03BFF80C MOV X2, X21
	0x03BFF810 BLR X8
	0x03BFF814 MOV X0, X20
	0x03BFF818 LDP X20, X19, [X31 + 0x20]
	0x03BFF81C LDP X22, X21, [X31 + 0x10]
	0x03BFF820 LDP X30, X23, [X31], #0x30
	0x03BFF824 RET
	0x03BFF828 BL 0x1C16F20
	0x03BFF82C STR X30, [X31 - 0x10]!
	0x03BFF830 STR W2, [X31 + 0xC]
	0x03BFF834 CBZ X0, 0x3BFF8B4
	0x03BFF838 LDR W8, [X0 + 0x18]
	0x03BFF83C CMP W8, W1
	0x03BFF840 B.LS 0x3BFF8B0
	0x03BFF844 ADD X8, X0, W1, SXTW
	0x03BFF848 STRB W2, [X8 + 0x20]
	0x03BFF84C LDR W9, [X0 + 0x18]
	0x03BFF850 ADD W8, W1, 0x1
	0x03BFF854 CMP W8, W9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7E5000
	008 Move X4, [X23+3240]
	009 Move W19, W3
	010 Move W20, W2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51380224
	016 Add X0, X0, 2976
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3240], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move W2, W20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.IntPtr CreateMarker__Unmanaged(System.Byte* name, System.Int32 nameLen, System.UInt16 categoryId, Unity.Profiling.LowLevel.MarkerFlags flags, System.Int32 metadataCount)

Disassembly:
	0x03C00494 LDR X25, [X25 + 0xAA8]
	0x03C00498 MOV W24, W31
	0x03C0049C CMP W24, W8
	0x03C004A0 B.CS 0x3C00558
	0x03C004A4 ADD X8, X21, W24, 0x3, SXTW
	0x03C004A8 LDR X22, [X8 + 0x20]
	0x03C004AC CBZ X22, 0x3C00554
	0x03C004B0 LDR X8, [X22]
	0x03C004B4 MOV X0, X22
	0x03C004B8 LDR X9, [X8 + 0x258]
	0x03C004BC LDR X1, [X8 + 0x260]
	0x03C004C0 BLR X9
	0x03C004C4 BL 0x3C00340
	0x03C004C8 TBNZ X0, 0x0, 0x3C0052C
	0x03C004CC LDR X8, [X22]
	0x03C004D0 MOV X0, X22
	0x03C004D4 LDR X9, [X8 + 0x258]
	0x03C004D8 LDR X1, [X8 + 0x260]
	0x03C004DC BLR X9
	0x03C004E0 LDR X8, [X22]
	0x03C004E4 MOV X23, X0
	0x03C004E8 MOV X0, X22
	0x03C004EC LDP X9, X1, [X8 + 0x1A8]
	0x03C004F0 BLR X9
	0x03C004F4 LDR X8, [X25]
	0x03C004F8 MOV X2, X0
	0x03C004FC MOV X1, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7E4000
	009 Move X5, [X24+3248]
	010 Move W19, W4
	011 Move W20, W3
	012 Move W21, W2
	013 Move W22, W1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51269632
	018 Add X0, X0, 2069
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+3248], X0
	022 Move X0, X23
	023 Move W1, W22
	024 Move W2, W21
	025 Move W3, W20
	026 Move W4, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void SetMarkerMetadata__Unmanaged(System.IntPtr markerPtr, System.Int32 index, System.Byte* name, System.Int32 nameLen, System.Byte type, System.Byte unit)

Disassembly:
	0x03C00500 MOV X3, X31
	0x03C00504 MOV X0, X8
	0x03C00508 BL 0x3227BD4
	0x03C0050C MOV X1, X0
	0x03C00510 MOV X0, X23
	0x03C00514 BL 0x3C003A0
	0x03C00518 MOV X1, X0
	0x03C0051C MOV X0, X20
	0x03C00520 MOV X2, X31
	0x03C00524 BL 0x321B938
	0x03C00528 MOV X20, X0
	0x03C0052C LDR W8, [X21 + 0x18]
	0x03C00530 ADD W24, W24, 0x1
	0x03C00534 CMP W24, W8
	0x03C00538 B.LT 0x3C0049C
	0x03C0053C MOV X0, X20
	0x03C00540 LDP X20, X19, [X31 + 0x30]
	0x03C00544 LDP X22, X21, [X31 + 0x20]
	0x03C00548 LDP X24, X23, [X31 + 0x10]
	0x03C0054C LDP X30, X25, [X31], #0x40
	0x03C00550 RET
	0x03C00554 BL 0x1C16F20
	0x03C00558 BL 0x1C16F28
	0x03C0055C STR X30, [X31 - 0x10]!
	0x03C00560 CBZ X0, 0x3C00588
	0x03C00564 MOV X1, X31
	0x03C00568 BL 0x33BE520
	0x03C0056C CBZ X0, 0x3C00588
	0x03C00570 LDR X8, [X0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7E4000
	010 Move X6, [X25+3256]
	011 Move W19, W5
	012 Move W20, W4
	013 Move W21, W3
	014 Move X22, X2
	015 Move W23, W1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51384320
	020 Add X0, X0, 3123
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+3256], X0
	024 Move X0, X24
	025 Move W1, W23
	026 Move X2, X22
	027 Move W3, W21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void BeginSample(System.IntPtr markerPtr)

Disassembly:
	0x03BFF970 MOV X21, X0
	0x03BFF974 CBNZ X3, 0x3BFF98C
	0x03BFF978 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03BFF97C ADD X0, X0, 0xC08
	0x03BFF980 BL 0x1C16CB8
	0x03BFF984 MOV X3, X0
	0x03BFF988 STR X0, [X22 + 0xD30]
	0x03BFF98C MOV X0, X21
	0x03BFF990 MOV X1, X20
	0x03BFF994 MOV X2, X19
	0x03BFF998 LDP X20, X19, [X31 + 0x20]
	0x03BFF99C LDP X22, X21, [X31 + 0x10]
	0x03BFF9A0 LDR X30, [X31], #0x30
	0x03BFF9A4 BR X3
	0x03BFF9A8 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E5000
	005 Move X1, [X20+3264]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51273728
	010 Add X0, X0, 1368
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3264], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void EndSample(System.IntPtr markerPtr)

Disassembly:
	0x03BFFA0C LDP X20, X19, [X31 + 0x20]
	0x03BFFA10 LDP X22, X21, [X31 + 0x10]
	0x03BFFA14 LDR X30, [X31], #0x30
	0x03BFFA18 BR X4
	0x03BFFA1C LDP X20, X19, [X31 + 0x20]
	0x03BFFA20 LDP X22, X21, [X31 + 0x10]
	0x03BFFA24 LDR X30, [X31], #0x30
	0x03BFFA28 RET
	0x03BFFA2C SUB X31, X31, 0x70
	0x03BFFA30 STP X30, X27, [X31 + 0x20]
	0x03BFFA34 STP X26, X25, [X31 + 0x30]
	0x03BFFA38 STP X24, X23, [X31 + 0x40]
	0x03BFFA3C STP X22, X21, [X31 + 0x50]
	0x03BFFA40 STP X20, X19, [X31 + 0x60]
	0x03BFFA44 ADRP X26, 0x7E4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E5000
	005 Move X1, [X20+3272]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51363840
	010 Add X0, X0, 3224
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3272], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void* CreateCounterValue__Unmanaged(out System.IntPtr counterPtr, System.Byte* name, System.Int32 nameLen, System.UInt16 categoryId, Unity.Profiling.LowLevel.MarkerFlags flags, System.Byte dataType, System.Byte dataUnit, System.Int32 dataSize, Unity.Profiling.ProfilerCounterOptions counterOptions)

Disassembly:
	0x03C00574 LDR X9, [X8 + 0x428]
	0x03C00578 LDR X1, [X8 + 0x430]
	0x03C0057C BLR X9
	0x03C00580 LDR X30, [X31], #0x10
	0x03C00584 B 0x3C00340
	0x03C00588 BL 0x1C16F20
	0x03C0058C STP X30, X19, [X31 - 0x10]!
	0x03C00590 CBZ X0, 0x3C005D4
	0x03C00594 MOV X1, X31
	0x03C00598 BL 0x33BE520
	0x03C0059C CBZ X0, 0x3C005D4
	0x03C005A0 LDR X8, [X0]
	0x03C005A4 LDR X9, [X8 + 0x428]
	0x03C005A8 LDR X1, [X8 + 0x430]
	0x03C005AC BLR X9
	0x03C005B0 CBZ X0, 0x3C005D4
	0x03C005B4 LDR X8, [X0]
	0x03C005B8 MOV X19, X0
	0x03C005BC LDP X9, X1, [X8 + 0x1A8]
	0x03C005C0 BLR X9
	0x03C005C4 MOV X1, X0
	0x03C005C8 MOV X0, X19
	0x03C005CC LDP X30, X19, [X31], #0x10
	0x03C005D0 B 0x3C003A0
	0x03C005D4 BL 0x1C16F20
	0x03C005D8 MOV X1, X31
	0x03C005DC B 0x33A51F0
	0x03C005E0 MOV X1, X31
	0x03C005E4 B 0x33A51F0
	0x03C005E8 STP X30, X21, [X31 - 0x20]!
	0x03C005EC STP X20, X19, [X31 + 0x10]
	0x03C005F0 ADRP X21, 0x7E3000
	0x03C005F4 LDR X2, [X21 + 0xD80]
	0x03C005F8 MOV X19, X1
	0x03C005FC MOV X20, X0
	0x03C00600 CBNZ X2, 0x3C00618
	0x03C00604 ADRP X0, 0xFFFFFFFFFCEFA000
	0x03C00608 ADD X0, X0, 0xDDF
	0x03C0060C BL 0x1C16CB8

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x7E4000
	013 Move X8, [X28+3280]
	014 NotImplemented "Instruction LDRH not yet implemented."
	015 Move W19, W7
	016 Move W20, W6
	017 Move W21, W5
	018 Move W22, W4
	019 Move W23, W3
	020 Move W24, W2
	021 Move X25, X1
	022 Move X26, X0
	023 Compare X8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51286016
	026 Add X0, X0, 478
	027 Call 0x1C17CB8
	028 Move X8, X0
	029 Move [X28+3280], X0
	030 NotImplemented "Instruction STRH not yet implemented."
	031 Move X0, X26
	032 Move X1, X25
	033 Move W2, W24
	034 Move W3, W23
	035 Move W4, W22
	036 Move W5, W21
	037 Move W6, W20
	038 Move W7, W19
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Move X22, [X31+64]
	042 Move X21, [X31+72]
	043 Move X24, [X31+48]
	044 Move X23, [X31+56]
	045 Move X26, [X31+32]
	046 Move X25, [X31+40]
	047 Move X28, [X31+16]
	048 Move X27, [X31+24]
	049 Move X30, [X31+96]
	050 CallNoReturn X8

Method: System.String Utf8ToString(System.Byte* chars, System.Int32 charsLen)

Disassembly:
	0x03BFF6AC ADRP X8, 0x55F000
	0x03BFF6B0 LDR X8, [X8 + 0xA98]
	0x03BFF6B4 LDR X0, [X8]
	0x03BFF6B8 BL 0x1C16F10
	0x03BFF6BC MOV X1, X31
	0x03BFF6C0 MOV X19, X0
	0x03BFF6C4 BL 0x33BDD8C
	0x03BFF6C8 CBZ X19, 0x3BFF828
	0x03BFF6CC ADRP X8, 0x4F6000
	0x03BFF6D0 LDR X8, [X8 + 0x278]
	0x03BFF6D4 LDR X8, [X8]
	0x03BFF6D8 LDR X8, [X8 + 0xB8]
	0x03BFF6DC LDR X8, [X8]
	0x03BFF6E0 STR X8, [X19 + 0x10]
	0x03BFF6E4 LDR X8, [X21]
	0x03BFF6E8 LDR X8, [X8 + 0xB8]
	0x03BFF6EC LDR X8, [X8 + 0x10]
	0x03BFF6F0 CBZ X8, 0x3BFF828
	0x03BFF6F4 LDR X9, [X8 + 0x18]
	0x03BFF6F8 LDR X0, [X8 + 0x40]
	0x03BFF6FC LDR X2, [X8 + 0x28]
	0x03BFF700 MOV X1, X19
	0x03BFF704 BLR X9
	0x03BFF708 LDR X8, [X19 + 0x10]
	0x03BFF70C CBNZ X8, 0x3BFF724
	0x03BFF710 ADRP X8, 0x4F4000
	0x03BFF714 LDR X8, [X8 + 0x988]
	0x03BFF718 LDR X8, [X8]
	0x03BFF71C STR X8, [X19 + 0x10]
	0x03BFF720 CBZ X8, 0x3BFF828
	0x03BFF724 LDR W8, [X8 + 0x10]
	0x03BFF728 LDR X9, [X19 + 0x18]
	0x03BFF72C UBFM W8, W8, 0x1F, 0x1E
	0x03BFF730 CBZ X9, 0x3BFF754
	0x03BFF734 LDR W21, [X9 + 0x18]
	0x03BFF738 B 0x3BFF758
	0x03BFF73C LDR X0, [X20]
	0x03BFF740 LDP X20, X19, [X31 + 0x20]
	0x03BFF744 LDP X22, X21, [X31 + 0x10]
	0x03BFF748 MOV W1, W31
	0x03BFF74C LDP X30, X23, [X31], #0x30
	0x03BFF750 B 0x1C16D6C
	0x03BFF754 MOV W21, W31
	0x03BFF758 LDR X0, [X20]
	0x03BFF75C ADD W8, W8, W21
	0x03BFF760 ADD W1, W8, 0xC
	0x03BFF764 BL 0x1C16D6C
	0x03BFF768 LDR X8, [X19 + 0x10]
	0x03BFF76C CBZ X8, 0x3BFF828
	0x03BFF770 LDR W2, [X8 + 0x10]
	0x03BFF774 MOV W1, W31
	0x03BFF778 MOV X20, X0
	0x03BFF77C BL 0x3BFF82C
	0x03BFF780 LDR X2, [X19 + 0x10]
	0x03BFF784 MOV W1, W0
	0x03BFF788 MOV X0, X20
	0x03BFF78C BL 0x3BFF8B8
	0x03BFF790 MOV W1, W0
	0x03BFF794 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7E5000
	007 Move W8, [X20+3288]
	008 Move W19, W1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4F5000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0x51D000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3288], W8
	022 Compare X21, 0
	023 JumpIfEqual {64}
	024 Move X8, 0x4F5000
	025 Move X8, [X8+1560]
	026 Move X22, 0x51D000
	027 Move W1, W19
	028 Move X0, [X8]
	029 Move X22, [X22+2128]
	030 Call 0x1C17D6C
	031 Move X20, X0
	032 Move X0, X21
	033 Move X1, X31
	034 Call IntPtr.op_Explicit, X0
	035 Move X8, [X22]
	036 Move X21, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X20
	044 Move W2, W31
	045 Move W3, W19
	046 Move X4, X31
	047 Call Marshal.Copy, X0, X1, X2, X3
	048 Move X0, X31
	049 Call Encoding.get_UTF8
	050 Compare X0, 0
	051 JumpIfEqual {71}
	052 Move X8, [X0]
	053 Move X1, X20
	054 Move W3, W19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X5, [X8+904]
	058 Move X4, [X8+912]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move W2, W31
	062 Move X30, [X31+48]
	063 CallNoReturn X5
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X0, X31
	069 Move X30, [X31+48]
	070 Return X0
	071 Call 0x1C17F20

Method: System.Void GetCategoryDescription_Injected(System.UInt16 categoryId, out Unity.Profiling.LowLevel.Unsafe.ProfilerCategoryDescription ret)

Disassembly:
	0x03C00450 LDP X30, X25, [X31], #0x40
	0x03C00454 B 0x3227BD4
	0x03C00458 ADRP X9, 0x4F3000
	0x03C0045C LDR X8, [X21]
	0x03C00460 LDR X9, [X9 + 0x988]
	0x03C00464 MOVZ W1, 0x34
	0x03C00468 MOV X0, X21
	0x03C0046C LDR X2, [X8 + 0x690]
	0x03C00470 LDR X20, [X9]
	0x03C00474 LDR X9, [X8 + 0x688]
	0x03C00478 BLR X9
	0x03C0047C CBZ X0, 0x3C00554
	0x03C00480 LDR W8, [X0 + 0x18]
	0x03C00484 MOV X21, X0
	0x03C00488 CMP W8, 0x1
	0x03C0048C B.LT 0x3C0053C
	0x03C00490 ADRP X25, 0x55E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E4000
	006 Move X2, [X21+3296]
	007 Move X19, X1
	008 Move W20, W0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51384320
	012 Add X0, X0, 3285
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3296], X0
	016 Move W0, W20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

