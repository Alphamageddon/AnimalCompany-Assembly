Type: UnityEngine.CubemapArray

Method: System.Boolean get_isReadable()

Disassembly:
	0x03C20634 MOV X0, X20
	0x03C20638 MOV W1, W19
	0x03C2063C LDP X20, X19, [X31 + 0x10]
	0x03C20640 LDP X30, X21, [X31], #0x20
	0x03C20644 BR X2
	0x03C20648 STR X30, [X31 - 0x20]!
	0x03C2064C STP X20, X19, [X31 + 0x10]
	0x03C20650 ADRP X20, 0x7C4000
	0x03C20654 LDR X1, [X20 + 0xE78]
	0x03C20658 MOV X19, X0
	0x03C2065C CBNZ X1, 0x3C20674
	0x03C20660 ADRP X0, 0xFFFFFFFFFCEF6000
	0x03C20664 ADD X0, X0, 0xA21
	0x03C20668 BL 0x1C16CB8
	0x03C2066C MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C5000
	005 Move X1, [X20+3512]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51376128
	010 Add X0, X0, 2575
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3512], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean Internal_CreateImpl(UnityEngine.CubemapArray mono, System.Int32 ext, System.Int32 count, System.Int32 mipCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.TextureColorSpace colorSpace, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C20670 STR X0, [X20 + 0xE78]
	0x03C20674 MOV X0, X19
	0x03C20678 LDP X20, X19, [X31 + 0x10]
	0x03C2067C LDR X30, [X31], #0x20
	0x03C20680 BR X1
	0x03C20684 STP X30, X21, [X31 - 0x20]!
	0x03C20688 STP X20, X19, [X31 + 0x10]
	0x03C2068C ADRP X21, 0x7C4000
	0x03C20690 LDR X2, [X21 + 0xE80]
	0x03C20694 MOV W19, W1
	0x03C20698 MOV X20, X0
	0x03C2069C CBNZ X2, 0x3C206B4
	0x03C206A0 ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C206A4 ADD X0, X0, 0x4C
	0x03C206A8 BL 0x1C16CB8
	0x03C206AC MOV X2, X0
	0x03C206B0 STR X0, [X21 + 0xE80]
	0x03C206B4 MOV X0, X20
	0x03C206B8 MOV W1, W19
	0x03C206BC LDP X20, X19, [X31 + 0x10]
	0x03C206C0 LDP X30, X21, [X31], #0x20
	0x03C206C4 BR X2
	0x03C206C8 STP X30, X21, [X31 - 0x20]!
	0x03C206CC STP X20, X19, [X31 + 0x10]
	0x03C206D0 ADRP X21, 0x7C4000
	0x03C206D4 LDR X2, [X21 + 0xE88]
	0x03C206D8 MOV W19, W1
	0x03C206DC MOV X20, X0
	0x03C206E0 CBNZ X2, 0x3C206F8
	0x03C206E4 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C206E8 ADD X0, X0, 0x3CC
	0x03C206EC BL 0x1C16CB8
	0x03C206F0 MOV X2, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7C5000
	011 Move X7, [X26+3520]
	012 Move W19, W6
	013 Move W20, W5
	014 Move W21, W4
	015 Move W22, W3
	016 Move W23, W2
	017 Move W24, W1
	018 Move X25, X0
	019 Compare X7, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51445760
	022 Add X0, X0, 642
	023 Call 0x1C17CB8
	024 Move X7, X0
	025 Move [X26+3520], X0
	026 Move X0, X25
	027 Move W1, W24
	028 Move W2, W23
	029 Move W3, W22
	030 Move W4, W21
	031 Move W5, W20
	032 Move W6, W19
	033 Move X20, [X31+64]
	034 Move X19, [X31+72]
	035 Move X22, [X31+48]
	036 Move X21, [X31+56]
	037 Move X24, [X31+32]
	038 Move X23, [X31+40]
	039 Move X26, [X31+16]
	040 Move X25, [X31+24]
	041 Move X30, [X31+80]
	042 CallNoReturn X7

Method: System.Void Internal_Create(UnityEngine.CubemapArray mono, System.Int32 ext, System.Int32 count, System.Int32 mipCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.TextureColorSpace colorSpace, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C206F4 STR X0, [X21 + 0xE88]
	0x03C206F8 AND W1, W19, 0x1
	0x03C206FC MOV X0, X20
	0x03C20700 LDP X20, X19, [X31 + 0x10]
	0x03C20704 LDP X30, X21, [X31], #0x20
	0x03C20708 BR X2
	0x03C2070C STP X30, X21, [X31 - 0x20]!
	0x03C20710 STP X20, X19, [X31 + 0x10]
	0x03C20714 ADRP X21, 0x7C4000
	0x03C20718 LDR X2, [X21 + 0xE90]
	0x03C2071C MOV W19, W1
	0x03C20720 MOV X20, X0
	0x03C20724 CBNZ X2, 0x3C2073C
	0x03C20728 ADRP X0, 0xFFFFFFFFFCECE000
	0x03C2072C ADD X0, X0, 0xF4E
	0x03C20730 BL 0x1C16CB8
	0x03C20734 MOV X2, X0
	0x03C20738 STR X0, [X21 + 0xE90]
	0x03C2073C AND W1, W19, 0x1
	0x03C20740 MOV X0, X20
	0x03C20744 LDP X20, X19, [X31 + 0x10]
	0x03C20748 LDP X30, X21, [X31], #0x20
	0x03C2074C BR X2
	0x03C20750 STR X30, [X31 - 0x20]!
	0x03C20754 STP X20, X19, [X31 + 0x10]
	0x03C20758 ADRP X20, 0x7C4000
	0x03C2075C LDR X1, [X20 + 0xE98]
	0x03C20760 MOV X19, X0
	0x03C20764 CBNZ X1, 0x3C2077C
	0x03C20768 ADRP X0, 0xFFFFFFFFFCED5000
	0x03C2076C ADD X0, X0, 0x319
	0x03C20770 BL 0x1C16CB8
	0x03C20774 MOV X1, X0
	0x03C20778 STR X0, [X20 + 0xE98]
	0x03C2077C MOV X0, X19
	0x03C20780 LDP X20, X19, [X31 + 0x10]
	0x03C20784 LDR X30, [X31], #0x20
	0x03C20788 BR X1
	0x03C2078C STP X30, X21, [X31 - 0x20]!
	0x03C20790 STP X20, X19, [X31 + 0x10]
	0x03C20794 ADRP X21, 0x7C4000
	0x03C20798 LDR X2, [X21 + 0xEA0]
	0x03C2079C MOV W19, W1
	0x03C207A0 MOV X20, X0
	0x03C207A4 CBNZ X2, 0x3C207BC
	0x03C207A8 ADRP X0, 0xFFFFFFFFFCEFA000
	0x03C207AC ADD X0, X0, 0xBAA
	0x03C207B0 BL 0x1C16CB8
	0x03C207B4 MOV X2, X0
	0x03C207B8 STR X0, [X21 + 0xEA0]
	0x03C207BC AND W1, W19, 0x1
	0x03C207C0 MOV X0, X20
	0x03C207C4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7C5000
	011 Move X8, [X26+3520]
	012 Move W19, W6
	013 Move W20, W5
	014 Move W21, W4
	015 Move W22, W3
	016 Move W23, W2
	017 Move W24, W1
	018 Move X25, X0
	019 Compare X8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51445760
	022 Add X0, X0, 642
	023 Call 0x1C17CB8
	024 Move X8, X0
	025 Move [X26+3520], X0
	026 Move X0, X25
	027 Move W1, W24
	028 Move W2, W23
	029 Move W3, W22
	030 Move W4, W21
	031 Move W5, W20
	032 Move W6, W19
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {48}
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X22, [X31+48]
	041 Move X21, [X31+56]
	042 Move X24, [X31+32]
	043 Move X23, [X31+40]
	044 Move X26, [X31+16]
	045 Move X25, [X31+24]
	046 Move X30, [X31+80]
	047 Return 
	048 Move X0, 0x4FD000
	049 Move X0, [X0+464]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0x540000
	054 Move X0, [X0+360]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call UnityException..ctor, X0, X1
	060 Move X0, 0x540000
	061 Move X0, [X0+368]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC

Method: System.Void ApplyImpl(System.Boolean updateMipmaps, System.Boolean makeNoLongerReadable)

Disassembly:
	0x03C207C8 LDP X30, X21, [X31], #0x20
	0x03C207CC BR X2
	0x03C207D0 STP X30, X19, [X31 - 0x10]!
	0x03C207D4 ADRP X19, 0x7C4000
	0x03C207D8 LDR X0, [X19 + 0xEA8]
	0x03C207DC CBNZ X0, 0x3C207F0
	0x03C207E0 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C207E4 ADD X0, X0, 0x905
	0x03C207E8 BL 0x1C16CB8
	0x03C207EC STR X0, [X19 + 0xEA8]
	0x03C207F0 LDP X30, X19, [X31], #0x10
	0x03C207F4 BR X0
	0x03C207F8 STR X30, [X31 - 0x20]!
	0x03C207FC STP X20, X19, [X31 + 0x10]
	0x03C20800 ADRP X20, 0x7C4000
	0x03C20804 LDR X1, [X20 + 0xEB0]
	0x03C20808 MOV X19, X0
	0x03C2080C CBNZ X1, 0x3C20824
	0x03C20810 ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C20814 ADD X0, X0, 0x497
	0x03C20818 BL 0x1C16CB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7C5000
	007 Move X3, [X22+3528]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51470336
	014 Add X0, X0, 424
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3528], X0
	018 And W1, W20, 1
	019 And W2, W19, 1
	020 Move X0, X21
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetPixels(UnityEngine.Color[] colors, UnityEngine.CubemapFace face, System.Int32 arrayElement, System.Int32 miplevel)

Disassembly:
	0x03C2081C MOV X1, X0
	0x03C20820 STR X0, [X20 + 0xEB0]
	0x03C20824 MOV X0, X19
	0x03C20828 LDP X20, X19, [X31 + 0x10]
	0x03C2082C LDR X30, [X31], #0x20
	0x03C20830 BR X1
	0x03C20834 STP X30, X19, [X31 - 0x10]!
	0x03C20838 ADRP X19, 0x7C4000
	0x03C2083C LDR X0, [X19 + 0xEA8]
	0x03C20840 CBNZ X0, 0x3C20854
	0x03C20844 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C20848 ADD X0, X0, 0x905
	0x03C2084C BL 0x1C16CB8
	0x03C20850 STR X0, [X19 + 0xEA8]
	0x03C20854 LDP X30, X19, [X31], #0x10
	0x03C20858 BR X0
	0x03C2085C STR X30, [X31 - 0x20]!
	0x03C20860 STP X20, X19, [X31 + 0x10]
	0x03C20864 ADRP X20, 0x7C4000
	0x03C20868 LDR X1, [X20 + 0xEB0]
	0x03C2086C MOV X19, X0
	0x03C20870 CBNZ X1, 0x3C20888
	0x03C20874 ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C20878 ADD X0, X0, 0x497
	0x03C2087C BL 0x1C16CB8
	0x03C20880 MOV X1, X0
	0x03C20884 STR X0, [X20 + 0xEB0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7C5000
	009 Move X5, [X24+3536]
	010 Move W19, W4
	011 Move W20, W3
	012 Move W21, W2
	013 Move X22, X1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51335168
	018 Add X0, X0, 1999
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+3536], X0
	022 Move X0, X23
	023 Move X1, X22
	024 Move W2, W21
	025 Move W3, W20
	026 Move W4, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void SetPixels(UnityEngine.Color[] colors, UnityEngine.CubemapFace face, System.Int32 arrayElement)

Disassembly:
	0x03C20888 MOV X0, X19
	0x03C2088C LDP X20, X19, [X31 + 0x10]
	0x03C20890 LDR X30, [X31], #0x20
	0x03C20894 BR X1
	0x03C20898 SUB X31, X31, 0x30
	0x03C2089C STP X31, X30, [X31 + 0x8]
	0x03C208A0 STP X20, X19, [X31 + 0x20]
	0x03C208A4 ADRP X20, 0x7C4000
	0x03C208A8 LDR X8, [X20 + 0xEF8]
	0x03C208AC MOV X19, X0
	0x03C208B0 STR X31, [X31]
	0x03C208B4 CBNZ X8, 0x3C208CC
	0x03C208B8 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C208BC ADD X0, X0, 0x102
	0x03C208C0 BL 0x1C16CB8
	0x03C208C4 MOV X8, X0
	0x03C208C8 STR X0, [X20 + 0xEF8]
	0x03C208CC ADD X1, X31, 0x0
	0x03C208D0 MOV X0, X19
	0x03C208D4 BLR X8
	0x03C208D8 LDP X0, X1, [X31]
	0x03C208DC LDP X20, X19, [X31 + 0x20]
	0x03C208E0 LDR X30, [X31 + 0x10]
	0x03C208E4 ADD X31, X31, 0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7C5000
	008 Move X5, [X23+3536]
	009 Move W19, W3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X5, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51335168
	016 Add X0, X0, 1999
	017 Call 0x1C17CB8
	018 Move X5, X0
	019 Move [X23+3536], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move W2, W20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move W4, W31
	029 Move X30, [X31+48]
	030 Move X23, [X31+56]
	031 CallNoReturn X5

Method: System.Void .ctor(System.Int32 width, System.Int32 cubemapCount, UnityEngine.Experimental.Rendering.DefaultFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C208E8 RET
	0x03C208EC STP X30, X21, [X31 - 0x20]!
	0x03C208F0 STP X20, X19, [X31 + 0x10]
	0x03C208F4 ADRP X21, 0x7C4000
	0x03C208F8 LDR X2, [X21 + 0xEF8]
	0x03C208FC MOV X19, X1
	0x03C20900 MOV X20, X0
	0x03C20904 CBNZ X2, 0x3C2091C
	0x03C20908 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C2090C ADD X0, X0, 0x102
	0x03C20910 BL 0x1C16CB8
	0x03C20914 MOV X2, X0
	0x03C20918 STR X0, [X21 + 0xEF8]
	0x03C2091C MOV X0, X20
	0x03C20920 MOV X1, X19
	0x03C20924 LDP X20, X19, [X31 + 0x10]
	0x03C20928 LDP X30, X21, [X31], #0x20
	0x03C2092C BR X2
	0x03C20930 SUB X31, X31, 0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W21, W1
	007 Move X22, X0
	008 Move W0, W3
	009 Move X1, X31
	010 Move W19, W4
	011 Move W20, W2
	012 Call SystemInfo.GetGraphicsFormat, X0
	013 Move W3, W0
	014 Move X0, X22
	015 Move W1, W21
	016 Move W2, W20
	017 Move W4, W19
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move X30, [X31+48]

Method: System.Void .ctor(System.Int32 width, System.Int32 cubemapCount, UnityEngine.Experimental.Rendering.DefaultFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.Int32 mipCount)

Disassembly:
	0x03C209C4 BR X2
	0x03C209C8 STP X30, X21, [X31 - 0x20]!
	0x03C209CC STP X20, X19, [X31 + 0x10]
	0x03C209D0 ADRP X21, 0x7C4000
	0x03C209D4 LDR X2, [X21 + 0xEB8]
	0x03C209D8 MOV W19, W1
	0x03C209DC MOV X20, X0
	0x03C209E0 CBNZ X2, 0x3C209F8
	0x03C209E4 ADRP X0, 0xFFFFFFFFFCEF2000
	0x03C209E8 ADD X0, X0, 0xB70
	0x03C209EC BL 0x1C16CB8
	0x03C209F0 MOV X2, X0
	0x03C209F4 STR X0, [X21 + 0xEB8]
	0x03C209F8 MOV X0, X20
	0x03C209FC MOV W1, W19
	0x03C20A00 LDP X20, X19, [X31 + 0x10]
	0x03C20A04 LDP X30, X21, [X31], #0x20
	0x03C20A08 BR X2
	0x03C20A0C B 0x3C20898
	0x03C20A10 B 0x3C20930
	0x03C20A14 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W22, W1
	008 Move X23, X0
	009 Move W0, W3
	010 Move X1, X31
	011 Move W19, W5
	012 Move W20, W4
	013 Move W21, W2
	014 Call SystemInfo.GetGraphicsFormat, X0
	015 Move W1, W22
	016 Move W2, W21
	017 Move W4, W20
	018 Move W5, W19
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move W3, W0
	024 Move X0, X23
	025 Move X30, [X31+48]
	026 Move X23, [X31+56]

Method: System.Void .ctor(System.Int32 width, System.Int32 cubemapCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C20934 STP X31, X30, [X31 + 0x8]
	0x03C20938 STP X20, X19, [X31 + 0x20]
	0x03C2093C ADRP X20, 0x7C4000
	0x03C20940 LDR X8, [X20 + 0xF00]
	0x03C20944 MOV X19, X0
	0x03C20948 STR X31, [X31]
	0x03C2094C CBNZ X8, 0x3C20964
	0x03C20950 ADRP X0, 0xFFFFFFFFFCEFA000
	0x03C20954 ADD X0, X0, 0xBE9
	0x03C20958 BL 0x1C16CB8
	0x03C2095C MOV X8, X0
	0x03C20960 STR X0, [X20 + 0xF00]
	0x03C20964 ADD X1, X31, 0x0
	0x03C20968 MOV X0, X19
	0x03C2096C BLR X8
	0x03C20970 LDP X0, X1, [X31]
	0x03C20974 LDP X20, X19, [X31 + 0x20]
	0x03C20978 LDR X30, [X31 + 0x10]
	0x03C2097C ADD X31, X31, 0x30
	0x03C20980 RET
	0x03C20984 STP X30, X21, [X31 - 0x20]!
	0x03C20988 STP X20, X19, [X31 + 0x10]
	0x03C2098C ADRP X21, 0x7C4000
	0x03C20990 LDR X2, [X21 + 0xF00]
	0x03C20994 MOV X19, X1
	0x03C20998 MOV X20, X0
	0x03C2099C CBNZ X2, 0x3C209B4
	0x03C209A0 ADRP X0, 0xFFFFFFFFFCEFA000
	0x03C209A4 ADD X0, X0, 0xBE9
	0x03C209A8 BL 0x1C16CB8
	0x03C209AC MOV X2, X0
	0x03C209B0 STR X0, [X21 + 0xF00]
	0x03C209B4 MOV X0, X20
	0x03C209B8 MOV X1, X19
	0x03C209BC LDP X20, X19, [X31 + 0x10]
	0x03C209C0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C5000
	010 Move X24, 0x540000
	011 Move W8, [X25+3544]
	012 Move X24, [X24+72]
	013 Move W19, W4
	014 Move W20, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x540000
	023 Move X0, [X0+72]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3544], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X24]
	033 Move X8, [X0+184]
	034 Move X0, X23
	035 Move W1, W22
	036 Move W2, W21
	037 Move W5, [X8]
	038 Move W3, W20
	039 Move W4, W19
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X30, [X31+64]
	047 Move X25, [X31+72]
	048 Call CubemapArray..ctor, X0, X1, X2, X3, X4, X5
	049 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 cubemapCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.Int32 mipCount)

Disassembly:
	0x03C20A18 STP X20, X19, [X31 + 0x10]
	0x03C20A1C ADRP X20, 0x7C4000
	0x03C20A20 LDR X1, [X20 + 0xEC0]
	0x03C20A24 MOV X19, X0
	0x03C20A28 CBNZ X1, 0x3C20A40
	0x03C20A2C ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C20A30 ADD X0, X0, 0x4D7
	0x03C20A34 BL 0x1C16CB8
	0x03C20A38 MOV X1, X0
	0x03C20A3C STR X0, [X20 + 0xEC0]
	0x03C20A40 MOV X0, X19
	0x03C20A44 LDP X20, X19, [X31 + 0x10]
	0x03C20A48 LDR X30, [X31], #0x20
	0x03C20A4C BR X1
	0x03C20A50 STR X30, [X31 - 0x20]!
	0x03C20A54 STP X20, X19, [X31 + 0x10]
	0x03C20A58 ADRP X20, 0x7C4000
	0x03C20A5C LDR X1, [X20 + 0xEC8]
	0x03C20A60 MOV X19, X0
	0x03C20A64 CBNZ X1, 0x3C20A7C
	0x03C20A68 ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C20A6C ADD X0, X0, 0x216
	0x03C20A70 BL 0x1C16CB8
	0x03C20A74 MOV X1, X0
	0x03C20A78 STR X0, [X20 + 0xEC8]
	0x03C20A7C MOV X0, X19
	0x03C20A80 LDP X20, X19, [X31 + 0x10]
	0x03C20A84 LDR X30, [X31], #0x20
	0x03C20A88 BR X1
	0x03C20A8C STP X30, X21, [X31 - 0x20]!
	0x03C20A90 STP X20, X19, [X31 + 0x10]
	0x03C20A94 ADRP X21, 0x7C4000
	0x03C20A98 LDR X2, [X21 + 0xED0]
	0x03C20A9C MOV W19, W1
	0x03C20AA0 MOV X20, X0
	0x03C20AA4 CBNZ X2, 0x3C20ABC
	0x03C20AA8 ADRP X0, 0xFFFFFFFFFCEF2000
	0x03C20AAC ADD X0, X0, 0xBA8
	0x03C20AB0 BL 0x1C16CB8
	0x03C20AB4 MOV X2, X0
	0x03C20AB8 STR X0, [X21 + 0xED0]
	0x03C20ABC AND W1, W19, 0x1
	0x03C20AC0 MOV X0, X20
	0x03C20AC4 LDP X20, X19, [X31 + 0x10]
	0x03C20AC8 LDP X30, X21, [X31], #0x20
	0x03C20ACC BR X2
	0x03C20AD0 STR X30, [X31 - 0x20]!
	0x03C20AD4 STP X20, X19, [X31 + 0x10]
	0x03C20AD8 ADRP X20, 0x7C4000
	0x03C20ADC LDR X1, [X20 + 0xED8]
	0x03C20AE0 MOV X19, X0
	0x03C20AE4 CBNZ X1, 0x3C20AFC
	0x03C20AE8 ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C20AEC ADD X0, X0, 0x168
	0x03C20AF0 BL 0x1C16CB8
	0x03C20AF4 MOV X1, X0
	0x03C20AF8 STR X0, [X20 + 0xED8]
	0x03C20AFC MOV X0, X19
	0x03C20B00 LDP X20, X19, [X31 + 0x10]
	0x03C20B04 LDR X30, [X31], #0x20
	0x03C20B08 BR X1
	0x03C20B0C STP X30, X21, [X31 - 0x20]!
	0x03C20B10 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7C5000
	011 Move X25, 0x540000
	012 Move W8, [X26+3545]
	013 Move X25, [X25+72]
	014 Move W20, W5
	015 Move W19, W4
	016 Move W21, W3
	017 Move W22, W2
	018 Move W23, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x540000
	025 Move X0, [X0+72]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+3545], W8
	029 Move X0, [X25]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X24
	035 Move X1, X31
	036 Call Texture..ctor, X0
	037 Move X0, X24
	038 Move W1, W21
	039 Move W2, W31
	040 Move X3, X31
	041 Call Texture.ValidateFormat, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {75}
	046 Move W0, W19
	047 Call CubemapArray.ValidateIsNotCrunched, X0
	048 Move X0, [X25]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X24
	054 Move W1, W21
	055 Move X2, X31
	056 Call Texture.GetTextureColorSpace, X0, X1
	057 Move W5, W0
	058 Move X0, X24
	059 Move W1, W23
	060 Move W2, W22
	061 Move W3, W20
	062 Move W4, W21
	063 Move W6, W19
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X22, [X31+48]
	067 Move X21, [X31+56]
	068 Move X24, [X31+32]
	069 Move X23, [X31+40]
	070 Move X26, [X31+16]
	071 Move X25, [X31+24]
	072 Move X30, [X31+80]
	073 Call CubemapArray.Internal_Create, X0, X1, X2, X3, X4, X5, X6
	074 Return 
	075 Move X20, [X31+64]
	076 Move X19, [X31+72]
	077 Move X22, [X31+48]
	078 Move X21, [X31+56]
	079 Move X24, [X31+32]
	080 Move X23, [X31+40]
	081 Move X26, [X31+16]
	082 Move X25, [X31+24]
	083 Move X30, [X31+80]
	084 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 cubemapCount, UnityEngine.TextureFormat textureFormat, System.Int32 mipCount, System.Boolean linear, System.Boolean createUninitialized)

Disassembly:
	0x03C20B68 CBNZ X2, 0x3C20B80
	0x03C20B6C ADRP X0, 0xFFFFFFFFFCEE2000
	0x03C20B70 ADD X0, X0, 0xFFE
	0x03C20B74 BL 0x1C16CB8
	0x03C20B78 MOV X2, X0
	0x03C20B7C STR X0, [X21 + 0xF08]
	0x03C20B80 MOV X0, X20
	0x03C20B84 MOV X1, X19
	0x03C20B88 LDP X20, X19, [X31 + 0x10]
	0x03C20B8C LDP X30, X21, [X31], #0x20
	0x03C20B90 BR X2
	0x03C20B94 STP X30, X21, [X31 - 0x20]!
	0x03C20B98 STP X20, X19, [X31 + 0x10]
	0x03C20B9C ADRP X21, 0x7C4000
	0x03C20BA0 LDR X2, [X21 + 0xF10]
	0x03C20BA4 MOV X19, X1
	0x03C20BA8 MOV X20, X0
	0x03C20BAC CBNZ X2, 0x3C20BC4
	0x03C20BB0 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C20BB4 ADD X0, X0, 0x409
	0x03C20BB8 BL 0x1C16CB8
	0x03C20BBC MOV X2, X0
	0x03C20BC0 STR X0, [X21 + 0xF10]
	0x03C20BC4 MOV X0, X20
	0x03C20BC8 MOV X1, X19
	0x03C20BCC LDP X20, X19, [X31 + 0x10]
	0x03C20BD0 LDP X30, X21, [X31], #0x20
	0x03C20BD4 BR X2
	0x03C20BD8 STR X30, [X31 - 0x20]!
	0x03C20BDC STP X20, X19, [X31 + 0x10]
	0x03C20BE0 ADRP X20, 0x7C4000
	0x03C20BE4 LDR X1, [X20 + 0xF18]
	0x03C20BE8 MOV X19, X0
	0x03C20BEC CBNZ X1, 0x3C20C04
	0x03C20BF0 ADRP X0, 0xFFFFFFFFFCEF2000
	0x03C20BF4 ADD X0, X0, 0xBE4
	0x03C20BF8 BL 0x1C16CB8
	0x03C20BFC MOV X1, X0
	0x03C20C00 STR X0, [X20 + 0xF18]
	0x03C20C04 MOV X0, X19
	0x03C20C08 LDP X20, X19, [X31 + 0x10]
	0x03C20C0C LDR X30, [X31], #0x20
	0x03C20C10 BR X1
	0x03C20C14 STR X30, [X31 - 0x20]!
	0x03C20C18 STP X20, X19, [X31 + 0x10]
	0x03C20C1C ADRP X20, 0x7C4000
	0x03C20C20 LDR X1, [X20 + 0xF18]
	0x03C20C24 MOV X19, X0
	0x03C20C28 CBNZ X1, 0x3C20C40
	0x03C20C2C ADRP X0, 0xFFFFFFFFFCEF2000
	0x03C20C30 ADD X0, X0, 0xBE4
	0x03C20C34 BL 0x1C16CB8
	0x03C20C38 MOV X1, X0
	0x03C20C3C STR X0, [X20 + 0xF18]
	0x03C20C40 MOV X0, X19
	0x03C20C44 LDP X20, X19, [X31 + 0x10]
	0x03C20C48 LDR X30, [X31], #0x20
	0x03C20C4C BR X1
	0x03C20C50 STR X30, [X31 - 0x20]!
	0x03C20C54 STP X20, X19, [X31 + 0x10]
	0x03C20C58 ADRP X20, 0x7C4000
	0x03C20C5C LDR X1, [X20 + 0xEE0]
	0x03C20C60 MOV X19, X0
	0x03C20C64 CBNZ X1, 0x3C20C7C
	0x03C20C68 ADRP X0, 0xFFFFFFFFFCF04000
	0x03C20C6C ADD X0, X0, 0xCAC
	0x03C20C70 BL 0x1C16CB8
	0x03C20C74 MOV X1, X0
	0x03C20C78 STR X0, [X20 + 0xEE0]
	0x03C20C7C MOV X0, X19
	0x03C20C80 LDP X20, X19, [X31 + 0x10]
	0x03C20C84 LDR X30, [X31], #0x20
	0x03C20C88 BR X1
	0x03C20C8C STP X30, X21, [X31 - 0x20]!
	0x03C20C90 STP X20, X19, [X31 + 0x10]
	0x03C20C94 ADRP X20, 0x7C4000
	0x03C20C98 ADRP X21, 0x53F000
	0x03C20C9C LDRB W8, [X20 + 0xEE8]
	0x03C20CA0 LDR X21, [X21 + 0x48]
	0x03C20CA4 MOV X19, X0
	0x03C20CA8 TBNZ X8, 0x0, 0x3C20CC0
	0x03C20CAC ADRP X0, 0x53F000
	0x03C20CB0 LDR X0, [X0 + 0x48]
	0x03C20CB4 BL 0x1C16CF4
	0x03C20CB8 MOVZ W8, 0x1
	0x03C20CBC STRB W8, [X20 + 0xEE8]
	0x03C20CC0 LDR X0, [X21]
	0x03C20CC4 LDR W8, [X0 + 0xE0]
	0x03C20CC8 CBNZ W8, 0x3C20CD0
	0x03C20CCC BL 0x1C16DFC
	0x03C20CD0 MOV X0, X19
	0x03C20CD4 LDP X20, X19, [X31 + 0x10]
	0x03C20CD8 MOV X1, X31
	0x03C20CDC LDP X30, X21, [X31], #0x20
	0x03C20CE0 B 0x3C1A69C
	0x03C20CE4 SUB X31, X31, 0xB0
	0x03C20CE8 STR X30, [X31 + 0x80]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0x7C5000
	013 Move X27, 0x540000
	014 Move W8, [X26+3546]
	015 Move X27, [X27+72]
	016 Move W24, W6
	017 Move W23, W5
	018 Move W19, W4
	019 Move W25, W3
	020 Move W20, W2
	021 Move W21, W1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x534000
	028 Move X0, [X0+144]
	029 Call 0x1C17CF4
	030 Move X0, 0x540000
	031 Move X0, [X0+72]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X26+3546], W8
	035 Move X0, [X27]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X22
	041 Move X1, X31
	042 Call Texture..ctor, X0
	043 Move X0, X22
	044 Move W1, W25
	045 Move X2, X31
	046 Call Texture.ValidateFormat, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {112}
	051 Move X28, 0x534000
	052 Move X28, [X28+144]
	053 Move X0, [X28]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 NotImplemented "Instruction ORN not yet implemented."
	059 And W1, W8, 1
	060 Move W0, W25
	061 Move X2, X31
	062 Call GraphicsFormatUtility.GetGraphicsFormat, X0, X1
	063 Move W26, W0
	064 Move X0, [X28]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CSET not yet implemented."
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move W0, W25
	072 Move X1, X31
	073 Call GraphicsFormatUtility.IsCrunchFormat, X0
	074 Or W8, W28, 64
	075 And W31, W0, 1
	076 Move W9, 1028
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Or W9, W8, W9
	079 And W31, W24, 1
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Move W0, W24
	082 Call CubemapArray.ValidateIsNotCrunched, X0
	083 Move X0, [X27]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 And W1, W23, 1
	089 Move X0, X22
	090 Move X2, X31
	091 Call Texture.GetTextureColorSpace, X0, X1
	092 Move W5, W0
	093 Move X0, X22
	094 Move W1, W21
	095 Move W2, W20
	096 Move W3, W19
	097 Move W4, W26
	098 Move W6, W24
	099 Move X20, [X31+80]
	100 Move X19, [X31+88]
	101 Move X22, [X31+64]
	102 Move X21, [X31+72]
	103 Move X24, [X31+48]
	104 Move X23, [X31+56]
	105 Move X26, [X31+32]
	106 Move X25, [X31+40]
	107 Move X28, [X31+16]
	108 Move X27, [X31+24]
	109 Move X30, [X31+96]
	110 Call CubemapArray.Internal_Create, X0, X1, X2, X3, X4, X5, X6
	111 Return 
	112 Move X20, [X31+80]
	113 Move X19, [X31+88]
	114 Move X22, [X31+64]
	115 Move X21, [X31+72]
	116 Move X24, [X31+48]
	117 Move X23, [X31+56]
	118 Move X26, [X31+32]
	119 Move X25, [X31+40]
	120 Move X28, [X31+16]
	121 Move X27, [X31+24]
	122 Move X30, [X31+96]
	123 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 cubemapCount, UnityEngine.TextureFormat textureFormat, System.Int32 mipCount, System.Boolean linear)

Disassembly:
	0x03C20CEC STP X22, X21, [X31 + 0x90]
	0x03C20CF0 STP X20, X19, [X31 + 0xA0]
	0x03C20CF4 ADRP X21, 0x7C4000

ISIL:
	001 And W5, W5, 1
	002 Move W6, W31
	003 Call CubemapArray..ctor, X0, X1, X2, X3, X4, X5, X6
	004 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 cubemapCount, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain, System.Boolean linear, System.Boolean createUninitialized)

Disassembly:
	0x03C20CF8 ADRP X22, 0x53F000
	0x03C20CFC LDRB W8, [X21 + 0xEE9]
	0x03C20D00 LDR X22, [X22 + 0x48]
	0x03C20D04 MOV X20, X1
	0x03C20D08 MOV X19, X0
	0x03C20D0C TBNZ X8, 0x0, 0x3C20D24
	0x03C20D10 ADRP X0, 0x53F000
	0x03C20D14 LDR X0, [X0 + 0x48]
	0x03C20D18 BL 0x1C16CF4
	0x03C20D1C MOVZ W8, 0x1
	0x03C20D20 STRB W8, [X21 + 0xEE9]
	0x03C20D24 LDR X0, [X22]
	0x03C20D28 LDR W8, [X0 + 0xE0]
	0x03C20D2C CBNZ W8, 0x3C20D34
	0x03C20D30 BL 0x1C16DFC
	0x03C20D34 MOV X0, X19
	0x03C20D38 MOV X1, X31
	0x03C20D3C BL 0x3C1A69C
	0x03C20D40 LDR W8, [X20 + 0x30]
	0x03C20D44 LDP V1, V0, [X20 + 0x10]
	0x03C20D48 LDR V2, [X20]
	0x03C20D4C ADD X0, X31, 0x40
	0x03C20D50 STR W8, [X31 + 0x70]
	0x03C20D54 STP V1, V0, [X31 + 0x50]
	0x03C20D58 STR V2, [X31 + 0x4]
	0x03C20D5C BL 0x3C20DE0
	0x03C20D60 ADRP X21, 0x7C4000
	0x03C20D64 LDR X8, [X21 + 0xED8]
	0x03C20D68 CBNZ X8, 0x3C20D80
	0x03C20D6C ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C20D70 ADD X0, X0, 0x168
	0x03C20D74 BL 0x1C16CB8
	0x03C20D78 MOV X8, X0
	0x03C20D7C STR X0, [X21 + 0xED8]
	0x03C20D80 MOV X0, X19
	0x03C20D84 BLR X8
	0x03C20D88 LDP V0, V1, [X20]
	0x03C20D8C LDR W9, [X20 + 0x30]
	0x03C20D90 LDR V2, [X20 + 0x2]
	0x03C20D94 ADRP X20, 0x7C4000
	0x03C20D98 LDR X8, [X20 + 0xF08]
	0x03C20D9C STR W9, [X31 + 0x30]
	0x03C20DA0 STP V1, V2, [X31 + 0x10]
	0x03C20DA4 STR V0, [X31]
	0x03C20DA8 CBNZ X8, 0x3C20DC0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7C5000
	011 Move W8, [X26+3547]
	012 Move W20, W6
	013 Move W22, W5
	014 Move W25, W4
	015 Move W19, W3
	016 Move W21, W2
	017 Move W23, W1
	018 Move X24, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {37}
	023 Move TEMP, X25
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {46}
	027 Move X25, 0x540000
	028 Move X25, [X25+72]
	029 Move X0, [X25]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X25]
	035 Move X8, [X0+184]
	036 Move W4, [X8]
	037 Move X0, 0x540000
	038 Move X0, [X0+72]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X26+3547], W8
	042 Move TEMP, X25
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {27}
	046 Move W4, 1
	047 And W5, W22, 1
	048 And W6, W20, 1
	049 Move X0, X24
	050 Move W1, W23
	051 Move W2, W21
	052 Move W3, W19
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Move X22, [X31+48]
	056 Move X21, [X31+56]
	057 Move X24, [X31+32]
	058 Move X23, [X31+40]
	059 Move X26, [X31+16]
	060 Move X25, [X31+24]
	061 Move X30, [X31+80]
	062 Call CubemapArray..ctor, X0, X1, X2, X3, X4, X5, X6
	063 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 cubemapCount, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain, System.Boolean linear)

Disassembly:
	0x03C20DAC ADRP X0, 0xFFFFFFFFFCEE2000
	0x03C20DB0 ADD X0, X0, 0xFFE
	0x03C20DB4 BL 0x1C16CB8
	0x03C20DB8 MOV X8, X0
	0x03C20DBC STR X0, [X20 + 0xF08]
	0x03C20DC0 ADD X1, X31, 0x0
	0x03C20DC4 MOV X0, X19
	0x03C20DC8 BLR X8
	0x03C20DCC LDP X20, X19, [X31 + 0xA0]
	0x03C20DD0 LDP X22, X21, [X31 + 0x90]
	0x03C20DD4 LDR X30, [X31 + 0x80]
	0x03C20DD8 ADD X31, X31, 0xB0
	0x03C20DDC RET
	0x03C20DE0 SUB X31, X31, 0x40
	0x03C20DE4 STP X30, X21, [X31 + 0x20]
	0x03C20DE8 STP X20, X19, [X31 + 0x30]
	0x03C20DEC ADRP X20, 0x7C4000
	0x03C20DF0 LDRB W8, [X20 + 0xEF6]
	0x03C20DF4 MOV X19, X0
	0x03C20DF8 TBNZ X8, 0x0, 0x3C20E10
	0x03C20DFC ADRP X0, 0x533000
	0x03C20E00 LDR X0, [X0 + 0x90]
	0x03C20E04 BL 0x1C16CF4
	0x03C20E08 MOVZ W8, 0x1
	0x03C20E0C STRB W8, [X20 + 0xEF6]
	0x03C20E10 ADRP X21, 0x533000
	0x03C20E14 LDR W0, [X19 + 0x14]
	0x03C20E18 LDR X21, [X21 + 0x90]
	0x03C20E1C CBZ W0, 0x3C20E3C
	0x03C20E20 MOVZ W1, 0x4
	0x03C20E24 MOV X2, X31
	0x03C20E28 BL 0x3C3C4BC
	0x03C20E2C TBZ X0, 0x0, 0x3C21070
	0x03C20E30 LDR W20, [X19 + 0x1C]
	0x03C20E34 CBNZ W20, 0x3C20E44
	0x03C20E38 B 0x3C20E64
	0x03C20E3C LDR W20, [X19 + 0x1C]
	0x03C20E40 CBZ W20, 0x3C21164
	0x03C20E44 LDR X0, [X21]
	0x03C20E48 LDR W8, [X0 + 0xE0]
	0x03C20E4C CBNZ W8, 0x3C20E54
	0x03C20E50 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C5000
	010 Move W8, [X25+3548]
	011 Move W21, W5
	012 Move W24, W4
	013 Move W19, W3
	014 Move W20, W2
	015 Move W22, W1
	016 Move X23, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {35}
	021 Move TEMP, X24
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {44}
	025 Move X24, 0x540000
	026 Move X24, [X24+72]
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X24]
	033 Move X8, [X0+184]
	034 Move W4, [X8]
	035 Move X0, 0x540000
	036 Move X0, [X0+72]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X25+3548], W8
	040 Move TEMP, X24
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {25}
	044 Move W4, 1
	045 And W5, W21, 1
	046 Move X0, X23
	047 Move W1, W22
	048 Move W2, W20
	049 Move W3, W19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move W6, W31
	057 Move X30, [X31+64]
	058 Move X25, [X31+72]
	059 Call CubemapArray..ctor, X0, X1, X2, X3, X4, X5, X6
	060 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 cubemapCount, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain)

Disassembly:
	0x03C20E54 MOV W0, W20
	0x03C20E58 MOV X1, X31
	0x03C20E5C BL 0x3C61C74
	0x03C20E60 TBZ X0, 0x0, 0x3C20FF0
	0x03C20E64 LDR W8, [X19]
	0x03C20E68 CMP W8, 0x0
	0x03C20E6C B.LE 0x3C20F14
	0x03C20E70 LDR W8, [X19 + 0x4]
	0x03C20E74 CMP W8, 0x0
	0x03C20E78 B.LE 0x3C20F44
	0x03C20E7C LDR W8, [X19 + 0xC]
	0x03C20E80 CMP W8, 0x0
	0x03C20E84 B.LE 0x3C20F74
	0x03C20E88 LDR W9, [X19 + 0x8]
	0x03C20E8C CMP W9, 0x8
	0x03C20E90 B.HI 0x3C21198
	0x03C20E94 MOVZ W10, 0x1
	0x03C20E98 LSLV W9, W10, W9
	0x03C20E9C MOVZ W10, 0x116
	0x03C20EA0 ANDS W31, W9, W10, 0x0
	0x03C20EA4 B.EQ 0x3C21198
	0x03C20EA8 MOVZ W9, 0xAAAB
	0x03C20EAC MOVK W9, 0xAAAA0000
	0x03C20EB0 MUL W8, W8, W9
	0x03C20EB4 MOVZ W9, 0xAAAB
	0x03C20EB8 EXTR W8, W8, W8, 0x1
	0x03C20EBC MOVK W9, 0x2AAA0000
	0x03C20EC0 CMP W8, W9
	0x03C20EC4 B.CC 0x3C20ED4
	0x03C20EC8 LDR W8, [X19 + 0x20]
	0x03C20ECC CMP W8, 0x6
	0x03C20ED0 B.EQ 0x3C20F94
	0x03C20ED4 LDR W20, [X19 + 0x14]
	0x03C20ED8 AND W8, W20, 0xFFFFFFFE
	0x03C20EDC CMP W8, 0x8E
	0x03C20EE0 B.EQ 0x3C20F04
	0x03C20EE4 LDR X0, [X21]
	0x03C20EE8 LDR W8, [X0 + 0xE0]
	0x03C20EEC CBNZ W8, 0x3C20EF4
	0x03C20EF0 BL 0x1C16DFC
	0x03C20EF4 MOV W0, W20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7C5000
	009 Move W8, [X24+3549]
	010 Move W23, W4
	011 Move W19, W3
	012 Move W20, W2
	013 Move W21, W1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {33}
	019 Move TEMP, X23
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {42}
	023 Move X23, 0x540000
	024 Move X23, [X23+72]
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X23]
	031 Move X8, [X0+184]
	032 Move W4, [X8]
	033 Move X0, 0x540000
	034 Move X0, [X0+72]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+3549], W8
	038 Move TEMP, X23
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {23}
	042 Move W4, 1
	043 Move X0, X22
	044 Move W1, W21
	045 Move W2, W20
	046 Move W3, W19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move W5, W31
	054 Move W6, W31
	055 Move X30, [X31+64]
	056 Call CubemapArray..ctor, X0, X1, X2, X3, X4, X5, X6
	057 Return 

Method: System.Void Apply(System.Boolean updateMipmaps, System.Boolean makeNoLongerReadable)

Disassembly:
	0x03C20EF8 MOV X1, X31
	0x03C20EFC BL 0x3C61C74
	0x03C20F00 TBNZ X0, 0x0, 0x3C210B8
	0x03C20F04 LDP X20, X19, [X31 + 0x30]
	0x03C20F08 LDP X30, X21, [X31 + 0x20]
	0x03C20F0C ADD X31, X31, 0x40
	0x03C20F10 RET
	0x03C20F14 ADRP X0, 0x4DB000
	0x03C20F18 LDR X0, [X0 + 0x578]
	0x03C20F1C BL 0x1C16D08
	0x03C20F20 BL 0x1C16F10
	0x03C20F24 MOV X19, X0
	0x03C20F28 ADRP X0, 0x53F000
	0x03C20F2C LDR X0, [X0 + 0x190]
	0x03C20F30 BL 0x1C16D08
	0x03C20F34 MOV X20, X0
	0x03C20F38 ADRP X0, 0x53F000
	0x03C20F3C LDR X0, [X0 + 0x198]
	0x03C20F40 B 0x3C20FC0
	0x03C20F44 ADRP X0, 0x4DB000
	0x03C20F48 LDR X0, [X0 + 0x578]
	0x03C20F4C BL 0x1C16D08
	0x03C20F50 BL 0x1C16F10
	0x03C20F54 MOV X19, X0
	0x03C20F58 ADRP X0, 0x53F000
	0x03C20F5C LDR X0, [X0 + 0x1A0]
	0x03C20F60 BL 0x1C16D08
	0x03C20F64 MOV X20, X0
	0x03C20F68 ADRP X0, 0x53F000
	0x03C20F6C LDR X0, [X0 + 0x1A8]
	0x03C20F70 B 0x3C20FC0
	0x03C20F74 ADRP X0, 0x4DB000
	0x03C20F78 LDR X0, [X0 + 0x578]
	0x03C20F7C BL 0x1C16D08
	0x03C20F80 BL 0x1C16F10
	0x03C20F84 MOV X19, X0
	0x03C20F88 ADRP X0, 0x53F000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move W21, W1
	008 Move W20, W2
	009 Move X19, X0
	010 Move X9, [X8+488]
	011 Move X8, [X8+496]
	012 Move X1, X8
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {36}
	018 Move X22, 0x7C5000
	019 Move X3, [X22+3528]
	020 Compare X3, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51470336
	023 Add X0, X0, 424
	024 Call 0x1C17CB8
	025 Move X3, X0
	026 Move [X22+3528], X0
	027 And W1, W21, 1
	028 And W2, W20, 1
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 CallNoReturn X3
	036 Move X0, X19
	037 Move X1, X19
	038 Move X2, X31
	039 Call Texture.CreateNonReadableException, X0, X1
	040 Move X19, X0
	041 Move X0, 0x540000
	042 Move X0, [X0+392]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Call 0x1C17DEC

Method: System.Void Apply()

Disassembly:
	0x03C20F8C LDR X0, [X0 + 0x1B0]
	0x03C20F90 B 0x3C20FB0
	0x03C20F94 ADRP X0, 0x4DB000

ISIL:
	001 Move W1, 1
	002 Move W2, W31
	003 Call CubemapArray.Apply, X0, X1, X2
	004 Return 

Method: System.Void ValidateIsNotCrunched(UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C20B14 ADRP X21, 0x7C4000
	0x03C20B18 LDR X2, [X21 + 0xF08]
	0x03C20B1C MOV X19, X1
	0x03C20B20 MOV X20, X0
	0x03C20B24 CBNZ X2, 0x3C20B3C
	0x03C20B28 ADRP X0, 0xFFFFFFFFFCEE2000
	0x03C20B2C ADD X0, X0, 0xFFE
	0x03C20B30 BL 0x1C16CB8
	0x03C20B34 MOV X2, X0
	0x03C20B38 STR X0, [X21 + 0xF08]
	0x03C20B3C MOV X0, X20
	0x03C20B40 MOV X1, X19
	0x03C20B44 LDP X20, X19, [X31 + 0x10]
	0x03C20B48 LDP X30, X21, [X31], #0x20
	0x03C20B4C BR X2
	0x03C20B50 STP X30, X21, [X31 - 0x20]!
	0x03C20B54 STP X20, X19, [X31 + 0x10]
	0x03C20B58 ADRP X21, 0x7C4000
	0x03C20B5C LDR X2, [X21 + 0xF08]
	0x03C20B60 MOV X19, X1
	0x03C20B64 MOV X20, X0

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, 64
	003 Compare TEMP, 64
	004 JumpIfEqual {6}
	005 Return 
	006 Move [X31-16], X30
	007 Move [X31-8], X19
	008 Move X0, 0x4DC000
	009 Move X0, [X0+1400]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X19, X0
	013 Move X0, 0x540000
	014 Move X0, [X0+376]
	015 Call 0x1C17D08
	016 Move X1, X0
	017 Move X0, X19
	018 Move X2, X31
	019 Call ArgumentException..ctor, X0, X1
	020 Move X0, 0x540000
	021 Move X0, [X0+384]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Call 0x1C17DEC

