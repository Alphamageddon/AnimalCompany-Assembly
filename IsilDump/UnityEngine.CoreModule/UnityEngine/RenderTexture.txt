Type: UnityEngine.RenderTexture

Method: System.Int32 get_width()

Disassembly:
	0x03C20F98 LDR X0, [X0 + 0x578]
	0x03C20F9C BL 0x1C16D08
	0x03C20FA0 BL 0x1C16F10
	0x03C20FA4 MOV X19, X0
	0x03C20FA8 ADRP X0, 0x53F000
	0x03C20FAC LDR X0, [X0 + 0x1B8]
	0x03C20FB0 BL 0x1C16D08
	0x03C20FB4 MOV X20, X0
	0x03C20FB8 ADRP X0, 0x53F000
	0x03C20FBC LDR X0, [X0 + 0x1C0]
	0x03C20FC0 BL 0x1C16D08
	0x03C20FC4 MOV X2, X0
	0x03C20FC8 MOV X0, X19
	0x03C20FCC MOV X1, X20
	0x03C20FD0 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C5000
	005 Move X1, [X20+3552]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51335168
	010 Add X0, X0, 2106
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3552], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_width(System.Int32 value)

Disassembly:
	0x03C20FD4 BL 0x330E16C
	0x03C20FD8 ADRP X0, 0x53F000
	0x03C20FDC LDR X0, [X0 + 0x1C8]
	0x03C20FE0 BL 0x1C16D08
	0x03C20FE4 MOV X1, X0
	0x03C20FE8 MOV X0, X19
	0x03C20FEC BL 0x1C16DEC
	0x03C20FF0 ADRP X0, 0x533000
	0x03C20FF4 LDR W19, [X19 + 0x1C]
	0x03C20FF8 LDR X0, [X0 + 0x4B8]
	0x03C20FFC BL 0x1C16D08
	0x03C21000 MOVN X8, 0x0
	0x03C21004 STP X0, X8, [X31 + 0x8]
	0x03C21008 ADD X0, X31, 0x8
	0x03C2100C MOV X1, X31
	0x03C21010 STR W19, [X31 + 0x18]
	0x03C21014 BL 0x33B162C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C5000
	006 Move X2, [X21+3560]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51580928
	012 Add X0, X0, 3803
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3560], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_height()

Disassembly:
	0x03C21018 MOV X19, X0
	0x03C2101C ADRP X0, 0x53E000
	0x03C21020 LDR X0, [X0 + 0x1D0]
	0x03C21024 BL 0x1C16D08
	0x03C21028 MOV X20, X0
	0x03C2102C ADRP X0, 0x53E000
	0x03C21030 LDR X0, [X0 + 0x1D8]
	0x03C21034 BL 0x1C16D08
	0x03C21038 MOV X2, X0
	0x03C2103C MOV X0, X20
	0x03C21040 MOV X1, X19
	0x03C21044 MOV X3, X31
	0x03C21048 BL 0x32274B8
	0x03C2104C MOV X19, X0
	0x03C21050 ADRP X0, 0x4DA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3568]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51355648
	010 Add X0, X0, 3205
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3568], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_height(System.Int32 value)

Disassembly:
	0x03C21054 LDR X0, [X0 + 0x578]
	0x03C21058 BL 0x1C16D08
	0x03C2105C BL 0x1C16F10
	0x03C21060 MOV X20, X0
	0x03C21064 ADRP X0, 0x53E000
	0x03C21068 LDR X0, [X0 + 0x1E0]
	0x03C2106C B 0x3C21134
	0x03C21070 ADRP X0, 0x532000
	0x03C21074 LDR W19, [X19 + 0x14]
	0x03C21078 LDR X0, [X0 + 0x4B8]
	0x03C2107C BL 0x1C16D08
	0x03C21080 MOVN X8, 0x0
	0x03C21084 STP X0, X8, [X31 + 0x8]
	0x03C21088 ADD X0, X31, 0x8
	0x03C2108C MOV X1, X31
	0x03C21090 STR W19, [X31 + 0x18]
	0x03C21094 BL 0x33B162C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3576]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51576832
	012 Add X0, X0, 3935
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3576], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Rendering.TextureDimension get_dimension()

Disassembly:
	0x03C21098 MOV X19, X0
	0x03C2109C ADRP X0, 0x53E000
	0x03C210A0 LDR X0, [X0 + 0x1E8]
	0x03C210A4 BL 0x1C16D08
	0x03C210A8 MOV X20, X0
	0x03C210AC ADRP X0, 0x53E000
	0x03C210B0 LDR X0, [X0 + 0x1D8]
	0x03C210B4 B 0x3C210FC
	0x03C210B8 ADRP X0, 0x532000
	0x03C210BC LDR W19, [X19 + 0x14]
	0x03C210C0 LDR X0, [X0 + 0x4B8]
	0x03C210C4 BL 0x1C16D08
	0x03C210C8 MOVN X8, 0x0
	0x03C210CC STP X0, X8, [X31 + 0x8]
	0x03C210D0 ADD X0, X31, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3584]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51474432
	010 Add X0, X0, 491
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3584], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_dimension(UnityEngine.Rendering.TextureDimension value)

Disassembly:
	0x03C210D4 MOV X1, X31
	0x03C210D8 STR W19, [X31 + 0x18]
	0x03C210DC BL 0x33B162C
	0x03C210E0 MOV X19, X0
	0x03C210E4 ADRP X0, 0x53E000
	0x03C210E8 LDR X0, [X0 + 0x1F0]
	0x03C210EC BL 0x1C16D08
	0x03C210F0 MOV X20, X0
	0x03C210F4 ADRP X0, 0x508000
	0x03C210F8 LDR X0, [X0 + 0xB40]
	0x03C210FC BL 0x1C16D08
	0x03C21100 MOV X2, X0
	0x03C21104 MOV X0, X20
	0x03C21108 MOV X1, X19
	0x03C2110C MOV X3, X31
	0x03C21110 BL 0x32274B8
	0x03C21114 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3592]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51576832
	012 Add X0, X0, 3987
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3592], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Experimental.Rendering.GraphicsFormat GetColorFormat(System.Boolean suppressWarnings)

Disassembly:
	0x03C21118 ADRP X0, 0x4DA000
	0x03C2111C LDR X0, [X0 + 0x578]
	0x03C21120 BL 0x1C16D08
	0x03C21124 BL 0x1C16F10
	0x03C21128 MOV X20, X0
	0x03C2112C ADRP X0, 0x53E000
	0x03C21130 LDR X0, [X0 + 0x1F8]
	0x03C21134 BL 0x1C16D08
	0x03C21138 MOV X2, X0
	0x03C2113C MOV X0, X20
	0x03C21140 MOV X1, X19
	0x03C21144 MOV X3, X31
	0x03C21148 BL 0x330E16C
	0x03C2114C ADRP X0, 0x53E000
	0x03C21150 LDR X0, [X0 + 0x1C8]
	0x03C21154 BL 0x1C16D08
	0x03C21158 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3600]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51331072
	012 Add X0, X0, 1952
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3600], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetColorFormat(UnityEngine.Experimental.Rendering.GraphicsFormat format)

Disassembly:
	0x03C2115C MOV X0, X20
	0x03C21160 BL 0x1C16DEC
	0x03C21164 ADRP X0, 0x4DA000
	0x03C21168 LDR X0, [X0 + 0x578]
	0x03C2116C BL 0x1C16D08
	0x03C21170 BL 0x1C16F10
	0x03C21174 MOV X19, X0
	0x03C21178 ADRP X0, 0x53E000
	0x03C2117C LDR X0, [X0 + 0x200]
	0x03C21180 BL 0x1C16D08
	0x03C21184 MOV X1, X0
	0x03C21188 MOV X0, X19
	0x03C2118C MOV X2, X31
	0x03C21190 BL 0x3314A68
	0x03C21194 B 0x3C20FD8
	0x03C21198 ADRP X0, 0x4DA000
	0x03C2119C LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3608]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51367936
	012 Add X0, X0, 165
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3608], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Experimental.Rendering.GraphicsFormat get_graphicsFormat()

Disassembly:
	0x03C211A0 BL 0x1C16D08
	0x03C211A4 BL 0x1C16F10
	0x03C211A8 MOV X19, X0
	0x03C211AC ADRP X0, 0x53E000
	0x03C211B0 LDR X0, [X0 + 0x208]
	0x03C211B4 BL 0x1C16D08
	0x03C211B8 MOV X20, X0
	0x03C211BC ADRP X0, 0x53E000
	0x03C211C0 LDR X0, [X0 + 0x210]
	0x03C211C4 B 0x3C20FC0
	0x03C211C8 SUB X31, X31, 0xA0
	0x03C211CC STR X30, [X31 + 0x70]
	0x03C211D0 STP X22, X21, [X31 + 0x80]
	0x03C211D4 STP X20, X19, [X31 + 0x90]
	0x03C211D8 ADRP X22, 0x7C3000
	0x03C211DC ADRP X21, 0x53E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X2, [X20+3600]
	006 Move X19, X0
	007 Compare X2, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51331072
	010 Add X0, X0, 1952
	011 Call 0x1C17CB8
	012 Move X2, X0
	013 Move [X20+3600], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move W1, 1
	018 Move X30, [X31+32]
	019 CallNoReturn X2

Method: System.Void set_graphicsFormat(UnityEngine.Experimental.Rendering.GraphicsFormat value)

Disassembly:
	0x03C211E0 LDRB W8, [X22 + 0xEEA]
	0x03C211E4 LDR X21, [X21 + 0x48]
	0x03C211E8 MOV X20, X1
	0x03C211EC MOV X19, X0
	0x03C211F0 TBNZ X8, 0x0, 0x3C21214
	0x03C211F4 ADRP X0, 0x4D2000
	0x03C211F8 LDR X0, [X0 + 0x598]
	0x03C211FC BL 0x1C16CF4
	0x03C21200 ADRP X0, 0x53E000
	0x03C21204 LDR X0, [X0 + 0x48]
	0x03C21208 BL 0x1C16CF4
	0x03C2120C MOVZ W8, 0x1
	0x03C21210 STRB W8, [X22 + 0xEEA]
	0x03C21214 LDR X0, [X21]
	0x03C21218 ADRP X21, 0x4D2000
	0x03C2121C LDR W8, [X0 + 0xE0]
	0x03C21220 LDR X21, [X21 + 0x598]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3608]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51367936
	012 Add X0, X0, 165
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3608], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_useMipMap()

Disassembly:
	0x03C21224 CBNZ W8, 0x3C2122C
	0x03C21228 BL 0x1C16DFC
	0x03C2122C MOV X0, X19
	0x03C21230 MOV X1, X31
	0x03C21234 BL 0x3C1A69C
	0x03C21238 LDR X0, [X21]
	0x03C2123C LDR W8, [X0 + 0xE0]
	0x03C21240 CBNZ W8, 0x3C21248
	0x03C21244 BL 0x1C16DFC
	0x03C21248 MOV X0, X20
	0x03C2124C MOV X1, X31
	0x03C21250 MOV X2, X31
	0x03C21254 BL 0x3C3883C
	0x03C21258 TBNZ X0, 0x0, 0x3C212E8
	0x03C2125C CBZ X20, 0x3C21330

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3616]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51339264
	010 Add X0, X0, 2145
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3616], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_useMipMap(System.Boolean value)

Disassembly:
	0x03C21260 ADD X8, X31, 0x38
	0x03C21264 MOV X0, X20
	0x03C21268 BL 0x3C21334
	0x03C2126C ADD X0, X31, 0x38
	0x03C21270 BL 0x3C20DE0
	0x03C21274 ADRP X21, 0x7C3000
	0x03C21278 LDR X8, [X21 + 0xED8]
	0x03C2127C CBNZ X8, 0x3C21294
	0x03C21280 ADRP X0, 0xFFFFFFFFFCEE6000
	0x03C21284 ADD X0, X0, 0x168
	0x03C21288 BL 0x1C16CB8
	0x03C2128C MOV X8, X0
	0x03C21290 STR X0, [X21 + 0xED8]
	0x03C21294 MOV X0, X19
	0x03C21298 BLR X8
	0x03C2129C ADD X8, X31, 0x0
	0x03C212A0 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3624]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51564544
	012 Add X0, X0, 169
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3624], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_sRGB()

Disassembly:
	0x03C212A4 BL 0x3C21334
	0x03C212A8 ADRP X20, 0x7C3000
	0x03C212AC LDR X8, [X20 + 0xF08]
	0x03C212B0 CBNZ X8, 0x3C212C8
	0x03C212B4 ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C212B8 ADD X0, X0, 0xFFE
	0x03C212BC BL 0x1C16CB8
	0x03C212C0 MOV X8, X0
	0x03C212C4 STR X0, [X20 + 0xF08]
	0x03C212C8 ADD X1, X31, 0x0
	0x03C212CC MOV X0, X19
	0x03C212D0 BLR X8
	0x03C212D4 LDP X20, X19, [X31 + 0x90]
	0x03C212D8 LDP X22, X21, [X31 + 0x80]
	0x03C212DC LDR X30, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3632]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51392512
	010 Add X0, X0, 58
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3632], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_vrUsage(UnityEngine.VRTextureUsage value)

Disassembly:
	0x03C212E0 ADD X31, X31, 0xA0
	0x03C212E4 RET
	0x03C212E8 ADRP X0, 0x4D7000
	0x03C212EC LDR X0, [X0 + 0x528]
	0x03C212F0 BL 0x1C16D08
	0x03C212F4 BL 0x1C16F10
	0x03C212F8 MOV X19, X0
	0x03C212FC ADRP X0, 0x53E000
	0x03C21300 LDR X0, [X0 + 0x218]
	0x03C21304 BL 0x1C16D08
	0x03C21308 MOV X1, X0
	0x03C2130C MOV X0, X19
	0x03C21310 MOV X2, X31
	0x03C21314 BL 0x330E100
	0x03C21318 ADRP X0, 0x53E000
	0x03C2131C LDR X0, [X0 + 0x220]
	0x03C21320 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3640]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51388416
	012 Add X0, X0, 3026
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3640], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_memorylessMode(UnityEngine.RenderTextureMemoryless value)

Disassembly:
	0x03C21324 MOV X1, X0
	0x03C21328 MOV X0, X19
	0x03C2132C BL 0x1C16DEC
	0x03C21330 BL 0x1C16F20
	0x03C21334 SUB X31, X31, 0xA0
	0x03C21338 STP X30, X21, [X31 + 0x80]
	0x03C2133C STP X20, X19, [X31 + 0x90]
	0x03C21340 ADRP X21, 0x7C3000
	0x03C21344 MOV X19, X8
	0x03C21348 LDR X8, [X21 + 0xF10]
	0x03C2134C MOV X20, X0
	0x03C21350 MOVI V0.2D, 0x0
	0x03C21354 STR W31, [X31 + 0x70]
	0x03C21358 STP V0, V0, [X31 + 0x50]
	0x03C2135C STR V0, [X31 + 0x4]
	0x03C21360 CBNZ X8, 0x3C21378
	0x03C21364 ADRP X0, 0xFFFFFFFFFCEEE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3648]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51449856
	012 Add X0, X0, 889
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3648], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.RenderTextureFormat get_format()

Disassembly:
	0x03C21368 ADD X0, X0, 0x409
	0x03C2136C BL 0x1C16CB8
	0x03C21370 MOV X8, X0
	0x03C21374 STR X0, [X21 + 0xF10]
	0x03C21378 ADD X1, X31, 0x40
	0x03C2137C MOV X0, X20
	0x03C21380 BLR X8
	0x03C21384 LDR W8, [X31 + 0x70]
	0x03C21388 LDP V1, V0, [X31 + 0x50]
	0x03C2138C LDR V2, [X31 + 0x4]
	0x03C21390 LDP X30, X21, [X31 + 0x80]
	0x03C21394 STR W8, [X19 + 0x30]
	0x03C21398 STP V1, V0, [X19 + 0x10]
	0x03C2139C STR V2, [X19]
	0x03C213A0 LDP X20, X19, [X31 + 0x90]
	0x03C213A4 STR W8, [X31 + 0x30]
	0x03C213A8 STP V1, V0, [X31 + 0x10]
	0x03C213AC STR V2, [X31]
	0x03C213B0 ADD X31, X31, 0xA0
	0x03C213B4 RET
	0x03C213B8 STP X30, X25, [X31 - 0x40]!
	0x03C213BC STP X24, X23, [X31 + 0x10]
	0x03C213C0 STP X22, X21, [X31 + 0x20]
	0x03C213C4 STP X20, X19, [X31 + 0x30]
	0x03C213C8 ADRP X24, 0x7C3000
	0x03C213CC LDRB W8, [X24 + 0xEEB]
	0x03C213D0 MOV W23, W4
	0x03C213D4 MOV W22, W3
	0x03C213D8 MOV W19, W2
	0x03C213DC MOV W20, W1
	0x03C213E0 MOV X21, X0
	0x03C213E4 TBNZ X8, 0x0, 0x3C213FC
	0x03C213E8 ADRP X0, 0x53E000
	0x03C213EC LDR X0, [X0 + 0x48]
	0x03C213F0 BL 0x1C16CF4
	0x03C213F4 MOVZ W8, 0x1
	0x03C213F8 STRB W8, [X24 + 0xEEB]
	0x03C213FC ADRP X25, 0x53E000
	0x03C21400 LDR X25, [X25 + 0x48]
	0x03C21404 CMP W23, 0x2
	0x03C21408 B.EQ 0x3C2141C
	0x03C2140C CMP W23, 0x3
	0x03C21410 B.NE 0x3C21424
	0x03C21414 MOVZ W24, 0x8F
	0x03C21418 B 0x3C21434
	0x03C2141C MOVZ W24, 0x8E
	0x03C21420 B 0x3C21434
	0x03C21424 MOV W0, W23
	0x03C21428 MOV X1, X31
	0x03C2142C BL 0x3C3C544
	0x03C21430 MOV W24, W0
	0x03C21434 MOV W0, W23
	0x03C21438 MOV W1, W22
	0x03C2143C BL 0x3C214B4
	0x03C21440 LDR X8, [X25]
	0x03C21444 MOV W22, W0
	0x03C21448 LDR W9, [X8 + 0xE0]
	0x03C2144C CBNZ W9, 0x3C2145C
	0x03C21450 MOV X0, X8
	0x03C21454 BL 0x1C16DFC
	0x03C21458 LDR X8, [X25]
	0x03C2145C LDR X8, [X8 + 0xB8]
	0x03C21460 MOV X0, X21
	0x03C21464 MOV W1, W20
	0x03C21468 MOV W2, W19
	0x03C2146C LDR W5, [X8]
	0x03C21470 MOV W3, W24
	0x03C21474 MOV W4, W22
	0x03C21478 LDP X20, X19, [X31 + 0x30]
	0x03C2147C LDP X22, X21, [X31 + 0x20]
	0x03C21480 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X20, 0x7C4000
	007 Move W8, [X20+3656]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x533000
	014 Move X0, [X0+144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3656], W8
	018 Move X20, 0x7C4000
	019 Move X8, [X20+3600]
	020 Compare X8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51331072
	023 Add X0, X0, 1952
	024 Call 0x1C17CB8
	025 Move X8, X0
	026 Move [X20+3600], X0
	027 Move W1, 1
	028 Move X0, X19
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Compare W0, 0
	031 JumpIfEqual {61}
	032 Move X21, 0x533000
	033 Move X8, [X20+3600]
	034 Move X21, [X21+144]
	035 Compare X8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, -51331072
	038 Add X0, X0, 1952
	039 Call 0x1C17CB8
	040 Move X8, X0
	041 Move [X20+3600], X0
	042 Move W1, 1
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X21]
	046 Move W19, W0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move W0, W19
	053 Move X20, [X31+80]
	054 Move X19, [X31+88]
	055 Move X30, [X31+64]
	056 Move X21, [X31+72]
	057 Move X1, X31
	058 Add X31, X31, 96
	059 Call GraphicsFormatUtility.GetRenderTextureFormat, X0
	060 Return X0
	061 Move X20, 0x7C4000
	062 Move X8, [X20+3856]
	063 NotImplemented "Instruction MOVI not yet implemented."
	064 Move [X31+48], W31
	065 Move [X31+16], V0
	066 Move [X31+24], V0
	067 Move [X31], V0
	068 Compare X8, 0
	069 JumpIfNotEqual {75}
	070 Move X0, -51449856
	071 Add X0, X0, 1033
	072 Call 0x1C17CB8
	073 Move X8, X0
	074 Move [X20+3856], X0
	075 Add X1, X31, 0
	076 Move X0, X19
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move W8, [X31+36]
	079 Move X20, [X31+80]
	080 Move X19, [X31+88]
	081 Move X30, [X31+64]
	082 Move X21, [X31+72]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W8, 3
	085 NotImplemented "Instruction CSINC not yet implemented."
	086 Add X31, X31, 96
	087 Return X0

Method: System.Void set_stencilFormat(UnityEngine.Experimental.Rendering.GraphicsFormat value)

Disassembly:
	0x03C214FC LDR X25, [X25 + 0x48]
	0x03C21500 MOV W21, W5
	0x03C21504 MOV W22, W4
	0x03C21508 MOV W20, W3
	0x03C2150C MOV W23, W2
	0x03C21510 MOV W24, W1
	0x03C21514 MOV X19, X0
	0x03C21518 TBNZ X8, 0x0, 0x3C2153C
	0x03C2151C ADRP X0, 0x532000
	0x03C21520 LDR X0, [X0 + 0x90]
	0x03C21524 BL 0x1C16CF4
	0x03C21528 ADRP X0, 0x53E000
	0x03C2152C LDR X0, [X0 + 0x48]
	0x03C21530 BL 0x1C16CF4
	0x03C21534 MOVZ W8, 0x1
	0x03C21538 STRB W8, [X26 + 0xEEE]
	0x03C2153C LDR X0, [X25]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3664]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51523584
	012 Add X0, X0, 1022
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3664], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_depthStencilFormat(UnityEngine.Experimental.Rendering.GraphicsFormat value)

Disassembly:
	0x03C21540 LDR W8, [X0 + 0xE0]
	0x03C21544 CBNZ W8, 0x3C2154C
	0x03C21548 BL 0x1C16DFC
	0x03C2154C MOV X0, X19
	0x03C21550 MOV X1, X31
	0x03C21554 BL 0x3C1A69C
	0x03C21558 CBZ W20, 0x3C21584
	0x03C2155C LDR X0, [X25]
	0x03C21560 LDR W8, [X0 + 0xE0]
	0x03C21564 CBNZ W8, 0x3C2156C
	0x03C21568 BL 0x1C16DFC
	0x03C2156C MOVZ W2, 0x4
	0x03C21570 MOV X0, X19
	0x03C21574 MOV W1, W20
	0x03C21578 MOV X3, X31
	0x03C2157C BL 0x3C1B024
	0x03C21580 TBZ X0, 0x0, 0x3C216D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3672]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51363840
	012 Add X0, X0, 3143
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3672], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_autoGenerateMips(System.Boolean value)

Disassembly:
	0x03C21584 ADRP X26, 0x7C3000
	0x03C21588 LDR X8, [X26 + 0xED8]
	0x03C2158C CBNZ X8, 0x3C215A4
	0x03C21590 ADRP X0, 0xFFFFFFFFFCEE6000
	0x03C21594 ADD X0, X0, 0x168
	0x03C21598 BL 0x1C16CB8
	0x03C2159C MOV X8, X0
	0x03C215A0 STR X0, [X26 + 0xED8]
	0x03C215A4 MOV X0, X19
	0x03C215A8 BLR X8
	0x03C215AC LDR X0, [X25]
	0x03C215B0 LDR W8, [X0 + 0xE0]
	0x03C215B4 CBNZ W8, 0x3C215BC
	0x03C215B8 BL 0x1C16DFC
	0x03C215BC LDR X8, [X19]
	0x03C215C0 MOV X0, X19
	0x03C215C4 MOV W1, W24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3680]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51585024
	012 Add X0, X0, 3854
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3680], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_volumeDepth()

Disassembly:
	0x03C215C8 LDP X9, X2, [X8 + 0x198]
	0x03C215CC BLR X9
	0x03C215D0 LDR X8, [X19]
	0x03C215D4 MOV X0, X19
	0x03C215D8 MOV W1, W23
	0x03C215DC LDP X9, X2, [X8 + 0x1B8]
	0x03C215E0 BLR X9
	0x03C215E4 ADRP X23, 0x7C3000
	0x03C215E8 LDR X8, [X23 + 0xE58]
	0x03C215EC CBNZ X8, 0x3C21604
	0x03C215F0 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C215F4 ADD X0, X0, 0xC47
	0x03C215F8 BL 0x1C16CB8
	0x03C215FC MOV X8, X0
	0x03C21600 STR X0, [X23 + 0xE58]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3688]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51503104
	010 Add X0, X0, 4049
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3688], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_volumeDepth(System.Int32 value)

Disassembly:
	0x03C21604 MOV X0, X19
	0x03C21608 MOV W1, W22
	0x03C2160C BLR X8
	0x03C21610 ADRP X22, 0x7C3000
	0x03C21614 LDR X8, [X22 + 0xE18]
	0x03C21618 CBNZ X8, 0x3C21630
	0x03C2161C ADRP X0, 0xFFFFFFFFFCF02000
	0x03C21620 ADD X0, X0, 0xA5
	0x03C21624 BL 0x1C16CB8
	0x03C21628 MOV X8, X0
	0x03C2162C STR X0, [X22 + 0xE18]
	0x03C21630 ADRP X22, 0x532000
	0x03C21634 LDR X22, [X22 + 0x90]
	0x03C21638 MOV X0, X19
	0x03C2163C MOV W1, W20
	0x03C21640 BLR X8
	0x03C21644 ADRP X23, 0x7C3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3696]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51523584
	012 Add X0, X0, 1118
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3696], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_antiAliasing()

Disassembly:
	0x03C21648 LDR X8, [X23 + 0xEB8]
	0x03C2164C CBNZ X8, 0x3C21664
	0x03C21650 ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C21654 ADD X0, X0, 0xB70
	0x03C21658 BL 0x1C16CB8
	0x03C2165C MOV X8, X0
	0x03C21660 STR X0, [X23 + 0xEB8]
	0x03C21664 MOV X0, X19
	0x03C21668 MOV W1, W21
	0x03C2166C BLR X8
	0x03C21670 LDR X0, [X22]
	0x03C21674 LDR W8, [X0 + 0xE0]
	0x03C21678 CBNZ W8, 0x3C21680
	0x03C2167C BL 0x1C16DFC
	0x03C21680 MOV W0, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3704]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51421184
	010 Add X0, X0, 2593
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3704], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_antiAliasing(System.Int32 value)

Disassembly:
	0x03C21684 MOV X1, X31
	0x03C21688 BL 0x3C61964
	0x03C2168C ADRP X21, 0x7C3000
	0x03C21690 LDR X2, [X21 + 0xED0]
	0x03C21694 MOV W20, W0
	0x03C21698 CBNZ X2, 0x3C216B0
	0x03C2169C ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C216A0 ADD X0, X0, 0xBA8
	0x03C216A4 BL 0x1C16CB8
	0x03C216A8 MOV X2, X0
	0x03C216AC STR X0, [X21 + 0xED0]
	0x03C216B0 AND W1, W20, 0x1
	0x03C216B4 MOV X0, X19
	0x03C216B8 LDP X20, X19, [X31 + 0x40]
	0x03C216BC LDP X22, X21, [X31 + 0x30]
	0x03C216C0 LDP X24, X23, [X31 + 0x20]
	0x03C216C4 LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3712]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51441664
	012 Add X0, X0, 76
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3712], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_bindTextureMS(System.Boolean value)

Disassembly:
	0x03C216C8 LDR X30, [X31], #0x50
	0x03C216CC BR X2
	0x03C216D0 LDP X20, X19, [X31 + 0x40]
	0x03C216D4 LDP X22, X21, [X31 + 0x30]
	0x03C216D8 LDP X24, X23, [X31 + 0x20]
	0x03C216DC LDP X26, X25, [X31 + 0x10]
	0x03C216E0 LDR X30, [X31], #0x50
	0x03C216E4 RET
	0x03C216E8 STP X30, X25, [X31 - 0x40]!
	0x03C216EC STP X24, X23, [X31 + 0x10]
	0x03C216F0 STP X22, X21, [X31 + 0x20]
	0x03C216F4 STP X20, X19, [X31 + 0x30]
	0x03C216F8 ADRP X25, 0x7C3000
	0x03C216FC ADRP X24, 0x53E000
	0x03C21700 LDRB W8, [X25 + 0xEEC]
	0x03C21704 LDR X24, [X24 + 0x48]
	0x03C21708 MOV W19, W4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3720]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51449856
	012 Add X0, X0, 972
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3720], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_enableRandomWrite(System.Boolean value)

Disassembly:
	0x03C2170C MOV W20, W3
	0x03C21710 MOV W21, W2
	0x03C21714 MOV W22, W1
	0x03C21718 MOV X23, X0
	0x03C2171C TBNZ X8, 0x0, 0x3C21734
	0x03C21720 ADRP X0, 0x53E000
	0x03C21724 LDR X0, [X0 + 0x48]
	0x03C21728 BL 0x1C16CF4
	0x03C2172C MOVZ W8, 0x1
	0x03C21730 STRB W8, [X25 + 0xEEC]
	0x03C21734 LDR X0, [X24]
	0x03C21738 LDR W8, [X0 + 0xE0]
	0x03C2173C CBNZ W8, 0x3C21748
	0x03C21740 BL 0x1C16DFC
	0x03C21744 LDR X0, [X24]
	0x03C21748 LDR X8, [X0 + 0xB8]
	0x03C2174C MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3728]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51585024
	012 Add X0, X0, 3918
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3728], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_useDynamicScale()

Disassembly:
	0x03C21750 MOV W1, W22
	0x03C21754 MOV W2, W21
	0x03C21758 LDR W5, [X8]
	0x03C2175C MOV W3, W20
	0x03C21760 MOV W4, W19
	0x03C21764 LDP X20, X19, [X31 + 0x30]
	0x03C21768 LDP X22, X21, [X31 + 0x20]
	0x03C2176C LDP X24, X23, [X31 + 0x10]
	0x03C21770 LDP X30, X25, [X31], #0x40
	0x03C21774 B 0x3C21778
	0x03C21778 STR X30, [X31 - 0x50]!
	0x03C2177C STP X26, X25, [X31 + 0x10]
	0x03C21780 STP X24, X23, [X31 + 0x20]
	0x03C21784 STP X22, X21, [X31 + 0x30]
	0x03C21788 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3736]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51556352
	010 Add X0, X0, 793
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3736], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_useDynamicScale(System.Boolean value)

Disassembly:
	0x03C2178C ADRP X26, 0x7C3000
	0x03C21790 ADRP X25, 0x53E000
	0x03C21794 LDRB W8, [X26 + 0xEED]
	0x03C21798 LDR X25, [X25 + 0x48]
	0x03C2179C MOV W21, W5
	0x03C217A0 MOV W20, W4
	0x03C217A4 MOV W24, W3
	0x03C217A8 MOV W22, W2
	0x03C217AC MOV W23, W1
	0x03C217B0 MOV X19, X0
	0x03C217B4 TBNZ X8, 0x0, 0x3C217D8
	0x03C217B8 ADRP X0, 0x532000
	0x03C217BC LDR X0, [X0 + 0x90]
	0x03C217C0 BL 0x1C16CF4
	0x03C217C4 ADRP X0, 0x53E000
	0x03C217C8 LDR X0, [X0 + 0x48]
	0x03C217CC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3744]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51404800
	012 Add X0, X0, 2986
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3744], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.RenderTexture GetActive()

Disassembly:
	0x03C217D0 MOVZ W8, 0x1
	0x03C217D4 STRB W8, [X26 + 0xEED]
	0x03C217D8 LDR X0, [X25]
	0x03C217DC LDR W8, [X0 + 0xE0]
	0x03C217E0 CBNZ W8, 0x3C217E8
	0x03C217E4 BL 0x1C16DFC
	0x03C217E8 MOV X0, X19
	0x03C217EC MOV X1, X31
	0x03C217F0 BL 0x3C1A69C
	0x03C217F4 CBZ W20, 0x3C21820

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7C4000
	004 Move X0, [X19+3752]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51412992
	008 Add X0, X0, 2309
	009 Call 0x1C17CB8
	010 Move [X19+3752], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void SetActive(UnityEngine.RenderTexture rt)

Disassembly:
	0x03C217F8 LDR X0, [X25]
	0x03C217FC LDR W8, [X0 + 0xE0]
	0x03C21800 CBNZ W8, 0x3C21808
	0x03C21804 BL 0x1C16DFC
	0x03C21808 MOVZ W2, 0x4
	0x03C2180C MOV X0, X19
	0x03C21810 MOV W1, W20
	0x03C21814 MOV X3, X31
	0x03C21818 BL 0x3C1B024
	0x03C2181C TBZ X0, 0x0, 0x3C2197C
	0x03C21820 ADRP X26, 0x7C3000
	0x03C21824 LDR X8, [X26 + 0xED8]
	0x03C21828 CBNZ X8, 0x3C21840
	0x03C2182C ADRP X0, 0xFFFFFFFFFCEE6000
	0x03C21830 ADD X0, X0, 0x168

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3760]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51523584
	010 Add X0, X0, 1175
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3760], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.RenderTexture get_active()

Disassembly:
	0x03C21834 BL 0x1C16CB8
	0x03C21838 MOV X8, X0
	0x03C2183C STR X0, [X26 + 0xED8]
	0x03C21840 MOV X0, X19
	0x03C21844 BLR X8
	0x03C21848 MOV W0, W24
	0x03C2184C MOV W1, W20
	0x03C21850 BL 0x3C21994
	0x03C21854 ADRP X26, 0x7C3000
	0x03C21858 LDR X8, [X26 + 0xE58]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7C4000
	004 Move X0, [X19+3752]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51412992
	008 Add X0, X0, 2309
	009 Call 0x1C17CB8
	010 Move [X19+3752], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_active(UnityEngine.RenderTexture value)

Disassembly:
	0x03C2185C MOV W24, W0
	0x03C21860 CBNZ X8, 0x3C21878
	0x03C21864 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C21868 ADD X0, X0, 0xC47
	0x03C2186C BL 0x1C16CB8
	0x03C21870 MOV X8, X0
	0x03C21874 STR X0, [X26 + 0xE58]
	0x03C21878 MOV X0, X19
	0x03C2187C MOV W1, W24
	0x03C21880 BLR X8
	0x03C21884 LDR X0, [X25]
	0x03C21888 LDR W8, [X0 + 0xE0]
	0x03C2188C CBNZ W8, 0x3C21894
	0x03C21890 BL 0x1C16DFC
	0x03C21894 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3760]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51523584
	010 Add X0, X0, 1175
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3760], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.RenderBuffer GetColorBuffer()

Disassembly:
	0x03C21898 MOV X0, X19
	0x03C2189C MOV W1, W23
	0x03C218A0 LDP X9, X2, [X8 + 0x198]
	0x03C218A4 BLR X9
	0x03C218A8 LDR X8, [X19]
	0x03C218AC MOV X0, X19
	0x03C218B0 MOV W1, W22
	0x03C218B4 LDP X9, X2, [X8 + 0x1B8]
	0x03C218B8 BLR X9
	0x03C218BC ADRP X22, 0x7C3000
	0x03C218C0 LDR X8, [X22 + 0xE18]
	0x03C218C4 CBNZ X8, 0x3C218DC
	0x03C218C8 ADRP X0, 0xFFFFFFFFFCF02000
	0x03C218CC ADD X0, X0, 0xA5
	0x03C218D0 BL 0x1C16CB8
	0x03C218D4 MOV X8, X0
	0x03C218D8 STR X0, [X22 + 0xE18]
	0x03C218DC ADRP X22, 0x532000
	0x03C218E0 LDR X22, [X22 + 0x90]
	0x03C218E4 MOV X0, X19
	0x03C218E8 MOV W1, W20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7C4000
	007 Move X8, [X20+3832]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51367936
	013 Add X0, X0, 258
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+3832], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X0, [X31]
	021 Move X1, [X31+8]
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return X0

Method: UnityEngine.RenderBuffer GetDepthBuffer()

Disassembly:
	0x03C21930 MOV X1, X31
	0x03C21934 BL 0x3C61964
	0x03C21938 ADRP X21, 0x7C3000
	0x03C2193C LDR X2, [X21 + 0xED0]
	0x03C21940 MOV W20, W0
	0x03C21944 CBNZ X2, 0x3C2195C
	0x03C21948 ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C2194C ADD X0, X0, 0xBA8
	0x03C21950 BL 0x1C16CB8
	0x03C21954 MOV X2, X0
	0x03C21958 STR X0, [X21 + 0xED0]
	0x03C2195C AND W1, W20, 0x1
	0x03C21960 MOV X0, X19
	0x03C21964 LDP X20, X19, [X31 + 0x40]
	0x03C21968 LDP X22, X21, [X31 + 0x30]
	0x03C2196C LDP X24, X23, [X31 + 0x20]
	0x03C21970 LDP X26, X25, [X31 + 0x10]
	0x03C21974 LDR X30, [X31], #0x50
	0x03C21978 BR X2
	0x03C2197C LDP X20, X19, [X31 + 0x40]
	0x03C21980 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7C4000
	007 Move X8, [X20+3840]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51404800
	013 Add X0, X0, 3049
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+3840], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X0, [X31]
	021 Move X1, [X31+8]
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return X0

Method: System.Void SetMipMapCount(System.Int32 count)

Disassembly:
	0x03C219C8 MOVZ W8, 0x1
	0x03C219CC STRB W8, [X21 + 0xEF4]
	0x03C219D0 LDR X0, [X22]
	0x03C219D4 LDR W8, [X0 + 0xE0]
	0x03C219D8 CBNZ W8, 0x3C219E0
	0x03C219DC BL 0x1C16DFC
	0x03C219E0 MOV W0, W19
	0x03C219E4 CMP W20, 0x8F
	0x03C219E8 B.NE 0x3C21A04
	0x03C219EC LDP X20, X19, [X31 + 0x20]
	0x03C219F0 LDP X22, X21, [X31 + 0x10]
	0x03C219F4 MOV W1, W31
	0x03C219F8 MOV X2, X31
	0x03C219FC LDR X30, [X31], #0x30
	0x03C21A00 B 0x3C6176C
	0x03C21A04 LDP X20, X19, [X31 + 0x20]
	0x03C21A08 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3768]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51437568
	012 Add X0, X0, 2928
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3768], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.RenderBuffer get_colorBuffer()

Disassembly:
	0x03C21A0C MOV X1, X31

ISIL:
	001 Call RenderTexture.GetColorBuffer, X0
	002 Return X0

Method: UnityEngine.RenderBuffer get_depthBuffer()

Disassembly:
	0x03C21A10 LDR X30, [X31], #0x30

ISIL:
	001 Call RenderTexture.GetDepthBuffer, X0
	002 Return X0

Method: System.Boolean Create()

Disassembly:
	0x03C21A14 B 0x3C616BC
	0x03C21A18 STP X30, X25, [X31 - 0x40]!
	0x03C21A1C STP X24, X23, [X31 + 0x10]
	0x03C21A20 STP X22, X21, [X31 + 0x20]
	0x03C21A24 STP X20, X19, [X31 + 0x30]
	0x03C21A28 ADRP X25, 0x7C3000
	0x03C21A2C ADRP X24, 0x53E000
	0x03C21A30 LDRB W8, [X25 + 0xEEF]
	0x03C21A34 LDR X24, [X24 + 0x48]
	0x03C21A38 MOV W19, W4
	0x03C21A3C MOV W20, W3
	0x03C21A40 MOV W21, W2
	0x03C21A44 MOV W22, W1
	0x03C21A48 MOV X23, X0
	0x03C21A4C TBNZ X8, 0x0, 0x3C21A64

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3776]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51523584
	010 Add X0, X0, 1239
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3776], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Release()

Disassembly:
	0x03C21A50 ADRP X0, 0x53E000
	0x03C21A54 LDR X0, [X0 + 0x48]
	0x03C21A58 BL 0x1C16CF4
	0x03C21A5C MOVZ W8, 0x1
	0x03C21A60 STRB W8, [X25 + 0xEEF]
	0x03C21A64 LDR X0, [X24]
	0x03C21A68 LDR W8, [X0 + 0xE0]
	0x03C21A6C CBNZ W8, 0x3C21A78
	0x03C21A70 BL 0x1C16DFC
	0x03C21A74 LDR X0, [X24]
	0x03C21A78 LDR X8, [X0 + 0xB8]
	0x03C21A7C MOV X0, X23
	0x03C21A80 MOV W1, W22
	0x03C21A84 MOV W2, W21
	0x03C21A88 LDR W5, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3784]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51474432
	010 Add X0, X0, 534
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3784], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetSRGBReadWrite(System.Boolean srgb)

Disassembly:
	0x03C21A8C MOV W3, W20
	0x03C21A90 MOV W4, W19
	0x03C21A94 LDP X20, X19, [X31 + 0x30]
	0x03C21A98 LDP X22, X21, [X31 + 0x20]
	0x03C21A9C LDP X24, X23, [X31 + 0x10]
	0x03C21AA0 LDP X30, X25, [X31], #0x40
	0x03C21AA4 B 0x3C214DC
	0x03C21AA8 STR X30, [X31 - 0x50]!
	0x03C21AAC STP X26, X25, [X31 + 0x10]
	0x03C21AB0 STP X24, X23, [X31 + 0x20]
	0x03C21AB4 STP X22, X21, [X31 + 0x30]
	0x03C21AB8 STP X20, X19, [X31 + 0x40]
	0x03C21ABC ADRP X26, 0x7C3000
	0x03C21AC0 ADRP X25, 0x53E000
	0x03C21AC4 LDRB W8, [X26 + 0xEF0]
	0x03C21AC8 LDR X25, [X25 + 0x48]
	0x03C21ACC MOV W19, W5

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3792]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51437568
	012 Add X0, X0, 2984
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3792], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Internal_Create(UnityEngine.RenderTexture rt)

Disassembly:
	0x03C21AD0 MOV W20, W4
	0x03C21AD4 MOV W21, W3
	0x03C21AD8 MOV W22, W2
	0x03C21ADC MOV W23, W1
	0x03C21AE0 MOV X24, X0
	0x03C21AE4 TBNZ X8, 0x0, 0x3C21AFC
	0x03C21AE8 ADRP X0, 0x53E000
	0x03C21AEC LDR X0, [X0 + 0x48]
	0x03C21AF0 BL 0x1C16CF4
	0x03C21AF4 MOVZ W8, 0x1
	0x03C21AF8 STRB W8, [X26 + 0xEF0]
	0x03C21AFC LDR X0, [X25]
	0x03C21B00 LDR W8, [X0 + 0xE0]
	0x03C21B04 CBNZ W8, 0x3C21B0C
	0x03C21B08 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3800]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51482624
	010 Add X0, X0, 360
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3800], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetRenderTextureDescriptor(UnityEngine.RenderTextureDescriptor desc)

Disassembly:
	0x03C21B0C MOV X0, X24
	0x03C21B10 MOV X1, X31
	0x03C21B14 BL 0x3C1A69C
	0x03C21B18 LDR X8, [X25]
	0x03C21B1C MOV X0, X24
	0x03C21B20 MOV W1, W23
	0x03C21B24 MOV W2, W22
	0x03C21B28 LDR X8, [X8 + 0xB8]
	0x03C21B2C MOV W3, W21
	0x03C21B30 MOV W4, W20
	0x03C21B34 MOV W5, W19
	0x03C21B38 LDR W6, [X8]
	0x03C21B3C LDP X20, X19, [X31 + 0x40]
	0x03C21B40 LDP X22, X21, [X31 + 0x30]
	0x03C21B44 LDP X24, X23, [X31 + 0x20]
	0x03C21B48 LDP X26, X25, [X31 + 0x10]
	0x03C21B4C LDR X30, [X31], #0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3848]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51503104
	012 Add X0, X0, 4094
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3848], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.RenderTextureDescriptor GetDescriptor()

Disassembly:
	0x03C21484 LDP X30, X25, [X31], #0x40
	0x03C21488 B 0x3C214DC
	0x03C2148C CMP W0, 0x2
	0x03C21490 B.EQ 0x3C214A4
	0x03C21494 CMP W0, 0x3
	0x03C21498 B.NE 0x3C214AC
	0x03C2149C MOVZ W0, 0x8F
	0x03C214A0 RET
	0x03C214A4 MOVZ W0, 0x8E
	0x03C214A8 RET
	0x03C214AC MOV X1, X31
	0x03C214B0 B 0x3C3C544
	0x03C214B4 AND W8, W0, 0xFFFFFFFE
	0x03C214B8 CMP W8, 0x2
	0x03C214BC B.NE 0x3C214C8
	0x03C214C0 MOV X1, X31
	0x03C214C4 B 0x3C3C544
	0x03C214C8 CMP W0, 0x3
	0x03C214CC CSET W8, EQ
	0x03C214D0 MOV W0, W1
	0x03C214D4 MOV W1, W8
	0x03C214D8 B 0x3C21FD4
	0x03C214DC STR X30, [X31 - 0x50]!
	0x03C214E0 STP X26, X25, [X31 + 0x10]
	0x03C214E4 STP X24, X23, [X31 + 0x20]
	0x03C214E8 STP X22, X21, [X31 + 0x30]
	0x03C214EC STP X20, X19, [X31 + 0x40]
	0x03C214F0 ADRP X26, 0x7C3000
	0x03C214F4 ADRP X25, 0x53E000
	0x03C214F8 LDRB W8, [X26 + 0xEEE]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x7C4000
	007 Move X19, X8
	008 Move X8, [X21+3856]
	009 Move X20, X0
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X31+48], W31
	012 Move [X31+16], V0
	013 Move [X31+24], V0
	014 Move [X31], V0
	015 Compare X8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51449856
	018 Add X0, X0, 1033
	019 Call 0x1C17CB8
	020 Move X8, X0
	021 Move [X21+3856], X0
	022 Add X1, X31, 0
	023 Move X0, X20
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move W8, [X31+48]
	026 Move V1, [X31+16]
	027 Move V0, [X31+32]
	028 Move V2, [X31]
	029 Move X30, [X31+64]
	030 Move X21, [X31+72]
	031 Move [X19+48], W8
	032 Move [X19+16], V1
	033 Move [X19+24], V0
	034 Move [X19], V2
	035 Move X20, [X31+80]
	036 Move X19, [X31+88]
	037 Add X31, X31, 96
	038 Return X0

Method: UnityEngine.RenderTexture GetTemporary_Internal(UnityEngine.RenderTextureDescriptor desc)

Disassembly:
	0x03C21BD8 MOV X3, X31
	0x03C21BDC BL 0x3C1B024
	0x03C21BE0 TBZ X0, 0x0, 0x3C21D20
	0x03C21BE4 ADRP X25, 0x7C3000
	0x03C21BE8 LDR X8, [X25 + 0xED8]
	0x03C21BEC CBNZ X8, 0x3C21C04
	0x03C21BF0 ADRP X0, 0xFFFFFFFFFCEE6000
	0x03C21BF4 ADD X0, X0, 0x168
	0x03C21BF8 BL 0x1C16CB8
	0x03C21BFC MOV X8, X0
	0x03C21C00 STR X0, [X25 + 0xED8]
	0x03C21C04 MOV X0, X19
	0x03C21C08 BLR X8
	0x03C21C0C LDR X8, [X19]
	0x03C21C10 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3864]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51437568
	010 Add X0, X0, 3044
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3864], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void ReleaseTemporary(UnityEngine.RenderTexture temp)

Disassembly:
	0x03C21C50 STR X0, [X22 + 0xE58]
	0x03C21C54 MOV X0, X19
	0x03C21C58 MOV W1, W23
	0x03C21C5C BLR X8
	0x03C21C60 ADRP X22, 0x7C3000
	0x03C21C64 LDR X8, [X22 + 0xE18]
	0x03C21C68 CBNZ X8, 0x3C21C80
	0x03C21C6C ADRP X0, 0xFFFFFFFFFCF02000
	0x03C21C70 ADD X0, X0, 0xA5
	0x03C21C74 BL 0x1C16CB8
	0x03C21C78 MOV X8, X0
	0x03C21C7C STR X0, [X22 + 0xE18]
	0x03C21C80 ADRP X22, 0x532000
	0x03C21C84 LDR X22, [X22 + 0x90]
	0x03C21C88 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3808]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51363840
	010 Add X0, X0, 3244
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3808], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor()

Disassembly:
	0x03C21C8C MOV W1, W21
	0x03C21C90 BLR X8
	0x03C21C94 ADRP X23, 0x7C3000
	0x03C21C98 LDR X8, [X23 + 0xEB8]
	0x03C21C9C CBNZ X8, 0x3C21CB4
	0x03C21CA0 ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C21CA4 ADD X0, X0, 0xB70
	0x03C21CA8 BL 0x1C16CB8
	0x03C21CAC MOV X8, X0
	0x03C21CB0 STR X0, [X23 + 0xEB8]
	0x03C21CB4 MOV X0, X19
	0x03C21CB8 MOV W1, W20
	0x03C21CBC BLR X8
	0x03C21CC0 LDR X0, [X22]
	0x03C21CC4 LDR W8, [X0 + 0xE0]
	0x03C21CC8 CBNZ W8, 0x3C21CD0
	0x03C21CCC BL 0x1C16DFC
	0x03C21CD0 MOV W0, W21
	0x03C21CD4 MOV X1, X31
	0x03C21CD8 BL 0x3C61964
	0x03C21CDC ADRP X21, 0x7C3000
	0x03C21CE0 LDR X2, [X21 + 0xED0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7C4000
	006 Move X21, 0x53F000
	007 Move W8, [X20+3816]
	008 Move X21, [X21+72]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x53F000
	015 Move X0, [X0+72]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3816], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Texture..ctor, X0
	031 Return 

Method: System.Void .ctor(UnityEngine.RenderTextureDescriptor desc)

Disassembly:
	0x03C21CE4 MOV W20, W0
	0x03C21CE8 CBNZ X2, 0x3C21D00
	0x03C21CEC ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C21CF0 ADD X0, X0, 0xBA8
	0x03C21CF4 BL 0x1C16CB8
	0x03C21CF8 MOV X2, X0
	0x03C21CFC STR X0, [X21 + 0xED0]
	0x03C21D00 AND W1, W20, 0x1
	0x03C21D04 MOV X0, X19
	0x03C21D08 LDP X20, X19, [X31 + 0x40]
	0x03C21D0C LDP X22, X21, [X31 + 0x30]
	0x03C21D10 LDP X24, X23, [X31 + 0x20]
	0x03C21D14 LDP X26, X25, [X31 + 0x10]
	0x03C21D18 LDR X30, [X31], #0x50
	0x03C21D1C BR X2
	0x03C21D20 LDP X20, X19, [X31 + 0x40]
	0x03C21D24 LDP X22, X21, [X31 + 0x30]
	0x03C21D28 LDP X24, X23, [X31 + 0x20]
	0x03C21D2C LDP X26, X25, [X31 + 0x10]
	0x03C21D30 LDR X30, [X31], #0x50
	0x03C21D34 RET
	0x03C21D38 STP X30, X25, [X31 - 0x40]!
	0x03C21D3C STP X24, X23, [X31 + 0x10]
	0x03C21D40 STP X22, X21, [X31 + 0x20]
	0x03C21D44 STP X20, X19, [X31 + 0x30]
	0x03C21D48 ADRP X25, 0x7C3000
	0x03C21D4C ADRP X24, 0x53E000
	0x03C21D50 LDRB W8, [X25 + 0xEF1]
	0x03C21D54 LDR X24, [X24 + 0x48]
	0x03C21D58 MOV W19, W4
	0x03C21D5C MOV W20, W3
	0x03C21D60 MOV W21, W2
	0x03C21D64 MOV W22, W1
	0x03C21D68 MOV X23, X0
	0x03C21D6C TBNZ X8, 0x0, 0x3C21D84
	0x03C21D70 ADRP X0, 0x53E000
	0x03C21D74 LDR X0, [X0 + 0x48]
	0x03C21D78 BL 0x1C16CF4
	0x03C21D7C MOVZ W8, 0x1
	0x03C21D80 STRB W8, [X25 + 0xEF1]
	0x03C21D84 LDR X0, [X24]
	0x03C21D88 LDR W8, [X0 + 0xE0]
	0x03C21D8C CBNZ W8, 0x3C21D98
	0x03C21D90 BL 0x1C16DFC
	0x03C21D94 LDR X0, [X24]
	0x03C21D98 LDR X8, [X0 + 0xB8]
	0x03C21D9C MOV X0, X23
	0x03C21DA0 MOV W1, W22
	0x03C21DA4 MOV W2, W21
	0x03C21DA8 LDR W5, [X8]
	0x03C21DAC MOV W3, W20
	0x03C21DB0 MOV W4, W19
	0x03C21DB4 LDP X20, X19, [X31 + 0x30]
	0x03C21DB8 LDP X22, X21, [X31 + 0x20]
	0x03C21DBC LDP X24, X23, [X31 + 0x10]
	0x03C21DC0 LDP X30, X25, [X31], #0x40
	0x03C21DC4 B 0x3C21DC8
	0x03C21DC8 STR X30, [X31 - 0x50]!
	0x03C21DCC STP X26, X25, [X31 + 0x10]
	0x03C21DD0 STP X24, X23, [X31 + 0x20]
	0x03C21DD4 STP X22, X21, [X31 + 0x30]
	0x03C21DD8 STP X20, X19, [X31 + 0x40]
	0x03C21DDC ADRP X25, 0x7C3000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X21, 0x7C4000
	008 Move X22, 0x53F000
	009 Move W8, [X21+3817]
	010 Move X22, [X22+72]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x53F000
	018 Move X0, [X0+72]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3817], W8
	022 Move X0, [X22]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Call Texture..ctor, X0
	030 Move W8, [X20+48]
	031 Move V1, [X20+16]
	032 Move V0, [X20+32]
	033 Move V2, [X20]
	034 Add X0, X31, 64
	035 Move [X31+112], W8
	036 Move [X31+80], V1
	037 Move [X31+88], V0
	038 Move [X31+4], V2
	039 Call RenderTexture.ValidateRenderTextureDesc, X0
	040 Move X21, 0x7C4000
	041 Move X8, [X21+3800]
	042 Compare X8, 0
	043 JumpIfNotEqual {49}
	044 Move X0, -51482624
	045 Add X0, X0, 360
	046 Call 0x1C17CB8
	047 Move X8, X0
	048 Move [X21+3800], X0
	049 Move X0, X19
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move V0, [X20]
	052 Move V1, [X20+16]
	053 Move W9, [X20+48]
	054 Move V2, [X20+2]
	055 Move X20, 0x7C4000
	056 Move X8, [X20+3848]
	057 Move [X31+48], W9
	058 Move [X31+16], V1
	059 Move [X31+24], V2
	060 Move [X31], V0
	061 Compare X8, 0
	062 JumpIfNotEqual {68}
	063 Move X0, -51503104
	064 Add X0, X0, 4094
	065 Call 0x1C17CB8
	066 Move X8, X0
	067 Move [X20+3848], X0
	068 Add X1, X31, 0
	069 Move X0, X19
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X20, [X31+160]
	072 Move X19, [X31+168]
	073 Move X22, [X31+144]
	074 Move X21, [X31+152]
	075 Move X30, [X31+128]
	076 Add X31, X31, 176
	077 Return 

Method: System.Void .ctor(UnityEngine.RenderTexture textureToCopy)

Disassembly:
	0x03C221C8 MOV W22, W2
	0x03C221CC MOV W23, W1
	0x03C221D0 MOV X19, X0
	0x03C221D4 TBNZ X8, 0x0, 0x3C221EC
	0x03C221D8 ADRP X0, 0x53D000
	0x03C221DC LDR X0, [X0 + 0x48]
	0x03C221E0 BL 0x1C16CF4
	0x03C221E4 MOVZ W8, 0x1
	0x03C221E8 STRB W8, [X25 + 0xF29]
	0x03C221EC LDR X0, [X24]
	0x03C221F0 LDR W8, [X0 + 0xE0]
	0x03C221F4 CBNZ W8, 0x3C22200
	0x03C221F8 BL 0x1C16DFC
	0x03C221FC LDR X0, [X24]
	0x03C22200 LDR X8, [X0 + 0xB8]
	0x03C22204 MOVI V0.2D, 0x0
	0x03C22208 MOVZ W9, 0x82
	0x03C2220C MOV X0, X19
	0x03C22210 LDR W24, [X8]
	0x03C22214 STP V0, V0, [X19 + 0x10]
	0x03C22218 MOVI V0.2S, 0x1
	0x03C2221C MOV W1, W21
	0x03C22220 STP W9, W31, [X19 + 0x2C]
	0x03C22224 STP W23, W22, [X19]
	0x03C22228 STR D0, [X19 + 0x8]
	0x03C2222C BL 0x3C2240C
	0x03C22230 MOVI V0.2S, 0x2
	0x03C22234 STR W20, [X19 + 0x1C]
	0x03C22238 STR W24, [X19 + 0x10]
	0x03C2223C STR W31, [X19 + 0x28]
	0x03C22240 STR D0, [X19 + 0x20]
	0x03C22244 STR W31, [X19 + 0x30]
	0x03C22248 LDP X20, X19, [X31 + 0x30]
	0x03C2224C LDP X22, X21, [X31 + 0x20]
	0x03C22250 LDP X24, X23, [X31 + 0x10]
	0x03C22254 LDP X30, X25, [X31], #0x40
	0x03C22258 RET
	0x03C2225C LDR W8, [X0 + 0x2C]
	0x03C22260 ANDS W31, W1, 0x1
	0x03C22264 MOVZ W9, 0x400
	0x03C22268 CSEL W9, W9, W31, NE
	0x03C2226C AND W8, W8, 0xFFFFFBFF
	0x03C22270 ORR W8, W8, W9, 0x0
	0x03C22274 STR W8, [X0 + 0x2C]
	0x03C22278 RET
	0x03C2227C STP X30, X27, [X31 - 0x50]!
	0x03C22280 STP X26, X25, [X31 + 0x10]
	0x03C22284 STP X24, X23, [X31 + 0x20]
	0x03C22288 STP X22, X21, [X31 + 0x30]
	0x03C2228C STP X20, X19, [X31 + 0x40]
	0x03C22290 LDRB W27, [X31 + 0x50]
	0x03C22294 MOV W24, W1
	0x03C22298 MOV W25, W0
	0x03C2229C MOV W0, W3
	0x03C222A0 MOV W1, W4
	0x03C222A4 MOV W19, W7
	0x03C222A8 MOV W20, W6
	0x03C222AC MOV W21, W5
	0x03C222B0 MOV W22, W3
	0x03C222B4 MOV W23, W2
	0x03C222B8 BL 0x3C21E74
	0x03C222BC CMP W22, 0x3
	0x03C222C0 MOV W26, W0
	0x03C222C4 CSET W1, EQ
	0x03C222C8 MOV W0, W23
	0x03C222CC BL 0x3C21FD4
	0x03C222D0 MOV W2, W0
	0x03C222D4 MOV W0, W25
	0x03C222D8 MOV W1, W24
	0x03C222DC MOV W3, W26
	0x03C222E0 MOV W4, W21
	0x03C222E4 MOV W5, W20
	0x03C222E8 MOV W6, W19
	0x03C222EC LDP X20, X19, [X31 + 0x40]
	0x03C222F0 LDP X22, X21, [X31 + 0x30]
	0x03C222F4 LDP X24, X23, [X31 + 0x20]
	0x03C222F8 LDP X26, X25, [X31 + 0x10]
	0x03C222FC AND W7, W27, 0x1
	0x03C22300 LDP X30, X27, [X31], #0x50
	0x03C22304 B 0x3C22108
	0x03C22308 SUB X31, X31, 0x20
	0x03C2230C STR X30, [X31 + 0x10]
	0x03C22310 STRB W31, [X31]
	0x03C22314 BL 0x3C2227C
	0x03C22318 LDR X30, [X31 + 0x10]
	0x03C2231C ADD X31, X31, 0x20
	0x03C22320 RET
	0x03C22324 SUB X31, X31, 0x20
	0x03C22328 STR X30, [X31 + 0x10]
	0x03C2232C MOV W7, W31
	0x03C22330 STRB W31, [X31]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+128], X22
	004 Move [X31+136], X21
	005 Move [X31+144], X20
	006 Move [X31+152], X19
	007 Move X22, 0x7C3000
	008 Move X21, 0x53E000
	009 Move W8, [X22+3818]
	010 Move X21, [X21+72]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x4D2000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x53E000
	021 Move X0, [X0+72]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3818], W8
	025 Move X0, [X21]
	026 Move X21, 0x4D2000
	027 Move W8, [X0+224]
	028 Move X21, [X21+1432]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X31
	034 Call Texture..ctor, X0
	035 Move X0, [X21]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {88}
	048 Compare X20, 0
	049 JumpIfEqual {106}
	050 Add X8, X31, 56
	051 Move X0, X20
	052 Call RenderTexture.get_descriptor, X0
	053 Add X0, X31, 56
	054 Call RenderTexture.ValidateRenderTextureDesc, X0
	055 Move X21, 0x7C3000
	056 Move X8, [X21+3800]
	057 Compare X8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, -51486720
	060 Add X0, X0, 360
	061 Call 0x1C17CB8
	062 Move X8, X0
	063 Move [X21+3800], X0
	064 Move X0, X19
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Add X8, X31, 0
	067 Move X0, X20
	068 Call RenderTexture.get_descriptor, X0
	069 Move X20, 0x7C3000
	070 Move X8, [X20+3848]
	071 Compare X8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, -51507200
	074 Add X0, X0, 4094
	075 Call 0x1C17CB8
	076 Move X8, X0
	077 Move [X20+3848], X0
	078 Add X1, X31, 0
	079 Move X0, X19
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X20, [X31+144]
	082 Move X19, [X31+152]
	083 Move X22, [X31+128]
	084 Move X21, [X31+136]
	085 Move X30, [X31+112]
	086 Add X31, X31, 160
	087 Return 
	088 Move X0, 0x4D7000
	089 Move X0, [X0+1320]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X19, X0
	093 Move X0, 0x53E000
	094 Move X0, [X0+536]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X19
	098 Move X2, X31
	099 Call ArgumentNullException..ctor, X0, X1
	100 Move X0, 0x53E000
	101 Move X0, [X0+544]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Call 0x1C17DEC
	106 Call 0x1C17F20

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.DefaultFormat format)

Disassembly:
	0x03C223B8 RET
	0x03C223BC LDR W0, [X0]
	0x03C223C0 RET
	0x03C223C4 STR W1, [X0]
	0x03C223C8 RET
	0x03C223CC LDR W0, [X0 + 0x4]
	0x03C223D0 RET
	0x03C223D4 STR W1, [X0 + 0x4]
	0x03C223D8 RET
	0x03C223DC LDR W0, [X0 + 0x8]
	0x03C223E0 RET
	0x03C223E4 STR W1, [X0 + 0x8]
	0x03C223E8 RET
	0x03C223EC LDR W0, [X0 + 0xC]
	0x03C223F0 RET
	0x03C223F4 STR W1, [X0 + 0xC]
	0x03C223F8 RET
	0x03C223FC LDR W0, [X0 + 0x10]
	0x03C22400 RET
	0x03C22404 STR W1, [X0 + 0x10]
	0x03C22408 RET
	0x03C2240C STR X30, [X31 - 0x30]!
	0x03C22410 STP X22, X21, [X31 + 0x10]
	0x03C22414 STP X20, X19, [X31 + 0x20]
	0x03C22418 ADRP X22, 0x7C2000
	0x03C2241C ADRP X21, 0x531000
	0x03C22420 LDRB W8, [X22 + 0xF20]
	0x03C22424 LDR X21, [X21 + 0x90]
	0x03C22428 MOV W20, W1
	0x03C2242C MOV X19, X0
	0x03C22430 TBNZ X8, 0x0, 0x3C22448
	0x03C22434 ADRP X0, 0x531000
	0x03C22438 LDR X0, [X0 + 0x90]
	0x03C2243C BL 0x1C16CF4
	0x03C22440 MOVZ W8, 0x1
	0x03C22444 STRB W8, [X22 + 0xF20]
	0x03C22448 STR W20, [X19 + 0x14]
	0x03C2244C LDR X0, [X21]
	0x03C22450 LDR W8, [X0 + 0xE0]
	0x03C22454 CBNZ W8, 0x3C2245C
	0x03C22458 BL 0x1C16DFC
	0x03C2245C MOV W0, W20
	0x03C22460 MOV X1, X31
	0x03C22464 BL 0x3C61964
	0x03C22468 LDR W8, [X19 + 0x2C]
	0x03C2246C ANDS W31, W0, 0x1
	0x03C22470 MOVZ W9, 0x4
	0x03C22474 CSEL W9, W9, W31, NE
	0x03C22478 AND W8, W8, 0xFFFFFFFB
	0x03C2247C ORR W8, W8, W9, 0x0
	0x03C22480 MOV X0, X19
	0x03C22484 STR W8, [X19 + 0x2C]
	0x03C22488 BL 0x3C224C4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x7C3000
	010 Move W8, [X24+3819]
	011 Move W23, W4
	012 Move W22, W3
	013 Move W19, W2
	014 Move W20, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x53E000
	021 Move X0, [X0+72]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3819], W8
	025 Move X25, 0x53E000
	026 Move X25, [X25+72]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W24, 143
	030 Move W24, 142
	031 Move W0, W23
	032 Move X1, X31
	033 Call SystemInfo.GetGraphicsFormat, X0
	034 Move W24, W0
	035 Move W0, W23
	036 Move W1, W22
	037 Call RenderTexture.GetDefaultDepthStencilFormat, X0, X1
	038 Move X8, [X25]
	039 Move W22, W0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {46}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Move X8, [X25]
	046 Move X8, [X8+184]
	047 Move X0, X21
	048 Move W1, W20
	049 Move W2, W19
	050 Move W5, [X8]
	051 Move W3, W24
	052 Move W4, W22
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Move X25, [X31+72]
	061 Call RenderTexture..ctor, X0, X1, X2, X3, X4, X5
	062 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.GraphicsFormat format)

Disassembly:
	0x03C226E8 LDR X0, [X0 + 0x90]
	0x03C226EC BL 0x1C16CF4
	0x03C226F0 MOVZ W8, 0x1
	0x03C226F4 STRB W8, [X20 + 0xF24]
	0x03C226F8 ADRP X22, 0x531000
	0x03C226FC LDR X22, [X22 + 0x90]
	0x03C22700 ANDS W31, W21, 0x1
	0x03C22704 CSEL X23, X19, X31, NE
	0x03C22708 MOV X20, X19
	0x03C2270C TBZ X21, 0x0, 0x3C22750
	0x03C22710 MOV X0, X31
	0x03C22714 BL 0x3C113A8
	0x03C22718 CMP W0, 0x1
	0x03C2271C CSEL X21, X23, X31, EQ
	0x03C22720 MOV X20, X19
	0x03C22724 B.NE 0x3C22750
	0x03C22728 MOV X0, X19
	0x03C2272C BL 0x3C2255C
	0x03C22730 CMP W0, 0x10
	0x03C22734 MOV X20, X23
	0x03C22738 B.EQ 0x3C22750
	0x03C2273C MOV X0, X19
	0x03C22740 BL 0x3C2255C
	0x03C22744 CMP W0, 0x19
	0x03C22748 B.NE 0x3C22788
	0x03C2274C MOV X20, X21
	0x03C22750 LDR X0, [X22]
	0x03C22754 LDR W19, [X19 + 0x14]
	0x03C22758 LDR W8, [X0 + 0xE0]
	0x03C2275C CBNZ W8, 0x3C22764
	0x03C22760 BL 0x1C16DFC
	0x03C22764 MOV W0, W19
	0x03C22768 MOV X1, X31
	0x03C2276C BL 0x3C619DC
	0x03C22770 MOV W1, W0
	0x03C22774 MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C3000
	010 Move X24, 0x53E000
	011 Move W8, [X25+3820]
	012 Move X24, [X24+72]
	013 Move W19, W4
	014 Move W20, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x53E000
	023 Move X0, [X0+72]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3820], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X24]
	033 Move X8, [X0+184]
	034 Move X0, X23
	035 Move W1, W22
	036 Move W2, W21
	037 Move W5, [X8]
	038 Move W3, W20
	039 Move W4, W19
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X30, [X31+64]
	047 Move X25, [X31+72]

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.GraphicsFormat format, System.Int32 mipCount)

Disassembly:
	0x03C22778 LDP X20, X19, [X31 + 0x20]
	0x03C2277C LDP X22, X21, [X31 + 0x10]
	0x03C22780 LDP X30, X23, [X31], #0x30
	0x03C22784 B 0x3C2240C
	0x03C22788 LDR X0, [X22]
	0x03C2278C LDR W19, [X19 + 0x14]
	0x03C22790 LDR W8, [X0 + 0xE0]
	0x03C22794 CBNZ W8, 0x3C2279C
	0x03C22798 BL 0x1C16DFC
	0x03C2279C MOV W0, W19
	0x03C227A0 MOV X1, X31
	0x03C227A4 BL 0x3C619A0
	0x03C227A8 MOV W1, W0
	0x03C227AC MOV X20, X21
	0x03C227B0 B 0x3C22774
	0x03C227B4 LDR W0, [X0 + 0x20]
	0x03C227B8 RET
	0x03C227BC STR W1, [X0 + 0x20]
	0x03C227C0 RET
	0x03C227C4 LDR W0, [X0 + 0x24]
	0x03C227C8 RET
	0x03C227CC STR W1, [X0 + 0x24]
	0x03C227D0 RET
	0x03C227D4 LDR W0, [X0 + 0x28]
	0x03C227D8 RET
	0x03C227DC STR W1, [X0 + 0x28]
	0x03C227E0 RET
	0x03C227E4 LDR W0, [X0 + 0x30]
	0x03C227E8 RET
	0x03C227EC STR W1, [X0 + 0x30]
	0x03C227F0 RET
	0x03C227F4 MOVZ W3, 0x7
	0x03C227F8 MOV W4, W31
	0x03C227FC B 0x3C22808
	0x03C22800 MOV W4, W31
	0x03C22804 B 0x3C22808
	0x03C22808 STP X30, X25, [X31 - 0x40]!
	0x03C2280C STP X24, X23, [X31 + 0x10]
	0x03C22810 STP X22, X21, [X31 + 0x20]
	0x03C22814 STP X20, X19, [X31 + 0x30]
	0x03C22818 ADRP X25, 0x7C2000
	0x03C2281C ADRP X24, 0x53D000
	0x03C22820 LDRB W8, [X25 + 0xF26]
	0x03C22824 LDR X24, [X24 + 0x48]
	0x03C22828 MOV W19, W4
	0x03C2282C MOV W20, W3
	0x03C22830 MOV W21, W2
	0x03C22834 MOV W22, W1
	0x03C22838 MOV X23, X0
	0x03C2283C TBNZ X8, 0x0, 0x3C22854
	0x03C22840 ADRP X0, 0x53D000
	0x03C22844 LDR X0, [X0 + 0x48]
	0x03C22848 BL 0x1C16CF4
	0x03C2284C MOVZ W8, 0x1
	0x03C22850 STRB W8, [X25 + 0xF26]
	0x03C22854 LDR X0, [X24]
	0x03C22858 LDR W8, [X0 + 0xE0]
	0x03C2285C CBNZ W8, 0x3C22868
	0x03C22860 BL 0x1C16DFC
	0x03C22864 LDR X0, [X24]
	0x03C22868 LDR X8, [X0 + 0xB8]
	0x03C2286C MOV X0, X23
	0x03C22870 MOV W1, W22
	0x03C22874 MOV W2, W21
	0x03C22878 LDR W5, [X8]
	0x03C2287C MOV W3, W20
	0x03C22880 MOV W4, W19
	0x03C22884 LDP X20, X19, [X31 + 0x30]
	0x03C22888 LDP X22, X21, [X31 + 0x20]
	0x03C2288C LDP X24, X23, [X31 + 0x10]
	0x03C22890 MOVZ W6, 0x1
	0x03C22894 LDP X30, X25, [X31], #0x40
	0x03C22898 B 0x3C229A8
	0x03C2289C MOVZ W6, 0x1
	0x03C228A0 B 0x3C229A8
	0x03C228A4 STP X30, X25, [X31 - 0x40]!
	0x03C228A8 STP X24, X23, [X31 + 0x10]
	0x03C228AC STP X22, X21, [X31 + 0x20]
	0x03C228B0 STP X20, X19, [X31 + 0x30]
	0x03C228B4 ADRP X25, 0x7C2000
	0x03C228B8 ADRP X24, 0x53D000
	0x03C228BC LDRB W8, [X25 + 0xF27]
	0x03C228C0 LDR X24, [X24 + 0x48]
	0x03C228C4 MOV W19, W4
	0x03C228C8 MOV W20, W3
	0x03C228CC MOV W21, W2
	0x03C228D0 MOV W22, W1
	0x03C228D4 MOV X23, X0
	0x03C228D8 TBNZ X8, 0x0, 0x3C228F0
	0x03C228DC ADRP X0, 0x53D000
	0x03C228E0 LDR X0, [X0 + 0x48]
	0x03C228E4 BL 0x1C16CF4
	0x03C228E8 MOVZ W8, 0x1
	0x03C228EC STRB W8, [X25 + 0xF27]
	0x03C228F0 LDR X0, [X24]
	0x03C228F4 LDR W8, [X0 + 0xE0]
	0x03C228F8 CBNZ W8, 0x3C22904
	0x03C228FC BL 0x1C16DFC
	0x03C22900 LDR X0, [X24]
	0x03C22904 LDR X8, [X0 + 0xB8]
	0x03C22908 MOV X0, X23
	0x03C2290C MOV W1, W22
	0x03C22910 MOV W2, W21
	0x03C22914 LDR W5, [X8]
	0x03C22918 MOV W3, W20
	0x03C2291C MOV W4, W19
	0x03C22920 LDP X20, X19, [X31 + 0x30]
	0x03C22924 LDP X22, X21, [X31 + 0x20]
	0x03C22928 LDP X24, X23, [X31 + 0x10]
	0x03C2292C LDP X30, X25, [X31], #0x40
	0x03C22930 B 0x3C22934
	0x03C22934 STR X30, [X31 - 0x30]!
	0x03C22938 STP X22, X21, [X31 + 0x10]
	0x03C2293C STP X20, X19, [X31 + 0x20]
	0x03C22940 MOVI V0.2D, 0x0
	0x03C22944 MOVZ W8, 0x82
	0x03C22948 STP W1, W2, [X0]
	0x03C2294C STP V0, V0, [X0 + 0x10]
	0x03C22950 MOVI V0.2S, 0x1
	0x03C22954 MOV W1, W3
	0x03C22958 MOV W19, W5
	0x03C2295C MOV W20, W4
	0x03C22960 MOV W21, W3
	0x03C22964 MOV X22, X0
	0x03C22968 STP W8, W31, [X0 + 0x2C]
	0x03C2296C STR D0, [X0 + 0x8]
	0x03C22970 BL 0x3C2240C
	0x03C22974 MOV W0, W20
	0x03C22978 MOV W1, W21
	0x03C2297C BL 0x3C21994
	0x03C22980 MOVI V0.2S, 0x2
	0x03C22984 STR W0, [X22 + 0x1C]
	0x03C22988 STR W19, [X22 + 0x10]
	0x03C2298C STR W31, [X22 + 0x28]
	0x03C22990 STR D0, [X22 + 0x20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7C3000
	011 Move X25, 0x53E000
	012 Move W8, [X26+3821]
	013 Move X25, [X25+72]
	014 Move W21, W5
	015 Move W20, W4
	016 Move W24, W3
	017 Move W22, W2
	018 Move W23, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x532000
	025 Move X0, [X0+144]
	026 Call 0x1C17CF4
	027 Move X0, 0x53E000
	028 Move X0, [X0+72]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+3821], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Move X1, X31
	039 Call Texture..ctor, X0
	040 Compare W20, 0
	041 JumpIfEqual {56}
	042 Move X0, [X25]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move W2, 4
	048 Move X0, X19
	049 Move W1, W20
	050 Move X3, X31
	051 Call Texture.ValidateFormat, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {156}
	056 Move X26, 0x7C3000
	057 Move X8, [X26+3800]
	058 Compare X8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, -51486720
	061 Add X0, X0, 360
	062 Call 0x1C17CB8
	063 Move X8, X0
	064 Move [X26+3800], X0
	065 Move X0, X19
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move W0, W24
	068 Move W1, W20
	069 Call RenderTexture.GetDepthStencilFormatLegacy, X0, X1
	070 Move X26, 0x7C3000
	071 Move X8, [X26+3672]
	072 Move W24, W0
	073 Compare X8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, -51367936
	076 Add X0, X0, 3143
	077 Call 0x1C17CB8
	078 Move X8, X0
	079 Move [X26+3672], X0
	080 Move X0, X19
	081 Move W1, W24
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X0, [X25]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X8, [X19]
	089 Move X0, X19
	090 Move W1, W23
	091 Move X9, [X8+408]
	092 Move X2, [X8+416]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X8, [X19]
	095 Move X0, X19
	096 Move W1, W22
	097 Move X9, [X8+440]
	098 Move X2, [X8+448]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X22, 0x7C3000
	101 Move X8, [X22+3608]
	102 Compare X8, 0
	103 JumpIfNotEqual {109}
	104 Move X0, -51372032
	105 Add X0, X0, 165
	106 Call 0x1C17CB8
	107 Move X8, X0
	108 Move [X22+3608], X0
	109 Move X22, 0x532000
	110 Move X22, [X22+144]
	111 Move X0, X19
	112 Move W1, W20
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X23, 0x7C3000
	115 Move X8, [X23+3768]
	116 Compare X8, 0
	117 JumpIfNotEqual {123}
	118 Move X0, -51441664
	119 Add X0, X0, 2928
	120 Call 0x1C17CB8
	121 Move X8, X0
	122 Move [X23+3768], X0
	123 Move X0, X19
	124 Move W1, W21
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X0, [X22]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move W0, W20
	132 Move X1, X31
	133 Call GraphicsFormatUtility.IsSRGBFormat, X0
	134 Move X21, 0x7C3000
	135 Move X2, [X21+3792]
	136 Move W20, W0
	137 Compare X2, 0
	138 JumpIfNotEqual {144}
	139 Move X0, -51441664
	140 Add X0, X0, 2984
	141 Call 0x1C17CB8
	142 Move X2, X0
	143 Move [X21+3792], X0
	144 And W1, W20, 1
	145 Move X0, X19
	146 Move X20, [X31+64]
	147 Move X19, [X31+72]
	148 Move X22, [X31+48]
	149 Move X21, [X31+56]
	150 Move X24, [X31+32]
	151 Move X23, [X31+40]
	152 Move X26, [X31+16]
	153 Move X25, [X31+24]
	154 Move X30, [X31+80]
	155 CallNoReturn X2
	156 Move X20, [X31+64]
	157 Move X19, [X31+72]
	158 Move X22, [X31+48]
	159 Move X21, [X31+56]
	160 Move X24, [X31+32]
	161 Move X23, [X31+40]
	162 Move X26, [X31+16]
	163 Move X25, [X31+24]
	164 Move X30, [X31+80]
	165 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat, UnityEngine.Experimental.Rendering.GraphicsFormat depthStencilFormat, System.Int32 mipCount)

Disassembly:
	0x03C224DC MOV X19, X0
	0x03C224E0 TBNZ X8, 0x0, 0x3C224F8
	0x03C224E4 ADRP X0, 0x531000
	0x03C224E8 LDR X0, [X0 + 0x90]
	0x03C224EC BL 0x1C16CF4
	0x03C224F0 MOVZ W8, 0x1
	0x03C224F4 STRB W8, [X21 + 0xF25]
	0x03C224F8 LDR X0, [X20]
	0x03C224FC LDR W19, [X19 + 0x1C]
	0x03C22500 LDR W8, [X0 + 0xE0]
	0x03C22504 CBNZ W8, 0x3C2250C
	0x03C22508 BL 0x1C16DFC
	0x03C2250C MOV W0, W19
	0x03C22510 LDP X20, X19, [X31 + 0x10]
	0x03C22514 MOV X1, X31
	0x03C22518 LDP X30, X21, [X31], #0x20
	0x03C2251C B 0x3C61730
	0x03C22520 STP X30, X19, [X31 - 0x10]!
	0x03C22524 LDR W8, [X0 + 0x14]
	0x03C22528 MOV X19, X0
	0x03C2252C MOV W0, W1
	0x03C22530 MOV W1, W8
	0x03C22534 BL 0x3C21994
	0x03C22538 STR W0, [X19 + 0x1C]
	0x03C2253C LDP X30, X19, [X31], #0x10
	0x03C22540 RET
	0x03C22544 STR W1, [X0 + 0x18]
	0x03C22548 RET
	0x03C2254C LDR W0, [X0 + 0x1C]
	0x03C22550 RET
	0x03C22554 STR W1, [X0 + 0x1C]
	0x03C22558 RET
	0x03C2255C STR X30, [X31 - 0x20]!
	0x03C22560 STP X20, X19, [X31 + 0x10]
	0x03C22564 ADRP X19, 0x7C2000
	0x03C22568 LDRB W8, [X19 + 0xF21]
	0x03C2256C MOV X20, X0
	0x03C22570 TBNZ X8, 0x0, 0x3C22588
	0x03C22574 ADRP X0, 0x531000
	0x03C22578 LDR X0, [X0 + 0x90]
	0x03C2257C BL 0x1C16CF4
	0x03C22580 MOVZ W8, 0x1
	0x03C22584 STRB W8, [X19 + 0xF21]
	0x03C22588 LDR W19, [X20 + 0x14]
	0x03C2258C CBZ W19, 0x3C225BC
	0x03C22590 ADRP X8, 0x531000
	0x03C22594 LDR X8, [X8 + 0x90]
	0x03C22598 LDR X0, [X8]
	0x03C2259C LDR W8, [X0 + 0xE0]
	0x03C225A0 CBNZ W8, 0x3C225A8
	0x03C225A4 BL 0x1C16DFC
	0x03C225A8 MOV W0, W19
	0x03C225AC LDP X20, X19, [X31 + 0x10]
	0x03C225B0 MOV X1, X31
	0x03C225B4 LDR X30, [X31], #0x20
	0x03C225B8 B 0x3C61A18
	0x03C225BC LDR W8, [X20 + 0x24]
	0x03C225C0 LDP X20, X19, [X31 + 0x10]
	0x03C225C4 CMP W8, 0x2
	0x03C225C8 MOVZ W8, 0x3
	0x03C225CC CSINC W0, W8, W31, NE
	0x03C225D0 LDR X30, [X31], #0x20
	0x03C225D4 RET
	0x03C225D8 STR X30, [X31 - 0x30]!
	0x03C225DC STP X22, X21, [X31 + 0x10]
	0x03C225E0 STP X20, X19, [X31 + 0x20]
	0x03C225E4 ADRP X22, 0x7C2000
	0x03C225E8 ADRP X21, 0x531000
	0x03C225EC LDRB W8, [X22 + 0xF22]
	0x03C225F0 LDR X21, [X21 + 0x90]
	0x03C225F4 MOV W20, W1
	0x03C225F8 MOV X19, X0
	0x03C225FC TBNZ X8, 0x0, 0x3C22614
	0x03C22600 ADRP X0, 0x531000
	0x03C22604 LDR X0, [X0 + 0x90]
	0x03C22608 BL 0x1C16CF4
	0x03C2260C MOVZ W8, 0x1
	0x03C22610 STRB W8, [X22 + 0xF22]
	0x03C22614 MOV X0, X19
	0x03C22618 BL 0x3C22668
	0x03C2261C LDR X8, [X21]
	0x03C22620 MOV W21, W0
	0x03C22624 LDR W9, [X8 + 0xE0]
	0x03C22628 CBNZ W9, 0x3C22634
	0x03C2262C MOV X0, X8
	0x03C22630 BL 0x1C16DFC
	0x03C22634 AND W1, W21, 0x1
	0x03C22638 MOV W0, W20
	0x03C2263C MOV X2, X31
	0x03C22640 BL 0x3C61530
	0x03C22644 MOVZ W1, 0x4
	0x03C22648 MOV X2, X31
	0x03C2264C BL 0x3C3C500
	0x03C22650 MOV W1, W0
	0x03C22654 MOV X0, X19
	0x03C22658 LDP X20, X19, [X31 + 0x20]
	0x03C2265C LDP X22, X21, [X31 + 0x10]
	0x03C22660 LDR X30, [X31], #0x30
	0x03C22664 B 0x3C2240C
	0x03C22668 STP X30, X21, [X31 - 0x20]!
	0x03C2266C STP X20, X19, [X31 + 0x10]
	0x03C22670 ADRP X21, 0x7C2000
	0x03C22674 ADRP X20, 0x531000
	0x03C22678 LDRB W8, [X21 + 0xF23]
	0x03C2267C LDR X20, [X20 + 0x90]
	0x03C22680 MOV X19, X0
	0x03C22684 TBNZ X8, 0x0, 0x3C2269C
	0x03C22688 ADRP X0, 0x531000
	0x03C2268C LDR X0, [X0 + 0x90]
	0x03C22690 BL 0x1C16CF4
	0x03C22694 MOVZ W8, 0x1
	0x03C22698 STRB W8, [X21 + 0xF23]
	0x03C2269C LDR X0, [X20]
	0x03C226A0 LDR W19, [X19 + 0x14]
	0x03C226A4 LDR W8, [X0 + 0xE0]
	0x03C226A8 CBNZ W8, 0x3C226B0
	0x03C226AC BL 0x1C16DFC
	0x03C226B0 MOV W0, W19
	0x03C226B4 LDP X20, X19, [X31 + 0x10]
	0x03C226B8 MOV X1, X31
	0x03C226BC LDP X30, X21, [X31], #0x20
	0x03C226C0 B 0x3C61964
	0x03C226C4 STP X30, X23, [X31 - 0x30]!
	0x03C226C8 STP X22, X21, [X31 + 0x10]
	0x03C226CC STP X20, X19, [X31 + 0x20]
	0x03C226D0 ADRP X20, 0x7C2000
	0x03C226D4 LDRB W8, [X20 + 0xF24]
	0x03C226D8 MOV W21, W1
	0x03C226DC MOV X19, X0
	0x03C226E0 TBNZ X8, 0x0, 0x3C226F8
	0x03C226E4 ADRP X0, 0x531000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7C3000
	011 Move X25, 0x53E000
	012 Move W8, [X26+3822]
	013 Move X25, [X25+72]
	014 Move W21, W5
	015 Move W22, W4
	016 Move W20, W3
	017 Move W23, W2
	018 Move W24, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x532000
	025 Move X0, [X0+144]
	026 Call 0x1C17CF4
	027 Move X0, 0x53E000
	028 Move X0, [X0+72]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+3822], W8
	032 Move X0, [X25]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Move X1, X31
	039 Call Texture..ctor, X0
	040 Compare W20, 0
	041 JumpIfEqual {56}
	042 Move X0, [X25]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move W2, 4
	048 Move X0, X19
	049 Move W1, W20
	050 Move X3, X31
	051 Call Texture.ValidateFormat, X0, X1, X2
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {152}
	056 Move X26, 0x7C3000
	057 Move X8, [X26+3800]
	058 Compare X8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, -51486720
	061 Add X0, X0, 360
	062 Call 0x1C17CB8
	063 Move X8, X0
	064 Move [X26+3800], X0
	065 Move X0, X19
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X0, [X25]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X8, [X19]
	073 Move X0, X19
	074 Move W1, W24
	075 Move X9, [X8+408]
	076 Move X2, [X8+416]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X19]
	079 Move X0, X19
	080 Move W1, W23
	081 Move X9, [X8+440]
	082 Move X2, [X8+448]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X23, 0x7C3000
	085 Move X8, [X23+3672]
	086 Compare X8, 0
	087 JumpIfNotEqual {93}
	088 Move X0, -51367936
	089 Add X0, X0, 3143
	090 Call 0x1C17CB8
	091 Move X8, X0
	092 Move [X23+3672], X0
	093 Move X0, X19
	094 Move W1, W22
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X22, 0x7C3000
	097 Move X8, [X22+3608]
	098 Compare X8, 0
	099 JumpIfNotEqual {105}
	100 Move X0, -51372032
	101 Add X0, X0, 165
	102 Call 0x1C17CB8
	103 Move X8, X0
	104 Move [X22+3608], X0
	105 Move X22, 0x532000
	106 Move X22, [X22+144]
	107 Move X0, X19
	108 Move W1, W20
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X23, 0x7C3000
	111 Move X8, [X23+3768]
	112 Compare X8, 0
	113 JumpIfNotEqual {119}
	114 Move X0, -51441664
	115 Add X0, X0, 2928
	116 Call 0x1C17CB8
	117 Move X8, X0
	118 Move [X23+3768], X0
	119 Move X0, X19
	120 Move W1, W21
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X0, [X22]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move W0, W20
	128 Move X1, X31
	129 Call GraphicsFormatUtility.IsSRGBFormat, X0
	130 Move X21, 0x7C3000
	131 Move X2, [X21+3792]
	132 Move W20, W0
	133 Compare X2, 0
	134 JumpIfNotEqual {140}
	135 Move X0, -51441664
	136 Add X0, X0, 2984
	137 Call 0x1C17CB8
	138 Move X2, X0
	139 Move [X21+3792], X0
	140 And W1, W20, 1
	141 Move X0, X19
	142 Move X20, [X31+64]
	143 Move X19, [X31+72]
	144 Move X22, [X31+48]
	145 Move X21, [X31+56]
	146 Move X24, [X31+32]
	147 Move X23, [X31+40]
	148 Move X26, [X31+16]
	149 Move X25, [X31+24]
	150 Move X30, [X31+80]
	151 CallNoReturn X2
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X26, [X31+16]
	159 Move X25, [X31+24]
	160 Move X30, [X31+80]
	161 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat, UnityEngine.Experimental.Rendering.GraphicsFormat depthStencilFormat)

Disassembly:
	0x03C22A18 MOV W1, W25
	0x03C22A1C MOV X2, X31
	0x03C22A20 BL 0x3C615F8
	0x03C22A24 MOVZ W1, 0x4
	0x03C22A28 MOV X2, X31
	0x03C22A2C BL 0x3C3C500
	0x03C22A30 CMP W24, 0x3
	0x03C22A34 MOV W25, W0
	0x03C22A38 CSET W1, EQ
	0x03C22A3C MOV W0, W23
	0x03C22A40 BL 0x3C21FD4
	0x03C22A44 MOV W23, W0
	0x03C22A48 MOVI V0.2D, 0x0
	0x03C22A4C MOVZ W8, 0x82
	0x03C22A50 MOVI V1.2S, 0x1
	0x03C22A54 ADD X0, X31, 0x8
	0x03C22A58 MOV W1, W25
	0x03C22A5C STP W22, W21, [X31 + 0x8]
	0x03C22A60 STUR V0, [X31 + 0x28]
	0x03C22A64 STUR V0, [X31 + 0x18]
	0x03C22A68 STP W8, W31, [X31 + 0x34]
	0x03C22A6C STR D1, [X31 + 0x10]
	0x03C22A70 BL 0x3C2240C
	0x03C22A74 MOVI V0.2S, 0x2
	0x03C22A78 STR W23, [X31 + 0x24]
	0x03C22A7C STR W20, [X31 + 0x18]
	0x03C22A80 STR W31, [X31 + 0x30]
	0x03C22A84 STR D0, [X31 + 0x28]
	0x03C22A88 LDUR V0, [X31 + 0x28]
	0x03C22A8C LDUR V1, [X31 + 0x8]
	0x03C22A90 LDUR V2, [X31 + 0x18]
	0x03C22A94 STR W31, [X31 + 0x38]
	0x03C22A98 STR W31, [X19 + 0x30]
	0x03C22A9C STR V1, [X19]
	0x03C22AA0 STP V2, V0, [X19 + 0x10]
	0x03C22AA4 LDP X20, X19, [X31 + 0x80]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C3000
	010 Move X24, 0x53E000
	011 Move W8, [X25+3823]
	012 Move X24, [X24+72]
	013 Move W19, W4
	014 Move W20, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x53E000
	023 Move X0, [X0+72]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3823], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X24]
	033 Move X8, [X0+184]
	034 Move X0, X23
	035 Move W1, W22
	036 Move W2, W21
	037 Move W5, [X8]
	038 Move W3, W20
	039 Move W4, W19
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X30, [X31+64]
	047 Move X25, [X31+72]
	048 Call RenderTexture..ctor, X0, X1, X2, X3, X4, X5
	049 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.RenderTextureFormat format, UnityEngine.RenderTextureReadWrite readWrite)

Disassembly:
	0x03C22AA8 LDP X22, X21, [X31 + 0x70]
	0x03C22AAC LDP X24, X23, [X31 + 0x60]
	0x03C22AB0 LDP X26, X25, [X31 + 0x50]
	0x03C22AB4 LDP X30, X27, [X31 + 0x40]
	0x03C22AB8 ADD X31, X31, 0x90
	0x03C22ABC RET
	0x03C22AC0 STP X30, X21, [X31 - 0x20]!
	0x03C22AC4 STP X20, X19, [X31 + 0x10]
	0x03C22AC8 MOVI V0.2D, 0x0
	0x03C22ACC MOVZ W8, 0x82
	0x03C22AD0 STP W1, W2, [X0]
	0x03C22AD4 STP V0, V0, [X0 + 0x10]
	0x03C22AD8 MOVI V0.2S, 0x1
	0x03C22ADC MOV W1, W3
	0x03C22AE0 MOV W19, W5
	0x03C22AE4 MOV W20, W4
	0x03C22AE8 MOV X21, X0
	0x03C22AEC STP W8, W31, [X0 + 0x2C]
	0x03C22AF0 STR D0, [X0 + 0x8]
	0x03C22AF4 BL 0x3C2240C
	0x03C22AF8 STR W20, [X21 + 0x1C]
	0x03C22AFC STR W19, [X21 + 0x10]
	0x03C22B00 LDP X20, X19, [X31 + 0x10]
	0x03C22B04 MOVI V0.2S, 0x2
	0x03C22B08 STR W31, [X21 + 0x28]
	0x03C22B0C STR D0, [X21 + 0x20]
	0x03C22B10 STR W31, [X21 + 0x30]
	0x03C22B14 LDP X30, X21, [X31], #0x20
	0x03C22B18 RET
	0x03C22B1C LDR W8, [X0 + 0x2C]
	0x03C22B20 AND W0, W8, 0x1
	0x03C22B24 RET
	0x03C22B28 LDR W8, [X0 + 0x2C]
	0x03C22B2C BFM W8, W1, 0x0, 0x0
	0x03C22B30 STR W8, [X0 + 0x2C]
	0x03C22B34 RET
	0x03C22B38 LDRB W8, [X0 + 0x2C]
	0x03C22B3C UBFM W0, W8, 0x1, 0x1
	0x03C22B40 RET
	0x03C22B44 LDR W8, [X0 + 0x2C]
	0x03C22B48 ANDS W31, W1, 0x1
	0x03C22B4C MOVZ W9, 0x2
	0x03C22B50 CSEL W9, W9, W31, NE

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7C3000
	011 Move X25, 0x53E000
	012 Move W8, [X26+3824]
	013 Move X25, [X25+72]
	014 Move W19, W5
	015 Move W20, W4
	016 Move W21, W3
	017 Move W22, W2
	018 Move W23, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x53E000
	025 Move X0, [X0+72]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+3824], W8
	029 Move X0, [X25]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X24
	035 Move X1, X31
	036 Call Texture..ctor, X0
	037 Move X8, [X25]
	038 Move X0, X24
	039 Move W1, W23
	040 Move W2, W22
	041 Move X8, [X8+184]
	042 Move W3, W21
	043 Move W4, W20
	044 Move W5, W19
	045 Move W6, [X8]
	046 Move X20, [X31+64]
	047 Move X19, [X31+72]
	048 Move X22, [X31+48]
	049 Move X21, [X31+56]
	050 Move X24, [X31+32]
	051 Move X23, [X31+40]
	052 Move X26, [X31+16]
	053 Move X25, [X31+24]
	054 Move X30, [X31+80]

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.RenderTextureFormat format)

Disassembly:
	0x03C22D38 ADRP X21, 0x7C2000
	0x03C22D3C LDR X2, [X21 + 0xF30]
	0x03C22D40 MOV X19, X1
	0x03C22D44 MOV X20, X0
	0x03C22D48 CBNZ X2, 0x3C22D60
	0x03C22D4C ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C22D50 ADD X0, X0, 0x203
	0x03C22D54 BL 0x1C16CB8
	0x03C22D58 MOV X2, X0
	0x03C22D5C STR X0, [X21 + 0xF30]
	0x03C22D60 MOV X0, X20
	0x03C22D64 MOV X1, X19
	0x03C22D68 LDP X20, X19, [X31 + 0x10]
	0x03C22D6C LDP X30, X21, [X31], #0x20
	0x03C22D70 BR X2
	0x03C22D74 STR X30, [X31 - 0x20]!
	0x03C22D78 STP X20, X19, [X31 + 0x10]
	0x03C22D7C ADRP X20, 0x7C2000
	0x03C22D80 LDR X1, [X20 + 0xF38]
	0x03C22D84 MOV X19, X0
	0x03C22D88 CBNZ X1, 0x3C22DA0
	0x03C22D8C ADRP X0, 0xFFFFFFFFFCED1000
	0x03C22D90 ADD X0, X0, 0xE2
	0x03C22D94 BL 0x1C16CB8
	0x03C22D98 MOV X1, X0
	0x03C22D9C STR X0, [X20 + 0xF38]
	0x03C22DA0 MOV X0, X19
	0x03C22DA4 LDP X20, X19, [X31 + 0x10]
	0x03C22DA8 LDR X30, [X31], #0x20
	0x03C22DAC BR X1
	0x03C22DB0 STP X30, X21, [X31 - 0x20]!
	0x03C22DB4 STP X20, X19, [X31 + 0x10]
	0x03C22DB8 ADRP X21, 0x7C2000
	0x03C22DBC LDRB W8, [X21 + 0xF2A]
	0x03C22DC0 MOV X19, X1
	0x03C22DC4 MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C3000
	010 Move X24, 0x53E000
	011 Move W8, [X25+3825]
	012 Move X24, [X24+72]
	013 Move W19, W4
	014 Move W20, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x53E000
	023 Move X0, [X0+72]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3825], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X24]
	033 Move X8, [X0+184]
	034 Move X0, X23
	035 Move W1, W22
	036 Move W2, W21
	037 Move W5, [X8]
	038 Move W3, W20
	039 Move W4, W19
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X30, [X31+64]
	047 Move X25, [X31+72]

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth)

Disassembly:
	0x03C22E6C STP X20, X19, [X31 + 0x10]
	0x03C22E70 MOV X1, X31

ISIL:
	001 Move W4, 7
	002 Call RenderTexture..ctor, X0, X1, X2, X3, X4
	003 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.RenderTextureFormat format, System.Int32 mipCount)

Disassembly:
	0x03C22DC8 TBNZ X8, 0x0, 0x3C22DE0
	0x03C22DCC ADRP X0, 0x4FC000
	0x03C22DD0 LDR X0, [X0 + 0xE10]
	0x03C22DD4 BL 0x1C16CF4
	0x03C22DD8 MOVZ W8, 0x1
	0x03C22DDC STRB W8, [X21 + 0xF2A]
	0x03C22DE0 CBZ X19, 0x3C22DFC
	0x03C22DE4 ADRP X8, 0x4FC000
	0x03C22DE8 LDR X8, [X8 + 0xE10]
	0x03C22DEC LDR X9, [X19]
	0x03C22DF0 LDR X8, [X8]
	0x03C22DF4 CMP X9, X8
	0x03C22DF8 B.EQ 0x3C22E04
	0x03C22DFC MOV W0, W31
	0x03C22E00 B 0x3C22E28
	0x03C22E04 LDP X20, X21, [X20]
	0x03C22E08 MOV X0, X19
	0x03C22E0C BL 0x1C16E08
	0x03C22E10 LDP X8, X9, [X0]
	0x03C22E14 CMP X20, X8
	0x03C22E18 CSET W8, EQ
	0x03C22E1C CMP X21, X9
	0x03C22E20 CSET W9, EQ
	0x03C22E24 AND W0, W8, W9, 0x0
	0x03C22E28 LDP X20, X19, [X31 + 0x10]
	0x03C22E2C LDP X30, X21, [X31], #0x20
	0x03C22E30 RET
	0x03C22E34 CMP X0, X2
	0x03C22E38 CSET W8, EQ
	0x03C22E3C CMP X1, X3
	0x03C22E40 CSET W9, EQ
	0x03C22E44 AND W0, W8, W9, 0x0
	0x03C22E48 RET
	0x03C22E4C LDP X8, X9, [X0]
	0x03C22E50 CMP X8, X1
	0x03C22E54 CSET W8, EQ
	0x03C22E58 CMP X9, X2
	0x03C22E5C CSET W9, EQ
	0x03C22E60 AND W0, W8, W9, 0x0
	0x03C22E64 RET
	0x03C22E68 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x7C3000
	011 Move X26, 0x53E000
	012 Move W8, [X25+3826]
	013 Move X26, [X26+72]
	014 Move W19, W5
	015 Move W20, W4
	016 Move W21, W3
	017 Move W22, W2
	018 Move W23, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x53E000
	025 Move X0, [X0+72]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+3826], W8
	029 Move X0, [X26]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X24
	035 Move X1, X31
	036 Call Texture..ctor, X0
	037 Move X0, X24
	038 Move W1, W23
	039 Move W2, W22
	040 Move W3, W21
	041 Move W4, W20
	042 Move W6, W19
	043 Move X20, [X31+64]
	044 Move X19, [X31+72]
	045 Move X22, [X31+48]
	046 Move X21, [X31+56]
	047 Move X24, [X31+32]
	048 Move X23, [X31+40]
	049 Move X26, [X31+16]
	050 Move X25, [X31+24]
	051 Move W5, W31
	052 Move X30, [X31+80]
	053 Call RenderTexture.Initialize, X0, X1, X2, X3, X4, X5, X6
	054 Return 

Method: System.Void Initialize(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.RenderTextureFormat format, UnityEngine.RenderTextureReadWrite readWrite, System.Int32 mipCount)

Disassembly:
	0x03C22B54 AND W8, W8, 0xFFFFFFFD
	0x03C22B58 ORR W8, W8, W9, 0x0
	0x03C22B5C STR W8, [X0 + 0x2C]
	0x03C22B60 RET
	0x03C22B64 LDRB W8, [X0 + 0x2C]
	0x03C22B68 UBFM W0, W8, 0x4, 0x4
	0x03C22B6C RET
	0x03C22B70 LDR W8, [X0 + 0x2C]
	0x03C22B74 ANDS W31, W1, 0x1
	0x03C22B78 MOVZ W9, 0x10
	0x03C22B7C CSEL W9, W9, W31, NE
	0x03C22B80 AND W8, W8, 0xFFFFFFEF
	0x03C22B84 ORR W8, W8, W9, 0x0
	0x03C22B88 STR W8, [X0 + 0x2C]
	0x03C22B8C RET
	0x03C22B90 LDRB W8, [X0 + 0x2D]
	0x03C22B94 UBFM W0, W8, 0x3, 0x3
	0x03C22B98 RET
	0x03C22B9C LDR W8, [X0 + 0x2C]
	0x03C22BA0 ANDS W31, W1, 0x1
	0x03C22BA4 MOVZ W9, 0x800
	0x03C22BA8 CSEL W9, W9, W31, NE
	0x03C22BAC AND W8, W8, 0xFFFFF7FF
	0x03C22BB0 ORR W8, W8, W9, 0x0
	0x03C22BB4 STR W8, [X0 + 0x2C]
	0x03C22BB8 RET
	0x03C22BBC LDRB W8, [X0 + 0x2D]
	0x03C22BC0 UBFM W0, W8, 0x2, 0x2
	0x03C22BC4 RET
	0x03C22BC8 MOV W8, W1
	0x03C22BCC MOV W9, W3
	0x03C22BD0 BFM X8, X2, 0x20, 0x1F
	0x03C22BD4 BFM X9, X4, 0x20, 0x1F
	0x03C22BD8 STP X8, X9, [X0]
	0x03C22BDC RET
	0x03C22BE0 STP X1, X2, [X0]
	0x03C22BE4 RET
	0x03C22BE8 LDP X8, X9, [X0]
	0x03C22BEC CMP X9, X2
	0x03C22BF0 CSET W10, CS
	0x03C22BF4 CMP X8, X1
	0x03C22BF8 CSET W11, CS
	0x03C22BFC CSEL W10, W10, W11, EQ
	0x03C22C00 CMP W10, 0x1
	0x03C22C04 B.NE 0x3C22C34
	0x03C22C08 CMP X9, X2
	0x03C22C0C CSET W9, CC
	0x03C22C10 CSET W10, EQ
	0x03C22C14 CMP X8, X1
	0x03C22C18 CSET W8, EQ
	0x03C22C1C CSET W11, CC
	0x03C22C20 CSEL W9, W9, W11, EQ
	0x03C22C24 AND W8, W8, W10, 0x0
	0x03C22C28 ORR W8, W9, W8, 0x0
	0x03C22C2C EOR W0, W8, 0x1
	0x03C22C30 RET
	0x03C22C34 MOVN W0, 0x0
	0x03C22C38 RET
	0x03C22C3C CMP X1, X3
	0x03C22C40 CSET W8, CC
	0x03C22C44 CMP X0, X2
	0x03C22C48 CSET W9, CC
	0x03C22C4C CSEL W0, W8, W9, EQ
	0x03C22C50 RET
	0x03C22C54 CMP X1, X3
	0x03C22C58 CSET W8, CS
	0x03C22C5C CMP X0, X2
	0x03C22C60 CSET W9, CS
	0x03C22C64 CSEL W8, W8, W9, EQ
	0x03C22C68 CMP W8, 0x1
	0x03C22C6C B.NE 0x3C22C88
	0x03C22C70 CMP X0, X2
	0x03C22C74 CSET W8, NE
	0x03C22C78 CMP X1, X3
	0x03C22C7C CSET W9, NE
	0x03C22C80 ORR W0, W8, W9, 0x0
	0x03C22C84 RET
	0x03C22C88 MOV W0, W31
	0x03C22C8C RET
	0x03C22C90 LDP X8, X1, [X0]
	0x03C22C94 MOV X0, X8
	0x03C22C98 B 0x3C22C9C
	0x03C22C9C SUB X31, X31, 0x20
	0x03C22CA0 STP X30, X19, [X31 + 0x10]
	0x03C22CA4 ADRP X19, 0x7C2000
	0x03C22CA8 LDR X8, [X19 + 0xF38]
	0x03C22CAC STP X0, X1, [X31]
	0x03C22CB0 CBNZ X8, 0x3C22CC8
	0x03C22CB4 ADRP X0, 0xFFFFFFFFFCED1000
	0x03C22CB8 ADD X0, X0, 0xE2
	0x03C22CBC BL 0x1C16CB8
	0x03C22CC0 MOV X8, X0
	0x03C22CC4 STR X0, [X19 + 0xF38]
	0x03C22CC8 ADD X0, X31, 0x0
	0x03C22CCC BLR X8
	0x03C22CD0 LDP X30, X19, [X31 + 0x10]
	0x03C22CD4 ADD X31, X31, 0x20
	0x03C22CD8 RET
	0x03C22CDC SUB X31, X31, 0x30
	0x03C22CE0 STP X31, X30, [X31 + 0x8]
	0x03C22CE4 STP X20, X19, [X31 + 0x20]
	0x03C22CE8 ADRP X20, 0x7C2000
	0x03C22CEC LDR X8, [X20 + 0xF30]
	0x03C22CF0 MOV X19, X0
	0x03C22CF4 STR X31, [X31]
	0x03C22CF8 CBNZ X8, 0x3C22D10
	0x03C22CFC ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C22D00 ADD X0, X0, 0x203
	0x03C22D04 BL 0x1C16CB8
	0x03C22D08 MOV X8, X0
	0x03C22D0C STR X0, [X20 + 0xF30]
	0x03C22D10 ADD X1, X31, 0x0
	0x03C22D14 MOV X0, X19
	0x03C22D18 BLR X8
	0x03C22D1C LDP X0, X1, [X31]
	0x03C22D20 LDP X20, X19, [X31 + 0x20]
	0x03C22D24 LDR X30, [X31 + 0x10]
	0x03C22D28 ADD X31, X31, 0x30
	0x03C22D2C RET
	0x03C22D30 STP X30, X21, [X31 - 0x20]!
	0x03C22D34 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7C3000
	011 Move W8, [X26+3827]
	012 Move W20, W6
	013 Move W21, W5
	014 Move W25, W4
	015 Move W23, W3
	016 Move W22, W2
	017 Move W24, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x532000
	024 Move X0, [X0+144]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X26+3827], W8
	028 Move W0, W25
	029 Move W1, W21
	030 Call RenderTexture.GetCompatibleFormat, X0, X1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W21, W0
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move W0, W23
	035 Call RenderTexture.GetDepthStencilFormatLegacy, X0, X1
	036 Move W23, W0
	037 Compare W21, 0
	038 JumpIfEqual {48}
	039 Move W2, 4
	040 Move X0, X19
	041 Move W1, W21
	042 Move X3, X31
	043 Call Texture.ValidateFormat, X0, X1, X2
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {139}
	048 Move X25, 0x7C3000
	049 Move X8, [X25+3800]
	050 Compare X8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, -51486720
	053 Add X0, X0, 360
	054 Call 0x1C17CB8
	055 Move X8, X0
	056 Move [X25+3800], X0
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X19]
	060 Move X0, X19
	061 Move W1, W24
	062 Move X9, [X8+408]
	063 Move X2, [X8+416]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, [X19]
	066 Move X0, X19
	067 Move W1, W22
	068 Move X9, [X8+440]
	069 Move X2, [X8+448]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X22, 0x7C3000
	072 Move X8, [X22+3672]
	073 Compare X8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, -51367936
	076 Add X0, X0, 3143
	077 Call 0x1C17CB8
	078 Move X8, X0
	079 Move [X22+3672], X0
	080 Move X0, X19
	081 Move W1, W23
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X22, 0x7C3000
	084 Move X8, [X22+3608]
	085 Compare X8, 0
	086 JumpIfNotEqual {92}
	087 Move X0, -51372032
	088 Add X0, X0, 165
	089 Call 0x1C17CB8
	090 Move X8, X0
	091 Move [X22+3608], X0
	092 Move X22, 0x532000
	093 Move X22, [X22+144]
	094 Move X0, X19
	095 Move W1, W21
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X23, 0x7C3000
	098 Move X8, [X23+3768]
	099 Compare X8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, -51441664
	102 Add X0, X0, 2928
	103 Call 0x1C17CB8
	104 Move X8, X0
	105 Move [X23+3768], X0
	106 Move X0, X19
	107 Move W1, W20
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X0, [X22]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move W0, W21
	115 Move X1, X31
	116 Call GraphicsFormatUtility.IsSRGBFormat, X0
	117 Move X21, 0x7C3000
	118 Move X2, [X21+3792]
	119 Move W20, W0
	120 Compare X2, 0
	121 JumpIfNotEqual {127}
	122 Move X0, -51441664
	123 Add X0, X0, 2984
	124 Call 0x1C17CB8
	125 Move X2, X0
	126 Move [X21+3792], X0
	127 And W1, W20, 1
	128 Move X0, X19
	129 Move X20, [X31+64]
	130 Move X19, [X31+72]
	131 Move X22, [X31+48]
	132 Move X21, [X31+56]
	133 Move X24, [X31+32]
	134 Move X23, [X31+40]
	135 Move X26, [X31+16]
	136 Move X25, [X31+24]
	137 Move X30, [X31+80]
	138 CallNoReturn X2
	139 Move X20, [X31+64]
	140 Move X19, [X31+72]
	141 Move X22, [X31+48]
	142 Move X21, [X31+56]
	143 Move X24, [X31+32]
	144 Move X23, [X31+40]
	145 Move X26, [X31+16]
	146 Move X25, [X31+24]
	147 Move X30, [X31+80]
	148 Return 

Method: UnityEngine.Experimental.Rendering.GraphicsFormat GetDepthStencilFormatLegacy(System.Int32 depthBits, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat)

Disassembly:
	0x03C22994 STR W31, [X22 + 0x30]
	0x03C22998 LDP X20, X19, [X31 + 0x20]
	0x03C2299C LDP X22, X21, [X31 + 0x10]
	0x03C229A0 LDR X30, [X31], #0x30
	0x03C229A4 RET
	0x03C229A8 SUB X31, X31, 0x90
	0x03C229AC STP X30, X27, [X31 + 0x40]
	0x03C229B0 STP X26, X25, [X31 + 0x50]
	0x03C229B4 STP X24, X23, [X31 + 0x60]
	0x03C229B8 STP X22, X21, [X31 + 0x70]
	0x03C229BC STP X20, X19, [X31 + 0x80]
	0x03C229C0 ADRP X26, 0x7C2000
	0x03C229C4 ADRP X27, 0x531000
	0x03C229C8 LDRB W8, [X26 + 0xF28]
	0x03C229CC LDR X27, [X27 + 0x90]
	0x03C229D0 MOV W25, W6
	0x03C229D4 MOV W20, W5
	0x03C229D8 MOV W23, W4
	0x03C229DC MOV W24, W3
	0x03C229E0 MOV W21, W2
	0x03C229E4 MOV W22, W1
	0x03C229E8 MOV X19, X0
	0x03C229EC TBNZ X8, 0x0, 0x3C22A04
	0x03C229F0 ADRP X0, 0x531000
	0x03C229F4 LDR X0, [X0 + 0x90]
	0x03C229F8 BL 0x1C16CF4
	0x03C229FC MOVZ W8, 0x1
	0x03C22A00 STRB W8, [X26 + 0xF28]
	0x03C22A04 LDR X0, [X27]
	0x03C22A08 LDR W8, [X0 + 0xE0]
	0x03C22A0C CBNZ W8, 0x3C22A14
	0x03C22A10 BL 0x1C16DFC
	0x03C22A14 MOV W0, W24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7C3000
	007 Move X22, 0x532000
	008 Move W8, [X21+3828]
	009 Move X22, [X22+144]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x532000
	017 Move X0, [X0+144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3828], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W19
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move W1, W31
	033 Move X2, X31
	034 Move X30, [X31+48]
	035 Call GraphicsFormatUtility.GetDepthStencilFormat, X0, X1
	036 Return X0
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X1, X31
	042 Move X30, [X31+48]
	043 Call GraphicsFormatUtility.GetDepthStencilFormat, X0
	044 Return X0

Method: UnityEngine.Experimental.Rendering.GraphicsFormat GetDepthStencilFormatLegacy(System.Int32 depthBits, UnityEngine.RenderTextureFormat format)

Disassembly:
	0x03C22FC8 MOV X20, X2
	0x03C22FCC MOV X21, X1
	0x03C22FD0 MOV X22, X0

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."

Method: UnityEngine.Experimental.Rendering.GraphicsFormat GetDepthStencilFormatLegacy(System.Int32 depthBits, UnityEngine.Experimental.Rendering.DefaultFormat format)

Disassembly:
	0x03C23054 STUR X8, [X29 - 0x8]
	0x03C23058 LDRB W8, [X19 + 0xF42]
	0x03C2305C MOV X23, X1

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Call RenderTexture.GetDepthStencilFormatLegacy, X0, X1
	004 Return X0

Method: UnityEngine.Experimental.Rendering.GraphicsFormat GetDepthStencilFormatLegacy(System.Int32 depthBits, System.Boolean requestedShadowMap)

Disassembly:
	0x03C22FD4 TBNZ X8, 0x0, 0x3C22FEC
	0x03C22FD8 ADRP X0, 0x53D000
	0x03C22FDC LDR X0, [X0 + 0x230]
	0x03C22FE0 BL 0x1C16CF4
	0x03C22FE4 MOVZ W8, 0x1
	0x03C22FE8 STRB W8, [X23 + 0xF40]
	0x03C22FEC LDR X0, [X24]
	0x03C22FF0 LDR W8, [X0 + 0xE0]
	0x03C22FF4 CBNZ W8, 0x3C22FFC
	0x03C22FF8 BL 0x1C16DFC
	0x03C22FFC MOV X0, X22
	0x03C23000 MOV X1, X21
	0x03C23004 MOV X2, X20
	0x03C23008 MOV X3, X19
	0x03C2300C LDP X20, X19, [X31 + 0x30]
	0x03C23010 LDP X22, X21, [X31 + 0x20]
	0x03C23014 LDP X24, X23, [X31 + 0x10]
	0x03C23018 LDR X30, [X31], #0x40
	0x03C2301C B 0x3C23020
	0x03C23020 STP X29, X30, [X31 - 0x60]!
	0x03C23024 STP X28, X27, [X31 + 0x10]
	0x03C23028 STP X26, X25, [X31 + 0x20]
	0x03C2302C STP X24, X23, [X31 + 0x30]
	0x03C23030 STP X22, X21, [X31 + 0x40]
	0x03C23034 STP X20, X19, [X31 + 0x50]
	0x03C23038 ADD X29, X31, 0x0
	0x03C2303C SUB X31, X31, 0x80
	0x03C23040 MRS X20, 0xC000
	0x03C23044 LDR X8, [X20 + 0x28]
	0x03C23048 ADRP X19, 0x7C1000
	0x03C2304C MOV X24, X3
	0x03C23050 MOV X25, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7C3000
	007 Move X21, 0x532000
	008 Move W8, [X22+3829]
	009 Move X21, [X21+144]
	010 Move W20, W1
	011 Move W19, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x532000
	017 Move X0, [X0+144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3829], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W19
	027 Move TEMP, X20
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {40}
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move W1, W31
	036 Move X2, X31
	037 Move X30, [X31+48]
	038 Call GraphicsFormatUtility.GetDepthStencilFormat, X0, X1
	039 Return X0
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X1, X31
	045 Move X30, [X31+48]
	046 Call GraphicsFormatUtility.GetDepthStencilFormat, X0
	047 Return X0

Method: UnityEngine.RenderTextureDescriptor get_descriptor()

Disassembly:
	0x03C22334 BL 0x3C2227C
	0x03C22338 LDR X30, [X31 + 0x10]
	0x03C2233C ADD X31, X31, 0x20
	0x03C22340 RET
	0x03C22344 SUB X31, X31, 0x20
	0x03C22348 STR X30, [X31 + 0x10]
	0x03C2234C MOV W6, W31
	0x03C22350 MOV W7, W31
	0x03C22354 STRB W31, [X31]
	0x03C22358 BL 0x3C2227C
	0x03C2235C LDR X30, [X31 + 0x10]
	0x03C22360 ADD X31, X31, 0x20
	0x03C22364 RET
	0x03C22368 SUB X31, X31, 0x20
	0x03C2236C STR X30, [X31 + 0x10]
	0x03C22370 MOVZ W5, 0x1
	0x03C22374 MOV W6, W31
	0x03C22378 MOV W7, W31
	0x03C2237C STRB W31, [X31]
	0x03C22380 BL 0x3C2227C
	0x03C22384 LDR X30, [X31 + 0x10]
	0x03C22388 ADD X31, X31, 0x20
	0x03C2238C RET
	0x03C22390 SUB X31, X31, 0x20
	0x03C22394 STR X30, [X31 + 0x10]
	0x03C22398 MOVZ W5, 0x1
	0x03C2239C MOV W4, W31
	0x03C223A0 MOV W6, W31
	0x03C223A4 MOV W7, W31
	0x03C223A8 STRB W31, [X31]
	0x03C223AC BL 0x3C2227C
	0x03C223B0 LDR X30, [X31 + 0x10]
	0x03C223B4 ADD X31, X31, 0x20

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+136], X21
	004 Move [X31+144], X20
	005 Move [X31+152], X19
	006 Move X21, 0x7C3000
	007 Move X19, X8
	008 Move X8, [X21+3856]
	009 Move X20, X0
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X31+112], W31
	012 Move [X31+80], V0
	013 Move [X31+88], V0
	014 Move [X31+4], V0
	015 Compare X8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51453952
	018 Add X0, X0, 1033
	019 Call 0x1C17CB8
	020 Move X8, X0
	021 Move [X21+3856], X0
	022 Add X1, X31, 64
	023 Move X0, X20
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move W8, [X31+112]
	026 Move V1, [X31+80]
	027 Move V0, [X31+96]
	028 Move V2, [X31+4]
	029 Move X30, [X31+128]
	030 Move X21, [X31+136]
	031 Move [X19+48], W8
	032 Move [X19+16], V1
	033 Move [X19+24], V0
	034 Move [X19], V2
	035 Move X20, [X31+144]
	036 Move X19, [X31+152]
	037 Move [X31+48], W8
	038 Move [X31+16], V1
	039 Move [X31+24], V0
	040 Move [X31], V2
	041 Add X31, X31, 160
	042 Return X0

Method: System.Void ValidateRenderTextureDesc(UnityEngine.RenderTextureDescriptor desc)

Disassembly:
	0x03C21DE0 ADRP X26, 0x53E000
	0x03C21DE4 LDRB W8, [X25 + 0xEF2]
	0x03C21DE8 LDR X26, [X26 + 0x48]
	0x03C21DEC MOV W19, W5
	0x03C21DF0 MOV W20, W4
	0x03C21DF4 MOV W21, W3
	0x03C21DF8 MOV W22, W2
	0x03C21DFC MOV W23, W1
	0x03C21E00 MOV X24, X0
	0x03C21E04 TBNZ X8, 0x0, 0x3C21E1C
	0x03C21E08 ADRP X0, 0x53E000
	0x03C21E0C LDR X0, [X0 + 0x48]
	0x03C21E10 BL 0x1C16CF4
	0x03C21E14 MOVZ W8, 0x1
	0x03C21E18 STRB W8, [X25 + 0xEF2]
	0x03C21E1C LDR X0, [X26]
	0x03C21E20 LDR W8, [X0 + 0xE0]
	0x03C21E24 CBNZ W8, 0x3C21E2C
	0x03C21E28 BL 0x1C16DFC
	0x03C21E2C MOV X0, X24
	0x03C21E30 MOV X1, X31
	0x03C21E34 BL 0x3C1A69C
	0x03C21E38 MOV X0, X24
	0x03C21E3C MOV W1, W23
	0x03C21E40 MOV W2, W22
	0x03C21E44 MOV W3, W21
	0x03C21E48 MOV W4, W20
	0x03C21E4C MOV W6, W19
	0x03C21E50 LDP X20, X19, [X31 + 0x40]
	0x03C21E54 LDP X22, X21, [X31 + 0x30]
	0x03C21E58 LDP X24, X23, [X31 + 0x20]
	0x03C21E5C LDP X26, X25, [X31 + 0x10]
	0x03C21E60 MOV W5, W31
	0x03C21E64 LDR X30, [X31], #0x50
	0x03C21E68 B 0x3C21B54
	0x03C21E6C MOVZ W4, 0x7
	0x03C21E70 B 0x3C21D38
	0x03C21E74 SUB X31, X31, 0x70
	0x03C21E78 STR X30, [X31 + 0x30]
	0x03C21E7C STP X24, X23, [X31 + 0x40]
	0x03C21E80 STP X22, X21, [X31 + 0x50]
	0x03C21E84 STP X20, X19, [X31 + 0x60]
	0x03C21E88 ADRP X21, 0x7C3000
	0x03C21E8C ADRP X22, 0x532000
	0x03C21E90 LDRB W8, [X21 + 0xEF7]
	0x03C21E94 LDR X22, [X22 + 0x90]
	0x03C21E98 MOV W19, W1
	0x03C21E9C MOV W20, W0
	0x03C21EA0 TBNZ X8, 0x0, 0x3C21EDC
	0x03C21EA4 ADRP X0, 0x4D2000
	0x03C21EA8 LDR X0, [X0 + 0xA28]
	0x03C21EAC BL 0x1C16CF4
	0x03C21EB0 ADRP X0, 0x532000
	0x03C21EB4 LDR X0, [X0 + 0x90]
	0x03C21EB8 BL 0x1C16CF4
	0x03C21EBC ADRP X0, 0x532000
	0x03C21EC0 LDR X0, [X0 + 0x4B8]
	0x03C21EC4 BL 0x1C16CF4
	0x03C21EC8 ADRP X0, 0x53E000
	0x03C21ECC LDR X0, [X0 + 0x228]
	0x03C21ED0 BL 0x1C16CF4
	0x03C21ED4 MOVZ W8, 0x1
	0x03C21ED8 STRB W8, [X21 + 0xEF7]
	0x03C21EDC LDR X0, [X22]
	0x03C21EE0 LDR W8, [X0 + 0xE0]
	0x03C21EE4 CBNZ W8, 0x3C21EEC
	0x03C21EE8 BL 0x1C16DFC
	0x03C21EEC MOV W0, W20
	0x03C21EF0 MOV W1, W19
	0x03C21EF4 MOV X2, X31
	0x03C21EF8 BL 0x3C615F8
	0x03C21EFC MOVZ W1, 0x4
	0x03C21F00 MOV X2, X31
	0x03C21F04 MOV W20, W0
	0x03C21F08 BL 0x3C3C500
	0x03C21F0C CMP W20, W0
	0x03C21F10 B.NE 0x3C21F1C
	0x03C21F14 MOV W19, W20
	0x03C21F18 B 0x3C21FAC
	0x03C21F1C ADRP X21, 0x532000
	0x03C21F20 LDR X21, [X21 + 0x4B8]
	0x03C21F24 ADRP X22, 0x53E000
	0x03C21F28 ADRP X23, 0x4D2000
	0x03C21F2C MOV W19, W0
	0x03C21F30 LDR X8, [X21]
	0x03C21F34 LDR X22, [X22 + 0x228]
	0x03C21F38 LDR X23, [X23 + 0xA28]
	0x03C21F3C MOVN X24, 0x0
	0x03C21F40 ADD X0, X31, 0x18
	0x03C21F44 MOV X1, X31
	0x03C21F48 STP X8, X24, [X31 + 0x18]
	0x03C21F4C STR W20, [X31 + 0x28]
	0x03C21F50 BL 0x33B162C
	0x03C21F54 LDR X8, [X21]
	0x03C21F58 MOV X20, X0
	0x03C21F5C ADD X0, X31, 0x0
	0x03C21F60 MOV X1, X31
	0x03C21F64 STP X8, X24, [X31]
	0x03C21F68 STR W19, [X31 + 0x10]
	0x03C21F6C BL 0x33B162C
	0x03C21F70 LDR X8, [X22]
	0x03C21F74 MOV X2, X0
	0x03C21F78 MOV X1, X20
	0x03C21F7C MOV X3, X31
	0x03C21F80 MOV X0, X8
	0x03C21F84 BL 0x3227BD4
	0x03C21F88 LDR X8, [X23]
	0x03C21F8C MOV X20, X0
	0x03C21F90 LDR W9, [X8 + 0xE0]
	0x03C21F94 CBNZ W9, 0x3C21FA0
	0x03C21F98 MOV X0, X8
	0x03C21F9C BL 0x1C16DFC
	0x03C21FA0 MOV X0, X20
	0x03C21FA4 MOV X1, X31
	0x03C21FA8 BL 0x3C06A04
	0x03C21FAC MOV W0, W19
	0x03C21FB0 LDP X20, X19, [X31 + 0x60]
	0x03C21FB4 LDP X22, X21, [X31 + 0x50]
	0x03C21FB8 LDP X24, X23, [X31 + 0x40]
	0x03C21FBC LDR X30, [X31 + 0x30]
	0x03C21FC0 ADD X31, X31, 0x70
	0x03C21FC4 RET
	0x03C21FC8 CMP W1, 0x3
	0x03C21FCC CSET W1, EQ
	0x03C21FD0 B 0x3C21FD4
	0x03C21FD4 STR X30, [X31 - 0x30]!
	0x03C21FD8 STP X22, X21, [X31 + 0x10]
	0x03C21FDC STP X20, X19, [X31 + 0x20]
	0x03C21FE0 ADRP X22, 0x7C3000
	0x03C21FE4 ADRP X21, 0x532000
	0x03C21FE8 LDRB W8, [X22 + 0xEF5]
	0x03C21FEC LDR X21, [X21 + 0x90]
	0x03C21FF0 MOV W20, W1
	0x03C21FF4 MOV W19, W0
	0x03C21FF8 TBNZ X8, 0x0, 0x3C22010
	0x03C21FFC ADRP X0, 0x532000
	0x03C22000 LDR X0, [X0 + 0x90]
	0x03C22004 BL 0x1C16CF4
	0x03C22008 MOVZ W8, 0x1
	0x03C2200C STRB W8, [X22 + 0xEF5]
	0x03C22010 LDR X0, [X21]
	0x03C22014 LDR W8, [X0 + 0xE0]
	0x03C22018 CBNZ W8, 0x3C22020
	0x03C2201C BL 0x1C16DFC
	0x03C22020 MOV W0, W19
	0x03C22024 TBZ X20, 0x0, 0x3C22040
	0x03C22028 LDP X20, X19, [X31 + 0x20]
	0x03C2202C LDP X22, X21, [X31 + 0x10]
	0x03C22030 MOV W1, W31
	0x03C22034 MOV X2, X31
	0x03C22038 LDR X30, [X31], #0x30
	0x03C2203C B 0x3C6176C
	0x03C22040 LDP X20, X19, [X31 + 0x20]
	0x03C22044 LDP X22, X21, [X31 + 0x10]
	0x03C22048 MOV X1, X31
	0x03C2204C LDR X30, [X31], #0x30
	0x03C22050 B 0x3C616BC
	0x03C22054 CMP W1, 0x3
	0x03C22058 CSET W1, EQ
	0x03C2205C B 0x3C21FD4
	0x03C22060 LDR W0, [X0 + 0x14]
	0x03C22064 RET
	0x03C22068 SUB X31, X31, 0x90
	0x03C2206C STP X30, X19, [X31 + 0x80]
	0x03C22070 LDR W8, [X0 + 0x30]
	0x03C22074 LDP V1, V0, [X0 + 0x10]
	0x03C22078 LDR V2, [X0]
	0x03C2207C MOV X19, X0
	0x03C22080 ADD X0, X31, 0x40
	0x03C22084 STR W8, [X31 + 0x70]
	0x03C22088 STP V1, V0, [X31 + 0x50]
	0x03C2208C STR V2, [X31 + 0x4]
	0x03C22090 BL 0x3C20DE0
	0x03C22094 LDP W8, W9, [X19 + 0x2C]
	0x03C22098 LDP V0, V1, [X19]
	0x03C2209C ORR W8, W8, 0x20
	0x03C220A0 STR W8, [X19 + 0x2C]
	0x03C220A4 LDR V2, [X19 + 0x2]
	0x03C220A8 ADRP X19, 0x7C2000
	0x03C220AC LDR X8, [X19 + 0xF18]
	0x03C220B0 STR W9, [X31 + 0x30]
	0x03C220B4 STP V1, V2, [X31 + 0x10]
	0x03C220B8 STR V0, [X31]
	0x03C220BC CBNZ X8, 0x3C220D4
	0x03C220C0 ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C220C4 ADD X0, X0, 0xBE4
	0x03C220C8 BL 0x1C16CB8
	0x03C220CC MOV X8, X0
	0x03C220D0 STR X0, [X19 + 0xF18]
	0x03C220D4 ADD X0, X31, 0x0
	0x03C220D8 BLR X8
	0x03C220DC LDP X30, X19, [X31 + 0x80]
	0x03C220E0 ADD X31, X31, 0x90
	0x03C220E4 RET
	0x03C220E8 LDR W8, [X0 + 0x2C]
	0x03C220EC ANDS W31, W1, 0x1
	0x03C220F0 MOVZ W9, 0x20
	0x03C220F4 CSEL W9, W9, W31, NE
	0x03C220F8 AND W8, W8, 0xFFFFFFDF
	0x03C220FC ORR W8, W8, W9, 0x0
	0x03C22100 STR W8, [X0 + 0x2C]
	0x03C22104 RET
	0x03C22108 SUB X31, X31, 0xB0
	0x03C2210C STR X30, [X31 + 0x80]
	0x03C22110 STP X22, X21, [X31 + 0x90]
	0x03C22114 STP X20, X19, [X31 + 0xA0]
	0x03C22118 MOV W22, W4
	0x03C2211C MOV W4, W2
	0x03C22120 MOV W2, W1
	0x03C22124 MOV W1, W0
	0x03C22128 MOVI V0.2D, 0x0
	0x03C2212C ADD X0, X31, 0x40
	0x03C22130 MOV W19, W7
	0x03C22134 MOV W20, W6
	0x03C22138 MOV W21, W5
	0x03C2213C STR W31, [X31 + 0x70]
	0x03C22140 STP V0, V0, [X31 + 0x50]
	0x03C22144 STR V0, [X31 + 0x4]
	0x03C22148 BL 0x3C221A0
	0x03C2214C LDR W8, [X31 + 0x6C]
	0x03C22150 ANDS W31, W19, 0x1
	0x03C22154 MOVZ W9, 0x400
	0x03C22158 CSEL W9, W9, W31, NE
	0x03C2215C AND W8, W8, 0xFFFFFBFF
	0x03C22160 ORR W8, W8, W9, 0x0
	0x03C22164 STR W22, [X31 + 0x48]
	0x03C22168 STP W20, W8, [X31 + 0x68]
	0x03C2216C LDP V1, V0, [X31 + 0x40]
	0x03C22170 LDR V2, [X31 + 0x6]
	0x03C22174 ADD X0, X31, 0x0
	0x03C22178 STR W21, [X31 + 0x70]
	0x03C2217C STP V1, V0, [X31]
	0x03C22180 STR W21, [X31 + 0x30]
	0x03C22184 STR V2, [X31 + 0x2]
	0x03C22188 BL 0x3C22068
	0x03C2218C LDP X20, X19, [X31 + 0xA0]
	0x03C22190 LDP X22, X21, [X31 + 0x90]
	0x03C22194 LDR X30, [X31 + 0x80]
	0x03C22198 ADD X31, X31, 0xB0
	0x03C2219C RET
	0x03C221A0 STP X30, X25, [X31 - 0x40]!
	0x03C221A4 STP X24, X23, [X31 + 0x10]
	0x03C221A8 STP X22, X21, [X31 + 0x20]
	0x03C221AC STP X20, X19, [X31 + 0x30]
	0x03C221B0 ADRP X25, 0x7C2000
	0x03C221B4 ADRP X24, 0x53D000
	0x03C221B8 LDRB W8, [X25 + 0xF29]
	0x03C221BC LDR X24, [X24 + 0x48]
	0x03C221C0 MOV W20, W4
	0x03C221C4 MOV W21, W3

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x7C4000
	007 Move W8, [X20+3830]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x533000
	014 Move X0, [X0+144]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3830], W8
	018 Move X21, 0x533000
	019 Move W0, [X19+20]
	020 Move X21, [X21+144]
	021 Compare W0, 0
	022 JumpIfEqual {33}
	023 Move W1, 4
	024 Move X2, X31
	025 Call SystemInfo.IsFormatSupported, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {176}
	030 Move W20, [X19+28]
	031 Compare W20, 0
	032 JumpIfNotEqual {36}
	033 Move W20, [X19+28]
	034 Compare W20, 0
	035 JumpIfEqual {242}
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move W0, W20
	042 Move X1, X31
	043 Call GraphicsFormatUtility.IsDepthStencilFormat, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {142}
	048 Move W8, [X19]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, [X19+4]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, [X19+12]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W9, [X19+8]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W10, 1
	057 NotImplemented "Instruction LSLV not yet implemented."
	058 Move W10, 278
	059 And W31, W9, W10
	060 Move W9, 0xAAAB
	061 NotImplemented "Instruction MOVK not yet implemented."
	062 Multiply W8, W8, W9
	063 Move W9, 0xAAAB
	064 NotImplemented "Instruction EXTR not yet implemented."
	065 NotImplemented "Instruction MOVK not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, [X19+32]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W20, [X19+20]
	070 And W8, W20, 0xFFFFFFFE
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, [X21]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move W0, W20
	078 Move X1, X31
	079 Call GraphicsFormatUtility.IsDepthStencilFormat, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {196}
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Add X31, X31, 64
	089 Return 
	090 Move X0, 0x4DB000
	091 Move X0, [X0+1400]
	092 Call 0x1C17D08
	093 Call 0x1C17F10
	094 Move X19, X0
	095 Move X0, 0x53F000
	096 Move X0, [X0+400]
	097 Call 0x1C17D08
	098 Move X20, X0
	099 Move X0, 0x53F000
	100 Move X0, [X0+408]
	101 Move X0, 0x4DB000
	102 Move X0, [X0+1400]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X19, X0
	106 Move X0, 0x53F000
	107 Move X0, [X0+416]
	108 Call 0x1C17D08
	109 Move X20, X0
	110 Move X0, 0x53F000
	111 Move X0, [X0+424]
	112 Move X0, 0x4DB000
	113 Move X0, [X0+1400]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X19, X0
	117 Move X0, 0x53F000
	118 Move X0, [X0+432]
	119 Move X0, 0x4DB000
	120 Move X0, [X0+1400]
	121 Call 0x1C17D08
	122 Call 0x1C17F10
	123 Move X19, X0
	124 Move X0, 0x53F000
	125 Move X0, [X0+440]
	126 Call 0x1C17D08
	127 Move X20, X0
	128 Move X0, 0x53F000
	129 Move X0, [X0+448]
	130 Call 0x1C17D08
	131 Move X2, X0
	132 Move X0, X19
	133 Move X1, X20
	134 Move X3, X31
	135 Call ArgumentException..ctor, X0, X1, X2
	136 Move X0, 0x53F000
	137 Move X0, [X0+456]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X19
	141 Call 0x1C17DEC
	142 Move X0, 0x533000
	143 Move W19, [X19+28]
	144 Move X0, [X0+1208]
	145 Call 0x1C17D08
	146 Move TEMP, 0
	147 Not TEMP
	148 Move X8, TEMP
	149 Move [X31+8], X0
	150 Move [X31+16], X8
	151 Add X0, X31, 8
	152 Move X1, X31
	153 Move [X31+24], W19
	154 Call Enum.ToString, X0
	155 Move X19, X0
	156 Move X0, 0x53E000
	157 Move X0, [X0+464]
	158 Call 0x1C17D08
	159 Move X20, X0
	160 Move X0, 0x53E000
	161 Move X0, [X0+472]
	162 Call 0x1C17D08
	163 Move X2, X0
	164 Move X0, X20
	165 Move X1, X19
	166 Move X3, X31
	167 Call String.Concat, X0, X1, X2
	168 Move X19, X0
	169 Move X0, 0x4DA000
	170 Move X0, [X0+1400]
	171 Call 0x1C17D08
	172 Call 0x1C17F10
	173 Move X20, X0
	174 Move X0, 0x53E000
	175 Move X0, [X0+480]
	176 Move X0, 0x532000
	177 Move W19, [X19+20]
	178 Move X0, [X0+1208]
	179 Call 0x1C17D08
	180 Move TEMP, 0
	181 Not TEMP
	182 Move X8, TEMP
	183 Move [X31+8], X0
	184 Move [X31+16], X8
	185 Add X0, X31, 8
	186 Move X1, X31
	187 Move [X31+24], W19
	188 Call Enum.ToString, X0
	189 Move X19, X0
	190 Move X0, 0x53E000
	191 Move X0, [X0+488]
	192 Call 0x1C17D08
	193 Move X20, X0
	194 Move X0, 0x53E000
	195 Move X0, [X0+472]
	196 Move X0, 0x532000
	197 Move W19, [X19+20]
	198 Move X0, [X0+1208]
	199 Call 0x1C17D08
	200 Move TEMP, 0
	201 Not TEMP
	202 Move X8, TEMP
	203 Move [X31+8], X0
	204 Move [X31+16], X8
	205 Add X0, X31, 8
	206 Move X1, X31
	207 Move [X31+24], W19
	208 Call Enum.ToString, X0
	209 Move X19, X0
	210 Move X0, 0x53E000
	211 Move X0, [X0+496]
	212 Call 0x1C17D08
	213 Move X20, X0
	214 Move X0, 0x508000
	215 Move X0, [X0+2880]
	216 Call 0x1C17D08
	217 Move X2, X0
	218 Move X0, X20
	219 Move X1, X19
	220 Move X3, X31
	221 Call String.Concat, X0, X1, X2
	222 Move X19, X0
	223 Move X0, 0x4DA000
	224 Move X0, [X0+1400]
	225 Call 0x1C17D08
	226 Call 0x1C17F10
	227 Move X20, X0
	228 Move X0, 0x53E000
	229 Move X0, [X0+504]
	230 Call 0x1C17D08
	231 Move X2, X0
	232 Move X0, X20
	233 Move X1, X19
	234 Move X3, X31
	235 Call ArgumentException..ctor, X0, X1, X2
	236 Move X0, 0x53E000
	237 Move X0, [X0+456]
	238 Call 0x1C17D08
	239 Move X1, X0
	240 Move X0, X20
	241 Call 0x1C17DEC
	242 Move X0, 0x4DA000
	243 Move X0, [X0+1400]
	244 Call 0x1C17D08
	245 Call 0x1C17F10
	246 Move X19, X0
	247 Move X0, 0x53E000
	248 Move X0, [X0+512]
	249 Call 0x1C17D08
	250 Move X1, X0
	251 Move X0, X19
	252 Move X2, X31
	253 Call ArgumentException..ctor, X0, X1
	254 Move X0, 0x4DA000
	255 Move X0, [X0+1400]
	256 Call 0x1C17D08
	257 Call 0x1C17F10
	258 Move X19, X0
	259 Move X0, 0x53E000
	260 Move X0, [X0+520]
	261 Call 0x1C17D08
	262 Move X20, X0
	263 Move X0, 0x53E000
	264 Move X0, [X0+528]

Method: UnityEngine.Experimental.Rendering.GraphicsFormat GetDefaultColorFormat(UnityEngine.Experimental.Rendering.DefaultFormat format)

Disassembly:
	0x03C2248C LDR W1, [X19 + 0x14]
	0x03C22490 BL 0x3C21994
	0x03C22494 STR W0, [X19 + 0x1C]
	0x03C22498 LDP X20, X19, [X31 + 0x20]
	0x03C2249C LDP X22, X21, [X31 + 0x10]
	0x03C224A0 LDR X30, [X31], #0x30
	0x03C224A4 RET
	0x03C224A8 LDR W8, [X0 + 0x2C]
	0x03C224AC ANDS W31, W1, 0x1
	0x03C224B0 BIC W9, W8, W2, 0x0

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, 143
	004 Return X0
	005 Move W0, 142
	006 Return X0
	007 Move X1, X31
	008 Call SystemInfo.GetGraphicsFormat, X0
	009 Return X0

Method: UnityEngine.Experimental.Rendering.GraphicsFormat GetDefaultDepthStencilFormat(UnityEngine.Experimental.Rendering.DefaultFormat format, System.Int32 depth)

Disassembly:
	0x03C224B4 ORR W8, W8, W2, 0x0
	0x03C224B8 CSEL W8, W8, W9, NE
	0x03C224BC STR W8, [X0 + 0x2C]
	0x03C224C0 RET
	0x03C224C4 STP X30, X21, [X31 - 0x20]!
	0x03C224C8 STP X20, X19, [X31 + 0x10]
	0x03C224CC ADRP X21, 0x7C2000
	0x03C224D0 ADRP X20, 0x531000
	0x03C224D4 LDRB W8, [X21 + 0xF25]
	0x03C224D8 LDR X20, [X20 + 0x90]

ISIL:
	001 And W8, W0, 0xFFFFFFFE
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X1, X31
	004 Call SystemInfo.GetGraphicsFormat, X0
	005 Return X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move W0, W1
	009 Move W1, W8
	010 Call RenderTexture.GetDepthStencilFormatLegacy, X0, X1
	011 Return X0

Method: UnityEngine.Experimental.Rendering.GraphicsFormat GetCompatibleFormat(UnityEngine.RenderTextureFormat renderTextureFormat, UnityEngine.RenderTextureReadWrite readWrite)

Disassembly:
	0x03C22E74 MOV X19, X0
	0x03C22E78 BL 0x339A95C
	0x03C22E7C MOV W20, W0
	0x03C22E80 ADD X0, X19, 0x8
	0x03C22E84 MOV X1, X31
	0x03C22E88 BL 0x339A95C
	0x03C22E8C EOR W0, W0, W20, 0x0
	0x03C22E90 LDP X20, X19, [X31 + 0x10]
	0x03C22E94 LDR X30, [X31], #0x20
	0x03C22E98 RET
	0x03C22E9C STP X30, X21, [X31 - 0x20]!
	0x03C22EA0 STP X20, X19, [X31 + 0x10]
	0x03C22EA4 ADRP X21, 0x7C2000
	0x03C22EA8 LDRB W8, [X21 + 0xF2B]
	0x03C22EAC MOV X20, X1
	0x03C22EB0 MOV X19, X0
	0x03C22EB4 TBNZ X8, 0x0, 0x3C22ECC
	0x03C22EB8 ADRP X0, 0x4FC000
	0x03C22EBC LDR X0, [X0 + 0xE10]
	0x03C22EC0 BL 0x1C16CF4
	0x03C22EC4 MOVZ W8, 0x1
	0x03C22EC8 STRB W8, [X21 + 0xF2B]
	0x03C22ECC CBZ X20, 0x3C22EE8
	0x03C22ED0 ADRP X8, 0x4FC000
	0x03C22ED4 LDR X8, [X8 + 0xE10]
	0x03C22ED8 LDR X9, [X20]
	0x03C22EDC LDR X8, [X8]
	0x03C22EE0 CMP X9, X8
	0x03C22EE4 B.EQ 0x3C22EF8
	0x03C22EE8 MOVZ W0, 0x1
	0x03C22EEC LDP X20, X19, [X31 + 0x10]
	0x03C22EF0 LDP X30, X21, [X31], #0x20
	0x03C22EF4 RET
	0x03C22EF8 MOV X0, X20
	0x03C22EFC BL 0x1C16E08
	0x03C22F00 LDP X8, X10, [X0]
	0x03C22F04 LDP X9, X11, [X19]
	0x03C22F08 CMP X11, X10
	0x03C22F0C CSET W12, CS
	0x03C22F10 CMP X9, X8
	0x03C22F14 CSET W13, CS
	0x03C22F18 CSEL W12, W12, W13, EQ
	0x03C22F1C CMP W12, 0x1
	0x03C22F20 B.NE 0x3C22F50
	0x03C22F24 CMP X11, X10
	0x03C22F28 CSET W10, CC
	0x03C22F2C CSET W11, EQ
	0x03C22F30 CMP X9, X8
	0x03C22F34 CSET W8, EQ
	0x03C22F38 CSET W9, CC
	0x03C22F3C CSEL W9, W10, W9, EQ
	0x03C22F40 AND W8, W8, W11, 0x0
	0x03C22F44 ORR W8, W9, W8, 0x0
	0x03C22F48 EOR W0, W8, 0x1
	0x03C22F4C B 0x3C22EEC
	0x03C22F50 MOVN W0, 0x0
	0x03C22F54 B 0x3C22EEC
	0x03C22F58 MOV X2, X1
	0x03C22F5C MOVZ W1, 0x10
	0x03C22F60 B 0x3C22F64
	0x03C22F64 SUB X31, X31, 0x20
	0x03C22F68 STP X30, X19, [X31 + 0x10]
	0x03C22F6C CBZ X2, 0x3C22FA0
	0x03C22F70 LDR X9, [X2]
	0x03C22F74 LDR X8, [X2 + 0x8]
	0x03C22F78 MOV X19, X2
	0x03C22F7C ADD X2, X31, 0x8
	0x03C22F80 ADD X3, X31, 0x0
	0x03C22F84 STP X8, X9, [X31]
	0x03C22F88 BL 0x3C22FA4
	0x03C22F8C LDP X9, X8, [X31]
	0x03C22F90 STP X8, X9, [X19]
	0x03C22F94 LDP X30, X19, [X31 + 0x10]
	0x03C22F98 ADD X31, X31, 0x20
	0x03C22F9C RET
	0x03C22FA0 BL 0x1C16F20
	0x03C22FA4 STR X30, [X31 - 0x40]!
	0x03C22FA8 STP X24, X23, [X31 + 0x10]
	0x03C22FAC STP X22, X21, [X31 + 0x20]
	0x03C22FB0 STP X20, X19, [X31 + 0x30]
	0x03C22FB4 ADRP X23, 0x7C2000
	0x03C22FB8 ADRP X24, 0x53D000
	0x03C22FBC LDRB W8, [X23 + 0xF40]
	0x03C22FC0 LDR X24, [X24 + 0x230]
	0x03C22FC4 MOV X19, X3

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X21, 0x7C3000
	010 Move X22, 0x532000
	011 Move W8, [X21+3831]
	012 Move X22, [X22+144]
	013 Move W19, W1
	014 Move W20, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x4D2000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x532000
	023 Move X0, [X0+144]
	024 Call 0x1C17CF4
	025 Move X0, 0x532000
	026 Move X0, [X0+1208]
	027 Call 0x1C17CF4
	028 Move X0, 0x53E000
	029 Move X0, [X0+552]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3831], W8
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move W0, W20
	039 Move W1, W19
	040 Move X2, X31
	041 Call GraphicsFormatUtility.GetGraphicsFormat, X0, X1
	042 Move W1, 4
	043 Move X2, X31
	044 Move W20, W0
	045 Call SystemInfo.GetCompatibleFormat, X0, X1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W19, W20
	048 Move X21, 0x532000
	049 Move X21, [X21+1208]
	050 Move X22, 0x53E000
	051 Move X23, 0x4D2000
	052 Move W19, W0
	053 Move X8, [X21]
	054 Move X22, [X22+552]
	055 Move X23, [X23+2600]
	056 Move TEMP, 0
	057 Not TEMP
	058 Move X24, TEMP
	059 Add X0, X31, 24
	060 Move X1, X31
	061 Move [X31+24], X8
	062 Move [X31+32], X24
	063 Move [X31+40], W20
	064 Call Enum.ToString, X0
	065 Move X8, [X21]
	066 Move X20, X0
	067 Add X0, X31, 0
	068 Move X1, X31
	069 Move [X31], X8
	070 Move [X31+8], X24
	071 Move [X31+16], W19
	072 Call Enum.ToString, X0
	073 Move X8, [X22]
	074 Move X2, X0
	075 Move X1, X20
	076 Move X3, X31
	077 Move X0, X8
	078 Call String.Format, X0, X1, X2
	079 Move X8, [X23]
	080 Move X20, X0
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X0, X20
	087 Move X1, X31
	088 Call Debug.LogWarning, X0
	089 Move W0, W19
	090 Move X20, [X31+96]
	091 Move X19, [X31+104]
	092 Move X22, [X31+80]
	093 Move X21, [X31+88]
	094 Move X24, [X31+64]
	095 Move X23, [X31+72]
	096 Move X30, [X31+48]
	097 Add X31, X31, 112
	098 Return X0

Method: UnityEngine.RenderTexture GetTemporary(UnityEngine.RenderTextureDescriptor desc)

Disassembly:
	0x03C23068 ADRP X0, 0x53C000
	0x03C2306C LDR X0, [X0 + 0x230]
	0x03C23070 BL 0x1C16CF4
	0x03C23074 MOVZ W8, 0x1
	0x03C23078 STRB W8, [X19 + 0xF42]
	0x03C2307C ADRP X26, 0x53C000
	0x03C23080 LDR X26, [X26 + 0x230]
	0x03C23084 CMP X23, 0xBF
	0x03C23088 B.HI 0x3C230B4
	0x03C2308C LDR X0, [X26]
	0x03C23090 LDR W8, [X0 + 0xE0]
	0x03C23094 CBNZ W8, 0x3C2309C
	0x03C23098 BL 0x1C16DFC
	0x03C2309C MOV X0, X22
	0x03C230A0 MOV X1, X23
	0x03C230A4 MOV X2, X25
	0x03C230A8 MOV X3, X24
	0x03C230AC BL 0x3C233B0
	0x03C230B0 B 0x3C232F4
	0x03C230B4 ADD X8, X31, 0x0
	0x03C230B8 SUB X21, X8, 0x60
	0x03C230BC ADD X31, X21, 0x0
	0x03C230C0 MOVI V0.2D, 0x0
	0x03C230C4 STP V0, V0, [X8 - 0x20]
	0x03C230C8 STP V0, V0, [X8 - 0x40]
	0x03C230CC STP V0, V0, [X8 - 0x60]
	0x03C230D0 MOVZ X9, 0xBEEF
	0x03C230D4 LDR X11, [X25]
	0x03C230D8 MOVK X9, 0xDEAD0000
	0x03C230DC MOVK X9, 0xBEEF
	0x03C230E0 MOVK X9, 0xDEAD0000
	0x03C230E4 STP X11, X9, [X29 - 0x58]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+128], X30
	003 Move [X31+136], X19
	004 Move W8, [X0+48]
	005 Move V1, [X0+16]
	006 Move V0, [X0+32]
	007 Move V2, [X0]
	008 Move X19, X0
	009 Add X0, X31, 64
	010 Move [X31+112], W8
	011 Move [X31+80], V1
	012 Move [X31+88], V0
	013 Move [X31+4], V2
	014 Call RenderTexture.ValidateRenderTextureDesc, X0
	015 Move W8, [X19+44]
	016 Move W9, [X19+48]
	017 Move V0, [X19]
	018 Move V1, [X19+16]
	019 Or W8, W8, 32
	020 Move [X19+44], W8
	021 Move V2, [X19+2]
	022 Move X19, 0x7C2000
	023 Move X8, [X19+3864]
	024 Move [X31+48], W9
	025 Move [X31+16], V1
	026 Move [X31+24], V2
	027 Move [X31], V0
	028 Compare X8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, -51445760
	031 Add X0, X0, 3044
	032 Call 0x1C17CB8
	033 Move X8, X0
	034 Move [X19+3864], X0
	035 Add X0, X31, 0
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X30, [X31+128]
	038 Move X19, [X31+136]
	039 Add X31, X31, 144
	040 Return X0

Method: UnityEngine.RenderTexture GetTemporaryImpl(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat depthStencilFormat, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat, System.Int32 antiAliasing = 1, UnityEngine.RenderTextureMemoryless memorylessMode = 0, UnityEngine.VRTextureUsage vrUsage = 0, System.Boolean useDynamicScale = False)

Disassembly:
	0x03C23108 STUR X8, [X29 - 0x48]
	0x03C2310C STUR X8, [X29 - 0x30]
	0x03C23110 STP X8, X11, [X29 - 0x18]
	0x03C23114 UBFM X8, X10, 0x6, 0x3F
	0x03C23118 LDR W9, [X0 + 0xE0]
	0x03C2311C UBFM X8, X8, 0x3F, 0x3E
	0x03C23120 ADD X8, X8, X10, 0x6, LSR
	0x03C23124 STUR X24, [X29 - 0x78]
	0x03C23128 SUB X23, X23, X8, 0x5, LSL
	0x03C2312C ADD X24, X22, X8, 0x5, LSL
	0x03C23130 CBNZ W9, 0x3C2313C
	0x03C23134 BL 0x1C16DFC
	0x03C23138 LDR X0, [X26]
	0x03C2313C ANDS X31, X22, 0x7
	0x03C23140 STUR X25, [X29 - 0x80]
	0x03C23144 STUR X20, [X29 - 0x70]
	0x03C23148 B.EQ 0x3C231E0
	0x03C2314C LDR X8, [X0 + 0xB8]
	0x03C23150 LDRB W8, [X8]
	0x03C23154 CBNZ W8, 0x3C231E0
	0x03C23158 CMP X24, X22
	0x03C2315C B.LS 0x3C23254
	0x03C23160 SUB X27, X29, 0x68
	0x03C23164 SUB X28, X29, 0x60
	0x03C23168 SUB X19, X29, 0x58
	0x03C2316C SUB X20, X29, 0x50
	0x03C23170 SUB X25, X29, 0x48
	0x03C23174 MOVZ W2, 0x60
	0x03C23178 MOV X0, X21
	0x03C2317C MOV X1, X22
	0x03C23180 MOV X3, X31
	0x03C23184 BL 0x3BFF954
	0x03C23188 LDR X0, [X26]
	0x03C2318C LDR W8, [X0 + 0xE0]
	0x03C23190 CBNZ W8, 0x3C23198
	0x03C23194 BL 0x1C16DFC
	0x03C23198 SUB X31, X31, 0x30
	0x03C2319C SUB X1, X29, 0x10

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move W22, W4
	008 Move W4, W2
	009 Move W2, W1
	010 Move W1, W0
	011 NotImplemented "Instruction MOVI not yet implemented."
	012 Add X0, X31, 64
	013 Move W19, W7
	014 Move W20, W6
	015 Move W21, W5
	016 Move [X31+112], W31
	017 Move [X31+80], V0
	018 Move [X31+88], V0
	019 Move [X31+4], V0
	020 Call RenderTextureDescriptor..ctor, X0, X1, X2, X3, X4
	021 Move W8, [X31+108]
	022 And W31, W19, 1
	023 Move W9, 1024
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 And W8, W8, 0xFFFFFBFF
	026 Or W8, W8, W9
	027 Move [X31+72], W22
	028 Move [X31+104], W20
	029 Move [X31+108], W8
	030 Move V1, [X31+64]
	031 Move V0, [X31+80]
	032 Move V2, [X31+6]
	033 Add X0, X31, 0
	034 Move [X31+112], W21
	035 Move [X31], V1
	036 Move [X31+8], V0
	037 Move [X31+48], W21
	038 Move [X31+2], V2
	039 Call RenderTexture.GetTemporary, X0
	040 Move X20, [X31+160]
	041 Move X19, [X31+168]
	042 Move X22, [X31+144]
	043 Move X21, [X31+152]
	044 Move X30, [X31+128]
	045 Add X31, X31, 176
	046 Return X0

Method: UnityEngine.RenderTexture GetTemporary(System.Int32 width, System.Int32 height, System.Int32 depthBuffer, UnityEngine.RenderTextureFormat format, UnityEngine.RenderTextureReadWrite readWrite, System.Int32 antiAliasing, UnityEngine.RenderTextureMemoryless memorylessMode, UnityEngine.VRTextureUsage vrUsage, System.Boolean useDynamicScale)

Disassembly:
	0x03C2327C ADD X0, X23, X21
	0x03C23280 SUB X2, X8, X23
	0x03C23284 MOV W1, W31
	0x03C23288 BL 0x3C23B94
	0x03C2328C STRB W23, [X21 + 0x5F]
	0x03C23290 SUB X31, X31, 0x30
	0x03C23294 SUB X8, X29, 0x68
	0x03C23298 SUB X9, X29, 0x60
	0x03C2329C SUB X10, X29, 0x58
	0x03C232A0 SUB X11, X29, 0x50
	0x03C232A4 SUB X12, X29, 0x48
	0x03C232A8 SUB X1, X29, 0x10
	0x03C232AC SUB X2, X29, 0x18
	0x03C232B0 SUB X3, X29, 0x20
	0x03C232B4 SUB X4, X29, 0x28
	0x03C232B8 SUB X5, X29, 0x30
	0x03C232BC SUB X6, X29, 0x38
	0x03C232C0 SUB X7, X29, 0x40
	0x03C232C4 MOV X0, X21
	0x03C232C8 STP X9, X8, [X31 + 0x18]
	0x03C232CC STP X11, X10, [X31 + 0x8]
	0x03C232D0 STR X12, [X31]
	0x03C232D4 BL 0x3C23C6C
	0x03C232D8 ADD X31, X31, 0x30
	0x03C232DC LDUR X8, [X29 - 0x10]
	0x03C232E0 LDUR X9, [X29 - 0x80]
	0x03C232E4 STR X8, [X9]
	0x03C232E8 LDUR X8, [X29 - 0x18]
	0x03C232EC LDP X9, X20, [X29 - 0x78]
	0x03C232F0 STR X8, [X9]
	0x03C232F4 LDR X8, [X20 + 0x28]
	0x03C232F8 LDUR X9, [X29 - 0x8]
	0x03C232FC CMP X8, X9
	0x03C23300 B.NE 0x3C23324
	0x03C23304 ADD X31, X29, 0x0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move W27, [X31+80]
	012 Move W24, W1
	013 Move W25, W0
	014 Move W0, W3
	015 Move W1, W4
	016 Move W19, W7
	017 Move W20, W6
	018 Move W21, W5
	019 Move W22, W3
	020 Move W23, W2
	021 Call RenderTexture.GetCompatibleFormat, X0, X1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W26, W0
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Move W0, W23
	026 Call RenderTexture.GetDepthStencilFormatLegacy, X0, X1
	027 Move W2, W0
	028 Move W0, W25
	029 Move W1, W24
	030 Move W3, W26
	031 Move W4, W21
	032 Move W5, W20
	033 Move W6, W19
	034 Move X20, [X31+64]
	035 Move X19, [X31+72]
	036 Move X22, [X31+48]
	037 Move X21, [X31+56]
	038 Move X24, [X31+32]
	039 Move X23, [X31+40]
	040 Move X26, [X31+16]
	041 Move X25, [X31+24]
	042 And W7, W27, 1
	043 Move X30, [X31+80]
	044 Move X27, [X31+88]
	045 Call RenderTexture.GetTemporaryImpl, X0, X1, X2, X3, X4, X5, X6, X7
	046 Return X0

Method: UnityEngine.RenderTexture GetTemporary(System.Int32 width, System.Int32 height, System.Int32 depthBuffer, UnityEngine.RenderTextureFormat format, UnityEngine.RenderTextureReadWrite readWrite, System.Int32 antiAliasing, UnityEngine.RenderTextureMemoryless memorylessMode, UnityEngine.VRTextureUsage vrUsage)

Disassembly:
	0x03C23308 LDP X20, X19, [X31 + 0x50]
	0x03C2330C LDP X22, X21, [X31 + 0x40]
	0x03C23310 LDP X24, X23, [X31 + 0x30]
	0x03C23314 LDP X26, X25, [X31 + 0x20]
	0x03C23318 LDP X28, X27, [X31 + 0x10]
	0x03C2331C LDP X29, X30, [X31], #0x60
	0x03C23320 RET

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31], W31
	004 Call RenderTexture.GetTemporary, X0, X1, X2, X3, X4, X5, X6, X7, X8
	005 Move X30, [X31+16]
	006 Add X31, X31, 32
	007 Return X0

Method: UnityEngine.RenderTexture GetTemporary(System.Int32 width, System.Int32 height, System.Int32 depthBuffer, UnityEngine.RenderTextureFormat format, UnityEngine.RenderTextureReadWrite readWrite, System.Int32 antiAliasing, UnityEngine.RenderTextureMemoryless memorylessMode)

Disassembly:
	0x03C23324 BL 0x3EB1B20
	0x03C23328 STR X30, [X31 - 0x20]!
	0x03C2332C STP X20, X19, [X31 + 0x10]
	0x03C23330 ADRP X20, 0x7C1000
	0x03C23334 ADRP X19, 0x53C000
	0x03C23338 LDRB W8, [X20 + 0xF41]
	0x03C2333C LDR X19, [X19 + 0x238]
	0x03C23340 TBNZ X8, 0x0, 0x3C23364

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move W7, W31
	004 Move [X31], W31
	005 Call RenderTexture.GetTemporary, X0, X1, X2, X3, X4, X5, X6, X7, X8
	006 Move X30, [X31+16]
	007 Add X31, X31, 32
	008 Return X0

Method: UnityEngine.RenderTexture GetTemporary(System.Int32 width, System.Int32 height, System.Int32 depthBuffer, UnityEngine.RenderTextureFormat format, UnityEngine.RenderTextureReadWrite readWrite, System.Int32 antiAliasing)

Disassembly:
	0x03C23344 ADRP X0, 0x53C000
	0x03C23348 LDR X0, [X0 + 0x240]
	0x03C2334C BL 0x1C16CF4
	0x03C23350 ADRP X0, 0x53C000
	0x03C23354 LDR X0, [X0 + 0x238]
	0x03C23358 BL 0x1C16CF4
	0x03C2335C MOVZ W8, 0x1
	0x03C23360 STRB W8, [X20 + 0xF41]
	0x03C23364 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move W6, W31
	004 Move W7, W31
	005 Move [X31], W31
	006 Call RenderTexture.GetTemporary, X0, X1, X2, X3, X4, X5, X6, X7, X8
	007 Move X30, [X31+16]
	008 Add X31, X31, 32
	009 Return X0

Method: UnityEngine.RenderTexture GetTemporary(System.Int32 width, System.Int32 height, System.Int32 depthBuffer, UnityEngine.RenderTextureFormat format, UnityEngine.RenderTextureReadWrite readWrite)

Disassembly:
	0x03C23368 BL 0x3C3B8EC
	0x03C2336C LDR X1, [X19]
	0x03C23370 MOV X2, X31
	0x03C23374 MOV X19, X0
	0x03C23378 BL 0x321BA08
	0x03C2337C TBZ X0, 0x0, 0x3C23390
	0x03C23380 LDP X20, X19, [X31 + 0x10]
	0x03C23384 MOVZ W0, 0x1
	0x03C23388 LDR X30, [X31], #0x20
	0x03C2338C RET

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move W5, 1
	004 Move W6, W31
	005 Move W7, W31
	006 Move [X31], W31
	007 Call RenderTexture.GetTemporary, X0, X1, X2, X3, X4, X5, X6, X7, X8
	008 Move X30, [X31+16]
	009 Add X31, X31, 32
	010 Return X0

Method: UnityEngine.RenderTexture GetTemporary(System.Int32 width, System.Int32 height, System.Int32 depthBuffer, UnityEngine.RenderTextureFormat format)

Disassembly:
	0x03C23390 ADRP X8, 0x53C000
	0x03C23394 LDR X8, [X8 + 0x240]
	0x03C23398 MOV X0, X19
	0x03C2339C LDP X20, X19, [X31 + 0x10]
	0x03C233A0 MOV X2, X31
	0x03C233A4 LDR X1, [X8]
	0x03C233A8 LDR X30, [X31], #0x20
	0x03C233AC B 0x321BA08
	0x03C233B0 STP X29, X30, [X31 - 0x60]!
	0x03C233B4 STR X27, [X31 + 0x10]
	0x03C233B8 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move W5, 1
	004 Move W4, W31
	005 Move W6, W31
	006 Move W7, W31
	007 Move [X31], W31
	008 Call RenderTexture.GetTemporary, X0, X1, X2, X3, X4, X5, X6, X7, X8
	009 Move X30, [X31+16]
	010 Add X31, X31, 32
	011 Return X0

Method: System.Void GetColorBuffer_Injected(out UnityEngine.RenderBuffer ret)

Disassembly:
	0x03C218EC BLR X8
	0x03C218F0 ADRP X23, 0x7C3000
	0x03C218F4 LDR X8, [X23 + 0xEB8]
	0x03C218F8 CBNZ X8, 0x3C21910
	0x03C218FC ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C21900 ADD X0, X0, 0xB70
	0x03C21904 BL 0x1C16CB8
	0x03C21908 MOV X8, X0
	0x03C2190C STR X0, [X23 + 0xEB8]
	0x03C21910 MOV X0, X19
	0x03C21914 MOV W1, W21
	0x03C21918 BLR X8
	0x03C2191C LDR X0, [X22]
	0x03C21920 LDR W8, [X0 + 0xE0]
	0x03C21924 CBNZ W8, 0x3C2192C
	0x03C21928 BL 0x1C16DFC
	0x03C2192C MOV W0, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3832]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51367936
	012 Add X0, X0, 258
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3832], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetDepthBuffer_Injected(out UnityEngine.RenderBuffer ret)

Disassembly:
	0x03C21984 LDP X24, X23, [X31 + 0x20]
	0x03C21988 LDP X26, X25, [X31 + 0x10]
	0x03C2198C LDR X30, [X31], #0x50
	0x03C21990 RET
	0x03C21994 STR X30, [X31 - 0x30]!
	0x03C21998 STP X22, X21, [X31 + 0x10]
	0x03C2199C STP X20, X19, [X31 + 0x20]
	0x03C219A0 ADRP X21, 0x7C3000
	0x03C219A4 ADRP X22, 0x532000
	0x03C219A8 LDRB W8, [X21 + 0xEF4]
	0x03C219AC LDR X22, [X22 + 0x90]
	0x03C219B0 MOV W20, W1
	0x03C219B4 MOV W19, W0
	0x03C219B8 TBNZ X8, 0x0, 0x3C219D0
	0x03C219BC ADRP X0, 0x532000
	0x03C219C0 LDR X0, [X0 + 0x90]
	0x03C219C4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3840]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51404800
	012 Add X0, X0, 3049
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3840], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetRenderTextureDescriptor_Injected(ref UnityEngine.RenderTextureDescriptor desc)

Disassembly:
	0x03C21B50 B 0x3C21B54
	0x03C21B54 STR X30, [X31 - 0x50]!
	0x03C21B58 STP X26, X25, [X31 + 0x10]
	0x03C21B5C STP X24, X23, [X31 + 0x20]
	0x03C21B60 STP X22, X21, [X31 + 0x30]
	0x03C21B64 STP X20, X19, [X31 + 0x40]
	0x03C21B68 ADRP X26, 0x7C3000
	0x03C21B6C LDRB W8, [X26 + 0xEF3]
	0x03C21B70 MOV W20, W6
	0x03C21B74 MOV W21, W5
	0x03C21B78 MOV W25, W4
	0x03C21B7C MOV W23, W3
	0x03C21B80 MOV W22, W2
	0x03C21B84 MOV W24, W1
	0x03C21B88 MOV X19, X0
	0x03C21B8C TBNZ X8, 0x0, 0x3C21BA4
	0x03C21B90 ADRP X0, 0x532000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3848]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51503104
	012 Add X0, X0, 4094
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3848], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetDescriptor_Injected(out UnityEngine.RenderTextureDescriptor ret)

Disassembly:
	0x03C21B94 LDR X0, [X0 + 0x90]
	0x03C21B98 BL 0x1C16CF4
	0x03C21B9C MOVZ W8, 0x1
	0x03C21BA0 STRB W8, [X26 + 0xEF3]
	0x03C21BA4 MOV W0, W25
	0x03C21BA8 MOV W1, W21
	0x03C21BAC BL 0x3C21E74
	0x03C21BB0 CMP W25, 0x3
	0x03C21BB4 MOV W21, W0
	0x03C21BB8 CSET W1, EQ
	0x03C21BBC MOV W0, W23
	0x03C21BC0 BL 0x3C21FD4
	0x03C21BC4 MOV W23, W0
	0x03C21BC8 CBZ W21, 0x3C21BE4
	0x03C21BCC MOVZ W2, 0x4
	0x03C21BD0 MOV X0, X19
	0x03C21BD4 MOV W1, W21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C4000
	006 Move X2, [X21+3856]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51449856
	012 Add X0, X0, 1033
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3856], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.RenderTexture GetTemporary_Internal_Injected(ref UnityEngine.RenderTextureDescriptor desc)

Disassembly:
	0x03C21C14 MOV W1, W24
	0x03C21C18 LDP X9, X2, [X8 + 0x198]
	0x03C21C1C BLR X9
	0x03C21C20 LDR X8, [X19]
	0x03C21C24 MOV X0, X19
	0x03C21C28 MOV W1, W22
	0x03C21C2C LDP X9, X2, [X8 + 0x1B8]
	0x03C21C30 BLR X9
	0x03C21C34 ADRP X22, 0x7C3000
	0x03C21C38 LDR X8, [X22 + 0xE58]
	0x03C21C3C CBNZ X8, 0x3C21C54
	0x03C21C40 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C21C44 ADD X0, X0, 0xC47
	0x03C21C48 BL 0x1C16CB8
	0x03C21C4C MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C4000
	005 Move X1, [X20+3864]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51437568
	010 Add X0, X0, 3044
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3864], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

