Type: UnityEngine.BootConfigData

Method: UnityEngine.BootConfigData WrapBootConfigData(System.IntPtr nativeHandle)

Disassembly:
	0x03C044F8 MOV W2, W20
	0x03C044FC MOV X3, X19
	0x03C04500 LDP X20, X19, [X31 + 0x20]
	0x03C04504 LDP X22, X21, [X31 + 0x10]
	0x03C04508 LDP X30, X23, [X31], #0x30
	0x03C0450C BR X4
	0x03C04510 SUB X31, X31, 0x40
	0x03C04514 STP X30, X21, [X31 + 0x20]
	0x03C04518 STP X20, X19, [X31 + 0x30]
	0x03C0451C ADRP X21, 0x7E0000
	0x03C04520 LDR X8, [X21 + 0xE8]
	0x03C04524 MOV W19, W1
	0x03C04528 MOV X20, X0
	0x03C0452C STP S0, S1, [X31 + 0x10]
	0x03C04530 STR S2, [X31 + 0x18]
	0x03C04534 STR W31, [X31 + 0x8]
	0x03C04538 STR X31, [X31]
	0x03C0453C CBNZ X8, 0x3C04554
	0x03C04540 ADRP X0, 0xFFFFFFFFFCEEC000
	0x03C04544 ADD X0, X0, 0xBD5
	0x03C04548 BL 0x1C16CB8
	0x03C0454C MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7E0000
	006 Move X21, 0x55B000
	007 Move W8, [X20+3859]
	008 Move X21, [X21+2840]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x55B000
	015 Move X0, [X0+2840]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3859], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call BootConfigData..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Void .ctor(System.IntPtr nativeHandle)

Disassembly:
	0x03C04550 STR X0, [X21 + 0xE8]
	0x03C04554 ADD X1, X31, 0x10
	0x03C04558 ADD X3, X31, 0x0
	0x03C0455C MOV X0, X20
	0x03C04560 MOV W2, W19
	0x03C04564 BLR X8
	0x03C04568 LDP S0, S1, [X31]
	0x03C0456C LDR V2, [X31 + 0x8]
	0x03C04570 LDP X20, X19, [X31 + 0x30]
	0x03C04574 LDP X30, X21, [X31 + 0x20]
	0x03C04578 ADD X31, X31, 0x40
	0x03C0457C RET
	0x03C04580 STP X30, X23, [X31 - 0x30]!
	0x03C04584 STP X22, X21, [X31 + 0x10]
	0x03C04588 STP X20, X19, [X31 + 0x20]
	0x03C0458C ADRP X23, 0x7E0000
	0x03C04590 LDR X4, [X23 + 0xE8]
	0x03C04594 MOV X19, X3
	0x03C04598 MOV W20, W2
	0x03C0459C MOV X21, X1
	0x03C045A0 MOV X22, X0
	0x03C045A4 CBNZ X4, 0x3C045BC
	0x03C045A8 ADRP X0, 0xFFFFFFFFFCEEC000
	0x03C045AC ADD X0, X0, 0xBD5
	0x03C045B0 BL 0x1C16CB8
	0x03C045B4 MOV X4, X0
	0x03C045B8 STR X0, [X23 + 0xE8]
	0x03C045BC MOV X0, X22
	0x03C045C0 MOV X1, X21
	0x03C045C4 MOV W2, W20
	0x03C045C8 MOV X3, X19
	0x03C045CC LDP X20, X19, [X31 + 0x20]
	0x03C045D0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X19
	009 Move X1, X31
	010 Move X2, X31
	011 Call IntPtr.op_Equality, X0, X1
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move [X20+16], X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return 
	021 Move X0, 0x4F8000
	022 Move X0, [X0+1400]
	023 Call 0x1C17D08
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Move X0, 0x55B000
	027 Move X0, [X0+2848]
	028 Call 0x1C17D08
	029 Move X1, X0
	030 Move X0, X19
	031 Move X2, X31
	032 Call ArgumentException..ctor, X0, X1
	033 Move X0, 0x55B000
	034 Move X0, [X0+2856]
	035 Call 0x1C17D08
	036 Move X1, X0
	037 Move X0, X19
	038 Call 0x1C17DEC

