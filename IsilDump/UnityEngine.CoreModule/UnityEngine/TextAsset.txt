Type: UnityEngine.TextAsset

Method: System.Byte[] get_bytes()

Disassembly:
	0x03C38CA4 MOV X1, X0
	0x03C38CA8 MOV X0, X19
	0x03C38CAC BL 0x3C363D0
	0x03C38CB0 B 0x3C38CE4
	0x03C38CB4 ADRP X0, 0x4C3000
	0x03C38CB8 LDR X0, [X0 + 0x578]
	0x03C38CBC BL 0x1C16D08
	0x03C38CC0 BL 0x1C16F10
	0x03C38CC4 MOV X19, X0
	0x03C38CC8 ADRP X0, 0x527000
	0x03C38CCC LDR X0, [X0 + 0x658]
	0x03C38CD0 BL 0x1C16D08
	0x03C38CD4 MOV X1, X0
	0x03C38CD8 MOV X0, X19
	0x03C38CDC MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AE000
	005 Move X1, [X20+1232]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51642368
	010 Add X0, X0, 804
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1232], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.IntPtr GetDataPtr()

Disassembly:
	0x03C38CE0 BL 0x3314A68
	0x03C38CE4 ADRP X0, 0x527000
	0x03C38CE8 LDR X0, [X0 + 0x660]
	0x03C38CEC BL 0x1C16D08
	0x03C38CF0 MOV X1, X0
	0x03C38CF4 MOV X0, X19
	0x03C38CF8 BL 0x1C16DEC
	0x03C38CFC CBZ X0, 0x3C38D04
	0x03C38D00 RET
	0x03C38D04 STR X30, [X31 - 0x20]!
	0x03C38D08 STP X20, X19, [X31 + 0x10]
	0x03C38D0C ADRP X0, 0x4C3000
	0x03C38D10 LDR X0, [X0 + 0x578]
	0x03C38D14 MOV X19, X1
	0x03C38D18 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AE000
	005 Move X1, [X20+1240]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51515392
	010 Add X0, X0, 2708
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1240], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int64 GetDataSize()

Disassembly:
	0x03C38D1C BL 0x1C16F10
	0x03C38D20 MOV X1, X19
	0x03C38D24 MOV X2, X31
	0x03C38D28 MOV X20, X0
	0x03C38D2C BL 0x3314A68
	0x03C38D30 ADRP X0, 0x527000
	0x03C38D34 LDR X0, [X0 + 0x668]
	0x03C38D38 BL 0x1C16D08
	0x03C38D3C MOV X1, X0
	0x03C38D40 MOV X0, X20
	0x03C38D44 BL 0x1C16DEC
	0x03C38D48 SUB X31, X31, 0x40
	0x03C38D4C STP X30, X21, [X31 + 0x20]
	0x03C38D50 STP X20, X19, [X31 + 0x30]
	0x03C38D54 STP S0, S1, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AE000
	005 Move X1, [X20+1248]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51544064
	010 Add X0, X0, 1203
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1248], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.String get_text()

Disassembly:
	0x03C38D58 STR S2, [X31 + 0x18]
	0x03C38D5C ADRP X20, 0x7AD000
	0x03C38D60 STP S3, S4, [X31]
	0x03C38D64 STP S5, S6, [X31 + 0x8]
	0x03C38D68 ADRP X21, 0x4BB000
	0x03C38D6C LDRB W8, [X20 + 0x570]
	0x03C38D70 LDR X21, [X21 + 0x598]
	0x03C38D74 MOV X19, X0
	0x03C38D78 TBNZ X8, 0x0, 0x3C38D90
	0x03C38D7C ADRP X0, 0x4BB000
	0x03C38D80 LDR X0, [X0 + 0x598]
	0x03C38D84 BL 0x1C16CF4
	0x03C38D88 MOVZ W8, 0x1
	0x03C38D8C STRB W8, [X20 + 0x570]
	0x03C38D90 LDR X0, [X21]
	0x03C38D94 LDR W8, [X0 + 0xE0]
	0x03C38D98 CBNZ W8, 0x3C38DA0
	0x03C38D9C BL 0x1C16DFC
	0x03C38DA0 ADRP X20, 0x7AD000
	0x03C38DA4 LDR X8, [X20 + 0x5B8]
	0x03C38DA8 CBNZ X8, 0x3C38DC0
	0x03C38DAC ADRP X0, 0xFFFFFFFFFCEDA000
	0x03C38DB0 ADD X0, X0, 0xDE7
	0x03C38DB4 BL 0x1C16CB8
	0x03C38DB8 MOV X8, X0
	0x03C38DBC STR X0, [X20 + 0x5B8]
	0x03C38DC0 ADD X1, X31, 0x10
	0x03C38DC4 ADD X2, X31, 0x0
	0x03C38DC8 MOV X0, X19
	0x03C38DCC BLR X8
	0x03C38DD0 LDP X20, X19, [X31 + 0x30]
	0x03C38DD4 LDP X30, X21, [X31 + 0x20]
	0x03C38DD8 ADD X31, X31, 0x40
	0x03C38DDC RET
	0x03C38DE0 STR D14, [X31 - 0x60]!
	0x03C38DE4 STP D13, D12, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AE000
	005 Move W8, [X20+1256]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x4BE000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1256], W8
	016 Move X20, 0x7AE000
	017 Move X8, [X20+1232]
	018 Compare X8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51642368
	021 Add X0, X0, 804
	022 Call 0x1C17CB8
	023 Move X8, X0
	024 Move [X20+1232], X0
	025 Move X0, X19
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare X0, 0
	028 JumpIfEqual {44}
	029 Move X8, [X0+24]
	030 Compare X8, 0
	031 JumpIfEqual {35}
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X8, 0x4BE000
	036 Move X8, [X8+632]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X8, [X8]
	040 Move X8, [X8+184]
	041 Move X0, [X8]
	042 Move X30, [X31+32]
	043 Return X0
	044 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03C39070 ADRP X20, 0x4E3000

ISIL:
	001 Call TextAsset.get_text, X0
	002 Return X0

Method: Unity.Collections.NativeArray`1<T> GetData()

Disassembly:
	0x0229CE9C MOV W0, W1
	0x0229CEA0 MOV X1, X31
	0x0229CEA4 B 0x338F3E0
	0x0229CEA8 CBZ X0, 0x229CEB0
	0x0229CEAC RET
	0x0229CEB0 MOV W0, W1
	0x0229CEB4 MOV X1, X31
	0x0229CEB8 B 0x338F3E0
	0x0229CEBC CBZ X0, 0x229CEC4
	0x0229CEC0 RET
	0x0229CEC4 MOV W0, W1
	0x0229CEC8 MOV X1, X31
	0x0229CECC B 0x338F3E0
	0x0229CED0 CBZ X0, 0x229CED8
	0x0229CED4 RET
	0x0229CED8 MOV W0, W1
	0x0229CEDC MOV X1, X31
	0x0229CEE0 B 0x338F3E0
	0x0229CEE4 CBZ X0, 0x229CEEC
	0x0229CEE8 RET
	0x0229CEEC MOV W0, W1
	0x0229CEF0 MOV X1, X31
	0x0229CEF4 B 0x338F3E0
	0x0229CEF8 CBZ X0, 0x229CF00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {12}
	010 Move X0, X19
	011 Call 0x1C5D6E0
	012 Move X0, X20
	013 Move X1, X31
	014 Call TextAsset.GetDataSize, X0
	015 Move X21, X0
	016 Move X0, X20
	017 Move X1, X31
	018 Call TextAsset.GetDataPtr, X0
	019 Move X1, X31
	020 Call IntPtr.op_Explicit, X0
	021 Move X8, [X19+56]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move W2, 1
	025 Move W1, W21
	026 Move X3, [X8+8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	030 Return X0

Method: System.String DecodeString(System.Byte[] bytes)

Disassembly:
	0x03C38DE8 STP D11, D10, [X31 + 0x18]
	0x03C38DEC STP D9, D8, [X31 + 0x28]
	0x03C38DF0 STR X30, [X31 + 0x38]
	0x03C38DF4 STP X22, X21, [X31 + 0x40]
	0x03C38DF8 STP X20, X19, [X31 + 0x50]
	0x03C38DFC ADRP X22, 0x7AD000
	0x03C38E00 ADRP X21, 0x4BB000
	0x03C38E04 LDRB W8, [X22 + 0x4F5]
	0x03C38E08 LDR X21, [X21 + 0x598]
	0x03C38E0C MOV X19, X1
	0x03C38E10 MOV V8.16B, V6.16B
	0x03C38E14 MOV V9.16B, V5.16B
	0x03C38E18 MOV V10.16B, V4.16B
	0x03C38E1C MOV V11.16B, V3.16B
	0x03C38E20 MOV V12.16B, V2.16B
	0x03C38E24 MOV V13.16B, V1.16B
	0x03C38E28 MOV V14.16B, V0.16B
	0x03C38E2C MOV X20, X0
	0x03C38E30 TBNZ X8, 0x0, 0x3C38E54
	0x03C38E34 ADRP X0, 0x4BB000
	0x03C38E38 LDR X0, [X0 + 0x598]
	0x03C38E3C BL 0x1C16CF4
	0x03C38E40 ADRP X0, 0x4E4000
	0x03C38E44 LDR X0, [X0 + 0x1C8]
	0x03C38E48 BL 0x1C16CF4
	0x03C38E4C MOVZ W8, 0x1
	0x03C38E50 STRB W8, [X22 + 0x4F5]
	0x03C38E54 LDR X0, [X21]
	0x03C38E58 LDR W8, [X0 + 0xE0]
	0x03C38E5C CBNZ W8, 0x3C38E64
	0x03C38E60 BL 0x1C16DFC
	0x03C38E64 MOV X0, X19
	0x03C38E68 MOV X1, X31
	0x03C38E6C BL 0x3C3883C
	0x03C38E70 LDR X8, [X21]
	0x03C38E74 MOV W21, W0
	0x03C38E78 LDR W9, [X8 + 0xE0]
	0x03C38E7C CBZ W9, 0x3C38EC4
	0x03C38E80 TBZ X21, 0x0, 0x3C38ED0
	0x03C38E84 MOV X0, X20
	0x03C38E88 MOV V1.16B, V13.16B
	0x03C38E8C MOV V2.16B, V12.16B
	0x03C38E90 MOV V3.16B, V11.16B
	0x03C38E94 MOV V4.16B, V10.16B
	0x03C38E98 MOV V5.16B, V9.16B
	0x03C38E9C MOV V6.16B, V8.16B
	0x03C38EA0 LDP X20, X19, [X31 + 0x50]
	0x03C38EA4 LDP X22, X21, [X31 + 0x40]
	0x03C38EA8 LDR X30, [X31 + 0x38]
	0x03C38EAC LDP D9, D8, [X31 + 0x28]
	0x03C38EB0 LDP D11, D10, [X31 + 0x18]
	0x03C38EB4 LDP D13, D12, [X31 + 0x8]
	0x03C38EB8 MOV V0.16B, V14.16B
	0x03C38EBC LDR V14, [X31], #0x60
	0x03C38EC0 B 0x3C38B4C
	0x03C38EC4 MOV X0, X8
	0x03C38EC8 BL 0x1C16DFC
	0x03C38ECC TBNZ X21, 0x0, 0x3C38E84
	0x03C38ED0 ADRP X8, 0x4E4000
	0x03C38ED4 LDR X8, [X8 + 0x1C8]
	0x03C38ED8 MOV X0, X20
	0x03C38EDC LDR X1, [X8]
	0x03C38EE0 BL 0x3C38CFC
	0x03C38EE4 MOV X0, X20
	0x03C38EE8 MOV X1, X19
	0x03C38EEC MOV V0.16B, V14.16B
	0x03C38EF0 MOV V1.16B, V13.16B
	0x03C38EF4 MOV V2.16B, V12.16B
	0x03C38EF8 MOV V3.16B, V11.16B
	0x03C38EFC MOV V4.16B, V10.16B
	0x03C38F00 MOV V5.16B, V9.16B
	0x03C38F04 MOV V6.16B, V8.16B
	0x03C38F08 BL 0x3C38F84
	0x03C38F0C MOV X1, X31
	0x03C38F10 MOV X19, X0
	0x03C38F14 BL 0x3C3883C
	0x03C38F18 TBNZ X0, 0x0, 0x3C38F40
	0x03C38F1C MOV X0, X19
	0x03C38F20 LDP X20, X19, [X31 + 0x50]
	0x03C38F24 LDP X22, X21, [X31 + 0x40]
	0x03C38F28 LDR X30, [X31 + 0x38]
	0x03C38F2C LDP D9, D8, [X31 + 0x28]
	0x03C38F30 LDP D11, D10, [X31 + 0x18]
	0x03C38F34 LDP D13, D12, [X31 + 0x8]
	0x03C38F38 LDR V14, [X31], #0x60
	0x03C38F3C RET
	0x03C38F40 ADRP X0, 0x4E4000
	0x03C38F44 LDR X0, [X0 + 0x1D0]
	0x03C38F48 BL 0x1C16D08
	0x03C38F4C BL 0x1C16F10
	0x03C38F50 MOV X19, X0
	0x03C38F54 ADRP X0, 0x4E4000
	0x03C38F58 LDR X0, [X0 + 0x1D8]
	0x03C38F5C BL 0x1C16D08
	0x03C38F60 MOV X1, X0
	0x03C38F64 MOV X0, X19
	0x03C38F68 BL 0x3C363D0
	0x03C38F6C ADRP X0, 0x527000
	0x03C38F70 LDR X0, [X0 + 0x670]
	0x03C38F74 BL 0x1C16D08
	0x03C38F78 MOV X1, X0
	0x03C38F7C MOV X0, X19
	0x03C38F80 BL 0x1C16DEC
	0x03C38F84 SUB X31, X31, 0x50
	0x03C38F88 STR X30, [X31 + 0x20]
	0x03C38F8C STP X22, X21, [X31 + 0x30]
	0x03C38F90 STP X20, X19, [X31 + 0x40]
	0x03C38F94 STP S0, S1, [X31 + 0x10]
	0x03C38F98 STR S2, [X31 + 0x18]
	0x03C38F9C ADRP X21, 0x7AD000
	0x03C38FA0 STP S3, S4, [X31]
	0x03C38FA4 STP S5, S6, [X31 + 0x8]
	0x03C38FA8 ADRP X22, 0x4BB000
	0x03C38FAC LDRB W8, [X21 + 0x571]
	0x03C38FB0 LDR X22, [X22 + 0x598]
	0x03C38FB4 MOV X19, X1
	0x03C38FB8 MOV X20, X0
	0x03C38FBC TBNZ X8, 0x0, 0x3C38FD4
	0x03C38FC0 ADRP X0, 0x4BB000
	0x03C38FC4 LDR X0, [X0 + 0x598]
	0x03C38FC8 BL 0x1C16CF4
	0x03C38FCC MOVZ W8, 0x1
	0x03C38FD0 STRB W8, [X21 + 0x571]
	0x03C38FD4 LDR X0, [X22]
	0x03C38FD8 LDR W8, [X0 + 0xE0]
	0x03C38FDC CBNZ W8, 0x3C38FE4
	0x03C38FE0 BL 0x1C16DFC
	0x03C38FE4 ADRP X21, 0x7AD000
	0x03C38FE8 LDR X8, [X21 + 0x5C0]
	0x03C38FEC CBNZ X8, 0x3C39004
	0x03C38FF0 ADRP X0, 0xFFFFFFFFFCED7000
	0x03C38FF4 ADD X0, X0, 0x4D8
	0x03C38FF8 BL 0x1C16CB8
	0x03C38FFC MOV X8, X0
	0x03C39000 STR X0, [X21 + 0x5C0]
	0x03C39004 ADD X2, X31, 0x10
	0x03C39008 ADD X3, X31, 0x0
	0x03C3900C MOV X0, X20
	0x03C39010 MOV X1, X19
	0x03C39014 BLR X8
	0x03C39018 LDP X20, X19, [X31 + 0x40]
	0x03C3901C LDP X22, X21, [X31 + 0x30]
	0x03C39020 LDR X30, [X31 + 0x20]
	0x03C39024 ADD X31, X31, 0x50
	0x03C39028 RET
	0x03C3902C STP X30, X21, [X31 - 0x20]!
	0x03C39030 STP X20, X19, [X31 + 0x10]
	0x03C39034 ADRP X21, 0x7AC000
	0x03C39038 ADRP X20, 0x4BA000
	0x03C3903C LDRB W8, [X21 + 0x4F6]
	0x03C39040 LDR X20, [X20 + 0x598]
	0x03C39044 MOV X19, X0
	0x03C39048 TBNZ X8, 0x0, 0x3C3906C
	0x03C3904C ADRP X0, 0x4BA000
	0x03C39050 LDR X0, [X0 + 0x598]
	0x03C39054 BL 0x1C16CF4
	0x03C39058 ADRP X0, 0x4E3000
	0x03C3905C LDR X0, [X0 + 0x1C8]
	0x03C39060 BL 0x1C16CF4
	0x03C39064 MOVZ W8, 0x1
	0x03C39068 STRB W8, [X21 + 0x4F6]
	0x03C3906C LDR X0, [X20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x7AE000
	011 Move X22, 0x528000
	012 Move W8, [X20+1257]
	013 Move X22, [X22+1560]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x528000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move X0, 0x528000
	023 Move X0, [X0+1568]
	024 Call 0x1C17CF4
	025 Move X0, 0x528000
	026 Move X0, [X0+1576]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+1257], W8
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X22]
	036 Move X8, [X0+184]
	037 Move X8, [X8]
	038 Compare X8, 0
	039 JumpIfEqual {164}
	040 Move W8, [X8+24]
	041 Move X20, 0x4C2000
	042 Move X20, [X20+3264]
	043 Move W23, W31
	044 Add X24, X19, 32
	045 NotImplemented "Instruction BIC not yet implemented."
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Move X8, [X0+184]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X8]
	054 Compare X8, 0
	055 JumpIfEqual {164}
	056 Move W9, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X26, W23
	059 Add X8, X8, X26
	060 Move X11, [X8+32]
	061 Compare X11, 0
	062 JumpIfEqual {164}
	063 Compare X19, 0
	064 JumpIfEqual {164}
	065 Move X8, [X11+24]
	066 Move X9, [X19+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X10, X31
	070 Add X11, X11, 32
	071 Move W21, W8
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move W12, [X11]
	075 Move W13, [X24]
	076 Add X10, X10, 1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSINV not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move TEMP, X21
	081 And TEMP, TEMP, -2147483648
	082 Compare TEMP, -2147483648
	083 JumpIfNotEqual {89}
	084 Move W21, W8
	085 Move TEMP, X21
	086 And TEMP, TEMP, -2147483648
	087 Compare TEMP, -2147483648
	088 JumpIfEqual {131}
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {94}
	092 Call 0x1C17DFC
	093 Move X0, [X22]
	094 Move X8, [X0+184]
	095 Move X8, [X8]
	096 Compare X8, 0
	097 JumpIfEqual {112}
	098 Move W9, [X8+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Add X8, X8, X26
	101 Move X0, [X8+40]
	102 Compare X0, 0
	103 JumpIfEqual {114}
	104 Move X8, [X0]
	105 Move W9, [X19+24]
	106 Move X10, [X8+904]
	107 Move X4, [X8+912]
	108 Subtract W3, W9, W21
	109 Move X1, X19
	110 Move W2, W21
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Call 0x1C17F20
	113 Call 0x1C17F28
	114 Call 0x1C17F20
	115 Move X21, X0
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X21
	118 Call 0x3EB2AD0
	119 Move X21, X0
	120 Move X0, X20
	121 Call 0x1C17D08
	122 Move X8, [X21]
	123 Move X1, [X8]
	124 Call 0x1C18270
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {165}
	129 Call 0x3EB2AE0
	130 Move X0, [X22]
	131 Add W23, W23, 1
	132 Move X20, [X31+64]
	133 Move X19, [X31+72]
	134 Move X22, [X31+48]
	135 Move X21, [X31+56]
	136 Move X24, [X31+32]
	137 Move X23, [X31+40]
	138 Move X26, [X31+16]
	139 Move X25, [X31+24]
	140 Move X30, [X31+80]
	141 Return X0
	142 Compare X19, 0
	143 JumpIfEqual {164}
	144 Move X0, [X8+8]
	145 Compare X0, 0
	146 JumpIfEqual {164}
	147 Move X8, [X0]
	148 Move W3, [X19+24]
	149 Move X1, X19
	150 Move X20, [X31+64]
	151 Move X19, [X31+72]
	152 Move X5, [X8+904]
	153 Move X4, [X8+912]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X26, [X31+16]
	159 Move X25, [X31+24]
	160 Move W2, W31
	161 Move X30, [X31+80]
	162 CallNoReturn X5
	163 Call 0x1C17F28
	164 Call 0x1C17F20
	165 Move W0, 8
	166 Call 0x3EB2AF0
	167 Move X8, [X21]
	168 Move [X0], X8
	169 Move X1, 0x27C000
	170 Add X1, X1, 3672
	171 Move X2, X31
	172 Call 0x3EB2B00
	173 Move X21, X0
	174 Call 0x3EB2AE0
	175 Move X0, X21
	176 Call 0x1D2D690
	177 Call 0x1991590

