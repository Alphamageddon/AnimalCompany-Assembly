Type: UnityEngine.MaterialPropertyBlock

Method: System.Void SetIntImpl(System.Int32 name, System.Int32 value)

Disassembly:
	0x03C12A6C BLR X8
	0x03C12A70 LDR X8, [X31 + 0x18]
	0x03C12A74 LDUR V0, [X31 + 0x8]
	0x03C12A78 LDP X30, X21, [X31 + 0x20]
	0x03C12A7C STR X8, [X19 + 0x10]
	0x03C12A80 STR V0, [X19]
	0x03C12A84 LDP X20, X19, [X31 + 0x30]
	0x03C12A88 ADD X31, X31, 0x40
	0x03C12A8C RET
	0x03C12A90 STP X30, X21, [X31 - 0x20]!
	0x03C12A94 STP X20, X19, [X31 + 0x10]
	0x03C12A98 ADRP X21, 0x7D2000
	0x03C12A9C LDR X2, [X21 + 0x740]
	0x03C12AA0 MOV X19, X1
	0x03C12AA4 MOV X20, X0
	0x03C12AA8 CBNZ X2, 0x3C12AC0
	0x03C12AAC ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C12AB0 ADD X0, X0, 0x2A3
	0x03C12AB4 BL 0x1C16CB8
	0x03C12AB8 MOV X2, X0
	0x03C12ABC STR X0, [X21 + 0x740]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D3000
	007 Move X3, [X22+1544]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51326976
	014 Add X0, X0, 2622
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1544], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetFloatImpl(System.Int32 name, System.Single value)

Disassembly:
	0x03C12AC0 MOV X0, X20
	0x03C12AC4 MOV X1, X19
	0x03C12AC8 LDP X20, X19, [X31 + 0x10]
	0x03C12ACC LDP X30, X21, [X31], #0x20
	0x03C12AD0 BR X2
	0x03C12AD4 STP X30, X21, [X31 - 0x20]!
	0x03C12AD8 STP X20, X19, [X31 + 0x10]
	0x03C12ADC ADRP X21, 0x7D2000
	0x03C12AE0 LDR X2, [X21 + 0x748]
	0x03C12AE4 MOV X19, X1
	0x03C12AE8 MOV X20, X0
	0x03C12AEC CBNZ X2, 0x3C12B04
	0x03C12AF0 ADRP X0, 0xFFFFFFFFFCF04000
	0x03C12AF4 ADD X0, X0, 0x7C8
	0x03C12AF8 BL 0x1C16CB8
	0x03C12AFC MOV X2, X0
	0x03C12B00 STR X0, [X21 + 0x748]
	0x03C12B04 MOV X0, X20
	0x03C12B08 MOV X1, X19
	0x03C12B0C LDP X20, X19, [X31 + 0x10]
	0x03C12B10 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7D3000
	007 Move X2, [X21+1552]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51343360
	014 Add X0, X0, 2537
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+1552], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void SetVectorImpl(System.Int32 name, UnityEngine.Vector4 value)

Disassembly:
	0x03C12B14 BR X2
	0x03C12B18 STP X30, X21, [X31 - 0x20]!
	0x03C12B1C STP X20, X19, [X31 + 0x10]
	0x03C12B20 ADRP X21, 0x7D2000
	0x03C12B24 LDR X2, [X21 + 0x748]
	0x03C12B28 MOV X19, X1
	0x03C12B2C MOV X20, X0
	0x03C12B30 CBNZ X2, 0x3C12B48
	0x03C12B34 ADRP X0, 0xFFFFFFFFFCF04000
	0x03C12B38 ADD X0, X0, 0x7C8
	0x03C12B3C BL 0x1C16CB8
	0x03C12B40 MOV X2, X0
	0x03C12B44 STR X0, [X21 + 0x748]
	0x03C12B48 MOV X0, X20
	0x03C12B4C MOV X1, X19
	0x03C12B50 LDP X20, X19, [X31 + 0x10]
	0x03C12B54 LDP X30, X21, [X31], #0x20
	0x03C12B58 BR X2
	0x03C12B5C STR X30, [X31 - 0x20]!
	0x03C12B60 STP X20, X19, [X31 + 0x10]
	0x03C12B64 ADRP X20, 0x7D2000
	0x03C12B68 LDR X1, [X20 + 0x678]
	0x03C12B6C MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7D3000
	007 Move X8, [X21+1632]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31], S0
	011 Move [X31+8], S1
	012 Move [X31+8], S2
	013 Move [X31+16], S3
	014 Compare X8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, -51474432
	017 Add X0, X0, 4087
	018 Call 0x1C17CB8
	019 Move X8, X0
	020 Move [X21+1632], X0
	021 Add X2, X31, 0
	022 Move X0, X20
	023 Move W1, W19
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return 

Method: System.Void SetColorImpl(System.Int32 name, UnityEngine.Color value)

Disassembly:
	0x03C12BC4 MOV X0, X19
	0x03C12BC8 LDP X20, X19, [X31 + 0x10]
	0x03C12BCC LDR X30, [X31], #0x20
	0x03C12BD0 BR X1
	0x03C12BD4 STP X30, X21, [X31 - 0x20]!
	0x03C12BD8 STP X20, X19, [X31 + 0x10]
	0x03C12BDC ADRP X21, 0x7D2000
	0x03C12BE0 LDR X2, [X21 + 0x688]
	0x03C12BE4 MOV X19, X1
	0x03C12BE8 MOV X20, X0
	0x03C12BEC CBNZ X2, 0x3C12C04
	0x03C12BF0 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C12BF4 ADD X0, X0, 0xDB5
	0x03C12BF8 BL 0x1C16CB8
	0x03C12BFC MOV X2, X0
	0x03C12C00 STR X0, [X21 + 0x688]
	0x03C12C04 MOV X0, X20
	0x03C12C08 MOV X1, X19
	0x03C12C0C LDP X20, X19, [X31 + 0x10]
	0x03C12C10 LDP X30, X21, [X31], #0x20
	0x03C12C14 BR X2
	0x03C12C18 STR X30, [X31 - 0x20]!
	0x03C12C1C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7D3000
	007 Move X8, [X21+1640]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31], S0
	011 Move [X31+8], S1
	012 Move [X31+8], S2
	013 Move [X31+16], S3
	014 Compare X8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, -51367936
	017 Add X0, X0, 2060
	018 Call 0x1C17CB8
	019 Move X8, X0
	020 Move [X21+1640], X0
	021 Add X2, X31, 0
	022 Move X0, X20
	023 Move W1, W19
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return 

Method: System.Void SetMatrixImpl(System.Int32 name, UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C12C74 ADD X0, X0, 0x8BC
	0x03C12C78 BL 0x1C16CB8
	0x03C12C7C MOV X2, X0
	0x03C12C80 STR X0, [X21 + 0x698]
	0x03C12C84 MOV X0, X20
	0x03C12C88 MOV X1, X19
	0x03C12C8C LDP X20, X19, [X31 + 0x10]
	0x03C12C90 LDP X30, X21, [X31], #0x20
	0x03C12C94 BR X2
	0x03C12C98 STP X30, X21, [X31 - 0x20]!
	0x03C12C9C STP X20, X19, [X31 + 0x10]
	0x03C12CA0 ADRP X21, 0x7D2000
	0x03C12CA4 LDR X2, [X21 + 0x6A0]
	0x03C12CA8 MOV X19, X1
	0x03C12CAC MOV X20, X0
	0x03C12CB0 CBNZ X2, 0x3C12CC8
	0x03C12CB4 ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C12CB8 ADD X0, X0, 0x25D
	0x03C12CBC BL 0x1C16CB8
	0x03C12CC0 MOV X2, X0
	0x03C12CC4 STR X0, [X21 + 0x6A0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D3000
	007 Move X3, [X22+1648]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51367936
	014 Add X0, X0, 2150
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1648], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetTextureImpl(System.Int32 name, UnityEngine.Texture value)

Disassembly:
	0x03C12D1C MOV W2, W19
	0x03C12D20 LDP X20, X19, [X31 + 0x20]
	0x03C12D24 LDP X22, X21, [X31 + 0x10]
	0x03C12D28 LDR X30, [X31], #0x30
	0x03C12D2C BR X3
	0x03C12D30 STR X30, [X31 - 0x30]!
	0x03C12D34 STP X22, X21, [X31 + 0x10]
	0x03C12D38 STP X20, X19, [X31 + 0x20]
	0x03C12D3C MOV X19, X1
	0x03C12D40 MOV X20, X0
	0x03C12D44 CBZ X1, 0x3C12D8C
	0x03C12D48 LDR W21, [X19 + 0x18]
	0x03C12D4C CBZ X20, 0x3C12D94
	0x03C12D50 ADRP X22, 0x7D2000
	0x03C12D54 LDR X3, [X22 + 0x6A8]
	0x03C12D58 CBNZ X3, 0x3C12D70
	0x03C12D5C ADRP X0, 0xFFFFFFFFFCF16000
	0x03C12D60 ADD X0, X0, 0x548
	0x03C12D64 BL 0x1C16CB8
	0x03C12D68 MOV X3, X0
	0x03C12D6C STR X0, [X22 + 0x6A8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D3000
	007 Move X3, [X22+1560]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51269632
	014 Add X0, X0, 1745
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1560], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetRenderTextureImpl(System.Int32 name, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)

Disassembly:
	0x03C12D70 MOV X0, X20
	0x03C12D74 MOV X1, X19
	0x03C12D78 MOV W2, W21
	0x03C12D7C LDP X20, X19, [X31 + 0x20]
	0x03C12D80 LDP X22, X21, [X31 + 0x10]
	0x03C12D84 LDR X30, [X31], #0x30
	0x03C12D88 BR X3
	0x03C12D8C MOV W21, W31
	0x03C12D90 CBNZ X20, 0x3C12D50
	0x03C12D94 BL 0x1C16F20
	0x03C12D98 STP X30, X21, [X31 - 0x20]!
	0x03C12D9C STP X20, X19, [X31 + 0x10]
	0x03C12DA0 ADRP X21, 0x7D2000
	0x03C12DA4 LDR X2, [X21 + 0x6B0]
	0x03C12DA8 MOV X19, X1
	0x03C12DAC MOV X20, X0
	0x03C12DB0 CBNZ X2, 0x3C12DC8
	0x03C12DB4 ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C12DB8 ADD X0, X0, 0x7E
	0x03C12DBC BL 0x1C16CB8
	0x03C12DC0 MOV X2, X0
	0x03C12DC4 STR X0, [X21 + 0x6B0]
	0x03C12DC8 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7D3000
	008 Move X4, [X23+1568]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51408896
	016 Add X0, X0, 4054
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+1568], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetFloatArrayImpl(System.Int32 name, System.Single[] values, System.Int32 count)

Disassembly:
	0x03C12DCC MOV X1, X19
	0x03C12DD0 LDP X20, X19, [X31 + 0x10]
	0x03C12DD4 LDP X30, X21, [X31], #0x20
	0x03C12DD8 BR X2
	0x03C12DDC STP X30, X21, [X31 - 0x20]!
	0x03C12DE0 STP X20, X19, [X31 + 0x10]
	0x03C12DE4 ADRP X21, 0x7D2000
	0x03C12DE8 LDR X2, [X21 + 0x6B8]
	0x03C12DEC MOV X19, X1
	0x03C12DF0 MOV X20, X0
	0x03C12DF4 CBNZ X2, 0x3C12E0C
	0x03C12DF8 ADRP X0, 0xFFFFFFFFFCEDE000
	0x03C12DFC ADD X0, X0, 0xDB3
	0x03C12E00 BL 0x1C16CB8
	0x03C12E04 MOV X2, X0
	0x03C12E08 STR X0, [X21 + 0x6B8]
	0x03C12E0C MOV X0, X20
	0x03C12E10 MOV X1, X19
	0x03C12E14 LDP X20, X19, [X31 + 0x10]
	0x03C12E18 LDP X30, X21, [X31], #0x20
	0x03C12E1C BR X2
	0x03C12E20 STR X30, [X31 - 0x30]!
	0x03C12E24 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7D3000
	008 Move X4, [X23+1576]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51417088
	016 Add X0, X0, 3891
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+1576], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetVectorArrayImpl(System.Int32 name, UnityEngine.Vector4[] values, System.Int32 count)

Disassembly:
	0x03C12E28 STP X20, X19, [X31 + 0x20]
	0x03C12E2C ADRP X22, 0x7D2000
	0x03C12E30 LDR X3, [X22 + 0x6C0]
	0x03C12E34 MOV W19, W2
	0x03C12E38 MOV X20, X1
	0x03C12E3C MOV X21, X0
	0x03C12E40 CBNZ X3, 0x3C12E58
	0x03C12E44 ADRP X0, 0xFFFFFFFFFCEE6000
	0x03C12E48 ADD X0, X0, 0xF6C
	0x03C12E4C BL 0x1C16CB8
	0x03C12E50 MOV X3, X0
	0x03C12E54 STR X0, [X22 + 0x6C0]
	0x03C12E58 MOV X0, X21
	0x03C12E5C MOV X1, X20
	0x03C12E60 MOV W2, W19
	0x03C12E64 LDP X20, X19, [X31 + 0x20]
	0x03C12E68 LDP X22, X21, [X31 + 0x10]
	0x03C12E6C LDR X30, [X31], #0x30
	0x03C12E70 BR X3
	0x03C12E74 STR X30, [X31 - 0x30]!
	0x03C12E78 STP X22, X21, [X31 + 0x10]
	0x03C12E7C STP X20, X19, [X31 + 0x20]
	0x03C12E80 ADRP X22, 0x7D2000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7D3000
	008 Move X4, [X23+1584]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51302400
	016 Add X0, X0, 2769
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+1584], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetMatrixArrayImpl(System.Int32 name, UnityEngine.Matrix4x4[] values, System.Int32 count)

Disassembly:
	0x03C12E84 LDR X3, [X22 + 0x6C8]
	0x03C12E88 MOV W19, W2
	0x03C12E8C MOV X20, X1
	0x03C12E90 MOV X21, X0
	0x03C12E94 CBNZ X3, 0x3C12EAC
	0x03C12E98 ADRP X0, 0xFFFFFFFFFCEE0000
	0x03C12E9C ADD X0, X0, 0xFA1
	0x03C12EA0 BL 0x1C16CB8
	0x03C12EA4 MOV X3, X0
	0x03C12EA8 STR X0, [X22 + 0x6C8]
	0x03C12EAC MOV X0, X21
	0x03C12EB0 MOV X1, X20
	0x03C12EB4 MOV W2, W19
	0x03C12EB8 LDP X20, X19, [X31 + 0x20]
	0x03C12EBC LDP X22, X21, [X31 + 0x10]
	0x03C12EC0 LDR X30, [X31], #0x30
	0x03C12EC4 BR X3
	0x03C12EC8 STP X30, X21, [X31 - 0x20]!
	0x03C12ECC STP X20, X19, [X31 + 0x10]
	0x03C12ED0 ADRP X21, 0x7D2000
	0x03C12ED4 LDR X2, [X21 + 0x6B0]
	0x03C12ED8 MOV X19, X1
	0x03C12EDC MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7D3000
	008 Move X4, [X23+1592]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51429376
	016 Add X0, X0, 170
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+1592], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.IntPtr CreateImpl()

Disassembly:
	0x03C12EE0 CBNZ X2, 0x3C12EF8
	0x03C12EE4 ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C12EE8 ADD X0, X0, 0x7E
	0x03C12EEC BL 0x1C16CB8
	0x03C12EF0 MOV X2, X0
	0x03C12EF4 STR X0, [X21 + 0x6B0]
	0x03C12EF8 MOV X0, X20
	0x03C12EFC MOV X1, X19
	0x03C12F00 LDP X20, X19, [X31 + 0x10]
	0x03C12F04 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D3000
	004 Move X0, [X19+1600]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51507200
	008 Add X0, X0, 3953
	009 Call 0x1C17CB8
	010 Move [X19+1600], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void DestroyImpl(System.IntPtr mpb)

Disassembly:
	0x03C12F08 BR X2
	0x03C12F0C STR X30, [X31 - 0x30]!
	0x03C12F10 STP X22, X21, [X31 + 0x10]
	0x03C12F14 STP X20, X19, [X31 + 0x20]
	0x03C12F18 ADRP X22, 0x7D2000
	0x03C12F1C LDR X3, [X22 + 0x6C0]
	0x03C12F20 MOV W19, W2
	0x03C12F24 MOV X20, X1
	0x03C12F28 MOV X21, X0
	0x03C12F2C CBNZ X3, 0x3C12F44
	0x03C12F30 ADRP X0, 0xFFFFFFFFFCEE6000
	0x03C12F34 ADD X0, X0, 0xF6C
	0x03C12F38 BL 0x1C16CB8
	0x03C12F3C MOV X3, X0
	0x03C12F40 STR X0, [X22 + 0x6C0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D3000
	005 Move X1, [X20+1608]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51286016
	010 Add X0, X0, 1290
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1608], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Clear(System.Boolean keepMemory)

Disassembly:
	0x03C12F44 MOV X0, X21
	0x03C12F48 MOV X1, X20
	0x03C12F4C MOV W2, W19
	0x03C12F50 LDP X20, X19, [X31 + 0x20]
	0x03C12F54 LDP X22, X21, [X31 + 0x10]
	0x03C12F58 LDR X30, [X31], #0x30
	0x03C12F5C BR X3
	0x03C12F60 STP X30, X21, [X31 - 0x20]!
	0x03C12F64 STP X20, X19, [X31 + 0x10]
	0x03C12F68 ADRP X21, 0x7D2000
	0x03C12F6C LDR X2, [X21 + 0x6B8]
	0x03C12F70 MOV X19, X1
	0x03C12F74 MOV X20, X0
	0x03C12F78 CBNZ X2, 0x3C12F90
	0x03C12F7C ADRP X0, 0xFFFFFFFFFCEDE000
	0x03C12F80 ADD X0, X0, 0xDB3
	0x03C12F84 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D3000
	006 Move X2, [X21+1616]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51326976
	012 Add X0, X0, 2695
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1616], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Clear()

Disassembly:
	0x03C12F88 MOV X2, X0
	0x03C12F8C STR X0, [X21 + 0x6B8]
	0x03C12F90 MOV X0, X20
	0x03C12F94 MOV X1, X19
	0x03C12F98 LDP X20, X19, [X31 + 0x10]
	0x03C12F9C LDP X30, X21, [X31], #0x20
	0x03C12FA0 BR X2
	0x03C12FA4 STR X30, [X31 - 0x30]!
	0x03C12FA8 STP X22, X21, [X31 + 0x10]
	0x03C12FAC STP X20, X19, [X31 + 0x20]
	0x03C12FB0 ADRP X22, 0x7D2000
	0x03C12FB4 LDR X3, [X22 + 0x6C8]
	0x03C12FB8 MOV W19, W2
	0x03C12FBC MOV X20, X1
	0x03C12FC0 MOV X21, X0
	0x03C12FC4 CBNZ X3, 0x3C12FDC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D3000
	005 Move X2, [X20+1616]
	006 Move X19, X0
	007 Compare X2, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51326976
	010 Add X0, X0, 2695
	011 Call 0x1C17CB8
	012 Move X2, X0
	013 Move [X20+1616], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move W1, 1
	018 Move X30, [X31+32]
	019 CallNoReturn X2

Method: System.Void SetFloatArray(System.Int32 name, System.Single[] values, System.Int32 count)

Disassembly:
	0x03C12FC8 ADRP X0, 0xFFFFFFFFFCEE0000
	0x03C12FCC ADD X0, X0, 0xFA1
	0x03C12FD0 BL 0x1C16CB8
	0x03C12FD4 MOV X3, X0
	0x03C12FD8 STR X0, [X22 + 0x6C8]
	0x03C12FDC MOV X0, X21
	0x03C12FE0 MOV X1, X20
	0x03C12FE4 MOV W2, W19
	0x03C12FE8 LDP X20, X19, [X31 + 0x20]
	0x03C12FEC LDP X22, X21, [X31 + 0x10]
	0x03C12FF0 LDR X30, [X31], #0x30
	0x03C12FF4 BR X3
	0x03C12FF8 STR X30, [X31 - 0x20]!
	0x03C12FFC STP X20, X19, [X31 + 0x10]
	0x03C13000 ADRP X20, 0x7D1000
	0x03C13004 LDR X1, [X20 + 0x6D0]
	0x03C13008 MOV X19, X0
	0x03C1300C CBNZ X1, 0x3C13024
	0x03C13010 ADRP X0, 0xFFFFFFFFFCF19000
	0x03C13014 ADD X0, X0, 0x725
	0x03C13018 BL 0x1C16CB8
	0x03C1301C MOV X1, X0
	0x03C13020 STR X0, [X20 + 0x6D0]
	0x03C13024 MOV X0, X19
	0x03C13028 LDP X20, X19, [X31 + 0x10]
	0x03C1302C LDR X30, [X31], #0x20
	0x03C13030 BR X1
	0x03C13034 STP X30, X21, [X31 - 0x20]!
	0x03C13038 STP X20, X19, [X31 + 0x10]
	0x03C1303C ADRP X21, 0x7D1000
	0x03C13040 LDR X2, [X21 + 0x6D8]
	0x03C13044 MOV W19, W1
	0x03C13048 MOV X20, X0
	0x03C1304C CBNZ X2, 0x3C13064
	0x03C13050 ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C13054 ADD X0, X0, 0xD8D
	0x03C13058 BL 0x1C16CB8
	0x03C1305C MOV X2, X0
	0x03C13060 STR X0, [X21 + 0x6D8]
	0x03C13064 AND W1, W19, 0x1
	0x03C13068 MOV X0, X20
	0x03C1306C LDP X20, X19, [X31 + 0x10]
	0x03C13070 LDP X30, X21, [X31], #0x20
	0x03C13074 BR X2
	0x03C13078 STP X30, X21, [X31 - 0x20]!
	0x03C1307C STP X20, X19, [X31 + 0x10]
	0x03C13080 ADRP X21, 0x7D1000
	0x03C13084 LDR X2, [X21 + 0x6E0]
	0x03C13088 MOV W19, W1
	0x03C1308C MOV X20, X0
	0x03C13090 CBNZ X2, 0x3C130A8
	0x03C13094 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C13098 ADD X0, X0, 0xD88
	0x03C1309C BL 0x1C16CB8
	0x03C130A0 MOV X2, X0
	0x03C130A4 STR X0, [X21 + 0x6E0]
	0x03C130A8 MOV X0, X20
	0x03C130AC MOV W1, W19
	0x03C130B0 LDP X20, X19, [X31 + 0x10]
	0x03C130B4 LDP X30, X21, [X31], #0x20
	0x03C130B8 BR X2
	0x03C130BC STP X30, X21, [X31 - 0x20]!
	0x03C130C0 STP X20, X19, [X31 + 0x10]
	0x03C130C4 ADRP X21, 0x7D1000
	0x03C130C8 LDR X2, [X21 + 0x6E8]
	0x03C130CC MOV W19, W1
	0x03C130D0 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X2, 0
	008 JumpIfEqual {37}
	009 Move W8, [X2+24]
	010 Move X20, X2
	011 Compare W8, 0
	012 JumpIfEqual {49}
	013 Move W19, W3
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X23, 0x7D3000
	016 Move X4, [X23+1576]
	017 Move W21, W1
	018 Move X22, X0
	019 Compare X4, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51421184
	022 Add X0, X0, 3891
	023 Call 0x1C17CB8
	024 Move X4, X0
	025 Move [X23+1576], X0
	026 Move X0, X22
	027 Move W1, W21
	028 Move X2, X20
	029 Move W3, W19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 CallNoReturn X4
	037 Move X0, 0x4E6000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0x4EB000
	043 Move X0, [X0+3800]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentNullException..ctor, X0, X1
	049 Move X0, 0x4E9000
	050 Move X0, [X0+1400]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x54C000
	055 Move X0, [X0+3480]
	056 Move X0, 0x4E9000
	057 Move X0, [X0+1400]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x54C000
	062 Move X0, [X0+3488]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentException..ctor, X0, X1
	068 Move X0, 0x54C000
	069 Move X0, [X0+3496]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC

Method: System.Void SetVectorArray(System.Int32 name, UnityEngine.Vector4[] values, System.Int32 count)

Disassembly:
	0x03C130D4 CBNZ X2, 0x3C130EC
	0x03C130D8 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C130DC ADD X0, X0, 0x64
	0x03C130E0 BL 0x1C16CB8
	0x03C130E4 MOV X2, X0
	0x03C130E8 STR X0, [X21 + 0x6E8]
	0x03C130EC AND W1, W19, 0x1
	0x03C130F0 MOV X0, X20
	0x03C130F4 LDP X20, X19, [X31 + 0x10]
	0x03C130F8 LDP X30, X21, [X31], #0x20
	0x03C130FC BR X2
	0x03C13100 STR X30, [X31 - 0x20]!
	0x03C13104 STP X20, X19, [X31 + 0x10]
	0x03C13108 ADRP X20, 0x7D1000
	0x03C1310C LDR X1, [X20 + 0x6F0]
	0x03C13110 MOV X19, X0
	0x03C13114 CBNZ X1, 0x3C1312C
	0x03C13118 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C1311C ADD X0, X0, 0x9D
	0x03C13120 BL 0x1C16CB8
	0x03C13124 MOV X1, X0
	0x03C13128 STR X0, [X20 + 0x6F0]
	0x03C1312C MOV X0, X19
	0x03C13130 LDP X20, X19, [X31 + 0x10]
	0x03C13134 LDR X30, [X31], #0x20
	0x03C13138 BR X1
	0x03C1313C STP X30, X21, [X31 - 0x20]!
	0x03C13140 STP X20, X19, [X31 + 0x10]
	0x03C13144 ADRP X21, 0x7D1000
	0x03C13148 LDR X2, [X21 + 0x6F8]
	0x03C1314C MOV W19, W1
	0x03C13150 MOV X20, X0
	0x03C13154 CBNZ X2, 0x3C1316C
	0x03C13158 ADRP X0, 0xFFFFFFFFFCF01000
	0x03C1315C ADD X0, X0, 0x8C5
	0x03C13160 BL 0x1C16CB8
	0x03C13164 MOV X2, X0
	0x03C13168 STR X0, [X21 + 0x6F8]
	0x03C1316C MOV X0, X20
	0x03C13170 MOV W1, W19
	0x03C13174 LDP X20, X19, [X31 + 0x10]
	0x03C13178 LDP X30, X21, [X31], #0x20
	0x03C1317C BR X2
	0x03C13180 STR X30, [X31 - 0x20]!
	0x03C13184 STP X20, X19, [X31 + 0x10]
	0x03C13188 ADRP X20, 0x7D1000
	0x03C1318C LDR X1, [X20 + 0x700]
	0x03C13190 MOV X19, X0
	0x03C13194 CBNZ X1, 0x3C131AC
	0x03C13198 ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C1319C ADD X0, X0, 0xF85
	0x03C131A0 BL 0x1C16CB8
	0x03C131A4 MOV X1, X0
	0x03C131A8 STR X0, [X20 + 0x700]
	0x03C131AC MOV X0, X19
	0x03C131B0 LDP X20, X19, [X31 + 0x10]
	0x03C131B4 LDR X30, [X31], #0x20
	0x03C131B8 BR X1
	0x03C131BC STP X30, X21, [X31 - 0x20]!
	0x03C131C0 STP X20, X19, [X31 + 0x10]
	0x03C131C4 ADRP X21, 0x7D1000
	0x03C131C8 LDR X2, [X21 + 0x708]
	0x03C131CC MOV W19, W1
	0x03C131D0 MOV X20, X0
	0x03C131D4 CBNZ X2, 0x3C131EC
	0x03C131D8 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C131DC ADD X0, X0, 0xC8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X2, 0
	008 JumpIfEqual {37}
	009 Move W8, [X2+24]
	010 Move X20, X2
	011 Compare W8, 0
	012 JumpIfEqual {49}
	013 Move W19, W3
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X23, 0x7D2000
	016 Move X4, [X23+1584]
	017 Move W21, W1
	018 Move X22, X0
	019 Compare X4, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51306496
	022 Add X0, X0, 2769
	023 Call 0x1C17CB8
	024 Move X4, X0
	025 Move [X23+1584], X0
	026 Move X0, X22
	027 Move W1, W21
	028 Move X2, X20
	029 Move W3, W19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 CallNoReturn X4
	037 Move X0, 0x4E6000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0x4EB000
	043 Move X0, [X0+3800]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentNullException..ctor, X0, X1
	049 Move X0, 0x4E9000
	050 Move X0, [X0+1400]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x54C000
	055 Move X0, [X0+3480]
	056 Move X0, 0x4E9000
	057 Move X0, [X0+1400]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x54C000
	062 Move X0, [X0+3488]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentException..ctor, X0, X1
	068 Move X0, 0x54C000
	069 Move X0, [X0+3504]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC

Method: System.Void SetMatrixArray(System.Int32 name, UnityEngine.Matrix4x4[] values, System.Int32 count)

Disassembly:
	0x03C131E0 BL 0x1C16CB8
	0x03C131E4 MOV X2, X0
	0x03C131E8 STR X0, [X21 + 0x708]
	0x03C131EC MOV X0, X20
	0x03C131F0 MOV W1, W19
	0x03C131F4 LDP X20, X19, [X31 + 0x10]
	0x03C131F8 LDP X30, X21, [X31], #0x20
	0x03C131FC BR X2
	0x03C13200 STR X30, [X31 - 0x20]!
	0x03C13204 STP X20, X19, [X31 + 0x10]
	0x03C13208 ADRP X20, 0x7D1000
	0x03C1320C LDR X1, [X20 + 0x710]
	0x03C13210 MOV X19, X0
	0x03C13214 CBNZ X1, 0x3C1322C
	0x03C13218 ADRP X0, 0xFFFFFFFFFCF17000
	0x03C1321C ADD X0, X0, 0x67C
	0x03C13220 BL 0x1C16CB8
	0x03C13224 MOV X1, X0
	0x03C13228 STR X0, [X20 + 0x710]
	0x03C1322C MOV X0, X19
	0x03C13230 LDP X20, X19, [X31 + 0x10]
	0x03C13234 LDR X30, [X31], #0x20
	0x03C13238 BR X1
	0x03C1323C STR X30, [X31 - 0x20]!
	0x03C13240 STP X20, X19, [X31 + 0x10]
	0x03C13244 ADRP X20, 0x7D1000
	0x03C13248 LDR X1, [X20 + 0x718]
	0x03C1324C MOV X19, X0
	0x03C13250 CBNZ X1, 0x3C13268
	0x03C13254 ADRP X0, 0xFFFFFFFFFCF0B000
	0x03C13258 ADD X0, X0, 0xAC0
	0x03C1325C BL 0x1C16CB8
	0x03C13260 MOV X1, X0
	0x03C13264 STR X0, [X20 + 0x718]
	0x03C13268 MOV X0, X19
	0x03C1326C LDP X20, X19, [X31 + 0x10]
	0x03C13270 LDR X30, [X31], #0x20
	0x03C13274 BR X1
	0x03C13278 STR X30, [X31 - 0x20]!
	0x03C1327C STP X20, X19, [X31 + 0x10]
	0x03C13280 ADRP X20, 0x7D1000
	0x03C13284 LDR X1, [X20 + 0x720]
	0x03C13288 MOV X19, X0
	0x03C1328C CBNZ X1, 0x3C132A4
	0x03C13290 ADRP X0, 0xFFFFFFFFFCEE3000
	0x03C13294 ADD X0, X0, 0xF92
	0x03C13298 BL 0x1C16CB8
	0x03C1329C MOV X1, X0
	0x03C132A0 STR X0, [X20 + 0x720]
	0x03C132A4 MOV X0, X19
	0x03C132A8 LDP X20, X19, [X31 + 0x10]
	0x03C132AC LDR X30, [X31], #0x20
	0x03C132B0 BR X1
	0x03C132B4 SUB X31, X31, 0x60
	0x03C132B8 STP X30, X21, [X31 + 0x40]
	0x03C132BC STP X20, X19, [X31 + 0x50]
	0x03C132C0 ADRP X21, 0x7D1000
	0x03C132C4 MOV X19, X8
	0x03C132C8 LDR X8, [X21 + 0x750]
	0x03C132CC MOV X20, X0
	0x03C132D0 MOVI V0.2D, 0x0
	0x03C132D4 STP V0, V0, [X31 + 0x20]
	0x03C132D8 STP V0, V0, [X31]
	0x03C132DC CBNZ X8, 0x3C132F4
	0x03C132E0 ADRP X0, 0xFFFFFFFFFCEF3000
	0x03C132E4 ADD X0, X0, 0xEA9
	0x03C132E8 BL 0x1C16CB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X2, 0
	008 JumpIfEqual {37}
	009 Move W8, [X2+24]
	010 Move X20, X2
	011 Compare W8, 0
	012 JumpIfEqual {49}
	013 Move W19, W3
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X23, 0x7D2000
	016 Move X4, [X23+1592]
	017 Move W21, W1
	018 Move X22, X0
	019 Compare X4, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51433472
	022 Add X0, X0, 170
	023 Call 0x1C17CB8
	024 Move X4, X0
	025 Move [X23+1592], X0
	026 Move X0, X22
	027 Move W1, W21
	028 Move X2, X20
	029 Move W3, W19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 CallNoReturn X4
	037 Move X0, 0x4E6000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0x4EB000
	043 Move X0, [X0+3800]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentNullException..ctor, X0, X1
	049 Move X0, 0x4E9000
	050 Move X0, [X0+1400]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x54C000
	055 Move X0, [X0+3480]
	056 Move X0, 0x4E9000
	057 Move X0, [X0+1400]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x54C000
	062 Move X0, [X0+3488]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentException..ctor, X0, X1
	068 Move X0, 0x54C000
	069 Move X0, [X0+3512]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x03C132EC MOV X8, X0
	0x03C132F0 STR X0, [X21 + 0x750]
	0x03C132F4 ADD X1, X31, 0x0
	0x03C132F8 MOV X0, X20
	0x03C132FC BLR X8
	0x03C13300 LDP V1, V0, [X31 + 0x20]
	0x03C13304 LDP V3, V2, [X31]
	0x03C13308 LDP X30, X21, [X31 + 0x40]
	0x03C1330C STP V1, V0, [X19 + 0x20]
	0x03C13310 STP V3, V2, [X19]
	0x03C13314 LDP X20, X19, [X31 + 0x50]
	0x03C13318 ADD X31, X31, 0x60
	0x03C1331C RET
	0x03C13320 STP X30, X21, [X31 - 0x20]!
	0x03C13324 STP X20, X19, [X31 + 0x10]
	0x03C13328 ADRP X21, 0x7D1000
	0x03C1332C LDR X2, [X21 + 0x750]
	0x03C13330 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call Object..ctor, X0
	007 Move X20, 0x7D2000
	008 Move X8, [X20+1600]
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51511296
	012 Add X0, X0, 3953
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X20+1600], X0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move [X19+16], X0
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 

Method: System.Void Finalize()

Disassembly:
	0x03C13334 MOV X20, X0
	0x03C13338 CBNZ X2, 0x3C13350
	0x03C1333C ADRP X0, 0xFFFFFFFFFCEF3000
	0x03C13340 ADD X0, X0, 0xEA9
	0x03C13344 BL 0x1C16CB8
	0x03C13348 MOV X2, X0
	0x03C1334C STR X0, [X21 + 0x750]
	0x03C13350 MOV X0, X20
	0x03C13354 MOV X1, X19
	0x03C13358 LDP X20, X19, [X31 + 0x10]
	0x03C1335C LDP X30, X21, [X31], #0x20
	0x03C13360 BR X2
	0x03C13364 STR X30, [X31 - 0x20]!
	0x03C13368 STP X20, X19, [X31 + 0x10]
	0x03C1336C ADRP X20, 0x7D1000
	0x03C13370 LDR X1, [X20 + 0x728]
	0x03C13374 MOV X19, X0
	0x03C13378 CBNZ X1, 0x3C13390
	0x03C1337C ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C13380 ADD X0, X0, 0xDBF
	0x03C13384 BL 0x1C16CB8
	0x03C13388 MOV X1, X0
	0x03C1338C STR X0, [X20 + 0x728]
	0x03C13390 MOV X0, X19
	0x03C13394 LDP X20, X19, [X31 + 0x10]
	0x03C13398 LDR X30, [X31], #0x20
	0x03C1339C BR X1
	0x03C133A0 STR X30, [X31 - 0x20]!
	0x03C133A4 STP X20, X19, [X31 + 0x10]
	0x03C133A8 ADRP X20, 0x7D1000
	0x03C133AC LDR X1, [X20 + 0x730]
	0x03C133B0 MOV X19, X0
	0x03C133B4 CBNZ X1, 0x3C133CC
	0x03C133B8 ADRP X0, 0xFFFFFFFFFCEE2000
	0x03C133BC ADD X0, X0, 0x1C3
	0x03C133C0 BL 0x1C16CB8
	0x03C133C4 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Call MaterialPropertyBlock.Dispose, X0
	007 Move X0, X19
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X1, X31
	011 Move X30, [X31+32]
	012 Move X21, [X31+40]
	013 Call Object.Finalize, X0
	014 Return 
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X21, X0
	017 Move X0, X21
	018 Call 0x3EB2AD0
	019 Move X20, [X0]
	020 Call 0x3EB2AE0
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object.Finalize, X0
	024 Compare X20, 0
	025 JumpIfNotEqual {32}
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Move X20, X31
	032 Move X0, X20
	033 Call 0x1C17F18
	034 Move X21, X0
	035 Move X0, X19
	036 Move X1, X31
	037 Call Object.Finalize, X0
	038 Compare X20, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X21
	041 Call 0x1D2D690
	042 Move X0, X20
	043 Call 0x1C17F18
	044 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x03C133C8 STR X0, [X20 + 0x730]
	0x03C133CC MOV X0, X19
	0x03C133D0 LDP X20, X19, [X31 + 0x10]
	0x03C133D4 LDR X30, [X31], #0x20
	0x03C133D8 BR X1
	0x03C133DC STR X30, [X31 - 0x20]!
	0x03C133E0 STP X20, X19, [X31 + 0x10]
	0x03C133E4 ADRP X20, 0x7D1000
	0x03C133E8 LDR X1, [X20 + 0x690]
	0x03C133EC MOV X19, X0
	0x03C133F0 CBNZ X1, 0x3C13408
	0x03C133F4 ADRP X0, 0xFFFFFFFFFCF05000
	0x03C133F8 ADD X0, X0, 0x77A
	0x03C133FC BL 0x1C16CB8
	0x03C13400 MOV X1, X0
	0x03C13404 STR X0, [X20 + 0x690]
	0x03C13408 MOV X0, X19
	0x03C1340C LDP X20, X19, [X31 + 0x10]
	0x03C13410 LDR X30, [X31], #0x20
	0x03C13414 BR X1
	0x03C13418 B 0x3C12D30
	0x03C1341C STR X30, [X31 - 0x20]!
	0x03C13420 STP X20, X19, [X31 + 0x10]
	0x03C13424 ADRP X20, 0x7D1000
	0x03C13428 LDR X1, [X20 + 0x678]
	0x03C1342C MOV X19, X0
	0x03C13430 CBNZ X1, 0x3C13448
	0x03C13434 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C13438 ADD X0, X0, 0x239
	0x03C1343C BL 0x1C16CB8
	0x03C13440 MOV X1, X0
	0x03C13444 STR X0, [X20 + 0x678]
	0x03C13448 MOV X0, X19
	0x03C1344C LDP X20, X19, [X31 + 0x10]
	0x03C13450 LDR X30, [X31], #0x20
	0x03C13454 BR X1
	0x03C13458 STP X30, X21, [X31 - 0x20]!
	0x03C1345C STP X20, X19, [X31 + 0x10]
	0x03C13460 ADRP X21, 0x7D1000
	0x03C13464 LDR X2, [X21 + 0x688]
	0x03C13468 MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7D2000
	007 Move W8, [X20+1624]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4E8000
	014 Move X0, [X0+3088]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1624], W8
	018 Move X0, [X19+16]
	019 Move X21, 0x4E8000
	020 Move X21, [X21+3088]
	021 Move X1, X31
	022 Move X2, X31
	023 Call IntPtr.op_Inequality, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {41}
	028 Move X22, 0x7D2000
	029 Move X8, [X22+1608]
	030 Move X20, [X19+16]
	031 Compare X8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, -51290112
	034 Add X0, X0, 1290
	035 Call 0x1C17CB8
	036 Move X8, X0
	037 Move [X22+1608], X0
	038 Move X0, X20
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move [X19+16], X31
	041 Move X0, [X21]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X1, X31
	052 Move X30, [X31+48]
	053 Call GC.SuppressFinalize, X0
	054 Return 

Method: System.Void SetInt(System.String name, System.Int32 value)

Disassembly:
	0x03C1346C MOV X20, X0
	0x03C13470 CBNZ X2, 0x3C13488
	0x03C13474 ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C13478 ADD X0, X0, 0xDB5
	0x03C1347C BL 0x1C16CB8
	0x03C13480 MOV X2, X0
	0x03C13484 STR X0, [X21 + 0x688]
	0x03C13488 MOV X0, X20
	0x03C1348C MOV X1, X19
	0x03C13490 LDP X20, X19, [X31 + 0x10]
	0x03C13494 LDP X30, X21, [X31], #0x20
	0x03C13498 BR X2
	0x03C1349C STR X30, [X31 - 0x20]!
	0x03C134A0 STP X20, X19, [X31 + 0x10]
	0x03C134A4 ADRP X20, 0x7D1000
	0x03C134A8 LDR X1, [X20 + 0x680]
	0x03C134AC MOV X19, X0
	0x03C134B0 CBNZ X1, 0x3C134C8
	0x03C134B4 ADRP X0, 0xFFFFFFFFFCEE8000
	0x03C134B8 ADD X0, X0, 0x54
	0x03C134BC BL 0x1C16CB8
	0x03C134C0 MOV X1, X0
	0x03C134C4 STR X0, [X20 + 0x680]
	0x03C134C8 MOV X0, X19
	0x03C134CC LDP X20, X19, [X31 + 0x10]
	0x03C134D0 LDR X30, [X31], #0x20
	0x03C134D4 BR X1
	0x03C134D8 STP X30, X21, [X31 - 0x20]!
	0x03C134DC STP X20, X19, [X31 + 0x10]
	0x03C134E0 ADRP X21, 0x7D1000
	0x03C134E4 LDR X2, [X21 + 0x688]
	0x03C134E8 MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D2000
	007 Move X8, [X22+2064]
	008 Move W19, W2
	009 Move X21, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51339264
	014 Add X0, X0, 3712
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+2064], X0
	018 Move X0, X21
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X22, 0x7D2000
	021 Move X2, [X22+1552]
	022 Move W21, W0
	023 Compare X2, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51347456
	026 Add X0, X0, 2537
	027 Call 0x1C17CB8
	028 Move X2, X0
	029 Move [X22+1552], X0
	030 NotImplemented "Instruction SCVTF not yet implemented."
	031 Move X0, X20
	032 Move W1, W21
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 CallNoReturn X2

Method: System.Void SetInt(System.Int32 nameID, System.Int32 value)

Disassembly:
	0x03C13528 LDR X1, [X20 + 0x730]
	0x03C1352C MOV X19, X0
	0x03C13530 CBNZ X1, 0x3C13548
	0x03C13534 ADRP X0, 0xFFFFFFFFFCEE2000
	0x03C13538 ADD X0, X0, 0x1C3
	0x03C1353C BL 0x1C16CB8
	0x03C13540 MOV X1, X0
	0x03C13544 STR X0, [X20 + 0x730]
	0x03C13548 MOV X0, X19
	0x03C1354C LDP X20, X19, [X31 + 0x10]
	0x03C13550 LDR X30, [X31], #0x20
	0x03C13554 BR X1
	0x03C13558 B 0x3C12D30
	0x03C1355C STP X30, X23, [X31 - 0x30]!
	0x03C13560 STP X22, X21, [X31 + 0x10]
	0x03C13564 STP X20, X19, [X31 + 0x20]
	0x03C13568 ADRP X21, 0x7D1000
	0x03C1356C LDRB W8, [X21 + 0x738]
	0x03C13570 MOV X20, X1
	0x03C13574 MOV X19, X0
	0x03C13578 TBNZ X8, 0x0, 0x3C1359C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D2000
	007 Move W20, W2
	008 Move X2, [X22+1552]
	009 Move W19, W1
	010 Move X21, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51347456
	014 Add X0, X0, 2537
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X22+1552], X0
	018 NotImplemented "Instruction SCVTF not yet implemented."
	019 Move X0, X21
	020 Move W1, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X2

Method: System.Void SetFloat(System.String name, System.Single value)

Disassembly:
	0x03C1357C ADRP X0, 0x54B000
	0x03C13580 LDR X0, [X0 + 0xDC0]
	0x03C13584 BL 0x1C16CF4
	0x03C13588 ADRP X0, 0x54B000
	0x03C1358C LDR X0, [X0 + 0xDC8]
	0x03C13590 BL 0x1C16CF4
	0x03C13594 MOVZ W8, 0x1
	0x03C13598 STRB W8, [X21 + 0x738]
	0x03C1359C CBZ X20, 0x3C13630
	0x03C135A0 ADRP X23, 0x7D1000
	0x03C135A4 ADRP X22, 0x54B000
	0x03C135A8 ADRP X21, 0x54B000
	0x03C135AC LDR X8, [X23 + 0x728]
	0x03C135B0 LDR X22, [X22 + 0xDC0]
	0x03C135B4 LDR X21, [X21 + 0xDC8]
	0x03C135B8 CBNZ X8, 0x3C135D0
	0x03C135BC ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C135C0 ADD X0, X0, 0xDBF
	0x03C135C4 BL 0x1C16CB8
	0x03C135C8 MOV X8, X0
	0x03C135CC STR X0, [X23 + 0x728]
	0x03C135D0 MOV X0, X19
	0x03C135D4 BLR X8
	0x03C135D8 LDR X2, [X22]
	0x03C135DC MOV W1, W0
	0x03C135E0 MOV X0, X20
	0x03C135E4 BL 0x222C754
	0x03C135E8 LDR X1, [X21]
	0x03C135EC MOV X0, X20
	0x03C135F0 BL 0x222C900
	0x03C135F4 ADRP X21, 0x7D1000
	0x03C135F8 LDR X2, [X21 + 0x698]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7D2000
	007 Move X8, [X21+2064]
	008 Move V8, V0
	009 Move X20, X1
	010 Move X19, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51339264
	014 Add X0, X0, 3712
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X21+2064], X0
	018 Move X0, X20
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X21, 0x7D2000
	021 Move X2, [X21+1552]
	022 Move W20, W0
	023 Compare X2, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51347456
	026 Add X0, X0, 2537
	027 Call 0x1C17CB8
	028 Move X2, X0
	029 Move [X21+1552], X0
	030 Move X0, X19
	031 Move W1, W20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Move V0, V8
	037 Move V8, [X31+48]
	038 CallNoReturn X2

Method: System.Void SetFloat(System.Int32 nameID, System.Single value)

Disassembly:
	0x03C135FC MOV X20, X0
	0x03C13600 CBNZ X2, 0x3C13618
	0x03C13604 ADRP X0, 0xFFFFFFFFFCF0D000
	0x03C13608 ADD X0, X0, 0x8BC
	0x03C1360C BL 0x1C16CB8
	0x03C13610 MOV X2, X0
	0x03C13614 STR X0, [X21 + 0x698]
	0x03C13618 MOV X0, X19
	0x03C1361C MOV X1, X20
	0x03C13620 LDP X20, X19, [X31 + 0x20]
	0x03C13624 LDP X22, X21, [X31 + 0x10]
	0x03C13628 LDP X30, X23, [X31], #0x30
	0x03C1362C BR X2
	0x03C13630 ADRP X0, 0x4E5000
	0x03C13634 LDR X0, [X0 + 0x528]
	0x03C13638 BL 0x1C16D08
	0x03C1363C BL 0x1C16F10
	0x03C13640 MOV X19, X0
	0x03C13644 ADRP X0, 0x54B000
	0x03C13648 LDR X0, [X0 + 0xDD0]
	0x03C1364C BL 0x1C16D08

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7D2000
	007 Move X2, [X21+1552]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51347456
	014 Add X0, X0, 2537
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+1552], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void SetInteger(System.Int32 nameID, System.Int32 value)

Disassembly:
	0x03C13650 MOV X20, X0
	0x03C13654 ADRP X0, 0x534000
	0x03C13658 LDR X0, [X0 + 0x2E0]
	0x03C1365C BL 0x1C16D08
	0x03C13660 MOV X2, X0
	0x03C13664 MOV X0, X19
	0x03C13668 MOV X1, X20
	0x03C1366C MOV X3, X31
	0x03C13670 BL 0x3315F7C
	0x03C13674 ADRP X0, 0x54B000
	0x03C13678 LDR X0, [X0 + 0xDD8]
	0x03C1367C BL 0x1C16D08
	0x03C13680 MOV X1, X0
	0x03C13684 MOV X0, X19
	0x03C13688 BL 0x1C16DEC
	0x03C1368C STP X30, X23, [X31 - 0x30]!
	0x03C13690 STP X22, X21, [X31 + 0x10]
	0x03C13694 STP X20, X19, [X31 + 0x20]
	0x03C13698 ADRP X21, 0x7D1000
	0x03C1369C LDRB W8, [X21 + 0x739]
	0x03C136A0 MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D2000
	007 Move X3, [X22+1544]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51331072
	014 Add X0, X0, 2622
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1544], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetVector(System.String name, UnityEngine.Vector4 value)

Disassembly:
	0x03C136A4 MOV X19, X0
	0x03C136A8 TBNZ X8, 0x0, 0x3C136CC
	0x03C136AC ADRP X0, 0x54B000
	0x03C136B0 LDR X0, [X0 + 0xDC0]
	0x03C136B4 BL 0x1C16CF4
	0x03C136B8 ADRP X0, 0x54B000
	0x03C136BC LDR X0, [X0 + 0xDC8]
	0x03C136C0 BL 0x1C16CF4
	0x03C136C4 MOVZ W8, 0x1
	0x03C136C8 STRB W8, [X21 + 0x739]
	0x03C136CC CBZ X20, 0x3C13760
	0x03C136D0 ADRP X23, 0x7D1000
	0x03C136D4 ADRP X22, 0x54B000
	0x03C136D8 ADRP X21, 0x54B000
	0x03C136DC LDR X8, [X23 + 0x728]
	0x03C136E0 LDR X22, [X22 + 0xDC0]
	0x03C136E4 LDR X21, [X21 + 0xDC8]
	0x03C136E8 CBNZ X8, 0x3C13700
	0x03C136EC ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C136F0 ADD X0, X0, 0xDBF
	0x03C136F4 BL 0x1C16CB8
	0x03C136F8 MOV X8, X0
	0x03C136FC STR X0, [X23 + 0x728]
	0x03C13700 MOV X0, X19
	0x03C13704 BLR X8
	0x03C13708 LDR X2, [X22]
	0x03C1370C MOV W1, W0
	0x03C13710 MOV X0, X20
	0x03C13714 BL 0x222C754
	0x03C13718 LDR X1, [X21]
	0x03C1371C MOV X0, X20

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x7D2000
	010 Move X8, [X21+2064]
	011 Move V8, V3
	012 Move V9, V2
	013 Move V10, V1
	014 Move V11, V0
	015 Move X19, X1
	016 Move X20, X0
	017 Compare X8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51339264
	020 Add X0, X0, 3712
	021 Call 0x1C17CB8
	022 Move X8, X0
	023 Move [X21+2064], X0
	024 Move X0, X19
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move W1, W0
	027 Move X0, X20
	028 Move V2, V9
	029 Move V3, V8
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Move D9, [X31+16]
	035 Move D8, [X31+24]
	036 Move V0, V11
	037 Move V1, V10
	038 Move D11, [X31+64]
	039 Move D10, [X31+72]
	040 Call MaterialPropertyBlock.SetVectorImpl, X0, X1, X2
	041 Return 

Method: System.Void SetVector(System.Int32 nameID, UnityEngine.Vector4 value)

Disassembly:
	0x03C13720 BL 0x222C900

ISIL:
	001 Call MaterialPropertyBlock.SetVectorImpl, X0, X1, X2
	002 Return 

Method: System.Void SetColor(System.Int32 nameID, UnityEngine.Color value)

Disassembly:
	0x03C13724 ADRP X21, 0x7D1000

ISIL:
	001 Call MaterialPropertyBlock.SetColorImpl, X0, X1, X2
	002 Return 

Method: System.Void SetMatrix(System.String name, UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C13728 LDR X2, [X21 + 0x6A0]
	0x03C1372C MOV X20, X0
	0x03C13730 CBNZ X2, 0x3C13748
	0x03C13734 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C13738 ADD X0, X0, 0x25D
	0x03C1373C BL 0x1C16CB8
	0x03C13740 MOV X2, X0
	0x03C13744 STR X0, [X21 + 0x6A0]
	0x03C13748 MOV X0, X19
	0x03C1374C MOV X1, X20
	0x03C13750 LDP X20, X19, [X31 + 0x20]
	0x03C13754 LDP X22, X21, [X31 + 0x10]
	0x03C13758 LDP X30, X23, [X31], #0x30
	0x03C1375C BR X2
	0x03C13760 ADRP X0, 0x4E5000
	0x03C13764 LDR X0, [X0 + 0x528]
	0x03C13768 BL 0x1C16D08
	0x03C1376C BL 0x1C16F10
	0x03C13770 MOV X19, X0
	0x03C13774 ADRP X0, 0x54B000
	0x03C13778 LDR X0, [X0 + 0xDD0]
	0x03C1377C BL 0x1C16D08
	0x03C13780 MOV X20, X0
	0x03C13784 ADRP X0, 0x534000
	0x03C13788 LDR X0, [X0 + 0x2E0]
	0x03C1378C BL 0x1C16D08
	0x03C13790 MOV X2, X0
	0x03C13794 MOV X0, X19
	0x03C13798 MOV X1, X20
	0x03C1379C MOV X3, X31
	0x03C137A0 BL 0x3315F7C
	0x03C137A4 ADRP X0, 0x54B000
	0x03C137A8 LDR X0, [X0 + 0xDE0]
	0x03C137AC BL 0x1C16D08
	0x03C137B0 MOV X1, X0
	0x03C137B4 MOV X0, X19
	0x03C137B8 BL 0x1C16DEC
	0x03C137BC MOV X1, X31
	0x03C137C0 B 0x3C32494

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0x7D2000
	008 Move X8, [X22+2064]
	009 Move X21, X2
	010 Move X20, X1
	011 Move X19, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51339264
	015 Add X0, X0, 3712
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X22+2064], X0
	019 Move X0, X20
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move V0, [X21+32]
	022 Move V1, [X21+48]
	023 Move V3, [X21]
	024 Move V2, [X21+16]
	025 Move X21, 0x7D2000
	026 Move X8, [X21+1648]
	027 Move W20, W0
	028 Move [X31+32], V0
	029 Move [X31+40], V1
	030 Move [X31], V3
	031 Move [X31+8], V2
	032 Compare X8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, -51372032
	035 Add X0, X0, 2150
	036 Call 0x1C17CB8
	037 Move X8, X0
	038 Move [X21+1648], X0
	039 Add X2, X31, 0
	040 Move X0, X19
	041 Move W1, W20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X31+96]
	044 Move X19, [X31+104]
	045 Move X22, [X31+80]
	046 Move X21, [X31+88]
	047 Move X30, [X31+64]
	048 Add X31, X31, 112
	049 Return 

Method: System.Void SetMatrix(System.Int32 nameID, UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C137C4 STP X30, X19, [X31 - 0x10]!
	0x03C137C8 ADRP X19, 0x7D1000
	0x03C137CC LDR X0, [X19 + 0x758]
	0x03C137D0 CBNZ X0, 0x3C137E4
	0x03C137D4 ADRP X0, 0xFFFFFFFFFCF01000
	0x03C137D8 ADD X0, X0, 0x8FC
	0x03C137DC BL 0x1C16CB8
	0x03C137E0 STR X0, [X19 + 0x758]
	0x03C137E4 LDP X30, X19, [X31], #0x10
	0x03C137E8 BR X0
	0x03C137EC SUB X31, X31, 0x20
	0x03C137F0 STP X30, X19, [X31 + 0x10]
	0x03C137F4 ADRP X19, 0x7D1000
	0x03C137F8 LDR X8, [X19 + 0x790]
	0x03C137FC STP X31, X31, [X31]
	0x03C13800 CBNZ X8, 0x3C13818
	0x03C13804 ADRP X0, 0xFFFFFFFFFCF0F000
	0x03C13808 ADD X0, X0, 0xDA2
	0x03C1380C BL 0x1C16CB8
	0x03C13810 MOV X8, X0
	0x03C13814 STR X0, [X19 + 0x790]
	0x03C13818 ADD X0, X31, 0x0
	0x03C1381C BLR X8
	0x03C13820 LDP S0, S1, [X31]
	0x03C13824 LDP S2, S3, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x7D2000
	007 Move V0, [X2+32]
	008 Move V1, [X2+48]
	009 Move V2, [X2]
	010 Move V3, [X2+16]
	011 Move X8, [X21+1648]
	012 Move W19, W1
	013 Move X20, X0
	014 Move [X31+32], V0
	015 Move [X31+40], V1
	016 Move [X31], V2
	017 Move [X31+8], V3
	018 Compare X8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51372032
	021 Add X0, X0, 2150
	022 Call 0x1C17CB8
	023 Move X8, X0
	024 Move [X21+1648], X0
	025 Add X2, X31, 0
	026 Move X0, X20
	027 Move W1, W19
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X20, [X31+80]
	030 Move X19, [X31+88]
	031 Move X30, [X31+64]
	032 Move X21, [X31+72]
	033 Add X31, X31, 96
	034 Return 

Method: System.Void SetTexture(System.Int32 nameID, UnityEngine.Texture value)

Disassembly:
	0x03C13828 LDP X30, X19, [X31 + 0x10]
	0x03C1382C ADD X31, X31, 0x20
	0x03C13830 RET
	0x03C13834 STR X30, [X31 - 0x20]!
	0x03C13838 STP X20, X19, [X31 + 0x10]
	0x03C1383C ADRP X20, 0x7D1000
	0x03C13840 LDR X1, [X20 + 0x790]
	0x03C13844 MOV X19, X0
	0x03C13848 CBNZ X1, 0x3C13860
	0x03C1384C ADRP X0, 0xFFFFFFFFFCF0F000
	0x03C13850 ADD X0, X0, 0xDA2
	0x03C13854 BL 0x1C16CB8
	0x03C13858 MOV X1, X0
	0x03C1385C STR X0, [X20 + 0x790]
	0x03C13860 MOV X0, X19
	0x03C13864 LDP X20, X19, [X31 + 0x10]
	0x03C13868 LDR X30, [X31], #0x20
	0x03C1386C BR X1
	0x03C13870 SUB X31, X31, 0x20
	0x03C13874 STP X30, X19, [X31 + 0x10]
	0x03C13878 ADRP X19, 0x7D1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D2000
	007 Move X3, [X22+1560]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51273728
	014 Add X0, X0, 1745
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1560], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetTexture(System.Int32 nameID, UnityEngine.RenderTexture value, UnityEngine.Rendering.RenderTextureSubElement element)

Disassembly:
	0x03C1387C LDR X8, [X19 + 0x798]
	0x03C13880 STP S0, S1, [X31]
	0x03C13884 STP S2, S3, [X31 + 0x8]
	0x03C13888 CBNZ X8, 0x3C138A0
	0x03C1388C ADRP X0, 0xFFFFFFFFFCF13000
	0x03C13890 ADD X0, X0, 0xBEE
	0x03C13894 BL 0x1C16CB8
	0x03C13898 MOV X8, X0
	0x03C1389C STR X0, [X19 + 0x798]
	0x03C138A0 ADD X0, X31, 0x0
	0x03C138A4 BLR X8
	0x03C138A8 LDP X30, X19, [X31 + 0x10]
	0x03C138AC ADD X31, X31, 0x20
	0x03C138B0 RET
	0x03C138B4 STR X30, [X31 - 0x20]!
	0x03C138B8 STP X20, X19, [X31 + 0x10]
	0x03C138BC ADRP X20, 0x7D1000
	0x03C138C0 LDR X1, [X20 + 0x798]
	0x03C138C4 MOV X19, X0
	0x03C138C8 CBNZ X1, 0x3C138E0
	0x03C138CC ADRP X0, 0xFFFFFFFFFCF13000
	0x03C138D0 ADD X0, X0, 0xBEE
	0x03C138D4 BL 0x1C16CB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7D2000
	008 Move X4, [X23+1568]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51412992
	016 Add X0, X0, 4054
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+1568], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetFloatArray(System.String name, System.Single[] values)

Disassembly:
	0x03C138D8 MOV X1, X0
	0x03C138DC STR X0, [X20 + 0x798]
	0x03C138E0 MOV X0, X19
	0x03C138E4 LDP X20, X19, [X31 + 0x10]
	0x03C138E8 LDR X30, [X31], #0x20
	0x03C138EC BR X1
	0x03C138F0 STP X30, X19, [X31 - 0x10]!
	0x03C138F4 ADRP X19, 0x7D1000
	0x03C138F8 LDR X0, [X19 + 0x760]
	0x03C138FC CBNZ X0, 0x3C13910
	0x03C13900 ADRP X0, 0xFFFFFFFFFCF05000
	0x03C13904 ADD X0, X0, 0x7A3
	0x03C13908 BL 0x1C16CB8
	0x03C1390C STR X0, [X19 + 0x760]
	0x03C13910 LDP X30, X19, [X31], #0x10
	0x03C13914 BR X0
	0x03C13918 STR D8, [X31 - 0x20]!
	0x03C1391C STP X30, X19, [X31 + 0x10]
	0x03C13920 ADRP X19, 0x7D1000
	0x03C13924 LDR X0, [X19 + 0x768]
	0x03C13928 MOV V8.16B, V0.16B
	0x03C1392C CBNZ X0, 0x3C13940
	0x03C13930 ADRP X0, 0xFFFFFFFFFCF05000
	0x03C13934 ADD X0, X0, 0x7D0
	0x03C13938 BL 0x1C16CB8
	0x03C1393C STR X0, [X19 + 0x768]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D2000
	007 Move X8, [X22+2064]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51339264
	014 Add X0, X0, 3712
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+2064], X0
	018 Move X0, X21
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Compare X19, 0
	021 JumpIfEqual {33}
	022 Move W1, W0
	023 Move W3, [X19+24]
	024 Move X0, X20
	025 Move X2, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Call MaterialPropertyBlock.SetFloatArray, X0, X1, X2, X3
	032 Return 
	033 Call 0x1C17F20

Method: System.Void SetVectorArray(System.String name, UnityEngine.Vector4[] values)

Disassembly:
	0x03C13940 LDP X30, X19, [X31 + 0x10]
	0x03C13944 MOV V0.16B, V8.16B
	0x03C13948 LDR V8, [X31], #0x20
	0x03C1394C BR X0
	0x03C13950 SUB X31, X31, 0x20
	0x03C13954 STP X30, X19, [X31 + 0x10]
	0x03C13958 ADRP X19, 0x7D1000
	0x03C1395C LDR X8, [X19 + 0x7A0]
	0x03C13960 STP X31, X31, [X31]
	0x03C13964 CBNZ X8, 0x3C1397C
	0x03C13968 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C1396C ADD X0, X0, 0x2E2
	0x03C13970 BL 0x1C16CB8
	0x03C13974 MOV X8, X0
	0x03C13978 STR X0, [X19 + 0x7A0]
	0x03C1397C ADD X0, X31, 0x0
	0x03C13980 BLR X8
	0x03C13984 LDP S0, S1, [X31]
	0x03C13988 LDP S2, S3, [X31 + 0x8]
	0x03C1398C LDP X30, X19, [X31 + 0x10]
	0x03C13990 ADD X31, X31, 0x20
	0x03C13994 RET
	0x03C13998 STR X30, [X31 - 0x20]!
	0x03C1399C STP X20, X19, [X31 + 0x10]
	0x03C139A0 ADRP X20, 0x7D1000
	0x03C139A4 LDR X1, [X20 + 0x7A0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D2000
	007 Move X8, [X22+2064]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51339264
	014 Add X0, X0, 3712
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+2064], X0
	018 Move X0, X21
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Compare X19, 0
	021 JumpIfEqual {33}
	022 Move W1, W0
	023 Move W3, [X19+24]
	024 Move X0, X20
	025 Move X2, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Call MaterialPropertyBlock.SetVectorArray, X0, X1, X2, X3
	032 Return 
	033 Call 0x1C17F20

Method: System.Void SetVectorArray(System.Int32 nameID, UnityEngine.Vector4[] values)

Disassembly:
	0x03C139A8 MOV X19, X0
	0x03C139AC CBNZ X1, 0x3C139C4
	0x03C139B0 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C139B4 ADD X0, X0, 0x2E2
	0x03C139B8 BL 0x1C16CB8
	0x03C139BC MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Compare X2, 0
	003 JumpIfEqual {8}
	004 Move W3, [X2+24]
	005 Move X30, [X31+16]
	006 Call MaterialPropertyBlock.SetVectorArray, X0, X1, X2, X3
	007 Return 
	008 Call 0x1C17F20

Method: System.Void SetMatrixArray(System.String name, UnityEngine.Matrix4x4[] values)

Disassembly:
	0x03C139C0 STR X0, [X20 + 0x7A0]
	0x03C139C4 MOV X0, X19
	0x03C139C8 LDP X20, X19, [X31 + 0x10]
	0x03C139CC LDR X30, [X31], #0x20
	0x03C139D0 BR X1
	0x03C139D4 SUB X31, X31, 0x20
	0x03C139D8 STP X30, X19, [X31 + 0x10]
	0x03C139DC ADRP X19, 0x7D1000
	0x03C139E0 LDR X8, [X19 + 0x7A8]
	0x03C139E4 STP X31, X31, [X31]
	0x03C139E8 CBNZ X8, 0x3C13A00
	0x03C139EC ADRP X0, 0xFFFFFFFFFCEE8000
	0x03C139F0 ADD X0, X0, 0xD1
	0x03C139F4 BL 0x1C16CB8
	0x03C139F8 MOV X8, X0
	0x03C139FC STR X0, [X19 + 0x7A8]
	0x03C13A00 ADD X0, X31, 0x0
	0x03C13A04 BLR X8
	0x03C13A08 LDP S0, S1, [X31]
	0x03C13A0C LDP S2, S3, [X31 + 0x8]
	0x03C13A10 LDP X30, X19, [X31 + 0x10]
	0x03C13A14 ADD X31, X31, 0x20
	0x03C13A18 RET
	0x03C13A1C STR X30, [X31 - 0x20]!
	0x03C13A20 STP X20, X19, [X31 + 0x10]
	0x03C13A24 ADRP X20, 0x7D1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D2000
	007 Move X8, [X22+2064]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51339264
	014 Add X0, X0, 3712
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+2064], X0
	018 Move X0, X21
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Compare X19, 0
	021 JumpIfEqual {33}
	022 Move W1, W0
	023 Move W3, [X19+24]
	024 Move X0, X20
	025 Move X2, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Call MaterialPropertyBlock.SetMatrixArray, X0, X1, X2, X3
	032 Return 
	033 Call 0x1C17F20

Method: System.Void SetVectorImpl_Injected(System.Int32 name, ref UnityEngine.Vector4 value)

Disassembly:
	0x03C12B70 CBNZ X1, 0x3C12B88
	0x03C12B74 ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C12B78 ADD X0, X0, 0x239
	0x03C12B7C BL 0x1C16CB8
	0x03C12B80 MOV X1, X0
	0x03C12B84 STR X0, [X20 + 0x678]
	0x03C12B88 MOV X0, X19
	0x03C12B8C LDP X20, X19, [X31 + 0x10]
	0x03C12B90 LDR X30, [X31], #0x20
	0x03C12B94 BR X1
	0x03C12B98 STR X30, [X31 - 0x20]!
	0x03C12B9C STP X20, X19, [X31 + 0x10]
	0x03C12BA0 ADRP X20, 0x7D2000
	0x03C12BA4 LDR X1, [X20 + 0x680]
	0x03C12BA8 MOV X19, X0
	0x03C12BAC CBNZ X1, 0x3C12BC4
	0x03C12BB0 ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C12BB4 ADD X0, X0, 0x54
	0x03C12BB8 BL 0x1C16CB8
	0x03C12BBC MOV X1, X0
	0x03C12BC0 STR X0, [X20 + 0x680]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D3000
	007 Move X3, [X22+1632]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51474432
	014 Add X0, X0, 4087
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1632], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetColorImpl_Injected(System.Int32 name, ref UnityEngine.Color value)

Disassembly:
	0x03C12C20 ADRP X20, 0x7D2000
	0x03C12C24 LDR X1, [X20 + 0x690]
	0x03C12C28 MOV X19, X0
	0x03C12C2C CBNZ X1, 0x3C12C44
	0x03C12C30 ADRP X0, 0xFFFFFFFFFCF06000
	0x03C12C34 ADD X0, X0, 0x77A
	0x03C12C38 BL 0x1C16CB8
	0x03C12C3C MOV X1, X0
	0x03C12C40 STR X0, [X20 + 0x690]
	0x03C12C44 MOV X0, X19
	0x03C12C48 LDP X20, X19, [X31 + 0x10]
	0x03C12C4C LDR X30, [X31], #0x20
	0x03C12C50 BR X1
	0x03C12C54 STP X30, X21, [X31 - 0x20]!
	0x03C12C58 STP X20, X19, [X31 + 0x10]
	0x03C12C5C ADRP X21, 0x7D2000
	0x03C12C60 LDR X2, [X21 + 0x698]
	0x03C12C64 MOV X19, X1
	0x03C12C68 MOV X20, X0
	0x03C12C6C CBNZ X2, 0x3C12C84
	0x03C12C70 ADRP X0, 0xFFFFFFFFFCF0E000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D3000
	007 Move X3, [X22+1640]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51367936
	014 Add X0, X0, 2060
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1640], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetMatrixImpl_Injected(System.Int32 name, ref UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C12CC8 MOV X0, X20
	0x03C12CCC MOV X1, X19
	0x03C12CD0 LDP X20, X19, [X31 + 0x10]
	0x03C12CD4 LDP X30, X21, [X31], #0x20
	0x03C12CD8 BR X2
	0x03C12CDC STR X30, [X31 - 0x30]!
	0x03C12CE0 STP X22, X21, [X31 + 0x10]
	0x03C12CE4 STP X20, X19, [X31 + 0x20]
	0x03C12CE8 ADRP X22, 0x7D2000
	0x03C12CEC LDR X3, [X22 + 0x6A8]
	0x03C12CF0 MOV W19, W2
	0x03C12CF4 MOV X20, X1
	0x03C12CF8 MOV X21, X0
	0x03C12CFC CBNZ X3, 0x3C12D14
	0x03C12D00 ADRP X0, 0xFFFFFFFFFCF16000
	0x03C12D04 ADD X0, X0, 0x548
	0x03C12D08 BL 0x1C16CB8
	0x03C12D0C MOV X3, X0
	0x03C12D10 STR X0, [X22 + 0x6A8]
	0x03C12D14 MOV X0, X21
	0x03C12D18 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D3000
	007 Move X3, [X22+1648]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51367936
	014 Add X0, X0, 2150
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1648], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

