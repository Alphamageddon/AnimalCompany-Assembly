Type: UnityEngine.SetupCoroutine

Method: System.Void InvokeMoveNext(System.Collections.IEnumerator enumerator, System.IntPtr returnValueAddress)

Disassembly:
	0x03C3469C RET
	0x03C346A0 ADRP X8, 0x4E6000
	0x03C346A4 LDR X0, [X28]
	0x03C346A8 LDR X22, [X31 + 0x100]
	0x03C346AC LDR X8, [X8 + 0xDA8]
	0x03C346B0 ADD X25, X27, 0x38
	0x03C346B4 LDR W9, [X0 + 0xE0]
	0x03C346B8 LDR X24, [X8]
	0x03C346BC CBNZ W9, 0x3C346C4
	0x03C346C0 BL 0x1C16DFC
	0x03C346C4 MOV X0, X24
	0x03C346C8 MOV X1, X31
	0x03C346CC BL 0x338C698
	0x03C346D0 MOV X1, X0
	0x03C346D4 MOV X0, X22
	0x03C346D8 MOV X2, X31
	0x03C346DC BL 0x3395194
	0x03C346E0 AND W8, W0, 0x1
	0x03C346E4 B 0x3C33D2C
	0x03C346E8 BL 0x1C16F20
	0x03C346EC BL 0x1C16F20
	0x03C346F0 BL 0x1C16F20
	0x03C346F4 B 0x3C34718
	0x03C346F8 B 0x3C34718
	0x03C346FC B 0x3C34718
	0x03C34700 B 0x3C34718
	0x03C34704 B 0x3C34718
	0x03C34708 B 0x3C34718
	0x03C3470C B 0x3C34718
	0x03C34710 B 0x3C34718
	0x03C34714 B 0x3C34718
	0x03C34718 MOV X24, X0
	0x03C3471C CMP W1, 0x1
	0x03C34720 B.NE 0x3C3477C
	0x03C34724 MOV X0, X24
	0x03C34728 BL 0x3EB1AD0
	0x03C3472C MOV X24, X0
	0x03C34730 ADRP X0, 0x4C5000
	0x03C34734 LDR X0, [X0 + 0xCC0]
	0x03C34738 BL 0x1C16D08
	0x03C3473C LDR X8, [X24]
	0x03C34740 LDR X1, [X8]
	0x03C34744 BL 0x1C17270
	0x03C34748 TBZ X0, 0x0, 0x3C34754
	0x03C3474C BL 0x3EB1AE0
	0x03C34750 B 0x3C33F5C
	0x03C34754 MOVZ W0, 0x8
	0x03C34758 BL 0x3EB1AF0
	0x03C3475C LDR X8, [X24]
	0x03C34760 STR X8, [X0]
	0x03C34764 ADRP X1, 0x280000
	0x03C34768 ADD X1, X1, 0xE58
	0x03C3476C MOV X2, X31
	0x03C34770 BL 0x3EB1B00
	0x03C34774 MOV X24, X0
	0x03C34778 BL 0x3EB1AE0
	0x03C3477C MOV X0, X24
	0x03C34780 BL 0x1D2C690
	0x03C34784 BL 0x1990590
	0x03C34788 MOV X1, X31
	0x03C3478C B 0x33BDD8C
	0x03C34790 STP X30, X23, [X31 - 0x30]!
	0x03C34794 STP X22, X21, [X31 + 0x10]
	0x03C34798 STP X20, X19, [X31 + 0x20]
	0x03C3479C ADRP X23, 0x7B1000
	0x03C347A0 ADRP X21, 0x4E8000
	0x03C347A4 ADRP X22, 0x4BF000
	0x03C347A8 LDRB W8, [X23 + 0x31C]
	0x03C347AC LDR X21, [X21 + 0xB28]
	0x03C347B0 LDR X22, [X22 + 0x6C0]
	0x03C347B4 MOV W19, W1
	0x03C347B8 MOV X20, X0
	0x03C347BC TBNZ X8, 0x0, 0x3C347F8
	0x03C347C0 ADRP X0, 0x52B000
	0x03C347C4 LDR X0, [X0 + 0x4C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B2000
	006 Move W8, [X21+792]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4C0000
	014 Move X0, [X0+3608]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+792], W8
	018 Move X0, X20
	019 Move X1, X31
	020 Move X2, X31
	021 Call IntPtr.op_Equality, X0, X1
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {62}
	026 Move X0, X20
	027 Move X1, X31
	028 Call IntPtr.op_Explicit, X0
	029 Compare X19, 0
	030 JumpIfEqual {85}
	031 Move X10, 0x4C0000
	032 Move X8, [X19]
	033 Move X10, [X10+3608]
	034 Move X20, X0
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X10]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move X0, X19
	046 Move W2, W31
	047 Call 0x1C5D788
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X19
	054 NotImplemented "Instruction BLR not yet implemented."
	055 And W8, W0, 1
	056 Move [X20], W8
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return 
	062 Move X0, 0x4C8000
	063 Move X0, [X0+1400]
	064 Call 0x1C17D08
	065 Call 0x1C17F10
	066 Move X19, X0
	067 Move X0, 0x52C000
	068 Move X0, [X0+1000]
	069 Call 0x1C17D08
	070 Move X20, X0
	071 Move X0, 0x52C000
	072 Move X0, [X0+1008]
	073 Call 0x1C17D08
	074 Move X2, X0
	075 Move X0, X19
	076 Move X1, X20
	077 Move X3, X31
	078 Call ArgumentException..ctor, X0, X1, X2
	079 Move X0, 0x52C000
	080 Move X0, [X0+1016]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Call 0x1C17DEC
	085 Call 0x1C17F20

Method: System.Object InvokeMember(System.Object behaviour, System.String name, System.Object variable)

Disassembly:
	0x03C347C8 BL 0x1C16CF4
	0x03C347CC ADRP X0, 0x4E8000
	0x03C347D0 LDR X0, [X0 + 0xB28]
	0x03C347D4 BL 0x1C16CF4
	0x03C347D8 ADRP X0, 0x51F000
	0x03C347DC LDR X0, [X0 + 0x778]
	0x03C347E0 BL 0x1C16CF4
	0x03C347E4 ADRP X0, 0x4BF000
	0x03C347E8 LDR X0, [X0 + 0x6C0]
	0x03C347EC BL 0x1C16CF4
	0x03C347F0 MOVZ W8, 0x1
	0x03C347F4 STRB W8, [X23 + 0x31C]
	0x03C347F8 LDR X0, [X22]
	0x03C347FC LDR X21, [X21]
	0x03C34800 LDR W8, [X0 + 0xE0]
	0x03C34804 CBNZ W8, 0x3C3480C
	0x03C34808 BL 0x1C16DFC
	0x03C3480C MOV X0, X21
	0x03C34810 MOV X1, X31
	0x03C34814 BL 0x338C698
	0x03C34818 CBZ X20, 0x3C348A8
	0x03C3481C LDR X8, [X20]
	0x03C34820 MOV X1, X0
	0x03C34824 MOV X0, X20
	0x03C34828 MOV W2, W31
	0x03C3482C LDR X9, [X8 + 0x208]
	0x03C34830 LDR X3, [X8 + 0x210]
	0x03C34834 BLR X9
	0x03C34838 CBZ X0, 0x3C348A8
	0x03C3483C LDR W8, [X0 + 0x18]
	0x03C34840 CBZ W8, 0x3C34850
	0x03C34844 CBZ W19, 0x3C34858
	0x03C34848 CMP W19, 0x2
	0x03C3484C B.NE 0x3C34860
	0x03C34850 MOVZ W0, 0x1
	0x03C34854 B 0x3C34898
	0x03C34858 MOV W0, W31
	0x03C3485C B 0x3C34898
	0x03C34860 ADRP X8, 0x52B000
	0x03C34864 LDR X8, [X8 + 0x4C8]
	0x03C34868 LDR X1, [X8]
	0x03C3486C BL 0x21C2FD4
	0x03C34870 CBZ X0, 0x3C348A8
	0x03C34874 ADRP X8, 0x51F000
	0x03C34878 LDR X8, [X8 + 0x778]
	0x03C3487C LDR X1, [X8]
	0x03C34880 LDR X8, [X0]
	0x03C34884 CMP X8, X1
	0x03C34888 B.NE 0x3C348AC
	0x03C3488C LDRB W8, [X0 + 0x18]
	0x03C34890 CMP W8, 0x0
	0x03C34894 CSET W0, EQ
	0x03C34898 LDP X20, X19, [X31 + 0x20]
	0x03C3489C LDP X22, X21, [X31 + 0x10]
	0x03C348A0 LDP X30, X23, [X31], #0x30
	0x03C348A4 RET
	0x03C348A8 BL 0x1C16F20
	0x03C348AC BL 0x1C171E0
	0x03C348B0 STP X29, X30, [X31 - 0x60]!
	0x03C348B4 STP X28, X27, [X31 + 0x10]
	0x03C348B8 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x7B2000
	008 Move W8, [X21+793]
	009 Move X22, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4C0000
	017 Move X0, [X0+2512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+793], W8
	021 Compare X22, 0
	022 JumpIfEqual {43}
	023 Move X8, 0x4C0000
	024 Move X8, [X8+2512]
	025 Move W1, 1
	026 Move X0, [X8]
	027 Call 0x1C17D6C
	028 Compare X0, 0
	029 JumpIfEqual {71}
	030 Move X8, [X0]
	031 Move X21, X0
	032 Move X0, X22
	033 Move X1, [X8+64]
	034 Call 0x1C17E00
	035 Compare X0, 0
	036 JumpIfEqual {72}
	037 Move W8, [X21+24]
	038 Compare W8, 0
	039 JumpIfEqual {75}
	040 Move [X21+32], X22
	041 Compare X20, 0
	042 JumpIfNotEqual {46}
	043 Move X21, X31
	044 Compare X20, 0
	045 JumpIfEqual {71}
	046 Move X0, X20
	047 Move X1, X31
	048 Call "il2cpp_vm_object_is_inst", X0
	049 Compare X0, 0
	050 JumpIfEqual {71}
	051 Move X8, [X0]
	052 Move W2, 308
	053 Move X1, X19
	054 Move X3, X31
	055 Move X9, [X8+2088]
	056 Move X8, [X8+2096]
	057 Move X4, X20
	058 Move X5, X21
	059 Move X6, X31
	060 Move X7, X31
	061 Move [X31], X31
	062 Move [X31+8], X8
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X30, [X31+16]
	069 Add X31, X31, 64
	070 Return X0
	071 Call 0x1C17F20
	072 Call 0x1C17F44
	073 Move X1, X31
	074 Call 0x1C17DEC
	075 Call 0x1C17F28

