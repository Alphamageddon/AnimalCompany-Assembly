Type: UnityEngine.AttributeHelperEngine

Method: System.Type GetParentTypeDisallowingMultipleInclusion(System.Type type)

Disassembly:
	0x03C32848 MOVZ W0, 0x8
	0x03C3284C BL 0x3EB1AF0
	0x03C32850 LDR X8, [X19]
	0x03C32854 STR X8, [X0]
	0x03C32858 ADRP X1, 0x282000
	0x03C3285C ADD X1, X1, 0xE58
	0x03C32860 MOV X2, X31
	0x03C32864 BL 0x3EB1B00
	0x03C32868 MOV X19, X0
	0x03C3286C BL 0x3EB1AE0
	0x03C32870 MOV X0, X19
	0x03C32874 BL 0x1D2C690
	0x03C32878 BL 0x1990590
	0x03C3287C EOR X8, X1, X0, 0x0
	0x03C32880 CBZ W8, 0x3C3288C
	0x03C32884 MOV W0, W31
	0x03C32888 RET
	0x03C3288C UBFM X9, X1, 0x30, 0x3F
	0x03C32890 UBFM X10, X0, 0x30, 0x3F
	0x03C32894 ANDS X31, X8, 0xFFFFFFFFFFFF
	0x03C32898 CSET W8, EQ
	0x03C3289C CMP W10, W9
	0x03C328A0 CSET W9, EQ
	0x03C328A4 AND W0, W8, W9, 0x0
	0x03C328A8 RET
	0x03C328AC SUB X31, X31, 0x40
	0x03C328B0 STR X30, [X31 + 0x10]
	0x03C328B4 STP X22, X21, [X31 + 0x20]
	0x03C328B8 STP X20, X19, [X31 + 0x30]
	0x03C328BC ADRP X19, 0x7B3000
	0x03C328C0 ADRP X21, 0x4C1000
	0x03C328C4 ADRP X22, 0x4C6000
	0x03C328C8 LDRB W8, [X19 + 0x2CC]
	0x03C328CC LDR X21, [X21 + 0x9D0]
	0x03C328D0 LDR X22, [X22 + 0x658]
	0x03C328D4 MOV X20, X0
	0x03C328D8 TBNZ X8, 0x0, 0x3C32908
	0x03C328DC ADRP X0, 0x4C1000
	0x03C328E0 LDR X0, [X0 + 0x9D0]
	0x03C328E4 BL 0x1C16CF4
	0x03C328E8 ADRP X0, 0x4C6000
	0x03C328EC LDR X0, [X0 + 0x658]
	0x03C328F0 BL 0x1C16CF4
	0x03C328F4 ADRP X0, 0x501000
	0x03C328F8 LDR X0, [X0 + 0xE38]
	0x03C328FC BL 0x1C16CF4
	0x03C32900 MOVZ W8, 0x1
	0x03C32904 STRB W8, [X19 + 0x2CC]
	0x03C32908 LDR X0, [X21]
	0x03C3290C MOVZ W1, 0x4
	0x03C32910 BL 0x1C16D6C
	0x03C32914 MOV X19, X0
	0x03C32918 LDRH W8, [X20]
	0x03C3291C LDR X0, [X22]
	0x03C32920 ADD X1, X31, 0x1C
	0x03C32924 STRH W8, [X31 + 0x1C]
	0x03C32928 BL 0x1C16E04
	0x03C3292C CBZ X19, 0x3C32A54
	0x03C32930 MOV X21, X0
	0x03C32934 CBZ X0, 0x3C3294C
	0x03C32938 LDR X8, [X19]
	0x03C3293C MOV X0, X21
	0x03C32940 LDR X1, [X8 + 0x40]
	0x03C32944 BL 0x1C16E00
	0x03C32948 CBZ X0, 0x3C32A48
	0x03C3294C LDR W8, [X19 + 0x18]
	0x03C32950 CBZ W8, 0x3C32A44
	0x03C32954 STR X21, [X19 + 0x20]
	0x03C32958 LDRH W8, [X20 + 0x2]
	0x03C3295C LDR X0, [X22]
	0x03C32960 ADD X1, X31, 0x18
	0x03C32964 STRH W8, [X31 + 0x18]
	0x03C32968 BL 0x1C16E04
	0x03C3296C MOV X21, X0
	0x03C32970 CBZ X0, 0x3C32988
	0x03C32974 LDR X8, [X19]
	0x03C32978 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x7B4000
	009 Move W8, [X20+674]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x52E000
	016 Move X0, [X0+864]
	017 Call 0x1C17CF4
	018 Move X0, 0x52E000
	019 Move X0, [X0+872]
	020 Call 0x1C17CF4
	021 Move X0, 0x4C2000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+674], W8
	026 Move X22, 0x4C2000
	027 Move X23, 0x52E000
	028 Move X24, 0x52E000
	029 Move X22, [X22+1728]
	030 Move X23, [X23+872]
	031 Move X24, [X24+864]
	032 Move X20, X31
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Move X1, X31
	040 Move X2, X31
	041 Call Type.op_Inequality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {86}
	046 Move X0, [X22]
	047 Move X21, [X23]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X21
	053 Move X1, X31
	054 Call Type.GetTypeFromHandle, X0
	055 Move X1, X0
	056 Move X0, X19
	057 Move X2, X31
	058 Call Type.op_Inequality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {86}
	063 Move X0, [X22]
	064 Move X21, [X24]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X21
	070 Move X1, X31
	071 Call Type.GetTypeFromHandle, X0
	072 Move X1, X0
	073 Move X0, X19
	074 Move X2, X31
	075 Call Attribute.IsDefined, X0, X1
	076 Compare X19, 0
	077 JumpIfEqual {95}
	078 Move X8, [X19]
	079 And W31, W0, 1
	080 Move X0, X19
	081 NotImplemented "Instruction CSEL not yet implemented."
	082 Move X9, [X8+2072]
	083 Move X1, [X8+2080]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X19, X0
	086 Move X0, X20
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X24, [X31+16]
	092 Move X23, [X31+24]
	093 Move X30, [X31+64]
	094 Return X0
	095 Call 0x1C17F20

Method: System.Type[] GetRequiredComponents(System.Type klass)

Disassembly:
	0x03C3297C LDR X1, [X8 + 0x40]
	0x03C32980 BL 0x1C16E00
	0x03C32984 CBZ X0, 0x3C32A48
	0x03C32988 LDR W8, [X19 + 0x18]
	0x03C3298C CMP W8, 0x1
	0x03C32990 B.LS 0x3C32A44
	0x03C32994 STR X21, [X19 + 0x28]
	0x03C32998 LDRH W8, [X20 + 0x4]
	0x03C3299C LDR X0, [X22]
	0x03C329A0 ADD X1, X31, 0xC
	0x03C329A4 STRH W8, [X31 + 0xC]
	0x03C329A8 BL 0x1C16E04
	0x03C329AC MOV X21, X0
	0x03C329B0 CBZ X0, 0x3C329C8
	0x03C329B4 LDR X8, [X19]
	0x03C329B8 MOV X0, X21
	0x03C329BC LDR X1, [X8 + 0x40]
	0x03C329C0 BL 0x1C16E00
	0x03C329C4 CBZ X0, 0x3C32A48
	0x03C329C8 LDR W8, [X19 + 0x18]
	0x03C329CC CMP W8, 0x2
	0x03C329D0 B.LS 0x3C32A44
	0x03C329D4 STR X21, [X19 + 0x30]
	0x03C329D8 LDRH W8, [X20 + 0x6]
	0x03C329DC LDR X0, [X22]
	0x03C329E0 ADD X1, X31, 0x8
	0x03C329E4 STRH W8, [X31 + 0x8]
	0x03C329E8 BL 0x1C16E04
	0x03C329EC MOV X20, X0
	0x03C329F0 CBZ X0, 0x3C32A08
	0x03C329F4 LDR X8, [X19]
	0x03C329F8 MOV X0, X20
	0x03C329FC LDR X1, [X8 + 0x40]
	0x03C32A00 BL 0x1C16E00
	0x03C32A04 CBZ X0, 0x3C32A48
	0x03C32A08 LDR W8, [X19 + 0x18]
	0x03C32A0C CMP W8, 0x3
	0x03C32A10 B.LS 0x3C32A44
	0x03C32A14 ADRP X8, 0x501000
	0x03C32A18 LDR X8, [X8 + 0xE38]
	0x03C32A1C STR X20, [X19 + 0x38]
	0x03C32A20 MOV X1, X19
	0x03C32A24 MOV X2, X31
	0x03C32A28 LDR X0, [X8]
	0x03C32A2C BL 0x3227C5C
	0x03C32A30 LDP X20, X19, [X31 + 0x30]
	0x03C32A34 LDP X22, X21, [X31 + 0x20]
	0x03C32A38 LDR X30, [X31 + 0x10]
	0x03C32A3C ADD X31, X31, 0x40
	0x03C32A40 RET
	0x03C32A44 BL 0x1C16F28
	0x03C32A48 BL 0x1C16F44
	0x03C32A4C MOV X1, X31
	0x03C32A50 BL 0x1C16DEC
	0x03C32A54 BL 0x1C16F20
	0x03C32A58 STP X30, X21, [X31 - 0x20]!
	0x03C32A5C STP X20, X19, [X31 + 0x10]
	0x03C32A60 ADRP X21, 0x7B3000
	0x03C32A64 LDRB W8, [X21 + 0x2CD]
	0x03C32A68 MOV X20, X1
	0x03C32A6C MOV X19, X0
	0x03C32A70 TBNZ X8, 0x0, 0x3C32A88
	0x03C32A74 ADRP X0, 0x52D000
	0x03C32A78 LDR X0, [X0 + 0x3C0]
	0x03C32A7C BL 0x1C16CF4
	0x03C32A80 MOVZ W8, 0x1
	0x03C32A84 STRB W8, [X21 + 0x2CD]
	0x03C32A88 CBZ X20, 0x3C32AF0
	0x03C32A8C ADRP X8, 0x52D000
	0x03C32A90 LDR X8, [X8 + 0x3C0]
	0x03C32A94 LDR X9, [X20]
	0x03C32A98 LDR X8, [X8]
	0x03C32A9C CMP X9, X8
	0x03C32AA0 B.NE 0x3C32AF0
	0x03C32AA4 MOV X0, X20
	0x03C32AA8 BL 0x1C16E08
	0x03C32AAC LDRH W8, [X0]
	0x03C32AB0 LDRH W9, [X19]
	0x03C32AB4 CMP W9, W8
	0x03C32AB8 B.NE 0x3C32AF0
	0x03C32ABC LDRH W8, [X0 + 0x2]
	0x03C32AC0 LDRH W9, [X19 + 0x2]
	0x03C32AC4 CMP W9, W8
	0x03C32AC8 B.NE 0x3C32AF0
	0x03C32ACC LDRH W8, [X0 + 0x4]
	0x03C32AD0 LDRH W9, [X19 + 0x4]
	0x03C32AD4 CMP W9, W8
	0x03C32AD8 B.NE 0x3C32AF0
	0x03C32ADC LDRH W8, [X0 + 0x6]
	0x03C32AE0 LDRH W9, [X19 + 0x6]
	0x03C32AE4 CMP W9, W8
	0x03C32AE8 CSET W0, EQ
	0x03C32AEC B 0x3C32AF4
	0x03C32AF0 MOV W0, W31
	0x03C32AF4 LDP X20, X19, [X31 + 0x10]
	0x03C32AF8 LDP X30, X21, [X31], #0x20
	0x03C32AFC RET
	0x03C32B00 STP X30, X23, [X31 - 0x30]!
	0x03C32B04 STP X22, X21, [X31 + 0x10]
	0x03C32B08 STP X20, X19, [X31 + 0x20]
	0x03C32B0C ADRP X21, 0x7B3000
	0x03C32B10 ADRP X20, 0x4E9000
	0x03C32B14 LDRB W8, [X21 + 0x2CE]
	0x03C32B18 LDR X20, [X20 + 0xB10]
	0x03C32B1C MOV X19, X0
	0x03C32B20 TBNZ X8, 0x0, 0x3C32B44
	0x03C32B24 ADRP X0, 0x52D000
	0x03C32B28 LDR X0, [X0 + 0x3C8]
	0x03C32B2C BL 0x1C16CF4
	0x03C32B30 ADRP X0, 0x4E9000
	0x03C32B34 LDR X0, [X0 + 0xB10]
	0x03C32B38 BL 0x1C16CF4
	0x03C32B3C MOVZ W8, 0x1
	0x03C32B40 STRB W8, [X21 + 0x2CE]
	0x03C32B44 LDR X0, [X20]
	0x03C32B48 ADRP X23, 0x52D000
	0x03C32B4C LDRH W22, [X19]
	0x03C32B50 LDRH W21, [X19 + 0x2]
	0x03C32B54 LDRH W20, [X19 + 0x4]
	0x03C32B58 LDR W8, [X0 + 0xE0]
	0x03C32B5C LDRH W19, [X19 + 0x6]
	0x03C32B60 LDR X23, [X23 + 0x3C8]
	0x03C32B64 CBNZ W8, 0x3C32B6C
	0x03C32B68 BL 0x1C16DFC
	0x03C32B6C LDR X4, [X23]
	0x03C32B70 MOV W0, W22
	0x03C32B74 MOV W1, W21
	0x03C32B78 MOV W2, W20
	0x03C32B7C MOV W3, W19
	0x03C32B80 LDP X20, X19, [X31 + 0x20]
	0x03C32B84 LDP X22, X21, [X31 + 0x10]
	0x03C32B88 LDP X30, X23, [X31], #0x30
	0x03C32B8C B 0x21E8E08
	0x03C32B90 STR X30, [X31 - 0x30]!
	0x03C32B94 STP X22, X21, [X31 + 0x10]
	0x03C32B98 STP X20, X19, [X31 + 0x20]
	0x03C32B9C ADRP X21, 0x7B3000
	0x03C32BA0 LDRB W8, [X21 + 0x2CF]
	0x03C32BA4 MOV X20, X1
	0x03C32BA8 MOV X19, X0
	0x03C32BAC TBNZ X8, 0x0, 0x3C32BC4
	0x03C32BB0 ADRP X0, 0x52D000
	0x03C32BB4 LDR X0, [X0 + 0x3D0]
	0x03C32BB8 BL 0x1C16CF4
	0x03C32BBC MOVZ W8, 0x1
	0x03C32BC0 STRB W8, [X21 + 0x2CF]
	0x03C32BC4 CBZ X20, 0x3C32C0C
	0x03C32BC8 ADRP X8, 0x52D000
	0x03C32BCC LDR X8, [X8 + 0x3D0]
	0x03C32BD0 LDR X9, [X20]
	0x03C32BD4 LDR X8, [X8]
	0x03C32BD8 CMP X9, X8
	0x03C32BDC B.NE 0x3C32C0C
	0x03C32BE0 MOV X0, X20
	0x03C32BE4 BL 0x1C16E08
	0x03C32BE8 LDP X1, X22, [X0]
	0x03C32BEC LDP X21, X20, [X0 + 0x10]
	0x03C32BF0 LDR X0, [X19]
	0x03C32BF4 MOV X2, X31
	0x03C32BF8 BL 0x321BA08
	0x03C32BFC TBZ X0, 0x0, 0x3C32C0C
	0x03C32C00 LDR X8, [X19 + 0x8]
	0x03C32C04 EOR X9, X8, X22, 0x0
	0x03C32C08 CBZ W9, 0x3C32C20
	0x03C32C0C LDP X20, X19, [X31 + 0x20]
	0x03C32C10 LDP X22, X21, [X31 + 0x10]
	0x03C32C14 MOV W0, W31
	0x03C32C18 LDR X30, [X31], #0x30
	0x03C32C1C RET
	0x03C32C20 ANDS X31, X9, 0xFFFFFFFFFFFF
	0x03C32C24 B.NE 0x3C32C0C
	0x03C32C28 UBFM X9, X22, 0x30, 0x3F
	0x03C32C2C UBFM X8, X8, 0x30, 0x3F
	0x03C32C30 CMP W8, W9
	0x03C32C34 B.NE 0x3C32C0C
	0x03C32C38 LDR X0, [X19 + 0x10]
	0x03C32C3C MOV X1, X21
	0x03C32C40 MOV X2, X31
	0x03C32C44 BL 0x321BA08
	0x03C32C48 TBZ X0, 0x0, 0x3C32C0C
	0x03C32C4C LDR X0, [X19 + 0x18]
	0x03C32C50 MOV X1, X20
	0x03C32C54 LDP X20, X19, [X31 + 0x20]
	0x03C32C58 LDP X22, X21, [X31 + 0x10]
	0x03C32C5C MOV X2, X31
	0x03C32C60 LDR X30, [X31], #0x30
	0x03C32C64 B 0x321BA08
	0x03C32C68 STP X30, X23, [X31 - 0x30]!
	0x03C32C6C STP X22, X21, [X31 + 0x10]
	0x03C32C70 STP X20, X19, [X31 + 0x20]
	0x03C32C74 ADRP X21, 0x7B3000
	0x03C32C78 ADRP X20, 0x4E9000
	0x03C32C7C LDRB W8, [X21 + 0x2D0]
	0x03C32C80 LDR X20, [X20 + 0xB10]
	0x03C32C84 MOV X19, X0
	0x03C32C88 TBNZ X8, 0x0, 0x3C32CAC
	0x03C32C8C ADRP X0, 0x52D000
	0x03C32C90 LDR X0, [X0 + 0x3D8]
	0x03C32C94 BL 0x1C16CF4
	0x03C32C98 ADRP X0, 0x4E9000
	0x03C32C9C LDR X0, [X0 + 0xB10]
	0x03C32CA0 BL 0x1C16CF4
	0x03C32CA4 MOVZ W8, 0x1
	0x03C32CA8 STRB W8, [X21 + 0x2D0]
	0x03C32CAC LDR X0, [X20]
	0x03C32CB0 ADRP X23, 0x52D000
	0x03C32CB4 LDP X22, X20, [X19]
	0x03C32CB8 LDP X21, X19, [X19 + 0x10]
	0x03C32CBC LDR W8, [X0 + 0xE0]
	0x03C32CC0 LDR X23, [X23 + 0x3D8]
	0x03C32CC4 CBNZ W8, 0x3C32CCC
	0x03C32CC8 BL 0x1C16DFC
	0x03C32CCC LDR X4, [X23]
	0x03C32CD0 MOV X0, X22
	0x03C32CD4 MOV X1, X20
	0x03C32CD8 MOV X2, X21
	0x03C32CDC MOV X3, X19
	0x03C32CE0 LDP X20, X19, [X31 + 0x20]
	0x03C32CE4 LDP X22, X21, [X31 + 0x10]
	0x03C32CE8 LDP X30, X23, [X31], #0x30
	0x03C32CEC B 0x21E8B48
	0x03C32CF0 SUB X31, X31, 0x40
	0x03C32CF4 STP X30, X23, [X31 + 0x10]
	0x03C32CF8 STP X22, X21, [X31 + 0x20]
	0x03C32CFC STP X20, X19, [X31 + 0x30]
	0x03C32D00 ADRP X20, 0x7B3000
	0x03C32D04 ADRP X21, 0x4C1000
	0x03C32D08 LDRB W8, [X20 + 0x2D1]
	0x03C32D0C LDR X21, [X21 + 0x9D0]
	0x03C32D10 MOV X19, X0
	0x03C32D14 TBNZ X8, 0x0, 0x3C32D50
	0x03C32D18 ADRP X0, 0x52D000
	0x03C32D1C LDR X0, [X0 + 0x3C0]
	0x03C32D20 BL 0x1C16CF4
	0x03C32D24 ADRP X0, 0x4C1000
	0x03C32D28 LDR X0, [X0 + 0x9D0]
	0x03C32D2C BL 0x1C16CF4
	0x03C32D30 ADRP X0, 0x52D000
	0x03C32D34 LDR X0, [X0 + 0x3E0]
	0x03C32D38 BL 0x1C16CF4
	0x03C32D3C ADRP X0, 0x4F4000
	0x03C32D40 LDR X0, [X0 + 0x360]
	0x03C32D44 BL 0x1C16CF4
	0x03C32D48 MOVZ W8, 0x1
	0x03C32D4C STRB W8, [X20 + 0x2D1]
	0x03C32D50 LDR X0, [X21]
	0x03C32D54 MOVZ W1, 0x4
	0x03C32D58 BL 0x1C16D6C
	0x03C32D5C CBZ X0, 0x3C32E8C
	0x03C32D60 LDR X21, [X19]
	0x03C32D64 MOV X20, X0
	0x03C32D68 CBZ X21, 0x3C32D80
	0x03C32D6C LDR X8, [X20]
	0x03C32D70 MOV X0, X21
	0x03C32D74 LDR X1, [X8 + 0x40]
	0x03C32D78 BL 0x1C16E00
	0x03C32D7C CBZ X0, 0x3C32E80
	0x03C32D80 LDR W8, [X20 + 0x18]
	0x03C32D84 CBZ W8, 0x3C32E7C
	0x03C32D88 ADRP X8, 0x52D000
	0x03C32D8C LDR X8, [X8 + 0x3C0]
	0x03C32D90 STR X21, [X20 + 0x20]
	0x03C32D94 LDR X9, [X19 + 0x8]
	0x03C32D98 ADD X1, X31, 0x8
	0x03C32D9C LDR X0, [X8]
	0x03C32DA0 STR X9, [X31 + 0x8]
	0x03C32DA4 BL 0x1C16E04
	0x03C32DA8 MOV X21, X0
	0x03C32DAC CBZ X0, 0x3C32DC4
	0x03C32DB0 LDR X8, [X20]
	0x03C32DB4 MOV X0, X21
	0x03C32DB8 LDR X1, [X8 + 0x40]
	0x03C32DBC BL 0x1C16E00
	0x03C32DC0 CBZ X0, 0x3C32E80
	0x03C32DC4 LDR W8, [X20 + 0x18]
	0x03C32DC8 CMP W8, 0x1
	0x03C32DCC B.LS 0x3C32E7C
	0x03C32DD0 STR X21, [X20 + 0x28]
	0x03C32DD4 MOV X21, X19
	0x03C32DD8 LDR X0, [X21 + 0x18]!
	0x03C32DDC ADRP X23, 0x52D000
	0x03C32DE0 ADRP X22, 0x4F4000
	0x03C32DE4 LDR X23, [X23 + 0x3E0]
	0x03C32DE8 LDR X22, [X22 + 0x360]
	0x03C32DEC MOV X1, X31
	0x03C32DF0 BL 0x32277A8
	0x03C32DF4 ANDS W31, W0, 0x1
	0x03C32DF8 CSEL X8, X22, X21, NE
	0x03C32DFC LDR X22, [X8]
	0x03C32E00 LDR X21, [X23]
	0x03C32E04 CBZ X22, 0x3C32E1C
	0x03C32E08 LDR X8, [X20]
	0x03C32E0C MOV X0, X22
	0x03C32E10 LDR X1, [X8 + 0x40]
	0x03C32E14 BL 0x1C16E00
	0x03C32E18 CBZ X0, 0x3C32E80
	0x03C32E1C LDR W8, [X20 + 0x18]
	0x03C32E20 CMP W8, 0x2
	0x03C32E24 B.LS 0x3C32E7C
	0x03C32E28 STR X22, [X20 + 0x30]
	0x03C32E2C LDR X19, [X19 + 0x10]
	0x03C32E30 CBZ X19, 0x3C32E4C
	0x03C32E34 LDR X8, [X20]
	0x03C32E38 MOV X0, X19
	0x03C32E3C LDR X1, [X8 + 0x40]
	0x03C32E40 BL 0x1C16E00
	0x03C32E44 CBZ X0, 0x3C32E80
	0x03C32E48 LDR W8, [X20 + 0x18]
	0x03C32E4C CMP W8, 0x3

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x7B4000
	014 Move W8, [X20+675]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0x4CC000
	021 Move X0, [X0+2360]
	022 Call 0x1C17CF4
	023 Move X0, 0x4CC000
	024 Move X0, [X0+2752]
	025 Call 0x1C17CF4
	026 Move X0, 0x4CC000
	027 Move X0, [X0+2344]
	028 Call 0x1C17CF4
	029 Move X0, 0x4CC000
	030 Move X0, [X0+2336]
	031 Call 0x1C17CF4
	032 Move X0, 0x52E000
	033 Move X0, [X0+872]
	034 Call 0x1C17CF4
	035 Move X0, 0x52E000
	036 Move X0, [X0+880]
	037 Call 0x1C17CF4
	038 Move X0, 0x52E000
	039 Move X0, [X0+888]
	040 Call 0x1C17CF4
	041 Move X0, 0x4CA000
	042 Move X0, [X0+3168]
	043 Call 0x1C17CF4
	044 Move X0, 0x4C2000
	045 Move X0, [X0+1728]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+675], W8
	049 Move X24, 0x4C2000
	050 Move X25, 0x52E000
	051 Move X26, 0x52E000
	052 Move X27, 0x52E000
	053 Move X29, 0x4CC000
	054 Move X24, [X24+1728]
	055 Move X25, [X25+872]
	056 Move X26, [X26+888]
	057 Move X27, [X27+880]
	058 Move X29, [X29+2360]
	059 Move X20, X31
	060 Move X28, 0x4CC000
	061 Move X28, [X28+2752]
	062 Move X0, [X24]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move X1, X31
	069 Move X2, X31
	070 Call Type.op_Inequality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {276}
	075 Move X0, [X24]
	076 Move X21, [X25]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X21
	082 Move X1, X31
	083 Call Type.GetTypeFromHandle, X0
	084 Move X1, X0
	085 Move X0, X19
	086 Move X2, X31
	087 Call Type.op_Inequality, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {276}
	092 Move X0, [X24]
	093 Move X21, [X26]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X21
	099 Move X1, X31
	100 Call Type.GetTypeFromHandle, X0
	101 Compare X19, 0
	102 JumpIfEqual {356}
	103 Move X8, [X19]
	104 Move X1, X0
	105 Move X0, X19
	106 Move W2, W31
	107 Move X9, [X8+520]
	108 Move X3, [X8+528]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X0, 0
	111 JumpIfEqual {119}
	112 Move X23, [X27]
	113 Move X22, X0
	114 Move X1, X23
	115 Call 0x1C17E00
	116 Move X21, X0
	117 Compare X0, 0
	118 JumpIfNotEqual {120}
	119 Move X21, X31
	120 Move X8, [X19]
	121 Move X0, X19
	122 Move X9, [X8+2072]
	123 Move X1, [X8+2080]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X21, 0
	126 JumpIfEqual {356}
	127 Move X8, [X21+24]
	128 Move X19, X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move W28, W31
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add X9, X21, W28
	133 Move X23, [X9+32]
	134 Compare X20, 0
	135 JumpIfNotEqual {163}
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, [X24]
	138 Move X20, [X25]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X0, X20
	144 Move X1, X31
	145 Call Type.GetTypeFromHandle, X0
	146 Move X1, X0
	147 Move X0, X19
	148 Move X2, X31
	149 Call Type.op_Equality, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {309}
	154 Move X8, 0x4CC000
	155 Move X8, [X8+2336]
	156 Move X0, [X8]
	157 Call 0x1C17F10
	158 Move X8, 0x4CC000
	159 Move X8, [X8+2344]
	160 Move X20, X0
	161 Move X1, [X8]
	162 Call List`1<Object>..ctor, X0
	163 Compare X23, 0
	164 JumpIfEqual {356}
	165 Move X0, [X24]
	166 Move X22, [X23+16]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X22
	172 Move X1, X31
	173 Move X2, X31
	174 Call Type.op_Inequality, X0, X1
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {201}
	179 Compare X20, 0
	180 JumpIfEqual {356}
	181 Move W10, [X20+28]
	182 Move X1, [X23+16]
	183 Move X8, [X20+16]
	184 Move X9, [X29]
	185 Add W10, W10, 1
	186 Move [X20+28], W10
	187 Compare X8, 0
	188 JumpIfEqual {356}
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Move W11, [X8+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Add W9, W10, 1
	193 Add X8, X8, X10
	194 Move [X20+24], W9
	195 Move [X8+32], X1
	196 Move X8, [X9+32]
	197 Move X0, X20
	198 Move X8, [X8+192]
	199 Move X2, [X8+112]
	200 Call List`1<Object>.AddWithResize, X0, X1
	201 Move X0, [X24]
	202 Move X22, [X23+24]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X22
	208 Move X1, X31
	209 Move X2, X31
	210 Call Type.op_Inequality, X0, X1
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {237}
	215 Compare X20, 0
	216 JumpIfEqual {356}
	217 Move W10, [X20+28]
	218 Move X1, [X23+24]
	219 Move X8, [X20+16]
	220 Move X9, [X29]
	221 Add W10, W10, 1
	222 Move [X20+28], W10
	223 Compare X8, 0
	224 JumpIfEqual {356}
	225 NotImplemented "Instruction LDRSW not yet implemented."
	226 Move W11, [X8+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Add W9, W10, 1
	229 Add X8, X8, X10
	230 Move [X20+24], W9
	231 Move [X8+32], X1
	232 Move X8, [X9+32]
	233 Move X0, X20
	234 Move X8, [X8+192]
	235 Move X2, [X8+112]
	236 Call List`1<Object>.AddWithResize, X0, X1
	237 Move X0, [X24]
	238 Move X22, [X23+32]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X0, X22
	244 Move X1, X31
	245 Move X2, X31
	246 Call Type.op_Inequality, X0, X1
	247 Move TEMP, X0
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfNotEqual {273}
	251 Compare X20, 0
	252 JumpIfEqual {356}
	253 Move W10, [X20+28]
	254 Move X1, [X23+32]
	255 Move X8, [X20+16]
	256 Move X9, [X29]
	257 Add W10, W10, 1
	258 Move [X20+28], W10
	259 Compare X8, 0
	260 JumpIfEqual {356}
	261 NotImplemented "Instruction LDRSW not yet implemented."
	262 Move W11, [X8+24]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Add W9, W10, 1
	265 Add X8, X8, X10
	266 Move [X20+24], W9
	267 Move [X8+32], X1
	268 Move X8, [X9+32]
	269 Move X0, X20
	270 Move X8, [X8+192]
	271 Move X2, [X8+112]
	272 Call List`1<Object>.AddWithResize, X0, X1
	273 Move W8, [X21+24]
	274 Add W28, W28, 1
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Compare X20, 0
	277 JumpIfEqual {294}
	278 Move X1, [X28]
	279 Move X0, X20
	280 Move X20, [X31+80]
	281 Move X19, [X31+88]
	282 Move X22, [X31+64]
	283 Move X21, [X31+72]
	284 Move X24, [X31+48]
	285 Move X23, [X31+56]
	286 Move X26, [X31+32]
	287 Move X25, [X31+40]
	288 Move X28, [X31+16]
	289 Move X27, [X31+24]
	290 Move X29, [X31+96]
	291 Move X30, [X31+104]
	292 Call List`1<Object>.ToArray, X0
	293 Return X0
	294 Move X19, X31
	295 Move X0, X19
	296 Move X20, [X31+80]
	297 Move X19, [X31+88]
	298 Move X22, [X31+64]
	299 Move X21, [X31+72]
	300 Move X24, [X31+48]
	301 Move X23, [X31+56]
	302 Move X26, [X31+32]
	303 Move X25, [X31+40]
	304 Move X28, [X31+16]
	305 Move X27, [X31+24]
	306 Move X29, [X31+96]
	307 Move X30, [X31+104]
	308 Return X0
	309 Move X8, 0x4CA000
	310 Move X8, [X8+3168]
	311 Move W1, 3
	312 Move X0, [X8]
	313 Call 0x1C17D6C
	314 Compare X23, 0
	315 JumpIfEqual {356}
	316 Move X19, X0
	317 Compare X0, 0
	318 JumpIfEqual {356}
	319 Move X20, [X23+16]
	320 Compare X20, 0
	321 JumpIfEqual {328}
	322 Move X8, [X19]
	323 Move X0, X20
	324 Move X1, [X8+64]
	325 Call 0x1C17E00
	326 Compare X0, 0
	327 JumpIfEqual {361}
	328 Move W8, [X19+24]
	329 Compare W8, 0
	330 JumpIfEqual {357}
	331 Move [X19+32], X20
	332 Move X20, [X23+24]
	333 Compare X20, 0
	334 JumpIfEqual {342}
	335 Move X8, [X19]
	336 Move X0, X20
	337 Move X1, [X8+64]
	338 Call 0x1C17E00
	339 Compare X0, 0
	340 JumpIfEqual {361}
	341 Move W8, [X19+24]
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move [X19+40], X20
	344 Move X20, [X23+32]
	345 Compare X20, 0
	346 JumpIfEqual {354}
	347 Move X8, [X19]
	348 Move X0, X20
	349 Move X1, [X8+64]
	350 Call 0x1C17E00
	351 Compare X0, 0
	352 JumpIfEqual {361}
	353 Move W8, [X19+24]
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move [X19+48], X20
	356 Call 0x1C17F20
	357 Call 0x1C17F28
	358 Move X0, X22
	359 Move X1, X23
	360 Call 0x1C181E0
	361 Call 0x1C17F44
	362 Move X1, X31
	363 Call 0x1C17DEC

Method: System.Int32 GetExecuteMode(System.Type klass)

Disassembly:
	0x03C32E50 B.LS 0x3C32E7C
	0x03C32E54 MOV X0, X21
	0x03C32E58 MOV X1, X20
	0x03C32E5C MOV X2, X31
	0x03C32E60 STR X19, [X20 + 0x38]
	0x03C32E64 BL 0x3227C5C
	0x03C32E68 LDP X20, X19, [X31 + 0x30]
	0x03C32E6C LDP X22, X21, [X31 + 0x20]
	0x03C32E70 LDP X30, X23, [X31 + 0x10]
	0x03C32E74 ADD X31, X31, 0x40
	0x03C32E78 RET
	0x03C32E7C BL 0x1C16F28
	0x03C32E80 BL 0x1C16F44
	0x03C32E84 MOV X1, X31
	0x03C32E88 BL 0x1C16DEC
	0x03C32E8C BL 0x1C16F20
	0x03C32E90 STR X30, [X31 - 0x20]!
	0x03C32E94 STP X20, X19, [X31 + 0x10]
	0x03C32E98 ADRP X20, 0x7B3000
	0x03C32E9C LDR X1, [X20 + 0x2D8]
	0x03C32EA0 MOV X19, X0
	0x03C32EA4 CBNZ X1, 0x3C32EBC
	0x03C32EA8 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C32EAC ADD X0, X0, 0x93C
	0x03C32EB0 BL 0x1C16CB8
	0x03C32EB4 MOV X1, X0
	0x03C32EB8 STR X0, [X20 + 0x2D8]
	0x03C32EBC MOV X0, X19
	0x03C32EC0 LDP X20, X19, [X31 + 0x10]
	0x03C32EC4 LDR X30, [X31], #0x20
	0x03C32EC8 BR X1
	0x03C32ECC STR X30, [X31 - 0x20]!
	0x03C32ED0 STP X20, X19, [X31 + 0x10]
	0x03C32ED4 ADRP X20, 0x7B3000
	0x03C32ED8 LDR X1, [X20 + 0x2E0]
	0x03C32EDC MOV X19, X0
	0x03C32EE0 CBNZ X1, 0x3C32EF8
	0x03C32EE4 ADRP X0, 0xFFFFFFFFFCEE2000
	0x03C32EE8 ADD X0, X0, 0xA3C
	0x03C32EEC BL 0x1C16CB8
	0x03C32EF0 MOV X1, X0
	0x03C32EF4 STR X0, [X20 + 0x2E0]
	0x03C32EF8 MOV X0, X19
	0x03C32EFC LDP X20, X19, [X31 + 0x10]
	0x03C32F00 LDR X30, [X31], #0x20
	0x03C32F04 BR X1
	0x03C32F08 STP X30, X21, [X31 - 0x20]!
	0x03C32F0C STP X20, X19, [X31 + 0x10]
	0x03C32F10 ADRP X21, 0x7B3000
	0x03C32F14 LDR X8, [X21 + 0x2E0]
	0x03C32F18 MOV X19, X1
	0x03C32F1C MOV X20, X0
	0x03C32F20 CBNZ X8, 0x3C32F38
	0x03C32F24 ADRP X0, 0xFFFFFFFFFCEE2000
	0x03C32F28 ADD X0, X0, 0xA3C
	0x03C32F2C BL 0x1C16CB8
	0x03C32F30 MOV X8, X0
	0x03C32F34 STR X0, [X21 + 0x2E0]
	0x03C32F38 MOV X0, X20
	0x03C32F3C BLR X8
	0x03C32F40 CBZ X0, 0x3C32F7C
	0x03C32F44 ADRP X21, 0x7B3000
	0x03C32F48 LDR X2, [X21 + 0x330]
	0x03C32F4C MOV X20, X0
	0x03C32F50 CBNZ X2, 0x3C32F68
	0x03C32F54 ADRP X0, 0xFFFFFFFFFCEC7000
	0x03C32F58 ADD X0, X0, 0x480
	0x03C32F5C BL 0x1C16CB8
	0x03C32F60 MOV X2, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B4000
	007 Move X20, 0x52E000
	008 Move X21, 0x4C2000
	009 Move W8, [X22+676]
	010 Move X20, [X20+896]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x52E000
	018 Move X0, [X0+896]
	019 Call 0x1C17CF4
	020 Move X0, 0x52E000
	021 Move X0, [X0+904]
	022 Call 0x1C17CF4
	023 Move X0, 0x4C2000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+676], W8
	028 Move X0, [X21]
	029 Move X20, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call Type.GetTypeFromHandle, X0
	037 Compare X19, 0
	038 JumpIfEqual {81}
	039 Move X8, [X19]
	040 Move X1, X0
	041 Move X0, X19
	042 Move W2, W31
	043 Move X9, [X8+520]
	044 Move X3, [X8+528]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X0, 0
	047 JumpIfEqual {81}
	048 Move W8, [X0+24]
	049 Compare W8, 0
	050 JumpIfEqual {52}
	051 Move W0, 2
	052 Move X8, 0x52E000
	053 Move X0, [X21]
	054 Move X8, [X8+904]
	055 Move W9, [X0+224]
	056 Move X20, [X8]
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X20
	061 Move X1, X31
	062 Call Type.GetTypeFromHandle, X0
	063 Move X8, [X19]
	064 Move X1, X0
	065 Move X0, X19
	066 Move W2, W31
	067 Move X9, [X8+520]
	068 Move X3, [X8+528]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X0, 0
	071 JumpIfEqual {81}
	072 Move W8, [X0+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSET not yet implemented."
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return X0
	081 Call 0x1C17F20

Method: System.Int32 CheckIsEditorScript(System.Type klass)

Disassembly:
	0x03C32F64 STR X0, [X21 + 0x330]
	0x03C32F68 MOV X0, X20
	0x03C32F6C MOV X1, X19
	0x03C32F70 LDP X20, X19, [X31 + 0x10]
	0x03C32F74 LDP X30, X21, [X31], #0x20
	0x03C32F78 BR X2
	0x03C32F7C BL 0x1C16F20
	0x03C32F80 STP X30, X21, [X31 - 0x20]!
	0x03C32F84 STP X20, X19, [X31 + 0x10]
	0x03C32F88 ADRP X21, 0x7B3000
	0x03C32F8C LDR X2, [X21 + 0x330]
	0x03C32F90 MOV X19, X1
	0x03C32F94 MOV X20, X0
	0x03C32F98 CBNZ X2, 0x3C32FB0
	0x03C32F9C ADRP X0, 0xFFFFFFFFFCEC7000
	0x03C32FA0 ADD X0, X0, 0x480
	0x03C32FA4 BL 0x1C16CB8
	0x03C32FA8 MOV X2, X0
	0x03C32FAC STR X0, [X21 + 0x330]
	0x03C32FB0 MOV X0, X20
	0x03C32FB4 MOV X1, X19
	0x03C32FB8 LDP X20, X19, [X31 + 0x10]
	0x03C32FBC LDP X30, X21, [X31], #0x20
	0x03C32FC0 BR X2
	0x03C32FC4 STR X30, [X31 - 0x30]!
	0x03C32FC8 STP X22, X21, [X31 + 0x10]
	0x03C32FCC STP X20, X19, [X31 + 0x20]
	0x03C32FD0 ADRP X22, 0x7B3000
	0x03C32FD4 LDR X3, [X22 + 0x2E8]
	0x03C32FD8 MOV X19, X2
	0x03C32FDC MOV X20, X1
	0x03C32FE0 MOV X21, X0
	0x03C32FE4 CBNZ X3, 0x3C32FFC
	0x03C32FE8 ADRP X0, 0xFFFFFFFFFCECD000
	0x03C32FEC ADD X0, X0, 0x289
	0x03C32FF0 BL 0x1C16CB8
	0x03C32FF4 MOV X3, X0
	0x03C32FF8 STR X0, [X22 + 0x2E8]
	0x03C32FFC MOV X0, X21
	0x03C33000 MOV X1, X20
	0x03C33004 MOV X2, X19
	0x03C33008 LDP X20, X19, [X31 + 0x20]
	0x03C3300C LDP X22, X21, [X31 + 0x10]
	0x03C33010 LDR X30, [X31], #0x30
	0x03C33014 BR X3
	0x03C33018 STR X30, [X31 - 0x30]!
	0x03C3301C STP X22, X21, [X31 + 0x10]
	0x03C33020 STP X20, X19, [X31 + 0x20]
	0x03C33024 ADRP X22, 0x7B2000
	0x03C33028 LDR X8, [X22 + 0x2E0]
	0x03C3302C MOV X19, X2
	0x03C33030 MOV X20, X1
	0x03C33034 MOV X21, X0
	0x03C33038 CBNZ X8, 0x3C33050
	0x03C3303C ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C33040 ADD X0, X0, 0xA3C
	0x03C33044 BL 0x1C16CB8
	0x03C33048 MOV X8, X0
	0x03C3304C STR X0, [X22 + 0x2E0]
	0x03C33050 MOV X0, X21
	0x03C33054 BLR X8
	0x03C33058 CBZ X0, 0x3C33074
	0x03C3305C MOV X1, X20
	0x03C33060 MOV X2, X19
	0x03C33064 LDP X20, X19, [X31 + 0x20]
	0x03C33068 LDP X22, X21, [X31 + 0x10]
	0x03C3306C LDR X30, [X31], #0x30
	0x03C33070 B 0x3C33078

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x7B4000
	008 Move X21, 0x4C2000
	009 Move X22, 0x52E000
	010 Move X23, 0x52E000
	011 Move W8, [X20+677]
	012 Move X21, [X21+1728]
	013 Move X22, [X22+872]
	014 Move X23, [X23+912]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x52E000
	021 Move X0, [X0+912]
	022 Call 0x1C17CF4
	023 Move X0, 0x52E000
	024 Move X0, [X0+872]
	025 Call 0x1C17CF4
	026 Move X0, 0x4C2000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+677], W8
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Move X2, X31
	039 Call Type.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {77}
	044 Move X0, [X21]
	045 Move X20, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Call Type.GetTypeFromHandle, X0
	053 Move X1, X0
	054 Move X0, X19
	055 Move X2, X31
	056 Call Type.op_Inequality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {77}
	061 Move X0, [X23]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Call AttributeHelperEngine.GetExecuteMode, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Compare X19, 0
	070 JumpIfEqual {85}
	071 Move X8, [X19]
	072 Move X0, X19
	073 Move X9, [X8+2072]
	074 Move X1, [X8+2080]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X19, X0
	077 Move W0, W31
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]
	084 Return X0
	085 Call 0x1C17F20

Method: System.Int32 GetDefaultExecutionOrderFor(System.Type klass)

Disassembly:
	0x03C33074 BL 0x1C16F20
	0x03C33078 STP X30, X23, [X31 - 0x30]!
	0x03C3307C STP X22, X21, [X31 + 0x10]
	0x03C33080 STP X20, X19, [X31 + 0x20]
	0x03C33084 ADRP X22, 0x7B2000
	0x03C33088 LDRB W8, [X22 + 0x358]
	0x03C3308C MOV X19, X2
	0x03C33090 MOV X20, X1
	0x03C33094 MOV X21, X0
	0x03C33098 TBNZ X8, 0x0, 0x3C330B0
	0x03C3309C ADRP X0, 0x4C0000
	0x03C330A0 LDR X0, [X0 + 0x598]
	0x03C330A4 BL 0x1C16CF4
	0x03C330A8 MOVZ W8, 0x1
	0x03C330AC STRB W8, [X22 + 0x358]
	0x03C330B0 ADRP X23, 0x7B2000
	0x03C330B4 ADRP X22, 0x4C0000
	0x03C330B8 LDR X8, [X23 + 0x360]
	0x03C330BC LDR X22, [X22 + 0x598]
	0x03C330C0 CBNZ X8, 0x3C330D8
	0x03C330C4 ADRP X0, 0xFFFFFFFFFCED4000
	0x03C330C8 ADD X0, X0, 0x21E
	0x03C330CC BL 0x1C16CB8
	0x03C330D0 MOV X8, X0
	0x03C330D4 STR X0, [X23 + 0x360]
	0x03C330D8 MOV X0, X21
	0x03C330DC MOV X1, X20
	0x03C330E0 BLR X8
	0x03C330E4 STR X0, [X19]
	0x03C330E8 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B3000
	006 Move X20, 0x52D000
	007 Move W8, [X21+678]
	008 Move X20, [X20+912]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x52D000
	015 Move X0, [X0+920]
	016 Call 0x1C17CF4
	017 Move X0, 0x52D000
	018 Move X0, [X0+912]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+678], W8
	022 Move X0, [X20]
	023 Move X20, 0x52D000
	024 Move W8, [X0+224]
	025 Move X20, [X20+920]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x219D760, X0
	032 Compare X0, 0
	033 JumpIfEqual {35}
	034 Move W0, [X0+16]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: T GetCustomAttributeOfType(System.Type klass)

Disassembly:
	0x0219D760 BL 0x1C5C6E0
	0x0219D764 LDR X20, [X22 + 0x38]
	0x0219D768 LDR X8, [X20 + 0x10]
	0x0219D76C LDR W23, [X8 + 0xFC]
	0x0219D770 ADD X8, X31, 0x0
	0x0219D774 ADD X9, X23, 0xF
	0x0219D778 AND X9, X9, 0x1FFFFFFFF
	0x0219D77C SUB X24, X8, X9
	0x0219D780 ADD X31, X24, 0x0
	0x0219D784 ADD X8, X31, 0x0
	0x0219D788 SUB X8, X8, X9
	0x0219D78C STUR X8, [X29 - 0x18]
	0x0219D790 ADD X31, X8, 0x0
	0x0219D794 ADD X8, X31, 0x0
	0x0219D798 SUB X8, X8, X9
	0x0219D79C STUR X8, [X29 - 0x30]
	0x0219D7A0 ADD X31, X8, 0x0
	0x0219D7A4 ADD X8, X31, 0x0
	0x0219D7A8 SUB X0, X8, X9
	0x0219D7AC ADD X31, X0, 0x0
	0x0219D7B0 MOV W1, W31
	0x0219D7B4 MOV X2, X23
	0x0219D7B8 STUR X0, [X29 - 0x20]
	0x0219D7BC BL 0x3EB1B10
	0x0219D7C0 SUBS W8, W28, W27
	0x0219D7C4 STUR W8, [X29 - 0x38]
	0x0219D7C8 B.NE 0x219D7F8
	0x0219D7CC LDR X7, [X20 + 0x8]
	0x0219D7D0 LDUR W1, [X29 - 0xC]
	0x0219D7D4 LDP W2, W5, [X29 - 0x28]
	0x0219D7D8 MOV X0, X21
	0x0219D7DC LDR X8, [X7]
	0x0219D7E0 MOV X3, X19
	0x0219D7E4 MOV W4, W26
	0x0219D7E8 MOV W6, W28
	0x0219D7EC BLR X8
	0x0219D7F0 LDR X8, [X25 + 0x28]
	0x0219D7F4 B 0x219DC70
	0x0219D7F8 CMP W27, 0x1
	0x0219D7FC STUR X25, [X29 - 0x40]
	0x0219D800 B.NE 0x219D97C
	0x0219D804 CMP W28, 0x2
	0x0219D808 B.NE 0x219D97C
	0x0219D80C LDUR W9, [X29 - 0x24]
	0x0219D810 CMP W9, 0x0
	0x0219D814 CINC W8, W9, LT
	0x0219D818 CMP W9, 0x2
	0x0219D81C B.LT 0x219DC68
	0x0219D820 CBZ X21, 0x219DCA0
	0x0219D824 SBFM W20, W8, 0x1, 0x1F
	0x0219D828 LDUR W8, [X29 - 0x28]
	0x0219D82C MOV W27, W31
	0x0219D830 UBFM W8, W8, 0x1F, 0x1E
	0x0219D834 STUR W8, [X29 - 0x34]
	0x0219D838 LDUR W8, [X29 - 0x24]
	0x0219D83C LDUR W10, [X29 - 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {19}
	010 Move X0, 0x1F57000
	011 Move X0, [X0+1728]
	012 Call 0x1C17CF4
	013 Move X8, [X19+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move X8, [X19+56]
	019 Move X9, 0x1F57000
	020 Move X9, [X9+1728]
	021 Move X21, [X8]
	022 Move X0, [X9]
	023 Move W9, [X0+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Call Type.GetTypeFromHandle, X0
	030 Compare X20, 0
	031 JumpIfEqual {71}
	032 Move X8, [X20]
	033 Move X1, X0
	034 Move W2, 1
	035 Move X0, X20
	036 Move X9, [X8+520]
	037 Move X3, [X8+528]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {66}
	041 Move W8, [X0+24]
	042 Compare W8, 0
	043 JumpIfEqual {65}
	044 Move X8, [X19+56]
	045 Move X20, [X0+32]
	046 Move X19, [X8+8]
	047 Move W8, [X19+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {55}
	052 Move X0, X19
	053 Call 0x1C5D684
	054 Move X19, X0
	055 Compare X20, 0
	056 JumpIfEqual {65}
	057 Move X0, X20
	058 Move X1, X19
	059 Call 0x1C17E00
	060 Compare X0, 0
	061 JumpIfNotEqual {66}
	062 Move X0, X20
	063 Move X1, X19
	064 Call 0x1C181E0
	065 Move X0, X31
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return X0
	071 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03C330F4 CBNZ W8, 0x3C330FC
	0x03C330F8 BL 0x1C16DFC
	0x03C330FC MOV X0, X20
	0x03C33100 LDP X20, X19, [X31 + 0x20]
	0x03C33104 LDP X22, X21, [X31 + 0x10]
	0x03C33108 MOV X1, X31
	0x03C3310C LDP X30, X23, [X31], #0x30
	0x03C33110 B 0x3C354F8
	0x03C33114 STR X30, [X31 - 0x30]!
	0x03C33118 STP X22, X21, [X31 + 0x10]
	0x03C3311C STP X20, X19, [X31 + 0x20]
	0x03C33120 ADRP X22, 0x7B2000
	0x03C33124 LDR X8, [X22 + 0x2E0]
	0x03C33128 MOV W20, W2
	0x03C3312C MOV X19, X1
	0x03C33130 MOV X21, X0
	0x03C33134 CBNZ X8, 0x3C3314C
	0x03C33138 ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C3313C ADD X0, X0, 0xA3C
	0x03C33140 BL 0x1C16CB8
	0x03C33144 MOV X8, X0
	0x03C33148 STR X0, [X22 + 0x2E0]
	0x03C3314C MOV X0, X21
	0x03C33150 BLR X8
	0x03C33154 CBZ X0, 0x3C33198
	0x03C33158 ADRP X22, 0x7B2000
	0x03C3315C LDR X3, [X22 + 0x340]
	0x03C33160 MOV X21, X0
	0x03C33164 CBNZ X3, 0x3C3317C
	0x03C33168 ADRP X0, 0xFFFFFFFFFCEDE000
	0x03C3316C ADD X0, X0, 0xBC
	0x03C33170 BL 0x1C16CB8
	0x03C33174 MOV X3, X0
	0x03C33178 STR X0, [X22 + 0x340]
	0x03C3317C AND W2, W20, 0x1
	0x03C33180 MOV X0, X21
	0x03C33184 MOV X1, X19
	0x03C33188 LDP X20, X19, [X31 + 0x20]
	0x03C3318C LDP X22, X21, [X31 + 0x10]
	0x03C33190 LDR X30, [X31], #0x30
	0x03C33194 BR X3
	0x03C33198 BL 0x1C16F20
	0x03C3319C STR X30, [X31 - 0x30]!
	0x03C331A0 STP X22, X21, [X31 + 0x10]
	0x03C331A4 STP X20, X19, [X31 + 0x20]
	0x03C331A8 ADRP X22, 0x7B2000
	0x03C331AC LDR X3, [X22 + 0x340]
	0x03C331B0 MOV W20, W2
	0x03C331B4 MOV X19, X1
	0x03C331B8 MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x7B3000
	008 Move X23, 0x52D000
	009 Move X19, 0x52D000
	010 Move X21, 0x52D000
	011 Move X20, 0x52D000
	012 Move W8, [X22+679]
	013 Move X23, [X23+928]
	014 Move X19, [X19+912]
	015 Move X21, [X21+936]
	016 Move X20, [X20+880]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x52D000
	022 Move X0, [X0+912]
	023 Call 0x1C17CF4
	024 Move X0, 0x52D000
	025 Move X0, [X0+928]
	026 Call 0x1C17CF4
	027 Move X0, 0x52D000
	028 Move X0, [X0+936]
	029 Call 0x1C17CF4
	030 Move X0, 0x52D000
	031 Move X0, [X0+880]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+679], W8
	035 Move X0, [X23]
	036 Move W1, 1
	037 Call 0x1C17D6C
	038 Move X8, [X19]
	039 Move W1, 1
	040 Move X8, [X8+184]
	041 Move [X8], X0
	042 Move X0, [X21]
	043 Call 0x1C17D6C
	044 Move X8, [X19]
	045 Move W1, 1
	046 Move X8, [X8+184]
	047 Move [X8+8], X0
	048 Move X0, [X20]
	049 Call 0x1C17D6C
	050 Move X8, [X19]
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X8, [X8+184]
	056 Move [X8+16], X0
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Return 

