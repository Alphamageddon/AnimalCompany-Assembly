Type: UnityEngine.U2D.SpriteDataAccessExtensions

Method: System.Void CheckAttributeTypeMatchesAndThrow(UnityEngine.Rendering.VertexAttribute channel)

Disassembly:
	0x0225A9E0 MOV X22, X0
	0x0225A9E4 CBNZ X8, 0x225A9F8
	0x0225A9E8 MOV X0, X4
	0x0225A9EC MOV X23, X4
	0x0225A9F0 BL 0x1C5C6E0
	0x0225A9F4 LDR X8, [X23 + 0x38]
	0x0225A9F8 LDR X5, [X8 + 0x8]
	0x0225A9FC MOV X0, X22
	0x0225AA00 MOV X1, X21
	0x0225AA04 MOV X3, X20
	0x0225AA08 MOV W4, W19
	0x0225AA0C LDP X20, X19, [X31 + 0x20]
	0x0225AA10 LDP X22, X21, [X31 + 0x10]
	0x0225AA14 MOVZ W2, 0x2
	0x0225AA18 LDP X30, X23, [X31], #0x30
	0x0225AA1C B 0x225D878
	0x0225AA20 STP X30, X23, [X31 - 0x30]!
	0x0225AA24 STP X22, X21, [X31 + 0x10]
	0x0225AA28 STP X20, X19, [X31 + 0x20]
	0x0225AA2C LDR X8, [X4 + 0x38]
	0x0225AA30 MOV W19, W3
	0x0225AA34 MOV W20, W2
	0x0225AA38 MOV X21, X1
	0x0225AA3C MOV X22, X0
	0x0225AA40 CBNZ X8, 0x225AA54
	0x0225AA44 MOV X0, X4
	0x0225AA48 MOV X23, X4
	0x0225AA4C BL 0x1C5C6E0
	0x0225AA50 LDR X8, [X23 + 0x38]
	0x0225AA54 LDR X5, [X8 + 0x8]
	0x0225AA58 MOV X0, X22
	0x0225AA5C MOV X1, X21
	0x0225AA60 MOV W3, W20
	0x0225AA64 MOV W4, W19
	0x0225AA68 LDP X20, X19, [X31 + 0x20]
	0x0225AA6C LDP X22, X21, [X31 + 0x10]
	0x0225AA70 MOVZ W2, 0x2
	0x0225AA74 LDP X30, X23, [X31], #0x30
	0x0225AA78 B 0x225E674
	0x0225AA7C STP X30, X23, [X31 - 0x30]!
	0x0225AA80 STP X22, X21, [X31 + 0x10]
	0x0225AA84 STP X20, X19, [X31 + 0x20]
	0x0225AA88 LDR X8, [X4 + 0x38]
	0x0225AA8C MOV W19, W3
	0x0225AA90 MOV W20, W2
	0x0225AA94 MOV X21, X1
	0x0225AA98 MOV X22, X0
	0x0225AA9C CBNZ X8, 0x225AAB0
	0x0225AAA0 MOV X0, X4
	0x0225AAA4 MOV X23, X4
	0x0225AAA8 BL 0x1C5C6E0
	0x0225AAAC LDR X8, [X23 + 0x38]
	0x0225AAB0 LDR X5, [X8 + 0x8]
	0x0225AAB4 MOV X0, X22
	0x0225AAB8 MOV X1, X21
	0x0225AABC MOV W3, W20
	0x0225AAC0 MOV W4, W19
	0x0225AAC4 LDP X20, X19, [X31 + 0x20]
	0x0225AAC8 LDP X22, X21, [X31 + 0x10]
	0x0225AACC MOVZ W2, 0x2
	0x0225AAD0 LDP X30, X23, [X31], #0x30
	0x0225AAD4 B 0x225E674
	0x0225AAD8 STP X30, X23, [X31 - 0x30]!
	0x0225AADC STP X22, X21, [X31 + 0x10]
	0x0225AAE0 STP X20, X19, [X31 + 0x20]
	0x0225AAE4 LDR X8, [X4 + 0x38]
	0x0225AAE8 MOV W19, W3
	0x0225AAEC MOV W20, W2
	0x0225AAF0 MOV X21, X1
	0x0225AAF4 MOV X22, X0
	0x0225AAF8 CBNZ X8, 0x225AB0C
	0x0225AAFC MOV X0, X4
	0x0225AB00 MOV X23, X4
	0x0225AB04 BL 0x1C5C6E0
	0x0225AB08 LDR X8, [X23 + 0x38]
	0x0225AB0C LDR X5, [X8 + 0x8]
	0x0225AB10 MOV X0, X22
	0x0225AB14 MOV X1, X21
	0x0225AB18 MOV W3, W20
	0x0225AB1C MOV W4, W19
	0x0225AB20 LDP X20, X19, [X31 + 0x20]
	0x0225AB24 LDP X22, X21, [X31 + 0x10]
	0x0225AB28 MOVZ W2, 0x2
	0x0225AB2C LDP X30, X23, [X31], #0x30
	0x0225AB30 B 0x225F470
	0x0225AB34 STP X30, X23, [X31 - 0x30]!
	0x0225AB38 STP X22, X21, [X31 + 0x10]
	0x0225AB3C STP X20, X19, [X31 + 0x20]
	0x0225AB40 LDR X8, [X4 + 0x38]
	0x0225AB44 MOV W19, W3
	0x0225AB48 MOV X20, X2
	0x0225AB4C MOV X21, X1
	0x0225AB50 MOV X22, X0
	0x0225AB54 CBNZ X8, 0x225AB68
	0x0225AB58 MOV X0, X4
	0x0225AB5C MOV X23, X4
	0x0225AB60 BL 0x1C5C6E0
	0x0225AB64 LDR X8, [X23 + 0x38]
	0x0225AB68 LDR X5, [X8 + 0x8]
	0x0225AB6C MOV X0, X22
	0x0225AB70 MOV X1, X21
	0x0225AB74 MOV X3, X20
	0x0225AB78 MOV W4, W19
	0x0225AB7C LDP X20, X19, [X31 + 0x20]
	0x0225AB80 LDP X22, X21, [X31 + 0x10]
	0x0225AB84 MOVZ W2, 0x2
	0x0225AB88 LDP X30, X23, [X31], #0x30
	0x0225AB8C B 0x226026C
	0x0225AB90 STP X30, X23, [X31 - 0x30]!
	0x0225AB94 STP X22, X21, [X31 + 0x10]
	0x0225AB98 STP X20, X19, [X31 + 0x20]
	0x0225AB9C LDR X8, [X4 + 0x38]
	0x0225ABA0 MOV W19, W3
	0x0225ABA4 MOV X20, X2
	0x0225ABA8 MOV X21, X1
	0x0225ABAC MOV X22, X0
	0x0225ABB0 CBNZ X8, 0x225ABC4
	0x0225ABB4 MOV X0, X4
	0x0225ABB8 MOV X23, X4
	0x0225ABBC BL 0x1C5C6E0
	0x0225ABC0 LDR X8, [X23 + 0x38]
	0x0225ABC4 LDR X5, [X8 + 0x8]
	0x0225ABC8 MOV X0, X22
	0x0225ABCC MOV X1, X21
	0x0225ABD0 MOV X3, X20
	0x0225ABD4 MOV W4, W19
	0x0225ABD8 LDP X20, X19, [X31 + 0x20]
	0x0225ABDC LDP X22, X21, [X31 + 0x10]
	0x0225ABE0 MOVZ W2, 0x2
	0x0225ABE4 LDP X30, X23, [X31], #0x30
	0x0225ABE8 B 0x226026C
	0x0225ABEC STR D8, [X31 - 0x30]!
	0x0225ABF0 STR X30, [X31 + 0x8]
	0x0225ABF4 STP X22, X21, [X31 + 0x10]
	0x0225ABF8 STP X20, X19, [X31 + 0x20]
	0x0225ABFC LDR X8, [X3 + 0x38]
	0x0225AC00 MOV W19, W2
	0x0225AC04 MOV V8.16B, V0.16B
	0x0225AC08 MOV X20, X1
	0x0225AC0C MOV X21, X0
	0x0225AC10 CBNZ X8, 0x225AC24
	0x0225AC14 MOV X0, X3
	0x0225AC18 MOV X22, X3
	0x0225AC1C BL 0x1C5C6E0
	0x0225AC20 LDR X8, [X22 + 0x38]
	0x0225AC24 LDR X4, [X8 + 0x8]
	0x0225AC28 MOV X0, X21
	0x0225AC2C MOV X1, X20
	0x0225AC30 MOV W3, W19
	0x0225AC34 LDP X20, X19, [X31 + 0x20]
	0x0225AC38 LDP X22, X21, [X31 + 0x10]
	0x0225AC3C LDR X30, [X31 + 0x8]
	0x0225AC40 MOVZ W2, 0x2
	0x0225AC44 MOV V0.16B, V8.16B
	0x0225AC48 LDR V8, [X31], #0x30
	0x0225AC4C B 0x226104C
	0x0225AC50 STP X29, X30, [X31 - 0x50]!
	0x0225AC54 STR X25, [X31 + 0x10]
	0x0225AC58 STP X24, X23, [X31 + 0x20]
	0x0225AC5C STP X22, X21, [X31 + 0x30]
	0x0225AC60 STP X20, X19, [X31 + 0x40]
	0x0225AC64 ADD X29, X31, 0x0
	0x0225AC68 SUB X31, X31, 0x40
	0x0225AC6C MRS X24, 0xC000
	0x0225AC70 LDR X8, [X24 + 0x28]
	0x0225AC74 MOV W21, W3
	0x0225AC78 MOV X23, X2
	0x0225AC7C MOV X20, X1
	0x0225AC80 STUR X8, [X29 - 0x8]
	0x0225AC84 STUR X2, [X29 - 0x38]
	0x0225AC88 LDR X25, [X4 + 0x38]
	0x0225AC8C MOV X19, X0
	0x0225AC90 CBNZ X25, 0x225ACA4
	0x0225AC94 MOV X0, X4
	0x0225AC98 MOV X22, X4
	0x0225AC9C BL 0x1C5C6E0
	0x0225ACA0 LDR X25, [X22 + 0x38]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move W20, W0
	009 Compare X8, 0
	010 JumpIfNotEqual {34}
	011 Move X0, 0x1EC3000
	012 Move X0, [X0+1280]
	013 Call 0x1C17CF4
	014 Move X0, 0x1EC3000
	015 Move X0, [X0+1288]
	016 Call 0x1C17CF4
	017 Move X0, 0x1E9A000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move X0, 0x1EA2000
	021 Move X0, [X0+3744]
	022 Call 0x1C17CF4
	023 Move X0, 0x1EA2000
	024 Move X0, [X0+3832]
	025 Call 0x1C17CF4
	026 Move X0, 0x1EC3000
	027 Move X0, [X0+1296]
	028 Call 0x1C17CF4
	029 Move X8, [X19+56]
	030 Compare X8, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X19
	033 Call 0x1C5D6E0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X9, -24297472
	036 Move W8, W20
	037 Add X9, X9, 3214
	038 NotImplemented "Instruction ADR not yet implemented."
	039 Move W11, [X9]
	040 Add X10, X10, X11
	041 CallNoReturn X10
	042 Move X8, 0x1E9A000
	043 Move X8, [X8+1728]
	044 Move X0, [X8]
	045 Move X8, [X19+56]
	046 Move W9, [X0+224]
	047 Move X21, [X8]
	048 Compare W9, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Call Type.GetTypeFromHandle, X0
	054 Move X8, 0x1EA2000
	055 Move X8, [X8+3744]
	056 Move X8, [X8]
	057 Move X21, X0
	058 Move X1, X31
	059 Move X0, X8
	060 Call Type.GetTypeFromHandle, X0
	061 Move X1, X0
	062 Move X0, X21
	063 Move X2, X31
	064 Call Type.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {131}
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X30, [X31+16]
	072 Move X21, [X31+24]
	073 Add X31, X31, 48
	074 Return 
	075 Move X8, 0x1E9A000
	076 Move X8, [X8+1728]
	077 Move X0, [X8]
	078 Move X8, [X19+56]
	079 Move W9, [X0+224]
	080 Move X21, [X8]
	081 Compare W9, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X21
	085 Move X1, X31
	086 Call Type.GetTypeFromHandle, X0
	087 Move X8, 0x1EA2000
	088 Move X8, [X8+3832]
	089 Move X8, 0x1E9A000
	090 Move X8, [X8+1728]
	091 Move X0, [X8]
	092 Move X8, [X19+56]
	093 Move W9, [X0+224]
	094 Move X21, [X8]
	095 Compare W9, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X21
	099 Move X1, X31
	100 Call Type.GetTypeFromHandle, X0
	101 Move X8, 0x1EC3000
	102 Move X8, [X8+1296]
	103 Move X8, 0x1E9A000
	104 Move X8, [X8+1728]
	105 Move X0, [X8]
	106 Move X8, [X19+56]
	107 Move W9, [X0+224]
	108 Move X21, [X8]
	109 Compare W9, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X21
	113 Move X1, X31
	114 Call Type.GetTypeFromHandle, X0
	115 Move X8, 0x1EC3000
	116 Move X8, [X8+1288]
	117 Move X8, 0x1E9A000
	118 Move X8, [X8+1728]
	119 Move X0, [X8]
	120 Move X8, [X19+56]
	121 Move W9, [X0+224]
	122 Move X21, [X8]
	123 Compare W9, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X0, X21
	127 Move X1, X31
	128 Call Type.GetTypeFromHandle, X0
	129 Move X8, 0x1EC3000
	130 Move X8, [X8+1280]
	131 Move [X31+8], W20
	132 Move X0, 0x1EC3000
	133 Move X0, [X0+1304]
	134 Call 0x1C17D08
	135 Add X1, X31, 8
	136 Call 0x1C17E04
	137 Move X8, [X19+56]
	138 Move X21, X0
	139 Move X0, 0x1E9A000
	140 Move X20, [X8]
	141 Move X0, [X0+1728]
	142 Call 0x1C17D08
	143 Call 0x19913D0
	144 Move X0, X20
	145 Move X1, X31
	146 Call Type.GetTypeFromHandle, X0
	147 Move X20, X0
	148 Call 0x19913C0
	149 Move X8, [X20]
	150 Move X0, X20
	151 Move X9, [X8+424]
	152 Move X1, [X8+432]
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X20, X0
	155 Move X0, 0x1EC3000
	156 Move X0, [X0+1312]
	157 Call 0x1C17D08
	158 Move X1, X21
	159 Move X2, X20
	160 Move X3, X31
	161 Call String.Format, X0, X1, X2
	162 Move X20, X0
	163 Move X0, 0x1E9A000
	164 Move X0, [X0+1456]
	165 Call 0x1C17D08
	166 Call 0x1C17F10
	167 Move X1, X20
	168 Move X2, X31
	169 Move X21, X0
	170 Call InvalidOperationException..ctor, X0, X1
	171 Move X0, X21
	172 Move X1, X19
	173 Call 0x1C17DEC
	174 Move [X31+12], W20
	175 Move X0, 0x1EC3000
	176 Move X0, [X0+1304]
	177 Call 0x1C17D08
	178 Add X1, X31, 12
	179 Call 0x1C17E04
	180 Move X20, X0
	181 Move X0, 0x1EC3000
	182 Move X0, [X0+1320]
	183 Call 0x1C17D08
	184 Move X1, X20
	185 Move X2, X31
	186 Call String.Format, X0, X1

Method: Unity.Collections.NativeSlice`1<T> GetVertexAttribute(UnityEngine.Sprite sprite, UnityEngine.Rendering.VertexAttribute channel)

Disassembly:
	0x0225B22C STRB W28, [X31 + 0x48]
	0x0225B230 LDR X8, [X24 + 0x38]
	0x0225B234 LDR X0, [X8]
	0x0225B238 ADD X1, X31, 0x48
	0x0225B23C BL 0x1C16E04
	0x0225B240 MOV X1, X0
	0x0225B244 MOV X0, X26
	0x0225B248 MOV X2, X31
	0x0225B24C BL 0x33CB4B0
	0x0225B250 TBZ X0, 0x0, 0x225B1F0
	0x0225B254 LDRB W8, [X25 + 0x38]
	0x0225B258 CBNZ W8, 0x225B2CC
	0x0225B25C LDR X0, [X25 + 0x58]
	0x0225B260 CBZ X0, 0x225B910
	0x0225B264 LDR W10, [X0 + 0x1C]
	0x0225B268 LDR X8, [X0 + 0x10]
	0x0225B26C LDR X9, [X27]
	0x0225B270 ADD W10, W10, 0x1
	0x0225B274 STR W10, [X0 + 0x1C]
	0x0225B278 CBZ X8, 0x225B914
	0x0225B27C LDRSW X10, [X0 + 0x18]
	0x0225B280 LDR W11, [X8 + 0x18]
	0x0225B284 CMP W10, W11
	0x0225B288 B.CS 0x225B2A0
	0x0225B28C ADD W9, W10, 0x1
	0x0225B290 ADD X8, X8, X10, 0x3, LSL
	0x0225B294 STR W9, [X0 + 0x18]
	0x0225B298 STR X23, [X8 + 0x20]
	0x0225B29C B 0x225B2B4
	0x0225B2A0 LDR X8, [X9 + 0x20]
	0x0225B2A4 LDR X8, [X8 + 0xC0]
	0x0225B2A8 LDR X2, [X8 + 0x70]
	0x0225B2AC MOV X1, X23
	0x0225B2B0 BL 0x301BF90
	0x0225B2B4 LDR X0, [X20 + 0x40]
	0x0225B2B8 CBZ X0, 0x225B90C
	0x0225B2BC LDR X2, [X22]
	0x0225B2C0 MOV X1, X25
	0x0225B2C4 BL 0x25F7234
	0x0225B2C8 B 0x225B1F0
	0x0225B2CC LDR X0, [X31 + 0x40]
	0x0225B2D0 CBNZ X0, 0x225B2E4
	0x0225B2D4 MOV X0, X20
	0x0225B2D8 MOV X1, X31
	0x0225B2DC BL 0x35C7A64
	0x0225B2E0 CBZ X0, 0x225B9EC
	0x0225B2E4 LDR X2, [X22]
	0x0225B2E8 MOV X1, X25
	0x0225B2EC STR X0, [X31 + 0x40]
	0x0225B2F0 BL 0x25F7234

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move W20, W1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {15}
	012 Move X0, X19
	013 Call 0x1C5D6E0
	014 Move X8, [X19+56]
	015 Move [X31+32], X31
	016 Move [X31+40], X31
	017 Move [X31+48], X31
	018 Move X1, [X8]
	019 Move W0, W20
	020 Call 0x225A9E0, X0
	021 Add X8, X31, 8
	022 Move X0, X21
	023 Move W1, W20
	024 Move X2, X31
	025 Call SpriteDataAccessExtensions.GetChannelInfo, X0, X1
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 Move X8, [X31+24]
	028 Add X0, X31, 32
	029 Move X1, X31
	030 Move [X31+2], V0
	031 Move [X31+48], X8
	032 Call SpriteChannelInfo.get_buffer, X0
	033 Move X20, X0
	034 Add X0, X31, 32
	035 Move X1, X31
	036 Call SpriteChannelInfo.get_offset, X0
	037 Add X20, X20, W0
	038 Add X0, X31, 32
	039 Move X1, X31
	040 Call SpriteChannelInfo.get_stride, X0
	041 Move W21, W0
	042 Add X0, X31, 32
	043 Move X1, X31
	044 Call SpriteChannelInfo.get_count, X0
	045 Move X8, [X19+56]
	046 Move W2, W0
	047 Move X0, X20
	048 Move W1, W21
	049 Move X3, [X8+8]
	050 Call NativeSliceUnsafeUtility.ConvertExistingDataToNativeSlice, X0, X1, X2
	051 Move X20, [X31+80]
	052 Move X19, [X31+88]
	053 Move X30, [X31+64]
	054 Move X21, [X31+72]
	055 Add X31, X31, 96
	056 Return X0

Method: Unity.Collections.NativeArray`1<System.UInt16> GetIndices(UnityEngine.Sprite sprite)

Disassembly:
	0x03C43694 STP X20, X19, [X31 + 0x20]
	0x03C43698 ADRP X22, 0x7A2000
	0x03C4369C LDR X8, [X22 + 0xB88]
	0x03C436A0 MOV X19, X2
	0x03C436A4 MOV W20, W1
	0x03C436A8 MOV W21, W0
	0x03C436AC CBNZ X8, 0x3C436C4
	0x03C436B0 ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C436B4 ADD X0, X0, 0xF19
	0x03C436B8 BL 0x1C16CB8
	0x03C436BC MOV X8, X0
	0x03C436C0 STR X0, [X22 + 0xB88]
	0x03C436C4 MOV W0, W21
	0x03C436C8 MOV W1, W20
	0x03C436CC BLR X8
	0x03C436D0 STR X0, [X19]
	0x03C436D4 LDP X20, X19, [X31 + 0x20]
	0x03C436D8 LDP X22, X21, [X31 + 0x10]
	0x03C436DC MOVZ W1, 0x7
	0x03C436E0 MOV W2, W31
	0x03C436E4 MOV X3, X31
	0x03C436E8 LDR X30, [X31], #0x30
	0x03C436EC B 0x3BFFF0C
	0x03C436F0 STP X30, X21, [X31 - 0x20]!
	0x03C436F4 STP X20, X19, [X31 + 0x10]
	0x03C436F8 ADRP X21, 0x7A2000
	0x03C436FC LDR X2, [X21 + 0xB88]
	0x03C43700 MOV W19, W1
	0x03C43704 MOV W20, W0
	0x03C43708 CBNZ X2, 0x3C43720
	0x03C4370C ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C43710 ADD X0, X0, 0xF19
	0x03C43714 BL 0x1C16CB8
	0x03C43718 MOV X2, X0
	0x03C4371C STR X0, [X21 + 0xB88]
	0x03C43720 MOV W0, W20
	0x03C43724 MOV W1, W19
	0x03C43728 LDP X20, X19, [X31 + 0x10]
	0x03C4372C LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x7A3000
	007 Move W8, [X20+2840]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x51D000
	014 Move X0, [X0+2160]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2840], W8
	018 Move X21, 0x7A3000
	019 Move X20, 0x51D000
	020 Move X8, [X21+2848]
	021 Move X20, [X20+2160]
	022 Move [X31+8], X31
	023 Move [X31+16], X31
	024 Move [X31+24], X31
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -51576832
	028 Add X0, X0, 3985
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X21+2848], X0
	032 Add X1, X31, 8
	033 Move X0, X19
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X0, [X31+8]
	036 Move W19, [X31+16]
	037 Move X1, X31
	038 Call IntPtr.op_Explicit, X0
	039 Move X3, [X20]
	040 Move W1, W19
	041 Move W2, W31
	042 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Add X31, X31, 64
	048 Return X0

Method: UnityEngine.U2D.SpriteChannelInfo GetIndicesInfo(UnityEngine.Sprite sprite)

Disassembly:
	0x03C43730 BR X2
	0x03C43734 LDR X0, [X0]
	0x03C43738 MOV X1, X31
	0x03C4373C MOV X2, X31
	0x03C43740 B 0x33C5D2C
	0x03C43744 STP X30, X21, [X31 - 0x20]!
	0x03C43748 STP X20, X19, [X31 + 0x10]
	0x03C4374C MOV X19, X0
	0x03C43750 LDR X0, [X0]
	0x03C43754 MOVZ W1, 0x7
	0x03C43758 MOV X2, X31
	0x03C4375C BL 0x3BFFF60
	0x03C43760 ADRP X21, 0x7A2000
	0x03C43764 LDR X8, [X21 + 0xB90]
	0x03C43768 LDR X20, [X19]
	0x03C4376C CBNZ X8, 0x3C43784
	0x03C43770 ADRP X0, 0xFFFFFFFFFCEE5000
	0x03C43774 ADD X0, X0, 0xA9A
	0x03C43778 BL 0x1C16CB8
	0x03C4377C MOV X8, X0
	0x03C43780 STR X0, [X21 + 0xB90]
	0x03C43784 MOV X0, X20
	0x03C43788 BLR X8
	0x03C4378C STR X31, [X19]
	0x03C43790 LDP X20, X19, [X31 + 0x10]
	0x03C43794 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x7A3000
	007 Move X19, X8
	008 Move X8, [X21+2848]
	009 Move X20, X0
	010 Move [X31+8], X31
	011 Move [X31+16], X31
	012 Move [X31+24], X31
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51576832
	016 Add X0, X0, 3985
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X21+2848], X0
	020 Add X1, X31, 8
	021 Move X0, X20
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X8, [X31+24]
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Move [X19+16], X8
	028 Move [X19], V0
	029 Move X20, [X31+48]
	030 Move X19, [X31+56]
	031 Add X31, X31, 64
	032 Return X0

Method: UnityEngine.U2D.SpriteChannelInfo GetChannelInfo(UnityEngine.Sprite sprite, UnityEngine.Rendering.VertexAttribute channel)

Disassembly:
	0x03C437DC RET
	0x03C437E0 STP X30, X21, [X31 - 0x20]!
	0x03C437E4 STP X20, X19, [X31 + 0x10]
	0x03C437E8 ADRP X21, 0x7A2000
	0x03C437EC LDR X2, [X21 + 0xBC0]
	0x03C437F0 LDR X20, [X0]
	0x03C437F4 MOV W19, W1
	0x03C437F8 CBNZ X2, 0x3C43810
	0x03C437FC ADRP X0, 0xFFFFFFFFFCEB4000
	0x03C43800 ADD X0, X0, 0x491
	0x03C43804 BL 0x1C16CB8
	0x03C43808 MOV X2, X0
	0x03C4380C STR X0, [X21 + 0xBC0]
	0x03C43810 MOV X0, X20
	0x03C43814 MOV W1, W19
	0x03C43818 LDP X20, X19, [X31 + 0x10]
	0x03C4381C LDP X30, X21, [X31], #0x20
	0x03C43820 BR X2
	0x03C43824 STP X30, X21, [X31 - 0x20]!
	0x03C43828 STP X20, X19, [X31 + 0x10]
	0x03C4382C ADRP X21, 0x7A2000
	0x03C43830 LDR X2, [X21 + 0xBC0]
	0x03C43834 MOV W19, W1
	0x03C43838 MOV X20, X0
	0x03C4383C CBNZ X2, 0x3C43854
	0x03C43840 ADRP X0, 0xFFFFFFFFFCEB4000
	0x03C43844 ADD X0, X0, 0x491
	0x03C43848 BL 0x1C16CB8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+24], X31
	003 Move [X31+32], X30
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x7A3000
	009 Move X19, X8
	010 Move X8, [X22+2856]
	011 Move W20, W1
	012 Move X21, X0
	013 Move [X31+8], X31
	014 Move [X31+16], X31
	015 Compare X8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51613696
	018 Add X0, X0, 1262
	019 Call 0x1C17CB8
	020 Move X8, X0
	021 Move [X22+2856], X0
	022 Add X2, X31, 8
	023 Move X0, X21
	024 Move W1, W20
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X8, [X31+24]
	027 Move X30, [X31+32]
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 Move X22, [X31+48]
	030 Move X21, [X31+56]
	031 Move [X19+16], X8
	032 Move [X19], V0
	033 Move X20, [X31+64]
	034 Move X19, [X31+72]
	035 Add X31, X31, 80
	036 Return X0

Method: System.Void GetIndicesInfo_Injected(UnityEngine.Sprite sprite, out UnityEngine.U2D.SpriteChannelInfo ret)

Disassembly:
	0x03C43798 RET
	0x03C4379C STR X30, [X31 - 0x20]!
	0x03C437A0 STP X20, X19, [X31 + 0x10]
	0x03C437A4 ADRP X20, 0x7A2000
	0x03C437A8 LDR X1, [X20 + 0xB90]
	0x03C437AC MOV X19, X0
	0x03C437B0 CBNZ X1, 0x3C437C8
	0x03C437B4 ADRP X0, 0xFFFFFFFFFCEE5000
	0x03C437B8 ADD X0, X0, 0xA9A
	0x03C437BC BL 0x1C16CB8
	0x03C437C0 MOV X1, X0
	0x03C437C4 STR X0, [X20 + 0xB90]
	0x03C437C8 MOV X0, X19
	0x03C437CC LDP X20, X19, [X31 + 0x10]
	0x03C437D0 LDR X30, [X31], #0x20
	0x03C437D4 BR X1
	0x03C437D8 LDR X0, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A3000
	006 Move X2, [X21+2848]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51576832
	012 Add X0, X0, 3985
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2848], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetChannelInfo_Injected(UnityEngine.Sprite sprite, UnityEngine.Rendering.VertexAttribute channel, out UnityEngine.U2D.SpriteChannelInfo ret)

Disassembly:
	0x03C4384C MOV X2, X0
	0x03C43850 STR X0, [X21 + 0xBC0]
	0x03C43854 MOV X0, X20
	0x03C43858 MOV W1, W19
	0x03C4385C LDP X20, X19, [X31 + 0x10]
	0x03C43860 LDP X30, X21, [X31], #0x20
	0x03C43864 BR X2
	0x03C43868 STR X30, [X31 - 0x20]!
	0x03C4386C STP X20, X19, [X31 + 0x10]
	0x03C43870 ADRP X20, 0x7A2000
	0x03C43874 LDR X1, [X20 + 0xBB8]
	0x03C43878 LDR X19, [X0]
	0x03C4387C CBNZ X1, 0x3C43894
	0x03C43880 ADRP X0, 0xFFFFFFFFFCEAE000
	0x03C43884 ADD X0, X0, 0x34B
	0x03C43888 BL 0x1C16CB8
	0x03C4388C MOV X1, X0
	0x03C43890 STR X0, [X20 + 0xBB8]
	0x03C43894 MOV X0, X19
	0x03C43898 LDP X20, X19, [X31 + 0x10]
	0x03C4389C LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7A3000
	007 Move X3, [X22+2856]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51613696
	014 Add X0, X0, 1262
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2856], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

