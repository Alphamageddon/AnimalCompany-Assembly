Type: UnityEngine.Profiling.Recorder

Method: System.Void .ctor()

Disassembly:
	0x03C43DAC LDR X0, [X0 + 0x780]
	0x03C43DB0 B 0x3C43DD4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(Unity.Profiling.LowLevel.Unsafe.ProfilerRecorderHandle handle)

Disassembly:
	0x03C43DB4 BL 0x1C16F20
	0x03C43DB8 ADRP X0, 0x4B5000
	0x03C43DBC LDR X0, [X0 + 0x528]
	0x03C43DC0 BL 0x1C16D08
	0x03C43DC4 BL 0x1C16F10
	0x03C43DC8 MOV X19, X0
	0x03C43DCC ADRP X0, 0x4E9000
	0x03C43DD0 LDR X0, [X0 + 0x480]
	0x03C43DD4 BL 0x1C16D08
	0x03C43DD8 MOV X1, X0
	0x03C43DDC MOV X0, X19
	0x03C43DE0 MOV X2, X31
	0x03C43DE4 BL 0x330E100
	0x03C43DE8 ADRP X0, 0x51C000
	0x03C43DEC LDR X0, [X0 + 0x8C0]
	0x03C43DF0 BL 0x1C16D08
	0x03C43DF4 MOV X1, X0
	0x03C43DF8 MOV X0, X19
	0x03C43DFC BL 0x1C16DEC
	0x03C43E00 STR X30, [X31 - 0x20]!
	0x03C43E04 STP X20, X19, [X31 + 0x10]
	0x03C43E08 ADRP X20, 0x7A2000
	0x03C43E0C LDRB W8, [X20 + 0xBC9]
	0x03C43E10 MOV X19, X0
	0x03C43E14 TBNZ X8, 0x0, 0x3C43E2C
	0x03C43E18 ADRP X0, 0x4B0000
	0x03C43E1C LDR X0, [X0 + 0x598]
	0x03C43E20 BL 0x1C16CF4
	0x03C43E24 MOVZ W8, 0x1
	0x03C43E28 STRB W8, [X20 + 0xBC9]
	0x03C43E2C CBZ X19, 0x3C43EA0
	0x03C43E30 LDR X8, [X19 + 0x20]
	0x03C43E34 CBZ X8, 0x3C43E70
	0x03C43E38 ADRP X10, 0x4B0000
	0x03C43E3C LDR X10, [X10 + 0x598]
	0x03C43E40 LDR X9, [X8]
	0x03C43E44 LDR X0, [X10]
	0x03C43E48 LDRB W11, [X9 + 0x130]
	0x03C43E4C LDRB W10, [X0 + 0x130]
	0x03C43E50 CMP W11, W10
	0x03C43E54 B.CC 0x3C43E70
	0x03C43E58 LDR X9, [X9 + 0xC8]
	0x03C43E5C ADD X9, X9, X10, 0x3, LSL
	0x03C43E60 LDUR X9, [X9 - 0x8]
	0x03C43E64 CMP X9, X0
	0x03C43E68 CSEL X19, X8, X31, EQ

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+64], X20
	004 Move [X31+72], X19
	005 NotImplemented "Instruction MRS not yet implemented."
	006 Move X8, [X20+40]
	007 Move X19, X0
	008 Move [X31+40], X8
	009 Move [X31+8], X1
	010 Move X1, X31
	011 Call Object..ctor, X0
	012 Add X0, X31, 8
	013 Move X1, X31
	014 Call ProfilerRecorderHandle.get_Valid, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {46}
	019 Move X1, [X31+8]
	020 Add X0, X31, 0
	021 Move W2, 1
	022 Move W3, 153
	023 Move X4, X31
	024 Move [X31], X31
	025 Call ProfilerRecorder..ctor, X0, X1, X2, X3
	026 Move X8, [X31]
	027 Move X0, [X31+8]
	028 Move X1, X31
	029 Move [X19+16], X8
	030 Add X8, X31, 16
	031 Call ProfilerRecorderHandle.GetDescription, X0
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move TEMP, X8
	034 And TEMP, TEMP, 256
	035 Compare TEMP, 256
	036 JumpIfNotEqual {46}
	037 Move X1, [X31+8]
	038 Add X0, X31, 16
	039 Move W2, 1
	040 Move W3, 217
	041 Move X4, X31
	042 Move [X31+16], X31
	043 Call ProfilerRecorder..ctor, X0, X1, X2, X3
	044 Move X8, [X31+16]
	045 Move [X19+24], X8
	046 Move X8, [X20+40]
	047 Move X9, [X31+40]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+64]
	050 Move X19, [X31+72]
	051 Move X30, [X31+48]
	052 Add X31, X31, 80
	053 Return 
	054 Call 0x3EB2B20

Method: System.Void Finalize()

Disassembly:
	0x03C43E6C B.EQ 0x3C43E80
	0x03C43E70 LDP X20, X19, [X31 + 0x10]
	0x03C43E74 MOVZ W0, 0x1
	0x03C43E78 LDR X30, [X31], #0x20
	0x03C43E7C RET
	0x03C43E80 LDR W8, [X0 + 0xE0]
	0x03C43E84 CBNZ W8, 0x3C43E8C
	0x03C43E88 BL 0x1C16DFC
	0x03C43E8C MOV X0, X19
	0x03C43E90 LDP X20, X19, [X31 + 0x10]
	0x03C43E94 MOV X1, X31
	0x03C43E98 LDR X30, [X31], #0x20
	0x03C43E9C B 0x3C354F8
	0x03C43EA0 BL 0x1C16F20
	0x03C43EA4 STR X30, [X31 - 0x30]!
	0x03C43EA8 STP X22, X21, [X31 + 0x10]
	0x03C43EAC STP X20, X19, [X31 + 0x20]
	0x03C43EB0 ADRP X21, 0x7A2000
	0x03C43EB4 LDRB W8, [X21 + 0xBCA]
	0x03C43EB8 MOV X19, X1
	0x03C43EBC MOV X20, X0
	0x03C43EC0 TBNZ X8, 0x0, 0x3C43ED8
	0x03C43EC4 ADRP X0, 0x4D7000
	0x03C43EC8 LDR X0, [X0 + 0xE30]
	0x03C43ECC BL 0x1C16CF4
	0x03C43ED0 MOVZ W8, 0x1
	0x03C43ED4 STRB W8, [X21 + 0xBCA]
	0x03C43ED8 ADRP X22, 0x4D7000
	0x03C43EDC LDR X21, [X20 + 0x10]!
	0x03C43EE0 LDR X22, [X22 + 0xE30]
	0x03C43EE4 MOV X0, X21
	0x03C43EE8 MOV X1, X19
	0x03C43EEC MOV X2, X31
	0x03C43EF0 BL 0x33C0DE4
	0x03C43EF4 MOV X8, X0
	0x03C43EF8 CBZ X0, 0x3C43F0C
	0x03C43EFC LDR X1, [X22]
	0x03C43F00 LDR X9, [X8]
	0x03C43F04 CMP X9, X1
	0x03C43F08 B.NE 0x3C43F38
	0x03C43F0C MOV X0, X20
	0x03C43F10 MOV X1, X8
	0x03C43F14 MOV X2, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Add X0, X0, 16
	007 Move X1, X31
	008 Call ProfilerRecorder.Dispose, X0
	009 Add X0, X19, 24
	010 Move X1, X31
	011 Call ProfilerRecorder.Dispose, X0
	012 Move X0, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X1, X31
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Call Object.Finalize, X0
	019 Return 
	020 Move X21, X0
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X0, X21
	023 Call 0x3EB2AD0
	024 Move X20, [X0]
	025 Call 0x3EB2AE0
	026 Move X0, X19
	027 Move X1, X31
	028 Call Object.Finalize, X0
	029 Compare X20, 0
	030 JumpIfNotEqual {37}
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Move X20, X31
	037 Move X0, X20
	038 Call 0x1C17F18
	039 Move X21, X0
	040 Move X0, X19
	041 Move X1, X31
	042 Call Object.Finalize, X0
	043 Compare X20, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X21
	046 Call 0x1D2D690
	047 Move X0, X20
	048 Call 0x1C17F18
	049 Call 0x1991590

Method: System.Boolean get_enabled()

Disassembly:
	0x03C43F18 BL 0x1C24138
	0x03C43F1C CMP X21, X0
	0x03C43F20 MOV X21, X0

ISIL:
	001 Add X0, X0, 16
	002 Move X1, X31
	003 Call ProfilerRecorder.get_IsRunning, X0
	004 Return X0

Method: System.Void set_enabled(System.Boolean value)

Disassembly:
	0x03C43F24 B.NE 0x3C43EE4
	0x03C43F28 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 And W1, W1, 1

Method: System.Int64 get_elapsedNanoseconds()

Disassembly:
	0x03C43F9C LDR X9, [X8]
	0x03C43FA0 CMP X9, X1
	0x03C43FA4 B.NE 0x3C43FD4
	0x03C43FA8 MOV X0, X20
	0x03C43FAC MOV X1, X8
	0x03C43FB0 MOV X2, X21
	0x03C43FB4 BL 0x1C24138
	0x03C43FB8 CMP X21, X0
	0x03C43FBC MOV X21, X0
	0x03C43FC0 B.NE 0x3C43F80
	0x03C43FC4 LDP X20, X19, [X31 + 0x20]
	0x03C43FC8 LDP X22, X21, [X31 + 0x10]
	0x03C43FCC LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add X19, X0, 16
	004 Move X0, X19
	005 Move X1, X31
	006 Call ProfilerRecorder.get_Valid, X0
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {17}
	011 Move X0, X19
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call ProfilerRecorder.get_LastValue, X0
	016 Return X0
	017 Move X0, X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

Method: System.Int64 get_gpuElapsedNanoseconds()

Disassembly:
	0x03C43FD0 RET
	0x03C43FD4 MOV X0, X8
	0x03C43FD8 BL 0x1C171E0
	0x03C43FDC STR X30, [X31 - 0x40]!
	0x03C43FE0 STP X24, X23, [X31 + 0x10]
	0x03C43FE4 STP X22, X21, [X31 + 0x20]
	0x03C43FE8 STP X20, X19, [X31 + 0x30]
	0x03C43FEC ADRP X24, 0x7A2000
	0x03C43FF0 ADRP X22, 0x51C000
	0x03C43FF4 ADRP X23, 0x4B0000
	0x03C43FF8 LDRB W8, [X24 + 0xBCC]
	0x03C43FFC LDR X22, [X22 + 0x8C8]
	0x03C44000 LDR X23, [X23 + 0x6C0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Add X19, X0, 24
	004 Move X0, X19
	005 Move X1, X31
	006 Call ProfilerRecorder.get_Valid, X0
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {17}
	011 Move X0, X19
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call ProfilerRecorder.get_LastValue, X0
	016 Return X0
	017 Move X0, X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0

Method: System.Int32 get_sampleBlockCount()

Disassembly:
	0x03C44004 MOV X20, X2
	0x03C44008 MOV X21, X1
	0x03C4400C MOV X19, X0
	0x03C44010 TBNZ X8, 0x0, 0x3C44040
	0x03C44014 ADRP X0, 0x4AF000
	0x03C44018 LDR X0, [X0 + 0x6C0]
	0x03C4401C BL 0x1C16CF4
	0x03C44020 ADRP X0, 0x51B000
	0x03C44024 LDR X0, [X0 + 0x8C8]
	0x03C44028 BL 0x1C16CF4
	0x03C4402C ADRP X0, 0x4D6000
	0x03C44030 LDR X0, [X0 + 0xE30]
	0x03C44034 BL 0x1C16CF4
	0x03C44038 MOVZ W8, 0x1
	0x03C4403C STRB W8, [X24 + 0xBCC]
	0x03C44040 MOV X0, X19
	0x03C44044 MOV X1, X21
	0x03C44048 MOV X2, X20
	0x03C4404C BL 0x3C43D0C
	0x03C44050 LDR X0, [X23]
	0x03C44054 LDR X22, [X22]
	0x03C44058 LDR W8, [X0 + 0xE0]
	0x03C4405C CBNZ W8, 0x3C44064

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Add X19, X0, 16
	005 Move X0, X19
	006 Move X1, X31
	007 Call ProfilerRecorder.get_Valid, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {22}
	012 Move X0, X19
	013 Move X1, X31
	014 Call ProfilerRecorder.get_Count, X0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X8, X31, 8
	017 Move X0, X19
	018 Move W1, W31
	019 Move X2, X31
	020 Call ProfilerRecorder.GetSample, X0, X1
	021 Move W0, [X31+16]
	022 Move W0, W31
	023 Move X30, [X31+32]
	024 Move X19, [X31+40]
	025 Add X31, X31, 48
	026 Return X0

Method: System.Int32 get_gpuSampleBlockCount()

Disassembly:
	0x03C44060 BL 0x1C16DFC
	0x03C44064 MOV X0, X22
	0x03C44068 MOV X1, X31
	0x03C4406C BL 0x338C698
	0x03C44070 MOV X1, X21
	0x03C44074 MOV X2, X20
	0x03C44078 MOV X3, X31
	0x03C4407C BL 0x33C4FAC
	0x03C44080 MOV X8, X0
	0x03C44084 CBZ X0, 0x3C440A0
	0x03C44088 ADRP X9, 0x4D6000
	0x03C4408C LDR X9, [X9 + 0xE30]
	0x03C44090 LDR X1, [X9]
	0x03C44094 LDR X9, [X8]
	0x03C44098 CMP X9, X1
	0x03C4409C B.NE 0x3C440BC
	0x03C440A0 MOV X0, X19
	0x03C440A4 LDP X20, X19, [X31 + 0x30]
	0x03C440A8 LDP X22, X21, [X31 + 0x20]
	0x03C440AC LDP X24, X23, [X31 + 0x10]
	0x03C440B0 MOV X1, X8
	0x03C440B4 LDR X30, [X31], #0x40
	0x03C440B8 B 0x3C43EA4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Add X19, X0, 24
	005 Move X0, X19
	006 Move X1, X31
	007 Call ProfilerRecorder.get_Valid, X0
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {22}
	012 Move X0, X19
	013 Move X1, X31
	014 Call ProfilerRecorder.get_Count, X0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X8, X31, 8
	017 Move X0, X19
	018 Move W1, W31
	019 Move X2, X31
	020 Call ProfilerRecorder.GetSample, X0, X1
	021 Move W0, [X31+16]
	022 Move W0, W31
	023 Move X30, [X31+32]
	024 Move X19, [X31+40]
	025 Add X31, X31, 48
	026 Return X0

Method: System.Void SetEnabled(System.Boolean state)

Disassembly:
	0x03C43F2C LDP X22, X21, [X31 + 0x10]
	0x03C43F30 LDR X30, [X31], #0x30
	0x03C43F34 RET
	0x03C43F38 MOV X0, X8
	0x03C43F3C BL 0x1C171E0
	0x03C43F40 STR X30, [X31 - 0x30]!
	0x03C43F44 STP X22, X21, [X31 + 0x10]
	0x03C43F48 STP X20, X19, [X31 + 0x20]
	0x03C43F4C ADRP X21, 0x7A2000
	0x03C43F50 LDRB W8, [X21 + 0xBCB]
	0x03C43F54 MOV X19, X1
	0x03C43F58 MOV X20, X0
	0x03C43F5C TBNZ X8, 0x0, 0x3C43F74
	0x03C43F60 ADRP X0, 0x4D7000
	0x03C43F64 LDR X0, [X0 + 0xE30]
	0x03C43F68 BL 0x1C16CF4
	0x03C43F6C MOVZ W8, 0x1
	0x03C43F70 STRB W8, [X21 + 0xBCB]
	0x03C43F74 ADRP X22, 0x4D7000
	0x03C43F78 LDR X21, [X20 + 0x10]!
	0x03C43F7C LDR X22, [X22 + 0xE30]
	0x03C43F80 MOV X0, X21
	0x03C43F84 MOV X1, X19
	0x03C43F88 MOV X2, X31
	0x03C43F8C BL 0x33C0FDC
	0x03C43F90 MOV X8, X0
	0x03C43F94 CBZ X0, 0x3C43FA8
	0x03C43F98 LDR X1, [X22]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Add X0, X0, 16
	005 Move TEMP, X1
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {25}
	009 Move X1, X31
	010 Call ProfilerRecorder.Start, X0
	011 Add X19, X19, 24
	012 Move X0, X19
	013 Move X1, X31
	014 Call ProfilerRecorder.get_Valid, X0
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {41}
	019 Move X0, X19
	020 Move X1, X31
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Call ProfilerRecorder.Start, X0
	024 Return 
	025 Move X1, X31
	026 Call ProfilerRecorder.Stop, X0
	027 Add X19, X19, 24
	028 Move X0, X19
	029 Move X1, X31
	030 Call ProfilerRecorder.get_Valid, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {41}
	035 Move X0, X19
	036 Move X1, X31
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 Call ProfilerRecorder.Stop, X0
	040 Return 
	041 Move X30, [X31+16]
	042 Move X19, [X31+24]
	043 Return 

Method: System.Void .cctor()

Disassembly:
	0x03C440BC MOV X0, X8
	0x03C440C0 BL 0x1C171E0
	0x03C440C4 STR X30, [X31 - 0x20]!
	0x03C440C8 STP X20, X19, [X31 + 0x10]
	0x03C440CC MOV X19, X1
	0x03C440D0 MOV X1, X31
	0x03C440D4 MOV X20, X0
	0x03C440D8 BL 0x33BDD8C
	0x03C440DC MOV X0, X20
	0x03C440E0 MOV X1, X19
	0x03C440E4 LDP X20, X19, [X31 + 0x10]
	0x03C440E8 LDR X30, [X31], #0x20
	0x03C440EC B 0x3C43EA4
	0x03C440F0 STP X30, X19, [X31 - 0x10]!
	0x03C440F4 MOV X19, X0
	0x03C440F8 LDR X0, [X0 + 0x10]
	0x03C440FC BL 0x3C43E00
	0x03C44100 TBZ X0, 0x0, 0x3C44120
	0x03C44104 LDR X8, [X19 + 0x10]
	0x03C44108 CBZ X8, 0x3C44128
	0x03C4410C LDR X2, [X8 + 0x18]
	0x03C44110 LDR X0, [X8 + 0x40]
	0x03C44114 LDR X1, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7A2000
	005 Move X20, 0x51C000
	006 Move W8, [X19+2912]
	007 Move X20, [X20+2192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x51C000
	013 Move X0, [X0+2192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2912], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

