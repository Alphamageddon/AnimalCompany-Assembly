Type: UnityEngine.Profiling.Sampler

Method: System.Void .ctor()

Disassembly:
	0x03C44118 LDP X30, X19, [X31], #0x10
	0x03C4411C BR X2

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean get_isValid()

Disassembly:
	0x03C44120 LDP X30, X19, [X31], #0x10
	0x03C44124 RET
	0x03C44128 BL 0x1C16F20
	0x03C4412C STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move X0, [X0+16]
	002 Move X1, X31
	003 Move X2, X31
	004 Call IntPtr.op_Inequality, X0, X1
	005 Return X0

Method: UnityEngine.Profiling.Recorder GetRecorder()

Disassembly:
	0x03C44130 MOV X19, X0
	0x03C44134 LDR X0, [X0 + 0x10]
	0x03C44138 BL 0x3C43E00
	0x03C4413C TBZ X0, 0x0, 0x3C4415C
	0x03C44140 LDR X8, [X19 + 0x10]
	0x03C44144 CBZ X8, 0x3C44164
	0x03C44148 LDR X2, [X8 + 0x18]
	0x03C4414C LDR X0, [X8 + 0x40]
	0x03C44150 LDR X1, [X8 + 0x28]
	0x03C44154 LDP X30, X19, [X31], #0x10
	0x03C44158 BR X2
	0x03C4415C LDP X30, X19, [X31], #0x10
	0x03C44160 RET
	0x03C44164 BL 0x1C16F20
	0x03C44168 STP X30, X19, [X31 - 0x10]!
	0x03C4416C LDR X0, [X0 + 0x10]
	0x03C44170 CBZ X0, 0x3C441B0
	0x03C44174 LDR X8, [X0 + 0x20]
	0x03C44178 CMP X8, X1
	0x03C4417C B.EQ 0x3C4418C
	0x03C44180 MOV W0, W31
	0x03C44184 LDP X30, X19, [X31], #0x10
	0x03C44188 RET
	0x03C4418C MOV X1, X31
	0x03C44190 MOV X19, X2
	0x03C44194 BL 0x33C4268
	0x03C44198 CBZ X0, 0x3C441B0
	0x03C4419C LDR X8, [X0]
	0x03C441A0 MOV X1, X19
	0x03C441A4 LDP X3, X2, [X8 + 0x138]
	0x03C441A8 LDP X30, X19, [X31], #0x10
	0x03C441AC BR X3
	0x03C441B0 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7A2000
	007 Move X20, 0x51C000
	008 Move W8, [X21+2913]
	009 Move X20, [X20+2192]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x51C000
	016 Move X0, [X0+2192]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2913], W8
	020 Add X0, X19, 16
	021 Move X1, X31
	022 Move [X31+8], X31
	023 Call IntPtr.ToInt64, X0
	024 Move X1, X0
	025 Add X0, X31, 8
	026 Move X2, X31
	027 Call ProfilerRecorderHandle..ctor, X0, X1
	028 Move X0, [X20]
	029 Move X19, [X31+8]
	030 Call 0x1C17F10
	031 Move X1, X19
	032 Move X20, X0
	033 Call Recorder..ctor, X0, X1
	034 Move X0, X20
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X30, [X31+16]
	038 Move X21, [X31+24]
	039 Add X31, X31, 48
	040 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03C441B4 LDR X0, [X0 + 0x10]
	0x03C441B8 RET
	0x03C441BC STR X30, [X31 - 0x20]!
	0x03C441C0 STP X20, X19, [X31 + 0x10]
	0x03C441C4 ADRP X20, 0x7A1000
	0x03C441C8 LDRB W8, [X20 + 0xBCD]
	0x03C441CC MOV X19, X0
	0x03C441D0 TBNZ X8, 0x0, 0x3C441E8
	0x03C441D4 ADRP X0, 0x4AF000
	0x03C441D8 LDR X0, [X0 + 0x598]
	0x03C441DC BL 0x1C16CF4
	0x03C441E0 MOVZ W8, 0x1
	0x03C441E4 STRB W8, [X20 + 0xBCD]
	0x03C441E8 LDR X0, [X19 + 0x18]
	0x03C441EC MOV X1, X31
	0x03C441F0 BL 0x32277A8
	0x03C441F4 TBZ X0, 0x0, 0x3C44250
	0x03C441F8 ADRP X8, 0x4AF000
	0x03C441FC LDR X8, [X8 + 0x598]
	0x03C44200 LDR X20, [X19 + 0x10]
	0x03C44204 LDR X0, [X8]
	0x03C44208 LDR W8, [X0 + 0xE0]
	0x03C4420C CBNZ W8, 0x3C44214

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7A2000
	005 Move X20, 0x51C000
	006 Move W8, [X19+2914]
	007 Move X20, [X20+2200]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x51C000
	013 Move X0, [X0+2200]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2914], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

