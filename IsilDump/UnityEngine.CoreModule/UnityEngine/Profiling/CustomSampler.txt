Type: UnityEngine.Profiling.CustomSampler

Method: System.Void .ctor()

Disassembly:
	0x03C44210 BL 0x1C16DFC
	0x03C44214 MOV X0, X20
	0x03C44218 MOV X1, X31
	0x03C4421C BL 0x3C354F8
	0x03C44220 TBZ X0, 0x0, 0x3C44250
	0x03C44224 LDR X0, [X19 + 0x10]
	0x03C44228 CBZ X0, 0x3C44260
	0x03C4422C MOV X1, X31
	0x03C44230 BL 0x33BE520
	0x03C44234 CBZ X0, 0x3C44260
	0x03C44238 LDR X8, [X0]
	0x03C4423C LDR X9, [X8 + 0x2D8]
	0x03C44240 LDR X1, [X8 + 0x2E0]
	0x03C44244 BLR X9
	0x03C44248 BL 0x3C43A68
	0x03C4424C STR X0, [X19 + 0x18]
	0x03C44250 LDR X0, [X19 + 0x18]
	0x03C44254 LDP X20, X19, [X31 + 0x10]
	0x03C44258 LDR X30, [X31], #0x20
	0x03C4425C RET
	0x03C44260 BL 0x1C16F20
	0x03C44264 LDR X0, [X0 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7A2000
	006 Move X21, 0x51C000
	007 Move W8, [X20+2915]
	008 Move X21, [X21+2200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x51C000
	015 Move X0, [X0+2200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2915], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

Method: System.Void .ctor(System.IntPtr ptr)

Disassembly:
	0x03C44268 RET
	0x03C4426C LDR W0, [X0 + 0x28]
	0x03C44270 RET
	0x03C44274 LDR X0, [X0 + 0x30]
	0x03C44278 RET
	0x03C4427C STP X30, X19, [X31 - 0x10]!
	0x03C44280 MOV X19, X0
	0x03C44284 BL 0x3C441BC
	0x03C44288 MOV X1, X31
	0x03C4428C BL 0x32277A8
	0x03C44290 TBZ X0, 0x0, 0x3C4429C
	0x03C44294 MOV W8, W31
	0x03C44298 B 0x3C442AC
	0x03C4429C LDR X0, [X19 + 0x20]
	0x03C442A0 MOV X1, X31
	0x03C442A4 BL 0x32277A8
	0x03C442A8 EOR W8, W0, 0x1
	0x03C442AC AND W0, W8, 0x1
	0x03C442B0 LDP X30, X19, [X31], #0x10
	0x03C442B4 RET
	0x03C442B8 STR D8, [X31 - 0x40]!
	0x03C442BC STP X30, X23, [X31 + 0x10]
	0x03C442C0 STP X22, X21, [X31 + 0x20]
	0x03C442C4 STP X20, X19, [X31 + 0x30]
	0x03C442C8 ADRP X19, 0x7A1000
	0x03C442CC LDRB W8, [X19 + 0xBCE]
	0x03C442D0 MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7A2000
	007 Move X22, 0x51C000
	008 Move W8, [X21+2916]
	009 Move X22, [X22+2200]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x51C000
	017 Move X0, [X0+2200]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2916], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call Object..ctor, X0
	029 Move [X20+16], X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 

Method: UnityEngine.Profiling.CustomSampler Create(System.String name, System.Boolean collectGpuData = False)

Disassembly:
	0x03C442D4 MOV X21, X0
	0x03C442D8 TBNZ X8, 0x0, 0x3C4435C
	0x03C442DC ADRP X0, 0x51B000
	0x03C442E0 LDR X0, [X0 + 0x8D0]
	0x03C442E4 BL 0x1C16CF4
	0x03C442E8 ADRP X0, 0x51B000
	0x03C442EC LDR X0, [X0 + 0x8D8]
	0x03C442F0 BL 0x1C16CF4
	0x03C442F4 ADRP X0, 0x51B000
	0x03C442F8 LDR X0, [X0 + 0x8E0]
	0x03C442FC BL 0x1C16CF4
	0x03C44300 ADRP X0, 0x51B000
	0x03C44304 LDR X0, [X0 + 0x8E8]
	0x03C44308 BL 0x1C16CF4
	0x03C4430C ADRP X0, 0x51B000
	0x03C44310 LDR X0, [X0 + 0x8F0]
	0x03C44314 BL 0x1C16CF4
	0x03C44318 ADRP X0, 0x51B000
	0x03C4431C LDR X0, [X0 + 0x8F8]
	0x03C44320 BL 0x1C16CF4
	0x03C44324 ADRP X0, 0x51B000
	0x03C44328 LDR X0, [X0 + 0x900]
	0x03C4432C BL 0x1C16CF4
	0x03C44330 ADRP X0, 0x51B000
	0x03C44334 LDR X0, [X0 + 0x908]
	0x03C44338 BL 0x1C16CF4
	0x03C4433C ADRP X0, 0x4D9000
	0x03C44340 LDR X0, [X0 + 0xA70]
	0x03C44344 BL 0x1C16CF4
	0x03C44348 ADRP X0, 0x4AF000
	0x03C4434C LDR X0, [X0 + 0x598]
	0x03C44350 BL 0x1C16CF4
	0x03C44354 MOVZ W8, 0x1
	0x03C44358 STRB W8, [X19 + 0xBCE]
	0x03C4435C MOV X23, X31
	0x03C44360 CBZ X20, 0x3C44390
	0x03C44364 LDR W8, [X21 + 0x38]
	0x03C44368 CBZ W8, 0x3C44390
	0x03C4436C MOV X0, X20
	0x03C44370 MOV X1, X21
	0x03C44374 BL 0x3C445A0
	0x03C44378 MOV X1, X31
	0x03C4437C MOV X2, X31
	0x03C44380 MOV X19, X0
	0x03C44384 BL 0x32C2354
	0x03C44388 MOV X23, X31
	0x03C4438C TBZ X0, 0x0, 0x3C443A8
	0x03C44390 MOV X0, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7A2000
	007 Move X21, 0x50E000
	008 Move W8, [X22+2917]
	009 Move X21, [X21+3632]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x50E000
	017 Move X0, [X0+3632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2917], W8
	021 And W31, W20, 1
	022 Move W8, 8
	023 Move W9, 264
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 Move W1, 1
	026 Move X0, X19
	027 Move W3, W31
	028 Move X4, X31
	029 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	030 Move X1, X31
	031 Move X2, X31
	032 Move X19, X0
	033 Call IntPtr.op_Equality, X0, X1
	034 Move X8, [X21]
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {47}
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X8, [X21]
	045 Move X8, [X8+184]
	046 Move X0, [X8]
	047 Move X0, X8
	048 Call 0x1C17F10
	049 Move X1, X19
	050 Move X20, X0
	051 Call CustomSampler..ctor, X0, X1
	052 Move X0, X20
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03C44394 LDP X20, X19, [X31 + 0x30]
	0x03C44398 LDP X22, X21, [X31 + 0x20]
	0x03C4439C LDP X30, X23, [X31 + 0x10]
	0x03C443A0 LDR V8, [X31], #0x40
	0x03C443A4 RET
	0x03C443A8 CBZ X19, 0x3C4459C
	0x03C443AC MOV X0, X19
	0x03C443B0 MOV X1, X31
	0x03C443B4 BL 0x32CE414
	0x03C443B8 TBNZ X0, 0x0, 0x3C443EC
	0x03C443BC ADRP X8, 0x4AF000
	0x03C443C0 LDR X8, [X8 + 0x598]
	0x03C443C4 LDR X22, [X21 + 0x10]
	0x03C443C8 LDR X0, [X8]
	0x03C443CC LDR W8, [X0 + 0xE0]
	0x03C443D0 CBNZ W8, 0x3C443D8
	0x03C443D4 BL 0x1C16DFC
	0x03C443D8 MOV X0, X22
	0x03C443DC MOV X1, X31
	0x03C443E0 BL 0x3C3883C
	0x03C443E4 MOV X23, X31
	0x03C443E8 TBNZ X0, 0x0, 0x3C44390

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7A2000
	005 Move X20, 0x50E000
	006 Move W8, [X19+2918]
	007 Move X20, [X20+3632]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x50E000
	013 Move X0, [X0+3632]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2918], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call CustomSampler..ctor, X0
	021 Move X8, [X20]
	022 Move X8, [X8+184]
	023 Move [X8], X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

