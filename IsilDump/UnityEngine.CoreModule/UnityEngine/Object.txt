Type: UnityEngine.Object

Method: System.Int32 GetInstanceID()

Disassembly:
	0x03C395F8 ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C395FC ADD X0, X0, 0x9B6
	0x03C39600 BL 0x1C16CB8
	0x03C39604 MOV X2, X0
	0x03C39608 STR X0, [X21 + 0x520]
	0x03C3960C AND W1, W19, 0x1
	0x03C39610 MOV X0, X20
	0x03C39614 LDP X20, X19, [X31 + 0x10]
	0x03C39618 LDP X30, X21, [X31], #0x20
	0x03C3961C BR X2
	0x03C39620 STR X30, [X31 - 0x30]!
	0x03C39624 STP X22, X21, [X31 + 0x10]
	0x03C39628 STP X20, X19, [X31 + 0x20]
	0x03C3962C ADRP X22, 0x7AC000
	0x03C39630 LDR X3, [X22 + 0x528]
	0x03C39634 MOV W19, W2
	0x03C39638 MOV W20, W1
	0x03C3963C MOV X21, X0
	0x03C39640 CBNZ X3, 0x3C39658
	0x03C39644 ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C39648 ADD X0, X0, 0xAD2
	0x03C3964C BL 0x1C16CB8
	0x03C39650 MOV X3, X0
	0x03C39654 STR X0, [X22 + 0x528]
	0x03C39658 MOV X0, X21
	0x03C3965C MOV W1, W20
	0x03C39660 MOV W2, W19
	0x03C39664 LDP X20, X19, [X31 + 0x20]
	0x03C39668 LDP X22, X21, [X31 + 0x10]
	0x03C3966C LDR X30, [X31], #0x30
	0x03C39670 BR X3
	0x03C39674 STR X30, [X31 - 0x20]!
	0x03C39678 STP X20, X19, [X31 + 0x10]
	0x03C3967C ADRP X20, 0x7AC000
	0x03C39680 LDR X1, [X20 + 0x530]
	0x03C39684 MOV X19, X0
	0x03C39688 CBNZ X1, 0x3C396A0
	0x03C3968C ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C39690 ADD X0, X0, 0xAB8
	0x03C39694 BL 0x1C16CB8
	0x03C39698 MOV X1, X0
	0x03C3969C STR X0, [X20 + 0x530]
	0x03C396A0 MOV X0, X19
	0x03C396A4 LDP X20, X19, [X31 + 0x10]
	0x03C396A8 LDR X30, [X31], #0x20
	0x03C396AC BR X1
	0x03C396B0 STR X30, [X31 - 0x20]!
	0x03C396B4 STP X20, X19, [X31 + 0x10]
	0x03C396B8 ADRP X20, 0x7AC000
	0x03C396BC LDR X1, [X20 + 0x538]
	0x03C396C0 MOV X19, X0
	0x03C396C4 CBNZ X1, 0x3C396DC
	0x03C396C8 ADRP X0, 0xFFFFFFFFFCED8000
	0x03C396CC ADD X0, X0, 0x1A8
	0x03C396D0 BL 0x1C16CB8
	0x03C396D4 MOV X1, X0
	0x03C396D8 STR X0, [X20 + 0x538]
	0x03C396DC MOV X0, X19
	0x03C396E0 LDP X20, X19, [X31 + 0x10]
	0x03C396E4 LDR X30, [X31], #0x20
	0x03C396E8 BR X1
	0x03C396EC STP X30, X21, [X31 - 0x20]!
	0x03C396F0 STP X20, X19, [X31 + 0x10]
	0x03C396F4 ADRP X21, 0x7AC000
	0x03C396F8 LDR X2, [X21 + 0x540]
	0x03C396FC MOV W19, W1
	0x03C39700 MOV X20, X0
	0x03C39704 CBNZ X2, 0x3C3971C
	0x03C39708 ADRP X0, 0xFFFFFFFFFCEC4000
	0x03C3970C ADD X0, X0, 0x65A

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7AD000
	007 Move W8, [X20+1262]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4BB000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+1262], W8
	018 Add X19, X19, 16
	019 Move X0, [X19]
	020 Move X1, X31
	021 Move X2, X31
	022 Call IntPtr.op_Equality, X0, X1
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {28}
	027 Move W0, W31
	028 Move X20, 0x4BB000
	029 Move X20, [X20+1432]
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X20]
	036 Move X8, [X0+184]
	037 Move W8, [X8]
	038 Add W31, W8, 1
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X21, 0x7AD000
	044 Move X8, [X21+1360]
	045 Compare X8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, -51486720
	048 Add X0, X0, 3461
	049 Call 0x1C17CB8
	050 Move X8, X0
	051 Move [X21+1360], X0
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, [X20]
	054 Move X8, [X8+184]
	055 Move [X8], W0
	056 Move X0, X19
	057 Move X1, X31
	058 Call IntPtr.ToInt64, X0
	059 Move X8, [X20]
	060 Move X19, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {67}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X8, [X20]
	067 Move X8, [X8+184]
	068 Add X0, X31, 8
	069 Move X2, X31
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Move [X31+8], X31
	072 Add X1, X19, X8
	073 Call IntPtr..ctor, X0, X1
	074 Move X0, [X31+8]
	075 Move X1, X31
	076 Call IntPtr.op_Explicit, X0
	077 Move W0, [X0]
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X30, [X31+16]
	081 Move X21, [X31+24]
	082 Add X31, X31, 48
	083 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C39738 STP X20, X19, [X31 + 0x20]
	0x03C3973C ADRP X21, 0x7AC000

ISIL:
	001 Move X1, X31
	002 Call Object.GetHashCode, X0
	003 Return X0

Method: System.Boolean Equals(System.Object other)

Disassembly:
	0x03C39740 ADRP X22, 0x4BA000
	0x03C39744 LDRB W8, [X21 + 0x548]
	0x03C39748 LDR X22, [X22 + 0x598]
	0x03C3974C MOV W20, W1
	0x03C39750 MOV X19, X0
	0x03C39754 TBNZ X8, 0x0, 0x3C3976C
	0x03C39758 ADRP X0, 0x4BA000
	0x03C3975C LDR X0, [X0 + 0x598]
	0x03C39760 BL 0x1C16CF4
	0x03C39764 MOVZ W8, 0x1
	0x03C39768 STRB W8, [X21 + 0x548]
	0x03C3976C LDR X0, [X22]
	0x03C39770 LDR W8, [X0 + 0xE0]
	0x03C39774 CBNZ W8, 0x3C3977C
	0x03C39778 BL 0x1C16DFC
	0x03C3977C ADRP X21, 0x7AC000
	0x03C39780 LDR X8, [X21 + 0x520]
	0x03C39784 CBNZ X8, 0x3C3979C
	0x03C39788 ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C3978C ADD X0, X0, 0x9B6
	0x03C39790 BL 0x1C16CB8
	0x03C39794 MOV X8, X0
	0x03C39798 STR X0, [X21 + 0x520]
	0x03C3979C AND W1, W20, 0x1
	0x03C397A0 MOV X0, X19
	0x03C397A4 BLR X8
	0x03C397A8 CBZ X0, 0x3C397D0
	0x03C397AC LDR W8, [X0 + 0x18]
	0x03C397B0 CBZ W8, 0x3C397BC
	0x03C397B4 LDR X0, [X0 + 0x20]
	0x03C397B8 B 0x3C397C0
	0x03C397BC MOV X0, X31
	0x03C397C0 LDP X20, X19, [X31 + 0x20]
	0x03C397C4 LDP X22, X21, [X31 + 0x10]
	0x03C397C8 LDR X30, [X31], #0x30
	0x03C397CC RET
	0x03C397D0 BL 0x1C16F20
	0x03C397D4 STR X30, [X31 - 0x30]!
	0x03C397D8 STP X22, X21, [X31 + 0x10]
	0x03C397DC STP X20, X19, [X31 + 0x20]
	0x03C397E0 ADRP X21, 0x7AC000
	0x03C397E4 ADRP X22, 0x4BA000
	0x03C397E8 LDRB W8, [X21 + 0x549]
	0x03C397EC LDR X22, [X22 + 0x598]
	0x03C397F0 MOV W19, W1
	0x03C397F4 MOV X20, X0
	0x03C397F8 TBNZ X8, 0x0, 0x3C39810
	0x03C397FC ADRP X0, 0x4BA000
	0x03C39800 LDR X0, [X0 + 0x598]
	0x03C39804 BL 0x1C16CF4
	0x03C39808 MOVZ W8, 0x1
	0x03C3980C STRB W8, [X21 + 0x549]
	0x03C39810 LDR X0, [X22]
	0x03C39814 LDR W8, [X0 + 0xE0]
	0x03C39818 CBNZ W8, 0x3C39820
	0x03C3981C BL 0x1C16DFC
	0x03C39820 ADRP X21, 0x7AC000
	0x03C39824 LDR X8, [X21 + 0x528]
	0x03C39828 CBNZ X8, 0x3C39840
	0x03C3982C ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C39830 ADD X0, X0, 0xAD2
	0x03C39834 BL 0x1C16CB8
	0x03C39838 MOV X8, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7AD000
	007 Move X22, 0x4BB000
	008 Move W8, [X21+1263]
	009 Move X22, [X22+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4BB000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1263], W8
	021 Move X0, [X22]
	022 Compare X20, 0
	023 JumpIfEqual {28}
	024 Move X8, [X20]
	025 Move W9, [X0+304]
	026 Move W10, [X8+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X21, X31
	029 Move X8, [X8+200]
	030 Add X8, X8, X9
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X21
	039 Move X1, X31
	040 Call Object.op_Equality, X0, X1
	041 Move X8, [X22]
	042 Compare X20, 0
	043 JumpIfEqual {63}
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {63}
	048 Move X9, [X20]
	049 Move W10, [X8+304]
	050 Move W11, [X9+304]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X9, [X9+200]
	053 Add X9, X9, X10
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move W0, W31
	061 Move X30, [X31+48]
	062 Return X0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X1, X21
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Call Object.CompareBaseObjects, X0, X1
	076 Return X0

Method: System.Boolean op_Implicit(UnityEngine.Object exists)

Disassembly:
	0x03C39948 MOV X20, X0
	0x03C3994C CBNZ X2, 0x3C39964
	0x03C39950 ADRP X0, 0xFFFFFFFFFCEC2000
	0x03C39954 ADD X0, X0, 0x38D
	0x03C39958 BL 0x1C16CB8
	0x03C3995C MOV X2, X0
	0x03C39960 STR X0, [X21 + 0x5B0]
	0x03C39964 MOV X0, X20
	0x03C39968 MOV X1, X19
	0x03C3996C LDP X20, X19, [X31 + 0x10]
	0x03C39970 LDP X30, X21, [X31], #0x20
	0x03C39974 BR X2
	0x03C39978 STR X30, [X31 - 0x30]!
	0x03C3997C STP X22, X21, [X31 + 0x10]
	0x03C39980 STP X20, X19, [X31 + 0x20]
	0x03C39984 ADRP X22, 0x7AC000
	0x03C39988 LDR X3, [X22 + 0x5B8]
	0x03C3998C MOV X19, X2
	0x03C39990 MOV X20, X1
	0x03C39994 MOV X21, X0
	0x03C39998 CBNZ X3, 0x3C399B0
	0x03C3999C ADRP X0, 0xFFFFFFFFFCED9000
	0x03C399A0 ADD X0, X0, 0xDE7
	0x03C399A4 BL 0x1C16CB8
	0x03C399A8 MOV X3, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7AD000
	006 Move X21, 0x4BB000
	007 Move W8, [X20+1264]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4BB000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1264], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object.CompareBaseObjects, X0, X1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 NotImplemented "Instruction ORN not yet implemented."
	030 And W0, W8, 1
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Boolean CompareBaseObjects(UnityEngine.Object lhs, UnityEngine.Object rhs)

Disassembly:
	0x03C398A0 TBNZ X8, 0x0, 0x3C398B8
	0x03C398A4 ADRP X0, 0x4BA000
	0x03C398A8 LDR X0, [X0 + 0x598]
	0x03C398AC BL 0x1C16CF4
	0x03C398B0 MOVZ W8, 0x1
	0x03C398B4 STRB W8, [X20 + 0x54A]
	0x03C398B8 LDR X0, [X21]
	0x03C398BC LDR W8, [X0 + 0xE0]
	0x03C398C0 CBNZ W8, 0x3C398C8
	0x03C398C4 BL 0x1C16DFC
	0x03C398C8 ADRP X20, 0x7AC000
	0x03C398CC LDR X1, [X20 + 0x578]
	0x03C398D0 CBNZ X1, 0x3C398E8
	0x03C398D4 ADRP X0, 0xFFFFFFFFFCED0000
	0x03C398D8 ADD X0, X0, 0x37C
	0x03C398DC BL 0x1C16CB8
	0x03C398E0 MOV X1, X0
	0x03C398E4 STR X0, [X20 + 0x578]
	0x03C398E8 MOV X0, X19
	0x03C398EC LDP X20, X19, [X31 + 0x10]
	0x03C398F0 LDP X30, X21, [X31], #0x20
	0x03C398F4 BR X1
	0x03C398F8 STR X30, [X31 - 0x20]!
	0x03C398FC STP X20, X19, [X31 + 0x10]
	0x03C39900 ADRP X20, 0x7AC000
	0x03C39904 LDR X1, [X20 + 0x578]
	0x03C39908 MOV X19, X0
	0x03C3990C CBNZ X1, 0x3C39924
	0x03C39910 ADRP X0, 0xFFFFFFFFFCED0000
	0x03C39914 ADD X0, X0, 0x37C
	0x03C39918 BL 0x1C16CB8
	0x03C3991C MOV X1, X0
	0x03C39920 STR X0, [X20 + 0x578]
	0x03C39924 MOV X0, X19
	0x03C39928 LDP X20, X19, [X31 + 0x10]
	0x03C3992C LDR X30, [X31], #0x20
	0x03C39930 BR X1
	0x03C39934 STP X30, X21, [X31 - 0x20]!
	0x03C39938 STP X20, X19, [X31 + 0x10]
	0x03C3993C ADRP X21, 0x7AC000
	0x03C39940 LDR X2, [X21 + 0x5B0]
	0x03C39944 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AD000
	006 Move W8, [X21+1265]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4BB000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1265], W8
	018 Or X8, X20, X19
	019 Compare X8, 0
	020 JumpIfNotEqual {22}
	021 Move W8, 1
	022 Compare X19, 0
	023 JumpIfEqual {28}
	024 Compare X20, 0
	025 JumpIfEqual {36}
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move X8, 0x4BB000
	029 Move X8, [X8+1432]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X8, 0x4BB000
	037 Move X8, [X8+1432]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Call Object.IsNativeObjectAlive, X0
	045 Xor W8, W0, 1
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 And W0, W8, 1
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0

Method: System.Boolean IsNativeObjectAlive(UnityEngine.Object o)

Disassembly:
	0x03C399AC STR X0, [X22 + 0x5B8]
	0x03C399B0 MOV X0, X21
	0x03C399B4 MOV X1, X20
	0x03C399B8 MOV X2, X19
	0x03C399BC LDP X20, X19, [X31 + 0x20]
	0x03C399C0 LDP X22, X21, [X31 + 0x10]
	0x03C399C4 LDR X30, [X31], #0x30
	0x03C399C8 BR X3

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move X0, [X0+16]
	005 Move X1, X31
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call IntPtr.op_Inequality, X0, X1
	009 Return X0
	010 Call 0x1C17F20

Method: System.IntPtr GetCachedPtr()

Disassembly:
	0x03C399CC STP X30, X23, [X31 - 0x30]!
	0x03C399D0 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.String get_name()

Disassembly:
	0x03C399D4 STP X20, X19, [X31 + 0x20]
	0x03C399D8 ADRP X23, 0x7AC000
	0x03C399DC LDR X4, [X23 + 0x5C0]
	0x03C399E0 MOV X19, X3
	0x03C399E4 MOV X20, X2
	0x03C399E8 MOV X21, X1
	0x03C399EC MOV X22, X0
	0x03C399F0 CBNZ X4, 0x3C39A08
	0x03C399F4 ADRP X0, 0xFFFFFFFFFCED6000
	0x03C399F8 ADD X0, X0, 0x4D8
	0x03C399FC BL 0x1C16CB8
	0x03C39A00 MOV X4, X0
	0x03C39A04 STR X0, [X23 + 0x5C0]
	0x03C39A08 MOV X0, X22
	0x03C39A0C MOV X1, X21
	0x03C39A10 MOV X2, X20
	0x03C39A14 MOV X3, X19
	0x03C39A18 LDP X20, X19, [X31 + 0x20]
	0x03C39A1C LDP X22, X21, [X31 + 0x10]
	0x03C39A20 LDP X30, X23, [X31], #0x30
	0x03C39A24 BR X4
	0x03C39A28 STR X30, [X31 - 0x20]!
	0x03C39A2C STP X20, X19, [X31 + 0x10]
	0x03C39A30 ADRP X20, 0x7AC000
	0x03C39A34 LDR X1, [X20 + 0x590]
	0x03C39A38 MOV W19, W0
	0x03C39A3C CBNZ X1, 0x3C39A54
	0x03C39A40 ADRP X0, 0xFFFFFFFFFCEC8000
	0x03C39A44 ADD X0, X0, 0xFE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7AD000
	006 Move X21, 0x4BB000
	007 Move W8, [X20+1266]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4BB000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1266], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, 0x7AD000
	025 Move X1, [X20+1408]
	026 Compare X1, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -51654656
	029 Add X0, X0, 1128
	030 Call 0x1C17CB8
	031 Move X1, X0
	032 Move [X20+1408], X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 CallNoReturn X1

Method: System.Void set_name(System.String value)

Disassembly:
	0x03C39A84 BL 0x1C16CB8
	0x03C39A88 MOV X1, X0
	0x03C39A8C STR X0, [X20 + 0x598]
	0x03C39A90 MOV W0, W19
	0x03C39A94 LDP X20, X19, [X31 + 0x10]
	0x03C39A98 LDR X30, [X31], #0x20
	0x03C39A9C BR X1
	0x03C39AA0 STR X30, [X31 - 0x20]!
	0x03C39AA4 STP X20, X19, [X31 + 0x10]
	0x03C39AA8 ADRP X20, 0x7AC000
	0x03C39AAC LDR X1, [X20 + 0x5A0]
	0x03C39AB0 MOV W19, W0
	0x03C39AB4 CBNZ X1, 0x3C39ACC
	0x03C39AB8 ADRP X0, 0xFFFFFFFFFCEE5000
	0x03C39ABC ADD X0, X0, 0xDC2
	0x03C39AC0 BL 0x1C16CB8
	0x03C39AC4 MOV X1, X0
	0x03C39AC8 STR X0, [X20 + 0x5A0]
	0x03C39ACC MOV W0, W19
	0x03C39AD0 LDP X20, X19, [X31 + 0x10]
	0x03C39AD4 LDR X30, [X31], #0x20
	0x03C39AD8 BR X1
	0x03C39ADC STR X30, [X31 - 0x20]!
	0x03C39AE0 STP X20, X19, [X31 + 0x10]
	0x03C39AE4 ADRP X19, 0x7AC000
	0x03C39AE8 ADRP X20, 0x4BA000
	0x03C39AEC LDRB W8, [X19 + 0x5A8]
	0x03C39AF0 LDR X20, [X20 + 0x598]
	0x03C39AF4 TBNZ X8, 0x0, 0x3C39B0C
	0x03C39AF8 ADRP X0, 0x4BA000
	0x03C39AFC LDR X0, [X0 + 0x598]
	0x03C39B00 BL 0x1C16CF4
	0x03C39B04 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7AD000
	007 Move X22, 0x4BB000
	008 Move W8, [X21+1267]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4BB000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1267], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X21, 0x7AD000
	027 Move X2, [X21+1416]
	028 Compare X2, 0
	029 JumpIfNotEqual {35}
	030 Move X0, -51662848
	031 Add X0, X0, 823
	032 Call 0x1C17CB8
	033 Move X2, X0
	034 Move [X21+1416], X0
	035 Move X0, X20
	036 Move X1, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 CallNoReturn X2

Method: UnityEngine.Object Instantiate(UnityEngine.Object original, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x03C39B4C MOV W19, W1
	0x03C39B50 MOV X20, X0
	0x03C39B54 TBNZ X8, 0x0, 0x3C39B78
	0x03C39B58 ADRP X0, 0x526000
	0x03C39B5C LDR X0, [X0 + 0x698]
	0x03C39B60 BL 0x1C16CF4
	0x03C39B64 ADRP X0, 0x526000
	0x03C39B68 LDR X0, [X0 + 0x690]
	0x03C39B6C BL 0x1C16CF4
	0x03C39B70 MOVZ W8, 0x1
	0x03C39B74 STRB W8, [X21 + 0x5C8]
	0x03C39B78 LDR X0, [X23]
	0x03C39B7C BL 0x1C16F10
	0x03C39B80 LDR X2, [X22]
	0x03C39B84 MOVZ W1, 0x14
	0x03C39B88 MOV X21, X0
	0x03C39B8C BL 0x31670F8
	0x03C39B90 MOV X0, X20
	0x03C39B94 MOV X1, X31
	0x03C39B98 STR X21, [X20 + 0x20]
	0x03C39B9C STR W31, [X20 + 0x2C]
	0x03C39BA0 BL 0x33E59EC
	0x03C39BA4 LDR X0, [X23]
	0x03C39BA8 BL 0x1C16F10
	0x03C39BAC LDR X2, [X22]
	0x03C39BB0 MOVZ W1, 0x14
	0x03C39BB4 MOV X21, X0
	0x03C39BB8 BL 0x31670F8
	0x03C39BBC STR X21, [X20 + 0x18]
	0x03C39BC0 STR W19, [X20 + 0x28]
	0x03C39BC4 LDP X20, X19, [X31 + 0x20]
	0x03C39BC8 LDP X22, X21, [X31 + 0x10]
	0x03C39BCC LDP X30, X23, [X31], #0x30
	0x03C39BD0 RET
	0x03C39BD4 STR X30, [X31 - 0x40]!
	0x03C39BD8 STP X24, X23, [X31 + 0x10]
	0x03C39BDC STP X22, X21, [X31 + 0x20]
	0x03C39BE0 STP X20, X19, [X31 + 0x30]
	0x03C39BE4 ADRP X23, 0x7AC000
	0x03C39BE8 ADRP X24, 0x526000
	0x03C39BEC ADRP X22, 0x526000
	0x03C39BF0 LDRB W8, [X23 + 0x5C9]
	0x03C39BF4 LDR X24, [X24 + 0x690]
	0x03C39BF8 LDR X22, [X22 + 0x698]
	0x03C39BFC MOV W19, W2
	0x03C39C00 MOV X21, X1
	0x03C39C04 MOV X20, X0
	0x03C39C08 TBNZ X8, 0x0, 0x3C39C2C
	0x03C39C0C ADRP X0, 0x526000
	0x03C39C10 LDR X0, [X0 + 0x698]
	0x03C39C14 BL 0x1C16CF4
	0x03C39C18 ADRP X0, 0x526000
	0x03C39C1C LDR X0, [X0 + 0x690]
	0x03C39C20 BL 0x1C16CF4
	0x03C39C24 MOVZ W8, 0x1
	0x03C39C28 STRB W8, [X23 + 0x5C9]
	0x03C39C2C LDR X0, [X24]
	0x03C39C30 BL 0x1C16F10
	0x03C39C34 LDR X2, [X22]
	0x03C39C38 MOVZ W1, 0x14
	0x03C39C3C MOV X22, X0
	0x03C39C40 BL 0x31670F8
	0x03C39C44 MOV X0, X20
	0x03C39C48 MOV X1, X31
	0x03C39C4C STR X22, [X20 + 0x20]
	0x03C39C50 STR W31, [X20 + 0x2C]
	0x03C39C54 BL 0x33E59EC
	0x03C39C58 STR X21, [X20 + 0x18]
	0x03C39C5C STR W19, [X20 + 0x28]
	0x03C39C60 LDP X20, X19, [X31 + 0x30]
	0x03C39C64 LDP X22, X21, [X31 + 0x20]
	0x03C39C68 LDP X24, X23, [X31 + 0x10]
	0x03C39C6C LDR X30, [X31], #0x40
	0x03C39C70 RET
	0x03C39C74 SUB X31, X31, 0x50
	0x03C39C78 STP X30, X23, [X31 + 0x20]
	0x03C39C7C STP X22, X21, [X31 + 0x30]
	0x03C39C80 STP X20, X19, [X31 + 0x40]
	0x03C39C84 ADRP X19, 0x7AC000
	0x03C39C88 LDRB W8, [X19 + 0x5CA]
	0x03C39C8C MOV X20, X2
	0x03C39C90 MOV X22, X1
	0x03C39C94 MOV X23, X0
	0x03C39C98 TBNZ X8, 0x0, 0x3C39CC8
	0x03C39C9C ADRP X0, 0x4BA000
	0x03C39CA0 LDR X0, [X0 + 0xE00]
	0x03C39CA4 BL 0x1C16CF4
	0x03C39CA8 ADRP X0, 0x526000
	0x03C39CAC LDR X0, [X0 + 0x6A0]
	0x03C39CB0 BL 0x1C16CF4
	0x03C39CB4 ADRP X0, 0x4EB000
	0x03C39CB8 LDR X0, [X0 + 0x7C8]
	0x03C39CBC BL 0x1C16CF4
	0x03C39CC0 MOVZ W8, 0x1
	0x03C39CC4 STRB W8, [X19 + 0x5CA]
	0x03C39CC8 LDR W19, [X23 + 0x28]
	0x03C39CCC MOV X0, X31
	0x03C39CD0 BL 0x33E3C68
	0x03C39CD4 CBZ X0, 0x3C39E5C
	0x03C39CD8 MOV X1, X31
	0x03C39CDC BL 0x33E3CC4
	0x03C39CE0 CMP W19, W0
	0x03C39CE4 B.NE 0x3C39D04
	0x03C39CE8 CBZ X22, 0x3C39E5C
	0x03C39CEC LDR X8, [X22 + 0x18]
	0x03C39CF0 LDR X0, [X22 + 0x40]
	0x03C39CF4 LDR X2, [X22 + 0x28]
	0x03C39CF8 MOV X1, X20

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x7AD000
	013 Move X20, 0x4BB000
	014 Move W8, [X21+1268]
	015 Move X20, [X20+1432]
	016 Move V8, V6
	017 Move V9, V5
	018 Move V10, V4
	019 Move V11, V3
	020 Move V12, V2
	021 Move V13, V1
	022 Move V14, V0
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {39}
	028 Move X0, 0x4BB000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move X0, 0x527000
	032 Move X0, [X0+1616]
	033 Call 0x1C17CF4
	034 Move X0, 0x4E4000
	035 Move X0, [X0+456]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1268], W8
	039 Move X0, [X20]
	040 Move X21, 0x4E4000
	041 Move W8, [X0+224]
	042 Move X21, [X21+456]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X1, [X21]
	047 Move X0, X19
	048 Call Object.CheckNullArgument, X0, X1
	049 Compare X19, 0
	050 JumpIfEqual {62}
	051 Move X8, 0x527000
	052 Move X8, [X8+1616]
	053 Move X9, [X19]
	054 Move X8, [X8]
	055 Move W11, [X9+304]
	056 Move W10, [X8+304]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X9, [X9+200]
	059 Add X9, X9, X10
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X20]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move V0, V14
	069 Move V1, V13
	070 Move V2, V12
	071 Move V3, V11
	072 Move V4, V10
	073 Move V5, V9
	074 Move V6, V8
	075 Call Object.Internal_InstantiateSingle, X0, X1, X2
	076 Move X1, X31
	077 Move X19, X0
	078 Call Object.op_Equality, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {96}
	083 Move X0, X19
	084 Move X20, [X31+80]
	085 Move X19, [X31+88]
	086 Move X30, [X31+64]
	087 Move X21, [X31+72]
	088 Move D9, [X31+48]
	089 Move D8, [X31+56]
	090 Move D11, [X31+32]
	091 Move D10, [X31+40]
	092 Move D13, [X31+16]
	093 Move D12, [X31+24]
	094 Move V14, [X31+96]
	095 Return X0
	096 Move X0, 0x4E4000
	097 Move X0, [X0+464]
	098 Call 0x1C17D08
	099 Call 0x1C17F10
	100 Move X19, X0
	101 Move X0, 0x4E4000
	102 Move X0, [X0+472]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X19
	106 Call UnityException..ctor, X0, X1
	107 Move X0, 0x4C3000
	108 Move X0, [X0+1400]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0x527000
	113 Move X0, [X0+1624]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X19
	117 Move X2, X31
	118 Call ArgumentException..ctor, X0, X1
	119 Move X0, 0x527000
	120 Move X0, [X0+1632]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Call 0x1C17DEC

Method: UnityEngine.Object Instantiate(UnityEngine.Object original, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Transform parent)

Disassembly:
	0x03C39DE0 MOV X21, X31
	0x03C39DE4 ADRP X10, 0x4BA000
	0x03C39DE8 LDR X8, [X19]
	0x03C39DEC LDR X10, [X10 + 0xE00]
	0x03C39DF0 LDRH W9, [X8 + 0x12E]
	0x03C39DF4 LDR X1, [X10]
	0x03C39DF8 CBZ X9, 0x3C39E1C
	0x03C39DFC LDR X10, [X8 + 0xB0]
	0x03C39E00 ADD X10, X10, 0x8
	0x03C39E04 LDUR X11, [X10 - 0x8]
	0x03C39E08 CMP X11, X1
	0x03C39E0C B.EQ 0x3C39E2C
	0x03C39E10 SUBS X9, X9, 0x1
	0x03C39E14 ADD X10, X10, 0x10
	0x03C39E18 B.NE 0x3C39E04
	0x03C39E1C MOV X0, X19
	0x03C39E20 MOV W2, W31
	0x03C39E24 BL 0x1C5C788
	0x03C39E28 B 0x3C39E38
	0x03C39E2C LDRSW X9, [X10]
	0x03C39E30 ADD X8, X8, X9, 0x4, LSL
	0x03C39E34 ADD X0, X8, 0x138
	0x03C39E38 LDP X8, X1, [X0]
	0x03C39E3C MOV X0, X19
	0x03C39E40 BLR X8
	0x03C39E44 CBNZ X21, 0x3C39E60
	0x03C39E48 LDP X20, X19, [X31 + 0x40]
	0x03C39E4C LDP X22, X21, [X31 + 0x30]
	0x03C39E50 LDP X30, X23, [X31 + 0x20]
	0x03C39E54 ADD X31, X31, 0x50
	0x03C39E58 RET
	0x03C39E5C BL 0x1C16F20
	0x03C39E60 MOV X0, X21
	0x03C39E64 BL 0x1C16F18
	0x03C39E68 BL 0x1C16F20
	0x03C39E6C BL 0x1C16F20
	0x03C39E70 MOV X0, X23
	0x03C39E74 BL 0x1C16F18
	0x03C39E78 BL 0x1C16F20
	0x03C39E7C B 0x3C39E88
	0x03C39E80 B 0x3C39E88
	0x03C39E84 B 0x3C39E94
	0x03C39E88 MOV X22, X1
	0x03C39E8C MOV X20, X0
	0x03C39E90 B 0x3C39ED4
	0x03C39E94 MOV X22, X1
	0x03C39E98 MOV X20, X0
	0x03C39E9C CMP W22, 0x1
	0x03C39EA0 B.NE 0x3C39EB8
	0x03C39EA4 MOV X0, X20
	0x03C39EA8 BL 0x3EB1AD0
	0x03C39EAC LDR X23, [X0]
	0x03C39EB0 BL 0x3EB1AE0
	0x03C39EB4 B 0x3C39DB4
	0x03C39EB8 MOV X23, X31
	0x03C39EBC LDRB W8, [X31 + 0x4]
	0x03C39EC0 CBZ W8, 0x3C39ED0
	0x03C39EC4 MOV X0, X21
	0x03C39EC8 MOV X1, X31
	0x03C39ECC BL 0x33E14E4
	0x03C39ED0 CBNZ X23, 0x3C39EFC
	0x03C39ED4 CMP W22, 0x1
	0x03C39ED8 B.NE 0x3C39EF4
	0x03C39EDC MOV X0, X20
	0x03C39EE0 BL 0x3EB1AD0
	0x03C39EE4 LDR X21, [X0]
	0x03C39EE8 BL 0x3EB1AE0
	0x03C39EEC CBNZ X19, 0x3C39DE4
	0x03C39EF0 B 0x3C39E44
	0x03C39EF4 MOV X21, X31
	0x03C39EF8 B 0x3C39F14
	0x03C39EFC MOV X0, X23
	0x03C39F00 BL 0x1C16F18
	0x03C39F04 MOV X22, X1
	0x03C39F08 MOV X20, X0
	0x03C39F0C B 0x3C39EBC
	0x03C39F10 MOV X20, X0
	0x03C39F14 CBZ X19, 0x3C39F78
	0x03C39F18 ADRP X10, 0x4BA000
	0x03C39F1C LDR X8, [X19]
	0x03C39F20 LDR X10, [X10 + 0xE00]
	0x03C39F24 LDRH W9, [X8 + 0x12E]
	0x03C39F28 LDR X1, [X10]
	0x03C39F2C CBZ X9, 0x3C39F50
	0x03C39F30 LDR X10, [X8 + 0xB0]
	0x03C39F34 ADD X10, X10, 0x8
	0x03C39F38 LDUR X11, [X10 - 0x8]
	0x03C39F3C CMP X11, X1
	0x03C39F40 B.EQ 0x3C39F60
	0x03C39F44 SUBS X9, X9, 0x1
	0x03C39F48 ADD X10, X10, 0x10
	0x03C39F4C B.NE 0x3C39F38
	0x03C39F50 MOV X0, X19
	0x03C39F54 MOV W2, W31
	0x03C39F58 BL 0x1C5C788
	0x03C39F5C B 0x3C39F6C
	0x03C39F60 LDRSW X9, [X10]
	0x03C39F64 ADD X8, X8, X9, 0x4, LSL
	0x03C39F68 ADD X0, X8, 0x138
	0x03C39F6C LDP X8, X1, [X0]
	0x03C39F70 MOV X0, X19
	0x03C39F74 BLR X8
	0x03C39F78 CBNZ X21, 0x3C39F84
	0x03C39F7C MOV X0, X20
	0x03C39F80 BL 0x1D2C690

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x7AD000
	014 Move X21, 0x4BB000
	015 Move W8, [X22+1269]
	016 Move X21, [X21+1432]
	017 Move X19, X1
	018 Move V8, V6
	019 Move V9, V5
	020 Move V10, V4
	021 Move V11, V3
	022 Move V12, V2
	023 Move V13, V1
	024 Move V14, V0
	025 Move X20, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x4BB000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x4E4000
	034 Move X0, [X0+456]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+1269], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X1, X31
	045 Call Object.op_Equality, X0, X1
	046 Move X8, [X21]
	047 Move W21, W0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfEqual {77}
	051 Move TEMP, X21
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {83}
	055 Move X0, X20
	056 Move V1, V13
	057 Move V2, V12
	058 Move V3, V11
	059 Move V4, V10
	060 Move V5, V9
	061 Move V6, V8
	062 Move X20, [X31+80]
	063 Move X19, [X31+88]
	064 Move X22, [X31+64]
	065 Move X21, [X31+72]
	066 Move X30, [X31+56]
	067 Move D9, [X31+40]
	068 Move D8, [X31+48]
	069 Move D11, [X31+24]
	070 Move D10, [X31+32]
	071 Move D13, [X31+8]
	072 Move D12, [X31+16]
	073 Move V0, V14
	074 Move V14, [X31+96]
	075 Call Object.Instantiate, X0, X1, X2
	076 Return X0
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move TEMP, X21
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {55}
	083 Move X8, 0x4E4000
	084 Move X8, [X8+456]
	085 Move X0, X20
	086 Move X1, [X8]
	087 Call Object.CheckNullArgument, X0, X1
	088 Move X0, X20
	089 Move X1, X19
	090 Move V0, V14
	091 Move V1, V13
	092 Move V2, V12
	093 Move V3, V11
	094 Move V4, V10
	095 Move V5, V9
	096 Move V6, V8
	097 Call Object.Internal_InstantiateSingleWithParent, X0, X1, X2, X3
	098 Move X1, X31
	099 Move X19, X0
	100 Call Object.op_Equality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {119}
	105 Move X0, X19
	106 Move X20, [X31+80]
	107 Move X19, [X31+88]
	108 Move X22, [X31+64]
	109 Move X21, [X31+72]
	110 Move X30, [X31+56]
	111 Move D9, [X31+40]
	112 Move D8, [X31+48]
	113 Move D11, [X31+24]
	114 Move D10, [X31+32]
	115 Move D13, [X31+8]
	116 Move D12, [X31+16]
	117 Move V14, [X31+96]
	118 Return X0
	119 Move X0, 0x4E4000
	120 Move X0, [X0+464]
	121 Call 0x1C17D08
	122 Call 0x1C17F10
	123 Move X19, X0
	124 Move X0, 0x4E4000
	125 Move X0, [X0+472]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X19
	129 Call UnityException..ctor, X0, X1
	130 Move X0, 0x527000
	131 Move X0, [X0+1648]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X19
	135 Call 0x1C17DEC

Method: UnityEngine.Object Instantiate(UnityEngine.Object original)

Disassembly:
	0x03C3A02C CBZ X8, 0x3C3A0B8
	0x03C3A030 LDRSW X10, [X0 + 0x18]
	0x03C3A034 LDR W11, [X8 + 0x18]
	0x03C3A038 CMP W10, W11
	0x03C3A03C B.CS 0x3C3A060
	0x03C3A040 MOVZ W11, 0x18
	0x03C3A044 ADD W9, W10, 0x1
	0x03C3A048 MADD X8, X10, X11, X8
	0x03C3A04C MOV X20, X31
	0x03C3A050 STR W9, [X0 + 0x18]
	0x03C3A054 STP X22, X21, [X8 + 0x20]
	0x03C3A058 STR X31, [X8 + 0x30]
	0x03C3A05C B 0x3C3A080
	0x03C3A060 LDR X8, [X9 + 0x20]
	0x03C3A064 LDR X8, [X8 + 0xC0]
	0x03C3A068 LDR X2, [X8 + 0x70]
	0x03C3A06C STP X22, X21, [X31 + 0x8]
	0x03C3A070 STR X31, [X31 + 0x18]
	0x03C3A074 ADD X1, X31, 0x8
	0x03C3A078 BL 0x3167930
	0x03C3A07C MOV X20, X31
	0x03C3A080 LDRB W8, [X31 + 0x2C]
	0x03C3A084 CBZ W8, 0x3C3A094
	0x03C3A088 MOV X0, X19
	0x03C3A08C MOV X1, X31
	0x03C3A090 BL 0x33E14E4
	0x03C3A094 CBNZ X20, 0x3C3A0AC
	0x03C3A098 LDP X20, X19, [X31 + 0x40]
	0x03C3A09C LDP X22, X21, [X31 + 0x30]
	0x03C3A0A0 LDR X30, [X31 + 0x20]
	0x03C3A0A4 ADD X31, X31, 0x50
	0x03C3A0A8 RET
	0x03C3A0AC MOV X0, X20
	0x03C3A0B0 BL 0x1C16F18
	0x03C3A0B4 BL 0x1C16F20
	0x03C3A0B8 BL 0x1C16F20
	0x03C3A0BC B 0x3C3A0C0
	0x03C3A0C0 MOV X21, X0
	0x03C3A0C4 CMP W1, 0x1
	0x03C3A0C8 B.NE 0x3C3A0E0
	0x03C3A0CC MOV X0, X21
	0x03C3A0D0 BL 0x3EB1AD0
	0x03C3A0D4 LDR X20, [X0]
	0x03C3A0D8 BL 0x3EB1AE0
	0x03C3A0DC B 0x3C3A080
	0x03C3A0E0 MOV X20, X31
	0x03C3A0E4 B 0x3C3A0EC
	0x03C3A0E8 MOV X21, X0
	0x03C3A0EC LDRB W8, [X31 + 0x2C]
	0x03C3A0F0 CBZ W8, 0x3C3A100
	0x03C3A0F4 MOV X0, X19
	0x03C3A0F8 MOV X1, X31
	0x03C3A0FC BL 0x33E14E4
	0x03C3A100 CBNZ X20, 0x3C3A10C
	0x03C3A104 MOV X0, X21
	0x03C3A108 BL 0x1D2C690
	0x03C3A10C MOV X0, X20
	0x03C3A110 BL 0x1C16F18
	0x03C3A114 BL 0x1990590
	0x03C3A118 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AC000
	006 Move X20, 0x4BA000
	007 Move W8, [X21+1270]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4BA000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x4E3000
	018 Move X0, [X0+456]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1270], W8
	022 Move X0, [X20]
	023 Move X20, 0x4E3000
	024 Move W8, [X0+224]
	025 Move X20, [X20+456]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call Object.CheckNullArgument, X0, X1
	032 Move X20, 0x7AC000
	033 Move X8, [X20+1368]
	034 Compare X8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, -51507200
	037 Add X0, X0, 3463
	038 Call 0x1C17CB8
	039 Move X8, X0
	040 Move [X20+1368], X0
	041 Move X0, X19
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X1, X31
	044 Move X19, X0
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {56}
	050 Move X0, X19
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Move X0, 0x4E3000
	057 Move X0, [X0+464]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x4E3000
	062 Move X0, [X0+472]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Call UnityException..ctor, X0, X1
	067 Move X0, 0x526000
	068 Move X0, [X0+1656]
	069 Call 0x1C17D08
	070 Move X1, X0
	071 Move X0, X19
	072 Call 0x1C17DEC

Method: UnityEngine.Object Instantiate(UnityEngine.Object original, UnityEngine.SceneManagement.Scene scene)

Disassembly:
	0x03C3A158 BL 0x1C16F10
	0x03C3A15C MOV X1, X20
	0x03C3A160 MOV W2, W19
	0x03C3A164 MOV X21, X0
	0x03C3A168 BL 0x3C39BD4
	0x03C3A16C LDP X20, X19, [X31 + 0x10]
	0x03C3A170 MOV X0, X21
	0x03C3A174 LDP X30, X21, [X31], #0x20
	0x03C3A178 RET
	0x03C3A17C SUB X31, X31, 0x70
	0x03C3A180 STR X30, [X31 + 0x40]
	0x03C3A184 STP X22, X21, [X31 + 0x50]
	0x03C3A188 STP X20, X19, [X31 + 0x60]
	0x03C3A18C ADRP X20, 0x7AB000
	0x03C3A190 LDRB W8, [X20 + 0x5CD]
	0x03C3A194 MOV X19, X0
	0x03C3A198 TBNZ X8, 0x0, 0x3C3A1E0
	0x03C3A19C ADRP X0, 0x525000
	0x03C3A1A0 LDR X0, [X0 + 0x6B0]
	0x03C3A1A4 BL 0x1C16CF4
	0x03C3A1A8 ADRP X0, 0x525000
	0x03C3A1AC LDR X0, [X0 + 0x6B8]
	0x03C3A1B0 BL 0x1C16CF4
	0x03C3A1B4 ADRP X0, 0x525000
	0x03C3A1B8 LDR X0, [X0 + 0x6C0]
	0x03C3A1BC BL 0x1C16CF4
	0x03C3A1C0 ADRP X0, 0x525000
	0x03C3A1C4 LDR X0, [X0 + 0x6C8]
	0x03C3A1C8 BL 0x1C16CF4
	0x03C3A1CC ADRP X0, 0x525000
	0x03C3A1D0 LDR X0, [X0 + 0x6D0]
	0x03C3A1D4 BL 0x1C16CF4
	0x03C3A1D8 MOVZ W8, 0x1
	0x03C3A1DC STRB W8, [X20 + 0x5CD]
	0x03C3A1E0 STP X31, X31, [X31 + 0x20]
	0x03C3A1E4 STR X31, [X31 + 0x30]
	0x03C3A1E8 LDR X20, [X19 + 0x18]
	0x03C3A1EC STRB W31, [X31 + 0x4C]
	0x03C3A1F0 ADD X1, X31, 0x4C
	0x03C3A1F4 MOV X0, X20
	0x03C3A1F8 MOV X2, X31
	0x03C3A1FC BL 0x33DE64C
	0x03C3A200 LDR X0, [X19 + 0x20]
	0x03C3A204 CBZ X0, 0x3C3A2F4
	0x03C3A208 ADRP X8, 0x525000
	0x03C3A20C LDR X8, [X8 + 0x6B0]
	0x03C3A210 LDR X1, [X19 + 0x18]
	0x03C3A214 LDR X2, [X8]
	0x03C3A218 BL 0x3167BB4
	0x03C3A21C LDR X8, [X19 + 0x18]
	0x03C3A220 CBZ X8, 0x3C3A2F8
	0x03C3A224 LDP W2, W9, [X8 + 0x18]
	0x03C3A228 ADD W9, W9, 0x1
	0x03C3A22C CMP W2, 0x1
	0x03C3A230 STP W31, W9, [X8 + 0x18]
	0x03C3A234 B.LT 0x3C3A250

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7AC000
	007 Move X21, 0x4BA000
	008 Move W8, [X22+1271]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4BA000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x4E3000
	020 Move X0, [X0+456]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1271], W8
	024 Move X0, [X21]
	025 Move X21, 0x4E3000
	026 Move W8, [X0+224]
	027 Move X21, [X21+456]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X1, [X21]
	032 Move X0, X19
	033 Call Object.CheckNullArgument, X0, X1
	034 And X1, X20, 0
	035 Move X0, X19
	036 Call Object.Internal_CloneSingleWithScene, X0, X1
	037 Move X1, X31
	038 Move X19, X0
	039 Call Object.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {51}
	044 Move X0, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return X0
	051 Move X0, 0x4E3000
	052 Move X0, [X0+464]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0x4E3000
	057 Move X0, [X0+472]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call UnityException..ctor, X0, X1
	062 Move X0, 0x526000
	063 Move X0, [X0+1664]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Call 0x1C17DEC

Method: UnityEngine.Object Instantiate(UnityEngine.Object original, UnityEngine.Transform parent, System.Boolean instantiateInWorldSpace)

Disassembly:
	0x03C3A2C0 BL 0x3169918
	0x03C3A2C4 ADD X0, X31, 0x20
	0x03C3A2C8 BL 0x3C3A35C
	0x03C3A2CC LDR X0, [X19 + 0x20]
	0x03C3A2D0 CBNZ X0, 0x3C3A284
	0x03C3A2D4 BL 0x1C16F20
	0x03C3A2D8 LDP X20, X19, [X31 + 0x60]
	0x03C3A2DC LDP X22, X21, [X31 + 0x50]
	0x03C3A2E0 LDR X30, [X31 + 0x40]
	0x03C3A2E4 ADD X31, X31, 0x70
	0x03C3A2E8 RET
	0x03C3A2EC MOV X0, X21
	0x03C3A2F0 BL 0x1C16F18
	0x03C3A2F4 BL 0x1C16F20
	0x03C3A2F8 BL 0x1C16F20
	0x03C3A2FC B 0x3C3A304
	0x03C3A300 B 0x3C3A304
	0x03C3A304 MOV X22, X0
	0x03C3A308 CMP W1, 0x1
	0x03C3A30C B.NE 0x3C3A324
	0x03C3A310 MOV X0, X22
	0x03C3A314 BL 0x3EB1AD0
	0x03C3A318 LDR X21, [X0]
	0x03C3A31C BL 0x3EB1AE0
	0x03C3A320 B 0x3C3A254
	0x03C3A324 MOV X21, X31
	0x03C3A328 B 0x3C3A330
	0x03C3A32C MOV X22, X0
	0x03C3A330 LDRB W8, [X31 + 0x4C]
	0x03C3A334 CBZ W8, 0x3C3A344
	0x03C3A338 MOV X0, X20
	0x03C3A33C MOV X1, X31
	0x03C3A340 BL 0x33E14E4
	0x03C3A344 CBNZ X21, 0x3C3A350
	0x03C3A348 MOV X0, X22
	0x03C3A34C BL 0x1D2C690
	0x03C3A350 MOV X0, X21
	0x03C3A354 BL 0x1C16F18
	0x03C3A358 BL 0x1990590
	0x03C3A35C STP X30, X21, [X31 - 0x20]!
	0x03C3A360 STP X20, X19, [X31 + 0x10]
	0x03C3A364 LDR X8, [X0]
	0x03C3A368 MOV X19, X0
	0x03C3A36C CBZ X8, 0x3C3A3A8
	0x03C3A370 LDR X1, [X19 + 0x8]
	0x03C3A374 LDR X0, [X8 + 0x40]
	0x03C3A378 LDR X9, [X8 + 0x18]
	0x03C3A37C LDR X2, [X8 + 0x28]
	0x03C3A380 BLR X9
	0x03C3A384 MOV X20, X31
	0x03C3A388 LDR X0, [X19 + 0x10]
	0x03C3A38C CBZ X0, 0x3C3A398
	0x03C3A390 MOV X1, X31
	0x03C3A394 BL 0x33DE66C
	0x03C3A398 CBNZ X20, 0x3C3A3AC
	0x03C3A39C LDP X20, X19, [X31 + 0x10]
	0x03C3A3A0 LDP X30, X21, [X31], #0x20
	0x03C3A3A4 RET
	0x03C3A3A8 BL 0x1C16F20
	0x03C3A3AC MOV X0, X20
	0x03C3A3B0 BL 0x1C16F18
	0x03C3A3B4 CMP W1, 0x1
	0x03C3A3B8 MOV X21, X0
	0x03C3A3BC B.NE 0x3C3A3D4
	0x03C3A3C0 MOV X0, X21
	0x03C3A3C4 BL 0x3EB1AD0
	0x03C3A3C8 LDR X20, [X0]
	0x03C3A3CC BL 0x3EB1AE0
	0x03C3A3D0 B 0x3C3A388
	0x03C3A3D4 MOV X20, X31
	0x03C3A3D8 B 0x3C3A3E0
	0x03C3A3DC MOV X21, X0
	0x03C3A3E0 LDR X0, [X19 + 0x10]
	0x03C3A3E4 CBZ X0, 0x3C3A3F0
	0x03C3A3E8 MOV X1, X31
	0x03C3A3EC BL 0x33DE66C
	0x03C3A3F0 CBNZ X20, 0x3C3A3FC
	0x03C3A3F4 MOV X0, X21
	0x03C3A3F8 BL 0x1D2C690
	0x03C3A3FC MOV X0, X20
	0x03C3A400 BL 0x1C16F18
	0x03C3A404 BL 0x1990590

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7AC000
	008 Move X22, 0x4BA000
	009 Move W8, [X23+1272]
	010 Move X22, [X22+1432]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4BA000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x4E3000
	022 Move X0, [X0+456]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1272], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Call Object.op_Equality, X0, X1
	034 Move X8, [X22]
	035 Move W22, W0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfEqual {52}
	039 Move TEMP, X22
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {58}
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call Object.Instantiate, X0
	051 Return X0
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move TEMP, X22
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {43}
	058 Move X8, 0x4E3000
	059 Move X8, [X8+456]
	060 Move X0, X20
	061 Move X1, [X8]
	062 Call Object.CheckNullArgument, X0, X1
	063 Move X22, 0x7AC000
	064 Move X8, [X22+1384]
	065 Compare X8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, -51609600
	068 Add X0, X0, 146
	069 Call 0x1C17CB8
	070 Move X8, X0
	071 Move [X22+1384], X0
	072 And W2, W21, 1
	073 Move X0, X20
	074 Move X1, X19
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move X1, X31
	077 Move X19, X0
	078 Call Object.op_Equality, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {91}
	083 Move X0, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 Move X23, [X31+56]
	090 Return X0
	091 Move X0, 0x4E3000
	092 Move X0, [X0+464]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X19, X0
	096 Move X0, 0x4E3000
	097 Move X0, [X0+472]
	098 Call 0x1C17D08
	099 Move X1, X0
	100 Move X0, X19
	101 Call UnityException..ctor, X0, X1
	102 Move X0, 0x526000
	103 Move X0, [X0+1672]
	104 Call 0x1C17D08
	105 Move X1, X0
	106 Move X0, X19
	107 Call 0x1C17DEC

Method: T Instantiate(T original)

Disassembly:
	0x0222E35C ADD X10, X10, 0x8
	0x0222E360 LDUR X11, [X10 - 0x8]
	0x0222E364 CMP X11, X1
	0x0222E368 B.EQ 0x222E388
	0x0222E36C SUBS X9, X9, 0x1
	0x0222E370 ADD X10, X10, 0x10
	0x0222E374 B.NE 0x222E360
	0x0222E378 MOV X0, X19
	0x0222E37C MOV W2, W31
	0x0222E380 BL 0x1C5C788
	0x0222E384 B 0x222E394
	0x0222E388 LDRSW X9, [X10]
	0x0222E38C ADD X8, X8, X9, 0x4, LSL
	0x0222E390 ADD X0, X8, 0x138
	0x0222E394 LDP X8, X1, [X0]
	0x0222E398 MOV X0, X19
	0x0222E39C BLR X8
	0x0222E3A0 CBNZ X20, 0x222E3E4
	0x0222E3A4 LDR X8, [X27 + 0x28]
	0x0222E3A8 LDUR X9, [X29 - 0x8]
	0x0222E3AC CMP X8, X9
	0x0222E3B0 B.NE 0x222E3EC
	0x0222E3B4 ADD X31, X29, 0x0
	0x0222E3B8 LDP X20, X19, [X31 + 0x50]
	0x0222E3BC LDP X22, X21, [X31 + 0x40]
	0x0222E3C0 LDP X24, X23, [X31 + 0x30]
	0x0222E3C4 LDP X26, X25, [X31 + 0x20]
	0x0222E3C8 LDP X28, X27, [X31 + 0x10]
	0x0222E3CC LDP X29, X30, [X31], #0x60
	0x0222E3D0 RET
	0x0222E3D4 BL 0x1C16F20
	0x0222E3D8 BL 0x1C16F20
	0x0222E3DC BL 0x1C16F20
	0x0222E3E0 BL 0x1C16F20
	0x0222E3E4 MOV X0, X20
	0x0222E3E8 BL 0x1C16F18
	0x0222E3EC BL 0x3EB1B20
	0x0222E3F0 B 0x222E404
	0x0222E3F4 B 0x222E404
	0x0222E3F8 B 0x222E404
	0x0222E3FC B 0x222E404
	0x0222E400 B 0x222E404
	0x0222E404 MOV X21, X0
	0x0222E408 CMP W1, 0x1
	0x0222E40C B.NE 0x222E424
	0x0222E410 MOV X0, X21
	0x0222E414 BL 0x3EB1AD0
	0x0222E418 LDR X20, [X0]
	0x0222E41C BL 0x3EB1AE0
	0x0222E420 B 0x222E33C
	0x0222E424 MOV X20, X31
	0x0222E428 B 0x222E430
	0x0222E42C MOV X21, X0
	0x0222E430 CBZ X19, 0x222E494
	0x0222E434 ADRP X10, 0x1EC5000
	0x0222E438 LDR X8, [X19]
	0x0222E43C LDR X10, [X10 + 0xE00]
	0x0222E440 LDRH W9, [X8 + 0x12E]
	0x0222E444 LDR X1, [X10]
	0x0222E448 CBZ X9, 0x222E46C
	0x0222E44C LDR X10, [X8 + 0xB0]
	0x0222E450 ADD X10, X10, 0x8
	0x0222E454 LDUR X11, [X10 - 0x8]
	0x0222E458 CMP X11, X1
	0x0222E45C B.EQ 0x222E47C
	0x0222E460 SUBS X9, X9, 0x1
	0x0222E464 ADD X10, X10, 0x10
	0x0222E468 B.NE 0x222E454
	0x0222E46C MOV X0, X19
	0x0222E470 MOV W2, W31
	0x0222E474 BL 0x1C5C788
	0x0222E478 B 0x222E488
	0x0222E47C LDRSW X9, [X10]
	0x0222E480 ADD X8, X8, X9, 0x4, LSL
	0x0222E484 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {22}
	011 Move X0, 0x1EC6000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move X0, 0x1EEF000
	015 Move X0, [X0+456]
	016 Call 0x1C17CF4
	017 Move X8, [X19+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Move X8, 0x1EC6000
	023 Move X8, [X8+1432]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X8, 0x1EEF000
	030 Move X8, [X8+456]
	031 Move X0, X20
	032 Move X2, X31
	033 Move X1, [X8]
	034 Call Object.CheckNullArgument, X0, X1
	035 Move X0, X20
	036 Move X1, X31
	037 Call Object.Internal_CloneSingle, X0
	038 Move X8, [X19+56]
	039 Move X21, X0
	040 Move X20, [X8]
	041 Move W8, [X20+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {49}
	046 Move X0, X20
	047 Call 0x1C5D684
	048 Move X20, X0
	049 Compare X21, 0
	050 JumpIfEqual {60}
	051 Move X0, X21
	052 Move X1, X20
	053 Call 0x1C17E00
	054 Move X22, X0
	055 Compare X0, 0
	056 JumpIfNotEqual {61}
	057 Move X0, X21
	058 Move X1, X20
	059 Call 0x1C181E0
	060 Move X22, X31
	061 Move X0, X22
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {76}
	069 Move X0, X22
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return X0
	076 Move X0, 0x1EEF000
	077 Move X0, [X0+464]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X20, X0
	081 Move X0, 0x1EEF000
	082 Move X0, [X0+472]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X20
	086 Move X2, X31
	087 Call UnityException..ctor, X0, X1
	088 Move X0, X20
	089 Move X1, X19
	090 Call 0x1C17DEC

Method: T Instantiate(T original, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x0222E5B8 LDP X30, X23, [X31], #0x30
	0x0222E5BC RET
	0x0222E5C0 CBZ X20, 0x222E5E0
	0x0222E5C4 LDR X8, [X19 + 0x38]
	0x0222E5C8 MOV X0, X20
	0x0222E5CC LDP X20, X19, [X31 + 0x20]
	0x0222E5D0 LDP X22, X21, [X31 + 0x10]
	0x0222E5D4 LDR X1, [X8 + 0x10]
	0x0222E5D8 LDP X30, X23, [X31], #0x30
	0x0222E5DC B 0x26103BC
	0x0222E5E0 BL 0x1C16F20
	0x0222E5E4 BL 0x1C16F28
	0x0222E5E8 STP X29, X30, [X31 - 0x60]!
	0x0222E5EC STR X27, [X31 + 0x10]
	0x0222E5F0 STP X26, X25, [X31 + 0x20]
	0x0222E5F4 STP X24, X23, [X31 + 0x30]
	0x0222E5F8 STP X22, X21, [X31 + 0x40]
	0x0222E5FC STP X20, X19, [X31 + 0x50]
	0x0222E600 ADD X29, X31, 0x0
	0x0222E604 SUB X31, X31, 0x20
	0x0222E608 MRS X25, 0xC000
	0x0222E60C LDR X8, [X25 + 0x28]
	0x0222E610 MOV X20, X2
	0x0222E614 MOV X21, X1
	0x0222E618 MOV X19, X0
	0x0222E61C STUR X8, [X29 - 0x8]
	0x0222E620 LDR X8, [X2 + 0x38]
	0x0222E624 CBNZ X8, 0x222E634
	0x0222E628 MOV X0, X20
	0x0222E62C BL 0x1C5C6E0
	0x0222E630 LDR X8, [X20 + 0x38]
	0x0222E634 LDR X9, [X8 + 0x38]
	0x0222E638 LDR W22, [X9 + 0xFC]
	0x0222E63C ADD X9, X31, 0x0
	0x0222E640 ADD X10, X22, 0xF
	0x0222E644 AND X10, X10, 0x1FFFFFFFF
	0x0222E648 SUB X23, X9, X10
	0x0222E64C ADD X31, X23, 0x0
	0x0222E650 CBZ X21, 0x222E798
	0x0222E654 LDR X9, [X21 + 0x18]
	0x0222E658 CBZ X9, 0x222E798
	0x0222E65C CBZ X19, 0x222E7DC
	0x0222E660 LDR X1, [X8 + 0x18]
	0x0222E664 MOV X0, X19
	0x0222E668 LDR X8, [X1]
	0x0222E66C BLR X8
	0x0222E670 LDR W8, [X21 + 0x18]
	0x0222E674 CMP W0, W8
	0x0222E678 B.LE 0x222E6B0
	0x0222E67C LDR X8, [X20 + 0x38]
	0x0222E680 MOV X0, X19
	0x0222E684 LDR X1, [X8 + 0x18]
	0x0222E688 LDR X8, [X1]
	0x0222E68C BLR X8
	0x0222E690 LDR X8, [X20 + 0x38]
	0x0222E694 LDR W1, [X21 + 0x18]
	0x0222E698 LDR X3, [X8 + 0x20]
	0x0222E69C SUB W2, W0, W1
	0x0222E6A0 MOV X0, X19
	0x0222E6A4 LDR X8, [X3]
	0x0222E6A8 BLR X8
	0x0222E6AC LDR W8, [X21 + 0x18]
	0x0222E6B0 CMP W8, 0x1
	0x0222E6B4 B.LT 0x222E7AC

ISIL:
	001 Move [X31-80], D14
	002 Move [X31+8], D13
	003 Move [X31+16], D12
	004 Move [X31+24], D11
	005 Move [X31+32], D10
	006 Move [X31+40], D9
	007 Move [X31+48], D8
	008 Move [X31+56], X30
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X1+56]
	012 Move X19, X1
	013 Move V8, V6
	014 Move V9, V5
	015 Move V10, V4
	016 Move V11, V3
	017 Move V12, V2
	018 Move V13, V1
	019 Move V14, V0
	020 Move X20, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {31}
	023 Move X0, 0x1EC6000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X8, [X19+56]
	027 Compare X8, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X19
	030 Call 0x1C5D6E0
	031 Move X8, 0x1EC6000
	032 Move X8, [X8+1432]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move V0, V14
	040 Move V1, V13
	041 Move V2, V12
	042 Move V3, V11
	043 Move V4, V10
	044 Move V5, V9
	045 Move V6, V8
	046 Move X1, X31
	047 Call Object.Instantiate, X0, X1, X2
	048 Move X8, [X19+56]
	049 Move X20, X0
	050 Move X19, [X8]
	051 Move W8, [X19+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {59}
	056 Move X0, X19
	057 Call 0x1C5D684
	058 Move X19, X0
	059 Compare X20, 0
	060 JumpIfEqual {69}
	061 Move X0, X20
	062 Move X1, X19
	063 Call 0x1C17E00
	064 Compare X0, 0
	065 JumpIfNotEqual {70}
	066 Move X0, X20
	067 Move X1, X19
	068 Call 0x1C181E0
	069 Move X0, X31
	070 Move X20, [X31+64]
	071 Move X19, [X31+72]
	072 Move X30, [X31+56]
	073 Move D9, [X31+40]
	074 Move D8, [X31+48]
	075 Move D11, [X31+24]
	076 Move D10, [X31+32]
	077 Move D13, [X31+8]
	078 Move D12, [X31+16]
	079 Move V14, [X31+80]
	080 Return X0

Method: T Instantiate(T original, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Transform parent)

Disassembly:
	0x0222E6B8 MOV X26, X31
	0x0222E6BC SUB X27, X29, 0xC
	0x0222E6C0 LDR X8, [X20 + 0x38]
	0x0222E6C4 MOV X0, X19
	0x0222E6C8 LDR X1, [X8 + 0x18]
	0x0222E6CC LDR X8, [X1]
	0x0222E6D0 BLR X8
	0x0222E6D4 LDR X8, [X20 + 0x38]
	0x0222E6D8 CMP X26, W0, SXTW
	0x0222E6DC B.GE 0x222E700
	0x0222E6E0 LDR X1, [X8 + 0x28]
	0x0222E6E4 SUB X3, X29, 0x20
	0x0222E6E8 SUB X4, X29, 0x18
	0x0222E6EC MOV X2, X19
	0x0222E6F0 LDR X0, [X1]
	0x0222E6F4 STUR W26, [X29 - 0xC]
	0x0222E6F8 STUR X27, [X29 - 0x20]
	0x0222E6FC B 0x222E714
	0x0222E700 LDR X1, [X8 + 0x48]
	0x0222E704 SUB X4, X29, 0x18
	0x0222E708 MOV X2, X19
	0x0222E70C MOV X3, X31
	0x0222E710 LDR X0, [X1]
	0x0222E714 LDR X8, [X1 + 0x10]
	0x0222E718 BLR X8
	0x0222E71C LDR W8, [X21 + 0x18]
	0x0222E720 CMP X26, X8
	0x0222E724 B.CS 0x222E7E0
	0x0222E728 LDR X8, [X21]
	0x0222E72C LDUR X24, [X29 - 0x18]
	0x0222E730 MOV X0, X23
	0x0222E734 MOV X2, X22
	0x0222E738 LDR W8, [X8 + 0x104]
	0x0222E73C NOP
	0x0222E740 MADD X8, X26, X8, X21
	0x0222E744 ADD X1, X8, 0x20
	0x0222E748 BL 0x3EB1AC0
	0x0222E74C CBZ X24, 0x222E7DC
	0x0222E750 LDR X8, [X20 + 0x38]
	0x0222E754 MOV X4, X23
	0x0222E758 LDR X9, [X8 + 0x38]
	0x0222E75C LDR W9, [X9 + 0x28]
	0x0222E760 TBNZ X9, 0x1F, 0x222E768
	0x0222E764 LDR X4, [X23]
	0x0222E768 LDR X1, [X8 + 0x40]
	0x0222E76C SUB X3, X29, 0x20
	0x0222E770 MOV X2, X24
	0x0222E774 LDR X0, [X1]
	0x0222E778 STUR X4, [X29 - 0x20]
	0x0222E77C LDR X8, [X1 + 0x10]
	0x0222E780 BLR X8
	0x0222E784 LDRSW X8, [X21 + 0x18]
	0x0222E788 ADD X26, X26, 0x1
	0x0222E78C CMP X26, X8
	0x0222E790 B.LT 0x222E6C0
	0x0222E794 B 0x222E7AC
	0x0222E798 CBZ X19, 0x222E7DC
	0x0222E79C LDR X1, [X8 + 0x10]
	0x0222E7A0 MOV X0, X19
	0x0222E7A4 LDR X8, [X1]
	0x0222E7A8 BLR X8
	0x0222E7AC LDR X8, [X25 + 0x28]
	0x0222E7B0 LDUR X9, [X29 - 0x8]
	0x0222E7B4 CMP X8, X9
	0x0222E7B8 B.NE 0x222E7E4
	0x0222E7BC ADD X31, X29, 0x0

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X8, [X2+56]
	013 Move X19, X2
	014 Move X20, X1
	015 Move V8, V6
	016 Move V9, V5
	017 Move V10, V4
	018 Move V11, V3
	019 Move V12, V2
	020 Move V13, V1
	021 Move V14, V0
	022 Move X21, X0
	023 Compare X8, 0
	024 JumpIfNotEqual {33}
	025 Move X0, 0x1EC6000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X8, [X19+56]
	029 Compare X8, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X19
	032 Call 0x1C5D6E0
	033 Move X8, 0x1EC6000
	034 Move X8, [X8+1432]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X21
	041 Move V0, V14
	042 Move V1, V13
	043 Move V2, V12
	044 Move V3, V11
	045 Move V4, V10
	046 Move V5, V9
	047 Move V6, V8
	048 Move X1, X20
	049 Move X2, X31
	050 Call Object.Instantiate, X0, X1, X2, X3
	051 Move X8, [X19+56]
	052 Move X20, X0
	053 Move X19, [X8]
	054 Move W8, [X19+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X19
	060 Call 0x1C5D684
	061 Move X19, X0
	062 Compare X20, 0
	063 JumpIfEqual {72}
	064 Move X0, X20
	065 Move X1, X19
	066 Call 0x1C17E00
	067 Compare X0, 0
	068 JumpIfNotEqual {73}
	069 Move X0, X20
	070 Move X1, X19
	071 Call 0x1C181E0
	072 Move X0, X31
	073 Move X20, [X31+80]
	074 Move X19, [X31+88]
	075 Move X30, [X31+64]
	076 Move X21, [X31+72]
	077 Move D9, [X31+48]
	078 Move D8, [X31+56]
	079 Move D11, [X31+32]
	080 Move D10, [X31+40]
	081 Move D13, [X31+16]
	082 Move D12, [X31+24]
	083 Move V14, [X31+96]
	084 Return X0

Method: T Instantiate(T original, UnityEngine.Transform parent)

Disassembly:
	0x0222E488 LDP X8, X1, [X0]
	0x0222E48C MOV X0, X19
	0x0222E490 BLR X8
	0x0222E494 CBNZ X20, 0x222E4A0
	0x0222E498 MOV X0, X21
	0x0222E49C BL 0x1D2C690
	0x0222E4A0 MOV X0, X20
	0x0222E4A4 BL 0x1C16F18
	0x0222E4A8 BL 0x1990590
	0x0222E4AC STP X30, X23, [X31 - 0x30]!
	0x0222E4B0 STP X22, X21, [X31 + 0x10]
	0x0222E4B4 STP X20, X19, [X31 + 0x20]
	0x0222E4B8 LDR X8, [X2 + 0x38]
	0x0222E4BC MOV X19, X2
	0x0222E4C0 MOV X21, X1
	0x0222E4C4 MOV X20, X0
	0x0222E4C8 CBZ X8, 0x222E4D4
	0x0222E4CC CBNZ X21, 0x222E4E0
	0x0222E4D0 B 0x222E5C0
	0x0222E4D4 MOV X0, X19
	0x0222E4D8 BL 0x1C5C6E0
	0x0222E4DC CBZ X21, 0x222E5C0
	0x0222E4E0 LDR X8, [X21 + 0x18]
	0x0222E4E4 CBZ X8, 0x222E5C0
	0x0222E4E8 CBZ X20, 0x222E5E0
	0x0222E4EC LDR X8, [X19 + 0x38]
	0x0222E4F0 MOV X0, X20
	0x0222E4F4 LDR X1, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X20, X2
	007 Move X19, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {19}
	011 Move X0, 0x1EC6000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move X8, [X20+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X20
	018 Call 0x1C5D6E0
	019 Move X8, 0x1EC6000
	020 Move X8, [X8+1432]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, [X20+56]
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X21
	031 Move X3, [X8+8]
	032 Move W2, W31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]

Method: T Instantiate(T original, UnityEngine.Transform parent, System.Boolean worldPositionStays)

Disassembly:
	0x0222E4F8 BL 0x260FC80
	0x0222E4FC LDR W8, [X21 + 0x18]
	0x0222E500 CMP W0, W8
	0x0222E504 B.LE 0x222E534
	0x0222E508 LDR X8, [X19 + 0x38]
	0x0222E50C MOV X0, X20
	0x0222E510 LDR X1, [X8 + 0x18]
	0x0222E514 BL 0x260FC80
	0x0222E518 LDR X8, [X19 + 0x38]
	0x0222E51C LDR W1, [X21 + 0x18]
	0x0222E520 LDR X3, [X8 + 0x20]
	0x0222E524 SUB W2, W0, W1
	0x0222E528 MOV X0, X20
	0x0222E52C BL 0x2610BD4
	0x0222E530 LDR W8, [X21 + 0x18]
	0x0222E534 CMP W8, 0x1
	0x0222E538 B.LT 0x222E5B0
	0x0222E53C MOV X22, X31
	0x0222E540 ADD X23, X21, 0x20
	0x0222E544 LDR X8, [X19 + 0x38]
	0x0222E548 MOV X0, X20
	0x0222E54C LDR X1, [X8 + 0x18]
	0x0222E550 BL 0x260FC80
	0x0222E554 LDR X8, [X19 + 0x38]
	0x0222E558 CMP X22, W0, SXTW
	0x0222E55C B.GE 0x222E574
	0x0222E560 LDR X2, [X8 + 0x28]
	0x0222E564 MOV X0, X20
	0x0222E568 MOV W1, W22
	0x0222E56C BL 0x260FC5C
	0x0222E570 B 0x222E580
	0x0222E574 LDR X1, [X8 + 0x48]
	0x0222E578 MOV X0, X20
	0x0222E57C BL 0x2610078
	0x0222E580 LDR W8, [X21 + 0x18]
	0x0222E584 CMP X22, X8
	0x0222E588 B.CS 0x222E5E4
	0x0222E58C CBZ X0, 0x222E5E0
	0x0222E590 LDR X8, [X19 + 0x38]
	0x0222E594 LDR X1, [X23, X22, LSL #3]
	0x0222E598 LDR X2, [X8 + 0x40]
	0x0222E59C BL 0x265C3F4
	0x0222E5A0 LDRSW X8, [X21 + 0x18]
	0x0222E5A4 ADD X22, X22, 0x1
	0x0222E5A8 CMP X22, X8
	0x0222E5AC B.LT 0x222E544
	0x0222E5B0 LDP X20, X19, [X31 + 0x20]
	0x0222E5B4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X3
	008 Move W21, W2
	009 Move X20, X1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {21}
	013 Move X0, 0x1EC6000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Move X8, 0x1EC6000
	022 Move X8, [X8+1432]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W2, W21, 1
	029 Move X0, X22
	030 Move X1, X20
	031 Move X3, X31
	032 Call Object.Instantiate, X0, X1, X2
	033 Move X8, [X19+56]
	034 Move X20, X0
	035 Move X19, [X8]
	036 Move W8, [X19+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {44}
	041 Move X0, X19
	042 Call 0x1C5D684
	043 Move X19, X0
	044 Compare X20, 0
	045 JumpIfEqual {54}
	046 Move X0, X20
	047 Move X1, X19
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfNotEqual {55}
	051 Move X0, X20
	052 Move X1, X19
	053 Call 0x1C181E0
	054 Move X0, X31
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return X0

Method: System.Void Destroy(UnityEngine.Object obj, System.Single t)

Disassembly:
	0x03C3A45C LDR X30, [X31], #0x20
	0x03C3A460 RET
	0x03C3A464 BL 0x1C16F20
	0x03C3A468 STR X30, [X31 - 0x20]!
	0x03C3A46C STP X20, X19, [X31 + 0x10]
	0x03C3A470 ADRP X19, 0x7AB000
	0x03C3A474 LDRB W8, [X19 + 0x5CF]
	0x03C3A478 TBNZ X8, 0x0, 0x3C3A490
	0x03C3A47C ADRP X0, 0x525000
	0x03C3A480 LDR X0, [X0 + 0x6A8]
	0x03C3A484 BL 0x1C16CF4
	0x03C3A488 MOVZ W8, 0x1
	0x03C3A48C STRB W8, [X19 + 0x5CF]
	0x03C3A490 MOV X0, X31
	0x03C3A494 BL 0x33E3C68
	0x03C3A498 CBZ X0, 0x3C3A4DC
	0x03C3A49C ADRP X19, 0x525000
	0x03C3A4A0 LDR X19, [X19 + 0x6A8]
	0x03C3A4A4 MOV X1, X31

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7AC000
	006 Move X1, [X20+1280]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51531776
	012 Add X0, X0, 2708
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1280], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void Destroy(UnityEngine.Object obj)

Disassembly:
	0x03C3A4A8 BL 0x33E3CC4
	0x03C3A4AC LDR X8, [X19]
	0x03C3A4B0 MOV W19, W0
	0x03C3A4B4 MOV X0, X8
	0x03C3A4B8 BL 0x1C16F10
	0x03C3A4BC MOV W1, W19
	0x03C3A4C0 MOV X20, X0
	0x03C3A4C4 BL 0x3C39B28
	0x03C3A4C8 MOV X0, X20
	0x03C3A4CC LDP X20, X19, [X31 + 0x10]
	0x03C3A4D0 MOV X1, X31
	0x03C3A4D4 LDR X30, [X31], #0x20
	0x03C3A4D8 B 0x33E5BA4
	0x03C3A4DC BL 0x1C16F20
	0x03C3A4E0 STP X30, X19, [X31 - 0x10]!
	0x03C3A4E4 ADRP X19, 0x7AB000
	0x03C3A4E8 LDRB W8, [X19 + 0x5D0]
	0x03C3A4EC TBNZ X8, 0x0, 0x3C3A504
	0x03C3A4F0 ADRP X0, 0x525000
	0x03C3A4F4 LDR X0, [X0 + 0x6A8]
	0x03C3A4F8 BL 0x1C16CF4
	0x03C3A4FC MOVZ W8, 0x1
	0x03C3A500 STRB W8, [X19 + 0x5D0]
	0x03C3A504 MOV X0, X31
	0x03C3A508 BL 0x33DD700
	0x03C3A50C CBZ X0, 0x3C3A528
	0x03C3A510 ADRP X8, 0x525000
	0x03C3A514 LDR X8, [X8 + 0x6A8]
	0x03C3A518 LDR X9, [X0]
	0x03C3A51C LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7AC000
	006 Move X21, 0x4BA000
	007 Move W8, [X20+1288]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4BA000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1288], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, 0x7AC000
	025 Move X1, [X20+1280]
	026 Compare X1, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -51531776
	029 Add X0, X0, 2708
	030 Call 0x1C17CB8
	031 Move X1, X0
	032 Move [X20+1280], X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move S0, W31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X1

Method: System.Void DestroyImmediate(UnityEngine.Object obj, System.Boolean allowDestroyingAssets)

Disassembly:
	0x03C3A520 CMP X9, X8
	0x03C3A524 B.EQ 0x3C3A530
	0x03C3A528 LDP X30, X19, [X31], #0x10
	0x03C3A52C RET
	0x03C3A530 LDP X30, X19, [X31], #0x10
	0x03C3A534 B 0x3C3A17C
	0x03C3A538 STP X30, X21, [X31 - 0x20]!
	0x03C3A53C STP X20, X19, [X31 + 0x10]
	0x03C3A540 ADRP X20, 0x7AB000
	0x03C3A544 LDRB W8, [X20 + 0x5D1]
	0x03C3A548 MOV X19, X0
	0x03C3A54C TBNZ X8, 0x0, 0x3C3A570
	0x03C3A550 ADRP X0, 0x4C1000
	0x03C3A554 LDR X0, [X0 + 0x708]
	0x03C3A558 BL 0x1C16CF4
	0x03C3A55C ADRP X0, 0x525000
	0x03C3A560 LDR X0, [X0 + 0x6A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AC000
	006 Move X2, [X21+1296]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51683328
	012 Add X0, X0, 130
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1296], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void DestroyImmediate(UnityEngine.Object obj)

Disassembly:
	0x03C3A564 BL 0x1C16CF4
	0x03C3A568 MOVZ W8, 0x1
	0x03C3A56C STRB W8, [X20 + 0x5D1]
	0x03C3A570 MOV X0, X31
	0x03C3A574 BL 0x33DD700
	0x03C3A578 CBZ X0, 0x3C3A5FC
	0x03C3A57C ADRP X8, 0x525000
	0x03C3A580 LDR X8, [X8 + 0x6A8]
	0x03C3A584 LDR X9, [X0]
	0x03C3A588 LDR X8, [X8]
	0x03C3A58C CMP X9, X8
	0x03C3A590 CSEL X20, X0, X31, EQ
	0x03C3A594 CBZ X20, 0x3C3A5FC
	0x03C3A598 ADRP X8, 0x4C1000
	0x03C3A59C LDR X8, [X8 + 0x708]
	0x03C3A5A0 LDR X0, [X8]
	0x03C3A5A4 BL 0x1C16F10
	0x03C3A5A8 MOV X1, X31
	0x03C3A5AC MOV X21, X0
	0x03C3A5B0 BL 0x364BFC4
	0x03C3A5B4 CBZ X21, 0x3C3A620
	0x03C3A5B8 MOV X0, X21
	0x03C3A5BC MOV X1, X31
	0x03C3A5C0 BL 0x364BFCC
	0x03C3A5C4 MOV X0, X20
	0x03C3A5C8 BL 0x3C3A408
	0x03C3A5CC TBZ X0, 0x0, 0x3C3A604
	0x03C3A5D0 MOV X0, X21
	0x03C3A5D4 MOV X1, X31
	0x03C3A5D8 BL 0x364C19C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7AC000
	006 Move X21, 0x4BA000
	007 Move W8, [X20+1304]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4BA000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1304], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, 0x7AC000
	025 Move X2, [X20+1296]
	026 Compare X2, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -51683328
	029 Add X0, X0, 130
	030 Call 0x1C17CB8
	031 Move X2, X0
	032 Move [X20+1296], X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move W1, W31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X2

Method: UnityEngine.Object[] FindObjectsOfType(System.Type type, System.Boolean includeInactive)

Disassembly:
	0x03C3A5DC CMP X0, X19
	0x03C3A5E0 B.GT 0x3C3A604
	0x03C3A5E4 MOV X0, X20
	0x03C3A5E8 BL 0x3C3A17C
	0x03C3A5EC MOVZ W0, 0x1
	0x03C3A5F0 MOV X1, X31
	0x03C3A5F4 BL 0x33E3BEC
	0x03C3A5F8 B 0x3C3A5C4
	0x03C3A5FC MOVZ W8, 0x1
	0x03C3A600 B 0x3C3A610
	0x03C3A604 MOV X0, X20
	0x03C3A608 BL 0x3C3A408
	0x03C3A60C EOR W8, W0, 0x1
	0x03C3A610 LDP X20, X19, [X31 + 0x10]
	0x03C3A614 AND W0, W8, 0x1
	0x03C3A618 LDP X30, X21, [X31], #0x20
	0x03C3A61C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AC000
	006 Move X2, [X21+1312]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51441664
	012 Add X0, X0, 2486
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1312], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Object[] FindObjectsByType(System.Type type, UnityEngine.FindObjectsInactive findObjectsInactive, UnityEngine.FindObjectsSortMode sortMode)

Disassembly:
	0x03C3A620 BL 0x1C16F20
	0x03C3A624 MOV X1, X31
	0x03C3A628 B 0x33BDD8C
	0x03C3A62C MOV X1, X31
	0x03C3A630 B 0x33BDD8C
	0x03C3A634 STR D8, [X31 - 0x20]!
	0x03C3A638 STP X30, X19, [X31 + 0x10]
	0x03C3A63C MOV X1, X31
	0x03C3A640 MOV V8.16B, V0.16B
	0x03C3A644 MOV X19, X0
	0x03C3A648 BL 0x33BDD8C
	0x03C3A64C STR S8, [X19 + 0x10]
	0x03C3A650 LDP X30, X19, [X31 + 0x10]
	0x03C3A654 LDR V8, [X31], #0x20
	0x03C3A658 RET
	0x03C3A65C LDR V0, [X0 + 0x10]
	0x03C3A660 RET
	0x03C3A664 STR S0, [X0 + 0x10]
	0x03C3A668 RET
	0x03C3A66C STP D9, D8, [X31 - 0x30]!
	0x03C3A670 STR X30, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7AC000
	007 Move X3, [X22+1320]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51531776
	014 Add X0, X0, 2770
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1320], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void DontDestroyOnLoad(UnityEngine.Object target)

Disassembly:
	0x03C3A674 STP X20, X19, [X31 + 0x20]
	0x03C3A678 LDR V0, [X0 + 0x14]
	0x03C3A67C MOV X19, X0
	0x03C3A680 ADRP X20, 0x7AB000
	0x03C3A684 FCMP S0, 0x0
	0x03C3A688 B.PL 0x3C3A6B4
	0x03C3A68C LDR X0, [X20 + 0x810]
	0x03C3A690 CBNZ X0, 0x3C3A6A4
	0x03C3A694 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C3A698 ADD X0, X0, 0xB94
	0x03C3A69C BL 0x1C16CB8
	0x03C3A6A0 STR X0, [X20 + 0x810]
	0x03C3A6A4 BLR X0
	0x03C3A6A8 LDR V1, [X19 + 0x10]
	0x03C3A6AC FADD S0, S0, S1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AC000
	005 Move X1, [X20+1328]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51523584
	010 Add X0, X0, 2744
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1328], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.HideFlags get_hideFlags()

Disassembly:
	0x03C3A6B0 STR S0, [X19 + 0x14]
	0x03C3A6B4 LDR X0, [X20 + 0x810]
	0x03C3A6B8 CBNZ X0, 0x3C3A6CC
	0x03C3A6BC ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C3A6C0 ADD X0, X0, 0xB94
	0x03C3A6C4 BL 0x1C16CB8
	0x03C3A6C8 STR X0, [X20 + 0x810]
	0x03C3A6CC BLR X0
	0x03C3A6D0 LDR V9, [X19 + 0x14]
	0x03C3A6D4 MOV V8.16B, V0.16B
	0x03C3A6D8 FCMP S0, S9
	0x03C3A6DC B.MI 0x3C3A6F0
	0x03C3A6E0 LDR X8, [X19]
	0x03C3A6E4 MOV X0, X19
	0x03C3A6E8 LDP X9, X1, [X8 + 0x1B8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AC000
	005 Move X1, [X20+1336]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51544064
	010 Add X0, X0, 424
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1336], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_hideFlags(UnityEngine.HideFlags value)

Disassembly:
	0x03C3A6EC BLR X9
	0x03C3A6F0 LDP X20, X19, [X31 + 0x20]
	0x03C3A6F4 LDR X30, [X31 + 0x10]
	0x03C3A6F8 FCMP S8, S9
	0x03C3A6FC CSET W0, MI
	0x03C3A700 LDP D9, D8, [X31], #0x30
	0x03C3A704 RET
	0x03C3A708 STP X30, X19, [X31 - 0x10]!
	0x03C3A70C ADRP X19, 0x7AB000
	0x03C3A710 LDR X0, [X19 + 0x810]
	0x03C3A714 CBNZ X0, 0x3C3A728
	0x03C3A718 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C3A71C ADD X0, X0, 0xB94
	0x03C3A720 BL 0x1C16CB8
	0x03C3A724 STR X0, [X19 + 0x810]
	0x03C3A728 LDP X30, X19, [X31], #0x10
	0x03C3A72C BR X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AC000
	006 Move X2, [X21+1344]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51625984
	012 Add X0, X0, 1626
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1344], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: T[] FindObjectsOfType()

Disassembly:
	0x0222E200 ADD X10, X10, 0x10
	0x0222E204 B.NE 0x222E1F0
	0x0222E208 MOV X0, X19
	0x0222E20C MOV W2, W31
	0x0222E210 BL 0x1C5C788
	0x0222E214 B 0x222E224
	0x0222E218 LDRSW X9, [X10]
	0x0222E21C ADD X8, X8, X9, 0x4, LSL
	0x0222E220 ADD X0, X8, 0x138
	0x0222E224 LDP X8, X1, [X0]
	0x0222E228 MOV X0, X19
	0x0222E22C BLR X8
	0x0222E230 TBZ X0, 0x0, 0x222E338
	0x0222E234 LDR X8, [X20 + 0x38]
	0x0222E238 LDR X1, [X8 + 0x10]
	0x0222E23C LDRB W8, [X1 + 0x135]
	0x0222E240 TBNZ X8, 0x0, 0x222E250
	0x0222E244 MOV X0, X1
	0x0222E248 BL 0x1C5C684
	0x0222E24C MOV X1, X0
	0x0222E250 LDR X8, [X19]
	0x0222E254 LDRH W9, [X8 + 0x12E]
	0x0222E258 CBZ X9, 0x222E27C
	0x0222E25C LDR X10, [X8 + 0xB0]
	0x0222E260 ADD X10, X10, 0x8
	0x0222E264 LDUR X11, [X10 - 0x8]
	0x0222E268 CMP X11, X1
	0x0222E26C B.EQ 0x222E28C
	0x0222E270 SUBS X9, X9, 0x1
	0x0222E274 ADD X10, X10, 0x10
	0x0222E278 B.NE 0x222E264
	0x0222E27C MOV X0, X19
	0x0222E280 MOV W2, W31
	0x0222E284 BL 0x1C5C788
	0x0222E288 B 0x222E298
	0x0222E28C LDRSW X9, [X10]
	0x0222E290 ADD X8, X8, X9, 0x4, LSL
	0x0222E294 ADD X0, X8, 0x138
	0x0222E298 STUR X23, [X29 - 0x10]
	0x0222E29C LDR X1, [X0 + 0x8]
	0x0222E2A0 LDP X0, X8, [X1 + 0x8]
	0x0222E2A4 SUB X3, X29, 0x10
	0x0222E2A8 MOV X2, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {20}
	008 Move X0, 0x1EC6000
	009 Move X0, [X0+1432]
	010 Call 0x1C17CF4
	011 Move X0, 0x1EC6000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X8, [X19+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {20}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move X8, [X19+56]
	020 Move X9, 0x1EC6000
	021 Move X9, [X9+1728]
	022 Move X20, [X8]
	023 Move X0, [X9]
	024 Move W9, [X0+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Call Type.GetTypeFromHandle, X0
	031 Move X8, 0x1EC6000
	032 Move X8, [X8+1432]
	033 Move X20, X0
	034 Move X8, [X8]
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move W1, W31
	042 Move X2, X31
	043 Call Object.FindObjectsOfType, X0, X1
	044 Move X8, [X19+56]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X1, [X8+8]
	048 Move X30, [X31+32]
	049 Call 0x2242D78, X0
	050 Return X0

Method: T[] FindObjectsOfType(System.Boolean includeInactive)

Disassembly:
	0x0222E2AC MOV X4, X23
	0x0222E2B0 BLR X8
	0x0222E2B4 MOV X0, X25
	0x0222E2B8 MOV X1, X23
	0x0222E2BC MOV X2, X22
	0x0222E2C0 BL 0x3EB1AC0
	0x0222E2C4 CBZ X21, 0x222E3D4
	0x0222E2C8 LDR X8, [X20 + 0x38]
	0x0222E2CC LDR X1, [X8 + 0x30]
	0x0222E2D0 LDR X0, [X1]
	0x0222E2D4 LDR X8, [X1 + 0x10]
	0x0222E2D8 SUB X4, X29, 0x10
	0x0222E2DC MOV X2, X21
	0x0222E2E0 MOV X3, X31
	0x0222E2E4 BLR X8
	0x0222E2E8 LDUR X26, [X29 - 0x10]
	0x0222E2EC MOV X0, X24
	0x0222E2F0 MOV X1, X25
	0x0222E2F4 MOV X2, X22
	0x0222E2F8 BL 0x3EB1AC0
	0x0222E2FC CBZ X26, 0x222E3D8
	0x0222E300 LDR X8, [X20 + 0x38]
	0x0222E304 MOV X4, X24
	0x0222E308 LDR X9, [X8 + 0x20]
	0x0222E30C LDR W9, [X9 + 0x28]
	0x0222E310 TBNZ X9, 0x1F, 0x222E318
	0x0222E314 LDR X4, [X24]
	0x0222E318 LDR X1, [X8 + 0x40]
	0x0222E31C LDR X0, [X1]
	0x0222E320 STUR X4, [X29 - 0x10]
	0x0222E324 LDR X8, [X1 + 0x10]
	0x0222E328 SUB X3, X29, 0x10
	0x0222E32C MOV X2, X26
	0x0222E330 BLR X8
	0x0222E334 B 0x222E1D8
	0x0222E338 MOV X20, X31
	0x0222E33C CBZ X19, 0x222E3A0
	0x0222E340 ADRP X10, 0x1EC5000
	0x0222E344 LDR X8, [X19]
	0x0222E348 LDR X10, [X10 + 0xE00]
	0x0222E34C LDRH W9, [X8 + 0x12E]
	0x0222E350 LDR X1, [X10]
	0x0222E354 CBZ X9, 0x222E378
	0x0222E358 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move W20, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {22}
	010 Move X0, 0x1EC6000
	011 Move X0, [X0+1432]
	012 Call 0x1C17CF4
	013 Move X0, 0x1EC6000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Move X8, [X19+56]
	022 Move X9, 0x1EC6000
	023 Move X9, [X9+1728]
	024 Move X21, [X8]
	025 Move X0, [X9]
	026 Move W9, [X0+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X31
	032 Call Type.GetTypeFromHandle, X0
	033 Move X8, 0x1EC6000
	034 Move X8, [X8+1432]
	035 Move X21, X0
	036 Move X8, [X8]
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 And W1, W20, 1
	043 Move X0, X21
	044 Move X2, X31
	045 Call Object.FindObjectsOfType, X0, X1
	046 Move X8, [X19+56]
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X1, [X8+8]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call 0x2242D78, X0
	053 Return X0

Method: T FindObjectOfType()

Disassembly:
	0x0222E02C MOV X19, X0
	0x0222E030 LDR X3, [X8 + 0x18]
	0x0222E034 LDR X8, [X3]
	0x0222E038 BLR X8
	0x0222E03C MOV X0, X19
	0x0222E040 LDP X20, X19, [X31 + 0x10]
	0x0222E044 LDP X30, X21, [X31], #0x20
	0x0222E048 RET
	0x0222E04C ADRP X0, 0x1ECA000
	0x0222E050 LDR X0, [X0 + 0x528]
	0x0222E054 BL 0x1C16D08
	0x0222E058 BL 0x1C16F10
	0x0222E05C MOV X20, X0
	0x0222E060 ADRP X0, 0x1ED0000
	0x0222E064 LDR X0, [X0 + 0x580]
	0x0222E068 B 0x222E088
	0x0222E06C ADRP X0, 0x1ECA000
	0x0222E070 LDR X0, [X0 + 0x528]
	0x0222E074 BL 0x1C16D08
	0x0222E078 BL 0x1C16F10
	0x0222E07C MOV X20, X0
	0x0222E080 ADRP X0, 0x1EED000
	0x0222E084 LDR X0, [X0 + 0x8F0]
	0x0222E088 BL 0x1C16D08
	0x0222E08C MOV X1, X0
	0x0222E090 MOV X0, X20
	0x0222E094 MOV X2, X31
	0x0222E098 BL 0x330E100
	0x0222E09C MOV X0, X20
	0x0222E0A0 MOV X1, X19
	0x0222E0A4 BL 0x1C16DEC
	0x0222E0A8 STP X29, X30, [X31 - 0x60]!
	0x0222E0AC STP X28, X27, [X31 + 0x10]
	0x0222E0B0 STP X26, X25, [X31 + 0x20]
	0x0222E0B4 STP X24, X23, [X31 + 0x30]
	0x0222E0B8 STP X22, X21, [X31 + 0x40]
	0x0222E0BC STP X20, X19, [X31 + 0x50]
	0x0222E0C0 ADD X29, X31, 0x0
	0x0222E0C4 SUB X31, X31, 0x10
	0x0222E0C8 MRS X27, 0xC000
	0x0222E0CC LDR X8, [X27 + 0x28]
	0x0222E0D0 MOV X20, X2
	0x0222E0D4 MOV X19, X1
	0x0222E0D8 MOV X21, X0
	0x0222E0DC STUR X8, [X29 - 0x8]
	0x0222E0E0 LDR X26, [X2 + 0x38]
	0x0222E0E4 CBNZ X26, 0x222E114
	0x0222E0E8 ADRP X0, 0x1EC5000
	0x0222E0EC LDR X0, [X0 + 0xE00]
	0x0222E0F0 BL 0x1C16CF4
	0x0222E0F4 ADRP X0, 0x1EC5000
	0x0222E0F8 LDR X0, [X0 + 0xE18]
	0x0222E0FC BL 0x1C16CF4
	0x0222E100 LDR X26, [X20 + 0x38]
	0x0222E104 CBNZ X26, 0x222E114
	0x0222E108 MOV X0, X20
	0x0222E10C BL 0x1C5C6E0
	0x0222E110 LDR X26, [X20 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {20}
	008 Move X0, 0x1EC6000
	009 Move X0, [X0+1432]
	010 Call 0x1C17CF4
	011 Move X0, 0x1EC6000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X8, [X19+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {20}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move X8, [X19+56]
	020 Move X9, 0x1EC6000
	021 Move X9, [X9+1728]
	022 Move X20, [X8]
	023 Move X0, [X9]
	024 Move W9, [X0+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Call Type.GetTypeFromHandle, X0
	031 Move X8, 0x1EC6000
	032 Move X8, [X8+1432]
	033 Move X20, X0
	034 Move X8, [X8]
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move W1, W31
	042 Move X2, X31
	043 Call Object.FindObjectOfType, X0, X1
	044 Move X8, [X19+56]
	045 Move X20, X0
	046 Move X19, [X8+8]
	047 Move W8, [X19+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {55}
	052 Move X0, X19
	053 Call 0x1C5D684
	054 Move X19, X0
	055 Compare X20, 0
	056 JumpIfEqual {65}
	057 Move X0, X20
	058 Move X1, X19
	059 Call 0x1C17E00
	060 Compare X0, 0
	061 JumpIfNotEqual {66}
	062 Move X0, X20
	063 Move X1, X19
	064 Call 0x1C181E0
	065 Move X0, X31
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return X0

Method: T FindObjectOfType(System.Boolean includeInactive)

Disassembly:
	0x0222E114 LDR X8, [X26 + 0x20]
	0x0222E118 LDR W22, [X8 + 0xFC]
	0x0222E11C ADD X8, X31, 0x0
	0x0222E120 ADD X9, X22, 0xF
	0x0222E124 AND X9, X9, 0x1FFFFFFFF
	0x0222E128 SUB X23, X8, X9
	0x0222E12C ADD X31, X23, 0x0
	0x0222E130 ADD X8, X31, 0x0
	0x0222E134 SUB X24, X8, X9
	0x0222E138 ADD X31, X24, 0x0
	0x0222E13C ADD X8, X31, 0x0
	0x0222E140 SUB X25, X8, X9
	0x0222E144 ADD X31, X25, 0x0
	0x0222E148 MOV X0, X25
	0x0222E14C MOV W1, W31
	0x0222E150 MOV X2, X22
	0x0222E154 BL 0x3EB1B10
	0x0222E158 CBZ X19, 0x222E3DC
	0x0222E15C LDR X1, [X26]
	0x0222E160 LDRB W8, [X1 + 0x135]
	0x0222E164 TBNZ X8, 0x0, 0x222E174
	0x0222E168 MOV X0, X1
	0x0222E16C BL 0x1C5C684
	0x0222E170 MOV X1, X0
	0x0222E174 LDR X8, [X19]
	0x0222E178 LDRH W9, [X8 + 0x12E]
	0x0222E17C CBZ X9, 0x222E1A0
	0x0222E180 LDR X10, [X8 + 0xB0]
	0x0222E184 ADD X10, X10, 0x8
	0x0222E188 LDUR X11, [X10 - 0x8]
	0x0222E18C CMP X11, X1
	0x0222E190 B.EQ 0x222E1B0
	0x0222E194 SUBS X9, X9, 0x1
	0x0222E198 ADD X10, X10, 0x10
	0x0222E19C B.NE 0x222E188
	0x0222E1A0 MOV X0, X19
	0x0222E1A4 MOV W2, W31
	0x0222E1A8 BL 0x1C5C788
	0x0222E1AC B 0x222E1BC
	0x0222E1B0 LDRSW X9, [X10]
	0x0222E1B4 ADD X8, X8, X9, 0x4, LSL
	0x0222E1B8 ADD X0, X8, 0x138
	0x0222E1BC LDP X8, X1, [X0]
	0x0222E1C0 MOV X0, X19
	0x0222E1C4 BLR X8
	0x0222E1C8 MOV X19, X0
	0x0222E1CC CBZ X0, 0x222E3E0
	0x0222E1D0 ADRP X28, 0x1EC5000
	0x0222E1D4 LDR X28, [X28 + 0xE18]
	0x0222E1D8 LDR X8, [X19]
	0x0222E1DC LDR X1, [X28]
	0x0222E1E0 LDRH W9, [X8 + 0x12E]
	0x0222E1E4 CBZ X9, 0x222E208
	0x0222E1E8 LDR X10, [X8 + 0xB0]
	0x0222E1EC ADD X10, X10, 0x8
	0x0222E1F0 LDUR X11, [X10 - 0x8]
	0x0222E1F4 CMP X11, X1
	0x0222E1F8 B.EQ 0x222E218
	0x0222E1FC SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move W20, W0
	008 Compare X8, 0
	009 JumpIfNotEqual {22}
	010 Move X0, 0x1EC6000
	011 Move X0, [X0+1432]
	012 Call 0x1C17CF4
	013 Move X0, 0x1EC6000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Move X8, [X19+56]
	022 Move X9, 0x1EC6000
	023 Move X9, [X9+1728]
	024 Move X21, [X8]
	025 Move X0, [X9]
	026 Move W9, [X0+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X31
	032 Call Type.GetTypeFromHandle, X0
	033 Move X8, 0x1EC6000
	034 Move X8, [X8+1432]
	035 Move X21, X0
	036 Move X8, [X8]
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 And W1, W20, 1
	043 Move X0, X21
	044 Move X2, X31
	045 Call Object.FindObjectOfType, X0, X1
	046 Move X8, [X19+56]
	047 Move X20, X0
	048 Move X19, [X8+8]
	049 Move W8, [X19+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {57}
	054 Move X0, X19
	055 Call 0x1C5D684
	056 Move X19, X0
	057 Compare X20, 0
	058 JumpIfEqual {67}
	059 Move X0, X20
	060 Move X1, X19
	061 Call 0x1C17E00
	062 Compare X0, 0
	063 JumpIfNotEqual {68}
	064 Move X0, X20
	065 Move X1, X19
	066 Call 0x1C181E0
	067 Move X0, X31
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0

Method: T FindFirstObjectByType()

Disassembly:
	0x0222DF44 LDR X0, [X8 + 0x10]
	0x0222DF48 LDRB W8, [X0 + 0x135]
	0x0222DF4C TBNZ X8, 0x0, 0x222DF54
	0x0222DF50 BL 0x1C5C684
	0x0222DF54 BL 0x1C16F10
	0x0222DF58 LDR X8, [X19 + 0x38]
	0x0222DF5C MOV X1, X21
	0x0222DF60 MOV X2, X20
	0x0222DF64 MOV X19, X0
	0x0222DF68 LDR X3, [X8 + 0x18]
	0x0222DF6C BL 0x285C8F0
	0x0222DF70 MOV X0, X19
	0x0222DF74 LDP X20, X19, [X31 + 0x10]
	0x0222DF78 LDP X30, X21, [X31], #0x20
	0x0222DF7C RET
	0x0222DF80 ADRP X0, 0x1ECB000
	0x0222DF84 LDR X0, [X0 + 0x528]
	0x0222DF88 BL 0x1C16D08
	0x0222DF8C BL 0x1C16F10
	0x0222DF90 MOV X20, X0
	0x0222DF94 ADRP X0, 0x1ED1000
	0x0222DF98 LDR X0, [X0 + 0x580]
	0x0222DF9C B 0x222DFBC
	0x0222DFA0 ADRP X0, 0x1ECB000
	0x0222DFA4 LDR X0, [X0 + 0x528]
	0x0222DFA8 BL 0x1C16D08
	0x0222DFAC BL 0x1C16F10
	0x0222DFB0 MOV X20, X0
	0x0222DFB4 ADRP X0, 0x1EEE000
	0x0222DFB8 LDR X0, [X0 + 0x8F0]
	0x0222DFBC BL 0x1C16D08
	0x0222DFC0 MOV X1, X0
	0x0222DFC4 MOV X0, X20
	0x0222DFC8 MOV X2, X31
	0x0222DFCC BL 0x330E100
	0x0222DFD0 MOV X0, X20
	0x0222DFD4 MOV X1, X19
	0x0222DFD8 BL 0x1C16DEC
	0x0222DFDC STP X30, X21, [X31 - 0x20]!
	0x0222DFE0 STP X20, X19, [X31 + 0x10]
	0x0222DFE4 LDR X8, [X2 + 0x38]
	0x0222DFE8 MOV X19, X2
	0x0222DFEC MOV X20, X1
	0x0222DFF0 MOV X21, X0
	0x0222DFF4 CBNZ X8, 0x222E000
	0x0222DFF8 MOV X0, X19
	0x0222DFFC BL 0x1C5C6E0
	0x0222E000 CBZ X21, 0x222E04C
	0x0222E004 CBZ X20, 0x222E06C
	0x0222E008 LDR X8, [X19 + 0x38]
	0x0222E00C LDR X0, [X8 + 0x10]
	0x0222E010 LDRB W8, [X0 + 0x135]
	0x0222E014 TBNZ X8, 0x0, 0x222E01C
	0x0222E018 BL 0x1C5C684
	0x0222E01C BL 0x1C16F10
	0x0222E020 LDR X8, [X19 + 0x38]
	0x0222E024 MOV X1, X21
	0x0222E028 MOV X2, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {20}
	008 Move X0, 0x1EC7000
	009 Move X0, [X0+1432]
	010 Call 0x1C17CF4
	011 Move X0, 0x1EC7000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X8, [X19+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {20}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move X8, [X19+56]
	020 Move X9, 0x1EC7000
	021 Move X9, [X9+1728]
	022 Move X20, [X8]
	023 Move X0, [X9]
	024 Move W9, [X0+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Call Type.GetTypeFromHandle, X0
	031 Move X8, 0x1EC7000
	032 Move X8, [X8+1432]
	033 Move X20, X0
	034 Move X8, [X8]
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move W1, W31
	042 Move X2, X31
	043 Call Object.FindFirstObjectByType, X0, X1
	044 Move X8, [X19+56]
	045 Move X20, X0
	046 Move X19, [X8+8]
	047 Move W8, [X19+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {55}
	052 Move X0, X19
	053 Call 0x1C5D684
	054 Move X19, X0
	055 Compare X20, 0
	056 JumpIfEqual {65}
	057 Move X0, X20
	058 Move X1, X19
	059 Call 0x1C17E00
	060 Compare X0, 0
	061 JumpIfNotEqual {66}
	062 Move X0, X20
	063 Move X1, X19
	064 Call 0x1C181E0
	065 Move X0, X31
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return X0

Method: System.Void CheckNullArgument(System.Object arg, System.String message)

Disassembly:
	0x03C39CFC BLR X8
	0x03C39D00 B 0x3C39E48
	0x03C39D04 ADRP X8, 0x4EB000
	0x03C39D08 LDR X8, [X8 + 0x7C8]
	0x03C39D0C LDR X0, [X8]
	0x03C39D10 BL 0x1C16F10
	0x03C39D14 MOV W1, W31
	0x03C39D18 MOV X2, X31
	0x03C39D1C MOV X19, X0
	0x03C39D20 BL 0x33DCD78
	0x03C39D24 LDR X21, [X23 + 0x18]
	0x03C39D28 STRB W31, [X31 + 0x4]
	0x03C39D2C ADD X1, X31, 0x4
	0x03C39D30 MOV X0, X21
	0x03C39D34 MOV X2, X31
	0x03C39D38 BL 0x33DE64C
	0x03C39D3C LDR X0, [X23 + 0x18]
	0x03C39D40 CBZ X0, 0x3C39E68
	0x03C39D44 ADRP X9, 0x526000

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {4}
	003 Return 
	004 Move [X31-32], X30
	005 Move [X31+16], X20
	006 Move [X31+24], X19
	007 Move X0, 0x4C3000
	008 Move X0, [X0+1400]
	009 Move X19, X1
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X1, X19
	013 Move X2, X31
	014 Move X20, X0
	015 Call ArgumentException..ctor, X0, X1
	016 Move X0, 0x527000
	017 Move X0, [X0+1640]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X20
	021 Call 0x1C17DEC

Method: UnityEngine.Object FindObjectOfType(System.Type type, System.Boolean includeInactive)

Disassembly:
	0x03C3A730 STR D8, [X31 - 0x20]!
	0x03C3A734 STP X30, X19, [X31 + 0x10]
	0x03C3A738 MOVZ W8, 0xBF800000
	0x03C3A73C MOV X1, X31
	0x03C3A740 MOV V8.16B, V0.16B
	0x03C3A744 MOV X19, X0
	0x03C3A748 STR W8, [X0 + 0x14]
	0x03C3A74C BL 0x33BDD8C
	0x03C3A750 STR S8, [X19 + 0x10]
	0x03C3A754 LDP X30, X19, [X31 + 0x10]
	0x03C3A758 LDR V8, [X31], #0x20
	0x03C3A75C RET
	0x03C3A760 MOVZ W8, 0xBF800000
	0x03C3A764 STR W8, [X0 + 0x14]
	0x03C3A768 RET
	0x03C3A76C STR X30, [X31 - 0x10]!
	0x03C3A770 LDR X8, [X0 + 0x10]
	0x03C3A774 CBZ X8, 0x3C3A798
	0x03C3A778 LDR X9, [X8 + 0x18]
	0x03C3A77C LDR X0, [X8 + 0x40]
	0x03C3A780 LDR X1, [X8 + 0x28]
	0x03C3A784 BLR X9
	0x03C3A788 ORN W8, W31, W0, 0x0
	0x03C3A78C AND W0, W8, 0x1
	0x03C3A790 LDR X30, [X31], #0x10
	0x03C3A794 RET
	0x03C3A798 BL 0x1C16F20
	0x03C3A79C STR X30, [X31 - 0x20]!
	0x03C3A7A0 STP X20, X19, [X31 + 0x10]
	0x03C3A7A4 MOV X19, X1
	0x03C3A7A8 MOV X1, X31
	0x03C3A7AC MOV X20, X0
	0x03C3A7B0 BL 0x33BDD8C
	0x03C3A7B4 STR X19, [X20 + 0x10]
	0x03C3A7B8 LDP X20, X19, [X31 + 0x10]
	0x03C3A7BC LDR X30, [X31], #0x20
	0x03C3A7C0 RET
	0x03C3A7C4 MOV X1, X31
	0x03C3A7C8 B 0x33A51F0
	0x03C3A7CC MOV X1, X31
	0x03C3A7D0 B 0x33A51F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7AC000
	007 Move X22, 0x4BA000
	008 Move W8, [X21+1352]
	009 Move X22, [X22+1432]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4BA000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1352], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X21, 0x7AC000
	027 Move X8, [X21+1312]
	028 Compare X8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, -51441664
	031 Add X0, X0, 2486
	032 Call 0x1C17CB8
	033 Move X8, X0
	034 Move [X21+1312], X0
	035 And W1, W20, 1
	036 Move X0, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Compare X0, 0
	039 JumpIfEqual {51}
	040 Move W8, [X0+24]
	041 Compare W8, 0
	042 JumpIfEqual {44}
	043 Move X0, [X0+32]
	044 Move X0, X31
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return X0
	051 Call 0x1C17F20

Method: UnityEngine.Object FindFirstObjectByType(System.Type type, UnityEngine.FindObjectsInactive findObjectsInactive)

Disassembly:
	0x03C3A7D4 MOV X1, X31
	0x03C3A7D8 B 0x33A51F0
	0x03C3A7DC STP X30, X21, [X31 - 0x20]!
	0x03C3A7E0 STP X20, X19, [X31 + 0x10]
	0x03C3A7E4 MOV X19, X0
	0x03C3A7E8 MOV W1, W31
	0x03C3A7EC BL 0x3C3A874
	0x03C3A7F0 MOV X0, X19
	0x03C3A7F4 LDP X20, X19, [X31 + 0x10]
	0x03C3A7F8 MOV X1, X31
	0x03C3A7FC LDP X30, X21, [X31], #0x20
	0x03C3A800 B 0x33CB4DC
	0x03C3A804 CMP W1, 0x1
	0x03C3A808 MOV X21, X0
	0x03C3A80C B.NE 0x3C3A83C
	0x03C3A810 MOV X0, X21
	0x03C3A814 BL 0x3EB1AD0
	0x03C3A818 LDR X20, [X0]
	0x03C3A81C BL 0x3EB1AE0
	0x03C3A820 MOV X0, X19
	0x03C3A824 MOV X1, X31
	0x03C3A828 BL 0x33CB4DC
	0x03C3A82C CBNZ X20, 0x3C3A844
	0x03C3A830 LDP X20, X19, [X31 + 0x10]
	0x03C3A834 LDP X30, X21, [X31], #0x20
	0x03C3A838 RET
	0x03C3A83C MOV X20, X31
	0x03C3A840 B 0x3C3A850
	0x03C3A844 MOV X0, X20
	0x03C3A848 BL 0x1C16F18
	0x03C3A84C MOV X21, X0
	0x03C3A850 MOV X0, X19
	0x03C3A854 MOV X1, X31
	0x03C3A858 BL 0x33CB4DC
	0x03C3A85C CBNZ X20, 0x3C3A868
	0x03C3A860 MOV X0, X21
	0x03C3A864 BL 0x1D2C690
	0x03C3A868 MOV X0, X20
	0x03C3A86C BL 0x1C16F18
	0x03C3A870 BL 0x1990590
	0x03C3A874 STP X30, X21, [X31 - 0x20]!
	0x03C3A878 STP X20, X19, [X31 + 0x10]
	0x03C3A87C ADRP X21, 0x7AB000
	0x03C3A880 LDRB W8, [X21 + 0x5D3]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7AC000
	007 Move X22, 0x4BA000
	008 Move W8, [X21+1353]
	009 Move X22, [X22+1432]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4BA000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1353], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X21, 0x7AC000
	027 Move X8, [X21+1320]
	028 Compare X8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, -51531776
	031 Add X0, X0, 2770
	032 Call 0x1C17CB8
	033 Move X8, X0
	034 Move [X21+1320], X0
	035 Move W2, 1
	036 Move X0, X20
	037 Move W1, W19
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {54}
	041 Move X8, [X0+24]
	042 Compare X8, 0
	043 JumpIfEqual {47}
	044 Compare W8, 0
	045 JumpIfEqual {55}
	046 Move X0, [X0+32]
	047 Move X0, X31
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return X0
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: System.String ToString()

Disassembly:
	0x03C3A884 MOV W20, W1
	0x03C3A888 MOV X19, X0
	0x03C3A88C TBNZ X8, 0x0, 0x3C3A8B0
	0x03C3A890 ADRP X0, 0x4B9000
	0x03C3A894 LDR X0, [X0 + 0xA28]
	0x03C3A898 BL 0x1C16CF4
	0x03C3A89C ADRP X0, 0x525000
	0x03C3A8A0 LDR X0, [X0 + 0x6D8]
	0x03C3A8A4 BL 0x1C16CF4
	0x03C3A8A8 MOVZ W8, 0x1
	0x03C3A8AC STRB W8, [X21 + 0x5D3]
	0x03C3A8B0 TBZ X20, 0x0, 0x3C3A8E0
	0x03C3A8B4 ADRP X20, 0x7AB000
	0x03C3A8B8 LDR X8, [X20 + 0x5E0]
	0x03C3A8BC CBNZ X8, 0x3C3A8D4
	0x03C3A8C0 ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C3A8C4 ADD X0, X0, 0x375
	0x03C3A8C8 BL 0x1C16CB8
	0x03C3A8CC MOV X8, X0
	0x03C3A8D0 STR X0, [X20 + 0x5E0]
	0x03C3A8D4 MOV X0, X19
	0x03C3A8D8 BLR X8
	0x03C3A8DC B 0x3C3A920
	0x03C3A8E0 LDR X0, [X19 + 0x10]
	0x03C3A8E4 MOV X1, X31
	0x03C3A8E8 MOV X2, X31
	0x03C3A8EC BL 0x33C5D2C
	0x03C3A8F0 TBZ X0, 0x0, 0x3C3A920
	0x03C3A8F4 ADRP X8, 0x4B9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7AC000
	006 Move X21, 0x4BA000
	007 Move W8, [X20+1354]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4BA000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1354], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X20, 0x7AC000
	025 Move X1, [X20+1400]
	026 Compare X1, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -51576832
	029 Add X0, X0, 892
	030 Call 0x1C17CB8
	031 Move X1, X0
	032 Move [X20+1400], X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 CallNoReturn X1

Method: System.Boolean op_Equality(UnityEngine.Object x, UnityEngine.Object y)

Disassembly:
	0x03C3983C STR X0, [X21 + 0x528]
	0x03C39840 MOVZ W2, 0x1
	0x03C39844 MOV X0, X20
	0x03C39848 MOV W1, W19
	0x03C3984C BLR X8
	0x03C39850 CBZ X0, 0x3C3987C
	0x03C39854 LDR X8, [X0 + 0x18]
	0x03C39858 CBZ X8, 0x3C39868
	0x03C3985C CBZ W8, 0x3C39880
	0x03C39860 LDR X0, [X0 + 0x20]
	0x03C39864 B 0x3C3986C
	0x03C39868 MOV X0, X31
	0x03C3986C LDP X20, X19, [X31 + 0x20]
	0x03C39870 LDP X22, X21, [X31 + 0x10]
	0x03C39874 LDR X30, [X31], #0x30
	0x03C39878 RET
	0x03C3987C BL 0x1C16F20
	0x03C39880 BL 0x1C16F28
	0x03C39884 STP X30, X21, [X31 - 0x20]!
	0x03C39888 STP X20, X19, [X31 + 0x10]
	0x03C3988C ADRP X20, 0x7AC000
	0x03C39890 ADRP X21, 0x4BA000
	0x03C39894 LDRB W8, [X20 + 0x54A]
	0x03C39898 LDR X21, [X21 + 0x598]
	0x03C3989C MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7AD000
	007 Move X22, 0x4BB000
	008 Move W8, [X21+1355]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4BB000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1355], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]

Method: System.Boolean op_Inequality(UnityEngine.Object x, UnityEngine.Object y)

Disassembly:
	0x03C364F8 MOV X2, X0
	0x03C364FC STR X0, [X21 + 0x458]
	0x03C36500 MOV X0, X20
	0x03C36504 MOV X1, X19
	0x03C36508 LDP X20, X19, [X31 + 0x10]
	0x03C3650C LDP X30, X21, [X31], #0x20
	0x03C36510 BR X2
	0x03C36514 STP X30, X21, [X31 - 0x20]!
	0x03C36518 STP X20, X19, [X31 + 0x10]
	0x03C3651C ADRP X21, 0x7AF000
	0x03C36520 LDR X2, [X21 + 0x458]
	0x03C36524 MOV X19, X1
	0x03C36528 MOV X20, X0
	0x03C3652C CBNZ X2, 0x3C36544
	0x03C36530 ADRP X0, 0xFFFFFFFFFCEC9000
	0x03C36534 ADD X0, X0, 0x2D0
	0x03C36538 BL 0x1C16CB8
	0x03C3653C MOV X2, X0
	0x03C36540 STR X0, [X21 + 0x458]
	0x03C36544 MOV X0, X20
	0x03C36548 MOV X1, X19
	0x03C3654C LDP X20, X19, [X31 + 0x10]
	0x03C36550 LDP X30, X21, [X31], #0x20
	0x03C36554 BR X2
	0x03C36558 MOV X2, X31
	0x03C3655C B 0x3C36560
	0x03C36560 STR X30, [X31 - 0x30]!
	0x03C36564 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7B0000
	007 Move X22, 0x4BE000
	008 Move W8, [X21+1356]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4BE000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1356], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Call Object.CompareBaseObjects, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 NotImplemented "Instruction ORN not yet implemented."
	034 And W0, W8, 1
	035 Move X30, [X31+48]
	036 Return X0

Method: System.Int32 GetOffsetOfInstanceIDInCPlusPlusObject()

Disassembly:
	0x03C39710 BL 0x1C16CB8
	0x03C39714 MOV X2, X0
	0x03C39718 STR X0, [X21 + 0x540]
	0x03C3971C MOV X0, X20
	0x03C39720 MOV W1, W19
	0x03C39724 LDP X20, X19, [X31 + 0x10]
	0x03C39728 LDP X30, X21, [X31], #0x20
	0x03C3972C BR X2
	0x03C39730 STR X30, [X31 - 0x30]!
	0x03C39734 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7AD000
	004 Move X0, [X19+1360]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51486720
	008 Add X0, X0, 3461
	009 Call 0x1C17CB8
	010 Move [X19+1360], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Object Internal_CloneSingle(UnityEngine.Object data)

Disassembly:
	0x03C3A11C STP X20, X19, [X31 + 0x10]
	0x03C3A120 ADRP X20, 0x7AB000
	0x03C3A124 ADRP X21, 0x525000
	0x03C3A128 LDRB W8, [X20 + 0x5CC]
	0x03C3A12C LDR X21, [X21 + 0x6A8]
	0x03C3A130 MOV X19, X0
	0x03C3A134 TBNZ X8, 0x0, 0x3C3A14C
	0x03C3A138 ADRP X0, 0x525000
	0x03C3A13C LDR X0, [X0 + 0x6A8]
	0x03C3A140 BL 0x1C16CF4
	0x03C3A144 MOVZ W8, 0x1
	0x03C3A148 STRB W8, [X20 + 0x5CC]
	0x03C3A14C LDR X0, [X21]
	0x03C3A150 LDR X20, [X19 + 0x18]
	0x03C3A154 LDR W19, [X19 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AC000
	005 Move X1, [X20+1368]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51507200
	010 Add X0, X0, 3463
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1368], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Object Internal_CloneSingleWithScene(UnityEngine.Object data, UnityEngine.SceneManagement.Scene scene)

Disassembly:
	0x03C3A238 LDR X0, [X8 + 0x10]
	0x03C3A23C MOV W1, W31
	0x03C3A240 MOV X3, X31
	0x03C3A244 BL 0x339FA34
	0x03C3A248 MOV X21, X31
	0x03C3A24C B 0x3C3A254
	0x03C3A250 MOV X21, X31
	0x03C3A254 LDRB W8, [X31 + 0x4C]
	0x03C3A258 CBZ W8, 0x3C3A268
	0x03C3A25C MOV X0, X20
	0x03C3A260 MOV X1, X31
	0x03C3A264 BL 0x33E14E4
	0x03C3A268 CBNZ X21, 0x3C3A2EC
	0x03C3A26C LDR X0, [X19 + 0x20]
	0x03C3A270 CBZ X0, 0x3C3A2D4
	0x03C3A274 ADRP X20, 0x525000
	0x03C3A278 ADRP X21, 0x525000
	0x03C3A27C LDR X20, [X20 + 0x6D0]
	0x03C3A280 LDR X21, [X21 + 0x6C0]
	0x03C3A284 LDR W8, [X0 + 0x18]
	0x03C3A288 CMP W8, 0x0
	0x03C3A28C B.LE 0x3C3A2D8
	0x03C3A290 LDR X2, [X20]
	0x03C3A294 ADD X8, X31, 0x8
	0x03C3A298 MOV W1, W31
	0x03C3A29C BL 0x3167594
	0x03C3A2A0 LDUR V0, [X31 + 0x8]
	0x03C3A2A4 LDR X8, [X31 + 0x18]
	0x03C3A2A8 STR V0, [X31 + 0x2]
	0x03C3A2AC STR X8, [X31 + 0x30]
	0x03C3A2B0 LDR X0, [X19 + 0x20]
	0x03C3A2B4 CBZ X0, 0x3C3A2D4
	0x03C3A2B8 LDR X2, [X21]
	0x03C3A2BC MOV W1, W31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7AC000
	007 Move [X31+8], W1
	008 Move X21, 0x4BA000
	009 Move W8, [X20+1376]
	010 Move X21, [X21+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4BA000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1376], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X20, 0x7AC000
	027 Move X8, [X20+1456]
	028 Compare X8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, -51634176
	031 Add X0, X0, 909
	032 Call 0x1C17CB8
	033 Move X8, X0
	034 Move [X20+1456], X0
	035 Add X1, X31, 8
	036 Move X0, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 Add X31, X31, 48
	043 Return X0

Method: UnityEngine.Object Internal_CloneSingleWithParent(UnityEngine.Object data, UnityEngine.Transform parent, System.Boolean worldPositionStays)

Disassembly:
	0x03C3A408 STR X30, [X31 - 0x20]!
	0x03C3A40C STP X20, X19, [X31 + 0x10]
	0x03C3A410 ADRP X20, 0x7AB000
	0x03C3A414 LDRB W8, [X20 + 0x5CE]
	0x03C3A418 MOV X19, X0
	0x03C3A41C TBNZ X8, 0x0, 0x3C3A434
	0x03C3A420 ADRP X0, 0x525000
	0x03C3A424 LDR X0, [X0 + 0x6C8]
	0x03C3A428 BL 0x1C16CF4
	0x03C3A42C MOVZ W8, 0x1
	0x03C3A430 STRB W8, [X20 + 0x5CE]
	0x03C3A434 LDR X8, [X19 + 0x18]
	0x03C3A438 CBZ X8, 0x3C3A464
	0x03C3A43C LDR W8, [X8 + 0x18]
	0x03C3A440 CBZ W8, 0x3C3A44C
	0x03C3A444 MOVZ W0, 0x1
	0x03C3A448 B 0x3C3A458
	0x03C3A44C LDR W8, [X19 + 0x2C]
	0x03C3A450 CMP W8, 0x0
	0x03C3A454 CSET W0, NE
	0x03C3A458 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7AC000
	007 Move X3, [X22+1384]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51609600
	014 Add X0, X0, 146
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1384], X0
	018 And W2, W20, 1
	019 Move X0, X21
	020 Move X1, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: UnityEngine.Object Internal_InstantiateSingle(UnityEngine.Object data, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot)

Disassembly:
	0x03C39D48 LDR X9, [X9 + 0x6A0]
	0x03C39D4C LDR W10, [X0 + 0x1C]
	0x03C39D50 LDR X8, [X0 + 0x10]
	0x03C39D54 LDR X9, [X9]
	0x03C39D58 ADD W10, W10, 0x1
	0x03C39D5C STR W10, [X0 + 0x1C]
	0x03C39D60 CBZ X8, 0x3C39E6C
	0x03C39D64 LDRSW X10, [X0 + 0x18]
	0x03C39D68 LDR W11, [X8 + 0x18]
	0x03C39D6C CMP W10, W11
	0x03C39D70 B.CS 0x3C39D94
	0x03C39D74 MOVZ W11, 0x18
	0x03C39D78 ADD W9, W10, 0x1
	0x03C39D7C MADD X8, X10, X11, X8
	0x03C39D80 MOV X23, X31
	0x03C39D84 STR W9, [X0 + 0x18]
	0x03C39D88 STP X22, X20, [X8 + 0x20]
	0x03C39D8C STR X19, [X8 + 0x30]
	0x03C39D90 B 0x3C39DB4
	0x03C39D94 LDR X8, [X9 + 0x20]
	0x03C39D98 LDR X8, [X8 + 0xC0]
	0x03C39D9C LDR X2, [X8 + 0x70]
	0x03C39DA0 STP X22, X20, [X31 + 0x8]
	0x03C39DA4 STR X19, [X31 + 0x18]
	0x03C39DA8 ADD X1, X31, 0x8
	0x03C39DAC BL 0x3167930
	0x03C39DB0 MOV X23, X31
	0x03C39DB4 LDRB W8, [X31 + 0x4]
	0x03C39DB8 CBZ W8, 0x3C39DC8
	0x03C39DBC MOV X0, X21
	0x03C39DC0 MOV X1, X31
	0x03C39DC4 BL 0x33E14E4
	0x03C39DC8 CBNZ X23, 0x3C39E70
	0x03C39DCC CBZ X19, 0x3C39E78
	0x03C39DD0 LDR X8, [X19]
	0x03C39DD4 LDP X9, X1, [X8 + 0x1D8]
	0x03C39DD8 MOV X0, X19
	0x03C39DDC BLR X9

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move [X31+16], S0
	007 Move [X31+24], S1
	008 Move [X31+24], S2
	009 Move X20, 0x7AD000
	010 Move [X31], S3
	011 Move [X31+8], S4
	012 Move [X31+8], S5
	013 Move [X31+16], S6
	014 Move X21, 0x4BB000
	015 Move W8, [X20+1392]
	016 Move X21, [X21+1432]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x4BB000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1392], W8
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X20, 0x7AD000
	033 Move X8, [X20+1464]
	034 Compare X8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, -51535872
	037 Add X0, X0, 3559
	038 Call 0x1C17CB8
	039 Move X8, X0
	040 Move [X20+1464], X0
	041 Add X1, X31, 16
	042 Add X2, X31, 0
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Add X31, X31, 64
	050 Return X0

Method: UnityEngine.Object Internal_InstantiateSingleWithParent(UnityEngine.Object data, UnityEngine.Transform parent, UnityEngine.Vector3 pos, UnityEngine.Quaternion rot)

Disassembly:
	0x03C39F84 MOV X0, X21
	0x03C39F88 BL 0x1C16F18
	0x03C39F8C BL 0x1990590
	0x03C39F90 STP X1, X2, [X0]
	0x03C39F94 STR X3, [X0 + 0x10]
	0x03C39F98 RET
	0x03C39F9C ADD X0, X0, 0x2C
	0x03C39FA0 MOV X1, X31
	0x03C39FA4 B 0x33EB14C
	0x03C39FA8 ADD X0, X0, 0x2C
	0x03C39FAC MOV X1, X31
	0x03C39FB0 B 0x33EB148
	0x03C39FB4 SUB X31, X31, 0x50
	0x03C39FB8 STR X30, [X31 + 0x20]
	0x03C39FBC STP X22, X21, [X31 + 0x30]
	0x03C39FC0 STP X20, X19, [X31 + 0x40]
	0x03C39FC4 ADRP X19, 0x7AC000
	0x03C39FC8 LDRB W8, [X19 + 0x5CB]
	0x03C39FCC MOV X21, X2
	0x03C39FD0 MOV X22, X1
	0x03C39FD4 MOV X20, X0
	0x03C39FD8 TBNZ X8, 0x0, 0x3C39FF0
	0x03C39FDC ADRP X0, 0x526000
	0x03C39FE0 LDR X0, [X0 + 0x6A0]
	0x03C39FE4 BL 0x1C16CF4
	0x03C39FE8 MOVZ W8, 0x1
	0x03C39FEC STRB W8, [X19 + 0x5CB]
	0x03C39FF0 LDR X19, [X20 + 0x18]
	0x03C39FF4 STRB W31, [X31 + 0x2C]
	0x03C39FF8 ADD X1, X31, 0x2C
	0x03C39FFC MOV X0, X19
	0x03C3A000 MOV X2, X31
	0x03C3A004 BL 0x33DE64C
	0x03C3A008 LDR X0, [X20 + 0x18]
	0x03C3A00C CBZ X0, 0x3C3A0B4
	0x03C3A010 ADRP X9, 0x525000
	0x03C3A014 LDR X9, [X9 + 0x6A0]
	0x03C3A018 LDR W10, [X0 + 0x1C]
	0x03C3A01C LDR X8, [X0 + 0x10]
	0x03C3A020 LDR X9, [X9]
	0x03C3A024 ADD W10, W10, 0x1
	0x03C3A028 STR W10, [X0 + 0x1C]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move [X31+16], S0
	008 Move [X31+24], S1
	009 Move [X31+24], S2
	010 Move X21, 0x7AD000
	011 Move [X31], S3
	012 Move [X31+8], S4
	013 Move [X31+8], S5
	014 Move [X31+16], S6
	015 Move X22, 0x4BB000
	016 Move W8, [X21+1393]
	017 Move X22, [X22+1432]
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x4BB000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1393], W8
	029 Move X0, [X22]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X21, 0x7AD000
	035 Move X8, [X21+1472]
	036 Compare X8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, -51548160
	039 Add X0, X0, 1240
	040 Call 0x1C17CB8
	041 Move X8, X0
	042 Move [X21+1472], X0
	043 Add X2, X31, 16
	044 Add X3, X31, 0
	045 Move X0, X20
	046 Move X1, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X22, [X31+48]
	051 Move X21, [X31+56]
	052 Move X30, [X31+32]
	053 Add X31, X31, 80
	054 Return X0

Method: System.String ToString(UnityEngine.Object obj)

Disassembly:
	0x03C3A8F8 LDR X8, [X8 + 0xA28]
	0x03C3A8FC LDR X0, [X8]
	0x03C3A900 LDR W8, [X0 + 0xE0]
	0x03C3A904 CBNZ W8, 0x3C3A90C
	0x03C3A908 BL 0x1C16DFC
	0x03C3A90C ADRP X8, 0x525000
	0x03C3A910 LDR X8, [X8 + 0x6D8]
	0x03C3A914 MOV X1, X31
	0x03C3A918 LDR X0, [X8]
	0x03C3A91C BL 0x3C06A04
	0x03C3A920 STR X31, [X19 + 0x10]
	0x03C3A924 LDP X20, X19, [X31 + 0x10]
	0x03C3A928 LDP X30, X21, [X31], #0x20
	0x03C3A92C RET
	0x03C3A930 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AC000
	005 Move X1, [X20+1400]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51576832
	010 Add X0, X0, 892
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1400], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.String GetName(UnityEngine.Object obj)

Disassembly:
	0x03C39A48 BL 0x1C16CB8
	0x03C39A4C MOV X1, X0
	0x03C39A50 STR X0, [X20 + 0x590]
	0x03C39A54 MOV W0, W19
	0x03C39A58 LDP X20, X19, [X31 + 0x10]
	0x03C39A5C LDR X30, [X31], #0x20
	0x03C39A60 BR X1
	0x03C39A64 STR X30, [X31 - 0x20]!
	0x03C39A68 STP X20, X19, [X31 + 0x10]
	0x03C39A6C ADRP X20, 0x7AC000
	0x03C39A70 LDR X1, [X20 + 0x598]
	0x03C39A74 MOV W19, W0
	0x03C39A78 CBNZ X1, 0x3C39A90
	0x03C39A7C ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C39A80 ADD X0, X0, 0x9F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AD000
	005 Move X1, [X20+1408]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51654656
	010 Add X0, X0, 1128
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1408], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetName(UnityEngine.Object obj, System.String name)

Disassembly:
	0x03C39B08 STRB W8, [X19 + 0x5A8]
	0x03C39B0C LDR X8, [X20]
	0x03C39B10 LDP X20, X19, [X31 + 0x10]
	0x03C39B14 MOVN W9, 0x0
	0x03C39B18 LDR X8, [X8 + 0xB8]
	0x03C39B1C STR W9, [X8]
	0x03C39B20 LDR X30, [X31], #0x20
	0x03C39B24 RET
	0x03C39B28 STP X30, X23, [X31 - 0x30]!
	0x03C39B2C STP X22, X21, [X31 + 0x10]
	0x03C39B30 STP X20, X19, [X31 + 0x20]
	0x03C39B34 ADRP X21, 0x7AC000
	0x03C39B38 ADRP X23, 0x526000
	0x03C39B3C ADRP X22, 0x526000
	0x03C39B40 LDRB W8, [X21 + 0x5C8]
	0x03C39B44 LDR X23, [X23 + 0x690]
	0x03C39B48 LDR X22, [X22 + 0x698]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AD000
	006 Move X2, [X21+1416]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51662848
	012 Add X0, X0, 823
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1416], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean DoesObjectWithInstanceIDExist(System.Int32 instanceID)

Disassembly:
	0x03C3AA28 BR X4
	0x03C3AA2C MOV W3, W31
	0x03C3AA30 MOV W4, W31
	0x03C3AA34 B 0x3C3AA38
	0x03C3AA38 SUB X31, X31, 0x50
	0x03C3AA3C STP X30, X25, [X31 + 0x10]
	0x03C3AA40 STP X24, X23, [X31 + 0x20]
	0x03C3AA44 STP X22, X21, [X31 + 0x30]
	0x03C3AA48 STP X20, X19, [X31 + 0x40]
	0x03C3AA4C MOV W23, W1
	0x03C3AA50 MOV X1, X31
	0x03C3AA54 MOV W20, W4
	0x03C3AA58 MOV W21, W3
	0x03C3AA5C MOV W22, W2
	0x03C3AA60 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AC000
	005 Move X1, [X20+1424]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51609600
	010 Add X0, X0, 254
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1424], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Object FindObjectFromInstanceID(System.Int32 instanceID)

Disassembly:
	0x03C3AA64 BL 0x33BDD8C
	0x03C3AA68 CMP W23, 0x0
	0x03C3AA6C B.LE 0x3C3AAF8
	0x03C3AA70 CMP W22, 0x0
	0x03C3AA74 B.LE 0x3C3AB28
	0x03C3AA78 ADRP X25, 0x7AB000
	0x03C3AA7C LDR X8, [X25 + 0x748]
	0x03C3AA80 UMADDL X24, X22, X23, X31
	0x03C3AA84 CBNZ X8, 0x3C3AA9C
	0x03C3AA88 ADRP X0, 0xFFFFFFFFFCECD000
	0x03C3AA8C ADD X0, X0, 0x32B
	0x03C3AA90 BL 0x1C16CB8
	0x03C3AA94 MOV X8, X0
	0x03C3AA98 STR X0, [X25 + 0x748]
	0x03C3AA9C BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AC000
	005 Move X1, [X20+1432]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51441664
	010 Add X0, X0, 2552
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1432], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Object ForceLoadFromInstanceID(System.Int32 instanceID)

Disassembly:
	0x03C3AAA0 CMP X24, X0
	0x03C3AAA4 B.GT 0x3C3AB84
	0x03C3AAA8 ADRP X24, 0x7AB000
	0x03C3AAAC LDR X8, [X24 + 0x5D8]
	0x03C3AAB0 CBNZ X8, 0x3C3AAC8
	0x03C3AAB4 ADRP X0, 0xFFFFFFFFFCEC9000
	0x03C3AAB8 ADD X0, X0, 0x150
	0x03C3AABC BL 0x1C16CB8
	0x03C3AAC0 MOV X8, X0
	0x03C3AAC4 STR X0, [X24 + 0x5D8]
	0x03C3AAC8 MOV W0, W23
	0x03C3AACC MOV W1, W22
	0x03C3AAD0 MOV W2, W21
	0x03C3AAD4 MOV W3, W20
	0x03C3AAD8 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AC000
	005 Move X1, [X20+1440]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51490816
	010 Add X0, X0, 3522
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1440], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor()

Disassembly:
	0x03C34594 TBZ X8, 0x0, 0x3C345D4
	0x03C34598 ADRP X8, 0x4E6000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03C3AADC STR X0, [X19 + 0x10]
	0x03C3AAE0 LDP X20, X19, [X31 + 0x40]
	0x03C3AAE4 LDP X22, X21, [X31 + 0x30]
	0x03C3AAE8 LDP X24, X23, [X31 + 0x20]
	0x03C3AAEC LDP X30, X25, [X31 + 0x10]
	0x03C3AAF0 ADD X31, X31, 0x50
	0x03C3AAF4 RET
	0x03C3AAF8 ADRP X0, 0x4C1000
	0x03C3AAFC LDR X0, [X0 + 0x578]
	0x03C3AB00 BL 0x1C16D08
	0x03C3AB04 BL 0x1C16F10
	0x03C3AB08 MOV X19, X0
	0x03C3AB0C ADRP X0, 0x525000
	0x03C3AB10 LDR X0, [X0 + 0x6E0]
	0x03C3AB14 BL 0x1C16D08
	0x03C3AB18 MOV X20, X0
	0x03C3AB1C ADRP X0, 0x4E1000
	0x03C3AB20 LDR X0, [X0 + 0x648]
	0x03C3AB24 B 0x3C3AB54

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7AC000
	005 Move X20, 0x4BA000
	006 Move W8, [X19+1448]
	007 Move X20, [X20+1432]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4BA000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1448], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move TEMP, 0
	021 Not TEMP
	022 Move W9, TEMP
	023 Move X8, [X8+184]
	024 Move [X8], W9
	025 Move X30, [X31+32]
	026 Return 

Method: UnityEngine.Object Internal_CloneSingleWithScene_Injected(UnityEngine.Object data, ref UnityEngine.SceneManagement.Scene scene)

Disassembly:
	0x03C3A934 STP X20, X19, [X31 + 0x10]
	0x03C3A938 ADRP X21, 0x7AB000
	0x03C3A93C ADRP X20, 0x4C0000
	0x03C3A940 LDRB W8, [X21 + 0x5D2]
	0x03C3A944 LDR X20, [X20 + 0xC10]
	0x03C3A948 MOV X19, X0
	0x03C3A94C TBNZ X8, 0x0, 0x3C3A964
	0x03C3A950 ADRP X0, 0x4C0000
	0x03C3A954 LDR X0, [X0 + 0xC10]
	0x03C3A958 BL 0x1C16CF4
	0x03C3A95C MOVZ W8, 0x1
	0x03C3A960 STRB W8, [X21 + 0x5D2]
	0x03C3A964 MOVZ W1, 0x1
	0x03C3A968 MOV X0, X19
	0x03C3A96C BL 0x3C3A874
	0x03C3A970 LDR X0, [X20]
	0x03C3A974 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AC000
	006 Move X2, [X21+1456]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51634176
	012 Add X0, X0, 909
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1456], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Object Internal_InstantiateSingle_Injected(UnityEngine.Object data, ref UnityEngine.Vector3 pos, ref UnityEngine.Quaternion rot)

Disassembly:
	0x03C3A978 CBNZ W8, 0x3C3A980
	0x03C3A97C BL 0x1C16DFC
	0x03C3A980 MOV X0, X19
	0x03C3A984 LDP X20, X19, [X31 + 0x10]
	0x03C3A988 MOV X1, X31
	0x03C3A98C LDP X30, X21, [X31], #0x20
	0x03C3A990 B 0x33B3E9C
	0x03C3A994 STR X30, [X31 - 0x20]!
	0x03C3A998 STP X20, X19, [X31 + 0x10]
	0x03C3A99C ADRP X20, 0x7AB000
	0x03C3A9A0 LDR X1, [X20 + 0x5E0]
	0x03C3A9A4 MOV X19, X0
	0x03C3A9A8 CBNZ X1, 0x3C3A9C0
	0x03C3A9AC ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C3A9B0 ADD X0, X0, 0x375
	0x03C3A9B4 BL 0x1C16CB8
	0x03C3A9B8 MOV X1, X0
	0x03C3A9BC STR X0, [X20 + 0x5E0]
	0x03C3A9C0 MOV X0, X19
	0x03C3A9C4 LDP X20, X19, [X31 + 0x10]
	0x03C3A9C8 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7AC000
	007 Move X3, [X22+1464]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51539968
	014 Add X0, X0, 3559
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1464], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: UnityEngine.Object Internal_InstantiateSingleWithParent_Injected(UnityEngine.Object data, UnityEngine.Transform parent, ref UnityEngine.Vector3 pos, ref UnityEngine.Quaternion rot)

Disassembly:
	0x03C3A9CC BR X1
	0x03C3A9D0 STP X30, X23, [X31 - 0x30]!
	0x03C3A9D4 STP X22, X21, [X31 + 0x10]
	0x03C3A9D8 STP X20, X19, [X31 + 0x20]
	0x03C3A9DC ADRP X23, 0x7AB000
	0x03C3A9E0 LDR X4, [X23 + 0x5D8]
	0x03C3A9E4 MOV W19, W3
	0x03C3A9E8 MOV W20, W2
	0x03C3A9EC MOV W21, W1
	0x03C3A9F0 MOV W22, W0
	0x03C3A9F4 CBNZ X4, 0x3C3AA0C
	0x03C3A9F8 ADRP X0, 0xFFFFFFFFFCEC9000
	0x03C3A9FC ADD X0, X0, 0x150
	0x03C3AA00 BL 0x1C16CB8
	0x03C3AA04 MOV X4, X0
	0x03C3AA08 STR X0, [X23 + 0x5D8]
	0x03C3AA0C MOV W0, W22
	0x03C3AA10 MOV W1, W21
	0x03C3AA14 MOV W2, W20
	0x03C3AA18 MOV W3, W19
	0x03C3AA1C LDP X20, X19, [X31 + 0x20]
	0x03C3AA20 LDP X22, X21, [X31 + 0x10]
	0x03C3AA24 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7AC000
	008 Move X4, [X23+1472]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51552256
	016 Add X0, X0, 1240
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+1472], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move X2, X20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

