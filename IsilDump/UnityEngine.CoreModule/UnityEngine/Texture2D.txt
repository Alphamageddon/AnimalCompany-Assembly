Type: UnityEngine.Texture2D

Method: UnityEngine.TextureFormat get_format()

Disassembly:
	0x03C1C334 STP X26, X25, [X31 + 0x10]
	0x03C1C338 STP X24, X23, [X31 + 0x20]
	0x03C1C33C STP X22, X21, [X31 + 0x30]
	0x03C1C340 STP X20, X19, [X31 + 0x40]
	0x03C1C344 LDR X8, [X0]
	0x03C1C348 MOV W25, W1
	0x03C1C34C MOV W19, W6
	0x03C1C350 MOV X20, X5
	0x03C1C354 LDP X9, X8, [X8 + 0x1E8]
	0x03C1C358 MOV W21, W4
	0x03C1C35C MOV W22, W3
	0x03C1C360 MOV W23, W2
	0x03C1C364 MOV X1, X8
	0x03C1C368 MOV X24, X0
	0x03C1C36C BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C9000
	005 Move X1, [X20+3232]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51359744
	010 Add X0, X0, 2412
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3232], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Texture2D get_whiteTexture()

Disassembly:
	0x03C1C370 TBZ X0, 0x0, 0x3C1C3CC
	0x03C1C374 ADRP X26, 0x7C8000
	0x03C1C378 LDR X8, [X26 + 0xCE0]
	0x03C1C37C CBNZ X8, 0x3C1C394
	0x03C1C380 ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C1C384 ADD X0, X0, 0x822
	0x03C1C388 BL 0x1C16CB8
	0x03C1C38C MOV X8, X0
	0x03C1C390 STR X0, [X26 + 0xCE0]
	0x03C1C394 MOV X0, X24

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7C9000
	004 Move X0, [X19+3240]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51535872
	008 Add X0, X0, 660
	009 Call 0x1C17CB8
	010 Move [X19+3240], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Texture2D get_blackTexture()

Disassembly:
	0x03C1C398 MOV W1, W25
	0x03C1C39C MOV W2, W23
	0x03C1C3A0 MOV W3, W22
	0x03C1C3A4 MOV W4, W21
	0x03C1C3A8 MOV X5, X20
	0x03C1C3AC MOV W6, W19
	0x03C1C3B0 LDP X20, X19, [X31 + 0x40]
	0x03C1C3B4 LDP X22, X21, [X31 + 0x30]
	0x03C1C3B8 LDP X24, X23, [X31 + 0x20]
	0x03C1C3BC LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7C9000
	004 Move X0, [X19+3248]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51535872
	008 Add X0, X0, 702
	009 Call 0x1C17CB8
	010 Move [X19+3248], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean Internal_CreateImpl(UnityEngine.Texture2D mono, System.Int32 w, System.Int32 h, System.Int32 mipCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.TextureColorSpace colorSpace, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.IntPtr nativeTex, System.String mipmapLimitGroupName)

Disassembly:
	0x03C1C3C0 MOV W7, W31
	0x03C1C3C4 LDR X30, [X31], #0x50
	0x03C1C3C8 BR X8
	0x03C1C3CC MOV X1, X24
	0x03C1C3D0 BL 0x3C1B1DC
	0x03C1C3D4 MOV X19, X0
	0x03C1C3D8 ADRP X0, 0x543000
	0x03C1C3DC LDR X0, [X0 + 0x80]
	0x03C1C3E0 BL 0x1C16D08
	0x03C1C3E4 MOV X1, X0
	0x03C1C3E8 MOV X0, X19
	0x03C1C3EC BL 0x1C16DEC
	0x03C1C3F0 STP X30, X21, [X31 - 0x20]!
	0x03C1C3F4 STP X20, X19, [X31 + 0x10]
	0x03C1C3F8 LDR X8, [X0]
	0x03C1C3FC MOV X20, X1
	0x03C1C400 MOV X19, X0
	0x03C1C404 LDP X9, X8, [X8 + 0x188]
	0x03C1C408 MOV X1, X8
	0x03C1C40C BLR X9
	0x03C1C410 LDR X8, [X19]
	0x03C1C414 MOV W21, W0
	0x03C1C418 MOV X0, X19
	0x03C1C41C LDP X9, X1, [X8 + 0x1A8]
	0x03C1C420 BLR X9
	0x03C1C424 MOV W4, W0
	0x03C1C428 MOV X0, X19
	0x03C1C42C MOV X5, X20
	0x03C1C430 LDP X20, X19, [X31 + 0x10]
	0x03C1C434 MOV W1, W31
	0x03C1C438 MOV W2, W31
	0x03C1C43C MOV W3, W21
	0x03C1C440 MOV W6, W31
	0x03C1C444 LDP X30, X21, [X31], #0x20
	0x03C1C448 B 0x3C1C330
	0x03C1C44C STP D9, D8, [X31 - 0x20]!
	0x03C1C450 STP X30, X19, [X31 + 0x10]
	0x03C1C454 LDR X8, [X0]
	0x03C1C458 MOV V8.16B, V1.16B

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x7C9000
	013 Move X8, [X28+3256]
	014 Move X27, [X31+96]
	015 Move X19, X7
	016 Move W20, W6
	017 Move W21, W5
	018 Move W22, W4
	019 Move W23, W3
	020 Move W24, W2
	021 Move W25, W1
	022 Move X26, X0
	023 Compare X8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51326976
	026 Add X0, X0, 1813
	027 Call 0x1C17CB8
	028 Move X8, X0
	029 Move [X28+3256], X0
	030 Move [X31+96], X27
	031 Move X0, X26
	032 Move W1, W25
	033 Move W2, W24
	034 Move W3, W23
	035 Move W4, W22
	036 Move W5, W21
	037 Move W6, W20
	038 Move X7, X19
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Move X22, [X31+64]
	042 Move X21, [X31+72]
	043 Move X24, [X31+48]
	044 Move X23, [X31+56]
	045 Move X26, [X31+32]
	046 Move X25, [X31+40]
	047 Move X28, [X31+16]
	048 Move X27, [X31+24]
	049 Move X30, [X31+96]
	050 CallNoReturn X8

Method: System.Void Internal_Create(UnityEngine.Texture2D mono, System.Int32 w, System.Int32 h, System.Int32 mipCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.TextureColorSpace colorSpace, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.IntPtr nativeTex, System.String mipmapLimitGroupName)

Disassembly:
	0x03C1C45C MOV X19, X0
	0x03C1C460 MOV V9.16B, V0.16B
	0x03C1C464 LDP X9, X1, [X8 + 0x1E8]
	0x03C1C468 BLR X9
	0x03C1C46C TBZ X0, 0x0, 0x3C1C490
	0x03C1C470 MOV X0, X19
	0x03C1C474 LDP X30, X19, [X31 + 0x10]
	0x03C1C478 MOV W1, W31
	0x03C1C47C MOV W2, W31
	0x03C1C480 MOV V0.16B, V9.16B
	0x03C1C484 MOV V1.16B, V8.16B
	0x03C1C488 LDP D9, D8, [X31], #0x20
	0x03C1C48C B 0x3C1B72C
	0x03C1C490 MOV X1, X19
	0x03C1C494 BL 0x3C1B1DC
	0x03C1C498 MOV X19, X0
	0x03C1C49C ADRP X0, 0x543000
	0x03C1C4A0 LDR X0, [X0 + 0x88]
	0x03C1C4A4 BL 0x1C16D08
	0x03C1C4A8 MOV X1, X0
	0x03C1C4AC MOV X0, X19
	0x03C1C4B0 BL 0x1C16DEC
	0x03C1C4B4 STR X30, [X31 - 0x30]!
	0x03C1C4B8 STP X22, X21, [X31 + 0x10]
	0x03C1C4BC STP X20, X19, [X31 + 0x20]
	0x03C1C4C0 LDR X8, [X0]
	0x03C1C4C4 MOV W21, W1
	0x03C1C4C8 MOV W20, W2
	0x03C1C4CC MOV X19, X0
	0x03C1C4D0 LDP X9, X8, [X8 + 0x1E8]
	0x03C1C4D4 MOV X1, X8
	0x03C1C4D8 BLR X9
	0x03C1C4DC TBZ X0, 0x0, 0x3C1C51C
	0x03C1C4E0 ADRP X22, 0x7C8000
	0x03C1C4E4 LDR X3, [X22 + 0xCC8]
	0x03C1C4E8 CBNZ X3, 0x3C1C500
	0x03C1C4EC ADRP X0, 0xFFFFFFFFFCF0E000
	0x03C1C4F0 ADD X0, X0, 0x78F
	0x03C1C4F4 BL 0x1C16CB8
	0x03C1C4F8 MOV X3, X0
	0x03C1C4FC STR X0, [X22 + 0xCC8]
	0x03C1C500 AND W1, W21, 0x1
	0x03C1C504 AND W2, W20, 0x1
	0x03C1C508 MOV X0, X19
	0x03C1C50C LDP X20, X19, [X31 + 0x20]
	0x03C1C510 LDP X22, X21, [X31 + 0x10]
	0x03C1C514 LDR X30, [X31], #0x30
	0x03C1C518 BR X3
	0x03C1C51C MOV X1, X19
	0x03C1C520 BL 0x3C1B1DC
	0x03C1C524 MOV X19, X0
	0x03C1C528 ADRP X0, 0x543000
	0x03C1C52C LDR X0, [X0 + 0x90]
	0x03C1C530 BL 0x1C16D08
	0x03C1C534 MOV X1, X0
	0x03C1C538 MOV X0, X19
	0x03C1C53C BL 0x1C16DEC
	0x03C1C540 MOVZ W1, 0x1
	0x03C1C544 MOV W2, W31
	0x03C1C548 B 0x3C1C4B4
	0x03C1C54C STR X30, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X28, 0x7C9000
	014 Move X8, [X28+3256]
	015 Move X27, [X31+112]
	016 Move X19, X7
	017 Move W20, W6
	018 Move W21, W5
	019 Move W22, W4
	020 Move W23, W3
	021 Move W24, W2
	022 Move W25, W1
	023 Move X26, X0
	024 Compare X8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, -51326976
	027 Add X0, X0, 1813
	028 Call 0x1C17CB8
	029 Move X8, X0
	030 Move [X28+3256], X0
	031 Move X0, X26
	032 Move W1, W25
	033 Move W2, W24
	034 Move W3, W23
	035 Move W4, W22
	036 Move W5, W21
	037 Move W6, W20
	038 Move X7, X19
	039 Move [X31], X27
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {58}
	045 Move X20, [X31+96]
	046 Move X19, [X31+104]
	047 Move X22, [X31+80]
	048 Move X21, [X31+88]
	049 Move X24, [X31+64]
	050 Move X23, [X31+72]
	051 Move X26, [X31+48]
	052 Move X25, [X31+56]
	053 Move X28, [X31+32]
	054 Move X27, [X31+40]
	055 Move X30, [X31+16]
	056 Add X31, X31, 112
	057 Return 
	058 Move X0, 0x501000
	059 Move X0, [X0+464]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0x544000
	064 Move X0, [X0+80]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Move X2, X31
	069 Call UnityException..ctor, X0, X1
	070 Move X0, 0x544000
	071 Move X0, [X0+88]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Call 0x1C17DEC

Method: System.Boolean get_isReadable()

Disassembly:
	0x03C1C550 STP X22, X21, [X31 + 0x10]
	0x03C1C554 STP X20, X19, [X31 + 0x20]
	0x03C1C558 LDR X8, [X0]
	0x03C1C55C MOV W21, W1
	0x03C1C560 MOV W19, W2
	0x03C1C564 MOV X20, X0
	0x03C1C568 LDP X9, X8, [X8 + 0x1E8]
	0x03C1C56C MOV X1, X8
	0x03C1C570 BLR X9
	0x03C1C574 TBZ X0, 0x0, 0x3C1C5B4
	0x03C1C578 ADRP X22, 0x7C8000
	0x03C1C57C LDR X3, [X22 + 0xCD0]
	0x03C1C580 CBNZ X3, 0x3C1C598
	0x03C1C584 ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C1C588 ADD X0, X0, 0xAFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C9000
	005 Move X1, [X20+3264]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51318784
	010 Add X0, X0, 1895
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3264], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void ApplyImpl(System.Boolean updateMipmaps, System.Boolean makeNoLongerReadable)

Disassembly:
	0x03C1C58C BL 0x1C16CB8
	0x03C1C590 MOV X3, X0
	0x03C1C594 STR X0, [X22 + 0xCD0]
	0x03C1C598 MOV X0, X20
	0x03C1C59C MOV W1, W21
	0x03C1C5A0 MOV W2, W19
	0x03C1C5A4 LDP X20, X19, [X31 + 0x20]
	0x03C1C5A8 LDP X22, X21, [X31 + 0x10]
	0x03C1C5AC LDR X30, [X31], #0x30
	0x03C1C5B0 BR X3
	0x03C1C5B4 MOV X1, X20
	0x03C1C5B8 BL 0x3C1B1DC
	0x03C1C5BC MOV X19, X0
	0x03C1C5C0 ADRP X0, 0x543000
	0x03C1C5C4 LDR X0, [X0 + 0x98]
	0x03C1C5C8 BL 0x1C16D08
	0x03C1C5CC MOV X1, X0
	0x03C1C5D0 MOV X0, X19
	0x03C1C5D4 BL 0x1C16DEC
	0x03C1C5D8 STR X30, [X31 - 0x40]!
	0x03C1C5DC STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7C9000
	007 Move X3, [X22+3272]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51318784
	014 Add X0, X0, 1935
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3272], X0
	018 And W1, W20, 1
	019 And W2, W19, 1
	020 Move X0, X21
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Boolean ReinitializeImpl(System.Int32 width, System.Int32 height)

Disassembly:
	0x03C1C5E0 STP X22, X21, [X31 + 0x20]
	0x03C1C5E4 STP X20, X19, [X31 + 0x30]
	0x03C1C5E8 ADRP X24, 0x7C8000
	0x03C1C5EC LDR X5, [X24 + 0xCD8]
	0x03C1C5F0 MOV W21, W4
	0x03C1C5F4 MOV W19, W3
	0x03C1C5F8 MOV W20, W2
	0x03C1C5FC MOV W22, W1
	0x03C1C600 MOV X23, X0
	0x03C1C604 CBNZ X5, 0x3C1C61C
	0x03C1C608 ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C1C60C ADD X0, X0, 0x381
	0x03C1C610 BL 0x1C16CB8
	0x03C1C614 MOV X5, X0
	0x03C1C618 STR X0, [X24 + 0xCD8]
	0x03C1C61C AND W4, W21, 0x1
	0x03C1C620 MOV X0, X23
	0x03C1C624 MOV W1, W22
	0x03C1C628 MOV W2, W20
	0x03C1C62C MOV W3, W19
	0x03C1C630 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7C9000
	007 Move X3, [X22+3280]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51384320
	014 Add X0, X0, 2812
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3280], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetPixelImpl(System.Int32 image, System.Int32 mip, System.Int32 x, System.Int32 y, UnityEngine.Color color)

Disassembly:
	0x03C1C634 LDP X22, X21, [X31 + 0x20]
	0x03C1C638 LDP X24, X23, [X31 + 0x10]
	0x03C1C63C LDR X30, [X31], #0x40
	0x03C1C640 BR X5
	0x03C1C644 B 0x3C1C54C
	0x03C1C648 STR X30, [X31 - 0x40]!
	0x03C1C64C STP X24, X23, [X31 + 0x10]
	0x03C1C650 STP X22, X21, [X31 + 0x20]
	0x03C1C654 STP X20, X19, [X31 + 0x30]
	0x03C1C658 ADRP X24, 0x7C8000
	0x03C1C65C LDR X5, [X24 + 0xCD8]
	0x03C1C660 MOV W21, W4
	0x03C1C664 MOV W19, W3
	0x03C1C668 MOV W20, W2
	0x03C1C66C MOV W22, W1
	0x03C1C670 MOV X23, X0
	0x03C1C674 CBNZ X5, 0x3C1C68C
	0x03C1C678 ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C1C67C ADD X0, X0, 0x381
	0x03C1C680 BL 0x1C16CB8
	0x03C1C684 MOV X5, X0
	0x03C1C688 STR X0, [X24 + 0xCD8]
	0x03C1C68C AND W4, W21, 0x1
	0x03C1C690 MOV X0, X23
	0x03C1C694 MOV W1, W22
	0x03C1C698 MOV W2, W20
	0x03C1C69C MOV W3, W19
	0x03C1C6A0 LDP X20, X19, [X31 + 0x30]
	0x03C1C6A4 LDP X22, X21, [X31 + 0x20]
	0x03C1C6A8 LDP X24, X23, [X31 + 0x10]
	0x03C1C6AC LDR X30, [X31], #0x40
	0x03C1C6B0 BR X5
	0x03C1C6B4 STP D11, D10, [X31 - 0x50]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0x7C9000
	010 Move X8, [X24+3344]
	011 Move W19, W4
	012 Move W20, W3
	013 Move W21, W2
	014 Move W22, W1
	015 Move X23, X0
	016 Move [X31], S0
	017 Move [X31+8], S1
	018 Move [X31+8], S2
	019 Move [X31+16], S3
	020 Compare X8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51347456
	023 Add X0, X0, 8
	024 Call 0x1C17CB8
	025 Move X8, X0
	026 Move [X24+3344], X0
	027 Add X5, X31, 0
	028 Move X0, X23
	029 Move W1, W22
	030 Move W2, W21
	031 Move W3, W20
	032 Move W4, W19
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X20, [X31+64]
	035 Move X19, [X31+72]
	036 Move X22, [X31+48]
	037 Move X21, [X31+56]
	038 Move X24, [X31+32]
	039 Move X23, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 80
	042 Return 

Method: UnityEngine.Color GetPixelBilinearImpl(System.Int32 image, System.Int32 mip, System.Single u, System.Single v)

Disassembly:
	0x03C1C72C B 0x3C1B894
	0x03C1C730 MOV X1, X22
	0x03C1C734 BL 0x3C1B1DC
	0x03C1C738 MOV X19, X0
	0x03C1C73C ADRP X0, 0x543000
	0x03C1C740 LDR X0, [X0 + 0xA0]
	0x03C1C744 BL 0x1C16D08
	0x03C1C748 MOV X1, X0
	0x03C1C74C MOV X0, X19
	0x03C1C750 BL 0x1C16DEC
	0x03C1C754 MOVZ W3, 0x1
	0x03C1C758 B 0x3C1C6B4
	0x03C1C75C STR X30, [X31 - 0x30]!
	0x03C1C760 STP X22, X21, [X31 + 0x10]
	0x03C1C764 STP X20, X19, [X31 + 0x20]
	0x03C1C768 ADRP X22, 0x7C8000
	0x03C1C76C LDR X3, [X22 + 0xCF8]
	0x03C1C770 MOV W19, W2
	0x03C1C774 MOV X20, X1
	0x03C1C778 MOV X21, X0
	0x03C1C77C CBNZ X3, 0x3C1C794
	0x03C1C780 ADRP X0, 0xFFFFFFFFFCEF3000
	0x03C1C784 ADD X0, X0, 0x238
	0x03C1C788 BL 0x1C16CB8
	0x03C1C78C MOV X3, X0
	0x03C1C790 STR X0, [X22 + 0xCF8]
	0x03C1C794 MOV X0, X21
	0x03C1C798 MOV X1, X20
	0x03C1C79C MOV W2, W19
	0x03C1C7A0 LDP X20, X19, [X31 + 0x20]
	0x03C1C7A4 LDP X22, X21, [X31 + 0x10]
	0x03C1C7A8 LDR X30, [X31], #0x30
	0x03C1C7AC BR X3
	0x03C1C7B0 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0x7C9000
	010 Move X8, [X22+3352]
	011 Move V8, V1
	012 Move V9, V0
	013 Move W19, W2
	014 Move W20, W1
	015 Move X21, X0
	016 Move [X31], X31
	017 Move [X31+8], X31
	018 Compare X8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51359744
	021 Add X0, X0, 2448
	022 Call 0x1C17CB8
	023 Move X8, X0
	024 Move [X22+3352], X0
	025 Add X3, X31, 0
	026 Move X0, X21
	027 Move W1, W20
	028 Move W2, W19
	029 Move V0, V9
	030 Move V1, V8
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move S0, [X31]
	033 Move S1, [X31+4]
	034 Move S2, [X31+8]
	035 Move S3, [X31+12]
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X30, [X31+32]
	041 Move D9, [X31+16]
	042 Move D8, [X31+24]
	043 Add X31, X31, 80
	044 Return X0

Method: System.Boolean ReinitializeWithTextureFormatImpl(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat textureFormat, System.Boolean hasMipMap)

Disassembly:
	0x03C1C828 MOV W24, W1
	0x03C1C82C MOV X25, X0
	0x03C1C830 CBNZ X7, 0x3C1C848
	0x03C1C834 ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C1C838 ADD X0, X0, 0xF2
	0x03C1C83C BL 0x1C16CB8
	0x03C1C840 MOV X7, X0
	0x03C1C844 STR X0, [X26 + 0xD28]
	0x03C1C848 MOV X0, X25
	0x03C1C84C MOV W1, W24
	0x03C1C850 MOV W2, W23
	0x03C1C854 MOV W3, W22
	0x03C1C858 MOV W4, W21
	0x03C1C85C MOV W5, W20
	0x03C1C860 MOV X6, X19
	0x03C1C864 LDP X20, X19, [X31 + 0x40]
	0x03C1C868 LDP X22, X21, [X31 + 0x30]
	0x03C1C86C LDP X24, X23, [X31 + 0x20]
	0x03C1C870 LDP X26, X25, [X31 + 0x10]
	0x03C1C874 LDR X30, [X31], #0x50
	0x03C1C878 BR X7
	0x03C1C87C STR X30, [X31 - 0x50]!
	0x03C1C880 STP X26, X25, [X31 + 0x10]
	0x03C1C884 STP X24, X23, [X31 + 0x20]
	0x03C1C888 STP X22, X21, [X31 + 0x30]
	0x03C1C88C STP X20, X19, [X31 + 0x40]
	0x03C1C890 ADRP X26, 0x7C8000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7C9000
	009 Move X5, [X24+3288]
	010 Move W21, W4
	011 Move W19, W3
	012 Move W20, W2
	013 Move W22, W1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51503104
	018 Add X0, X0, 897
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+3288], X0
	022 And W4, W21, 1
	023 Move X0, X23
	024 Move W1, W22
	025 Move W2, W20
	026 Move W3, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void ReadPixelsImpl(UnityEngine.Rect source, System.Int32 destX, System.Int32 destY, System.Boolean recalculateMipMaps)

Disassembly:
	0x03C1C894 LDR X8, [X26 + 0xD28]
	0x03C1C898 MOV X19, X6
	0x03C1C89C MOV W20, W5
	0x03C1C8A0 MOV W21, W4
	0x03C1C8A4 MOV W22, W3
	0x03C1C8A8 MOV W23, W2
	0x03C1C8AC MOV W24, W1
	0x03C1C8B0 MOV X25, X0
	0x03C1C8B4 CBNZ X8, 0x3C1C8CC
	0x03C1C8B8 ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C1C8BC ADD X0, X0, 0xF2
	0x03C1C8C0 BL 0x1C16CB8
	0x03C1C8C4 MOV X8, X0
	0x03C1C8C8 STR X0, [X26 + 0xD28]
	0x03C1C8CC MOV X0, X25
	0x03C1C8D0 MOV W1, W24
	0x03C1C8D4 MOV W2, W23
	0x03C1C8D8 MOV W3, W22
	0x03C1C8DC MOV W4, W21
	0x03C1C8E0 MOV W5, W20
	0x03C1C8E4 MOV X6, X19
	0x03C1C8E8 BLR X8
	0x03C1C8EC TBZ X0, 0x0, 0x3C1C908
	0x03C1C8F0 LDP X20, X19, [X31 + 0x40]
	0x03C1C8F4 LDP X22, X21, [X31 + 0x30]
	0x03C1C8F8 LDP X24, X23, [X31 + 0x20]
	0x03C1C8FC LDP X26, X25, [X31 + 0x10]
	0x03C1C900 LDR X30, [X31], #0x50
	0x03C1C904 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x7C9000
	009 Move X8, [X23+3360]
	010 Move W21, W3
	011 Move W19, W2
	012 Move W20, W1
	013 Move X22, X0
	014 Move [X31], S0
	015 Move [X31+8], S1
	016 Move [X31+8], S2
	017 Move [X31+16], S3
	018 Compare X8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51384320
	021 Add X0, X0, 2879
	022 Call 0x1C17CB8
	023 Move X8, X0
	024 Move [X23+3360], X0
	025 And W4, W21, 1
	026 Add X1, X31, 0
	027 Move X0, X22
	028 Move W2, W20
	029 Move W3, W19
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X20, [X31+48]
	032 Move X19, [X31+56]
	033 Move X22, [X31+32]
	034 Move X21, [X31+40]
	035 Move X30, [X31+16]
	036 Move X23, [X31+24]
	037 Add X31, X31, 64
	038 Return 

Method: System.Void SetPixelsImpl(System.Int32 x, System.Int32 y, System.Int32 w, System.Int32 h, UnityEngine.Color[] pixel, System.Int32 miplevel, System.Int32 frame)

Disassembly:
	0x03C1C974 ADRP X0, 0xFFFFFFFFFCED2000
	0x03C1C978 ADD X0, X0, 0xE9D
	0x03C1C97C BL 0x1C16CB8
	0x03C1C980 MOV X3, X0
	0x03C1C984 STR X0, [X22 + 0xD30]
	0x03C1C988 AND W1, W20, 0x1
	0x03C1C98C AND W2, W19, 0x1
	0x03C1C990 MOV X0, X21
	0x03C1C994 LDP X20, X19, [X31 + 0x20]
	0x03C1C998 LDP X22, X21, [X31 + 0x10]
	0x03C1C99C LDR X30, [X31], #0x30
	0x03C1C9A0 BR X3
	0x03C1C9A4 STR X30, [X31 - 0x20]!
	0x03C1C9A8 STP X20, X19, [X31 + 0x10]
	0x03C1C9AC ADRP X20, 0x7C8000
	0x03C1C9B0 LDR X1, [X20 + 0xD38]
	0x03C1C9B4 MOV X19, X0
	0x03C1C9B8 CBNZ X1, 0x3C1C9D0
	0x03C1C9BC ADRP X0, 0xFFFFFFFFFCEFA000
	0x03C1C9C0 ADD X0, X0, 0x9FB
	0x03C1C9C4 BL 0x1C16CB8
	0x03C1C9C8 MOV X1, X0
	0x03C1C9CC STR X0, [X20 + 0xD38]
	0x03C1C9D0 MOV X0, X19
	0x03C1C9D4 LDP X20, X19, [X31 + 0x10]
	0x03C1C9D8 LDR X30, [X31], #0x20
	0x03C1C9DC BR X1
	0x03C1C9E0 SUB X31, X31, 0x50
	0x03C1C9E4 STR X30, [X31 + 0x10]
	0x03C1C9E8 STP X24, X23, [X31 + 0x20]
	0x03C1C9EC STP X22, X21, [X31 + 0x30]
	0x03C1C9F0 STP X20, X19, [X31 + 0x40]
	0x03C1C9F4 ADRP X24, 0x7C8000
	0x03C1C9F8 LDR X8, [X24 + 0xD48]
	0x03C1C9FC MOV W19, W4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x7C9000
	012 Move X8, [X27+3296]
	013 Move W19, W7
	014 Move W20, W6
	015 Move X21, X5
	016 Move W22, W4
	017 Move W23, W3
	018 Move W24, W2
	019 Move W25, W1
	020 Move X26, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51326976
	024 Add X0, X0, 2082
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X27+3296], X0
	028 Move X0, X26
	029 Move W1, W25
	030 Move W2, W24
	031 Move W3, W23
	032 Move W4, W22
	033 Move X5, X21
	034 Move W6, W20
	035 Move W7, W19
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X24, [X31+32]
	041 Move X23, [X31+40]
	042 Move X26, [X31+16]
	043 Move X25, [X31+24]
	044 Move X30, [X31+80]
	045 Move X27, [X31+88]
	046 CallNoReturn X8

Method: System.IntPtr GetWritableImageData(System.Int32 frame)

Disassembly:
	0x03C1CA00 MOV W20, W3
	0x03C1CA04 MOV W21, W2
	0x03C1CA08 MOV W22, W1
	0x03C1CA0C MOV X23, X0
	0x03C1CA10 STP S0, S1, [X31]
	0x03C1CA14 STP S2, S3, [X31 + 0x8]
	0x03C1CA18 CBNZ X8, 0x3C1CA30
	0x03C1CA1C ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C1CA20 ADD X0, X0, 0x2B2
	0x03C1CA24 BL 0x1C16CB8
	0x03C1CA28 MOV X8, X0
	0x03C1CA2C STR X0, [X24 + 0xD48]
	0x03C1CA30 ADD X5, X31, 0x0
	0x03C1CA34 MOV X0, X23
	0x03C1CA38 MOV W1, W22
	0x03C1CA3C MOV W2, W21
	0x03C1CA40 MOV W3, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C9000
	006 Move X2, [X21+3304]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51527680
	012 Add X0, X0, 362
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3304], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.UInt64 GetRawImageDataSize()

Disassembly:
	0x03C1CA44 MOV W4, W19
	0x03C1CA48 BLR X8
	0x03C1CA4C LDP X20, X19, [X31 + 0x40]
	0x03C1CA50 LDP X22, X21, [X31 + 0x30]
	0x03C1CA54 LDP X24, X23, [X31 + 0x20]
	0x03C1CA58 LDR X30, [X31 + 0x10]
	0x03C1CA5C ADD X31, X31, 0x50
	0x03C1CA60 RET
	0x03C1CA64 STP X30, X25, [X31 - 0x40]!
	0x03C1CA68 STP X24, X23, [X31 + 0x10]
	0x03C1CA6C STP X22, X21, [X31 + 0x20]
	0x03C1CA70 STP X20, X19, [X31 + 0x30]
	0x03C1CA74 ADRP X25, 0x7C8000
	0x03C1CA78 LDR X6, [X25 + 0xD48]
	0x03C1CA7C MOV X19, X5

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C9000
	005 Move X1, [X20+3312]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51494912
	010 Add X0, X0, 403
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3312], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetAllPixels32(UnityEngine.Color32[] colors, System.Int32 miplevel)

Disassembly:
	0x03C1CA80 MOV W20, W4
	0x03C1CA84 MOV W21, W3
	0x03C1CA88 MOV W22, W2
	0x03C1CA8C MOV W23, W1
	0x03C1CA90 MOV X24, X0
	0x03C1CA94 CBNZ X6, 0x3C1CAAC
	0x03C1CA98 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C1CA9C ADD X0, X0, 0x2B2
	0x03C1CAA0 BL 0x1C16CB8
	0x03C1CAA4 MOV X6, X0
	0x03C1CAA8 STR X0, [X25 + 0xD48]
	0x03C1CAAC MOV X0, X24
	0x03C1CAB0 MOV W1, W23
	0x03C1CAB4 MOV W2, W22
	0x03C1CAB8 MOV W3, W21
	0x03C1CABC MOV W4, W20
	0x03C1CAC0 MOV X5, X19
	0x03C1CAC4 LDP X20, X19, [X31 + 0x30]
	0x03C1CAC8 LDP X22, X21, [X31 + 0x20]
	0x03C1CACC LDP X24, X23, [X31 + 0x10]
	0x03C1CAD0 LDP X30, X25, [X31], #0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7C9000
	007 Move X3, [X22+3320]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51429376
	014 Add X0, X0, 568
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3320], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: UnityEngine.Color32[] GetPixels32(System.Int32 miplevel)

Disassembly:
	0x03C1CAD4 BR X6
	0x03C1CAD8 SUB X31, X31, 0x40
	0x03C1CADC STP X30, X21, [X31 + 0x20]
	0x03C1CAE0 STP X20, X19, [X31 + 0x30]
	0x03C1CAE4 MOV W20, W2
	0x03C1CAE8 MOV W19, W1
	0x03C1CAEC BL 0x3C1AE64
	0x03C1CAF0 SUB W8, W19, 0x1E
	0x03C1CAF4 CMP W8, 0x3
	0x03C1CAF8 MOV W21, W0
	0x03C1CAFC B.HI 0x3C1CB14
	0x03C1CB00 TBZ X21, 0x0, 0x3C1CB14
	0x03C1CB04 MOV W0, W20
	0x03C1CB08 MOV X1, X31
	0x03C1CB0C BL 0x3C1ED70
	0x03C1CB10 TBZ X0, 0x0, 0x3C1CB28
	0x03C1CB14 AND W0, W21, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C9000
	006 Move X2, [X21+3328]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51535872
	012 Add X0, X0, 744
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3328], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Color32[] GetPixels32()

Disassembly:
	0x03C1CB18 LDP X20, X19, [X31 + 0x30]
	0x03C1CB1C LDP X30, X21, [X31 + 0x20]
	0x03C1CB20 ADD X31, X31, 0x40
	0x03C1CB24 RET
	0x03C1CB28 ADRP X0, 0x537000
	0x03C1CB2C LDR X0, [X0 + 0x4C0]
	0x03C1CB30 BL 0x1C16D08
	0x03C1CB34 MOVN X8, 0x0
	0x03C1CB38 STP X0, X8, [X31 + 0x8]
	0x03C1CB3C ADD X0, X31, 0x8
	0x03C1CB40 MOV X1, X31
	0x03C1CB44 STR W19, [X31 + 0x18]
	0x03C1CB48 BL 0x33B162C
	0x03C1CB4C MOV X19, X0
	0x03C1CB50 ADRP X0, 0x543000
	0x03C1CB54 LDR X0, [X0 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C9000
	005 Move X2, [X20+3328]
	006 Move X19, X0
	007 Compare X2, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51535872
	010 Add X0, X0, 744
	011 Call 0x1C17CB8
	012 Move X2, X0
	013 Move [X20+3328], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move W1, W31
	018 Move X30, [X31+32]
	019 CallNoReturn X2

Method: System.Boolean ValidateFormat(UnityEngine.TextureFormat format, System.Int32 width, System.Int32 height)

Disassembly:
	0x03C1CB58 BL 0x1C16D08
	0x03C1CB5C MOV X1, X19
	0x03C1CB60 MOV X2, X31
	0x03C1CB64 BL 0x321EFD0
	0x03C1CB68 MOV X19, X0
	0x03C1CB6C ADRP X0, 0x500000
	0x03C1CB70 LDR X0, [X0 + 0x1D0]
	0x03C1CB74 BL 0x1C16D08
	0x03C1CB78 BL 0x1C16F10
	0x03C1CB7C MOV X1, X19
	0x03C1CB80 MOV X2, X31
	0x03C1CB84 MOV X20, X0
	0x03C1CB88 BL 0x3C363D0
	0x03C1CB8C ADRP X0, 0x543000
	0x03C1CB90 LDR X0, [X0 + 0xB8]
	0x03C1CB94 BL 0x1C16D08
	0x03C1CB98 MOV X1, X0
	0x03C1CB9C MOV X0, X20
	0x03C1CBA0 BL 0x1C16DEC
	0x03C1CBA4 SUB X31, X31, 0x50
	0x03C1CBA8 STR X30, [X31 + 0x20]
	0x03C1CBAC STP X22, X21, [X31 + 0x30]
	0x03C1CBB0 STP X20, X19, [X31 + 0x40]
	0x03C1CBB4 ADRP X22, 0x7C8000
	0x03C1CBB8 LDRB W8, [X22 + 0xD40]
	0x03C1CBBC MOV W20, W2
	0x03C1CBC0 MOV W19, W1
	0x03C1CBC4 MOV X21, X0
	0x03C1CBC8 TBNZ X8, 0x0, 0x3C1CBE0
	0x03C1CBCC ADRP X0, 0x537000
	0x03C1CBD0 LDR X0, [X0 + 0x90]
	0x03C1CBD4 BL 0x1C16CF4
	0x03C1CBD8 MOVZ W8, 0x1
	0x03C1CBDC STRB W8, [X22 + 0xD40]
	0x03C1CBE0 MOV X0, X21
	0x03C1CBE4 MOV W1, W19
	0x03C1CBE8 MOV W2, W31
	0x03C1CBEC BL 0x3C1B024
	0x03C1CBF0 MOV W21, W0
	0x03C1CBF4 TBZ X0, 0x0, 0x3C1CC30
	0x03C1CBF8 ADRP X8, 0x537000
	0x03C1CBFC LDR X8, [X8 + 0x90]
	0x03C1CC00 LDR X0, [X8]
	0x03C1CC04 LDR W8, [X0 + 0xE0]
	0x03C1CC08 CBNZ W8, 0x3C1CC10
	0x03C1CC0C BL 0x1C16DFC
	0x03C1CC10 MOV W0, W19
	0x03C1CC14 MOV X1, X31
	0x03C1CC18 BL 0x3C61CB0
	0x03C1CC1C TBZ X0, 0x0, 0x3C1CC30
	0x03C1CC20 MOV W0, W20
	0x03C1CC24 MOV X1, X31
	0x03C1CC28 BL 0x3C1ED70
	0x03C1CC2C TBZ X0, 0x0, 0x3C1CC48
	0x03C1CC30 AND W0, W21, 0x1
	0x03C1CC34 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move W22, W3
	008 Move W20, W2
	009 Move W19, W1
	010 Call Texture.ValidateFormat, X0, X1
	011 Subtract W8, W19, 30
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W21, W0
	014 Move TEMP, X21
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {26}
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W0, W20
	020 Move X1, X31
	021 Call Mathf.IsPowerOfTwo, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {34}
	026 And W0, W21, 1
	027 Move X20, [X31+64]
	028 Move X19, [X31+72]
	029 Move X22, [X31+48]
	030 Move X21, [X31+56]
	031 Move X30, [X31+32]
	032 Add X31, X31, 80
	033 Return X0
	034 Move X0, 0x538000
	035 Move X0, [X0+1216]
	036 Call 0x1C17D08
	037 Move TEMP, 0
	038 Not TEMP
	039 Move X8, TEMP
	040 Move [X31+8], X0
	041 Move [X31+16], X8
	042 Add X0, X31, 8
	043 Move X1, X31
	044 Move [X31+24], W19
	045 Call Enum.ToString, X0
	046 Move X19, X0
	047 Move X0, 0x544000
	048 Move X0, [X0+96]
	049 Call 0x1C17D08
	050 Move X1, X19
	051 Move X2, X31
	052 Call String.Format, X0, X1
	053 Move X19, X0
	054 Move X0, 0x501000
	055 Move X0, [X0+464]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X1, X19
	059 Move X2, X31
	060 Move X20, X0
	061 Call UnityException..ctor, X0, X1
	062 Move X0, 0x544000
	063 Move X0, [X0+104]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X20
	067 Call 0x1C17DEC

Method: System.Boolean ValidateFormat(UnityEngine.Experimental.Rendering.GraphicsFormat format, System.Int32 width, System.Int32 height)

Disassembly:
	0x03C1CC38 LDP X22, X21, [X31 + 0x30]
	0x03C1CC3C LDR X30, [X31 + 0x20]
	0x03C1CC40 ADD X31, X31, 0x50
	0x03C1CC44 RET
	0x03C1CC48 ADRP X0, 0x537000
	0x03C1CC4C LDR X0, [X0 + 0x4B8]
	0x03C1CC50 BL 0x1C16D08
	0x03C1CC54 MOVN X8, 0x0
	0x03C1CC58 STP X0, X8, [X31 + 0x8]
	0x03C1CC5C ADD X0, X31, 0x8
	0x03C1CC60 MOV X1, X31
	0x03C1CC64 STR W19, [X31 + 0x18]
	0x03C1CC68 BL 0x33B162C
	0x03C1CC6C MOV X19, X0
	0x03C1CC70 ADRP X0, 0x543000
	0x03C1CC74 LDR X0, [X0 + 0xB0]
	0x03C1CC78 BL 0x1C16D08
	0x03C1CC7C MOV X1, X19
	0x03C1CC80 MOV X2, X31
	0x03C1CC84 BL 0x321EFD0
	0x03C1CC88 MOV X19, X0
	0x03C1CC8C ADRP X0, 0x500000
	0x03C1CC90 LDR X0, [X0 + 0x1D0]
	0x03C1CC94 BL 0x1C16D08
	0x03C1CC98 BL 0x1C16F10
	0x03C1CC9C MOV X1, X19
	0x03C1CCA0 MOV X2, X31
	0x03C1CCA4 MOV X20, X0
	0x03C1CCA8 BL 0x3C363D0
	0x03C1CCAC ADRP X0, 0x543000
	0x03C1CCB0 LDR X0, [X0 + 0xC0]
	0x03C1CCB4 BL 0x1C16D08
	0x03C1CCB8 MOV X1, X0
	0x03C1CCBC MOV X0, X20
	0x03C1CCC0 BL 0x1C16DEC
	0x03C1CCC4 STP X30, X21, [X31 - 0x20]!
	0x03C1CCC8 STP X20, X19, [X31 + 0x10]
	0x03C1CCCC MOV W20, W1
	0x03C1CCD0 MOV X21, X0
	0x03C1CCD4 MOV W0, W2
	0x03C1CCD8 MOV X1, X31
	0x03C1CCDC MOV W19, W3
	0x03C1CCE0 BL 0x3C3C544
	0x03C1CCE4 MOV W1, W20
	0x03C1CCE8 MOV W3, W19
	0x03C1CCEC LDP X20, X19, [X31 + 0x10]
	0x03C1CCF0 MOV W2, W0
	0x03C1CCF4 MOV X0, X21
	0x03C1CCF8 LDP X30, X21, [X31], #0x20
	0x03C1CCFC B 0x3C1CD00
	0x03C1CD00 STR X30, [X31 - 0x40]!
	0x03C1CD04 STP X24, X23, [X31 + 0x10]
	0x03C1CD08 STP X22, X21, [X31 + 0x20]
	0x03C1CD0C STP X20, X19, [X31 + 0x30]
	0x03C1CD10 ADRP X24, 0x7C8000
	0x03C1CD14 ADRP X23, 0x543000
	0x03C1CD18 LDRB W8, [X24 + 0xD41]
	0x03C1CD1C LDR X23, [X23 + 0x48]
	0x03C1CD20 MOV W19, W3
	0x03C1CD24 MOV W20, W2
	0x03C1CD28 MOV W21, W1
	0x03C1CD2C MOV X22, X0
	0x03C1CD30 TBNZ X8, 0x0, 0x3C1CD48
	0x03C1CD34 ADRP X0, 0x543000
	0x03C1CD38 LDR X0, [X0 + 0x48]
	0x03C1CD3C BL 0x1C16CF4
	0x03C1CD40 MOVZ W8, 0x1
	0x03C1CD44 STRB W8, [X24 + 0xD41]
	0x03C1CD48 LDR X0, [X23]
	0x03C1CD4C LDR W8, [X0 + 0xE0]
	0x03C1CD50 CBNZ W8, 0x3C1CD5C
	0x03C1CD54 BL 0x1C16DFC
	0x03C1CD58 LDR X0, [X23]
	0x03C1CD5C LDR X8, [X0 + 0xB8]
	0x03C1CD60 MOV X0, X22

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x7C9000
	009 Move W8, [X23+3336]
	010 Move W21, W3
	011 Move W20, W2
	012 Move W19, W1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x538000
	019 Move X0, [X0+144]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3336], W8
	023 Move X0, X22
	024 Move W1, W19
	025 Move W2, W31
	026 Call Texture.ValidateFormat, X0, X1, X2
	027 Move W22, W0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {54}
	032 Move X8, 0x538000
	033 Move X8, [X8+144]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W0, W19
	040 Move X1, X31
	041 Call GraphicsFormatUtility.IsPVRTCFormat, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {54}
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W0, W20
	048 Move X1, X31
	049 Call Mathf.IsPowerOfTwo, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {63}
	054 And W0, W22, 1
	055 Move X20, [X31+64]
	056 Move X19, [X31+72]
	057 Move X22, [X31+48]
	058 Move X21, [X31+56]
	059 Move X30, [X31+32]
	060 Move X23, [X31+40]
	061 Add X31, X31, 80
	062 Return X0
	063 Move X0, 0x538000
	064 Move X0, [X0+1208]
	065 Call 0x1C17D08
	066 Move TEMP, 0
	067 Not TEMP
	068 Move X8, TEMP
	069 Move [X31+8], X0
	070 Move [X31+16], X8
	071 Add X0, X31, 8
	072 Move X1, X31
	073 Move [X31+24], W19
	074 Call Enum.ToString, X0
	075 Move X19, X0
	076 Move X0, 0x544000
	077 Move X0, [X0+96]
	078 Call 0x1C17D08
	079 Move X1, X19
	080 Move X2, X31
	081 Call String.Format, X0, X1
	082 Move X19, X0
	083 Move X0, 0x501000
	084 Move X0, [X0+464]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X1, X19
	088 Move X2, X31
	089 Move X20, X0
	090 Call UnityException..ctor, X0, X1
	091 Move X0, 0x544000
	092 Move X0, [X0+112]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X20
	096 Call 0x1C17DEC

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.Int32 mipCount, System.IntPtr nativeTex, System.String mipmapLimitGroupName)

Disassembly:
	0x03C1CD64 MOV W1, W21
	0x03C1CD68 MOV W2, W20
	0x03C1CD6C LDR W4, [X8]
	0x03C1CD70 MOV W3, W19
	0x03C1CD74 LDP X20, X19, [X31 + 0x30]
	0x03C1CD78 LDP X22, X21, [X31 + 0x20]
	0x03C1CD7C LDP X24, X23, [X31 + 0x10]
	0x03C1CD80 LDR X30, [X31], #0x40
	0x03C1CD84 B 0x3C1CDD4
	0x03C1CD88 STR X30, [X31 - 0x30]!
	0x03C1CD8C STP X22, X21, [X31 + 0x10]
	0x03C1CD90 STP X20, X19, [X31 + 0x20]
	0x03C1CD94 MOV W21, W1
	0x03C1CD98 MOV X22, X0
	0x03C1CD9C MOV W0, W2
	0x03C1CDA0 MOV X1, X31
	0x03C1CDA4 MOV W19, W4
	0x03C1CDA8 MOV W20, W3
	0x03C1CDAC BL 0x3C3C544
	0x03C1CDB0 MOV W2, W0
	0x03C1CDB4 MOV X0, X22
	0x03C1CDB8 MOV W1, W21
	0x03C1CDBC MOV W3, W20
	0x03C1CDC0 MOV W4, W19
	0x03C1CDC4 LDP X20, X19, [X31 + 0x20]
	0x03C1CDC8 LDP X22, X21, [X31 + 0x10]
	0x03C1CDCC LDR X30, [X31], #0x30
	0x03C1CDD0 B 0x3C1CDD4
	0x03C1CDD4 STP X30, X25, [X31 - 0x40]!
	0x03C1CDD8 STP X24, X23, [X31 + 0x10]
	0x03C1CDDC STP X22, X21, [X31 + 0x20]
	0x03C1CDE0 STP X20, X19, [X31 + 0x30]
	0x03C1CDE4 ADRP X25, 0x7C8000
	0x03C1CDE8 ADRP X24, 0x543000
	0x03C1CDEC LDRB W8, [X25 + 0xD42]
	0x03C1CDF0 LDR X24, [X24 + 0x48]
	0x03C1CDF4 MOV W20, W4
	0x03C1CDF8 MOV W19, W3
	0x03C1CDFC MOV W21, W2
	0x03C1CE00 MOV W22, W1
	0x03C1CE04 MOV X23, X0
	0x03C1CE08 TBNZ X8, 0x0, 0x3C1CE20
	0x03C1CE0C ADRP X0, 0x543000
	0x03C1CE10 LDR X0, [X0 + 0x48]
	0x03C1CE14 BL 0x1C16CF4
	0x03C1CE18 MOVZ W8, 0x1
	0x03C1CE1C STRB W8, [X25 + 0xD42]
	0x03C1CE20 LDR X0, [X24]
	0x03C1CE24 LDR W8, [X0 + 0xE0]
	0x03C1CE28 CBNZ W8, 0x3C1CE30
	0x03C1CE2C BL 0x1C16DFC
	0x03C1CE30 MOV X0, X23
	0x03C1CE34 BL 0x3C1A69C
	0x03C1CE38 MOV X0, X23
	0x03C1CE3C MOV W1, W21
	0x03C1CE40 MOV W2, W22
	0x03C1CE44 BL 0x3C1CBA4
	0x03C1CE48 TBZ X0, 0x0, 0x3C1CE9C
	0x03C1CE4C MOV W0, W19
	0x03C1CE50 BL 0x3C1CEB0
	0x03C1CE54 LDR X0, [X24]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X28, 0x7C9000
	014 Move X27, 0x544000
	015 Move W8, [X28+3337]
	016 Move X27, [X27+72]
	017 Move X23, X7
	018 Move X19, X6
	019 Move W21, W5
	020 Move W20, W4
	021 Move W22, W3
	022 Move W24, W2
	023 Move W25, W1
	024 Move X26, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x544000
	030 Move X0, [X0+72]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X28+3337], W8
	034 Move X0, [X27]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X26
	040 Call Texture..ctor, X0
	041 Move X0, X26
	042 Move W1, W22
	043 Move W2, W25
	044 Move W3, W24
	045 Call Texture2D.ValidateFormat, X0, X1, X2, X3
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {67}
	050 Move X0, [X27]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move W1, W22
	056 Call Texture.GetTextureColorSpace, X0, X1
	057 Move W5, W0
	058 Move X0, X26
	059 Move W1, W25
	060 Move W2, W24
	061 Move W3, W21
	062 Move W4, W22
	063 Move W6, W20
	064 Move X7, X19
	065 Move [X31], X23
	066 Call Texture2D.Internal_Create, X0, X1, X2, X3, X4, X5, X6, X7, X8
	067 Move X20, [X31+96]
	068 Move X19, [X31+104]
	069 Move X22, [X31+80]
	070 Move X21, [X31+88]
	071 Move X24, [X31+64]
	072 Move X23, [X31+72]
	073 Move X26, [X31+48]
	074 Move X25, [X31+56]
	075 Move X28, [X31+32]
	076 Move X27, [X31+40]
	077 Move X30, [X31+16]
	078 Add X31, X31, 112
	079 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.DefaultFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C1CE58 LDR W8, [X0 + 0xE0]
	0x03C1CE5C CBNZ W8, 0x3C1CE64
	0x03C1CE60 BL 0x1C16DFC
	0x03C1CE64 MOV W1, W21
	0x03C1CE68 BL 0x3C1AE04
	0x03C1CE6C MOV W4, W0
	0x03C1CE70 MOV X0, X23
	0x03C1CE74 MOV W1, W22
	0x03C1CE78 MOV W2, W20
	0x03C1CE7C MOV W3, W21
	0x03C1CE80 MOV W5, W19
	0x03C1CE84 LDP X20, X19, [X31 + 0x30]
	0x03C1CE88 LDP X22, X21, [X31 + 0x20]
	0x03C1CE8C LDP X24, X23, [X31 + 0x10]
	0x03C1CE90 MOV X6, X31
	0x03C1CE94 LDP X30, X25, [X31], #0x40
	0x03C1CE98 B 0x3C1C87C
	0x03C1CE9C LDP X20, X19, [X31 + 0x30]
	0x03C1CEA0 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W21, W1
	007 Move X22, X0
	008 Move W0, W3
	009 Move X1, X31
	010 Move W19, W4
	011 Move W20, W2
	012 Call SystemInfo.GetGraphicsFormat, X0
	013 Move W3, W0
	014 Move X0, X22
	015 Move W1, W21
	016 Move W2, W20
	017 Move W4, W19
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move X30, [X31+48]

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C1CEA4 LDP X24, X23, [X31 + 0x10]
	0x03C1CEA8 LDP X30, X25, [X31], #0x40
	0x03C1CEAC RET
	0x03C1CEB0 TBNZ X0, 0x6, 0x3C1CEB8
	0x03C1CEB4 RET
	0x03C1CEB8 STP X30, X19, [X31 - 0x10]!
	0x03C1CEBC ADRP X0, 0x4DF000
	0x03C1CEC0 LDR X0, [X0 + 0x578]
	0x03C1CEC4 BL 0x1C16D08
	0x03C1CEC8 BL 0x1C16F10
	0x03C1CECC MOV X19, X0
	0x03C1CED0 ADRP X0, 0x543000
	0x03C1CED4 LDR X0, [X0 + 0xC8]
	0x03C1CED8 BL 0x1C16D08
	0x03C1CEDC MOV X1, X0
	0x03C1CEE0 MOV X0, X19
	0x03C1CEE4 MOV X2, X31
	0x03C1CEE8 BL 0x3314A68
	0x03C1CEEC ADRP X0, 0x543000
	0x03C1CEF0 LDR X0, [X0 + 0xD0]
	0x03C1CEF4 BL 0x1C16D08
	0x03C1CEF8 MOV X1, X0
	0x03C1CEFC MOV X0, X19
	0x03C1CF00 BL 0x1C16DEC
	0x03C1CF04 STP X30, X27, [X31 - 0x50]!
	0x03C1CF08 STP X26, X25, [X31 + 0x10]
	0x03C1CF0C STP X24, X23, [X31 + 0x20]
	0x03C1CF10 STP X22, X21, [X31 + 0x30]
	0x03C1CF14 STP X20, X19, [X31 + 0x40]
	0x03C1CF18 ADRP X25, 0x7C8000
	0x03C1CF1C ADRP X26, 0x543000
	0x03C1CF20 LDRB W8, [X25 + 0xD43]
	0x03C1CF24 LDR X26, [X26 + 0x48]
	0x03C1CF28 MOV W23, W5
	0x03C1CF2C MOV X19, X4
	0x03C1CF30 MOV W20, W3
	0x03C1CF34 MOV W24, W2
	0x03C1CF38 MOV W21, W1
	0x03C1CF3C MOV X22, X0
	0x03C1CF40 TBNZ X8, 0x0, 0x3C1CF64
	0x03C1CF44 ADRP X0, 0x537000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x7C9000
	011 Move X24, 0x544000
	012 Move W8, [X25+3338]
	013 Move X24, [X24+72]
	014 Move W19, W4
	015 Move W20, W3
	016 Move W21, W2
	017 Move W22, W1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x544000
	024 Move X0, [X0+72]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X25+3338], W8
	028 Move X0, [X24]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X24]
	034 Move X8, [X0+184]
	035 Move X0, X23
	036 Move W1, W22
	037 Move W2, W21
	038 Move W5, [X8]
	039 Move W3, W20
	040 Move W4, W19
	041 Move X6, X31
	042 Move X7, X31
	043 Call Texture2D..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	044 Move X20, [X31+64]
	045 Move X19, [X31+72]
	046 Move X22, [X31+48]
	047 Move X21, [X31+56]
	048 Move X24, [X31+32]
	049 Move X23, [X31+40]
	050 Move X30, [X31+16]
	051 Move X25, [X31+24]
	052 Add X31, X31, 80
	053 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat textureFormat, System.Int32 mipCount, System.Boolean linear, System.IntPtr nativeTex, System.Boolean createUninitialized, System.Boolean ignoreMipmapLimit, System.String mipmapLimitGroupName)

Disassembly:
	0x03C1CF48 LDR X0, [X0 + 0x90]
	0x03C1CF4C BL 0x1C16CF4
	0x03C1CF50 ADRP X0, 0x543000
	0x03C1CF54 LDR X0, [X0 + 0x48]
	0x03C1CF58 BL 0x1C16CF4
	0x03C1CF5C MOVZ W8, 0x1
	0x03C1CF60 STRB W8, [X25 + 0xD43]
	0x03C1CF64 LDR X0, [X26]
	0x03C1CF68 LDR W8, [X0 + 0xE0]
	0x03C1CF6C CBNZ W8, 0x3C1CF74
	0x03C1CF70 BL 0x1C16DFC
	0x03C1CF74 MOV X0, X22
	0x03C1CF78 BL 0x3C1A69C
	0x03C1CF7C MOV X0, X22
	0x03C1CF80 MOV W1, W24
	0x03C1CF84 MOV W2, W21
	0x03C1CF88 BL 0x3C1CAD8
	0x03C1CF8C TBZ X0, 0x0, 0x3C1D048
	0x03C1CF90 ADRP X27, 0x537000
	0x03C1CF94 LDR X27, [X27 + 0x90]
	0x03C1CF98 LDR X0, [X27]
	0x03C1CF9C LDR W8, [X0 + 0xE0]
	0x03C1CFA0 CBNZ W8, 0x3C1CFA8
	0x03C1CFA4 BL 0x1C16DFC
	0x03C1CFA8 MOV W0, W24
	0x03C1CFAC MOV W1, W31
	0x03C1CFB0 MOV X2, X31
	0x03C1CFB4 BL 0x3C61468
	0x03C1CFB8 MOV W25, W0
	0x03C1CFBC LDR X0, [X27]
	0x03C1CFC0 CMP W20, 0x1
	0x03C1CFC4 CSET W27, NE
	0x03C1CFC8 LDR W8, [X0 + 0xE0]
	0x03C1CFCC CBNZ W8, 0x3C1CFD4
	0x03C1CFD0 BL 0x1C16DFC
	0x03C1CFD4 MOV W0, W24
	0x03C1CFD8 MOV X1, X31
	0x03C1CFDC BL 0x3C61CEC
	0x03C1CFE0 ORR W8, W27, 0x40
	0x03C1CFE4 ANDS W31, W0, 0x1
	0x03C1CFE8 MOVZ W9, 0x404
	0x03C1CFEC CSEL W8, W8, W27, NE
	0x03C1CFF0 ORR W9, W8, W9, 0x0
	0x03C1CFF4 ANDS W31, W23, 0x1
	0x03C1CFF8 CSEL W23, W9, W8, NE
	0x03C1CFFC MOV W0, W23
	0x03C1D000 BL 0x3C1CEB0
	0x03C1D004 LDR X0, [X26]
	0x03C1D008 LDR W8, [X0 + 0xE0]
	0x03C1D00C CBNZ W8, 0x3C1D014
	0x03C1D010 BL 0x1C16DFC
	0x03C1D014 MOV X0, X22
	0x03C1D018 MOV W1, W21
	0x03C1D01C MOV W2, W20
	0x03C1D020 MOV W3, W25
	0x03C1D024 MOV W5, W23
	0x03C1D028 MOV X6, X19
	0x03C1D02C LDP X20, X19, [X31 + 0x40]
	0x03C1D030 LDP X22, X21, [X31 + 0x30]
	0x03C1D034 LDP X24, X23, [X31 + 0x20]
	0x03C1D038 LDP X26, X25, [X31 + 0x10]
	0x03C1D03C MOV W4, W31
	0x03C1D040 LDP X30, X27, [X31], #0x50
	0x03C1D044 B 0x3C1C87C
	0x03C1D048 LDP X20, X19, [X31 + 0x40]
	0x03C1D04C LDP X22, X21, [X31 + 0x30]
	0x03C1D050 LDP X24, X23, [X31 + 0x20]
	0x03C1D054 LDP X26, X25, [X31 + 0x10]
	0x03C1D058 LDP X30, X27, [X31], #0x50
	0x03C1D05C RET
	0x03C1D060 STP X30, X23, [X31 - 0x30]!
	0x03C1D064 STP X22, X21, [X31 + 0x10]
	0x03C1D068 STP X20, X19, [X31 + 0x20]
	0x03C1D06C ADRP X23, 0x7C7000
	0x03C1D070 LDRB W8, [X23 + 0xD44]
	0x03C1D074 MOV W22, W3
	0x03C1D078 MOV W19, W2
	0x03C1D07C MOV W20, W1
	0x03C1D080 MOV X21, X0
	0x03C1D084 TBZ X8, 0x0, 0x3C1D0B4
	0x03C1D088 TBZ X22, 0x0, 0x3C1D0CC
	0x03C1D08C ADRP X22, 0x542000
	0x03C1D090 LDR X22, [X22 + 0x48]
	0x03C1D094 LDR X0, [X22]
	0x03C1D098 LDR W8, [X0 + 0xE0]
	0x03C1D09C CBNZ W8, 0x3C1D0A8
	0x03C1D0A0 BL 0x1C16DFC
	0x03C1D0A4 LDR X0, [X22]
	0x03C1D0A8 LDR X8, [X0 + 0xB8]
	0x03C1D0AC LDR W3, [X8]
	0x03C1D0B0 B 0x3C1D0D0
	0x03C1D0B4 ADRP X0, 0x542000
	0x03C1D0B8 LDR X0, [X0 + 0x48]
	0x03C1D0BC BL 0x1C16CF4
	0x03C1D0C0 MOVZ W8, 0x1
	0x03C1D0C4 STRB W8, [X23 + 0xD44]
	0x03C1D0C8 TBNZ X22, 0x0, 0x3C1D08C
	0x03C1D0CC MOVZ W3, 0x1
	0x03C1D0D0 MOV X0, X21
	0x03C1D0D4 MOV W1, W20
	0x03C1D0D8 MOV W2, W19
	0x03C1D0DC LDP X20, X19, [X31 + 0x20]
	0x03C1D0E0 LDP X22, X21, [X31 + 0x10]
	0x03C1D0E4 MOV X4, X31
	0x03C1D0E8 MOV W5, W31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x7C9000
	015 Move X27, [X31+120]
	016 Move W8, [X19+3339]
	017 Move W28, [X31+112]
	018 Move W24, W7
	019 Move X29, X6
	020 Move W26, W5
	021 Move W20, W4
	022 Move W25, W3
	023 Move W21, W2
	024 Move W22, W1
	025 Move X23, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x538000
	031 Move X0, [X0+144]
	032 Call 0x1C17CF4
	033 Move X0, 0x544000
	034 Move X0, [X0+72]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+3339], W8
	038 Move X8, 0x544000
	039 Move X8, [X8+72]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X23
	046 Call Texture..ctor, X0
	047 Move X0, X23
	048 Move W1, W25
	049 Move W2, W22
	050 Move W3, W21
	051 Call Texture2D.ValidateFormat, X0, X1, X2, X3
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {121}
	056 Move [X31+8], X29
	057 Move X29, 0x538000
	058 Move X29, [X29+144]
	059 Move X0, [X29]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Xor W19, W26, 1
	065 And W1, W19, 1
	066 Move W0, W25
	067 Move X2, X31
	068 Call GraphicsFormatUtility.GetGraphicsFormat, X0, X1
	069 Move W26, W0
	070 Move X0, [X29]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSET not yet implemented."
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move W0, W25
	078 Move X1, X31
	079 Call GraphicsFormatUtility.IsCrunchFormat, X0
	080 Move X9, 0x543000
	081 Move X9, [X9+72]
	082 And W31, W0, 1
	083 Or W8, W29, 64
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Move X0, [X9]
	086 Move W9, 1028
	087 Or W9, W8, W9
	088 And W31, W24, 1
	089 Move W10, [X0+224]
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 Or W9, W8, 2048
	092 And W31, W28, 1
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Compare W10, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 And W5, W19, 1
	098 Move [X31+112], X27
	099 Move X0, X23
	100 Move W1, W22
	101 Move W2, W21
	102 Move W3, W20
	103 Move W4, W26
	104 Move W6, W24
	105 Move X7, [X31+8]
	106 Move X20, [X31+96]
	107 Move X19, [X31+104]
	108 Move X22, [X31+80]
	109 Move X21, [X31+88]
	110 Move X24, [X31+64]
	111 Move X23, [X31+72]
	112 Move X26, [X31+48]
	113 Move X25, [X31+56]
	114 Move X28, [X31+32]
	115 Move X27, [X31+40]
	116 Move X29, [X31+16]
	117 Move X30, [X31+24]
	118 Add X31, X31, 112
	119 Call Texture2D.Internal_Create, X0, X1, X2, X3, X4, X5, X6, X7, X8
	120 Return 
	121 Move X20, [X31+96]
	122 Move X19, [X31+104]
	123 Move X22, [X31+80]
	124 Move X21, [X31+88]
	125 Move X24, [X31+64]
	126 Move X23, [X31+72]
	127 Move X26, [X31+48]
	128 Move X25, [X31+56]
	129 Move X28, [X31+32]
	130 Move X27, [X31+40]
	131 Move X29, [X31+16]
	132 Move X30, [X31+24]
	133 Add X31, X31, 112
	134 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat textureFormat, System.Int32 mipCount, System.Boolean linear)

Disassembly:
	0x03C1D0EC LDP X30, X23, [X31], #0x30
	0x03C1D0F0 B 0x3C1CF04
	0x03C1D0F4 STR X30, [X31 - 0x40]!
	0x03C1D0F8 STP X24, X23, [X31 + 0x10]
	0x03C1D0FC STP X22, X21, [X31 + 0x20]
	0x03C1D100 STP X20, X19, [X31 + 0x30]
	0x03C1D104 ADRP X24, 0x7C7000
	0x03C1D108 LDRB W8, [X24 + 0xD45]
	0x03C1D10C MOV W21, W4
	0x03C1D110 MOV W23, W3
	0x03C1D114 MOV W19, W2

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 And W5, W5, 1
	004 Move X6, X31
	005 Move W7, W31
	006 Move [X31+8], X31
	007 Move [X31], W31
	008 Call Texture2D..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	009 Move X30, [X31+32]
	010 Add X31, X31, 48
	011 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain, System.Boolean linear)

Disassembly:
	0x03C1D118 MOV W20, W1
	0x03C1D11C MOV X22, X0
	0x03C1D120 TBZ X8, 0x0, 0x3C1D150
	0x03C1D124 TBZ X23, 0x0, 0x3C1D168
	0x03C1D128 ADRP X23, 0x542000
	0x03C1D12C LDR X23, [X23 + 0x48]
	0x03C1D130 LDR X0, [X23]
	0x03C1D134 LDR W8, [X0 + 0xE0]
	0x03C1D138 CBNZ W8, 0x3C1D144
	0x03C1D13C BL 0x1C16DFC
	0x03C1D140 LDR X0, [X23]
	0x03C1D144 LDR X8, [X0 + 0xB8]
	0x03C1D148 LDR W3, [X8]
	0x03C1D14C B 0x3C1D16C
	0x03C1D150 ADRP X0, 0x542000
	0x03C1D154 LDR X0, [X0 + 0x48]
	0x03C1D158 BL 0x1C16CF4
	0x03C1D15C MOVZ W8, 0x1
	0x03C1D160 STRB W8, [X24 + 0xD45]
	0x03C1D164 TBNZ X23, 0x0, 0x3C1D128
	0x03C1D168 MOVZ W3, 0x1
	0x03C1D16C AND W5, W21, 0x1
	0x03C1D170 MOV X0, X22
	0x03C1D174 MOV W1, W20
	0x03C1D178 MOV W2, W19
	0x03C1D17C LDP X20, X19, [X31 + 0x30]
	0x03C1D180 LDP X22, X21, [X31 + 0x20]
	0x03C1D184 LDP X24, X23, [X31 + 0x10]
	0x03C1D188 MOV X4, X31
	0x03C1D18C LDR X30, [X31], #0x40
	0x03C1D190 B 0x3C1CF04
	0x03C1D194 MOV X4, X31
	0x03C1D198 MOV W5, W31
	0x03C1D19C B 0x3C1CF04
	0x03C1D1A0 AND W5, W4, 0x1
	0x03C1D1A4 MOV X4, X31
	0x03C1D1A8 B 0x3C1CF04
	0x03C1D1AC MOV W4, W31
	0x03C1D1B0 B 0x3C1D1B4
	0x03C1D1B4 STP D11, D10, [X31 - 0x50]!
	0x03C1D1B8 STP D9, D8, [X31 + 0x10]
	0x03C1D1BC STP X30, X23, [X31 + 0x20]
	0x03C1D1C0 STP X22, X21, [X31 + 0x30]
	0x03C1D1C4 STP X20, X19, [X31 + 0x40]
	0x03C1D1C8 LDR X8, [X0]
	0x03C1D1CC MOV W23, W1
	0x03C1D1D0 MOV W19, W4
	0x03C1D1D4 MOV V8.16B, V3.16B

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X25, 0x7C8000
	011 Move W8, [X25+3340]
	012 Move W21, W5
	013 Move W24, W4
	014 Move W19, W3
	015 Move W20, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {36}
	022 Move TEMP, X24
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {45}
	026 Move X24, 0x543000
	027 Move X24, [X24+72]
	028 Move X0, [X24]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X24]
	034 Move X8, [X0+184]
	035 Move W4, [X8]
	036 Move X0, 0x543000
	037 Move X0, [X0+72]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X25+3340], W8
	041 Move TEMP, X24
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {26}
	045 Move W4, 1
	046 And W5, W21, 1
	047 Move X0, X23
	048 Move W1, W22
	049 Move W2, W20
	050 Move W3, W19
	051 Move X6, X31
	052 Move W7, W31
	053 Move [X31+8], X31
	054 Move [X31], W31
	055 Call Texture2D..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	056 Move X20, [X31+80]
	057 Move X19, [X31+88]
	058 Move X22, [X31+64]
	059 Move X21, [X31+72]
	060 Move X24, [X31+48]
	061 Move X23, [X31+56]
	062 Move X30, [X31+32]
	063 Move X25, [X31+40]
	064 Add X31, X31, 96
	065 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain)

Disassembly:
	0x03C1D1D8 LDP X9, X8, [X8 + 0x1E8]
	0x03C1D1DC MOV V9.16B, V2.16B
	0x03C1D1E0 MOV V10.16B, V1.16B
	0x03C1D1E4 MOV V11.16B, V0.16B
	0x03C1D1E8 MOV X1, X8
	0x03C1D1EC MOV W20, W3
	0x03C1D1F0 MOV W21, W2
	0x03C1D1F4 MOV X22, X0
	0x03C1D1F8 BLR X9
	0x03C1D1FC TBZ X0, 0x0, 0x3C1D23C
	0x03C1D200 MOV X0, X22
	0x03C1D204 MOV W1, W23
	0x03C1D208 MOV W2, W19
	0x03C1D20C MOV W3, W21
	0x03C1D210 MOV W4, W20
	0x03C1D214 MOV V2.16B, V9.16B
	0x03C1D218 MOV V3.16B, V8.16B
	0x03C1D21C LDP X20, X19, [X31 + 0x40]
	0x03C1D220 LDP X22, X21, [X31 + 0x30]
	0x03C1D224 LDP X30, X23, [X31 + 0x20]
	0x03C1D228 LDP D9, D8, [X31 + 0x10]
	0x03C1D22C MOV V0.16B, V11.16B
	0x03C1D230 MOV V1.16B, V10.16B
	0x03C1D234 LDP D11, D10, [X31], #0x50
	0x03C1D238 B 0x3C1C9E0
	0x03C1D23C MOV X1, X22
	0x03C1D240 BL 0x3C1B1DC
	0x03C1D244 MOV X19, X0
	0x03C1D248 ADRP X0, 0x542000
	0x03C1D24C LDR X0, [X0 + 0xD8]
	0x03C1D250 BL 0x1C16D08
	0x03C1D254 MOV X1, X0
	0x03C1D258 MOV X0, X19
	0x03C1D25C BL 0x1C16DEC
	0x03C1D260 STR X30, [X31 - 0x30]!
	0x03C1D264 STP X22, X21, [X31 + 0x10]
	0x03C1D268 STP X20, X19, [X31 + 0x20]
	0x03C1D26C LDR X8, [X0]
	0x03C1D270 MOV W21, W1
	0x03C1D274 MOV W20, W2
	0x03C1D278 MOV X19, X0
	0x03C1D27C LDP X9, X8, [X8 + 0x1E8]
	0x03C1D280 MOV X1, X8
	0x03C1D284 BLR X9
	0x03C1D288 TBZ X0, 0x0, 0x3C1D2C8
	0x03C1D28C ADRP X22, 0x7C7000
	0x03C1D290 LDR X3, [X22 + 0xD30]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X24, 0x7C8000
	010 Move W8, [X24+3341]
	011 Move W23, W4
	012 Move W19, W3
	013 Move W20, W2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {34}
	020 Move TEMP, X23
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {43}
	024 Move X23, 0x543000
	025 Move X23, [X23+72]
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X23]
	032 Move X8, [X0+184]
	033 Move W4, [X8]
	034 Move X0, 0x543000
	035 Move X0, [X0+72]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X24+3341], W8
	039 Move TEMP, X23
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {24}
	043 Move W4, 1
	044 Move X0, X22
	045 Move W1, W21
	046 Move W2, W20
	047 Move W3, W19
	048 Move W5, W31
	049 Move X6, X31
	050 Move W7, W31
	051 Move [X31+8], X31
	052 Move [X31], W31
	053 Call Texture2D..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Move X22, [X31+64]
	057 Move X21, [X31+72]
	058 Move X24, [X31+48]
	059 Move X23, [X31+56]
	060 Move X30, [X31+32]
	061 Add X31, X31, 96
	062 Return 

Method: System.Void SetPixel(System.Int32 x, System.Int32 y, UnityEngine.Color color)

Disassembly:
	0x03C1D294 CBNZ X3, 0x3C1D2AC
	0x03C1D298 ADRP X0, 0xFFFFFFFFFCED1000
	0x03C1D29C ADD X0, X0, 0xE9D
	0x03C1D2A0 BL 0x1C16CB8
	0x03C1D2A4 MOV X3, X0
	0x03C1D2A8 STR X0, [X22 + 0xD30]
	0x03C1D2AC AND W1, W21, 0x1
	0x03C1D2B0 AND W2, W20, 0x1
	0x03C1D2B4 MOV X0, X19
	0x03C1D2B8 LDP X20, X19, [X31 + 0x20]
	0x03C1D2BC LDP X22, X21, [X31 + 0x10]
	0x03C1D2C0 LDR X30, [X31], #0x30
	0x03C1D2C4 BR X3
	0x03C1D2C8 MOV X1, X19
	0x03C1D2CC BL 0x3C1B1DC
	0x03C1D2D0 MOV X19, X0
	0x03C1D2D4 ADRP X0, 0x542000
	0x03C1D2D8 LDR X0, [X0 + 0xE0]
	0x03C1D2DC BL 0x1C16D08
	0x03C1D2E0 MOV X1, X0
	0x03C1D2E4 MOV X0, X19
	0x03C1D2E8 BL 0x1C16DEC
	0x03C1D2EC MOVZ W1, 0x1
	0x03C1D2F0 MOV W2, W31
	0x03C1D2F4 B 0x3C1D260
	0x03C1D2F8 STR X30, [X31 - 0x20]!
	0x03C1D2FC STP X20, X19, [X31 + 0x10]
	0x03C1D300 ADRP X20, 0x7C7000
	0x03C1D304 LDR X1, [X20 + 0xD50]
	0x03C1D308 MOV X19, X0
	0x03C1D30C CBNZ X1, 0x3C1D324
	0x03C1D310 ADRP X0, 0xFFFFFFFFFCF06000
	0x03C1D314 ADD X0, X0, 0x7D
	0x03C1D318 BL 0x1C16CB8
	0x03C1D31C MOV X1, X0
	0x03C1D320 STR X0, [X20 + 0xD50]
	0x03C1D324 MOV X0, X19
	0x03C1D328 LDP X20, X19, [X31 + 0x10]
	0x03C1D32C LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X0]
	010 Move W21, W1
	011 Move V8, V3
	012 Move V9, V2
	013 Move X9, [X8+488]
	014 Move X8, [X8+496]
	015 Move V10, V1
	016 Move V11, V0
	017 Move W19, W2
	018 Move X1, X8
	019 Move X20, X0
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {44}
	025 Move X0, X20
	026 Move W3, W21
	027 Move W4, W19
	028 Move V2, V9
	029 Move V3, V8
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Move D9, [X31+16]
	035 Move D8, [X31+24]
	036 Move W1, W31
	037 Move W2, W31
	038 Move V0, V11
	039 Move V1, V10
	040 Move D11, [X31+64]
	041 Move D10, [X31+72]
	042 Call Texture2D.SetPixelImpl, X0, X1, X2, X3, X4, X5
	043 Return 
	044 Move X1, X20
	045 Call Texture.CreateNonReadableException, X0, X1
	046 Move X19, X0
	047 Move X0, 0x543000
	048 Move X0, [X0+120]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Call 0x1C17DEC

Method: System.Void SetPixels(System.Int32 x, System.Int32 y, System.Int32 blockWidth, System.Int32 blockHeight, UnityEngine.Color[] colors, System.Int32 miplevel)

Disassembly:
	0x03C1D330 BR X1
	0x03C1D334 SUB X31, X31, 0x50
	0x03C1D338 STR X30, [X31 + 0x10]
	0x03C1D33C STP X24, X23, [X31 + 0x20]
	0x03C1D340 STP X22, X21, [X31 + 0x30]
	0x03C1D344 STP X20, X19, [X31 + 0x40]
	0x03C1D348 ADRP X24, 0x7C7000
	0x03C1D34C LDR X8, [X24 + 0xD80]
	0x03C1D350 MOV W19, W4
	0x03C1D354 MOV W20, W3
	0x03C1D358 MOV W21, W2
	0x03C1D35C MOV W22, W1
	0x03C1D360 MOV X23, X0
	0x03C1D364 STP S0, S1, [X31]
	0x03C1D368 STP S2, S3, [X31 + 0x8]
	0x03C1D36C CBNZ X8, 0x3C1D384
	0x03C1D370 ADRP X0, 0xFFFFFFFFFCED3000
	0x03C1D374 ADD X0, X0, 0xEEA
	0x03C1D378 BL 0x1C16CB8
	0x03C1D37C MOV X8, X0
	0x03C1D380 STR X0, [X24 + 0xD80]
	0x03C1D384 ADD X5, X31, 0x0
	0x03C1D388 MOV X0, X23
	0x03C1D38C MOV W1, W22
	0x03C1D390 MOV W2, W21
	0x03C1D394 MOV W3, W20
	0x03C1D398 MOV W4, W19
	0x03C1D39C BLR X8
	0x03C1D3A0 LDP X20, X19, [X31 + 0x40]
	0x03C1D3A4 LDP X22, X21, [X31 + 0x30]
	0x03C1D3A8 LDP X24, X23, [X31 + 0x20]
	0x03C1D3AC LDR X30, [X31 + 0x10]
	0x03C1D3B0 ADD X31, X31, 0x50
	0x03C1D3B4 RET
	0x03C1D3B8 STP X30, X25, [X31 - 0x40]!
	0x03C1D3BC STP X24, X23, [X31 + 0x10]
	0x03C1D3C0 STP X22, X21, [X31 + 0x20]
	0x03C1D3C4 STP X20, X19, [X31 + 0x30]
	0x03C1D3C8 ADRP X25, 0x7C7000
	0x03C1D3CC LDR X6, [X25 + 0xD80]
	0x03C1D3D0 MOV X19, X5
	0x03C1D3D4 MOV W20, W4
	0x03C1D3D8 MOV W21, W3
	0x03C1D3DC MOV W22, W2
	0x03C1D3E0 MOV W23, W1
	0x03C1D3E4 MOV X24, X0
	0x03C1D3E8 CBNZ X6, 0x3C1D400
	0x03C1D3EC ADRP X0, 0xFFFFFFFFFCED3000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X0]
	011 Move W25, W1
	012 Move W19, W6
	013 Move X20, X5
	014 Move X9, [X8+488]
	015 Move X8, [X8+496]
	016 Move W21, W4
	017 Move W22, W3
	018 Move W23, W2
	019 Move X1, X8
	020 Move X24, X0
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {53}
	026 Move X26, 0x7C8000
	027 Move X8, [X26+3296]
	028 Compare X8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, -51331072
	031 Add X0, X0, 2082
	032 Call 0x1C17CB8
	033 Move X8, X0
	034 Move [X26+3296], X0
	035 Move X0, X24
	036 Move W1, W25
	037 Move W2, W23
	038 Move W3, W22
	039 Move W4, W21
	040 Move X5, X20
	041 Move W6, W19
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X22, [X31+48]
	045 Move X21, [X31+56]
	046 Move X24, [X31+32]
	047 Move X23, [X31+40]
	048 Move X26, [X31+16]
	049 Move X25, [X31+24]
	050 Move W7, W31
	051 Move X30, [X31+80]
	052 CallNoReturn X8
	053 Move X1, X24
	054 Call Texture.CreateNonReadableException, X0, X1
	055 Move X19, X0
	056 Move X0, 0x543000
	057 Move X0, [X0+128]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Call 0x1C17DEC

Method: System.Void SetPixels(UnityEngine.Color[] colors)

Disassembly:
	0x03C1D3F0 ADD X0, X0, 0xEEA
	0x03C1D3F4 BL 0x1C16CB8
	0x03C1D3F8 MOV X6, X0
	0x03C1D3FC STR X0, [X25 + 0xD80]
	0x03C1D400 MOV X0, X24
	0x03C1D404 MOV W1, W23
	0x03C1D408 MOV W2, W22
	0x03C1D40C MOV W3, W21
	0x03C1D410 MOV W4, W20
	0x03C1D414 MOV X5, X19
	0x03C1D418 LDP X20, X19, [X31 + 0x30]
	0x03C1D41C LDP X22, X21, [X31 + 0x20]
	0x03C1D420 LDP X24, X23, [X31 + 0x10]
	0x03C1D424 LDP X30, X25, [X31], #0x40
	0x03C1D428 BR X6
	0x03C1D42C STR X30, [X31 - 0x60]!
	0x03C1D430 STP X28, X27, [X31 + 0x10]
	0x03C1D434 STP X26, X25, [X31 + 0x20]
	0x03C1D438 STP X24, X23, [X31 + 0x30]
	0x03C1D43C STP X22, X21, [X31 + 0x40]
	0x03C1D440 STP X20, X19, [X31 + 0x50]
	0x03C1D444 ADRP X28, 0x7C7000
	0x03C1D448 LDR X8, [X28 + 0xD58]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X20, X1
	007 Move X19, X0
	008 Move X9, [X8+392]
	009 Move X8, [X8+400]
	010 Move X1, X8
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X8, [X19]
	013 Move W21, W0
	014 Move X0, X19
	015 Move X9, [X8+424]
	016 Move X1, [X8+432]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move W4, W0
	019 Move X0, X19
	020 Move X5, X20
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W1, W31
	024 Move W2, W31
	025 Move W3, W21
	026 Move W6, W31
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Texture2D.SetPixels, X0, X1, X2, X3, X4, X5, X6
	030 Return 

Method: UnityEngine.Color GetPixelBilinear(System.Single u, System.Single v)

Disassembly:
	0x03C1D44C LDR X27, [X31 + 0x60]
	0x03C1D450 MOV W19, W7
	0x03C1D454 MOV W20, W6
	0x03C1D458 MOV W21, W5
	0x03C1D45C MOV W22, W4
	0x03C1D460 MOV W23, W3
	0x03C1D464 MOV W24, W2
	0x03C1D468 MOV W25, W1
	0x03C1D46C MOV X26, X0
	0x03C1D470 CBNZ X8, 0x3C1D488
	0x03C1D474 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C1D478 ADD X0, X0, 0x1E0
	0x03C1D47C BL 0x1C16CB8
	0x03C1D480 MOV X8, X0
	0x03C1D484 STR X0, [X28 + 0xD58]
	0x03C1D488 STR X27, [X31 + 0x60]
	0x03C1D48C MOV X0, X26
	0x03C1D490 MOV W1, W25
	0x03C1D494 MOV W2, W24
	0x03C1D498 MOV W3, W23
	0x03C1D49C MOV W4, W22
	0x03C1D4A0 MOV W5, W21
	0x03C1D4A4 MOV W6, W20
	0x03C1D4A8 MOV W7, W19
	0x03C1D4AC LDP X20, X19, [X31 + 0x50]
	0x03C1D4B0 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move V8, V1
	007 Move X19, X0
	008 Move V9, V0
	009 Move X9, [X8+488]
	010 Move X1, [X8+496]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {27}
	016 Move X0, X19
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Move W1, W31
	020 Move W2, W31
	021 Move V0, V9
	022 Move V1, V8
	023 Move D9, [X31+32]
	024 Move D8, [X31+40]
	025 Call Texture2D.GetPixelBilinearImpl, X0, X1, X2, V0, V1
	026 Return X0
	027 Move X1, X19
	028 Call Texture.CreateNonReadableException, X0, X1
	029 Move X19, X0
	030 Move X0, 0x543000
	031 Move X0, [X0+136]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC

Method: Unity.Collections.NativeArray`1<T> GetRawTextureData()

Disassembly:
	0x0229D520 B 0x338F3E0
	0x0229D524 CBZ X0, 0x229D52C
	0x0229D528 RET
	0x0229D52C MOV W0, W1
	0x0229D530 MOV X1, X31
	0x0229D534 B 0x338F3E0
	0x0229D538 CBZ X0, 0x229D540
	0x0229D53C RET
	0x0229D540 MOV W0, W1
	0x0229D544 MOV X1, X31
	0x0229D548 B 0x338F3E0
	0x0229D54C CBZ X0, 0x229D554
	0x0229D550 RET
	0x0229D554 MOV W0, W1
	0x0229D558 MOV X1, X31
	0x0229D55C B 0x338F3E0
	0x0229D560 CBZ X0, 0x229D568
	0x0229D564 RET
	0x0229D568 MOV W0, W1
	0x0229D56C MOV X1, X31
	0x0229D570 B 0x338F3E0
	0x0229D574 CBZ X0, 0x229D57C
	0x0229D578 RET
	0x0229D57C MOV W0, W1
	0x0229D580 MOV X1, X31
	0x0229D584 B 0x338F3E0
	0x0229D588 CBZ X0, 0x229D590
	0x0229D58C RET
	0x0229D590 MOV W0, W1
	0x0229D594 MOV X1, X31
	0x0229D598 B 0x338F3E0
	0x0229D59C CBZ X0, 0x229D5A4
	0x0229D5A0 RET
	0x0229D5A4 MOV W0, W1
	0x0229D5A8 MOV X1, X31
	0x0229D5AC B 0x338F3E0
	0x0229D5B0 RET
	0x0229D5B4 CBZ X0, 0x229D5BC
	0x0229D5B8 RET
	0x0229D5BC MOV W0, W1
	0x0229D5C0 MOV X1, X31
	0x0229D5C4 B 0x338F3E0
	0x0229D5C8 CBZ X0, 0x229D5D0
	0x0229D5CC RET
	0x0229D5D0 MOV W0, W1
	0x0229D5D4 MOV X1, X31
	0x0229D5D8 B 0x338F3E0
	0x0229D5DC CBZ X0, 0x229D5E4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {12}
	010 Move X0, X19
	011 Call 0x1C5D6E0
	012 Compare X20, 0
	013 JumpIfEqual {50}
	014 Move X8, [X20]
	015 Move X0, X20
	016 Move X9, [X8+488]
	017 Move X1, [X8+496]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {51}
	023 Move X0, X20
	024 Move X1, X31
	025 Call Texture2D.GetRawImageDataSize, X0
	026 Move X8, X0
	027 ShiftRight X8, 35
	028 And X8, X8, 0x7FFFFFFF
	029 Compare X8, 0
	030 JumpIfNotEqual {57}
	031 Move X21, X0
	032 ShiftRight X21, 4
	033 And X21, X21, 0x7FFFFFFF
	034 Move X0, X20
	035 Move W1, W31
	036 Move X2, X31
	037 Call Texture2D.GetWritableImageData, X0, X1
	038 Move X1, X31
	039 Call IntPtr.op_Explicit, X0
	040 Move X8, [X19+56]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W2, 1
	044 Move W1, W21
	045 Move X3, [X8+8]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	049 Return X0
	050 Call 0x1C17F20
	051 Move X0, X20
	052 Call 0x19913C0
	053 Move X0, X20
	054 Move X1, X20
	055 Move X2, X31
	056 Call Texture.CreateNonReadableException, X0, X1
	057 Move X0, X20
	058 Call 0x19913C0
	059 Move X0, X20
	060 Move X1, X31
	061 Call Texture.CreateNativeArrayLengthOverflowException, X0
	062 Move X1, X19
	063 Call 0x1C17DEC

Method: System.Void Apply(System.Boolean updateMipmaps, System.Boolean makeNoLongerReadable)

Disassembly:
	0x03C1D4B4 LDP X24, X23, [X31 + 0x30]
	0x03C1D4B8 LDP X26, X25, [X31 + 0x20]
	0x03C1D4BC LDP X28, X27, [X31 + 0x10]
	0x03C1D4C0 LDR X30, [X31], #0x60
	0x03C1D4C4 BR X8
	0x03C1D4C8 SUB X31, X31, 0x70
	0x03C1D4CC STR X30, [X31 + 0x10]
	0x03C1D4D0 STP X28, X27, [X31 + 0x20]
	0x03C1D4D4 STP X26, X25, [X31 + 0x30]
	0x03C1D4D8 STP X24, X23, [X31 + 0x40]
	0x03C1D4DC STP X22, X21, [X31 + 0x50]
	0x03C1D4E0 STP X20, X19, [X31 + 0x60]
	0x03C1D4E4 ADRP X28, 0x7C7000
	0x03C1D4E8 LDR X8, [X28 + 0xD58]
	0x03C1D4EC LDR X27, [X31 + 0x70]
	0x03C1D4F0 MOV W19, W7
	0x03C1D4F4 MOV W20, W6
	0x03C1D4F8 MOV W21, W5
	0x03C1D4FC MOV W22, W4
	0x03C1D500 MOV W23, W3
	0x03C1D504 MOV W24, W2
	0x03C1D508 MOV W25, W1
	0x03C1D50C MOV X26, X0
	0x03C1D510 CBNZ X8, 0x3C1D528
	0x03C1D514 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C1D518 ADD X0, X0, 0x1E0
	0x03C1D51C BL 0x1C16CB8
	0x03C1D520 MOV X8, X0
	0x03C1D524 STR X0, [X28 + 0xD58]
	0x03C1D528 MOV X0, X26
	0x03C1D52C MOV W1, W25
	0x03C1D530 MOV W2, W24
	0x03C1D534 MOV W3, W23
	0x03C1D538 MOV W4, W22
	0x03C1D53C MOV W5, W21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move W21, W1
	008 Move W20, W2
	009 Move X19, X0
	010 Move X9, [X8+488]
	011 Move X8, [X8+496]
	012 Move X1, X8
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {36}
	018 Move X22, 0x7C8000
	019 Move X3, [X22+3272]
	020 Compare X3, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51322880
	023 Add X0, X0, 1935
	024 Call 0x1C17CB8
	025 Move X3, X0
	026 Move [X22+3272], X0
	027 And W1, W21, 1
	028 And W2, W20, 1
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 CallNoReturn X3
	036 Move X1, X19
	037 Call Texture.CreateNonReadableException, X0, X1
	038 Move X19, X0
	039 Move X0, 0x543000
	040 Move X0, [X0+144]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Call 0x1C17DEC

Method: System.Void Apply()

Disassembly:
	0x03C1D540 MOV W6, W20
	0x03C1D544 MOV W7, W19
	0x03C1D548 STR X27, [X31]

ISIL:
	001 Move W1, 1
	002 Move W2, W31
	003 Call Texture2D.Apply, X0, X1, X2
	004 Return 

Method: System.Boolean Reinitialize(System.Int32 width, System.Int32 height)

Disassembly:
	0x03C1D54C BLR X8
	0x03C1D550 TBZ X0, 0x0, 0x3C1D574
	0x03C1D554 LDP X20, X19, [X31 + 0x60]
	0x03C1D558 LDP X22, X21, [X31 + 0x50]
	0x03C1D55C LDP X24, X23, [X31 + 0x40]
	0x03C1D560 LDP X26, X25, [X31 + 0x30]
	0x03C1D564 LDP X28, X27, [X31 + 0x20]
	0x03C1D568 LDR X30, [X31 + 0x10]
	0x03C1D56C ADD X31, X31, 0x70
	0x03C1D570 RET
	0x03C1D574 ADRP X0, 0x4FF000
	0x03C1D578 LDR X0, [X0 + 0x1D0]
	0x03C1D57C BL 0x1C16D08
	0x03C1D580 BL 0x1C16F10
	0x03C1D584 MOV X19, X0
	0x03C1D588 ADRP X0, 0x542000
	0x03C1D58C LDR X0, [X0 + 0x50]
	0x03C1D590 BL 0x1C16D08
	0x03C1D594 MOV X1, X0
	0x03C1D598 MOV X0, X19
	0x03C1D59C MOV X2, X31
	0x03C1D5A0 BL 0x3C363D0
	0x03C1D5A4 ADRP X0, 0x542000
	0x03C1D5A8 LDR X0, [X0 + 0xE8]
	0x03C1D5AC BL 0x1C16D08
	0x03C1D5B0 MOV X1, X0
	0x03C1D5B4 MOV X0, X19
	0x03C1D5B8 BL 0x1C16DEC
	0x03C1D5BC STR X30, [X31 - 0x30]!
	0x03C1D5C0 STP X22, X21, [X31 + 0x10]
	0x03C1D5C4 STP X20, X19, [X31 + 0x20]
	0x03C1D5C8 ADRP X22, 0x7C7000
	0x03C1D5CC LDR X3, [X22 + 0xD60]
	0x03C1D5D0 MOV W19, W2
	0x03C1D5D4 MOV W20, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move W21, W1
	008 Move W19, W2
	009 Move X20, X0
	010 Move X9, [X8+488]
	011 Move X8, [X8+496]
	012 Move X1, X8
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {36}
	018 Move X22, 0x7C8000
	019 Move X3, [X22+3280]
	020 Compare X3, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51388416
	023 Add X0, X0, 2812
	024 Call 0x1C17CB8
	025 Move X3, X0
	026 Move [X22+3280], X0
	027 Move X0, X20
	028 Move W1, W21
	029 Move W2, W19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 CallNoReturn X3
	036 Move X1, X20
	037 Call Texture.CreateNonReadableException, X0, X1
	038 Move X19, X0
	039 Move X0, 0x543000
	040 Move X0, [X0+152]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Call 0x1C17DEC

Method: System.Boolean Reinitialize(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat format, System.Boolean hasMipMap)

Disassembly:
	0x03C1D5D8 MOV X21, X0
	0x03C1D5DC CBNZ X3, 0x3C1D5F4
	0x03C1D5E0 ADRP X0, 0xFFFFFFFFFCF01000
	0x03C1D5E4 ADD X0, X0, 0xB92
	0x03C1D5E8 BL 0x1C16CB8
	0x03C1D5EC MOV X3, X0
	0x03C1D5F0 STR X0, [X22 + 0xD60]
	0x03C1D5F4 AND W1, W20, 0x1
	0x03C1D5F8 AND W2, W19, 0x1
	0x03C1D5FC MOV X0, X21
	0x03C1D600 LDP X20, X19, [X31 + 0x20]
	0x03C1D604 LDP X22, X21, [X31 + 0x10]
	0x03C1D608 LDR X30, [X31], #0x30
	0x03C1D60C BR X3
	0x03C1D610 STR X30, [X31 - 0x30]!
	0x03C1D614 STP X22, X21, [X31 + 0x10]
	0x03C1D618 STP X20, X19, [X31 + 0x20]
	0x03C1D61C ADRP X22, 0x7C7000
	0x03C1D620 LDR X3, [X22 + 0xD68]
	0x03C1D624 MOV W19, W2
	0x03C1D628 MOV X20, X1
	0x03C1D62C MOV X21, X0
	0x03C1D630 CBNZ X3, 0x3C1D648
	0x03C1D634 ADRP X0, 0xFFFFFFFFFCEE2000
	0x03C1D638 ADD X0, X0, 0x1C0
	0x03C1D63C BL 0x1C16CB8
	0x03C1D640 MOV X3, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7C8000
	009 Move X5, [X24+3288]
	010 Move W21, W4
	011 Move W19, W3
	012 Move W20, W2
	013 Move W22, W1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51507200
	018 Add X0, X0, 897
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+3288], X0
	022 And W4, W21, 1
	023 Move X0, X23
	024 Move W1, W22
	025 Move W2, W20
	026 Move W3, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Boolean Resize(System.Int32 width, System.Int32 height)

Disassembly:
	0x03C1D644 STR X0, [X22 + 0xD68]

ISIL:
	001 Call Texture2D.Reinitialize, X0, X1, X2
	002 Return X0

Method: System.Boolean Resize(System.Int32 width, System.Int32 height, UnityEngine.TextureFormat format, System.Boolean hasMipMap)

Disassembly:
	0x03C1D648 MOV X0, X21
	0x03C1D64C MOV X1, X20
	0x03C1D650 MOV W2, W19
	0x03C1D654 LDP X20, X19, [X31 + 0x20]
	0x03C1D658 LDP X22, X21, [X31 + 0x10]
	0x03C1D65C LDR X30, [X31], #0x30
	0x03C1D660 BR X3
	0x03C1D664 STP X30, X25, [X31 - 0x40]!
	0x03C1D668 STP X24, X23, [X31 + 0x10]
	0x03C1D66C STP X22, X21, [X31 + 0x20]
	0x03C1D670 STP X20, X19, [X31 + 0x30]
	0x03C1D674 ADRP X25, 0x7C7000
	0x03C1D678 LDR X6, [X25 + 0xD70]
	0x03C1D67C MOV W19, W5
	0x03C1D680 MOV W20, W4
	0x03C1D684 MOV W21, W3
	0x03C1D688 MOV W22, W2
	0x03C1D68C MOV X23, X1
	0x03C1D690 MOV X24, X0
	0x03C1D694 CBNZ X6, 0x3C1D6AC
	0x03C1D698 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C1D69C ADD X0, X0, 0xE57
	0x03C1D6A0 BL 0x1C16CB8
	0x03C1D6A4 MOV X6, X0
	0x03C1D6A8 STR X0, [X25 + 0xD70]
	0x03C1D6AC MOV X0, X24
	0x03C1D6B0 MOV X1, X23

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7C8000
	009 Move X5, [X24+3288]
	010 Move W21, W4
	011 Move W19, W3
	012 Move W20, W2
	013 Move W22, W1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51507200
	018 Add X0, X0, 897
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+3288], X0
	022 And W4, W21, 1
	023 Move X0, X23
	024 Move W1, W22
	025 Move W2, W20
	026 Move W3, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void ReadPixels(UnityEngine.Rect source, System.Int32 destX, System.Int32 destY, System.Boolean recalculateMipMaps)

Disassembly:
	0x03C1D6B4 MOV W2, W22
	0x03C1D6B8 MOV W3, W21
	0x03C1D6BC MOV W4, W20
	0x03C1D6C0 MOV W5, W19
	0x03C1D6C4 LDP X20, X19, [X31 + 0x30]
	0x03C1D6C8 LDP X22, X21, [X31 + 0x20]
	0x03C1D6CC LDP X24, X23, [X31 + 0x10]
	0x03C1D6D0 LDP X30, X25, [X31], #0x40
	0x03C1D6D4 BR X6
	0x03C1D6D8 STP X30, X23, [X31 - 0x30]!
	0x03C1D6DC STP X22, X21, [X31 + 0x10]
	0x03C1D6E0 STP X20, X19, [X31 + 0x20]
	0x03C1D6E4 MOV W22, W1
	0x03C1D6E8 MOV X23, X0
	0x03C1D6EC MOV W0, W4
	0x03C1D6F0 MOV X1, X31
	0x03C1D6F4 MOV W19, W5
	0x03C1D6F8 MOV W20, W3
	0x03C1D6FC MOV W21, W2
	0x03C1D700 BL 0x3C3C544
	0x03C1D704 MOV W1, W22
	0x03C1D708 MOV W2, W21
	0x03C1D70C MOV W3, W20
	0x03C1D710 MOV W5, W19
	0x03C1D714 LDP X20, X19, [X31 + 0x20]
	0x03C1D718 LDP X22, X21, [X31 + 0x10]
	0x03C1D71C MOV W4, W0
	0x03C1D720 MOV X0, X23
	0x03C1D724 LDP X30, X23, [X31], #0x30
	0x03C1D728 B 0x3C1D72C
	0x03C1D72C STR X30, [X31 - 0x50]!
	0x03C1D730 STP X26, X25, [X31 + 0x10]
	0x03C1D734 STP X24, X23, [X31 + 0x20]
	0x03C1D738 STP X22, X21, [X31 + 0x30]
	0x03C1D73C STP X20, X19, [X31 + 0x40]
	0x03C1D740 ADRP X26, 0x7C7000
	0x03C1D744 ADRP X25, 0x542000
	0x03C1D748 LDRB W8, [X26 + 0xD78]
	0x03C1D74C LDR X25, [X25 + 0x48]
	0x03C1D750 MOV W19, W5

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X0]
	011 Move W20, W1
	012 Move W21, W3
	013 Move W19, W2
	014 Move X9, [X8+488]
	015 Move X1, [X8+496]
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move X22, X0
	020 Move V11, V0
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {45}
	026 And W3, W21, 1
	027 Move X0, X22
	028 Move V2, V9
	029 Move V3, V8
	030 Move W1, W20
	031 Move W2, W19
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X22, [X31+48]
	035 Move X21, [X31+56]
	036 Move X30, [X31+32]
	037 Move D9, [X31+16]
	038 Move D8, [X31+24]
	039 Move V0, V11
	040 Move V1, V10
	041 Move D11, [X31+80]
	042 Move D10, [X31+88]
	043 Call Texture2D.ReadPixelsImpl, X0, X1, X2, X3, X4
	044 Return 
	045 Move X1, X22
	046 Call Texture.CreateNonReadableException, X0, X1
	047 Move X19, X0
	048 Move X0, 0x543000
	049 Move X0, [X0+160]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.Void ReadPixels(UnityEngine.Rect source, System.Int32 destX, System.Int32 destY)

Disassembly:
	0x03C1D754 MOV W20, W4
	0x03C1D758 MOV W21, W3

ISIL:
	001 Move W3, 1
	002 Call Texture2D.ReadPixels, X0, X1, X2, X3, X4
	003 Return 

Method: System.Void SetPixels32(UnityEngine.Color32[] colors, System.Int32 miplevel)

Disassembly:
	0x03C1D75C MOV W22, W2
	0x03C1D760 MOV W23, W1
	0x03C1D764 MOV X24, X0
	0x03C1D768 TBNZ X8, 0x0, 0x3C1D780
	0x03C1D76C ADRP X0, 0x542000
	0x03C1D770 LDR X0, [X0 + 0x48]
	0x03C1D774 BL 0x1C16CF4
	0x03C1D778 MOVZ W8, 0x1
	0x03C1D77C STRB W8, [X26 + 0xD78]
	0x03C1D780 LDR X0, [X25]
	0x03C1D784 LDR W8, [X0 + 0xE0]
	0x03C1D788 CBNZ W8, 0x3C1D794
	0x03C1D78C BL 0x1C16DFC
	0x03C1D790 LDR X0, [X25]
	0x03C1D794 LDR X8, [X0 + 0xB8]
	0x03C1D798 MOV X0, X24
	0x03C1D79C MOV W1, W23
	0x03C1D7A0 MOV W2, W22
	0x03C1D7A4 LDR W6, [X8]
	0x03C1D7A8 MOV W3, W21
	0x03C1D7AC MOV W4, W20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7C8000
	007 Move X3, [X22+3320]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51433472
	014 Add X0, X0, 568
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3320], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetPixels32(UnityEngine.Color32[] colors)

Disassembly:
	0x03C1D7B0 MOV W5, W19
	0x03C1D7B4 LDP X20, X19, [X31 + 0x40]
	0x03C1D7B8 LDP X22, X21, [X31 + 0x30]
	0x03C1D7BC LDP X24, X23, [X31 + 0x20]
	0x03C1D7C0 LDP X26, X25, [X31 + 0x10]
	0x03C1D7C4 LDR X30, [X31], #0x50
	0x03C1D7C8 B 0x3C1D830
	0x03C1D7CC STR X30, [X31 - 0x40]!
	0x03C1D7D0 STP X24, X23, [X31 + 0x10]
	0x03C1D7D4 STP X22, X21, [X31 + 0x20]
	0x03C1D7D8 STP X20, X19, [X31 + 0x30]
	0x03C1D7DC MOV W23, W1
	0x03C1D7E0 MOV X24, X0
	0x03C1D7E4 MOV W0, W4
	0x03C1D7E8 MOV X1, X31
	0x03C1D7EC MOV W19, W6
	0x03C1D7F0 MOV W20, W5
	0x03C1D7F4 MOV W21, W3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C8000
	006 Move X3, [X21+3320]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X3, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51433472
	012 Add X0, X0, 568
	013 Call 0x1C17CB8
	014 Move X3, X0
	015 Move [X21+3320], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W2, W31
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 CallNoReturn X3

Method: System.Void SetPixelImpl_Injected(System.Int32 image, System.Int32 mip, System.Int32 x, System.Int32 y, ref UnityEngine.Color color)

Disassembly:
	0x03C1C6B8 STP D9, D8, [X31 + 0x10]
	0x03C1C6BC STR X30, [X31 + 0x20]
	0x03C1C6C0 STP X22, X21, [X31 + 0x30]
	0x03C1C6C4 STP X20, X19, [X31 + 0x40]
	0x03C1C6C8 LDR X8, [X0]
	0x03C1C6CC MOV W20, W1
	0x03C1C6D0 MOV W21, W3
	0x03C1C6D4 MOV W19, W2
	0x03C1C6D8 LDP X9, X1, [X8 + 0x1E8]
	0x03C1C6DC MOV V8.16B, V3.16B
	0x03C1C6E0 MOV V9.16B, V2.16B
	0x03C1C6E4 MOV V10.16B, V1.16B
	0x03C1C6E8 MOV X22, X0
	0x03C1C6EC MOV V11.16B, V0.16B
	0x03C1C6F0 BLR X9
	0x03C1C6F4 TBZ X0, 0x0, 0x3C1C730
	0x03C1C6F8 AND W3, W21, 0x1
	0x03C1C6FC MOV X0, X22
	0x03C1C700 MOV V2.16B, V9.16B
	0x03C1C704 MOV V3.16B, V8.16B
	0x03C1C708 MOV W1, W20
	0x03C1C70C MOV W2, W19
	0x03C1C710 LDP X20, X19, [X31 + 0x40]
	0x03C1C714 LDP X22, X21, [X31 + 0x30]
	0x03C1C718 LDR X30, [X31 + 0x20]
	0x03C1C71C LDP D9, D8, [X31 + 0x10]
	0x03C1C720 MOV V0.16B, V11.16B
	0x03C1C724 MOV V1.16B, V10.16B
	0x03C1C728 LDP D11, D10, [X31], #0x50

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C9000
	010 Move X6, [X25+3344]
	011 Move X19, X5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move W23, W1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51347456
	020 Add X0, X0, 8
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+3344], X0
	024 Move X0, X24
	025 Move W1, W23
	026 Move W2, W22
	027 Move W3, W21
	028 Move W4, W20
	029 Move X5, X19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void GetPixelBilinearImpl_Injected(System.Int32 image, System.Int32 mip, System.Single u, System.Single v, out UnityEngine.Color ret)

Disassembly:
	0x03C1C7B4 STP X20, X19, [X31 + 0x10]
	0x03C1C7B8 ADRP X21, 0x7C8000
	0x03C1C7BC LDR X3, [X21 + 0xCF8]
	0x03C1C7C0 MOV X19, X1
	0x03C1C7C4 MOV X20, X0
	0x03C1C7C8 CBNZ X3, 0x3C1C7E0
	0x03C1C7CC ADRP X0, 0xFFFFFFFFFCEF3000
	0x03C1C7D0 ADD X0, X0, 0x238
	0x03C1C7D4 BL 0x1C16CB8
	0x03C1C7D8 MOV X3, X0
	0x03C1C7DC STR X0, [X21 + 0xCF8]
	0x03C1C7E0 MOV X0, X20
	0x03C1C7E4 MOV X1, X19
	0x03C1C7E8 LDP X20, X19, [X31 + 0x10]
	0x03C1C7EC MOV W2, W31
	0x03C1C7F0 LDP X30, X21, [X31], #0x20
	0x03C1C7F4 BR X3
	0x03C1C7F8 STR X30, [X31 - 0x50]!
	0x03C1C7FC STP X26, X25, [X31 + 0x10]
	0x03C1C800 STP X24, X23, [X31 + 0x20]
	0x03C1C804 STP X22, X21, [X31 + 0x30]
	0x03C1C808 STP X20, X19, [X31 + 0x40]
	0x03C1C80C ADRP X26, 0x7C8000
	0x03C1C810 LDR X7, [X26 + 0xD28]
	0x03C1C814 MOV X19, X6
	0x03C1C818 MOV W20, W5
	0x03C1C81C MOV W21, W4
	0x03C1C820 MOV W22, W3
	0x03C1C824 MOV W23, W2

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x7C9000
	010 Move X4, [X23+3352]
	011 Move X19, X3
	012 Move V8, V1
	013 Move V9, V0
	014 Move W20, W2
	015 Move W21, W1
	016 Move X22, X0
	017 Compare X4, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51359744
	020 Add X0, X0, 2448
	021 Call 0x1C17CB8
	022 Move X4, X0
	023 Move [X23+3352], X0
	024 Move X0, X22
	025 Move W1, W21
	026 Move W2, W20
	027 Move X3, X19
	028 Move X20, [X31+48]
	029 Move X19, [X31+56]
	030 Move X22, [X31+32]
	031 Move X21, [X31+40]
	032 Move X30, [X31+16]
	033 Move X23, [X31+24]
	034 Move V0, V9
	035 Move V1, V8
	036 Move D9, [X31+64]
	037 Move D8, [X31+72]
	038 CallNoReturn X4

Method: System.Void ReadPixelsImpl_Injected(ref UnityEngine.Rect source, System.Int32 destX, System.Int32 destY, System.Boolean recalculateMipMaps)

Disassembly:
	0x03C1C908 ADRP X0, 0x500000
	0x03C1C90C LDR X0, [X0 + 0x1D0]
	0x03C1C910 BL 0x1C16D08
	0x03C1C914 BL 0x1C16F10
	0x03C1C918 MOV X19, X0
	0x03C1C91C ADRP X0, 0x543000
	0x03C1C920 LDR X0, [X0 + 0x50]
	0x03C1C924 BL 0x1C16D08
	0x03C1C928 MOV X1, X0
	0x03C1C92C MOV X0, X19
	0x03C1C930 MOV X2, X31
	0x03C1C934 BL 0x3C363D0
	0x03C1C938 ADRP X0, 0x543000
	0x03C1C93C LDR X0, [X0 + 0xA8]
	0x03C1C940 BL 0x1C16D08
	0x03C1C944 MOV X1, X0
	0x03C1C948 MOV X0, X19
	0x03C1C94C BL 0x1C16DEC
	0x03C1C950 STR X30, [X31 - 0x30]!
	0x03C1C954 STP X22, X21, [X31 + 0x10]
	0x03C1C958 STP X20, X19, [X31 + 0x20]
	0x03C1C95C ADRP X22, 0x7C8000
	0x03C1C960 LDR X3, [X22 + 0xD30]
	0x03C1C964 MOV W19, W2
	0x03C1C968 MOV W20, W1
	0x03C1C96C MOV X21, X0
	0x03C1C970 CBNZ X3, 0x3C1C988

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7C9000
	009 Move X5, [X24+3360]
	010 Move W21, W4
	011 Move W19, W3
	012 Move W20, W2
	013 Move X22, X1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51384320
	018 Add X0, X0, 2879
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+3360], X0
	022 And W4, W21, 1
	023 Move X0, X23
	024 Move X1, X22
	025 Move W2, W20
	026 Move W3, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

