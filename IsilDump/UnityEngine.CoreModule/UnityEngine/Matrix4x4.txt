Type: UnityEngine.Matrix4x4

Method: UnityEngine.Quaternion GetRotation()

Disassembly:
	0x03C27D48 LDP X20, X19, [X31 + 0x10]
	0x03C27D4C LDP X30, X21, [X31], #0x20
	0x03C27D50 RET
	0x03C27D54 MOV X0, X20
	0x03C27D58 BL 0x1C16E08
	0x03C27D5C LDR V0, [X0 + 0xC]
	0x03C27D60 LDR V1, [X19 + 0xC]
	0x03C27D64 MOV X8, X0
	0x03C27D68 MOV W0, W31
	0x03C27D6C FCMP S1, S0
	0x03C27D70 B.NE 0x3C27D48
	0x03C27D74 LDR V0, [X8 + 0x8]
	0x03C27D78 LDR V1, [X19 + 0x8]
	0x03C27D7C FCMP S1, S0
	0x03C27D80 B.NE 0x3C27D48
	0x03C27D84 LDR V0, [X8 + 0x4]
	0x03C27D88 LDR V1, [X19 + 0x4]
	0x03C27D8C FCMP S1, S0
	0x03C27D90 B.NE 0x3C27D48
	0x03C27D94 LDR V0, [X8]
	0x03C27D98 LDR V1, [X19]
	0x03C27D9C FCMP S1, S0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7BE000
	007 Move X8, [X20+4064]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51589120
	013 Add X0, X0, 298
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+4064], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: UnityEngine.Vector3 GetLossyScale()

Disassembly:
	0x03C27DE4 B.NE 0x3C27D48
	0x03C27DE8 LDR V0, [X8 + 0x2C]
	0x03C27DEC LDR V1, [X19 + 0x2C]
	0x03C27DF0 MOV W0, W31
	0x03C27DF4 FCMP S1, S0
	0x03C27DF8 B.NE 0x3C27D48
	0x03C27DFC LDR V0, [X8 + 0x28]
	0x03C27E00 LDR V1, [X19 + 0x28]
	0x03C27E04 FCMP S1, S0
	0x03C27E08 B.NE 0x3C27D48
	0x03C27E0C LDR V0, [X8 + 0x24]
	0x03C27E10 LDR V1, [X19 + 0x24]
	0x03C27E14 FCMP S1, S0
	0x03C27E18 B.NE 0x3C27D48
	0x03C27E1C LDR V0, [X8 + 0x20]
	0x03C27E20 LDR V1, [X19 + 0x20]
	0x03C27E24 FCMP S1, S0
	0x03C27E28 B.NE 0x3C27D48
	0x03C27E2C LDP S0, S1, [X8 + 0x30]
	0x03C27E30 LDP S3, S2, [X19 + 0x30]
	0x03C27E34 LDP S4, S5, [X8 + 0x38]
	0x03C27E38 LDP S7, S6, [X19 + 0x38]
	0x03C27E3C FCMP S3, S0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7BE000
	006 Move X8, [X20+4072]
	007 Move X19, X0
	008 Move [X31+8], W31
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51535872
	013 Add X0, X0, 3964
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+4072], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move V2, [X31+8]
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X30, [X31+16]
	026 Add X31, X31, 48
	027 Return X0

Method: UnityEngine.FrustumPlanes DecomposeProjection()

Disassembly:
	0x03C27E84 FCMP S0, S1
	0x03C27E88 B.NE 0x3C27F6C
	0x03C27E8C LDR V0, [X0 + 0x4]
	0x03C27E90 LDR V1, [X1 + 0x4]
	0x03C27E94 FCMP S0, S1
	0x03C27E98 B.NE 0x3C27F6C
	0x03C27E9C LDR V0, [X0]
	0x03C27EA0 LDR V1, [X1]
	0x03C27EA4 FCMP S0, S1
	0x03C27EA8 B.NE 0x3C27F6C
	0x03C27EAC LDR V0, [X0 + 0x1C]
	0x03C27EB0 LDR V1, [X1 + 0x1C]
	0x03C27EB4 FCMP S0, S1
	0x03C27EB8 B.NE 0x3C27F6C
	0x03C27EBC LDR V0, [X0 + 0x18]
	0x03C27EC0 LDR V1, [X1 + 0x18]
	0x03C27EC4 FCMP S0, S1
	0x03C27EC8 B.NE 0x3C27F6C
	0x03C27ECC LDR V0, [X0 + 0x14]
	0x03C27ED0 LDR V1, [X1 + 0x14]
	0x03C27ED4 FCMP S0, S1
	0x03C27ED8 B.NE 0x3C27F6C
	0x03C27EDC LDR V0, [X0 + 0x10]
	0x03C27EE0 LDR V1, [X1 + 0x10]
	0x03C27EE4 FCMP S0, S1
	0x03C27EE8 B.NE 0x3C27F6C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x7BE000
	007 Move X19, X8
	008 Move X8, [X21+4080]
	009 Move X20, X0
	010 Move [X31+8], X31
	011 Move [X31+16], X31
	012 Move [X31+24], X31
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51499008
	016 Add X0, X0, 571
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X21+4080], X0
	020 Add X1, X31, 8
	021 Move X0, X20
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X8, [X31+24]
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Move [X19+16], X8
	028 Move [X19], V0
	029 Move X20, [X31+48]
	030 Move X19, [X31+56]
	031 Add X31, X31, 64
	032 Return X0

Method: UnityEngine.Quaternion get_rotation()

Disassembly:
	0x03C27F30 LDP S3, S2, [X1 + 0x30]

ISIL:
	001 Call Matrix4x4.GetRotation, X0
	002 Return X0

Method: UnityEngine.Vector3 get_lossyScale()

Disassembly:
	0x03C27F34 LDP S5, S4, [X0 + 0x38]

ISIL:
	001 Call Matrix4x4.GetLossyScale, X0
	002 Return X0

Method: UnityEngine.FrustumPlanes get_decomposeProjection()

Disassembly:
	0x03C27F38 LDP S7, S6, [X1 + 0x38]
	0x03C27F3C FCMP S1, S3
	0x03C27F40 CSET W8, EQ
	0x03C27F44 FCMP S0, S2
	0x03C27F48 CSET W9, EQ
	0x03C27F4C FCMP S5, S7
	0x03C27F50 AND W8, W9, W8, 0x0
	0x03C27F54 CSET W9, EQ
	0x03C27F58 FCMP S4, S6
	0x03C27F5C AND W8, W9, W8, 0x0
	0x03C27F60 CSET W9, EQ
	0x03C27F64 AND W0, W9, W8, 0x0
	0x03C27F68 RET
	0x03C27F6C MOV W0, W31
	0x03C27F70 RET
	0x03C27F74 MOV X9, X1
	0x03C27F78 UNIMPLEMENTED
	0x03C27F7C LDP V19, V0, [X0]
	0x03C27F80 LDP S23, S3, [X1 + 0x10]
	0x03C27F84 LDP S28, S18, [X1 + 0x20]
	0x03C27F88 LDP S29, S21, [X1 + 0x30]
	0x03C27F8C LDP S2, S1, [X1 + 0x8]
	0x03C27F90 LDP V6, V4, [X0 + 0x20]
	0x03C27F94 LDP S20, S7, [X1 + 0x18]
	0x03C27F98 LDP S26, S24, [X1 + 0x28]
	0x03C27F9C LDP S27, S25, [X1 + 0x38]
	0x00000000 INVALID
	0x00000000 INVALID

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x7BE000
	007 Move X19, X8
	008 Move X8, [X21+4080]
	009 Move X20, X0
	010 Move [X31+24], X31
	011 Move [X31+32], X31
	012 Move [X31+40], X31
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51499008
	016 Add X0, X0, 571
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X21+4080], X0
	020 Add X1, X31, 24
	021 Move X0, X20
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X8, [X31+40]
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move X30, [X31+48]
	026 Move X21, [X31+56]
	027 Move [X19+16], X8
	028 Move [X19], V0
	029 Move X20, [X31+64]
	030 Move X19, [X31+72]
	031 Move [X31+16], X8
	032 Move [X31], V0
	033 Add X31, X31, 80
	034 Return X0

Method: UnityEngine.Matrix4x4 TRS(UnityEngine.Vector3 pos, UnityEngine.Quaternion q, UnityEngine.Vector3 s)

Disassembly:
	0x00000000 INVALID
	0x00000000 INVALID
	0x03C27FB0 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x03C27FD0 UNIMPLEMENTED
	0x03C27FD4 LDR V16, [X9]
	0x03C27FD8 FADD V30.2S, V30.2S, V31.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x03C27FF4 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x03C28000 UNIMPLEMENTED
	0x00000000 INVALID
	0x03C28008 FADD V3.2S, V19.2S, V3.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x03C28014 FADD V3.2S, V3.2S, V6.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x03C28020 FADD V18.4S, V28.4S, V18.4S
	0x03C28024 FADD V21.4S, V29.4S, V21.4S
	0x03C28028 FADD V3.2S, V3.2S, V4.2S
	0x03C2802C FADD V0.2S, V17.2S, V0.2S
	0x03C28030 FADD V4.2S, V5.2S, V7.2S
	0x03C28034 FADD V23.2S, V30.2S, V23.2S

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+128], X20
	004 Move [X31+136], X19
	005 Move X19, X8
	006 Move X8, [X31+144]
	007 Move X20, 0x7BE000
	008 Move V7, [X31+152]
	009 Move [X31+96], S0
	010 Move [X31+104], S1
	011 Move [X31+64], X8
	012 Move X8, [X20+4088]
	013 NotImplemented "Instruction MOVI not yet implemented."
	014 Move [X31+104], S2
	015 Move [X31+80], S3
	016 Move [X31+88], S4
	017 Move [X31+88], S5
	018 Move [X31+96], S6
	019 Move [X31+32], V0
	020 Move [X31+40], V0
	021 Move [X31+72], S7
	022 Move [X31], V0
	023 Move [X31+8], V0
	024 Compare X8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, -51363840
	027 Add X0, X0, 2188
	028 Call 0x1C17CB8
	029 Move X8, X0
	030 Move [X20+4088], X0
	031 Add X0, X31, 96
	032 Add X1, X31, 80
	033 Add X2, X31, 64
	034 Add X3, X31, 0
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move V1, [X31+32]
	037 Move V0, [X31+48]
	038 Move V3, [X31]
	039 Move V2, [X31+16]
	040 Move X30, [X31+112]
	041 Move [X19+32], V1
	042 Move [X19+40], V0
	043 Move [X19], V3
	044 Move [X19+8], V2
	045 Move X20, [X31+128]
	046 Move X19, [X31+136]
	047 Add X31, X31, 144
	048 Return X0

Method: System.Boolean Inverse3DAffine(UnityEngine.Matrix4x4 input, ref UnityEngine.Matrix4x4 result)

Disassembly:
	0x03C28094 MOV S2, V0.S[2]
	0x03C28098 MOV S3, V0.S[3]
	0x03C2809C RET
	0x03C280A0 STP X30, X19, [X31 - 0x10]!
	0x03C280A4 CMP W1, 0x3
	0x03C280A8 B.HI 0x3C2812C
	0x03C280AC ADRP X9, 0xFFFFFFFFFCF6F000
	0x03C280B0 MOV W8, W1
	0x03C280B4 ADD X9, X9, 0xDF1
	0x03C280B8 ADR X10, 0x10
	0x03C280BC LDRB W11, [X9, X8, LSL]
	0x03C280C0 ADD X10, X10, X11, 0x2, LSL
	0x03C280C4 BR X10
	0x03C280C8 ADD X8, X0, 0x10
	0x03C280CC ADD X9, X0, 0x20
	0x03C280D0 ADD X10, X0, 0x30
	0x03C280D4 B 0x3C28114

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7BE000
	006 Move X2, [X21]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51376128
	012 Add X0, X0, 2218
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Matrix4x4 Inverse(UnityEngine.Matrix4x4 m)

Disassembly:
	0x03C2811C LDR V1, [X8]
	0x03C28120 LDR V0, [X0]
	0x03C28124 LDP X30, X19, [X31], #0x10
	0x03C28128 RET
	0x03C2812C ADRP X0, 0x4D5000
	0x03C28130 LDR X0, [X0 + 0xF78]
	0x03C28134 BL 0x1C16D08
	0x03C28138 BL 0x1C16F10
	0x03C2813C MOV X19, X0
	0x03C28140 ADRP X0, 0x537000
	0x03C28144 LDR X0, [X0 + 0x288]
	0x03C28148 BL 0x1C16D08
	0x03C2814C MOV X1, X0
	0x03C28150 MOV X0, X19
	0x03C28154 MOV X2, X31
	0x03C28158 BL 0x3379B6C
	0x03C2815C ADRP X0, 0x537000
	0x03C28160 LDR X0, [X0 + 0x290]
	0x03C28164 BL 0x1C16D08
	0x03C28168 MOV X1, X0
	0x03C2816C MOV X0, X19
	0x03C28170 BL 0x1C16DEC
	0x03C28174 LDP S0, S1, [X0 + 0x30]
	0x03C28178 LDR V2, [X0 + 0x38]
	0x03C2817C RET
	0x03C28180 STR D10, [X31 - 0x30]!
	0x03C28184 STP D9, D8, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x7BE000
	007 Move X19, X8
	008 Move X8, [X21+8]
	009 Move X20, X0
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X31+32], V0
	012 Move [X31+40], V0
	013 Move [X31], V0
	014 Move [X31+8], V0
	015 Compare X8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51384320
	018 Add X0, X0, 3245
	019 Call 0x1C17CB8
	020 Move X8, X0
	021 Move [X21+8], X0
	022 Add X1, X31, 0
	023 Move X0, X20
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move V1, [X31+32]
	026 Move V0, [X31+48]
	027 Move V3, [X31]
	028 Move V2, [X31+16]
	029 Move X30, [X31+64]
	030 Move X21, [X31+72]
	031 Move [X19+32], V1
	032 Move [X19+40], V0
	033 Move [X19], V3
	034 Move [X19+8], V2
	035 Move X20, [X31+80]
	036 Move X19, [X31+88]
	037 Add X31, X31, 96
	038 Return X0

Method: UnityEngine.Matrix4x4 get_inverse()

Disassembly:
	0x03C281CC MOV V0.16B, V9.16B
	0x03C281D0 BL 0x3C2798C
	0x03C281D4 MOVZ W1, 0x3
	0x03C281D8 BFM W1, W19, 0x1E, 0x1D
	0x03C281DC MOV X0, X20
	0x03C281E0 MOV V0.16B, V8.16B
	0x03C281E4 LDP X20, X19, [X31 + 0x20]
	0x03C281E8 LDR X30, [X31 + 0x18]
	0x03C281EC LDP D9, D8, [X31 + 0x8]
	0x03C281F0 LDR V10, [X31], #0x30
	0x03C281F4 B 0x3C2798C
	0x03C281F8 LDR V3, [X0]
	0x03C281FC LDP S6, S7, [X0 + 0x8]
	0x03C28200 LDR V4, [X0 + 0x10]
	0x03C28204 LDP S16, S17, [X0 + 0x18]
	0x03C28208 LDR V5, [X0 + 0x20]
	0x00000000 INVALID
	0x03C28210 FMUL S6, S0, S6
	0x03C28214 FMUL S0, S0, S7
	0x03C28218 LDP S7, S18, [X0 + 0x28]
	0x00000000 INVALID
	0x03C28220 FMUL S16, S1, S16
	0x03C28224 FMUL S1, S1, S17
	0x03C28228 FADD S6, S6, S16
	0x03C2822C FADD S0, S0, S1
	0x03C28230 LDP S1, S16, [X0 + 0x38]
	0x03C28234 FADD V3.2S, V3.2S, V4.2S
	0x03C28238 LDR V4, [X0 + 0x30]
	0x00000000 INVALID
	0x03C28240 FMUL S7, S2, S7
	0x03C28244 FMUL S2, S2, S18
	0x03C28248 FADD S0, S0, S2

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+192], X30
	003 Move [X31+208], X20
	004 Move [X31+216], X19
	005 Move X20, 0x7BE000
	006 Move X19, X8
	007 Move V0, [X0]
	008 Move V1, [X0+16]
	009 Move V2, [X0+32]
	010 Move V3, [X0+48]
	011 Move X8, [X20+8]
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 Move [X31+160], V4
	014 Move [X31+168], V4
	015 Move [X31+32], V2
	016 Move [X31+40], V3
	017 Move [X31], V0
	018 Move [X31+8], V1
	019 Move [X31+128], V4
	020 Move [X31+136], V4
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51384320
	024 Add X0, X0, 3245
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X20+8], X0
	028 Add X0, X31, 0
	029 Add X1, X31, 128
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move V1, [X31+160]
	032 Move V0, [X31+176]
	033 Move V3, [X31+128]
	034 Move V2, [X31+144]
	035 Move X30, [X31+192]
	036 Move [X19+32], V1
	037 Move [X19+40], V0
	038 Move [X19], V3
	039 Move [X19+8], V2
	040 Move X20, [X31+208]
	041 Move X19, [X31+216]
	042 Move [X31+96], V1
	043 Move [X31+104], V0
	044 Move [X31+64], V3
	045 Move [X31+72], V2
	046 Add X31, X31, 224
	047 Return X0

Method: UnityEngine.Matrix4x4 Transpose(UnityEngine.Matrix4x4 m)

Disassembly:
	0x03C2824C FADD V3.2S, V3.2S, V5.2S
	0x03C28250 FMOV S5, 1
	0x03C28254 FADD S0, S16, S0
	0x03C28258 FADD S6, S6, S7
	0x03C2825C FADD V2.2S, V4.2S, V3.2S
	0x03C28260 FDIV S3, S5, S0
	0x03C28264 FADD S1, S1, S6
	0x00000000 INVALID
	0x03C2826C FMUL S2, S1, S3
	0x03C28270 MOV S1, V0.S[1]
	0x03C28274 RET
	0x03C28278 LDR V3, [X0]
	0x03C2827C LDR V5, [X0 + 0x8]
	0x03C28280 LDR V4, [X0 + 0x10]
	0x03C28284 LDR V7, [X0 + 0x18]
	0x03C28288 LDR V6, [X0 + 0x20]
	0x00000000 INVALID
	0x03C28290 FMUL S0, S0, S5
	0x03C28294 LDR V5, [X0 + 0x28]
	0x00000000 INVALID
	0x03C2829C FMUL S1, S1, S7
	0x03C282A0 LDR V7, [X0 + 0x30]
	0x00000000 INVALID
	0x03C282A8 FMUL S2, S2, S5
	0x03C282AC LDR V5, [X0 + 0x38]
	0x03C282B0 FADD V3.2S, V3.2S, V4.2S
	0x03C282B4 FADD S0, S0, S1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x7BE000
	007 Move X19, X8
	008 Move X8, [X21+16]
	009 Move X20, X0
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X31+32], V0
	012 Move [X31+40], V0
	013 Move [X31], V0
	014 Move [X31+8], V0
	015 Compare X8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51458048
	018 Add X0, X0, 2531
	019 Call 0x1C17CB8
	020 Move X8, X0
	021 Move [X21+16], X0
	022 Add X1, X31, 0
	023 Move X0, X20
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move V1, [X31+32]
	026 Move V0, [X31+48]
	027 Move V3, [X31]
	028 Move V2, [X31+16]
	029 Move X30, [X31+64]
	030 Move X21, [X31+72]
	031 Move [X19+32], V1
	032 Move [X19+40], V0
	033 Move [X19], V3
	034 Move [X19+8], V2
	035 Move X20, [X31+80]
	036 Move X19, [X31+88]
	037 Add X31, X31, 96
	038 Return X0

Method: UnityEngine.Matrix4x4 get_transpose()

Disassembly:
	0x03C282FC FADD V3.2S, V3.2S, V4.2S
	0x03C28300 FMUL S2, S2, S5
	0x03C28304 FADD S1, S0, S1
	0x03C28308 FADD V0.2S, V3.2S, V6.2S
	0x03C2830C FADD S2, S1, S2
	0x03C28310 MOV S1, V0.S[1]
	0x03C28314 RET
	0x03C28318 MOVZ W9, 0x3F800000
	0x03C2831C STR S0, [X8]
	0x03C28320 STUR X31, [X8 + 0xC]
	0x03C28324 STUR X31, [X8 + 0x4]
	0x03C28328 STR S1, [X8 + 0x14]
	0x03C2832C STP X31, X31, [X8 + 0x18]
	0x03C28330 STR S2, [X8 + 0x28]
	0x03C28334 STUR X31, [X8 + 0x34]
	0x03C28338 STUR X31, [X8 + 0x2C]
	0x03C2833C STR W9, [X8 + 0x3C]
	0x03C28340 RET
	0x03C28344 ADRP X10, 0xFFFFFFFFFCEC5000
	0x03C28348 STP S0, S1, [X8 + 0x30]
	0x03C2834C LDR V0, [X10 + 0x648]
	0x03C28350 MOVZ W9, 0x3F800000
	0x03C28354 STUR X31, [X8 + 0xC]
	0x03C28358 STUR X31, [X8 + 0x4]
	0x03C2835C STP X31, X31, [X8 + 0x18]
	0x03C28360 STR S2, [X8 + 0x38]
	0x03C28364 STR W9, [X8]
	0x03C28368 STR W9, [X8 + 0x14]
	0x03C2836C STR D0, [X8 + 0x28]
	0x03C28370 STR W9, [X8 + 0x3C]
	0x03C28374 RET
	0x03C28378 FADD S4, S0, S0

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+192], X30
	003 Move [X31+208], X20
	004 Move [X31+216], X19
	005 Move X20, 0x7BE000
	006 Move X19, X8
	007 Move V0, [X0]
	008 Move V1, [X0+16]
	009 Move V2, [X0+32]
	010 Move V3, [X0+48]
	011 Move X8, [X20+16]
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 Move [X31+160], V4
	014 Move [X31+168], V4
	015 Move [X31+32], V2
	016 Move [X31+40], V3
	017 Move [X31], V0
	018 Move [X31+8], V1
	019 Move [X31+128], V4
	020 Move [X31+136], V4
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51458048
	024 Add X0, X0, 2531
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X20+16], X0
	028 Add X0, X31, 0
	029 Add X1, X31, 128
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move V1, [X31+160]
	032 Move V0, [X31+176]
	033 Move V3, [X31+128]
	034 Move V2, [X31+144]
	035 Move X30, [X31+192]
	036 Move [X19+32], V1
	037 Move [X19+40], V0
	038 Move [X19], V3
	039 Move [X19+8], V2
	040 Move X20, [X31+208]
	041 Move X19, [X31+216]
	042 Move [X31+96], V1
	043 Move [X31+104], V0
	044 Move [X31+64], V3
	045 Move [X31+72], V2
	046 Add X31, X31, 224
	047 Return X0

Method: UnityEngine.Matrix4x4 Ortho(System.Single left, System.Single right, System.Single bottom, System.Single top, System.Single zNear, System.Single zFar)

Disassembly:
	0x03C2837C FADD S5, S1, S1
	0x03C28380 FADD S6, S2, S2
	0x03C28384 FMUL S16, S0, S4
	0x03C28388 FMUL S17, S1, S5
	0x03C2838C FMUL S2, S2, S6
	0x03C28390 FMUL S18, S0, S5
	0x03C28394 FMUL S1, S1, S6
	0x03C28398 FMUL S4, S3, S4
	0x03C2839C FMUL S5, S3, S5
	0x03C283A0 FMUL S3, S3, S6
	0x03C283A4 FMOV S7, 1
	0x03C283A8 FMUL S0, S0, S6
	0x03C283AC FADD S6, S17, S2
	0x03C283B0 FADD S19, S18, S3
	0x03C283B4 FSUB S3, S18, S3
	0x03C283B8 FADD S2, S16, S2
	0x03C283BC FADD S18, S1, S4
	0x03C283C0 FSUB S1, S1, S4
	0x03C283C4 FADD S4, S16, S17
	0x03C283C8 MOVZ W9, 0x3F800000
	0x03C283CC FSUB S20, S0, S5
	0x03C283D0 FADD S0, S0, S5
	0x03C283D4 FSUB S5, S7, S6
	0x03C283D8 FSUB S2, S7, S2
	0x03C283DC FSUB S4, S7, S4
	0x03C283E0 STR W31, [X8 + 0xC]
	0x03C283E4 STR W31, [X8 + 0x1C]
	0x03C283E8 STUR X31, [X8 + 0x34]
	0x03C283EC STUR X31, [X8 + 0x2C]
	0x03C283F0 STP S19, S20, [X8 + 0x4]
	0x03C283F4 STP S2, S18, [X8 + 0x14]
	0x03C283F8 STP S0, S1, [X8 + 0x20]
	0x03C283FC STR S5, [X8]
	0x03C28400 STR S3, [X8 + 0x10]
	0x03C28404 STR S4, [X8 + 0x28]
	0x03C28408 STR W9, [X8 + 0x3C]
	0x03C2840C RET
	0x03C28410 STP X30, X21, [X31 - 0x20]!
	0x03C28414 STP X20, X19, [X31 + 0x10]
	0x03C28418 ADRP X20, 0x7BC000
	0x03C2841C ADRP X21, 0x4CF000
	0x03C28420 MOV X19, X8
	0x03C28424 LDRB W8, [X20 + 0xFD9]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], D13
	003 Move [X31+72], D12
	004 Move [X31+80], D11
	005 Move [X31+88], D10
	006 Move [X31+96], D9
	007 Move [X31+104], D8
	008 Move [X31+112], X30
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X20, 0x7BE000
	012 Move X19, X8
	013 Move X8, [X20+24]
	014 Move V8, V5
	015 Move V9, V4
	016 Move V10, V3
	017 Move V11, V2
	018 Move V12, V1
	019 Move V13, V0
	020 NotImplemented "Instruction MOVI not yet implemented."
	021 Move [X31+32], V0
	022 Move [X31+40], V0
	023 Move [X31], V0
	024 Move [X31+8], V0
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -51359744
	028 Add X0, X0, 2084
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X20+24], X0
	032 Add X0, X31, 0
	033 Move V0, V13
	034 Move V1, V12
	035 Move V2, V11
	036 Move V3, V10
	037 Move V4, V9
	038 Move V5, V8
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move V1, [X31+32]
	041 Move V0, [X31+48]
	042 Move V3, [X31]
	043 Move V2, [X31+16]
	044 Move X30, [X31+112]
	045 Move D9, [X31+96]
	046 Move D8, [X31+104]
	047 Move [X19+32], V1
	048 Move [X19+40], V0
	049 Move [X19], V3
	050 Move [X19+8], V2
	051 Move X20, [X31+128]
	052 Move X19, [X31+136]
	053 Move D11, [X31+80]
	054 Move D10, [X31+88]
	055 Move D13, [X31+64]
	056 Move D12, [X31+72]
	057 Add X31, X31, 144
	058 Return X0

Method: UnityEngine.Matrix4x4 Perspective(System.Single fov, System.Single aspect, System.Single zNear, System.Single zFar)

Disassembly:
	0x03C284AC STP V1, V0, [X19 + 0x20]
	0x03C284B0 STP V3, V2, [X19]
	0x03C284B4 LDP X20, X19, [X31 + 0x10]
	0x03C284B8 LDP X30, X21, [X31], #0x20
	0x03C284BC RET
	0x03C284C0 MOV X1, X31
	0x03C284C4 MOV X2, X31
	0x03C284C8 MOV X3, X31
	0x03C284CC B 0x3C2EB00
	0x03C284D0 STP X30, X23, [X31 - 0x30]!
	0x03C284D4 STP X22, X21, [X31 + 0x10]
	0x03C284D8 STP X20, X19, [X31 + 0x20]
	0x03C284DC ADRP X23, 0x7BC000
	0x03C284E0 ADRP X22, 0x4D3000
	0x03C284E4 LDRB W8, [X23 + 0xFDB]
	0x03C284E8 LDR X22, [X22 + 0x320]
	0x03C284EC MOV X20, X2
	0x03C284F0 MOV X21, X1
	0x03C284F4 MOV X19, X0
	0x03C284F8 TBNZ X8, 0x0, 0x3C28534
	0x03C284FC ADRP X0, 0x4CD000
	0x03C28500 LDR X0, [X0 + 0xC48]
	0x03C28504 BL 0x1C16CF4
	0x03C28508 ADRP X0, 0x4CB000
	0x03C2850C LDR X0, [X0 + 0x9D0]
	0x03C28510 BL 0x1C16CF4
	0x03C28514 ADRP X0, 0x537000
	0x03C28518 LDR X0, [X0 + 0x298]
	0x03C2851C BL 0x1C16CF4
	0x03C28520 ADRP X0, 0x4D3000
	0x03C28524 LDR X0, [X0 + 0x320]
	0x03C28528 BL 0x1C16CF4
	0x03C2852C MOVZ W8, 0x1
	0x03C28530 STRB W8, [X23 + 0xFDB]
	0x03C28534 MOV X0, X21
	0x03C28538 MOV X1, X31
	0x03C2853C BL 0x32277A8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], D11
	003 Move [X31+72], D10
	004 Move [X31+80], D9
	005 Move [X31+88], D8
	006 Move [X31+96], X30
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X20, 0x7BE000
	010 Move X19, X8
	011 Move X8, [X20+32]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 NotImplemented "Instruction MOVI not yet implemented."
	017 Move [X31+32], V0
	018 Move [X31+40], V0
	019 Move [X31], V0
	020 Move [X31+8], V0
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51384320
	024 Add X0, X0, 3332
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X20+32], X0
	028 Add X0, X31, 0
	029 Move V0, V11
	030 Move V1, V10
	031 Move V2, V9
	032 Move V3, V8
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move V1, [X31+32]
	035 Move V0, [X31+48]
	036 Move V3, [X31]
	037 Move V2, [X31+16]
	038 Move X30, [X31+96]
	039 Move D9, [X31+80]
	040 Move D8, [X31+88]
	041 Move [X19+32], V1
	042 Move [X19+40], V0
	043 Move [X19], V3
	044 Move [X19+8], V2
	045 Move X20, [X31+112]
	046 Move X19, [X31+120]
	047 Move D11, [X31+64]
	048 Move D10, [X31+72]
	049 Add X31, X31, 128
	050 Return X0

Method: UnityEngine.Matrix4x4 LookAt(UnityEngine.Vector3 from, UnityEngine.Vector3 to, UnityEngine.Vector3 up)

Disassembly:
	0x03C285AC MOV X3, X31
	0x03C285B0 BL 0x338FFB4
	0x03C285B4 CBZ X22, 0x3C289D4
	0x03C285B8 MOV X23, X0
	0x03C285BC CBZ X0, 0x3C285D4
	0x03C285C0 LDR X8, [X22]
	0x03C285C4 MOV X0, X23
	0x03C285C8 LDR X1, [X8 + 0x40]
	0x03C285CC BL 0x1C16E00
	0x03C285D0 CBZ X0, 0x3C289C8
	0x03C285D4 LDR W8, [X22 + 0x18]
	0x03C285D8 CBZ W8, 0x3C289C4
	0x03C285DC ADD X0, X19, 0x10
	0x03C285E0 MOV X1, X21
	0x03C285E4 MOV X2, X20
	0x03C285E8 MOV X3, X31
	0x03C285EC STR X23, [X22 + 0x20]
	0x03C285F0 BL 0x338FFB4
	0x03C285F4 MOV X23, X0
	0x03C285F8 CBZ X0, 0x3C28610
	0x03C285FC LDR X8, [X22]
	0x03C28600 MOV X0, X23
	0x03C28604 LDR X1, [X8 + 0x40]
	0x03C28608 BL 0x1C16E00
	0x03C2860C CBZ X0, 0x3C289C8
	0x03C28610 LDR W8, [X22 + 0x18]
	0x03C28614 CMP W8, 0x1
	0x03C28618 B.LS 0x3C289C4
	0x03C2861C ADD X0, X19, 0x20
	0x03C28620 MOV X1, X21
	0x03C28624 MOV X2, X20
	0x03C28628 MOV X3, X31
	0x03C2862C STR X23, [X22 + 0x28]
	0x03C28630 BL 0x338FFB4
	0x03C28634 MOV X23, X0
	0x03C28638 CBZ X0, 0x3C28650

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+128], X20
	004 Move [X31+136], X19
	005 Move X19, X8
	006 Move X8, [X31+144]
	007 Move X20, 0x7BE000
	008 Move V6, [X31+152]
	009 Move [X31+96], S0
	010 Move [X31+104], S1
	011 Move [X31+64], X8
	012 Move X8, [X20+40]
	013 NotImplemented "Instruction MOVI not yet implemented."
	014 Move [X31+104], S2
	015 Move [X31+80], S3
	016 Move [X31+88], S4
	017 Move [X31+88], S5
	018 Move [X31+32], V0
	019 Move [X31+40], V0
	020 Move [X31+72], S6
	021 Move [X31], V0
	022 Move [X31+8], V0
	023 Compare X8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51494912
	026 Add X0, X0, 911
	027 Call 0x1C17CB8
	028 Move X8, X0
	029 Move [X20+40], X0
	030 Add X0, X31, 96
	031 Add X1, X31, 80
	032 Add X2, X31, 64
	033 Add X3, X31, 0
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move V1, [X31+32]
	036 Move V0, [X31+48]
	037 Move V3, [X31]
	038 Move V2, [X31+16]
	039 Move X30, [X31+112]
	040 Move [X19+32], V1
	041 Move [X19+40], V0
	042 Move [X19], V3
	043 Move [X19+8], V2
	044 Move X20, [X31+128]
	045 Move X19, [X31+136]
	046 Add X31, X31, 144
	047 Return X0

Method: UnityEngine.Matrix4x4 Frustum(System.Single left, System.Single right, System.Single bottom, System.Single top, System.Single zNear, System.Single zFar)

Disassembly:
	0x03C28698 B.LS 0x3C289C4
	0x03C2869C ADD X0, X19, 0x4
	0x03C286A0 MOV X1, X21
	0x03C286A4 MOV X2, X20
	0x03C286A8 MOV X3, X31
	0x03C286AC STR X23, [X22 + 0x38]
	0x03C286B0 BL 0x338FFB4
	0x03C286B4 MOV X23, X0
	0x03C286B8 CBZ X0, 0x3C286D0
	0x03C286BC LDR X8, [X22]
	0x03C286C0 MOV X0, X23
	0x03C286C4 LDR X1, [X8 + 0x40]
	0x03C286C8 BL 0x1C16E00
	0x03C286CC CBZ X0, 0x3C289C8
	0x03C286D0 LDR W8, [X22 + 0x18]
	0x03C286D4 CMP W8, 0x4
	0x03C286D8 B.LS 0x3C289C4
	0x03C286DC ADD X0, X19, 0x14
	0x03C286E0 MOV X1, X21
	0x03C286E4 MOV X2, X20
	0x03C286E8 MOV X3, X31
	0x03C286EC STR X23, [X22 + 0x40]
	0x03C286F0 BL 0x338FFB4
	0x03C286F4 MOV X23, X0
	0x03C286F8 CBZ X0, 0x3C28710
	0x03C286FC LDR X8, [X22]
	0x03C28700 MOV X0, X23
	0x03C28704 LDR X1, [X8 + 0x40]
	0x03C28708 BL 0x1C16E00
	0x03C2870C CBZ X0, 0x3C289C8
	0x03C28710 LDR W8, [X22 + 0x18]
	0x03C28714 CMP W8, 0x5
	0x03C28718 B.LS 0x3C289C4
	0x03C2871C ADD X0, X19, 0x24
	0x03C28720 MOV X1, X21
	0x03C28724 MOV X2, X20
	0x03C28728 MOV X3, X31
	0x03C2872C STR X23, [X22 + 0x48]
	0x03C28730 BL 0x338FFB4
	0x03C28734 MOV X23, X0
	0x03C28738 CBZ X0, 0x3C28750
	0x03C2873C LDR X8, [X22]
	0x03C28740 MOV X0, X23

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], D13
	003 Move [X31+72], D12
	004 Move [X31+80], D11
	005 Move [X31+88], D10
	006 Move [X31+96], D9
	007 Move [X31+104], D8
	008 Move [X31+112], X30
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X20, 0x7BE000
	012 Move X19, X8
	013 Move X8, [X20+48]
	014 Move V8, V5
	015 Move V9, V4
	016 Move V10, V3
	017 Move V11, V2
	018 Move V12, V1
	019 Move V13, V0
	020 NotImplemented "Instruction MOVI not yet implemented."
	021 Move [X31+32], V0
	022 Move [X31+40], V0
	023 Move [X31], V0
	024 Move [X31+8], V0
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -51359744
	028 Add X0, X0, 2230
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X20+48], X0
	032 Add X0, X31, 0
	033 Move V0, V13
	034 Move V1, V12
	035 Move V2, V11
	036 Move V3, V10
	037 Move V4, V9
	038 Move V5, V8
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move V1, [X31+32]
	041 Move V0, [X31+48]
	042 Move V3, [X31]
	043 Move V2, [X31+16]
	044 Move X30, [X31+112]
	045 Move D9, [X31+96]
	046 Move D8, [X31+104]
	047 Move [X19+32], V1
	048 Move [X19+40], V0
	049 Move [X19], V3
	050 Move [X19+8], V2
	051 Move X20, [X31+128]
	052 Move X19, [X31+136]
	053 Move D11, [X31+80]
	054 Move D10, [X31+88]
	055 Move D13, [X31+64]
	056 Move D12, [X31+72]
	057 Add X31, X31, 144
	058 Return X0

Method: UnityEngine.Matrix4x4 Frustum(UnityEngine.FrustumPlanes fp)

Disassembly:
	0x03C287C8 BL 0x1C16E00
	0x03C287CC CBZ X0, 0x3C289C8
	0x03C287D0 LDR W8, [X22 + 0x18]
	0x03C287D4 CMP W8, 0x8
	0x03C287D8 B.LS 0x3C289C4
	0x03C287DC ADD X0, X19, 0x18
	0x03C287E0 MOV X1, X21
	0x03C287E4 MOV X2, X20
	0x03C287E8 MOV X3, X31
	0x03C287EC STR X23, [X22 + 0x60]
	0x03C287F0 BL 0x338FFB4
	0x03C287F4 MOV X23, X0
	0x03C287F8 CBZ X0, 0x3C28810
	0x03C287FC LDR X8, [X22]
	0x03C28800 MOV X0, X23
	0x03C28804 LDR X1, [X8 + 0x40]
	0x03C28808 BL 0x1C16E00
	0x03C2880C CBZ X0, 0x3C289C8
	0x03C28810 LDR W8, [X22 + 0x18]
	0x03C28814 CMP W8, 0x9
	0x03C28818 B.LS 0x3C289C4
	0x03C2881C ADD X0, X19, 0x28
	0x03C28820 MOV X1, X21
	0x03C28824 MOV X2, X20
	0x03C28828 MOV X3, X31
	0x03C2882C STR X23, [X22 + 0x68]
	0x03C28830 BL 0x338FFB4
	0x03C28834 MOV X23, X0
	0x03C28838 CBZ X0, 0x3C28850
	0x03C2883C LDR X8, [X22]
	0x03C28840 MOV X0, X23
	0x03C28844 LDR X1, [X8 + 0x40]
	0x03C28848 BL 0x1C16E00
	0x03C2884C CBZ X0, 0x3C289C8
	0x03C28850 LDR W8, [X22 + 0x18]
	0x03C28854 CMP W8, 0xA
	0x03C28858 B.LS 0x3C289C4
	0x03C2885C ADD X0, X19, 0x38
	0x03C28860 MOV X1, X21
	0x03C28864 MOV X2, X20
	0x03C28868 MOV X3, X31
	0x03C2886C STR X23, [X22 + 0x70]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], D13
	003 Move [X31+136], D12
	004 Move [X31+144], D11
	005 Move [X31+152], D10
	006 Move [X31+160], D9
	007 Move [X31+168], D8
	008 Move [X31+176], X30
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X20, 0x7BE000
	012 Move X19, X8
	013 Move S8, [X0]
	014 Move S9, [X0+4]
	015 Move S10, [X0+8]
	016 Move S11, [X0+12]
	017 Move S12, [X0+16]
	018 Move S13, [X0+20]
	019 Move X8, [X20+48]
	020 NotImplemented "Instruction MOVI not yet implemented."
	021 Move [X31+96], V0
	022 Move [X31+104], V0
	023 Move [X31+64], V0
	024 Move [X31+72], V0
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -51359744
	028 Add X0, X0, 2230
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X20+48], X0
	032 Add X0, X31, 64
	033 Move V0, V8
	034 Move V1, V9
	035 Move V2, V10
	036 Move V3, V11
	037 Move V4, V12
	038 Move V5, V13
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move V1, [X31+96]
	041 Move V0, [X31+112]
	042 Move V3, [X31+64]
	043 Move V2, [X31+80]
	044 Move X30, [X31+176]
	045 Move D9, [X31+160]
	046 Move D8, [X31+168]
	047 Move [X19+32], V1
	048 Move [X19+40], V0
	049 Move [X19], V3
	050 Move [X19+8], V2
	051 Move X20, [X31+192]
	052 Move X19, [X31+200]
	053 Move D11, [X31+144]
	054 Move D10, [X31+152]
	055 Move D13, [X31+128]
	056 Move D12, [X31+136]
	057 Move [X31+32], V1
	058 Move [X31+40], V0
	059 Move [X31], V3
	060 Move [X31+8], V2
	061 Add X31, X31, 208
	062 Return X0

Method: System.Void .ctor(UnityEngine.Vector4 column0, UnityEngine.Vector4 column1, UnityEngine.Vector4 column2, UnityEngine.Vector4 column3)

Disassembly:
	0x03C28870 BL 0x338FFB4
	0x03C28874 MOV X23, X0
	0x03C28878 CBZ X0, 0x3C28890
	0x03C2887C LDR X8, [X22]
	0x03C28880 MOV X0, X23
	0x03C28884 LDR X1, [X8 + 0x40]
	0x03C28888 BL 0x1C16E00

ISIL:
	001 Move V17, [X31]
	002 Move V16, [X31+16]
	003 Move [X0], S0
	004 Move [X0+8], S1
	005 Move [X0+16], S4
	006 Move [X0+24], S5
	007 Move [X0+8], S2
	008 Move [X0+16], S3
	009 Move [X0+32], V17
	010 Move [X0+40], V16
	011 Move [X0+24], S6
	012 Move [X0+32], S7
	013 Return 

Method: System.Single get_Item(System.Int32 row, System.Int32 column)

Disassembly:
	0x03C2888C CBZ X0, 0x3C289C8
	0x03C28890 LDR W8, [X22 + 0x18]

ISIL:
	001 Add W1, W1, W2

Method: System.Void set_Item(System.Int32 row, System.Int32 column, System.Single value)

Disassembly:
	0x03C28984 LDR X1, [X8 + 0x40]
	0x03C28988 BL 0x1C16E00

ISIL:
	001 Add W1, W1, W2

Method: System.Single get_Item(System.Int32 index)

Disassembly:
	0x03C28894 CMP W8, 0xB
	0x03C28898 B.LS 0x3C289C4
	0x03C2889C ADD X0, X19, 0xC
	0x03C288A0 MOV X1, X21
	0x03C288A4 MOV X2, X20
	0x03C288A8 MOV X3, X31
	0x03C288AC STR X23, [X22 + 0x78]
	0x03C288B0 BL 0x338FFB4
	0x03C288B4 MOV X23, X0
	0x03C288B8 CBZ X0, 0x3C288D0
	0x03C288BC LDR X8, [X22]
	0x03C288C0 MOV X0, X23
	0x03C288C4 LDR X1, [X8 + 0x40]
	0x03C288C8 BL 0x1C16E00
	0x03C288CC CBZ X0, 0x3C289C8
	0x03C288D0 LDR W8, [X22 + 0x18]
	0x03C288D4 CMP W8, 0xC
	0x03C288D8 B.LS 0x3C289C4
	0x03C288DC ADD X0, X19, 0x1C
	0x03C288E0 MOV X1, X21
	0x03C288E4 MOV X2, X20
	0x03C288E8 MOV X3, X31
	0x03C288EC STR X23, [X22 + 0x80]
	0x03C288F0 BL 0x338FFB4
	0x03C288F4 MOV X23, X0
	0x03C288F8 CBZ X0, 0x3C28910
	0x03C288FC LDR X8, [X22]
	0x03C28900 MOV X0, X23
	0x03C28904 LDR X1, [X8 + 0x40]
	0x03C28908 BL 0x1C16E00
	0x03C2890C CBZ X0, 0x3C289C8
	0x03C28910 LDR W8, [X22 + 0x18]
	0x03C28914 CMP W8, 0xD
	0x03C28918 B.LS 0x3C289C4
	0x03C2891C ADD X0, X19, 0x2C
	0x03C28920 MOV X1, X21
	0x03C28924 MOV X2, X20
	0x03C28928 MOV X3, X31
	0x03C2892C STR X23, [X22 + 0x88]
	0x03C28930 BL 0x338FFB4
	0x03C28934 MOV X23, X0
	0x03C28938 CBZ X0, 0x3C28950
	0x03C2893C LDR X8, [X22]
	0x03C28940 MOV X0, X23
	0x03C28944 LDR X1, [X8 + 0x40]
	0x03C28948 BL 0x1C16E00
	0x03C2894C CBZ X0, 0x3C289C8
	0x03C28950 LDR W8, [X22 + 0x18]
	0x03C28954 CMP W8, 0xE
	0x03C28958 B.LS 0x3C289C4
	0x03C2895C ADD X0, X19, 0x3C
	0x03C28960 MOV X1, X21
	0x03C28964 MOV X2, X20
	0x03C28968 MOV X3, X31
	0x03C2896C STR X23, [X22 + 0x90]
	0x03C28970 BL 0x338FFB4
	0x03C28974 MOV X19, X0
	0x03C28978 CBZ X0, 0x3C28990
	0x03C2897C LDR X8, [X22]
	0x03C28980 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -50921472
	005 Move W8, W1
	006 Add X9, X9, 3553
	007 NotImplemented "Instruction ADR not yet implemented."
	008 Move W11, [X9]
	009 Add X10, X10, X11
	010 CallNoReturn X10
	011 Add X0, X0, 4
	012 Add X0, X0, 8
	013 Add X0, X0, 12
	014 Add X0, X0, 16
	015 Add X0, X0, 20
	016 Add X0, X0, 24
	017 Add X0, X0, 28
	018 Add X0, X0, 32
	019 Add X0, X0, 36
	020 Add X0, X0, 40
	021 Add X0, X0, 44
	022 Add X0, X0, 48
	023 Add X0, X0, 52
	024 Add X0, X0, 56
	025 Add X0, X0, 60
	026 Move V0, [X0]
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Return V0
	030 Move X0, 0x4D6000
	031 Move X0, [X0+3960]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Move X0, 0x538000
	036 Move X0, [X0+608]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Move X2, X31
	041 Call IndexOutOfRangeException..ctor, X0, X1
	042 Move X0, 0x538000
	043 Move X0, [X0+616]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Call 0x1C17DEC

Method: System.Void set_Item(System.Int32 index, System.Single value)

Disassembly:
	0x03C2898C CBZ X0, 0x3C289C8
	0x03C28990 LDR W8, [X22 + 0x18]
	0x03C28994 CMP W8, 0xF
	0x03C28998 B.LS 0x3C289C4
	0x03C2899C ADRP X8, 0x537000
	0x03C289A0 LDR X8, [X8 + 0x298]
	0x03C289A4 STR X19, [X22 + 0x98]
	0x03C289A8 MOV X1, X22
	0x03C289AC LDP X20, X19, [X31 + 0x20]
	0x03C289B0 LDR X0, [X8]
	0x03C289B4 LDP X22, X21, [X31 + 0x10]
	0x03C289B8 MOV X2, X31
	0x03C289BC LDP X30, X23, [X31], #0x30
	0x03C289C0 B 0x3C96574
	0x03C289C4 BL 0x1C16F28
	0x03C289C8 BL 0x1C16F44
	0x03C289CC MOV X1, X31
	0x03C289D0 BL 0x1C16DEC
	0x03C289D4 BL 0x1C16F20
	0x03C289D8 STR X30, [X31 - 0x20]!
	0x03C289DC STP X20, X19, [X31 + 0x10]
	0x03C289E0 ADRP X20, 0x7BC000
	0x03C289E4 ADRP X19, 0x4CF000
	0x03C289E8 LDRB W8, [X20 + 0xFDC]
	0x03C289EC LDR X19, [X19 + 0x270]
	0x03C289F0 TBNZ X8, 0x0, 0x3C28A08
	0x03C289F4 ADRP X0, 0x4CF000
	0x03C289F8 LDR X0, [X0 + 0x270]
	0x03C289FC BL 0x1C16CF4
	0x03C28A00 MOVZ W8, 0x1
	0x03C28A04 STRB W8, [X20 + 0xFDC]
	0x03C28A08 LDR X8, [X19]
	0x03C28A0C MOVI V0.2D, 0x0
	0x03C28A10 MOVZ W9, 0x3F800000
	0x03C28A14 LDR X8, [X8 + 0xB8]
	0x03C28A18 STP V0, V0, [X8 + 0x20]
	0x03C28A1C STP V0, V0, [X8]
	0x03C28A20 LDR X8, [X19]
	0x03C28A24 LDP X20, X19, [X31 + 0x10]
	0x03C28A28 LDR X8, [X8 + 0xB8]
	0x03C28A2C STR W9, [X8 + 0x40]
	0x03C28A30 STUR X31, [X8 + 0x4C]
	0x03C28A34 STUR X31, [X8 + 0x44]
	0x03C28A38 STR W9, [X8 + 0x54]
	0x03C28A3C STP X31, X31, [X8 + 0x58]
	0x03C28A40 STR W9, [X8 + 0x68]
	0x03C28A44 STUR X31, [X8 + 0x74]
	0x03C28A48 STUR X31, [X8 + 0x6C]
	0x03C28A4C STR W9, [X8 + 0x7C]
	0x03C28A50 LDR X30, [X31], #0x20
	0x03C28A54 RET
	0x03C28A58 SUB X31, X31, 0x50
	0x03C28A5C STR D8, [X31 + 0x30]
	0x03C28A60 STP X30, X19, [X31 + 0x40]
	0x03C28A64 ADRP X19, 0x7BD000
	0x03C28A68 LDR X8, [X19 + 0x58]
	0x03C28A6C MOV V8.16B, V6.16B
	0x03C28A70 STP S0, S1, [X31 + 0x20]
	0x03C28A74 STR S2, [X31 + 0x28]
	0x03C28A78 STP S3, S4, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -50921472
	005 Move W8, W1
	006 Add X9, X9, 3553
	007 NotImplemented "Instruction ADR not yet implemented."
	008 Move W11, [X9]
	009 Add X10, X10, X11
	010 CallNoReturn X10
	011 Add X0, X0, 4
	012 Add X0, X0, 8
	013 Add X0, X0, 12
	014 Add X0, X0, 16
	015 Add X0, X0, 20
	016 Add X0, X0, 24
	017 Add X0, X0, 28
	018 Add X0, X0, 32
	019 Add X0, X0, 36
	020 Add X0, X0, 40
	021 Add X0, X0, 44
	022 Add X0, X0, 48
	023 Add X0, X0, 52
	024 Add X0, X0, 56
	025 Add X0, X0, 60
	026 Move [X0], S0
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Return 
	030 Move X0, 0x4D6000
	031 Move X0, [X0+3960]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Move X0, 0x538000
	036 Move X0, [X0+608]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Move X2, X31
	041 Call IndexOutOfRangeException..ctor, X0, X1
	042 Move X0, 0x538000
	043 Move X0, [X0+624]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Call 0x1C17DEC

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C28A7C STR S5, [X31 + 0x18]
	0x03C28A80 STR W31, [X31 + 0x8]
	0x03C28A84 STR X31, [X31]
	0x03C28A88 CBNZ X8, 0x3C28AA0
	0x03C28A8C ADRP X0, 0xFFFFFFFFFCEF5000
	0x03C28A90 ADD X0, X0, 0x60
	0x03C28A94 BL 0x1C16CB8
	0x03C28A98 MOV X8, X0
	0x03C28A9C STR X0, [X19 + 0x58]
	0x03C28AA0 ADD X0, X31, 0x20
	0x03C28AA4 ADD X1, X31, 0x10
	0x03C28AA8 ADD X2, X31, 0x0
	0x03C28AAC MOV V0.16B, V8.16B
	0x03C28AB0 BLR X8
	0x03C28AB4 LDP S0, S1, [X31]
	0x03C28AB8 LDR V2, [X31 + 0x8]
	0x03C28ABC LDP X30, X19, [X31 + 0x40]
	0x03C28AC0 LDR V8, [X31 + 0x30]
	0x03C28AC4 ADD X31, X31, 0x50
	0x03C28AC8 RET
	0x03C28ACC STR D8, [X31 - 0x30]!
	0x03C28AD0 STR X30, [X31 + 0x8]
	0x03C28AD4 STP X22, X21, [X31 + 0x10]
	0x03C28AD8 STP X20, X19, [X31 + 0x20]
	0x03C28ADC ADRP X22, 0x7BD000
	0x03C28AE0 LDR X3, [X22 + 0x58]
	0x03C28AE4 MOV X19, X2
	0x03C28AE8 MOV V8.16B, V0.16B
	0x03C28AEC MOV X20, X1
	0x03C28AF0 MOV X21, X0
	0x03C28AF4 CBNZ X3, 0x3C28B0C
	0x03C28AF8 ADRP X0, 0xFFFFFFFFFCEF5000
	0x03C28AFC ADD X0, X0, 0x60
	0x03C28B00 BL 0x1C16CB8
	0x03C28B04 MOV X3, X0
	0x03C28B08 STR X0, [X22 + 0x58]
	0x03C28B0C MOV X0, X21
	0x03C28B10 MOV X1, X20
	0x03C28B14 MOV X2, X19
	0x03C28B18 LDP X20, X19, [X31 + 0x20]
	0x03C28B1C LDP X22, X21, [X31 + 0x10]
	0x03C28B20 LDR X30, [X31 + 0x8]
	0x03C28B24 MOV V0.16B, V8.16B
	0x03C28B28 LDR V8, [X31], #0x30
	0x03C28B2C BR X3
	0x03C28B30 STP X30, X21, [X31 - 0x20]!
	0x03C28B34 STP X20, X19, [X31 + 0x10]
	0x03C28B38 ADRP X21, 0x7BD000
	0x03C28B3C LDR X2, [X21 + 0x38]
	0x03C28B40 MOV X19, X1
	0x03C28B44 MOV X20, X0
	0x03C28B48 CBNZ X2, 0x3C28B60
	0x03C28B4C ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C28B50 ADD X0, X0, 0x989
	0x03C28B54 BL 0x1C16CB8
	0x03C28B58 MOV X2, X0
	0x03C28B5C STR X0, [X21 + 0x38]
	0x03C28B60 MOV X0, X20
	0x03C28B64 MOV X1, X19
	0x03C28B68 LDP X20, X19, [X31 + 0x10]
	0x03C28B6C LDP X30, X21, [X31], #0x20
	0x03C28B70 BR X2
	0x03C28B74 STP X30, X21, [X31 - 0x20]!
	0x03C28B78 STP X20, X19, [X31 + 0x10]
	0x03C28B7C ADRP X21, 0x7BD000
	0x03C28B80 LDR X2, [X21 + 0x38]
	0x03C28B84 MOV X19, X1
	0x03C28B88 MOV X20, X0
	0x03C28B8C CBNZ X2, 0x3C28BA4
	0x03C28B90 ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C28B94 ADD X0, X0, 0x989
	0x03C28B98 BL 0x1C16CB8
	0x03C28B9C MOV X2, X0
	0x03C28BA0 STR X0, [X21 + 0x38]
	0x03C28BA4 MOV X0, X20
	0x03C28BA8 MOV X1, X19
	0x03C28BAC LDP X20, X19, [X31 + 0x10]
	0x03C28BB0 LDP X30, X21, [X31], #0x20
	0x03C28BB4 BR X2
	0x03C28BB8 FMOV S7, 1
	0x03C28BBC FCMP S6, 0x0
	0x03C28BC0 FMIN S6, S6, S7
	0x03C28BC4 FMOV S7, W31
	0x03C28BC8 FSUB S3, S3, S0
	0x03C28BCC FSUB S4, S4, S1
	0x03C28BD0 FSUB S5, S5, S2
	0x03C28BD4 FCSEL S6, S6, S7, PL
	0x03C28BD8 FMUL S3, S3, S6
	0x03C28BDC FMUL S4, S4, S6
	0x03C28BE0 FMUL S5, S5, S6
	0x03C28BE4 FADD S0, S0, S3
	0x03C28BE8 FADD S1, S1, S4
	0x03C28BEC FADD S2, S2, S5
	0x03C28BF0 RET
	0x03C28BF4 FSUB S3, S3, S0
	0x03C28BF8 FSUB S4, S4, S1
	0x03C28BFC FSUB S5, S5, S2
	0x03C28C00 FMUL S3, S3, S6
	0x03C28C04 FMUL S4, S4, S6
	0x03C28C08 FMUL S5, S5, S6
	0x03C28C0C FADD S0, S0, S3
	0x03C28C10 FADD S1, S1, S4
	0x03C28C14 FADD S2, S2, S5
	0x03C28C18 RET
	0x03C28C1C SUB X31, X31, 0x60
	0x03C28C20 STR D14, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move V0, [X0]
	015 Move X25, X0
	016 Add X8, X31, 16
	017 Add X0, X31, 16
	018 Move X1, X31
	019 Or X23, X8, 7
	020 Or X21, X8, 15
	021 Or X19, X8, 15
	022 Move [X31+1], V0
	023 Call Single.GetHashCode, X0
	024 Move [X31+12], W0
	025 Move X0, X23
	026 Move X1, X31
	027 Call Single.GetHashCode, X0
	028 Move [X31+8], W0
	029 Move X0, X21
	030 Move X1, X31
	031 Call Single.GetHashCode, X0
	032 Move W24, W0
	033 Move X0, X19
	034 Move X1, X31
	035 Call Single.GetHashCode, X0
	036 Move V0, [X25+1]
	037 Move W26, W0
	038 Add X0, X31, 16
	039 Move X1, X31
	040 Move [X31+1], V0
	041 Call Single.GetHashCode, X0
	042 Move W27, W0
	043 Move X0, X23
	044 Move X1, X31
	045 Call Single.GetHashCode, X0
	046 Move W28, W0
	047 Move X0, X21
	048 Move X1, X31
	049 Call Single.GetHashCode, X0
	050 Move W29, W0
	051 Move X0, X19
	052 Move X1, X31
	053 Call Single.GetHashCode, X0
	054 Move V0, [X25+2]
	055 Xor W8, W27, W28
	056 Xor W8, W8, W29
	057 Xor W22, W8, W0
	058 Add X0, X31, 16
	059 Move X1, X31
	060 Move [X31+1], V0
	061 Call Single.GetHashCode, X0
	062 Move W27, W0
	063 Move X0, X23
	064 Move X1, X31
	065 Call Single.GetHashCode, X0
	066 Move W28, W0
	067 Move X0, X21
	068 Move X1, X31
	069 Call Single.GetHashCode, X0
	070 Move W29, W0
	071 Move X0, X19
	072 Move X1, X31
	073 Call Single.GetHashCode, X0
	074 Move V0, [X25+3]
	075 Move W20, W0
	076 Add X0, X31, 16
	077 Move X1, X31
	078 Xor W27, W27, W28
	079 Move [X31+1], V0
	080 Call Single.GetHashCode, X0
	081 Move W25, W0
	082 Move X0, X23
	083 Move X1, X31
	084 Call Single.GetHashCode, X0
	085 Move W23, W0
	086 Move X0, X21
	087 Move X1, X31
	088 Call Single.GetHashCode, X0
	089 Move W21, W0
	090 Move X0, X19
	091 Move X1, X31
	092 Call Single.GetHashCode, X0
	093 Move W10, [X31+8]
	094 Move W9, [X31+12]
	095 Xor W8, W25, W23
	096 Xor W9, W9, W10
	097 Xor W9, W9, W24
	098 Xor W9, W9, W26
	099 Xor W9, W9, W22
	100 Xor W9, W9, W29
	101 Xor W9, W9, W27
	102 Xor W9, W9, W20
	103 Xor W9, W9, W21
	104 Move X20, [X31+112]
	105 Move X19, [X31+120]
	106 Move X22, [X31+96]
	107 Move X21, [X31+104]
	108 Move X24, [X31+80]
	109 Move X23, [X31+88]
	110 Move X26, [X31+64]
	111 Move X25, [X31+72]
	112 Move X28, [X31+48]
	113 Move X27, [X31+56]
	114 Move X29, [X31+32]
	115 Move X30, [X31+40]
	116 Xor W8, W9, W8
	117 Xor W0, W8, W0
	118 Add X31, X31, 128
	119 Return X0

Method: System.Boolean Equals(System.Object other)

Disassembly:
	0x03C28CF8 STP V2, V1, [X31 + 0x30]
	0x03C28CFC BL 0x1C16CF4
	0x03C28D00 LDP V2, V1, [X31 + 0x30]
	0x03C28D04 LDP V23, V22, [X31 + 0x50]
	0x03C28D08 LDP V4, V20, [X31 + 0x70]
	0x03C28D0C MOVZ W8, 0x1
	0x03C28D10 STRB W8, [X20 + 0x40]
	0x03C28D14 ADRP X8, 0xFFFFFFFFFCEC1000
	0x03C28D18 LDR V6, [X8 + 0xF28]
	0x03C28D1C ADRP X8, 0xFFFFFFFFFCEC2000
	0x03C28D20 LDR V3, [X8 + 0x368]
	0x03C28D24 MOV V25.16B, V4.16B
	0x03C28D28 FMOV S0, 2
	0x03C28D2C ADRP X8, 0xFFFFFFFFFCEC2000
	0x03C28D30 MOV V1.S[1], V2.S[0]
	0x03C28D34 MOV V25.S[1], V20.S[0]
	0x03C28D38 FMAX S2, S10, S6
	0x03C28D3C FSUB S11, S8, S22
	0x03C28D40 LDR V7, [X8 + 0x120]
	0x03C28D44 FSUB V12.2S, V1.2S, V25.2S
	0x03C28D48 FDIV S18, S0, S2
	0x03C28D4C FMUL S5, S11, S11
	0x00000000 INVALID
	0x03C28D54 FMUL S0, S18, S23
	0x03C28D58 FMOV S16, 1
	0x03C28D5C FADD S5, S5, S6
	0x03C28D60 MOV S6, V6.S[1]
	0x03C28D64 FMUL S3, S0, S3
	0x03C28D68 FADD S10, S6, S5
	0x03C28D6C FMUL S5, S2, S9
	0x03C28D70 FADD S2, S0, S16
	0x03C28D74 FMUL S3, S0, S3
	0x03C28D78 FADD S2, S2, S3
	0x03C28D7C FMUL S3, S0, S7
	0x03C28D80 FMUL S3, S0, S3
	0x03C28D84 FMUL S0, S0, S3
	0x03C28D88 FADD S0, S2, S0
	0x03C28D8C FMUL S2, S5, S5
	0x03C28D90 FCMP S10, S2
	0x03C28D94 FDIV S26, S16, S0
	0x03C28D98 B.LE 0x3C28DF4
	0x03C28D9C ADRP X8, 0x4CB000
	0x03C28DA0 LDR X8, [X8 + 0x5A8]
	0x03C28DA4 LDR X0, [X8]
	0x03C28DA8 LDR W8, [X0 + 0xE0]
	0x03C28DAC CBNZ W8, 0x3C28DDC
	0x03C28DB0 STP V4, V20, [X31 + 0x70]
	0x03C28DB4 STP V23, V22, [X31 + 0x50]
	0x03C28DB8 STP V25, V1, [X31 + 0x30]
	0x03C28DBC STP V26, V18, [X31 + 0x10]
	0x03C28DC0 STR V5, [X31]
	0x03C28DC4 BL 0x1C16DFC
	0x03C28DC8 LDP V5, V26, [X31]
	0x03C28DCC LDP V18, V25, [X31 + 0x20]
	0x03C28DD0 LDP V1, V23, [X31 + 0x40]
	0x03C28DD4 LDP V22, V4, [X31 + 0x60]
	0x03C28DD8 LDR V20, [X31 + 0x8]
	0x03C28DDC FSQRT S0, S10
	0x03C28DE0 FDIV S2, S11, S0
	0x03C28DE4 UNIMPLEMENTED
	0x00000000 INVALID
	0x03C28DEC FMUL S11, S5, S2
	0x00000000 INVALID
	0x03C28DF4 LDR V2, [X19]
	0x03C28DF8 LDUR V21, [X19 + 0x4]
	0x03C28DFC FMUL S3, S18, S11
	0x00000000 INVALID
	0x03C28E04 FADD S3, S2, S3
	0x03C28E08 FADD V5.2S, V5.2S, V21.2S
	0x03C28E0C FMUL S3, S3, S23
	0x00000000 INVALID
	0x03C28E14 FMUL S16, S18, S3
	0x03C28E18 FADD S3, S11, S3
	0x03C28E1C FMUL S17, S18, V5.S[0]
	0x03C28E20 FMUL S18, S18, V5.S[1]
	0x03C28E24 FADD V5.2S, V12.2S, V5.2S
	0x03C28E28 FSUB S0, S8, S11
	0x03C28E2C FSUB V24.2S, V1.2S, V12.2S
	0x03C28E30 FSUB S2, S2, S16
	0x03C28E34 FSUB S17, S21, S17
	0x03C28E38 FMUL S3, S26, S3
	0x00000000 INVALID
	0x03C28E40 FSUB V7.2S, V25.2S, V1.2S
	0x03C28E44 FMUL S2, S26, S2
	0x03C28E48 FMUL S17, S26, S17
	0x03C28E4C FADD S0, S0, S3
	0x03C28E50 FADD V1.2S, V24.2S, V5.2S
	0x03C28E54 FSUB S6, S22, S8
	0x03C28E58 STP S2, S17, [X19]
	0x03C28E5C FSUB S2, S0, S22
	0x03C28E60 FSUB V3.2S, V1.2S, V25.2S
	0x03C28E64 FMUL S2, S6, S2
	0x00000000 INVALID

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7BD000
	006 Move W8, [X21+4056]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4D0000
	014 Move X0, [X0+624]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+4056], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x4D0000
	021 Move X8, [X8+624]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move V0, [X0+12]
	034 Move V1, [X19+12]
	035 Move X8, X0
	036 Move W0, W31
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move V0, [X8+8]
	039 Move V1, [X19+8]
	040 NotImplemented "Instruction FCMP not yet implemented."
	041 Move V0, [X8+4]
	042 Move V1, [X19+4]
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 Move V0, [X8]
	045 Move V1, [X19]
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Move V0, [X8+28]
	048 Move V1, [X19+28]
	049 Move W0, W31
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Move V0, [X8+24]
	052 Move V1, [X19+24]
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move V0, [X8+20]
	055 Move V1, [X19+20]
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Move V0, [X8+16]
	058 Move V1, [X19+16]
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move V0, [X8+44]
	061 Move V1, [X19+44]
	062 Move W0, W31
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move V0, [X8+40]
	065 Move V1, [X19+40]
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 Move V0, [X8+36]
	068 Move V1, [X19+36]
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 Move V0, [X8+32]
	071 Move V1, [X19+32]
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move S0, [X8+48]
	074 Move S1, [X8+52]
	075 Move S3, [X19+48]
	076 Move S2, [X19+52]
	077 Move S4, [X8+56]
	078 Move S5, [X8+60]
	079 Move S7, [X19+56]
	080 Move S6, [X19+60]
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 NotImplemented "Instruction CSET not yet implemented."
	083 NotImplemented "Instruction FCMP not yet implemented."
	084 NotImplemented "Instruction CSET not yet implemented."
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 And W8, W9, W8
	087 NotImplemented "Instruction CSET not yet implemented."
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 And W8, W9, W8
	090 NotImplemented "Instruction CSET not yet implemented."
	091 And W0, W9, W8

Method: System.Boolean Equals(UnityEngine.Matrix4x4 other)

Disassembly:
	0x03C28E6C MOV S19, V21.S[1]
	0x03C28E70 FADD S2, S2, S3
	0x03C28E74 MOV S3, V3.S[1]
	0x03C28E78 FSUB S16, S19, S18
	0x03C28E7C FADD S2, S2, S3
	0x03C28E80 FMUL S16, S26, S16
	0x03C28E84 FCMP S2, 0x0
	0x03C28E88 STR S16, [X19 + 0x8]
	0x03C28E8C B.LE 0x3C28EC0
	0x03C28E90 MOV V1.16B, V22.16B
	0x03C28E94 MOV V1.S[1], V4.S[0]
	0x03C28E98 UNIMPLEMENTED
	0x03C28E9C FSUB V1.2S, V1.2S, V1.2S
	0x03C28EA0 FSUB S2, S20, S20
	0x00000000 INVALID
	0x03C28EA8 FDIV S2, S2, S23
	0x03C28EAC STR D0, [X19]
	0x03C28EB0 MOV V1.16B, V4.16B
	0x03C28EB4 MOV V0.16B, V22.16B
	0x03C28EB8 STR S2, [X19 + 0x8]
	0x03C28EBC B 0x3C28EC4
	0x03C28EC0 MOV S20, V1.S[1]
	0x03C28EC4 LDP X20, X19, [X31 + 0xC0]
	0x03C28EC8 LDR X30, [X31 + 0xB8]
	0x03C28ECC LDP D9, D8, [X31 + 0xA8]
	0x03C28ED0 LDP D11, D10, [X31 + 0x98]
	0x03C28ED4 LDR V12, [X31 + 0x90]
	0x03C28ED8 MOV V2.16B, V20.16B
	0x03C28EDC ADD X31, X31, 0xD0
	0x03C28EE0 RET
	0x03C28EE4 STP X30, X19, [X31 - 0x10]!
	0x03C28EE8 CMP W1, 0x2
	0x03C28EEC B.EQ 0x3C28F44
	0x03C28EF0 CMP W1, 0x1
	0x03C28EF4 B.EQ 0x3C28F4C
	0x03C28EF8 CBZ W1, 0x3C28F50
	0x03C28EFC ADRP X0, 0x4D5000
	0x03C28F00 LDR X0, [X0 + 0xF78]
	0x03C28F04 BL 0x1C16D08
	0x03C28F08 BL 0x1C16F10
	0x03C28F0C MOV X19, X0
	0x03C28F10 ADRP X0, 0x526000
	0x03C28F14 LDR X0, [X0 + 0x6F8]
	0x03C28F18 BL 0x1C16D08
	0x03C28F1C MOV X1, X0
	0x03C28F20 MOV X0, X19
	0x03C28F24 MOV X2, X31
	0x03C28F28 BL 0x3379B6C
	0x03C28F2C ADRP X0, 0x526000
	0x03C28F30 LDR X0, [X0 + 0x700]
	0x03C28F34 BL 0x1C16D08
	0x03C28F38 MOV X1, X0
	0x03C28F3C MOV X0, X19
	0x03C28F40 BL 0x1C16DEC
	0x03C28F44 ADD X0, X0, 0x8
	0x03C28F48 B 0x3C28F50
	0x03C28F4C ADD X0, X0, 0x4
	0x03C28F50 LDR V0, [X0]
	0x03C28F54 LDP X30, X19, [X31], #0x10
	0x03C28F58 RET
	0x03C28F5C STP X30, X19, [X31 - 0x10]!
	0x03C28F60 CMP W1, 0x2
	0x03C28F64 B.EQ 0x3C28FBC
	0x03C28F68 CMP W1, 0x1
	0x03C28F6C B.EQ 0x3C28FC4
	0x03C28F70 CBZ W1, 0x3C28FC8

ISIL:
	001 Move V0, [X0+12]
	002 Move V1, [X1+12]
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 Move V0, [X0+8]
	005 Move V1, [X1+8]
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move V0, [X0+4]
	008 Move V1, [X1+4]
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move V0, [X0]
	011 Move V1, [X1]
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 Move V0, [X0+28]
	014 Move V1, [X1+28]
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Move V0, [X0+24]
	017 Move V1, [X1+24]
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move V0, [X0+20]
	020 Move V1, [X1+20]
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 Move V0, [X0+16]
	023 Move V1, [X1+16]
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move V0, [X0+44]
	026 Move V1, [X1+44]
	027 NotImplemented "Instruction FCMP not yet implemented."
	028 Move V0, [X0+40]
	029 Move V1, [X1+40]
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move V0, [X0+36]
	032 Move V1, [X1+36]
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move V0, [X0+32]
	035 Move V1, [X1+32]
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Move S1, [X0+48]
	038 Move S0, [X0+52]
	039 Move S3, [X1+48]
	040 Move S2, [X1+52]
	041 Move S5, [X0+56]
	042 Move S4, [X0+60]
	043 Move S7, [X1+56]
	044 Move S6, [X1+60]
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 And W8, W9, W8
	051 NotImplemented "Instruction CSET not yet implemented."
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 And W8, W9, W8
	054 NotImplemented "Instruction CSET not yet implemented."
	055 And W0, W9, W8
	056 Return X0
	057 Move W0, W31
	058 Return X0

Method: UnityEngine.Matrix4x4 op_Multiply(UnityEngine.Matrix4x4 lhs, UnityEngine.Matrix4x4 rhs)

Disassembly:
	0x03C28F74 ADRP X0, 0x4D5000
	0x03C28F78 LDR X0, [X0 + 0xF78]
	0x03C28F7C BL 0x1C16D08
	0x03C28F80 BL 0x1C16F10
	0x03C28F84 MOV X19, X0
	0x03C28F88 ADRP X0, 0x526000
	0x03C28F8C LDR X0, [X0 + 0x6F8]
	0x03C28F90 BL 0x1C16D08
	0x03C28F94 MOV X1, X0
	0x03C28F98 MOV X0, X19
	0x03C28F9C MOV X2, X31
	0x03C28FA0 BL 0x3379B6C
	0x03C28FA4 ADRP X0, 0x537000
	0x03C28FA8 LDR X0, [X0 + 0x2A0]
	0x03C28FAC BL 0x1C16D08
	0x03C28FB0 MOV X1, X0
	0x03C28FB4 MOV X0, X19
	0x03C28FB8 BL 0x1C16DEC
	0x03C28FBC ADD X0, X0, 0x8
	0x03C28FC0 B 0x3C28FC8
	0x03C28FC4 ADD X0, X0, 0x4
	0x03C28FC8 STR S0, [X0]
	0x03C28FCC LDP X30, X19, [X31], #0x10
	0x03C28FD0 RET
	0x03C28FD4 STP S0, S1, [X0]
	0x03C28FD8 STR S2, [X0 + 0x8]
	0x03C28FDC RET
	0x03C28FE0 STP S0, S1, [X0]
	0x03C28FE4 STR W31, [X0 + 0x8]
	0x03C28FE8 RET
	0x03C28FEC FMUL S0, S0, S3
	0x03C28FF0 FMUL S1, S1, S4
	0x03C28FF4 FMUL S2, S2, S5
	0x03C28FF8 RET
	0x03C28FFC LDR V3, [X0]
	0x03C29000 LDR V4, [X0 + 0x8]
	0x03C29004 MOV V0.S[1], V1.S[0]
	0x00000000 INVALID
	0x03C2900C FMUL S1, S2, S4
	0x03C29010 STR D0, [X0]
	0x03C29014 STR S1, [X0 + 0x8]
	0x03C29018 RET
	0x03C2901C FMUL S6, S1, S5
	0x03C29020 FMUL S7, S2, S4
	0x03C29024 FMUL S2, S2, S3
	0x03C29028 FMUL S5, S0, S5
	0x03C2902C FMUL S4, S0, S4
	0x03C29030 FMUL S3, S1, S3
	0x03C29034 FSUB S0, S6, S7
	0x03C29038 FSUB S1, S2, S5
	0x03C2903C FSUB S2, S4, S3
	0x03C29040 RET
	0x03C29044 STP X30, X21, [X31 - 0x20]!
	0x03C29048 STP X20, X19, [X31 + 0x10]
	0x03C2904C MOV X1, X31
	0x03C29050 MOV X19, X0
	0x03C29054 BL 0x338FE0C
	0x03C29058 MOV W20, W0
	0x03C2905C ADD X0, X19, 0x4
	0x03C29060 MOV X1, X31
	0x03C29064 BL 0x338FE0C
	0x03C29068 MOV W21, W0

ISIL:
	001 Move X9, X1
	002 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	003 Move V19, [X0]
	004 Move V0, [X0+16]
	005 Move S23, [X1+16]
	006 Move S3, [X1+20]
	007 Move S28, [X1+32]
	008 Move S18, [X1+36]
	009 Move S29, [X1+48]
	010 Move S21, [X1+52]
	011 Move S2, [X1+8]
	012 Move S1, [X1+12]
	013 Move V6, [X0+32]
	014 Move V4, [X0+48]
	015 Move S20, [X1+24]
	016 Move S7, [X1+28]
	017 Move S26, [X1+40]
	018 Move S24, [X1+44]
	019 Move S27, [X1+56]
	020 Move S25, [X1+60]
	021 NotImplemented "Instruction INVALID not yet implemented."
	022 NotImplemented "Instruction INVALID not yet implemented."
	023 NotImplemented "Instruction INVALID not yet implemented."
	024 NotImplemented "Instruction INVALID not yet implemented."
	025 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	026 NotImplemented "Instruction INVALID not yet implemented."
	027 NotImplemented "Instruction INVALID not yet implemented."
	028 NotImplemented "Instruction INVALID not yet implemented."
	029 NotImplemented "Instruction INVALID not yet implemented."
	030 NotImplemented "Instruction INVALID not yet implemented."
	031 NotImplemented "Instruction INVALID not yet implemented."
	032 NotImplemented "Instruction INVALID not yet implemented."
	033 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	034 Move V16, [X9]
	035 Add V30, V30, V31
	036 NotImplemented "Instruction INVALID not yet implemented."
	037 NotImplemented "Instruction INVALID not yet implemented."
	038 NotImplemented "Instruction INVALID not yet implemented."
	039 NotImplemented "Instruction INVALID not yet implemented."
	040 NotImplemented "Instruction INVALID not yet implemented."
	041 NotImplemented "Instruction INVALID not yet implemented."
	042 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	043 NotImplemented "Instruction INVALID not yet implemented."
	044 NotImplemented "Instruction INVALID not yet implemented."
	045 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	046 NotImplemented "Instruction INVALID not yet implemented."
	047 Add V3, V19, V3
	048 NotImplemented "Instruction INVALID not yet implemented."
	049 NotImplemented "Instruction INVALID not yet implemented."
	050 Add V3, V3, V6
	051 NotImplemented "Instruction INVALID not yet implemented."
	052 NotImplemented "Instruction INVALID not yet implemented."
	053 Add V18, V28, V18
	054 Add V21, V29, V21
	055 Add V3, V3, V4
	056 Add V0, V17, V0
	057 Add V4, V5, V7
	058 Add V23, V30, V23
	059 Add V18, V18, V26
	060 Add V19, V21, V27
	061 Add V0, V0, V22
	062 Add V2, V4, V2
	063 Add V20, V23, V20
	064 Add V6, V18, V24
	065 Add V18, V19, V25
	066 Add V0, V0, V31
	067 Add V1, V2, V1
	068 Move [X8+16], D20
	069 Move [X8+24], D3
	070 Move [X8], D0
	071 Move [X8+8], D1
	072 Move [X8+32], V6
	073 Move [X8+40], V18
	074 Return X0

Method: UnityEngine.Vector4 op_Multiply(UnityEngine.Matrix4x4 lhs, UnityEngine.Vector4 vector)

Disassembly:
	0x03C2906C ADD X0, X19, 0x8
	0x03C29070 MOV X1, X31
	0x03C29074 BL 0x338FE0C
	0x03C29078 EOR W8, W20, W21, 0x2
	0x03C2907C LDP X20, X19, [X31 + 0x10]
	0x03C29080 EOR W0, W8, W0, 0x2
	0x03C29084 LDP X30, X21, [X31], #0x20
	0x03C29088 RET
	0x03C2908C STP X30, X21, [X31 - 0x20]!
	0x03C29090 STP X20, X19, [X31 + 0x10]
	0x03C29094 ADRP X21, 0x7BC000
	0x03C29098 LDRB W8, [X21 + 0x41]
	0x03C2909C MOV X20, X1

ISIL:
	001 Move V4, [X0]
	002 Move V5, [X0+16]
	003 Move V6, [X0+32]
	004 Move V7, [X0+48]
	005 NotImplemented "Instruction INVALID not yet implemented."
	006 NotImplemented "Instruction INVALID not yet implemented."
	007 NotImplemented "Instruction INVALID not yet implemented."
	008 Add V0, V0, V1
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 Add V0, V0, V2
	011 Add V0, V0, V3
	012 Move S1, V0.S[1]
	013 Move S2, V0.S[2]
	014 Move S3, V0.S[3]
	015 Return X0

Method: UnityEngine.Vector4 GetColumn(System.Int32 index)

Disassembly:
	0x03C28C24 STP D13, D12, [X31 + 0x20]
	0x03C28C28 STP D11, D10, [X31 + 0x30]
	0x03C28C2C STP D9, D8, [X31 + 0x40]
	0x03C28C30 STP X30, X19, [X31 + 0x50]
	0x03C28C34 MOV X19, X0
	0x03C28C38 MOV X0, X31
	0x03C28C3C MOV V8.16B, V6.16B
	0x03C28C40 MOV V9.16B, V5.16B
	0x03C28C44 MOV V10.16B, V4.16B
	0x03C28C48 MOV V11.16B, V3.16B
	0x03C28C4C MOV V12.16B, V2.16B
	0x03C28C50 MOV V13.16B, V1.16B
	0x03C28C54 MOV V14.16B, V0.16B
	0x03C28C58 BL 0x3C3C714
	0x03C28C5C MOVZ W8, 0x7F800000
	0x03C28C60 STR S0, [X31]
	0x03C28C64 FMOV S7, W8
	0x03C28C68 MOV V0.16B, V14.16B
	0x03C28C6C MOV V1.16B, V13.16B
	0x03C28C70 MOV V2.16B, V12.16B
	0x03C28C74 MOV V3.16B, V11.16B
	0x03C28C78 MOV V4.16B, V10.16B
	0x03C28C7C MOV V5.16B, V9.16B
	0x03C28C80 MOV X0, X19
	0x03C28C84 MOV V6.16B, V8.16B
	0x03C28C88 BL 0x3C28CA8
	0x03C28C8C LDP X30, X19, [X31 + 0x50]
	0x03C28C90 LDP D9, D8, [X31 + 0x40]
	0x03C28C94 LDP D11, D10, [X31 + 0x30]
	0x03C28C98 LDP D13, D12, [X31 + 0x20]
	0x03C28C9C LDR V14, [X31 + 0x10]
	0x03C28CA0 ADD X31, X31, 0x60
	0x03C28CA4 RET
	0x03C28CA8 SUB X31, X31, 0xD0
	0x03C28CAC STR D12, [X31 + 0x90]
	0x03C28CB0 STP D11, D10, [X31 + 0x98]
	0x03C28CB4 STP D9, D8, [X31 + 0xA8]
	0x03C28CB8 STR X30, [X31 + 0xB8]
	0x03C28CBC STP X20, X19, [X31 + 0xC0]
	0x03C28CC0 ADRP X20, 0x7BD000
	0x03C28CC4 LDRB W8, [X20 + 0x40]
	0x03C28CC8 LDR V23, [X31 + 0xD0]
	0x03C28CCC MOV V9.16B, V7.16B
	0x03C28CD0 MOV V10.16B, V6.16B
	0x03C28CD4 MOV X19, X0
	0x03C28CD8 MOV V20.16B, V5.16B
	0x03C28CDC MOV V22.16B, V3.16B
	0x03C28CE0 MOV V8.16B, V0.16B
	0x03C28CE4 TBNZ X8, 0x0, 0x3C28D14
	0x03C28CE8 ADRP X0, 0x4CB000
	0x03C28CEC LDR X0, [X0 + 0x5A8]
	0x03C28CF0 STP V4, V20, [X31 + 0x70]
	0x03C28CF4 STP V23, V22, [X31 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -50921472
	005 Move W8, W1
	006 Add X9, X9, 3569
	007 NotImplemented "Instruction ADR not yet implemented."
	008 Move W11, [X9]
	009 Add X10, X10, X11
	010 CallNoReturn X10
	011 Add X8, X0, 4
	012 Add X9, X0, 8
	013 Add X10, X0, 12
	014 Add X11, X0, 32
	015 Add X8, X0, 36
	016 Add X9, X0, 40
	017 Add X10, X0, 44
	018 Add X11, X0, 16
	019 Add X8, X0, 20
	020 Add X9, X0, 24
	021 Add X10, X0, 28
	022 Add X11, X0, 48
	023 Add X8, X0, 52
	024 Add X9, X0, 56
	025 Add X10, X0, 60
	026 Move X0, X11
	027 Move V3, [X10]
	028 Move V2, [X9]
	029 Move V1, [X8]
	030 Move V0, [X0]
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Return X0
	034 Move X0, 0x4D6000
	035 Move X0, [X0+3960]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Move X0, 0x538000
	040 Move X0, [X0+632]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Move X2, X31
	045 Call IndexOutOfRangeException..ctor, X0, X1
	046 Move X0, 0x538000
	047 Move X0, [X0+640]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: UnityEngine.Vector4 GetRow(System.Int32 index)

Disassembly:
	0x03C290A0 MOV X19, X0
	0x03C290A4 TBNZ X8, 0x0, 0x3C290BC
	0x03C290A8 ADRP X0, 0x4CA000
	0x03C290AC LDR X0, [X0 + 0x5A0]
	0x03C290B0 BL 0x1C16CF4
	0x03C290B4 MOVZ W8, 0x1
	0x03C290B8 STRB W8, [X21 + 0x41]
	0x03C290BC CBZ X20, 0x3C290D8
	0x03C290C0 ADRP X8, 0x4CA000
	0x03C290C4 LDR X8, [X8 + 0x5A0]
	0x03C290C8 LDR X9, [X20]
	0x03C290CC LDR X8, [X8]
	0x03C290D0 CMP X9, X8
	0x03C290D4 B.EQ 0x3C290E8
	0x03C290D8 MOV W0, W31
	0x03C290DC LDP X20, X19, [X31 + 0x10]
	0x03C290E0 LDP X30, X21, [X31], #0x20
	0x03C290E4 RET
	0x03C290E8 MOV X0, X20
	0x03C290EC BL 0x1C16E08
	0x03C290F0 LDR V0, [X0]
	0x03C290F4 LDR V1, [X19]
	0x03C290F8 FCMP S1, S0
	0x03C290FC B.NE 0x3C290D8
	0x03C29100 LDR V0, [X0 + 0x4]
	0x03C29104 LDR V1, [X19 + 0x4]
	0x03C29108 FCMP S1, S0
	0x03C2910C B.NE 0x3C290D8
	0x03C29110 LDR V0, [X0 + 0x8]
	0x03C29114 LDR V1, [X19 + 0x8]
	0x03C29118 FCMP S1, S0
	0x03C2911C CSET W0, EQ
	0x03C29120 B 0x3C290DC
	0x03C29124 LDR V3, [X0]
	0x03C29128 FCMP S3, S0
	0x03C2912C B.NE 0x3C2914C
	0x03C29130 LDR V0, [X0 + 0x4]
	0x03C29134 FCMP S0, S1
	0x03C29138 B.NE 0x3C2914C
	0x03C2913C LDR V0, [X0 + 0x8]
	0x03C29140 FCMP S0, S2
	0x03C29144 CSET W0, EQ
	0x03C29148 RET
	0x03C2914C MOV W0, W31
	0x03C29150 RET
	0x03C29154 FMUL S6, S0, S3
	0x03C29158 FMUL S7, S1, S4
	0x03C2915C FADD S6, S6, S7
	0x03C29160 FMUL S7, S2, S5
	0x03C29164 FADD S6, S7, S6
	0x03C29168 FMOV S7, -2
	0x03C2916C FMUL S6, S6, S7
	0x03C29170 FMUL S3, S3, S6

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -50925568
	005 Move W8, W1
	006 Add X9, X9, 3569
	007 NotImplemented "Instruction ADR not yet implemented."
	008 Move W11, [X9]
	009 Add X10, X10, X11
	010 CallNoReturn X10
	011 Add X8, X0, 16
	012 Add X9, X0, 32
	013 Add X10, X0, 48
	014 Add X11, X0, 8
	015 Add X8, X0, 24
	016 Add X9, X0, 40
	017 Add X10, X0, 56
	018 Add X11, X0, 4
	019 Add X8, X0, 20
	020 Add X9, X0, 36
	021 Add X10, X0, 52
	022 Add X11, X0, 12
	023 Add X8, X0, 28
	024 Add X9, X0, 44
	025 Add X10, X0, 60
	026 Move X0, X11
	027 Move V3, [X10]
	028 Move V2, [X9]
	029 Move V1, [X8]
	030 Move V0, [X0]
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Return X0
	034 Move X0, 0x4D5000
	035 Move X0, [X0+3960]
	036 Call 0x1C17D08
	037 Call 0x1C17F10
	038 Move X19, X0
	039 Move X0, 0x537000
	040 Move X0, [X0+648]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Move X2, X31
	045 Call IndexOutOfRangeException..ctor, X0, X1
	046 Move X0, 0x537000
	047 Move X0, [X0+656]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: UnityEngine.Vector3 GetPosition()

Disassembly:
	0x03C29174 FMUL S4, S4, S6
	0x03C29178 FMUL S5, S5, S6
	0x03C2917C FADD S0, S0, S3

ISIL:
	001 Move S0, [X0+48]
	002 Move S1, [X0+52]
	003 Move V2, [X0+56]
	004 Return X0

Method: System.Void SetColumn(System.Int32 index, UnityEngine.Vector4 column)

Disassembly:
	0x03C29180 FADD S1, S1, S4
	0x03C29184 FADD S2, S2, S5
	0x03C29188 RET
	0x03C2918C STR D10, [X31 - 0x30]!
	0x03C29190 STP D9, D8, [X31 + 0x10]
	0x03C29194 STP X30, X19, [X31 + 0x20]
	0x03C29198 ADRP X19, 0x7AF000
	0x03C2919C LDRB W8, [X19 + 0x785]
	0x03C291A0 MOV V8.16B, V2.16B
	0x03C291A4 MOV V9.16B, V1.16B
	0x03C291A8 MOV V10.16B, V0.16B
	0x03C291AC CBNZ W8, 0x3C291C4
	0x03C291B0 ADRP X0, 0x4CA000
	0x03C291B4 LDR X0, [X0 + 0x5A8]
	0x03C291B8 BL 0x1C16CF4
	0x03C291BC MOVZ W8, 0x1
	0x03C291C0 STRB W8, [X19 + 0x785]
	0x03C291C4 ADRP X8, 0x4CA000
	0x03C291C8 LDR X8, [X8 + 0x5A8]
	0x03C291CC LDR X0, [X8]
	0x03C291D0 LDR W8, [X0 + 0xE0]
	0x03C291D4 CBNZ W8, 0x3C291DC
	0x03C291D8 BL 0x1C16DFC
	0x03C291DC FMUL S0, S10, S10
	0x03C291E0 FMUL S1, S9, S9
	0x03C291E4 ADRP X8, 0xFFFFFFFFFCEC1000
	0x03C291E8 FADD S0, S0, S1
	0x03C291EC LDR V1, [X8 + 0x17C]
	0x03C291F0 FMUL S2, S8, S8
	0x03C291F4 FADD S0, S2, S0

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W19, W1
	008 Move W1, W1
	009 ShiftRight W1, 30
	010 And W1, W1, 0x1FFFFFFF
	011 Move V8, V3
	012 Move V9, V2
	013 Move V10, V1
	014 Move X20, X0
	015 Call Matrix4x4.set_Item, X0, X1, V0
	016 Move W1, 1
	017 NotImplemented "Instruction BFM not yet implemented."
	018 Move X0, X20
	019 Move V0, V10
	020 Call Matrix4x4.set_Item, X0, X1, V0
	021 Move W1, 2
	022 NotImplemented "Instruction BFM not yet implemented."
	023 Move X0, X20
	024 Move V0, V9
	025 Call Matrix4x4.set_Item, X0, X1, V0
	026 Move W1, 3
	027 NotImplemented "Instruction BFM not yet implemented."
	028 Move X0, X20
	029 Move V0, V8
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+24]
	033 Move D9, [X31+8]
	034 Move D8, [X31+16]
	035 Move V10, [X31+48]
	036 Call Matrix4x4.set_Item, X0, X1, V0
	037 Return 

Method: UnityEngine.Vector3 MultiplyPoint(UnityEngine.Vector3 point)

Disassembly:
	0x03C291F8 FSQRT S2, S0
	0x03C291FC FCMP S2, S1
	0x03C29200 B.LE 0x3C29214
	0x03C29204 FDIV S0, S10, S2
	0x03C29208 FDIV S1, S9, S2
	0x03C2920C FDIV S2, S8, S2
	0x03C29210 B 0x3C2924C
	0x03C29214 ADRP X19, 0x7AF000
	0x03C29218 LDRB W8, [X19 + 0x783]
	0x03C2921C CBNZ W8, 0x3C29234
	0x03C29220 ADRP X0, 0x4CA000
	0x03C29224 LDR X0, [X0 + 0x5A0]
	0x03C29228 BL 0x1C16CF4
	0x03C2922C MOVZ W8, 0x1
	0x03C29230 STRB W8, [X19 + 0x783]
	0x03C29234 ADRP X8, 0x4CA000
	0x03C29238 LDR X8, [X8 + 0x5A0]
	0x03C2923C LDR X8, [X8]
	0x03C29240 LDR X8, [X8 + 0xB8]
	0x03C29244 LDP S0, S1, [X8]
	0x03C29248 LDR V2, [X8 + 0x8]
	0x03C2924C LDP X30, X19, [X31 + 0x20]
	0x03C29250 LDP D9, D8, [X31 + 0x10]
	0x03C29254 LDR V10, [X31], #0x30
	0x03C29258 RET
	0x03C2925C STR D10, [X31 - 0x30]!
	0x03C29260 STP D9, D8, [X31 + 0x8]
	0x03C29264 STR X30, [X31 + 0x18]
	0x03C29268 STP X20, X19, [X31 + 0x20]
	0x03C2926C ADRP X20, 0x7AF000
	0x03C29270 LDP S9, S10, [X0]
	0x03C29274 LDRB W8, [X20 + 0x785]

ISIL:
	001 Move V3, [X0]
	002 Move S6, [X0+8]
	003 Move S7, [X0+12]
	004 Move V4, [X0+16]
	005 Move S16, [X0+24]
	006 Move S17, [X0+28]
	007 Move V5, [X0+32]
	008 NotImplemented "Instruction INVALID not yet implemented."
	009 Multiply S6, S0, S6
	010 Multiply S0, S0, S7
	011 Move S7, [X0+40]
	012 Move S18, [X0+44]
	013 NotImplemented "Instruction INVALID not yet implemented."
	014 Multiply S16, S1, S16
	015 Multiply S1, S1, S17
	016 Add S6, S6, S16
	017 Add S0, S0, S1
	018 Move S1, [X0+56]
	019 Move S16, [X0+60]
	020 Add V3, V3, V4
	021 Move V4, [X0+48]
	022 NotImplemented "Instruction INVALID not yet implemented."
	023 Multiply S7, S2, S7
	024 Multiply S2, S2, S18
	025 Add S0, S0, S2
	026 Add V3, V3, V5
	027 Move S5, 1
	028 Add S0, S16, S0
	029 Add S6, S6, S7
	030 Add V2, V4, V3
	031 NotImplemented "Instruction FDIV not yet implemented."
	032 Add S1, S1, S6
	033 NotImplemented "Instruction INVALID not yet implemented."
	034 Multiply S2, S1, S3
	035 Move S1, V0.S[1]
	036 Return X0

Method: UnityEngine.Vector3 MultiplyPoint3x4(UnityEngine.Vector3 point)

Disassembly:
	0x03C29278 LDR V8, [X0 + 0x8]
	0x03C2927C MOV X19, X0
	0x03C29280 CBNZ W8, 0x3C29298
	0x03C29284 ADRP X0, 0x4CA000
	0x03C29288 LDR X0, [X0 + 0x5A8]
	0x03C2928C BL 0x1C16CF4
	0x03C29290 MOVZ W8, 0x1
	0x03C29294 STRB W8, [X20 + 0x785]
	0x03C29298 ADRP X8, 0x4CA000
	0x03C2929C LDR X8, [X8 + 0x5A8]
	0x03C292A0 LDR X0, [X8]
	0x03C292A4 LDR W8, [X0 + 0xE0]
	0x03C292A8 CBNZ W8, 0x3C292B0
	0x03C292AC BL 0x1C16DFC
	0x03C292B0 ADRP X8, 0xFFFFFFFFFCEC1000
	0x03C292B4 FMUL S0, S9, S9
	0x03C292B8 FMUL S1, S10, S10
	0x03C292BC LDR V2, [X8 + 0x17C]
	0x03C292C0 FADD S0, S0, S1
	0x03C292C4 FMUL S1, S8, S8
	0x03C292C8 FADD S0, S1, S0
	0x03C292CC FSQRT S1, S0

ISIL:
	001 Move V3, [X0]
	002 Move V5, [X0+8]
	003 Move V4, [X0+16]
	004 Move V7, [X0+24]
	005 Move V6, [X0+32]
	006 NotImplemented "Instruction INVALID not yet implemented."
	007 Multiply S0, S0, S5
	008 Move V5, [X0+40]
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 Multiply S1, S1, S7
	011 Move V7, [X0+48]
	012 NotImplemented "Instruction INVALID not yet implemented."
	013 Multiply S2, S2, S5
	014 Move V5, [X0+56]
	015 Add V3, V3, V4
	016 Add S0, S0, S1
	017 Add V1, V3, V6
	018 Add S2, S0, S2
	019 Add V0, V7, V1
	020 Add S2, S5, S2
	021 Move S1, V0.S[1]
	022 Return X0

Method: UnityEngine.Vector3 MultiplyVector(UnityEngine.Vector3 vector)

Disassembly:
	0x03C292D0 FCMP S1, S2
	0x03C292D4 B.LE 0x3C292F0
	0x03C292D8 LDR V0, [X19]
	0x03C292DC LDR V2, [X19 + 0x8]
	0x03C292E0 UNIMPLEMENTED
	0x00000000 INVALID
	0x03C292E8 FDIV S1, S2, S1
	0x03C292EC B 0x3C29328
	0x03C292F0 ADRP X20, 0x7AF000
	0x03C292F4 LDRB W8, [X20 + 0x783]
	0x03C292F8 CBNZ W8, 0x3C29310
	0x03C292FC ADRP X0, 0x4CA000
	0x03C29300 LDR X0, [X0 + 0x5A0]
	0x03C29304 BL 0x1C16CF4
	0x03C29308 MOVZ W8, 0x1
	0x03C2930C STRB W8, [X20 + 0x783]
	0x03C29310 ADRP X8, 0x4CA000
	0x03C29314 LDR X8, [X8 + 0x5A0]

ISIL:
	001 Move V3, [X0]
	002 Move V5, [X0+8]
	003 Move V4, [X0+16]
	004 Move V6, [X0+32]
	005 Move V7, [X0+24]
	006 NotImplemented "Instruction INVALID not yet implemented."
	007 Multiply S0, S0, S5
	008 Move V5, [X0+40]
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 Multiply S1, S1, S7
	011 NotImplemented "Instruction INVALID not yet implemented."
	012 Add V3, V3, V4
	013 Multiply S2, S2, S5
	014 Add S1, S0, S1
	015 Add V0, V3, V6
	016 Add S2, S1, S2
	017 Move S1, V0.S[1]
	018 Return X0

Method: UnityEngine.Matrix4x4 Scale(UnityEngine.Vector3 vector)

Disassembly:
	0x03C29318 LDR X8, [X8]
	0x03C2931C LDR X8, [X8 + 0xB8]
	0x03C29320 LDR V0, [X8]
	0x03C29324 LDR V1, [X8 + 0x8]
	0x03C29328 STR D0, [X19]
	0x03C2932C STR S1, [X19 + 0x8]
	0x03C29330 LDP X20, X19, [X31 + 0x20]
	0x03C29334 LDR X30, [X31 + 0x18]
	0x03C29338 LDP D9, D8, [X31 + 0x8]
	0x03C2933C LDR V10, [X31], #0x30
	0x03C29340 RET

ISIL:
	001 Move W9, 0x3F800000
	002 Move [X8], S0
	003 Move [X8+12], X31
	004 Move [X8+4], X31
	005 Move [X8+20], S1
	006 Move [X8+24], X31
	007 Move [X8+32], X31
	008 Move [X8+40], S2
	009 Move [X8+52], X31
	010 Move [X8+44], X31
	011 Move [X8+60], W9
	012 Return X0

Method: UnityEngine.Matrix4x4 Translate(UnityEngine.Vector3 vector)

Disassembly:
	0x03C29344 STR D10, [X31 - 0x30]!
	0x03C29348 STP D9, D8, [X31 + 0x10]
	0x03C2934C STP X30, X19, [X31 + 0x20]
	0x03C29350 ADRP X19, 0x7AF000
	0x03C29354 LDP S8, S9, [X0]
	0x03C29358 LDRB W8, [X19 + 0x785]
	0x03C2935C LDR V10, [X0 + 0x8]
	0x03C29360 CBNZ W8, 0x3C29378
	0x03C29364 ADRP X0, 0x4CA000
	0x03C29368 LDR X0, [X0 + 0x5A8]
	0x03C2936C BL 0x1C16CF4
	0x03C29370 MOVZ W8, 0x1
	0x03C29374 STRB W8, [X19 + 0x785]

ISIL:
	001 Move X10, -51621888
	002 Move [X8+48], S0
	003 Move [X8+56], S1
	004 Move V0, [X10+1608]
	005 Move W9, 0x3F800000
	006 Move [X8+12], X31
	007 Move [X8+4], X31
	008 Move [X8+24], X31
	009 Move [X8+32], X31
	010 Move [X8+56], S2
	011 Move [X8], W9
	012 Move [X8+20], W9
	013 Move [X8+40], D0
	014 Move [X8+60], W9
	015 Return X0

Method: UnityEngine.Matrix4x4 Rotate(UnityEngine.Quaternion q)

Disassembly:
	0x03C29378 ADRP X8, 0x4CA000
	0x03C2937C LDR X8, [X8 + 0x5A8]
	0x03C29380 LDR X0, [X8]
	0x03C29384 LDR W8, [X0 + 0xE0]
	0x03C29388 CBNZ W8, 0x3C29390
	0x03C2938C BL 0x1C16DFC
	0x03C29390 FMUL S0, S8, S8
	0x03C29394 FMUL S1, S9, S9
	0x03C29398 ADRP X8, 0xFFFFFFFFFCEC1000
	0x03C2939C FADD S0, S0, S1
	0x03C293A0 LDR V1, [X8 + 0x17C]
	0x03C293A4 FMUL S2, S10, S10
	0x03C293A8 FADD S0, S2, S0
	0x03C293AC FSQRT S2, S0
	0x03C293B0 FCMP S2, S1
	0x03C293B4 B.LE 0x3C293C8
	0x03C293B8 FDIV S0, S8, S2
	0x03C293BC FDIV S1, S9, S2
	0x03C293C0 FDIV S2, S10, S2
	0x03C293C4 B 0x3C29400
	0x03C293C8 ADRP X19, 0x7AF000
	0x03C293CC LDRB W8, [X19 + 0x783]
	0x03C293D0 CBNZ W8, 0x3C293E8
	0x03C293D4 ADRP X0, 0x4CA000
	0x03C293D8 LDR X0, [X0 + 0x5A0]
	0x03C293DC BL 0x1C16CF4
	0x03C293E0 MOVZ W8, 0x1
	0x03C293E4 STRB W8, [X19 + 0x783]
	0x03C293E8 ADRP X8, 0x4CA000
	0x03C293EC LDR X8, [X8 + 0x5A0]
	0x03C293F0 LDR X8, [X8]
	0x03C293F4 LDR X8, [X8 + 0xB8]
	0x03C293F8 LDP S0, S1, [X8]
	0x03C293FC LDR V2, [X8 + 0x8]
	0x03C29400 LDP X30, X19, [X31 + 0x20]
	0x03C29404 LDP D9, D8, [X31 + 0x10]
	0x03C29408 LDR V10, [X31], #0x30
	0x03C2940C RET

ISIL:
	001 Add S4, S0, S0
	002 Add S5, S1, S1
	003 Add S6, S2, S2
	004 Multiply S16, S0, S4
	005 Multiply S17, S1, S5
	006 Multiply S2, S2, S6
	007 Multiply S18, S0, S5
	008 Multiply S1, S1, S6
	009 Multiply S4, S3, S4
	010 Multiply S5, S3, S5
	011 Multiply S3, S3, S6
	012 Move S7, 1
	013 Multiply S0, S0, S6
	014 Add S6, S17, S2
	015 Add S19, S18, S3
	016 Subtract S3, S18, S3
	017 Add S2, S16, S2
	018 Add S18, S1, S4
	019 Subtract S1, S1, S4
	020 Add S4, S16, S17
	021 Move W9, 0x3F800000
	022 Subtract S20, S0, S5
	023 Add S0, S0, S5
	024 Subtract S5, S7, S6
	025 Subtract S2, S7, S2
	026 Subtract S4, S7, S4
	027 Move [X8+12], W31
	028 Move [X8+28], W31
	029 Move [X8+52], X31
	030 Move [X8+44], X31
	031 Move [X8+4], S19
	032 Move [X8+12], S20
	033 Move [X8+20], S2
	034 Move [X8+28], S18
	035 Move [X8+32], S0
	036 Move [X8+40], S1
	037 Move [X8], S5
	038 Move [X8+16], S3
	039 Move [X8+40], S4
	040 Move [X8+60], W9
	041 Return X0

Method: UnityEngine.Matrix4x4 get_zero()

Disassembly:
	0x03C29410 FMUL S0, S0, S3
	0x03C29414 FMUL S1, S1, S4
	0x03C29418 FADD S0, S0, S1
	0x03C2941C FMUL S1, S2, S5
	0x03C29420 FADD S0, S1, S0
	0x03C29424 RET
	0x03C29428 STP D13, D12, [X31 - 0x50]!
	0x03C2942C STP D11, D10, [X31 + 0x10]
	0x03C29430 STP D9, D8, [X31 + 0x20]
	0x03C29434 STR X30, [X31 + 0x30]
	0x03C29438 STP X20, X19, [X31 + 0x40]
	0x03C2943C ADRP X20, 0x7BC000
	0x03C29440 ADRP X19, 0x4D1000
	0x03C29444 LDRB W8, [X20 + 0x42]
	0x03C29448 LDR X19, [X19 + 0x4B8]
	0x03C2944C MOV V8.16B, V5.16B
	0x03C29450 MOV V9.16B, V4.16B
	0x03C29454 MOV V10.16B, V3.16B
	0x03C29458 MOV V11.16B, V2.16B
	0x03C2945C MOV V12.16B, V1.16B
	0x03C29460 MOV V13.16B, V0.16B
	0x03C29464 TBNZ X8, 0x0, 0x3C2947C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7BC000
	006 Move X21, 0x4CF000
	007 Move X19, X8
	008 Move W8, [X20+4057]
	009 Move X21, [X21+624]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4CF000
	015 Move X0, [X0+624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4057], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move V1, [X8+32]
	022 Move V0, [X8+48]
	023 Move V3, [X8]
	024 Move V2, [X8+16]
	025 Move [X19+32], V1
	026 Move [X19+40], V0
	027 Move [X19], V3
	028 Move [X19+8], V2
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: UnityEngine.Matrix4x4 get_identity()

Disassembly:
	0x03C29468 ADRP X0, 0x4D1000
	0x03C2946C LDR X0, [X0 + 0x4B8]
	0x03C29470 BL 0x1C16CF4
	0x03C29474 MOVZ W8, 0x1
	0x03C29478 STRB W8, [X20 + 0x42]
	0x03C2947C LDR X8, [X19]
	0x03C29480 FMUL S0, S10, S10
	0x03C29484 FMUL S1, S9, S9
	0x03C29488 FADD S0, S0, S1
	0x03C2948C LDR X8, [X8 + 0xB8]
	0x03C29490 FMUL S1, S8, S8
	0x03C29494 FADD S2, S1, S0
	0x03C29498 LDR V3, [X8]
	0x03C2949C FCMP S2, S3
	0x03C294A0 B.PL 0x3C294E0
	0x03C294A4 ADRP X19, 0x7AF000
	0x03C294A8 LDRB W8, [X19 + 0x783]
	0x03C294AC CBNZ W8, 0x3C294C4
	0x03C294B0 ADRP X0, 0x4CA000
	0x03C294B4 LDR X0, [X0 + 0x5A0]
	0x03C294B8 BL 0x1C16CF4
	0x03C294BC MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7BC000
	006 Move X21, 0x4CF000
	007 Move X19, X8
	008 Move W8, [X20+4058]
	009 Move X21, [X21+624]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4CF000
	015 Move X0, [X0+624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4058], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move V1, [X8+96]
	022 Move V0, [X8+112]
	023 Move V3, [X8+64]
	024 Move V2, [X8+80]
	025 Move [X19+32], V1
	026 Move [X19+40], V0
	027 Move [X19], V3
	028 Move [X19+8], V2
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.String ToString()

Disassembly:
	0x03C294C0 STRB W8, [X19 + 0x783]
	0x03C294C4 ADRP X8, 0x4CA000
	0x03C294C8 LDR X8, [X8 + 0x5A0]
	0x03C294CC LDR X8, [X8]

ISIL:
	001 Move X1, X31
	002 Move X2, X31
	003 Move X3, X31
	004 Call 0x3C2FB00
	005 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider formatProvider)

Disassembly:
	0x03C294D0 LDR X8, [X8 + 0xB8]
	0x03C294D4 LDP S0, S1, [X8]
	0x03C294D8 LDR V2, [X8 + 0x8]
	0x03C294DC B 0x3C2950C
	0x03C294E0 FMUL S0, S13, S10
	0x03C294E4 FMUL S1, S12, S9
	0x03C294E8 FMUL S3, S11, S8
	0x03C294EC FADD S0, S0, S1
	0x03C294F0 FADD S0, S3, S0
	0x03C294F4 FMUL S1, S10, S0
	0x03C294F8 FMUL S3, S9, S0
	0x03C294FC FMUL S4, S8, S0
	0x03C29500 FDIV S0, S1, S2
	0x03C29504 FDIV S1, S3, S2
	0x03C29508 FDIV S2, S4, S2
	0x03C2950C LDP X20, X19, [X31 + 0x40]
	0x03C29510 LDR X30, [X31 + 0x30]
	0x03C29514 LDP D9, D8, [X31 + 0x20]
	0x03C29518 LDP D11, D10, [X31 + 0x10]
	0x03C2951C LDP D13, D12, [X31], #0x50
	0x03C29520 RET
	0x03C29524 STP D13, D12, [X31 - 0x50]!
	0x03C29528 STP D11, D10, [X31 + 0x10]
	0x03C2952C STP D9, D8, [X31 + 0x20]
	0x03C29530 STR X30, [X31 + 0x30]
	0x03C29534 STP X20, X19, [X31 + 0x40]
	0x03C29538 ADRP X20, 0x7BC000
	0x03C2953C ADRP X19, 0x4D1000
	0x03C29540 LDRB W8, [X20 + 0x43]
	0x03C29544 LDR X19, [X19 + 0x4B8]
	0x03C29548 MOV V11.16B, V5.16B
	0x03C2954C MOV V12.16B, V4.16B
	0x03C29550 MOV V13.16B, V3.16B
	0x03C29554 MOV V8.16B, V2.16B
	0x03C29558 MOV V9.16B, V1.16B
	0x03C2955C MOV V10.16B, V0.16B
	0x03C29560 TBNZ X8, 0x0, 0x3C29578
	0x03C29564 ADRP X0, 0x4D1000
	0x03C29568 LDR X0, [X0 + 0x4B8]
	0x03C2956C BL 0x1C16CF4
	0x03C29570 MOVZ W8, 0x1
	0x03C29574 STRB W8, [X20 + 0x43]
	0x03C29578 LDR X8, [X19]
	0x03C2957C FMUL S0, S13, S13
	0x03C29580 FMUL S1, S12, S12
	0x03C29584 FADD S0, S0, S1
	0x03C29588 LDR X8, [X8 + 0xB8]
	0x03C2958C FMUL S1, S11, S11
	0x03C29590 FADD S0, S1, S0
	0x03C29594 LDR V2, [X8]
	0x03C29598 FCMP S0, S2
	0x03C2959C B.MI 0x3C295D8
	0x03C295A0 FMUL S1, S10, S13
	0x03C295A4 FMUL S2, S9, S12
	0x03C295A8 FMUL S3, S8, S11
	0x03C295AC FADD S1, S1, S2
	0x03C295B0 FADD S1, S3, S1
	0x03C295B4 FMUL S2, S13, S1
	0x03C295B8 FMUL S3, S12, S1
	0x03C295BC FMUL S1, S11, S1
	0x03C295C0 FDIV S2, S2, S0
	0x03C295C4 FDIV S3, S3, S0
	0x03C295C8 FDIV S0, S1, S0
	0x03C295CC FSUB S10, S10, S2
	0x03C295D0 FSUB S9, S9, S3
	0x03C295D4 FSUB S8, S8, S0
	0x03C295D8 MOV V0.16B, V10.16B
	0x03C295DC MOV V1.16B, V9.16B
	0x03C295E0 MOV V2.16B, V8.16B
	0x03C295E4 LDP X20, X19, [X31 + 0x40]
	0x03C295E8 LDR X30, [X31 + 0x30]
	0x03C295EC LDP D9, D8, [X31 + 0x20]
	0x03C295F0 LDP D11, D10, [X31 + 0x10]
	0x03C295F4 LDP D13, D12, [X31], #0x50
	0x03C295F8 RET
	0x03C295FC STP D15, D14, [X31 - 0x60]!
	0x03C29600 STP D13, D12, [X31 + 0x10]
	0x03C29604 STP D11, D10, [X31 + 0x20]
	0x03C29608 STP D9, D8, [X31 + 0x30]
	0x03C2960C STR X30, [X31 + 0x40]
	0x03C29610 STP X20, X19, [X31 + 0x50]
	0x03C29614 ADRP X20, 0x7BC000
	0x03C29618 ADRP X19, 0x4CA000
	0x03C2961C LDRB W8, [X20 + 0x44]
	0x03C29620 LDR X19, [X19 + 0x5A8]
	0x03C29624 MOV V8.16B, V5.16B
	0x03C29628 MOV V10.16B, V4.16B
	0x03C2962C MOV V11.16B, V3.16B
	0x03C29630 MOV V9.16B, V2.16B
	0x03C29634 MOV V12.16B, V1.16B
	0x03C29638 MOV V13.16B, V0.16B
	0x03C2963C TBNZ X8, 0x0, 0x3C29654
	0x03C29640 ADRP X0, 0x4CA000
	0x03C29644 LDR X0, [X0 + 0x5A8]
	0x03C29648 BL 0x1C16CF4
	0x03C2964C MOVZ W8, 0x1
	0x03C29650 STRB W8, [X20 + 0x44]
	0x03C29654 LDR X0, [X19]
	0x03C29658 FMUL S0, S13, S13
	0x03C2965C FMUL S1, S12, S12
	0x03C29660 FADD S0, S0, S1
	0x03C29664 FMUL S1, S9, S9
	0x03C29668 LDR W8, [X0 + 0xE0]
	0x03C2966C FADD S14, S1, S0
	0x03C29670 FMUL S0, S11, S11
	0x03C29674 FMUL S1, S10, S10
	0x03C29678 FADD S0, S0, S1
	0x03C2967C FMUL S1, S8, S8
	0x03C29680 FADD S15, S1, S0
	0x03C29684 CBNZ W8, 0x3C2968C
	0x03C29688 BL 0x1C16DFC
	0x03C2968C ADRP X8, 0xFFFFFFFFFCEC0000
	0x03C29690 LDR V0, [X8 + 0xFE8]
	0x03C29694 FMUL S1, S14, S15
	0x03C29698 FSQRT S1, S1
	0x03C2969C FCMP S1, S0
	0x03C296A0 FMOV S0, W31
	0x03C296A4 B.MI 0x3C296FC
	0x03C296A8 LDR X0, [X19]
	0x03C296AC FMUL S0, S13, S11
	0x03C296B0 FMUL S2, S12, S10
	0x03C296B4 FMUL S3, S9, S8
	0x03C296B8 FADD S0, S0, S2
	0x03C296BC FADD S0, S3, S0
	0x03C296C0 LDR W8, [X0 + 0xE0]
	0x03C296C4 FDIV S0, S0, S1
	0x03C296C8 FMOV S1, 1
	0x03C296CC FMOV S2, -1
	0x03C296D0 FMIN S1, S0, S1
	0x03C296D4 FCMP S0, S2
	0x03C296D8 FCSEL S8, S1, S2, PL
	0x03C296DC CBNZ W8, 0x3C296E4
	0x03C296E0 BL 0x1C16DFC
	0x03C296E4 FCVT S0, S8
	0x03C296E8 BL 0x3EB1B80
	0x03C296EC ADRP X8, 0xFFFFFFFFFCEC1000
	0x03C296F0 LDR V1, [X8 + 0x448]
	0x00000000 INVALID
	0x03C296F8 FMUL S0, S0, S1
	0x03C296FC LDP X20, X19, [X31 + 0x50]
	0x03C29700 LDR X30, [X31 + 0x40]
	0x03C29704 LDP D9, D8, [X31 + 0x30]
	0x03C29708 LDP D11, D10, [X31 + 0x20]
	0x03C2970C LDP D13, D12, [X31 + 0x10]
	0x03C29710 LDP D15, D14, [X31], #0x60
	0x03C29714 RET
	0x03C29718 SUB X31, X31, 0x60
	0x03C2971C STP D15, D14, [X31 + 0x10]
	0x03C29720 STP D13, D12, [X31 + 0x20]
	0x03C29724 STP D11, D10, [X31 + 0x30]
	0x03C29728 STP D9, D8, [X31 + 0x40]
	0x03C2972C STP X30, X19, [X31 + 0x50]
	0x03C29730 ADRP X19, 0x7AF000
	0x03C29734 LDRB W8, [X19 + 0xA24]
	0x03C29738 MOV V10.16B, V5.16B
	0x03C2973C MOV V9.16B, V4.16B
	0x03C29740 MOV V8.16B, V3.16B
	0x03C29744 MOV V12.16B, V2.16B
	0x03C29748 MOV V11.16B, V1.16B
	0x03C2974C MOV V13.16B, V0.16B
	0x03C29750 CBNZ W8, 0x3C29768
	0x03C29754 ADRP X0, 0x4CA000
	0x03C29758 LDR X0, [X0 + 0x5A8]
	0x03C2975C BL 0x1C16CF4
	0x03C29760 MOVZ W8, 0x1
	0x03C29764 STRB W8, [X19 + 0xA24]
	0x03C29768 ADRP X19, 0x4CA000
	0x03C2976C LDR X19, [X19 + 0x5A8]
	0x03C29770 FMUL S0, S13, S13
	0x03C29774 FMUL S1, S11, S11
	0x03C29778 FADD S0, S0, S1
	0x03C2977C LDR X0, [X19]
	0x03C29780 FMUL S1, S12, S12
	0x03C29784 FADD S15, S1, S0
	0x03C29788 FMUL S0, S8, S8
	0x03C2978C LDR W8, [X0 + 0xE0]
	0x03C29790 FMUL S1, S9, S9
	0x03C29794 FADD S0, S0, S1
	0x03C29798 FMUL S1, S10, S10
	0x03C2979C FADD S14, S1, S0
	0x03C297A0 CBNZ W8, 0x3C297A8
	0x03C297A4 BL 0x1C16DFC
	0x03C297A8 ADRP X8, 0xFFFFFFFFFCEC0000
	0x03C297AC LDR V0, [X8 + 0xFE8]
	0x03C297B0 LDP S16, S7, [X31 + 0x64]
	0x03C297B4 LDR V17, [X31 + 0x60]
	0x03C297B8 FMUL S1, S15, S14
	0x03C297BC FSQRT S1, S1
	0x03C297C0 FCMP S1, S0
	0x03C297C4 FMOV S0, W31
	0x03C297C8 B.MI 0x3C29830
	0x03C297CC LDR X0, [X19]
	0x03C297D0 FMUL S0, S13, S8
	0x03C297D4 FMUL S2, S11, S9
	0x03C297D8 FMUL S3, S12, S10
	0x03C297DC FADD S0, S0, S2
	0x03C297E0 FADD S0, S3, S0
	0x03C297E4 LDR W8, [X0 + 0xE0]
	0x03C297E8 FDIV S0, S0, S1
	0x03C297EC FMOV S1, 1
	0x03C297F0 FMOV S2, -1
	0x03C297F4 FMIN S1, S0, S1
	0x03C297F8 FCMP S0, S2
	0x03C297FC MOV V15.16B, V7.16B
	0x03C29800 FCSEL S14, S1, S2, PL
	0x03C29804 STP S17, S16, [X31 + 0x8]
	0x03C29808 CBNZ W8, 0x3C29810
	0x03C2980C BL 0x1C16DFC
	0x03C29810 FCVT S0, S14
	0x03C29814 BL 0x3EB1B80
	0x03C29818 ADRP X8, 0xFFFFFFFFFCEC1000
	0x03C2981C LDR V1, [X8 + 0x448]
	0x03C29820 LDP S17, S16, [X31 + 0x8]
	0x00000000 INVALID
	0x03C29828 MOV V7.16B, V15.16B
	0x03C2982C FMUL S0, S0, S1
	0x03C29830 FMUL S1, S11, S10
	0x03C29834 FMUL S2, S12, S9
	0x03C29838 FMUL S3, S12, S8
	0x03C2983C FMUL S4, S13, S10
	0x03C29840 FMUL S5, S13, S9
	0x03C29844 FMUL S6, S11, S8
	0x03C29848 FSUB S1, S1, S2
	0x03C2984C FSUB S2, S3, S4
	0x03C29850 FSUB S3, S5, S6
	0x03C29854 FMUL S1, S17, S1
	0x03C29858 FMUL S2, S16, S2
	0x03C2985C FMUL S3, S7, S3
	0x03C29860 FADD S1, S1, S2
	0x03C29864 LDP X30, X19, [X31 + 0x50]
	0x03C29868 LDP D9, D8, [X31 + 0x40]
	0x03C2986C LDP D11, D10, [X31 + 0x30]
	0x03C29870 LDP D13, D12, [X31 + 0x20]
	0x03C29874 LDP D15, D14, [X31 + 0x10]
	0x03C29878 FADD S1, S3, S1
	0x03C2987C FNEG S2, S0
	0x03C29880 FCMP S1, 0x0
	0x03C29884 FCSEL S0, S0, S2, GE
	0x03C29888 ADD X31, X31, 0x60
	0x03C2988C RET
	0x03C29890 STP D13, D12, [X31 - 0x50]!
	0x03C29894 STP D11, D10, [X31 + 0x10]
	0x03C29898 STP D9, D8, [X31 + 0x20]
	0x03C2989C STR X30, [X31 + 0x30]
	0x03C298A0 STP X20, X19, [X31 + 0x40]
	0x03C298A4 ADRP X20, 0x7BC000
	0x03C298A8 ADRP X19, 0x4CA000
	0x03C298AC LDRB W8, [X20 + 0x45]
	0x03C298B0 LDR X19, [X19 + 0x5A8]
	0x03C298B4 MOV V8.16B, V5.16B
	0x03C298B8 MOV V9.16B, V4.16B
	0x03C298BC MOV V11.16B, V3.16B
	0x03C298C0 MOV V10.16B, V2.16B
	0x03C298C4 MOV V12.16B, V1.16B
	0x03C298C8 MOV V13.16B, V0.16B
	0x03C298CC TBNZ X8, 0x0, 0x3C298E4
	0x03C298D0 ADRP X0, 0x4CA000
	0x03C298D4 LDR X0, [X0 + 0x5A8]
	0x03C298D8 BL 0x1C16CF4
	0x03C298DC MOVZ W8, 0x1
	0x03C298E0 STRB W8, [X20 + 0x45]
	0x03C298E4 LDR X0, [X19]
	0x03C298E8 FSUB S11, S13, S11
	0x03C298EC FSUB S9, S12, S9
	0x03C298F0 FSUB S8, S10, S8
	0x03C298F4 LDR W8, [X0 + 0xE0]
	0x03C298F8 CBNZ W8, 0x3C29900
	0x03C298FC BL 0x1C16DFC
	0x03C29900 FMUL S0, S11, S11
	0x03C29904 FMUL S1, S9, S9
	0x03C29908 FADD S0, S0, S1
	0x03C2990C FMUL S1, S8, S8
	0x03C29910 LDP X20, X19, [X31 + 0x40]
	0x03C29914 LDR X30, [X31 + 0x30]
	0x03C29918 LDP D9, D8, [X31 + 0x20]
	0x03C2991C LDP D11, D10, [X31 + 0x10]
	0x03C29920 FADD S0, S1, S0
	0x03C29924 FSQRT S0, S0
	0x03C29928 LDP D13, D12, [X31], #0x50
	0x03C2992C RET
	0x03C29930 STR D12, [X31 - 0x40]!
	0x03C29934 STP D11, D10, [X31 + 0x10]
	0x03C29938 STP D9, D8, [X31 + 0x20]
	0x03C2993C STP X30, X19, [X31 + 0x30]
	0x03C29940 ADRP X19, 0x7BC000
	0x03C29944 LDRB W8, [X19 + 0x46]
	0x03C29948 MOV V11.16B, V3.16B
	0x03C2994C MOV V8.16B, V2.16B
	0x03C29950 MOV V9.16B, V1.16B
	0x03C29954 MOV V10.16B, V0.16B
	0x03C29958 TBNZ X8, 0x0, 0x3C29970
	0x03C2995C ADRP X0, 0x4CA000
	0x03C29960 LDR X0, [X0 + 0x5A8]
	0x03C29964 BL 0x1C16CF4
	0x03C29968 MOVZ W8, 0x1
	0x03C2996C STRB W8, [X19 + 0x46]
	0x03C29970 FMUL S0, S10, S10
	0x03C29974 FMUL S1, S9, S9
	0x03C29978 FMUL S2, S8, S8
	0x03C2997C FADD S0, S0, S1
	0x03C29980 FADD S12, S2, S0
	0x03C29984 FMUL S0, S11, S11
	0x03C29988 FCMP S12, S0
	0x03C2998C B.LE 0x3C299C4
	0x03C29990 ADRP X8, 0x4CA000
	0x03C29994 LDR X8, [X8 + 0x5A8]
	0x03C29998 LDR X0, [X8]
	0x03C2999C LDR W8, [X0 + 0xE0]
	0x03C299A0 CBNZ W8, 0x3C299A8
	0x03C299A4 BL 0x1C16DFC
	0x03C299A8 FSQRT S0, S12
	0x03C299AC FDIV S1, S10, S0
	0x03C299B0 FDIV S2, S9, S0
	0x03C299B4 FDIV S0, S8, S0
	0x03C299B8 FMUL S10, S1, S11
	0x03C299BC FMUL S9, S2, S11
	0x03C299C0 FMUL S8, S0, S11
	0x03C299C4 MOV V0.16B, V10.16B
	0x03C299C8 MOV V1.16B, V9.16B
	0x03C299CC MOV V2.16B, V8.16B
	0x03C299D0 LDP X30, X19, [X31 + 0x30]
	0x03C299D4 LDP D9, D8, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7BC000
	008 Move X22, 0x4D3000
	009 Move W8, [X23+4059]
	010 Move X22, [X22+800]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x4CD000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0x4CB000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x537000
	025 Move X0, [X0+664]
	026 Call 0x1C17CF4
	027 Move X0, 0x4D3000
	028 Move X0, [X0+800]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+4059], W8
	032 Move X0, X21
	033 Move X1, X31
	034 Call String.IsNullOrEmpty, X0
	035 Move X8, [X22]
	036 And W31, W0, 1
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Compare X20, 0
	039 JumpIfNotEqual {56}
	040 Move X8, 0x4CD000
	041 Move X8, [X8+3144]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X31
	048 Call CultureInfo.get_InvariantCulture
	049 Compare X0, 0
	050 JumpIfEqual {354}
	051 Move X8, [X0]
	052 Move X9, [X8+536]
	053 Move X1, [X8+544]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X20, X0
	056 Move X8, 0x4CB000
	057 Move X8, [X8+2512]
	058 Move W1, 16
	059 Move X0, [X8]
	060 Call 0x1C17D6C
	061 Move X22, X0
	062 Move X0, X19
	063 Move X1, X21
	064 Move X2, X20
	065 Move X3, X31
	066 Call Single.ToString, X0, X1, X2
	067 Compare X22, 0
	068 JumpIfEqual {354}
	069 Move X23, X0
	070 Compare X0, 0
	071 JumpIfEqual {78}
	072 Move X8, [X22]
	073 Move X0, X23
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {351}
	078 Move W8, [X22+24]
	079 Compare W8, 0
	080 JumpIfEqual {350}
	081 Add X0, X19, 16
	082 Move X1, X21
	083 Move X2, X20
	084 Move X3, X31
	085 Move [X22+32], X23
	086 Call Single.ToString, X0, X1, X2
	087 Move X23, X0
	088 Compare X0, 0
	089 JumpIfEqual {96}
	090 Move X8, [X22]
	091 Move X0, X23
	092 Move X1, [X8+64]
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {351}
	096 Move W8, [X22+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add X0, X19, 32
	099 Move X1, X21
	100 Move X2, X20
	101 Move X3, X31
	102 Move [X22+40], X23
	103 Call Single.ToString, X0, X1, X2
	104 Move X23, X0
	105 Compare X0, 0
	106 JumpIfEqual {113}
	107 Move X8, [X22]
	108 Move X0, X23
	109 Move X1, [X8+64]
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {351}
	113 Move W8, [X22+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X0, X19, 48
	116 Move X1, X21
	117 Move X2, X20
	118 Move X3, X31
	119 Move [X22+48], X23
	120 Call Single.ToString, X0, X1, X2
	121 Move X23, X0
	122 Compare X0, 0
	123 JumpIfEqual {130}
	124 Move X8, [X22]
	125 Move X0, X23
	126 Move X1, [X8+64]
	127 Call 0x1C17E00
	128 Compare X0, 0
	129 JumpIfEqual {351}
	130 Move W8, [X22+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Add X0, X19, 4
	133 Move X1, X21
	134 Move X2, X20
	135 Move X3, X31
	136 Move [X22+56], X23
	137 Call Single.ToString, X0, X1, X2
	138 Move X23, X0
	139 Compare X0, 0
	140 JumpIfEqual {147}
	141 Move X8, [X22]
	142 Move X0, X23
	143 Move X1, [X8+64]
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {351}
	147 Move W8, [X22+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add X0, X19, 20
	150 Move X1, X21
	151 Move X2, X20
	152 Move X3, X31
	153 Move [X22+64], X23
	154 Call Single.ToString, X0, X1, X2
	155 Move X23, X0
	156 Compare X0, 0
	157 JumpIfEqual {164}
	158 Move X8, [X22]
	159 Move X0, X23
	160 Move X1, [X8+64]
	161 Call 0x1C17E00
	162 Compare X0, 0
	163 JumpIfEqual {351}
	164 Move W8, [X22+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Add X0, X19, 36
	167 Move X1, X21
	168 Move X2, X20
	169 Move X3, X31
	170 Move [X22+72], X23
	171 Call Single.ToString, X0, X1, X2
	172 Move X23, X0
	173 Compare X0, 0
	174 JumpIfEqual {181}
	175 Move X8, [X22]
	176 Move X0, X23
	177 Move X1, [X8+64]
	178 Call 0x1C17E00
	179 Compare X0, 0
	180 JumpIfEqual {351}
	181 Move W8, [X22+24]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Add X0, X19, 52
	184 Move X1, X21
	185 Move X2, X20
	186 Move X3, X31
	187 Move [X22+80], X23
	188 Call Single.ToString, X0, X1, X2
	189 Move X23, X0
	190 Compare X0, 0
	191 JumpIfEqual {198}
	192 Move X8, [X22]
	193 Move X0, X23
	194 Move X1, [X8+64]
	195 Call 0x1C17E00
	196 Compare X0, 0
	197 JumpIfEqual {351}
	198 Move W8, [X22+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Add X0, X19, 8
	201 Move X1, X21
	202 Move X2, X20
	203 Move X3, X31
	204 Move [X22+88], X23
	205 Call Single.ToString, X0, X1, X2
	206 Move X23, X0
	207 Compare X0, 0
	208 JumpIfEqual {215}
	209 Move X8, [X22]
	210 Move X0, X23
	211 Move X1, [X8+64]
	212 Call 0x1C17E00
	213 Compare X0, 0
	214 JumpIfEqual {351}
	215 Move W8, [X22+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Add X0, X19, 24
	218 Move X1, X21
	219 Move X2, X20
	220 Move X3, X31
	221 Move [X22+96], X23
	222 Call Single.ToString, X0, X1, X2
	223 Move X23, X0
	224 Compare X0, 0
	225 JumpIfEqual {232}
	226 Move X8, [X22]
	227 Move X0, X23
	228 Move X1, [X8+64]
	229 Call 0x1C17E00
	230 Compare X0, 0
	231 JumpIfEqual {351}
	232 Move W8, [X22+24]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Add X0, X19, 40
	235 Move X1, X21
	236 Move X2, X20
	237 Move X3, X31
	238 Move [X22+104], X23
	239 Call Single.ToString, X0, X1, X2
	240 Move X23, X0
	241 Compare X0, 0
	242 JumpIfEqual {249}
	243 Move X8, [X22]
	244 Move X0, X23
	245 Move X1, [X8+64]
	246 Call 0x1C17E00
	247 Compare X0, 0
	248 JumpIfEqual {351}
	249 Move W8, [X22+24]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Add X0, X19, 56
	252 Move X1, X21
	253 Move X2, X20
	254 Move X3, X31
	255 Move [X22+112], X23
	256 Call Single.ToString, X0, X1, X2
	257 Move X23, X0
	258 Compare X0, 0
	259 JumpIfEqual {266}
	260 Move X8, [X22]
	261 Move X0, X23
	262 Move X1, [X8+64]
	263 Call 0x1C17E00
	264 Compare X0, 0
	265 JumpIfEqual {351}
	266 Move W8, [X22+24]
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Add X0, X19, 12
	269 Move X1, X21
	270 Move X2, X20
	271 Move X3, X31
	272 Move [X22+120], X23
	273 Call Single.ToString, X0, X1, X2
	274 Move X23, X0
	275 Compare X0, 0
	276 JumpIfEqual {283}
	277 Move X8, [X22]
	278 Move X0, X23
	279 Move X1, [X8+64]
	280 Call 0x1C17E00
	281 Compare X0, 0
	282 JumpIfEqual {351}
	283 Move W8, [X22+24]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Add X0, X19, 28
	286 Move X1, X21
	287 Move X2, X20
	288 Move X3, X31
	289 Move [X22+128], X23
	290 Call Single.ToString, X0, X1, X2
	291 Move X23, X0
	292 Compare X0, 0
	293 JumpIfEqual {300}
	294 Move X8, [X22]
	295 Move X0, X23
	296 Move X1, [X8+64]
	297 Call 0x1C17E00
	298 Compare X0, 0
	299 JumpIfEqual {351}
	300 Move W8, [X22+24]
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Add X0, X19, 44
	303 Move X1, X21
	304 Move X2, X20
	305 Move X3, X31
	306 Move [X22+136], X23
	307 Call Single.ToString, X0, X1, X2
	308 Move X23, X0
	309 Compare X0, 0
	310 JumpIfEqual {317}
	311 Move X8, [X22]
	312 Move X0, X23
	313 Move X1, [X8+64]
	314 Call 0x1C17E00
	315 Compare X0, 0
	316 JumpIfEqual {351}
	317 Move W8, [X22+24]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Add X0, X19, 60
	320 Move X1, X21
	321 Move X2, X20
	322 Move X3, X31
	323 Move [X22+144], X23
	324 Call Single.ToString, X0, X1, X2
	325 Move X19, X0
	326 Compare X0, 0
	327 JumpIfEqual {334}
	328 Move X8, [X22]
	329 Move X0, X19
	330 Move X1, [X8+64]
	331 Call 0x1C17E00
	332 Compare X0, 0
	333 JumpIfEqual {351}
	334 Move W8, [X22+24]
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Move X8, 0x537000
	337 Move X8, [X8+664]
	338 Move [X22+152], X19
	339 Move X1, X22
	340 Move X20, [X31+32]
	341 Move X19, [X31+40]
	342 Move X0, [X8]
	343 Move X22, [X31+16]
	344 Move X21, [X31+24]
	345 Move X2, X31
	346 Move X30, [X31+48]
	347 Move X23, [X31+56]
	348 Call UnityString.Format, X0, X1
	349 Return X0
	350 Call 0x1C17F28
	351 Call 0x1C17F44
	352 Move X1, X31
	353 Call 0x1C17DEC
	354 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03C299D8 LDP D11, D10, [X31 + 0x10]
	0x03C299DC LDR V12, [X31], #0x40
	0x03C299E0 RET
	0x03C299E4 STR D10, [X31 - 0x30]!
	0x03C299E8 STP D9, D8, [X31 + 0x8]
	0x03C299EC STR X30, [X31 + 0x18]
	0x03C299F0 STP X20, X19, [X31 + 0x20]
	0x03C299F4 ADRP X19, 0x7BC000
	0x03C299F8 ADRP X20, 0x4CA000
	0x03C299FC LDRB W8, [X19 + 0x47]
	0x03C29A00 LDR X20, [X20 + 0x5A8]
	0x03C29A04 MOV V8.16B, V2.16B
	0x03C29A08 MOV V9.16B, V1.16B
	0x03C29A0C MOV V10.16B, V0.16B
	0x03C29A10 TBNZ X8, 0x0, 0x3C29A28
	0x03C29A14 ADRP X0, 0x4CA000
	0x03C29A18 LDR X0, [X0 + 0x5A8]
	0x03C29A1C BL 0x1C16CF4
	0x03C29A20 MOVZ W8, 0x1
	0x03C29A24 STRB W8, [X19 + 0x47]
	0x03C29A28 LDR X0, [X20]
	0x03C29A2C LDR W8, [X0 + 0xE0]
	0x03C29A30 CBNZ W8, 0x3C29A38
	0x03C29A34 BL 0x1C16DFC
	0x03C29A38 FMUL S0, S10, S10
	0x03C29A3C FMUL S1, S9, S9
	0x03C29A40 FADD S0, S0, S1
	0x03C29A44 FMUL S1, S8, S8
	0x03C29A48 LDP X20, X19, [X31 + 0x20]
	0x03C29A4C LDR X30, [X31 + 0x18]
	0x03C29A50 LDP D9, D8, [X31 + 0x8]
	0x03C29A54 FADD S0, S1, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7BC000
	005 Move X19, 0x4CF000
	006 Move W8, [X20+4060]
	007 Move X19, [X19+624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4CF000
	013 Move X0, [X0+624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+4060], W8
	017 Move X8, [X19]
	018 NotImplemented "Instruction MOVI not yet implemented."
	019 Move W9, 0x3F800000
	020 Move X8, [X8+184]
	021 Move [X8+32], V0
	022 Move [X8+40], V0
	023 Move [X8], V0
	024 Move [X8+8], V0
	025 Move X8, [X19]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X8, [X8+184]
	029 Move [X8+64], W9
	030 Move [X8+76], X31
	031 Move [X8+68], X31
	032 Move [X8+84], W9
	033 Move [X8+88], X31
	034 Move [X8+96], X31
	035 Move [X8+104], W9
	036 Move [X8+116], X31
	037 Move [X8+108], X31
	038 Move [X8+124], W9
	039 Move X30, [X31+32]
	040 Return 

Method: System.Void GetRotation_Injected(ref UnityEngine.Matrix4x4 _unity_self, out UnityEngine.Quaternion ret)

Disassembly:
	0x03C27DA0 B.NE 0x3C27D48
	0x03C27DA4 LDR V0, [X8 + 0x1C]
	0x03C27DA8 LDR V1, [X19 + 0x1C]
	0x03C27DAC MOV W0, W31
	0x03C27DB0 FCMP S1, S0
	0x03C27DB4 B.NE 0x3C27D48
	0x03C27DB8 LDR V0, [X8 + 0x18]
	0x03C27DBC LDR V1, [X19 + 0x18]
	0x03C27DC0 FCMP S1, S0
	0x03C27DC4 B.NE 0x3C27D48
	0x03C27DC8 LDR V0, [X8 + 0x14]
	0x03C27DCC LDR V1, [X19 + 0x14]
	0x03C27DD0 FCMP S1, S0
	0x03C27DD4 B.NE 0x3C27D48
	0x03C27DD8 LDR V0, [X8 + 0x10]
	0x03C27DDC LDR V1, [X19 + 0x10]
	0x03C27DE0 FCMP S1, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7BE000
	006 Move X2, [X21+4064]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51589120
	012 Add X0, X0, 298
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4064], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetLossyScale_Injected(ref UnityEngine.Matrix4x4 _unity_self, out UnityEngine.Vector3 ret)

Disassembly:
	0x03C27E40 CSET W8, EQ
	0x03C27E44 FCMP S2, S1
	0x03C27E48 CSET W9, EQ
	0x03C27E4C FCMP S7, S4
	0x03C27E50 AND W8, W9, W8, 0x0
	0x03C27E54 CSET W9, EQ
	0x03C27E58 FCMP S6, S5
	0x03C27E5C AND W8, W9, W8, 0x0
	0x03C27E60 CSET W9, EQ
	0x03C27E64 AND W0, W9, W8, 0x0
	0x03C27E68 B 0x3C27D48
	0x03C27E6C LDR V0, [X0 + 0xC]
	0x03C27E70 LDR V1, [X1 + 0xC]
	0x03C27E74 FCMP S0, S1
	0x03C27E78 B.NE 0x3C27F6C
	0x03C27E7C LDR V0, [X0 + 0x8]
	0x03C27E80 LDR V1, [X1 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7BE000
	006 Move X2, [X21+4072]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51535872
	012 Add X0, X0, 3964
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4072], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void DecomposeProjection_Injected(ref UnityEngine.Matrix4x4 _unity_self, out UnityEngine.FrustumPlanes ret)

Disassembly:
	0x03C27EEC LDR V0, [X0 + 0x2C]
	0x03C27EF0 LDR V1, [X1 + 0x2C]
	0x03C27EF4 FCMP S0, S1
	0x03C27EF8 B.NE 0x3C27F6C
	0x03C27EFC LDR V0, [X0 + 0x28]
	0x03C27F00 LDR V1, [X1 + 0x28]
	0x03C27F04 FCMP S0, S1
	0x03C27F08 B.NE 0x3C27F6C
	0x03C27F0C LDR V0, [X0 + 0x24]
	0x03C27F10 LDR V1, [X1 + 0x24]
	0x03C27F14 FCMP S0, S1
	0x03C27F18 B.NE 0x3C27F6C
	0x03C27F1C LDR V0, [X0 + 0x20]
	0x03C27F20 LDR V1, [X1 + 0x20]
	0x03C27F24 FCMP S0, S1
	0x03C27F28 B.NE 0x3C27F6C
	0x03C27F2C LDP S1, S0, [X0 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7BE000
	006 Move X2, [X21+4080]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51499008
	012 Add X0, X0, 571
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4080], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void TRS_Injected(ref UnityEngine.Vector3 pos, ref UnityEngine.Quaternion q, ref UnityEngine.Vector3 s, out UnityEngine.Matrix4x4 ret)

Disassembly:
	0x03C28038 FADD V18.4S, V18.4S, V26.4S
	0x03C2803C FADD V19.4S, V21.4S, V27.4S
	0x03C28040 FADD V0.2S, V0.2S, V22.2S
	0x03C28044 FADD V2.2S, V4.2S, V2.2S
	0x03C28048 FADD V20.2S, V23.2S, V20.2S
	0x03C2804C FADD V6.4S, V18.4S, V24.4S
	0x03C28050 FADD V18.4S, V19.4S, V25.4S
	0x03C28054 FADD V0.2S, V0.2S, V31.2S
	0x03C28058 FADD V1.2S, V2.2S, V1.2S
	0x03C2805C STP D20, D3, [X8 + 0x10]
	0x03C28060 STP D0, D1, [X8]
	0x03C28064 STP V6, V18, [X8 + 0x20]
	0x03C28068 RET
	0x03C2806C LDP V4, V5, [X0]
	0x03C28070 LDP V6, V7, [X0 + 0x20]
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x03C28080 FADD V0.4S, V0.4S, V1.4S
	0x00000000 INVALID
	0x03C28088 FADD V0.4S, V0.4S, V2.4S
	0x03C2808C FADD V0.4S, V0.4S, V3.4S
	0x03C28090 MOV S1, V0.S[1]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7BD000
	008 Move X4, [X23+4088]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51367936
	016 Add X0, X0, 2188
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+4088], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move X2, X20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Boolean Inverse3DAffine_Injected(ref UnityEngine.Matrix4x4 input, ref UnityEngine.Matrix4x4 result)

Disassembly:
	0x03C280D8 ADD X11, X0, 0x8
	0x03C280DC ADD X8, X0, 0x18
	0x03C280E0 ADD X9, X0, 0x28
	0x03C280E4 ADD X10, X0, 0x38
	0x03C280E8 B 0x3C28110
	0x03C280EC ADD X11, X0, 0x4
	0x03C280F0 ADD X8, X0, 0x14
	0x03C280F4 ADD X9, X0, 0x24
	0x03C280F8 ADD X10, X0, 0x34
	0x03C280FC B 0x3C28110
	0x03C28100 ADD X11, X0, 0xC
	0x03C28104 ADD X8, X0, 0x1C
	0x03C28108 ADD X9, X0, 0x2C
	0x03C2810C ADD X10, X0, 0x3C
	0x03C28110 MOV X0, X11
	0x03C28114 LDR V3, [X10]
	0x03C28118 LDR V2, [X9]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7BE000
	006 Move X2, [X21]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51376128
	012 Add X0, X0, 2218
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Inverse_Injected(ref UnityEngine.Matrix4x4 m, out UnityEngine.Matrix4x4 ret)

Disassembly:
	0x03C28188 STR X30, [X31 + 0x18]
	0x03C2818C STP X20, X19, [X31 + 0x20]
	0x03C28190 MOV W19, W1
	0x03C28194 UBFM W1, W1, 0x1E, 0x1D
	0x03C28198 MOV V8.16B, V3.16B
	0x03C2819C MOV V9.16B, V2.16B
	0x03C281A0 MOV V10.16B, V1.16B
	0x03C281A4 MOV X20, X0
	0x03C281A8 BL 0x3C2798C
	0x03C281AC MOVZ W1, 0x1
	0x03C281B0 BFM W1, W19, 0x1E, 0x1D
	0x03C281B4 MOV X0, X20
	0x03C281B8 MOV V0.16B, V10.16B
	0x03C281BC BL 0x3C2798C
	0x03C281C0 MOVZ W1, 0x2
	0x03C281C4 BFM W1, W19, 0x1E, 0x1D
	0x03C281C8 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7BE000
	006 Move X2, [X21+8]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51384320
	012 Add X0, X0, 3245
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+8], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Transpose_Injected(ref UnityEngine.Matrix4x4 m, out UnityEngine.Matrix4x4 ret)

Disassembly:
	0x03C282B8 FADD V1.2S, V3.2S, V6.2S
	0x03C282BC FADD S2, S0, S2
	0x03C282C0 FADD V0.2S, V7.2S, V1.2S
	0x03C282C4 FADD S2, S5, S2
	0x03C282C8 MOV S1, V0.S[1]
	0x03C282CC RET
	0x03C282D0 LDR V3, [X0]
	0x03C282D4 LDR V5, [X0 + 0x8]
	0x03C282D8 LDR V4, [X0 + 0x10]
	0x03C282DC LDR V6, [X0 + 0x20]
	0x03C282E0 LDR V7, [X0 + 0x18]
	0x00000000 INVALID
	0x03C282E8 FMUL S0, S0, S5
	0x03C282EC LDR V5, [X0 + 0x28]
	0x00000000 INVALID
	0x03C282F4 FMUL S1, S1, S7
	0x00000000 INVALID

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7BE000
	006 Move X2, [X21+16]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51458048
	012 Add X0, X0, 2531
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+16], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Ortho_Injected(System.Single left, System.Single right, System.Single bottom, System.Single top, System.Single zNear, System.Single zFar, out UnityEngine.Matrix4x4 ret)

Disassembly:
	0x03C28428 LDR X21, [X21 + 0x270]
	0x03C2842C TBNZ X8, 0x0, 0x3C28444
	0x03C28430 ADRP X0, 0x4CF000
	0x03C28434 LDR X0, [X0 + 0x270]
	0x03C28438 BL 0x1C16CF4
	0x03C2843C MOVZ W8, 0x1
	0x03C28440 STRB W8, [X20 + 0xFD9]
	0x03C28444 LDR X8, [X21]
	0x03C28448 LDR X8, [X8 + 0xB8]
	0x03C2844C LDP V1, V0, [X8 + 0x20]
	0x03C28450 LDP V3, V2, [X8]
	0x03C28454 STP V1, V0, [X19 + 0x20]
	0x03C28458 STP V3, V2, [X19]
	0x03C2845C LDP X20, X19, [X31 + 0x10]
	0x03C28460 LDP X30, X21, [X31], #0x20
	0x03C28464 RET
	0x03C28468 STP X30, X21, [X31 - 0x20]!
	0x03C2846C STP X20, X19, [X31 + 0x10]
	0x03C28470 ADRP X20, 0x7BC000
	0x03C28474 ADRP X21, 0x4CF000
	0x03C28478 MOV X19, X8
	0x03C2847C LDRB W8, [X20 + 0xFDA]
	0x03C28480 LDR X21, [X21 + 0x270]
	0x03C28484 TBNZ X8, 0x0, 0x3C2849C
	0x03C28488 ADRP X0, 0x4CF000
	0x03C2848C LDR X0, [X0 + 0x270]
	0x03C28490 BL 0x1C16CF4
	0x03C28494 MOVZ W8, 0x1
	0x03C28498 STRB W8, [X20 + 0xFDA]
	0x03C2849C LDR X8, [X21]
	0x03C284A0 LDR X8, [X8 + 0xB8]
	0x03C284A4 LDP V1, V0, [X8 + 0x60]
	0x03C284A8 LDP V3, V2, [X8 + 0x40]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x7BE000
	011 Move X1, [X20+24]
	012 Move X19, X0
	013 Move V8, V5
	014 Move V9, V4
	015 Move V10, V3
	016 Move V11, V2
	017 Move V12, V1
	018 Move V13, V0
	019 Compare X1, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51359744
	022 Add X0, X0, 2084
	023 Call 0x1C17CB8
	024 Move X1, X0
	025 Move [X20+24], X0
	026 Move V2, V11
	027 Move V3, V10
	028 Move V4, V9
	029 Move V5, V8
	030 Move X0, X19
	031 Move X20, [X31+64]
	032 Move X19, [X31+72]
	033 Move X30, [X31+48]
	034 Move D9, [X31+32]
	035 Move D8, [X31+40]
	036 Move D11, [X31+16]
	037 Move D10, [X31+24]
	038 Move V0, V13
	039 Move V1, V12
	040 Move D13, [X31+80]
	041 Move D12, [X31+88]
	042 CallNoReturn X1

Method: System.Void Perspective_Injected(System.Single fov, System.Single aspect, System.Single zNear, System.Single zFar, out UnityEngine.Matrix4x4 ret)

Disassembly:
	0x03C28540 LDR X8, [X22]
	0x03C28544 ANDS W31, W0, 0x1
	0x03C28548 CSEL X21, X8, X21, NE
	0x03C2854C CBNZ X20, 0x3C28588
	0x03C28550 ADRP X8, 0x4CD000
	0x03C28554 LDR X8, [X8 + 0xC48]
	0x03C28558 LDR X0, [X8]
	0x03C2855C LDR W8, [X0 + 0xE0]
	0x03C28560 CBNZ W8, 0x3C28568
	0x03C28564 BL 0x1C16DFC
	0x03C28568 MOV X0, X31
	0x03C2856C BL 0x3338524
	0x03C28570 CBZ X0, 0x3C289D4
	0x03C28574 LDR X8, [X0]
	0x03C28578 LDR X9, [X8 + 0x218]
	0x03C2857C LDR X1, [X8 + 0x220]
	0x03C28580 BLR X9
	0x03C28584 MOV X20, X0
	0x03C28588 ADRP X8, 0x4CB000
	0x03C2858C LDR X8, [X8 + 0x9D0]
	0x03C28590 MOVZ W1, 0x10
	0x03C28594 LDR X0, [X8]
	0x03C28598 BL 0x1C16D6C
	0x03C2859C MOV X22, X0
	0x03C285A0 MOV X0, X19
	0x03C285A4 MOV X1, X21
	0x03C285A8 MOV X2, X20

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x7BE000
	009 Move X1, [X20+32]
	010 Move X19, X0
	011 Move V8, V3
	012 Move V9, V2
	013 Move V10, V1
	014 Move V11, V0
	015 Compare X1, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51384320
	018 Add X0, X0, 3332
	019 Call 0x1C17CB8
	020 Move X1, X0
	021 Move [X20+32], X0
	022 Move V2, V9
	023 Move V3, V8
	024 Move X0, X19
	025 Move X20, [X31+48]
	026 Move X19, [X31+56]
	027 Move X30, [X31+32]
	028 Move D9, [X31+16]
	029 Move D8, [X31+24]
	030 Move V0, V11
	031 Move V1, V10
	032 Move D11, [X31+64]
	033 Move D10, [X31+72]
	034 CallNoReturn X1

Method: System.Void LookAt_Injected(ref UnityEngine.Vector3 from, ref UnityEngine.Vector3 to, ref UnityEngine.Vector3 up, out UnityEngine.Matrix4x4 ret)

Disassembly:
	0x03C2863C LDR X8, [X22]
	0x03C28640 MOV X0, X23
	0x03C28644 LDR X1, [X8 + 0x40]
	0x03C28648 BL 0x1C16E00
	0x03C2864C CBZ X0, 0x3C289C8
	0x03C28650 LDR W8, [X22 + 0x18]
	0x03C28654 CMP W8, 0x2
	0x03C28658 B.LS 0x3C289C4
	0x03C2865C ADD X0, X19, 0x30
	0x03C28660 MOV X1, X21
	0x03C28664 MOV X2, X20
	0x03C28668 MOV X3, X31
	0x03C2866C STR X23, [X22 + 0x30]
	0x03C28670 BL 0x338FFB4
	0x03C28674 MOV X23, X0
	0x03C28678 CBZ X0, 0x3C28690
	0x03C2867C LDR X8, [X22]
	0x03C28680 MOV X0, X23
	0x03C28684 LDR X1, [X8 + 0x40]
	0x03C28688 BL 0x1C16E00
	0x03C2868C CBZ X0, 0x3C289C8
	0x03C28690 LDR W8, [X22 + 0x18]
	0x03C28694 CMP W8, 0x3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7BE000
	008 Move X4, [X23+40]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51494912
	016 Add X0, X0, 911
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+40], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move X2, X20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void Frustum_Injected(System.Single left, System.Single right, System.Single bottom, System.Single top, System.Single zNear, System.Single zFar, out UnityEngine.Matrix4x4 ret)

Disassembly:
	0x03C28744 LDR X1, [X8 + 0x40]
	0x03C28748 BL 0x1C16E00
	0x03C2874C CBZ X0, 0x3C289C8
	0x03C28750 LDR W8, [X22 + 0x18]
	0x03C28754 CMP W8, 0x6
	0x03C28758 B.LS 0x3C289C4
	0x03C2875C ADD X0, X19, 0x34
	0x03C28760 MOV X1, X21
	0x03C28764 MOV X2, X20
	0x03C28768 MOV X3, X31
	0x03C2876C STR X23, [X22 + 0x50]
	0x03C28770 BL 0x338FFB4
	0x03C28774 MOV X23, X0
	0x03C28778 CBZ X0, 0x3C28790
	0x03C2877C LDR X8, [X22]
	0x03C28780 MOV X0, X23
	0x03C28784 LDR X1, [X8 + 0x40]
	0x03C28788 BL 0x1C16E00
	0x03C2878C CBZ X0, 0x3C289C8
	0x03C28790 LDR W8, [X22 + 0x18]
	0x03C28794 CMP W8, 0x7
	0x03C28798 B.LS 0x3C289C4
	0x03C2879C ADD X0, X19, 0x8
	0x03C287A0 MOV X1, X21
	0x03C287A4 MOV X2, X20
	0x03C287A8 MOV X3, X31
	0x03C287AC STR X23, [X22 + 0x58]
	0x03C287B0 BL 0x338FFB4
	0x03C287B4 MOV X23, X0
	0x03C287B8 CBZ X0, 0x3C287D0
	0x03C287BC LDR X8, [X22]
	0x03C287C0 MOV X0, X23
	0x03C287C4 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x7BE000
	011 Move X1, [X20+48]
	012 Move X19, X0
	013 Move V8, V5
	014 Move V9, V4
	015 Move V10, V3
	016 Move V11, V2
	017 Move V12, V1
	018 Move V13, V0
	019 Compare X1, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51359744
	022 Add X0, X0, 2230
	023 Call 0x1C17CB8
	024 Move X1, X0
	025 Move [X20+48], X0
	026 Move V2, V11
	027 Move V3, V10
	028 Move V4, V9
	029 Move V5, V8
	030 Move X0, X19
	031 Move X20, [X31+64]
	032 Move X19, [X31+72]
	033 Move X30, [X31+48]
	034 Move D9, [X31+32]
	035 Move D8, [X31+40]
	036 Move D11, [X31+16]
	037 Move D10, [X31+24]
	038 Move V0, V13
	039 Move V1, V12
	040 Move D13, [X31+80]
	041 Move D12, [X31+88]
	042 CallNoReturn X1

