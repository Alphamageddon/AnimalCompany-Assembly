Type: UnityEngine.AsyncOperation

Method: System.Void InternalDestroy(System.IntPtr ptr)

Disassembly:
	0x03C324B8 LDR X0, [X0 + 0x598]
	0x03C324BC BL 0x1C16CF4
	0x03C324C0 MOVZ W8, 0x1
	0x03C324C4 STRB W8, [X20 + 0x308]
	0x03C324C8 LDR X0, [X21]
	0x03C324CC LDR W8, [X0 + 0xE0]
	0x03C324D0 CBNZ W8, 0x3C324D8
	0x03C324D4 BL 0x1C16DFC
	0x03C324D8 MOV X0, X19
	0x03C324DC LDP X20, X19, [X31 + 0x10]
	0x03C324E0 MOV X1, X31
	0x03C324E4 LDP X30, X21, [X31], #0x20
	0x03C324E8 B 0x33BDD8C
	0x03C324EC MOV X0, X31
	0x03C324F0 B 0x3C250DC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B4000
	005 Move X1, [X20+640]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51437568
	010 Add X0, X0, 431
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+640], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_isDone()

Disassembly:
	0x03C324F4 STP X30, X21, [X31 - 0x20]!
	0x03C324F8 STP X20, X19, [X31 + 0x10]
	0x03C324FC ADRP X20, 0x7B3000
	0x03C32500 ADRP X21, 0x4F5000
	0x03C32504 LDRB W8, [X20 + 0x2C8]
	0x03C32508 LDR X21, [X21 + 0x430]
	0x03C3250C MOV X19, X0
	0x03C32510 TBNZ X8, 0x0, 0x3C3254C
	0x03C32514 ADRP X0, 0x4C9000
	0x03C32518 LDR X0, [X0 + 0x958]
	0x03C3251C BL 0x1C16CF4
	0x03C32520 ADRP X0, 0x4EF000
	0x03C32524 LDR X0, [X0 + 0x670]
	0x03C32528 BL 0x1C16CF4
	0x03C3252C ADRP X0, 0x4F5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B4000
	005 Move X1, [X20+648]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51531776
	010 Add X0, X0, 3886
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+648], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_progress()

Disassembly:
	0x03C32530 LDR X0, [X0 + 0x430]
	0x03C32534 BL 0x1C16CF4
	0x03C32538 ADRP X0, 0x4EF000
	0x03C3253C LDR X0, [X0 + 0xD08]
	0x03C32540 BL 0x1C16CF4
	0x03C32544 MOVZ W8, 0x1
	0x03C32548 STRB W8, [X20 + 0x2C8]
	0x03C3254C LDR X0, [X21]
	0x03C32550 BL 0x1C16F10
	0x03C32554 MOV X1, X19
	0x03C32558 MOV W2, W31
	0x03C3255C MOV X3, X31
	0x03C32560 MOV X20, X0
	0x03C32564 BL 0x3224E14
	0x03C32568 CBZ X20, 0x3C32618

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B4000
	005 Move X1, [X20+656]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51552256
	010 Add X0, X0, 499
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+656], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_allowSceneActivation(System.Boolean value)

Disassembly:
	0x03C3256C LDR X8, [X20]
	0x03C32570 MOV X0, X20
	0x03C32574 LDP X9, X1, [X8 + 0x188]
	0x03C32578 BLR X9
	0x03C3257C TBZ X0, 0x0, 0x3C3258C
	0x03C32580 LDP X20, X19, [X31 + 0x10]
	0x03C32584 LDP X30, X21, [X31], #0x20
	0x03C32588 RET
	0x03C3258C ADRP X8, 0x4EF000
	0x03C32590 LDR X8, [X8 + 0x670]
	0x03C32594 LDR X0, [X8]
	0x03C32598 BL 0x1C16F10
	0x03C3259C MOVZ W2, 0x2
	0x03C325A0 MOV X1, X20
	0x03C325A4 MOV X3, X31
	0x03C325A8 MOV X21, X0
	0x03C325AC BL 0x32F8A28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B4000
	006 Move X2, [X21+664]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51654656
	012 Add X0, X0, 4080
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+664], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Finalize()

Disassembly:
	0x03C325B0 ADRP X8, 0x4EF000
	0x03C325B4 LDR X8, [X8 + 0xD08]
	0x03C325B8 LDR X0, [X8]
	0x03C325BC BL 0x1C16F10
	0x03C325C0 MOV X1, X21
	0x03C325C4 MOV X2, X31
	0x03C325C8 MOV X19, X0
	0x03C325CC BL 0x32E812C
	0x03C325D0 CBZ X19, 0x3C32618
	0x03C325D4 LDR X8, [X19]
	0x03C325D8 MOVZ W1, 0x1
	0x03C325DC MOV X0, X19
	0x03C325E0 LDR X9, [X8 + 0x288]
	0x03C325E4 LDR X2, [X8 + 0x290]
	0x03C325E8 BLR X9
	0x03C325EC ADRP X8, 0x4C9000
	0x03C325F0 LDR X8, [X8 + 0x958]
	0x03C325F4 LDR X0, [X8]
	0x03C325F8 LDR W8, [X0 + 0xE0]
	0x03C325FC CBNZ W8, 0x3C32604
	0x03C32600 BL 0x1C16DFC
	0x03C32604 MOV X0, X19
	0x03C32608 LDP X20, X19, [X31 + 0x10]
	0x03C3260C MOV X1, X31
	0x03C32610 LDP X30, X21, [X31], #0x20
	0x03C32614 B 0x33C308C
	0x03C32618 BL 0x1C16F20
	0x03C3261C STR X30, [X31 - 0x30]!
	0x03C32620 STP X22, X21, [X31 + 0x10]
	0x03C32624 STP X20, X19, [X31 + 0x20]
	0x03C32628 ADRP X19, 0x7B3000
	0x03C3262C ADRP X22, 0x52D000
	0x03C32630 LDRB W8, [X19 + 0x2C9]
	0x03C32634 LDR X22, [X22 + 0x3B0]
	0x03C32638 TBNZ X8, 0x0, 0x3C32668
	0x03C3263C ADRP X0, 0x4FA000
	0x03C32640 LDR X0, [X0 + 0x5B8]
	0x03C32644 BL 0x1C16CF4
	0x03C32648 ADRP X0, 0x52D000
	0x03C3264C LDR X0, [X0 + 0x3B8]
	0x03C32650 BL 0x1C16CF4
	0x03C32654 ADRP X0, 0x52D000
	0x03C32658 LDR X0, [X0 + 0x3B0]
	0x03C3265C BL 0x1C16CF4
	0x03C32660 MOVZ W8, 0x1
	0x03C32664 STRB W8, [X19 + 0x2C9]
	0x03C32668 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B4000
	006 Move X8, [X21+640]
	007 Move X20, [X0+16]
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51437568
	012 Add X0, X0, 431
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X21+640], X0
	016 Move X0, X20
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X0, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X1, X31
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Call Object.Finalize, X0
	025 Return 
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X21, X0
	028 Move X0, X21
	029 Call 0x3EB2AD0
	030 Move X20, [X0]
	031 Call 0x3EB2AE0
	032 Move X0, X19
	033 Move X1, X31
	034 Call Object.Finalize, X0
	035 Compare X20, 0
	036 JumpIfNotEqual {43}
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X20, X31
	043 Move X0, X20
	044 Call 0x1C17F18
	045 Move X21, X0
	046 Move X0, X19
	047 Move X1, X31
	048 Call Object.Finalize, X0
	049 Compare X20, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X21
	052 Call 0x1D2D690
	053 Move X0, X20
	054 Call 0x1C17F18
	055 Call 0x1991590

Method: System.Void InvokeCompletionEvent()

Disassembly:
	0x03C3266C BL 0x33C0128
	0x03C32670 LDR X8, [X22]
	0x03C32674 MOV X19, X0
	0x03C32678 LDR W9, [X8 + 0xE0]
	0x03C3267C CBNZ W9, 0x3C3268C
	0x03C32680 MOV X0, X8
	0x03C32684 BL 0x1C16DFC
	0x03C32688 LDR X8, [X22]
	0x03C3268C LDR X9, [X8 + 0xB8]
	0x03C32690 LDR X20, [X9 + 0x8]
	0x03C32694 CBNZ X20, 0x3C326EC
	0x03C32698 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+24]
	004 Compare X8, 0
	005 JumpIfEqual {13}
	006 Move X19, X0
	007 Move X9, [X8+24]
	008 Move X0, [X8+64]
	009 Move X2, [X8+40]
	010 Move X1, X19
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move [X19+24], X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 

Method: System.Void add_completed(System.Action`1<UnityEngine.AsyncOperation> value)

Disassembly:
	0x03C3269C CBNZ W9, 0x3C326AC
	0x03C326A0 MOV X0, X8
	0x03C326A4 BL 0x1C16DFC
	0x03C326A8 LDR X8, [X22]
	0x03C326AC ADRP X9, 0x4FA000
	0x03C326B0 LDR X8, [X8 + 0xB8]
	0x03C326B4 LDR X9, [X9 + 0x5B8]
	0x03C326B8 LDR X21, [X8]
	0x03C326BC LDR X0, [X9]
	0x03C326C0 BL 0x1C16F10
	0x03C326C4 ADRP X8, 0x52D000
	0x03C326C8 LDR X8, [X8 + 0x3B8]
	0x03C326CC MOV X1, X21
	0x03C326D0 MOV X3, X31
	0x03C326D4 MOV X20, X0
	0x03C326D8 LDR X2, [X8]
	0x03C326DC BL 0x338ED28
	0x03C326E0 LDR X8, [X22]
	0x03C326E4 LDR X8, [X8 + 0xB8]
	0x03C326E8 STR X20, [X8 + 0x8]
	0x03C326EC CBZ X19, 0x3C3270C
	0x03C326F0 MOV X0, X19
	0x03C326F4 MOV X1, X20
	0x03C326F8 LDP X20, X19, [X31 + 0x20]
	0x03C326FC LDP X22, X21, [X31 + 0x10]
	0x03C32700 MOV X2, X31
	0x03C32704 LDR X30, [X31], #0x30
	0x03C32708 B 0x33C0D4C
	0x03C3270C BL 0x1C16F20
	0x03C32710 STR X30, [X31 - 0x20]!
	0x03C32714 STP X20, X19, [X31 + 0x10]
	0x03C32718 ADRP X19, 0x7B3000
	0x03C3271C ADRP X20, 0x52D000
	0x03C32720 LDRB W8, [X19 + 0x2CA]
	0x03C32724 LDR X20, [X20 + 0x3B0]
	0x03C32728 TBNZ X8, 0x0, 0x3C32740
	0x03C3272C ADRP X0, 0x52D000
	0x03C32730 LDR X0, [X0 + 0x3B0]
	0x03C32734 BL 0x1C16CF4
	0x03C32738 MOVZ W8, 0x1
	0x03C3273C STRB W8, [X19 + 0x2CA]
	0x03C32740 LDR X0, [X20]
	0x03C32744 BL 0x1C16F10
	0x03C32748 MOV X1, X31
	0x03C3274C MOV X19, X0
	0x03C32750 BL 0x33BDD8C
	0x03C32754 LDR X8, [X20]
	0x03C32758 LDR X8, [X8 + 0xB8]
	0x03C3275C STR X19, [X8]
	0x03C32760 LDP X20, X19, [X31 + 0x10]
	0x03C32764 LDR X30, [X31], #0x20
	0x03C32768 RET
	0x03C3276C MOV X1, X31
	0x03C32770 B 0x33BDD8C
	0x03C32774 STR X30, [X31 - 0x20]!
	0x03C32778 STP X20, X19, [X31 + 0x10]
	0x03C3277C ADRP X20, 0x7B3000
	0x03C32780 LDRB W8, [X20 + 0x2CB]
	0x03C32784 MOV X19, X2
	0x03C32788 TBNZ X8, 0x0, 0x3C327A0
	0x03C3278C ADRP X0, 0x4F2000
	0x03C32790 LDR X0, [X0 + 0xF00]
	0x03C32794 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7B4000
	007 Move W8, [X21+672]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4CE000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+672], W8
	019 Move X21, 0x7B4000
	020 Move X8, [X21+648]
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51531776
	024 Add X0, X0, 3886
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X21+648], X0
	028 Move X0, X19
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {46}
	034 Compare X20, 0
	035 JumpIfEqual {77}
	036 Move X3, [X20+24]
	037 Move X0, [X20+64]
	038 Move X2, [X20+40]
	039 Move X1, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 CallNoReturn X3
	046 Move X0, [X19+24]
	047 Move X1, X20
	048 Move X2, X31
	049 Call Delegate.Combine, X0, X1
	050 Compare X0, 0
	051 JumpIfEqual {70}
	052 Move X22, 0x4CE000
	053 Move X22, [X22+1816]
	054 Move X20, X0
	055 Move X21, [X22]
	056 Move X1, X21
	057 Call 0x1C17E00
	058 Compare X0, 0
	059 JumpIfEqual {78}
	060 Move [X19+24], X0
	061 Move X19, [X22]
	062 Move X0, X20
	063 Move X1, X19
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfNotEqual {71}
	067 Move X0, X20
	068 Move X1, X19
	069 Call 0x1C181E0
	070 Move [X19+24], X31
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return 
	077 Call 0x1C17F20
	078 Move X0, X20
	079 Move X1, X21
	080 Call 0x1C181E0

Method: System.Void remove_completed(System.Action`1<UnityEngine.AsyncOperation> value)

Disassembly:
	0x03C32798 MOVZ W8, 0x1
	0x03C3279C STRB W8, [X20 + 0x2CB]
	0x03C327A0 CBZ X19, 0x3C327F0
	0x03C327A4 ADRP X8, 0x4F2000
	0x03C327A8 LDR X8, [X8 + 0xF00]
	0x03C327AC LDR X20, [X19 + 0x10]
	0x03C327B0 LDR X0, [X8]
	0x03C327B4 BL 0x1C16F10
	0x03C327B8 MOV X1, X20
	0x03C327BC MOV X2, X31
	0x03C327C0 MOV X19, X0
	0x03C327C4 BL 0x32D5CD4
	0x03C327C8 MOV X0, X31
	0x03C327CC BL 0x33C0128
	0x03C327D0 CBZ X19, 0x3C327F4
	0x03C327D4 CBZ X0, 0x3C327F8
	0x03C327D8 LDR X1, [X19 + 0x10]
	0x03C327DC MOV X2, X31
	0x03C327E0 BL 0x33C0150
	0x03C327E4 LDP X20, X19, [X31 + 0x10]
	0x03C327E8 LDR X30, [X31], #0x20
	0x03C327EC RET
	0x03C327F0 BL 0x1C16F20
	0x03C327F4 BL 0x1C16F20
	0x03C327F8 BL 0x1C16F20
	0x03C327FC B 0x3C32808
	0x03C32800 B 0x3C32808
	0x03C32804 B 0x3C32808
	0x03C32808 MOV X19, X0
	0x03C3280C CMP W1, 0x1
	0x03C32810 B.NE 0x3C32870
	0x03C32814 MOV X0, X19
	0x03C32818 BL 0x3EB1AD0
	0x03C3281C MOV X19, X0
	0x03C32820 ADRP X0, 0x4C7000
	0x03C32824 LDR X0, [X0 + 0xCC0]
	0x03C32828 BL 0x1C16D08
	0x03C3282C LDR X8, [X19]
	0x03C32830 LDR X1, [X8]
	0x03C32834 BL 0x1C17270
	0x03C32838 TBZ X0, 0x0, 0x3C32848
	0x03C3283C BL 0x3EB1AE0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7B4000
	007 Move W8, [X21+673]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4CE000
	015 Move X0, [X0+1816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+673], W8
	019 Move X0, [X19+24]
	020 Move X1, X20
	021 Move X2, X31
	022 Call Delegate.Remove, X0, X1
	023 Compare X0, 0
	024 JumpIfEqual {43}
	025 Move X22, 0x4CE000
	026 Move X22, [X22+1816]
	027 Move X20, X0
	028 Move X21, [X22]
	029 Move X1, X21
	030 Call 0x1C17E00
	031 Compare X0, 0
	032 JumpIfEqual {50}
	033 Move [X19+24], X0
	034 Move X19, [X22]
	035 Move X0, X20
	036 Move X1, X19
	037 Call 0x1C17E00
	038 Compare X0, 0
	039 JumpIfNotEqual {44}
	040 Move X0, X20
	041 Move X1, X19
	042 Call 0x1C181E0
	043 Move [X19+24], X31
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return 
	050 Move X0, X20
	051 Move X1, X21
	052 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x03C31D74 LDP X22, X21, [X31 + 0x40]
	0x03C31D78 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

