Type: UnityEngine.Material

Method: System.Void CreateWithShader(UnityEngine.Material self, UnityEngine.Shader shader)

Disassembly:
	0x03C15488 STR X0, [X22 + 0x980]
	0x03C1548C MOV X0, X21
	0x03C15490 MOV W1, W20
	0x03C15494 MOV X2, X19
	0x03C15498 LDP X20, X19, [X31 + 0x20]
	0x03C1549C LDP X22, X21, [X31 + 0x10]
	0x03C154A0 LDR X30, [X31], #0x30
	0x03C154A4 BR X3
	0x03C154A8 STR X30, [X31 - 0x30]!
	0x03C154AC STP X22, X21, [X31 + 0x10]
	0x03C154B0 STP X20, X19, [X31 + 0x20]
	0x03C154B4 ADRP X22, 0x7CF000
	0x03C154B8 LDR X3, [X22 + 0x988]
	0x03C154BC MOV X19, X2
	0x03C154C0 MOV W20, W1
	0x03C154C4 MOV X21, X0
	0x03C154C8 CBNZ X3, 0x3C154E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2136]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51339264
	012 Add X0, X0, 2882
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2136], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void CreateWithMaterial(UnityEngine.Material self, UnityEngine.Material source)

Disassembly:
	0x03C154CC ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C154D0 ADD X0, X0, 0xFE5
	0x03C154D4 BL 0x1C16CB8
	0x03C154D8 MOV X3, X0
	0x03C154DC STR X0, [X22 + 0x988]
	0x03C154E0 MOV X0, X21
	0x03C154E4 MOV W1, W20
	0x03C154E8 MOV X2, X19
	0x03C154EC LDP X20, X19, [X31 + 0x20]
	0x03C154F0 LDP X22, X21, [X31 + 0x10]
	0x03C154F4 LDR X30, [X31], #0x30
	0x03C154F8 BR X3
	0x03C154FC STR X30, [X31 - 0x30]!
	0x03C15500 STP X22, X21, [X31 + 0x10]
	0x03C15504 STP X20, X19, [X31 + 0x20]
	0x03C15508 ADRP X22, 0x7CF000
	0x03C1550C LDR X3, [X22 + 0x988]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2144]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51462144
	012 Add X0, X0, 3578
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2144], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void CreateWithString(UnityEngine.Material self)

Disassembly:
	0x03C15510 MOV X19, X2
	0x03C15514 MOV W20, W1
	0x03C15518 MOV X21, X0
	0x03C1551C CBNZ X3, 0x3C15534
	0x03C15520 ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C15524 ADD X0, X0, 0xFE5
	0x03C15528 BL 0x1C16CB8
	0x03C1552C MOV X3, X0
	0x03C15530 STR X0, [X22 + 0x988]
	0x03C15534 MOV X0, X21
	0x03C15538 MOV W1, W20
	0x03C1553C MOV X2, X19
	0x03C15540 LDP X20, X19, [X31 + 0x20]
	0x03C15544 LDP X22, X21, [X31 + 0x10]
	0x03C15548 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D0000
	005 Move X1, [X20+2152]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51372032
	010 Add X0, X0, 2165
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2152], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor(UnityEngine.Shader shader)

Disassembly:
	0x03C1554C BR X3
	0x03C15550 STR X30, [X31 - 0x30]!
	0x03C15554 STP X22, X21, [X31 + 0x10]
	0x03C15558 STP X20, X19, [X31 + 0x20]
	0x03C1555C ADRP X22, 0x7CF000
	0x03C15560 LDR X3, [X22 + 0x948]
	0x03C15564 MOV X19, X2
	0x03C15568 MOV W20, W1
	0x03C1556C MOV X21, X0
	0x03C15570 CBNZ X3, 0x3C15588
	0x03C15574 ADRP X0, 0xFFFFFFFFFCF0D000
	0x03C15578 ADD X0, X0, 0xE54
	0x03C1557C BL 0x1C16CB8
	0x03C15580 MOV X3, X0
	0x03C15584 STR X0, [X22 + 0x948]
	0x03C15588 MOV X0, X21
	0x03C1558C MOV W1, W20
	0x03C15590 MOV X2, X19
	0x03C15594 LDP X20, X19, [X31 + 0x20]
	0x03C15598 LDP X22, X21, [X31 + 0x10]
	0x03C1559C LDR X30, [X31], #0x30
	0x03C155A0 BR X3
	0x03C155A4 STR X30, [X31 - 0x40]!
	0x03C155A8 STP X24, X23, [X31 + 0x10]
	0x03C155AC STP X22, X21, [X31 + 0x20]
	0x03C155B0 STP X20, X19, [X31 + 0x30]
	0x03C155B4 ADRP X24, 0x7CF000
	0x03C155B8 LDR X5, [X24 + 0x950]
	0x03C155BC MOV W19, W4
	0x03C155C0 MOV W20, W3
	0x03C155C4 MOV X21, X2
	0x03C155C8 MOV W22, W1
	0x03C155CC MOV X23, X0
	0x03C155D0 CBNZ X5, 0x3C155E8
	0x03C155D4 ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C155D8 ADD X0, X0, 0xE3C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7D0000
	007 Move X22, 0x4DF000
	008 Move W8, [X21+2160]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4DF000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2160], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call Object..ctor, X0
	029 Move X21, 0x7D0000
	030 Move X2, [X21+2136]
	031 Compare X2, 0
	032 JumpIfNotEqual {38}
	033 Move X0, -51339264
	034 Add X0, X0, 2882
	035 Call 0x1C17CB8
	036 Move X2, X0
	037 Move [X21+2136], X0
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 CallNoReturn X2

Method: System.Void .ctor(UnityEngine.Material source)

Disassembly:
	0x03C155DC BL 0x1C16CB8
	0x03C155E0 MOV X5, X0
	0x03C155E4 STR X0, [X24 + 0x950]
	0x03C155E8 MOV X0, X23
	0x03C155EC MOV W1, W22
	0x03C155F0 MOV X2, X21
	0x03C155F4 MOV W3, W20
	0x03C155F8 MOV W4, W19
	0x03C155FC LDP X20, X19, [X31 + 0x30]
	0x03C15600 LDP X22, X21, [X31 + 0x20]
	0x03C15604 LDP X24, X23, [X31 + 0x10]
	0x03C15608 LDR X30, [X31], #0x40
	0x03C1560C BR X5
	0x03C15610 STP X30, X21, [X31 - 0x20]!
	0x03C15614 STP X20, X19, [X31 + 0x10]
	0x03C15618 ADRP X21, 0x7CF000
	0x03C1561C LDR X2, [X21 + 0x958]
	0x03C15620 MOV W19, W1
	0x03C15624 MOV X20, X0
	0x03C15628 CBNZ X2, 0x3C15640
	0x03C1562C ADRP X0, 0xFFFFFFFFFCEE4000
	0x03C15630 ADD X0, X0, 0x3E
	0x03C15634 BL 0x1C16CB8
	0x03C15638 MOV X2, X0
	0x03C1563C STR X0, [X21 + 0x958]
	0x03C15640 MOV X0, X20
	0x03C15644 MOV W1, W19
	0x03C15648 LDP X20, X19, [X31 + 0x10]
	0x03C1564C LDP X30, X21, [X31], #0x20
	0x03C15650 BR X2
	0x03C15654 SUB X31, X31, 0x30
	0x03C15658 STP X30, X21, [X31 + 0x10]
	0x03C1565C STP X20, X19, [X31 + 0x20]
	0x03C15660 ADRP X21, 0x7CF000
	0x03C15664 LDR X8, [X21 + 0x990]
	0x03C15668 MOV W19, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7D0000
	007 Move X22, 0x4DF000
	008 Move W8, [X21+2161]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4DF000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2161], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call Object..ctor, X0
	029 Move X21, 0x7D0000
	030 Move X2, [X21+2144]
	031 Compare X2, 0
	032 JumpIfNotEqual {38}
	033 Move X0, -51462144
	034 Add X0, X0, 3578
	035 Call 0x1C17CB8
	036 Move X2, X0
	037 Move [X21+2144], X0
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 CallNoReturn X2

Method: System.Void .ctor(System.String contents)

Disassembly:
	0x03C1566C MOV X20, X0
	0x03C15670 STP X31, X31, [X31]
	0x03C15674 CBNZ X8, 0x3C1568C
	0x03C15678 ADRP X0, 0xFFFFFFFFFCF0F000
	0x03C1567C ADD X0, X0, 0xB38
	0x03C15680 BL 0x1C16CB8
	0x03C15684 MOV X8, X0
	0x03C15688 STR X0, [X21 + 0x990]
	0x03C1568C ADD X2, X31, 0x0
	0x03C15690 MOV X0, X20
	0x03C15694 MOV W1, W19
	0x03C15698 BLR X8
	0x03C1569C LDP S0, S1, [X31]
	0x03C156A0 LDP S2, S3, [X31 + 0x8]
	0x03C156A4 LDP X20, X19, [X31 + 0x20]
	0x03C156A8 LDP X30, X21, [X31 + 0x10]
	0x03C156AC ADD X31, X31, 0x30
	0x03C156B0 RET
	0x03C156B4 STR X30, [X31 - 0x30]!
	0x03C156B8 STP X22, X21, [X31 + 0x10]
	0x03C156BC STP X20, X19, [X31 + 0x20]
	0x03C156C0 ADRP X22, 0x7CF000
	0x03C156C4 LDR X3, [X22 + 0x990]
	0x03C156C8 MOV X19, X2
	0x03C156CC MOV W20, W1
	0x03C156D0 MOV X21, X0
	0x03C156D4 CBNZ X3, 0x3C156EC
	0x03C156D8 ADRP X0, 0xFFFFFFFFFCF0F000
	0x03C156DC ADD X0, X0, 0xB38
	0x03C156E0 BL 0x1C16CB8
	0x03C156E4 MOV X3, X0
	0x03C156E8 STR X0, [X22 + 0x990]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7D0000
	006 Move X21, 0x4DF000
	007 Move W8, [X20+2162]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4DF000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2162], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move X20, 0x7D0000
	028 Move X1, [X20+2152]
	029 Compare X1, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51372032
	032 Add X0, X0, 2165
	033 Call 0x1C17CB8
	034 Move X1, X0
	035 Move [X20+2152], X0
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 CallNoReturn X1

Method: UnityEngine.Material GetDefaultMaterial()

Disassembly:
	0x03C156EC MOV X0, X21
	0x03C156F0 MOV W1, W20
	0x03C156F4 MOV X2, X19
	0x03C156F8 LDP X20, X19, [X31 + 0x20]
	0x03C156FC LDP X22, X21, [X31 + 0x10]
	0x03C15700 LDR X30, [X31], #0x30
	0x03C15704 BR X3
	0x03C15708 STP X30, X21, [X31 - 0x20]!
	0x03C1570C STP X20, X19, [X31 + 0x10]
	0x03C15710 ADRP X21, 0x7CF000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D0000
	004 Move X0, [X19+2168]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51503104
	008 Add X0, X0, 4084
	009 Call 0x1C17CB8
	010 Move [X19+2168], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Shader get_shader()

Disassembly:
	0x03C15714 LDR X2, [X21 + 0x960]
	0x03C15718 MOV W19, W1
	0x03C1571C MOV X20, X0
	0x03C15720 CBNZ X2, 0x3C15738
	0x03C15724 ADRP X0, 0xFFFFFFFFFCF15000
	0x03C15728 ADD X0, X0, 0x70A
	0x03C1572C BL 0x1C16CB8
	0x03C15730 MOV X2, X0
	0x03C15734 STR X0, [X21 + 0x960]
	0x03C15738 MOV X0, X20
	0x03C1573C MOV W1, W19
	0x03C15740 LDP X20, X19, [X31 + 0x10]
	0x03C15744 LDP X30, X21, [X31], #0x20
	0x03C15748 BR X2
	0x03C1574C STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D0000
	005 Move X1, [X20+2176]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51453952
	010 Add X0, X0, 3633
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2176], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_shader(UnityEngine.Shader value)

Disassembly:
	0x03C15750 STP X22, X21, [X31 + 0x10]
	0x03C15754 STP X20, X19, [X31 + 0x20]
	0x03C15758 ADRP X23, 0x7CF000
	0x03C1575C LDR X4, [X23 + 0x968]
	0x03C15760 MOV W19, W3
	0x03C15764 MOV X20, X2
	0x03C15768 MOV W21, W1
	0x03C1576C MOV X22, X0
	0x03C15770 CBNZ X4, 0x3C15788
	0x03C15774 ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C15778 ADD X0, X0, 0xF92
	0x03C1577C BL 0x1C16CB8
	0x03C15780 MOV X4, X0
	0x03C15784 STR X0, [X23 + 0x968]
	0x03C15788 MOV X0, X22
	0x03C1578C MOV W1, W21
	0x03C15790 MOV X2, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2184]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51347456
	012 Add X0, X0, 3874
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2184], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Color get_color()

Disassembly:
	0x03C15794 MOV W3, W19
	0x03C15798 LDP X20, X19, [X31 + 0x20]
	0x03C1579C LDP X22, X21, [X31 + 0x10]
	0x03C157A0 LDP X30, X23, [X31], #0x30
	0x03C157A4 BR X4
	0x03C157A8 STP X30, X23, [X31 - 0x30]!
	0x03C157AC STP X22, X21, [X31 + 0x10]
	0x03C157B0 STP X20, X19, [X31 + 0x20]
	0x03C157B4 ADRP X23, 0x7CF000
	0x03C157B8 LDR X4, [X23 + 0x970]
	0x03C157BC MOV W19, W3
	0x03C157C0 MOV X20, X2
	0x03C157C4 MOV W21, W1
	0x03C157C8 MOV X22, X0
	0x03C157CC CBNZ X4, 0x3C157E4
	0x03C157D0 ADRP X0, 0xFFFFFFFFFCF13000
	0x03C157D4 ADD X0, X0, 0x630
	0x03C157D8 BL 0x1C16CB8
	0x03C157DC MOV X4, X0
	0x03C157E0 STR X0, [X23 + 0x970]
	0x03C157E4 MOV X0, X22
	0x03C157E8 MOV W1, W21
	0x03C157EC MOV X2, X20
	0x03C157F0 MOV W3, W19
	0x03C157F4 LDP X20, X19, [X31 + 0x20]
	0x03C157F8 LDP X22, X21, [X31 + 0x10]
	0x03C157FC LDP X30, X23, [X31], #0x30
	0x03C15800 BR X4
	0x03C15804 STP X30, X23, [X31 - 0x30]!
	0x03C15808 STP X22, X21, [X31 + 0x10]
	0x03C1580C STP X20, X19, [X31 + 0x20]
	0x03C15810 ADRP X23, 0x7CF000
	0x03C15814 LDR X4, [X23 + 0x978]
	0x03C15818 MOV W19, W3
	0x03C1581C MOV X20, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D0000
	005 Move W8, [X20+2192]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x507000
	012 Move X0, [X0+736]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2192], W8
	016 Move X20, 0x7D0000
	017 Move X8, [X20+2200]
	018 Compare X8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51290112
	021 Add X0, X0, 1703
	022 Call 0x1C17CB8
	023 Move X8, X0
	024 Move [X20+2200], X0
	025 Move W1, 256
	026 Move X0, X19
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move TEMP, X0
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {39}
	032 Move W1, W0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Call Material.GetColorImpl, X0, X1
	038 Return X0
	039 Move X8, 0x507000
	040 Move X8, [X8+736]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X1, [X8]
	045 Move X30, [X31+32]
	046 Call Material.GetColor, X0, X1
	047 Return X0

Method: System.Void set_color(UnityEngine.Color value)

Disassembly:
	0x03C158B4 MOV W1, W21
	0x03C158B8 MOV X2, X20
	0x03C158BC MOV W3, W19
	0x03C158C0 LDP X20, X19, [X31 + 0x20]
	0x03C158C4 LDP X22, X21, [X31 + 0x10]
	0x03C158C8 LDP X30, X23, [X31], #0x30
	0x03C158CC BR X4
	0x03C158D0 ADRP X0, 0x4E3000
	0x03C158D4 LDR X0, [X0 + 0x528]
	0x03C158D8 BL 0x1C16D08
	0x03C158DC BL 0x1C16F10
	0x03C158E0 MOV X19, X0
	0x03C158E4 ADRP X0, 0x4E8000
	0x03C158E8 LDR X0, [X0 + 0xED8]
	0x03C158EC BL 0x1C16D08
	0x03C158F0 MOV X1, X0
	0x03C158F4 MOV X0, X19
	0x03C158F8 MOV X2, X31
	0x03C158FC BL 0x330E100
	0x03C15900 B 0x3C15954
	0x03C15904 ADRP X0, 0x4E6000
	0x03C15908 LDR X0, [X0 + 0x578]
	0x03C1590C BL 0x1C16D08
	0x03C15910 BL 0x1C16F10
	0x03C15914 MOV X19, X0
	0x03C15918 ADRP X0, 0x549000
	0x03C1591C LDR X0, [X0 + 0xD98]
	0x03C15920 B 0x3C15940
	0x03C15924 ADRP X0, 0x4E6000
	0x03C15928 LDR X0, [X0 + 0x578]
	0x03C1592C BL 0x1C16D08
	0x03C15930 BL 0x1C16F10
	0x03C15934 MOV X19, X0
	0x03C15938 ADRP X0, 0x549000
	0x03C1593C LDR X0, [X0 + 0xDA0]
	0x03C15940 BL 0x1C16D08
	0x03C15944 MOV X1, X0
	0x03C15948 MOV X0, X19
	0x03C1594C MOV X2, X31
	0x03C15950 BL 0x3314A68
	0x03C15954 ADRP X0, 0x549000
	0x03C15958 LDR X0, [X0 + 0xDF0]
	0x03C1595C BL 0x1C16D08
	0x03C15960 MOV X1, X0
	0x03C15964 MOV X0, X19
	0x03C15968 BL 0x1C16DEC
	0x03C1596C STP X30, X23, [X31 - 0x30]!
	0x03C15970 STP X22, X21, [X31 + 0x10]
	0x03C15974 STP X20, X19, [X31 + 0x20]
	0x03C15978 CBZ X2, 0x3C159DC
	0x03C1597C LDR W8, [X2 + 0x18]
	0x03C15980 MOV X20, X2
	0x03C15984 CBZ W8, 0x3C15A10

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x7D0000
	009 Move W8, [X20+2193]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x507000
	020 Move X0, [X0+736]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2193], W8
	024 Move X20, 0x7D0000
	025 Move X8, [X20+2200]
	026 Compare X8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -51290112
	029 Add X0, X0, 1703
	030 Call 0x1C17CB8
	031 Move X8, X0
	032 Move [X20+2200], X0
	033 Move W1, 256
	034 Move X0, X19
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move TEMP, X0
	037 And TEMP, TEMP, -2147483648
	038 Compare TEMP, -2147483648
	039 JumpIfEqual {55}
	040 Move W1, W0
	041 Move X0, X19
	042 Move V2, V9
	043 Move V3, V8
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X30, [X31+32]
	047 Move D9, [X31+16]
	048 Move D8, [X31+24]
	049 Move V0, V11
	050 Move V1, V10
	051 Move D11, [X31+64]
	052 Move D10, [X31+72]
	053 Call Material.SetColorImpl, X0, X1, X2
	054 Return 
	055 Move X8, 0x507000
	056 Move X8, [X8+736]
	057 Move X0, X19
	058 Move V2, V9
	059 Move V3, V8
	060 Move X1, [X8]
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+32]
	064 Move D9, [X31+16]
	065 Move D8, [X31+24]
	066 Move V0, V11
	067 Move V1, V10
	068 Move D11, [X31+64]
	069 Move D10, [X31+72]
	070 Call Material.SetColor, X0, X1, X2
	071 Return 

Method: UnityEngine.Texture get_mainTexture()

Disassembly:
	0x03C15A08 BL 0x330E100
	0x03C15A0C B 0x3C15A60
	0x03C15A10 ADRP X0, 0x4E6000
	0x03C15A14 LDR X0, [X0 + 0x578]
	0x03C15A18 BL 0x1C16D08
	0x03C15A1C BL 0x1C16F10
	0x03C15A20 MOV X19, X0
	0x03C15A24 ADRP X0, 0x549000
	0x03C15A28 LDR X0, [X0 + 0xD98]
	0x03C15A2C B 0x3C15A4C
	0x03C15A30 ADRP X0, 0x4E6000
	0x03C15A34 LDR X0, [X0 + 0x578]
	0x03C15A38 BL 0x1C16D08
	0x03C15A3C BL 0x1C16F10
	0x03C15A40 MOV X19, X0
	0x03C15A44 ADRP X0, 0x549000
	0x03C15A48 LDR X0, [X0 + 0xDA0]
	0x03C15A4C BL 0x1C16D08
	0x03C15A50 MOV X1, X0
	0x03C15A54 MOV X0, X19
	0x03C15A58 MOV X2, X31
	0x03C15A5C BL 0x3314A68
	0x03C15A60 ADRP X0, 0x549000
	0x03C15A64 LDR X0, [X0 + 0xDF8]
	0x03C15A68 BL 0x1C16D08
	0x03C15A6C MOV X1, X0
	0x03C15A70 MOV X0, X19
	0x03C15A74 BL 0x1C16DEC
	0x03C15A78 STP X30, X23, [X31 - 0x30]!
	0x03C15A7C STP X22, X21, [X31 + 0x10]
	0x03C15A80 STP X20, X19, [X31 + 0x20]
	0x03C15A84 CBZ X2, 0x3C15AE8
	0x03C15A88 LDR W8, [X2 + 0x18]
	0x03C15A8C MOV X20, X2
	0x03C15A90 CBZ W8, 0x3C15B1C
	0x03C15A94 MOV W19, W3
	0x03C15A98 CMP W8, W3
	0x03C15A9C B.LT 0x3C15B3C
	0x03C15AA0 ADRP X23, 0x7CF000
	0x03C15AA4 LDR X4, [X23 + 0x978]
	0x03C15AA8 MOV W21, W1
	0x03C15AAC MOV X22, X0
	0x03C15AB0 CBNZ X4, 0x3C15AC8
	0x03C15AB4 ADRP X0, 0xFFFFFFFFFCEFB000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7D0000
	006 Move W8, [X20+2194]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x539000
	013 Move X0, [X0+2816]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2194], W8
	017 Move X20, 0x7D0000
	018 Move X8, [X20+2200]
	019 Compare X8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51290112
	022 Add X0, X0, 1703
	023 Call 0x1C17CB8
	024 Move X8, X0
	025 Move [X20+2200], X0
	026 Move W1, 128
	027 Move X0, X19
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move TEMP, X0
	030 And TEMP, TEMP, -2147483648
	031 Compare TEMP, -2147483648
	032 JumpIfEqual {50}
	033 Move X21, 0x7D0000
	034 Move X2, [X21+2400]
	035 Move W20, W0
	036 Compare X2, 0
	037 JumpIfNotEqual {43}
	038 Move X0, -51290112
	039 Add X0, X0, 1802
	040 Call 0x1C17CB8
	041 Move X2, X0
	042 Move [X21+2400], X0
	043 Move X0, X19
	044 Move W1, W20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 CallNoReturn X2
	050 Move X8, 0x539000
	051 Move X8, [X8+2816]
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X1, [X8]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call Material.GetTexture, X0, X1
	059 Return X0

Method: System.Void set_mainTexture(UnityEngine.Texture value)

Disassembly:
	0x03C15B6C ADRP X0, 0x549000
	0x03C15B70 LDR X0, [X0 + 0xE00]
	0x03C15B74 BL 0x1C16D08
	0x03C15B78 MOV X1, X0
	0x03C15B7C MOV X0, X19
	0x03C15B80 BL 0x1C16DEC
	0x03C15B84 STR X30, [X31 - 0x30]!
	0x03C15B88 STP X22, X21, [X31 + 0x10]
	0x03C15B8C STP X20, X19, [X31 + 0x20]
	0x03C15B90 ADRP X22, 0x7CF000
	0x03C15B94 LDR X8, [X22 + 0x810]
	0x03C15B98 MOV W19, W2
	0x03C15B9C MOV X21, X1
	0x03C15BA0 MOV X20, X0
	0x03C15BA4 CBNZ X8, 0x3C15BBC
	0x03C15BA8 ADRP X0, 0xFFFFFFFFFCF07000
	0x03C15BAC ADD X0, X0, 0xE80
	0x03C15BB0 BL 0x1C16CB8
	0x03C15BB4 MOV X8, X0
	0x03C15BB8 STR X0, [X22 + 0x810]
	0x03C15BBC MOV X0, X21
	0x03C15BC0 BLR X8
	0x03C15BC4 ADRP X22, 0x7CF000
	0x03C15BC8 LDR X2, [X22 + 0x940]
	0x03C15BCC MOV W21, W0
	0x03C15BD0 CBNZ X2, 0x3C15BE8
	0x03C15BD4 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C15BD8 ADD X0, X0, 0x9E
	0x03C15BDC BL 0x1C16CB8
	0x03C15BE0 MOV X2, X0
	0x03C15BE4 STR X0, [X22 + 0x940]
	0x03C15BE8 SCVTF S0, W19
	0x03C15BEC MOV X0, X20
	0x03C15BF0 MOV W1, W21
	0x03C15BF4 LDP X20, X19, [X31 + 0x20]
	0x03C15BF8 LDP X22, X21, [X31 + 0x10]
	0x03C15BFC LDR X30, [X31], #0x30
	0x03C15C00 BR X2
	0x03C15C04 STR X30, [X31 - 0x30]!
	0x03C15C08 STP X22, X21, [X31 + 0x10]
	0x03C15C0C STP X20, X19, [X31 + 0x20]
	0x03C15C10 ADRP X22, 0x7CF000
	0x03C15C14 MOV W20, W2
	0x03C15C18 LDR X2, [X22 + 0x940]
	0x03C15C1C MOV W19, W1
	0x03C15C20 MOV X21, X0
	0x03C15C24 CBNZ X2, 0x3C15C3C
	0x03C15C28 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C15C2C ADD X0, X0, 0x9E
	0x03C15C30 BL 0x1C16CB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7D0000
	007 Move W8, [X21+2195]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x539000
	015 Move X0, [X0+2816]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2195], W8
	019 Move X21, 0x7D0000
	020 Move X8, [X21+2200]
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51290112
	024 Add X0, X0, 1703
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X21+2200], X0
	028 Move W1, 128
	029 Move X0, X20
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, -2147483648
	033 Compare TEMP, -2147483648
	034 JumpIfEqual {54}
	035 Move X22, 0x7D0000
	036 Move X3, [X22+2376]
	037 Move W21, W0
	038 Compare X3, 0
	039 JumpIfNotEqual {45}
	040 Move X0, -51322880
	041 Add X0, X0, 3668
	042 Call 0x1C17CB8
	043 Move X3, X0
	044 Move [X22+2376], X0
	045 Move X0, X20
	046 Move W1, W21
	047 Move X2, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 CallNoReturn X3
	054 Move X8, 0x539000
	055 Move X8, [X8+2816]
	056 Move X0, X20
	057 Move X2, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X1, [X8]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Call Material.SetTexture, X0, X1, X2
	065 Return 

Method: System.Int32 GetFirstPropertyNameIdByAttribute(UnityEngine.Rendering.ShaderPropertyFlags attributeFlag)

Disassembly:
	0x03C15820 MOV W21, W1
	0x03C15824 MOV X22, X0
	0x03C15828 CBNZ X4, 0x3C15840
	0x03C1582C ADRP X0, 0xFFFFFFFFFCEFB000
	0x03C15830 ADD X0, X0, 0xF9B
	0x03C15834 BL 0x1C16CB8
	0x03C15838 MOV X4, X0
	0x03C1583C STR X0, [X23 + 0x978]
	0x03C15840 MOV X0, X22
	0x03C15844 MOV W1, W21
	0x03C15848 MOV X2, X20
	0x03C1584C MOV W3, W19
	0x03C15850 LDP X20, X19, [X31 + 0x20]
	0x03C15854 LDP X22, X21, [X31 + 0x10]
	0x03C15858 LDP X30, X23, [X31], #0x30
	0x03C1585C BR X4
	0x03C15860 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2200]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51290112
	012 Add X0, X0, 1703
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2200], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean HasProperty(System.Int32 nameID)

Disassembly:
	0x03C15D08 MOV X2, X0
	0x03C15D0C STR X0, [X21 + 0x940]
	0x03C15D10 MOV X0, X20
	0x03C15D14 MOV W1, W19
	0x03C15D18 LDP X20, X19, [X31 + 0x20]
	0x03C15D1C LDP X30, X21, [X31 + 0x10]
	0x03C15D20 MOV V0.16B, V8.16B
	0x03C15D24 LDR V8, [X31], #0x30
	0x03C15D28 BR X2
	0x03C15D2C STR X30, [X31 - 0x30]!
	0x03C15D30 STP X22, X21, [X31 + 0x10]
	0x03C15D34 STP X20, X19, [X31 + 0x20]
	0x03C15D38 ADRP X22, 0x7CF000
	0x03C15D3C LDR X3, [X22 + 0x938]
	0x03C15D40 MOV W19, W2
	0x03C15D44 MOV W20, W1
	0x03C15D48 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2208]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51507200
	012 Add X0, X0, 498
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2208], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean HasProperty(System.String name)

Disassembly:
	0x03C15D4C CBNZ X3, 0x3C15D64
	0x03C15D50 ADRP X0, 0xFFFFFFFFFCF13000
	0x03C15D54 ADD X0, X0, 0x5F4
	0x03C15D58 BL 0x1C16CB8
	0x03C15D5C MOV X3, X0
	0x03C15D60 STR X0, [X22 + 0x938]
	0x03C15D64 MOV X0, X21
	0x03C15D68 MOV W1, W20
	0x03C15D6C MOV W2, W19
	0x03C15D70 LDP X20, X19, [X31 + 0x20]
	0x03C15D74 LDP X22, X21, [X31 + 0x10]
	0x03C15D78 LDR X30, [X31], #0x30
	0x03C15D7C BR X3
	0x03C15D80 B 0x3C153F8
	0x03C15D84 SUB X31, X31, 0x60
	0x03C15D88 STP X30, X21, [X31 + 0x40]
	0x03C15D8C STP X20, X19, [X31 + 0x50]
	0x03C15D90 ADRP X21, 0x7CF000
	0x03C15D94 LDP V0, V1, [X2 + 0x20]
	0x03C15D98 LDP V2, V3, [X2]
	0x03C15D9C LDR X8, [X21 + 0x988]
	0x03C15DA0 MOV W19, W1
	0x03C15DA4 MOV X20, X0
	0x03C15DA8 STP V0, V1, [X31 + 0x20]
	0x03C15DAC STP V2, V3, [X31]
	0x03C15DB0 CBNZ X8, 0x3C15DC8
	0x03C15DB4 ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C15DB8 ADD X0, X0, 0xFE5

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X8, [X21+2064]
	007 Move X20, X1
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51347456
	012 Add X0, X0, 3712
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X21+2064], X0
	016 Move X0, X20
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X21, 0x7D0000
	019 Move X2, [X21+2208]
	020 Move W20, W0
	021 Compare X2, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51507200
	024 Add X0, X0, 498
	025 Call 0x1C17CB8
	026 Move X2, X0
	027 Move [X21+2208], X0
	028 Move X0, X19
	029 Move W1, W20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 CallNoReturn X2

Method: System.Void set_renderQueue(System.Int32 value)

Disassembly:
	0x03C15DBC BL 0x1C16CB8
	0x03C15DC0 MOV X8, X0
	0x03C15DC4 STR X0, [X21 + 0x988]
	0x03C15DC8 ADD X2, X31, 0x0
	0x03C15DCC MOV X0, X20
	0x03C15DD0 MOV W1, W19
	0x03C15DD4 BLR X8
	0x03C15DD8 LDP X20, X19, [X31 + 0x50]
	0x03C15DDC LDP X30, X21, [X31 + 0x40]
	0x03C15DE0 ADD X31, X31, 0x60
	0x03C15DE4 RET
	0x03C15DE8 STR X30, [X31 - 0x40]!
	0x03C15DEC STP X24, X23, [X31 + 0x10]
	0x03C15DF0 STP X22, X21, [X31 + 0x20]
	0x03C15DF4 STP X20, X19, [X31 + 0x30]
	0x03C15DF8 ADRP X24, 0x7CF000
	0x03C15DFC LDR X5, [X24 + 0x950]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2216]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51490816
	012 Add X0, X0, 10
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2216], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_rawRenderQueue()

Disassembly:
	0x03C15E00 MOV W19, W4
	0x03C15E04 MOV W20, W3
	0x03C15E08 MOV X21, X2
	0x03C15E0C MOV W22, W1
	0x03C15E10 MOV X23, X0
	0x03C15E14 CBNZ X5, 0x3C15E2C
	0x03C15E18 ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C15E1C ADD X0, X0, 0xE3C
	0x03C15E20 BL 0x1C16CB8
	0x03C15E24 MOV X5, X0
	0x03C15E28 STR X0, [X24 + 0x950]
	0x03C15E2C MOV X0, X23
	0x03C15E30 MOV W1, W22
	0x03C15E34 MOV X2, X21
	0x03C15E38 MOV W3, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D0000
	005 Move X1, [X20+2224]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51363840
	010 Add X0, X0, 2058
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2224], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void EnableKeyword(System.String keyword)

Disassembly:
	0x03C15E3C MOV W4, W19
	0x03C15E40 LDP X20, X19, [X31 + 0x30]
	0x03C15E44 LDP X22, X21, [X31 + 0x20]
	0x03C15E48 LDP X24, X23, [X31 + 0x10]
	0x03C15E4C LDR X30, [X31], #0x40
	0x03C15E50 BR X5
	0x03C15E54 STR X30, [X31 - 0x10]!
	0x03C15E58 CBZ X2, 0x3C15E68
	0x03C15E5C LDR W3, [X2 + 0x18]
	0x03C15E60 LDR X30, [X31], #0x10
	0x03C15E64 B 0x3C15860
	0x03C15E68 BL 0x1C16F20
	0x03C15E6C STR X30, [X31 - 0x10]!
	0x03C15E70 CBZ X2, 0x3C15E80
	0x03C15E74 LDR W3, [X2 + 0x18]
	0x03C15E78 LDR X30, [X31], #0x10
	0x03C15E7C B 0x3C1596C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2232]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51474432
	012 Add X0, X0, 815
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2232], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void DisableKeyword(System.String keyword)

Disassembly:
	0x03C15E80 BL 0x1C16F20
	0x03C15E84 STR X30, [X31 - 0x10]!
	0x03C15E88 CBZ X2, 0x3C15E98
	0x03C15E8C LDR W3, [X2 + 0x18]
	0x03C15E90 LDR X30, [X31], #0x10
	0x03C15E94 B 0x3C15A78
	0x03C15E98 BL 0x1C16F20
	0x03C15E9C STP X30, X21, [X31 - 0x20]!
	0x03C15EA0 STP X20, X19, [X31 + 0x10]
	0x03C15EA4 ADRP X21, 0x7CF000
	0x03C15EA8 LDR X8, [X21 + 0x810]
	0x03C15EAC MOV X20, X1
	0x03C15EB0 MOV X19, X0
	0x03C15EB4 CBNZ X8, 0x3C15ECC
	0x03C15EB8 ADRP X0, 0xFFFFFFFFFCF07000
	0x03C15EBC ADD X0, X0, 0xE80
	0x03C15EC0 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2240]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51347456
	012 Add X0, X0, 3927
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2240], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean IsKeywordEnabled(System.String keyword)

Disassembly:
	0x03C15EC4 MOV X8, X0
	0x03C15EC8 STR X0, [X21 + 0x810]
	0x03C15ECC MOV X0, X20
	0x03C15ED0 BLR X8
	0x03C15ED4 ADRP X21, 0x7CF000
	0x03C15ED8 LDR X8, [X21 + 0x958]
	0x03C15EDC MOV W20, W0
	0x03C15EE0 CBNZ X8, 0x3C15EF8
	0x03C15EE4 ADRP X0, 0xFFFFFFFFFCEE4000
	0x03C15EE8 ADD X0, X0, 0x3E
	0x03C15EEC BL 0x1C16CB8
	0x03C15EF0 MOV X8, X0
	0x03C15EF4 STR X0, [X21 + 0x958]
	0x03C15EF8 MOV X0, X19
	0x03C15EFC MOV W1, W20
	0x03C15F00 BLR X8
	0x03C15F04 MOVZ W8, 0x7F800000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2248]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51527680
	012 Add X0, X0, 3590
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2248], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetEnabledKeywords(UnityEngine.Rendering.LocalKeyword[] keywords)

Disassembly:
	0x03C15F08 LDP X20, X19, [X31 + 0x10]
	0x03C15F0C FMOV S1, W8
	0x03C15F10 FCVTZS W9, S0
	0x03C15F14 FCMP S0, S1
	0x03C15F18 MOVZ W8, 0x80000000
	0x03C15F1C CSEL W0, W8, W9, EQ
	0x03C15F20 LDP X30, X21, [X31], #0x20
	0x03C15F24 RET
	0x03C15F28 STP X30, X21, [X31 - 0x20]!
	0x03C15F2C STP X20, X19, [X31 + 0x10]
	0x03C15F30 ADRP X21, 0x7CF000
	0x03C15F34 LDR X8, [X21 + 0x810]
	0x03C15F38 MOV X20, X1
	0x03C15F3C MOV X19, X0
	0x03C15F40 CBNZ X8, 0x3C15F58
	0x03C15F44 ADRP X0, 0xFFFFFFFFFCF07000
	0x03C15F48 ADD X0, X0, 0xE80

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2256]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51466240
	012 Add X0, X0, 2
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2256], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_enabledKeywords(UnityEngine.Rendering.LocalKeyword[] value)

Disassembly:
	0x03C15F4C BL 0x1C16CB8
	0x03C15F50 MOV X8, X0
	0x03C15F54 STR X0, [X21 + 0x810]
	0x03C15F58 MOV X0, X20
	0x03C15F5C BLR X8
	0x03C15F60 ADRP X21, 0x7CF000
	0x03C15F64 LDR X2, [X21 + 0x958]
	0x03C15F68 MOV W20, W0
	0x03C15F6C CBNZ X2, 0x3C15F84
	0x03C15F70 ADRP X0, 0xFFFFFFFFFCEE4000
	0x03C15F74 ADD X0, X0, 0x3E
	0x03C15F78 BL 0x1C16CB8
	0x03C15F7C MOV X2, X0
	0x03C15F80 STR X0, [X21 + 0x958]
	0x03C15F84 MOV X0, X19
	0x03C15F88 MOV W1, W20
	0x03C15F8C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2256]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51466240
	012 Add X0, X0, 2
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2256], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_enableInstancing()

Disassembly:
	0x03C1068C ADRP X0, 0x54E000
	0x03C10690 LDR X0, [X0 + 0xD60]
	0x03C10694 BL 0x1C16CF4
	0x03C10698 MOVZ W8, 0x1
	0x03C1069C STRB W8, [X19 + 0x4C2]
	0x03C106A0 LDR X8, [X20]
	0x03C106A4 LDR X8, [X8 + 0xB8]
	0x03C106A8 LDR X8, [X8 + 0x10]
	0x03C106AC CBZ X8, 0x3C106C8
	0x03C106B0 LDR X2, [X8 + 0x18]
	0x03C106B4 LDR X0, [X8 + 0x40]
	0x03C106B8 LDR X1, [X8 + 0x28]
	0x03C106BC LDP X20, X19, [X31 + 0x10]
	0x03C106C0 LDR X30, [X31], #0x20
	0x03C106C4 BR X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D5000
	005 Move X1, [X20+2264]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51286016
	010 Add X0, X0, 3124
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2264], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_enableInstancing(System.Boolean value)

Disassembly:
	0x03C15F90 LDP X30, X21, [X31], #0x20
	0x03C15F94 BR X2
	0x03C15F98 STP X30, X21, [X31 - 0x20]!
	0x03C15F9C STP X20, X19, [X31 + 0x10]
	0x03C15FA0 ADRP X21, 0x7CF000
	0x03C15FA4 LDR X2, [X21 + 0x958]
	0x03C15FA8 MOV W19, W1
	0x03C15FAC MOV X20, X0
	0x03C15FB0 CBNZ X2, 0x3C15FC8
	0x03C15FB4 ADRP X0, 0xFFFFFFFFFCEE4000
	0x03C15FB8 ADD X0, X0, 0x3E
	0x03C15FBC BL 0x1C16CB8
	0x03C15FC0 MOV X2, X0
	0x03C15FC4 STR X0, [X21 + 0x958]
	0x03C15FC8 MOV X0, X20
	0x03C15FCC MOV W1, W19
	0x03C15FD0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2272]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51400704
	012 Add X0, X0, 389
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2272], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_passCount()

Disassembly:
	0x03C15FD4 LDP X30, X21, [X31], #0x20
	0x03C15FD8 BR X2
	0x03C15FDC B 0x3C15654
	0x03C15FE0 STP X30, X21, [X31 - 0x20]!
	0x03C15FE4 STP X20, X19, [X31 + 0x10]
	0x03C15FE8 MOV X19, X0
	0x03C15FEC MOV W1, W31
	0x03C15FF0 BL 0x3C16078
	0x03C15FF4 MOV X0, X19
	0x03C15FF8 LDP X20, X19, [X31 + 0x10]
	0x03C15FFC MOV X1, X31
	0x03C16000 LDP X30, X21, [X31], #0x20
	0x03C16004 B 0x33CB4DC
	0x03C16008 CMP W1, 0x1
	0x03C1600C MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D0000
	005 Move X1, [X20+2280]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51535872
	010 Add X0, X0, 3626
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2280], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 FindPass(System.String passName)

Disassembly:
	0x03C16010 B.NE 0x3C16040
	0x03C16014 MOV X0, X21
	0x03C16018 BL 0x3EB1AD0
	0x03C1601C LDR X20, [X0]
	0x03C16020 BL 0x3EB1AE0
	0x03C16024 MOV X0, X19
	0x03C16028 MOV X1, X31
	0x03C1602C BL 0x33CB4DC
	0x03C16030 CBNZ X20, 0x3C16048
	0x03C16034 LDP X20, X19, [X31 + 0x10]
	0x03C16038 LDP X30, X21, [X31], #0x20
	0x03C1603C RET
	0x03C16040 MOV X20, X31
	0x03C16044 B 0x3C16054
	0x03C16048 MOV X0, X20
	0x03C1604C BL 0x1C16F18
	0x03C16050 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CF000
	006 Move X2, [X21+2288]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51441664
	012 Add X0, X0, 3905
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2288], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetOverrideTag(System.String tag, System.String val)

Disassembly:
	0x03C16054 MOV X0, X19
	0x03C16058 MOV X1, X31
	0x03C1605C BL 0x33CB4DC
	0x03C16060 CBNZ X20, 0x3C1606C
	0x03C16064 MOV X0, X21
	0x03C16068 BL 0x1D2C690
	0x03C1606C MOV X0, X20
	0x03C16070 BL 0x1C16F18
	0x03C16074 BL 0x1990590
	0x03C16078 STP X30, X21, [X31 - 0x20]!
	0x03C1607C STP X20, X19, [X31 + 0x10]
	0x03C16080 ADRP X21, 0x7CE000
	0x03C16084 LDRB W8, [X21 + 0x999]
	0x03C16088 MOV W20, W1
	0x03C1608C MOV X19, X0
	0x03C16090 TBNZ X8, 0x0, 0x3C160B4
	0x03C16094 ADRP X0, 0x4DD000
	0x03C16098 LDR X0, [X0 + 0xA28]
	0x03C1609C BL 0x1C16CF4
	0x03C160A0 ADRP X0, 0x548000
	0x03C160A4 LDR X0, [X0 + 0xE08]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7CF000
	007 Move X3, [X22+2296]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51326976
	014 Add X0, X0, 3560
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2296], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.String GetTagImpl(System.String tag, System.Boolean currentSubShaderOnly, System.String defaultValue)

Disassembly:
	0x03C160A8 BL 0x1C16CF4
	0x03C160AC MOVZ W8, 0x1
	0x03C160B0 STRB W8, [X21 + 0x999]
	0x03C160B4 TBZ X20, 0x0, 0x3C160E4
	0x03C160B8 ADRP X20, 0x7CE000
	0x03C160BC LDR X8, [X20 + 0x9A8]
	0x03C160C0 CBNZ X8, 0x3C160D8
	0x03C160C4 ADRP X0, 0xFFFFFFFFFCF04000
	0x03C160C8 ADD X0, X0, 0xA8D
	0x03C160CC BL 0x1C16CB8
	0x03C160D0 MOV X8, X0
	0x03C160D4 STR X0, [X20 + 0x9A8]
	0x03C160D8 MOV X0, X19
	0x03C160DC BLR X8
	0x03C160E0 B 0x3C16120
	0x03C160E4 LDR X0, [X19 + 0x10]
	0x03C160E8 MOV X1, X31
	0x03C160EC MOV X2, X31
	0x03C160F0 BL 0x33C5D2C
	0x03C160F4 TBZ X0, 0x0, 0x3C16120
	0x03C160F8 ADRP X8, 0x4DD000
	0x03C160FC LDR X8, [X8 + 0xA28]
	0x03C16100 LDR X0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7CF000
	008 Move X4, [X23+2304]
	009 Move X19, X3
	010 Move W21, W2
	011 Move X20, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51470336
	016 Add X0, X0, 81
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+2304], X0
	020 And W2, W21, 1
	021 Move X0, X22
	022 Move X1, X20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.String GetTag(System.String tag, System.Boolean searchFallbacks)

Disassembly:
	0x03C16104 LDR W8, [X0 + 0xE0]
	0x03C16108 CBNZ W8, 0x3C16110
	0x03C1610C BL 0x1C16DFC
	0x03C16110 ADRP X8, 0x548000
	0x03C16114 LDR X8, [X8 + 0xE08]
	0x03C16118 LDR X0, [X8]
	0x03C1611C BL 0x3C06A04
	0x03C16120 STR X31, [X19 + 0x10]
	0x03C16124 LDP X20, X19, [X31 + 0x10]
	0x03C16128 LDP X30, X21, [X31], #0x20
	0x03C1612C RET
	0x03C16130 STP X30, X21, [X31 - 0x20]!
	0x03C16134 STP X20, X19, [X31 + 0x10]
	0x03C16138 ADRP X21, 0x7CE000
	0x03C1613C ADRP X20, 0x4E4000
	0x03C16140 LDRB W8, [X21 + 0x998]
	0x03C16144 LDR X20, [X20 + 0xC10]
	0x03C16148 MOV X19, X0
	0x03C1614C TBNZ X8, 0x0, 0x3C16164
	0x03C16150 ADRP X0, 0x4E4000
	0x03C16154 LDR X0, [X0 + 0xC10]
	0x03C16158 BL 0x1C16CF4
	0x03C1615C MOVZ W8, 0x1
	0x03C16160 STRB W8, [X21 + 0x998]
	0x03C16164 MOVZ W1, 0x1
	0x03C16168 MOV X0, X19
	0x03C1616C BL 0x3C16078
	0x03C16170 LDR X0, [X20]
	0x03C16174 LDR W8, [X0 + 0xE0]
	0x03C16178 CBNZ W8, 0x3C16180
	0x03C1617C BL 0x1C16DFC
	0x03C16180 MOV X0, X19
	0x03C16184 LDP X20, X19, [X31 + 0x10]
	0x03C16188 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7CF000
	008 Move X22, 0x4DE000
	009 Move W8, [X23+2312]
	010 Move X22, [X22+2440]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x4DE000
	019 Move X0, [X0+2440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2312], W8
	023 Move X23, 0x7CF000
	024 Move X4, [X23+2304]
	025 Move X22, [X22]
	026 Compare X4, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -51470336
	029 Add X0, X0, 81
	030 Call 0x1C17CB8
	031 Move X4, X0
	032 Move [X23+2304], X0
	033 NotImplemented "Instruction ORN not yet implemented."
	034 Move X0, X20
	035 Move X1, X19
	036 Move X3, X22
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 And W2, W8, 1
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 CallNoReturn X4

Method: System.Boolean SetPass(System.Int32 pass)

Disassembly:
	0x03C1618C LDP X30, X21, [X31], #0x20
	0x03C16190 B 0x33B3E9C
	0x03C16194 STR X30, [X31 - 0x20]!
	0x03C16198 STP X20, X19, [X31 + 0x10]
	0x03C1619C ADRP X20, 0x7CE000
	0x03C161A0 LDR X1, [X20 + 0x9A8]
	0x03C161A4 MOV X19, X0
	0x03C161A8 CBNZ X1, 0x3C161C0
	0x03C161AC ADRP X0, 0xFFFFFFFFFCF04000
	0x03C161B0 ADD X0, X0, 0xA8D
	0x03C161B4 BL 0x1C16CB8
	0x03C161B8 MOV X1, X0
	0x03C161BC STR X0, [X20 + 0x9A8]
	0x03C161C0 MOV X0, X19
	0x03C161C4 LDP X20, X19, [X31 + 0x10]
	0x03C161C8 LDR X30, [X31], #0x20
	0x03C161CC BR X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CF000
	006 Move X2, [X21+2320]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51445760
	012 Add X0, X0, 275
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2320], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void CopyPropertiesFromMaterial(UnityEngine.Material mat)

Disassembly:
	0x03C161D0 ANDS W31, W0, 0x1F0
	0x03C161D4 CSET W0, NE
	0x03C161D8 RET
	0x03C161DC CMP W0, 0x10
	0x03C161E0 CSET W0, CC
	0x03C161E4 RET
	0x03C161E8 STP X30, X23, [X31 - 0x30]!
	0x03C161EC STP X22, X21, [X31 + 0x10]
	0x03C161F0 STP X20, X19, [X31 + 0x20]
	0x03C161F4 ADRP X23, 0x7CE000
	0x03C161F8 LDR X4, [X23 + 0x9A0]
	0x03C161FC MOV W19, W3
	0x03C16200 MOV W20, W2
	0x03C16204 MOV W21, W1
	0x03C16208 MOV W22, W0
	0x03C1620C CBNZ X4, 0x3C16224
	0x03C16210 ADRP X0, 0xFFFFFFFFFCEEF000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CF000
	006 Move X2, [X21+2328]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51392512
	012 Add X0, X0, 2816
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2328], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.String[] GetShaderKeywords()

Disassembly:
	0x03C16214 ADD X0, X0, 0x13F
	0x03C16218 BL 0x1C16CB8
	0x03C1621C MOV X4, X0
	0x03C16220 STR X0, [X23 + 0x9A0]
	0x03C16224 MOV W0, W22
	0x03C16228 MOV W1, W21
	0x03C1622C MOV W2, W20
	0x03C16230 MOV W3, W19
	0x03C16234 LDP X20, X19, [X31 + 0x20]
	0x03C16238 LDP X22, X21, [X31 + 0x10]
	0x03C1623C LDP X30, X23, [X31], #0x30
	0x03C16240 BR X4
	0x03C16244 STR X30, [X31 - 0x30]!
	0x03C16248 STP X22, X21, [X31 + 0x10]
	0x03C1624C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CF000
	005 Move X1, [X20+2336]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51326976
	010 Add X0, X0, 3626
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2336], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetShaderKeywords(System.String[] names)

Disassembly:
	0x03C16250 MOV W21, W1
	0x03C16254 MOV X1, X31
	0x03C16258 MOV W19, W3
	0x03C1625C MOV W20, W2
	0x03C16260 MOV X22, X0
	0x03C16264 BL 0x33BDD8C
	0x03C16268 CMP W21, 0x4
	0x03C1626C MOV X0, X22
	0x03C16270 MOV W1, W21
	0x03C16274 MOV W3, W20
	0x03C16278 MOV W4, W19
	0x03C1627C LDP X20, X19, [X31 + 0x20]
	0x03C16280 LDP X22, X21, [X31 + 0x10]
	0x03C16284 CSET W2, CC
	0x03C16288 LDR X30, [X31], #0x30
	0x03C1628C B 0x3C16290
	0x03C16290 SUB X31, X31, 0x60

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CF000
	006 Move X2, [X21+2344]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51486720
	012 Add X0, X0, 333
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2344], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.String[] get_shaderKeywords()

Disassembly:
	0x03C16294 STR X30, [X31 + 0x20]
	0x03C16298 STP X24, X23, [X31 + 0x30]
	0x03C1629C STP X22, X21, [X31 + 0x40]
	0x03C162A0 STP X20, X19, [X31 + 0x50]
	0x03C162A4 MOV W21, W4
	0x03C162A8 MOV W22, W3
	0x03C162AC MOV W23, W2
	0x03C162B0 MOV W19, W1
	0x03C162B4 MOV X20, X0
	0x03C162B8 ANDS W31, W1, 0x1F0
	0x03C162BC STR W4, [X31 + 0x2C]
	0x03C162C0 B.EQ 0x3C162D0
	0x03C162C4 MOV X0, X31
	0x03C162C8 BL 0x3C3BCFC
	0x03C162CC TBZ X0, 0x0, 0x3C164AC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CF000
	005 Move X1, [X20+2336]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51326976
	010 Add X0, X0, 3626
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2336], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_shaderKeywords(System.String[] value)

Disassembly:
	0x03C162D0 CMP W22, 0x0
	0x03C162D4 B.LE 0x3C16370
	0x03C162D8 CMP W21, 0x0
	0x03C162DC B.LE 0x3C163A0
	0x03C162E0 TBZ X19, 0x1, 0x3C162F4
	0x03C162E4 CMP W21, 0x2
	0x03C162E8 B.EQ 0x3C162F4
	0x03C162EC CMP W21, 0x4
	0x03C162F0 B.NE 0x3C16528
	0x03C162F4 CMP W19, 0x10
	0x03C162F8 B.CC 0x3C16304
	0x03C162FC AND W8, W21, 0x3
	0x03C16300 CBNZ W8, 0x3C163C0
	0x03C16304 MOV X0, X31
	0x03C16308 UMADDL X24, X21, X22, X31
	0x03C1630C BL 0x3C3AC20
	0x03C16310 CMP X24, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CF000
	006 Move X2, [X21+2344]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51486720
	012 Add X0, X0, 333
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2344], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 ComputeCRC()

Disassembly:
	0x03C16314 B.GT 0x3C16408
	0x03C16318 TBZ X19, 0x3, 0x3C16320
	0x03C1631C TBNZ X23, 0x0, 0x3C16464
	0x03C16320 ADRP X24, 0x7CE000
	0x03C16324 LDR X8, [X24 + 0x9A0]
	0x03C16328 CBNZ X8, 0x3C16340
	0x03C1632C ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C16330 ADD X0, X0, 0x13F
	0x03C16334 BL 0x1C16CB8
	0x03C16338 MOV X8, X0
	0x03C1633C STR X0, [X24 + 0x9A0]
	0x03C16340 MOV W0, W19
	0x03C16344 MOV W1, W23
	0x03C16348 MOV W2, W22
	0x03C1634C MOV W3, W21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CF000
	005 Move X1, [X20+2352]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51441664
	010 Add X0, X0, 3951
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2352], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetIntImpl(System.Int32 name, System.Int32 value)

Disassembly:
	0x03C16350 BLR X8
	0x03C16354 STR X0, [X20 + 0x10]
	0x03C16358 LDP X20, X19, [X31 + 0x50]
	0x03C1635C LDP X22, X21, [X31 + 0x40]
	0x03C16360 LDP X24, X23, [X31 + 0x30]
	0x03C16364 LDR X30, [X31 + 0x20]
	0x03C16368 ADD X31, X31, 0x60
	0x03C1636C RET
	0x03C16370 ADRP X0, 0x4E5000
	0x03C16374 LDR X0, [X0 + 0x578]
	0x03C16378 BL 0x1C16D08
	0x03C1637C BL 0x1C16F10
	0x03C16380 MOV X19, X0
	0x03C16384 ADRP X0, 0x548000
	0x03C16388 LDR X0, [X0 + 0xE10]
	0x03C1638C BL 0x1C16D08
	0x03C16390 MOV X20, X0
	0x03C16394 ADRP X0, 0x505000
	0x03C16398 LDR X0, [X0 + 0x648]
	0x03C1639C B 0x3C163EC
	0x03C163A0 ADRP X0, 0x4E5000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7CF000
	007 Move X3, [X22+2360]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51302400
	014 Add X0, X0, 1524
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2360], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetFloatImpl(System.Int32 name, System.Single value)

Disassembly:
	0x03C163A4 LDR X0, [X0 + 0x578]
	0x03C163A8 BL 0x1C16D08
	0x03C163AC BL 0x1C16F10
	0x03C163B0 MOV X19, X0
	0x03C163B4 ADRP X0, 0x548000
	0x03C163B8 LDR X0, [X0 + 0xE18]
	0x03C163BC B 0x3C163DC
	0x03C163C0 ADRP X0, 0x4E5000
	0x03C163C4 LDR X0, [X0 + 0x578]
	0x03C163C8 BL 0x1C16D08
	0x03C163CC BL 0x1C16F10
	0x03C163D0 MOV X19, X0
	0x03C163D4 ADRP X0, 0x548000
	0x03C163D8 LDR X0, [X0 + 0xE20]
	0x03C163DC BL 0x1C16D08
	0x03C163E0 MOV X20, X0
	0x03C163E4 ADRP X0, 0x506000
	0x03C163E8 LDR X0, [X0 + 0x150]
	0x03C163EC BL 0x1C16D08
	0x03C163F0 MOV X2, X0
	0x03C163F4 MOV X0, X19

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7CF000
	007 Move X2, [X21+2368]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51470336
	014 Add X0, X0, 158
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+2368], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void SetColorImpl(System.Int32 name, UnityEngine.Color value)

Disassembly:
	0x03C163F8 MOV X1, X20
	0x03C163FC MOV X3, X31
	0x03C16400 BL 0x330E16C
	0x03C16404 B 0x3C16494
	0x03C16408 STR X24, [X31 + 0x8]
	0x03C1640C ADRP X19, 0x4DF000
	0x03C16410 LDR X19, [X19 + 0xA60]
	0x03C16414 MOV X21, X0
	0x03C16418 MOV X0, X19
	0x03C1641C BL 0x1C16D08
	0x03C16420 ADD X1, X31, 0x8
	0x03C16424 BL 0x1C16E04
	0x03C16428 MOV X20, X0
	0x03C1642C MOV X0, X19
	0x03C16430 STR X21, [X31]
	0x03C16434 BL 0x1C16D08
	0x03C16438 ADD X1, X31, 0x0
	0x03C1643C BL 0x1C16E04
	0x03C16440 MOV X19, X0
	0x03C16444 ADRP X0, 0x548000
	0x03C16448 LDR X0, [X0 + 0xE28]
	0x03C1644C BL 0x1C16D08
	0x03C16450 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7CF000
	007 Move X8, [X21+2432]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31], S0
	011 Move [X31+8], S1
	012 Move [X31+8], S2
	013 Move [X31+16], S3
	014 Compare X8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, -51367936
	017 Add X0, X0, 2101
	018 Call 0x1C17CB8
	019 Move X8, X0
	020 Move [X21+2432], X0
	021 Add X2, X31, 0
	022 Move X0, X20
	023 Move W1, W19
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return 

Method: System.Void SetMatrixImpl(System.Int32 name, UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C164A8 BL 0x1C16DEC
	0x03C164AC ADRP X0, 0x548000
	0x03C164B0 LDR X0, [X0 + 0xE40]
	0x03C164B4 BL 0x1C16D08
	0x03C164B8 MOVN X8, 0x0
	0x03C164BC STP X0, X8, [X31 + 0x8]
	0x03C164C0 ADD X0, X31, 0x8
	0x03C164C4 MOV X1, X31
	0x03C164C8 STR W19, [X31 + 0x18]
	0x03C164CC BL 0x33B162C
	0x03C164D0 MOV X19, X0
	0x03C164D4 ADRP X0, 0x548000
	0x03C164D8 LDR X0, [X0 + 0xE48]
	0x03C164DC BL 0x1C16D08
	0x03C164E0 MOV X1, X19
	0x03C164E4 MOV X2, X31
	0x03C164E8 BL 0x321B938
	0x03C164EC MOV X19, X0
	0x03C164F0 ADRP X0, 0x4E5000
	0x03C164F4 LDR X0, [X0 + 0x578]
	0x03C164F8 BL 0x1C16D08

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7CF000
	007 Move X3, [X22+2440]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51441664
	014 Add X0, X0, 4069
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2440], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetTextureImpl(System.Int32 name, UnityEngine.Texture value)

Disassembly:
	0x03C16550 MOV X19, X0
	0x03C16554 ADRP X0, 0x4E5000
	0x03C16558 LDR X0, [X0 + 0x578]
	0x03C1655C BL 0x1C16D08
	0x03C16560 BL 0x1C16F10
	0x03C16564 MOV X20, X0
	0x03C16568 ADRP X0, 0x506000
	0x03C1656C LDR X0, [X0 + 0x150]
	0x03C16570 BL 0x1C16D08
	0x03C16574 MOV X2, X0
	0x03C16578 MOV X0, X20
	0x03C1657C MOV X1, X19
	0x03C16580 MOV X3, X31
	0x03C16584 BL 0x330E16C
	0x03C16588 B 0x3C16510
	0x03C1658C B 0x3C16130
	0x03C16590 STP X30, X25, [X31 - 0x40]!
	0x03C16594 STP X24, X23, [X31 + 0x10]
	0x03C16598 STP X22, X21, [X31 + 0x20]
	0x03C1659C STP X20, X19, [X31 + 0x30]
	0x03C165A0 ADRP X25, 0x7CE000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7CF000
	007 Move X3, [X22+2376]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51326976
	014 Add X0, X0, 3668
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2376], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetConstantBufferImpl(System.Int32 name, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03C165A4 LDR X6, [X25 + 0x9B0]
	0x03C165A8 MOV W19, W5
	0x03C165AC MOV W20, W4
	0x03C165B0 MOV W21, W3
	0x03C165B4 MOV W22, W2
	0x03C165B8 MOV X23, X1
	0x03C165BC MOV X24, X0
	0x03C165C0 CBNZ X6, 0x3C165D8
	0x03C165C4 ADRP X0, 0xFFFFFFFFFCEF2000
	0x03C165C8 ADD X0, X0, 0xFE2
	0x03C165CC BL 0x1C16CB8
	0x03C165D0 MOV X6, X0
	0x03C165D4 STR X0, [X25 + 0x9B0]
	0x03C165D8 MOV X0, X24
	0x03C165DC MOV X1, X23
	0x03C165E0 MOV W2, W22
	0x03C165E4 MOV W3, W21
	0x03C165E8 MOV W4, W20
	0x03C165EC MOV W5, W19
	0x03C165F0 LDP X20, X19, [X31 + 0x30]
	0x03C165F4 LDP X22, X21, [X31 + 0x20]
	0x03C165F8 LDP X24, X23, [X31 + 0x10]
	0x03C165FC LDP X30, X25, [X31], #0x40
	0x03C16600 BR X6
	0x03C16604 STP X30, X21, [X31 - 0x20]!
	0x03C16608 STP X20, X19, [X31 + 0x10]
	0x03C1660C ADRP X21, 0x7CE000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7CF000
	009 Move X5, [X24+2384]
	010 Move W19, W4
	011 Move W20, W3
	012 Move X21, X2
	013 Move W22, W1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51531776
	018 Add X0, X0, 3644
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+2384], X0
	022 Move X0, X23
	023 Move W1, W22
	024 Move X2, X21
	025 Move W3, W20
	026 Move W4, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Single GetFloatImpl(System.Int32 name)

Disassembly:
	0x03C16610 LDR X2, [X21 + 0x9B8]
	0x03C16614 MOV X19, X1
	0x03C16618 MOV X20, X0
	0x03C1661C CBNZ X2, 0x3C16634
	0x03C16620 ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C16624 ADD X0, X0, 0x922
	0x03C16628 BL 0x1C16CB8
	0x03C1662C MOV X2, X0
	0x03C16630 STR X0, [X21 + 0x9B8]
	0x03C16634 MOV X0, X20
	0x03C16638 MOV X1, X19
	0x03C1663C LDP X20, X19, [X31 + 0x10]
	0x03C16640 LDP X30, X21, [X31], #0x20
	0x03C16644 BR X2
	0x03C16648 STP X30, X21, [X31 - 0x20]!
	0x03C1664C STP X20, X19, [X31 + 0x10]
	0x03C16650 ADRP X21, 0x7CE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CF000
	006 Move X2, [X21+2392]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51494912
	012 Add X0, X0, 62
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2392], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Color GetColorImpl(System.Int32 name)

Disassembly:
	0x03C16654 LDR X2, [X21 + 0x9B8]
	0x03C16658 MOV X19, X1
	0x03C1665C MOV X20, X0
	0x03C16660 CBNZ X2, 0x3C16678
	0x03C16664 ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C16668 ADD X0, X0, 0x922
	0x03C1666C BL 0x1C16CB8
	0x03C16670 MOV X2, X0
	0x03C16674 STR X0, [X21 + 0x9B8]
	0x03C16678 MOV X0, X20
	0x03C1667C MOV X1, X19
	0x03C16680 LDP X20, X19, [X31 + 0x10]
	0x03C16684 LDP X30, X21, [X31], #0x20
	0x03C16688 BR X2
	0x03C1668C STR X30, [X31 - 0x20]!
	0x03C16690 STP X20, X19, [X31 + 0x10]
	0x03C16694 ADRP X20, 0x7CE000
	0x03C16698 LDR X1, [X20 + 0x9C0]
	0x03C1669C MOV X19, X0
	0x03C166A0 CBNZ X1, 0x3C166B8
	0x03C166A4 ADRP X0, 0xFFFFFFFFFCEEC000
	0x03C166A8 ADD X0, X0, 0xE54
	0x03C166AC BL 0x1C16CB8
	0x03C166B0 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7CF000
	007 Move X8, [X21+2448]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31], X31
	011 Move [X31+8], X31
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51318784
	015 Add X0, X0, 2872
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X21+2448], X0
	019 Add X2, X31, 0
	020 Move X0, X20
	021 Move W1, W19
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move S0, [X31]
	024 Move S1, [X31+4]
	025 Move S2, [X31+8]
	026 Move S3, [X31+12]
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return X0

Method: UnityEngine.Texture GetTextureImpl(System.Int32 name)

Disassembly:
	0x03C16708 STP X20, X19, [X31 + 0x10]
	0x03C1670C ADRP X20, 0x7CE000
	0x03C16710 LDR X1, [X20 + 0x9D0]
	0x03C16714 MOV X19, X0
	0x03C16718 CBNZ X1, 0x3C16730
	0x03C1671C ADRP X0, 0xFFFFFFFFFCEF5000
	0x03C16720 ADD X0, X0, 0x14D
	0x03C16724 BL 0x1C16CB8
	0x03C16728 MOV X1, X0
	0x03C1672C STR X0, [X20 + 0x9D0]
	0x03C16730 MOV X0, X19
	0x03C16734 LDP X20, X19, [X31 + 0x10]
	0x03C16738 LDR X30, [X31], #0x20
	0x03C1673C BR X1
	0x03C16740 SUB X31, X31, 0x30
	0x03C16744 STP X31, X30, [X31 + 0x8]
	0x03C16748 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CF000
	006 Move X2, [X21+2400]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51294208
	012 Add X0, X0, 1802
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2400], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetFloatArrayImpl(System.Int32 name, System.Single[] values, System.Int32 count)

Disassembly:
	0x03C1674C ADRP X20, 0x7CE000
	0x03C16750 LDR X8, [X20 + 0xA50]
	0x03C16754 MOV X19, X0
	0x03C16758 STR X31, [X31]
	0x03C1675C CBNZ X8, 0x3C16774
	0x03C16760 ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C16764 ADD X0, X0, 0x6F
	0x03C16768 BL 0x1C16CB8
	0x03C1676C MOV X8, X0
	0x03C16770 STR X0, [X20 + 0xA50]
	0x03C16774 ADD X1, X31, 0x0
	0x03C16778 MOV X0, X19
	0x03C1677C BLR X8
	0x03C16780 LDP S0, S1, [X31]
	0x03C16784 LDP S2, S3, [X31 + 0x8]
	0x03C16788 LDP X20, X19, [X31 + 0x20]
	0x03C1678C LDR X30, [X31 + 0x10]
	0x03C16790 ADD X31, X31, 0x30
	0x03C16794 RET
	0x03C16798 STP X30, X21, [X31 - 0x20]!
	0x03C1679C STP X20, X19, [X31 + 0x10]
	0x03C167A0 ADRP X21, 0x7CE000
	0x03C167A4 LDR X2, [X21 + 0xA50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7CF000
	008 Move X4, [X23+2408]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51441664
	016 Add X0, X0, 3986
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+2408], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetVectorArrayImpl(System.Int32 name, UnityEngine.Vector4[] values, System.Int32 count)

Disassembly:
	0x03C167A8 MOV X19, X1
	0x03C167AC MOV X20, X0
	0x03C167B0 CBNZ X2, 0x3C167C8
	0x03C167B4 ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C167B8 ADD X0, X0, 0x6F
	0x03C167BC BL 0x1C16CB8
	0x03C167C0 MOV X2, X0
	0x03C167C4 STR X0, [X21 + 0xA50]
	0x03C167C8 MOV X0, X20
	0x03C167CC MOV X1, X19
	0x03C167D0 LDP X20, X19, [X31 + 0x10]
	0x03C167D4 LDP X30, X21, [X31], #0x20
	0x03C167D8 BR X2
	0x03C167DC SUB X31, X31, 0x30
	0x03C167E0 STR X30, [X31 + 0x10]
	0x03C167E4 STP X20, X19, [X31 + 0x20]
	0x03C167E8 ADRP X20, 0x7CE000
	0x03C167EC LDR X8, [X20 + 0xA58]
	0x03C167F0 MOV X19, X0
	0x03C167F4 STP S0, S1, [X31]
	0x03C167F8 STP S2, S3, [X31 + 0x8]
	0x03C167FC CBNZ X8, 0x3C16814
	0x03C16800 ADRP X0, 0xFFFFFFFFFCEE1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7CF000
	008 Move X4, [X23+2416]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51302400
	016 Add X0, X0, 1584
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+2416], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetMatrixArrayImpl(System.Int32 name, UnityEngine.Matrix4x4[] values, System.Int32 count)

Disassembly:
	0x03C16804 ADD X0, X0, 0x1F
	0x03C16808 BL 0x1C16CB8
	0x03C1680C MOV X8, X0
	0x03C16810 STR X0, [X20 + 0xA58]
	0x03C16814 ADD X1, X31, 0x0
	0x03C16818 MOV X0, X19
	0x03C1681C BLR X8
	0x03C16820 LDP X20, X19, [X31 + 0x20]
	0x03C16824 LDR X30, [X31 + 0x10]
	0x03C16828 ADD X31, X31, 0x30
	0x03C1682C RET
	0x03C16830 STP X30, X21, [X31 - 0x20]!
	0x03C16834 STP X20, X19, [X31 + 0x10]
	0x03C16838 ADRP X21, 0x7CE000
	0x03C1683C LDR X2, [X21 + 0xA58]
	0x03C16840 MOV X19, X1
	0x03C16844 MOV X20, X0
	0x03C16848 CBNZ X2, 0x3C16860
	0x03C1684C ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C16850 ADD X0, X0, 0x1F
	0x03C16854 BL 0x1C16CB8
	0x03C16858 MOV X2, X0
	0x03C1685C STR X0, [X21 + 0xA58]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7CF000
	008 Move X4, [X23+2424]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51400704
	016 Add X0, X0, 3995
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+2424], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetFloatArray(System.Int32 name, System.Single[] values, System.Int32 count)

Disassembly:
	0x03C16860 MOV X0, X20
	0x03C16864 MOV X1, X19
	0x03C16868 LDP X20, X19, [X31 + 0x10]
	0x03C1686C LDP X30, X21, [X31], #0x20
	0x03C16870 BR X2
	0x03C16874 STR X30, [X31 - 0x20]!
	0x03C16878 STP X20, X19, [X31 + 0x10]
	0x03C1687C ADRP X20, 0x7CE000
	0x03C16880 LDR X1, [X20 + 0x9D8]
	0x03C16884 MOV X19, X0
	0x03C16888 CBNZ X1, 0x3C168A0
	0x03C1688C ADRP X0, 0xFFFFFFFFFCF14000
	0x03C16890 ADD X0, X0, 0x73D
	0x03C16894 BL 0x1C16CB8
	0x03C16898 MOV X1, X0
	0x03C1689C STR X0, [X20 + 0x9D8]
	0x03C168A0 MOV X0, X19
	0x03C168A4 LDP X20, X19, [X31 + 0x10]
	0x03C168A8 LDR X30, [X31], #0x20
	0x03C168AC BR X1
	0x03C168B0 STR X30, [X31 - 0x20]!
	0x03C168B4 STP X20, X19, [X31 + 0x10]
	0x03C168B8 ADRP X20, 0x7CE000
	0x03C168BC LDR X1, [X20 + 0x9E0]
	0x03C168C0 MOV X19, X0
	0x03C168C4 CBNZ X1, 0x3C168DC
	0x03C168C8 ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C168CC ADD X0, X0, 0x37
	0x03C168D0 BL 0x1C16CB8
	0x03C168D4 MOV X1, X0
	0x03C168D8 STR X0, [X20 + 0x9E0]
	0x03C168DC MOV X0, X19
	0x03C168E0 LDP X20, X19, [X31 + 0x10]
	0x03C168E4 LDR X30, [X31], #0x20
	0x03C168E8 BR X1
	0x03C168EC STR X30, [X31 - 0x20]!
	0x03C168F0 STP X20, X19, [X31 + 0x10]
	0x03C168F4 ADRP X20, 0x7CE000
	0x03C168F8 LDR X1, [X20 + 0x9E8]
	0x03C168FC MOV X19, X0
	0x03C16900 CBNZ X1, 0x3C16918
	0x03C16904 ADRP X0, 0xFFFFFFFFFCF16000
	0x03C16908 ADD X0, X0, 0x749
	0x03C1690C BL 0x1C16CB8
	0x03C16910 MOV X1, X0
	0x03C16914 STR X0, [X20 + 0x9E8]
	0x03C16918 MOV X0, X19
	0x03C1691C LDP X20, X19, [X31 + 0x10]
	0x03C16920 LDR X30, [X31], #0x20
	0x03C16924 BR X1
	0x03C16928 STR D8, [X31 - 0x20]!
	0x03C1692C STR X30, [X31 + 0x8]
	0x03C16930 STP X20, X19, [X31 + 0x10]
	0x03C16934 ADRP X20, 0x7CE000
	0x03C16938 LDR X1, [X20 + 0x9F0]
	0x03C1693C MOV V8.16B, V0.16B
	0x03C16940 MOV X19, X0
	0x03C16944 CBNZ X1, 0x3C1695C
	0x03C16948 ADRP X0, 0xFFFFFFFFFCF02000
	0x03C1694C ADD X0, X0, 0x882
	0x03C16950 BL 0x1C16CB8
	0x03C16954 MOV X1, X0
	0x03C16958 STR X0, [X20 + 0x9F0]
	0x03C1695C MOV X0, X19
	0x03C16960 LDP X20, X19, [X31 + 0x10]
	0x03C16964 LDR X30, [X31 + 0x8]
	0x03C16968 MOV V0.16B, V8.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X2, 0
	008 JumpIfEqual {37}
	009 Move W8, [X2+24]
	010 Move X20, X2
	011 Compare W8, 0
	012 JumpIfEqual {49}
	013 Move W19, W3
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X23, 0x7CF000
	016 Move X4, [X23+2408]
	017 Move W21, W1
	018 Move X22, X0
	019 Compare X4, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51441664
	022 Add X0, X0, 3986
	023 Call 0x1C17CB8
	024 Move X4, X0
	025 Move [X23+2408], X0
	026 Move X0, X22
	027 Move W1, W21
	028 Move X2, X20
	029 Move W3, W19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 CallNoReturn X4
	037 Move X0, 0x4E3000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0x4E8000
	043 Move X0, [X0+3800]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentNullException..ctor, X0, X1
	049 Move X0, 0x4E6000
	050 Move X0, [X0+1400]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x549000
	055 Move X0, [X0+3480]
	056 Move X0, 0x4E6000
	057 Move X0, [X0+1400]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x549000
	062 Move X0, [X0+3488]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentException..ctor, X0, X1
	068 Move X0, 0x549000
	069 Move X0, [X0+3568]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC

Method: System.Void SetVectorArray(System.Int32 name, UnityEngine.Vector4[] values, System.Int32 count)

Disassembly:
	0x03C1696C LDR V8, [X31], #0x20
	0x03C16970 BR X1
	0x03C16974 STR X30, [X31 - 0x20]!
	0x03C16978 STP X20, X19, [X31 + 0x10]
	0x03C1697C ADRP X20, 0x7CE000
	0x03C16980 LDR X1, [X20 + 0x9F8]
	0x03C16984 MOV X19, X0
	0x03C16988 CBNZ X1, 0x3C169A0
	0x03C1698C ADRP X0, 0xFFFFFFFFFCEFC000
	0x03C16990 ADD X0, X0, 0xB47
	0x03C16994 BL 0x1C16CB8
	0x03C16998 MOV X1, X0
	0x03C1699C STR X0, [X20 + 0x9F8]
	0x03C169A0 MOV X0, X19
	0x03C169A4 LDP X20, X19, [X31 + 0x10]
	0x03C169A8 LDR X30, [X31], #0x20
	0x03C169AC BR X1
	0x03C169B0 STR X30, [X31 - 0x20]!
	0x03C169B4 STP X20, X19, [X31 + 0x10]
	0x03C169B8 ADRP X20, 0x7CE000
	0x03C169BC LDR X1, [X20 + 0xA00]
	0x03C169C0 MOV X19, X0
	0x03C169C4 CBNZ X1, 0x3C169DC
	0x03C169C8 ADRP X0, 0xFFFFFFFFFCEE5000
	0x03C169CC ADD X0, X0, 0x186
	0x03C169D0 BL 0x1C16CB8
	0x03C169D4 MOV X1, X0
	0x03C169D8 STR X0, [X20 + 0xA00]
	0x03C169DC MOV X0, X19
	0x03C169E0 LDP X20, X19, [X31 + 0x10]
	0x03C169E4 LDR X30, [X31], #0x20
	0x03C169E8 BR X1
	0x03C169EC STR X30, [X31 - 0x20]!
	0x03C169F0 STP X20, X19, [X31 + 0x10]
	0x03C169F4 ADRP X20, 0x7CE000
	0x03C169F8 LDR X1, [X20 + 0xA08]
	0x03C169FC MOV X19, X0
	0x03C16A00 CBNZ X1, 0x3C16A18
	0x03C16A04 ADRP X0, 0xFFFFFFFFFCF0E000
	0x03C16A08 ADD X0, X0, 0xB85
	0x03C16A0C BL 0x1C16CB8
	0x03C16A10 MOV X1, X0
	0x03C16A14 STR X0, [X20 + 0xA08]
	0x03C16A18 MOV X0, X19
	0x03C16A1C LDP X20, X19, [X31 + 0x10]
	0x03C16A20 LDR X30, [X31], #0x20
	0x03C16A24 BR X1
	0x03C16A28 STR X30, [X31 - 0x20]!
	0x03C16A2C STP X20, X19, [X31 + 0x10]
	0x03C16A30 ADRP X20, 0x7CE000
	0x03C16A34 LDR X1, [X20 + 0xA10]
	0x03C16A38 MOV X19, X0
	0x03C16A3C CBNZ X1, 0x3C16A54
	0x03C16A40 ADRP X0, 0xFFFFFFFFFCED8000
	0x03C16A44 ADD X0, X0, 0xE50
	0x03C16A48 BL 0x1C16CB8
	0x03C16A4C MOV X1, X0
	0x03C16A50 STR X0, [X20 + 0xA10]
	0x03C16A54 MOV X0, X19
	0x03C16A58 LDP X20, X19, [X31 + 0x10]
	0x03C16A5C LDR X30, [X31], #0x20
	0x03C16A60 BR X1
	0x03C16A64 STR X30, [X31 - 0x20]!
	0x03C16A68 STP X20, X19, [X31 + 0x10]
	0x03C16A6C ADRP X20, 0x7CE000
	0x03C16A70 LDR X1, [X20 + 0xA18]
	0x03C16A74 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X2, 0
	008 JumpIfEqual {37}
	009 Move W8, [X2+24]
	010 Move X20, X2
	011 Compare W8, 0
	012 JumpIfEqual {49}
	013 Move W19, W3
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X23, 0x7CF000
	016 Move X4, [X23+2416]
	017 Move W21, W1
	018 Move X22, X0
	019 Compare X4, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51302400
	022 Add X0, X0, 1584
	023 Call 0x1C17CB8
	024 Move X4, X0
	025 Move [X23+2416], X0
	026 Move X0, X22
	027 Move W1, W21
	028 Move X2, X20
	029 Move W3, W19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 CallNoReturn X4
	037 Move X0, 0x4E3000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0x4E8000
	043 Move X0, [X0+3800]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentNullException..ctor, X0, X1
	049 Move X0, 0x4E6000
	050 Move X0, [X0+1400]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x549000
	055 Move X0, [X0+3480]
	056 Move X0, 0x4E6000
	057 Move X0, [X0+1400]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x549000
	062 Move X0, [X0+3488]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentException..ctor, X0, X1
	068 Move X0, 0x549000
	069 Move X0, [X0+3576]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC

Method: System.Void SetMatrixArray(System.Int32 name, UnityEngine.Matrix4x4[] values, System.Int32 count)

Disassembly:
	0x03C16A78 CBNZ X1, 0x3C16A90
	0x03C16A7C ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C16A80 ADD X0, X0, 0x362
	0x03C16A84 BL 0x1C16CB8
	0x03C16A88 MOV X1, X0
	0x03C16A8C STR X0, [X20 + 0xA18]
	0x03C16A90 MOV X0, X19
	0x03C16A94 LDP X20, X19, [X31 + 0x10]
	0x03C16A98 LDR X30, [X31], #0x20
	0x03C16A9C BR X1
	0x03C16AA0 SUB X31, X31, 0x40
	0x03C16AA4 STP X30, X21, [X31 + 0x20]
	0x03C16AA8 STP X20, X19, [X31 + 0x30]
	0x03C16AAC ADRP X21, 0x7CE000
	0x03C16AB0 MOV X19, X8
	0x03C16AB4 LDR X8, [X21 + 0xA60]
	0x03C16AB8 MOV X20, X0
	0x03C16ABC STP X31, X31, [X31 + 0x8]
	0x03C16AC0 STR W31, [X31 + 0x18]
	0x03C16AC4 CBNZ X8, 0x3C16ADC
	0x03C16AC8 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C16ACC ADD X0, X0, 0xE4E
	0x03C16AD0 BL 0x1C16CB8
	0x03C16AD4 MOV X8, X0
	0x03C16AD8 STR X0, [X21 + 0xA60]
	0x03C16ADC ADD X1, X31, 0x8
	0x03C16AE0 MOV X0, X20
	0x03C16AE4 BLR X8
	0x03C16AE8 LDR W8, [X31 + 0x18]
	0x03C16AEC LDUR V0, [X31 + 0x8]
	0x03C16AF0 LDP X30, X21, [X31 + 0x20]
	0x03C16AF4 STR W8, [X19 + 0x10]
	0x03C16AF8 STR V0, [X19]
	0x03C16AFC LDP X20, X19, [X31 + 0x30]
	0x03C16B00 ADD X31, X31, 0x40
	0x03C16B04 RET
	0x03C16B08 STP X30, X21, [X31 - 0x20]!
	0x03C16B0C STP X20, X19, [X31 + 0x10]
	0x03C16B10 ADRP X21, 0x7CE000
	0x03C16B14 LDR X2, [X21 + 0xA60]
	0x03C16B18 MOV X19, X1
	0x03C16B1C MOV X20, X0
	0x03C16B20 CBNZ X2, 0x3C16B38
	0x03C16B24 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C16B28 ADD X0, X0, 0xE4E
	0x03C16B2C BL 0x1C16CB8
	0x03C16B30 MOV X2, X0
	0x03C16B34 STR X0, [X21 + 0xA60]
	0x03C16B38 MOV X0, X20
	0x03C16B3C MOV X1, X19
	0x03C16B40 LDP X20, X19, [X31 + 0x10]
	0x03C16B44 LDP X30, X21, [X31], #0x20
	0x03C16B48 BR X2
	0x03C16B4C STP X30, X21, [X31 - 0x20]!
	0x03C16B50 STP X20, X19, [X31 + 0x10]
	0x03C16B54 ADRP X21, 0x7CE000
	0x03C16B58 LDR X2, [X21 + 0xA20]
	0x03C16B5C MOV W19, W1
	0x03C16B60 MOV X20, X0
	0x03C16B64 CBNZ X2, 0x3C16B7C
	0x03C16B68 ADRP X0, 0xFFFFFFFFFCF00000
	0x03C16B6C ADD X0, X0, 0x8B2
	0x03C16B70 BL 0x1C16CB8
	0x03C16B74 MOV X2, X0
	0x03C16B78 STR X0, [X21 + 0xA20]
	0x03C16B7C MOV X0, X20
	0x03C16B80 MOV W1, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X2, 0
	008 JumpIfEqual {37}
	009 Move W8, [X2+24]
	010 Move X20, X2
	011 Compare W8, 0
	012 JumpIfEqual {49}
	013 Move W19, W3
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X23, 0x7CF000
	016 Move X4, [X23+2424]
	017 Move W21, W1
	018 Move X22, X0
	019 Compare X4, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51400704
	022 Add X0, X0, 3995
	023 Call 0x1C17CB8
	024 Move X4, X0
	025 Move [X23+2424], X0
	026 Move X0, X22
	027 Move W1, W21
	028 Move X2, X20
	029 Move W3, W19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 CallNoReturn X4
	037 Move X0, 0x4E3000
	038 Move X0, [X0+1320]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X19, X0
	042 Move X0, 0x4E8000
	043 Move X0, [X0+3800]
	044 Call 0x1C17D08
	045 Move X1, X0
	046 Move X0, X19
	047 Move X2, X31
	048 Call ArgumentNullException..ctor, X0, X1
	049 Move X0, 0x4E6000
	050 Move X0, [X0+1400]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x549000
	055 Move X0, [X0+3480]
	056 Move X0, 0x4E6000
	057 Move X0, [X0+1400]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x549000
	062 Move X0, [X0+3488]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentException..ctor, X0, X1
	068 Move X0, 0x549000
	069 Move X0, [X0+3584]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC

Method: System.Void SetInt(System.String name, System.Int32 value)

Disassembly:
	0x03C16B84 LDP X20, X19, [X31 + 0x10]
	0x03C16B88 LDP X30, X21, [X31], #0x20
	0x03C16B8C BR X2
	0x03C16B90 STR X30, [X31 - 0x20]!
	0x03C16B94 STP X20, X19, [X31 + 0x10]
	0x03C16B98 ADRP X20, 0x7CE000
	0x03C16B9C LDR X1, [X20 + 0xA28]
	0x03C16BA0 MOV X19, X0
	0x03C16BA4 CBNZ X1, 0x3C16BBC
	0x03C16BA8 ADRP X0, 0xFFFFFFFFFCF02000
	0x03C16BAC ADD X0, X0, 0x8B2
	0x03C16BB0 BL 0x1C16CB8
	0x03C16BB4 MOV X1, X0
	0x03C16BB8 STR X0, [X20 + 0xA28]
	0x03C16BBC MOV X0, X19
	0x03C16BC0 LDP X20, X19, [X31 + 0x10]
	0x03C16BC4 LDR X30, [X31], #0x20
	0x03C16BC8 BR X1
	0x03C16BCC STR X30, [X31 - 0x20]!
	0x03C16BD0 STP X20, X19, [X31 + 0x10]
	0x03C16BD4 ADRP X20, 0x7CE000
	0x03C16BD8 LDR X1, [X20 + 0xA30]
	0x03C16BDC MOV X19, X0
	0x03C16BE0 CBNZ X1, 0x3C16BF8
	0x03C16BE4 ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C16BE8 ADD X0, X0, 0x955
	0x03C16BEC BL 0x1C16CB8
	0x03C16BF0 MOV X1, X0
	0x03C16BF4 STR X0, [X20 + 0xA30]
	0x03C16BF8 MOV X0, X19
	0x03C16BFC LDP X20, X19, [X31 + 0x10]
	0x03C16C00 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7CF000
	007 Move X8, [X22+2064]
	008 Move W19, W2
	009 Move X21, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51351552
	014 Add X0, X0, 3712
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+2064], X0
	018 Move X0, X21
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X22, 0x7CF000
	021 Move X2, [X22+2368]
	022 Move W21, W0
	023 Compare X2, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51470336
	026 Add X0, X0, 158
	027 Call 0x1C17CB8
	028 Move X2, X0
	029 Move [X22+2368], X0
	030 NotImplemented "Instruction SCVTF not yet implemented."
	031 Move X0, X20
	032 Move W1, W21
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 CallNoReturn X2

Method: System.Void SetInt(System.Int32 nameID, System.Int32 value)

Disassembly:
	0x03C16C04 BR X1
	0x03C16C08 STR X30, [X31 - 0x20]!
	0x03C16C0C STP X20, X19, [X31 + 0x10]
	0x03C16C10 ADRP X20, 0x7CE000
	0x03C16C14 LDR X1, [X20 + 0xA38]
	0x03C16C18 MOV X19, X0
	0x03C16C1C CBNZ X1, 0x3C16C34
	0x03C16C20 ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C16C24 ADD X0, X0, 0xE9B
	0x03C16C28 BL 0x1C16CB8
	0x03C16C2C MOV X1, X0
	0x03C16C30 STR X0, [X20 + 0xA38]
	0x03C16C34 MOV X0, X19
	0x03C16C38 LDP X20, X19, [X31 + 0x10]
	0x03C16C3C LDR X30, [X31], #0x20
	0x03C16C40 BR X1
	0x03C16C44 STR X30, [X31 - 0x20]!
	0x03C16C48 STP X20, X19, [X31 + 0x10]
	0x03C16C4C ADRP X20, 0x7CE000
	0x03C16C50 LDR X1, [X20 + 0xA40]
	0x03C16C54 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7CF000
	007 Move W20, W2
	008 Move X2, [X22+2368]
	009 Move W19, W1
	010 Move X21, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51470336
	014 Add X0, X0, 158
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X22+2368], X0
	018 NotImplemented "Instruction SCVTF not yet implemented."
	019 Move X0, X21
	020 Move W1, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X2

Method: System.Void SetFloat(System.String name, System.Single value)

Disassembly:
	0x03C16C58 CBNZ X1, 0x3C16C70
	0x03C16C5C ADRP X0, 0xFFFFFFFFFCF12000
	0x03C16C60 ADD X0, X0, 0x68A
	0x03C16C64 BL 0x1C16CB8
	0x03C16C68 MOV X1, X0
	0x03C16C6C STR X0, [X20 + 0xA40]
	0x03C16C70 MOV X0, X19
	0x03C16C74 LDP X20, X19, [X31 + 0x10]
	0x03C16C78 LDR X30, [X31], #0x20
	0x03C16C7C BR X1
	0x03C16C80 STR X30, [X31 - 0x20]!
	0x03C16C84 STP X20, X19, [X31 + 0x10]
	0x03C16C88 ADRP X20, 0x7CE000
	0x03C16C8C LDR X1, [X20 + 0xA48]
	0x03C16C90 MOV X19, X0
	0x03C16C94 CBNZ X1, 0x3C16CAC
	0x03C16C98 ADRP X0, 0xFFFFFFFFFCEE3000
	0x03C16C9C ADD X0, X0, 0x6F
	0x03C16CA0 BL 0x1C16CB8
	0x03C16CA4 MOV X1, X0
	0x03C16CA8 STR X0, [X20 + 0xA48]
	0x03C16CAC MOV X0, X19
	0x03C16CB0 LDP X20, X19, [X31 + 0x10]
	0x03C16CB4 LDR X30, [X31], #0x20
	0x03C16CB8 BR X1
	0x03C16CBC MOV X1, X31
	0x03C16CC0 B 0x3C32490
	0x03C16CC4 STR X30, [X31 - 0x20]!
	0x03C16CC8 STP X20, X19, [X31 + 0x10]
	0x03C16CCC ADRP X20, 0x7CE000
	0x03C16CD0 LDR X1, [X20 + 0xA68]
	0x03C16CD4 MOV X19, X0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7CF000
	007 Move X8, [X21+2064]
	008 Move V8, V0
	009 Move X20, X1
	010 Move X19, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51351552
	014 Add X0, X0, 3712
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X21+2064], X0
	018 Move X0, X20
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X21, 0x7CF000
	021 Move X2, [X21+2368]
	022 Move W20, W0
	023 Compare X2, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51470336
	026 Add X0, X0, 158
	027 Call 0x1C17CB8
	028 Move X2, X0
	029 Move [X21+2368], X0
	030 Move X0, X19
	031 Move W1, W20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Move V0, V8
	037 Move V8, [X31+48]
	038 CallNoReturn X2

Method: System.Void SetFloat(System.Int32 nameID, System.Single value)

Disassembly:
	0x03C16CD8 CBNZ X1, 0x3C16CF0
	0x03C16CDC ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C16CE0 ADD X0, X0, 0xE9B
	0x03C16CE4 BL 0x1C16CB8
	0x03C16CE8 MOV X1, X0
	0x03C16CEC STR X0, [X20 + 0xA68]
	0x03C16CF0 MOV X0, X19
	0x03C16CF4 LDP X20, X19, [X31 + 0x10]
	0x03C16CF8 LDR X30, [X31], #0x20
	0x03C16CFC BR X1
	0x03C16D00 RET
	0x03C16D04 STR X30, [X31 - 0x20]!
	0x03C16D08 STP X20, X19, [X31 + 0x10]
	0x03C16D0C ADRP X20, 0x7CE000
	0x03C16D10 LDR X1, [X20 + 0xA70]
	0x03C16D14 MOV X19, X0
	0x03C16D18 CBNZ X1, 0x3C16D30
	0x03C16D1C ADRP X0, 0xFFFFFFFFFCF04000
	0x03C16D20 ADD X0, X0, 0xAD3
	0x03C16D24 BL 0x1C16CB8
	0x03C16D28 MOV X1, X0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7CF000
	007 Move X2, [X21+2368]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51470336
	014 Add X0, X0, 158
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+2368], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void SetInteger(System.Int32 nameID, System.Int32 value)

Disassembly:
	0x03C16D2C STR X0, [X20 + 0xA70]
	0x03C16D30 MOV X0, X19
	0x03C16D34 LDP X20, X19, [X31 + 0x10]
	0x03C16D38 LDR X30, [X31], #0x20
	0x03C16D3C BR X1
	0x03C16D40 STP X30, X21, [X31 - 0x20]!
	0x03C16D44 STP X20, X19, [X31 + 0x10]
	0x03C16D48 ADRP X21, 0x7CE000
	0x03C16D4C LDR X2, [X21 + 0xA78]
	0x03C16D50 MOV X19, X1
	0x03C16D54 MOV X20, X0
	0x03C16D58 CBNZ X2, 0x3C16D70
	0x03C16D5C ADRP X0, 0xFFFFFFFFFCEEC000
	0x03C16D60 ADD X0, X0, 0xE72
	0x03C16D64 BL 0x1C16CB8
	0x03C16D68 MOV X2, X0
	0x03C16D6C STR X0, [X21 + 0xA78]
	0x03C16D70 MOV X0, X20
	0x03C16D74 MOV X1, X19
	0x03C16D78 LDP X20, X19, [X31 + 0x10]
	0x03C16D7C LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7CF000
	007 Move X3, [X22+2360]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51302400
	014 Add X0, X0, 1524
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2360], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetColor(System.String name, UnityEngine.Color value)

Disassembly:
	0x03C1598C CMP W8, W3
	0x03C15990 B.LT 0x3C15A30
	0x03C15994 ADRP X23, 0x7CF000
	0x03C15998 LDR X4, [X23 + 0x970]
	0x03C1599C MOV W21, W1
	0x03C159A0 MOV X22, X0
	0x03C159A4 CBNZ X4, 0x3C159BC
	0x03C159A8 ADRP X0, 0xFFFFFFFFFCF13000
	0x03C159AC ADD X0, X0, 0x630
	0x03C159B0 BL 0x1C16CB8
	0x03C159B4 MOV X4, X0
	0x03C159B8 STR X0, [X23 + 0x970]
	0x03C159BC MOV X0, X22
	0x03C159C0 MOV W1, W21
	0x03C159C4 MOV X2, X20
	0x03C159C8 MOV W3, W19
	0x03C159CC LDP X20, X19, [X31 + 0x20]
	0x03C159D0 LDP X22, X21, [X31 + 0x10]
	0x03C159D4 LDP X30, X23, [X31], #0x30
	0x03C159D8 BR X4
	0x03C159DC ADRP X0, 0x4E3000
	0x03C159E0 LDR X0, [X0 + 0x528]
	0x03C159E4 BL 0x1C16D08
	0x03C159E8 BL 0x1C16F10
	0x03C159EC MOV X19, X0
	0x03C159F0 ADRP X0, 0x4E8000
	0x03C159F4 LDR X0, [X0 + 0xED8]
	0x03C159F8 BL 0x1C16D08
	0x03C159FC MOV X1, X0
	0x03C15A00 MOV X0, X19
	0x03C15A04 MOV X2, X31

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x7D0000
	010 Move X8, [X21+2064]
	011 Move V8, V3
	012 Move V9, V2
	013 Move V10, V1
	014 Move V11, V0
	015 Move X19, X1
	016 Move X20, X0
	017 Compare X8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51347456
	020 Add X0, X0, 3712
	021 Call 0x1C17CB8
	022 Move X8, X0
	023 Move [X21+2064], X0
	024 Move X0, X19
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move W1, W0
	027 Move X0, X20
	028 Move V2, V9
	029 Move V3, V8
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Move D9, [X31+16]
	035 Move D8, [X31+24]
	036 Move V0, V11
	037 Move V1, V10
	038 Move D11, [X31+64]
	039 Move D10, [X31+72]
	040 Call Material.SetColorImpl, X0, X1, X2
	041 Return 

Method: System.Void SetColor(System.Int32 nameID, UnityEngine.Color value)

Disassembly:
	0x03C15988 MOV W19, W3

ISIL:
	001 Call Material.SetColorImpl, X0, X1, X2
	002 Return 

Method: System.Void SetVector(System.Int32 nameID, UnityEngine.Vector4 value)

Disassembly:
	0x03C16D80 BR X2

ISIL:
	001 Call Material.SetColorImpl, X0, X1, X2
	002 Return 

Method: System.Void SetMatrix(System.Int32 nameID, UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C16D84 STR X30, [X31 - 0x20]!
	0x03C16D88 STP X20, X19, [X31 + 0x10]
	0x03C16D8C ADRP X20, 0x7CE000
	0x03C16D90 LDR X1, [X20 + 0xA80]
	0x03C16D94 MOV X19, X0
	0x03C16D98 CBNZ X1, 0x3C16DB0
	0x03C16D9C ADRP X0, 0xFFFFFFFFFCEEC000
	0x03C16DA0 ADD X0, X0, 0xEAB
	0x03C16DA4 BL 0x1C16CB8
	0x03C16DA8 MOV X1, X0
	0x03C16DAC STR X0, [X20 + 0xA80]
	0x03C16DB0 MOV X0, X19
	0x03C16DB4 LDP X20, X19, [X31 + 0x10]
	0x03C16DB8 LDR X30, [X31], #0x20
	0x03C16DBC BR X1
	0x03C16DC0 STP X30, X21, [X31 - 0x20]!
	0x03C16DC4 STP X20, X19, [X31 + 0x10]
	0x03C16DC8 ADRP X21, 0x7CE000
	0x03C16DCC LDR X2, [X21 + 0xA88]
	0x03C16DD0 MOV X19, X1
	0x03C16DD4 MOV X20, X0
	0x03C16DD8 CBNZ X2, 0x3C16DF0
	0x03C16DDC ADRP X0, 0xFFFFFFFFFCEE3000
	0x03C16DE0 ADD X0, X0, 0x8F
	0x03C16DE4 BL 0x1C16CB8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x7CF000
	007 Move V0, [X2+32]
	008 Move V1, [X2+48]
	009 Move V2, [X2]
	010 Move V3, [X2+16]
	011 Move X8, [X21+2440]
	012 Move W19, W1
	013 Move X20, X0
	014 Move [X31+32], V0
	015 Move [X31+40], V1
	016 Move [X31], V2
	017 Move [X31+8], V3
	018 Compare X8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51441664
	021 Add X0, X0, 4069
	022 Call 0x1C17CB8
	023 Move X8, X0
	024 Move [X21+2440], X0
	025 Add X2, X31, 0
	026 Move X0, X20
	027 Move W1, W19
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X20, [X31+80]
	030 Move X19, [X31+88]
	031 Move X30, [X31+64]
	032 Move X21, [X31+72]
	033 Add X31, X31, 96
	034 Return 

Method: System.Void SetTexture(System.String name, UnityEngine.Texture value)

Disassembly:
	0x03C15C88 MOV X8, X0
	0x03C15C8C STR X0, [X21 + 0x810]
	0x03C15C90 MOV X0, X20
	0x03C15C94 BLR X8
	0x03C15C98 ADRP X21, 0x7CF000
	0x03C15C9C LDR X2, [X21 + 0x940]
	0x03C15CA0 MOV W20, W0
	0x03C15CA4 CBNZ X2, 0x3C15CBC
	0x03C15CA8 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C15CAC ADD X0, X0, 0x9E
	0x03C15CB0 BL 0x1C16CB8
	0x03C15CB4 MOV X2, X0
	0x03C15CB8 STR X0, [X21 + 0x940]
	0x03C15CBC MOV X0, X19
	0x03C15CC0 MOV W1, W20
	0x03C15CC4 LDP X20, X19, [X31 + 0x20]
	0x03C15CC8 LDP X30, X21, [X31 + 0x10]
	0x03C15CCC MOV V0.16B, V8.16B
	0x03C15CD0 LDR V8, [X31], #0x30
	0x03C15CD4 BR X2
	0x03C15CD8 STR D8, [X31 - 0x30]!
	0x03C15CDC STP X30, X21, [X31 + 0x10]
	0x03C15CE0 STP X20, X19, [X31 + 0x20]
	0x03C15CE4 ADRP X21, 0x7CF000
	0x03C15CE8 LDR X2, [X21 + 0x940]
	0x03C15CEC MOV V8.16B, V0.16B
	0x03C15CF0 MOV W19, W1
	0x03C15CF4 MOV X20, X0
	0x03C15CF8 CBNZ X2, 0x3C15D10
	0x03C15CFC ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C15D00 ADD X0, X0, 0x9E
	0x03C15D04 BL 0x1C16CB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D0000
	007 Move X8, [X22+2064]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51347456
	014 Add X0, X0, 3712
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+2064], X0
	018 Move X0, X21
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X22, 0x7D0000
	021 Move X3, [X22+2376]
	022 Move W21, W0
	023 Compare X3, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51322880
	026 Add X0, X0, 3668
	027 Call 0x1C17CB8
	028 Move X3, X0
	029 Move [X22+2376], X0
	030 Move X0, X20
	031 Move W1, W21
	032 Move X2, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 CallNoReturn X3

Method: System.Void SetTexture(System.Int32 nameID, UnityEngine.Texture value)

Disassembly:
	0x03C15C34 MOV X2, X0
	0x03C15C38 STR X0, [X22 + 0x940]
	0x03C15C3C SCVTF S0, W20
	0x03C15C40 MOV X0, X21
	0x03C15C44 MOV W1, W19
	0x03C15C48 LDP X20, X19, [X31 + 0x20]
	0x03C15C4C LDP X22, X21, [X31 + 0x10]
	0x03C15C50 LDR X30, [X31], #0x30
	0x03C15C54 BR X2
	0x03C15C58 STR D8, [X31 - 0x30]!
	0x03C15C5C STP X30, X21, [X31 + 0x10]
	0x03C15C60 STP X20, X19, [X31 + 0x20]
	0x03C15C64 ADRP X21, 0x7CF000
	0x03C15C68 LDR X8, [X21 + 0x810]
	0x03C15C6C MOV V8.16B, V0.16B
	0x03C15C70 MOV X20, X1
	0x03C15C74 MOV X19, X0
	0x03C15C78 CBNZ X8, 0x3C15C90
	0x03C15C7C ADRP X0, 0xFFFFFFFFFCF07000
	0x03C15C80 ADD X0, X0, 0xE80
	0x03C15C84 BL 0x1C16CB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D0000
	007 Move X3, [X22+2376]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51322880
	014 Add X0, X0, 3668
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2376], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetConstantBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03C16DE8 MOV X2, X0
	0x03C16DEC STR X0, [X21 + 0xA88]
	0x03C16DF0 MOV X0, X20
	0x03C16DF4 MOV X1, X19
	0x03C16DF8 LDP X20, X19, [X31 + 0x10]
	0x03C16DFC LDP X30, X21, [X31], #0x20
	0x03C16E00 BR X2
	0x03C16E04 STP X30, X21, [X31 - 0x20]!
	0x03C16E08 STP X20, X19, [X31 + 0x10]
	0x03C16E0C ADRP X21, 0x7CE000
	0x03C16E10 LDR X2, [X21 + 0xA90]
	0x03C16E14 MOV X19, X1
	0x03C16E18 MOV X20, X0
	0x03C16E1C CBNZ X2, 0x3C16E34
	0x03C16E20 ADRP X0, 0xFFFFFFFFFCF06000
	0x03C16E24 ADD X0, X0, 0xF8B
	0x03C16E28 BL 0x1C16CB8
	0x03C16E2C MOV X2, X0
	0x03C16E30 STR X0, [X21 + 0xA90]
	0x03C16E34 MOV X0, X20
	0x03C16E38 MOV X1, X19
	0x03C16E3C LDP X20, X19, [X31 + 0x10]
	0x03C16E40 LDP X30, X21, [X31], #0x20
	0x03C16E44 BR X2
	0x03C16E48 STP X30, X21, [X31 - 0x20]!
	0x03C16E4C STP X20, X19, [X31 + 0x10]
	0x03C16E50 ADRP X21, 0x7CE000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7CF000
	009 Move X5, [X24+2384]
	010 Move W19, W4
	011 Move W20, W3
	012 Move X21, X2
	013 Move W22, W1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51531776
	018 Add X0, X0, 3644
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+2384], X0
	022 Move X0, X23
	023 Move W1, W22
	024 Move X2, X21
	025 Move W3, W20
	026 Move W4, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void SetFloatArray(System.Int32 nameID, System.Single[] values)

Disassembly:
	0x03C16E54 LDR X2, [X21 + 0xA98]
	0x03C16E58 MOV X19, X1
	0x03C16E5C MOV X20, X0
	0x03C16E60 CBNZ X2, 0x3C16E78
	0x03C16E64 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C16E68 ADD X0, X0, 0x1C9

ISIL:
	001 Move [X31-16], X30
	002 Compare X2, 0
	003 JumpIfEqual {8}
	004 Move W3, [X2+24]
	005 Move X30, [X31+16]
	006 Call Material.SetFloatArray, X0, X1, X2, X3
	007 Return 
	008 Call 0x1C17F20

Method: System.Void SetVectorArray(System.Int32 nameID, UnityEngine.Vector4[] values)

Disassembly:
	0x03C16E6C BL 0x1C16CB8
	0x03C16E70 MOV X2, X0
	0x03C16E74 STR X0, [X21 + 0xA98]
	0x03C16E78 MOV X0, X20
	0x03C16E7C MOV X1, X19
	0x03C16E80 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X2, 0
	003 JumpIfEqual {8}
	004 Move W3, [X2+24]
	005 Move X30, [X31+16]
	006 Call Material.SetVectorArray, X0, X1, X2, X3
	007 Return 
	008 Call 0x1C17F20

Method: System.Void SetMatrixArray(System.Int32 nameID, UnityEngine.Matrix4x4[] values)

Disassembly:
	0x03C16E84 LDP X30, X21, [X31], #0x20
	0x03C16E88 BR X2
	0x03C16E8C STR X30, [X31 - 0x20]!
	0x03C16E90 STP X20, X19, [X31 + 0x10]
	0x03C16E94 ADRP X20, 0x7CE000
	0x03C16E98 LDR X1, [X20 + 0xAA0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X2, 0
	003 JumpIfEqual {8}
	004 Move W3, [X2+24]
	005 Move X30, [X31+16]
	006 Call Material.SetMatrixArray, X0, X1, X2, X3
	007 Return 
	008 Call 0x1C17F20

Method: System.Int32 GetInt(System.String name)

Disassembly:
	0x03C16E9C MOV X19, X0
	0x03C16EA0 CBNZ X1, 0x3C16EB8
	0x03C16EA4 ADRP X0, 0xFFFFFFFFFCF02000
	0x03C16EA8 ADD X0, X0, 0x8D3
	0x03C16EAC BL 0x1C16CB8
	0x03C16EB0 MOV X1, X0
	0x03C16EB4 STR X0, [X20 + 0xAA0]
	0x03C16EB8 MOV X0, X19
	0x03C16EBC LDP X20, X19, [X31 + 0x10]
	0x03C16EC0 LDR X30, [X31], #0x20
	0x03C16EC4 BR X1
	0x03C16EC8 STP X30, X21, [X31 - 0x20]!
	0x03C16ECC STP X20, X19, [X31 + 0x10]
	0x03C16ED0 ADRP X21, 0x7CE000
	0x03C16ED4 LDR X2, [X21 + 0xAA8]
	0x03C16ED8 MOV X19, X1
	0x03C16EDC MOV X20, X0
	0x03C16EE0 CBNZ X2, 0x3C16EF8
	0x03C16EE4 ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C16EE8 ADD X0, X0, 0x97D
	0x03C16EEC BL 0x1C16CB8
	0x03C16EF0 MOV X2, X0
	0x03C16EF4 STR X0, [X21 + 0xAA8]
	0x03C16EF8 MOV X0, X20
	0x03C16EFC MOV X1, X19
	0x03C16F00 LDP X20, X19, [X31 + 0x10]
	0x03C16F04 LDP X30, X21, [X31], #0x20
	0x03C16F08 BR X2
	0x03C16F0C STP X30, X21, [X31 - 0x20]!
	0x03C16F10 STP X20, X19, [X31 + 0x10]
	0x03C16F14 ADRP X21, 0x7CE000
	0x03C16F18 LDR X2, [X21 + 0xAB0]
	0x03C16F1C MOV W19, W1
	0x03C16F20 MOV X20, X0
	0x03C16F24 CBNZ X2, 0x3C16F3C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CF000
	006 Move X8, [X21+2064]
	007 Move X20, X1
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51351552
	012 Add X0, X0, 3712
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X21+2064], X0
	016 Move X0, X20
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X21, 0x7CF000
	019 Move X8, [X21+2392]
	020 Move W20, W0
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51494912
	024 Add X0, X0, 62
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X21+2392], X0
	028 Move X0, X19
	029 Move W1, W20
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move W8, 0x7F800000
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move S1, W8
	035 NotImplemented "Instruction FCVTZS not yet implemented."
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Move W8, 0x80000000
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Single GetFloat(System.String name)

Disassembly:
	0x03C16F28 ADRP X0, 0xFFFFFFFFFCF12000
	0x03C16F2C ADD X0, X0, 0x6AE
	0x03C16F30 BL 0x1C16CB8
	0x03C16F34 MOV X2, X0
	0x03C16F38 STR X0, [X21 + 0xAB0]
	0x03C16F3C MOV X0, X20
	0x03C16F40 MOV W1, W19
	0x03C16F44 LDP X20, X19, [X31 + 0x10]
	0x03C16F48 LDP X30, X21, [X31], #0x20
	0x03C16F4C BR X2
	0x03C16F50 STR D8, [X31 - 0x30]!
	0x03C16F54 STP X30, X21, [X31 + 0x10]
	0x03C16F58 STP X20, X19, [X31 + 0x20]
	0x03C16F5C ADRP X21, 0x7CE000
	0x03C16F60 LDR X2, [X21 + 0xAB8]
	0x03C16F64 MOV V8.16B, V0.16B
	0x03C16F68 MOV W19, W1
	0x03C16F6C MOV X20, X0
	0x03C16F70 CBNZ X2, 0x3C16F88
	0x03C16F74 ADRP X0, 0xFFFFFFFFFCEE5000
	0x03C16F78 ADD X0, X0, 0x1AA
	0x03C16F7C BL 0x1C16CB8
	0x03C16F80 MOV X2, X0
	0x03C16F84 STR X0, [X21 + 0xAB8]
	0x03C16F88 MOV X0, X20
	0x03C16F8C MOV W1, W19
	0x03C16F90 LDP X20, X19, [X31 + 0x20]
	0x03C16F94 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CF000
	006 Move X8, [X21+2064]
	007 Move X20, X1
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51351552
	012 Add X0, X0, 3712
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X21+2064], X0
	016 Move X0, X20
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X21, 0x7CF000
	019 Move X2, [X21+2392]
	020 Move W20, W0
	021 Compare X2, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51494912
	024 Add X0, X0, 62
	025 Call 0x1C17CB8
	026 Move X2, X0
	027 Move [X21+2392], X0
	028 Move X0, X19
	029 Move W1, W20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 CallNoReturn X2

Method: System.Single GetFloat(System.Int32 nameID)

Disassembly:
	0x03C16F98 MOV V0.16B, V8.16B
	0x03C16F9C LDR V8, [X31], #0x30
	0x03C16FA0 BR X2
	0x03C16FA4 RET
	0x03C16FA8 STR X30, [X31 - 0x20]!
	0x03C16FAC STP X20, X19, [X31 + 0x10]
	0x03C16FB0 ADRP X20, 0x7CE000
	0x03C16FB4 LDR X1, [X20 + 0xAC0]
	0x03C16FB8 MOV X19, X0
	0x03C16FBC CBNZ X1, 0x3C16FD4
	0x03C16FC0 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C16FC4 ADD X0, X0, 0x20D
	0x03C16FC8 BL 0x1C16CB8
	0x03C16FCC MOV X1, X0
	0x03C16FD0 STR X0, [X20 + 0xAC0]
	0x03C16FD4 MOV X0, X19
	0x03C16FD8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CF000
	006 Move X2, [X21+2392]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51494912
	012 Add X0, X0, 62
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2392], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Color GetColor(System.String name)

Disassembly:
	0x03C15868 STP X20, X19, [X31 + 0x20]
	0x03C1586C CBZ X2, 0x3C158D0
	0x03C15870 LDR W8, [X2 + 0x18]
	0x03C15874 MOV X20, X2
	0x03C15878 CBZ W8, 0x3C15904
	0x03C1587C MOV W19, W3
	0x03C15880 CMP W8, W3
	0x03C15884 B.LT 0x3C15924
	0x03C15888 ADRP X23, 0x7CF000
	0x03C1588C LDR X4, [X23 + 0x968]
	0x03C15890 MOV W21, W1
	0x03C15894 MOV X22, X0
	0x03C15898 CBNZ X4, 0x3C158B0
	0x03C1589C ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C158A0 ADD X0, X0, 0xF92
	0x03C158A4 BL 0x1C16CB8
	0x03C158A8 MOV X4, X0
	0x03C158AC STR X0, [X23 + 0x968]
	0x03C158B0 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X8, [X21+2064]
	007 Move X20, X1
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51347456
	012 Add X0, X0, 3712
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X21+2064], X0
	016 Move X0, X20
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move W1, W0
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Call Material.GetColorImpl, X0, X1
	025 Return X0

Method: UnityEngine.Color GetColor(System.Int32 nameID)

Disassembly:
	0x03C15864 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Call Material.GetColorImpl, X0, X1
	002 Return X0

Method: UnityEngine.Vector4 GetVector(System.Int32 nameID)

Disassembly:
	0x03C16FDC LDR X30, [X31], #0x20

ISIL:
	001 Call Material.GetColorImpl, X0, X1
	002 Return X0

Method: UnityEngine.Texture GetTexture(System.String name)

Disassembly:
	0x03C15AFC ADRP X0, 0x4E8000
	0x03C15B00 LDR X0, [X0 + 0xED8]
	0x03C15B04 BL 0x1C16D08
	0x03C15B08 MOV X1, X0
	0x03C15B0C MOV X0, X19
	0x03C15B10 MOV X2, X31
	0x03C15B14 BL 0x330E100
	0x03C15B18 B 0x3C15B6C
	0x03C15B1C ADRP X0, 0x4E6000
	0x03C15B20 LDR X0, [X0 + 0x578]
	0x03C15B24 BL 0x1C16D08
	0x03C15B28 BL 0x1C16F10
	0x03C15B2C MOV X19, X0
	0x03C15B30 ADRP X0, 0x549000
	0x03C15B34 LDR X0, [X0 + 0xD98]
	0x03C15B38 B 0x3C15B58
	0x03C15B3C ADRP X0, 0x4E6000
	0x03C15B40 LDR X0, [X0 + 0x578]
	0x03C15B44 BL 0x1C16D08
	0x03C15B48 BL 0x1C16F10
	0x03C15B4C MOV X19, X0
	0x03C15B50 ADRP X0, 0x549000
	0x03C15B54 LDR X0, [X0 + 0xDA0]
	0x03C15B58 BL 0x1C16D08
	0x03C15B5C MOV X1, X0
	0x03C15B60 MOV X0, X19
	0x03C15B64 MOV X2, X31
	0x03C15B68 BL 0x3314A68

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X8, [X21+2064]
	007 Move X20, X1
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51347456
	012 Add X0, X0, 3712
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X21+2064], X0
	016 Move X0, X20
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X21, 0x7D0000
	019 Move X2, [X21+2400]
	020 Move W20, W0
	021 Compare X2, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51290112
	024 Add X0, X0, 1802
	025 Call 0x1C17CB8
	026 Move X2, X0
	027 Move [X21+2400], X0
	028 Move X0, X19
	029 Move W1, W20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 CallNoReturn X2

Method: UnityEngine.Texture GetTexture(System.Int32 nameID)

Disassembly:
	0x03C15AB8 ADD X0, X0, 0xF9B
	0x03C15ABC BL 0x1C16CB8
	0x03C15AC0 MOV X4, X0
	0x03C15AC4 STR X0, [X23 + 0x978]
	0x03C15AC8 MOV X0, X22
	0x03C15ACC MOV W1, W21
	0x03C15AD0 MOV X2, X20
	0x03C15AD4 MOV W3, W19
	0x03C15AD8 LDP X20, X19, [X31 + 0x20]
	0x03C15ADC LDP X22, X21, [X31 + 0x10]
	0x03C15AE0 LDP X30, X23, [X31], #0x30
	0x03C15AE4 BR X4
	0x03C15AE8 ADRP X0, 0x4E3000
	0x03C15AEC LDR X0, [X0 + 0x528]
	0x03C15AF0 BL 0x1C16D08
	0x03C15AF4 BL 0x1C16F10
	0x03C15AF8 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2400]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51290112
	012 Add X0, X0, 1802
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2400], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetColorImpl_Injected(System.Int32 name, ref UnityEngine.Color value)

Disassembly:
	0x03C16454 MOV X2, X19
	0x03C16458 MOV X3, X31
	0x03C1645C BL 0x3227BD4
	0x03C16460 B 0x3C164EC
	0x03C16464 ADRP X0, 0x4E5000
	0x03C16468 LDR X0, [X0 + 0x578]
	0x03C1646C BL 0x1C16D08
	0x03C16470 BL 0x1C16F10
	0x03C16474 MOV X19, X0
	0x03C16478 ADRP X0, 0x548000
	0x03C1647C LDR X0, [X0 + 0xE30]
	0x03C16480 BL 0x1C16D08
	0x03C16484 MOV X1, X0
	0x03C16488 MOV X0, X19
	0x03C1648C MOV X2, X31
	0x03C16490 BL 0x3314A68
	0x03C16494 ADRP X0, 0x548000
	0x03C16498 LDR X0, [X0 + 0xE38]
	0x03C1649C BL 0x1C16D08
	0x03C164A0 MOV X1, X0
	0x03C164A4 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7CF000
	007 Move X3, [X22+2432]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51367936
	014 Add X0, X0, 2101
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2432], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetMatrixImpl_Injected(System.Int32 name, ref UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C164FC BL 0x1C16F10
	0x03C16500 MOV X1, X19
	0x03C16504 MOV X2, X31
	0x03C16508 MOV X20, X0
	0x03C1650C BL 0x3314A68
	0x03C16510 ADRP X0, 0x548000
	0x03C16514 LDR X0, [X0 + 0xE38]
	0x03C16518 BL 0x1C16D08
	0x03C1651C MOV X1, X0
	0x03C16520 MOV X0, X20
	0x03C16524 BL 0x1C16DEC
	0x03C16528 ADD X0, X31, 0x2C
	0x03C1652C MOV X1, X31
	0x03C16530 BL 0x337B6E0
	0x03C16534 MOV X19, X0
	0x03C16538 ADRP X0, 0x548000
	0x03C1653C LDR X0, [X0 + 0xE50]
	0x03C16540 BL 0x1C16D08
	0x03C16544 MOV X1, X19
	0x03C16548 MOV X2, X31
	0x03C1654C BL 0x321B938

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7CF000
	007 Move X3, [X22+2440]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51441664
	014 Add X0, X0, 4069
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2440], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void GetColorImpl_Injected(System.Int32 name, out UnityEngine.Color ret)

Disassembly:
	0x03C166B4 STR X0, [X20 + 0x9C0]
	0x03C166B8 MOV X0, X19
	0x03C166BC LDP X20, X19, [X31 + 0x10]
	0x03C166C0 LDR X30, [X31], #0x20
	0x03C166C4 BR X1
	0x03C166C8 STR X30, [X31 - 0x20]!
	0x03C166CC STP X20, X19, [X31 + 0x10]
	0x03C166D0 ADRP X20, 0x7CE000
	0x03C166D4 LDR X1, [X20 + 0x9C8]
	0x03C166D8 MOV X19, X0
	0x03C166DC CBNZ X1, 0x3C166F4
	0x03C166E0 ADRP X0, 0xFFFFFFFFFCEDF000
	0x03C166E4 ADD X0, X0, 0x222
	0x03C166E8 BL 0x1C16CB8
	0x03C166EC MOV X1, X0
	0x03C166F0 STR X0, [X20 + 0x9C8]
	0x03C166F4 MOV X0, X19
	0x03C166F8 LDP X20, X19, [X31 + 0x10]
	0x03C166FC LDR X30, [X31], #0x20
	0x03C16700 BR X1
	0x03C16704 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7CF000
	007 Move X3, [X22+2448]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51318784
	014 Add X0, X0, 2872
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+2448], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

