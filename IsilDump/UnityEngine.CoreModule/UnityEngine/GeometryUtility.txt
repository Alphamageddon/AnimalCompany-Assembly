Type: UnityEngine.GeometryUtility

Method: System.Void CalculateFrustumPlanes(UnityEngine.Camera camera, UnityEngine.Plane[] planes)

Disassembly:
	0x03C0B60C CSET W0, MI
	0x03C0B610 RET
	0x03C0B614 MOV W0, W31
	0x03C0B618 RET
	0x03C0B61C LDP S6, S4, [X0]
	0x03C0B620 LDP S7, S5, [X0 + 0x8]
	0x03C0B624 TBZ X1, 0x0, 0x3C0B678
	0x03C0B628 FADD S16, S6, S7
	0x03C0B62C FSUB S17, S6, S16
	0x03C0B630 FCMP S6, S16
	0x03C0B634 FCSEL S7, S17, S7, GT
	0x03C0B638 FADD S17, S4, S5
	0x03C0B63C FCSEL S6, S16, S6, GT
	0x03C0B640 FSUB S16, S4, S17
	0x03C0B644 FCMP S4, S17
	0x03C0B648 FCSEL S5, S16, S5, GT
	0x03C0B64C FADD S16, S2, S0
	0x03C0B650 FCSEL S4, S17, S4, GT
	0x03C0B654 FSUB S17, S0, S16
	0x03C0B658 FCMP S0, S16
	0x03C0B65C FCSEL S2, S17, S2, GT
	0x03C0B660 FADD S17, S3, S1
	0x03C0B664 FCSEL S0, S16, S0, GT
	0x03C0B668 FSUB S16, S1, S17
	0x03C0B66C FCMP S1, S17
	0x03C0B670 FCSEL S3, S16, S3, GT
	0x03C0B674 FCSEL S1, S17, S1, GT
	0x03C0B678 FADD S7, S6, S7
	0x03C0B67C FCMP S0, S7
	0x03C0B680 MOV W0, W31
	0x03C0B684 B.PL 0x3C0B6AC
	0x03C0B688 FADD S0, S0, S2
	0x03C0B68C FCMP S0, S6
	0x03C0B690 B.LE 0x3C0B6AC
	0x03C0B694 FADD S0, S1, S3
	0x03C0B698 FCMP S0, S4
	0x03C0B69C B.LE 0x3C0B6AC
	0x03C0B6A0 FADD S0, S4, S5
	0x03C0B6A4 FCMP S1, S0
	0x03C0B6A8 CSET W0, MI
	0x03C0B6AC RET
	0x03C0B6B0 FCMP S0, S4
	0x03C0B6B4 B.NE 0x3C0B6DC
	0x03C0B6B8 FCMP S1, S5
	0x03C0B6BC CSET W8, NE
	0x03C0B6C0 FCMP S2, S6
	0x03C0B6C4 CSET W9, NE
	0x03C0B6C8 FCMP S3, S7
	0x03C0B6CC ORR W8, W8, W9, 0x0
	0x03C0B6D0 CSET W9, NE
	0x03C0B6D4 ORR W0, W9, W8, 0x0
	0x03C0B6D8 RET
	0x03C0B6DC MOVZ W0, 0x1
	0x03C0B6E0 RET
	0x03C0B6E4 FCMP S0, S4
	0x03C0B6E8 B.NE 0x3C0B710
	0x03C0B6EC FCMP S1, S5
	0x03C0B6F0 CSET W8, EQ
	0x03C0B6F4 FCMP S2, S6
	0x03C0B6F8 CSET W9, EQ
	0x03C0B6FC FCMP S3, S7
	0x03C0B700 AND W8, W8, W9, 0x0
	0x03C0B704 CSET W9, EQ
	0x03C0B708 AND W0, W8, W9, 0x0
	0x03C0B70C RET

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+320], X29
	003 Move [X31+336], X30
	004 Move [X31+344], X21
	005 Move [X31+352], X20
	006 Move [X31+360], X19
	007 Compare X0, 0
	008 JumpIfEqual {92}
	009 Move X21, 0x7DA000
	010 Move X8, [X21+216]
	011 Move X19, X1
	012 Move X20, X0
	013 NotImplemented "Instruction MOVI not yet implemented."
	014 Move [X31+288], V0
	015 Move [X31+296], V0
	016 Move [X31+256], V0
	017 Move [X31+264], V0
	018 Compare X8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51380224
	021 Add X0, X0, 3718
	022 Call 0x1C17CB8
	023 Move X8, X0
	024 Move [X21+216], X0
	025 Add X1, X31, 256
	026 Move X0, X20
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X21, 0x7DA000
	029 Move V0, [X31+256]
	030 Move V1, [X31+272]
	031 Move V2, [X31+288]
	032 Move V3, [X31+304]
	033 Move X8, [X21+200]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+288], V4
	036 Move [X31+296], V4
	037 Move [X31+192], V0
	038 Move [X31+200], V1
	039 Move [X31+224], V2
	040 Move [X31+232], V3
	041 Move [X31+256], V4
	042 Move [X31+264], V4
	043 Compare X8, 0
	044 JumpIfNotEqual {50}
	045 Move X0, -51331072
	046 Add X0, X0, 1162
	047 Call 0x1C17CB8
	048 Move X8, X0
	049 Move [X21+200], X0
	050 Add X1, X31, 256
	051 Move X0, X20
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move V0, [X31+256]
	054 Move V1, [X31+272]
	055 Move V2, [X31+288]
	056 Move V3, [X31+304]
	057 Add X8, X31, 256
	058 Add X0, X31, 128
	059 Move [X31+64], V0
	060 Move [X31+72], V1
	061 Move V0, [X31+192]
	062 Move V1, [X31+208]
	063 Move [X31+96], V2
	064 Move [X31+104], V3
	065 Move V2, [X31+224]
	066 Move V3, [X31+240]
	067 Add X1, X31, 64
	068 Move X2, X31
	069 Move [X31+128], V0
	070 Move [X31+136], V1
	071 Move [X31+160], V2
	072 Move [X31+168], V3
	073 Call Matrix4x4.op_Multiply, X0, X1
	074 Move V0, [X31+256]
	075 Move V1, [X31+272]
	076 Move V2, [X31+288]
	077 Move V3, [X31+304]
	078 Add X0, X31, 0
	079 Move X1, X19
	080 Move [X31], V0
	081 Move [X31+8], V1
	082 Move [X31+32], V2
	083 Move [X31+40], V3
	084 Call GeometryUtility.CalculateFrustumPlanes, X0, X1
	085 Move X20, [X31+352]
	086 Move X19, [X31+360]
	087 Move X30, [X31+336]
	088 Move X21, [X31+344]
	089 Move X29, [X31+320]
	090 Add X31, X31, 368
	091 Return 
	092 Call 0x1C17F20

Method: System.Void CalculateFrustumPlanes(UnityEngine.Matrix4x4 worldToProjectionMatrix, UnityEngine.Plane[] planes)

Disassembly:
	0x03C0B710 MOV W0, W31
	0x03C0B714 RET
	0x03C0B718 STR X30, [X31 - 0x30]!
	0x03C0B71C STP X22, X21, [X31 + 0x10]
	0x03C0B720 STP X20, X19, [X31 + 0x20]
	0x03C0B724 LDR V0, [X0]
	0x03C0B728 MOV X19, X0
	0x03C0B72C ADD X0, X31, 0xC
	0x03C0B730 MOV X1, X31
	0x03C0B734 STR S0, [X31 + 0xC]
	0x03C0B738 BL 0x338FE0C
	0x03C0B73C LDR V0, [X19 + 0x8]
	0x03C0B740 MOV W20, W0
	0x03C0B744 ADD X0, X31, 0xC
	0x03C0B748 MOV X1, X31
	0x03C0B74C STR S0, [X31 + 0xC]
	0x03C0B750 BL 0x338FE0C
	0x03C0B754 LDR V0, [X19 + 0x4]
	0x03C0B758 MOV W21, W0
	0x03C0B75C ADD X0, X31, 0xC
	0x03C0B760 MOV X1, X31
	0x03C0B764 STR S0, [X31 + 0xC]
	0x03C0B768 BL 0x338FE0C
	0x03C0B76C LDR V0, [X19 + 0xC]
	0x03C0B770 MOV W22, W0
	0x03C0B774 ADD X0, X31, 0xC
	0x03C0B778 MOV X1, X31
	0x03C0B77C STR S0, [X31 + 0xC]
	0x03C0B780 BL 0x338FE0C
	0x03C0B784 EOR W8, W20, W21, 0x2
	0x03C0B788 EOR W8, W8, W22, 0x2
	0x03C0B78C LDP X20, X19, [X31 + 0x20]
	0x03C0B790 LDP X22, X21, [X31 + 0x10]
	0x03C0B794 EOR W0, W8, W0, 0x1
	0x03C0B798 LDR X30, [X31], #0x30
	0x03C0B79C RET
	0x03C0B7A0 STR D10, [X31 - 0x40]!
	0x03C0B7A4 STP D9, D8, [X31 + 0x10]
	0x03C0B7A8 STP X30, X21, [X31 + 0x20]
	0x03C0B7AC STP X20, X19, [X31 + 0x30]
	0x03C0B7B0 ADRP X21, 0x7D9000
	0x03C0B7B4 LDRB W8, [X21 + 0x212]
	0x03C0B7B8 MOV X20, X1
	0x03C0B7BC MOV X19, X0
	0x03C0B7C0 TBNZ X8, 0x0, 0x3C0B7D8
	0x03C0B7C4 ADRP X0, 0x510000
	0x03C0B7C8 LDR X0, [X0 + 0x618]
	0x03C0B7CC BL 0x1C16CF4
	0x03C0B7D0 MOVZ W8, 0x1
	0x03C0B7D4 STRB W8, [X21 + 0x212]
	0x03C0B7D8 CBZ X20, 0x3C0B870
	0x03C0B7DC ADRP X8, 0x510000
	0x03C0B7E0 LDR X8, [X8 + 0x618]
	0x03C0B7E4 LDR X9, [X20]
	0x03C0B7E8 LDR X8, [X8]
	0x03C0B7EC CMP X9, X8
	0x03C0B7F0 B.NE 0x3C0B870
	0x03C0B7F4 MOV X0, X20
	0x03C0B7F8 BL 0x1C16E08
	0x03C0B7FC LDP S0, S10, [X0]
	0x03C0B800 LDR V1, [X19]
	0x03C0B804 LDP S9, S8, [X0 + 0x8]
	0x03C0B808 ADD X0, X31, 0xC

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Compare X1, 0
	006 JumpIfEqual {35}
	007 Move W8, [X1+24]
	008 Move X19, X1
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, 0x7DA000
	011 Move V0, [X0+32]
	012 Move V1, [X0+48]
	013 Move V2, [X0]
	014 Move V3, [X0+16]
	015 Move X8, [X20+520]
	016 Move [X31+32], V0
	017 Move [X31+40], V1
	018 Move [X31], V2
	019 Move [X31+8], V3
	020 Compare X8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51339264
	023 Add X0, X0, 1547
	024 Call 0x1C17CB8
	025 Move X8, X0
	026 Move [X20+520], X0
	027 Add X1, X31, 0
	028 Move X0, X19
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X20, [X31+80]
	031 Move X19, [X31+88]
	032 Move X30, [X31+64]
	033 Add X31, X31, 96
	034 Return 
	035 Move X0, 0x4EE000
	036 Move X0, [X0+1320]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0x554000
	041 Move X0, [X0+3216]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Move X2, X31
	046 Call ArgumentNullException..ctor, X0, X1
	047 Move X0, 0x4F1000
	048 Move X0, [X0+1400]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X19, X0
	052 Move X0, 0x554000
	053 Move X0, [X0+3224]
	054 Call 0x1C17D08
	055 Move X20, X0
	056 Move X0, 0x554000
	057 Move X0, [X0+3216]
	058 Call 0x1C17D08
	059 Move X2, X0
	060 Move X0, X19
	061 Move X1, X20
	062 Move X3, X31
	063 Call ArgumentException..ctor, X0, X1, X2
	064 Move X0, 0x554000
	065 Move X0, [X0+3232]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: System.Boolean TestPlanesAABB(UnityEngine.Plane[] planes, UnityEngine.Bounds bounds)

Disassembly:
	0x03C0B850 TBZ X0, 0x0, 0x3C0B870
	0x03C0B854 LDR V0, [X19 + 0xC]
	0x03C0B858 ADD X0, X31, 0xC
	0x03C0B85C MOV X1, X31
	0x03C0B860 STR S0, [X31 + 0xC]
	0x03C0B864 MOV V0.16B, V8.16B
	0x03C0B868 BL 0x338FDC0
	0x03C0B86C B 0x3C0B874
	0x03C0B870 MOV W0, W31
	0x03C0B874 LDP X20, X19, [X31 + 0x30]
	0x03C0B878 LDP X30, X21, [X31 + 0x20]
	0x03C0B87C LDP D9, D8, [X31 + 0x10]
	0x03C0B880 AND W0, W0, 0x1
	0x03C0B884 LDR V10, [X31], #0x40
	0x03C0B888 RET
	0x03C0B88C STR D10, [X31 - 0x30]!
	0x03C0B890 STP D9, D8, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DA000
	006 Move X2, [X21+512]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51421184
	012 Add X0, X0, 3274
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+512], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Internal_ExtractPlanes(out UnityEngine.Plane[] planes, UnityEngine.Matrix4x4 worldToProjectionMatrix)

Disassembly:
	0x03C0B80C MOV X1, X31
	0x03C0B810 STR S1, [X31 + 0xC]
	0x03C0B814 BL 0x338FDC0
	0x03C0B818 TBZ X0, 0x0, 0x3C0B870
	0x03C0B81C LDR V0, [X19 + 0x4]
	0x03C0B820 ADD X0, X31, 0xC
	0x03C0B824 MOV X1, X31
	0x03C0B828 STR S0, [X31 + 0xC]
	0x03C0B82C MOV V0.16B, V10.16B
	0x03C0B830 BL 0x338FDC0
	0x03C0B834 TBZ X0, 0x0, 0x3C0B870
	0x03C0B838 LDR V0, [X19 + 0x8]
	0x03C0B83C ADD X0, X31, 0xC
	0x03C0B840 MOV X1, X31
	0x03C0B844 STR S0, [X31 + 0xC]
	0x03C0B848 MOV V0.16B, V9.16B
	0x03C0B84C BL 0x338FDC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DA000
	006 Move X2, [X21+520]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51339264
	012 Add X0, X0, 1547
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+520], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean TestPlanesAABB_Injected(UnityEngine.Plane[] planes, ref UnityEngine.Bounds bounds)

Disassembly:
	0x03C0B894 STP X30, X19, [X31 + 0x20]
	0x03C0B898 MOV V10.16B, V1.16B
	0x03C0B89C LDR V1, [X0]
	0x03C0B8A0 MOV X19, X0
	0x03C0B8A4 ADD X0, X31, 0xC
	0x03C0B8A8 MOV X1, X31
	0x03C0B8AC MOV V8.16B, V3.16B
	0x03C0B8B0 MOV V9.16B, V2.16B
	0x03C0B8B4 STR S1, [X31 + 0xC]
	0x03C0B8B8 BL 0x338FDC0
	0x03C0B8BC TBZ X0, 0x0, 0x3C0B914
	0x03C0B8C0 LDR V0, [X19 + 0x4]
	0x03C0B8C4 ADD X0, X31, 0xC
	0x03C0B8C8 MOV X1, X31
	0x03C0B8CC STR S0, [X31 + 0xC]
	0x03C0B8D0 MOV V0.16B, V10.16B
	0x03C0B8D4 BL 0x338FDC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DA000
	006 Move X2, [X21+512]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51421184
	012 Add X0, X0, 3274
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+512], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Internal_ExtractPlanes_Injected(out UnityEngine.Plane[] planes, ref UnityEngine.Matrix4x4 worldToProjectionMatrix)

Disassembly:
	0x03C0B8D8 TBZ X0, 0x0, 0x3C0B914
	0x03C0B8DC LDR V0, [X19 + 0x8]
	0x03C0B8E0 ADD X0, X31, 0xC
	0x03C0B8E4 MOV X1, X31
	0x03C0B8E8 STR S0, [X31 + 0xC]
	0x03C0B8EC MOV V0.16B, V9.16B
	0x03C0B8F0 BL 0x338FDC0
	0x03C0B8F4 TBZ X0, 0x0, 0x3C0B914
	0x03C0B8F8 LDR V0, [X19 + 0xC]
	0x03C0B8FC ADD X0, X31, 0xC
	0x03C0B900 MOV X1, X31
	0x03C0B904 STR S0, [X31 + 0xC]
	0x03C0B908 MOV V0.16B, V8.16B
	0x03C0B90C BL 0x338FDC0
	0x03C0B910 B 0x3C0B918
	0x03C0B914 MOV W0, W31
	0x03C0B918 LDP X30, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DA000
	006 Move X2, [X21+520]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51339264
	012 Add X0, X0, 1547
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+520], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

