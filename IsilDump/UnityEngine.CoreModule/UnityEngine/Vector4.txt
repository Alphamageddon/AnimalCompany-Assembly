Type: UnityEngine.Vector4

Method: System.Single get_Item(System.Int32 index)

Disassembly:
	0x03C2ECF8 BL 0x1C16E00
	0x03C2ECFC CBZ X0, 0x3C2EFF8
	0x03C2ED00 LDR W8, [X22 + 0x18]
	0x03C2ED04 CMP W8, 0x4
	0x03C2ED08 B.LS 0x3C2EFF4
	0x03C2ED0C ADD X0, X19, 0x14
	0x03C2ED10 MOV X1, X21
	0x03C2ED14 MOV X2, X20
	0x03C2ED18 MOV X3, X31
	0x03C2ED1C STR X23, [X22 + 0x40]
	0x03C2ED20 BL 0x338FFB4
	0x03C2ED24 MOV X23, X0
	0x03C2ED28 CBZ X0, 0x3C2ED40
	0x03C2ED2C LDR X8, [X22]
	0x03C2ED30 MOV X0, X23
	0x03C2ED34 LDR X1, [X8 + 0x40]
	0x03C2ED38 BL 0x1C16E00
	0x03C2ED3C CBZ X0, 0x3C2EFF8
	0x03C2ED40 LDR W8, [X22 + 0x18]
	0x03C2ED44 CMP W8, 0x5
	0x03C2ED48 B.LS 0x3C2EFF4
	0x03C2ED4C ADD X0, X19, 0x24
	0x03C2ED50 MOV X1, X21
	0x03C2ED54 MOV X2, X20
	0x03C2ED58 MOV X3, X31
	0x03C2ED5C STR X23, [X22 + 0x48]
	0x03C2ED60 BL 0x338FFB4
	0x03C2ED64 MOV X23, X0
	0x03C2ED68 CBZ X0, 0x3C2ED80
	0x03C2ED6C LDR X8, [X22]
	0x03C2ED70 MOV X0, X23
	0x03C2ED74 LDR X1, [X8 + 0x40]
	0x03C2ED78 BL 0x1C16E00
	0x03C2ED7C CBZ X0, 0x3C2EFF8
	0x03C2ED80 LDR W8, [X22 + 0x18]
	0x03C2ED84 CMP W8, 0x6

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -50950144
	005 Move W8, W1
	006 Add X9, X9, 3514
	007 NotImplemented "Instruction ADR not yet implemented."
	008 Move W11, [X9]
	009 Add X10, X10, X11
	010 CallNoReturn X10
	011 Add X0, X0, 4
	012 Add X0, X0, 8
	013 Add X0, X0, 12
	014 Move V0, [X0]
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return V0
	018 Move X0, 0x4D0000
	019 Move X0, [X0+3960]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0x52A000
	024 Move X0, [X0+928]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call IndexOutOfRangeException..ctor, X0, X1
	030 Move X0, 0x532000
	031 Move X0, [X0+688]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC

Method: System.Void set_Item(System.Int32 index, System.Single value)

Disassembly:
	0x03C2ED88 B.LS 0x3C2EFF4
	0x03C2ED8C ADD X0, X19, 0x34
	0x03C2ED90 MOV X1, X21
	0x03C2ED94 MOV X2, X20
	0x03C2ED98 MOV X3, X31
	0x03C2ED9C STR X23, [X22 + 0x50]
	0x03C2EDA0 BL 0x338FFB4
	0x03C2EDA4 MOV X23, X0
	0x03C2EDA8 CBZ X0, 0x3C2EDC0
	0x03C2EDAC LDR X8, [X22]
	0x03C2EDB0 MOV X0, X23
	0x03C2EDB4 LDR X1, [X8 + 0x40]
	0x03C2EDB8 BL 0x1C16E00
	0x03C2EDBC CBZ X0, 0x3C2EFF8
	0x03C2EDC0 LDR W8, [X22 + 0x18]
	0x03C2EDC4 CMP W8, 0x7
	0x03C2EDC8 B.LS 0x3C2EFF4
	0x03C2EDCC ADD X0, X19, 0x8
	0x03C2EDD0 MOV X1, X21
	0x03C2EDD4 MOV X2, X20
	0x03C2EDD8 MOV X3, X31
	0x03C2EDDC STR X23, [X22 + 0x58]
	0x03C2EDE0 BL 0x338FFB4
	0x03C2EDE4 MOV X23, X0
	0x03C2EDE8 CBZ X0, 0x3C2EE00
	0x03C2EDEC LDR X8, [X22]
	0x03C2EDF0 MOV X0, X23
	0x03C2EDF4 LDR X1, [X8 + 0x40]
	0x03C2EDF8 BL 0x1C16E00
	0x03C2EDFC CBZ X0, 0x3C2EFF8
	0x03C2EE00 LDR W8, [X22 + 0x18]
	0x03C2EE04 CMP W8, 0x8
	0x03C2EE08 B.LS 0x3C2EFF4
	0x03C2EE0C ADD X0, X19, 0x18
	0x03C2EE10 MOV X1, X21
	0x03C2EE14 MOV X2, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -50950144
	005 Move W8, W1
	006 Add X9, X9, 3514
	007 NotImplemented "Instruction ADR not yet implemented."
	008 Move W11, [X9]
	009 Add X10, X10, X11
	010 CallNoReturn X10
	011 Add X0, X0, 4
	012 Add X0, X0, 8
	013 Add X0, X0, 12
	014 Move [X0], S0
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 
	018 Move X0, 0x4D0000
	019 Move X0, [X0+3960]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0x52A000
	024 Move X0, [X0+928]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call IndexOutOfRangeException..ctor, X0, X1
	030 Move X0, 0x52A000
	031 Move X0, [X0+936]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC

Method: System.Void .ctor(System.Single x, System.Single y, System.Single z, System.Single w)

Disassembly:
	0x03C2EE18 MOV X3, X31
	0x03C2EE1C STR X23, [X22 + 0x60]
	0x03C2EE20 BL 0x338FFB4

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Move [X0+16], S3
	005 Return 

Method: System.Void .ctor(System.Single x, System.Single y)

Disassembly:
	0x03C2EE24 MOV X23, X0
	0x03C2EE28 CBZ X0, 0x3C2EE40
	0x03C2EE2C LDR X8, [X22]

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], X31
	004 Return 

Method: System.Void Set(System.Single newX, System.Single newY, System.Single newZ, System.Single newW)

Disassembly:
	0x03C2EE30 MOV X0, X23
	0x03C2EE34 LDR X1, [X8 + 0x40]
	0x03C2EE38 BL 0x1C16E00

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Move [X0+16], S3
	005 Return 

Method: UnityEngine.Vector4 Lerp(UnityEngine.Vector4 a, UnityEngine.Vector4 b, System.Single t)

Disassembly:
	0x03C2EE3C CBZ X0, 0x3C2EFF8
	0x03C2EE40 LDR W8, [X22 + 0x18]
	0x03C2EE44 CMP W8, 0x9
	0x03C2EE48 B.LS 0x3C2EFF4
	0x03C2EE4C ADD X0, X19, 0x28
	0x03C2EE50 MOV X1, X21
	0x03C2EE54 MOV X2, X20
	0x03C2EE58 MOV X3, X31
	0x03C2EE5C STR X23, [X22 + 0x68]
	0x03C2EE60 BL 0x338FFB4
	0x03C2EE64 MOV X23, X0
	0x03C2EE68 CBZ X0, 0x3C2EE80
	0x03C2EE6C LDR X8, [X22]
	0x03C2EE70 MOV X0, X23
	0x03C2EE74 LDR X1, [X8 + 0x40]
	0x03C2EE78 BL 0x1C16E00
	0x03C2EE7C CBZ X0, 0x3C2EFF8
	0x03C2EE80 LDR W8, [X22 + 0x18]
	0x03C2EE84 CMP W8, 0xA

ISIL:
	001 Move V16, [X31]
	002 Move S17, 1
	003 Subtract S4, S4, S0
	004 Subtract S5, S5, S1
	005 NotImplemented "Instruction FMIN not yet implemented."
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move S16, W31
	008 Subtract S6, S6, S2
	009 Subtract S7, S7, S3
	010 NotImplemented "Instruction FCSEL not yet implemented."
	011 Multiply S4, S4, S16
	012 Multiply S5, S5, S16
	013 Multiply S6, S6, S16
	014 Multiply S7, S7, S16
	015 Add S0, S0, S4
	016 Add S1, S1, S5
	017 Add S2, S2, S6
	018 Add S3, S3, S7
	019 Return X0

Method: System.Void Scale(UnityEngine.Vector4 scale)

Disassembly:
	0x03C2EE88 B.LS 0x3C2EFF4
	0x03C2EE8C ADD X0, X19, 0x38
	0x03C2EE90 MOV X1, X21
	0x03C2EE94 MOV X2, X20
	0x03C2EE98 MOV X3, X31
	0x03C2EE9C STR X23, [X22 + 0x70]
	0x03C2EEA0 BL 0x338FFB4

ISIL:
	001 Move V4, [X0]
	002 Move V0.S[1], V1.S[0]
	003 Move V0.S[2], V2.S[0]
	004 Move V0.S[3], V3.S[0]
	005 NotImplemented "Instruction INVALID not yet implemented."
	006 Move [X0], V0
	007 Return 

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C2EEA4 MOV X23, X0
	0x03C2EEA8 CBZ X0, 0x3C2EEC0
	0x03C2EEAC LDR X8, [X22]
	0x03C2EEB0 MOV X0, X23
	0x03C2EEB4 LDR X1, [X8 + 0x40]
	0x03C2EEB8 BL 0x1C16E00
	0x03C2EEBC CBZ X0, 0x3C2EFF8
	0x03C2EEC0 LDR W8, [X22 + 0x18]
	0x03C2EEC4 CMP W8, 0xB
	0x03C2EEC8 B.LS 0x3C2EFF4
	0x03C2EECC ADD X0, X19, 0xC
	0x03C2EED0 MOV X1, X21
	0x03C2EED4 MOV X2, X20
	0x03C2EED8 MOV X3, X31
	0x03C2EEDC STR X23, [X22 + 0x78]
	0x03C2EEE0 BL 0x338FFB4
	0x03C2EEE4 MOV X23, X0
	0x03C2EEE8 CBZ X0, 0x3C2EF00
	0x03C2EEEC LDR X8, [X22]
	0x03C2EEF0 MOV X0, X23
	0x03C2EEF4 LDR X1, [X8 + 0x40]
	0x03C2EEF8 BL 0x1C16E00
	0x03C2EEFC CBZ X0, 0x3C2EFF8
	0x03C2EF00 LDR W8, [X22 + 0x18]
	0x03C2EF04 CMP W8, 0xC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X1, X31
	007 Move X19, X0
	008 Call Single.GetHashCode, X0
	009 Move W20, W0
	010 Add X0, X19, 4
	011 Move X1, X31
	012 Call Single.GetHashCode, X0
	013 Move W21, W0
	014 Add X0, X19, 8
	015 Move X1, X31
	016 Call Single.GetHashCode, X0
	017 Move W22, W0
	018 Add X0, X19, 12
	019 Move X1, X31
	020 Call Single.GetHashCode, X0
	021 Xor W8, W20, W21
	022 Xor W8, W8, W22
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Xor W0, W8, W0
	028 Move X30, [X31+48]
	029 Return X0

Method: System.Boolean Equals(System.Object other)

Disassembly:
	0x03C2EF08 B.LS 0x3C2EFF4
	0x03C2EF0C ADD X0, X19, 0x1C
	0x03C2EF10 MOV X1, X21
	0x03C2EF14 MOV X2, X20
	0x03C2EF18 MOV X3, X31
	0x03C2EF1C STR X23, [X22 + 0x80]
	0x03C2EF20 BL 0x338FFB4
	0x03C2EF24 MOV X23, X0
	0x03C2EF28 CBZ X0, 0x3C2EF40
	0x03C2EF2C LDR X8, [X22]
	0x03C2EF30 MOV X0, X23
	0x03C2EF34 LDR X1, [X8 + 0x40]
	0x03C2EF38 BL 0x1C16E00
	0x03C2EF3C CBZ X0, 0x3C2EFF8
	0x03C2EF40 LDR W8, [X22 + 0x18]
	0x03C2EF44 CMP W8, 0xD
	0x03C2EF48 B.LS 0x3C2EFF4
	0x03C2EF4C ADD X0, X19, 0x2C
	0x03C2EF50 MOV X1, X21
	0x03C2EF54 MOV X2, X20
	0x03C2EF58 MOV X3, X31
	0x03C2EF5C STR X23, [X22 + 0x88]
	0x03C2EF60 BL 0x338FFB4
	0x03C2EF64 MOV X23, X0
	0x03C2EF68 CBZ X0, 0x3C2EF80
	0x03C2EF6C LDR X8, [X22]
	0x03C2EF70 MOV X0, X23
	0x03C2EF74 LDR X1, [X8 + 0x40]
	0x03C2EF78 BL 0x1C16E00
	0x03C2EF7C CBZ X0, 0x3C2EFF8
	0x03C2EF80 LDR W8, [X22 + 0x18]
	0x03C2EF84 CMP W8, 0xE
	0x03C2EF88 B.LS 0x3C2EFF4
	0x03C2EF8C ADD X0, X19, 0x3C
	0x03C2EF90 MOV X1, X21
	0x03C2EF94 MOV X2, X20
	0x03C2EF98 MOV X3, X31
	0x03C2EF9C STR X23, [X22 + 0x90]
	0x03C2EFA0 BL 0x338FFB4
	0x03C2EFA4 MOV X19, X0
	0x03C2EFA8 CBZ X0, 0x3C2EFC0
	0x03C2EFAC LDR X8, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B8000
	006 Move W8, [X21+297]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4CD000
	014 Move X0, [X0+2464]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+297], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x4CD000
	021 Move X8, [X8+2464]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move V0, [X0]
	034 Move V1, [X19]
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move V0, [X0+4]
	037 Move V1, [X19+4]
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 Move V0, [X0+8]
	040 Move V1, [X19+8]
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move V0, [X0+12]
	043 Move V1, [X19+12]
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."

Method: System.Boolean Equals(UnityEngine.Vector4 other)

Disassembly:
	0x03C2EFB0 MOV X0, X19
	0x03C2EFB4 LDR X1, [X8 + 0x40]
	0x03C2EFB8 BL 0x1C16E00
	0x03C2EFBC CBZ X0, 0x3C2EFF8
	0x03C2EFC0 LDR W8, [X22 + 0x18]
	0x03C2EFC4 CMP W8, 0xF
	0x03C2EFC8 B.LS 0x3C2EFF4
	0x03C2EFCC STR X19, [X22 + 0x98]
	0x03C2EFD0 ADRP X8, 0x531000
	0x03C2EFD4 LDR X8, [X8 + 0x298]
	0x03C2EFD8 MOV X1, X22
	0x03C2EFDC LDP X20, X19, [X31 + 0x20]
	0x03C2EFE0 LDP X22, X21, [X31 + 0x10]
	0x03C2EFE4 LDR X0, [X8]
	0x03C2EFE8 MOV X2, X31

ISIL:
	001 Move V4, [X0]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move V0, [X0+4]
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 Move V0, [X0+8]
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move V0, [X0+12]
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Return X0
	011 Move W0, W31
	012 Return X0

Method: UnityEngine.Vector4 Normalize(UnityEngine.Vector4 a)

Disassembly:
	0x03C2EFEC LDP X30, X23, [X31], #0x30
	0x03C2EFF0 B 0x3C96574
	0x03C2EFF4 BL 0x1C16F28
	0x03C2EFF8 BL 0x1C16F44
	0x03C2EFFC MOV X1, X31
	0x03C2F000 BL 0x1C16DEC
	0x03C2F004 BL 0x1C16F20
	0x03C2F008 STP X30, X21, [X31 - 0x20]!
	0x03C2F00C STP X20, X19, [X31 + 0x10]
	0x03C2F010 ADRP X21, 0x7B6000
	0x03C2F014 ADRP X20, 0x4EE000
	0x03C2F018 LDRB W8, [X21 + 0x132]
	0x03C2F01C LDR X20, [X20 + 0x148]
	0x03C2F020 MOV X19, X0
	0x03C2F024 TBNZ X8, 0x0, 0x3C2F03C
	0x03C2F028 ADRP X0, 0x4EE000
	0x03C2F02C LDR X0, [X0 + 0x148]
	0x03C2F030 BL 0x1C16CF4
	0x03C2F034 MOVZ W8, 0x1
	0x03C2F038 STRB W8, [X21 + 0x132]
	0x03C2F03C ADD X0, X19, 0x8
	0x03C2F040 STR X31, [X19], #0x18
	0x03C2F044 LDR X1, [X20]
	0x03C2F048 BL 0x23D5AD4
	0x03C2F04C LDR X1, [X20]
	0x03C2F050 MOV X0, X19
	0x03C2F054 LDP X20, X19, [X31 + 0x10]
	0x03C2F058 LDP X30, X21, [X31], #0x20
	0x03C2F05C B 0x23D5AD4
	0x03C2F060 STR X30, [X31 - 0x40]!
	0x03C2F064 STP X24, X23, [X31 + 0x10]
	0x03C2F068 STP X22, X21, [X31 + 0x20]
	0x03C2F06C STP X20, X19, [X31 + 0x30]
	0x03C2F070 ADRP X24, 0x7B6000
	0x03C2F074 ADRP X23, 0x4EE000
	0x03C2F078 ADRP X22, 0x530000
	0x03C2F07C ADRP X20, 0x4EF000
	0x03C2F080 ADRP X21, 0x4EE000
	0x03C2F084 LDRB W8, [X24 + 0x133]
	0x03C2F088 LDR X23, [X23 + 0x148]
	0x03C2F08C LDR X22, [X22 + 0x2B8]
	0x03C2F090 LDR X20, [X20 + 0x1F8]
	0x03C2F094 LDR X21, [X21 + 0x958]
	0x03C2F098 MOV X19, X0
	0x03C2F09C TBNZ X8, 0x0, 0x3C2F0D8
	0x03C2F0A0 ADRP X0, 0x4EE000
	0x03C2F0A4 LDR X0, [X0 + 0x148]
	0x03C2F0A8 BL 0x1C16CF4
	0x03C2F0AC ADRP X0, 0x530000
	0x03C2F0B0 LDR X0, [X0 + 0x2B8]
	0x03C2F0B4 BL 0x1C16CF4
	0x03C2F0B8 ADRP X0, 0x4EE000
	0x03C2F0BC LDR X0, [X0 + 0x958]
	0x03C2F0C0 BL 0x1C16CF4
	0x03C2F0C4 ADRP X0, 0x4EF000
	0x03C2F0C8 LDR X0, [X0 + 0x1F8]

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move X19, 0x7AB000
	008 Move W8, [X19+3673]
	009 Move V8, V3
	010 Move V9, V2
	011 Move V10, V1
	012 Move V11, V0
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0x4C5000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3673], W8
	020 Move X8, 0x4C5000
	021 Move X8, [X8+1448]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Multiply S2, S11, S11
	028 Multiply S3, S10, S10
	029 Move X8, -51658752
	030 Multiply S1, S9, S9
	031 Add S2, S2, S3
	032 Move V4, [X8+380]
	033 Multiply S0, S8, S8
	034 Add S1, S1, S2
	035 Add S0, S0, S1
	036 NotImplemented "Instruction FSQRT not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 NotImplemented "Instruction FDIV not yet implemented."
	039 NotImplemented "Instruction FDIV not yet implemented."
	040 NotImplemented "Instruction FDIV not yet implemented."
	041 NotImplemented "Instruction FDIV not yet implemented."
	042 Move X19, 0x7AA000
	043 Move W8, [X19+3674]
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0x4CC000
	047 Move X0, [X0+2464]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X19+3674], W8
	051 Move X8, 0x4CC000
	052 Move X8, [X8+2464]
	053 Move X8, [X8]
	054 Move X8, [X8+184]
	055 Move S0, [X8]
	056 Move S1, [X8+4]
	057 Move S2, [X8+8]
	058 Move S3, [X8+12]
	059 Move X30, [X31+32]
	060 Move X19, [X31+40]
	061 Move D9, [X31+16]
	062 Move D8, [X31+24]
	063 Move D11, [X31+48]
	064 Move D10, [X31+56]
	065 Return X0

Method: System.Void Normalize()

Disassembly:
	0x03C2F0CC BL 0x1C16CF4
	0x03C2F0D0 MOVZ W8, 0x1
	0x03C2F0D4 STRB W8, [X24 + 0x133]
	0x03C2F0D8 LDR X1, [X23]
	0x03C2F0DC MOV X0, X19
	0x03C2F0E0 BL 0x23D5AD4
	0x03C2F0E4 LDR X1, [X23]
	0x03C2F0E8 ADD X0, X19, 0x10
	0x03C2F0EC BL 0x23D5AD4
	0x03C2F0F0 LDR X1, [X22]
	0x03C2F0F4 ADD X0, X19, 0x20
	0x03C2F0F8 BL 0x23DA470
	0x03C2F0FC LDR X1, [X20]
	0x03C2F100 ADD X0, X19, 0x30
	0x03C2F104 BL 0x23F1210
	0x03C2F108 LDR X1, [X21]
	0x03C2F10C ADD X0, X19, 0x40
	0x03C2F110 BL 0x23DFC88
	0x03C2F114 LDR X1, [X20]
	0x03C2F118 ADD X0, X19, 0x50
	0x03C2F11C LDP X20, X19, [X31 + 0x30]
	0x03C2F120 LDP X22, X21, [X31 + 0x20]
	0x03C2F124 LDP X24, X23, [X31 + 0x10]
	0x03C2F128 LDR X30, [X31], #0x40
	0x03C2F12C B 0x23F1210
	0x03C2F130 STP X30, X25, [X31 - 0x40]!
	0x03C2F134 STP X24, X23, [X31 + 0x10]
	0x03C2F138 STP X22, X21, [X31 + 0x20]
	0x03C2F13C STP X20, X19, [X31 + 0x30]
	0x03C2F140 ADRP X19, 0x7B6000
	0x03C2F144 ADRP X21, 0x530000
	0x03C2F148 LDRB W8, [X19 + 0x134]
	0x03C2F14C LDR X21, [X21 + 0x2C0]
	0x03C2F150 TBNZ X8, 0x0, 0x3C2F1A4
	0x03C2F154 ADRP X0, 0x530000
	0x03C2F158 LDR X0, [X0 + 0x2C8]
	0x03C2F15C BL 0x1C16CF4
	0x03C2F160 ADRP X0, 0x530000
	0x03C2F164 LDR X0, [X0 + 0x2D0]
	0x03C2F168 BL 0x1C16CF4
	0x03C2F16C ADRP X0, 0x530000
	0x03C2F170 LDR X0, [X0 + 0x2D8]
	0x03C2F174 BL 0x1C16CF4
	0x03C2F178 ADRP X0, 0x530000
	0x03C2F17C LDR X0, [X0 + 0x2E0]
	0x03C2F180 BL 0x1C16CF4
	0x03C2F184 ADRP X0, 0x530000
	0x03C2F188 LDR X0, [X0 + 0x2E8]
	0x03C2F18C BL 0x1C16CF4
	0x03C2F190 ADRP X0, 0x530000
	0x03C2F194 LDR X0, [X0 + 0x2C0]
	0x03C2F198 BL 0x1C16CF4
	0x03C2F19C MOVZ W8, 0x1
	0x03C2F1A0 STRB W8, [X19 + 0x134]
	0x03C2F1A4 LDR X0, [X21]
	0x03C2F1A8 ADRP X25, 0x530000

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x7AA000
	009 Move S8, [X0]
	010 Move S9, [X0+4]
	011 Move W8, [X20+3673]
	012 Move S10, [X0+8]
	013 Move S11, [X0+12]
	014 Move X19, X0
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x4C5000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3673], W8
	022 Move X8, 0x4C5000
	023 Move X8, [X8+1448]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Multiply S2, S8, S8
	030 Multiply S3, S9, S9
	031 Move X8, -51658752
	032 Multiply S1, S10, S10
	033 Add S2, S2, S3
	034 Move V3, [X8+380]
	035 Multiply S0, S11, S11
	036 Add S1, S1, S2
	037 Add S0, S0, S1
	038 NotImplemented "Instruction FSQRT not yet implemented."
	039 NotImplemented "Instruction FCMP not yet implemented."
	040 Move V1, [X19]
	041 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	042 NotImplemented "Instruction INVALID not yet implemented."
	043 Move X20, 0x7AA000
	044 Move W8, [X20+3674]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x4CC000
	048 Move X0, [X0+2464]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+3674], W8
	052 Move X8, 0x4CC000
	053 Move X8, [X8+2464]
	054 Move X8, [X8]
	055 Move X8, [X8+184]
	056 Move V0, [X8]
	057 Move [X19], V0
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X30, [X31+32]
	061 Move D9, [X31+16]
	062 Move D8, [X31+24]
	063 Move D11, [X31+64]
	064 Move D10, [X31+72]
	065 Return 

Method: UnityEngine.Vector4 get_normalized()

Disassembly:
	0x03C2F1AC ADRP X20, 0x530000
	0x03C2F1B0 ADRP X22, 0x530000
	0x03C2F1B4 ADRP X24, 0x530000
	0x03C2F1B8 ADRP X23, 0x530000
	0x03C2F1BC LDR X25, [X25 + 0x2C8]
	0x03C2F1C0 LDR W8, [X0 + 0xE0]
	0x03C2F1C4 LDR X20, [X20 + 0x2E0]
	0x03C2F1C8 LDR X22, [X22 + 0x2D8]
	0x03C2F1CC LDR X24, [X24 + 0x2D0]
	0x03C2F1D0 LDR X23, [X23 + 0x2E8]
	0x03C2F1D4 CBNZ W8, 0x3C2F1E0
	0x03C2F1D8 BL 0x1C16DFC
	0x03C2F1DC LDR X0, [X21]
	0x03C2F1E0 LDR X8, [X0 + 0xB8]
	0x03C2F1E4 LDR X0, [X25]
	0x03C2F1E8 LDR X19, [X8]
	0x03C2F1EC BL 0x1C16F10
	0x03C2F1F0 LDR X2, [X20]
	0x03C2F1F4 MOV X1, X19
	0x03C2F1F8 MOV X3, X31
	0x03C2F1FC MOV X20, X0
	0x03C2F200 BL 0x2A79978
	0x03C2F204 LDR X8, [X22]
	0x03C2F208 LDR X8, [X8 + 0xB8]
	0x03C2F20C STR X20, [X8]
	0x03C2F210 LDR X8, [X21]
	0x03C2F214 LDR X0, [X24]
	0x03C2F218 LDR X8, [X8 + 0xB8]
	0x03C2F21C LDR X19, [X8]
	0x03C2F220 BL 0x1C16F10
	0x03C2F224 LDR X2, [X23]
	0x03C2F228 MOV X1, X19
	0x03C2F22C MOV X3, X31
	0x03C2F230 MOV X20, X0
	0x03C2F234 BL 0x2A79BA8
	0x03C2F238 LDR X8, [X22]
	0x03C2F23C LDP X22, X21, [X31 + 0x20]
	0x03C2F240 LDP X24, X23, [X31 + 0x10]
	0x03C2F244 LDR X8, [X8 + 0xB8]
	0x03C2F248 STR X20, [X8 + 0x8]
	0x03C2F24C LDP X20, X19, [X31 + 0x30]
	0x03C2F250 LDP X30, X25, [X31], #0x40
	0x03C2F254 RET
	0x03C2F258 STR X30, [X31 - 0x20]!
	0x03C2F25C STP X20, X19, [X31 + 0x10]
	0x03C2F260 ADRP X19, 0x7B6000
	0x03C2F264 ADRP X20, 0x530000
	0x03C2F268 LDRB W8, [X19 + 0x135]
	0x03C2F26C LDR X20, [X20 + 0x2C0]
	0x03C2F270 TBNZ X8, 0x0, 0x3C2F288
	0x03C2F274 ADRP X0, 0x530000
	0x03C2F278 LDR X0, [X0 + 0x2C0]
	0x03C2F27C BL 0x1C16CF4
	0x03C2F280 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move X19, 0x7AA000
	008 Move S8, [X0]
	009 Move S9, [X0+4]
	010 Move W8, [X19+3673]
	011 Move S11, [X0+8]
	012 Move S10, [X0+12]
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0x4C5000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+3673], W8
	020 Move X8, 0x4C5000
	021 Move X8, [X8+1448]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Multiply S2, S8, S8
	028 Multiply S3, S9, S9
	029 Move X8, -51658752
	030 Multiply S1, S11, S11
	031 Add S2, S2, S3
	032 Move V4, [X8+380]
	033 Multiply S0, S10, S10
	034 Add S1, S1, S2
	035 Add S0, S0, S1
	036 NotImplemented "Instruction FSQRT not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 NotImplemented "Instruction FDIV not yet implemented."
	039 NotImplemented "Instruction FDIV not yet implemented."
	040 NotImplemented "Instruction FDIV not yet implemented."
	041 NotImplemented "Instruction FDIV not yet implemented."
	042 Move X19, 0x7AA000
	043 Move W8, [X19+3674]
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0x4CC000
	047 Move X0, [X0+2464]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X19+3674], W8
	051 Move X8, 0x4CC000
	052 Move X8, [X8+2464]
	053 Move X8, [X8]
	054 Move X8, [X8+184]
	055 Move S0, [X8]
	056 Move S1, [X8+4]
	057 Move S2, [X8+8]
	058 Move S3, [X8+12]
	059 Move X30, [X31+32]
	060 Move X19, [X31+40]
	061 Move D9, [X31+16]
	062 Move D8, [X31+24]
	063 Move D11, [X31+48]
	064 Move D10, [X31+56]
	065 Return X0

Method: System.Single Dot(UnityEngine.Vector4 a, UnityEngine.Vector4 b)

Disassembly:
	0x03C2F284 STRB W8, [X19 + 0x135]
	0x03C2F288 LDR X0, [X20]
	0x03C2F28C BL 0x1C16F10
	0x03C2F290 MOV X1, X31
	0x03C2F294 MOV X19, X0
	0x03C2F298 BL 0x33BDD8C
	0x03C2F29C LDR X8, [X20]
	0x03C2F2A0 LDR X8, [X8 + 0xB8]

ISIL:
	001 Multiply S0, S0, S4
	002 Multiply S1, S1, S5
	003 Multiply S2, S2, S6
	004 Add S0, S0, S1
	005 Add S0, S2, S0
	006 Multiply S1, S3, S7
	007 Add S0, S1, S0
	008 Return V0

Method: System.Single Magnitude(UnityEngine.Vector4 a)

Disassembly:
	0x03C2F2A4 STR X19, [X8]
	0x03C2F2A8 LDP X20, X19, [X31 + 0x10]
	0x03C2F2AC LDR X30, [X31], #0x20
	0x03C2F2B0 RET
	0x03C2F2B4 MOV X1, X31
	0x03C2F2B8 B 0x33BDD8C
	0x03C2F2BC SUB X31, X31, 0x80
	0x03C2F2C0 STR X30, [X31 + 0x30]
	0x03C2F2C4 STP X26, X25, [X31 + 0x40]
	0x03C2F2C8 STP X24, X23, [X31 + 0x50]
	0x03C2F2CC STP X22, X21, [X31 + 0x60]
	0x03C2F2D0 STP X20, X19, [X31 + 0x70]
	0x03C2F2D4 ADRP X26, 0x7B6000
	0x03C2F2D8 ADRP X25, 0x530000
	0x03C2F2DC LDRB W8, [X26 + 0x136]
	0x03C2F2E0 LDR X25, [X25 + 0x2F0]
	0x03C2F2E4 MOV X19, X6
	0x03C2F2E8 MOV W21, W5
	0x03C2F2EC MOV W23, W4
	0x03C2F2F0 MOV X22, X3
	0x03C2F2F4 MOV X24, X2
	0x03C2F2F8 MOV X20, X1
	0x03C2F2FC TBNZ X8, 0x0, 0x3C2F314
	0x03C2F300 ADRP X0, 0x530000
	0x03C2F304 LDR X0, [X0 + 0x2F0]
	0x03C2F308 BL 0x1C16CF4
	0x03C2F30C MOVZ W8, 0x1
	0x03C2F310 STRB W8, [X26 + 0x136]
	0x03C2F314 LDR X3, [X25]
	0x03C2F318 MOV X0, X24
	0x03C2F31C MOV W1, W23
	0x03C2F320 MOV W2, W31
	0x03C2F324 BL 0x2222430
	0x03C2F328 LDR X3, [X25]
	0x03C2F32C MOV X23, X0

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x7B7000
	009 Move X19, 0x4C5000
	010 Move W8, [X20+298]
	011 Move X19, [X19+1448]
	012 Move V10, V3
	013 Move V9, V2
	014 Move V8, V1
	015 Move V11, V0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x4C5000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+298], W8
	025 Move X0, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Multiply S2, S11, S11
	031 Multiply S3, S8, S8
	032 Multiply S1, S9, S9
	033 Add S2, S2, S3
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X30, [X31+32]
	037 Move D9, [X31+16]
	038 Move D8, [X31+24]
	039 Multiply S0, S10, S10
	040 Add S1, S1, S2
	041 Add S0, S0, S1
	042 NotImplemented "Instruction FSQRT not yet implemented."
	043 Move D11, [X31+64]
	044 Move D10, [X31+72]
	045 Return V0

Method: System.Single get_sqrMagnitude()

Disassembly:
	0x03C2F330 MOV X24, X1
	0x03C2F334 MOV X0, X22
	0x03C2F338 MOV W1, W21
	0x03C2F33C MOV W2, W31
	0x03C2F340 BL 0x2222430
	0x03C2F344 CBZ X19, 0x3C2F388
	0x03C2F348 LDR X9, [X19 + 0x18]
	0x03C2F34C LDR X8, [X19 + 0x40]
	0x03C2F350 STP X20, X23, [X31 + 0x8]
	0x03C2F354 STP X24, X0, [X31 + 0x18]

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move S2, [X0+8]
	004 Move S3, [X0+12]
	005 Multiply S0, S0, S0
	006 Multiply S1, S1, S1
	007 Multiply S2, S2, S2
	008 Add S0, S0, S1
	009 Add S0, S2, S0
	010 Multiply S1, S3, S3
	011 Add S0, S1, S0
	012 Return V0

Method: UnityEngine.Vector4 get_zero()

Disassembly:
	0x03C2F358 STR X1, [X31 + 0x28]
	0x03C2F35C LDR X2, [X19 + 0x28]
	0x03C2F360 ADD X1, X31, 0x8
	0x03C2F364 MOV X0, X8
	0x03C2F368 BLR X9
	0x03C2F36C LDP X20, X19, [X31 + 0x70]
	0x03C2F370 LDP X22, X21, [X31 + 0x60]
	0x03C2F374 LDP X24, X23, [X31 + 0x50]
	0x03C2F378 LDP X26, X25, [X31 + 0x40]
	0x03C2F37C LDR X30, [X31 + 0x30]
	0x03C2F380 ADD X31, X31, 0x80
	0x03C2F384 RET
	0x03C2F388 BL 0x1C16F20
	0x03C2F38C SUB X31, X31, 0xE0
	0x03C2F390 STP X29, X30, [X31 + 0x80]
	0x03C2F394 STP X28, X27, [X31 + 0x90]
	0x03C2F398 STP X26, X25, [X31 + 0xA0]
	0x03C2F39C STP X24, X23, [X31 + 0xB0]
	0x03C2F3A0 STP X22, X21, [X31 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7B7000
	005 Move X20, 0x4CC000
	006 Move W8, [X19+299]
	007 Move X20, [X20+2464]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4CC000
	013 Move X0, [X0+2464]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+299], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move S0, [X8]
	022 Move S1, [X8+4]
	023 Move S2, [X8+8]
	024 Move S3, [X8+12]
	025 Move X30, [X31+32]
	026 Return X0

Method: UnityEngine.Vector4 get_one()

Disassembly:
	0x03C2F3A4 STP X20, X19, [X31 + 0xD0]
	0x03C2F3A8 ADRP X29, 0x7B6000
	0x03C2F3AC ADRP X26, 0x530000
	0x03C2F3B0 ADRP X28, 0x530000
	0x03C2F3B4 LDR X23, [X31 + 0xE0]
	0x03C2F3B8 LDRB W8, [X29 + 0x137]
	0x03C2F3BC LDR X26, [X26 + 0x2F0]
	0x03C2F3C0 LDR X28, [X28 + 0x2F8]
	0x03C2F3C4 MOV W20, W7
	0x03C2F3C8 MOV X19, X6
	0x03C2F3CC MOV X21, X5
	0x03C2F3D0 MOV X24, X4
	0x03C2F3D4 MOV X27, X3
	0x03C2F3D8 MOV X25, X2
	0x03C2F3DC MOV X22, X1
	0x03C2F3E0 TBNZ X8, 0x0, 0x3C2F41C
	0x03C2F3E4 ADRP X0, 0x530000
	0x03C2F3E8 LDR X0, [X0 + 0x2F0]
	0x03C2F3EC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7B7000
	005 Move X20, 0x4CC000
	006 Move W8, [X19+300]
	007 Move X20, [X20+2464]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4CC000
	013 Move X0, [X0+2464]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+300], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move S0, [X8+16]
	022 Move S1, [X8+20]
	023 Move S2, [X8+24]
	024 Move S3, [X8+28]
	025 Move X30, [X31+32]
	026 Return X0

Method: UnityEngine.Vector4 op_Addition(UnityEngine.Vector4 a, UnityEngine.Vector4 b)

Disassembly:
	0x03C2F3F0 ADRP X0, 0x530000
	0x03C2F3F4 LDR X0, [X0 + 0x2F8]
	0x03C2F3F8 BL 0x1C16CF4
	0x03C2F3FC ADRP X0, 0x530000
	0x03C2F400 LDR X0, [X0 + 0x300]

ISIL:
	001 Add S0, S0, S4
	002 Add S1, S1, S5
	003 Add S2, S2, S6
	004 Add S3, S3, S7
	005 Return X0

Method: UnityEngine.Vector4 op_Subtraction(UnityEngine.Vector4 a, UnityEngine.Vector4 b)

Disassembly:
	0x03C2F404 BL 0x1C16CF4
	0x03C2F408 ADRP X0, 0x530000
	0x03C2F40C LDR X0, [X0 + 0x308]
	0x03C2F410 BL 0x1C16CF4
	0x03C2F414 MOVZ W8, 0x1

ISIL:
	001 Subtract S0, S0, S4
	002 Subtract S1, S1, S5
	003 Subtract S2, S2, S6
	004 Subtract S3, S3, S7
	005 Return X0

Method: UnityEngine.Vector4 op_UnaryNegation(UnityEngine.Vector4 a)

Disassembly:
	0x03C2F418 STRB W8, [X29 + 0x137]
	0x03C2F41C LDR X3, [X26]
	0x03C2F420 MOV X0, X22
	0x03C2F424 MOV W1, W20
	0x03C2F428 MOV W2, W31

ISIL:
	001 NotImplemented "Instruction FNEG not yet implemented."
	002 NotImplemented "Instruction FNEG not yet implemented."
	003 NotImplemented "Instruction FNEG not yet implemented."
	004 NotImplemented "Instruction FNEG not yet implemented."
	005 Return X0

Method: UnityEngine.Vector4 op_Multiply(UnityEngine.Vector4 a, System.Single d)

Disassembly:
	0x03C2F42C BL 0x2222430
	0x03C2F430 STP X1, X0, [X31 + 0x10]
	0x03C2F434 MOV X0, X25
	0x03C2F438 MOV X1, X31
	0x03C2F43C MOV X2, X31

ISIL:
	001 Multiply S0, S0, S4
	002 Multiply S1, S1, S4
	003 Multiply S2, S2, S4
	004 Multiply S3, S3, S4
	005 Return X0

Method: UnityEngine.Vector4 op_Multiply(System.Single d, UnityEngine.Vector4 a)

Disassembly:
	0x03C2F440 BL 0x33C5D2C
	0x03C2F444 LDR X3, [X26]
	0x03C2F448 ANDS W31, W0, 0x1
	0x03C2F44C CSEL W1, W20, W31, NE
	0x03C2F450 MOV X0, X25
	0x03C2F454 MOV W2, W31

ISIL:
	001 Multiply S5, S1, S0
	002 Multiply S1, S2, S0
	003 Multiply S2, S3, S0
	004 Multiply S3, S4, S0
	005 Move V0, V5
	006 Return X0

Method: UnityEngine.Vector4 op_Division(UnityEngine.Vector4 a, System.Single d)

Disassembly:
	0x03C2F458 BL 0x2222430
	0x03C2F45C STR X0, [X31 + 0x8]
	0x03C2F460 MOV X26, X1
	0x03C2F464 MOV X0, X27
	0x03C2F468 MOV X1, X31

ISIL:
	001 NotImplemented "Instruction FDIV not yet implemented."
	002 NotImplemented "Instruction FDIV not yet implemented."
	003 NotImplemented "Instruction FDIV not yet implemented."
	004 NotImplemented "Instruction FDIV not yet implemented."
	005 Return X0

Method: System.Boolean op_Equality(UnityEngine.Vector4 lhs, UnityEngine.Vector4 rhs)

Disassembly:
	0x03C2F46C MOV X2, X31
	0x03C2F470 BL 0x33C5D2C
	0x03C2F474 LDR X3, [X28]
	0x03C2F478 ANDS W31, W0, 0x1
	0x03C2F47C CSEL W1, W20, W31, NE
	0x03C2F480 MOV X0, X27
	0x03C2F484 MOV W2, W31
	0x03C2F488 BL 0x222246C
	0x03C2F48C MOV X27, X0
	0x03C2F490 MOV X28, X1
	0x03C2F494 MOV X0, X24
	0x03C2F498 MOV X1, X31
	0x03C2F49C MOV X2, X31
	0x03C2F4A0 BL 0x33C5D2C
	0x03C2F4A4 ADRP X25, 0x530000
	0x03C2F4A8 LDR X25, [X25 + 0x308]

ISIL:
	001 Subtract S0, S0, S4
	002 Subtract S1, S1, S5
	003 Move X8, -51662848
	004 Subtract S2, S2, S6
	005 Multiply S0, S0, S0
	006 Multiply S1, S1, S1
	007 Move V4, [X8+3872]
	008 Subtract S3, S3, S7
	009 Multiply S2, S2, S2
	010 Add S0, S0, S1
	011 Add S0, S2, S0
	012 Multiply S1, S3, S3
	013 Add S0, S1, S0
	014 NotImplemented "Instruction FCMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Return X0

Method: System.Boolean op_Inequality(UnityEngine.Vector4 lhs, UnityEngine.Vector4 rhs)

Disassembly:
	0x03C2F4AC ANDS W31, W0, 0x1
	0x03C2F4B0 CSEL W1, W20, W31, NE
	0x03C2F4B4 MOV X0, X24
	0x03C2F4B8 LDR X3, [X25]
	0x03C2F4BC MOV W2, W31
	0x03C2F4C0 BL 0x2222598
	0x03C2F4C4 MOV X24, X0
	0x03C2F4C8 MOV X29, X1
	0x03C2F4CC MOV X0, X21
	0x03C2F4D0 MOV X1, X31
	0x03C2F4D4 MOV X2, X31
	0x03C2F4D8 BL 0x33C5D2C
	0x03C2F4DC ADRP X8, 0x530000
	0x03C2F4E0 LDR X8, [X8 + 0x300]
	0x03C2F4E4 ANDS W31, W0, 0x1
	0x03C2F4E8 CSEL W1, W20, W31, NE

ISIL:
	001 Subtract S0, S0, S4
	002 Subtract S1, S1, S5
	003 Move X8, -51662848
	004 Subtract S2, S2, S6
	005 Multiply S0, S0, S0
	006 Multiply S1, S1, S1
	007 Move V4, [X8+3872]
	008 Subtract S3, S3, S7
	009 Multiply S2, S2, S2
	010 Add S0, S0, S1
	011 Add S0, S2, S0
	012 Multiply S1, S3, S3
	013 Add S0, S1, S0
	014 NotImplemented "Instruction FCMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Return X0

Method: UnityEngine.Vector4 op_Implicit(UnityEngine.Vector3 v)

Disassembly:
	0x03C2F4EC MOV X0, X21
	0x03C2F4F0 LDR X3, [X8]

ISIL:
	001 Move S3, W31
	002 Return X0

Method: UnityEngine.Vector3 op_Implicit(UnityEngine.Vector4 v)

Disassembly:
	0x03C2F4F4 MOV W2, W31

ISIL:
	001 Return X0

Method: UnityEngine.Vector4 op_Implicit(UnityEngine.Vector2 v)

Disassembly:
	0x03C2F4F8 BL 0x22224B4
	0x03C2F4FC MOV X21, X0
	0x03C2F500 MOV X22, X1

ISIL:
	001 Move S2, W31
	002 Move S3, W31
	003 Return X0

Method: UnityEngine.Vector2 op_Implicit(UnityEngine.Vector4 v)

Disassembly:
	0x03C2F504 MOV X0, X19

ISIL:
	001 Return X0

Method: System.String ToString()

Disassembly:
	0x03C2F508 MOV X1, X31
	0x03C2F50C MOV X2, X31
	0x03C2F510 BL 0x33C5D2C
	0x03C2F514 LDR X3, [X25]

ISIL:
	001 Move X1, X31
	002 Move X2, X31
	003 Move X3, X31
	004 Call 0x24556F0
	005 Return X0

Method: System.String ToString(System.String format)

Disassembly:
	0x03C2F518 ANDS W31, W0, 0x1
	0x03C2F51C CSEL W1, W20, W31, NE
	0x03C2F520 MOV X0, X19

ISIL:
	001 Move X2, X31
	002 Move X3, X31
	003 Call 0x24556F0
	004 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider formatProvider)

Disassembly:
	0x03C2F524 MOV W2, W31
	0x03C2F528 BL 0x2222598
	0x03C2F52C CBZ X23, 0x3C2F58C
	0x03C2F530 LDR X11, [X31 + 0x18]
	0x03C2F534 LDR X10, [X31 + 0x10]
	0x03C2F538 LDR X9, [X23 + 0x18]
	0x03C2F53C LDR X8, [X23 + 0x40]
	0x03C2F540 STP X27, X28, [X31 + 0x40]
	0x03C2F544 STP X11, X10, [X31 + 0x20]
	0x03C2F548 LDR X10, [X31 + 0x8]
	0x03C2F54C STP X24, X29, [X31 + 0x50]
	0x03C2F550 STP X21, X22, [X31 + 0x60]
	0x03C2F554 STP X0, X1, [X31 + 0x70]
	0x03C2F558 STP X10, X26, [X31 + 0x30]
	0x03C2F55C LDR X2, [X23 + 0x28]
	0x03C2F560 ADD X1, X31, 0x20
	0x03C2F564 MOV X0, X8
	0x03C2F568 BLR X9
	0x03C2F56C LDP X20, X19, [X31 + 0xD0]
	0x03C2F570 LDP X22, X21, [X31 + 0xC0]
	0x03C2F574 LDP X24, X23, [X31 + 0xB0]
	0x03C2F578 LDP X26, X25, [X31 + 0xA0]
	0x03C2F57C LDP X28, X27, [X31 + 0x90]
	0x03C2F580 LDP X29, X30, [X31 + 0x80]
	0x03C2F584 ADD X31, X31, 0xE0
	0x03C2F588 RET
	0x03C2F58C BL 0x1C16F20
	0x03C2F590 ANDS W31, W0, 0x1
	0x03C2F594 FMOV S0, 1
	0x03C2F598 FMOV S1, 4
	0x03C2F59C FCSEL S1, S1, S0, NE
	0x03C2F5A0 ANDS W31, W1, 0x1
	0x03C2F5A4 FMOV S2, 0.25
	0x03C2F5A8 FCSEL S0, S2, S0, NE
	0x03C2F5AC FMUL S0, S1, S0
	0x03C2F5B0 RET
	0x03C2F5B4 STR D10, [X31 - 0x30]!
	0x03C2F5B8 STP D9, D8, [X31 + 0x8]
	0x03C2F5BC STR X30, [X31 + 0x18]
	0x03C2F5C0 STP X20, X19, [X31 + 0x20]
	0x03C2F5C4 ADRP X20, 0x7B6000
	0x03C2F5C8 ADRP X19, 0x530000
	0x03C2F5CC LDRB W8, [X20 + 0x138]
	0x03C2F5D0 LDR X19, [X19 + 0x310]
	0x03C2F5D4 MOV V8.16B, V2.16B
	0x03C2F5D8 MOV V9.16B, V1.16B
	0x03C2F5DC MOV V10.16B, V0.16B
	0x03C2F5E0 TBNZ X8, 0x0, 0x3C2F5F8
	0x03C2F5E4 ADRP X0, 0x530000
	0x03C2F5E8 LDR X0, [X0 + 0x310]
	0x03C2F5EC BL 0x1C16CF4
	0x03C2F5F0 MOVZ W8, 0x1
	0x03C2F5F4 STRB W8, [X20 + 0x138]
	0x03C2F5F8 LDR X8, [X19]
	0x03C2F5FC ADRP X9, 0xFFFFFFFFFCEBB000
	0x03C2F600 FABS S0, S10
	0x03C2F604 FABS S1, S9
	0x03C2F608 LDR V3, [X9 + 0xBC]
	0x03C2F60C FCMP S0, S1
	0x03C2F610 LDR X8, [X8 + 0xB8]
	0x03C2F614 FABD S2, S0, S0
	0x03C2F618 FCSEL S4, S0, S1, GT
	0x03C2F61C FDIV S2, S2, S4
	0x03C2F620 FCMP S2, S3
	0x03C2F624 B.LE 0x3C2F638
	0x03C2F628 FCMP S0, S1
	0x03C2F62C B.LE 0x3C2F698
	0x03C2F630 STRB W31, [X8]
	0x03C2F634 B 0x3C2F640
	0x03C2F638 LDRB W8, [X8]
	0x03C2F63C CBNZ W8, 0x3C2F6A0
	0x03C2F640 ADRP X19, 0x7AA000
	0x03C2F644 LDRB W8, [X19 + 0x818]
	0x03C2F648 CBNZ W8, 0x3C2F660
	0x03C2F64C ADRP X0, 0x4C4000
	0x03C2F650 LDR X0, [X0 + 0x5A8]
	0x03C2F654 BL 0x1C16CF4
	0x03C2F658 MOVZ W8, 0x1
	0x03C2F65C STRB W8, [X19 + 0x818]
	0x03C2F660 ADRP X8, 0x4C4000
	0x03C2F664 LDR X8, [X8 + 0x5A8]
	0x03C2F668 LDR X0, [X8]
	0x03C2F66C LDR W8, [X0 + 0xE0]
	0x03C2F670 CBNZ W8, 0x3C2F678
	0x03C2F674 BL 0x1C16DFC
	0x03C2F678 FMUL S0, S10, S10
	0x03C2F67C FMUL S1, S9, S9
	0x03C2F680 FADD S0, S0, S1
	0x03C2F684 FSQRT S0, S0
	0x03C2F688 FNEG S1, S0
	0x03C2F68C FCMP S10, 0x0
	0x03C2F690 FCSEL S0, S0, S1, GE
	0x03C2F694 B 0x3C2F6F4
	0x03C2F698 MOVZ W9, 0x1
	0x03C2F69C STRB W9, [X8]
	0x03C2F6A0 ADRP X19, 0x7AA000
	0x03C2F6A4 LDRB W8, [X19 + 0x818]
	0x03C2F6A8 CBNZ W8, 0x3C2F6C0
	0x03C2F6AC ADRP X0, 0x4C4000
	0x03C2F6B0 LDR X0, [X0 + 0x5A8]
	0x03C2F6B4 BL 0x1C16CF4
	0x03C2F6B8 MOVZ W8, 0x1
	0x03C2F6BC STRB W8, [X19 + 0x818]
	0x03C2F6C0 ADRP X8, 0x4C4000
	0x03C2F6C4 LDR X8, [X8 + 0x5A8]
	0x03C2F6C8 LDR X0, [X8]
	0x03C2F6CC LDR W8, [X0 + 0xE0]
	0x03C2F6D0 CBNZ W8, 0x3C2F6D8
	0x03C2F6D4 BL 0x1C16DFC
	0x03C2F6D8 FMUL S0, S10, S10
	0x03C2F6DC FMUL S1, S9, S9
	0x03C2F6E0 FADD S0, S0, S1
	0x03C2F6E4 FSQRT S0, S0
	0x03C2F6E8 FNEG S1, S0
	0x03C2F6EC FCMP S9, 0x0
	0x03C2F6F0 FCSEL S0, S0, S1, LS
	0x03C2F6F4 FMUL S0, S0, S8
	0x03C2F6F8 LDP X20, X19, [X31 + 0x20]
	0x03C2F6FC LDR X30, [X31 + 0x18]
	0x03C2F700 LDP D9, D8, [X31 + 0x8]
	0x03C2F704 LDR V10, [X31], #0x30
	0x03C2F708 RET
	0x03C2F70C STR D8, [X31 - 0x20]!
	0x03C2F710 STP X30, X19, [X31 + 0x10]
	0x03C2F714 ADRP X19, 0x7B6000
	0x03C2F718 LDRB W8, [X19 + 0x139]
	0x03C2F71C MOV V8.16B, V0.16B
	0x03C2F720 TBNZ X8, 0x0, 0x3C2F738
	0x03C2F724 ADRP X0, 0x4C4000
	0x03C2F728 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7B7000
	008 Move X22, 0x4CC000
	009 Move W8, [X23+301]
	010 Move X22, [X22+3704]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x4C7000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0x4C5000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x4CC000
	025 Move X0, [X0+3704]
	026 Call 0x1C17CF4
	027 Move X0, 0x4EE000
	028 Move X0, [X0+3384]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+301], W8
	032 Move X0, X21
	033 Move X1, X31
	034 Call String.IsNullOrEmpty, X0
	035 Move X8, [X22]
	036 And W31, W0, 1
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Compare X20, 0
	039 JumpIfNotEqual {56}
	040 Move X8, 0x4C7000
	041 Move X8, [X8+3144]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X31
	048 Call CultureInfo.get_InvariantCulture
	049 Compare X0, 0
	050 JumpIfEqual {150}
	051 Move X8, [X0]
	052 Move X9, [X8+536]
	053 Move X1, [X8+544]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X20, X0
	056 Move X8, 0x4C5000
	057 Move X8, [X8+2512]
	058 Move W1, 4
	059 Move X0, [X8]
	060 Call 0x1C17D6C
	061 Move X22, X0
	062 Move X0, X19
	063 Move X1, X21
	064 Move X2, X20
	065 Move X3, X31
	066 Call Single.ToString, X0, X1, X2
	067 Compare X22, 0
	068 JumpIfEqual {150}
	069 Move X23, X0
	070 Compare X0, 0
	071 JumpIfEqual {78}
	072 Move X8, [X22]
	073 Move X0, X23
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {147}
	078 Move W8, [X22+24]
	079 Compare W8, 0
	080 JumpIfEqual {146}
	081 Add X0, X19, 4
	082 Move X1, X21
	083 Move X2, X20
	084 Move X3, X31
	085 Move [X22+32], X23
	086 Call Single.ToString, X0, X1, X2
	087 Move X23, X0
	088 Compare X0, 0
	089 JumpIfEqual {96}
	090 Move X8, [X22]
	091 Move X0, X23
	092 Move X1, [X8+64]
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {147}
	096 Move W8, [X22+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add X0, X19, 8
	099 Move X1, X21
	100 Move X2, X20
	101 Move X3, X31
	102 Move [X22+40], X23
	103 Call Single.ToString, X0, X1, X2
	104 Move X23, X0
	105 Compare X0, 0
	106 JumpIfEqual {113}
	107 Move X8, [X22]
	108 Move X0, X23
	109 Move X1, [X8+64]
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {147}
	113 Move W8, [X22+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X0, X19, 12
	116 Move X1, X21
	117 Move X2, X20
	118 Move X3, X31
	119 Move [X22+48], X23
	120 Call Single.ToString, X0, X1, X2
	121 Move X19, X0
	122 Compare X0, 0
	123 JumpIfEqual {130}
	124 Move X8, [X22]
	125 Move X0, X19
	126 Move X1, [X8+64]
	127 Call 0x1C17E00
	128 Compare X0, 0
	129 JumpIfEqual {147}
	130 Move W8, [X22+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, 0x4EE000
	133 Move X8, [X8+3384]
	134 Move [X22+56], X19
	135 Move X1, X22
	136 Move X20, [X31+32]
	137 Move X19, [X31+40]
	138 Move X0, [X8]
	139 Move X22, [X31+16]
	140 Move X21, [X31+24]
	141 Move X2, X31
	142 Move X30, [X31+48]
	143 Move X23, [X31+56]
	144 Call UnityString.Format, X0, X1
	145 Return X0
	146 Call 0x1C17F28
	147 Call 0x1C17F44
	148 Move X1, X31
	149 Call 0x1C17DEC
	150 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03C2F72C BL 0x1C16CF4
	0x03C2F730 MOVZ W8, 0x1
	0x03C2F734 STRB W8, [X19 + 0x139]
	0x03C2F738 FMOV X8, D8
	0x03C2F73C ORN X8, X31, X8, 0x0
	0x03C2F740 ANDS X31, X8, 0x7FFFFFFFFFFFFFFF
	0x03C2F744 FMOV D0, X31
	0x03C2F748 B.EQ 0x3C2F790
	0x03C2F74C ADRP X8, 0x4C4000
	0x03C2F750 LDR X8, [X8 + 0x5A8]
	0x03C2F754 LDR X0, [X8]
	0x03C2F758 LDR W8, [X0 + 0xE0]
	0x03C2F75C CBNZ W8, 0x3C2F764
	0x03C2F760 BL 0x1C16DFC
	0x03C2F764 FABS D0, D8
	0x03C2F768 FMOV D1, 0.5
	0x03C2F76C MOV X0, X31
	0x03C2F770 BL 0x337F438
	0x03C2F774 MOV V1.16B, V0.16B
	0x03C2F778 FMOV D0, 1
	0x03C2F77C MOV X0, X31
	0x03C2F780 BL 0x337EDC0
	0x03C2F784 ADRP X8, 0xFFFFFFFFFCEBE000
	0x03C2F788 LDR V1, [X8 + 0xA70]
	0x03C2F78C FMUL D0, D0, D1
	0x03C2F790 LDP X30, X19, [X31 + 0x10]
	0x03C2F794 LDR V8, [X31], #0x20
	0x03C2F798 RET
	0x03C2F79C STR D10, [X31 - 0x30]!
	0x03C2F7A0 STP D9, D8, [X31 + 0x10]
	0x03C2F7A4 STP X30, X19, [X31 + 0x20]
	0x03C2F7A8 ADRP X19, 0x7B6000
	0x03C2F7AC LDRB W8, [X19 + 0x13A]
	0x03C2F7B0 MOV V8.16B, V2.16B
	0x03C2F7B4 MOV V9.16B, V1.16B
	0x03C2F7B8 MOV V10.16B, V0.16B
	0x03C2F7BC TBNZ X8, 0x0, 0x3C2F7D4
	0x03C2F7C0 ADRP X0, 0x4C4000
	0x03C2F7C4 LDR X0, [X0 + 0x5A8]
	0x03C2F7C8 BL 0x1C16CF4
	0x03C2F7CC MOVZ W8, 0x1
	0x03C2F7D0 STRB W8, [X19 + 0x13A]
	0x03C2F7D4 FMOV X8, D10
	0x03C2F7D8 ORN X8, X31, X8, 0x0
	0x03C2F7DC ANDS X31, X8, 0x7FFFFFFFFFFFFFFF
	0x03C2F7E0 FMOV D0, X31
	0x03C2F7E4 B.EQ 0x3C2F81C
	0x03C2F7E8 ADRP X8, 0x4C4000
	0x03C2F7EC LDR X8, [X8 + 0x5A8]
	0x03C2F7F0 LDR X0, [X8]
	0x03C2F7F4 LDR W8, [X0 + 0xE0]
	0x03C2F7F8 CBNZ W8, 0x3C2F800
	0x03C2F7FC BL 0x1C16DFC
	0x03C2F800 ADRP X8, 0xFFFFFFFFFCEBE000
	0x03C2F804 LDR V0, [X8 + 0xA70]
	0x03C2F808 MOVZ X8, 0x40590000
	0x03C2F80C FABD D1, D8, D8
	0x03C2F810 FMOV D2, X8
	0x03C2F814 FDIV D1, D1, D2
	0x03C2F818 FMUL D0, D1, D0
	0x03C2F81C LDP X30, X19, [X31 + 0x20]
	0x03C2F820 LDP D9, D8, [X31 + 0x10]
	0x03C2F824 LDR V10, [X31], #0x30
	0x03C2F828 RET
	0x03C2F82C STR X30, [X31 - 0x10]!
	0x03C2F830 SCVTF D0, X0
	0x03C2F834 BL 0x3C2F858
	0x03C2F838 MOVZ X8, 0x7FF00000
	0x03C2F83C FMOV D1, X8
	0x03C2F840 FCVTZS X9, D0
	0x03C2F844 FCMP D0, D1
	0x03C2F848 MOVZ X8, 0x80000000
	0x03C2F84C CSEL X0, X8, X9, EQ
	0x03C2F850 LDR X30, [X31], #0x10
	0x03C2F854 RET
	0x03C2F858 STR D8, [X31 - 0x20]!
	0x03C2F85C STR X30, [X31 + 0x8]
	0x03C2F860 STP X20, X19, [X31 + 0x10]
	0x03C2F864 ADRP X19, 0x7B6000
	0x03C2F868 ADRP X20, 0x4C4000
	0x03C2F86C LDRB W8, [X19 + 0x13B]
	0x03C2F870 LDR X20, [X20 + 0x5A8]
	0x03C2F874 MOV V8.16B, V0.16B
	0x03C2F878 TBNZ X8, 0x0, 0x3C2F890
	0x03C2F87C ADRP X0, 0x4C4000
	0x03C2F880 LDR X0, [X0 + 0x5A8]
	0x03C2F884 BL 0x1C16CF4
	0x03C2F888 MOVZ W8, 0x1
	0x03C2F88C STRB W8, [X19 + 0x13B]
	0x03C2F890 LDR X0, [X20]
	0x03C2F894 LDR W8, [X0 + 0xE0]
	0x03C2F898 CBNZ W8, 0x3C2F8A0
	0x03C2F89C BL 0x1C16DFC
	0x03C2F8A0 FABS D0, D8
	0x03C2F8A4 FMOV D1, 0.5
	0x03C2F8A8 MOV X0, X31
	0x03C2F8AC BL 0x337F438
	0x03C2F8B0 ADRP X8, 0xFFFFFFFFFCEBE000
	0x03C2F8B4 LDR V1, [X8 + 0xA70]
	0x03C2F8B8 LDP X20, X19, [X31 + 0x10]
	0x03C2F8BC LDR X30, [X31 + 0x8]
	0x03C2F8C0 MOV X0, X31
	0x03C2F8C4 FMUL D1, D0, D1
	0x03C2F8C8 FMOV D0, 1
	0x03C2F8CC LDR V8, [X31], #0x20
	0x03C2F8D0 B 0x337EDC0
	0x03C2F8D4 STR X30, [X31 - 0x10]!
	0x03C2F8D8 UCVTF D0, X0
	0x03C2F8DC BL 0x3C2F858
	0x03C2F8E0 FCVTZS X8, D0
	0x03C2F8E4 FCVTZU X9, D0
	0x03C2F8E8 FCMP D0, 0x0
	0x03C2F8EC CSEL X0, X8, X9, MI
	0x03C2F8F0 LDR X30, [X31], #0x10
	0x03C2F8F4 RET
	0x03C2F8F8 STR X30, [X31 - 0x30]!
	0x03C2F8FC STP X22, X21, [X31 + 0x10]
	0x03C2F900 STP X20, X19, [X31 + 0x20]
	0x03C2F904 ADRP X21, 0x7B6000
	0x03C2F908 ADRP X22, 0x4C4000
	0x03C2F90C LDRB W8, [X21 + 0x13C]
	0x03C2F910 LDR X22, [X22 + 0x5A8]
	0x03C2F914 MOV X19, X2
	0x03C2F918 MOV X20, X1
	0x03C2F91C TBNZ X8, 0x0, 0x3C2F934
	0x03C2F920 ADRP X0, 0x4C4000
	0x03C2F924 LDR X0, [X0 + 0x5A8]
	0x03C2F928 BL 0x1C16CF4
	0x03C2F92C MOVZ W8, 0x1
	0x03C2F930 STRB W8, [X21 + 0x13C]
	0x03C2F934 LDR X0, [X22]
	0x03C2F938 LDR W8, [X0 + 0xE0]
	0x03C2F93C CBNZ W8, 0x3C2F944
	0x03C2F940 BL 0x1C16DFC
	0x03C2F944 ADRP X9, 0xFFFFFFFFFCEBB000
	0x03C2F948 LDR V0, [X9 + 0x2A0]
	0x03C2F94C SUBS X8, X19, X20
	0x03C2F950 CSNEG X8, X8, X8, PL
	0x03C2F954 MOVZ W10, 0x42C80000
	0x03C2F958 SCVTF S1, X8
	0x03C2F95C MOVZ W9, 0x7F800000
	0x03C2F960 FMUL S0, S1, S0
	0x03C2F964 FMOV S1, W10
	0x03C2F968 LDP X20, X19, [X31 + 0x20]
	0x03C2F96C LDP X22, X21, [X31 + 0x10]
	0x03C2F970 FDIV S0, S0, S1
	0x03C2F974 FMOV S1, W9
	0x03C2F978 MOVZ X8, 0x80000000
	0x03C2F97C FCVTZS X9, S0
	0x03C2F980 FCMP S0, S1
	0x03C2F984 CSEL X1, X8, X9, EQ
	0x03C2F988 MOVZ W0, 0x1
	0x03C2F98C MOV X2, X31
	0x03C2F990 LDR X30, [X31], #0x30
	0x03C2F994 B 0x337EDFC
	0x03C2F998 SUB X31, X31, 0x50
	0x03C2F99C STP X2, X30, [X31 + 0x8]
	0x03C2F9A0 STP X24, X23, [X31 + 0x20]
	0x03C2F9A4 STP X22, X21, [X31 + 0x30]
	0x03C2F9A8 STP X20, X19, [X31 + 0x40]
	0x03C2F9AC ADRP X23, 0x7B6000
	0x03C2F9B0 STR X1, [X31]
	0x03C2F9B4 ADRP X24, 0x4D1000
	0x03C2F9B8 LDRB W8, [X23 + 0x13D]
	0x03C2F9BC LDR X24, [X24 + 0xB98]
	0x03C2F9C0 MOV W19, W4
	0x03C2F9C4 MOV X20, X3
	0x03C2F9C8 MOV X21, X2
	0x03C2F9CC MOV X22, X1
	0x03C2F9D0 TBNZ X8, 0x0, 0x3C2F9F4
	0x03C2F9D4 ADRP X0, 0x4D1000
	0x03C2F9D8 LDR X0, [X0 + 0xB98]
	0x03C2F9DC BL 0x1C16CF4
	0x03C2F9E0 ADRP X0, 0x4CF000
	0x03C2F9E4 LDR X0, [X0 + 0x358]
	0x03C2F9E8 BL 0x1C16CF4
	0x03C2F9EC MOVZ W8, 0x1
	0x03C2F9F0 STRB W8, [X23 + 0x13D]
	0x03C2F9F4 LDR X8, [X24]
	0x03C2F9F8 MOV X0, X22
	0x03C2F9FC MOV X1, X21
	0x03C2FA00 MOV X4, X31
	0x03C2FA04 LDR X8, [X8 + 0xB8]
	0x03C2FA08 LDP X2, X3, [X8]
	0x03C2FA0C BL 0x3378C2C
	0x03C2FA10 TBNZ X0, 0x0, 0x3C2FA78
	0x03C2FA14 ADRP X8, 0x4CF000
	0x03C2FA18 LDR X8, [X8 + 0x358]
	0x03C2FA1C ADD X0, X31, 0x0
	0x03C2FA20 MOV X2, X31
	0x03C2FA24 LDR X1, [X8]
	0x03C2FA28 BL 0x3378CA4
	0x03C2FA2C ADRP X22, 0x7B6000
	0x03C2FA30 LDR X8, [X22 + 0x168]
	0x03C2FA34 MOV X21, X0
	0x03C2FA38 CBNZ X8, 0x3C2FA50
	0x03C2FA3C ADRP X0, 0xFFFFFFFFFCED6000
	0x03C2FA40 ADD X0, X0, 0x28D
	0x03C2FA44 BL 0x1C16CB8
	0x03C2FA48 MOV X8, X0
	0x03C2FA4C STR X0, [X22 + 0x168]
	0x03C2FA50 MOV X0, X21
	0x03C2FA54 MOV X1, X20
	0x03C2FA58 MOV W2, W19
	0x03C2FA5C BLR X8
	0x03C2FA60 LDP X20, X19, [X31 + 0x40]
	0x03C2FA64 LDP X22, X21, [X31 + 0x30]
	0x03C2FA68 LDP X24, X23, [X31 + 0x20]
	0x03C2FA6C LDR X30, [X31 + 0x10]
	0x03C2FA70 ADD X31, X31, 0x50
	0x03C2FA74 RET
	0x03C2FA78 ADRP X0, 0x4CC000
	0x03C2FA7C LDR X0, [X0 + 0x578]
	0x03C2FA80 BL 0x1C16D08
	0x03C2FA84 BL 0x1C16F10
	0x03C2FA88 MOV X19, X0
	0x03C2FA8C ADRP X0, 0x530000
	0x03C2FA90 LDR X0, [X0 + 0x318]
	0x03C2FA94 BL 0x1C16D08
	0x03C2FA98 MOV X1, X0
	0x03C2FA9C MOV X0, X19
	0x03C2FAA0 MOV X2, X31
	0x03C2FAA4 BL 0x3314A68
	0x03C2FAA8 ADRP X0, 0x530000
	0x03C2FAAC LDR X0, [X0 + 0x320]
	0x03C2FAB0 BL 0x1C16D08
	0x03C2FAB4 MOV X1, X0
	0x03C2FAB8 MOV X0, X19
	0x03C2FABC BL 0x1C16DEC
	0x03C2FAC0 STR X30, [X31 - 0x30]!
	0x03C2FAC4 STP X22, X21, [X31 + 0x10]
	0x03C2FAC8 STP X20, X19, [X31 + 0x20]
	0x03C2FACC ADRP X22, 0x7B6000
	0x03C2FAD0 LDR X3, [X22 + 0x168]
	0x03C2FAD4 MOV W19, W2
	0x03C2FAD8 MOV X20, X1
	0x03C2FADC MOV X21, X0
	0x03C2FAE0 CBNZ X3, 0x3C2FAF8
	0x03C2FAE4 ADRP X0, 0xFFFFFFFFFCED6000
	0x03C2FAE8 ADD X0, X0, 0x28D
	0x03C2FAEC BL 0x1C16CB8
	0x03C2FAF0 MOV X3, X0
	0x03C2FAF4 STR X0, [X22 + 0x168]
	0x03C2FAF8 MOV X0, X21
	0x03C2FAFC MOV X1, X20
	0x03C2FB00 MOV W2, W19
	0x03C2FB04 LDP X20, X19, [X31 + 0x20]
	0x03C2FB08 LDP X22, X21, [X31 + 0x10]
	0x03C2FB0C LDR X30, [X31], #0x30
	0x03C2FB10 BR X3
	0x03C2FB14 SUB X31, X31, 0x50
	0x03C2FB18 STP X2, X30, [X31 + 0x8]
	0x03C2FB1C STP X24, X23, [X31 + 0x20]
	0x03C2FB20 STP X22, X21, [X31 + 0x30]
	0x03C2FB24 STP X20, X19, [X31 + 0x40]
	0x03C2FB28 ADRP X23, 0x7B6000
	0x03C2FB2C STR X1, [X31]
	0x03C2FB30 ADRP X24, 0x4D1000
	0x03C2FB34 LDRB W8, [X23 + 0x13E]
	0x03C2FB38 LDR X24, [X24 + 0xB98]
	0x03C2FB3C MOV W19, W4
	0x03C2FB40 MOV X20, X3
	0x03C2FB44 MOV X21, X2
	0x03C2FB48 MOV X22, X1
	0x03C2FB4C TBNZ X8, 0x0, 0x3C2FB70
	0x03C2FB50 ADRP X0, 0x4D1000
	0x03C2FB54 LDR X0, [X0 + 0xB98]
	0x03C2FB58 BL 0x1C16CF4
	0x03C2FB5C ADRP X0, 0x4CF000
	0x03C2FB60 LDR X0, [X0 + 0x358]
	0x03C2FB64 BL 0x1C16CF4
	0x03C2FB68 MOVZ W8, 0x1
	0x03C2FB6C STRB W8, [X23 + 0x13E]
	0x03C2FB70 LDR X8, [X24]
	0x03C2FB74 MOV X0, X22
	0x03C2FB78 MOV X1, X21
	0x03C2FB7C MOV X4, X31
	0x03C2FB80 LDR X8, [X8 + 0xB8]
	0x03C2FB84 LDP X2, X3, [X8]
	0x03C2FB88 BL 0x3378C2C
	0x03C2FB8C TBNZ X0, 0x0, 0x3C2FBF8
	0x03C2FB90 ADRP X8, 0x4CF000
	0x03C2FB94 LDR X8, [X8 + 0x358]
	0x03C2FB98 ADD X0, X31, 0x0
	0x03C2FB9C MOV X2, X31
	0x03C2FBA0 LDR X1, [X8]
	0x03C2FBA4 BL 0x3378CA4
	0x03C2FBA8 ADRP X22, 0x7B6000
	0x03C2FBAC LDR X8, [X22 + 0x170]
	0x03C2FBB0 MOV X21, X0
	0x03C2FBB4 CBNZ X8, 0x3C2FBCC
	0x03C2FBB8 ADRP X0, 0xFFFFFFFFFCEF4000
	0x03C2FBBC ADD X0, X0, 0x150
	0x03C2FBC0 BL 0x1C16CB8
	0x03C2FBC4 MOV X8, X0
	0x03C2FBC8 STR X0, [X22 + 0x170]
	0x03C2FBCC MOV X0, X21
	0x03C2FBD0 MOV X1, X20
	0x03C2FBD4 MOV W2, W19
	0x03C2FBD8 BLR X8
	0x03C2FBDC LDP X20, X19, [X31 + 0x40]
	0x03C2FBE0 LDP X22, X21, [X31 + 0x30]
	0x03C2FBE4 LDP X24, X23, [X31 + 0x20]
	0x03C2FBE8 LDR X30, [X31 + 0x10]
	0x03C2FBEC AND W0, W0, 0x1
	0x03C2FBF0 ADD X31, X31, 0x50
	0x03C2FBF4 RET
	0x03C2FBF8 ADRP X0, 0x4CC000
	0x03C2FBFC LDR X0, [X0 + 0x578]
	0x03C2FC00 BL 0x1C16D08
	0x03C2FC04 BL 0x1C16F10
	0x03C2FC08 MOV X19, X0
	0x03C2FC0C ADRP X0, 0x530000
	0x03C2FC10 LDR X0, [X0 + 0x318]
	0x03C2FC14 BL 0x1C16D08
	0x03C2FC18 MOV X1, X0
	0x03C2FC1C MOV X0, X19
	0x03C2FC20 MOV X2, X31
	0x03C2FC24 BL 0x3314A68
	0x03C2FC28 ADRP X0, 0x530000
	0x03C2FC2C LDR X0, [X0 + 0x328]
	0x03C2FC30 BL 0x1C16D08
	0x03C2FC34 MOV X1, X0
	0x03C2FC38 MOV X0, X19
	0x03C2FC3C BL 0x1C16DEC
	0x03C2FC40 STR X30, [X31 - 0x30]!
	0x03C2FC44 STP X22, X21, [X31 + 0x10]
	0x03C2FC48 STP X20, X19, [X31 + 0x20]
	0x03C2FC4C ADRP X22, 0x7B6000
	0x03C2FC50 LDR X3, [X22 + 0x170]
	0x03C2FC54 MOV W19, W2
	0x03C2FC58 MOV X20, X1
	0x03C2FC5C MOV X21, X0
	0x03C2FC60 CBNZ X3, 0x3C2FC78
	0x03C2FC64 ADRP X0, 0xFFFFFFFFFCEF4000
	0x03C2FC68 ADD X0, X0, 0x150
	0x03C2FC6C BL 0x1C16CB8
	0x03C2FC70 MOV X3, X0
	0x03C2FC74 STR X0, [X22 + 0x170]
	0x03C2FC78 MOV X0, X21
	0x03C2FC7C MOV X1, X20
	0x03C2FC80 MOV W2, W19
	0x03C2FC84 LDP X20, X19, [X31 + 0x20]
	0x03C2FC88 LDP X22, X21, [X31 + 0x10]
	0x03C2FC8C LDR X30, [X31], #0x30
	0x03C2FC90 BR X3
	0x03C2FC94 STP X30, X19, [X31 - 0x10]!
	0x03C2FC98 ADRP X19, 0x7B6000
	0x03C2FC9C LDR X0, [X19 + 0x178]
	0x03C2FCA0 CBNZ X0, 0x3C2FCB4
	0x03C2FCA4 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C2FCA8 ADD X0, X0, 0xD11
	0x03C2FCAC BL 0x1C16CB8
	0x03C2FCB0 STR X0, [X19 + 0x178]
	0x03C2FCB4 LDP X30, X19, [X31], #0x10
	0x03C2FCB8 BR X0
	0x03C2FCBC STP X30, X19, [X31 - 0x10]!
	0x03C2FCC0 ADRP X19, 0x7B6000
	0x03C2FCC4 LDR X0, [X19 + 0x178]
	0x03C2FCC8 CBNZ X0, 0x3C2FCDC
	0x03C2FCCC ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C2FCD0 ADD X0, X0, 0xD11
	0x03C2FCD4 BL 0x1C16CB8
	0x03C2FCD8 STR X0, [X19 + 0x178]
	0x03C2FCDC LDP X30, X19, [X31], #0x10
	0x03C2FCE0 BR X0
	0x03C2FCE4 SUB X31, X31, 0x30
	0x03C2FCE8 STP X2, X30, [X31 + 0x8]
	0x03C2FCEC STP X20, X19, [X31 + 0x20]
	0x03C2FCF0 ADRP X19, 0x7B6000
	0x03C2FCF4 STR X1, [X31]
	0x03C2FCF8 ADRP X20, 0x4CF000
	0x03C2FCFC LDRB W8, [X19 + 0x13F]
	0x03C2FD00 LDR X20, [X20 + 0x358]
	0x03C2FD04 TBNZ X8, 0x0, 0x3C2FD1C
	0x03C2FD08 ADRP X0, 0x4CF000
	0x03C2FD0C LDR X0, [X0 + 0x358]
	0x03C2FD10 BL 0x1C16CF4
	0x03C2FD14 MOVZ W8, 0x1
	0x03C2FD18 STRB W8, [X19 + 0x13F]
	0x03C2FD1C LDR X1, [X20]
	0x03C2FD20 ADD X0, X31, 0x0
	0x03C2FD24 MOV X2, X31
	0x03C2FD28 BL 0x3378CA4
	0x03C2FD2C ADRP X20, 0x7B6000
	0x03C2FD30 LDR X8, [X20 + 0x158]
	0x03C2FD34 MOV X19, X0
	0x03C2FD38 CBNZ X8, 0x3C2FD50
	0x03C2FD3C ADRP X0, 0xFFFFFFFFFCECA000
	0x03C2FD40 ADD X0, X0, 0x3F4
	0x03C2FD44 BL 0x1C16CB8
	0x03C2FD48 MOV X8, X0
	0x03C2FD4C STR X0, [X20 + 0x158]
	0x03C2FD50 MOV X0, X19
	0x03C2FD54 BLR X8
	0x03C2FD58 LDP X20, X19, [X31 + 0x20]
	0x03C2FD5C LDR X30, [X31 + 0x10]
	0x03C2FD60 ADD X31, X31, 0x30
	0x03C2FD64 RET
	0x03C2FD68 STR X30, [X31 - 0x20]!
	0x03C2FD6C STP X20, X19, [X31 + 0x10]
	0x03C2FD70 ADRP X20, 0x7B6000
	0x03C2FD74 LDR X1, [X20 + 0x158]
	0x03C2FD78 MOV X19, X0
	0x03C2FD7C CBNZ X1, 0x3C2FD94
	0x03C2FD80 ADRP X0, 0xFFFFFFFFFCECA000
	0x03C2FD84 ADD X0, X0, 0x3F4
	0x03C2FD88 BL 0x1C16CB8
	0x03C2FD8C MOV X1, X0
	0x03C2FD90 STR X0, [X20 + 0x158]
	0x03C2FD94 MOV X0, X19
	0x03C2FD98 LDP X20, X19, [X31 + 0x10]
	0x03C2FD9C LDR X30, [X31], #0x20
	0x03C2FDA0 BR X1
	0x03C2FDA4 SUB X31, X31, 0x30
	0x03C2FDA8 STP X2, X30, [X31 + 0x8]
	0x03C2FDAC STP X20, X19, [X31 + 0x20]
	0x03C2FDB0 ADRP X19, 0x7B6000
	0x03C2FDB4 STR X1, [X31]
	0x03C2FDB8 ADRP X20, 0x4CF000
	0x03C2FDBC LDRB W8, [X19 + 0x140]
	0x03C2FDC0 LDR X20, [X20 + 0x358]
	0x03C2FDC4 TBNZ X8, 0x0, 0x3C2FDDC
	0x03C2FDC8 ADRP X0, 0x4CF000
	0x03C2FDCC LDR X0, [X0 + 0x358]
	0x03C2FDD0 BL 0x1C16CF4
	0x03C2FDD4 MOVZ W8, 0x1
	0x03C2FDD8 STRB W8, [X19 + 0x140]
	0x03C2FDDC LDR X1, [X20]
	0x03C2FDE0 ADD X0, X31, 0x0
	0x03C2FDE4 MOV X2, X31
	0x03C2FDE8 BL 0x3378CA4
	0x03C2FDEC ADRP X20, 0x7B6000
	0x03C2FDF0 LDR X8, [X20 + 0x160]
	0x03C2FDF4 MOV X19, X0
	0x03C2FDF8 CBNZ X8, 0x3C2FE10
	0x03C2FDFC ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C2FE00 ADD X0, X0, 0xCC9
	0x03C2FE04 BL 0x1C16CB8
	0x03C2FE08 MOV X8, X0
	0x03C2FE0C STR X0, [X20 + 0x160]
	0x03C2FE10 MOV X0, X19
	0x03C2FE14 BLR X8
	0x03C2FE18 LDP X20, X19, [X31 + 0x20]
	0x03C2FE1C LDR X30, [X31 + 0x10]
	0x03C2FE20 ADD X31, X31, 0x30
	0x03C2FE24 RET
	0x03C2FE28 STR X30, [X31 - 0x20]!
	0x03C2FE2C STP X20, X19, [X31 + 0x10]
	0x03C2FE30 ADRP X20, 0x7B6000
	0x03C2FE34 LDR X1, [X20 + 0x160]
	0x03C2FE38 MOV X19, X0
	0x03C2FE3C CBNZ X1, 0x3C2FE54
	0x03C2FE40 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C2FE44 ADD X0, X0, 0xCC9
	0x03C2FE48 BL 0x1C16CB8
	0x03C2FE4C MOV X1, X0
	0x03C2FE50 STR X0, [X20 + 0x160]
	0x03C2FE54 MOV X0, X19
	0x03C2FE58 LDP X20, X19, [X31 + 0x10]
	0x03C2FE5C LDR X30, [X31], #0x20
	0x03C2FE60 BR X1
	0x03C2FE64 STP X30, X19, [X31 - 0x10]!
	0x03C2FE68 ADRP X19, 0x7B6000
	0x03C2FE6C LDR X0, [X19 + 0x150]
	0x03C2FE70 CBNZ X0, 0x3C2FE84
	0x03C2FE74 ADRP X0, 0xFFFFFFFFFCECC000
	0x03C2FE78 ADD X0, X0, 0x236
	0x03C2FE7C BL 0x1C16CB8
	0x03C2FE80 STR X0, [X19 + 0x150]
	0x03C2FE84 LDP X30, X19, [X31], #0x10
	0x03C2FE88 BR X0
	0x03C2FE8C STP X30, X19, [X31 - 0x10]!
	0x03C2FE90 ADRP X19, 0x7B6000
	0x03C2FE94 LDR X0, [X19 + 0x150]
	0x03C2FE98 CBNZ X0, 0x3C2FEAC
	0x03C2FE9C ADRP X0, 0xFFFFFFFFFCECC000
	0x03C2FEA0 ADD X0, X0, 0x236
	0x03C2FEA4 BL 0x1C16CB8
	0x03C2FEA8 STR X0, [X19 + 0x150]
	0x03C2FEAC LDP X30, X19, [X31], #0x10
	0x03C2FEB0 BR X0
	0x03C2FEB4 STP X30, X19, [X31 - 0x10]!
	0x03C2FEB8 ADRP X19, 0x7B6000
	0x03C2FEBC LDR X0, [X19 + 0x148]
	0x03C2FEC0 CBNZ X0, 0x3C2FED4
	0x03C2FEC4 ADRP X0, 0xFFFFFFFFFCEC6000
	0x03C2FEC8 ADD X0, X0, 0x38E
	0x03C2FECC BL 0x1C16CB8
	0x03C2FED0 STR X0, [X19 + 0x148]
	0x03C2FED4 LDP X30, X19, [X31], #0x10
	0x03C2FED8 BR X0
	0x03C2FEDC STP X30, X19, [X31 - 0x10]!
	0x03C2FEE0 ADRP X19, 0x7B6000
	0x03C2FEE4 LDR X0, [X19 + 0x148]
	0x03C2FEE8 CBNZ X0, 0x3C2FEFC
	0x03C2FEEC ADRP X0, 0xFFFFFFFFFCEC6000
	0x03C2FEF0 ADD X0, X0, 0x38E
	0x03C2FEF4 BL 0x1C16CB8
	0x03C2FEF8 STR X0, [X19 + 0x148]
	0x03C2FEFC LDP X30, X19, [X31], #0x10
	0x03C2FF00 BR X0
	0x03C2FF04 STP X30, X19, [X31 - 0x10]!
	0x03C2FF08 ADRP X19, 0x7B6000
	0x03C2FF0C LDR X0, [X19 + 0x180]
	0x03C2FF10 CBNZ X0, 0x3C2FF24
	0x03C2FF14 ADRP X0, 0xFFFFFFFFFCEE2000
	0x03C2FF18 ADD X0, X0, 0x86
	0x03C2FF1C BL 0x1C16CB8
	0x03C2FF20 STR X0, [X19 + 0x180]
	0x03C2FF24 LDP X30, X19, [X31], #0x10
	0x03C2FF28 BR X0
	0x03C2FF2C STP X30, X19, [X31 - 0x10]!
	0x03C2FF30 ADRP X19, 0x7B6000
	0x03C2FF34 LDR X0, [X19 + 0x180]
	0x03C2FF38 CBNZ X0, 0x3C2FF4C
	0x03C2FF3C ADRP X0, 0xFFFFFFFFFCEE2000
	0x03C2FF40 ADD X0, X0, 0x86
	0x03C2FF44 BL 0x1C16CB8
	0x03C2FF48 STR X0, [X19 + 0x180]
	0x03C2FF4C LDP X30, X19, [X31], #0x10
	0x03C2FF50 BR X0
	0x03C2FF54 MOV X1, X31
	0x03C2FF58 B 0x33BDD8C
	0x03C2FF5C STR X30, [X31 - 0x30]!
	0x03C2FF60 STP X22, X21, [X31 + 0x10]
	0x03C2FF64 STP X20, X19, [X31 + 0x20]
	0x03C2FF68 ADRP X21, 0x7B6000
	0x03C2FF6C ADRP X22, 0x4C4000
	0x03C2FF70 LDRB W8, [X21 + 0x188]
	0x03C2FF74 LDR X22, [X22 + 0x7D0]
	0x03C2FF78 MOV X19, X1
	0x03C2FF7C MOV X20, X0
	0x03C2FF80 TBNZ X8, 0x0, 0x3C2FF98
	0x03C2FF84 ADRP X0, 0x4C4000
	0x03C2FF88 LDR X0, [X0 + 0x7D0]
	0x03C2FF8C BL 0x1C16CF4
	0x03C2FF90 MOVZ W8, 0x1
	0x03C2FF94 STRB W8, [X21 + 0x188]
	0x03C2FF98 LDR X0, [X22]
	0x03C2FF9C LDR W8, [X0 + 0xE0]
	0x03C2FFA0 CBNZ W8, 0x3C2FFA8
	0x03C2FFA4 BL 0x1C16DFC
	0x03C2FFA8 MOV X0, X20
	0x03C2FFAC MOV X1, X19
	0x03C2FFB0 LDP X20, X19, [X31 + 0x20]
	0x03C2FFB4 LDP X22, X21, [X31 + 0x10]
	0x03C2FFB8 MOV X2, X31
	0x03C2FFBC LDR X30, [X31], #0x30
	0x03C2FFC0 B 0x33B2C70
	0x03C2FFC4 STP X30, X21, [X31 - 0x20]!
	0x03C2FFC8 STP X20, X19, [X31 + 0x10]
	0x03C2FFCC ADRP X21, 0x7B6000
	0x03C2FFD0 LDR X2, [X21 + 0x190]
	0x03C2FFD4 MOV W19, W1
	0x03C2FFD8 MOV X20, X0
	0x03C2FFDC CBNZ X2, 0x3C2FFF4
	0x03C2FFE0 ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C2FFE4 ADD X0, X0, 0xEEF
	0x03C2FFE8 BL 0x1C16CB8
	0x03C2FFEC MOV X2, X0
	0x03C2FFF0 STR X0, [X21 + 0x190]
	0x03C2FFF4 MOV X0, X20
	0x03C2FFF8 MOV W1, W19
	0x03C2FFFC LDP X20, X19, [X31 + 0x10]
	0x03C30000 LDP X30, X21, [X31], #0x20
	0x03C30004 BR X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B7000
	005 Move X19, 0x4CC000
	006 Move W8, [X20+302]
	007 Move X19, [X19+2464]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4CC000
	013 Move X0, [X0+2464]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+302], W8
	017 Move X8, [X19]
	018 Move V0, 0
	019 Move W10, 0x7F800000
	020 Move X8, [X8+184]
	021 Move [X8], X31
	022 Move [X8+8], X31
	023 Move X8, [X19]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X9, [X8+184]
	027 Move [X9+1], V0
	028 Move X9, [X8+184]
	029 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	030 Move [X9+2], V0
	031 Move X8, [X8+184]
	032 NotImplemented "Instruction MVNI not yet implemented."
	033 Move [X8+3], V0
	034 Move X30, [X31+32]
	035 Return 
	036 Move [X31-48], X30
	037 Move [X31-40], X23
	038 Move [X31+16], X22
	039 Move [X31+24], X21
	040 Move [X31+32], X20
	041 Move [X31+40], X19
	042 Move X22, 0x7B7000
	043 Move W8, [X22+303]
	044 Move X21, X2
	045 Move X19, X1
	046 Move X20, X0
	047 Compare W8, 0
	048 JumpIfEqual {51}
	049 Compare X21, 0
	050 JumpIfNotEqual {80}
	051 Move X0, 0x4C7000
	052 Move X0, [X0+3144]
	053 Call 0x1C17CF4
	054 Move X0, 0x4C5000
	055 Move X0, [X0+2512]
	056 Call 0x1C17CF4
	057 Move X0, 0x4ED000
	058 Move X0, [X0+3056]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X22+303], W8
	062 Compare X21, 0
	063 JumpIfNotEqual {80}
	064 Move X8, 0x4C7000
	065 Move X8, [X8+3144]
	066 Move X0, [X8]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X31
	072 Call CultureInfo.get_InvariantCulture
	073 Compare X0, 0
	074 JumpIfEqual {174}
	075 Move X8, [X0]
	076 Move X9, [X8+536]
	077 Move X1, [X8+544]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X21, X0
	080 Move X8, 0x4C5000
	081 Move X8, [X8+2512]
	082 Move W1, 4
	083 Move X0, [X8]
	084 Call 0x1C17D6C
	085 Move X22, X0
	086 Move X0, X20
	087 Move X1, X19
	088 Move X2, X21
	089 Move X3, X31
	090 Call Byte.ToString, X0, X1, X2
	091 Compare X22, 0
	092 JumpIfEqual {174}
	093 Move X23, X0
	094 Compare X0, 0
	095 JumpIfEqual {102}
	096 Move X8, [X22]
	097 Move X0, X23
	098 Move X1, [X8+64]
	099 Call 0x1C17E00
	100 Compare X0, 0
	101 JumpIfEqual {171}
	102 Move W8, [X22+24]
	103 Compare W8, 0
	104 JumpIfEqual {170}
	105 Add X0, X20, 1
	106 Move X1, X19
	107 Move X2, X21
	108 Move X3, X31
	109 Move [X22+32], X23
	110 Call Byte.ToString, X0, X1, X2
	111 Move X23, X0
	112 Compare X0, 0
	113 JumpIfEqual {120}
	114 Move X8, [X22]
	115 Move X0, X23
	116 Move X1, [X8+64]
	117 Call 0x1C17E00
	118 Compare X0, 0
	119 JumpIfEqual {171}
	120 Move W8, [X22+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Add X0, X20, 2
	123 Move X1, X19
	124 Move X2, X21
	125 Move X3, X31
	126 Move [X22+40], X23
	127 Call Byte.ToString, X0, X1, X2
	128 Move X23, X0
	129 Compare X0, 0
	130 JumpIfEqual {137}
	131 Move X8, [X22]
	132 Move X0, X23
	133 Move X1, [X8+64]
	134 Call 0x1C17E00
	135 Compare X0, 0
	136 JumpIfEqual {171}
	137 Move W8, [X22+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Add X0, X20, 3
	140 Move X1, X19
	141 Move X2, X21
	142 Move X3, X31
	143 Move [X22+48], X23
	144 Call Byte.ToString, X0, X1, X2
	145 Move X19, X0
	146 Compare X0, 0
	147 JumpIfEqual {154}
	148 Move X8, [X22]
	149 Move X0, X19
	150 Move X1, [X8+64]
	151 Call 0x1C17E00
	152 Compare X0, 0
	153 JumpIfEqual {171}
	154 Move W8, [X22+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move [X22+56], X19
	157 Move X8, 0x4ED000
	158 Move X8, [X8+3056]
	159 Move X1, X22
	160 Move X20, [X31+32]
	161 Move X19, [X31+40]
	162 Move X22, [X31+16]
	163 Move X21, [X31+24]
	164 Move X0, [X8]
	165 Move X2, X31
	166 Move X30, [X31+48]
	167 Move X23, [X31+56]
	168 Call UnityString.Format, X0, X1
	169 Return 
	170 Call 0x1C17F28
	171 Call 0x1C17F44
	172 Move X1, X31
	173 Call 0x1C17DEC
	174 Call 0x1C17F20
	175 Move [X31-32], X30
	176 Move [X31-24], X21
	177 Move [X31+16], X20
	178 Move [X31+24], X19
	179 Move X21, 0x7AB000
	180 Move W8, [X21+2077]
	181 Move X20, X1
	182 Move X19, X0
	183 Compare W8, 0
	184 JumpIfEqual {187}
	185 Compare X20, 0
	186 JumpIfNotEqual {194}
	187 Move X0, 0x4C9000
	188 Move X0, [X0+624]
	189 Call 0x1C17CF4
	190 Move W8, 1
	191 Move [X21+2077], W8
	192 Compare X20, 0
	193 JumpIfEqual {199}
	194 Move X8, 0x4C9000
	195 Move X8, [X8+624]
	196 Move X9, [X20]
	197 Move X8, [X8]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move W0, W31
	200 Move X20, [X31+16]
	201 Move X19, [X31+24]
	202 Move X30, [X31+32]
	203 Move X21, [X31+40]
	204 Return 
	205 Move X0, X20
	206 Call 0x1C17E08
	207 Move V0, [X0+12]
	208 Move V1, [X19+12]
	209 Move X8, X0
	210 Move W0, W31
	211 NotImplemented "Instruction FCMP not yet implemented."
	212 Move V0, [X8+8]
	213 Move V1, [X19+8]
	214 NotImplemented "Instruction FCMP not yet implemented."
	215 Move V0, [X8+4]
	216 Move V1, [X19+4]
	217 NotImplemented "Instruction FCMP not yet implemented."
	218 Move V0, [X8]
	219 Move V1, [X19]
	220 NotImplemented "Instruction FCMP not yet implemented."
	221 Move V0, [X8+28]
	222 Move V1, [X19+28]
	223 Move W0, W31
	224 NotImplemented "Instruction FCMP not yet implemented."
	225 Move V0, [X8+24]
	226 Move V1, [X19+24]
	227 NotImplemented "Instruction FCMP not yet implemented."
	228 Move V0, [X8+20]
	229 Move V1, [X19+20]
	230 NotImplemented "Instruction FCMP not yet implemented."
	231 Move V0, [X8+16]
	232 Move V1, [X19+16]
	233 NotImplemented "Instruction FCMP not yet implemented."
	234 Move V0, [X8+44]
	235 Move V1, [X19+44]
	236 Move W0, W31
	237 NotImplemented "Instruction FCMP not yet implemented."
	238 Move V0, [X8+40]
	239 Move V1, [X19+40]
	240 NotImplemented "Instruction FCMP not yet implemented."
	241 Move V0, [X8+36]
	242 Move V1, [X19+36]
	243 NotImplemented "Instruction FCMP not yet implemented."
	244 Move V0, [X8+32]
	245 Move V1, [X19+32]
	246 NotImplemented "Instruction FCMP not yet implemented."
	247 Move S0, [X8+48]
	248 Move S1, [X8+52]
	249 Move S3, [X19+48]
	250 Move S2, [X19+52]
	251 Move S4, [X8+56]
	252 Move S5, [X8+60]
	253 Move S7, [X19+56]
	254 Move S6, [X19+60]
	255 NotImplemented "Instruction FCMP not yet implemented."
	256 NotImplemented "Instruction CSET not yet implemented."
	257 NotImplemented "Instruction FCMP not yet implemented."
	258 NotImplemented "Instruction CSET not yet implemented."
	259 NotImplemented "Instruction FCMP not yet implemented."
	260 And W8, W9, W8
	261 NotImplemented "Instruction CSET not yet implemented."
	262 NotImplemented "Instruction FCMP not yet implemented."
	263 And W8, W9, W8
	264 NotImplemented "Instruction CSET not yet implemented."
	265 And W0, W9, W8
	266 Move [X31-48], X30
	267 Move [X31-40], X23
	268 Move [X31+16], X22
	269 Move [X31+24], X21
	270 Move [X31+32], X20
	271 Move [X31+40], X19
	272 Move X22, 0x7B7000
	273 Move W8, [X22+304]
	274 Move X20, X2
	275 Move X21, X1
	276 Move X19, X0
	277 Compare W8, 0
	278 JumpIfNotEqual {293}
	279 Move X0, 0x4C7000
	280 Move X0, [X0+3144]
	281 Call 0x1C17CF4
	282 Move X0, 0x4C5000
	283 Move X0, [X0+2512]
	284 Call 0x1C17CF4
	285 Move X0, 0x531000
	286 Move X0, [X0+664]
	287 Call 0x1C17CF4
	288 Move X0, 0x4CD000
	289 Move X0, [X0+800]
	290 Call 0x1C17CF4
	291 Move W8, 1
	292 Move [X22+304], W8
	293 Move X0, X21
	294 Move X1, X31
	295 Call String.IsNullOrEmpty, X0
	296 Move X8, 0x4CD000
	297 Move X8, [X8+800]
	298 And W31, W0, 1
	299 Move X8, [X8]
	300 NotImplemented "Instruction CSEL not yet implemented."
	301 Compare X20, 0
	302 JumpIfNotEqual {319}
	303 Move X8, 0x4C7000
	304 Move X8, [X8+3144]
	305 Move X0, [X8]
	306 Move W8, [X0+224]
	307 Compare W8, 0
	308 JumpIfNotEqual {310}
	309 Call 0x1C17DFC
	310 Move X0, X31
	311 Call CultureInfo.get_InvariantCulture
	312 Compare X0, 0
	313 JumpIfEqual {617}
	314 Move X8, [X0]
	315 Move X9, [X8+536]
	316 Move X1, [X8+544]
	317 NotImplemented "Instruction BLR not yet implemented."
	318 Move X20, X0
	319 Move X8, 0x4C5000
	320 Move X8, [X8+2512]
	321 Move W1, 16
	322 Move X0, [X8]
	323 Call 0x1C17D6C
	324 Move X22, X0
	325 Move X0, X19
	326 Move X1, X21
	327 Move X2, X20
	328 Move X3, X31
	329 Call Single.ToString, X0, X1, X2
	330 Compare X22, 0
	331 JumpIfEqual {617}
	332 Move X23, X0
	333 Compare X0, 0
	334 JumpIfEqual {341}
	335 Move X8, [X22]
	336 Move X0, X23
	337 Move X1, [X8+64]
	338 Call 0x1C17E00
	339 Compare X0, 0
	340 JumpIfEqual {614}
	341 Move W8, [X22+24]
	342 Compare W8, 0
	343 JumpIfEqual {613}
	344 Add X0, X19, 16
	345 Move X1, X21
	346 Move X2, X20
	347 Move X3, X31
	348 Move [X22+32], X23
	349 Call Single.ToString, X0, X1, X2
	350 Move X23, X0
	351 Compare X0, 0
	352 JumpIfEqual {359}
	353 Move X8, [X22]
	354 Move X0, X23
	355 Move X1, [X8+64]
	356 Call 0x1C17E00
	357 Compare X0, 0
	358 JumpIfEqual {614}
	359 Move W8, [X22+24]
	360 NotImplemented "Instruction CMP not yet implemented."
	361 Add X0, X19, 32
	362 Move X1, X21
	363 Move X2, X20
	364 Move X3, X31
	365 Move [X22+40], X23
	366 Call Single.ToString, X0, X1, X2
	367 Move X23, X0
	368 Compare X0, 0
	369 JumpIfEqual {376}
	370 Move X8, [X22]
	371 Move X0, X23
	372 Move X1, [X8+64]
	373 Call 0x1C17E00
	374 Compare X0, 0
	375 JumpIfEqual {614}
	376 Move W8, [X22+24]
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Add X0, X19, 48
	379 Move X1, X21
	380 Move X2, X20
	381 Move X3, X31
	382 Move [X22+48], X23
	383 Call Single.ToString, X0, X1, X2
	384 Move X23, X0
	385 Compare X0, 0
	386 JumpIfEqual {393}
	387 Move X8, [X22]
	388 Move X0, X23
	389 Move X1, [X8+64]
	390 Call 0x1C17E00
	391 Compare X0, 0
	392 JumpIfEqual {614}
	393 Move W8, [X22+24]
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Add X0, X19, 4
	396 Move X1, X21
	397 Move X2, X20
	398 Move X3, X31
	399 Move [X22+56], X23
	400 Call Single.ToString, X0, X1, X2
	401 Move X23, X0
	402 Compare X0, 0
	403 JumpIfEqual {410}
	404 Move X8, [X22]
	405 Move X0, X23
	406 Move X1, [X8+64]
	407 Call 0x1C17E00
	408 Compare X0, 0
	409 JumpIfEqual {614}
	410 Move W8, [X22+24]
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Add X0, X19, 20
	413 Move X1, X21
	414 Move X2, X20
	415 Move X3, X31
	416 Move [X22+64], X23
	417 Call Single.ToString, X0, X1, X2
	418 Move X23, X0
	419 Compare X0, 0
	420 JumpIfEqual {427}
	421 Move X8, [X22]
	422 Move X0, X23
	423 Move X1, [X8+64]
	424 Call 0x1C17E00
	425 Compare X0, 0
	426 JumpIfEqual {614}
	427 Move W8, [X22+24]
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Add X0, X19, 36
	430 Move X1, X21
	431 Move X2, X20
	432 Move X3, X31
	433 Move [X22+72], X23
	434 Call Single.ToString, X0, X1, X2
	435 Move X23, X0
	436 Compare X0, 0
	437 JumpIfEqual {444}
	438 Move X8, [X22]
	439 Move X0, X23
	440 Move X1, [X8+64]
	441 Call 0x1C17E00
	442 Compare X0, 0
	443 JumpIfEqual {614}
	444 Move W8, [X22+24]
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Add X0, X19, 52
	447 Move X1, X21
	448 Move X2, X20
	449 Move X3, X31
	450 Move [X22+80], X23
	451 Call Single.ToString, X0, X1, X2
	452 Move X23, X0
	453 Compare X0, 0
	454 JumpIfEqual {461}
	455 Move X8, [X22]
	456 Move X0, X23
	457 Move X1, [X8+64]
	458 Call 0x1C17E00
	459 Compare X0, 0
	460 JumpIfEqual {614}
	461 Move W8, [X22+24]
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Add X0, X19, 8
	464 Move X1, X21
	465 Move X2, X20
	466 Move X3, X31
	467 Move [X22+88], X23
	468 Call Single.ToString, X0, X1, X2
	469 Move X23, X0
	470 Compare X0, 0
	471 JumpIfEqual {478}
	472 Move X8, [X22]
	473 Move X0, X23
	474 Move X1, [X8+64]
	475 Call 0x1C17E00
	476 Compare X0, 0
	477 JumpIfEqual {614}
	478 Move W8, [X22+24]
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Add X0, X19, 24
	481 Move X1, X21
	482 Move X2, X20
	483 Move X3, X31
	484 Move [X22+96], X23
	485 Call Single.ToString, X0, X1, X2
	486 Move X23, X0
	487 Compare X0, 0
	488 JumpIfEqual {495}
	489 Move X8, [X22]
	490 Move X0, X23
	491 Move X1, [X8+64]
	492 Call 0x1C17E00
	493 Compare X0, 0
	494 JumpIfEqual {614}
	495 Move W8, [X22+24]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Add X0, X19, 40
	498 Move X1, X21
	499 Move X2, X20
	500 Move X3, X31
	501 Move [X22+104], X23
	502 Call Single.ToString, X0, X1, X2
	503 Move X23, X0
	504 Compare X0, 0
	505 JumpIfEqual {512}
	506 Move X8, [X22]
	507 Move X0, X23
	508 Move X1, [X8+64]
	509 Call 0x1C17E00
	510 Compare X0, 0
	511 JumpIfEqual {614}
	512 Move W8, [X22+24]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Add X0, X19, 56
	515 Move X1, X21
	516 Move X2, X20
	517 Move X3, X31
	518 Move [X22+112], X23
	519 Call Single.ToString, X0, X1, X2
	520 Move X23, X0
	521 Compare X0, 0
	522 JumpIfEqual {529}
	523 Move X8, [X22]
	524 Move X0, X23
	525 Move X1, [X8+64]
	526 Call 0x1C17E00
	527 Compare X0, 0
	528 JumpIfEqual {614}
	529 Move W8, [X22+24]
	530 NotImplemented "Instruction CMP not yet implemented."
	531 Add X0, X19, 12
	532 Move X1, X21
	533 Move X2, X20
	534 Move X3, X31
	535 Move [X22+120], X23
	536 Call Single.ToString, X0, X1, X2
	537 Move X23, X0
	538 Compare X0, 0
	539 JumpIfEqual {546}
	540 Move X8, [X22]
	541 Move X0, X23
	542 Move X1, [X8+64]
	543 Call 0x1C17E00
	544 Compare X0, 0
	545 JumpIfEqual {614}
	546 Move W8, [X22+24]
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Add X0, X19, 28
	549 Move X1, X21
	550 Move X2, X20
	551 Move X3, X31
	552 Move [X22+128], X23
	553 Call Single.ToString, X0, X1, X2
	554 Move X23, X0
	555 Compare X0, 0
	556 JumpIfEqual {563}
	557 Move X8, [X22]
	558 Move X0, X23
	559 Move X1, [X8+64]
	560 Call 0x1C17E00
	561 Compare X0, 0
	562 JumpIfEqual {614}
	563 Move W8, [X22+24]
	564 NotImplemented "Instruction CMP not yet implemented."
	565 Add X0, X19, 44
	566 Move X1, X21
	567 Move X2, X20
	568 Move X3, X31
	569 Move [X22+136], X23
	570 Call Single.ToString, X0, X1, X2
	571 Move X23, X0
	572 Compare X0, 0
	573 JumpIfEqual {580}
	574 Move X8, [X22]
	575 Move X0, X23
	576 Move X1, [X8+64]
	577 Call 0x1C17E00
	578 Compare X0, 0
	579 JumpIfEqual {614}
	580 Move W8, [X22+24]
	581 NotImplemented "Instruction CMP not yet implemented."
	582 Add X0, X19, 60
	583 Move X1, X21
	584 Move X2, X20
	585 Move X3, X31
	586 Move [X22+144], X23
	587 Call Single.ToString, X0, X1, X2
	588 Move X19, X0
	589 Compare X0, 0
	590 JumpIfEqual {597}
	591 Move X8, [X22]
	592 Move X0, X19
	593 Move X1, [X8+64]
	594 Call 0x1C17E00
	595 Compare X0, 0
	596 JumpIfEqual {614}
	597 Move W8, [X22+24]
	598 NotImplemented "Instruction CMP not yet implemented."
	599 Move [X22+152], X19
	600 Move X8, 0x531000
	601 Move X8, [X8+664]
	602 Move X1, X22
	603 Move X20, [X31+32]
	604 Move X19, [X31+40]
	605 Move X22, [X31+16]
	606 Move X21, [X31+24]
	607 Move X0, [X8]
	608 Move X2, X31
	609 Move X30, [X31+48]
	610 Move X23, [X31+56]
	611 Call UnityString.Format, X0, X1
	612 Return 
	613 Call 0x1C17F28
	614 Call 0x1C17F44
	615 Move X1, X31
	616 Call 0x1C17DEC
	617 Call 0x1C17F20

