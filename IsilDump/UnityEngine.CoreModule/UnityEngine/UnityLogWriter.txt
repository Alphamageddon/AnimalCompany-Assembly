Type: UnityEngine.UnityLogWriter

Method: System.Void WriteStringToUnityLog(System.String s)

Disassembly:
	0x03C2605C ADD X0, X31, 0x28
	0x03C26060 BL 0x3EB1C00
	0x03C26064 FCMP S8, 0x0
	0x03C26068 B.GE 0x3C26084
	0x03C2606C FMOV D1, -0.5
	0x03C26070 FCMP D0, D1
	0x03C26074 B.NE 0x3C260B0
	0x03C26078 LDR V0, [X31 + 0x28]
	0x03C2607C FMOV S1, -1
	0x03C26080 B 0x3C26098
	0x03C26084 FMOV D1, 0.5
	0x03C26088 FCMP D0, D1
	0x03C2608C B.NE 0x3C260C0
	0x03C26090 LDR V0, [X31 + 0x28]
	0x03C26094 FMOV S1, 1
	0x03C26098 FCVTZS X8, D0
	0x00000000 INVALID

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {21}
	003 Move [X31-32], X30
	004 Move [X31+16], X20
	005 Move [X31+24], X19
	006 Move X20, 0x7BF000
	007 Move X1, [X20+3960]
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51441664
	012 Add X0, X0, 2639
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+3960], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 CallNoReturn X1
	021 Return 

Method: System.Void WriteStringToUnityLogImpl(System.String s)

Disassembly:
	0x03C260A0 FADD S1, S0, S1
	0x03C260A4 ANDS X31, X8, 0x1
	0x03C260A8 FCSEL S0, S0, S1, EQ
	0x03C260AC B 0x3C260CC
	0x03C260B0 FMOV S0, -0.5
	0x03C260B4 FADD S0, S8, S0
	0x03C260B8 FRINTP S0, S0
	0x03C260BC B 0x3C260CC
	0x03C260C0 FMOV S0, 0.5
	0x03C260C4 FADD S0, S8, S0
	0x03C260C8 FRINTM S0, S0
	0x03C260CC FCVTZS W8, S11
	0x03C260D0 FCMP S11, 0x0
	0x03C260D4 FCVTZS W9, S10
	0x03C260D8 CSEL W8, W8, W8, MI

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7BF000
	005 Move X1, [X20+3960]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51441664
	010 Add X0, X0, 2639
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3960], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Init()

Disassembly:
	0x03C260DC FCMP S10, 0x0
	0x03C260E0 FCVTZS W10, S9
	0x03C260E4 AND X0, X8, 0xFF
	0x03C260E8 CSEL W8, W9, W9, MI
	0x03C260EC FCMP S9, 0x0
	0x03C260F0 FCVTZS W11, S0
	0x03C260F4 AND X8, X8, 0xFF
	0x03C260F8 CSEL W9, W10, W10, MI
	0x03C260FC FCMP S0, 0x0
	0x03C26100 LDR X30, [X31 + 0x20]
	0x03C26104 LDP D9, D8, [X31 + 0x10]
	0x03C26108 AND X9, X9, 0xFF
	0x03C2610C CSEL W10, W11, W11, MI
	0x03C26110 BFM X0, X8, 0x38, 0x7
	0x03C26114 AND X8, X10, 0xFF
	0x03C26118 BFM X0, X9, 0x30, 0x7
	0x03C2611C BFM X0, X8, 0x28, 0x7
	0x03C26120 LDP D11, D10, [X31], #0x30
	0x03C26124 RET
	0x03C26128 AND W8, W0, 0xFF
	0x03C2612C UBFM W9, W0, 0x8, 0xF
	0x03C26130 UBFM W10, W0, 0x10, 0x17
	0x03C26134 UCVTF S0, W8
	0x03C26138 MOVZ W8, 0x437F0000
	0x03C2613C UBFM X11, X0, 0x18, 0x1F
	0x03C26140 FMOV S3, W8
	0x03C26144 UCVTF S1, W9
	0x03C26148 UCVTF S2, W10
	0x03C2614C UCVTF S4, W11
	0x03C26150 FDIV S0, S0, S3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x7BF000
	006 Move X21, 0x53A000
	007 Move X20, 0x4D6000
	008 Move W8, [X19+3968]
	009 Move X21, [X21+592]
	010 Move X20, [X20+2392]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x4D6000
	016 Move X0, [X0+2392]
	017 Call 0x1C17CF4
	018 Move X0, 0x53A000
	019 Move X0, [X0+592]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3968], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Call UnityLogWriter..ctor, X0
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, X31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call Console.SetOut, X0
	039 Return 

Method: System.Void Write(System.Char value)

Disassembly:
	0x03C261AC BL 0x1C16CF4
	0x03C261B0 ADRP X0, 0x4F5000
	0x03C261B4 LDR X0, [X0 + 0xBF0]
	0x03C261B8 BL 0x1C16CF4
	0x03C261BC MOVZ W8, 0x1
	0x03C261C0 STRB W8, [X22 + 0xF85]
	0x03C261C4 CBNZ X21, 0x3C26200
	0x03C261C8 ADRP X8, 0x4CF000
	0x03C261CC LDR X8, [X8 + 0xC48]
	0x03C261D0 LDR X0, [X8]
	0x03C261D4 LDR W8, [X0 + 0xE0]
	0x03C261D8 CBNZ W8, 0x3C261E0
	0x03C261DC BL 0x1C16DFC
	0x03C261E0 MOV X0, X31
	0x03C261E4 BL 0x3338524
	0x03C261E8 CBZ X0, 0x3C2634C
	0x03C261EC LDR X8, [X0]
	0x03C261F0 LDR X9, [X8 + 0x218]
	0x03C261F4 LDR X1, [X8 + 0x220]
	0x03C261F8 BLR X9
	0x03C261FC MOV X21, X0
	0x03C26200 ADRP X8, 0x4CD000
	0x03C26204 LDR X8, [X8 + 0x9D0]
	0x03C26208 MOVZ W1, 0x4
	0x03C2620C LDR X0, [X8]
	0x03C26210 BL 0x1C16D6C
	0x03C26214 MOV X22, X0
	0x03C26218 MOV X0, X20
	0x03C2621C MOV X1, X19
	0x03C26220 MOV X2, X21
	0x03C26224 MOV X3, X31
	0x03C26228 BL 0x3319D9C
	0x03C2622C CBZ X22, 0x3C2634C
	0x03C26230 MOV X23, X0
	0x03C26234 CBZ X0, 0x3C2624C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7BF000
	005 NotImplemented "Instruction STRH not yet implemented."
	006 Move X20, 0x4D0000
	007 Move W8, [X19+3969]
	008 Move X20, [X20+368]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4D0000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+3969], W8
	018 Move X0, [X20]
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Add X0, X31, 12
	024 Move X1, X31
	025 Call Char.ToString, X0
	026 Compare X0, 0
	027 JumpIfEqual {40}
	028 Move X20, 0x7BF000
	029 Move X8, [X20+3960]
	030 Move X19, X0
	031 Compare X8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, -51441664
	034 Add X0, X0, 2639
	035 Call 0x1C17CB8
	036 Move X8, X0
	037 Move [X20+3960], X0
	038 Move X0, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return 

Method: System.Void Write(System.String s)

Disassembly:
	0x03C26238 LDR X8, [X22]
	0x03C2623C MOV X0, X23
	0x03C26240 LDR X1, [X8 + 0x40]
	0x03C26244 BL 0x1C16E00
	0x03C26248 CBZ X0, 0x3C26340
	0x03C2624C LDR W8, [X22 + 0x18]
	0x03C26250 CBZ W8, 0x3C2633C
	0x03C26254 ADD X0, X20, 0x1
	0x03C26258 MOV X1, X19
	0x03C2625C MOV X2, X21
	0x03C26260 MOV X3, X31
	0x03C26264 STR X23, [X22 + 0x20]
	0x03C26268 BL 0x3319D9C
	0x03C2626C MOV X23, X0
	0x03C26270 CBZ X0, 0x3C26288
	0x03C26274 LDR X8, [X22]
	0x03C26278 MOV X0, X23

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {21}
	003 Move [X31-32], X30
	004 Move [X31+16], X20
	005 Move [X31+24], X19
	006 Move X20, 0x7BF000
	007 Move X19, X1
	008 Move X1, [X20+3960]
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51441664
	012 Add X0, X0, 2639
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+3960], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 CallNoReturn X1
	021 Return 

Method: System.Void Write(System.Char[] buffer, System.Int32 index, System.Int32 count)

Disassembly:
	0x03C2627C LDR X1, [X8 + 0x40]
	0x03C26280 BL 0x1C16E00
	0x03C26284 CBZ X0, 0x3C26340
	0x03C26288 LDR W8, [X22 + 0x18]
	0x03C2628C CMP W8, 0x1
	0x03C26290 B.LS 0x3C2633C
	0x03C26294 ADD X0, X20, 0x2
	0x03C26298 MOV X1, X19
	0x03C2629C MOV X2, X21
	0x03C262A0 MOV X3, X31
	0x03C262A4 STR X23, [X22 + 0x28]
	0x03C262A8 BL 0x3319D9C
	0x03C262AC MOV X23, X0
	0x03C262B0 CBZ X0, 0x3C262C8
	0x03C262B4 LDR X8, [X22]
	0x03C262B8 MOV X0, X23
	0x03C262BC LDR X1, [X8 + 0x40]
	0x03C262C0 BL 0x1C16E00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, X31
	005 Move X4, X31
	006 Call String.CreateString, X0, X1, X2, X3
	007 Move X20, 0x7BF000
	008 Move X1, [X20+3960]
	009 Move X19, X0
	010 Compare X1, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51441664
	013 Add X0, X0, 2639
	014 Call 0x1C17CB8
	015 Move X1, X0
	016 Move [X20+3960], X0
	017 Move X0, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 CallNoReturn X1

Method: System.Void .ctor()

Disassembly:
	0x03C26154 FDIV S1, S1, S3
	0x03C26158 FDIV S2, S2, S3
	0x03C2615C FDIV S3, S4, S3
	0x03C26160 RET
	0x03C26164 MOV X1, X31
	0x03C26168 MOV X2, X31
	0x03C2616C MOV X3, X31
	0x03C26170 B 0x3C2E7A0
	0x03C26174 STP X30, X23, [X31 - 0x30]!
	0x03C26178 STP X22, X21, [X31 + 0x10]
	0x03C2617C STP X20, X19, [X31 + 0x20]
	0x03C26180 ADRP X22, 0x7BE000
	0x03C26184 LDRB W8, [X22 + 0xF85]
	0x03C26188 MOV X21, X2
	0x03C2618C MOV X19, X1
	0x03C26190 MOV X20, X0
	0x03C26194 TBNZ X8, 0x0, 0x3C261C4
	0x03C26198 ADRP X0, 0x4CF000
	0x03C2619C LDR X0, [X0 + 0xC48]
	0x03C261A0 BL 0x1C16CF4
	0x03C261A4 ADRP X0, 0x4CD000
	0x03C261A8 LDR X0, [X0 + 0x9D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7BF000
	006 Move X21, 0x501000
	007 Move W8, [X20+3970]
	008 Move X21, [X21+3696]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x501000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3970], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call TextWriter..ctor, X0
	031 Return 

