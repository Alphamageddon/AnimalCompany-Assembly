Type: UnityEngine.AnimationCurve

Method: System.Void Internal_Destroy(System.IntPtr ptr)

Disassembly:
	0x03C01B08 LDR X0, [X20]
	0x03C01B0C LDR W8, [X0 + 0xE0]
	0x03C01B10 CBNZ W8, 0x3C01B18
	0x03C01B14 BL 0x1C16DFC
	0x03C01B18 ADRP X19, 0x7E2000
	0x03C01B1C LDR X8, [X19 + 0xEE8]
	0x03C01B20 CBNZ X8, 0x3C01B38
	0x03C01B24 ADRP X0, 0xFFFFFFFFFCF1D000
	0x03C01B28 ADD X0, X0, 0x75E
	0x03C01B2C BL 0x1C16CB8
	0x03C01B30 MOV X8, X0
	0x03C01B34 STR X0, [X19 + 0xEE8]
	0x03C01B38 BLR X8
	0x03C01B3C MOV W8, W0
	0x03C01B40 CMP W0, 0xB

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E3000
	005 Move X1, [X20+3560]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51339264
	010 Add X0, X0, 3620
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3560], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.IntPtr Internal_Create(UnityEngine.Keyframe[] keys)

Disassembly:
	0x03C01B44 B.LE 0x3C01B64
	0x03C01B48 SUB W9, W8, 0x12
	0x03C01B4C CMP W9, 0x3
	0x03C01B50 B.CC 0x3C01B80
	0x03C01B54 CMP W8, 0x32
	0x03C01B58 B.NE 0x3C01B78
	0x03C01B5C MOVZ W0, 0x1
	0x03C01B60 B 0x3C01B90
	0x03C01B64 CMP W8, 0x8
	0x03C01B68 MOVZ W0, 0x1
	0x03C01B6C B.EQ 0x3C01B90
	0x03C01B70 CMP W8, 0xB
	0x03C01B74 B.EQ 0x3C01B90
	0x03C01B78 MOV W0, W31
	0x03C01B7C B 0x3C01B90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E3000
	005 Move X1, [X20+3568]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51290112
	010 Add X0, X0, 969
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3568], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean Internal_Equals(System.IntPtr other)

Disassembly:
	0x03C01B80 MOV X0, X31
	0x03C01B84 BL 0x3C3B9DC
	0x03C01B88 CMP W0, 0x1
	0x03C01B8C CSET W0, EQ
	0x03C01B90 LDP X20, X19, [X31 + 0x10]
	0x03C01B94 LDR X30, [X31], #0x20
	0x03C01B98 RET
	0x03C01B9C STP X30, X19, [X31 - 0x10]!
	0x03C01BA0 ADRP X19, 0x7E2000
	0x03C01BA4 LDR X0, [X19 + 0xEF8]
	0x03C01BA8 CBNZ X0, 0x3C01BBC
	0x03C01BAC ADRP X0, 0xFFFFFFFFFCF07000
	0x03C01BB0 ADD X0, X0, 0xDD5
	0x03C01BB4 BL 0x1C16CB8
	0x03C01BB8 STR X0, [X19 + 0xEF8]
	0x03C01BBC LDP X30, X19, [X31], #0x10
	0x03C01BC0 BR X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E3000
	006 Move X2, [X21+3576]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51412992
	012 Add X0, X0, 3433
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3576], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Internal_CopyFrom(System.IntPtr other)

Disassembly:
	0x03C01BC4 SUB X31, X31, 0x30
	0x03C01BC8 STP X30, X21, [X31 + 0x10]
	0x03C01BCC STP X20, X19, [X31 + 0x20]
	0x03C01BD0 ADRP X21, 0x7E2000
	0x03C01BD4 ADRP X20, 0x4F2000
	0x03C01BD8 LDRB W8, [X21 + 0xF00]
	0x03C01BDC LDR X20, [X20 + 0x970]
	0x03C01BE0 MOV W19, W0
	0x03C01BE4 TBNZ X8, 0x0, 0x3C01BFC
	0x03C01BE8 ADRP X0, 0x4F2000
	0x03C01BEC LDR X0, [X0 + 0x970]
	0x03C01BF0 BL 0x1C16CF4
	0x03C01BF4 MOVZ W8, 0x1
	0x03C01BF8 STRB W8, [X21 + 0xF00]
	0x03C01BFC LDR X0, [X20]
	0x03C01C00 STR W31, [X31 + 0x8]
	0x03C01C04 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E3000
	006 Move X2, [X21+3584]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51240960
	012 Add X0, X0, 3107
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3584], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Finalize()

Disassembly:
	0x03C01C08 CBNZ W8, 0x3C01C14
	0x03C01C0C BL 0x1C16DFC
	0x03C01C10 LDR X0, [X20]
	0x03C01C14 LDR X8, [X0 + 0xB8]
	0x03C01C18 LDR X8, [X8 + 0x8]
	0x03C01C1C CBZ X8, 0x3C01C38
	0x03C01C20 STR W19, [X31 + 0x8]
	0x03C01C24 LDR X9, [X8 + 0x18]
	0x03C01C28 LDR X0, [X8 + 0x40]
	0x03C01C2C LDR X2, [X8 + 0x28]
	0x03C01C30 ADD X1, X31, 0x8
	0x03C01C34 BLR X9
	0x03C01C38 CMP W19, 0x4
	0x03C01C3C B.CC 0x3C01C74
	0x03C01C40 B.NE 0x3C01C84
	0x03C01C44 LDR X0, [X20]
	0x03C01C48 LDR W8, [X0 + 0xE0]
	0x03C01C4C CBNZ W8, 0x3C01C58
	0x03C01C50 BL 0x1C16DFC
	0x03C01C54 LDR X0, [X20]
	0x03C01C58 LDR X8, [X0 + 0xB8]
	0x03C01C5C LDR X8, [X8]
	0x03C01C60 CBZ X8, 0x3C01C74
	0x03C01C64 LDR X9, [X8 + 0x18]
	0x03C01C68 LDR X0, [X8 + 0x40]
	0x03C01C6C LDR X1, [X8 + 0x28]
	0x03C01C70 BLR X9
	0x03C01C74 LDP X20, X19, [X31 + 0x20]
	0x03C01C78 LDP X30, X21, [X31 + 0x10]
	0x03C01C7C ADD X31, X31, 0x30
	0x03C01C80 RET
	0x03C01C84 STR W19, [X31 + 0x4]
	0x03C01C88 ADRP X0, 0x55D000
	0x03C01C8C LDR X0, [X0 + 0xAC8]
	0x03C01C90 BL 0x1C16D08
	0x03C01C94 ADD X1, X31, 0x4
	0x03C01C98 BL 0x1C16E04
	0x03C01C9C MOV X19, X0
	0x03C01CA0 ADRP X0, 0x55D000
	0x03C01CA4 LDR X0, [X0 + 0xAD0]
	0x03C01CA8 BL 0x1C16D08
	0x03C01CAC MOV X1, X19
	0x03C01CB0 MOV X2, X31
	0x03C01CB4 BL 0x321EFD0
	0x03C01CB8 MOV X19, X0
	0x03C01CBC ADRP X0, 0x4F2000
	0x03C01CC0 LDR X0, [X0 + 0x7D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E3000
	006 Move X8, [X21+3560]
	007 Move X20, [X0+16]
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51339264
	012 Add X0, X0, 3620
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X21+3560], X0
	016 Move X0, X20
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X0, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X1, X31
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Call Object.Finalize, X0
	025 Return 
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X21, X0
	028 Move X0, X21
	029 Call 0x3EB2AD0
	030 Move X20, [X0]
	031 Call 0x3EB2AE0
	032 Move X0, X19
	033 Move X1, X31
	034 Call Object.Finalize, X0
	035 Compare X20, 0
	036 JumpIfNotEqual {43}
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X20, X31
	043 Move X0, X20
	044 Call 0x1C17F18
	045 Move X21, X0
	046 Move X0, X19
	047 Move X1, X31
	048 Call Object.Finalize, X0
	049 Compare X20, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X21
	052 Call 0x1D2D690
	053 Move X0, X20
	054 Call 0x1C17F18
	055 Call 0x1991590

Method: System.Single Evaluate(System.Single time)

Disassembly:
	0x03C01CC4 BL 0x1C16D08
	0x03C01CC8 BL 0x1C16F10
	0x03C01CCC MOV X1, X19
	0x03C01CD0 MOV X2, X31
	0x03C01CD4 MOV X20, X0
	0x03C01CD8 BL 0x33B2C70
	0x03C01CDC ADRP X0, 0x55D000
	0x03C01CE0 LDR X0, [X0 + 0xAD8]
	0x03C01CE4 BL 0x1C16D08
	0x03C01CE8 MOV X1, X0
	0x03C01CEC MOV X0, X20
	0x03C01CF0 BL 0x1C16DEC
	0x03C01CF4 STR W1, [X0]
	0x03C01CF8 RET
	0x03C01CFC STR X30, [X31 - 0x20]!
	0x03C01D00 STP X20, X19, [X31 + 0x10]
	0x03C01D04 ADRP X20, 0x7E2000
	0x03C01D08 ADRP X19, 0x4F2000
	0x03C01D0C LDRB W8, [X20 + 0xF01]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7E3000
	006 Move X1, [X20+3592]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51429376
	012 Add X0, X0, 4092
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+3592], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: UnityEngine.Keyframe[] get_keys()

Disassembly:
	0x03C01D10 LDR X19, [X19 + 0x970]
	0x03C01D14 TBNZ X8, 0x0, 0x3C01D2C
	0x03C01D18 ADRP X0, 0x4F2000
	0x03C01D1C LDR X0, [X0 + 0x970]
	0x03C01D20 BL 0x1C16CF4
	0x03C01D24 MOVZ W8, 0x1
	0x03C01D28 STRB W8, [X20 + 0xF01]
	0x03C01D2C LDR X0, [X19]
	0x03C01D30 LDR W8, [X0 + 0xE0]
	0x03C01D34 CBNZ W8, 0x3C01D40
	0x03C01D38 BL 0x1C16DFC
	0x03C01D3C LDR X0, [X19]
	0x03C01D40 LDR X8, [X0 + 0xB8]
	0x03C01D44 LDR X9, [X8 + 0x10]
	0x03C01D48 CBZ X9, 0x3C01D54

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E3000
	005 Move X1, [X20+3640]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51290112
	010 Add X0, X0, 1037
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3640], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_keys(UnityEngine.Keyframe[] value)

Disassembly:
	0x03C01D88 ADRP X21, 0x7E2000
	0x03C01D8C ADRP X20, 0x4F2000
	0x03C01D90 LDRB W8, [X21 + 0xF02]
	0x03C01D94 LDR X20, [X20 + 0x970]
	0x03C01D98 MOV X19, X0
	0x03C01D9C TBNZ X8, 0x0, 0x3C01DC0
	0x03C01DA0 ADRP X0, 0x4F2000
	0x03C01DA4 LDR X0, [X0 + 0x970]
	0x03C01DA8 BL 0x1C16CF4
	0x03C01DAC ADRP X0, 0x536000
	0x03C01DB0 LDR X0, [X0 + 0xCE8]
	0x03C01DB4 BL 0x1C16CF4
	0x03C01DB8 MOVZ W8, 0x1
	0x03C01DBC STRB W8, [X21 + 0xF02]
	0x03C01DC0 LDR X0, [X20]
	0x03C01DC4 LDR W8, [X0 + 0xE0]
	0x03C01DC8 CBNZ W8, 0x3C01DD4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E3000
	006 Move X2, [X21+3632]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51363840
	012 Add X0, X0, 3753
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3632], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 AddKey(System.Single time, System.Single value)

Disassembly:
	0x03C01E10 LDR X8, [X0]
	0x03C01E14 CMP X8, X1
	0x03C01E18 B.EQ 0x3C01E2C
	0x03C01E1C BL 0x1C171E0
	0x03C01E20 LDR X8, [X20]
	0x03C01E24 LDR X8, [X8 + 0xB8]
	0x03C01E28 STR X0, [X8 + 0x10]
	0x03C01E2C ADRP X19, 0x7E2000
	0x03C01E30 LDR X1, [X19 + 0xEE0]
	0x03C01E34 CBNZ X1, 0x3C01E4C
	0x03C01E38 ADRP X0, 0xFFFFFFFFFCEFD000
	0x03C01E3C ADD X0, X0, 0xDA9
	0x03C01E40 BL 0x1C16CB8
	0x03C01E44 MOV X1, X0
	0x03C01E48 STR X0, [X19 + 0xEE0]
	0x03C01E4C LDP X20, X19, [X31 + 0x10]
	0x03C01E50 MOVZ W0, 0x1
	0x03C01E54 LDP X30, X21, [X31], #0x20
	0x03C01E58 BR X1
	0x03C01E5C STP X30, X21, [X31 - 0x20]!
	0x03C01E60 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7E3000
	007 Move X1, [X20+3600]
	008 Move V8, V1
	009 Move V9, V0
	010 Move X19, X0
	011 Compare X1, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51232768
	014 Add X0, X0, 2579
	015 Call 0x1C17CB8
	016 Move X1, X0
	017 Move [X20+3600], X0
	018 Move X0, X19
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X30, [X31+16]
	022 Move V0, V9
	023 Move V1, V8
	024 Move D9, [X31+48]
	025 Move D8, [X31+56]
	026 CallNoReturn X1

Method: System.Int32 AddKey(UnityEngine.Keyframe key)

Disassembly:
	0x03C01E64 ADRP X21, 0x7E2000
	0x03C01E68 ADRP X20, 0x4F2000
	0x03C01E6C LDRB W8, [X21 + 0xF03]
	0x03C01E70 LDR X20, [X20 + 0x970]
	0x03C01E74 MOV X19, X0
	0x03C01E78 TBNZ X8, 0x0, 0x3C01E9C
	0x03C01E7C ADRP X0, 0x4F2000
	0x03C01E80 LDR X0, [X0 + 0x970]
	0x03C01E84 BL 0x1C16CF4
	0x03C01E88 ADRP X0, 0x536000
	0x03C01E8C LDR X0, [X0 + 0xCE8]
	0x03C01E90 BL 0x1C16CF4
	0x03C01E94 MOVZ W8, 0x1
	0x03C01E98 STRB W8, [X21 + 0xF03]
	0x03C01E9C LDR X0, [X20]
	0x03C01EA0 LDR W8, [X0 + 0xE0]
	0x03C01EA4 CBNZ W8, 0x3C01EB0
	0x03C01EA8 BL 0x1C16DFC
	0x03C01EAC LDR X0, [X20]
	0x03C01EB0 LDR X8, [X0 + 0xB8]
	0x03C01EB4 MOV X1, X19
	0x03C01EB8 MOV X2, X31
	0x03C01EBC LDR X0, [X8 + 0x10]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x7E3000
	006 Move V0, [X1]
	007 NotImplemented "Instruction LDUR not yet implemented."
	008 Move X8, [X20+3696]
	009 Move X19, X0
	010 Move [X31+12], V1
	011 Move [X31], V0
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51257344
	015 Add X0, X0, 1810
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+3696], X0
	019 Add X1, X31, 0
	020 Move X0, X19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X20, [X31+48]
	023 Move X19, [X31+56]
	024 Move X30, [X31+32]
	025 Add X31, X31, 64
	026 Return X0

Method: System.Int32 AddKey_Internal(UnityEngine.Keyframe key)

Disassembly:
	0x03C01EC0 BL 0x33C0FDC
	0x03C01EC4 CBZ X0, 0x3C01EFC
	0x03C01EC8 ADRP X8, 0x536000
	0x03C01ECC LDR X8, [X8 + 0xCE8]
	0x03C01ED0 LDR X1, [X8]
	0x03C01ED4 LDR X8, [X0]
	0x03C01ED8 CMP X8, X1
	0x03C01EDC B.NE 0x3C01EF8
	0x03C01EE0 LDR X8, [X20]
	0x03C01EE4 LDR X8, [X8 + 0xB8]
	0x03C01EE8 STR X0, [X8 + 0x10]
	0x03C01EEC LDR X8, [X0]
	0x03C01EF0 CMP X8, X1
	0x03C01EF4 B.EQ 0x3C01F08
	0x03C01EF8 BL 0x1C171E0
	0x03C01EFC LDR X8, [X20]
	0x03C01F00 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E3000
	006 Move X2, [X21+3696]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51257344
	012 Add X0, X0, 1810
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3696], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 MoveKey(System.Int32 index, UnityEngine.Keyframe key)

Disassembly:
	0x03C01F48 MOVZ W8, 0x1
	0x03C01F4C STRB W8, [X23 + 0xF04]
	0x03C01F50 ADRP X23, 0x4F2000
	0x03C01F54 LDR X23, [X23 + 0x970]
	0x03C01F58 TBZ X22, 0x0, 0x3C01F98
	0x03C01F5C LDR X0, [X23]
	0x03C01F60 LDR W8, [X0 + 0xE0]
	0x03C01F64 CBNZ W8, 0x3C01F70
	0x03C01F68 BL 0x1C16DFC
	0x03C01F6C LDR X0, [X23]
	0x03C01F70 LDR X8, [X0 + 0xB8]
	0x03C01F74 LDR X8, [X8 + 0x10]
	0x03C01F78 CBZ X8, 0x3C01F98
	0x03C01F7C LDR X9, [X8 + 0x18]
	0x03C01F80 LDR X0, [X8 + 0x40]
	0x03C01F84 LDR X4, [X8 + 0x28]
	0x03C01F88 MOV X1, X21
	0x03C01F8C MOV X2, X20
	0x03C01F90 MOV W3, W19
	0x03C01F94 BLR X9
	0x03C01F98 LDR X0, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E3000
	007 Move X3, [X22+3704]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51404800
	014 Add X0, X0, 3722
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3704], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void ClearKeys()

Disassembly:
	0x03C01FF0 STP X30, X21, [X31 - 0x20]!
	0x03C01FF4 STP X20, X19, [X31 + 0x10]
	0x03C01FF8 ADRP X20, 0x7E2000
	0x03C01FFC ADRP X21, 0x55D000
	0x03C02000 LDRB W8, [X20 + 0xF05]
	0x03C02004 B 0x3EB19D4
	0x03C02008 MOV X19, X0
	0x03C0200C TBNZ X8, 0x0, 0x3C02024
	0x03C02010 ADRP X0, 0x55C000
	0x03C02014 LDR X0, [X0 + 0xAE0]
	0x03C02018 BL 0x1C16CF4
	0x03C0201C MOVZ W8, 0x1
	0x03C02020 STRB W8, [X20 + 0xF05]
	0x03C02024 LDR X0, [X21]
	0x03C02028 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E3000
	005 Move X1, [X20+3608]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51351552
	010 Add X0, X0, 3440
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3608], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void RemoveKey(System.Int32 index)

Disassembly:
	0x03C0202C CBNZ W8, 0x3C02034
	0x03C02030 BL 0x1C16DFC
	0x03C02034 MOV X0, X19
	0x03C02038 LDP X20, X19, [X31 + 0x10]
	0x03C0203C LDP X30, X21, [X31], #0x20
	0x03C02040 B 0x3C02044
	0x03C02044 STR X30, [X31 - 0x50]!
	0x03C02048 STP X26, X25, [X31 + 0x10]
	0x03C0204C STP X24, X23, [X31 + 0x20]
	0x03C02050 STP X22, X21, [X31 + 0x30]
	0x03C02054 STP X20, X19, [X31 + 0x40]
	0x03C02058 ADRP X19, 0x7E2000
	0x03C0205C ADRP X23, 0x55C000
	0x03C02060 LDRB W8, [X19 + 0x2E1]
	0x03C02064 LDR X23, [X23 + 0xAE0]
	0x03C02068 MOV X21, X0
	0x03C0206C TBNZ X8, 0x0, 0x3C020C0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E2000
	006 Move X2, [X21+3616]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51396608
	012 Add X0, X0, 20
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3616], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Keyframe get_Item(System.Int32 index)

Disassembly:
	0x03C02070 ADRP X0, 0x55C000
	0x03C02074 LDR X0, [X0 + 0xAE0]
	0x03C02078 BL 0x1C16CF4
	0x03C0207C ADRP X0, 0x55C000
	0x03C02080 LDR X0, [X0 + 0xAE8]
	0x03C02084 BL 0x1C16CF4
	0x03C02088 ADRP X0, 0x55C000
	0x03C0208C LDR X0, [X0 + 0xAF0]
	0x03C02090 BL 0x1C16CF4
	0x03C02094 ADRP X0, 0x55C000
	0x03C02098 LDR X0, [X0 + 0xAF8]
	0x03C0209C BL 0x1C16CF4
	0x03C020A0 ADRP X0, 0x55C000
	0x03C020A4 LDR X0, [X0 + 0xB00]
	0x03C020A8 BL 0x1C16CF4
	0x03C020AC ADRP X0, 0x518000
	0x03C020B0 LDR X0, [X0 + 0xE30]
	0x03C020B4 BL 0x1C16CF4
	0x03C020B8 MOVZ W8, 0x1
	0x03C020BC STRB W8, [X19 + 0x2E1]
	0x03C020C0 LDR X0, [X23]
	0x03C020C4 LDR W8, [X0 + 0xE0]
	0x03C020C8 CBNZ W8, 0x3C020D0
	0x03C020CC BL 0x1C16DFC
	0x03C020D0 MOV X0, X21
	0x03C020D4 BL 0x3C0D3F0
	0x03C020D8 LDR X8, [X23]
	0x03C020DC MOV W22, W0
	0x03C020E0 LDR X8, [X8 + 0xB8]
	0x03C020E4 LDR X19, [X8]
	0x03C020E8 STRB W31, [X31 + 0xC]
	0x03C020EC ADD X1, X31, 0xC
	0x03C020F0 MOV X0, X19
	0x03C020F4 MOV X2, X31
	0x03C020F8 BL 0x33DE64C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0x7E2000
	008 Move X19, X8
	009 Move X8, [X22+3712]
	010 Move W20, W1
	011 Move X21, X0
	012 Move [X31+32], X31
	013 Move [X31+40], X31
	014 Move [X31+56], W31
	015 Move [X31+48], X31
	016 Compare X8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, -51335168
	019 Add X0, X0, 3106
	020 Call 0x1C17CB8
	021 Move X8, X0
	022 Move [X22+3712], X0
	023 Add X2, X31, 32
	024 Move X0, X21
	025 Move W1, W20
	026 NotImplemented "Instruction BLR not yet implemented."
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move V1, [X31+2]
	029 Move X22, [X31+80]
	030 Move X21, [X31+88]
	031 Move X30, [X31+64]
	032 Move [X31+12], V0
	033 Move [X31], V1
	034 Move V0, [X31]
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 Move [X19], V0
	037 Move [X19+12], V1
	038 Move X20, [X31+96]
	039 Move X19, [X31+104]
	040 Add X31, X31, 112
	041 Return X0

Method: System.Int32 get_length()

Disassembly:
	0x03C02178 CMP W22, W0
	0x03C0217C B.LT 0x3C021BC
	0x03C02180 LDR X0, [X23]
	0x03C02184 LDR W8, [X0 + 0xE0]
	0x03C02188 CBNZ W8, 0x3C02194
	0x03C0218C BL 0x1C16DFC
	0x03C02190 LDR X0, [X23]
	0x03C02194 LDR X8, [X0 + 0xB8]
	0x03C02198 LDR X0, [X8]
	0x03C0219C CBZ X0, 0x3C022D4
	0x03C021A0 LDR X2, [X26]
	0x03C021A4 MOV W1, W20
	0x03C021A8 BL 0x30EA8B8
	0x03C021AC CMP W22, W0
	0x03C021B0 B.EQ 0x3C0221C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E2000
	005 Move X1, [X20+3624]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51269632
	010 Add X0, X0, 3160
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3624], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetKeys(UnityEngine.Keyframe[] keys)

Disassembly:
	0x03C01DCC BL 0x1C16DFC
	0x03C01DD0 LDR X0, [X20]
	0x03C01DD4 LDR X8, [X0 + 0xB8]
	0x03C01DD8 MOV X1, X19
	0x03C01DDC MOV X2, X31
	0x03C01DE0 LDR X0, [X8 + 0x10]
	0x03C01DE4 BL 0x33C0DE4
	0x03C01DE8 CBZ X0, 0x3C01E20
	0x03C01DEC ADRP X8, 0x536000
	0x03C01DF0 LDR X8, [X8 + 0xCE8]
	0x03C01DF4 LDR X1, [X8]
	0x03C01DF8 LDR X8, [X0]
	0x03C01DFC CMP X8, X1
	0x03C01E00 B.NE 0x3C01E1C
	0x03C01E04 LDR X8, [X20]
	0x03C01E08 LDR X8, [X8 + 0xB8]
	0x03C01E0C STR X0, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E3000
	006 Move X2, [X21+3632]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51363840
	012 Add X0, X0, 3753
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3632], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Keyframe GetKey(System.Int32 index)

Disassembly:
	0x03C020FC ADRP X26, 0x55C000
	0x03C02100 ADRP X24, 0x518000
	0x03C02104 ADRP X25, 0x55C000
	0x03C02108 LDR X26, [X26 + 0xAF8]
	0x03C0210C LDR X24, [X24 + 0xE30]
	0x03C02110 LDR X25, [X25 + 0xAE8]
	0x03C02114 MOV W20, W31
	0x03C02118 LDR X8, [X23]
	0x03C0211C LDR W9, [X8 + 0xE0]
	0x03C02120 CBNZ W9, 0x3C02130
	0x03C02124 MOV X0, X8
	0x03C02128 BL 0x1C16DFC
	0x03C0212C LDR X8, [X23]
	0x03C02130 LDR X9, [X8 + 0xB8]
	0x03C02134 LDR X9, [X9]
	0x03C02138 CBZ X9, 0x3C022D0
	0x03C0213C LDR W10, [X9 + 0x18]
	0x03C02140 CMP W20, W10
	0x03C02144 B.GE 0x3C021BC
	0x03C02148 LDR W10, [X8 + 0xE0]
	0x03C0214C CBNZ W10, 0x3C02168
	0x03C02150 MOV X0, X8
	0x03C02154 BL 0x1C16DFC
	0x03C02158 LDR X8, [X23]
	0x03C0215C LDR X8, [X8 + 0xB8]
	0x03C02160 LDR X9, [X8]
	0x03C02164 CBZ X9, 0x3C022D8
	0x03C02168 LDR X2, [X26]
	0x03C0216C MOV X0, X9
	0x03C02170 MOV W1, W20
	0x03C02174 BL 0x30EA8B8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x7E2000
	008 Move X19, X8
	009 Move X8, [X22+3712]
	010 Move W20, W1
	011 Move X21, X0
	012 Move [X31], X31
	013 Move [X31+8], X31
	014 Move [X31+24], W31
	015 Move [X31+16], X31
	016 Compare X8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, -51335168
	019 Add X0, X0, 3106
	020 Call 0x1C17CB8
	021 Move X8, X0
	022 Move [X22+3712], X0
	023 Add X2, X31, 0
	024 Move X0, X21
	025 Move W1, W20
	026 NotImplemented "Instruction BLR not yet implemented."
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Move V1, [X31]
	029 Move X22, [X31+48]
	030 Move X21, [X31+56]
	031 Move X30, [X31+32]
	032 Move [X19+12], V0
	033 Move [X19], V1
	034 Move X20, [X31+64]
	035 Move X19, [X31+72]
	036 Add X31, X31, 80
	037 Return X0

Method: UnityEngine.Keyframe[] GetKeys()

Disassembly:
	0x03C01D4C MOVZ W0, 0x1
	0x03C01D50 B 0x3C01D74
	0x03C01D54 LDR W9, [X0 + 0xE0]
	0x03C01D58 CBNZ W9, 0x3C01D68
	0x03C01D5C BL 0x1C16DFC
	0x03C01D60 LDR X8, [X19]
	0x03C01D64 LDR X8, [X8 + 0xB8]
	0x03C01D68 LDR X8, [X8 + 0x18]
	0x03C01D6C CMP X8, 0x0
	0x03C01D70 CSET W0, NE
	0x03C01D74 LDP X20, X19, [X31 + 0x10]
	0x03C01D78 LDR X30, [X31], #0x20
	0x03C01D7C RET
	0x03C01D80 STP X30, X21, [X31 - 0x20]!
	0x03C01D84 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E3000
	005 Move X1, [X20+3640]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51290112
	010 Add X0, X0, 1037
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3640], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C02208 MOV W2, W22
	0x03C0220C MOV W1, W20
	0x03C02210 MOV X3, X21
	0x03C02214 BL 0x30EBB68
	0x03C02218 B 0x3C0229C
	0x03C0221C LDR X0, [X23]
	0x03C02220 LDR W8, [X0 + 0xE0]
	0x03C02224 CBNZ W8, 0x3C02230
	0x03C02228 BL 0x1C16DFC
	0x03C0222C LDR X0, [X23]
	0x03C02230 LDR X8, [X0 + 0xB8]
	0x03C02234 LDR X0, [X8]
	0x03C02238 CBZ X0, 0x3C022F0
	0x03C0223C LDR X2, [X26]
	0x03C02240 MOV W1, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E2000
	005 Move X1, [X20+3648]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51429376
	010 Add X0, X0, 48
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3648], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SmoothTangents(System.Int32 index, System.Single weight)

Disassembly:
	0x03C02244 BL 0x30EA8B8
	0x03C02248 MOV X22, X0
	0x03C0224C MOV X0, X1
	0x03C02250 MOV X1, X21
	0x03C02254 MOV X2, X31
	0x03C02258 BL 0x33C0DE4
	0x03C0225C MOV X3, X0
	0x03C02260 CBZ X0, 0x3C02274
	0x03C02264 LDR X1, [X24]
	0x03C02268 LDR X8, [X3]
	0x03C0226C CMP X8, X1
	0x03C02270 B.NE 0x3C022F8
	0x03C02274 LDR X8, [X23]
	0x03C02278 LDR X8, [X8 + 0xB8]
	0x03C0227C LDR X0, [X8]
	0x03C02280 CBZ X0, 0x3C022F4
	0x03C02284 ADRP X8, 0x55C000
	0x03C02288 LDR X8, [X8 + 0xB00]
	0x03C0228C LDR X4, [X8]
	0x03C02290 MOV W1, W20
	0x03C02294 MOV X2, X22

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7E2000
	007 Move X2, [X21+3656]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51220480
	014 Add X0, X0, 853
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+3656], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: UnityEngine.AnimationCurve Linear(System.Single timeStart, System.Single valueStart, System.Single timeEnd, System.Single valueEnd)

Disassembly:
	0x03C02298 BL 0x30EA910
	0x03C0229C MOV X21, X31
	0x03C022A0 LDRB W8, [X31 + 0xC]
	0x03C022A4 CBZ W8, 0x3C022B4
	0x03C022A8 MOV X0, X19
	0x03C022AC MOV X1, X31
	0x03C022B0 BL 0x33E14E4
	0x03C022B4 CBNZ X21, 0x3C022DC
	0x03C022B8 LDP X20, X19, [X31 + 0x40]
	0x03C022BC LDP X22, X21, [X31 + 0x30]
	0x03C022C0 LDP X24, X23, [X31 + 0x20]
	0x03C022C4 LDP X26, X25, [X31 + 0x10]
	0x03C022C8 LDR X30, [X31], #0x50
	0x03C022CC RET
	0x03C022D0 BL 0x1C16F20
	0x03C022D4 BL 0x1C16F20
	0x03C022D8 BL 0x1C16F20
	0x03C022DC MOV X0, X21
	0x03C022E0 BL 0x1C16F18
	0x03C022E4 BL 0x1C16F20
	0x03C022E8 MOV X0, X21
	0x03C022EC BL 0x1C171E0
	0x03C022F0 BL 0x1C16F20
	0x03C022F4 BL 0x1C16F20
	0x03C022F8 MOV X0, X3
	0x03C022FC BL 0x1C171E0
	0x03C02300 B 0x3C02338
	0x03C02304 B 0x3C02338
	0x03C02308 B 0x3C02338
	0x03C0230C B 0x3C02338
	0x03C02310 B 0x3C02338
	0x03C02314 B 0x3C02338
	0x03C02318 B 0x3C02338
	0x03C0231C B 0x3C02338
	0x03C02320 B 0x3C02338
	0x03C02324 B 0x3C02338
	0x03C02328 B 0x3C02338
	0x03C0232C B 0x3C02338
	0x03C02330 B 0x3C02338
	0x03C02334 B 0x3C02338
	0x03C02338 MOV X20, X0
	0x03C0233C CMP W1, 0x1
	0x03C02340 B.NE 0x3C02358
	0x03C02344 MOV X0, X20
	0x03C02348 BL 0x3EB1AD0
	0x03C0234C LDR X21, [X0]
	0x03C02350 BL 0x3EB1AE0
	0x03C02354 B 0x3C022A0
	0x03C02358 MOV X21, X31
	0x03C0235C B 0x3C02364
	0x03C02360 MOV X20, X0
	0x03C02364 LDRB W8, [X31 + 0xC]
	0x03C02368 CBZ W8, 0x3C02378
	0x03C0236C MOV X0, X19
	0x03C02370 MOV X1, X31
	0x03C02374 BL 0x33E14E4
	0x03C02378 CBNZ X21, 0x3C02384
	0x03C0237C MOV X0, X20
	0x03C02380 BL 0x1D2C690
	0x03C02384 MOV X0, X21
	0x03C02388 BL 0x1C16F18
	0x03C0238C BL 0x1990590
	0x03C02390 STP X30, X21, [X31 - 0x20]!
	0x03C02394 STP X20, X19, [X31 + 0x10]
	0x03C02398 ADRP X20, 0x7E1000
	0x03C0239C ADRP X21, 0x55C000
	0x03C023A0 LDRB W8, [X20 + 0xF06]
	0x03C023A4 LDR X21, [X21 + 0xAE0]
	0x03C023A8 MOV X19, X0
	0x03C023AC TBNZ X8, 0x0, 0x3C023C4
	0x03C023B0 ADRP X0, 0x55C000
	0x03C023B4 LDR X0, [X0 + 0xAE0]
	0x03C023B8 BL 0x1C16CF4
	0x03C023BC MOVZ W8, 0x1
	0x03C023C0 STRB W8, [X20 + 0xF06]
	0x03C023C4 LDR X0, [X21]
	0x03C023C8 LDR W8, [X0 + 0xE0]
	0x03C023CC CBNZ W8, 0x3C023D4
	0x03C023D0 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X30
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X19, 0x7E2000
	010 Move W8, [X19+3664]
	011 Move V10, V3
	012 Move V11, V2
	013 Move V8, V1
	014 Move V9, V0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x4F9000
	020 Move X0, [X0+1840]
	021 Call 0x1C17CF4
	022 Move X0, 0x4F9000
	023 Move X0, [X0+1936]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+3664], W8
	027 Move X8, 0x4F9000
	028 Move X20, 0x4F9000
	029 Move X8, [X8+1936]
	030 Move X20, [X20+1840]
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 Move X0, [X8]
	033 Move W1, 1
	034 Call 0x1C17D6C
	035 Move [X31+24], X31
	036 Move [X31+32], X31
	037 Move [X31+40], W31
	038 Compare X0, 0
	039 JumpIfEqual {94}
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move W8, [X31+40]
	042 Move X19, X0
	043 Move [X31], V0
	044 Move [X31+16], W8
	045 Move W8, [X0+24]
	046 Compare W8, 0
	047 JumpIfEqual {93}
	048 Move [X19+32], S9
	049 Move [X19+40], S8
	050 Move W8, [X31+16]
	051 Move V0, [X31]
	052 Move [X19+56], W8
	053 Move [X19+40], V0
	054 Move X0, [X8]
	055 Move W1, 2
	056 Call 0x1C17D6C
	057 Compare X0, 0
	058 JumpIfEqual {94}
	059 Move W8, [X0+24]
	060 Move X19, X0
	061 Compare W8, 0
	062 JumpIfEqual {93}
	063 Subtract S0, S10, S8
	064 Subtract S1, S11, S9
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction FDIV not yet implemented."
	067 Move [X19+32], S9
	068 Move [X19+40], S8
	069 Move [X19+40], W31
	070 Move [X19+56], W31
	071 Move [X19+44], S0
	072 Move [X19+48], X31
	073 Move [X19+60], S11
	074 Move [X19+68], S10
	075 Move [X19+68], S0
	076 Move [X19+72], X31
	077 Move [X19+80], X31
	078 Move X0, [X20]
	079 Call 0x1C17F10
	080 Move X1, X19
	081 Move X20, X0
	082 Call AnimationCurve..ctor, X0, X1
	083 Move X0, X20
	084 Move X20, [X31+96]
	085 Move X19, [X31+104]
	086 Move X30, [X31+80]
	087 Move D9, [X31+64]
	088 Move D8, [X31+72]
	089 Move D11, [X31+48]
	090 Move D10, [X31+56]
	091 Add X31, X31, 112
	092 Return X0
	093 Call 0x1C17F28
	094 Call 0x1C17F20

Method: UnityEngine.AnimationCurve EaseInOut(System.Single timeStart, System.Single valueStart, System.Single timeEnd, System.Single valueEnd)

Disassembly:
	0x03C02424 ADRP X0, 0x55C000
	0x03C02428 LDR X0, [X0 + 0xAF0]
	0x03C0242C BL 0x1C16CF4
	0x03C02430 ADRP X0, 0x55C000
	0x03C02434 LDR X0, [X0 + 0xAF8]
	0x03C02438 BL 0x1C16CF4
	0x03C0243C ADRP X0, 0x55C000
	0x03C02440 LDR X0, [X0 + 0xB00]
	0x03C02444 BL 0x1C16CF4
	0x03C02448 ADRP X0, 0x518000
	0x03C0244C LDR X0, [X0 + 0xE30]
	0x03C02450 BL 0x1C16CF4
	0x03C02454 MOVZ W8, 0x1
	0x03C02458 STRB W8, [X19 + 0x2E2]
	0x03C0245C LDR X0, [X23]
	0x03C02460 LDR W8, [X0 + 0xE0]
	0x03C02464 CBNZ W8, 0x3C0246C
	0x03C02468 BL 0x1C16DFC
	0x03C0246C MOV X0, X21
	0x03C02470 BL 0x3C0D3F0
	0x03C02474 LDR X8, [X23]
	0x03C02478 MOV W22, W0
	0x03C0247C LDR X8, [X8 + 0xB8]
	0x03C02480 LDR X19, [X8]
	0x03C02484 STRB W31, [X31 + 0xC]
	0x03C02488 ADD X1, X31, 0xC
	0x03C0248C MOV X0, X19
	0x03C02490 MOV X2, X31
	0x03C02494 BL 0x33DE64C
	0x03C02498 ADRP X24, 0x55C000
	0x03C0249C LDR X24, [X24 + 0xAF8]
	0x03C024A0 MOV W20, W31
	0x03C024A4 LDR X0, [X23]
	0x03C024A8 LDR W8, [X0 + 0xE0]
	0x03C024AC CBNZ W8, 0x3C024B8
	0x03C024B0 BL 0x1C16DFC
	0x03C024B4 LDR X0, [X23]
	0x03C024B8 LDR X8, [X0 + 0xB8]
	0x03C024BC LDR X8, [X8]
	0x03C024C0 CBZ X8, 0x3C02634
	0x03C024C4 LDR W9, [X8 + 0x18]
	0x03C024C8 CMP W20, W9
	0x03C024CC B.GE 0x3C02604
	0x03C024D0 LDR W9, [X0 + 0xE0]
	0x03C024D4 CBNZ W9, 0x3C024EC
	0x03C024D8 BL 0x1C16DFC
	0x03C024DC LDR X8, [X23]
	0x03C024E0 LDR X8, [X8 + 0xB8]
	0x03C024E4 LDR X8, [X8]
	0x03C024E8 CBZ X8, 0x3C0263C
	0x03C024EC LDR X2, [X24]
	0x03C024F0 MOV X0, X8
	0x03C024F4 MOV W1, W20
	0x03C024F8 BL 0x30EA8B8
	0x03C024FC CMP W22, W0
	0x03C02500 B.LT 0x3C02604
	0x03C02504 LDR X0, [X23]
	0x03C02508 LDR W8, [X0 + 0xE0]
	0x03C0250C CBNZ W8, 0x3C02518
	0x03C02510 BL 0x1C16DFC
	0x03C02514 LDR X0, [X23]
	0x03C02518 LDR X8, [X0 + 0xB8]
	0x03C0251C LDR X0, [X8]
	0x03C02520 CBZ X0, 0x3C02638
	0x03C02524 LDR X2, [X24]
	0x03C02528 MOV W1, W20
	0x03C0252C BL 0x30EA8B8
	0x03C02530 CMP W22, W0
	0x03C02534 B.EQ 0x3C02540
	0x03C02538 ADD W20, W20, 0x1
	0x03C0253C B 0x3C024A4
	0x03C02540 LDR X0, [X23]
	0x03C02544 LDR W8, [X0 + 0xE0]
	0x03C02548 CBNZ W8, 0x3C02554
	0x03C0254C BL 0x1C16DFC
	0x03C02550 LDR X0, [X23]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X30
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X20, 0x7E2000
	010 Move X19, 0x4F9000
	011 Move W8, [X20+3665]
	012 Move X19, [X19+1936]
	013 Move V10, V3
	014 Move V11, V2
	015 Move V8, V1
	016 Move V9, V0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x4F9000
	022 Move X0, [X0+1840]
	023 Call 0x1C17CF4
	024 Move X0, 0x4F9000
	025 Move X0, [X0+1936]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3665], W8
	029 Move X20, 0x4F9000
	030 Move X0, [X19]
	031 Move X20, [X20+1840]
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 Move W1, 1
	034 Call 0x1C17D6C
	035 Move [X31+24], X31
	036 Move [X31+32], X31
	037 Move [X31+40], W31
	038 Compare X0, 0
	039 JumpIfEqual {90}
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move W8, [X31+40]
	042 Move X19, X0
	043 Move [X31], V0
	044 Move [X31+16], W8
	045 Move W8, [X0+24]
	046 Compare W8, 0
	047 JumpIfEqual {89}
	048 Move [X19+32], S9
	049 Move [X19+40], S8
	050 Move W8, [X31+16]
	051 Move V0, [X31]
	052 Move [X19+56], W8
	053 Move [X19+40], V0
	054 Move W1, 2
	055 Call 0x1C17D6C
	056 Compare X0, 0
	057 JumpIfEqual {90}
	058 Move W8, [X0+24]
	059 Move X19, X0
	060 Compare W8, 0
	061 JumpIfEqual {89}
	062 NotImplemented "Instruction MOVI not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X19+32], S9
	065 Move [X19+40], S8
	066 Move [X19+48], W31
	067 Move [X19+40], D0
	068 Move [X19+52], D0
	069 Move [X19+60], S11
	070 Move [X19+68], S10
	071 Move [X19+68], D0
	072 Move [X19+76], W31
	073 Move [X19+80], D0
	074 Move X0, [X20]
	075 Call 0x1C17F10
	076 Move X1, X19
	077 Move X20, X0
	078 Call AnimationCurve..ctor, X0, X1
	079 Move X0, X20
	080 Move X20, [X31+96]
	081 Move X19, [X31+104]
	082 Move X30, [X31+80]
	083 Move D9, [X31+64]
	084 Move D8, [X31+72]
	085 Move D11, [X31+48]
	086 Move D10, [X31+56]
	087 Add X31, X31, 112
	088 Return X0
	089 Call 0x1C17F28
	090 Call 0x1C17F20

Method: UnityEngine.WrapMode get_preWrapMode()

Disassembly:
	0x03C02554 LDR X8, [X0 + 0xB8]
	0x03C02558 LDR X0, [X8]
	0x03C0255C CBZ X0, 0x3C02648
	0x03C02560 LDR X2, [X24]
	0x03C02564 MOV W1, W20
	0x03C02568 BL 0x30EA8B8
	0x03C0256C MOV X22, X0
	0x03C02570 MOV X0, X1
	0x03C02574 MOV X1, X21
	0x03C02578 MOV X2, X31
	0x03C0257C BL 0x33C0FDC
	0x03C02580 MOV X21, X0
	0x03C02584 CBZ X0, 0x3C025A0
	0x03C02588 ADRP X8, 0x518000
	0x03C0258C LDR X8, [X8 + 0xE30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E2000
	005 Move X1, [X20+3672]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51294208
	010 Add X0, X0, 1075
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3672], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.WrapMode get_postWrapMode()

Disassembly:
	0x03C02590 LDR X1, [X8]
	0x03C02594 LDR X8, [X21]
	0x03C02598 CMP X8, X1
	0x03C0259C B.NE 0x3C02650
	0x03C025A0 LDR X8, [X23]
	0x03C025A4 LDR X8, [X8 + 0xB8]
	0x03C025A8 LDR X0, [X8]
	0x03C025AC CBZ X0, 0x3C0264C
	0x03C025B0 ADRP X8, 0x55C000
	0x03C025B4 LDR X8, [X8 + 0xB00]
	0x03C025B8 LDR X4, [X8]
	0x03C025BC MOV W1, W20
	0x03C025C0 MOV X2, X22
	0x03C025C4 MOV X3, X21
	0x03C025C8 BL 0x30EA910

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E2000
	005 Move X1, [X20+3680]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51236864
	010 Add X0, X0, 2643
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3680], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor(UnityEngine.Keyframe[] keys)

Disassembly:
	0x03C023D4 MOV X0, X19
	0x03C023D8 LDP X20, X19, [X31 + 0x10]
	0x03C023DC LDP X30, X21, [X31], #0x20
	0x03C023E0 B 0x3C023E4
	0x03C023E4 STR X30, [X31 - 0x40]!
	0x03C023E8 STP X24, X23, [X31 + 0x10]
	0x03C023EC STP X22, X21, [X31 + 0x20]
	0x03C023F0 STP X20, X19, [X31 + 0x30]
	0x03C023F4 ADRP X19, 0x7E2000
	0x03C023F8 ADRP X23, 0x55C000
	0x03C023FC LDRB W8, [X19 + 0x2E2]
	0x03C02400 LDR X23, [X23 + 0xAE0]
	0x03C02404 MOV X21, X0
	0x03C02408 TBNZ X8, 0x0, 0x3C0245C
	0x03C0240C ADRP X0, 0x55C000
	0x03C02410 LDR X0, [X0 + 0xAE0]
	0x03C02414 BL 0x1C16CF4
	0x03C02418 ADRP X0, 0x55C000
	0x03C0241C LDR X0, [X0 + 0xB08]
	0x03C02420 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X0
	008 Call Object..ctor, X0
	009 Move X21, 0x7E2000
	010 Move X8, [X21+3568]
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51294208
	014 Add X0, X0, 969
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X21+3568], X0
	018 Move X0, X20
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move [X19+16], X0
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C025CC CBNZ X21, 0x3C02604
	0x03C025D0 LDR X0, [X23]
	0x03C025D4 LDR W8, [X0 + 0xE0]
	0x03C025D8 CBNZ W8, 0x3C025E4
	0x03C025DC BL 0x1C16DFC
	0x03C025E0 LDR X0, [X23]
	0x03C025E4 LDR X8, [X0 + 0xB8]
	0x03C025E8 LDR X0, [X8]
	0x03C025EC CBZ X0, 0x3C02658
	0x03C025F0 ADRP X8, 0x55C000
	0x03C025F4 LDR X8, [X8 + 0xB08]
	0x03C025F8 LDR X2, [X8]
	0x03C025FC MOV W1, W20
	0x03C02600 BL 0x30EC708
	0x03C02604 MOV X21, X31
	0x03C02608 LDRB W8, [X31 + 0xC]
	0x03C0260C CBZ W8, 0x3C0261C
	0x03C02610 MOV X0, X19
	0x03C02614 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call Object..ctor, X0
	007 Move X20, 0x7E2000
	008 Move X8, [X20+3568]
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51294208
	012 Add X0, X0, 969
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X20+3568], X0
	016 Move X0, X31
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move [X19+16], X0
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return 

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x03C02618 BL 0x33E14E4
	0x03C0261C CBNZ X21, 0x3C02640
	0x03C02620 LDP X20, X19, [X31 + 0x30]
	0x03C02624 LDP X22, X21, [X31 + 0x20]
	0x03C02628 LDP X24, X23, [X31 + 0x10]
	0x03C0262C LDR X30, [X31], #0x40
	0x03C02630 RET
	0x03C02634 BL 0x1C16F20
	0x03C02638 BL 0x1C16F20
	0x03C0263C BL 0x1C16F20
	0x03C02640 MOV X0, X21
	0x03C02644 BL 0x1C16F18
	0x03C02648 BL 0x1C16F20
	0x03C0264C BL 0x1C16F20
	0x03C02650 MOV X0, X21
	0x03C02654 BL 0x1C171E0
	0x03C02658 BL 0x1C16F20
	0x03C0265C B 0x3C02690
	0x03C02660 B 0x3C02690
	0x03C02664 B 0x3C02690
	0x03C02668 B 0x3C02690
	0x03C0266C B 0x3C02690
	0x03C02670 B 0x3C02690
	0x03C02674 B 0x3C02690
	0x03C02678 B 0x3C02690
	0x03C0267C B 0x3C02690
	0x03C02680 B 0x3C02690
	0x03C02684 B 0x3C02690
	0x03C02688 B 0x3C02690
	0x03C0268C B 0x3C02690
	0x03C02690 MOV X20, X0
	0x03C02694 CMP W1, 0x1
	0x03C02698 B.NE 0x3C026B0
	0x03C0269C MOV X0, X20
	0x03C026A0 BL 0x3EB1AD0
	0x03C026A4 LDR X21, [X0]
	0x03C026A8 BL 0x3EB1AE0
	0x03C026AC B 0x3C02608
	0x03C026B0 MOV X21, X31
	0x03C026B4 B 0x3C026BC
	0x03C026B8 MOV X20, X0
	0x03C026BC LDRB W8, [X31 + 0xC]
	0x03C026C0 CBZ W8, 0x3C026D0
	0x03C026C4 MOV X0, X19
	0x03C026C8 MOV X1, X31
	0x03C026CC BL 0x33E14E4
	0x03C026D0 CBNZ X21, 0x3C026DC
	0x03C026D4 MOV X0, X20
	0x03C026D8 BL 0x1D2C690
	0x03C026DC MOV X0, X21
	0x03C026E0 BL 0x1C16F18
	0x03C026E4 BL 0x1990590
	0x03C026E8 STP X30, X25, [X31 - 0x40]!
	0x03C026EC STP X24, X23, [X31 + 0x10]
	0x03C026F0 STP X22, X21, [X31 + 0x20]
	0x03C026F4 STP X20, X19, [X31 + 0x30]
	0x03C026F8 ADRP X20, 0x7E1000
	0x03C026FC ADRP X24, 0x4F1000
	0x03C02700 LDRB W8, [X20 + 0xF07]
	0x03C02704 LDR X24, [X24 + 0x970]
	0x03C02708 MOV X19, X0
	0x03C0270C TBNZ X8, 0x0, 0x3C02730
	0x03C02710 ADRP X0, 0x4F1000
	0x03C02714 LDR X0, [X0 + 0xD28]
	0x03C02718 BL 0x1C16CF4
	0x03C0271C ADRP X0, 0x4F1000
	0x03C02720 LDR X0, [X0 + 0x970]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7E2000
	007 Move W8, [X21+3688]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4F9000
	015 Move X0, [X0+1840]
	016 Call 0x1C17CF4
	017 Move X0, 0x4F2000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3688], W8
	022 Compare X19, 0
	023 JumpIfEqual {67}
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Move X1, X31
	027 Call "il2cpp_vm_object_is_inst", X0
	028 Move X21, X0
	029 Move X0, X20
	030 Move X1, X31
	031 Call "il2cpp_vm_object_is_inst", X0
	032 Move X8, 0x4F2000
	033 Move X8, [X8+1728]
	034 Move X22, X0
	035 Move X8, [X8]
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X22
	043 Move X2, X31
	044 Call Type.op_Equality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {67}
	049 Move X9, 0x4F9000
	050 Move X9, [X9+1840]
	051 Move X8, [X19]
	052 Move X1, [X9]
	053 Move W10, [X8+304]
	054 Move W9, [X1+304]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X8+200]
	057 Add X8, X8, X9
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, X20
	061 Move X1, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move W0, W31
	068 Move W0, 1
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return X0
	075 Move X0, X19
	076 Call 0x1C181E0

Method: System.Boolean Equals(UnityEngine.AnimationCurve other)

Disassembly:
	0x03C02724 BL 0x1C16CF4
	0x03C02728 MOVZ W8, 0x1
	0x03C0272C STRB W8, [X20 + 0xF07]
	0x03C02730 LDR X0, [X24]
	0x03C02734 LDR W8, [X0 + 0xE0]
	0x03C02738 CBNZ W8, 0x3C02744
	0x03C0273C BL 0x1C16DFC
	0x03C02740 LDR X0, [X24]
	0x03C02744 LDR X8, [X0 + 0xB8]
	0x03C02748 ADRP X25, 0x4F1000
	0x03C0274C LDR X20, [X8 + 0x20]
	0x03C02750 LDR X25, [X25 + 0xD28]
	0x03C02754 MOV X0, X20
	0x03C02758 MOV X1, X19
	0x03C0275C MOV X2, X31
	0x03C02760 BL 0x33C0DE4
	0x03C02764 CBZ X0, 0x3C02784
	0x03C02768 LDR X23, [X25]
	0x03C0276C MOV X22, X0
	0x03C02770 MOV X1, X23
	0x03C02774 BL 0x1C16E00
	0x03C02778 MOV X21, X0
	0x03C0277C CBNZ X0, 0x3C02788
	0x03C02780 B 0x3C027D0
	0x03C02784 MOV X21, X31
	0x03C02788 LDR X0, [X24]
	0x03C0278C LDR W8, [X0 + 0xE0]
	0x03C02790 CBNZ W8, 0x3C0279C
	0x03C02794 BL 0x1C16DFC
	0x03C02798 LDR X0, [X24]
	0x03C0279C LDR X8, [X0 + 0xB8]
	0x03C027A0 MOV X1, X21
	0x03C027A4 MOV X2, X20
	0x03C027A8 ADD X0, X8, 0x20
	0x03C027AC BL 0x1C24138
	0x03C027B0 CMP X20, X0
	0x03C027B4 MOV X20, X0
	0x03C027B8 B.NE 0x3C02754
	0x03C027BC LDP X20, X19, [X31 + 0x30]
	0x03C027C0 LDP X22, X21, [X31 + 0x20]
	0x03C027C4 LDP X24, X23, [X31 + 0x10]
	0x03C027C8 LDP X30, X25, [X31], #0x40
	0x03C027CC RET
	0x03C027D0 MOV X0, X22
	0x03C027D4 MOV X1, X23
	0x03C027D8 BL 0x1C171E0
	0x03C027DC STP X30, X25, [X31 - 0x40]!
	0x03C027E0 STP X24, X23, [X31 + 0x10]
	0x03C027E4 STP X22, X21, [X31 + 0x20]
	0x03C027E8 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7E2000
	007 Move W8, [X21+3689]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x51B000
	015 Move X0, [X0+3872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3689], W8
	019 Compare X20, 0
	020 JumpIfEqual {39}
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X9, 0x51B000
	023 Move X8, [X20+16]
	024 Move X9, [X9+3872]
	025 Add X1, X31, 8
	026 Add X21, X19, 16
	027 Move [X31+8], X8
	028 Move X0, [X9]
	029 Call 0x1C17E04
	030 Move X1, X0
	031 Move X0, X21
	032 Move X2, X31
	033 Call IntPtr.Equals, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {40}
	038 Move W0, 1
	039 Move W0, W31
	040 Move X21, 0x7E2000
	041 Move X8, [X21+3576]
	042 Move X20, [X20+16]
	043 Compare X8, 0
	044 JumpIfNotEqual {50}
	045 Move X0, -51417088
	046 Add X0, X0, 3433
	047 Call 0x1C17CB8
	048 Move X8, X0
	049 Move [X21+3576], X0
	050 Move X0, X19
	051 Move X1, X20
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 And W0, W0, 1
	058 Add X31, X31, 48
	059 Return X0

Method: System.Void CopyFrom(UnityEngine.AnimationCurve other)

Disassembly:
	0x03C027EC ADRP X20, 0x7E1000
	0x03C027F0 ADRP X24, 0x4F1000
	0x03C027F4 LDRB W8, [X20 + 0xF08]
	0x03C027F8 LDR X24, [X24 + 0x970]
	0x03C027FC MOV X19, X0
	0x03C02800 TBNZ X8, 0x0, 0x3C02824
	0x03C02804 ADRP X0, 0x4F1000
	0x03C02808 LDR X0, [X0 + 0xD28]
	0x03C0280C BL 0x1C16CF4
	0x03C02810 ADRP X0, 0x4F1000
	0x03C02814 LDR X0, [X0 + 0x970]
	0x03C02818 BL 0x1C16CF4
	0x03C0281C MOVZ W8, 0x1
	0x03C02820 STRB W8, [X20 + 0xF08]
	0x03C02824 LDR X0, [X24]
	0x03C02828 LDR W8, [X0 + 0xE0]
	0x03C0282C CBNZ W8, 0x3C02838
	0x03C02830 BL 0x1C16DFC
	0x03C02834 LDR X0, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {25}
	007 Move X21, 0x7E2000
	008 Move X2, [X21+3584]
	009 Move X20, [X1+16]
	010 Move X19, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51245056
	014 Add X0, X0, 3107
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+3584], X0
	018 Move X0, X19
	019 Move X1, X20
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 CallNoReturn X2
	025 Call 0x1C17F20

Method: System.Int32 AddKey_Internal_Injected(ref UnityEngine.Keyframe key)

Disassembly:
	0x03C01F04 STR X0, [X8 + 0x10]
	0x03C01F08 LDP X20, X19, [X31 + 0x10]
	0x03C01F0C LDP X30, X21, [X31], #0x20
	0x03C01F10 RET
	0x03C01F14 STP X30, X23, [X31 - 0x30]!
	0x03C01F18 STP X22, X21, [X31 + 0x10]
	0x03C01F1C STP X20, X19, [X31 + 0x20]
	0x03C01F20 ADRP X23, 0x7E2000
	0x03C01F24 LDRB W8, [X23 + 0xF04]
	0x03C01F28 MOV W22, W3
	0x03C01F2C MOV W19, W2
	0x03C01F30 MOV X20, X1
	0x03C01F34 MOV X21, X0
	0x03C01F38 TBNZ X8, 0x0, 0x3C01F50
	0x03C01F3C ADRP X0, 0x4F2000
	0x03C01F40 LDR X0, [X0 + 0x970]
	0x03C01F44 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E3000
	006 Move X2, [X21+3696]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51257344
	012 Add X0, X0, 1810
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3696], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 MoveKey_Injected(System.Int32 index, ref UnityEngine.Keyframe key)

Disassembly:
	0x03C01F9C LDR W8, [X0 + 0xE0]
	0x03C01FA0 CBNZ W8, 0x3C01FAC
	0x03C01FA4 BL 0x1C16DFC
	0x03C01FA8 LDR X0, [X23]
	0x03C01FAC LDR X8, [X0 + 0xB8]
	0x03C01FB0 LDR X8, [X8 + 0x18]
	0x03C01FB4 CBZ X8, 0x3C01FE0
	0x03C01FB8 LDR X5, [X8 + 0x18]
	0x03C01FBC LDR X0, [X8 + 0x40]
	0x03C01FC0 LDR X4, [X8 + 0x28]
	0x03C01FC4 MOV X1, X21
	0x03C01FC8 MOV X2, X20
	0x03C01FCC MOV W3, W19
	0x03C01FD0 LDP X20, X19, [X31 + 0x20]
	0x03C01FD4 LDP X22, X21, [X31 + 0x10]
	0x03C01FD8 LDP X30, X23, [X31], #0x30
	0x03C01FDC BR X5
	0x03C01FE0 LDP X20, X19, [X31 + 0x20]
	0x03C01FE4 LDP X22, X21, [X31 + 0x10]
	0x03C01FE8 LDP X30, X23, [X31], #0x30
	0x03C01FEC RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E3000
	007 Move X3, [X22+3704]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51404800
	014 Add X0, X0, 3722
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3704], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void GetKey_Injected(System.Int32 index, out UnityEngine.Keyframe ret)

Disassembly:
	0x03C021B4 ADD W20, W20, 0x1
	0x03C021B8 B 0x3C02118
	0x03C021BC MOV X0, X31
	0x03C021C0 MOV X1, X21
	0x03C021C4 MOV X2, X31
	0x03C021C8 BL 0x33C0DE4
	0x03C021CC MOV X21, X0
	0x03C021D0 CBZ X0, 0x3C021E4
	0x03C021D4 LDR X1, [X24]
	0x03C021D8 LDR X8, [X21]
	0x03C021DC CMP X8, X1
	0x03C021E0 B.NE 0x3C022E8
	0x03C021E4 LDR X0, [X23]
	0x03C021E8 LDR W8, [X0 + 0xE0]
	0x03C021EC CBNZ W8, 0x3C021F8
	0x03C021F0 BL 0x1C16DFC
	0x03C021F4 LDR X0, [X23]
	0x03C021F8 LDR X8, [X0 + 0xB8]
	0x03C021FC LDR X0, [X8]
	0x03C02200 CBZ X0, 0x3C022E4
	0x03C02204 LDR X4, [X25]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E2000
	007 Move X3, [X22+3712]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51335168
	014 Add X0, X0, 3106
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3712], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

