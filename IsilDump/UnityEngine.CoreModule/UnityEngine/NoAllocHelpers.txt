Type: UnityEngine.NoAllocHelpers

Method: System.Void ResizeList(System.Collections.Generic.List`1<T> list, System.Int32 size)

Disassembly:
	0x0222D9F8 CBZ X22, 0x222DA88
	0x0222D9FC LDR X8, [X19 + 0x38]
	0x0222DA00 LDR X1, [X8 + 0x10]
	0x0222DA04 LDRB W8, [X1 + 0x135]
	0x0222DA08 TBNZ X8, 0x0, 0x222DA18
	0x0222DA0C MOV X0, X1
	0x0222DA10 BL 0x1C5C684
	0x0222DA14 MOV X1, X0
	0x0222DA18 LDR X8, [X22]
	0x0222DA1C LDRH W9, [X8 + 0x12E]
	0x0222DA20 CBZ X9, 0x222DA44
	0x0222DA24 LDR X10, [X8 + 0xB0]
	0x0222DA28 ADD X10, X10, 0x8
	0x0222DA2C LDUR X11, [X10 - 0x8]
	0x0222DA30 CMP X11, X1
	0x0222DA34 B.EQ 0x222DA54
	0x0222DA38 SUBS X9, X9, 0x1
	0x0222DA3C ADD X10, X10, 0x10
	0x0222DA40 B.NE 0x222DA2C
	0x0222DA44 MOV X0, X22
	0x0222DA48 MOV W2, W31
	0x0222DA4C BL 0x1C5C788
	0x0222DA50 B 0x222DA60
	0x0222DA54 LDRSW X9, [X10]
	0x0222DA58 ADD X8, X8, X9, 0x4, LSL
	0x0222DA5C ADD X0, X8, 0x138
	0x0222DA60 LDP X8, X2, [X0]
	0x0222DA64 MOV X0, X22
	0x0222DA68 MOV X1, X23
	0x0222DA6C BLR X8
	0x0222DA70 STR X0, [X20 + 0x10]
	0x0222DA74 LDP X20, X19, [X31 + 0x30]
	0x0222DA78 LDP X22, X21, [X31 + 0x20]
	0x0222DA7C LDP X24, X23, [X31 + 0x10]
	0x0222DA80 LDR X30, [X31], #0x40
	0x0222DA84 RET
	0x0222DA88 BL 0x1C16F20
	0x0222DA8C ADRP X0, 0x1ECB000
	0x0222DA90 LDR X0, [X0 + 0x528]
	0x0222DA94 BL 0x1C16D08
	0x0222DA98 BL 0x1C16F10
	0x0222DA9C MOV X20, X0
	0x0222DAA0 ADRP X0, 0x1ED1000
	0x0222DAA4 LDR X0, [X0 + 0x580]
	0x0222DAA8 B 0x222DAC8
	0x0222DAAC ADRP X0, 0x1ECB000
	0x0222DAB0 LDR X0, [X0 + 0x528]
	0x0222DAB4 BL 0x1C16D08
	0x0222DAB8 BL 0x1C16F10
	0x0222DABC MOV X20, X0
	0x0222DAC0 ADRP X0, 0x1EEE000
	0x0222DAC4 LDR X0, [X0 + 0xBF8]
	0x0222DAC8 BL 0x1C16D08
	0x0222DACC MOV X1, X0
	0x0222DAD0 MOV X0, X20
	0x0222DAD4 MOV X2, X31
	0x0222DAD8 BL 0x330E100
	0x0222DADC MOV X0, X20
	0x0222DAE0 MOV X1, X19
	0x0222DAE4 BL 0x1C16DEC
	0x0222DAE8 STP X30, X21, [X31 - 0x20]!
	0x0222DAEC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X2
	007 Move W20, W1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {57}
	015 Move TEMP, X20
	016 And TEMP, TEMP, -2147483648
	017 Compare TEMP, -2147483648
	018 JumpIfEqual {40}
	019 Move X8, [X19+56]
	020 Move X0, X21
	021 Move X1, [X8+8]
	022 Call List`1<Object>.get_Capacity, X0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X21+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Move W1, W20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X0, X21
	035 Move X2, X31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call NoAllocHelpers.Internal_ResizeList, X0, X1
	039 Return 
	040 Move X0, 0x1ECF000
	041 Move X0, [X0+1400]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X20, X0
	045 Move X0, 0x1EF0000
	046 Move X0, [X0+440]
	047 Call 0x1C17D08
	048 Move X21, X0
	049 Move X0, 0x1EF0000
	050 Move X0, [X0+448]
	051 Call 0x1C17D08
	052 Move X2, X0
	053 Move X0, X20
	054 Move X1, X21
	055 Move X3, X31
	056 Call ArgumentException..ctor, X0, X1, X2
	057 Move X0, 0x1ECC000
	058 Move X0, [X0+1320]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X20, X0
	062 Move X0, 0x1EF0000
	063 Move X0, [X0+448]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X20
	067 Move X2, X31
	068 Call ArgumentNullException..ctor, X0, X1
	069 Move X0, X20
	070 Move X1, X19
	071 Call 0x1C17DEC

Method: System.Void EnsureListElemCount(System.Collections.Generic.List`1<T> list, System.Int32 count)

Disassembly:
	0x0222D754 MOV X1, X20
	0x0222D758 MOV X2, X31
	0x0222D75C BL 0x3C38DE0
	0x0222D760 LDR X8, [X19 + 0x38]
	0x0222D764 MOV X20, X0
	0x0222D768 LDR X19, [X8]
	0x0222D76C LDRB W8, [X19 + 0x135]
	0x0222D770 TBNZ X8, 0x0, 0x222D780
	0x0222D774 MOV X0, X19
	0x0222D778 BL 0x1C5C684
	0x0222D77C MOV X19, X0
	0x0222D780 CBZ X20, 0x222D7A0
	0x0222D784 MOV X0, X20
	0x0222D788 MOV X1, X19
	0x0222D78C BL 0x1C16E00
	0x0222D790 CBNZ X0, 0x222D7A4
	0x0222D794 MOV X0, X20
	0x0222D798 MOV X1, X19
	0x0222D79C BL 0x1C171E0
	0x0222D7A0 MOV X0, X31
	0x0222D7A4 LDP X20, X19, [X31 + 0x50]
	0x0222D7A8 LDP X30, X21, [X31 + 0x40]
	0x0222D7AC LDP D9, D8, [X31 + 0x30]
	0x0222D7B0 LDP D11, D10, [X31 + 0x20]
	0x0222D7B4 LDP D13, D12, [X31 + 0x10]
	0x0222D7B8 LDR V14, [X31], #0x60
	0x0222D7BC RET
	0x0222D7C0 STR X30, [X31 - 0x30]!
	0x0222D7C4 STP X22, X21, [X31 + 0x10]
	0x0222D7C8 STP X20, X19, [X31 + 0x20]
	0x0222D7CC LDR X8, [X2 + 0x38]
	0x0222D7D0 MOV X20, X2
	0x0222D7D4 MOV X22, X1
	0x0222D7D8 MOV X19, X0
	0x0222D7DC CBNZ X8, 0x222D7E8
	0x0222D7E0 MOV X0, X20
	0x0222D7E4 BL 0x1C5C6E0
	0x0222D7E8 CBZ X19, 0x222D8A4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X20, X2
	007 Move W19, W1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X20
	012 Call 0x1C5D6E0
	013 Compare X21, 0
	014 JumpIfEqual {45}
	015 Move W2, [X21+24]
	016 Move W8, [X21+28]
	017 Add W8, W8, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move [X21+24], W31
	020 Move [X21+28], W8
	021 Move X0, [X21+16]
	022 Move W1, W31
	023 Move X3, X31
	024 Call Array.Clear, X0, X1, X2
	025 Move X8, [X20+56]
	026 Move X0, X21
	027 Move X1, [X8+16]
	028 Call List`1<Object>.get_Capacity, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X20+56]
	031 Move X0, X21
	032 Move W1, W19
	033 Move X2, [X8+24]
	034 Call List`1<Object>.set_Capacity, X0, X1
	035 Move X8, [X20+56]
	036 Move W1, W19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X0, X21
	040 Move X2, [X8+32]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call 0x222D9F8, X0, X1
	044 Return 
	045 Call 0x1C17F20

Method: System.Int32 SafeLength(System.Array values)

Disassembly:
	0x03C37C34 ADRP X24, 0x7AE000
	0x03C37C38 ADRP X23, 0x4BC000
	0x03C37C3C LDRB W8, [X24 + 0x4CF]
	0x03C37C40 LDR X23, [X23 + 0x7D0]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move X1, X31
	004 Call Array.get_Length, X0
	005 Return X0
	006 Return X0

Method: System.Int32 SafeLength(System.Collections.Generic.List`1<T> values)

Disassembly:
	0x0222DCF4 LDR X8, [X3]
	0x0222DCF8 BLR X8
	0x0222DCFC MOV X0, X19
	0x0222DD00 LDP X20, X19, [X31 + 0x10]
	0x0222DD04 LDP X30, X21, [X31], #0x20
	0x0222DD08 RET
	0x0222DD0C ADRP X0, 0x1ECB000
	0x0222DD10 LDR X0, [X0 + 0x528]
	0x0222DD14 BL 0x1C16D08
	0x0222DD18 BL 0x1C16F10
	0x0222DD1C MOV X20, X0
	0x0222DD20 ADRP X0, 0x1ED1000
	0x0222DD24 LDR X0, [X0 + 0x580]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+56]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfEqual {10}
	007 Compare X19, 0
	008 JumpIfEqual {14}
	009 Move W0, [X19+24]
	010 Move X0, X1
	011 Call 0x1C5D6E0
	012 Compare X19, 0
	013 JumpIfNotEqual {9}
	014 Move W0, W31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: T[] ExtractArrayFromListT(System.Collections.Generic.List`1<T> list)

Disassembly:
	0x0222D900 STR X30, [X31 - 0x40]!
	0x0222D904 STP X24, X23, [X31 + 0x10]
	0x0222D908 STP X22, X21, [X31 + 0x20]
	0x0222D90C STP X20, X19, [X31 + 0x30]
	0x0222D910 LDR X8, [X2 + 0x38]
	0x0222D914 MOV X19, X2
	0x0222D918 MOV X21, X1
	0x0222D91C MOV X22, X0
	0x0222D920 CBNZ X8, 0x222D944
	0x0222D924 ADRP X0, 0x1EC7000
	0x0222D928 LDR X0, [X0 + 0xE70]
	0x0222D92C BL 0x1C16CF4
	0x0222D930 LDR X8, [X19 + 0x38]
	0x0222D934 CBNZ X8, 0x222D944
	0x0222D938 MOV X0, X19
	0x0222D93C BL 0x1C5C6E0
	0x0222D940 LDR X8, [X19 + 0x38]
	0x0222D944 LDR X0, [X8]
	0x0222D948 LDRB W8, [X0 + 0x135]
	0x0222D94C TBNZ X8, 0x0, 0x222D954
	0x0222D950 BL 0x1C5C684
	0x0222D954 BL 0x1C16F10
	0x0222D958 LDR X8, [X19 + 0x38]
	0x0222D95C MOV X20, X0
	0x0222D960 LDR X1, [X8 + 0x8]
	0x0222D964 LDR X8, [X1]
	0x0222D968 BLR X8
	0x0222D96C CBZ X22, 0x222DA8C
	0x0222D970 CBZ X21, 0x222DAAC
	0x0222D974 CBZ X20, 0x222DA88
	0x0222D978 STR X31, [X20 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Move X0, X20
	012 Move X1, X31
	013 Call NoAllocHelpers.ExtractArrayFromList, X0
	014 Move X8, [X19+56]
	015 Move X20, X0
	016 Move X19, [X8+8]
	017 Move W8, [X19+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X19
	023 Call 0x1C5D684
	024 Move X19, X0
	025 Compare X20, 0
	026 JumpIfEqual {35}
	027 Move X0, X20
	028 Move X1, X19
	029 Call 0x1C17E00
	030 Compare X0, 0
	031 JumpIfNotEqual {36}
	032 Move X0, X20
	033 Move X1, X19
	034 Call 0x1C181E0
	035 Move X0, X31
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0

Method: System.Void Internal_ResizeList(System.Object list, System.Int32 size)

Disassembly:
	0x03C37C44 MOV X19, X3
	0x03C37C48 MOV X20, X2
	0x03C37C4C MOV X21, X1
	0x03C37C50 MOV X22, X0
	0x03C37C54 TBNZ X8, 0x0, 0x3C37C6C
	0x03C37C58 ADRP X0, 0x4BC000
	0x03C37C5C LDR X0, [X0 + 0x7D0]
	0x03C37C60 BL 0x1C16CF4
	0x03C37C64 MOVZ W8, 0x1
	0x03C37C68 STRB W8, [X24 + 0x4CF]
	0x03C37C6C LDR X0, [X23]
	0x03C37C70 LDR W8, [X0 + 0xE0]
	0x03C37C74 CBNZ W8, 0x3C37C7C
	0x03C37C78 BL 0x1C16DFC
	0x03C37C7C MOV X0, X22
	0x03C37C80 MOV X1, X21
	0x03C37C84 MOV X2, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AF000
	006 Move X2, [X21+1176]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51556352
	012 Add X0, X0, 1334
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1176], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Array ExtractArrayFromList(System.Object list)

Disassembly:
	0x03C37C88 MOV X3, X19
	0x03C37C8C LDP X20, X19, [X31 + 0x30]
	0x03C37C90 LDP X22, X21, [X31 + 0x20]
	0x03C37C94 LDP X24, X23, [X31 + 0x10]
	0x03C37C98 MOV X4, X31
	0x03C37C9C LDR X30, [X31], #0x40
	0x03C37CA0 B 0x33B2CD8
	0x03C37CA4 STR X30, [X31 - 0x20]!
	0x03C37CA8 STP X20, X19, [X31 + 0x10]
	0x03C37CAC ADRP X20, 0x7AE000
	0x03C37CB0 LDR X1, [X20 + 0x4D0]
	0x03C37CB4 MOV X19, X0
	0x03C37CB8 CBNZ X1, 0x3C37CD0
	0x03C37CBC ADRP X0, 0xFFFFFFFFFCEC0000
	0x03C37CC0 ADD X0, X0, 0x324

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AF000
	005 Move X1, [X20+1184]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51552256
	010 Add X0, X0, 3982
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1184], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

