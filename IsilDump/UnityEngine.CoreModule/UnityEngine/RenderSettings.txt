Type: UnityEngine.RenderSettings

Method: System.Boolean get_fog()

Disassembly:
	0x03C147C4 LDR X8, [X20 + 0x898]
	0x03C147C8 CBNZ X8, 0x3C147E0
	0x03C147CC ADRP X0, 0xFFFFFFFFFCF16000
	0x03C147D0 ADD X0, X0, 0x6A7
	0x03C147D4 BL 0x1C16CB8
	0x03C147D8 MOV X8, X0
	0x03C147DC STR X0, [X20 + 0x898]
	0x03C147E0 MOVZ W1, 0x100
	0x03C147E4 MOV X0, X19
	0x03C147E8 BLR X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D1000
	004 Move X0, [X19+1880]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51376128
	008 Add X0, X0, 2300
	009 Call 0x1C17CB8
	010 Move [X19+1880], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Color get_fogColor()

Disassembly:
	0x03C147EC TBNZ X0, 0x1F, 0x3C14804
	0x03C147F0 MOV W1, W0
	0x03C147F4 MOV X0, X19
	0x03C147F8 LDP X20, X19, [X31 + 0x10]
	0x03C147FC LDR X30, [X31], #0x20
	0x03C14800 B 0x3C15654
	0x03C14804 ADRP X8, 0x507000
	0x03C14808 LDR X8, [X8 + 0x2E0]
	0x03C1480C MOV X0, X19
	0x03C14810 LDP X20, X19, [X31 + 0x10]
	0x03C14814 LDR X1, [X8]
	0x03C14818 LDR X30, [X31], #0x20
	0x03C1481C B 0x3C14868
	0x03C14820 STP X30, X21, [X31 - 0x20]!
	0x03C14824 STP X20, X19, [X31 + 0x10]
	0x03C14828 ADRP X21, 0x7D0000
	0x03C1482C LDR X2, [X21 + 0x898]
	0x03C14830 MOV W19, W1

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D1000
	005 Move X8, [X19+1936]
	006 Move [X31], X31
	007 Move [X31+8], X31
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51318784
	011 Add X0, X0, 3490
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X19+1936], X0
	015 Add X0, X31, 0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move S0, [X31]
	018 Move S1, [X31+4]
	019 Move S2, [X31+8]
	020 Move S3, [X31+12]
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Add X31, X31, 32
	024 Return X0

Method: System.Void set_fogColor(UnityEngine.Color value)

Disassembly:
	0x03C14870 ADRP X21, 0x7D0000
	0x03C14874 LDR X8, [X21 + 0x810]
	0x03C14878 MOV X20, X1
	0x03C1487C MOV X19, X0
	0x03C14880 CBNZ X8, 0x3C14898
	0x03C14884 ADRP X0, 0xFFFFFFFFFCF08000
	0x03C14888 ADD X0, X0, 0xE80
	0x03C1488C BL 0x1C16CB8
	0x03C14890 MOV X8, X0
	0x03C14894 STR X0, [X21 + 0x810]
	0x03C14898 MOV X0, X20
	0x03C1489C BLR X8
	0x03C148A0 MOV W1, W0
	0x03C148A4 MOV X0, X19
	0x03C148A8 LDP X20, X19, [X31 + 0x10]
	0x03C148AC LDP X30, X21, [X31], #0x20
	0x03C148B0 B 0x3C15654

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D1000
	005 Move X8, [X19+1944]
	006 Move [X31], S0
	007 Move [X31+8], S1
	008 Move [X31+8], S2
	009 Move [X31+16], S3
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51302400
	013 Add X0, X0, 3054
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X19+1944], X0
	017 Add X0, X31, 0
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Add X31, X31, 32
	022 Return 

Method: System.Single get_fogDensity()

Disassembly:
	0x03C148F0 MOVZ W8, 0x1
	0x03C148F4 STRB W8, [X20 + 0x891]
	0x03C148F8 ADRP X20, 0x7D0000
	0x03C148FC LDR X8, [X20 + 0x898]
	0x03C14900 CBNZ X8, 0x3C14918
	0x03C14904 ADRP X0, 0xFFFFFFFFFCF16000
	0x03C14908 ADD X0, X0, 0x6A7
	0x03C1490C BL 0x1C16CB8
	0x03C14910 MOV X8, X0
	0x03C14914 STR X0, [X20 + 0x898]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D1000
	004 Move X0, [X19+1888]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51359744
	008 Add X0, X0, 1955
	009 Call 0x1C17CB8
	010 Move [X19+1888], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_fogDensity(System.Single value)

Disassembly:
	0x03C14918 MOVZ W1, 0x100
	0x03C1491C MOV X0, X19
	0x03C14920 BLR X8
	0x03C14924 TBNZ X0, 0x1F, 0x3C14954
	0x03C14928 MOV W1, W0
	0x03C1492C MOV X0, X19
	0x03C14930 MOV V2.16B, V9.16B
	0x03C14934 MOV V3.16B, V8.16B
	0x03C14938 LDP X20, X19, [X31 + 0x30]
	0x03C1493C LDR X30, [X31 + 0x20]
	0x03C14940 LDP D9, D8, [X31 + 0x10]
	0x03C14944 MOV V0.16B, V11.16B
	0x03C14948 MOV V1.16B, V10.16B
	0x03C1494C LDP D11, D10, [X31], #0x40

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D1000
	005 Move X0, [X19+1896]
	006 Move V8, V0
	007 Compare X0, 0
	008 JumpIfNotEqual {13}
	009 Move X0, -51359744
	010 Add X0, X0, 2000
	011 Call 0x1C17CB8
	012 Move [X19+1896], X0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Move V0, V8
	016 Move V8, [X31+32]
	017 CallNoReturn X0

Method: UnityEngine.Color get_ambientSkyColor()

Disassembly:
	0x03C14950 B 0x3C153F8
	0x03C14954 ADRP X8, 0x507000
	0x03C14958 LDR X8, [X8 + 0x2E0]
	0x03C1495C MOV X0, X19
	0x03C14960 MOV V2.16B, V9.16B
	0x03C14964 MOV V3.16B, V8.16B
	0x03C14968 LDR X1, [X8]
	0x03C1496C LDP X20, X19, [X31 + 0x30]
	0x03C14970 LDR X30, [X31 + 0x20]
	0x03C14974 LDP D9, D8, [X31 + 0x10]
	0x03C14978 MOV V0.16B, V11.16B
	0x03C1497C MOV V1.16B, V10.16B
	0x03C14980 LDP D11, D10, [X31], #0x40
	0x03C14984 B 0x3C1498C
	0x03C14988 B 0x3C153F8
	0x03C1498C STP D11, D10, [X31 - 0x40]!
	0x03C14990 STP D9, D8, [X31 + 0x10]
	0x03C14994 STP X30, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D1000
	005 Move X8, [X19+1952]
	006 Move [X31], X31
	007 Move [X31+8], X31
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51470336
	011 Add X0, X0, 738
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X19+1952], X0
	015 Add X0, X31, 0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move S0, [X31]
	018 Move S1, [X31+4]
	019 Move S2, [X31+8]
	020 Move S3, [X31+12]
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Add X31, X31, 32
	024 Return X0

Method: UnityEngine.Color get_ambientEquatorColor()

Disassembly:
	0x03C149D4 MOV X0, X19
	0x03C149D8 BLR X8
	0x03C149DC MOV W1, W0
	0x03C149E0 MOV X0, X20
	0x03C149E4 MOV V2.16B, V9.16B
	0x03C149E8 MOV V3.16B, V8.16B
	0x03C149EC LDP X20, X19, [X31 + 0x30]
	0x03C149F0 LDP X30, X21, [X31 + 0x20]
	0x03C149F4 LDP D9, D8, [X31 + 0x10]
	0x03C149F8 MOV V0.16B, V11.16B
	0x03C149FC MOV V1.16B, V10.16B
	0x03C14A00 LDP D11, D10, [X31], #0x40
	0x03C14A04 B 0x3C153F8
	0x03C14A08 STP X30, X21, [X31 - 0x20]!
	0x03C14A0C STP X20, X19, [X31 + 0x10]
	0x03C14A10 ADRP X20, 0x7D0000
	0x03C14A14 LDRB W8, [X20 + 0x892]
	0x03C14A18 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D1000
	005 Move X8, [X19+1960]
	006 Move [X31], X31
	007 Move [X31+8], X31
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51478528
	011 Add X0, X0, 209
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X19+1960], X0
	015 Add X0, X31, 0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move S0, [X31]
	018 Move S1, [X31+4]
	019 Move S2, [X31+8]
	020 Move S3, [X31+12]
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Add X31, X31, 32
	024 Return X0

Method: UnityEngine.Color get_ambientGroundColor()

Disassembly:
	0x03C14A58 MOV X0, X19
	0x03C14A5C BLR X8
	0x03C14A60 TBNZ X0, 0x1F, 0x3C14A9C
	0x03C14A64 ADRP X21, 0x7D0000
	0x03C14A68 LDR X2, [X21 + 0x960]
	0x03C14A6C MOV W20, W0
	0x03C14A70 CBNZ X2, 0x3C14A88
	0x03C14A74 ADRP X0, 0xFFFFFFFFFCF16000
	0x03C14A78 ADD X0, X0, 0x70A
	0x03C14A7C BL 0x1C16CB8
	0x03C14A80 MOV X2, X0
	0x03C14A84 STR X0, [X21 + 0x960]
	0x03C14A88 MOV X0, X19
	0x03C14A8C MOV W1, W20
	0x03C14A90 LDP X20, X19, [X31 + 0x10]
	0x03C14A94 LDP X30, X21, [X31], #0x20
	0x03C14A98 BR X2
	0x03C14A9C ADRP X8, 0x539000

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D1000
	005 Move X8, [X19+1968]
	006 Move [X31], X31
	007 Move [X31+8], X31
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51412992
	011 Add X0, X0, 253
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X19+1968], X0
	015 Add X0, X31, 0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move S0, [X31]
	018 Move S1, [X31+4]
	019 Move S2, [X31+8]
	020 Move S3, [X31+12]
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Add X31, X31, 32
	024 Return X0

Method: UnityEngine.Color get_ambientLight()

Disassembly:
	0x03C14ADC BL 0x1C16CB8
	0x03C14AE0 MOV X2, X0
	0x03C14AE4 STR X0, [X21 + 0x960]
	0x03C14AE8 MOV X0, X20
	0x03C14AEC MOV W1, W19
	0x03C14AF0 LDP X20, X19, [X31 + 0x10]
	0x03C14AF4 LDP X30, X21, [X31], #0x20
	0x03C14AF8 BR X2
	0x03C14AFC STP X30, X21, [X31 - 0x20]!
	0x03C14B00 STP X20, X19, [X31 + 0x10]
	0x03C14B04 ADRP X21, 0x7D0000
	0x03C14B08 LDR X8, [X21 + 0x810]
	0x03C14B0C MOV X20, X1
	0x03C14B10 MOV X19, X0
	0x03C14B14 CBNZ X8, 0x3C14B2C
	0x03C14B18 ADRP X0, 0xFFFFFFFFFCF08000
	0x03C14B1C ADD X0, X0, 0xE80
	0x03C14B20 BL 0x1C16CB8

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D1000
	005 Move X8, [X19+1976]
	006 Move [X31], X31
	007 Move [X31+8], X31
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51433472
	011 Add X0, X0, 3831
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X19+1976], X0
	015 Add X0, X31, 0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move S0, [X31]
	018 Move S1, [X31+4]
	019 Move S2, [X31+8]
	020 Move S3, [X31+12]
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Add X31, X31, 32
	024 Return X0

Method: System.Void set_ambientLight(UnityEngine.Color value)

Disassembly:
	0x03C14B60 LDP X20, X19, [X31 + 0x10]
	0x03C14B64 LDP X30, X21, [X31], #0x20
	0x03C14B68 BR X2
	0x03C14B6C STR X30, [X31 - 0x30]!
	0x03C14B70 STP X22, X21, [X31 + 0x10]
	0x03C14B74 STP X20, X19, [X31 + 0x20]
	0x03C14B78 ADRP X21, 0x7D0000
	0x03C14B7C LDRB W8, [X21 + 0x893]
	0x03C14B80 MOV X19, X1
	0x03C14B84 MOV X20, X0
	0x03C14B88 TBNZ X8, 0x0, 0x3C14BA0
	0x03C14B8C ADRP X0, 0x539000
	0x03C14B90 LDR X0, [X0 + 0xB00]
	0x03C14B94 BL 0x1C16CF4
	0x03C14B98 MOVZ W8, 0x1
	0x03C14B9C STRB W8, [X21 + 0x893]
	0x03C14BA0 ADRP X21, 0x7D0000

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D1000
	005 Move X8, [X19+1984]
	006 Move [X31], S0
	007 Move [X31+8], S1
	008 Move [X31+8], S2
	009 Move [X31+16], S3
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51343360
	013 Add X0, X0, 3638
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X19+1984], X0
	017 Add X0, X31, 0
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Add X31, X31, 32
	022 Return 

Method: UnityEngine.Color get_subtractiveShadowColor()

Disassembly:
	0x03C14BE0 ADRP X0, 0xFFFFFFFFFCF0E000
	0x03C14BE4 ADD X0, X0, 0xE54
	0x03C14BE8 BL 0x1C16CB8
	0x03C14BEC MOV X3, X0
	0x03C14BF0 STR X0, [X22 + 0x948]
	0x03C14BF4 MOV X0, X20
	0x03C14BF8 MOV W1, W21
	0x03C14BFC MOV X2, X19
	0x03C14C00 LDP X20, X19, [X31 + 0x20]
	0x03C14C04 LDP X22, X21, [X31 + 0x10]
	0x03C14C08 LDR X30, [X31], #0x30
	0x03C14C0C BR X3
	0x03C14C10 ADRP X8, 0x539000
	0x03C14C14 LDR X8, [X8 + 0xB00]
	0x03C14C18 MOV X0, X20
	0x03C14C1C MOV X2, X19
	0x03C14C20 LDP X20, X19, [X31 + 0x20]
	0x03C14C24 LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D1000
	005 Move X8, [X19+1992]
	006 Move [X31], X31
	007 Move [X31+8], X31
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51335168
	011 Add X0, X0, 2798
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X19+1992], X0
	015 Add X0, X31, 0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move S0, [X31]
	018 Move S1, [X31+4]
	019 Move S2, [X31+8]
	020 Move S3, [X31+12]
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Add X31, X31, 32
	024 Return X0

Method: System.Void set_subtractiveShadowColor(UnityEngine.Color value)

Disassembly:
	0x03C14C64 MOV X3, X0
	0x03C14C68 STR X0, [X22 + 0x948]
	0x03C14C6C MOV X0, X21
	0x03C14C70 MOV W1, W20
	0x03C14C74 MOV X2, X19
	0x03C14C78 LDP X20, X19, [X31 + 0x20]
	0x03C14C7C LDP X22, X21, [X31 + 0x10]
	0x03C14C80 LDR X30, [X31], #0x30
	0x03C14C84 BR X3
	0x03C14C88 STR X30, [X31 - 0x30]!
	0x03C14C8C STP X22, X21, [X31 + 0x10]
	0x03C14C90 STP X20, X19, [X31 + 0x20]
	0x03C14C94 ADRP X22, 0x7D0000
	0x03C14C98 LDR X8, [X22 + 0x810]
	0x03C14C9C MOV X19, X2
	0x03C14CA0 MOV X21, X1
	0x03C14CA4 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D1000
	005 Move X8, [X19+2000]
	006 Move [X31], S0
	007 Move [X31+8], S1
	008 Move [X31+8], S2
	009 Move [X31+16], S3
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51466240
	013 Add X0, X0, 4014
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X19+2000], X0
	017 Add X0, X31, 0
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Add X31, X31, 32
	022 Return 

Method: UnityEngine.Material get_skybox()

Disassembly:
	0x03C14CE4 MOV X3, X0
	0x03C14CE8 STR X0, [X22 + 0x948]
	0x03C14CEC MOV X0, X20
	0x03C14CF0 MOV W1, W21
	0x03C14CF4 MOV X2, X19
	0x03C14CF8 LDP X20, X19, [X31 + 0x20]
	0x03C14CFC LDP X22, X21, [X31 + 0x10]
	0x03C14D00 LDR X30, [X31], #0x30
	0x03C14D04 BR X3
	0x03C14D08 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D1000
	004 Move X0, [X19+1904]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51425280
	008 Add X0, X0, 3987
	009 Call 0x1C17CB8
	010 Move [X19+1904], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_skybox(UnityEngine.Material value)

Disassembly:
	0x03C14D0C STP X20, X19, [X31 + 0x10]
	0x03C14D10 ADRP X21, 0x7D0000
	0x03C14D14 LDR X2, [X21 + 0x8A0]
	0x03C14D18 MOV W19, W1
	0x03C14D1C MOV X20, X0
	0x03C14D20 CBNZ X2, 0x3C14D38
	0x03C14D24 ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C14D28 ADD X0, X0, 0x1F2
	0x03C14D2C BL 0x1C16CB8
	0x03C14D30 MOV X2, X0
	0x03C14D34 STR X0, [X21 + 0x8A0]
	0x03C14D38 MOV X0, X20
	0x03C14D3C MOV W1, W19
	0x03C14D40 LDP X20, X19, [X31 + 0x10]
	0x03C14D44 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+1912]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51531776
	010 Add X0, X0, 3565
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1912], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Light get_sun()

Disassembly:
	0x03C14D48 BR X2
	0x03C14D4C STP X30, X21, [X31 - 0x20]!
	0x03C14D50 STP X20, X19, [X31 + 0x10]
	0x03C14D54 ADRP X21, 0x7D0000
	0x03C14D58 LDR X8, [X21 + 0x810]
	0x03C14D5C MOV X20, X1
	0x03C14D60 MOV X19, X0
	0x03C14D64 CBNZ X8, 0x3C14D7C
	0x03C14D68 ADRP X0, 0xFFFFFFFFFCF08000
	0x03C14D6C ADD X0, X0, 0xE80

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D1000
	004 Move X0, [X19+1920]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51367936
	008 Add X0, X0, 2060
	009 Call 0x1C17CB8
	010 Move [X19+1920], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Rendering.SphericalHarmonicsL2 get_ambientProbe()

Disassembly:
	0x03C14D70 BL 0x1C16CB8
	0x03C14D74 MOV X8, X0
	0x03C14D78 STR X0, [X21 + 0x810]
	0x03C14D7C MOV X0, X20
	0x03C14D80 BLR X8
	0x03C14D84 ADRP X21, 0x7D0000
	0x03C14D88 LDR X2, [X21 + 0x8A0]
	0x03C14D8C MOV W20, W0
	0x03C14D90 CBNZ X2, 0x3C14DA8
	0x03C14D94 ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C14D98 ADD X0, X0, 0x1F2
	0x03C14D9C BL 0x1C16CB8
	0x03C14DA0 MOV X2, X0
	0x03C14DA4 STR X0, [X21 + 0x8A0]
	0x03C14DA8 MOV X0, X19
	0x03C14DAC MOV W1, W20
	0x03C14DB0 LDP X20, X19, [X31 + 0x10]
	0x03C14DB4 LDP X30, X21, [X31], #0x20
	0x03C14DB8 BR X2
	0x03C14DBC STP X30, X21, [X31 - 0x20]!
	0x03C14DC0 STP X20, X19, [X31 + 0x10]
	0x03C14DC4 ADRP X21, 0x7D0000
	0x03C14DC8 LDR X2, [X21 + 0x8A8]
	0x03C14DCC MOV W19, W1
	0x03C14DD0 MOV X20, X0
	0x03C14DD4 CBNZ X2, 0x3C14DEC
	0x03C14DD8 ADRP X0, 0xFFFFFFFFFCEE5000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+128], X20
	004 Move [X31+136], X19
	005 Move X20, 0x7D1000
	006 Move X19, X8
	007 Move X8, [X20+2008]
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move [X31+92], V0
	010 Move [X31+64], V0
	011 Move [X31+72], V0
	012 Move [X31+32], V0
	013 Move [X31+40], V0
	014 Move [X31], V0
	015 Move [X31+8], V0
	016 Compare X8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, -51384320
	019 Add X0, X0, 2717
	020 Call 0x1C17CB8
	021 Move X8, X0
	022 Move [X20+2008], X0
	023 Add X0, X31, 0
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Add X1, X31, 0
	026 Move W2, 108
	027 Move X0, X19
	028 Call 0x3EB2AC0
	029 Move X20, [X31+128]
	030 Move X19, [X31+136]
	031 Move X30, [X31+112]
	032 Add X31, X31, 144
	033 Return X0

Method: System.Single get_reflectionIntensity()

Disassembly:
	0x03C14E18 ADRP X0, 0xFFFFFFFFFCF04000
	0x03C14E1C ADD X0, X0, 0x80A
	0x03C14E20 BL 0x1C16CB8
	0x03C14E24 MOV X1, X0
	0x03C14E28 STR X0, [X20 + 0x8B0]
	0x03C14E2C MOV X0, X19
	0x03C14E30 LDP X20, X19, [X31 + 0x10]
	0x03C14E34 LDR X30, [X31], #0x20
	0x03C14E38 BR X1
	0x03C14E3C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D1000
	004 Move X0, [X19+1928]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51384320
	008 Add X0, X0, 2663
	009 Call 0x1C17CB8
	010 Move [X19+1928], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void get_fogColor_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C14834 MOV X20, X0
	0x03C14838 CBNZ X2, 0x3C14850
	0x03C1483C ADRP X0, 0xFFFFFFFFFCF16000
	0x03C14840 ADD X0, X0, 0x6A7
	0x03C14844 BL 0x1C16CB8
	0x03C14848 MOV X2, X0
	0x03C1484C STR X0, [X21 + 0x898]
	0x03C14850 MOV X0, X20
	0x03C14854 MOV W1, W19
	0x03C14858 LDP X20, X19, [X31 + 0x10]
	0x03C1485C LDP X30, X21, [X31], #0x20
	0x03C14860 BR X2
	0x03C14864 B 0x3C15654
	0x03C14868 STP X30, X21, [X31 - 0x20]!
	0x03C1486C STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+1936]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51318784
	010 Add X0, X0, 3490
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1936], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_fogColor_Injected(ref UnityEngine.Color value)

Disassembly:
	0x03C148B4 STP D11, D10, [X31 - 0x40]!
	0x03C148B8 STP D9, D8, [X31 + 0x10]
	0x03C148BC STR X30, [X31 + 0x20]
	0x03C148C0 STP X20, X19, [X31 + 0x30]
	0x03C148C4 ADRP X20, 0x7D0000
	0x03C148C8 LDRB W8, [X20 + 0x891]
	0x03C148CC MOV V8.16B, V3.16B
	0x03C148D0 MOV V9.16B, V2.16B
	0x03C148D4 MOV V10.16B, V1.16B
	0x03C148D8 MOV V11.16B, V0.16B
	0x03C148DC MOV X19, X0
	0x03C148E0 TBNZ X8, 0x0, 0x3C148F8
	0x03C148E4 ADRP X0, 0x507000
	0x03C148E8 LDR X0, [X0 + 0x2E0]
	0x03C148EC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+1944]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51302400
	010 Add X0, X0, 3054
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1944], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void get_ambientSkyColor_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C14998 STP X20, X19, [X31 + 0x30]
	0x03C1499C ADRP X21, 0x7D0000
	0x03C149A0 LDR X8, [X21 + 0x810]
	0x03C149A4 MOV V8.16B, V3.16B
	0x03C149A8 MOV V9.16B, V2.16B
	0x03C149AC MOV V10.16B, V1.16B
	0x03C149B0 MOV V11.16B, V0.16B
	0x03C149B4 MOV X19, X1
	0x03C149B8 MOV X20, X0
	0x03C149BC CBNZ X8, 0x3C149D4
	0x03C149C0 ADRP X0, 0xFFFFFFFFFCF08000
	0x03C149C4 ADD X0, X0, 0xE80
	0x03C149C8 BL 0x1C16CB8
	0x03C149CC MOV X8, X0
	0x03C149D0 STR X0, [X21 + 0x810]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+1952]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51470336
	010 Add X0, X0, 738
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1952], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void get_ambientEquatorColor_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C14A1C TBNZ X8, 0x0, 0x3C14A34
	0x03C14A20 ADRP X0, 0x539000
	0x03C14A24 LDR X0, [X0 + 0xB00]
	0x03C14A28 BL 0x1C16CF4
	0x03C14A2C MOVZ W8, 0x1
	0x03C14A30 STRB W8, [X20 + 0x892]
	0x03C14A34 ADRP X20, 0x7D0000
	0x03C14A38 LDR X8, [X20 + 0x898]
	0x03C14A3C CBNZ X8, 0x3C14A54
	0x03C14A40 ADRP X0, 0xFFFFFFFFFCF16000
	0x03C14A44 ADD X0, X0, 0x6A7
	0x03C14A48 BL 0x1C16CB8
	0x03C14A4C MOV X8, X0
	0x03C14A50 STR X0, [X20 + 0x898]
	0x03C14A54 MOVZ W1, 0x80

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+1960]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51478528
	010 Add X0, X0, 209
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1960], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void get_ambientGroundColor_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C14AA0 LDR X8, [X8 + 0xB00]
	0x03C14AA4 MOV X0, X19
	0x03C14AA8 LDP X20, X19, [X31 + 0x10]
	0x03C14AAC LDR X1, [X8]
	0x03C14AB0 LDP X30, X21, [X31], #0x20
	0x03C14AB4 B 0x3C14AFC
	0x03C14AB8 STP X30, X21, [X31 - 0x20]!
	0x03C14ABC STP X20, X19, [X31 + 0x10]
	0x03C14AC0 ADRP X21, 0x7D0000
	0x03C14AC4 LDR X2, [X21 + 0x960]
	0x03C14AC8 MOV W19, W1
	0x03C14ACC MOV X20, X0
	0x03C14AD0 CBNZ X2, 0x3C14AE8
	0x03C14AD4 ADRP X0, 0xFFFFFFFFFCF16000
	0x03C14AD8 ADD X0, X0, 0x70A

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+1968]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51412992
	010 Add X0, X0, 253
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1968], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void get_ambientLight_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C14B24 MOV X8, X0
	0x03C14B28 STR X0, [X21 + 0x810]
	0x03C14B2C MOV X0, X20
	0x03C14B30 BLR X8
	0x03C14B34 ADRP X21, 0x7D0000
	0x03C14B38 LDR X2, [X21 + 0x960]
	0x03C14B3C MOV W20, W0
	0x03C14B40 CBNZ X2, 0x3C14B58
	0x03C14B44 ADRP X0, 0xFFFFFFFFFCF16000
	0x03C14B48 ADD X0, X0, 0x70A
	0x03C14B4C BL 0x1C16CB8
	0x03C14B50 MOV X2, X0
	0x03C14B54 STR X0, [X21 + 0x960]
	0x03C14B58 MOV X0, X19
	0x03C14B5C MOV W1, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+1976]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51433472
	010 Add X0, X0, 3831
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1976], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_ambientLight_Injected(ref UnityEngine.Color value)

Disassembly:
	0x03C14BA4 LDR X8, [X21 + 0x898]
	0x03C14BA8 CBNZ X8, 0x3C14BC0
	0x03C14BAC ADRP X0, 0xFFFFFFFFFCF16000
	0x03C14BB0 ADD X0, X0, 0x6A7
	0x03C14BB4 BL 0x1C16CB8
	0x03C14BB8 MOV X8, X0
	0x03C14BBC STR X0, [X21 + 0x898]
	0x03C14BC0 MOVZ W1, 0x80
	0x03C14BC4 MOV X0, X20
	0x03C14BC8 BLR X8
	0x03C14BCC TBNZ X0, 0x1F, 0x3C14C10
	0x03C14BD0 ADRP X22, 0x7D0000
	0x03C14BD4 LDR X3, [X22 + 0x948]
	0x03C14BD8 MOV W21, W0
	0x03C14BDC CBNZ X3, 0x3C14BF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+1984]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51343360
	010 Add X0, X0, 3638
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1984], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void get_subtractiveShadowColor_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C14C28 LDP X22, X21, [X31 + 0x10]
	0x03C14C2C LDR X30, [X31], #0x30
	0x03C14C30 B 0x3C14C88
	0x03C14C34 STR X30, [X31 - 0x30]!
	0x03C14C38 STP X22, X21, [X31 + 0x10]
	0x03C14C3C STP X20, X19, [X31 + 0x20]
	0x03C14C40 ADRP X22, 0x7D0000
	0x03C14C44 LDR X3, [X22 + 0x948]
	0x03C14C48 MOV X19, X2
	0x03C14C4C MOV W20, W1
	0x03C14C50 MOV X21, X0
	0x03C14C54 CBNZ X3, 0x3C14C6C
	0x03C14C58 ADRP X0, 0xFFFFFFFFFCF0E000
	0x03C14C5C ADD X0, X0, 0xE54
	0x03C14C60 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+1992]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51335168
	010 Add X0, X0, 2798
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1992], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_subtractiveShadowColor_Injected(ref UnityEngine.Color value)

Disassembly:
	0x03C14CA8 CBNZ X8, 0x3C14CC0
	0x03C14CAC ADRP X0, 0xFFFFFFFFFCF08000
	0x03C14CB0 ADD X0, X0, 0xE80
	0x03C14CB4 BL 0x1C16CB8
	0x03C14CB8 MOV X8, X0
	0x03C14CBC STR X0, [X22 + 0x810]
	0x03C14CC0 MOV X0, X21
	0x03C14CC4 BLR X8
	0x03C14CC8 ADRP X22, 0x7D0000
	0x03C14CCC LDR X3, [X22 + 0x948]
	0x03C14CD0 MOV W21, W0
	0x03C14CD4 CBNZ X3, 0x3C14CEC
	0x03C14CD8 ADRP X0, 0xFFFFFFFFFCF0E000
	0x03C14CDC ADD X0, X0, 0xE54
	0x03C14CE0 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+2000]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51466240
	010 Add X0, X0, 4014
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2000], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void get_ambientProbe_Injected(out UnityEngine.Rendering.SphericalHarmonicsL2 ret)

Disassembly:
	0x03C14DDC ADD X0, X0, 0xA
	0x03C14DE0 BL 0x1C16CB8
	0x03C14DE4 MOV X2, X0
	0x03C14DE8 STR X0, [X21 + 0x8A8]
	0x03C14DEC MOV X0, X20
	0x03C14DF0 MOV W1, W19
	0x03C14DF4 LDP X20, X19, [X31 + 0x10]
	0x03C14DF8 LDP X30, X21, [X31], #0x20
	0x03C14DFC BR X2
	0x03C14E00 STR X30, [X31 - 0x20]!
	0x03C14E04 STP X20, X19, [X31 + 0x10]
	0x03C14E08 ADRP X20, 0x7D0000
	0x03C14E0C LDR X1, [X20 + 0x8B0]
	0x03C14E10 MOV X19, X0
	0x03C14E14 CBNZ X1, 0x3C14E2C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+2008]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51384320
	010 Add X0, X0, 2717
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2008], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

