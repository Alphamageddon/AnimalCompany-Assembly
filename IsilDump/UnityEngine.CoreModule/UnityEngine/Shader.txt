Type: UnityEngine.Shader

Method: UnityEngine.Shader Find(System.String name)

Disassembly:
	0x03C14E40 STP X20, X19, [X31 + 0x10]
	0x03C14E44 ADRP X21, 0x7D0000
	0x03C14E48 LDR X2, [X21 + 0x8B8]
	0x03C14E4C MOV X19, X1
	0x03C14E50 MOV X20, X0
	0x03C14E54 CBNZ X2, 0x3C14E6C
	0x03C14E58 ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C14E5C ADD X0, X0, 0x32F
	0x03C14E60 BL 0x1C16CB8
	0x03C14E64 MOV X2, X0
	0x03C14E68 STR X0, [X21 + 0x8B8]
	0x03C14E6C MOV X0, X20
	0x03C14E70 MOV X1, X19
	0x03C14E74 LDP X20, X19, [X31 + 0x10]
	0x03C14E78 LDP X30, X21, [X31], #0x20
	0x03C14E7C BR X2
	0x03C14E80 STP X30, X21, [X31 - 0x20]!
	0x03C14E84 STP X20, X19, [X31 + 0x10]
	0x03C14E88 ADRP X21, 0x7D0000
	0x03C14E8C LDR X2, [X21 + 0x8C0]
	0x03C14E90 MOV X19, X1
	0x03C14E94 MOV X20, X0
	0x03C14E98 CBNZ X2, 0x3C14EB0
	0x03C14E9C ADRP X0, 0xFFFFFFFFFCF08000
	0x03C14EA0 ADD X0, X0, 0xF57
	0x03C14EA4 BL 0x1C16CB8
	0x03C14EA8 MOV X2, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7D1000
	006 Move X21, 0x54B000
	007 Move W8, [X20+2016]
	008 Move X21, [X21+3560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x54B000
	015 Move X0, [X0+3560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2016], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call ResourcesAPI.get_ActiveAPI
	026 Compare X0, 0
	027 JumpIfEqual {37}
	028 Move X8, [X0]
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X3, [X8+392]
	033 Move X2, [X8+400]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 CallNoReturn X3
	037 Call 0x1C17F20

Method: System.Boolean get_isSupported()

Disassembly:
	0x03C14EAC STR X0, [X21 + 0x8C0]
	0x03C14EB0 MOV X0, X20
	0x03C14EB4 MOV X1, X19
	0x03C14EB8 LDP X20, X19, [X31 + 0x10]
	0x03C14EBC LDP X30, X21, [X31], #0x20
	0x03C14EC0 BR X2
	0x03C14EC4 STP X30, X21, [X31 - 0x20]!
	0x03C14EC8 STP X20, X19, [X31 + 0x10]
	0x03C14ECC ADRP X21, 0x7D0000
	0x03C14ED0 LDR X2, [X21 + 0x8C8]
	0x03C14ED4 MOV X19, X1
	0x03C14ED8 MOV X20, X0
	0x03C14EDC CBNZ X2, 0x3C14EF4
	0x03C14EE0 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C14EE4 ADD X0, X0, 0xE06

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+2024]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51425280
	010 Add X0, X0, 4028
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2024], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_globalRenderPipeline(System.String value)

Disassembly:
	0x03C14EE8 BL 0x1C16CB8
	0x03C14EEC MOV X2, X0
	0x03C14EF0 STR X0, [X21 + 0x8C8]
	0x03C14EF4 MOV X0, X20
	0x03C14EF8 MOV X1, X19
	0x03C14EFC LDP X20, X19, [X31 + 0x10]
	0x03C14F00 LDP X30, X21, [X31], #0x20
	0x03C14F04 BR X2
	0x03C14F08 STP X30, X21, [X31 - 0x20]!
	0x03C14F0C STP X20, X19, [X31 + 0x10]
	0x03C14F10 ADRP X21, 0x7D0000
	0x03C14F14 LDR X2, [X21 + 0x8D0]
	0x03C14F18 MOV X19, X1
	0x03C14F1C MOV X20, X0
	0x03C14F20 CBNZ X2, 0x3C14F38

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+2032]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51294208
	010 Add X0, X0, 1428
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2032], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Rendering.LocalKeywordSpace get_keywordSpace()

Disassembly:
	0x03C14F24 ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C14F28 ADD X0, X0, 0x2
	0x03C14F2C BL 0x1C16CB8
	0x03C14F30 MOV X2, X0
	0x03C14F34 STR X0, [X21 + 0x8D0]
	0x03C14F38 MOV X0, X20
	0x03C14F3C MOV X1, X19
	0x03C14F40 LDP X20, X19, [X31 + 0x10]
	0x03C14F44 LDP X30, X21, [X31], #0x20
	0x03C14F48 BR X2
	0x03C14F4C STP X30, X21, [X31 - 0x20]!
	0x03C14F50 STP X20, X19, [X31 + 0x10]
	0x03C14F54 ADRP X21, 0x7D0000
	0x03C14F58 LDR X2, [X21 + 0x8D0]
	0x03C14F5C MOV X19, X1
	0x03C14F60 MOV X20, X0
	0x03C14F64 CBNZ X2, 0x3C14F7C
	0x03C14F68 ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C14F6C ADD X0, X0, 0x2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X8, [X20+2112]
	006 Move X19, X0
	007 Move [X31+8], X31
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51351552
	011 Add X0, X0, 2613
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X20+2112], X0
	015 Add X1, X31, 8
	016 Move X0, X19
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X0, [X31+8]
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return X0

Method: System.Void EnableKeyword(System.String keyword)

Disassembly:
	0x03C14FB4 BL 0x1C16CB8
	0x03C14FB8 MOV X2, X0
	0x03C14FBC STR X0, [X21 + 0x8E0]
	0x03C14FC0 AND W1, W19, 0x1
	0x03C14FC4 MOV X0, X20
	0x03C14FC8 LDP X20, X19, [X31 + 0x10]
	0x03C14FCC LDP X30, X21, [X31], #0x20
	0x03C14FD0 BR X2
	0x03C14FD4 STR X30, [X31 - 0x20]!
	0x03C14FD8 STP X20, X19, [X31 + 0x10]
	0x03C14FDC ADRP X20, 0x7D0000
	0x03C14FE0 LDR X1, [X20 + 0x8E8]
	0x03C14FE4 MOV X19, X0
	0x03C14FE8 CBNZ X1, 0x3C15000
	0x03C14FEC ADRP X0, 0xFFFFFFFFFCEDA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+2040]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51490816
	010 Add X0, X0, 4057
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2040], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void DisableKeyword(System.String keyword)

Disassembly:
	0x03C14FF0 ADD X0, X0, 0xE2A
	0x03C14FF4 BL 0x1C16CB8
	0x03C14FF8 MOV X1, X0
	0x03C14FFC STR X0, [X20 + 0x8E8]
	0x03C15000 MOV X0, X19
	0x03C15004 LDP X20, X19, [X31 + 0x10]
	0x03C15008 LDR X30, [X31], #0x20
	0x03C1500C BR X1
	0x03C15010 STP X30, X21, [X31 - 0x20]!
	0x03C15014 STP X20, X19, [X31 + 0x10]
	0x03C15018 ADRP X21, 0x7CF000
	0x03C1501C LDR X2, [X21 + 0x8F0]
	0x03C15020 MOV X19, X1
	0x03C15024 MOV X20, X0
	0x03C15028 CBNZ X2, 0x3C15040

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D1000
	005 Move X1, [X20+2048]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51503104
	010 Add X0, X0, 4034
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2048], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetKeywordFast(UnityEngine.Rendering.GlobalKeyword keyword, System.Boolean value)

Disassembly:
	0x03C1502C ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C15030 ADD X0, X0, 0xF41
	0x03C15034 BL 0x1C16CB8
	0x03C15038 MOV X2, X0
	0x03C1503C STR X0, [X21 + 0x8F0]
	0x03C15040 MOV X0, X20
	0x03C15044 MOV X1, X19
	0x03C15048 LDP X20, X19, [X31 + 0x10]
	0x03C1504C LDP X30, X21, [X31], #0x20
	0x03C15050 BR X2
	0x03C15054 STR X30, [X31 - 0x30]!
	0x03C15058 STP X22, X21, [X31 + 0x10]
	0x03C1505C STP X20, X19, [X31 + 0x20]
	0x03C15060 ADRP X22, 0x7CF000
	0x03C15064 LDR X3, [X22 + 0x8F8]
	0x03C15068 MOV X19, X2
	0x03C1506C MOV X20, X1
	0x03C15070 MOV X21, X0
	0x03C15074 CBNZ X3, 0x3C1508C
	0x03C15078 ADRP X0, 0xFFFFFFFFFCF0D000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7D0000
	007 Move X8, [X20+2120]
	008 Move W19, W2
	009 Move [X31], X0
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51515392
	013 Add X0, X0, 14
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+2120], X0
	017 And W1, W19, 1
	018 Add X0, X31, 0
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Add X31, X31, 48
	024 Return 

Method: System.Void SetKeyword(in UnityEngine.Rendering.GlobalKeyword keyword, System.Boolean value)

Disassembly:
	0x03C150C0 MOV W21, W2
	0x03C150C4 MOV X20, X1
	0x03C150C8 MOV X22, X0
	0x03C150CC CBNZ X4, 0x3C150E4
	0x03C150D0 ADRP X0, 0xFFFFFFFFFCEEA000

ISIL:
	001 Move X8, [X0]
	002 Move X9, [X0+8]
	003 And W2, W1, 1
	004 Move X0, X8
	005 Move X1, X9
	006 Call Shader.SetKeywordFast, X0, X1
	007 Return 

Method: System.Int32 TagToID(System.String name)

Disassembly:
	0x03C150D4 ADD X0, X0, 0x51
	0x03C150D8 BL 0x1C16CB8
	0x03C150DC MOV X4, X0
	0x03C150E0 STR X0, [X23 + 0x900]
	0x03C150E4 AND W2, W21, 0x1
	0x03C150E8 MOV X0, X22
	0x03C150EC MOV X1, X20
	0x03C150F0 MOV X3, X19
	0x03C150F4 LDP X20, X19, [X31 + 0x20]
	0x03C150F8 LDP X22, X21, [X31 + 0x10]
	0x03C150FC LDP X30, X23, [X31], #0x30
	0x03C15100 BR X4
	0x03C15104 STP X30, X23, [X31 - 0x30]!
	0x03C15108 STP X22, X21, [X31 + 0x10]
	0x03C1510C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D0000
	005 Move X1, [X20+2056]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51482624
	010 Add X0, X0, 290
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2056], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 PropertyToID(System.String name)

Disassembly:
	0x03C134EC MOV X20, X0
	0x03C134F0 CBNZ X2, 0x3C13508
	0x03C134F4 ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C134F8 ADD X0, X0, 0xDB5
	0x03C134FC BL 0x1C16CB8
	0x03C13500 MOV X2, X0
	0x03C13504 STR X0, [X21 + 0x688]
	0x03C13508 MOV X0, X20
	0x03C1350C MOV X1, X19
	0x03C13510 LDP X20, X19, [X31 + 0x10]
	0x03C13514 LDP X30, X21, [X31], #0x20
	0x03C13518 BR X2
	0x03C1351C STR X30, [X31 - 0x20]!
	0x03C13520 STP X20, X19, [X31 + 0x10]
	0x03C13524 ADRP X20, 0x7D1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D2000
	005 Move X1, [X20+2064]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51339264
	010 Add X0, X0, 3712
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2064], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_passCount()

Disassembly:
	0x03C15110 ADRP X23, 0x7CF000
	0x03C15114 ADRP X22, 0x4DE000
	0x03C15118 LDRB W8, [X23 + 0x908]
	0x03C1511C LDR X22, [X22 + 0x988]
	0x03C15120 MOV W21, W2
	0x03C15124 MOV X19, X1
	0x03C15128 MOV X20, X0
	0x03C1512C TBNZ X8, 0x0, 0x3C15144
	0x03C15130 ADRP X0, 0x4DE000
	0x03C15134 LDR X0, [X0 + 0x988]
	0x03C15138 BL 0x1C16CF4
	0x03C1513C MOVZ W8, 0x1
	0x03C15140 STRB W8, [X23 + 0x908]
	0x03C15144 ADRP X23, 0x7CF000
	0x03C15148 LDR X4, [X23 + 0x900]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D0000
	005 Move X1, [X20+2072]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51298304
	010 Add X0, X0, 1488
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2072], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetGlobalFloatImpl(System.Int32 name, System.Single value)

Disassembly:
	0x03C1514C LDR X22, [X22]
	0x03C15150 CBNZ X4, 0x3C15168
	0x03C15154 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C15158 ADD X0, X0, 0x51
	0x03C1515C BL 0x1C16CB8
	0x03C15160 MOV X4, X0
	0x03C15164 STR X0, [X23 + 0x900]
	0x03C15168 ORN W8, W31, W21, 0x0
	0x03C1516C MOV X0, X20
	0x03C15170 MOV X1, X19
	0x03C15174 MOV X3, X22
	0x03C15178 LDP X20, X19, [X31 + 0x20]
	0x03C1517C LDP X22, X21, [X31 + 0x10]
	0x03C15180 AND W2, W8, 0x1
	0x03C15184 LDP X30, X23, [X31], #0x30
	0x03C15188 BR X4
	0x03C1518C STP X30, X21, [X31 - 0x20]!
	0x03C15190 STP X20, X19, [X31 + 0x10]
	0x03C15194 ADRP X21, 0x7CF000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7D0000
	006 Move X1, [X20+2080]
	007 Move V8, V0
	008 Move W19, W0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51372032
	012 Add X0, X0, 2098
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+2080], X0
	016 Move W0, W19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void SetGlobalVectorImpl(System.Int32 name, UnityEngine.Vector4 value)

Disassembly:
	0x03C15198 LDR X2, [X21 + 0x910]
	0x03C1519C MOV W19, W1
	0x03C151A0 MOV X20, X0
	0x03C151A4 CBNZ X2, 0x3C151BC
	0x03C151A8 ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C151AC ADD X0, X0, 0x113
	0x03C151B0 BL 0x1C16CB8
	0x03C151B4 MOV X2, X0
	0x03C151B8 STR X0, [X21 + 0x910]
	0x03C151BC MOV X0, X20
	0x03C151C0 MOV W1, W19
	0x03C151C4 LDP X20, X19, [X31 + 0x10]
	0x03C151C8 LDP X30, X21, [X31], #0x20
	0x03C151CC BR X2
	0x03C151D0 STP X30, X21, [X31 - 0x20]!
	0x03C151D4 STP X20, X19, [X31 + 0x10]
	0x03C151D8 ADRP X21, 0x7CF000
	0x03C151DC LDR X2, [X21 + 0x918]
	0x03C151E0 MOV X19, X1
	0x03C151E4 MOV X20, X0
	0x03C151E8 CBNZ X2, 0x3C15200

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7D0000
	006 Move X8, [X20+2128]
	007 Move W19, W0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Move [X31+16], S3
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51453952
	015 Add X0, X0, 3549
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+2128], X0
	019 Add X1, X31, 0
	020 Move W0, W19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return 

Method: System.Void SetGlobalTextureImpl(System.Int32 name, UnityEngine.Texture value)

Disassembly:
	0x03C15230 ADD X0, X0, 0xE2A
	0x03C15234 BL 0x1C16CB8
	0x03C15238 MOV X1, X0
	0x03C1523C STR X0, [X20 + 0x920]
	0x03C15240 MOV X0, X19
	0x03C15244 LDP X20, X19, [X31 + 0x10]
	0x03C15248 LDR X30, [X31], #0x20
	0x03C1524C BR X1
	0x03C15250 STP X30, X21, [X31 - 0x20]!
	0x03C15254 STP X20, X19, [X31 + 0x10]
	0x03C15258 ADRP X21, 0x7CF000
	0x03C1525C LDR X2, [X21 + 0x928]
	0x03C15260 MOV X19, X1
	0x03C15264 MOV X20, X0
	0x03C15268 CBNZ X2, 0x3C15280
	0x03C1526C ADRP X0, 0xFFFFFFFFFCEE6000
	0x03C15270 ADD X0, X0, 0x14D

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2088]
	007 Move X19, X1
	008 Move W20, W0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51412992
	012 Add X0, X0, 3560
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2088], X0
	016 Move W0, W20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetGlobalConstantBufferImpl(System.Int32 name, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03C15274 BL 0x1C16CB8
	0x03C15278 MOV X2, X0
	0x03C1527C STR X0, [X21 + 0x928]
	0x03C15280 MOV X0, X20
	0x03C15284 MOV X1, X19
	0x03C15288 LDP X20, X19, [X31 + 0x10]
	0x03C1528C LDP X30, X21, [X31], #0x20
	0x03C15290 BR X2
	0x03C15294 STR X30, [X31 - 0x20]!
	0x03C15298 STP X20, X19, [X31 + 0x10]
	0x03C1529C ADRP X20, 0x7CF000
	0x03C152A0 LDR X1, [X20 + 0x920]
	0x03C152A4 MOV X19, X0
	0x03C152A8 CBNZ X1, 0x3C152C0
	0x03C152AC ADRP X0, 0xFFFFFFFFFCF0D000
	0x03C152B0 ADD X0, X0, 0xE2A
	0x03C152B4 BL 0x1C16CB8
	0x03C152B8 MOV X1, X0
	0x03C152BC STR X0, [X20 + 0x920]
	0x03C152C0 MOV X0, X19
	0x03C152C4 LDP X20, X19, [X31 + 0x10]
	0x03C152C8 LDR X30, [X31], #0x20
	0x03C152CC BR X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7D0000
	008 Move X4, [X23+2096]
	009 Move W19, W3
	010 Move W20, W2
	011 Move X21, X1
	012 Move W22, W0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51347456
	016 Add X0, X0, 3760
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+2096], X0
	020 Move W0, W22
	021 Move X1, X21
	022 Move W2, W20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetGlobalFloat(System.Int32 nameID, System.Single value)

Disassembly:
	0x03C152D0 STP X30, X21, [X31 - 0x20]!
	0x03C152D4 STP X20, X19, [X31 + 0x10]
	0x03C152D8 ADRP X21, 0x7CF000
	0x03C152DC LDR X2, [X21 + 0x928]
	0x03C152E0 MOV X19, X1
	0x03C152E4 MOV X20, X0
	0x03C152E8 CBNZ X2, 0x3C15300
	0x03C152EC ADRP X0, 0xFFFFFFFFFCEE6000
	0x03C152F0 ADD X0, X0, 0x14D
	0x03C152F4 BL 0x1C16CB8
	0x03C152F8 MOV X2, X0
	0x03C152FC STR X0, [X21 + 0x928]
	0x03C15300 MOV X0, X20
	0x03C15304 MOV X1, X19
	0x03C15308 LDP X20, X19, [X31 + 0x10]
	0x03C1530C LDP X30, X21, [X31], #0x20
	0x03C15310 BR X2
	0x03C15314 STR X30, [X31 - 0x20]!
	0x03C15318 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7D0000
	006 Move X1, [X20+2080]
	007 Move V8, V0
	008 Move W19, W0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51372032
	012 Add X0, X0, 2098
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+2080], X0
	016 Move W0, W19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void SetGlobalColor(System.Int32 nameID, UnityEngine.Color value)

Disassembly:
	0x03C1531C ADRP X20, 0x7CF000

ISIL:
	001 Call Shader.SetGlobalVectorImpl, X0, X1
	002 Return 

Method: System.Void SetGlobalTexture(System.String name, UnityEngine.Texture value)

Disassembly:
	0x03C15320 LDR X1, [X20 + 0x930]
	0x03C15324 MOV X19, X0
	0x03C15328 CBNZ X1, 0x3C15340
	0x03C1532C ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C15330 ADD X0, X0, 0xF6F
	0x03C15334 BL 0x1C16CB8
	0x03C15338 MOV X1, X0
	0x03C1533C STR X0, [X20 + 0x930]
	0x03C15340 MOV X0, X19
	0x03C15344 LDP X20, X19, [X31 + 0x10]
	0x03C15348 LDR X30, [X31], #0x20
	0x03C1534C BR X1
	0x03C15350 STR X30, [X31 - 0x30]!
	0x03C15354 STP X22, X21, [X31 + 0x10]
	0x03C15358 STP X20, X19, [X31 + 0x20]
	0x03C1535C ADRP X22, 0x7CF000
	0x03C15360 LDR X3, [X22 + 0x938]
	0x03C15364 MOV W19, W2
	0x03C15368 MOV W20, W1
	0x03C1536C MOV X21, X0
	0x03C15370 CBNZ X3, 0x3C15388
	0x03C15374 ADRP X0, 0xFFFFFFFFFCF13000
	0x03C15378 ADD X0, X0, 0x5F4
	0x03C1537C BL 0x1C16CB8
	0x03C15380 MOV X3, X0
	0x03C15384 STR X0, [X22 + 0x938]
	0x03C15388 MOV X0, X21
	0x03C1538C MOV W1, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X8, [X21+2064]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51347456
	012 Add X0, X0, 3712
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X21+2064], X0
	016 Move X0, X20
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X21, 0x7D0000
	019 Move X2, [X21+2088]
	020 Move W20, W0
	021 Compare X2, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51412992
	024 Add X0, X0, 3560
	025 Call 0x1C17CB8
	026 Move X2, X0
	027 Move [X21+2088], X0
	028 Move W0, W20
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 CallNoReturn X2

Method: System.Void SetGlobalTexture(System.Int32 nameID, UnityEngine.Texture value)

Disassembly:
	0x03C15390 MOV W2, W19
	0x03C15394 LDP X20, X19, [X31 + 0x20]
	0x03C15398 LDP X22, X21, [X31 + 0x10]
	0x03C1539C LDR X30, [X31], #0x30
	0x03C153A0 BR X3
	0x03C153A4 STR D8, [X31 - 0x30]!
	0x03C153A8 STP X30, X21, [X31 + 0x10]
	0x03C153AC STP X20, X19, [X31 + 0x20]
	0x03C153B0 ADRP X21, 0x7CF000
	0x03C153B4 LDR X2, [X21 + 0x940]
	0x03C153B8 MOV V8.16B, V0.16B
	0x03C153BC MOV W19, W1
	0x03C153C0 MOV X20, X0
	0x03C153C4 CBNZ X2, 0x3C153DC
	0x03C153C8 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C153CC ADD X0, X0, 0x9E
	0x03C153D0 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2088]
	007 Move X19, X1
	008 Move W20, W0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51412992
	012 Add X0, X0, 3560
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2088], X0
	016 Move W0, W20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetGlobalConstantBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer value, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03C153D4 MOV X2, X0
	0x03C153D8 STR X0, [X21 + 0x940]
	0x03C153DC MOV X0, X20
	0x03C153E0 MOV W1, W19
	0x03C153E4 LDP X20, X19, [X31 + 0x20]
	0x03C153E8 LDP X30, X21, [X31 + 0x10]
	0x03C153EC MOV V0.16B, V8.16B
	0x03C153F0 LDR V8, [X31], #0x30
	0x03C153F4 BR X2
	0x03C153F8 SUB X31, X31, 0x30
	0x03C153FC STP X30, X21, [X31 + 0x10]
	0x03C15400 STP X20, X19, [X31 + 0x20]
	0x03C15404 ADRP X21, 0x7CF000
	0x03C15408 LDR X8, [X21 + 0x980]
	0x03C1540C MOV W19, W1
	0x03C15410 MOV X20, X0
	0x03C15414 STP S0, S1, [X31]
	0x03C15418 STP S2, S3, [X31 + 0x8]
	0x03C1541C CBNZ X8, 0x3C15434
	0x03C15420 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C15424 ADD X0, X0, 0x835
	0x03C15428 BL 0x1C16CB8
	0x03C1542C MOV X8, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7D0000
	008 Move X4, [X23+2096]
	009 Move W19, W3
	010 Move W20, W2
	011 Move X21, X1
	012 Move W22, W0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51347456
	016 Add X0, X0, 3760
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+2096], X0
	020 Move W0, W22
	021 Move X1, X21
	022 Move W2, W20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void .ctor()

Disassembly:
	0x03C15430 STR X0, [X21 + 0x980]
	0x03C15434 ADD X2, X31, 0x0
	0x03C15438 MOV X0, X20
	0x03C1543C MOV W1, W19
	0x03C15440 BLR X8
	0x03C15444 LDP X20, X19, [X31 + 0x20]
	0x03C15448 LDP X30, X21, [X31 + 0x10]
	0x03C1544C ADD X31, X31, 0x30
	0x03C15450 RET
	0x03C15454 STR X30, [X31 - 0x30]!
	0x03C15458 STP X22, X21, [X31 + 0x10]
	0x03C1545C STP X20, X19, [X31 + 0x20]
	0x03C15460 ADRP X22, 0x7CF000
	0x03C15464 LDR X3, [X22 + 0x980]
	0x03C15468 MOV X19, X2
	0x03C1546C MOV W20, W1
	0x03C15470 MOV X21, X0
	0x03C15474 CBNZ X3, 0x3C1548C
	0x03C15478 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C1547C ADD X0, X0, 0x835
	0x03C15480 BL 0x1C16CB8
	0x03C15484 MOV X3, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7D0000
	006 Move X21, 0x4DF000
	007 Move W8, [X20+2104]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4DF000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2104], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

Method: System.Void get_keywordSpace_Injected(out UnityEngine.Rendering.LocalKeywordSpace ret)

Disassembly:
	0x03C14F70 BL 0x1C16CB8
	0x03C14F74 MOV X2, X0
	0x03C14F78 STR X0, [X21 + 0x8D0]
	0x03C14F7C MOV X0, X20
	0x03C14F80 MOV X1, X19
	0x03C14F84 LDP X20, X19, [X31 + 0x10]
	0x03C14F88 LDP X30, X21, [X31], #0x20
	0x03C14F8C BR X2
	0x03C14F90 STP X30, X21, [X31 - 0x20]!
	0x03C14F94 STP X20, X19, [X31 + 0x10]
	0x03C14F98 ADRP X21, 0x7D0000
	0x03C14F9C LDR X2, [X21 + 0x8E0]
	0x03C14FA0 MOV W19, W1
	0x03C14FA4 MOV X20, X0
	0x03C14FA8 CBNZ X2, 0x3C14FC0
	0x03C14FAC ADRP X0, 0xFFFFFFFFFCEFB000
	0x03C14FB0 ADD X0, X0, 0x185

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D1000
	006 Move X2, [X21+2112]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51351552
	012 Add X0, X0, 2613
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2112], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetKeywordFast_Injected(ref UnityEngine.Rendering.GlobalKeyword keyword, System.Boolean value)

Disassembly:
	0x03C1507C ADD X0, X0, 0xDE8
	0x03C15080 BL 0x1C16CB8
	0x03C15084 MOV X3, X0
	0x03C15088 STR X0, [X22 + 0x8F8]
	0x03C1508C MOV X0, X21
	0x03C15090 MOV X1, X20
	0x03C15094 MOV X2, X19
	0x03C15098 LDP X20, X19, [X31 + 0x20]
	0x03C1509C LDP X22, X21, [X31 + 0x10]
	0x03C150A0 LDR X30, [X31], #0x30
	0x03C150A4 BR X3
	0x03C150A8 STP X30, X23, [X31 - 0x30]!
	0x03C150AC STP X22, X21, [X31 + 0x10]
	0x03C150B0 STP X20, X19, [X31 + 0x20]
	0x03C150B4 ADRP X23, 0x7CF000
	0x03C150B8 LDR X4, [X23 + 0x900]
	0x03C150BC MOV X19, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2120]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51515392
	012 Add X0, X0, 14
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2120], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetGlobalVectorImpl_Injected(System.Int32 name, ref UnityEngine.Vector4 value)

Disassembly:
	0x03C151EC ADRP X0, 0xFFFFFFFFFCEFD000
	0x03C151F0 ADD X0, X0, 0xB00
	0x03C151F4 BL 0x1C16CB8
	0x03C151F8 MOV X2, X0
	0x03C151FC STR X0, [X21 + 0x918]
	0x03C15200 MOV X0, X20
	0x03C15204 MOV X1, X19
	0x03C15208 LDP X20, X19, [X31 + 0x10]
	0x03C1520C LDP X30, X21, [X31], #0x20
	0x03C15210 BR X2
	0x03C15214 STR X30, [X31 - 0x20]!
	0x03C15218 STP X20, X19, [X31 + 0x10]
	0x03C1521C ADRP X20, 0x7CF000
	0x03C15220 LDR X1, [X20 + 0x920]
	0x03C15224 MOV X19, X0
	0x03C15228 CBNZ X1, 0x3C15240
	0x03C1522C ADRP X0, 0xFFFFFFFFFCF0D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D0000
	006 Move X2, [X21+2128]
	007 Move X19, X1
	008 Move W20, W0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51453952
	012 Add X0, X0, 3549
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2128], X0
	016 Move W0, W20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

