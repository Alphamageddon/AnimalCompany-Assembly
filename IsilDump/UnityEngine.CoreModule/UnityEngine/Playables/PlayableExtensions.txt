Type: UnityEngine.Playables.PlayableExtensions

Method: UnityEngine.Playables.PlayableGraph GetGraph(U playable)

Disassembly:
	0x022310AC MRS X22, 0xC000
	0x022310B0 LDR X8, [X22 + 0x28]
	0x022310B4 MOV X20, X1
	0x022310B8 MOV X19, X0
	0x022310BC STUR X8, [X29 - 0x8]
	0x022310C0 LDR X8, [X1 + 0x38]
	0x022310C4 CBNZ X8, 0x22310E8
	0x022310C8 ADRP X0, 0x1EEB000
	0x022310CC LDR X0, [X0 + 0x240]
	0x022310D0 BL 0x1C16CF4
	0x022310D4 LDR X8, [X20 + 0x38]
	0x022310D8 CBNZ X8, 0x22310E8
	0x022310DC MOV X0, X20
	0x022310E0 BL 0x1C5C6E0
	0x022310E4 LDR X8, [X20 + 0x38]
	0x022310E8 LDR X0, [X8]
	0x022310EC LDRB W9, [X0 + 0x135]
	0x022310F0 TBNZ X9, 0x0, 0x22310FC
	0x022310F4 BL 0x1C5C684
	0x022310F8 LDR X8, [X20 + 0x38]
	0x022310FC LDR W9, [X0 + 0xFC]
	0x02231100 ADD X10, X31, 0x0
	0x02231104 ADD W9, W9, 0x10
	0x02231108 ADD X9, X9, 0xF
	0x0223110C AND X9, X9, 0x1FFFFFFFF
	0x02231110 SUB X21, X10, X9
	0x02231114 ADD X31, X21, 0x0
	0x02231118 STP X31, X31, [X29 - 0x28]
	0x0223111C LDR X0, [X8]
	0x02231120 LDRB W9, [X0 + 0x135]
	0x02231124 TBNZ X9, 0x0, 0x2231130
	0x02231128 BL 0x1C5C684
	0x0223112C LDR X8, [X20 + 0x38]
	0x02231130 LDR X1, [X8 + 0x8]
	0x02231134 SUB X5, X29, 0x18
	0x02231138 MOV X2, X21
	0x0223113C MOV X3, X19
	0x02231140 MOV X4, X31
	0x02231144 BL 0x1C17728
	0x02231148 ADRP X10, 0x1EEB000
	0x0223114C LDP X8, X9, [X29 - 0x18]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move [X31+16], X0
	005 Move [X31+24], X1
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Compare X8, 0
	009 JumpIfNotEqual {21}
	010 Move X0, 0x1EEC000
	011 Move X0, [X0+560]
	012 Call 0x1C17CF4
	013 Move X0, 0x1EEC000
	014 Move X0, [X0+568]
	015 Call 0x1C17CF4
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Move X8, 0x1EEC000
	022 Move X8, [X8+568]
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X8, [X19+56]
	031 Add X0, X31, 16
	032 Move X1, [X8+8]
	033 Call Playable.GetHandle, X0
	034 Move X9, 0x1EEC000
	035 Move X9, [X9+560]
	036 Move X8, X0
	037 Move [X31], X8
	038 Move [X31+8], X1
	039 Move X0, [X9]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X0, X31, 0
	045 Move X1, X31
	046 Call PlayableHandle.GetGraph, X0
	047 Move X30, [X31+32]
	048 Move X19, [X31+40]
	049 Add X31, X31, 48
	050 Return X0

Method: System.Void SetInputCount(U playable, System.Int32 value)

Disassembly:
	0x022313FC LDR X8, [X1 + 0x10]
	0x02231400 BLR X8
	0x02231404 ADRP X8, 0x1EEB000
	0x02231408 LDR X8, [X8 + 0x240]
	0x0223140C LDUR W19, [X29 - 0x1C]
	0x02231410 LDR X0, [X8]
	0x02231414 LDR W8, [X0 + 0xE0]
	0x02231418 CBNZ W8, 0x2231420
	0x0223141C BL 0x1C16DFC
	0x02231420 SUB X0, X29, 0x30
	0x02231424 MOV X1, X21
	0x02231428 MOV X2, X24
	0x0223142C MOV W3, W19
	0x02231430 MOV X4, X31
	0x02231434 BL 0x3C5F2A4
	0x02231438 LDR X8, [X26 + 0x28]
	0x0223143C LDUR X9, [X29 - 0x8]
	0x02231440 CMP X8, X9
	0x02231444 B.NE 0x2231464
	0x02231448 ADD X31, X29, 0x0
	0x0223144C LDP X20, X19, [X31 + 0x40]
	0x02231450 LDP X22, X21, [X31 + 0x30]
	0x02231454 LDP X24, X23, [X31 + 0x20]
	0x02231458 LDP X26, X25, [X31 + 0x10]
	0x0223145C LDP X29, X30, [X31], #0x50
	0x02231460 RET
	0x02231464 BL 0x3EB1B20
	0x02231468 STR X30, [X31 - 0x20]!
	0x0223146C STP X20, X19, [X31 + 0x10]
	0x02231470 LDR X8, [X1 + 0x38]
	0x02231474 MOV X19, X1
	0x02231478 MOV X20, X0
	0x0223147C CBNZ X8, 0x22314A8
	0x02231480 ADRP X0, 0x1EEB000
	0x02231484 LDR X0, [X0 + 0x240]
	0x02231488 BL 0x1C16CF4
	0x0223148C ADRP X0, 0x1EC2000
	0x02231490 LDR X0, [X0 + 0x6C0]
	0x02231494 BL 0x1C16CF4
	0x02231498 LDR X8, [X19 + 0x38]
	0x0223149C CBNZ X8, 0x22314A8
	0x022314A0 MOV X0, X19
	0x022314A4 BL 0x1C5C6E0
	0x022314A8 ADRP X8, 0x1EEB000
	0x022314AC LDR X8, [X8 + 0x240]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+24], X1
	003 Move [X31+32], X30
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move [X31+16], X0
	007 Move X8, [X3+56]
	008 Move X20, X3
	009 Move W19, W2
	010 Compare X8, 0
	011 JumpIfNotEqual {23}
	012 Move X0, 0x1EEC000
	013 Move X0, [X0+560]
	014 Call 0x1C17CF4
	015 Move X0, 0x1EEC000
	016 Move X0, [X0+568]
	017 Call 0x1C17CF4
	018 Move X8, [X20+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X20
	022 Call 0x1C5D6E0
	023 Move X8, 0x1EEC000
	024 Move X8, [X8+568]
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X8, [X20+56]
	033 Add X0, X31, 16
	034 Move X1, [X8+8]
	035 Call Playable.GetHandle, X0
	036 Move X9, 0x1EEC000
	037 Move X9, [X9+560]
	038 Move X8, X0
	039 Move [X31], X8
	040 Move [X31+8], X1
	041 Move X0, [X9]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Add X0, X31, 0
	047 Move W1, W19
	048 Move X2, X31
	049 Call PlayableHandle.SetInputCount, X0, X1
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X30, [X31+32]
	053 Add X31, X31, 64
	054 Return 

Method: System.Int32 GetInputCount(U playable)

Disassembly:
	0x02231254 LDR W9, [X8 + 0xE0]
	0x02231258 CBNZ W9, 0x2231264
	0x0223125C MOV X0, X8
	0x02231260 BL 0x1C16DFC
	0x02231264 ADD X0, X31, 0x0
	0x02231268 MOV X1, X20
	0x0223126C MOV X2, X19
	0x02231270 MOV W3, W21
	0x02231274 MOV X4, X31
	0x02231278 BL 0x3C5F2A4
	0x0223127C LDP X20, X19, [X31 + 0x40]
	0x02231280 LDP X30, X21, [X31 + 0x30]
	0x02231284 ADD X31, X31, 0x50
	0x02231288 RET
	0x0223128C STP X29, X30, [X31 - 0x50]!
	0x02231290 STP X26, X25, [X31 + 0x10]
	0x02231294 STP X24, X23, [X31 + 0x20]
	0x02231298 STP X22, X21, [X31 + 0x30]
	0x0223129C STP X20, X19, [X31 + 0x40]
	0x022312A0 ADD X29, X31, 0x0
	0x022312A4 SUB X31, X31, 0x30
	0x022312A8 MRS X26, 0xC000
	0x022312AC LDR X8, [X26 + 0x28]
	0x022312B0 MOV X19, X2
	0x022312B4 MOV X21, X1
	0x022312B8 MOV X20, X0
	0x022312BC STUR X8, [X29 - 0x8]
	0x022312C0 LDR X8, [X2 + 0x38]
	0x022312C4 CBNZ X8, 0x22312E8
	0x022312C8 ADRP X0, 0x1EEB000
	0x022312CC LDR X0, [X0 + 0x240]
	0x022312D0 BL 0x1C16CF4
	0x022312D4 LDR X8, [X19 + 0x38]
	0x022312D8 CBNZ X8, 0x22312E8
	0x022312DC MOV X0, X19
	0x022312E0 BL 0x1C5C6E0
	0x022312E4 LDR X8, [X19 + 0x38]
	0x022312E8 LDR X0, [X8]
	0x022312EC LDRB W9, [X0 + 0x135]
	0x022312F0 TBNZ X9, 0x0, 0x22312FC
	0x022312F4 BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move [X31+16], X0
	005 Move [X31+24], X1
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Compare X8, 0
	009 JumpIfNotEqual {21}
	010 Move X0, 0x1EEC000
	011 Move X0, [X0+560]
	012 Call 0x1C17CF4
	013 Move X0, 0x1EEC000
	014 Move X0, [X0+568]
	015 Call 0x1C17CF4
	016 Move X8, [X19+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Move X8, 0x1EEC000
	022 Move X8, [X8+568]
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X8, [X19+56]
	031 Add X0, X31, 16
	032 Move X1, [X8+8]
	033 Call Playable.GetHandle, X0
	034 Move X9, 0x1EEC000
	035 Move X9, [X9+560]
	036 Move X8, X0
	037 Move [X31], X8
	038 Move [X31+8], X1
	039 Move X0, [X9]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Add X0, X31, 0
	045 Move X1, X31
	046 Call PlayableHandle.GetInputCount, X0
	047 Move X30, [X31+32]
	048 Move X19, [X31+40]
	049 Add X31, X31, 48
	050 Return X0

Method: System.Void SetInputWeight(U playable, System.Int32 inputIndex, System.Single weight)

Disassembly:
	0x022315C4 B 0x3395194
	0x022315C8 SUB X31, X31, 0x60
	0x022315CC STP X30, X23, [X31 + 0x30]
	0x022315D0 STP X22, X21, [X31 + 0x40]
	0x022315D4 STP X20, X19, [X31 + 0x50]
	0x022315D8 LDR X8, [X1 + 0x38]
	0x022315DC MOV X19, X1
	0x022315E0 MOV X20, X0
	0x022315E4 CBNZ X8, 0x2231628
	0x022315E8 ADRP X0, 0x1EEA000
	0x022315EC LDR X0, [X0 + 0xF10]
	0x022315F0 BL 0x1C16CF4
	0x022315F4 ADRP X0, 0x1EEA000
	0x022315F8 LDR X0, [X0 + 0xF18]
	0x022315FC BL 0x1C16CF4
	0x02231600 ADRP X0, 0x1EEA000
	0x02231604 LDR X0, [X0 + 0xF20]
	0x02231608 BL 0x1C16CF4
	0x0223160C ADRP X0, 0x1EEA000
	0x02231610 LDR X0, [X0 + 0xF30]
	0x02231614 BL 0x1C16CF4
	0x02231618 LDR X8, [X19 + 0x38]
	0x0223161C CBNZ X8, 0x2231628
	0x02231620 MOV X0, X19
	0x02231624 BL 0x1C5C6E0
	0x02231628 MOV X0, X20
	0x0223162C MOV X1, X31
	0x02231630 STP X31, X31, [X31 + 0x18]
	0x02231634 STR X31, [X31 + 0x28]
	0x02231638 BL 0x37D38C8
	0x0223163C ADRP X8, 0x1EEA000
	0x02231640 LDR X8, [X8 + 0xF30]
	0x02231644 STP X0, X1, [X31 + 0x8]
	0x02231648 ADD X0, X31, 0x8
	0x0223164C LDR X9, [X8]
	0x02231650 ADD X8, X31, 0x18
	0x02231654 MOV X1, X9
	0x02231658 BL 0x24FD990
	0x0223165C ADRP X22, 0x1EEA000
	0x02231660 ADRP X23, 0x1EEA000
	0x02231664 LDR X22, [X22 + 0xF18]
	0x02231668 LDR X23, [X23 + 0xF20]
	0x0223166C LDR X1, [X22]
	0x02231670 ADD X0, X31, 0x18
	0x02231674 BL 0x2BC496C
	0x02231678 TBZ X0, 0x0, 0x22316F4
	0x0223167C LDR X1, [X23]
	0x02231680 ADD X0, X31, 0x18
	0x02231684 BL 0x2BC4998

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], D8
	003 Move [X31+40], X30
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move [X31+16], X0
	007 Move [X31+24], X1
	008 Move X8, [X3+56]
	009 Move X20, X3
	010 Move V8, V0
	011 Move W19, W2
	012 Compare X8, 0
	013 JumpIfNotEqual {25}
	014 Move X0, 0x1EEC000
	015 Move X0, [X0+560]
	016 Call 0x1C17CF4
	017 Move X0, 0x1EEC000
	018 Move X0, [X0+568]
	019 Call 0x1C17CF4
	020 Move X8, [X20+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X20
	024 Call 0x1C5D6E0
	025 Move X8, 0x1EEC000
	026 Move X8, [X8+568]
	027 Move [X31], X31
	028 Move [X31+8], X31
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X8, [X20+56]
	035 Add X0, X31, 16
	036 Move X1, [X8+8]
	037 Call Playable.GetHandle, X0
	038 Move X9, 0x1EEC000
	039 Move X9, [X9+560]
	040 Move X8, X0
	041 Move [X31], X8
	042 Move [X31+8], X1
	043 Move X0, [X9]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Add X0, X31, 0
	049 Move W1, W19
	050 Move V0, V8
	051 Move X2, X31
	052 Call PlayableHandle.SetInputWeight, X0, X1, V0
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X30, [X31+40]
	056 Move V8, [X31+32]
	057 Add X31, X31, 64
	058 Return 

Method: System.Void ConnectInput(U playable, System.Int32 inputIndex, V sourcePlayable, System.Int32 sourceOutputIndex, System.Single weight)

Disassembly:
	0x02230E28 BL 0x1C16CF4
	0x02230E2C ADRP X0, 0x1EC3000
	0x02230E30 LDR X0, [X0 + 0x6C0]
	0x02230E34 BL 0x1C16CF4
	0x02230E38 LDR X8, [X19 + 0x38]
	0x02230E3C CBNZ X8, 0x2230E48
	0x02230E40 MOV X0, X19
	0x02230E44 BL 0x1C5C6E0
	0x02230E48 ADRP X8, 0x1EEC000
	0x02230E4C LDR X8, [X8 + 0x230]
	0x02230E50 LDR X0, [X8]
	0x02230E54 LDR W8, [X0 + 0xE0]
	0x02230E58 CBNZ W8, 0x2230E60
	0x02230E5C BL 0x1C16DFC
	0x02230E60 MOV X0, X20
	0x02230E64 MOV X1, X31
	0x02230E68 BL 0x3C5E938
	0x02230E6C ADRP X8, 0x1EC3000
	0x02230E70 LDR X8, [X8 + 0x6C0]
	0x02230E74 LDR X9, [X19 + 0x38]
	0x02230E78 MOV X19, X0
	0x02230E7C LDR X8, [X8]
	0x02230E80 LDR X20, [X9]
	0x02230E84 LDR W10, [X8 + 0xE0]
	0x02230E88 CBNZ W10, 0x2230E94
	0x02230E8C MOV X0, X8
	0x02230E90 BL 0x1C16DFC
	0x02230E94 MOV X0, X20
	0x02230E98 MOV X1, X31
	0x02230E9C BL 0x338C698
	0x02230EA0 MOV X1, X0
	0x02230EA4 MOV X0, X19
	0x02230EA8 LDP X20, X19, [X31 + 0x10]
	0x02230EAC MOV X2, X31
	0x02230EB0 LDR X30, [X31], #0x20
	0x02230EB4 B 0x3395194
	0x02230EB8 STR X30, [X31 - 0x20]!
	0x02230EBC STP X20, X19, [X31 + 0x10]
	0x02230EC0 LDR X8, [X1 + 0x38]
	0x02230EC4 MOV X19, X1
	0x02230EC8 MOV X20, X0
	0x02230ECC CBNZ X8, 0x2230EF8
	0x02230ED0 ADRP X0, 0x1EEC000
	0x02230ED4 LDR X0, [X0 + 0x230]
	0x02230ED8 BL 0x1C16CF4
	0x02230EDC ADRP X0, 0x1EC3000
	0x02230EE0 LDR X0, [X0 + 0x6C0]
	0x02230EE4 BL 0x1C16CF4
	0x02230EE8 LDR X8, [X19 + 0x38]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X8, [X6+56]
	012 Move X20, X6
	013 Move V8, V0
	014 Move W22, W5
	015 Move X24, X4
	016 Move X25, X3
	017 Move W19, W2
	018 Move X21, X1
	019 Move X23, X0
	020 Compare X8, 0
	021 JumpIfNotEqual {25}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Move X8, [X20+56]
	025 Move [X31], X31
	026 Move [X31+8], X31
	027 Move X2, [X8+8]
	028 Move X0, X23
	029 Move X1, X21
	030 Call 0x22310AC, X0
	031 Move [X31], X0
	032 Move [X31+8], X1
	033 Move X8, [X20+56]
	034 Add X0, X31, 0
	035 Move X1, X25
	036 Move X2, X24
	037 Move X7, [X8+24]
	038 Move W3, W22
	039 Move X4, X23
	040 Move X5, X21
	041 Move W6, W19
	042 Call 0x22317AC, X0, X1, X2, X3, X4
	043 Move X8, [X20+56]
	044 Move X0, X23
	045 Move X1, X21
	046 Move W2, W19
	047 Move X3, [X8+32]
	048 Move V0, V8
	049 Call 0x22315C4, X0, X1, V0
	050 Move X20, [X31+80]
	051 Move X19, [X31+88]
	052 Move X22, [X31+64]
	053 Move X21, [X31+72]
	054 Move X24, [X31+48]
	055 Move X23, [X31+56]
	056 Move X30, [X31+32]
	057 Move X25, [X31+40]
	058 Move V8, [X31+16]
	059 Add X31, X31, 96
	060 Return 

Method: System.Int32 AddInput(U playable, V sourcePlayable, System.Int32 sourceOutputIndex, System.Single weight = 0)

Disassembly:
	0x02230BBC LDR X8, [X8]
	0x02230BC0 LDR X20, [X9]
	0x02230BC4 LDR W10, [X8 + 0xE0]
	0x02230BC8 CBNZ W10, 0x2230BD4
	0x02230BCC MOV X0, X8
	0x02230BD0 BL 0x1C16DFC
	0x02230BD4 MOV X0, X20
	0x02230BD8 MOV X1, X31
	0x02230BDC BL 0x338C698
	0x02230BE0 MOV X1, X0
	0x02230BE4 MOV X0, X19
	0x02230BE8 LDP X20, X19, [X31 + 0x10]
	0x02230BEC MOV X2, X31
	0x02230BF0 LDR X30, [X31], #0x20
	0x02230BF4 B 0x3395194
	0x02230BF8 STR X30, [X31 - 0x20]!
	0x02230BFC STP X20, X19, [X31 + 0x10]
	0x02230C00 LDR X8, [X1 + 0x38]
	0x02230C04 MOV X19, X1
	0x02230C08 MOV X20, X0
	0x02230C0C CBNZ X8, 0x2230C38
	0x02230C10 ADRP X0, 0x1EEC000
	0x02230C14 LDR X0, [X0 + 0x230]
	0x02230C18 BL 0x1C16CF4
	0x02230C1C ADRP X0, 0x1EC3000
	0x02230C20 LDR X0, [X0 + 0x6C0]
	0x02230C24 BL 0x1C16CF4
	0x02230C28 LDR X8, [X19 + 0x38]
	0x02230C2C CBNZ X8, 0x2230C38
	0x02230C30 MOV X0, X19
	0x02230C34 BL 0x1C5C6E0
	0x02230C38 ADRP X8, 0x1EEC000
	0x02230C3C LDR X8, [X8 + 0x230]
	0x02230C40 LDR X0, [X8]
	0x02230C44 LDR W8, [X0 + 0xE0]
	0x02230C48 CBNZ W8, 0x2230C50
	0x02230C4C BL 0x1C16DFC
	0x02230C50 MOV X0, X20
	0x02230C54 MOV X1, X31
	0x02230C58 BL 0x3C5E938
	0x02230C5C ADRP X8, 0x1EC3000
	0x02230C60 LDR X8, [X8 + 0x6C0]
	0x02230C64 LDR X9, [X19 + 0x38]
	0x02230C68 MOV X19, X0
	0x02230C6C LDR X8, [X8]

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X5+56]
	011 Move X22, X5
	012 Move V8, V0
	013 Move W19, W4
	014 Move X20, X3
	015 Move X21, X2
	016 Move X23, X1
	017 Move X24, X0
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X22
	021 Call 0x1C5D6E0
	022 Move X8, [X22+56]
	023 Move X2, [X8+8]
	024 Move X0, X24
	025 Move X1, X23
	026 Call 0x2231254, X0
	027 Move X8, [X22+56]
	028 Move W25, W0
	029 Add W2, W0, 1
	030 Move X0, X24
	031 Move X3, [X8+16]
	032 Move X1, X23
	033 Call 0x22313FC, X0, X1
	034 Move X8, [X22+56]
	035 Move X0, X24
	036 Move X1, X23
	037 Move W2, W25
	038 Move X6, [X8+32]
	039 Move X3, X21
	040 Move X4, X20
	041 Move W5, W19
	042 Move V0, V8
	043 Call 0x2230E28, X0, X1, X2, X3, V0
	044 Move W0, W25
	045 Move X20, [X31+64]
	046 Move X19, [X31+72]
	047 Move X22, [X31+48]
	048 Move X21, [X31+56]
	049 Move X24, [X31+32]
	050 Move X23, [X31+40]
	051 Move X30, [X31+16]
	052 Move X25, [X31+24]
	053 Move V8, [X31+80]
	054 Return X0

