Type: UnityEngine.Playables.PlayableOutput

Method: System.Void .ctor(UnityEngine.Playables.PlayableOutputHandle handle)

Disassembly:
	0x03C5FDB8 STR X30, [X31 - 0x10]!
	0x03C5FDBC CBZ X0, 0x3C5FE08

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], X2
	003 Return 

Method: UnityEngine.Playables.PlayableOutputHandle GetHandle()

Disassembly:
	0x03C5FDC0 MOV X1, X31
	0x03C5FDC4 BL 0x3C166C8
	0x03C5FDC8 ADRP X8, 0xFFFFFFFFFCE8B000

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Boolean Equals(UnityEngine.Playables.PlayableOutput other)

Disassembly:
	0x03C5FDCC LDR V1, [X8 + 0x104]
	0x03C5FDD0 FMOV S2, 0.5
	0x03C5FDD4 FMUL S0, S0, S2
	0x03C5FDD8 FMUL S0, S0, S1
	0x03C5FDDC BL 0x3EB1E50
	0x03C5FDE0 MOVZ W8, 0x42380000
	0x03C5FDE4 MOVZ W9, 0x3C800000
	0x03C5FDE8 FMOV S1, W8
	0x03C5FDEC FMUL S0, S0, S1
	0x03C5FDF0 FMOV S1, W9
	0x03C5FDF4 FMUL S0, S0, S1
	0x03C5FDF8 BL 0x3EB1BE0
	0x03C5FDFC FADD S0, S0, S0
	0x03C5FE00 LDR X30, [X31], #0x10
	0x03C5FE04 RET
	0x03C5FE08 BL 0x1C16F20
	0x03C5FE0C STR D8, [X31 - 0x20]!
	0x03C5FE10 STP X30, X19, [X31 + 0x10]
	0x03C5FE14 CBZ X0, 0x3C5FE7C
	0x03C5FE18 MOV X1, X31
	0x03C5FE1C MOV X19, X0
	0x03C5FE20 BL 0x3C168B0
	0x03C5FE24 FMOV S8, 1
	0x03C5FE28 TBZ X0, 0x0, 0x3C5FE60
	0x03C5FE2C MOV X0, X31
	0x03C5FE30 BL 0x3C4B92C
	0x03C5FE34 FMOV S1, 1
	0x03C5FE38 FMOV S2, 1
	0x03C5FE3C FMOV S3, 1
	0x03C5FE40 TBZ X0, 0x0, 0x3C5FE6C
	0x03C5FE44 MOV X0, X19
	0x03C5FE48 MOV X1, X31
	0x03C5FE4C BL 0x3C16874
	0x03C5FE50 MOV X0, X31
	0x03C5FE54 BL 0x3C2B37C
	0x03C5FE58 MOV V8.16B, V0.16B
	0x03C5FE5C B 0x3C5FE6C
	0x03C5FE60 FMOV S1, 1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x788000
	008 Move X22, 0x501000
	009 Move W8, [X23+720]
	010 Move X22, [X22+4056]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4BE000
	019 Move X0, [X0+576]
	020 Call 0x1C17CF4
	021 Move X0, 0x501000
	022 Move X0, [X0+4056]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+720], W8
	026 Move X0, [X22]
	027 Move X22, 0x4BE000
	028 Move W8, [X0+224]
	029 Move X22, [X22+576]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, [X22]
	034 Move X22, [X21]
	035 Move X21, [X21+8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X22
	041 Move X1, X21
	042 Move X2, X20
	043 Move X3, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]

Method: System.Void .cctor()

Disassembly:
	0x03C5FEEC MOV X1, X31
	0x03C5FEF0 LDR V10, [X31], #0x30
	0x03C5FEF4 B 0x3C5F604
	0x03C5FEF8 SUB X31, X31, 0xA0
	0x03C5FEFC STP D15, D14, [X31 + 0x40]
	0x03C5FF00 STP D13, D12, [X31 + 0x50]
	0x03C5FF04 STP D11, D10, [X31 + 0x60]
	0x03C5FF08 STP D9, D8, [X31 + 0x70]
	0x03C5FF0C STR X30, [X31 + 0x80]
	0x03C5FF10 STP X20, X19, [X31 + 0x90]
	0x03C5FF14 STP X31, X31, [X31 + 0x30]
	0x03C5FF18 STP X31, X31, [X31 + 0x20]
	0x03C5FF1C CBZ X0, 0x3C60090
	0x03C5FF20 MOV X19, X1
	0x03C5FF24 MOV X1, X31
	0x03C5FF28 MOV X20, X0
	0x03C5FF2C BL 0x3C385F8
	0x03C5FF30 STR W0, [X19]
	0x03C5FF34 ADD X8, X31, 0x8
	0x03C5FF38 MOV X0, X20
	0x03C5FF3C MOV X1, X31
	0x03C5FF40 BL 0x3C16AA0
	0x03C5FF44 LDR W8, [X31 + 0x10]
	0x03C5FF48 MOVZ W9, 0x1
	0x03C5FF4C MOV X0, X20
	0x03C5FF50 MOV X1, X31
	0x03C5FF54 CMP W8, 0x1
	0x03C5FF58 CINC W9, W9, NE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x788000
	005 Move X19, 0x4BE000
	006 Move W8, [X20+721]
	007 Move X19, [X19+576]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x4BE000
	013 Move X0, [X0+576]
	014 Call 0x1C17CF4
	015 Move X0, 0x501000
	016 Move X0, [X0+4056]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+721], W8
	020 Move X0, [X19]
	021 Move X19, 0x501000
	022 Move W8, [X0+224]
	023 Move X19, [X19+4056]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Call PlayableOutputHandle.get_Null
	028 Move X8, [X19]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X8, [X8+184]
	032 Move [X8], X0
	033 Move [X8+8], X1
	034 Move X30, [X31+32]
	035 Return 

