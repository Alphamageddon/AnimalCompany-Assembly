Type: UnityEngine.Transform/Enumerator

Method: System.Void .ctor(UnityEngine.Transform outer)

Disassembly:
	0x03C42070 BL 0x1C16D08
	0x03C42074 MOV X1, X0
	0x03C42078 MOV X0, X19
	0x03C4207C MOV X2, X31
	0x03C42080 BL 0x3314A68
	0x03C42084 ADRP X0, 0x51D000
	0x03C42088 LDR X0, [X0 + 0x840]
	0x03C4208C BL 0x1C16D08
	0x03C42090 MOV X1, X0
	0x03C42094 MOV X0, X19
	0x03C42098 BL 0x1C16DEC
	0x03C4209C LDR V7, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W8, TEMP
	008 Move X1, X31
	009 Move X20, X0
	010 Move [X0+24], W8
	011 Call Object..ctor, X0
	012 Move [X20+16], X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 

Method: System.Object get_Current()

Disassembly:
	0x03C420E4 MOV V9.16B, V5.16B
	0x03C420E8 MOV V10.16B, V4.16B
	0x03C420EC MOV V11.16B, V3.16B
	0x03C420F0 MOV V12.16B, V2.16B
	0x03C420F4 MOV V13.16B, V1.16B
	0x03C420F8 MOV V14.16B, V0.16B
	0x03C420FC MOV X21, X0
	0x03C42100 CBNZ W8, 0x3C42118
	0x03C42104 ADRP X0, 0x4B8000
	0x03C42108 LDR X0, [X0 + 0x9A0]
	0x03C4210C BL 0x1C16CF4
	0x03C42110 MOVZ W8, 0x1
	0x03C42114 STRB W8, [X22 + 0xE5A]
	0x03C42118 ADRP X8, 0x4B8000
	0x03C4211C LDR X8, [X8 + 0x9A0]
	0x03C42120 MOV X0, X21
	0x03C42124 MOV V2.16B, V12.16B
	0x03C42128 MOV V3.16B, V11.16B
	0x03C4212C LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, [X0+16]
	006 Compare X19, 0
	007 JumpIfEqual {25}
	008 Move X21, 0x7A4000
	009 Move X2, [X21+2464]
	010 Move W20, [X0+24]
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51585024
	014 Add X0, X0, 1491
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+2464], X0
	018 Move X0, X19
	019 Move W1, W20
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 CallNoReturn X2
	025 Call 0x1C17F20

Method: System.Boolean MoveNext()

Disassembly:
	0x03C42130 MOV V4.16B, V10.16B
	0x03C42134 MOV V5.16B, V9.16B
	0x03C42138 MOV V6.16B, V8.16B
	0x03C4213C LDR X8, [X8 + 0xB8]
	0x03C42140 MOV W1, W20
	0x03C42144 MOV W2, W19
	0x03C42148 MOV W3, W31
	0x03C4214C LDR V0, [X8]
	0x03C42150 LDR V1, [X8 + 0xC]
	0x03C42154 LDUR X9, [X8 + 0x4]
	0x03C42158 MOV X4, X31
	0x03C4215C STR S0, [X31]
	0x03C42160 STR S1, [X31 + 0xC]
	0x03C42164 MOV V0.16B, V14.16B
	0x03C42168 MOV V1.16B, V13.16B
	0x03C4216C STUR X9, [X31 + 0x4]
	0x03C42170 BL 0x3C41C20
	0x03C42174 LDP X20, X19, [X31 + 0x60]
	0x03C42178 LDP X22, X21, [X31 + 0x50]
	0x03C4217C LDR X30, [X31 + 0x48]
	0x03C42180 LDP D9, D8, [X31 + 0x38]
	0x03C42184 LDP D11, D10, [X31 + 0x28]
	0x03C42188 LDP D13, D12, [X31 + 0x18]
	0x03C4218C LDR V14, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, [X0+16]
	006 Compare X20, 0
	007 JumpIfEqual {30}
	008 Move X21, 0x7A4000
	009 Move X8, [X21+2384]
	010 Move X19, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51707904
	014 Add X0, X0, 724
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X21+2384], X0
	018 Move X0, X20
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move W8, [X19+24]
	021 Add W8, W8, 1
	022 Move [X19+24], W8
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x03C42190 ADD X31, X31, 0x70
	0x03C42194 RET
	0x03C42198 MOVZ W2, 0x1

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+24], W8
	005 Return 

