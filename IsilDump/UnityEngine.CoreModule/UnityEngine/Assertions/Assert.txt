Type: UnityEngine.Assertions.Assert

Method: System.Void Fail(System.String message, System.String userMessage)

Disassembly:
	0x03C62F24 LDR X30, [X31], #0x20
	0x03C62F28 BR X1
	0x03C62F2C STP X30, X21, [X31 - 0x20]!
	0x03C62F30 STP X20, X19, [X31 + 0x10]
	0x03C62F34 ADRP X21, 0x784000
	0x03C62F38 LDR X2, [X21 + 0x450]
	0x03C62F3C MOV W19, W1
	0x03C62F40 MOV X20, X0
	0x03C62F44 CBNZ X2, 0x3C62F5C
	0x03C62F48 ADRP X0, 0xFFFFFFFFFCEAD000
	0x03C62F4C ADD X0, X0, 0x90D
	0x03C62F50 BL 0x1C16CB8
	0x03C62F54 MOV X2, X0
	0x03C62F58 STR X0, [X21 + 0x450]
	0x03C62F5C MOV X0, X20
	0x03C62F60 MOV W1, W19
	0x03C62F64 LDP X20, X19, [X31 + 0x10]
	0x03C62F68 LDP X30, X21, [X31], #0x20
	0x03C62F6C BR X2
	0x03C62F70 STR X30, [X31 - 0x20]!
	0x03C62F74 STP X20, X19, [X31 + 0x10]
	0x03C62F78 ADRP X20, 0x784000
	0x03C62F7C LDR X1, [X20 + 0x458]
	0x03C62F80 MOV X19, X0
	0x03C62F84 CBNZ X1, 0x3C62F9C
	0x03C62F88 ADRP X0, 0xFFFFFFFFFCE91000
	0x03C62F8C ADD X0, X0, 0x87F
	0x03C62F90 BL 0x1C16CB8
	0x03C62F94 MOV X1, X0
	0x03C62F98 STR X0, [X20 + 0x458]
	0x03C62F9C MOV X0, X19
	0x03C62FA0 LDP X20, X19, [X31 + 0x10]
	0x03C62FA4 LDR X30, [X31], #0x20
	0x03C62FA8 BR X1
	0x03C62FAC STR X30, [X31 - 0x20]!
	0x03C62FB0 STP X20, X19, [X31 + 0x10]
	0x03C62FB4 ADRP X20, 0x784000
	0x03C62FB8 LDR X1, [X20 + 0x460]
	0x03C62FBC MOV X19, X0
	0x03C62FC0 CBNZ X1, 0x3C62FD8
	0x03C62FC4 ADRP X0, 0xFFFFFFFFFCEB2000
	0x03C62FC8 ADD X0, X0, 0xF0B
	0x03C62FCC BL 0x1C16CB8
	0x03C62FD0 MOV X1, X0
	0x03C62FD4 STR X0, [X20 + 0x460]
	0x03C62FD8 MOV X0, X19
	0x03C62FDC LDP X20, X19, [X31 + 0x10]
	0x03C62FE0 LDR X30, [X31], #0x20
	0x03C62FE4 BR X1
	0x03C62FE8 STR X30, [X31 - 0x20]!
	0x03C62FEC STP X20, X19, [X31 + 0x10]
	0x03C62FF0 ADRP X20, 0x784000
	0x03C62FF4 LDR X8, [X20 + 0x538]
	0x03C62FF8 MOV X19, X0
	0x03C62FFC STR X31, [X31 + 0x8]
	0x03C63000 CBNZ X8, 0x3C63018
	0x03C63004 ADRP X0, 0xFFFFFFFFFCEB1000
	0x03C63008 ADD X0, X0, 0xF2A
	0x03C6300C BL 0x1C16CB8
	0x03C63010 MOV X8, X0
	0x03C63014 STR X0, [X20 + 0x538]
	0x03C63018 ADD X1, X31, 0x8
	0x03C6301C MOV X0, X19
	0x03C63020 BLR X8
	0x03C63024 LDP S0, S1, [X31 + 0x8]
	0x03C63028 LDP X20, X19, [X31 + 0x10]
	0x03C6302C LDR X30, [X31], #0x20
	0x03C63030 RET
	0x03C63034 STP X30, X21, [X31 - 0x20]!
	0x03C63038 STP X20, X19, [X31 + 0x10]
	0x03C6303C ADRP X21, 0x783000
	0x03C63040 LDR X2, [X21 + 0x538]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x785000
	007 Move X21, 0x4BA000
	008 Move W8, [X22+1049]
	009 Move X21, [X21+2032]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x4BA000
	017 Move X0, [X0+2032]
	018 Call 0x1C17CF4
	019 Move X0, 0x492000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x493000
	023 Move X0, [X0+4064]
	024 Call 0x1C17CF4
	025 Move X0, 0x4FF000
	026 Move X0, [X0+160]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1049], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X21]
	036 Move X8, [X0+184]
	037 Move W8, [X8]
	038 Compare W8, 0
	039 JumpIfNotEqual {71}
	040 Move X8, 0x4FF000
	041 Move X8, [X8+160]
	042 Move X21, 0x492000
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, [X8]
	045 Move X21, [X21+2600]
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Compare X19, 0
	048 JumpIfEqual {57}
	049 Move X8, 0x493000
	050 Move X8, [X8+4064]
	051 Move X0, X19
	052 Move X2, X20
	053 Move X3, X31
	054 Move X1, [X8]
	055 Call String.Concat, X0, X1, X2
	056 Move X20, X0
	057 Move X0, [X21]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X1, X31
	068 Move X30, [X31+48]
	069 Call Debug.LogAssertion, X0
	070 Return 
	071 Move X0, 0x4FE000
	072 Move X0, [X0+168]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X1, X20
	076 Move X2, X19
	077 Move X21, X0
	078 Call AssertionException..ctor, X0, X1, X2
	079 Move X0, 0x4FE000
	080 Move X0, [X0+176]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X21
	084 Call 0x1C17DEC

Method: System.Void IsTrue(System.Boolean condition)

Disassembly:
	0x03C630B8 STP X20, X19, [X31 + 0x10]
	0x03C630BC ADRP X20, 0x783000
	0x03C630C0 LDR X1, [X20 + 0x470]
	0x03C630C4 MOV X19, X0
	0x03C630C8 CBNZ X1, 0x3C630E0
	0x03C630CC ADRP X0, 0xFFFFFFFFFCEA2000
	0x03C630D0 ADD X0, X0, 0x5B6
	0x03C630D4 BL 0x1C16CB8
	0x03C630D8 MOV X1, X0
	0x03C630DC STR X0, [X20 + 0x470]
	0x03C630E0 MOV X0, X19
	0x03C630E4 LDP X20, X19, [X31 + 0x10]
	0x03C630E8 LDR X30, [X31], #0x20
	0x03C630EC BR X1
	0x03C630F0 STR X30, [X31 - 0x20]!
	0x03C630F4 STP X20, X19, [X31 + 0x10]
	0x03C630F8 ADRP X20, 0x783000
	0x03C630FC LDR X1, [X20 + 0x478]
	0x03C63100 MOV X19, X0
	0x03C63104 CBNZ X1, 0x3C6311C
	0x03C63108 ADRP X0, 0xFFFFFFFFFCE96000
	0x03C6310C ADD X0, X0, 0x9C8
	0x03C63110 BL 0x1C16CB8
	0x03C63114 MOV X1, X0
	0x03C63118 STR X0, [X20 + 0x478]
	0x03C6311C MOV X0, X19
	0x03C63120 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x784000
	005 Move W8, [X20+1050]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {19}
	011 Move TEMP, X19
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {28}
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return 
	019 Move X0, 0x4B9000
	020 Move X0, [X0+2032]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1050], W8
	024 Move TEMP, X19
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {15}
	028 Move X8, 0x4B9000
	029 Move X8, [X8+2032]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move W0, W31
	038 Move X1, X31
	039 Move X30, [X31+32]

Method: System.Void IsTrue(System.Boolean condition, System.String message)

Disassembly:
	0x03C63124 LDR X30, [X31], #0x20
	0x03C63128 BR X1
	0x03C6312C STP X30, X21, [X31 - 0x20]!
	0x03C63130 STP X20, X19, [X31 + 0x10]
	0x03C63134 ADRP X21, 0x783000
	0x03C63138 LDR X2, [X21 + 0x480]
	0x03C6313C MOV W19, W1
	0x03C63140 MOV X20, X0
	0x03C63144 CBNZ X2, 0x3C6315C
	0x03C63148 ADRP X0, 0xFFFFFFFFFCE90000
	0x03C6314C ADD X0, X0, 0x8A1
	0x03C63150 BL 0x1C16CB8
	0x03C63154 MOV X2, X0
	0x03C63158 STR X0, [X21 + 0x480]
	0x03C6315C MOV X0, X20
	0x03C63160 MOV W1, W19
	0x03C63164 LDP X20, X19, [X31 + 0x10]
	0x03C63168 LDP X30, X21, [X31], #0x20
	0x03C6316C BR X2
	0x03C63170 STR X30, [X31 - 0x20]!
	0x03C63174 STP X20, X19, [X31 + 0x10]
	0x03C63178 ADRP X20, 0x783000
	0x03C6317C LDR X1, [X20 + 0x488]
	0x03C63180 MOV X19, X0
	0x03C63184 CBNZ X1, 0x3C6319C
	0x03C63188 ADRP X0, 0xFFFFFFFFFCEBA000
	0x03C6318C ADD X0, X0, 0x5AB
	0x03C63190 BL 0x1C16CB8
	0x03C63194 MOV X1, X0
	0x03C63198 STR X0, [X20 + 0x488]
	0x03C6319C MOV X0, X19
	0x03C631A0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x784000
	006 Move W8, [X21+1051]
	007 Move X19, X1
	008 Move W20, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {22}
	013 Move TEMP, X20
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {31}
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Move X21, [X31+40]
	021 Return 
	022 Move X0, 0x4B9000
	023 Move X0, [X0+2032]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1051], W8
	027 Move TEMP, X20
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {17}
	031 Move X20, 0x4B9000
	032 Move X20, [X20+2032]
	033 Move W0, 1
	034 Call AssertionMessageUtil.BooleanFailureMessage, X0
	035 Move X8, [X20]
	036 Move X20, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call Assert.Fail, X0, X1
	049 Return 

Method: System.Void IsFalse(System.Boolean condition, System.String message)

Disassembly:
	0x03C63258 STR X0, [X21 + 0x4A0]
	0x03C6325C MOV X0, X20
	0x03C63260 MOV W1, W19
	0x03C63264 LDP X20, X19, [X31 + 0x10]
	0x03C63268 LDP X30, X21, [X31], #0x20
	0x03C6326C BR X2
	0x03C63270 STR X30, [X31 - 0x20]!
	0x03C63274 STP X20, X19, [X31 + 0x10]
	0x03C63278 ADRP X20, 0x783000
	0x03C6327C LDR X1, [X20 + 0x4A8]
	0x03C63280 MOV X19, X0
	0x03C63284 CBNZ X1, 0x3C6329C
	0x03C63288 ADRP X0, 0xFFFFFFFFFCE8E000
	0x03C6328C ADD X0, X0, 0x566
	0x03C63290 BL 0x1C16CB8
	0x03C63294 MOV X1, X0
	0x03C63298 STR X0, [X20 + 0x4A8]
	0x03C6329C MOV X0, X19
	0x03C632A0 LDP X20, X19, [X31 + 0x10]
	0x03C632A4 LDR X30, [X31], #0x20
	0x03C632A8 BR X1
	0x03C632AC STP X30, X21, [X31 - 0x20]!
	0x03C632B0 STP X20, X19, [X31 + 0x10]
	0x03C632B4 ADRP X21, 0x783000
	0x03C632B8 LDR X2, [X21 + 0x4B0]
	0x03C632BC MOV W19, W1
	0x03C632C0 MOV X20, X0
	0x03C632C4 CBNZ X2, 0x3C632DC
	0x03C632C8 ADRP X0, 0xFFFFFFFFFCEBA000
	0x03C632CC ADD X0, X0, 0x5CC
	0x03C632D0 BL 0x1C16CB8
	0x03C632D4 MOV X2, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x784000
	006 Move W8, [X21+1052]
	007 Move X19, X1
	008 Move W20, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {36}
	013 Move TEMP, X20
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {45}
	017 Move X20, 0x4B9000
	018 Move X20, [X20+2032]
	019 Move W0, W31
	020 Call AssertionMessageUtil.BooleanFailureMessage, X0
	021 Move X8, [X20]
	022 Move X20, X0
	023 Move W9, [X8+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {28}
	026 Move X0, X8
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call Assert.Fail, X0, X1
	035 Return 
	036 Move X0, 0x4B9000
	037 Move X0, [X0+2032]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1052], W8
	041 Move TEMP, X20
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {17}
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 

Method: System.Void AreEqual(T expected, T actual)

Disassembly:
	0x0218435C LDP X0, X8, [X1 + 0x8]
	0x02184360 BLR X8
	0x02184364 LDURB W8, [X29 - 0xC]
	0x02184368 CBNZ W8, 0x2184434
	0x0218436C LDR X19, [X20 + 0x38]
	0x02184370 MOV X0, X26
	0x02184374 MOV X2, X24
	0x02184378 LDR X8, [X19 + 0x8]
	0x0218437C LDR W8, [X8 + 0x28]
	0x02184380 CMP W8, 0x0
	0x02184384 SUB X8, X29, 0x30
	0x02184388 CSEL X1, X21, X8, LT
	0x0218438C BL 0x3EB1AC0
	0x02184390 LDR X0, [X19 + 0x8]
	0x02184394 MOV X1, X26
	0x02184398 BL 0x1C16E04
	0x0218439C LDR X19, [X20 + 0x38]
	0x021843A0 MOV X21, X0
	0x021843A4 MOV X0, X23
	0x021843A8 MOV X2, X24
	0x021843AC LDR X8, [X19 + 0x8]
	0x021843B0 LDR W8, [X8 + 0x28]
	0x021843B4 CMP W8, 0x0
	0x021843B8 SUB X8, X29, 0x28
	0x021843BC CSEL X1, X22, X8, LT
	0x021843C0 BL 0x3EB1AC0
	0x021843C4 LDR X0, [X19 + 0x8]
	0x021843C8 MOV X1, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X20, X2
	007 Move W19, W1
	008 Move W21, W0
	009 Compare X8, 0
	010 JumpIfNotEqual {19}
	011 Move X0, 0x1F98000
	012 Move X0, [X0+2032]
	013 Call 0x1C17CF4
	014 Move X8, [X20+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X20
	018 Call 0x1C5D6E0
	019 Move X8, 0x1F98000
	020 Move X8, [X8+2032]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, [X20+56]
	027 Move W1, W19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move W0, W21
	031 Move X3, [X8+8]
	032 Move X2, X31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call Assert.AreEqual, X0, X1, X2
	036 Return 

Method: System.Void AreEqual(T expected, T actual, System.String message)

Disassembly:
	0x02184580 LDR X8, [X21]
	0x02184584 MOV X1, X0
	0x02184588 MOV X0, X21
	0x0218458C LDR X9, [X8 + 0x2A8]
	0x02184590 LDR X2, [X8 + 0x2B0]
	0x02184594 BLR X9
	0x02184598 TBZ X0, 0x0, 0x21845B8
	0x0218459C ADRP X8, 0x1F97000
	0x021845A0 LDR X8, [X8 + 0x7F0]
	0x021845A4 LDR X0, [X8]
	0x021845A8 LDR W8, [X0 + 0xE0]
	0x021845AC CBZ W8, 0x21845CC
	0x021845B0 CBNZ X20, 0x21845D4
	0x021845B4 B 0x21845F4
	0x021845B8 CBZ X20, 0x21845FC
	0x021845BC LDP X20, X19, [X31 + 0x20]
	0x021845C0 LDP X22, X21, [X31 + 0x10]
	0x021845C4 LDR X30, [X31], #0x30
	0x021845C8 RET
	0x021845CC BL 0x1C16DFC
	0x021845D0 CBZ X20, 0x21845F4
	0x021845D4 ADRP X8, 0x1F6F000
	0x021845D8 LDR X8, [X8 + 0x598]
	0x021845DC LDR X9, [X20]
	0x021845E0 LDR X8, [X8]
	0x021845E4 LDRB W11, [X9 + 0x130]
	0x021845E8 LDRB W10, [X8 + 0x130]
	0x021845EC CMP W11, W10
	0x021845F0 B.CS 0x2184648
	0x021845F4 MOV X0, X31
	0x021845F8 B 0x218465C
	0x021845FC MOV X0, X31
	0x02184600 MOV W1, W31
	0x02184604 MOV X2, X31
	0x02184608 BL 0x3C62650
	0x0218460C ADRP X8, 0x1F97000
	0x02184610 LDR X8, [X8 + 0x7F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+56]
	008 Move X21, X3
	009 Move X19, X2
	010 Move W20, W1
	011 Move W22, W0
	012 Compare X8, 0
	013 JumpIfNotEqual {23}
	014 Move X0, 0x1F98000
	015 Move X0, [X0+2032]
	016 Call 0x1C17CF4
	017 Move X8, [X21+56]
	018 Compare X8, 0
	019 JumpIfNotEqual {23}
	020 Move X0, X21
	021 Call 0x1C5D6E0
	022 Move X8, [X21+56]
	023 Move X0, [X8+8]
	024 Call 0x211B010
	025 Move X8, 0x1F98000
	026 Move X8, [X8+2032]
	027 Move X23, X0
	028 Move X8, [X8]
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X8, [X21+56]
	035 Move W0, W22
	036 Move W1, W20
	037 Move X2, X19
	038 Move X4, [X8+32]
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X3, X23
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Call 0x21848A4, X0, X1, X2, X3
	047 Return 

Method: System.Void AreEqual(T expected, T actual, System.String message, System.Collections.Generic.IEqualityComparer`1<T> comparer)

Disassembly:
	0x021848A4 MOV X0, X19
	0x021848A8 BL 0x1C5C6E0
	0x021848AC MOV X0, X20
	0x021848B0 MOV X1, X31
	0x021848B4 BL 0x3C4A528
	0x021848B8 TBZ X0, 0x0, 0x218493C
	0x021848BC MOV X0, X20
	0x021848C0 MOV X1, X31
	0x021848C4 BL 0x3C4A5A0
	0x021848C8 TBNZ X0, 0x0, 0x218493C
	0x021848CC TBNZ X21, 0x1F, 0x2184974
	0x021848D0 MOV X0, X20
	0x021848D4 MOV X1, X31
	0x021848D8 BL 0x3C4A618
	0x021848DC CMP W0, W21
	0x021848E0 B.LE 0x2184974
	0x021848E4 MOV X0, X20
	0x021848E8 MOV W1, W21
	0x021848EC MOV X2, X31
	0x021848F0 BL 0x3C4A880
	0x021848F4 MOV X1, X31
	0x021848F8 BL 0x33C6948
	0x021848FC MOV X21, X0
	0x02184900 MOV X0, X20
	0x02184904 MOV X1, X31
	0x02184908 BL 0x3C4A690
	0x0218490C LDR X8, [X19 + 0x38]
	0x02184910 ADD W9, W0, 0x3
	0x02184914 CMP W0, 0x0
	0x02184918 LDP X20, X19, [X31 + 0x20]
	0x0218491C LDR X3, [X8 + 0x8]
	0x02184920 CSEL W8, W9, W0, LT
	0x02184924 MOV X0, X21
	0x02184928 LDP X22, X21, [X31 + 0x10]
	0x0218492C SBFM W1, W8, 0x2, 0x1F
	0x02184930 MOVZ W2, 0x1
	0x02184934 LDR X30, [X31], #0x30
	0x02184938 B 0x222255C
	0x0218493C ADRP X0, 0x1F6F000
	0x02184940 LDR X0, [X0 + 0x5B0]
	0x02184944 BL 0x1C16D08
	0x02184948 BL 0x1C16F10
	0x0218494C MOV X20, X0
	0x02184950 ADRP X0, 0x1F97000
	0x02184954 LDR X0, [X0 + 0x800]
	0x02184958 BL 0x1C16D08
	0x0218495C MOV X1, X0
	0x02184960 MOV X0, X20
	0x02184964 MOV X2, X31
	0x02184968 BL 0x337DF1C
	0x0218496C MOV X0, X20
	0x02184970 B 0x21849FC
	0x02184974 STR W21, [X31 + 0xC]
	0x02184978 ADRP X21, 0x1F6F000
	0x0218497C LDR X21, [X21 + 0x758]
	0x02184980 MOV X0, X21
	0x02184984 BL 0x1C16D08
	0x02184988 ADD X1, X31, 0xC
	0x0218498C BL 0x1C16E04
	0x02184990 MOV X22, X0
	0x02184994 MOV X0, X20
	0x02184998 MOV X1, X31
	0x0218499C BL 0x3C4A618
	0x021849A0 STR W0, [X31 + 0x8]
	0x021849A4 MOV X0, X21
	0x021849A8 BL 0x1C16D08
	0x021849AC ADD X1, X31, 0x8
	0x021849B0 BL 0x1C16E04
	0x021849B4 MOV X20, X0
	0x021849B8 ADRP X0, 0x1F97000
	0x021849BC LDR X0, [X0 + 0x808]
	0x021849C0 BL 0x1C16D08
	0x021849C4 MOV X1, X22
	0x021849C8 MOV X2, X20
	0x021849CC MOV X3, X31
	0x021849D0 BL 0x3227BD4
	0x021849D4 MOV X20, X0
	0x021849D8 ADRP X0, 0x1F77000
	0x021849DC LDR X0, [X0 + 0x578]
	0x021849E0 BL 0x1C16D08
	0x021849E4 BL 0x1C16F10
	0x021849E8 MOV X1, X20
	0x021849EC MOV X2, X31
	0x021849F0 MOV X21, X0
	0x021849F4 BL 0x3314A68
	0x021849F8 MOV X0, X21
	0x021849FC MOV X1, X19
	0x02184A00 BL 0x1C16DEC
	0x02184A04 STR X30, [X31 - 0x30]!
	0x02184A08 STP X22, X21, [X31 + 0x10]
	0x02184A0C STP X20, X19, [X31 + 0x20]
	0x02184A10 LDR X8, [X2 + 0x38]
	0x02184A14 MOV X19, X2
	0x02184A18 MOV W21, W1
	0x02184A1C MOV X20, X0
	0x02184A20 CBNZ X8, 0x2184A2C
	0x02184A24 MOV X0, X19
	0x02184A28 BL 0x1C5C6E0
	0x02184A2C MOV X0, X20
	0x02184A30 MOV X1, X31
	0x02184A34 BL 0x3C4A528
	0x02184A38 TBZ X0, 0x0, 0x2184AC8
	0x02184A3C MOV X0, X20
	0x02184A40 MOV X1, X31
	0x02184A44 BL 0x3C4A5A0
	0x02184A48 TBNZ X0, 0x0, 0x2184AC8
	0x02184A4C TBNZ X21, 0x1F, 0x2184B00
	0x02184A50 MOV X0, X20
	0x02184A54 MOV X1, X31
	0x02184A58 BL 0x3C4A618
	0x02184A5C CMP W0, W21
	0x02184A60 B.LE 0x2184B00
	0x02184A64 LDR X8, [X19 + 0x38]
	0x02184A68 LDR X0, [X8]
	0x02184A6C LDR X8, [X0]
	0x02184A70 BLR X8
	0x02184A74 MOV W22, W0
	0x02184A78 MOV X0, X20
	0x02184A7C MOV W1, W21
	0x02184A80 MOV X2, X31
	0x02184A84 BL 0x3C4A880
	0x02184A88 MOV X1, X31
	0x02184A8C BL 0x33C6948
	0x02184A90 MOV X21, X0
	0x02184A94 MOV X0, X20
	0x02184A98 MOV X1, X31
	0x02184A9C BL 0x3C4A690
	0x02184AA0 LDR X8, [X19 + 0x38]
	0x02184AA4 SDIV W1, W0, W22
	0x02184AA8 MOV X0, X21
	0x02184AAC LDP X20, X19, [X31 + 0x20]
	0x02184AB0 LDR X3, [X8 + 0x8]
	0x02184AB4 LDP X22, X21, [X31 + 0x10]
	0x02184AB8 MOVZ W2, 0x1
	0x02184ABC LDR X4, [X3]
	0x02184AC0 LDR X30, [X31], #0x30
	0x02184AC4 BR X4
	0x02184AC8 ADRP X0, 0x1F6F000
	0x02184ACC LDR X0, [X0 + 0x5B0]
	0x02184AD0 BL 0x1C16D08
	0x02184AD4 BL 0x1C16F10
	0x02184AD8 MOV X20, X0
	0x02184ADC ADRP X0, 0x1F97000
	0x02184AE0 LDR X0, [X0 + 0x800]
	0x02184AE4 BL 0x1C16D08
	0x02184AE8 MOV X1, X0
	0x02184AEC MOV X0, X20
	0x02184AF0 MOV X2, X31
	0x02184AF4 BL 0x337DF1C
	0x02184AF8 MOV X0, X20
	0x02184AFC B 0x2184B88
	0x02184B00 STR W21, [X31 + 0xC]
	0x02184B04 ADRP X21, 0x1F6F000
	0x02184B08 LDR X21, [X21 + 0x758]
	0x02184B0C MOV X0, X21
	0x02184B10 BL 0x1C16D08
	0x02184B14 ADD X1, X31, 0xC
	0x02184B18 BL 0x1C16E04
	0x02184B1C MOV X22, X0
	0x02184B20 MOV X0, X20
	0x02184B24 MOV X1, X31
	0x02184B28 BL 0x3C4A618
	0x02184B2C STR W0, [X31 + 0x8]
	0x02184B30 MOV X0, X21
	0x02184B34 BL 0x1C16D08
	0x02184B38 ADD X1, X31, 0x8
	0x02184B3C BL 0x1C16E04
	0x02184B40 MOV X20, X0
	0x02184B44 ADRP X0, 0x1F97000
	0x02184B48 LDR X0, [X0 + 0x808]
	0x02184B4C BL 0x1C16D08
	0x02184B50 MOV X1, X22
	0x02184B54 MOV X2, X20
	0x02184B58 MOV X3, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X20, X4
	010 Move X23, X3
	011 Move X19, X2
	012 Move W21, W1
	013 Move W22, W0
	014 Compare X8, 0
	015 JumpIfNotEqual {33}
	016 Move X0, 0x1F98000
	017 Move X0, [X0+2032]
	018 Call 0x1C17CF4
	019 Move X0, 0x1F98000
	020 Move X0, [X0+2040]
	021 Call 0x1C17CF4
	022 Move X0, 0x1F70000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x1F70000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X8, [X20+56]
	029 Compare X8, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X20
	032 Call 0x1C5D6E0
	033 Move X8, 0x1F70000
	034 Move X8, [X8+1728]
	035 Move X0, [X8]
	036 Move X8, 0x1F98000
	037 Move X8, [X8+2040]
	038 Move W9, [X0+224]
	039 Move X24, [X8]
	040 Compare W9, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X24
	044 Move X1, X31
	045 Call Type.GetTypeFromHandle, X0
	046 Move X8, [X20+56]
	047 Move X24, X0
	048 Move X1, X31
	049 Move X8, [X8]
	050 Move X0, X8
	051 Call Type.GetTypeFromHandle, X0
	052 Compare X24, 0
	053 JumpIfEqual {193}
	054 Move X8, [X24]
	055 Move X1, X0
	056 Move X0, X24
	057 Move X9, [X8+680]
	058 Move X2, [X8+688]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {97}
	064 Move [X31+12], W22
	065 Move X8, [X20+56]
	066 Add X1, X31, 12
	067 Move X0, [X8+8]
	068 Call 0x1C17E04
	069 Move [X31+8], W21
	070 Move X8, [X20+56]
	071 Move X21, X0
	072 Add X1, X31, 8
	073 Move X8, [X8+8]
	074 Move X0, X8
	075 Call 0x1C17E04
	076 Move X8, 0x1F98000
	077 Move X8, [X8+2032]
	078 Move X20, X0
	079 Move X8, [X8]
	080 Move W9, [X8+224]
	081 Compare W9, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X8
	084 Call 0x1C17DFC
	085 Move X8, 0x1F70000
	086 Move X8, [X8+1432]
	087 Move X8, [X8]
	088 Compare X21, 0
	089 JumpIfEqual {94}
	090 Move X9, [X21]
	091 Move W10, [X8+304]
	092 Move W11, [X9+304]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, X31
	095 Compare X20, 0
	096 JumpIfNotEqual {172}
	097 Compare X23, 0
	098 JumpIfEqual {193}
	099 Move X8, [X20+56]
	100 Move X1, [X8+16]
	101 Move W8, [X1+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {109}
	106 Move X0, X1
	107 Call 0x1C5D684
	108 Move X1, X0
	109 Move X8, [X23]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X23
	120 Move W2, W31
	121 Call 0x1C5D788
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X3, [X0+8]
	127 Move X0, X23
	128 Move W1, W21
	129 Move W2, W22
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {185}
	135 Move [X31+12], W21
	136 Move X8, [X20+56]
	137 Add X1, X31, 12
	138 Move X0, [X8+8]
	139 Call 0x1C17E04
	140 Move [X31+8], W22
	141 Move X8, [X20+56]
	142 Move X20, X0
	143 Add X1, X31, 8
	144 Move X8, [X8+8]
	145 Move X0, X8
	146 Call 0x1C17E04
	147 Move X1, X0
	148 Move W2, 1
	149 Move X0, X20
	150 Move X3, X31
	151 Call AssertionMessageUtil.GetEqualityMessage, X0, X1, X2
	152 Move X8, 0x1F98000
	153 Move X8, [X8+2032]
	154 Move X20, X0
	155 Move X8, [X8]
	156 Move W9, [X8+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X8
	160 Call 0x1C17DFC
	161 Move X0, X20
	162 Move X1, X19
	163 Move X2, X31
	164 Call Assert.Fail, X0, X1
	165 Move X9, [X9+200]
	166 Add X9, X9, X10
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CSEL not yet implemented."
	170 Compare X20, 0
	171 JumpIfEqual {176}
	172 Move X9, [X20]
	173 Move W10, [X8+304]
	174 Move W11, [X9+304]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X1, X31
	177 Move X9, [X9+200]
	178 Add X9, X9, X10
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 NotImplemented "Instruction CSEL not yet implemented."
	182 Move X2, X19
	183 Move X3, X31
	184 Call Assert.AreEqual, X0, X1, X2
	185 Move X20, [X31+48]
	186 Move X19, [X31+56]
	187 Move X22, [X31+32]
	188 Move X21, [X31+40]
	189 Move X24, [X31+16]
	190 Move X23, [X31+24]
	191 Move X30, [X31+64]
	192 Return 
	193 Call 0x1C17F20

Method: System.Void AreEqual(UnityEngine.Object expected, UnityEngine.Object actual, System.String message)

Disassembly:
	0x03C632D8 STR X0, [X21 + 0x4B0]
	0x03C632DC MOV X0, X20
	0x03C632E0 MOV W1, W19
	0x03C632E4 LDP X20, X19, [X31 + 0x10]
	0x03C632E8 LDP X30, X21, [X31], #0x20
	0x03C632EC BR X2
	0x03C632F0 STR X30, [X31 - 0x20]!
	0x03C632F4 STP X20, X19, [X31 + 0x10]
	0x03C632F8 ADRP X20, 0x783000
	0x03C632FC LDR X1, [X20 + 0x4B8]
	0x03C63300 MOV X19, X0
	0x03C63304 CBNZ X1, 0x3C6331C
	0x03C63308 ADRP X0, 0xFFFFFFFFFCE96000
	0x03C6330C ADD X0, X0, 0x9EB
	0x03C63310 BL 0x1C16CB8
	0x03C63314 MOV X1, X0
	0x03C63318 STR X0, [X20 + 0x4B8]
	0x03C6331C MOV X0, X19
	0x03C63320 LDP X20, X19, [X31 + 0x10]
	0x03C63324 LDR X30, [X31], #0x20
	0x03C63328 BR X1
	0x03C6332C STP X30, X21, [X31 - 0x20]!
	0x03C63330 STP X20, X19, [X31 + 0x10]
	0x03C63334 ADRP X21, 0x783000
	0x03C63338 LDR X2, [X21 + 0x4C0]
	0x03C6333C MOV X19, X1
	0x03C63340 MOV X20, X0
	0x03C63344 CBNZ X2, 0x3C6335C
	0x03C63348 ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C6334C ADD X0, X0, 0x8D7
	0x03C63350 BL 0x1C16CB8
	0x03C63354 MOV X2, X0
	0x03C63358 STR X0, [X21 + 0x4C0]
	0x03C6335C MOV X0, X20
	0x03C63360 MOV X1, X19
	0x03C63364 LDP X20, X19, [X31 + 0x10]
	0x03C63368 LDP X30, X21, [X31], #0x20
	0x03C6336C BR X2
	0x03C63370 STR X30, [X31 - 0x20]!
	0x03C63374 STP X20, X19, [X31 + 0x10]
	0x03C63378 ADRP X20, 0x783000
	0x03C6337C LDR X1, [X20 + 0x4C8]
	0x03C63380 MOV X19, X0
	0x03C63384 CBNZ X1, 0x3C6339C
	0x03C63388 ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C6338C ADD X0, X0, 0x909
	0x03C63390 BL 0x1C16CB8
	0x03C63394 MOV X1, X0
	0x03C63398 STR X0, [X20 + 0x4C8]
	0x03C6339C MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x784000
	008 Move X23, 0x491000
	009 Move W8, [X22+1053]
	010 Move X23, [X23+1432]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4B9000
	019 Move X0, [X0+2032]
	020 Call 0x1C17CF4
	021 Move X0, 0x491000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+1053], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X21
	033 Move X2, X31
	034 Call Object.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {62}
	039 Move X22, 0x4B9000
	040 Move X22, [X22+2032]
	041 Move W2, 1
	042 Move X0, X20
	043 Move X1, X21
	044 Call AssertionMessageUtil.GetEqualityMessage, X0, X1, X2
	045 Move X8, [X22]
	046 Move X20, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Call Assert.Fail, X0, X1
	061 Return 
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Return 

Method: System.Void IsNull(T value)

Disassembly:
	0x02185678 MOV X22, X0
	0x0218567C CBNZ X8, 0x218569C
	0x02185680 ADRP X0, 0x1F96000
	0x02185684 LDR X0, [X0 + 0x810]
	0x02185688 BL 0x1C16CF4
	0x0218568C LDR X8, [X21 + 0x38]
	0x02185690 CBNZ X8, 0x218569C
	0x02185694 MOV X0, X21
	0x02185698 BL 0x1C5C6E0
	0x0218569C ADRP X8, 0x1F96000
	0x021856A0 LDR X8, [X8 + 0x810]
	0x021856A4 LDR X0, [X8]
	0x021856A8 LDR W8, [X0 + 0xE0]
	0x021856AC CBNZ W8, 0x21856B4
	0x021856B0 BL 0x1C16DFC
	0x021856B4 LDR X8, [X21 + 0x38]
	0x021856B8 MOV X0, X22
	0x021856BC MOV X1, X20
	0x021856C0 MOV X2, X19
	0x021856C4 LDR X3, [X8 + 0x10]
	0x021856C8 LDP X20, X19, [X31 + 0x20]
	0x021856CC LDP X22, X21, [X31 + 0x10]
	0x021856D0 LDR X30, [X31], #0x30
	0x021856D4 B 0x1FD3CA0
	0x021856D8 STR X30, [X31 - 0x30]!
	0x021856DC STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {17}
	009 Move X0, 0x1F97000
	010 Move X0, [X0+2032]
	011 Call 0x1C17CF4
	012 Move X8, [X20+56]
	013 Compare X8, 0
	014 JumpIfNotEqual {17}
	015 Move X0, X20
	016 Call 0x1C5D6E0
	017 Move X8, 0x1F97000
	018 Move X8, [X8+2032]
	019 Move X0, [X8]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X20+56]
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X2, [X8+8]
	030 Move X30, [X31+32]

Method: System.Void IsNull(T value, System.String message)

Disassembly:
	0x021856E0 STP X20, X19, [X31 + 0x20]
	0x021856E4 LDR X8, [X3 + 0x38]
	0x021856E8 MOV X21, X3
	0x021856EC MOV X19, X2
	0x021856F0 MOV X20, X1
	0x021856F4 MOV X22, X0
	0x021856F8 CBNZ X8, 0x2185718
	0x021856FC ADRP X0, 0x1F96000
	0x02185700 LDR X0, [X0 + 0x810]
	0x02185704 BL 0x1C16CF4
	0x02185708 LDR X8, [X21 + 0x38]
	0x0218570C CBNZ X8, 0x2185718
	0x02185710 MOV X0, X21
	0x02185714 BL 0x1C5C6E0
	0x02185718 ADRP X8, 0x1F96000
	0x0218571C LDR X8, [X8 + 0x810]
	0x02185720 LDR X0, [X8]
	0x02185724 LDR W8, [X0 + 0xE0]
	0x02185728 CBNZ W8, 0x2185730
	0x0218572C BL 0x1C16DFC
	0x02185730 LDR X8, [X21 + 0x38]
	0x02185734 MOV X0, X22
	0x02185738 MOV X1, X20
	0x0218573C MOV X2, X19
	0x02185740 LDR X3, [X8 + 0x10]
	0x02185744 LDP X20, X19, [X31 + 0x20]
	0x02185748 LDP X22, X21, [X31 + 0x10]
	0x0218574C LDR X30, [X31], #0x30
	0x02185750 B 0x1FD3EB4
	0x02185754 STR X30, [X31 - 0x30]!
	0x02185758 STP X22, X21, [X31 + 0x10]
	0x0218575C STP X20, X19, [X31 + 0x20]
	0x02185760 LDR X8, [X3 + 0x38]
	0x02185764 MOV X21, X3
	0x02185768 MOV X19, X2
	0x0218576C MOV X20, X1
	0x02185770 MOV X22, X0
	0x02185774 CBNZ X8, 0x2185794
	0x02185778 ADRP X0, 0x1F96000
	0x0218577C LDR X0, [X0 + 0x810]
	0x02185780 BL 0x1C16CF4
	0x02185784 LDR X8, [X21 + 0x38]
	0x02185788 CBNZ X8, 0x2185794
	0x0218578C MOV X0, X21
	0x02185790 BL 0x1C5C6E0
	0x02185794 ADRP X8, 0x1F96000
	0x02185798 LDR X8, [X8 + 0x810]
	0x0218579C LDR X0, [X8]
	0x021857A0 LDR W8, [X0 + 0xE0]
	0x021857A4 CBNZ W8, 0x21857AC
	0x021857A8 BL 0x1C16DFC
	0x021857AC LDR X8, [X21 + 0x38]
	0x021857B0 MOV X0, X22
	0x021857B4 MOV X1, X20
	0x021857B8 MOV X2, X19
	0x021857BC LDR X3, [X8 + 0x10]
	0x021857C0 LDP X20, X19, [X31 + 0x20]
	0x021857C4 LDP X22, X21, [X31 + 0x10]
	0x021857C8 LDR X30, [X31], #0x30
	0x021857CC B 0x1FD40C8
	0x021857D0 STR X30, [X31 - 0x30]!
	0x021857D4 STP X22, X21, [X31 + 0x10]
	0x021857D8 STP X20, X19, [X31 + 0x20]
	0x021857DC LDR X8, [X3 + 0x38]
	0x021857E0 MOV X21, X3
	0x021857E4 MOV X19, X2
	0x021857E8 MOV X20, X1
	0x021857EC MOV X22, X0
	0x021857F0 CBNZ X8, 0x2185810
	0x021857F4 ADRP X0, 0x1F96000
	0x021857F8 LDR X0, [X0 + 0x810]
	0x021857FC BL 0x1C16CF4
	0x02185800 LDR X8, [X21 + 0x38]
	0x02185804 CBNZ X8, 0x2185810
	0x02185808 MOV X0, X21
	0x0218580C BL 0x1C5C6E0
	0x02185810 ADRP X8, 0x1F96000
	0x02185814 LDR X8, [X8 + 0x810]
	0x02185818 LDR X0, [X8]
	0x0218581C LDR W8, [X0 + 0xE0]
	0x02185820 CBNZ W8, 0x2185828
	0x02185824 BL 0x1C16DFC
	0x02185828 LDR X8, [X21 + 0x38]
	0x0218582C MOV X0, X22
	0x02185830 MOV X1, X20
	0x02185834 MOV X2, X19
	0x02185838 LDR X3, [X8 + 0x10]
	0x0218583C LDP X20, X19, [X31 + 0x20]
	0x02185840 LDP X22, X21, [X31 + 0x10]
	0x02185844 LDR X30, [X31], #0x30
	0x02185848 B 0x1FD42DC
	0x0218584C STR X30, [X31 - 0x30]!
	0x02185850 STP X22, X21, [X31 + 0x10]
	0x02185854 STP X20, X19, [X31 + 0x20]
	0x02185858 LDR X8, [X3 + 0x38]
	0x0218585C MOV X21, X3
	0x02185860 MOV X19, X2
	0x02185864 MOV X20, X1
	0x02185868 MOV X22, X0
	0x0218586C CBNZ X8, 0x218588C
	0x02185870 ADRP X0, 0x1F96000
	0x02185874 LDR X0, [X0 + 0x810]
	0x02185878 BL 0x1C16CF4
	0x0218587C LDR X8, [X21 + 0x38]
	0x02185880 CBNZ X8, 0x218588C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X21, X2
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {29}
	012 Move X0, 0x1F97000
	013 Move X0, [X0+2032]
	014 Call 0x1C17CF4
	015 Move X0, 0x1F97000
	016 Move X0, [X0+2040]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F6F000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F6F000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move X8, [X21+56]
	025 Compare X8, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X21
	028 Call 0x1C5D6E0
	029 Move X8, 0x1F6F000
	030 Move X8, [X8+1728]
	031 Move X0, [X8]
	032 Move X8, 0x1F97000
	033 Move X8, [X8+2040]
	034 Move W9, [X0+224]
	035 Move X22, [X8]
	036 Compare W9, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X22
	040 Move X1, X31
	041 Call Type.GetTypeFromHandle, X0
	042 Move X8, [X21+56]
	043 Move X21, X0
	044 Move X1, X31
	045 Move X8, [X8]
	046 Move X0, X8
	047 Call Type.GetTypeFromHandle, X0
	048 Compare X21, 0
	049 JumpIfEqual {124}
	050 Move X8, [X21]
	051 Move X1, X0
	052 Move X0, X21
	053 Move X9, [X8+680]
	054 Move X2, [X8+688]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {68}
	060 Move X8, 0x1F97000
	061 Move X8, [X8+2032]
	062 Move X0, [X8]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfEqual {93}
	066 Compare X20, 0
	067 JumpIfNotEqual {96}
	068 Compare X20, 0
	069 JumpIfEqual {104}
	070 Move W1, 1
	071 Move X0, X20
	072 Move X2, X31
	073 Call AssertionMessageUtil.NullFailureMessage, X0, X1
	074 Move X8, 0x1F97000
	075 Move X8, [X8+2032]
	076 Move X20, X0
	077 Move X8, [X8]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X20
	084 Move X1, X19
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X2, X31
	090 Move X30, [X31+48]
	091 Call Assert.Fail, X0, X1
	092 Return 
	093 Call 0x1C17DFC
	094 Compare X20, 0
	095 JumpIfEqual {103}
	096 Move X8, 0x1F6F000
	097 Move X8, [X8+1432]
	098 Move X9, [X20]
	099 Move X8, [X8]
	100 Move W11, [X9+304]
	101 Move W10, [X8+304]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X31
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X30, [X31+48]
	109 Return 
	110 Move X9, [X9+200]
	111 Add X9, X9, X10
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 Move X1, X19
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X2, X31
	121 Move X30, [X31+48]
	122 Call Assert.IsNull, X0, X1
	123 Return 
	124 Call 0x1C17F20

Method: System.Void IsNull(UnityEngine.Object value, System.String message)

Disassembly:
	0x03C63594 LDR X8, [X22 + 0x4A0]
	0x03C63598 CBNZ X8, 0x3C635B0
	0x03C6359C ADRP X0, 0xFFFFFFFFFCEB0000
	0x03C635A0 ADD X0, X0, 0x2AD
	0x03C635A4 BL 0x1C16CB8
	0x03C635A8 MOV X8, X0
	0x03C635AC STR X0, [X22 + 0x4A0]
	0x03C635B0 MOV X0, X20
	0x03C635B4 MOV W1, W19
	0x03C635B8 BLR X8
	0x03C635BC LDR X8, [X21]
	0x03C635C0 LDR X8, [X8 + 0xB8]
	0x03C635C4 LDR X9, [X8 + 0x8]
	0x03C635C8 STR X9, [X8]
	0x03C635CC LDR X8, [X21]
	0x03C635D0 LDR X8, [X8 + 0xB8]
	0x03C635D4 LDR X8, [X8 + 0x8]
	0x03C635D8 CBZ X8, 0x3C63614
	0x03C635DC ADRP X20, 0x783000
	0x03C635E0 LDR X1, [X20 + 0x4F8]
	0x03C635E4 LDR X19, [X8 + 0x10]
	0x03C635E8 CBNZ X1, 0x3C63600
	0x03C635EC ADRP X0, 0xFFFFFFFFFCEA0000
	0x03C635F0 ADD X0, X0, 0x760
	0x03C635F4 BL 0x1C16CB8
	0x03C635F8 MOV X1, X0
	0x03C635FC STR X0, [X20 + 0x4F8]
	0x03C63600 MOV X0, X19
	0x03C63604 LDP X20, X19, [X31 + 0x20]
	0x03C63608 LDP X22, X21, [X31 + 0x10]
	0x03C6360C LDR X30, [X31], #0x30
	0x03C63610 BR X1
	0x03C63614 BL 0x1C16F20
	0x03C63618 STP X30, X21, [X31 - 0x20]!
	0x03C6361C STP X20, X19, [X31 + 0x10]
	0x03C63620 MOV W20, W1
	0x03C63624 MOV X1, X31
	0x03C63628 MOV X19, X0
	0x03C6362C BL 0x33BDD8C
	0x03C63630 ADRP X21, 0x783000
	0x03C63634 LDR X8, [X21 + 0x4D0]
	0x03C63638 CBNZ X8, 0x3C63650
	0x03C6363C ADRP X0, 0xFFFFFFFFFCEB6000
	0x03C63640 ADD X0, X0, 0x9B
	0x03C63644 BL 0x1C16CB8
	0x03C63648 MOV X8, X0
	0x03C6364C STR X0, [X21 + 0x4D0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x784000
	007 Move X22, 0x491000
	008 Move W8, [X21+1054]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4B9000
	017 Move X0, [X0+2032]
	018 Call 0x1C17CF4
	019 Move X0, 0x491000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1054], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Inequality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {57}
	037 Move X20, 0x4B9000
	038 Move X20, [X20+2032]
	039 Move W1, 1
	040 Call AssertionMessageUtil.NullFailureMessage, X0, X1
	041 Move X8, [X20]
	042 Move X20, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Call Assert.Fail, X0, X1
	056 Return 
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 

Method: System.Void IsNotNull(T value)

Disassembly:
	0x0218546C STP X22, X21, [X31 + 0x10]
	0x02185470 STP X20, X19, [X31 + 0x20]
	0x02185474 LDR X8, [X3 + 0x38]
	0x02185478 MOV X21, X3
	0x0218547C MOV X19, X2
	0x02185480 MOV X20, X1
	0x02185484 MOV X22, X0
	0x02185488 CBNZ X8, 0x21854A8
	0x0218548C ADRP X0, 0x1F96000
	0x02185490 LDR X0, [X0 + 0x810]
	0x02185494 BL 0x1C16CF4
	0x02185498 LDR X8, [X21 + 0x38]
	0x0218549C CBNZ X8, 0x21854A8
	0x021854A0 MOV X0, X21
	0x021854A4 BL 0x1C5C6E0
	0x021854A8 ADRP X8, 0x1F96000
	0x021854AC LDR X8, [X8 + 0x810]
	0x021854B0 LDR X0, [X8]
	0x021854B4 LDR W8, [X0 + 0xE0]
	0x021854B8 CBNZ W8, 0x21854C0
	0x021854BC BL 0x1C16DFC
	0x021854C0 LDR X8, [X21 + 0x38]
	0x021854C4 MOV X0, X22
	0x021854C8 MOV X1, X20
	0x021854CC MOV X2, X19
	0x021854D0 LDR X3, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {17}
	009 Move X0, 0x1F97000
	010 Move X0, [X0+2032]
	011 Call 0x1C17CF4
	012 Move X8, [X20+56]
	013 Compare X8, 0
	014 JumpIfNotEqual {17}
	015 Move X0, X20
	016 Call 0x1C5D6E0
	017 Move X8, 0x1F97000
	018 Move X8, [X8+2032]
	019 Move X0, [X8]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X8, [X20+56]
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X2, [X8+8]
	030 Move X30, [X31+32]

Method: System.Void IsNotNull(T value, System.String message)

Disassembly:
	0x021854D4 LDP X20, X19, [X31 + 0x20]
	0x021854D8 LDP X22, X21, [X31 + 0x10]
	0x021854DC LDR X4, [X3]
	0x021854E0 LDR X30, [X31], #0x30
	0x021854E4 BR X4
	0x021854E8 STR X30, [X31 - 0x30]!
	0x021854EC STP X22, X21, [X31 + 0x10]
	0x021854F0 STP X20, X19, [X31 + 0x20]
	0x021854F4 LDR X8, [X3 + 0x38]
	0x021854F8 MOV X21, X3
	0x021854FC MOV X19, X2
	0x02185500 MOV X20, X1
	0x02185504 MOV X22, X0
	0x02185508 CBNZ X8, 0x2185528
	0x0218550C ADRP X0, 0x1F96000
	0x02185510 LDR X0, [X0 + 0x810]
	0x02185514 BL 0x1C16CF4
	0x02185518 LDR X8, [X21 + 0x38]
	0x0218551C CBNZ X8, 0x2185528
	0x02185520 MOV X0, X21
	0x02185524 BL 0x1C5C6E0
	0x02185528 ADRP X8, 0x1F96000
	0x0218552C LDR X8, [X8 + 0x810]
	0x02185530 LDR X0, [X8]
	0x02185534 LDR W8, [X0 + 0xE0]
	0x02185538 CBNZ W8, 0x2185540
	0x0218553C BL 0x1C16DFC
	0x02185540 LDR X8, [X21 + 0x38]
	0x02185544 MOV X0, X22
	0x02185548 MOV X1, X20
	0x0218554C MOV X2, X19
	0x02185550 LDR X3, [X8 + 0x10]
	0x02185554 LDP X20, X19, [X31 + 0x20]
	0x02185558 LDP X22, X21, [X31 + 0x10]
	0x0218555C LDR X30, [X31], #0x30
	0x02185560 B 0x1FD3664
	0x02185564 STR X30, [X31 - 0x30]!
	0x02185568 STP X22, X21, [X31 + 0x10]
	0x0218556C STP X20, X19, [X31 + 0x20]
	0x02185570 LDR X8, [X3 + 0x38]
	0x02185574 MOV X21, X3
	0x02185578 MOV X19, X2
	0x0218557C MOV X20, X1
	0x02185580 MOV X22, X0
	0x02185584 CBNZ X8, 0x21855A4
	0x02185588 ADRP X0, 0x1F96000
	0x0218558C LDR X0, [X0 + 0x810]
	0x02185590 BL 0x1C16CF4
	0x02185594 LDR X8, [X21 + 0x38]
	0x02185598 CBNZ X8, 0x21855A4
	0x0218559C MOV X0, X21
	0x021855A0 BL 0x1C5C6E0
	0x021855A4 ADRP X8, 0x1F96000
	0x021855A8 LDR X8, [X8 + 0x810]
	0x021855AC LDR X0, [X8]
	0x021855B0 LDR W8, [X0 + 0xE0]
	0x021855B4 CBNZ W8, 0x21855BC
	0x021855B8 BL 0x1C16DFC
	0x021855BC LDR X8, [X21 + 0x38]
	0x021855C0 MOV X0, X22
	0x021855C4 MOV X1, X20
	0x021855C8 MOV X2, X19
	0x021855CC LDR X3, [X8 + 0x10]
	0x021855D0 LDP X20, X19, [X31 + 0x20]
	0x021855D4 LDP X22, X21, [X31 + 0x10]
	0x021855D8 LDR X30, [X31], #0x30
	0x021855DC B 0x1FD3878
	0x021855E0 STR X30, [X31 - 0x30]!
	0x021855E4 STP X22, X21, [X31 + 0x10]
	0x021855E8 STP X20, X19, [X31 + 0x20]
	0x021855EC LDR X8, [X3 + 0x38]
	0x021855F0 MOV X21, X3
	0x021855F4 MOV X19, X2
	0x021855F8 MOV X20, X1
	0x021855FC MOV X22, X0
	0x02185600 CBNZ X8, 0x2185620
	0x02185604 ADRP X0, 0x1F96000
	0x02185608 LDR X0, [X0 + 0x810]
	0x0218560C BL 0x1C16CF4
	0x02185610 LDR X8, [X21 + 0x38]
	0x02185614 CBNZ X8, 0x2185620
	0x02185618 MOV X0, X21
	0x0218561C BL 0x1C5C6E0
	0x02185620 ADRP X8, 0x1F96000
	0x02185624 LDR X8, [X8 + 0x810]
	0x02185628 LDR X0, [X8]
	0x0218562C LDR W8, [X0 + 0xE0]
	0x02185630 CBNZ W8, 0x2185638
	0x02185634 BL 0x1C16DFC
	0x02185638 LDR X8, [X21 + 0x38]
	0x0218563C MOV X0, X22
	0x02185640 MOV X1, X20
	0x02185644 MOV X2, X19
	0x02185648 LDR X3, [X8 + 0x10]
	0x0218564C LDP X20, X19, [X31 + 0x20]
	0x02185650 LDP X22, X21, [X31 + 0x10]
	0x02185654 LDR X30, [X31], #0x30
	0x02185658 B 0x1FD3A8C
	0x0218565C STR X30, [X31 - 0x30]!
	0x02185660 STP X22, X21, [X31 + 0x10]
	0x02185664 STP X20, X19, [X31 + 0x20]
	0x02185668 LDR X8, [X3 + 0x38]
	0x0218566C MOV X21, X3
	0x02185670 MOV X19, X2
	0x02185674 MOV X20, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X21, X2
	008 Move X19, X1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {29}
	012 Move X0, 0x1F97000
	013 Move X0, [X0+2032]
	014 Call 0x1C17CF4
	015 Move X0, 0x1F97000
	016 Move X0, [X0+2040]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F6F000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F6F000
	022 Move X0, [X0+1728]
	023 Call 0x1C17CF4
	024 Move X8, [X21+56]
	025 Compare X8, 0
	026 JumpIfNotEqual {29}
	027 Move X0, X21
	028 Call 0x1C5D6E0
	029 Move X8, 0x1F6F000
	030 Move X8, [X8+1728]
	031 Move X0, [X8]
	032 Move X8, 0x1F97000
	033 Move X8, [X8+2040]
	034 Move W9, [X0+224]
	035 Move X22, [X8]
	036 Compare W9, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X22
	040 Move X1, X31
	041 Call Type.GetTypeFromHandle, X0
	042 Move X8, [X21+56]
	043 Move X21, X0
	044 Move X1, X31
	045 Move X8, [X8]
	046 Move X0, X8
	047 Call Type.GetTypeFromHandle, X0
	048 Compare X21, 0
	049 JumpIfEqual {124}
	050 Move X8, [X21]
	051 Move X1, X0
	052 Move X0, X21
	053 Move X9, [X8+680]
	054 Move X2, [X8+688]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {68}
	060 Move X8, 0x1F97000
	061 Move X8, [X8+2032]
	062 Move X0, [X8]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfEqual {76}
	066 Compare X20, 0
	067 JumpIfNotEqual {79}
	068 Compare X20, 0
	069 JumpIfEqual {87}
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return 
	076 Call 0x1C17DFC
	077 Compare X20, 0
	078 JumpIfEqual {86}
	079 Move X8, 0x1F6F000
	080 Move X8, [X8+1432]
	081 Move X9, [X20]
	082 Move X8, [X8]
	083 Move W11, [X9+304]
	084 Move W10, [X8+304]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X31
	087 Move X0, X31
	088 Move W1, W31
	089 Move X2, X31
	090 Call AssertionMessageUtil.NullFailureMessage, X0, X1
	091 Move X8, 0x1F97000
	092 Move X8, [X8+2032]
	093 Move X20, X0
	094 Move X8, [X8]
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X0, X20
	101 Move X1, X19
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X2, X31
	107 Move X30, [X31+48]
	108 Call Assert.Fail, X0, X1
	109 Return 
	110 Move X9, [X9+200]
	111 Add X9, X9, X10
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 Move X1, X19
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X2, X31
	121 Move X30, [X31+48]
	122 Call Assert.IsNotNull, X0, X1
	123 Return 
	124 Call 0x1C17F20

Method: System.Void IsNotNull(UnityEngine.Object value, System.String message)

Disassembly:
	0x03C637B8 STP X20, X19, [X31 + 0x10]
	0x03C637BC CBZ X1, 0x3C63820
	0x03C637C0 MOV X19, X0
	0x03C637C4 MOV X20, X1
	0x03C637C8 LDR X0, [X1 + 0x10]
	0x03C637CC LDR X1, [X19 + 0x10]
	0x03C637D0 MOV X2, X31
	0x03C637D4 BL 0x33C5D2C
	0x03C637D8 TBZ X0, 0x0, 0x3C63814
	0x03C637DC ADRP X21, 0x783000
	0x03C637E0 LDR X2, [X21 + 0x4E8]
	0x03C637E4 LDR X20, [X20 + 0x10]
	0x03C637E8 CBNZ X2, 0x3C63800
	0x03C637EC ADRP X0, 0xFFFFFFFFFCEC2000
	0x03C637F0 ADD X0, X0, 0x435
	0x03C637F4 BL 0x1C16CB8
	0x03C637F8 MOV X2, X0
	0x03C637FC STR X0, [X21 + 0x4E8]
	0x03C63800 MOV X0, X19
	0x03C63804 MOV X1, X20
	0x03C63808 LDP X20, X19, [X31 + 0x10]
	0x03C6380C LDP X30, X21, [X31], #0x20
	0x03C63810 BR X2
	0x03C63814 LDP X20, X19, [X31 + 0x10]
	0x03C63818 LDP X30, X21, [X31], #0x20
	0x03C6381C RET
	0x03C63820 BL 0x1C16F20
	0x03C63824 STR X30, [X31 - 0x20]!
	0x03C63828 STP X20, X19, [X31 + 0x10]
	0x03C6382C ADRP X20, 0x783000
	0x03C63830 LDR X8, [X20 + 0x448]
	0x03C63834 MOV X19, X0
	0x03C63838 CBNZ X8, 0x3C63850
	0x03C6383C ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C63840 ADD X0, X0, 0x530
	0x03C63844 BL 0x1C16CB8
	0x03C63848 MOV X8, X0
	0x03C6384C STR X0, [X20 + 0x448]
	0x03C63850 MOV X0, X19
	0x03C63854 BLR X8
	0x03C63858 LDP X20, X19, [X31 + 0x10]
	0x03C6385C AND W0, W0, 0x1
	0x03C63860 LDR X30, [X31], #0x20
	0x03C63864 RET
	0x03C63868 STR X30, [X31 - 0x20]!
	0x03C6386C STP X20, X19, [X31 + 0x10]
	0x03C63870 ADRP X20, 0x783000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x784000
	007 Move X22, 0x491000
	008 Move W8, [X21+1055]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4B9000
	017 Move X0, [X0+2032]
	018 Call 0x1C17CF4
	019 Move X0, 0x491000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1055], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {57}
	037 Move X20, 0x4B9000
	038 Move X20, [X20+2032]
	039 Move W1, W31
	040 Call AssertionMessageUtil.NullFailureMessage, X0, X1
	041 Move X8, [X20]
	042 Move X20, X0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Call Assert.Fail, X0, X1
	056 Return 
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 

Method: System.Void AreEqual(System.Int32 expected, System.Int32 actual)

Disassembly:
	0x03C63874 LDR X8, [X20 + 0x448]
	0x03C63878 MOV X19, X0
	0x03C6387C CBNZ X8, 0x3C63894
	0x03C63880 ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C63884 ADD X0, X0, 0x530
	0x03C63888 BL 0x1C16CB8
	0x03C6388C MOV X8, X0
	0x03C63890 STR X0, [X20 + 0x448]
	0x03C63894 MOV X0, X19
	0x03C63898 BLR X8
	0x03C6389C LDP X20, X19, [X31 + 0x10]
	0x03C638A0 UBFM W0, W0, 0x1, 0x1
	0x03C638A4 LDR X30, [X31], #0x20
	0x03C638A8 RET
	0x03C638AC STR X30, [X31 - 0x20]!
	0x03C638B0 STP X20, X19, [X31 + 0x10]
	0x03C638B4 ADRP X20, 0x783000
	0x03C638B8 LDR X8, [X20 + 0x448]
	0x03C638BC MOV X19, X0
	0x03C638C0 CBNZ X8, 0x3C638D8
	0x03C638C4 ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C638C8 ADD X0, X0, 0x530
	0x03C638CC BL 0x1C16CB8
	0x03C638D0 MOV X8, X0
	0x03C638D4 STR X0, [X20 + 0x448]
	0x03C638D8 MOV X0, X19
	0x03C638DC BLR X8
	0x03C638E0 LDP X20, X19, [X31 + 0x10]
	0x03C638E4 UBFM W0, W0, 0x2, 0x2
	0x03C638E8 LDR X30, [X31], #0x20
	0x03C638EC RET
	0x03C638F0 STR X30, [X31 - 0x20]!
	0x03C638F4 STP X20, X19, [X31 + 0x10]
	0x03C638F8 ADRP X20, 0x783000
	0x03C638FC LDR X8, [X20 + 0x448]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x784000
	006 Move W8, [X21+1056]
	007 Move W19, W1
	008 Move W20, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x4FE000
	014 Move X0, [X0+240]
	015 Call 0x1C17CF4
	016 Move X0, 0x4B9000
	017 Move X0, [X0+2032]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1056], W8
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 
	027 Move X8, 0x4B9000
	028 Move X8, [X8+2032]
	029 Move X21, 0x4FE000
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Move X21, [X21+240]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X3, [X21]
	037 Move W0, W20
	038 Move W1, W19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X2, X31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call 0x2184580, X0, X1, X2
	045 Return 

Method: System.Void .cctor()

Disassembly:
	0x03C63900 MOV X19, X0
	0x03C63904 CBNZ X8, 0x3C6391C
	0x03C63908 ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C6390C ADD X0, X0, 0x530
	0x03C63910 BL 0x1C16CB8
	0x03C63914 MOV X8, X0
	0x03C63918 STR X0, [X20 + 0x448]
	0x03C6391C MOV X0, X19
	0x03C63920 BLR X8
	0x03C63924 LDP X20, X19, [X31 + 0x10]
	0x03C63928 UBFM W0, W0, 0x3, 0x3
	0x03C6392C LDR X30, [X31], #0x20
	0x03C63930 RET
	0x03C63934 STR X30, [X31 - 0x20]!
	0x03C63938 STP X20, X19, [X31 + 0x10]
	0x03C6393C ADRP X19, 0x783000
	0x03C63940 ADRP X20, 0x4F6000
	0x03C63944 LDRB W8, [X19 + 0x510]
	0x03C63948 LDR X20, [X20 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x784000
	005 Move X20, 0x4B9000
	006 Move W8, [X19+1057]
	007 Move X20, [X20+2032]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4B9000
	013 Move X0, [X0+2032]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1057], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 1
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

