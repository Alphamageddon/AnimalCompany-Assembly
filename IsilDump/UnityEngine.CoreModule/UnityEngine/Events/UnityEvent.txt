Type: UnityEngine.Events.UnityEvent

Method: System.Void .ctor()

Disassembly:
	0x03C46C84 ADD X2, X31, 0x8
	0x03C46C88 MOV X0, X20

ISIL:
	001 Move [X0+40], X31
	002 Call UnityEventBase..ctor, X0
	003 Return 

Method: System.Void AddListener(UnityEngine.Events.UnityAction call)

Disassembly:
	0x03C46C8C MOV W1, W19
	0x03C46C90 BLR X8
	0x03C46C94 LDP X20, X19, [X31 + 0x20]
	0x03C46C98 LDP X22, X21, [X31 + 0x10]
	0x03C46C9C LDR X30, [X31], #0x30
	0x03C46CA0 RET
	0x03C46CA4 STR X30, [X31 - 0x40]!
	0x03C46CA8 STP X24, X23, [X31 + 0x10]
	0x03C46CAC STP X22, X21, [X31 + 0x20]
	0x03C46CB0 STP X20, X19, [X31 + 0x30]
	0x03C46CB4 ADRP X24, 0x79F000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X1
	005 Call UnityEvent.GetDelegate, X0
	006 Move X8, [X19+16]
	007 Compare X8, 0
	008 JumpIfEqual {15}
	009 Move X1, X0
	010 Move X0, X8
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call InvokableCallList.AddListener, X0, X1
	014 Return 
	015 Call 0x1C17F20

Method: System.Reflection.MethodInfo FindMethod_Impl(System.String name, System.Type targetObjType)

Disassembly:
	0x03C46D1C STP X20, X19, [X31 + 0x10]
	0x03C46D20 ADRP X19, 0x79F000
	0x03C46D24 ADRP X20, 0x519000
	0x03C46D28 LDRB W8, [X19 + 0xC62]
	0x03C46D2C LDR X20, [X20 + 0xA00]
	0x03C46D30 TBNZ X8, 0x0, 0x3C46D48
	0x03C46D34 ADRP X0, 0x519000
	0x03C46D38 LDR X0, [X0 + 0xA00]
	0x03C46D3C BL 0x1C16CF4
	0x03C46D40 MOVZ W8, 0x1
	0x03C46D44 STRB W8, [X19 + 0xC62]
	0x03C46D48 LDR X0, [X20]
	0x03C46D4C BL 0x1C16F10
	0x03C46D50 MOV X1, X31
	0x03C46D54 MOV X19, X0
	0x03C46D58 BL 0x33BDD8C
	0x03C46D5C LDR X8, [X20]
	0x03C46D60 LDR X8, [X8 + 0xB8]
	0x03C46D64 STR X19, [X8]
	0x03C46D68 LDP X20, X19, [X31 + 0x10]
	0x03C46D6C LDR X30, [X31], #0x20
	0x03C46D70 RET
	0x03C46D74 STP X30, X19, [X31 - 0x10]!
	0x03C46D78 ADRP X19, 0x79F000
	0x03C46D7C LDR X0, [X19 + 0xC68]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7A0000
	007 Move X22, 0x4B6000
	008 Move W8, [X21+3040]
	009 Move X22, [X22+3168]
	010 Move X20, X2
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4B6000
	017 Move X0, [X0+3168]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3040], W8
	021 Move X0, [X22]
	022 Move W1, W31
	023 Call 0x1C17D6C
	024 Move X2, X0
	025 Move X0, X20
	026 Move X1, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Call UnityEventBase.GetValidMethodInfo, X0, X1, X2
	033 Return X0

Method: UnityEngine.Events.BaseInvokableCall GetDelegate(System.Object target, System.Reflection.MethodInfo theFunction)

Disassembly:
	0x03C46D80 CBNZ X0, 0x3C46D94
	0x03C46D84 ADRP X0, 0xFFFFFFFFFCECD000
	0x03C46D88 ADD X0, X0, 0xC
	0x03C46D8C BL 0x1C16CB8
	0x03C46D90 STR X0, [X19 + 0xC68]
	0x03C46D94 LDP X30, X19, [X31], #0x10
	0x03C46D98 BR X0
	0x03C46D9C STR X30, [X31 - 0x20]!
	0x03C46DA0 STP X20, X19, [X31 + 0x10]
	0x03C46DA4 ADRP X19, 0x79F000
	0x03C46DA8 ADRP X20, 0x519000
	0x03C46DAC LDRB W8, [X19 + 0xC70]
	0x03C46DB0 LDR X20, [X20 + 0xA00]
	0x03C46DB4 TBNZ X8, 0x0, 0x3C46DCC
	0x03C46DB8 ADRP X0, 0x519000
	0x03C46DBC LDR X0, [X0 + 0xA00]
	0x03C46DC0 BL 0x1C16CF4
	0x03C46DC4 MOVZ W8, 0x1
	0x03C46DC8 STRB W8, [X19 + 0xC70]
	0x03C46DCC LDR X0, [X20]
	0x03C46DD0 LDR W8, [X0 + 0xE0]
	0x03C46DD4 CBNZ W8, 0x3C46DDC
	0x03C46DD8 BL 0x1C16DFC
	0x03C46DDC BL 0x3C46AC8
	0x03C46DE0 CBZ X0, 0x3C46DF8
	0x03C46DE4 LDR X8, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7A0000
	007 Move X22, 0x4D8000
	008 Move W8, [X21+3041]
	009 Move X22, [X22+2672]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4D8000
	017 Move X0, [X0+2672]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3041], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move X2, X19
	025 Move X21, X0
	026 Call InvokableCall..ctor, X0, X1, X2
	027 Move X0, X21
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: UnityEngine.Events.BaseInvokableCall GetDelegate(UnityEngine.Events.UnityAction action)

Disassembly:
	0x03C46CB8 MOV X19, X5
	0x03C46CBC LDR X5, [X24 + 0xC48]
	0x03C46CC0 MOV W20, W4
	0x03C46CC4 MOV W22, W3
	0x03C46CC8 MOV W21, W2
	0x03C46CCC MOV X23, X1
	0x03C46CD0 CBNZ X5, 0x3C46CE8
	0x03C46CD4 ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C46CD8 ADD X0, X0, 0x562
	0x03C46CDC BL 0x1C16CB8
	0x03C46CE0 MOV X5, X0
	0x03C46CE4 STR X0, [X24 + 0xC48]
	0x03C46CE8 AND W2, W22, 0x1
	0x03C46CEC MOV X0, X23
	0x03C46CF0 MOV W1, W21
	0x03C46CF4 MOV W3, W20
	0x03C46CF8 MOV X4, X19
	0x03C46CFC LDP X20, X19, [X31 + 0x30]
	0x03C46D00 LDP X22, X21, [X31 + 0x20]
	0x03C46D04 LDP X24, X23, [X31 + 0x10]
	0x03C46D08 LDR X30, [X31], #0x40
	0x03C46D0C BR X5
	0x03C46D10 MOV X0, X31
	0x03C46D14 RET
	0x03C46D18 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7A0000
	006 Move X21, 0x4D8000
	007 Move W8, [X20+3042]
	008 Move X21, [X21+2672]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4D8000
	015 Move X0, [X0+2672]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3042], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move X0, X20
	025 Move X1, X19
	026 Call InvokableCall.add_Delegate, X0, X1
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0

Method: System.Void Invoke()

Disassembly:
	0x03C46DE8 LDP X20, X19, [X31 + 0x10]
	0x03C46DEC LDP X2, X1, [X8 + 0x178]
	0x03C46DF0 LDR X30, [X31], #0x20
	0x03C46DF4 BR X2
	0x03C46DF8 BL 0x1C16F20
	0x03C46DFC STR X30, [X31 - 0x20]!
	0x03C46E00 STP X20, X19, [X31 + 0x10]
	0x03C46E04 ADRP X20, 0x79F000
	0x03C46E08 ADRP X19, 0x4AD000
	0x03C46E0C LDRB W8, [X20 + 0xC71]
	0x03C46E10 LDR X19, [X19 + 0xC90]
	0x03C46E14 TBNZ X8, 0x0, 0x3C46E2C
	0x03C46E18 ADRP X0, 0x4AD000
	0x03C46E1C LDR X0, [X0 + 0xC90]
	0x03C46E20 BL 0x1C16CF4
	0x03C46E24 MOVZ W8, 0x1
	0x03C46E28 STRB W8, [X20 + 0xC71]
	0x03C46E2C LDR X0, [X19]
	0x03C46E30 STR W31, [X31 + 0x8]
	0x03C46E34 LDR W8, [X0 + 0xE0]
	0x03C46E38 CBNZ W8, 0x3C46E40
	0x03C46E3C BL 0x1C16DFC
	0x03C46E40 ADRP X19, 0x79F000
	0x03C46E44 LDR X8, [X19 + 0xC90]
	0x03C46E48 CBNZ X8, 0x3C46E60
	0x03C46E4C ADRP X0, 0xFFFFFFFFFCEBF000
	0x03C46E50 ADD X0, X0, 0x450
	0x03C46E54 BL 0x1C16CB8
	0x03C46E58 MOV X8, X0
	0x03C46E5C STR X0, [X19 + 0xC90]
	0x03C46E60 ADD X0, X31, 0x8
	0x03C46E64 BLR X8
	0x03C46E68 LDR W0, [X31 + 0x8]
	0x03C46E6C LDP X20, X19, [X31 + 0x10]
	0x03C46E70 LDR X30, [X31], #0x20
	0x03C46E74 RET
	0x03C46E78 STR X30, [X31 - 0x20]!
	0x03C46E7C STP X20, X19, [X31 + 0x10]
	0x03C46E80 ADRP X20, 0x79F000
	0x03C46E84 LDR X1, [X20 + 0xC90]
	0x03C46E88 MOV X19, X0
	0x03C46E8C CBNZ X1, 0x3C46EA4
	0x03C46E90 ADRP X0, 0xFFFFFFFFFCEBF000
	0x03C46E94 ADD X0, X0, 0x450
	0x03C46E98 BL 0x1C16CB8
	0x03C46E9C MOV X1, X0
	0x03C46EA0 STR X0, [X20 + 0xC90]
	0x03C46EA4 MOV X0, X19
	0x03C46EA8 LDP X20, X19, [X31 + 0x10]
	0x03C46EAC LDR X30, [X31], #0x20
	0x03C46EB0 BR X1
	0x03C46EB4 STR X30, [X31 - 0x20]!
	0x03C46EB8 STP X20, X19, [X31 + 0x10]
	0x03C46EBC ADRP X19, 0x79F000
	0x03C46EC0 STR W0, [X31 + 0x8]
	0x03C46EC4 ADRP X20, 0x4AD000
	0x03C46EC8 LDRB W8, [X19 + 0xC72]
	0x03C46ECC LDR X20, [X20 + 0xC90]
	0x03C46ED0 TBNZ X8, 0x0, 0x3C46EE8
	0x03C46ED4 ADRP X0, 0x4AD000
	0x03C46ED8 LDR X0, [X0 + 0xC90]
	0x03C46EDC BL 0x1C16CF4
	0x03C46EE0 MOVZ W8, 0x1
	0x03C46EE4 STRB W8, [X19 + 0xC72]
	0x03C46EE8 LDR X0, [X20]
	0x03C46EEC LDR W8, [X0 + 0xE0]
	0x03C46EF0 CBNZ W8, 0x3C46EF8
	0x03C46EF4 BL 0x1C16DFC
	0x03C46EF8 ADRP X19, 0x79F000
	0x03C46EFC LDR X8, [X19 + 0xC98]
	0x03C46F00 CBNZ X8, 0x3C46F18
	0x03C46F04 ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C46F08 ADD X0, X0, 0x113
	0x03C46F0C BL 0x1C16CB8
	0x03C46F10 MOV X8, X0
	0x03C46F14 STR X0, [X19 + 0xC98]
	0x03C46F18 ADD X0, X31, 0x8
	0x03C46F1C BLR X8
	0x03C46F20 LDP X20, X19, [X31 + 0x10]
	0x03C46F24 AND W0, W0, 0x1
	0x03C46F28 LDR X30, [X31], #0x20
	0x03C46F2C RET
	0x03C46F30 STR X30, [X31 - 0x20]!
	0x03C46F34 STP X20, X19, [X31 + 0x10]
	0x03C46F38 ADRP X20, 0x79F000
	0x03C46F3C LDR X1, [X20 + 0xC98]
	0x03C46F40 MOV X19, X0
	0x03C46F44 CBNZ X1, 0x3C46F5C
	0x03C46F48 ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C46F4C ADD X0, X0, 0x113
	0x03C46F50 BL 0x1C16CB8
	0x03C46F54 MOV X1, X0
	0x03C46F58 STR X0, [X20 + 0xC98]
	0x03C46F5C MOV X0, X19
	0x03C46F60 LDP X20, X19, [X31 + 0x10]
	0x03C46F64 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x7A0000
	010 Move W8, [X20+3043]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x4D8000
	017 Move X0, [X0+2672]
	018 Call 0x1C17CF4
	019 Move X0, 0x4D8000
	020 Move X0, [X0+2680]
	021 Call 0x1C17CF4
	022 Move X0, 0x4D8000
	023 Move X0, [X0+2688]
	024 Call 0x1C17CF4
	025 Move X0, 0x4AE000
	026 Move X0, [X0+2512]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3043], W8
	030 Move X0, X19
	031 Call UnityEventBase.PrepareInvoke, X0
	032 Compare X0, 0
	033 JumpIfEqual {106}
	034 Move W8, [X0+24]
	035 Move X20, X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X23, 0x4D8000
	038 Move X24, 0x4D8000
	039 Move X25, 0x4AE000
	040 Move X23, [X23+2688]
	041 Move X24, [X24+2672]
	042 Move X25, [X25+2512]
	043 Move W21, W31
	044 Move X2, [X23]
	045 Move X0, X20
	046 Move W1, W21
	047 Call List`1<Object>.get_Item, X0, X1
	048 Compare X0, 0
	049 JumpIfEqual {59}
	050 Move X9, [X0]
	051 Move X8, [X24]
	052 Move W11, [X9+304]
	053 Move W10, [X8+304]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X9, [X9+200]
	056 Add X9, X9, X10
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X2, [X23]
	060 Move X0, X20
	061 Move W1, W21
	062 Call List`1<Object>.get_Item, X0, X1
	063 Compare X0, 0
	064 JumpIfEqual {74}
	065 Move X9, [X0]
	066 Move X8, [X24]
	067 Move W11, [X9+304]
	068 Move W10, [X8+304]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X9, [X9+200]
	071 Add X9, X9, X10
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X2, [X23]
	075 Move X0, X20
	076 Move W1, W21
	077 Call List`1<Object>.get_Item, X0, X1
	078 Move X1, [X19+40]
	079 Move X22, X0
	080 Compare X1, 0
	081 JumpIfNotEqual {86}
	082 Move X0, [X25]
	083 Call 0x1C17D6C
	084 Move X1, X0
	085 Move [X19+40], X0
	086 Compare X22, 0
	087 JumpIfEqual {106}
	088 Move X8, [X22]
	089 Move X0, X22
	090 Move X9, [X8+376]
	091 Move X2, [X8+384]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Call InvokableCall.Invoke, X0
	094 Move W8, [X20+24]
	095 Add W21, W21, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 Move X30, [X31+64]
	104 Move X25, [X31+72]
	105 Return 
	106 Call 0x1C17F20

