Type: UnityEngine.Events.InvokableCall`3

Method: System.Void .ctor(System.Object target, System.Reflection.MethodInfo theFunction)

Disassembly:
	0x02EA0828 LDP X22, X21, [X31 + 0x10]
	0x02EA082C LDR X30, [X31], #0x30
	0x02EA0830 BR X5
	0x02EA0834 LDP X20, X19, [X31 + 0x20]
	0x02EA0838 LDP X22, X21, [X31 + 0x10]
	0x02EA083C LDR X30, [X31], #0x30
	0x02EA0840 RET
	0x02EA0844 BL 0x1C16F20
	0x02EA0848 STP X30, X19, [X31 - 0x10]!
	0x02EA084C LDR X0, [X0 + 0x10]
	0x02EA0850 CBZ X0, 0x2EA0890
	0x02EA0854 LDR X8, [X0 + 0x20]
	0x02EA0858 CMP X8, X1
	0x02EA085C B.EQ 0x2EA086C
	0x02EA0860 MOV W0, W31
	0x02EA0864 LDP X30, X19, [X31], #0x10
	0x02EA0868 RET
	0x02EA086C MOV X1, X31
	0x02EA0870 MOV X19, X2
	0x02EA0874 BL 0x33C4268
	0x02EA0878 CBZ X0, 0x2EA0890
	0x02EA087C LDR X8, [X0]
	0x02EA0880 MOV X1, X19
	0x02EA0884 LDP X3, X2, [X8 + 0x138]
	0x02EA0888 LDP X30, X19, [X31], #0x10
	0x02EA088C BR X3
	0x02EA0890 BL 0x1C16F20
	0x02EA0894 STR X30, [X31 - 0x40]!
	0x02EA0898 STP X24, X23, [X31 + 0x10]
	0x02EA089C STP X22, X21, [X31 + 0x20]
	0x02EA08A0 STP X20, X19, [X31 + 0x30]
	0x02EA08A4 ADRP X24, 0x153B000
	0x02EA08A8 ADRP X23, 0x1253000
	0x02EA08AC LDRB W8, [X24 + 0xA4B]
	0x02EA08B0 LDR X23, [X23 + 0x6C0]
	0x02EA08B4 MOV X19, X3
	0x02EA08B8 MOV X21, X2
	0x02EA08BC MOV X22, X1
	0x02EA08C0 MOV X20, X0
	0x02EA08C4 TBNZ X8, 0x0, 0x2EA08DC
	0x02EA08C8 ADRP X0, 0x1253000
	0x02EA08CC LDR X0, [X0 + 0x6C0]
	0x02EA08D0 BL 0x1C16CF4
	0x02EA08D4 MOVZ W8, 0x1
	0x02EA08D8 STRB W8, [X24 + 0xA4B]
	0x02EA08DC MOV X0, X20
	0x02EA08E0 MOV X1, X22
	0x02EA08E4 MOV X2, X21
	0x02EA08E8 MOV X3, X31
	0x02EA08EC BL 0x3C43D0C
	0x02EA08F0 LDR X8, [X19 + 0x20]
	0x02EA08F4 LDR X0, [X23]
	0x02EA08F8 LDR X8, [X8 + 0xC0]
	0x02EA08FC LDR W9, [X0 + 0xE0]
	0x02EA0900 LDR X23, [X8]
	0x02EA0904 CBNZ W9, 0x2EA090C
	0x02EA0908 BL 0x1C16DFC
	0x02EA090C MOV X0, X23
	0x02EA0910 MOV X1, X31
	0x02EA0914 BL 0x338C698
	0x02EA0918 MOV X1, X22
	0x02EA091C MOV X2, X21
	0x02EA0920 MOV X3, X31
	0x02EA0924 BL 0x33C4FAC
	0x02EA0928 LDR X8, [X19 + 0x20]
	0x02EA092C MOV X21, X0
	0x02EA0930 LDR X8, [X8 + 0xC0]
	0x02EA0934 LDR X22, [X8 + 0x8]
	0x02EA0938 LDRB W8, [X22 + 0x135]
	0x02EA093C TBNZ X8, 0x0, 0x2EA094C
	0x02EA0940 MOV X0, X22
	0x02EA0944 BL 0x1C5C684
	0x02EA0948 MOV X22, X0
	0x02EA094C CBZ X21, 0x2EA096C
	0x02EA0950 MOV X0, X21
	0x02EA0954 MOV X1, X22
	0x02EA0958 BL 0x1C16E00

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x153C000
	009 Move X23, 0x1254000
	010 Move W8, [X24+2631]
	011 Move X23, [X23+1728]
	012 Move X19, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x1254000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2631], W8
	025 Move X0, X20
	026 Move X1, X22
	027 Move X2, X21
	028 Move X3, X31
	029 Call BaseInvokableCall..ctor, X0, X1, X2
	030 Move X8, [X19+32]
	031 Move X0, [X23]
	032 Move X8, [X8+192]
	033 Move W9, [X0+224]
	034 Move X23, [X8]
	035 Compare W9, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X23
	039 Move X1, X31
	040 Call Type.GetTypeFromHandle, X0
	041 Move X1, X22
	042 Move X2, X21
	043 Move X3, X31
	044 Call Delegate.CreateDelegate, X0, X1, X2
	045 Move X8, [X19+32]
	046 Move X21, X0
	047 Move X8, [X8+192]
	048 Move X22, [X8+8]
	049 Move W8, [X22+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {57}
	054 Move X0, X22
	055 Call 0x1C5D684
	056 Move X22, X0
	057 Compare X21, 0
	058 JumpIfEqual {67}
	059 Move X0, X21
	060 Move X1, X22
	061 Call 0x1C17E00
	062 Compare X0, 0
	063 JumpIfNotEqual {68}
	064 Move X0, X21
	065 Move X1, X22
	066 Call 0x1C181E0
	067 Move X0, X31
	068 Move [X20+16], X0
	069 Move X8, [X19+32]
	070 Move X8, [X8+192]
	071 Move X19, [X8+8]
	072 Move W8, [X19+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {80}
	077 Move X0, X19
	078 Call 0x1C5D684
	079 Move X19, X0
	080 Compare X21, 0
	081 JumpIfEqual {87}
	082 Move X0, X21
	083 Move X1, X19
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {95}
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X24, [X31+16]
	092 Move X23, [X31+24]
	093 Move X30, [X31+64]
	094 Return 
	095 Move X0, X21
	096 Move X1, X19
	097 Call 0x1C181E0

Method: System.Void Invoke(System.Object[] args)

Disassembly:
	0x02EA095C CBNZ X0, 0x2EA0970
	0x02EA0960 MOV X0, X21
	0x02EA0964 MOV X1, X22
	0x02EA0968 BL 0x1C171E0
	0x02EA096C MOV X0, X31
	0x02EA0970 STR X0, [X20 + 0x10]
	0x02EA0974 LDR X8, [X19 + 0x20]
	0x02EA0978 LDR X8, [X8 + 0xC0]
	0x02EA097C LDR X19, [X8 + 0x8]
	0x02EA0980 LDRB W8, [X19 + 0x135]
	0x02EA0984 TBNZ X8, 0x0, 0x2EA0994
	0x02EA0988 MOV X0, X19
	0x02EA098C BL 0x1C5C684
	0x02EA0990 MOV X19, X0
	0x02EA0994 CBZ X21, 0x2EA09A8
	0x02EA0998 MOV X0, X21
	0x02EA099C MOV X1, X19
	0x02EA09A0 BL 0x1C16E00
	0x02EA09A4 CBZ X0, 0x2EA09BC
	0x02EA09A8 LDP X20, X19, [X31 + 0x30]
	0x02EA09AC LDP X22, X21, [X31 + 0x20]
	0x02EA09B0 LDP X24, X23, [X31 + 0x10]
	0x02EA09B4 LDR X30, [X31], #0x40
	0x02EA09B8 RET
	0x02EA09BC MOV X0, X21
	0x02EA09C0 MOV X1, X19
	0x02EA09C4 BL 0x1C171E0
	0x02EA09C8 STP X30, X25, [X31 - 0x40]!
	0x02EA09CC STP X24, X23, [X31 + 0x10]
	0x02EA09D0 STP X22, X21, [X31 + 0x20]
	0x02EA09D4 STP X20, X19, [X31 + 0x30]
	0x02EA09D8 CBZ X1, 0x2EA0B90
	0x02EA09DC LDR W8, [X1 + 0x18]
	0x02EA09E0 MOV X19, X2
	0x02EA09E4 MOV X20, X1
	0x02EA09E8 CMP W8, 0x3
	0x02EA09EC B.NE 0x2EA0B98
	0x02EA09F0 LDR X8, [X19 + 0x20]
	0x02EA09F4 MOV X21, X0
	0x02EA09F8 LDR X0, [X20 + 0x20]
	0x02EA09FC LDR X8, [X8 + 0xC0]
	0x02EA0A00 LDR X1, [X8 + 0x18]
	0x02EA0A04 BL 0x219EED0
	0x02EA0A08 LDR W8, [X20 + 0x18]
	0x02EA0A0C CMP W8, 0x1
	0x02EA0A10 B.LS 0x2EA0B8C
	0x02EA0A14 LDR X8, [X19 + 0x20]
	0x02EA0A18 LDR X0, [X20 + 0x28]
	0x02EA0A1C LDR X8, [X8 + 0xC0]
	0x02EA0A20 LDR X1, [X8 + 0x20]
	0x02EA0A24 BL 0x219F018
	0x02EA0A28 LDR W8, [X20 + 0x18]
	0x02EA0A2C CMP W8, 0x2
	0x02EA0A30 B.LS 0x2EA0B8C
	0x02EA0A34 LDR X8, [X19 + 0x20]
	0x02EA0A38 LDR X0, [X20 + 0x30]
	0x02EA0A3C LDR X8, [X8 + 0xC0]
	0x02EA0A40 LDR X1, [X8 + 0x28]
	0x02EA0A44 BL 0x219ED88
	0x02EA0A48 LDR X0, [X21 + 0x10]
	0x02EA0A4C MOV X1, X31
	0x02EA0A50 BL 0x3C43E00
	0x02EA0A54 TBZ X0, 0x0, 0x2EA0AC4
	0x02EA0A58 LDR W8, [X20 + 0x18]
	0x02EA0A5C CBZ W8, 0x2EA0B8C
	0x02EA0A60 CMP W8, 0x1
	0x02EA0A64 B.EQ 0x2EA0B8C
	0x02EA0A68 CMP W8, 0x2
	0x02EA0A6C B.LS 0x2EA0B8C
	0x02EA0A70 LDR X25, [X21 + 0x10]
	0x02EA0A74 CBZ X25, 0x2EA0B90
	0x02EA0A78 LDR X8, [X19 + 0x20]
	0x02EA0A7C LDP X23, X22, [X20 + 0x20]
	0x02EA0A80 LDR X20, [X20 + 0x30]
	0x02EA0A84 LDR X8, [X8 + 0xC0]
	0x02EA0A88 LDR X24, [X8 + 0x30]
	0x02EA0A8C LDRB W8, [X24 + 0x135]
	0x02EA0A90 TBNZ X8, 0x0, 0x2EA0AA0
	0x02EA0A94 MOV X0, X24
	0x02EA0A98 BL 0x1C5C684
	0x02EA0A9C MOV X24, X0
	0x02EA0AA0 CBZ X23, 0x2EA0AD8
	0x02EA0AA4 MOV X0, X23
	0x02EA0AA8 MOV X1, X24
	0x02EA0AAC BL 0x1C16E00
	0x02EA0AB0 MOV X21, X0
	0x02EA0AB4 CBNZ X0, 0x2EA0ADC
	0x02EA0AB8 MOV X0, X23
	0x02EA0ABC MOV X1, X24
	0x02EA0AC0 B 0x2EA0B94
	0x02EA0AC4 LDP X20, X19, [X31 + 0x30]
	0x02EA0AC8 LDP X22, X21, [X31 + 0x20]
	0x02EA0ACC LDP X24, X23, [X31 + 0x10]
	0x02EA0AD0 LDP X30, X25, [X31], #0x40
	0x02EA0AD4 RET
	0x02EA0AD8 MOV X21, X31
	0x02EA0ADC LDR X8, [X19 + 0x20]
	0x02EA0AE0 LDR X8, [X8 + 0xC0]
	0x02EA0AE4 LDR X1, [X8 + 0x38]
	0x02EA0AE8 LDRB W8, [X1 + 0x135]
	0x02EA0AEC TBNZ X8, 0x0, 0x2EA0AFC
	0x02EA0AF0 MOV X0, X1
	0x02EA0AF4 BL 0x1C5C684
	0x02EA0AF8 MOV X1, X0
	0x02EA0AFC CBZ X22, 0x2EA0B90
	0x02EA0B00 LDR X8, [X22]
	0x02EA0B04 LDR X9, [X1 + 0x40]
	0x02EA0B08 MOV X0, X22
	0x02EA0B0C LDR X8, [X8 + 0x40]
	0x02EA0B10 CMP X8, X9
	0x02EA0B14 B.NE 0x2EA0B94
	0x02EA0B18 BL 0x1C16E08
	0x02EA0B1C LDR X8, [X19 + 0x20]
	0x02EA0B20 LDR W19, [X0]
	0x02EA0B24 LDR X8, [X8 + 0xC0]
	0x02EA0B28 LDR X1, [X8 + 0x40]
	0x02EA0B2C LDRB W8, [X1 + 0x135]
	0x02EA0B30 TBNZ X8, 0x0, 0x2EA0B40
	0x02EA0B34 MOV X0, X1
	0x02EA0B38 BL 0x1C5C684
	0x02EA0B3C MOV X1, X0
	0x02EA0B40 CBZ X20, 0x2EA0B90
	0x02EA0B44 LDR X8, [X20]
	0x02EA0B48 LDR X9, [X1 + 0x40]
	0x02EA0B4C MOV X0, X20
	0x02EA0B50 LDR X8, [X8 + 0x40]
	0x02EA0B54 CMP X8, X9
	0x02EA0B58 B.NE 0x2EA0B94
	0x02EA0B5C BL 0x1C16E08
	0x02EA0B60 LDP X3, X4, [X0]
	0x02EA0B64 LDR X6, [X25 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Compare X1, 0
	010 JumpIfEqual {139}
	011 Move W8, [X1+24]
	012 Move X19, X2
	013 Move X20, X1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X8, [X19+32]
	016 Move X21, X0
	017 Move X0, [X20+32]
	018 Move X8, [X8+192]
	019 Move X1, [X8+24]
	020 Call BaseInvokableCall.ThrowOnInvalidArg, X0
	021 Move W8, [X20+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, [X19+32]
	024 Move X0, [X20+40]
	025 Move X8, [X8+192]
	026 Move X1, [X8+32]
	027 Call BaseInvokableCall.ThrowOnInvalidArg, X0
	028 Move W8, [X20+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X19+32]
	031 Move X0, [X20+48]
	032 Move X8, [X8+192]
	033 Move X1, [X8+40]
	034 Call BaseInvokableCall.ThrowOnInvalidArg, X0
	035 Move X0, [X21+16]
	036 Move X1, X31
	037 Call BaseInvokableCall.AllowInvoke, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {74}
	042 Move W8, [X20+24]
	043 Compare W8, 0
	044 JumpIfEqual {138}
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X25, [X21+16]
	048 Compare X25, 0
	049 JumpIfEqual {139}
	050 Move X8, [X19+32]
	051 Move X23, [X20+32]
	052 Move X22, [X20+40]
	053 Move X20, [X20+48]
	054 Move X8, [X8+192]
	055 Move X24, [X8+48]
	056 Move W8, [X24+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {64}
	061 Move X0, X24
	062 Call 0x1C5D684
	063 Move X24, X0
	064 Compare X23, 0
	065 JumpIfEqual {83}
	066 Move X0, X23
	067 Move X1, X24
	068 Call 0x1C17E00
	069 Move X21, X0
	070 Compare X0, 0
	071 JumpIfNotEqual {84}
	072 Move X0, X23
	073 Move X1, X24
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X24, [X31+16]
	079 Move X23, [X31+24]
	080 Move X30, [X31+64]
	081 Move X25, [X31+72]
	082 Return 
	083 Move X21, X31
	084 Move X8, [X19+32]
	085 Move X8, [X8+192]
	086 Move X1, [X8+56]
	087 Move W8, [X1+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {95}
	092 Move X0, X1
	093 Call 0x1C5D684
	094 Move X1, X0
	095 Compare X22, 0
	096 JumpIfEqual {139}
	097 Move X8, [X22]
	098 Move X9, [X1+64]
	099 Move X0, X22
	100 Move X8, [X8+64]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Call 0x1C17E08
	103 Move X8, [X19+32]
	104 Move W19, [X0]
	105 Move X8, [X8+192]
	106 Move X1, [X8+64]
	107 Move W8, [X1+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {115}
	112 Move X0, X1
	113 Call 0x1C5D684
	114 Move X1, X0
	115 Compare X20, 0
	116 JumpIfEqual {139}
	117 Move X8, [X20]
	118 Move X9, [X1+64]
	119 Move X0, X20
	120 Move X8, [X8+64]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Call 0x1C17E08
	123 Move W3, [X0]
	124 Move X5, [X25+24]
	125 Move X0, [X25+64]
	126 Move X4, [X25+40]
	127 Move X1, X21
	128 Move W2, W19
	129 Move X20, [X31+48]
	130 Move X19, [X31+56]
	131 Move X22, [X31+32]
	132 Move X21, [X31+40]
	133 Move X24, [X31+16]
	134 Move X23, [X31+24]
	135 Move X30, [X31+64]
	136 Move X25, [X31+72]
	137 CallNoReturn X5
	138 Call 0x1C17F28
	139 Call 0x1C17F20
	140 Call 0x1C181E0
	141 Move X0, 0x125C000
	142 Move X0, [X0+1400]
	143 Call 0x1C17D08
	144 Call 0x1C17F10
	145 Move X20, X0
	146 Move X0, 0x1280000
	147 Move X0, [X0+152]
	148 Call 0x1C17D08
	149 Move X1, X0
	150 Move X0, X20
	151 Move X2, X31
	152 Call ArgumentException..ctor, X0, X1
	153 Move X0, X20
	154 Move X1, X19
	155 Call 0x1C17DEC

Method: System.Void Invoke(T1 args0, T2 args1, T3 args2)

Disassembly:
	0x02EA0B68 LDR X0, [X25 + 0x40]
	0x02EA0B6C LDR X5, [X25 + 0x28]
	0x02EA0B70 MOV X1, X21
	0x02EA0B74 MOV X2, X19
	0x02EA0B78 LDP X20, X19, [X31 + 0x30]
	0x02EA0B7C LDP X22, X21, [X31 + 0x20]
	0x02EA0B80 LDP X24, X23, [X31 + 0x10]
	0x02EA0B84 LDP X30, X25, [X31], #0x40
	0x02EA0B88 BR X6
	0x02EA0B8C BL 0x1C16F28
	0x02EA0B90 BL 0x1C16F20
	0x02EA0B94 BL 0x1C171E0
	0x02EA0B98 ADRP X0, 0x125B000
	0x02EA0B9C LDR X0, [X0 + 0x578]
	0x02EA0BA0 BL 0x1C16D08
	0x02EA0BA4 BL 0x1C16F10
	0x02EA0BA8 MOV X20, X0
	0x02EA0BAC ADRP X0, 0x127F000
	0x02EA0BB0 LDR X0, [X0 + 0x98]
	0x02EA0BB4 BL 0x1C16D08
	0x02EA0BB8 MOV X1, X0
	0x02EA0BBC MOV X0, X20
	0x02EA0BC0 MOV X2, X31
	0x02EA0BC4 BL 0x3314A68
	0x02EA0BC8 MOV X0, X20
	0x02EA0BCC MOV X1, X19
	0x02EA0BD0 BL 0x1C16DEC
	0x02EA0BD4 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, X0
	007 Move X0, [X0+16]
	008 Move X21, X1
	009 Move X1, X31
	010 Move W19, W3
	011 Move W20, W2
	012 Call BaseInvokableCall.AllowInvoke, X0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {32}
	017 Move X8, [X22+16]
	018 Compare X8, 0
	019 JumpIfEqual {38}
	020 Move X5, [X8+24]
	021 Move X0, [X8+64]
	022 Move X4, [X8+40]
	023 Move X1, X21
	024 Move W2, W20
	025 Move W3, W19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 CallNoReturn X5
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return 
	038 Call 0x1C17F20

Method: System.Boolean Find(System.Object targetObj, System.Reflection.MethodInfo method)

Disassembly:
	0x02EA0BD8 STP X22, X21, [X31 + 0x10]
	0x02EA0BDC STP X20, X19, [X31 + 0x20]
	0x02EA0BE0 MOV X23, X0
	0x02EA0BE4 LDR X0, [X0 + 0x10]
	0x02EA0BE8 MOV X22, X1
	0x02EA0BEC MOV X1, X31
	0x02EA0BF0 MOV X19, X4
	0x02EA0BF4 MOV X20, X3
	0x02EA0BF8 MOV X21, X2
	0x02EA0BFC BL 0x3C43E00
	0x02EA0C00 TBZ X0, 0x0, 0x2EA0C38
	0x02EA0C04 LDR X8, [X23 + 0x10]
	0x02EA0C08 CBZ X8, 0x2EA0C48
	0x02EA0C0C LDR X6, [X8 + 0x18]
	0x02EA0C10 LDR X0, [X8 + 0x40]
	0x02EA0C14 LDR X5, [X8 + 0x28]
	0x02EA0C18 AND X2, X21, 0x0
	0x02EA0C1C MOV X1, X22
	0x02EA0C20 MOV X3, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, [X0+16]
	004 Compare X0, 0
	005 JumpIfEqual {24}
	006 Move X8, [X0+32]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W0, W31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return X0
	012 Move X1, X31
	013 Move X19, X2
	014 Call Delegate.get_Method, X0
	015 Compare X0, 0
	016 JumpIfEqual {24}
	017 Move X8, [X0]
	018 Move X1, X19
	019 Move X3, [X8+312]
	020 Move X2, [X8+320]
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 CallNoReturn X3
	024 Call 0x1C17F20

