Type: UnityEngine.Events.UnityEvent`3

Method: System.Void .ctor()

Disassembly:
	0x0272FA34 LDP X30, X21, [X31], #0x20
	0x0272FA38 RET
	0x0272FA3C SUB X31, X31, 0x70

ISIL:
	001 Move X1, X31
	002 Move [X0+40], X31
	003 Call UnityEventBase..ctor, X0
	004 Return 

Method: System.Reflection.MethodInfo FindMethod_Impl(System.String name, System.Type targetObjType)

Disassembly:
	0x0272FA40 STP X29, X30, [X31 + 0x10]
	0x0272FA44 STP X28, X27, [X31 + 0x20]
	0x0272FA48 STP X26, X25, [X31 + 0x30]
	0x0272FA4C STP X24, X23, [X31 + 0x40]
	0x0272FA50 STP X22, X21, [X31 + 0x50]
	0x0272FA54 STP X20, X19, [X31 + 0x60]
	0x0272FA58 ADRP X24, 0x1CAB000
	0x0272FA5C LDRB W8, [X24 + 0x67D]
	0x0272FA60 MOV X19, X4
	0x0272FA64 MOV X20, X3
	0x0272FA68 MOV X21, X2
	0x0272FA6C MOV X22, X1
	0x0272FA70 MOV X23, X0
	0x0272FA74 TBNZ X8, 0x0, 0x272FAB0
	0x0272FA78 ADRP X0, 0x19EE000
	0x0272FA7C LDR X0, [X0 + 0xA70]
	0x0272FA80 BL 0x1C16CF4
	0x0272FA84 ADRP X0, 0x19EE000
	0x0272FA88 LDR X0, [X0 + 0xA78]
	0x0272FA8C BL 0x1C16CF4
	0x0272FA90 ADRP X0, 0x19EE000
	0x0272FA94 LDR X0, [X0 + 0xA80]
	0x0272FA98 BL 0x1C16CF4
	0x0272FA9C ADRP X0, 0x19C4000
	0x0272FAA0 LDR X0, [X0 + 0x9D0]
	0x0272FAA4 BL 0x1C16CF4
	0x0272FAA8 MOVZ W8, 0x1
	0x0272FAAC STRB W8, [X24 + 0x67D]
	0x0272FAB0 CBZ X23, 0x272FCE8
	0x0272FAB4 MOV X0, X23
	0x0272FAB8 MOV X1, X31
	0x0272FABC BL 0x3C45B44
	0x0272FAC0 CBZ X0, 0x272FCE8
	0x0272FAC4 LDR W8, [X0 + 0x18]
	0x0272FAC8 MOV X24, X0
	0x0272FACC CMP W8, 0x1
	0x0272FAD0 B.LT 0x272FCC8
	0x0272FAD4 ADRP X29, 0x19EE000
	0x0272FAD8 LDR X29, [X29 + 0xA80]
	0x0272FADC MOV W25, W31
	0x0272FAE0 AND X8, X20, 0x0
	0x0272FAE4 STR X8, [X31]
	0x0272FAE8 LDR X2, [X29]
	0x0272FAEC MOV X0, X24
	0x0272FAF0 MOV W1, W25
	0x0272FAF4 BL 0x301BCCC
	0x0272FAF8 LDR X8, [X19 + 0x20]
	0x0272FAFC MOV X27, X0
	0x0272FB00 LDR X8, [X8 + 0xC0]
	0x0272FB04 LDR X8, [X8 + 0x20]
	0x0272FB08 LDRB W9, [X8 + 0x135]
	0x0272FB0C TBNZ X9, 0x0, 0x272FB1C
	0x0272FB10 MOV X0, X8
	0x0272FB14 BL 0x1C5C684
	0x0272FB18 MOV X8, X0
	0x0272FB1C CBZ X27, 0x272FB48
	0x0272FB20 LDR X9, [X27]
	0x0272FB24 LDRB W10, [X8 + 0x130]
	0x0272FB28 LDRB W11, [X9 + 0x130]
	0x0272FB2C CMP W11, W10
	0x0272FB30 B.CC 0x272FB48
	0x0272FB34 LDR X9, [X9 + 0xC8]
	0x0272FB38 ADD X9, X9, X10, 0x3, LSL
	0x0272FB3C LDUR X9, [X9 - 0x8]
	0x0272FB40 CMP X9, X8
	0x0272FB44 B.EQ 0x272FC98
	0x0272FB48 LDR X2, [X29]
	0x0272FB4C MOV X0, X24
	0x0272FB50 MOV W1, W25
	0x0272FB54 BL 0x301BCCC
	0x0272FB58 CBZ X0, 0x272FB90
	0x0272FB5C ADRP X8, 0x19EE000
	0x0272FB60 LDR X9, [X0]
	0x0272FB64 LDR X8, [X8 + 0xA70]
	0x0272FB68 LDRB W11, [X9 + 0x130]
	0x0272FB6C LDR X8, [X8]
	0x0272FB70 LDRB W10, [X8 + 0x130]
	0x0272FB74 CMP W11, W10
	0x0272FB78 B.CC 0x272FB90
	0x0272FB7C LDR X9, [X9 + 0xC8]
	0x0272FB80 ADD X9, X9, X10, 0x3, LSL
	0x0272FB84 LDUR X9, [X9 - 0x8]
	0x0272FB88 CMP X9, X8
	0x0272FB8C B.EQ 0x272FCBC
	0x0272FB90 LDR X2, [X29]
	0x0272FB94 MOV X0, X24
	0x0272FB98 MOV W1, W25
	0x0272FB9C BL 0x301BCCC
	0x0272FBA0 LDR X28, [X23 + 0x28]
	0x0272FBA4 MOV X27, X0
	0x0272FBA8 CBNZ X28, 0x272FBC8
	0x0272FBAC ADRP X8, 0x19C4000
	0x0272FBB0 LDR X8, [X8 + 0x9D0]
	0x0272FBB4 MOVZ W1, 0x3

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1CAC000
	009 Move X24, 0x19CD000
	010 Move X22, 0x19C5000
	011 Move W8, [X23+1654]
	012 Move X24, [X24+3168]
	013 Move X22, [X22+1728]
	014 Move X21, X3
	015 Move X20, X2
	016 Move X19, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x19CD000
	022 Move X0, [X0+3168]
	023 Call 0x1C17CF4
	024 Move X0, 0x19C5000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1654], W8
	029 Move X0, [X24]
	030 Move W1, 3
	031 Call 0x1C17D6C
	032 Move X9, [X21+32]
	033 Move X8, [X22]
	034 Move X22, X0
	035 Move X9, [X9+192]
	036 Move W10, [X8+224]
	037 Move X23, [X9+8]
	038 Compare W10, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X23
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Compare X22, 0
	046 JumpIfEqual {111}
	047 Move X23, X0
	048 Compare X0, 0
	049 JumpIfEqual {56}
	050 Move X8, [X22]
	051 Move X0, X23
	052 Move X1, [X8+64]
	053 Call 0x1C17E00
	054 Compare X0, 0
	055 JumpIfEqual {108}
	056 Move W8, [X22+24]
	057 Compare W8, 0
	058 JumpIfEqual {107}
	059 Move [X22+32], X23
	060 Move X8, [X21+32]
	061 Move X1, X31
	062 Move X8, [X8+192]
	063 Move X0, [X8+16]
	064 Call Type.GetTypeFromHandle, X0
	065 Move X23, X0
	066 Compare X0, 0
	067 JumpIfEqual {74}
	068 Move X8, [X22]
	069 Move X0, X23
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {108}
	074 Move W8, [X22+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X22+40], X23
	077 Move X8, [X21+32]
	078 Move X1, X31
	079 Move X8, [X8+192]
	080 Move X0, [X8+24]
	081 Call Type.GetTypeFromHandle, X0
	082 Move X21, X0
	083 Compare X0, 0
	084 JumpIfEqual {91}
	085 Move X8, [X22]
	086 Move X0, X21
	087 Move X1, [X8+64]
	088 Call 0x1C17E00
	089 Compare X0, 0
	090 JumpIfEqual {108}
	091 Move W8, [X22+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X22+48], X21
	094 Move X0, X20
	095 Move X1, X19
	096 Move X2, X22
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X24, [X31+16]
	102 Move X23, [X31+24]
	103 Move X3, X31
	104 Move X30, [X31+64]
	105 Call UnityEventBase.GetValidMethodInfo, X0, X1, X2
	106 Return X0
	107 Call 0x1C17F28
	108 Call 0x1C17F44
	109 Move X1, X31
	110 Call 0x1C17DEC
	111 Call 0x1C17F20

Method: UnityEngine.Events.BaseInvokableCall GetDelegate(System.Object target, System.Reflection.MethodInfo theFunction)

Disassembly:
	0x0272FBB8 LDR X0, [X8]
	0x0272FBBC BL 0x1C16D6C
	0x0272FBC0 MOV X28, X0
	0x0272FBC4 STR X0, [X23 + 0x28]
	0x0272FBC8 CBZ X28, 0x272FCE8
	0x0272FBCC CBZ X22, 0x272FBE4
	0x0272FBD0 LDR X8, [X28]
	0x0272FBD4 MOV X0, X22
	0x0272FBD8 LDR X1, [X8 + 0x40]
	0x0272FBDC BL 0x1C16E00
	0x0272FBE0 CBZ X0, 0x272FCF0
	0x0272FBE4 LDR W8, [X28 + 0x18]
	0x0272FBE8 CBZ W8, 0x272FCEC
	0x0272FBEC STR X22, [X28 + 0x20]
	0x0272FBF0 LDR X26, [X23 + 0x28]
	0x0272FBF4 CBZ X26, 0x272FCE8
	0x0272FBF8 CBZ X21, 0x272FC10
	0x0272FBFC LDR X8, [X26]
	0x0272FC00 MOV X0, X21
	0x0272FC04 LDR X1, [X8 + 0x40]
	0x0272FC08 BL 0x1C16E00
	0x0272FC0C CBZ X0, 0x272FCF0
	0x0272FC10 LDR W8, [X26 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X20, X3
	007 Move X19, X2
	008 Move X21, X1
	009 Move X8, [X8+192]
	010 Move X0, [X8+32]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X20+32]
	019 Move X1, X21
	020 Move X2, X19
	021 Move X20, X0
	022 Move X8, [X8+192]
	023 Move X3, [X8+40]
	024 Call 0x2EA0828, X0, X1, X2
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Void Invoke(T0 arg0, T1 arg1, T2 arg2)

Disassembly:
	0x0272FC14 CMP W8, 0x1
	0x0272FC18 B.LS 0x272FCEC
	0x0272FC1C STR X21, [X26 + 0x28]
	0x0272FC20 LDR X26, [X23 + 0x28]
	0x0272FC24 STR W20, [X31 + 0x8]
	0x0272FC28 LDR X8, [X19 + 0x20]
	0x0272FC2C ADD X1, X31, 0x8
	0x0272FC30 LDR X8, [X8 + 0xC0]
	0x0272FC34 LDR X0, [X8 + 0x40]
	0x0272FC38 BL 0x1C16E04
	0x0272FC3C CBZ X26, 0x272FCE8
	0x0272FC40 MOV X28, X0
	0x0272FC44 CBZ X0, 0x272FC5C
	0x0272FC48 LDR X8, [X26]
	0x0272FC4C MOV X0, X28
	0x0272FC50 LDR X1, [X8 + 0x40]
	0x0272FC54 BL 0x1C16E00
	0x0272FC58 CBZ X0, 0x272FCF0
	0x0272FC5C LDR W8, [X26 + 0x18]
	0x0272FC60 CMP W8, 0x2
	0x0272FC64 B.LS 0x272FCEC
	0x0272FC68 STR X28, [X26 + 0x30]
	0x0272FC6C CBZ X27, 0x272FCE8
	0x0272FC70 LDR X8, [X27]
	0x0272FC74 LDR X1, [X23 + 0x28]
	0x0272FC78 MOV X0, X27
	0x0272FC7C LDP X9, X2, [X8 + 0x178]
	0x0272FC80 BLR X9
	0x0272FC84 LDR W8, [X24 + 0x18]
	0x0272FC88 ADD W25, W25, 0x1
	0x0272FC8C CMP W25, W8
	0x0272FC90 B.LT 0x272FAE8
	0x0272FC94 B 0x272FCC8
	0x0272FC98 LDR X8, [X19 + 0x20]
	0x0272FC9C LDR X3, [X31]
	0x0272FCA0 MOV X0, X27
	0x0272FCA4 MOV X1, X22
	0x0272FCA8 LDR X8, [X8 + 0xC0]
	0x0272FCAC MOV X2, X21
	0x0272FCB0 LDR X4, [X8 + 0x48]
	0x0272FCB4 BL 0x2EA07D8
	0x0272FCB8 B 0x272FC84
	0x0272FCBC MOV X1, X31
	0x0272FCC0 BL 0x3C4412C
	0x0272FCC4 B 0x272FC84
	0x0272FCC8 LDP X20, X19, [X31 + 0x60]
	0x0272FCCC LDP X22, X21, [X31 + 0x50]
	0x0272FCD0 LDP X24, X23, [X31 + 0x40]
	0x0272FCD4 LDP X26, X25, [X31 + 0x30]
	0x0272FCD8 LDP X28, X27, [X31 + 0x20]
	0x0272FCDC LDP X29, X30, [X31 + 0x10]
	0x0272FCE0 ADD X31, X31, 0x70
	0x0272FCE4 RET
	0x0272FCE8 BL 0x1C16F20
	0x0272FCEC BL 0x1C16F28
	0x0272FCF0 BL 0x1C16F44
	0x0272FCF4 MOV X1, X31
	0x0272FCF8 BL 0x1C16DEC
	0x0272FCFC MOV X1, X31
	0x0272FD00 STR X31, [X0 + 0x28]
	0x0272FD04 B 0x3C45534
	0x0272FD08 STR X30, [X31 - 0x40]!
	0x0272FD0C STP X24, X23, [X31 + 0x10]
	0x0272FD10 STP X22, X21, [X31 + 0x20]
	0x0272FD14 STP X20, X19, [X31 + 0x30]
	0x0272FD18 ADRP X23, 0x1CAB000
	0x0272FD1C ADRP X24, 0x19CC000
	0x0272FD20 ADRP X22, 0x19C4000
	0x0272FD24 LDRB W8, [X23 + 0x67E]
	0x0272FD28 LDR X24, [X24 + 0xC60]
	0x0272FD2C LDR X22, [X22 + 0x6C0]
	0x0272FD30 MOV X21, X3
	0x0272FD34 MOV X20, X2
	0x0272FD38 MOV X19, X1
	0x0272FD3C TBNZ X8, 0x0, 0x272FD60
	0x0272FD40 ADRP X0, 0x19CC000
	0x0272FD44 LDR X0, [X0 + 0xC60]
	0x0272FD48 BL 0x1C16CF4
	0x0272FD4C ADRP X0, 0x19C4000
	0x0272FD50 LDR X0, [X0 + 0x6C0]
	0x0272FD54 BL 0x1C16CF4
	0x0272FD58 MOVZ W8, 0x1
	0x0272FD5C STRB W8, [X23 + 0x67E]
	0x0272FD60 LDR X0, [X24]
	0x0272FD64 MOVZ W1, 0x3
	0x0272FD68 BL 0x1C16D6C
	0x0272FD6C LDR X9, [X21 + 0x20]
	0x0272FD70 LDR X8, [X22]
	0x0272FD74 MOV X22, X0
	0x0272FD78 LDR X9, [X9 + 0xC0]
	0x0272FD7C LDR W10, [X8 + 0xE0]
	0x0272FD80 LDR X23, [X9 + 0x8]
	0x0272FD84 CBNZ W10, 0x272FD90
	0x0272FD88 MOV X0, X8
	0x0272FD8C BL 0x1C16DFC
	0x0272FD90 MOV X0, X23
	0x0272FD94 MOV X1, X31
	0x0272FD98 BL 0x338C698
	0x0272FD9C CBZ X22, 0x272FE7C
	0x0272FDA0 MOV X23, X0
	0x0272FDA4 CBZ X0, 0x272FDBC
	0x0272FDA8 LDR X8, [X22]
	0x0272FDAC MOV X0, X23
	0x0272FDB0 LDR X1, [X8 + 0x40]
	0x0272FDB4 BL 0x1C16E00
	0x0272FDB8 CBZ X0, 0x272FE70
	0x0272FDBC LDR W8, [X22 + 0x18]
	0x0272FDC0 CBZ W8, 0x272FE6C
	0x0272FDC4 STR X23, [X22 + 0x20]
	0x0272FDC8 LDR X8, [X21 + 0x20]
	0x0272FDCC MOV X1, X31
	0x0272FDD0 LDR X8, [X8 + 0xC0]
	0x0272FDD4 LDR X0, [X8 + 0x10]
	0x0272FDD8 BL 0x338C698
	0x0272FDDC MOV X23, X0
	0x0272FDE0 CBZ X0, 0x272FDF8
	0x0272FDE4 LDR X8, [X22]
	0x0272FDE8 MOV X0, X23
	0x0272FDEC LDR X1, [X8 + 0x40]
	0x0272FDF0 BL 0x1C16E00
	0x0272FDF4 CBZ X0, 0x272FE70
	0x0272FDF8 LDR W8, [X22 + 0x18]
	0x0272FDFC CMP W8, 0x1
	0x0272FE00 B.LS 0x272FE6C
	0x0272FE04 STR X23, [X22 + 0x28]
	0x0272FE08 LDR X8, [X21 + 0x20]
	0x0272FE0C MOV X1, X31
	0x0272FE10 LDR X8, [X8 + 0xC0]
	0x0272FE14 LDR X0, [X8 + 0x18]
	0x0272FE18 BL 0x338C698
	0x0272FE1C MOV X21, X0
	0x0272FE20 CBZ X0, 0x272FE38
	0x0272FE24 LDR X8, [X22]
	0x0272FE28 MOV X0, X21
	0x0272FE2C LDR X1, [X8 + 0x40]
	0x0272FE30 BL 0x1C16E00
	0x0272FE34 CBZ X0, 0x272FE70
	0x0272FE38 LDR W8, [X22 + 0x18]
	0x0272FE3C CMP W8, 0x2
	0x0272FE40 B.LS 0x272FE6C
	0x0272FE44 STR X21, [X22 + 0x30]
	0x0272FE48 MOV X0, X20
	0x0272FE4C MOV X1, X19
	0x0272FE50 MOV X2, X22
	0x0272FE54 LDP X20, X19, [X31 + 0x30]
	0x0272FE58 LDP X22, X21, [X31 + 0x20]
	0x0272FE5C LDP X24, X23, [X31 + 0x10]
	0x0272FE60 MOV X3, X31
	0x0272FE64 LDR X30, [X31], #0x40
	0x0272FE68 B 0x3C458C8
	0x0272FE6C BL 0x1C16F28
	0x0272FE70 BL 0x1C16F44
	0x0272FE74 MOV X1, X31
	0x0272FE78 BL 0x1C16DEC
	0x0272FE7C BL 0x1C16F20
	0x0272FE80 STP X30, X21, [X31 - 0x20]!
	0x0272FE84 STP X20, X19, [X31 + 0x10]
	0x0272FE88 LDR X8, [X3 + 0x20]
	0x0272FE8C MOV X20, X3
	0x0272FE90 MOV X19, X2
	0x0272FE94 MOV X21, X1
	0x0272FE98 LDR X8, [X8 + 0xC0]
	0x0272FE9C LDR X0, [X8 + 0x20]
	0x0272FEA0 LDRB W8, [X0 + 0x135]
	0x0272FEA4 TBNZ X8, 0x0, 0x272FEAC
	0x0272FEA8 BL 0x1C5C684
	0x0272FEAC BL 0x1C16F10
	0x0272FEB0 LDR X8, [X20 + 0x20]
	0x0272FEB4 MOV X1, X21
	0x0272FEB8 MOV X2, X19
	0x0272FEBC MOV X20, X0
	0x0272FEC0 LDR X8, [X8 + 0xC0]
	0x0272FEC4 LDR X3, [X8 + 0x28]
	0x0272FEC8 BL 0x2EA0894
	0x0272FECC MOV X0, X20
	0x0272FED0 LDP X20, X19, [X31 + 0x10]
	0x0272FED4 LDP X30, X21, [X31], #0x20
	0x0272FED8 RET
	0x0272FEDC SUB X31, X31, 0x90
	0x0272FEE0 STP X29, X30, [X31 + 0x30]
	0x0272FEE4 STP X28, X27, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X24, 0x1CAC000
	015 Move W8, [X24+1655]
	016 Move X19, X4
	017 Move W20, W3
	018 Move W21, W2
	019 Move X22, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0x19EF000
	026 Move X0, [X0+2672]
	027 Call 0x1C17CF4
	028 Move X0, 0x19EF000
	029 Move X0, [X0+2680]
	030 Call 0x1C17CF4
	031 Move X0, 0x19EF000
	032 Move X0, [X0+2688]
	033 Call 0x1C17CF4
	034 Move X0, 0x19C5000
	035 Move X0, [X0+2512]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X24+1655], W8
	039 Compare X23, 0
	040 JumpIfEqual {201}
	041 Move X0, X23
	042 Move X1, X31
	043 Call UnityEventBase.PrepareInvoke, X0
	044 Compare X0, 0
	045 JumpIfEqual {201}
	046 Move W8, [X0+24]
	047 Move X24, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X28, 0x19EF000
	050 Move X28, [X28+2688]
	051 Move W25, W31
	052 Move X2, [X28]
	053 Move X0, X24
	054 Move W1, W25
	055 Call List`1<Object>.get_Item, X0, X1
	056 Move X8, [X19+32]
	057 Move X26, X0
	058 Move X8, [X8+192]
	059 Move X8, [X8+32]
	060 Move W9, [X8+309]
	061 Move TEMP, X9
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {68}
	065 Move X0, X8
	066 Call 0x1C5D684
	067 Move X8, X0
	068 Compare X26, 0
	069 JumpIfEqual {78}
	070 Move X9, [X26]
	071 Move W10, [X8+304]
	072 Move W11, [X9+304]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X9, [X9+200]
	075 Add X9, X9, X10
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X2, [X28]
	079 Move X0, X24
	080 Move W1, W25
	081 Call List`1<Object>.get_Item, X0, X1
	082 Compare X0, 0
	083 JumpIfEqual {95}
	084 Move X8, 0x19EF000
	085 Move X9, [X0]
	086 Move X8, [X8+2672]
	087 Move W11, [X9+304]
	088 Move X8, [X8]
	089 Move W10, [X8+304]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X9, [X9+200]
	092 Add X9, X9, X10
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X2, [X28]
	096 Move X0, X24
	097 Move W1, W25
	098 Call List`1<Object>.get_Item, X0, X1
	099 Move X27, [X23+40]
	100 Move X26, X0
	101 Compare X27, 0
	102 JumpIfNotEqual {110}
	103 Move X8, 0x19C5000
	104 Move X8, [X8+2512]
	105 Move W1, 3
	106 Move X0, [X8]
	107 Call 0x1C17D6C
	108 Move X27, X0
	109 Move [X23+40], X0
	110 Compare X27, 0
	111 JumpIfEqual {201}
	112 Compare X22, 0
	113 JumpIfEqual {120}
	114 Move X8, [X27]
	115 Move X0, X22
	116 Move X1, [X8+64]
	117 Call 0x1C17E00
	118 Compare X0, 0
	119 JumpIfEqual {203}
	120 Move W8, [X27+24]
	121 Compare W8, 0
	122 JumpIfEqual {202}
	123 Move [X27+32], X22
	124 Move X29, [X23+40]
	125 Move [X31+12], W21
	126 Move X8, [X19+32]
	127 Add X1, X31, 12
	128 Move X8, [X8+192]
	129 Move X0, [X8+56]
	130 Call 0x1C17E04
	131 Compare X29, 0
	132 JumpIfEqual {201}
	133 Move X27, X0
	134 Compare X0, 0
	135 JumpIfEqual {142}
	136 Move X8, [X29]
	137 Move X0, X27
	138 Move X1, [X8+64]
	139 Call 0x1C17E00
	140 Compare X0, 0
	141 JumpIfEqual {203}
	142 Move W8, [X29+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move [X29+40], X27
	145 Move X29, [X23+40]
	146 Move [X31+8], W20
	147 Move X8, [X19+32]
	148 Add X1, X31, 8
	149 Move X8, [X8+192]
	150 Move X0, [X8+64]
	151 Call 0x1C17E04
	152 Compare X29, 0
	153 JumpIfEqual {201}
	154 Move X27, X0
	155 Compare X0, 0
	156 JumpIfEqual {163}
	157 Move X8, [X29]
	158 Move X0, X27
	159 Move X1, [X8+64]
	160 Call 0x1C17E00
	161 Compare X0, 0
	162 JumpIfEqual {203}
	163 Move W8, [X29+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X29+48], X27
	166 Compare X26, 0
	167 JumpIfEqual {201}
	168 Move X8, [X26]
	169 Move X1, [X23+40]
	170 Move X0, X26
	171 Move X9, [X8+376]
	172 Move X2, [X8+384]
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move W8, [X24+24]
	175 Add W25, W25, 1
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X8, [X19+32]
	178 Move X0, X26
	179 Move X1, X22
	180 Move W2, W21
	181 Move X8, [X8+192]
	182 Move W3, W20
	183 Move X4, [X8+72]
	184 Call 0x2EA0B68, X0, X1, X2, X3
	185 Move X1, X31
	186 Call InvokableCall.Invoke, X0
	187 Move X20, [X31+96]
	188 Move X19, [X31+104]
	189 Move X22, [X31+80]
	190 Move X21, [X31+88]
	191 Move X24, [X31+64]
	192 Move X23, [X31+72]
	193 Move X26, [X31+48]
	194 Move X25, [X31+56]
	195 Move X28, [X31+32]
	196 Move X27, [X31+40]
	197 Move X29, [X31+16]
	198 Move X30, [X31+24]
	199 Add X31, X31, 112
	200 Return 
	201 Call 0x1C17F20
	202 Call 0x1C17F28
	203 Call 0x1C17F44
	204 Move X1, X31
	205 Call 0x1C17DEC

