Type: UnityEngine.Events.UnityEventBase

Method: System.Void .ctor()

Disassembly:
	0x03C46534 BL 0x1C16CF4
	0x03C46538 ADRP X0, 0x4B3000
	0x03C4653C LDR X0, [X0 + 0x548]
	0x03C46540 BL 0x1C16CF4
	0x03C46544 MOVZ W8, 0x1
	0x03C46548 STRB W8, [X20 + 0xC38]
	0x03C4654C ADRP X23, 0x79F000
	0x03C46550 ADRP X21, 0x4B3000
	0x03C46554 ADRP X22, 0x519000
	0x03C46558 LDR X8, [X23 + 0xC28]
	0x03C4655C LDR W20, [X19]
	0x03C46560 LDR X21, [X21 + 0x548]
	0x03C46564 LDR X22, [X22 + 0x9D0]
	0x03C46568 CBNZ X8, 0x3C46580
	0x03C4656C ADRP X0, 0xFFFFFFFFFCED4000
	0x03C46570 ADD X0, X0, 0xEF6
	0x03C46574 BL 0x1C16CB8
	0x03C46578 MOV X8, X0
	0x03C4657C STR X0, [X23 + 0xC28]
	0x03C46580 MOV W0, W20
	0x03C46584 BLR X8
	0x03C46588 LDR X8, [X21]
	0x03C4658C MOV W21, W0
	0x03C46590 MOV X0, X8
	0x03C46594 BL 0x1C16F10
	0x03C46598 LDR X2, [X22]
	0x03C4659C MOV W1, W21
	0x03C465A0 MOV X20, X0
	0x03C465A4 BL 0x301B830
	0x03C465A8 MOV X0, X19
	0x03C465AC MOV X1, X20
	0x03C465B0 BL 0x3C465DC
	0x03C465B4 CBZ X20, 0x3C465D8
	0x03C465B8 ADRP X8, 0x519000
	0x03C465BC LDR X8, [X8 + 0x9C8]
	0x03C465C0 MOV X0, X20
	0x03C465C4 LDP X20, X19, [X31 + 0x20]
	0x03C465C8 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7A0000
	007 Move X20, 0x51A000
	008 Move X21, 0x51A000
	009 Move W8, [X22+3035]
	010 Move X20, [X20+2488]
	011 Move X21, [X21+2496]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x51A000
	018 Move X0, [X0+2488]
	019 Call 0x1C17CF4
	020 Move X0, 0x51A000
	021 Move X0, [X0+2496]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3035], W8
	025 Move W8, 1
	026 Move X0, X19
	027 Move X1, X31
	028 Move [X19+32], W8
	029 Call Object..ctor, X0
	030 Move X0, [X20]
	031 Call 0x1C17F10
	032 Move X20, X0
	033 Call InvokableCallList..ctor, X0
	034 Move [X19+16], X20
	035 Move X0, [X21]
	036 Call 0x1C17F10
	037 Move X20, X0
	038 Call PersistentCallGroup..ctor, X0
	039 Move [X19+24], X20
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return 

Method: System.Void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()

Disassembly:
	0x03C465CC LDR X1, [X8]

ISIL:
No ISIL was generated
Method: System.Void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()

Disassembly:
	0x03C465F8 TBNZ X8, 0x0, 0x3C46634

ISIL:
	001 Call UnityEventBase.DirtyPersistentCalls, X0
	002 Return 

Method: System.Reflection.MethodInfo FindMethod_Impl(System.String name, System.Type targetObjType)

Disassembly:
	

ISIL:
No ISIL was generated
Method: UnityEngine.Events.BaseInvokableCall GetDelegate(System.Object target, System.Reflection.MethodInfo theFunction)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Reflection.MethodInfo FindMethod(UnityEngine.Events.PersistentCall call)

Disassembly:
	0x03C455A0 BL 0x3C45480
	0x03C455A4 STR X20, [X19 + 0x10]
	0x03C455A8 LDR X0, [X21]
	0x03C455AC BL 0x1C16F10
	0x03C455B0 MOV X20, X0
	0x03C455B4 BL 0x3C44C3C
	0x03C455B8 STR X20, [X19 + 0x18]
	0x03C455BC LDP X20, X19, [X31 + 0x20]
	0x03C455C0 LDP X22, X21, [X31 + 0x10]
	0x03C455C4 LDR X30, [X31], #0x30
	0x03C455C8 RET
	0x03C455CC B 0x3C455D0
	0x03C455D0 STP X30, X19, [X31 - 0x10]!
	0x03C455D4 MOV X19, X0
	0x03C455D8 LDR X0, [X0 + 0x10]
	0x03C455DC CBZ X0, 0x3C455F4
	0x03C455E0 BL 0x3C45310
	0x03C455E4 MOVZ W8, 0x1
	0x03C455E8 STRB W8, [X19 + 0x20]
	0x03C455EC LDP X30, X19, [X31], #0x10
	0x03C455F0 RET
	0x03C455F4 BL 0x1C16F20
	0x03C455F8 B 0x3C455D0
	0x03C455FC STR X30, [X31 - 0x40]!
	0x03C45600 STP X24, X23, [X31 + 0x10]
	0x03C45604 STP X22, X21, [X31 + 0x20]
	0x03C45608 STP X20, X19, [X31 + 0x30]
	0x03C4560C ADRP X24, 0x7A0000
	0x03C45610 LDRB W8, [X24 + 0xBDD]
	0x03C45614 MOV X21, X4
	0x03C45618 MOV W23, W3
	0x03C4561C MOV X20, X2
	0x03C45620 MOV X19, X1
	0x03C45624 MOV X22, X0
	0x03C45628 TBNZ X8, 0x0, 0x3C45688
	0x03C4562C ADRP X0, 0x4D7000
	0x03C45630 LDR X0, [X0 + 0x248]
	0x03C45634 BL 0x1C16CF4
	0x03C45638 ADRP X0, 0x4D5000
	0x03C4563C LDR X0, [X0 + 0xD80]
	0x03C45640 BL 0x1C16CF4
	0x03C45644 ADRP X0, 0x4D6000
	0x03C45648 LDR X0, [X0 + 0x7F8]
	0x03C4564C BL 0x1C16CF4
	0x03C45650 ADRP X0, 0x4D6000
	0x03C45654 LDR X0, [X0 + 0xA80]
	0x03C45658 BL 0x1C16CF4
	0x03C4565C ADRP X0, 0x4D6000
	0x03C45660 LDR X0, [X0 + 0xB60]
	0x03C45664 BL 0x1C16CF4
	0x03C45668 ADRP X0, 0x4B6000
	0x03C4566C LDR X0, [X0 + 0xC60]
	0x03C45670 BL 0x1C16CF4
	0x03C45674 ADRP X0, 0x4AE000
	0x03C45678 LDR X0, [X0 + 0x6C0]
	0x03C4567C BL 0x1C16CF4
	0x03C45680 MOVZ W8, 0x1
	0x03C45684 STRB W8, [X24 + 0xBDD]
	0x03C45688 CMP W23, 0x6
	0x03C4568C B.HI 0x3C456D4
	0x03C45690 ADRP X9, 0xFFFFFFFFFCF52000
	0x03C45694 MOV W8, W23
	0x03C45698 ADD X9, X9, 0xDFC
	0x03C4569C ADR X10, 0x10
	0x03C456A0 LDRB W11, [X9, X8, LSL]
	0x03C456A4 ADD X10, X10, X11, 0x2, LSL
	0x03C456A8 BR X10
	0x03C456AC LDR X8, [X22]
	0x03C456B0 MOV X0, X22
	0x03C456B4 MOV X1, X19
	0x03C456B8 MOV X2, X20
	0x03C456BC LDP X4, X3, [X8 + 0x198]
	0x03C456C0 LDP X20, X19, [X31 + 0x30]
	0x03C456C4 LDP X22, X21, [X31 + 0x20]
	0x03C456C8 LDP X24, X23, [X31 + 0x10]
	0x03C456CC LDR X30, [X31], #0x40
	0x03C456D0 BR X4
	0x03C456D4 LDP X20, X19, [X31 + 0x30]
	0x03C456D8 LDP X22, X21, [X31 + 0x20]
	0x03C456DC LDP X24, X23, [X31 + 0x10]
	0x03C456E0 MOV X0, X31
	0x03C456E4 LDR X30, [X31], #0x40
	0x03C456E8 RET
	0x03C456EC ADRP X8, 0x4B6000
	0x03C456F0 LDR X8, [X8 + 0xC60]
	0x03C456F4 MOV W1, W31
	0x03C456F8 LDR X0, [X8]
	0x03C456FC BL 0x1C16D6C
	0x03C45700 MOV X2, X0
	0x03C45704 MOV X0, X20
	0x03C45708 MOV X1, X19
	0x03C4570C B 0x3C458A0
	0x03C45710 ADRP X8, 0x4B6000
	0x03C45714 LDR X8, [X8 + 0xC60]
	0x03C45718 MOVZ W1, 0x1
	0x03C4571C LDR X0, [X8]
	0x03C45720 BL 0x1C16D6C
	0x03C45724 MOV X22, X0
	0x03C45728 CBNZ X21, 0x3C45760
	0x03C4572C ADRP X8, 0x4AE000
	0x03C45730 LDR X8, [X8 + 0x6C0]
	0x03C45734 LDR X0, [X8]
	0x03C45738 ADRP X8, 0x4D6000
	0x03C4573C LDR X8, [X8 + 0x7F8]
	0x03C45740 LDR W9, [X0 + 0xE0]
	0x03C45744 LDR X21, [X8]
	0x03C45748 CBNZ W9, 0x3C45750
	0x03C4574C BL 0x1C16DFC
	0x03C45750 MOV X0, X21
	0x03C45754 MOV X1, X31
	0x03C45758 BL 0x338C698
	0x03C4575C MOV X21, X0
	0x03C45760 CBZ X22, 0x3C458B4
	0x03C45764 CBZ X21, 0x3C4577C
	0x03C45768 LDR X8, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7A1000
	008 Move X22, 0x4D7000
	009 Move X23, 0x4AF000
	010 Move W8, [X21+3036]
	011 Move X22, [X22+2040]
	012 Move X23, [X23+1728]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x4D7000
	020 Move X0, [X0+2040]
	021 Call 0x1C17CF4
	022 Move X0, 0x4AF000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x4B7000
	026 Move X0, [X0+1480]
	027 Call 0x1C17CF4
	028 Move X0, 0x4AF000
	029 Move X0, [X0+1728]
	030 Call 0x1C17CF4
	031 Move X0, 0x51B000
	032 Move X0, [X0+2320]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+3036], W8
	036 Move X0, [X23]
	037 Move X21, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Compare X20, 0
	046 JumpIfEqual {140}
	047 Move X8, [X20+48]
	048 Compare X8, 0
	049 JumpIfEqual {140}
	050 Move X21, X0
	051 Move X0, [X8+24]
	052 Move X1, X31
	053 Call String.IsNullOrEmpty, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {89}
	058 Move X8, [X20+48]
	059 Compare X8, 0
	060 JumpIfEqual {140}
	061 Move X0, [X23]
	062 Move X21, [X8+24]
	063 Move W9, [X0+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X8, 0x4B7000
	068 Move X9, 0x51B000
	069 Move X8, [X8+1480]
	070 Move X9, [X9+2320]
	071 Move X0, X21
	072 Move W1, W31
	073 Move X2, [X8]
	074 Move X3, [X9]
	075 Call 0x1C180BC
	076 Move X21, X0
	077 Compare X0, 0
	078 JumpIfNotEqual {89}
	079 Move X0, [X23]
	080 Move X21, [X22]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X21
	086 Move X1, X31
	087 Call Type.GetTypeFromHandle, X0
	088 Move X21, X0
	089 Move X8, 0x4AF000
	090 Move X8, [X8+1432]
	091 Move X22, [X20+16]
	092 Move X0, [X8]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X22
	098 Move X1, X31
	099 Call Object.op_Inequality, X0, X1
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {109}
	104 Move X0, [X20+16]
	105 Compare X0, 0
	106 JumpIfEqual {140}
	107 Move X1, X31
	108 Call "il2cpp_vm_object_is_inst", X0
	109 Move X0, X20
	110 Call PersistentCall.get_targetAssemblyTypeName, X0
	111 Move X8, [X23]
	112 Move X22, X0
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move X8, 0x4B7000
	119 Move X9, 0x51B000
	120 Move X8, [X8+1480]
	121 Move X9, [X9+2320]
	122 Move X0, X22
	123 Move W1, W31
	124 Move X2, [X8]
	125 Move X3, [X9]
	126 Call 0x1C180BC
	127 Move X2, X0
	128 Move X1, [X20+32]
	129 Move W3, [X20+40]
	130 Move X0, X19
	131 Move X4, X21
	132 Move X20, [X31+32]
	133 Move X19, [X31+40]
	134 Move X22, [X31+16]
	135 Move X21, [X31+24]
	136 Move X30, [X31+48]
	137 Move X23, [X31+56]
	138 Call UnityEventBase.FindMethod, X0, X1, X2, X3, X4
	139 Return X0
	140 Call 0x1C17F20

Method: System.Reflection.MethodInfo FindMethod(System.String name, System.Type listenerType, UnityEngine.Events.PersistentListenerMode mode, System.Type argumentType)

Disassembly:
	0x03C465FC ADRP X0, 0x4AD000
	0x03C46600 LDR X0, [X0 + 0x970]
	0x03C46604 BL 0x1C16CF4
	0x03C46608 ADRP X0, 0x503000
	0x03C4660C LDR X0, [X0 + 0x408]
	0x03C46610 BL 0x1C16CF4
	0x03C46614 ADRP X0, 0x519000
	0x03C46618 LDR X0, [X0 + 0x9D8]
	0x03C4661C BL 0x1C16CF4
	0x03C46620 ADRP X0, 0x519000
	0x03C46624 LDR X0, [X0 + 0x9E0]
	0x03C46628 BL 0x1C16CF4
	0x03C4662C MOVZ W8, 0x1
	0x03C46630 STRB W8, [X21 + 0xC39]
	0x03C46634 CBZ X19, 0x3C467E4
	0x03C46638 ADRP X8, 0x519000
	0x03C4663C LDR X8, [X8 + 0x9D8]
	0x03C46640 MOV X0, X19
	0x03C46644 LDR X1, [X8]
	0x03C46648 BL 0x301BB2C
	0x03C4664C ADRP X23, 0x79F000
	0x03C46650 LDR X8, [X23 + 0xC28]
	0x03C46654 LDR W22, [X20]
	0x03C46658 MOV W21, W0
	0x03C4665C CBNZ X8, 0x3C46674
	0x03C46660 ADRP X0, 0xFFFFFFFFFCED4000
	0x03C46664 ADD X0, X0, 0xEF6
	0x03C46668 BL 0x1C16CB8
	0x03C4666C MOV X8, X0
	0x03C46670 STR X0, [X23 + 0xC28]
	0x03C46674 MOV W0, W22
	0x03C46678 BLR X8
	0x03C4667C CMP W21, W0
	0x03C46680 B.GE 0x3C466C4
	0x03C46684 LDR X8, [X23 + 0xC28]
	0x03C46688 LDR W21, [X20]
	0x03C4668C CBNZ X8, 0x3C466A4
	0x03C46690 ADRP X0, 0xFFFFFFFFFCED4000
	0x03C46694 ADD X0, X0, 0xEF6
	0x03C46698 BL 0x1C16CB8
	0x03C4669C MOV X8, X0
	0x03C466A0 STR X0, [X23 + 0xC28]
	0x03C466A4 MOV W0, W21
	0x03C466A8 BLR X8
	0x03C466AC ADRP X8, 0x519000
	0x03C466B0 LDR X8, [X8 + 0x9E0]
	0x03C466B4 MOV W1, W0
	0x03C466B8 MOV X0, X19
	0x03C466BC LDR X2, [X8]
	0x03C466C0 BL 0x301BB48
	0x03C466C4 LDP W2, W8, [X19 + 0x18]
	0x03C466C8 ADD W8, W8, 0x1
	0x03C466CC CMP W2, 0x1
	0x03C466D0 STP W31, W8, [X19 + 0x18]
	0x03C466D4 B.LT 0x3C466E8
	0x03C466D8 LDR X0, [X19 + 0x10]
	0x03C466DC MOV W1, W31
	0x03C466E0 MOV X3, X31
	0x03C466E4 BL 0x339FA34
	0x03C466E8 ADRP X22, 0x79F000
	0x03C466EC LDR X8, [X22 + 0xBE8]
	0x03C466F0 LDR W21, [X20]
	0x03C466F4 CBNZ X8, 0x3C4670C
	0x03C466F8 ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C466FC ADD X0, X0, 0x6DC
	0x03C46700 BL 0x1C16CB8
	0x03C46704 MOV X8, X0
	0x03C46708 STR X0, [X22 + 0xBE8]
	0x03C4670C MOV W0, W21
	0x03C46710 BLR X8
	0x03C46714 TBZ X0, 0x0, 0x3C467E8
	0x03C46718 ADRP X8, 0x4AD000
	0x03C4671C LDR X8, [X8 + 0x970]
	0x03C46720 LDR X0, [X8]
	0x03C46724 LDR W8, [X0 + 0xE0]
	0x03C46728 CBNZ W8, 0x3C46730
	0x03C4672C BL 0x1C16DFC
	0x03C46730 MOV X0, X31
	0x03C46734 BL 0x3C018E4
	0x03C46738 TBNZ X0, 0x0, 0x3C4676C
	0x03C4673C ADRP X22, 0x79F000
	0x03C46740 LDR X8, [X22 + 0xC10]
	0x03C46744 LDR W21, [X20]
	0x03C46748 CBNZ X8, 0x3C46760
	0x03C4674C ADRP X0, 0xFFFFFFFFFCEDF000
	0x03C46750 ADD X0, X0, 0x48
	0x03C46754 BL 0x1C16CB8
	0x03C46758 MOV X8, X0
	0x03C4675C STR X0, [X22 + 0xC10]
	0x03C46760 MOV W0, W21
	0x03C46764 BLR X8
	0x03C46768 TBZ X0, 0x0, 0x3C46808
	0x03C4676C LDR X8, [X23 + 0xC28]
	0x03C46770 LDR W21, [X20]
	0x03C46774 CBNZ X8, 0x3C4678C
	0x03C46778 ADRP X0, 0xFFFFFFFFFCED4000
	0x03C4677C ADD X0, X0, 0xEF6
	0x03C46780 BL 0x1C16CB8
	0x03C46784 MOV X8, X0
	0x03C46788 STR X0, [X23 + 0xC28]
	0x03C4678C MOV W0, W21
	0x03C46790 BLR X8
	0x03C46794 CBZ W0, 0x3C467D4
	0x03C46798 ADRP X21, 0x79F000
	0x03C4679C LDR X2, [X21 + 0xC30]
	0x03C467A0 LDR W20, [X20]
	0x03C467A4 CBNZ X2, 0x3C467BC
	0x03C467A8 ADRP X0, 0xFFFFFFFFFCED0000
	0x03C467AC ADD X0, X0, 0xCBE
	0x03C467B0 BL 0x1C16CB8
	0x03C467B4 MOV X2, X0
	0x03C467B8 STR X0, [X21 + 0xC30]
	0x03C467BC MOV W0, W20
	0x03C467C0 MOV X1, X19
	0x03C467C4 LDP X20, X19, [X31 + 0x20]
	0x03C467C8 LDP X22, X21, [X31 + 0x10]
	0x03C467CC LDP X30, X23, [X31], #0x30
	0x03C467D0 BR X2
	0x03C467D4 LDP X20, X19, [X31 + 0x20]
	0x03C467D8 LDP X22, X21, [X31 + 0x10]
	0x03C467DC LDP X30, X23, [X31], #0x30
	0x03C467E0 RET
	0x03C467E4 BL 0x1C16F20
	0x03C467E8 ADRP X0, 0x4B5000
	0x03C467EC LDR X0, [X0 + 0x578]
	0x03C467F0 BL 0x1C16D08
	0x03C467F4 BL 0x1C16F10
	0x03C467F8 MOV X19, X0
	0x03C467FC ADRP X0, 0x519000
	0x03C46800 LDR X0, [X0 + 0x9E8]
	0x03C46804 B 0x3C46824
	0x03C46808 ADRP X0, 0x4B5000
	0x03C4680C LDR X0, [X0 + 0x578]
	0x03C46810 BL 0x1C16D08
	0x03C46814 BL 0x1C16F10
	0x03C46818 MOV X19, X0
	0x03C4681C ADRP X0, 0x519000
	0x03C46820 LDR X0, [X0 + 0x9F0]
	0x03C46824 BL 0x1C16D08
	0x03C46828 MOV X1, X0
	0x03C4682C MOV X0, X19
	0x03C46830 MOV X2, X31
	0x03C46834 BL 0x3314A68
	0x03C46838 ADRP X0, 0x519000
	0x03C4683C LDR X0, [X0 + 0x9F8]
	0x03C46840 BL 0x1C16D08
	0x03C46844 MOV X1, X0
	0x03C46848 MOV X0, X19
	0x03C4684C BL 0x1C16DEC
	0x03C46850 CMP W0, W1
	0x03C46854 CSET W0, EQ
	0x03C46858 RET
	0x03C4685C CMP W0, W1
	0x03C46860 CSET W0, NE
	0x03C46864 RET
	0x03C46868 LDR W0, [X0]
	0x03C4686C RET
	0x03C46870 STP X30, X21, [X31 - 0x20]!
	0x03C46874 STP X20, X19, [X31 + 0x10]
	0x03C46878 ADRP X21, 0x79F000
	0x03C4687C LDRB W8, [X21 + 0xC3A]
	0x03C46880 MOV X20, X1
	0x03C46884 MOV X19, X0
	0x03C46888 TBNZ X8, 0x0, 0x3C468A0
	0x03C4688C ADRP X0, 0x4D8000
	0x03C46890 LDR X0, [X0 + 0x748]
	0x03C46894 BL 0x1C16CF4
	0x03C46898 MOVZ W8, 0x1
	0x03C4689C STRB W8, [X21 + 0xC3A]
	0x03C468A0 CBZ X20, 0x3C468BC
	0x03C468A4 ADRP X8, 0x4D8000
	0x03C468A8 LDR X8, [X8 + 0x748]
	0x03C468AC LDR X9, [X20]
	0x03C468B0 LDR X8, [X8]
	0x03C468B4 CMP X9, X8
	0x03C468B8 B.EQ 0x3C468C4
	0x03C468BC MOV W0, W31
	0x03C468C0 B 0x3C468DC
	0x03C468C4 MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7A0000
	009 Move W8, [X24+3037]
	010 Move X21, X4
	011 Move W23, W3
	012 Move X20, X2
	013 Move X19, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x4D7000
	020 Move X0, [X0+584]
	021 Call 0x1C17CF4
	022 Move X0, 0x4D5000
	023 Move X0, [X0+3456]
	024 Call 0x1C17CF4
	025 Move X0, 0x4D6000
	026 Move X0, [X0+2040]
	027 Call 0x1C17CF4
	028 Move X0, 0x4D6000
	029 Move X0, [X0+2688]
	030 Call 0x1C17CF4
	031 Move X0, 0x4D6000
	032 Move X0, [X0+2912]
	033 Call 0x1C17CF4
	034 Move X0, 0x4B6000
	035 Move X0, [X0+3168]
	036 Call 0x1C17CF4
	037 Move X0, 0x4AE000
	038 Move X0, [X0+1728]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X24+3037], W8
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X9, -51044352
	044 Move W8, W23
	045 Add X9, X9, 3580
	046 NotImplemented "Instruction ADR not yet implemented."
	047 Move W11, [X9]
	048 Add X10, X10, X11
	049 CallNoReturn X10
	050 Move X8, [X22]
	051 Move X0, X22
	052 Move X1, X19
	053 Move X2, X20
	054 Move X4, [X8+408]
	055 Move X3, [X8+416]
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 CallNoReturn X4
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X0, X31
	071 Move X30, [X31+64]
	072 Return X0
	073 Move X8, 0x4B6000
	074 Move X8, [X8+3168]
	075 Move W1, W31
	076 Move X0, [X8]
	077 Call 0x1C17D6C
	078 Move X2, X0
	079 Move X0, X20
	080 Move X1, X19
	081 Move X8, 0x4B6000
	082 Move X8, [X8+3168]
	083 Move W1, 1
	084 Move X0, [X8]
	085 Call 0x1C17D6C
	086 Move X22, X0
	087 Compare X21, 0
	088 JumpIfNotEqual {103}
	089 Move X8, 0x4AE000
	090 Move X8, [X8+1728]
	091 Move X0, [X8]
	092 Move X8, 0x4D6000
	093 Move X8, [X8+2040]
	094 Move W9, [X0+224]
	095 Move X21, [X8]
	096 Compare W9, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X0, X21
	100 Move X1, X31
	101 Call Type.GetTypeFromHandle, X0
	102 Move X21, X0
	103 Compare X22, 0
	104 JumpIfEqual {195}
	105 Compare X21, 0
	106 JumpIfEqual {113}
	107 Move X8, [X22]
	108 Move X0, X21
	109 Move X1, [X8+64]
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {197}
	113 Move W8, [X22+24]
	114 Compare W8, 0
	115 JumpIfEqual {196}
	116 Move [X22+32], X21
	117 Move X0, X20
	118 Move X1, X19
	119 Move X2, X22
	120 Move X8, 0x4B6000
	121 Move X8, [X8+3168]
	122 Move W1, 1
	123 Move X0, [X8]
	124 Call 0x1C17D6C
	125 Move X8, 0x4AE000
	126 Move X8, [X8+1728]
	127 Move X9, 0x4D5000
	128 Move X8, [X8]
	129 Move X9, [X9+3456]
	130 Move X8, 0x4B6000
	131 Move X8, [X8+3168]
	132 Move W1, 1
	133 Move X0, [X8]
	134 Call 0x1C17D6C
	135 Move X8, 0x4AE000
	136 Move X8, [X8+1728]
	137 Move X9, 0x4D6000
	138 Move X8, [X8]
	139 Move X9, [X9+2688]
	140 Move X8, 0x4B6000
	141 Move X8, [X8+3168]
	142 Move W1, 1
	143 Move X0, [X8]
	144 Call 0x1C17D6C
	145 Move X8, 0x4AE000
	146 Move X8, [X8+1728]
	147 Move X9, 0x4D6000
	148 Move X8, [X8]
	149 Move X9, [X9+2912]
	150 Move X8, 0x4B6000
	151 Move X8, [X8+3168]
	152 Move W1, 1
	153 Move X0, [X8]
	154 Call 0x1C17D6C
	155 Move X8, 0x4AE000
	156 Move X8, [X8+1728]
	157 Move X9, 0x4D7000
	158 Move X8, [X8]
	159 Move X9, [X9+584]
	160 Move W10, [X8+224]
	161 Move X22, [X9]
	162 Move X21, X0
	163 Compare W10, 0
	164 JumpIfNotEqual {167}
	165 Move X0, X8
	166 Call 0x1C17DFC
	167 Move X0, X22
	168 Move X1, X31
	169 Call Type.GetTypeFromHandle, X0
	170 Compare X21, 0
	171 JumpIfEqual {195}
	172 Move X22, X0
	173 Compare X0, 0
	174 JumpIfEqual {181}
	175 Move X8, [X21]
	176 Move X0, X22
	177 Move X1, [X8+64]
	178 Call 0x1C17E00
	179 Compare X0, 0
	180 JumpIfEqual {197}
	181 Move W8, [X21+24]
	182 Compare W8, 0
	183 JumpIfEqual {196}
	184 Move X0, X20
	185 Move X1, X19
	186 Move X2, X21
	187 Move [X21+32], X22
	188 Move X20, [X31+48]
	189 Move X19, [X31+56]
	190 Move X22, [X31+32]
	191 Move X21, [X31+40]
	192 Move X24, [X31+16]
	193 Move X23, [X31+24]
	194 Move X30, [X31+64]
	195 Call 0x1C17F20
	196 Call 0x1C17F28
	197 Call 0x1C17F44
	198 Move X1, X31
	199 Call 0x1C17DEC

Method: System.Int32 GetPersistentEventCount()

Disassembly:
	0x03C46AB0 MOV X4, X19
	0x03C46AB4 LDP X20, X19, [X31 + 0x30]
	0x03C46AB8 LDP X22, X21, [X31 + 0x20]
	0x03C46ABC LDP X24, X23, [X31 + 0x10]
	0x03C46AC0 LDR X30, [X31], #0x40
	0x03C46AC4 BR X5

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call PersistentCallGroup.get_Count, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void DirtyPersistentCalls()

Disassembly:
	0x03C465D0 LDP X30, X23, [X31], #0x30
	0x03C465D4 B 0x301DDC4
	0x03C465D8 BL 0x1C16F20
	0x03C465DC STP X30, X23, [X31 - 0x30]!
	0x03C465E0 STP X22, X21, [X31 + 0x10]
	0x03C465E4 STP X20, X19, [X31 + 0x20]
	0x03C465E8 ADRP X21, 0x79F000
	0x03C465EC LDRB W8, [X21 + 0xC39]
	0x03C465F0 MOV X19, X1
	0x03C465F4 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Call InvokableCallList.ClearPersistent, X0
	008 Move W8, 1
	009 Move [X19+32], W8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 
	013 Call 0x1C17F20

Method: System.Void RebuildPersistentCallsIfNeeded()

Disassembly:
	0x03C46AC8 STR X30, [X31 - 0x20]!
	0x03C46ACC STP X20, X19, [X31 + 0x10]
	0x03C46AD0 ADRP X20, 0x79F000
	0x03C46AD4 ADRP X19, 0x519000
	0x03C46AD8 LDRB W8, [X20 + 0xC60]
	0x03C46ADC LDR X19, [X19 + 0xA00]
	0x03C46AE0 TBNZ X8, 0x0, 0x3C46AF8
	0x03C46AE4 ADRP X0, 0x519000
	0x03C46AE8 LDR X0, [X0 + 0xA00]
	0x03C46AEC BL 0x1C16CF4
	0x03C46AF0 MOVZ W8, 0x1
	0x03C46AF4 STRB W8, [X20 + 0xC60]
	0x03C46AF8 LDR X0, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Compare W8, 0
	005 JumpIfEqual {14}
	006 Move X19, X0
	007 Move X0, [X0+24]
	008 Compare X0, 0
	009 JumpIfEqual {17}
	010 Move X1, [X19+16]
	011 Move X2, X19
	012 Call PersistentCallGroup.Initialize, X0, X1, X2
	013 Move [X19+32], W31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 
	017 Call 0x1C17F20

Method: System.Void AddCall(UnityEngine.Events.BaseInvokableCall call)

Disassembly:
	0x03C46AFC LDR W8, [X0 + 0xE0]
	0x03C46B00 CBNZ W8, 0x3C46B08
	0x03C46B04 BL 0x1C16DFC
	0x03C46B08 ADRP X20, 0x79F000
	0x03C46B0C LDRB W8, [X20 + 0xD4A]
	0x03C46B10 CBNZ W8, 0x3C46B28

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call InvokableCallList.AddListener, X0, X1
	007 Return 
	008 Call 0x1C17F20

Method: System.Void RemoveListener(System.Object targetObj, System.Reflection.MethodInfo method)

Disassembly:
	0x03C46B14 ADRP X0, 0x519000
	0x03C46B18 LDR X0, [X0 + 0xA00]
	0x03C46B1C BL 0x1C16CF4
	0x03C46B20 MOVZ W8, 0x1
	0x03C46B24 STRB W8, [X20 + 0xD4A]
	0x03C46B28 LDR X0, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call InvokableCallList.RemoveListener, X0, X1, X2
	007 Return 
	008 Call 0x1C17F20

Method: System.Void RemoveAllListeners()

Disassembly:
	0x03C46B2C LDR W8, [X0 + 0xE0]
	0x03C46B30 CBNZ W8, 0x3C46B3C
	0x03C46B34 BL 0x1C16DFC
	0x03C46B38 LDR X0, [X19]
	0x03C46B3C LDR X8, [X0 + 0xB8]
	0x03C46B40 LDR X8, [X8 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call InvokableCallList.Clear, X0
	007 Return 
	008 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.Events.BaseInvokableCall> PrepareInvoke()

Disassembly:
	0x03C46B44 CBNZ X8, 0x3C46B60
	0x03C46B48 LDR W8, [X0 + 0xE0]
	0x03C46B4C CBNZ W8, 0x3C46B58
	0x03C46B50 BL 0x1C16DFC
	0x03C46B54 LDR X0, [X19]
	0x03C46B58 LDR X8, [X0 + 0xB8]
	0x03C46B5C LDR X8, [X8]
	0x03C46B60 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call UnityEventBase.RebuildPersistentCallsIfNeeded, X0
	005 Move X0, [X19+16]
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call InvokableCallList.PrepareInvoke, X0
	011 Return X0
	012 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03C46B64 MOV X0, X8
	0x03C46B68 LDR X30, [X31], #0x20
	0x03C46B6C RET
	0x03C46B70 STR X30, [X31 - 0x20]!
	0x03C46B74 STP X20, X19, [X31 + 0x10]
	0x03C46B78 ADRP X20, 0x79F000
	0x03C46B7C ADRP X19, 0x519000
	0x03C46B80 LDRB W8, [X20 + 0xC61]
	0x03C46B84 LDR X19, [X19 + 0xA00]
	0x03C46B88 TBNZ X8, 0x0, 0x3C46BA0
	0x03C46B8C ADRP X0, 0x519000
	0x03C46B90 LDR X0, [X0 + 0xA00]
	0x03C46B94 BL 0x1C16CF4
	0x03C46B98 MOVZ W8, 0x1
	0x03C46B9C STRB W8, [X20 + 0xC61]
	0x03C46BA0 LDR X0, [X19]
	0x03C46BA4 LDR W8, [X0 + 0xE0]
	0x03C46BA8 CBNZ W8, 0x3C46BB4
	0x03C46BAC BL 0x1C16DFC
	0x03C46BB0 LDR X0, [X19]
	0x03C46BB4 LDR X8, [X0 + 0xB8]
	0x03C46BB8 LDP X20, X19, [X31 + 0x10]
	0x03C46BBC LDR X0, [X8 + 0x8]
	0x03C46BC0 LDR X30, [X31], #0x20
	0x03C46BC4 RET
	0x03C46BC8 MOV X1, X31
	0x03C46BCC B 0x33BDD8C
	0x03C46BD0 STP X30, X19, [X31 - 0x10]!
	0x03C46BD4 ADRP X19, 0x79F000
	0x03C46BD8 LDR X0, [X19 + 0xC40]
	0x03C46BDC CBNZ X0, 0x3C46BF0
	0x03C46BE0 ADRP X0, 0xFFFFFFFFFCEB1000
	0x03C46BE4 ADD X0, X0, 0x4E1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7A0000
	005 Move W8, [X19+3038]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x4AE000
	012 Move X0, [X0+3544]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+3038], W8
	016 Move X0, X20
	017 Move X1, X31
	018 Call Object.ToString, X0
	019 Move X19, X0
	020 Move X0, X20
	021 Move X1, X31
	022 Call "il2cpp_vm_object_is_inst", X0
	023 Compare X0, 0
	024 JumpIfEqual {40}
	025 Move X8, [X0]
	026 Move X20, 0x4AE000
	027 Move X9, [X8+744]
	028 Move X1, [X8+752]
	029 Move X20, [X20+3544]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X1, [X20]
	032 Move X2, X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X3, X31
	037 Move X30, [X31+32]
	038 Call String.Concat, X0, X1, X2
	039 Return X0
	040 Call 0x1C17F20

Method: System.Reflection.MethodInfo GetValidMethodInfo(System.Type objectType, System.String functionName, System.Type[] argumentTypes)

Disassembly:
	0x03C468C8 BL 0x1C16E08
	0x03C468CC LDR W8, [X0]
	0x03C468D0 LDR W9, [X19]
	0x03C468D4 CMP W9, W8
	0x03C468D8 CSET W0, EQ
	0x03C468DC LDP X20, X19, [X31 + 0x10]
	0x03C468E0 LDP X30, X21, [X31], #0x20
	0x03C468E4 RET
	0x03C468E8 STP X30, X19, [X31 - 0x10]!
	0x03C468EC ADRP X19, 0x79F000
	0x03C468F0 LDR X0, [X19 + 0xC40]
	0x03C468F4 CBNZ X0, 0x3C46908
	0x03C468F8 ADRP X0, 0xFFFFFFFFFCEB1000
	0x03C468FC ADD X0, X0, 0x4E1
	0x03C46900 BL 0x1C16CB8
	0x03C46904 STR X0, [X19 + 0xC40]
	0x03C46908 LDP X30, X19, [X31], #0x10
	0x03C4690C BR X0
	0x03C46910 STR X30, [X31 - 0x20]!
	0x03C46914 STP X20, X19, [X31 + 0x10]
	0x03C46918 ADRP X20, 0x79F000
	0x03C4691C LDR X8, [X20 + 0xC50]
	0x03C46920 MOV W19, W0
	0x03C46924 STR W31, [X31 + 0x8]
	0x03C46928 CBNZ X8, 0x3C46940
	0x03C4692C ADRP X0, 0xFFFFFFFFFCEE4000
	0x03C46930 ADD X0, X0, 0xBA7
	0x03C46934 BL 0x1C16CB8
	0x03C46938 MOV X8, X0
	0x03C4693C STR X0, [X20 + 0xC50]
	0x03C46940 ADD X1, X31, 0x8
	0x03C46944 MOV W0, W19
	0x03C46948 BLR X8
	0x03C4694C LDR W0, [X31 + 0x8]
	0x03C46950 LDP X20, X19, [X31 + 0x10]
	0x03C46954 LDR X30, [X31], #0x20
	0x03C46958 RET
	0x03C4695C STP X30, X21, [X31 - 0x20]!
	0x03C46960 STP X20, X19, [X31 + 0x10]
	0x03C46964 ADRP X21, 0x79F000
	0x03C46968 LDR X2, [X21 + 0xC50]
	0x03C4696C MOV X19, X1
	0x03C46970 MOV W20, W0
	0x03C46974 CBNZ X2, 0x3C4698C
	0x03C46978 ADRP X0, 0xFFFFFFFFFCEE4000
	0x03C4697C ADD X0, X0, 0xBA7
	0x03C46980 BL 0x1C16CB8
	0x03C46984 MOV X2, X0
	0x03C46988 STR X0, [X21 + 0xC50]
	0x03C4698C MOV W0, W20
	0x03C46990 MOV X1, X19
	0x03C46994 LDP X20, X19, [X31 + 0x10]
	0x03C46998 LDP X30, X21, [X31], #0x20
	0x03C4699C BR X2
	0x03C469A0 STR X30, [X31 - 0x30]!
	0x03C469A4 STP X22, X21, [X31 + 0x10]
	0x03C469A8 STP X20, X19, [X31 + 0x20]
	0x03C469AC ADRP X22, 0x79F000
	0x03C469B0 LDR X8, [X22 + 0xC58]
	0x03C469B4 MOV W21, W3
	0x03C469B8 MOV W19, W1
	0x03C469BC MOV X20, X0
	0x03C469C0 STR X2, [X31 + 0x8]
	0x03C469C4 CBNZ X8, 0x3C469DC
	0x03C469C8 ADRP X0, 0xFFFFFFFFFCED4000
	0x03C469CC ADD X0, X0, 0xF3C
	0x03C469D0 BL 0x1C16CB8
	0x03C469D4 MOV X8, X0
	0x03C469D8 STR X0, [X22 + 0xC58]
	0x03C469DC AND W3, W21, 0x1
	0x03C469E0 ADD X2, X31, 0x8
	0x03C469E4 MOV X0, X20
	0x03C469E8 MOV W1, W19
	0x03C469EC BLR X8
	0x03C469F0 LDP X20, X19, [X31 + 0x20]
	0x03C469F4 LDP X22, X21, [X31 + 0x10]
	0x03C469F8 LDR X30, [X31], #0x30
	0x03C469FC RET
	0x03C46A00 STP X30, X23, [X31 - 0x30]!
	0x03C46A04 STP X22, X21, [X31 + 0x10]
	0x03C46A08 STP X20, X19, [X31 + 0x20]
	0x03C46A0C ADRP X23, 0x79F000
	0x03C46A10 LDR X4, [X23 + 0xC58]
	0x03C46A14 MOV W21, W3
	0x03C46A18 MOV X19, X2
	0x03C46A1C MOV W20, W1
	0x03C46A20 MOV X22, X0
	0x03C46A24 CBNZ X4, 0x3C46A3C
	0x03C46A28 ADRP X0, 0xFFFFFFFFFCED4000
	0x03C46A2C ADD X0, X0, 0xF3C
	0x03C46A30 BL 0x1C16CB8
	0x03C46A34 MOV X4, X0
	0x03C46A38 STR X0, [X23 + 0xC58]
	0x03C46A3C AND W3, W21, 0x1
	0x03C46A40 MOV X0, X22
	0x03C46A44 MOV W1, W20
	0x03C46A48 MOV X2, X19
	0x03C46A4C LDP X20, X19, [X31 + 0x20]
	0x03C46A50 LDP X22, X21, [X31 + 0x10]
	0x03C46A54 LDP X30, X23, [X31], #0x30
	0x03C46A58 BR X4
	0x03C46A5C STR X30, [X31 - 0x40]!
	0x03C46A60 STP X24, X23, [X31 + 0x10]
	0x03C46A64 STP X22, X21, [X31 + 0x20]
	0x03C46A68 STP X20, X19, [X31 + 0x30]
	0x03C46A6C ADRP X24, 0x79F000
	0x03C46A70 LDR X5, [X24 + 0xC48]
	0x03C46A74 MOV X19, X4
	0x03C46A78 MOV W20, W3
	0x03C46A7C MOV W22, W2
	0x03C46A80 MOV W21, W1
	0x03C46A84 MOV X23, X0
	0x03C46A88 CBNZ X5, 0x3C46AA0
	0x03C46A8C ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C46A90 ADD X0, X0, 0x562
	0x03C46A94 BL 0x1C16CB8
	0x03C46A98 MOV X5, X0
	0x03C46A9C STR X0, [X24 + 0xC48]
	0x03C46AA0 AND W2, W22, 0x1
	0x03C46AA4 MOV X0, X23
	0x03C46AA8 MOV W1, W21
	0x03C46AAC MOV W3, W20

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x7A0000
	013 Move X26, 0x4B8000
	014 Move X27, 0x4AE000
	015 Move W8, [X22+3039]
	016 Move X26, [X26+2408]
	017 Move X27, [X27+1728]
	018 Move X19, X2
	019 Move X20, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x4B8000
	026 Move X0, [X0+2408]
	027 Call 0x1C17CF4
	028 Move X0, 0x4AE000
	029 Move X0, [X0+1728]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+3039], W8
	033 Move X0, [X27]
	034 Move X22, [X26]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X22
	040 Move X1, X31
	041 Call Type.GetTypeFromHandle, X0
	042 Move X1, X0
	043 Move X0, X21
	044 Move X2, X31
	045 Call Type.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {136}
	050 Move X0, [X27]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X21
	056 Move X1, X31
	057 Move X2, X31
	058 Call Type.op_Inequality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {136}
	063 Compare X21, 0
	064 JumpIfEqual {150}
	065 Move W2, 60
	066 Move X0, X21
	067 Move X1, X20
	068 Move X3, X31
	069 Move X4, X19
	070 Move X5, X31
	071 Move X6, X31
	072 Call Type.GetMethod, X0, X1, X2, X3, X4, X5
	073 Move X1, X31
	074 Move X2, X31
	075 Move X22, X0
	076 Call MethodInfo.op_Inequality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {130}
	081 Compare X22, 0
	082 JumpIfEqual {150}
	083 Move X8, [X22]
	084 Move X0, X22
	085 Move X9, [X8+584]
	086 Move X1, [X8+592]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Compare X0, 0
	089 JumpIfEqual {150}
	090 Move W8, [X0+24]
	091 Move X23, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W28, W31
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Compare X19, 0
	096 JumpIfEqual {150}
	097 Move W8, [X19+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Add X8, X23, W28
	100 Move X0, [X8+32]
	101 Compare X0, 0
	102 JumpIfEqual {150}
	103 Move X8, [X0]
	104 Move X9, W28
	105 Add X9, X19, X9
	106 Move X25, [X9+32]
	107 Move X9, [X8+472]
	108 Move X1, [X8+480]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Compare X25, 0
	111 JumpIfEqual {150}
	112 Move X24, X0
	113 Move X0, X25
	114 Move X1, X31
	115 Call Type.get_IsPrimitive, X0
	116 Compare X24, 0
	117 JumpIfEqual {150}
	118 Move W25, W0
	119 Move X0, X24
	120 Move X1, X31
	121 Call Type.get_IsPrimitive, X0
	122 Xor W8, W25, W0
	123 Move TEMP, X8
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfEqual {130}
	127 Move W8, [X23+24]
	128 Add W28, W28, 1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X8, [X21]
	131 Move X0, X21
	132 Move X9, [X8+2072]
	133 Move X1, [X8+2080]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X21, X0
	136 Move X22, X31
	137 Move X0, X22
	138 Move X20, [X31+80]
	139 Move X19, [X31+88]
	140 Move X22, [X31+64]
	141 Move X21, [X31+72]
	142 Move X24, [X31+48]
	143 Move X23, [X31+56]
	144 Move X26, [X31+32]
	145 Move X25, [X31+40]
	146 Move X28, [X31+16]
	147 Move X27, [X31+24]
	148 Move X30, [X31+96]
	149 Return X0
	150 Call 0x1C17F20
	151 Call 0x1C17F28

