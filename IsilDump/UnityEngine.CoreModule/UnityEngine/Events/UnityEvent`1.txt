Type: UnityEngine.Events.UnityEvent`1

Method: System.Void .ctor()

Disassembly:
	0x027298A8 MOV X20, X1
	0x027298AC MOV X19, X0
	0x027298B0 LDRB W9, [X8 + 0x135]

ISIL:
	001 Move X1, X31
	002 Move [X0+40], X31
	003 Call UnityEventBase..ctor, X0
	004 Return 

Method: System.Void AddListener(UnityEngine.Events.UnityAction`1<T0> call)

Disassembly:
	0x027298B4 TBNZ X9, 0x0, 0x27298C4
	0x027298B8 MOV X0, X8
	0x027298BC BL 0x1C5C684
	0x027298C0 MOV X8, X0
	0x027298C4 LDR X8, [X8 + 0xC0]
	0x027298C8 LDR X0, [X8 + 0x28]
	0x027298CC LDRB W8, [X0 + 0x135]
	0x027298D0 TBNZ X8, 0x0, 0x27298D8
	0x027298D4 BL 0x1C5C684
	0x027298D8 BL 0x1C16F10
	0x027298DC LDR X8, [X20 + 0x20]
	0x027298E0 MOV X20, X0
	0x027298E4 LDRB W9, [X8 + 0x135]
	0x027298E8 TBNZ X9, 0x0, 0x27298F8
	0x027298EC MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X9, [X2+32]
	004 Move X8, X1
	005 Move X19, X0
	006 Move X0, X8
	007 Move X9, [X9+192]
	008 Move X1, [X9+16]
	009 Call 0x2729A88, X0
	010 Compare X19, 0
	011 JumpIfEqual {19}
	012 Move X1, X0
	013 Move X0, X19
	014 Move X2, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call UnityEventBase.AddCall, X0, X1
	018 Return 
	019 Call 0x1C17F20

Method: System.Void RemoveListener(UnityEngine.Events.UnityAction`1<T0> call)

Disassembly:
	0x027298F0 BL 0x1C5C684
	0x027298F4 MOV X8, X0
	0x027298F8 LDR X8, [X8 + 0xC0]
	0x027298FC MOV X0, X20
	0x02729900 MOV X1, X19
	0x02729904 LDR X2, [X8 + 0x38]
	0x02729908 BL 0x2E71FE8
	0x0272990C MOV X0, X20
	0x02729910 LDP X20, X19, [X31 + 0x10]
	0x02729914 LDR X30, [X31], #0x20
	0x02729918 RET
	0x0272991C SUB X31, X31, 0x70
	0x02729920 STP X29, X30, [X31 + 0x10]
	0x02729924 STP X28, X27, [X31 + 0x20]
	0x02729928 STP X26, X25, [X31 + 0x30]
	0x0272992C STP X24, X23, [X31 + 0x40]
	0x02729930 STP X22, X21, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {22}
	006 Move X20, [X1+32]
	007 Move X19, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Call Delegate.get_Method, X0
	011 Compare X19, 0
	012 JumpIfEqual {22}
	013 Move X2, X0
	014 Move X0, X19
	015 Move X1, X20
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X3, X31
	019 Move X30, [X31+32]
	020 Call UnityEventBase.RemoveListener, X0, X1, X2
	021 Return 
	022 Call 0x1C17F20

Method: System.Reflection.MethodInfo FindMethod_Impl(System.String name, System.Type targetObjType)

Disassembly:
	0x02729934 STP X20, X19, [X31 + 0x60]
	0x02729938 ADRP X22, 0x1CB1000
	0x0272993C LDRB W8, [X22 + 0x655]
	0x02729940 MOV X19, X2
	0x02729944 MOV W20, W1
	0x02729948 MOV X21, X0
	0x0272994C TBNZ X8, 0x0, 0x2729988
	0x02729950 ADRP X0, 0x19F4000
	0x02729954 LDR X0, [X0 + 0xA70]
	0x02729958 BL 0x1C16CF4
	0x0272995C ADRP X0, 0x19F4000
	0x02729960 LDR X0, [X0 + 0xA78]
	0x02729964 BL 0x1C16CF4
	0x02729968 ADRP X0, 0x19F4000
	0x0272996C LDR X0, [X0 + 0xA80]
	0x02729970 BL 0x1C16CF4
	0x02729974 ADRP X0, 0x19CA000
	0x02729978 LDR X0, [X0 + 0x9D0]
	0x0272997C BL 0x1C16CF4
	0x02729980 MOVZ W8, 0x1
	0x02729984 STRB W8, [X22 + 0x655]
	0x02729988 CBZ X21, 0x2729B48
	0x0272998C MOV X0, X21
	0x02729990 MOV X1, X31
	0x02729994 BL 0x3C45B44
	0x02729998 CBZ X0, 0x2729B48
	0x0272999C LDR W8, [X0 + 0x18]
	0x027299A0 MOV X22, X0
	0x027299A4 CMP W8, 0x1
	0x027299A8 B.LT 0x2729B28
	0x027299AC ADRP X27, 0x19F4000
	0x027299B0 ADRP X28, 0x19F4000
	0x027299B4 ADRP X29, 0x19CA000
	0x027299B8 LDR X27, [X27 + 0xA80]
	0x027299BC LDR X28, [X28 + 0xA70]
	0x027299C0 LDR X29, [X29 + 0x9D0]
	0x027299C4 MOV W23, W31
	0x027299C8 LDR X2, [X27]
	0x027299CC MOV X0, X22
	0x027299D0 MOV W1, W23
	0x027299D4 BL 0x301BCCC
	0x027299D8 LDR X8, [X19 + 0x20]
	0x027299DC MOV X24, X0
	0x027299E0 LDR X8, [X8 + 0xC0]
	0x027299E4 LDR X8, [X8 + 0x28]
	0x027299E8 LDRB W9, [X8 + 0x135]
	0x027299EC TBNZ X9, 0x0, 0x27299FC
	0x027299F0 MOV X0, X8
	0x027299F4 BL 0x1C5C684
	0x027299F8 MOV X8, X0
	0x027299FC CBZ X24, 0x2729A28
	0x02729A00 LDR X9, [X24]
	0x02729A04 LDRB W10, [X8 + 0x130]
	0x02729A08 LDRB W11, [X9 + 0x130]
	0x02729A0C CMP W11, W10
	0x02729A10 B.CC 0x2729A28
	0x02729A14 LDR X11, [X9 + 0xC8]
	0x02729A18 ADD X10, X11, X10, 0x3, LSL
	0x02729A1C LDUR X10, [X10 - 0x8]
	0x02729A20 CMP X10, X8
	0x02729A24 B.EQ 0x2729B08
	0x02729A28 LDR X2, [X27]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1CB2000
	009 Move X24, 0x19D3000
	010 Move X22, 0x19CB000
	011 Move W8, [X23+1614]
	012 Move X24, [X24+3168]
	013 Move X22, [X22+1728]
	014 Move X21, X3
	015 Move X20, X2
	016 Move X19, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x19D3000
	022 Move X0, [X0+3168]
	023 Call 0x1C17CF4
	024 Move X0, 0x19CB000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1614], W8
	029 Move X0, [X24]
	030 Move W1, 1
	031 Call 0x1C17D6C
	032 Move X9, [X21+32]
	033 Move X8, [X22]
	034 Move X21, X0
	035 Move X9, [X9+192]
	036 Move W10, [X8+224]
	037 Move X22, [X9+32]
	038 Compare W10, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X22
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Compare X21, 0
	046 JumpIfEqual {73}
	047 Move X22, X0
	048 Compare X0, 0
	049 JumpIfEqual {56}
	050 Move X8, [X21]
	051 Move X0, X22
	052 Move X1, [X8+64]
	053 Call 0x1C17E00
	054 Compare X0, 0
	055 JumpIfEqual {75}
	056 Move W8, [X21+24]
	057 Compare W8, 0
	058 JumpIfEqual {74}
	059 Move [X21+32], X22
	060 Move X0, X20
	061 Move X1, X19
	062 Move X2, X21
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X3, X31
	070 Move X30, [X31+64]
	071 Call UnityEventBase.GetValidMethodInfo, X0, X1, X2
	072 Return X0
	073 Call 0x1C17F20
	074 Call 0x1C17F28
	075 Call 0x1C17F44
	076 Move X1, X31
	077 Call 0x1C17DEC

Method: UnityEngine.Events.BaseInvokableCall GetDelegate(System.Object target, System.Reflection.MethodInfo theFunction)

Disassembly:
	0x02729A2C MOV X0, X22
	0x02729A30 MOV W1, W23
	0x02729A34 BL 0x301BCCC
	0x02729A38 CBZ X0, 0x2729A68
	0x02729A3C LDR X9, [X0]
	0x02729A40 LDR X8, [X28]
	0x02729A44 LDRB W11, [X9 + 0x130]
	0x02729A48 LDRB W10, [X8 + 0x130]
	0x02729A4C CMP W11, W10
	0x02729A50 B.CC 0x2729A68
	0x02729A54 LDR X9, [X9 + 0xC8]
	0x02729A58 ADD X9, X9, X10, 0x3, LSL
	0x02729A5C LDUR X9, [X9 - 0x8]
	0x02729A60 CMP X9, X8
	0x02729A64 B.EQ 0x2729B1C
	0x02729A68 LDR X2, [X27]
	0x02729A6C MOV X0, X22
	0x02729A70 MOV W1, W23
	0x02729A74 BL 0x301BCCC
	0x02729A78 LDR X25, [X21 + 0x28]
	0x02729A7C MOV X24, X0
	0x02729A80 CBNZ X25, 0x2729A98
	0x02729A84 LDR X0, [X29]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X20, X3
	007 Move X19, X2
	008 Move X21, X1
	009 Move X8, [X8+192]
	010 Move X0, [X8+40]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X20+32]
	019 Move X1, X21
	020 Move X2, X19
	021 Move X20, X0
	022 Move X8, [X8+192]
	023 Move X3, [X8+48]
	024 Call 0x2E721F0, X0, X1, X2
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: UnityEngine.Events.BaseInvokableCall GetDelegate(UnityEngine.Events.UnityAction`1<T0> action)

Disassembly:
	0x02729A88 MOVZ W1, 0x1
	0x02729A8C BL 0x1C16D6C
	0x02729A90 MOV X25, X0
	0x02729A94 STR X0, [X21 + 0x28]
	0x02729A98 STR W20, [X31 + 0xC]
	0x02729A9C LDR X8, [X19 + 0x20]
	0x02729AA0 ADD X1, X31, 0xC
	0x02729AA4 LDR X8, [X8 + 0xC0]
	0x02729AA8 LDR X0, [X8 + 0x40]
	0x02729AAC BL 0x1C16E04
	0x02729AB0 CBZ X25, 0x2729B48
	0x02729AB4 MOV X26, X0
	0x02729AB8 CBZ X0, 0x2729AD0
	0x02729ABC LDR X8, [X25]
	0x02729AC0 MOV X0, X26
	0x02729AC4 LDR X1, [X8 + 0x40]
	0x02729AC8 BL 0x1C16E00
	0x02729ACC CBZ X0, 0x2729B50
	0x02729AD0 LDR W8, [X25 + 0x18]
	0x02729AD4 CBZ W8, 0x2729B4C
	0x02729AD8 STR X26, [X25 + 0x20]
	0x02729ADC CBZ X24, 0x2729B48
	0x02729AE0 LDR X8, [X24]
	0x02729AE4 LDR X1, [X21 + 0x28]
	0x02729AE8 MOV X0, X24
	0x02729AEC LDP X9, X2, [X8 + 0x178]
	0x02729AF0 BLR X9
	0x02729AF4 LDR W8, [X22 + 0x18]
	0x02729AF8 ADD W23, W23, 0x1
	0x02729AFC CMP W23, W8
	0x02729B00 B.LT 0x27299C8
	0x02729B04 B 0x2729B28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, [X8+40]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Call 0x1C17F10
	024 Move X8, [X20+32]
	025 Move X20, X0
	026 Move W9, [X8+309]
	027 Move TEMP, X9
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {34}
	031 Move X0, X8
	032 Call 0x1C5D684
	033 Move X8, X0
	034 Move X8, [X8+192]
	035 Move X0, X20
	036 Move X1, X19
	037 Move X2, [X8+56]
	038 Call 0x2E722F4, X0, X1
	039 Move X0, X20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0

Method: System.Void Invoke(T0 arg0)

Disassembly:
	0x02729B08 LDP X8, X2, [X9 + 0x198]
	0x02729B0C MOV X0, X24
	0x02729B10 MOV W1, W20
	0x02729B14 BLR X8
	0x02729B18 B 0x2729AF4
	0x02729B1C MOV X1, X31
	0x02729B20 BL 0x3C4412C
	0x02729B24 B 0x2729AF4
	0x02729B28 LDP X20, X19, [X31 + 0x60]
	0x02729B2C LDP X22, X21, [X31 + 0x50]
	0x02729B30 LDP X24, X23, [X31 + 0x40]
	0x02729B34 LDP X26, X25, [X31 + 0x30]
	0x02729B38 LDP X28, X27, [X31 + 0x20]
	0x02729B3C LDP X29, X30, [X31 + 0x10]
	0x02729B40 ADD X31, X31, 0x70
	0x02729B44 RET
	0x02729B48 BL 0x1C16F20
	0x02729B4C BL 0x1C16F28
	0x02729B50 BL 0x1C16F44
	0x02729B54 MOV X1, X31
	0x02729B58 BL 0x1C16DEC
	0x02729B5C MOV X1, X31
	0x02729B60 STR X31, [X0 + 0x28]
	0x02729B64 B 0x3C45534
	0x02729B68 STP X30, X19, [X31 - 0x10]!
	0x02729B6C LDR X9, [X2 + 0x20]
	0x02729B70 MOV X8, X1
	0x02729B74 MOV X19, X0
	0x02729B78 MOV X0, X8
	0x02729B7C LDR X9, [X9 + 0xC0]
	0x02729B80 LDR X1, [X9 + 0x10]
	0x02729B84 BL 0x2729D3C
	0x02729B88 CBZ X19, 0x2729BA0
	0x02729B8C MOV X1, X0
	0x02729B90 MOV X0, X19
	0x02729B94 MOV X2, X31
	0x02729B98 LDP X30, X19, [X31], #0x10
	0x02729B9C B 0x3C45AFC
	0x02729BA0 BL 0x1C16F20
	0x02729BA4 STR X30, [X31 - 0x20]!
	0x02729BA8 STP X20, X19, [X31 + 0x10]
	0x02729BAC CBZ X1, 0x2729BE4
	0x02729BB0 LDR X20, [X1 + 0x20]
	0x02729BB4 MOV X19, X0
	0x02729BB8 MOV X0, X1
	0x02729BBC MOV X1, X31
	0x02729BC0 BL 0x33C4268
	0x02729BC4 CBZ X19, 0x2729BE4
	0x02729BC8 MOV X2, X0
	0x02729BCC MOV X0, X19
	0x02729BD0 MOV X1, X20
	0x02729BD4 LDP X20, X19, [X31 + 0x10]
	0x02729BD8 MOV X3, X31
	0x02729BDC LDR X30, [X31], #0x20
	0x02729BE0 B 0x3C45B14
	0x02729BE4 BL 0x1C16F20
	0x02729BE8 STR X30, [X31 - 0x40]!
	0x02729BEC STP X24, X23, [X31 + 0x10]
	0x02729BF0 STP X22, X21, [X31 + 0x20]
	0x02729BF4 STP X20, X19, [X31 + 0x30]
	0x02729BF8 ADRP X23, 0x1CB1000
	0x02729BFC ADRP X24, 0x19D2000
	0x02729C00 ADRP X22, 0x19CA000
	0x02729C04 LDRB W8, [X23 + 0x656]
	0x02729C08 LDR X24, [X24 + 0xC60]
	0x02729C0C LDR X22, [X22 + 0x6C0]
	0x02729C10 MOV X21, X3
	0x02729C14 MOV X20, X2
	0x02729C18 MOV X19, X1
	0x02729C1C TBNZ X8, 0x0, 0x2729C40
	0x02729C20 ADRP X0, 0x19D2000
	0x02729C24 LDR X0, [X0 + 0xC60]
	0x02729C28 BL 0x1C16CF4
	0x02729C2C ADRP X0, 0x19CA000
	0x02729C30 LDR X0, [X0 + 0x6C0]
	0x02729C34 BL 0x1C16CF4
	0x02729C38 MOVZ W8, 0x1
	0x02729C3C STRB W8, [X23 + 0x656]
	0x02729C40 LDR X0, [X24]
	0x02729C44 MOVZ W1, 0x1
	0x02729C48 BL 0x1C16D6C
	0x02729C4C LDR X9, [X21 + 0x20]
	0x02729C50 LDR X8, [X22]
	0x02729C54 MOV X21, X0
	0x02729C58 LDR X9, [X9 + 0xC0]
	0x02729C5C LDR W10, [X8 + 0xE0]
	0x02729C60 LDR X22, [X9 + 0x20]
	0x02729C64 CBNZ W10, 0x2729C70
	0x02729C68 MOV X0, X8
	0x02729C6C BL 0x1C16DFC
	0x02729C70 MOV X0, X22
	0x02729C74 MOV X1, X31
	0x02729C78 BL 0x338C698
	0x02729C7C CBZ X21, 0x2729CCC
	0x02729C80 MOV X22, X0
	0x02729C84 CBZ X0, 0x2729C9C
	0x02729C88 LDR X8, [X21]
	0x02729C8C MOV X0, X22
	0x02729C90 LDR X1, [X8 + 0x40]
	0x02729C94 BL 0x1C16E00
	0x02729C98 CBZ X0, 0x2729CD4
	0x02729C9C LDR W8, [X21 + 0x18]
	0x02729CA0 CBZ W8, 0x2729CD0
	0x02729CA4 STR X22, [X21 + 0x20]
	0x02729CA8 MOV X0, X20
	0x02729CAC MOV X1, X19
	0x02729CB0 MOV X2, X21
	0x02729CB4 LDP X20, X19, [X31 + 0x30]
	0x02729CB8 LDP X22, X21, [X31 + 0x20]
	0x02729CBC LDP X24, X23, [X31 + 0x10]
	0x02729CC0 MOV X3, X31
	0x02729CC4 LDR X30, [X31], #0x40
	0x02729CC8 B 0x3C458C8
	0x02729CCC BL 0x1C16F20
	0x02729CD0 BL 0x1C16F28
	0x02729CD4 BL 0x1C16F44
	0x02729CD8 MOV X1, X31
	0x02729CDC BL 0x1C16DEC
	0x02729CE0 STP X30, X21, [X31 - 0x20]!
	0x02729CE4 STP X20, X19, [X31 + 0x10]
	0x02729CE8 LDR X8, [X3 + 0x20]
	0x02729CEC MOV X20, X3
	0x02729CF0 MOV X19, X2
	0x02729CF4 MOV X21, X1
	0x02729CF8 LDR X8, [X8 + 0xC0]
	0x02729CFC LDR X0, [X8 + 0x28]
	0x02729D00 LDRB W8, [X0 + 0x135]
	0x02729D04 TBNZ X8, 0x0, 0x2729D0C
	0x02729D08 BL 0x1C5C684
	0x02729D0C BL 0x1C16F10
	0x02729D10 LDR X8, [X20 + 0x20]
	0x02729D14 MOV X1, X21
	0x02729D18 MOV X2, X19
	0x02729D1C MOV X20, X0
	0x02729D20 LDR X8, [X8 + 0xC0]
	0x02729D24 LDR X3, [X8 + 0x30]
	0x02729D28 BL 0x2E72328
	0x02729D2C MOV X0, X20
	0x02729D30 LDP X20, X19, [X31 + 0x10]
	0x02729D34 LDP X30, X21, [X31], #0x20
	0x02729D38 RET
	0x02729D3C STR X30, [X31 - 0x20]!
	0x02729D40 STP X20, X19, [X31 + 0x10]
	0x02729D44 LDR X8, [X1 + 0x20]
	0x02729D48 MOV X20, X1
	0x02729D4C MOV X19, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x1CB2000
	015 Move W8, [X21+1615]
	016 Move X19, X2
	017 Move W23, W1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x19F5000
	024 Move X0, [X0+2672]
	025 Call 0x1C17CF4
	026 Move X0, 0x19F5000
	027 Move X0, [X0+2680]
	028 Call 0x1C17CF4
	029 Move X0, 0x19F5000
	030 Move X0, [X0+2688]
	031 Call 0x1C17CF4
	032 Move X0, 0x19CB000
	033 Move X0, [X0+2512]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+1615], W8
	037 Compare X20, 0
	038 JumpIfEqual {163}
	039 Move X0, X20
	040 Move X1, X31
	041 Call UnityEventBase.PrepareInvoke, X0
	042 Compare X0, 0
	043 JumpIfEqual {163}
	044 Move W8, [X0+24]
	045 Move X21, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X28, 0x19F5000
	048 Move X29, 0x19F5000
	049 Move X28, [X28+2688]
	050 Move X29, [X29+2672]
	051 Move W22, W31
	052 And W27, W23, 1
	053 And W23, W23, 1
	054 Move X2, [X28]
	055 Move X0, X21
	056 Move W1, W22
	057 Call List`1<Object>.get_Item, X0, X1
	058 Move X8, [X19+32]
	059 Move X24, X0
	060 Move X8, [X8+192]
	061 Move X8, [X8+40]
	062 Move W9, [X8+309]
	063 Move TEMP, X9
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {70}
	067 Move X0, X8
	068 Call 0x1C5D684
	069 Move X8, X0
	070 Compare X24, 0
	071 JumpIfEqual {80}
	072 Move X9, [X24]
	073 Move W10, [X8+304]
	074 Move W11, [X9+304]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X11, [X9+200]
	077 Add X10, X11, X10
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X2, [X28]
	081 Move X0, X21
	082 Move W1, W22
	083 Call List`1<Object>.get_Item, X0, X1
	084 Compare X0, 0
	085 JumpIfEqual {95}
	086 Move X9, [X0]
	087 Move X8, [X29]
	088 Move W11, [X9+304]
	089 Move W10, [X8+304]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X9, [X9+200]
	092 Add X9, X9, X10
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X2, [X28]
	096 Move X0, X21
	097 Move W1, W22
	098 Call List`1<Object>.get_Item, X0, X1
	099 Move X25, [X20+40]
	100 Move X24, X0
	101 Compare X25, 0
	102 JumpIfNotEqual {110}
	103 Move X8, 0x19CB000
	104 Move X8, [X8+2512]
	105 Move W1, 1
	106 Move X0, [X8]
	107 Call 0x1C17D6C
	108 Move X25, X0
	109 Move [X20+40], X0
	110 Move [X31+12], W27
	111 Move X8, [X19+32]
	112 Add X1, X31, 12
	113 Move X8, [X8+192]
	114 Move X0, [X8+64]
	115 Call 0x1C17E04
	116 Compare X25, 0
	117 JumpIfEqual {163}
	118 Move X26, X0
	119 Compare X0, 0
	120 JumpIfEqual {127}
	121 Move X8, [X25]
	122 Move X0, X26
	123 Move X1, [X8+64]
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {165}
	127 Move W8, [X25+24]
	128 Compare W8, 0
	129 JumpIfEqual {164}
	130 Move [X25+32], X26
	131 Compare X24, 0
	132 JumpIfEqual {163}
	133 Move X8, [X24]
	134 Move X1, [X20+40]
	135 Move X0, X24
	136 Move X9, [X8+376]
	137 Move X2, [X8+384]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move W8, [X21+24]
	140 Add W22, W22, 1
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X8, [X9+408]
	143 Move X2, [X9+416]
	144 Move X0, X24
	145 Move W1, W23
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X1, X31
	148 Call InvokableCall.Invoke, X0
	149 Move X20, [X31+96]
	150 Move X19, [X31+104]
	151 Move X22, [X31+80]
	152 Move X21, [X31+88]
	153 Move X24, [X31+64]
	154 Move X23, [X31+72]
	155 Move X26, [X31+48]
	156 Move X25, [X31+56]
	157 Move X28, [X31+32]
	158 Move X27, [X31+40]
	159 Move X29, [X31+16]
	160 Move X30, [X31+24]
	161 Add X31, X31, 112
	162 Return 
	163 Call 0x1C17F20
	164 Call 0x1C17F28
	165 Call 0x1C17F44
	166 Move X1, X31
	167 Call 0x1C17DEC

