Type: UnityEngine.Events.PersistentCall

Method: UnityEngine.Object get_target()

Disassembly:
	0x03C451B4 BL 0x24AD1FC
	0x03C451B8 LDR X2, [X28]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.String get_targetAssemblyTypeName()

Disassembly:
	0x03C451BC MOV X0, X24
	0x03C451C0 MOV X1, X20
	0x03C451C4 BL 0x301D8DC
	0x03C451C8 LDR X8, [X19 + 0x10]
	0x03C451CC CBZ X8, 0x3C45250
	0x03C451D0 LDR X9, [X19 + 0x18]
	0x03C451D4 CBZ X9, 0x3C45250
	0x03C451D8 LDR W21, [X8 + 0x18]
	0x03C451DC ADRP X8, 0x51A000
	0x03C451E0 LDR W22, [X9 + 0x18]
	0x03C451E4 LDR X8, [X8 + 0x978]
	0x03C451E8 LDR X0, [X8]
	0x03C451EC BL 0x1C16F10
	0x03C451F0 ADRP X8, 0x51A000
	0x03C451F4 LDR X8, [X8 + 0x998]
	0x03C451F8 ADD W1, W22, W21
	0x03C451FC MOV X20, X0
	0x03C45200 LDR X2, [X8]
	0x03C45204 BL 0x301B830
	0x03C45208 CBZ X20, 0x3C45250
	0x03C4520C LDR X1, [X19 + 0x10]
	0x03C45210 LDR X2, [X26]
	0x03C45214 MOV X0, X20
	0x03C45218 BL 0x301C194
	0x03C4521C LDR X1, [X19 + 0x18]
	0x03C45220 LDR X2, [X26]
	0x03C45224 MOV X0, X20
	0x03C45228 BL 0x301C194
	0x03C4522C STR X20, [X19 + 0x20]
	0x03C45230 STRB W31, [X19 + 0x28]
	0x03C45234 LDP X20, X19, [X31 + 0x50]
	0x03C45238 LDP X22, X21, [X31 + 0x40]
	0x03C4523C LDP X24, X23, [X31 + 0x30]
	0x03C45240 LDP X26, X25, [X31 + 0x20]
	0x03C45244 LDP X28, X27, [X31 + 0x10]
	0x03C45248 LDP X29, X30, [X31], #0x60
	0x03C4524C RET
	0x03C45250 BL 0x1C16F20
	0x03C45254 STR X30, [X31 - 0x30]!
	0x03C45258 STP X22, X21, [X31 + 0x10]
	0x03C4525C STP X20, X19, [X31 + 0x20]
	0x03C45260 ADRP X20, 0x7A0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A1000
	005 Move W8, [X20+3021]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x4AF000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3021], W8
	016 Move X0, [X19+24]
	017 Move X1, X31
	018 Call String.IsNullOrEmpty, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {51}
	023 Move X8, 0x4AF000
	024 Move X8, [X8+1432]
	025 Move X20, [X19+16]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call Object.op_Inequality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {51}
	038 Move X0, [X19+16]
	039 Compare X0, 0
	040 JumpIfEqual {56}
	041 Move X1, X31
	042 Call "il2cpp_vm_object_is_inst", X0
	043 Compare X0, 0
	044 JumpIfEqual {56}
	045 Move X8, [X0]
	046 Move X9, [X8+728]
	047 Move X1, [X8+736]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Call UnityEventTools.TidyAssemblyTypeName, X0
	050 Move [X19+24], X0
	051 Move X0, [X19+24]
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return X0
	056 Call 0x1C17F20

Method: System.String get_methodName()

Disassembly:
	0x03C45264 LDRB W8, [X20 + 0xBD7]
	0x03C45268 MOV X19, X0

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: UnityEngine.Events.PersistentListenerMode get_mode()

Disassembly:
	0x03C4526C TBNZ X8, 0x0, 0x3C4529C
	0x03C45270 ADRP X0, 0x51A000

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: UnityEngine.Events.ArgumentCache get_arguments()

Disassembly:
	0x03C45274 LDR X0, [X0 + 0x9A8]
	0x03C45278 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Boolean IsValid()

Disassembly:
	0x03C4527C ADRP X0, 0x51A000
	0x03C45280 LDR X0, [X0 + 0x9B0]
	0x03C45284 BL 0x1C16CF4
	0x03C45288 ADRP X0, 0x51A000
	0x03C4528C LDR X0, [X0 + 0x978]
	0x03C45290 BL 0x1C16CF4
	0x03C45294 MOVZ W8, 0x1
	0x03C45298 STRB W8, [X20 + 0xBD7]
	0x03C4529C LDR X8, [X19 + 0x18]
	0x03C452A0 CBZ X8, 0x3C4530C
	0x03C452A4 LDP W2, W9, [X8 + 0x18]
	0x03C452A8 ADRP X22, 0x51A000
	0x03C452AC ADRP X21, 0x51A000
	0x03C452B0 LDR X22, [X22 + 0x978]
	0x03C452B4 LDR X21, [X21 + 0x9B0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call PersistentCall.get_targetAssemblyTypeName, X0
	005 Move X1, X31
	006 Call String.IsNullOrEmpty, X0
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {12}
	011 Move W8, W31
	012 Move X0, [X19+32]
	013 Move X1, X31
	014 Call String.IsNullOrEmpty, X0
	015 Xor W8, W0, 1
	016 And W0, W8, 1
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: UnityEngine.Events.BaseInvokableCall GetRuntimeCall(UnityEngine.Events.UnityEventBase theEvent)

Disassembly:
	0x03C452B8 ADD W9, W9, 0x1
	0x03C452BC CMP W2, 0x1
	0x03C452C0 STP W31, W9, [X8 + 0x18]
	0x03C452C4 B.LT 0x3C452D8
	0x03C452C8 LDR X0, [X8 + 0x10]
	0x03C452CC MOV W1, W31
	0x03C452D0 MOV X3, X31
	0x03C452D4 BL 0x339FA34
	0x03C452D8 LDR X0, [X22]
	0x03C452DC LDR X20, [X19 + 0x10]
	0x03C452E0 BL 0x1C16F10
	0x03C452E4 LDR X2, [X21]
	0x03C452E8 MOV X1, X20
	0x03C452EC MOV X21, X0
	0x03C452F0 BL 0x301B8E0
	0x03C452F4 STR X21, [X19 + 0x20]
	0x03C452F8 STRB W31, [X19 + 0x28]
	0x03C452FC LDP X20, X19, [X31 + 0x20]
	0x03C45300 LDP X22, X21, [X31 + 0x10]
	0x03C45304 LDR X30, [X31], #0x30
	0x03C45308 RET
	0x03C4530C BL 0x1C16F20
	0x03C45310 STR X30, [X31 - 0x30]!
	0x03C45314 STP X22, X21, [X31 + 0x10]
	0x03C45318 STP X20, X19, [X31 + 0x20]
	0x03C4531C ADRP X20, 0x7A0000
	0x03C45320 LDRB W8, [X20 + 0xBD8]
	0x03C45324 MOV X19, X0
	0x03C45328 TBNZ X8, 0x0, 0x3C45358
	0x03C4532C ADRP X0, 0x51A000
	0x03C45330 LDR X0, [X0 + 0x9A8]
	0x03C45334 BL 0x1C16CF4
	0x03C45338 ADRP X0, 0x51A000
	0x03C4533C LDR X0, [X0 + 0x9B0]
	0x03C45340 BL 0x1C16CF4
	0x03C45344 ADRP X0, 0x51A000
	0x03C45348 LDR X0, [X0 + 0x978]
	0x03C4534C BL 0x1C16CF4
	0x03C45350 MOVZ W8, 0x1
	0x03C45354 STRB W8, [X20 + 0xBD8]
	0x03C45358 LDR X8, [X19 + 0x10]
	0x03C4535C CBZ X8, 0x3C453C8
	0x03C45360 LDP W2, W9, [X8 + 0x18]
	0x03C45364 ADRP X22, 0x51A000
	0x03C45368 ADRP X21, 0x51A000
	0x03C4536C LDR X22, [X22 + 0x978]
	0x03C45370 LDR X21, [X21 + 0x9B0]
	0x03C45374 ADD W9, W9, 0x1
	0x03C45378 CMP W2, 0x1
	0x03C4537C STP W31, W9, [X8 + 0x18]
	0x03C45380 B.LT 0x3C45394
	0x03C45384 LDR X0, [X8 + 0x10]
	0x03C45388 MOV W1, W31
	0x03C4538C MOV X3, X31
	0x03C45390 BL 0x339FA34
	0x03C45394 LDR X0, [X22]
	0x03C45398 LDR X20, [X19 + 0x18]
	0x03C4539C BL 0x1C16F10
	0x03C453A0 LDR X2, [X21]
	0x03C453A4 MOV X1, X20
	0x03C453A8 MOV X21, X0
	0x03C453AC BL 0x301B8E0
	0x03C453B0 STR X21, [X19 + 0x20]
	0x03C453B4 STRB W31, [X19 + 0x28]
	0x03C453B8 LDP X20, X19, [X31 + 0x20]
	0x03C453BC LDP X22, X21, [X31 + 0x10]
	0x03C453C0 LDR X30, [X31], #0x30
	0x03C453C4 RET
	0x03C453C8 BL 0x1C16F20
	0x03C453CC STR X30, [X31 - 0x20]!
	0x03C453D0 STP X20, X19, [X31 + 0x10]
	0x03C453D4 ADRP X20, 0x7A0000
	0x03C453D8 LDRB W8, [X20 + 0xBD9]
	0x03C453DC MOV X19, X0
	0x03C453E0 TBNZ X8, 0x0, 0x3C45404
	0x03C453E4 ADRP X0, 0x51A000
	0x03C453E8 LDR X0, [X0 + 0x988]
	0x03C453EC BL 0x1C16CF4
	0x03C453F0 ADRP X0, 0x51A000
	0x03C453F4 LDR X0, [X0 + 0x9A8]
	0x03C453F8 BL 0x1C16CF4
	0x03C453FC MOVZ W8, 0x1
	0x03C45400 STRB W8, [X20 + 0xBD9]
	0x03C45404 LDRB W8, [X19 + 0x28]
	0x03C45408 CBZ W8, 0x3C4546C
	0x03C4540C LDR X0, [X19 + 0x20]
	0x03C45410 CBZ X0, 0x3C4547C
	0x03C45414 LDP W2, W8, [X0 + 0x18]
	0x03C45418 ADD W8, W8, 0x1
	0x03C4541C CMP W2, 0x1
	0x03C45420 STP W31, W8, [X0 + 0x18]
	0x03C45424 B.LT 0x3C45440
	0x03C45428 LDR X0, [X0 + 0x10]
	0x03C4542C MOV W1, W31
	0x03C45430 MOV X3, X31
	0x03C45434 BL 0x339FA34
	0x03C45438 LDR X0, [X19 + 0x20]
	0x03C4543C CBZ X0, 0x3C4547C
	0x03C45440 ADRP X20, 0x51A000
	0x03C45444 LDR X20, [X20 + 0x988]
	0x03C45448 LDR X1, [X19 + 0x10]
	0x03C4544C LDR X2, [X20]
	0x03C45450 BL 0x301C194
	0x03C45454 LDR X0, [X19 + 0x20]
	0x03C45458 CBZ X0, 0x3C4547C
	0x03C4545C LDR X1, [X19 + 0x18]
	0x03C45460 LDR X2, [X20]
	0x03C45464 BL 0x301C194
	0x03C45468 STRB W31, [X19 + 0x28]
	0x03C4546C LDR X0, [X19 + 0x20]
	0x03C45470 LDP X20, X19, [X31 + 0x10]
	0x03C45474 LDR X30, [X31], #0x20
	0x03C45478 RET
	0x03C4547C BL 0x1C16F20
	0x03C45480 STR X30, [X31 - 0x30]!
	0x03C45484 STP X22, X21, [X31 + 0x10]
	0x03C45488 STP X20, X19, [X31 + 0x20]
	0x03C4548C ADRP X20, 0x7A0000
	0x03C45490 ADRP X22, 0x51A000
	0x03C45494 ADRP X21, 0x51A000
	0x03C45498 LDRB W8, [X20 + 0xBDA]
	0x03C4549C LDR X22, [X22 + 0x978]
	0x03C454A0 LDR X21, [X21 + 0x980]
	0x03C454A4 MOV X19, X0
	0x03C454A8 TBNZ X8, 0x0, 0x3C454CC
	0x03C454AC ADRP X0, 0x51A000
	0x03C454B0 LDR X0, [X0 + 0x980]
	0x03C454B4 BL 0x1C16CF4
	0x03C454B8 ADRP X0, 0x51A000
	0x03C454BC LDR X0, [X0 + 0x978]
	0x03C454C0 BL 0x1C16CF4
	0x03C454C4 MOVZ W8, 0x1
	0x03C454C8 STRB W8, [X20 + 0xBDA]
	0x03C454CC LDR X0, [X22]
	0x03C454D0 BL 0x1C16F10
	0x03C454D4 LDR X1, [X21]
	0x03C454D8 MOV X20, X0
	0x03C454DC BL 0x301B7C4
	0x03C454E0 STR X20, [X19 + 0x10]
	0x03C454E4 LDR X0, [X22]
	0x03C454E8 BL 0x1C16F10
	0x03C454EC LDR X1, [X21]
	0x03C454F0 MOV X20, X0
	0x03C454F4 BL 0x301B7C4
	0x03C454F8 STR X20, [X19 + 0x18]
	0x03C454FC LDR X0, [X22]
	0x03C45500 BL 0x1C16F10
	0x03C45504 LDR X1, [X21]
	0x03C45508 MOV X20, X0
	0x03C4550C BL 0x301B7C4
	0x03C45510 MOVZ W8, 0x1
	0x03C45514 STR X20, [X19 + 0x20]
	0x03C45518 STRB W8, [X19 + 0x28]
	0x03C4551C MOV X0, X19
	0x03C45520 LDP X20, X19, [X31 + 0x20]
	0x03C45524 LDP X22, X21, [X31 + 0x10]
	0x03C45528 MOV X1, X31
	0x03C4552C LDR X30, [X31], #0x30
	0x03C45530 B 0x33BDD8C
	0x03C45534 STR X30, [X31 - 0x30]!
	0x03C45538 STP X22, X21, [X31 + 0x10]
	0x03C4553C STP X20, X19, [X31 + 0x20]
	0x03C45540 ADRP X22, 0x7A0000
	0x03C45544 ADRP X20, 0x51A000
	0x03C45548 ADRP X21, 0x51A000
	0x03C4554C LDRB W8, [X22 + 0xBDB]
	0x03C45550 LDR X20, [X20 + 0x9B8]
	0x03C45554 LDR X21, [X21 + 0x9C0]
	0x03C45558 MOV X19, X0
	0x03C4555C TBNZ X8, 0x0, 0x3C45580
	0x03C45560 ADRP X0, 0x51A000
	0x03C45564 LDR X0, [X0 + 0x9B8]
	0x03C45568 BL 0x1C16CF4
	0x03C4556C ADRP X0, 0x51A000
	0x03C45570 LDR X0, [X0 + 0x9C0]
	0x03C45574 BL 0x1C16CF4
	0x03C45578 MOVZ W8, 0x1
	0x03C4557C STRB W8, [X22 + 0xBDB]
	0x03C45580 MOVZ W8, 0x1
	0x03C45584 MOV X0, X19
	0x03C45588 MOV X1, X31
	0x03C4558C STRB W8, [X19 + 0x20]
	0x03C45590 BL 0x33BDD8C
	0x03C45594 LDR X0, [X20]
	0x03C45598 BL 0x1C16F10
	0x03C4559C MOV X20, X0

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x7A1000
	009 Move W8, [X19+3022]
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0x51B000
	017 Move X0, [X0+2256]
	018 Call 0x1C17CF4
	019 Move X0, 0x51B000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move X0, 0x51B000
	023 Move X0, [X0+2272]
	024 Call 0x1C17CF4
	025 Move X0, 0x51B000
	026 Move X0, [X0+2280]
	027 Call 0x1C17CF4
	028 Move X0, 0x51B000
	029 Move X0, [X0+2288]
	030 Call 0x1C17CF4
	031 Move X0, 0x51B000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move X0, 0x51B000
	035 Move X0, [X0+2304]
	036 Call 0x1C17CF4
	037 Move X0, 0x51B000
	038 Move X0, [X0+2312]
	039 Call 0x1C17CF4
	040 Move X0, 0x4D9000
	041 Move X0, [X0+2672]
	042 Call 0x1C17CF4
	043 Move X0, 0x4AF000
	044 Move X0, [X0+1432]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+3022], W8
	048 Move X23, X31
	049 Compare X20, 0
	050 JumpIfEqual {66}
	051 Move W8, [X21+56]
	052 Compare W8, 0
	053 JumpIfEqual {66}
	054 Move X0, X20
	055 Move X1, X21
	056 Call UnityEventBase.FindMethod, X0, X1
	057 Move X1, X31
	058 Move X2, X31
	059 Move X19, X0
	060 Call MethodInfo.op_Equality, X0, X1
	061 Move X23, X31
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {75}
	066 Move X0, X23
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X30, [X31+16]
	072 Move X23, [X31+24]
	073 Move V8, [X31+64]
	074 Return X0
	075 Compare X19, 0
	076 JumpIfEqual {216}
	077 Move X0, X19
	078 Move X1, X31
	079 Call MethodBase.get_IsStatic, X0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {100}
	084 Move X8, 0x4AF000
	085 Move X8, [X8+1432]
	086 Move X22, [X21+16]
	087 Move X0, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X22
	093 Move X1, X31
	094 Call Object.op_Equality, X0, X1
	095 Move X23, X31
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {66}
	100 Move X0, X19
	101 Move X1, X31
	102 Call MethodBase.get_IsStatic, X0
	103 Move X22, X31
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {109}
	108 Move X22, [X21+16]
	109 Move W8, [X21+40]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X9, -51040256
	112 Add X9, X9, 3573
	113 NotImplemented "Instruction ADR not yet implemented."
	114 Move W11, [X9]
	115 Add X10, X10, X11
	116 CallNoReturn X10
	117 Move X8, [X20]
	118 Move X0, X20
	119 Move X1, X22
	120 Move X2, X19
	121 Move X4, [X8+424]
	122 Move X3, [X8+432]
	123 Move X20, [X31+48]
	124 Move X19, [X31+56]
	125 Move X22, [X31+32]
	126 Move X21, [X31+40]
	127 Move X30, [X31+16]
	128 Move X23, [X31+24]
	129 Move V8, [X31+64]
	130 CallNoReturn X4
	131 Move X23, X31
	132 Move X8, 0x4D9000
	133 Move X8, [X8+2672]
	134 Move X0, [X8]
	135 Call 0x1C17F10
	136 Move X1, X22
	137 Move X2, X19
	138 Move X23, X0
	139 Call InvokableCall..ctor, X0, X1, X2
	140 Move X2, [X21+48]
	141 Move X0, X22
	142 Move X1, X19
	143 Move X20, [X31+48]
	144 Move X19, [X31+56]
	145 Move X22, [X31+32]
	146 Move X21, [X31+40]
	147 Move X30, [X31+16]
	148 Move X23, [X31+24]
	149 Move V8, [X31+64]
	150 Call PersistentCall.GetObjectCall, X0, X1, X2
	151 Return X0
	152 Move X8, [X21+48]
	153 Compare X8, 0
	154 JumpIfEqual {216}
	155 Move W20, [X8+32]
	156 Move X8, 0x51B000
	157 Move X8, [X8+2312]
	158 Move X0, [X8]
	159 Call 0x1C17F10
	160 Move X8, 0x51B000
	161 Move X8, [X8+2280]
	162 Move X1, X22
	163 Move X2, X19
	164 Move W3, W20
	165 Move X4, [X8]
	166 Move X23, X0
	167 Call CachedInvokableCall`1<Int32>..ctor, X0, X1, X2, X3
	168 Move X8, [X21+48]
	169 Compare X8, 0
	170 JumpIfEqual {216}
	171 Move V8, [X8+36]
	172 Move X8, 0x51B000
	173 Move X8, [X8+2288]
	174 Move X0, [X8]
	175 Call 0x1C17F10
	176 Move X8, 0x51B000
	177 Move X8, [X8+2272]
	178 Move X1, X22
	179 Move X2, X19
	180 Move V0, V8
	181 Move X3, [X8]
	182 Move X23, X0
	183 Call CachedInvokableCall`1<Single>..ctor, X0, X1, X2, V0
	184 Move X8, [X21+48]
	185 Compare X8, 0
	186 JumpIfEqual {216}
	187 Move X20, [X8+40]
	188 Move X8, 0x51B000
	189 Move X8, [X8+2296]
	190 Move X0, [X8]
	191 Call 0x1C17F10
	192 Move X8, 0x51B000
	193 Move X8, [X8+2256]
	194 Move X1, X22
	195 Move X2, X19
	196 Move X3, X20
	197 Move X4, [X8]
	198 Move X23, X0
	199 Call CachedInvokableCall`1<Object>..ctor, X0, X1, X2, X3
	200 Move X8, [X21+48]
	201 Compare X8, 0
	202 JumpIfEqual {216}
	203 Move W20, [X8+48]
	204 Move X8, 0x51B000
	205 Move X8, [X8+2304]
	206 Move X0, [X8]
	207 Call 0x1C17F10
	208 Move X8, 0x51B000
	209 Move X8, [X8+2264]
	210 Move X1, X22
	211 Move X2, X19
	212 Move W3, W20
	213 Move X4, [X8]
	214 Move X23, X0
	215 Call 0x28F1C6C, X0, X1, X2, X3
	216 Call 0x1C17F20

Method: UnityEngine.Events.BaseInvokableCall GetObjectCall(UnityEngine.Object target, System.Reflection.MethodInfo method, UnityEngine.Events.ArgumentCache arguments)

Disassembly:
	0x03C4576C MOV X0, X21
	0x03C45770 LDR X1, [X8 + 0x40]
	0x03C45774 BL 0x1C16E00
	0x03C45778 CBZ X0, 0x3C458BC
	0x03C4577C LDR W8, [X22 + 0x18]
	0x03C45780 CBZ W8, 0x3C458B8
	0x03C45784 STR X21, [X22 + 0x20]
	0x03C45788 MOV X0, X20
	0x03C4578C MOV X1, X19
	0x03C45790 MOV X2, X22
	0x03C45794 B 0x3C458A0
	0x03C45798 ADRP X8, 0x4B6000
	0x03C4579C LDR X8, [X8 + 0xC60]
	0x03C457A0 MOVZ W1, 0x1
	0x03C457A4 LDR X0, [X8]
	0x03C457A8 BL 0x1C16D6C
	0x03C457AC ADRP X8, 0x4AE000
	0x03C457B0 LDR X8, [X8 + 0x6C0]
	0x03C457B4 ADRP X9, 0x4D5000
	0x03C457B8 LDR X8, [X8]
	0x03C457BC LDR X9, [X9 + 0xD80]
	0x03C457C0 B 0x3C45844
	0x03C457C4 ADRP X8, 0x4B6000
	0x03C457C8 LDR X8, [X8 + 0xC60]
	0x03C457CC MOVZ W1, 0x1
	0x03C457D0 LDR X0, [X8]
	0x03C457D4 BL 0x1C16D6C
	0x03C457D8 ADRP X8, 0x4AE000
	0x03C457DC LDR X8, [X8 + 0x6C0]
	0x03C457E0 ADRP X9, 0x4D6000
	0x03C457E4 LDR X8, [X8]
	0x03C457E8 LDR X9, [X9 + 0xA80]
	0x03C457EC B 0x3C45844
	0x03C457F0 ADRP X8, 0x4B6000
	0x03C457F4 LDR X8, [X8 + 0xC60]
	0x03C457F8 MOVZ W1, 0x1
	0x03C457FC LDR X0, [X8]
	0x03C45800 BL 0x1C16D6C
	0x03C45804 ADRP X8, 0x4AE000
	0x03C45808 LDR X8, [X8 + 0x6C0]
	0x03C4580C ADRP X9, 0x4D6000
	0x03C45810 LDR X8, [X8]
	0x03C45814 LDR X9, [X9 + 0xB60]
	0x03C45818 B 0x3C45844
	0x03C4581C ADRP X8, 0x4B6000
	0x03C45820 LDR X8, [X8 + 0xC60]
	0x03C45824 MOVZ W1, 0x1
	0x03C45828 LDR X0, [X8]
	0x03C4582C BL 0x1C16D6C
	0x03C45830 ADRP X8, 0x4AE000
	0x03C45834 LDR X8, [X8 + 0x6C0]
	0x03C45838 ADRP X9, 0x4D7000
	0x03C4583C LDR X8, [X8]
	0x03C45840 LDR X9, [X9 + 0x248]
	0x03C45844 LDR W10, [X8 + 0xE0]
	0x03C45848 LDR X22, [X9]
	0x03C4584C MOV X21, X0
	0x03C45850 CBNZ W10, 0x3C4585C
	0x03C45854 MOV X0, X8
	0x03C45858 BL 0x1C16DFC
	0x03C4585C MOV X0, X22
	0x03C45860 MOV X1, X31
	0x03C45864 BL 0x338C698
	0x03C45868 CBZ X21, 0x3C458B4
	0x03C4586C MOV X22, X0
	0x03C45870 CBZ X0, 0x3C45888
	0x03C45874 LDR X8, [X21]
	0x03C45878 MOV X0, X22
	0x03C4587C LDR X1, [X8 + 0x40]
	0x03C45880 BL 0x1C16E00
	0x03C45884 CBZ X0, 0x3C458BC
	0x03C45888 LDR W8, [X21 + 0x18]
	0x03C4588C CBZ W8, 0x3C458B8
	0x03C45890 MOV X0, X20
	0x03C45894 MOV X1, X19
	0x03C45898 MOV X2, X21
	0x03C4589C STR X22, [X21 + 0x20]
	0x03C458A0 LDP X20, X19, [X31 + 0x30]
	0x03C458A4 LDP X22, X21, [X31 + 0x20]
	0x03C458A8 LDP X24, X23, [X31 + 0x10]
	0x03C458AC LDR X30, [X31], #0x40
	0x03C458B0 B 0x3C458C8
	0x03C458B4 BL 0x1C16F20
	0x03C458B8 BL 0x1C16F28
	0x03C458BC BL 0x1C16F44
	0x03C458C0 MOV X1, X31
	0x03C458C4 BL 0x1C16DEC
	0x03C458C8 STR X30, [X31 - 0x60]!
	0x03C458CC STP X28, X27, [X31 + 0x10]
	0x03C458D0 STP X26, X25, [X31 + 0x20]
	0x03C458D4 STP X24, X23, [X31 + 0x30]
	0x03C458D8 STP X22, X21, [X31 + 0x40]
	0x03C458DC STP X20, X19, [X31 + 0x50]
	0x03C458E0 ADRP X22, 0x7A0000
	0x03C458E4 ADRP X26, 0x4B8000
	0x03C458E8 ADRP X27, 0x4AE000
	0x03C458EC LDRB W8, [X22 + 0xBDF]
	0x03C458F0 LDR X26, [X26 + 0x968]
	0x03C458F4 LDR X27, [X27 + 0x6C0]
	0x03C458F8 MOV X19, X2
	0x03C458FC MOV X20, X1
	0x03C45900 MOV X21, X0
	0x03C45904 TBNZ X8, 0x0, 0x3C45928
	0x03C45908 ADRP X0, 0x4B8000
	0x03C4590C LDR X0, [X0 + 0x968]
	0x03C45910 BL 0x1C16CF4
	0x03C45914 ADRP X0, 0x4AE000
	0x03C45918 LDR X0, [X0 + 0x6C0]
	0x03C4591C BL 0x1C16CF4
	0x03C45920 MOVZ W8, 0x1
	0x03C45924 STRB W8, [X22 + 0xBDF]
	0x03C45928 LDR X0, [X27]
	0x03C4592C LDR X22, [X26]
	0x03C45930 LDR W8, [X0 + 0xE0]
	0x03C45934 CBNZ W8, 0x3C4593C
	0x03C45938 BL 0x1C16DFC
	0x03C4593C MOV X0, X22
	0x03C45940 MOV X1, X31
	0x03C45944 BL 0x338C698
	0x03C45948 MOV X1, X0
	0x03C4594C MOV X0, X21
	0x03C45950 MOV X2, X31
	0x03C45954 BL 0x3395F0C
	0x03C45958 TBZ X0, 0x0, 0x3C45A84
	0x03C4595C LDR X0, [X27]
	0x03C45960 LDR W8, [X0 + 0xE0]
	0x03C45964 CBNZ W8, 0x3C4596C
	0x03C45968 BL 0x1C16DFC
	0x03C4596C MOV X0, X21
	0x03C45970 MOV X1, X31
	0x03C45974 MOV X2, X31
	0x03C45978 BL 0x3395F0C
	0x03C4597C TBZ X0, 0x0, 0x3C45A84
	0x03C45980 CBZ X21, 0x3C45AA8
	0x03C45984 MOVZ W2, 0x3C
	0x03C45988 MOV X0, X21
	0x03C4598C MOV X1, X20
	0x03C45990 MOV X3, X31
	0x03C45994 MOV X4, X19
	0x03C45998 MOV X5, X31
	0x03C4599C MOV X6, X31
	0x03C459A0 BL 0x33976A4
	0x03C459A4 MOV X1, X31
	0x03C459A8 MOV X2, X31
	0x03C459AC MOV X22, X0
	0x03C459B0 BL 0x32CE528
	0x03C459B4 TBZ X0, 0x0, 0x3C45A68
	0x03C459B8 CBZ X22, 0x3C45AA8
	0x03C459BC LDR X8, [X22]
	0x03C459C0 MOV X0, X22
	0x03C459C4 LDR X9, [X8 + 0x248]
	0x03C459C8 LDR X1, [X8 + 0x250]
	0x03C459CC BLR X9
	0x03C459D0 CBZ X0, 0x3C45AA8
	0x03C459D4 LDR W8, [X0 + 0x18]
	0x03C459D8 MOV X23, X0
	0x03C459DC CMP W8, 0x1
	0x03C459E0 B.LT 0x3C45A88
	0x03C459E4 MOV W28, W31
	0x03C459E8 CMP W28, W8
	0x03C459EC B.CS 0x3C45AAC
	0x03C459F0 CBZ X19, 0x3C45AA8
	0x03C459F4 LDR W8, [X19 + 0x18]
	0x03C459F8 CMP W28, W8
	0x03C459FC B.CS 0x3C45AAC
	0x03C45A00 ADD X8, X23, W28, 0x3, SXTW
	0x03C45A04 LDR X0, [X8 + 0x20]
	0x03C45A08 CBZ X0, 0x3C45AA8
	0x03C45A0C LDR X8, [X0]
	0x03C45A10 SXTW X9, W28
	0x03C45A14 ADD X9, X19, X9, 0x3, LSL
	0x03C45A18 LDR X25, [X9 + 0x20]
	0x03C45A1C LDP X9, X1, [X8 + 0x1D8]
	0x03C45A20 BLR X9
	0x03C45A24 CBZ X25, 0x3C45AA8
	0x03C45A28 MOV X24, X0
	0x03C45A2C MOV X0, X25
	0x03C45A30 MOV X1, X31
	0x03C45A34 BL 0x3397374
	0x03C45A38 CBZ X24, 0x3C45AA8
	0x03C45A3C MOV W25, W0
	0x03C45A40 MOV X0, X24
	0x03C45A44 MOV X1, X31
	0x03C45A48 BL 0x3397374
	0x03C45A4C EOR W8, W25, W0, 0x0
	0x03C45A50 TBNZ X8, 0x0, 0x3C45A68
	0x03C45A54 LDR W8, [X23 + 0x18]
	0x03C45A58 ADD W28, W28, 0x1
	0x03C45A5C CMP W28, W8
	0x03C45A60 B.LT 0x3C459E8
	0x03C45A64 B 0x3C45A88
	0x03C45A68 LDR X8, [X21]
	0x03C45A6C MOV X0, X21
	0x03C45A70 LDR X9, [X8 + 0x818]
	0x03C45A74 LDR X1, [X8 + 0x820]
	0x03C45A78 BLR X9
	0x03C45A7C MOV X21, X0
	0x03C45A80 B 0x3C45928
	0x03C45A84 MOV X22, X31
	0x03C45A88 MOV X0, X22
	0x03C45A8C LDP X20, X19, [X31 + 0x50]
	0x03C45A90 LDP X22, X21, [X31 + 0x40]
	0x03C45A94 LDP X24, X23, [X31 + 0x30]
	0x03C45A98 LDP X26, X25, [X31 + 0x20]
	0x03C45A9C LDP X28, X27, [X31 + 0x10]
	0x03C45AA0 LDR X30, [X31], #0x60
	0x03C45AA4 RET
	0x03C45AA8 BL 0x1C16F20
	0x03C45AAC BL 0x1C16F28
	0x03C45AB0 STR X30, [X31 - 0x10]!
	0x03C45AB4 LDR X0, [X0 + 0x18]
	0x03C45AB8 CBZ X0, 0x3C45AC4
	0x03C45ABC LDR X30, [X31], #0x10
	0x03C45AC0 B 0x3C44CBC
	0x03C45AC4 BL 0x1C16F20
	0x03C45AC8 STP X30, X19, [X31 - 0x10]!
	0x03C45ACC LDRB W8, [X0 + 0x20]
	0x03C45AD0 CBZ W8, 0x3C45AF0
	0x03C45AD4 MOV X19, X0
	0x03C45AD8 LDR X0, [X0 + 0x18]
	0x03C45ADC CBZ X0, 0x3C45AF8
	0x03C45AE0 LDR X1, [X19 + 0x10]
	0x03C45AE4 MOV X2, X19
	0x03C45AE8 BL 0x3C44D04
	0x03C45AEC STRB W31, [X19 + 0x20]
	0x03C45AF0 LDP X30, X19, [X31], #0x10
	0x03C45AF4 RET
	0x03C45AF8 BL 0x1C16F20
	0x03C45AFC STR X30, [X31 - 0x10]!
	0x03C45B00 LDR X0, [X0 + 0x10]
	0x03C45B04 CBZ X0, 0x3C45B10
	0x03C45B08 LDR X30, [X31], #0x10
	0x03C45B0C B 0x3C44F3C
	0x03C45B10 BL 0x1C16F20
	0x03C45B14 STR X30, [X31 - 0x10]!
	0x03C45B18 LDR X0, [X0 + 0x10]
	0x03C45B1C CBZ X0, 0x3C45B28
	0x03C45B20 LDR X30, [X31], #0x10
	0x03C45B24 B 0x3C44FE4
	0x03C45B28 BL 0x1C16F20
	0x03C45B2C STR X30, [X31 - 0x10]!
	0x03C45B30 LDR X0, [X0 + 0x10]
	0x03C45B34 CBZ X0, 0x3C45B40
	0x03C45B38 LDR X30, [X31], #0x10
	0x03C45B3C B 0x3C45254
	0x03C45B40 BL 0x1C16F20
	0x03C45B44 STP X30, X19, [X31 - 0x10]!
	0x03C45B48 MOV X19, X0
	0x03C45B4C BL 0x3C45AC8
	0x03C45B50 LDR X0, [X19 + 0x10]
	0x03C45B54 CBZ X0, 0x3C45B60
	0x03C45B58 LDP X30, X19, [X31], #0x10
	0x03C45B5C B 0x3C453CC
	0x03C45B60 BL 0x1C16F20
	0x03C45B64 STR X30, [X31 - 0x20]!
	0x03C45B68 STP X20, X19, [X31 + 0x10]
	0x03C45B6C ADRP X19, 0x7A0000
	0x03C45B70 LDRB W8, [X19 + 0xBDE]
	0x03C45B74 MOV X20, X0
	0x03C45B78 TBNZ X8, 0x0, 0x3C45B90
	0x03C45B7C ADRP X0, 0x4AE000
	0x03C45B80 LDR X0, [X0 + 0xDD8]
	0x03C45B84 BL 0x1C16CF4
	0x03C45B88 MOVZ W8, 0x1
	0x03C45B8C STRB W8, [X19 + 0xBDE]
	0x03C45B90 MOV X0, X20
	0x03C45B94 MOV X1, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x7A1000
	011 Move X25, 0x4D7000
	012 Move X23, 0x4AF000
	013 Move W8, [X22+3023]
	014 Move X25, [X25+2040]
	015 Move X23, [X23+1728]
	016 Move X21, X2
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {55}
	023 Move X0, 0x51B000
	024 Move X0, [X0+2328]
	025 Call 0x1C17CF4
	026 Move X0, 0x51B000
	027 Move X0, [X0+2336]
	028 Call 0x1C17CF4
	029 Move X0, 0x4E8000
	030 Move X0, [X0+2168]
	031 Call 0x1C17CF4
	032 Move X0, 0x4AF000
	033 Move X0, [X0+2512]
	034 Call 0x1C17CF4
	035 Move X0, 0x4D7000
	036 Move X0, [X0+2040]
	037 Call 0x1C17CF4
	038 Move X0, 0x4AF000
	039 Move X0, [X0+1432]
	040 Call 0x1C17CF4
	041 Move X0, 0x51B000
	042 Move X0, [X0+2344]
	043 Call 0x1C17CF4
	044 Move X0, 0x4B7000
	045 Move X0, [X0+3168]
	046 Call 0x1C17CF4
	047 Move X0, 0x4B7000
	048 Move X0, [X0+1480]
	049 Call 0x1C17CF4
	050 Move X0, 0x4AF000
	051 Move X0, [X0+1728]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X22+3023], W8
	055 Move X0, [X23]
	056 Move X22, [X25]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X22
	062 Move X1, X31
	063 Call Type.GetTypeFromHandle, X0
	064 Compare X21, 0
	065 JumpIfEqual {310}
	066 Move X22, X0
	067 Move X0, [X21+24]
	068 Move X24, 0x51B000
	069 Move X24, [X24+2336]
	070 Move X1, X31
	071 Call String.IsNullOrEmpty, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {104}
	076 Move X0, [X23]
	077 Move X22, [X21+24]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X8, 0x4B7000
	083 Move X9, 0x51B000
	084 Move X8, [X8+1480]
	085 Move X9, [X9+2344]
	086 Move X0, X22
	087 Move W1, W31
	088 Move X2, [X8]
	089 Move X3, [X9]
	090 Call 0x1C180BC
	091 Move X22, X0
	092 Compare X0, 0
	093 JumpIfNotEqual {104}
	094 Move X0, [X23]
	095 Move X22, [X25]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X22
	101 Move X1, X31
	102 Call Type.GetTypeFromHandle, X0
	103 Move X22, X0
	104 Move X0, [X23]
	105 Move X26, 0x4B7000
	106 Move X23, [X24]
	107 Move W8, [X0+224]
	108 Move X26, [X26+3168]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X23
	113 Move X1, X31
	114 Call Type.GetTypeFromHandle, X0
	115 Move X8, [X26]
	116 Move X23, X0
	117 Move W1, 1
	118 Move X0, X8
	119 Call 0x1C17D6C
	120 Compare X0, 0
	121 JumpIfEqual {310}
	122 Move X24, X0
	123 Compare X22, 0
	124 JumpIfEqual {131}
	125 Move X8, [X24]
	126 Move X0, X22
	127 Move X1, [X8+64]
	128 Call 0x1C17E00
	129 Compare X0, 0
	130 JumpIfEqual {312}
	131 Move W8, [X24+24]
	132 Compare W8, 0
	133 JumpIfEqual {311}
	134 Move [X24+32], X22
	135 Compare X23, 0
	136 JumpIfEqual {310}
	137 Move X8, [X23]
	138 Move X0, X23
	139 Move X1, X24
	140 Move X9, [X8+2264]
	141 Move X2, [X8+2272]
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X8, [X26]
	144 Move X23, X0
	145 Move W1, 3
	146 Move X0, X8
	147 Call 0x1C17D6C
	148 Move X8, [X25]
	149 Move X24, X0
	150 Move X1, X31
	151 Move X0, X8
	152 Call Type.GetTypeFromHandle, X0
	153 Compare X24, 0
	154 JumpIfEqual {310}
	155 Move X25, X0
	156 Compare X0, 0
	157 JumpIfEqual {164}
	158 Move X8, [X24]
	159 Move X0, X25
	160 Move X1, [X8+64]
	161 Call 0x1C17E00
	162 Compare X0, 0
	163 JumpIfEqual {312}
	164 Move W8, [X24+24]
	165 Compare W8, 0
	166 JumpIfEqual {311}
	167 Move X8, 0x4E8000
	168 Move X8, [X8+2168]
	169 Move [X24+32], X25
	170 Move X1, X31
	171 Move X0, [X8]
	172 Call Type.GetTypeFromHandle, X0
	173 Move X25, X0
	174 Compare X0, 0
	175 JumpIfEqual {182}
	176 Move X8, [X24]
	177 Move X0, X25
	178 Move X1, [X8+64]
	179 Call 0x1C17E00
	180 Compare X0, 0
	181 JumpIfEqual {312}
	182 Move W8, [X24+24]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move [X24+40], X25
	185 Compare X22, 0
	186 JumpIfEqual {194}
	187 Move X8, [X24]
	188 Move X0, X22
	189 Move X1, [X8+64]
	190 Call 0x1C17E00
	191 Compare X0, 0
	192 JumpIfEqual {312}
	193 Move W8, [X24+24]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move [X24+48], X22
	196 Compare X23, 0
	197 JumpIfEqual {310}
	198 Move X25, 0x4AF000
	199 Move X25, [X25+1432]
	200 Move X0, X23
	201 Move X1, X24
	202 Move X2, X31
	203 Call Type.GetConstructor, X0, X1
	204 Move X8, [X25]
	205 Move X23, [X21+16]
	206 Move X21, X0
	207 Move W9, [X8+224]
	208 Compare W9, 0
	209 JumpIfNotEqual {212}
	210 Move X0, X8
	211 Call 0x1C17DFC
	212 Move X0, X23
	213 Move X1, X31
	214 Call Object.op_Inequality, X0, X1
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {237}
	219 Compare X23, 0
	220 JumpIfEqual {310}
	221 Move X0, X23
	222 Move X1, X31
	223 Call "il2cpp_vm_object_is_inst", X0
	224 Compare X22, 0
	225 JumpIfEqual {310}
	226 Move X8, [X22]
	227 Move X1, X0
	228 Move X0, X22
	229 Move X9, [X8+680]
	230 Move X2, [X8+688]
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfEqual {237}
	236 Move X23, X31
	237 Move X8, 0x4AF000
	238 Move X8, [X8+2512]
	239 Move W1, 3
	240 Move X0, [X8]
	241 Call 0x1C17D6C
	242 Compare X0, 0
	243 JumpIfEqual {310}
	244 Move X22, X0
	245 Compare X20, 0
	246 JumpIfEqual {253}
	247 Move X8, [X22]
	248 Move X0, X20
	249 Move X1, [X8+64]
	250 Call 0x1C17E00
	251 Compare X0, 0
	252 JumpIfEqual {312}
	253 Move W8, [X22+24]
	254 Compare W8, 0
	255 JumpIfEqual {311}
	256 Move [X22+32], X20
	257 Compare X19, 0
	258 JumpIfEqual {266}
	259 Move X8, [X22]
	260 Move X0, X19
	261 Move X1, [X8+64]
	262 Call 0x1C17E00
	263 Compare X0, 0
	264 JumpIfEqual {312}
	265 Move W8, [X22+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move [X22+40], X19
	268 Compare X23, 0
	269 JumpIfEqual {277}
	270 Move X8, [X22]
	271 Move X0, X23
	272 Move X1, [X8+64]
	273 Call 0x1C17E00
	274 Compare X0, 0
	275 JumpIfEqual {312}
	276 Move W8, [X22+24]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move [X22+48], X23
	279 Compare X21, 0
	280 JumpIfEqual {310}
	281 Move X0, X21
	282 Move X1, X22
	283 Move X2, X31
	284 Call ConstructorInfo.Invoke, X0, X1
	285 Compare X0, 0
	286 JumpIfEqual {300}
	287 Move X8, 0x51B000
	288 Move X8, [X8+2328]
	289 Move X9, [X0]
	290 Move X8, [X8]
	291 Move W11, [X9+304]
	292 Move W10, [X8+304]
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X0, X31
	295 Move X9, [X9+200]
	296 Add X9, X9, X10
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 NotImplemented "Instruction CSEL not yet implemented."
	300 Move X20, [X31+64]
	301 Move X19, [X31+72]
	302 Move X22, [X31+48]
	303 Move X21, [X31+56]
	304 Move X24, [X31+32]
	305 Move X23, [X31+40]
	306 Move X26, [X31+16]
	307 Move X25, [X31+24]
	308 Move X30, [X31+80]
	309 Return X0
	310 Call 0x1C17F20
	311 Call 0x1C17F28
	312 Call 0x1C17F44
	313 Move X1, X31
	314 Call 0x1C17DEC

Method: System.Void OnBeforeSerialize()

Disassembly:
	0x03C45B98 BL 0x33CB4E8
	0x03C45B9C MOV X19, X0
	0x03C45BA0 MOV X0, X20
	0x03C45BA4 MOV X1, X31
	0x03C45BA8 BL 0x33BE520
	0x03C45BAC CBZ X0, 0x3C45BE4
	0x03C45BB0 LDR X8, [X0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Call UnityEventTools.TidyAssemblyTypeName, X0
	006 Move [X19+24], X0
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void OnAfterDeserialize()

Disassembly:
	0x03C45BB4 ADRP X20, 0x4AE000
	0x03C45BB8 LDR X9, [X8 + 0x2E8]
	0x03C45BBC LDR X1, [X8 + 0x2F0]
	0x03C45BC0 LDR X20, [X20 + 0xDD8]
	0x03C45BC4 BLR X9
	0x03C45BC8 LDR X1, [X20]
	0x03C45BCC MOV X2, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Call UnityEventTools.TidyAssemblyTypeName, X0
	006 Move [X19+24], X0
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C45BD0 MOV X0, X19
	0x03C45BD4 LDP X20, X19, [X31 + 0x10]
	0x03C45BD8 MOV X3, X31
	0x03C45BDC LDR X30, [X31], #0x20
	0x03C45BE0 B 0x32274B8
	0x03C45BE4 BL 0x1C16F20
	0x03C45BE8 STP X30, X21, [X31 - 0x20]!
	0x03C45BEC STP X20, X19, [X31 + 0x10]
	0x03C45BF0 LDR X8, [X2 + 0x8]
	0x03C45BF4 STP X1, X2, [X0 + 0x20]
	0x03C45BF8 MOV X19, X0
	0x03C45BFC MOV X20, X1
	0x03C45C00 STR X8, [X0 + 0x10]
	0x03C45C04 LDRB W21, [X2 + 0x52]
	0x03C45C08 STR X0, [X0 + 0x40]
	0x03C45C0C MOV X0, X2
	0x03C45C10 BL 0x1C16D84
	0x03C45C14 TBZ X0, 0x0, 0x3C45C2C
	0x03C45C18 CBNZ W21, 0x3C45C30
	0x03C45C1C ADRP X8, 0xFFFFFFFFFDFC3000
	0x03C45C20 ADD X8, X8, 0xC58
	0x03C45C24 STR X8, [X19 + 0x18]
	0x03C45C28 B 0x3C45C40
	0x03C45C2C CBZ X20, 0x3C45C58
	0x03C45C30 LDR X8, [X19 + 0x10]
	0x03C45C34 LDR X9, [X19 + 0x20]
	0x03C45C38 STR X8, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A1000
	006 Move X20, 0x51B000
	007 Move W8, [X21+3024]
	008 Move X20, [X20+2352]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x51B000
	015 Move X0, [X0+2352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3024], W8
	019 Move [X19+40], W31
	020 Move X0, [X20]
	021 Call 0x1C17F10
	022 Move X1, X31
	023 Move X20, X0
	024 Call Object..ctor, X0
	025 Move W8, 2
	026 Move [X19+48], X20
	027 Move [X19+56], W8
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X1, X31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call Object..ctor, X0
	035 Return 

