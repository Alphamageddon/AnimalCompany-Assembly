Type: UnityEngine.Events.UnityEvent`2

Method: System.Void .ctor()

Disassembly:
	0x0272D1C8 LDR X30, [X31], #0x40
	0x0272D1CC B 0x3C458C8
	0x0272D1D0 BL 0x1C16F28

ISIL:
	001 Move X1, X31
	002 Move [X0+40], X31
	003 Call UnityEventBase..ctor, X0
	004 Return 

Method: System.Void AddListener(UnityEngine.Events.UnityAction`2<T0, T1> call)

Disassembly:
	0x0272D1D4 BL 0x1C16F44
	0x0272D1D8 MOV X1, X31
	0x0272D1DC BL 0x1C16DEC
	0x0272D1E0 BL 0x1C16F20
	0x0272D1E4 STP X30, X21, [X31 - 0x20]!
	0x0272D1E8 STP X20, X19, [X31 + 0x10]
	0x0272D1EC LDR X8, [X3 + 0x20]
	0x0272D1F0 MOV X20, X3
	0x0272D1F4 MOV X19, X2
	0x0272D1F8 MOV X21, X1
	0x0272D1FC LDR X8, [X8 + 0xC0]
	0x0272D200 LDR X0, [X8 + 0x30]
	0x0272D204 LDRB W8, [X0 + 0x135]
	0x0272D208 TBNZ X8, 0x0, 0x272D210
	0x0272D20C BL 0x1C5C684

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X9, [X2+32]
	004 Move X8, X1
	005 Move X19, X0
	006 Move X0, X8
	007 Move X9, [X9+192]
	008 Move X1, [X9+16]
	009 Call 0x272D3A4, X0
	010 Compare X19, 0
	011 JumpIfEqual {19}
	012 Move X1, X0
	013 Move X0, X19
	014 Move X2, X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call UnityEventBase.AddCall, X0, X1
	018 Return 
	019 Call 0x1C17F20

Method: System.Reflection.MethodInfo FindMethod_Impl(System.String name, System.Type targetObjType)

Disassembly:
	0x0272D210 BL 0x1C16F10
	0x0272D214 LDR X8, [X20 + 0x20]
	0x0272D218 MOV X1, X21
	0x0272D21C MOV X2, X19
	0x0272D220 MOV X20, X0
	0x0272D224 LDR X8, [X8 + 0xC0]
	0x0272D228 LDR X3, [X8 + 0x38]
	0x0272D22C BL 0x2E9DEBC
	0x0272D230 MOV X0, X20
	0x0272D234 LDP X20, X19, [X31 + 0x10]
	0x0272D238 LDP X30, X21, [X31], #0x20
	0x0272D23C RET
	0x0272D240 STR X30, [X31 - 0x20]!
	0x0272D244 STP X20, X19, [X31 + 0x10]
	0x0272D248 LDR X8, [X1 + 0x20]
	0x0272D24C MOV X20, X1
	0x0272D250 MOV X19, X0
	0x0272D254 LDRB W9, [X8 + 0x135]
	0x0272D258 TBNZ X9, 0x0, 0x272D268
	0x0272D25C MOV X0, X8
	0x0272D260 BL 0x1C5C684
	0x0272D264 MOV X8, X0
	0x0272D268 LDR X8, [X8 + 0xC0]
	0x0272D26C LDR X0, [X8 + 0x30]
	0x0272D270 LDRB W8, [X0 + 0x135]
	0x0272D274 TBNZ X8, 0x0, 0x272D27C
	0x0272D278 BL 0x1C5C684
	0x0272D27C BL 0x1C16F10
	0x0272D280 LDR X8, [X20 + 0x20]
	0x0272D284 MOV X20, X0
	0x0272D288 LDRB W9, [X8 + 0x135]
	0x0272D28C TBNZ X9, 0x0, 0x272D29C
	0x0272D290 MOV X0, X8
	0x0272D294 BL 0x1C5C684
	0x0272D298 MOV X8, X0
	0x0272D29C LDR X8, [X8 + 0xC0]
	0x0272D2A0 MOV X0, X20
	0x0272D2A4 MOV X1, X19
	0x0272D2A8 LDR X2, [X8 + 0x40]
	0x0272D2AC BL 0x2E9DFF0
	0x0272D2B0 MOV X0, X20
	0x0272D2B4 LDP X20, X19, [X31 + 0x10]
	0x0272D2B8 LDR X30, [X31], #0x20
	0x0272D2BC RET
	0x0272D2C0 STP X29, X30, [X31 - 0x60]!
	0x0272D2C4 STP X28, X27, [X31 + 0x10]
	0x0272D2C8 STP X26, X25, [X31 + 0x20]
	0x0272D2CC STP X24, X23, [X31 + 0x30]
	0x0272D2D0 STP X22, X21, [X31 + 0x40]
	0x0272D2D4 STP X20, X19, [X31 + 0x50]
	0x0272D2D8 ADRP X23, 0x1CAD000
	0x0272D2DC LDRB W8, [X23 + 0x66D]
	0x0272D2E0 MOV X19, X3
	0x0272D2E4 MOV X20, X2
	0x0272D2E8 MOV X21, X1
	0x0272D2EC MOV X22, X0
	0x0272D2F0 TBNZ X8, 0x0, 0x272D32C
	0x0272D2F4 ADRP X0, 0x19F0000
	0x0272D2F8 LDR X0, [X0 + 0xA70]
	0x0272D2FC BL 0x1C16CF4
	0x0272D300 ADRP X0, 0x19F0000
	0x0272D304 LDR X0, [X0 + 0xA78]
	0x0272D308 BL 0x1C16CF4
	0x0272D30C ADRP X0, 0x19F0000
	0x0272D310 LDR X0, [X0 + 0xA80]
	0x0272D314 BL 0x1C16CF4
	0x0272D318 ADRP X0, 0x19C6000
	0x0272D31C LDR X0, [X0 + 0x9D0]
	0x0272D320 BL 0x1C16CF4
	0x0272D324 MOVZ W8, 0x1
	0x0272D328 STRB W8, [X23 + 0x66D]
	0x0272D32C CBZ X22, 0x272D508
	0x0272D330 MOV X0, X22
	0x0272D334 MOV X1, X31
	0x0272D338 BL 0x3C45B44
	0x0272D33C CBZ X0, 0x272D508
	0x0272D340 LDR W8, [X0 + 0x18]
	0x0272D344 MOV X23, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1CAE000
	009 Move X24, 0x19CF000
	010 Move X22, 0x19C7000
	011 Move W8, [X23+1638]
	012 Move X24, [X24+3168]
	013 Move X22, [X22+1728]
	014 Move X21, X3
	015 Move X20, X2
	016 Move X19, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x19CF000
	022 Move X0, [X0+3168]
	023 Call 0x1C17CF4
	024 Move X0, 0x19C7000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1638], W8
	029 Move X0, [X24]
	030 Move W1, 2
	031 Call 0x1C17D6C
	032 Move X9, [X21+32]
	033 Move X8, [X22]
	034 Move X22, X0
	035 Move X9, [X9+192]
	036 Move W10, [X8+224]
	037 Move X23, [X9+32]
	038 Compare W10, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X23
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Compare X22, 0
	046 JumpIfEqual {94}
	047 Move X23, X0
	048 Compare X0, 0
	049 JumpIfEqual {56}
	050 Move X8, [X22]
	051 Move X0, X23
	052 Move X1, [X8+64]
	053 Call 0x1C17E00
	054 Compare X0, 0
	055 JumpIfEqual {91}
	056 Move W8, [X22+24]
	057 Compare W8, 0
	058 JumpIfEqual {90}
	059 Move [X22+32], X23
	060 Move X8, [X21+32]
	061 Move X1, X31
	062 Move X8, [X8+192]
	063 Move X0, [X8+40]
	064 Call Type.GetTypeFromHandle, X0
	065 Move X21, X0
	066 Compare X0, 0
	067 JumpIfEqual {74}
	068 Move X8, [X22]
	069 Move X0, X21
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {91}
	074 Move W8, [X22+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X22+40], X21
	077 Move X0, X20
	078 Move X1, X19
	079 Move X2, X22
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X3, X31
	087 Move X30, [X31+64]
	088 Call UnityEventBase.GetValidMethodInfo, X0, X1, X2
	089 Return X0
	090 Call 0x1C17F28
	091 Call 0x1C17F44
	092 Move X1, X31
	093 Call 0x1C17DEC
	094 Call 0x1C17F20

Method: UnityEngine.Events.BaseInvokableCall GetDelegate(System.Object target, System.Reflection.MethodInfo theFunction)

Disassembly:
	0x0272D348 CMP W8, 0x1
	0x0272D34C B.LT 0x272D4EC
	0x0272D350 ADRP X27, 0x19F0000
	0x0272D354 ADRP X28, 0x19F0000
	0x0272D358 ADRP X29, 0x19C6000
	0x0272D35C LDR X27, [X27 + 0xA80]
	0x0272D360 LDR X28, [X28 + 0xA70]
	0x0272D364 LDR X29, [X29 + 0x9D0]
	0x0272D368 MOV W24, W31
	0x0272D36C LDR X2, [X27]
	0x0272D370 MOV X0, X23
	0x0272D374 MOV W1, W24
	0x0272D378 BL 0x301BCCC
	0x0272D37C LDR X8, [X19 + 0x20]
	0x0272D380 MOV X25, X0
	0x0272D384 LDR X8, [X8 + 0xC0]
	0x0272D388 LDR X8, [X8 + 0x30]
	0x0272D38C LDRB W9, [X8 + 0x135]
	0x0272D390 TBNZ X9, 0x0, 0x272D3A0
	0x0272D394 MOV X0, X8
	0x0272D398 BL 0x1C5C684
	0x0272D39C MOV X8, X0
	0x0272D3A0 CBZ X25, 0x272D3CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X20, X3
	007 Move X19, X2
	008 Move X21, X1
	009 Move X8, [X8+192]
	010 Move X0, [X8+48]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X20+32]
	019 Move X1, X21
	020 Move X2, X19
	021 Move X20, X0
	022 Move X8, [X8+192]
	023 Move X3, [X8+56]
	024 Call 0x2E756E4, X0, X1, X2
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: UnityEngine.Events.BaseInvokableCall GetDelegate(UnityEngine.Events.UnityAction`2<T0, T1> action)

Disassembly:
	0x0272D3A4 LDR X9, [X25]
	0x0272D3A8 LDRB W10, [X8 + 0x130]
	0x0272D3AC LDRB W11, [X9 + 0x130]
	0x0272D3B0 CMP W11, W10
	0x0272D3B4 B.CC 0x272D3CC
	0x0272D3B8 LDR X9, [X9 + 0xC8]
	0x0272D3BC ADD X9, X9, X10, 0x3, LSL
	0x0272D3C0 LDUR X9, [X9 - 0x8]
	0x0272D3C4 CMP X9, X8
	0x0272D3C8 B.EQ 0x272D4C0
	0x0272D3CC LDR X2, [X27]
	0x0272D3D0 MOV X0, X23
	0x0272D3D4 MOV W1, W24
	0x0272D3D8 BL 0x301BCCC
	0x0272D3DC CBZ X0, 0x272D40C
	0x0272D3E0 LDR X9, [X0]
	0x0272D3E4 LDR X8, [X28]
	0x0272D3E8 LDRB W11, [X9 + 0x130]
	0x0272D3EC LDRB W10, [X8 + 0x130]
	0x0272D3F0 CMP W11, W10
	0x0272D3F4 B.CC 0x272D40C
	0x0272D3F8 LDR X9, [X9 + 0xC8]
	0x0272D3FC ADD X9, X9, X10, 0x3, LSL
	0x0272D400 LDUR X9, [X9 - 0x8]
	0x0272D404 CMP X9, X8
	0x0272D408 B.EQ 0x272D4E0
	0x0272D40C LDR X2, [X27]
	0x0272D410 MOV X0, X23
	0x0272D414 MOV W1, W24
	0x0272D418 BL 0x301BCCC
	0x0272D41C LDR X26, [X22 + 0x28]
	0x0272D420 MOV X25, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, [X8+48]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Call 0x1C17F10
	024 Move X8, [X20+32]
	025 Move X20, X0
	026 Move W9, [X8+309]
	027 Move TEMP, X9
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {34}
	031 Move X0, X8
	032 Call 0x1C5D684
	033 Move X8, X0
	034 Move X8, [X8+192]
	035 Move X0, X20
	036 Move X1, X19
	037 Move X2, [X8+64]
	038 Call 0x2E75818, X0, X1
	039 Move X0, X20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0

Method: System.Void Invoke(T0 arg0, T1 arg1)

Disassembly:
	0x0272D424 CBNZ X26, 0x272D43C
	0x0272D428 LDR X0, [X29]
	0x0272D42C MOVZ W1, 0x2
	0x0272D430 BL 0x1C16D6C
	0x0272D434 MOV X26, X0
	0x0272D438 STR X0, [X22 + 0x28]
	0x0272D43C CBZ X26, 0x272D508
	0x0272D440 CBZ X21, 0x272D458
	0x0272D444 LDR X8, [X26]
	0x0272D448 MOV X0, X21
	0x0272D44C LDR X1, [X8 + 0x40]
	0x0272D450 BL 0x1C16E00
	0x0272D454 CBZ X0, 0x272D510
	0x0272D458 LDR W8, [X26 + 0x18]
	0x0272D45C CBZ W8, 0x272D50C
	0x0272D460 STR X21, [X26 + 0x20]
	0x0272D464 LDR X26, [X22 + 0x28]
	0x0272D468 CBZ X26, 0x272D508
	0x0272D46C CBZ X20, 0x272D484
	0x0272D470 LDR X8, [X26]
	0x0272D474 MOV X0, X20
	0x0272D478 LDR X1, [X8 + 0x40]
	0x0272D47C BL 0x1C16E00
	0x0272D480 CBZ X0, 0x272D510
	0x0272D484 LDR W8, [X26 + 0x18]
	0x0272D488 CMP W8, 0x1
	0x0272D48C B.LS 0x272D50C
	0x0272D490 STR X20, [X26 + 0x28]
	0x0272D494 CBZ X25, 0x272D508
	0x0272D498 LDR X8, [X25]
	0x0272D49C LDR X1, [X22 + 0x28]
	0x0272D4A0 MOV X0, X25
	0x0272D4A4 LDP X9, X2, [X8 + 0x178]
	0x0272D4A8 BLR X9
	0x0272D4AC LDR W8, [X23 + 0x18]
	0x0272D4B0 ADD W24, W24, 0x1
	0x0272D4B4 CMP W24, W8
	0x0272D4B8 B.LT 0x272D36C
	0x0272D4BC B 0x272D4EC
	0x0272D4C0 LDR X8, [X19 + 0x20]
	0x0272D4C4 MOV X0, X25
	0x0272D4C8 MOV X1, X21
	0x0272D4CC MOV X2, X20
	0x0272D4D0 LDR X8, [X8 + 0xC0]
	0x0272D4D4 LDR X3, [X8 + 0x58]
	0x0272D4D8 BL 0x2E9E1C4
	0x0272D4DC B 0x272D4AC
	0x0272D4E0 MOV X1, X31
	0x0272D4E4 BL 0x3C4412C
	0x0272D4E8 B 0x272D4AC
	0x0272D4EC LDP X20, X19, [X31 + 0x50]
	0x0272D4F0 LDP X22, X21, [X31 + 0x40]
	0x0272D4F4 LDP X24, X23, [X31 + 0x30]
	0x0272D4F8 LDP X26, X25, [X31 + 0x20]
	0x0272D4FC LDP X28, X27, [X31 + 0x10]
	0x0272D500 LDP X29, X30, [X31], #0x60
	0x0272D504 RET
	0x0272D508 BL 0x1C16F20
	0x0272D50C BL 0x1C16F28
	0x0272D510 BL 0x1C16F44
	0x0272D514 MOV X1, X31
	0x0272D518 BL 0x1C16DEC
	0x0272D51C MOV X1, X31
	0x0272D520 STR X31, [X0 + 0x28]
	0x0272D524 B 0x3C45534
	0x0272D528 STP X30, X19, [X31 - 0x10]!
	0x0272D52C LDR X9, [X2 + 0x20]
	0x0272D530 MOV X8, X1
	0x0272D534 MOV X19, X0
	0x0272D538 MOV X0, X8
	0x0272D53C LDR X9, [X9 + 0xC0]
	0x0272D540 LDR X1, [X9 + 0x10]
	0x0272D544 BL 0x272D6F8
	0x0272D548 CBZ X19, 0x272D560
	0x0272D54C MOV X1, X0
	0x0272D550 MOV X0, X19
	0x0272D554 MOV X2, X31
	0x0272D558 LDP X30, X19, [X31], #0x10
	0x0272D55C B 0x3C45AFC
	0x0272D560 BL 0x1C16F20
	0x0272D564 STR X30, [X31 - 0x40]!
	0x0272D568 STP X24, X23, [X31 + 0x10]
	0x0272D56C STP X22, X21, [X31 + 0x20]
	0x0272D570 STP X20, X19, [X31 + 0x30]
	0x0272D574 ADRP X23, 0x1CAD000
	0x0272D578 ADRP X24, 0x19CE000
	0x0272D57C ADRP X22, 0x19C6000
	0x0272D580 LDRB W8, [X23 + 0x66E]
	0x0272D584 LDR X24, [X24 + 0xC60]
	0x0272D588 LDR X22, [X22 + 0x6C0]
	0x0272D58C MOV X21, X3
	0x0272D590 MOV X20, X2
	0x0272D594 MOV X19, X1
	0x0272D598 TBNZ X8, 0x0, 0x272D5BC
	0x0272D59C ADRP X0, 0x19CE000
	0x0272D5A0 LDR X0, [X0 + 0xC60]
	0x0272D5A4 BL 0x1C16CF4
	0x0272D5A8 ADRP X0, 0x19C6000
	0x0272D5AC LDR X0, [X0 + 0x6C0]
	0x0272D5B0 BL 0x1C16CF4
	0x0272D5B4 MOVZ W8, 0x1
	0x0272D5B8 STRB W8, [X23 + 0x66E]
	0x0272D5BC LDR X0, [X24]
	0x0272D5C0 MOVZ W1, 0x2
	0x0272D5C4 BL 0x1C16D6C
	0x0272D5C8 LDR X9, [X21 + 0x20]
	0x0272D5CC LDR X8, [X22]
	0x0272D5D0 MOV X22, X0
	0x0272D5D4 LDR X9, [X9 + 0xC0]
	0x0272D5D8 LDR W10, [X8 + 0xE0]
	0x0272D5DC LDR X23, [X9 + 0x20]
	0x0272D5E0 CBNZ W10, 0x272D5EC
	0x0272D5E4 MOV X0, X8
	0x0272D5E8 BL 0x1C16DFC
	0x0272D5EC MOV X0, X23
	0x0272D5F0 MOV X1, X31
	0x0272D5F4 BL 0x338C698
	0x0272D5F8 CBZ X22, 0x272D698
	0x0272D5FC MOV X23, X0
	0x0272D600 CBZ X0, 0x272D618
	0x0272D604 LDR X8, [X22]
	0x0272D608 MOV X0, X23
	0x0272D60C LDR X1, [X8 + 0x40]
	0x0272D610 BL 0x1C16E00
	0x0272D614 CBZ X0, 0x272D68C
	0x0272D618 LDR W8, [X22 + 0x18]
	0x0272D61C CBZ W8, 0x272D688
	0x0272D620 STR X23, [X22 + 0x20]
	0x0272D624 LDR X8, [X21 + 0x20]
	0x0272D628 MOV X1, X31
	0x0272D62C LDR X8, [X8 + 0xC0]
	0x0272D630 LDR X0, [X8 + 0x28]
	0x0272D634 BL 0x338C698
	0x0272D638 MOV X21, X0
	0x0272D63C CBZ X0, 0x272D654
	0x0272D640 LDR X8, [X22]
	0x0272D644 MOV X0, X21
	0x0272D648 LDR X1, [X8 + 0x40]
	0x0272D64C BL 0x1C16E00
	0x0272D650 CBZ X0, 0x272D68C
	0x0272D654 LDR W8, [X22 + 0x18]
	0x0272D658 CMP W8, 0x1
	0x0272D65C B.LS 0x272D688
	0x0272D660 STR X21, [X22 + 0x28]
	0x0272D664 MOV X0, X20
	0x0272D668 MOV X1, X19
	0x0272D66C MOV X2, X22
	0x0272D670 LDP X20, X19, [X31 + 0x30]
	0x0272D674 LDP X22, X21, [X31 + 0x20]
	0x0272D678 LDP X24, X23, [X31 + 0x10]
	0x0272D67C MOV X3, X31
	0x0272D680 LDR X30, [X31], #0x40
	0x0272D684 B 0x3C458C8
	0x0272D688 BL 0x1C16F28
	0x0272D68C BL 0x1C16F44
	0x0272D690 MOV X1, X31
	0x0272D694 BL 0x1C16DEC
	0x0272D698 BL 0x1C16F20
	0x0272D69C STP X30, X21, [X31 - 0x20]!
	0x0272D6A0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0x1CAE000
	015 Move W8, [X23+1639]
	016 Move X19, X3
	017 Move W20, W2
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x19F1000
	025 Move X0, [X0+2672]
	026 Call 0x1C17CF4
	027 Move X0, 0x19F1000
	028 Move X0, [X0+2680]
	029 Call 0x1C17CF4
	030 Move X0, 0x19F1000
	031 Move X0, [X0+2688]
	032 Call 0x1C17CF4
	033 Move X0, 0x19C7000
	034 Move X0, [X0+2512]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+1639], W8
	038 Compare X22, 0
	039 JumpIfEqual {178}
	040 Move X0, X22
	041 Move X1, X31
	042 Call UnityEventBase.PrepareInvoke, X0
	043 Compare X0, 0
	044 JumpIfEqual {178}
	045 Move W8, [X0+24]
	046 Move X23, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X27, 0x19F1000
	049 Move X28, 0x19F1000
	050 Move X27, [X27+2688]
	051 Move X28, [X28+2672]
	052 Move W24, W31
	053 Move X2, [X27]
	054 Move X0, X23
	055 Move W1, W24
	056 Call List`1<Object>.get_Item, X0, X1
	057 Move X8, [X19+32]
	058 Move X25, X0
	059 Move X8, [X8+192]
	060 Move X8, [X8+48]
	061 Move W9, [X8+309]
	062 Move TEMP, X9
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move X0, X8
	067 Call 0x1C5D684
	068 Move X8, X0
	069 Compare X25, 0
	070 JumpIfEqual {79}
	071 Move X9, [X25]
	072 Move W10, [X8+304]
	073 Move W11, [X9+304]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X9, [X9+200]
	076 Add X9, X9, X10
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X2, [X27]
	080 Move X0, X23
	081 Move W1, W24
	082 Call List`1<Object>.get_Item, X0, X1
	083 Compare X0, 0
	084 JumpIfEqual {94}
	085 Move X9, [X0]
	086 Move X8, [X28]
	087 Move W11, [X9+304]
	088 Move W10, [X8+304]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X9, [X9+200]
	091 Add X9, X9, X10
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X2, [X27]
	095 Move X0, X23
	096 Move W1, W24
	097 Call List`1<Object>.get_Item, X0, X1
	098 Move X26, [X22+40]
	099 Move X25, X0
	100 Compare X26, 0
	101 JumpIfNotEqual {109}
	102 Move X8, 0x19C7000
	103 Move X8, [X8+2512]
	104 Move W1, 2
	105 Move X0, [X8]
	106 Call 0x1C17D6C
	107 Move X26, X0
	108 Move [X22+40], X0
	109 Compare X26, 0
	110 JumpIfEqual {178}
	111 Compare X21, 0
	112 JumpIfEqual {119}
	113 Move X8, [X26]
	114 Move X0, X21
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {180}
	119 Move W8, [X26+24]
	120 Compare W8, 0
	121 JumpIfEqual {179}
	122 Move [X26+32], X21
	123 Move X29, [X22+40]
	124 Move [X31+12], W20
	125 Move X8, [X19+32]
	126 Add X1, X31, 12
	127 Move X8, [X8+192]
	128 Move X0, [X8+80]
	129 Call 0x1C17E04
	130 Compare X29, 0
	131 JumpIfEqual {178}
	132 Move X26, X0
	133 Compare X0, 0
	134 JumpIfEqual {141}
	135 Move X8, [X29]
	136 Move X0, X26
	137 Move X1, [X8+64]
	138 Call 0x1C17E00
	139 Compare X0, 0
	140 JumpIfEqual {180}
	141 Move W8, [X29+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move [X29+40], X26
	144 Compare X25, 0
	145 JumpIfEqual {178}
	146 Move X8, [X25]
	147 Move X1, [X22+40]
	148 Move X0, X25
	149 Move X9, [X8+376]
	150 Move X2, [X8+384]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move W8, [X23+24]
	153 Add W24, W24, 1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X8, [X19+32]
	156 Move X0, X25
	157 Move X1, X21
	158 Move W2, W20
	159 Move X8, [X8+192]
	160 Move X3, [X8+88]
	161 Call 0x2E759F0, X0, X1, X2
	162 Move X1, X31
	163 Call InvokableCall.Invoke, X0
	164 Move X20, [X31+96]
	165 Move X19, [X31+104]
	166 Move X22, [X31+80]
	167 Move X21, [X31+88]
	168 Move X24, [X31+64]
	169 Move X23, [X31+72]
	170 Move X26, [X31+48]
	171 Move X25, [X31+56]
	172 Move X28, [X31+32]
	173 Move X27, [X31+40]
	174 Move X29, [X31+16]
	175 Move X30, [X31+24]
	176 Add X31, X31, 112
	177 Return 
	178 Call 0x1C17F20
	179 Call 0x1C17F28
	180 Call 0x1C17F44
	181 Move X1, X31
	182 Call 0x1C17DEC

