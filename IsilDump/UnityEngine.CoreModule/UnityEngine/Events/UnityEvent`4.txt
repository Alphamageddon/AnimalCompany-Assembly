Type: UnityEngine.Events.UnityEvent`4

Method: System.Void .ctor()

Disassembly:
	0x02731868 MOV X22, X23
	0x0273186C LDR X8, [X28 + 0xC0]
	0x02731870 LDR X8, [X8 + 0x40]

ISIL:
	001 Move X1, X31
	002 Move [X0+40], X31
	003 Call UnityEventBase..ctor, X0
	004 Return 

Method: System.Reflection.MethodInfo FindMethod_Impl(System.String name, System.Type targetObjType)

Disassembly:
	0x02731874 LDR W8, [X8 + 0x28]
	0x02731878 CMP W8, 0x0
	0x0273187C LDP X2, X8, [X29 - 0x78]
	0x02731880 CSEL X1, X8, X9, LT
	0x02731884 BL 0x3EB1AC0
	0x02731888 LDR X8, [X28 + 0xC0]
	0x0273188C MOV X1, X21
	0x02731890 LDR X0, [X8 + 0x40]
	0x02731894 BL 0x1C16E04
	0x02731898 CBZ X20, 0x2731B38
	0x0273189C MOV X28, X0
	0x027318A0 CBZ X0, 0x27318B8
	0x027318A4 LDR X8, [X20]
	0x027318A8 MOV X0, X28
	0x027318AC LDR X1, [X8 + 0x40]
	0x027318B0 BL 0x1C16E00
	0x027318B4 CBZ X0, 0x2731B40
	0x027318B8 LDR W8, [X20 + 0x18]
	0x027318BC CMP W8, 0x1
	0x027318C0 B.LS 0x2731B3C
	0x027318C4 LDUR X8, [X29 - 0x50]
	0x027318C8 STR X28, [X20 + 0x28]
	0x027318CC LDR X20, [X24 + 0x28]
	0x027318D0 SUB X9, X29, 0x40
	0x027318D4 LDR X28, [X8 + 0x20]
	0x027318D8 MOV X0, X22
	0x027318DC LDR X8, [X28 + 0xC0]
	0x027318E0 LDR X8, [X8 + 0x48]
	0x027318E4 LDR W8, [X8 + 0x28]
	0x027318E8 CMP W8, 0x0
	0x027318EC LDP X2, X8, [X29 - 0x88]
	0x027318F0 CSEL X1, X8, X9, LT
	0x027318F4 BL 0x3EB1AC0
	0x027318F8 LDR X8, [X28 + 0xC0]
	0x027318FC MOV X1, X22
	0x02731900 LDR X0, [X8 + 0x48]
	0x02731904 BL 0x1C16E04
	0x02731908 CBZ X20, 0x2731B38
	0x0273190C MOV X28, X0
	0x02731910 CBZ X0, 0x2731928
	0x02731914 LDR X8, [X20]
	0x02731918 MOV X0, X28
	0x0273191C LDR X1, [X8 + 0x40]
	0x02731920 BL 0x1C16E00
	0x02731924 CBZ X0, 0x2731B40
	0x02731928 LDR W8, [X20 + 0x18]
	0x0273192C CMP W8, 0x2
	0x02731930 B.LS 0x2731B3C
	0x02731934 LDUR X8, [X29 - 0x50]
	0x02731938 STR X28, [X20 + 0x30]
	0x0273193C LDR X20, [X24 + 0x28]
	0x02731940 SUB X9, X29, 0x48
	0x02731944 LDR X28, [X8 + 0x20]
	0x02731948 MOV X0, X19
	0x0273194C LDR X8, [X28 + 0xC0]
	0x02731950 LDR X8, [X8 + 0x50]
	0x02731954 LDR W8, [X8 + 0x28]
	0x02731958 CMP W8, 0x0
	0x0273195C LDP X2, X8, [X29 - 0x98]
	0x02731960 CSEL X1, X8, X9, LT
	0x02731964 BL 0x3EB1AC0
	0x02731968 LDR X8, [X28 + 0xC0]
	0x0273196C MOV X1, X19
	0x02731970 LDR X0, [X8 + 0x50]
	0x02731974 BL 0x1C16E04
	0x02731978 CBZ X20, 0x2731B38
	0x0273197C MOV X28, X0
	0x02731980 CBZ X0, 0x2731998
	0x02731984 LDR X8, [X20]
	0x02731988 MOV X0, X28
	0x0273198C LDR X1, [X8 + 0x40]
	0x02731990 BL 0x1C16E00
	0x02731994 CBZ X0, 0x2731B40
	0x02731998 LDR W8, [X20 + 0x18]
	0x0273199C CMP W8, 0x3
	0x027319A0 B.LS 0x2731B3C
	0x027319A4 STR X28, [X20 + 0x38]
	0x027319A8 CBZ X27, 0x2731B38
	0x027319AC LDR X8, [X27]
	0x027319B0 LDR X1, [X24 + 0x28]
	0x027319B4 MOV X0, X27
	0x027319B8 LDP X9, X2, [X8 + 0x178]
	0x027319BC BLR X9
	0x027319C0 ADRP X20, 0x19EC000
	0x027319C4 LDR X20, [X20 + 0xA80]
	0x027319C8 LDR W8, [X25 + 0x18]
	0x027319CC ADD W26, W26, 0x1
	0x027319D0 CMP W26, W8
	0x027319D4 B.LT 0x27316F8
	0x027319D8 B 0x2731B04
	0x027319DC LDUR X8, [X29 - 0x50]
	0x027319E0 LDUR X28, [X29 - 0x68]
	0x027319E4 SUB X9, X29, 0x30
	0x027319E8 LDR X20, [X8 + 0x20]
	0x027319EC MOV X0, X28
	0x027319F0 LDR X8, [X20 + 0xC0]
	0x027319F4 LDR X8, [X8 + 0x38]
	0x027319F8 LDR W8, [X8 + 0x28]
	0x027319FC CMP W8, 0x0
	0x02731A00 LDP X2, X8, [X29 - 0x60]
	0x02731A04 CSEL X1, X8, X9, LT
	0x02731A08 BL 0x3EB1AC0
	0x02731A0C LDR X8, [X20 + 0xC0]
	0x02731A10 SUB X9, X29, 0x38
	0x02731A14 MOV X0, X21
	0x02731A18 LDR X8, [X8 + 0x40]
	0x02731A1C LDR W8, [X8 + 0x28]
	0x02731A20 CMP W8, 0x0
	0x02731A24 LDP X2, X8, [X29 - 0x78]
	0x02731A28 CSEL X1, X8, X9, LT

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1CAA000
	009 Move X24, 0x19CB000
	010 Move X22, 0x19C3000
	011 Move W8, [X23+1666]
	012 Move X24, [X24+3168]
	013 Move X22, [X22+1728]
	014 Move X21, X3
	015 Move X20, X2
	016 Move X19, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x19CB000
	022 Move X0, [X0+3168]
	023 Call 0x1C17CF4
	024 Move X0, 0x19C3000
	025 Move X0, [X0+1728]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1666], W8
	029 Move X0, [X24]
	030 Move W1, 4
	031 Call 0x1C17D6C
	032 Move X9, [X21+32]
	033 Move X8, [X22]
	034 Move X22, X0
	035 Move X9, [X9+192]
	036 Move W10, [X8+224]
	037 Move X23, [X9+8]
	038 Compare W10, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X23
	043 Move X1, X31
	044 Call Type.GetTypeFromHandle, X0
	045 Compare X22, 0
	046 JumpIfEqual {128}
	047 Move X23, X0
	048 Compare X0, 0
	049 JumpIfEqual {56}
	050 Move X8, [X22]
	051 Move X0, X23
	052 Move X1, [X8+64]
	053 Call 0x1C17E00
	054 Compare X0, 0
	055 JumpIfEqual {125}
	056 Move W8, [X22+24]
	057 Compare W8, 0
	058 JumpIfEqual {124}
	059 Move [X22+32], X23
	060 Move X8, [X21+32]
	061 Move X1, X31
	062 Move X8, [X8+192]
	063 Move X0, [X8+16]
	064 Call Type.GetTypeFromHandle, X0
	065 Move X23, X0
	066 Compare X0, 0
	067 JumpIfEqual {74}
	068 Move X8, [X22]
	069 Move X0, X23
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {125}
	074 Move W8, [X22+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X22+40], X23
	077 Move X8, [X21+32]
	078 Move X1, X31
	079 Move X8, [X8+192]
	080 Move X0, [X8+24]
	081 Call Type.GetTypeFromHandle, X0
	082 Move X23, X0
	083 Compare X0, 0
	084 JumpIfEqual {91}
	085 Move X8, [X22]
	086 Move X0, X23
	087 Move X1, [X8+64]
	088 Call 0x1C17E00
	089 Compare X0, 0
	090 JumpIfEqual {125}
	091 Move W8, [X22+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X22+48], X23
	094 Move X8, [X21+32]
	095 Move X1, X31
	096 Move X8, [X8+192]
	097 Move X0, [X8+32]
	098 Call Type.GetTypeFromHandle, X0
	099 Move X21, X0
	100 Compare X0, 0
	101 JumpIfEqual {108}
	102 Move X8, [X22]
	103 Move X0, X21
	104 Move X1, [X8+64]
	105 Call 0x1C17E00
	106 Compare X0, 0
	107 JumpIfEqual {125}
	108 Move W8, [X22+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X22+56], X21
	111 Move X0, X20
	112 Move X1, X19
	113 Move X2, X22
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X22, [X31+32]
	117 Move X21, [X31+40]
	118 Move X24, [X31+16]
	119 Move X23, [X31+24]
	120 Move X3, X31
	121 Move X30, [X31+64]
	122 Call UnityEventBase.GetValidMethodInfo, X0, X1, X2
	123 Return X0
	124 Call 0x1C17F28
	125 Call 0x1C17F44
	126 Move X1, X31
	127 Call 0x1C17DEC
	128 Call 0x1C17F20

Method: UnityEngine.Events.BaseInvokableCall GetDelegate(System.Object target, System.Reflection.MethodInfo theFunction)

Disassembly:
	0x02731A2C BL 0x3EB1AC0
	0x02731A30 LDR X8, [X20 + 0xC0]
	0x02731A34 SUB X9, X29, 0x40
	0x02731A38 MOV X0, X22
	0x02731A3C LDR X8, [X8 + 0x48]
	0x02731A40 LDR W8, [X8 + 0x28]
	0x02731A44 CMP W8, 0x0
	0x02731A48 LDP X2, X8, [X29 - 0x88]
	0x02731A4C CSEL X1, X8, X9, LT
	0x02731A50 BL 0x3EB1AC0
	0x02731A54 LDR X8, [X20 + 0xC0]
	0x02731A58 SUB X9, X29, 0x48
	0x02731A5C MOV X0, X19
	0x02731A60 LDR X8, [X8 + 0x50]
	0x02731A64 LDR W8, [X8 + 0x28]
	0x02731A68 CMP W8, 0x0
	0x02731A6C LDP X2, X8, [X29 - 0x98]
	0x02731A70 CSEL X1, X8, X9, LT
	0x02731A74 BL 0x3EB1AC0
	0x02731A78 LDR X9, [X20 + 0xC0]
	0x02731A7C LDR X8, [X9 + 0x38]
	0x02731A80 LDR W10, [X8 + 0x28]
	0x02731A84 MOV X8, X28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move X20, X3
	007 Move X19, X2
	008 Move X21, X1
	009 Move X8, [X8+192]
	010 Move X0, [X8+40]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X20+32]
	019 Move X1, X21
	020 Move X2, X19
	021 Move X20, X0
	022 Move X8, [X8+192]
	023 Move X3, [X8+48]
	024 Call 0x2EA2274, X0, X1, X2
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Void Invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3)

Disassembly:
	0x02731A88 TBNZ X10, 0x1F, 0x2731A90
	0x02731A8C LDR X8, [X28]
	0x02731A90 LDR X10, [X9 + 0x40]
	0x02731A94 LDR X1, [X9 + 0x58]
	0x02731A98 LDR W11, [X10 + 0x28]
	0x02731A9C LDR X0, [X1]
	0x02731AA0 MOV X10, X21
	0x02731AA4 TBNZ X11, 0x1F, 0x2731AAC
	0x02731AA8 LDR X10, [X21]
	0x02731AAC LDR X11, [X9 + 0x48]
	0x02731AB0 ADRP X20, 0x19EC000
	0x02731AB4 LDR W12, [X11 + 0x28]
	0x02731AB8 LDR X20, [X20 + 0xA80]
	0x02731ABC MOV X11, X22
	0x02731AC0 TBNZ X12, 0x1F, 0x2731AC8
	0x02731AC4 LDR X11, [X22]
	0x02731AC8 LDR X9, [X9 + 0x50]
	0x02731ACC MOV X4, X19
	0x02731AD0 LDR W9, [X9 + 0x28]
	0x02731AD4 TBNZ X9, 0x1F, 0x2731ADC
	0x02731AD8 LDR X4, [X19]
	0x02731ADC STP X8, X10, [X29 - 0x28]
	0x02731AE0 STP X11, X4, [X29 - 0x18]
	0x02731AE4 LDR X8, [X1 + 0x10]
	0x02731AE8 SUB X3, X29, 0x28
	0x02731AEC MOV X2, X27
	0x02731AF0 BLR X8
	0x02731AF4 B 0x27319C8
	0x02731AF8 MOV X1, X31
	0x02731AFC BL 0x3C4412C
	0x02731B00 B 0x27319C8
	0x02731B04 LDUR X8, [X29 - 0xA0]
	0x02731B08 LDR X8, [X8 + 0x28]
	0x02731B0C LDUR X9, [X29 - 0x8]
	0x02731B10 CMP X8, X9
	0x02731B14 B.NE 0x2731B4C
	0x02731B18 ADD X31, X29, 0x0
	0x02731B1C LDP X20, X19, [X31 + 0x50]
	0x02731B20 LDP X22, X21, [X31 + 0x40]
	0x02731B24 LDP X24, X23, [X31 + 0x30]
	0x02731B28 LDP X26, X25, [X31 + 0x20]
	0x02731B2C LDP X28, X27, [X31 + 0x10]
	0x02731B30 LDP X29, X30, [X31], #0x60
	0x02731B34 RET
	0x02731B38 BL 0x1C16F20
	0x02731B3C BL 0x1C16F28
	0x02731B40 BL 0x1C16F44
	0x02731B44 MOV X1, X31
	0x02731B48 BL 0x1C16DEC
	0x02731B4C BL 0x3EB1B20
	0x02731B50 STP X29, X30, [X31 - 0x60]!
	0x02731B54 STP X28, X27, [X31 + 0x10]
	0x02731B58 STP X26, X25, [X31 + 0x20]
	0x02731B5C STP X24, X23, [X31 + 0x30]
	0x02731B60 STP X22, X21, [X31 + 0x40]
	0x02731B64 STP X20, X19, [X31 + 0x50]
	0x02731B68 ADD X29, X31, 0x0
	0x02731B6C SUB X31, X31, 0x70
	0x02731B70 MRS X27, 0xC000
	0x02731B74 LDR X8, [X27 + 0x28]
	0x02731B78 MOV X19, X3
	0x02731B7C MOV W25, W2
	0x02731B80 MOV X26, X1
	0x02731B84 STUR X8, [X29 - 0x8]
	0x02731B88 LDR X8, [X3 + 0x20]
	0x02731B8C MOV X20, X0
	0x02731B90 LDR X28, [X8 + 0xC0]
	0x02731B94 LDR X8, [X28 + 0x70]
	0x02731B98 LDR W21, [X8 + 0xFC]
	0x02731B9C ADD X8, X31, 0x0
	0x02731BA0 ADD X9, X21, 0xF
	0x02731BA4 AND X9, X9, 0x1FFFFFFFF
	0x02731BA8 SUB X22, X8, X9
	0x02731BAC ADD X31, X22, 0x0
	0x02731BB0 ADD X8, X31, 0x0
	0x02731BB4 SUB X23, X8, X9
	0x02731BB8 ADD X31, X23, 0x0
	0x02731BBC ADD X8, X31, 0x0
	0x02731BC0 MOVI V0.2D, 0x0
	0x02731BC4 SUB X24, X8, X9
	0x02731BC8 STP X31, X31, [X29 - 0x20]
	0x02731BCC STUR X31, [X29 - 0x10]
	0x02731BD0 STUR X31, [X29 - 0x28]
	0x02731BD4 STP V0, V0, [X29 - 0x50]
	0x02731BD8 ADD X31, X24, 0x0
	0x02731BDC MOV X0, X24
	0x02731BE0 MOV W1, W31
	0x02731BE4 MOV X2, X21
	0x02731BE8 BL 0x3EB1B10
	0x02731BEC LDR X0, [X28 + 0x10]
	0x02731BF0 LDRB W8, [X0 + 0x135]
	0x02731BF4 TBNZ X8, 0x0, 0x2731BFC
	0x02731BF8 BL 0x1C5C684
	0x02731BFC LDR W8, [X0 + 0xE0]
	0x02731C00 CBNZ W8, 0x2731C08
	0x02731C04 BL 0x1C16DFC
	0x02731C08 LDR X8, [X19 + 0x20]
	0x02731C0C LDR X8, [X8 + 0xC0]
	0x02731C10 LDR X0, [X8 + 0x10]
	0x02731C14 LDRB W9, [X0 + 0x135]
	0x02731C18 TBNZ X9, 0x0, 0x2731C28
	0x02731C1C BL 0x1C5C684
	0x02731C20 LDR X8, [X19 + 0x20]
	0x02731C24 LDR X8, [X8 + 0xC0]
	0x02731C28 LDR X9, [X0 + 0xB8]
	0x02731C2C LDR X4, [X8 + 0x18]
	0x02731C30 SUB X0, X29, 0x20
	0x02731C34 MOV X1, X26
	0x02731C38 LDR X3, [X9]
	0x02731C3C LDR X8, [X4]
	0x02731C40 MOV W2, W25
	0x02731C44 BLR X8
	0x02731C48 LDR X8, [X20]
	0x02731C4C MOV X0, X20
	0x02731C50 LDP X9, X1, [X8 + 0x1C8]
	0x02731C54 BLR X9
	0x02731C58 STUR X0, [X29 - 0x28]
	0x02731C5C LDR X8, [X19 + 0x20]
	0x02731C60 SUB X0, X29, 0x20
	0x02731C64 LDR X8, [X8 + 0xC0]
	0x02731C68 LDR X1, [X8 + 0x38]
	0x02731C6C LDR X8, [X1]
	0x02731C70 BLR X8
	0x02731C74 LDR X8, [X19 + 0x20]
	0x02731C78 MOV W1, W0
	0x02731C7C SUB X0, X29, 0x28
	0x02731C80 LDR X8, [X8 + 0xC0]
	0x02731C84 LDR X2, [X8 + 0x40]
	0x02731C88 LDR X8, [X2]
	0x02731C8C BLR X8
	0x02731C90 LDR X8, [X19 + 0x20]
	0x02731C94 SUB X0, X29, 0x20
	0x02731C98 LDR X8, [X8 + 0xC0]
	0x02731C9C LDR X1, [X8 + 0x50]
	0x02731CA0 SUB X8, X29, 0x70
	0x02731CA4 LDR X9, [X1]
	0x02731CA8 BLR X9
	0x02731CAC LDP V0, V1, [X29 - 0x70]
	0x02731CB0 MOV W25, W31
	0x02731CB4 STP V0, V1, [X29 - 0x50]
	0x02731CB8 LDR X8, [X19 + 0x20]
	0x02731CBC LDR X8, [X8 + 0xC0]
	0x02731CC0 LDR X1, [X8 + 0x78]
	0x02731CC4 LDR X8, [X1]
	0x02731CC8 SUB X0, X29, 0x50
	0x02731CCC BLR X8
	0x02731CD0 TBZ X0, 0x0, 0x2731D84
	0x02731CD4 LDR X8, [X19 + 0x20]
	0x02731CD8 LDR X8, [X8 + 0xC0]
	0x02731CDC LDR X1, [X8 + 0x60]
	0x02731CE0 LDR X0, [X1]
	0x02731CE4 STUR X22, [X29 - 0x70]
	0x02731CE8 LDR X8, [X1 + 0x10]
	0x02731CEC SUB X2, X29, 0x50
	0x02731CF0 SUB X3, X29, 0x70
	0x02731CF4 MOV X4, X22
	0x02731CF8 BLR X8
	0x02731CFC MOV X0, X24
	0x02731D00 MOV X1, X22
	0x02731D04 MOV X2, X21
	0x02731D08 BL 0x3EB1AC0
	0x02731D0C LDUR X26, [X29 - 0x28]
	0x02731D10 MOV X0, X23
	0x02731D14 MOV X1, X24
	0x02731D18 MOV X2, X21
	0x02731D1C BL 0x3EB1AC0
	0x02731D20 CBZ X26, 0x2731DE8
	0x02731D24 LDR W8, [X26 + 0x18]
	0x02731D28 CMP W25, W8
	0x02731D2C B.CS 0x2731DE4
	0x02731D30 LDR X8, [X26]
	0x02731D34 SXTW X9, W25
	0x02731D38 MOV X1, X23
	0x02731D3C MOV X2, X21
	0x02731D40 LDR W8, [X8 + 0x104]
	0x02731D44 NOP
	0x02731D48 MADD X8, X8, X9, X26
	0x02731D4C ADD X0, X8, 0x20
	0x02731D50 BL 0x3EB1AC0
	0x02731D54 LDR X8, [X19 + 0x20]
	0x02731D58 LDR X8, [X8 + 0xC0]
	0x02731D5C LDR X0, [X8 + 0x70]
	0x02731D60 LDRB W8, [X0 + 0x135]
	0x02731D64 TBNZ X8, 0x0, 0x2731D6C
	0x02731D68 BL 0x1C5C684
	0x02731D6C LDR W8, [X26 + 0x18]
	0x02731D70 ADD W25, W25, 0x1
	0x02731D74 SUB W9, W25, 0x1
	0x02731D78 CMP W9, W8
	0x02731D7C B.CC 0x2731CB8
	0x02731D80 BL 0x1C16F28
	0x02731D84 MOV X22, X31
	0x02731D88 LDR X8, [X19 + 0x20]
	0x02731D8C SUB X0, X29, 0x50
	0x02731D90 LDR X8, [X8 + 0xC0]
	0x02731D94 LDR X1, [X8 + 0x80]
	0x02731D98 BL 0x2BD7940
	0x02731D9C CBNZ X22, 0x2731DEC
	0x02731DA0 LDR X8, [X20]
	0x02731DA4 LDUR X1, [X29 - 0x28]
	0x02731DA8 MOV X0, X20
	0x02731DAC LDP X9, X2, [X8 + 0x1D8]
	0x02731DB0 BLR X9
	0x02731DB4 LDR X8, [X27 + 0x28]
	0x02731DB8 LDUR X9, [X29 - 0x8]
	0x02731DBC CMP X8, X9
	0x02731DC0 B.NE 0x2731DF4
	0x02731DC4 ADD X31, X29, 0x0
	0x02731DC8 LDP X20, X19, [X31 + 0x50]
	0x02731DCC LDP X22, X21, [X31 + 0x40]
	0x02731DD0 LDP X24, X23, [X31 + 0x30]
	0x02731DD4 LDP X26, X25, [X31 + 0x20]
	0x02731DD8 LDP X28, X27, [X31 + 0x10]
	0x02731DDC LDP X29, X30, [X31], #0x60
	0x02731DE0 RET
	0x02731DE4 BL 0x1C16F28
	0x02731DE8 BL 0x1C16F20
	0x02731DEC MOV X0, X22
	0x02731DF0 BL 0x1C16F18
	0x02731DF4 BL 0x3EB1B20

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move [X31+32], X5
	015 Move [X31+40], X6
	016 Move [X31+24], X2
	017 NotImplemented "Instruction MRS not yet implemented."
	018 Move X8, [X21+40]
	019 Move X20, 0x1CAA000
	020 Move X19, X7
	021 Move X22, X4
	022 Move [X31+88], X8
	023 Move W8, [X20+1667]
	024 Move X23, X3
	025 Move X25, X1
	026 Move X26, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {45}
	031 Move X0, 0x19ED000
	032 Move X0, [X0+2672]
	033 Call 0x1C17CF4
	034 Move X0, 0x19ED000
	035 Move X0, [X0+2680]
	036 Call 0x1C17CF4
	037 Move X0, 0x19ED000
	038 Move X0, [X0+2688]
	039 Call 0x1C17CF4
	040 Move X0, 0x19C3000
	041 Move X0, [X0+2512]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+1667], W8
	045 Compare X26, 0
	046 JumpIfEqual {244}
	047 Move X0, X26
	048 Move X1, X31
	049 Move [X31+8], X21
	050 Call UnityEventBase.PrepareInvoke, X0
	051 Compare X0, 0
	052 JumpIfEqual {244}
	053 Move W8, [X0+24]
	054 Move X27, X0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, 0x19ED000
	057 Move X20, [X20+2688]
	058 Move X8, [X31+24]
	059 Move W28, W31
	060 And X8, X8, 0
	061 Move [X31+16], X8
	062 Move X2, [X20]
	063 Move X0, X27
	064 Move W1, W28
	065 Call List`1<Object>.get_Item, X0, X1
	066 Move X8, [X19+32]
	067 Move X29, X0
	068 Move X8, [X8+192]
	069 Move X8, [X8+40]
	070 Move W9, [X8+309]
	071 Move TEMP, X9
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {78}
	075 Move X0, X8
	076 Call 0x1C5D684
	077 Move X8, X0
	078 Compare X29, 0
	079 JumpIfEqual {88}
	080 Move X9, [X29]
	081 Move W10, [X8+304]
	082 Move W11, [X9+304]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X9, [X9+200]
	085 Add X9, X9, X10
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X2, [X20]
	089 Move X0, X27
	090 Move W1, W28
	091 Call List`1<Object>.get_Item, X0, X1
	092 Compare X0, 0
	093 JumpIfEqual {105}
	094 Move X8, 0x19ED000
	095 Move X9, [X0]
	096 Move X8, [X8+2672]
	097 Move W11, [X9+304]
	098 Move X8, [X8]
	099 Move W10, [X8+304]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X9, [X9+200]
	102 Add X9, X9, X10
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X2, [X20]
	106 Move X0, X27
	107 Move W1, W28
	108 Call List`1<Object>.get_Item, X0, X1
	109 Move X24, [X26+40]
	110 Move X29, X0
	111 Compare X24, 0
	112 JumpIfNotEqual {120}
	113 Move X8, 0x19C3000
	114 Move X8, [X8+2512]
	115 Move W1, 4
	116 Move X0, [X8]
	117 Call 0x1C17D6C
	118 Move X24, X0
	119 Move [X26+40], X0
	120 Compare X24, 0
	121 JumpIfEqual {244}
	122 Compare X25, 0
	123 JumpIfEqual {130}
	124 Move X8, [X24]
	125 Move X0, X25
	126 Move X1, [X8+64]
	127 Call 0x1C17E00
	128 Compare X0, 0
	129 JumpIfEqual {246}
	130 Move W8, [X24+24]
	131 Compare W8, 0
	132 JumpIfEqual {245}
	133 Move X8, [X31+24]
	134 Move [X24+32], X25
	135 Move X21, [X26+40]
	136 Add X1, X31, 64
	137 Move [X31+64], W8
	138 Move X8, [X19+32]
	139 Move X8, [X8+192]
	140 Move X0, [X8+64]
	141 Call 0x1C17E04
	142 Compare X21, 0
	143 JumpIfEqual {244}
	144 Move X24, X0
	145 Compare X0, 0
	146 JumpIfEqual {153}
	147 Move X8, [X21]
	148 Move X0, X24
	149 Move X1, [X8+64]
	150 Call 0x1C17E00
	151 Compare X0, 0
	152 JumpIfEqual {246}
	153 Move W8, [X21+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move [X21+40], X24
	156 Move X21, [X26+40]
	157 Move [X31+72], X23
	158 Move [X31+80], X22
	159 Move X8, [X19+32]
	160 Add X1, X31, 72
	161 Move X8, [X8+192]
	162 Move X0, [X8+72]
	163 Call 0x1C17E04
	164 Compare X21, 0
	165 JumpIfEqual {244}
	166 Move X24, X0
	167 Compare X0, 0
	168 JumpIfEqual {175}
	169 Move X8, [X21]
	170 Move X0, X24
	171 Move X1, [X8+64]
	172 Call 0x1C17E00
	173 Compare X0, 0
	174 JumpIfEqual {246}
	175 Move W8, [X21+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X9, [X31+32]
	178 Move X8, [X31+40]
	179 Move [X21+48], X24
	180 Move X21, [X26+40]
	181 Add X1, X31, 48
	182 Move [X31+48], X9
	183 Move [X31+56], X8
	184 Move X8, [X19+32]
	185 Move X8, [X8+192]
	186 Move X0, [X8+80]
	187 Call 0x1C17E04
	188 Compare X21, 0
	189 JumpIfEqual {244}
	190 Move X24, X0
	191 Compare X0, 0
	192 JumpIfEqual {199}
	193 Move X8, [X21]
	194 Move X0, X24
	195 Move X1, [X8+64]
	196 Call 0x1C17E00
	197 Compare X0, 0
	198 JumpIfEqual {246}
	199 Move W8, [X21+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move [X21+56], X24
	202 Compare X29, 0
	203 JumpIfEqual {244}
	204 Move X8, [X29]
	205 Move X1, [X26+40]
	206 Move X0, X29
	207 Move X9, [X8+376]
	208 Move X2, [X8+384]
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Move W8, [X27+24]
	211 Add W28, W28, 1
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X8, [X19+32]
	214 Move X2, [X31+16]
	215 Move X5, [X31+32]
	216 Move X6, [X31+40]
	217 Move X0, X29
	218 Move X8, [X8+192]
	219 Move X1, X25
	220 Move X3, X23
	221 Move X4, X22
	222 Move X7, [X8+88]
	223 Call 0x2EA2634, X0, X1, X2, X3, X4
	224 Move X1, X31
	225 Call InvokableCall.Invoke, X0
	226 Move X8, [X31+8]
	227 Move X8, [X8+40]
	228 Move X9, [X31+88]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X20, [X31+176]
	231 Move X19, [X31+184]
	232 Move X22, [X31+160]
	233 Move X21, [X31+168]
	234 Move X24, [X31+144]
	235 Move X23, [X31+152]
	236 Move X26, [X31+128]
	237 Move X25, [X31+136]
	238 Move X28, [X31+112]
	239 Move X27, [X31+120]
	240 Move X29, [X31+96]
	241 Move X30, [X31+104]
	242 Add X31, X31, 192
	243 Return 
	244 Call 0x1C17F20
	245 Call 0x1C17F28
	246 Call 0x1C17F44
	247 Move X1, X31
	248 Call 0x1C17DEC
	249 Call 0x3EB2B20

