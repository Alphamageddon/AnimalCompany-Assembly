Type: UnityEngine.Gradient

Method: System.IntPtr Init()

Disassembly:
	0x03C27828 MOV V2.16B, V10.16B
	0x03C2782C MOV V3.16B, V11.16B
	0x03C27830 MOV V4.16B, V12.16B
	0x03C27834 MOV V5.16B, V13.16B
	0x03C27838 BLR X8
	0x03C2783C LDP V1, V0, [X31 + 0x60]
	0x03C27840 LDP V3, V2, [X31 + 0x40]
	0x03C27844 LDR X30, [X31 + 0xB0]
	0x03C27848 LDP D9, D8, [X31 + 0xA0]
	0x03C2784C STP V1, V0, [X19 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7BE000
	004 Move X0, [X19+3992]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51609600
	008 Add X0, X0, 3983
	009 Call 0x1C17CB8
	010 Move [X19+3992], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void Cleanup()

Disassembly:
	0x03C27850 STP V3, V2, [X19]
	0x03C27854 LDP X20, X19, [X31 + 0xC0]
	0x03C27858 LDP D11, D10, [X31 + 0x90]
	0x03C2785C LDP D13, D12, [X31 + 0x80]
	0x03C27860 STP V1, V0, [X31 + 0x20]
	0x03C27864 STP V3, V2, [X31]
	0x03C27868 ADD X31, X31, 0xD0
	0x03C2786C RET
	0x03C27870 LDP V17, V16, [X31]
	0x03C27874 STP S0, S1, [X0]
	0x03C27878 STP S4, S5, [X0 + 0x10]
	0x03C2787C STP S2, S3, [X0 + 0x8]
	0x03C27880 STP V17, V16, [X0 + 0x20]
	0x03C27884 STP S6, S7, [X0 + 0x18]
	0x03C27888 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7BE000
	005 Move X1, [X20+4000]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51523584
	010 Add X0, X0, 147
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+4000], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean Internal_Equals(System.IntPtr other)

Disassembly:
	0x03C2788C ADD W1, W1, W2, 0x2, LSL
	0x03C27890 B 0x3C27894
	0x03C27894 STP X30, X19, [X31 - 0x10]!
	0x03C27898 CMP W1, 0xF
	0x03C2789C B.HI 0x3C2793C
	0x03C278A0 ADRP X9, 0xFFFFFFFFFCF70000
	0x03C278A4 MOV W8, W1
	0x03C278A8 ADD X9, X9, 0xDE1
	0x03C278AC ADR X10, 0x10
	0x03C278B0 LDRB W11, [X9, X8, LSL]
	0x03C278B4 ADD X10, X10, X11, 0x2, LSL
	0x03C278B8 BR X10
	0x03C278BC ADD X0, X0, 0x4
	0x03C278C0 B 0x3C27930
	0x03C278C4 ADD X0, X0, 0x8
	0x03C278C8 B 0x3C27930
	0x03C278CC ADD X0, X0, 0xC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7BE000
	006 Move X2, [X21+4008]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51601408
	012 Add X0, X0, 4068
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4008], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void .ctor()

Disassembly:
	0x03C278D0 B 0x3C27930
	0x03C278D4 ADD X0, X0, 0x10
	0x03C278D8 B 0x3C27930
	0x03C278DC ADD X0, X0, 0x14
	0x03C278E0 B 0x3C27930
	0x03C278E4 ADD X0, X0, 0x18
	0x03C278E8 B 0x3C27930
	0x03C278EC ADD X0, X0, 0x1C
	0x03C278F0 B 0x3C27930
	0x03C278F4 ADD X0, X0, 0x20
	0x03C278F8 B 0x3C27930
	0x03C278FC ADD X0, X0, 0x24
	0x03C27900 B 0x3C27930
	0x03C27904 ADD X0, X0, 0x28
	0x03C27908 B 0x3C27930
	0x03C2790C ADD X0, X0, 0x2C
	0x03C27910 B 0x3C27930
	0x03C27914 ADD X0, X0, 0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call Object..ctor, X0
	007 Move X20, 0x7BE000
	008 Move X8, [X20+3992]
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51609600
	012 Add X0, X0, 3983
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X20+3992], X0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move [X19+16], X0
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 

Method: System.Void Finalize()

Disassembly:
	0x03C27918 B 0x3C27930
	0x03C2791C ADD X0, X0, 0x34
	0x03C27920 B 0x3C27930
	0x03C27924 ADD X0, X0, 0x38
	0x03C27928 B 0x3C27930
	0x03C2792C ADD X0, X0, 0x3C
	0x03C27930 LDR V0, [X0]
	0x03C27934 LDP X30, X19, [X31], #0x10
	0x03C27938 RET
	0x03C2793C ADRP X0, 0x4D6000
	0x03C27940 LDR X0, [X0 + 0xF78]
	0x03C27944 BL 0x1C16D08
	0x03C27948 BL 0x1C16F10
	0x03C2794C MOV X19, X0
	0x03C27950 ADRP X0, 0x538000
	0x03C27954 LDR X0, [X0 + 0x260]
	0x03C27958 BL 0x1C16D08
	0x03C2795C MOV X1, X0
	0x03C27960 MOV X0, X19
	0x03C27964 MOV X2, X31
	0x03C27968 BL 0x3379B6C
	0x03C2796C ADRP X0, 0x538000
	0x03C27970 LDR X0, [X0 + 0x268]
	0x03C27974 BL 0x1C16D08
	0x03C27978 MOV X1, X0
	0x03C2797C MOV X0, X19
	0x03C27980 BL 0x1C16DEC
	0x03C27984 ADD W1, W1, W2, 0x2, LSL
	0x03C27988 B 0x3C2798C
	0x03C2798C STP X30, X19, [X31 - 0x10]!
	0x03C27990 CMP W1, 0xF
	0x03C27994 B.HI 0x3C27A34
	0x03C27998 ADRP X9, 0xFFFFFFFFFCF70000
	0x03C2799C MOV W8, W1
	0x03C279A0 ADD X9, X9, 0xDE1
	0x03C279A4 ADR X10, 0x10
	0x03C279A8 LDRB W11, [X9, X8, LSL]
	0x03C279AC ADD X10, X10, X11, 0x2, LSL
	0x03C279B0 BR X10
	0x03C279B4 ADD X0, X0, 0x4
	0x03C279B8 B 0x3C27A28
	0x03C279BC ADD X0, X0, 0x8
	0x03C279C0 B 0x3C27A28
	0x03C279C4 ADD X0, X0, 0xC
	0x03C279C8 B 0x3C27A28
	0x03C279CC ADD X0, X0, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7BE000
	006 Move X8, [X20+4000]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51523584
	011 Add X0, X0, 147
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X20+4000], X0
	015 Move X0, X19
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X0, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X1, X31
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call Object.Finalize, X0
	024 Return 
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X21, X0
	027 Move X0, X21
	028 Call 0x3EB2AD0
	029 Move X20, [X0]
	030 Call 0x3EB2AE0
	031 Move X0, X19
	032 Move X1, X31
	033 Call Object.Finalize, X0
	034 Compare X20, 0
	035 JumpIfNotEqual {42}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Move X20, X31
	042 Move X0, X20
	043 Call 0x1C17F18
	044 Move X21, X0
	045 Move X0, X19
	046 Move X1, X31
	047 Call Object.Finalize, X0
	048 Compare X20, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X21
	051 Call 0x1D2D690
	052 Move X0, X20
	053 Call 0x1C17F18
	054 Call 0x1991590

Method: UnityEngine.Color Evaluate(System.Single time)

Disassembly:
	0x03C279D0 B 0x3C27A28
	0x03C279D4 ADD X0, X0, 0x14
	0x03C279D8 B 0x3C27A28
	0x03C279DC ADD X0, X0, 0x18
	0x03C279E0 B 0x3C27A28
	0x03C279E4 ADD X0, X0, 0x1C
	0x03C279E8 B 0x3C27A28
	0x03C279EC ADD X0, X0, 0x20
	0x03C279F0 B 0x3C27A28
	0x03C279F4 ADD X0, X0, 0x24
	0x03C279F8 B 0x3C27A28
	0x03C279FC ADD X0, X0, 0x28
	0x03C27A00 B 0x3C27A28
	0x03C27A04 ADD X0, X0, 0x2C
	0x03C27A08 B 0x3C27A28
	0x03C27A0C ADD X0, X0, 0x30
	0x03C27A10 B 0x3C27A28
	0x03C27A14 ADD X0, X0, 0x34
	0x03C27A18 B 0x3C27A28
	0x03C27A1C ADD X0, X0, 0x38
	0x03C27A20 B 0x3C27A28
	0x03C27A24 ADD X0, X0, 0x3C
	0x03C27A28 STR S0, [X0]
	0x03C27A2C LDP X30, X19, [X31], #0x10
	0x03C27A30 RET
	0x03C27A34 ADRP X0, 0x4D6000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7BE000
	007 Move X8, [X20+4048]
	008 Move V8, V0
	009 Move X19, X0
	010 Move [X31], X31
	011 Move [X31+8], X31
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51355648
	015 Add X0, X0, 2010
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+4048], X0
	019 Add X1, X31, 0
	020 Move X0, X19
	021 Move V0, V8
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move S0, [X31]
	024 Move S1, [X31+4]
	025 Move S2, [X31+8]
	026 Move S3, [X31+12]
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+24]
	030 Move V8, [X31+16]
	031 Add X31, X31, 48
	032 Return X0

Method: System.Void set_colorKeys(UnityEngine.GradientColorKey[] value)

Disassembly:
	0x03C27A8C STP X24, X23, [X31 + 0x50]
	0x03C27A90 STP X22, X21, [X31 + 0x60]
	0x03C27A94 STP X20, X19, [X31 + 0x70]
	0x03C27A98 LDR V0, [X0]
	0x03C27A9C MOV X25, X0
	0x03C27AA0 ADD X8, X31, 0x10
	0x03C27AA4 ADD X0, X31, 0x10
	0x03C27AA8 MOV X1, X31
	0x03C27AAC ORR X23, X8, 0x7
	0x03C27AB0 ORR X21, X8, 0xF
	0x03C27AB4 ORR X19, X8, 0xF
	0x03C27AB8 STR V0, [X31 + 0x1]
	0x03C27ABC BL 0x338FE0C
	0x03C27AC0 STR W0, [X31 + 0xC]
	0x03C27AC4 MOV X0, X23
	0x03C27AC8 MOV X1, X31
	0x03C27ACC BL 0x338FE0C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7BE000
	006 Move X2, [X21+4016]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51609600
	012 Add X0, X0, 4012
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4016], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_alphaKeys(UnityEngine.GradientAlphaKey[] value)

Disassembly:
	0x03C27AD0 STR W0, [X31 + 0x8]
	0x03C27AD4 MOV X0, X21
	0x03C27AD8 MOV X1, X31
	0x03C27ADC BL 0x338FE0C
	0x03C27AE0 MOV W24, W0
	0x03C27AE4 MOV X0, X19
	0x03C27AE8 MOV X1, X31
	0x03C27AEC BL 0x338FE0C
	0x03C27AF0 LDR V0, [X25 + 0x1]
	0x03C27AF4 MOV W26, W0
	0x03C27AF8 ADD X0, X31, 0x10
	0x03C27AFC MOV X1, X31
	0x03C27B00 STR V0, [X31 + 0x1]
	0x03C27B04 BL 0x338FE0C
	0x03C27B08 MOV W27, W0
	0x03C27B0C MOV X0, X23
	0x03C27B10 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7BE000
	006 Move X2, [X21+4024]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51580928
	012 Add X0, X0, 842
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4024], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetKeys(UnityEngine.GradientColorKey[] colorKeys, UnityEngine.GradientAlphaKey[] alphaKeys)

Disassembly:
	0x03C27B14 BL 0x338FE0C
	0x03C27B18 MOV W28, W0
	0x03C27B1C MOV X0, X21
	0x03C27B20 MOV X1, X31
	0x03C27B24 BL 0x338FE0C
	0x03C27B28 MOV W29, W0
	0x03C27B2C MOV X0, X19
	0x03C27B30 MOV X1, X31
	0x03C27B34 BL 0x338FE0C
	0x03C27B38 LDR V0, [X25 + 0x2]
	0x03C27B3C EOR W8, W27, W28, 0x2
	0x03C27B40 EOR W8, W8, W29, 0x2
	0x03C27B44 EOR W22, W8, W0, 0x1
	0x03C27B48 ADD X0, X31, 0x10
	0x03C27B4C MOV X1, X31
	0x03C27B50 STR V0, [X31 + 0x1]
	0x03C27B54 BL 0x338FE0C
	0x03C27B58 MOV W27, W0
	0x03C27B5C MOV X0, X23
	0x03C27B60 MOV X1, X31
	0x03C27B64 BL 0x338FE0C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7BE000
	007 Move X3, [X22+4032]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51437568
	014 Add X0, X0, 2348
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+4032], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x03C27B68 MOV W28, W0
	0x03C27B6C MOV X0, X21
	0x03C27B70 MOV X1, X31
	0x03C27B74 BL 0x338FE0C
	0x03C27B78 MOV W29, W0
	0x03C27B7C MOV X0, X19
	0x03C27B80 MOV X1, X31
	0x03C27B84 BL 0x338FE0C
	0x03C27B88 LDR V0, [X25 + 0x3]
	0x03C27B8C MOV W20, W0
	0x03C27B90 ADD X0, X31, 0x10
	0x03C27B94 MOV X1, X31
	0x03C27B98 EOR W27, W27, W28, 0x2
	0x03C27B9C STR V0, [X31 + 0x1]
	0x03C27BA0 BL 0x338FE0C
	0x03C27BA4 MOV W25, W0
	0x03C27BA8 MOV X0, X23
	0x03C27BAC MOV X1, X31
	0x03C27BB0 BL 0x338FE0C
	0x03C27BB4 MOV W23, W0
	0x03C27BB8 MOV X0, X21
	0x03C27BBC MOV X1, X31
	0x03C27BC0 BL 0x338FE0C
	0x03C27BC4 MOV W21, W0
	0x03C27BC8 MOV X0, X19
	0x03C27BCC MOV X1, X31
	0x03C27BD0 BL 0x338FE0C
	0x03C27BD4 LDP W10, W9, [X31 + 0x8]
	0x03C27BD8 EOR W8, W25, W23, 0x2
	0x03C27BDC EOR W9, W9, W10, 0x2
	0x03C27BE0 EOR W9, W9, W24, 0x2
	0x03C27BE4 EOR W9, W9, W26, 0x1
	0x03C27BE8 EOR W9, W9, W22, 0x2
	0x03C27BEC EOR W9, W9, W29, 0x4
	0x03C27BF0 EOR W9, W9, W27, 0x2
	0x03C27BF4 EOR W9, W9, W20, 0x3
	0x03C27BF8 EOR W9, W9, W21, 0x3
	0x03C27BFC LDP X20, X19, [X31 + 0x70]
	0x03C27C00 LDP X22, X21, [X31 + 0x60]
	0x03C27C04 LDP X24, X23, [X31 + 0x50]
	0x03C27C08 LDP X26, X25, [X31 + 0x40]
	0x03C27C0C LDP X28, X27, [X31 + 0x30]
	0x03C27C10 LDP X29, X30, [X31 + 0x20]
	0x03C27C14 EOR W8, W9, W8, 0x1
	0x03C27C18 EOR W0, W8, W0, 0x2
	0x03C27C1C ADD X31, X31, 0x80
	0x03C27C20 RET
	0x03C27C24 STP X30, X19, [X31 - 0x10]!
	0x03C27C28 CMP W1, 0x3
	0x03C27C2C B.HI 0x3C27CB0
	0x03C27C30 ADRP X9, 0xFFFFFFFFFCF70000
	0x03C27C34 MOV W8, W1
	0x03C27C38 ADD X9, X9, 0xDF1
	0x03C27C3C ADR X10, 0x10
	0x03C27C40 LDRB W11, [X9, X8, LSL]
	0x03C27C44 ADD X10, X10, X11, 0x2, LSL
	0x03C27C48 BR X10
	0x03C27C4C ADD X8, X0, 0x4
	0x03C27C50 ADD X9, X0, 0x8
	0x03C27C54 ADD X10, X0, 0xC
	0x03C27C58 B 0x3C27C98
	0x03C27C5C ADD X11, X0, 0x20
	0x03C27C60 ADD X8, X0, 0x24
	0x03C27C64 ADD X9, X0, 0x28
	0x03C27C68 ADD X10, X0, 0x2C
	0x03C27C6C B 0x3C27C94
	0x03C27C70 ADD X11, X0, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7BE000
	007 Move W8, [X21+4040]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x52C000
	015 Move X0, [X0+3728]
	016 Call 0x1C17CF4
	017 Move X0, 0x4CD000
	018 Move X0, [X0+1728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+4040], W8
	022 Compare X19, 0
	023 JumpIfEqual {49}
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Move X1, X31
	027 Call "il2cpp_vm_object_is_inst", X0
	028 Move X21, X0
	029 Move X0, X20
	030 Move X1, X31
	031 Call "il2cpp_vm_object_is_inst", X0
	032 Move X8, 0x4CD000
	033 Move X8, [X8+1728]
	034 Move X22, X0
	035 Move X8, [X8]
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X22
	043 Move X2, X31
	044 Call Type.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {57}
	049 Move W0, W31
	050 Move W0, 1
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return X0
	057 Move X9, 0x52C000
	058 Move X9, [X9+3728]
	059 Move X8, [X19]
	060 Move X1, [X9]
	061 Move W10, [X8+304]
	062 Move W9, [X1+304]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X8+200]
	065 Add X8, X8, X9
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, X20
	069 Move X1, X19
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Move X0, X19
	076 Call 0x1C181E0

Method: System.Boolean Equals(UnityEngine.Gradient other)

Disassembly:
	0x03C27C74 ADD X8, X0, 0x14
	0x03C27C78 ADD X9, X0, 0x18
	0x03C27C7C ADD X10, X0, 0x1C
	0x03C27C80 B 0x3C27C94
	0x03C27C84 ADD X11, X0, 0x30
	0x03C27C88 ADD X8, X0, 0x34
	0x03C27C8C ADD X9, X0, 0x38
	0x03C27C90 ADD X10, X0, 0x3C
	0x03C27C94 MOV X0, X11
	0x03C27C98 LDR V3, [X10]
	0x03C27C9C LDR V2, [X9]
	0x03C27CA0 LDR V1, [X8]
	0x03C27CA4 LDR V0, [X0]
	0x03C27CA8 LDP X30, X19, [X31], #0x10
	0x03C27CAC RET
	0x03C27CB0 ADRP X0, 0x4D6000
	0x03C27CB4 LDR X0, [X0 + 0xF78]
	0x03C27CB8 BL 0x1C16D08
	0x03C27CBC BL 0x1C16F10
	0x03C27CC0 MOV X19, X0
	0x03C27CC4 ADRP X0, 0x538000
	0x03C27CC8 LDR X0, [X0 + 0x278]
	0x03C27CCC BL 0x1C16D08
	0x03C27CD0 MOV X1, X0
	0x03C27CD4 MOV X0, X19
	0x03C27CD8 MOV X2, X31
	0x03C27CDC BL 0x3379B6C
	0x03C27CE0 ADRP X0, 0x538000
	0x03C27CE4 LDR X0, [X0 + 0x280]
	0x03C27CE8 BL 0x1C16D08
	0x03C27CEC MOV X1, X0
	0x03C27CF0 MOV X0, X19
	0x03C27CF4 BL 0x1C16DEC
	0x03C27CF8 STP X30, X21, [X31 - 0x20]!
	0x03C27CFC STP X20, X19, [X31 + 0x10]
	0x03C27D00 ADRP X21, 0x7BD000
	0x03C27D04 LDRB W8, [X21 + 0xFD8]
	0x03C27D08 MOV X20, X1
	0x03C27D0C MOV X19, X0
	0x03C27D10 TBNZ X8, 0x0, 0x3C27D28
	0x03C27D14 ADRP X0, 0x4D0000
	0x03C27D18 LDR X0, [X0 + 0x270]
	0x03C27D1C BL 0x1C16CF4
	0x03C27D20 MOVZ W8, 0x1
	0x03C27D24 STRB W8, [X21 + 0xFD8]
	0x03C27D28 CBZ X20, 0x3C27D44
	0x03C27D2C ADRP X8, 0x4D0000
	0x03C27D30 LDR X8, [X8 + 0x270]
	0x03C27D34 LDR X9, [X20]
	0x03C27D38 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7BE000
	007 Move W8, [X21+4041]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4F6000
	015 Move X0, [X0+3872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+4041], W8
	019 Compare X20, 0
	020 JumpIfEqual {39}
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X9, 0x4F6000
	023 Move X8, [X20+16]
	024 Move X9, [X9+3872]
	025 Add X1, X31, 8
	026 Add X21, X19, 16
	027 Move [X31+8], X8
	028 Move X0, [X9]
	029 Call 0x1C17E04
	030 Move X1, X0
	031 Move X0, X21
	032 Move X2, X31
	033 Call IntPtr.Equals, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {40}
	038 Move W0, 1
	039 Move W0, W31
	040 Move X21, 0x7BE000
	041 Move X8, [X21+4008]
	042 Move X20, [X20+16]
	043 Compare X8, 0
	044 JumpIfNotEqual {50}
	045 Move X0, -51601408
	046 Add X0, X0, 4068
	047 Call 0x1C17CB8
	048 Move X8, X0
	049 Move [X21+4008], X0
	050 Move X0, X19
	051 Move X1, X20
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 And W0, W0, 1
	058 Add X31, X31, 48
	059 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C27D3C CMP X9, X8
	0x03C27D40 B.EQ 0x3C27D54
	0x03C27D44 MOV W0, W31

ISIL:
	001 Add X0, X0, 16
	002 Move X1, X31
	003 Call IntPtr.GetHashCode, X0
	004 Return X0

Method: System.Void Evaluate_Injected(System.Single time, out UnityEngine.Color ret)

Disassembly:
	0x03C27A38 LDR X0, [X0 + 0xF78]
	0x03C27A3C BL 0x1C16D08
	0x03C27A40 BL 0x1C16F10
	0x03C27A44 MOV X19, X0
	0x03C27A48 ADRP X0, 0x538000
	0x03C27A4C LDR X0, [X0 + 0x260]
	0x03C27A50 BL 0x1C16D08
	0x03C27A54 MOV X1, X0
	0x03C27A58 MOV X0, X19
	0x03C27A5C MOV X2, X31
	0x03C27A60 BL 0x3379B6C
	0x03C27A64 ADRP X0, 0x538000
	0x03C27A68 LDR X0, [X0 + 0x270]
	0x03C27A6C BL 0x1C16D08
	0x03C27A70 MOV X1, X0
	0x03C27A74 MOV X0, X19
	0x03C27A78 BL 0x1C16DEC
	0x03C27A7C SUB X31, X31, 0x80
	0x03C27A80 STP X29, X30, [X31 + 0x20]
	0x03C27A84 STP X28, X27, [X31 + 0x30]
	0x03C27A88 STP X26, X25, [X31 + 0x40]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7BE000
	007 Move X2, [X21+4048]
	008 Move X19, X1
	009 Move V8, V0
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51355648
	014 Add X0, X0, 2010
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+4048], X0
	018 Move X0, X20
	019 Move X1, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

