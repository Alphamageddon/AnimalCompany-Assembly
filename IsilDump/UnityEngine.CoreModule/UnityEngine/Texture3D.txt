Type: UnityEngine.Texture3D

Method: System.Boolean get_isReadable()

Disassembly:
	0x03C1E2F8 LDR X8, [X22]
	0x03C1E2FC MOV X0, X19
	0x03C1E300 LDR X1, [X8 + 0x40]
	0x03C1E304 BL 0x1C16E00
	0x03C1E308 CBZ X0, 0x3C1E348
	0x03C1E30C LDR W8, [X22 + 0x18]
	0x03C1E310 CMP W8, 0x1
	0x03C1E314 B.LS 0x3C1E340
	0x03C1E318 STR X19, [X22 + 0x28]
	0x03C1E31C ADRP X8, 0x540000
	0x03C1E320 LDR X8, [X8 + 0xCA8]
	0x03C1E324 MOV X1, X22
	0x03C1E328 LDP X20, X19, [X31 + 0x20]
	0x03C1E32C LDP X22, X21, [X31 + 0x10]
	0x03C1E330 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C7000
	005 Move X1, [X20+3408]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51355648
	010 Add X0, X0, 125
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3408], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetPixelImpl(System.Int32 mip, System.Int32 x, System.Int32 y, System.Int32 z, UnityEngine.Color color)

Disassembly:
	0x03C1E334 MOV X2, X31
	0x03C1E338 LDP X30, X23, [X31], #0x30
	0x03C1E33C B 0x3C96574
	0x03C1E340 BL 0x1C16F28
	0x03C1E344 BL 0x1C16F20
	0x03C1E348 BL 0x1C16F44
	0x03C1E34C MOV X1, X31
	0x03C1E350 BL 0x1C16DEC
	0x03C1E354 STR X30, [X31 - 0x60]!
	0x03C1E358 STP X28, X27, [X31 + 0x10]
	0x03C1E35C STP X26, X25, [X31 + 0x20]
	0x03C1E360 STP X24, X23, [X31 + 0x30]
	0x03C1E364 STP X22, X21, [X31 + 0x40]
	0x03C1E368 STP X20, X19, [X31 + 0x50]
	0x03C1E36C ADRP X26, 0x7C6000
	0x03C1E370 LDRB W8, [X26 + 0xD8B]
	0x03C1E374 MOV X20, X2
	0x03C1E378 MOV X21, X1
	0x03C1E37C MOV X19, X0
	0x03C1E380 CBNZ W8, 0x3C1E398
	0x03C1E384 ADRP X0, 0x4D5000
	0x03C1E388 LDR X0, [X0 + 0x5A8]
	0x03C1E38C BL 0x1C16CF4
	0x03C1E390 MOVZ W8, 0x1
	0x03C1E394 STRB W8, [X26 + 0xD8B]
	0x03C1E398 ADRP X25, 0x4D5000
	0x03C1E39C LDR X25, [X25 + 0x5A8]
	0x03C1E3A0 LDR X0, [X25]
	0x03C1E3A4 LDR W8, [X0 + 0xE0]
	0x03C1E3A8 CBNZ W8, 0x3C1E3B0
	0x03C1E3AC BL 0x1C16DFC
	0x03C1E3B0 ADD W22, W20, W21
	0x03C1E3B4 MOV W0, W21

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0x7C7000
	010 Move X8, [X24+3456]
	011 Move W19, W4
	012 Move W20, W3
	013 Move W21, W2
	014 Move W22, W1
	015 Move X23, X0
	016 Move [X31], S0
	017 Move [X31+8], S1
	018 Move [X31+8], S2
	019 Move [X31+16], S3
	020 Compare X8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51564544
	023 Add X0, X0, 3818
	024 Call 0x1C17CB8
	025 Move X8, X0
	026 Move [X24+3456], X0
	027 Add X5, X31, 0
	028 Move X0, X23
	029 Move W1, W22
	030 Move W2, W21
	031 Move W3, W20
	032 Move W4, W19
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X20, [X31+64]
	035 Move X19, [X31+72]
	036 Move X22, [X31+48]
	037 Move X21, [X31+56]
	038 Move X24, [X31+32]
	039 Move X23, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 80
	042 Return 

Method: System.Boolean Internal_CreateImpl(UnityEngine.Texture3D mono, System.Int32 w, System.Int32 h, System.Int32 d, System.Int32 mipCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.TextureColorSpace colorSpace, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.IntPtr nativeTex)

Disassembly:
	0x03C1E42C MOVZ W8, 0x1
	0x03C1E430 STRB W8, [X27 + 0xD8D]
	0x03C1E434 LDR X0, [X25]
	0x03C1E438 LDR W8, [X0 + 0xE0]
	0x03C1E43C CBNZ W8, 0x3C1E444
	0x03C1E440 BL 0x1C16DFC
	0x03C1E444 MOV W0, W21
	0x03C1E448 MOV W1, W22
	0x03C1E44C MOV X2, X31
	0x03C1E450 BL 0x337EDF0
	0x03C1E454 LDRB W8, [X26 + 0xD8B]
	0x03C1E458 MOV W22, W0
	0x03C1E45C CBNZ W8, 0x3C1E474
	0x03C1E460 ADRP X0, 0x4D5000
	0x03C1E464 LDR X0, [X0 + 0x5A8]
	0x03C1E468 BL 0x1C16CF4
	0x03C1E46C MOVZ W8, 0x1
	0x03C1E470 STRB W8, [X26 + 0xD8B]
	0x03C1E474 LDR X0, [X25]
	0x03C1E478 LDR W23, [X19]
	0x03C1E47C LDR W24, [X19 + 0x8]
	0x03C1E480 LDR W8, [X0 + 0xE0]
	0x03C1E484 CBNZ W8, 0x3C1E48C
	0x03C1E488 BL 0x1C16DFC
	0x03C1E48C ADD W1, W24, W23
	0x03C1E490 MOV W0, W23
	0x03C1E494 MOV X2, X31
	0x03C1E498 BL 0x337EE94
	0x03C1E49C CMP W22, W0
	0x03C1E4A0 B.LE 0x3C1E5D4
	0x03C1E4A4 ADRP X24, 0x7C6000
	0x03C1E4A8 LDRB W8, [X24 + 0xD8C]
	0x03C1E4AC UBFM X21, X21, 0x20, 0x3F
	0x03C1E4B0 UBFM X20, X20, 0x20, 0x3F
	0x03C1E4B4 CBNZ W8, 0x3C1E4CC
	0x03C1E4B8 ADRP X0, 0x4D5000
	0x03C1E4BC LDR X0, [X0 + 0x5A8]
	0x03C1E4C0 BL 0x1C16CF4
	0x03C1E4C4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x7C7000
	013 Move X8, [X28+3416]
	014 Move X27, [X31+96]
	015 Move W19, W7
	016 Move W20, W6
	017 Move W21, W5
	018 Move W22, W4
	019 Move W23, W3
	020 Move W24, W2
	021 Move W25, W1
	022 Move X26, X0
	023 Compare X8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51527680
	026 Add X0, X0, 480
	027 Call 0x1C17CB8
	028 Move X8, X0
	029 Move [X28+3416], X0
	030 Move [X31+96], X27
	031 Move X0, X26
	032 Move W1, W25
	033 Move W2, W24
	034 Move W3, W23
	035 Move W4, W22
	036 Move W5, W21
	037 Move W6, W20
	038 Move W7, W19
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Move X22, [X31+64]
	042 Move X21, [X31+72]
	043 Move X24, [X31+48]
	044 Move X23, [X31+56]
	045 Move X26, [X31+32]
	046 Move X25, [X31+40]
	047 Move X28, [X31+16]
	048 Move X27, [X31+24]
	049 Move X30, [X31+96]
	050 CallNoReturn X8

Method: System.Void Internal_Create(UnityEngine.Texture3D mono, System.Int32 w, System.Int32 h, System.Int32 d, System.Int32 mipCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.TextureColorSpace colorSpace, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.IntPtr nativeTex)

Disassembly:
	0x03C1E4C8 STRB W8, [X24 + 0xD8C]
	0x03C1E4CC LDR X0, [X25]
	0x03C1E4D0 LDR W8, [X0 + 0xE0]
	0x03C1E4D4 CBNZ W8, 0x3C1E4DC
	0x03C1E4D8 BL 0x1C16DFC
	0x03C1E4DC ADD W20, W20, W21
	0x03C1E4E0 MOV W0, W21
	0x03C1E4E4 MOV W1, W20
	0x03C1E4E8 MOV X2, X31
	0x03C1E4EC BL 0x337EE94
	0x03C1E4F0 ADRP X26, 0x7C6000
	0x03C1E4F4 LDRB W8, [X26 + 0xD8E]
	0x03C1E4F8 MOV W22, W0
	0x03C1E4FC CBNZ W8, 0x3C1E514
	0x03C1E500 ADRP X0, 0x4D5000
	0x03C1E504 LDR X0, [X0 + 0x5A8]
	0x03C1E508 BL 0x1C16CF4
	0x03C1E50C MOVZ W8, 0x1
	0x03C1E510 STRB W8, [X26 + 0xD8E]
	0x03C1E514 LDR X0, [X25]
	0x03C1E518 LDR W23, [X19 + 0x4]
	0x03C1E51C LDR W27, [X19 + 0xC]
	0x03C1E520 LDR W8, [X0 + 0xE0]
	0x03C1E524 CBNZ W8, 0x3C1E52C
	0x03C1E528 BL 0x1C16DFC
	0x03C1E52C ADD W1, W27, W23
	0x03C1E530 MOV W0, W23
	0x03C1E534 MOV X2, X31
	0x03C1E538 BL 0x337EDF0
	0x03C1E53C CMP W22, W0
	0x03C1E540 B.GE 0x3C1E5D4
	0x03C1E544 LDRB W8, [X26 + 0xD8E]
	0x03C1E548 CBNZ W8, 0x3C1E560
	0x03C1E54C ADRP X0, 0x4D5000
	0x03C1E550 LDR X0, [X0 + 0x5A8]
	0x03C1E554 BL 0x1C16CF4
	0x03C1E558 MOVZ W8, 0x1
	0x03C1E55C STRB W8, [X26 + 0xD8E]
	0x03C1E560 LDR X0, [X25]
	0x03C1E564 LDR W8, [X0 + 0xE0]
	0x03C1E568 CBNZ W8, 0x3C1E570
	0x03C1E56C BL 0x1C16DFC
	0x03C1E570 MOV W0, W21
	0x03C1E574 MOV W1, W20
	0x03C1E578 MOV X2, X31
	0x03C1E57C BL 0x337EDF0
	0x03C1E580 LDRB W8, [X24 + 0xD8C]
	0x03C1E584 MOV W20, W0
	0x03C1E588 CBNZ W8, 0x3C1E5A0
	0x03C1E58C ADRP X0, 0x4D5000
	0x03C1E590 LDR X0, [X0 + 0x5A8]
	0x03C1E594 BL 0x1C16CF4
	0x03C1E598 MOVZ W8, 0x1
	0x03C1E59C STRB W8, [X24 + 0xD8C]
	0x03C1E5A0 LDR X0, [X25]
	0x03C1E5A4 LDR W21, [X19 + 0x4]
	0x03C1E5A8 LDR W19, [X19 + 0xC]
	0x03C1E5AC LDR W8, [X0 + 0xE0]
	0x03C1E5B0 CBNZ W8, 0x3C1E5B8
	0x03C1E5B4 BL 0x1C16DFC
	0x03C1E5B8 ADD W1, W19, W21

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X28, 0x7C7000
	014 Move X8, [X28+3416]
	015 Move X27, [X31+112]
	016 Move W19, W7
	017 Move W20, W6
	018 Move W21, W5
	019 Move W22, W4
	020 Move W23, W3
	021 Move W24, W2
	022 Move W25, W1
	023 Move X26, X0
	024 Compare X8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, -51527680
	027 Add X0, X0, 480
	028 Call 0x1C17CB8
	029 Move X8, X0
	030 Move [X28+3416], X0
	031 Move X0, X26
	032 Move W1, W25
	033 Move W2, W24
	034 Move W3, W23
	035 Move W4, W22
	036 Move W5, W21
	037 Move W6, W20
	038 Move W7, W19
	039 Move [X31], X27
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {58}
	045 Move X20, [X31+96]
	046 Move X19, [X31+104]
	047 Move X22, [X31+80]
	048 Move X21, [X31+88]
	049 Move X24, [X31+64]
	050 Move X23, [X31+72]
	051 Move X26, [X31+48]
	052 Move X25, [X31+56]
	053 Move X28, [X31+32]
	054 Move X27, [X31+40]
	055 Move X30, [X31+16]
	056 Add X31, X31, 112
	057 Return 
	058 Move X0, 0x4FF000
	059 Move X0, [X0+464]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move X19, X0
	063 Move X0, 0x542000
	064 Move X0, [X0+80]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Move X2, X31
	069 Call UnityException..ctor, X0, X1
	070 Move X0, 0x542000
	071 Move X0, [X0+232]
	072 Call 0x1C17D08
	073 Move X1, X0
	074 Move X0, X19
	075 Call 0x1C17DEC

Method: System.Void ApplyImpl(System.Boolean updateMipmaps, System.Boolean makeNoLongerReadable)

Disassembly:
	0x03C1E5BC MOV W0, W21
	0x03C1E5C0 MOV X2, X31
	0x03C1E5C4 BL 0x337EE94
	0x03C1E5C8 CMP W20, W0
	0x03C1E5CC CSET W0, GT
	0x03C1E5D0 B 0x3C1E5D8
	0x03C1E5D4 MOV W0, W31
	0x03C1E5D8 LDP X20, X19, [X31 + 0x50]
	0x03C1E5DC LDP X22, X21, [X31 + 0x40]
	0x03C1E5E0 LDP X24, X23, [X31 + 0x30]
	0x03C1E5E4 LDP X26, X25, [X31 + 0x20]
	0x03C1E5E8 LDP X28, X27, [X31 + 0x10]
	0x03C1E5EC LDR X30, [X31], #0x60
	0x03C1E5F0 RET
	0x03C1E5F4 SUB X31, X31, 0x40
	0x03C1E5F8 STP X30, X23, [X31 + 0x10]
	0x03C1E5FC STP X22, X21, [X31 + 0x20]
	0x03C1E600 STP X20, X19, [X31 + 0x30]
	0x03C1E604 ADRP X22, 0x7C6000
	0x03C1E608 LDRB W8, [X22 + 0xD8F]
	0x03C1E60C MOV X21, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7C7000
	007 Move X3, [X22+3424]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51376128
	014 Add X0, X0, 2962
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3424], X0
	018 And W1, W20, 1
	019 And W2, W19, 1
	020 Move X0, X21
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetPixels(UnityEngine.Color[] colors, System.Int32 miplevel)

Disassembly:
	0x03C1E610 MOV X19, X1
	0x03C1E614 MOV X20, X0
	0x03C1E618 CBZ W8, 0x3C1E624
	0x03C1E61C CBNZ X21, 0x3C1E68C
	0x03C1E620 B 0x3C1E654
	0x03C1E624 ADRP X0, 0x4D7000
	0x03C1E628 LDR X0, [X0 + 0xC48]
	0x03C1E62C BL 0x1C16CF4
	0x03C1E630 ADRP X0, 0x4D5000
	0x03C1E634 LDR X0, [X0 + 0x9D0]
	0x03C1E638 BL 0x1C16CF4
	0x03C1E63C ADRP X0, 0x540000
	0x03C1E640 LDR X0, [X0 + 0xCB0]
	0x03C1E644 BL 0x1C16CF4
	0x03C1E648 MOVZ W8, 0x1
	0x03C1E64C STRB W8, [X22 + 0xD8F]
	0x03C1E650 CBNZ X21, 0x3C1E68C
	0x03C1E654 ADRP X8, 0x4D7000
	0x03C1E658 LDR X8, [X8 + 0xC48]
	0x03C1E65C LDR X0, [X8]
	0x03C1E660 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7C7000
	007 Move X3, [X22+3432]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51503104
	014 Add X0, X0, 448
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3432], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Boolean SetPixelDataImpl(System.IntPtr data, System.Int32 mipLevel, System.Int32 elementSize, System.Int32 dataArraySize, System.Int32 sourceDataStartIndex = 0)

Disassembly:
	0x03C1E664 CBNZ W8, 0x3C1E66C
	0x03C1E668 BL 0x1C16DFC
	0x03C1E66C MOV X0, X31
	0x03C1E670 BL 0x3338524
	0x03C1E674 CBZ X0, 0x3C1E800
	0x03C1E678 LDR X8, [X0]
	0x03C1E67C LDR X9, [X8 + 0x218]
	0x03C1E680 LDR X1, [X8 + 0x220]
	0x03C1E684 BLR X9
	0x03C1E688 MOV X21, X0
	0x03C1E68C ADRP X8, 0x4D5000
	0x03C1E690 LDR X8, [X8 + 0x9D0]
	0x03C1E694 MOVZ W1, 0x4
	0x03C1E698 LDR X0, [X8]
	0x03C1E69C BL 0x1C16D6C
	0x03C1E6A0 LDR W8, [X20]
	0x03C1E6A4 MOV X22, X0
	0x03C1E6A8 ADD X0, X31, 0xC
	0x03C1E6AC MOV X1, X19
	0x03C1E6B0 MOV X2, X21
	0x03C1E6B4 MOV X3, X31
	0x03C1E6B8 STR W8, [X31 + 0xC]
	0x03C1E6BC BL 0x337B8BC
	0x03C1E6C0 CBZ X22, 0x3C1E800
	0x03C1E6C4 MOV X23, X0
	0x03C1E6C8 CBZ X0, 0x3C1E6E0
	0x03C1E6CC LDR X8, [X22]
	0x03C1E6D0 MOV X0, X23
	0x03C1E6D4 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C7000
	010 Move X6, [X25+3440]
	011 Move W19, W5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51449856
	020 Add X0, X0, 3671
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+3440], X0
	024 Move X0, X24
	025 Move X1, X23
	026 Move W2, W22
	027 Move W3, W21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.DefaultFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C1E6D8 BL 0x1C16E00
	0x03C1E6DC CBZ X0, 0x3C1E7F4
	0x03C1E6E0 LDR W8, [X22 + 0x18]
	0x03C1E6E4 CBZ W8, 0x3C1E7F0
	0x03C1E6E8 STR X23, [X22 + 0x20]
	0x03C1E6EC LDR W8, [X20 + 0x4]
	0x03C1E6F0 ADD X0, X31, 0xC
	0x03C1E6F4 MOV X1, X19
	0x03C1E6F8 MOV X2, X21
	0x03C1E6FC MOV X3, X31
	0x03C1E700 STR W8, [X31 + 0xC]
	0x03C1E704 BL 0x337B8BC
	0x03C1E708 MOV X23, X0
	0x03C1E70C CBZ X0, 0x3C1E724
	0x03C1E710 LDR X8, [X22]
	0x03C1E714 MOV X0, X23
	0x03C1E718 LDR X1, [X8 + 0x40]
	0x03C1E71C BL 0x1C16E00
	0x03C1E720 CBZ X0, 0x3C1E7F4
	0x03C1E724 LDR W8, [X22 + 0x18]
	0x03C1E728 CMP W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W22, W1
	008 Move X23, X0
	009 Move W0, W4
	010 Move X1, X31
	011 Move W19, W5
	012 Move W20, W3
	013 Move W21, W2
	014 Call SystemInfo.GetGraphicsFormat, X0
	015 Move W1, W22
	016 Move W2, W21
	017 Move W3, W20
	018 Move W5, W19
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move W4, W0
	024 Move X0, X23
	025 Move X30, [X31+48]
	026 Move X23, [X31+56]

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.DefaultFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.Int32 mipCount)

Disassembly:
	0x03C1E7CC MOV X1, X22
	0x03C1E7D0 MOV X2, X31
	0x03C1E7D4 LDR X0, [X8]
	0x03C1E7D8 BL 0x3C96574
	0x03C1E7DC LDP X20, X19, [X31 + 0x30]
	0x03C1E7E0 LDP X22, X21, [X31 + 0x20]
	0x03C1E7E4 LDP X30, X23, [X31 + 0x10]
	0x03C1E7E8 ADD X31, X31, 0x40
	0x03C1E7EC RET
	0x03C1E7F0 BL 0x1C16F28
	0x03C1E7F4 BL 0x1C16F44
	0x03C1E7F8 MOV X1, X31
	0x03C1E7FC BL 0x1C16DEC
	0x03C1E800 BL 0x1C16F20
	0x03C1E804 SUB X31, X31, 0x40
	0x03C1E808 STP X30, X23, [X31 + 0x10]
	0x03C1E80C STP X22, X21, [X31 + 0x20]
	0x03C1E810 STP X20, X19, [X31 + 0x30]
	0x03C1E814 ADRP X22, 0x7C6000
	0x03C1E818 LDRB W8, [X22 + 0xD90]
	0x03C1E81C MOV X21, X2
	0x03C1E820 MOV X19, X1
	0x03C1E824 MOV X20, X0
	0x03C1E828 CBZ W8, 0x3C1E834
	0x03C1E82C CBNZ X21, 0x3C1E89C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W23, W1
	009 Move X24, X0
	010 Move W0, W4
	011 Move X1, X31
	012 Move W19, W6
	013 Move W20, W5
	014 Move W21, W3
	015 Move W22, W2
	016 Call SystemInfo.GetGraphicsFormat, X0
	017 Move W4, W0
	018 Move X0, X24
	019 Move W1, W23
	020 Move W2, W22
	021 Move W3, W21
	022 Move W5, W20
	023 Move W6, W19
	024 Move X20, [X31+48]
	025 Move X19, [X31+56]
	026 Move X22, [X31+32]
	027 Move X21, [X31+40]
	028 Move X24, [X31+16]
	029 Move X23, [X31+24]
	030 Move X30, [X31+64]

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C1E72C B.LS 0x3C1E7F0
	0x03C1E730 STR X23, [X22 + 0x28]
	0x03C1E734 LDR W8, [X20 + 0x8]
	0x03C1E738 ADD X0, X31, 0xC
	0x03C1E73C MOV X1, X19
	0x03C1E740 MOV X2, X21
	0x03C1E744 MOV X3, X31
	0x03C1E748 STR W8, [X31 + 0xC]
	0x03C1E74C BL 0x337B8BC
	0x03C1E750 MOV X23, X0
	0x03C1E754 CBZ X0, 0x3C1E76C
	0x03C1E758 LDR X8, [X22]
	0x03C1E75C MOV X0, X23
	0x03C1E760 LDR X1, [X8 + 0x40]
	0x03C1E764 BL 0x1C16E00
	0x03C1E768 CBZ X0, 0x3C1E7F4
	0x03C1E76C LDR W8, [X22 + 0x18]
	0x03C1E770 CMP W8, 0x2
	0x03C1E774 B.LS 0x3C1E7F0
	0x03C1E778 STR X23, [X22 + 0x30]
	0x03C1E77C LDR W8, [X20 + 0xC]
	0x03C1E780 ADD X0, X31, 0xC
	0x03C1E784 MOV X1, X19
	0x03C1E788 MOV X2, X21
	0x03C1E78C MOV X3, X31
	0x03C1E790 STR W8, [X31 + 0xC]
	0x03C1E794 BL 0x337B8BC
	0x03C1E798 MOV X19, X0
	0x03C1E79C CBZ X0, 0x3C1E7B4
	0x03C1E7A0 LDR X8, [X22]
	0x03C1E7A4 MOV X0, X19
	0x03C1E7A8 LDR X1, [X8 + 0x40]
	0x03C1E7AC BL 0x1C16E00
	0x03C1E7B0 CBZ X0, 0x3C1E7F4
	0x03C1E7B4 LDR W8, [X22 + 0x18]
	0x03C1E7B8 CMP W8, 0x3
	0x03C1E7BC B.LS 0x3C1E7F0
	0x03C1E7C0 STR X19, [X22 + 0x38]
	0x03C1E7C4 ADRP X8, 0x540000
	0x03C1E7C8 LDR X8, [X8 + 0xCB0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7C7000
	011 Move X25, 0x542000
	012 Move W8, [X26+3448]
	013 Move X25, [X25+72]
	014 Move W19, W5
	015 Move W20, W4
	016 Move W21, W3
	017 Move W22, W2
	018 Move W23, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x542000
	025 Move X0, [X0+72]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+3448], W8
	029 Move X0, [X25]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X25]
	035 Move X8, [X0+184]
	036 Move X0, X24
	037 Move W1, W23
	038 Move W2, W22
	039 Move W6, [X8]
	040 Move W3, W21
	041 Move W4, W20
	042 Move W5, W19
	043 Move X20, [X31+64]
	044 Move X19, [X31+72]
	045 Move X22, [X31+48]
	046 Move X21, [X31+56]
	047 Move X24, [X31+32]
	048 Move X23, [X31+40]
	049 Move X26, [X31+16]
	050 Move X25, [X31+24]
	051 Move X30, [X31+80]
	052 Call Texture3D..ctor, X0, X1, X2, X3, X4, X5, X6
	053 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.Int32 mipCount)

Disassembly:
	0x03C1E830 B 0x3C1E864
	0x03C1E834 ADRP X0, 0x4D7000
	0x03C1E838 LDR X0, [X0 + 0xC48]
	0x03C1E83C BL 0x1C16CF4
	0x03C1E840 ADRP X0, 0x4D5000
	0x03C1E844 LDR X0, [X0 + 0x9D0]
	0x03C1E848 BL 0x1C16CF4
	0x03C1E84C ADRP X0, 0x540000
	0x03C1E850 LDR X0, [X0 + 0xCB8]
	0x03C1E854 BL 0x1C16CF4
	0x03C1E858 MOVZ W8, 0x1
	0x03C1E85C STRB W8, [X22 + 0xD90]
	0x03C1E860 CBNZ X21, 0x3C1E89C
	0x03C1E864 ADRP X8, 0x4D7000
	0x03C1E868 LDR X8, [X8 + 0xC48]
	0x03C1E86C LDR X0, [X8]
	0x03C1E870 LDR W8, [X0 + 0xE0]
	0x03C1E874 CBNZ W8, 0x3C1E87C
	0x03C1E878 BL 0x1C16DFC
	0x03C1E87C MOV X0, X31
	0x03C1E880 BL 0x3338524
	0x03C1E884 CBZ X0, 0x3C1EAA0
	0x03C1E888 LDR X8, [X0]
	0x03C1E88C LDR X9, [X8 + 0x218]
	0x03C1E890 LDR X1, [X8 + 0x220]
	0x03C1E894 BLR X9
	0x03C1E898 MOV X21, X0
	0x03C1E89C ADRP X8, 0x4D5000
	0x03C1E8A0 LDR X8, [X8 + 0x9D0]
	0x03C1E8A4 MOVZ W1, 0x4
	0x03C1E8A8 LDR X0, [X8]
	0x03C1E8AC BL 0x1C16D6C
	0x03C1E8B0 ADRP X23, 0x7C6000
	0x03C1E8B4 LDR X8, [X23 + 0x230]
	0x03C1E8B8 MOV X22, X0
	0x03C1E8BC CBNZ X8, 0x3C1E8D4
	0x03C1E8C0 ADRP X0, 0xFFFFFFFFFCEE4000
	0x03C1E8C4 ADD X0, X0, 0xD29
	0x03C1E8C8 BL 0x1C16CB8
	0x03C1E8CC MOV X8, X0
	0x03C1E8D0 STR X0, [X23 + 0x230]
	0x03C1E8D4 MOV X0, X20
	0x03C1E8D8 BLR X8
	0x03C1E8DC STR W0, [X31 + 0xC]
	0x03C1E8E0 ADD X0, X31, 0xC
	0x03C1E8E4 MOV X1, X19
	0x03C1E8E8 MOV X2, X21
	0x03C1E8EC MOV X3, X31
	0x03C1E8F0 BL 0x337B8BC
	0x03C1E8F4 CBZ X22, 0x3C1EAA0
	0x03C1E8F8 MOV X23, X0
	0x03C1E8FC CBZ X0, 0x3C1E914
	0x03C1E900 LDR X8, [X22]
	0x03C1E904 MOV X0, X23
	0x03C1E908 LDR X1, [X8 + 0x40]
	0x03C1E90C BL 0x1C16E00
	0x03C1E910 CBZ X0, 0x3C1EA94
	0x03C1E914 LDR W8, [X22 + 0x18]
	0x03C1E918 CBZ W8, 0x3C1EA90

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x7C7000
	013 Move X26, 0x542000
	014 Move W8, [X27+3449]
	015 Move X26, [X26+72]
	016 Move W20, W6
	017 Move W19, W5
	018 Move W21, W4
	019 Move W22, W3
	020 Move W23, W2
	021 Move W24, W1
	022 Move X25, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x542000
	028 Move X0, [X0+72]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X27+3449], W8
	032 Move X0, [X26]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X25
	038 Call Texture..ctor, X0
	039 Move X0, X25
	040 Move W1, W21
	041 Move W2, W31
	042 Call Texture.ValidateFormat, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {66}
	047 Move W0, W19
	048 Call Texture3D.ValidateIsNotCrunched, X0
	049 Move X0, [X26]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move W1, W21
	055 Call Texture.GetTextureColorSpace, X0, X1
	056 Move W6, W0
	057 Move X0, X25
	058 Move W1, W24
	059 Move W2, W23
	060 Move W3, W22
	061 Move W4, W20
	062 Move W5, W21
	063 Move W7, W19
	064 Move [X31], X31
	065 Call Texture3D.Internal_Create, X0, X1, X2, X3, X4, X5, X6, X7, X8
	066 Move X20, [X31+80]
	067 Move X19, [X31+88]
	068 Move X22, [X31+64]
	069 Move X21, [X31+72]
	070 Move X24, [X31+48]
	071 Move X23, [X31+56]
	072 Move X26, [X31+32]
	073 Move X25, [X31+40]
	074 Move X30, [X31+16]
	075 Move X27, [X31+24]
	076 Add X31, X31, 96
	077 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.TextureFormat textureFormat, System.Int32 mipCount)

Disassembly:
	0x03C1E970 LDR X1, [X8 + 0x40]
	0x03C1E974 BL 0x1C16E00
	0x03C1E978 CBZ X0, 0x3C1EA94
	0x03C1E97C LDR W8, [X22 + 0x18]
	0x03C1E980 CMP W8, 0x1
	0x03C1E984 B.LS 0x3C1EA90
	0x03C1E988 STR X23, [X22 + 0x28]
	0x03C1E98C ADRP X23, 0x7C6000

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move X6, X31
	004 Move W7, W31
	005 Call Texture3D..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	006 Move X30, [X31+16]
	007 Add X31, X31, 32
	008 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.TextureFormat textureFormat, System.Int32 mipCount, System.IntPtr nativeTex)

Disassembly:
	0x03C1E990 LDR X8, [X23 + 0x250]
	0x03C1E994 CBNZ X8, 0x3C1E9AC
	0x03C1E998 ADRP X0, 0xFFFFFFFFFCF0A000
	0x03C1E99C ADD X0, X0, 0x3FE
	0x03C1E9A0 BL 0x1C16CB8
	0x03C1E9A4 MOV X8, X0
	0x03C1E9A8 STR X0, [X23 + 0x250]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move W7, W31
	004 Call Texture3D..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	005 Move X30, [X31+16]
	006 Add X31, X31, 32
	007 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.TextureFormat textureFormat, System.Int32 mipCount, System.IntPtr nativeTex, System.Boolean createUninitialized)

Disassembly:
	0x03C1E9AC MOV X0, X20
	0x03C1E9B0 BLR X8
	0x03C1E9B4 STR W0, [X31 + 0xC]
	0x03C1E9B8 ADD X0, X31, 0xC
	0x03C1E9BC MOV X1, X19
	0x03C1E9C0 MOV X2, X21
	0x03C1E9C4 MOV X3, X31
	0x03C1E9C8 BL 0x337B8BC
	0x03C1E9CC MOV X23, X0
	0x03C1E9D0 CBZ X0, 0x3C1E9E8
	0x03C1E9D4 LDR X8, [X22]
	0x03C1E9D8 MOV X0, X23
	0x03C1E9DC LDR X1, [X8 + 0x40]
	0x03C1E9E0 BL 0x1C16E00
	0x03C1E9E4 CBZ X0, 0x3C1EA94
	0x03C1E9E8 LDR W8, [X22 + 0x18]
	0x03C1E9EC CMP W8, 0x2
	0x03C1E9F0 B.LS 0x3C1EA90
	0x03C1E9F4 STR X23, [X22 + 0x30]
	0x03C1E9F8 ADRP X23, 0x7C6000
	0x03C1E9FC LDR X8, [X23 + 0x260]
	0x03C1EA00 CBNZ X8, 0x3C1EA18
	0x03C1EA04 ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C1EA08 ADD X0, X0, 0xE55
	0x03C1EA0C BL 0x1C16CB8
	0x03C1EA10 MOV X8, X0
	0x03C1EA14 STR X0, [X23 + 0x260]
	0x03C1EA18 MOV X0, X20
	0x03C1EA1C BLR X8
	0x03C1EA20 STR W0, [X31 + 0xC]
	0x03C1EA24 ADD X0, X31, 0xC
	0x03C1EA28 MOV X1, X19
	0x03C1EA2C MOV X2, X21
	0x03C1EA30 MOV X3, X31
	0x03C1EA34 BL 0x337B8BC
	0x03C1EA38 MOV X19, X0
	0x03C1EA3C CBZ X0, 0x3C1EA54
	0x03C1EA40 LDR X8, [X22]
	0x03C1EA44 MOV X0, X19
	0x03C1EA48 LDR X1, [X8 + 0x40]
	0x03C1EA4C BL 0x1C16E00
	0x03C1EA50 CBZ X0, 0x3C1EA94
	0x03C1EA54 LDR W8, [X22 + 0x18]
	0x03C1EA58 CMP W8, 0x3
	0x03C1EA5C B.LS 0x3C1EA90
	0x03C1EA60 STR X19, [X22 + 0x38]
	0x03C1EA64 ADRP X8, 0x540000
	0x03C1EA68 LDR X8, [X8 + 0xCB8]
	0x03C1EA6C MOV X1, X22
	0x03C1EA70 MOV X2, X31
	0x03C1EA74 LDR X0, [X8]
	0x03C1EA78 BL 0x3C96574
	0x03C1EA7C LDP X20, X19, [X31 + 0x30]
	0x03C1EA80 LDP X22, X21, [X31 + 0x20]
	0x03C1EA84 LDP X30, X23, [X31 + 0x10]
	0x03C1EA88 ADD X31, X31, 0x40
	0x03C1EA8C RET
	0x03C1EA90 BL 0x1C16F28
	0x03C1EA94 BL 0x1C16F44
	0x03C1EA98 MOV X1, X31
	0x03C1EA9C BL 0x1C16DEC
	0x03C1EAA0 BL 0x1C16F20
	0x03C1EAA4 STP X30, X19, [X31 - 0x10]!
	0x03C1EAA8 ADRP X19, 0x7C6000
	0x03C1EAAC LDR X0, [X19 + 0xD98]
	0x03C1EAB0 CBNZ X0, 0x3C1EAC4
	0x03C1EAB4 ADRP X0, 0xFFFFFFFFFCEFF000
	0x03C1EAB8 ADD X0, X0, 0xE
	0x03C1EABC BL 0x1C16CB8
	0x03C1EAC0 STR X0, [X19 + 0xD98]
	0x03C1EAC4 LDP X30, X19, [X31], #0x10
	0x03C1EAC8 BR X0
	0x03C1EACC STR X30, [X31 - 0x20]!
	0x03C1EAD0 STP X20, X19, [X31 + 0x10]
	0x03C1EAD4 ADRP X20, 0x7C6000
	0x03C1EAD8 LDR X1, [X20 + 0xDA0]
	0x03C1EADC MOV X19, X0
	0x03C1EAE0 CBNZ X1, 0x3C1EAF8
	0x03C1EAE4 ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C1EAE8 ADD X0, X0, 0xEC2
	0x03C1EAEC BL 0x1C16CB8
	0x03C1EAF0 MOV X1, X0
	0x03C1EAF4 STR X0, [X20 + 0xDA0]
	0x03C1EAF8 MOV X0, X19
	0x03C1EAFC LDP X20, X19, [X31 + 0x10]
	0x03C1EB00 LDR X30, [X31], #0x20
	0x03C1EB04 BR X1
	0x03C1EB08 STP X30, X27, [X31 - 0x50]!
	0x03C1EB0C STP X26, X25, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X27, 0x7C7000
	015 Move X28, 0x542000
	016 Move W8, [X27+3450]
	017 Move X28, [X28+72]
	018 Move W25, W7
	019 Move X22, X6
	020 Move W19, W5
	021 Move W26, W4
	022 Move W20, W3
	023 Move W21, W2
	024 Move W23, W1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x536000
	031 Move X0, [X0+144]
	032 Call 0x1C17CF4
	033 Move X0, 0x542000
	034 Move X0, [X0+72]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X27+3450], W8
	038 Move X0, [X28]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X24
	044 Call Texture..ctor, X0
	045 Move X0, X24
	046 Move W1, W26
	047 Call Texture.ValidateFormat, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {98}
	052 Move X29, 0x536000
	053 Move X29, [X29+144]
	054 Move X0, [X29]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move W0, W26
	060 Move W1, W31
	061 Move X2, X31
	062 Call GraphicsFormatUtility.GetGraphicsFormat, X0, X1
	063 Move W27, W0
	064 Move X0, [X29]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CSET not yet implemented."
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move W0, W26
	072 Move X1, X31
	073 Call GraphicsFormatUtility.IsCrunchFormat, X0
	074 Or W8, W29, 64
	075 And W31, W0, 1
	076 Move W9, 1028
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Or W9, W8, W9
	079 And W31, W25, 1
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Move W0, W25
	082 Call Texture3D.ValidateIsNotCrunched, X0
	083 Move X0, [X28]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X24
	089 Move W1, W23
	090 Move W2, W21
	091 Move W3, W20
	092 Move W4, W19
	093 Move W5, W27
	094 Move W6, W31
	095 Move W7, W25
	096 Move [X31], X22
	097 Call Texture3D.Internal_Create, X0, X1, X2, X3, X4, X5, X6, X7, X8
	098 Move X20, [X31+96]
	099 Move X19, [X31+104]
	100 Move X22, [X31+80]
	101 Move X21, [X31+88]
	102 Move X24, [X31+64]
	103 Move X23, [X31+72]
	104 Move X26, [X31+48]
	105 Move X25, [X31+56]
	106 Move X28, [X31+32]
	107 Move X27, [X31+40]
	108 Move X29, [X31+16]
	109 Move X30, [X31+24]
	110 Add X31, X31, 112
	111 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain)

Disassembly:
	0x03C1EB10 STP X24, X23, [X31 + 0x20]
	0x03C1EB14 STP X22, X21, [X31 + 0x30]
	0x03C1EB18 STP X20, X19, [X31 + 0x40]
	0x03C1EB1C ADRP X27, 0x7C6000
	0x03C1EB20 LDR X8, [X27 + 0xDA8]
	0x03C1EB24 MOV W19, W7
	0x03C1EB28 MOV W20, W6
	0x03C1EB2C MOV W21, W5
	0x03C1EB30 MOV W22, W4
	0x03C1EB34 MOV W23, W3
	0x03C1EB38 MOV W24, W2
	0x03C1EB3C MOV W25, W1
	0x03C1EB40 MOV X26, X0
	0x03C1EB44 CBNZ X8, 0x3C1EB5C
	0x03C1EB48 ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C1EB4C ADD X0, X0, 0x2EC
	0x03C1EB50 BL 0x1C16CB8
	0x03C1EB54 MOV X8, X0
	0x03C1EB58 STR X0, [X27 + 0xDA8]
	0x03C1EB5C MOV X0, X26
	0x03C1EB60 MOV W1, W25
	0x03C1EB64 MOV W2, W24
	0x03C1EB68 MOV W3, W23
	0x03C1EB6C MOV W4, W22
	0x03C1EB70 MOV W5, W21
	0x03C1EB74 MOV W6, W20
	0x03C1EB78 MOV W7, W19
	0x03C1EB7C LDP X20, X19, [X31 + 0x40]
	0x03C1EB80 LDP X22, X21, [X31 + 0x30]
	0x03C1EB84 LDP X24, X23, [X31 + 0x20]
	0x03C1EB88 LDP X26, X25, [X31 + 0x10]
	0x03C1EB8C LDP X30, X27, [X31], #0x50
	0x03C1EB90 BR X8
	0x03C1EB94 STP X30, X27, [X31 - 0x50]!
	0x03C1EB98 STP X26, X25, [X31 + 0x10]
	0x03C1EB9C STP X24, X23, [X31 + 0x20]
	0x03C1EBA0 STP X22, X21, [X31 + 0x30]
	0x03C1EBA4 STP X20, X19, [X31 + 0x40]
	0x03C1EBA8 ADRP X27, 0x7C6000
	0x03C1EBAC LDR X8, [X27 + 0xDA8]
	0x03C1EBB0 MOV W19, W7
	0x03C1EBB4 MOV W20, W6
	0x03C1EBB8 MOV W21, W5
	0x03C1EBBC MOV W22, W4
	0x03C1EBC0 MOV W23, W3
	0x03C1EBC4 MOV W24, W2

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x7C7000
	011 Move W8, [X25+3451]
	012 Move W24, W5
	013 Move W19, W4
	014 Move W20, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {36}
	022 Move TEMP, X24
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {45}
	026 Move X24, 0x542000
	027 Move X24, [X24+72]
	028 Move X0, [X24]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X24]
	034 Move X8, [X0+184]
	035 Move W5, [X8]
	036 Move X0, 0x542000
	037 Move X0, [X0+72]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X25+3451], W8
	041 Move TEMP, X24
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {26}
	045 Move W5, 1
	046 Move X0, X23
	047 Move W1, W22
	048 Move W2, W21
	049 Move W3, W20
	050 Move W4, W19
	051 Move X6, X31
	052 Move W7, W31
	053 Call Texture3D..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	054 Move X20, [X31+64]
	055 Move X19, [X31+72]
	056 Move X22, [X31+48]
	057 Move X21, [X31+56]
	058 Move X24, [X31+32]
	059 Move X23, [X31+40]
	060 Move X30, [X31+16]
	061 Move X25, [X31+24]
	062 Add X31, X31, 80
	063 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain, System.Boolean createUninitialized)

Disassembly:
	0x03C1EBC8 MOV W25, W1
	0x03C1EBCC MOV X26, X0
	0x03C1EBD0 CBNZ X8, 0x3C1EBE8
	0x03C1EBD4 ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C1EBD8 ADD X0, X0, 0x2EC
	0x03C1EBDC BL 0x1C16CB8
	0x03C1EBE0 MOV X8, X0
	0x03C1EBE4 STR X0, [X27 + 0xDA8]
	0x03C1EBE8 MOV X0, X26
	0x03C1EBEC MOV W1, W25
	0x03C1EBF0 MOV W2, W24
	0x03C1EBF4 MOV W3, W23
	0x03C1EBF8 MOV W4, W22
	0x03C1EBFC MOV W5, W21
	0x03C1EC00 MOV W6, W20
	0x03C1EC04 MOV W7, W19
	0x03C1EC08 BLR X8
	0x03C1EC0C TBZ X0, 0x0, 0x3C1EC28
	0x03C1EC10 LDP X20, X19, [X31 + 0x40]
	0x03C1EC14 LDP X22, X21, [X31 + 0x30]
	0x03C1EC18 LDP X24, X23, [X31 + 0x20]
	0x03C1EC1C LDP X26, X25, [X31 + 0x10]
	0x03C1EC20 LDP X30, X27, [X31], #0x50
	0x03C1EC24 RET
	0x03C1EC28 ADRP X0, 0x4FE000
	0x03C1EC2C LDR X0, [X0 + 0x1D0]
	0x03C1EC30 BL 0x1C16D08
	0x03C1EC34 BL 0x1C16F10
	0x03C1EC38 MOV X19, X0
	0x03C1EC3C ADRP X0, 0x541000
	0x03C1EC40 LDR X0, [X0 + 0x138]
	0x03C1EC44 BL 0x1C16D08
	0x03C1EC48 MOV X1, X0
	0x03C1EC4C MOV X0, X19
	0x03C1EC50 MOV X2, X31
	0x03C1EC54 BL 0x3C363D0
	0x03C1EC58 ADRP X0, 0x541000
	0x03C1EC5C LDR X0, [X0 + 0x140]
	0x03C1EC60 BL 0x1C16D08
	0x03C1EC64 MOV X1, X0
	0x03C1EC68 MOV X0, X19
	0x03C1EC6C BL 0x1C16DEC
	0x03C1EC70 SUB X31, X31, 0x50
	0x03C1EC74 STR X30, [X31 + 0x20]
	0x03C1EC78 STP X22, X21, [X31 + 0x30]
	0x03C1EC7C STP X20, X19, [X31 + 0x40]
	0x03C1EC80 MOV W20, W2
	0x03C1EC84 MOV X2, X31
	0x03C1EC88 MOV W22, W3

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X26, 0x7C7000
	012 Move W8, [X26+3452]
	013 Move W22, W6
	014 Move W25, W5
	015 Move W19, W4
	016 Move W20, W3
	017 Move W21, W2
	018 Move W23, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {38}
	024 Move TEMP, X25
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {47}
	028 Move X25, 0x542000
	029 Move X25, [X25+72]
	030 Move X0, [X25]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X25]
	036 Move X8, [X0+184]
	037 Move W5, [X8]
	038 Move X0, 0x542000
	039 Move X0, [X0+72]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X26+3452], W8
	043 Move TEMP, X25
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {28}
	047 Move W5, 1
	048 And W7, W22, 1
	049 Move X0, X24
	050 Move W1, W23
	051 Move W2, W21
	052 Move W3, W20
	053 Move W4, W19
	054 Move X6, X31
	055 Call Texture3D..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	056 Move X20, [X31+80]
	057 Move X19, [X31+88]
	058 Move X22, [X31+64]
	059 Move X21, [X31+72]
	060 Move X24, [X31+48]
	061 Move X23, [X31+56]
	062 Move X26, [X31+32]
	063 Move X25, [X31+40]
	064 Move X30, [X31+16]
	065 Add X31, X31, 96
	066 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain, System.IntPtr nativeTex)

Disassembly:
	0x03C1EC8C MOV W19, W1
	0x03C1EC90 BL 0x3C1AE64
	0x03C1EC94 SUB W8, W19, 0x1E
	0x03C1EC98 CMP W8, 0x3
	0x03C1EC9C MOV W21, W0
	0x03C1ECA0 B.HI 0x3C1ECDC
	0x03C1ECA4 TBZ X21, 0x0, 0x3C1ECDC
	0x03C1ECA8 CMP W20, W22
	0x03C1ECAC B.NE 0x3C1ECF4
	0x03C1ECB0 ADRP X22, 0x7C7000
	0x03C1ECB4 LDR X8, [X22 + 0xB8]
	0x03C1ECB8 CBNZ X8, 0x3C1ECD0
	0x03C1ECBC ADRP X0, 0xFFFFFFFFFCEF4000
	0x03C1ECC0 ADD X0, X0, 0xD25
	0x03C1ECC4 BL 0x1C16CB8
	0x03C1ECC8 MOV X8, X0
	0x03C1ECCC STR X0, [X22 + 0xB8]
	0x03C1ECD0 MOV W0, W20
	0x03C1ECD4 BLR X8
	0x03C1ECD8 TBZ X0, 0x0, 0x3C1ECF4
	0x03C1ECDC AND W0, W21, 0x1
	0x03C1ECE0 LDP X20, X19, [X31 + 0x40]
	0x03C1ECE4 LDP X22, X21, [X31 + 0x30]
	0x03C1ECE8 LDR X30, [X31 + 0x20]
	0x03C1ECEC ADD X31, X31, 0x50
	0x03C1ECF0 RET
	0x03C1ECF4 ADRP X0, 0x535000
	0x03C1ECF8 LDR X0, [X0 + 0x4C0]
	0x03C1ECFC BL 0x1C16D08
	0x03C1ED00 MOVN X8, 0x0
	0x03C1ED04 STP X0, X8, [X31 + 0x8]
	0x03C1ED08 ADD X0, X31, 0x8
	0x03C1ED0C MOV X1, X31
	0x03C1ED10 STR W19, [X31 + 0x18]
	0x03C1ED14 BL 0x33B162C
	0x03C1ED18 MOV X19, X0
	0x03C1ED1C ADRP X0, 0x541000
	0x03C1ED20 LDR X0, [X0 + 0x60]
	0x03C1ED24 BL 0x1C16D08
	0x03C1ED28 MOV X1, X19
	0x03C1ED2C MOV X2, X31
	0x03C1ED30 BL 0x321EFD0
	0x03C1ED34 MOV X19, X0
	0x03C1ED38 ADRP X0, 0x4FE000
	0x03C1ED3C LDR X0, [X0 + 0x1D0]
	0x03C1ED40 BL 0x1C16D08
	0x03C1ED44 BL 0x1C16F10
	0x03C1ED48 MOV X1, X19
	0x03C1ED4C MOV X2, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X26, 0x7C7000
	012 Move W8, [X26+3453]
	013 Move X19, X6
	014 Move W25, W5
	015 Move W20, W4
	016 Move W21, W3
	017 Move W22, W2
	018 Move W23, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {38}
	024 Move TEMP, X25
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {47}
	028 Move X25, 0x542000
	029 Move X25, [X25+72]
	030 Move X0, [X25]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X25]
	036 Move X8, [X0+184]
	037 Move W5, [X8]
	038 Move X0, 0x542000
	039 Move X0, [X0+72]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X26+3453], W8
	043 Move TEMP, X25
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {28}
	047 Move W5, 1
	048 Move X0, X24
	049 Move W1, W23
	050 Move W2, W22
	051 Move W3, W21
	052 Move W4, W20
	053 Move X6, X19
	054 Move W7, W31
	055 Call Texture3D..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	056 Move X20, [X31+80]
	057 Move X19, [X31+88]
	058 Move X22, [X31+64]
	059 Move X21, [X31+72]
	060 Move X24, [X31+48]
	061 Move X23, [X31+56]
	062 Move X26, [X31+32]
	063 Move X25, [X31+40]
	064 Move X30, [X31+16]
	065 Add X31, X31, 96
	066 Return 

Method: System.Void Apply(System.Boolean updateMipmaps, System.Boolean makeNoLongerReadable)

Disassembly:
	0x03C1ED50 MOV X20, X0
	0x03C1ED54 BL 0x3C363D0
	0x03C1ED58 ADRP X0, 0x541000
	0x03C1ED5C LDR X0, [X0 + 0x148]
	0x03C1ED60 BL 0x1C16D08
	0x03C1ED64 MOV X1, X0
	0x03C1ED68 MOV X0, X20
	0x03C1ED6C BL 0x1C16DEC
	0x03C1ED70 STR X30, [X31 - 0x20]!
	0x03C1ED74 STP X20, X19, [X31 + 0x10]
	0x03C1ED78 ADRP X20, 0x7C7000
	0x03C1ED7C LDR X1, [X20 + 0xB8]
	0x03C1ED80 MOV W19, W0
	0x03C1ED84 CBNZ X1, 0x3C1ED9C
	0x03C1ED88 ADRP X0, 0xFFFFFFFFFCEF4000
	0x03C1ED8C ADD X0, X0, 0xD25
	0x03C1ED90 BL 0x1C16CB8
	0x03C1ED94 MOV X1, X0
	0x03C1ED98 STR X0, [X20 + 0xB8]
	0x03C1ED9C MOV W0, W19
	0x03C1EDA0 LDP X20, X19, [X31 + 0x10]
	0x03C1EDA4 LDR X30, [X31], #0x20
	0x03C1EDA8 BR X1
	0x03C1EDAC SUB X31, X31, 0x50
	0x03C1EDB0 STP X30, X23, [X31 + 0x20]
	0x03C1EDB4 STP X22, X21, [X31 + 0x30]
	0x03C1EDB8 STP X20, X19, [X31 + 0x40]
	0x03C1EDBC ADRP X23, 0x7C6000
	0x03C1EDC0 LDRB W8, [X23 + 0xDB0]
	0x03C1EDC4 MOV W22, W3
	0x03C1EDC8 MOV W20, W2
	0x03C1EDCC MOV W19, W1
	0x03C1EDD0 MOV X21, X0
	0x03C1EDD4 TBNZ X8, 0x0, 0x3C1EDEC
	0x03C1EDD8 ADRP X0, 0x535000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move W21, W1
	008 Move W20, W2
	009 Move X19, X0
	010 Move X9, [X8+488]
	011 Move X8, [X8+496]
	012 Move X1, X8
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {36}
	018 Move X22, 0x7C7000
	019 Move X3, [X22+3424]
	020 Compare X3, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51376128
	023 Add X0, X0, 2962
	024 Call 0x1C17CB8
	025 Move X3, X0
	026 Move [X22+3424], X0
	027 And W1, W21, 1
	028 And W2, W20, 1
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 CallNoReturn X3
	036 Move X1, X19
	037 Call Texture.CreateNonReadableException, X0, X1
	038 Move X19, X0
	039 Move X0, 0x542000
	040 Move X0, [X0+256]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Call 0x1C17DEC

Method: System.Void Apply(System.Boolean updateMipmaps)

Disassembly:
	0x03C1EDDC LDR X0, [X0 + 0x90]
	0x03C1EDE0 BL 0x1C16CF4
	0x03C1EDE4 MOVZ W8, 0x1

ISIL:
	001 And W1, W1, 1
	002 Move W2, W31
	003 Call Texture3D.Apply, X0, X1, X2
	004 Return 

Method: System.Void Apply()

Disassembly:
	0x03C1EDE8 STRB W8, [X23 + 0xDB0]
	0x03C1EDEC MOV X0, X21
	0x03C1EDF0 MOV W1, W19

ISIL:
	001 Move W1, 1
	002 Move W2, W31
	003 Call Texture3D.Apply, X0, X1, X2
	004 Return 

Method: System.Void SetPixel(System.Int32 x, System.Int32 y, System.Int32 z, UnityEngine.Color color, System.Int32 mipLevel)

Disassembly:
	0x03C1EDF4 MOV W2, W31
	0x03C1EDF8 MOV X3, X31
	0x03C1EDFC BL 0x3C1B024
	0x03C1EE00 MOV W21, W0
	0x03C1EE04 TBZ X0, 0x0, 0x3C1EE64
	0x03C1EE08 ADRP X8, 0x535000
	0x03C1EE0C LDR X8, [X8 + 0x90]
	0x03C1EE10 LDR X0, [X8]
	0x03C1EE14 LDR W8, [X0 + 0xE0]
	0x03C1EE18 CBNZ W8, 0x3C1EE20
	0x03C1EE1C BL 0x1C16DFC
	0x03C1EE20 MOV W0, W19
	0x03C1EE24 MOV X1, X31
	0x03C1EE28 BL 0x3C61CB0
	0x03C1EE2C TBZ X0, 0x0, 0x3C1EE64
	0x03C1EE30 CMP W20, W22
	0x03C1EE34 B.NE 0x3C1EE7C
	0x03C1EE38 ADRP X22, 0x7C7000
	0x03C1EE3C LDR X8, [X22 + 0xB8]
	0x03C1EE40 CBNZ X8, 0x3C1EE58
	0x03C1EE44 ADRP X0, 0xFFFFFFFFFCEF4000
	0x03C1EE48 ADD X0, X0, 0xD25
	0x03C1EE4C BL 0x1C16CB8
	0x03C1EE50 MOV X8, X0
	0x03C1EE54 STR X0, [X22 + 0xB8]
	0x03C1EE58 MOV W0, W20
	0x03C1EE5C BLR X8
	0x03C1EE60 TBZ X0, 0x0, 0x3C1EE7C
	0x03C1EE64 AND W0, W21, 0x1
	0x03C1EE68 LDP X20, X19, [X31 + 0x40]
	0x03C1EE6C LDP X22, X21, [X31 + 0x30]
	0x03C1EE70 LDP X30, X23, [X31 + 0x20]
	0x03C1EE74 ADD X31, X31, 0x50
	0x03C1EE78 RET
	0x03C1EE7C ADRP X0, 0x535000
	0x03C1EE80 LDR X0, [X0 + 0x4B8]
	0x03C1EE84 BL 0x1C16D08
	0x03C1EE88 MOVN X8, 0x0
	0x03C1EE8C STP X0, X8, [X31 + 0x8]
	0x03C1EE90 ADD X0, X31, 0x8
	0x03C1EE94 MOV X1, X31
	0x03C1EE98 STR W19, [X31 + 0x18]
	0x03C1EE9C BL 0x33B162C
	0x03C1EEA0 MOV X19, X0
	0x03C1EEA4 ADRP X0, 0x541000
	0x03C1EEA8 LDR X0, [X0 + 0x60]
	0x03C1EEAC BL 0x1C16D08
	0x03C1EEB0 MOV X1, X19
	0x03C1EEB4 MOV X2, X31
	0x03C1EEB8 BL 0x321EFD0
	0x03C1EEBC MOV X19, X0
	0x03C1EEC0 ADRP X0, 0x4FE000
	0x03C1EEC4 LDR X0, [X0 + 0x1D0]
	0x03C1EEC8 BL 0x1C16D08
	0x03C1EECC BL 0x1C16F10
	0x03C1EED0 MOV X1, X19
	0x03C1EED4 MOV X2, X31
	0x03C1EED8 MOV X20, X0
	0x03C1EEDC BL 0x3C363D0
	0x03C1EEE0 ADRP X0, 0x541000
	0x03C1EEE4 LDR X0, [X0 + 0x150]
	0x03C1EEE8 BL 0x1C16D08
	0x03C1EEEC MOV X1, X0
	0x03C1EEF0 MOV X0, X20
	0x03C1EEF4 BL 0x1C16DEC
	0x03C1EEF8 STP X30, X23, [X31 - 0x30]!
	0x03C1EEFC STP X22, X21, [X31 + 0x10]
	0x03C1EF00 STP X20, X19, [X31 + 0x20]
	0x03C1EF04 MOV W22, W1
	0x03C1EF08 MOV X23, X0
	0x03C1EF0C MOV W0, W4
	0x03C1EF10 MOV X1, X31
	0x03C1EF14 MOV W19, W5
	0x03C1EF18 MOV W20, W3
	0x03C1EF1C MOV W21, W2
	0x03C1EF20 BL 0x3C3C544
	0x03C1EF24 MOV W1, W22
	0x03C1EF28 MOV W2, W21
	0x03C1EF2C MOV W3, W20
	0x03C1EF30 MOV W5, W19
	0x03C1EF34 LDP X20, X19, [X31 + 0x20]
	0x03C1EF38 LDP X22, X21, [X31 + 0x10]
	0x03C1EF3C MOV W4, W0
	0x03C1EF40 MOV X0, X23
	0x03C1EF44 LDP X30, X23, [X31], #0x30
	0x03C1EF48 B 0x3C1EF4C
	0x03C1EF4C STR X30, [X31 - 0x50]!
	0x03C1EF50 STP X26, X25, [X31 + 0x10]
	0x03C1EF54 STP X24, X23, [X31 + 0x20]
	0x03C1EF58 STP X22, X21, [X31 + 0x30]
	0x03C1EF5C STP X20, X19, [X31 + 0x40]
	0x03C1EF60 ADRP X26, 0x7C6000
	0x03C1EF64 ADRP X25, 0x541000
	0x03C1EF68 LDRB W8, [X26 + 0xDB2]
	0x03C1EF6C LDR X25, [X25 + 0x48]
	0x03C1EF70 MOV W19, W5
	0x03C1EF74 MOV W20, W4
	0x03C1EF78 MOV W21, W3
	0x03C1EF7C MOV W22, W2
	0x03C1EF80 MOV W23, W1
	0x03C1EF84 MOV X24, X0
	0x03C1EF88 TBNZ X8, 0x0, 0x3C1EFA0
	0x03C1EF8C ADRP X0, 0x541000
	0x03C1EF90 LDR X0, [X0 + 0x48]
	0x03C1EF94 BL 0x1C16CF4
	0x03C1EF98 MOVZ W8, 0x1
	0x03C1EF9C STRB W8, [X26 + 0xDB2]
	0x03C1EFA0 LDR X0, [X25]
	0x03C1EFA4 LDR W8, [X0 + 0xE0]
	0x03C1EFA8 CBNZ W8, 0x3C1EFB4
	0x03C1EFAC BL 0x1C16DFC
	0x03C1EFB0 LDR X0, [X25]
	0x03C1EFB4 LDR X8, [X0 + 0xB8]
	0x03C1EFB8 MOV X0, X24
	0x03C1EFBC MOV W1, W23
	0x03C1EFC0 MOV W2, W22
	0x03C1EFC4 LDR W6, [X8]
	0x03C1EFC8 MOV W3, W21
	0x03C1EFCC MOV W4, W20
	0x03C1EFD0 MOV W5, W19
	0x03C1EFD4 LDP X20, X19, [X31 + 0x40]
	0x03C1EFD8 LDP X22, X21, [X31 + 0x30]
	0x03C1EFDC LDP X24, X23, [X31 + 0x20]
	0x03C1EFE0 LDP X26, X25, [X31 + 0x10]
	0x03C1EFE4 LDR X30, [X31], #0x50
	0x03C1EFE8 B 0x3C1F154
	0x03C1EFEC SUB X31, X31, 0x60
	0x03C1EFF0 STR X30, [X31 + 0x10]
	0x03C1EFF4 STP X26, X25, [X31 + 0x20]
	0x03C1EFF8 STP X24, X23, [X31 + 0x30]
	0x03C1EFFC STP X22, X21, [X31 + 0x40]
	0x03C1F000 STP X20, X19, [X31 + 0x50]
	0x03C1F004 ADRP X26, 0x7C5000
	0x03C1F008 LDRB W8, [X26 + 0xDB1]
	0x03C1F00C MOV W20, W6
	0x03C1F010 MOV W19, W5
	0x03C1F014 MOV W25, W4
	0x03C1F018 MOV W21, W3
	0x03C1F01C MOV W22, W2
	0x03C1F020 MOV W23, W1
	0x03C1F024 MOV X24, X0
	0x03C1F028 TBNZ X8, 0x0, 0x3C1F040
	0x03C1F02C ADRP X0, 0x540000
	0x03C1F030 LDR X0, [X0 + 0x48]
	0x03C1F034 BL 0x1C16CF4
	0x03C1F038 MOVZ W8, 0x1
	0x03C1F03C STRB W8, [X26 + 0xDB1]
	0x03C1F040 MOV W0, W25
	0x03C1F044 MOV X1, X31
	0x03C1F048 BL 0x3C3C544
	0x03C1F04C MOV W4, W0
	0x03C1F050 MOV X0, X24
	0x03C1F054 MOV W1, W23
	0x03C1F058 MOV W2, W22
	0x03C1F05C MOV W3, W21
	0x03C1F060 MOV W5, W19
	0x03C1F064 BL 0x3C1EF4C
	0x03C1F068 MOV W0, W25
	0x03C1F06C MOV X1, X31
	0x03C1F070 BL 0x3C3C544
	0x03C1F074 MOV W25, W0
	0x03C1F078 MOV X0, X24
	0x03C1F07C MOV W1, W25
	0x03C1F080 MOV W2, W23
	0x03C1F084 MOV W3, W22
	0x03C1F088 BL 0x3C1EDAC
	0x03C1F08C TBZ X0, 0x0, 0x3C1F0E4
	0x03C1F090 ADRP X26, 0x540000
	0x03C1F094 LDR X26, [X26 + 0x48]
	0x03C1F098 MOV W0, W19
	0x03C1F09C BL 0x3C1F100
	0x03C1F0A0 LDR X0, [X26]
	0x03C1F0A4 LDR W8, [X0 + 0xE0]
	0x03C1F0A8 CBNZ W8, 0x3C1F0B0
	0x03C1F0AC BL 0x1C16DFC
	0x03C1F0B0 MOV X0, X24
	0x03C1F0B4 MOV W1, W25
	0x03C1F0B8 MOV X2, X31
	0x03C1F0BC BL 0x3C1AE04
	0x03C1F0C0 MOV W6, W0
	0x03C1F0C4 MOV X0, X24
	0x03C1F0C8 MOV W1, W23
	0x03C1F0CC MOV W2, W22
	0x03C1F0D0 MOV W3, W21
	0x03C1F0D4 MOV W4, W20
	0x03C1F0D8 MOV W5, W25
	0x03C1F0DC MOV W7, W19
	0x03C1F0E0 BL 0x3C1EB94
	0x03C1F0E4 LDP X20, X19, [X31 + 0x50]
	0x03C1F0E8 LDP X22, X21, [X31 + 0x40]
	0x03C1F0EC LDP X24, X23, [X31 + 0x30]
	0x03C1F0F0 LDP X26, X25, [X31 + 0x20]
	0x03C1F0F4 LDR X30, [X31 + 0x10]
	0x03C1F0F8 ADD X31, X31, 0x60
	0x03C1F0FC RET
	0x03C1F100 TBNZ X0, 0x6, 0x3C1F108
	0x03C1F104 RET
	0x03C1F108 STP X30, X19, [X31 - 0x10]!
	0x03C1F10C ADRP X0, 0x4DC000
	0x03C1F110 LDR X0, [X0 + 0x578]
	0x03C1F114 BL 0x1C16D08
	0x03C1F118 BL 0x1C16F10
	0x03C1F11C MOV X19, X0
	0x03C1F120 ADRP X0, 0x540000
	0x03C1F124 LDR X0, [X0 + 0x158]
	0x03C1F128 BL 0x1C16D08
	0x03C1F12C MOV X1, X0
	0x03C1F130 MOV X0, X19
	0x03C1F134 MOV X2, X31
	0x03C1F138 BL 0x3314A68
	0x03C1F13C ADRP X0, 0x540000
	0x03C1F140 LDR X0, [X0 + 0x160]
	0x03C1F144 BL 0x1C16D08
	0x03C1F148 MOV X1, X0
	0x03C1F14C MOV X0, X19
	0x03C1F150 BL 0x1C16DEC
	0x03C1F154 SUB X31, X31, 0x60
	0x03C1F158 STP X30, X27, [X31 + 0x10]
	0x03C1F15C STP X26, X25, [X31 + 0x20]
	0x03C1F160 STP X24, X23, [X31 + 0x30]
	0x03C1F164 STP X22, X21, [X31 + 0x40]
	0x03C1F168 STP X20, X19, [X31 + 0x50]
	0x03C1F16C ADRP X27, 0x7C5000
	0x03C1F170 ADRP X26, 0x540000
	0x03C1F174 LDRB W8, [X27 + 0xDB3]
	0x03C1F178 LDR X26, [X26 + 0x48]
	0x03C1F17C MOV W20, W6
	0x03C1F180 MOV W19, W5
	0x03C1F184 MOV W21, W4
	0x03C1F188 MOV W22, W3
	0x03C1F18C MOV W23, W2
	0x03C1F190 MOV W24, W1
	0x03C1F194 MOV X25, X0
	0x03C1F198 TBNZ X8, 0x0, 0x3C1F1B0
	0x03C1F19C ADRP X0, 0x540000
	0x03C1F1A0 LDR X0, [X0 + 0x48]
	0x03C1F1A4 BL 0x1C16CF4
	0x03C1F1A8 MOVZ W8, 0x1
	0x03C1F1AC STRB W8, [X27 + 0xDB3]
	0x03C1F1B0 LDR X0, [X26]
	0x03C1F1B4 LDR W8, [X0 + 0xE0]
	0x03C1F1B8 CBNZ W8, 0x3C1F1C0
	0x03C1F1BC BL 0x1C16DFC
	0x03C1F1C0 MOV X0, X25
	0x03C1F1C4 MOV X1, X31
	0x03C1F1C8 BL 0x3C1A69C
	0x03C1F1CC MOV X0, X25
	0x03C1F1D0 MOV W1, W21
	0x03C1F1D4 MOV W2, W24
	0x03C1F1D8 MOV W3, W23
	0x03C1F1DC BL 0x3C1EDAC
	0x03C1F1E0 TBZ X0, 0x0, 0x3C1F230
	0x03C1F1E4 MOV W0, W19
	0x03C1F1E8 BL 0x3C1F100
	0x03C1F1EC LDR X0, [X26]
	0x03C1F1F0 LDR W8, [X0 + 0xE0]
	0x03C1F1F4 CBNZ W8, 0x3C1F1FC
	0x03C1F1F8 BL 0x1C16DFC
	0x03C1F1FC MOV X0, X25
	0x03C1F200 MOV W1, W21
	0x03C1F204 MOV X2, X31
	0x03C1F208 BL 0x3C1AE04
	0x03C1F20C MOV W6, W0
	0x03C1F210 MOV X0, X25
	0x03C1F214 MOV W1, W24
	0x03C1F218 MOV W2, W23
	0x03C1F21C MOV W3, W22
	0x03C1F220 MOV W4, W20
	0x03C1F224 MOV W5, W21
	0x03C1F228 MOV W7, W19
	0x03C1F22C BL 0x3C1EB94
	0x03C1F230 LDP X20, X19, [X31 + 0x50]
	0x03C1F234 LDP X22, X21, [X31 + 0x40]
	0x03C1F238 LDP X24, X23, [X31 + 0x30]
	0x03C1F23C LDP X26, X25, [X31 + 0x20]
	0x03C1F240 LDP X30, X27, [X31 + 0x10]
	0x03C1F244 ADD X31, X31, 0x60
	0x03C1F248 RET
	0x03C1F24C STP X29, X30, [X31 - 0x60]!
	0x03C1F250 STP X28, X27, [X31 + 0x10]
	0x03C1F254 STP X26, X25, [X31 + 0x20]
	0x03C1F258 STP X24, X23, [X31 + 0x30]
	0x03C1F25C STP X22, X21, [X31 + 0x40]
	0x03C1F260 STP X20, X19, [X31 + 0x50]
	0x03C1F264 ADRP X27, 0x7C5000
	0x03C1F268 ADRP X28, 0x540000
	0x03C1F26C LDRB W8, [X27 + 0xDB4]
	0x03C1F270 LDR X28, [X28 + 0x48]
	0x03C1F274 MOV W25, W7
	0x03C1F278 MOV W24, W6
	0x03C1F27C MOV W19, W5
	0x03C1F280 MOV W26, W4
	0x03C1F284 MOV W20, W3
	0x03C1F288 MOV W21, W2
	0x03C1F28C MOV W22, W1
	0x03C1F290 MOV X23, X0
	0x03C1F294 TBNZ X8, 0x0, 0x3C1F2B8
	0x03C1F298 ADRP X0, 0x534000
	0x03C1F29C LDR X0, [X0 + 0x90]
	0x03C1F2A0 BL 0x1C16CF4
	0x03C1F2A4 ADRP X0, 0x540000
	0x03C1F2A8 LDR X0, [X0 + 0x48]
	0x03C1F2AC BL 0x1C16CF4
	0x03C1F2B0 MOVZ W8, 0x1
	0x03C1F2B4 STRB W8, [X27 + 0xDB4]
	0x03C1F2B8 LDR X0, [X28]
	0x03C1F2BC LDR W8, [X0 + 0xE0]
	0x03C1F2C0 CBNZ W8, 0x3C1F2C8
	0x03C1F2C4 BL 0x1C16DFC
	0x03C1F2C8 MOV X0, X23
	0x03C1F2CC MOV X1, X31
	0x03C1F2D0 BL 0x3C1A69C
	0x03C1F2D4 MOV X0, X23
	0x03C1F2D8 MOV W1, W26
	0x03C1F2DC MOV W2, W22
	0x03C1F2E0 MOV W3, W21
	0x03C1F2E4 BL 0x3C1EC70
	0x03C1F2E8 TBZ X0, 0x0, 0x3C1F3C0
	0x03C1F2EC ADRP X29, 0x534000
	0x03C1F2F0 LDR X29, [X29 + 0x90]
	0x03C1F2F4 LDR X0, [X29]
	0x03C1F2F8 LDR W8, [X0 + 0xE0]
	0x03C1F2FC CBNZ W8, 0x3C1F304
	0x03C1F300 BL 0x1C16DFC
	0x03C1F304 ORN W8, W31, W24, 0x0
	0x03C1F308 AND W1, W8, 0x1
	0x03C1F30C MOV W0, W26
	0x03C1F310 MOV X2, X31
	0x03C1F314 BL 0x3C61468
	0x03C1F318 MOV W27, W0
	0x03C1F31C LDR X0, [X29]
	0x03C1F320 CMP W19, 0x1
	0x03C1F324 CSET W29, NE
	0x03C1F328 LDR W8, [X0 + 0xE0]
	0x03C1F32C CBNZ W8, 0x3C1F334
	0x03C1F330 BL 0x1C16DFC
	0x03C1F334 MOV W0, W26
	0x03C1F338 MOV X1, X31
	0x03C1F33C BL 0x3C61CEC
	0x03C1F340 ORR W8, W29, 0x40
	0x03C1F344 ANDS W31, W0, 0x1
	0x03C1F348 MOVZ W9, 0x404
	0x03C1F34C CSEL W8, W8, W29, NE
	0x03C1F350 ORR W9, W8, W9, 0x0
	0x03C1F354 ANDS W31, W25, 0x1
	0x03C1F358 CSEL W25, W9, W8, NE
	0x03C1F35C MOV W0, W25
	0x03C1F360 BL 0x3C1F100
	0x03C1F364 LDR X0, [X28]
	0x03C1F368 LDR W8, [X0 + 0xE0]
	0x03C1F36C CBNZ W8, 0x3C1F374
	0x03C1F370 BL 0x1C16DFC
	0x03C1F374 AND W1, W24, 0x1
	0x03C1F378 MOV X0, X23
	0x03C1F37C MOV X2, X31
	0x03C1F380 BL 0x3C1ADF8
	0x03C1F384 MOV W6, W0
	0x03C1F388 MOV X0, X23
	0x03C1F38C MOV W1, W22
	0x03C1F390 MOV W2, W21
	0x03C1F394 MOV W3, W20
	0x03C1F398 MOV W4, W19
	0x03C1F39C MOV W5, W27
	0x03C1F3A0 MOV W7, W25
	0x03C1F3A4 LDP X20, X19, [X31 + 0x50]
	0x03C1F3A8 LDP X22, X21, [X31 + 0x40]
	0x03C1F3AC LDP X24, X23, [X31 + 0x30]
	0x03C1F3B0 LDP X26, X25, [X31 + 0x20]
	0x03C1F3B4 LDP X28, X27, [X31 + 0x10]
	0x03C1F3B8 LDP X29, X30, [X31], #0x60
	0x03C1F3BC B 0x3C1EB94
	0x03C1F3C0 LDP X20, X19, [X31 + 0x50]
	0x03C1F3C4 LDP X22, X21, [X31 + 0x40]
	0x03C1F3C8 LDP X24, X23, [X31 + 0x30]
	0x03C1F3CC LDP X26, X25, [X31 + 0x20]
	0x03C1F3D0 LDP X28, X27, [X31 + 0x10]
	0x03C1F3D4 LDP X29, X30, [X31], #0x60
	0x03C1F3D8 RET
	0x03C1F3DC SUB X31, X31, 0x20
	0x03C1F3E0 STR X30, [X31 + 0x10]
	0x03C1F3E4 AND W6, W6, 0x1
	0x03C1F3E8 MOV W7, W31
	0x03C1F3EC BL 0x3C1F24C
	0x03C1F3F0 LDR X30, [X31 + 0x10]
	0x03C1F3F4 ADD X31, X31, 0x20
	0x03C1F3F8 RET
	0x03C1F3FC STP X30, X27, [X31 - 0x50]!
	0x03C1F400 STP X26, X25, [X31 + 0x10]
	0x03C1F404 STP X24, X23, [X31 + 0x20]
	0x03C1F408 STP X22, X21, [X31 + 0x30]
	0x03C1F40C STP X20, X19, [X31 + 0x40]
	0x03C1F410 ADRP X27, 0x7C5000
	0x03C1F414 LDRB W8, [X27 + 0xDB5]
	0x03C1F418 MOV W21, W7
	0x03C1F41C MOV W23, W6
	0x03C1F420 MOV W26, W5
	0x03C1F424 MOV W19, W4
	0x03C1F428 MOV W20, W3
	0x03C1F42C MOV W22, W2
	0x03C1F430 MOV W24, W1
	0x03C1F434 MOV X25, X0
	0x03C1F438 TBZ X8, 0x0, 0x3C1F468
	0x03C1F43C TBZ X26, 0x0, 0x3C1F480
	0x03C1F440 ADRP X26, 0x540000
	0x03C1F444 LDR X26, [X26 + 0x48]
	0x03C1F448 LDR X0, [X26]
	0x03C1F44C LDR W8, [X0 + 0xE0]
	0x03C1F450 CBNZ W8, 0x3C1F45C
	0x03C1F454 BL 0x1C16DFC
	0x03C1F458 LDR X0, [X26]
	0x03C1F45C LDR X8, [X0 + 0xB8]
	0x03C1F460 LDR W5, [X8]
	0x03C1F464 B 0x3C1F484
	0x03C1F468 ADRP X0, 0x540000
	0x03C1F46C LDR X0, [X0 + 0x48]
	0x03C1F470 BL 0x1C16CF4
	0x03C1F474 MOVZ W8, 0x1
	0x03C1F478 STRB W8, [X27 + 0xDB5]
	0x03C1F47C TBNZ X26, 0x0, 0x3C1F440
	0x03C1F480 MOVZ W5, 0x1
	0x03C1F484 AND W6, W23, 0x1
	0x03C1F488 AND W7, W21, 0x1
	0x03C1F48C MOV X0, X25
	0x03C1F490 MOV W1, W24
	0x03C1F494 MOV W2, W22
	0x03C1F498 MOV W3, W20
	0x03C1F49C MOV W4, W19
	0x03C1F4A0 LDP X20, X19, [X31 + 0x40]
	0x03C1F4A4 LDP X22, X21, [X31 + 0x30]
	0x03C1F4A8 LDP X24, X23, [X31 + 0x20]
	0x03C1F4AC LDP X26, X25, [X31 + 0x10]
	0x03C1F4B0 LDP X30, X27, [X31], #0x50
	0x03C1F4B4 B 0x3C1F24C
	0x03C1F4B8 SUB X31, X31, 0x60
	0x03C1F4BC STR X30, [X31 + 0x10]
	0x03C1F4C0 STP X26, X25, [X31 + 0x20]
	0x03C1F4C4 STP X24, X23, [X31 + 0x30]
	0x03C1F4C8 STP X22, X21, [X31 + 0x40]
	0x03C1F4CC STP X20, X19, [X31 + 0x50]
	0x03C1F4D0 ADRP X26, 0x7C5000
	0x03C1F4D4 LDRB W8, [X26 + 0xDB6]
	0x03C1F4D8 MOV W22, W6
	0x03C1F4DC MOV W25, W5
	0x03C1F4E0 MOV W19, W4
	0x03C1F4E4 MOV W20, W3
	0x03C1F4E8 MOV W21, W2
	0x03C1F4EC MOV W23, W1
	0x03C1F4F0 MOV X24, X0
	0x03C1F4F4 TBZ X8, 0x0, 0x3C1F524
	0x03C1F4F8 TBZ X25, 0x0, 0x3C1F53C
	0x03C1F4FC ADRP X25, 0x540000
	0x03C1F500 LDR X25, [X25 + 0x48]
	0x03C1F504 LDR X0, [X25]
	0x03C1F508 LDR W8, [X0 + 0xE0]
	0x03C1F50C CBNZ W8, 0x3C1F518
	0x03C1F510 BL 0x1C16DFC
	0x03C1F514 LDR X0, [X25]
	0x03C1F518 LDR X8, [X0 + 0xB8]
	0x03C1F51C LDR W5, [X8]
	0x03C1F520 B 0x3C1F540
	0x03C1F524 ADRP X0, 0x540000
	0x03C1F528 LDR X0, [X0 + 0x48]
	0x03C1F52C BL 0x1C16CF4
	0x03C1F530 MOVZ W8, 0x1
	0x03C1F534 STRB W8, [X26 + 0xDB6]
	0x03C1F538 TBNZ X25, 0x0, 0x3C1F4FC
	0x03C1F53C MOVZ W5, 0x1
	0x03C1F540 AND W6, W22, 0x1
	0x03C1F544 MOV X0, X24
	0x03C1F548 MOV W1, W23
	0x03C1F54C MOV W2, W21
	0x03C1F550 MOV W3, W20
	0x03C1F554 MOV W4, W19
	0x03C1F558 MOV W7, W31
	0x03C1F55C BL 0x3C1F24C
	0x03C1F560 LDP X20, X19, [X31 + 0x50]
	0x03C1F564 LDP X22, X21, [X31 + 0x40]
	0x03C1F568 LDP X24, X23, [X31 + 0x30]
	0x03C1F56C LDP X26, X25, [X31 + 0x20]
	0x03C1F570 LDR X30, [X31 + 0x10]
	0x03C1F574 ADD X31, X31, 0x60
	0x03C1F578 RET
	0x03C1F57C SUB X31, X31, 0x50
	0x03C1F580 STP X30, X25, [X31 + 0x10]
	0x03C1F584 STP X24, X23, [X31 + 0x20]
	0x03C1F588 STP X22, X21, [X31 + 0x30]
	0x03C1F58C STP X20, X19, [X31 + 0x40]
	0x03C1F590 ADRP X25, 0x7C5000
	0x03C1F594 LDRB W8, [X25 + 0xDB7]
	0x03C1F598 MOV W24, W5
	0x03C1F59C MOV W19, W4
	0x03C1F5A0 MOV W20, W3
	0x03C1F5A4 MOV W21, W2
	0x03C1F5A8 MOV W22, W1
	0x03C1F5AC MOV X23, X0
	0x03C1F5B0 TBZ X8, 0x0, 0x3C1F5E0
	0x03C1F5B4 TBZ X24, 0x0, 0x3C1F5F8
	0x03C1F5B8 ADRP X24, 0x540000
	0x03C1F5BC LDR X24, [X24 + 0x48]
	0x03C1F5C0 LDR X0, [X24]
	0x03C1F5C4 LDR W8, [X0 + 0xE0]
	0x03C1F5C8 CBNZ W8, 0x3C1F5D4
	0x03C1F5CC BL 0x1C16DFC
	0x03C1F5D0 LDR X0, [X24]
	0x03C1F5D4 LDR X8, [X0 + 0xB8]
	0x03C1F5D8 LDR W5, [X8]
	0x03C1F5DC B 0x3C1F5FC
	0x03C1F5E0 ADRP X0, 0x540000
	0x03C1F5E4 LDR X0, [X0 + 0x48]
	0x03C1F5E8 BL 0x1C16CF4
	0x03C1F5EC MOVZ W8, 0x1
	0x03C1F5F0 STRB W8, [X25 + 0xDB7]
	0x03C1F5F4 TBNZ X24, 0x0, 0x3C1F5B8
	0x03C1F5F8 MOVZ W5, 0x1
	0x03C1F5FC MOV X0, X23
	0x03C1F600 MOV W1, W22
	0x03C1F604 MOV W2, W21
	0x03C1F608 MOV W3, W20
	0x03C1F60C MOV W4, W19
	0x03C1F610 MOV W6, W31
	0x03C1F614 MOV W7, W31
	0x03C1F618 BL 0x3C1F24C
	0x03C1F61C LDP X20, X19, [X31 + 0x40]
	0x03C1F620 LDP X22, X21, [X31 + 0x30]
	0x03C1F624 LDP X24, X23, [X31 + 0x20]
	0x03C1F628 LDP X30, X25, [X31 + 0x10]
	0x03C1F62C ADD X31, X31, 0x50
	0x03C1F630 RET
	0x03C1F634 STR X30, [X31 - 0x20]!
	0x03C1F638 STP X20, X19, [X31 + 0x10]
	0x03C1F63C ADRP X20, 0x7C5000
	0x03C1F640 LDR X1, [X20 + 0xDB8]
	0x03C1F644 MOV X19, X0
	0x03C1F648 CBNZ X1, 0x3C1F660
	0x03C1F64C ADRP X0, 0xFFFFFFFFFCF01000
	0x03C1F650 ADD X0, X0, 0xA0F
	0x03C1F654 BL 0x1C16CB8
	0x03C1F658 MOV X1, X0
	0x03C1F65C STR X0, [X20 + 0xDB8]
	0x03C1F660 MOV X0, X19
	0x03C1F664 LDP X20, X19, [X31 + 0x10]
	0x03C1F668 LDR X30, [X31], #0x20
	0x03C1F66C BR X1
	0x03C1F670 STR X30, [X31 - 0x50]!
	0x03C1F674 STP X26, X25, [X31 + 0x10]
	0x03C1F678 STP X24, X23, [X31 + 0x20]
	0x03C1F67C STP X22, X21, [X31 + 0x30]
	0x03C1F680 STP X20, X19, [X31 + 0x40]
	0x03C1F684 ADRP X26, 0x7C5000
	0x03C1F688 LDR X7, [X26 + 0xDC0]
	0x03C1F68C MOV W19, W6
	0x03C1F690 MOV W20, W5
	0x03C1F694 MOV W21, W4
	0x03C1F698 MOV W22, W3
	0x03C1F69C MOV W23, W2
	0x03C1F6A0 MOV W24, W1
	0x03C1F6A4 MOV X25, X0
	0x03C1F6A8 CBNZ X7, 0x3C1F6C0
	0x03C1F6AC ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C1F6B0 ADD X0, X0, 0x282
	0x03C1F6B4 BL 0x1C16CB8
	0x03C1F6B8 MOV X7, X0
	0x03C1F6BC STR X0, [X26 + 0xDC0]
	0x03C1F6C0 MOV X0, X25
	0x03C1F6C4 MOV W1, W24
	0x03C1F6C8 MOV W2, W23
	0x03C1F6CC MOV W3, W22
	0x03C1F6D0 MOV W4, W21
	0x03C1F6D4 MOV W5, W20
	0x03C1F6D8 MOV W6, W19
	0x03C1F6DC LDP X20, X19, [X31 + 0x40]
	0x03C1F6E0 LDP X22, X21, [X31 + 0x30]
	0x03C1F6E4 LDP X24, X23, [X31 + 0x20]
	0x03C1F6E8 LDP X26, X25, [X31 + 0x10]
	0x03C1F6EC LDR X30, [X31], #0x50
	0x03C1F6F0 BR X7
	0x03C1F6F4 STR X30, [X31 - 0x50]!
	0x03C1F6F8 STP X26, X25, [X31 + 0x10]
	0x03C1F6FC STP X24, X23, [X31 + 0x20]
	0x03C1F700 STP X22, X21, [X31 + 0x30]
	0x03C1F704 STP X20, X19, [X31 + 0x40]
	0x03C1F708 ADRP X26, 0x7C5000
	0x03C1F70C LDR X8, [X26 + 0xDC0]
	0x03C1F710 MOV W19, W6
	0x03C1F714 MOV W20, W5
	0x03C1F718 MOV W21, W4
	0x03C1F71C MOV W22, W3
	0x03C1F720 MOV W23, W2
	0x03C1F724 MOV W24, W1
	0x03C1F728 MOV X25, X0
	0x03C1F72C CBNZ X8, 0x3C1F744
	0x03C1F730 ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C1F734 ADD X0, X0, 0x282
	0x03C1F738 BL 0x1C16CB8
	0x03C1F73C MOV X8, X0
	0x03C1F740 STR X0, [X26 + 0xDC0]
	0x03C1F744 MOV X0, X25
	0x03C1F748 MOV W1, W24
	0x03C1F74C MOV W2, W23
	0x03C1F750 MOV W3, W22
	0x03C1F754 MOV W4, W21
	0x03C1F758 MOV W5, W20
	0x03C1F75C MOV W6, W19
	0x03C1F760 BLR X8
	0x03C1F764 TBZ X0, 0x0, 0x3C1F780
	0x03C1F768 LDP X20, X19, [X31 + 0x40]
	0x03C1F76C LDP X22, X21, [X31 + 0x30]
	0x03C1F770 LDP X24, X23, [X31 + 0x20]
	0x03C1F774 LDP X26, X25, [X31 + 0x10]
	0x03C1F778 LDR X30, [X31], #0x50
	0x03C1F77C RET
	0x03C1F780 ADRP X0, 0x4FD000
	0x03C1F784 LDR X0, [X0 + 0x1D0]
	0x03C1F788 BL 0x1C16D08
	0x03C1F78C BL 0x1C16F10
	0x03C1F790 MOV X19, X0
	0x03C1F794 ADRP X0, 0x540000
	0x03C1F798 LDR X0, [X0 + 0x168]
	0x03C1F79C BL 0x1C16D08
	0x03C1F7A0 MOV X1, X0
	0x03C1F7A4 MOV X0, X19
	0x03C1F7A8 MOV X2, X31
	0x03C1F7AC BL 0x3C363D0
	0x03C1F7B0 ADRP X0, 0x540000
	0x03C1F7B4 LDR X0, [X0 + 0x170]
	0x03C1F7B8 BL 0x1C16D08
	0x03C1F7BC MOV X1, X0
	0x03C1F7C0 MOV X0, X19
	0x03C1F7C4 BL 0x1C16DEC
	0x03C1F7C8 STR X30, [X31 - 0x30]!
	0x03C1F7CC STP X22, X21, [X31 + 0x10]
	0x03C1F7D0 STP X20, X19, [X31 + 0x20]
	0x03C1F7D4 ADRP X22, 0x7C5000
	0x03C1F7D8 LDR X3, [X22 + 0xDC8]
	0x03C1F7DC MOV W19, W2
	0x03C1F7E0 MOV W20, W1
	0x03C1F7E4 MOV X21, X0
	0x03C1F7E8 CBNZ X3, 0x3C1F800
	0x03C1F7EC ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C1F7F0 ADD X0, X0, 0x1A8
	0x03C1F7F4 BL 0x1C16CB8
	0x03C1F7F8 MOV X3, X0
	0x03C1F7FC STR X0, [X22 + 0xDC8]
	0x03C1F800 AND W1, W20, 0x1
	0x03C1F804 AND W2, W19, 0x1
	0x03C1F808 MOV X0, X21
	0x03C1F80C LDP X20, X19, [X31 + 0x20]
	0x03C1F810 LDP X22, X21, [X31 + 0x10]
	0x03C1F814 LDR X30, [X31], #0x30
	0x03C1F818 BR X3
	0x03C1F81C STR X30, [X31 - 0x40]!
	0x03C1F820 STP X24, X23, [X31 + 0x10]
	0x03C1F824 STP X22, X21, [X31 + 0x20]
	0x03C1F828 STP X20, X19, [X31 + 0x30]
	0x03C1F82C ADRP X24, 0x7C5000
	0x03C1F830 LDR X5, [X24 + 0xDD0]
	0x03C1F834 MOV W19, W4
	0x03C1F838 MOV W20, W3
	0x03C1F83C MOV W21, W2
	0x03C1F840 MOV X22, X1
	0x03C1F844 MOV X23, X0
	0x03C1F848 CBNZ X5, 0x3C1F860
	0x03C1F84C ADRP X0, 0xFFFFFFFFFCF0B000
	0x03C1F850 ADD X0, X0, 0x7CF
	0x03C1F854 BL 0x1C16CB8
	0x03C1F858 MOV X5, X0
	0x03C1F85C STR X0, [X24 + 0xDD0]
	0x03C1F860 MOV X0, X23
	0x03C1F864 MOV X1, X22
	0x03C1F868 MOV W2, W21
	0x03C1F86C MOV W3, W20
	0x03C1F870 MOV W4, W19
	0x03C1F874 LDP X20, X19, [X31 + 0x30]
	0x03C1F878 LDP X22, X21, [X31 + 0x20]
	0x03C1F87C LDP X24, X23, [X31 + 0x10]
	0x03C1F880 LDR X30, [X31], #0x40
	0x03C1F884 BR X5
	0x03C1F888 STP X30, X23, [X31 - 0x30]!
	0x03C1F88C STP X22, X21, [X31 + 0x10]
	0x03C1F890 STP X20, X19, [X31 + 0x20]
	0x03C1F894 ADRP X23, 0x7C5000
	0x03C1F898 LDR X5, [X23 + 0xDD0]
	0x03C1F89C MOV W19, W3
	0x03C1F8A0 MOV W20, W2
	0x03C1F8A4 MOV X21, X1
	0x03C1F8A8 MOV X22, X0
	0x03C1F8AC CBNZ X5, 0x3C1F8C4
	0x03C1F8B0 ADRP X0, 0xFFFFFFFFFCF0B000
	0x03C1F8B4 ADD X0, X0, 0x7CF
	0x03C1F8B8 BL 0x1C16CB8
	0x03C1F8BC MOV X5, X0
	0x03C1F8C0 STR X0, [X23 + 0xDD0]
	0x03C1F8C4 MOV X0, X22
	0x03C1F8C8 MOV X1, X21
	0x03C1F8CC MOV W2, W20
	0x03C1F8D0 MOV W3, W19
	0x03C1F8D4 LDP X20, X19, [X31 + 0x20]
	0x03C1F8D8 LDP X22, X21, [X31 + 0x10]
	0x03C1F8DC MOV W4, W31
	0x03C1F8E0 LDP X30, X23, [X31], #0x30
	0x03C1F8E4 BR X5
	0x03C1F8E8 STR X30, [X31 - 0x30]!
	0x03C1F8EC STP X22, X21, [X31 + 0x10]
	0x03C1F8F0 STP X20, X19, [X31 + 0x20]
	0x03C1F8F4 MOV W21, W1
	0x03C1F8F8 MOV X22, X0
	0x03C1F8FC MOV W0, W3
	0x03C1F900 MOV X1, X31
	0x03C1F904 MOV W19, W4
	0x03C1F908 MOV W20, W2
	0x03C1F90C BL 0x3C3C544
	0x03C1F910 MOV W3, W0
	0x03C1F914 MOV X0, X22
	0x03C1F918 MOV W1, W21
	0x03C1F91C MOV W2, W20
	0x03C1F920 MOV W4, W19
	0x03C1F924 LDP X20, X19, [X31 + 0x20]
	0x03C1F928 LDP X22, X21, [X31 + 0x10]
	0x03C1F92C LDR X30, [X31], #0x30
	0x03C1F930 B 0x3C1F934
	0x03C1F934 STP X30, X25, [X31 - 0x40]!
	0x03C1F938 STP X24, X23, [X31 + 0x10]
	0x03C1F93C STP X22, X21, [X31 + 0x20]
	0x03C1F940 STP X20, X19, [X31 + 0x30]
	0x03C1F944 ADRP X25, 0x7C5000
	0x03C1F948 ADRP X24, 0x540000
	0x03C1F94C LDRB W8, [X25 + 0xDD8]
	0x03C1F950 LDR X24, [X24 + 0x48]
	0x03C1F954 MOV W19, W4
	0x03C1F958 MOV W20, W3
	0x03C1F95C MOV W21, W2
	0x03C1F960 MOV W22, W1
	0x03C1F964 MOV X23, X0
	0x03C1F968 TBNZ X8, 0x0, 0x3C1F980
	0x03C1F96C ADRP X0, 0x540000
	0x03C1F970 LDR X0, [X0 + 0x48]
	0x03C1F974 BL 0x1C16CF4
	0x03C1F978 MOVZ W8, 0x1
	0x03C1F97C STRB W8, [X25 + 0xDD8]
	0x03C1F980 LDR X0, [X24]
	0x03C1F984 LDR W8, [X0 + 0xE0]
	0x03C1F988 CBNZ W8, 0x3C1F994
	0x03C1F98C BL 0x1C16DFC
	0x03C1F990 LDR X0, [X24]
	0x03C1F994 LDR X8, [X0 + 0xB8]
	0x03C1F998 MOV X0, X23
	0x03C1F99C MOV W1, W22
	0x03C1F9A0 MOV W2, W21
	0x03C1F9A4 LDR W5, [X8]
	0x03C1F9A8 MOV W3, W20
	0x03C1F9AC MOV W4, W19
	0x03C1F9B0 LDP X20, X19, [X31 + 0x30]
	0x03C1F9B4 LDP X22, X21, [X31 + 0x20]
	0x03C1F9B8 LDP X24, X23, [X31 + 0x10]
	0x03C1F9BC LDP X30, X25, [X31], #0x40
	0x03C1F9C0 B 0x3C1FA18
	0x03C1F9C4 STP X30, X23, [X31 - 0x30]!
	0x03C1F9C8 STP X22, X21, [X31 + 0x10]
	0x03C1F9CC STP X20, X19, [X31 + 0x20]
	0x03C1F9D0 MOV W22, W1
	0x03C1F9D4 MOV X23, X0
	0x03C1F9D8 MOV W0, W3
	0x03C1F9DC MOV X1, X31
	0x03C1F9E0 MOV W19, W5
	0x03C1F9E4 MOV W20, W4
	0x03C1F9E8 MOV W21, W2
	0x03C1F9EC BL 0x3C3C544
	0x03C1F9F0 MOV W1, W22
	0x03C1F9F4 MOV W2, W21
	0x03C1F9F8 MOV W4, W20
	0x03C1F9FC MOV W5, W19
	0x03C1FA00 LDP X20, X19, [X31 + 0x20]
	0x03C1FA04 LDP X22, X21, [X31 + 0x10]
	0x03C1FA08 MOV W3, W0
	0x03C1FA0C MOV X0, X23
	0x03C1FA10 LDP X30, X23, [X31], #0x30
	0x03C1FA14 B 0x3C1FA18
	0x03C1FA18 STR X30, [X31 - 0x50]!
	0x03C1FA1C STP X26, X25, [X31 + 0x10]
	0x03C1FA20 STP X24, X23, [X31 + 0x20]
	0x03C1FA24 STP X22, X21, [X31 + 0x30]
	0x03C1FA28 STP X20, X19, [X31 + 0x40]
	0x03C1FA2C ADRP X26, 0x7C5000
	0x03C1FA30 ADRP X25, 0x540000
	0x03C1FA34 LDRB W8, [X26 + 0xDD9]
	0x03C1FA38 LDR X25, [X25 + 0x48]
	0x03C1FA3C MOV W20, W5
	0x03C1FA40 MOV W19, W4
	0x03C1FA44 MOV W21, W3
	0x03C1FA48 MOV W22, W2
	0x03C1FA4C MOV W23, W1
	0x03C1FA50 MOV X24, X0
	0x03C1FA54 TBNZ X8, 0x0, 0x3C1FA6C
	0x03C1FA58 ADRP X0, 0x540000
	0x03C1FA5C LDR X0, [X0 + 0x48]
	0x03C1FA60 BL 0x1C16CF4
	0x03C1FA64 MOVZ W8, 0x1
	0x03C1FA68 STRB W8, [X26 + 0xDD9]
	0x03C1FA6C LDR X0, [X25]
	0x03C1FA70 LDR W8, [X0 + 0xE0]
	0x03C1FA74 CBNZ W8, 0x3C1FA7C
	0x03C1FA78 BL 0x1C16DFC
	0x03C1FA7C MOV X0, X24
	0x03C1FA80 MOV X1, X31
	0x03C1FA84 BL 0x3C1A69C
	0x03C1FA88 MOV X0, X24
	0x03C1FA8C MOV W1, W21
	0x03C1FA90 MOV W2, W31
	0x03C1FA94 MOV X3, X31
	0x03C1FA98 BL 0x3C1B024
	0x03C1FA9C TBZ X0, 0x0, 0x3C1FAFC
	0x03C1FAA0 MOV W0, W19

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X0]
	012 Move W23, W1
	013 Move W19, W4
	014 Move V8, V3
	015 Move X9, [X8+488]
	016 Move X8, [X8+496]
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move X1, X8
	021 Move W20, W3
	022 Move W21, W2
	023 Move X22, X0
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {50}
	029 Move X0, X22
	030 Move W1, W19
	031 Move W2, W23
	032 Move W3, W21
	033 Move W4, W20
	034 Move V2, V9
	035 Move V3, V8
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X30, [X31+32]
	041 Move X23, [X31+40]
	042 Move D9, [X31+16]
	043 Move D8, [X31+24]
	044 Move V0, V11
	045 Move V1, V10
	046 Move D11, [X31+80]
	047 Move D10, [X31+88]
	048 Call Texture3D.SetPixelImpl, X0, X1, X2, X3, X4, X5
	049 Return 
	050 Move X1, X22
	051 Call Texture.CreateNonReadableException, X0, X1
	052 Move X19, X0
	053 Move X0, 0x542000
	054 Move X0, [X0+264]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Call 0x1C17DEC
	059 Move [X31-48], X30
	060 Move [X31-40], X23
	061 Move [X31+16], X22
	062 Move [X31+24], X21
	063 Move [X31+32], X20
	064 Move [X31+40], X19
	065 Move X22, 0x7C7000
	066 Move W8, [X22+3464]
	067 Move X21, X2
	068 Move X19, X1
	069 Move X20, X0
	070 Compare W8, 0
	071 JumpIfEqual {74}
	072 Compare X21, 0
	073 JumpIfNotEqual {103}
	074 Move X0, 0x4D8000
	075 Move X0, [X0+3144]
	076 Call 0x1C17CF4
	077 Move X0, 0x4D6000
	078 Move X0, [X0+2512]
	079 Call 0x1C17CF4
	080 Move X0, 0x541000
	081 Move X0, [X0+3208]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X22+3464], W8
	085 Compare X21, 0
	086 JumpIfNotEqual {103}
	087 Move X8, 0x4D8000
	088 Move X8, [X8+3144]
	089 Move X0, [X8]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X31
	095 Call CultureInfo.get_InvariantCulture
	096 Compare X0, 0
	097 JumpIfEqual {160}
	098 Move X8, [X0]
	099 Move X9, [X8+536]
	100 Move X1, [X8+544]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X21, X0
	103 Move X8, 0x4D6000
	104 Move X8, [X8+2512]
	105 Move W1, 2
	106 Move X0, [X8]
	107 Call 0x1C17D6C
	108 Move X22, X0
	109 Move X0, X20
	110 Move X1, X19
	111 Move X2, X21
	112 Move X3, X31
	113 Call 0x3C1F004
	114 Compare X22, 0
	115 JumpIfEqual {160}
	116 Move X23, X0
	117 Compare X0, 0
	118 JumpIfEqual {125}
	119 Move X8, [X22]
	120 Move X0, X23
	121 Move X1, [X8+64]
	122 Call 0x1C17E00
	123 Compare X0, 0
	124 JumpIfEqual {161}
	125 Move W8, [X22+24]
	126 Compare W8, 0
	127 JumpIfEqual {159}
	128 Add X0, X20, 12
	129 Move X1, X19
	130 Move X2, X21
	131 Move X3, X31
	132 Move [X22+32], X23
	133 Call 0x3C1F004
	134 Move X19, X0
	135 Compare X0, 0
	136 JumpIfEqual {143}
	137 Move X8, [X22]
	138 Move X0, X19
	139 Move X1, [X8+64]
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {161}
	143 Move W8, [X22+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move [X22+40], X19
	146 Move X8, 0x541000
	147 Move X8, [X8+3208]
	148 Move X1, X22
	149 Move X20, [X31+32]
	150 Move X19, [X31+40]
	151 Move X22, [X31+16]
	152 Move X21, [X31+24]
	153 Move X0, [X8]
	154 Move X2, X31
	155 Move X30, [X31+48]
	156 Move X23, [X31+56]
	157 Call UnityString.Format, X0, X1
	158 Return 
	159 Call 0x1C17F28
	160 Call 0x1C17F20
	161 Call 0x1C17F44
	162 Move X1, X31
	163 Call 0x1C17DEC
	164 Subtract X31, X31, 64
	165 Move [X31+16], X30
	166 Move [X31+24], X23
	167 Move [X31+32], X22
	168 Move [X31+40], X21
	169 Move [X31+48], X20
	170 Move [X31+56], X19
	171 Move X22, 0x7C6000
	172 Move W8, [X22+3465]
	173 Move X21, X2
	174 Move X19, X1
	175 Move X20, X0
	176 Compare W8, 0
	177 JumpIfEqual {180}
	178 Compare X21, 0
	179 JumpIfNotEqual {209}
	180 Move X0, 0x4D7000
	181 Move X0, [X0+3144]
	182 Call 0x1C17CF4
	183 Move X0, 0x4D5000
	184 Move X0, [X0+2512]
	185 Call 0x1C17CF4
	186 Move X0, 0x4FE000
	187 Move X0, [X0+3352]
	188 Call 0x1C17CF4
	189 Move W8, 1
	190 Move [X22+3465], W8
	191 Compare X21, 0
	192 JumpIfNotEqual {209}
	193 Move X8, 0x4D7000
	194 Move X8, [X8+3144]
	195 Move X0, [X8]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X0, X31
	201 Call CultureInfo.get_InvariantCulture
	202 Compare X0, 0
	203 JumpIfEqual {293}
	204 Move X8, [X0]
	205 Move X9, [X8+536]
	206 Move X1, [X8+544]
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Move X21, X0
	209 Move X8, 0x4D5000
	210 Move X8, [X8+2512]
	211 Move W1, 3
	212 Move X0, [X8]
	213 Call 0x1C17D6C
	214 Move W8, [X20]
	215 Move X22, X0
	216 Add X0, X31, 12
	217 Move X1, X19
	218 Move X2, X21
	219 Move X3, X31
	220 Move [X31+12], W8
	221 Call Int32.ToString, X0, X1, X2
	222 Compare X22, 0
	223 JumpIfEqual {293}
	224 Move X23, X0
	225 Compare X0, 0
	226 JumpIfEqual {233}
	227 Move X8, [X22]
	228 Move X0, X23
	229 Move X1, [X8+64]
	230 Call 0x1C17E00
	231 Compare X0, 0
	232 JumpIfEqual {290}
	233 Move W8, [X22+24]
	234 Compare W8, 0
	235 JumpIfEqual {289}
	236 Move [X22+32], X23
	237 Move W8, [X20+4]
	238 Add X0, X31, 12
	239 Move X1, X19
	240 Move X2, X21
	241 Move X3, X31
	242 Move [X31+12], W8
	243 Call Int32.ToString, X0, X1, X2
	244 Move X23, X0
	245 Compare X0, 0
	246 JumpIfEqual {253}
	247 Move X8, [X22]
	248 Move X0, X23
	249 Move X1, [X8+64]
	250 Call 0x1C17E00
	251 Compare X0, 0
	252 JumpIfEqual {290}
	253 Move W8, [X22+24]
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move [X22+40], X23
	256 Move W8, [X20+8]
	257 Add X0, X31, 12
	258 Move X1, X19
	259 Move X2, X21
	260 Move X3, X31
	261 Move [X31+12], W8
	262 Call Int32.ToString, X0, X1, X2
	263 Move X19, X0
	264 Compare X0, 0
	265 JumpIfEqual {272}
	266 Move X8, [X22]
	267 Move X0, X19
	268 Move X1, [X8+64]
	269 Call 0x1C17E00
	270 Compare X0, 0
	271 JumpIfEqual {290}
	272 Move W8, [X22+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move [X22+48], X19
	275 Move X8, 0x4FE000
	276 Move X8, [X8+3352]
	277 Move X1, X22
	278 Move X2, X31
	279 Move X0, [X8]
	280 Call UnityString.Format, X0, X1
	281 Move X20, [X31+48]
	282 Move X19, [X31+56]
	283 Move X22, [X31+32]
	284 Move X21, [X31+40]
	285 Move X30, [X31+16]
	286 Move X23, [X31+24]
	287 Add X31, X31, 64
	288 Return 
	289 Call 0x1C17F28
	290 Call 0x1C17F44
	291 Move X1, X31
	292 Call 0x1C17DEC
	293 Call 0x1C17F20
	294 Move [X31-48], X30
	295 Move [X31-40], X23
	296 Move [X31+16], X22
	297 Move [X31+24], X21
	298 Move [X31+32], X20
	299 Move [X31+40], X19
	300 Move X22, 0x7C6000
	301 Move W8, [X22+3466]
	302 Move X20, X2
	303 Move X21, X1
	304 Move X19, X0
	305 Compare W8, 0
	306 JumpIfNotEqual {321}
	307 Move X0, 0x4D7000
	308 Move X0, [X0+3144]
	309 Call 0x1C17CF4
	310 Move X0, 0x4D5000
	311 Move X0, [X0+2512]
	312 Call 0x1C17CF4
	313 Move X0, 0x540000
	314 Move X0, [X0+3240]
	315 Call 0x1C17CF4
	316 Move X0, 0x4DC000
	317 Move X0, [X0+3704]
	318 Call 0x1C17CF4
	319 Move W8, 1
	320 Move [X22+3466], W8
	321 Move X0, X21
	322 Move X1, X31
	323 Call String.IsNullOrEmpty, X0
	324 Move X8, 0x4DC000
	325 Move X8, [X8+3704]
	326 And W31, W0, 1
	327 Move X8, [X8]
	328 NotImplemented "Instruction CSEL not yet implemented."
	329 Compare X20, 0
	330 JumpIfNotEqual {347}
	331 Move X8, 0x4D7000
	332 Move X8, [X8+3144]
	333 Move X0, [X8]
	334 Move W8, [X0+224]
	335 Compare W8, 0
	336 JumpIfNotEqual {338}
	337 Call 0x1C17DFC
	338 Move X0, X31
	339 Call CultureInfo.get_InvariantCulture
	340 Compare X0, 0
	341 JumpIfEqual {404}
	342 Move X8, [X0]
	343 Move X9, [X8+536]
	344 Move X1, [X8+544]
	345 NotImplemented "Instruction BLR not yet implemented."
	346 Move X20, X0
	347 Move X8, 0x4D5000
	348 Move X8, [X8+2512]
	349 Move W1, 2
	350 Move X0, [X8]
	351 Call 0x1C17D6C
	352 Move X22, X0
	353 Move X0, X19
	354 Move X1, X21
	355 Move X2, X20
	356 Move X3, X31
	357 Call 0x2431694
	358 Compare X22, 0
	359 JumpIfEqual {404}
	360 Move X23, X0
	361 Compare X0, 0
	362 JumpIfEqual {369}
	363 Move X8, [X22]
	364 Move X0, X23
	365 Move X1, [X8+64]
	366 Call 0x1C17E00
	367 Compare X0, 0
	368 JumpIfEqual {405}
	369 Move W8, [X22+24]
	370 Compare W8, 0
	371 JumpIfEqual {403}
	372 Add X0, X19, 12
	373 Move X1, X21
	374 Move X2, X20
	375 Move X3, X31
	376 Move [X22+32], X23
	377 Call Single.ToString, X0, X1, X2
	378 Move X19, X0
	379 Compare X0, 0
	380 JumpIfEqual {387}
	381 Move X8, [X22]
	382 Move X0, X19
	383 Move X1, [X8+64]
	384 Call 0x1C17E00
	385 Compare X0, 0
	386 JumpIfEqual {405}
	387 Move W8, [X22+24]
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move [X22+40], X19
	390 Move X8, 0x540000
	391 Move X8, [X8+3240]
	392 Move X1, X22
	393 Move X20, [X31+32]
	394 Move X19, [X31+40]
	395 Move X22, [X31+16]
	396 Move X21, [X31+24]
	397 Move X0, [X8]
	398 Move X2, X31
	399 Move X30, [X31+48]
	400 Move X23, [X31+56]
	401 Call UnityString.Format, X0, X1
	402 Return 
	403 Call 0x1C17F28
	404 Call 0x1C17F20
	405 Call 0x1C17F44
	406 Move X1, X31
	407 Call 0x1C17DEC
	408 Move [X31-96], X30
	409 Move [X31+16], X28
	410 Move [X31+24], X27
	411 Move [X31+32], X26
	412 Move [X31+40], X25
	413 Move [X31+48], X24
	414 Move [X31+56], X23
	415 Move [X31+64], X22
	416 Move [X31+72], X21
	417 Move [X31+80], X20
	418 Move [X31+88], X19
	419 Move X26, 0x7C6000
	420 Move W8, [X26+3467]
	421 Move X20, X2
	422 Move X21, X1
	423 Move X19, X0
	424 Compare W8, 0
	425 JumpIfNotEqual {431}
	426 Move X0, 0x4D5000
	427 Move X0, [X0+1448]
	428 Call 0x1C17CF4
	429 Move W8, 1
	430 Move [X26+3467], W8
	431 Move X25, 0x4D5000
	432 Move X25, [X25+1448]
	433 Move X0, [X25]
	434 Move W8, [X0+224]
	435 Compare W8, 0
	436 JumpIfNotEqual {438}
	437 Call 0x1C17DFC
	438 Add W22, W20, W21
	439 Move W0, W21
	440 Move W1, W22
	441 Move X2, X31
	442 Call Math.Min, X0, X1
	443 Move X27, 0x7C6000
	444 Move W8, [X27+3469]
	445 Move W23, W0
	446 Compare W8, 0
	447 JumpIfNotEqual {453}
	448 Move X0, 0x4D5000
	449 Move X0, [X0+1448]
	450 Call 0x1C17CF4
	451 Move W8, 1
	452 Move [X27+3469], W8
	453 Move X0, [X25]
	454 Move W24, [X19]
	455 Move W28, [X19+8]
	456 Move W8, [X0+224]
	457 Compare W8, 0
	458 JumpIfNotEqual {460}
	459 Call 0x1C17DFC
	460 Add W1, W28, W24
	461 Move W0, W24
	462 Move X2, X31
	463 Call Math.Max, X0, X1
	464 NotImplemented "Instruction CMP not yet implemented."
	465 Move W8, [X27+3469]
	466 Compare W8, 0
	467 JumpIfNotEqual {473}
	468 Move X0, 0x4D5000
	469 Move X0, [X0+1448]
	470 Call 0x1C17CF4
	471 Move W8, 1
	472 Move [X27+3469], W8
	473 Move X0, [X25]
	474 Move W8, [X0+224]
	475 Compare W8, 0
	476 JumpIfNotEqual {478}
	477 Call 0x1C17DFC
	478 Move W0, W21
	479 Move W1, W22
	480 Move X2, X31
	481 Call Math.Max, X0, X1
	482 Move W8, [X26+3467]
	483 Move W22, W0
	484 Compare W8, 0
	485 JumpIfNotEqual {491}
	486 Move X0, 0x4D5000
	487 Move X0, [X0+1448]
	488 Call 0x1C17CF4
	489 Move W8, 1
	490 Move [X26+3467], W8
	491 Move X0, [X25]
	492 Move W23, [X19]
	493 Move W24, [X19+8]
	494 Move W8, [X0+224]
	495 Compare W8, 0
	496 JumpIfNotEqual {498}
	497 Call 0x1C17DFC
	498 Add W1, W24, W23
	499 Move W0, W23
	500 Move X2, X31
	501 Call Math.Min, X0, X1
	502 NotImplemented "Instruction CMP not yet implemented."
	503 Move X24, 0x7C6000
	504 Move W8, [X24+3468]
	505 Move X21, X21
	506 ShiftRight X21, 32
	507 And X21, X21, 0x7FFFFFFF
	508 Move X20, X20
	509 ShiftRight X20, 32
	510 And X20, X20, 0x7FFFFFFF
	511 Compare W8, 0
	512 JumpIfNotEqual {518}
	513 Move X0, 0x4D5000
	514 Move X0, [X0+1448]
	515 Call 0x1C17CF4
	516 Move W8, 1
	517 Move [X24+3468], W8
	518 Move X0, [X25]
	519 Move W8, [X0+224]
	520 Compare W8, 0
	521 JumpIfNotEqual {523}
	522 Call 0x1C17DFC
	523 Add W20, W20, W21
	524 Move W0, W21
	525 Move W1, W20
	526 Move X2, X31
	527 Call Math.Min, X0, X1
	528 Move X26, 0x7C6000
	529 Move W8, [X26+3470]
	530 Move W22, W0
	531 Compare W8, 0
	532 JumpIfNotEqual {538}
	533 Move X0, 0x4D5000
	534 Move X0, [X0+1448]
	535 Call 0x1C17CF4
	536 Move W8, 1
	537 Move [X26+3470], W8
	538 Move X0, [X25]
	539 Move W23, [X19+4]
	540 Move W27, [X19+12]
	541 Move W8, [X0+224]
	542 Compare W8, 0
	543 JumpIfNotEqual {545}
	544 Call 0x1C17DFC
	545 Add W1, W27, W23
	546 Move W0, W23
	547 Move X2, X31
	548 Call Math.Max, X0, X1
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Move W8, [X26+3470]
	551 Compare W8, 0
	552 JumpIfNotEqual {558}
	553 Move X0, 0x4D5000
	554 Move X0, [X0+1448]
	555 Call 0x1C17CF4
	556 Move W8, 1
	557 Move [X26+3470], W8
	558 Move X0, [X25]
	559 Move W8, [X0+224]
	560 Compare W8, 0
	561 JumpIfNotEqual {563}
	562 Call 0x1C17DFC
	563 Move W0, W21
	564 Move W1, W20
	565 Move X2, X31
	566 Call Math.Max, X0, X1
	567 Move W8, [X24+3468]
	568 Move W20, W0
	569 Compare W8, 0
	570 JumpIfNotEqual {576}
	571 Move X0, 0x4D5000
	572 Move X0, [X0+1448]
	573 Call 0x1C17CF4
	574 Move W8, 1
	575 Move [X24+3468], W8
	576 Move X0, [X25]
	577 Move W21, [X19+4]
	578 Move W19, [X19+12]
	579 Move W8, [X0+224]
	580 Compare W8, 0
	581 JumpIfNotEqual {583}
	582 Call 0x1C17DFC
	583 Add W1, W19, W21
	584 Move W0, W21
	585 Move X2, X31
	586 Call Math.Min, X0, X1
	587 NotImplemented "Instruction CMP not yet implemented."
	588 NotImplemented "Instruction CSET not yet implemented."
	589 Move W0, W31
	590 Move X20, [X31+80]
	591 Move X19, [X31+88]
	592 Move X22, [X31+64]
	593 Move X21, [X31+72]
	594 Move X24, [X31+48]
	595 Move X23, [X31+56]
	596 Move X26, [X31+32]
	597 Move X25, [X31+40]
	598 Move X28, [X31+16]
	599 Move X27, [X31+24]
	600 Move X30, [X31+96]
	601 Return 
	602 Subtract X31, X31, 64
	603 Move [X31+16], X30
	604 Move [X31+24], X23
	605 Move [X31+32], X22
	606 Move [X31+40], X21
	607 Move [X31+48], X20
	608 Move [X31+56], X19
	609 Move X22, 0x7C6000
	610 Move W8, [X22+3471]
	611 Move X21, X2
	612 Move X19, X1
	613 Move X20, X0
	614 Compare W8, 0
	615 JumpIfEqual {618}
	616 Compare X21, 0
	617 JumpIfNotEqual {647}
	618 Move X0, 0x4D7000
	619 Move X0, [X0+3144]
	620 Call 0x1C17CF4
	621 Move X0, 0x4D5000
	622 Move X0, [X0+2512]
	623 Call 0x1C17CF4
	624 Move X0, 0x540000
	625 Move X0, [X0+3248]
	626 Call 0x1C17CF4
	627 Move W8, 1
	628 Move [X22+3471], W8
	629 Compare X21, 0
	630 JumpIfNotEqual {647}
	631 Move X8, 0x4D7000
	632 Move X8, [X8+3144]
	633 Move X0, [X8]
	634 Move W8, [X0+224]
	635 Compare W8, 0
	636 JumpIfNotEqual {638}
	637 Call 0x1C17DFC
	638 Move X0, X31
	639 Call CultureInfo.get_InvariantCulture
	640 Compare X0, 0
	641 JumpIfEqual {750}
	642 Move X8, [X0]
	643 Move X9, [X8+536]
	644 Move X1, [X8+544]
	645 NotImplemented "Instruction BLR not yet implemented."
	646 Move X21, X0
	647 Move X8, 0x4D5000
	648 Move X8, [X8+2512]
	649 Move W1, 4
	650 Move X0, [X8]
	651 Call 0x1C17D6C
	652 Move W8, [X20]
	653 Move X22, X0
	654 Add X0, X31, 12
	655 Move X1, X19
	656 Move X2, X21
	657 Move X3, X31
	658 Move [X31+12], W8
	659 Call Int32.ToString, X0, X1, X2
	660 Compare X22, 0
	661 JumpIfEqual {750}
	662 Move X23, X0
	663 Compare X0, 0
	664 JumpIfEqual {671}
	665 Move X8, [X22]
	666 Move X0, X23
	667 Move X1, [X8+64]
	668 Call 0x1C17E00
	669 Compare X0, 0
	670 JumpIfEqual {747}
	671 Move W8, [X22+24]
	672 Compare W8, 0
	673 JumpIfEqual {746}
	674 Move [X22+32], X23
	675 Move W8, [X20+4]
	676 Add X0, X31, 12
	677 Move X1, X19
	678 Move X2, X21
	679 Move X3, X31
	680 Move [X31+12], W8
	681 Call Int32.ToString, X0, X1, X2
	682 Move X23, X0
	683 Compare X0, 0
	684 JumpIfEqual {691}
	685 Move X8, [X22]
	686 Move X0, X23
	687 Move X1, [X8+64]
	688 Call 0x1C17E00
	689 Compare X0, 0
	690 JumpIfEqual {747}
	691 Move W8, [X22+24]
	692 NotImplemented "Instruction CMP not yet implemented."
	693 Move [X22+40], X23
	694 Move W8, [X20+8]
	695 Add X0, X31, 12
	696 Move X1, X19
	697 Move X2, X21
	698 Move X3, X31
	699 Move [X31+12], W8
	700 Call Int32.ToString, X0, X1, X2
	701 Move X23, X0
	702 Compare X0, 0
	703 JumpIfEqual {710}
	704 Move X8, [X22]
	705 Move X0, X23
	706 Move X1, [X8+64]
	707 Call 0x1C17E00
	708 Compare X0, 0
	709 JumpIfEqual {747}
	710 Move W8, [X22+24]
	711 NotImplemented "Instruction CMP not yet implemented."
	712 Move [X22+48], X23
	713 Move W8, [X20+12]
	714 Add X0, X31, 12
	715 Move X1, X19
	716 Move X2, X21
	717 Move X3, X31
	718 Move [X31+12], W8
	719 Call Int32.ToString, X0, X1, X2
	720 Move X19, X0
	721 Compare X0, 0
	722 JumpIfEqual {729}
	723 Move X8, [X22]
	724 Move X0, X19
	725 Move X1, [X8+64]
	726 Call 0x1C17E00
	727 Compare X0, 0
	728 JumpIfEqual {747}
	729 Move W8, [X22+24]
	730 NotImplemented "Instruction CMP not yet implemented."
	731 Move [X22+56], X19
	732 Move X8, 0x540000
	733 Move X8, [X8+3248]
	734 Move X1, X22
	735 Move X2, X31
	736 Move X0, [X8]
	737 Call UnityString.Format, X0, X1
	738 Move X20, [X31+48]
	739 Move X19, [X31+56]
	740 Move X22, [X31+32]
	741 Move X21, [X31+40]
	742 Move X30, [X31+16]
	743 Move X23, [X31+24]
	744 Add X31, X31, 64
	745 Return 
	746 Call 0x1C17F28
	747 Call 0x1C17F44
	748 Move X1, X31
	749 Call 0x1C17DEC
	750 Call 0x1C17F20
	751 Subtract X31, X31, 64
	752 Move [X31+16], X30
	753 Move [X31+24], X23
	754 Move [X31+32], X22
	755 Move [X31+40], X21
	756 Move [X31+48], X20
	757 Move [X31+56], X19
	758 Move X22, 0x7C6000
	759 Move W8, [X22+3472]
	760 Move X21, X2
	761 Move X19, X1
	762 Move X20, X0
	763 Compare W8, 0
	764 JumpIfEqual {767}
	765 Compare X21, 0
	766 JumpIfNotEqual {796}
	767 Move X0, 0x4D7000
	768 Move X0, [X0+3144]
	769 Call 0x1C17CF4
	770 Move X0, 0x4D5000
	771 Move X0, [X0+2512]
	772 Call 0x1C17CF4
	773 Move X0, 0x540000
	774 Move X0, [X0+3256]
	775 Call 0x1C17CF4
	776 Move W8, 1
	777 Move [X22+3472], W8
	778 Compare X21, 0
	779 JumpIfNotEqual {796}
	780 Move X8, 0x4D7000
	781 Move X8, [X8+3144]
	782 Move X0, [X8]
	783 Move W8, [X0+224]
	784 Compare W8, 0
	785 JumpIfNotEqual {787}
	786 Call 0x1C17DFC
	787 Move X0, X31
	788 Call CultureInfo.get_InvariantCulture
	789 Compare X0, 0
	790 JumpIfEqual {939}
	791 Move X8, [X0]
	792 Move X9, [X8+536]
	793 Move X1, [X8+544]
	794 NotImplemented "Instruction BLR not yet implemented."
	795 Move X21, X0
	796 Move X8, 0x4D5000
	797 Move X8, [X8+2512]
	798 Move W1, 4
	799 Move X0, [X8]
	800 Call 0x1C17D6C
	801 Move X23, 0x7C6000
	802 Move X8, [X23+560]
	803 Move X22, X0
	804 Compare X8, 0
	805 JumpIfNotEqual {811}
	806 Move X0, -51494912
	807 Add X0, X0, 3369
	808 Call 0x1C17CB8
	809 Move X8, X0
	810 Move [X23+560], X0
	811 Move X0, X20
	812 NotImplemented "Instruction BLR not yet implemented."
	813 Move [X31+12], W0
	814 Add X0, X31, 12
	815 Move X1, X19
	816 Move X2, X21
	817 Move X3, X31
	818 Call Int32.ToString, X0, X1, X2
	819 Compare X22, 0
	820 JumpIfEqual {939}
	821 Move X23, X0
	822 Compare X0, 0
	823 JumpIfEqual {830}
	824 Move X8, [X22]
	825 Move X0, X23
	826 Move X1, [X8+64]
	827 Call 0x1C17E00
	828 Compare X0, 0
	829 JumpIfEqual {936}
	830 Move W8, [X22+24]
	831 Compare W8, 0
	832 JumpIfEqual {935}
	833 Move [X22+32], X23
	834 Move X23, 0x7C6000
	835 Move X8, [X23+576]
	836 Compare X8, 0
	837 JumpIfNotEqual {843}
	838 Move X0, -51388416
	839 Add X0, X0, 3333
	840 Call 0x1C17CB8
	841 Move X8, X0
	842 Move [X23+576], X0
	843 Move X0, X20
	844 NotImplemented "Instruction BLR not yet implemented."
	845 Move [X31+12], W0
	846 Add X0, X31, 12
	847 Move X1, X19
	848 Move X2, X21
	849 Move X3, X31
	850 Call Int32.ToString, X0, X1, X2
	851 Move X23, X0
	852 Compare X0, 0
	853 JumpIfEqual {860}
	854 Move X8, [X22]
	855 Move X0, X23
	856 Move X1, [X8+64]
	857 Call 0x1C17E00
	858 Compare X0, 0
	859 JumpIfEqual {936}
	860 Move W8, [X22+24]
	861 NotImplemented "Instruction CMP not yet implemented."
	862 Move [X22+40], X23
	863 Move X23, 0x7C6000
	864 Move X8, [X23+592]
	865 Compare X8, 0
	866 JumpIfNotEqual {872}
	867 Move X0, -51339264
	868 Add X0, X0, 1022
	869 Call 0x1C17CB8
	870 Move X8, X0
	871 Move [X23+592], X0
	872 Move X0, X20
	873 NotImplemented "Instruction BLR not yet implemented."
	874 Move [X31+12], W0
	875 Add X0, X31, 12
	876 Move X1, X19
	877 Move X2, X21
	878 Move X3, X31
	879 Call Int32.ToString, X0, X1, X2
	880 Move X23, X0
	881 Compare X0, 0
	882 JumpIfEqual {889}
	883 Move X8, [X22]
	884 Move X0, X23
	885 Move X1, [X8+64]
	886 Call 0x1C17E00
	887 Compare X0, 0
	888 JumpIfEqual {936}
	889 Move W8, [X22+24]
	890 NotImplemented "Instruction CMP not yet implemented."
	891 Move [X22+48], X23
	892 Move X23, 0x7C6000
	893 Move X8, [X23+608]
	894 Compare X8, 0
	895 JumpIfNotEqual {901}
	896 Move X0, -51445760
	897 Add X0, X0, 3669
	898 Call 0x1C17CB8
	899 Move X8, X0
	900 Move [X23+608], X0
	901 Move X0, X20
	902 NotImplemented "Instruction BLR not yet implemented."
	903 Move [X31+12], W0
	904 Add X0, X31, 12
	905 Move X1, X19
	906 Move X2, X21
	907 Move X3, X31
	908 Call Int32.ToString, X0, X1, X2
	909 Move X19, X0
	910 Compare X0, 0
	911 JumpIfEqual {918}
	912 Move X8, [X22]
	913 Move X0, X19
	914 Move X1, [X8+64]
	915 Call 0x1C17E00
	916 Compare X0, 0
	917 JumpIfEqual {936}
	918 Move W8, [X22+24]
	919 NotImplemented "Instruction CMP not yet implemented."
	920 Move [X22+56], X19
	921 Move X8, 0x540000
	922 Move X8, [X8+3256]
	923 Move X1, X22
	924 Move X2, X31
	925 Move X0, [X8]
	926 Call UnityString.Format, X0, X1
	927 Move X20, [X31+48]
	928 Move X19, [X31+56]
	929 Move X22, [X31+32]
	930 Move X21, [X31+40]
	931 Move X30, [X31+16]
	932 Move X23, [X31+24]
	933 Add X31, X31, 64
	934 Return 
	935 Call 0x1C17F28
	936 Call 0x1C17F44
	937 Move X1, X31
	938 Call 0x1C17DEC
	939 Call 0x1C17F20

Method: System.Void SetPixelData(Unity.Collections.NativeArray`1<T> data, System.Int32 mipLevel, System.Int32 sourceDataStartIndex = 0)

Disassembly:
	0x0229D77C B 0x338F3E0
	0x0229D780 CBZ X0, 0x229D788
	0x0229D784 RET
	0x0229D788 MOV W0, W1
	0x0229D78C MOV X1, X31
	0x0229D790 B 0x338F3E0
	0x0229D794 CBZ X0, 0x229D79C
	0x0229D798 RET
	0x0229D79C MOV W0, W1
	0x0229D7A0 MOV X1, X31
	0x0229D7A4 B 0x338F3E0
	0x0229D7A8 CBZ X0, 0x229D7B0
	0x0229D7AC RET
	0x0229D7B0 MOV W0, W1
	0x0229D7B4 MOV X1, X31
	0x0229D7B8 B 0x338F3E0
	0x0229D7BC CBZ X0, 0x229D7C4
	0x0229D7C0 RET
	0x0229D7C4 MOV W0, W1
	0x0229D7C8 MOV X1, X31
	0x0229D7CC B 0x338F3E0
	0x0229D7D0 CBZ X0, 0x229D7D8
	0x0229D7D4 RET
	0x0229D7D8 MOV W0, W1
	0x0229D7DC MOV X1, X31
	0x0229D7E0 B 0x338F3E0
	0x0229D7E4 CBZ X0, 0x229D7EC
	0x0229D7E8 RET
	0x0229D7EC MOV W0, W1
	0x0229D7F0 MOV X1, X31
	0x0229D7F4 B 0x338F3E0
	0x0229D7F8 CBZ X0, 0x229D800
	0x0229D7FC RET
	0x0229D800 MOV W0, W1
	0x0229D804 MOV X1, X31
	0x0229D808 B 0x338F3E0
	0x0229D80C CBZ X0, 0x229D814
	0x0229D810 RET
	0x0229D814 MOV W0, W1
	0x0229D818 MOV X1, X31
	0x0229D81C B 0x338F3E0
	0x0229D820 CBZ X0, 0x229D828
	0x0229D824 RET
	0x0229D828 MOV W0, W1
	0x0229D82C MOV X1, X31
	0x0229D830 B 0x338F3E0
	0x0229D834 CBZ X0, 0x229D83C
	0x0229D838 RET
	0x0229D83C MOV W0, W1
	0x0229D840 MOV X1, X31
	0x0229D844 B 0x338F3E0
	0x0229D848 CBZ X0, 0x229D850
	0x0229D84C RET
	0x0229D850 MOV W0, W1
	0x0229D854 MOV X1, X31
	0x0229D858 B 0x338F3E0
	0x0229D85C CBZ X0, 0x229D864
	0x0229D860 RET
	0x0229D864 MOV W0, W1
	0x0229D868 MOV X1, X31
	0x0229D86C B 0x338F3E0
	0x0229D870 CBZ X0, 0x229D878
	0x0229D874 RET
	0x0229D878 MOV W0, W1
	0x0229D87C MOV X1, X31
	0x0229D880 B 0x338F3E0
	0x0229D884 CBZ X0, 0x229D88C
	0x0229D888 RET
	0x0229D88C MOV W0, W1
	0x0229D890 MOV X1, X31
	0x0229D894 B 0x338F3E0
	0x0229D898 CBZ X0, 0x229D8A0
	0x0229D89C RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X5+56]
	009 Move X19, X5
	010 Move W21, W4
	011 Move W22, W3
	012 Move X23, X2
	013 Move X24, X1
	014 Move X20, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {19}
	017 Move X0, X19
	018 Call 0x1C5D6E0
	019 Move TEMP, X21
	020 And TEMP, TEMP, -2147483648
	021 Compare TEMP, -2147483648
	022 JumpIfEqual {61}
	023 Compare X20, 0
	024 JumpIfEqual {68}
	025 Move X8, [X20]
	026 Move X0, X20
	027 Move X9, [X8+488]
	028 Move X1, [X8+496]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {69}
	034 Compare X24, 0
	035 JumpIfEqual {75}
	036 Compare W23, 0
	037 JumpIfEqual {75}
	038 Move X8, [X19+56]
	039 Move X0, X24
	040 Move X1, X23
	041 Move X2, [X8+32]
	042 Call NativeArrayUnsafeUtility.GetUnsafeReadOnlyPtr, X0
	043 Move X1, X31
	044 Call IntPtr.op_Explicit, X0
	045 Move X1, X0
	046 Move X0, X20
	047 Move W2, W22
	048 Move W4, W23
	049 Move W5, W21
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move W3, 1
	057 Move X6, X31
	058 Move X30, [X31+64]
	059 Call Texture3D.SetPixelDataImpl, X0, X1, X2, X3, X4, X5
	060 Return 
	061 Move X0, 0x1E80000
	062 Move X0, [X0+464]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X20, X0
	066 Move X0, 0x1E80000
	067 Move X0, [X0+1952]
	068 Call 0x1C17F20
	069 Move X0, X20
	070 Call 0x19913C0
	071 Move X0, X20
	072 Move X1, X20
	073 Move X2, X31
	074 Call Texture.CreateNonReadableException, X0, X1
	075 Move X0, 0x1E80000
	076 Move X0, [X0+464]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X20, X0
	080 Move X0, 0x1E80000
	081 Move X0, [X0+1960]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X20
	085 Move X2, X31
	086 Call UnityException..ctor, X0, X1
	087 Move X0, X20
	088 Move X1, X19
	089 Call 0x1C17DEC

Method: System.Void ValidateIsNotCrunched(UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C1E91C STR X23, [X22 + 0x20]
	0x03C1E920 ADRP X23, 0x7C6000
	0x03C1E924 LDR X8, [X23 + 0x240]
	0x03C1E928 CBNZ X8, 0x3C1E940
	0x03C1E92C ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C1E930 ADD X0, X0, 0xD05
	0x03C1E934 BL 0x1C16CB8
	0x03C1E938 MOV X8, X0
	0x03C1E93C STR X0, [X23 + 0x240]
	0x03C1E940 MOV X0, X20
	0x03C1E944 BLR X8
	0x03C1E948 STR W0, [X31 + 0xC]
	0x03C1E94C ADD X0, X31, 0xC
	0x03C1E950 MOV X1, X19
	0x03C1E954 MOV X2, X21
	0x03C1E958 MOV X3, X31
	0x03C1E95C BL 0x337B8BC
	0x03C1E960 MOV X23, X0
	0x03C1E964 CBZ X0, 0x3C1E97C
	0x03C1E968 LDR X8, [X22]
	0x03C1E96C MOV X0, X23

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, 64
	003 Compare TEMP, 64
	004 JumpIfEqual {6}
	005 Return 
	006 Move [X31-16], X30
	007 Move [X31-8], X19
	008 Move X0, 0x4DE000
	009 Move X0, [X0+1400]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X19, X0
	013 Move X0, 0x542000
	014 Move X0, [X0+240]
	015 Call 0x1C17D08
	016 Move X1, X0
	017 Move X0, X19
	018 Move X2, X31
	019 Call ArgumentException..ctor, X0, X1
	020 Move X0, 0x542000
	021 Move X0, [X0+248]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Call 0x1C17DEC

Method: System.Void SetPixelImpl_Injected(System.Int32 mip, System.Int32 x, System.Int32 y, System.Int32 z, ref UnityEngine.Color color)

Disassembly:
	0x03C1E3B8 MOV W1, W22
	0x03C1E3BC MOV X2, X31
	0x03C1E3C0 BL 0x337EE94
	0x03C1E3C4 ADRP X27, 0x7C6000
	0x03C1E3C8 LDRB W8, [X27 + 0xD8D]
	0x03C1E3CC MOV W23, W0
	0x03C1E3D0 CBNZ W8, 0x3C1E3E8
	0x03C1E3D4 ADRP X0, 0x4D5000
	0x03C1E3D8 LDR X0, [X0 + 0x5A8]
	0x03C1E3DC BL 0x1C16CF4
	0x03C1E3E0 MOVZ W8, 0x1
	0x03C1E3E4 STRB W8, [X27 + 0xD8D]
	0x03C1E3E8 LDR X0, [X25]
	0x03C1E3EC LDR W24, [X19]
	0x03C1E3F0 LDR W28, [X19 + 0x8]
	0x03C1E3F4 LDR W8, [X0 + 0xE0]
	0x03C1E3F8 CBNZ W8, 0x3C1E400
	0x03C1E3FC BL 0x1C16DFC
	0x03C1E400 ADD W1, W28, W24
	0x03C1E404 MOV W0, W24
	0x03C1E408 MOV X2, X31
	0x03C1E40C BL 0x337EDF0
	0x03C1E410 CMP W23, W0
	0x03C1E414 B.GE 0x3C1E5D4
	0x03C1E418 LDRB W8, [X27 + 0xD8D]
	0x03C1E41C CBNZ W8, 0x3C1E434
	0x03C1E420 ADRP X0, 0x4D5000
	0x03C1E424 LDR X0, [X0 + 0x5A8]
	0x03C1E428 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C7000
	010 Move X6, [X25+3456]
	011 Move X19, X5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move W23, W1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51564544
	020 Add X0, X0, 3818
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+3456], X0
	024 Move X0, X24
	025 Move W1, W23
	026 Move W2, W22
	027 Move W3, W21
	028 Move W4, W20
	029 Move X5, X19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

