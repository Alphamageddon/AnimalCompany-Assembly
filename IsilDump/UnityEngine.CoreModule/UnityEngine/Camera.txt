Type: UnityEngine.Camera

Method: System.Void .ctor()

Disassembly:
	0x03C045D4 LDP X30, X23, [X31], #0x30
	0x03C045D8 BR X4

ISIL:
	001 Move X1, X31
	002 Call Behaviour..ctor, X0
	003 Return 

Method: System.Single get_nearClipPlane()

Disassembly:
	0x03C045DC MOVZ W1, 0x2
	0x03C045E0 B 0x3C04444
	0x03C045E4 MOVZ W1, 0x2
	0x03C045E8 B 0x3C04510
	0x03C045EC SUB X31, X31, 0x40
	0x03C045F0 STR X30, [X31 + 0x20]
	0x03C045F4 STP X20, X19, [X31 + 0x30]
	0x03C045F8 ADRP X20, 0x7E0000
	0x03C045FC LDR X8, [X20 + 0xF0]
	0x03C04600 MOV X19, X0
	0x03C04604 STP S0, S1, [X31 + 0x10]
	0x03C04608 STR S2, [X31 + 0x18]
	0x03C0460C STR W31, [X31 + 0x8]
	0x03C04610 STR X31, [X31]
	0x03C04614 CBNZ X8, 0x3C0462C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+3864]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51392512
	010 Add X0, X0, 3070
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3864], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_farClipPlane()

Disassembly:
	0x03C04618 ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C0461C ADD X0, X0, 0xE38
	0x03C04620 BL 0x1C16CB8
	0x03C04624 MOV X8, X0
	0x03C04628 STR X0, [X20 + 0xF0]
	0x03C0462C ADD X1, X31, 0x10
	0x03C04630 ADD X2, X31, 0x0
	0x03C04634 MOV X0, X19
	0x03C04638 BLR X8
	0x03C0463C LDP S0, S1, [X31]
	0x03C04640 LDR V2, [X31 + 0x8]
	0x03C04644 LDP X20, X19, [X31 + 0x30]
	0x03C04648 LDR X30, [X31 + 0x20]
	0x03C0464C ADD X31, X31, 0x40
	0x03C04650 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+3872]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51458048
	010 Add X0, X0, 2990
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3872], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_fieldOfView()

Disassembly:
	0x03C04654 STR X30, [X31 - 0x30]!
	0x03C04658 STP X22, X21, [X31 + 0x10]
	0x03C0465C STP X20, X19, [X31 + 0x20]
	0x03C04660 ADRP X22, 0x7E0000
	0x03C04664 LDR X3, [X22 + 0xF0]
	0x03C04668 MOV X19, X2
	0x03C0466C MOV X20, X1
	0x03C04670 MOV X21, X0
	0x03C04674 CBNZ X3, 0x3C0468C
	0x03C04678 ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C0467C ADD X0, X0, 0xE38
	0x03C04680 BL 0x1C16CB8
	0x03C04684 MOV X3, X0
	0x03C04688 STR X0, [X22 + 0xF0]
	0x03C0468C MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+3880]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51351552
	010 Add X0, X0, 3680
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3880], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_fieldOfView(System.Single value)

Disassembly:
	0x03C04690 MOV X1, X20
	0x03C04694 MOV X2, X19
	0x03C04698 LDP X20, X19, [X31 + 0x20]
	0x03C0469C LDP X22, X21, [X31 + 0x10]
	0x03C046A0 LDR X30, [X31], #0x30
	0x03C046A4 BR X3
	0x03C046A8 SUB X31, X31, 0x50
	0x03C046AC STP X31, X30, [X31 + 0x18]
	0x03C046B0 STP X22, X21, [X31 + 0x30]
	0x03C046B4 STP X20, X19, [X31 + 0x40]
	0x03C046B8 ADRP X22, 0x7E0000
	0x03C046BC MOV X19, X8
	0x03C046C0 LDR X8, [X22 + 0xF8]
	0x03C046C4 MOV W20, W1
	0x03C046C8 MOV X21, X0
	0x03C046CC STP S0, S1, [X31 + 0x28]
	0x03C046D0 STP X31, X31, [X31 + 0x8]
	0x03C046D4 CBNZ X8, 0x3C046EC
	0x03C046D8 ADRP X0, 0xFFFFFFFFFCF14000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7E0000
	006 Move X1, [X20+3888]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51367936
	012 Add X0, X0, 3578
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+3888], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void set_renderingPath(UnityEngine.RenderingPath value)

Disassembly:
	0x03C046DC ADD X0, X0, 0x693
	0x03C046E0 BL 0x1C16CB8
	0x03C046E4 MOV X8, X0
	0x03C046E8 STR X0, [X22 + 0xF8]
	0x03C046EC ADD X1, X31, 0x28
	0x03C046F0 ADD X3, X31, 0x8
	0x03C046F4 MOV X0, X21
	0x03C046F8 MOV W2, W20
	0x03C046FC BLR X8
	0x03C04700 LDP X8, X30, [X31 + 0x18]
	0x03C04704 LDUR V0, [X31 + 0x8]
	0x03C04708 LDP X22, X21, [X31 + 0x30]
	0x03C0470C STR X8, [X19 + 0x10]
	0x03C04710 STR V0, [X19]
	0x03C04714 LDP X20, X19, [X31 + 0x40]
	0x03C04718 ADD X31, X31, 0x50
	0x03C0471C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+3896]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51376128
	012 Add X0, X0, 3813
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3896], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_allowHDR()

Disassembly:
	0x03C04720 STP X30, X23, [X31 - 0x30]!
	0x03C04724 STP X22, X21, [X31 + 0x10]
	0x03C04728 STP X20, X19, [X31 + 0x20]
	0x03C0472C ADRP X23, 0x7E0000
	0x03C04730 LDR X4, [X23 + 0xF8]
	0x03C04734 MOV X19, X3
	0x03C04738 MOV W20, W2
	0x03C0473C MOV X21, X1
	0x03C04740 MOV X22, X0
	0x03C04744 CBNZ X4, 0x3C0475C
	0x03C04748 ADRP X0, 0xFFFFFFFFFCF14000
	0x03C0474C ADD X0, X0, 0x693
	0x03C04750 BL 0x1C16CB8
	0x03C04754 MOV X4, X0
	0x03C04758 STR X0, [X23 + 0xF8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+3904]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51367936
	010 Add X0, X0, 3629
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3904], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_allowHDR(System.Boolean value)

Disassembly:
	0x03C0475C MOV X0, X22
	0x03C04760 MOV X1, X21
	0x03C04764 MOV W2, W20
	0x03C04768 MOV X3, X19
	0x03C0476C LDP X20, X19, [X31 + 0x20]
	0x03C04770 LDP X22, X21, [X31 + 0x10]
	0x03C04774 LDP X30, X23, [X31], #0x30
	0x03C04778 BR X4
	0x03C0477C SUB X31, X31, 0x30
	0x03C04780 STP X30, X19, [X31 + 0x20]
	0x03C04784 MOV X19, X8
	0x03C04788 ADD X8, X31, 0x8
	0x03C0478C STP X31, X31, [X31 + 0x8]
	0x03C04790 STR X31, [X31 + 0x18]
	0x03C04794 BL 0x3C046A8
	0x03C04798 LDR X8, [X31 + 0x18]
	0x03C0479C LDUR V0, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+3912]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51367936
	012 Add X0, X0, 3664
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3912], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_allowMSAA()

Disassembly:
	0x03C047A0 STR X8, [X19 + 0x10]
	0x03C047A4 STR V0, [X19]
	0x03C047A8 LDP X30, X19, [X31 + 0x20]
	0x03C047AC ADD X31, X31, 0x30
	0x03C047B0 RET
	0x03C047B4 SUB X31, X31, 0x40
	0x03C047B8 STP X30, X19, [X31 + 0x30]
	0x03C047BC MOV X19, X8
	0x03C047C0 ADD X8, X31, 0x18
	0x03C047C4 MOVZ W1, 0x2
	0x03C047C8 STP X31, X31, [X31 + 0x18]
	0x03C047CC STR X31, [X31 + 0x28]
	0x03C047D0 BL 0x3C046A8
	0x03C047D4 LDR X8, [X31 + 0x28]
	0x03C047D8 LDUR V0, [X31 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+3920]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51220480
	010 Add X0, X0, 1328
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3920], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_allowMSAA(System.Boolean value)

Disassembly:
	0x03C047DC STR X8, [X19 + 0x10]
	0x03C047E0 STR V0, [X19]
	0x03C047E4 LDP X30, X19, [X31 + 0x30]
	0x03C047E8 STR X8, [X31 + 0x10]
	0x03C047EC STR V0, [X31]
	0x03C047F0 ADD X31, X31, 0x40
	0x03C047F4 RET
	0x03C047F8 STP X30, X19, [X31 - 0x10]!
	0x03C047FC ADRP X19, 0x7E0000
	0x03C04800 LDR X0, [X19 + 0x20]
	0x03C04804 CBNZ X0, 0x3C04818
	0x03C04808 ADRP X0, 0xFFFFFFFFFCEF6000
	0x03C0480C ADD X0, X0, 0xFA1
	0x03C04810 BL 0x1C16CB8
	0x03C04814 STR X0, [X19 + 0x20]
	0x03C04818 LDP X30, X19, [X31], #0x10
	0x03C0481C BR X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+3928]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51359744
	012 Add X0, X0, 3593
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3928], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_allowDynamicResolution()

Disassembly:
	0x03C04820 STP X30, X19, [X31 - 0x10]!
	0x03C04824 ADRP X19, 0x7E0000
	0x03C04828 LDR X0, [X19 + 0x28]
	0x03C0482C CBNZ X0, 0x3C04840
	0x03C04830 ADRP X0, 0xFFFFFFFFFCEF4000
	0x03C04834 ADD X0, X0, 0xE1E
	0x03C04838 BL 0x1C16CB8
	0x03C0483C STR X0, [X19 + 0x28]
	0x03C04840 LDP X30, X19, [X31], #0x10
	0x03C04844 BR X0
	0x03C04848 STR X30, [X31 - 0x20]!
	0x03C0484C STP X20, X19, [X31 + 0x10]
	0x03C04850 ADRP X20, 0x7E0000
	0x03C04854 LDR X1, [X20 + 0x30]
	0x03C04858 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+3936]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51404800
	010 Add X0, X0, 72
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3936], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_forceIntoRenderTexture(System.Boolean value)

Disassembly:
	0x03C0485C CBNZ X1, 0x3C04874
	0x03C04860 ADRP X0, 0xFFFFFFFFFCF20000
	0x03C04864 ADD X0, X0, 0xA82
	0x03C04868 BL 0x1C16CB8
	0x03C0486C MOV X1, X0
	0x03C04870 STR X0, [X20 + 0x30]
	0x03C04874 MOV X0, X19
	0x03C04878 LDP X20, X19, [X31 + 0x10]
	0x03C0487C LDR X30, [X31], #0x20
	0x03C04880 BR X1
	0x03C04884 STR X30, [X31 - 0x20]!
	0x03C04888 STP X20, X19, [X31 + 0x10]
	0x03C0488C ADRP X20, 0x7E0000
	0x03C04890 LDR X1, [X20 + 0x38]
	0x03C04894 MOV X19, X0
	0x03C04898 CBNZ X1, 0x3C048B0
	0x03C0489C ADRP X0, 0xFFFFFFFFFCF0A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+3944]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51236864
	012 Add X0, X0, 2569
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3944], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Single get_orthographicSize()

Disassembly:
	0x03C048A0 ADD X0, X0, 0xDD1
	0x03C048A4 BL 0x1C16CB8
	0x03C048A8 MOV X1, X0
	0x03C048AC STR X0, [X20 + 0x38]
	0x03C048B0 MOV X0, X19
	0x03C048B4 LDP X20, X19, [X31 + 0x10]
	0x03C048B8 LDR X30, [X31], #0x20
	0x03C048BC BR X1
	0x03C048C0 STR X30, [X31 - 0x30]!
	0x03C048C4 STP X22, X21, [X31 + 0x10]
	0x03C048C8 STP X20, X19, [X31 + 0x20]
	0x03C048CC ADRP X22, 0x7E0000
	0x03C048D0 LDR X3, [X22 + 0x100]
	0x03C048D4 MOV X19, X2
	0x03C048D8 MOV W20, W1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+3952]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51417088
	010 Add X0, X0, 3890
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3952], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_orthographicSize(System.Single value)

Disassembly:
	0x03C048DC MOV X21, X0
	0x03C048E0 CBNZ X3, 0x3C048F8
	0x03C048E4 ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C048E8 ADD X0, X0, 0xE75
	0x03C048EC BL 0x1C16CB8
	0x03C048F0 MOV X3, X0
	0x03C048F4 STR X0, [X22 + 0x100]
	0x03C048F8 MOV X0, X21
	0x03C048FC MOV W1, W20
	0x03C04900 MOV X2, X19
	0x03C04904 LDP X20, X19, [X31 + 0x20]
	0x03C04908 LDP X22, X21, [X31 + 0x10]
	0x03C0490C LDR X30, [X31], #0x30
	0x03C04910 BR X3
	0x03C04914 STR X30, [X31 - 0x30]!
	0x03C04918 STP X22, X21, [X31 + 0x10]
	0x03C0491C STP X20, X19, [X31 + 0x20]
	0x03C04920 ADRP X22, 0x7E0000
	0x03C04924 LDR X3, [X22 + 0x100]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7E0000
	006 Move X1, [X20+3960]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51326976
	012 Add X0, X0, 3506
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+3960], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Boolean get_orthographic()

Disassembly:
	0x03C04928 MOV X19, X2
	0x03C0492C MOV W20, W1
	0x03C04930 MOV X21, X0
	0x03C04934 CBNZ X3, 0x3C0494C
	0x03C04938 ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C0493C ADD X0, X0, 0xE75
	0x03C04940 BL 0x1C16CB8
	0x03C04944 MOV X3, X0
	0x03C04948 STR X0, [X22 + 0x100]
	0x03C0494C MOV X0, X21
	0x03C04950 MOV W1, W20
	0x03C04954 MOV X2, X19
	0x03C04958 LDP X20, X19, [X31 + 0x20]
	0x03C0495C LDP X22, X21, [X31 + 0x10]
	0x03C04960 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+3968]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51277824
	010 Add X0, X0, 3201
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3968], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Rendering.OpaqueSortMode get_opaqueSortMode()

Disassembly:
	0x03C04964 BR X3
	0x03C04968 STR X30, [X31 - 0x30]!
	0x03C0496C STP X22, X21, [X31 + 0x10]
	0x03C04970 STP X20, X19, [X31 + 0x20]
	0x03C04974 ADRP X22, 0x7E0000
	0x03C04978 LDR X3, [X22 + 0x108]
	0x03C0497C MOV X19, X2
	0x03C04980 MOV W20, W1
	0x03C04984 MOV X21, X0
	0x03C04988 CBNZ X3, 0x3C049A0
	0x03C0498C ADRP X0, 0xFFFFFFFFFCEF4000
	0x03C04990 ADD X0, X0, 0xE40
	0x03C04994 BL 0x1C16CB8
	0x03C04998 MOV X3, X0
	0x03C0499C STR X0, [X22 + 0x108]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+3976]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51425280
	010 Add X0, X0, 3492
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3976], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_depth()

Disassembly:
	0x03C049A0 MOV X0, X21
	0x03C049A4 MOV W1, W20
	0x03C049A8 MOV X2, X19
	0x03C049AC LDP X20, X19, [X31 + 0x20]
	0x03C049B0 LDP X22, X21, [X31 + 0x10]
	0x03C049B4 LDR X30, [X31], #0x30
	0x03C049B8 BR X3
	0x03C049BC STR X30, [X31 - 0x30]!
	0x03C049C0 STP X22, X21, [X31 + 0x10]
	0x03C049C4 STP X20, X19, [X31 + 0x20]
	0x03C049C8 ADRP X22, 0x7E0000
	0x03C049CC LDR X3, [X22 + 0x108]
	0x03C049D0 MOV X19, X2
	0x03C049D4 MOV W20, W1
	0x03C049D8 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+3984]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51417088
	010 Add X0, X0, 3933
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3984], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_aspect()

Disassembly:
	0x03C049DC CBNZ X3, 0x3C049F4
	0x03C049E0 ADRP X0, 0xFFFFFFFFFCEF4000
	0x03C049E4 ADD X0, X0, 0xE40
	0x03C049E8 BL 0x1C16CB8
	0x03C049EC MOV X3, X0
	0x03C049F0 STR X0, [X22 + 0x108]
	0x03C049F4 MOV X0, X21
	0x03C049F8 MOV W1, W20
	0x03C049FC MOV X2, X19
	0x03C04A00 LDP X20, X19, [X31 + 0x20]
	0x03C04A04 LDP X22, X21, [X31 + 0x10]
	0x03C04A08 LDR X30, [X31], #0x30
	0x03C04A0C BR X3
	0x03C04A10 STP X30, X19, [X31 - 0x10]!
	0x03C04A14 ADRP X19, 0x7E0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+3992]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51425280
	010 Add X0, X0, 3533
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3992], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_cullingMask()

Disassembly:
	0x03C04A18 LDR X0, [X19 + 0x40]
	0x03C04A1C CBNZ X0, 0x3C04A30
	0x03C04A20 ADRP X0, 0xFFFFFFFFFCF12000
	0x03C04A24 ADD X0, X0, 0x461
	0x03C04A28 BL 0x1C16CB8
	0x03C04A2C STR X0, [X19 + 0x40]
	0x03C04A30 LDP X30, X19, [X31], #0x10
	0x03C04A34 BR X0
	0x03C04A38 STR X30, [X31 - 0x20]!
	0x03C04A3C STP X20, X19, [X31 + 0x10]
	0x03C04A40 ADRP X20, 0x7E0000
	0x03C04A44 LDR X1, [X20 + 0x48]
	0x03C04A48 MOV X19, X0
	0x03C04A4C CBNZ X1, 0x3C04A64
	0x03C04A50 ADRP X0, 0xFFFFFFFFFCEF9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+4000]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51294208
	010 Add X0, X0, 1497
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+4000], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_cullingMask(System.Int32 value)

Disassembly:
	0x03C04A54 ADD X0, X0, 0xA1
	0x03C04A58 BL 0x1C16CB8
	0x03C04A5C MOV X1, X0
	0x03C04A60 STR X0, [X20 + 0x48]
	0x03C04A64 MOV X0, X19
	0x03C04A68 LDP X20, X19, [X31 + 0x10]
	0x03C04A6C LDR X30, [X31], #0x20
	0x03C04A70 BR X1
	0x03C04A74 STP X30, X19, [X31 - 0x10]!
	0x03C04A78 ADRP X19, 0x7E0000
	0x03C04A7C LDR X0, [X19 + 0x40]
	0x03C04A80 CBNZ X0, 0x3C04A94
	0x03C04A84 ADRP X0, 0xFFFFFFFFFCF12000
	0x03C04A88 ADD X0, X0, 0x461
	0x03C04A8C BL 0x1C16CB8
	0x03C04A90 STR X0, [X19 + 0x40]
	0x03C04A94 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+4008]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51310592
	012 Add X0, X0, 1354
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4008], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_eventMask()

Disassembly:
	0x03C04A98 BR X0
	0x03C04A9C STR X30, [X31 - 0x20]!
	0x03C04AA0 STP X20, X19, [X31 + 0x10]
	0x03C04AA4 ADRP X19, 0x7E0000
	0x03C04AA8 LDRB W8, [X19 + 0x50]
	0x03C04AAC TBNZ X8, 0x0, 0x3C04AC4
	0x03C04AB0 ADRP X0, 0x519000
	0x03C04AB4 LDR X0, [X0 + 0xF98]
	0x03C04AB8 BL 0x1C16CF4
	0x03C04ABC MOVZ W8, 0x1
	0x03C04AC0 STRB W8, [X19 + 0x50]
	0x03C04AC4 ADRP X20, 0x7E0000
	0x03C04AC8 ADRP X19, 0x519000
	0x03C04ACC LDR X8, [X20 + 0x40]
	0x03C04AD0 LDR X19, [X19 + 0xF98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+4016]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51417088
	010 Add X0, X0, 3965
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+4016], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.CameraType get_cameraType()

Disassembly:
	0x03C04AD4 CBNZ X8, 0x3C04AEC
	0x03C04AD8 ADRP X0, 0xFFFFFFFFFCF12000
	0x03C04ADC ADD X0, X0, 0x461
	0x03C04AE0 BL 0x1C16CB8
	0x03C04AE4 MOV X8, X0
	0x03C04AE8 STR X0, [X20 + 0x40]
	0x03C04AEC BLR X8
	0x03C04AF0 LDR X8, [X19]
	0x03C04AF4 MOV W1, W0
	0x03C04AF8 MOV X0, X8
	0x03C04AFC BL 0x1C16D6C
	0x03C04B00 ADRP X20, 0x7E0000
	0x03C04B04 LDR X8, [X20 + 0x48]
	0x03C04B08 MOV X19, X0
	0x03C04B0C CBNZ X8, 0x3C04B24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+4024]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51376128
	010 Add X0, X0, 3878
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+4024], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Color get_backgroundColor()

Disassembly:
	0x03C04B10 ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C04B14 ADD X0, X0, 0xA1
	0x03C04B18 BL 0x1C16CB8
	0x03C04B1C MOV X8, X0
	0x03C04B20 STR X0, [X20 + 0x48]
	0x03C04B24 MOV X0, X19
	0x03C04B28 BLR X8
	0x03C04B2C MOV X0, X19
	0x03C04B30 LDP X20, X19, [X31 + 0x10]
	0x03C04B34 LDR X30, [X31], #0x20
	0x03C04B38 RET
	0x03C04B3C STR X30, [X31 - 0x20]!
	0x03C04B40 STP X20, X19, [X31 + 0x10]
	0x03C04B44 CBZ X0, 0x3C04BAC
	0x03C04B48 ADRP X20, 0x7E0000
	0x03C04B4C LDR X8, [X20 + 0x40]
	0x03C04B50 MOV X19, X0
	0x03C04B54 CBNZ X8, 0x3C04B6C
	0x03C04B58 ADRP X0, 0xFFFFFFFFFCF12000
	0x03C04B5C ADD X0, X0, 0x461
	0x03C04B60 BL 0x1C16CB8
	0x03C04B64 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7E1000
	007 Move X8, [X20+144]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51220480
	013 Add X0, X0, 1364
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+144], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: System.Void set_backgroundColor(UnityEngine.Color value)

Disassembly:
	0x03C04BAC ADRP X0, 0x4FA000
	0x03C04BB0 LDR X0, [X0 + 0xA18]
	0x03C04BB4 BL 0x1C16D08
	0x03C04BB8 BL 0x1C16F10
	0x03C04BBC MOV X1, X31
	0x03C04BC0 MOV X19, X0
	0x03C04BC4 BL 0x3380398
	0x03C04BC8 B 0x3C04BFC
	0x03C04BCC ADRP X0, 0x4F7000
	0x03C04BD0 LDR X0, [X0 + 0x578]
	0x03C04BD4 BL 0x1C16D08
	0x03C04BD8 BL 0x1C16F10
	0x03C04BDC MOV X19, X0
	0x03C04BE0 ADRP X0, 0x55A000
	0x03C04BE4 LDR X0, [X0 + 0xB30]
	0x03C04BE8 BL 0x1C16D08
	0x03C04BEC MOV X1, X0
	0x03C04BF0 MOV X0, X19
	0x03C04BF4 MOV X2, X31
	0x03C04BF8 BL 0x3314A68
	0x03C04BFC ADRP X0, 0x55A000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7E1000
	006 Move X8, [X20+152]
	007 Move X19, X0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Move [X31+16], S3
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51376128
	015 Add X0, X0, 3944
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+152], X0
	019 Add X1, X31, 0
	020 Move X0, X19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return 

Method: UnityEngine.CameraClearFlags get_clearFlags()

Disassembly:
	0x03C04C44 LDP X20, X19, [X31 + 0x10]
	0x03C04C48 LDR X30, [X31], #0x20
	0x03C04C4C BR X1
	0x03C04C50 STR X30, [X31 - 0x20]!
	0x03C04C54 STP X20, X19, [X31 + 0x10]
	0x03C04C58 ADRP X20, 0x7E0000
	0x03C04C5C LDR X1, [X20 + 0x58]
	0x03C04C60 MOV X19, X0
	0x03C04C64 CBNZ X1, 0x3C04C7C
	0x03C04C68 ADRP X0, 0xFFFFFFFFFCEFC000
	0x03C04C6C ADD X0, X0, 0xC26
	0x03C04C70 BL 0x1C16CB8
	0x03C04C74 MOV X1, X0
	0x03C04C78 STR X0, [X20 + 0x58]
	0x03C04C7C MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+4032]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51437568
	010 Add X0, X0, 134
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+4032], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_clearFlags(UnityEngine.CameraClearFlags value)

Disassembly:
	0x03C04C80 LDP X20, X19, [X31 + 0x10]
	0x03C04C84 LDR X30, [X31], #0x20
	0x03C04C88 BR X1
	0x03C04C8C STR X30, [X31 - 0x20]!
	0x03C04C90 STP X20, X19, [X31 + 0x10]
	0x03C04C94 ADRP X20, 0x7E0000
	0x03C04C98 LDR X1, [X20 + 0x60]
	0x03C04C9C MOV X19, X0
	0x03C04CA0 CBNZ X1, 0x3C04CB8
	0x03C04CA4 ADRP X0, 0xFFFFFFFFFCF00000
	0x03C04CA8 ADD X0, X0, 0xF4B
	0x03C04CAC BL 0x1C16CB8
	0x03C04CB0 MOV X1, X0
	0x03C04CB4 STR X0, [X20 + 0x60]
	0x03C04CB8 MOV X0, X19
	0x03C04CBC LDP X20, X19, [X31 + 0x10]
	0x03C04CC0 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+4040]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51384320
	012 Add X0, X0, 3304
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4040], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.DepthTextureMode get_depthTextureMode()

Disassembly:
	0x03C04CC4 BR X1
	0x03C04CC8 STR X30, [X31 - 0x30]!
	0x03C04CCC STP X22, X21, [X31 + 0x10]
	0x03C04CD0 STP X20, X19, [X31 + 0x20]
	0x03C04CD4 ADRP X22, 0x7E0000
	0x03C04CD8 LDR X3, [X22 + 0x68]
	0x03C04CDC MOV X19, X2
	0x03C04CE0 MOV X20, X1
	0x03C04CE4 MOV X21, X0
	0x03C04CE8 CBNZ X3, 0x3C04D00
	0x03C04CEC ADRP X0, 0xFFFFFFFFFCF14000
	0x03C04CF0 ADD X0, X0, 0x5FF
	0x03C04CF4 BL 0x1C16CB8
	0x03C04CF8 MOV X3, X0
	0x03C04CFC STR X0, [X22 + 0x68]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+4048]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51253248
	010 Add X0, X0, 3168
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+4048], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_depthTextureMode(UnityEngine.DepthTextureMode value)

Disassembly:
	0x03C04D00 MOV X0, X21
	0x03C04D04 MOV X1, X20
	0x03C04D08 MOV X2, X19
	0x03C04D0C LDP X20, X19, [X31 + 0x20]
	0x03C04D10 LDP X22, X21, [X31 + 0x10]
	0x03C04D14 LDR X30, [X31], #0x30
	0x03C04D18 BR X3
	0x03C04D1C STR X30, [X31 - 0x20]!
	0x03C04D20 STP X20, X19, [X31 + 0x10]
	0x03C04D24 ADRP X20, 0x7E0000
	0x03C04D28 LDR X1, [X20 + 0x70]
	0x03C04D2C MOV X19, X0
	0x03C04D30 CBNZ X1, 0x3C04D48
	0x03C04D34 ADRP X0, 0xFFFFFFFFFCF22000
	0x03C04D38 ADD X0, X0, 0xA93
	0x03C04D3C BL 0x1C16CB8
	0x03C04D40 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+4056]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51449856
	012 Add X0, X0, 3569
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+4056], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetReplacementShader(UnityEngine.Shader shader, System.String replacementTag)

Disassembly:
	0x03C04D44 STR X0, [X20 + 0x70]
	0x03C04D48 MOV X0, X19
	0x03C04D4C LDP X20, X19, [X31 + 0x10]
	0x03C04D50 LDR X30, [X31], #0x20
	0x03C04D54 BR X1
	0x03C04D58 STP X30, X21, [X31 - 0x20]!
	0x03C04D5C STP X20, X19, [X31 + 0x10]
	0x03C04D60 ADRP X21, 0x7E0000
	0x03C04D64 LDR X2, [X21 + 0x78]
	0x03C04D68 MOV X19, X1
	0x03C04D6C MOV X20, X0
	0x03C04D70 CBNZ X2, 0x3C04D88
	0x03C04D74 ADRP X0, 0xFFFFFFFFFCF0A000
	0x03C04D78 ADD X0, X0, 0xDFB
	0x03C04D7C BL 0x1C16CB8
	0x03C04D80 MOV X2, X0
	0x03C04D84 STR X0, [X21 + 0x78]
	0x03C04D88 MOV X0, X20
	0x03C04D8C MOV X1, X19
	0x03C04D90 LDP X20, X19, [X31 + 0x10]
	0x03C04D94 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E0000
	007 Move X3, [X22+4064]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51236864
	014 Add X0, X0, 2632
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+4064], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Boolean get_usePhysicalProperties()

Disassembly:
	0x03C04D98 BR X2
	0x03C04D9C STP X30, X21, [X31 - 0x20]!
	0x03C04DA0 STP X20, X19, [X31 + 0x10]
	0x03C04DA4 ADRP X20, 0x7E0000
	0x03C04DA8 ADRP X21, 0x54D000
	0x03C04DAC LDRB W8, [X20 + 0x80]
	0x03C04DB0 LDR X21, [X21 + 0x738]
	0x03C04DB4 MOV X19, X0
	0x03C04DB8 TBNZ X8, 0x0, 0x3C04DD0
	0x03C04DBC ADRP X0, 0x54D000
	0x03C04DC0 LDR X0, [X0 + 0x738]
	0x03C04DC4 BL 0x1C16CF4
	0x03C04DC8 MOVZ W8, 0x1
	0x03C04DCC STRB W8, [X20 + 0x80]
	0x03C04DD0 LDR X8, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+4072]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51425280
	010 Add X0, X0, 3566
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+4072], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Rect get_rect()

Disassembly:
	0x03C04DD4 LDR X8, [X8 + 0xB8]
	0x03C04DD8 LDR X8, [X8]
	0x03C04DDC CBZ X8, 0x3C04DFC
	0x03C04DE0 LDR X3, [X8 + 0x18]
	0x03C04DE4 LDR X0, [X8 + 0x40]
	0x03C04DE8 LDR X2, [X8 + 0x28]
	0x03C04DEC MOV X1, X19
	0x03C04DF0 LDP X20, X19, [X31 + 0x10]
	0x03C04DF4 LDP X30, X21, [X31], #0x20
	0x03C04DF8 BR X3
	0x03C04DFC LDP X20, X19, [X31 + 0x10]
	0x03C04E00 LDP X30, X21, [X31], #0x20
	0x03C04E04 RET
	0x03C04E08 STP X30, X21, [X31 - 0x20]!
	0x03C04E0C STP X20, X19, [X31 + 0x10]
	0x03C04E10 ADRP X20, 0x7E0000
	0x03C04E14 ADRP X21, 0x54D000
	0x03C04E18 LDRB W8, [X20 + 0x81]
	0x03C04E1C LDR X21, [X21 + 0x738]
	0x03C04E20 MOV X19, X0
	0x03C04E24 TBNZ X8, 0x0, 0x3C04E3C
	0x03C04E28 ADRP X0, 0x54D000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7E1000
	007 Move X8, [X20+160]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51404800
	013 Add X0, X0, 221
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+160], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: System.Void set_rect(UnityEngine.Rect value)

Disassembly:
	0x03C04E70 RET
	0x03C04E74 STP X30, X21, [X31 - 0x20]!
	0x03C04E78 STP X20, X19, [X31 + 0x10]
	0x03C04E7C ADRP X20, 0x7E0000
	0x03C04E80 ADRP X21, 0x54D000
	0x03C04E84 LDRB W8, [X20 + 0x82]
	0x03C04E88 LDR X21, [X21 + 0x738]
	0x03C04E8C MOV X19, X0
	0x03C04E90 TBNZ X8, 0x0, 0x3C04EA8
	0x03C04E94 ADRP X0, 0x54D000
	0x03C04E98 LDR X0, [X0 + 0x738]
	0x03C04E9C BL 0x1C16CF4
	0x03C04EA0 MOVZ W8, 0x1
	0x03C04EA4 STRB W8, [X20 + 0x82]
	0x03C04EA8 LDR X8, [X21]
	0x03C04EAC LDR X8, [X8 + 0xB8]
	0x03C04EB0 LDR X8, [X8 + 0x10]
	0x03C04EB4 CBZ X8, 0x3C04ED4
	0x03C04EB8 LDR X3, [X8 + 0x18]
	0x03C04EBC LDR X0, [X8 + 0x40]
	0x03C04EC0 LDR X2, [X8 + 0x28]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7E1000
	006 Move X8, [X20+168]
	007 Move X19, X0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Move [X31+16], S3
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51228672
	015 Add X0, X0, 965
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+168], X0
	019 Add X1, X31, 0
	020 Move X0, X19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return 

Method: UnityEngine.Rect get_pixelRect()

Disassembly:
	0x03C04F08 ADD X0, X0, 0x720
	0x03C04F0C BL 0x1C16CB8
	0x03C04F10 MOV X4, X0
	0x03C04F14 STR X0, [X22 + 0x88]
	0x03C04F18 AND W1, W21, 0x1
	0x03C04F1C MOV X0, X20
	0x03C04F20 MOV X2, X19
	0x03C04F24 LDP X20, X19, [X31 + 0x20]
	0x03C04F28 LDP X22, X21, [X31 + 0x10]
	0x03C04F2C MOVZ W3, 0x630
	0x03C04F30 LDR X30, [X31], #0x30
	0x03C04F34 BR X4
	0x03C04F38 STP X30, X23, [X31 - 0x30]!
	0x03C04F3C STP X22, X21, [X31 + 0x10]
	0x03C04F40 STP X20, X19, [X31 + 0x20]
	0x03C04F44 ADRP X23, 0x7E0000
	0x03C04F48 LDR X4, [X23 + 0x88]
	0x03C04F4C MOV W19, W3
	0x03C04F50 MOV X20, X2
	0x03C04F54 MOV W21, W1
	0x03C04F58 MOV X22, X0
	0x03C04F5C CBNZ X4, 0x3C04F74

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7E1000
	007 Move X8, [X20+176]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51326976
	013 Add X0, X0, 3562
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+176], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: System.Void set_pixelRect(UnityEngine.Rect value)

Disassembly:
	0x03C04FA4 MOV X19, X0
	0x03C04FA8 MOV X20, X1
	0x03C04FAC STR X8, [X0 + 0x10]
	0x03C04FB0 LDRB W21, [X2 + 0x52]
	0x03C04FB4 STR X0, [X0 + 0x40]
	0x03C04FB8 MOV X0, X2
	0x03C04FBC BL 0x1C16D84
	0x03C04FC0 TBZ X0, 0x0, 0x3C04FD8
	0x03C04FC4 CMP W21, 0x1
	0x03C04FC8 B.NE 0x3C04FE0
	0x03C04FCC ADRP X8, 0xFFFFFFFFFE000000
	0x03C04FD0 ADD X8, X8, 0x7E0
	0x03C04FD4 B 0x3C04FFC
	0x03C04FD8 CBZ W21, 0x3C04FF4
	0x03C04FDC CBZ X20, 0x3C05018
	0x03C04FE0 LDR X8, [X19 + 0x10]
	0x03C04FE4 LDR X9, [X19 + 0x20]
	0x03C04FE8 STR X8, [X19 + 0x18]
	0x03C04FEC STR X9, [X19 + 0x40]
	0x03C04FF0 B 0x3C05000
	0x03C04FF4 ADRP X8, 0xFFFFFFFFFE000000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7E1000
	006 Move X8, [X20+184]
	007 Move X19, X0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Move [X31+16], S3
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51437568
	015 Add X0, X0, 171
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+184], X0
	019 Add X1, X31, 0
	020 Move X0, X19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return 

Method: System.Int32 get_pixelWidth()

Disassembly:
	0x03C0503C MOV X0, X8
	0x03C05040 BR X3
	0x03C05044 STP S0, S1, [X0]
	0x03C05048 STP S2, S3, [X0 + 0x8]
	0x03C0504C RET
	0x03C05050 STR X30, [X31 - 0x20]!
	0x03C05054 STP X20, X19, [X31 + 0x10]
	0x03C05058 MOV X1, X31
	0x03C0505C MOV X19, X0
	0x03C05060 STR X31, [X0 + 0x18]
	0x03C05064 BL 0x33BDD8C
	0x03C05068 ADRP X20, 0x7DF000
	0x03C0506C LDR X8, [X20 + 0x148]
	0x03C05070 CBNZ X8, 0x3C05088
	0x03C05074 ADRP X0, 0xFFFFFFFFFCF17000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7DF000
	005 Move X1, [X20+4080]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51437568
	010 Add X0, X0, 3688
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+4080], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_pixelHeight()

Disassembly:
	0x03C05078 ADD X0, X0, 0xCA8
	0x03C0507C BL 0x1C16CB8
	0x03C05080 MOV X8, X0
	0x03C05084 STR X0, [X20 + 0x148]
	0x03C05088 MOV X0, X19
	0x03C0508C BLR X8
	0x03C05090 STR X0, [X19 + 0x10]
	0x03C05094 LDP X20, X19, [X31 + 0x10]
	0x03C05098 LDR X30, [X31], #0x20
	0x03C0509C RET
	0x03C050A0 STR X30, [X31 - 0x20]!
	0x03C050A4 STP X20, X19, [X31 + 0x10]
	0x03C050A8 ADRP X20, 0x7DF000
	0x03C050AC LDR X1, [X20 + 0x148]
	0x03C050B0 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7DF000
	005 Move X1, [X20+4088]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51257344
	010 Add X0, X0, 3211
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+4088], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.RenderTexture get_targetTexture()

Disassembly:
	0x03C050B4 CBNZ X1, 0x3C050CC
	0x03C050B8 ADRP X0, 0xFFFFFFFFFCF17000
	0x03C050BC ADD X0, X0, 0xCA8
	0x03C050C0 BL 0x1C16CB8
	0x03C050C4 MOV X1, X0
	0x03C050C8 STR X0, [X20 + 0x148]
	0x03C050CC MOV X0, X19
	0x03C050D0 LDP X20, X19, [X31 + 0x10]
	0x03C050D4 LDR X30, [X31], #0x20
	0x03C050D8 BR X1
	0x03C050DC STP X30, X21, [X31 - 0x20]!
	0x03C050E0 STP X20, X19, [X31 + 0x10]
	0x03C050E4 MOV X19, X0
	0x03C050E8 LDR X0, [X0 + 0x10]
	0x03C050EC MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51372032
	010 Add X0, X0, 3713
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_targetTexture(UnityEngine.RenderTexture value)

Disassembly:
	0x03C050F0 MOV X2, X31
	0x03C050F4 BL 0x33C5D2C
	0x03C050F8 TBZ X0, 0x0, 0x3C05124
	0x03C050FC ADRP X20, 0x7DF000
	0x03C05100 LDR X8, [X20 + 0x150]
	0x03C05104 CBNZ X8, 0x3C0511C
	0x03C05108 ADRP X0, 0xFFFFFFFFFCF19000
	0x03C0510C ADD X0, X0, 0x7B5
	0x03C05110 BL 0x1C16CB8
	0x03C05114 MOV X8, X0
	0x03C05118 STR X0, [X20 + 0x150]
	0x03C0511C MOV X0, X19
	0x03C05120 BLR X8
	0x03C05124 MOV X0, X19
	0x03C05128 LDP X20, X19, [X31 + 0x10]
	0x03C0512C MOV X1, X31
	0x03C05130 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+8]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51437568
	012 Add X0, X0, 3725
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+8], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_targetDisplay()

Disassembly:
	0x03C05134 B 0x33CB4DC
	0x03C05138 B 0x3C0513C
	0x03C0513C MOV X21, X0
	0x03C05140 CMP W1, 0x1
	0x03C05144 B.NE 0x3C05174
	0x03C05148 MOV X0, X21
	0x03C0514C BL 0x3EB1AD0
	0x03C05150 LDR X20, [X0]
	0x03C05154 BL 0x3EB1AE0
	0x03C05158 MOV X0, X19
	0x03C0515C MOV X1, X31
	0x03C05160 BL 0x33CB4DC
	0x03C05164 CBNZ X20, 0x3C0517C
	0x03C05168 LDP X20, X19, [X31 + 0x10]
	0x03C0516C LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+16]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51408896
	010 Add X0, X0, 121
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+16], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Matrix4x4 get_cameraToWorldMatrix()

Disassembly:
	0x03C05170 RET
	0x03C05174 MOV X20, X31
	0x03C05178 B 0x3C05188
	0x03C0517C MOV X0, X20
	0x03C05180 BL 0x1C16F18
	0x03C05184 MOV X21, X0
	0x03C05188 MOV X0, X19
	0x03C0518C MOV X1, X31
	0x03C05190 BL 0x33CB4DC
	0x03C05194 CBNZ X20, 0x3C051A0
	0x03C05198 MOV X0, X21
	0x03C0519C BL 0x1D2C690
	0x03C051A0 MOV X0, X20
	0x03C051A4 BL 0x1C16F18
	0x03C051A8 BL 0x1990590
	0x03C051AC STR X30, [X31 - 0x20]!
	0x03C051B0 STP X20, X19, [X31 + 0x10]
	0x03C051B4 ADRP X20, 0x7DF000
	0x03C051B8 LDR X1, [X20 + 0x150]
	0x03C051BC MOV X19, X0
	0x03C051C0 CBNZ X1, 0x3C051D8
	0x03C051C4 ADRP X0, 0xFFFFFFFFFCF19000
	0x03C051C8 ADD X0, X0, 0x7B5
	0x03C051CC BL 0x1C16CB8
	0x03C051D0 MOV X1, X0
	0x03C051D4 STR X0, [X20 + 0x150]
	0x03C051D8 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x7E0000
	007 Move X19, X8
	008 Move X8, [X21+192]
	009 Move X20, X0
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X31+32], V0
	012 Move [X31+40], V0
	013 Move [X31], V0
	014 Move [X31+8], V0
	015 Compare X8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51331072
	018 Add X0, X0, 3624
	019 Call 0x1C17CB8
	020 Move X8, X0
	021 Move [X21+192], X0
	022 Add X1, X31, 0
	023 Move X0, X20
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move V1, [X31+32]
	026 Move V0, [X31+48]
	027 Move V3, [X31]
	028 Move V2, [X31+16]
	029 Move X30, [X31+64]
	030 Move X21, [X31+72]
	031 Move [X19+32], V1
	032 Move [X19+40], V0
	033 Move [X19], V3
	034 Move [X19+8], V2
	035 Move X20, [X31+80]
	036 Move X19, [X31+88]
	037 Add X31, X31, 96
	038 Return X0

Method: UnityEngine.Matrix4x4 get_worldToCameraMatrix()

Disassembly:
	0x03C05220 BR X1
	0x03C05224 STR X30, [X31 - 0x20]!
	0x03C05228 STP X20, X19, [X31 + 0x10]
	0x03C0522C ADRP X20, 0x7DF000
	0x03C05230 LDR X8, [X20 + 0x118]
	0x03C05234 MOV X19, X0
	0x03C05238 CBNZ X8, 0x3C05250
	0x03C0523C ADRP X0, 0xFFFFFFFFFCF0F000
	0x03C05240 ADD X0, X0, 0x57C
	0x03C05244 BL 0x1C16CB8
	0x03C05248 MOV X8, X0
	0x03C0524C STR X0, [X20 + 0x118]
	0x03C05250 MOV X0, X19
	0x03C05254 BLR X8
	0x03C05258 STR X31, [X19 + 0x10]
	0x03C0525C LDP X20, X19, [X31 + 0x10]
	0x03C05260 LDR X30, [X31], #0x20
	0x03C05264 RET
	0x03C05268 STP X30, X21, [X31 - 0x20]!
	0x03C0526C STP X20, X19, [X31 + 0x10]
	0x03C05270 ADRP X21, 0x7DF000
	0x03C05274 LDR X2, [X21 + 0x120]
	0x03C05278 MOV X19, X1
	0x03C0527C MOV X20, X0
	0x03C05280 CBNZ X2, 0x3C05298
	0x03C05284 ADRP X0, 0xFFFFFFFFFCF1B000
	0x03C05288 ADD X0, X0, 0x7B5

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x7E0000
	007 Move X19, X8
	008 Move X8, [X21+200]
	009 Move X20, X0
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X31+32], V0
	012 Move [X31+40], V0
	013 Move [X31], V0
	014 Move [X31+8], V0
	015 Compare X8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51306496
	018 Add X0, X0, 1162
	019 Call 0x1C17CB8
	020 Move X8, X0
	021 Move [X21+200], X0
	022 Add X1, X31, 0
	023 Move X0, X20
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move V1, [X31+32]
	026 Move V0, [X31+48]
	027 Move V3, [X31]
	028 Move V2, [X31+16]
	029 Move X30, [X31+64]
	030 Move X21, [X31+72]
	031 Move [X19+32], V1
	032 Move [X19+40], V0
	033 Move [X19], V3
	034 Move [X19+8], V2
	035 Move X20, [X31+80]
	036 Move X19, [X31+88]
	037 Add X31, X31, 96
	038 Return X0

Method: System.Void set_worldToCameraMatrix(UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C052D0 BL 0x1C16CB8
	0x03C052D4 MOV X2, X0
	0x03C052D8 STR X0, [X21 + 0x128]
	0x03C052DC MOV X0, X20
	0x03C052E0 MOV X1, X19
	0x03C052E4 LDP X20, X19, [X31 + 0x10]
	0x03C052E8 LDP X30, X21, [X31], #0x20
	0x03C052EC BR X2
	0x03C052F0 STP X30, X21, [X31 - 0x20]!
	0x03C052F4 STP X20, X19, [X31 + 0x10]
	0x03C052F8 ADRP X21, 0x7DF000
	0x03C052FC LDR X2, [X21 + 0x130]
	0x03C05300 MOV W19, W1
	0x03C05304 MOV X20, X0
	0x03C05308 CBNZ X2, 0x3C05320
	0x03C0530C ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C05310 ADD X0, X0, 0xDE8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+208]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51298304
	012 Add X0, X0, 1606
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+208], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Matrix4x4 get_projectionMatrix()

Disassembly:
	0x03C05358 CBNZ X6, 0x3C05370
	0x03C0535C ADRP X0, 0xFFFFFFFFFCF05000
	0x03C05360 ADD X0, X0, 0xED0
	0x03C05364 BL 0x1C16CB8
	0x03C05368 MOV X6, X0
	0x03C0536C STR X0, [X23 + 0x138]
	0x03C05370 AND W1, W22, 0x1
	0x03C05374 MOV X0, X21
	0x03C05378 MOV X4, X20
	0x03C0537C MOV W5, W19
	0x03C05380 LDP X20, X19, [X31 + 0x20]
	0x03C05384 LDP X22, X21, [X31 + 0x10]
	0x03C05388 MOVN W2, 0x0
	0x03C0538C MOVZ W3, 0x2
	0x03C05390 LDP X30, X23, [X31], #0x30
	0x03C05394 BR X6
	0x03C05398 STP X30, X25, [X31 - 0x40]!
	0x03C0539C STP X24, X23, [X31 + 0x10]
	0x03C053A0 STP X22, X21, [X31 + 0x20]
	0x03C053A4 STP X20, X19, [X31 + 0x30]
	0x03C053A8 ADRP X25, 0x7DF000
	0x03C053AC LDR X6, [X25 + 0x138]
	0x03C053B0 MOV W19, W5
	0x03C053B4 MOV X20, X4
	0x03C053B8 MOV W21, W3
	0x03C053BC MOV W22, W2
	0x03C053C0 MOV W23, W1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x7E0000
	007 Move X19, X8
	008 Move X8, [X21+216]
	009 Move X20, X0
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X31+32], V0
	012 Move [X31+40], V0
	013 Move [X31], V0
	014 Move [X31+8], V0
	015 Compare X8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51355648
	018 Add X0, X0, 3718
	019 Call 0x1C17CB8
	020 Move X8, X0
	021 Move [X21+216], X0
	022 Add X1, X31, 0
	023 Move X0, X20
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move V1, [X31+32]
	026 Move V0, [X31+48]
	027 Move V3, [X31]
	028 Move V2, [X31+16]
	029 Move X30, [X31+64]
	030 Move X21, [X31+72]
	031 Move [X19+32], V1
	032 Move [X19+40], V0
	033 Move [X19], V3
	034 Move [X19+8], V2
	035 Move X20, [X31+80]
	036 Move X19, [X31+88]
	037 Add X31, X31, 96
	038 Return X0

Method: System.Void ResetWorldToCameraMatrix()

Disassembly:
	0x03C05408 BR X6
	0x03C0540C STP X30, X21, [X31 - 0x20]!
	0x03C05410 STP X20, X19, [X31 + 0x10]
	0x03C05414 ADRP X21, 0x7DF000
	0x03C05418 LDR X2, [X21 + 0x140]
	0x03C0541C MOV X19, X1
	0x03C05420 MOV X20, X0
	0x03C05424 CBNZ X2, 0x3C0543C
	0x03C05428 ADRP X0, 0xFFFFFFFFFCF11000
	0x03C0542C ADD X0, X0, 0x4D7
	0x03C05430 BL 0x1C16CB8
	0x03C05434 MOV X2, X0
	0x03C05438 STR X0, [X21 + 0x140]
	0x03C0543C MOV X0, X20
	0x03C05440 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+24]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51273728
	010 Add X0, X0, 1926
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+24], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Vector3 WorldToScreenPoint(UnityEngine.Vector3 position, UnityEngine.Camera/MonoOrStereoscopicEye eye)

Disassembly:
	0x03C05444 LDP X20, X19, [X31 + 0x10]
	0x03C05448 LDP X30, X21, [X31], #0x20
	0x03C0544C BR X2
	0x03C05450 SUB X31, X31, 0x30
	0x03C05454 STR X30, [X31 + 0x10]
	0x03C05458 STP X20, X19, [X31 + 0x20]
	0x03C0545C ADRP X20, 0x7DF000
	0x03C05460 LDR X8, [X20 + 0x158]
	0x03C05464 MOV X19, X0
	0x03C05468 STP S0, S1, [X31]
	0x03C0546C STR S2, [X31 + 0x8]
	0x03C05470 CBNZ X8, 0x3C05488
	0x03C05474 ADRP X0, 0xFFFFFFFFFCF0F000
	0x03C05478 ADD X0, X0, 0x5A8
	0x03C0547C BL 0x1C16CB8
	0x03C05480 MOV X8, X0
	0x03C05484 STR X0, [X20 + 0x158]
	0x03C05488 ADD X1, X31, 0x0
	0x03C0548C MOV X0, X19
	0x03C05490 BLR X8
	0x03C05494 LDP X20, X19, [X31 + 0x20]
	0x03C05498 LDR X30, [X31 + 0x10]
	0x03C0549C ADD X31, X31, 0x30
	0x03C054A0 RET
	0x03C054A4 STP X30, X21, [X31 - 0x20]!
	0x03C054A8 STP X20, X19, [X31 + 0x10]
	0x03C054AC ADRP X21, 0x7DF000
	0x03C054B0 LDR X2, [X21 + 0x158]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x7E0000
	007 Move X8, [X21+224]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31+16], S0
	011 Move [X31+24], S1
	012 Move [X31+24], S2
	013 Move [X31+8], W31
	014 Move [X31], X31
	015 Compare X8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51347456
	018 Add X0, X0, 3229
	019 Call 0x1C17CB8
	020 Move X8, X0
	021 Move [X21+224], X0
	022 Add X1, X31, 16
	023 Add X3, X31, 0
	024 Move X0, X20
	025 Move W2, W19
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move S0, [X31]
	028 Move S1, [X31+4]
	029 Move V2, [X31+8]
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Add X31, X31, 64
	035 Return X0

Method: UnityEngine.Vector3 ScreenToWorldPoint(UnityEngine.Vector3 position, UnityEngine.Camera/MonoOrStereoscopicEye eye)

Disassembly:
	0x03C05510 MOV W21, W2
	0x03C05514 LDR X1, [X19], #0x8
	0x03C05518 LDR X9, [X8 + 0x18]
	0x03C0551C LDR X0, [X8 + 0x40]
	0x03C05520 LDR X2, [X8 + 0x28]
	0x03C05524 BLR X9
	0x03C05528 SUBS X21, X21, 0x1
	0x03C0552C B.EQ 0x3C0553C
	0x03C05530 LDR X8, [X20 + 0x18]
	0x03C05534 CBNZ X8, 0x3C05514
	0x03C05538 BL 0x1C16F20
	0x03C0553C LDP X20, X19, [X31 + 0x10]
	0x03C05540 LDP X30, X21, [X31], #0x20
	0x03C05544 RET
	0x03C05548 STP X30, X21, [X31 - 0x20]!
	0x03C0554C STP X20, X19, [X31 + 0x10]
	0x03C05550 LDR X8, [X2 + 0x8]
	0x03C05554 STP X1, X2, [X0 + 0x20]
	0x03C05558 MOV X19, X0
	0x03C0555C MOV X20, X1
	0x03C05560 STR X8, [X0 + 0x10]
	0x03C05564 LDRB W21, [X2 + 0x52]
	0x03C05568 STR X0, [X0 + 0x40]
	0x03C0556C MOV X0, X2
	0x03C05570 BL 0x1C16D84
	0x03C05574 TBZ X0, 0x0, 0x3C05590
	0x03C05578 CMP W21, 0x1
	0x03C0557C B.NE 0x3C05594

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x7E0000
	007 Move X8, [X21+232]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31+16], S0
	011 Move [X31+24], S1
	012 Move [X31+24], S2
	013 Move [X31+8], W31
	014 Move [X31], X31
	015 Compare X8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51462144
	018 Add X0, X0, 3029
	019 Call 0x1C17CB8
	020 Move X8, X0
	021 Move [X21+232], X0
	022 Add X1, X31, 16
	023 Add X3, X31, 0
	024 Move X0, X20
	025 Move W2, W19
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move S0, [X31]
	028 Move S1, [X31+4]
	029 Move V2, [X31+8]
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Add X31, X31, 64
	035 Return X0

Method: UnityEngine.Vector3 WorldToScreenPoint(UnityEngine.Vector3 position)

Disassembly:
	0x03C055DC LDR X2, [X0 + 0x28]
	0x03C055E0 MOV X0, X8

ISIL:
	001 Move W1, 2
	002 Call Camera.WorldToScreenPoint, X0, X1, X2
	003 Return X0

Method: UnityEngine.Vector3 ScreenToWorldPoint(UnityEngine.Vector3 position)

Disassembly:
	0x03C055E4 BR X3
	0x03C055E8 STR X30, [X31 - 0x20]!

ISIL:
	001 Move W1, 2
	002 Call Camera.ScreenToWorldPoint, X0, X1, X2
	003 Return X0

Method: UnityEngine.Vector3 ScreenToViewportPoint(UnityEngine.Vector3 position)

Disassembly:
	0x03C055EC STP X20, X19, [X31 + 0x10]
	0x03C055F0 ADRP X20, 0x7DF000
	0x03C055F4 LDR X1, [X20 + 0x160]
	0x03C055F8 MOV X19, X0
	0x03C055FC CBNZ X1, 0x3C05614
	0x03C05600 ADRP X0, 0xFFFFFFFFFCF17000
	0x03C05604 ADD X0, X0, 0xCD6
	0x03C05608 BL 0x1C16CB8
	0x03C0560C MOV X1, X0
	0x03C05610 STR X0, [X20 + 0x160]
	0x03C05614 MOV X0, X19
	0x03C05618 LDP X20, X19, [X31 + 0x10]
	0x03C0561C LDR X30, [X31], #0x20
	0x03C05620 BR X1
	0x03C05624 SUB X31, X31, 0x30
	0x03C05628 STR X30, [X31 + 0x10]
	0x03C0562C STP X20, X19, [X31 + 0x20]
	0x03C05630 ADRP X20, 0x7DF000
	0x03C05634 ADRP X19, 0x54E000
	0x03C05638 LDRB W8, [X20 + 0x168]
	0x03C0563C LDR X19, [X19 + 0x2F8]
	0x03C05640 TBNZ X8, 0x0, 0x3C05658
	0x03C05644 ADRP X0, 0x54E000
	0x03C05648 LDR X0, [X0 + 0x2F8]
	0x03C0564C BL 0x1C16CF4
	0x03C05650 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x7E0000
	006 Move X8, [X20+240]
	007 Move X19, X0
	008 Move [X31+16], S0
	009 Move [X31+24], S1
	010 Move [X31+24], S2
	011 Move [X31+8], W31
	012 Move [X31], X31
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51453952
	016 Add X0, X0, 3640
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X20+240], X0
	020 Add X1, X31, 16
	021 Add X2, X31, 0
	022 Move X0, X19
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move S0, [X31]
	025 Move S1, [X31+4]
	026 Move V2, [X31+8]
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X30, [X31+32]
	030 Add X31, X31, 64
	031 Return X0

Method: UnityEngine.Ray ScreenPointToRay(UnityEngine.Vector2 pos, UnityEngine.Camera/MonoOrStereoscopicEye eye)

Disassembly:
	0x03C056A8 RET
	0x03C056AC STR X30, [X31 - 0x20]!
	0x03C056B0 STP X20, X19, [X31 + 0x10]
	0x03C056B4 ADRP X20, 0x7DF000
	0x03C056B8 LDR X1, [X20 + 0x180]
	0x03C056BC MOV X19, X0
	0x03C056C0 CBNZ X1, 0x3C056D8
	0x03C056C4 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C056C8 ADD X0, X0, 0x116
	0x03C056CC BL 0x1C16CB8
	0x03C056D0 MOV X1, X0
	0x03C056D4 STR X0, [X20 + 0x180]
	0x03C056D8 MOV X0, X19
	0x03C056DC LDP X20, X19, [X31 + 0x10]
	0x03C056E0 LDR X30, [X31], #0x20
	0x03C056E4 BR X1
	0x03C056E8 STP X30, X19, [X31 - 0x10]!
	0x03C056EC ADRP X19, 0x7DF000
	0x03C056F0 LDR X0, [X19 + 0x170]
	0x03C056F4 CBNZ X0, 0x3C05708
	0x03C056F8 ADRP X0, 0xFFFFFFFFFCF19000
	0x03C056FC ADD X0, X0, 0x7E2
	0x03C05700 BL 0x1C16CB8
	0x03C05704 STR X0, [X19 + 0x170]
	0x03C05708 LDP X30, X19, [X31], #0x10
	0x03C0570C BR X0
	0x03C05710 STR X30, [X31 - 0x30]!
	0x03C05714 STP X22, X21, [X31 + 0x10]
	0x03C05718 STP X20, X19, [X31 + 0x20]
	0x03C0571C ADRP X22, 0x7DF000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+24], X31
	003 Move [X31+32], X30
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x7E0000
	009 Move X19, X8
	010 Move X8, [X22+248]
	011 Move W20, W1
	012 Move X21, X0
	013 Move [X31+40], S0
	014 Move [X31+48], S1
	015 Move [X31+8], X31
	016 Move [X31+16], X31
	017 Compare X8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51298304
	020 Add X0, X0, 1683
	021 Call 0x1C17CB8
	022 Move X8, X0
	023 Move [X22+248], X0
	024 Add X1, X31, 40
	025 Add X3, X31, 8
	026 Move X0, X21
	027 Move W2, W20
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X8, [X31+24]
	030 Move X30, [X31+32]
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 Move X22, [X31+48]
	033 Move X21, [X31+56]
	034 Move [X19+16], X8
	035 Move [X19], V0
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Add X31, X31, 80
	039 Return X0

Method: UnityEngine.Ray ScreenPointToRay(UnityEngine.Vector3 pos, UnityEngine.Camera/MonoOrStereoscopicEye eye)

Disassembly:
	0x03C0577C MOV W2, W19
	0x03C05780 LDP X20, X19, [X31 + 0x20]
	0x03C05784 LDP X22, X21, [X31 + 0x10]
	0x03C05788 LDR X30, [X31], #0x30
	0x03C0578C BR X4
	0x03C05790 LDP X20, X19, [X31 + 0x20]
	0x03C05794 LDP X22, X21, [X31 + 0x10]
	0x03C05798 LDR X30, [X31], #0x30
	0x03C0579C RET
	0x03C057A0 SUB X31, X31, 0x40
	0x03C057A4 STP X30, X21, [X31 + 0x20]
	0x03C057A8 STP X20, X19, [X31 + 0x30]
	0x03C057AC ADRP X21, 0x7DF000
	0x03C057B0 ADRP X20, 0x54E000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X19, X8
	005 Add X8, X31, 8
	006 Move [X31+8], X31
	007 Move [X31+16], X31
	008 Move [X31+24], X31
	009 Call Camera.ScreenPointToRay, X0, X1, X2
	010 Move X8, [X31+24]
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 Move [X19+16], X8
	013 Move [X19], V0
	014 Move X30, [X31+32]
	015 Move X19, [X31+40]
	016 Add X31, X31, 48
	017 Return X0

Method: UnityEngine.Ray ScreenPointToRay(UnityEngine.Vector3 pos)

Disassembly:
	0x03C057B4 LDRB W8, [X21 + 0x179]
	0x03C057B8 LDR X20, [X20 + 0x2F8]
	0x03C057BC MOV X19, X0
	0x03C057C0 TBNZ X8, 0x0, 0x3C05808
	0x03C057C4 ADRP X0, 0x559000
	0x03C057C8 LDR X0, [X0 + 0xB40]
	0x03C057CC BL 0x1C16CF4
	0x03C057D0 ADRP X0, 0x559000
	0x03C057D4 LDR X0, [X0 + 0xB48]
	0x03C057D8 BL 0x1C16CF4
	0x03C057DC ADRP X0, 0x559000
	0x03C057E0 LDR X0, [X0 + 0xB50]
	0x03C057E4 BL 0x1C16CF4
	0x03C057E8 ADRP X0, 0x559000
	0x03C057EC LDR X0, [X0 + 0xB58]
	0x03C057F0 BL 0x1C16CF4
	0x03C057F4 ADRP X0, 0x54E000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, X8
	005 Add X8, X31, 24
	006 Move W1, 2
	007 Move [X31+24], X31
	008 Move [X31+32], X31
	009 Move [X31+40], X31
	010 Call Camera.ScreenPointToRay, X0, X1, X2
	011 Move X8, [X31+40]
	012 NotImplemented "Instruction LDUR not yet implemented."
	013 Move [X19+16], X8
	014 Move [X19], V0
	015 Move X30, [X31+48]
	016 Move X19, [X31+56]
	017 Move [X31+16], X8
	018 Move [X31], V0
	019 Add X31, X31, 64
	020 Return X0

Method: UnityEngine.Camera get_main()

Disassembly:
	0x03C057F8 LDR X0, [X0 + 0x2F8]
	0x03C057FC BL 0x1C16CF4
	0x03C05800 MOVZ W8, 0x1
	0x03C05804 STRB W8, [X21 + 0x179]
	0x03C05808 LDR X0, [X20]
	0x03C0580C STP X31, X31, [X31 + 0x8]
	0x03C05810 STR X31, [X31 + 0x18]
	0x03C05814 LDR W8, [X0 + 0xE0]
	0x03C05818 CBNZ W8, 0x3C05824
	0x03C0581C BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E0000
	004 Move X0, [X19+32]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51421184
	008 Add X0, X0, 4001
	009 Call 0x1C17CB8
	010 Move [X19+32], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Camera get_current()

Disassembly:
	0x03C05820 LDR X0, [X20]
	0x03C05824 LDR X8, [X0 + 0xB8]
	0x03C05828 LDR X0, [X8 + 0x10]
	0x03C0582C CBZ X0, 0x3C058A4
	0x03C05830 ADRP X8, 0x559000
	0x03C05834 LDR X8, [X8 + 0xB58]
	0x03C05838 ADRP X21, 0x559000
	0x03C0583C ADRP X20, 0x559000
	0x03C05840 LDR X1, [X8]
	0x03C05844 LDR X21, [X21 + 0xB48]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E0000
	004 Move X0, [X19+40]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51429376
	008 Add X0, X0, 3614
	009 Call 0x1C17CB8
	010 Move [X19+40], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean get_stereoEnabled()

Disassembly:
	0x03C05848 LDR X20, [X20 + 0xB40]
	0x03C0584C ADD X8, X31, 0x8
	0x03C05850 BL 0x301CB58
	0x03C05854 LDR X1, [X21]
	0x03C05858 ADD X0, X31, 0x8
	0x03C0585C BL 0x2BC4350
	0x03C05860 TBZ X0, 0x0, 0x3C05884
	0x03C05864 LDR X8, [X31 + 0x18]
	0x03C05868 CBZ X8, 0x3C058A0
	0x03C0586C LDR X0, [X8 + 0x40]
	0x03C05870 LDR X9, [X8 + 0x18]
	0x03C05874 LDR X2, [X8 + 0x28]
	0x03C05878 MOV X1, X19
	0x03C0587C BLR X9
	0x03C05880 B 0x3C05854

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+48]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51249152
	010 Add X0, X0, 2690
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+48], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.StereoTargetEyeMask get_stereoTargetEye()

Disassembly:
	0x03C05884 LDR X1, [X20]
	0x03C05888 ADD X0, X31, 0x8
	0x03C0588C BL 0x2BC434C
	0x03C05890 LDP X20, X19, [X31 + 0x30]
	0x03C05894 LDP X30, X21, [X31 + 0x20]
	0x03C05898 ADD X31, X31, 0x40
	0x03C0589C RET
	0x03C058A0 BL 0x1C16F20
	0x03C058A4 BL 0x1C16F20
	0x03C058A8 B 0x3C058B0
	0x03C058AC B 0x3C058B0
	0x03C058B0 MOV X19, X0
	0x03C058B4 CMP W1, 0x1
	0x03C058B8 B.NE 0x3C058EC
	0x03C058BC MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+56]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51339264
	010 Add X0, X0, 3537
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+56], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetStereoProjectionMatrix(UnityEngine.Camera/StereoscopicEye eye, UnityEngine.Matrix4x4 matrix)

Disassembly:
	0x03C058C0 BL 0x3EB1AD0
	0x03C058C4 LDR X20, [X0]
	0x03C058C8 BL 0x3EB1AE0
	0x03C058CC ADRP X8, 0x559000
	0x03C058D0 LDR X8, [X8 + 0xB40]
	0x03C058D4 ADD X0, X31, 0x8
	0x03C058D8 LDR X1, [X8]
	0x03C058DC BL 0x2BC434C
	0x03C058E0 CBZ X20, 0x3C05890
	0x03C058E4 MOV X0, X20
	0x03C058E8 BL 0x1C16F18
	0x03C058EC MOV X20, X31
	0x03C058F0 B 0x3C058F8
	0x03C058F4 MOV X19, X0
	0x03C058F8 ADRP X8, 0x559000
	0x03C058FC LDR X8, [X8 + 0xB40]
	0x03C05900 LDR X1, [X8]
	0x03C05904 ADD X0, X31, 0x8
	0x03C05908 BL 0x2BC434C
	0x03C0590C CBNZ X20, 0x3C05918
	0x03C05910 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E0000
	007 Move X3, [X22+256]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51331072
	014 Add X0, X0, 3701
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+256], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetStereoViewMatrix(UnityEngine.Camera/StereoscopicEye eye, UnityEngine.Matrix4x4 matrix)

Disassembly:
	0x03C05968 ADRP X0, 0x559000
	0x03C0596C LDR X0, [X0 + 0xB68]
	0x03C05970 BL 0x1C16CF4
	0x03C05974 ADRP X0, 0x559000
	0x03C05978 LDR X0, [X0 + 0xB60]
	0x03C0597C BL 0x1C16CF4
	0x03C05980 ADRP X0, 0x559000
	0x03C05984 LDR X0, [X0 + 0xB78]
	0x03C05988 BL 0x1C16CF4
	0x03C0598C ADRP X0, 0x559000
	0x03C05990 LDR X0, [X0 + 0xB70]
	0x03C05994 BL 0x1C16CF4
	0x03C05998 ADRP X0, 0x54E000
	0x03C0599C LDR X0, [X0 + 0x2F8]
	0x03C059A0 BL 0x1C16CF4
	0x03C059A4 MOVZ W8, 0x1
	0x03C059A8 STRB W8, [X23 + 0x17A]
	0x03C059AC LDR X0, [X24]
	0x03C059B0 BL 0x1C16F10
	0x03C059B4 LDR X1, [X19]
	0x03C059B8 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E0000
	007 Move X3, [X22+264]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51429376
	014 Add X0, X0, 3648
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+264], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Int32 GetAllCamerasCount()

Disassembly:
	0x03C05A10 LDR X4, [X23 + 0x188]
	0x03C05A14 MOV X19, X3
	0x03C05A18 MOV X20, X2
	0x03C05A1C MOV W21, W1
	0x03C05A20 MOV W22, W0
	0x03C05A24 CBNZ X4, 0x3C05A3C
	0x03C05A28 ADRP X0, 0xFFFFFFFFFCF1D000
	0x03C05A2C ADD X0, X0, 0xCB1
	0x03C05A30 BL 0x1C16CB8
	0x03C05A34 MOV X4, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E0000
	004 Move X0, [X19+64]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51306496
	008 Add X0, X0, 1121
	009 Call 0x1C17CB8
	010 Move [X19+64], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Int32 GetAllCamerasImpl(out UnityEngine.Camera[] cam)

Disassembly:
	0x03C05A38 STR X0, [X23 + 0x188]
	0x03C05A3C MOV W0, W22
	0x03C05A40 MOV W1, W21
	0x03C05A44 MOV X2, X20
	0x03C05A48 MOV X3, X19
	0x03C05A4C LDP X20, X19, [X31 + 0x20]
	0x03C05A50 LDP X22, X21, [X31 + 0x10]
	0x03C05A54 LDP X30, X23, [X31], #0x30
	0x03C05A58 BR X4
	0x03C05A5C STP X30, X21, [X31 - 0x20]!
	0x03C05A60 STP X20, X19, [X31 + 0x10]
	0x03C05A64 ADRP X21, 0x7DF000
	0x03C05A68 LDR X2, [X21 + 0x190]
	0x03C05A6C MOV X19, X1
	0x03C05A70 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+72]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51408896
	010 Add X0, X0, 161
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+72], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_allCamerasCount()

Disassembly:
	0x03C05A74 CBNZ X2, 0x3C05A8C
	0x03C05A78 ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C05A7C ADD X0, X0, 0xE27
	0x03C05A80 BL 0x1C16CB8
	0x03C05A84 MOV X2, X0
	0x03C05A88 STR X0, [X21 + 0x190]
	0x03C05A8C MOV X0, X20
	0x03C05A90 MOV X1, X19
	0x03C05A94 LDP X20, X19, [X31 + 0x10]
	0x03C05A98 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E0000
	004 Move X0, [X19+64]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51306496
	008 Add X0, X0, 1121
	009 Call 0x1C17CB8
	010 Move [X19+64], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Camera[] get_allCameras()

Disassembly:
	0x03C05A9C BR X2
	0x03C05AA0 STR X30, [X31 - 0x30]!
	0x03C05AA4 STP X22, X21, [X31 + 0x10]
	0x03C05AA8 STP X20, X19, [X31 + 0x20]
	0x03C05AAC MOV X0, X3
	0x03C05AB0 MOV X19, X2
	0x03C05AB4 MOV W20, W1
	0x03C05AB8 MOV X1, X4
	0x03C05ABC MOV X2, X31
	0x03C05AC0 BL 0x3227C5C
	0x03C05AC4 ADRP X22, 0x7DF000
	0x03C05AC8 LDR X4, [X22 + 0x188]
	0x03C05ACC MOV X21, X0
	0x03C05AD0 CBNZ X4, 0x3C05AE8
	0x03C05AD4 ADRP X0, 0xFFFFFFFFFCF1D000
	0x03C05AD8 ADD X0, X0, 0xCB1
	0x03C05ADC BL 0x1C16CB8
	0x03C05AE0 MOV X4, X0
	0x03C05AE4 STR X0, [X22 + 0x188]
	0x03C05AE8 MOV W0, W20
	0x03C05AEC MOV X2, X21
	0x03C05AF0 MOV X3, X19
	0x03C05AF4 LDP X20, X19, [X31 + 0x20]
	0x03C05AF8 LDP X22, X21, [X31 + 0x10]
	0x03C05AFC MOV W1, W31
	0x03C05B00 LDR X30, [X31], #0x30
	0x03C05B04 BR X4
	0x03C05B08 STP X30, X21, [X31 - 0x20]!
	0x03C05B0C STP X20, X19, [X31 + 0x10]
	0x03C05B10 CBZ X1, 0x3C05B50
	0x03C05B14 ADRP X21, 0x7DF000
	0x03C05B18 MOV X19, X2
	0x03C05B1C LDR X2, [X21 + 0x190]
	0x03C05B20 MOV X20, X1
	0x03C05B24 CBNZ X2, 0x3C05B3C
	0x03C05B28 ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C05B2C ADD X0, X0, 0xE27
	0x03C05B30 BL 0x1C16CB8
	0x03C05B34 MOV X2, X0
	0x03C05B38 STR X0, [X21 + 0x190]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7E0000
	005 Move W8, [X19+80]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {15}
	010 Move X0, 0x519000
	011 Move X0, [X0+3992]
	012 Call 0x1C17CF4
	013 Move W8, 1
	014 Move [X19+80], W8
	015 Move X20, 0x7E0000
	016 Move X19, 0x519000
	017 Move X8, [X20+64]
	018 Move X19, [X19+3992]
	019 Compare X8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51306496
	022 Add X0, X0, 1121
	023 Call 0x1C17CB8
	024 Move X8, X0
	025 Move [X20+64], X0
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X19]
	028 Move W1, W0
	029 Move X0, X8
	030 Call 0x1C17D6C
	031 Move X20, 0x7E0000
	032 Move X8, [X20+72]
	033 Move X19, X0
	034 Compare X8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, -51408896
	037 Add X0, X0, 161
	038 Call 0x1C17CB8
	039 Move X8, X0
	040 Move [X20+72], X0
	041 Move X0, X19
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0

Method: System.Int32 GetAllCameras(UnityEngine.Camera[] cameras)

Disassembly:
	0x03C05B3C MOV X0, X20
	0x03C05B40 MOV X1, X19
	0x03C05B44 LDP X20, X19, [X31 + 0x10]
	0x03C05B48 LDP X30, X21, [X31], #0x20
	0x03C05B4C BR X2
	0x03C05B50 ADRP X0, 0x4F3000
	0x03C05B54 LDR X0, [X0 + 0x528]
	0x03C05B58 BL 0x1C16D08
	0x03C05B5C BL 0x1C16F10
	0x03C05B60 MOV X19, X0
	0x03C05B64 ADRP X0, 0x517000
	0x03C05B68 LDR X0, [X0 + 0x778]
	0x03C05B6C BL 0x1C16D08
	0x03C05B70 MOV X1, X0
	0x03C05B74 MOV X0, X19
	0x03C05B78 MOV X2, X31
	0x03C05B7C BL 0x330E100
	0x03C05B80 ADRP X0, 0x559000
	0x03C05B84 LDR X0, [X0 + 0xB80]
	0x03C05B88 BL 0x1C16D08
	0x03C05B8C MOV X1, X0
	0x03C05B90 MOV X0, X19
	0x03C05B94 BL 0x1C16DEC
	0x03C05B98 MOV X1, X31
	0x03C05B9C B 0x33BDD8C
	0x03C05BA0 STR X30, [X31 - 0x20]!
	0x03C05BA4 STP X20, X19, [X31 + 0x10]
	0x03C05BA8 ADRP X20, 0x7DF000
	0x03C05BAC ADRP X19, 0x4EE000
	0x03C05BB0 LDRB W8, [X20 + 0x198]
	0x03C05BB4 LDR X19, [X19 + 0xA28]
	0x03C05BB8 TBNZ X8, 0x0, 0x3C05BD0
	0x03C05BBC ADRP X0, 0x4EE000
	0x03C05BC0 LDR X0, [X0 + 0xA28]
	0x03C05BC4 BL 0x1C16CF4
	0x03C05BC8 MOVZ W8, 0x1
	0x03C05BCC STRB W8, [X20 + 0x198]
	0x03C05BD0 LDR X0, [X19]
	0x03C05BD4 LDR W8, [X0 + 0xE0]
	0x03C05BD8 CBNZ W8, 0x3C05BE4
	0x03C05BDC BL 0x1C16DFC
	0x03C05BE0 LDR X0, [X19]
	0x03C05BE4 LDR X8, [X0 + 0xB8]
	0x03C05BE8 LDP X20, X19, [X31 + 0x10]
	0x03C05BEC LDR X0, [X8 + 0x8]
	0x03C05BF0 LDR X30, [X31], #0x20
	0x03C05BF4 RET
	0x03C05BF8 SUB X31, X31, 0x80
	0x03C05BFC STP D15, D14, [X31 + 0x20]
	0x03C05C00 STP D13, D12, [X31 + 0x30]
	0x03C05C04 STP D11, D10, [X31 + 0x40]
	0x03C05C08 STP D9, D8, [X31 + 0x50]
	0x03C05C0C STR X30, [X31 + 0x60]
	0x03C05C10 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {33}
	006 Move X20, 0x7E0000
	007 Move X8, [X20+64]
	008 Move X19, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51306496
	012 Add X0, X0, 1121
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X20+64], X0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move W8, [X19+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X20, 0x7E0000
	020 Move X1, [X20+72]
	021 Compare X1, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51408896
	024 Add X0, X0, 161
	025 Call 0x1C17CB8
	026 Move X1, X0
	027 Move [X20+72], X0
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 CallNoReturn X1
	033 Move X0, 0x4FA000
	034 Move X0, [X0+2584]
	035 Call 0x1C17D08
	036 Call 0x1C17F10
	037 Move X1, X31
	038 Move X19, X0
	039 Call NullReferenceException..ctor, X0
	040 Move X0, 0x4F7000
	041 Move X0, [X0+1400]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0x55A000
	046 Move X0, [X0+2864]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Move X2, X31
	051 Call ArgumentException..ctor, X0, X1
	052 Move X0, 0x55A000
	053 Move X0, [X0+2872]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X19
	057 Call 0x1C17DEC

Method: System.Int32 GetFilterMode()

Disassembly:
	0x03C05C14 ADRP X20, 0x7DF000
	0x03C05C18 ADRP X19, 0x4EE000
	0x03C05C1C LDRB W8, [X20 + 0x199]
	0x03C05C20 LDR X19, [X19 + 0xA28]
	0x03C05C24 MOV V10.16B, V4.16B
	0x03C05C28 MOV V11.16B, V3.16B
	0x03C05C2C MOV V12.16B, V2.16B
	0x03C05C30 MOV V13.16B, V1.16B
	0x03C05C34 TBNZ X8, 0x0, 0x3C05C5C
	0x03C05C38 ADRP X0, 0x4EE000
	0x03C05C3C LDR X0, [X0 + 0xA28]
	0x03C05C40 MOV V8.16B, V5.16B
	0x03C05C44 MOV V9.16B, V0.16B
	0x03C05C48 BL 0x1C16CF4
	0x03C05C4C MOV V0.16B, V9.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+88]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51396608
	010 Add X0, X0, 3110
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+88], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Camera/SceneViewFilterMode get_sceneViewFilterMode()

Disassembly:
	0x03C05C50 MOV V5.16B, V8.16B
	0x03C05C54 MOVZ W8, 0x1
	0x03C05C58 STRB W8, [X20 + 0x199]
	0x03C05C5C LDR X0, [X19]
	0x03C05C60 LDP S15, S14, [X31 + 0x88]
	0x03C05C64 LDP S8, S9, [X31 + 0x80]
	0x03C05C68 LDR W8, [X0 + 0xE0]
	0x03C05C6C CBNZ W8, 0x3C05C9C
	0x03C05C70 STP S12, S13, [X31 + 0x68]
	0x03C05C74 MOV V12.16B, V11.16B
	0x03C05C78 MOV V11.16B, V10.16B
	0x03C05C7C MOV V10.16B, V5.16B
	0x03C05C80 MOV V13.16B, V0.16B
	0x03C05C84 BL 0x1C16DFC
	0x03C05C88 MOV V0.16B, V13.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+88]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51396608
	010 Add X0, X0, 3110
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+88], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Render()

Disassembly:
	0x03C05C8C MOV V5.16B, V10.16B
	0x03C05C90 MOV V10.16B, V11.16B
	0x03C05C94 MOV V11.16B, V12.16B
	0x03C05C98 LDP S12, S13, [X31 + 0x68]
	0x03C05C9C MOVZ W0, 0x1
	0x03C05CA0 MOV V1.16B, V13.16B
	0x03C05CA4 MOV V2.16B, V12.16B
	0x03C05CA8 MOV V3.16B, V11.16B
	0x03C05CAC MOV V4.16B, V10.16B
	0x03C05CB0 STR W31, [X31 + 0x10]
	0x03C05CB4 STP S8, S9, [X31]
	0x03C05CB8 STP S15, S14, [X31 + 0x8]
	0x03C05CBC BL 0x3C05CE0
	0x03C05CC0 LDP X20, X19, [X31 + 0x70]
	0x03C05CC4 LDR X30, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+96]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51380224
	010 Add X0, X0, 3915
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+96], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void RenderWithShader(UnityEngine.Shader shader, System.String replacementTag)

Disassembly:
	0x03C05CC8 LDP D9, D8, [X31 + 0x50]
	0x03C05CCC LDP D11, D10, [X31 + 0x40]
	0x03C05CD0 LDP D13, D12, [X31 + 0x30]
	0x03C05CD4 LDP D15, D14, [X31 + 0x20]
	0x03C05CD8 ADD X31, X31, 0x80
	0x03C05CDC RET
	0x03C05CE0 SUB X31, X31, 0x60
	0x03C05CE4 STR D8, [X31 + 0x30]
	0x03C05CE8 STP X30, X21, [X31 + 0x40]
	0x03C05CEC STP X20, X19, [X31 + 0x50]
	0x03C05CF0 LDR V6, [X31 + 0x6]
	0x03C05CF4 STP S0, S1, [X31 + 0x20]
	0x03C05CF8 STR S2, [X31 + 0x28]
	0x03C05CFC ADRP X20, 0x7DF000
	0x03C05D00 STP S3, S4, [X31 + 0x10]
	0x03C05D04 STR S5, [X31 + 0x18]
	0x03C05D08 STR V6, [X31]
	0x03C05D0C ADRP X21, 0x4EE000
	0x03C05D10 LDRB W8, [X20 + 0x19A]
	0x03C05D14 LDR X21, [X21 + 0xA28]
	0x03C05D18 MOV W19, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E0000
	007 Move X3, [X22+104]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51298304
	014 Add X0, X0, 1535
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+104], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetupCurrent(UnityEngine.Camera cur)

Disassembly:
	0x03C05D1C TBNZ X8, 0x0, 0x3C05D34
	0x03C05D20 ADRP X0, 0x4EE000
	0x03C05D24 LDR X0, [X0 + 0xA28]
	0x03C05D28 BL 0x1C16CF4
	0x03C05D2C MOVZ W8, 0x1
	0x03C05D30 STRB W8, [X20 + 0x19A]
	0x03C05D34 LDR X0, [X21]
	0x03C05D38 LDR W8, [X0 + 0xE0]
	0x03C05D3C CBNZ W8, 0x3C05D44
	0x03C05D40 BL 0x1C16DFC
	0x03C05D44 ADRP X20, 0x7DF000
	0x03C05D48 LDR X8, [X20 + 0x1D0]
	0x03C05D4C LDR V8, [X31 + 0x70]
	0x03C05D50 CBNZ X8, 0x3C05D68
	0x03C05D54 ADRP X0, 0xFFFFFFFFFCEFB000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E0000
	005 Move X1, [X20+112]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51240960
	010 Add X0, X0, 2707
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+112], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void CopyFrom(UnityEngine.Camera other)

Disassembly:
	0x03C05D58 ADD X0, X0, 0xC4A
	0x03C05D5C BL 0x1C16CB8
	0x03C05D60 MOV X8, X0
	0x03C05D64 STR X0, [X20 + 0x1D0]
	0x03C05D68 AND W3, W19, 0x1
	0x03C05D6C ADD X0, X31, 0x20
	0x03C05D70 ADD X1, X31, 0x10
	0x03C05D74 ADD X2, X31, 0x0
	0x03C05D78 MOV V0.16B, V8.16B
	0x03C05D7C BLR X8
	0x03C05D80 LDP X20, X19, [X31 + 0x50]
	0x03C05D84 LDP X30, X21, [X31 + 0x40]
	0x03C05D88 LDR V8, [X31 + 0x30]
	0x03C05D8C ADD X31, X31, 0x60
	0x03C05D90 RET
	0x03C05D94 STR D8, [X31 - 0x40]!
	0x03C05D98 STP X30, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+120]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51339264
	012 Add X0, X0, 3579
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+120], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void FireOnPreCull(UnityEngine.Camera cam)

Disassembly:
	0x03C05D9C STP X22, X21, [X31 + 0x20]
	0x03C05DA0 STP X20, X19, [X31 + 0x30]
	0x03C05DA4 ADRP X23, 0x7DF000
	0x03C05DA8 LDR X4, [X23 + 0x1D0]
	0x03C05DAC MOV W20, W3
	0x03C05DB0 MOV V8.16B, V0.16B
	0x03C05DB4 MOV X19, X2
	0x03C05DB8 MOV X21, X1
	0x03C05DBC MOV X22, X0
	0x03C05DC0 CBNZ X4, 0x3C05DD8
	0x03C05DC4 ADRP X0, 0xFFFFFFFFFCEFB000
	0x03C05DC8 ADD X0, X0, 0xC4A
	0x03C05DCC BL 0x1C16CB8
	0x03C05DD0 MOV X4, X0
	0x03C05DD4 STR X0, [X23 + 0x1D0]
	0x03C05DD8 AND W3, W20, 0x1
	0x03C05DDC MOV X0, X22
	0x03C05DE0 MOV X1, X21
	0x03C05DE4 MOV X2, X19
	0x03C05DE8 LDP X20, X19, [X31 + 0x30]
	0x03C05DEC LDP X22, X21, [X31 + 0x20]
	0x03C05DF0 LDP X30, X23, [X31 + 0x10]
	0x03C05DF4 MOV V0.16B, V8.16B
	0x03C05DF8 LDR V8, [X31], #0x40
	0x03C05DFC BR X4
	0x03C05E00 SUB X31, X31, 0x70
	0x03C05E04 STP D15, D14, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7E0000
	006 Move X21, 0x54D000
	007 Move W8, [X20+128]
	008 Move X21, [X21+1848]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x54D000
	015 Move X0, [X0+1848]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+128], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move X8, [X8]
	022 Compare X8, 0
	023 JumpIfEqual {33}
	024 Move X3, [X8+24]
	025 Move X0, [X8+64]
	026 Move X2, [X8+40]
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 CallNoReturn X3
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 

Method: System.Void FireOnPreRender(UnityEngine.Camera cam)

Disassembly:
	0x03C05E08 STP D13, D12, [X31 + 0x20]
	0x03C05E0C STP D11, D10, [X31 + 0x30]
	0x03C05E10 STP D9, D8, [X31 + 0x40]
	0x03C05E14 STR X30, [X31 + 0x50]
	0x03C05E18 STP X20, X19, [X31 + 0x60]
	0x03C05E1C ADRP X20, 0x7DF000
	0x03C05E20 ADRP X19, 0x4EE000
	0x03C05E24 LDP S10, S6, [X31 + 0x78]
	0x03C05E28 LDP S16, S9, [X31 + 0x70]
	0x03C05E2C LDRB W8, [X20 + 0x19B]
	0x03C05E30 LDR V18, [X31 + 0x80]
	0x03C05E34 LDR X19, [X19 + 0xA28]
	0x03C05E38 TBNZ X8, 0x0, 0x3C05E90
	0x03C05E3C ADRP X0, 0x4EE000
	0x03C05E40 LDR X0, [X0 + 0xA28]
	0x03C05E44 MOV V11.16B, V5.16B
	0x03C05E48 MOV V12.16B, V4.16B
	0x03C05E4C MOV V13.16B, V3.16B
	0x03C05E50 MOV V14.16B, V2.16B
	0x03C05E54 MOV V15.16B, V1.16B
	0x03C05E58 STP S6, S16, [X31 + 0x58]
	0x03C05E5C MOV V8.16B, V0.16B
	0x03C05E60 STR S18, [X31 + 0xC]
	0x03C05E64 BL 0x1C16CF4
	0x03C05E68 LDR V18, [X31 + 0xC]
	0x03C05E6C LDP S6, S16, [X31 + 0x58]
	0x03C05E70 MOV V0.16B, V8.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7E0000
	006 Move X21, 0x54D000
	007 Move W8, [X20+129]
	008 Move X21, [X21+1848]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x54D000
	015 Move X0, [X0+1848]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+129], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move X8, [X8+8]
	022 Compare X8, 0
	023 JumpIfEqual {33}
	024 Move X3, [X8+24]
	025 Move X0, [X8+64]
	026 Move X2, [X8+40]
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 CallNoReturn X3
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 

Method: System.Void FireOnPostRender(UnityEngine.Camera cam)

Disassembly:
	0x03C05E74 MOV V1.16B, V15.16B
	0x03C05E78 MOV V2.16B, V14.16B
	0x03C05E7C MOV V3.16B, V13.16B
	0x03C05E80 MOV V4.16B, V12.16B
	0x03C05E84 MOV V5.16B, V11.16B
	0x03C05E88 MOVZ W8, 0x1
	0x03C05E8C STRB W8, [X20 + 0x19B]
	0x03C05E90 LDR X0, [X19]
	0x03C05E94 LDR W8, [X0 + 0xE0]
	0x03C05E98 CBNZ W8, 0x3C05EE0
	0x03C05E9C STR S5, [X31 + 0xC]
	0x03C05EA0 MOV V12.16B, V4.16B
	0x03C05EA4 MOV V13.16B, V3.16B
	0x03C05EA8 MOV V14.16B, V2.16B
	0x03C05EAC MOV V15.16B, V1.16B
	0x03C05EB0 STP S6, S16, [X31 + 0x58]
	0x03C05EB4 MOV V8.16B, V0.16B
	0x03C05EB8 MOV V11.16B, V18.16B
	0x03C05EBC BL 0x1C16DFC
	0x03C05EC0 LDP S6, S16, [X31 + 0x58]
	0x03C05EC4 LDR V5, [X31 + 0xC]
	0x03C05EC8 MOV V18.16B, V11.16B
	0x03C05ECC MOV V0.16B, V8.16B
	0x03C05ED0 MOV V1.16B, V15.16B
	0x03C05ED4 MOV V2.16B, V14.16B
	0x03C05ED8 MOV V3.16B, V13.16B
	0x03C05EDC MOV V4.16B, V12.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7E0000
	006 Move X21, 0x54D000
	007 Move W8, [X20+130]
	008 Move X21, [X21+1848]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x54D000
	015 Move X0, [X0+1848]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+130], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move X8, [X8+16]
	022 Compare X8, 0
	023 JumpIfEqual {33}
	024 Move X3, [X8+24]
	025 Move X0, [X8+64]
	026 Move X2, [X8+40]
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 CallNoReturn X3
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 

Method: System.Boolean TryGetCullingParameters(System.Boolean stereoAware, out UnityEngine.Rendering.ScriptableCullingParameters cullingParameters)

Disassembly:
	0x03C05EE0 STP S16, S9, [X31 + 0x70]
	0x03C05EE4 STR S10, [X31 + 0x78]
	0x03C05EE8 LDP X20, X19, [X31 + 0x60]
	0x03C05EEC LDR X30, [X31 + 0x50]
	0x03C05EF0 LDP D9, D8, [X31 + 0x40]
	0x03C05EF4 LDP D11, D10, [X31 + 0x30]
	0x03C05EF8 LDP D13, D12, [X31 + 0x20]
	0x03C05EFC LDP D15, D14, [X31 + 0x10]
	0x03C05F00 STP S6, S18, [X31 + 0x7C]
	0x03C05F04 MOVZ W0, 0x1
	0x03C05F08 ADD X31, X31, 0x70
	0x03C05F0C B 0x3C05F10
	0x03C05F10 SUB X31, X31, 0x70
	0x03C05F14 STP D15, D14, [X31 + 0x10]
	0x03C05F18 STP D13, D12, [X31 + 0x20]
	0x03C05F1C STP D11, D10, [X31 + 0x30]
	0x03C05F20 STP D9, D8, [X31 + 0x40]
	0x03C05F24 STP X30, X21, [X31 + 0x50]
	0x03C05F28 STP X20, X19, [X31 + 0x60]
	0x03C05F2C ADRP X21, 0x7DF000
	0x03C05F30 ADRP X20, 0x4EE000
	0x03C05F34 MOV V9.16B, V1.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E0000
	007 Move X4, [X22+136]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Compare X4, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51265536
	014 Add X0, X0, 1824
	015 Call 0x1C17CB8
	016 Move X4, X0
	017 Move [X22+136], X0
	018 And W1, W21, 1
	019 Move X0, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move W3, 1584
	026 Move X30, [X31+48]
	027 CallNoReturn X4

Method: System.Boolean GetCullingParameters_Internal(UnityEngine.Camera camera, System.Boolean stereoAware, out UnityEngine.Rendering.ScriptableCullingParameters cullingParameters, System.Int32 managedCullingParametersSize)

Disassembly:
	0x03C05F38 MOV V10.16B, V0.16B
	0x03C05F3C LDP S1, S0, [X31 + 0x78]
	0x03C05F40 LDP S6, S12, [X31 + 0x70]
	0x03C05F44 LDRB W8, [X21 + 0x19C]
	0x03C05F48 LDR V13, [X31 + 0x80]
	0x03C05F4C LDR X20, [X20 + 0xA28]
	0x03C05F50 MOV W19, W0
	0x03C05F54 MOV V11.16B, V5.16B
	0x03C05F58 MOV V14.16B, V4.16B
	0x03C05F5C MOV V15.16B, V3.16B
	0x03C05F60 MOV V8.16B, V2.16B
	0x03C05F64 TBNZ X8, 0x0, 0x3C05F8C
	0x03C05F68 ADRP X0, 0x4EE000
	0x03C05F6C LDR X0, [X0 + 0xA28]
	0x03C05F70 STP S0, S6, [X31 + 0x4]
	0x03C05F74 STR S1, [X31 + 0xC]
	0x03C05F78 BL 0x1C16CF4
	0x03C05F7C LDP S6, S1, [X31 + 0x8]
	0x03C05F80 LDR V0, [X31 + 0x4]
	0x03C05F84 MOVZ W8, 0x1
	0x03C05F88 STRB W8, [X21 + 0x19C]
	0x03C05F8C LDR X0, [X20]
	0x03C05F90 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7E0000
	008 Move X4, [X23+136]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51265536
	016 Add X0, X0, 1824
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+136], X0
	020 And W1, W21, 1
	021 Move X0, X22
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void get_backgroundColor_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C04B68 STR X0, [X20 + 0x40]
	0x03C04B6C BLR X8
	0x03C04B70 LDR W8, [X19 + 0x18]
	0x03C04B74 CMP W0, W8
	0x03C04B78 B.GT 0x3C04BCC
	0x03C04B7C ADRP X20, 0x7E0000
	0x03C04B80 LDR X1, [X20 + 0x48]
	0x03C04B84 CBNZ X1, 0x3C04B9C
	0x03C04B88 ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C04B8C ADD X0, X0, 0xA1
	0x03C04B90 BL 0x1C16CB8
	0x03C04B94 MOV X1, X0
	0x03C04B98 STR X0, [X20 + 0x48]
	0x03C04B9C MOV X0, X19
	0x03C04BA0 LDP X20, X19, [X31 + 0x10]
	0x03C04BA4 LDR X30, [X31], #0x20
	0x03C04BA8 BR X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E1000
	006 Move X2, [X21+144]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51220480
	012 Add X0, X0, 1364
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+144], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_backgroundColor_Injected(ref UnityEngine.Color value)

Disassembly:
	0x03C04C00 LDR X0, [X0 + 0xB38]
	0x03C04C04 BL 0x1C16D08
	0x03C04C08 MOV X1, X0
	0x03C04C0C MOV X0, X19
	0x03C04C10 BL 0x1C16DEC
	0x03C04C14 STR X30, [X31 - 0x20]!
	0x03C04C18 STP X20, X19, [X31 + 0x10]
	0x03C04C1C ADRP X20, 0x7E0000
	0x03C04C20 LDR X1, [X20 + 0x58]
	0x03C04C24 MOV X19, X0
	0x03C04C28 CBNZ X1, 0x3C04C40
	0x03C04C2C ADRP X0, 0xFFFFFFFFFCEFC000
	0x03C04C30 ADD X0, X0, 0xC26
	0x03C04C34 BL 0x1C16CB8
	0x03C04C38 MOV X1, X0
	0x03C04C3C STR X0, [X20 + 0x58]
	0x03C04C40 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E1000
	006 Move X2, [X21+152]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51376128
	012 Add X0, X0, 3944
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+152], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void get_rect_Injected(out UnityEngine.Rect ret)

Disassembly:
	0x03C04E2C LDR X0, [X0 + 0x738]
	0x03C04E30 BL 0x1C16CF4
	0x03C04E34 MOVZ W8, 0x1
	0x03C04E38 STRB W8, [X20 + 0x81]
	0x03C04E3C LDR X8, [X21]
	0x03C04E40 LDR X8, [X8 + 0xB8]
	0x03C04E44 LDR X8, [X8 + 0x8]
	0x03C04E48 CBZ X8, 0x3C04E68
	0x03C04E4C LDR X3, [X8 + 0x18]
	0x03C04E50 LDR X0, [X8 + 0x40]
	0x03C04E54 LDR X2, [X8 + 0x28]
	0x03C04E58 MOV X1, X19
	0x03C04E5C LDP X20, X19, [X31 + 0x10]
	0x03C04E60 LDP X30, X21, [X31], #0x20
	0x03C04E64 BR X3
	0x03C04E68 LDP X20, X19, [X31 + 0x10]
	0x03C04E6C LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E1000
	006 Move X2, [X21+160]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51404800
	012 Add X0, X0, 221
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+160], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_rect_Injected(ref UnityEngine.Rect value)

Disassembly:
	0x03C04EC4 MOV X1, X19
	0x03C04EC8 LDP X20, X19, [X31 + 0x10]
	0x03C04ECC LDP X30, X21, [X31], #0x20
	0x03C04ED0 BR X3
	0x03C04ED4 LDP X20, X19, [X31 + 0x10]
	0x03C04ED8 LDP X30, X21, [X31], #0x20
	0x03C04EDC RET
	0x03C04EE0 STR X30, [X31 - 0x30]!
	0x03C04EE4 STP X22, X21, [X31 + 0x10]
	0x03C04EE8 STP X20, X19, [X31 + 0x20]
	0x03C04EEC ADRP X22, 0x7E0000
	0x03C04EF0 LDR X4, [X22 + 0x88]
	0x03C04EF4 MOV X19, X2
	0x03C04EF8 MOV W21, W1
	0x03C04EFC MOV X20, X0
	0x03C04F00 CBNZ X4, 0x3C04F18
	0x03C04F04 ADRP X0, 0xFFFFFFFFFCF1C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E1000
	006 Move X2, [X21+168]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51228672
	012 Add X0, X0, 965
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+168], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void get_pixelRect_Injected(out UnityEngine.Rect ret)

Disassembly:
	0x03C04F60 ADRP X0, 0xFFFFFFFFFCF1C000
	0x03C04F64 ADD X0, X0, 0x720
	0x03C04F68 BL 0x1C16CB8
	0x03C04F6C MOV X4, X0
	0x03C04F70 STR X0, [X23 + 0x88]
	0x03C04F74 AND W1, W21, 0x1
	0x03C04F78 MOV X0, X22
	0x03C04F7C MOV X2, X20
	0x03C04F80 MOV W3, W19
	0x03C04F84 LDP X20, X19, [X31 + 0x20]
	0x03C04F88 LDP X22, X21, [X31 + 0x10]
	0x03C04F8C LDP X30, X23, [X31], #0x30
	0x03C04F90 BR X4
	0x03C04F94 STP X30, X21, [X31 - 0x20]!
	0x03C04F98 STP X20, X19, [X31 + 0x10]
	0x03C04F9C LDR X8, [X2 + 0x8]
	0x03C04FA0 STP X1, X2, [X0 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E1000
	006 Move X2, [X21+176]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51326976
	012 Add X0, X0, 3562
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+176], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_pixelRect_Injected(ref UnityEngine.Rect value)

Disassembly:
	0x03C04FF8 ADD X8, X8, 0x7C0
	0x03C04FFC STR X8, [X19 + 0x18]
	0x03C05000 ADRP X8, 0xFFFFFFFFFDFFF000
	0x03C05004 ADD X8, X8, 0x778
	0x03C05008 STR X8, [X19 + 0x38]
	0x03C0500C LDP X20, X19, [X31 + 0x10]
	0x03C05010 LDP X30, X21, [X31], #0x20
	0x03C05014 RET
	0x03C05018 ADRP X1, 0xFFFFFFFFFCF16000
	0x03C0501C ADD X1, X1, 0xEE3
	0x03C05020 MOV X0, X31
	0x03C05024 BL 0x1C16F3C
	0x03C05028 MOV X1, X31
	0x03C0502C BL 0x1C16DEC
	0x03C05030 LDR X8, [X0 + 0x40]
	0x03C05034 LDR X3, [X0 + 0x18]
	0x03C05038 LDR X2, [X0 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+184]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51441664
	012 Add X0, X0, 171
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+184], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void get_cameraToWorldMatrix_Injected(out UnityEngine.Matrix4x4 ret)

Disassembly:
	0x03C051DC LDP X20, X19, [X31 + 0x10]
	0x03C051E0 LDR X30, [X31], #0x20
	0x03C051E4 BR X1
	0x03C051E8 STR X30, [X31 - 0x20]!
	0x03C051EC STP X20, X19, [X31 + 0x10]
	0x03C051F0 ADRP X20, 0x7DF000
	0x03C051F4 LDR X1, [X20 + 0x118]
	0x03C051F8 MOV X19, X0
	0x03C051FC CBNZ X1, 0x3C05214
	0x03C05200 ADRP X0, 0xFFFFFFFFFCF0F000
	0x03C05204 ADD X0, X0, 0x57C
	0x03C05208 BL 0x1C16CB8
	0x03C0520C MOV X1, X0
	0x03C05210 STR X0, [X20 + 0x118]
	0x03C05214 MOV X0, X19
	0x03C05218 LDP X20, X19, [X31 + 0x10]
	0x03C0521C LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+192]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51331072
	012 Add X0, X0, 3624
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+192], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void get_worldToCameraMatrix_Injected(out UnityEngine.Matrix4x4 ret)

Disassembly:
	0x03C0528C BL 0x1C16CB8
	0x03C05290 MOV X2, X0
	0x03C05294 STR X0, [X21 + 0x120]
	0x03C05298 MOV X0, X20
	0x03C0529C MOV X1, X19
	0x03C052A0 LDP X20, X19, [X31 + 0x10]
	0x03C052A4 LDP X30, X21, [X31], #0x20
	0x03C052A8 BR X2
	0x03C052AC STP X30, X21, [X31 - 0x20]!
	0x03C052B0 STP X20, X19, [X31 + 0x10]
	0x03C052B4 ADRP X21, 0x7DF000
	0x03C052B8 LDR X2, [X21 + 0x128]
	0x03C052BC MOV X19, X1
	0x03C052C0 MOV X20, X0
	0x03C052C4 CBNZ X2, 0x3C052DC
	0x03C052C8 ADRP X0, 0xFFFFFFFFFCF27000
	0x03C052CC ADD X0, X0, 0x620

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+200]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51306496
	012 Add X0, X0, 1162
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+200], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_worldToCameraMatrix_Injected(ref UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C05314 BL 0x1C16CB8
	0x03C05318 MOV X2, X0
	0x03C0531C STR X0, [X21 + 0x130]
	0x03C05320 MOV X0, X20
	0x03C05324 MOV W1, W19
	0x03C05328 LDP X20, X19, [X31 + 0x10]
	0x03C0532C LDP X30, X21, [X31], #0x20
	0x03C05330 BR X2
	0x03C05334 STP X30, X23, [X31 - 0x30]!
	0x03C05338 STP X22, X21, [X31 + 0x10]
	0x03C0533C STP X20, X19, [X31 + 0x20]
	0x03C05340 ADRP X23, 0x7DF000
	0x03C05344 LDR X6, [X23 + 0x138]
	0x03C05348 MOV W19, W3
	0x03C0534C MOV X20, X2
	0x03C05350 MOV W22, W1
	0x03C05354 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+208]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51298304
	012 Add X0, X0, 1606
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+208], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void get_projectionMatrix_Injected(out UnityEngine.Matrix4x4 ret)

Disassembly:
	0x03C053C4 MOV X24, X0
	0x03C053C8 CBNZ X6, 0x3C053E0
	0x03C053CC ADRP X0, 0xFFFFFFFFFCF05000
	0x03C053D0 ADD X0, X0, 0xED0
	0x03C053D4 BL 0x1C16CB8
	0x03C053D8 MOV X6, X0
	0x03C053DC STR X0, [X25 + 0x138]
	0x03C053E0 AND W1, W23, 0x1
	0x03C053E4 MOV X0, X24
	0x03C053E8 MOV W2, W22
	0x03C053EC MOV W3, W21
	0x03C053F0 MOV X4, X20
	0x03C053F4 MOV W5, W19
	0x03C053F8 LDP X20, X19, [X31 + 0x30]
	0x03C053FC LDP X22, X21, [X31 + 0x20]
	0x03C05400 LDP X24, X23, [X31 + 0x10]
	0x03C05404 LDP X30, X25, [X31], #0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X2, [X21+216]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51355648
	012 Add X0, X0, 3718
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+216], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void WorldToScreenPoint_Injected(ref UnityEngine.Vector3 position, UnityEngine.Camera/MonoOrStereoscopicEye eye, out UnityEngine.Vector3 ret)

Disassembly:
	0x03C054B4 MOV X19, X1
	0x03C054B8 MOV X20, X0
	0x03C054BC CBNZ X2, 0x3C054D4
	0x03C054C0 ADRP X0, 0xFFFFFFFFFCF0F000
	0x03C054C4 ADD X0, X0, 0x5A8
	0x03C054C8 BL 0x1C16CB8
	0x03C054CC MOV X2, X0
	0x03C054D0 STR X0, [X21 + 0x158]
	0x03C054D4 MOV X0, X20
	0x03C054D8 MOV X1, X19
	0x03C054DC LDP X20, X19, [X31 + 0x10]
	0x03C054E0 LDP X30, X21, [X31], #0x20
	0x03C054E4 BR X2
	0x03C054E8 B 0x3C05450
	0x03C054EC STP X30, X21, [X31 - 0x20]!
	0x03C054F0 STP X20, X19, [X31 + 0x10]
	0x03C054F4 CBZ X0, 0x3C05538
	0x03C054F8 LDR X8, [X0 + 0x18]
	0x03C054FC MOV X20, X0
	0x03C05500 CBZ X8, 0x3C0553C
	0x03C05504 CMP W2, 0x1
	0x03C05508 B.LT 0x3C0553C
	0x03C0550C MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7E0000
	008 Move X4, [X23+224]
	009 Move X19, X3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51347456
	016 Add X0, X0, 3229
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+224], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move W2, W20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void ScreenToWorldPoint_Injected(ref UnityEngine.Vector3 position, UnityEngine.Camera/MonoOrStereoscopicEye eye, out UnityEngine.Vector3 ret)

Disassembly:
	0x03C05580 ADRP X8, 0xFFFFFFFFFDFFF000
	0x03C05584 ADD X8, X8, 0x8D8
	0x03C05588 STR X8, [X19 + 0x18]
	0x03C0558C B 0x3C055A4
	0x03C05590 CBZ X20, 0x3C055BC
	0x03C05594 LDR X8, [X19 + 0x10]
	0x03C05598 LDR X9, [X19 + 0x20]
	0x03C0559C STR X8, [X19 + 0x18]
	0x03C055A0 STR X9, [X19 + 0x40]
	0x03C055A4 ADRP X8, 0xFFFFFFFFFDFFF000
	0x03C055A8 ADD X8, X8, 0x890
	0x03C055AC STR X8, [X19 + 0x38]
	0x03C055B0 LDP X20, X19, [X31 + 0x10]
	0x03C055B4 LDP X30, X21, [X31], #0x20
	0x03C055B8 RET
	0x03C055BC ADRP X1, 0xFFFFFFFFFCF16000
	0x03C055C0 ADD X1, X1, 0xEE3
	0x03C055C4 MOV X0, X31
	0x03C055C8 BL 0x1C16F3C
	0x03C055CC MOV X1, X31
	0x03C055D0 BL 0x1C16DEC
	0x03C055D4 LDR X8, [X0 + 0x40]
	0x03C055D8 LDR X3, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7E0000
	008 Move X4, [X23+232]
	009 Move X19, X3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51462144
	016 Add X0, X0, 3029
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+232], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move W2, W20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void ScreenToViewportPoint_Injected(ref UnityEngine.Vector3 position, out UnityEngine.Vector3 ret)

Disassembly:
	0x03C05654 STRB W8, [X20 + 0x168]
	0x03C05658 LDR X0, [X19]
	0x03C0565C STP X31, X31, [X31]
	0x03C05660 LDR W8, [X0 + 0xE0]
	0x03C05664 CBNZ W8, 0x3C0566C
	0x03C05668 BL 0x1C16DFC
	0x03C0566C ADRP X19, 0x7DF000
	0x03C05670 LDR X8, [X19 + 0x180]
	0x03C05674 CBNZ X8, 0x3C0568C
	0x03C05678 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C0567C ADD X0, X0, 0x116
	0x03C05680 BL 0x1C16CB8
	0x03C05684 MOV X8, X0
	0x03C05688 STR X0, [X19 + 0x180]
	0x03C0568C ADD X0, X31, 0x0
	0x03C05690 BLR X8
	0x03C05694 LDP S0, S1, [X31]
	0x03C05698 LDP S2, S3, [X31 + 0x8]
	0x03C0569C LDP X20, X19, [X31 + 0x20]
	0x03C056A0 LDR X30, [X31 + 0x10]
	0x03C056A4 ADD X31, X31, 0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E0000
	007 Move X3, [X22+240]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51453952
	014 Add X0, X0, 3640
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+240], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void ScreenPointToRay_Injected(ref UnityEngine.Vector2 pos, UnityEngine.Camera/MonoOrStereoscopicEye eye, out UnityEngine.Ray ret)

Disassembly:
	0x03C05720 ADRP X21, 0x54E000
	0x03C05724 LDRB W8, [X22 + 0x178]
	0x03C05728 LDR X21, [X21 + 0x2F8]
	0x03C0572C MOV W19, W1
	0x03C05730 MOV X20, X0
	0x03C05734 TBNZ X8, 0x0, 0x3C0574C
	0x03C05738 ADRP X0, 0x54E000
	0x03C0573C LDR X0, [X0 + 0x2F8]
	0x03C05740 BL 0x1C16CF4
	0x03C05744 MOVZ W8, 0x1
	0x03C05748 STRB W8, [X22 + 0x178]
	0x03C0574C LDR X0, [X21]
	0x03C05750 LDR W8, [X0 + 0xE0]
	0x03C05754 CBNZ W8, 0x3C05760
	0x03C05758 BL 0x1C16DFC
	0x03C0575C LDR X0, [X21]
	0x03C05760 LDR X8, [X0 + 0xB8]
	0x03C05764 LDR X8, [X8]
	0x03C05768 CBZ X8, 0x3C05790
	0x03C0576C LDR X4, [X8 + 0x18]
	0x03C05770 LDR X0, [X8 + 0x40]
	0x03C05774 LDR X3, [X8 + 0x28]
	0x03C05778 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7E0000
	008 Move X4, [X23+248]
	009 Move X19, X3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51298304
	016 Add X0, X0, 1683
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+248], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move W2, W20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetStereoProjectionMatrix_Injected(UnityEngine.Camera/StereoscopicEye eye, ref UnityEngine.Matrix4x4 matrix)

Disassembly:
	0x03C05914 BL 0x1D2C690
	0x03C05918 MOV X0, X20
	0x03C0591C BL 0x1C16F18
	0x03C05920 BL 0x1990590
	0x03C05924 STR X30, [X31 - 0x40]!
	0x03C05928 STP X24, X23, [X31 + 0x10]
	0x03C0592C STP X22, X21, [X31 + 0x20]
	0x03C05930 STP X20, X19, [X31 + 0x30]
	0x03C05934 ADRP X23, 0x7DF000
	0x03C05938 ADRP X24, 0x559000
	0x03C0593C ADRP X19, 0x559000
	0x03C05940 ADRP X20, 0x54E000
	0x03C05944 ADRP X22, 0x559000
	0x03C05948 ADRP X21, 0x559000
	0x03C0594C LDRB W8, [X23 + 0x17A]
	0x03C05950 LDR X24, [X24 + 0xB60]
	0x03C05954 LDR X19, [X19 + 0xB68]
	0x03C05958 LDR X20, [X20 + 0x2F8]
	0x03C0595C LDR X22, [X22 + 0xB70]
	0x03C05960 LDR X21, [X21 + 0xB78]
	0x03C05964 TBNZ X8, 0x0, 0x3C059AC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E0000
	007 Move X3, [X22+256]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51331072
	014 Add X0, X0, 3701
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+256], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetStereoViewMatrix_Injected(UnityEngine.Camera/StereoscopicEye eye, ref UnityEngine.Matrix4x4 matrix)

Disassembly:
	0x03C059BC BL 0x2A12DD4
	0x03C059C0 LDR X8, [X20]
	0x03C059C4 LDR X8, [X8 + 0xB8]
	0x03C059C8 STR X19, [X8 + 0x8]
	0x03C059CC LDR X0, [X22]
	0x03C059D0 BL 0x1C16F10
	0x03C059D4 LDR X1, [X21]
	0x03C059D8 MOV X19, X0
	0x03C059DC BL 0x301B7C4
	0x03C059E0 LDR X8, [X20]
	0x03C059E4 LDP X22, X21, [X31 + 0x20]
	0x03C059E8 LDP X24, X23, [X31 + 0x10]
	0x03C059EC LDR X8, [X8 + 0xB8]
	0x03C059F0 STR X19, [X8 + 0x10]
	0x03C059F4 LDP X20, X19, [X31 + 0x30]
	0x03C059F8 LDR X30, [X31], #0x40
	0x03C059FC RET
	0x03C05A00 STP X30, X23, [X31 - 0x30]!
	0x03C05A04 STP X22, X21, [X31 + 0x10]
	0x03C05A08 STP X20, X19, [X31 + 0x20]
	0x03C05A0C ADRP X23, 0x7DF000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7E0000
	007 Move X3, [X22+264]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51429376
	014 Add X0, X0, 3648
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+264], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

