Type: UnityEngine.ReflectionProbe

Method: UnityEngine.Rendering.ReflectionProbeRefreshMode get_refreshMode()

Disassembly:
	0x03C065E8 STRB W8, [X22 + 0x1AD]
	0x03C065EC LDR X0, [X21]
	0x03C065F0 LDR W8, [X0 + 0xE0]
	0x03C065F4 CBNZ W8, 0x3C065FC
	0x03C065F8 BL 0x1C16DFC
	0x03C065FC ADRP X22, 0x7D2000
	0x03C06600 LDRB W8, [X22 + 0xFA8]
	0x03C06604 CBNZ W8, 0x3C0661C
	0x03C06608 ADRP X0, 0x4ED000
	0x03C0660C LDR X0, [X0 + 0xA28]
	0x03C06610 BL 0x1C16CF4
	0x03C06614 MOVZ W8, 0x1
	0x03C06618 STRB W8, [X22 + 0xFA8]
	0x03C0661C LDR X0, [X21]
	0x03C06620 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7DF000
	005 Move X1, [X20+352]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51286016
	010 Add X0, X0, 3286
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+352], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Vector4 get_defaultTextureHDRDecodeValues()

Disassembly:
	0x03C06624 CBNZ W8, 0x3C06630
	0x03C06628 BL 0x1C16DFC
	0x03C0662C LDR X0, [X21]
	0x03C06630 LDR X8, [X0 + 0xB8]
	0x03C06634 LDR X21, [X8 + 0x8]
	0x03C06638 CBZ X21, 0x3C066B8
	0x03C0663C ADRP X10, 0x4F5000
	0x03C06640 LDR X8, [X21]
	0x03C06644 LDR X10, [X10 + 0x9B8]
	0x03C06648 LDRH W9, [X8 + 0x12E]
	0x03C0664C LDR X1, [X10]
	0x03C06650 CBZ X9, 0x3C06674
	0x03C06654 LDR X10, [X8 + 0xB0]
	0x03C06658 ADD X10, X10, 0x8
	0x03C0665C LDUR X11, [X10 - 0x8]
	0x03C06660 CMP X11, X1
	0x03C06664 B.EQ 0x3C06684
	0x03C06668 SUBS X9, X9, 0x1
	0x03C0666C ADD X10, X10, 0x10
	0x03C06670 B.NE 0x3C0665C
	0x03C06674 MOVZ W2, 0x3
	0x03C06678 MOV X0, X21
	0x03C0667C BL 0x1C5C788
	0x03C06680 B 0x3C06694
	0x03C06684 LDR W9, [X10]
	0x03C06688 ADD W9, W9, 0x3
	0x03C0668C ADD X8, X8, W9, 0x4, SXTW
	0x03C06690 ADD X0, X8, 0x138
	0x03C06694 LDP X5, X4, [X0]
	0x03C06698 MOV X0, X21
	0x03C0669C MOV X2, X20
	0x03C066A0 MOV X3, X19
	0x03C066A4 LDP X20, X19, [X31 + 0x20]
	0x03C066A8 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7DF000
	006 Move X19, 0x54E000
	007 Move W8, [X20+360]
	008 Move X19, [X19+760]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x54E000
	014 Move X0, [X0+760]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+360], W8
	018 Move X0, [X19]
	019 Move [X31], X31
	020 Move [X31+8], X31
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X19, 0x7DF000
	026 Move X8, [X19+384]
	027 Compare X8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51412992
	030 Add X0, X0, 278
	031 Call 0x1C17CB8
	032 Move X8, X0
	033 Move [X19+384], X0
	034 Add X0, X31, 0
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move S0, [X31]
	037 Move S1, [X31+4]
	038 Move S2, [X31+8]
	039 Move S3, [X31+12]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Add X31, X31, 48
	044 Return X0

Method: UnityEngine.Texture get_defaultTexture()

Disassembly:
	0x03C066E8 LDR X0, [X0 + 0xA28]
	0x03C066EC BL 0x1C16CF4
	0x03C066F0 ADRP X0, 0x4F5000
	0x03C066F4 LDR X0, [X0 + 0x9B8]
	0x03C066F8 BL 0x1C16CF4
	0x03C066FC MOVZ W8, 0x1
	0x03C06700 STRB W8, [X22 + 0x1AE]
	0x03C06704 LDR X0, [X21]
	0x03C06708 LDR W8, [X0 + 0xE0]
	0x03C0670C CBNZ W8, 0x3C06714

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7DF000
	004 Move X0, [X19+368]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51277824
	008 Add X0, X0, 2018
	009 Call 0x1C17CB8
	010 Move [X19+368], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void CallReflectionProbeEvent(UnityEngine.ReflectionProbe probe, UnityEngine.ReflectionProbe/ReflectionProbeEvent probeEvent)

Disassembly:
	0x03C06710 BL 0x1C16DFC
	0x03C06714 ADRP X22, 0x7D2000
	0x03C06718 LDRB W8, [X22 + 0xFA8]
	0x03C0671C CBNZ W8, 0x3C06734
	0x03C06720 ADRP X0, 0x4ED000
	0x03C06724 LDR X0, [X0 + 0xA28]
	0x03C06728 BL 0x1C16CF4
	0x03C0672C MOVZ W8, 0x1
	0x03C06730 STRB W8, [X22 + 0xFA8]
	0x03C06734 LDR X0, [X21]
	0x03C06738 LDR W8, [X0 + 0xE0]
	0x03C0673C CBNZ W8, 0x3C06748
	0x03C06740 BL 0x1C16DFC
	0x03C06744 LDR X0, [X21]
	0x03C06748 LDR X8, [X0 + 0xB8]
	0x03C0674C LDR X21, [X8 + 0x8]
	0x03C06750 CBZ X21, 0x3C067D0
	0x03C06754 ADRP X10, 0x4F5000
	0x03C06758 LDR X8, [X21]
	0x03C0675C LDR X10, [X10 + 0x9B8]
	0x03C06760 LDRH W9, [X8 + 0x12E]
	0x03C06764 LDR X1, [X10]
	0x03C06768 CBZ X9, 0x3C0678C
	0x03C0676C LDR X10, [X8 + 0xB0]
	0x03C06770 ADD X10, X10, 0x8
	0x03C06774 LDUR X11, [X10 - 0x8]
	0x03C06778 CMP X11, X1
	0x03C0677C B.EQ 0x3C0679C
	0x03C06780 SUBS X9, X9, 0x1
	0x03C06784 ADD X10, X10, 0x10
	0x03C06788 B.NE 0x3C06774
	0x03C0678C MOVZ W2, 0x5
	0x03C06790 MOV X0, X21
	0x03C06794 BL 0x1C5C788
	0x03C06798 B 0x3C067AC
	0x03C0679C LDR W9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7DF000
	007 Move X21, 0x54E000
	008 Move W8, [X22+376]
	009 Move X21, [X21+760]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x54E000
	017 Move X0, [X0+760]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+376], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X8, [X8]
	029 Compare X8, 0
	030 JumpIfEqual {42}
	031 Move X4, [X8+24]
	032 Move X0, [X8+64]
	033 Move X3, [X8+40]
	034 Move X1, X20
	035 Move W2, W19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 CallNoReturn X4
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 

Method: System.Void CallSetDefaultReflection(UnityEngine.Texture defaultReflectionCubemap)

Disassembly:
	0x03C067A0 ADD W9, W9, 0x5
	0x03C067A4 ADD X8, X8, W9, 0x4, SXTW
	0x03C067A8 ADD X0, X8, 0x138
	0x03C067AC LDP X5, X4, [X0]
	0x03C067B0 MOV X0, X21
	0x03C067B4 MOV X2, X20
	0x03C067B8 MOV X3, X19
	0x03C067BC LDP X20, X19, [X31 + 0x20]
	0x03C067C0 LDP X22, X21, [X31 + 0x10]
	0x03C067C4 MOV W1, W31
	0x03C067C8 LDR X30, [X31], #0x30
	0x03C067CC BR X5
	0x03C067D0 BL 0x1C16F20
	0x03C067D4 STP X30, X23, [X31 - 0x30]!
	0x03C067D8 STP X22, X21, [X31 + 0x10]
	0x03C067DC STP X20, X19, [X31 + 0x20]
	0x03C067E0 ADRP X23, 0x7DE000
	0x03C067E4 ADRP X22, 0x4ED000
	0x03C067E8 LDRB W8, [X23 + 0x1AF]
	0x03C067EC LDR X22, [X22 + 0xA28]
	0x03C067F0 MOV X19, X2
	0x03C067F4 MOV X20, X1
	0x03C067F8 MOV X21, X0
	0x03C067FC TBNZ X8, 0x0, 0x3C06820
	0x03C06800 ADRP X0, 0x4ED000
	0x03C06804 LDR X0, [X0 + 0xA28]
	0x03C06808 BL 0x1C16CF4
	0x03C0680C ADRP X0, 0x558000
	0x03C06810 LDR X0, [X0 + 0xB10]
	0x03C06814 BL 0x1C16CF4
	0x03C06818 MOVZ W8, 0x1
	0x03C0681C STRB W8, [X23 + 0x1AF]
	0x03C06820 LDR X0, [X22]
	0x03C06824 LDR W8, [X0 + 0xE0]
	0x03C06828 CBNZ W8, 0x3C06830
	0x03C0682C BL 0x1C16DFC
	0x03C06830 ADRP X23, 0x7D2000
	0x03C06834 LDRB W8, [X23 + 0xFA8]
	0x03C06838 CBNZ W8, 0x3C06850
	0x03C0683C ADRP X0, 0x4ED000
	0x03C06840 LDR X0, [X0 + 0xA28]
	0x03C06844 BL 0x1C16CF4
	0x03C06848 MOVZ W8, 0x1
	0x03C0684C STRB W8, [X23 + 0xFA8]
	0x03C06850 LDR X0, [X22]
	0x03C06854 LDR W8, [X0 + 0xE0]
	0x03C06858 CBNZ W8, 0x3C06864
	0x03C0685C BL 0x1C16DFC
	0x03C06860 LDR X0, [X22]
	0x03C06864 LDR X8, [X0 + 0xB8]
	0x03C06868 LDR X22, [X8 + 0x8]
	0x03C0686C CBZ X22, 0x3C068EC
	0x03C06870 ADRP X10, 0x558000
	0x03C06874 LDR X8, [X22]
	0x03C06878 LDR X10, [X10 + 0xB10]
	0x03C0687C LDRH W9, [X8 + 0x12E]
	0x03C06880 LDR X1, [X10]
	0x03C06884 CBZ X9, 0x3C068A8
	0x03C06888 LDR X10, [X8 + 0xB0]
	0x03C0688C ADD X10, X10, 0x8
	0x03C06890 LDUR X11, [X10 - 0x8]
	0x03C06894 CMP X11, X1
	0x03C06898 B.EQ 0x3C068B8
	0x03C0689C SUBS X9, X9, 0x1
	0x03C068A0 ADD X10, X10, 0x10
	0x03C068A4 B.NE 0x3C06890
	0x03C068A8 MOV X0, X22
	0x03C068AC MOV W2, W31
	0x03C068B0 BL 0x1C5C788
	0x03C068B4 B 0x3C068C4
	0x03C068B8 LDRSW X9, [X10]
	0x03C068BC ADD X8, X8, X9, 0x4, LSL
	0x03C068C0 ADD X0, X8, 0x138
	0x03C068C4 LDP X6, X5, [X0]
	0x03C068C8 MOV X0, X22
	0x03C068CC MOV X2, X21
	0x03C068D0 MOV X3, X20
	0x03C068D4 MOV X4, X19
	0x03C068D8 LDP X20, X19, [X31 + 0x20]
	0x03C068DC LDP X22, X21, [X31 + 0x10]
	0x03C068E0 MOV W1, W31
	0x03C068E4 LDP X30, X23, [X31], #0x30
	0x03C068E8 BR X6
	0x03C068EC BL 0x1C16F20
	0x03C068F0 STR X30, [X31 - 0x30]!
	0x03C068F4 STP X22, X21, [X31 + 0x10]
	0x03C068F8 STP X20, X19, [X31 + 0x20]
	0x03C068FC ADRP X22, 0x7DE000
	0x03C06900 ADRP X21, 0x4ED000
	0x03C06904 LDRB W8, [X22 + 0x1B1]
	0x03C06908 LDR X21, [X21 + 0xA28]
	0x03C0690C MOV X19, X1
	0x03C06910 MOV X20, X0
	0x03C06914 TBNZ X8, 0x0, 0x3C06938
	0x03C06918 ADRP X0, 0x4ED000
	0x03C0691C LDR X0, [X0 + 0xA28]
	0x03C06920 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x7DF000
	007 Move X20, 0x54E000
	008 Move W8, [X21+377]
	009 Move X20, [X20+760]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x559000
	016 Move X0, [X0+2880]
	017 Call 0x1C17CF4
	018 Move X0, 0x559000
	019 Move X0, [X0+2888]
	020 Call 0x1C17CF4
	021 Move X0, 0x559000
	022 Move X0, [X0+2896]
	023 Call 0x1C17CF4
	024 Move X0, 0x559000
	025 Move X0, [X0+2904]
	026 Call 0x1C17CF4
	027 Move X0, 0x54E000
	028 Move X0, [X0+760]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+377], W8
	032 Move X0, [X20]
	033 Move [X31+8], X31
	034 Move [X31+16], X31
	035 Move [X31+24], X31
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X20]
	041 Move X8, [X0+184]
	042 Move X0, [X8+16]
	043 Compare X0, 0
	044 JumpIfEqual {79}
	045 Move X8, 0x559000
	046 Move X8, [X8+2904]
	047 Move X21, 0x559000
	048 Move X20, 0x559000
	049 Move X1, [X8]
	050 Move X21, [X21+2888]
	051 Move X20, [X20+2880]
	052 Add X8, X31, 8
	053 Call List`1<Object>.GetEnumerator, X0
	054 Move X1, [X21]
	055 Add X0, X31, 8
	056 Call Enumerator<Object>.MoveNext, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {69}
	061 Move X8, [X31+24]
	062 Compare X8, 0
	063 JumpIfEqual {78}
	064 Move X0, [X8+64]
	065 Move X9, [X8+24]
	066 Move X2, [X8+40]
	067 Move X1, X19
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X1, [X20]
	070 Add X0, X31, 8
	071 Call Enumerator<Object>.Dispose, X0
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Add X31, X31, 64
	077 Return 
	078 Call 0x1C17F20
	079 Call 0x1C17F20
	080 Move X19, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X19
	083 Call 0x3EB2AD0
	084 Move X20, [X0]
	085 Call 0x3EB2AE0
	086 Move X8, 0x559000
	087 Move X8, [X8+2880]
	088 Add X0, X31, 8
	089 Move X1, [X8]
	090 Call Enumerator<Object>.Dispose, X0
	091 Compare X20, 0
	092 JumpIfEqual {72}
	093 Move X0, X20
	094 Call 0x1C17F18
	095 Move X20, X31
	096 Move X19, X0
	097 Move X8, 0x559000
	098 Move X8, [X8+2880]
	099 Move X1, [X8]
	100 Add X0, X31, 8
	101 Call Enumerator<Object>.Dispose, X0
	102 Compare X20, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X19
	105 Call 0x1D2D690
	106 Move X0, X20
	107 Call 0x1C17F18
	108 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03C06924 ADRP X0, 0x558000
	0x03C06928 LDR X0, [X0 + 0xB10]
	0x03C0692C BL 0x1C16CF4
	0x03C06930 MOVZ W8, 0x1
	0x03C06934 STRB W8, [X22 + 0x1B1]
	0x03C06938 LDR X0, [X21]
	0x03C0693C LDR W8, [X0 + 0xE0]
	0x03C06940 CBNZ W8, 0x3C06948
	0x03C06944 BL 0x1C16DFC
	0x03C06948 ADRP X22, 0x7D2000
	0x03C0694C LDRB W8, [X22 + 0xFA8]
	0x03C06950 CBNZ W8, 0x3C06968
	0x03C06954 ADRP X0, 0x4ED000
	0x03C06958 LDR X0, [X0 + 0xA28]
	0x03C0695C BL 0x1C16CF4
	0x03C06960 MOVZ W8, 0x1
	0x03C06964 STRB W8, [X22 + 0xFA8]
	0x03C06968 LDR X0, [X21]
	0x03C0696C LDR W8, [X0 + 0xE0]
	0x03C06970 CBNZ W8, 0x3C0697C
	0x03C06974 BL 0x1C16DFC
	0x03C06978 LDR X0, [X21]
	0x03C0697C LDR X8, [X0 + 0xB8]
	0x03C06980 LDR X21, [X8 + 0x8]
	0x03C06984 CBZ X21, 0x3C06A00
	0x03C06988 ADRP X10, 0x558000
	0x03C0698C LDR X8, [X21]
	0x03C06990 LDR X10, [X10 + 0xB10]
	0x03C06994 LDRH W9, [X8 + 0x12E]
	0x03C06998 LDR X1, [X10]
	0x03C0699C CBZ X9, 0x3C069C0
	0x03C069A0 LDR X10, [X8 + 0xB0]
	0x03C069A4 ADD X10, X10, 0x8
	0x03C069A8 LDUR X11, [X10 - 0x8]
	0x03C069AC CMP X11, X1
	0x03C069B0 B.EQ 0x3C069D0
	0x03C069B4 SUBS X9, X9, 0x1
	0x03C069B8 ADD X10, X10, 0x10
	0x03C069BC B.NE 0x3C069A8
	0x03C069C0 MOVZ W2, 0x1
	0x03C069C4 MOV X0, X21
	0x03C069C8 BL 0x1C5C788
	0x03C069CC B 0x3C069E0
	0x03C069D0 LDR W9, [X10]
	0x03C069D4 ADD W9, W9, 0x1
	0x03C069D8 ADD X8, X8, W9, 0x4, SXTW
	0x03C069DC ADD X0, X8, 0x138
	0x03C069E0 LDP X4, X3, [X0]
	0x03C069E4 MOV X0, X21
	0x03C069E8 MOV X1, X20
	0x03C069EC MOV X2, X19
	0x03C069F0 LDP X20, X19, [X31 + 0x20]
	0x03C069F4 LDP X22, X21, [X31 + 0x10]
	0x03C069F8 LDR X30, [X31], #0x30
	0x03C069FC BR X4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x7DF000
	009 Move X24, 0x559000
	010 Move X19, 0x559000
	011 Move X20, 0x54E000
	012 Move X22, 0x559000
	013 Move X21, 0x559000
	014 Move W8, [X23+378]
	015 Move X24, [X24+2912]
	016 Move X19, [X19+2920]
	017 Move X20, [X20+760]
	018 Move X22, [X22+2928]
	019 Move X21, [X21+2936]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x559000
	025 Move X0, [X0+2920]
	026 Call 0x1C17CF4
	027 Move X0, 0x559000
	028 Move X0, [X0+2912]
	029 Call 0x1C17CF4
	030 Move X0, 0x559000
	031 Move X0, [X0+2936]
	032 Call 0x1C17CF4
	033 Move X0, 0x559000
	034 Move X0, [X0+2928]
	035 Call 0x1C17CF4
	036 Move X0, 0x54E000
	037 Move X0, [X0+760]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+378], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X19]
	044 Move X19, X0
	045 Call Dictionary`2<Int32, Object>..ctor, X0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8+8], X19
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X19, X0
	053 Call List`1<Object>..ctor, X0
	054 Move X8, [X20]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X8, [X8+184]
	060 Move [X8+16], X19
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X30, [X31+64]
	064 Return 

Method: System.Void get_defaultTextureHDRDecodeValues_Injected(out UnityEngine.Vector4 ret)

Disassembly:
	0x03C066AC MOV W1, W31
	0x03C066B0 LDR X30, [X31], #0x30
	0x03C066B4 BR X5
	0x03C066B8 BL 0x1C16F20
	0x03C066BC STR X30, [X31 - 0x30]!
	0x03C066C0 STP X22, X21, [X31 + 0x10]
	0x03C066C4 STP X20, X19, [X31 + 0x20]
	0x03C066C8 ADRP X22, 0x7DE000
	0x03C066CC ADRP X21, 0x4ED000
	0x03C066D0 LDRB W8, [X22 + 0x1AE]
	0x03C066D4 LDR X21, [X21 + 0xA28]
	0x03C066D8 MOV X19, X1
	0x03C066DC MOV X20, X0
	0x03C066E0 TBNZ X8, 0x0, 0x3C06704
	0x03C066E4 ADRP X0, 0x4ED000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7DF000
	005 Move X1, [X20+384]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51412992
	010 Add X0, X0, 278
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+384], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

