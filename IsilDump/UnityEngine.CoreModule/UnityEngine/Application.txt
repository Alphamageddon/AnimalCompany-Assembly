Type: UnityEngine.Application

Method: System.Void Quit(System.Int32 exitCode)

Disassembly:
	0x03C02838 LDR X8, [X0 + 0xB8]
	0x03C0283C ADRP X25, 0x4F1000
	0x03C02840 LDR X20, [X8 + 0x20]
	0x03C02844 LDR X25, [X25 + 0xD28]
	0x03C02848 MOV X0, X20
	0x03C0284C MOV X1, X19
	0x03C02850 MOV X2, X31
	0x03C02854 BL 0x33C0FDC
	0x03C02858 CBZ X0, 0x3C02878
	0x03C0285C LDR X23, [X25]
	0x03C02860 MOV X22, X0
	0x03C02864 MOV X1, X23
	0x03C02868 BL 0x1C16E00
	0x03C0286C MOV X21, X0
	0x03C02870 CBNZ X0, 0x3C0287C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E2000
	005 Move X1, [X20+3720]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51429376
	010 Add X0, X0, 90
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3720], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Quit()

Disassembly:
	0x03C02874 B 0x3C028C4
	0x03C02878 MOV X21, X31
	0x03C0287C LDR X0, [X24]
	0x03C02880 LDR W8, [X0 + 0xE0]
	0x03C02884 CBNZ W8, 0x3C02890
	0x03C02888 BL 0x1C16DFC
	0x03C0288C LDR X0, [X24]
	0x03C02890 LDR X8, [X0 + 0xB8]
	0x03C02894 MOV X1, X21
	0x03C02898 MOV X2, X20
	0x03C0289C ADD X0, X8, 0x20
	0x03C028A0 BL 0x1C24138
	0x03C028A4 CMP X20, X0
	0x03C028A8 MOV X20, X0
	0x03C028AC B.NE 0x3C02848
	0x03C028B0 LDP X20, X19, [X31 + 0x30]
	0x03C028B4 LDP X22, X21, [X31 + 0x20]
	0x03C028B8 LDP X24, X23, [X31 + 0x10]
	0x03C028BC LDP X30, X25, [X31], #0x40
	0x03C028C0 RET
	0x03C028C4 MOV X0, X22
	0x03C028C8 MOV X1, X23
	0x03C028CC BL 0x1C171E0
	0x03C028D0 STP X30, X23, [X31 - 0x30]!
	0x03C028D4 STP X22, X21, [X31 + 0x10]
	0x03C028D8 STP X20, X19, [X31 + 0x20]
	0x03C028DC ADRP X20, 0x7E1000
	0x03C028E0 ADRP X22, 0x4F1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7E2000
	005 Move X20, 0x4F2000
	006 Move W8, [X19+3728]
	007 Move X20, [X20+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4F2000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3728], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X19, 0x7E2000
	023 Move X1, [X19+3720]
	024 Compare X1, 0
	025 JumpIfNotEqual {31}
	026 Move X0, -51429376
	027 Add X0, X0, 90
	028 Call 0x1C17CB8
	029 Move X1, X0
	030 Move [X19+3720], X0
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move W0, W31
	034 Move X30, [X31+32]
	035 CallNoReturn X1

Method: System.Boolean get_isPlaying()

Disassembly:
	0x03C028E4 LDRB W8, [X20 + 0xF09]
	0x03C028E8 LDR X22, [X22 + 0x970]
	0x03C028EC MOV X19, X0
	0x03C028F0 TBNZ X8, 0x0, 0x3C02914
	0x03C028F4 ADRP X0, 0x4F2000
	0x03C028F8 LDR X0, [X0 + 0xE70]
	0x03C028FC BL 0x1C16CF4
	0x03C02900 ADRP X0, 0x4F1000
	0x03C02904 LDR X0, [X0 + 0x970]
	0x03C02908 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E2000
	004 Move X0, [X19+3736]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51204096
	008 Add X0, X0, 1483
	009 Call 0x1C17CB8
	010 Move [X19+3736], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean get_isFocused()

Disassembly:
	0x03C0290C MOVZ W8, 0x1
	0x03C02910 STRB W8, [X20 + 0xF09]
	0x03C02914 LDR X0, [X22]
	0x03C02918 LDR W8, [X0 + 0xE0]
	0x03C0291C CBNZ W8, 0x3C02928
	0x03C02920 BL 0x1C16DFC
	0x03C02924 LDR X0, [X22]
	0x03C02928 LDR X8, [X0 + 0xB8]
	0x03C0292C ADRP X23, 0x4F2000
	0x03C02930 LDR X20, [X8 + 0x38]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E2000
	004 Move X0, [X19+3744]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51220480
	008 Add X0, X0, 924
	009 Call 0x1C17CB8
	010 Move [X19+3744], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean get_runInBackground()

Disassembly:
	0x03C02934 LDR X23, [X23 + 0xE70]
	0x03C02938 MOV X0, X20
	0x03C0293C MOV X1, X19
	0x03C02940 MOV X2, X31
	0x03C02944 BL 0x33C0DE4
	0x03C02948 MOV X21, X0
	0x03C0294C CBZ X0, 0x3C02960
	0x03C02950 LDR X1, [X23]
	0x03C02954 LDR X8, [X21]
	0x03C02958 CMP X8, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E2000
	004 Move X0, [X19+3752]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51286016
	008 Add X0, X0, 1450
	009 Call 0x1C17CB8
	010 Move [X19+3752], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_runInBackground(System.Boolean value)

Disassembly:
	0x03C0295C B.NE 0x3C029A4
	0x03C02960 LDR X0, [X22]
	0x03C02964 LDR W8, [X0 + 0xE0]
	0x03C02968 CBNZ W8, 0x3C02974
	0x03C0296C BL 0x1C16DFC
	0x03C02970 LDR X0, [X22]
	0x03C02974 LDR X8, [X0 + 0xB8]
	0x03C02978 MOV X1, X21
	0x03C0297C MOV X2, X20
	0x03C02980 ADD X0, X8, 0x38
	0x03C02984 BL 0x1C24138
	0x03C02988 CMP X20, X0
	0x03C0298C MOV X20, X0
	0x03C02990 B.NE 0x3C02938
	0x03C02994 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E2000
	005 Move X1, [X20+3760]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51351552
	010 Add X0, X0, 3480
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3760], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_isBatchMode()

Disassembly:
	0x03C02998 LDP X22, X21, [X31 + 0x10]
	0x03C0299C LDP X30, X23, [X31], #0x30
	0x03C029A0 RET
	0x03C029A4 MOV X0, X21
	0x03C029A8 BL 0x1C171E0
	0x03C029AC STP X30, X23, [X31 - 0x30]!
	0x03C029B0 STP X22, X21, [X31 + 0x10]
	0x03C029B4 STP X20, X19, [X31 + 0x20]
	0x03C029B8 ADRP X20, 0x7E1000
	0x03C029BC ADRP X22, 0x4F1000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E2000
	004 Move X0, [X19+3768]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51335168
	008 Add X0, X0, 3186
	009 Call 0x1C17CB8
	010 Move [X19+3768], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.String get_persistentDataPath()

Disassembly:
	0x03C029C0 LDRB W8, [X20 + 0xF0A]
	0x03C029C4 LDR X22, [X22 + 0x970]
	0x03C029C8 MOV X19, X0
	0x03C029CC TBNZ X8, 0x0, 0x3C029F0
	0x03C029D0 ADRP X0, 0x4F2000
	0x03C029D4 LDR X0, [X0 + 0xE70]
	0x03C029D8 BL 0x1C16CF4
	0x03C029DC ADRP X0, 0x4F1000
	0x03C029E0 LDR X0, [X0 + 0x970]
	0x03C029E4 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E2000
	004 Move X0, [X19+3776]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51384320
	008 Add X0, X0, 3020
	009 Call 0x1C17CB8
	010 Move [X19+3776], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.String get_unityVersion()

Disassembly:
	0x03C029E8 MOVZ W8, 0x1
	0x03C029EC STRB W8, [X20 + 0xF0A]
	0x03C029F0 LDR X0, [X22]
	0x03C029F4 LDR W8, [X0 + 0xE0]
	0x03C029F8 CBNZ W8, 0x3C02A04
	0x03C029FC BL 0x1C16DFC
	0x03C02A00 LDR X0, [X22]
	0x03C02A04 LDR X8, [X0 + 0xB8]
	0x03C02A08 ADRP X23, 0x4F2000
	0x03C02A0C LDR X20, [X8 + 0x38]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E2000
	004 Move X0, [X19+3784]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51204096
	008 Add X0, X0, 1524
	009 Call 0x1C17CB8
	010 Move [X19+3784], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.String get_version()

Disassembly:
	0x03C02A10 LDR X23, [X23 + 0xE70]
	0x03C02A14 MOV X0, X20
	0x03C02A18 MOV X1, X19
	0x03C02A1C MOV X2, X31
	0x03C02A20 BL 0x33C0FDC
	0x03C02A24 MOV X21, X0
	0x03C02A28 CBZ X0, 0x3C02A3C
	0x03C02A2C LDR X1, [X23]
	0x03C02A30 LDR X8, [X21]
	0x03C02A34 CMP X8, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E2000
	004 Move X0, [X19+3792]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51408896
	008 Add X0, X0, 3803
	009 Call 0x1C17CB8
	010 Move [X19+3792], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void OpenURL(System.String url)

Disassembly:
	0x03C02A38 B.NE 0x3C02A80
	0x03C02A3C LDR X0, [X22]
	0x03C02A40 LDR W8, [X0 + 0xE0]
	0x03C02A44 CBNZ W8, 0x3C02A50
	0x03C02A48 BL 0x1C16DFC
	0x03C02A4C LDR X0, [X22]
	0x03C02A50 LDR X8, [X0 + 0xB8]
	0x03C02A54 MOV X1, X21
	0x03C02A58 MOV X2, X20
	0x03C02A5C ADD X0, X8, 0x38
	0x03C02A60 BL 0x1C24138
	0x03C02A64 CMP X20, X0
	0x03C02A68 MOV X20, X0
	0x03C02A6C B.NE 0x3C02A14
	0x03C02A70 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E2000
	005 Move X1, [X20+3800]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51408896
	010 Add X0, X0, 3842
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3800], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetLogCallbackDefined(System.Boolean defined)

Disassembly:
	0x03C02A74 LDP X22, X21, [X31 + 0x10]
	0x03C02A78 LDP X30, X23, [X31], #0x30
	0x03C02A7C RET
	0x03C02A80 MOV X0, X21
	0x03C02A84 BL 0x1C171E0
	0x03C02A88 STP X30, X27, [X31 - 0x50]!
	0x03C02A8C STP X26, X25, [X31 + 0x10]
	0x03C02A90 STP X24, X23, [X31 + 0x20]
	0x03C02A94 STP X22, X21, [X31 + 0x30]
	0x03C02A98 STP X20, X19, [X31 + 0x40]
	0x03C02A9C ADRP X20, 0x7E1000
	0x03C02AA0 ADRP X19, 0x4F1000
	0x03C02AA4 LDRB W8, [X20 + 0xF0B]
	0x03C02AA8 LDR X19, [X19 + 0x970]
	0x03C02AAC TBNZ X8, 0x0, 0x3C02AD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E2000
	005 Move X1, [X20+3808]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51392512
	010 Add X0, X0, 3497
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3808], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.RuntimePlatform get_platform()

Disassembly:
	0x03C02AB0 ADRP X0, 0x4F1000
	0x03C02AB4 LDR X0, [X0 + 0x970]
	0x03C02AB8 BL 0x1C16CF4
	0x03C02ABC ADRP X0, 0x4FA000
	0x03C02AC0 LDR X0, [X0 + 0x940]
	0x03C02AC4 BL 0x1C16CF4
	0x03C02AC8 MOVZ W8, 0x1
	0x03C02ACC STRB W8, [X20 + 0xF0B]
	0x03C02AD0 LDR X0, [X19]
	0x03C02AD4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E2000
	004 Move X0, [X19+3816]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51261440
	008 Add X0, X0, 1886
	009 Call 0x1C17CB8
	010 Move [X19+3816], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean get_isMobilePlatform()

Disassembly:
	0x03C02AD8 CBNZ W8, 0x3C02AE4
	0x03C02ADC BL 0x1C16DFC
	0x03C02AE0 LDR X0, [X19]
	0x03C02AE4 LDR X8, [X0 + 0xB8]
	0x03C02AE8 LDR X9, [X8 + 0x30]
	0x03C02AEC CBZ X9, 0x3C02C18
	0x03C02AF0 LDR W9, [X0 + 0xE0]
	0x03C02AF4 CBNZ W9, 0x3C02B04
	0x03C02AF8 BL 0x1C16DFC
	0x03C02AFC LDR X8, [X19]
	0x03C02B00 LDR X8, [X8 + 0xB8]
	0x03C02B04 LDR X0, [X8 + 0x30]
	0x03C02B08 CBZ X0, 0x3C02C48
	0x03C02B0C LDR X8, [X0]
	0x03C02B10 LDP X9, X1, [X8 + 0x1D8]
	0x03C02B14 BLR X9
	0x03C02B18 CBZ X0, 0x3C02C48
	0x03C02B1C LDR X8, [X0 + 0x18]
	0x03C02B20 MOV X19, X0
	0x03C02B24 CMP W8, 0x0
	0x03C02B28 CSET W27, GT
	0x03C02B2C CMP W8, 0x1
	0x03C02B30 B.LT 0x3C02C10
	0x03C02B34 ADRP X26, 0x4FA000
	0x03C02B38 ADRP X20, 0x4F1000
	0x03C02B3C ADRP X21, 0x4F1000
	0x03C02B40 LDR X26, [X26 + 0x940]
	0x03C02B44 LDR X20, [X20 + 0x7D0]
	0x03C02B48 LDR X21, [X21 + 0xA28]
	0x03C02B4C MOV X24, X31
	0x03C02B50 AND X8, X8, 0x0
	0x03C02B54 ADD X25, X19, 0x20
	0x03C02B58 CMP X24, W8, UXTW
	0x03C02B5C B.CS 0x3C02C44
	0x03C02B60 LDR X22, [X25, X24, LSL #3]
	0x03C02B64 CBZ X22, 0x3C02BAC
	0x03C02B68 LDR X23, [X26]
	0x03C02B6C MOV X0, X22
	0x03C02B70 MOV X1, X23
	0x03C02B74 BL 0x1C16E00
	0x03C02B78 CBZ X0, 0x3C02C38
	0x03C02B7C LDR X1, [X0 + 0x28]
	0x03C02B80 LDR X9, [X0 + 0x18]
	0x03C02B84 LDR X8, [X0 + 0x40]
	0x03C02B88 MOV X0, X8
	0x03C02B8C BLR X9
	0x03C02B90 TBZ X0, 0x0, 0x3C02C10
	0x03C02B94 LDR W8, [X19 + 0x18]
	0x03C02B98 ADD X24, X24, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7E2000
	005 Move X20, 0x4F2000
	006 Move W8, [X19+3824]
	007 Move X20, [X20+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4F2000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3824], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X19, 0x7E2000
	023 Move X8, [X19+3816]
	024 Compare X8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, -51261440
	027 Add X0, X0, 1886
	028 Call 0x1C17CB8
	029 Move X8, X0
	030 Move [X19+3816], X0
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move W8, W0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract W9, W8, 18
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W0, 1
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W0, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W0, W31
	042 Move X0, X31
	043 Call SystemInfo.get_deviceType
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return X0

Method: UnityEngine.NetworkReachability get_internetReachability()

Disassembly:
	0x03C02B9C CMP X24, W8, SXTW
	0x03C02BA0 CSET W27, LT
	0x03C02BA4 B.LT 0x3C02B58
	0x03C02BA8 B 0x3C02C10
	0x03C02BAC BL 0x1C16F20
	0x03C02BB0 B 0x3C02C4C
	0x03C02BB4 B 0x3C02BB8
	0x03C02BB8 MOV X22, X0
	0x03C02BBC CMP W1, 0x1
	0x03C02BC0 B.NE 0x3C02C78

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7E2000
	004 Move X0, [X19+3832]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51351552
	008 Add X0, X0, 3541
	009 Call 0x1C17CB8
	010 Move [X19+3832], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void CallLowMemory(UnityEngine.ApplicationMemoryUsage usage)

Disassembly:
	0x03C02BC4 MOV X0, X22
	0x03C02BC8 BL 0x3EB1AD0
	0x03C02BCC MOV X22, X0
	0x03C02BD0 MOV X0, X20
	0x03C02BD4 BL 0x1C16D08
	0x03C02BD8 LDR X8, [X22]
	0x03C02BDC LDR X1, [X8]
	0x03C02BE0 BL 0x1C17270
	0x03C02BE4 TBZ X0, 0x0, 0x3C02C4C
	0x03C02BE8 LDR X22, [X22]
	0x03C02BEC BL 0x3EB1AE0
	0x03C02BF0 MOV X0, X21
	0x03C02BF4 BL 0x1C16D08
	0x03C02BF8 LDR W8, [X0 + 0xE0]
	0x03C02BFC CBNZ W8, 0x3C02C04
	0x03C02C00 BL 0x1C16DFC
	0x03C02C04 MOV X0, X22
	0x03C02C08 BL 0x3C02C84
	0x03C02C0C B 0x3C02B94
	0x03C02C10 EOR W8, W27, 0x1
	0x03C02C14 B 0x3C02C1C
	0x03C02C18 MOVZ W8, 0x1
	0x03C02C1C LDP X20, X19, [X31 + 0x40]
	0x03C02C20 LDP X22, X21, [X31 + 0x30]
	0x03C02C24 LDP X24, X23, [X31 + 0x20]
	0x03C02C28 LDP X26, X25, [X31 + 0x10]
	0x03C02C2C AND W0, W8, 0x1
	0x03C02C30 LDP X30, X27, [X31], #0x50
	0x03C02C34 RET
	0x03C02C38 MOV X0, X22
	0x03C02C3C MOV X1, X23
	0x03C02C40 BL 0x1C171E0
	0x03C02C44 BL 0x1C16F28
	0x03C02C48 BL 0x1C16F20
	0x03C02C4C MOVZ W0, 0x8
	0x03C02C50 BL 0x3EB1AF0
	0x03C02C54 LDR X8, [X22]
	0x03C02C58 STR X8, [X0]
	0x03C02C5C ADRP X1, 0x2B2000
	0x03C02C60 ADD X1, X1, 0xE58
	0x03C02C64 MOV X2, X31
	0x03C02C68 BL 0x3EB1B00
	0x03C02C6C B 0x3C02C70
	0x03C02C70 MOV X22, X0
	0x03C02C74 BL 0x3EB1AE0
	0x03C02C78 MOV X0, X22
	0x03C02C7C BL 0x1D2C690
	0x03C02C80 BL 0x1990590
	0x03C02C84 STP X30, X21, [X31 - 0x20]!
	0x03C02C88 STP X20, X19, [X31 + 0x10]
	0x03C02C8C ADRP X21, 0x7E2000
	0x03C02C90 ADRP X20, 0x4F1000
	0x03C02C94 LDRB W8, [X21 + 0x1B0]
	0x03C02C98 LDR X20, [X20 + 0xA28]
	0x03C02C9C MOV X19, X0
	0x03C02CA0 TBNZ X8, 0x0, 0x3C02CC4
	0x03C02CA4 ADRP X0, 0x4F1000
	0x03C02CA8 LDR X0, [X0 + 0xA28]
	0x03C02CAC BL 0x1C16CF4
	0x03C02CB0 ADRP X0, 0x55C000
	0x03C02CB4 LDR X0, [X0 + 0xB10]
	0x03C02CB8 BL 0x1C16CF4
	0x03C02CBC MOVZ W8, 0x1
	0x03C02CC0 STRB W8, [X21 + 0x1B0]
	0x03C02CC4 LDR X0, [X20]
	0x03C02CC8 LDR W8, [X0 + 0xE0]
	0x03C02CCC CBNZ W8, 0x3C02CD4
	0x03C02CD0 BL 0x1C16DFC
	0x03C02CD4 ADRP X21, 0x7D6000
	0x03C02CD8 LDRB W8, [X21 + 0xFA8]
	0x03C02CDC CBNZ W8, 0x3C02CF4
	0x03C02CE0 ADRP X0, 0x4F1000
	0x03C02CE4 LDR X0, [X0 + 0xA28]
	0x03C02CE8 BL 0x1C16CF4
	0x03C02CEC MOVZ W8, 0x1
	0x03C02CF0 STRB W8, [X21 + 0xFA8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7E2000
	007 Move X20, 0x4F2000
	008 Move W8, [X21+3840]
	009 Move X20, [X20+2416]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x4F2000
	016 Move X0, [X0+2416]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3840], W8
	020 Move X0, [X20]
	021 Move [X31+8], W31
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Move X8, [X0+184]
	028 Move X8, [X8+8]
	029 Compare X8, 0
	030 JumpIfEqual {37}
	031 Move [X31+8], W19
	032 Move X9, [X8+24]
	033 Move X0, [X8+64]
	034 Move X2, [X8+40]
	035 Add X1, X31, 8
	036 NotImplemented "Instruction BLR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move X8, [X8]
	046 Compare X8, 0
	047 JumpIfEqual {52}
	048 Move X9, [X8+24]
	049 Move X0, [X8+64]
	050 Move X1, [X8+40]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+16]
	055 Move X21, [X31+24]
	056 Add X31, X31, 48
	057 Return 
	058 Move [X31+4], W19
	059 Move X0, 0x55D000
	060 Move X0, [X0+2760]
	061 Call 0x1C17D08
	062 Add X1, X31, 4
	063 Call 0x1C17E04
	064 Move X19, X0
	065 Move X0, 0x55D000
	066 Move X0, [X0+2768]
	067 Call 0x1C17D08
	068 Move X1, X19
	069 Move X2, X31
	070 Call String.Format, X0, X1
	071 Move X19, X0
	072 Move X0, 0x4F2000
	073 Move X0, [X0+2000]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X1, X19
	077 Move X2, X31
	078 Move X20, X0
	079 Call Exception..ctor, X0, X1
	080 Move X0, 0x55D000
	081 Move X0, [X0+2776]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X20
	085 Call 0x1C17DEC

Method: System.Boolean HasLogCallback()

Disassembly:
	0x03C02CFC CBNZ W8, 0x3C02D08
	0x03C02D00 BL 0x1C16DFC
	0x03C02D04 LDR X0, [X20]
	0x03C02D08 LDR X8, [X0 + 0xB8]
	0x03C02D0C LDR X20, [X8 + 0x8]
	0x03C02D10 CBZ X20, 0x3C02D88
	0x03C02D14 ADRP X10, 0x55C000
	0x03C02D18 LDR X8, [X20]
	0x03C02D1C LDR X10, [X10 + 0xB10]
	0x03C02D20 LDRH W9, [X8 + 0x12E]
	0x03C02D24 LDR X1, [X10]
	0x03C02D28 CBZ X9, 0x3C02D4C
	0x03C02D2C LDR X10, [X8 + 0xB0]
	0x03C02D30 ADD X10, X10, 0x8
	0x03C02D34 LDUR X11, [X10 - 0x8]
	0x03C02D38 CMP X11, X1
	0x03C02D3C B.EQ 0x3C02D5C
	0x03C02D40 SUBS X9, X9, 0x1
	0x03C02D44 ADD X10, X10, 0x10
	0x03C02D48 B.NE 0x3C02D34
	0x03C02D4C MOVZ W2, 0x1
	0x03C02D50 MOV X0, X20
	0x03C02D54 BL 0x1C5C788
	0x03C02D58 B 0x3C02D6C
	0x03C02D5C LDR W9, [X10]
	0x03C02D60 ADD W9, W9, 0x1
	0x03C02D64 ADD X8, X8, W9, 0x4, SXTW
	0x03C02D68 ADD X0, X8, 0x138
	0x03C02D6C LDP X4, X3, [X0]
	0x03C02D70 MOV X0, X20
	0x03C02D74 MOV X1, X19
	0x03C02D78 LDP X20, X19, [X31 + 0x10]
	0x03C02D7C MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E2000
	005 Move X19, 0x4F2000
	006 Move W8, [X20+3841]
	007 Move X19, [X19+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4F2000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3841], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X9, [X8+16]
	025 Compare X9, 0
	026 JumpIfEqual {28}
	027 Move W0, 1
	028 Move W9, [X0+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {34}
	031 Call 0x1C17DFC
	032 Move X8, [X19]
	033 Move X8, [X8+184]
	034 Move X8, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0

Method: System.Void add_logMessageReceived(UnityEngine.Application/LogCallback value)

Disassembly:
	0x03C02D80 LDP X30, X21, [X31], #0x20
	0x03C02D84 BR X4
	0x03C02D88 BL 0x1C16F20
	0x03C02D8C STP X30, X21, [X31 - 0x20]!
	0x03C02D90 STP X20, X19, [X31 + 0x10]
	0x03C02D94 ADRP X19, 0x7E1000
	0x03C02D98 ADRP X21, 0x4F3000
	0x03C02D9C ADRP X20, 0x4F1000
	0x03C02DA0 LDRB W8, [X19 + 0xF0C]
	0x03C02DA4 LDR X21, [X21 + 0xA50]
	0x03C02DA8 LDR X20, [X20 + 0x970]
	0x03C02DAC TBNZ X8, 0x0, 0x3C02DD0
	0x03C02DB0 ADRP X0, 0x4F1000
	0x03C02DB4 LDR X0, [X0 + 0x970]
	0x03C02DB8 BL 0x1C16CF4
	0x03C02DBC ADRP X0, 0x4F3000
	0x03C02DC0 LDR X0, [X0 + 0xA50]
	0x03C02DC4 BL 0x1C16CF4
	0x03C02DC8 MOVZ W8, 0x1
	0x03C02DCC STRB W8, [X19 + 0xF0C]
	0x03C02DD0 LDR X0, [X21]
	0x03C02DD4 BL 0x1C16F10
	0x03C02DD8 MOV X1, X31
	0x03C02DDC MOV X19, X0
	0x03C02DE0 BL 0x33DFA8C
	0x03C02DE4 LDR X0, [X20]
	0x03C02DE8 LDR W8, [X0 + 0xE0]
	0x03C02DEC CBNZ W8, 0x3C02DF8
	0x03C02DF0 BL 0x1C16DFC
	0x03C02DF4 LDR X0, [X20]
	0x03C02DF8 LDR X8, [X0 + 0xB8]
	0x03C02DFC STR X19, [X8 + 0x48]
	0x03C02E00 LDP X20, X19, [X31 + 0x10]
	0x03C02E04 LDP X30, X21, [X31], #0x20
	0x03C02E08 RET
	0x03C02E0C STR X30, [X31 - 0x20]!
	0x03C02E10 STP X20, X19, [X31 + 0x10]
	0x03C02E14 ADRP X20, 0x7E1000
	0x03C02E18 ADRP X19, 0x4F1000
	0x03C02E1C LDRB W8, [X20 + 0xF0D]
	0x03C02E20 LDR X19, [X19 + 0x970]
	0x03C02E24 TBNZ X8, 0x0, 0x3C02E3C
	0x03C02E28 ADRP X0, 0x4F1000
	0x03C02E2C LDR X0, [X0 + 0x970]
	0x03C02E30 BL 0x1C16CF4
	0x03C02E34 MOVZ W8, 0x1
	0x03C02E38 STRB W8, [X20 + 0xF0D]
	0x03C02E3C LDR X0, [X19]
	0x03C02E40 LDR W8, [X0 + 0xE0]
	0x03C02E44 CBNZ W8, 0x3C02E50
	0x03C02E48 BL 0x1C16DFC
	0x03C02E4C LDR X0, [X19]
	0x03C02E50 LDR X8, [X0 + 0xB8]
	0x03C02E54 LDR X0, [X8 + 0x48]
	0x03C02E58 CBZ X0, 0x3C02EB4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E2000
	006 Move X20, 0x4F2000
	007 Move W8, [X21+3842]
	008 Move X20, [X20+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4F2000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move X0, 0x536000
	018 Move X0, [X0+3304]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3842], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X1, X19
	030 Move X2, X31
	031 Move X0, [X8+16]
	032 Call Delegate.Combine, X0, X1
	033 Compare X0, 0
	034 JumpIfEqual {46}
	035 Move X8, 0x536000
	036 Move X8, [X8+3304]
	037 Move X1, [X8]
	038 Move X8, [X0]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move [X8+16], X0
	043 Move X8, [X0]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Call 0x1C181E0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8+16], X0
	049 Move X19, 0x7E2000
	050 Move X1, [X19+3808]
	051 Compare X1, 0
	052 JumpIfNotEqual {58}
	053 Move X0, -51392512
	054 Add X0, X0, 3497
	055 Call 0x1C17CB8
	056 Move X1, X0
	057 Move [X19+3808], X0
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move W0, 1
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 CallNoReturn X1

Method: System.Void remove_logMessageReceived(UnityEngine.Application/LogCallback value)

Disassembly:
	0x03C02E5C MOV X1, X31
	0x03C02E60 BL 0x33DFCF8
	0x03C02E64 LDR X0, [X19]
	0x03C02E68 LDR X8, [X0 + 0xB8]
	0x03C02E6C LDR X9, [X8 + 0x38]
	0x03C02E70 CBZ X9, 0x3C02EA8
	0x03C02E74 LDR W9, [X0 + 0xE0]
	0x03C02E78 CBNZ W9, 0x3C02E88
	0x03C02E7C BL 0x1C16DFC
	0x03C02E80 LDR X8, [X19]
	0x03C02E84 LDR X8, [X8 + 0xB8]
	0x03C02E88 LDR X8, [X8 + 0x38]
	0x03C02E8C CBZ X8, 0x3C02EB4
	0x03C02E90 LDR X2, [X8 + 0x18]
	0x03C02E94 LDR X0, [X8 + 0x40]
	0x03C02E98 LDR X1, [X8 + 0x28]
	0x03C02E9C LDP X20, X19, [X31 + 0x10]
	0x03C02EA0 LDR X30, [X31], #0x20
	0x03C02EA4 BR X2
	0x03C02EA8 LDP X20, X19, [X31 + 0x10]
	0x03C02EAC LDR X30, [X31], #0x20
	0x03C02EB0 RET
	0x03C02EB4 BL 0x1C16F20
	0x03C02EB8 STR X30, [X31 - 0x20]!
	0x03C02EBC STP X20, X19, [X31 + 0x10]
	0x03C02EC0 ADRP X20, 0x7E1000
	0x03C02EC4 ADRP X19, 0x4F1000
	0x03C02EC8 LDRB W8, [X20 + 0xF0E]
	0x03C02ECC LDR X19, [X19 + 0x970]
	0x03C02ED0 TBNZ X8, 0x0, 0x3C02EE8
	0x03C02ED4 ADRP X0, 0x4F1000
	0x03C02ED8 LDR X0, [X0 + 0x970]
	0x03C02EDC BL 0x1C16CF4
	0x03C02EE0 MOVZ W8, 0x1
	0x03C02EE4 STRB W8, [X20 + 0xF0E]
	0x03C02EE8 LDR X0, [X19]
	0x03C02EEC LDR W8, [X0 + 0xE0]
	0x03C02EF0 CBNZ W8, 0x3C02EFC
	0x03C02EF4 BL 0x1C16DFC
	0x03C02EF8 LDR X0, [X19]
	0x03C02EFC LDR X8, [X0 + 0xB8]
	0x03C02F00 LDR X9, [X8 + 0x40]
	0x03C02F04 CBZ X9, 0x3C02F3C
	0x03C02F08 LDR W9, [X0 + 0xE0]
	0x03C02F0C CBNZ W9, 0x3C02F1C
	0x03C02F10 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E2000
	006 Move X20, 0x4F2000
	007 Move W8, [X21+3843]
	008 Move X20, [X20+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4F2000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move X0, 0x536000
	018 Move X0, [X0+3304]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3843], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X1, X19
	030 Move X2, X31
	031 Move X0, [X8+16]
	032 Call Delegate.Remove, X0, X1
	033 Compare X0, 0
	034 JumpIfEqual {46}
	035 Move X8, 0x536000
	036 Move X8, [X8+3304]
	037 Move X1, [X8]
	038 Move X8, [X0]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move [X8+16], X0
	043 Move X8, [X0]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Call 0x1C181E0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8+16], X0
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 

Method: System.Void CallLogCallback(System.String logString, System.String stackTrace, UnityEngine.LogType type, System.Boolean invokedOnMainThread)

Disassembly:
	0x03C02F14 LDR X8, [X19]
	0x03C02F18 LDR X8, [X8 + 0xB8]
	0x03C02F1C LDR X8, [X8 + 0x40]
	0x03C02F20 CBZ X8, 0x3C02F48
	0x03C02F24 LDR X2, [X8 + 0x18]
	0x03C02F28 LDR X0, [X8 + 0x40]
	0x03C02F2C LDR X1, [X8 + 0x28]
	0x03C02F30 LDP X20, X19, [X31 + 0x10]
	0x03C02F34 LDR X30, [X31], #0x20
	0x03C02F38 BR X2
	0x03C02F3C LDP X20, X19, [X31 + 0x10]
	0x03C02F40 LDR X30, [X31], #0x20
	0x03C02F44 RET
	0x03C02F48 BL 0x1C16F20
	0x03C02F4C STR X30, [X31 - 0x20]!
	0x03C02F50 STP X20, X19, [X31 + 0x10]
	0x03C02F54 ADRP X19, 0x7E1000
	0x03C02F58 ADRP X20, 0x55C000
	0x03C02F5C LDRB W8, [X19 + 0xF0F]
	0x03C02F60 LDR X20, [X20 + 0xAE0]
	0x03C02F64 TBNZ X8, 0x0, 0x3C02F7C
	0x03C02F68 ADRP X0, 0x55C000
	0x03C02F6C LDR X0, [X0 + 0xAE0]
	0x03C02F70 BL 0x1C16CF4
	0x03C02F74 MOVZ W8, 0x1
	0x03C02F78 STRB W8, [X19 + 0xF0F]
	0x03C02F7C LDR X0, [X20]
	0x03C02F80 LDR W8, [X0 + 0xE0]
	0x03C02F84 CBNZ W8, 0x3C02F8C
	0x03C02F88 BL 0x1C16DFC
	0x03C02F8C LDP X20, X19, [X31 + 0x10]
	0x03C02F90 LDR X30, [X31], #0x20
	0x03C02F94 B 0x3C02F98
	0x03C02F98 STR X30, [X31 - 0x30]!
	0x03C02F9C STP X22, X21, [X31 + 0x10]
	0x03C02FA0 STP X20, X19, [X31 + 0x20]
	0x03C02FA4 ADRP X19, 0x7E2000
	0x03C02FA8 ADRP X21, 0x55C000
	0x03C02FAC LDRB W8, [X19 + 0x2E3]
	0x03C02FB0 LDR X21, [X21 + 0xAE0]
	0x03C02FB4 TBNZ X8, 0x0, 0x3C02FE4
	0x03C02FB8 ADRP X0, 0x55C000
	0x03C02FBC LDR X0, [X0 + 0xAE0]
	0x03C02FC0 BL 0x1C16CF4
	0x03C02FC4 ADRP X0, 0x55C000
	0x03C02FC8 LDR X0, [X0 + 0xAF0]
	0x03C02FCC BL 0x1C16CF4
	0x03C02FD0 ADRP X0, 0x55C000
	0x03C02FD4 LDR X0, [X0 + 0xAF8]
	0x03C02FD8 BL 0x1C16CF4
	0x03C02FDC MOVZ W8, 0x1
	0x03C02FE0 STRB W8, [X19 + 0x2E3]
	0x03C02FE4 LDR X0, [X21]
	0x03C02FE8 LDR W8, [X0 + 0xE0]
	0x03C02FEC CBNZ W8, 0x3C02FF8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7E2000
	008 Move W8, [X23+3844]
	009 Move W22, W3
	010 Move W19, W2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x4F2000
	018 Move X0, [X0+2416]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+3844], W8
	022 Move X23, 0x4F2000
	023 Move X23, [X23+2416]
	024 Move TEMP, X22
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {45}
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X8, [X8+16]
	036 Compare X8, 0
	037 JumpIfEqual {45}
	038 Move X9, [X8+24]
	039 Move X0, [X8+64]
	040 Move X4, [X8+40]
	041 Move X1, X21
	042 Move X2, X20
	043 Move W3, W19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X0, [X23]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X23]
	051 Move X8, [X0+184]
	052 Move X8, [X8+24]
	053 Compare X8, 0
	054 JumpIfEqual {68}
	055 Move X5, [X8+24]
	056 Move X0, [X8+64]
	057 Move X4, [X8+40]
	058 Move X1, X21
	059 Move X2, X20
	060 Move W3, W19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Move X23, [X31+56]
	067 CallNoReturn X5
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Move X23, [X31+56]
	074 Return 

Method: System.Void add_onBeforeRender(UnityEngine.Events.UnityAction value)

Disassembly:
	0x03C02FF0 BL 0x1C16DFC
	0x03C02FF4 LDR X0, [X21]
	0x03C02FF8 LDR X8, [X0 + 0xB8]
	0x03C02FFC LDR X19, [X8]
	0x03C03000 STRB W31, [X31 + 0xC]
	0x03C03004 ADD X1, X31, 0xC
	0x03C03008 MOV X0, X19
	0x03C0300C MOV X2, X31
	0x03C03010 BL 0x33DE64C
	0x03C03014 ADRP X22, 0x55B000
	0x03C03018 LDR X22, [X22 + 0xAF8]
	0x03C0301C MOV W20, W31
	0x03C03020 LDR X0, [X21]
	0x03C03024 LDR W8, [X0 + 0xE0]
	0x03C03028 CBNZ W8, 0x3C03034
	0x03C0302C BL 0x1C16DFC
	0x03C03030 LDR X0, [X21]
	0x03C03034 LDR X8, [X0 + 0xB8]
	0x03C03038 LDR X8, [X8]
	0x03C0303C CBZ X8, 0x3C030C0
	0x03C03040 LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7E2000
	006 Move X21, 0x55D000
	007 Move W8, [X20+3845]
	008 Call 0x3EB29D4
	009 Return 
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x55C000
	016 Move X0, [X0+2784]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3845], W8
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]

Method: System.Void remove_onBeforeRender(UnityEngine.Events.UnityAction value)

Disassembly:
	0x03C03390 STP X20, X19, [X31 + 0x10]
	0x03C03394 LDR X8, [X2 + 0x8]
	0x03C03398 STP X1, X2, [X0 + 0x20]
	0x03C0339C MOV X19, X0
	0x03C033A0 MOV X20, X1
	0x03C033A4 STR X8, [X0 + 0x10]
	0x03C033A8 LDRB W21, [X2 + 0x52]
	0x03C033AC STR X0, [X0 + 0x40]
	0x03C033B0 MOV X0, X2
	0x03C033B4 BL 0x1C16D84
	0x03C033B8 TBZ X0, 0x0, 0x3C033D0
	0x03C033BC CMP W21, 0x1
	0x03C033C0 B.NE 0x3C033D8
	0x03C033C4 ADRP X8, 0xFFFFFFFFFE001000
	0x03C033C8 ADD X8, X8, 0x650
	0x03C033CC B 0x3C033F4
	0x03C033D0 CBZ W21, 0x3C033EC
	0x03C033D4 CBZ X20, 0x3C03410
	0x03C033D8 LDR X8, [X19 + 0x10]
	0x03C033DC LDR X9, [X19 + 0x20]
	0x03C033E0 STR X8, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7E1000
	006 Move X21, 0x55C000
	007 Move W8, [X20+3846]
	008 Move X21, [X21+2784]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x55C000
	015 Move X0, [X0+2784]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3846], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]

Method: System.Void add_focusChanged(System.Action`1<System.Boolean> value)

Disassembly:
	0x03C036E8 LDR X2, [X21 + 0xF38]
	0x03C036EC MOV W19, W1
	0x03C036F0 MOV X20, X0
	0x03C036F4 CBNZ X2, 0x3C0370C
	0x03C036F8 ADRP X0, 0xFFFFFFFFFCF01000
	0x03C036FC ADD X0, X0, 0xEE5
	0x03C03700 BL 0x1C16CB8
	0x03C03704 MOV X2, X0
	0x03C03708 STR X0, [X21 + 0xF38]
	0x03C0370C MOV X0, X20
	0x03C03710 MOV W1, W19
	0x03C03714 LDP X20, X19, [X31 + 0x10]
	0x03C03718 LDP X30, X21, [X31], #0x20
	0x03C0371C BR X2
	0x03C03720 STR X30, [X31 - 0x20]!
	0x03C03724 STP X20, X19, [X31 + 0x10]
	0x03C03728 ADRP X20, 0x7E0000
	0x03C0372C LDR X1, [X20 + 0xF40]
	0x03C03730 MOV X19, X0
	0x03C03734 CBNZ X1, 0x3C0374C
	0x03C03738 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C0373C ADD X0, X0, 0xE2D
	0x03C03740 BL 0x1C16CB8
	0x03C03744 MOV X1, X0
	0x03C03748 STR X0, [X20 + 0xF40]
	0x03C0374C MOV X0, X19
	0x03C03750 LDP X20, X19, [X31 + 0x10]
	0x03C03754 LDR X30, [X31], #0x20
	0x03C03758 BR X1
	0x03C0375C STP X30, X21, [X31 - 0x20]!
	0x03C03760 STP X20, X19, [X31 + 0x10]
	0x03C03764 ADRP X21, 0x7E0000
	0x03C03768 LDR X2, [X21 + 0xF48]
	0x03C0376C MOV W19, W1
	0x03C03770 MOV X20, X0
	0x03C03774 CBNZ X2, 0x3C0378C
	0x03C03778 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C0377C ADD X0, X0, 0xE50
	0x03C03780 BL 0x1C16CB8
	0x03C03784 MOV X2, X0
	0x03C03788 STR X0, [X21 + 0xF48]
	0x03C0378C AND W1, W19, 0x1
	0x03C03790 MOV X0, X20
	0x03C03794 LDP X20, X19, [X31 + 0x10]
	0x03C03798 LDP X30, X21, [X31], #0x20
	0x03C0379C BR X2
	0x03C037A0 STR X30, [X31 - 0x20]!
	0x03C037A4 STP X20, X19, [X31 + 0x10]
	0x03C037A8 ADRP X20, 0x7E0000
	0x03C037AC LDR X1, [X20 + 0xF50]
	0x03C037B0 MOV X19, X0
	0x03C037B4 CBNZ X1, 0x3C037CC
	0x03C037B8 ADRP X0, 0xFFFFFFFFFCF27000
	0x03C037BC ADD X0, X0, 0x530
	0x03C037C0 BL 0x1C16CB8
	0x03C037C4 MOV X1, X0
	0x03C037C8 STR X0, [X20 + 0xF50]
	0x03C037CC MOV X0, X19
	0x03C037D0 LDP X20, X19, [X31 + 0x10]
	0x03C037D4 LDR X30, [X31], #0x20
	0x03C037D8 BR X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x7E1000
	010 Move X24, 0x4F1000
	011 Move W8, [X20+3847]
	012 Move X24, [X24+2416]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4F1000
	019 Move X0, [X0+3368]
	020 Call 0x1C17CF4
	021 Move X0, 0x4F1000
	022 Move X0, [X0+2416]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3847], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X24]
	032 Move X8, [X0+184]
	033 Move X25, 0x4F1000
	034 Move X20, [X8+32]
	035 Move X25, [X25+3368]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X31
	039 Call Delegate.Combine, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X23, [X25]
	043 Move X22, X0
	044 Move X1, X23
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {50}
	049 Move X21, X31
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X8, [X0+184]
	057 Move X1, X21
	058 Move X2, X20
	059 Add X0, X8, 32
	060 Call 0x1C25138
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, X0
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Return 
	072 Move X0, X22
	073 Move X1, X23
	074 Call 0x1C181E0

Method: System.Void remove_focusChanged(System.Action`1<System.Boolean> value)

Disassembly:
	0x03C037DC STP X30, X21, [X31 - 0x20]!
	0x03C037E0 STP X20, X19, [X31 + 0x10]
	0x03C037E4 ADRP X21, 0x7E0000
	0x03C037E8 LDR X2, [X21 + 0xF58]
	0x03C037EC MOV W19, W1
	0x03C037F0 MOV X20, X0
	0x03C037F4 CBNZ X2, 0x3C0380C
	0x03C037F8 ADRP X0, 0xFFFFFFFFFCF05000
	0x03C037FC ADD X0, X0, 0xE09
	0x03C03800 BL 0x1C16CB8
	0x03C03804 MOV X2, X0
	0x03C03808 STR X0, [X21 + 0xF58]
	0x03C0380C AND W1, W19, 0x1
	0x03C03810 MOV X0, X20
	0x03C03814 LDP X20, X19, [X31 + 0x10]
	0x03C03818 LDP X30, X21, [X31], #0x20
	0x03C0381C BR X2
	0x03C03820 STR X30, [X31 - 0x20]!
	0x03C03824 STP X20, X19, [X31 + 0x10]
	0x03C03828 ADRP X20, 0x7E0000
	0x03C0382C LDR X1, [X20 + 0xF60]
	0x03C03830 MOV X19, X0
	0x03C03834 CBNZ X1, 0x3C0384C
	0x03C03838 ADRP X0, 0xFFFFFFFFFCEFA000
	0x03C0383C ADD X0, X0, 0x48
	0x03C03840 BL 0x1C16CB8
	0x03C03844 MOV X1, X0
	0x03C03848 STR X0, [X20 + 0xF60]
	0x03C0384C MOV X0, X19
	0x03C03850 LDP X20, X19, [X31 + 0x10]
	0x03C03854 LDR X30, [X31], #0x20
	0x03C03858 BR X1
	0x03C0385C STP X30, X21, [X31 - 0x20]!
	0x03C03860 STP X20, X19, [X31 + 0x10]
	0x03C03864 ADRP X21, 0x7E0000
	0x03C03868 LDR X2, [X21 + 0xF68]
	0x03C0386C MOV W19, W1
	0x03C03870 MOV X20, X0
	0x03C03874 CBNZ X2, 0x3C0388C
	0x03C03878 ADRP X0, 0xFFFFFFFFFCF23000
	0x03C0387C ADD X0, X0, 0xA09
	0x03C03880 BL 0x1C16CB8
	0x03C03884 MOV X2, X0
	0x03C03888 STR X0, [X21 + 0xF68]
	0x03C0388C AND W1, W19, 0x1
	0x03C03890 MOV X0, X20
	0x03C03894 LDP X20, X19, [X31 + 0x10]
	0x03C03898 LDP X30, X21, [X31], #0x20
	0x03C0389C BR X2
	0x03C038A0 STR X30, [X31 - 0x20]!
	0x03C038A4 STP X20, X19, [X31 + 0x10]
	0x03C038A8 ADRP X20, 0x7E0000
	0x03C038AC LDR X1, [X20 + 0xF70]
	0x03C038B0 MOV X19, X0
	0x03C038B4 CBNZ X1, 0x3C038CC
	0x03C038B8 ADRP X0, 0xFFFFFFFFFCEF7000
	0x03C038BC ADD X0, X0, 0xF32
	0x03C038C0 BL 0x1C16CB8
	0x03C038C4 MOV X1, X0
	0x03C038C8 STR X0, [X20 + 0xF70]
	0x03C038CC MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x7E1000
	010 Move X24, 0x4F1000
	011 Move W8, [X20+3848]
	012 Move X24, [X24+2416]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4F1000
	019 Move X0, [X0+3368]
	020 Call 0x1C17CF4
	021 Move X0, 0x4F1000
	022 Move X0, [X0+2416]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3848], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X24]
	032 Move X8, [X0+184]
	033 Move X25, 0x4F1000
	034 Move X20, [X8+32]
	035 Move X25, [X25+3368]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X31
	039 Call Delegate.Remove, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X23, [X25]
	043 Move X22, X0
	044 Move X1, X23
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {50}
	049 Move X21, X31
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X8, [X0+184]
	057 Move X1, X21
	058 Move X2, X20
	059 Add X0, X8, 32
	060 Call 0x1C25138
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, X0
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Return 
	072 Move X0, X22
	073 Move X1, X23
	074 Call 0x1C181E0

Method: System.Void add_quitting(System.Action value)

Disassembly:
	0x03C038D0 LDP X20, X19, [X31 + 0x10]
	0x03C038D4 LDR X30, [X31], #0x20
	0x03C038D8 BR X1
	0x03C038DC STR D8, [X31 - 0x20]!
	0x03C038E0 STR X30, [X31 + 0x8]
	0x03C038E4 STP X20, X19, [X31 + 0x10]
	0x03C038E8 ADRP X20, 0x7E0000
	0x03C038EC LDR X1, [X20 + 0xF78]
	0x03C038F0 MOV V8.16B, V0.16B
	0x03C038F4 MOV X19, X0
	0x03C038F8 CBNZ X1, 0x3C03910
	0x03C038FC ADRP X0, 0xFFFFFFFFFCF0D000
	0x03C03900 ADD X0, X0, 0xDB2
	0x03C03904 BL 0x1C16CB8
	0x03C03908 MOV X1, X0
	0x03C0390C STR X0, [X20 + 0xF78]
	0x03C03910 MOV X0, X19
	0x03C03914 LDP X20, X19, [X31 + 0x10]
	0x03C03918 LDR X30, [X31 + 0x8]
	0x03C0391C MOV V0.16B, V8.16B
	0x03C03920 LDR V8, [X31], #0x20
	0x03C03924 BR X1
	0x03C03928 STR X30, [X31 - 0x20]!
	0x03C0392C STP X20, X19, [X31 + 0x10]
	0x03C03930 ADRP X20, 0x7E0000
	0x03C03934 LDR X1, [X20 + 0xF80]
	0x03C03938 MOV X19, X0
	0x03C0393C CBNZ X1, 0x3C03954
	0x03C03940 ADRP X0, 0xFFFFFFFFFCF19000
	0x03C03944 ADD X0, X0, 0xC81
	0x03C03948 BL 0x1C16CB8
	0x03C0394C MOV X1, X0
	0x03C03950 STR X0, [X20 + 0xF80]
	0x03C03954 MOV X0, X19
	0x03C03958 LDP X20, X19, [X31 + 0x10]
	0x03C0395C LDR X30, [X31], #0x20
	0x03C03960 BR X1
	0x03C03964 STR X30, [X31 - 0x20]!
	0x03C03968 STP X20, X19, [X31 + 0x10]
	0x03C0396C ADRP X20, 0x7E0000
	0x03C03970 LDR X1, [X20 + 0xF88]
	0x03C03974 MOV X19, X0
	0x03C03978 CBNZ X1, 0x3C03990
	0x03C0397C ADRP X0, 0xFFFFFFFFFCEF5000
	0x03C03980 ADD X0, X0, 0xDA4
	0x03C03984 BL 0x1C16CB8
	0x03C03988 MOV X1, X0
	0x03C0398C STR X0, [X20 + 0xF88]
	0x03C03990 MOV X0, X19
	0x03C03994 LDP X20, X19, [X31 + 0x10]
	0x03C03998 LDR X30, [X31], #0x20
	0x03C0399C BR X1
	0x03C039A0 STR X30, [X31 - 0x20]!
	0x03C039A4 STP X20, X19, [X31 + 0x10]
	0x03C039A8 ADRP X20, 0x7E0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x7E1000
	008 Move X22, 0x4F1000
	009 Move W8, [X20+3849]
	010 Move X22, [X22+2416]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4F2000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F1000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3849], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X23, 0x4F2000
	032 Move X20, [X8+56]
	033 Move X23, [X23+3696]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Delegate.Combine, X0, X1
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, [X23]
	042 Move X8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X1, X21
	052 Move X2, X20
	053 Add X0, X8, 56
	054 Call 0x1C25138
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C181E0

Method: System.Void remove_quitting(System.Action value)

Disassembly:
	0x03C039AC LDR X1, [X20 + 0xF90]
	0x03C039B0 MOV X19, X0
	0x03C039B4 CBNZ X1, 0x3C039CC
	0x03C039B8 ADRP X0, 0xFFFFFFFFFCEF7000
	0x03C039BC ADD X0, X0, 0xF5D
	0x03C039C0 BL 0x1C16CB8
	0x03C039C4 MOV X1, X0
	0x03C039C8 STR X0, [X20 + 0xF90]
	0x03C039CC MOV X0, X19
	0x03C039D0 LDP X20, X19, [X31 + 0x10]
	0x03C039D4 LDR X30, [X31], #0x20
	0x03C039D8 BR X1
	0x03C039DC STR X30, [X31 - 0x20]!
	0x03C039E0 STP X20, X19, [X31 + 0x10]
	0x03C039E4 ADRP X20, 0x7E0000
	0x03C039E8 LDR X1, [X20 + 0xF98]
	0x03C039EC MOV X19, X0
	0x03C039F0 CBNZ X1, 0x3C03A08
	0x03C039F4 ADRP X0, 0xFFFFFFFFFCEF5000
	0x03C039F8 ADD X0, X0, 0xDCD
	0x03C039FC BL 0x1C16CB8
	0x03C03A00 MOV X1, X0
	0x03C03A04 STR X0, [X20 + 0xF98]
	0x03C03A08 MOV X0, X19
	0x03C03A0C LDP X20, X19, [X31 + 0x10]
	0x03C03A10 LDR X30, [X31], #0x20
	0x03C03A14 BR X1
	0x03C03A18 STR X30, [X31 - 0x20]!
	0x03C03A1C STP X20, X19, [X31 + 0x10]
	0x03C03A20 ADRP X20, 0x7E0000
	0x03C03A24 LDR X1, [X20 + 0xFA0]
	0x03C03A28 MOV X19, X0
	0x03C03A2C CBNZ X1, 0x3C03A44
	0x03C03A30 ADRP X0, 0xFFFFFFFFFCF15000
	0x03C03A34 ADD X0, X0, 0x5D9
	0x03C03A38 BL 0x1C16CB8
	0x03C03A3C MOV X1, X0
	0x03C03A40 STR X0, [X20 + 0xFA0]
	0x03C03A44 MOV X0, X19
	0x03C03A48 LDP X20, X19, [X31 + 0x10]
	0x03C03A4C LDR X30, [X31], #0x20
	0x03C03A50 BR X1
	0x03C03A54 STP X30, X21, [X31 - 0x20]!
	0x03C03A58 STP X20, X19, [X31 + 0x10]
	0x03C03A5C ADRP X21, 0x7E0000
	0x03C03A60 LDR X2, [X21 + 0xFA8]
	0x03C03A64 MOV W19, W1
	0x03C03A68 MOV X20, X0
	0x03C03A6C CBNZ X2, 0x3C03A84
	0x03C03A70 ADRP X0, 0xFFFFFFFFFCF11000
	0x03C03A74 ADD X0, X0, 0x54A
	0x03C03A78 BL 0x1C16CB8
	0x03C03A7C MOV X2, X0
	0x03C03A80 STR X0, [X21 + 0xFA8]
	0x03C03A84 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x7E1000
	008 Move X22, 0x4F1000
	009 Move W8, [X20+3850]
	010 Move X22, [X22+2416]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4F2000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F1000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3850], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X23, 0x4F2000
	032 Move X20, [X8+56]
	033 Move X23, [X23+3696]
	034 Move X0, X20
	035 Move X1, X19
	036 Move X2, X31
	037 Call Delegate.Remove, X0, X1
	038 Move X21, X0
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, [X23]
	042 Move X8, [X21]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X22]
	050 Move X8, [X0+184]
	051 Move X1, X21
	052 Move X2, X20
	053 Add X0, X8, 56
	054 Call 0x1C25138
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C181E0

Method: System.Boolean Internal_ApplicationWantsToQuit()

Disassembly:
	0x03C03A88 MOV W1, W19
	0x03C03A8C LDP X20, X19, [X31 + 0x10]
	0x03C03A90 LDP X30, X21, [X31], #0x20
	0x03C03A94 BR X2
	0x03C03A98 STR X30, [X31 - 0x20]!
	0x03C03A9C STP X20, X19, [X31 + 0x10]
	0x03C03AA0 ADRP X20, 0x7E0000
	0x03C03AA4 LDR X1, [X20 + 0xFB0]
	0x03C03AA8 MOV X19, X0
	0x03C03AAC CBNZ X1, 0x3C03AC4
	0x03C03AB0 ADRP X0, 0xFFFFFFFFFCEF7000
	0x03C03AB4 ADD X0, X0, 0xF7D
	0x03C03AB8 BL 0x1C16CB8
	0x03C03ABC MOV X1, X0
	0x03C03AC0 STR X0, [X20 + 0xFB0]
	0x03C03AC4 MOV X0, X19
	0x03C03AC8 LDP X20, X19, [X31 + 0x10]
	0x03C03ACC LDR X30, [X31], #0x20
	0x03C03AD0 BR X1
	0x03C03AD4 STR X30, [X31 - 0x20]!
	0x03C03AD8 STP X20, X19, [X31 + 0x10]
	0x03C03ADC ADRP X20, 0x7E0000
	0x03C03AE0 LDR X1, [X20 + 0xFB8]
	0x03C03AE4 MOV X19, X0
	0x03C03AE8 CBNZ X1, 0x3C03B00
	0x03C03AEC ADRP X0, 0xFFFFFFFFFCF01000
	0x03C03AF0 ADD X0, X0, 0xF26
	0x03C03AF4 BL 0x1C16CB8
	0x03C03AF8 MOV X1, X0
	0x03C03AFC STR X0, [X20 + 0xFB8]
	0x03C03B00 MOV X0, X19
	0x03C03B04 LDP X20, X19, [X31 + 0x10]
	0x03C03B08 LDR X30, [X31], #0x20
	0x03C03B0C BR X1
	0x03C03B10 SUB X31, X31, 0x30
	0x03C03B14 STP X31, X30, [X31 + 0x8]
	0x03C03B18 STP X20, X19, [X31 + 0x20]
	0x03C03B1C ADRP X20, 0x7E1000
	0x03C03B20 LDR X8, [X20 + 0x90]
	0x03C03B24 MOV X19, X0
	0x03C03B28 STR X31, [X31]
	0x03C03B2C CBNZ X8, 0x3C03B44
	0x03C03B30 ADRP X0, 0xFFFFFFFFFCF27000
	0x03C03B34 ADD X0, X0, 0x554
	0x03C03B38 BL 0x1C16CB8
	0x03C03B3C MOV X8, X0
	0x03C03B40 STR X0, [X20 + 0x90]
	0x03C03B44 ADD X1, X31, 0x0
	0x03C03B48 MOV X0, X19
	0x03C03B4C BLR X8
	0x03C03B50 LDP S0, S1, [X31]
	0x03C03B54 LDP S2, S3, [X31 + 0x8]
	0x03C03B58 LDP X20, X19, [X31 + 0x20]
	0x03C03B5C LDR X30, [X31 + 0x10]
	0x03C03B60 ADD X31, X31, 0x30
	0x03C03B64 RET
	0x03C03B68 STP X30, X21, [X31 - 0x20]!
	0x03C03B6C STP X20, X19, [X31 + 0x10]
	0x03C03B70 ADRP X21, 0x7E1000
	0x03C03B74 LDR X2, [X21 + 0x90]
	0x03C03B78 MOV X19, X1
	0x03C03B7C MOV X20, X0
	0x03C03B80 CBNZ X2, 0x3C03B98
	0x03C03B84 ADRP X0, 0xFFFFFFFFFCF27000
	0x03C03B88 ADD X0, X0, 0x554
	0x03C03B8C BL 0x1C16CB8
	0x03C03B90 MOV X2, X0
	0x03C03B94 STR X0, [X21 + 0x90]
	0x03C03B98 MOV X0, X20
	0x03C03B9C MOV X1, X19
	0x03C03BA0 LDP X20, X19, [X31 + 0x10]
	0x03C03BA4 LDP X30, X21, [X31], #0x20
	0x03C03BA8 BR X2
	0x03C03BAC SUB X31, X31, 0x30
	0x03C03BB0 STR X30, [X31 + 0x10]
	0x03C03BB4 STP X20, X19, [X31 + 0x20]
	0x03C03BB8 ADRP X20, 0x7E1000
	0x03C03BBC LDR X8, [X20 + 0x98]
	0x03C03BC0 MOV X19, X0
	0x03C03BC4 STP S0, S1, [X31]
	0x03C03BC8 STP S2, S3, [X31 + 0x8]
	0x03C03BCC CBNZ X8, 0x3C03BE4
	0x03C03BD0 ADRP X0, 0xFFFFFFFFFCF01000
	0x03C03BD4 ADD X0, X0, 0xF68
	0x03C03BD8 BL 0x1C16CB8
	0x03C03BDC MOV X8, X0
	0x03C03BE0 STR X0, [X20 + 0x98]
	0x03C03BE4 ADD X1, X31, 0x0
	0x03C03BE8 MOV X0, X19
	0x03C03BEC BLR X8
	0x03C03BF0 LDP X20, X19, [X31 + 0x20]
	0x03C03BF4 LDR X30, [X31 + 0x10]
	0x03C03BF8 ADD X31, X31, 0x30
	0x03C03BFC RET
	0x03C03C00 STP X30, X21, [X31 - 0x20]!
	0x03C03C04 STP X20, X19, [X31 + 0x10]
	0x03C03C08 ADRP X21, 0x7E1000
	0x03C03C0C LDR X2, [X21 + 0x98]
	0x03C03C10 MOV X19, X1
	0x03C03C14 MOV X20, X0
	0x03C03C18 CBNZ X2, 0x3C03C30
	0x03C03C1C ADRP X0, 0xFFFFFFFFFCF01000
	0x03C03C20 ADD X0, X0, 0xF68
	0x03C03C24 BL 0x1C16CB8
	0x03C03C28 MOV X2, X0
	0x03C03C2C STR X0, [X21 + 0x98]
	0x03C03C30 MOV X0, X20
	0x03C03C34 MOV X1, X19
	0x03C03C38 LDP X20, X19, [X31 + 0x10]
	0x03C03C3C LDP X30, X21, [X31], #0x20
	0x03C03C40 BR X2
	0x03C03C44 STR X30, [X31 - 0x20]!
	0x03C03C48 STP X20, X19, [X31 + 0x10]
	0x03C03C4C ADRP X20, 0x7E0000
	0x03C03C50 LDR X1, [X20 + 0xFC0]
	0x03C03C54 MOV X19, X0
	0x03C03C58 CBNZ X1, 0x3C03C70
	0x03C03C5C ADRP X0, 0xFFFFFFFFFCEF2000
	0x03C03C60 ADD X0, X0, 0x86
	0x03C03C64 BL 0x1C16CB8
	0x03C03C68 MOV X1, X0
	0x03C03C6C STR X0, [X20 + 0xFC0]
	0x03C03C70 MOV X0, X19
	0x03C03C74 LDP X20, X19, [X31 + 0x10]
	0x03C03C78 LDR X30, [X31], #0x20
	0x03C03C7C BR X1
	0x03C03C80 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x7E1000
	012 Move X19, 0x4F1000
	013 Move W8, [X20+3851]
	014 Move X19, [X19+2416]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x4F1000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move X0, 0x4FA000
	023 Move X0, [X0+2368]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3851], W8
	027 Move X0, [X19]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X19]
	033 Move X8, [X0+184]
	034 Move X9, [X8+48]
	035 Compare X9, 0
	036 JumpIfEqual {115}
	037 Move W9, [X0+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {43}
	040 Call 0x1C17DFC
	041 Move X8, [X19]
	042 Move X8, [X8+184]
	043 Move X0, [X8+48]
	044 Compare X0, 0
	045 JumpIfEqual {132}
	046 Move X8, [X0]
	047 Move X9, [X8+472]
	048 Move X1, [X8+480]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare X0, 0
	051 JumpIfEqual {132}
	052 Move X8, [X0+24]
	053 Move X19, X0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CSET not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X26, 0x4FA000
	058 Move X20, 0x4F1000
	059 Move X21, 0x4F1000
	060 Move X26, [X26+2368]
	061 Move X20, [X20+2000]
	062 Move X21, [X21+2600]
	063 Move X24, X31
	064 And X8, X8, 0
	065 Add X25, X19, 32
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X22, [X25]
	068 Compare X22, 0
	069 JumpIfEqual {89}
	070 Move X23, [X26]
	071 Move X0, X22
	072 Move X1, X23
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfEqual {128}
	076 Move X1, [X0+40]
	077 Move X9, [X0+24]
	078 Move X8, [X0+64]
	079 Move X0, X8
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {114}
	085 Move W8, [X19+24]
	086 Add X24, X24, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSET not yet implemented."
	089 Call 0x1C17F20
	090 Move X22, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X22
	093 Call 0x3EB2AD0
	094 Move X22, X0
	095 Move X0, X20
	096 Call 0x1C17D08
	097 Move X8, [X22]
	098 Move X1, [X8]
	099 Call 0x1C18270
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {133}
	104 Move X22, [X22]
	105 Call 0x3EB2AE0
	106 Move X0, X21
	107 Call 0x1C17D08
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X22
	113 Call Debug.LogException, X0
	114 Xor W8, W27, 1
	115 Move W8, 1
	116 Move X20, [X31+64]
	117 Move X19, [X31+72]
	118 Move X22, [X31+48]
	119 Move X21, [X31+56]
	120 Move X24, [X31+32]
	121 Move X23, [X31+40]
	122 Move X26, [X31+16]
	123 Move X25, [X31+24]
	124 And W0, W8, 1
	125 Move X30, [X31+80]
	126 Move X27, [X31+88]
	127 Return X0
	128 Move X0, X22
	129 Move X1, X23
	130 Call 0x1C181E0
	131 Call 0x1C17F28
	132 Call 0x1C17F20
	133 Move W0, 8
	134 Call 0x3EB2AF0
	135 Move X8, [X22]
	136 Move [X0], X8
	137 Move X1, 0x2B2000
	138 Add X1, X1, 3672
	139 Move X2, X31
	140 Call 0x3EB2B00
	141 Move X22, X0
	142 Call 0x3EB2AE0
	143 Move X0, X22
	144 Call 0x1D2D690
	145 Call 0x1991590

Method: System.Void Internal_ApplicationInit()

Disassembly:
	0x03C03D8C LDP X22, X21, [X31 + 0x10]
	0x03C03D90 LDR X30, [X31], #0x30
	0x03C03D94 BR X3
	0x03C03D98 STR X30, [X31 - 0x20]!
	0x03C03D9C STP X20, X19, [X31 + 0x10]
	0x03C03DA0 ADRP X20, 0x7E0000
	0x03C03DA4 LDR X1, [X20 + 0xFE8]
	0x03C03DA8 MOV X19, X0
	0x03C03DAC CBNZ X1, 0x3C03DC4
	0x03C03DB0 ADRP X0, 0xFFFFFFFFFCEF5000
	0x03C03DB4 ADD X0, X0, 0xDEE
	0x03C03DB8 BL 0x1C16CB8
	0x03C03DBC MOV X1, X0
	0x03C03DC0 STR X0, [X20 + 0xFE8]
	0x03C03DC4 MOV X0, X19
	0x03C03DC8 LDP X20, X19, [X31 + 0x10]
	0x03C03DCC LDR X30, [X31], #0x20
	0x03C03DD0 BR X1
	0x03C03DD4 SUB X31, X31, 0x30
	0x03C03DD8 STP X31, X30, [X31 + 0x8]
	0x03C03DDC STP X20, X19, [X31 + 0x20]
	0x03C03DE0 ADRP X20, 0x7E1000
	0x03C03DE4 LDR X8, [X20 + 0xA0]
	0x03C03DE8 MOV X19, X0
	0x03C03DEC STR X31, [X31]
	0x03C03DF0 CBNZ X8, 0x3C03E08
	0x03C03DF4 ADRP X0, 0xFFFFFFFFFCEFA000
	0x03C03DF8 ADD X0, X0, 0xDD
	0x03C03DFC BL 0x1C16CB8
	0x03C03E00 MOV X8, X0
	0x03C03E04 STR X0, [X20 + 0xA0]
	0x03C03E08 ADD X1, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x7E1000
	006 Move X21, 0x4F3000
	007 Move X20, 0x4F1000
	008 Move W8, [X19+3852]
	009 Move X21, [X21+2640]
	010 Move X20, [X20+2416]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x4F1000
	016 Move X0, [X0+2416]
	017 Call 0x1C17CF4
	018 Move X0, 0x4F3000
	019 Move X0, [X0+2640]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3852], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call CancellationTokenSource..ctor, X0
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move [X8+72], X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 

Method: System.Void Internal_ApplicationQuit()

Disassembly:
	0x03C03E0C MOV X0, X19
	0x03C03E10 BLR X8
	0x03C03E14 LDP S0, S1, [X31]
	0x03C03E18 LDP S2, S3, [X31 + 0x8]
	0x03C03E1C LDP X20, X19, [X31 + 0x20]
	0x03C03E20 LDR X30, [X31 + 0x10]
	0x03C03E24 ADD X31, X31, 0x30
	0x03C03E28 RET
	0x03C03E2C STP X30, X21, [X31 - 0x20]!
	0x03C03E30 STP X20, X19, [X31 + 0x10]
	0x03C03E34 ADRP X21, 0x7E1000
	0x03C03E38 LDR X2, [X21 + 0xA0]
	0x03C03E3C MOV X19, X1
	0x03C03E40 MOV X20, X0
	0x03C03E44 CBNZ X2, 0x3C03E5C
	0x03C03E48 ADRP X0, 0xFFFFFFFFFCEFA000
	0x03C03E4C ADD X0, X0, 0xDD
	0x03C03E50 BL 0x1C16CB8
	0x03C03E54 MOV X2, X0
	0x03C03E58 STR X0, [X21 + 0xA0]
	0x03C03E5C MOV X0, X20
	0x03C03E60 MOV X1, X19
	0x03C03E64 LDP X20, X19, [X31 + 0x10]
	0x03C03E68 LDP X30, X21, [X31], #0x20
	0x03C03E6C BR X2
	0x03C03E70 SUB X31, X31, 0x30
	0x03C03E74 STR X30, [X31 + 0x10]
	0x03C03E78 STP X20, X19, [X31 + 0x20]
	0x03C03E7C ADRP X20, 0x7E1000
	0x03C03E80 LDR X8, [X20 + 0xA8]
	0x03C03E84 MOV X19, X0
	0x03C03E88 STP S0, S1, [X31]
	0x03C03E8C STP S2, S3, [X31 + 0x8]
	0x03C03E90 CBNZ X8, 0x3C03EA8
	0x03C03E94 ADRP X0, 0xFFFFFFFFFCF25000
	0x03C03E98 ADD X0, X0, 0x3C5
	0x03C03E9C BL 0x1C16CB8
	0x03C03EA0 MOV X8, X0
	0x03C03EA4 STR X0, [X20 + 0xA8]
	0x03C03EA8 ADD X1, X31, 0x0
	0x03C03EAC MOV X0, X19
	0x03C03EB0 BLR X8
	0x03C03EB4 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E1000
	005 Move X19, 0x4F1000
	006 Move W8, [X20+3853]
	007 Move X19, [X19+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4F1000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3853], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X0, [X8+72]
	025 Compare X0, 0
	026 JumpIfEqual {54}
	027 Move X1, X31
	028 Call CancellationTokenSource.Cancel, X0
	029 Move X0, [X19]
	030 Move X8, [X0+184]
	031 Move X9, [X8+56]
	032 Compare X9, 0
	033 JumpIfEqual {50}
	034 Move W9, [X0+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {40}
	037 Call 0x1C17DFC
	038 Move X8, [X19]
	039 Move X8, [X8+184]
	040 Move X8, [X8+56]
	041 Compare X8, 0
	042 JumpIfEqual {54}
	043 Move X2, [X8+24]
	044 Move X0, [X8+64]
	045 Move X1, [X8+40]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 CallNoReturn X2
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Return 
	054 Call 0x1C17F20

Method: System.Void Internal_ApplicationUnload()

Disassembly:
	0x03C03EB8 LDR X30, [X31 + 0x10]
	0x03C03EBC ADD X31, X31, 0x30
	0x03C03EC0 RET
	0x03C03EC4 STP X30, X21, [X31 - 0x20]!
	0x03C03EC8 STP X20, X19, [X31 + 0x10]
	0x03C03ECC ADRP X21, 0x7E1000
	0x03C03ED0 LDR X2, [X21 + 0xA8]
	0x03C03ED4 MOV X19, X1
	0x03C03ED8 MOV X20, X0
	0x03C03EDC CBNZ X2, 0x3C03EF4
	0x03C03EE0 ADRP X0, 0xFFFFFFFFFCF25000
	0x03C03EE4 ADD X0, X0, 0x3C5
	0x03C03EE8 BL 0x1C16CB8
	0x03C03EEC MOV X2, X0
	0x03C03EF0 STR X0, [X21 + 0xA8]
	0x03C03EF4 MOV X0, X20
	0x03C03EF8 MOV X1, X19
	0x03C03EFC LDP X20, X19, [X31 + 0x10]
	0x03C03F00 LDP X30, X21, [X31], #0x20
	0x03C03F04 BR X2
	0x03C03F08 SUB X31, X31, 0x30
	0x03C03F0C STP X31, X30, [X31 + 0x8]
	0x03C03F10 STP X20, X19, [X31 + 0x20]
	0x03C03F14 ADRP X20, 0x7E1000
	0x03C03F18 LDR X8, [X20 + 0xB0]
	0x03C03F1C MOV X19, X0
	0x03C03F20 STR X31, [X31]
	0x03C03F24 CBNZ X8, 0x3C03F3C
	0x03C03F28 ADRP X0, 0xFFFFFFFFFCF0D000
	0x03C03F2C ADD X0, X0, 0xDEA
	0x03C03F30 BL 0x1C16CB8
	0x03C03F34 MOV X8, X0
	0x03C03F38 STR X0, [X20 + 0xB0]
	0x03C03F3C ADD X1, X31, 0x0
	0x03C03F40 MOV X0, X19
	0x03C03F44 BLR X8
	0x03C03F48 LDP S0, S1, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7E1000
	005 Move X19, 0x4F1000
	006 Move W8, [X20+3854]
	007 Move X19, [X19+2416]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4F1000
	013 Move X0, [X0+2416]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3854], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X9, [X8+64]
	025 Compare X9, 0
	026 JumpIfEqual {43}
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {33}
	030 Call 0x1C17DFC
	031 Move X8, [X19]
	032 Move X8, [X8+184]
	033 Move X8, [X8+64]
	034 Compare X8, 0
	035 JumpIfEqual {47}
	036 Move X2, [X8+24]
	037 Move X0, [X8+64]
	038 Move X1, [X8+40]
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 CallNoReturn X2
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return 
	047 Call 0x1C17F20

Method: System.Void InvokeOnBeforeRender()

Disassembly:
	0x03C03F4C LDP S2, S3, [X31 + 0x8]
	0x03C03F50 LDP X20, X19, [X31 + 0x20]
	0x03C03F54 LDR X30, [X31 + 0x10]
	0x03C03F58 ADD X31, X31, 0x30
	0x03C03F5C RET
	0x03C03F60 STP X30, X21, [X31 - 0x20]!
	0x03C03F64 STP X20, X19, [X31 + 0x10]
	0x03C03F68 ADRP X21, 0x7E1000
	0x03C03F6C LDR X2, [X21 + 0xB0]
	0x03C03F70 MOV X19, X1
	0x03C03F74 MOV X20, X0
	0x03C03F78 CBNZ X2, 0x3C03F90
	0x03C03F7C ADRP X0, 0xFFFFFFFFFCF0D000
	0x03C03F80 ADD X0, X0, 0xDEA
	0x03C03F84 BL 0x1C16CB8
	0x03C03F88 MOV X2, X0
	0x03C03F8C STR X0, [X21 + 0xB0]
	0x03C03F90 MOV X0, X20
	0x03C03F94 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7E1000
	005 Move X20, 0x55C000
	006 Move W8, [X19+3855]
	007 Move X20, [X20+2784]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x55C000
	013 Move X0, [X0+2784]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3855], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]

Method: System.Void InvokeFocusChanged(System.Boolean focus)

Disassembly:
	0x03C04140 LDR X1, [X20 + 0x10]
	0x03C04144 MOV X19, X0
	0x03C04148 CBNZ X1, 0x3C04160
	0x03C0414C ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C04150 ADD X0, X0, 0x79
	0x03C04154 BL 0x1C16CB8
	0x03C04158 MOV X1, X0
	0x03C0415C STR X0, [X20 + 0x10]
	0x03C04160 MOV X0, X19
	0x03C04164 LDP X20, X19, [X31 + 0x10]
	0x03C04168 LDR X30, [X31], #0x20
	0x03C0416C BR X1
	0x03C04170 SUB X31, X31, 0x60
	0x03C04174 STP X30, X21, [X31 + 0x40]
	0x03C04178 STP X20, X19, [X31 + 0x50]
	0x03C0417C ADRP X21, 0x7E0000
	0x03C04180 MOV X19, X8
	0x03C04184 LDR X8, [X21 + 0xC0]
	0x03C04188 MOV X20, X0
	0x03C0418C MOVI V0.2D, 0x0
	0x03C04190 STP V0, V0, [X31 + 0x20]
	0x03C04194 STP V0, V0, [X31]
	0x03C04198 CBNZ X8, 0x3C041B0
	0x03C0419C ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C041A0 ADD X0, X0, 0xE28
	0x03C041A4 BL 0x1C16CB8
	0x03C041A8 MOV X8, X0
	0x03C041AC STR X0, [X21 + 0xC0]
	0x03C041B0 ADD X1, X31, 0x0
	0x03C041B4 MOV X0, X20
	0x03C041B8 BLR X8
	0x03C041BC LDP V1, V0, [X31 + 0x20]
	0x03C041C0 LDP V3, V2, [X31]
	0x03C041C4 LDP X30, X21, [X31 + 0x40]
	0x03C041C8 STP V1, V0, [X19 + 0x20]
	0x03C041CC STP V3, V2, [X19]
	0x03C041D0 LDP X20, X19, [X31 + 0x50]
	0x03C041D4 ADD X31, X31, 0x60
	0x03C041D8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X20, 0x4F0000
	007 Move W8, [X21+3856]
	008 Move X20, [X20+2416]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4F0000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3856], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X9, [X8+32]
	027 Compare X9, 0
	028 JumpIfEqual {47}
	029 Move W9, [X0+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {35}
	032 Call 0x1C17DFC
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move X8, [X8+32]
	036 Compare X8, 0
	037 JumpIfEqual {52}
	038 Move X3, [X8+24]
	039 Move X0, [X8+64]
	040 Move X2, [X8+40]
	041 And W1, W19, 1
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 CallNoReturn X3
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Call 0x1C17F20

Method: System.Void InvokeDeepLinkActivated(System.String url)

Disassembly:
	0x03C041DC STP X30, X21, [X31 - 0x20]!
	0x03C041E0 STP X20, X19, [X31 + 0x10]
	0x03C041E4 ADRP X21, 0x7E0000
	0x03C041E8 LDR X2, [X21 + 0xC0]
	0x03C041EC MOV X19, X1
	0x03C041F0 MOV X20, X0
	0x03C041F4 CBNZ X2, 0x3C0420C
	0x03C041F8 ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C041FC ADD X0, X0, 0xE28
	0x03C04200 BL 0x1C16CB8
	0x03C04204 MOV X2, X0
	0x03C04208 STR X0, [X21 + 0xC0]
	0x03C0420C MOV X0, X20
	0x03C04210 MOV X1, X19
	0x03C04214 LDP X20, X19, [X31 + 0x10]
	0x03C04218 LDP X30, X21, [X31], #0x20
	0x03C0421C BR X2
	0x03C04220 SUB X31, X31, 0x60
	0x03C04224 STP X30, X21, [X31 + 0x40]
	0x03C04228 STP X20, X19, [X31 + 0x50]
	0x03C0422C ADRP X21, 0x7E0000
	0x03C04230 MOV X19, X8
	0x03C04234 LDR X8, [X21 + 0xC8]
	0x03C04238 MOV X20, X0
	0x03C0423C MOVI V0.2D, 0x0
	0x03C04240 STP V0, V0, [X31 + 0x20]
	0x03C04244 STP V0, V0, [X31]
	0x03C04248 CBNZ X8, 0x3C04260
	0x03C0424C ADRP X0, 0xFFFFFFFFFCF12000
	0x03C04250 ADD X0, X0, 0x48A
	0x03C04254 BL 0x1C16CB8
	0x03C04258 MOV X8, X0
	0x03C0425C STR X0, [X21 + 0xC8]
	0x03C04260 ADD X1, X31, 0x0
	0x03C04264 MOV X0, X20
	0x03C04268 BLR X8
	0x03C0426C LDP V1, V0, [X31 + 0x20]
	0x03C04270 LDP V3, V2, [X31]
	0x03C04274 LDP X30, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E0000
	006 Move X20, 0x4F0000
	007 Move W8, [X21+3857]
	008 Move X20, [X20+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4F0000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3857], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X9, [X8+40]
	027 Compare X9, 0
	028 JumpIfEqual {47}
	029 Move W9, [X0+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {35}
	032 Call 0x1C17DFC
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move X8, [X8+40]
	036 Compare X8, 0
	037 JumpIfEqual {52}
	038 Move X3, [X8+24]
	039 Move X0, [X8+64]
	040 Move X2, [X8+40]
	041 Move X1, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 CallNoReturn X3
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Call 0x1C17F20

Method: System.Boolean get_isEditor()

Disassembly:
	0x03C04278 STP V1, V0, [X19 + 0x20]
	0x03C0427C STP V3, V2, [X19]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03C04280 LDP X20, X19, [X31 + 0x50]
	0x03C04284 ADD X31, X31, 0x60
	0x03C04288 RET
	0x03C0428C STP X30, X21, [X31 - 0x20]!
	0x03C04290 STP X20, X19, [X31 + 0x10]
	0x03C04294 ADRP X21, 0x7E0000
	0x03C04298 LDR X2, [X21 + 0xC8]
	0x03C0429C MOV X19, X1
	0x03C042A0 MOV X20, X0
	0x03C042A4 CBNZ X2, 0x3C042BC
	0x03C042A8 ADRP X0, 0xFFFFFFFFFCF12000
	0x03C042AC ADD X0, X0, 0x48A
	0x03C042B0 BL 0x1C16CB8
	0x03C042B4 MOV X2, X0
	0x03C042B8 STR X0, [X21 + 0xC8]
	0x03C042BC MOV X0, X20
	0x03C042C0 MOV X1, X19
	0x03C042C4 LDP X20, X19, [X31 + 0x10]
	0x03C042C8 LDP X30, X21, [X31], #0x20
	0x03C042CC BR X2
	0x03C042D0 STP X30, X21, [X31 - 0x20]!
	0x03C042D4 STP X20, X19, [X31 + 0x10]
	0x03C042D8 ADRP X21, 0x7E0000
	0x03C042DC LDR X2, [X21 + 0xD0]
	0x03C042E0 MOV X19, X1
	0x03C042E4 MOV X20, X0
	0x03C042E8 CBNZ X2, 0x3C04300
	0x03C042EC ADRP X0, 0xFFFFFFFFFCF14000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x7E0000
	006 Move X21, 0x4F2000
	007 Move X20, 0x4F0000
	008 Move W8, [X19+3858]
	009 Move X21, [X21+2640]
	010 Move X20, [X20+2416]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x4F0000
	016 Move X0, [X0+2416]
	017 Call 0x1C17CF4
	018 Move X0, 0x4F2000
	019 Move X0, [X0+2640]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3858], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call CancellationTokenSource..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8+72], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

