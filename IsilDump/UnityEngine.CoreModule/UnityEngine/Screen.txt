Type: UnityEngine.Screen

Method: System.Int32 get_width()

Disassembly:
	0x03C0F0B0 ADRP X8, 0x4E4000
	0x03C0F0B4 LDR X8, [X8 + 0x598]
	0x03C0F0B8 LDR X0, [X8]
	0x03C0F0BC LDR W8, [X0 + 0xE0]
	0x03C0F0C0 CBNZ W8, 0x3C0F0C8
	0x03C0F0C4 BL 0x1C16DFC
	0x03C0F0C8 MOV X0, X26
	0x03C0F0CC MOV X1, X31
	0x03C0F0D0 MOV X2, X31
	0x03C0F0D4 BL 0x3C3883C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D6000
	004 Move X0, [X19+800]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51494912
	008 Add X0, X0, 3734
	009 Call 0x1C17CB8
	010 Move [X19+800], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Int32 get_height()

Disassembly:
	0x03C0F0D8 TBNZ X0, 0x0, 0x3C0F174
	0x03C0F0DC ADRP X8, 0x4E8000
	0x03C0F0E0 LDR X8, [X8 + 0x2C8]
	0x03C0F0E4 LDP V0, V1, [X27 + 0x20]
	0x03C0F0E8 LDP V2, V3, [X27]
	0x03C0F0EC LDR X29, [X31 + 0x118]
	0x03C0F0F0 LDR X0, [X8]
	0x03C0F0F4 STP V0, V1, [X31 + 0x90]
	0x03C0F0F8 STP V2, V3, [X31 + 0x70]
	0x03C0F0FC LDRB W27, [X31 + 0x110]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D6000
	004 Move X0, [X19+808]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51257344
	008 Add X0, X0, 1712
	009 Call 0x1C17CB8
	010 Move [X19+808], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Single get_dpi()

Disassembly:
	0x03C0F100 LDR W8, [X0 + 0xE0]
	0x03C0F104 CBNZ W8, 0x3C0F10C
	0x03C0F108 BL 0x1C16DFC
	0x03C0F10C LDP V0, V1, [X31 + 0x70]
	0x03C0F110 LDP V2, V3, [X31 + 0x90]
	0x03C0F114 AND W8, W27, 0x1
	0x03C0F118 ADD X2, X31, 0x30
	0x03C0F11C MOV X0, X25
	0x03C0F120 MOV W1, W22
	0x03C0F124 MOV X3, X24

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D6000
	004 Move X0, [X19+816]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51372032
	008 Add X0, X0, 3815
	009 Call 0x1C17CB8
	010 Move [X19+816], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.ScreenOrientation GetScreenOrientation()

Disassembly:
	0x03C0F128 MOV W4, W23
	0x03C0F12C MOV X5, X21
	0x03C0F130 MOV X6, X20
	0x03C0F134 MOV W7, W19
	0x03C0F138 STP V0, V1, [X31 + 0x30]
	0x03C0F13C STP V2, V3, [X31 + 0x50]
	0x03C0F140 STR X26, [X31 + 0x18]
	0x03C0F144 STR W28, [X31 + 0x10]
	0x03C0F148 STR X29, [X31 + 0x8]
	0x03C0F14C STRB W8, [X31]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D6000
	004 Move X0, [X19+824]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51281920
	008 Add X0, X0, 2896
	009 Call 0x1C17CB8
	010 Move [X19+824], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.ScreenOrientation get_orientation()

Disassembly:
	0x03C0F150 BL 0x3C0E720
	0x03C0F154 LDP X20, X19, [X31 + 0x100]
	0x03C0F158 LDP X22, X21, [X31 + 0xF0]
	0x03C0F15C LDP X24, X23, [X31 + 0xE0]
	0x03C0F160 LDP X26, X25, [X31 + 0xD0]
	0x03C0F164 LDP X28, X27, [X31 + 0xC0]
	0x03C0F168 LDP X29, X30, [X31 + 0xB0]
	0x03C0F16C ADD X31, X31, 0x110
	0x03C0F170 RET
	0x03C0F174 ADRP X0, 0x4EC000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D6000
	004 Move X0, [X19+824]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51281920
	008 Add X0, X0, 2896
	009 Call 0x1C17CB8
	010 Move [X19+824], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean get_fullScreen()

Disassembly:
	0x03C0F178 LDR X0, [X0 + 0x578]
	0x03C0F17C BL 0x1C16D08
	0x03C0F180 BL 0x1C16F10
	0x03C0F184 MOV X19, X0
	0x03C0F188 ADRP X0, 0x54F000
	0x03C0F18C LDR X0, [X0 + 0xCF8]
	0x03C0F190 BL 0x1C16D08
	0x03C0F194 MOV X20, X0
	0x03C0F198 ADRP X0, 0x54F000
	0x03C0F19C LDR X0, [X0 + 0xD00]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D6000
	004 Move X0, [X19+832]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51339264
	008 Add X0, X0, 1809
	009 Call 0x1C17CB8
	010 Move [X19+832], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Rect get_safeArea()

Disassembly:
	0x03C0F1A0 BL 0x1C16D08
	0x03C0F1A4 MOV X2, X0
	0x03C0F1A8 MOV X0, X19
	0x03C0F1AC MOV X1, X20
	0x03C0F1B0 MOV X3, X31
	0x03C0F1B4 BL 0x330E16C
	0x03C0F1B8 ADRP X0, 0x54F000
	0x03C0F1BC LDR X0, [X0 + 0xD08]
	0x03C0F1C0 BL 0x1C16D08
	0x03C0F1C4 MOV X1, X0
	0x03C0F1C8 MOV X0, X19
	0x03C0F1CC BL 0x1C16DEC
	0x03C0F1D0 SUB X31, X31, 0x80
	0x03C0F1D4 STP X29, X30, [X31 + 0x20]
	0x03C0F1D8 STP X28, X27, [X31 + 0x30]
	0x03C0F1DC STP X26, X25, [X31 + 0x40]
	0x03C0F1E0 STP X24, X23, [X31 + 0x50]
	0x03C0F1E4 STP X22, X21, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D6000
	005 Move X8, [X19+840]
	006 Move [X31], X31
	007 Move [X31+8], X31
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51281920
	011 Add X0, X0, 2939
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X19+840], X0
	015 Add X0, X31, 0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move S0, [X31]
	018 Move S1, [X31+4]
	019 Move S2, [X31+8]
	020 Move S3, [X31+12]
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Add X31, X31, 32
	024 Return X0

Method: System.Void get_safeArea_Injected(out UnityEngine.Rect ret)

Disassembly:
	0x03C0F1E8 STP X20, X19, [X31 + 0x70]
	0x03C0F1EC ADRP X21, 0x7D5000
	0x03C0F1F0 LDR X26, [X31 + 0x98]
	0x03C0F1F4 LDR W28, [X31 + 0x90]
	0x03C0F1F8 LDR X29, [X31 + 0x88]
	0x03C0F1FC LDRB W8, [X21 + 0x3DF]
	0x03C0F200 LDR W20, [X31 + 0x80]
	0x03C0F204 MOV W22, W4
	0x03C0F208 MOV X19, X3
	0x03C0F20C MOV X24, X2
	0x03C0F210 MOV W25, W1
	0x03C0F214 MOV X27, X0
	0x03C0F218 STR W7, [X31 + 0xC]
	0x03C0F21C STR W6, [X31 + 0x18]
	0x03C0F220 STR X5, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D6000
	005 Move X1, [X20+840]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51281920
	010 Add X0, X0, 2939
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+840], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

