Type: UnityEngine.GL

Method: System.Void Vertex3(System.Single x, System.Single y, System.Single z)

Disassembly:
	0x03C10D38 ADRP X21, 0x540000
	0x03C10D3C LDRB W8, [X22 + 0x4CC]
	0x03C10D40 LDR X21, [X21 + 0x570]
	0x03C10D44 MOV W19, W1
	0x03C10D48 MOV X20, X0
	0x03C10D4C TBNZ X8, 0x0, 0x3C10D64
	0x03C10D50 ADRP X0, 0x540000
	0x03C10D54 LDR X0, [X0 + 0x570]
	0x03C10D58 BL 0x1C16CF4
	0x03C10D5C MOVZ W8, 0x1
	0x03C10D60 STRB W8, [X22 + 0x4CC]
	0x03C10D64 LDR X0, [X21]
	0x03C10D68 LDR W20, [X20 + 0x10]
	0x03C10D6C LDR W8, [X0 + 0xE0]
	0x03C10D70 CBNZ W8, 0x3C10D78
	0x03C10D74 BL 0x1C16DFC
	0x03C10D78 ADRP X21, 0x7D4000
	0x03C10D7C LDR X2, [X21 + 0x510]
	0x03C10D80 CBNZ X2, 0x3C10D98
	0x03C10D84 ADRP X0, 0xFFFFFFFFFCF00000

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X19, 0x7D5000
	007 Move X0, [X19+1040]
	008 Move V8, V2
	009 Move V9, V1
	010 Move V10, V0
	011 Compare X0, 0
	012 JumpIfNotEqual {17}
	013 Move X0, -51302400
	014 Add X0, X0, 3367
	015 Call 0x1C17CB8
	016 Move [X19+1040], X0
	017 Move V1, V9
	018 Move V2, V8
	019 Move X30, [X31+32]
	020 Move X19, [X31+40]
	021 Move D9, [X31+16]
	022 Move D8, [X31+24]
	023 Move V0, V10
	024 Move V10, [X31+48]
	025 CallNoReturn X0

Method: System.Void Vertex(UnityEngine.Vector3 v)

Disassembly:
	0x03C10D88 ADD X0, X0, 0xF42
	0x03C10D8C BL 0x1C16CB8
	0x03C10D90 MOV X2, X0
	0x03C10D94 STR X0, [X21 + 0x510]
	0x03C10D98 AND W1, W19, 0x1
	0x03C10D9C MOV W0, W20
	0x03C10DA0 LDP X20, X19, [X31 + 0x20]
	0x03C10DA4 LDP X22, X21, [X31 + 0x10]
	0x03C10DA8 LDR X30, [X31], #0x30
	0x03C10DAC BR X2
	0x03C10DB0 STP X30, X21, [X31 - 0x20]!
	0x03C10DB4 STP X20, X19, [X31 + 0x10]
	0x03C10DB8 ADRP X21, 0x7D4000
	0x03C10DBC LDR X2, [X21 + 0x510]
	0x03C10DC0 MOV W19, W1
	0x03C10DC4 MOV W20, W0
	0x03C10DC8 CBNZ X2, 0x3C10DE0
	0x03C10DCC ADRP X0, 0xFFFFFFFFFCF00000
	0x03C10DD0 ADD X0, X0, 0xF42
	0x03C10DD4 BL 0x1C16CB8

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X19, 0x7D5000
	007 Move X0, [X19+1040]
	008 Move V8, V2
	009 Move V9, V1
	010 Move V10, V0
	011 Compare X0, 0
	012 JumpIfNotEqual {17}
	013 Move X0, -51302400
	014 Add X0, X0, 3367
	015 Call 0x1C17CB8
	016 Move [X19+1040], X0
	017 Move V1, V9
	018 Move V2, V8
	019 Move X30, [X31+32]
	020 Move X19, [X31+40]
	021 Move D9, [X31+16]
	022 Move D8, [X31+24]
	023 Move V0, V10
	024 Move V10, [X31+48]
	025 CallNoReturn X0

Method: System.Void TexCoord3(System.Single x, System.Single y, System.Single z)

Disassembly:
	0x03C10DD8 MOV X2, X0
	0x03C10DDC STR X0, [X21 + 0x510]
	0x03C10DE0 AND W1, W19, 0x1
	0x03C10DE4 MOV W0, W20
	0x03C10DE8 LDP X20, X19, [X31 + 0x10]
	0x03C10DEC LDP X30, X21, [X31], #0x20
	0x03C10DF0 BR X2
	0x03C10DF4 STP X30, X21, [X31 - 0x20]!
	0x03C10DF8 STP X20, X19, [X31 + 0x10]
	0x03C10DFC ADRP X19, 0x7D4000
	0x03C10E00 ADRP X20, 0x54E000
	0x03C10E04 ADRP X21, 0x540000
	0x03C10E08 LDRB W8, [X19 + 0x518]
	0x03C10E0C LDR X20, [X20 + 0xD68]
	0x03C10E10 LDR X21, [X21 + 0x570]
	0x03C10E14 TBNZ X8, 0x0, 0x3C10E38
	0x03C10E18 ADRP X0, 0x54E000
	0x03C10E1C LDR X0, [X0 + 0xD68]
	0x03C10E20 BL 0x1C16CF4
	0x03C10E24 ADRP X0, 0x540000

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X19, 0x7D5000
	007 Move X0, [X19+1048]
	008 Move V8, V2
	009 Move V9, V1
	010 Move V10, V0
	011 Compare X0, 0
	012 JumpIfNotEqual {17}
	013 Move X0, -51449856
	014 Add X0, X0, 3904
	015 Call 0x1C17CB8
	016 Move [X19+1048], X0
	017 Move V1, V9
	018 Move V2, V8
	019 Move X30, [X31+32]
	020 Move X19, [X31+40]
	021 Move D9, [X31+16]
	022 Move D8, [X31+24]
	023 Move V0, V10
	024 Move V10, [X31+48]
	025 CallNoReturn X0

Method: System.Void TexCoord2(System.Single x, System.Single y)

Disassembly:
	0x03C10E28 LDR X0, [X0 + 0x570]
	0x03C10E2C BL 0x1C16CF4
	0x03C10E30 MOVZ W8, 0x1
	0x03C10E34 STRB W8, [X19 + 0x518]
	0x03C10E38 LDR X0, [X20]
	0x03C10E3C MOVZ W1, 0x1
	0x03C10E40 BL 0x1C16D6C
	0x03C10E44 LDR X8, [X21]
	0x03C10E48 MOV X19, X0
	0x03C10E4C MOV X0, X8
	0x03C10E50 BL 0x1C16F10
	0x03C10E54 MOV X1, X31
	0x03C10E58 MOV X20, X0
	0x03C10E5C BL 0x33BDD8C
	0x03C10E60 STR W31, [X20 + 0x10]
	0x03C10E64 CBZ X19, 0x3C10EC0
	0x03C10E68 LDR X8, [X19]

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move X19, 0x7D5000
	006 Move X0, [X19+1048]
	007 Move V8, V1
	008 Move V9, V0
	009 Compare X0, 0
	010 JumpIfNotEqual {15}
	011 Move X0, -51449856
	012 Add X0, X0, 3904
	013 Call 0x1C17CB8
	014 Move [X19+1048], X0
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Move S2, W31
	018 Move V0, V9
	019 Move V1, V8
	020 Move D9, [X31+32]
	021 Move D8, [X31+40]
	022 CallNoReturn X0

Method: System.Void ImmediateColor(System.Single r, System.Single g, System.Single b, System.Single a)

Disassembly:
	0x03C10E6C MOV X0, X20
	0x03C10E70 LDR X1, [X8 + 0x40]
	0x03C10E74 BL 0x1C16E00
	0x03C10E78 CBZ X0, 0x3C10EC8
	0x03C10E7C LDR W8, [X19 + 0x18]
	0x03C10E80 CBZ W8, 0x3C10EC4
	0x03C10E84 STR X20, [X19 + 0x20]
	0x03C10E88 LDR X8, [X21]
	0x03C10E8C LDR X8, [X8 + 0xB8]
	0x03C10E90 STR X19, [X8]
	0x03C10E94 LDR X8, [X21]
	0x03C10E98 LDR X8, [X8 + 0xB8]
	0x03C10E9C LDR X9, [X8]
	0x03C10EA0 CBZ X9, 0x3C10EC0
	0x03C10EA4 LDR W10, [X9 + 0x18]
	0x03C10EA8 CBZ W10, 0x3C10EC4
	0x03C10EAC LDR X9, [X9 + 0x20]
	0x03C10EB0 LDP X20, X19, [X31 + 0x10]
	0x03C10EB4 STR X9, [X8 + 0x8]
	0x03C10EB8 LDP X30, X21, [X31], #0x20
	0x03C10EBC RET
	0x03C10EC0 BL 0x1C16F20

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move X19, 0x7D5000
	008 Move X0, [X19+1056]
	009 Move V8, V3
	010 Move V9, V2
	011 Move V10, V1
	012 Move V11, V0
	013 Compare X0, 0
	014 JumpIfNotEqual {19}
	015 Move X0, -51351552
	016 Add X0, X0, 1727
	017 Call 0x1C17CB8
	018 Move [X19+1056], X0
	019 Move V2, V9
	020 Move V3, V8
	021 Move X30, [X31+32]
	022 Move X19, [X31+40]
	023 Move D9, [X31+16]
	024 Move D8, [X31+24]
	025 Move V0, V11
	026 Move V1, V10
	027 Move D11, [X31+48]
	028 Move D10, [X31+56]
	029 CallNoReturn X0

Method: System.Void Color(UnityEngine.Color c)

Disassembly:
	0x03C10EC4 BL 0x1C16F28
	0x03C10EC8 BL 0x1C16F44
	0x03C10ECC MOV X1, X31
	0x03C10ED0 BL 0x1C16DEC
	0x03C10ED4 STR X30, [X31 - 0x20]!
	0x03C10ED8 STP X20, X19, [X31 + 0x10]
	0x03C10EDC ADRP X20, 0x7D4000
	0x03C10EE0 LDR X1, [X20 + 0x520]
	0x03C10EE4 MOV W19, W0
	0x03C10EE8 CBNZ X1, 0x3C10F00
	0x03C10EEC ADRP X0, 0xFFFFFFFFFCF1A000
	0x03C10EF0 ADD X0, X0, 0x633
	0x03C10EF4 BL 0x1C16CB8
	0x03C10EF8 MOV X1, X0
	0x03C10EFC STR X0, [X20 + 0x520]
	0x03C10F00 MOV W0, W19
	0x03C10F04 LDP X20, X19, [X31 + 0x10]
	0x03C10F08 LDR X30, [X31], #0x20
	0x03C10F0C BR X1
	0x03C10F10 STR X30, [X31 - 0x20]!
	0x03C10F14 STP X20, X19, [X31 + 0x10]
	0x03C10F18 ADRP X20, 0x7D4000

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move X19, 0x7D5000
	008 Move X0, [X19+1056]
	009 Move V8, V3
	010 Move V9, V2
	011 Move V10, V1
	012 Move V11, V0
	013 Compare X0, 0
	014 JumpIfNotEqual {19}
	015 Move X0, -51351552
	016 Add X0, X0, 1727
	017 Call 0x1C17CB8
	018 Move [X19+1056], X0
	019 Move V2, V9
	020 Move V3, V8
	021 Move X30, [X31+32]
	022 Move X19, [X31+40]
	023 Move D9, [X31+16]
	024 Move D8, [X31+24]
	025 Move V0, V11
	026 Move V1, V10
	027 Move D11, [X31+48]
	028 Move D10, [X31+56]
	029 CallNoReturn X0

Method: System.Boolean get_wireframe()

Disassembly:
	0x03C10F1C LDR X1, [X20 + 0x528]
	0x03C10F20 MOV W19, W0
	0x03C10F24 CBNZ X1, 0x3C10F3C
	0x03C10F28 ADRP X0, 0xFFFFFFFFFCF04000
	0x03C10F2C ADD X0, X0, 0x7C7
	0x03C10F30 BL 0x1C16CB8
	0x03C10F34 MOV X1, X0
	0x03C10F38 STR X0, [X20 + 0x528]
	0x03C10F3C MOV W0, W19
	0x03C10F40 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D5000
	004 Move X0, [X19+1064]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51433472
	008 Add X0, X0, 3404
	009 Call 0x1C17CB8
	010 Move [X19+1064], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_wireframe(System.Boolean value)

Disassembly:
	0x03C10F44 LDR X30, [X31], #0x20
	0x03C10F48 BR X1
	0x03C10F4C STR X30, [X31 - 0x20]!
	0x03C10F50 STP X20, X19, [X31 + 0x10]
	0x03C10F54 ADRP X20, 0x7D4000
	0x03C10F58 LDR X1, [X20 + 0x530]
	0x03C10F5C MOV W19, W0
	0x03C10F60 CBNZ X1, 0x3C10F78
	0x03C10F64 ADRP X0, 0xFFFFFFFFFCF0E000
	0x03C10F68 ADD X0, X0, 0x9AD
	0x03C10F6C BL 0x1C16CB8
	0x03C10F70 MOV X1, X0
	0x03C10F74 STR X0, [X20 + 0x530]
	0x03C10F78 MOV W0, W19
	0x03C10F7C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D5000
	005 Move X1, [X20+1072]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51335168
	010 Add X0, X0, 2370
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1072], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetViewMatrix(UnityEngine.Matrix4x4 m)

Disassembly:
	0x03C10F80 LDR X30, [X31], #0x20
	0x03C10F84 BR X1
	0x03C10F88 SUB X31, X31, 0x40
	0x03C10F8C STR X30, [X31 + 0x10]
	0x03C10F90 STP X22, X21, [X31 + 0x20]
	0x03C10F94 STP X20, X19, [X31 + 0x30]
	0x03C10F98 ADRP X20, 0x7D4000
	0x03C10F9C ADRP X21, 0x4E3000
	0x03C10FA0 ADRP X22, 0x4E3000
	0x03C10FA4 LDRB W8, [X20 + 0x538]
	0x03C10FA8 LDR X21, [X21 + 0x9D0]
	0x03C10FAC LDR X22, [X22 + 0x758]
	0x03C10FB0 MOV X19, X0
	0x03C10FB4 TBNZ X8, 0x0, 0x3C10FF0
	0x03C10FB8 ADRP X0, 0x4E3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D5000
	005 Move X1, [X20+1136]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51318784
	010 Add X0, X0, 2304
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1136], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_modelview(UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C10FF8 BL 0x1C16D6C
	0x03C10FFC MOV X20, X0
	0x03C11000 LDR W8, [X19]
	0x03C11004 LDR X0, [X22]
	0x03C11008 ADD X1, X31, 0x1C
	0x03C1100C STR W8, [X31 + 0x1C]
	0x03C11010 BL 0x1C16E04
	0x03C11014 CBZ X20, 0x3C11104
	0x03C11018 MOV X21, X0
	0x03C1101C CBZ X0, 0x3C11034
	0x03C11020 LDR X8, [X20]
	0x03C11024 MOV X0, X21
	0x03C11028 LDR X1, [X8 + 0x40]
	0x03C1102C BL 0x1C16E00
	0x03C11030 CBZ X0, 0x3C110F8
	0x03C11034 LDR W8, [X20 + 0x18]
	0x03C11038 CBZ W8, 0x3C110F4
	0x03C1103C STR X21, [X20 + 0x20]
	0x03C11040 LDR W8, [X19 + 0x4]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move [X31+72], X19
	004 Move X19, 0x7D4000
	005 Move V0, [X0+32]
	006 Move V1, [X0+48]
	007 Move V2, [X0]
	008 Move V3, [X0+16]
	009 Move X8, [X19+1136]
	010 Move [X31+32], V0
	011 Move [X31+40], V1
	012 Move [X31], V2
	013 Move [X31+8], V3
	014 Compare X8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, -51322880
	017 Add X0, X0, 2304
	018 Call 0x1C17CB8
	019 Move X8, X0
	020 Move [X19+1136], X0
	021 Add X0, X31, 0
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X30, [X31+64]
	024 Move X19, [X31+72]
	025 Add X31, X31, 80
	026 Return 

Method: System.Void PushMatrix()

Disassembly:
	0x03C11044 LDR X0, [X22]
	0x03C11048 ADD X1, X31, 0x18
	0x03C1104C STR W8, [X31 + 0x18]
	0x03C11050 BL 0x1C16E04
	0x03C11054 MOV X21, X0
	0x03C11058 CBZ X0, 0x3C11070
	0x03C1105C LDR X8, [X20]
	0x03C11060 MOV X0, X21
	0x03C11064 LDR X1, [X8 + 0x40]
	0x03C11068 BL 0x1C16E00

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D4000
	004 Move X0, [X19+1080]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51273728
	008 Add X0, X0, 1433
	009 Call 0x1C17CB8
	010 Move [X19+1080], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void PopMatrix()

Disassembly:
	0x03C1106C CBZ X0, 0x3C110F8
	0x03C11070 LDR W8, [X20 + 0x18]
	0x03C11074 CMP W8, 0x1
	0x03C11078 B.LS 0x3C110F4
	0x03C1107C ADRP X8, 0x54D000
	0x03C11080 LDR X8, [X8 + 0xD70]
	0x03C11084 STR X21, [X20 + 0x28]
	0x03C11088 LDR X9, [X19 + 0x8]
	0x03C1108C ADD X1, X31, 0x8
	0x03C11090 LDR X0, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D4000
	004 Move X0, [X19+1088]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51273728
	008 Add X0, X0, 1462
	009 Call 0x1C17CB8
	010 Move [X19+1088], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void LoadOrtho()

Disassembly:
	0x03C11094 STR X9, [X31 + 0x8]
	0x03C11098 BL 0x1C16E04
	0x03C1109C MOV X19, X0
	0x03C110A0 CBZ X0, 0x3C110B8
	0x03C110A4 LDR X8, [X20]
	0x03C110A8 MOV X0, X19
	0x03C110AC LDR X1, [X8 + 0x40]
	0x03C110B0 BL 0x1C16E00
	0x03C110B4 CBZ X0, 0x3C110F8
	0x03C110B8 LDR W8, [X20 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D4000
	004 Move X0, [X19+1096]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51437568
	008 Add X0, X0, 3436
	009 Call 0x1C17CB8
	010 Move [X19+1096], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void LoadPixelMatrix()

Disassembly:
	0x03C110BC CMP W8, 0x2
	0x03C110C0 B.LS 0x3C110F4
	0x03C110C4 ADRP X8, 0x54D000
	0x03C110C8 LDR X8, [X8 + 0xD78]
	0x03C110CC STR X19, [X20 + 0x30]
	0x03C110D0 MOV X1, X20
	0x03C110D4 MOV X2, X31
	0x03C110D8 LDR X0, [X8]
	0x03C110DC BL 0x3C96574
	0x03C110E0 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D4000
	004 Move X0, [X19+1104]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51490816
	008 Add X0, X0, 359
	009 Call 0x1C17CB8
	010 Move [X19+1104], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void LoadProjectionMatrix(UnityEngine.Matrix4x4 mat)

Disassembly:
	0x03C110E4 LDP X22, X21, [X31 + 0x20]
	0x03C110E8 LDR X30, [X31 + 0x10]
	0x03C110EC ADD X31, X31, 0x40
	0x03C110F0 RET
	0x03C110F4 BL 0x1C16F28
	0x03C110F8 BL 0x1C16F44
	0x03C110FC MOV X1, X31
	0x03C11100 BL 0x1C16DEC
	0x03C11104 BL 0x1C16F20
	0x03C11108 STR X30, [X31 - 0x30]!
	0x03C1110C STP X22, X21, [X31 + 0x10]
	0x03C11110 STP X20, X19, [X31 + 0x20]
	0x03C11114 ADRP X21, 0x7D3000
	0x03C11118 ADRP X22, 0x54D000
	0x03C1111C LDRB W8, [X21 + 0x539]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D4000
	005 Move X1, [X20+1144]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51486720
	010 Add X0, X0, 3916
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1144], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Matrix4x4 GetGPUProjectionMatrix(UnityEngine.Matrix4x4 proj, System.Boolean renderIntoTexture)

Disassembly:
	0x03C1115C LDR X3, [X8 + 0x28]
	0x03C11160 MOV W1, W20
	0x03C11164 MOV W2, W19
	0x03C11168 LDP X20, X19, [X31 + 0x20]
	0x03C1116C LDP X22, X21, [X31 + 0x10]
	0x03C11170 LDR X30, [X31], #0x30
	0x03C11174 BR X4
	0x03C11178 LDP X20, X19, [X31 + 0x20]
	0x03C1117C LDP X22, X21, [X31 + 0x10]
	0x03C11180 LDR X30, [X31], #0x30
	0x03C11184 RET
	0x03C11188 STP X30, X19, [X31 - 0x10]!
	0x03C1118C ADRP X19, 0x7D3000
	0x03C11190 LDR X0, [X19 + 0x540]
	0x03C11194 CBNZ X0, 0x3C111A8
	0x03C11198 ADRP X0, 0xFFFFFFFFFCEDF000
	0x03C1119C ADD X0, X0, 0xD81
	0x03C111A0 BL 0x1C16CB8
	0x03C111A4 STR X0, [X19 + 0x540]
	0x03C111A8 LDP X30, X19, [X31], #0x10
	0x03C111AC BR X0
	0x03C111B0 STR X30, [X31 - 0x20]!
	0x03C111B4 STP X20, X19, [X31 + 0x10]
	0x03C111B8 ADRP X20, 0x7D3000
	0x03C111BC LDR X1, [X20 + 0x548]
	0x03C111C0 MOV W19, W0
	0x03C111C4 CBNZ X1, 0x3C111DC
	0x03C111C8 ADRP X0, 0xFFFFFFFFFCF07000
	0x03C111CC ADD X0, X0, 0x736
	0x03C111D0 BL 0x1C16CB8
	0x03C111D4 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0x7D4000
	008 Move X19, X8
	009 Move X8, [X22+1152]
	010 Move W21, W1
	011 Move X20, X0
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 Move [X31+32], V0
	014 Move [X31+40], V0
	015 Move [X31], V0
	016 Move [X31+8], V0
	017 Compare X8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51322880
	020 Add X0, X0, 2367
	021 Call 0x1C17CB8
	022 Move X8, X0
	023 Move [X22+1152], X0
	024 And W1, W21, 1
	025 Add X2, X31, 0
	026 Move X0, X20
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move V1, [X31+32]
	029 Move V0, [X31+48]
	030 Move V3, [X31]
	031 Move V2, [X31+16]
	032 Move X22, [X31+80]
	033 Move X21, [X31+88]
	034 Move X30, [X31+64]
	035 Move [X19+32], V1
	036 Move [X19+40], V0
	037 Move [X19], V3
	038 Move [X19+8], V2
	039 Move X20, [X31+96]
	040 Move X19, [X31+104]
	041 Add X31, X31, 112
	042 Return X0

Method: System.Void GLLoadPixelMatrixScript(System.Single left, System.Single right, System.Single bottom, System.Single top)

Disassembly:
	0x03C1122C ADRP X0, 0xFFFFFFFFFCF05000
	0x03C11230 ADD X0, X0, 0x751
	0x03C11234 BL 0x1C16CB8
	0x03C11238 MOV X1, X0
	0x03C1123C STR X0, [X20 + 0x558]
	0x03C11240 MOV W0, W19
	0x03C11244 LDP X20, X19, [X31 + 0x10]
	0x03C11248 LDR X30, [X31], #0x20
	0x03C1124C BR X1
	0x03C11250 STP X30, X19, [X31 - 0x10]!
	0x03C11254 ADRP X19, 0x7D3000
	0x03C11258 LDR X0, [X19 + 0x560]
	0x03C1125C CBNZ X0, 0x3C11270
	0x03C11260 ADRP X0, 0xFFFFFFFFFCEF7000
	0x03C11264 ADD X0, X0, 0xE9C
	0x03C11268 BL 0x1C16CB8
	0x03C1126C STR X0, [X19 + 0x560]
	0x03C11270 LDP X30, X19, [X31], #0x10
	0x03C11274 BR X0
	0x03C11278 STP X30, X19, [X31 - 0x10]!
	0x03C1127C ADRP X19, 0x7D3000
	0x03C11280 LDR X0, [X19 + 0x568]

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move X19, 0x7D4000
	008 Move X0, [X19+1112]
	009 Move V8, V3
	010 Move V9, V2
	011 Move V10, V1
	012 Move V11, V0
	013 Compare X0, 0
	014 JumpIfNotEqual {19}
	015 Move X0, -51273728
	016 Add X0, X0, 1490
	017 Call 0x1C17CB8
	018 Move [X19+1112], X0
	019 Move V2, V9
	020 Move V3, V8
	021 Move X30, [X31+32]
	022 Move X19, [X31+40]
	023 Move D9, [X31+16]
	024 Move D8, [X31+24]
	025 Move V0, V11
	026 Move V1, V10
	027 Move D11, [X31+48]
	028 Move D10, [X31+56]
	029 CallNoReturn X0

Method: System.Void LoadPixelMatrix(System.Single left, System.Single right, System.Single bottom, System.Single top)

Disassembly:
	0x03C11284 CBNZ X0, 0x3C11298
	0x03C11288 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C1128C ADD X0, X0, 0xDBF
	0x03C11290 BL 0x1C16CB8
	0x03C11294 STR X0, [X19 + 0x568]
	0x03C11298 LDP X30, X19, [X31], #0x10
	0x03C1129C BR X0
	0x03C112A0 STR X30, [X31 - 0x20]!
	0x03C112A4 STP X20, X19, [X31 + 0x10]
	0x03C112A8 ADRP X20, 0x7D3000
	0x03C112AC LDR X1, [X20 + 0x570]
	0x03C112B0 MOV X19, X0
	0x03C112B4 CBNZ X1, 0x3C112CC
	0x03C112B8 ADRP X0, 0xFFFFFFFFFCEF7000
	0x03C112BC ADD X0, X0, 0xEDC
	0x03C112C0 BL 0x1C16CB8
	0x03C112C4 MOV X1, X0
	0x03C112C8 STR X0, [X20 + 0x570]
	0x03C112CC MOV X0, X19
	0x03C112D0 LDP X20, X19, [X31 + 0x10]
	0x03C112D4 LDR X30, [X31], #0x20
	0x03C112D8 BR X1

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move X19, 0x7D4000
	008 Move X0, [X19+1112]
	009 Move V8, V3
	010 Move V9, V2
	011 Move V10, V1
	012 Move V11, V0
	013 Compare X0, 0
	014 JumpIfNotEqual {19}
	015 Move X0, -51273728
	016 Add X0, X0, 1490
	017 Call 0x1C17CB8
	018 Move [X19+1112], X0
	019 Move V2, V9
	020 Move V3, V8
	021 Move X30, [X31+32]
	022 Move X19, [X31+40]
	023 Move D9, [X31+16]
	024 Move D8, [X31+24]
	025 Move V0, V11
	026 Move V1, V10
	027 Move D11, [X31+48]
	028 Move D10, [X31+56]
	029 CallNoReturn X0

Method: System.Void Begin(System.Int32 mode)

Disassembly:
	0x03C112DC STP X30, X19, [X31 - 0x10]!
	0x03C112E0 ADRP X19, 0x7D3000
	0x03C112E4 LDRB W8, [X19 + 0x578]
	0x03C112E8 TBNZ X8, 0x0, 0x3C11300
	0x03C112EC ADRP X0, 0x54D000
	0x03C112F0 LDR X0, [X0 + 0xD88]
	0x03C112F4 BL 0x1C16CF4
	0x03C112F8 MOVZ W8, 0x1
	0x03C112FC STRB W8, [X19 + 0x578]
	0x03C11300 ADRP X19, 0x7D3000
	0x03C11304 LDR X8, [X19 + 0x568]
	0x03C11308 CBNZ X8, 0x3C11320
	0x03C1130C ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C11310 ADD X0, X0, 0xDBF
	0x03C11314 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D4000
	005 Move X1, [X20+1120]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51372032
	010 Add X0, X0, 2550
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1120], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void End()

Disassembly:
	0x03C11318 MOV X8, X0
	0x03C1131C STR X0, [X19 + 0x568]
	0x03C11320 BLR X8
	0x03C11324 CBZ X0, 0x3C11364
	0x03C11328 ADRP X8, 0x54D000
	0x03C1132C LDR X8, [X8 + 0xD88]
	0x03C11330 LDR X9, [X0]
	0x03C11334 LDR X8, [X8]
	0x03C11338 LDRB W11, [X9 + 0x130]
	0x03C1133C LDRB W10, [X8 + 0x130]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D4000
	004 Move X0, [X19+1128]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51384320
	008 Add X0, X0, 117
	009 Call 0x1C17CB8
	010 Move [X19+1128], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void GLClear(System.Boolean clearDepth, System.Boolean clearColor, UnityEngine.Color backgroundColor, System.Single depth)

Disassembly:
	0x03C11340 CMP W11, W10
	0x03C11344 B.CS 0x3C11350
	0x03C11348 MOV X0, X31
	0x03C1134C B 0x3C11364
	0x03C11350 LDR X9, [X9 + 0xC8]
	0x03C11354 ADD X9, X9, X10, 0x3, LSL
	0x03C11358 LDUR X9, [X9 - 0x8]
	0x03C1135C CMP X9, X8
	0x03C11360 CSEL X0, X0, X31, EQ
	0x03C11364 LDP X30, X19, [X31], #0x10
	0x03C11368 RET
	0x03C1136C STR X30, [X31 - 0x20]!
	0x03C11370 STP X20, X19, [X31 + 0x10]
	0x03C11374 ADRP X20, 0x7D3000
	0x03C11378 LDR X1, [X20 + 0x570]
	0x03C1137C MOV X19, X0
	0x03C11380 CBNZ X1, 0x3C11398
	0x03C11384 ADRP X0, 0xFFFFFFFFFCEF7000
	0x03C11388 ADD X0, X0, 0xEDC
	0x03C1138C BL 0x1C16CB8
	0x03C11390 MOV X1, X0
	0x03C11394 STR X0, [X20 + 0x570]
	0x03C11398 MOV X0, X19
	0x03C1139C LDP X20, X19, [X31 + 0x10]
	0x03C113A0 LDR X30, [X31], #0x20
	0x03C113A4 BR X1
	0x03C113A8 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x7D4000
	008 Move X8, [X21+1160]
	009 Move V8, V4
	010 Move W19, W1
	011 Move W20, W0
	012 Move [X31], S0
	013 Move [X31+8], S1
	014 Move [X31+8], S2
	015 Move [X31+16], S3
	016 Compare X8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, -51412992
	019 Add X0, X0, 3643
	020 Call 0x1C17CB8
	021 Move X8, X0
	022 Move [X21+1160], X0
	023 And W0, W20, 1
	024 And W1, W19, 1
	025 Add X2, X31, 0
	026 Move V0, V8
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X20, [X31+48]
	029 Move X19, [X31+56]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Move V8, [X31+16]
	033 Add X31, X31, 64
	034 Return 

Method: System.Void Clear(System.Boolean clearDepth, System.Boolean clearColor, UnityEngine.Color backgroundColor, System.Single depth)

Disassembly:
	0x03C11410 LDP X20, X19, [X31 + 0x10]
	0x03C11414 LDR X30, [X31 + 0x8]
	0x03C11418 MOV V0.16B, V8.16B

ISIL:
	001 And W0, W0, 1
	002 And W1, W1, 1
	003 Call GL.GLClear, X0, X1, X2, V0
	004 Return 

Method: System.Void Clear(System.Boolean clearDepth, System.Boolean clearColor, UnityEngine.Color backgroundColor)

Disassembly:
	0x03C1141C LDR V8, [X31], #0x20
	0x03C11420 BR X1
	0x03C11424 STR D8, [X31 - 0x20]!
	0x03C11428 STR X30, [X31 + 0x8]

ISIL:
	001 And W0, W0, 1
	002 And W1, W1, 1
	003 Move S4, 1
	004 Call GL.GLClear, X0, X1, X2, V0
	005 Return 

Method: System.Void Viewport(UnityEngine.Rect pixelRect)

Disassembly:
	0x03C1142C STP X20, X19, [X31 + 0x10]
	0x03C11430 ADRP X20, 0x7D3000
	0x03C11434 LDR X1, [X20 + 0x590]
	0x03C11438 MOV V8.16B, V0.16B
	0x03C1143C MOV X19, X0
	0x03C11440 CBNZ X1, 0x3C11458
	0x03C11444 ADRP X0, 0xFFFFFFFFFCF15000
	0x03C11448 ADD X0, X0, 0xBB8
	0x03C1144C BL 0x1C16CB8
	0x03C11450 MOV X1, X0
	0x03C11454 STR X0, [X20 + 0x590]
	0x03C11458 MOV X0, X19
	0x03C1145C LDP X20, X19, [X31 + 0x10]
	0x03C11460 LDR X30, [X31 + 0x8]
	0x03C11464 MOV V0.16B, V8.16B
	0x03C11468 LDR V8, [X31], #0x20
	0x03C1146C BR X1

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D4000
	005 Move X8, [X19+1168]
	006 Move [X31], S0
	007 Move [X31+8], S1
	008 Move [X31+8], S2
	009 Move [X31+16], S3
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51384320
	013 Add X0, X0, 139
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X19+1168], X0
	017 Add X0, X31, 0
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Add X31, X31, 32
	022 Return 

Method: System.Void SetViewMatrix_Injected(ref UnityEngine.Matrix4x4 m)

Disassembly:
	0x03C10FBC LDR X0, [X0 + 0x758]
	0x03C10FC0 BL 0x1C16CF4
	0x03C10FC4 ADRP X0, 0x4E3000
	0x03C10FC8 LDR X0, [X0 + 0x9D0]
	0x03C10FCC BL 0x1C16CF4
	0x03C10FD0 ADRP X0, 0x54E000
	0x03C10FD4 LDR X0, [X0 + 0xD70]
	0x03C10FD8 BL 0x1C16CF4
	0x03C10FDC ADRP X0, 0x54E000
	0x03C10FE0 LDR X0, [X0 + 0xD78]
	0x03C10FE4 BL 0x1C16CF4
	0x03C10FE8 MOVZ W8, 0x1
	0x03C10FEC STRB W8, [X20 + 0x538]
	0x03C10FF0 LDR X0, [X21]
	0x03C10FF4 MOVZ W1, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D5000
	005 Move X1, [X20+1136]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51318784
	010 Add X0, X0, 2304
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1136], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void LoadProjectionMatrix_Injected(ref UnityEngine.Matrix4x4 mat)

Disassembly:
	0x03C11120 LDR X22, [X22 + 0xD80]
	0x03C11124 MOV W19, W1
	0x03C11128 MOV W20, W0
	0x03C1112C TBNZ X8, 0x0, 0x3C11144
	0x03C11130 ADRP X0, 0x54D000
	0x03C11134 LDR X0, [X0 + 0xD80]
	0x03C11138 BL 0x1C16CF4
	0x03C1113C MOVZ W8, 0x1
	0x03C11140 STRB W8, [X21 + 0x539]
	0x03C11144 LDR X8, [X22]
	0x03C11148 LDR X8, [X8 + 0xB8]
	0x03C1114C LDR X8, [X8]
	0x03C11150 CBZ X8, 0x3C11178
	0x03C11154 LDR X4, [X8 + 0x18]
	0x03C11158 LDR X0, [X8 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D4000
	005 Move X1, [X20+1144]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51486720
	010 Add X0, X0, 3916
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1144], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void GetGPUProjectionMatrix_Injected(ref UnityEngine.Matrix4x4 proj, System.Boolean renderIntoTexture, out UnityEngine.Matrix4x4 ret)

Disassembly:
	0x03C111D8 STR X0, [X20 + 0x548]
	0x03C111DC AND W0, W19, 0x1
	0x03C111E0 LDP X20, X19, [X31 + 0x10]
	0x03C111E4 LDR X30, [X31], #0x20
	0x03C111E8 BR X1
	0x03C111EC STP X30, X19, [X31 - 0x10]!
	0x03C111F0 ADRP X19, 0x7D3000
	0x03C111F4 LDR X0, [X19 + 0x550]
	0x03C111F8 CBNZ X0, 0x3C1120C
	0x03C111FC ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C11200 ADD X0, X0, 0xF50
	0x03C11204 BL 0x1C16CB8
	0x03C11208 STR X0, [X19 + 0x550]
	0x03C1120C LDP X30, X19, [X31], #0x10
	0x03C11210 BR X0
	0x03C11214 STR X30, [X31 - 0x20]!
	0x03C11218 STP X20, X19, [X31 + 0x10]
	0x03C1121C ADRP X20, 0x7D3000
	0x03C11220 LDR X1, [X20 + 0x558]
	0x03C11224 MOV W19, W0
	0x03C11228 CBNZ X1, 0x3C11240

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D4000
	007 Move X3, [X22+1152]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51322880
	014 Add X0, X0, 2367
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1152], X0
	018 And W1, W20, 1
	019 Move X0, X21
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void GLClear_Injected(System.Boolean clearDepth, System.Boolean clearColor, ref UnityEngine.Color backgroundColor, System.Single depth)

Disassembly:
	0x03C113AC ADRP X19, 0x7D3000
	0x03C113B0 LDR X0, [X19 + 0x580]
	0x03C113B4 CBNZ X0, 0x3C113C8
	0x03C113B8 ADRP X0, 0xFFFFFFFFFCEEC000
	0x03C113BC ADD X0, X0, 0x205
	0x03C113C0 BL 0x1C16CB8
	0x03C113C4 STR X0, [X19 + 0x580]
	0x03C113C8 LDP X30, X19, [X31], #0x10
	0x03C113CC BR X0
	0x03C113D0 MOV X1, X31
	0x03C113D4 B 0x33A51F0
	0x03C113D8 STR D8, [X31 - 0x20]!
	0x03C113DC STR X30, [X31 + 0x8]
	0x03C113E0 STP X20, X19, [X31 + 0x10]
	0x03C113E4 ADRP X20, 0x7D3000
	0x03C113E8 LDR X1, [X20 + 0x588]
	0x03C113EC MOV V8.16B, V0.16B
	0x03C113F0 MOV X19, X0
	0x03C113F4 CBNZ X1, 0x3C1140C
	0x03C113F8 ADRP X0, 0xFFFFFFFFFCF11000
	0x03C113FC ADD X0, X0, 0xD6A
	0x03C11400 BL 0x1C16CB8
	0x03C11404 MOV X1, X0
	0x03C11408 STR X0, [X20 + 0x588]
	0x03C1140C MOV X0, X19

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x7D4000
	008 Move X3, [X22+1160]
	009 Move V8, V0
	010 Move X19, X2
	011 Move W20, W1
	012 Move W21, W0
	013 Compare X3, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51412992
	016 Add X0, X0, 3643
	017 Call 0x1C17CB8
	018 Move X3, X0
	019 Move [X22+1160], X0
	020 And W0, W21, 1
	021 And W1, W20, 1
	022 Move X2, X19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+8]
	028 Move V0, V8
	029 Move V8, [X31+48]
	030 CallNoReturn X3

Method: System.Void Viewport_Injected(ref UnityEngine.Rect pixelRect)

Disassembly:
	0x03C11470 STR D8, [X31 - 0x20]!
	0x03C11474 STR X30, [X31 + 0x8]
	0x03C11478 STP X20, X19, [X31 + 0x10]
	0x03C1147C ADRP X20, 0x7D3000
	0x03C11480 LDR X1, [X20 + 0x598]
	0x03C11484 MOV V8.16B, V0.16B
	0x03C11488 MOV X19, X0
	0x03C1148C CBNZ X1, 0x3C114A4
	0x03C11490 ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C11494 ADD X0, X0, 0xC0
	0x03C11498 BL 0x1C16CB8
	0x03C1149C MOV X1, X0
	0x03C114A0 STR X0, [X20 + 0x598]
	0x03C114A4 MOV X0, X19
	0x03C114A8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D4000
	005 Move X1, [X20+1168]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51384320
	010 Add X0, X0, 139
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1168], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

