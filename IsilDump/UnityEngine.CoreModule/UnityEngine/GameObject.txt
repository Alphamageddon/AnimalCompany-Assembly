Type: UnityEngine.GameObject

Method: UnityEngine.GameObject CreatePrimitive(UnityEngine.PrimitiveType type)

Disassembly:
	0x03C363A0 ADRP X0, 0x529000
	0x03C363A4 LDR X0, [X0 + 0x560]
	0x03C363A8 BL 0x1C16D08
	0x03C363AC MOV X1, X0
	0x03C363B0 MOV X0, X19
	0x03C363B4 BL 0x3C363D0
	0x03C363B8 ADRP X0, 0x529000
	0x03C363BC LDR X0, [X0 + 0x568]
	0x03C363C0 BL 0x1C16D08
	0x03C363C4 MOV X1, X0
	0x03C363C8 MOV X0, X19
	0x03C363CC BL 0x1C16DEC
	0x03C363D0 STR X30, [X31 - 0x30]!
	0x03C363D4 STP X22, X21, [X31 + 0x10]
	0x03C363D8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B0000
	005 Move X1, [X20+808]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51417088
	010 Add X0, X0, 2378
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+808], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: T GetComponent()

Disassembly:
	0x021E62E4 MOV X6, X19
	0x021E62E8 LDP X20, X19, [X31 + 0x20]
	0x021E62EC LDP X22, X21, [X31 + 0x10]
	0x021E62F0 MOVZ W2, 0x1
	0x021E62F4 MOVZ W3, 0x1
	0x021E62F8 MOV W5, W31
	0x021E62FC MOV X7, X31
	0x021E6300 LDR X30, [X31], #0x30
	0x021E6304 B 0x3C35430
	0x021E6308 STR X30, [X31 - 0x30]!
	0x021E630C STP X22, X21, [X31 + 0x10]
	0x021E6310 STP X20, X19, [X31 + 0x20]
	0x021E6314 LDR X8, [X2 + 0x38]
	0x021E6318 MOV X19, X2
	0x021E631C MOV W21, W1
	0x021E6320 MOV X20, X0
	0x021E6324 CBNZ X8, 0x21E6348
	0x021E6328 ADRP X0, 0x1F0D000
	0x021E632C LDR X0, [X0 + 0x6C0]
	0x021E6330 BL 0x1C16CF4
	0x021E6334 LDR X8, [X19 + 0x38]
	0x021E6338 CBNZ X8, 0x21E6348
	0x021E633C MOV X0, X19
	0x021E6340 BL 0x1C5C6E0
	0x021E6344 LDR X8, [X19 + 0x38]
	0x021E6348 ADRP X9, 0x1F0D000
	0x021E634C LDR X9, [X9 + 0x6C0]
	0x021E6350 LDR X22, [X8]
	0x021E6354 LDR X0, [X9]
	0x021E6358 LDR W9, [X0 + 0xE0]
	0x021E635C CBNZ W9, 0x21E6364
	0x021E6360 BL 0x1C16DFC
	0x021E6364 MOV X0, X22
	0x021E6368 MOV X1, X31
	0x021E636C BL 0x338C698
	0x021E6370 MOV X1, X0
	0x021E6374 AND W4, W21, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X8, [X1+56]
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {19}
	009 Move X0, 0x1F0E000
	010 Move X0, [X0+1728]
	011 Move X20, X1
	012 Call 0x1C17CF4
	013 Move X8, [X20+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X20
	017 Call 0x1C5D6E0
	018 Move X8, [X20+56]
	019 Move X9, 0x1F0E000
	020 Move X9, [X9+1728]
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Move X20, [X8+8]
	024 Move X0, [X9]
	025 Move W9, [X0+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Call Type.GetTypeFromHandle, X0
	032 Add X8, X31, 0
	033 Move X1, X0
	034 Add X2, X8, 8
	035 Move X0, X19
	036 Move X3, X31
	037 Call GameObject.GetComponentFastPath, X0, X1, X2
	038 Move X0, [X31]
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Add X31, X31, 48
	043 Return X0

Method: UnityEngine.Component GetComponent(System.Type type)

Disassembly:
	0x03C33F80 LDR X2, [X8]
	0x03C33F84 BL 0x2D30578
	0x03C33F88 ADRP X27, 0x4C0000
	0x03C33F8C LDR X27, [X27 + 0xEB0]
	0x03C33F90 MOV X0, X22
	0x03C33F94 MOV X1, X24
	0x03C33F98 LDR X2, [X27]
	0x03C33F9C BL 0x21CF224
	0x03C33FA0 ADRP X28, 0x4C0000
	0x03C33FA4 LDR X28, [X28 + 0xEB8]
	0x03C33FA8 LDR X1, [X28]
	0x03C33FAC BL 0x21D577C
	0x03C33FB0 ADRP X8, 0x4C1000
	0x03C33FB4 LDR X8, [X8 + 0xBF0]
	0x03C33FB8 STR X0, [X31 + 0xE0]
	0x03C33FBC LDR X1, [X8]
	0x03C33FC0 BL 0x21C0360

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B3000
	006 Move X2, [X21+816]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51613696
	012 Add X0, X0, 1152
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+816], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetComponentFastPath(System.Type type, System.IntPtr oneFurtherThanResultValue)

Disassembly:
	0x03C363DC ADRP X21, 0x7AF000
	0x03C363E0 ADRP X22, 0x4BD000
	0x03C363E4 LDRB W8, [X21 + 0x4CE]
	0x03C363E8 LDR X22, [X22 + 0x7D0]
	0x03C363EC MOV X20, X1
	0x03C363F0 MOV X19, X0
	0x03C363F4 TBNZ X8, 0x0, 0x3C3640C
	0x03C363F8 ADRP X0, 0x4BD000
	0x03C363FC LDR X0, [X0 + 0x7D0]
	0x03C36400 BL 0x1C16CF4
	0x03C36404 MOVZ W8, 0x1
	0x03C36408 STRB W8, [X21 + 0x4CE]
	0x03C3640C LDR X0, [X22]
	0x03C36410 LDR W8, [X0 + 0xE0]
	0x03C36414 CBNZ W8, 0x3C3641C
	0x03C36418 BL 0x1C16DFC
	0x03C3641C MOV X0, X19
	0x03C36420 MOV X1, X20
	0x03C36424 MOV X2, X31
	0x03C36428 BL 0x33B2C70
	0x03C3642C MOVZ W8, 0x4003

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B0000
	007 Move X3, [X22+824]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51625984
	014 Add X0, X0, 1202
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+824], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: UnityEngine.Component GetComponentInChildren(System.Type type, System.Boolean includeInactive)

Disassembly:
	0x03C3419C LDR X0, [X29]
	0x03C341A0 ADRP X28, 0x4BF000
	0x03C341A4 LDR X28, [X28 + 0x6C0]
	0x03C341A8 LDR X8, [X0 + 0xB8]
	0x03C341AC LDR X23, [X8 + 0x18]
	0x03C341B0 CBNZ X23, 0x3C34204
	0x03C341B4 LDR W8, [X0 + 0xE0]
	0x03C341B8 CBNZ W8, 0x3C341C4
	0x03C341BC BL 0x1C16DFC
	0x03C341C0 LDR X0, [X29]
	0x03C341C4 ADRP X9, 0x52B000
	0x03C341C8 LDR X8, [X0 + 0xB8]
	0x03C341CC LDR X9, [X9 + 0x460]
	0x03C341D0 LDR X24, [X8]
	0x03C341D4 LDR X0, [X9]
	0x03C341D8 BL 0x1C16F10
	0x03C341DC ADRP X8, 0x52B000
	0x03C341E0 LDR X8, [X8 + 0x480]
	0x03C341E4 MOV X1, X24
	0x03C341E8 MOV X3, X31
	0x03C341EC MOV X23, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B2000
	007 Move X3, [X22+832]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51519488
	014 Add X0, X0, 188
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+832], X0
	018 And W2, W20, 1
	019 Move X0, X21
	020 Move X1, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: T GetComponentInChildren()

Disassembly:
	0x021E6548 LDP X22, X21, [X31 + 0x10]
	0x021E654C MOVZ W2, 0x1
	0x021E6550 MOVZ W3, 0x1
	0x021E6554 MOVZ W5, 0x1
	0x021E6558 MOV X7, X31
	0x021E655C LDR X30, [X31], #0x30
	0x021E6560 B 0x3C35430
	0x021E6564 STR X30, [X31 - 0x30]!
	0x021E6568 STP X22, X21, [X31 + 0x10]
	0x021E656C STP X20, X19, [X31 + 0x20]
	0x021E6570 LDR X8, [X3 + 0x38]
	0x021E6574 MOV X19, X2
	0x021E6578 MOV W21, W1
	0x021E657C MOV X20, X0
	0x021E6580 CBNZ X8, 0x21E65A8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {12}
	008 Move X0, X1
	009 Move X20, X1
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X2, [X8]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move W1, W31
	017 Move X30, [X31+32]
	018 Call 0x21E668C, X0, X1
	019 Return X0

Method: T GetComponentInChildren(System.Boolean includeInactive)

Disassembly:
	0x021E668C STR X8, [X19]
	0x021E6690 LDP X20, X19, [X31 + 0x20]
	0x021E6694 CMP X8, 0x0
	0x021E6698 CSET W0, NE
	0x021E669C ADD X31, X31, 0x30
	0x021E66A0 RET
	0x021E66A4 STP X29, X30, [X31 - 0x60]!
	0x021E66A8 STP X28, X27, [X31 + 0x10]
	0x021E66AC STP X26, X25, [X31 + 0x20]
	0x021E66B0 STP X24, X23, [X31 + 0x30]
	0x021E66B4 STP X22, X21, [X31 + 0x40]
	0x021E66B8 STP X20, X19, [X31 + 0x50]
	0x021E66BC ADD X29, X31, 0x0
	0x021E66C0 SUB X31, X31, 0x20
	0x021E66C4 MRS X8, 0xC000
	0x021E66C8 STP X1, X8, [X29 - 0x18]
	0x021E66CC LDR X8, [X8 + 0x28]
	0x021E66D0 MOV X19, X2
	0x021E66D4 MOV X25, X0
	0x021E66D8 STUR X8, [X29 - 0x8]
	0x021E66DC LDR X22, [X2 + 0x38]
	0x021E66E0 CBNZ X22, 0x21E6704
	0x021E66E4 ADRP X0, 0x1F0D000
	0x021E66E8 LDR X0, [X0 + 0x6C0]
	0x021E66EC BL 0x1C16CF4
	0x021E66F0 LDR X22, [X19 + 0x38]
	0x021E66F4 CBNZ X22, 0x21E6704
	0x021E66F8 MOV X0, X19
	0x021E66FC BL 0x1C5C6E0
	0x021E6700 LDR X22, [X19 + 0x38]
	0x021E6704 LDR X9, [X22 + 0x18]
	0x021E6708 LDR X8, [X22]
	0x021E670C LDR W20, [X9 + 0xFC]
	0x021E6710 LDR W23, [X8 + 0xFC]
	0x021E6714 ADD X8, X31, 0x0
	0x021E6718 ADD X9, X20, 0xF
	0x021E671C AND X9, X9, 0x1FFFFFFFF
	0x021E6720 SUB X26, X8, X9
	0x021E6724 ADD X31, X26, 0x0
	0x021E6728 ADD X8, X31, 0x0
	0x021E672C SUB X21, X8, X9
	0x021E6730 ADD X31, X21, 0x0
	0x021E6734 ADD X9, X23, 0xF
	0x021E6738 ADD X8, X31, 0x0
	0x021E673C AND X9, X9, 0x1FFFFFFFF
	0x021E6740 SUB X28, X8, X9
	0x021E6744 ADD X31, X28, 0x0
	0x021E6748 ADD X8, X31, 0x0
	0x021E674C SUB X24, X8, X9
	0x021E6750 ADD X31, X24, 0x0
	0x021E6754 ADD X8, X31, 0x0
	0x021E6758 SUB X27, X8, X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move W20, W1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {21}
	012 Move X0, 0x1F0E000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Move X8, [X19+56]
	021 Move X9, 0x1F0E000
	022 Move X9, [X9+1728]
	023 Move X22, [X8]
	024 Move X0, [X9]
	025 Move W9, [X0+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Call Type.GetTypeFromHandle, X0
	032 Move X1, X0
	033 And W2, W20, 1
	034 Move X0, X21
	035 Move X3, X31
	036 Call GameObject.GetComponentInChildren, X0, X1, X2
	037 Move X8, [X19+56]
	038 Move X20, X0
	039 Move X19, [X8+8]
	040 Move W8, [X19+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X19
	046 Call 0x1C5D684
	047 Move X19, X0
	048 Compare X20, 0
	049 JumpIfEqual {58}
	050 Move X0, X20
	051 Move X1, X19
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfNotEqual {59}
	055 Move X0, X20
	056 Move X1, X19
	057 Call 0x1C181E0
	058 Move X0, X31
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return X0

Method: UnityEngine.Component GetComponentInParent(System.Type type, System.Boolean includeInactive)

Disassembly:
	0x03C34278 LDR X0, [X29]
	0x03C3427C ADRP X9, 0x52B000
	0x03C34280 LDR X8, [X0 + 0xB8]
	0x03C34284 LDR X9, [X9 + 0x458]
	0x03C34288 LDR X25, [X8]
	0x03C3428C LDR X0, [X9]
	0x03C34290 BL 0x1C16F10
	0x03C34294 ADRP X8, 0x52B000
	0x03C34298 LDR X8, [X8 + 0x490]
	0x03C3429C MOV X1, X25
	0x03C342A0 MOV X3, X31
	0x03C342A4 MOV X24, X0
	0x03C342A8 LDR X2, [X8]
	0x03C342AC BL 0x2D30128
	0x03C342B0 LDR X8, [X29]
	0x03C342B4 LDR X8, [X8 + 0xB8]
	0x03C342B8 STR X24, [X8 + 0x28]
	0x03C342BC B 0x3C3431C
	0x03C342C0 LDR X24, [X8 + 0x20]
	0x03C342C4 ORR X27, X19, 0xF
	0x03C342C8 CBNZ X24, 0x3C3431C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B2000
	007 Move X3, [X22+840]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51642368
	014 Add X0, X0, 750
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+840], X0
	018 And W2, W20, 1
	019 Move X0, X21
	020 Move X1, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: T GetComponentInParent()

Disassembly:
	0x021E68C4 MOV X21, X0
	0x021E68C8 CBNZ X8, 0x21E68E8
	0x021E68CC ADRP X0, 0x1F0D000
	0x021E68D0 LDR X0, [X0 + 0x598]
	0x021E68D4 BL 0x1C16CF4
	0x021E68D8 LDR X8, [X19 + 0x38]
	0x021E68DC CBNZ X8, 0x21E68E8
	0x021E68E0 MOV X0, X19
	0x021E68E4 BL 0x1C5C6E0
	0x021E68E8 ADRP X22, 0x1F0D000
	0x021E68EC LDR X22, [X22 + 0x598]
	0x021E68F0 LDR X0, [X22]
	0x021E68F4 LDR W8, [X0 + 0xE0]
	0x021E68F8 CBNZ W8, 0x21E6900
	0x021E68FC BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {12}
	008 Move X0, X1
	009 Move X20, X1
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X2, [X8]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move W1, W31
	017 Move X30, [X31+32]
	018 Call 0x21E6A08, X0, X1
	019 Return X0

Method: T GetComponentInParent(System.Boolean includeInactive)

Disassembly:
	0x021E6A08 MOV X0, X22
	0x021E6A0C MOV X1, X31
	0x021E6A10 MOV X2, X31
	0x021E6A14 BL 0x3C354F8
	0x021E6A18 MOV X21, X31
	0x021E6A1C TBZ X0, 0x0, 0x21E6A98
	0x021E6A20 CBZ X22, 0x21E6BA4
	0x021E6A24 LDR X8, [X19 + 0x38]
	0x021E6A28 MOVZ W1, 0x1
	0x021E6A2C MOV X0, X22
	0x021E6A30 LDR X2, [X8 + 0x8]
	0x021E6A34 BL 0x21E5F84
	0x021E6A38 CBZ X0, 0x21E6BA4
	0x021E6A3C LDR W8, [X0 + 0x18]
	0x021E6A40 MOV X22, X0
	0x021E6A44 CMP W8, 0x1
	0x021E6A48 B.LT 0x21E6A94
	0x021E6A4C MOV W24, W31
	0x021E6A50 CMP W24, W8
	0x021E6A54 B.CS 0x21E6BA8
	0x021E6A58 ADD X8, X22, W24, 0x3, SXTW
	0x021E6A5C LDR X21, [X8 + 0x20]
	0x021E6A60 CBZ X21, 0x21E6BA4
	0x021E6A64 MOV X0, X21
	0x021E6A68 MOV X1, X31
	0x021E6A6C BL 0x3C32ECC
	0x021E6A70 CBZ X0, 0x21E6BA4
	0x021E6A74 MOV X1, X20
	0x021E6A78 MOV X2, X31
	0x021E6A7C BL 0x3C33498
	0x021E6A80 TBNZ X0, 0x0, 0x21E6A98
	0x021E6A84 LDR W8, [X22 + 0x18]
	0x021E6A88 ADD W24, W24, 0x1
	0x021E6A8C CMP W24, W8
	0x021E6A90 B.LT 0x21E6A50
	0x021E6A94 MOV X21, X31
	0x021E6A98 LDR X0, [X23]
	0x021E6A9C LDR W8, [X0 + 0xE0]
	0x021E6AA0 CBNZ W8, 0x21E6AA8
	0x021E6AA4 BL 0x1C16DFC
	0x021E6AA8 MOV X0, X21
	0x021E6AAC MOV X1, X31
	0x021E6AB0 MOV X2, X31
	0x021E6AB4 BL 0x3C3883C
	0x021E6AB8 TBZ X0, 0x0, 0x21E6B3C
	0x021E6ABC MOV X0, X20
	0x021E6AC0 MOV X1, X31
	0x021E6AC4 BL 0x3C358F8
	0x021E6AC8 CBZ X0, 0x21E6BA4
	0x021E6ACC LDR W8, [X0 + 0x18]
	0x021E6AD0 MOV X20, X0
	0x021E6AD4 CMP W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move W20, W1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {21}
	012 Move X0, 0x1F0E000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Move X8, [X19+56]
	021 Move X9, 0x1F0E000
	022 Move X9, [X9+1728]
	023 Move X22, [X8]
	024 Move X0, [X9]
	025 Move W9, [X0+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Call Type.GetTypeFromHandle, X0
	032 Move X1, X0
	033 And W2, W20, 1
	034 Move X0, X21
	035 Move X3, X31
	036 Call GameObject.GetComponentInParent, X0, X1, X2
	037 Move X8, [X19+56]
	038 Move X20, X0
	039 Move X19, [X8+8]
	040 Move W8, [X19+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X19
	046 Call 0x1C5D684
	047 Move X19, X0
	048 Compare X20, 0
	049 JumpIfEqual {58}
	050 Move X0, X20
	051 Move X1, X19
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfNotEqual {59}
	055 Move X0, X20
	056 Move X1, X19
	057 Call 0x1C181E0
	058 Move X0, X31
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return X0

Method: System.Array GetComponentsInternal(System.Type type, System.Boolean useSearchTypeAsArrayReturnType, System.Boolean recursive, System.Boolean includeInactive, System.Boolean reverse, System.Object resultList)

Disassembly:
	0x03C36430 MOVK W8, 0x80000000
	0x03C36434 STR W8, [X19 + 0x60]
	0x03C36438 LDP X20, X19, [X31 + 0x20]
	0x03C3643C LDP X22, X21, [X31 + 0x10]
	0x03C36440 LDR X30, [X31], #0x30
	0x03C36444 RET
	0x03C36448 STP X30, X21, [X31 - 0x20]!
	0x03C3644C STP X20, X19, [X31 + 0x10]
	0x03C36450 ADRP X21, 0x7AF000
	0x03C36454 LDR X2, [X21 + 0x450]
	0x03C36458 MOV X19, X1
	0x03C3645C MOV X20, X0
	0x03C36460 CBNZ X2, 0x3C36478
	0x03C36464 ADRP X0, 0xFFFFFFFFFCED5000
	0x03C36468 ADD X0, X0, 0x4E5
	0x03C3646C BL 0x1C16CB8
	0x03C36470 MOV X2, X0
	0x03C36474 STR X0, [X21 + 0x450]
	0x03C36478 MOV X0, X20
	0x03C3647C MOV X1, X19
	0x03C36480 LDP X20, X19, [X31 + 0x10]
	0x03C36484 LDP X30, X21, [X31], #0x20
	0x03C36488 BR X2
	0x03C3648C STP X30, X21, [X31 - 0x20]!
	0x03C36490 STP X20, X19, [X31 + 0x10]
	0x03C36494 ADRP X21, 0x7AF000
	0x03C36498 LDR X2, [X21 + 0x450]
	0x03C3649C MOV X19, X1
	0x03C364A0 MOV X20, X0
	0x03C364A4 CBNZ X2, 0x3C364BC
	0x03C364A8 ADRP X0, 0xFFFFFFFFFCED5000
	0x03C364AC ADD X0, X0, 0x4E5
	0x03C364B0 BL 0x1C16CB8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7B0000
	011 Move X7, [X26+848]
	012 Move X19, X6
	013 Move W20, W5
	014 Move W22, W4
	015 Move W23, W3
	016 Move W24, W2
	017 Move X21, X1
	018 Move X25, X0
	019 Compare X7, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51634176
	022 Add X0, X0, 533
	023 Call 0x1C17CB8
	024 Move X7, X0
	025 Move [X26+848], X0
	026 And W2, W24, 1
	027 And W3, W23, 1
	028 And W4, W22, 1
	029 And W5, W20, 1
	030 Move X0, X25
	031 Move X1, X21
	032 Move X6, X19
	033 Move X20, [X31+64]
	034 Move X19, [X31+72]
	035 Move X22, [X31+48]
	036 Move X21, [X31+56]
	037 Move X24, [X31+32]
	038 Move X23, [X31+40]
	039 Move X26, [X31+16]
	040 Move X25, [X31+24]
	041 Move X30, [X31+80]
	042 CallNoReturn X7

Method: T[] GetComponents()

Disassembly:
	0x021E6C40 SUB X31, X31, 0x50
	0x021E6C44 STR X30, [X31 + 0x20]
	0x021E6C48 STP X22, X21, [X31 + 0x30]
	0x021E6C4C STP X20, X19, [X31 + 0x40]
	0x021E6C50 STR W0, [X31 + 0x28]
	0x021E6C54 LDR X8, [X1 + 0x38]
	0x021E6C58 MOV X19, X1
	0x021E6C5C CBNZ X8, 0x21E6CB8
	0x021E6C60 ADRP X0, 0x1F13000
	0x021E6C64 LDR X0, [X0 + 0xDD0]
	0x021E6C68 BL 0x1C16CF4
	0x021E6C6C ADRP X0, 0x1F13000
	0x021E6C70 LDR X0, [X0 + 0xDD8]
	0x021E6C74 BL 0x1C16CF4
	0x021E6C78 ADRP X0, 0x1F13000
	0x021E6C7C LDR X0, [X0 + 0xDE0]
	0x021E6C80 BL 0x1C16CF4
	0x021E6C84 ADRP X0, 0x1F35000
	0x021E6C88 LDR X0, [X0 + 0xAA0]
	0x021E6C8C BL 0x1C16CF4
	0x021E6C90 ADRP X0, 0x1F13000
	0x021E6C94 LDR X0, [X0 + 0xDE8]
	0x021E6C98 BL 0x1C16CF4
	0x021E6C9C ADRP X0, 0x1F0D000
	0x021E6CA0 LDR X0, [X0 + 0x598]
	0x021E6CA4 BL 0x1C16CF4
	0x021E6CA8 LDR X8, [X19 + 0x38]
	0x021E6CAC CBNZ X8, 0x21E6CB8
	0x021E6CB0 MOV X0, X19
	0x021E6CB4 BL 0x1C5C6E0
	0x021E6CB8 ADRP X20, 0x1F35000
	0x021E6CBC LDR X20, [X20 + 0xAA0]
	0x021E6CC0 STP X31, X31, [X31 + 0x8]
	0x021E6CC4 STR X31, [X31 + 0x18]
	0x021E6CC8 LDR X0, [X20]
	0x021E6CCC LDR W8, [X0 + 0xE0]
	0x021E6CD0 CBNZ W8, 0x21E6CDC
	0x021E6CD4 BL 0x1C16DFC
	0x021E6CD8 LDR X0, [X20]
	0x021E6CDC LDR X8, [X0 + 0xB8]
	0x021E6CE0 ADD X0, X31, 0x28
	0x021E6CE4 MOV X2, X31
	0x021E6CE8 LDR X1, [X8]
	0x021E6CEC BL 0x3C465DC
	0x021E6CF0 LDR X8, [X20]
	0x021E6CF4 LDR X8, [X8 + 0xB8]
	0x021E6CF8 LDR X0, [X8]
	0x021E6CFC CBZ X0, 0x21E6DA4
	0x021E6D00 ADRP X8, 0x1F13000
	0x021E6D04 LDR X8, [X8 + 0xDE8]
	0x021E6D08 LDR X1, [X8]
	0x021E6D0C ADD X8, X31, 0x8
	0x021E6D10 BL 0x301CB58

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {19}
	010 Move X0, 0x1F0E000
	011 Move X0, [X0+1728]
	012 Call 0x1C17CF4
	013 Move X8, [X19+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move X8, [X19+56]
	019 Move X9, 0x1F0E000
	020 Move X9, [X9+1728]
	021 Move X21, [X8]
	022 Move X0, [X9]
	023 Move W9, [X0+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Call Type.GetTypeFromHandle, X0
	030 Move X1, X0
	031 Move W2, 1
	032 Move W4, 1
	033 Move X0, X20
	034 Move W3, W31
	035 Move W5, W31
	036 Move X6, X31
	037 Move X7, X31
	038 Call GameObject.GetComponentsInternal, X0, X1, X2, X3, X4, X5, X6
	039 Move X8, [X19+56]
	040 Move X20, X0
	041 Move X19, [X8+8]
	042 Move W8, [X19+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X19
	048 Call 0x1C5D684
	049 Move X19, X0
	050 Compare X20, 0
	051 JumpIfEqual {60}
	052 Move X0, X20
	053 Move X1, X19
	054 Call 0x1C17E00
	055 Compare X0, 0
	056 JumpIfNotEqual {61}
	057 Move X0, X20
	058 Move X1, X19
	059 Call 0x1C181E0
	060 Move X0, X31
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Return X0

Method: System.Void GetComponents(System.Collections.Generic.List`1<T> results)

Disassembly:
	0x021E6DE8 CBZ X20, 0x21E6D88
	0x021E6DEC MOV X0, X20
	0x021E6DF0 BL 0x1C16F18
	0x021E6DF4 MOV X20, X31
	0x021E6DF8 B 0x21E6E00
	0x021E6DFC MOV X19, X0
	0x021E6E00 ADRP X8, 0x1F13000
	0x021E6E04 LDR X8, [X8 + 0xDD0]
	0x021E6E08 LDR X1, [X8]
	0x021E6E0C ADD X0, X31, 0x8
	0x021E6E10 BL 0x2BC434C
	0x021E6E14 CBNZ X20, 0x21E6E20
	0x021E6E18 MOV X0, X19
	0x021E6E1C BL 0x1D2C690
	0x021E6E20 MOV X0, X20
	0x021E6E24 BL 0x1C16F18
	0x021E6E28 BL 0x1990590
	0x021E6E2C STR X30, [X31 - 0x30]!
	0x021E6E30 STP X22, X21, [X31 + 0x10]
	0x021E6E34 STP X20, X19, [X31 + 0x20]
	0x021E6E38 LDR X8, [X2 + 0x38]
	0x021E6E3C MOV X21, X2
	0x021E6E40 MOV W19, W1
	0x021E6E44 MOV X20, X0
	0x021E6E48 CBNZ X8, 0x21E6E74
	0x021E6E4C ADRP X0, 0x1F35000
	0x021E6E50 LDR X0, [X0 + 0xAA0]
	0x021E6E54 BL 0x1C16CF4
	0x021E6E58 ADRP X0, 0x1F0D000
	0x021E6E5C LDR X0, [X0 + 0xC90]
	0x021E6E60 BL 0x1C16CF4
	0x021E6E64 LDR X8, [X21 + 0x38]
	0x021E6E68 CBNZ X8, 0x21E6E74
	0x021E6E6C MOV X0, X21
	0x021E6E70 BL 0x1C5C6E0
	0x021E6E74 ADRP X8, 0x1F0D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {20}
	010 Move X0, 0x1F0E000
	011 Move X0, [X0+1728]
	012 Move X21, X2
	013 Call 0x1C17CF4
	014 Move X8, [X21+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {20}
	017 Move X0, X21
	018 Call 0x1C5D6E0
	019 Move X8, [X21+56]
	020 Move X9, 0x1F0E000
	021 Move X9, [X9+1728]
	022 Move X21, [X8]
	023 Move X0, [X9]
	024 Move W9, [X0+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X31
	030 Call Type.GetTypeFromHandle, X0
	031 Move X1, X0
	032 Move X0, X20
	033 Move X6, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move W2, 1
	037 Move W4, 1
	038 Move W3, W31
	039 Move W5, W31
	040 Move X7, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call GameObject.GetComponentsInternal, X0, X1, X2, X3, X4, X5, X6
	044 Return 

Method: T[] GetComponentsInChildren(System.Boolean includeInactive)

Disassembly:
	0x021E6F84 STR W0, [X31 + 0x8]
	0x021E6F88 ADD X0, X31, 0x8
	0x021E6F8C MOV X1, X31
	0x021E6F90 BL 0x3C463D8
	0x021E6F94 TBZ X0, 0x0, 0x21E6FC4
	0x021E6F98 LDR X0, [X26]
	0x021E6F9C LDR W24, [X31 + 0x8]
	0x021E6FA0 LDR W8, [X0 + 0xE0]
	0x021E6FA4 CBNZ W8, 0x21E6FAC
	0x021E6FA8 BL 0x1C16DFC
	0x021E6FAC LDR X8, [X19 + 0x38]
	0x021E6FB0 MOV X0, X24
	0x021E6FB4 MOV X1, X20
	0x021E6FB8 MOV W2, W23
	0x021E6FBC LDR X3, [X8 + 0x8]
	0x021E6FC0 BL 0x21E6FE8
	0x021E6FC4 ADD W22, W22, 0x1
	0x021E6FC8 CMP W21, W22
	0x021E6FCC B.NE 0x21E6F68
	0x021E6FD0 LDP X20, X19, [X31 + 0x40]
	0x021E6FD4 LDP X22, X21, [X31 + 0x30]
	0x021E6FD8 LDP X24, X23, [X31 + 0x20]
	0x021E6FDC LDP X26, X25, [X31 + 0x10]
	0x021E6FE0 LDR X30, [X31], #0x50
	0x021E6FE4 RET
	0x021E6FE8 SUB X31, X31, 0x70
	0x021E6FEC STP X30, X23, [X31 + 0x40]
	0x021E6FF0 STP X22, X21, [X31 + 0x50]
	0x021E6FF4 STP X20, X19, [X31 + 0x60]
	0x021E6FF8 STR W0, [X31 + 0x38]
	0x021E6FFC LDR X8, [X3 + 0x38]
	0x021E7000 MOV X19, X3
	0x021E7004 MOV W20, W2
	0x021E7008 MOV X21, X1
	0x021E700C CBNZ X8, 0x21E705C
	0x021E7010 ADRP X0, 0x1F12000
	0x021E7014 LDR X0, [X0 + 0xDD0]
	0x021E7018 BL 0x1C16CF4
	0x021E701C ADRP X0, 0x1F12000
	0x021E7020 LDR X0, [X0 + 0xDD8]
	0x021E7024 BL 0x1C16CF4
	0x021E7028 ADRP X0, 0x1F12000
	0x021E702C LDR X0, [X0 + 0xDE0]
	0x021E7030 BL 0x1C16CF4
	0x021E7034 ADRP X0, 0x1F34000
	0x021E7038 LDR X0, [X0 + 0xAA0]
	0x021E703C BL 0x1C16CF4
	0x021E7040 ADRP X0, 0x1F12000
	0x021E7044 LDR X0, [X0 + 0xDE8]
	0x021E7048 BL 0x1C16CF4
	0x021E704C LDR X8, [X19 + 0x38]
	0x021E7050 CBNZ X8, 0x21E705C
	0x021E7054 MOV X0, X19
	0x021E7058 BL 0x1C5C6E0
	0x021E705C ADRP X22, 0x1F34000
	0x021E7060 LDR X22, [X22 + 0xAA0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move W21, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {21}
	012 Move X0, 0x1F0E000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Move X8, [X19+56]
	021 Move X9, 0x1F0E000
	022 Move X9, [X9+1728]
	023 Move X22, [X8]
	024 Move X0, [X9]
	025 Move W9, [X0+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Call Type.GetTypeFromHandle, X0
	032 Move X1, X0
	033 And W4, W21, 1
	034 Move W2, 1
	035 Move W3, 1
	036 Move X0, X20
	037 Move W5, W31
	038 Move X6, X31
	039 Move X7, X31
	040 Call GameObject.GetComponentsInternal, X0, X1, X2, X3, X4, X5, X6
	041 Move X8, [X19+56]
	042 Move X20, X0
	043 Move X19, [X8+8]
	044 Move W8, [X19+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X19
	050 Call 0x1C5D684
	051 Move X19, X0
	052 Compare X20, 0
	053 JumpIfEqual {62}
	054 Move X0, X20
	055 Move X1, X19
	056 Call 0x1C17E00
	057 Compare X0, 0
	058 JumpIfNotEqual {63}
	059 Move X0, X20
	060 Move X1, X19
	061 Call 0x1C181E0
	062 Move X0, X31
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return X0

Method: System.Void GetComponentsInChildren(System.Boolean includeInactive, System.Collections.Generic.List`1<T> results)

Disassembly:
	0x021E71D0 LDR X1, [X8]
	0x021E71D4 ADD X0, X31, 0x20
	0x021E71D8 BL 0x2BC434C
	0x021E71DC CBNZ X20, 0x21E71E8
	0x021E71E0 MOV X0, X19
	0x021E71E4 BL 0x1D2C690
	0x021E71E8 MOV X0, X20
	0x021E71EC BL 0x1C16F18
	0x021E71F0 BL 0x1990590
	0x021E71F4 SUB X31, X31, 0x70
	0x021E71F8 STP X30, X23, [X31 + 0x40]
	0x021E71FC STP X22, X21, [X31 + 0x50]
	0x021E7200 STP X20, X19, [X31 + 0x60]
	0x021E7204 LDR X8, [X1 + 0x38]
	0x021E7208 MOV X20, X1
	0x021E720C MOV X21, X0
	0x021E7210 CBNZ X8, 0x21E7258
	0x021E7214 ADRP X0, 0x1F12000
	0x021E7218 LDR X0, [X0 + 0xB38]
	0x021E721C BL 0x1C16CF4
	0x021E7220 ADRP X0, 0x1F12000
	0x021E7224 LDR X0, [X0 + 0xB40]
	0x021E7228 BL 0x1C16CF4
	0x021E722C ADRP X0, 0x1F12000
	0x021E7230 LDR X0, [X0 + 0xB48]
	0x021E7234 BL 0x1C16CF4
	0x021E7238 ADRP X0, 0x1F12000
	0x021E723C LDR X0, [X0 + 0xB58]
	0x021E7240 BL 0x1C16CF4
	0x021E7244 LDR X8, [X20 + 0x38]
	0x021E7248 CBNZ X8, 0x21E7258
	0x021E724C MOV X0, X20
	0x021E7250 BL 0x1C5C6E0
	0x021E7254 LDR X8, [X20 + 0x38]
	0x021E7258 STP X31, X31, [X31 + 0x20]
	0x021E725C STR X31, [X31 + 0x30]
	0x021E7260 LDR X0, [X8]
	0x021E7264 LDRB W8, [X0 + 0x135]
	0x021E7268 TBNZ X8, 0x0, 0x21E7270

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X2
	008 Move W21, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {22}
	012 Move X0, 0x1F0D000
	013 Move X0, [X0+1728]
	014 Move X22, X3
	015 Call 0x1C17CF4
	016 Move X8, [X22+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X22
	020 Call 0x1C5D6E0
	021 Move X8, [X22+56]
	022 Move X9, 0x1F0D000
	023 Move X9, [X9+1728]
	024 Move X22, [X8]
	025 Move X0, [X9]
	026 Move W9, [X0+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X31
	032 Call Type.GetTypeFromHandle, X0
	033 And W4, W21, 1
	034 Move X1, X0
	035 Move X0, X20
	036 Move X6, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move W2, 1
	042 Move W3, 1
	043 Move W5, W31
	044 Move X7, X31
	045 Move X30, [X31+48]
	046 Call GameObject.GetComponentsInternal, X0, X1, X2, X3, X4, X5, X6
	047 Return 

Method: T[] GetComponentsInChildren()

Disassembly:
	0x021E6F08 BL 0x1C16CF4
	0x021E6F0C ADRP X0, 0x1F0D000
	0x021E6F10 LDR X0, [X0 + 0xC90]
	0x021E6F14 BL 0x1C16CF4
	0x021E6F18 LDR X8, [X19 + 0x38]
	0x021E6F1C CBNZ X8, 0x21E6F28
	0x021E6F20 MOV X0, X19
	0x021E6F24 BL 0x1C5C6E0
	0x021E6F28 ADRP X25, 0x1F0D000
	0x021E6F2C LDR X25, [X25 + 0xC90]
	0x021E6F30 STR W31, [X31 + 0x8]
	0x021E6F34 LDR X0, [X25]
	0x021E6F38 LDR W8, [X0 + 0xE0]
	0x021E6F3C CBNZ W8, 0x21E6F44
	0x021E6F40 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {12}
	008 Move X0, X1
	009 Move X20, X1
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X2, [X8]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move W1, W31
	017 Move X30, [X31+32]
	018 Call 0x21E6F84, X0, X1
	019 Return X0

Method: System.Void GetComponentsInChildren(System.Collections.Generic.List`1<T> results)

Disassembly:
	0x021E7064 STP X31, X31, [X31 + 0x20]
	0x021E7068 STR X31, [X31 + 0x30]
	0x021E706C LDR X0, [X22]
	0x021E7070 LDR W8, [X0 + 0xE0]
	0x021E7074 CBNZ W8, 0x21E7080
	0x021E7078 BL 0x1C16DFC
	0x021E707C LDR X0, [X22]
	0x021E7080 LDR X8, [X0 + 0xB8]
	0x021E7084 ADD X0, X31, 0x38
	0x021E7088 MOV X2, X31
	0x021E708C LDR X1, [X8]
	0x021E7090 BL 0x3C465DC
	0x021E7094 LDR X8, [X22]
	0x021E7098 LDR X8, [X8 + 0xB8]
	0x021E709C LDR X0, [X8]
	0x021E70A0 CBZ X0, 0x21E7168
	0x021E70A4 ADRP X8, 0x1F12000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X3, [X8+8]
	015 Move X0, X20
	016 Move X2, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move W1, W31
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call 0x21E71D0, X0, X1, X2
	023 Return 

Method: System.Void GetComponentsInParent(System.Boolean includeInactive, System.Collections.Generic.List`1<T> results)

Disassembly:
	0x021E74C8 BL 0x1C16CF4
	0x021E74CC LDR X8, [X20 + 0x38]
	0x021E74D0 CBNZ X8, 0x21E74E0
	0x021E74D4 MOV X0, X20
	0x021E74D8 BL 0x1C5C6E0
	0x021E74DC LDR X8, [X20 + 0x38]
	0x021E74E0 STP X31, X31, [X31 + 0x20]
	0x021E74E4 STR X31, [X31 + 0x30]
	0x021E74E8 LDR X0, [X8]
	0x021E74EC LDRB W8, [X0 + 0x135]
	0x021E74F0 TBNZ X8, 0x0, 0x21E74F8
	0x021E74F4 BL 0x1C5C684
	0x021E74F8 BL 0x1C16F10
	0x021E74FC LDR X8, [X20 + 0x38]
	0x021E7500 MOV X19, X0
	0x021E7504 LDR X1, [X8 + 0x8]
	0x021E7508 BL 0x301B7C4
	0x021E750C MOV X0, X22
	0x021E7510 MOV X1, X21
	0x021E7514 MOV X2, X31
	0x021E7518 BL 0x1E0912C
	0x021E751C CBZ X0, 0x21E7688
	0x021E7520 ADRP X8, 0x1F12000
	0x021E7524 LDR X8, [X8 + 0xB58]
	0x021E7528 LDR X1, [X8]
	0x021E752C ADD X8, X31, 0x8
	0x021E7530 BL 0x301CB58
	0x021E7534 LDUR V0, [X31 + 0x8]
	0x021E7538 LDR X8, [X31 + 0x18]
	0x021E753C ADRP X23, 0x1F12000
	0x021E7540 STR V0, [X31 + 0x2]
	0x021E7544 STR X8, [X31 + 0x30]
	0x021E7548 LDR X23, [X23 + 0xB40]
	0x021E754C LDR X1, [X23]
	0x021E7550 ADD X0, X31, 0x20
	0x021E7554 BL 0x2BC4350
	0x021E7558 TBZ X0, 0x0, 0x21E7648
	0x021E755C LDR X8, [X20 + 0x38]
	0x021E7560 LDR X21, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X2
	008 Move W21, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {22}
	012 Move X0, 0x1F0D000
	013 Move X0, [X0+1728]
	014 Move X22, X3
	015 Call 0x1C17CF4
	016 Move X8, [X22+56]
	017 Compare X8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X22
	020 Call 0x1C5D6E0
	021 Move X8, [X22+56]
	022 Move X9, 0x1F0D000
	023 Move X9, [X9+1728]
	024 Move X22, [X8]
	025 Move X0, [X9]
	026 Move W9, [X0+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move X1, X31
	032 Call Type.GetTypeFromHandle, X0
	033 And W4, W21, 1
	034 Move X1, X0
	035 Move X0, X20
	036 Move X6, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move W2, 1
	042 Move W3, 1
	043 Move W5, 1
	044 Move X7, X31
	045 Move X30, [X31+48]
	046 Call GameObject.GetComponentsInternal, X0, X1, X2, X3, X4, X5, X6
	047 Return 

Method: T[] GetComponentsInParent(System.Boolean includeInactive)

Disassembly:
	0x021E7308 MOV X0, X1
	0x021E730C BL 0x1C5C684
	0x021E7310 MOV X1, X0
	0x021E7314 MOV X0, X21
	0x021E7318 BL 0x1C16E00
	0x021E731C LDR X8, [X20 + 0x38]
	0x021E7320 MOV X21, X0
	0x021E7324 LDR X22, [X8 + 0x10]
	0x021E7328 LDRB W8, [X22 + 0x135]
	0x021E732C TBNZ X8, 0x0, 0x21E733C
	0x021E7330 MOV X0, X22
	0x021E7334 BL 0x1C5C684
	0x021E7338 MOV X22, X0
	0x021E733C CBZ X21, 0x21E7358
	0x021E7340 MOV X0, X21
	0x021E7344 MOV X1, X22
	0x021E7348 BL 0x1C16E00
	0x021E734C MOV X1, X0
	0x021E7350 CBNZ X1, 0x21E735C
	0x021E7354 B 0x21E73E8
	0x021E7358 MOV X1, X31
	0x021E735C LDR X9, [X20 + 0x38]
	0x021E7360 LDR W10, [X19 + 0x1C]
	0x021E7364 LDR X8, [X19 + 0x10]
	0x021E7368 LDR X9, [X9 + 0x18]
	0x021E736C ADD W10, W10, 0x1
	0x021E7370 STR W10, [X19 + 0x1C]
	0x021E7374 CBZ X8, 0x21E73E4
	0x021E7378 LDRSW X10, [X19 + 0x18]
	0x021E737C LDR W11, [X8 + 0x18]
	0x021E7380 CMP W10, W11
	0x021E7384 B.CS 0x21E739C
	0x021E7388 ADD W9, W10, 0x1
	0x021E738C ADD X8, X8, X10, 0x3, LSL
	0x021E7390 STR W9, [X19 + 0x18]
	0x021E7394 STR X1, [X8 + 0x20]
	0x021E7398 B 0x21E72B8
	0x021E739C LDR X8, [X9 + 0x20]
	0x021E73A0 LDR X8, [X8 + 0xC0]
	0x021E73A4 LDR X2, [X8 + 0x70]
	0x021E73A8 MOV X0, X19
	0x021E73AC BL 0x301BF90
	0x021E73B0 B 0x21E72B8
	0x021E73B4 ADRP X8, 0x1F12000
	0x021E73B8 LDR X8, [X8 + 0xB38]
	0x021E73BC ADD X0, X31, 0x20
	0x021E73C0 LDR X1, [X8]
	0x021E73C4 BL 0x2BC434C
	0x021E73C8 MOV X0, X19
	0x021E73CC LDP X20, X19, [X31 + 0x60]
	0x021E73D0 LDP X22, X21, [X31 + 0x50]
	0x021E73D4 LDP X30, X23, [X31 + 0x40]
	0x021E73D8 ADD X31, X31, 0x70
	0x021E73DC RET
	0x021E73E0 BL 0x1C16F20
	0x021E73E4 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move W21, W1
	009 Move X20, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {21}
	012 Move X0, 0x1F0D000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Move X8, [X19+56]
	021 Move X9, 0x1F0D000
	022 Move X9, [X9+1728]
	023 Move X22, [X8]
	024 Move X0, [X9]
	025 Move W9, [X0+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Call Type.GetTypeFromHandle, X0
	032 Move X1, X0
	033 And W4, W21, 1
	034 Move W2, 1
	035 Move W3, 1
	036 Move W5, 1
	037 Move X0, X20
	038 Move X6, X31
	039 Move X7, X31
	040 Call GameObject.GetComponentsInternal, X0, X1, X2, X3, X4, X5, X6
	041 Move X8, [X19+56]
	042 Move X20, X0
	043 Move X19, [X8+8]
	044 Move W8, [X19+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X19
	050 Call 0x1C5D684
	051 Move X19, X0
	052 Compare X20, 0
	053 JumpIfEqual {62}
	054 Move X0, X20
	055 Move X1, X19
	056 Call 0x1C17E00
	057 Compare X0, 0
	058 JumpIfNotEqual {63}
	059 Move X0, X20
	060 Move X1, X19
	061 Call 0x1C181E0
	062 Move X0, X31
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Return X0

Method: System.Boolean TryGetComponent(out T component)

Disassembly:
	0x021E7600 ADD W10, W10, 0x1
	0x021E7604 STR W10, [X19 + 0x1C]
	0x021E7608 CBZ X8, 0x21E7678
	0x021E760C LDRSW X10, [X19 + 0x18]
	0x021E7610 LDR W11, [X8 + 0x18]
	0x021E7614 CMP W10, W11
	0x021E7618 B.CS 0x21E7630
	0x021E761C ADD W9, W10, 0x1
	0x021E7620 ADD X8, X8, X10, 0x3, LSL
	0x021E7624 STR W9, [X19 + 0x18]
	0x021E7628 STR X1, [X8 + 0x20]
	0x021E762C B 0x21E754C
	0x021E7630 LDR X8, [X9 + 0x20]
	0x021E7634 LDR X8, [X8 + 0xC0]
	0x021E7638 LDR X2, [X8 + 0x70]
	0x021E763C MOV X0, X19
	0x021E7640 BL 0x301BF90
	0x021E7644 B 0x21E754C
	0x021E7648 ADRP X8, 0x1F12000
	0x021E764C LDR X8, [X8 + 0xB38]
	0x021E7650 ADD X0, X31, 0x20
	0x021E7654 LDR X1, [X8]
	0x021E7658 BL 0x2BC434C
	0x021E765C MOV X0, X19
	0x021E7660 LDP X20, X19, [X31 + 0x60]
	0x021E7664 LDP X22, X21, [X31 + 0x50]
	0x021E7668 LDP X30, X23, [X31 + 0x40]
	0x021E766C ADD X31, X31, 0x70
	0x021E7670 RET
	0x021E7674 BL 0x1C16F20
	0x021E7678 BL 0x1C16F20
	0x021E767C MOV X0, X21
	0x021E7680 MOV X1, X22
	0x021E7684 BL 0x1C171E0
	0x021E7688 BL 0x1C16F20
	0x021E768C B 0x21E7698
	0x021E7690 B 0x21E7698
	0x021E7694 B 0x21E7698
	0x021E7698 MOV X20, X0
	0x021E769C CMP W1, 0x1
	0x021E76A0 B.NE 0x21E76D4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {21}
	011 Move X0, 0x1F0D000
	012 Move X0, [X0+1728]
	013 Move X21, X2
	014 Call 0x1C17CF4
	015 Move X8, [X21+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X21
	019 Call 0x1C5D6E0
	020 Move X8, [X21+56]
	021 Move X9, 0x1F0D000
	022 Move X9, [X9+1728]
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Move X21, [X8+8]
	026 Move X0, [X9]
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X31
	033 Call Type.GetTypeFromHandle, X0
	034 Add X8, X31, 0
	035 Move X1, X0
	036 Add X2, X8, 8
	037 Move X0, X20
	038 Move X3, X31
	039 Call GameObject.TryGetComponentFastPath, X0, X1, X2
	040 Move X8, [X31]
	041 Move X30, [X31+16]
	042 Move X21, [X31+24]
	043 Move [X19], X8
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Add X31, X31, 48
	049 Return X0

Method: System.Boolean TryGetComponent(System.Type type, out UnityEngine.Component component)

Disassembly:
	0x03C34078 CSEL X8, X8, X31, EQ
	0x03C3407C CBZ X23, 0x3C3411C
	0x03C34080 ADD X8, X31, 0xD0
	0x03C34084 ADD X25, X31, 0xD0
	0x03C34088 ADD X19, X8, 0x20
	0x03C3408C B 0x3C34170
	0x03C34090 ADRP X8, 0x4BF000
	0x03C34094 LDR X8, [X8 + 0xAC8]
	0x03C34098 MOVZ W1, 0x1
	0x03C3409C LDR X0, [X8]
	0x03C340A0 BL 0x1C16D6C
	0x03C340A4 CBZ X0, 0x3C34514
	0x03C340A8 LDR W8, [X0 + 0x18]
	0x03C340AC MOV X20, X0
	0x03C340B0 CBZ W8, 0x3C33E44
	0x03C340B4 ADRP X8, 0x4BF000
	0x03C340B8 LDR X8, [X8 + 0x988]
	0x03C340BC MOV W1, W31
	0x03C340C0 LDR X8, [X8]
	0x03C340C4 STR X8, [X20 + 0x20]
	0x03C340C8 ADRP X8, 0x52B000
	0x03C340CC LDR X8, [X8 + 0x420]
	0x03C340D0 LDR X0, [X8]
	0x03C340D4 BL 0x1C16D6C
	0x03C340D8 ADRP X8, 0x4C0000
	0x03C340DC LDR X8, [X8 + 0xE58]
	0x03C340E0 MOV X21, X0
	0x03C340E4 MOVZ W1, 0x1
	0x03C340E8 MOVZ W19, 0x1
	0x03C340EC LDR X8, [X8]
	0x03C340F0 MOV X0, X8
	0x03C340F4 BL 0x1C16D6C
	0x03C340F8 STP X21, X0, [X31 + 0xD0]
	0x03C340FC STP X20, X20, [X31 + 0xE0]
	0x03C34100 STR X20, [X31 + 0xF0]
	0x03C34104 STRB W19, [X31 + 0xF8]
	0x03C34108 STRB W19, [X31 + 0x109]
	0x03C3410C LDP V0, V1, [X31 + 0xD0]
	0x03C34110 LDP V2, V3, [X31 + 0xF0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x7B2000
	008 Move W8, [X22+856]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4C0000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+856], W8
	021 Move X23, 0x7B2000
	022 Move X22, 0x4C0000
	023 Move X8, [X23+864]
	024 Move X22, [X22+1432]
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -51560448
	028 Add X0, X0, 542
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X23+864], X0
	032 Move X0, X21
	033 Move X1, X20
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move [X19], X0
	036 Move X20, X0
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call Object.op_Inequality, X0, X1
	051 Return X0

Method: UnityEngine.Component TryGetComponentInternal(System.Type type)

Disassembly:
	0x03C364B4 MOV X2, X0
	0x03C364B8 STR X0, [X21 + 0x450]
	0x03C364BC MOV X0, X20
	0x03C364C0 MOV X1, X19
	0x03C364C4 LDP X20, X19, [X31 + 0x10]
	0x03C364C8 LDP X30, X21, [X31], #0x20
	0x03C364CC BR X2
	0x03C364D0 STP X30, X21, [X31 - 0x20]!
	0x03C364D4 STP X20, X19, [X31 + 0x10]
	0x03C364D8 ADRP X21, 0x7AF000
	0x03C364DC LDR X2, [X21 + 0x458]
	0x03C364E0 MOV X19, X1
	0x03C364E4 MOV X20, X0
	0x03C364E8 CBNZ X2, 0x3C36500
	0x03C364EC ADRP X0, 0xFFFFFFFFFCEC9000
	0x03C364F0 ADD X0, X0, 0x2D0
	0x03C364F4 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B0000
	006 Move X2, [X21+864]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51568640
	012 Add X0, X0, 542
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+864], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void TryGetComponentFastPath(System.Type type, System.IntPtr oneFurtherThanResultValue)

Disassembly:
	0x03C36568 STP X20, X19, [X31 + 0x20]
	0x03C3656C MOV X20, X1
	0x03C36570 MOV X21, X0
	0x03C36574 MOV X0, X1
	0x03C36578 MOV X1, X31
	0x03C3657C MOV X19, X2
	0x03C36580 BL 0x32277A8
	0x03C36584 TBNZ X0, 0x0, 0x3C365F0
	0x03C36588 ADRP X22, 0x7AF000
	0x03C3658C LDR X8, [X22 + 0x460]
	0x03C36590 CBNZ X8, 0x3C365A8
	0x03C36594 ADRP X0, 0xFFFFFFFFFCECD000
	0x03C36598 ADD X0, X0, 0x10B
	0x03C3659C BL 0x1C16CB8
	0x03C365A0 MOV X8, X0
	0x03C365A4 STR X0, [X22 + 0x460]
	0x03C365A8 MOV X0, X21
	0x03C365AC BLR X8
	0x03C365B0 TBZ X0, 0x0, 0x3C36624
	0x03C365B4 ADRP X22, 0x7AF000
	0x03C365B8 LDR X3, [X22 + 0x468]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B0000
	007 Move X3, [X22+872]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51617792
	014 Add X0, X0, 755
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+872], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SendMessage(System.String methodName, UnityEngine.SendMessageOptions options)

Disassembly:
	0x03C365BC CBNZ X3, 0x3C365D4
	0x03C365C0 ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C365C4 ADD X0, X0, 0x1E6
	0x03C365C8 BL 0x1C16CB8
	0x03C365CC MOV X3, X0
	0x03C365D0 STR X0, [X22 + 0x468]
	0x03C365D4 MOV X0, X21
	0x03C365D8 MOV X1, X20
	0x03C365DC MOV X2, X19
	0x03C365E0 LDP X20, X19, [X31 + 0x20]
	0x03C365E4 LDP X22, X21, [X31 + 0x10]
	0x03C365E8 LDR X30, [X31], #0x30
	0x03C365EC BR X3
	0x03C365F0 ADRP X0, 0x4C8000
	0x03C365F4 LDR X0, [X0 + 0xA18]
	0x03C365F8 BL 0x1C16D08
	0x03C365FC BL 0x1C16F10
	0x03C36600 MOV X19, X0
	0x03C36604 ADRP X0, 0x529000
	0x03C36608 LDR X0, [X0 + 0x570]
	0x03C3660C BL 0x1C16D08
	0x03C36610 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B0000
	007 Move X4, [X22+976]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X4, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51658752
	014 Add X0, X0, 340
	015 Call 0x1C17CB8
	016 Move X4, X0
	017 Move [X22+976], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W3, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X2, X31
	026 Move X30, [X31+48]
	027 CallNoReturn X4

Method: UnityEngine.Component Internal_AddComponentWithType(System.Type componentType)

Disassembly:
	0x03C36670 STP X20, X19, [X31 + 0x10]
	0x03C36674 ADRP X20, 0x7AF000
	0x03C36678 LDR X1, [X20 + 0x460]
	0x03C3667C MOV X19, X0
	0x03C36680 CBNZ X1, 0x3C36698
	0x03C36684 ADRP X0, 0xFFFFFFFFFCECD000
	0x03C36688 ADD X0, X0, 0x10B
	0x03C3668C BL 0x1C16CB8
	0x03C36690 MOV X1, X0
	0x03C36694 STR X0, [X20 + 0x460]
	0x03C36698 MOV X0, X19
	0x03C3669C LDP X20, X19, [X31 + 0x10]
	0x03C366A0 LDR X30, [X31], #0x20
	0x03C366A4 BR X1
	0x03C366A8 STR X30, [X31 - 0x30]!
	0x03C366AC STP X22, X21, [X31 + 0x10]
	0x03C366B0 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B0000
	006 Move X2, [X21+880]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51634176
	012 Add X0, X0, 666
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+880], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Component AddComponent(System.Type componentType)

Disassembly:
	0x03C366B4 ADRP X22, 0x7AF000
	0x03C366B8 LDR X3, [X22 + 0x468]
	0x03C366BC MOV X19, X2
	0x03C366C0 MOV X20, X1
	0x03C366C4 MOV X21, X0
	0x03C366C8 CBNZ X3, 0x3C366E0
	0x03C366CC ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C366D0 ADD X0, X0, 0x1E6
	0x03C366D4 BL 0x1C16CB8
	0x03C366D8 MOV X3, X0
	0x03C366DC STR X0, [X22 + 0x468]
	0x03C366E0 MOV X0, X21
	0x03C366E4 MOV X1, X20
	0x03C366E8 MOV X2, X19
	0x03C366EC LDP X20, X19, [X31 + 0x20]
	0x03C366F0 LDP X22, X21, [X31 + 0x10]
	0x03C366F4 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B0000
	006 Move X2, [X21+880]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51634176
	012 Add X0, X0, 666
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+880], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: T AddComponent()

Disassembly:
	0x021E61FC BL 0x1C16CF4
	0x021E6200 LDR X8, [X22 + 0x38]
	0x021E6204 CBNZ X8, 0x21E6214
	0x021E6208 MOV X0, X22
	0x021E620C BL 0x1C5C6E0
	0x021E6210 LDR X8, [X22 + 0x38]
	0x021E6214 ADRP X9, 0x1F0D000
	0x021E6218 LDR X9, [X9 + 0x6C0]
	0x021E621C LDR X22, [X8]
	0x021E6220 LDR X0, [X9]
	0x021E6224 LDR W9, [X0 + 0xE0]
	0x021E6228 CBNZ W9, 0x21E6230
	0x021E622C BL 0x1C16DFC
	0x021E6230 MOV X0, X22
	0x021E6234 MOV X1, X31
	0x021E6238 BL 0x338C698
	0x021E623C AND W4, W21, 0x1
	0x021E6240 MOV X1, X0
	0x021E6244 MOV X0, X20
	0x021E6248 MOV X6, X19
	0x021E624C LDP X20, X19, [X31 + 0x20]
	0x021E6250 LDP X22, X21, [X31 + 0x10]
	0x021E6254 MOVZ W2, 0x1
	0x021E6258 MOVZ W3, 0x1
	0x021E625C MOV W5, W31
	0x021E6260 MOV X7, X31
	0x021E6264 LDR X30, [X31], #0x30
	0x021E6268 B 0x3C35430
	0x021E626C STR X30, [X31 - 0x30]!
	0x021E6270 STP X22, X21, [X31 + 0x10]
	0x021E6274 STP X20, X19, [X31 + 0x20]
	0x021E6278 LDR X8, [X3 + 0x38]
	0x021E627C MOV X19, X2
	0x021E6280 MOV W21, W1
	0x021E6284 MOV X20, X0
	0x021E6288 CBNZ X8, 0x21E62B0
	0x021E628C ADRP X0, 0x1F0D000
	0x021E6290 LDR X0, [X0 + 0x6C0]
	0x021E6294 MOV X22, X3
	0x021E6298 BL 0x1C16CF4
	0x021E629C LDR X8, [X22 + 0x38]
	0x021E62A0 CBNZ X8, 0x21E62B0
	0x021E62A4 MOV X0, X22
	0x021E62A8 BL 0x1C5C6E0
	0x021E62AC LDR X8, [X22 + 0x38]
	0x021E62B0 ADRP X9, 0x1F0D000
	0x021E62B4 LDR X9, [X9 + 0x6C0]
	0x021E62B8 LDR X22, [X8]
	0x021E62BC LDR X0, [X9]
	0x021E62C0 LDR W9, [X0 + 0xE0]
	0x021E62C4 CBNZ W9, 0x21E62CC
	0x021E62C8 BL 0x1C16DFC
	0x021E62CC MOV X0, X22
	0x021E62D0 MOV X1, X31
	0x021E62D4 BL 0x338C698
	0x021E62D8 AND W4, W21, 0x1
	0x021E62DC MOV X1, X0
	0x021E62E0 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {19}
	010 Move X0, 0x1F0E000
	011 Move X0, [X0+1728]
	012 Call 0x1C17CF4
	013 Move X8, [X19+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move X8, [X19+56]
	019 Move X9, 0x1F0E000
	020 Move X9, [X9+1728]
	021 Move X21, [X8]
	022 Move X0, [X9]
	023 Move W9, [X0+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Call Type.GetTypeFromHandle, X0
	030 Move X1, X0
	031 Move X0, X20
	032 Move X2, X31
	033 Call GameObject.AddComponent, X0, X1
	034 Move X8, [X19+56]
	035 Move X20, X0
	036 Move X1, [X8+8]
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Move X0, X20
	046 Call 0x1C17E00
	047 Move X8, [X19+56]
	048 Move X20, X0
	049 Move X19, [X8+8]
	050 Move W8, [X19+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {58}
	055 Move X0, X19
	056 Call 0x1C5D684
	057 Move X19, X0
	058 Compare X20, 0
	059 JumpIfEqual {68}
	060 Move X0, X20
	061 Move X1, X19
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfNotEqual {69}
	065 Move X0, X20
	066 Move X1, X19
	067 Call 0x1C181E0
	068 Move X0, X31
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0

Method: UnityEngine.Transform get_transform()

Disassembly:
	0x03C366F8 BR X3
	0x03C366FC STP X30, X21, [X31 - 0x20]!
	0x03C36700 STP X20, X19, [X31 + 0x10]
	0x03C36704 CBZ X1, 0x3C36770
	0x03C36708 ADRP X21, 0x7AF000
	0x03C3670C LDR X8, [X21 + 0x460]
	0x03C36710 MOV X19, X1
	0x03C36714 MOV X20, X0
	0x03C36718 CBNZ X8, 0x3C36730
	0x03C3671C ADRP X0, 0xFFFFFFFFFCECD000
	0x03C36720 ADD X0, X0, 0x10B
	0x03C36724 BL 0x1C16CB8
	0x03C36728 MOV X8, X0
	0x03C3672C STR X0, [X21 + 0x460]
	0x03C36730 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B0000
	005 Move X1, [X20+888]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51453952
	010 Add X0, X0, 490
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+888], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_layer()

Disassembly:
	0x03C36734 BLR X8
	0x03C36738 TBZ X0, 0x0, 0x3C367A4
	0x03C3673C ADRP X21, 0x7AF000
	0x03C36740 LDR X2, [X21 + 0x470]
	0x03C36744 CBNZ X2, 0x3C3675C
	0x03C36748 ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C3674C ADD X0, X0, 0x156
	0x03C36750 BL 0x1C16CB8
	0x03C36754 MOV X2, X0
	0x03C36758 STR X0, [X21 + 0x470]
	0x03C3675C MOV X0, X20
	0x03C36760 MOV X1, X19
	0x03C36764 LDP X20, X19, [X31 + 0x10]
	0x03C36768 LDP X30, X21, [X31], #0x20
	0x03C3676C BR X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B0000
	005 Move X1, [X20+896]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51490816
	010 Add X0, X0, 3374
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+896], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_layer(System.Int32 value)

Disassembly:
	0x03C36770 ADRP X0, 0x4C8000
	0x03C36774 LDR X0, [X0 + 0xA18]
	0x03C36778 BL 0x1C16D08
	0x03C3677C BL 0x1C16F10
	0x03C36780 MOV X19, X0
	0x03C36784 ADRP X0, 0x529000
	0x03C36788 LDR X0, [X0 + 0x588]
	0x03C3678C BL 0x1C16D08
	0x03C36790 MOV X1, X0
	0x03C36794 MOV X0, X19
	0x03C36798 MOV X2, X31
	0x03C3679C BL 0x33803F4
	0x03C367A0 B 0x3C367D4
	0x03C367A4 ADRP X0, 0x4C5000
	0x03C367A8 LDR X0, [X0 + 0x578]
	0x03C367AC BL 0x1C16D08
	0x03C367B0 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B0000
	006 Move X2, [X21+904]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51515392
	012 Add X0, X0, 2660
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+904], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetActive(System.Boolean value)

Disassembly:
	0x03C367B4 MOV X19, X0
	0x03C367B8 ADRP X0, 0x529000
	0x03C367BC LDR X0, [X0 + 0x578]
	0x03C367C0 BL 0x1C16D08
	0x03C367C4 MOV X1, X0
	0x03C367C8 MOV X0, X19
	0x03C367CC MOV X2, X31
	0x03C367D0 BL 0x3314A68
	0x03C367D4 ADRP X0, 0x529000
	0x03C367D8 LDR X0, [X0 + 0x590]
	0x03C367DC BL 0x1C16D08
	0x03C367E0 MOV X1, X0
	0x03C367E4 MOV X0, X19
	0x03C367E8 BL 0x1C16DEC
	0x03C367EC STP X30, X21, [X31 - 0x20]!
	0x03C367F0 STP X20, X19, [X31 + 0x10]
	0x03C367F4 ADRP X21, 0x7AF000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B0000
	006 Move X2, [X21+912]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51453952
	012 Add X0, X0, 530
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+912], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_activeSelf()

Disassembly:
	0x03C367F8 LDR X2, [X21 + 0x470]
	0x03C367FC MOV X19, X1
	0x03C36800 MOV X20, X0
	0x03C36804 CBNZ X2, 0x3C3681C
	0x03C36808 ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C3680C ADD X0, X0, 0x156
	0x03C36810 BL 0x1C16CB8
	0x03C36814 MOV X2, X0
	0x03C36818 STR X0, [X21 + 0x470]
	0x03C3681C MOV X0, X20
	0x03C36820 MOV X1, X19
	0x03C36824 LDP X20, X19, [X31 + 0x10]
	0x03C36828 LDP X30, X21, [X31], #0x20
	0x03C3682C BR X2
	0x03C36830 B 0x3C366FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B0000
	005 Move X1, [X20+920]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51642368
	010 Add X0, X0, 1031
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+920], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_activeInHierarchy()

Disassembly:
	0x03C36834 STP X30, X21, [X31 - 0x20]!
	0x03C36838 STP X20, X19, [X31 + 0x10]
	0x03C3683C CBZ X1, 0x3C368A8
	0x03C36840 ADRP X21, 0x7AF000
	0x03C36844 LDR X8, [X21 + 0x460]
	0x03C36848 MOV X19, X1
	0x03C3684C MOV X20, X0
	0x03C36850 CBNZ X8, 0x3C36868
	0x03C36854 ADRP X0, 0xFFFFFFFFFCECD000
	0x03C36858 ADD X0, X0, 0x10B
	0x03C3685C BL 0x1C16CB8
	0x03C36860 MOV X8, X0
	0x03C36864 STR X0, [X21 + 0x460]
	0x03C36868 MOV X0, X20
	0x03C3686C BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B0000
	005 Move X1, [X20+928]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51453952
	010 Add X0, X0, 580
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+928], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_isStatic(System.Boolean value)

Disassembly:
	0x03C36870 TBZ X0, 0x0, 0x3C368DC
	0x03C36874 ADRP X21, 0x7AF000
	0x03C36878 LDR X2, [X21 + 0x480]
	0x03C3687C CBNZ X2, 0x3C36894
	0x03C36880 ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C36884 ADD X0, X0, 0xDD0
	0x03C36888 BL 0x1C16CB8
	0x03C3688C MOV X2, X0
	0x03C36890 STR X0, [X21 + 0x480]
	0x03C36894 MOV X0, X20
	0x03C36898 MOV X1, X19
	0x03C3689C LDP X20, X19, [X31 + 0x10]
	0x03C368A0 LDP X30, X21, [X31], #0x20
	0x03C368A4 BR X2
	0x03C368A8 ADRP X0, 0x4C8000
	0x03C368AC LDR X0, [X0 + 0xA18]
	0x03C368B0 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B0000
	006 Move X2, [X21+936]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51417088
	012 Add X0, X0, 2445
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+936], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.String get_tag()

Disassembly:
	0x03C343E4 LDR X23, [X8]
	0x03C343E8 CBNZ W9, 0x3C343F0
	0x03C343EC BL 0x1C16DFC
	0x03C343F0 MOV X0, X23
	0x03C343F4 MOV X1, X31
	0x03C343F8 BL 0x338C698
	0x03C343FC MOV X1, X0
	0x03C34400 MOV X0, X22
	0x03C34404 MOV X2, X31
	0x03C34408 BL 0x3395194
	0x03C3440C ADRP X24, 0x52B000
	0x03C34410 LDR X19, [X31 + 0x8]
	0x03C34414 LDR X24, [X24 + 0x4B0]
	0x03C34418 TBZ X0, 0x0, 0x3C3447C
	0x03C3441C LDR X10, [X31 + 0xD8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B2000
	005 Move X1, [X20+944]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51650560
	010 Add X0, X0, 256
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+944], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_tag(System.String value)

Disassembly:
	0x03C368B4 BL 0x1C16F10
	0x03C368B8 MOV X19, X0
	0x03C368BC ADRP X0, 0x529000
	0x03C368C0 LDR X0, [X0 + 0x588]
	0x03C368C4 BL 0x1C16D08
	0x03C368C8 MOV X1, X0
	0x03C368CC MOV X0, X19
	0x03C368D0 MOV X2, X31
	0x03C368D4 BL 0x33803F4
	0x03C368D8 B 0x3C3690C
	0x03C368DC ADRP X0, 0x4C5000
	0x03C368E0 LDR X0, [X0 + 0x578]
	0x03C368E4 BL 0x1C16D08
	0x03C368E8 BL 0x1C16F10
	0x03C368EC MOV X19, X0
	0x03C368F0 ADRP X0, 0x529000
	0x03C368F4 LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B0000
	006 Move X2, [X21+952]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51417088
	012 Add X0, X0, 2498
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+952], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean CompareTag(System.String tag)

Disassembly:
	0x03C34498 BL 0x1C16DFC
	0x03C3449C MOV X0, X23
	0x03C344A0 MOV X1, X31
	0x03C344A4 BL 0x338C698
	0x03C344A8 MOV X1, X0
	0x03C344AC MOV X0, X22
	0x03C344B0 MOV X2, X31
	0x03C344B4 BL 0x3395194
	0x03C344B8 TBZ X0, 0x0, 0x3C34518
	0x03C344BC LDR X11, [X31 + 0xD8]
	0x03C344C0 CBZ X11, 0x3C34514
	0x03C344C4 LDR X9, [X11 + 0x18]
	0x03C344C8 CMP W9, 0x1
	0x03C344CC B.LT 0x3C34518
	0x03C344D0 AND X9, X9, 0x0
	0x03C344D4 MOV X8, X31
	0x03C344D8 SUB X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B2000
	006 Move X2, [X21+960]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51650560
	012 Add X0, X0, 290
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+960], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.GameObject[] FindGameObjectsWithTag(System.String tag)

Disassembly:
	0x03C368F8 BL 0x1C16D08
	0x03C368FC MOV X1, X0
	0x03C36900 MOV X0, X19
	0x03C36904 MOV X2, X31
	0x03C36908 BL 0x3314A68
	0x03C3690C ADRP X0, 0x529000
	0x03C36910 LDR X0, [X0 + 0x598]
	0x03C36914 BL 0x1C16D08
	0x03C36918 MOV X1, X0
	0x03C3691C MOV X0, X19
	0x03C36920 BL 0x1C16DEC
	0x03C36924 STP X30, X21, [X31 - 0x20]!
	0x03C36928 STP X20, X19, [X31 + 0x10]
	0x03C3692C ADRP X21, 0x7AF000
	0x03C36930 LDR X2, [X21 + 0x480]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B0000
	005 Move X1, [X20+968]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51433472
	010 Add X0, X0, 2313
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+968], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SendMessage(System.String methodName, System.Object value, UnityEngine.SendMessageOptions options)

Disassembly:
	0x03C36614 MOV X0, X19
	0x03C36618 MOV X2, X31
	0x03C3661C BL 0x33803F4
	0x03C36620 B 0x3C36654
	0x03C36624 ADRP X0, 0x4C5000
	0x03C36628 LDR X0, [X0 + 0x578]
	0x03C3662C BL 0x1C16D08
	0x03C36630 BL 0x1C16F10
	0x03C36634 MOV X19, X0
	0x03C36638 ADRP X0, 0x529000
	0x03C3663C LDR X0, [X0 + 0x578]
	0x03C36640 BL 0x1C16D08
	0x03C36644 MOV X1, X0
	0x03C36648 MOV X0, X19
	0x03C3664C MOV X2, X31
	0x03C36650 BL 0x3314A68
	0x03C36654 ADRP X0, 0x529000
	0x03C36658 LDR X0, [X0 + 0x580]
	0x03C3665C BL 0x1C16D08
	0x03C36660 MOV X1, X0
	0x03C36664 MOV X0, X19
	0x03C36668 BL 0x1C16DEC
	0x03C3666C STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7B0000
	008 Move X4, [X23+976]
	009 Move W19, W3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51658752
	016 Add X0, X0, 340
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+976], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void .ctor(System.String name)

Disassembly:
	0x03C36934 MOV X19, X1
	0x03C36938 MOV X20, X0
	0x03C3693C CBNZ X2, 0x3C36954
	0x03C36940 ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C36944 ADD X0, X0, 0xDD0
	0x03C36948 BL 0x1C16CB8
	0x03C3694C MOV X2, X0
	0x03C36950 STR X0, [X21 + 0x480]
	0x03C36954 MOV X0, X20
	0x03C36958 MOV X1, X19
	0x03C3695C LDP X20, X19, [X31 + 0x10]
	0x03C36960 LDP X30, X21, [X31], #0x20
	0x03C36964 BR X2
	0x03C36968 STP X30, X21, [X31 - 0x20]!
	0x03C3696C STP X20, X19, [X31 + 0x10]
	0x03C36970 CBZ X1, 0x3C369DC
	0x03C36974 ADRP X21, 0x7AF000
	0x03C36978 LDR X8, [X21 + 0x460]
	0x03C3697C MOV X19, X1
	0x03C36980 MOV X20, X0
	0x03C36984 CBNZ X8, 0x3C3699C
	0x03C36988 ADRP X0, 0xFFFFFFFFFCECD000
	0x03C3698C ADD X0, X0, 0x10B
	0x03C36990 BL 0x1C16CB8
	0x03C36994 MOV X8, X0
	0x03C36998 STR X0, [X21 + 0x460]
	0x03C3699C MOV X0, X20
	0x03C369A0 BLR X8
	0x03C369A4 TBZ X0, 0x0, 0x3C36A10
	0x03C369A8 ADRP X21, 0x7AF000
	0x03C369AC LDR X2, [X21 + 0x478]
	0x03C369B0 CBNZ X2, 0x3C369C8
	0x03C369B4 ADRP X0, 0xFFFFFFFFFCEC1000
	0x03C369B8 ADD X0, X0, 0x2DD
	0x03C369BC BL 0x1C16CB8
	0x03C369C0 MOV X2, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7B0000
	007 Move X22, 0x4BE000
	008 Move W8, [X21+984]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4BE000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+984], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call Object..ctor, X0
	029 Move X21, 0x7B0000
	030 Move X2, [X21+992]
	031 Compare X2, 0
	032 JumpIfNotEqual {38}
	033 Move X0, -51585024
	034 Add X0, X0, 179
	035 Call 0x1C17CB8
	036 Move X2, X0
	037 Move [X21+992], X0
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 CallNoReturn X2

Method: System.Void .ctor()

Disassembly:
	0x03C36A08 BL 0x33803F4
	0x03C36A0C B 0x3C36A40
	0x03C36A10 ADRP X0, 0x4C5000
	0x03C36A14 LDR X0, [X0 + 0x578]
	0x03C36A18 BL 0x1C16D08
	0x03C36A1C BL 0x1C16F10
	0x03C36A20 MOV X19, X0
	0x03C36A24 ADRP X0, 0x529000
	0x03C36A28 LDR X0, [X0 + 0x578]
	0x03C36A2C BL 0x1C16D08
	0x03C36A30 MOV X1, X0
	0x03C36A34 MOV X0, X19
	0x03C36A38 MOV X2, X31
	0x03C36A3C BL 0x3314A68
	0x03C36A40 ADRP X0, 0x529000
	0x03C36A44 LDR X0, [X0 + 0x5A0]
	0x03C36A48 BL 0x1C16D08
	0x03C36A4C MOV X1, X0
	0x03C36A50 MOV X0, X19
	0x03C36A54 BL 0x1C16DEC
	0x03C36A58 STP X30, X21, [X31 - 0x20]!
	0x03C36A5C STP X20, X19, [X31 + 0x10]
	0x03C36A60 ADRP X21, 0x7AF000
	0x03C36A64 LDR X2, [X21 + 0x478]
	0x03C36A68 MOV X19, X1
	0x03C36A6C MOV X20, X0
	0x03C36A70 CBNZ X2, 0x3C36A88
	0x03C36A74 ADRP X0, 0xFFFFFFFFFCEC1000
	0x03C36A78 ADD X0, X0, 0x2DD
	0x03C36A7C BL 0x1C16CB8
	0x03C36A80 MOV X2, X0
	0x03C36A84 STR X0, [X21 + 0x478]
	0x03C36A88 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7B0000
	006 Move X21, 0x4BE000
	007 Move W8, [X20+985]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4BE000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+985], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Object..ctor, X0
	027 Move X20, 0x7B0000
	028 Move X2, [X20+992]
	029 Compare X2, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51585024
	032 Add X0, X0, 179
	033 Call 0x1C17CB8
	034 Move X2, X0
	035 Move [X20+992], X0
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X1, X31
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 CallNoReturn X2

Method: System.Void .ctor(System.String name, System.Type[] components)

Disassembly:
	0x03C36A8C MOV X1, X19
	0x03C36A90 LDP X20, X19, [X31 + 0x10]
	0x03C36A94 LDP X30, X21, [X31], #0x20
	0x03C36A98 BR X2
	0x03C36A9C STP X30, X21, [X31 - 0x20]!
	0x03C36AA0 STP X20, X19, [X31 + 0x10]
	0x03C36AA4 ADRP X21, 0x7AF000
	0x03C36AA8 LDR X2, [X21 + 0x410]
	0x03C36AAC MOV X19, X1
	0x03C36AB0 MOV X20, X0
	0x03C36AB4 CBNZ X2, 0x3C36ACC
	0x03C36AB8 ADRP X0, 0xFFFFFFFFFCEBF000
	0x03C36ABC ADD X0, X0, 0x430
	0x03C36AC0 BL 0x1C16CB8
	0x03C36AC4 MOV X2, X0
	0x03C36AC8 STR X0, [X21 + 0x410]
	0x03C36ACC MOV X0, X20
	0x03C36AD0 MOV X1, X19
	0x03C36AD4 LDP X20, X19, [X31 + 0x10]
	0x03C36AD8 LDP X30, X21, [X31], #0x20
	0x03C36ADC BR X2
	0x03C36AE0 STR X30, [X31 - 0x20]!
	0x03C36AE4 STP X20, X19, [X31 + 0x10]
	0x03C36AE8 ADRP X20, 0x7AF000
	0x03C36AEC LDR X1, [X20 + 0x418]
	0x03C36AF0 MOV X19, X0
	0x03C36AF4 CBNZ X1, 0x3C36B0C
	0x03C36AF8 ADRP X0, 0xFFFFFFFFFCEBB000
	0x03C36AFC ADD X0, X0, 0x1B4
	0x03C36B00 BL 0x1C16CB8
	0x03C36B04 MOV X1, X0
	0x03C36B08 STR X0, [X20 + 0x418]
	0x03C36B0C MOV X0, X19
	0x03C36B10 LDP X20, X19, [X31 + 0x10]
	0x03C36B14 LDR X30, [X31], #0x20
	0x03C36B18 BR X1
	0x03C36B1C STR X30, [X31 - 0x20]!
	0x03C36B20 STP X20, X19, [X31 + 0x10]
	0x03C36B24 ADRP X20, 0x7AF000
	0x03C36B28 LDR X1, [X20 + 0x420]
	0x03C36B2C MOV X19, X0
	0x03C36B30 CBNZ X1, 0x3C36B48
	0x03C36B34 ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C36B38 ADD X0, X0, 0xDA2
	0x03C36B3C BL 0x1C16CB8
	0x03C36B40 MOV X1, X0
	0x03C36B44 STR X0, [X20 + 0x420]
	0x03C36B48 MOV X0, X19
	0x03C36B4C LDP X20, X19, [X31 + 0x10]
	0x03C36B50 LDR X30, [X31], #0x20
	0x03C36B54 BR X1
	0x03C36B58 STP X30, X21, [X31 - 0x20]!
	0x03C36B5C STP X20, X19, [X31 + 0x10]
	0x03C36B60 ADRP X21, 0x7AF000
	0x03C36B64 LDR X2, [X21 + 0x428]
	0x03C36B68 MOV W19, W1
	0x03C36B6C MOV X20, X0
	0x03C36B70 CBNZ X2, 0x3C36B88
	0x03C36B74 ADRP X0, 0xFFFFFFFFFCEC7000
	0x03C36B78 ADD X0, X0, 0x61E
	0x03C36B7C BL 0x1C16CB8
	0x03C36B80 MOV X2, X0
	0x03C36B84 STR X0, [X21 + 0x428]
	0x03C36B88 AND W1, W19, 0x1
	0x03C36B8C MOV X0, X20
	0x03C36B90 LDP X20, X19, [X31 + 0x10]
	0x03C36B94 LDP X30, X21, [X31], #0x20
	0x03C36B98 BR X2

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x7B0000
	010 Move X23, 0x4BE000
	011 Move W8, [X22+986]
	012 Move X23, [X23+1432]
	013 Move X19, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x4BE000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+986], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move X22, 0x7B0000
	034 Move X8, [X22+992]
	035 Compare X8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, -51585024
	038 Add X0, X0, 179
	039 Call 0x1C17CB8
	040 Move X8, X0
	041 Move [X22+992], X0
	042 Move X0, X20
	043 Move X1, X21
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare X19, 0
	046 JumpIfEqual {80}
	047 Move X8, [X19+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X21, -51634176
	050 Move X23, X31
	051 And X8, X8, 0
	052 Add X24, X19, 32
	053 Move X25, 0x7B0000
	054 Add X21, X21, 666
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X25+880]
	057 Move X22, [X24]
	058 Compare X8, 0
	059 JumpIfNotEqual {64}
	060 Move X0, X21
	061 Call 0x1C17CB8
	062 Move X8, X0
	063 Move [X25+880], X0
	064 Move X0, X20
	065 Move X1, X22
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move W8, [X19+24]
	068 Add X23, X23, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X24, [X31+16]
	075 Move X23, [X31+24]
	076 Move X30, [X31+64]
	077 Move X25, [X31+72]
	078 Return 
	079 Call 0x1C17F28
	080 Call 0x1C17F20

Method: System.Void Internal_CreateGameObject(UnityEngine.GameObject self, System.String name)

Disassembly:
	0x03C369C4 STR X0, [X21 + 0x478]
	0x03C369C8 MOV X0, X20
	0x03C369CC MOV X1, X19
	0x03C369D0 LDP X20, X19, [X31 + 0x10]
	0x03C369D4 LDP X30, X21, [X31], #0x20
	0x03C369D8 BR X2
	0x03C369DC ADRP X0, 0x4C8000
	0x03C369E0 LDR X0, [X0 + 0xA18]
	0x03C369E4 BL 0x1C16D08
	0x03C369E8 BL 0x1C16F10
	0x03C369EC MOV X19, X0
	0x03C369F0 ADRP X0, 0x529000
	0x03C369F4 LDR X0, [X0 + 0x588]
	0x03C369F8 BL 0x1C16D08
	0x03C369FC MOV X1, X0
	0x03C36A00 MOV X0, X19
	0x03C36A04 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B0000
	006 Move X2, [X21+992]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51585024
	012 Add X0, X0, 179
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+992], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.GameObject Find(System.String name)

Disassembly:
	0x03C36B9C STP X30, X21, [X31 - 0x20]!
	0x03C36BA0 STP X20, X19, [X31 + 0x10]
	0x03C36BA4 ADRP X20, 0x7AF000
	0x03C36BA8 ADRP X21, 0x4BD000
	0x03C36BAC LDRB W8, [X20 + 0x430]
	0x03C36BB0 LDR X21, [X21 + 0xA28]
	0x03C36BB4 MOV X19, X0
	0x03C36BB8 TBNZ X8, 0x0, 0x3C36BD0
	0x03C36BBC ADRP X0, 0x4BD000
	0x03C36BC0 LDR X0, [X0 + 0xA28]
	0x03C36BC4 BL 0x1C16CF4
	0x03C36BC8 MOVZ W8, 0x1
	0x03C36BCC STRB W8, [X20 + 0x430]
	0x03C36BD0 LDR X0, [X21]
	0x03C36BD4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B0000
	005 Move X1, [X20+1000]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51625984
	010 Add X0, X0, 1274
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1000], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.SceneManagement.Scene get_scene()

Disassembly:
	0x03C36BD8 CBNZ W8, 0x3C36BE0
	0x03C36BDC BL 0x1C16DFC
	0x03C36BE0 MOV X0, X19
	0x03C36BE4 LDP X20, X19, [X31 + 0x10]
	0x03C36BE8 MOV X1, X31
	0x03C36BEC LDP X30, X21, [X31], #0x20
	0x03C36BF0 B 0x3C06048
	0x03C36BF4 STR X30, [X31 - 0x20]!
	0x03C36BF8 STP X20, X19, [X31 + 0x10]
	0x03C36BFC ADRP X20, 0x7AF000
	0x03C36C00 LDR X1, [X20 + 0x488]
	0x03C36C04 MOV X19, X0
	0x03C36C08 CBNZ X1, 0x3C36C20
	0x03C36C0C ADRP X0, 0xFFFFFFFFFCECB000
	0x03C36C10 ADD X0, X0, 0x62
	0x03C36C14 BL 0x1C16CB8
	0x03C36C18 MOV X1, X0
	0x03C36C1C STR X0, [X20 + 0x488]
	0x03C36C20 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B0000
	005 Move X8, [X20+1016]
	006 Move X19, X0
	007 Move [X31+8], W31
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51527680
	011 Add X0, X0, 263
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X20+1016], X0
	015 Add X1, X31, 8
	016 Move X0, X19
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move W0, [X31+8]
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return X0

Method: System.UInt64 get_sceneCullingMask()

Disassembly:
	0x03C36C68 BL 0x1C16CB8
	0x03C36C6C MOV X2, X0
	0x03C36C70 STR X0, [X21 + 0x498]
	0x03C36C74 MOV X0, X20
	0x03C36C78 MOV W1, W19
	0x03C36C7C LDP X20, X19, [X31 + 0x10]
	0x03C36C80 LDP X30, X21, [X31], #0x20
	0x03C36C84 BR X2
	0x03C36C88 STR X30, [X31 - 0x20]!
	0x03C36C8C STP X20, X19, [X31 + 0x10]
	0x03C36C90 ADRP X20, 0x7AF000
	0x03C36C94 LDR X1, [X20 + 0x4A0]
	0x03C36C98 MOV X19, X0
	0x03C36C9C CBNZ X1, 0x3C36CB4
	0x03C36CA0 ADRP X0, 0xFFFFFFFFFCED6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B0000
	005 Move X1, [X20+1008]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51552256
	010 Add X0, X0, 1206
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1008], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.GameObject get_gameObject()

Disassembly:
	0x03C36CA4 ADD X0, X0, 0xF8E

ISIL:
	001 Return X0

Method: System.Void get_scene_Injected(out UnityEngine.SceneManagement.Scene ret)

Disassembly:
	0x03C36C24 LDP X20, X19, [X31 + 0x10]
	0x03C36C28 LDR X30, [X31], #0x20
	0x03C36C2C BR X1
	0x03C36C30 B 0x3C32494
	0x03C36C34 CBZ X0, 0x3C36C40
	0x03C36C38 MOV X1, X31
	0x03C36C3C B 0x3395B7C
	0x03C36C40 RET
	0x03C36C44 STP X30, X21, [X31 - 0x20]!
	0x03C36C48 STP X20, X19, [X31 + 0x10]
	0x03C36C4C ADRP X21, 0x7AF000
	0x03C36C50 LDR X2, [X21 + 0x498]
	0x03C36C54 MOV W19, W1
	0x03C36C58 MOV X20, X0
	0x03C36C5C CBNZ X2, 0x3C36C74
	0x03C36C60 ADRP X0, 0xFFFFFFFFFCED5000
	0x03C36C64 ADD X0, X0, 0x536

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B0000
	006 Move X2, [X21+1016]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51527680
	012 Add X0, X0, 263
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1016], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

