Type: UnityEngine.UnitySynchronizationContext

Method: System.Void .ctor(System.Int32 mainThreadID)

Disassembly:
	0x03C3AB28 ADRP X0, 0x4C1000
	0x03C3AB2C LDR X0, [X0 + 0x578]
	0x03C3AB30 BL 0x1C16D08
	0x03C3AB34 BL 0x1C16F10
	0x03C3AB38 MOV X19, X0
	0x03C3AB3C ADRP X0, 0x525000
	0x03C3AB40 LDR X0, [X0 + 0x6E8]
	0x03C3AB44 BL 0x1C16D08
	0x03C3AB48 MOV X20, X0
	0x03C3AB4C ADRP X0, 0x4E2000
	0x03C3AB50 LDR X0, [X0 + 0x150]
	0x03C3AB54 BL 0x1C16D08
	0x03C3AB58 MOV X2, X0
	0x03C3AB5C MOV X0, X19
	0x03C3AB60 MOV X1, X20
	0x03C3AB64 MOV X3, X31
	0x03C3AB68 BL 0x330E16C
	0x03C3AB6C ADRP X0, 0x525000
	0x03C3AB70 LDR X0, [X0 + 0x6F0]
	0x03C3AB74 BL 0x1C16D08
	0x03C3AB78 MOV X1, X0
	0x03C3AB7C MOV X0, X19
	0x03C3AB80 BL 0x1C16DEC
	0x03C3AB84 STR X24, [X31 + 0x8]
	0x03C3AB88 ADRP X19, 0x4BB000
	0x03C3AB8C LDR X19, [X19 + 0xA60]
	0x03C3AB90 MOV X21, X0
	0x03C3AB94 MOV X0, X19
	0x03C3AB98 BL 0x1C16D08
	0x03C3AB9C ADD X1, X31, 0x8
	0x03C3ABA0 BL 0x1C16E04
	0x03C3ABA4 MOV X20, X0
	0x03C3ABA8 MOV X0, X19
	0x03C3ABAC STR X21, [X31]
	0x03C3ABB0 BL 0x1C16D08
	0x03C3ABB4 ADD X1, X31, 0x0
	0x03C3ABB8 BL 0x1C16E04
	0x03C3ABBC MOV X19, X0
	0x03C3ABC0 ADRP X0, 0x525000
	0x03C3ABC4 LDR X0, [X0 + 0x6F8]
	0x03C3ABC8 BL 0x1C16D08
	0x03C3ABCC MOV X1, X20
	0x03C3ABD0 MOV X2, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7AC000
	008 Move X23, 0x526000
	009 Move X22, 0x526000
	010 Move W8, [X21+1480]
	011 Move X23, [X23+1680]
	012 Move X22, [X22+1688]
	013 Move W19, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x526000
	020 Move X0, [X0+1688]
	021 Call 0x1C17CF4
	022 Move X0, 0x526000
	023 Move X0, [X0+1680]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1480], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 Move X2, [X22]
	030 Move W1, 20
	031 Move X21, X0
	032 Call List`1<WorkRequest>..ctor, X0, X1
	033 Move X0, X20
	034 Move X1, X31
	035 Move [X20+32], X21
	036 Move [X20+44], W31
	037 Call SynchronizationContext..ctor, X0
	038 Move X0, [X23]
	039 Call 0x1C17F10
	040 Move X2, [X22]
	041 Move W1, 20
	042 Move X21, X0
	043 Call List`1<WorkRequest>..ctor, X0, X1
	044 Move [X20+24], X21
	045 Move [X20+40], W19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Return 

Method: System.Void .ctor(System.Collections.Generic.List`1<UnityEngine.UnitySynchronizationContext/WorkRequest> queue, System.Int32 mainThreadID)

Disassembly:
	0x03C3ABD4 MOV X3, X31
	0x03C3ABD8 BL 0x3227BD4
	0x03C3ABDC MOV X19, X0
	0x03C3ABE0 ADRP X0, 0x4C1000
	0x03C3ABE4 LDR X0, [X0 + 0x578]
	0x03C3ABE8 BL 0x1C16D08
	0x03C3ABEC BL 0x1C16F10
	0x03C3ABF0 MOV X1, X19
	0x03C3ABF4 MOV X2, X31
	0x03C3ABF8 MOV X20, X0
	0x03C3ABFC BL 0x3314A68
	0x03C3AC00 ADRP X0, 0x525000
	0x03C3AC04 LDR X0, [X0 + 0x6F0]
	0x03C3AC08 BL 0x1C16D08
	0x03C3AC0C MOV X1, X0
	0x03C3AC10 MOV X0, X20
	0x03C3AC14 BL 0x1C16DEC
	0x03C3AC18 MOV W4, W31
	0x03C3AC1C B 0x3C3AA38
	0x03C3AC20 STP X30, X19, [X31 - 0x10]!
	0x03C3AC24 ADRP X19, 0x7AB000
	0x03C3AC28 LDR X0, [X19 + 0x748]
	0x03C3AC2C CBNZ X0, 0x3C3AC40
	0x03C3AC30 ADRP X0, 0xFFFFFFFFFCECD000
	0x03C3AC34 ADD X0, X0, 0x32B
	0x03C3AC38 BL 0x1C16CB8
	0x03C3AC3C STR X0, [X19 + 0x748]
	0x03C3AC40 LDP X30, X19, [X31], #0x10
	0x03C3AC44 BR X0
	0x03C3AC48 B 0x3C3A930
	0x03C3AC4C STR X30, [X31 - 0x20]!
	0x03C3AC50 STP X20, X19, [X31 + 0x10]
	0x03C3AC54 ADRP X20, 0x7AB000
	0x03C3AC58 LDR X1, [X20 + 0x5E8]
	0x03C3AC5C MOV X19, X0
	0x03C3AC60 CBNZ X1, 0x3C3AC78
	0x03C3AC64 ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C3AC68 ADD X0, X0, 0xA33
	0x03C3AC6C BL 0x1C16CB8
	0x03C3AC70 MOV X1, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x7AC000
	009 Move X24, 0x526000
	010 Move X22, 0x526000
	011 Move W8, [X23+1481]
	012 Move X24, [X24+1680]
	013 Move X22, [X22+1688]
	014 Move W19, W2
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x526000
	022 Move X0, [X0+1688]
	023 Call 0x1C17CF4
	024 Move X0, 0x526000
	025 Move X0, [X0+1680]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1481], W8
	029 Move X0, [X24]
	030 Call 0x1C17F10
	031 Move X2, [X22]
	032 Move W1, 20
	033 Move X22, X0
	034 Call List`1<WorkRequest>..ctor, X0, X1
	035 Move X0, X20
	036 Move X1, X31
	037 Move [X20+32], X22
	038 Move [X20+44], W31
	039 Call SynchronizationContext..ctor, X0
	040 Move [X20+24], X21
	041 Move [X20+40], W19
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move X30, [X31+64]
	049 Return 

Method: System.Void Send(System.Threading.SendOrPostCallback callback, System.Object state)

Disassembly:
	0x03C3AC74 STR X0, [X20 + 0x5E8]
	0x03C3AC78 MOV X0, X19
	0x03C3AC7C LDP X20, X19, [X31 + 0x10]
	0x03C3AC80 LDR X30, [X31], #0x20
	0x03C3AC84 BR X1
	0x03C3AC88 STR X30, [X31 - 0x20]!
	0x03C3AC8C STP X20, X19, [X31 + 0x10]
	0x03C3AC90 ADRP X20, 0x7AB000
	0x03C3AC94 LDR X1, [X20 + 0x5F0]
	0x03C3AC98 MOV X19, X0
	0x03C3AC9C CBNZ X1, 0x3C3ACB4
	0x03C3ACA0 ADRP X0, 0xFFFFFFFFFCEC1000
	0x03C3ACA4 ADD X0, X0, 0x3FF
	0x03C3ACA8 BL 0x1C16CB8
	0x03C3ACAC MOV X1, X0
	0x03C3ACB0 STR X0, [X20 + 0x5F0]
	0x03C3ACB4 MOV X0, X19
	0x03C3ACB8 LDP X20, X19, [X31 + 0x10]
	0x03C3ACBC LDR X30, [X31], #0x20
	0x03C3ACC0 BR X1
	0x03C3ACC4 STP X30, X23, [X31 - 0x30]!
	0x03C3ACC8 STP X22, X21, [X31 + 0x10]
	0x03C3ACCC STP X20, X19, [X31 + 0x20]
	0x03C3ACD0 CBZ X1, 0x3C3AD70
	0x03C3ACD4 MOV X19, X1
	0x03C3ACD8 MOV X20, X0
	0x03C3ACDC MOV X0, X1
	0x03C3ACE0 MOV X1, X31
	0x03C3ACE4 BL 0x3C0055C
	0x03C3ACE8 TBZ X0, 0x0, 0x3C3ADB8
	0x03C3ACEC MOV X0, X19
	0x03C3ACF0 MOV X1, X31
	0x03C3ACF4 BL 0x3395B7C
	0x03C3ACF8 MOV W21, W0
	0x03C3ACFC MOV X0, X19
	0x03C3AD00 MOV X1, X31
	0x03C3AD04 BL 0x33BE520
	0x03C3AD08 CBZ X0, 0x3C3AE1C
	0x03C3AD0C LDR X8, [X0]
	0x03C3AD10 LDR X9, [X8 + 0x428]
	0x03C3AD14 LDR X1, [X8 + 0x430]
	0x03C3AD18 BLR X9
	0x03C3AD1C MOV X1, X31
	0x03C3AD20 BL 0x3C00250
	0x03C3AD24 ADRP X23, 0x7AB000
	0x03C3AD28 LDR X6, [X23 + 0x608]
	0x03C3AD2C MOV W22, W0
	0x03C3AD30 CBNZ X6, 0x3C3AD48
	0x03C3AD34 ADRP X0, 0xFFFFFFFFFCED2000
	0x03C3AD38 ADD X0, X0, 0xFCE
	0x03C3AD3C BL 0x1C16CB8
	0x03C3AD40 MOV X6, X0
	0x03C3AD44 STR X0, [X23 + 0x608]
	0x03C3AD48 MOV X0, X20
	0x03C3AD4C MOV X1, X19
	0x03C3AD50 MOV W4, W21
	0x03C3AD54 MOV W5, W22
	0x03C3AD58 LDP X20, X19, [X31 + 0x20]
	0x03C3AD5C LDP X22, X21, [X31 + 0x10]
	0x03C3AD60 MOV W2, W31
	0x03C3AD64 MOV W3, W31
	0x03C3AD68 LDP X30, X23, [X31], #0x30
	0x03C3AD6C BR X6
	0x03C3AD70 ADRP X0, 0x4BE000
	0x03C3AD74 LDR X0, [X0 + 0x528]
	0x03C3AD78 BL 0x1C16D08
	0x03C3AD7C BL 0x1C16F10
	0x03C3AD80 MOV X19, X0
	0x03C3AD84 ADRP X0, 0x4C5000
	0x03C3AD88 LDR X0, [X0 + 0x690]
	0x03C3AD8C BL 0x1C16D08
	0x03C3AD90 MOV X1, X0
	0x03C3AD94 MOV X0, X19
	0x03C3AD98 MOV X2, X31
	0x03C3AD9C BL 0x330E100
	0x03C3ADA0 ADRP X0, 0x525000
	0x03C3ADA4 LDR X0, [X0 + 0x700]
	0x03C3ADA8 BL 0x1C16D08
	0x03C3ADAC MOV X1, X0
	0x03C3ADB0 MOV X0, X19
	0x03C3ADB4 BL 0x1C16DEC
	0x03C3ADB8 MOV X0, X19
	0x03C3ADBC MOV X1, X31
	0x03C3ADC0 BL 0x3C0058C
	0x03C3ADC4 MOV X19, X0
	0x03C3ADC8 ADRP X0, 0x525000
	0x03C3ADCC LDR X0, [X0 + 0x708]
	0x03C3ADD0 BL 0x1C16D08
	0x03C3ADD4 MOV X1, X19
	0x03C3ADD8 MOV X2, X31
	0x03C3ADDC BL 0x321EFD0
	0x03C3ADE0 MOV X19, X0
	0x03C3ADE4 ADRP X0, 0x4C1000
	0x03C3ADE8 LDR X0, [X0 + 0x578]
	0x03C3ADEC BL 0x1C16D08
	0x03C3ADF0 BL 0x1C16F10
	0x03C3ADF4 MOV X1, X19
	0x03C3ADF8 MOV X2, X31
	0x03C3ADFC MOV X20, X0
	0x03C3AE00 BL 0x3314A68
	0x03C3AE04 ADRP X0, 0x525000
	0x03C3AE08 LDR X0, [X0 + 0x700]
	0x03C3AE0C BL 0x1C16D08
	0x03C3AE10 MOV X1, X0
	0x03C3AE14 MOV X0, X20
	0x03C3AE18 BL 0x1C16DEC
	0x03C3AE1C BL 0x1C16F20
	0x03C3AE20 STP X30, X25, [X31 - 0x40]!
	0x03C3AE24 STP X24, X23, [X31 + 0x10]
	0x03C3AE28 STP X22, X21, [X31 + 0x20]
	0x03C3AE2C STP X20, X19, [X31 + 0x30]
	0x03C3AE30 ADRP X25, 0x7AB000
	0x03C3AE34 LDR X6, [X25 + 0x608]
	0x03C3AE38 MOV W19, W5
	0x03C3AE3C MOV W20, W4
	0x03C3AE40 MOV W21, W3
	0x03C3AE44 MOV W22, W2
	0x03C3AE48 MOV X23, X1
	0x03C3AE4C MOV X24, X0
	0x03C3AE50 CBNZ X6, 0x3C3AE68
	0x03C3AE54 ADRP X0, 0xFFFFFFFFFCED2000
	0x03C3AE58 ADD X0, X0, 0xFCE
	0x03C3AE5C BL 0x1C16CB8
	0x03C3AE60 MOV X6, X0
	0x03C3AE64 STR X0, [X25 + 0x608]
	0x03C3AE68 MOV X0, X24
	0x03C3AE6C MOV X1, X23
	0x03C3AE70 MOV W2, W22
	0x03C3AE74 MOV W3, W21
	0x03C3AE78 MOV W4, W20
	0x03C3AE7C MOV W5, W19
	0x03C3AE80 LDP X20, X19, [X31 + 0x30]
	0x03C3AE84 LDP X22, X21, [X31 + 0x20]
	0x03C3AE88 LDP X24, X23, [X31 + 0x10]
	0x03C3AE8C LDP X30, X25, [X31], #0x40
	0x03C3AE90 BR X6
	0x03C3AE94 SUB X31, X31, 0x50
	0x03C3AE98 STP X30, X25, [X31 + 0x10]
	0x03C3AE9C STP X24, X23, [X31 + 0x20]
	0x03C3AEA0 STP X22, X21, [X31 + 0x30]
	0x03C3AEA4 STP X20, X19, [X31 + 0x40]
	0x03C3AEA8 ADRP X24, 0x7AB000
	0x03C3AEAC LDRB W8, [X24 + 0x5F8]
	0x03C3AEB0 MOV W19, W4
	0x03C3AEB4 MOV W20, W3
	0x03C3AEB8 MOV W22, W2
	0x03C3AEBC MOV X21, X1
	0x03C3AEC0 MOV X23, X0
	0x03C3AEC4 TBNZ X8, 0x0, 0x3C3AEDC
	0x03C3AEC8 ADRP X0, 0x4E1000
	0x03C3AECC LDR X0, [X0 + 0x850]
	0x03C3AED0 BL 0x1C16CF4
	0x03C3AED4 MOVZ W8, 0x1
	0x03C3AED8 STRB W8, [X24 + 0x5F8]
	0x03C3AEDC CBZ X21, 0x3C3B04C
	0x03C3AEE0 MOV X0, X21
	0x03C3AEE4 MOV X1, X31
	0x03C3AEE8 BL 0x3C0055C
	0x03C3AEEC TBZ X0, 0x0, 0x3C3B094
	0x03C3AEF0 ORR W8, W20, W22, 0x0
	0x03C3AEF4 ORR W8, W8, W19, 0x0
	0x03C3AEF8 TBNZ X8, 0x1F, 0x3C3AFB4
	0x03C3AEFC MOV X0, X21
	0x03C3AF00 MOV X1, X31
	0x03C3AF04 BL 0x3395B7C
	0x03C3AF08 ADD W8, W19, W22
	0x03C3AF0C CMP W8, W0
	0x03C3AF10 B.GT 0x3C3AFB4
	0x03C3AF14 MOV X0, X21
	0x03C3AF18 MOV X1, X31
	0x03C3AF1C BL 0x33BE520
	0x03C3AF20 CBZ X0, 0x3C3B0F8
	0x03C3AF24 LDR X8, [X0]
	0x03C3AF28 ADRP X24, 0x4E1000
	0x03C3AF2C LDR X9, [X8 + 0x428]
	0x03C3AF30 LDR X1, [X8 + 0x430]
	0x03C3AF34 LDR X24, [X24 + 0x850]
	0x03C3AF38 BLR X9
	0x03C3AF3C LDR X8, [X24]
	0x03C3AF40 MOV X24, X0
	0x03C3AF44 LDR W9, [X8 + 0xE0]
	0x03C3AF48 CBNZ W9, 0x3C3AF54
	0x03C3AF4C MOV X0, X8
	0x03C3AF50 BL 0x1C16DFC
	0x03C3AF54 MOV X0, X24
	0x03C3AF58 MOV X1, X31
	0x03C3AF5C BL 0x32C13AC
	0x03C3AF60 ADRP X25, 0x7AB000
	0x03C3AF64 LDR X6, [X25 + 0x608]
	0x03C3AF68 MOV W24, W0
	0x03C3AF6C CBNZ X6, 0x3C3AF84
	0x03C3AF70 ADRP X0, 0xFFFFFFFFFCED2000
	0x03C3AF74 ADD X0, X0, 0xFCE
	0x03C3AF78 BL 0x1C16CB8
	0x03C3AF7C MOV X6, X0
	0x03C3AF80 STR X0, [X25 + 0x608]
	0x03C3AF84 MOV X0, X23
	0x03C3AF88 MOV X1, X21
	0x03C3AF8C MOV W2, W22

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X19, 0x7AC000
	009 Move W8, [X19+1482]
	010 Move X20, X2
	011 Move X22, X1
	012 Move X23, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x4BA000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x526000
	021 Move X0, [X0+1696]
	022 Call 0x1C17CF4
	023 Move X0, 0x4EB000
	024 Move X0, [X0+1992]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+1482], W8
	028 Move W19, [X23+40]
	029 Move X0, X31
	030 Call Thread.get_CurrentThread
	031 Compare X0, 0
	032 JumpIfEqual {138}
	033 Move X1, X31
	034 Call Thread.get_ManagedThreadId, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare X22, 0
	037 JumpIfEqual {138}
	038 Move X8, [X22+24]
	039 Move X0, [X22+64]
	040 Move X2, [X22+40]
	041 Move X1, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, 0x4EB000
	044 Move X8, [X8+1992]
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move W1, W31
	048 Move X2, X31
	049 Move X19, X0
	050 Call ManualResetEvent..ctor, X0, X1
	051 Move X21, [X23+24]
	052 Move [X31+4], W31
	053 Add X1, X31, 4
	054 Move X0, X21
	055 Move X2, X31
	056 Call Monitor.Enter, X0, X1
	057 Move X0, [X23+24]
	058 Compare X0, 0
	059 JumpIfEqual {141}
	060 Move X9, 0x526000
	061 Move X9, [X9+1696]
	062 Move W10, [X0+28]
	063 Move X8, [X0+16]
	064 Move X9, [X9]
	065 Add W10, W10, 1
	066 Move [X0+28], W10
	067 Compare X8, 0
	068 JumpIfEqual {142}
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Move W11, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W11, 24
	073 Add W9, W10, 1
	074 NotImplemented "Instruction MADD not yet implemented."
	075 Move X23, X31
	076 Move [X0+24], W9
	077 Move [X8+32], X22
	078 Move [X8+40], X20
	079 Move [X8+48], X19
	080 Move X8, [X9+32]
	081 Move X8, [X8+192]
	082 Move X2, [X8+112]
	083 Move [X31+8], X22
	084 Move [X31+16], X20
	085 Move [X31+24], X19
	086 Add X1, X31, 8
	087 Call List`1<WorkRequest>.AddWithResize, X0, X1
	088 Move X23, X31
	089 Move W8, [X31+4]
	090 Compare W8, 0
	091 JumpIfEqual {95}
	092 Move X0, X21
	093 Move X1, X31
	094 Call Monitor.Exit, X0
	095 Compare X23, 0
	096 JumpIfNotEqual {143}
	097 Compare X19, 0
	098 JumpIfEqual {145}
	099 Move X8, [X19]
	100 Move X9, [X8+472]
	101 Move X1, [X8+480]
	102 Move X0, X19
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X21, X31
	105 Move X10, 0x4BA000
	106 Move X8, [X19]
	107 Move X10, [X10+3584]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Move X1, [X10]
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move X0, X19
	119 Move W2, W31
	120 Call 0x1C5D788
	121 NotImplemented "Instruction LDRSW not yet implemented."
	122 Add X8, X8, X9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X1, [X0+8]
	126 Move X0, X19
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Compare X21, 0
	129 JumpIfNotEqual {139}
	130 Move X20, [X31+64]
	131 Move X19, [X31+72]
	132 Move X22, [X31+48]
	133 Move X21, [X31+56]
	134 Move X30, [X31+32]
	135 Move X23, [X31+40]
	136 Add X31, X31, 80
	137 Return 
	138 Call 0x1C17F20
	139 Move X0, X21
	140 Call 0x1C17F18
	141 Call 0x1C17F20
	142 Call 0x1C17F20
	143 Move X0, X23
	144 Call 0x1C17F18
	145 Call 0x1C17F20
	146 Move X22, X1
	147 Move X20, X0
	148 Move X22, X1
	149 Move X20, X0
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X20
	152 Call 0x3EB2AD0
	153 Move X23, [X0]
	154 Call 0x3EB2AE0
	155 Move X23, X31
	156 Move W8, [X31+4]
	157 Compare W8, 0
	158 JumpIfEqual {162}
	159 Move X0, X21
	160 Move X1, X31
	161 Call Monitor.Exit, X0
	162 Compare X23, 0
	163 JumpIfNotEqual {172}
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, X20
	166 Call 0x3EB2AD0
	167 Move X21, [X0]
	168 Call 0x3EB2AE0
	169 Compare X19, 0
	170 JumpIfNotEqual {105}
	171 Move X21, X31
	172 Move X0, X23
	173 Call 0x1C17F18
	174 Move X22, X1
	175 Move X20, X0
	176 Move X20, X0
	177 Compare X19, 0
	178 JumpIfEqual {202}
	179 Move X10, 0x4BA000
	180 Move X8, [X19]
	181 Move X10, [X10+3584]
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Move X1, [X10]
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move X0, X19
	193 Move W2, W31
	194 Call 0x1C5D788
	195 NotImplemented "Instruction LDRSW not yet implemented."
	196 Add X8, X8, X9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X1, [X0+8]
	200 Move X0, X19
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Compare X21, 0
	203 JumpIfNotEqual {206}
	204 Move X0, X20
	205 Call 0x1D2D690
	206 Move X0, X21
	207 Call 0x1C17F18
	208 Call 0x1991590

Method: System.Void OperationStarted()

Disassembly:
	0x03C3AF9C LDP X20, X19, [X31 + 0x40]
	0x03C3AFA0 LDP X22, X21, [X31 + 0x30]
	0x03C3AFA4 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Add X0, X0, 44
	002 Move X1, X31
	003 Call Interlocked.Increment, X0
	004 Return 

Method: System.Void OperationCompleted()

Disassembly:
	0x03C3AFA8 LDP X30, X25, [X31 + 0x10]
	0x03C3AFAC ADD X31, X31, 0x50
	0x03C3AFB0 BR X6

ISIL:
	001 Add X0, X0, 44
	002 Move X1, X31
	003 Call Interlocked.Decrement, X0
	004 Return 

Method: System.Void Post(System.Threading.SendOrPostCallback callback, System.Object state)

Disassembly:
	0x03C3AFB4 STR W22, [X31 + 0xC]
	0x03C3AFB8 ADRP X21, 0x4B9000
	0x03C3AFBC LDR X21, [X21 + 0x758]
	0x03C3AFC0 MOV X0, X21
	0x03C3AFC4 BL 0x1C16D08
	0x03C3AFC8 ADD X1, X31, 0xC
	0x03C3AFCC BL 0x1C16E04
	0x03C3AFD0 MOV X22, X0
	0x03C3AFD4 MOV X0, X21
	0x03C3AFD8 STR W20, [X31 + 0x8]
	0x03C3AFDC BL 0x1C16D08
	0x03C3AFE0 ADD X1, X31, 0x8
	0x03C3AFE4 BL 0x1C16E04
	0x03C3AFE8 MOV X20, X0
	0x03C3AFEC MOV X0, X21
	0x03C3AFF0 STR W19, [X31 + 0x4]
	0x03C3AFF4 BL 0x1C16D08
	0x03C3AFF8 ADD X1, X31, 0x4
	0x03C3AFFC BL 0x1C16E04
	0x03C3B000 MOV X19, X0
	0x03C3B004 ADRP X0, 0x524000
	0x03C3B008 LDR X0, [X0 + 0x710]
	0x03C3B00C BL 0x1C16D08
	0x03C3B010 MOV X1, X22
	0x03C3B014 MOV X2, X20
	0x03C3B018 MOV X3, X19
	0x03C3B01C MOV X4, X31
	0x03C3B020 BL 0x3227C18
	0x03C3B024 MOV X19, X0
	0x03C3B028 ADRP X0, 0x4C0000
	0x03C3B02C LDR X0, [X0 + 0x760]
	0x03C3B030 BL 0x1C16D08
	0x03C3B034 BL 0x1C16F10
	0x03C3B038 MOV X1, X19
	0x03C3B03C MOV X2, X31
	0x03C3B040 MOV X20, X0
	0x03C3B044 BL 0x3316014
	0x03C3B048 B 0x3C3B0E0
	0x03C3B04C ADRP X0, 0x4BD000
	0x03C3B050 LDR X0, [X0 + 0x528]
	0x03C3B054 BL 0x1C16D08
	0x03C3B058 BL 0x1C16F10
	0x03C3B05C MOV X19, X0
	0x03C3B060 ADRP X0, 0x4C4000
	0x03C3B064 LDR X0, [X0 + 0x690]
	0x03C3B068 BL 0x1C16D08
	0x03C3B06C MOV X1, X0
	0x03C3B070 MOV X0, X19
	0x03C3B074 MOV X2, X31
	0x03C3B078 BL 0x330E100
	0x03C3B07C ADRP X0, 0x524000
	0x03C3B080 LDR X0, [X0 + 0x718]
	0x03C3B084 BL 0x1C16D08
	0x03C3B088 MOV X1, X0
	0x03C3B08C MOV X0, X19
	0x03C3B090 BL 0x1C16DEC
	0x03C3B094 MOV X0, X21
	0x03C3B098 MOV X1, X31
	0x03C3B09C BL 0x3C0058C
	0x03C3B0A0 MOV X19, X0
	0x03C3B0A4 ADRP X0, 0x524000
	0x03C3B0A8 LDR X0, [X0 + 0x708]
	0x03C3B0AC BL 0x1C16D08
	0x03C3B0B0 MOV X1, X19
	0x03C3B0B4 MOV X2, X31
	0x03C3B0B8 BL 0x321EFD0
	0x03C3B0BC MOV X19, X0
	0x03C3B0C0 ADRP X0, 0x4C0000
	0x03C3B0C4 LDR X0, [X0 + 0x578]
	0x03C3B0C8 BL 0x1C16D08
	0x03C3B0CC BL 0x1C16F10
	0x03C3B0D0 MOV X1, X19
	0x03C3B0D4 MOV X2, X31
	0x03C3B0D8 MOV X20, X0
	0x03C3B0DC BL 0x3314A68
	0x03C3B0E0 ADRP X0, 0x524000
	0x03C3B0E4 LDR X0, [X0 + 0x718]
	0x03C3B0E8 BL 0x1C16D08
	0x03C3B0EC MOV X1, X0
	0x03C3B0F0 MOV X0, X20
	0x03C3B0F4 BL 0x1C16DEC
	0x03C3B0F8 BL 0x1C16F20
	0x03C3B0FC STP X30, X25, [X31 - 0x40]!
	0x03C3B100 STP X24, X23, [X31 + 0x10]
	0x03C3B104 STP X22, X21, [X31 + 0x20]
	0x03C3B108 STP X20, X19, [X31 + 0x30]
	0x03C3B10C ADRP X25, 0x7AA000
	0x03C3B110 LDR X6, [X25 + 0x600]
	0x03C3B114 MOV W19, W5

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X19, 0x7AC000
	008 Move W8, [X19+1483]
	009 Move X21, X2
	010 Move X22, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x526000
	017 Move X0, [X0+1696]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+1483], W8
	021 Move X19, [X20+24]
	022 Move [X31+44], W31
	023 Add X1, X31, 44
	024 Move X0, X19
	025 Move X2, X31
	026 Call Monitor.Enter, X0, X1
	027 Move X0, [X20+24]
	028 Compare X0, 0
	029 JumpIfEqual {76}
	030 Move X9, 0x525000
	031 Move X9, [X9+1696]
	032 Move W10, [X0+28]
	033 Move X8, [X0+16]
	034 Move X9, [X9]
	035 Add W10, W10, 1
	036 Move [X0+28], W10
	037 Compare X8, 0
	038 JumpIfEqual {77}
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Move W11, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W11, 24
	043 Add W9, W10, 1
	044 NotImplemented "Instruction MADD not yet implemented."
	045 Move X20, X31
	046 Move [X0+24], W9
	047 Move [X8+32], X22
	048 Move [X8+40], X21
	049 Move [X8+48], X31
	050 Move X8, [X9+32]
	051 Move X8, [X8+192]
	052 Move X2, [X8+112]
	053 Move [X31+8], X22
	054 Move [X31+16], X21
	055 Move [X31+24], X31
	056 Add X1, X31, 8
	057 Call List`1<WorkRequest>.AddWithResize, X0, X1
	058 Move X20, X31
	059 Move W8, [X31+44]
	060 Compare W8, 0
	061 JumpIfEqual {65}
	062 Move X0, X19
	063 Move X1, X31
	064 Call Monitor.Exit, X0
	065 Compare X20, 0
	066 JumpIfNotEqual {74}
	067 Move X20, [X31+64]
	068 Move X19, [X31+72]
	069 Move X22, [X31+48]
	070 Move X21, [X31+56]
	071 Move X30, [X31+32]
	072 Add X31, X31, 80
	073 Return 
	074 Move X0, X20
	075 Call 0x1C17F18
	076 Call 0x1C17F20
	077 Call 0x1C17F20
	078 Move X21, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X21
	081 Call 0x3EB2AD0
	082 Move X20, [X0]
	083 Call 0x3EB2AE0
	084 Move X20, X31
	085 Move X21, X0
	086 Move W8, [X31+44]
	087 Compare W8, 0
	088 JumpIfEqual {92}
	089 Move X0, X19
	090 Move X1, X31
	091 Call Monitor.Exit, X0
	092 Compare X20, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X21
	095 Call 0x1D2D690
	096 Move X0, X20
	097 Call 0x1C17F18
	098 Call 0x1991590

Method: System.Threading.SynchronizationContext CreateCopy()

Disassembly:
	0x03C3B118 MOV W20, W4
	0x03C3B11C MOV W21, W3
	0x03C3B120 MOV W22, W2
	0x03C3B124 MOV X23, X1
	0x03C3B128 MOV X24, X0
	0x03C3B12C CBNZ X6, 0x3C3B144
	0x03C3B130 ADRP X0, 0xFFFFFFFFFCEB8000
	0x03C3B134 ADD X0, X0, 0x3B9
	0x03C3B138 BL 0x1C16CB8
	0x03C3B13C MOV X6, X0
	0x03C3B140 STR X0, [X25 + 0x600]
	0x03C3B144 MOV X0, X24
	0x03C3B148 MOV X1, X23
	0x03C3B14C MOV W2, W22
	0x03C3B150 MOV W3, W21
	0x03C3B154 MOV W4, W20
	0x03C3B158 MOV W5, W19
	0x03C3B15C LDP X20, X19, [X31 + 0x30]
	0x03C3B160 LDP X22, X21, [X31 + 0x20]
	0x03C3B164 LDP X24, X23, [X31 + 0x10]
	0x03C3B168 LDP X30, X25, [X31], #0x40
	0x03C3B16C BR X6
	0x03C3B170 STP X30, X23, [X31 - 0x30]!
	0x03C3B174 STP X22, X21, [X31 + 0x10]
	0x03C3B178 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7AB000
	006 Move X21, 0x525000
	007 Move W8, [X20+1484]
	008 Move X21, [X21+1704]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x525000
	015 Move X0, [X0+1704]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1484], W8
	019 Move X0, [X21]
	020 Move X20, [X19+24]
	021 Move W19, [X19+40]
	022 Call 0x1C17F10
	023 Move X1, X20
	024 Move W2, W19
	025 Move X21, X0
	026 Call UnitySynchronizationContext..ctor, X0, X1, X2
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X0, X21
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0

Method: System.Void Exec()

Disassembly:
	0x03C3B17C ADRP X21, 0x7AA000
	0x03C3B180 LDRB W8, [X21 + 0x610]
	0x03C3B184 MOV X19, X1
	0x03C3B188 MOV X20, X0
	0x03C3B18C TBNZ X8, 0x0, 0x3C3B1A4
	0x03C3B190 ADRP X0, 0x4E0000
	0x03C3B194 LDR X0, [X0 + 0x850]
	0x03C3B198 BL 0x1C16CF4
	0x03C3B19C MOVZ W8, 0x1
	0x03C3B1A0 STRB W8, [X21 + 0x610]
	0x03C3B1A4 CBZ X19, 0x3C3B260
	0x03C3B1A8 MOV X0, X19
	0x03C3B1AC MOV X1, X31
	0x03C3B1B0 BL 0x3C0055C
	0x03C3B1B4 TBZ X0, 0x0, 0x3C3B2A8
	0x03C3B1B8 MOV X0, X19
	0x03C3B1BC MOV X1, X31
	0x03C3B1C0 BL 0x3395B7C
	0x03C3B1C4 MOV W21, W0
	0x03C3B1C8 MOV X0, X19
	0x03C3B1CC MOV X1, X31
	0x03C3B1D0 BL 0x33BE520
	0x03C3B1D4 CBZ X0, 0x3C3B30C
	0x03C3B1D8 LDR X8, [X0]
	0x03C3B1DC ADRP X22, 0x4E0000
	0x03C3B1E0 LDR X9, [X8 + 0x428]
	0x03C3B1E4 LDR X1, [X8 + 0x430]
	0x03C3B1E8 LDR X22, [X22 + 0x850]
	0x03C3B1EC BLR X9
	0x03C3B1F0 LDR X8, [X22]
	0x03C3B1F4 MOV X22, X0
	0x03C3B1F8 LDR W9, [X8 + 0xE0]
	0x03C3B1FC CBNZ W9, 0x3C3B208
	0x03C3B200 MOV X0, X8
	0x03C3B204 BL 0x1C16DFC
	0x03C3B208 MOV X0, X22
	0x03C3B20C MOV X1, X31
	0x03C3B210 BL 0x32C13AC
	0x03C3B214 ADRP X23, 0x7AA000
	0x03C3B218 LDR X6, [X23 + 0x618]
	0x03C3B21C MOV W22, W0
	0x03C3B220 CBNZ X6, 0x3C3B238
	0x03C3B224 ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C3B228 ADD X0, X0, 0xE34
	0x03C3B22C BL 0x1C16CB8
	0x03C3B230 MOV X6, X0
	0x03C3B234 STR X0, [X23 + 0x618]
	0x03C3B238 MOV X0, X20
	0x03C3B23C MOV X1, X19
	0x03C3B240 MOV W4, W21
	0x03C3B244 MOV W5, W22
	0x03C3B248 LDP X20, X19, [X31 + 0x20]
	0x03C3B24C LDP X22, X21, [X31 + 0x10]
	0x03C3B250 MOV W2, W31
	0x03C3B254 MOV W3, W31
	0x03C3B258 LDP X30, X23, [X31], #0x30
	0x03C3B25C BR X6
	0x03C3B260 ADRP X0, 0x4BD000
	0x03C3B264 LDR X0, [X0 + 0x528]
	0x03C3B268 BL 0x1C16D08
	0x03C3B26C BL 0x1C16F10
	0x03C3B270 MOV X19, X0
	0x03C3B274 ADRP X0, 0x4C4000
	0x03C3B278 LDR X0, [X0 + 0x690]
	0x03C3B27C BL 0x1C16D08
	0x03C3B280 MOV X1, X0
	0x03C3B284 MOV X0, X19
	0x03C3B288 MOV X2, X31
	0x03C3B28C BL 0x330E100
	0x03C3B290 ADRP X0, 0x524000
	0x03C3B294 LDR X0, [X0 + 0x720]
	0x03C3B298 BL 0x1C16D08
	0x03C3B29C MOV X1, X0
	0x03C3B2A0 MOV X0, X19
	0x03C3B2A4 BL 0x1C16DEC
	0x03C3B2A8 MOV X0, X19
	0x03C3B2AC MOV X1, X31
	0x03C3B2B0 BL 0x3C0058C
	0x03C3B2B4 MOV X19, X0
	0x03C3B2B8 ADRP X0, 0x524000
	0x03C3B2BC LDR X0, [X0 + 0x728]
	0x03C3B2C0 BL 0x1C16D08
	0x03C3B2C4 MOV X1, X19
	0x03C3B2C8 MOV X2, X31
	0x03C3B2CC BL 0x321EFD0
	0x03C3B2D0 MOV X19, X0
	0x03C3B2D4 ADRP X0, 0x4C0000
	0x03C3B2D8 LDR X0, [X0 + 0x578]
	0x03C3B2DC BL 0x1C16D08
	0x03C3B2E0 BL 0x1C16F10
	0x03C3B2E4 MOV X1, X19
	0x03C3B2E8 MOV X2, X31
	0x03C3B2EC MOV X20, X0
	0x03C3B2F0 BL 0x3314A68
	0x03C3B2F4 ADRP X0, 0x524000
	0x03C3B2F8 LDR X0, [X0 + 0x720]
	0x03C3B2FC BL 0x1C16D08
	0x03C3B300 MOV X1, X0
	0x03C3B304 MOV X0, X20
	0x03C3B308 BL 0x1C16DEC
	0x03C3B30C BL 0x1C16F20
	0x03C3B310 STP X30, X25, [X31 - 0x40]!
	0x03C3B314 STP X24, X23, [X31 + 0x10]
	0x03C3B318 STP X22, X21, [X31 + 0x20]
	0x03C3B31C STP X20, X19, [X31 + 0x30]
	0x03C3B320 ADRP X25, 0x7AA000
	0x03C3B324 LDR X6, [X25 + 0x618]
	0x03C3B328 MOV W19, W5
	0x03C3B32C MOV W20, W4
	0x03C3B330 MOV W21, W3
	0x03C3B334 MOV W22, W2
	0x03C3B338 MOV X23, X1
	0x03C3B33C MOV X24, X0
	0x03C3B340 CBNZ X6, 0x3C3B358
	0x03C3B344 ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C3B348 ADD X0, X0, 0xE34
	0x03C3B34C BL 0x1C16CB8
	0x03C3B350 MOV X6, X0
	0x03C3B354 STR X0, [X25 + 0x618]
	0x03C3B358 MOV X0, X24

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X20, 0x7AB000
	008 Move W8, [X20+1485]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x525000
	015 Move X0, [X0+1712]
	016 Call 0x1C17CF4
	017 Move X0, 0x525000
	018 Move X0, [X0+1720]
	019 Call 0x1C17CF4
	020 Move X0, 0x525000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0x525000
	024 Move X0, [X0+1736]
	025 Call 0x1C17CF4
	026 Move X0, 0x525000
	027 Move X0, [X0+1744]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1485], W8
	031 Move [X31+32], X31
	032 Move [X31+40], X31
	033 Move [X31+48], X31
	034 Move X20, [X19+24]
	035 Move [X31+76], W31
	036 Add X1, X31, 76
	037 Move X0, X20
	038 Move X2, X31
	039 Call Monitor.Enter, X0, X1
	040 Move X0, [X19+32]
	041 Compare X0, 0
	042 JumpIfEqual {109}
	043 Move X8, 0x525000
	044 Move X8, [X8+1712]
	045 Move X1, [X19+24]
	046 Move X2, [X8]
	047 Call List`1<WorkRequest>.AddRange, X0, X1
	048 Move X8, [X19+24]
	049 Compare X8, 0
	050 JumpIfEqual {110}
	051 Move W2, [X8+24]
	052 Move W9, [X8+28]
	053 Add W9, W9, 1
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X8+24], W31
	056 Move [X8+28], W9
	057 Move X0, [X8+16]
	058 Move W1, W31
	059 Move X3, X31
	060 Call Array.Clear, X0, X1, X2
	061 Move X21, X31
	062 Move X21, X31
	063 Move W8, [X31+76]
	064 Compare W8, 0
	065 JumpIfEqual {69}
	066 Move X0, X20
	067 Move X1, X31
	068 Call Monitor.Exit, X0
	069 Compare X21, 0
	070 JumpIfNotEqual {107}
	071 Move X0, [X19+32]
	072 Compare X0, 0
	073 JumpIfEqual {99}
	074 Move X20, 0x525000
	075 Move X21, 0x525000
	076 Move X20, [X20+1744]
	077 Move X21, [X21+1728]
	078 Move W8, [X0+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X2, [X20]
	081 Add X8, X31, 8
	082 Move W1, W31
	083 Call List`1<WorkRequest>.get_Item, X0, X1
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 Move X8, [X31+24]
	086 Move [X31+2], V0
	087 Move [X31+48], X8
	088 Move X0, [X19+32]
	089 Compare X0, 0
	090 JumpIfEqual {99}
	091 Move X2, [X21]
	092 Move W1, W31
	093 Call List`1<WorkRequest>.RemoveAt, X0, X1
	094 Add X0, X31, 32
	095 Call WorkRequest.Invoke, X0
	096 Move X0, [X19+32]
	097 Compare X0, 0
	098 JumpIfNotEqual {78}
	099 Call 0x1C17F20
	100 Move X20, [X31+96]
	101 Move X19, [X31+104]
	102 Move X22, [X31+80]
	103 Move X21, [X31+88]
	104 Move X30, [X31+64]
	105 Add X31, X31, 112
	106 Return 
	107 Move X0, X21
	108 Call 0x1C17F18
	109 Call 0x1C17F20
	110 Call 0x1C17F20
	111 Move X22, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, X22
	114 Call 0x3EB2AD0
	115 Move X21, [X0]
	116 Call 0x3EB2AE0
	117 Move X21, X31
	118 Move X22, X0
	119 Move W8, [X31+76]
	120 Compare W8, 0
	121 JumpIfEqual {125}
	122 Move X0, X20
	123 Move X1, X31
	124 Call Monitor.Exit, X0
	125 Compare X21, 0
	126 JumpIfNotEqual {129}
	127 Move X0, X22
	128 Call 0x1D2D690
	129 Move X0, X21
	130 Call 0x1C17F18
	131 Call 0x1991590

Method: System.Boolean HasPendingTasks()

Disassembly:
	0x03C3B408 BR X2
	0x03C3B40C STP X30, X21, [X31 - 0x20]!
	0x03C3B410 STP X20, X19, [X31 + 0x10]
	0x03C3B414 ADRP X21, 0x7AA000
	0x03C3B418 LDR X2, [X21 + 0x628]
	0x03C3B41C MOV X19, X1
	0x03C3B420 MOV X20, X0
	0x03C3B424 CBNZ X2, 0x3C3B43C
	0x03C3B428 ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C3B42C ADD X0, X0, 0xB5F
	0x03C3B430 BL 0x1C16CB8
	0x03C3B434 MOV X2, X0
	0x03C3B438 STR X0, [X21 + 0x628]
	0x03C3B43C MOV X0, X20
	0x03C3B440 MOV X1, X19
	0x03C3B444 LDP X20, X19, [X31 + 0x10]
	0x03C3B448 LDP X30, X21, [X31], #0x20
	0x03C3B44C BR X2
	0x03C3B450 STR D8, [X31 - 0x30]!
	0x03C3B454 STP X30, X21, [X31 + 0x10]
	0x03C3B458 STP X20, X19, [X31 + 0x20]
	0x03C3B45C ADRP X21, 0x7AA000
	0x03C3B460 LDR X2, [X21 + 0x630]
	0x03C3B464 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AB000
	005 Move W8, [X20+1486]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x525000
	012 Move X0, [X0+1736]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1486], W8
	016 Move X8, [X19+24]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move W8, [X8+24]
	020 Compare W8, 0
	021 JumpIfEqual {23}
	022 Move W0, 1
	023 Move W8, [X19+44]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Void InitializeSynchronizationContext()

Disassembly:
	0x03C3B468 MOV W19, W1
	0x03C3B46C MOV X20, X0
	0x03C3B470 CBNZ X2, 0x3C3B488
	0x03C3B474 ADRP X0, 0xFFFFFFFFFCECC000
	0x03C3B478 ADD X0, X0, 0x25B
	0x03C3B47C BL 0x1C16CB8
	0x03C3B480 MOV X2, X0
	0x03C3B484 STR X0, [X21 + 0x630]
	0x03C3B488 MOV X0, X20
	0x03C3B48C MOV W1, W19
	0x03C3B490 LDP X20, X19, [X31 + 0x20]
	0x03C3B494 LDP X30, X21, [X31 + 0x10]
	0x03C3B498 MOV V0.16B, V8.16B
	0x03C3B49C LDR V8, [X31], #0x30
	0x03C3B4A0 BR X2
	0x03C3B4A4 STR X30, [X31 - 0x30]!
	0x03C3B4A8 STP X22, X21, [X31 + 0x10]
	0x03C3B4AC STP X20, X19, [X31 + 0x20]
	0x03C3B4B0 ADRP X22, 0x7AA000
	0x03C3B4B4 LDR X3, [X22 + 0x638]
	0x03C3B4B8 MOV W19, W2
	0x03C3B4BC MOV W20, W1
	0x03C3B4C0 MOV X21, X0
	0x03C3B4C4 CBNZ X3, 0x3C3B4DC
	0x03C3B4C8 ADRP X0, 0xFFFFFFFFFCEED000
	0x03C3B4CC ADD X0, X0, 0x947
	0x03C3B4D0 BL 0x1C16CB8
	0x03C3B4D4 MOV X3, X0
	0x03C3B4D8 STR X0, [X22 + 0x638]
	0x03C3B4DC MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7AB000
	005 Move W8, [X19+1487]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {15}
	010 Move X0, 0x525000
	011 Move X0, [X0+1704]
	012 Call 0x1C17CF4
	013 Move W8, 1
	014 Move [X19+1487], W8
	015 Move X0, X31
	016 Call Thread.get_CurrentThread
	017 Compare X0, 0
	018 JumpIfEqual {37}
	019 Move X19, 0x525000
	020 Move X19, [X19+1704]
	021 Move X1, X31
	022 Call Thread.get_ManagedThreadId, X0
	023 Move X8, [X19]
	024 Move W19, W0
	025 Move X0, X8
	026 Call 0x1C17F10
	027 Move W1, W19
	028 Move X20, X0
	029 Call UnitySynchronizationContext..ctor, X0, X1
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Call SynchronizationContext.SetSynchronizationContext, X0
	036 Return 
	037 Call 0x1C17F20

Method: System.Void ExecuteTasks()

Disassembly:
	0x03C3B4E0 MOV W1, W20
	0x03C3B4E4 MOV W2, W19
	0x03C3B4E8 LDP X20, X19, [X31 + 0x20]
	0x03C3B4EC LDP X22, X21, [X31 + 0x10]
	0x03C3B4F0 LDR X30, [X31], #0x30
	0x03C3B4F4 BR X3
	0x03C3B4F8 STP X30, X23, [X31 - 0x30]!
	0x03C3B4FC STP X22, X21, [X31 + 0x10]
	0x03C3B500 STP X20, X19, [X31 + 0x20]
	0x03C3B504 ADRP X23, 0x7AA000
	0x03C3B508 LDR X4, [X23 + 0x640]
	0x03C3B50C MOV X19, X3
	0x03C3B510 MOV W20, W2
	0x03C3B514 MOV W21, W1
	0x03C3B518 MOV X22, X0
	0x03C3B51C CBNZ X4, 0x3C3B534
	0x03C3B520 ADRP X0, 0xFFFFFFFFFCEB6000
	0x03C3B524 ADD X0, X0, 0x1E3
	0x03C3B528 BL 0x1C16CB8
	0x03C3B52C MOV X4, X0
	0x03C3B530 STR X0, [X23 + 0x640]
	0x03C3B534 MOV X0, X22

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7AB000
	004 Move W8, [X19+1488]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {14}
	009 Move X0, 0x525000
	010 Move X0, [X0+1704]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X19+1488], W8
	014 Move X0, X31
	015 Call SynchronizationContext.get_Current
	016 Compare X0, 0
	017 JumpIfEqual {23}
	018 Move X8, 0x525000
	019 Move X8, [X8+1704]
	020 Move X9, [X0]
	021 Move X8, [X8]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return 
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Call UnitySynchronizationContext.Exec, X0
	029 Return 

Method: System.Boolean ExecutePendingTasks(System.Int64 millisecondsTimeout)

Disassembly:
	0x03C3B538 MOV W1, W21
	0x03C3B53C MOV W2, W20
	0x03C3B540 MOV X3, X19
	0x03C3B544 LDP X20, X19, [X31 + 0x20]
	0x03C3B548 LDP X22, X21, [X31 + 0x10]
	0x03C3B54C LDP X30, X23, [X31], #0x30
	0x03C3B550 BR X4
	0x03C3B554 STP X30, X23, [X31 - 0x30]!
	0x03C3B558 STP X22, X21, [X31 + 0x10]
	0x03C3B55C STP X20, X19, [X31 + 0x20]
	0x03C3B560 ADRP X23, 0x7AA000
	0x03C3B564 LDR X4, [X23 + 0x640]
	0x03C3B568 MOV X19, X3
	0x03C3B56C MOV W20, W2
	0x03C3B570 MOV W21, W1
	0x03C3B574 MOV X22, X0
	0x03C3B578 CBNZ X4, 0x3C3B590
	0x03C3B57C ADRP X0, 0xFFFFFFFFFCEB6000
	0x03C3B580 ADD X0, X0, 0x1E3
	0x03C3B584 BL 0x1C16CB8
	0x03C3B588 MOV X4, X0
	0x03C3B58C STR X0, [X23 + 0x640]
	0x03C3B590 MOV X0, X22
	0x03C3B594 MOV W1, W21
	0x03C3B598 MOV W2, W20
	0x03C3B59C MOV X3, X19
	0x03C3B5A0 LDP X20, X19, [X31 + 0x20]
	0x03C3B5A4 LDP X22, X21, [X31 + 0x10]
	0x03C3B5A8 LDP X30, X23, [X31], #0x30
	0x03C3B5AC BR X4
	0x03C3B5B0 STR X30, [X31 - 0x40]!
	0x03C3B5B4 STP X24, X23, [X31 + 0x10]
	0x03C3B5B8 STP X22, X21, [X31 + 0x20]
	0x03C3B5BC STP X20, X19, [X31 + 0x30]
	0x03C3B5C0 ADRP X24, 0x7AA000
	0x03C3B5C4 LDR X5, [X24 + 0x648]
	0x03C3B5C8 MOV W19, W4
	0x03C3B5CC MOV W20, W3
	0x03C3B5D0 MOV X21, X2
	0x03C3B5D4 MOV W22, W1
	0x03C3B5D8 MOV X23, X0
	0x03C3B5DC CBNZ X5, 0x3C3B5F4
	0x03C3B5E0 ADRP X0, 0xFFFFFFFFFCED7000
	0x03C3B5E4 ADD X0, X0, 0xE60
	0x03C3B5E8 BL 0x1C16CB8
	0x03C3B5EC MOV X5, X0
	0x03C3B5F0 STR X0, [X24 + 0x648]
	0x03C3B5F4 MOV X0, X23
	0x03C3B5F8 MOV W1, W22
	0x03C3B5FC MOV X2, X21
	0x03C3B600 MOV W3, W20
	0x03C3B604 MOV W4, W19
	0x03C3B608 LDP X20, X19, [X31 + 0x30]
	0x03C3B60C LDP X22, X21, [X31 + 0x20]
	0x03C3B610 LDP X24, X23, [X31 + 0x10]
	0x03C3B614 LDR X30, [X31], #0x40
	0x03C3B618 BR X5
	0x03C3B61C STR X30, [X31 - 0x40]!
	0x03C3B620 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7AB000
	006 Move W8, [X20+1489]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x4C1000
	013 Move X0, [X0+1800]
	014 Call 0x1C17CF4
	015 Move X0, 0x525000
	016 Move X0, [X0+1704]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1489], W8
	020 Move X0, X31
	021 Call SynchronizationContext.get_Current
	022 Compare X0, 0
	023 JumpIfEqual {59}
	024 Move X8, 0x525000
	025 Move X8, [X8+1704]
	026 Move X9, [X0]
	027 Move X8, [X8]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Compare X20, 0
	031 JumpIfEqual {59}
	032 Move X8, 0x4C1000
	033 Move X8, [X8+1800]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X21, X0
	038 Call Stopwatch..ctor, X0
	039 Compare X21, 0
	040 JumpIfEqual {69}
	041 Move X0, X21
	042 Move X1, X31
	043 Call Stopwatch.Start, X0
	044 Move X0, X20
	045 Call UnitySynchronizationContext.HasPendingTasks, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {60}
	050 Move X0, X21
	051 Move X1, X31
	052 Call Stopwatch.get_ElapsedMilliseconds, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X20
	055 Call UnitySynchronizationContext.Exec, X0
	056 Move W0, 1
	057 Move X1, X31
	058 Call Thread.Sleep, X0
	059 Move W8, 1
	060 Move X0, X20
	061 Call UnitySynchronizationContext.HasPendingTasks, X0
	062 Xor W8, W0, 1
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 And W0, W8, 1
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Return X0
	069 Call 0x1C17F20

