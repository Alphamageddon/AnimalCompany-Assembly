Type: UnityEngine.Ray

Method: System.Void .ctor(UnityEngine.Vector3 origin, UnityEngine.Vector3 direction)

Disassembly:
	0x03C0BFC0 CSET W0, GT
	0x03C0BFC4 B 0x3C0BFCC
	0x03C0BFC8 MOV W0, W31
	0x03C0BFCC LDP X20, X19, [X31 + 0x50]
	0x03C0BFD0 LDP X22, X21, [X31 + 0x40]
	0x03C0BFD4 LDP X24, X23, [X31 + 0x30]
	0x03C0BFD8 LDP X26, X25, [X31 + 0x20]
	0x03C0BFDC LDP X28, X27, [X31 + 0x10]
	0x03C0BFE0 LDR X30, [X31], #0x60
	0x03C0BFE4 RET
	0x03C0BFE8 MOV X1, X31
	0x03C0BFEC MOV X2, X31
	0x03C0BFF0 MOV X3, X31
	0x03C0BFF4 B 0x3C1E5F4
	0x03C0BFF8 SUB X31, X31, 0x40
	0x03C0BFFC STP X30, X23, [X31 + 0x10]
	0x03C0C000 STP X22, X21, [X31 + 0x20]
	0x03C0C004 STP X20, X19, [X31 + 0x30]
	0x03C0C008 ADRP X22, 0x7D8000
	0x03C0C00C LDRB W8, [X22 + 0x218]
	0x03C0C010 MOV X21, X2
	0x03C0C014 MOV X19, X1
	0x03C0C018 MOV X20, X0
	0x03C0C01C TBNZ X8, 0x0, 0x3C0C04C
	0x03C0C020 ADRP X0, 0x4E9000
	0x03C0C024 LDR X0, [X0 + 0xC48]
	0x03C0C028 BL 0x1C16CF4
	0x03C0C02C ADRP X0, 0x4E7000
	0x03C0C030 LDR X0, [X0 + 0x9D0]
	0x03C0C034 BL 0x1C16CF4
	0x03C0C038 ADRP X0, 0x552000
	0x03C0C03C LDR X0, [X0 + 0xCB0]
	0x03C0C040 BL 0x1C16CF4
	0x03C0C044 MOVZ W8, 0x1
	0x03C0C048 STRB W8, [X22 + 0x218]
	0x03C0C04C CBNZ X21, 0x3C0C088
	0x03C0C050 ADRP X8, 0x4E9000
	0x03C0C054 LDR X8, [X8 + 0xC48]
	0x03C0C058 LDR X0, [X8]
	0x03C0C05C LDR W8, [X0 + 0xE0]
	0x03C0C060 CBNZ W8, 0x3C0C068
	0x03C0C064 BL 0x1C16DFC
	0x03C0C068 MOV X0, X31
	0x03C0C06C BL 0x3338524
	0x03C0C070 CBZ X0, 0x3C0C1FC
	0x03C0C074 LDR X8, [X0]
	0x03C0C078 LDR X9, [X8 + 0x218]
	0x03C0C07C LDR X1, [X8 + 0x220]
	0x03C0C080 BLR X9
	0x03C0C084 MOV X21, X0
	0x03C0C088 ADRP X8, 0x4E7000
	0x03C0C08C LDR X8, [X8 + 0x9D0]
	0x03C0C090 MOVZ W1, 0x4
	0x03C0C094 LDR X0, [X8]
	0x03C0C098 BL 0x1C16D6C
	0x03C0C09C LDR W8, [X20]
	0x03C0C0A0 MOV X22, X0
	0x03C0C0A4 ADD X0, X31, 0xC
	0x03C0C0A8 MOV X1, X19

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move [X0], S0
	008 Move [X0+8], S1
	009 Move [X0+8], S2
	010 Move X20, 0x7CE000
	011 Move W8, [X20+1925]
	012 Move V8, V5
	013 Move V9, V4
	014 Move X19, X0
	015 Move V10, V3
	016 Compare W8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, 0x4E9000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1925], W8
	023 Move X8, 0x4E8000
	024 Move X8, [X8+1448]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Multiply S0, S10, S10
	031 Multiply S1, S9, S9
	032 Move X8, -51515392
	033 Add S0, S0, S1
	034 Move V1, [X8+380]
	035 Multiply S2, S8, S8
	036 Add S0, S2, S0
	037 NotImplemented "Instruction FSQRT not yet implemented."
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 NotImplemented "Instruction FDIV not yet implemented."
	040 NotImplemented "Instruction FDIV not yet implemented."
	041 NotImplemented "Instruction FDIV not yet implemented."
	042 Move X20, 0x7CD000
	043 Move W8, [X20+1923]
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0x4E8000
	047 Move X0, [X0+1440]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X20+1923], W8
	051 Move X8, 0x4E8000
	052 Move X8, [X8+1440]
	053 Move X8, [X8]
	054 Move X8, [X8+184]
	055 Move S0, [X8]
	056 Move S1, [X8+4]
	057 Move V2, [X8+8]
	058 Move [X19+12], S0
	059 Move [X19+20], S1
	060 Move [X19+20], S2
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X30, [X31+24]
	064 Move D9, [X31+8]
	065 Move D8, [X31+16]
	066 Move V10, [X31+48]
	067 Return 

Method: UnityEngine.Vector3 get_origin()

Disassembly:
	0x03C0C0AC MOV X2, X21
	0x03C0C0B0 MOV X3, X31
	0x03C0C0B4 STR W8, [X31 + 0xC]

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, [X0+8]
	004 Return X0

Method: System.Void set_origin(UnityEngine.Vector3 value)

Disassembly:
	0x03C0C0B8 BL 0x337B8BC
	0x03C0C0BC CBZ X22, 0x3C0C1FC
	0x03C0C0C0 MOV X23, X0

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Return 

Method: UnityEngine.Vector3 get_direction()

Disassembly:
	0x03C0C0C4 CBZ X0, 0x3C0C0DC
	0x03C0C0C8 LDR X8, [X22]
	0x03C0C0CC MOV X0, X23

ISIL:
	001 Move S0, [X0+12]
	002 Move S1, [X0+16]
	003 Move V2, [X0+20]
	004 Return X0

Method: System.Void set_direction(UnityEngine.Vector3 value)

Disassembly:
	0x03C0C0D0 LDR X1, [X8 + 0x40]
	0x03C0C0D4 BL 0x1C16E00
	0x03C0C0D8 CBZ X0, 0x3C0C1F0
	0x03C0C0DC LDR W8, [X22 + 0x18]
	0x03C0C0E0 CBZ W8, 0x3C0C1EC
	0x03C0C0E4 STR X23, [X22 + 0x20]
	0x03C0C0E8 LDR W8, [X20 + 0x4]
	0x03C0C0EC ADD X0, X31, 0xC
	0x03C0C0F0 MOV X1, X19
	0x03C0C0F4 MOV X2, X21
	0x03C0C0F8 MOV X3, X31
	0x03C0C0FC STR W8, [X31 + 0xC]
	0x03C0C100 BL 0x337B8BC
	0x03C0C104 MOV X23, X0
	0x03C0C108 CBZ X0, 0x3C0C120
	0x03C0C10C LDR X8, [X22]
	0x03C0C110 MOV X0, X23
	0x03C0C114 LDR X1, [X8 + 0x40]
	0x03C0C118 BL 0x1C16E00
	0x03C0C11C CBZ X0, 0x3C0C1F0
	0x03C0C120 LDR W8, [X22 + 0x18]
	0x03C0C124 CMP W8, 0x1
	0x03C0C128 B.LS 0x3C0C1EC
	0x03C0C12C STR X23, [X22 + 0x28]
	0x03C0C130 LDR W8, [X20 + 0x8]
	0x03C0C134 ADD X0, X31, 0xC
	0x03C0C138 MOV X1, X19
	0x03C0C13C MOV X2, X21
	0x03C0C140 MOV X3, X31
	0x03C0C144 STR W8, [X31 + 0xC]
	0x03C0C148 BL 0x337B8BC
	0x03C0C14C MOV X23, X0
	0x03C0C150 CBZ X0, 0x3C0C168
	0x03C0C154 LDR X8, [X22]
	0x03C0C158 MOV X0, X23
	0x03C0C15C LDR X1, [X8 + 0x40]
	0x03C0C160 BL 0x1C16E00
	0x03C0C164 CBZ X0, 0x3C0C1F0
	0x03C0C168 LDR W8, [X22 + 0x18]
	0x03C0C16C CMP W8, 0x2
	0x03C0C170 B.LS 0x3C0C1EC
	0x03C0C174 STR X23, [X22 + 0x30]
	0x03C0C178 LDR W8, [X20 + 0xC]
	0x03C0C17C ADD X0, X31, 0xC
	0x03C0C180 MOV X1, X19
	0x03C0C184 MOV X2, X21
	0x03C0C188 MOV X3, X31
	0x03C0C18C STR W8, [X31 + 0xC]
	0x03C0C190 BL 0x337B8BC
	0x03C0C194 MOV X19, X0
	0x03C0C198 CBZ X0, 0x3C0C1B0
	0x03C0C19C LDR X8, [X22]
	0x03C0C1A0 MOV X0, X19
	0x03C0C1A4 LDR X1, [X8 + 0x40]
	0x03C0C1A8 BL 0x1C16E00
	0x03C0C1AC CBZ X0, 0x3C0C1F0
	0x03C0C1B0 LDR W8, [X22 + 0x18]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x7CD000
	008 Move W8, [X20+1925]
	009 Move V8, V2
	010 Move V9, V1
	011 Move V10, V0
	012 Move X19, X0
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0x4E8000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1925], W8
	020 Move X8, 0x4E8000
	021 Move X8, [X8+1448]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Multiply S0, S10, S10
	028 Multiply S1, S9, S9
	029 Move X8, -51515392
	030 Add S0, S0, S1
	031 Move V1, [X8+380]
	032 Multiply S2, S8, S8
	033 Add S0, S2, S0
	034 NotImplemented "Instruction FSQRT not yet implemented."
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 NotImplemented "Instruction FDIV not yet implemented."
	037 NotImplemented "Instruction FDIV not yet implemented."
	038 NotImplemented "Instruction FDIV not yet implemented."
	039 Move X20, 0x7CD000
	040 Move W8, [X20+1923]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0x4E8000
	044 Move X0, [X0+1440]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X20+1923], W8
	048 Move X8, 0x4E8000
	049 Move X8, [X8+1440]
	050 Move X8, [X8]
	051 Move X8, [X8+184]
	052 Move S0, [X8]
	053 Move S1, [X8+4]
	054 Move V2, [X8+8]
	055 Move [X19+12], S0
	056 Move [X19+20], S1
	057 Move [X19+20], S2
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+24]
	061 Move D9, [X31+8]
	062 Move D8, [X31+16]
	063 Move V10, [X31+48]
	064 Return 

Method: UnityEngine.Vector3 GetPoint(System.Single distance)

Disassembly:
	0x03C0C1B4 CMP W8, 0x3
	0x03C0C1B8 B.LS 0x3C0C1EC
	0x03C0C1BC ADRP X8, 0x552000
	0x03C0C1C0 LDR X8, [X8 + 0xCB0]
	0x03C0C1C4 STR X19, [X22 + 0x38]
	0x03C0C1C8 MOV X1, X22
	0x03C0C1CC MOV X2, X31
	0x03C0C1D0 LDR X0, [X8]
	0x03C0C1D4 BL 0x3C96574
	0x03C0C1D8 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Move V2, [X0+20]
	003 Move V3, [X0]
	004 Move V4, [X0+8]
	005 NotImplemented "Instruction INVALID not yet implemented."
	006 Multiply S2, S2, S0
	007 Add V0, V3, V1
	008 Add S2, S4, S2
	009 Move S1, V0.S[1]
	010 Return X0

Method: System.String ToString()

Disassembly:
	0x03C0C1DC LDP X22, X21, [X31 + 0x20]
	0x03C0C1E0 LDP X30, X23, [X31 + 0x10]
	0x03C0C1E4 ADD X31, X31, 0x40
	0x03C0C1E8 RET

ISIL:
	001 Move X1, X31
	002 Move X2, X31
	003 Move X3, X31
	004 Call 0x2455568
	005 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider formatProvider)

Disassembly:
	0x03C0C1EC BL 0x1C16F28
	0x03C0C1F0 BL 0x1C16F44
	0x03C0C1F4 MOV X1, X31
	0x03C0C1F8 BL 0x1C16DEC
	0x03C0C1FC BL 0x1C16F20
	0x03C0C200 LDR W8, [X0]
	0x03C0C204 CMP W8, W1
	0x03C0C208 B.NE 0x3C0C23C
	0x03C0C20C LDR W8, [X0 + 0x4]
	0x03C0C210 UBFM X9, X1, 0x20, 0x3F
	0x03C0C214 CMP W8, W9
	0x03C0C218 B.NE 0x3C0C23C
	0x03C0C21C LDR W8, [X0 + 0x8]
	0x03C0C220 CMP W8, W2
	0x03C0C224 B.NE 0x3C0C23C
	0x03C0C228 LDR W8, [X0 + 0xC]
	0x03C0C22C UBFM X9, X2, 0x20, 0x3F
	0x03C0C230 CMP W8, W9
	0x03C0C234 CSET W0, EQ
	0x03C0C238 RET
	0x03C0C23C MOV W0, W31
	0x03C0C240 RET
	0x03C0C244 STR X30, [X31 - 0x20]!
	0x03C0C248 STP X20, X19, [X31 + 0x10]
	0x03C0C24C MOV X1, X31
	0x03C0C250 MOV X19, X0
	0x03C0C254 BL 0x33BDD8C
	0x03C0C258 ADRP X20, 0x7D8000
	0x03C0C25C LDR X8, [X20 + 0x220]
	0x03C0C260 CBNZ X8, 0x3C0C278
	0x03C0C264 ADRP X0, 0xFFFFFFFFFCF02000
	0x03C0C268 ADD X0, X0, 0xE2C
	0x03C0C26C BL 0x1C16CB8
	0x03C0C270 MOV X8, X0
	0x03C0C274 STR X0, [X20 + 0x220]
	0x03C0C278 BLR X8
	0x03C0C27C STR X0, [X19 + 0x10]
	0x03C0C280 LDP X20, X19, [X31 + 0x10]
	0x03C0C284 LDR X30, [X31], #0x20
	0x03C0C288 RET
	0x03C0C28C STP X30, X19, [X31 - 0x10]!
	0x03C0C290 ADRP X19, 0x7D8000
	0x03C0C294 LDR X0, [X19 + 0x220]
	0x03C0C298 CBNZ X0, 0x3C0C2AC
	0x03C0C29C ADRP X0, 0xFFFFFFFFFCF02000
	0x03C0C2A0 ADD X0, X0, 0xE2C
	0x03C0C2A4 BL 0x1C16CB8
	0x03C0C2A8 STR X0, [X19 + 0x220]
	0x03C0C2AC LDP X30, X19, [X31], #0x10
	0x03C0C2B0 BR X0
	0x03C0C2B4 STP X30, X21, [X31 - 0x20]!
	0x03C0C2B8 STP X20, X19, [X31 + 0x10]
	0x03C0C2BC MOV X20, X1
	0x03C0C2C0 MOV X1, X31
	0x03C0C2C4 MOV X19, X2
	0x03C0C2C8 MOV X21, X0
	0x03C0C2CC BL 0x33BDD8C
	0x03C0C2D0 STP X19, X20, [X21 + 0x10]
	0x03C0C2D4 LDP X20, X19, [X31 + 0x10]
	0x03C0C2D8 LDP X30, X21, [X31], #0x20
	0x03C0C2DC RET
	0x03C0C2E0 STP X30, X21, [X31 - 0x20]!
	0x03C0C2E4 STP X20, X19, [X31 + 0x10]
	0x03C0C2E8 LDR X8, [X0 + 0x18]
	0x03C0C2EC MOV X19, X0
	0x03C0C2F0 CBNZ X8, 0x3C0C2FC
	0x03C0C2F4 MOV X0, X19
	0x03C0C2F8 BL 0x3C0C380
	0x03C0C2FC MOV X0, X19
	0x03C0C300 LDP X20, X19, [X31 + 0x10]
	0x03C0C304 MOV X1, X31
	0x03C0C308 LDP X30, X21, [X31], #0x20
	0x03C0C30C B 0x33CB4DC
	0x03C0C310 CMP W1, 0x1
	0x03C0C314 MOV X21, X0
	0x03C0C318 B.NE 0x3C0C348
	0x03C0C31C MOV X0, X21
	0x03C0C320 BL 0x3EB1AD0
	0x03C0C324 LDR X20, [X0]
	0x03C0C328 BL 0x3EB1AE0
	0x03C0C32C MOV X0, X19
	0x03C0C330 MOV X1, X31
	0x03C0C334 BL 0x33CB4DC
	0x03C0C338 CBNZ X20, 0x3C0C350
	0x03C0C33C LDP X20, X19, [X31 + 0x10]
	0x03C0C340 LDP X30, X21, [X31], #0x20
	0x03C0C344 RET
	0x03C0C348 MOV X20, X31
	0x03C0C34C B 0x3C0C35C
	0x03C0C350 MOV X0, X20
	0x03C0C354 BL 0x1C16F18
	0x03C0C358 MOV X21, X0
	0x03C0C35C MOV X0, X19
	0x03C0C360 MOV X1, X31
	0x03C0C364 BL 0x33CB4DC
	0x03C0C368 CBNZ X20, 0x3C0C374
	0x03C0C36C MOV X0, X21
	0x03C0C370 BL 0x1D2C690

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7D9000
	008 Move X22, 0x4EF000
	009 Move W8, [X23+529]
	010 Move X22, [X22+3704]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x4EA000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0x4E8000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x4EF000
	025 Move X0, [X0+3704]
	026 Call 0x1C17CF4
	027 Move X0, 0x511000
	028 Move X0, [X0+3392]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+529], W8
	032 Move X0, X21
	033 Move X1, X31
	034 Call String.IsNullOrEmpty, X0
	035 Move X8, [X22]
	036 And W31, W0, 1
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Compare X20, 0
	039 JumpIfNotEqual {56}
	040 Move X8, 0x4EA000
	041 Move X8, [X8+3144]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X31
	048 Call CultureInfo.get_InvariantCulture
	049 Compare X0, 0
	050 JumpIfEqual {113}
	051 Move X8, [X0]
	052 Move X9, [X8+536]
	053 Move X1, [X8+544]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X20, X0
	056 Move X8, 0x4E8000
	057 Move X8, [X8+2512]
	058 Move W1, 2
	059 Move X0, [X8]
	060 Call 0x1C17D6C
	061 Move X22, X0
	062 Move X0, X19
	063 Move X1, X21
	064 Move X2, X20
	065 Move X3, X31
	066 Call 0x2431694
	067 Compare X22, 0
	068 JumpIfEqual {113}
	069 Move X23, X0
	070 Compare X0, 0
	071 JumpIfEqual {78}
	072 Move X8, [X22]
	073 Move X0, X23
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {114}
	078 Move W8, [X22+24]
	079 Compare W8, 0
	080 JumpIfEqual {112}
	081 Add X0, X19, 12
	082 Move X1, X21
	083 Move X2, X20
	084 Move X3, X31
	085 Move [X22+32], X23
	086 Call 0x2431694
	087 Move X19, X0
	088 Compare X0, 0
	089 JumpIfEqual {96}
	090 Move X8, [X22]
	091 Move X0, X19
	092 Move X1, [X8+64]
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {114}
	096 Move W8, [X22+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X8, 0x511000
	099 Move X8, [X8+3392]
	100 Move [X22+40], X19
	101 Move X1, X22
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X0, [X8]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X2, X31
	108 Move X30, [X31+48]
	109 Move X23, [X31+56]
	110 Call UnityString.Format, X0, X1
	111 Return X0
	112 Call 0x1C17F28
	113 Call 0x1C17F20
	114 Call 0x1C17F44
	115 Move X1, X31
	116 Call 0x1C17DEC

