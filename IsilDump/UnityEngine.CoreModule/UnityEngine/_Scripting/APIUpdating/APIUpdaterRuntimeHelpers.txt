Type: UnityEngine._Scripting.APIUpdating.APIUpdaterRuntimeHelpers

Method: System.Boolean GetMovedFromAttributeDataForType(System.Type sourceType, out System.String assembly, out System.String nsp, out System.String klass)

Disassembly:
	0x03C431C0 ADRP X20, 0x51C000
	0x03C431C4 LDRB W8, [X19 + 0xB62]
	0x03C431C8 LDR X20, [X20 + 0x898]
	0x03C431CC TBNZ X8, 0x0, 0x3C431E4
	0x03C431D0 ADRP X0, 0x51C000
	0x03C431D4 LDR X0, [X0 + 0x898]
	0x03C431D8 BL 0x1C16CF4
	0x03C431DC MOVZ W8, 0x1
	0x03C431E0 STRB W8, [X19 + 0xB62]
	0x03C431E4 LDR X0, [X20]
	0x03C431E8 BL 0x1C16F10
	0x03C431EC MOV X1, X31
	0x03C431F0 MOV X19, X0
	0x03C431F4 BL 0x33BDD8C
	0x03C431F8 LDR X8, [X20]
	0x03C431FC LDR X8, [X8 + 0xB8]
	0x03C43200 STR X19, [X8]
	0x03C43204 LDP X20, X19, [X31 + 0x10]
	0x03C43208 LDR X30, [X31], #0x20
	0x03C4320C RET
	0x03C43210 STP X30, X21, [X31 - 0x20]!
	0x03C43214 STP X20, X19, [X31 + 0x10]
	0x03C43218 ADRP X20, 0x7A2000
	0x03C4321C ADRP X21, 0x51C000
	0x03C43220 LDRB W8, [X20 + 0xB63]
	0x03C43224 LDR X21, [X21 + 0x898]
	0x03C43228 MOV X19, X0
	0x03C4322C TBNZ X8, 0x0, 0x3C43244
	0x03C43230 ADRP X0, 0x51C000
	0x03C43234 LDR X0, [X0 + 0x898]
	0x03C43238 BL 0x1C16CF4
	0x03C4323C MOVZ W8, 0x1
	0x03C43240 STRB W8, [X20 + 0xB63]
	0x03C43244 LDR X0, [X21]
	0x03C43248 LDR W8, [X0 + 0xE0]
	0x03C4324C CBNZ W8, 0x3C43254
	0x03C43250 BL 0x1C16DFC
	0x03C43254 MOV X0, X19
	0x03C43258 LDP X20, X19, [X31 + 0x10]
	0x03C4325C MOV X1, X31
	0x03C43260 LDP X30, X21, [X31], #0x20
	0x03C43264 B 0x33BDD8C
	0x03C43268 STR X30, [X31 - 0x30]!
	0x03C4326C STP X22, X21, [X31 + 0x10]
	0x03C43270 STP X20, X19, [X31 + 0x20]
	0x03C43274 ADRP X21, 0x7A2000
	0x03C43278 ADRP X22, 0x51C000
	0x03C4327C LDRB W8, [X21 + 0xB64]
	0x03C43280 LDR X22, [X22 + 0x898]
	0x03C43284 MOV X19, X1
	0x03C43288 MOV X20, X0
	0x03C4328C TBNZ X8, 0x0, 0x3C432A4
	0x03C43290 ADRP X0, 0x51C000
	0x03C43294 LDR X0, [X0 + 0x898]
	0x03C43298 BL 0x1C16CF4
	0x03C4329C MOVZ W8, 0x1
	0x03C432A0 STRB W8, [X21 + 0xB64]
	0x03C432A4 LDR X0, [X22]
	0x03C432A8 LDR W8, [X0 + 0xE0]
	0x03C432AC CBNZ W8, 0x3C432B4
	0x03C432B0 BL 0x1C16DFC
	0x03C432B4 MOV X0, X20
	0x03C432B8 MOV X1, X31
	0x03C432BC BL 0x33BDD8C
	0x03C432C0 STR X19, [X20 + 0x10]
	0x03C432C4 LDP X20, X19, [X31 + 0x20]
	0x03C432C8 LDP X22, X21, [X31 + 0x10]
	0x03C432CC LDR X30, [X31], #0x30
	0x03C432D0 RET
	0x03C432D4 STR X30, [X31 - 0x30]!
	0x03C432D8 STP X22, X21, [X31 + 0x10]
	0x03C432DC STP X20, X19, [X31 + 0x20]
	0x03C432E0 ADRP X22, 0x7A2000
	0x03C432E4 ADRP X21, 0x50E000
	0x03C432E8 LDRB W8, [X22 + 0xB65]
	0x03C432EC LDR X21, [X21 + 0xE30]
	0x03C432F0 MOV W20, W1
	0x03C432F4 MOV X19, X0
	0x03C432F8 TBNZ X8, 0x0, 0x3C43310

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7A3000
	010 Move X23, 0x51D000
	011 Move X24, 0x4B1000
	012 Move W8, [X25+2824]
	013 Move X23, [X23+2136]
	014 Move X24, [X24+1728]
	015 Move X21, X3
	016 Move X20, X2
	017 Move X19, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x51D000
	024 Move X0, [X0+2136]
	025 Call 0x1C17CF4
	026 Move X0, 0x51D000
	027 Move X0, [X0+2144]
	028 Call 0x1C17CF4
	029 Move X0, 0x4B1000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+2824], W8
	034 Move [X21], X31
	035 Move [X20], X31
	036 Move [X19], X31
	037 Move X0, [X24]
	038 Move X23, [X23]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X23
	044 Move X1, X31
	045 Call Type.GetTypeFromHandle, X0
	046 Compare X22, 0
	047 JumpIfEqual {90}
	048 Move X8, [X22]
	049 Move X1, X0
	050 Move X0, X22
	051 Move W2, W31
	052 Move X9, [X8+520]
	053 Move X3, [X8+528]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare X0, 0
	056 JumpIfEqual {90}
	057 Move W8, [X0+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X0+32]
	060 Compare X0, 0
	061 JumpIfEqual {90}
	062 Move X10, 0x51D000
	063 Move X10, [X10+2144]
	064 Move X9, [X0]
	065 Move X1, [X10]
	066 Move W11, [X9+304]
	067 Move W10, [X1+304]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X9, [X9+200]
	070 Add X9, X9, X10
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X9, [X0+16]
	074 Move [X21], X9
	075 Move X9, [X0+24]
	076 Move [X20], X9
	077 Move X9, [X0+32]
	078 Move [X19], X9
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CSET not yet implemented."
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return X0
	090 Call 0x1C17F20
	091 Call 0x1C181E0

Method: System.Boolean GetObsoleteTypeRedirection(System.Type sourceType, out System.String assemblyName, out System.String nsp, out System.String className)

Disassembly:
	0x03C432FC ADRP X0, 0x50E000
	0x03C43300 LDR X0, [X0 + 0xE30]
	0x03C43304 BL 0x1C16CF4
	0x03C43308 MOVZ W8, 0x1
	0x03C4330C STRB W8, [X22 + 0xB65]
	0x03C43310 ANDS W31, W20, 0x1
	0x03C43314 MOVZ W8, 0x8
	0x03C43318 MOVZ W9, 0x108
	0x03C4331C CSEL W2, W9, W8, NE
	0x03C43320 MOVZ W1, 0x1
	0x03C43324 MOV X0, X19
	0x03C43328 MOV W3, W31
	0x03C4332C MOV X4, X31
	0x03C43330 BL 0x3BFE7FC
	0x03C43334 MOV X1, X31
	0x03C43338 MOV X2, X31
	0x03C4333C MOV X19, X0
	0x03C43340 BL 0x33BE5B0
	0x03C43344 LDR X8, [X21]
	0x03C43348 TBZ X0, 0x0, 0x3C4336C
	0x03C4334C LDR W9, [X8 + 0xE0]
	0x03C43350 CBNZ W9, 0x3C43360
	0x03C43354 MOV X0, X8
	0x03C43358 BL 0x1C16DFC
	0x03C4335C LDR X8, [X21]
	0x03C43360 LDR X8, [X8 + 0xB8]
	0x03C43364 LDR X0, [X8]
	0x03C43368 B 0x3C43384
	0x03C4336C MOV X0, X8
	0x03C43370 BL 0x1C16F10
	0x03C43374 MOV X1, X19
	0x03C43378 MOV X20, X0
	0x03C4337C BL 0x3C43268
	0x03C43380 MOV X0, X20
	0x03C43384 LDP X20, X19, [X31 + 0x20]
	0x03C43388 LDP X22, X21, [X31 + 0x10]
	0x03C4338C LDR X30, [X31], #0x30
	0x03C43390 RET
	0x03C43394 STR X30, [X31 - 0x20]!
	0x03C43398 STP X20, X19, [X31 + 0x10]
	0x03C4339C ADRP X19, 0x7A2000
	0x03C433A0 ADRP X20, 0x50E000
	0x03C433A4 LDRB W8, [X19 + 0xB66]
	0x03C433A8 LDR X20, [X20 + 0xE30]
	0x03C433AC TBNZ X8, 0x0, 0x3C433C4
	0x03C433B0 ADRP X0, 0x50E000
	0x03C433B4 LDR X0, [X0 + 0xE30]
	0x03C433B8 BL 0x1C16CF4
	0x03C433BC MOVZ W8, 0x1
	0x03C433C0 STRB W8, [X19 + 0xB66]
	0x03C433C4 LDR X0, [X20]
	0x03C433C8 BL 0x1C16F10
	0x03C433CC MOV X19, X0
	0x03C433D0 BL 0x3C43210
	0x03C433D4 LDR X8, [X20]
	0x03C433D8 LDR X8, [X8 + 0xB8]
	0x03C433DC STR X19, [X8]
	0x03C433E0 LDP X20, X19, [X31 + 0x10]
	0x03C433E4 LDR X30, [X31], #0x20
	0x03C433E8 RET
	0x03C433EC SUB X31, X31, 0x30
	0x03C433F0 STR X30, [X31 + 0x10]
	0x03C433F4 STP X20, X19, [X31 + 0x20]
	0x03C433F8 ADRP X20, 0x7A2000
	0x03C433FC LDR X8, [X20 + 0xB68]
	0x03C43400 MOV X19, X0
	0x03C43404 STR W31, [X31 + 0x8]
	0x03C43408 STR X31, [X31]
	0x03C4340C CBNZ X8, 0x3C43424
	0x03C43410 ADRP X0, 0xFFFFFFFFFCEB0000
	0x03C43414 ADD X0, X0, 0x53A
	0x03C43418 BL 0x1C16CB8
	0x03C4341C MOV X8, X0
	0x03C43420 STR X0, [X20 + 0xB68]
	0x03C43424 ADD X1, X31, 0x0
	0x03C43428 MOV X0, X19
	0x03C4342C BLR X8
	0x03C43430 LDP S0, S1, [X31]
	0x03C43434 LDR V2, [X31 + 0x8]
	0x03C43438 LDP X20, X19, [X31 + 0x20]
	0x03C4343C LDR X30, [X31 + 0x10]
	0x03C43440 ADD X31, X31, 0x30
	0x03C43444 RET
	0x03C43448 STP X30, X21, [X31 - 0x20]!
	0x03C4344C STP X20, X19, [X31 + 0x10]
	0x03C43450 ADRP X21, 0x7A2000
	0x03C43454 LDR X2, [X21 + 0xB68]
	0x03C43458 MOV X19, X1
	0x03C4345C MOV X20, X0
	0x03C43460 CBNZ X2, 0x3C43478
	0x03C43464 ADRP X0, 0xFFFFFFFFFCEB0000
	0x03C43468 ADD X0, X0, 0x53A
	0x03C4346C BL 0x1C16CB8
	0x03C43470 MOV X2, X0
	0x03C43474 STR X0, [X21 + 0xB68]
	0x03C43478 MOV X0, X20
	0x03C4347C MOV X1, X19
	0x03C43480 LDP X20, X19, [X31 + 0x10]
	0x03C43484 LDP X30, X21, [X31], #0x20
	0x03C43488 BR X2
	0x03C4348C SUB X31, X31, 0x30
	0x03C43490 STP X31, X30, [X31 + 0x8]
	0x03C43494 STP X20, X19, [X31 + 0x20]
	0x03C43498 ADRP X20, 0x7A2000
	0x03C4349C LDR X8, [X20 + 0xB70]
	0x03C434A0 MOV X19, X0
	0x03C434A4 STR X31, [X31]
	0x03C434A8 CBNZ X8, 0x3C434C0
	0x03C434AC ADRP X0, 0xFFFFFFFFFCECC000
	0x03C434B0 ADD X0, X0, 0x6C9
	0x03C434B4 BL 0x1C16CB8
	0x03C434B8 MOV X8, X0
	0x03C434BC STR X0, [X20 + 0xB70]
	0x03C434C0 ADD X1, X31, 0x0
	0x03C434C4 MOV X0, X19
	0x03C434C8 BLR X8
	0x03C434CC LDP S0, S1, [X31]
	0x03C434D0 LDP S2, S3, [X31 + 0x8]
	0x03C434D4 LDP X20, X19, [X31 + 0x20]
	0x03C434D8 LDR X30, [X31 + 0x10]
	0x03C434DC ADD X31, X31, 0x30
	0x03C434E0 RET
	0x03C434E4 STP X30, X21, [X31 - 0x20]!
	0x03C434E8 STP X20, X19, [X31 + 0x10]
	0x03C434EC ADRP X21, 0x7A2000
	0x03C434F0 LDR X2, [X21 + 0xB70]
	0x03C434F4 MOV X19, X1
	0x03C434F8 MOV X20, X0
	0x03C434FC CBNZ X2, 0x3C43514
	0x03C43500 ADRP X0, 0xFFFFFFFFFCECC000
	0x03C43504 ADD X0, X0, 0x6C9
	0x03C43508 BL 0x1C16CB8
	0x03C4350C MOV X2, X0
	0x03C43510 STR X0, [X21 + 0xB70]
	0x03C43514 MOV X0, X20
	0x03C43518 MOV X1, X19
	0x03C4351C LDP X20, X19, [X31 + 0x10]
	0x03C43520 LDP X30, X21, [X31], #0x20
	0x03C43524 BR X2
	0x03C43528 SUB X31, X31, 0x30
	0x03C4352C STR X30, [X31 + 0x10]
	0x03C43530 STP X20, X19, [X31 + 0x20]
	0x03C43534 ADRP X20, 0x7A2000
	0x03C43538 LDR X8, [X20 + 0xB78]
	0x03C4353C MOV X19, X0
	0x03C43540 STR W31, [X31 + 0x8]
	0x03C43544 STR X31, [X31]
	0x03C43548 CBNZ X8, 0x3C43560
	0x03C4354C ADRP X0, 0xFFFFFFFFFCEBE000
	0x03C43550 ADD X0, X0, 0x26D
	0x03C43554 BL 0x1C16CB8
	0x03C43558 MOV X8, X0
	0x03C4355C STR X0, [X20 + 0xB78]
	0x03C43560 ADD X1, X31, 0x0
	0x03C43564 MOV X0, X19
	0x03C43568 BLR X8
	0x03C4356C LDP S0, S1, [X31]
	0x03C43570 LDR V2, [X31 + 0x8]
	0x03C43574 LDP X20, X19, [X31 + 0x20]
	0x03C43578 LDR X30, [X31 + 0x10]
	0x03C4357C ADD X31, X31, 0x30
	0x03C43580 RET
	0x03C43584 STP X30, X21, [X31 - 0x20]!
	0x03C43588 STP X20, X19, [X31 + 0x10]
	0x03C4358C ADRP X21, 0x7A2000
	0x03C43590 LDR X2, [X21 + 0xB78]
	0x03C43594 MOV X19, X1
	0x03C43598 MOV X20, X0
	0x03C4359C CBNZ X2, 0x3C435B4
	0x03C435A0 ADRP X0, 0xFFFFFFFFFCEBE000
	0x03C435A4 ADD X0, X0, 0x26D
	0x03C435A8 BL 0x1C16CB8
	0x03C435AC MOV X2, X0
	0x03C435B0 STR X0, [X21 + 0xB78]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7A3000
	010 Move X23, 0x4DA000
	011 Move X24, 0x4B1000
	012 Move W8, [X25+2825]
	013 Move X23, [X23+2856]
	014 Move X24, [X24+1728]
	015 Move X21, X3
	016 Move X19, X2
	017 Move X22, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0x4DA000
	024 Move X0, [X0+2856]
	025 Call 0x1C17CF4
	026 Move X0, 0x511000
	027 Move X0, [X0+1912]
	028 Call 0x1C17CF4
	029 Move X0, 0x4B1000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0x51D000
	033 Move X0, [X0+2152]
	034 Call 0x1C17CF4
	035 Move X0, 0x4B1000
	036 Move X0, [X0+2440]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X25+2825], W8
	040 Move X0, [X24]
	041 Move X23, [X23]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X23
	047 Move X1, X31
	048 Call Type.GetTypeFromHandle, X0
	049 Compare X20, 0
	050 JumpIfEqual {199}
	051 Move X8, [X20]
	052 Move X1, X0
	053 Move X0, X20
	054 Move W2, W31
	055 Move X9, [X8+520]
	056 Move X3, [X8+528]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move [X22], X31
	059 Move [X19], X31
	060 Move [X21], X31
	061 Compare X0, 0
	062 JumpIfEqual {199}
	063 Move W8, [X0+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, [X0+32]
	066 Compare X0, 0
	067 JumpIfEqual {199}
	068 Move X8, 0x511000
	069 Move X8, [X8+1912]
	070 Move X1, [X8]
	071 Move X8, [X0]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X23, [X0+16]
	074 Move X1, X31
	075 Move X0, X23
	076 Call String.IsNullOrEmpty, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {140}
	081 Compare X23, 0
	082 JumpIfEqual {199}
	083 Move X8, 0x51D000
	084 Move X8, [X8+2152]
	085 Move X0, X23
	086 Move X2, X31
	087 Move X24, [X8]
	088 Move X1, X24
	089 Call String.IndexOf, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, -2147483648
	092 Compare TEMP, -2147483648
	093 JumpIfEqual {140}
	094 Compare X24, 0
	095 JumpIfEqual {199}
	096 Move W8, [X24+16]
	097 Move X2, X31
	098 Add W1, W8, W0
	099 Move X0, X23
	100 Call String.Substring, X0, X1
	101 Compare X0, 0
	102 JumpIfEqual {199}
	103 Move X1, X31
	104 Call String.Trim, X0
	105 Compare X0, 0
	106 JumpIfEqual {199}
	107 Move W8, [X0+16]
	108 Move X23, X0
	109 Compare W8, 0
	110 JumpIfEqual {140}
	111 Move X0, X23
	112 Move W1, W31
	113 Move X2, X31
	114 Call String.get_Chars, X0, X1
	115 And W8, W0, 0xFFFF
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W1, 93
	118 Move X0, X23
	119 Move X2, X31
	120 Call String.IndexOf, X0, X1
	121 Add W31, W0, 1
	122 Move W24, W0
	123 Subtract W2, W0, 1
	124 Move W1, 1
	125 Move X0, X23
	126 Move X3, X31
	127 Call String.Substring, X0, X1, X2
	128 Move [X22], X0
	129 Add W1, W24, 1
	130 Move X0, X23
	131 Move X2, X31
	132 Call String.Substring, X0, X1
	133 Compare X0, 0
	134 JumpIfEqual {199}
	135 Move X1, X31
	136 Call String.Trim, X0
	137 Move X23, X0
	138 Compare X0, 0
	139 JumpIfNotEqual {165}
	140 Move W0, W31
	141 Move X20, [X31+48]
	142 Move X19, [X31+56]
	143 Move X22, [X31+32]
	144 Move X21, [X31+40]
	145 Move X24, [X31+16]
	146 Move X23, [X31+24]
	147 Move X30, [X31+64]
	148 Move X25, [X31+72]
	149 Return X0
	150 Move X8, [X20]
	151 Move X0, X20
	152 Move X9, [X8+760]
	153 Move X1, [X8+768]
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Compare X0, 0
	156 JumpIfEqual {199}
	157 Move X8, [X0]
	158 Move X9, [X8+600]
	159 Move X1, [X8+608]
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Compare X0, 0
	162 JumpIfEqual {199}
	163 Move X8, [X0+16]
	164 Move [X22], X8
	165 Move W1, 46
	166 Move X0, X23
	167 Move X2, X31
	168 Call String.LastIndexOf, X0, X1
	169 Move TEMP, X0
	170 And TEMP, TEMP, -2147483648
	171 Compare TEMP, -2147483648
	172 JumpIfEqual {184}
	173 Move W22, W0
	174 Add W1, W0, 1
	175 Move X0, X23
	176 Move X2, X31
	177 Call String.Substring, X0, X1
	178 Move [X21], X0
	179 Move X0, X23
	180 Move W1, W31
	181 Move W2, W22
	182 Move X3, X31
	183 Call String.Substring, X0, X1, X2
	184 Move [X21], X23
	185 Move X8, 0x4B1000
	186 Move X8, [X8+2440]
	187 Move X0, [X8]
	188 Compare X0, 0
	189 JumpIfEqual {199}
	190 Move W8, [X0+16]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X8, [X20]
	193 Move X0, X20
	194 Move X9, [X8+712]
	195 Move X1, [X8+720]
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move [X19], X0
	198 Move W0, 1
	199 Call 0x1C17F20
	200 Call 0x1C181E0

