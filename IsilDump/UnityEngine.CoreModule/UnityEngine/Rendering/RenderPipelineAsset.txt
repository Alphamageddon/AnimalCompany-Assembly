Type: UnityEngine.Rendering.RenderPipelineAsset

Method: UnityEngine.Rendering.RenderPipeline InternalCreatePipeline()

Disassembly:
	0x03C55BCC BL 0x1C16CF4
	0x03C55BD0 ADRP X0, 0x50A000
	0x03C55BD4 LDR X0, [X0 + 0xDE0]
	0x03C55BD8 BL 0x1C16CF4
	0x03C55BDC ADRP X0, 0x4FB000
	0x03C55BE0 LDR X0, [X0 + 0xC80]
	0x03C55BE4 BL 0x1C16CF4
	0x03C55BE8 MOVZ W8, 0x1
	0x03C55BEC STRB W8, [X22 + 0x79]
	0x03C55BF0 LDR X0, [X23]
	0x03C55BF4 LDR W8, [X0 + 0xE0]
	0x03C55BF8 CBNZ W8, 0x3C55C00
	0x03C55BFC BL 0x1C16DFC
	0x03C55C00 MOV X0, X21
	0x03C55C04 BL 0x3C55260
	0x03C55C08 ADRP X21, 0x791000
	0x03C55C0C LDRB W8, [X21 + 0x300]
	0x03C55C10 CBNZ W8, 0x3C55C28
	0x03C55C14 ADRP X0, 0x4FF000
	0x03C55C18 LDR X0, [X0 + 0x50]
	0x03C55C1C BL 0x1C16CF4
	0x03C55C20 MOVZ W8, 0x1
	0x03C55C24 STRB W8, [X21 + 0x300]
	0x03C55C28 LDR X0, [X23]
	0x03C55C2C LDR W8, [X0 + 0xE0]
	0x03C55C30 CBNZ W8, 0x3C55C3C
	0x03C55C34 BL 0x1C16DFC
	0x03C55C38 LDR X0, [X23]
	0x03C55C3C LDR X8, [X0 + 0xB8]
	0x03C55C40 LDR X8, [X8 + 0x18]
	0x03C55C44 CBZ X8, 0x3C55DE0
	0x03C55C48 ADRP X8, 0x4FB000
	0x03C55C4C LDR X8, [X8 + 0xC80]
	0x03C55C50 LDR X8, [X8]
	0x03C55C54 LDR W9, [X8 + 0xE0]
	0x03C55C58 CBNZ W9, 0x3C55C68
	0x03C55C5C MOV X0, X8
	0x03C55C60 BL 0x1C16DFC
	0x03C55C64 LDR X0, [X23]
	0x03C55C68 STR X20, [X31 + 0x8]
	0x03C55C6C LDR W8, [X0 + 0xE0]
	0x03C55C70 CBNZ W8, 0x3C55C7C
	0x03C55C74 BL 0x1C16DFC
	0x03C55C78 LDR X0, [X23]
	0x03C55C7C LDR X8, [X0 + 0xB8]
	0x03C55C80 LDR X1, [X8 + 0x8]
	0x03C55C84 CBZ X1, 0x3C55DF4
	0x03C55C88 LDP W2, W8, [X1 + 0x18]
	0x03C55C8C ADRP X20, 0x49E000
	0x03C55C90 LDR X20, [X20 + 0x598]
	0x03C55C94 ADD W8, W8, 0x1
	0x03C55C98 CMP W2, 0x1
	0x03C55C9C STP W31, W8, [X1 + 0x18]
	0x03C55CA0 B.LT 0x3C55CC0
	0x03C55CA4 LDR X0, [X1 + 0x10]
	0x03C55CA8 MOV W1, W31
	0x03C55CAC MOV X3, X31
	0x03C55CB0 BL 0x339FA34
	0x03C55CB4 LDR X8, [X23]
	0x03C55CB8 LDR X8, [X8 + 0xB8]
	0x03C55CBC LDR X1, [X8 + 0x8]
	0x03C55CC0 ADD X0, X31, 0x8
	0x03C55CC4 BL 0x3C55E00
	0x03C55CC8 LDR X0, [X20]
	0x03C55CCC LDR W8, [X0 + 0xE0]
	0x03C55CD0 CBNZ W8, 0x3C55CD8
	0x03C55CD4 BL 0x1C16DFC
	0x03C55CD8 MOV X0, X19
	0x03C55CDC MOV X1, X31
	0x03C55CE0 MOV X2, X31
	0x03C55CE4 BL 0x3C3883C
	0x03C55CE8 LDR X8, [X23]
	0x03C55CEC MOV W20, W0
	0x03C55CF0 LDR W9, [X8 + 0xE0]
	0x03C55CF4 CBNZ W9, 0x3C55D00
	0x03C55CF8 MOV X0, X8
	0x03C55CFC BL 0x1C16DFC
	0x03C55D00 LDRB W8, [X21 + 0x300]
	0x03C55D04 CBNZ W8, 0x3C55D1C
	0x03C55D08 ADRP X0, 0x4FF000
	0x03C55D0C LDR X0, [X0 + 0x50]
	0x03C55D10 BL 0x1C16CF4
	0x03C55D14 MOVZ W8, 0x1
	0x03C55D18 STRB W8, [X21 + 0x300]
	0x03C55D1C LDR X0, [X23]
	0x03C55D20 LDR W8, [X0 + 0xE0]
	0x03C55D24 CBNZ W8, 0x3C55D30
	0x03C55D28 BL 0x1C16DFC
	0x03C55D2C LDR X0, [X23]
	0x03C55D30 LDR X8, [X0 + 0xB8]
	0x03C55D34 LDR X21, [X31 + 0x8]
	0x03C55D38 LDR X22, [X8 + 0x18]
	0x03C55D3C LDR X8, [X8 + 0x8]
	0x03C55D40 TBZ X20, 0x0, 0x3C55D5C
	0x03C55D44 CBZ X22, 0x3C55DF4
	0x03C55D48 MOV X0, X22
	0x03C55D4C MOV X1, X21
	0x03C55D50 MOV X2, X8
	0x03C55D54 BL 0x3C54AAC
	0x03C55D58 B 0x3C55D9C
	0x03C55D5C CBZ X8, 0x3C55DF4
	0x03C55D60 ADRP X9, 0x502000
	0x03C55D64 LDR X9, [X9 + 0x2C0]
	0x03C55D68 MOV X0, X8
	0x03C55D6C MOV W1, W31
	0x03C55D70 LDR X2, [X9]
	0x03C55D74 BL 0x301BCCC
	0x03C55D78 CBZ X22, 0x3C55DF4
	0x03C55D7C ADRP X8, 0x50A000
	0x03C55D80 LDR X8, [X8 + 0xDE0]
	0x03C55D84 MOV X2, X0
	0x03C55D88 MOV X0, X22
	0x03C55D8C MOV X1, X21
	0x03C55D90 LDR X4, [X8]
	0x03C55D94 MOV X3, X19
	0x03C55D98 BL 0x2241B50
	0x03C55D9C LDR X0, [X23]
	0x03C55DA0 LDR W8, [X0 + 0xE0]
	0x03C55DA4 CBNZ W8, 0x3C55DB0
	0x03C55DA8 BL 0x1C16DFC
	0x03C55DAC LDR X0, [X23]
	0x03C55DB0 LDR X8, [X0 + 0xB8]
	0x03C55DB4 LDR X8, [X8 + 0x8]
	0x03C55DB8 CBZ X8, 0x3C55DF4
	0x03C55DBC LDP W2, W9, [X8 + 0x18]
	0x03C55DC0 ADD W9, W9, 0x1
	0x03C55DC4 CMP W2, 0x1
	0x03C55DC8 STP W31, W9, [X8 + 0x18]
	0x03C55DCC B.LT 0x3C55DE0
	0x03C55DD0 LDR X0, [X8 + 0x10]
	0x03C55DD4 MOV W1, W31
	0x03C55DD8 MOV X3, X31
	0x03C55DDC BL 0x339FA34
	0x03C55DE0 LDP X20, X19, [X31 + 0x30]
	0x03C55DE4 LDP X22, X21, [X31 + 0x20]
	0x03C55DE8 LDP X30, X23, [X31 + 0x10]
	0x03C55DEC ADD X31, X31, 0x40
	0x03C55DF0 RET
	0x03C55DF4 BL 0x1C16F20
	0x03C55DF8 STR X1, [X0]
	0x03C55DFC RET
	0x03C55E00 STP X30, X23, [X31 - 0x30]!
	0x03C55E04 STP X22, X21, [X31 + 0x10]
	0x03C55E08 STP X20, X19, [X31 + 0x20]
	0x03C55E0C ADRP X23, 0x791000
	0x03C55E10 ADRP X21, 0x4C5000
	0x03C55E14 ADRP X22, 0x49E000
	0x03C55E18 LDRB W8, [X23 + 0xF1]
	0x03C55E1C LDR X21, [X21 + 0x560]
	0x03C55E20 LDR X22, [X22 + 0x6C0]
	0x03C55E24 MOV X19, X1
	0x03C55E28 MOV X20, X0
	0x03C55E2C TBNZ X8, 0x0, 0x3C55E5C
	0x03C55E30 ADRP X0, 0x4C5000
	0x03C55E34 LDR X0, [X0 + 0x560]
	0x03C55E38 BL 0x1C16CF4
	0x03C55E3C ADRP X0, 0x4FB000
	0x03C55E40 LDR X0, [X0 + 0xC80]
	0x03C55E44 BL 0x1C16CF4
	0x03C55E48 ADRP X0, 0x49E000
	0x03C55E4C LDR X0, [X0 + 0x6C0]
	0x03C55E50 BL 0x1C16CF4
	0x03C55E54 MOVZ W8, 0x1
	0x03C55E58 STRB W8, [X23 + 0xF1]
	0x03C55E5C LDR X0, [X22]
	0x03C55E60 ADRP X22, 0x4FB000
	0x03C55E64 LDR X21, [X21]
	0x03C55E68 LDR W8, [X0 + 0xE0]
	0x03C55E6C LDR X22, [X22 + 0xC80]
	0x03C55E70 CBNZ W8, 0x3C55E78
	0x03C55E74 BL 0x1C16DFC
	0x03C55E78 MOV X0, X21
	0x03C55E7C MOV X1, X31
	0x03C55E80 BL 0x338C698
	0x03C55E84 LDR X8, [X22]
	0x03C55E88 MOV X21, X0
	0x03C55E8C LDR W9, [X8 + 0xE0]
	0x03C55E90 CBNZ W9, 0x3C55E9C
	0x03C55E94 MOV X0, X8
	0x03C55E98 BL 0x1C16DFC
	0x03C55E9C MOV X0, X20
	0x03C55EA0 MOV X1, X21
	0x03C55EA4 MOV X2, X19
	0x03C55EA8 LDP X20, X19, [X31 + 0x20]
	0x03C55EAC LDP X22, X21, [X31 + 0x10]
	0x03C55EB0 LDP X30, X23, [X31], #0x30
	0x03C55EB4 B 0x3C57960
	0x03C55EB8 STR X30, [X31 - 0x20]!
	0x03C55EBC STP X20, X19, [X31 + 0x10]
	0x03C55EC0 ADRP X19, 0x791000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move X1, [X8+720]
	008 Move X9, [X8+712]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move X20, [X31+32]
	011 Move X19, [X31+40]
	012 Move X22, [X31+16]
	013 Move X21, [X31+24]
	014 Move X30, [X31+48]
	015 Return X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X19, X0
	018 Move X0, X19
	019 Call 0x3EB2AD0
	020 Move X19, X0
	021 Move X0, 0x49F000
	022 Move X0, [X0+2000]
	023 Call 0x1C17D08
	024 Move X8, [X19]
	025 Move X1, [X8]
	026 Call 0x1C18270
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {189}
	031 Move X19, [X19]
	032 Call 0x3EB2AE0
	033 Compare X19, 0
	034 JumpIfEqual {188}
	035 Move X8, [X19]
	036 Move X0, X19
	037 Move X9, [X8+408]
	038 Move X1, [X8+416]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Compare X0, 0
	041 JumpIfEqual {188}
	042 Move X20, X0
	043 Move X0, 0x49F000
	044 Move X0, [X0+2072]
	045 Call 0x1C17D08
	046 Move X22, X0
	047 Move X0, 0x50B000
	048 Move X0, [X0+3520]
	049 Call 0x1C17D08
	050 Move X8, [X20]
	051 Move X21, X0
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 4
	062 Move X0, X20
	063 Move X1, X22
	064 Call 0x1C5D788
	065 Move W9, [X10]
	066 Add W9, W9, 4
	067 Add X8, X8, W9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X2, [X0+8]
	071 Move X0, X20
	072 Move X1, X21
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {177}
	078 Move X8, [X19]
	079 Move X0, X19
	080 Move X9, [X8+408]
	081 Move X1, [X8+416]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X0, 0
	084 JumpIfEqual {188}
	085 Move X20, X0
	086 Move X0, 0x49F000
	087 Move X0, [X0+2072]
	088 Call 0x1C17D08
	089 Move X22, X0
	090 Move X0, 0x50B000
	091 Move X0, [X0+3520]
	092 Call 0x1C17D08
	093 Move X8, [X20]
	094 Move X21, X0
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move X0, X20
	105 Move X1, X22
	106 Move W2, W31
	107 Call 0x1C5D788
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Add X8, X8, X9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X2, [X0+8]
	113 Move X0, X20
	114 Move X1, X21
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X20, X0
	117 Move X0, 0x49F000
	118 Move X0, [X0+1880]
	119 Call 0x1C17D08
	120 Compare X20, 0
	121 JumpIfEqual {177}
	122 Move X8, [X20]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X8, [X19]
	125 Move X0, X19
	126 Move X9, [X8+408]
	127 Move X1, [X8+416]
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Compare X0, 0
	130 JumpIfEqual {188}
	131 Move X20, X0
	132 Move X0, 0x49F000
	133 Move X0, [X0+2072]
	134 Call 0x1C17D08
	135 Move X22, X0
	136 Move X0, 0x50B000
	137 Move X0, [X0+3520]
	138 Call 0x1C17D08
	139 Move X8, [X20]
	140 Move X21, X0
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move X0, X20
	151 Move X1, X22
	152 Move W2, W31
	153 Call 0x1C5D788
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Add X8, X8, X9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X2, [X0+8]
	159 Move X0, X20
	160 Move X1, X21
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X20, X0
	163 Move X0, 0x49F000
	164 Move X0, [X0+1880]
	165 Call 0x1C17D08
	166 Compare X20, 0
	167 JumpIfEqual {188}
	168 Move X8, [X20]
	169 Move X9, [X0+64]
	170 Move X1, X0
	171 Move X0, X20
	172 Move X8, [X8+64]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Call 0x1C17E08
	175 Move W8, [X0]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, 0x49F000
	178 Move X0, [X0+2600]
	179 Call 0x1C17D08
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X0, X19
	185 Move X1, X31
	186 Call Debug.LogException, X0
	187 Move X0, X31
	188 Call 0x1C17F20
	189 Move W0, 8
	190 Call 0x3EB2AF0
	191 Move X8, [X19]
	192 Move [X0], X8
	193 Move X1, 0x260000
	194 Add X1, X1, 3672
	195 Move X2, X31
	196 Call 0x3EB2B00
	197 Call 0x1C181E0
	198 Move X19, X0
	199 Call 0x3EB2AE0
	200 Move X0, X19
	201 Call 0x1D2D690
	202 Call 0x1991590

Method: System.String[] get_renderingLayerMaskNames()

Disassembly:
	0x03C55EC4 ADRP X20, 0x4FF000
	0x03C55EC8 LDRB W8, [X19 + 0x7B]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.String[] get_prefixedRenderingLayerMaskNames()

Disassembly:
	0x03C55ECC LDR X20, [X20 + 0x50]
	0x03C55ED0 TBNZ X8, 0x0, 0x3C55EF4

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultMaterial()

Disassembly:
	0x03C55ED4 ADRP X0, 0x49E000
	0x03C55ED8 LDR X0, [X0 + 0x598]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Shader get_autodeskInteractiveShader()

Disassembly:
	0x03C55EDC BL 0x1C16CF4
	0x03C55EE0 ADRP X0, 0x4FF000

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Shader get_autodeskInteractiveTransparentShader()

Disassembly:
	0x03C55EE4 LDR X0, [X0 + 0x50]
	0x03C55EE8 BL 0x1C16CF4

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Shader get_autodeskInteractiveMaskedShader()

Disassembly:
	0x03C55EEC MOVZ W8, 0x1
	0x03C55EF0 STRB W8, [X19 + 0x7B]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Shader get_terrainDetailLitShader()

Disassembly:
	0x03C55EF4 LDR X0, [X20]
	0x03C55EF8 ADRP X19, 0x49E000

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Shader get_terrainDetailGrassShader()

Disassembly:
	0x03C55EFC LDR W8, [X0 + 0xE0]
	0x03C55F00 LDR X19, [X19 + 0x598]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Shader get_terrainDetailGrassBillboardShader()

Disassembly:
	0x03C55F04 CBNZ W8, 0x3C55F10
	0x03C55F08 BL 0x1C16DFC

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultParticleMaterial()

Disassembly:
	0x03C55F0C LDR X0, [X20]
	0x03C55F10 LDR X8, [X19]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultLineMaterial()

Disassembly:
	0x03C55F14 LDR X9, [X0 + 0xB8]
	0x03C55F18 LDR W10, [X8 + 0xE0]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultTerrainMaterial()

Disassembly:
	0x03C55F1C LDR X19, [X9]
	0x03C55F20 CBNZ W10, 0x3C55F2C

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultUIMaterial()

Disassembly:
	0x03C55F24 MOV X0, X8
	0x03C55F28 BL 0x1C16DFC

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultUIOverdrawMaterial()

Disassembly:
	0x03C55F2C MOV X0, X19
	0x03C55F30 MOV X1, X31

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultUIETC1SupportedMaterial()

Disassembly:
	0x03C55F34 MOV X2, X31
	0x03C55F38 BL 0x3C354F8

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_default2DMaterial()

Disassembly:
	0x03C55F3C TBZ X0, 0x0, 0x3C55FE8
	0x03C55F40 LDR X0, [X20]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_default2DMaskMaterial()

Disassembly:
	0x03C55F44 LDR W8, [X0 + 0xE0]
	0x03C55F48 CBNZ W8, 0x3C55F50

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Shader get_defaultShader()

Disassembly:
	0x03C55F4C BL 0x1C16DFC
	0x03C55F50 ADRP X19, 0x791000

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Shader get_defaultSpeedTree7Shader()

Disassembly:
	0x03C55F54 LDRB W8, [X19 + 0x300]
	0x03C55F58 CBNZ W8, 0x3C55F70

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Shader get_defaultSpeedTree8Shader()

Disassembly:
	0x03C55F5C ADRP X0, 0x4FF000
	0x03C55F60 LDR X0, [X0 + 0x50]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.String get_renderPipelineShaderTag()

Disassembly:
	0x03C55F64 BL 0x1C16CF4
	0x03C55F68 MOVZ W8, 0x1
	0x03C55F6C STRB W8, [X19 + 0x300]
	0x03C55F70 LDR X0, [X20]
	0x03C55F74 LDR W8, [X0 + 0xE0]
	0x03C55F78 CBNZ W8, 0x3C55F84
	0x03C55F7C BL 0x1C16DFC
	0x03C55F80 LDR X0, [X20]
	0x03C55F84 LDR X8, [X0 + 0xB8]
	0x03C55F88 LDR X8, [X8 + 0x18]
	0x03C55F8C CBZ X8, 0x3C55FF0
	0x03C55F90 LDR W8, [X0 + 0xE0]
	0x03C55F94 CBNZ W8, 0x3C55F9C
	0x03C55F98 BL 0x1C16DFC
	0x03C55F9C LDRB W8, [X19 + 0x300]
	0x03C55FA0 CBNZ W8, 0x3C55FB8
	0x03C55FA4 ADRP X0, 0x4FF000
	0x03C55FA8 LDR X0, [X0 + 0x50]
	0x03C55FAC BL 0x1C16CF4
	0x03C55FB0 MOVZ W8, 0x1
	0x03C55FB4 STRB W8, [X19 + 0x300]
	0x03C55FB8 LDR X0, [X20]
	0x03C55FBC LDR W8, [X0 + 0xE0]
	0x03C55FC0 CBNZ W8, 0x3C55FCC
	0x03C55FC4 BL 0x1C16DFC
	0x03C55FC8 LDR X0, [X20]
	0x03C55FCC LDR X8, [X0 + 0xB8]
	0x03C55FD0 LDR X8, [X8 + 0x18]
	0x03C55FD4 CBZ X8, 0x3C56000
	0x03C55FD8 LDRB W8, [X8 + 0x10]
	0x03C55FDC CMP W8, 0x0
	0x03C55FE0 CSET W0, NE
	0x03C55FE4 B 0x3C55FF4
	0x03C55FE8 MOV W0, W31
	0x03C55FEC B 0x3C55FF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x792000
	005 Move X19, 0x49F000
	006 Move W8, [X20+103]
	007 Move X19, [X19+2600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x49F000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move X0, 0x4A1000
	016 Move X0, [X0+632]
	017 Call 0x1C17CF4
	018 Move X0, 0x50B000
	019 Move X0, [X0+3528]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+103], W8
	023 Move X0, [X19]
	024 Move X20, 0x50B000
	025 Move X19, 0x4A1000
	026 Move W8, [X0+224]
	027 Move X20, [X20+3528]
	028 Move X19, [X19+632]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X1, X31
	034 Call Debug.LogWarning, X0
	035 Move X8, [X19]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X8, [X8+184]
	039 Move X0, [X8]
	040 Move X30, [X31+32]
	041 Return X0

Method: UnityEngine.Rendering.RenderPipeline CreatePipeline()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void OnValidate()

Disassembly:
	0x03C55FF0 MOVZ W0, 0x1
	0x03C55FF4 LDP X20, X19, [X31 + 0x10]
	0x03C55FF8 LDR X30, [X31], #0x20
	0x03C55FFC RET
	0x03C56000 BL 0x1C16F20
	0x03C56004 STP X30, X23, [X31 - 0x30]!
	0x03C56008 STP X22, X21, [X31 + 0x10]
	0x03C5600C STP X20, X19, [X31 + 0x20]
	0x03C56010 ADRP X22, 0x790000
	0x03C56014 ADRP X23, 0x4C8000
	0x03C56018 ADRP X19, 0x4C8000
	0x03C5601C ADRP X21, 0x4FE000
	0x03C56020 ADRP X20, 0x509000
	0x03C56024 LDRB W8, [X22 + 0x7C]
	0x03C56028 LDR X23, [X23 + 0x50]
	0x03C5602C LDR X19, [X19 + 0x58]
	0x03C56030 LDR X21, [X21 + 0x50]
	0x03C56034 LDR X20, [X20 + 0xDD0]
	0x03C56038 TBNZ X8, 0x0, 0x3C56074
	0x03C5603C ADRP X0, 0x4C8000
	0x03C56040 LDR X0, [X0 + 0x58]
	0x03C56044 BL 0x1C16CF4
	0x03C56048 ADRP X0, 0x4C8000
	0x03C5604C LDR X0, [X0 + 0x50]
	0x03C56050 BL 0x1C16CF4
	0x03C56054 ADRP X0, 0x4FE000
	0x03C56058 LDR X0, [X0 + 0x50]
	0x03C5605C BL 0x1C16CF4
	0x03C56060 ADRP X0, 0x509000
	0x03C56064 LDR X0, [X0 + 0xDD0]
	0x03C56068 BL 0x1C16CF4
	0x03C5606C MOVZ W8, 0x1
	0x03C56070 STRB W8, [X22 + 0x7C]
	0x03C56074 LDR X0, [X23]
	0x03C56078 BL 0x1C16F10
	0x03C5607C LDR X1, [X19]
	0x03C56080 MOV X19, X0
	0x03C56084 BL 0x301B7C4
	0x03C56088 LDR X8, [X21]
	0x03C5608C LDR X9, [X20]
	0x03C56090 LDP X22, X21, [X31 + 0x10]
	0x03C56094 LDR X8, [X8 + 0xB8]
	0x03C56098 STP X19, X9, [X8 + 0x8]
	0x03C5609C LDP X20, X19, [X31 + 0x20]
	0x03C560A0 STR X31, [X8 + 0x18]
	0x03C560A4 LDP X30, X23, [X31], #0x30
	0x03C560A8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x792000
	006 Move X21, 0x500000
	007 Move W8, [X20+104]
	008 Call 0x3EB29DC
	009 Return 
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x49E000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x4FF000
	019 Move X0, [X0+80]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+104], W8
	023 Move X0, [X21]
	024 Move X20, 0x49E000
	025 Move W8, [X0+224]
	026 Move X20, [X20+1432]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X20]
	032 Move X9, [X0+184]
	033 Move W10, [X8+224]
	034 Move X20, [X9]
	035 Compare W10, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X19
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {60}
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Call RenderPipelineManager.CleanupRenderPipeline
	053 Move X0, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call RenderPipelineManager.PrepareRenderPipeline, X0
	059 Return 
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03C56314 LDR X30, [X31 + 0xA0]
	0x03C56318 ADD X31, X31, 0xD0
	0x03C5631C RET
	0x03C56320 SUB X31, X31, 0x50
	0x03C56324 STR X30, [X31 + 0x40]
	0x03C56328 MOVZ W8, 0x8
	0x03C5632C ADD X0, X31, 0x30
	0x03C56330 MOVZ W1, 0x1
	0x03C56334 MOVZ W2, 0xFF
	0x03C56338 MOVZ W3, 0xFF
	0x03C5633C MOVZ W4, 0x8
	0x03C56340 MOV W5, W31
	0x03C56344 MOV W6, W31
	0x03C56348 MOV W7, W31
	0x03C5634C STR W31, [X31 + 0x38]
	0x03C56350 STR X31, [X31 + 0x30]
	0x03C56354 STR W31, [X31 + 0x18]
	0x03C56358 STR W31, [X31 + 0x10]
	0x03C5635C STR W31, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x791000
	005 Move X20, 0x4FF000
	006 Move W8, [X19+105]
	007 Move X20, [X20+80]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4FF000
	013 Move X0, [X0+80]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+105], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Call RenderPipelineManager.CleanupRenderPipeline
	026 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C56360 STR W8, [X31]
	0x03C56364 BL 0x3C5B07C

ISIL:
	001 Move X1, X31
	002 Call ScriptableObject..ctor, X0
	003 Return 

