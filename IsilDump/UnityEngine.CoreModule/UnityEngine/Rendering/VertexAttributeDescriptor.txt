Type: UnityEngine.Rendering.VertexAttributeDescriptor

Method: UnityEngine.Rendering.VertexAttribute get_attribute()

Disassembly:
	0x03C4BCD0 STP X30, X19, [X31 - 0x10]!
	0x03C4BCD4 ADRP X19, 0x79A000

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void set_attribute(UnityEngine.Rendering.VertexAttribute value)

Disassembly:
	0x03C4BCD8 LDR X0, [X19 + 0xDB0]
	0x03C4BCDC CBNZ X0, 0x3C4BCF0

ISIL:
	001 Move [X0], W1
	002 Return 

Method: UnityEngine.Rendering.VertexAttributeFormat get_format()

Disassembly:
	0x03C4BCE0 ADRP X0, 0xFFFFFFFFFCED5000
	0x03C4BCE4 ADD X0, X0, 0xBCD

ISIL:
	001 Move W0, [X0+4]
	002 Return X0

Method: System.Void set_format(UnityEngine.Rendering.VertexAttributeFormat value)

Disassembly:
	0x03C4BCE8 BL 0x1C16CB8
	0x03C4BCEC STR X0, [X19 + 0xDB0]

ISIL:
	001 Move [X0+4], W1
	002 Return 

Method: System.Int32 get_dimension()

Disassembly:
	0x03C4BCF0 LDP X30, X19, [X31], #0x10
	0x03C4BCF4 BR X0

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Void set_dimension(System.Int32 value)

Disassembly:
	0x03C4BCF8 STR X30, [X31 - 0x20]!
	0x03C4BCFC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X0+8], W1
	002 Return 

Method: System.Int32 get_stream()

Disassembly:
	0x03C4BD00 ADRP X20, 0x79A000
	0x03C4BD04 LDR X1, [X20 + 0xDB8]

ISIL:
	001 Move W0, [X0+12]
	002 Return X0

Method: System.Void set_stream(System.Int32 value)

Disassembly:
	0x03C4BD08 MOV X19, X0
	0x03C4BD0C CBNZ X1, 0x3C4BD24

ISIL:
	001 Move [X0+12], W1
	002 Return 

Method: System.Void .ctor(UnityEngine.Rendering.VertexAttribute attribute = 0, UnityEngine.Rendering.VertexAttributeFormat format = 0, System.Int32 dimension = 3, System.Int32 stream = 0)

Disassembly:
	0x03C4BD10 ADRP X0, 0xFFFFFFFFFCED5000
	0x03C4BD14 ADD X0, X0, 0xC1A
	0x03C4BD18 BL 0x1C16CB8

ISIL:
	001 Move [X0], W1
	002 Move [X0+4], W2
	003 Move [X0+8], W3
	004 Move [X0+12], W4
	005 Return 

Method: System.String ToString()

Disassembly:
	0x03C4BD1C MOV X1, X0
	0x03C4BD20 STR X0, [X20 + 0xDB8]
	0x03C4BD24 MOV X0, X19
	0x03C4BD28 LDP X20, X19, [X31 + 0x10]
	0x03C4BD2C LDR X30, [X31], #0x20
	0x03C4BD30 BR X1
	0x03C4BD34 STP X30, X21, [X31 - 0x20]!
	0x03C4BD38 STP X20, X19, [X31 + 0x10]
	0x03C4BD3C ADRP X21, 0x79A000
	0x03C4BD40 LDR X2, [X21 + 0xDC8]
	0x03C4BD44 MOV X19, X1
	0x03C4BD48 MOV X20, X0
	0x03C4BD4C CBNZ X2, 0x3C4BD64
	0x03C4BD50 ADRP X0, 0xFFFFFFFFFCEC0000
	0x03C4BD54 ADD X0, X0, 0x63C
	0x03C4BD58 BL 0x1C16CB8
	0x03C4BD5C MOV X2, X0
	0x03C4BD60 STR X0, [X21 + 0xDC8]
	0x03C4BD64 MOV X0, X20
	0x03C4BD68 MOV X1, X19
	0x03C4BD6C LDP X20, X19, [X31 + 0x10]
	0x03C4BD70 LDP X30, X21, [X31], #0x20
	0x03C4BD74 BR X2
	0x03C4BD78 STR X30, [X31 - 0x20]!
	0x03C4BD7C STP X20, X19, [X31 + 0x10]
	0x03C4BD80 ADRP X20, 0x79A000
	0x03C4BD84 LDR X1, [X20 + 0xDD0]
	0x03C4BD88 MOV X19, X0
	0x03C4BD8C CBNZ X1, 0x3C4BDA4
	0x03C4BD90 ADRP X0, 0xFFFFFFFFFCEBE000
	0x03C4BD94 ADD X0, X0, 0x741
	0x03C4BD98 BL 0x1C16CB8
	0x03C4BD9C MOV X1, X0
	0x03C4BDA0 STR X0, [X20 + 0xDD0]
	0x03C4BDA4 MOV X0, X19
	0x03C4BDA8 LDP X20, X19, [X31 + 0x10]
	0x03C4BDAC LDR X30, [X31], #0x20
	0x03C4BDB0 BR X1
	0x03C4BDB4 STR X30, [X31 - 0x20]!
	0x03C4BDB8 STP X20, X19, [X31 + 0x10]
	0x03C4BDBC ADRP X20, 0x79A000
	0x03C4BDC0 LDR X1, [X20 + 0xDD8]
	0x03C4BDC4 MOV X19, X0
	0x03C4BDC8 CBNZ X1, 0x3C4BDE0
	0x03C4BDCC ADRP X0, 0xFFFFFFFFFCED0000
	0x03C4BDD0 ADD X0, X0, 0x4B
	0x03C4BDD4 BL 0x1C16CB8
	0x03C4BDD8 MOV X1, X0
	0x03C4BDDC STR X0, [X20 + 0xDD8]
	0x03C4BDE0 MOV X0, X19
	0x03C4BDE4 LDP X20, X19, [X31 + 0x10]
	0x03C4BDE8 LDR X30, [X31], #0x20
	0x03C4BDEC BR X1
	0x03C4BDF0 STR X30, [X31 - 0x20]!
	0x03C4BDF4 STP X20, X19, [X31 + 0x10]
	0x03C4BDF8 ADRP X20, 0x79A000
	0x03C4BDFC ADRP X19, 0x514000
	0x03C4BE00 LDRB W8, [X20 + 0xDE0]
	0x03C4BE04 LDR X19, [X19 + 0xC18]
	0x03C4BE08 TBNZ X8, 0x0, 0x3C4BE20
	0x03C4BE0C ADRP X0, 0x514000
	0x03C4BE10 LDR X0, [X0 + 0xC18]
	0x03C4BE14 BL 0x1C16CF4
	0x03C4BE18 MOVZ W8, 0x1
	0x03C4BE1C STRB W8, [X20 + 0xDE0]
	0x03C4BE20 LDR X0, [X19]
	0x03C4BE24 LDR W8, [X0 + 0xE0]
	0x03C4BE28 CBNZ W8, 0x3C4BE34
	0x03C4BE2C BL 0x1C16DFC
	0x03C4BE30 LDR X0, [X19]
	0x03C4BE34 LDR X8, [X0 + 0xB8]
	0x03C4BE38 LDP X20, X19, [X31 + 0x10]
	0x03C4BE3C LDR W0, [X8]
	0x03C4BE40 LDR X30, [X31], #0x20
	0x03C4BE44 RET
	0x03C4BE48 STP X30, X21, [X31 - 0x20]!
	0x03C4BE4C STP X20, X19, [X31 + 0x10]
	0x03C4BE50 ADRP X20, 0x79A000
	0x03C4BE54 ADRP X21, 0x514000
	0x03C4BE58 LDRB W8, [X20 + 0xDE1]
	0x03C4BE5C LDR X21, [X21 + 0xC18]
	0x03C4BE60 MOV X19, X0
	0x03C4BE64 TBNZ X8, 0x0, 0x3C4BE7C
	0x03C4BE68 ADRP X0, 0x514000
	0x03C4BE6C LDR X0, [X0 + 0xC18]
	0x03C4BE70 BL 0x1C16CF4
	0x03C4BE74 MOVZ W8, 0x1
	0x03C4BE78 STRB W8, [X20 + 0xDE1]
	0x03C4BE7C LDR X0, [X21]
	0x03C4BE80 LDR W8, [X0 + 0xE0]
	0x03C4BE84 CBNZ W8, 0x3C4BE8C
	0x03C4BE88 BL 0x1C16DFC
	0x03C4BE8C BL 0x3C4BDF0
	0x03C4BE90 STR W0, [X19]
	0x03C4BE94 LDP X20, X19, [X31 + 0x10]
	0x03C4BE98 LDP X30, X21, [X31], #0x20
	0x03C4BE9C RET
	0x03C4BEA0 STR X30, [X31 - 0x20]!
	0x03C4BEA4 STP X20, X19, [X31 + 0x10]
	0x03C4BEA8 ADRP X19, 0x79A000
	0x03C4BEAC ADRP X20, 0x514000
	0x03C4BEB0 LDRB W8, [X19 + 0xDE2]
	0x03C4BEB4 LDR X20, [X20 + 0xC18]
	0x03C4BEB8 TBNZ X8, 0x0, 0x3C4BED0
	0x03C4BEBC ADRP X0, 0x514000
	0x03C4BEC0 LDR X0, [X0 + 0xC18]
	0x03C4BEC4 BL 0x1C16CF4
	0x03C4BEC8 MOVZ W8, 0x1
	0x03C4BECC STRB W8, [X19 + 0xDE2]
	0x03C4BED0 LDR X8, [X20]
	0x03C4BED4 LDP X20, X19, [X31 + 0x10]
	0x03C4BED8 MOVZ W9, 0x1
	0x03C4BEDC LDR X8, [X8 + 0xB8]
	0x03C4BEE0 STR W9, [X8]
	0x03C4BEE4 LDR X30, [X31], #0x20
	0x03C4BEE8 RET
	0x03C4BEEC STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0x79B000
	008 Move X22, 0x4A9000
	009 Move X21, 0x4D2000
	010 Move W8, [X20+3417]
	011 Move X22, [X22+2512]
	012 Move X21, [X21+1304]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x4A9000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0x4A9000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x515000
	025 Move X0, [X0+3008]
	026 Call 0x1C17CF4
	027 Move X0, 0x4D2000
	028 Move X0, [X0+1304]
	029 Call 0x1C17CF4
	030 Move X0, 0x515000
	031 Move X0, [X0+3016]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+3417], W8
	035 Move X0, [X22]
	036 Move W1, 4
	037 Call 0x1C17D6C
	038 Move X20, X0
	039 Move W8, [X19]
	040 Move X0, [X21]
	041 Add X1, X31, 28
	042 Move [X31+28], W8
	043 Call 0x1C17E04
	044 Compare X20, 0
	045 JumpIfEqual {131}
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfEqual {55}
	049 Move X8, [X20]
	050 Move X0, X21
	051 Move X1, [X8+64]
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfEqual {128}
	055 Move W8, [X20+24]
	056 Compare W8, 0
	057 JumpIfEqual {127}
	058 Move X8, 0x515000
	059 Move X8, [X8+3008]
	060 Move [X20+32], X21
	061 Move W9, [X19+4]
	062 Add X1, X31, 24
	063 Move X0, [X8]
	064 Move [X31+24], W9
	065 Call 0x1C17E04
	066 Move X21, X0
	067 Compare X0, 0
	068 JumpIfEqual {75}
	069 Move X8, [X20]
	070 Move X0, X21
	071 Move X1, [X8+64]
	072 Call 0x1C17E00
	073 Compare X0, 0
	074 JumpIfEqual {128}
	075 Move W8, [X20+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X22, 0x4A9000
	078 Move X22, [X22+1880]
	079 Move [X20+40], X21
	080 Move W8, [X19+8]
	081 Add X1, X31, 12
	082 Move X0, [X22]
	083 Move [X31+12], W8
	084 Call 0x1C17E04
	085 Move X21, X0
	086 Compare X0, 0
	087 JumpIfEqual {94}
	088 Move X8, [X20]
	089 Move X0, X21
	090 Move X1, [X8+64]
	091 Call 0x1C17E00
	092 Compare X0, 0
	093 JumpIfEqual {128}
	094 Move W8, [X20+24]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move [X20+48], X21
	097 Move W8, [X19+12]
	098 Move X0, [X22]
	099 Add X1, X31, 8
	100 Move [X31+8], W8
	101 Call 0x1C17E04
	102 Move X19, X0
	103 Compare X0, 0
	104 JumpIfEqual {111}
	105 Move X8, [X20]
	106 Move X0, X19
	107 Move X1, [X8+64]
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfEqual {128}
	111 Move W8, [X20+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, 0x515000
	114 Move X8, [X8+3016]
	115 Move [X20+56], X19
	116 Move X1, X20
	117 Move X2, X31
	118 Move X0, [X8]
	119 Call String.Format, X0, X1
	120 Move X20, [X31+48]
	121 Move X19, [X31+56]
	122 Move X22, [X31+32]
	123 Move X21, [X31+40]
	124 Move X30, [X31+16]
	125 Add X31, X31, 64
	126 Return X0
	127 Call 0x1C17F28
	128 Call 0x1C17F44
	129 Move X1, X31
	130 Call 0x1C17DEC
	131 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C4BEF0 STP X20, X19, [X31 + 0x10]
	0x03C4BEF4 ADRP X21, 0x79A000
	0x03C4BEF8 LDR X2, [X21 + 0xDE8]
	0x03C4BEFC MOV W19, W1
	0x03C4BF00 MOV X20, X0
	0x03C4BF04 CBNZ X2, 0x3C4BF1C
	0x03C4BF08 ADRP X0, 0xFFFFFFFFFCEDA000
	0x03C4BF0C ADD X0, X0, 0x1C3
	0x03C4BF10 BL 0x1C16CB8
	0x03C4BF14 MOV X2, X0

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Move W10, [X0+8]
	004 Move W11, [X0+12]
	005 Move W12, 23
	006 NotImplemented "Instruction MADD not yet implemented."
	007 NotImplemented "Instruction MADD not yet implemented."
	008 Move W9, 0x9731
	009 NotImplemented "Instruction MADD not yet implemented."
	010 NotImplemented "Instruction MOVK not yet implemented."
	011 Add W0, W8, W9
	012 Return X0

Method: System.Boolean Equals(System.Object other)

Disassembly:
	0x03C4BF18 STR X0, [X21 + 0xDE8]
	0x03C4BF1C MOV X0, X20
	0x03C4BF20 MOV W1, W19
	0x03C4BF24 LDP X20, X19, [X31 + 0x10]
	0x03C4BF28 LDP X30, X21, [X31], #0x20
	0x03C4BF2C BR X2
	0x03C4BF30 STP X30, X19, [X31 - 0x10]!
	0x03C4BF34 ADRP X19, 0x79A000
	0x03C4BF38 LDR X0, [X19 + 0xDF0]
	0x03C4BF3C CBNZ X0, 0x3C4BF50
	0x03C4BF40 ADRP X0, 0xFFFFFFFFFCED5000
	0x03C4BF44 ADD X0, X0, 0xC83
	0x03C4BF48 BL 0x1C16CB8
	0x03C4BF4C STR X0, [X19 + 0xDF0]
	0x03C4BF50 LDP X30, X19, [X31], #0x10
	0x03C4BF54 BR X0
	0x03C4BF58 STR X30, [X31 - 0x30]!
	0x03C4BF5C STP X22, X21, [X31 + 0x10]
	0x03C4BF60 STP X20, X19, [X31 + 0x20]
	0x03C4BF64 ADRP X22, 0x79A000
	0x03C4BF68 LDR X3, [X22 + 0xDF8]
	0x03C4BF6C MOV W19, W2
	0x03C4BF70 MOV W20, W1
	0x03C4BF74 MOV X21, X0
	0x03C4BF78 CBNZ X3, 0x3C4BF90
	0x03C4BF7C ADRP X0, 0xFFFFFFFFFCEA4000
	0x03C4BF80 ADD X0, X0, 0x195
	0x03C4BF84 BL 0x1C16CB8
	0x03C4BF88 MOV X3, X0
	0x03C4BF8C STR X0, [X22 + 0xDF8]
	0x03C4BF90 MOV X0, X21
	0x03C4BF94 MOV W1, W20
	0x03C4BF98 MOV W2, W19
	0x03C4BF9C LDP X20, X19, [X31 + 0x20]
	0x03C4BFA0 LDP X22, X21, [X31 + 0x10]
	0x03C4BFA4 LDR X30, [X31], #0x30
	0x03C4BFA8 BR X3
	0x03C4BFAC STR X30, [X31 - 0x30]!
	0x03C4BFB0 STP X22, X21, [X31 + 0x10]
	0x03C4BFB4 STP X20, X19, [X31 + 0x20]
	0x03C4BFB8 ADRP X22, 0x79A000
	0x03C4BFBC LDR X3, [X22 + 0xE00]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x79B000
	006 Move W8, [X21+3418]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x515000
	014 Move X0, [X0+3024]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3418], W8
	018 Compare X20, 0
	019 JumpIfEqual {42}
	020 Move X8, 0x515000
	021 Move X8, [X8+3024]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X8, [X0]
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, [X19+4]
	031 Move X8, X8
	032 ShiftRight X8, 32
	033 And X8, X8, 0x7FFFFFFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, [X0+8]
	036 Move W9, [X19+8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W8, [X0+12]
	039 Move W9, [X19+12]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move W0, W31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: System.Boolean Equals(UnityEngine.Rendering.VertexAttributeDescriptor other)

Disassembly:
	0x03C4BFC0 MOV W19, W2
	0x03C4BFC4 MOV X20, X1
	0x03C4BFC8 MOV X21, X0
	0x03C4BFCC CBNZ X3, 0x3C4BFE4
	0x03C4BFD0 ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C4BFD4 ADD X0, X0, 0xBB4
	0x03C4BFD8 BL 0x1C16CB8
	0x03C4BFDC MOV X3, X0
	0x03C4BFE0 STR X0, [X22 + 0xE00]
	0x03C4BFE4 MOV X0, X21
	0x03C4BFE8 MOV X1, X20
	0x03C4BFEC MOV W2, W19
	0x03C4BFF0 LDP X20, X19, [X31 + 0x20]
	0x03C4BFF4 LDP X22, X21, [X31 + 0x10]
	0x03C4BFF8 LDR X30, [X31], #0x30
	0x03C4BFFC BR X3
	0x03C4C000 STR X30, [X31 - 0x20]!

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+4]
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, [X0+8]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, [X0+12]
	011 Move X9, X2
	012 ShiftRight X9, 32
	013 And X9, X9, 0x7FFFFFFF
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Return X0
	017 Move W0, W31
	018 Return X0

