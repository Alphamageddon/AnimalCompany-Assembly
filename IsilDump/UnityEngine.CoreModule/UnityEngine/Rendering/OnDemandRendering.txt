Type: UnityEngine.Rendering.OnDemandRendering

Method: System.Int32 get_renderFrameInterval()

Disassembly:
	0x03C4CDF0 MOV V8.16B, V0.16B
	0x03C4CDF4 MOV W19, W1
	0x03C4CDF8 MOV X20, X0
	0x03C4CDFC CBNZ X2, 0x3C4CE14
	0x03C4CE00 ADRP X0, 0xFFFFFFFFFCEA3000
	0x03C4CE04 ADD X0, X0, 0x22B
	0x03C4CE08 BL 0x1C16CB8
	0x03C4CE0C MOV X2, X0
	0x03C4CE10 STR X0, [X21 + 0xE78]
	0x03C4CE14 MOV X0, X20
	0x03C4CE18 MOV W1, W19
	0x03C4CE1C LDP X20, X19, [X31 + 0x20]
	0x03C4CE20 LDP X30, X21, [X31 + 0x10]
	0x03C4CE24 MOV V0.16B, V8.16B
	0x03C4CE28 LDR V8, [X31], #0x30
	0x03C4CE2C BR X2
	0x03C4CE30 STR X30, [X31 - 0x30]!
	0x03C4CE34 STP X22, X21, [X31 + 0x10]
	0x03C4CE38 STP X20, X19, [X31 + 0x20]
	0x03C4CE3C ADRP X22, 0x799000
	0x03C4CE40 LDR X3, [X22 + 0xE80]
	0x03C4CE44 MOV W19, W2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79A000
	005 Move X19, 0x514000
	006 Move W8, [X20+3552]
	007 Move X19, [X19+3096]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x514000
	013 Move X0, [X0+3096]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3552], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void GetRenderFrameInterval(out System.Int32 frameInterval)

Disassembly:
	0x03C4CE48 MOV W20, W1
	0x03C4CE4C MOV X21, X0
	0x03C4CE50 CBNZ X3, 0x3C4CE68
	0x03C4CE54 ADRP X0, 0xFFFFFFFFFCEC3000
	0x03C4CE58 ADD X0, X0, 0x732
	0x03C4CE5C BL 0x1C16CB8
	0x03C4CE60 MOV X3, X0
	0x03C4CE64 STR X0, [X22 + 0xE80]
	0x03C4CE68 MOV X0, X21
	0x03C4CE6C MOV W1, W20
	0x03C4CE70 MOV W2, W19
	0x03C4CE74 LDP X20, X19, [X31 + 0x20]
	0x03C4CE78 LDP X22, X21, [X31 + 0x10]
	0x03C4CE7C LDR X30, [X31], #0x30
	0x03C4CE80 BR X3
	0x03C4CE84 STR X30, [X31 - 0x30]!
	0x03C4CE88 STP X22, X21, [X31 + 0x10]
	0x03C4CE8C STP X20, X19, [X31 + 0x20]
	0x03C4CE90 ADRP X22, 0x799000
	0x03C4CE94 LDR X3, [X22 + 0xE88]
	0x03C4CE98 MOV W19, W2
	0x03C4CE9C MOV W20, W1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x79A000
	006 Move X21, 0x514000
	007 Move W8, [X20+3553]
	008 Move X21, [X21+3096]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x514000
	015 Move X0, [X0+3096]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3553], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Call OnDemandRendering.get_renderFrameInterval
	025 Move [X19], W0
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 

Method: System.Void .cctor()

Disassembly:
	0x03C4CEA0 MOV X21, X0
	0x03C4CEA4 CBNZ X3, 0x3C4CEBC
	0x03C4CEA8 ADRP X0, 0xFFFFFFFFFCED4000
	0x03C4CEAC ADD X0, X0, 0xD64
	0x03C4CEB0 BL 0x1C16CB8
	0x03C4CEB4 MOV X3, X0
	0x03C4CEB8 STR X0, [X22 + 0xE88]
	0x03C4CEBC MOV X0, X21
	0x03C4CEC0 MOV W1, W20
	0x03C4CEC4 MOV W2, W19
	0x03C4CEC8 LDP X20, X19, [X31 + 0x20]
	0x03C4CECC LDP X22, X21, [X31 + 0x10]
	0x03C4CED0 LDR X30, [X31], #0x30
	0x03C4CED4 BR X3
	0x03C4CED8 SUB X31, X31, 0x30
	0x03C4CEDC STP X30, X21, [X31 + 0x10]
	0x03C4CEE0 STP X20, X19, [X31 + 0x20]
	0x03C4CEE4 ADRP X21, 0x799000
	0x03C4CEE8 LDR X8, [X21 + 0xF98]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x79A000
	005 Move X20, 0x514000
	006 Move W8, [X19+3554]
	007 Move X20, [X20+3096]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x514000
	013 Move X0, [X0+3096]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3554], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 1
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

