Type: UnityEngine.Rendering.RendererUtils.RendererListDesc

Method: UnityEngine.Rendering.CullingResults get_cullingResult()

Disassembly:
	0x03C5E7E8 BL 0x1C16F10
	0x03C5E7EC MOV X1, X19
	0x03C5E7F0 MOV X2, X31

ISIL:
	001 Move X8, [X0+168]
	002 Move X1, [X0+176]
	003 Move X0, X8
	004 Return X0

Method: UnityEngine.Camera get_camera()

Disassembly:
	0x03C5E7F4 MOV X20, X0
	0x03C5E7F8 BL 0x3379B6C

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: UnityEngine.Rendering.ShaderTagId get_passName()

Disassembly:
	0x03C5E7FC ADRP X0, 0x501000
	0x03C5E800 LDR X0, [X0 + 0xFC0]

ISIL:
	001 Move W0, [X0+192]
	002 Return X0

Method: UnityEngine.Rendering.ShaderTagId[] get_passNames()

Disassembly:
	0x03C5E804 BL 0x1C16D08
	0x03C5E808 MOV X1, X0

ISIL:
	001 Move X0, [X0+200]
	002 Return X0

Method: System.Boolean IsValid()

Disassembly:
	0x03C5E80C MOV X0, X20
	0x03C5E810 BL 0x1C16DEC
	0x03C5E814 STP X30, X21, [X31 - 0x20]!
	0x03C5E818 STP X20, X19, [X31 + 0x10]
	0x03C5E81C ADRP X20, 0x788000
	0x03C5E820 ADRP X21, 0x4BE000
	0x03C5E824 LDRB W8, [X20 + 0x28B]
	0x03C5E828 LDR X21, [X21 + 0x230]
	0x03C5E82C MOV X19, X0
	0x03C5E830 TBNZ X8, 0x0, 0x3C5E848
	0x03C5E834 ADRP X0, 0x4BE000
	0x03C5E838 LDR X0, [X0 + 0x230]
	0x03C5E83C BL 0x1C16CF4
	0x03C5E840 MOVZ W8, 0x1
	0x03C5E844 STRB W8, [X20 + 0x28B]
	0x03C5E848 LDR X0, [X21]
	0x03C5E84C LDR W8, [X0 + 0xE0]
	0x03C5E850 CBNZ W8, 0x3C5E858
	0x03C5E854 BL 0x1C16DFC
	0x03C5E858 ADRP X20, 0x788000
	0x03C5E85C LDR X1, [X20 + 0x2B0]
	0x03C5E860 CBNZ X1, 0x3C5E878
	0x03C5E864 ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C5E868 ADD X0, X0, 0x7CC
	0x03C5E86C BL 0x1C16CB8
	0x03C5E870 MOV X1, X0
	0x03C5E874 STR X0, [X20 + 0x2B0]
	0x03C5E878 MOV X0, X19
	0x03C5E87C LDP X20, X19, [X31 + 0x10]
	0x03C5E880 LDP X30, X21, [X31], #0x20
	0x03C5E884 BR X1
	0x03C5E888 STP X30, X21, [X31 - 0x20]!
	0x03C5E88C STP X20, X19, [X31 + 0x10]
	0x03C5E890 ADRP X20, 0x788000
	0x03C5E894 ADRP X21, 0x4BE000
	0x03C5E898 LDRB W8, [X20 + 0x287]
	0x03C5E89C LDR X21, [X21 + 0x230]
	0x03C5E8A0 MOV X19, X0
	0x03C5E8A4 TBNZ X8, 0x0, 0x3C5E8BC
	0x03C5E8A8 ADRP X0, 0x4BE000
	0x03C5E8AC LDR X0, [X0 + 0x230]
	0x03C5E8B0 BL 0x1C16CF4
	0x03C5E8B4 MOVZ W8, 0x1
	0x03C5E8B8 STRB W8, [X20 + 0x287]
	0x03C5E8BC LDR X0, [X21]
	0x03C5E8C0 LDR W8, [X0 + 0xE0]
	0x03C5E8C4 CBNZ W8, 0x3C5E8CC
	0x03C5E8C8 BL 0x1C16DFC
	0x03C5E8CC ADRP X20, 0x788000
	0x03C5E8D0 LDR X1, [X20 + 0x290]
	0x03C5E8D4 CBNZ X1, 0x3C5E8EC
	0x03C5E8D8 ADRP X0, 0xFFFFFFFFFCEB6000
	0x03C5E8DC ADD X0, X0, 0xEAD
	0x03C5E8E0 BL 0x1C16CB8
	0x03C5E8E4 MOV X1, X0
	0x03C5E8E8 STR X0, [X20 + 0x290]
	0x03C5E8EC MOV X0, X19
	0x03C5E8F0 LDP X20, X19, [X31 + 0x10]
	0x03C5E8F4 LDP X30, X21, [X31], #0x20
	0x03C5E8F8 BR X1
	0x03C5E8FC STR X30, [X31 - 0x20]!
	0x03C5E900 STP X20, X19, [X31 + 0x10]
	0x03C5E904 ADRP X20, 0x788000
	0x03C5E908 LDR X1, [X20 + 0x290]
	0x03C5E90C MOV X19, X0
	0x03C5E910 CBNZ X1, 0x3C5E928
	0x03C5E914 ADRP X0, 0xFFFFFFFFFCEB6000
	0x03C5E918 ADD X0, X0, 0xEAD
	0x03C5E91C BL 0x1C16CB8
	0x03C5E920 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x789000
	006 Move X21, 0x502000
	007 Move W8, [X20+568]
	008 Move X21, [X21+3752]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x496000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x502000
	018 Move X0, [X0+3752]
	019 Call 0x1C17CF4
	020 Move X0, 0x4C1000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+568], W8
	025 Move X0, [X21]
	026 Move X20, 0x496000
	027 Move W8, [X0+224]
	028 Move X20, [X20+1432]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X20, [X19+184]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {47}
	046 Move W0, W31
	047 Move X0, [X21]
	048 Move X20, 0x4C1000
	049 Move W8, [X0+224]
	050 Move X20, [X20+1880]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X8, [X20]
	055 Move W9, [X19+192]
	056 Move X8, [X8+184]
	057 Move W8, [X8]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X21]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X8, [X19+200]
	065 Compare X8, 0
	066 JumpIfEqual {46}
	067 Move X0, [X21]
	068 Move W9, [X0+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {75}
	071 Call 0x1C17DFC
	072 Move X8, [X19+200]
	073 Compare X8, 0
	074 JumpIfEqual {84}
	075 Move W8, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Move W0, 1
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Return X0
	084 Call 0x1C17F20

Method: UnityEngine.Rendering.RendererListParams ConvertToParameters(in UnityEngine.Rendering.RendererUtils.RendererListDesc desc)

Disassembly:
	0x03C5A6B4 MOV X19, X0
	0x03C5A6B8 ADRP X0, 0x4A1000
	0x03C5A6BC LDR X0, [X0 + 0x578]
	0x03C5A6C0 BL 0x1C16D08
	0x03C5A6C4 BL 0x1C16F10
	0x03C5A6C8 MOV X1, X19
	0x03C5A6CC MOV X2, X31
	0x03C5A6D0 MOV X20, X0
	0x03C5A6D4 BL 0x3314A68
	0x03C5A6D8 ADRP X0, 0x505000
	0x03C5A6DC LDR X0, [X0 + 0xEE8]
	0x03C5A6E0 BL 0x1C16D08
	0x03C5A6E4 MOV X1, X0
	0x03C5A6E8 MOV X0, X20
	0x03C5A6EC BL 0x1C16DEC
	0x03C5A6F0 STR X29, [X31 - 0x40]!
	0x03C5A6F4 STP X30, X23, [X31 + 0x10]
	0x03C5A6F8 STP X22, X21, [X31 + 0x20]
	0x03C5A6FC STP X20, X19, [X31 + 0x30]
	0x03C5A700 SUB X31, X31, 0x330
	0x03C5A704 MRS X22, 0xC000
	0x03C5A708 LDR X8, [X22 + 0x28]
	0x03C5A70C ADRP X21, 0x78C000
	0x03C5A710 MOV X20, X1
	0x03C5A714 MOV X19, X0
	0x03C5A718 STR X8, [X31 + 0x328]
	0x03C5A71C LDRB W8, [X21 + 0x18A]
	0x03C5A720 TBNZ X8, 0x0, 0x3C5A744
	0x03C5A724 ADRP X0, 0x505000
	0x03C5A728 LDR X0, [X0 + 0xEF0]
	0x03C5A72C BL 0x1C16CF4
	0x03C5A730 ADRP X0, 0x4FC000
	0x03C5A734 LDR X0, [X0 + 0xED0]
	0x03C5A738 BL 0x1C16CF4
	0x03C5A73C MOVZ W8, 0x1
	0x03C5A740 STRB W8, [X21 + 0x18A]
	0x03C5A744 LDP X1, X2, [X20]
	0x03C5A748 MOV X0, X19
	0x03C5A74C BL 0x3C532D8
	0x03C5A750 TBZ X0, 0x0, 0x3C5A820
	0x03C5A754 LDR W8, [X19 + 0x10]
	0x03C5A758 LDR W9, [X20 + 0x10]
	0x03C5A75C CMP W8, W9
	0x03C5A760 B.NE 0x3C5A820
	0x03C5A764 ADD X0, X31, 0x208
	0x03C5A768 MOVZ W2, 0x120
	0x03C5A76C MOV X1, X20
	0x03C5A770 ADD X21, X19, 0x18
	0x03C5A774 ADD X23, X31, 0x208
	0x03C5A778 BL 0x3EB1AC0
	0x03C5A77C ADD X1, X23, 0x18
	0x03C5A780 ADD X0, X31, 0x108
	0x03C5A784 MOVZ W2, 0xFC
	0x03C5A788 BL 0x3EB1AC0
	0x03C5A78C ADRP X8, 0x4FC000
	0x03C5A790 LDR X8, [X8 + 0xED0]
	0x03C5A794 LDR X0, [X8]
	0x03C5A798 LDR W8, [X0 + 0xE0]
	0x03C5A79C CBNZ W8, 0x3C5A7A4
	0x03C5A7A0 BL 0x1C16DFC
	0x03C5A7A4 ADD X0, X31, 0x8
	0x03C5A7A8 ADD X1, X31, 0x108
	0x03C5A7AC MOVZ W2, 0xFC
	0x03C5A7B0 BL 0x3EB1AC0
	0x03C5A7B4 ADD X1, X31, 0x8
	0x03C5A7B8 MOV X0, X21
	0x03C5A7BC BL 0x3C5A854
	0x03C5A7C0 TBZ X0, 0x0, 0x3C5A820
	0x03C5A7C4 LDR W1, [X20 + 0x14]
	0x03C5A7C8 ADD X0, X19, 0x14
	0x03C5A7CC MOV X2, X31
	0x03C5A7D0 BL 0x337B6C8
	0x03C5A7D4 TBZ X0, 0x0, 0x3C5A820
	0x03C5A7D8 LDR W8, [X20 + 0x114]
	0x03C5A7DC ADRP X20, 0x505000
	0x03C5A7E0 LDR X20, [X20 + 0xEF0]
	0x03C5A7E4 ADD X1, X31, 0x108
	0x03C5A7E8 STR W8, [X31 + 0x108]
	0x03C5A7EC LDR X0, [X20]
	0x03C5A7F0 BL 0x1C16E04
	0x03C5A7F4 LDR X8, [X20]
	0x03C5A7F8 MOVN X9, 0x0
	0x03C5A7FC STR X9, [X31 + 0x210]
	0x03C5A800 MOV X1, X0
	0x03C5A804 STR X8, [X31 + 0x208]
	0x03C5A808 LDR W8, [X19 + 0x114]
	0x03C5A80C ADD X0, X31, 0x208
	0x03C5A810 MOV X2, X31
	0x03C5A814 STR W8, [X31 + 0x218]
	0x03C5A818 BL 0x33B1620
	0x03C5A81C B 0x3C5A824
	0x03C5A820 MOV W0, W31
	0x03C5A824 LDR X8, [X22 + 0x28]
	0x03C5A828 LDR X9, [X31 + 0x328]
	0x03C5A82C CMP X8, X9
	0x03C5A830 B.NE 0x3C5A850
	0x03C5A834 AND W0, W0, 0x1
	0x03C5A838 ADD X31, X31, 0x330
	0x03C5A83C LDP X20, X19, [X31 + 0x30]
	0x03C5A840 LDP X22, X21, [X31 + 0x20]
	0x03C5A844 LDP X30, X23, [X31 + 0x10]
	0x03C5A848 LDR X29, [X31], #0x40
	0x03C5A84C RET
	0x03C5A850 BL 0x3EB1B20
	0x03C5A854 SUB X31, X31, 0x90
	0x03C5A858 STP D11, D10, [X31 + 0x30]
	0x03C5A85C STP D9, D8, [X31 + 0x40]
	0x03C5A860 STR X30, [X31 + 0x50]
	0x03C5A864 STP X24, X23, [X31 + 0x60]
	0x03C5A868 STP X22, X21, [X31 + 0x70]
	0x03C5A86C STP X20, X19, [X31 + 0x80]
	0x03C5A870 ADRP X21, 0x78C000
	0x03C5A874 LDRB W8, [X21 + 0x18E]
	0x03C5A878 MOV X19, X1
	0x03C5A87C MOV X20, X0
	0x03C5A880 TBNZ X8, 0x0, 0x3C5A8A4
	0x03C5A884 ADRP X0, 0x505000
	0x03C5A888 LDR X0, [X0 + 0xD28]
	0x03C5A88C BL 0x1C16CF4
	0x03C5A890 ADRP X0, 0x4FC000
	0x03C5A894 LDR X0, [X0 + 0xED0]
	0x03C5A898 BL 0x1C16CF4
	0x03C5A89C MOVZ W8, 0x1
	0x03C5A8A0 STRB W8, [X21 + 0x18E]
	0x03C5A8A4 LDR W8, [X20]
	0x03C5A8A8 LDR W9, [X19]
	0x03C5A8AC CMP W8, W9
	0x03C5A8B0 B.NE 0x3C5A9A4
	0x03C5A8B4 ADRP X22, 0x4FC000
	0x03C5A8B8 ADRP X23, 0x505000
	0x03C5A8BC LDR X22, [X22 + 0xED0]
	0x03C5A8C0 LDR X23, [X23 + 0xD28]
	0x03C5A8C4 MOV W21, W31
	0x03C5A8C8 MOVN X24, 0x0
	0x03C5A8CC LDR X0, [X22]
	0x03C5A8D0 LDR W8, [X0 + 0xE0]
	0x03C5A8D4 CBNZ W8, 0x3C5A8DC
	0x03C5A8D8 BL 0x1C16DFC
	0x03C5A8DC LDR W8, [X20]
	0x03C5A8E0 CMP W21, W8
	0x03C5A8E4 B.GE 0x3C5A960
	0x03C5A8E8 LDR X0, [X22]
	0x03C5A8EC LDR W8, [X0 + 0xE0]
	0x03C5A8F0 CBNZ W8, 0x3C5A8F8
	0x03C5A8F4 BL 0x1C16DFC
	0x03C5A8F8 MOV X0, X20
	0x03C5A8FC MOV W1, W21
	0x03C5A900 BL 0x3C5ABC4
	0x03C5A904 MOV X0, X19
	0x03C5A908 MOV W1, W21
	0x03C5A90C MOV V8.16B, V0.16B
	0x03C5A910 MOV V9.16B, V1.16B
	0x03C5A914 MOV V10.16B, V2.16B
	0x03C5A918 MOV V11.16B, V3.16B
	0x03C5A91C BL 0x3C5ABC4
	0x03C5A920 LDR X0, [X23]
	0x03C5A924 ADD X1, X31, 0x20
	0x03C5A928 STP S0, S1, [X31 + 0x20]
	0x03C5A92C STP S2, S3, [X31 + 0x28]
	0x03C5A930 BL 0x1C16E04
	0x03C5A934 LDR X8, [X23]
	0x03C5A938 MOV X1, X0
	0x03C5A93C ADD X0, X31, 0x0
	0x03C5A940 MOV X2, X31
	0x03C5A944 STP S8, S9, [X31 + 0x10]
	0x03C5A948 STP X8, X24, [X31]
	0x03C5A94C STP S10, S11, [X31 + 0x18]
	0x03C5A950 BL 0x33D55D0
	0x03C5A954 ADD W21, W21, 0x1
	0x03C5A958 TBNZ X0, 0x0, 0x3C5A8CC
	0x03C5A95C B 0x3C5A9A4
	0x03C5A960 LDR V0, [X19 + 0xA4]
	0x03C5A964 LDR V1, [X20 + 0xA4]
	0x03C5A968 FCMP S1, S0
	0x03C5A96C B.NE 0x3C5A9A4
	0x03C5A970 LDR V0, [X19 + 0xA8]
	0x03C5A974 LDR V1, [X20 + 0xA8]
	0x03C5A978 FCMP S1, S0
	0x03C5A97C B.NE 0x3C5A9A4
	0x03C5A980 LDR V0, [X19 + 0xAC]
	0x03C5A984 LDR V1, [X20 + 0xAC]
	0x03C5A988 FCMP S1, S0
	0x03C5A98C B.NE 0x3C5A9A4
	0x03C5A990 LDR V0, [X19 + 0xB0]
	0x03C5A994 LDR V1, [X20 + 0xB0]
	0x03C5A998 FCMP S1, S0
	0x03C5A99C CSET W0, EQ
	0x03C5A9A0 B 0x3C5A9A8
	0x03C5A9A4 MOV W0, W31
	0x03C5A9A8 LDP X20, X19, [X31 + 0x80]
	0x03C5A9AC LDP X22, X21, [X31 + 0x70]
	0x03C5A9B0 LDP X24, X23, [X31 + 0x60]
	0x03C5A9B4 LDR X30, [X31 + 0x50]
	0x03C5A9B8 LDP D9, D8, [X31 + 0x40]
	0x03C5A9BC LDP D11, D10, [X31 + 0x30]
	0x03C5A9C0 ADD X31, X31, 0x90
	0x03C5A9C4 RET
	0x03C5A9C8 SUB X31, X31, 0x160
	0x03C5A9CC STP X29, X30, [X31 + 0x130]
	0x03C5A9D0 STP X22, X21, [X31 + 0x140]
	0x03C5A9D4 STP X20, X19, [X31 + 0x150]
	0x03C5A9D8 MRS X21, 0xC000
	0x03C5A9DC LDR X8, [X21 + 0x28]
	0x03C5A9E0 ADRP X22, 0x78C000
	0x03C5A9E4 MOV X20, X1
	0x03C5A9E8 MOV X19, X0
	0x03C5A9EC STR X8, [X31 + 0x128]
	0x03C5A9F0 LDRB W8, [X22 + 0x18B]
	0x03C5A9F4 TBNZ X8, 0x0, 0x3C5AA0C
	0x03C5A9F8 ADRP X0, 0x505000
	0x03C5A9FC LDR X0, [X0 + 0xEF8]
	0x03C5AA00 BL 0x1C16CF4
	0x03C5AA04 MOVZ W8, 0x1
	0x03C5AA08 STRB W8, [X22 + 0x18B]
	0x03C5AA0C CBZ X20, 0x3C5AA28
	0x03C5AA10 ADRP X8, 0x505000
	0x03C5AA14 LDR X8, [X8 + 0xEF8]
	0x03C5AA18 LDR X9, [X20]
	0x03C5AA1C LDR X8, [X8]
	0x03C5AA20 CMP X9, X8
	0x03C5AA24 B.EQ 0x3C5AA30
	0x03C5AA28 MOV W0, W31
	0x03C5AA2C B 0x3C5AA54
	0x03C5AA30 MOV X0, X20
	0x03C5AA34 BL 0x1C16E08
	0x03C5AA38 MOV X1, X0
	0x03C5AA3C ADD X0, X31, 0x8
	0x03C5AA40 MOVZ W2, 0x120
	0x03C5AA44 BL 0x3EB1AC0
	0x03C5AA48 ADD X1, X31, 0x8
	0x03C5AA4C MOV X0, X19
	0x03C5AA50 BL 0x3C5A6F0
	0x03C5AA54 LDR X8, [X21 + 0x28]
	0x03C5AA58 LDR X9, [X31 + 0x128]
	0x03C5AA5C CMP X8, X9
	0x03C5AA60 B.NE 0x3C5AA7C
	0x03C5AA64 LDP X20, X19, [X31 + 0x150]
	0x03C5AA68 LDP X22, X21, [X31 + 0x140]
	0x03C5AA6C LDP X29, X30, [X31 + 0x130]
	0x03C5AA70 AND W0, W0, 0x1
	0x03C5AA74 ADD X31, X31, 0x160
	0x03C5AA78 RET
	0x03C5AA7C BL 0x3EB1B20
	0x03C5AA80 STR X30, [X31 - 0x40]!
	0x03C5AA84 STP X24, X23, [X31 + 0x10]
	0x03C5AA88 STP X22, X21, [X31 + 0x20]
	0x03C5AA8C STP X20, X19, [X31 + 0x30]
	0x03C5AA90 ADRP X21, 0x78C000
	0x03C5AA94 ADRP X20, 0x4FC000
	0x03C5AA98 LDRB W8, [X21 + 0x18C]
	0x03C5AA9C LDR X20, [X20 + 0xED0]
	0x03C5AAA0 MOV X19, X0
	0x03C5AAA4 TBNZ X8, 0x0, 0x3C5AABC
	0x03C5AAA8 ADRP X0, 0x4FC000
	0x03C5AAAC LDR X0, [X0 + 0xED0]
	0x03C5AAB0 BL 0x1C16CF4
	0x03C5AAB4 MOVZ W8, 0x1
	0x03C5AAB8 STRB W8, [X21 + 0x18C]
	0x03C5AABC MOV X0, X19
	0x03C5AAC0 MOV X1, X31
	0x03C5AAC4 BL 0x33C24FC
	0x03C5AAC8 LDR X8, [X20]
	0x03C5AACC LDR X23, [X19 + 0x8]
	0x03C5AAD0 LDP W22, W21, [X19 + 0x10]
	0x03C5AAD4 MOV W20, W0
	0x03C5AAD8 LDR W9, [X8 + 0xE0]
	0x03C5AADC CBNZ W9, 0x3C5AAE8
	0x03C5AAE0 MOV X0, X8
	0x03C5AAE4 BL 0x1C16DFC
	0x03C5AAE8 MOVZ W24, 0x18D
	0x03C5AAEC MUL W8, W20, W24
	0x03C5AAF0 EOR W8, W8, W23, 0x0
	0x03C5AAF4 MUL W8, W8, W24
	0x03C5AAF8 EOR W8, W8, W22, 0x0
	0x03C5AAFC ADD X0, X19, 0x18
	0x03C5AB00 MUL W8, W8, W24
	0x03C5AB04 EOR W20, W8, W21, 0x0
	0x03C5AB08 BL 0x3C5AB34
	0x03C5AB0C MUL W9, W20, W24
	0x03C5AB10 LDR W8, [X19 + 0x114]
	0x03C5AB14 EOR W9, W0, W9, 0x0
	0x03C5AB18 MUL W9, W9, W24
	0x03C5AB1C LDP X20, X19, [X31 + 0x30]
	0x03C5AB20 LDP X22, X21, [X31 + 0x20]
	0x03C5AB24 LDP X24, X23, [X31 + 0x10]
	0x03C5AB28 EOR W0, W9, W8, 0x0
	0x03C5AB2C LDR X30, [X31], #0x40
	0x03C5AB30 RET
	0x03C5AB34 STP X30, X23, [X31 - 0x30]!
	0x03C5AB38 STP X22, X21, [X31 + 0x10]
	0x03C5AB3C STP X20, X19, [X31 + 0x20]
	0x03C5AB40 MOV X20, X0
	0x03C5AB44 LDR W23, [X20], #0xA8
	0x03C5AB48 MOV X19, X0
	0x03C5AB4C ADD X0, X0, 0xA4
	0x03C5AB50 MOV X1, X31
	0x03C5AB54 BL 0x338FE0C
	0x03C5AB58 MOV W21, W0
	0x03C5AB5C MOV X0, X20
	0x03C5AB60 MOV X1, X31
	0x03C5AB64 BL 0x338FE0C
	0x03C5AB68 MOV W20, W0
	0x03C5AB6C ADD X0, X19, 0xAC
	0x03C5AB70 MOV X1, X31
	0x03C5AB74 BL 0x338FE0C
	0x03C5AB78 MOV W22, W0
	0x03C5AB7C ADD X0, X19, 0xB0
	0x03C5AB80 MOV X1, X31
	0x03C5AB84 BL 0x338FE0C
	0x03C5AB88 MOVZ W8, 0x18D
	0x03C5AB8C MUL W8, W23, W8
	0x03C5AB90 EOR W8, W8, W21, 0x0
	0x03C5AB94 EOR W8, W8, W20, 0x2
	0x03C5AB98 EOR W8, W8, W22, 0x2
	0x03C5AB9C LDP X20, X19, [X31 + 0x20]
	0x03C5ABA0 LDP X22, X21, [X31 + 0x10]
	0x03C5ABA4 EOR W0, W8, W0, 0x1
	0x03C5ABA8 LDP X30, X23, [X31], #0x30
	0x03C5ABAC RET
	0x03C5ABB0 LDR W0, [X0]
	0x03C5ABB4 RET
	0x03C5ABB8 LDP S0, S1, [X0 + 0xA4]
	0x03C5ABBC LDP S2, S3, [X0 + 0xAC]
	0x03C5ABC0 RET
	0x03C5ABC4 SUB X31, X31, 0x40
	0x03C5ABC8 STR X30, [X31 + 0x10]
	0x03C5ABCC STP X22, X21, [X31 + 0x20]
	0x03C5ABD0 STP X20, X19, [X31 + 0x30]
	0x03C5ABD4 ADRP X21, 0x78C000
	0x03C5ABD8 LDRB W8, [X21 + 0x18D]
	0x03C5ABDC MOV W19, W1
	0x03C5ABE0 MOV X20, X0
	0x03C5ABE4 TBNZ X8, 0x0, 0x3C5ABFC
	0x03C5ABE8 ADRP X0, 0x4FC000
	0x03C5ABEC LDR X0, [X0 + 0xED0]
	0x03C5ABF0 BL 0x1C16CF4
	0x03C5ABF4 MOVZ W8, 0x1
	0x03C5ABF8 STRB W8, [X21 + 0x18D]
	0x03C5ABFC TBNZ X19, 0x1F, 0x3C5AC44
	0x03C5AC00 ADRP X8, 0x4FC000
	0x03C5AC04 LDR X8, [X8 + 0xED0]
	0x03C5AC08 LDR X0, [X8]
	0x03C5AC0C LDR W8, [X0 + 0xE0]
	0x03C5AC10 CBNZ W8, 0x3C5AC18
	0x03C5AC14 BL 0x1C16DFC
	0x03C5AC18 LDR W8, [X20]
	0x03C5AC1C CMP W8, W19
	0x03C5AC20 B.LE 0x3C5AC44
	0x03C5AC24 ADD X8, X20, W19, 0x4, UXTW
	0x03C5AC28 LDP S2, S3, [X8 + 0xC]
	0x03C5AC2C LDP S0, S1, [X8 + 0x4]
	0x03C5AC30 LDP X20, X19, [X31 + 0x30]
	0x03C5AC34 LDP X22, X21, [X31 + 0x20]
	0x03C5AC38 LDR X30, [X31 + 0x10]
	0x03C5AC3C ADD X31, X31, 0x40
	0x03C5AC40 RET
	0x03C5AC44 STR W31, [X31 + 0x1C]
	0x03C5AC48 ADRP X21, 0x499000
	0x03C5AC4C LDR X21, [X21 + 0x758]
	0x03C5AC50 MOV X0, X21
	0x03C5AC54 BL 0x1C16D08
	0x03C5AC58 ADD X1, X31, 0x1C
	0x03C5AC5C BL 0x1C16E04
	0x03C5AC60 MOV X22, X0
	0x03C5AC64 ADRP X0, 0x4FC000
	0x03C5AC68 LDR X0, [X0 + 0xED0]
	0x03C5AC6C BL 0x1C16D08
	0x03C5AC70 BL 0x19903D0
	0x03C5AC74 LDR W8, [X20]
	0x03C5AC78 MOV X0, X21
	0x03C5AC7C STR W8, [X31 + 0x18]
	0x03C5AC80 BL 0x1C16D08
	0x03C5AC84 ADD X1, X31, 0x18
	0x03C5AC88 BL 0x1C16E04
	0x03C5AC8C MOV X20, X0
	0x03C5AC90 MOV X0, X21
	0x03C5AC94 STR W19, [X31 + 0xC]
	0x03C5AC98 BL 0x1C16D08
	0x03C5AC9C ADD X1, X31, 0xC
	0x03C5ACA0 BL 0x1C16E04
	0x03C5ACA4 MOV X19, X0
	0x03C5ACA8 ADRP X0, 0x505000
	0x03C5ACAC LDR X0, [X0 + 0xF00]
	0x03C5ACB0 BL 0x1C16D08
	0x03C5ACB4 MOV X1, X22
	0x03C5ACB8 MOV X2, X20
	0x03C5ACBC MOV X3, X19
	0x03C5ACC0 MOV X4, X31
	0x03C5ACC4 BL 0x3227C18
	0x03C5ACC8 MOV X19, X0
	0x03C5ACCC ADRP X0, 0x4A1000
	0x03C5ACD0 LDR X0, [X0 + 0x578]
	0x03C5ACD4 BL 0x1C16D08
	0x03C5ACD8 BL 0x1C16F10
	0x03C5ACDC MOV X20, X0
	0x03C5ACE0 ADRP X0, 0x4A4000
	0x03C5ACE4 LDR X0, [X0 + 0x130]
	0x03C5ACE8 BL 0x1C16D08
	0x03C5ACEC MOV X1, X0
	0x03C5ACF0 MOV X0, X20
	0x03C5ACF4 MOV X2, X19
	0x03C5ACF8 MOV X3, X31
	0x03C5ACFC BL 0x330E16C
	0x03C5AD00 ADRP X0, 0x505000
	0x03C5AD04 LDR X0, [X0 + 0xF08]
	0x03C5AD08 BL 0x1C16D08
	0x03C5AD0C MOV X1, X0
	0x03C5AD10 MOV X0, X20
	0x03C5AD14 BL 0x1C16DEC
	0x03C5AD18 SUB X31, X31, 0x140
	0x03C5AD1C STP X29, X30, [X31 + 0x110]
	0x03C5AD20 STP X22, X21, [X31 + 0x120]
	0x03C5AD24 STP X20, X19, [X31 + 0x130]
	0x03C5AD28 MRS X21, 0xC000
	0x03C5AD2C LDR X8, [X21 + 0x28]
	0x03C5AD30 ADRP X22, 0x78C000
	0x03C5AD34 MOV X20, X1
	0x03C5AD38 MOV X19, X0
	0x03C5AD3C STR X8, [X31 + 0x108]
	0x03C5AD40 LDRB W8, [X22 + 0x18F]
	0x03C5AD44 TBNZ X8, 0x0, 0x3C5AD5C
	0x03C5AD48 ADRP X0, 0x4FC000
	0x03C5AD4C LDR X0, [X0 + 0xED0]
	0x03C5AD50 BL 0x1C16CF4
	0x03C5AD54 MOVZ W8, 0x1
	0x03C5AD58 STRB W8, [X22 + 0x18F]
	0x03C5AD5C CBZ X20, 0x3C5AD78
	0x03C5AD60 ADRP X22, 0x4FC000
	0x03C5AD64 LDR X22, [X22 + 0xED0]
	0x03C5AD68 LDR X8, [X20]
	0x03C5AD6C LDR X0, [X22]
	0x03C5AD70 CMP X8, X0
	0x03C5AD74 B.EQ 0x3C5AD80
	0x03C5AD78 MOV W0, W31
	0x03C5AD7C B 0x3C5ADD0
	0x03C5AD80 LDR W8, [X0 + 0xE0]
	0x03C5AD84 CBZ W8, 0x3C5AD90
	0x03C5AD88 MOV X1, X0
	0x03C5AD8C B 0x3C5AD9C
	0x03C5AD90 BL 0x1C16DFC
	0x03C5AD94 LDR X1, [X22]
	0x03C5AD98 LDR X0, [X20]
	0x03C5AD9C LDR X8, [X0 + 0x40]
	0x03C5ADA0 LDR X9, [X1 + 0x40]
	0x03C5ADA4 MOV X0, X20
	0x03C5ADA8 CMP X8, X9
	0x03C5ADAC B.NE 0x3C5ADF8
	0x03C5ADB0 BL 0x1C16E08
	0x03C5ADB4 MOV X1, X0
	0x03C5ADB8 ADD X0, X31, 0x8
	0x03C5ADBC MOVZ W2, 0xFC
	0x03C5ADC0 BL 0x3EB1AC0
	0x03C5ADC4 ADD X1, X31, 0x8
	0x03C5ADC8 MOV X0, X19
	0x03C5ADCC BL 0x3C5A854
	0x03C5ADD0 LDR X8, [X21 + 0x28]
	0x03C5ADD4 LDR X9, [X31 + 0x108]
	0x03C5ADD8 CMP X8, X9
	0x03C5ADDC B.NE 0x3C5ADFC
	0x03C5ADE0 LDP X20, X19, [X31 + 0x130]
	0x03C5ADE4 LDP X22, X21, [X31 + 0x120]
	0x03C5ADE8 LDP X29, X30, [X31 + 0x110]
	0x03C5ADEC AND W0, W0, 0x1
	0x03C5ADF0 ADD X31, X31, 0x140
	0x03C5ADF4 RET
	0x03C5ADF8 BL 0x1C171E0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1824
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X19, X8
	016 Move X8, [X23+40]
	017 Move X21, 0x78D000
	018 Move X26, 0x506000
	019 Move X20, X0
	020 Move [X31+1816], X8
	021 Move W8, [X21+569]
	022 Move X26, [X26+3752]
	023 Add X25, X31, 1584
	024 Add X24, X31, 1152
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {70}
	029 Move X0, 0x49A000
	030 Move X0, [X0+2600]
	031 Call 0x1C17CF4
	032 Move X0, 0x4FB000
	033 Move X0, [X0+184]
	034 Call 0x1C17CF4
	035 Move X0, 0x506000
	036 Move X0, [X0+3760]
	037 Call 0x1C17CF4
	038 Move X0, 0x506000
	039 Move X0, [X0+3768]
	040 Call 0x1C17CF4
	041 Move X0, 0x506000
	042 Move X0, [X0+3776]
	043 Call 0x1C17CF4
	044 Move X0, 0x506000
	045 Move X0, [X0+3784]
	046 Call 0x1C17CF4
	047 Move X0, 0x4FB000
	048 Move X0, [X0+120]
	049 Call 0x1C17CF4
	050 Move X0, 0x506000
	051 Move X0, [X0+3792]
	052 Call 0x1C17CF4
	053 Move X0, 0x506000
	054 Move X0, [X0+3800]
	055 Call 0x1C17CF4
	056 Move X0, 0x49A000
	057 Move X0, [X0+1432]
	058 Call 0x1C17CF4
	059 Move X0, 0x506000
	060 Move X0, [X0+3752]
	061 Call 0x1C17CF4
	062 Move X0, 0x506000
	063 Move X0, [X0+3688]
	064 Call 0x1C17CF4
	065 Move X0, 0x4C5000
	066 Move X0, [X0+1880]
	067 Call 0x1C17CF4
	068 Move W8, 1
	069 Move [X21+569], W8
	070 Add X0, X31, 1616
	071 Move W2, 196
	072 Move W1, W31
	073 Call 0x3EB2B10
	074 NotImplemented "Instruction MOVI not yet implemented."
	075 Add X0, X31, 1384
	076 Move W2, 196
	077 Move W1, W31
	078 Move [X31+944], X31
	079 Move [X31+928], X31
	080 Move [X31+936], X31
	081 Move [X31+1600], X31
	082 Move [X31+1584], X31
	083 Move [X31+1592], X31
	084 Move [X25+23], X31
	085 Move [X31+912], X31
	086 Move [X31+896], X31
	087 Move [X31+904], X31
	088 Move [X31+864], V0
	089 Move [X31+872], V0
	090 Move [X31+832], V0
	091 Move [X31+840], V0
	092 Move [X31+800], V0
	093 Move [X31+808], V0
	094 Call 0x3EB2B10
	095 Add X0, X31, 1184
	096 Move W2, 196
	097 Move W1, W31
	098 Move [X31+776], X31
	099 Move [X31+768], X31
	100 Move [X31+784], X31
	101 Call 0x3EB2B10
	102 NotImplemented "Instruction MOVI not yet implemented."
	103 Add X0, X31, 952
	104 Move W2, 196
	105 Move W1, W31
	106 Move [X31+544], X31
	107 Move [X31+528], X31
	108 Move [X31+536], X31
	109 Move [X31+1168], X31
	110 Move [X31+1152], X31
	111 Move [X31+1160], X31
	112 Move [X24+23], X31
	113 Move [X31+504], X31
	114 Move [X31+512], X31
	115 Move [X31+496], X31
	116 Move [X31+464], V0
	117 Move [X31+472], V0
	118 Move [X31+432], V0
	119 Move [X31+440], V0
	120 Move [X31+400], V0
	121 Move [X31+408], V0
	122 Call 0x3EB2B10
	123 Add X0, X31, 560
	124 Move W2, 208
	125 Move X1, X20
	126 Move [X31+376], X31
	127 Move [X31+384], X31
	128 Move [X31+392], X31
	129 Move [X31+360], X31
	130 Move [X31+368], X31
	131 Move [X31+344], X31
	132 Move [X31+352], X31
	133 Call 0x3EB2AC0
	134 Move X0, [X26]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Add X0, X31, 560
	140 Call RendererListDesc.IsValid, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {241}
	145 Add X0, X31, 1616
	146 Move W2, 196
	147 Move W1, W31
	148 Call 0x3EB2B10
	149 Move X0, [X26]
	150 Move [X31+944], X31
	151 Move [X31+928], X31
	152 Move [X31+936], X31
	153 Move [X31+1600], X31
	154 Move [X31+1584], X31
	155 Move [X31+1592], X31
	156 Move [X25+23], X31
	157 Move [X31+912], X31
	158 Move [X31+904], X31
	159 Move [X31+896], X31
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X1, [X20+184]
	165 Add X0, X31, 400
	166 Call SortingSettings..ctor, X0, X1
	167 Move W8, [X20]
	168 Add X0, X31, 800
	169 Add X1, X31, 400
	170 Move W2, 96
	171 Move [X31+488], W8
	172 Call 0x3EB2AC0
	173 Move X8, [X26]
	174 Add X0, X31, 136
	175 Add X1, X31, 800
	176 Move W2, 96
	177 Move X8, [X8+184]
	178 Move W21, [X8]
	179 Call 0x3EB2AC0
	180 Move X28, 0x4FB000
	181 Move X28, [X28+184]
	182 Move X0, [X28]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Add X0, X31, 248
	188 Add X1, X31, 136
	189 Move W2, 96
	190 Call 0x3EB2AC0
	191 Add X0, X31, 952
	192 Add X2, X31, 248
	193 Move X1, X21
	194 Call DrawingSettings..ctor, X0, X1, X2
	195 Move W8, [X20+4]
	196 Add X0, X31, 1384
	197 Add X1, X31, 952
	198 Move W2, 196
	199 Move [X31+1112], W8
	200 Call 0x3EB2AC0
	201 Move X27, 0x4C5000
	202 Move X27, [X27+1880]
	203 Move W9, [X20+192]
	204 Move X8, [X27]
	205 Move X8, [X8+184]
	206 Move W8, [X8]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X21, X31
	209 Move X0, [X26]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move X8, [X20+200]
	215 Compare X8, 0
	216 JumpIfEqual {521}
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X0, [X26]
	220 Move W9, [X0+224]
	221 Compare W9, 0
	222 JumpIfNotEqual {227}
	223 Call 0x1C17DFC
	224 Move X8, [X20+200]
	225 Compare X8, 0
	226 JumpIfEqual {521}
	227 Move W9, [X8+24]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X0, [X28]
	230 Add X8, X8, X21
	231 Move W22, [X8+32]
	232 Move W9, [X0+224]
	233 Compare W9, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Add X0, X31, 1384
	237 Move W1, W21
	238 Move X2, X22
	239 Call DrawingSettings.SetShaderPassName, X0, X1, X2
	240 Add X21, X21, 1
	241 Move X20, 0x506000
	242 Move X20, [X20+3688]
	243 Move X0, [X20]
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {249}
	247 Call 0x1C17DFC
	248 Move X0, [X20]
	249 Move X25, [X0+184]
	250 Add X0, X31, 1184
	251 Move W2, 196
	252 Move X21, [X25]
	253 Move X22, [X25+8]
	254 Add X1, X25, 16
	255 Call 0x3EB2AC0
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 NotImplemented "Instruction LDUR not yet implemented."
	258 Add X27, X25, 272
	259 Move [X31+33], V0
	260 Move [X31+544], X8
	261 Move V0, [X25+16]
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 Move W26, [X25+236]
	264 Move W20, [X25+240]
	265 Move [X24+15], V0
	266 Move [X31+72], V1
	267 Move X0, [X26]
	268 Move W8, [X0+224]
	269 Compare W8, 0
	270 JumpIfNotEqual {272}
	271 Call 0x1C17DFC
	272 Move X8, 0x49A000
	273 Move X8, [X8+2600]
	274 Move X21, [X20+200]
	275 Move X0, [X8]
	276 Move W8, [X0+224]
	277 Compare W8, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1C17DFC
	280 NotImplemented "Instruction CMP not yet implemented."
	281 NotImplemented "Instruction CSET not yet implemented."
	282 Move X1, X31
	283 Call Debug.Assert, X0
	284 Move X0, [X28]
	285 Move W21, [X20+192]
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Add X0, X31, 1384
	291 Move W1, W31
	292 Move X2, X21
	293 Call DrawingSettings.SetShaderPassName, X0, X1, X2
	294 Move X22, 0x49A000
	295 Move X22, [X22+1432]
	296 Move X21, [X20+128]
	297 Move X0, [X22]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X0, X21
	303 Move X1, X31
	304 Move X2, X31
	305 Call Object.op_Inequality, X0, X1
	306 Move TEMP, X0
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfNotEqual {327}
	310 Move X0, [X28]
	311 Move X21, [X20+128]
	312 Move W8, [X0+224]
	313 Compare W8, 0
	314 JumpIfEqual {320}
	315 Compare X21, 0
	316 JumpIfEqual {323}
	317 Move X0, X21
	318 Move X1, X31
	319 Call Object.GetInstanceID, X0
	320 Call 0x1C17DFC
	321 Compare X21, 0
	322 JumpIfNotEqual {317}
	323 Move W0, W31
	324 Move [X31+1552], W0
	325 Move W8, [X20+160]
	326 Move [X31+1556], W8
	327 Move X0, [X22]
	328 Move X21, [X20+136]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X0, X21
	334 Move X1, X31
	335 Move X2, X31
	336 Call Object.op_Inequality, X0, X1
	337 Move TEMP, X0
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfNotEqual {358}
	341 Move X0, [X28]
	342 Move X21, [X20+136]
	343 Move W8, [X0+224]
	344 Compare W8, 0
	345 JumpIfEqual {351}
	346 Compare X21, 0
	347 JumpIfEqual {354}
	348 Move X0, X21
	349 Move X1, X31
	350 Call Object.GetInstanceID, X0
	351 Call 0x1C17DFC
	352 Compare X21, 0
	353 JumpIfNotEqual {348}
	354 Move W0, W31
	355 Move [X31+1560], W0
	356 Move W8, [X20+156]
	357 Move [X31+1564], W8
	358 Move X8, 0x4FB000
	359 Move X1, [X20+8]
	360 Move X8, [X8+120]
	361 Add X0, X31, 136
	362 Move [X31+144], W31
	363 Move [X31+136], X31
	364 Move X2, [X8]
	365 Call Nullable`1<RenderQueueRange>..ctor, X0, X1
	366 Move W3, [X20+148]
	367 Move W4, [X20+152]
	368 Move X1, [X31+136]
	369 Move W2, [X31+144]
	370 Add X0, X31, 376
	371 Move W5, W31
	372 Call FilteringSettings..ctor, X0, X1, X2, X3, X4
	373 Move W8, [X20+144]
	374 Move X0, [X26]
	375 Move [X31+392], W8
	376 Add X8, X31, 121
	377 NotImplemented "Instruction LDUR not yet implemented."
	378 Move X8, [X31+392]
	379 Move [X31+48], V0
	380 Move [X31+784], X8
	381 Move W8, [X0+224]
	382 Compare W8, 0
	383 JumpIfNotEqual {385}
	384 Call 0x1C17DFC
	385 Move X21, [X20+168]
	386 Move X22, [X20+176]
	387 Add X0, X31, 1616
	388 Add X1, X31, 1384
	389 Move W2, 196
	390 Call 0x3EB2AC0
	391 Move V0, [X31+48]
	392 Move X8, [X31+784]
	393 Move X9, [X27]
	394 Move [X31+58], V0
	395 Move [X31+944], X8
	396 Move X8, [X9+184]
	397 Move W26, [X8]
	398 Add X20, X20, 16
	399 Move W8, [X20]
	400 Compare W8, 0
	401 JumpIfEqual {466}
	402 Move X8, 0x506000
	403 Move X8, [X8+3768]
	404 Add X0, X31, 360
	405 Move W1, 1
	406 Move W2, 2
	407 Move X4, [X8]
	408 Move W3, 1
	409 Call NativeArray`1<RenderStateBlock>..ctor, X0, X1, X2, X3
	410 Move X8, 0x506000
	411 Move X8, [X8+3800]
	412 Move X0, X20
	413 Move X1, [X8]
	414 Add X8, X31, 24
	415 Call Nullable`1<RenderStateBlock>.get_Value, X0
	416 Add X0, X31, 136
	417 Add X1, X31, 24
	418 Move W2, 108
	419 Call 0x3EB2AC0
	420 Move X20, [X31+360]
	421 Add X1, X31, 136
	422 Move W2, 108
	423 Move X0, X20
	424 Call 0x3EB2AC0
	425 Move X8, 0x506000
	426 Move X2, [X31+368]
	427 Move X8, [X8+3784]
	428 Add X0, X31, 24
	429 Move X1, X20
	430 Move [X31+24], X31
	431 Move [X31+32], X31
	432 Move X3, [X8]
	433 Move [X31+40], X31
	434 Call Nullable`1<NativeArray`1<RenderStateBlock>>..ctor, X0, X1
	435 Move X9, 0x506000
	436 NotImplemented "Instruction LDUR not yet implemented."
	437 Move X8, [X31+40]
	438 Move X9, [X9+3760]
	439 Add X0, X31, 344
	440 Move W1, 1
	441 Move W2, 2
	442 Move X4, [X9]
	443 Move W3, 1
	444 Move [X31+56], V0
	445 Move [X31+912], X8
	446 Call NativeArray`1<ShaderTagId>..ctor, X0, X1, X2, X3
	447 Move X8, [X27]
	448 Move X9, [X31+344]
	449 Move X10, 0x506000
	450 Add X0, X31, 0
	451 Move X8, [X8+184]
	452 Move W8, [X8]
	453 Move X10, [X10+3776]
	454 Move [X9], W8
	455 Move X1, [X31+344]
	456 Move X2, [X31+352]
	457 Move X3, [X10]
	458 Move [X31], X31
	459 Move [X31+8], X31
	460 Move [X31+16], X31
	461 Call Nullable`1<NativeArray`1<ShaderTagId>>..ctor, X0, X1
	462 Move V0, [X31]
	463 Move X8, [X31+16]
	464 Move [X25+7], V0
	465 Move [X25+23], X8
	466 Add X0, X31, 1184
	467 Add X1, X31, 1616
	468 Move W2, 196
	469 Add X27, X31, 896
	470 Call 0x3EB2AC0
	471 Move V0, [X31+58]
	472 Move X8, [X31+944]
	473 Move V1, [X31+99]
	474 NotImplemented "Instruction LDUR not yet implemented."
	475 Move W20, W31
	476 Move [X31+33], V0
	477 Move [X31+544], X8
	478 Move [X31+72], V1
	479 Move [X24+15], V2
	480 Move X8, [X27+16]
	481 Move V0, [X27]
	482 Add X0, X19, 16
	483 Add X1, X31, 1184
	484 Move W2, 196
	485 Move [X19], X21
	486 Move [X19+8], X22
	487 Move [X31+512], X8
	488 Move [X31+31], V0
	489 Call 0x3EB2AC0
	490 Move V0, [X31+33]
	491 Move X8, [X31+544]
	492 Move V1, [X31+72]
	493 NotImplemented "Instruction LDUR not yet implemented."
	494 Move X9, [X31+512]
	495 Move [X19+212], V0
	496 Move V0, [X31+31]
	497 Move [X19+236], W26
	498 Move [X19+240], W20
	499 Move [X19+228], X8
	500 Move [X19+256], V2
	501 Move [X19+264], V0
	502 Move [X19+241], V1
	503 Move [X19+288], X9
	504 Move X8, [X23+40]
	505 Move X9, [X31+1816]
	506 NotImplemented "Instruction CMP not yet implemented."
	507 Add X31, X31, 1824
	508 Move X20, [X31+80]
	509 Move X19, [X31+88]
	510 Move X22, [X31+64]
	511 Move X21, [X31+72]
	512 Move X24, [X31+48]
	513 Move X23, [X31+56]
	514 Move X26, [X31+32]
	515 Move X25, [X31+40]
	516 Move X28, [X31+16]
	517 Move X27, [X31+24]
	518 Move X29, [X31+96]
	519 Move X30, [X31+104]
	520 Return X0
	521 Call 0x1C17F20
	522 Call 0x1C17F28
	523 Call 0x3EB2B20

Method: System.Void .cctor()

Disassembly:
	0x03C5E924 STR X0, [X20 + 0x290]
	0x03C5E928 MOV X0, X19
	0x03C5E92C LDP X20, X19, [X31 + 0x10]
	0x03C5E930 LDR X30, [X31], #0x20
	0x03C5E934 BR X1
	0x03C5E938 STP X30, X21, [X31 - 0x20]!
	0x03C5E93C STP X20, X19, [X31 + 0x10]
	0x03C5E940 ADRP X20, 0x788000
	0x03C5E944 ADRP X21, 0x4BE000
	0x03C5E948 LDRB W8, [X20 + 0x288]
	0x03C5E94C LDR X21, [X21 + 0x230]
	0x03C5E950 MOV X19, X0
	0x03C5E954 TBNZ X8, 0x0, 0x3C5E96C
	0x03C5E958 ADRP X0, 0x4BE000
	0x03C5E95C LDR X0, [X0 + 0x230]
	0x03C5E960 BL 0x1C16CF4
	0x03C5E964 MOVZ W8, 0x1
	0x03C5E968 STRB W8, [X20 + 0x288]
	0x03C5E96C LDR X0, [X21]
	0x03C5E970 LDR W8, [X0 + 0xE0]
	0x03C5E974 CBNZ W8, 0x3C5E97C
	0x03C5E978 BL 0x1C16DFC
	0x03C5E97C ADRP X20, 0x788000
	0x03C5E980 LDR X1, [X20 + 0x298]
	0x03C5E984 CBNZ X1, 0x3C5E99C
	0x03C5E988 ADRP X0, 0xFFFFFFFFFCEBD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x789000
	006 Move X21, 0x496000
	007 Move X19, 0x502000
	008 Move W8, [X20+570]
	009 Move X21, [X21+2440]
	010 Move X19, [X19+3752]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x502000
	016 Move X0, [X0+3752]
	017 Call 0x1C17CF4
	018 Move X0, 0x496000
	019 Move X0, [X0+2440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+570], W8
	023 Move X0, [X21]
	024 Move X1, X31
	025 Call Shader.TagToID, X0
	026 Move X8, [X19]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move [X8], W0
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

