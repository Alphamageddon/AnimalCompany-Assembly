Type: UnityEngine.Rendering.CommandBuffer

Method: System.Void Internal_SetSinglePassStereo(UnityEngine.Rendering.SinglePassStereoMode mode)

Disassembly:
	0x03C4CEEC MOV W19, W1
	0x03C4CEF0 MOV X20, X0
	0x03C4CEF4 STP S0, S1, [X31]
	0x03C4CEF8 STP S2, S3, [X31 + 0x8]
	0x03C4CEFC CBNZ X8, 0x3C4CF14
	0x03C4CF00 ADRP X0, 0xFFFFFFFFFCED3000
	0x03C4CF04 ADD X0, X0, 0x157
	0x03C4CF08 BL 0x1C16CB8
	0x03C4CF0C MOV X8, X0
	0x03C4CF10 STR X0, [X21 + 0xF98]
	0x03C4CF14 ADD X2, X31, 0x0
	0x03C4CF18 MOV X0, X20
	0x03C4CF1C MOV W1, W19
	0x03C4CF20 BLR X8
	0x03C4CF24 LDP X20, X19, [X31 + 0x20]
	0x03C4CF28 LDP X30, X21, [X31 + 0x10]
	0x03C4CF2C ADD X31, X31, 0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x79A000
	006 Move X2, [X21+3560]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51535872
	012 Add X0, X0, 451
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3560], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.IntPtr InitBuffer()

Disassembly:
	0x03C4CF30 RET
	0x03C4CF34 STR X30, [X31 - 0x30]!
	0x03C4CF38 STP X22, X21, [X31 + 0x10]
	0x03C4CF3C STP X20, X19, [X31 + 0x20]
	0x03C4CF40 ADRP X22, 0x799000
	0x03C4CF44 LDR X3, [X22 + 0xF98]
	0x03C4CF48 MOV X19, X2
	0x03C4CF4C MOV W20, W1
	0x03C4CF50 MOV X21, X0
	0x03C4CF54 CBNZ X3, 0x3C4CF6C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x79A000
	004 Move X0, [X19+3568]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51556352
	008 Add X0, X0, 3203
	009 Call 0x1C17CB8
	010 Move [X19+3568], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.IntPtr CreateGPUFence_Internal(UnityEngine.Rendering.GraphicsFenceType fenceType, UnityEngine.Rendering.SynchronisationStageFlags stage)

Disassembly:
	0x03C4CF58 ADRP X0, 0xFFFFFFFFFCED3000
	0x03C4CF5C ADD X0, X0, 0x157
	0x03C4CF60 BL 0x1C16CB8
	0x03C4CF64 MOV X3, X0
	0x03C4CF68 STR X0, [X22 + 0xF98]
	0x03C4CF6C MOV X0, X21
	0x03C4CF70 MOV W1, W20
	0x03C4CF74 MOV X2, X19
	0x03C4CF78 LDP X20, X19, [X31 + 0x20]
	0x03C4CF7C LDP X22, X21, [X31 + 0x10]
	0x03C4CF80 LDR X30, [X31], #0x30
	0x03C4CF84 BR X3
	0x03C4CF88 SUB X31, X31, 0x30
	0x03C4CF8C STP X30, X21, [X31 + 0x10]
	0x03C4CF90 STP X20, X19, [X31 + 0x20]
	0x03C4CF94 ADRP X21, 0x799000
	0x03C4CF98 LDR X8, [X21 + 0xFA0]
	0x03C4CF9C MOV W19, W1
	0x03C4CFA0 MOV X20, X0
	0x03C4CFA4 STP S0, S1, [X31]
	0x03C4CFA8 STP S2, S3, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x79A000
	007 Move X3, [X22+3576]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51757056
	014 Add X0, X0, 405
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3576], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void WaitOnGPUFence_Internal(System.IntPtr fencePtr, UnityEngine.Rendering.SynchronisationStageFlags stage)

Disassembly:
	0x03C4CFAC CBNZ X8, 0x3C4CFC4
	0x03C4CFB0 ADRP X0, 0xFFFFFFFFFCEBB000
	0x03C4CFB4 ADD X0, X0, 0x58B
	0x03C4CFB8 BL 0x1C16CB8
	0x03C4CFBC MOV X8, X0
	0x03C4CFC0 STR X0, [X21 + 0xFA0]
	0x03C4CFC4 ADD X2, X31, 0x0
	0x03C4CFC8 MOV X0, X20
	0x03C4CFCC MOV W1, W19
	0x03C4CFD0 BLR X8
	0x03C4CFD4 LDP X20, X19, [X31 + 0x20]
	0x03C4CFD8 LDP X30, X21, [X31 + 0x10]
	0x03C4CFDC ADD X31, X31, 0x30
	0x03C4CFE0 RET
	0x03C4CFE4 STR X30, [X31 - 0x30]!
	0x03C4CFE8 STP X22, X21, [X31 + 0x10]
	0x03C4CFEC STP X20, X19, [X31 + 0x20]
	0x03C4CFF0 ADRP X22, 0x799000
	0x03C4CFF4 LDR X3, [X22 + 0xFA0]
	0x03C4CFF8 MOV X19, X2
	0x03C4CFFC MOV W20, W1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x79A000
	007 Move X3, [X22+3584]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51523584
	014 Add X0, X0, 2996
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3584], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void ReleaseBuffer()

Disassembly:
	0x03C4D000 MOV X21, X0
	0x03C4D004 CBNZ X3, 0x3C4D01C
	0x03C4D008 ADRP X0, 0xFFFFFFFFFCEBA000
	0x03C4D00C ADD X0, X0, 0x58B
	0x03C4D010 BL 0x1C16CB8
	0x03C4D014 MOV X3, X0
	0x03C4D018 STR X0, [X22 + 0xFA0]
	0x03C4D01C MOV X0, X21
	0x03C4D020 MOV W1, W20
	0x03C4D024 MOV X2, X19
	0x03C4D028 LDP X20, X19, [X31 + 0x20]
	0x03C4D02C LDP X22, X21, [X31 + 0x10]
	0x03C4D030 LDR X30, [X31], #0x30
	0x03C4D034 BR X3
	0x03C4D038 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x799000
	005 Move X1, [X20+3592]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51527680
	010 Add X0, X0, 3120
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3592], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetComputeVectorParam(UnityEngine.ComputeShader computeShader, System.Int32 nameID, UnityEngine.Vector4 val)

Disassembly:
	0x03C4D03C STP X22, X21, [X31 + 0x10]
	0x03C4D040 STP X20, X19, [X31 + 0x20]
	0x03C4D044 ADRP X22, 0x798000
	0x03C4D048 LDR X3, [X22 + 0xFA8]
	0x03C4D04C MOV X19, X2
	0x03C4D050 MOV W20, W1
	0x03C4D054 MOV X21, X0
	0x03C4D058 CBNZ X3, 0x3C4D070
	0x03C4D05C ADRP X0, 0xFFFFFFFFFCEC7000
	0x03C4D060 ADD X0, X0, 0xCF5
	0x03C4D064 BL 0x1C16CB8
	0x03C4D068 MOV X3, X0
	0x03C4D06C STR X0, [X22 + 0xFA8]
	0x03C4D070 MOV X0, X21
	0x03C4D074 MOV W1, W20
	0x03C4D078 MOV X2, X19
	0x03C4D07C LDP X20, X19, [X31 + 0x20]
	0x03C4D080 LDP X22, X21, [X31 + 0x10]
	0x03C4D084 LDR X30, [X31], #0x30
	0x03C4D088 BR X3
	0x03C4D08C STR X30, [X31 - 0x30]!
	0x03C4D090 STP X22, X21, [X31 + 0x10]
	0x03C4D094 STP X20, X19, [X31 + 0x20]
	0x03C4D098 ADRP X22, 0x798000
	0x03C4D09C LDR X3, [X22 + 0xFA8]
	0x03C4D0A0 MOV X19, X2
	0x03C4D0A4 MOV W20, W1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x799000
	008 Move X8, [X22+3920]
	009 Move W19, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Move [X31], S0
	013 Move [X31+8], S1
	014 Move [X31+8], S2
	015 Move [X31+16], S3
	016 Compare X8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, -51548160
	019 Add X0, X0, 1147
	020 Call 0x1C17CB8
	021 Move X8, X0
	022 Move [X22+3920], X0
	023 Add X3, X31, 0
	024 Move X0, X21
	025 Move X1, X20
	026 Move W2, W19
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X20, [X31+48]
	029 Move X19, [X31+56]
	030 Move X22, [X31+32]
	031 Move X21, [X31+40]
	032 Move X30, [X31+16]
	033 Add X31, X31, 64
	034 Return 

Method: System.Void SetComputeVectorArrayParam(UnityEngine.ComputeShader computeShader, System.Int32 nameID, UnityEngine.Vector4[] values)

Disassembly:
	0x03C4D104 BL 0x1C16CB8
	0x03C4D108 MOV X2, X0
	0x03C4D10C STR X0, [X21 + 0xE90]
	0x03C4D110 MOV X0, X20
	0x03C4D114 MOV X1, X19
	0x03C4D118 LDP X20, X19, [X31 + 0x10]
	0x03C4D11C LDP X30, X21, [X31], #0x20
	0x03C4D120 BR X2
	0x03C4D124 STP X30, X21, [X31 - 0x20]!
	0x03C4D128 STP X20, X19, [X31 + 0x10]
	0x03C4D12C ADRP X21, 0x798000
	0x03C4D130 LDR X2, [X21 + 0xE98]
	0x03C4D134 MOV X19, X1
	0x03C4D138 MOV X20, X0
	0x03C4D13C CBNZ X2, 0x3C4D154
	0x03C4D140 ADRP X0, 0xFFFFFFFFFCED0000
	0x03C4D144 ADD X0, X0, 0x3B1
	0x03C4D148 BL 0x1C16CB8
	0x03C4D14C MOV X2, X0
	0x03C4D150 STR X0, [X21 + 0xE98]
	0x03C4D154 MOV X0, X20
	0x03C4D158 MOV X1, X19
	0x03C4D15C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x799000
	008 Move X4, [X23+3600]
	009 Move X19, X3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51539968
	016 Add X0, X0, 561
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3600], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move W2, W20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void Internal_SetComputeTextureParam(UnityEngine.ComputeShader computeShader, System.Int32 kernelIndex, System.Int32 nameID, ref UnityEngine.Rendering.RenderTargetIdentifier rt, System.Int32 mipLevel, UnityEngine.Rendering.RenderTextureSubElement element)

Disassembly:
	0x03C4D160 LDP X30, X21, [X31], #0x20
	0x03C4D164 BR X2
	0x03C4D168 STP X30, X23, [X31 - 0x30]!
	0x03C4D16C STP X22, X21, [X31 + 0x10]
	0x03C4D170 STP X20, X19, [X31 + 0x20]
	0x03C4D174 ADRP X23, 0x798000
	0x03C4D178 LDR X4, [X23 + 0xFB0]
	0x03C4D17C MOV W21, W3
	0x03C4D180 MOV X19, X2
	0x03C4D184 MOV X20, X1
	0x03C4D188 MOV X22, X0
	0x03C4D18C CBNZ X4, 0x3C4D1A4
	0x03C4D190 ADRP X0, 0xFFFFFFFFFCEAA000
	0x03C4D194 ADD X0, X0, 0x60B
	0x03C4D198 BL 0x1C16CB8
	0x03C4D19C MOV X4, X0
	0x03C4D1A0 STR X0, [X23 + 0xFB0]
	0x03C4D1A4 AND W3, W21, 0x1
	0x03C4D1A8 MOV X0, X22
	0x03C4D1AC MOV X1, X20
	0x03C4D1B0 MOV X2, X19
	0x03C4D1B4 LDP X20, X19, [X31 + 0x20]
	0x03C4D1B8 LDP X22, X21, [X31 + 0x10]
	0x03C4D1BC LDP X30, X23, [X31], #0x30
	0x03C4D1C0 BR X4
	0x03C4D1C4 STP X30, X23, [X31 - 0x30]!
	0x03C4D1C8 STP X22, X21, [X31 + 0x10]
	0x03C4D1CC STP X20, X19, [X31 + 0x20]
	0x03C4D1D0 ADRP X23, 0x798000
	0x03C4D1D4 LDR X4, [X23 + 0xFB0]
	0x03C4D1D8 MOV W21, W3
	0x03C4D1DC MOV X19, X2
	0x03C4D1E0 MOV X20, X1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x799000
	011 Move X7, [X26+3608]
	012 Move W19, W6
	013 Move W20, W5
	014 Move X21, X4
	015 Move W22, W3
	016 Move W23, W2
	017 Move X24, X1
	018 Move X25, X0
	019 Compare X7, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51601408
	022 Add X0, X0, 3561
	023 Call 0x1C17CB8
	024 Move X7, X0
	025 Move [X26+3608], X0
	026 Move X0, X25
	027 Move X1, X24
	028 Move W2, W23
	029 Move W3, W22
	030 Move X4, X21
	031 Move W5, W20
	032 Move W6, W19
	033 Move X20, [X31+64]
	034 Move X19, [X31+72]
	035 Move X22, [X31+48]
	036 Move X21, [X31+56]
	037 Move X24, [X31+32]
	038 Move X23, [X31+40]
	039 Move X26, [X31+16]
	040 Move X25, [X31+24]
	041 Move X30, [X31+80]
	042 CallNoReturn X7

Method: System.Void Internal_SetComputeConstantComputeBufferParam(UnityEngine.ComputeShader computeShader, System.Int32 nameID, UnityEngine.ComputeBuffer buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03C4D1E4 MOV X22, X0
	0x03C4D1E8 CBNZ X4, 0x3C4D200
	0x03C4D1EC ADRP X0, 0xFFFFFFFFFCEAA000
	0x03C4D1F0 ADD X0, X0, 0x60B
	0x03C4D1F4 BL 0x1C16CB8
	0x03C4D1F8 MOV X4, X0
	0x03C4D1FC STR X0, [X23 + 0xFB0]
	0x03C4D200 AND W3, W21, 0x1
	0x03C4D204 MOV X0, X22
	0x03C4D208 MOV X1, X20
	0x03C4D20C MOV X2, X19
	0x03C4D210 LDP X20, X19, [X31 + 0x20]
	0x03C4D214 LDP X22, X21, [X31 + 0x10]
	0x03C4D218 LDP X30, X23, [X31], #0x30
	0x03C4D21C BR X4
	0x03C4D220 SUB X31, X31, 0x50
	0x03C4D224 STR X30, [X31 + 0x20]
	0x03C4D228 STP X22, X21, [X31 + 0x30]
	0x03C4D22C STP X20, X19, [X31 + 0x40]
	0x03C4D230 ADRP X22, 0x798000
	0x03C4D234 LDR V0, [X2]
	0x03C4D238 LDR X9, [X2 + 0x10]
	0x03C4D23C LDR X8, [X22 + 0xFB0]
	0x03C4D240 MOV W21, W3
	0x03C4D244 MOV X19, X1
	0x03C4D248 MOV X20, X0
	0x03C4D24C STR X9, [X31 + 0x10]
	0x03C4D250 STR V0, [X31]
	0x03C4D254 CBNZ X8, 0x3C4D26C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x799000
	010 Move X6, [X25+3616]
	011 Move W19, W5
	012 Move W20, W4
	013 Move X21, X3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51560448
	020 Add X0, X0, 3253
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+3616], X0
	024 Move X0, X24
	025 Move X1, X23
	026 Move W2, W22
	027 Move X3, X21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void Internal_DispatchCompute(UnityEngine.ComputeShader computeShader, System.Int32 kernelIndex, System.Int32 threadGroupsX, System.Int32 threadGroupsY, System.Int32 threadGroupsZ)

Disassembly:
	0x03C4D258 ADRP X0, 0xFFFFFFFFFCEAA000
	0x03C4D25C ADD X0, X0, 0x60B
	0x03C4D260 BL 0x1C16CB8
	0x03C4D264 MOV X8, X0
	0x03C4D268 STR X0, [X22 + 0xFB0]
	0x03C4D26C AND W3, W21, 0x1
	0x03C4D270 ADD X2, X31, 0x0
	0x03C4D274 MOV X0, X20
	0x03C4D278 MOV X1, X19
	0x03C4D27C BLR X8
	0x03C4D280 LDP X20, X19, [X31 + 0x40]
	0x03C4D284 LDP X22, X21, [X31 + 0x30]
	0x03C4D288 LDR X30, [X31 + 0x20]
	0x03C4D28C ADD X31, X31, 0x50
	0x03C4D290 RET
	0x03C4D294 STR X30, [X31 - 0x30]!
	0x03C4D298 STP X22, X21, [X31 + 0x10]
	0x03C4D29C STP X20, X19, [X31 + 0x20]
	0x03C4D2A0 ADRP X22, 0x798000
	0x03C4D2A4 LDR X3, [X22 + 0xFB8]
	0x03C4D2A8 MOV X19, X2
	0x03C4D2AC MOV X20, X1
	0x03C4D2B0 MOV X21, X0
	0x03C4D2B4 CBNZ X3, 0x3C4D2CC
	0x03C4D2B8 ADRP X0, 0xFFFFFFFFFCEAC000
	0x03C4D2BC ADD X0, X0, 0x717
	0x03C4D2C0 BL 0x1C16CB8
	0x03C4D2C4 MOV X3, X0
	0x03C4D2C8 STR X0, [X22 + 0xFB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x799000
	010 Move X6, [X25+3624]
	011 Move W19, W5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51712000
	020 Add X0, X0, 1460
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+3624], X0
	024 Move X0, X24
	025 Move X1, X23
	026 Move W2, W22
	027 Move W3, W21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void set_name(System.String value)

Disassembly:
	0x03C4D2CC MOV X0, X21
	0x03C4D2D0 MOV X1, X20
	0x03C4D2D4 MOV X2, X19
	0x03C4D2D8 LDP X20, X19, [X31 + 0x20]
	0x03C4D2DC LDP X22, X21, [X31 + 0x10]
	0x03C4D2E0 LDR X30, [X31], #0x30
	0x03C4D2E4 BR X3
	0x03C4D2E8 STR X30, [X31 - 0x30]!
	0x03C4D2EC STP X22, X21, [X31 + 0x10]
	0x03C4D2F0 STP X20, X19, [X31 + 0x20]
	0x03C4D2F4 ADRP X22, 0x798000
	0x03C4D2F8 LDR X3, [X22 + 0xFB8]
	0x03C4D2FC MOV X19, X2
	0x03C4D300 MOV X20, X1
	0x03C4D304 MOV X21, X0
	0x03C4D308 CBNZ X3, 0x3C4D320
	0x03C4D30C ADRP X0, 0xFFFFFFFFFCEAC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x799000
	006 Move X2, [X21+3632]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51679232
	012 Add X0, X0, 780
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3632], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Clear()

Disassembly:
	0x03C4D310 ADD X0, X0, 0x717
	0x03C4D314 BL 0x1C16CB8
	0x03C4D318 MOV X3, X0
	0x03C4D31C STR X0, [X22 + 0xFB8]
	0x03C4D320 MOV X0, X21
	0x03C4D324 MOV X1, X20
	0x03C4D328 MOV X2, X19
	0x03C4D32C LDP X20, X19, [X31 + 0x20]
	0x03C4D330 LDP X22, X21, [X31 + 0x10]
	0x03C4D334 LDR X30, [X31], #0x30
	0x03C4D338 BR X3
	0x03C4D33C STP D9, D8, [X31 - 0x30]!
	0x03C4D340 STR X30, [X31 + 0x10]
	0x03C4D344 STP X20, X19, [X31 + 0x20]
	0x03C4D348 ADRP X20, 0x798000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x799000
	005 Move X1, [X20+3640]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51654656
	010 Add X0, X0, 1937
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3640], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Internal_DrawMesh(UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 submeshIndex, System.Int32 shaderPass, UnityEngine.MaterialPropertyBlock properties)

Disassembly:
	0x03C4D34C LDR X1, [X20 + 0xEA0]
	0x03C4D350 MOV V8.16B, V1.16B
	0x03C4D354 MOV V9.16B, V0.16B
	0x03C4D358 MOV X19, X0
	0x03C4D35C CBNZ X1, 0x3C4D374
	0x03C4D360 ADRP X0, 0xFFFFFFFFFCEAC000
	0x03C4D364 ADD X0, X0, 0x62D
	0x03C4D368 BL 0x1C16CB8
	0x03C4D36C MOV X1, X0
	0x03C4D370 STR X0, [X20 + 0xEA0]
	0x03C4D374 MOV X0, X19
	0x03C4D378 LDP X20, X19, [X31 + 0x20]
	0x03C4D37C LDR X30, [X31 + 0x10]
	0x03C4D380 MOV V0.16B, V9.16B
	0x03C4D384 MOV V1.16B, V8.16B
	0x03C4D388 LDP D9, D8, [X31], #0x30
	0x03C4D38C BR X1
	0x03C4D390 STP X30, X21, [X31 - 0x20]!
	0x03C4D394 STP X20, X19, [X31 + 0x10]
	0x03C4D398 ADRP X21, 0x798000
	0x03C4D39C LDR X2, [X21 + 0xEA8]
	0x03C4D3A0 MOV W19, W1
	0x03C4D3A4 MOV X20, X0
	0x03C4D3A8 CBNZ X2, 0x3C4D3C0
	0x03C4D3AC ADRP X0, 0xFFFFFFFFFCEC2000
	0x03C4D3B0 ADD X0, X0, 0x77F
	0x03C4D3B4 BL 0x1C16CB8
	0x03C4D3B8 MOV X2, X0
	0x03C4D3BC STR X0, [X21 + 0xEA8]
	0x03C4D3C0 MOV X0, X20
	0x03C4D3C4 MOV W1, W19
	0x03C4D3C8 LDP X20, X19, [X31 + 0x10]
	0x03C4D3CC LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x799000
	011 Move X7, [X26+3928]
	012 Move X19, X6
	013 Move W20, W5
	014 Move W21, W4
	015 Move X22, X3
	016 Move X23, X2
	017 Move X24, X1
	018 Move X25, X0
	019 Compare X7, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51539968
	022 Add X0, X0, 687
	023 Call 0x1C17CB8
	024 Move X7, X0
	025 Move [X26+3928], X0
	026 Move X0, X25
	027 Move X1, X24
	028 Move X2, X23
	029 Move X3, X22
	030 Move W4, W21
	031 Move W5, W20
	032 Move X6, X19
	033 Move X20, [X31+64]
	034 Move X19, [X31+72]
	035 Move X22, [X31+48]
	036 Move X21, [X31+56]
	037 Move X24, [X31+32]
	038 Move X23, [X31+40]
	039 Move X26, [X31+16]
	040 Move X25, [X31+24]
	041 Move X30, [X31+80]
	042 CallNoReturn X7

Method: System.Void Internal_DrawRenderer(UnityEngine.Renderer renderer, UnityEngine.Material material, System.Int32 submeshIndex, System.Int32 shaderPass)

Disassembly:
	0x03C4D454 BL 0x1C16CB8
	0x03C4D458 MOV X3, X0
	0x03C4D45C STR X0, [X22 + 0xEC0]
	0x03C4D460 MOV X0, X21
	0x03C4D464 MOV W1, W20
	0x03C4D468 MOV X2, X19
	0x03C4D46C LDP X20, X19, [X31 + 0x20]
	0x03C4D470 LDP X22, X21, [X31 + 0x10]
	0x03C4D474 LDR X30, [X31], #0x30
	0x03C4D478 BR X3
	0x03C4D47C STR X30, [X31 - 0x30]!
	0x03C4D480 STP X22, X21, [X31 + 0x10]
	0x03C4D484 STP X20, X19, [X31 + 0x20]
	0x03C4D488 ADRP X22, 0x798000
	0x03C4D48C LDR X3, [X22 + 0xEC8]
	0x03C4D490 MOV X19, X2
	0x03C4D494 MOV W20, W1
	0x03C4D498 MOV X21, X0
	0x03C4D49C CBNZ X3, 0x3C4D4B4
	0x03C4D4A0 ADRP X0, 0xFFFFFFFFFCECB000
	0x03C4D4A4 ADD X0, X0, 0xC59
	0x03C4D4A8 BL 0x1C16CB8
	0x03C4D4AC MOV X3, X0
	0x03C4D4B0 STR X0, [X22 + 0xEC8]
	0x03C4D4B4 MOV X0, X21
	0x03C4D4B8 MOV W1, W20
	0x03C4D4BC MOV X2, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x799000
	009 Move X5, [X24+3648]
	010 Move W19, W4
	011 Move W20, W3
	012 Move X21, X2
	013 Move X22, X1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51519488
	018 Add X0, X0, 3115
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+3648], X0
	022 Move X0, X23
	023 Move X1, X22
	024 Move X2, X21
	025 Move W3, W20
	026 Move W4, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void Internal_DrawRendererList(UnityEngine.Rendering.RendererList rendererList)

Disassembly:
	0x03C4D4C0 LDP X20, X19, [X31 + 0x20]
	0x03C4D4C4 LDP X22, X21, [X31 + 0x10]
	0x03C4D4C8 LDR X30, [X31], #0x30
	0x03C4D4CC BR X3
	0x03C4D4D0 STP X30, X21, [X31 - 0x20]!
	0x03C4D4D4 STP X20, X19, [X31 + 0x10]
	0x03C4D4D8 ADRP X21, 0x798000
	0x03C4D4DC LDR X2, [X21 + 0xED0]
	0x03C4D4E0 MOV X19, X1
	0x03C4D4E4 MOV X20, X0
	0x03C4D4E8 CBNZ X2, 0x3C4D500
	0x03C4D4EC ADRP X0, 0xFFFFFFFFFCEA2000
	0x03C4D4F0 ADD X0, X0, 0x2D9
	0x03C4D4F4 BL 0x1C16CB8
	0x03C4D4F8 MOV X2, X0
	0x03C4D4FC STR X0, [X21 + 0xED0]
	0x03C4D500 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x799000
	006 Move X2, [X21+3936]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51736576
	012 Add X0, X0, 1576
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3936], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Internal_DrawProcedural(UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 shaderPass, UnityEngine.MeshTopology topology, System.Int32 vertexCount, System.Int32 instanceCount, UnityEngine.MaterialPropertyBlock properties)

Disassembly:
	0x03C4D548 STR X0, [X22 + 0xED8]
	0x03C4D54C MOV X0, X21
	0x03C4D550 MOV W1, W20
	0x03C4D554 MOV W2, W19
	0x03C4D558 LDP X20, X19, [X31 + 0x20]
	0x03C4D55C LDP X22, X21, [X31 + 0x10]
	0x03C4D560 LDR X30, [X31], #0x30
	0x03C4D564 BR X3
	0x03C4D568 STP X30, X21, [X31 - 0x20]!
	0x03C4D56C STP X20, X19, [X31 + 0x10]
	0x03C4D570 ADRP X21, 0x798000
	0x03C4D574 LDR X2, [X21 + 0xEE0]
	0x03C4D578 MOV W19, W1
	0x03C4D57C MOV X20, X0
	0x03C4D580 CBNZ X2, 0x3C4D598
	0x03C4D584 ADRP X0, 0xFFFFFFFFFCEDF000
	0x03C4D588 ADD X0, X0, 0xB16
	0x03C4D58C BL 0x1C16CB8
	0x03C4D590 MOV X2, X0
	0x03C4D594 STR X0, [X21 + 0xEE0]
	0x03C4D598 MOV X0, X20
	0x03C4D59C MOV W1, W19
	0x03C4D5A0 LDP X20, X19, [X31 + 0x10]
	0x03C4D5A4 LDP X30, X21, [X31], #0x20
	0x03C4D5A8 BR X2
	0x03C4D5AC STP X30, X23, [X31 - 0x30]!
	0x03C4D5B0 STP X22, X21, [X31 + 0x10]
	0x03C4D5B4 STP X20, X19, [X31 + 0x20]
	0x03C4D5B8 ADRP X23, 0x798000
	0x03C4D5BC LDR X4, [X23 + 0xEE8]
	0x03C4D5C0 MOV W19, W3
	0x03C4D5C4 MOV X20, X2
	0x03C4D5C8 MOV W21, W1
	0x03C4D5CC MOV X22, X0
	0x03C4D5D0 CBNZ X4, 0x3C4D5E8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x799000
	012 Move X8, [X27+3944]
	013 Move X19, X7
	014 Move W20, W6
	015 Move W21, W5
	016 Move W22, W4
	017 Move W23, W3
	018 Move X24, X2
	019 Move X25, X1
	020 Move X26, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51752960
	024 Add X0, X0, 1042
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X27+3944], X0
	028 Move X0, X26
	029 Move X1, X25
	030 Move X2, X24
	031 Move W3, W23
	032 Move W4, W22
	033 Move W5, W21
	034 Move W6, W20
	035 Move X7, X19
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X24, [X31+32]
	041 Move X23, [X31+40]
	042 Move X26, [X31+16]
	043 Move X25, [X31+24]
	044 Move X30, [X31+80]
	045 Move X27, [X31+88]
	046 CallNoReturn X8

Method: System.Void Internal_DrawMeshInstanced(UnityEngine.Mesh mesh, System.Int32 submeshIndex, UnityEngine.Material material, System.Int32 shaderPass, UnityEngine.Matrix4x4[] matrices, System.Int32 count, UnityEngine.MaterialPropertyBlock properties)

Disassembly:
	0x03C4D660 STP X20, X19, [X31 + 0x10]
	0x03C4D664 ADRP X21, 0x798000
	0x03C4D668 LDR X2, [X21 + 0xEF8]
	0x03C4D66C MOV X19, X1
	0x03C4D670 MOV X20, X0
	0x03C4D674 CBNZ X2, 0x3C4D68C
	0x03C4D678 ADRP X0, 0xFFFFFFFFFCEB6000
	0x03C4D67C ADD X0, X0, 0x349
	0x03C4D680 BL 0x1C16CB8
	0x03C4D684 MOV X2, X0
	0x03C4D688 STR X0, [X21 + 0xEF8]
	0x03C4D68C MOV X0, X20
	0x03C4D690 MOV X1, X19
	0x03C4D694 LDP X20, X19, [X31 + 0x10]
	0x03C4D698 LDP X30, X21, [X31], #0x20
	0x03C4D69C BR X2
	0x03C4D6A0 STP X30, X21, [X31 - 0x20]!
	0x03C4D6A4 STP X20, X19, [X31 + 0x10]
	0x03C4D6A8 ADRP X21, 0x798000
	0x03C4D6AC LDR X2, [X21 + 0xF00]
	0x03C4D6B0 MOV X19, X1
	0x03C4D6B4 MOV X20, X0
	0x03C4D6B8 CBNZ X2, 0x3C4D6D0
	0x03C4D6BC ADRP X0, 0xFFFFFFFFFCED0000
	0x03C4D6C0 ADD X0, X0, 0x3FA
	0x03C4D6C4 BL 0x1C16CB8
	0x03C4D6C8 MOV X2, X0
	0x03C4D6CC STR X0, [X21 + 0xF00]
	0x03C4D6D0 MOV X0, X20
	0x03C4D6D4 MOV X1, X19
	0x03C4D6D8 LDP X20, X19, [X31 + 0x10]
	0x03C4D6DC LDP X30, X21, [X31], #0x20
	0x03C4D6E0 BR X2
	0x03C4D6E4 STP X30, X21, [X31 - 0x20]!
	0x03C4D6E8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x799000
	012 Move X8, [X27+3656]
	013 Move X19, X7
	014 Move W20, W6
	015 Move X21, X5
	016 Move W22, W4
	017 Move X23, X3
	018 Move W24, W2
	019 Move X25, X1
	020 Move X26, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51601408
	024 Add X0, X0, 3788
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X27+3656], X0
	028 Move X0, X26
	029 Move X1, X25
	030 Move W2, W24
	031 Move X3, X23
	032 Move W4, W22
	033 Move X5, X21
	034 Move W6, W20
	035 Move X7, X19
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X24, [X31+32]
	041 Move X23, [X31+40]
	042 Move X26, [X31+16]
	043 Move X25, [X31+24]
	044 Move X30, [X31+80]
	045 Move X27, [X31+88]
	046 CallNoReturn X8

Method: System.Void Internal_DrawOcclusionMesh(UnityEngine.RectInt normalizedCamViewport)

Disassembly:
	0x03C4D6EC ADRP X21, 0x798000
	0x03C4D6F0 LDR X2, [X21 + 0xF08]
	0x03C4D6F4 MOV X19, X1
	0x03C4D6F8 MOV X20, X0
	0x03C4D6FC CBNZ X2, 0x3C4D714
	0x03C4D700 ADRP X0, 0xFFFFFFFFFCEB6000
	0x03C4D704 ADD X0, X0, 0x389
	0x03C4D708 BL 0x1C16CB8
	0x03C4D70C MOV X2, X0
	0x03C4D710 STR X0, [X21 + 0xF08]
	0x03C4D714 MOV X0, X20
	0x03C4D718 MOV X1, X19
	0x03C4D71C LDP X20, X19, [X31 + 0x10]
	0x03C4D720 LDP X30, X21, [X31], #0x20
	0x03C4D724 BR X2
	0x03C4D728 STP X30, X21, [X31 - 0x20]!
	0x03C4D72C STP X20, X19, [X31 + 0x10]
	0x03C4D730 ADRP X21, 0x798000
	0x03C4D734 LDR X2, [X21 + 0xF08]
	0x03C4D738 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x799000
	007 Move X8, [X20+3952]
	008 Move X19, X0
	009 Move [X31], X1
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51679232
	013 Add X0, X0, 1163
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+3952], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Add X31, X31, 48
	024 Return 

Method: System.Void SetRandomWriteTarget_Texture(System.Int32 index, ref UnityEngine.Rendering.RenderTargetIdentifier rt)

Disassembly:
	0x03C4D780 MOV X20, X0
	0x03C4D784 CBNZ X2, 0x3C4D79C
	0x03C4D788 ADRP X0, 0xFFFFFFFFFCEBC000
	0x03C4D78C ADD X0, X0, 0x7BE
	0x03C4D790 BL 0x1C16CB8
	0x03C4D794 MOV X2, X0
	0x03C4D798 STR X0, [X21 + 0xF10]
	0x03C4D79C MOV X0, X20
	0x03C4D7A0 MOV X1, X19
	0x03C4D7A4 LDP X20, X19, [X31 + 0x10]
	0x03C4D7A8 LDP X30, X21, [X31], #0x20
	0x03C4D7AC BR X2
	0x03C4D7B0 STP X30, X21, [X31 - 0x20]!
	0x03C4D7B4 STP X20, X19, [X31 + 0x10]
	0x03C4D7B8 ADRP X21, 0x798000
	0x03C4D7BC LDR X2, [X21 + 0xF10]
	0x03C4D7C0 MOV X19, X1
	0x03C4D7C4 MOV X20, X0
	0x03C4D7C8 CBNZ X2, 0x3C4D7E0
	0x03C4D7CC ADRP X0, 0xFFFFFFFFFCEBC000
	0x03C4D7D0 ADD X0, X0, 0x7BE

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x799000
	007 Move X3, [X22+3664]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51687424
	014 Add X0, X0, 785
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3664], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetRandomWriteTarget_GraphicsBuffer(System.Int32 index, UnityEngine.GraphicsBuffer uav, System.Boolean preserveCounterValue)

Disassembly:
	0x03C4D7D4 BL 0x1C16CB8
	0x03C4D7D8 MOV X2, X0
	0x03C4D7DC STR X0, [X21 + 0xF10]
	0x03C4D7E0 MOV X0, X20
	0x03C4D7E4 MOV X1, X19
	0x03C4D7E8 LDP X20, X19, [X31 + 0x10]
	0x03C4D7EC LDP X30, X21, [X31], #0x20
	0x03C4D7F0 BR X2
	0x03C4D7F4 STR X30, [X31 - 0x40]!
	0x03C4D7F8 STP X24, X23, [X31 + 0x10]
	0x03C4D7FC STP X22, X21, [X31 + 0x20]
	0x03C4D800 STP X20, X19, [X31 + 0x30]
	0x03C4D804 ADRP X24, 0x798000
	0x03C4D808 LDR X5, [X24 + 0xF18]
	0x03C4D80C MOV W19, W4
	0x03C4D810 MOV W20, W3
	0x03C4D814 MOV W21, W2
	0x03C4D818 MOV X22, X1
	0x03C4D81C MOV X23, X0
	0x03C4D820 CBNZ X5, 0x3C4D838
	0x03C4D824 ADRP X0, 0xFFFFFFFFFCECB000
	0x03C4D828 ADD X0, X0, 0xCB9
	0x03C4D82C BL 0x1C16CB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x799000
	008 Move X4, [X23+3672]
	009 Move W21, W3
	010 Move X19, X2
	011 Move W20, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51646464
	016 Add X0, X0, 1693
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3672], X0
	020 And W3, W21, 1
	021 Move X0, X22
	022 Move W1, W20
	023 Move X2, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void ClearRandomWriteTargets()

Disassembly:
	0x03C4D830 MOV X5, X0
	0x03C4D834 STR X0, [X24 + 0xF18]
	0x03C4D838 MOV X0, X23
	0x03C4D83C MOV X1, X22
	0x03C4D840 MOV W2, W21
	0x03C4D844 MOV W3, W20
	0x03C4D848 MOV W4, W19
	0x03C4D84C LDP X20, X19, [X31 + 0x30]
	0x03C4D850 LDP X22, X21, [X31 + 0x20]
	0x03C4D854 LDP X24, X23, [X31 + 0x10]
	0x03C4D858 LDR X30, [X31], #0x40
	0x03C4D85C BR X5
	0x03C4D860 STR X30, [X31 - 0x40]!
	0x03C4D864 STP X24, X23, [X31 + 0x10]
	0x03C4D868 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x799000
	005 Move X1, [X20+3680]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51568640
	010 Add X0, X0, 4018
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3680], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetViewport(UnityEngine.Rect pixelRect)

Disassembly:
	0x03C4D86C STP X20, X19, [X31 + 0x30]
	0x03C4D870 ADRP X24, 0x798000
	0x03C4D874 LDR X5, [X24 + 0xF20]
	0x03C4D878 MOV W19, W4
	0x03C4D87C MOV W20, W3
	0x03C4D880 MOV W21, W2
	0x03C4D884 MOV X22, X1
	0x03C4D888 MOV X23, X0
	0x03C4D88C CBNZ X5, 0x3C4D8A4
	0x03C4D890 ADRP X0, 0xFFFFFFFFFCED3000
	0x03C4D894 ADD X0, X0, 0xF02
	0x03C4D898 BL 0x1C16CB8
	0x03C4D89C MOV X5, X0
	0x03C4D8A0 STR X0, [X24 + 0xF20]
	0x03C4D8A4 MOV X0, X23
	0x03C4D8A8 MOV X1, X22
	0x03C4D8AC MOV W2, W21
	0x03C4D8B0 MOV W3, W20
	0x03C4D8B4 MOV W4, W19
	0x03C4D8B8 LDP X20, X19, [X31 + 0x30]
	0x03C4D8BC LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x799000
	006 Move X8, [X20+3960]
	007 Move X19, X0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Move [X31+16], S3
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51654656
	015 Add X0, X0, 2080
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+3960], X0
	019 Add X1, X31, 0
	020 Move X0, X19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return 

Method: System.Void DisableScissorRect()

Disassembly:
	0x03C4D904 LDP X20, X19, [X31 + 0x10]
	0x03C4D908 LDP X30, X21, [X31], #0x20
	0x03C4D90C BR X2
	0x03C4D910 STP X30, X21, [X31 - 0x20]!
	0x03C4D914 STP X20, X19, [X31 + 0x10]
	0x03C4D918 ADRP X21, 0x798000
	0x03C4D91C LDR X2, [X21 + 0xF30]
	0x03C4D920 MOV W19, W1
	0x03C4D924 MOV X20, X0
	0x03C4D928 CBNZ X2, 0x3C4D940
	0x03C4D92C ADRP X0, 0xFFFFFFFFFCEDA000
	0x03C4D930 ADD X0, X0, 0x1D0
	0x03C4D934 BL 0x1C16CB8
	0x03C4D938 MOV X2, X0
	0x03C4D93C STR X0, [X21 + 0xF30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x799000
	005 Move X1, [X20+3688]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51695616
	010 Add X0, X0, 1566
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3688], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Blit_Identifier(ref UnityEngine.Rendering.RenderTargetIdentifier source, ref UnityEngine.Rendering.RenderTargetIdentifier dest, UnityEngine.Material mat, System.Int32 pass, UnityEngine.Vector2 scale, UnityEngine.Vector2 offset, System.Int32 sourceDepthSlice, System.Int32 destDepthSlice)

Disassembly:
	0x03C4D940 MOV X0, X20
	0x03C4D944 MOV W1, W19
	0x03C4D948 LDP X20, X19, [X31 + 0x10]
	0x03C4D94C LDP X30, X21, [X31], #0x20
	0x03C4D950 BR X2
	0x03C4D954 STP X30, X21, [X31 - 0x20]!
	0x03C4D958 STP X20, X19, [X31 + 0x10]
	0x03C4D95C ADRP X21, 0x798000
	0x03C4D960 LDR X2, [X21 + 0xF38]
	0x03C4D964 MOV X19, X1
	0x03C4D968 MOV X20, X0
	0x03C4D96C CBNZ X2, 0x3C4D984
	0x03C4D970 ADRP X0, 0xFFFFFFFFFCEBA000
	0x03C4D974 ADD X0, X0, 0x53C
	0x03C4D978 BL 0x1C16CB8
	0x03C4D97C MOV X2, X0
	0x03C4D980 STR X0, [X21 + 0xF38]
	0x03C4D984 MOV X0, X20
	0x03C4D988 MOV X1, X19
	0x03C4D98C LDP X20, X19, [X31 + 0x10]
	0x03C4D990 LDP X30, X21, [X31], #0x20
	0x03C4D994 BR X2
	0x03C4D998 SUB X31, X31, 0x50
	0x03C4D99C STP X30, X21, [X31 + 0x30]
	0x03C4D9A0 STP X20, X19, [X31 + 0x40]
	0x03C4D9A4 ADRP X21, 0x798000
	0x03C4D9A8 LDR X8, [X21 + 0xEB0]
	0x03C4D9AC MOV X20, X1
	0x03C4D9B0 MOV X19, X0
	0x03C4D9B4 CBNZ X8, 0x3C4D9CC
	0x03C4D9B8 ADRP X0, 0xFFFFFFFFFCED3000
	0x03C4D9BC ADD X0, X0, 0xDB5
	0x03C4D9C0 BL 0x1C16CB8
	0x03C4D9C4 MOV X8, X0
	0x03C4D9C8 STR X0, [X21 + 0xEB0]
	0x03C4D9CC MOVZ W2, 0x2
	0x03C4D9D0 MOV X0, X19
	0x03C4D9D4 MOV W1, W31
	0x03C4D9D8 BLR X8
	0x03C4D9DC LDR X9, [X20 + 0x20]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X26, 0x799000
	012 Move X8, [X26+3968]
	013 Move W20, W6
	014 Move W19, W5
	015 Move W21, W4
	016 Move X22, X3
	017 Move X23, X2
	018 Move X24, X1
	019 Move X25, X0
	020 Move [X31+24], S0
	021 Move [X31+32], S1
	022 Move [X31+8], S2
	023 Move [X31+16], S3
	024 Compare X8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, -51564544
	027 Add X0, X0, 86
	028 Call 0x1C17CB8
	029 Move X8, X0
	030 Move [X26+3968], X0
	031 Add X5, X31, 24
	032 Add X6, X31, 8
	033 Move X0, X25
	034 Move X1, X24
	035 Move X2, X23
	036 Move X3, X22
	037 Move W4, W21
	038 Move W7, W19
	039 Move [X31], W20
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X20, [X31+80]
	042 Move X19, [X31+88]
	043 Move X22, [X31+64]
	044 Move X21, [X31+72]
	045 Move X24, [X31+48]
	046 Move X23, [X31+56]
	047 Move X26, [X31+32]
	048 Move X25, [X31+40]
	049 Move X30, [X31+16]
	050 Add X31, X31, 96
	051 Return 

Method: System.Void GetTemporaryRTWithDescriptor(System.Int32 nameID, UnityEngine.RenderTextureDescriptor desc, UnityEngine.FilterMode filter)

Disassembly:
	0x03C4DA7C STR X0, [X25 + 0xFC0]
	0x03C4DA80 MOV X0, X24
	0x03C4DA84 MOV X1, X23
	0x03C4DA88 MOV W2, W22
	0x03C4DA8C MOV W3, W21
	0x03C4DA90 MOV W4, W20
	0x03C4DA94 MOV W5, W19
	0x03C4DA98 LDP X20, X19, [X31 + 0x30]
	0x03C4DA9C LDP X22, X21, [X31 + 0x20]
	0x03C4DAA0 LDP X24, X23, [X31 + 0x10]
	0x03C4DAA4 LDP X30, X25, [X31], #0x40
	0x03C4DAA8 BR X6
	0x03C4DAAC SUB X31, X31, 0x60
	0x03C4DAB0 STP X30, X23, [X31 + 0x30]
	0x03C4DAB4 STP X22, X21, [X31 + 0x40]
	0x03C4DAB8 STP X20, X19, [X31 + 0x50]
	0x03C4DABC ADRP X23, 0x798000
	0x03C4DAC0 LDR X8, [X23 + 0xEB0]
	0x03C4DAC4 MOV W19, W3
	0x03C4DAC8 MOV W20, W2
	0x03C4DACC MOV X22, X1
	0x03C4DAD0 MOV X21, X0
	0x03C4DAD4 CBNZ X8, 0x3C4DAEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x799000
	008 Move X4, [X23+3976]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51720192
	016 Add X0, X0, 1666
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3976], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void GetTemporaryRT(System.Int32 nameID, UnityEngine.RenderTextureDescriptor desc, UnityEngine.FilterMode filter)

Disassembly:
	0x03C4DB34 ADD X1, X31, 0x0
	0x03C4DB38 MOV X0, X21
	0x03C4DB3C MOV W2, W20
	0x03C4DB40 MOV W3, W19
	0x03C4DB44 MOV W4, W20
	0x03C4DB48 MOV W5, W19
	0x03C4DB4C BLR X8
	0x03C4DB50 LDP X20, X19, [X31 + 0x50]
	0x03C4DB54 LDP X22, X21, [X31 + 0x40]
	0x03C4DB58 LDP X30, X23, [X31 + 0x30]
	0x03C4DB5C ADD X31, X31, 0x60
	0x03C4DB60 RET
	0x03C4DB64 ADRP X0, 0x4AE000
	0x03C4DB68 LDR X0, [X0 + 0x578]
	0x03C4DB6C BL 0x1C16D08
	0x03C4DB70 BL 0x1C16F10
	0x03C4DB74 MOV X19, X0
	0x03C4DB78 ADRP X0, 0x512000
	0x03C4DB7C LDR X0, [X0 + 0xC20]
	0x03C4DB80 BL 0x1C16D08
	0x03C4DB84 MOV X1, X0
	0x03C4DB88 MOV X0, X19
	0x03C4DB8C MOV X2, X31
	0x03C4DB90 BL 0x3314A68
	0x03C4DB94 ADRP X0, 0x512000
	0x03C4DB98 LDR X0, [X0 + 0xC28]
	0x03C4DB9C BL 0x1C16D08
	0x03C4DBA0 MOV X1, X0
	0x03C4DBA4 MOV X0, X19
	0x03C4DBA8 BL 0x1C16DEC
	0x03C4DBAC SUB X31, X31, 0x70

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0x799000
	008 Move V0, [X2]
	009 Move V1, [X2+16]
	010 Move W9, [X2+48]
	011 Move V2, [X2+2]
	012 Move X8, [X22+3976]
	013 Move W19, W3
	014 Move W20, W1
	015 Move X21, X0
	016 Move [X31+48], W9
	017 Move [X31+16], V1
	018 Move [X31+24], V2
	019 Move [X31], V0
	020 Compare X8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51720192
	023 Add X0, X0, 1666
	024 Call 0x1C17CB8
	025 Move X8, X0
	026 Move [X22+3976], X0
	027 Add X2, X31, 0
	028 Move X0, X21
	029 Move W1, W20
	030 Move W3, W19
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+96]
	033 Move X19, [X31+104]
	034 Move X22, [X31+80]
	035 Move X21, [X31+88]
	036 Move X30, [X31+64]
	037 Add X31, X31, 112
	038 Return 

Method: System.Void ReleaseTemporaryRT(System.Int32 nameID)

Disassembly:
	0x03C4DBB0 STP X30, X25, [X31 + 0x30]
	0x03C4DBB4 STP X24, X23, [X31 + 0x40]
	0x03C4DBB8 STP X22, X21, [X31 + 0x50]
	0x03C4DBBC STP X20, X19, [X31 + 0x60]
	0x03C4DBC0 ADRP X25, 0x798000
	0x03C4DBC4 LDR X8, [X25 + 0xEB0]
	0x03C4DBC8 MOV W19, W5
	0x03C4DBCC MOV W20, W4
	0x03C4DBD0 MOV W21, W3
	0x03C4DBD4 MOV W22, W2
	0x03C4DBD8 MOV X24, X1
	0x03C4DBDC MOV X23, X0
	0x03C4DBE0 CBNZ X8, 0x3C4DBF8
	0x03C4DBE4 ADRP X0, 0xFFFFFFFFFCED3000
	0x03C4DBE8 ADD X0, X0, 0xDB5
	0x03C4DBEC BL 0x1C16CB8
	0x03C4DBF0 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x799000
	006 Move X2, [X21+3696]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51671040
	012 Add X0, X0, 1319
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3696], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void ClearRenderTarget(UnityEngine.Rendering.RTClearFlags clearFlags, UnityEngine.Color backgroundColor, System.Single depth, System.UInt32 stencil)

Disassembly:
	0x03C4DBF4 STR X0, [X25 + 0xEB0]
	0x03C4DBF8 MOVZ W2, 0x2
	0x03C4DBFC MOV X0, X23
	0x03C4DC00 MOV W1, W31
	0x03C4DC04 BLR X8
	0x03C4DC08 CMP W22, 0x1
	0x03C4DC0C B.EQ 0x3C4DC7C
	0x03C4DC10 CMP W20, 0x1
	0x03C4DC14 B.EQ 0x3C4DC7C
	0x03C4DC18 LDP V0, V1, [X24]
	0x03C4DC1C LDR X9, [X24 + 0x20]
	0x03C4DC20 ADRP X24, 0x798000
	0x03C4DC24 LDR X8, [X24 + 0xFC0]
	0x03C4DC28 STP V0, V1, [X31]
	0x03C4DC2C STR X9, [X31 + 0x20]
	0x03C4DC30 CBNZ X8, 0x3C4DC48
	0x03C4DC34 ADRP X0, 0xFFFFFFFFFCECB000
	0x03C4DC38 ADD X0, X0, 0xD40
	0x03C4DC3C BL 0x1C16CB8
	0x03C4DC40 MOV X8, X0
	0x03C4DC44 STR X0, [X24 + 0xFC0]
	0x03C4DC48 ADD X1, X31, 0x0
	0x03C4DC4C MOV X0, X23
	0x03C4DC50 MOV W2, W22
	0x03C4DC54 MOV W3, W21
	0x03C4DC58 MOV W4, W20
	0x03C4DC5C MOV W5, W19
	0x03C4DC60 BLR X8
	0x03C4DC64 LDP X20, X19, [X31 + 0x60]
	0x03C4DC68 LDP X22, X21, [X31 + 0x50]
	0x03C4DC6C LDP X24, X23, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x799000
	009 Move X8, [X22+3984]
	010 Move W19, W2
	011 Move V8, V4
	012 Move W20, W1
	013 Move X21, X0
	014 Move [X31], S0
	015 Move [X31+8], S1
	016 Move [X31+8], S2
	017 Move [X31+16], S3
	018 Compare X8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51613696
	021 Add X0, X0, 199
	022 Call 0x1C17CB8
	023 Move X8, X0
	024 Move [X22+3984], X0
	025 Add X2, X31, 0
	026 Move X0, X21
	027 Move W1, W20
	028 Move V0, V8
	029 Move W3, W19
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X20, [X31+48]
	032 Move X19, [X31+56]
	033 Move X22, [X31+32]
	034 Move X21, [X31+40]
	035 Move X30, [X31+24]
	036 Move V8, [X31+16]
	037 Add X31, X31, 64
	038 Return 

Method: System.Void ClearRenderTarget(System.Boolean clearDepth, System.Boolean clearColor, UnityEngine.Color backgroundColor)

Disassembly:
	0x03C4DCDC MOV W20, W2
	0x03C4DCE0 MOV X21, X1
	0x03C4DCE4 MOV X19, X0
	0x03C4DCE8 CBNZ X8, 0x3C4DD00
	0x03C4DCEC ADRP X0, 0xFFFFFFFFFCED3000
	0x03C4DCF0 ADD X0, X0, 0xDB5
	0x03C4DCF4 BL 0x1C16CB8
	0x03C4DCF8 MOV X8, X0
	0x03C4DCFC STR X0, [X22 + 0xEB0]
	0x03C4DD00 MOVZ W2, 0x2
	0x03C4DD04 MOV X0, X19
	0x03C4DD08 MOV W1, W31
	0x03C4DD0C BLR X8
	0x03C4DD10 TBNZ X20, 0x1F, 0x3C4DD8C
	0x03C4DD14 LDR V0, [X21]
	0x03C4DD18 LDR W9, [X21 + 0x8]
	0x03C4DD1C LDR X10, [X21 + 0x10]
	0x03C4DD20 STR W20, [X31 + 0x20]
	0x03C4DD24 ADRP X20, 0x798000
	0x03C4DD28 LDR X8, [X20 + 0xFC0]
	0x03C4DD2C MOVI D1, 0xFFFFFFFF
	0x03C4DD30 STR D0, [X31 + 0x8]
	0x03C4DD34 STP W9, W31, [X31 + 0x10]
	0x03C4DD38 STR X10, [X31 + 0x18]
	0x03C4DD3C STUR D1, [X31 + 0x24]
	0x03C4DD40 STR W31, [X31 + 0x2C]
	0x03C4DD44 CBNZ X8, 0x3C4DD5C
	0x03C4DD48 ADRP X0, 0xFFFFFFFFFCECB000
	0x03C4DD4C ADD X0, X0, 0xD40
	0x03C4DD50 BL 0x1C16CB8
	0x03C4DD54 MOV X8, X0
	0x03C4DD58 STR X0, [X20 + 0xFC0]
	0x03C4DD5C ADD X1, X31, 0x8
	0x03C4DD60 MOV X0, X19
	0x03C4DD64 MOV W2, W31
	0x03C4DD68 MOV W3, W31
	0x03C4DD6C MOV W4, W31
	0x03C4DD70 MOV W5, W31
	0x03C4DD74 BLR X8
	0x03C4DD78 LDP X20, X19, [X31 + 0x50]
	0x03C4DD7C LDP X22, X21, [X31 + 0x40]
	0x03C4DD80 LDR X30, [X31 + 0x30]
	0x03C4DD84 ADD X31, X31, 0x60

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x799000
	011 Move X8, [X22+3760]
	012 Move V8, V3
	013 Move V9, V2
	014 Move V10, V1
	015 Move V11, V0
	016 Move W20, W2
	017 Move W21, W1
	018 Move X19, X0
	019 Compare X8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51560448
	022 Add X0, X0, 3509
	023 Call 0x1C17CB8
	024 Move X8, X0
	025 Move [X22+3760], X0
	026 Move W2, 2
	027 Move X0, X19
	028 Move W1, W31
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Compare X19, 0
	031 JumpIfEqual {54}
	032 And W31, W21, 1
	033 Move W8, 6
	034 NotImplemented "Instruction CSEL not yet implemented."
	035 NotImplemented "Instruction BFM not yet implemented."
	036 Move X0, X19
	037 Move V2, V9
	038 Move V3, V8
	039 Move X20, [X31+64]
	040 Move X19, [X31+72]
	041 Move X22, [X31+48]
	042 Move X21, [X31+56]
	043 Move X30, [X31+32]
	044 Move D9, [X31+16]
	045 Move D8, [X31+24]
	046 Move S4, 1
	047 Move V0, V11
	048 Move V1, V10
	049 Move W2, W31
	050 Move D11, [X31+80]
	051 Move D10, [X31+88]
	052 Call CommandBuffer.ClearRenderTarget, X0, X1, X2, V0, X3
	053 Return 
	054 Call 0x1C17F20

Method: System.Void SetGlobalFloat(System.Int32 nameID, System.Single value)

Disassembly:
	0x03C4DDDC MOV X20, X0
	0x03C4DDE0 BL 0x3314A68
	0x03C4DDE4 ADRP X0, 0x512000
	0x03C4DDE8 LDR X0, [X0 + 0xC40]
	0x03C4DDEC BL 0x1C16D08
	0x03C4DDF0 MOV X1, X0
	0x03C4DDF4 MOV X0, X20
	0x03C4DDF8 BL 0x1C16DEC
	0x03C4DDFC SUB X31, X31, 0x70
	0x03C4DE00 STR X30, [X31 + 0x30]
	0x03C4DE04 STP X24, X23, [X31 + 0x40]
	0x03C4DE08 STP X22, X21, [X31 + 0x50]
	0x03C4DE0C STP X20, X19, [X31 + 0x60]
	0x03C4DE10 ADRP X24, 0x798000
	0x03C4DE14 LDR X8, [X24 + 0xEB0]
	0x03C4DE18 MOV W20, W4
	0x03C4DE1C MOV W21, W3
	0x03C4DE20 MOV W22, W2
	0x03C4DE24 MOV X23, X1
	0x03C4DE28 MOV X19, X0
	0x03C4DE2C CBNZ X8, 0x3C4DE44

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x799000
	007 Move X2, [X21+3704]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51761152
	014 Add X0, X0, 555
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+3704], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void SetGlobalInt(System.Int32 nameID, System.Int32 value)

Disassembly:
	0x03C4DE30 ADRP X0, 0xFFFFFFFFFCED3000
	0x03C4DE34 ADD X0, X0, 0xDB5
	0x03C4DE38 BL 0x1C16CB8
	0x03C4DE3C MOV X8, X0
	0x03C4DE40 STR X0, [X24 + 0xEB0]
	0x03C4DE44 MOVZ W2, 0x2
	0x03C4DE48 MOV X0, X19
	0x03C4DE4C MOV W1, W31
	0x03C4DE50 BLR X8
	0x03C4DE54 ADDS W31, W20, 0x2
	0x03C4DE58 B.LE 0x3C4DED4
	0x03C4DE5C TBNZ X22, 0x1F, 0x3C4DEFC
	0x03C4DE60 LDR V0, [X23]
	0x03C4DE64 LDR W9, [X23 + 0x8]
	0x03C4DE68 LDR X10, [X23 + 0x10]
	0x03C4DE6C STP W22, W21, [X31 + 0x20]
	0x03C4DE70 ADRP X21, 0x798000
	0x03C4DE74 LDR X8, [X21 + 0xFC0]
	0x03C4DE78 STR D0, [X31 + 0x8]
	0x03C4DE7C STP W9, W31, [X31 + 0x10]
	0x03C4DE80 STR X10, [X31 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x799000
	007 Move X3, [X22+3712]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51630080
	014 Add X0, X0, 1842
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3712], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetGlobalInteger(System.Int32 nameID, System.Int32 value)

Disassembly:
	0x03C4DE84 STP W20, W31, [X31 + 0x28]
	0x03C4DE88 CBNZ X8, 0x3C4DEA0
	0x03C4DE8C ADRP X0, 0xFFFFFFFFFCECB000
	0x03C4DE90 ADD X0, X0, 0xD40
	0x03C4DE94 BL 0x1C16CB8
	0x03C4DE98 MOV X8, X0
	0x03C4DE9C STR X0, [X21 + 0xFC0]
	0x03C4DEA0 ADD X1, X31, 0x8
	0x03C4DEA4 MOV X0, X19
	0x03C4DEA8 MOV W2, W31
	0x03C4DEAC MOV W3, W31
	0x03C4DEB0 MOV W4, W31
	0x03C4DEB4 MOV W5, W31
	0x03C4DEB8 BLR X8
	0x03C4DEBC LDP X20, X19, [X31 + 0x60]
	0x03C4DEC0 LDP X22, X21, [X31 + 0x50]
	0x03C4DEC4 LDP X24, X23, [X31 + 0x40]
	0x03C4DEC8 LDR X30, [X31 + 0x30]
	0x03C4DECC ADD X31, X31, 0x70
	0x03C4DED0 RET
	0x03C4DED4 STR W20, [X31 + 0x3C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x799000
	007 Move X3, [X22+3720]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51560448
	014 Add X0, X0, 3428
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3720], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetGlobalVector(System.Int32 nameID, UnityEngine.Vector4 value)

Disassembly:
	0x03C4DED8 ADRP X0, 0x4A6000
	0x03C4DEDC LDR X0, [X0 + 0x758]
	0x03C4DEE0 BL 0x1C16D08
	0x03C4DEE4 ADD X1, X31, 0x3C
	0x03C4DEE8 BL 0x1C16E04
	0x03C4DEEC MOV X19, X0
	0x03C4DEF0 ADRP X0, 0x512000
	0x03C4DEF4 LDR X0, [X0 + 0xC48]
	0x03C4DEF8 B 0x3C4DF20
	0x03C4DEFC STR W22, [X31 + 0x3C]
	0x03C4DF00 ADRP X0, 0x4A6000
	0x03C4DF04 LDR X0, [X0 + 0x758]
	0x03C4DF08 BL 0x1C16D08
	0x03C4DF0C ADD X1, X31, 0x3C
	0x03C4DF10 BL 0x1C16E04
	0x03C4DF14 MOV X19, X0
	0x03C4DF18 ADRP X0, 0x512000
	0x03C4DF1C LDR X0, [X0 + 0xC38]
	0x03C4DF20 BL 0x1C16D08
	0x03C4DF24 MOV X1, X19
	0x03C4DF28 MOV X2, X31
	0x03C4DF2C BL 0x321EFD0
	0x03C4DF30 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x799000
	007 Move X8, [X21+3992]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31], S0
	011 Move [X31+8], S1
	012 Move [X31+8], S2
	013 Move [X31+16], S3
	014 Compare X8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, -51564544
	017 Add X0, X0, 343
	018 Call 0x1C17CB8
	019 Move X8, X0
	020 Move [X21+3992], X0
	021 Add X2, X31, 0
	022 Move X0, X20
	023 Move W1, W19
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return 

Method: System.Void SetGlobalColor(System.Int32 nameID, UnityEngine.Color value)

Disassembly:
	0x03C4DF88 MOV W20, W5
	0x03C4DF8C MOV W21, W4
	0x03C4DF90 MOV W22, W3
	0x03C4DF94 MOV X23, X2
	0x03C4DF98 MOV X24, X1
	0x03C4DF9C MOV X19, X0
	0x03C4DFA0 CBNZ X8, 0x3C4DFB8
	0x03C4DFA4 ADRP X0, 0xFFFFFFFFFCED3000
	0x03C4DFA8 ADD X0, X0, 0xDB5
	0x03C4DFAC BL 0x1C16CB8
	0x03C4DFB0 MOV X8, X0
	0x03C4DFB4 STR X0, [X25 + 0xEB0]
	0x03C4DFB8 MOVZ W2, 0x2
	0x03C4DFBC MOV X0, X19
	0x03C4DFC0 MOV W1, W31
	0x03C4DFC4 BLR X8
	0x03C4DFC8 ADDS W31, W20, 0x2
	0x03C4DFCC B.LE 0x3C4E060
	0x03C4DFD0 TBNZ X22, 0x1F, 0x3C4E088
	0x03C4DFD4 LDR V0, [X24]
	0x03C4DFD8 LDR W9, [X24 + 0x8]
	0x03C4DFDC LDR X10, [X24 + 0x10]
	0x03C4DFE0 LDP V1, V2, [X23]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x799000
	007 Move X8, [X21+4000]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31], S0
	011 Move [X31+8], S1
	012 Move [X31+8], S2
	013 Move [X31+16], S3
	014 Compare X8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, -51662848
	017 Add X0, X0, 1419
	018 Call 0x1C17CB8
	019 Move X8, X0
	020 Move [X21+4000], X0
	021 Add X2, X31, 0
	022 Move X0, X20
	023 Move W1, W19
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return 

Method: System.Void SetGlobalMatrix(System.Int32 nameID, UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C4E038 MOV W5, W31
	0x03C4E03C MOV W6, W31
	0x03C4E040 MOV W7, W31
	0x03C4E044 BLR X8
	0x03C4E048 LDP X20, X19, [X31 + 0x90]
	0x03C4E04C LDP X22, X21, [X31 + 0x80]
	0x03C4E050 LDP X24, X23, [X31 + 0x70]
	0x03C4E054 LDP X30, X25, [X31 + 0x60]
	0x03C4E058 ADD X31, X31, 0xA0
	0x03C4E05C RET
	0x03C4E060 STR W20, [X31 + 0x5C]
	0x03C4E064 ADRP X0, 0x4A5000
	0x03C4E068 LDR X0, [X0 + 0x758]
	0x03C4E06C BL 0x1C16D08
	0x03C4E070 ADD X1, X31, 0x5C
	0x03C4E074 BL 0x1C16E04
	0x03C4E078 MOV X19, X0
	0x03C4E07C ADRP X0, 0x511000
	0x03C4E080 LDR X0, [X0 + 0xC48]
	0x03C4E084 B 0x3C4E0AC
	0x03C4E088 STR W22, [X31 + 0x5C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x798000
	007 Move X3, [X22+4008]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51613696
	014 Add X0, X0, 3317
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+4008], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void EnableShaderKeyword(System.String keyword)

Disassembly:
	0x03C4E0E0 ADRP X0, 0x511000
	0x03C4E0E4 LDR X0, [X0 + 0xC58]
	0x03C4E0E8 BL 0x1C16D08
	0x03C4E0EC MOV X1, X0
	0x03C4E0F0 MOV X0, X20
	0x03C4E0F4 BL 0x1C16DEC
	0x03C4E0F8 STP X30, X27, [X31 - 0x50]!
	0x03C4E0FC STP X26, X25, [X31 + 0x10]
	0x03C4E100 STP X24, X23, [X31 + 0x20]
	0x03C4E104 STP X22, X21, [X31 + 0x30]
	0x03C4E108 STP X20, X19, [X31 + 0x40]
	0x03C4E10C ADRP X27, 0x797000
	0x03C4E110 LDR X8, [X27 + 0xFC8]
	0x03C4E114 MOV W19, W7
	0x03C4E118 MOV W20, W6
	0x03C4E11C MOV W21, W5
	0x03C4E120 MOV W22, W4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3728]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51650560
	012 Add X0, X0, 1822
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3728], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void DisableShaderKeyword(System.String keyword)

Disassembly:
	0x03C4E124 MOV W23, W3
	0x03C4E128 MOV X24, X2
	0x03C4E12C MOV X25, X1
	0x03C4E130 MOV X26, X0
	0x03C4E134 CBNZ X8, 0x3C4E14C
	0x03C4E138 ADRP X0, 0xFFFFFFFFFCEBF000
	0x03C4E13C ADD X0, X0, 0x240
	0x03C4E140 BL 0x1C16CB8
	0x03C4E144 MOV X8, X0
	0x03C4E148 STR X0, [X27 + 0xFC8]
	0x03C4E14C MOV X0, X26
	0x03C4E150 MOV X1, X25
	0x03C4E154 MOV X2, X24
	0x03C4E158 MOV W3, W23
	0x03C4E15C MOV W4, W22
	0x03C4E160 MOV W5, W21
	0x03C4E164 MOV W6, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3736]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51576832
	012 Add X0, X0, 945
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3736], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetMaterialKeyword(UnityEngine.Material material, UnityEngine.Rendering.LocalKeyword keyword, System.Boolean value)

Disassembly:
	0x03C4E168 MOV W7, W19
	0x03C4E16C LDP X20, X19, [X31 + 0x40]
	0x03C4E170 LDP X22, X21, [X31 + 0x30]
	0x03C4E174 LDP X24, X23, [X31 + 0x20]
	0x03C4E178 LDP X26, X25, [X31 + 0x10]
	0x03C4E17C LDP X30, X27, [X31], #0x50
	0x03C4E180 BR X8
	0x03C4E184 SUB X31, X31, 0xB0
	0x03C4E188 STR X30, [X31 + 0x60]
	0x03C4E18C STP X26, X25, [X31 + 0x70]
	0x03C4E190 STP X24, X23, [X31 + 0x80]
	0x03C4E194 STP X22, X21, [X31 + 0x90]
	0x03C4E198 STP X20, X19, [X31 + 0xA0]
	0x03C4E19C ADRP X26, 0x797000
	0x03C4E1A0 LDR X8, [X26 + 0xEB0]
	0x03C4E1A4 MOV W19, W6
	0x03C4E1A8 MOV W20, W5
	0x03C4E1AC MOV X24, X4
	0x03C4E1B0 MOV W21, W3
	0x03C4E1B4 MOV W22, W2
	0x03C4E1B8 MOV X25, X1
	0x03C4E1BC MOV X23, X0
	0x03C4E1C0 CBNZ X8, 0x3C4E1D8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x798000
	008 Move X4, [X23+4016]
	009 Move W21, W3
	010 Move X19, X2
	011 Move X20, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51732480
	016 Add X0, X0, 1547
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+4016], X0
	020 And W3, W21, 1
	021 Move X0, X22
	022 Move X1, X20
	023 Move X2, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetKeyword(UnityEngine.Material material, in UnityEngine.Rendering.LocalKeyword keyword, System.Boolean value)

Disassembly:
	0x03C4E220 CBNZ X8, 0x3C4E238
	0x03C4E224 ADRP X0, 0xFFFFFFFFFCEBF000
	0x03C4E228 ADD X0, X0, 0x240
	0x03C4E22C BL 0x1C16CB8
	0x03C4E230 MOV X8, X0
	0x03C4E234 STR X0, [X25 + 0xFC8]
	0x03C4E238 ADD X1, X31, 0x30
	0x03C4E23C ADD X2, X31, 0x0
	0x03C4E240 MOV X0, X23
	0x03C4E244 MOV W3, W22
	0x03C4E248 MOV W4, W21
	0x03C4E24C MOV W5, W20
	0x03C4E250 MOV W6, W19
	0x03C4E254 MOV W7, W31
	0x03C4E258 BLR X8
	0x03C4E25C LDP X20, X19, [X31 + 0xA0]
	0x03C4E260 LDP X22, X21, [X31 + 0x90]
	0x03C4E264 LDP X24, X23, [X31 + 0x80]
	0x03C4E268 LDP X26, X25, [X31 + 0x70]
	0x03C4E26C LDR X30, [X31 + 0x60]
	0x03C4E270 ADD X31, X31, 0xB0
	0x03C4E274 RET
	0x03C4E278 ADRP X0, 0x4AD000
	0x03C4E27C LDR X0, [X0 + 0x578]
	0x03C4E280 BL 0x1C16D08
	0x03C4E284 BL 0x1C16F10
	0x03C4E288 MOV X19, X0
	0x03C4E28C ADRP X0, 0x511000
	0x03C4E290 LDR X0, [X0 + 0xC20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x798000
	008 Move V0, [X2]
	009 Move X9, [X2+16]
	010 Move X8, [X22+4016]
	011 Move W21, W3
	012 Move X19, X1
	013 Move X20, X0
	014 Move [X31+16], X9
	015 Move [X31], V0
	016 Compare X8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, -51732480
	019 Add X0, X0, 1547
	020 Call 0x1C17CB8
	021 Move X8, X0
	022 Move [X22+4016], X0
	023 And W3, W21, 1
	024 Add X2, X31, 0
	025 Move X0, X20
	026 Move X1, X19
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X20, [X31+64]
	029 Move X19, [X31+72]
	030 Move X22, [X31+48]
	031 Move X21, [X31+56]
	032 Move X30, [X31+32]
	033 Add X31, X31, 80
	034 Return 

Method: System.Void SetViewProjectionMatrices(UnityEngine.Matrix4x4 view, UnityEngine.Matrix4x4 proj)

Disassembly:
	0x03C4E294 BL 0x1C16D08
	0x03C4E298 MOV X1, X0
	0x03C4E29C MOV X0, X19
	0x03C4E2A0 MOV X2, X31
	0x03C4E2A4 BL 0x3314A68
	0x03C4E2A8 ADRP X0, 0x511000
	0x03C4E2AC LDR X0, [X0 + 0xC60]
	0x03C4E2B0 BL 0x1C16D08
	0x03C4E2B4 MOV X1, X0
	0x03C4E2B8 MOV X0, X19
	0x03C4E2BC BL 0x1C16DEC
	0x03C4E2C0 SUB X31, X31, 0x80
	0x03C4E2C4 STP X30, X25, [X31 + 0x40]
	0x03C4E2C8 STP X24, X23, [X31 + 0x50]
	0x03C4E2CC STP X22, X21, [X31 + 0x60]
	0x03C4E2D0 STP X20, X19, [X31 + 0x70]
	0x03C4E2D4 ADRP X25, 0x797000
	0x03C4E2D8 LDR X8, [X25 + 0xEB0]
	0x03C4E2DC MOV W23, W5
	0x03C4E2E0 MOV W21, W4
	0x03C4E2E4 MOV W19, W3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x798000
	007 Move X3, [X22+4024]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51724288
	014 Add X0, X0, 1815
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+4024], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetGlobalDepthBias(System.Single bias, System.Single slopeBias)

Disassembly:
	0x03C4E33C B.LT 0x3C4E3F0
	0x03C4E340 LDP V0, V1, [X24]
	0x03C4E344 LDR X9, [X24 + 0x20]
	0x03C4E348 ADRP X24, 0x797000
	0x03C4E34C LDR X8, [X24 + 0xFD0]
	0x03C4E350 STP V0, V1, [X31 + 0x10]
	0x03C4E354 STR X9, [X31 + 0x30]
	0x03C4E358 CBNZ X8, 0x3C4E370
	0x03C4E35C ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C4E360 ADD X0, X0, 0xCAB
	0x03C4E364 BL 0x1C16CB8
	0x03C4E368 MOV X8, X0
	0x03C4E36C STR X0, [X24 + 0xFD0]
	0x03C4E370 ADD X2, X31, 0x10
	0x03C4E374 MOV X0, X22
	0x03C4E378 MOV X1, X20
	0x03C4E37C MOV X3, X31
	0x03C4E380 MOV X4, X31
	0x03C4E384 MOV W5, W31
	0x03C4E388 MOV W6, W31
	0x03C4E38C MOV W7, W19

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x798000
	007 Move X1, [X20+3744]
	008 Move V8, V1
	009 Move V9, V0
	010 Move X19, X0
	011 Compare X1, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51724288
	014 Add X0, X0, 1581
	015 Call 0x1C17CB8
	016 Move X1, X0
	017 Move [X20+3744], X0
	018 Move X0, X19
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X30, [X31+16]
	022 Move V0, V9
	023 Move V1, V8
	024 Move D9, [X31+48]
	025 Move D8, [X31+56]
	026 CallNoReturn X1

Method: System.Void SetExecutionFlags(UnityEngine.Rendering.CommandBufferExecutionFlags flags)

Disassembly:
	0x03C4E390 STR W23, [X31 + 0x8]
	0x03C4E394 STR W21, [X31]
	0x03C4E398 BLR X8
	0x03C4E39C LDP X20, X19, [X31 + 0x70]
	0x03C4E3A0 LDP X22, X21, [X31 + 0x60]
	0x03C4E3A4 LDP X24, X23, [X31 + 0x50]
	0x03C4E3A8 LDP X30, X25, [X31 + 0x40]
	0x03C4E3AC ADD X31, X31, 0x80
	0x03C4E3B0 RET
	0x03C4E3B4 BL 0x1C16F20
	0x03C4E3B8 STR W8, [X31 + 0x3C]
	0x03C4E3BC ADRP X0, 0x4A5000
	0x03C4E3C0 LDR X0, [X0 + 0x758]
	0x03C4E3C4 BL 0x1C16D08
	0x03C4E3C8 ADD X1, X31, 0x3C
	0x03C4E3CC BL 0x1C16E04
	0x03C4E3D0 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3752]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51634176
	012 Add X0, X0, 1919
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3752], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean ValidateAgainstExecutionFlags(UnityEngine.Rendering.CommandBufferExecutionFlags requiredFlags, UnityEngine.Rendering.CommandBufferExecutionFlags invalidFlags)

Disassembly:
	0x03C4DD88 RET
	0x03C4DD8C STR W20, [X31 + 0x3C]
	0x03C4DD90 ADRP X0, 0x4A6000
	0x03C4DD94 LDR X0, [X0 + 0x758]
	0x03C4DD98 BL 0x1C16D08
	0x03C4DD9C ADD X1, X31, 0x3C
	0x03C4DDA0 BL 0x1C16E04
	0x03C4DDA4 MOV X19, X0
	0x03C4DDA8 ADRP X0, 0x512000
	0x03C4DDAC LDR X0, [X0 + 0xC38]
	0x03C4DDB0 BL 0x1C16D08
	0x03C4DDB4 MOV X1, X19
	0x03C4DDB8 MOV X2, X31
	0x03C4DDBC BL 0x321EFD0
	0x03C4DDC0 MOV X19, X0
	0x03C4DDC4 ADRP X0, 0x4AE000
	0x03C4DDC8 LDR X0, [X0 + 0x578]
	0x03C4DDCC BL 0x1C16D08
	0x03C4DDD0 BL 0x1C16F10
	0x03C4DDD4 MOV X1, X19
	0x03C4DDD8 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x799000
	007 Move X3, [X22+3760]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51560448
	014 Add X0, X0, 3509
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3760], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetGlobalFloatArray(System.Int32 nameID, System.Single[] values)

Disassembly:
	0x03C4E3D4 ADRP X0, 0x511000
	0x03C4E3D8 LDR X0, [X0 + 0xC68]
	0x03C4E3DC BL 0x1C16D08
	0x03C4E3E0 MOV X1, X19
	0x03C4E3E4 MOV X2, X31
	0x03C4E3E8 BL 0x321EFD0
	0x03C4E3EC B 0x3C4E458
	0x03C4E3F0 MOV X0, X20
	0x03C4E3F4 BL 0x19903C0
	0x03C4E3F8 LDR X8, [X20 + 0x18]
	0x03C4E3FC ADRP X19, 0x4A5000
	0x03C4E400 STR W8, [X31 + 0x3C]
	0x03C4E404 LDR X19, [X19 + 0x758]
	0x03C4E408 MOV X0, X19
	0x03C4E40C BL 0x1C16D08
	0x03C4E410 ADD X1, X31, 0x3C
	0x03C4E414 BL 0x1C16E04
	0x03C4E418 MOV X20, X0
	0x03C4E41C MOV X0, X31
	0x03C4E420 BL 0x3C3BDEC
	0x03C4E424 STR W0, [X31 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x798000
	007 Move X3, [X22+3768]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51535872
	014 Add X0, X0, 377
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3768], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetGlobalVectorArray(System.Int32 nameID, UnityEngine.Vector4[] values)

Disassembly:
	0x03C4E428 MOV X0, X19
	0x03C4E42C BL 0x1C16D08
	0x03C4E430 ADD X1, X31, 0x38
	0x03C4E434 BL 0x1C16E04
	0x03C4E438 MOV X19, X0
	0x03C4E43C ADRP X0, 0x511000
	0x03C4E440 LDR X0, [X0 + 0xC70]
	0x03C4E444 BL 0x1C16D08
	0x03C4E448 MOV X1, X20
	0x03C4E44C MOV X2, X19
	0x03C4E450 MOV X3, X31
	0x03C4E454 BL 0x3227BD4
	0x03C4E458 MOV X19, X0
	0x03C4E45C ADRP X0, 0x4AD000
	0x03C4E460 LDR X0, [X0 + 0x578]
	0x03C4E464 BL 0x1C16D08
	0x03C4E468 BL 0x1C16F10
	0x03C4E46C MOV X1, X19
	0x03C4E470 MOV X2, X31
	0x03C4E474 MOV X20, X0
	0x03C4E478 BL 0x3314A68

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x798000
	007 Move X3, [X22+3776]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51765248
	014 Add X0, X0, 635
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3776], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetGlobalMatrixArray(System.Int32 nameID, UnityEngine.Matrix4x4[] values)

Disassembly:
	0x03C4E47C ADRP X0, 0x511000
	0x03C4E480 LDR X0, [X0 + 0xC78]
	0x03C4E484 BL 0x1C16D08
	0x03C4E488 MOV X1, X0
	0x03C4E48C MOV X0, X20
	0x03C4E490 BL 0x1C16DEC
	0x03C4E494 STP X29, X30, [X31 - 0x60]!
	0x03C4E498 STP X28, X27, [X31 + 0x10]
	0x03C4E49C STP X26, X25, [X31 + 0x20]
	0x03C4E4A0 STP X24, X23, [X31 + 0x30]
	0x03C4E4A4 STP X22, X21, [X31 + 0x40]
	0x03C4E4A8 STP X20, X19, [X31 + 0x50]
	0x03C4E4AC ADRP X29, 0x797000
	0x03C4E4B0 LDR W27, [X31 + 0x68]
	0x03C4E4B4 LDR X8, [X29 + 0xFD0]
	0x03C4E4B8 LDR W28, [X31 + 0x60]
	0x03C4E4BC MOV W19, W7
	0x03C4E4C0 MOV W20, W6
	0x03C4E4C4 MOV W21, W5
	0x03C4E4C8 MOV X22, X4
	0x03C4E4CC MOV X23, X3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x798000
	007 Move X3, [X22+3784]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51597312
	014 Add X0, X0, 3161
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3784], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetLateLatchProjectionMatrices(UnityEngine.Matrix4x4[] projectionMat)

Disassembly:
	0x03C4E4D0 MOV X24, X2
	0x03C4E4D4 MOV X25, X1
	0x03C4E4D8 MOV X26, X0
	0x03C4E4DC CBNZ X8, 0x3C4E4F4
	0x03C4E4E0 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C4E4E4 ADD X0, X0, 0xCAB
	0x03C4E4E8 BL 0x1C16CB8
	0x03C4E4EC MOV X8, X0
	0x03C4E4F0 STR X0, [X29 + 0xFD0]
	0x03C4E4F4 STR W27, [X31 + 0x68]
	0x03C4E4F8 STR W28, [X31 + 0x60]
	0x03C4E4FC MOV X0, X26
	0x03C4E500 MOV X1, X25
	0x03C4E504 MOV X2, X24
	0x03C4E508 MOV X3, X23
	0x03C4E50C MOV X4, X22
	0x03C4E510 MOV W5, W21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3792]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51765248
	012 Add X0, X0, 729
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3792], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void MarkLateLatchMatrixShaderPropertyID(UnityEngine.Rendering.CameraLateLatchMatrixType matrixPropertyType, System.Int32 shaderPropertyID)

Disassembly:
	0x03C4E514 MOV W6, W20
	0x03C4E518 MOV W7, W19
	0x03C4E51C LDP X20, X19, [X31 + 0x50]
	0x03C4E520 LDP X22, X21, [X31 + 0x40]
	0x03C4E524 LDP X24, X23, [X31 + 0x30]
	0x03C4E528 LDP X26, X25, [X31 + 0x20]
	0x03C4E52C LDP X28, X27, [X31 + 0x10]
	0x03C4E530 LDP X29, X30, [X31], #0x60
	0x03C4E534 BR X8
	0x03C4E538 STP X30, X25, [X31 - 0x40]!
	0x03C4E53C STP X24, X23, [X31 + 0x10]
	0x03C4E540 STP X22, X21, [X31 + 0x20]
	0x03C4E544 STP X20, X19, [X31 + 0x30]
	0x03C4E548 ADRP X25, 0x797000
	0x03C4E54C LDR X6, [X25 + 0xFC0]
	0x03C4E550 MOV W19, W5
	0x03C4E554 MOV W20, W4
	0x03C4E558 MOV W21, W3
	0x03C4E55C MOV W22, W2
	0x03C4E560 MOV X23, X1
	0x03C4E564 MOV X24, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x798000
	007 Move X3, [X22+3800]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51757056
	014 Add X0, X0, 907
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3800], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void UnmarkLateLatchMatrix(UnityEngine.Rendering.CameraLateLatchMatrixType matrixPropertyType)

Disassembly:
	0x03C4E568 CBNZ X6, 0x3C4E580
	0x03C4E56C ADRP X0, 0xFFFFFFFFFCECA000
	0x03C4E570 ADD X0, X0, 0xD40
	0x03C4E574 BL 0x1C16CB8
	0x03C4E578 MOV X6, X0
	0x03C4E57C STR X0, [X25 + 0xFC0]
	0x03C4E580 MOV X0, X24
	0x03C4E584 MOV X1, X23
	0x03C4E588 MOV W2, W22
	0x03C4E58C MOV W3, W21
	0x03C4E590 MOV W4, W20
	0x03C4E594 MOV W5, W19
	0x03C4E598 LDP X20, X19, [X31 + 0x30]
	0x03C4E59C LDP X22, X21, [X31 + 0x20]
	0x03C4E5A0 LDP X24, X23, [X31 + 0x10]
	0x03C4E5A4 LDP X30, X25, [X31], #0x40
	0x03C4E5A8 BR X6

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3808]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51515392
	012 Add X0, X0, 2838
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3808], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetGlobalTexture_Impl(System.Int32 nameID, ref UnityEngine.Rendering.RenderTargetIdentifier rt, UnityEngine.Rendering.RenderTextureSubElement element)

Disassembly:
	0x03C4E5AC STP X30, X27, [X31 - 0x50]!
	0x03C4E5B0 STP X26, X25, [X31 + 0x10]
	0x03C4E5B4 STP X24, X23, [X31 + 0x20]
	0x03C4E5B8 STP X22, X21, [X31 + 0x30]
	0x03C4E5BC STP X20, X19, [X31 + 0x40]
	0x03C4E5C0 ADRP X27, 0x797000
	0x03C4E5C4 LDR X8, [X27 + 0xFC8]
	0x03C4E5C8 MOV W19, W7
	0x03C4E5CC MOV W20, W6
	0x03C4E5D0 MOV W21, W5
	0x03C4E5D4 MOV W22, W4
	0x03C4E5D8 MOV W23, W3
	0x03C4E5DC MOV X24, X2
	0x03C4E5E0 MOV X25, X1
	0x03C4E5E4 MOV X26, X0
	0x03C4E5E8 CBNZ X8, 0x3C4E600
	0x03C4E5EC ADRP X0, 0xFFFFFFFFFCEBF000
	0x03C4E5F0 ADD X0, X0, 0x240
	0x03C4E5F4 BL 0x1C16CB8
	0x03C4E5F8 MOV X8, X0
	0x03C4E5FC STR X0, [X27 + 0xFC8]
	0x03C4E600 MOV X0, X26
	0x03C4E604 MOV X1, X25

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x798000
	008 Move X4, [X23+3816]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51564544
	016 Add X0, X0, 3677
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3816], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetGlobalBufferInternal(System.Int32 nameID, UnityEngine.ComputeBuffer value)

Disassembly:
	0x03C4E608 MOV X2, X24
	0x03C4E60C MOV W3, W23
	0x03C4E610 MOV W4, W22
	0x03C4E614 MOV W5, W21
	0x03C4E618 MOV W6, W20
	0x03C4E61C MOV W7, W19
	0x03C4E620 LDP X20, X19, [X31 + 0x40]
	0x03C4E624 LDP X22, X21, [X31 + 0x30]
	0x03C4E628 LDP X24, X23, [X31 + 0x20]
	0x03C4E62C LDP X26, X25, [X31 + 0x10]
	0x03C4E630 LDP X30, X27, [X31], #0x50
	0x03C4E634 BR X8
	0x03C4E638 STP X29, X30, [X31 - 0x60]!
	0x03C4E63C STP X28, X27, [X31 + 0x10]
	0x03C4E640 STP X26, X25, [X31 + 0x20]
	0x03C4E644 STP X24, X23, [X31 + 0x30]
	0x03C4E648 STP X22, X21, [X31 + 0x40]
	0x03C4E64C STP X20, X19, [X31 + 0x50]
	0x03C4E650 ADRP X29, 0x797000
	0x03C4E654 LDR W27, [X31 + 0x68]
	0x03C4E658 LDR X8, [X29 + 0xFD0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x798000
	007 Move X3, [X22+3824]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51572736
	014 Add X0, X0, 4081
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3824], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void BeginSample(System.String name)

Disassembly:
	0x03C4E65C LDR W28, [X31 + 0x60]
	0x03C4E660 MOV W19, W7
	0x03C4E664 MOV W20, W6
	0x03C4E668 MOV W21, W5
	0x03C4E66C MOV X22, X4
	0x03C4E670 MOV X23, X3
	0x03C4E674 MOV X24, X2
	0x03C4E678 MOV X25, X1
	0x03C4E67C MOV X26, X0
	0x03C4E680 CBNZ X8, 0x3C4E698
	0x03C4E684 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C4E688 ADD X0, X0, 0xCAB
	0x03C4E68C BL 0x1C16CB8
	0x03C4E690 MOV X8, X0
	0x03C4E694 STR X0, [X29 + 0xFD0]
	0x03C4E698 STR W27, [X31 + 0x68]
	0x03C4E69C STR W28, [X31 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3832]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51683328
	012 Add X0, X0, 841
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3832], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void EndSample(System.String name)

Disassembly:
	0x03C4E6A0 MOV X0, X26
	0x03C4E6A4 MOV X1, X25
	0x03C4E6A8 MOV X2, X24
	0x03C4E6AC MOV X3, X23
	0x03C4E6B0 MOV X4, X22
	0x03C4E6B4 MOV W5, W21
	0x03C4E6B8 MOV W6, W20
	0x03C4E6BC MOV W7, W19
	0x03C4E6C0 LDP X20, X19, [X31 + 0x50]
	0x03C4E6C4 LDP X22, X21, [X31 + 0x40]
	0x03C4E6C8 LDP X24, X23, [X31 + 0x30]
	0x03C4E6CC LDP X26, X25, [X31 + 0x20]
	0x03C4E6D0 LDP X28, X27, [X31 + 0x10]
	0x03C4E6D4 LDP X29, X30, [X31], #0x60
	0x03C4E6D8 BR X8
	0x03C4E6DC STR X30, [X31 - 0x40]!
	0x03C4E6E0 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3840]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51576832
	012 Add X0, X0, 1018
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3840], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void BeginSample(UnityEngine.Profiling.CustomSampler sampler)

Disassembly:
	0x03C4E6E4 STP X22, X21, [X31 + 0x20]
	0x03C4E6E8 STP X20, X19, [X31 + 0x30]
	0x03C4E6EC CBZ X2, 0x3C4E798
	0x03C4E6F0 MOV X20, X1
	0x03C4E6F4 MOV X21, X0
	0x03C4E6F8 MOV X0, X2
	0x03C4E6FC MOV X1, X31
	0x03C4E700 MOV X19, X2
	0x03C4E704 BL 0x3C0055C
	0x03C4E708 TBZ X0, 0x0, 0x3C4E7E0
	0x03C4E70C MOV X0, X19
	0x03C4E710 MOV X1, X31
	0x03C4E714 BL 0x3395B7C
	0x03C4E718 MOV W22, W0
	0x03C4E71C MOV X0, X19
	0x03C4E720 MOV X1, X31
	0x03C4E724 BL 0x33BE520

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3848]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51683328
	012 Add X0, X0, 905
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3848], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void EndSample(UnityEngine.Profiling.CustomSampler sampler)

Disassembly:
	0x03C4E76C MOV X1, X20
	0x03C4E770 MOV X2, X19
	0x03C4E774 MOV W5, W22
	0x03C4E778 MOV W6, W23
	0x03C4E77C LDP X20, X19, [X31 + 0x30]
	0x03C4E780 LDP X22, X21, [X31 + 0x20]
	0x03C4E784 LDP X24, X23, [X31 + 0x10]
	0x03C4E788 MOV W3, W31
	0x03C4E78C MOV W4, W31
	0x03C4E790 LDR X30, [X31], #0x40
	0x03C4E794 BR X7
	0x03C4E798 ADRP X0, 0x4AA000
	0x03C4E79C LDR X0, [X0 + 0x528]
	0x03C4E7A0 BL 0x1C16D08
	0x03C4E7A4 BL 0x1C16F10
	0x03C4E7A8 MOV X19, X0
	0x03C4E7AC ADRP X0, 0x4B1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3856]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51658752
	012 Add X0, X0, 1982
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3856], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void BeginSample_CustomSampler(UnityEngine.Profiling.CustomSampler sampler)

Disassembly:
	0x03C4E728 CBZ X0, 0x3C4E844
	0x03C4E72C LDR X8, [X0]
	0x03C4E730 LDR X9, [X8 + 0x428]
	0x03C4E734 LDR X1, [X8 + 0x430]
	0x03C4E738 BLR X9
	0x03C4E73C MOV X1, X31
	0x03C4E740 BL 0x3C00250
	0x03C4E744 ADRP X24, 0x797000
	0x03C4E748 LDR X7, [X24 + 0xF40]
	0x03C4E74C MOV W23, W0
	0x03C4E750 CBNZ X7, 0x3C4E768
	0x03C4E754 ADRP X0, 0xFFFFFFFFFCEB5000
	0x03C4E758 ADD X0, X0, 0x3ED
	0x03C4E75C BL 0x1C16CB8
	0x03C4E760 MOV X7, X0
	0x03C4E764 STR X0, [X24 + 0xF40]
	0x03C4E768 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3848]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51683328
	012 Add X0, X0, 905
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3848], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void EndSample_CustomSampler(UnityEngine.Profiling.CustomSampler sampler)

Disassembly:
	0x03C4E7B0 LDR X0, [X0 + 0x690]
	0x03C4E7B4 BL 0x1C16D08
	0x03C4E7B8 MOV X1, X0
	0x03C4E7BC MOV X0, X19
	0x03C4E7C0 MOV X2, X31
	0x03C4E7C4 BL 0x330E100
	0x03C4E7C8 ADRP X0, 0x511000
	0x03C4E7CC LDR X0, [X0 + 0xC80]
	0x03C4E7D0 BL 0x1C16D08
	0x03C4E7D4 MOV X1, X0
	0x03C4E7D8 MOV X0, X19
	0x03C4E7DC BL 0x1C16DEC
	0x03C4E7E0 MOV X0, X19
	0x03C4E7E4 MOV X1, X31
	0x03C4E7E8 BL 0x3C0058C
	0x03C4E7EC MOV X19, X0
	0x03C4E7F0 ADRP X0, 0x511000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3856]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51658752
	012 Add X0, X0, 1982
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3856], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetGlobalConstantBufferInternal(UnityEngine.ComputeBuffer buffer, System.Int32 nameID, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03C4E7F4 LDR X0, [X0 + 0xC88]
	0x03C4E7F8 BL 0x1C16D08
	0x03C4E7FC MOV X1, X19
	0x03C4E800 MOV X2, X31
	0x03C4E804 BL 0x321EFD0
	0x03C4E808 MOV X19, X0
	0x03C4E80C ADRP X0, 0x4AD000
	0x03C4E810 LDR X0, [X0 + 0x578]
	0x03C4E814 BL 0x1C16D08
	0x03C4E818 BL 0x1C16F10
	0x03C4E81C MOV X1, X19
	0x03C4E820 MOV X2, X31
	0x03C4E824 MOV X20, X0
	0x03C4E828 BL 0x3314A68
	0x03C4E82C ADRP X0, 0x511000
	0x03C4E830 LDR X0, [X0 + 0xC80]
	0x03C4E834 BL 0x1C16D08
	0x03C4E838 MOV X1, X0
	0x03C4E83C MOV X0, X20
	0x03C4E840 BL 0x1C16DEC
	0x03C4E844 BL 0x1C16F20
	0x03C4E848 STR X30, [X31 - 0x50]!
	0x03C4E84C STP X26, X25, [X31 + 0x10]
	0x03C4E850 STP X24, X23, [X31 + 0x20]
	0x03C4E854 STP X22, X21, [X31 + 0x30]
	0x03C4E858 STP X20, X19, [X31 + 0x40]
	0x03C4E85C ADRP X26, 0x797000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x798000
	009 Move X5, [X24+3864]
	010 Move W19, W4
	011 Move W20, W3
	012 Move W21, W2
	013 Move X22, X1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51597312
	018 Add X0, X0, 3257
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+3864], X0
	022 Move X0, X23
	023 Move X1, X22
	024 Move W2, W21
	025 Move W3, W20
	026 Move W4, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void SetGlobalConstantGraphicsBufferInternal(UnityEngine.GraphicsBuffer buffer, System.Int32 nameID, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03C4E860 LDR X7, [X26 + 0xF40]
	0x03C4E864 MOV W19, W6
	0x03C4E868 MOV W20, W5
	0x03C4E86C MOV W21, W4
	0x03C4E870 MOV W22, W3
	0x03C4E874 MOV X23, X2
	0x03C4E878 MOV X24, X1
	0x03C4E87C MOV X25, X0
	0x03C4E880 CBNZ X7, 0x3C4E898
	0x03C4E884 ADRP X0, 0xFFFFFFFFFCEB5000
	0x03C4E888 ADD X0, X0, 0x3ED
	0x03C4E88C BL 0x1C16CB8
	0x03C4E890 MOV X7, X0
	0x03C4E894 STR X0, [X26 + 0xF40]
	0x03C4E898 MOV X0, X25
	0x03C4E89C MOV X1, X24
	0x03C4E8A0 MOV X2, X23
	0x03C4E8A4 MOV W3, W22
	0x03C4E8A8 MOV W4, W21
	0x03C4E8AC MOV W5, W20
	0x03C4E8B0 MOV W6, W19
	0x03C4E8B4 LDP X20, X19, [X31 + 0x40]
	0x03C4E8B8 LDP X22, X21, [X31 + 0x30]
	0x03C4E8BC LDP X24, X23, [X31 + 0x20]
	0x03C4E8C0 LDP X26, X25, [X31 + 0x10]
	0x03C4E8C4 LDR X30, [X31], #0x50
	0x03C4E8C8 BR X7

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x798000
	009 Move X5, [X24+3872]
	010 Move W19, W4
	011 Move W20, W3
	012 Move W21, W2
	013 Move X22, X1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51564544
	018 Add X0, X0, 3842
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+3872], X0
	022 Move X0, X23
	023 Move X1, X22
	024 Move W2, W21
	025 Move W3, W20
	026 Move W4, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void SetInstanceMultiplier(System.UInt32 multiplier)

Disassembly:
	0x03C4E8CC STP X30, X21, [X31 - 0x20]!
	0x03C4E8D0 STP X20, X19, [X31 + 0x10]
	0x03C4E8D4 ADRP X20, 0x797000
	0x03C4E8D8 LDR X8, [X20 + 0xE08]
	0x03C4E8DC MOV X19, X0
	0x03C4E8E0 CBNZ X8, 0x3C4E8F8
	0x03C4E8E4 ADRP X0, 0xFFFFFFFFFCEDA000
	0x03C4E8E8 ADD X0, X0, 0xC30
	0x03C4E8EC BL 0x1C16CB8
	0x03C4E8F0 MOV X8, X0
	0x03C4E8F4 STR X0, [X20 + 0xE08]
	0x03C4E8F8 MOV X0, X19
	0x03C4E8FC BLR X8
	0x03C4E900 STR X31, [X19 + 0x10]
	0x03C4E904 MOV X0, X19
	0x03C4E908 LDP X20, X19, [X31 + 0x10]
	0x03C4E90C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3880]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51625984
	012 Add X0, X0, 846
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3880], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetFoveatedRenderingMode(UnityEngine.Rendering.FoveatedRenderingMode foveatedRenderingMode)

Disassembly:
	0x03C4E910 LDP X30, X21, [X31], #0x20
	0x03C4E914 B 0x33CB4DC
	0x03C4E918 CMP W1, 0x1
	0x03C4E91C MOV X21, X0
	0x03C4E920 B.NE 0x3C4E950
	0x03C4E924 MOV X0, X21
	0x03C4E928 BL 0x3EB1AD0
	0x03C4E92C LDR X20, [X0]
	0x03C4E930 BL 0x3EB1AE0
	0x03C4E934 MOV X0, X19
	0x03C4E938 MOV X1, X31
	0x03C4E93C BL 0x33CB4DC
	0x03C4E940 CBNZ X20, 0x3C4E958
	0x03C4E944 LDP X20, X19, [X31 + 0x10]
	0x03C4E948 LDP X30, X21, [X31], #0x20
	0x03C4E94C RET
	0x03C4E950 MOV X20, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3888]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51535872
	012 Add X0, X0, 464
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3888], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void ConfigureFoveatedRendering(System.IntPtr platformData)

Disassembly:
	0x03C4E954 B 0x3C4E964
	0x03C4E958 MOV X0, X20
	0x03C4E95C BL 0x1C16F18
	0x03C4E960 MOV X21, X0
	0x03C4E964 MOV X0, X19
	0x03C4E968 MOV X1, X31
	0x03C4E96C BL 0x33CB4DC
	0x03C4E970 CBNZ X20, 0x3C4E97C
	0x03C4E974 MOV X0, X21
	0x03C4E978 BL 0x1D2C690
	0x03C4E97C MOV X0, X20
	0x03C4E980 BL 0x1C16F18
	0x03C4E984 BL 0x1990590
	0x03C4E988 STR X30, [X31 - 0x20]!
	0x03C4E98C STP X20, X19, [X31 + 0x10]
	0x03C4E990 ADRP X20, 0x797000
	0x03C4E994 LDR X8, [X20 + 0xE08]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x798000
	006 Move X2, [X21+3896]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51666944
	012 Add X0, X0, 1340
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3896], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier rt)

Disassembly:
	0x03C4E998 MOV X19, X0
	0x03C4E99C CBNZ X8, 0x3C4E9B4
	0x03C4E9A0 ADRP X0, 0xFFFFFFFFFCEDA000
	0x03C4E9A4 ADD X0, X0, 0xC30
	0x03C4E9A8 BL 0x1C16CB8
	0x03C4E9AC MOV X8, X0
	0x03C4E9B0 STR X0, [X20 + 0xE08]
	0x03C4E9B4 MOV X0, X19
	0x03C4E9B8 BLR X8
	0x03C4E9BC STR X31, [X19 + 0x10]
	0x03C4E9C0 LDP X20, X19, [X31 + 0x10]
	0x03C4E9C4 LDR X30, [X31], #0x20
	0x03C4E9C8 RET
	0x03C4E9CC STP X30, X21, [X31 - 0x20]!
	0x03C4E9D0 STP X20, X19, [X31 + 0x10]
	0x03C4E9D4 ADRP X20, 0x797000
	0x03C4E9D8 LDRB W8, [X20 + 0xF48]
	0x03C4E9DC MOV X19, X0
	0x03C4E9E0 TBNZ X8, 0x0, 0x3C4E9F8
	0x03C4E9E4 ADRP X0, 0x4AC000
	0x03C4E9E8 LDR X0, [X0 + 0xC10]
	0x03C4E9EC BL 0x1C16CF4
	0x03C4E9F0 MOVZ W8, 0x1
	0x03C4E9F4 STRB W8, [X20 + 0xF48]
	0x03C4E9F8 ADRP X21, 0x797000
	0x03C4E9FC ADRP X20, 0x4AC000
	0x03C4EA00 LDR X8, [X21 + 0xE08]
	0x03C4EA04 LDR X20, [X20 + 0xC10]
	0x03C4EA08 CBNZ X8, 0x3C4EA20
	0x03C4EA0C ADRP X0, 0xFFFFFFFFFCEDA000
	0x03C4EA10 ADD X0, X0, 0xC30
	0x03C4EA14 BL 0x1C16CB8
	0x03C4EA18 MOV X8, X0
	0x03C4EA1C STR X0, [X21 + 0xE08]
	0x03C4EA20 MOV X0, X19
	0x03C4EA24 BLR X8
	0x03C4EA28 STR X31, [X19 + 0x10]
	0x03C4EA2C LDR X0, [X20]
	0x03C4EA30 LDR W8, [X0 + 0xE0]
	0x03C4EA34 CBNZ W8, 0x3C4EA3C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x798000
	007 Move X8, [X21+3760]
	008 Move X20, X1
	009 Move X19, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51564544
	013 Add X0, X0, 3509
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X21+3760], X0
	017 Move W2, 2
	018 Move X0, X19
	019 Move W1, W31
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X9, [X20+32]
	022 Move V1, [X20]
	023 Move V0, [X20+16]
	024 Move X20, 0x798000
	025 Move X8, [X20+4032]
	026 Move [X31+32], X9
	027 Move [X31], V1
	028 Move [X31+8], V0
	029 Compare X8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51597312
	032 Add X0, X0, 3392
	033 Call 0x1C17CB8
	034 Move X8, X0
	035 Move [X20+4032], X0
	036 Add X1, X31, 0
	037 Move X0, X19
	038 Move W2, W31
	039 Move W3, W31
	040 Move W4, W31
	041 Move W5, W31
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X31+64]
	044 Move X19, [X31+72]
	045 Move X30, [X31+48]
	046 Move X21, [X31+56]
	047 Add X31, X31, 80
	048 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier rt, UnityEngine.Rendering.RenderBufferLoadAction loadAction, UnityEngine.Rendering.RenderBufferStoreAction storeAction)

Disassembly:
	0x03C4EAAC STP X22, X21, [X31 + 0x20]
	0x03C4EAB0 STP X20, X19, [X31 + 0x30]
	0x03C4EAB4 ADRP X22, 0x797000
	0x03C4EAB8 LDR X8, [X22 + 0xDF8]
	0x03C4EABC MOV W19, W2
	0x03C4EAC0 MOV W20, W1
	0x03C4EAC4 MOV X21, X0
	0x03C4EAC8 STR W1, [X31 + 0xC]
	0x03C4EACC CBNZ X8, 0x3C4EAE4
	0x03C4EAD0 ADRP X0, 0xFFFFFFFFFCEA1000
	0x03C4EAD4 ADD X0, X0, 0x195
	0x03C4EAD8 BL 0x1C16CB8
	0x03C4EADC MOV X8, X0
	0x03C4EAE0 STR X0, [X22 + 0xDF8]
	0x03C4EAE4 MOV X0, X21
	0x03C4EAE8 MOV W1, W20
	0x03C4EAEC MOV W2, W19
	0x03C4EAF0 BLR X8
	0x03C4EAF4 STR X0, [X31]
	0x03C4EAF8 ADD X0, X31, 0x0
	0x03C4EAFC BL 0x3C4B74C
	0x03C4EB00 ADD X0, X31, 0x0
	0x03C4EB04 BL 0x3C4B8B4
	0x03C4EB08 LDP X0, X1, [X31]
	0x03C4EB0C LDP X20, X19, [X31 + 0x30]
	0x03C4EB10 LDP X22, X21, [X31 + 0x20]
	0x03C4EB14 LDR X30, [X31 + 0x10]
	0x03C4EB18 ADD X31, X31, 0x40
	0x03C4EB1C RET
	0x03C4EB20 MOVZ W3, 0x1
	0x03C4EB24 B 0x3C4EB38
	0x03C4EB28 CMP W3, 0x0
	0x03C4EB2C MOVZ W8, 0x1
	0x03C4EB30 CINC W3, W8, NE
	0x03C4EB34 B 0x3C4EB38
	0x03C4EB38 SUB X31, X31, 0x40
	0x03C4EB3C STP X2, X30, [X31 + 0x8]
	0x03C4EB40 STP X22, X21, [X31 + 0x20]
	0x03C4EB44 STP X20, X19, [X31 + 0x30]
	0x03C4EB48 UBFM X8, X2, 0x20, 0x3F
	0x03C4EB4C STR X1, [X31]
	0x03C4EB50 CBNZ X8, 0x3C4EBC8
	0x03C4EB54 MOV X21, X0
	0x03C4EB58 ADD X0, X31, 0x0
	0x03C4EB5C MOV W19, W3
	0x03C4EB60 MOV X20, X1
	0x03C4EB64 BL 0x3C4B8B4
	0x03C4EB68 ADD X0, X31, 0x0
	0x03C4EB6C BL 0x3C4B848
	0x03C4EB70 TBZ X0, 0x0, 0x3C4EBB4
	0x03C4EB74 ADRP X22, 0x797000
	0x03C4EB78 LDR X3, [X22 + 0xE00]
	0x03C4EB7C CBNZ X3, 0x3C4EB94
	0x03C4EB80 ADRP X0, 0xFFFFFFFFFCEDA000
	0x03C4EB84 ADD X0, X0, 0xBB4
	0x03C4EB88 BL 0x1C16CB8
	0x03C4EB8C MOV X3, X0
	0x03C4EB90 STR X0, [X22 + 0xE00]
	0x03C4EB94 MOV X0, X21
	0x03C4EB98 MOV X1, X20
	0x03C4EB9C MOV W2, W19
	0x03C4EBA0 LDP X20, X19, [X31 + 0x30]
	0x03C4EBA4 LDP X22, X21, [X31 + 0x20]
	0x03C4EBA8 LDR X30, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0x798000
	009 Move X8, [X23+3760]
	010 Move W19, W3
	011 Move W20, W2
	012 Move X22, X1
	013 Move X21, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, -51564544
	017 Add X0, X0, 3509
	018 Call 0x1C17CB8
	019 Move X8, X0
	020 Move [X23+3760], X0
	021 Move W2, 2
	022 Move X0, X21
	023 Move W1, W31
	024 NotImplemented "Instruction BLR not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move V0, [X22]
	027 Move V1, [X22+16]
	028 Move X9, [X22+32]
	029 Move X22, 0x798000
	030 Move X8, [X22+4032]
	031 Move [X31], V0
	032 Move [X31+8], V1
	033 Move [X31+32], X9
	034 Compare X8, 0
	035 JumpIfNotEqual {41}
	036 Move X0, -51597312
	037 Add X0, X0, 3392
	038 Call 0x1C17CB8
	039 Move X8, X0
	040 Move [X22+4032], X0
	041 Add X1, X31, 0
	042 Move X0, X21
	043 Move W2, W20
	044 Move W3, W19
	045 Move W4, W20
	046 Move W5, W19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X20, [X31+80]
	049 Move X19, [X31+88]
	050 Move X22, [X31+64]
	051 Move X21, [X31+72]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Add X31, X31, 96
	055 Return 
	056 Move X0, 0x4AE000
	057 Move X0, [X0+1400]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x512000
	062 Move X0, [X0+3104]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentException..ctor, X0, X1
	068 Move X0, 0x512000
	069 Move X0, [X0+3112]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC

Method: System.Void SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier rt, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction)

Disassembly:
	0x03C4EBAC ADD X31, X31, 0x40
	0x03C4EBB0 BR X3
	0x03C4EBB4 LDP X20, X19, [X31 + 0x30]
	0x03C4EBB8 LDP X22, X21, [X31 + 0x20]
	0x03C4EBBC LDR X30, [X31 + 0x10]
	0x03C4EBC0 ADD X31, X31, 0x40
	0x03C4EBC4 RET
	0x03C4EBC8 ADRP X0, 0x4AD000
	0x03C4EBCC LDR X0, [X0 + 0x578]
	0x03C4EBD0 BL 0x1C16D08
	0x03C4EBD4 BL 0x1C16F10
	0x03C4EBD8 MOV X19, X0
	0x03C4EBDC ADRP X0, 0x511000
	0x03C4EBE0 LDR X0, [X0 + 0xC90]
	0x03C4EBE4 BL 0x1C16D08
	0x03C4EBE8 MOV X1, X0
	0x03C4EBEC MOV X0, X19
	0x03C4EBF0 MOV X2, X31
	0x03C4EBF4 BL 0x3314A68
	0x03C4EBF8 ADRP X0, 0x511000
	0x03C4EBFC LDR X0, [X0 + 0xC98]
	0x03C4EC00 BL 0x1C16D08
	0x03C4EC04 MOV X1, X0
	0x03C4EC08 MOV X0, X19
	0x03C4EC0C BL 0x1C16DEC
	0x03C4EC10 STR X30, [X31 - 0x40]!
	0x03C4EC14 STP X24, X23, [X31 + 0x10]
	0x03C4EC18 STP X22, X21, [X31 + 0x20]
	0x03C4EC1C STP X20, X19, [X31 + 0x30]
	0x03C4EC20 MOV X21, X1
	0x03C4EC24 MOV X22, X0
	0x03C4EC28 MOV X0, X3
	0x03C4EC2C MOV X1, X31
	0x03C4EC30 MOV X19, X4
	0x03C4EC34 MOV W20, W2
	0x03C4EC38 BL 0x3C124EC
	0x03C4EC3C ADRP X24, 0x797000
	0x03C4EC40 LDR X7, [X24 + 0xE18]
	0x03C4EC44 MOV W23, W0
	0x03C4EC48 CBNZ X7, 0x3C4EC60
	0x03C4EC4C ADRP X0, 0xFFFFFFFFFCEC8000
	0x03C4EC50 ADD X0, X0, 0xDE9
	0x03C4EC54 BL 0x1C16CB8
	0x03C4EC58 MOV X7, X0
	0x03C4EC5C STR X0, [X24 + 0xE18]
	0x03C4EC60 MOV X0, X22
	0x03C4EC64 MOV X1, X21
	0x03C4EC68 MOV W2, W20
	0x03C4EC6C MOV W3, W23
	0x03C4EC70 MOV X4, X19
	0x03C4EC74 LDP X20, X19, [X31 + 0x30]
	0x03C4EC78 LDP X22, X21, [X31 + 0x20]
	0x03C4EC7C LDP X24, X23, [X31 + 0x10]
	0x03C4EC80 MOVZ W6, 0x3
	0x03C4EC84 MOV W5, W31
	0x03C4EC88 LDR X30, [X31], #0x40
	0x03C4EC8C BR X7
	0x03C4EC90 STR X30, [X31 - 0x40]!
	0x03C4EC94 STP X24, X23, [X31 + 0x10]
	0x03C4EC98 STP X22, X21, [X31 + 0x20]
	0x03C4EC9C STP X20, X19, [X31 + 0x30]
	0x03C4ECA0 ADRP X24, 0x797000
	0x03C4ECA4 LDR X7, [X24 + 0xE18]
	0x03C4ECA8 MOV X19, X4
	0x03C4ECAC MOV W20, W3
	0x03C4ECB0 MOV W21, W2
	0x03C4ECB4 MOV X22, X1
	0x03C4ECB8 MOV X23, X0
	0x03C4ECBC CBNZ X7, 0x3C4ECD4
	0x03C4ECC0 ADRP X0, 0xFFFFFFFFFCEC8000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X25, 0x798000
	011 Move X8, [X25+3760]
	012 Move W19, W5
	013 Move W20, W4
	014 Move W21, W3
	015 Move W22, W2
	016 Move X24, X1
	017 Move X23, X0
	018 Compare X8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51564544
	021 Add X0, X0, 3509
	022 Call 0x1C17CB8
	023 Move X8, X0
	024 Move [X25+3760], X0
	025 Move W2, 2
	026 Move X0, X23
	027 Move W1, W31
	028 NotImplemented "Instruction BLR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move V0, [X24]
	032 Move V1, [X24+16]
	033 Move X9, [X24+32]
	034 Move X24, 0x798000
	035 Move X8, [X24+4032]
	036 Move [X31], V0
	037 Move [X31+8], V1
	038 Move [X31+32], X9
	039 Compare X8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, -51597312
	042 Add X0, X0, 3392
	043 Call 0x1C17CB8
	044 Move X8, X0
	045 Move [X24+4032], X0
	046 Add X1, X31, 0
	047 Move X0, X23
	048 Move W2, W22
	049 Move W3, W21
	050 Move W4, W20
	051 Move W5, W19
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X20, [X31+96]
	054 Move X19, [X31+104]
	055 Move X22, [X31+80]
	056 Move X21, [X31+88]
	057 Move X24, [X31+64]
	058 Move X23, [X31+72]
	059 Move X30, [X31+48]
	060 Move X25, [X31+56]
	061 Add X31, X31, 112
	062 Return 
	063 Move X0, 0x4AE000
	064 Move X0, [X0+1400]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X19, X0
	068 Move X0, 0x512000
	069 Move X0, [X0+3104]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Move X2, X31
	074 Call ArgumentException..ctor, X0, X1
	075 Move X0, 0x512000
	076 Move X0, [X0+3120]
	077 Call 0x1C17D08
	078 Move X1, X0
	079 Move X0, X19
	080 Call 0x1C17DEC

Method: System.Void SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier rt, System.Int32 mipLevel)

Disassembly:
	0x03C4ECC4 ADD X0, X0, 0xDE9
	0x03C4ECC8 BL 0x1C16CB8
	0x03C4ECCC MOV X7, X0
	0x03C4ECD0 STR X0, [X24 + 0xE18]
	0x03C4ECD4 MOV X0, X23
	0x03C4ECD8 MOV X1, X22
	0x03C4ECDC MOV W2, W21
	0x03C4ECE0 MOV W3, W20
	0x03C4ECE4 MOV X4, X19
	0x03C4ECE8 LDP X20, X19, [X31 + 0x30]
	0x03C4ECEC LDP X22, X21, [X31 + 0x20]
	0x03C4ECF0 LDP X24, X23, [X31 + 0x10]
	0x03C4ECF4 MOVZ W6, 0x3
	0x03C4ECF8 MOV W5, W31
	0x03C4ECFC LDR X30, [X31], #0x40
	0x03C4ED00 BR X7
	0x03C4ED04 STP X30, X25, [X31 - 0x40]!
	0x03C4ED08 STP X24, X23, [X31 + 0x10]
	0x03C4ED0C STP X22, X21, [X31 + 0x20]
	0x03C4ED10 STP X20, X19, [X31 + 0x30]
	0x03C4ED14 ADRP X25, 0x797000
	0x03C4ED18 LDR X6, [X25 + 0xE20]
	0x03C4ED1C MOV W19, W5
	0x03C4ED20 MOV W20, W4
	0x03C4ED24 MOV X21, X3
	0x03C4ED28 MOV W22, W2
	0x03C4ED2C MOV X23, X1
	0x03C4ED30 MOV X24, X0
	0x03C4ED34 CBNZ X6, 0x3C4ED4C
	0x03C4ED38 ADRP X0, 0xFFFFFFFFFCED2000
	0x03C4ED3C ADD X0, X0, 0xCB5
	0x03C4ED40 BL 0x1C16CB8
	0x03C4ED44 MOV X6, X0
	0x03C4ED48 STR X0, [X25 + 0xE20]
	0x03C4ED4C MOV X0, X24
	0x03C4ED50 MOV X1, X23
	0x03C4ED54 MOV W2, W22
	0x03C4ED58 MOV X3, X21
	0x03C4ED5C MOV W4, W20
	0x03C4ED60 MOV W5, W19
	0x03C4ED64 LDP X20, X19, [X31 + 0x30]
	0x03C4ED68 LDP X22, X21, [X31 + 0x20]
	0x03C4ED6C LDP X24, X23, [X31 + 0x10]
	0x03C4ED70 LDP X30, X25, [X31], #0x40
	0x03C4ED74 BR X6
	0x03C4ED78 STP X30, X25, [X31 - 0x40]!
	0x03C4ED7C STP X24, X23, [X31 + 0x10]
	0x03C4ED80 STP X22, X21, [X31 + 0x20]
	0x03C4ED84 STP X20, X19, [X31 + 0x30]
	0x03C4ED88 ADRP X25, 0x797000
	0x03C4ED8C LDR X6, [X25 + 0xE28]
	0x03C4ED90 MOV W19, W5
	0x03C4ED94 MOV W20, W4
	0x03C4ED98 MOV W21, W3
	0x03C4ED9C MOV W22, W2
	0x03C4EDA0 MOV X23, X1
	0x03C4EDA4 MOV X24, X0
	0x03C4EDA8 CBNZ X6, 0x3C4EDC0
	0x03C4EDAC ADRP X0, 0xFFFFFFFFFCEAD000
	0x03C4EDB0 ADD X0, X0, 0x5B4
	0x03C4EDB4 BL 0x1C16CB8
	0x03C4EDB8 MOV X6, X0
	0x03C4EDBC STR X0, [X25 + 0xE28]
	0x03C4EDC0 MOV X0, X24
	0x03C4EDC4 MOV X1, X23
	0x03C4EDC8 MOV W2, W22
	0x03C4EDCC MOV W3, W21
	0x03C4EDD0 MOV W4, W20
	0x03C4EDD4 MOV W5, W19
	0x03C4EDD8 LDP X20, X19, [X31 + 0x30]
	0x03C4EDDC LDP X22, X21, [X31 + 0x20]
	0x03C4EDE0 LDP X24, X23, [X31 + 0x10]
	0x03C4EDE4 LDP X30, X25, [X31], #0x40
	0x03C4EDE8 BR X6
	0x03C4EDEC SUB X31, X31, 0xA0
	0x03C4EDF0 STR X30, [X31 + 0x40]
	0x03C4EDF4 STP X28, X27, [X31 + 0x50]
	0x03C4EDF8 STP X26, X25, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0x798000
	008 Move X8, [X22+3760]
	009 Move W20, W2
	010 Move X21, X1
	011 Move X19, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51564544
	015 Add X0, X0, 3509
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X22+3760], X0
	019 Move W2, 2
	020 Move X0, X19
	021 Move W1, W31
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move TEMP, X20
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {61}
	027 Move V0, [X21]
	028 Move W9, [X21+8]
	029 Move X10, [X21+16]
	030 Move [X31+32], W20
	031 Move X20, 0x798000
	032 Move X8, [X20+4032]
	033 NotImplemented "Instruction MOVI not yet implemented."
	034 Move [X31+8], D0
	035 Move [X31+16], W9
	036 Move [X31+20], W31
	037 Move [X31+24], X10
	038 Move [X31+36], D1
	039 Move [X31+44], W31
	040 Compare X8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, -51597312
	043 Add X0, X0, 3392
	044 Call 0x1C17CB8
	045 Move X8, X0
	046 Move [X20+4032], X0
	047 Add X1, X31, 8
	048 Move X0, X19
	049 Move W2, W31
	050 Move W3, W31
	051 Move W4, W31
	052 Move W5, W31
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Move X22, [X31+64]
	057 Move X21, [X31+72]
	058 Move X30, [X31+48]
	059 Add X31, X31, 96
	060 Return 
	061 Move [X31+60], W20
	062 Move X0, 0x4A6000
	063 Move X0, [X0+1880]
	064 Call 0x1C17D08
	065 Add X1, X31, 60
	066 Call 0x1C17E04
	067 Move X19, X0
	068 Move X0, 0x512000
	069 Move X0, [X0+3128]
	070 Call 0x1C17D08
	071 Move X1, X19
	072 Move X2, X31
	073 Call String.Format, X0, X1
	074 Move X19, X0
	075 Move X0, 0x4AE000
	076 Move X0, [X0+1400]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X1, X19
	080 Move X2, X31
	081 Move X20, X0
	082 Call ArgumentException..ctor, X0, X1
	083 Move X0, 0x512000
	084 Move X0, [X0+3136]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X20
	088 Call 0x1C17DEC

Method: System.Void SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier rt, System.Int32 mipLevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)

Disassembly:
	0x03C4EDFC STP X24, X23, [X31 + 0x70]
	0x03C4EE00 STP X22, X21, [X31 + 0x80]
	0x03C4EE04 STP X20, X19, [X31 + 0x90]
	0x03C4EE08 ADRP X26, 0x797000
	0x03C4EE0C ADRP X27, 0x4A5000
	0x03C4EE10 LDRB W8, [X26 + 0xF49]
	0x03C4EE14 LDR X27, [X27 + 0x598]
	0x03C4EE18 MOV X19, X6
	0x03C4EE1C MOV W20, W5
	0x03C4EE20 MOV W24, W4
	0x03C4EE24 MOV X21, X3
	0x03C4EE28 MOV X25, X2
	0x03C4EE2C MOV X22, X1
	0x03C4EE30 MOV X23, X0
	0x03C4EE34 TBNZ X8, 0x0, 0x3C4EE70
	0x03C4EE38 ADRP X0, 0x4A5000
	0x03C4EE3C LDR X0, [X0 + 0xA28]
	0x03C4EE40 BL 0x1C16CF4
	0x03C4EE44 ADRP X0, 0x4A5000
	0x03C4EE48 LDR X0, [X0 + 0x758]
	0x03C4EE4C BL 0x1C16CF4
	0x03C4EE50 ADRP X0, 0x4A5000
	0x03C4EE54 LDR X0, [X0 + 0x598]
	0x03C4EE58 BL 0x1C16CF4
	0x03C4EE5C ADRP X0, 0x511000
	0x03C4EE60 LDR X0, [X0 + 0xCA0]
	0x03C4EE64 BL 0x1C16CF4
	0x03C4EE68 MOVZ W8, 0x1
	0x03C4EE6C STRB W8, [X26 + 0xF49]
	0x03C4EE70 LDR X0, [X27]
	0x03C4EE74 LDR W8, [X0 + 0xE0]
	0x03C4EE78 CBNZ W8, 0x3C4EE80
	0x03C4EE7C BL 0x1C16DFC
	0x03C4EE80 MOV X0, X22
	0x03C4EE84 MOV X1, X31
	0x03C4EE88 MOV X2, X31
	0x03C4EE8C BL 0x3C3883C
	0x03C4EE90 TBNZ X0, 0x0, 0x3C4F004
	0x03C4EE94 ADRP X26, 0x797000
	0x03C4EE98 LDR X8, [X26 + 0xEB0]
	0x03C4EE9C CBNZ X8, 0x3C4EEB4
	0x03C4EEA0 ADRP X0, 0xFFFFFFFFFCED2000
	0x03C4EEA4 ADD X0, X0, 0xDB5
	0x03C4EEA8 BL 0x1C16CB8
	0x03C4EEAC MOV X8, X0
	0x03C4EEB0 STR X0, [X26 + 0xEB0]
	0x03C4EEB4 MOVZ W2, 0x2
	0x03C4EEB8 MOV X0, X23
	0x03C4EEBC MOV W1, W31
	0x03C4EEC0 BLR X8
	0x03C4EEC4 TBNZ X24, 0x1F, 0x3C4EEFC
	0x03C4EEC8 CBZ X22, 0x3C4F024
	0x03C4EECC MOV X0, X22
	0x03C4EED0 MOV X1, X31
	0x03C4EED4 BL 0x3C0F650
	0x03C4EED8 CMP W0, W24
	0x03C4EEDC B.GT 0x3C4EF70
	0x03C4EEE0 MOV X0, X22
	0x03C4EEE4 MOV X1, X31
	0x03C4EEE8 BL 0x3C0F650
	0x03C4EEEC SUB W8, W0, 0x1
	0x03C4EEF0 CMP W8, W24
	0x03C4EEF4 CSEL W24, W8, W24, LT
	0x03C4EEF8 B 0x3C4EF10
	0x03C4EEFC CBZ X22, 0x3C4F024
	0x03C4EF00 MOV X0, X22
	0x03C4EF04 MOV X1, X31
	0x03C4EF08 BL 0x3C0F650
	0x03C4EF0C MOV W24, W31
	0x03C4EF10 ADRP X8, 0x4A5000
	0x03C4EF14 LDR X8, [X8 + 0x758]
	0x03C4EF18 ADRP X26, 0x511000
	0x03C4EF1C ADRP X28, 0x4A5000
	0x03C4EF20 ADD X1, X31, 0x4C
	0x03C4EF24 LDR X0, [X8]
	0x03C4EF28 LDR X26, [X26 + 0xCA0]
	0x03C4EF2C LDR X28, [X28 + 0xA28]
	0x03C4EF30 STR W24, [X31 + 0x4C]
	0x03C4EF34 BL 0x1C16E04
	0x03C4EF38 LDR X8, [X26]
	0x03C4EF3C MOV X1, X0
	0x03C4EF40 MOV X2, X31
	0x03C4EF44 MOV X0, X8
	0x03C4EF48 BL 0x321EFD0
	0x03C4EF4C LDR X8, [X28]
	0x03C4EF50 MOV X26, X0
	0x03C4EF54 LDR W9, [X8 + 0xE0]
	0x03C4EF58 CBNZ W9, 0x3C4EF64
	0x03C4EF5C MOV X0, X8
	0x03C4EF60 BL 0x1C16DFC
	0x03C4EF64 MOV X0, X26
	0x03C4EF68 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X24, 0x798000
	010 Move X8, [X24+3760]
	011 Move W20, W4
	012 Move W21, W3
	013 Move W22, W2
	014 Move X23, X1
	015 Move X19, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, -51564544
	019 Add X0, X0, 3509
	020 Call 0x1C17CB8
	021 Move X8, X0
	022 Move [X24+3760], X0
	023 Move W2, 2
	024 Move X0, X19
	025 Move W1, W31
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Add W31, W20, 2
	028 Move TEMP, X22
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {77}
	032 Move V0, [X23]
	033 Move W9, [X23+8]
	034 Move X10, [X23+16]
	035 Move [X31+32], W22
	036 Move [X31+36], W21
	037 Move X21, 0x798000
	038 Move X8, [X21+4032]
	039 Move [X31+8], D0
	040 Move [X31+16], W9
	041 Move [X31+20], W31
	042 Move [X31+24], X10
	043 Move [X31+40], W20
	044 Move [X31+44], W31
	045 Compare X8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, -51597312
	048 Add X0, X0, 3392
	049 Call 0x1C17CB8
	050 Move X8, X0
	051 Move [X21+4032], X0
	052 Add X1, X31, 8
	053 Move X0, X19
	054 Move W2, W31
	055 Move W3, W31
	056 Move W4, W31
	057 Move W5, W31
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X20, [X31+96]
	060 Move X19, [X31+104]
	061 Move X22, [X31+80]
	062 Move X21, [X31+88]
	063 Move X24, [X31+64]
	064 Move X23, [X31+72]
	065 Move X30, [X31+48]
	066 Add X31, X31, 112
	067 Return 
	068 Move [X31+60], W20
	069 Move X0, 0x4A6000
	070 Move X0, [X0+1880]
	071 Call 0x1C17D08
	072 Add X1, X31, 60
	073 Call 0x1C17E04
	074 Move X19, X0
	075 Move X0, 0x512000
	076 Move X0, [X0+3144]
	077 Move [X31+60], W22
	078 Move X0, 0x4A6000
	079 Move X0, [X0+1880]
	080 Call 0x1C17D08
	081 Add X1, X31, 60
	082 Call 0x1C17E04
	083 Move X19, X0
	084 Move X0, 0x512000
	085 Move X0, [X0+3128]
	086 Call 0x1C17D08
	087 Move X1, X19
	088 Move X2, X31
	089 Call String.Format, X0, X1
	090 Move X19, X0
	091 Move X0, 0x4AE000
	092 Move X0, [X0+1400]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X1, X19
	096 Move X2, X31
	097 Move X20, X0
	098 Call ArgumentException..ctor, X0, X1
	099 Move X0, 0x512000
	100 Move X0, [X0+3152]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X20
	104 Call 0x1C17DEC

Method: System.Void SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier color, UnityEngine.Rendering.RenderTargetIdentifier depth, System.Int32 mipLevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)

Disassembly:
	0x03C4EF6C BL 0x3C06A04
	0x03C4EF70 LDR X0, [X27]
	0x03C4EF74 LDR W8, [X0 + 0xE0]
	0x03C4EF78 CBNZ W8, 0x3C4EF80
	0x03C4EF7C BL 0x1C16DFC
	0x03C4EF80 MOV X0, X21
	0x03C4EF84 MOV X1, X31
	0x03C4EF88 MOV X2, X31
	0x03C4EF8C BL 0x3C3883C
	0x03C4EF90 TBNZ X0, 0x0, 0x3C4F028
	0x03C4EF94 LDP V0, V1, [X25 + 0x20]
	0x03C4EF98 LDP V2, V3, [X25]
	0x03C4EF9C ADRP X25, 0x797000
	0x03C4EFA0 LDR X8, [X25 + 0xF58]
	0x03C4EFA4 STP V0, V1, [X31 + 0x20]
	0x03C4EFA8 STP V2, V3, [X31]
	0x03C4EFAC CBNZ X8, 0x3C4EFC4
	0x03C4EFB0 ADRP X0, 0xFFFFFFFFFCED7000
	0x03C4EFB4 ADD X0, X0, 0x2AF
	0x03C4EFB8 BL 0x1C16CB8
	0x03C4EFBC MOV X8, X0
	0x03C4EFC0 STR X0, [X25 + 0xF58]
	0x03C4EFC4 ADD X2, X31, 0x0
	0x03C4EFC8 MOV X0, X23
	0x03C4EFCC MOV X1, X22
	0x03C4EFD0 MOV X3, X21
	0x03C4EFD4 MOV W4, W24
	0x03C4EFD8 MOV W5, W20
	0x03C4EFDC MOV X6, X19
	0x03C4EFE0 BLR X8
	0x03C4EFE4 LDP X20, X19, [X31 + 0x90]
	0x03C4EFE8 LDP X22, X21, [X31 + 0x80]
	0x03C4EFEC LDP X24, X23, [X31 + 0x70]
	0x03C4EFF0 LDP X26, X25, [X31 + 0x60]
	0x03C4EFF4 LDP X28, X27, [X31 + 0x50]
	0x03C4EFF8 LDR X30, [X31 + 0x40]
	0x03C4EFFC ADD X31, X31, 0xA0
	0x03C4F000 RET
	0x03C4F004 ADRP X0, 0x4A9000
	0x03C4F008 LDR X0, [X0 + 0x528]
	0x03C4F00C BL 0x1C16D08
	0x03C4F010 BL 0x1C16F10
	0x03C4F014 MOV X19, X0
	0x03C4F018 ADRP X0, 0x4FE000
	0x03C4F01C LDR X0, [X0 + 0xE90]
	0x03C4F020 B 0x3C4F044
	0x03C4F024 BL 0x1C16F20
	0x03C4F028 ADRP X0, 0x4A9000
	0x03C4F02C LDR X0, [X0 + 0x528]
	0x03C4F030 BL 0x1C16D08
	0x03C4F034 BL 0x1C16F10
	0x03C4F038 MOV X19, X0
	0x03C4F03C ADRP X0, 0x50F000
	0x03C4F040 LDR X0, [X0 + 0xD38]
	0x03C4F044 BL 0x1C16D08
	0x03C4F048 MOV X1, X0
	0x03C4F04C MOV X0, X19
	0x03C4F050 MOV X2, X31
	0x03C4F054 BL 0x330E100
	0x03C4F058 ADRP X0, 0x510000
	0x03C4F05C LDR X0, [X0 + 0xCA8]
	0x03C4F060 BL 0x1C16D08
	0x03C4F064 MOV X1, X0
	0x03C4F068 MOV X0, X19
	0x03C4F06C BL 0x1C16DEC
	0x03C4F070 SUB X31, X31, 0x50
	0x03C4F074 STR X30, [X31 + 0x40]
	0x03C4F078 LDP V1, V0, [X2 + 0x20]
	0x03C4F07C LDP V3, V2, [X2]
	0x03C4F080 ADD X2, X31, 0x0
	0x03C4F084 MOV X6, X31
	0x03C4F088 STP V1, V0, [X31 + 0x20]
	0x03C4F08C STP V3, V2, [X31]
	0x03C4F090 BL 0x3C4EDEC
	0x03C4F094 LDR X30, [X31 + 0x40]
	0x03C4F098 ADD X31, X31, 0x50
	0x03C4F09C RET
	0x03C4F0A0 SUB X31, X31, 0x50
	0x03C4F0A4 STR X30, [X31 + 0x40]
	0x03C4F0A8 LDP V1, V0, [X2 + 0x20]
	0x03C4F0AC LDP V3, V2, [X2]
	0x03C4F0B0 ADD X2, X31, 0x0
	0x03C4F0B4 MOVN W5, 0x0
	0x03C4F0B8 MOV X6, X31
	0x03C4F0BC STP V1, V0, [X31 + 0x20]
	0x03C4F0C0 STP V3, V2, [X31]
	0x03C4F0C4 BL 0x3C4EDEC
	0x03C4F0C8 LDR X30, [X31 + 0x40]
	0x03C4F0CC ADD X31, X31, 0x50
	0x03C4F0D0 RET
	0x03C4F0D4 SUB X31, X31, 0x50
	0x03C4F0D8 STR X30, [X31 + 0x40]
	0x03C4F0DC LDP V1, V0, [X2 + 0x20]
	0x03C4F0E0 LDP V3, V2, [X2]
	0x03C4F0E4 ADD X2, X31, 0x0
	0x03C4F0E8 MOVN W5, 0x0
	0x03C4F0EC MOV W4, W31
	0x03C4F0F0 MOV X6, X31
	0x03C4F0F4 STP V1, V0, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X25, 0x798000
	011 Move X8, [X25+3760]
	012 Move W20, W5
	013 Move W21, W4
	014 Move W22, W3
	015 Move X23, X2
	016 Move X24, X1
	017 Move X19, X0
	018 Compare X8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51564544
	021 Add X0, X0, 3509
	022 Call 0x1C17CB8
	023 Move X8, X0
	024 Move [X25+3760], X0
	025 Move W2, 2
	026 Move X0, X19
	027 Move W1, W31
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Add W31, W20, 2
	030 Move TEMP, X22
	031 And TEMP, TEMP, -2147483648
	032 Compare TEMP, -2147483648
	033 JumpIfEqual {88}
	034 Move V0, [X24]
	035 Move W9, [X24+8]
	036 Move X10, [X24+16]
	037 Move V1, [X23]
	038 Move V2, [X23+16]
	039 Move X11, [X23+32]
	040 Move [X31+72], W22
	041 Move [X31+76], W21
	042 Move X21, 0x798000
	043 Move X8, [X21+4040]
	044 Move [X31+32], X11
	045 Move [X31], V1
	046 Move [X31+8], V2
	047 Move [X31+48], D0
	048 Move [X31+56], W9
	049 Move [X31+60], W31
	050 Move [X31+64], X10
	051 Move [X31+80], W20
	052 Move [X31+84], W31
	053 Compare X8, 0
	054 JumpIfNotEqual {60}
	055 Move X0, -51646464
	056 Add X0, X0, 576
	057 Call 0x1C17CB8
	058 Move X8, X0
	059 Move [X21+4040], X0
	060 Add X1, X31, 48
	061 Add X2, X31, 0
	062 Move X0, X19
	063 Move W3, W31
	064 Move W4, W31
	065 Move W5, W31
	066 Move W6, W31
	067 Move W7, W31
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X20, [X31+144]
	070 Move X19, [X31+152]
	071 Move X22, [X31+128]
	072 Move X21, [X31+136]
	073 Move X24, [X31+112]
	074 Move X23, [X31+120]
	075 Move X30, [X31+96]
	076 Move X25, [X31+104]
	077 Add X31, X31, 160
	078 Return 
	079 Move [X31+92], W20
	080 Move X0, 0x4A5000
	081 Move X0, [X0+1880]
	082 Call 0x1C17D08
	083 Add X1, X31, 92
	084 Call 0x1C17E04
	085 Move X19, X0
	086 Move X0, 0x511000
	087 Move X0, [X0+3144]
	088 Move [X31+92], W22
	089 Move X0, 0x4A5000
	090 Move X0, [X0+1880]
	091 Call 0x1C17D08
	092 Add X1, X31, 92
	093 Call 0x1C17E04
	094 Move X19, X0
	095 Move X0, 0x511000
	096 Move X0, [X0+3128]
	097 Call 0x1C17D08
	098 Move X1, X19
	099 Move X2, X31
	100 Call String.Format, X0, X1
	101 Move X19, X0
	102 Move X0, 0x4AD000
	103 Move X0, [X0+1400]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X1, X19
	107 Move X2, X31
	108 Move X20, X0
	109 Call ArgumentException..ctor, X0, X1
	110 Move X0, 0x511000
	111 Move X0, [X0+3160]
	112 Call 0x1C17D08
	113 Move X1, X0
	114 Move X0, X20
	115 Call 0x1C17DEC

Method: System.Void SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier color, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderTargetIdentifier depth, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction)

Disassembly:
	0x03C4F184 LDR W8, [X0 + 0xE0]
	0x03C4F188 CBNZ W8, 0x3C4F190
	0x03C4F18C BL 0x1C16DFC
	0x03C4F190 MOV X0, X21
	0x03C4F194 MOV X1, X31
	0x03C4F198 MOV X2, X31
	0x03C4F19C BL 0x3C3883C
	0x03C4F1A0 TBNZ X0, 0x0, 0x3C4F2B0
	0x03C4F1A4 ADRP X25, 0x796000
	0x03C4F1A8 LDR X8, [X25 + 0xEB0]
	0x03C4F1AC CBNZ X8, 0x3C4F1C4
	0x03C4F1B0 ADRP X0, 0xFFFFFFFFFCED1000
	0x03C4F1B4 ADD X0, X0, 0xDB5
	0x03C4F1B8 BL 0x1C16CB8
	0x03C4F1BC MOV X8, X0
	0x03C4F1C0 STR X0, [X25 + 0xEB0]
	0x03C4F1C4 MOVZ W2, 0x2
	0x03C4F1C8 MOV X0, X22
	0x03C4F1CC MOV W1, W31
	0x03C4F1D0 BLR X8
	0x03C4F1D4 TBZ X23, 0x1F, 0x3C4F23C
	0x03C4F1D8 ADRP X8, 0x4A4000
	0x03C4F1DC LDR X8, [X8 + 0x758]
	0x03C4F1E0 ADD X1, X31, 0xC
	0x03C4F1E4 STR W31, [X31 + 0xC]
	0x03C4F1E8 LDR X0, [X8]
	0x03C4F1EC BL 0x1C16E04
	0x03C4F1F0 ADRP X8, 0x510000
	0x03C4F1F4 LDR X8, [X8 + 0xCA0]
	0x03C4F1F8 MOV X1, X0
	0x03C4F1FC MOV X2, X31
	0x03C4F200 LDR X8, [X8]
	0x03C4F204 MOV X0, X8
	0x03C4F208 BL 0x321EFD0
	0x03C4F20C ADRP X8, 0x4A4000
	0x03C4F210 LDR X8, [X8 + 0xA28]
	0x03C4F214 MOV X23, X0
	0x03C4F218 LDR X8, [X8]
	0x03C4F21C LDR W9, [X8 + 0xE0]
	0x03C4F220 CBNZ W9, 0x3C4F22C
	0x03C4F224 MOV X0, X8
	0x03C4F228 BL 0x1C16DFC
	0x03C4F22C MOV X0, X23
	0x03C4F230 MOV X1, X31
	0x03C4F234 BL 0x3C06A04
	0x03C4F238 MOV W23, W31
	0x03C4F23C LDR X0, [X24]
	0x03C4F240 LDR W8, [X0 + 0xE0]
	0x03C4F244 CBNZ W8, 0x3C4F24C
	0x03C4F248 BL 0x1C16DFC
	0x03C4F24C MOV X0, X20
	0x03C4F250 MOV X1, X31
	0x03C4F254 MOV X2, X31
	0x03C4F258 BL 0x3C3883C
	0x03C4F25C TBNZ X0, 0x0, 0x3C4F2D0
	0x03C4F260 ADRP X24, 0x796000
	0x03C4F264 LDR X8, [X24 + 0xE40]
	0x03C4F268 CBNZ X8, 0x3C4F280
	0x03C4F26C ADRP X0, 0xFFFFFFFFFCEDB000
	0x03C4F270 ADD X0, X0, 0xC2B
	0x03C4F274 BL 0x1C16CB8
	0x03C4F278 MOV X8, X0
	0x03C4F27C STR X0, [X24 + 0xE40]
	0x03C4F280 MOV X0, X22
	0x03C4F284 MOV X1, X21
	0x03C4F288 MOV X2, X20
	0x03C4F28C MOV W3, W23
	0x03C4F290 MOV W4, W19
	0x03C4F294 BLR X8
	0x03C4F298 LDP X20, X19, [X31 + 0x40]
	0x03C4F29C LDP X22, X21, [X31 + 0x30]
	0x03C4F2A0 LDP X24, X23, [X31 + 0x20]
	0x03C4F2A4 LDP X30, X25, [X31 + 0x10]
	0x03C4F2A8 ADD X31, X31, 0x50
	0x03C4F2AC RET
	0x03C4F2B0 ADRP X0, 0x4A9000
	0x03C4F2B4 LDR X0, [X0 + 0x528]
	0x03C4F2B8 BL 0x1C16D08
	0x03C4F2BC BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+112], X26
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X26, 0x797000
	012 Move X8, [X26+3760]
	013 Move W19, W6
	014 Move W20, W5
	015 Move X24, X4
	016 Move W21, W3
	017 Move W22, W2
	018 Move X25, X1
	019 Move X23, X0
	020 Compare X8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51568640
	023 Add X0, X0, 3509
	024 Call 0x1C17CB8
	025 Move X8, X0
	026 Move [X26+3760], X0
	027 Move W2, 2
	028 Move X0, X23
	029 Move W1, W31
	030 NotImplemented "Instruction BLR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X25+32]
	034 Move V1, [X25]
	035 Move V0, [X25+16]
	036 Move X25, 0x797000
	037 Move [X31+80], X8
	038 Move [X31+48], V1
	039 Move [X31+56], V0
	040 Move X9, [X24+32]
	041 Move V0, [X24]
	042 Move V1, [X24+16]
	043 Move X8, [X25+4040]
	044 Move [X31+32], X9
	045 Move [X31], V0
	046 Move [X31+8], V1
	047 Compare X8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, -51646464
	050 Add X0, X0, 576
	051 Call 0x1C17CB8
	052 Move X8, X0
	053 Move [X25+4040], X0
	054 Add X1, X31, 48
	055 Add X2, X31, 0
	056 Move X0, X23
	057 Move W3, W22
	058 Move W4, W21
	059 Move W5, W20
	060 Move W6, W19
	061 Move W7, W31
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X20, [X31+160]
	064 Move X19, [X31+168]
	065 Move X22, [X31+144]
	066 Move X21, [X31+152]
	067 Move X24, [X31+128]
	068 Move X23, [X31+136]
	069 Move X26, [X31+112]
	070 Move X25, [X31+120]
	071 Move X30, [X31+96]
	072 Add X31, X31, 176
	073 Return 
	074 Move X0, 0x4AD000
	075 Move X0, [X0+1400]
	076 Call 0x1C17D08
	077 Call 0x1C17F10
	078 Move X19, X0
	079 Move X0, 0x511000
	080 Move X0, [X0+3104]
	081 Call 0x1C17D08
	082 Move X1, X0
	083 Move X0, X19
	084 Move X2, X31
	085 Call ArgumentException..ctor, X0, X1
	086 Move X0, 0x511000
	087 Move X0, [X0+3168]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X19
	091 Call 0x1C17DEC

Method: System.Void SetRenderTarget(UnityEngine.Rendering.RenderTargetIdentifier[] colors, UnityEngine.Rendering.RenderTargetIdentifier depth, System.Int32 mipLevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)

Disassembly:
	0x03C4F2C0 MOV X19, X0
	0x03C4F2C4 ADRP X0, 0x510000
	0x03C4F2C8 LDR X0, [X0 + 0xCB0]
	0x03C4F2CC B 0x3C4F2EC
	0x03C4F2D0 ADRP X0, 0x4A9000
	0x03C4F2D4 LDR X0, [X0 + 0x528]
	0x03C4F2D8 BL 0x1C16D08
	0x03C4F2DC BL 0x1C16F10
	0x03C4F2E0 MOV X19, X0
	0x03C4F2E4 ADRP X0, 0x50F000
	0x03C4F2E8 LDR X0, [X0 + 0xD38]
	0x03C4F2EC BL 0x1C16D08
	0x03C4F2F0 MOV X1, X0
	0x03C4F2F4 MOV X0, X19
	0x03C4F2F8 MOV X2, X31
	0x03C4F2FC BL 0x330E100
	0x03C4F300 ADRP X0, 0x510000
	0x03C4F304 LDR X0, [X0 + 0xCB8]
	0x03C4F308 BL 0x1C16D08
	0x03C4F30C MOV X1, X0
	0x03C4F310 MOV X0, X19
	0x03C4F314 BL 0x1C16DEC
	0x03C4F318 MOVN W4, 0x0
	0x03C4F31C B 0x3C4F10C
	0x03C4F320 MOVN W4, 0x0
	0x03C4F324 MOV W3, W31
	0x03C4F328 B 0x3C4F10C
	0x03C4F32C SUB X31, X31, 0x40
	0x03C4F330 STR X30, [X31 + 0x20]
	0x03C4F334 STP X20, X19, [X31 + 0x30]
	0x03C4F338 ADRP X20, 0x796000
	0x03C4F33C LDR V0, [X1]
	0x03C4F340 LDR X9, [X1 + 0x10]
	0x03C4F344 LDR X8, [X20 + 0xF60]
	0x03C4F348 MOV X19, X0
	0x03C4F34C STR V0, [X31]
	0x03C4F350 STR X9, [X31 + 0x10]
	0x03C4F354 CBNZ X8, 0x3C4F36C
	0x03C4F358 ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C4F35C ADD X0, X0, 0x628
	0x03C4F360 BL 0x1C16CB8
	0x03C4F364 MOV X8, X0
	0x03C4F368 STR X0, [X20 + 0xF60]
	0x03C4F36C ADD X1, X31, 0x0
	0x03C4F370 MOV X0, X19
	0x03C4F374 BLR X8
	0x03C4F378 LDP X20, X19, [X31 + 0x30]
	0x03C4F37C LDR X30, [X31 + 0x20]
	0x03C4F380 ADD X31, X31, 0x40
	0x03C4F384 RET
	0x03C4F388 SUB X31, X31, 0xA0
	0x03C4F38C STR X30, [X31 + 0x40]
	0x03C4F390 STP X28, X27, [X31 + 0x50]
	0x03C4F394 STP X26, X25, [X31 + 0x60]
	0x03C4F398 STP X24, X23, [X31 + 0x70]
	0x03C4F39C STP X22, X21, [X31 + 0x80]
	0x03C4F3A0 STP X20, X19, [X31 + 0x90]
	0x03C4F3A4 ADRP X27, 0x796000
	0x03C4F3A8 ADRP X28, 0x4A4000
	0x03C4F3AC LDRB W8, [X27 + 0xF4B]
	0x03C4F3B0 LDR X28, [X28 + 0x598]
	0x03C4F3B4 MOV X19, X7
	0x03C4F3B8 MOV W20, W6
	0x03C4F3BC MOV W21, W5
	0x03C4F3C0 MOV W22, W4
	0x03C4F3C4 MOV W23, W3
	0x03C4F3C8 MOV X24, X2
	0x03C4F3CC MOV X26, X1
	0x03C4F3D0 MOV X25, X0
	0x03C4F3D4 TBNZ X8, 0x0, 0x3C4F3EC
	0x03C4F3D8 ADRP X0, 0x4A4000
	0x03C4F3DC LDR X0, [X0 + 0x598]
	0x03C4F3E0 BL 0x1C16CF4
	0x03C4F3E4 MOVZ W8, 0x1
	0x03C4F3E8 STRB W8, [X27 + 0xF4B]
	0x03C4F3EC LDR X0, [X28]
	0x03C4F3F0 LDR W8, [X0 + 0xE0]
	0x03C4F3F4 CBNZ W8, 0x3C4F3FC
	0x03C4F3F8 BL 0x1C16DFC
	0x03C4F3FC MOV X0, X24
	0x03C4F400 MOV X1, X31
	0x03C4F404 MOV X2, X31
	0x03C4F408 BL 0x3C3883C
	0x03C4F40C TBNZ X0, 0x0, 0x3C4F4B4
	0x03C4F410 ADRP X27, 0x796000
	0x03C4F414 LDR X8, [X27 + 0xEB0]
	0x03C4F418 CBNZ X8, 0x3C4F430
	0x03C4F41C ADRP X0, 0xFFFFFFFFFCED1000
	0x03C4F420 ADD X0, X0, 0xDB5
	0x03C4F424 BL 0x1C16CB8
	0x03C4F428 MOV X8, X0
	0x03C4F42C STR X0, [X27 + 0xEB0]
	0x03C4F430 MOVZ W2, 0x2
	0x03C4F434 MOV X0, X25
	0x03C4F438 MOV W1, W31
	0x03C4F43C BLR X8
	0x03C4F440 LDP V0, V1, [X26 + 0x20]
	0x03C4F444 LDP V3, V2, [X26]
	0x03C4F448 ADRP X26, 0x796000
	0x03C4F44C LDR X8, [X26 + 0xF68]
	0x03C4F450 STP V0, V1, [X31 + 0x20]
	0x03C4F454 STP V3, V2, [X31]
	0x03C4F458 CBNZ X8, 0x3C4F470
	0x03C4F45C ADRP X0, 0xFFFFFFFFFCEA2000
	0x03C4F460 ADD X0, X0, 0x412
	0x03C4F464 BL 0x1C16CB8
	0x03C4F468 MOV X8, X0
	0x03C4F46C STR X0, [X26 + 0xF68]
	0x03C4F470 ADD X1, X31, 0x0
	0x03C4F474 MOV X0, X25
	0x03C4F478 MOV X2, X24
	0x03C4F47C MOV W3, W23
	0x03C4F480 MOV W4, W22
	0x03C4F484 MOV W5, W21
	0x03C4F488 MOV W6, W20
	0x03C4F48C MOV X7, X19
	0x03C4F490 BLR X8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X25, 0x797000
	011 Move X8, [X25+3760]
	012 Move W23, W5
	013 Move W21, W4
	014 Move W19, W3
	015 Move X24, X2
	016 Move X20, X1
	017 Move X22, X0
	018 Compare X8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51568640
	021 Add X0, X0, 3509
	022 Call 0x1C17CB8
	023 Move X8, X0
	024 Move [X25+3760], X0
	025 Move W2, 2
	026 Move X0, X22
	027 Move W1, W31
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X20, 0
	030 JumpIfEqual {73}
	031 Move W8, [X20+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X31
	034 Call SystemInfo.get_supportedRenderTargetCount
	035 Move W8, [X20+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move V0, [X24]
	038 Move V1, [X24+16]
	039 Move X9, [X24+32]
	040 Move X24, 0x797000
	041 Move X8, [X24+4048]
	042 Move [X31+16], V0
	043 Move [X31+24], V1
	044 Move [X31+48], X9
	045 Compare X8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, -51527680
	048 Add X0, X0, 3243
	049 Call 0x1C17CB8
	050 Move X8, X0
	051 Move [X24+4048], X0
	052 Add X2, X31, 16
	053 Move X0, X22
	054 Move X1, X20
	055 Move X3, X31
	056 Move X4, X31
	057 Move W5, W31
	058 Move W6, W31
	059 Move W7, W19
	060 Move [X31+8], W23
	061 Move [X31], W21
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X20, [X31+112]
	064 Move X19, [X31+120]
	065 Move X22, [X31+96]
	066 Move X21, [X31+104]
	067 Move X24, [X31+80]
	068 Move X23, [X31+88]
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Add X31, X31, 128
	072 Return 
	073 Call 0x1C17F20
	074 Move [X31+60], W8
	075 Move X0, 0x4A5000
	076 Move X0, [X0+1880]
	077 Call 0x1C17D08
	078 Add X1, X31, 60
	079 Call 0x1C17E04
	080 Move X19, X0
	081 Move X0, 0x511000
	082 Move X0, [X0+3176]
	083 Call 0x1C17D08
	084 Move X1, X19
	085 Move X2, X31
	086 Call String.Format, X0, X1
	087 Move X0, X20
	088 Call 0x19913C0
	089 Move X8, [X20+24]
	090 Move X19, 0x4A5000
	091 Move [X31+60], W8
	092 Move X19, [X19+1880]
	093 Move X0, X19
	094 Call 0x1C17D08
	095 Add X1, X31, 60
	096 Call 0x1C17E04
	097 Move X20, X0
	098 Move X0, X31
	099 Call SystemInfo.get_supportedRenderTargetCount
	100 Move [X31+56], W0
	101 Move X0, X19
	102 Call 0x1C17D08
	103 Add X1, X31, 56
	104 Call 0x1C17E04
	105 Move X19, X0
	106 Move X0, 0x511000
	107 Move X0, [X0+3184]
	108 Call 0x1C17D08
	109 Move X1, X20
	110 Move X2, X19
	111 Move X3, X31
	112 Call String.Format, X0, X1, X2
	113 Move X19, X0
	114 Move X0, 0x4AD000
	115 Move X0, [X0+1400]
	116 Call 0x1C17D08
	117 Call 0x1C17F10
	118 Move X1, X19
	119 Move X2, X31
	120 Move X20, X0
	121 Call ArgumentException..ctor, X0, X1
	122 Move X0, 0x511000
	123 Move X0, [X0+3192]
	124 Call 0x1C17D08
	125 Move X1, X0
	126 Move X0, X20
	127 Call 0x1C17DEC

Method: System.Void SetRenderTargetSingle_Internal(UnityEngine.Rendering.RenderTargetIdentifier rt, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction)

Disassembly:
	0x03C4EA38 BL 0x1C16DFC
	0x03C4EA3C MOV X0, X19
	0x03C4EA40 LDP X20, X19, [X31 + 0x10]
	0x03C4EA44 MOV X1, X31
	0x03C4EA48 LDP X30, X21, [X31], #0x20
	0x03C4EA4C B 0x33B3E9C
	0x03C4EA50 STR X30, [X31 - 0x20]!
	0x03C4EA54 STP X20, X19, [X31 + 0x10]
	0x03C4EA58 MOV X1, X31
	0x03C4EA5C MOV X19, X0
	0x03C4EA60 BL 0x33BDD8C
	0x03C4EA64 ADRP X20, 0x797000
	0x03C4EA68 LDR X8, [X20 + 0xDF0]
	0x03C4EA6C CBNZ X8, 0x3C4EA84
	0x03C4EA70 ADRP X0, 0xFFFFFFFFFCED2000
	0x03C4EA74 ADD X0, X0, 0xC83
	0x03C4EA78 BL 0x1C16CB8
	0x03C4EA7C MOV X8, X0
	0x03C4EA80 STR X0, [X20 + 0xDF0]
	0x03C4EA84 BLR X8
	0x03C4EA88 STR X0, [X19 + 0x10]
	0x03C4EA8C LDP X20, X19, [X31 + 0x10]
	0x03C4EA90 LDR X30, [X31], #0x20
	0x03C4EA94 RET
	0x03C4EA98 MOVZ W2, 0x2
	0x03C4EA9C MOV W1, W31
	0x03C4EAA0 B 0x3C4EAA4
	0x03C4EAA4 SUB X31, X31, 0x40
	0x03C4EAA8 STP X31, X30, [X31 + 0x8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x798000
	010 Move X6, [X25+4032]
	011 Move W19, W5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51597312
	020 Add X0, X0, 3392
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+4032], X0
	024 Move X0, X24
	025 Move X1, X23
	026 Move W2, W22
	027 Move W3, W21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void SetRenderTargetColorDepth_Internal(UnityEngine.Rendering.RenderTargetIdentifier color, UnityEngine.Rendering.RenderTargetIdentifier depth, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, UnityEngine.Rendering.RenderTargetFlags flags)

Disassembly:
	0x03C4F0F8 STP V3, V2, [X31]
	0x03C4F0FC BL 0x3C4EDEC
	0x03C4F100 LDR X30, [X31 + 0x40]
	0x03C4F104 ADD X31, X31, 0x50
	0x03C4F108 RET
	0x03C4F10C SUB X31, X31, 0x50
	0x03C4F110 STP X30, X25, [X31 + 0x10]
	0x03C4F114 STP X24, X23, [X31 + 0x20]
	0x03C4F118 STP X22, X21, [X31 + 0x30]
	0x03C4F11C STP X20, X19, [X31 + 0x40]
	0x03C4F120 ADRP X25, 0x796000
	0x03C4F124 ADRP X24, 0x4A4000
	0x03C4F128 LDRB W8, [X25 + 0xF4A]
	0x03C4F12C LDR X24, [X24 + 0x598]
	0x03C4F130 MOV W19, W4
	0x03C4F134 MOV W23, W3
	0x03C4F138 MOV X20, X2
	0x03C4F13C MOV X21, X1
	0x03C4F140 MOV X22, X0
	0x03C4F144 TBNZ X8, 0x0, 0x3C4F180
	0x03C4F148 ADRP X0, 0x4A4000
	0x03C4F14C LDR X0, [X0 + 0xA28]
	0x03C4F150 BL 0x1C16CF4
	0x03C4F154 ADRP X0, 0x4A4000
	0x03C4F158 LDR X0, [X0 + 0x758]
	0x03C4F15C BL 0x1C16CF4
	0x03C4F160 ADRP X0, 0x4A4000
	0x03C4F164 LDR X0, [X0 + 0x598]
	0x03C4F168 BL 0x1C16CF4
	0x03C4F16C ADRP X0, 0x510000
	0x03C4F170 LDR X0, [X0 + 0xCA0]
	0x03C4F174 BL 0x1C16CF4
	0x03C4F178 MOVZ W8, 0x1
	0x03C4F17C STRB W8, [X25 + 0xF4A]
	0x03C4F180 LDR X0, [X24]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x797000
	012 Move X8, [X27+4040]
	013 Move W19, W7
	014 Move W20, W6
	015 Move W21, W5
	016 Move W22, W4
	017 Move W23, W3
	018 Move X24, X2
	019 Move X25, X1
	020 Move X26, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51646464
	024 Add X0, X0, 576
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X27+4040], X0
	028 Move X0, X26
	029 Move X1, X25
	030 Move X2, X24
	031 Move W3, W23
	032 Move W4, W22
	033 Move W5, W21
	034 Move W6, W20
	035 Move W7, W19
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X24, [X31+32]
	041 Move X23, [X31+40]
	042 Move X26, [X31+16]
	043 Move X25, [X31+24]
	044 Move X30, [X31+80]
	045 Move X27, [X31+88]
	046 CallNoReturn X8

Method: System.Void SetRenderTargetMultiSubtarget(UnityEngine.Rendering.RenderTargetIdentifier[] colors, UnityEngine.Rendering.RenderTargetIdentifier depth, UnityEngine.Rendering.RenderBufferLoadAction[] colorLoadActions, UnityEngine.Rendering.RenderBufferStoreAction[] colorStoreActions, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, System.Int32 mipLevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)

Disassembly:
	0x03C4F494 LDP X20, X19, [X31 + 0x90]
	0x03C4F498 LDP X22, X21, [X31 + 0x80]
	0x03C4F49C LDP X24, X23, [X31 + 0x70]
	0x03C4F4A0 LDP X26, X25, [X31 + 0x60]
	0x03C4F4A4 LDP X28, X27, [X31 + 0x50]
	0x03C4F4A8 LDR X30, [X31 + 0x40]
	0x03C4F4AC ADD X31, X31, 0xA0
	0x03C4F4B0 RET
	0x03C4F4B4 ADRP X0, 0x4A9000
	0x03C4F4B8 LDR X0, [X0 + 0x528]
	0x03C4F4BC BL 0x1C16D08
	0x03C4F4C0 BL 0x1C16F10
	0x03C4F4C4 MOV X19, X0
	0x03C4F4C8 ADRP X0, 0x50F000
	0x03C4F4CC LDR X0, [X0 + 0xD38]
	0x03C4F4D0 BL 0x1C16D08
	0x03C4F4D4 MOV X1, X0
	0x03C4F4D8 MOV X0, X19
	0x03C4F4DC MOV X2, X31
	0x03C4F4E0 BL 0x330E100
	0x03C4F4E4 ADRP X0, 0x510000
	0x03C4F4E8 LDR X0, [X0 + 0xCC0]
	0x03C4F4EC BL 0x1C16D08
	0x03C4F4F0 MOV X1, X0
	0x03C4F4F4 MOV X0, X19
	0x03C4F4F8 BL 0x1C16DEC
	0x03C4F4FC SUB X31, X31, 0x60
	0x03C4F500 STR X30, [X31 + 0x50]
	0x03C4F504 LDP V1, V0, [X1 + 0x20]
	0x03C4F508 LDP V3, V2, [X1]
	0x03C4F50C ADD X1, X31, 0x10
	0x03C4F510 MOV X7, X31
	0x03C4F514 STP V1, V0, [X31 + 0x30]
	0x03C4F518 STP V3, V2, [X31 + 0x10]
	0x03C4F51C BL 0x3C4F388
	0x03C4F520 LDR X30, [X31 + 0x50]
	0x03C4F524 ADD X31, X31, 0x60
	0x03C4F528 RET
	0x03C4F52C SUB X31, X31, 0x60
	0x03C4F530 STP X30, X27, [X31 + 0x10]
	0x03C4F534 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x797000
	014 Move W27, [X31+104]
	015 Move X8, [X29+4048]
	016 Move W28, [X31+96]
	017 Move W19, W7
	018 Move W20, W6
	019 Move W21, W5
	020 Move X22, X4
	021 Move X23, X3
	022 Move X24, X2
	023 Move X25, X1
	024 Move X26, X0
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -51527680
	028 Add X0, X0, 3243
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X29+4048], X0
	032 Move [X31+104], W27
	033 Move [X31+96], W28
	034 Move X0, X26
	035 Move X1, X25
	036 Move X2, X24
	037 Move X3, X23
	038 Move X4, X22
	039 Move W5, W21
	040 Move W6, W20
	041 Move W7, W19
	042 Move X20, [X31+80]
	043 Move X19, [X31+88]
	044 Move X22, [X31+64]
	045 Move X21, [X31+72]
	046 Move X24, [X31+48]
	047 Move X23, [X31+56]
	048 Move X26, [X31+32]
	049 Move X25, [X31+40]
	050 Move X28, [X31+16]
	051 Move X27, [X31+24]
	052 Move X29, [X31+96]
	053 Move X30, [X31+104]
	054 CallNoReturn X8

Method: System.Void SetBufferData(UnityEngine.ComputeBuffer buffer, System.Array data)

Disassembly:
	0x03C4F6DC LDP X20, X19, [X31 + 0x50]
	0x03C4F6E0 LDP X22, X21, [X31 + 0x40]
	0x03C4F6E4 LDP X24, X23, [X31 + 0x30]
	0x03C4F6E8 LDP X26, X25, [X31 + 0x20]
	0x03C4F6EC LDP X30, X27, [X31 + 0x10]
	0x03C4F6F0 ADD X31, X31, 0x60
	0x03C4F6F4 RET
	0x03C4F6F8 ADRP X0, 0x4AC000
	0x03C4F6FC LDR X0, [X0 + 0x760]
	0x03C4F700 BL 0x1C16D08
	0x03C4F704 BL 0x1C16F10
	0x03C4F708 MOV X19, X0
	0x03C4F70C ADRP X0, 0x50F000
	0x03C4F710 LDR X0, [X0 + 0xD10]
	0x03C4F714 BL 0x1C16D08
	0x03C4F718 MOV X20, X0
	0x03C4F71C ADRP X0, 0x50F000
	0x03C4F720 LDR X0, [X0 + 0xD18]
	0x03C4F724 BL 0x1C16D08
	0x03C4F728 MOV X2, X0
	0x03C4F72C MOV X0, X19
	0x03C4F730 MOV X1, X20
	0x03C4F734 MOV X3, X31
	0x03C4F738 BL 0x3311888
	0x03C4F73C B 0x3C4F8A4
	0x03C4F740 ADRP X20, 0x4A8000
	0x03C4F744 LDR X20, [X20 + 0x2C8]
	0x03C4F748 MOV X0, X20
	0x03C4F74C BL 0x1C16D08
	0x03C4F750 BL 0x19903D0
	0x03C4F754 MOV X0, X20
	0x03C4F758 BL 0x1C16D08
	0x03C4F75C LDR X8, [X0 + 0xB8]
	0x03C4F760 MOV X0, X19
	0x03C4F764 LDR W20, [X8]
	0x03C4F768 BL 0x19903C0
	0x03C4F76C LDR W8, [X19 + 0x18]
	0x03C4F770 ADRP X0, 0x4A4000
	0x03C4F774 CMP W20, W8
	0x03C4F778 CSEL W8, W20, W8, LT
	0x03C4F77C STR W8, [X31 + 0xC]
	0x03C4F780 LDR X0, [X0 + 0x758]
	0x03C4F784 BL 0x1C16D08
	0x03C4F788 ADD X1, X31, 0xC
	0x03C4F78C BL 0x1C16E04
	0x03C4F790 MOV X19, X0
	0x03C4F794 ADRP X0, 0x50F000
	0x03C4F798 LDR X0, [X0 + 0xD20]
	0x03C4F79C BL 0x1C16D08
	0x03C4F7A0 MOV X1, X19
	0x03C4F7A4 MOV X2, X31
	0x03C4F7A8 BL 0x321EFD0
	0x03C4F7AC MOV X19, X0
	0x03C4F7B0 ADRP X0, 0x4AC000
	0x03C4F7B4 LDR X0, [X0 + 0x760]
	0x03C4F7B8 BL 0x1C16D08
	0x03C4F7BC BL 0x1C16F10
	0x03C4F7C0 MOV X20, X0
	0x03C4F7C4 ADRP X0, 0x4CC000
	0x03C4F7C8 LDR X0, [X0 + 0x648]
	0x03C4F7CC BL 0x1C16D08
	0x03C4F7D0 MOV X1, X0
	0x03C4F7D4 MOV X0, X20
	0x03C4F7D8 MOV X2, X19
	0x03C4F7DC MOV X3, X31
	0x03C4F7E0 BL 0x3311888
	0x03C4F7E4 ADRP X0, 0x510000
	0x03C4F7E8 LDR X0, [X0 + 0xCC8]
	0x03C4F7EC BL 0x1C16D08
	0x03C4F7F0 MOV X1, X0
	0x03C4F7F4 MOV X0, X20
	0x03C4F7F8 BL 0x1C16DEC
	0x03C4F7FC ADRP X0, 0x4A4000
	0x03C4F800 LDR X0, [X0 + 0x5B0]
	0x03C4F804 BL 0x1C16D08
	0x03C4F808 BL 0x1C16F10
	0x03C4F80C MOV X19, X0
	0x03C4F810 ADRP X0, 0x510000
	0x03C4F814 LDR X0, [X0 + 0xCD0]
	0x03C4F818 BL 0x1C16D08
	0x03C4F81C MOV X1, X0
	0x03C4F820 MOV X0, X19
	0x03C4F824 MOV X2, X31
	0x03C4F828 BL 0x337DF1C
	0x03C4F82C B 0x3C4F8A4
	0x03C4F830 ADRP X0, 0x4A9000
	0x03C4F834 LDR X0, [X0 + 0x528]
	0x03C4F838 BL 0x1C16D08
	0x03C4F83C BL 0x1C16F10
	0x03C4F840 MOV X19, X0
	0x03C4F844 ADRP X0, 0x4FE000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X2, 0
	009 JumpIfEqual {60}
	010 Move X20, X1
	011 Move X21, X0
	012 Move X0, X2
	013 Move X1, X31
	014 Move X19, X2
	015 Call UnsafeUtility.IsArrayBlittable, X0
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {78}
	020 Move X0, X19
	021 Move X1, X31
	022 Call Array.get_Length, X0
	023 Move W22, W0
	024 Move X0, X19
	025 Move X1, X31
	026 Call "il2cpp_vm_object_is_inst", X0
	027 Compare X0, 0
	028 JumpIfEqual {103}
	029 Move X8, [X0]
	030 Move X9, [X8+1064]
	031 Move X1, [X8+1072]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X1, X31
	034 Call UnsafeUtility.SizeOf, X0
	035 Move X24, 0x797000
	036 Move X7, [X24+3904]
	037 Move W23, W0
	038 Compare X7, 0
	039 JumpIfNotEqual {45}
	040 Move X0, -51687424
	041 Add X0, X0, 1005
	042 Call 0x1C17CB8
	043 Move X7, X0
	044 Move [X24+3904], X0
	045 Move X0, X21
	046 Move X1, X20
	047 Move X2, X19
	048 Move W5, W22
	049 Move W6, W23
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move W3, W31
	057 Move W4, W31
	058 Move X30, [X31+64]
	059 CallNoReturn X7
	060 Move X0, 0x4AA000
	061 Move X0, [X0+1320]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X19, X0
	065 Move X0, 0x4B1000
	066 Move X0, [X0+1680]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X19
	070 Move X2, X31
	071 Call ArgumentNullException..ctor, X0, X1
	072 Move X0, 0x511000
	073 Move X0, [X0+3200]
	074 Call 0x1C17D08
	075 Move X1, X0
	076 Move X0, X19
	077 Call 0x1C17DEC
	078 Move X0, X19
	079 Move X1, X31
	080 Call UnsafeUtility.GetReasonForArrayNonBlittable, X0
	081 Move X19, X0
	082 Move X0, 0x511000
	083 Move X0, [X0+3208]
	084 Call 0x1C17D08
	085 Move X1, X19
	086 Move X2, X31
	087 Call String.Format, X0, X1
	088 Move X19, X0
	089 Move X0, 0x4AD000
	090 Move X0, [X0+1400]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X1, X19
	094 Move X2, X31
	095 Move X20, X0
	096 Call ArgumentException..ctor, X0, X1
	097 Move X0, 0x511000
	098 Move X0, [X0+3200]
	099 Call 0x1C17D08
	100 Move X1, X0
	101 Move X0, X20
	102 Call 0x1C17DEC
	103 Call 0x1C17F20

Method: System.Void InternalSetComputeBufferData(UnityEngine.ComputeBuffer buffer, System.Array data, System.Int32 managedBufferStartIndex, System.Int32 graphicsBufferStartIndex, System.Int32 count, System.Int32 elemSize)

Disassembly:
	0x03C4F848 LDR X0, [X0 + 0xE90]
	0x03C4F84C B 0x3C4F890
	0x03C4F850 BL 0x1C16F20
	0x03C4F854 ADRP X0, 0x4A9000
	0x03C4F858 LDR X0, [X0 + 0x528]
	0x03C4F85C BL 0x1C16D08
	0x03C4F860 BL 0x1C16F10
	0x03C4F864 MOV X19, X0
	0x03C4F868 ADRP X0, 0x50F000
	0x03C4F86C LDR X0, [X0 + 0xD38]
	0x03C4F870 B 0x3C4F890
	0x03C4F874 ADRP X0, 0x4A9000
	0x03C4F878 LDR X0, [X0 + 0x528]
	0x03C4F87C BL 0x1C16D08
	0x03C4F880 BL 0x1C16F10
	0x03C4F884 MOV X19, X0
	0x03C4F888 ADRP X0, 0x50F000
	0x03C4F88C LDR X0, [X0 + 0xD48]
	0x03C4F890 BL 0x1C16D08
	0x03C4F894 MOV X1, X0
	0x03C4F898 MOV X0, X19
	0x03C4F89C MOV X2, X31
	0x03C4F8A0 BL 0x330E100
	0x03C4F8A4 ADRP X0, 0x510000
	0x03C4F8A8 LDR X0, [X0 + 0xCC8]
	0x03C4F8AC BL 0x1C16D08
	0x03C4F8B0 MOV X1, X0
	0x03C4F8B4 MOV X0, X19
	0x03C4F8B8 BL 0x1C16DEC
	0x03C4F8BC B 0x3C4C6EC
	0x03C4F8C0 STR X30, [X31 - 0x30]!
	0x03C4F8C4 STP X22, X21, [X31 + 0x10]
	0x03C4F8C8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x797000
	011 Move X7, [X26+3904]
	012 Move W19, W6
	013 Move W20, W5
	014 Move W21, W4
	015 Move W22, W3
	016 Move X23, X2
	017 Move X24, X1
	018 Move X25, X0
	019 Compare X7, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51687424
	022 Add X0, X0, 1005
	023 Call 0x1C17CB8
	024 Move X7, X0
	025 Move [X26+3904], X0
	026 Move X0, X25
	027 Move X1, X24
	028 Move X2, X23
	029 Move W3, W22
	030 Move W4, W21
	031 Move W5, W20
	032 Move W6, W19
	033 Move X20, [X31+64]
	034 Move X19, [X31+72]
	035 Move X22, [X31+48]
	036 Move X21, [X31+56]
	037 Move X24, [X31+32]
	038 Move X23, [X31+40]
	039 Move X26, [X31+16]
	040 Move X25, [X31+24]
	041 Move X30, [X31+80]
	042 CallNoReturn X7

Method: System.Void Finalize()

Disassembly:
	0x03C4F8CC ADRP X22, 0x796000
	0x03C4F8D0 LDR X8, [X22 + 0xEB0]
	0x03C4F8D4 MOV X19, X2
	0x03C4F8D8 MOV W20, W1
	0x03C4F8DC MOV X21, X0
	0x03C4F8E0 CBNZ X8, 0x3C4F8F8
	0x03C4F8E4 ADRP X0, 0xFFFFFFFFFCED1000
	0x03C4F8E8 ADD X0, X0, 0xDB5
	0x03C4F8EC BL 0x1C16CB8
	0x03C4F8F0 MOV X8, X0
	0x03C4F8F4 STR X0, [X22 + 0xEB0]
	0x03C4F8F8 MOVZ W2, 0x2
	0x03C4F8FC MOV X0, X21
	0x03C4F900 MOV W1, W31
	0x03C4F904 BLR X8
	0x03C4F908 ADRP X22, 0x796000
	0x03C4F90C LDR X3, [X22 + 0xE50]
	0x03C4F910 CBNZ X3, 0x3C4F928
	0x03C4F914 ADRP X0, 0xFFFFFFFFFCEB2000
	0x03C4F918 ADD X0, X0, 0x311
	0x03C4F91C BL 0x1C16CB8
	0x03C4F920 MOV X3, X0
	0x03C4F924 STR X0, [X22 + 0xE50]
	0x03C4F928 MOV X0, X21
	0x03C4F92C MOV W1, W20
	0x03C4F930 MOV X2, X19
	0x03C4F934 LDP X20, X19, [X31 + 0x20]
	0x03C4F938 LDP X22, X21, [X31 + 0x10]
	0x03C4F93C LDR X30, [X31], #0x30
	0x03C4F940 BR X3
	0x03C4F944 STP X30, X23, [X31 - 0x30]!
	0x03C4F948 STP X22, X21, [X31 + 0x10]
	0x03C4F94C STP X20, X19, [X31 + 0x20]
	0x03C4F950 ADRP X23, 0x796000
	0x03C4F954 LDR X8, [X23 + 0xEB0]
	0x03C4F958 MOV W21, W3
	0x03C4F95C MOV X19, X2
	0x03C4F960 MOV W20, W1
	0x03C4F964 MOV X22, X0
	0x03C4F968 CBNZ X8, 0x3C4F980
	0x03C4F96C ADRP X0, 0xFFFFFFFFFCED1000
	0x03C4F970 ADD X0, X0, 0xDB5
	0x03C4F974 BL 0x1C16CB8
	0x03C4F978 MOV X8, X0
	0x03C4F97C STR X0, [X23 + 0xEB0]
	0x03C4F980 MOVZ W2, 0x2
	0x03C4F984 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x797000
	006 Move X8, [X20+3592]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51535872
	011 Add X0, X0, 3120
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X20+3592], X0
	015 Move X0, X19
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move [X19+16], X31
	018 Move X0, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X1, X31
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Call Object.Finalize, X0
	025 Return 
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X21, X0
	028 Move X0, X21
	029 Call 0x3EB2AD0
	030 Move X20, [X0]
	031 Call 0x3EB2AE0
	032 Move X0, X19
	033 Move X1, X31
	034 Call Object.Finalize, X0
	035 Compare X20, 0
	036 JumpIfNotEqual {43}
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X20, X31
	043 Move X0, X20
	044 Call 0x1C17F18
	045 Move X21, X0
	046 Move X0, X19
	047 Move X1, X31
	048 Call Object.Finalize, X0
	049 Compare X20, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X21
	052 Call 0x1D2D690
	053 Move X0, X20
	054 Call 0x1C17F18
	055 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x03C4F9CC BR X4
	0x03C4F9D0 MOV W3, W31
	0x03C4F9D4 B 0x3C4F944
	0x03C4F9D8 STR X30, [X31 - 0x30]!
	0x03C4F9DC STP X22, X21, [X31 + 0x10]
	0x03C4F9E0 STP X20, X19, [X31 + 0x20]
	0x03C4F9E4 ADRP X22, 0x796000
	0x03C4F9E8 LDR X8, [X22 + 0xEB0]
	0x03C4F9EC MOV X19, X2
	0x03C4F9F0 MOV X20, X1
	0x03C4F9F4 MOV X21, X0
	0x03C4F9F8 CBNZ X8, 0x3C4FA10
	0x03C4F9FC ADRP X0, 0xFFFFFFFFFCED1000
	0x03C4FA00 ADD X0, X0, 0xDB5
	0x03C4FA04 BL 0x1C16CB8
	0x03C4FA08 MOV X8, X0
	0x03C4FA0C STR X0, [X22 + 0xEB0]
	0x03C4FA10 MOVZ W2, 0x2
	0x03C4FA14 MOV X0, X21
	0x03C4FA18 MOV W1, W31
	0x03C4FA1C BLR X8
	0x03C4FA20 MOV X0, X31
	0x03C4FA24 BL 0x3C1EAA4
	0x03C4FA28 MOV W5, W0
	0x03C4FA2C MOV X0, X21
	0x03C4FA30 MOV X1, X20
	0x03C4FA34 MOV X2, X19
	0x03C4FA38 LDP X20, X19, [X31 + 0x20]
	0x03C4FA3C LDP X22, X21, [X31 + 0x10]
	0x03C4FA40 FMOV S0, 1
	0x03C4FA44 FMOV S1, 1
	0x03C4FA48 FMOV S2, W31
	0x03C4FA4C FMOV S3, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x797000
	006 Move W8, [X20+3912]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4AC000
	013 Move X0, [X0+3088]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3912], W8
	017 Move X21, 0x797000
	018 Move X20, 0x4AC000
	019 Move X8, [X21+3592]
	020 Move X20, [X20+3088]
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51535872
	024 Add X0, X0, 3120
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X21+3592], X0
	028 Move X0, X19
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move [X19+16], X31
	031 Move X0, [X20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X1, X31
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call GC.SuppressFinalize, X0
	043 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03C4F988 MOV W1, W31
	0x03C4F98C BLR X8
	0x03C4F990 ADRP X23, 0x796000
	0x03C4F994 LDR X4, [X23 + 0xE58]
	0x03C4F998 CBNZ X4, 0x3C4F9B0
	0x03C4F99C ADRP X0, 0xFFFFFFFFFCEBC000
	0x03C4F9A0 ADD X0, X0, 0x69D
	0x03C4F9A4 BL 0x1C16CB8
	0x03C4F9A8 MOV X4, X0
	0x03C4F9AC STR X0, [X23 + 0xE58]
	0x03C4F9B0 AND W3, W21, 0x1
	0x03C4F9B4 MOV X0, X22
	0x03C4F9B8 MOV W1, W20
	0x03C4F9BC MOV X2, X19
	0x03C4F9C0 LDP X20, X19, [X31 + 0x20]
	0x03C4F9C4 LDP X22, X21, [X31 + 0x10]
	0x03C4F9C8 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x797000
	005 Move X8, [X20+3592]
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51535872
	010 Add X0, X0, 3120
	011 Call 0x1C17CB8
	012 Move X8, X0
	013 Move [X20+3592], X0
	014 Move X0, X19
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move [X19+16], X31
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+32]
	020 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C4FA50 MOVN W4, 0x0
	0x03C4FA54 MOV X3, X31
	0x03C4FA58 MOV W6, W31
	0x03C4FA5C LDR X30, [X31], #0x30
	0x03C4FA60 B 0x3C4C940
	0x03C4FA64 STR X30, [X31 - 0x40]!
	0x03C4FA68 STP X24, X23, [X31 + 0x10]
	0x03C4FA6C STP X22, X21, [X31 + 0x20]
	0x03C4FA70 STP X20, X19, [X31 + 0x30]
	0x03C4FA74 ADRP X24, 0x796000
	0x03C4FA78 LDR X8, [X24 + 0xEB0]
	0x03C4FA7C MOV W19, W4
	0x03C4FA80 MOV X20, X3
	0x03C4FA84 MOV X21, X2
	0x03C4FA88 MOV X22, X1
	0x03C4FA8C MOV X23, X0
	0x03C4FA90 CBNZ X8, 0x3C4FAA8
	0x03C4FA94 ADRP X0, 0xFFFFFFFFFCED1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call Object..ctor, X0
	007 Move X20, 0x797000
	008 Move X8, [X20+3568]
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51568640
	012 Add X0, X0, 3203
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X20+3568], X0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move [X19+16], X0
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 

Method: UnityEngine.Rendering.GraphicsFence CreateAsyncGraphicsFence()

Disassembly:
	0x03C4FA98 ADD X0, X0, 0xDB5
	0x03C4FA9C BL 0x1C16CB8
	0x03C4FAA0 MOV X8, X0

ISIL:
	001 Move W2, 2
	002 Move W1, W31

Method: UnityEngine.Rendering.GraphicsFence CreateGraphicsFence(UnityEngine.Rendering.GraphicsFenceType fenceType, UnityEngine.Rendering.SynchronisationStageFlags stage)

Disassembly:
	0x03C4FAA4 STR X0, [X24 + 0xEB0]
	0x03C4FAA8 MOVZ W2, 0x2
	0x03C4FAAC MOV X0, X23
	0x03C4FAB0 MOV W1, W31
	0x03C4FAB4 BLR X8
	0x03C4FAB8 MOV X0, X31
	0x03C4FABC BL 0x3C1EAA4
	0x03C4FAC0 MOV W5, W0
	0x03C4FAC4 MOV X0, X23
	0x03C4FAC8 MOV X1, X22
	0x03C4FACC MOV X2, X21
	0x03C4FAD0 MOV X3, X20
	0x03C4FAD4 MOV W4, W19
	0x03C4FAD8 LDP X20, X19, [X31 + 0x30]
	0x03C4FADC LDP X22, X21, [X31 + 0x20]
	0x03C4FAE0 LDP X24, X23, [X31 + 0x10]
	0x03C4FAE4 FMOV S0, 1
	0x03C4FAE8 FMOV S1, 1
	0x03C4FAEC FMOV S2, W31
	0x03C4FAF0 FMOV S3, W31
	0x03C4FAF4 MOV W6, W31
	0x03C4FAF8 LDR X30, [X31], #0x40
	0x03C4FAFC B 0x3C4C940
	0x03C4FB00 STP D11, D10, [X31 - 0x30]!
	0x03C4FB04 STP D9, D8, [X31 + 0x10]
	0x03C4FB08 STP X30, X19, [X31 + 0x20]
	0x03C4FB0C MOV X19, X0
	0x03C4FB10 MOV X0, X1
	0x03C4FB14 MOV X1, X31
	0x03C4FB18 MOV V8.16B, V3.16B
	0x03C4FB1C MOV V9.16B, V2.16B

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x797000
	009 Move X8, [X22+3576]
	010 Move W19, W2
	011 Move W20, W1
	012 Move X21, X0
	013 Move [X31+12], W1
	014 Compare X8, 0
	015 JumpIfNotEqual {21}
	016 Move X0, -51769344
	017 Add X0, X0, 405
	018 Call 0x1C17CB8
	019 Move X8, X0
	020 Move [X22+3576], X0
	021 Move X0, X21
	022 Move W1, W20
	023 Move W2, W19
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move [X31], X0
	026 Add X0, X31, 0
	027 Call GraphicsFence.InitPostAllocation, X0
	028 Add X0, X31, 0
	029 Call GraphicsFence.Validate, X0
	030 Move X0, [X31]
	031 Move X1, [X31+8]
	032 Move X20, [X31+48]
	033 Move X19, [X31+56]
	034 Move X22, [X31+32]
	035 Move X21, [X31+40]
	036 Move X30, [X31+16]
	037 Add X31, X31, 64
	038 Return X0

Method: System.Void WaitOnAsyncGraphicsFence(UnityEngine.Rendering.GraphicsFence fence)

Disassembly:
	0x03C4FB20 MOV V10.16B, V1.16B
	0x03C4FB24 MOV V11.16B, V0.16B

ISIL:
	001 Move W3, 1
	002 Call CommandBuffer.WaitOnAsyncGraphicsFence, X0, X1, X2
	003 Return 

Method: System.Void WaitOnAsyncGraphicsFence(UnityEngine.Rendering.GraphicsFence fence, UnityEngine.Rendering.SynchronisationStage stage)

Disassembly:
	0x03C4FB28 BL 0x3C124EC
	0x03C4FB2C MOV W1, W0
	0x03C4FB30 MOV X0, X19
	0x03C4FB34 MOV V2.16B, V9.16B

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 1
	003 NotImplemented "Instruction CINC not yet implemented."

Method: System.Void WaitOnAsyncGraphicsFence(UnityEngine.Rendering.GraphicsFence fence, UnityEngine.Rendering.SynchronisationStageFlags stage)

Disassembly:
	0x03C4FB38 MOV V3.16B, V8.16B
	0x03C4FB3C LDP X30, X19, [X31 + 0x20]
	0x03C4FB40 LDP D9, D8, [X31 + 0x10]
	0x03C4FB44 MOV V0.16B, V11.16B
	0x03C4FB48 MOV V1.16B, V10.16B
	0x03C4FB4C LDP D11, D10, [X31], #0x30
	0x03C4FB50 B 0x3C4CED8
	0x03C4FB54 SUB X31, X31, 0x60
	0x03C4FB58 STP X30, X21, [X31 + 0x40]
	0x03C4FB5C STP X20, X19, [X31 + 0x50]
	0x03C4FB60 MOV X19, X0
	0x03C4FB64 MOV X0, X1
	0x03C4FB68 MOV X1, X31
	0x03C4FB6C MOV X21, X2
	0x03C4FB70 BL 0x3C124EC
	0x03C4FB74 LDP V0, V1, [X21 + 0x20]
	0x03C4FB78 LDP V3, V2, [X21]
	0x03C4FB7C ADRP X21, 0x796000
	0x03C4FB80 LDR X8, [X21 + 0xFA8]
	0x03C4FB84 MOV W20, W0
	0x03C4FB88 STP V0, V1, [X31 + 0x20]
	0x03C4FB8C STP V3, V2, [X31]
	0x03C4FB90 CBNZ X8, 0x3C4FBA8
	0x03C4FB94 ADRP X0, 0xFFFFFFFFFCEC5000
	0x03C4FB98 ADD X0, X0, 0xCF5
	0x03C4FB9C BL 0x1C16CB8
	0x03C4FBA0 MOV X8, X0
	0x03C4FBA4 STR X0, [X21 + 0xFA8]
	0x03C4FBA8 ADD X2, X31, 0x0
	0x03C4FBAC MOV X0, X19
	0x03C4FBB0 MOV W1, W20
	0x03C4FBB4 BLR X8
	0x03C4FBB8 LDP X20, X19, [X31 + 0x50]
	0x03C4FBBC LDP X30, X21, [X31 + 0x40]
	0x03C4FBC0 ADD X31, X31, 0x60
	0x03C4FBC4 RET
	0x03C4FBC8 STR X30, [X31 - 0x30]!
	0x03C4FBCC STP X22, X21, [X31 + 0x10]
	0x03C4FBD0 STP X20, X19, [X31 + 0x20]
	0x03C4FBD4 MOV X20, X0
	0x03C4FBD8 MOV X0, X1
	0x03C4FBDC MOV X1, X31
	0x03C4FBE0 MOV X19, X2
	0x03C4FBE4 BL 0x3C124EC
	0x03C4FBE8 ADRP X22, 0x796000
	0x03C4FBEC LDR X3, [X22 + 0xEC8]
	0x03C4FBF0 MOV W21, W0
	0x03C4FBF4 CBNZ X3, 0x3C4FC0C
	0x03C4FBF8 ADRP X0, 0xFFFFFFFFFCEC9000
	0x03C4FBFC ADD X0, X0, 0xC59
	0x03C4FC00 BL 0x1C16CB8
	0x03C4FC04 MOV X3, X0
	0x03C4FC08 STR X0, [X22 + 0xEC8]
	0x03C4FC0C MOV X0, X20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, X2
	009 ShiftRight X8, 32
	010 And X8, X8, 0x7FFFFFFF
	011 Move [X31], X1
	012 Compare X8, 0
	013 JumpIfNotEqual {51}
	014 Move X21, X0
	015 Add X0, X31, 0
	016 Move W19, W3
	017 Move X20, X1
	018 Call GraphicsFence.Validate, X0
	019 Add X0, X31, 0
	020 Call GraphicsFence.IsFencePending, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {44}
	025 Move X22, 0x797000
	026 Move X3, [X22+3584]
	027 Compare X3, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51535872
	030 Add X0, X0, 2996
	031 Call 0x1C17CB8
	032 Move X3, X0
	033 Move [X22+3584], X0
	034 Move X0, X21
	035 Move X1, X20
	036 Move W2, W19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X30, [X31+16]
	042 Add X31, X31, 64
	043 CallNoReturn X3
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X30, [X31+16]
	049 Add X31, X31, 64
	050 Return 
	051 Move X0, 0x4AD000
	052 Move X0, [X0+1400]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X19, X0
	056 Move X0, 0x511000
	057 Move X0, [X0+3216]
	058 Call 0x1C17D08
	059 Move X1, X0
	060 Move X0, X19
	061 Move X2, X31
	062 Call ArgumentException..ctor, X0, X1
	063 Move X0, 0x511000
	064 Move X0, [X0+3224]
	065 Call 0x1C17D08
	066 Move X1, X0
	067 Move X0, X19
	068 Call 0x1C17DEC

Method: System.Void SetComputeTextureParam(UnityEngine.ComputeShader computeShader, System.Int32 kernelIndex, System.String name, UnityEngine.Rendering.RenderTargetIdentifier rt)

Disassembly:
	0x03C4FC10 MOV W1, W21
	0x03C4FC14 MOV X2, X19
	0x03C4FC18 LDP X20, X19, [X31 + 0x20]
	0x03C4FC1C LDP X22, X21, [X31 + 0x10]
	0x03C4FC20 LDR X30, [X31], #0x30
	0x03C4FC24 BR X3
	0x03C4FC28 SUB X31, X31, 0x50
	0x03C4FC2C STP X30, X21, [X31 + 0x30]
	0x03C4FC30 STP X20, X19, [X31 + 0x40]
	0x03C4FC34 MOV X19, X0
	0x03C4FC38 MOV X0, X1
	0x03C4FC3C MOV X1, X31
	0x03C4FC40 MOV X21, X2
	0x03C4FC44 BL 0x3C124EC
	0x03C4FC48 LDR X9, [X21 + 0x20]
	0x03C4FC4C LDP V1, V0, [X21]
	0x03C4FC50 ADRP X21, 0x796000
	0x03C4FC54 LDR X8, [X21 + 0xEE8]
	0x03C4FC58 MOV W20, W0
	0x03C4FC5C STP V1, V0, [X31]
	0x03C4FC60 STR X9, [X31 + 0x20]
	0x03C4FC64 CBNZ X8, 0x3C4FC7C
	0x03C4FC68 ADRP X0, 0xFFFFFFFFFCED1000
	0x03C4FC6C ADD X0, X0, 0xE5D
	0x03C4FC70 BL 0x1C16CB8
	0x03C4FC74 MOV X8, X0
	0x03C4FC78 STR X0, [X21 + 0xEE8]
	0x03C4FC7C ADD X2, X31, 0x0
	0x03C4FC80 MOVZ W3, 0x3
	0x03C4FC84 MOV X0, X19
	0x03C4FC88 MOV W1, W20
	0x03C4FC8C BLR X8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, X1
	009 Move X22, X0
	010 Move X0, X3
	011 Move X1, X31
	012 Move X19, X4
	013 Move W20, W2
	014 Call Shader.PropertyToID, X0
	015 Move X24, 0x797000
	016 Move X7, [X24+3608]
	017 Move W23, W0
	018 Compare X7, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51609600
	021 Add X0, X0, 3561
	022 Call 0x1C17CB8
	023 Move X7, X0
	024 Move [X24+3608], X0
	025 Move X0, X22
	026 Move X1, X21
	027 Move W2, W20
	028 Move W3, W23
	029 Move X4, X19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move W6, 3
	037 Move W5, W31
	038 Move X30, [X31+64]
	039 CallNoReturn X7

Method: System.Void SetComputeTextureParam(UnityEngine.ComputeShader computeShader, System.Int32 kernelIndex, System.Int32 nameID, UnityEngine.Rendering.RenderTargetIdentifier rt)

Disassembly:
	0x03C4FC90 LDP X20, X19, [X31 + 0x40]
	0x03C4FC94 LDP X30, X21, [X31 + 0x30]
	0x03C4FC98 ADD X31, X31, 0x50
	0x03C4FC9C RET
	0x03C4FCA0 STP X30, X23, [X31 - 0x30]!
	0x03C4FCA4 STP X22, X21, [X31 + 0x10]
	0x03C4FCA8 STP X20, X19, [X31 + 0x20]
	0x03C4FCAC ADRP X23, 0x796000
	0x03C4FCB0 LDR X4, [X23 + 0xEE8]
	0x03C4FCB4 MOV W19, W3
	0x03C4FCB8 MOV X20, X2
	0x03C4FCBC MOV W21, W1
	0x03C4FCC0 MOV X22, X0
	0x03C4FCC4 CBNZ X4, 0x3C4FCDC
	0x03C4FCC8 ADRP X0, 0xFFFFFFFFFCED1000
	0x03C4FCCC ADD X0, X0, 0xE5D
	0x03C4FCD0 BL 0x1C16CB8
	0x03C4FCD4 MOV X4, X0
	0x03C4FCD8 STR X0, [X23 + 0xEE8]
	0x03C4FCDC MOV X0, X22
	0x03C4FCE0 MOV W1, W21
	0x03C4FCE4 MOV X2, X20
	0x03C4FCE8 MOV W3, W19
	0x03C4FCEC LDP X20, X19, [X31 + 0x20]
	0x03C4FCF0 LDP X22, X21, [X31 + 0x10]
	0x03C4FCF4 LDP X30, X23, [X31], #0x30
	0x03C4FCF8 BR X4
	0x03C4FCFC STR X30, [X31 - 0x30]!
	0x03C4FD00 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x797000
	009 Move X7, [X24+3608]
	010 Move X19, X4
	011 Move W20, W3
	012 Move W21, W2
	013 Move X22, X1
	014 Move X23, X0
	015 Compare X7, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51609600
	018 Add X0, X0, 3561
	019 Call 0x1C17CB8
	020 Move X7, X0
	021 Move [X24+3608], X0
	022 Move X0, X23
	023 Move X1, X22
	024 Move W2, W21
	025 Move W3, W20
	026 Move X4, X19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move W6, 3
	034 Move W5, W31
	035 Move X30, [X31+64]
	036 CallNoReturn X7

Method: System.Void SetComputeConstantBufferParam(UnityEngine.ComputeShader computeShader, System.Int32 nameID, UnityEngine.ComputeBuffer buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03C4FD04 STP X20, X19, [X31 + 0x20]
	0x03C4FD08 ADRP X22, 0x796000
	0x03C4FD0C LDR X4, [X22 + 0xEE8]
	0x03C4FD10 MOV X19, X2
	0x03C4FD14 MOV W20, W1
	0x03C4FD18 MOV X21, X0
	0x03C4FD1C CBNZ X4, 0x3C4FD34
	0x03C4FD20 ADRP X0, 0xFFFFFFFFFCED1000
	0x03C4FD24 ADD X0, X0, 0xE5D
	0x03C4FD28 BL 0x1C16CB8
	0x03C4FD2C MOV X4, X0
	0x03C4FD30 STR X0, [X22 + 0xEE8]
	0x03C4FD34 MOV X0, X21
	0x03C4FD38 MOV W1, W20
	0x03C4FD3C MOV X2, X19
	0x03C4FD40 LDP X20, X19, [X31 + 0x20]
	0x03C4FD44 LDP X22, X21, [X31 + 0x10]
	0x03C4FD48 MOVZ W3, 0x3
	0x03C4FD4C LDR X30, [X31], #0x30
	0x03C4FD50 BR X4
	0x03C4FD54 STR X30, [X31 - 0x30]!
	0x03C4FD58 STP X22, X21, [X31 + 0x10]
	0x03C4FD5C STP X20, X19, [X31 + 0x20]
	0x03C4FD60 ADRP X22, 0x796000
	0x03C4FD64 LDR X3, [X22 + 0xEF0]
	0x03C4FD68 MOV X19, X2
	0x03C4FD6C MOV W20, W1
	0x03C4FD70 MOV X21, X0
	0x03C4FD74 CBNZ X3, 0x3C4FD8C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x797000
	010 Move X6, [X25+3616]
	011 Move W19, W5
	012 Move W20, W4
	013 Move X21, X3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51568640
	020 Add X0, X0, 3253
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+3616], X0
	024 Move X0, X24
	025 Move X1, X23
	026 Move W2, W22
	027 Move X3, X21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void DispatchCompute(UnityEngine.ComputeShader computeShader, System.Int32 kernelIndex, System.Int32 threadGroupsX, System.Int32 threadGroupsY, System.Int32 threadGroupsZ)

Disassembly:
	0x03C4FD78 ADRP X0, 0xFFFFFFFFFCECF000
	0x03C4FD7C ADD X0, X0, 0xFF1
	0x03C4FD80 BL 0x1C16CB8
	0x03C4FD84 MOV X3, X0
	0x03C4FD88 STR X0, [X22 + 0xEF0]
	0x03C4FD8C MOV X0, X21
	0x03C4FD90 MOV W1, W20
	0x03C4FD94 MOV X2, X19
	0x03C4FD98 LDP X20, X19, [X31 + 0x20]
	0x03C4FD9C LDP X22, X21, [X31 + 0x10]
	0x03C4FDA0 LDR X30, [X31], #0x30
	0x03C4FDA4 BR X3
	0x03C4FDA8 STR X30, [X31 - 0x40]!
	0x03C4FDAC STP X24, X23, [X31 + 0x10]
	0x03C4FDB0 STP X22, X21, [X31 + 0x20]
	0x03C4FDB4 STP X20, X19, [X31 + 0x30]
	0x03C4FDB8 ADRP X24, 0x796000
	0x03C4FDBC LDR X5, [X24 + 0xF18]
	0x03C4FDC0 MOV W19, W4
	0x03C4FDC4 MOV W20, W3
	0x03C4FDC8 MOV W21, W2
	0x03C4FDCC MOV X22, X1
	0x03C4FDD0 MOV X23, X0
	0x03C4FDD4 CBNZ X5, 0x3C4FDEC
	0x03C4FDD8 ADRP X0, 0xFFFFFFFFFCEC9000
	0x03C4FDDC ADD X0, X0, 0xCB9
	0x03C4FDE0 BL 0x1C16CB8
	0x03C4FDE4 MOV X5, X0
	0x03C4FDE8 STR X0, [X24 + 0xF18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x797000
	010 Move X6, [X25+3624]
	011 Move W19, W5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51720192
	020 Add X0, X0, 1460
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+3624], X0
	024 Move X0, X24
	025 Move X1, X23
	026 Move W2, W22
	027 Move W3, W21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void DrawMesh(UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 submeshIndex, System.Int32 shaderPass, UnityEngine.MaterialPropertyBlock properties)

Disassembly:
	0x03C4FDEC MOV X0, X23
	0x03C4FDF0 MOV X1, X22
	0x03C4FDF4 MOV W2, W21
	0x03C4FDF8 MOV W3, W20
	0x03C4FDFC MOV W4, W19
	0x03C4FE00 LDP X20, X19, [X31 + 0x30]
	0x03C4FE04 LDP X22, X21, [X31 + 0x20]
	0x03C4FE08 LDP X24, X23, [X31 + 0x10]
	0x03C4FE0C LDR X30, [X31], #0x40
	0x03C4FE10 BR X5
	0x03C4FE14 STR X30, [X31 - 0x40]!
	0x03C4FE18 STP X24, X23, [X31 + 0x10]
	0x03C4FE1C STP X22, X21, [X31 + 0x20]
	0x03C4FE20 STP X20, X19, [X31 + 0x30]
	0x03C4FE24 MOV X21, X1
	0x03C4FE28 MOV X22, X0
	0x03C4FE2C MOV X0, X2
	0x03C4FE30 MOV X1, X31
	0x03C4FE34 MOV W19, W4
	0x03C4FE38 MOV W20, W3
	0x03C4FE3C BL 0x3C124EC
	0x03C4FE40 ADRP X24, 0x796000
	0x03C4FE44 LDR X5, [X24 + 0xF20]
	0x03C4FE48 MOV W23, W0
	0x03C4FE4C CBNZ X5, 0x3C4FE64
	0x03C4FE50 ADRP X0, 0xFFFFFFFFFCED1000
	0x03C4FE54 ADD X0, X0, 0xF02
	0x03C4FE58 BL 0x1C16CB8
	0x03C4FE5C MOV X5, X0
	0x03C4FE60 STR X0, [X24 + 0xF20]
	0x03C4FE64 MOV X0, X22
	0x03C4FE68 MOV X1, X21
	0x03C4FE6C MOV W2, W23
	0x03C4FE70 MOV W3, W20
	0x03C4FE74 MOV W4, W19
	0x03C4FE78 LDP X20, X19, [X31 + 0x30]
	0x03C4FE7C LDP X22, X21, [X31 + 0x20]
	0x03C4FE80 LDP X24, X23, [X31 + 0x10]
	0x03C4FE84 LDR X30, [X31], #0x40
	0x03C4FE88 BR X5
	0x03C4FE8C STP X30, X21, [X31 - 0x20]!
	0x03C4FE90 STP X20, X19, [X31 + 0x10]
	0x03C4FE94 ADRP X21, 0x796000
	0x03C4FE98 LDR X2, [X21 + 0xDE8]
	0x03C4FE9C MOV W19, W1
	0x03C4FEA0 MOV X20, X0
	0x03C4FEA4 CBNZ X2, 0x3C4FEBC
	0x03C4FEA8 ADRP X0, 0xFFFFFFFFFCED6000
	0x03C4FEAC ADD X0, X0, 0x1C3
	0x03C4FEB0 BL 0x1C16CB8
	0x03C4FEB4 MOV X2, X0
	0x03C4FEB8 STR X0, [X21 + 0xDE8]
	0x03C4FEBC MOV X0, X20
	0x03C4FEC0 MOV W1, W19
	0x03C4FEC4 LDP X20, X19, [X31 + 0x10]
	0x03C4FEC8 LDP X30, X21, [X31], #0x20
	0x03C4FECC BR X2
	0x03C4FED0 STR D8, [X31 - 0x40]!
	0x03C4FED4 STP X30, X23, [X31 + 0x10]
	0x03C4FED8 STP X22, X21, [X31 + 0x20]
	0x03C4FEDC STP X20, X19, [X31 + 0x30]
	0x03C4FEE0 ADRP X23, 0x796000
	0x03C4FEE4 LDR X4, [X23 + 0xFD8]
	0x03C4FEE8 MOV W20, W3
	0x03C4FEEC MOV V8.16B, V0.16B
	0x03C4FEF0 MOV W19, W2
	0x03C4FEF4 MOV X21, X1
	0x03C4FEF8 MOV X22, X0
	0x03C4FEFC CBNZ X4, 0x3C4FF14
	0x03C4FF00 ADRP X0, 0xFFFFFFFFFCEA0000
	0x03C4FF04 ADD X0, X0, 0x336
	0x03C4FF08 BL 0x1C16CB8
	0x03C4FF0C MOV X4, X0
	0x03C4FF10 STR X0, [X23 + 0xFD8]
	0x03C4FF14 AND W3, W20, 0x1
	0x03C4FF18 MOV X0, X22
	0x03C4FF1C MOV X1, X21
	0x03C4FF20 MOV W2, W19
	0x03C4FF24 LDP X20, X19, [X31 + 0x30]
	0x03C4FF28 LDP X22, X21, [X31 + 0x20]
	0x03C4FF2C LDP X30, X23, [X31 + 0x10]
	0x03C4FF30 MOV V0.16B, V8.16B
	0x03C4FF34 LDR V8, [X31], #0x40
	0x03C4FF38 BR X4
	0x03C4FF3C STR X30, [X31 - 0x30]!
	0x03C4FF40 STP X22, X21, [X31 + 0x10]
	0x03C4FF44 STP X20, X19, [X31 + 0x20]
	0x03C4FF48 ADRP X22, 0x796000
	0x03C4FF4C LDR X3, [X22 + 0xFE0]
	0x03C4FF50 MOV W20, W2
	0x03C4FF54 MOV X19, X1
	0x03C4FF58 MOV X21, X0
	0x03C4FF5C CBNZ X3, 0x3C4FF74
	0x03C4FF60 ADRP X0, 0xFFFFFFFFFCEB0000
	0x03C4FF64 ADD X0, X0, 0x658
	0x03C4FF68 BL 0x1C16CB8
	0x03C4FF6C MOV X3, X0
	0x03C4FF70 STR X0, [X22 + 0xFE0]
	0x03C4FF74 AND W2, W20, 0x1
	0x03C4FF78 MOV X0, X21
	0x03C4FF7C MOV X1, X19
	0x03C4FF80 LDP X20, X19, [X31 + 0x20]
	0x03C4FF84 LDP X22, X21, [X31 + 0x10]
	0x03C4FF88 LDR X30, [X31], #0x30
	0x03C4FF8C BR X3
	0x03C4FF90 STR D8, [X31 - 0x40]!
	0x03C4FF94 STP X30, X23, [X31 + 0x10]
	0x03C4FF98 STP X22, X21, [X31 + 0x20]
	0x03C4FF9C STP X20, X19, [X31 + 0x30]
	0x03C4FFA0 ADRP X23, 0x796000
	0x03C4FFA4 LDR X4, [X23 + 0xFD8]
	0x03C4FFA8 MOV W20, W3
	0x03C4FFAC MOV V8.16B, V0.16B
	0x03C4FFB0 MOV W19, W2
	0x03C4FFB4 MOV X21, X1
	0x03C4FFB8 MOV X22, X0
	0x03C4FFBC CBNZ X4, 0x3C4FFD4
	0x03C4FFC0 ADRP X0, 0xFFFFFFFFFCEA0000
	0x03C4FFC4 ADD X0, X0, 0x336
	0x03C4FFC8 BL 0x1C16CB8
	0x03C4FFCC MOV X4, X0
	0x03C4FFD0 STR X0, [X23 + 0xFD8]
	0x03C4FFD4 AND W3, W20, 0x1
	0x03C4FFD8 MOV X0, X22
	0x03C4FFDC MOV X1, X21
	0x03C4FFE0 MOV W2, W19
	0x03C4FFE4 LDP X20, X19, [X31 + 0x30]
	0x03C4FFE8 LDP X22, X21, [X31 + 0x20]
	0x03C4FFEC LDP X30, X23, [X31 + 0x10]
	0x03C4FFF0 MOV V0.16B, V8.16B
	0x03C4FFF4 LDR V8, [X31], #0x40
	0x03C4FFF8 BR X4
	0x03C4FFFC STR X30, [X31 - 0x30]!
	0x03C50000 STP X22, X21, [X31 + 0x10]
	0x03C50004 STP X20, X19, [X31 + 0x20]
	0x03C50008 ADRP X22, 0x795000
	0x03C5000C LDR X3, [X22 + 0xFE0]
	0x03C50010 MOV W20, W2
	0x03C50014 MOV X19, X1
	0x03C50018 MOV X21, X0
	0x03C5001C CBNZ X3, 0x3C50034
	0x03C50020 ADRP X0, 0xFFFFFFFFFCEAF000
	0x03C50024 ADD X0, X0, 0x658
	0x03C50028 BL 0x1C16CB8
	0x03C5002C MOV X3, X0
	0x03C50030 STR X0, [X22 + 0xFE0]
	0x03C50034 AND W2, W20, 0x1
	0x03C50038 MOV X0, X21
	0x03C5003C MOV X1, X19
	0x03C50040 LDP X20, X19, [X31 + 0x20]
	0x03C50044 LDP X22, X21, [X31 + 0x10]
	0x03C50048 LDR X30, [X31], #0x30
	0x03C5004C BR X3
	0x03C50050 STP X30, X19, [X31 - 0x10]!
	0x03C50054 ADD W8, W1, W1, 0x3, LSL
	0x03C50058 ADD W8, W8, W2
	0x03C5005C CMP W8, 0x1A
	0x03C50060 B.HI 0x3C50154
	0x03C50064 ADRP X9, 0xFFFFFFFFFCF47000
	0x03C50068 ADD X9, X9, 0xE03
	0x03C5006C ADR X10, 0x10

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X26, 0x797000
	014 Move X27, 0x4A5000
	015 Move W8, [X26+3913]
	016 Move X27, [X27+1432]
	017 Move X19, X6
	018 Move W20, W5
	019 Move W24, W4
	020 Move X21, X3
	021 Move X25, X2
	022 Move X22, X1
	023 Move X23, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0x4A5000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0x4A5000
	032 Move X0, [X0+1880]
	033 Call 0x1C17CF4
	034 Move X0, 0x4A5000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move X0, 0x511000
	038 Move X0, [X0+3232]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X26+3913], W8
	042 Move X0, [X27]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X22
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Equality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {166}
	055 Move X26, 0x797000
	056 Move X8, [X26+3760]
	057 Compare X8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, -51568640
	060 Add X0, X0, 3509
	061 Call 0x1C17CB8
	062 Move X8, X0
	063 Move [X26+3760], X0
	064 Move W2, 2
	065 Move X0, X23
	066 Move W1, W31
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move TEMP, X24
	069 And TEMP, TEMP, -2147483648
	070 Compare TEMP, -2147483648
	071 JumpIfEqual {84}
	072 Compare X22, 0
	073 JumpIfEqual {173}
	074 Move X0, X22
	075 Move X1, X31
	076 Call Mesh.get_subMeshCount, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X22
	079 Move X1, X31
	080 Call Mesh.get_subMeshCount, X0
	081 Subtract W8, W0, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSEL not yet implemented."
	084 Compare X22, 0
	085 JumpIfEqual {173}
	086 Move X0, X22
	087 Move X1, X31
	088 Call Mesh.get_subMeshCount, X0
	089 Move W24, W31
	090 Move X8, 0x4A5000
	091 Move X8, [X8+1880]
	092 Move X26, 0x511000
	093 Move X28, 0x4A5000
	094 Add X1, X31, 76
	095 Move X0, [X8]
	096 Move X26, [X26+3232]
	097 Move X28, [X28+2600]
	098 Move [X31+76], W24
	099 Call 0x1C17E04
	100 Move X8, [X26]
	101 Move X1, X0
	102 Move X2, X31
	103 Move X0, X8
	104 Call String.Format, X0, X1
	105 Move X8, [X28]
	106 Move X26, X0
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Move X0, X26
	113 Move X1, X31
	114 Call Debug.LogWarning, X0
	115 Move X0, [X27]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X21
	121 Move X1, X31
	122 Move X2, X31
	123 Call Object.op_Equality, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {174}
	128 Move V0, [X25+32]
	129 Move V1, [X25+48]
	130 Move V2, [X25]
	131 Move V3, [X25+16]
	132 Move X25, 0x797000
	133 Move X8, [X25+3928]
	134 Move [X31+32], V0
	135 Move [X31+40], V1
	136 Move [X31], V2
	137 Move [X31+8], V3
	138 Compare X8, 0
	139 JumpIfNotEqual {145}
	140 Move X0, -51548160
	141 Add X0, X0, 687
	142 Call 0x1C17CB8
	143 Move X8, X0
	144 Move [X25+3928], X0
	145 Add X2, X31, 0
	146 Move X0, X23
	147 Move X1, X22
	148 Move X3, X21
	149 Move W4, W24
	150 Move W5, W20
	151 Move X6, X19
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X20, [X31+144]
	154 Move X19, [X31+152]
	155 Move X22, [X31+128]
	156 Move X21, [X31+136]
	157 Move X24, [X31+112]
	158 Move X23, [X31+120]
	159 Move X26, [X31+96]
	160 Move X25, [X31+104]
	161 Move X28, [X31+80]
	162 Move X27, [X31+88]
	163 Move X30, [X31+64]
	164 Add X31, X31, 160
	165 Return 
	166 Move X0, 0x4A9000
	167 Move X0, [X0+1320]
	168 Call 0x1C17D08
	169 Call 0x1C17F10
	170 Move X19, X0
	171 Move X0, 0x4FE000
	172 Move X0, [X0+3728]
	173 Call 0x1C17F20
	174 Move X0, 0x4A9000
	175 Move X0, [X0+1320]
	176 Call 0x1C17D08
	177 Call 0x1C17F10
	178 Move X19, X0
	179 Move X0, 0x50F000
	180 Move X0, [X0+3384]
	181 Call 0x1C17D08
	182 Move X1, X0
	183 Move X0, X19
	184 Move X2, X31
	185 Call ArgumentNullException..ctor, X0, X1
	186 Move X0, 0x510000
	187 Move X0, [X0+3240]
	188 Call 0x1C17D08
	189 Move X1, X0
	190 Move X0, X19
	191 Call 0x1C17DEC

Method: System.Void DrawMesh(UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 submeshIndex, System.Int32 shaderPass)

Disassembly:
	0x03C50070 LDRB W11, [X9, X8, LSL]
	0x03C50074 ADD X10, X10, X11, 0x2, LSL
	0x03C50078 BR X10
	0x03C5007C ADD X0, X0, 0x4
	0x03C50080 B 0x3C50148
	0x03C50084 ADD X0, X0, 0x8
	0x03C50088 B 0x3C50148
	0x03C5008C ADD X0, X0, 0xC
	0x03C50090 B 0x3C50148
	0x03C50094 ADD X0, X0, 0x10
	0x03C50098 B 0x3C50148
	0x03C5009C ADD X0, X0, 0x14

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move V1, [X2+32]
	004 Move V0, [X2+48]
	005 Move V3, [X2]
	006 Move V2, [X2+16]
	007 Add X2, X31, 0
	008 Move X6, X31
	009 Move [X31+32], V1
	010 Move [X31+40], V0
	011 Move [X31], V3
	012 Move [X31+8], V2
	013 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5, X6
	014 Move X30, [X31+64]
	015 Add X31, X31, 80
	016 Return 

Method: System.Void DrawMesh(UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 submeshIndex)

Disassembly:
	0x03C500A0 B 0x3C50148
	0x03C500A4 ADD X0, X0, 0x18
	0x03C500A8 B 0x3C50148
	0x03C500AC ADD X0, X0, 0x1C
	0x03C500B0 B 0x3C50148
	0x03C500B4 ADD X0, X0, 0x20
	0x03C500B8 B 0x3C50148
	0x03C500BC ADD X0, X0, 0x24
	0x03C500C0 B 0x3C50148
	0x03C500C4 ADD X0, X0, 0x28
	0x03C500C8 B 0x3C50148
	0x03C500CC ADD X0, X0, 0x2C
	0x03C500D0 B 0x3C50148

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move V1, [X2+32]
	004 Move V0, [X2+48]
	005 Move V3, [X2]
	006 Move V2, [X2+16]
	007 Add X2, X31, 0
	008 Move TEMP, 0
	009 Not TEMP
	010 Move W5, TEMP
	011 Move X6, X31
	012 Move [X31+32], V1
	013 Move [X31+40], V0
	014 Move [X31], V3
	015 Move [X31+8], V2
	016 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5, X6
	017 Move X30, [X31+64]
	018 Add X31, X31, 80
	019 Return 

Method: System.Void DrawMesh(UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material)

Disassembly:
	0x03C500D4 ADD X0, X0, 0x30
	0x03C500D8 B 0x3C50148
	0x03C500DC ADD X0, X0, 0x34
	0x03C500E0 B 0x3C50148
	0x03C500E4 ADD X0, X0, 0x38
	0x03C500E8 B 0x3C50148
	0x03C500EC ADD X0, X0, 0x3C
	0x03C500F0 B 0x3C50148
	0x03C500F4 ADD X0, X0, 0x40
	0x03C500F8 B 0x3C50148
	0x03C500FC ADD X0, X0, 0x44
	0x03C50100 B 0x3C50148
	0x03C50104 ADD X0, X0, 0x48
	0x03C50108 B 0x3C50148

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move V1, [X2+32]
	004 Move V0, [X2+48]
	005 Move V3, [X2]
	006 Move V2, [X2+16]
	007 Add X2, X31, 0
	008 Move TEMP, 0
	009 Not TEMP
	010 Move W5, TEMP
	011 Move W4, W31
	012 Move X6, X31
	013 Move [X31+32], V1
	014 Move [X31+40], V0
	015 Move [X31], V3
	016 Move [X31+8], V2
	017 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5, X6
	018 Move X30, [X31+64]
	019 Add X31, X31, 80
	020 Return 

Method: System.Void DrawRenderer(UnityEngine.Renderer renderer, UnityEngine.Material material, System.Int32 submeshIndex, System.Int32 shaderPass)

Disassembly:
	0x03C5010C ADD X0, X0, 0x4C
	0x03C50110 B 0x3C50148
	0x03C50114 ADD X0, X0, 0x50
	0x03C50118 B 0x3C50148
	0x03C5011C ADD X0, X0, 0x54
	0x03C50120 B 0x3C50148
	0x03C50124 ADD X0, X0, 0x58
	0x03C50128 B 0x3C50148
	0x03C5012C ADD X0, X0, 0x5C
	0x03C50130 B 0x3C50148
	0x03C50134 ADD X0, X0, 0x60
	0x03C50138 B 0x3C50148
	0x03C5013C ADD X0, X0, 0x64
	0x03C50140 B 0x3C50148
	0x03C50144 ADD X0, X0, 0x68
	0x03C50148 LDR V0, [X0]
	0x03C5014C LDP X30, X19, [X31], #0x10
	0x03C50150 RET
	0x03C50154 ADRP X0, 0x4AD000
	0x03C50158 LDR X0, [X0 + 0xF78]
	0x03C5015C BL 0x1C16D08
	0x03C50160 BL 0x1C16F10
	0x03C50164 MOV X19, X0
	0x03C50168 ADRP X0, 0x50F000
	0x03C5016C LDR X0, [X0 + 0xCD8]
	0x03C50170 BL 0x1C16D08
	0x03C50174 MOV X1, X0
	0x03C50178 MOV X0, X19
	0x03C5017C MOV X2, X31
	0x03C50180 BL 0x3379B6C
	0x03C50184 ADRP X0, 0x50F000
	0x03C50188 LDR X0, [X0 + 0xCE0]
	0x03C5018C BL 0x1C16D08
	0x03C50190 MOV X1, X0
	0x03C50194 MOV X0, X19
	0x03C50198 BL 0x1C16DEC
	0x03C5019C STP X30, X19, [X31 - 0x10]!
	0x03C501A0 ADD W8, W1, W1, 0x3, LSL
	0x03C501A4 ADD W8, W8, W2
	0x03C501A8 CMP W8, 0x1A
	0x03C501AC B.HI 0x3C502A0
	0x03C501B0 ADRP X9, 0xFFFFFFFFFCF47000
	0x03C501B4 ADD X9, X9, 0xE03
	0x03C501B8 ADR X10, 0x10
	0x03C501BC LDRB W11, [X9, X8, LSL]
	0x03C501C0 ADD X10, X10, X11, 0x2, LSL
	0x03C501C4 BR X10
	0x03C501C8 ADD X0, X0, 0x4
	0x03C501CC B 0x3C50294
	0x03C501D0 ADD X0, X0, 0x8
	0x03C501D4 B 0x3C50294
	0x03C501D8 ADD X0, X0, 0xC
	0x03C501DC B 0x3C50294
	0x03C501E0 ADD X0, X0, 0x10
	0x03C501E4 B 0x3C50294
	0x03C501E8 ADD X0, X0, 0x14
	0x03C501EC B 0x3C50294
	0x03C501F0 ADD X0, X0, 0x18
	0x03C501F4 B 0x3C50294
	0x03C501F8 ADD X0, X0, 0x1C
	0x03C501FC B 0x3C50294
	0x03C50200 ADD X0, X0, 0x20
	0x03C50204 B 0x3C50294
	0x03C50208 ADD X0, X0, 0x24
	0x03C5020C B 0x3C50294
	0x03C50210 ADD X0, X0, 0x28
	0x03C50214 B 0x3C50294
	0x03C50218 ADD X0, X0, 0x2C
	0x03C5021C B 0x3C50294
	0x03C50220 ADD X0, X0, 0x30
	0x03C50224 B 0x3C50294
	0x03C50228 ADD X0, X0, 0x34
	0x03C5022C B 0x3C50294
	0x03C50230 ADD X0, X0, 0x38
	0x03C50234 B 0x3C50294
	0x03C50238 ADD X0, X0, 0x3C
	0x03C5023C B 0x3C50294
	0x03C50240 ADD X0, X0, 0x40
	0x03C50244 B 0x3C50294
	0x03C50248 ADD X0, X0, 0x44
	0x03C5024C B 0x3C50294
	0x03C50250 ADD X0, X0, 0x48
	0x03C50254 B 0x3C50294
	0x03C50258 ADD X0, X0, 0x4C
	0x03C5025C B 0x3C50294
	0x03C50260 ADD X0, X0, 0x50
	0x03C50264 B 0x3C50294
	0x03C50268 ADD X0, X0, 0x54
	0x03C5026C B 0x3C50294
	0x03C50270 ADD X0, X0, 0x58
	0x03C50274 B 0x3C50294
	0x03C50278 ADD X0, X0, 0x5C
	0x03C5027C B 0x3C50294
	0x03C50280 ADD X0, X0, 0x60
	0x03C50284 B 0x3C50294
	0x03C50288 ADD X0, X0, 0x64
	0x03C5028C B 0x3C50294
	0x03C50290 ADD X0, X0, 0x68
	0x03C50294 STR S0, [X0]
	0x03C50298 LDP X30, X19, [X31], #0x10
	0x03C5029C RET
	0x03C502A0 ADRP X0, 0x4AD000
	0x03C502A4 LDR X0, [X0 + 0xF78]
	0x03C502A8 BL 0x1C16D08
	0x03C502AC BL 0x1C16F10
	0x03C502B0 MOV X19, X0
	0x03C502B4 ADRP X0, 0x50F000
	0x03C502B8 LDR X0, [X0 + 0xCD8]
	0x03C502BC BL 0x1C16D08
	0x03C502C0 MOV X1, X0
	0x03C502C4 MOV X0, X19
	0x03C502C8 MOV X2, X31
	0x03C502CC BL 0x3379B6C
	0x03C502D0 ADRP X0, 0x50F000
	0x03C502D4 LDR X0, [X0 + 0xCE8]
	0x03C502D8 BL 0x1C16D08
	0x03C502DC MOV X1, X0
	0x03C502E0 MOV X0, X19
	0x03C502E4 BL 0x1C16DEC
	0x03C502E8 STP X30, X21, [X31 - 0x20]!
	0x03C502EC STP X20, X19, [X31 + 0x10]
	0x03C502F0 MOV X1, X31
	0x03C502F4 MOV X19, X0
	0x03C502F8 BL 0x338FE0C
	0x03C502FC MOV W20, W0
	0x03C50300 ADD X0, X19, 0x4
	0x03C50304 MOV X1, X31
	0x03C50308 BL 0x338FE0C
	0x03C5030C MOVZ W21, 0x17
	0x03C50310 MADD W20, W20, W21, W0
	0x03C50314 ADD X0, X19, 0x8

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x796000
	011 Move X24, 0x4A4000
	012 Move W8, [X25+3914]
	013 Move X24, [X24+1432]
	014 Move W19, W4
	015 Move W23, W3
	016 Move X20, X2
	017 Move X21, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x4A4000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0x4A4000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move X0, 0x4A4000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x510000
	033 Move X0, [X0+3232]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X25+3914], W8
	037 Move X0, [X24]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {131}
	050 Move X25, 0x796000
	051 Move X8, [X25+3760]
	052 Compare X8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, -51572736
	055 Add X0, X0, 3509
	056 Call 0x1C17CB8
	057 Move X8, X0
	058 Move [X25+3760], X0
	059 Move W2, 2
	060 Move X0, X22
	061 Move W1, W31
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move TEMP, X23
	064 And TEMP, TEMP, -2147483648
	065 Compare TEMP, -2147483648
	066 JumpIfNotEqual {93}
	067 Move X8, 0x4A4000
	068 Move X8, [X8+1880]
	069 Add X1, X31, 12
	070 Move [X31+12], W31
	071 Move X0, [X8]
	072 Call 0x1C17E04
	073 Move X8, 0x510000
	074 Move X8, [X8+3232]
	075 Move X1, X0
	076 Move X2, X31
	077 Move X8, [X8]
	078 Move X0, X8
	079 Call String.Format, X0, X1
	080 Move X8, 0x4A4000
	081 Move X8, [X8+2600]
	082 Move X23, X0
	083 Move X8, [X8]
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move X0, X23
	090 Move X1, X31
	091 Call Debug.LogWarning, X0
	092 Move W23, W31
	093 Move X0, [X24]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move X0, X20
	099 Move X1, X31
	100 Move X2, X31
	101 Call Object.op_Equality, X0, X1
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {138}
	106 Move X24, 0x796000
	107 Move X8, [X24+3648]
	108 Compare X8, 0
	109 JumpIfNotEqual {115}
	110 Move X0, -51531776
	111 Add X0, X0, 3115
	112 Call 0x1C17CB8
	113 Move X8, X0
	114 Move [X24+3648], X0
	115 Move X0, X22
	116 Move X1, X21
	117 Move X2, X20
	118 Move W3, W23
	119 Move W4, W19
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X20, [X31+64]
	122 Move X19, [X31+72]
	123 Move X22, [X31+48]
	124 Move X21, [X31+56]
	125 Move X24, [X31+32]
	126 Move X23, [X31+40]
	127 Move X30, [X31+16]
	128 Move X25, [X31+24]
	129 Add X31, X31, 80
	130 Return 
	131 Move X0, 0x4A9000
	132 Move X0, [X0+1320]
	133 Call 0x1C17D08
	134 Call 0x1C17F10
	135 Move X19, X0
	136 Move X0, 0x510000
	137 Move X0, [X0+3248]
	138 Move X0, 0x4A9000
	139 Move X0, [X0+1320]
	140 Call 0x1C17D08
	141 Call 0x1C17F10
	142 Move X19, X0
	143 Move X0, 0x50F000
	144 Move X0, [X0+3384]
	145 Call 0x1C17D08
	146 Move X1, X0
	147 Move X0, X19
	148 Move X2, X31
	149 Call ArgumentNullException..ctor, X0, X1
	150 Move X0, 0x510000
	151 Move X0, [X0+3256]
	152 Call 0x1C17D08
	153 Move X1, X0
	154 Move X0, X19
	155 Call 0x1C17DEC

Method: System.Void DrawRenderer(UnityEngine.Renderer renderer, UnityEngine.Material material, System.Int32 submeshIndex)

Disassembly:
	0x03C50318 MOV X1, X31
	0x03C5031C BL 0x338FE0C

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W4, TEMP
	004 Call CommandBuffer.DrawRenderer, X0, X1, X2, X3, X4
	005 Return 

Method: System.Void DrawRenderer(UnityEngine.Renderer renderer, UnityEngine.Material material)

Disassembly:
	0x03C50320 MADD W20, W20, W21, W0
	0x03C50324 ADD X0, X19, 0xC
	0x03C50328 MOV X1, X31

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W4, TEMP
	004 Move W3, W31
	005 Call CommandBuffer.DrawRenderer, X0, X1, X2, X3, X4
	006 Return 

Method: System.Void DrawRendererList(UnityEngine.Rendering.RendererList rendererList)

Disassembly:
	0x03C5032C BL 0x338FE0C
	0x03C50330 MADD W20, W20, W21, W0
	0x03C50334 ADD X0, X19, 0x10
	0x03C50338 MOV X1, X31
	0x03C5033C BL 0x338FE0C
	0x03C50340 MADD W20, W20, W21, W0
	0x03C50344 ADD X0, X19, 0x14
	0x03C50348 MOV X1, X31
	0x03C5034C BL 0x338FE0C
	0x03C50350 MADD W20, W20, W21, W0
	0x03C50354 ADD X0, X19, 0x18
	0x03C50358 MOV X1, X31
	0x03C5035C BL 0x338FE0C
	0x03C50360 MADD W20, W20, W21, W0
	0x03C50364 ADD X0, X19, 0x1C
	0x03C50368 MOV X1, X31
	0x03C5036C BL 0x338FE0C
	0x03C50370 MADD W20, W20, W21, W0
	0x03C50374 ADD X0, X19, 0x20
	0x03C50378 MOV X1, X31
	0x03C5037C BL 0x338FE0C
	0x03C50380 MADD W20, W20, W21, W0
	0x03C50384 ADD X0, X19, 0x24

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0x796000
	006 Move V0, [X1]
	007 Move X9, [X1+16]
	008 Move X8, [X20+3936]
	009 Move X19, X0
	010 Move [X31], V0
	011 Move [X31+16], X9
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51748864
	015 Add X0, X0, 1576
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+3936], X0
	019 Add X1, X31, 0
	020 Move X0, X19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X20, [X31+48]
	023 Move X19, [X31+56]
	024 Move X30, [X31+32]
	025 Add X31, X31, 64
	026 Return 

Method: System.Void DrawProcedural(UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 shaderPass, UnityEngine.MeshTopology topology, System.Int32 vertexCount, System.Int32 instanceCount, UnityEngine.MaterialPropertyBlock properties)

Disassembly:
	0x03C50388 MOV X1, X31
	0x03C5038C BL 0x338FE0C
	0x03C50390 MADD W20, W20, W21, W0
	0x03C50394 ADD X0, X19, 0x28
	0x03C50398 MOV X1, X31
	0x03C5039C BL 0x338FE0C
	0x03C503A0 MADD W20, W20, W21, W0
	0x03C503A4 ADD X0, X19, 0x2C
	0x03C503A8 MOV X1, X31
	0x03C503AC BL 0x338FE0C
	0x03C503B0 MADD W20, W20, W21, W0
	0x03C503B4 ADD X0, X19, 0x30
	0x03C503B8 MOV X1, X31
	0x03C503BC BL 0x338FE0C
	0x03C503C0 MADD W20, W20, W21, W0
	0x03C503C4 ADD X0, X19, 0x34
	0x03C503C8 MOV X1, X31
	0x03C503CC BL 0x338FE0C
	0x03C503D0 MADD W20, W20, W21, W0
	0x03C503D4 ADD X0, X19, 0x38
	0x03C503D8 MOV X1, X31
	0x03C503DC BL 0x338FE0C
	0x03C503E0 MADD W20, W20, W21, W0
	0x03C503E4 ADD X0, X19, 0x3C
	0x03C503E8 MOV X1, X31
	0x03C503EC BL 0x338FE0C
	0x03C503F0 MADD W20, W20, W21, W0
	0x03C503F4 ADD X0, X19, 0x40
	0x03C503F8 MOV X1, X31
	0x03C503FC BL 0x338FE0C
	0x03C50400 MADD W20, W20, W21, W0
	0x03C50404 ADD X0, X19, 0x44
	0x03C50408 MOV X1, X31
	0x03C5040C BL 0x338FE0C
	0x03C50410 MADD W20, W20, W21, W0
	0x03C50414 ADD X0, X19, 0x48
	0x03C50418 MOV X1, X31
	0x03C5041C BL 0x338FE0C
	0x03C50420 MADD W20, W20, W21, W0
	0x03C50424 ADD X0, X19, 0x4C
	0x03C50428 MOV X1, X31
	0x03C5042C BL 0x338FE0C
	0x03C50430 MADD W20, W20, W21, W0
	0x03C50434 ADD X0, X19, 0x50
	0x03C50438 MOV X1, X31
	0x03C5043C BL 0x338FE0C
	0x03C50440 MADD W20, W20, W21, W0
	0x03C50444 ADD X0, X19, 0x54
	0x03C50448 MOV X1, X31
	0x03C5044C BL 0x338FE0C
	0x03C50450 MADD W20, W20, W21, W0
	0x03C50454 ADD X0, X19, 0x58
	0x03C50458 MOV X1, X31
	0x03C5045C BL 0x338FE0C
	0x03C50460 MADD W20, W20, W21, W0
	0x03C50464 ADD X0, X19, 0x5C
	0x03C50468 MOV X1, X31
	0x03C5046C BL 0x338FE0C
	0x03C50470 MADD W20, W20, W21, W0
	0x03C50474 ADD X0, X19, 0x60
	0x03C50478 MOV X1, X31
	0x03C5047C BL 0x338FE0C
	0x03C50480 MADD W20, W20, W21, W0
	0x03C50484 ADD X0, X19, 0x64
	0x03C50488 MOV X1, X31
	0x03C5048C BL 0x338FE0C
	0x03C50490 MADD W20, W20, W21, W0
	0x03C50494 ADD X0, X19, 0x68
	0x03C50498 MOV X1, X31
	0x03C5049C BL 0x338FE0C
	0x03C504A0 MADD W8, W20, W21, W0
	0x03C504A4 LDP X20, X19, [X31 + 0x10]
	0x03C504A8 MOVZ W9, 0xB737
	0x03C504AC MOVK W9, 0xF4460000
	0x03C504B0 ADD W0, W8, W9
	0x03C504B4 LDP X30, X21, [X31], #0x20
	0x03C504B8 RET
	0x03C504BC SUB X31, X31, 0x180
	0x03C504C0 STR X29, [X31 + 0x150]
	0x03C504C4 STP X30, X21, [X31 + 0x160]
	0x03C504C8 STP X20, X19, [X31 + 0x170]
	0x03C504CC ADRP X21, 0x795000
	0x03C504D0 LDRB W8, [X21 + 0xFE8]
	0x03C504D4 MOV X20, X1
	0x03C504D8 MOV X19, X0
	0x03C504DC TBNZ X8, 0x0, 0x3C504F4
	0x03C504E0 ADRP X0, 0x50F000
	0x03C504E4 LDR X0, [X0 + 0xCF0]
	0x03C504E8 BL 0x1C16CF4
	0x03C504EC MOVZ W8, 0x1
	0x03C504F0 STRB W8, [X21 + 0xFE8]
	0x03C504F4 CBZ X20, 0x3C50510
	0x03C504F8 ADRP X8, 0x50F000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X27, 0x796000
	014 Move X28, 0x4A4000
	015 Move W8, [X27+3915]
	016 Move X28, [X28+1432]
	017 Move X19, X7
	018 Move W20, W6
	019 Move W21, W5
	020 Move W22, W4
	021 Move W23, W3
	022 Move X24, X2
	023 Move X26, X1
	024 Move X25, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x4A4000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+3915], W8
	034 Move X0, [X28]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X24
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {99}
	047 Move X27, 0x796000
	048 Move X8, [X27+3760]
	049 Compare X8, 0
	050 JumpIfNotEqual {56}
	051 Move X0, -51572736
	052 Add X0, X0, 3509
	053 Call 0x1C17CB8
	054 Move X8, X0
	055 Move [X27+3760], X0
	056 Move W2, 2
	057 Move X0, X25
	058 Move W1, W31
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move V0, [X26+32]
	061 Move V1, [X26+48]
	062 Move V3, [X26]
	063 Move V2, [X26+16]
	064 Move X26, 0x796000
	065 Move X8, [X26+3944]
	066 Move [X31+32], V0
	067 Move [X31+40], V1
	068 Move [X31], V3
	069 Move [X31+8], V2
	070 Compare X8, 0
	071 JumpIfNotEqual {77}
	072 Move X0, -51765248
	073 Add X0, X0, 1042
	074 Call 0x1C17CB8
	075 Move X8, X0
	076 Move [X26+3944], X0
	077 Add X1, X31, 0
	078 Move X0, X25
	079 Move X2, X24
	080 Move W3, W23
	081 Move W4, W22
	082 Move W5, W21
	083 Move W6, W20
	084 Move X7, X19
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X20, [X31+144]
	087 Move X19, [X31+152]
	088 Move X22, [X31+128]
	089 Move X21, [X31+136]
	090 Move X24, [X31+112]
	091 Move X23, [X31+120]
	092 Move X26, [X31+96]
	093 Move X25, [X31+104]
	094 Move X28, [X31+80]
	095 Move X27, [X31+88]
	096 Move X30, [X31+64]
	097 Add X31, X31, 160
	098 Return 
	099 Move X0, 0x4A9000
	100 Move X0, [X0+1320]
	101 Call 0x1C17D08
	102 Call 0x1C17F10
	103 Move X19, X0
	104 Move X0, 0x50F000
	105 Move X0, [X0+3384]
	106 Call 0x1C17D08
	107 Move X1, X0
	108 Move X0, X19
	109 Move X2, X31
	110 Call ArgumentNullException..ctor, X0, X1
	111 Move X0, 0x510000
	112 Move X0, [X0+3264]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Call 0x1C17DEC

Method: System.Void DrawProcedural(UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 shaderPass, UnityEngine.MeshTopology topology, System.Int32 vertexCount, System.Int32 instanceCount)

Disassembly:
	0x03C504FC LDR X8, [X8 + 0xCF0]
	0x03C50500 LDR X9, [X20]
	0x03C50504 LDR X8, [X8]
	0x03C50508 CMP X9, X8
	0x03C5050C B.EQ 0x3C50518
	0x03C50510 MOV W0, W31
	0x03C50514 B 0x3C5055C
	0x03C50518 MOV X0, X20
	0x03C5051C BL 0x1C16E08
	0x03C50520 MOV X1, X0
	0x03C50524 ADD X0, X31, 0x0
	0x03C50528 MOVZ W2, 0x6C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+80], X30
	003 Move V1, [X1+32]
	004 Move V0, [X1+48]
	005 Move V3, [X1]
	006 Move V2, [X1+16]
	007 Add X1, X31, 16
	008 Move X7, X31
	009 Move [X31+48], V1
	010 Move [X31+56], V0
	011 Move [X31+16], V3
	012 Move [X31+24], V2
	013 Call CommandBuffer.DrawProcedural, X0, X1, X2, X3, X4, X5, X6, X7
	014 Move X30, [X31+80]
	015 Add X31, X31, 96
	016 Return 

Method: System.Void DrawMeshInstanced(UnityEngine.Mesh mesh, System.Int32 submeshIndex, UnityEngine.Material material, System.Int32 shaderPass, UnityEngine.Matrix4x4[] matrices, System.Int32 count, UnityEngine.MaterialPropertyBlock properties)

Disassembly:
	0x03C5052C BL 0x3EB1AC0
	0x03C50530 ADD X0, X31, 0xE0
	0x03C50534 MOVZ W2, 0x6C
	0x03C50538 MOV X1, X19
	0x03C5053C BL 0x3EB1AC0
	0x03C50540 ADD X0, X31, 0x70
	0x03C50544 ADD X1, X31, 0x0
	0x03C50548 MOVZ W2, 0x6C
	0x03C5054C BL 0x3EB1AC0
	0x03C50550 ADD X0, X31, 0xE0
	0x03C50554 ADD X1, X31, 0x70
	0x03C50558 BL 0x3C505BC
	0x03C5055C LDP X20, X19, [X31 + 0x170]
	0x03C50560 LDP X30, X21, [X31 + 0x160]
	0x03C50564 LDR X29, [X31 + 0x150]
	0x03C50568 AND W0, W0, 0x1
	0x03C5056C ADD X31, X31, 0x180
	0x03C50570 RET
	0x03C50574 SUB X31, X31, 0xF0
	0x03C50578 STP X30, X19, [X31 + 0xE0]
	0x03C5057C MOV X19, X1
	0x03C50580 MOV X1, X0
	0x03C50584 ADD X0, X31, 0x70
	0x03C50588 MOVZ W2, 0x6C
	0x03C5058C BL 0x3EB1AC0
	0x03C50590 ADD X0, X31, 0x0
	0x03C50594 MOVZ W2, 0x6C
	0x03C50598 MOV X1, X19
	0x03C5059C BL 0x3EB1AC0
	0x03C505A0 ADD X0, X31, 0x70
	0x03C505A4 ADD X1, X31, 0x0
	0x03C505A8 BL 0x3C505BC
	0x03C505AC LDP X30, X19, [X31 + 0xE0]
	0x03C505B0 AND W0, W0, 0x1
	0x03C505B4 ADD X31, X31, 0xF0
	0x03C505B8 RET
	0x03C505BC LDR V0, [X0]
	0x03C505C0 LDR V1, [X1]
	0x03C505C4 FCMP S0, S1
	0x03C505C8 B.NE 0x3C50770
	0x03C505CC LDR V0, [X0 + 0x4]
	0x03C505D0 LDR V1, [X1 + 0x4]
	0x03C505D4 FCMP S0, S1
	0x03C505D8 B.NE 0x3C50770
	0x03C505DC LDR V0, [X0 + 0x8]
	0x03C505E0 LDR V1, [X1 + 0x8]
	0x03C505E4 FCMP S0, S1
	0x03C505E8 B.NE 0x3C50770
	0x03C505EC LDR V0, [X0 + 0xC]
	0x03C505F0 LDR V1, [X1 + 0xC]
	0x03C505F4 FCMP S0, S1
	0x03C505F8 B.NE 0x3C50770
	0x03C505FC LDR V0, [X0 + 0x10]
	0x03C50600 LDR V1, [X1 + 0x10]
	0x03C50604 FCMP S0, S1
	0x03C50608 B.NE 0x3C50770
	0x03C5060C LDR V0, [X0 + 0x14]
	0x03C50610 LDR V1, [X1 + 0x14]
	0x03C50614 FCMP S0, S1
	0x03C50618 B.NE 0x3C50770
	0x03C5061C LDR V0, [X0 + 0x18]
	0x03C50620 LDR V1, [X1 + 0x18]
	0x03C50624 FCMP S0, S1
	0x03C50628 B.NE 0x3C50770
	0x03C5062C LDR V0, [X0 + 0x1C]
	0x03C50630 LDR V1, [X1 + 0x1C]
	0x03C50634 FCMP S0, S1
	0x03C50638 B.NE 0x3C50770
	0x03C5063C LDR V0, [X0 + 0x20]
	0x03C50640 LDR V1, [X1 + 0x20]
	0x03C50644 FCMP S0, S1
	0x03C50648 B.NE 0x3C50770
	0x03C5064C LDR V0, [X0 + 0x24]
	0x03C50650 LDR V1, [X1 + 0x24]
	0x03C50654 FCMP S0, S1
	0x03C50658 B.NE 0x3C50770
	0x03C5065C LDR V0, [X0 + 0x28]
	0x03C50660 LDR V1, [X1 + 0x28]
	0x03C50664 FCMP S0, S1
	0x03C50668 B.NE 0x3C50770
	0x03C5066C LDR V0, [X0 + 0x2C]
	0x03C50670 LDR V1, [X1 + 0x2C]
	0x03C50674 FCMP S0, S1
	0x03C50678 B.NE 0x3C50770
	0x03C5067C LDR V0, [X0 + 0x30]
	0x03C50680 LDR V1, [X1 + 0x30]
	0x03C50684 FCMP S0, S1
	0x03C50688 B.NE 0x3C50770
	0x03C5068C LDR V0, [X0 + 0x34]
	0x03C50690 LDR V1, [X1 + 0x34]
	0x03C50694 FCMP S0, S1
	0x03C50698 B.NE 0x3C50770
	0x03C5069C LDR V0, [X0 + 0x38]
	0x03C506A0 LDR V1, [X1 + 0x38]
	0x03C506A4 FCMP S0, S1
	0x03C506A8 B.NE 0x3C50770
	0x03C506AC LDR V0, [X0 + 0x3C]
	0x03C506B0 LDR V1, [X1 + 0x3C]
	0x03C506B4 FCMP S0, S1
	0x03C506B8 B.NE 0x3C50770
	0x03C506BC LDR V0, [X0 + 0x40]
	0x03C506C0 LDR V1, [X1 + 0x40]
	0x03C506C4 FCMP S0, S1
	0x03C506C8 B.NE 0x3C50770
	0x03C506CC LDR V0, [X0 + 0x44]
	0x03C506D0 LDR V1, [X1 + 0x44]
	0x03C506D4 FCMP S0, S1
	0x03C506D8 B.NE 0x3C50770
	0x03C506DC LDR V0, [X0 + 0x48]
	0x03C506E0 LDR V1, [X1 + 0x48]
	0x03C506E4 FCMP S0, S1
	0x03C506E8 B.NE 0x3C50770
	0x03C506EC LDR V0, [X0 + 0x4C]
	0x03C506F0 LDR V1, [X1 + 0x4C]
	0x03C506F4 FCMP S0, S1
	0x03C506F8 B.NE 0x3C50770
	0x03C506FC LDR V0, [X0 + 0x50]
	0x03C50700 LDR V1, [X1 + 0x50]
	0x03C50704 FCMP S0, S1
	0x03C50708 B.NE 0x3C50770
	0x03C5070C LDR V0, [X0 + 0x54]
	0x03C50710 LDR V1, [X1 + 0x54]
	0x03C50714 FCMP S0, S1
	0x03C50718 B.NE 0x3C50770
	0x03C5071C LDR V0, [X0 + 0x58]
	0x03C50720 LDR V1, [X1 + 0x58]
	0x03C50724 FCMP S0, S1
	0x03C50728 B.NE 0x3C50770
	0x03C5072C LDR V0, [X0 + 0x5C]
	0x03C50730 LDR V1, [X1 + 0x5C]
	0x03C50734 FCMP S0, S1
	0x03C50738 B.NE 0x3C50770
	0x03C5073C LDR V0, [X0 + 0x60]
	0x03C50740 LDR V1, [X1 + 0x60]
	0x03C50744 FCMP S0, S1
	0x03C50748 B.NE 0x3C50770
	0x03C5074C LDR V0, [X0 + 0x64]
	0x03C50750 LDR V1, [X1 + 0x64]
	0x03C50754 FCMP S0, S1
	0x03C50758 B.NE 0x3C50770
	0x03C5075C LDR V0, [X0 + 0x68]
	0x03C50760 LDR V1, [X1 + 0x68]
	0x03C50764 FCMP S0, S1
	0x03C50768 CSET W0, EQ
	0x03C5076C RET
	0x03C50770 MOV W0, W31
	0x03C50774 RET
	0x03C50778 STR W1, [X0]
	0x03C5077C RET
	0x03C50780 STR W1, [X0 + 0x4]
	0x03C50784 RET
	0x03C50788 LDR W0, [X0 + 0x8]
	0x03C5078C RET
	0x03C50790 LDR X9, [X0 + 0x30]
	0x03C50794 LDP V1, V0, [X0 + 0x10]
	0x03C50798 STR X9, [X8 + 0x20]
	0x03C5079C STP V1, V0, [X8]
	0x03C507A0 RET
	0x03C507A4 LDR X8, [X1 + 0x20]
	0x03C507A8 LDP V1, V0, [X1]
	0x03C507AC STR X8, [X0 + 0x30]
	0x03C507B0 STP V1, V0, [X0 + 0x10]
	0x03C507B4 RET
	0x03C507B8 LDR X8, [X1 + 0x20]
	0x03C507BC LDP V1, V0, [X1]
	0x03C507C0 STR X8, [X0 + 0x30]
	0x03C507C4 STP V1, V0, [X0 + 0x10]
	0x03C507C8 TBZ X2, 0x0, 0x3C507DC
	0x03C507CC LDR W8, [X0]
	0x03C507D0 CMP W8, 0x1
	0x03C507D4 B.EQ 0x3C507DC
	0x03C507D8 STR W31, [X0]
	0x03C507DC TBZ X3, 0x0, 0x3C507F8
	0x03C507E0 LDR W8, [X0 + 0x4]
	0x03C507E4 SUB W8, W8, 0x1
	0x03C507E8 CMP W8, 0x2
	0x03C507EC CSET W8, CC
	0x03C507F0 UBFM W8, W8, 0x1F, 0x1E
	0x03C507F4 STR W8, [X0 + 0x4]
	0x03C507F8 RET
	0x03C507FC LDR X8, [X1 + 0x20]
	0x03C50800 LDR W9, [X0 + 0x4]
	0x03C50804 LDP V1, V0, [X1]
	0x03C50808 STR X8, [X0 + 0x58]
	0x03C5080C ORR W8, W9, 0x2
	0x03C50810 CMP W8, 0x2
	0x03C50814 STUR V0, [X0 + 0x48]
	0x03C50818 STUR V1, [X0 + 0x38]
	0x03C5081C B.EQ 0x3C50824
	0x03C50820 MOVZ W8, 0x1
	0x03C50824 STR W8, [X0 + 0x4]
	0x03C50828 RET
	0x03C5082C MOVZ W8, 0x1
	0x03C50830 STP S0, S1, [X0 + 0x60]
	0x03C50834 STP S2, S3, [X0 + 0x68]
	0x03C50838 STR S4, [X0 + 0x70]
	0x03C5083C STR W1, [X0 + 0x74]
	0x03C50840 STR W8, [X0]
	0x03C50844 RET
	0x03C50848 MOVI V0.2D, 0x0
	0x03C5084C ADRP X8, 0xFFFFFFFFFCE9D000
	0x03C50850 STUR V0, [X0 + 0x1C]
	0x03C50854 STUR V0, [X0 + 0xC]
	0x03C50858 STUR V0, [X0 + 0x2C]
	0x03C5085C STUR V0, [X0 + 0x3C]
	0x03C50860 STUR V0, [X0 + 0x4C]
	0x03C50864 STUR V0, [X0 + 0x5C]
	0x03C50868 STUR V0, [X0 + 0x68]
	0x03C5086C LDR V0, [X8 + 0x890]
	0x03C50870 ADRP X8, 0xFFFFFFFFFCE9C000
	0x03C50874 MOVZ W9, 0x3F800000
	0x03C50878 STR W1, [X0 + 0x8]
	0x03C5087C STR D0, [X0]
	0x03C50880 LDR V0, [X8 + 0xA9]
	0x03C50884 STR X31, [X0 + 0x20]
	0x03C50888 STR X31, [X0 + 0x48]
	0x03C5088C STP X31, X31, [X0 + 0x60]
	0x03C50890 STR V0, [X0 + 0x1]
	0x03C50894 STUR V0, [X0 + 0x28]
	0x03C50898 STUR V0, [X0 + 0x38]
	0x03C5089C STR V0, [X0 + 0x5]
	0x03C508A0 STR W9, [X0 + 0x70]
	0x03C508A4 RET
	0x03C508A8 SUB X31, X31, 0x120
	0x03C508AC STR D10, [X31 + 0xD0]
	0x03C508B0 STP D9, D8, [X31 + 0xE0]
	0x03C508B4 STP X29, X30, [X31 + 0xF0]
	0x03C508B8 STP X22, X21, [X31 + 0x100]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x796000
	013 Move W8, [X27+3916]
	014 Move X20, X7
	015 Move W21, W6
	016 Move X19, X5
	017 Move W22, W4
	018 Move X23, X3
	019 Move W24, W2
	020 Move X25, X1
	021 Move X26, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x4A8000
	027 Move X0, [X0+712]
	028 Call 0x1C17CF4
	029 Move X0, 0x4A4000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X27+3916], W8
	034 Move X0, X31
	035 Call SystemInfo.get_supportsInstancing
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {217}
	040 Move X27, 0x4A4000
	041 Move X27, [X27+1432]
	042 Move X0, [X27]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X25
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Equality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {229}
	055 Move TEMP, X24
	056 And TEMP, TEMP, -2147483648
	057 Compare TEMP, -2147483648
	058 JumpIfEqual {153}
	059 Compare X25, 0
	060 JumpIfEqual {236}
	061 Move X0, X25
	062 Move X1, X31
	063 Call Mesh.get_subMeshCount, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, [X27]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X23
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Equality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {237}
	078 Compare X19, 0
	079 JumpIfEqual {244}
	080 Move TEMP, X21
	081 And TEMP, TEMP, -2147483648
	082 Compare TEMP, -2147483648
	083 JumpIfEqual {170}
	084 Move X27, 0x4A8000
	085 Move X27, [X27+712]
	086 Move X0, [X27]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X27]
	092 Move X8, [X0+184]
	093 Move W9, [X19+24]
	094 Move W8, [X8]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 NotImplemented "Instruction CSEL not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X27, 0x796000
	099 Move X8, [X27+3760]
	100 Compare X8, 0
	101 JumpIfNotEqual {107}
	102 Move X0, -51572736
	103 Add X0, X0, 3509
	104 Call 0x1C17CB8
	105 Move X8, X0
	106 Move [X27+3760], X0
	107 Move W2, 2
	108 Move X0, X26
	109 Move W1, W31
	110 NotImplemented "Instruction BLR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X27, 0x796000
	113 Move X8, [X27+3656]
	114 Compare X8, 0
	115 JumpIfNotEqual {121}
	116 Move X0, -51613696
	117 Add X0, X0, 3788
	118 Call 0x1C17CB8
	119 Move X8, X0
	120 Move [X27+3656], X0
	121 Move X0, X26
	122 Move X1, X25
	123 Move W2, W24
	124 Move X3, X23
	125 Move W4, W22
	126 Move X5, X19
	127 Move W6, W21
	128 Move X7, X20
	129 Move X20, [X31+80]
	130 Move X19, [X31+88]
	131 Move X22, [X31+64]
	132 Move X21, [X31+72]
	133 Move X24, [X31+48]
	134 Move X23, [X31+56]
	135 Move X26, [X31+32]
	136 Move X25, [X31+40]
	137 Move X30, [X31+16]
	138 Move X27, [X31+24]
	139 Add X31, X31, 96
	140 CallNoReturn X8
	141 Move X20, [X31+80]
	142 Move X19, [X31+88]
	143 Move X22, [X31+64]
	144 Move X21, [X31+72]
	145 Move X24, [X31+48]
	146 Move X23, [X31+56]
	147 Move X26, [X31+32]
	148 Move X25, [X31+40]
	149 Move X30, [X31+16]
	150 Move X27, [X31+24]
	151 Add X31, X31, 96
	152 Return 
	153 Move X0, 0x4AC000
	154 Move X0, [X0+1888]
	155 Call 0x1C17D08
	156 Call 0x1C17F10
	157 Move X19, X0
	158 Move X0, 0x50F000
	159 Move X0, [X0+3344]
	160 Call 0x1C17D08
	161 Move X20, X0
	162 Move X0, 0x50F000
	163 Move X0, [X0+3352]
	164 Call 0x1C17D08
	165 Move X2, X0
	166 Move X0, X19
	167 Move X1, X20
	168 Move X3, X31
	169 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	170 Move X20, 0x4A8000
	171 Move X20, [X20+712]
	172 Move X0, X20
	173 Call 0x1C17D08
	174 Call 0x19913D0
	175 Move X0, X20
	176 Call 0x1C17D08
	177 Move X8, [X0+184]
	178 Move X0, X19
	179 Move W20, [X8]
	180 Call 0x19913C0
	181 Move W8, [X19+24]
	182 Move X0, 0x4A4000
	183 NotImplemented "Instruction CMP not yet implemented."
	184 NotImplemented "Instruction CSEL not yet implemented."
	185 Move [X31+12], W8
	186 Move X0, [X0+1880]
	187 Call 0x1C17D08
	188 Add X1, X31, 12
	189 Call 0x1C17E04
	190 Move X19, X0
	191 Move X0, 0x50F000
	192 Move X0, [X0+3360]
	193 Call 0x1C17D08
	194 Move X1, X19
	195 Move X2, X31
	196 Call String.Format, X0, X1
	197 Move X19, X0
	198 Move X0, 0x4AC000
	199 Move X0, [X0+1888]
	200 Call 0x1C17D08
	201 Call 0x1C17F10
	202 Move X20, X0
	203 Move X0, 0x4CC000
	204 Move X0, [X0+1608]
	205 Call 0x1C17D08
	206 Move X1, X0
	207 Move X0, X20
	208 Move X2, X19
	209 Move X3, X31
	210 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	211 Move X0, 0x510000
	212 Move X0, [X0+3272]
	213 Call 0x1C17D08
	214 Move X1, X0
	215 Move X0, X20
	216 Call 0x1C17DEC
	217 Move X0, 0x4A4000
	218 Move X0, [X0+1456]
	219 Call 0x1C17D08
	220 Call 0x1C17F10
	221 Move X19, X0
	222 Move X0, 0x510000
	223 Move X0, [X0+3280]
	224 Call 0x1C17D08
	225 Move X1, X0
	226 Move X0, X19
	227 Move X2, X31
	228 Call InvalidOperationException..ctor, X0, X1
	229 Move X0, 0x4A9000
	230 Move X0, [X0+1320]
	231 Call 0x1C17D08
	232 Call 0x1C17F10
	233 Move X19, X0
	234 Move X0, 0x4FE000
	235 Move X0, [X0+3728]
	236 Call 0x1C17F20
	237 Move X0, 0x4A9000
	238 Move X0, [X0+1320]
	239 Call 0x1C17D08
	240 Call 0x1C17F10
	241 Move X19, X0
	242 Move X0, 0x50F000
	243 Move X0, [X0+3384]
	244 Move X0, 0x4A9000
	245 Move X0, [X0+1320]
	246 Call 0x1C17D08
	247 Call 0x1C17F10
	248 Move X19, X0
	249 Move X0, 0x50F000
	250 Move X0, [X0+3400]
	251 Call 0x1C17D08
	252 Move X1, X0
	253 Move X0, X19
	254 Move X2, X31
	255 Call ArgumentNullException..ctor, X0, X1
	256 Move X0, 0x510000
	257 Move X0, [X0+3272]
	258 Call 0x1C17D08
	259 Move X1, X0
	260 Move X0, X19
	261 Call 0x1C17DEC

Method: System.Void DrawOcclusionMesh(UnityEngine.RectInt normalizedCamViewport)

Disassembly:
	0x03C508BC STP X20, X19, [X31 + 0x110]

ISIL:
	001 Call CommandBuffer.Internal_DrawOcclusionMesh, X0, X1
	002 Return 

Method: System.Void SetRandomWriteTarget(System.Int32 index, UnityEngine.Rendering.RenderTargetIdentifier rt)

Disassembly:
	0x03C508C0 LDR W8, [X0]
	0x03C508C4 LDR W9, [X1]
	0x03C508C8 CMP W8, W9
	0x03C508CC B.NE 0x3C509E8
	0x03C508D0 LDR W8, [X0 + 0x4]
	0x03C508D4 LDR W9, [X1 + 0x4]
	0x03C508D8 MOV X19, X1
	0x03C508DC MOV X20, X0
	0x03C508E0 CMP W8, W9
	0x03C508E4 B.NE 0x3C509E8
	0x03C508E8 LDR W8, [X20 + 0x8]
	0x03C508EC LDR W9, [X19 + 0x8]
	0x03C508F0 CMP W8, W9
	0x03C508F4 B.NE 0x3C509E8
	0x03C508F8 ADD X0, X31, 0x58
	0x03C508FC MOVZ W2, 0x78
	0x03C50900 MOV X1, X19
	0x03C50904 ADD X21, X20, 0x10
	0x03C50908 BL 0x3EB1AC0
	0x03C5090C LDUR V0, [X31 + 0x68]
	0x03C50910 LDUR V1, [X31 + 0x78]
	0x03C50914 LDR X8, [X31 + 0x88]
	0x03C50918 ADD X1, X31, 0x30
	0x03C5091C MOV X0, X21
	0x03C50920 STP V0, V1, [X31 + 0x30]
	0x03C50924 STR X8, [X31 + 0x50]
	0x03C50928 BL 0x3C4B5B0
	0x03C5092C TBZ X0, 0x0, 0x3C509E8
	0x03C50930 ADD X0, X31, 0x58
	0x03C50934 MOVZ W2, 0x78
	0x03C50938 MOV X1, X19
	0x03C5093C ADD X22, X31, 0x58
	0x03C50940 ADD X21, X20, 0x38

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x796000
	007 Move X8, [X22+3760]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51572736
	014 Add X0, X0, 3509
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+3760], X0
	018 Move W2, 2
	019 Move X0, X21
	020 Move W1, W31
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X22, 0x796000
	023 Move X3, [X22+3664]
	024 Compare X3, 0
	025 JumpIfNotEqual {31}
	026 Move X0, -51699712
	027 Add X0, X0, 785
	028 Call 0x1C17CB8
	029 Move X3, X0
	030 Move [X22+3664], X0
	031 Move X0, X21
	032 Move W1, W20
	033 Move X2, X19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 CallNoReturn X3

Method: System.Void SetRandomWriteTarget(System.Int32 index, UnityEngine.GraphicsBuffer buffer, System.Boolean preserveCounterValue)

Disassembly:
	0x03C50944 BL 0x3EB1AC0
	0x03C50948 LDUR V0, [X22 + 0x38]
	0x03C5094C LDUR V1, [X22 + 0x48]
	0x03C50950 LDR X8, [X31 + 0xB0]
	0x03C50954 ADD X1, X31, 0x0
	0x03C50958 MOV X0, X21
	0x03C5095C STP V0, V1, [X31]
	0x03C50960 STR X8, [X31 + 0x20]
	0x03C50964 BL 0x3C4B5B0
	0x03C50968 TBZ X0, 0x0, 0x3C509E8
	0x03C5096C LDP S0, S10, [X19 + 0x60]
	0x03C50970 LDP S9, S8, [X19 + 0x68]
	0x03C50974 ADD X0, X20, 0x60
	0x03C50978 MOV X1, X31
	0x03C5097C BL 0x338FDC0
	0x03C50980 TBZ X0, 0x0, 0x3C509E8
	0x03C50984 ADD X0, X20, 0x64
	0x03C50988 MOV V0.16B, V10.16B
	0x03C5098C MOV X1, X31
	0x03C50990 BL 0x338FDC0
	0x03C50994 TBZ X0, 0x0, 0x3C509E8
	0x03C50998 ADD X0, X20, 0x68
	0x03C5099C MOV V0.16B, V9.16B
	0x03C509A0 MOV X1, X31
	0x03C509A4 BL 0x338FDC0
	0x03C509A8 TBZ X0, 0x0, 0x3C509E8
	0x03C509AC ADD X0, X20, 0x6C
	0x03C509B0 MOV V0.16B, V8.16B
	0x03C509B4 MOV X1, X31
	0x03C509B8 BL 0x338FDC0
	0x03C509BC TBZ X0, 0x0, 0x3C509E8
	0x03C509C0 LDR V0, [X19 + 0x70]
	0x03C509C4 ADD X0, X20, 0x70
	0x03C509C8 MOV X1, X31
	0x03C509CC BL 0x338FDC0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x796000
	008 Move X8, [X23+3760]
	009 Move W21, W3
	010 Move X19, X2
	011 Move W20, W1
	012 Move X22, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51572736
	016 Add X0, X0, 3509
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X23+3760], X0
	020 Move W2, 2
	021 Move X0, X22
	022 Move W1, W31
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X23, 0x796000
	025 Move X4, [X23+3672]
	026 Compare X4, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -51658752
	029 Add X0, X0, 1693
	030 Call 0x1C17CB8
	031 Move X4, X0
	032 Move [X23+3672], X0
	033 And W3, W21, 1
	034 Move X0, X22
	035 Move W1, W20
	036 Move X2, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 CallNoReturn X4

Method: System.Void SetRandomWriteTarget(System.Int32 index, UnityEngine.GraphicsBuffer buffer)

Disassembly:
	0x03C509D0 TBZ X0, 0x0, 0x3C509E8
	0x03C509D4 LDR W8, [X20 + 0x74]

ISIL:
	001 Move W3, W31
	002 Call CommandBuffer.SetRandomWriteTarget, X0, X1, X2, X3
	003 Return 

Method: System.Void Blit(UnityEngine.Rendering.RenderTargetIdentifier source, UnityEngine.Rendering.RenderTargetIdentifier dest)

Disassembly:
	0x03C509D8 LDR W9, [X19 + 0x74]
	0x03C509DC CMP W8, W9
	0x03C509E0 CSET W0, EQ
	0x03C509E4 B 0x3C509EC
	0x03C509E8 MOV W0, W31
	0x03C509EC LDP X20, X19, [X31 + 0x110]
	0x03C509F0 LDP X22, X21, [X31 + 0x100]
	0x03C509F4 LDP X29, X30, [X31 + 0xF0]
	0x03C509F8 LDP D9, D8, [X31 + 0xE0]
	0x03C509FC LDR V10, [X31 + 0xD0]
	0x03C50A00 ADD X31, X31, 0x120
	0x03C50A04 RET
	0x03C50A08 SUB X31, X31, 0xA0
	0x03C50A0C STP X30, X21, [X31 + 0x80]
	0x03C50A10 STP X20, X19, [X31 + 0x90]
	0x03C50A14 ADRP X21, 0x795000
	0x03C50A18 LDRB W8, [X21 + 0xFE9]
	0x03C50A1C MOV X20, X1
	0x03C50A20 MOV X19, X0
	0x03C50A24 TBNZ X8, 0x0, 0x3C50A3C
	0x03C50A28 ADRP X0, 0x50F000
	0x03C50A2C LDR X0, [X0 + 0xCF8]
	0x03C50A30 BL 0x1C16CF4
	0x03C50A34 MOVZ W8, 0x1
	0x03C50A38 STRB W8, [X21 + 0xFE9]
	0x03C50A3C CBZ X20, 0x3C50A58
	0x03C50A40 ADRP X8, 0x50F000
	0x03C50A44 LDR X8, [X8 + 0xCF8]
	0x03C50A48 LDR X9, [X20]
	0x03C50A4C LDR X8, [X8]
	0x03C50A50 CMP X9, X8
	0x03C50A54 B.EQ 0x3C50A60
	0x03C50A58 MOV W0, W31
	0x03C50A5C B 0x3C50A84
	0x03C50A60 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x796000
	007 Move X8, [X22+3760]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51572736
	014 Add X0, X0, 3509
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+3760], X0
	018 Move W2, 2
	019 Move X0, X21
	020 Move W1, W31
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X0, X31
	023 Call Texture2DArray.get_allSlices
	024 Move W5, W0
	025 Move X0, X21
	026 Move X1, X20
	027 Move X2, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move S0, 1
	033 Move S1, 1
	034 Move S2, W31
	035 Move S3, W31
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W4, TEMP
	039 Move X3, X31
	040 Move W6, W31
	041 Move X30, [X31+48]
	042 Call CommandBuffer.Blit_Identifier, X0, X1, X2, X3, X4, X5, X6, X7, X8
	043 Return 

Method: System.Void Blit(UnityEngine.Rendering.RenderTargetIdentifier source, UnityEngine.Rendering.RenderTargetIdentifier dest, UnityEngine.Material mat, System.Int32 pass)

Disassembly:
	0x03C50A64 BL 0x1C16E08
	0x03C50A68 MOV X1, X0
	0x03C50A6C ADD X0, X31, 0x8
	0x03C50A70 MOVZ W2, 0x78
	0x03C50A74 BL 0x3EB1AC0
	0x03C50A78 ADD X1, X31, 0x8
	0x03C50A7C MOV X0, X19
	0x03C50A80 BL 0x3C508A8
	0x03C50A84 LDP X20, X19, [X31 + 0x90]
	0x03C50A88 LDP X30, X21, [X31 + 0x80]
	0x03C50A8C AND W0, W0, 0x1
	0x03C50A90 ADD X31, X31, 0xA0
	0x03C50A94 RET
	0x03C50A98 SUB X31, X31, 0x50
	0x03C50A9C STP X30, X25, [X31 + 0x10]
	0x03C50AA0 STP X24, X23, [X31 + 0x20]
	0x03C50AA4 STP X22, X21, [X31 + 0x30]
	0x03C50AA8 STP X20, X19, [X31 + 0x40]
	0x03C50AAC LDP W8, W9, [X0]
	0x03C50AB0 MOVZ W24, 0x18D
	0x03C50AB4 LDR W10, [X0 + 0x8]
	0x03C50AB8 MOV X19, X0
	0x03C50ABC MUL W8, W8, W24
	0x03C50AC0 EOR W8, W8, W9, 0x0
	0x03C50AC4 MUL W8, W8, W24
	0x03C50AC8 ADD X0, X0, 0x10
	0x03C50ACC EOR W20, W8, W10, 0x0
	0x03C50AD0 BL 0x3C4B564
	0x03C50AD4 MUL W8, W20, W24
	0x03C50AD8 EOR W20, W8, W0, 0x0
	0x03C50ADC ADD X0, X19, 0x38
	0x03C50AE0 BL 0x3C4B564
	0x03C50AE4 LDR V0, [X19 + 0x6]
	0x03C50AE8 MUL W8, W20, W24
	0x03C50AEC ADD X9, X31, 0x0
	0x03C50AF0 EOR W25, W8, W0, 0x0
	0x03C50AF4 ADD X0, X31, 0x0
	0x03C50AF8 MOV X1, X31
	0x03C50AFC ORR X20, X9, 0x7

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x796000
	009 Move X8, [X24+3760]
	010 Move W19, W4
	011 Move X20, X3
	012 Move X21, X2
	013 Move X22, X1
	014 Move X23, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51572736
	018 Add X0, X0, 3509
	019 Call 0x1C17CB8
	020 Move X8, X0
	021 Move [X24+3760], X0
	022 Move W2, 2
	023 Move X0, X23
	024 Move W1, W31
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X0, X31
	027 Call Texture2DArray.get_allSlices
	028 Move W5, W0
	029 Move X0, X23
	030 Move X1, X22
	031 Move X2, X21
	032 Move X3, X20
	033 Move W4, W19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move S0, 1
	041 Move S1, 1
	042 Move S2, W31
	043 Move S3, W31
	044 Move W6, W31
	045 Move X30, [X31+64]
	046 Call CommandBuffer.Blit_Identifier, X0, X1, X2, X3, X4, X5, X6, X7, X8
	047 Return 

Method: System.Void SetGlobalVector(System.String name, UnityEngine.Vector4 value)

Disassembly:
	0x03C50B00 ORR X21, X9, 0xF
	0x03C50B04 ORR X22, X9, 0xF
	0x03C50B08 STR V0, [X31]
	0x03C50B0C BL 0x338FE0C
	0x03C50B10 MOV W23, W0
	0x03C50B14 MOV X0, X20
	0x03C50B18 MOV X1, X31
	0x03C50B1C BL 0x338FE0C
	0x03C50B20 MOV W20, W0
	0x03C50B24 MOV X0, X21
	0x03C50B28 MOV X1, X31
	0x03C50B2C BL 0x338FE0C
	0x03C50B30 MOV W21, W0
	0x03C50B34 MOV X0, X22
	0x03C50B38 MOV X1, X31
	0x03C50B3C BL 0x338FE0C
	0x03C50B40 MUL W8, W25, W24
	0x03C50B44 EOR W8, W23, W8, 0x0
	0x03C50B48 EOR W8, W8, W20, 0x2
	0x03C50B4C EOR W8, W8, W21, 0x2
	0x03C50B50 EOR W20, W8, W0, 0x1

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move X19, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Call Shader.PropertyToID, X0
	015 Move W1, W0
	016 Move X0, X19
	017 Move V2, V9
	018 Move V3, V8
	019 Move X30, [X31+32]
	020 Move X19, [X31+40]
	021 Move D9, [X31+16]
	022 Move D8, [X31+24]
	023 Move V0, V11
	024 Move V1, V10
	025 Move D11, [X31+48]
	026 Move D10, [X31+56]
	027 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	028 Return 

Method: System.Void SetGlobalMatrix(System.String name, UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C50B54 ADD X0, X19, 0x70
	0x03C50B58 MOV X1, X31
	0x03C50B5C BL 0x338FE0C
	0x03C50B60 MUL W9, W20, W24
	0x03C50B64 LDR W8, [X19 + 0x74]
	0x03C50B68 EOR W9, W9, W0, 0x0
	0x03C50B6C MUL W9, W9, W24
	0x03C50B70 LDP X20, X19, [X31 + 0x40]
	0x03C50B74 LDP X22, X21, [X31 + 0x30]
	0x03C50B78 LDP X24, X23, [X31 + 0x20]
	0x03C50B7C LDP X30, X25, [X31 + 0x10]
	0x03C50B80 EOR W0, W9, W8, 0x0
	0x03C50B84 ADD X31, X31, 0x50
	0x03C50B88 RET
	0x03C50B8C SUB X31, X31, 0x90
	0x03C50B90 STP X30, X19, [X31 + 0x80]
	0x03C50B94 MOV X19, X0
	0x03C50B98 ADD X0, X31, 0x8
	0x03C50B9C MOVZ W2, 0x78
	0x03C50BA0 BL 0x3EB1AC0
	0x03C50BA4 ADD X1, X31, 0x8
	0x03C50BA8 MOV X0, X19
	0x03C50BAC BL 0x3C508A8
	0x03C50BB0 LDP X30, X19, [X31 + 0x80]
	0x03C50BB4 ORN W8, W31, W0, 0x0
	0x03C50BB8 AND W0, W8, 0x1
	0x03C50BBC ADD X31, X31, 0x90
	0x03C50BC0 RET
	0x03C50BC4 SUB X31, X31, 0xA0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X19, X0
	007 Move X0, X1
	008 Move X1, X31
	009 Move X21, X2
	010 Call Shader.PropertyToID, X0
	011 Move V0, [X21+32]
	012 Move V1, [X21+48]
	013 Move V3, [X21]
	014 Move V2, [X21+16]
	015 Move X21, 0x796000
	016 Move X8, [X21+4008]
	017 Move W20, W0
	018 Move [X31+32], V0
	019 Move [X31+40], V1
	020 Move [X31], V3
	021 Move [X31+8], V2
	022 Compare X8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, -51621888
	025 Add X0, X0, 3317
	026 Call 0x1C17CB8
	027 Move X8, X0
	028 Move [X21+4008], X0
	029 Add X2, X31, 0
	030 Move X0, X19
	031 Move W1, W20
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X20, [X31+80]
	034 Move X19, [X31+88]
	035 Move X30, [X31+64]
	036 Move X21, [X31+72]
	037 Add X31, X31, 96
	038 Return 

Method: System.Void SetGlobalMatrixArray(System.String propertyName, UnityEngine.Matrix4x4[] values)

Disassembly:
	0x03C50BC8 STP X30, X19, [X31 + 0x90]
	0x03C50BCC MOVI V0.2D, 0x0
	0x03C50BD0 ADD X0, X31, 0x0
	0x03C50BD4 MOV W1, W31
	0x03C50BD8 MOV W2, W31
	0x03C50BDC MOV X19, X8
	0x03C50BE0 STR W31, [X31 + 0x40]
	0x03C50BE4 STP V0, V0, [X31 + 0x20]
	0x03C50BE8 STP V0, V0, [X31]
	0x03C50BEC BL 0x3C50C1C
	0x03C50BF0 ADD X0, X31, 0x48
	0x03C50BF4 ADD X1, X31, 0x0
	0x03C50BF8 MOVZ W2, 0x44
	0x03C50BFC BL 0x3EB1AC0
	0x03C50C00 ADD X1, X31, 0x48
	0x03C50C04 MOVZ W2, 0x44
	0x03C50C08 MOV X0, X19
	0x03C50C0C BL 0x3EB1AC0
	0x03C50C10 LDP X30, X19, [X31 + 0x90]
	0x03C50C14 ADD X31, X31, 0xA0
	0x03C50C18 RET
	0x03C50C1C STP X30, X23, [X31 - 0x30]!
	0x03C50C20 STP X22, X21, [X31 + 0x10]
	0x03C50C24 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move X0, X1
	008 Move X1, X31
	009 Move X19, X2
	010 Call Shader.PropertyToID, X0
	011 Move X22, 0x796000
	012 Move X3, [X22+3784]
	013 Move W21, W0
	014 Compare X3, 0
	015 JumpIfNotEqual {21}
	016 Move X0, -51605504
	017 Add X0, X0, 3161
	018 Call 0x1C17CB8
	019 Move X3, X0
	020 Move [X22+3784], X0
	021 Move X0, X20
	022 Move W1, W21
	023 Move X2, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 CallNoReturn X3

Method: System.Void SetGlobalTexture(System.String name, UnityEngine.Rendering.RenderTargetIdentifier value)

Disassembly:
	0x03C50C28 ADRP X23, 0x795000
	0x03C50C2C ADRP X22, 0x4AC000
	0x03C50C30 LDRB W8, [X23 + 0xFEA]
	0x03C50C34 LDR X22, [X22 + 0x9E8]
	0x03C50C38 MOV W20, W2
	0x03C50C3C MOV W21, W1
	0x03C50C40 MOV X19, X0
	0x03C50C44 TBNZ X8, 0x0, 0x3C50C5C
	0x03C50C48 ADRP X0, 0x4AC000
	0x03C50C4C LDR X0, [X0 + 0x9E8]
	0x03C50C50 BL 0x1C16CF4
	0x03C50C54 MOVZ W8, 0x1
	0x03C50C58 STRB W8, [X23 + 0xFEA]
	0x03C50C5C MOVZ W8, 0x10F
	0x03C50C60 MOVK W8, 0x1000000
	0x03C50C64 UNIMPLEMENTED
	0x03C50C68 STP V0, V0, [X19]
	0x03C50C6C STP V0, V0, [X19 + 0x20]
	0x03C50C70 LDR X0, [X22]
	0x03C50C74 LDR W8, [X0 + 0xE0]
	0x03C50C78 CBNZ W8, 0x3C50C80
	0x03C50C7C BL 0x1C16DFC
	0x03C50C80 AND W0, W21, 0x1
	0x03C50C84 MOV X1, X31
	0x03C50C88 BL 0x33181E0
	0x03C50C8C STRB W0, [X19 + 0x40]
	0x03C50C90 AND W0, W20, 0x1
	0x03C50C94 MOV X1, X31
	0x03C50C98 BL 0x33181E0
	0x03C50C9C STRB W0, [X19 + 0x41]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X19, X0
	007 Move X0, X1
	008 Move X1, X31
	009 Move X21, X2
	010 Call Shader.PropertyToID, X0
	011 Move X9, [X21+32]
	012 Move V1, [X21]
	013 Move V0, [X21+16]
	014 Move X21, 0x796000
	015 Move X8, [X21+3816]
	016 Move W20, W0
	017 Move [X31], V1
	018 Move [X31+8], V0
	019 Move [X31+32], X9
	020 Compare X8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51572736
	023 Add X0, X0, 3677
	024 Call 0x1C17CB8
	025 Move X8, X0
	026 Move [X21+3816], X0
	027 Add X2, X31, 0
	028 Move W3, 3
	029 Move X0, X19
	030 Move W1, W20
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X30, [X31+48]
	035 Move X21, [X31+56]
	036 Add X31, X31, 80
	037 Return 

Method: System.Void SetGlobalTexture(System.Int32 nameID, UnityEngine.Rendering.RenderTargetIdentifier value)

Disassembly:
	0x03C50CFC BL 0x3C50D88
	0x03C50D00 TBZ X0, 0x0, 0x3C50D78
	0x03C50D04 LDR X1, [X19 + 0x18]
	0x03C50D08 ADD X0, X20, 0x18
	0x03C50D0C BL 0x3C50D88
	0x03C50D10 TBZ X0, 0x0, 0x3C50D78
	0x03C50D14 LDR X1, [X19 + 0x20]
	0x03C50D18 ADD X0, X20, 0x20
	0x03C50D1C BL 0x3C50D88
	0x03C50D20 TBZ X0, 0x0, 0x3C50D78
	0x03C50D24 LDR X1, [X19 + 0x28]
	0x03C50D28 ADD X0, X20, 0x28
	0x03C50D2C BL 0x3C50D88
	0x03C50D30 TBZ X0, 0x0, 0x3C50D78
	0x03C50D34 LDR X1, [X19 + 0x30]
	0x03C50D38 ADD X0, X20, 0x30
	0x03C50D3C BL 0x3C50D88
	0x03C50D40 TBZ X0, 0x0, 0x3C50D78
	0x03C50D44 LDR X1, [X19 + 0x38]
	0x03C50D48 ADD X0, X20, 0x38
	0x03C50D4C BL 0x3C50D88
	0x03C50D50 TBZ X0, 0x0, 0x3C50D78

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x796000
	007 Move X4, [X22+3816]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X4, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51572736
	014 Add X0, X0, 3677
	015 Call 0x1C17CB8
	016 Move X4, X0
	017 Move [X22+3816], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move W3, 3
	026 Move X30, [X31+48]
	027 CallNoReturn X4

Method: System.Void SetGlobalTexture(System.Int32 nameID, UnityEngine.Rendering.RenderTargetIdentifier value, UnityEngine.Rendering.RenderTextureSubElement element)

Disassembly:
	0x03C50CA0 STRH W31, [X19 + 0x42]
	0x03C50CA4 LDP X20, X19, [X31 + 0x20]
	0x03C50CA8 LDP X22, X21, [X31 + 0x10]
	0x03C50CAC LDP X30, X23, [X31], #0x30
	0x03C50CB0 RET
	0x03C50CB4 MOVZ W0, 0x10F
	0x03C50CB8 MOVK W0, 0x1000000
	0x03C50CBC RET
	0x03C50CC0 STR X1, [X0]
	0x03C50CC4 RET
	0x03C50CC8 STR X30, [X31 - 0x20]!
	0x03C50CCC STP X20, X19, [X31 + 0x10]
	0x03C50CD0 MOV X19, X1
	0x03C50CD4 LDR X1, [X1]
	0x03C50CD8 MOV X20, X0
	0x03C50CDC BL 0x3C50D88
	0x03C50CE0 TBZ X0, 0x0, 0x3C50D78
	0x03C50CE4 LDR X1, [X19 + 0x8]
	0x03C50CE8 ADD X0, X20, 0x8
	0x03C50CEC BL 0x3C50D88
	0x03C50CF0 TBZ X0, 0x0, 0x3C50D78
	0x03C50CF4 LDR X1, [X19 + 0x10]
	0x03C50CF8 ADD X0, X20, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x796000
	008 Move X4, [X23+3816]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51572736
	016 Add X0, X0, 3677
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3816], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetGlobalBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer value)

Disassembly:
	0x03C50D54 LDRB W8, [X20 + 0x40]
	0x03C50D58 LDRB W9, [X19 + 0x40]
	0x03C50D5C CMP W8, W9
	0x03C50D60 B.NE 0x3C50D78
	0x03C50D64 LDRB W8, [X20 + 0x41]
	0x03C50D68 LDRB W9, [X19 + 0x41]
	0x03C50D6C CMP W8, W9
	0x03C50D70 CSET W0, EQ
	0x03C50D74 B 0x3C50D7C
	0x03C50D78 MOV W0, W31
	0x03C50D7C LDP X20, X19, [X31 + 0x10]
	0x03C50D80 LDR X30, [X31], #0x20
	0x03C50D84 RET
	0x03C50D88 LDRB W8, [X0]
	0x03C50D8C CMP W8, W1, UXTB
	0x03C50D90 B.NE 0x3C50DF4
	0x03C50D94 LDRB W8, [X0 + 0x1]
	0x03C50D98 UBFM X9, X1, 0x8, 0x1F
	0x03C50D9C CMP W8, W9, UXTB
	0x03C50DA0 B.NE 0x3C50DF4
	0x03C50DA4 LDRB W8, [X0 + 0x2]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x796000
	007 Move X3, [X22+3824]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51580928
	014 Add X0, X0, 4081
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3824], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetGlobalConstantBuffer(UnityEngine.ComputeBuffer buffer, System.Int32 nameID, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03C50DA8 UBFM X9, X1, 0x10, 0x1F
	0x03C50DAC CMP W8, W9, UXTB
	0x03C50DB0 B.NE 0x3C50DF4
	0x03C50DB4 LDRB W8, [X0 + 0x3]
	0x03C50DB8 CMP W8, W1, LSR
	0x03C50DBC B.NE 0x3C50DF4
	0x03C50DC0 LDRB W8, [X0 + 0x4]
	0x03C50DC4 UBFM X9, X1, 0x20, 0x3F
	0x03C50DC8 CMP W8, W9, UXTB
	0x03C50DCC B.NE 0x3C50DF4
	0x03C50DD0 LDRB W8, [X0 + 0x5]
	0x03C50DD4 UBFM X9, X1, 0x28, 0x3F
	0x03C50DD8 CMP W8, W9, UXTB
	0x03C50DDC B.NE 0x3C50DF4
	0x03C50DE0 LDRB W8, [X0 + 0x6]
	0x03C50DE4 UBFM X9, X1, 0x30, 0x3F
	0x03C50DE8 CMP W8, W9, UXTB
	0x03C50DEC CSET W0, EQ
	0x03C50DF0 RET
	0x03C50DF4 MOV W0, W31
	0x03C50DF8 RET
	0x03C50DFC SUB X31, X31, 0x70
	0x03C50E00 STP X30, X21, [X31 + 0x50]
	0x03C50E04 STP X20, X19, [X31 + 0x60]
	0x03C50E08 ADRP X21, 0x795000
	0x03C50E0C LDRB W8, [X21 + 0xFEB]
	0x03C50E10 MOV X20, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x796000
	009 Move X5, [X24+3864]
	010 Move W19, W4
	011 Move W20, W3
	012 Move W21, W2
	013 Move X22, X1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51605504
	018 Add X0, X0, 3257
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+3864], X0
	022 Move X0, X23
	023 Move X1, X22
	024 Move W2, W21
	025 Move W3, W20
	026 Move W4, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void SetGlobalConstantBuffer(UnityEngine.GraphicsBuffer buffer, System.String name, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03C50E14 MOV X19, X0
	0x03C50E18 TBNZ X8, 0x0, 0x3C50E30
	0x03C50E1C ADRP X0, 0x50F000
	0x03C50E20 LDR X0, [X0 + 0xD00]
	0x03C50E24 BL 0x1C16CF4
	0x03C50E28 MOVZ W8, 0x1
	0x03C50E2C STRB W8, [X21 + 0xFEB]
	0x03C50E30 CBZ X20, 0x3C50E4C
	0x03C50E34 ADRP X8, 0x50F000
	0x03C50E38 LDR X8, [X8 + 0xD00]
	0x03C50E3C LDR X9, [X20]
	0x03C50E40 LDR X8, [X8]
	0x03C50E44 CMP X9, X8
	0x03C50E48 B.EQ 0x3C50E54
	0x03C50E4C MOV W0, W31
	0x03C50E50 B 0x3C50E78
	0x03C50E54 MOV X0, X20
	0x03C50E58 BL 0x1C16E08
	0x03C50E5C MOV X1, X0
	0x03C50E60 ADD X0, X31, 0x8
	0x03C50E64 MOVZ W2, 0x44
	0x03C50E68 BL 0x3EB1AC0
	0x03C50E6C ADD X1, X31, 0x8
	0x03C50E70 MOV X0, X19
	0x03C50E74 BL 0x3C50CC8
	0x03C50E78 LDP X20, X19, [X31 + 0x60]
	0x03C50E7C LDP X30, X21, [X31 + 0x50]
	0x03C50E80 AND W0, W0, 0x1
	0x03C50E84 ADD X31, X31, 0x70
	0x03C50E88 RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, X1
	009 Move X22, X0
	010 Move X0, X2
	011 Move X1, X31
	012 Move W19, W4
	013 Move W20, W3
	014 Call Shader.PropertyToID, X0
	015 Move X24, 0x796000
	016 Move X5, [X24+3872]
	017 Move W23, W0
	018 Compare X5, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51572736
	021 Add X0, X0, 3842
	022 Call 0x1C17CB8
	023 Move X5, X0
	024 Move [X24+3872], X0
	025 Move X0, X22
	026 Move X1, X21
	027 Move W2, W23
	028 Move W3, W20
	029 Move W4, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 CallNoReturn X5

Method: System.Void SetSinglePassStereo(UnityEngine.Rendering.SinglePassStereoMode mode)

Disassembly:
	0x03C50E8C STP X30, X21, [X31 - 0x20]!
	0x03C50E90 STP X20, X19, [X31 + 0x10]
	0x03C50E94 MOV X19, X0
	0x03C50E98 BL 0x3C50F48
	0x03C50E9C MOV W20, W0
	0x03C50EA0 ADD X0, X19, 0x8
	0x03C50EA4 BL 0x3C50F48
	0x03C50EA8 MOVZ W21, 0x18D
	0x03C50EAC MUL W8, W20, W21
	0x03C50EB0 EOR W20, W8, W0, 0x0
	0x03C50EB4 ADD X0, X19, 0x10
	0x03C50EB8 BL 0x3C50F48
	0x03C50EBC MUL W8, W20, W21
	0x03C50EC0 EOR W20, W8, W0, 0x0
	0x03C50EC4 ADD X0, X19, 0x18
	0x03C50EC8 BL 0x3C50F48
	0x03C50ECC MUL W8, W20, W21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x796000
	006 Move X2, [X21+3560]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51552256
	012 Add X0, X0, 451
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3560], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetComputeVectorParam_Injected(UnityEngine.ComputeShader computeShader, System.Int32 nameID, ref UnityEngine.Vector4 val)

Disassembly:
	0x03C4D0A8 MOV X21, X0
	0x03C4D0AC CBNZ X3, 0x3C4D0C4
	0x03C4D0B0 ADRP X0, 0xFFFFFFFFFCEC7000
	0x03C4D0B4 ADD X0, X0, 0xCF5
	0x03C4D0B8 BL 0x1C16CB8
	0x03C4D0BC MOV X3, X0
	0x03C4D0C0 STR X0, [X22 + 0xFA8]
	0x03C4D0C4 MOV X0, X21
	0x03C4D0C8 MOV W1, W20
	0x03C4D0CC MOV X2, X19
	0x03C4D0D0 LDP X20, X19, [X31 + 0x20]
	0x03C4D0D4 LDP X22, X21, [X31 + 0x10]
	0x03C4D0D8 LDR X30, [X31], #0x30
	0x03C4D0DC BR X3
	0x03C4D0E0 STP X30, X21, [X31 - 0x20]!
	0x03C4D0E4 STP X20, X19, [X31 + 0x10]
	0x03C4D0E8 ADRP X21, 0x798000
	0x03C4D0EC LDR X2, [X21 + 0xE90]
	0x03C4D0F0 MOV X19, X1
	0x03C4D0F4 MOV X20, X0
	0x03C4D0F8 CBNZ X2, 0x3C4D110
	0x03C4D0FC ADRP X0, 0xFFFFFFFFFCEBE000
	0x03C4D100 ADD X0, X0, 0x71E

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x799000
	008 Move X4, [X23+3920]
	009 Move X19, X3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51548160
	016 Add X0, X0, 1147
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3920], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move W2, W20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void Internal_DrawMesh_Injected(UnityEngine.Mesh mesh, ref UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 submeshIndex, System.Int32 shaderPass, UnityEngine.MaterialPropertyBlock properties)

Disassembly:
	0x03C4D3D0 BR X2
	0x03C4D3D4 STR X30, [X31 - 0x30]!
	0x03C4D3D8 STP X22, X21, [X31 + 0x10]
	0x03C4D3DC STP X20, X19, [X31 + 0x20]
	0x03C4D3E0 ADRP X22, 0x798000
	0x03C4D3E4 LDR X3, [X22 + 0xEB8]
	0x03C4D3E8 MOV X19, X2
	0x03C4D3EC MOV W20, W1
	0x03C4D3F0 MOV X21, X0
	0x03C4D3F4 CBNZ X3, 0x3C4D40C
	0x03C4D3F8 ADRP X0, 0xFFFFFFFFFCEDA000
	0x03C4D3FC ADD X0, X0, 0x179
	0x03C4D400 BL 0x1C16CB8
	0x03C4D404 MOV X3, X0
	0x03C4D408 STR X0, [X22 + 0xEB8]
	0x03C4D40C MOV X0, X21
	0x03C4D410 MOV W1, W20
	0x03C4D414 MOV X2, X19
	0x03C4D418 LDP X20, X19, [X31 + 0x20]
	0x03C4D41C LDP X22, X21, [X31 + 0x10]
	0x03C4D420 LDR X30, [X31], #0x30
	0x03C4D424 BR X3
	0x03C4D428 STR X30, [X31 - 0x30]!
	0x03C4D42C STP X22, X21, [X31 + 0x10]
	0x03C4D430 STP X20, X19, [X31 + 0x20]
	0x03C4D434 ADRP X22, 0x798000
	0x03C4D438 LDR X3, [X22 + 0xEC0]
	0x03C4D43C MOV X19, X2
	0x03C4D440 MOV W20, W1
	0x03C4D444 MOV X21, X0
	0x03C4D448 CBNZ X3, 0x3C4D460
	0x03C4D44C ADRP X0, 0xFFFFFFFFFCEA2000
	0x03C4D450 ADD X0, X0, 0x27B

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x799000
	011 Move X7, [X26+3928]
	012 Move X19, X6
	013 Move W20, W5
	014 Move W21, W4
	015 Move X22, X3
	016 Move X23, X2
	017 Move X24, X1
	018 Move X25, X0
	019 Compare X7, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51539968
	022 Add X0, X0, 687
	023 Call 0x1C17CB8
	024 Move X7, X0
	025 Move [X26+3928], X0
	026 Move X0, X25
	027 Move X1, X24
	028 Move X2, X23
	029 Move X3, X22
	030 Move W4, W21
	031 Move W5, W20
	032 Move X6, X19
	033 Move X20, [X31+64]
	034 Move X19, [X31+72]
	035 Move X22, [X31+48]
	036 Move X21, [X31+56]
	037 Move X24, [X31+32]
	038 Move X23, [X31+40]
	039 Move X26, [X31+16]
	040 Move X25, [X31+24]
	041 Move X30, [X31+80]
	042 CallNoReturn X7

Method: System.Void Internal_DrawRendererList_Injected(ref UnityEngine.Rendering.RendererList rendererList)

Disassembly:
	0x03C4D504 MOV X1, X19
	0x03C4D508 LDP X20, X19, [X31 + 0x10]
	0x03C4D50C LDP X30, X21, [X31], #0x20
	0x03C4D510 BR X2
	0x03C4D514 STR X30, [X31 - 0x30]!
	0x03C4D518 STP X22, X21, [X31 + 0x10]
	0x03C4D51C STP X20, X19, [X31 + 0x20]
	0x03C4D520 ADRP X22, 0x798000
	0x03C4D524 LDR X3, [X22 + 0xED8]
	0x03C4D528 MOV W19, W2
	0x03C4D52C MOV W20, W1
	0x03C4D530 MOV X21, X0
	0x03C4D534 CBNZ X3, 0x3C4D54C
	0x03C4D538 ADRP X0, 0xFFFFFFFFFCEA4000
	0x03C4D53C ADD X0, X0, 0x38B
	0x03C4D540 BL 0x1C16CB8
	0x03C4D544 MOV X3, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x799000
	006 Move X2, [X21+3936]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51736576
	012 Add X0, X0, 1576
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3936], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Internal_DrawProcedural_Injected(ref UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 shaderPass, UnityEngine.MeshTopology topology, System.Int32 vertexCount, System.Int32 instanceCount, UnityEngine.MaterialPropertyBlock properties)

Disassembly:
	0x03C4D5D4 ADRP X0, 0xFFFFFFFFFCED3000
	0x03C4D5D8 ADD X0, X0, 0xE5D
	0x03C4D5DC BL 0x1C16CB8
	0x03C4D5E0 MOV X4, X0
	0x03C4D5E4 STR X0, [X23 + 0xEE8]
	0x03C4D5E8 MOV X0, X22
	0x03C4D5EC MOV W1, W21
	0x03C4D5F0 MOV X2, X20
	0x03C4D5F4 MOV W3, W19
	0x03C4D5F8 LDP X20, X19, [X31 + 0x20]
	0x03C4D5FC LDP X22, X21, [X31 + 0x10]
	0x03C4D600 LDP X30, X23, [X31], #0x30
	0x03C4D604 BR X4
	0x03C4D608 STR X30, [X31 - 0x30]!
	0x03C4D60C STP X22, X21, [X31 + 0x10]
	0x03C4D610 STP X20, X19, [X31 + 0x20]
	0x03C4D614 ADRP X22, 0x798000
	0x03C4D618 LDR X3, [X22 + 0xEF0]
	0x03C4D61C MOV X19, X2
	0x03C4D620 MOV W20, W1
	0x03C4D624 MOV X21, X0
	0x03C4D628 CBNZ X3, 0x3C4D640
	0x03C4D62C ADRP X0, 0xFFFFFFFFFCED1000
	0x03C4D630 ADD X0, X0, 0xFF1
	0x03C4D634 BL 0x1C16CB8
	0x03C4D638 MOV X3, X0
	0x03C4D63C STR X0, [X22 + 0xEF0]
	0x03C4D640 MOV X0, X21
	0x03C4D644 MOV W1, W20
	0x03C4D648 MOV X2, X19
	0x03C4D64C LDP X20, X19, [X31 + 0x20]
	0x03C4D650 LDP X22, X21, [X31 + 0x10]
	0x03C4D654 LDR X30, [X31], #0x30
	0x03C4D658 BR X3
	0x03C4D65C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x799000
	012 Move X8, [X27+3944]
	013 Move X19, X7
	014 Move W20, W6
	015 Move W21, W5
	016 Move W22, W4
	017 Move W23, W3
	018 Move X24, X2
	019 Move X25, X1
	020 Move X26, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51752960
	024 Add X0, X0, 1042
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X27+3944], X0
	028 Move X0, X26
	029 Move X1, X25
	030 Move X2, X24
	031 Move W3, W23
	032 Move W4, W22
	033 Move W5, W21
	034 Move W6, W20
	035 Move X7, X19
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X24, [X31+32]
	041 Move X23, [X31+40]
	042 Move X26, [X31+16]
	043 Move X25, [X31+24]
	044 Move X30, [X31+80]
	045 Move X27, [X31+88]
	046 CallNoReturn X8

Method: System.Void Internal_DrawOcclusionMesh_Injected(ref UnityEngine.RectInt normalizedCamViewport)

Disassembly:
	0x03C4D73C MOV X20, X0
	0x03C4D740 CBNZ X2, 0x3C4D758
	0x03C4D744 ADRP X0, 0xFFFFFFFFFCEB6000
	0x03C4D748 ADD X0, X0, 0x389
	0x03C4D74C BL 0x1C16CB8
	0x03C4D750 MOV X2, X0
	0x03C4D754 STR X0, [X21 + 0xF08]
	0x03C4D758 MOV X0, X20
	0x03C4D75C MOV X1, X19
	0x03C4D760 LDP X20, X19, [X31 + 0x10]
	0x03C4D764 LDP X30, X21, [X31], #0x20
	0x03C4D768 BR X2
	0x03C4D76C STP X30, X21, [X31 - 0x20]!
	0x03C4D770 STP X20, X19, [X31 + 0x10]
	0x03C4D774 ADRP X21, 0x798000
	0x03C4D778 LDR X2, [X21 + 0xF10]
	0x03C4D77C MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x799000
	006 Move X2, [X21+3952]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51679232
	012 Add X0, X0, 1163
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3952], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetViewport_Injected(ref UnityEngine.Rect pixelRect)

Disassembly:
	0x03C4D8C0 LDP X24, X23, [X31 + 0x10]
	0x03C4D8C4 LDR X30, [X31], #0x40
	0x03C4D8C8 BR X5
	0x03C4D8CC STP X30, X21, [X31 - 0x20]!
	0x03C4D8D0 STP X20, X19, [X31 + 0x10]
	0x03C4D8D4 ADRP X21, 0x798000
	0x03C4D8D8 LDR X2, [X21 + 0xF28]
	0x03C4D8DC MOV W19, W1
	0x03C4D8E0 MOV X20, X0
	0x03C4D8E4 CBNZ X2, 0x3C4D8FC
	0x03C4D8E8 ADRP X0, 0xFFFFFFFFFCEC4000
	0x03C4D8EC ADD X0, X0, 0x34E
	0x03C4D8F0 BL 0x1C16CB8
	0x03C4D8F4 MOV X2, X0
	0x03C4D8F8 STR X0, [X21 + 0xF28]
	0x03C4D8FC MOV X0, X20
	0x03C4D900 MOV W1, W19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x799000
	006 Move X2, [X21+3960]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51654656
	012 Add X0, X0, 2080
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3960], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Blit_Identifier_Injected(ref UnityEngine.Rendering.RenderTargetIdentifier source, ref UnityEngine.Rendering.RenderTargetIdentifier dest, UnityEngine.Material mat, System.Int32 pass, ref UnityEngine.Vector2 scale, ref UnityEngine.Vector2 offset, System.Int32 sourceDepthSlice, System.Int32 destDepthSlice)

Disassembly:
	0x03C4D9E0 LDP V1, V0, [X20]
	0x03C4D9E4 ADRP X20, 0x798000
	0x03C4D9E8 LDR X8, [X20 + 0xFC0]
	0x03C4D9EC STR X9, [X31 + 0x20]
	0x03C4D9F0 STP V1, V0, [X31]
	0x03C4D9F4 CBNZ X8, 0x3C4DA0C
	0x03C4D9F8 ADRP X0, 0xFFFFFFFFFCECB000
	0x03C4D9FC ADD X0, X0, 0xD40
	0x03C4DA00 BL 0x1C16CB8
	0x03C4DA04 MOV X8, X0
	0x03C4DA08 STR X0, [X20 + 0xFC0]
	0x03C4DA0C ADD X1, X31, 0x0
	0x03C4DA10 MOV X0, X19
	0x03C4DA14 MOV W2, W31
	0x03C4DA18 MOV W3, W31
	0x03C4DA1C MOV W4, W31
	0x03C4DA20 MOV W5, W31
	0x03C4DA24 BLR X8
	0x03C4DA28 LDP X20, X19, [X31 + 0x40]
	0x03C4DA2C LDP X30, X21, [X31 + 0x30]
	0x03C4DA30 ADD X31, X31, 0x50
	0x03C4DA34 RET
	0x03C4DA38 STP X30, X25, [X31 - 0x40]!
	0x03C4DA3C STP X24, X23, [X31 + 0x10]
	0x03C4DA40 STP X22, X21, [X31 + 0x20]
	0x03C4DA44 STP X20, X19, [X31 + 0x30]
	0x03C4DA48 ADRP X25, 0x798000
	0x03C4DA4C LDR X6, [X25 + 0xFC0]
	0x03C4DA50 MOV W19, W5
	0x03C4DA54 MOV W20, W4
	0x03C4DA58 MOV W21, W3
	0x03C4DA5C MOV W22, W2
	0x03C4DA60 MOV X23, X1
	0x03C4DA64 MOV X24, X0
	0x03C4DA68 CBNZ X6, 0x3C4DA80
	0x03C4DA6C ADRP X0, 0xFFFFFFFFFCECB000
	0x03C4DA70 ADD X0, X0, 0xD40
	0x03C4DA74 BL 0x1C16CB8
	0x03C4DA78 MOV X6, X0

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x799000
	013 Move X8, [X28+3968]
	014 Move W27, [X31+96]
	015 Move W19, W7
	016 Move X20, X6
	017 Move X21, X5
	018 Move W22, W4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X25, X1
	022 Move X26, X0
	023 Compare X8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51564544
	026 Add X0, X0, 86
	027 Call 0x1C17CB8
	028 Move X8, X0
	029 Move [X28+3968], X0
	030 Move [X31+96], W27
	031 Move X0, X26
	032 Move X1, X25
	033 Move X2, X24
	034 Move X3, X23
	035 Move W4, W22
	036 Move X5, X21
	037 Move X6, X20
	038 Move W7, W19
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Move X22, [X31+64]
	042 Move X21, [X31+72]
	043 Move X24, [X31+48]
	044 Move X23, [X31+56]
	045 Move X26, [X31+32]
	046 Move X25, [X31+40]
	047 Move X28, [X31+16]
	048 Move X27, [X31+24]
	049 Move X30, [X31+96]
	050 CallNoReturn X8

Method: System.Void GetTemporaryRTWithDescriptor_Injected(System.Int32 nameID, ref UnityEngine.RenderTextureDescriptor desc, UnityEngine.FilterMode filter)

Disassembly:
	0x03C4DAD8 ADRP X0, 0xFFFFFFFFFCED3000
	0x03C4DADC ADD X0, X0, 0xDB5
	0x03C4DAE0 BL 0x1C16CB8
	0x03C4DAE4 MOV X8, X0
	0x03C4DAE8 STR X0, [X23 + 0xEB0]
	0x03C4DAEC MOVZ W2, 0x2
	0x03C4DAF0 MOV X0, X21
	0x03C4DAF4 MOV W1, W31
	0x03C4DAF8 BLR X8
	0x03C4DAFC CMP W20, 0x1
	0x03C4DB00 B.EQ 0x3C4DB64
	0x03C4DB04 LDP V0, V1, [X22]
	0x03C4DB08 LDR X9, [X22 + 0x20]
	0x03C4DB0C ADRP X22, 0x798000
	0x03C4DB10 LDR X8, [X22 + 0xFC0]
	0x03C4DB14 STP V0, V1, [X31]
	0x03C4DB18 STR X9, [X31 + 0x20]
	0x03C4DB1C CBNZ X8, 0x3C4DB34
	0x03C4DB20 ADRP X0, 0xFFFFFFFFFCECB000
	0x03C4DB24 ADD X0, X0, 0xD40
	0x03C4DB28 BL 0x1C16CB8
	0x03C4DB2C MOV X8, X0
	0x03C4DB30 STR X0, [X22 + 0xFC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x799000
	008 Move X4, [X23+3976]
	009 Move W19, W3
	010 Move X20, X2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51720192
	016 Add X0, X0, 1666
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+3976], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void ClearRenderTarget_Injected(UnityEngine.Rendering.RTClearFlags clearFlags, ref UnityEngine.Color backgroundColor, System.Single depth, System.UInt32 stencil)

Disassembly:
	0x03C4DC70 LDP X30, X25, [X31 + 0x30]
	0x03C4DC74 ADD X31, X31, 0x70
	0x03C4DC78 RET
	0x03C4DC7C ADRP X0, 0x4AE000
	0x03C4DC80 LDR X0, [X0 + 0x578]
	0x03C4DC84 BL 0x1C16D08
	0x03C4DC88 BL 0x1C16F10
	0x03C4DC8C MOV X19, X0
	0x03C4DC90 ADRP X0, 0x512000
	0x03C4DC94 LDR X0, [X0 + 0xC20]
	0x03C4DC98 BL 0x1C16D08
	0x03C4DC9C MOV X1, X0
	0x03C4DCA0 MOV X0, X19
	0x03C4DCA4 MOV X2, X31
	0x03C4DCA8 BL 0x3314A68
	0x03C4DCAC ADRP X0, 0x512000
	0x03C4DCB0 LDR X0, [X0 + 0xC30]
	0x03C4DCB4 BL 0x1C16D08
	0x03C4DCB8 MOV X1, X0
	0x03C4DCBC MOV X0, X19
	0x03C4DCC0 BL 0x1C16DEC
	0x03C4DCC4 SUB X31, X31, 0x60
	0x03C4DCC8 STR X30, [X31 + 0x30]
	0x03C4DCCC STP X22, X21, [X31 + 0x40]
	0x03C4DCD0 STP X20, X19, [X31 + 0x50]
	0x03C4DCD4 ADRP X22, 0x798000
	0x03C4DCD8 LDR X8, [X22 + 0xEB0]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x799000
	009 Move X4, [X23+3984]
	010 Move W19, W3
	011 Move V8, V0
	012 Move X20, X2
	013 Move W21, W1
	014 Move X22, X0
	015 Compare X4, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51613696
	018 Add X0, X0, 199
	019 Call 0x1C17CB8
	020 Move X4, X0
	021 Move [X23+3984], X0
	022 Move X0, X22
	023 Move W1, W21
	024 Move X2, X20
	025 Move W3, W19
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X22, [X31+32]
	029 Move X21, [X31+40]
	030 Move X30, [X31+16]
	031 Move X23, [X31+24]
	032 Move V0, V8
	033 Move V8, [X31+64]
	034 CallNoReturn X4

Method: System.Void SetGlobalVector_Injected(System.Int32 nameID, ref UnityEngine.Vector4 value)

Disassembly:
	0x03C4DF34 ADRP X0, 0x4AE000
	0x03C4DF38 LDR X0, [X0 + 0x578]
	0x03C4DF3C BL 0x1C16D08
	0x03C4DF40 BL 0x1C16F10
	0x03C4DF44 MOV X1, X19
	0x03C4DF48 MOV X2, X31
	0x03C4DF4C MOV X20, X0
	0x03C4DF50 BL 0x3314A68
	0x03C4DF54 ADRP X0, 0x512000
	0x03C4DF58 LDR X0, [X0 + 0xC50]
	0x03C4DF5C BL 0x1C16D08
	0x03C4DF60 MOV X1, X0
	0x03C4DF64 MOV X0, X20
	0x03C4DF68 BL 0x1C16DEC
	0x03C4DF6C SUB X31, X31, 0xA0
	0x03C4DF70 STP X30, X25, [X31 + 0x60]
	0x03C4DF74 STP X24, X23, [X31 + 0x70]
	0x03C4DF78 STP X22, X21, [X31 + 0x80]
	0x03C4DF7C STP X20, X19, [X31 + 0x90]
	0x03C4DF80 ADRP X25, 0x798000
	0x03C4DF84 LDR X8, [X25 + 0xEB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x799000
	007 Move X3, [X22+3992]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51564544
	014 Add X0, X0, 343
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3992], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetGlobalColor_Injected(System.Int32 nameID, ref UnityEngine.Color value)

Disassembly:
	0x03C4DFE4 LDR X11, [X23 + 0x20]
	0x03C4DFE8 STP W22, W21, [X31 + 0x48]
	0x03C4DFEC ADRP X21, 0x798000
	0x03C4DFF0 LDR X8, [X21 + 0xFC8]
	0x03C4DFF4 STR X11, [X31 + 0x20]
	0x03C4DFF8 STP V1, V2, [X31]
	0x03C4DFFC STR D0, [X31 + 0x30]
	0x03C4E000 STP W9, W31, [X31 + 0x38]
	0x03C4E004 STR X10, [X31 + 0x40]
	0x03C4E008 STP W20, W31, [X31 + 0x50]
	0x03C4E00C CBNZ X8, 0x3C4E024
	0x03C4E010 ADRP X0, 0xFFFFFFFFFCEBF000
	0x03C4E014 ADD X0, X0, 0x240
	0x03C4E018 BL 0x1C16CB8
	0x03C4E01C MOV X8, X0
	0x03C4E020 STR X0, [X21 + 0xFC8]
	0x03C4E024 ADD X1, X31, 0x30
	0x03C4E028 ADD X2, X31, 0x0
	0x03C4E02C MOV X0, X19
	0x03C4E030 MOV W3, W31
	0x03C4E034 MOV W4, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x799000
	007 Move X3, [X22+4000]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51666944
	014 Add X0, X0, 1419
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+4000], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetGlobalMatrix_Injected(System.Int32 nameID, ref UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C4E08C ADRP X0, 0x4A5000
	0x03C4E090 LDR X0, [X0 + 0x758]
	0x03C4E094 BL 0x1C16D08
	0x03C4E098 ADD X1, X31, 0x5C
	0x03C4E09C BL 0x1C16E04
	0x03C4E0A0 MOV X19, X0
	0x03C4E0A4 ADRP X0, 0x511000
	0x03C4E0A8 LDR X0, [X0 + 0xC38]
	0x03C4E0AC BL 0x1C16D08
	0x03C4E0B0 MOV X1, X19
	0x03C4E0B4 MOV X2, X31
	0x03C4E0B8 BL 0x321EFD0
	0x03C4E0BC MOV X19, X0
	0x03C4E0C0 ADRP X0, 0x4AD000
	0x03C4E0C4 LDR X0, [X0 + 0x578]
	0x03C4E0C8 BL 0x1C16D08
	0x03C4E0CC BL 0x1C16F10
	0x03C4E0D0 MOV X1, X19
	0x03C4E0D4 MOV X2, X31
	0x03C4E0D8 MOV X20, X0
	0x03C4E0DC BL 0x3314A68

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x798000
	007 Move X3, [X22+4008]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51613696
	014 Add X0, X0, 3317
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+4008], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetMaterialKeyword_Injected(UnityEngine.Material material, ref UnityEngine.Rendering.LocalKeyword keyword, System.Boolean value)

Disassembly:
	0x03C4E1C4 ADRP X0, 0xFFFFFFFFFCED2000
	0x03C4E1C8 ADD X0, X0, 0xDB5
	0x03C4E1CC BL 0x1C16CB8
	0x03C4E1D0 MOV X8, X0
	0x03C4E1D4 STR X0, [X26 + 0xEB0]
	0x03C4E1D8 MOVZ W2, 0x2
	0x03C4E1DC MOV X0, X23
	0x03C4E1E0 MOV W1, W31
	0x03C4E1E4 BLR X8
	0x03C4E1E8 CMP W22, 0x1
	0x03C4E1EC B.EQ 0x3C4E278
	0x03C4E1F0 CMP W20, 0x1
	0x03C4E1F4 B.EQ 0x3C4E278
	0x03C4E1F8 LDR X8, [X25 + 0x20]
	0x03C4E1FC LDP V1, V0, [X25]
	0x03C4E200 ADRP X25, 0x797000
	0x03C4E204 STR X8, [X31 + 0x50]
	0x03C4E208 STP V1, V0, [X31 + 0x30]
	0x03C4E20C LDR X9, [X24 + 0x20]
	0x03C4E210 LDP V0, V1, [X24]
	0x03C4E214 LDR X8, [X25 + 0xFC8]
	0x03C4E218 STR X9, [X31 + 0x20]
	0x03C4E21C STP V0, V1, [X31]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x798000
	008 Move X4, [X23+4016]
	009 Move W21, W3
	010 Move X19, X2
	011 Move X20, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51732480
	016 Add X0, X0, 1547
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+4016], X0
	020 And W3, W21, 1
	021 Move X0, X22
	022 Move X1, X20
	023 Move X2, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetViewProjectionMatrices_Injected(ref UnityEngine.Matrix4x4 view, ref UnityEngine.Matrix4x4 proj)

Disassembly:
	0x03C4E2E8 MOV X24, X2
	0x03C4E2EC MOV X20, X1
	0x03C4E2F0 MOV X22, X0
	0x03C4E2F4 CBNZ X8, 0x3C4E30C
	0x03C4E2F8 ADRP X0, 0xFFFFFFFFFCED2000
	0x03C4E2FC ADD X0, X0, 0xDB5
	0x03C4E300 BL 0x1C16CB8
	0x03C4E304 MOV X8, X0
	0x03C4E308 STR X0, [X25 + 0xEB0]
	0x03C4E30C MOVZ W2, 0x2
	0x03C4E310 MOV X0, X22
	0x03C4E314 MOV W1, W31
	0x03C4E318 BLR X8
	0x03C4E31C CBZ X20, 0x3C4E3B4
	0x03C4E320 LDR W8, [X20 + 0x18]
	0x03C4E324 CMP W8, 0x0
	0x03C4E328 B.LE 0x3C4E3B8
	0x03C4E32C MOV X0, X31
	0x03C4E330 BL 0x3C3BDEC
	0x03C4E334 LDR W8, [X20 + 0x18]
	0x03C4E338 CMP W0, W8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x798000
	007 Move X3, [X22+4024]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51724288
	014 Add X0, X0, 1815
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+4024], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetRenderTargetSingle_Internal_Injected(ref UnityEngine.Rendering.RenderTargetIdentifier rt, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction)

Disassembly:
	0x03C4F538 STP X24, X23, [X31 + 0x30]
	0x03C4F53C STP X22, X21, [X31 + 0x40]
	0x03C4F540 STP X20, X19, [X31 + 0x50]
	0x03C4F544 ADRP X27, 0x796000
	0x03C4F548 LDRB W8, [X27 + 0xF4C]
	0x03C4F54C MOV X20, X7
	0x03C4F550 MOV W21, W6
	0x03C4F554 MOV X19, X5
	0x03C4F558 MOV W22, W4
	0x03C4F55C MOV X23, X3
	0x03C4F560 MOV W24, W2
	0x03C4F564 MOV X25, X1
	0x03C4F568 MOV X26, X0
	0x03C4F56C TBNZ X8, 0x0, 0x3C4F590
	0x03C4F570 ADRP X0, 0x4A8000
	0x03C4F574 LDR X0, [X0 + 0x2C8]
	0x03C4F578 BL 0x1C16CF4
	0x03C4F57C ADRP X0, 0x4A4000
	0x03C4F580 LDR X0, [X0 + 0x598]
	0x03C4F584 BL 0x1C16CF4
	0x03C4F588 MOVZ W8, 0x1
	0x03C4F58C STRB W8, [X27 + 0xF4C]
	0x03C4F590 MOV X0, X31
	0x03C4F594 BL 0x3C3BD9C
	0x03C4F598 TBZ X0, 0x0, 0x3C4F7FC
	0x03C4F59C ADRP X27, 0x4A4000
	0x03C4F5A0 LDR X27, [X27 + 0x598]
	0x03C4F5A4 LDR X0, [X27]
	0x03C4F5A8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x797000
	010 Move X6, [X25+4032]
	011 Move W19, W5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51601408
	020 Add X0, X0, 3392
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+4032], X0
	024 Move X0, X24
	025 Move X1, X23
	026 Move W2, W22
	027 Move W3, W21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void SetRenderTargetColorDepth_Internal_Injected(ref UnityEngine.Rendering.RenderTargetIdentifier color, ref UnityEngine.Rendering.RenderTargetIdentifier depth, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, UnityEngine.Rendering.RenderTargetFlags flags)

Disassembly:
	0x03C4F5AC CBNZ W8, 0x3C4F5B4
	0x03C4F5B0 BL 0x1C16DFC
	0x03C4F5B4 MOV X0, X25
	0x03C4F5B8 MOV X1, X31
	0x03C4F5BC MOV X2, X31
	0x03C4F5C0 BL 0x3C3883C
	0x03C4F5C4 TBNZ X0, 0x0, 0x3C4F830
	0x03C4F5C8 TBNZ X24, 0x1F, 0x3C4F6F8
	0x03C4F5CC CBZ X25, 0x3C4F850
	0x03C4F5D0 MOV X0, X25
	0x03C4F5D4 MOV X1, X31
	0x03C4F5D8 BL 0x3C0F650
	0x03C4F5DC CMP W0, W24
	0x03C4F5E0 B.LE 0x3C4F6F8
	0x03C4F5E4 LDR X0, [X27]
	0x03C4F5E8 LDR W8, [X0 + 0xE0]
	0x03C4F5EC CBNZ W8, 0x3C4F5F4
	0x03C4F5F0 BL 0x1C16DFC
	0x03C4F5F4 MOV X0, X23
	0x03C4F5F8 MOV X1, X31
	0x03C4F5FC MOV X2, X31
	0x03C4F600 BL 0x3C3883C
	0x03C4F604 TBNZ X0, 0x0, 0x3C4F854
	0x03C4F608 CBZ X19, 0x3C4F874
	0x03C4F60C TBNZ X21, 0x1F, 0x3C4F740
	0x03C4F610 ADRP X27, 0x4A8000
	0x03C4F614 LDR X27, [X27 + 0x2C8]
	0x03C4F618 LDR X0, [X27]
	0x03C4F61C LDR W8, [X0 + 0xE0]
	0x03C4F620 CBNZ W8, 0x3C4F62C
	0x03C4F624 BL 0x1C16DFC
	0x03C4F628 LDR X0, [X27]
	0x03C4F62C LDR X8, [X0 + 0xB8]
	0x03C4F630 LDR W9, [X19 + 0x18]
	0x03C4F634 LDR W8, [X8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x797000
	012 Move X8, [X27+4040]
	013 Move W19, W7
	014 Move W20, W6
	015 Move W21, W5
	016 Move W22, W4
	017 Move W23, W3
	018 Move X24, X2
	019 Move X25, X1
	020 Move X26, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51646464
	024 Add X0, X0, 576
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X27+4040], X0
	028 Move X0, X26
	029 Move X1, X25
	030 Move X2, X24
	031 Move W3, W23
	032 Move W4, W22
	033 Move W5, W21
	034 Move W6, W20
	035 Move W7, W19
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X24, [X31+32]
	041 Move X23, [X31+40]
	042 Move X26, [X31+16]
	043 Move X25, [X31+24]
	044 Move X30, [X31+80]
	045 Move X27, [X31+88]
	046 CallNoReturn X8

Method: System.Void SetRenderTargetMultiSubtarget_Injected(UnityEngine.Rendering.RenderTargetIdentifier[] colors, ref UnityEngine.Rendering.RenderTargetIdentifier depth, UnityEngine.Rendering.RenderBufferLoadAction[] colorLoadActions, UnityEngine.Rendering.RenderBufferStoreAction[] colorStoreActions, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, System.Int32 mipLevel, UnityEngine.CubemapFace cubemapFace, System.Int32 depthSlice)

Disassembly:
	0x03C4F638 CMP W8, W9
	0x03C4F63C CSEL W8, W8, W9, LT
	0x03C4F640 CMP W8, W21
	0x03C4F644 B.LT 0x3C4F740
	0x03C4F648 ADRP X27, 0x796000
	0x03C4F64C LDR X8, [X27 + 0xEB0]
	0x03C4F650 CBNZ X8, 0x3C4F668
	0x03C4F654 ADRP X0, 0xFFFFFFFFFCED1000
	0x03C4F658 ADD X0, X0, 0xDB5
	0x03C4F65C BL 0x1C16CB8
	0x03C4F660 MOV X8, X0
	0x03C4F664 STR X0, [X27 + 0xEB0]
	0x03C4F668 MOVZ W2, 0x2
	0x03C4F66C MOV X0, X26
	0x03C4F670 MOV W1, W31
	0x03C4F674 BLR X8
	0x03C4F678 CMP W21, 0x1
	0x03C4F67C B.LT 0x3C4F6DC
	0x03C4F680 ADRP X27, 0x796000
	0x03C4F684 LDR X8, [X27 + 0xE48]
	0x03C4F688 CBNZ X8, 0x3C4F6A0
	0x03C4F68C ADRP X0, 0xFFFFFFFFFCEC7000
	0x03C4F690 ADD X0, X0, 0xECC
	0x03C4F694 BL 0x1C16CB8
	0x03C4F698 MOV X8, X0
	0x03C4F69C STR X0, [X27 + 0xE48]
	0x03C4F6A0 MOV X0, X26
	0x03C4F6A4 MOV X1, X25
	0x03C4F6A8 MOV W2, W24
	0x03C4F6AC MOV X3, X23
	0x03C4F6B0 MOV W4, W22
	0x03C4F6B4 MOV X5, X19
	0x03C4F6B8 MOV W6, W21
	0x03C4F6BC MOV X7, X20
	0x03C4F6C0 LDP X20, X19, [X31 + 0x50]
	0x03C4F6C4 LDP X22, X21, [X31 + 0x40]
	0x03C4F6C8 LDP X24, X23, [X31 + 0x30]
	0x03C4F6CC LDP X26, X25, [X31 + 0x20]
	0x03C4F6D0 LDP X30, X27, [X31 + 0x10]
	0x03C4F6D4 ADD X31, X31, 0x60
	0x03C4F6D8 BR X8

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x797000
	014 Move W27, [X31+104]
	015 Move X8, [X29+4048]
	016 Move W28, [X31+96]
	017 Move W19, W7
	018 Move W20, W6
	019 Move W21, W5
	020 Move X22, X4
	021 Move X23, X3
	022 Move X24, X2
	023 Move X25, X1
	024 Move X26, X0
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -51527680
	028 Add X0, X0, 3243
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X29+4048], X0
	032 Move [X31+104], W27
	033 Move [X31+96], W28
	034 Move X0, X26
	035 Move X1, X25
	036 Move X2, X24
	037 Move X3, X23
	038 Move X4, X22
	039 Move W5, W21
	040 Move W6, W20
	041 Move W7, W19
	042 Move X20, [X31+80]
	043 Move X19, [X31+88]
	044 Move X22, [X31+64]
	045 Move X21, [X31+72]
	046 Move X24, [X31+48]
	047 Move X23, [X31+56]
	048 Move X26, [X31+32]
	049 Move X25, [X31+40]
	050 Move X28, [X31+16]
	051 Move X27, [X31+24]
	052 Move X29, [X31+96]
	053 Move X30, [X31+104]
	054 CallNoReturn X8

