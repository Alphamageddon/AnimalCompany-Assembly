Type: UnityEngine.Rendering.DepthState

Method: UnityEngine.Rendering.DepthState get_defaultValue()

Disassembly:
	0x03C54434 MOV X20, X1
	0x03C54438 MOV X19, X0
	0x03C5443C TBNZ X8, 0x0, 0x3C54454
	0x03C54440 ADRP X0, 0x50B000
	0x03C54444 LDR X0, [X0 + 0xDB0]
	0x03C54448 BL 0x1C16CF4
	0x03C5444C MOVZ W8, 0x1
	0x03C54450 STRB W8, [X21 + 0x5F]
	0x03C54454 CBZ X20, 0x3C54470

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X31, 12
	003 Move W1, 1
	004 Move W2, 2
	005 NotImplemented "Instruction STRH not yet implemented."
	006 Call DepthState..ctor, X0, X1, X2
	007 NotImplemented "Instruction LDRH not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Void .ctor(System.Boolean writeEnabled = True, UnityEngine.Rendering.CompareFunction compareFunction = 2)

Disassembly:
	0x03C54458 ADRP X21, 0x50B000
	0x03C5445C LDR X21, [X21 + 0xDB0]
	0x03C54460 LDR X8, [X20]
	0x03C54464 LDR X0, [X21]
	0x03C54468 CMP X8, X0
	0x03C5446C B.EQ 0x3C54480
	0x03C54470 LDP X20, X19, [X31 + 0x10]
	0x03C54474 MOV W0, W31
	0x03C54478 LDP X30, X21, [X31], #0x20
	0x03C5447C RET
	0x03C54480 LDR W8, [X0 + 0xE0]
	0x03C54484 CBZ W8, 0x3C54490
	0x03C54488 MOV X1, X0
	0x03C5448C B 0x3C5449C
	0x03C54490 BL 0x1C16DFC
	0x03C54494 LDR X1, [X21]
	0x03C54498 LDR X0, [X20]
	0x03C5449C LDR X8, [X0 + 0x40]
	0x03C544A0 LDR X9, [X1 + 0x40]
	0x03C544A4 MOV X0, X20
	0x03C544A8 CMP X8, X9
	0x03C544AC B.NE 0x3C544C8
	0x03C544B0 BL 0x1C16E08
	0x03C544B4 LDP X1, X2, [X0]
	0x03C544B8 MOV X0, X19
	0x03C544BC LDP X20, X19, [X31 + 0x10]
	0x03C544C0 LDP X30, X21, [X31], #0x20
	0x03C544C4 B 0x3C543B0
	0x03C544C8 BL 0x1C171E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x793000
	008 Move X23, 0x4A9000
	009 Move W8, [X22+80]
	010 Move X23, [X23+2536]
	011 Move W19, W2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x4A9000
	019 Move X0, [X0+2536]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+80], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 And W0, W21, 1
	029 Move X1, X31
	030 Call Convert.ToByte, X0
	031 Move [X20], W0
	032 Move [X20+1], W19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Return 

Method: UnityEngine.Rendering.CompareFunction get_compareFunction()

Disassembly:
	0x03C544CC STP X30, X21, [X31 - 0x20]!
	0x03C544D0 STP X20, X19, [X31 + 0x10]

ISIL:
	001 NotImplemented "Instruction INVALID not yet implemented."
	002 Return X0

Method: System.Boolean Equals(UnityEngine.Rendering.DepthState other)

Disassembly:
	0x03C544D4 MOV X19, X0
	0x03C544D8 LDP W8, W9, [X0], #0x8
	0x03C544DC MOVZ W20, 0x18D
	0x03C544E0 MOV X1, X31
	0x03C544E4 MUL W8, W8, W20
	0x03C544E8 EOR W21, W8, W9, 0x0
	0x03C544EC BL 0x338FE0C
	0x03C544F0 MUL W8, W21, W20
	0x03C544F4 EOR W21, W8, W0, 0x0
	0x03C544F8 ADD X0, X19, 0xC

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction INVALID not yet implemented."
	004 Move W9, W1
	005 ShiftRight W9, 16
	006 And W9, W9, 0x7FFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0
	010 Move W0, W31
	011 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C544FC MOV X1, X31
	0x03C54500 BL 0x3319718
	0x03C54504 MUL W8, W21, W20
	0x03C54508 EOR W21, W8, W0, 0x0
	0x03C5450C ADD X0, X19, 0xD
	0x03C54510 MOV X1, X31
	0x03C54514 BL 0x3319718
	0x03C54518 MUL W8, W21, W20
	0x03C5451C LDP X20, X19, [X31 + 0x10]
	0x03C54520 EOR W0, W8, W0, 0x0
	0x03C54524 LDP X30, X21, [X31], #0x20
	0x03C54528 RET
	0x03C5452C SUB X31, X31, 0x30
	0x03C54530 STR X30, [X31 + 0x10]
	0x03C54534 STP X20, X19, [X31 + 0x20]
	0x03C54538 ADRP X20, 0x792000
	0x03C5453C ADRP X19, 0x50B000
	0x03C54540 LDRB W8, [X20 + 0x60]
	0x03C54544 LDR X19, [X19 + 0xDB0]
	0x03C54548 TBNZ X8, 0x0, 0x3C54560
	0x03C5454C ADRP X0, 0x50B000
	0x03C54550 LDR X0, [X0 + 0xDB0]
	0x03C54554 BL 0x1C16CF4
	0x03C54558 MOVZ W8, 0x1
	0x03C5455C STRB W8, [X20 + 0x60]
	0x03C54560 ADD X0, X31, 0x0
	0x03C54564 FMOV S0, W31
	0x03C54568 MOVZ W1, 0x2
	0x03C5456C MOVZ W3, 0x1
	0x03C54570 MOV W2, W31
	0x03C54574 STP X31, X31, [X31]
	0x03C54578 BL 0x3C5430C
	0x03C5457C LDR X8, [X19]
	0x03C54580 LDR V0, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x793000
	006 Move W8, [X21+81]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x50C000
	014 Move X0, [X0+3448]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+81], W8
	018 Compare X20, 0
	019 JumpIfEqual {36}
	020 Move X8, 0x50C000
	021 Move X8, [X8+3448]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move W9, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction INVALID not yet implemented."
	031 Move W8, W8
	032 ShiftRight W8, 16
	033 And W8, W8, 0x7FFF
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move W0, W31
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C54584 LDP X20, X19, [X31 + 0x20]
	0x03C54588 LDR X30, [X31 + 0x10]
	0x03C5458C LDR X8, [X8 + 0xB8]
	0x03C54590 STR V0, [X8]
	0x03C54594 ADD X31, X31, 0x30
	0x03C54598 RET
	0x03C5459C STR X30, [X31 - 0x30]!
	0x03C545A0 STP X22, X21, [X31 + 0x10]
	0x03C545A4 STP X20, X19, [X31 + 0x20]
	0x03C545A8 ADRP X21, 0x792000
	0x03C545AC ADRP X22, 0x500000
	0x03C545B0 LDRB W8, [X21 + 0x61]
	0x03C545B4 LDR X22, [X22 + 0x50]
	0x03C545B8 MOV X19, X1
	0x03C545BC MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call Byte.GetHashCode, X0
	007 Move W20, W0
	008 Add X0, X19, 1
	009 Move X1, X31
	010 Call SByte.GetHashCode, X0
	011 Move W8, 397
	012 Multiply W8, W20, W8
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Xor W0, W8, W0
	016 Move X30, [X31+32]
	017 Return X0

