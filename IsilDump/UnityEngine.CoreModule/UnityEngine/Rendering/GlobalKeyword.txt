Type: UnityEngine.Rendering.GlobalKeyword

Method: System.UInt32 GetGlobalKeywordCount()

Disassembly:
	0x03C5DD94 B 0x3C36D2C
	0x03C5DD98 MOV X1, X31
	0x03C5DD9C B 0x33BDD8C
	0x03C5DDA0 RET
	0x03C5DDA4 RET
	0x03C5DDA8 RET
	0x03C5DDAC RET
	0x03C5DDB0 RET
	0x03C5DDB4 RET
	0x03C5DDB8 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x78A000
	004 Move X0, [X19+440]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51679232
	008 Add X0, X0, 624
	009 Call 0x1C17CB8
	010 Move [X19+440], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.UInt32 GetGlobalKeywordIndex(System.String keyword)

Disassembly:
	0x03C5DDBC RET
	0x03C5DDC0 MOV X1, X31
	0x03C5DDC4 B 0x33C5A24
	0x03C5DDC8 STP X30, X21, [X31 - 0x20]!
	0x03C5DDCC STP X20, X19, [X31 + 0x10]
	0x03C5DDD0 ADRP X20, 0x789000
	0x03C5DDD4 ADRP X21, 0x502000
	0x03C5DDD8 ADRP X19, 0x502000
	0x03C5DDDC LDRB W8, [X20 + 0x241]
	0x03C5DDE0 LDR X21, [X21 + 0xFB0]
	0x03C5DDE4 LDR X19, [X19 + 0xFA8]
	0x03C5DDE8 TBNZ X8, 0x0, 0x3C5DE0C
	0x03C5DDEC ADRP X0, 0x502000
	0x03C5DDF0 LDR X0, [X0 + 0xFB0]
	0x03C5DDF4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x78A000
	005 Move X1, [X20+448]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51712000
	010 Add X0, X0, 2036
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+448], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void CreateGlobalKeyword(System.String keyword)

Disassembly:
	0x03C5DDF8 ADRP X0, 0x502000
	0x03C5DDFC LDR X0, [X0 + 0xFA8]
	0x03C5DE00 BL 0x1C16CF4
	0x03C5DE04 MOVZ W8, 0x1
	0x03C5DE08 STRB W8, [X20 + 0x241]
	0x03C5DE0C LDR X0, [X21]
	0x03C5DE10 MOV W1, W31
	0x03C5DE14 BL 0x1C16D6C
	0x03C5DE18 LDR X8, [X19]
	0x03C5DE1C MOVZ X9, 0x7FF00000
	0x03C5DE20 LDR X8, [X8 + 0xB8]
	0x03C5DE24 STR X0, [X8]
	0x03C5DE28 LDR X8, [X19]
	0x03C5DE2C LDP X20, X19, [X31 + 0x10]
	0x03C5DE30 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x78A000
	005 Move X1, [X20+456]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51605504
	010 Add X0, X0, 873
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+456], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Rendering.GlobalKeyword Create(System.String name)

Disassembly:
	0x03C5DE34 STR X9, [X8 + 0x8]
	0x03C5DE38 LDP X30, X21, [X31], #0x20
	0x03C5DE3C RET
	0x03C5DE40 STP X30, X21, [X31 - 0x20]!
	0x03C5DE44 STP X20, X19, [X31 + 0x10]
	0x03C5DE48 LDR X8, [X2 + 0x8]
	0x03C5DE4C STP X1, X2, [X0 + 0x20]
	0x03C5DE50 MOV X19, X0
	0x03C5DE54 MOV X20, X1
	0x03C5DE58 STR X8, [X0 + 0x10]
	0x03C5DE5C LDRB W21, [X2 + 0x52]
	0x03C5DE60 STR X0, [X0 + 0x40]
	0x03C5DE64 MOV X0, X2
	0x03C5DE68 BL 0x1C16D84
	0x03C5DE6C TBZ X0, 0x0, 0x3C5DE88
	0x03C5DE70 CMP W21, 0x2
	0x03C5DE74 B.NE 0x3C5DE8C
	0x03C5DE78 ADRP X8, 0xFFFFFFFFFDFAE000
	0x03C5DE7C ADD X8, X8, 0x704
	0x03C5DE80 STR X8, [X19 + 0x18]
	0x03C5DE84 B 0x3C5DE9C
	0x03C5DE88 CBZ X20, 0x3C5DEB4
	0x03C5DE8C LDR X8, [X19 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x78A000
	006 Move X8, [X20+456]
	007 Move X19, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51605504
	011 Add X0, X0, 873
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X20+456], X0
	015 Move X0, X19
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Add X0, X31, 0
	018 Move X1, X19
	019 Move [X31], X31
	020 Move [X31+8], X31
	021 Call GlobalKeyword..ctor, X0, X1
	022 Move X0, [X31]
	023 Move X1, [X31+8]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: System.Void .ctor(System.String name)

Disassembly:
	0x03C5DE90 LDR X9, [X19 + 0x20]
	0x03C5DE94 STR X8, [X19 + 0x18]
	0x03C5DE98 STR X9, [X19 + 0x40]
	0x03C5DE9C ADRP X8, 0xFFFFFFFFFDFAE000
	0x03C5DEA0 ADD X8, X8, 0x698
	0x03C5DEA4 STR X8, [X19 + 0x38]
	0x03C5DEA8 LDP X20, X19, [X31 + 0x10]
	0x03C5DEAC LDP X30, X21, [X31], #0x20
	0x03C5DEB0 RET
	0x03C5DEB4 ADRP X1, 0xFFFFFFFFFCEBE000
	0x03C5DEB8 ADD X1, X1, 0xEE3
	0x03C5DEBC MOV X0, X31
	0x03C5DEC0 BL 0x1C16F3C
	0x03C5DEC4 MOV X1, X31
	0x03C5DEC8 BL 0x1C16DEC
	0x03C5DECC LDR X8, [X0 + 0x40]
	0x03C5DED0 LDR X5, [X0 + 0x18]
	0x03C5DED4 LDR X4, [X0 + 0x28]
	0x03C5DED8 MOV X0, X8
	0x03C5DEDC BR X5
	0x03C5DEE0 SUB X31, X31, 0x30
	0x03C5DEE4 STP X31, X30, [X31 + 0x8]
	0x03C5DEE8 STP X20, X19, [X31 + 0x20]
	0x03C5DEEC ADRP X20, 0x789000
	0x03C5DEF0 LDR X8, [X20 + 0x248]
	0x03C5DEF4 MOV X19, X0
	0x03C5DEF8 STR X31, [X31]
	0x03C5DEFC CBNZ X8, 0x3C5DF14
	0x03C5DF00 ADRP X0, 0xFFFFFFFFFCECD000
	0x03C5DF04 ADD X0, X0, 0xE41
	0x03C5DF08 BL 0x1C16CB8
	0x03C5DF0C MOV X8, X0
	0x03C5DF10 STR X0, [X20 + 0x248]
	0x03C5DF14 ADD X1, X31, 0x0
	0x03C5DF18 MOV X0, X19
	0x03C5DF1C BLR X8
	0x03C5DF20 LDP X0, X1, [X31]
	0x03C5DF24 LDP X20, X19, [X31 + 0x20]
	0x03C5DF28 LDR X30, [X31 + 0x10]
	0x03C5DF2C ADD X31, X31, 0x30
	0x03C5DF30 RET
	0x03C5DF34 STP X30, X21, [X31 - 0x20]!
	0x03C5DF38 STP X20, X19, [X31 + 0x10]
	0x03C5DF3C ADRP X21, 0x789000
	0x03C5DF40 LDR X2, [X21 + 0x248]
	0x03C5DF44 MOV X19, X1
	0x03C5DF48 MOV X20, X0
	0x03C5DF4C CBNZ X2, 0x3C5DF64
	0x03C5DF50 ADRP X0, 0xFFFFFFFFFCECD000
	0x03C5DF54 ADD X0, X0, 0xE41
	0x03C5DF58 BL 0x1C16CB8
	0x03C5DF5C MOV X2, X0
	0x03C5DF60 STR X0, [X21 + 0x248]
	0x03C5DF64 MOV X0, X20
	0x03C5DF68 MOV X1, X19
	0x03C5DF6C LDP X20, X19, [X31 + 0x10]
	0x03C5DF70 LDP X30, X21, [X31], #0x20
	0x03C5DF74 BR X2
	0x03C5DF78 STR X30, [X31 - 0x20]!
	0x03C5DF7C STP X20, X19, [X31 + 0x10]
	0x03C5DF80 ADRP X20, 0x789000
	0x03C5DF84 LDR X1, [X20 + 0x250]
	0x03C5DF88 MOV X19, X0
	0x03C5DF8C CBNZ X1, 0x3C5DFA4
	0x03C5DF90 ADRP X0, 0xFFFFFFFFFCECB000
	0x03C5DF94 ADD X0, X0, 0xD56
	0x03C5DF98 BL 0x1C16CB8
	0x03C5DF9C MOV X1, X0
	0x03C5DFA0 STR X0, [X20 + 0x250]
	0x03C5DFA4 MOV X0, X19
	0x03C5DFA8 LDP X20, X19, [X31 + 0x10]
	0x03C5DFAC LDR X30, [X31], #0x20
	0x03C5DFB0 BR X1
	0x03C5DFB4 STR X30, [X31 - 0x20]!
	0x03C5DFB8 STP X20, X19, [X31 + 0x10]
	0x03C5DFBC ADRP X20, 0x789000
	0x03C5DFC0 LDR X1, [X20 + 0x250]
	0x03C5DFC4 MOV X19, X0
	0x03C5DFC8 CBNZ X1, 0x3C5DFE0
	0x03C5DFCC ADRP X0, 0xFFFFFFFFFCECB000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x78A000
	006 Move W8, [X21+464]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x497000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x497000
	017 Move X0, [X0+2512]
	018 Call 0x1C17CF4
	019 Move X0, 0x503000
	020 Move X0, [X0+3960]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+464], W8
	024 Move [X20], X19
	025 Move X21, 0x78A000
	026 Move X8, [X21+448]
	027 Compare X8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51712000
	030 Add X0, X0, 2036
	031 Call 0x1C17CB8
	032 Move X8, X0
	033 Move [X21+448], X0
	034 Move X0, X19
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move [X20+8], W0
	037 Move X20, 0x78A000
	038 Move X8, [X20+440]
	039 Move W21, W0
	040 Compare X8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, -51679232
	043 Add X0, X0, 624
	044 Call 0x1C17CB8
	045 Move X8, X0
	046 Move [X20+440], X0
	047 NotImplemented "Instruction BLR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 
	054 Move X8, 0x497000
	055 Move X8, [X8+2512]
	056 Move W1, 1
	057 Move X0, [X8]
	058 Call 0x1C17D6C
	059 Compare X0, 0
	060 JumpIfEqual {92}
	061 Move X20, X0
	062 Compare X19, 0
	063 JumpIfEqual {70}
	064 Move X8, [X20]
	065 Move X0, X19
	066 Move X1, [X8+64]
	067 Call 0x1C17E00
	068 Compare X0, 0
	069 JumpIfEqual {94}
	070 Move W8, [X20+24]
	071 Compare W8, 0
	072 JumpIfEqual {93}
	073 Move [X20+32], X19
	074 Move X8, 0x497000
	075 Move X8, [X8+2600]
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, 0x503000
	082 Move X8, [X8+3960]
	083 Move X1, X20
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X2, X31
	087 Move X0, [X8]
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Call Debug.LogErrorFormat, X0, X1
	091 Return 
	092 Call 0x1C17F20
	093 Call 0x1C17F28
	094 Call 0x1C17F44
	095 Move X1, X31
	096 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x03C5DFD0 ADD X0, X0, 0xD56
	0x03C5DFD4 BL 0x1C16CB8

ISIL:
	001 Move X0, [X0]
	002 Return X0

