Type: UnityEngine.Rendering.ScriptableCullingParameters

Method: System.Void set_maximumVisibleLights(System.Int32 value)

Disassembly:
	0x03C52E14 ADRP X0, 0xFFFFFFFFFCEB5000
	0x03C52E18 ADD X0, X0, 0x5E9

ISIL:
	001 Move [X0+1572], W1
	002 Return 

Method: System.Void set_conservativeEnclosingSphere(System.Boolean value)

Disassembly:
	0x03C52E1C BL 0x1C16CB8
	0x03C52E20 MOV X8, X0
	0x03C52E24 STR X0, [X28 + 0x48]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+1576], W8
	003 Return 

Method: System.Void set_numIterationsEnclosingSphere(System.Int32 value)

Disassembly:
	0x03C52E28 STR X27, [X31 + 0x60]
	0x03C52E2C MOV X0, X26

ISIL:
	001 Move [X0+1580], W1
	002 Return 

Method: System.Int32 get_cullingPlaneCount()

Disassembly:
	0x03C52E30 MOV W1, W25
	0x03C52E34 MOV W2, W24

ISIL:
	001 Move W0, [X0+192]
	002 Return X0

Method: System.Void set_isOrthographic(System.Boolean value)

Disassembly:
	0x03C52E38 MOV W3, W23
	0x03C52E3C MOV X4, X22
	0x03C52E40 MOV W5, W21
	0x03C52E44 MOV X6, X20
	0x03C52E48 MOV X7, X19
	0x03C52E4C LDP X20, X19, [X31 + 0x50]
	0x03C52E50 LDP X22, X21, [X31 + 0x40]
	0x03C52E54 LDP X24, X23, [X31 + 0x30]
	0x03C52E58 LDP X26, X25, [X31 + 0x20]
	0x03C52E5C LDP X28, X27, [X31 + 0x10]
	0x03C52E60 LDR X30, [X31 + 0x8]
	0x03C52E64 MOV V0.16B, V8.16B
	0x03C52E68 LDR V8, [X31], #0x60
	0x03C52E6C BR X8
	0x03C52E70 STR X30, [X31 - 0x20]!
	0x03C52E74 STP X20, X19, [X31 + 0x10]
	0x03C52E78 ADRP X20, 0x794000
	0x03C52E7C LDRB W8, [X20 + 0x40]
	0x03C52E80 MOV X19, X0
	0x03C52E84 TBNZ X8, 0x0, 0x3C52E9C
	0x03C52E88 ADRP X0, 0x50D000
	0x03C52E8C LDR X0, [X0 + 0xD50]
	0x03C52E90 BL 0x1C16CF4
	0x03C52E94 MOVZ W8, 0x1
	0x03C52E98 STRB W8, [X20 + 0x40]
	0x03C52E9C LDR X8, [X19 + 0x8]
	0x03C52EA0 CBZ X8, 0x3C52EC8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x794000
	007 Move X22, 0x4AB000
	008 Move W8, [X21+4080]
	009 Move X22, [X22+2536]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4AB000
	017 Move X0, [X0+2536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4080], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And W0, W20, 1
	027 Move X1, X31
	028 Call Convert.ToInt32, X0
	029 Move [X19], W0
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 

Method: System.Void set_shadowDistance(System.Single value)

Disassembly:
	0x03C52EA4 ADRP X9, 0x50D000
	0x03C52EA8 LDR X9, [X9 + 0xD50]

ISIL:
	001 Move [X0+424], S0
	002 Return 

Method: UnityEngine.Rendering.CullingOptions get_cullingOptions()

Disassembly:
	0x03C52EAC LDR X1, [X8]
	0x03C52EB0 LDR W2, [X8 + 0x18]

ISIL:
	001 Move W0, [X0+432]
	002 Return X0

Method: System.Void set_cullingOptions(UnityEngine.Rendering.CullingOptions value)

Disassembly:
	0x03C52EB4 MOV X0, X19
	0x03C52EB8 LDR X3, [X9]

ISIL:
	001 Move [X0+432], W1
	002 Return 

Method: System.Void set_reflectionProbeSortingCriteria(UnityEngine.Rendering.ReflectionProbeSortingCriteria value)

Disassembly:
	0x03C52EBC LDP X20, X19, [X31 + 0x10]
	0x03C52EC0 LDR X30, [X31], #0x20

ISIL:
	001 Move [X0+436], W1
	002 Return 

Method: System.Void set_stereoViewMatrix(UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C52EC4 B 0x21A840C
	0x03C52EC8 BL 0x1C16F20
	0x03C52ECC STR X30, [X31 - 0x20]!
	0x03C52ED0 STP X20, X19, [X31 + 0x10]
	0x03C52ED4 ADRP X20, 0x794000
	0x03C52ED8 LDRB W8, [X20 + 0x41]
	0x03C52EDC MOV X19, X0

ISIL:
	001 Move V1, [X1+32]
	002 Move V0, [X1+48]
	003 Move V3, [X1]
	004 Move V2, [X1+16]
	005 Move [X0+93], V0
	006 Move [X0+92], V1
	007 Move [X0+91], V2
	008 Move [X0+90], V3
	009 Return 

Method: UnityEngine.Matrix4x4 get_stereoProjectionMatrix()

Disassembly:
	0x03C52EE0 TBNZ X8, 0x0, 0x3C52EF8
	0x03C52EE4 ADRP X0, 0x50D000
	0x03C52EE8 LDR X0, [X0 + 0xD58]
	0x03C52EEC BL 0x1C16CF4
	0x03C52EF0 MOVZ W8, 0x1
	0x03C52EF4 STRB W8, [X20 + 0x41]
	0x03C52EF8 LDR X8, [X19 + 0x8]

ISIL:
	001 Move V0, [X0+97]
	002 Move V1, [X0+96]
	003 Move V2, [X0+95]
	004 Move V3, [X0+94]
	005 Move [X8+32], V1
	006 Move [X8+40], V0
	007 Move [X8], V3
	008 Move [X8+8], V2
	009 Return X0

Method: System.Void set_stereoProjectionMatrix(UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C52EFC CBZ X8, 0x3C52F24
	0x03C52F00 ADRP X9, 0x50D000
	0x03C52F04 LDR X9, [X9 + 0xD58]
	0x03C52F08 LDR X1, [X8 + 0x10]
	0x03C52F0C LDR W2, [X8 + 0x20]
	0x03C52F10 MOV X0, X19
	0x03C52F14 LDR X3, [X9]

ISIL:
	001 Move V1, [X1+32]
	002 Move V0, [X1+48]
	003 Move V3, [X1]
	004 Move V2, [X1+16]
	005 Move [X0+97], V0
	006 Move [X0+96], V1
	007 Move [X0+95], V2
	008 Move [X0+94], V3
	009 Return 

Method: System.Void set_stereoSeparationDistance(System.Single value)

Disassembly:
	0x03C52F18 LDP X20, X19, [X31 + 0x10]
	0x03C52F1C LDR X30, [X31], #0x20

ISIL:
	001 Move [X0+1568], S0
	002 Return 

Method: System.Single GetLayerCullingDistance(System.Int32 layerIndex)

Disassembly:
	0x03C52F20 B 0x21A8450
	0x03C52F24 BL 0x1C16F20
	0x03C52F28 STP X30, X21, [X31 - 0x20]!
	0x03C52F2C STP X20, X19, [X31 + 0x10]
	0x03C52F30 ADRP X21, 0x793000
	0x03C52F34 LDR X8, [X21 + 0xFF8]
	0x03C52F38 LDR X20, [X0]
	0x03C52F3C MOV X19, X0
	0x03C52F40 CBNZ X8, 0x3C52F58
	0x03C52F44 ADRP X0, 0xFFFFFFFFFCEBF000
	0x03C52F48 ADD X0, X0, 0x398
	0x03C52F4C BL 0x1C16CB8
	0x03C52F50 MOV X8, X0
	0x03C52F54 STR X0, [X21 + 0xFF8]
	0x03C52F58 MOV X0, X20
	0x03C52F5C BLR X8
	0x03C52F60 ADRP X21, 0x794000
	0x03C52F64 LDR X8, [X21]
	0x03C52F68 LDR X20, [X19]
	0x03C52F6C MOV W19, W0
	0x03C52F70 CBNZ X8, 0x3C52F88
	0x03C52F74 ADRP X0, 0xFFFFFFFFFCEA9000
	0x03C52F78 ADD X0, X0, 0x641
	0x03C52F7C BL 0x1C16CB8
	0x03C52F80 MOV X8, X0
	0x03C52F84 STR X0, [X21]
	0x03C52F88 MOV X0, X20
	0x03C52F8C BLR X8
	0x03C52F90 ADD W0, W0, W19
	0x03C52F94 LDP X20, X19, [X31 + 0x10]
	0x03C52F98 LDP X30, X21, [X31], #0x20
	0x03C52F9C RET
	0x03C52FA0 STP X30, X21, [X31 - 0x20]!
	0x03C52FA4 STP X20, X19, [X31 + 0x10]
	0x03C52FA8 ADRP X21, 0x794000
	0x03C52FAC LDR X2, [X21 + 0x8]
	0x03C52FB0 LDR X20, [X0]
	0x03C52FB4 MOV X19, X1
	0x03C52FB8 CBNZ X2, 0x3C52FD0
	0x03C52FBC ADRP X0, 0xFFFFFFFFFCEC2000
	0x03C52FC0 ADD X0, X0, 0xD58
	0x03C52FC4 BL 0x1C16CB8
	0x03C52FC8 MOV X2, X0
	0x03C52FCC STR X0, [X21 + 0x8]
	0x03C52FD0 MOV X0, X20
	0x03C52FD4 MOV X1, X19
	0x03C52FD8 LDP X20, X19, [X31 + 0x10]
	0x03C52FDC LDP X30, X21, [X31], #0x20
	0x03C52FE0 BR X2
	0x03C52FE4 SUB X31, X31, 0x50
	0x03C52FE8 STR X30, [X31 + 0x10]
	0x03C52FEC STP X24, X23, [X31 + 0x20]
	0x03C52FF0 STP X22, X21, [X31 + 0x30]
	0x03C52FF4 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X0, W1
	008 Move V0, [X8+216]
	009 Move X20, [X31+32]
	010 Move X19, [X31+40]
	011 Move X30, [X31+16]
	012 Move X21, [X31+24]
	013 Add X31, X31, 48
	014 Return V0
	015 Move [X31+12], W1
	016 Move X19, 0x4A2000
	017 Move X19, [X19+1880]
	018 Move X0, X19
	019 Call 0x1C17D08
	020 Add X1, X31, 12
	021 Call 0x1C17E04
	022 Move X20, X0
	023 Move W8, 32
	024 Move X0, X19
	025 Move [X31+8], W8
	026 Call 0x1C17D08
	027 Add X1, X31, 8
	028 Call 0x1C17E04
	029 Move X19, X0
	030 Move X0, 0x50E000
	031 Move X0, [X0+3344]
	032 Call 0x1C17D08
	033 Move X21, X0
	034 Move X0, 0x50E000
	035 Move X0, [X0+3384]
	036 Call 0x1C17D08
	037 Move X1, X0
	038 Move X0, X21
	039 Move X2, X20
	040 Move X3, X19
	041 Move X4, X31
	042 Call String.Format, X0, X1, X2, X3
	043 Move X19, X0
	044 Move X0, 0x4AA000
	045 Move X0, [X0+1888]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X1, X19
	049 Move X2, X31
	050 Move X20, X0
	051 Call ArgumentOutOfRangeException..ctor, X0, X1
	052 Move X0, 0x50E000
	053 Move X0, [X0+3392]
	054 Call 0x1C17D08
	055 Move X1, X0
	056 Move X0, X20
	057 Call 0x1C17DEC

Method: UnityEngine.Plane GetCullingPlane(System.Int32 index)

Disassembly:
	0x03C52FF8 ADRP X21, 0x794000
	0x03C52FFC LDRB W8, [X21 + 0x42]
	0x03C53000 MOV W20, W1
	0x03C53004 MOV X19, X0
	0x03C53008 TBNZ X8, 0x0, 0x3C5302C
	0x03C5300C ADRP X0, 0x50C000
	0x03C53010 LDR X0, [X0 + 0xD60]
	0x03C53014 BL 0x1C16CF4
	0x03C53018 ADRP X0, 0x4CA000
	0x03C5301C LDR X0, [X0 + 0x138]
	0x03C53020 BL 0x1C16CF4
	0x03C53024 MOVZ W8, 0x1
	0x03C53028 STRB W8, [X21 + 0x42]
	0x03C5302C STP X31, X31, [X31]
	0x03C53030 ADRP X24, 0x793000
	0x03C53034 ADRP X23, 0x4CA000
	0x03C53038 ADRP X22, 0x50C000
	0x03C5303C LDR X8, [X24 + 0x10]
	0x03C53040 LDR X21, [X19]
	0x03C53044 LDR X23, [X23 + 0x138]
	0x03C53048 LDR X22, [X22 + 0xD60]
	0x03C5304C CBNZ X8, 0x3C53064
	0x03C53050 ADRP X0, 0xFFFFFFFFFCECA000
	0x03C53054 ADD X0, X0, 0x438
	0x03C53058 BL 0x1C16CB8
	0x03C5305C MOV X8, X0
	0x03C53060 STR X0, [X24 + 0x10]
	0x03C53064 MOV X0, X21
	0x03C53068 BLR X8
	0x03C5306C LDR X4, [X23]
	0x03C53070 MOV W21, W0
	0x03C53074 ADD X0, X31, 0x0
	0x03C53078 MOV W1, W21
	0x03C5307C MOV W2, W20
	0x03C53080 MOV W3, W31
	0x03C53084 BL 0x23D58AC
	0x03C53088 LDP X0, X1, [X31]
	0x03C5308C LDR X2, [X22]
	0x03C53090 LDR X19, [X19]
	0x03C53094 BL 0x2222690
	0x03C53098 MOV X1, X31
	0x03C5309C BL 0x33C693C
	0x03C530A0 ADRP X22, 0x793000
	0x03C530A4 LDR X8, [X22 + 0x18]
	0x03C530A8 MOV X20, X0
	0x03C530AC CBNZ X8, 0x3C530C4
	0x03C530B0 ADRP X0, 0xFFFFFFFFFCEC5000
	0x03C530B4 ADD X0, X0, 0xE72
	0x03C530B8 BL 0x1C16CB8
	0x03C530BC MOV X8, X0
	0x03C530C0 STR X0, [X22 + 0x18]
	0x03C530C4 MOV X0, X19
	0x03C530C8 MOV X1, X20
	0x03C530CC MOV W2, W21
	0x03C530D0 BLR X8
	0x03C530D4 LDP X0, X1, [X31]
	0x03C530D8 LDP X20, X19, [X31 + 0x40]
	0x03C530DC LDP X22, X21, [X31 + 0x30]
	0x03C530E0 LDP X24, X23, [X31 + 0x20]
	0x03C530E4 LDR X30, [X31 + 0x10]
	0x03C530E8 ADD X31, X31, 0x50
	0x03C530EC RET
	0x03C530F0 STP X30, X23, [X31 - 0x30]!
	0x03C530F4 STP X22, X21, [X31 + 0x10]
	0x03C530F8 STP X20, X19, [X31 + 0x20]
	0x03C530FC ADRP X23, 0x793000
	0x03C53100 ADRP X22, 0x50C000
	0x03C53104 LDRB W8, [X23 + 0x43]
	0x03C53108 LDR X22, [X22 + 0xD68]
	0x03C5310C MOV X19, X2
	0x03C53110 MOV X21, X1
	0x03C53114 MOV X20, X0
	0x03C53118 TBNZ X8, 0x0, 0x3C53130
	0x03C5311C ADRP X0, 0x50C000
	0x03C53120 LDR X0, [X0 + 0xD68]
	0x03C53124 BL 0x1C16CF4
	0x03C53128 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x793000
	007 Move W8, [X21+4081]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4FE000
	015 Move X0, [X0+1664]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+4081], W8
	019 Move TEMP, X20
	020 And TEMP, TEMP, -2147483648
	021 Compare TEMP, -2147483648
	022 JumpIfEqual {43}
	023 Move X8, 0x4FE000
	024 Move X8, [X8+1664]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move W8, [X19+192]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Add X8, X19, W20
	033 Move S2, [X8+40]
	034 Move S3, [X8+44]
	035 Move S0, [X8+32]
	036 Move S1, [X8+36]
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X30, [X31+16]
	040 Move X21, [X31+24]
	041 Add X31, X31, 48
	042 Return X0
	043 Move [X31+12], W20
	044 Move X20, 0x4A1000
	045 Move X20, [X20+1880]
	046 Move X0, X20
	047 Call 0x1C17D08
	048 Add X1, X31, 12
	049 Call 0x1C17E04
	050 Move X21, X0
	051 Move X0, 0x4FE000
	052 Move X0, [X0+1664]
	053 Call 0x1C17D08
	054 Call 0x19913D0
	055 Move W8, [X19+192]
	056 Move X0, X20
	057 Move [X31+8], W8
	058 Call 0x1C17D08
	059 Add X1, X31, 8
	060 Call 0x1C17E04
	061 Move X19, X0
	062 Move X0, 0x50D000
	063 Move X0, [X0+3344]
	064 Call 0x1C17D08
	065 Move X20, X0
	066 Move X0, 0x4AC000
	067 Move X0, [X0+304]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Move X2, X21
	072 Move X3, X19
	073 Move X4, X31
	074 Call String.Format, X0, X1, X2, X3
	075 Move X19, X0
	076 Move X0, 0x4A9000
	077 Move X0, [X0+1888]
	078 Call 0x1C17D08
	079 Call 0x1C17F10
	080 Move X1, X19
	081 Move X2, X31
	082 Move X20, X0
	083 Call ArgumentOutOfRangeException..ctor, X0, X1
	084 Move X0, 0x50D000
	085 Move X0, [X0+3400]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X20
	089 Call 0x1C17DEC

Method: System.Boolean Equals(UnityEngine.Rendering.ScriptableCullingParameters other)

Disassembly:
	0x03C5312C STRB W8, [X23 + 0x43]
	0x03C53130 LDR X2, [X22]
	0x03C53134 LDR X20, [X20]
	0x03C53138 MOV X0, X21
	0x03C5313C MOV X1, X19
	0x03C53140 BL 0x22226BC
	0x03C53144 MOV X1, X31
	0x03C53148 BL 0x33C693C
	0x03C5314C ADRP X22, 0x793000
	0x03C53150 LDR X3, [X22 + 0x20]
	0x03C53154 MOV X21, X0
	0x03C53158 CBNZ X3, 0x3C53170
	0x03C5315C ADRP X0, 0xFFFFFFFFFCEB0000
	0x03C53160 ADD X0, X0, 0x4EA
	0x03C53164 BL 0x1C16CB8
	0x03C53168 MOV X3, X0
	0x03C5316C STR X0, [X22 + 0x20]
	0x03C53170 MOV X0, X20
	0x03C53174 MOV X1, X21
	0x03C53178 MOV W2, W19
	0x03C5317C LDP X20, X19, [X31 + 0x20]
	0x03C53180 LDP X22, X21, [X31 + 0x10]
	0x03C53184 LDP X30, X23, [X31], #0x30
	0x03C53188 BR X3
	0x03C5318C STR X30, [X31 - 0x30]!
	0x03C53190 STP X22, X21, [X31 + 0x10]
	0x03C53194 STP X20, X19, [X31 + 0x20]
	0x03C53198 ADRP X22, 0x793000
	0x03C5319C LDR X3, [X22 + 0x28]
	0x03C531A0 LDR X21, [X0]
	0x03C531A4 MOV X19, X2
	0x03C531A8 MOV W20, W1
	0x03C531AC CBNZ X3, 0x3C531C4
	0x03C531B0 ADRP X0, 0xFFFFFFFFFCEC0000
	0x03C531B4 ADD X0, X0, 0x15A
	0x03C531B8 BL 0x1C16CB8
	0x03C531BC MOV X3, X0
	0x03C531C0 STR X0, [X22 + 0x28]
	0x03C531C4 MOV X0, X21
	0x03C531C8 MOV W1, W20
	0x03C531CC MOV X2, X19
	0x03C531D0 LDP X20, X19, [X31 + 0x20]
	0x03C531D4 LDP X22, X21, [X31 + 0x10]
	0x03C531D8 LDR X30, [X31], #0x30
	0x03C531DC BR X3
	0x03C531E0 STR X30, [X31 - 0x40]!
	0x03C531E4 STP X24, X23, [X31 + 0x10]
	0x03C531E8 STP X22, X21, [X31 + 0x20]
	0x03C531EC STP X20, X19, [X31 + 0x30]
	0x03C531F0 ADRP X24, 0x793000
	0x03C531F4 LDR X5, [X24 + 0x30]
	0x03C531F8 LDR X23, [X0]
	0x03C531FC MOV X19, X4
	0x03C53200 MOV X20, X3
	0x03C53204 MOV X21, X2
	0x03C53208 MOV W22, W1
	0x03C5320C CBNZ X5, 0x3C53224
	0x03C53210 ADRP X0, 0xFFFFFFFFFCEA8000
	0x03C53214 ADD X0, X0, 0x693
	0x03C53218 BL 0x1C16CB8
	0x03C5321C MOV X5, X0
	0x03C53220 STR X0, [X24 + 0x30]
	0x03C53224 MOV X0, X23
	0x03C53228 MOV W1, W22
	0x03C5322C MOV X2, X21
	0x03C53230 MOV X3, X20
	0x03C53234 MOV X4, X19
	0x03C53238 LDP X20, X19, [X31 + 0x30]
	0x03C5323C LDP X22, X21, [X31 + 0x20]
	0x03C53240 LDP X24, X23, [X31 + 0x10]
	0x03C53244 LDR X30, [X31], #0x40
	0x03C53248 BR X5
	0x03C5324C STR D8, [X31 - 0x50]!
	0x03C53250 STP X30, X25, [X31 + 0x10]
	0x03C53254 STP X24, X23, [X31 + 0x20]
	0x03C53258 STP X22, X21, [X31 + 0x30]
	0x03C5325C STP X20, X19, [X31 + 0x40]
	0x03C53260 ADRP X25, 0x793000
	0x03C53264 LDR X6, [X25 + 0x38]
	0x03C53268 LDR X24, [X0]
	0x03C5326C MOV X19, X5
	0x03C53270 MOV X20, X4
	0x03C53274 MOV X21, X3
	0x03C53278 MOV V8.16B, V0.16B
	0x03C5327C MOV W22, W2
	0x03C53280 MOV W23, W1
	0x03C53284 CBNZ X6, 0x3C5329C
	0x03C53288 ADRP X0, 0xFFFFFFFFFCEA4000
	0x03C5328C ADD X0, X0, 0x695
	0x03C53290 BL 0x1C16CB8
	0x03C53294 MOV X6, X0
	0x03C53298 STR X0, [X25 + 0x38]
	0x03C5329C MOV X0, X24
	0x03C532A0 MOV W1, W23
	0x03C532A4 MOV W2, W22
	0x03C532A8 MOV X3, X21
	0x03C532AC MOV X4, X20
	0x03C532B0 MOV X5, X19
	0x03C532B4 LDP X20, X19, [X31 + 0x40]
	0x03C532B8 LDP X22, X21, [X31 + 0x30]
	0x03C532BC LDP X24, X23, [X31 + 0x20]
	0x03C532C0 LDP X30, X25, [X31 + 0x10]
	0x03C532C4 MOV V0.16B, V8.16B
	0x03C532C8 LDR V8, [X31], #0x50
	0x03C532CC BR X6
	0x03C532D0 LDR X0, [X0]
	0x03C532D4 B 0x3C52D0C
	0x03C532D8 SUB X31, X31, 0x40
	0x03C532DC STP X30, X23, [X31 + 0x10]
	0x03C532E0 STP X22, X21, [X31 + 0x20]
	0x03C532E4 STP X20, X19, [X31 + 0x30]
	0x03C532E8 ADRP X23, 0x793000
	0x03C532EC ADRP X22, 0x4C9000
	0x03C532F0 LDRB W8, [X23 + 0x44]
	0x03C532F4 LDR X22, [X22 + 0xF20]
	0x03C532F8 MOV X19, X2
	0x03C532FC MOV X21, X1
	0x03C53300 MOV X20, X0
	0x03C53304 TBNZ X8, 0x0, 0x3C5331C
	0x03C53308 ADRP X0, 0x4C9000
	0x03C5330C LDR X0, [X0 + 0xF20]
	0x03C53310 BL 0x1C16CF4
	0x03C53314 MOVZ W8, 0x1
	0x03C53318 STRB W8, [X23 + 0x44]
	0x03C5331C LDR X0, [X22]
	0x03C53320 ADD X1, X31, 0x8
	0x03C53324 STR X21, [X31 + 0x8]
	0x03C53328 BL 0x1C16E04
	0x03C5332C MOV X1, X0
	0x03C53330 MOV X0, X20
	0x03C53334 MOV X2, X31
	0x03C53338 BL 0x33C685C
	0x03C5333C TBZ X0, 0x0, 0x3C53350
	0x03C53340 LDR X8, [X20 + 0x8]
	0x03C53344 CMP X19, X8
	0x03C53348 CSET W0, EQ
	0x03C5334C B 0x3C53354
	0x03C53350 MOV W0, W31
	0x03C53354 LDP X20, X19, [X31 + 0x30]
	0x03C53358 LDP X22, X21, [X31 + 0x20]
	0x03C5335C LDP X30, X23, [X31 + 0x10]
	0x03C53360 ADD X31, X31, 0x40
	0x03C53364 RET
	0x03C53368 STP X30, X21, [X31 - 0x20]!
	0x03C5336C STP X20, X19, [X31 + 0x10]
	0x03C53370 ADRP X21, 0x793000
	0x03C53374 LDRB W8, [X21 + 0x45]
	0x03C53378 MOV X20, X1
	0x03C5337C MOV X19, X0
	0x03C53380 TBNZ X8, 0x0, 0x3C53398
	0x03C53384 ADRP X0, 0x50C000
	0x03C53388 LDR X0, [X0 + 0xD70]
	0x03C5338C BL 0x1C16CF4
	0x03C53390 MOVZ W8, 0x1
	0x03C53394 STRB W8, [X21 + 0x45]
	0x03C53398 CBZ X20, 0x3C533B4
	0x03C5339C ADRP X8, 0x50C000
	0x03C533A0 LDR X8, [X8 + 0xD70]
	0x03C533A4 LDR X9, [X20]
	0x03C533A8 LDR X8, [X8]
	0x03C533AC CMP X9, X8
	0x03C533B0 B.EQ 0x3C533C4
	0x03C533B4 LDP X20, X19, [X31 + 0x10]
	0x03C533B8 MOV W0, W31
	0x03C533BC LDP X30, X21, [X31], #0x20
	0x03C533C0 RET
	0x03C533C4 MOV X0, X20
	0x03C533C8 BL 0x1C16E08
	0x03C533CC LDP X1, X2, [X0]
	0x03C533D0 MOV X0, X19
	0x03C533D4 LDP X20, X19, [X31 + 0x10]
	0x03C533D8 LDP X30, X21, [X31], #0x20
	0x03C533DC B 0x3C532D8
	0x03C533E0 STP X30, X19, [X31 - 0x10]!
	0x03C533E4 MOV X1, X31
	0x03C533E8 MOV X19, X0
	0x03C533EC BL 0x33C24FC
	0x03C533F0 LDR W8, [X19 + 0x8]
	0x03C533F4 MOVZ W9, 0x18D
	0x03C533F8 MUL W9, W0, W9
	0x03C533FC EOR W0, W9, W8, 0x0
	0x03C53400 LDP X30, X19, [X31], #0x10
	0x03C53404 RET
	0x03C53408 SUB X31, X31, 0x20
	0x03C5340C STP X1, X30, [X31 + 0x8]
	0x03C53410 STR X0, [X31]
	0x03C53414 ADD X0, X31, 0x0
	0x03C53418 MOV X1, X2
	0x03C5341C MOV X2, X3
	0x03C53420 BL 0x3C532D8
	0x03C53424 LDR X30, [X31 + 0x10]
	0x03C53428 AND W0, W0, 0x1
	0x03C5342C ADD X31, X31, 0x20
	0x03C53430 RET
	0x03C53434 STR X30, [X31 - 0x10]!
	0x03C53438 ADD X0, X31, 0xC
	0x03C5343C MOVZ W1, 0x1
	0x03C53440 MOVZ W2, 0x2
	0x03C53444 STRH W31, [X31 + 0xC]
	0x03C53448 BL 0x3C53458
	0x03C5344C LDRH W0, [X31 + 0xC]
	0x03C53450 LDR X30, [X31], #0x10
	0x03C53454 RET
	0x03C53458 STP X30, X23, [X31 - 0x30]!
	0x03C5345C STP X22, X21, [X31 + 0x10]
	0x03C53460 STP X20, X19, [X31 + 0x20]
	0x03C53464 ADRP X22, 0x793000
	0x03C53468 ADRP X23, 0x4A9000
	0x03C5346C LDRB W8, [X22 + 0x50]
	0x03C53470 LDR X23, [X23 + 0x9E8]
	0x03C53474 MOV W19, W2
	0x03C53478 MOV W21, W1
	0x03C5347C MOV X20, X0
	0x03C53480 TBNZ X8, 0x0, 0x3C53498
	0x03C53484 ADRP X0, 0x4A9000
	0x03C53488 LDR X0, [X0 + 0x9E8]
	0x03C5348C BL 0x1C16CF4
	0x03C53490 MOVZ W8, 0x1
	0x03C53494 STRB W8, [X22 + 0x50]
	0x03C53498 LDR X0, [X23]
	0x03C5349C LDR W8, [X0 + 0xE0]
	0x03C534A0 CBNZ W8, 0x3C534A8
	0x03C534A4 BL 0x1C16DFC
	0x03C534A8 AND W0, W21, 0x1
	0x03C534AC MOV X1, X31
	0x03C534B0 BL 0x33181E0
	0x03C534B4 STRB W0, [X20]
	0x03C534B8 STRB W19, [X20 + 0x1]
	0x03C534BC LDP X20, X19, [X31 + 0x20]
	0x03C534C0 LDP X22, X21, [X31 + 0x10]
	0x03C534C4 LDP X30, X23, [X31], #0x30
	0x03C534C8 RET
	0x00000000 INVALID
	0x03C534D0 RET
	0x03C534D4 LDRB W8, [X0]
	0x03C534D8 CMP W8, W1, UXTB
	0x03C534DC B.NE 0x3C534F4
	0x00000000 INVALID
	0x03C534E4 UBFM W9, W1, 0x10, 0xF
	0x03C534E8 CMP W8, W9, ASR
	0x03C534EC CSET W0, EQ
	0x03C534F0 RET
	0x03C534F4 MOV W0, W31
	0x03C534F8 RET
	0x03C534FC STP X30, X21, [X31 - 0x20]!
	0x03C53500 STP X20, X19, [X31 + 0x10]
	0x03C53504 ADRP X21, 0x793000
	0x03C53508 LDRB W8, [X21 + 0x51]
	0x03C5350C MOV X20, X1
	0x03C53510 MOV X19, X0
	0x03C53514 TBNZ X8, 0x0, 0x3C5352C
	0x03C53518 ADRP X0, 0x50C000
	0x03C5351C LDR X0, [X0 + 0xD78]
	0x03C53520 BL 0x1C16CF4
	0x03C53524 MOVZ W8, 0x1
	0x03C53528 STRB W8, [X21 + 0x51]
	0x03C5352C CBZ X20, 0x3C53574
	0x03C53530 ADRP X8, 0x50C000
	0x03C53534 LDR X8, [X8 + 0xD78]

ISIL:
	001 Move [X31-112], D11
	002 Move [X31-104], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X29
	006 Move [X31+40], X30
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Subtract X31, X31, 2832
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X22+40]
	018 Move X21, 0x793000
	019 Move X19, X1
	020 Move X20, X0
	021 Move [X31+2824], X8
	022 Move W8, [X21+4082]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x50D000
	028 Move X0, [X0+3368]
	029 Call 0x1C17CF4
	030 Move X0, 0x4FE000
	031 Move X0, [X0+1664]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+4082], W8
	035 Move X24, 0x4FE000
	036 Move X24, [X24+1664]
	037 Move W21, W31
	038 Add X23, X31, 1240
	039 Move [X31+244], W31
	040 Move X0, [X24]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move W1, W21
	047 Call ScriptableCullingParameters.GetLayerCullingDistance, X0, X1
	048 Move X0, X19
	049 Move W1, W21
	050 Move [X31+244], S0
	051 Call ScriptableCullingParameters.GetLayerCullingDistance, X0, X1
	052 Add X0, X31, 244
	053 Move X1, X31
	054 Call Single.Equals, X0, V0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {286}
	059 Add W21, W21, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X25, 0x50D000
	062 Move X25, [X25+3368]
	063 Move W21, W31
	064 Move TEMP, 0
	065 Not TEMP
	066 Move X26, TEMP
	067 Move X0, [X24]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move W8, [X20+192]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, [X24]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X20
	080 Move W1, W21
	081 Call ScriptableCullingParameters.GetCullingPlane, X0, X1
	082 Move X0, X19
	083 Move W1, W21
	084 Move V8, V0
	085 Move V9, V1
	086 Move V10, V2
	087 Move V11, V3
	088 Call ScriptableCullingParameters.GetCullingPlane, X0, X1
	089 Move X0, [X25]
	090 Add X1, X31, 224
	091 Move [X31+224], S0
	092 Move [X31+232], S1
	093 Move [X31+232], S2
	094 Move [X31+240], S3
	095 Call 0x1C17E04
	096 Move X8, [X25]
	097 Move X1, X0
	098 Add X0, X31, 1240
	099 Move X2, X31
	100 Move [X31+1256], S8
	101 Move [X31+1260], S9
	102 Move [X31+1240], X8
	103 Move [X31+1248], X26
	104 Move [X31+1264], S10
	105 Move [X31+1268], S11
	106 Call ValueType.Equals, X0, X1
	107 Add W21, W21, 1
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {67}
	112 Move W8, [X20]
	113 Move W9, [X19]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Add X0, X31, 1240
	116 Move W2, 1584
	117 Move X1, X19
	118 Add X21, X20, 4
	119 Call 0x3EB2AC0
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 Move V1, [X23+1]
	122 Add X1, X31, 192
	123 Move X0, X21
	124 Move [X31+12], V0
	125 Move [X31+204], V1
	126 Call LODParameters.Equals, X0, X1
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {286}
	131 Move W8, [X20+192]
	132 Move W9, [X19+192]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move W8, [X20+196]
	135 Move W9, [X19+196]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X8, [X20+200]
	138 Move X9, [X19+200]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, [X20+208]
	141 Move X9, [X19+208]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move W8, [X20+344]
	144 Move W9, [X19+344]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add X0, X31, 1240
	147 Move W2, 1584
	148 Move X1, X19
	149 Add X21, X20, 348
	150 Add X24, X31, 1240
	151 Call 0x3EB2AC0
	152 Add X8, X24, 348
	153 Move V0, [X8]
	154 Move V1, [X8+16]
	155 Move V2, [X8+32]
	156 Move V3, [X8+48]
	157 Add X1, X31, 128
	158 Move X0, X21
	159 Move X2, X31
	160 Move [X31+128], V0
	161 Move [X31+136], V1
	162 Move [X31+160], V2
	163 Move [X31+168], V3
	164 Call 0x2079B9C
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {286}
	169 Move V0, [X19+412]
	170 Move V1, [X20+412]
	171 NotImplemented "Instruction FCMP not yet implemented."
	172 Move V0, [X19+416]
	173 Move V1, [X20+416]
	174 NotImplemented "Instruction FCMP not yet implemented."
	175 Move V0, [X19+420]
	176 Move V1, [X20+420]
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 Move V0, [X19+424]
	179 Add X0, X20, 424
	180 Move X1, X31
	181 Call Single.Equals, X0, V0
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {286}
	186 Move V0, [X19+428]
	187 Add X0, X20, 428
	188 Move X1, X31
	189 Call Single.Equals, X0, V0
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfNotEqual {286}
	194 Move W8, [X20+432]
	195 Move W9, [X19+432]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move W8, [X20+436]
	198 Move W9, [X19+436]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Add X0, X31, 1240
	201 Move W2, 1584
	202 Move X1, X19
	203 Add X21, X20, 440
	204 Add X24, X31, 1240
	205 Call 0x3EB2AC0
	206 Add X1, X24, 440
	207 Add X0, X31, 248
	208 Move W2, 992
	209 Call 0x3EB2AC0
	210 Add X1, X31, 248
	211 Move X0, X21
	212 Call CameraProperties.Equals, X0, X1
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {286}
	217 Move V0, [X19+1432]
	218 Add X0, X20, 1432
	219 Move X1, X31
	220 Call Single.Equals, X0, V0
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {286}
	225 Add X0, X31, 1240
	226 Move W2, 1584
	227 Move X1, X19
	228 Add X21, X20, 1440
	229 Call 0x3EB2AC0
	230 Move V0, [X23+90]
	231 Move V1, [X23+91]
	232 Move V2, [X23+92]
	233 Move V3, [X23+93]
	234 Add X1, X31, 64
	235 Move X0, X21
	236 Move X2, X31
	237 Move [X31+64], V0
	238 Move [X31+72], V1
	239 Move [X31+96], V2
	240 Move [X31+104], V3
	241 Call 0x2079B9C
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfNotEqual {286}
	246 Add X0, X31, 1240
	247 Move W2, 1584
	248 Move X1, X19
	249 Add X21, X20, 1504
	250 Call 0x3EB2AC0
	251 Move V0, [X23+94]
	252 Move V1, [X23+95]
	253 Move V2, [X23+96]
	254 Move V3, [X23+97]
	255 Add X1, X31, 0
	256 Move X0, X21
	257 Move X2, X31
	258 Move [X31], V0
	259 Move [X31+8], V1
	260 Move [X31+32], V2
	261 Move [X31+40], V3
	262 Call 0x2079B9C
	263 Move TEMP, X0
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfNotEqual {286}
	267 Move V0, [X19+1568]
	268 Add X0, X20, 1568
	269 Move X1, X31
	270 Call Single.Equals, X0, V0
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfNotEqual {286}
	275 Move W8, [X20+1572]
	276 Move W9, [X19+1572]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move W8, [X19+1576]
	279 Move W9, [X20+1576]
	280 And W8, W8, 1
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move W8, [X20+1580]
	283 Move W9, [X19+1580]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 NotImplemented "Instruction CSET not yet implemented."
	286 Move W0, W31
	287 Move X8, [X22+40]
	288 Move X9, [X31+2824]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Add X31, X31, 2832
	291 Move X20, [X31+96]
	292 Move X19, [X31+104]
	293 Move X22, [X31+80]
	294 Move X21, [X31+88]
	295 Move X24, [X31+64]
	296 Move X23, [X31+72]
	297 Move X26, [X31+48]
	298 Move X25, [X31+56]
	299 Move X29, [X31+32]
	300 Move X30, [X31+40]
	301 Move D9, [X31+16]
	302 Move D8, [X31+24]
	303 Move D11, [X31+112]
	304 Move D10, [X31+120]
	305 Return X0
	306 Call 0x3EB2B20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C535D4 LDRB W8, [X23 + 0x52]
	0x03C535D8 LDR X22, [X22 + 0xB8]
	0x03C535DC MOV X21, X2
	0x03C535E0 MOV X20, X1
	0x03C535E4 MOV X19, X0
	0x03C535E8 TBNZ X8, 0x0, 0x3C53600
	0x03C535EC ADRP X0, 0x501000
	0x03C535F0 LDR X0, [X0 + 0xB8]
	0x03C535F4 BL 0x1C16CF4
	0x03C535F8 MOVZ W8, 0x1
	0x03C535FC STRB W8, [X23 + 0x52]
	0x03C53600 MOVZ W2, 0x60
	0x03C53604 MOV X0, X19
	0x03C53608 MOV X1, X21
	0x03C5360C BL 0x3EB1B30
	0x03C53610 ADRP X8, 0xFFFFFFFFFCE9A000
	0x03C53614 LDR V0, [X8 + 0x708]
	0x03C53618 MOV X8, INVALID
	0x03C5361C STP X31, X31, [X19 + 0xA8]
	0x03C53620 STR X8, [X19 + 0xB8]
	0x03C53624 STR D0, [X19 + 0xA0]
	0x03C53628 STR W20, [X19 + 0x60]
	0x03C5362C LDR X0, [X22]
	0x03C53630 ADD X20, X19, 0x64
	0x03C53634 MOVZ W21, 0x1
	0x03C53638 MOVN W23, 0x0
	0x03C5363C LDR W8, [X0 + 0xE0]
	0x03C53640 CBNZ W8, 0x3C5364C
	0x03C53644 BL 0x1C16DFC
	0x03C53648 LDR X0, [X22]
	0x03C5364C LDR X8, [X0 + 0xB8]
	0x03C53650 LDRSW X8, [X8]
	0x03C53654 CMP X21, X8
	0x03C53658 B.GE 0x3C53668
	0x03C5365C STR W23, [X20], #0x4
	0x03C53660 ADD X21, X21, 0x1
	0x03C53664 B 0x3C5363C
	0x03C53668 STR W31, [X19 + 0xC0]
	0x03C5366C LDP X20, X19, [X31 + 0x20]
	0x03C53670 LDP X22, X21, [X31 + 0x10]
	0x03C53674 LDP X30, X23, [X31], #0x30
	0x03C53678 RET
	0x03C5367C LDR W0, [X0]
	0x03C53680 RET
	0x03C53684 STR X30, [X31 - 0x10]!
	0x03C53688 MOV X1, X0
	0x03C5368C MOV X0, X8
	0x03C53690 MOVZ W2, 0x60
	0x03C53694 BL 0x3EB1AC0
	0x03C53698 LDR X30, [X31], #0x10
	0x03C5369C RET
	0x03C536A0 STR X30, [X31 - 0x10]!
	0x03C536A4 MOVZ W2, 0x60
	0x03C536A8 BL 0x3EB1B30
	0x03C536AC LDR X30, [X31], #0x10
	0x03C536B0 RET
	0x03C536B4 STR W1, [X0 + 0xA0]
	0x03C536B8 RET

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 1600
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X22, 0x793000
	011 Move X20, X1
	012 Move X19, X0
	013 Move [X31+1592], X8
	014 Move W8, [X22+4083]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x4FE000
	020 Move X0, [X0+1664]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4083], W8
	024 Compare X20, 0
	025 JumpIfEqual {31}
	026 Move X22, 0x4FE000
	027 Move X22, [X22+1664]
	028 Move X8, [X20]
	029 Move X0, [X22]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W0, W31
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfEqual {36}
	035 Move X1, X0
	036 Call 0x1C17DFC
	037 Move X1, [X22]
	038 Move X0, [X20]
	039 Move X8, [X0+64]
	040 Move X9, [X1+64]
	041 Move X0, X20
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Call 0x1C17E08
	044 Move X1, X0
	045 Add X0, X31, 8
	046 Move W2, 1584
	047 Call 0x3EB2AC0
	048 Add X1, X31, 8
	049 Move X0, X19
	050 Call ScriptableCullingParameters.Equals, X0, X1
	051 Move X8, [X21+40]
	052 Move X9, [X31+1592]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 And W0, W0, 1
	055 Add X31, X31, 1600
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X29, [X31+48]
	061 Move X30, [X31+56]
	062 Return X0
	063 Call 0x1C181E0
	064 Call 0x3EB2B20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C536BC LDR W8, [X0 + 0xA4]
	0x03C536C0 BFM W8, W1, 0x0, 0x0
	0x03C536C4 STR W8, [X0 + 0xA4]
	0x03C536C8 RET
	0x03C536CC LDR W8, [X0 + 0xA4]
	0x03C536D0 ANDS W31, W1, 0x1
	0x03C536D4 MOVZ W9, 0x2
	0x03C536D8 CSEL W9, W9, W31, NE
	0x03C536DC AND W8, W8, 0xFFFFFFFD
	0x03C536E0 ORR W8, W8, W9, 0x0
	0x03C536E4 STR W8, [X0 + 0xA4]
	0x03C536E8 RET
	0x03C536EC STP X30, X19, [X31 - 0x10]!
	0x03C536F0 MOV X19, X0
	0x03C536F4 CBZ X1, 0x3C53708
	0x03C536F8 MOV X0, X1
	0x03C536FC MOV X1, X31
	0x03C53700 BL 0x3C385F8
	0x03C53704 B 0x3C5370C
	0x03C53708 MOV W0, W31
	0x03C5370C STR W0, [X19 + 0xB0]
	0x03C53710 LDP X30, X19, [X31], #0x10
	0x03C53714 RET
	0x03C53718 STP X30, X19, [X31 - 0x10]!
	0x03C5371C MOV X19, X0
	0x03C53720 CBZ X1, 0x3C53734
	0x03C53724 MOV X0, X1
	0x03C53728 MOV X1, X31
	0x03C5372C BL 0x3C385F8
	0x03C53730 B 0x3C53738
	0x03C53734 MOV W0, W31
	0x03C53738 STR W0, [X19 + 0xA8]
	0x03C5373C LDP X30, X19, [X31], #0x10
	0x03C53740 RET
	0x03C53744 STR W1, [X0 + 0xB4]
	0x03C53748 RET
	0x03C5374C STR W1, [X0 + 0xAC]
	0x03C53750 RET
	0x03C53754 STP X30, X19, [X31 - 0x10]!
	0x03C53758 MOV X19, X0
	0x03C5375C CBZ X1, 0x3C53770
	0x03C53760 MOV X0, X1
	0x03C53764 MOV X1, X31
	0x03C53768 BL 0x3C385F8
	0x03C5376C B 0x3C53774
	0x03C53770 MOV W0, W31
	0x03C53774 STR W0, [X19 + 0xB8]
	0x03C53778 LDP X30, X19, [X31], #0x10
	0x03C5377C RET
	0x03C53780 STR W1, [X0 + 0xBC]
	0x03C53784 RET
	0x03C53788 STR X30, [X31 - 0x30]!
	0x03C5378C STP X22, X21, [X31 + 0x10]
	0x03C53790 STP X20, X19, [X31 + 0x20]
	0x03C53794 ADRP X22, 0x793000
	0x03C53798 ADRP X21, 0x501000
	0x03C5379C LDRB W8, [X22 + 0x53]
	0x03C537A0 LDR X21, [X21 + 0xB8]
	0x03C537A4 MOV W19, W1
	0x03C537A8 MOV X20, X0
	0x03C537AC TBNZ X8, 0x0, 0x3C537C4
	0x03C537B0 ADRP X0, 0x501000
	0x03C537B4 LDR X0, [X0 + 0xB8]
	0x03C537B8 BL 0x1C16CF4
	0x03C537BC MOVZ W8, 0x1
	0x03C537C0 STRB W8, [X22 + 0x53]
	0x03C537C4 LDR X0, [X21]
	0x03C537C8 LDR W8, [X0 + 0xE0]
	0x03C537CC CBNZ W8, 0x3C537D8
	0x03C537D0 BL 0x1C16DFC
	0x03C537D4 LDR X0, [X21]
	0x03C537D8 TBNZ X19, 0x1F, 0x3C53804
	0x03C537DC LDR X8, [X0 + 0xB8]
	0x03C537E0 LDR W8, [X8]
	0x03C537E4 CMP W8, W19
	0x03C537E8 B.LE 0x3C53804
	0x03C537EC ADD X8, X20, W19, 0x2, UXTW
	0x03C537F0 LDR W0, [X8 + 0x60]
	0x03C537F4 LDP X20, X19, [X31 + 0x20]
	0x03C537F8 LDP X22, X21, [X31 + 0x10]
	0x03C537FC LDR X30, [X31], #0x30
	0x03C53800 RET
	0x03C53804 ADRP X20, 0x501000
	0x03C53808 LDR X20, [X20 + 0xB8]
	0x03C5380C MOV X0, X20
	0x03C53810 BL 0x1C16D08
	0x03C53814 BL 0x19903D0
	0x03C53818 MOV X0, X20
	0x03C5381C BL 0x1C16D08
	0x03C53820 LDR X8, [X0 + 0xB8]
	0x03C53824 ADRP X20, 0x4A0000
	0x03C53828 LDR W8, [X8]
	0x03C5382C STR W8, [X31 + 0xC]
	0x03C53830 LDR X20, [X20 + 0x758]
	0x03C53834 MOV X0, X20
	0x03C53838 BL 0x1C16D08
	0x03C5383C ADD X1, X31, 0xC
	0x03C53840 BL 0x1C16E04
	0x03C53844 MOV X21, X0
	0x03C53848 MOV X0, X20
	0x03C5384C STR W19, [X31 + 0x8]
	0x03C53850 BL 0x1C16D08
	0x03C53854 ADD X1, X31, 0x8
	0x03C53858 BL 0x1C16E04
	0x03C5385C MOV X19, X0
	0x03C53860 ADRP X0, 0x50C000
	0x03C53864 LDR X0, [X0 + 0xD80]
	0x03C53868 BL 0x1C16D08
	0x03C5386C MOV X1, X21
	0x03C53870 MOV X2, X19
	0x03C53874 MOV X3, X31
	0x03C53878 BL 0x3227BD4
	0x03C5387C MOV X19, X0
	0x03C53880 ADRP X0, 0x4A8000
	0x03C53884 LDR X0, [X0 + 0x760]
	0x03C53888 BL 0x1C16D08
	0x03C5388C BL 0x1C16F10
	0x03C53890 MOV X20, X0
	0x03C53894 ADRP X0, 0x4AB000
	0x03C53898 LDR X0, [X0 + 0x130]
	0x03C5389C BL 0x1C16D08
	0x03C538A0 MOV X1, X0
	0x03C538A4 MOV X0, X20
	0x03C538A8 MOV X2, X19
	0x03C538AC MOV X3, X31
	0x03C538B0 BL 0x3311888
	0x03C538B4 ADRP X0, 0x50C000
	0x03C538B8 LDR X0, [X0 + 0xD88]
	0x03C538BC BL 0x1C16D08
	0x03C538C0 MOV X1, X0
	0x03C538C4 MOV X0, X20
	0x03C538C8 BL 0x1C16DEC
	0x03C538CC STR W1, [X0]
	0x03C538D0 RET
	0x03C538D4 SUB X31, X31, 0x40
	0x03C538D8 STP X30, X23, [X31 + 0x10]
	0x03C538DC STP X22, X21, [X31 + 0x20]
	0x03C538E0 STP X20, X19, [X31 + 0x30]
	0x03C538E4 ADRP X23, 0x793000
	0x03C538E8 ADRP X22, 0x501000
	0x03C538EC LDRB W8, [X23 + 0x54]
	0x03C538F0 LDR X22, [X22 + 0xB8]
	0x03C538F4 MOV X20, X2
	0x03C538F8 MOV W19, W1
	0x03C538FC MOV X21, X0
	0x03C53900 TBNZ X8, 0x0, 0x3C53918
	0x03C53904 ADRP X0, 0x501000
	0x03C53908 LDR X0, [X0 + 0xB8]
	0x03C5390C BL 0x1C16CF4
	0x03C53910 MOVZ W8, 0x1
	0x03C53914 STRB W8, [X23 + 0x54]
	0x03C53918 LDR X0, [X22]
	0x03C5391C LDR W8, [X0 + 0xE0]
	0x03C53920 CBNZ W8, 0x3C5392C
	0x03C53924 BL 0x1C16DFC
	0x03C53928 LDR X0, [X22]
	0x03C5392C TBNZ X19, 0x1F, 0x3C5395C
	0x03C53930 LDR X8, [X0 + 0xB8]
	0x03C53934 LDR W8, [X8]
	0x03C53938 CMP W8, W19
	0x03C5393C B.LE 0x3C5395C
	0x03C53940 ADD X8, X21, W19, 0x2, UXTW

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0x793000
	015 Move X24, 0x4A1000
	016 Move W8, [X20+4084]
	017 Move X24, [X24+2904]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x4A1000
	024 Move X0, [X0+2904]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+4084], W8
	028 Move W8, [X19]
	029 Add X0, X19, 4
	030 Move [X31+60], W8
	031 Call LODParameters.GetHashCode, X0
	032 Move W8, [X19+192]
	033 Move X1, X31
	034 Move [X31+52], W8
	035 Move [X31+56], W0
	036 Move W8, [X19+196]
	037 Add X0, X19, 200
	038 Move [X31+48], W8
	039 Call UInt64.GetHashCode, X0
	040 Move [X31+44], W0
	041 Add X0, X19, 208
	042 Move X1, X31
	043 Call UInt64.GetHashCode, X0
	044 Move W8, [X19+344]
	045 Move X1, X31
	046 Move [X31+36], W8
	047 Move [X31+40], W0
	048 Add X0, X19, 348
	049 Call 0x2478824
	050 Move [X31+32], W0
	051 Add X0, X19, 412
	052 Move X1, X31
	053 Call Single.GetHashCode, X0
	054 Move [X31+28], W0
	055 Add X0, X19, 416
	056 Move X1, X31
	057 Call Single.GetHashCode, X0
	058 Move [X31+20], W0
	059 Add X0, X19, 420
	060 Move X1, X31
	061 Call Single.GetHashCode, X0
	062 Move [X31+24], W0
	063 Add X0, X19, 424
	064 Move X1, X31
	065 Call Single.GetHashCode, X0
	066 Move [X31+16], W0
	067 Add X0, X19, 428
	068 Move X1, X31
	069 Call Single.GetHashCode, X0
	070 Move W8, [X19+432]
	071 Move W26, [X19+436]
	072 Move W28, W0
	073 Add X0, X19, 440
	074 Move [X31+12], W8
	075 Call CameraProperties.GetHashCode, X0
	076 Move W29, W0
	077 Add X0, X19, 1432
	078 Move X1, X31
	079 Call Single.GetHashCode, X0
	080 Move W20, W0
	081 Add X0, X19, 1436
	082 Move X1, X31
	083 Call Int32.GetHashCode, X0
	084 Move W21, W0
	085 Add X0, X19, 1440
	086 Move X1, X31
	087 Call 0x2478824
	088 Move W22, W0
	089 Add X0, X19, 1504
	090 Move X1, X31
	091 Call 0x2478824
	092 Move W23, W0
	093 Add X0, X19, 1568
	094 Move X1, X31
	095 Call Single.GetHashCode, X0
	096 Move X8, [X24]
	097 Move W27, [X19+1572]
	098 Move W24, W0
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move W8, [X31+28]
	105 Move W9, [X31+20]
	106 Move W25, 397
	107 Add X0, X19, 1576
	108 Move X1, X31
	109 Xor W8, W8, W9
	110 Move W10, [X31+56]
	111 Move W9, [X31+60]
	112 Multiply W9, W9, W25
	113 Xor W9, W9, W10
	114 Move W10, [X31+52]
	115 Multiply W9, W9, W25
	116 Xor W9, W9, W10
	117 Move W10, [X31+48]
	118 Multiply W9, W9, W25
	119 Xor W9, W9, W10
	120 Move W10, [X31+44]
	121 Multiply W9, W9, W25
	122 Xor W9, W9, W10
	123 Move W10, [X31+40]
	124 Multiply W9, W9, W25
	125 Xor W9, W9, W10
	126 Move W10, [X31+36]
	127 Multiply W9, W9, W25
	128 Xor W9, W9, W10
	129 Move W10, [X31+32]
	130 Multiply W9, W9, W25
	131 Xor W9, W9, W10
	132 Move W10, [X31+24]
	133 Multiply W9, W9, W25
	134 Xor W8, W8, W10
	135 Xor W8, W8, W9
	136 Move W9, [X31+16]
	137 Multiply W8, W8, W25
	138 Xor W8, W8, W9
	139 Move W9, [X31+12]
	140 Multiply W8, W8, W25
	141 Xor W8, W8, W28
	142 Multiply W8, W8, W25
	143 Xor W8, W8, W9
	144 Multiply W8, W8, W25
	145 Xor W8, W8, W26
	146 Multiply W8, W8, W25
	147 Xor W8, W8, W29
	148 Multiply W8, W8, W25
	149 Xor W8, W8, W20
	150 Multiply W8, W8, W25
	151 Xor W8, W8, W21
	152 Multiply W8, W8, W25
	153 Xor W8, W8, W22
	154 Multiply W8, W8, W25
	155 Xor W8, W8, W23
	156 Multiply W8, W8, W25
	157 Xor W8, W8, W24
	158 Multiply W8, W8, W25
	159 Xor W20, W8, W27
	160 Call Boolean.GetHashCode, X0
	161 Multiply W8, W20, W25
	162 Xor W20, W0, W8
	163 Add X0, X19, 1580
	164 Move X1, X31
	165 Call Int32.GetHashCode, X0
	166 Multiply W8, W20, W25
	167 Move X20, [X31+144]
	168 Move X19, [X31+152]
	169 Move X22, [X31+128]
	170 Move X21, [X31+136]
	171 Move X24, [X31+112]
	172 Move X23, [X31+120]
	173 Move X26, [X31+96]
	174 Move X25, [X31+104]
	175 Move X28, [X31+80]
	176 Move X27, [X31+88]
	177 Move X29, [X31+64]
	178 Move X30, [X31+72]
	179 Xor W0, W8, W0
	180 Add X31, X31, 160
	181 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03C539D8 ADRP X0, 0x4A8000
	0x03C539DC LDR X0, [X0 + 0x760]
	0x03C539E0 BL 0x1C16D08
	0x03C539E4 BL 0x1C16F10
	0x03C539E8 MOV X20, X0
	0x03C539EC ADRP X0, 0x4AB000
	0x03C539F0 LDR X0, [X0 + 0x130]
	0x03C539F4 BL 0x1C16D08
	0x03C539F8 MOV X1, X0
	0x03C539FC MOV X0, X20
	0x03C53A00 MOV X2, X19
	0x03C53A04 MOV X3, X31
	0x03C53A08 BL 0x3311888
	0x03C53A0C ADRP X0, 0x50C000
	0x03C53A10 LDR X0, [X0 + 0xD90]
	0x03C53A14 BL 0x1C16D08
	0x03C53A18 MOV X1, X0
	0x03C53A1C MOV X0, X20
	0x03C53A20 BL 0x1C16DEC
	0x03C53A24 SUB X31, X31, 0x90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x793000
	005 Move X20, 0x4FE000
	006 Move W8, [X19+4085]
	007 Move X20, [X20+1664]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4FE000
	013 Move X0, [X0+1664]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+4085], W8
	017 Move X8, [X20]
	018 Move X9, -51793920
	019 Move V0, [X9+1720]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8], D0
	024 Move X30, [X31+32]
	025 Return 

