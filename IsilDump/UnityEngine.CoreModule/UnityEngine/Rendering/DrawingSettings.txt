Type: UnityEngine.Rendering.DrawingSettings

Method: System.Void .ctor(UnityEngine.Rendering.ShaderTagId shaderPassName, UnityEngine.Rendering.SortingSettings sortingSettings)

Disassembly:
	0x03C545C0 TBNZ X8, 0x0, 0x3C545D8
	0x03C545C4 ADRP X0, 0x500000
	0x03C545C8 LDR X0, [X0 + 0x50]
	0x03C545CC BL 0x1C16CF4
	0x03C545D0 MOVZ W8, 0x1
	0x03C545D4 STRB W8, [X21 + 0x61]
	0x03C545D8 LDR X0, [X22]
	0x03C545DC LDR W8, [X0 + 0xE0]
	0x03C545E0 CBNZ W8, 0x3C545E8
	0x03C545E4 BL 0x1C16DFC
	0x03C545E8 MOV X0, X20
	0x03C545EC MOV X1, X19
	0x03C545F0 LDP X20, X19, [X31 + 0x20]
	0x03C545F4 LDP X22, X21, [X31 + 0x10]
	0x03C545F8 LDR X30, [X31], #0x30
	0x03C545FC B 0x3C54600
	0x03C54600 STR X30, [X31 - 0x30]!
	0x03C54604 STP X22, X21, [X31 + 0x10]
	0x03C54608 STP X20, X19, [X31 + 0x20]
	0x03C5460C ADRP X22, 0x792000
	0x03C54610 ADRP X21, 0x500000
	0x03C54614 LDRB W8, [X22 + 0x70]
	0x03C54618 LDR X21, [X21 + 0x50]
	0x03C5461C MOV X20, X1
	0x03C54620 MOV X19, X0
	0x03C54624 TBNZ X8, 0x0, 0x3C54648
	0x03C54628 ADRP X0, 0x4C8000
	0x03C5462C LDR X0, [X0 + 0x890]
	0x03C54630 BL 0x1C16CF4
	0x03C54634 ADRP X0, 0x500000
	0x03C54638 LDR X0, [X0 + 0x50]
	0x03C5463C BL 0x1C16CF4
	0x03C54640 MOVZ W8, 0x1
	0x03C54644 STRB W8, [X22 + 0x70]
	0x03C54648 LDR X0, [X21]
	0x03C5464C LDR W8, [X0 + 0xE0]
	0x03C54650 CBNZ W8, 0x3C5465C
	0x03C54654 BL 0x1C16DFC
	0x03C54658 LDR X0, [X21]
	0x03C5465C LDR X8, [X0 + 0xB8]
	0x03C54660 LDR X8, [X8 + 0x30]
	0x03C54664 CBZ X8, 0x3C54684
	0x03C54668 LDR X9, [X8 + 0x18]
	0x03C5466C LDR X0, [X8 + 0x40]
	0x03C54670 LDR X3, [X8 + 0x28]
	0x03C54674 MOV X1, X19
	0x03C54678 MOV X2, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x793000
	008 Move X22, 0x501000
	009 Move W8, [X23+82]
	010 Move X22, [X22+184]
	011 Move X21, X2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x501000
	019 Move X0, [X0+184]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+82], W8
	023 Move W2, 96
	024 Move X0, X19
	025 Move X1, X21
	026 Call 0x3EB2B30
	027 Move X8, -51798016
	028 Move V0, [X8+1800]
	029 Move X8, INVALID
	030 Move [X19+168], X31
	031 Move [X19+176], X31
	032 Move [X19+184], X8
	033 Move [X19+160], D0
	034 Move [X19+96], W20
	035 Move X0, [X22]
	036 Add X20, X19, 100
	037 Move W21, 1
	038 Move TEMP, 0
	039 Not TEMP
	040 Move W23, TEMP
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Move X8, [X0+184]
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X20+4], W23
	050 Add X21, X21, 1
	051 Move [X19+192], W31
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Return 

Method: UnityEngine.Rendering.SortingSettings get_sortingSettings()

Disassembly:
	0x03C54684 LDR W8, [X0 + 0xE0]
	0x03C54688 CBNZ W8, 0x3C54694
	0x03C5468C BL 0x1C16DFC
	0x03C54690 LDR X0, [X21]
	0x03C54694 LDR X8, [X0 + 0xB8]
	0x03C54698 LDR X21, [X8 + 0x20]
	0x03C5469C CBZ X21, 0x3C546E0

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X0
	003 Move X0, X8
	004 Move W2, 96
	005 Call 0x3EB2AC0
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void set_sortingSettings(UnityEngine.Rendering.SortingSettings value)

Disassembly:
	0x03C546A0 CBZ X20, 0x3C546F0
	0x03C546A4 ADRP X8, 0x4C8000
	0x03C546A8 LDR X8, [X8 + 0x890]
	0x03C546AC MOV X0, X20
	0x03C546B0 LDR X1, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move W2, 96
	003 Call 0x3EB2B30
	004 Move X30, [X31+16]
	005 Return 

Method: System.Void set_perObjectData(UnityEngine.Rendering.PerObjectData value)

Disassembly:
	0x03C546B4 BL 0x301DDC4
	0x03C546B8 LDR X8, [X21 + 0x40]

ISIL:
	001 Move [X0+160], W1
	002 Return 

Method: System.Void set_enableDynamicBatching(System.Boolean value)

Disassembly:
	0x03C546BC LDR X4, [X21 + 0x18]
	0x03C546C0 LDR X3, [X21 + 0x28]
	0x03C546C4 MOV X1, X19
	0x03C546C8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move W8, [X0+164]
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move [X0+164], W8
	004 Return 

Method: System.Void set_enableInstancing(System.Boolean value)

Disassembly:
	0x03C546CC LDP X22, X21, [X31 + 0x10]
	0x03C546D0 MOV X2, X0
	0x03C546D4 MOV X0, X8
	0x03C546D8 LDR X30, [X31], #0x30
	0x03C546DC BR X4
	0x03C546E0 LDP X20, X19, [X31 + 0x20]
	0x03C546E4 LDP X22, X21, [X31 + 0x10]
	0x03C546E8 LDR X30, [X31], #0x30

ISIL:
	001 Move W8, [X0+164]
	002 And W31, W1, 1
	003 Move W9, 2
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 And W8, W8, 0xFFFFFFFD
	006 Or W8, W8, W9
	007 Move [X0+164], W8
	008 Return 

Method: System.Void set_overrideMaterial(UnityEngine.Material value)

Disassembly:
	0x03C546EC RET
	0x03C546F0 BL 0x1C16F20
	0x03C546F4 STR X30, [X31 - 0x30]!
	0x03C546F8 STP X22, X21, [X31 + 0x10]
	0x03C546FC STP X20, X19, [X31 + 0x20]
	0x03C54700 ADRP X21, 0x792000
	0x03C54704 ADRP X22, 0x500000
	0x03C54708 LDRB W8, [X21 + 0x62]
	0x03C5470C LDR X22, [X22 + 0x50]
	0x03C54710 MOV X19, X1
	0x03C54714 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Compare X1, 0
	005 JumpIfEqual {9}
	006 Move X0, X1
	007 Move X1, X31
	008 Call Object.GetInstanceID, X0
	009 Move W0, W31
	010 Move [X19+176], W0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Void set_overrideShader(UnityEngine.Shader value)

Disassembly:
	0x03C54718 TBNZ X8, 0x0, 0x3C54730
	0x03C5471C ADRP X0, 0x500000
	0x03C54720 LDR X0, [X0 + 0x50]
	0x03C54724 BL 0x1C16CF4
	0x03C54728 MOVZ W8, 0x1
	0x03C5472C STRB W8, [X21 + 0x62]
	0x03C54730 LDR X0, [X22]
	0x03C54734 LDR W8, [X0 + 0xE0]
	0x03C54738 CBNZ W8, 0x3C54740
	0x03C5473C BL 0x1C16DFC
	0x03C54740 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Compare X1, 0
	005 JumpIfEqual {9}
	006 Move X0, X1
	007 Move X1, X31
	008 Call Object.GetInstanceID, X0
	009 Move W0, W31
	010 Move [X19+168], W0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Void set_overrideMaterialPassIndex(System.Int32 value)

Disassembly:
	0x03C54744 MOV X1, X19
	0x03C54748 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X0+180], W1
	002 Return 

Method: System.Void set_overrideShaderPassIndex(System.Int32 value)

Disassembly:
	0x03C5474C LDP X22, X21, [X31 + 0x10]
	0x03C54750 LDR X30, [X31], #0x30

ISIL:
	001 Move [X0+172], W1
	002 Return 

Method: System.Void set_fallbackMaterial(UnityEngine.Material value)

Disassembly:
	0x03C54754 B 0x3C54758
	0x03C54758 STR X30, [X31 - 0x30]!
	0x03C5475C STP X22, X21, [X31 + 0x10]
	0x03C54760 STP X20, X19, [X31 + 0x20]
	0x03C54764 ADRP X22, 0x792000
	0x03C54768 ADRP X21, 0x500000
	0x03C5476C LDRB W8, [X22 + 0x71]
	0x03C54770 LDR X21, [X21 + 0x50]
	0x03C54774 MOV X19, X1
	0x03C54778 MOV X20, X0
	0x03C5477C TBNZ X8, 0x0, 0x3C54794

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Compare X1, 0
	005 JumpIfEqual {9}
	006 Move X0, X1
	007 Move X1, X31
	008 Call Object.GetInstanceID, X0
	009 Move W0, W31
	010 Move [X19+184], W0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Void set_mainLightIndex(System.Int32 value)

Disassembly:
	0x03C54780 ADRP X0, 0x500000
	0x03C54784 LDR X0, [X0 + 0x50]

ISIL:
	001 Move [X0+188], W1
	002 Return 

Method: UnityEngine.Rendering.ShaderTagId GetShaderPassName(System.Int32 index)

Disassembly:
	0x03C54788 BL 0x1C16CF4
	0x03C5478C MOVZ W8, 0x1
	0x03C54790 STRB W8, [X22 + 0x71]
	0x03C54794 LDR X0, [X21]
	0x03C54798 LDR W8, [X0 + 0xE0]
	0x03C5479C CBNZ W8, 0x3C547A8
	0x03C547A0 BL 0x1C16DFC
	0x03C547A4 LDR X0, [X21]
	0x03C547A8 LDR X8, [X0 + 0xB8]
	0x03C547AC LDR X8, [X8 + 0x40]
	0x03C547B0 CBZ X8, 0x3C547D8
	0x03C547B4 LDR X4, [X8 + 0x18]
	0x03C547B8 LDR X0, [X8 + 0x40]
	0x03C547BC LDR X3, [X8 + 0x28]
	0x03C547C0 MOV X1, X20
	0x03C547C4 MOV X2, X19
	0x03C547C8 LDP X20, X19, [X31 + 0x20]
	0x03C547CC LDP X22, X21, [X31 + 0x10]
	0x03C547D0 LDR X30, [X31], #0x30
	0x03C547D4 BR X4
	0x03C547D8 LDP X20, X19, [X31 + 0x20]
	0x03C547DC LDP X22, X21, [X31 + 0x10]
	0x03C547E0 LDR X30, [X31], #0x30
	0x03C547E4 RET
	0x03C547E8 STR X30, [X31 - 0x30]!
	0x03C547EC STP X22, X21, [X31 + 0x10]
	0x03C547F0 STP X20, X19, [X31 + 0x20]
	0x03C547F4 ADRP X21, 0x792000
	0x03C547F8 ADRP X22, 0x500000
	0x03C547FC LDRB W8, [X21 + 0x63]
	0x03C54800 LDR X22, [X22 + 0x50]
	0x03C54804 MOV X19, X1
	0x03C54808 MOV X20, X0
	0x03C5480C TBNZ X8, 0x0, 0x3C54824
	0x03C54810 ADRP X0, 0x500000
	0x03C54814 LDR X0, [X0 + 0x50]
	0x03C54818 BL 0x1C16CF4
	0x03C5481C MOVZ W8, 0x1
	0x03C54820 STRB W8, [X21 + 0x63]
	0x03C54824 LDR X0, [X22]
	0x03C54828 LDR W8, [X0 + 0xE0]
	0x03C5482C CBNZ W8, 0x3C54834
	0x03C54830 BL 0x1C16DFC
	0x03C54834 MOV X0, X20
	0x03C54838 MOV X1, X19
	0x03C5483C LDP X20, X19, [X31 + 0x20]
	0x03C54840 LDP X22, X21, [X31 + 0x10]
	0x03C54844 LDR X30, [X31], #0x30
	0x03C54848 B 0x3C5484C
	0x03C5484C STR X30, [X31 - 0x30]!
	0x03C54850 STP X22, X21, [X31 + 0x10]
	0x03C54854 STP X20, X19, [X31 + 0x20]
	0x03C54858 ADRP X22, 0x792000
	0x03C5485C ADRP X21, 0x500000
	0x03C54860 LDRB W8, [X22 + 0x72]
	0x03C54864 LDR X21, [X21 + 0x50]
	0x03C54868 MOV X19, X1
	0x03C5486C MOV X20, X0
	0x03C54870 TBNZ X8, 0x0, 0x3C54894
	0x03C54874 ADRP X0, 0x4C8000
	0x03C54878 LDR X0, [X0 + 0x890]
	0x03C5487C BL 0x1C16CF4
	0x03C54880 ADRP X0, 0x500000
	0x03C54884 LDR X0, [X0 + 0x50]
	0x03C54888 BL 0x1C16CF4
	0x03C5488C MOVZ W8, 0x1
	0x03C54890 STRB W8, [X22 + 0x72]
	0x03C54894 LDR X0, [X21]
	0x03C54898 LDR W8, [X0 + 0xE0]
	0x03C5489C CBNZ W8, 0x3C548A8
	0x03C548A0 BL 0x1C16DFC
	0x03C548A4 LDR X0, [X21]
	0x03C548A8 LDR X8, [X0 + 0xB8]
	0x03C548AC LDR X22, [X8 + 0x28]
	0x03C548B0 CBZ X22, 0x3C548EC
	0x03C548B4 CBZ X19, 0x3C5493C
	0x03C548B8 ADRP X8, 0x4C8000
	0x03C548BC LDR X8, [X8 + 0x890]
	0x03C548C0 MOV X0, X19
	0x03C548C4 LDR X1, [X8]
	0x03C548C8 BL 0x301DDC4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x793000
	007 Move X21, 0x501000
	008 Move W8, [X22+83]
	009 Move X21, [X21+184]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x501000
	017 Move X0, [X0+184]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+83], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move TEMP, X19
	028 And TEMP, TEMP, -2147483648
	029 Compare TEMP, -2147483648
	030 JumpIfEqual {42}
	031 Move X8, [X0+184]
	032 Move W8, [X8]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X20, W19
	035 Move W0, [X8+96]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return X0
	042 Move X20, 0x501000
	043 Move X20, [X20+184]
	044 Move X0, X20
	045 Call 0x1C17D08
	046 Call 0x19913D0
	047 Move X0, X20
	048 Call 0x1C17D08
	049 Move X8, [X0+184]
	050 Move X20, 0x4A0000
	051 Move W8, [X8]
	052 Move [X31+12], W8
	053 Move X20, [X20+1880]
	054 Move X0, X20
	055 Call 0x1C17D08
	056 Add X1, X31, 12
	057 Call 0x1C17E04
	058 Move X21, X0
	059 Move X0, X20
	060 Move [X31+8], W19
	061 Call 0x1C17D08
	062 Add X1, X31, 8
	063 Call 0x1C17E04
	064 Move X19, X0
	065 Move X0, 0x50C000
	066 Move X0, [X0+3456]
	067 Call 0x1C17D08
	068 Move X1, X21
	069 Move X2, X19
	070 Move X3, X31
	071 Call String.Format, X0, X1, X2
	072 Move X19, X0
	073 Move X0, 0x4A8000
	074 Move X0, [X0+1888]
	075 Call 0x1C17D08
	076 Call 0x1C17F10
	077 Move X20, X0
	078 Move X0, 0x4AB000
	079 Move X0, [X0+304]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X20
	083 Move X2, X19
	084 Move X3, X31
	085 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	086 Move X0, 0x50C000
	087 Move X0, [X0+3464]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X20
	091 Call 0x1C17DEC

Method: System.Void SetShaderPassName(System.Int32 index, UnityEngine.Rendering.ShaderTagId shaderPassName)

Disassembly:
	0x03C548D4 LDR X3, [X22 + 0x28]
	0x03C548D8 MOV X2, X0
	0x03C548DC MOV X0, X8
	0x03C548E0 MOV X1, X20
	0x03C548E4 BLR X9
	0x03C548E8 LDR X0, [X21]
	0x03C548EC LDR W8, [X0 + 0xE0]
	0x03C548F0 CBNZ W8, 0x3C548FC
	0x03C548F4 BL 0x1C16DFC
	0x03C548F8 LDR X0, [X21]
	0x03C548FC LDR X8, [X0 + 0xB8]
	0x03C54900 LDR X8, [X8 + 0x38]
	0x03C54904 CBZ X8, 0x3C5492C
	0x03C54908 LDR X4, [X8 + 0x18]
	0x03C5490C LDR X0, [X8 + 0x40]
	0x03C54910 LDR X3, [X8 + 0x28]
	0x03C54914 MOV X1, X20
	0x03C54918 MOV X2, X19
	0x03C5491C LDP X20, X19, [X31 + 0x20]
	0x03C54920 LDP X22, X21, [X31 + 0x10]
	0x03C54924 LDR X30, [X31], #0x30
	0x03C54928 BR X4
	0x03C5492C LDP X20, X19, [X31 + 0x20]
	0x03C54930 LDP X22, X21, [X31 + 0x10]
	0x03C54934 LDR X30, [X31], #0x30
	0x03C54938 RET
	0x03C5493C BL 0x1C16F20
	0x03C54940 STR X30, [X31 - 0x30]!
	0x03C54944 STP X22, X21, [X31 + 0x10]
	0x03C54948 STP X20, X19, [X31 + 0x20]
	0x03C5494C ADRP X21, 0x792000
	0x03C54950 ADRP X22, 0x500000
	0x03C54954 LDRB W8, [X21 + 0x64]
	0x03C54958 LDR X22, [X22 + 0x50]
	0x03C5495C MOV X19, X1
	0x03C54960 MOV X20, X0
	0x03C54964 TBNZ X8, 0x0, 0x3C5497C
	0x03C54968 ADRP X0, 0x500000
	0x03C5496C LDR X0, [X0 + 0x50]
	0x03C54970 BL 0x1C16CF4
	0x03C54974 MOVZ W8, 0x1
	0x03C54978 STRB W8, [X21 + 0x64]
	0x03C5497C LDR X0, [X22]
	0x03C54980 LDR W8, [X0 + 0xE0]
	0x03C54984 CBNZ W8, 0x3C5498C
	0x03C54988 BL 0x1C16DFC
	0x03C5498C MOV X0, X20
	0x03C54990 MOV X1, X19
	0x03C54994 LDP X20, X19, [X31 + 0x20]
	0x03C54998 LDP X22, X21, [X31 + 0x10]
	0x03C5499C LDR X30, [X31], #0x30
	0x03C549A0 B 0x3C549A4
	0x03C549A4 STR X30, [X31 - 0x30]!
	0x03C549A8 STP X22, X21, [X31 + 0x10]
	0x03C549AC STP X20, X19, [X31 + 0x20]
	0x03C549B0 ADRP X22, 0x792000
	0x03C549B4 ADRP X21, 0x500000
	0x03C549B8 LDRB W8, [X22 + 0x73]
	0x03C549BC LDR X21, [X21 + 0x50]
	0x03C549C0 MOV X19, X1
	0x03C549C4 MOV X20, X0
	0x03C549C8 TBNZ X8, 0x0, 0x3C549E0
	0x03C549CC ADRP X0, 0x500000
	0x03C549D0 LDR X0, [X0 + 0x50]
	0x03C549D4 BL 0x1C16CF4
	0x03C549D8 MOVZ W8, 0x1
	0x03C549DC STRB W8, [X22 + 0x73]
	0x03C549E0 LDR X0, [X21]
	0x03C549E4 LDR W8, [X0 + 0xE0]
	0x03C549E8 CBNZ W8, 0x3C549F4
	0x03C549EC BL 0x1C16DFC
	0x03C549F0 LDR X0, [X21]
	0x03C549F4 LDR X8, [X0 + 0xB8]
	0x03C549F8 LDR X8, [X8 + 0x48]
	0x03C549FC CBZ X8, 0x3C54A24
	0x03C54A00 LDR X4, [X8 + 0x18]
	0x03C54A04 LDR X0, [X8 + 0x40]
	0x03C54A08 LDR X3, [X8 + 0x28]
	0x03C54A0C MOV X1, X20
	0x03C54A10 MOV X2, X19
	0x03C54A14 LDP X20, X19, [X31 + 0x20]
	0x03C54A18 LDP X22, X21, [X31 + 0x10]
	0x03C54A1C LDR X30, [X31], #0x30
	0x03C54A20 BR X4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x793000
	009 Move X22, 0x501000
	010 Move W8, [X23+84]
	011 Move X22, [X22+184]
	012 Move X20, X2
	013 Move W19, W1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x501000
	020 Move X0, [X0+184]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+84], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move TEMP, X19
	031 And TEMP, TEMP, -2147483648
	032 Compare TEMP, -2147483648
	033 JumpIfEqual {47}
	034 Move X8, [X0+184]
	035 Move W8, [X8]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X21, W19
	038 Move [X8+96], W20
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X22, [X31+32]
	042 Move X21, [X31+40]
	043 Move X30, [X31+16]
	044 Move X23, [X31+24]
	045 Add X31, X31, 64
	046 Return 
	047 Move X20, 0x501000
	048 Move X20, [X20+184]
	049 Move X0, X20
	050 Call 0x1C17D08
	051 Call 0x19913D0
	052 Move X0, X20
	053 Call 0x1C17D08
	054 Move X8, [X0+184]
	055 Move X20, 0x4A0000
	056 Move W8, [X8]
	057 Move [X31+12], W8
	058 Move X20, [X20+1880]
	059 Move X0, X20
	060 Call 0x1C17D08
	061 Add X1, X31, 12
	062 Call 0x1C17E04
	063 Move X21, X0
	064 Move X0, X20
	065 Move [X31+8], W19
	066 Call 0x1C17D08
	067 Add X1, X31, 8
	068 Call 0x1C17E04
	069 Move X19, X0
	070 Move X0, 0x50C000
	071 Move X0, [X0+3456]
	072 Call 0x1C17D08
	073 Move X1, X21
	074 Move X2, X19
	075 Move X3, X31
	076 Call String.Format, X0, X1, X2
	077 Move X19, X0
	078 Move X0, 0x4A8000
	079 Move X0, [X0+1888]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X20, X0
	083 Move X0, 0x4AB000
	084 Move X0, [X0+304]
	085 Call 0x1C17D08
	086 Move X1, X0
	087 Move X0, X20
	088 Move X2, X19
	089 Move X3, X31
	090 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	091 Move X0, 0x50C000
	092 Move X0, [X0+3472]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X20
	096 Call 0x1C17DEC

Method: System.Boolean Equals(UnityEngine.Rendering.DrawingSettings other)

Disassembly:
	0x03C54A24 LDP X20, X19, [X31 + 0x20]
	0x03C54A28 LDP X22, X21, [X31 + 0x10]
	0x03C54A2C LDR X30, [X31], #0x30
	0x03C54A30 RET
	0x03C54A34 STR X30, [X31 - 0x30]!
	0x03C54A38 STP X22, X21, [X31 + 0x10]
	0x03C54A3C STP X20, X19, [X31 + 0x20]
	0x03C54A40 ADRP X22, 0x792000
	0x03C54A44 LDRB W8, [X22 + 0x65]
	0x03C54A48 MOV X21, X2
	0x03C54A4C MOV X19, X1
	0x03C54A50 MOV X20, X0
	0x03C54A54 TBNZ X8, 0x0, 0x3C54A6C
	0x03C54A58 ADRP X0, 0x4C8000
	0x03C54A5C LDR X0, [X0 + 0x890]
	0x03C54A60 BL 0x1C16CF4
	0x03C54A64 MOVZ W8, 0x1
	0x03C54A68 STRB W8, [X22 + 0x65]
	0x03C54A6C CBZ X21, 0x3C54AA8
	0x03C54A70 ADRP X8, 0x4C8000
	0x03C54A74 LDR X8, [X8 + 0x890]
	0x03C54A78 MOV X0, X21
	0x03C54A7C LDR X1, [X8]
	0x03C54A80 BL 0x301DDC4
	0x03C54A84 LDR X8, [X20]
	0x03C54A88 MOV X2, X0
	0x03C54A8C MOV X0, X20
	0x03C54A90 MOV X1, X19
	0x03C54A94 LDP X4, X3, [X8 + 0x178]
	0x03C54A98 LDP X20, X19, [X31 + 0x20]
	0x03C54A9C LDP X22, X21, [X31 + 0x10]
	0x03C54AA0 LDR X30, [X31], #0x30
	0x03C54AA4 BR X4
	0x03C54AA8 BL 0x1C16F20
	0x03C54AAC STR X30, [X31 - 0x20]!
	0x03C54AB0 STP X20, X19, [X31 + 0x10]
	0x03C54AB4 LDRB W8, [X0 + 0x10]
	0x03C54AB8 CBNZ W8, 0x3C54AD0
	0x03C54ABC LDR X8, [X0]
	0x03C54AC0 LDP X20, X19, [X31 + 0x10]
	0x03C54AC4 LDP X4, X3, [X8 + 0x1A8]
	0x03C54AC8 LDR X30, [X31], #0x20
	0x03C54ACC BR X4
	0x03C54AD0 ADRP X8, 0x4C8000
	0x03C54AD4 LDR X8, [X8 + 0x4B0]
	0x03C54AD8 MOV X19, X0
	0x03C54ADC MOV X0, X8
	0x03C54AE0 BL 0x1C16D08
	0x03C54AE4 MOV X1, X19
	0x03C54AE8 MOV X2, X31
	0x03C54AEC BL 0x321EFD0
	0x03C54AF0 MOV X19, X0
	0x03C54AF4 ADRP X0, 0x4C8000
	0x03C54AF8 LDR X0, [X0 + 0x4B8]
	0x03C54AFC BL 0x1C16D08
	0x03C54B00 BL 0x1C16F10
	0x03C54B04 MOV X1, X19
	0x03C54B08 MOV X2, X31
	0x03C54B0C MOV X20, X0
	0x03C54B10 BL 0x338C448
	0x03C54B14 ADRP X0, 0x50B000
	0x03C54B18 LDR X0, [X0 + 0xDB8]
	0x03C54B1C BL 0x1C16D08
	0x03C54B20 MOV X1, X0
	0x03C54B24 MOV X0, X20
	0x03C54B28 BL 0x1C16DEC
	0x03C54B2C LDRB W0, [X0 + 0x10]
	0x03C54B30 RET
	0x03C54B34 AND W8, W1, 0x1
	0x03C54B38 STRB W8, [X0 + 0x10]
	0x03C54B3C RET
	0x03C54B40 STP X30, X21, [X31 - 0x20]!
	0x03C54B44 STP X20, X19, [X31 + 0x10]
	0x03C54B48 ADRP X21, 0x792000
	0x03C54B4C ADRP X20, 0x4A6000
	0x03C54B50 LDRB W8, [X21 + 0x66]
	0x03C54B54 LDR X20, [X20 + 0xC10]
	0x03C54B58 MOV X19, X0
	0x03C54B5C TBNZ X8, 0x0, 0x3C54B74

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X21, 0x793000
	009 Move W8, [X21+85]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x501000
	017 Move X0, [X0+184]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+85], W8
	021 Move X23, 0x501000
	022 Move X23, [X23+184]
	023 Move W21, W31
	024 Move X0, [X23]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X23]
	030 Move X8, [X0+184]
	031 Move W8, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X20
	038 Move W1, W21
	039 Call DrawingSettings.GetShaderPassName, X0, X1
	040 Move X22, X0
	041 Move X0, X19
	042 Move W1, W21
	043 Call DrawingSettings.GetShaderPassName, X0, X1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add W21, W21, 1
	046 Add X0, X31, 0
	047 Move W2, 96
	048 Move X1, X19
	049 Call 0x3EB2AC0
	050 Add X1, X31, 0
	051 Move X0, X20
	052 Call SortingSettings.Equals, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {76}
	057 Move W8, [X20+160]
	058 Move W9, [X19+160]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W8, [X20+164]
	061 Move W9, [X19+164]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W8, [X20+176]
	064 Move W9, [X19+176]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W8, [X20+180]
	067 Move W9, [X19+180]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W8, [X20+184]
	070 Move W9, [X19+184]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W8, [X20+192]
	073 Move W9, [X19+192]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CSET not yet implemented."
	076 Move W0, W31
	077 Move X20, [X31+128]
	078 Move X19, [X31+136]
	079 Move X22, [X31+112]
	080 Move X21, [X31+120]
	081 Move X30, [X31+96]
	082 Move X23, [X31+104]
	083 Add X31, X31, 144
	084 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C54C3C MOV X0, X19
	0x03C54C40 LDP X9, X1, [X8 + 0x198]
	0x03C54C44 BLR X9
	0x03C54C48 CBZ X0, 0x3C54E88
	0x03C54C4C MOV X20, X0
	0x03C54C50 ADRP X0, 0x49F000
	0x03C54C54 LDR X0, [X0 + 0x818]
	0x03C54C58 BL 0x1C16D08
	0x03C54C5C MOV X22, X0
	0x03C54C60 ADRP X0, 0x50B000
	0x03C54C64 LDR X0, [X0 + 0xDC0]
	0x03C54C68 BL 0x1C16D08
	0x03C54C6C LDR X8, [X20]
	0x03C54C70 MOV X21, X0
	0x03C54C74 LDRH W9, [X8 + 0x12E]
	0x03C54C78 CBZ X9, 0x3C54C9C
	0x03C54C7C LDR X10, [X8 + 0xB0]
	0x03C54C80 ADD X10, X10, 0x8
	0x03C54C84 LDUR X11, [X10 - 0x8]
	0x03C54C88 CMP X11, X22
	0x03C54C8C B.EQ 0x3C54CB0
	0x03C54C90 SUBS X9, X9, 0x1
	0x03C54C94 ADD X10, X10, 0x10
	0x03C54C98 B.NE 0x3C54C84
	0x03C54C9C MOVZ W2, 0x4
	0x03C54CA0 MOV X0, X20
	0x03C54CA4 MOV X1, X22
	0x03C54CA8 BL 0x1C5C788
	0x03C54CAC B 0x3C54CC0
	0x03C54CB0 LDR W9, [X10]
	0x03C54CB4 ADD W9, W9, 0x4
	0x03C54CB8 ADD X8, X8, W9, 0x4, SXTW
	0x03C54CBC ADD X0, X8, 0x138
	0x03C54CC0 LDP X8, X2, [X0]
	0x03C54CC4 MOV X0, X20
	0x03C54CC8 MOV X1, X21
	0x03C54CCC BLR X8
	0x03C54CD0 TBZ X0, 0x0, 0x3C54E5C
	0x03C54CD4 LDR X8, [X19]
	0x03C54CD8 MOV X0, X19
	0x03C54CDC LDP X9, X1, [X8 + 0x198]
	0x03C54CE0 BLR X9
	0x03C54CE4 CBZ X0, 0x3C54E88
	0x03C54CE8 MOV X20, X0
	0x03C54CEC ADRP X0, 0x49F000
	0x03C54CF0 LDR X0, [X0 + 0x818]
	0x03C54CF4 BL 0x1C16D08
	0x03C54CF8 MOV X22, X0
	0x03C54CFC ADRP X0, 0x50B000
	0x03C54D00 LDR X0, [X0 + 0xDC0]
	0x03C54D04 BL 0x1C16D08
	0x03C54D08 LDR X8, [X20]
	0x03C54D0C MOV X21, X0
	0x03C54D10 LDRH W9, [X8 + 0x12E]
	0x03C54D14 CBZ X9, 0x3C54D38
	0x03C54D18 LDR X10, [X8 + 0xB0]
	0x03C54D1C ADD X10, X10, 0x8
	0x03C54D20 LDUR X11, [X10 - 0x8]

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+208], X30
	003 Move [X31+224], X22
	004 Move [X31+232], X21
	005 Move [X31+240], X20
	006 Move [X31+248], X19
	007 NotImplemented "Instruction MRS not yet implemented."
	008 Move X8, [X21+40]
	009 Move X22, 0x793000
	010 Move X20, X1
	011 Move X19, X0
	012 Move [X31+200], X8
	013 Move W8, [X22+86]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x501000
	019 Move X0, [X0+184]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+86], W8
	023 Compare X20, 0
	024 JumpIfEqual {30}
	025 Move X22, 0x501000
	026 Move X22, [X22+184]
	027 Move X8, [X20]
	028 Move X0, [X22]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, W31
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfEqual {35}
	034 Move X1, X0
	035 Call 0x1C17DFC
	036 Move X1, [X22]
	037 Move X0, [X20]
	038 Move X8, [X0+64]
	039 Move X9, [X1+64]
	040 Move X0, X20
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Call 0x1C17E08
	043 Move X1, X0
	044 Add X0, X31, 0
	045 Move W2, 196
	046 Call 0x3EB2AC0
	047 Add X1, X31, 0
	048 Move X0, X19
	049 Call DrawingSettings.Equals, X0, X1
	050 Move X8, [X21+40]
	051 Move X9, [X31+200]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X20, [X31+240]
	054 Move X19, [X31+248]
	055 Move X22, [X31+224]
	056 Move X21, [X31+232]
	057 Move X30, [X31+208]
	058 And W0, W0, 1
	059 Add X31, X31, 256
	060 Return X0
	061 Call 0x1C181E0
	062 Call 0x3EB2B20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C54D24 CMP X11, X22
	0x03C54D28 B.EQ 0x3C54D4C
	0x03C54D2C SUBS X9, X9, 0x1
	0x03C54D30 ADD X10, X10, 0x10
	0x03C54D34 B.NE 0x3C54D20
	0x03C54D38 MOV X0, X20
	0x03C54D3C MOV X1, X22
	0x03C54D40 MOV W2, W31
	0x03C54D44 BL 0x1C5C788
	0x03C54D48 B 0x3C54D58
	0x03C54D4C LDRSW X9, [X10]
	0x03C54D50 ADD X8, X8, X9, 0x4, LSL
	0x03C54D54 ADD X0, X8, 0x138
	0x03C54D58 LDP X8, X2, [X0]
	0x03C54D5C MOV X0, X20
	0x03C54D60 MOV X1, X21
	0x03C54D64 BLR X8
	0x03C54D68 MOV X20, X0
	0x03C54D6C ADRP X0, 0x49F000
	0x03C54D70 LDR X0, [X0 + 0x758]
	0x03C54D74 BL 0x1C16D08
	0x03C54D78 CBZ X20, 0x3C54E5C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call SortingSettings.GetHashCode, X0
	005 Move W8, [X19+160]
	006 Move W10, [X19+164]
	007 Move W9, 397
	008 Multiply W11, W0, W9
	009 Xor W8, W11, W8
	010 Multiply W8, W8, W9
	011 Xor W8, W8, W10
	012 Move W11, [X19+176]
	013 Move W10, [X19+180]
	014 Multiply W8, W8, W9
	015 Xor W8, W8, W11
	016 Move W11, [X19+184]
	017 Multiply W8, W8, W9
	018 Xor W8, W8, W10
	019 Move W10, [X19+192]
	020 Multiply W8, W8, W9
	021 Xor W8, W8, W11
	022 Multiply W8, W8, W9
	023 Xor W0, W8, W10
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Return X0

Method: System.Boolean op_Equality(UnityEngine.Rendering.DrawingSettings left, UnityEngine.Rendering.DrawingSettings right)

Disassembly:
	0x03C54E38 MOV X1, X0
	0x03C54E3C MOV X0, X20
	0x03C54E40 LDR X8, [X8 + 0x40]
	0x03C54E44 CMP X8, X9
	0x03C54E48 B.NE 0x3C54EAC
	0x03C54E4C BL 0x1C16E08
	0x03C54E50 LDR W8, [X0]
	0x03C54E54 CMP W8, 0x1
	0x03C54E58 B.EQ 0x3C54E80
	0x03C54E5C ADRP X0, 0x49F000
	0x03C54E60 LDR X0, [X0 + 0xA28]
	0x03C54E64 BL 0x1C16D08
	0x03C54E68 LDR W8, [X0 + 0xE0]
	0x03C54E6C CBNZ W8, 0x3C54E74
	0x03C54E70 BL 0x1C16DFC
	0x03C54E74 MOV X0, X19
	0x03C54E78 MOV X1, X31
	0x03C54E7C BL 0x3C02C84
	0x03C54E80 MOV X0, X31
	0x03C54E84 B 0x3C54BE8
	0x03C54E88 BL 0x1C16F20
	0x03C54E8C MOVZ W0, 0x8
	0x03C54E90 BL 0x3EB1AF0
	0x03C54E94 LDR X8, [X19]
	0x03C54E98 STR X8, [X0]
	0x03C54E9C ADRP X1, 0x260000
	0x03C54EA0 ADD X1, X1, 0xE58
	0x03C54EA4 MOV X2, X31
	0x03C54EA8 BL 0x3EB1B00
	0x03C54EAC BL 0x1C171E0
	0x03C54EB0 MOV X19, X0
	0x03C54EB4 BL 0x3EB1AE0
	0x03C54EB8 MOV X0, X19
	0x03C54EBC BL 0x1D2C690
	0x03C54EC0 BL 0x1990590
	0x03C54EC4 MOV X0, X31
	0x03C54EC8 RET
	0x03C54ECC MOV X0, X31
	0x03C54ED0 RET
	0x03C54ED4 MOV X0, X31
	0x03C54ED8 RET
	0x03C54EDC MOV X0, X31
	0x03C54EE0 RET
	0x03C54EE4 MOV X0, X31
	0x03C54EE8 RET
	0x03C54EEC MOV X0, X31
	0x03C54EF0 RET

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+416], X29
	003 Move [X31+432], X30
	004 Move [X31+440], X23
	005 Move [X31+448], X22
	006 Move [X31+456], X21
	007 Move [X31+464], X20
	008 Move [X31+472], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X21+40]
	011 Move X23, 0x793000
	012 Move X22, 0x501000
	013 Move X20, X1
	014 Move [X31+408], X8
	015 Move W8, [X23+87]
	016 Move X22, [X22+184]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x501000
	023 Move X0, [X0+184]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+87], W8
	027 Add X0, X31, 208
	028 Move W2, 196
	029 Move X1, X20
	030 Call 0x3EB2AC0
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Add X0, X31, 8
	037 Add X1, X31, 208
	038 Move W2, 196
	039 Call 0x3EB2AC0
	040 Add X1, X31, 8
	041 Move X0, X19
	042 Call DrawingSettings.Equals, X0, X1
	043 Move X8, [X21+40]
	044 Move X9, [X31+408]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X20, [X31+464]
	047 Move X19, [X31+472]
	048 Move X22, [X31+448]
	049 Move X21, [X31+456]
	050 Move X30, [X31+432]
	051 Move X23, [X31+440]
	052 Move X29, [X31+416]
	053 And W0, W0, 1
	054 Add X31, X31, 480
	055 Return X0
	056 Call 0x3EB2B20

Method: System.Void .cctor()

Disassembly:
	0x03C54EF4 MOV X0, X31
	0x03C54EF8 RET
	0x03C54EFC MOV X0, X31
	0x03C54F00 RET
	0x03C54F04 MOV X0, X31
	0x03C54F08 RET
	0x03C54F0C MOV X0, X31
	0x03C54F10 RET
	0x03C54F14 MOV X0, X31
	0x03C54F18 RET
	0x03C54F1C MOV X0, X31
	0x03C54F20 RET
	0x03C54F24 MOV X0, X31
	0x03C54F28 RET
	0x03C54F2C MOV X0, X31
	0x03C54F30 RET
	0x03C54F34 MOV X0, X31
	0x03C54F38 RET
	0x03C54F3C MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x793000
	005 Move X20, 0x501000
	006 Move W8, [X19+88]
	007 Move X20, [X20+184]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x501000
	013 Move X0, [X0+184]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+88], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 16
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

