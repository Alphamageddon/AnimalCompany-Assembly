Type: UnityEngine.Rendering.BatchMaterialID

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C5D6BC LDP V0, V1, [X20]
	0x03C5D6C0 ADRP X20, 0x789000

ISIL:
	001 Move X1, X31
	002 Call UInt32.GetHashCode, X0
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C5D6C4 LDR X8, [X20 + 0x210]
	0x03C5D6C8 STP V0, V1, [X31]
	0x03C5D6CC CBNZ X8, 0x3C5D6E4
	0x03C5D6D0 ADRP X0, 0xFFFFFFFFFCEBE000
	0x03C5D6D4 ADD X0, X0, 0x9F
	0x03C5D6D8 BL 0x1C16CB8
	0x03C5D6DC MOV X8, X0
	0x03C5D6E0 STR X0, [X20 + 0x210]
	0x03C5D6E4 ADD X0, X31, 0x0
	0x03C5D6E8 MOV X1, X19
	0x03C5D6EC BLR X8
	0x03C5D6F0 LDP X20, X19, [X31 + 0x30]
	0x03C5D6F4 LDR X30, [X31 + 0x20]
	0x03C5D6F8 AND W0, W0, 0x1
	0x03C5D6FC ADD X31, X31, 0x40
	0x03C5D700 RET
	0x03C5D704 STP X30, X19, [X31 - 0x10]!
	0x03C5D708 ADRP X19, 0x789000
	0x03C5D70C LDR X0, [X19 + 0x218]
	0x03C5D710 CBNZ X0, 0x3C5D724
	0x03C5D714 ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C5D718 ADD X0, X0, 0xF94
	0x03C5D71C BL 0x1C16CB8
	0x03C5D720 STR X0, [X19 + 0x218]
	0x03C5D724 LDP X30, X19, [X31], #0x10
	0x03C5D728 BR X0
	0x03C5D72C STR X30, [X31 - 0x20]!
	0x03C5D730 STP X20, X19, [X31 + 0x10]
	0x03C5D734 ADRP X20, 0x789000
	0x03C5D738 LDR X1, [X20 + 0x220]
	0x03C5D73C MOV W19, W0
	0x03C5D740 CBNZ X1, 0x3C5D758
	0x03C5D744 ADRP X0, 0xFFFFFFFFFCEA8000
	0x03C5D748 ADD X0, X0, 0x56D
	0x03C5D74C BL 0x1C16CB8
	0x03C5D750 MOV X1, X0
	0x03C5D754 STR X0, [X20 + 0x220]
	0x03C5D758 MOV W0, W19
	0x03C5D75C LDP X20, X19, [X31 + 0x10]
	0x03C5D760 LDR X30, [X31], #0x20
	0x03C5D764 BR X1
	0x03C5D768 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x78A000
	006 Move W8, [X21+431]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x503000
	014 Move X0, [X0+3912]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+431], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X21, 0x503000
	021 Move X21, [X21+3912]
	022 Move X8, [X19]
	023 Move X0, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfEqual {30}
	029 Move X1, X0
	030 Call 0x1C17DFC
	031 Move X1, [X21]
	032 Move X0, [X19]
	033 Move X8, [X0+64]
	034 Move X9, [X1+64]
	035 Move X0, X19
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Call 0x1C17E08
	038 Move W8, [X0]
	039 Move W9, [X20]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C181E0

Method: System.Boolean Equals(UnityEngine.Rendering.BatchMaterialID other)

Disassembly:
	0x03C5D76C STP X20, X19, [X31 + 0x10]
	0x03C5D770 ADRP X20, 0x789000
	0x03C5D774 LDR X1, [X20 + 0x228]
	0x03C5D778 MOV X19, X0

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03C5D77C CBNZ X1, 0x3C5D794
	0x03C5D780 ADRP X0, 0xFFFFFFFFFCEA4000
	0x03C5D784 ADD X0, X0, 0x4A4
	0x03C5D788 BL 0x1C16CB8
	0x03C5D78C MOV X1, X0
	0x03C5D790 STR X0, [X20 + 0x228]
	0x03C5D794 MOV X0, X19
	0x03C5D798 LDP X20, X19, [X31 + 0x10]
	0x03C5D79C LDR X30, [X31], #0x20
	0x03C5D7A0 BR X1
	0x03C5D7A4 STR X30, [X31 - 0x20]!
	0x03C5D7A8 STP X20, X19, [X31 + 0x10]
	0x03C5D7AC ADRP X20, 0x789000
	0x03C5D7B0 LDR X1, [X20 + 0x230]
	0x03C5D7B4 MOV X19, X0
	0x03C5D7B8 CBNZ X1, 0x3C5D7D0
	0x03C5D7BC ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C5D7C0 ADD X0, X0, 0x795

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x78A000
	005 Move X20, 0x503000
	006 Move W8, [X19+432]
	007 Move X20, [X20+3912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x503000
	013 Move X0, [X0+3912]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+432], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8], W31
	022 Move X30, [X31+32]
	023 Return 

