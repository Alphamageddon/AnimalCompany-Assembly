Type: UnityEngine.Rendering.BatchID

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C5D5B4 LDR X2, [X21 + 0x210]
	0x03C5D5B8 MOV X19, X1

ISIL:
	001 Move X1, X31
	002 Call UInt32.GetHashCode, X0
	003 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C5D5BC MOV X20, X0
	0x03C5D5C0 CBNZ X2, 0x3C5D5D8
	0x03C5D5C4 ADRP X0, 0xFFFFFFFFFCEBE000
	0x03C5D5C8 ADD X0, X0, 0x9F
	0x03C5D5CC BL 0x1C16CB8
	0x03C5D5D0 MOV X2, X0
	0x03C5D5D4 STR X0, [X21 + 0x210]
	0x03C5D5D8 MOV X0, X20
	0x03C5D5DC MOV X1, X19
	0x03C5D5E0 LDP X20, X19, [X31 + 0x10]
	0x03C5D5E4 LDP X30, X21, [X31], #0x20
	0x03C5D5E8 BR X2
	0x03C5D5EC STP X30, X21, [X31 - 0x20]!
	0x03C5D5F0 STP X20, X19, [X31 + 0x10]
	0x03C5D5F4 ADRP X21, 0x789000
	0x03C5D5F8 LDRB W8, [X21 + 0x208]
	0x03C5D5FC MOV X19, X2
	0x03C5D600 MOV X20, X0
	0x03C5D604 TBNZ X8, 0x0, 0x3C5D628
	0x03C5D608 ADRP X0, 0x4BE000
	0x03C5D60C LDR X0, [X0 + 0x7F0]
	0x03C5D610 BL 0x1C16CF4
	0x03C5D614 ADRP X0, 0x502000
	0x03C5D618 LDR X0, [X0 + 0xFA0]
	0x03C5D61C BL 0x1C16CF4
	0x03C5D620 MOVZ W8, 0x1
	0x03C5D624 STRB W8, [X21 + 0x208]
	0x03C5D628 TBNZ X19, 0x0, 0x3C5D638
	0x03C5D62C LDP X20, X19, [X31 + 0x10]
	0x03C5D630 LDP X30, X21, [X31], #0x20
	0x03C5D634 RET
	0x03C5D638 LDR X0, [X20 + 0x8]
	0x03C5D63C MOV X1, X31
	0x03C5D640 MOV X2, X31
	0x03C5D644 BL 0x33C5D2C
	0x03C5D648 ADRP X8, 0x4BE000
	0x03C5D64C LDR X8, [X8 + 0x7F0]
	0x03C5D650 TBZ X0, 0x0, 0x3C5D670
	0x03C5D654 LDR X0, [X8]
	0x03C5D658 LDR W8, [X0 + 0xE0]
	0x03C5D65C CBNZ W8, 0x3C5D664
	0x03C5D660 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x78A000
	006 Move W8, [X21+429]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x503000
	014 Move X0, [X0+3904]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+429], W8
	018 Compare X19, 0
	019 JumpIfEqual {25}
	020 Move X21, 0x503000
	021 Move X21, [X21+3904]
	022 Move X8, [X19]
	023 Move X0, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfEqual {30}
	029 Move X1, X0
	030 Call 0x1C17DFC
	031 Move X1, [X21]
	032 Move X0, [X19]
	033 Move X8, [X0+64]
	034 Move X9, [X1+64]
	035 Move X0, X19
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Call 0x1C17E08
	038 Move W8, [X0]
	039 Move W9, [X20]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSET not yet implemented."
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C181E0

Method: System.Boolean Equals(UnityEngine.Rendering.BatchID other)

Disassembly:
	0x03C5D664 ANDS X31, X19, 0x1FFFFFFFFFF
	0x03C5D668 CSET W19, EQ
	0x03C5D66C B 0x3C5D684
	0x03C5D670 LDR X0, [X8]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03C5D674 UBFM X19, X19, 0x28, 0x28
	0x03C5D678 LDR W8, [X0 + 0xE0]
	0x03C5D67C CBNZ W8, 0x3C5D684
	0x03C5D680 BL 0x1C16DFC
	0x03C5D684 ADRP X8, 0x502000
	0x03C5D688 LDR X8, [X8 + 0xFA0]
	0x03C5D68C MOV W0, W19
	0x03C5D690 LDP X20, X19, [X31 + 0x10]
	0x03C5D694 MOV X2, X31
	0x03C5D698 LDR X1, [X8]
	0x03C5D69C LDP X30, X21, [X31], #0x20
	0x03C5D6A0 B 0x3C62124
	0x03C5D6A4 SUB X31, X31, 0x40
	0x03C5D6A8 STR X30, [X31 + 0x20]
	0x03C5D6AC STP X20, X19, [X31 + 0x30]
	0x03C5D6B0 MOV X19, X1
	0x03C5D6B4 MOV X20, X0
	0x03C5D6B8 BL 0x3C5D5EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x78A000
	005 Move X20, 0x503000
	006 Move W8, [X19+430]
	007 Move X20, [X20+3904]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x503000
	013 Move X0, [X0+3904]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+430], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8], W31
	022 Move X30, [X31+32]
	023 Return 

