Type: UnityEngine.Rendering.RenderTargetBlendState

Method: UnityEngine.Rendering.RenderTargetBlendState get_defaultValue()

Disassembly:
	0x03C51CB4 ADD X0, X31, 0x0
	0x03C51CB8 MOV X1, X31
	0x03C51CBC STP S0, S1, [X31 + 0x10]

ISIL:
	001 Move W0, 271
	002 NotImplemented "Instruction MOVK not yet implemented."
	003 Return X0

Method: System.Void .ctor(UnityEngine.Rendering.ColorWriteMask writeMask = 15, UnityEngine.Rendering.BlendMode sourceColorBlendMode = 1, UnityEngine.Rendering.BlendMode destinationColorBlendMode = 0, UnityEngine.Rendering.BlendMode sourceAlphaBlendMode = 1, UnityEngine.Rendering.BlendMode destinationAlphaBlendMode = 0, UnityEngine.Rendering.BlendOp colorBlendOperation = 0, UnityEngine.Rendering.BlendOp alphaBlendOperation = 0)

Disassembly:
	0x03C577E4 MOV X2, X0
	0x03C577E8 STR X0, [X21 + 0xC8]
	0x03C577EC MOV X0, X20
	0x03C577F0 MOV X1, X19
	0x03C577F4 LDP X20, X19, [X31 + 0x10]
	0x03C577F8 LDP X30, X21, [X31], #0x20
	0x03C577FC BR X2
	0x03C57800 STP X30, X21, [X31 - 0x20]!
	0x03C57804 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X0], W1
	002 Move [X0+1], W2
	003 Move [X0+2], W3
	004 Move [X0+3], W4
	005 Move [X0+4], W5
	006 Move [X0+5], W6
	007 Move [X0+6], W7
	008 Move [X0+7], W31
	009 Return 

Method: System.Boolean Equals(UnityEngine.Rendering.RenderTargetBlendState other)

Disassembly:
	0x03C51D88 MOV X1, X31
	0x03C51D8C BL 0x338FE0C
	0x03C51D90 MUL W8, W20, W22
	0x03C51D94 ADD X23, X23, 0x4
	0x03C51D98 CMP X23, 0x80
	0x03C51D9C EOR W20, W0, W8, 0x0
	0x03C51DA0 B.NE 0x3C51D84
	0x03C51DA4 LDR W8, [X19 + 0x3C4]
	0x03C51DA8 MOVZ W9, 0x18D
	0x03C51DAC LDR W10, [X19 + 0x3C8]
	0x03C51DB0 LDR W11, [X19 + 0x3CC]
	0x03C51DB4 MUL W12, W20, W9
	0x03C51DB8 EOR W8, W8, W12, 0x0
	0x03C51DBC LDR W12, [X19 + 0x3D0]
	0x03C51DC0 MUL W10, W10, W9
	0x03C51DC4 EOR W10, W10, W11, 0x0
	0x03C51DC8 MUL W8, W8, W9
	0x03C51DCC LDR W11, [X19 + 0x3D4]
	0x03C51DD0 EOR W8, W12, W8, 0x0
	0x03C51DD4 MUL W10, W10, W9
	0x03C51DD8 EOR W8, W8, W10, 0x0
	0x03C51DDC LDR W10, [X19 + 0x3D8]
	0x03C51DE0 MUL W8, W8, W9
	0x03C51DE4 EOR W8, W8, W11, 0x0
	0x03C51DE8 LDR W11, [X19 + 0x3DC]
	0x03C51DEC MUL W8, W8, W9
	0x03C51DF0 LDP X20, X19, [X31 + 0x50]
	0x03C51DF4 LDP X22, X21, [X31 + 0x40]
	0x03C51DF8 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+1]
	004 Move X9, X1
	005 ShiftRight X9, 8
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, [X0+2]
	009 Move X9, X1
	010 ShiftRight X9, 16
	011 And X9, X9, 0x7FFFFFFF
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move W8, [X0+3]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W8, [X0+4]
	016 Move X9, X1
	017 ShiftRight X9, 32
	018 And X9, X9, 0x7FFFFFFF
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W8, [X0+5]
	021 Move X9, X1
	022 ShiftRight X9, 40
	023 And X9, X9, 0x7FFFFFFF
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X0+6]
	026 Move X9, X1
	027 ShiftRight X9, 48
	028 And X9, X9, 0x7FFFFFFF
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Return X0
	032 Move W0, W31
	033 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C57808 ADRP X20, 0x78F000
	0x03C5780C ADRP X21, 0x4F9000
	0x03C57810 LDRB W8, [X20 + 0xD0]
	0x03C57814 LDR X21, [X21 + 0xC80]
	0x03C57818 MOV X19, X0
	0x03C5781C TBNZ X8, 0x0, 0x3C57834
	0x03C57820 ADRP X0, 0x4F9000
	0x03C57824 LDR X0, [X0 + 0xC80]
	0x03C57828 BL 0x1C16CF4
	0x03C5782C MOVZ W8, 0x1
	0x03C57830 STRB W8, [X20 + 0xD0]
	0x03C57834 LDR X0, [X21]
	0x03C57838 LDR W8, [X0 + 0xE0]
	0x03C5783C CBNZ W8, 0x3C57844
	0x03C57840 BL 0x1C16DFC
	0x03C57844 ADRP X20, 0x78F000
	0x03C57848 LDR X1, [X20 + 0x110]
	0x03C5784C CBNZ X1, 0x3C57864
	0x03C57850 ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C57854 ADD X0, X0, 0x7B9
	0x03C57858 BL 0x1C16CB8
	0x03C5785C MOV X1, X0
	0x03C57860 STR X0, [X20 + 0x110]
	0x03C57864 MOV X0, X19
	0x03C57868 LDP X20, X19, [X31 + 0x10]
	0x03C5786C LDP X30, X21, [X31], #0x20
	0x03C57870 BR X1
	0x03C57874 STR X30, [X31 - 0x20]!
	0x03C57878 STP X20, X19, [X31 + 0x10]
	0x03C5787C ADRP X20, 0x78F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x790000
	006 Move W8, [X21+132]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x509000
	014 Move X0, [X0+3560]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+132], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x509000
	021 Move X8, [X8+3560]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move X1, [X0]
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call RenderTargetBlendState.Equals, X0, X1
	040 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C51F48 RET
	0x03C51F4C STR W1, [X31 + 0xC]
	0x03C51F50 ADRP X19, 0x4A2000
	0x03C51F54 LDR X19, [X19 + 0x758]
	0x03C51F58 MOV X0, X19
	0x03C51F5C BL 0x1C16D08
	0x03C51F60 ADD X1, X31, 0xC
	0x03C51F64 BL 0x1C16E04
	0x03C51F68 MOV X20, X0
	0x03C51F6C MOVZ W8, 0x20
	0x03C51F70 MOV X0, X19
	0x03C51F74 STR W8, [X31 + 0x8]
	0x03C51F78 BL 0x1C16D08
	0x03C51F7C ADD X1, X31, 0x8
	0x03C51F80 BL 0x1C16E04
	0x03C51F84 MOV X19, X0
	0x03C51F88 ADRP X0, 0x50E000
	0x03C51F8C LDR X0, [X0 + 0xD10]
	0x03C51F90 BL 0x1C16D08
	0x03C51F94 MOV X21, X0
	0x03C51F98 ADRP X0, 0x50E000
	0x03C51F9C LDR X0, [X0 + 0xD38]
	0x03C51FA0 BL 0x1C16D08
	0x03C51FA4 MOV X1, X0
	0x03C51FA8 MOV X0, X21
	0x03C51FAC MOV X2, X20
	0x03C51FB0 MOV X3, X19
	0x03C51FB4 MOV X4, X31
	0x03C51FB8 BL 0x3227C18
	0x03C51FBC MOV X19, X0
	0x03C51FC0 ADRP X0, 0x4AA000
	0x03C51FC4 LDR X0, [X0 + 0x760]
	0x03C51FC8 BL 0x1C16D08
	0x03C51FCC BL 0x1C16F10
	0x03C51FD0 MOV X1, X19
	0x03C51FD4 MOV X2, X31
	0x03C51FD8 MOV X20, X0
	0x03C51FDC BL 0x3316014
	0x03C51FE0 ADRP X0, 0x50E000
	0x03C51FE4 LDR X0, [X0 + 0xD40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X1, X31
	006 Move X19, X0
	007 Call Byte.GetHashCode, X0
	008 Move W20, W0
	009 Add X0, X19, 1
	010 Move X1, X31
	011 Call Byte.GetHashCode, X0
	012 Move W21, 397
	013 Multiply W8, W20, W21
	014 Xor W20, W8, W0
	015 Add X0, X19, 2
	016 Move X1, X31
	017 Call Byte.GetHashCode, X0
	018 Multiply W8, W20, W21
	019 Xor W20, W8, W0
	020 Add X0, X19, 3
	021 Move X1, X31
	022 Call Byte.GetHashCode, X0
	023 Multiply W8, W20, W21
	024 Xor W20, W8, W0
	025 Add X0, X19, 4
	026 Move X1, X31
	027 Call Byte.GetHashCode, X0
	028 Multiply W8, W20, W21
	029 Xor W20, W8, W0
	030 Add X0, X19, 5
	031 Move X1, X31
	032 Call Byte.GetHashCode, X0
	033 Multiply W8, W20, W21
	034 Xor W20, W8, W0
	035 Add X0, X19, 6
	036 Move X1, X31
	037 Call Byte.GetHashCode, X0
	038 Multiply W8, W20, W21
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Xor W0, W8, W0
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0

