Type: UnityEngine.Rendering.RasterState

Method: System.Void .ctor(UnityEngine.Rendering.CullMode cullingMode = 2, System.Int32 offsetUnits = 0, System.Single offsetFactor = 0, System.Boolean depthClip = True)

Disassembly:
	0x03C5530C RET
	0x03C55310 BL 0x1C16F20
	0x03C55314 STR X30, [X31 - 0x20]!
	0x03C55318 STP X20, X19, [X31 + 0x10]
	0x03C5531C ADRP X19, 0x791000
	0x03C55320 ADRP X20, 0x4FF000
	0x03C55324 LDRB W8, [X19 + 0x69]
	0x03C55328 LDR X20, [X20 + 0x50]
	0x03C5532C TBNZ X8, 0x0, 0x3C55344
	0x03C55330 ADRP X0, 0x4FF000
	0x03C55334 LDR X0, [X0 + 0x50]
	0x03C55338 BL 0x1C16CF4
	0x03C5533C MOVZ W8, 0x1
	0x03C55340 STRB W8, [X19 + 0x69]
	0x03C55344 LDR X0, [X20]
	0x03C55348 LDR W8, [X0 + 0xE0]
	0x03C5534C CBNZ W8, 0x3C55354
	0x03C55350 BL 0x1C16DFC
	0x03C55354 LDP X20, X19, [X31 + 0x10]
	0x03C55358 LDR X30, [X31], #0x20
	0x03C5535C B 0x3C550AC
	0x03C55360 MOV X1, X31
	0x03C55364 B 0x3C36D2C
	0x03C55368 MOV X1, X31
	0x03C5536C B 0x3C36D2C
	0x03C55370 STR X30, [X31 - 0x20]!
	0x03C55374 STP X20, X19, [X31 + 0x10]
	0x03C55378 ADRP X20, 0x791000
	0x03C5537C ADRP X19, 0x4FF000
	0x03C55380 LDRB W8, [X20 + 0x6A]
	0x03C55384 LDR X19, [X19 + 0x50]
	0x03C55388 TBNZ X8, 0x0, 0x3C553A0
	0x03C5538C ADRP X0, 0x4FF000
	0x03C55390 LDR X0, [X0 + 0x50]
	0x03C55394 BL 0x1C16CF4
	0x03C55398 MOVZ W8, 0x1
	0x03C5539C STRB W8, [X20 + 0x6A]
	0x03C553A0 LDR X0, [X19]
	0x03C553A4 LDR W8, [X0 + 0xE0]
	0x03C553A8 CBNZ W8, 0x3C553B4
	0x03C553AC BL 0x1C16DFC

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x792000
	010 Move X23, 0x4A8000
	011 Move W8, [X24+94]
	012 Move X23, [X23+2536]
	013 Move W20, W3
	014 Move V8, V0
	015 Move W21, W2
	016 Move W22, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x4A8000
	023 Move X0, [X0+2536]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+94], W8
	027 Move [X19], W22
	028 Move [X19+4], W21
	029 Move [X19+8], S8
	030 Move X0, [X23]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 And W0, W20, 1
	036 Move X1, X31
	037 Call Convert.ToByte, X0
	038 Move [X19+12], W0
	039 Move W0, W31
	040 Move X1, X31
	041 Call Convert.ToByte, X0
	042 Move [X19+13], W0
	043 NotImplemented "Instruction STRH not yet implemented."
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+8]
	051 Move V8, [X31+64]
	052 Return 

Method: System.Boolean Equals(UnityEngine.Rendering.RasterState other)

Disassembly:
	0x03C553B0 LDR X0, [X19]
	0x03C553B4 LDR X8, [X0 + 0xB8]
	0x03C553B8 LDP X20, X19, [X31 + 0x10]
	0x03C553BC LDR X0, [X8 + 0x18]
	0x03C553C0 LDR X30, [X31], #0x20
	0x03C553C4 RET
	0x03C553C8 STP X30, X21, [X31 - 0x20]!
	0x03C553CC STP X20, X19, [X31 + 0x10]
	0x03C553D0 ADRP X20, 0x791000
	0x03C553D4 LDRB W8, [X20 + 0x6B]
	0x03C553D8 MOV X19, X0
	0x03C553DC TBNZ X8, 0x0, 0x3C55400
	0x03C553E0 ADRP X0, 0x4FF000
	0x03C553E4 LDR X0, [X0 + 0x50]
	0x03C553E8 BL 0x1C16CF4
	0x03C553EC ADRP X0, 0x50A000
	0x03C553F0 LDR X0, [X0 + 0xDD0]
	0x03C553F4 BL 0x1C16CF4
	0x03C553F8 MOVZ W8, 0x1
	0x03C553FC STRB W8, [X20 + 0x6B]
	0x03C55400 CBZ X19, 0x3C55428
	0x03C55404 MOV X0, X19
	0x03C55408 MOV X1, X31
	0x03C5540C BL 0x33BE520
	0x03C55410 CBZ X0, 0x3C55464
	0x03C55414 LDR X8, [X0]
	0x03C55418 LDP X9, X1, [X8 + 0x168]
	0x03C5541C BLR X9
	0x03C55420 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, [X0+4]
	007 Move X9, X1
	008 ShiftRight X9, 32
	009 And X9, X9, 0x7FFFFFFF
	010 Move X19, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X20, X2
	013 Add X0, X19, 8
	014 Move S0, W20
	015 Move X1, X31
	016 Call Single.Equals, X0, V0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {32}
	021 Move W8, [X19+12]
	022 Move X9, X20
	023 ShiftRight X9, 32
	024 And X9, X9, 0x7FFFFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, [X19+13]
	027 Move X9, X20
	028 ShiftRight X9, 40
	029 And X9, X9, 0x7FFFFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move W0, W31
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C55424 B 0x3C55434
	0x03C55428 ADRP X8, 0x50A000
	0x03C5542C LDR X8, [X8 + 0xDD0]
	0x03C55430 LDR X20, [X8]
	0x03C55434 ADRP X21, 0x4FF000
	0x03C55438 LDR X21, [X21 + 0x50]
	0x03C5543C LDR X0, [X21]
	0x03C55440 LDR W8, [X0 + 0xE0]
	0x03C55444 CBNZ W8, 0x3C55450
	0x03C55448 BL 0x1C16DFC
	0x03C5544C LDR X0, [X21]
	0x03C55450 LDR X8, [X0 + 0xB8]
	0x03C55454 STP X20, X19, [X8 + 0x10]
	0x03C55458 LDP X20, X19, [X31 + 0x10]
	0x03C5545C LDP X30, X21, [X31], #0x20
	0x03C55460 RET
	0x03C55464 BL 0x1C16F20
	0x03C55468 STP X30, X25, [X31 - 0x40]!
	0x03C5546C STP X24, X23, [X31 + 0x10]
	0x03C55470 STP X22, X21, [X31 + 0x20]
	0x03C55474 STP X20, X19, [X31 + 0x30]
	0x03C55478 ADRP X20, 0x791000
	0x03C5547C ADRP X24, 0x4FF000
	0x03C55480 LDRB W8, [X20 + 0x6C]
	0x03C55484 LDR X24, [X24 + 0x50]
	0x03C55488 MOV X19, X0
	0x03C5548C TBNZ X8, 0x0, 0x3C554B0
	0x03C55490 ADRP X0, 0x4FF000
	0x03C55494 LDR X0, [X0 + 0x40]
	0x03C55498 BL 0x1C16CF4
	0x03C5549C ADRP X0, 0x4FF000
	0x03C554A0 LDR X0, [X0 + 0x50]
	0x03C554A4 BL 0x1C16CF4
	0x03C554A8 MOVZ W8, 0x1
	0x03C554AC STRB W8, [X20 + 0x6C]
	0x03C554B0 LDR X0, [X24]
	0x03C554B4 LDR W8, [X0 + 0xE0]
	0x03C554B8 CBNZ W8, 0x3C554C4
	0x03C554BC BL 0x1C16DFC
	0x03C554C0 LDR X0, [X24]
	0x03C554C4 LDR X8, [X0 + 0xB8]
	0x03C554C8 ADRP X25, 0x4FF000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x792000
	006 Move W8, [X21+95]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x50B000
	014 Move X0, [X0+3504]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+95], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X21, 0x50B000
	021 Move X21, [X21+3504]
	022 Move X8, [X20]
	023 Move X0, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfEqual {35}
	034 Move X1, X0
	035 Call 0x1C17DFC
	036 Move X1, [X21]
	037 Move X0, [X20]
	038 Move X8, [X0+64]
	039 Move X9, [X1+64]
	040 Move X0, X20
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Call 0x1C17E08
	043 Move X1, [X0]
	044 Move X2, [X0+8]
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call RasterState.Equals, X0, X1
	051 Return X0
	052 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C554CC LDR X20, [X8 + 0x40]
	0x03C554D0 LDR X25, [X25 + 0x40]
	0x03C554D4 MOV X0, X20
	0x03C554D8 MOV X1, X19
	0x03C554DC MOV X2, X31
	0x03C554E0 BL 0x33C0DE4
	0x03C554E4 CBZ X0, 0x3C55504
	0x03C554E8 LDR X23, [X25]
	0x03C554EC MOV X22, X0
	0x03C554F0 MOV X1, X23
	0x03C554F4 BL 0x1C16E00
	0x03C554F8 MOV X21, X0
	0x03C554FC CBNZ X0, 0x3C55508
	0x03C55500 B 0x3C55550
	0x03C55504 MOV X21, X31
	0x03C55508 LDR X0, [X24]
	0x03C5550C LDR W8, [X0 + 0xE0]
	0x03C55510 CBNZ W8, 0x3C5551C
	0x03C55514 BL 0x1C16DFC
	0x03C55518 LDR X0, [X24]
	0x03C5551C LDR X8, [X0 + 0xB8]
	0x03C55520 MOV X1, X21
	0x03C55524 MOV X2, X20
	0x03C55528 ADD X0, X8, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move W8, [X0+8]
	007 Move W9, [X0+12]
	008 Move W20, 397
	009 Move X1, X31
	010 Multiply W8, W8, W20
	011 Xor W21, W8, W9
	012 Call Single.GetHashCode, X0
	013 Multiply W8, W21, W20
	014 Xor W21, W8, W0
	015 Add X0, X19, 12
	016 Move X1, X31
	017 Call Byte.GetHashCode, X0
	018 Multiply W8, W21, W20
	019 Xor W21, W8, W0
	020 Add X0, X19, 13
	021 Move X1, X31
	022 Call Byte.GetHashCode, X0
	023 Multiply W8, W21, W20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Xor W0, W8, W0
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03C5552C BL 0x1C24138
	0x03C55530 CMP X20, X0
	0x03C55534 MOV X20, X0
	0x03C55538 B.NE 0x3C554D4
	0x03C5553C LDP X20, X19, [X31 + 0x30]
	0x03C55540 LDP X22, X21, [X31 + 0x20]
	0x03C55544 LDP X24, X23, [X31 + 0x10]
	0x03C55548 LDP X30, X25, [X31], #0x40
	0x03C5554C RET
	0x03C55550 MOV X0, X22
	0x03C55554 MOV X1, X23
	0x03C55558 BL 0x1C171E0
	0x03C5555C STP X30, X25, [X31 - 0x40]!
	0x03C55560 STP X24, X23, [X31 + 0x10]
	0x03C55564 STP X22, X21, [X31 + 0x20]
	0x03C55568 STP X20, X19, [X31 + 0x30]
	0x03C5556C ADRP X20, 0x791000
	0x03C55570 ADRP X24, 0x4FF000
	0x03C55574 LDRB W8, [X20 + 0x6D]
	0x03C55578 LDR X24, [X24 + 0x50]
	0x03C5557C MOV X19, X0
	0x03C55580 TBNZ X8, 0x0, 0x3C555A4
	0x03C55584 ADRP X0, 0x4FF000
	0x03C55588 LDR X0, [X0 + 0x40]
	0x03C5558C BL 0x1C16CF4
	0x03C55590 ADRP X0, 0x4FF000
	0x03C55594 LDR X0, [X0 + 0x50]
	0x03C55598 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x792000
	006 Move X19, 0x50B000
	007 Move W8, [X20+96]
	008 Move X19, [X19+3504]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x50B000
	014 Move X0, [X0+3504]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+96], W8
	018 Add X0, X31, 0
	019 Move S0, W31
	020 Move W1, 2
	021 Move W3, 1
	022 Move W2, W31
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Call RasterState..ctor, X0, X1, X2, V0, X3
	026 Move X8, [X19]
	027 Move V0, [X31]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X8, [X8+184]
	032 Move [X8], V0
	033 Add X31, X31, 48
	034 Return 

