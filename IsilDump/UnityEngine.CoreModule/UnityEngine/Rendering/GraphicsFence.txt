Type: UnityEngine.Rendering.GraphicsFence

Method: UnityEngine.Rendering.SynchronisationStageFlags TranslateSynchronizationStageToFlags(UnityEngine.Rendering.SynchronisationStage s)

Disassembly:
	0x03C4C73C STP X30, X21, [X31 - 0x20]!
	0x03C4C740 STP X20, X19, [X31 + 0x10]
	0x03C4C744 ADRP X21, 0x799000
	0x03C4C748 LDR X2, [X21 + 0xF70]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 1
	003 NotImplemented "Instruction CINC not yet implemented."
	004 Return X0

Method: System.Void InitPostAllocation()

Disassembly:
	0x03C4C74C MOV X19, X1
	0x03C4C750 MOV X20, X0
	0x03C4C754 CBNZ X2, 0x3C4C76C
	0x03C4C758 ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C4C75C ADD X0, X0, 0x48B
	0x03C4C760 BL 0x1C16CB8
	0x03C4C764 MOV X2, X0
	0x03C4C768 STR X0, [X21 + 0xF70]
	0x03C4C76C MOV X0, X20
	0x03C4C770 MOV X1, X19
	0x03C4C774 LDP X20, X19, [X31 + 0x10]
	0x03C4C778 LDP X30, X21, [X31], #0x20
	0x03C4C77C BR X2
	0x03C4C780 STR X30, [X31 - 0x30]!
	0x03C4C784 STP X22, X21, [X31 + 0x10]
	0x03C4C788 STP X20, X19, [X31 + 0x20]
	0x03C4C78C ADRP X22, 0x799000
	0x03C4C790 LDR X3, [X22 + 0xE50]
	0x03C4C794 MOV X19, X2
	0x03C4C798 MOV W20, W1
	0x03C4C79C MOV X21, X0
	0x03C4C7A0 CBNZ X3, 0x3C4C7B8
	0x03C4C7A4 ADRP X0, 0xFFFFFFFFFCEB5000
	0x03C4C7A8 ADD X0, X0, 0x311
	0x03C4C7AC BL 0x1C16CB8
	0x03C4C7B0 MOV X3, X0
	0x03C4C7B4 STR X0, [X22 + 0xE50]
	0x03C4C7B8 MOV X0, X21
	0x03C4C7BC MOV W1, W20
	0x03C4C7C0 MOV X2, X19
	0x03C4C7C4 LDP X20, X19, [X31 + 0x20]
	0x03C4C7C8 LDP X22, X21, [X31 + 0x10]
	0x03C4C7CC LDR X30, [X31], #0x30
	0x03C4C7D0 BR X3
	0x03C4C7D4 STP X30, X23, [X31 - 0x30]!
	0x03C4C7D8 STP X22, X21, [X31 + 0x10]
	0x03C4C7DC STP X20, X19, [X31 + 0x20]
	0x03C4C7E0 ADRP X23, 0x799000
	0x03C4C7E4 LDR X4, [X23 + 0xE58]
	0x03C4C7E8 MOV W21, W3
	0x03C4C7EC MOV X19, X2
	0x03C4C7F0 MOV W20, W1
	0x03C4C7F4 MOV X22, X0
	0x03C4C7F8 CBNZ X4, 0x3C4C810
	0x03C4C7FC ADRP X0, 0xFFFFFFFFFCEBF000
	0x03C4C800 ADD X0, X0, 0x69D

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move X1, X31
	008 Move X2, X31
	009 Call IntPtr.op_Equality, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {23}
	014 Move X0, X31
	015 Call SystemInfo.get_supportsGraphicsFence
	016 Move TEMP, X0
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {41}
	020 Move TEMP, 0
	021 Not TEMP
	022 Move W0, TEMP
	023 Move X21, 0x79A000
	024 Move X8, [X21+3424]
	025 Move X20, [X19]
	026 Compare X8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -51707904
	029 Add X0, X0, 1391
	030 Call 0x1C17CB8
	031 Move X8, X0
	032 Move [X21+3424], X0
	033 Move X0, X20
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move [X19+8], W0
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Move X0, 0x4B3000
	042 Move X0, [X0+2584]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X19, X0
	046 Move X0, 0x514000
	047 Move X0, [X0+3064]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Move X2, X31
	052 Call NullReferenceException..ctor, X0, X1
	053 Move X0, 0x514000
	054 Move X0, [X0+3072]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Call 0x1C17DEC

Method: System.Boolean IsFencePending()

Disassembly:
	0x03C4C848 ADRP X0, 0xFFFFFFFFFCED2000
	0x03C4C84C ADD X0, X0, 0xFB2
	0x03C4C850 BL 0x1C16CB8
	0x03C4C854 MOV X1, X0
	0x03C4C858 STR X0, [X20 + 0xE60]
	0x03C4C85C MOV X0, X19
	0x03C4C860 LDP X20, X19, [X31 + 0x10]
	0x03C4C864 LDR X30, [X31], #0x20
	0x03C4C868 BR X1
	0x03C4C86C SUB X31, X31, 0x30
	0x03C4C870 STR X30, [X31 + 0x10]
	0x03C4C874 STP X20, X19, [X31 + 0x20]
	0x03C4C878 ADRP X20, 0x799000
	0x03C4C87C LDR X8, [X20 + 0xF78]
	0x03C4C880 MOV X19, X0
	0x03C4C884 STP S0, S1, [X31]
	0x03C4C888 STP S2, S3, [X31 + 0x8]
	0x03C4C88C CBNZ X8, 0x3C4C8A4
	0x03C4C890 ADRP X0, 0xFFFFFFFFFCEBD000
	0x03C4C894 ADD X0, X0, 0x820
	0x03C4C898 BL 0x1C16CB8
	0x03C4C89C MOV X8, X0
	0x03C4C8A0 STR X0, [X20 + 0xF78]
	0x03C4C8A4 ADD X1, X31, 0x0
	0x03C4C8A8 MOV X0, X19
	0x03C4C8AC BLR X8
	0x03C4C8B0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move X1, X31
	008 Move X2, X31
	009 Call IntPtr.op_Equality, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {15}
	014 Move W0, W31
	015 Move X21, 0x79A000
	016 Move W20, [X19+8]
	017 Move X8, [X21+3424]
	018 Move X19, [X19]
	019 Compare X8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51707904
	022 Add X0, X0, 1391
	023 Call 0x1C17CB8
	024 Move X8, X0
	025 Move [X21+3424], X0
	026 Move X0, X19
	027 NotImplemented "Instruction BLR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Void Validate()

Disassembly:
	0x03C4C8B4 LDR X30, [X31 + 0x10]
	0x03C4C8B8 ADD X31, X31, 0x30
	0x03C4C8BC RET
	0x03C4C8C0 STP X30, X21, [X31 - 0x20]!
	0x03C4C8C4 STP X20, X19, [X31 + 0x10]
	0x03C4C8C8 ADRP X21, 0x799000
	0x03C4C8CC LDR X2, [X21 + 0xF78]
	0x03C4C8D0 MOV X19, X1
	0x03C4C8D4 MOV X20, X0
	0x03C4C8D8 CBNZ X2, 0x3C4C8F0
	0x03C4C8DC ADRP X0, 0xFFFFFFFFFCEBD000
	0x03C4C8E0 ADD X0, X0, 0x820
	0x03C4C8E4 BL 0x1C16CB8
	0x03C4C8E8 MOV X2, X0
	0x03C4C8EC STR X0, [X21 + 0xF78]
	0x03C4C8F0 MOV X0, X20
	0x03C4C8F4 MOV X1, X19
	0x03C4C8F8 LDP X20, X19, [X31 + 0x10]
	0x03C4C8FC LDP X30, X21, [X31], #0x20
	0x03C4C900 BR X2
	0x03C4C904 STR X30, [X31 - 0x20]!
	0x03C4C908 STP X20, X19, [X31 + 0x10]
	0x03C4C90C ADRP X20, 0x799000
	0x03C4C910 LDR X1, [X20 + 0xE68]
	0x03C4C914 MOV X19, X0
	0x03C4C918 CBNZ X1, 0x3C4C930
	0x03C4C91C ADRP X0, 0xFFFFFFFFFCEB3000
	0x03C4C920 ADD X0, X0, 0x61E
	0x03C4C924 BL 0x1C16CB8
	0x03C4C928 MOV X1, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+8]
	004 Compare W8, 0
	005 JumpIfEqual {18}
	006 Move X19, X0
	007 Move X0, X31
	008 Call SystemInfo.get_supportsGraphicsFence
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {15}
	013 Move W8, [X19+8]
	014 Add W31, W8, 1
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 
	018 Move X0, 0x4A8000
	019 Move X0, [X0+1456]
	020 Call 0x1C17D08
	021 Call 0x1C17F10
	022 Move X19, X0
	023 Move X0, 0x514000
	024 Move X0, [X0+3080]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Move X2, X31
	029 Call InvalidOperationException..ctor, X0, X1
	030 Move X0, 0x514000
	031 Move X0, [X0+3088]
	032 Call 0x1C17D08
	033 Move X1, X0
	034 Move X0, X19
	035 Call 0x1C17DEC

Method: System.Int32 GetPlatformNotSupportedVersion()

Disassembly:
	0x03C4C804 BL 0x1C16CB8
	0x03C4C808 MOV X4, X0

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W0, TEMP
	004 Return X0

Method: System.Int32 GetVersionNumber(System.IntPtr fencePtr)

Disassembly:
	0x03C4C80C STR X0, [X23 + 0xE58]
	0x03C4C810 AND W3, W21, 0x1
	0x03C4C814 MOV X0, X22
	0x03C4C818 MOV W1, W20
	0x03C4C81C MOV X2, X19
	0x03C4C820 LDP X20, X19, [X31 + 0x20]
	0x03C4C824 LDP X22, X21, [X31 + 0x10]
	0x03C4C828 LDP X30, X23, [X31], #0x30
	0x03C4C82C BR X4
	0x03C4C830 STR X30, [X31 - 0x20]!
	0x03C4C834 STP X20, X19, [X31 + 0x10]
	0x03C4C838 ADRP X20, 0x799000
	0x03C4C83C LDR X1, [X20 + 0xE60]
	0x03C4C840 MOV X19, X0
	0x03C4C844 CBNZ X1, 0x3C4C85C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79A000
	005 Move X1, [X20+3424]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51707904
	010 Add X0, X0, 1391
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3424], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

