Type: UnityEngine.Rendering.RenderQueueRange

Method: UnityEngine.Rendering.RenderQueueRange get_all()

Disassembly:
	0x03C55008 MOV X19, X0
	0x03C5500C TBNZ X8, 0x0, 0x3C55030

ISIL:
	001 Move X0, 0x1388
	002 Return X0

Method: UnityEngine.Rendering.RenderQueueRange get_opaque()

Disassembly:
	0x03C570AC STR X8, [X31 + 0x468]
	0x03C570B0 LDRB W8, [X22 + 0x95]

ISIL:
	001 Move X0, 2500
	002 Return X0

Method: UnityEngine.Rendering.RenderQueueRange get_transparent()

Disassembly:
	0x03C570B4 TBNZ X8, 0x0, 0x3C57114
	0x03C570B8 ADRP X0, 0x4FD000
	0x03C570BC LDR X0, [X0 + 0xB8]

ISIL:
	001 Move X0, 2501
	002 NotImplemented "Instruction MOVK not yet implemented."
	003 Return X0

Method: System.Boolean Equals(UnityEngine.Rendering.RenderQueueRange other)

Disassembly:
	0x03C55100 CBNZ W8, 0x3C55118
	0x03C55104 ADRP X0, 0x4FF000
	0x03C55108 LDR X0, [X0 + 0x50]
	0x03C5510C BL 0x1C16CF4
	0x03C55110 MOVZ W8, 0x1
	0x03C55114 STRB W8, [X20 + 0x300]
	0x03C55118 LDR X0, [X19]
	0x03C5511C LDR W8, [X0 + 0xE0]
	0x03C55120 CBNZ W8, 0x3C5512C
	0x03C55124 BL 0x1C16DFC

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, [X0+4]
	004 Move X9, X1
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0
	010 Move W0, W31
	011 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C570C0 BL 0x1C16CF4
	0x03C570C4 ADRP X0, 0x508000
	0x03C570C8 LDR X0, [X0 + 0xE48]
	0x03C570CC BL 0x1C16CF4
	0x03C570D0 ADRP X0, 0x508000
	0x03C570D4 LDR X0, [X0 + 0xE50]
	0x03C570D8 BL 0x1C16CF4
	0x03C570DC ADRP X0, 0x508000
	0x03C570E0 LDR X0, [X0 + 0xE58]
	0x03C570E4 BL 0x1C16CF4
	0x03C570E8 ADRP X0, 0x508000
	0x03C570EC LDR X0, [X0 + 0xE60]
	0x03C570F0 BL 0x1C16CF4
	0x03C570F4 ADRP X0, 0x508000
	0x03C570F8 LDR X0, [X0 + 0xDF0]
	0x03C570FC BL 0x1C16CF4
	0x03C57100 ADRP X0, 0x508000
	0x03C57104 LDR X0, [X0 + 0xE08]
	0x03C57108 BL 0x1C16CF4
	0x03C5710C MOVZ W8, 0x1
	0x03C57110 STRB W8, [X22 + 0x95]
	0x03C57114 LDP X8, X9, [X20]
	0x03C57118 LDP X1, X2, [X19]
	0x03C5711C ADD X0, X31, 0x278
	0x03C57120 ADD X22, X31, 0x278
	0x03C57124 STR X8, [X31 + 0x278]
	0x03C57128 STR X9, [X31 + 0x280]
	0x03C5712C BL 0x3C532D8
	0x03C57130 TBZ X0, 0x0, 0x3C57298
	0x03C57134 ADRP X23, 0x4FD000
	0x03C57138 LDR X23, [X23 + 0xB8]
	0x03C5713C ADD X1, X20, 0x10
	0x03C57140 ADD X0, X31, 0x3A0
	0x03C57144 MOVZ W2, 0xC4
	0x03C57148 BL 0x3EB1AC0
	0x03C5714C ADD X0, X31, 0x278
	0x03C57150 MOVZ W2, 0x128
	0x03C57154 MOV X1, X19
	0x03C57158 BL 0x3EB1AC0
	0x03C5715C ADD X1, X22, 0x10
	0x03C57160 ADD X0, X31, 0x1B0
	0x03C57164 MOVZ W2, 0xC4
	0x03C57168 BL 0x3EB1AC0
	0x03C5716C LDR X0, [X23]
	0x03C57170 LDR W8, [X0 + 0xE0]
	0x03C57174 CBNZ W8, 0x3C5717C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x790000
	006 Move W8, [X21+125]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4C6000
	014 Move X0, [X0+3368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+125], W8
	018 Compare X20, 0
	019 JumpIfEqual {46}
	020 Move X21, 0x4C6000
	021 Move X21, [X21+3368]
	022 Move X8, [X20]
	023 Move X0, [X21]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfEqual {29}
	028 Move X1, X0
	029 Call 0x1C17DFC
	030 Move X1, [X21]
	031 Move X0, [X20]
	032 Move X8, [X0+64]
	033 Move X9, [X1+64]
	034 Move X0, X20
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Call 0x1C17E08
	037 Move X8, [X0]
	038 Move W9, [X19]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W9, [X19+4]
	041 Move X8, X8
	042 ShiftRight X8, 32
	043 And X8, X8, 0x7FFFFFFF
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move W0, W31
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return X0
	052 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C55238 BL 0x3C55A38
	0x03C5523C LDR X0, [X20]
	0x03C55240 LDR W8, [X0 + 0xE0]
	0x03C55244 CBNZ W8, 0x3C5524C
	0x03C55248 BL 0x1C16DFC

ISIL:
	001 Move W8, [X0]
	002 Move W9, [X0+4]
	003 Move W10, 397
	004 Multiply W8, W8, W10
	005 Xor W0, W8, W9
	006 Return X0

Method: System.Boolean op_Equality(UnityEngine.Rendering.RenderQueueRange left, UnityEngine.Rendering.RenderQueueRange right)

Disassembly:
	0x03C57178 BL 0x1C16DFC
	0x03C5717C ADD X0, X31, 0xE8
	0x03C57180 ADD X1, X31, 0x3A0
	0x03C57184 MOVZ W2, 0xC4
	0x03C57188 BL 0x3EB1AC0
	0x03C5718C ADD X0, X31, 0x20
	0x03C57190 ADD X1, X31, 0x1B0
	0x03C57194 MOVZ W2, 0xC4
	0x03C57198 BL 0x3EB1AC0
	0x03C5719C ADD X0, X31, 0xE8
	0x03C571A0 ADD X1, X31, 0x20
	0x03C571A4 BL 0x3C53E38
	0x03C571A8 TBZ X0, 0x0, 0x3C57298
	0x03C571AC LDUR X8, [X20 + 0xE4]
	0x03C571B0 LDUR V0, [X20 + 0xD4]
	0x03C571B4 ADD X0, X31, 0x278
	0x03C571B8 MOVZ W2, 0x128
	0x03C571BC MOV X1, X19
	0x03C571C0 ADD X22, X31, 0x278
	0x03C571C4 STR X8, [X31 + 0x10]
	0x03C571C8 STR V0, [X31]
	0x03C571CC BL 0x3EB1AC0
	0x03C571D0 LDUR V0, [X22 + 0xD4]
	0x03C571D4 LDUR X8, [X22 + 0xE4]
	0x03C571D8 ADD X0, X31, 0x0
	0x03C571DC ADD X1, X31, 0x3A0
	0x03C571E0 STR V0, [X31 + 0x3A]
	0x03C571E4 STR X8, [X31 + 0x3B0]
	0x03C571E8 BL 0x3C5404C
	0x03C571EC TBZ X0, 0x0, 0x3C57298

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x790000
	007 Move X22, 0x4C6000
	008 Move W8, [X21+126]
	009 Move X22, [X22+3368]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4C6000
	017 Move X0, [X0+3368]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+126], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, X20
	027 ShiftRight X8, 32
	028 And X8, X8, 0x7FFFFFFF
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, X19
	031 ShiftRight X9, 32
	032 And X9, X9, 0x7FFFFFFF
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 NotImplemented "Instruction CSET not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 And W0, W10, W8
	041 Move X30, [X31+48]
	042 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03C571F0 LDR W8, [X20 + 0xEC]
	0x03C571F4 LDR W9, [X19 + 0xEC]
	0x03C571F8 CMP W8, W9
	0x03C571FC B.NE 0x3C57298
	0x03C57200 LDRB W8, [X19 + 0xF0]
	0x03C57204 LDRB W9, [X20 + 0xF0]
	0x03C57208 AND W8, W8, 0x1
	0x03C5720C CMP W9, W8
	0x03C57210 B.NE 0x3C57298
	0x03C57214 LDRB W8, [X20 + 0xF8]
	0x03C57218 LDRB W9, [X19 + 0xF8]
	0x03C5721C CMP W8, 0x0
	0x03C57220 CSET W10, NE
	0x03C57224 CMP W9, 0x0
	0x03C57228 CSET W9, NE
	0x03C5722C EOR W9, W10, W9, 0x0
	0x03C57230 TBNZ X9, 0x0, 0x3C57298
	0x03C57234 CBZ W8, 0x3C57254
	0x03C57238 ADRP X8, 0x508000
	0x03C5723C LDP X0, X1, [X20 + 0x100]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x790000
	005 Move X20, 0x4C6000
	006 Move W8, [X19+127]
	007 Move X20, [X20+3368]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4C6000
	013 Move X0, [X0+3368]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+127], W8
	017 Move X8, [X20]
	018 Move X9, -51810304
	019 Move V0, [X9+2048]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8], D0
	024 Move X30, [X31+32]
	025 Return 

