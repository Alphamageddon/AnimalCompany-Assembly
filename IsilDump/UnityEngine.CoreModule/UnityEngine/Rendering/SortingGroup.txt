Type: UnityEngine.Rendering.SortingGroup

Method: System.Int32 get_invalidSortingGroupID()

Disassembly:
	0x03C5E704 BL 0x1C16D08
	0x03C5E708 MOV X2, X0
	0x03C5E70C MOV X0, X20
	0x03C5E710 MOV X1, X31
	0x03C5E714 BL 0x1993444
	0x03C5E718 ADD X0, X31, 0xC
	0x03C5E71C MOV X1, X31
	0x03C5E720 BL 0x337B6E0
	0x03C5E724 MOV X21, X0
	0x03C5E728 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x789000
	004 Move X0, [X19+536]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51671040
	008 Add X0, X0, 3988
	009 Call 0x1C17CB8
	010 Move [X19+536], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Rendering.SortingGroup GetSortingGroupByIndex(System.Int32 index)

Disassembly:
	0x03C5E72C BL 0x19903C0
	0x03C5E730 MOVZ W1, 0x1
	0x03C5E734 MOV X0, X20
	0x03C5E738 MOV X2, X21
	0x03C5E73C BL 0x1993444
	0x03C5E740 MOV X0, X20
	0x03C5E744 BL 0x19903C0
	0x03C5E748 ADRP X0, 0x501000
	0x03C5E74C LDR X0, [X0 + 0xFD0]
	0x03C5E750 BL 0x1C16D08
	0x03C5E754 MOV X2, X0
	0x03C5E758 MOVZ W1, 0x2
	0x03C5E75C MOV X0, X20
	0x03C5E760 BL 0x1993444
	0x03C5E764 ADRP X0, 0x4BE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x789000
	005 Move X1, [X20+544]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51740672
	010 Add X0, X0, 1389
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+544], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_sortingLayerID()

Disassembly:
	0x03C5E768 LDR X0, [X0 + 0x230]
	0x03C5E76C BL 0x1C16D08
	0x03C5E770 BL 0x19903D0
	0x03C5E774 MOV X0, X19
	0x03C5E778 BL 0x3C5E814
	0x03C5E77C STR W0, [X31 + 0x8]
	0x03C5E780 ADD X0, X31, 0x8
	0x03C5E784 MOV X1, X31
	0x03C5E788 BL 0x337B6E0
	0x03C5E78C MOV X19, X0
	0x03C5E790 MOV X0, X20
	0x03C5E794 BL 0x19903C0
	0x03C5E798 MOVZ W1, 0x3
	0x03C5E79C MOV X0, X20
	0x03C5E7A0 MOV X2, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x789000
	005 Move X1, [X20+552]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51757056
	010 Add X0, X0, 1188
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+552], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_sortingOrder()

Disassembly:
	0x03C5E7A4 BL 0x1993444
	0x03C5E7A8 MOV X0, X20
	0x03C5E7AC BL 0x19903C0
	0x03C5E7B0 ADRP X0, 0x4D5000
	0x03C5E7B4 LDR X0, [X0 + 0xF58]
	0x03C5E7B8 BL 0x1C16D08
	0x03C5E7BC MOV X2, X0
	0x03C5E7C0 MOVZ W1, 0x4
	0x03C5E7C4 MOV X0, X20
	0x03C5E7C8 BL 0x1993444
	0x03C5E7CC MOV X0, X20
	0x03C5E7D0 MOV X1, X31
	0x03C5E7D4 BL 0x32278CC
	0x03C5E7D8 MOV X19, X0
	0x03C5E7DC ADRP X0, 0x49F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x789000
	005 Move X1, [X20+560]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51781632
	010 Add X0, X0, 1941
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+560], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor()

Disassembly:
	0x03C5E7E0 LDR X0, [X0 + 0xF78]
	0x03C5E7E4 BL 0x1C16D08

ISIL:
	001 Move X1, X31
	002 Call Behaviour..ctor, X0
	003 Return 

