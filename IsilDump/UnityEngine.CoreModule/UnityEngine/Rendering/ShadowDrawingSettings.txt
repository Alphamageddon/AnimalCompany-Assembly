Type: UnityEngine.Rendering.ShadowDrawingSettings

Method: System.Void set_useRenderingLayerMaskTest(System.Boolean value)

Disassembly:
	0x03C5B540 CBNZ W9, 0x3C5B54C
	0x03C5B544 MOV X0, X8
	0x03C5B548 BL 0x1C16DFC

ISIL:
	001 And W8, W1, 1
	002 Move [X0+20], W8
	003 Return 

Method: System.Void set_splitData(UnityEngine.Rendering.ShadowSplitData value)

Disassembly:
	0x03C5B54C CMP W21, W23
	0x03C5B550 B.NE 0x3C5B578
	0x03C5B554 BL 0x3C5B374
	0x03C5B558 CBZ X0, 0x3C5B5B8
	0x03C5B55C LDR W8, [X0 + 0x14]
	0x03C5B560 CMP W8, 0x4

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 24
	003 Move W2, 252
	004 Call 0x3EB2B30
	005 Move X30, [X31+16]
	006 Return 

Method: System.Void .ctor(UnityEngine.Rendering.CullingResults cullingResults, System.Int32 lightIndex, UnityEngine.Rendering.BatchCullingProjectionType projectionType)

Disassembly:
	0x03C5B564 CSET W9, EQ
	0x03C5B568 UBFM W9, W9, 0x1F, 0x1E
	0x03C5B56C CMP W8, 0x2
	0x03C5B570 CSINC W21, W9, W31, NE
	0x03C5B574 B 0x3C5B5A4
	0x03C5B578 MOVZ W0, 0x2
	0x03C5B57C MOVZ W21, 0x2
	0x03C5B580 BL 0x3C5B5BC
	0x03C5B584 TBNZ X0, 0x0, 0x3C5B5A4
	0x03C5B588 LDR X0, [X20]
	0x03C5B58C LDR W8, [X0 + 0xE0]
	0x03C5B590 CBNZ W8, 0x3C5B598
	0x03C5B594 BL 0x1C16DFC
	0x03C5B598 MOVZ W0, 0x1
	0x03C5B59C BL 0x3C5B5BC
	0x03C5B5A0 AND W21, W0, 0x1
	0x03C5B5A4 STR W21, [X19]
	0x03C5B5A8 LDP X20, X19, [X31 + 0x20]
	0x03C5B5AC LDP X22, X21, [X31 + 0x10]
	0x03C5B5B0 LDP X30, X23, [X31], #0x30
	0x03C5B5B4 RET
	0x03C5B5B8 BL 0x1C16F20
	0x03C5B5BC SUB X31, X31, 0x30
	0x03C5B5C0 STP X30, X21, [X31 + 0x10]
	0x03C5B5C4 STP X20, X19, [X31 + 0x20]
	0x03C5B5C8 ADRP X21, 0x78B000
	0x03C5B5CC ADRP X20, 0x4FC000
	0x03C5B5D0 LDRB W8, [X21 + 0x19B]
	0x03C5B5D4 LDR X20, [X20 + 0x220]
	0x03C5B5D8 MOV W19, W0
	0x03C5B5DC TBNZ X8, 0x0, 0x3C5B5F4
	0x03C5B5E0 ADRP X0, 0x4FC000
	0x03C5B5E4 LDR X0, [X0 + 0x220]
	0x03C5B5E8 BL 0x1C16CF4
	0x03C5B5EC MOVZ W8, 0x1
	0x03C5B5F0 STRB W8, [X21 + 0x19B]
	0x03C5B5F4 LDR X0, [X20]
	0x03C5B5F8 STRB W31, [X31 + 0xC]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x78C000
	010 Move X24, 0x4FC000
	011 Move W8, [X25+393]
	012 Move X24, [X24+3792]
	013 Move W19, W4
	014 Move W21, W3
	015 Move X22, X2
	016 Move X23, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x4FC000
	023 Move X0, [X0+3792]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+393], W8
	027 Add X0, X20, 20
	028 Move W2, 256
	029 Move W1, W31
	030 Move [X20], X23
	031 Move [X20+8], X22
	032 Move [X20+16], W21
	033 Call 0x3EB2B10
	034 Move X0, [X24]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W8, 0x3F800000
	040 Move [X20+276], W31
	041 Move [X20+204], W8
	042 Move [X20+280], W19
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Move X25, [X31+72]
	051 Return 

Method: System.Boolean Equals(UnityEngine.Rendering.ShadowDrawingSettings other)

Disassembly:
	0x03C5B6F0 B 0x3C5B718
	0x03C5B6F4 LDR X0, [X21]
	0x03C5B6F8 LDR W8, [X0 + 0xE0]
	0x03C5B6FC CBNZ W8, 0x3C5B704
	0x03C5B700 BL 0x1C16DFC
	0x03C5B704 BL 0x3C5B374
	0x03C5B708 CBZ X0, 0x3C5B72C
	0x03C5B70C LDRB W8, [X0 + 0x18]
	0x03C5B710 TBNZ X8, 0x1, 0x3C5B6C8
	0x03C5B714 MOV W8, W31
	0x03C5B718 STRB W8, [X19]
	0x03C5B71C LDP X20, X19, [X31 + 0x20]
	0x03C5B720 LDP X22, X21, [X31 + 0x10]
	0x03C5B724 LDR X30, [X31], #0x30
	0x03C5B728 RET
	0x03C5B72C BL 0x1C16F20
	0x03C5B730 SUB X31, X31, 0x30
	0x03C5B734 STP X30, X21, [X31 + 0x10]
	0x03C5B738 STP X20, X19, [X31 + 0x20]
	0x03C5B73C ADRP X21, 0x78B000
	0x03C5B740 ADRP X20, 0x4FC000
	0x03C5B744 LDRB W8, [X21 + 0x19D]
	0x03C5B748 LDR X20, [X20 + 0x220]
	0x03C5B74C MOV W19, W0
	0x03C5B750 TBNZ X8, 0x0, 0x3C5B768
	0x03C5B754 ADRP X0, 0x4FC000
	0x03C5B758 LDR X0, [X0 + 0x220]
	0x03C5B75C BL 0x1C16CF4
	0x03C5B760 MOVZ W8, 0x1
	0x03C5B764 STRB W8, [X21 + 0x19D]
	0x03C5B768 LDR X0, [X20]
	0x03C5B76C STRB W31, [X31 + 0xC]
	0x03C5B770 LDR W8, [X0 + 0xE0]
	0x03C5B774 CBNZ W8, 0x3C5B77C
	0x03C5B778 BL 0x1C16DFC
	0x03C5B77C ADD X1, X31, 0xC
	0x03C5B780 MOV W0, W19
	0x03C5B784 BL 0x3C5B79C
	0x03C5B788 LDRB W0, [X31 + 0xC]
	0x03C5B78C LDP X20, X19, [X31 + 0x20]
	0x03C5B790 LDP X30, X21, [X31 + 0x10]
	0x03C5B794 ADD X31, X31, 0x30
	0x03C5B798 RET
	0x03C5B79C STP X30, X21, [X31 - 0x20]!
	0x03C5B7A0 STP X20, X19, [X31 + 0x10]
	0x03C5B7A4 ADRP X21, 0x78B000
	0x03C5B7A8 LDRB W8, [X21 + 0x19E]
	0x03C5B7AC MOV X19, X1
	0x03C5B7B0 MOV W20, W0
	0x03C5B7B4 TBNZ X8, 0x0, 0x3C5B7CC
	0x03C5B7B8 ADRP X0, 0x4FC000
	0x03C5B7BC LDR X0, [X0 + 0x220]
	0x03C5B7C0 BL 0x1C16CF4
	0x03C5B7C4 MOVZ W8, 0x1
	0x03C5B7C8 STRB W8, [X21 + 0x19E]
	0x03C5B7CC ADRP X21, 0x4FC000
	0x03C5B7D0 LDR X21, [X21 + 0x220]
	0x03C5B7D4 MOV X0, X19
	0x03C5B7D8 MOV X1, X31
	0x03C5B7DC BL 0x33C6948
	0x03C5B7E0 CMP W20, 0x1
	0x03C5B7E4 MOV X19, X0
	0x03C5B7E8 B.NE 0x3C5B828
	0x03C5B7EC LDR X0, [X21]
	0x03C5B7F0 LDR W8, [X0 + 0xE0]
	0x03C5B7F4 CBNZ W8, 0x3C5B7FC
	0x03C5B7F8 BL 0x1C16DFC
	0x03C5B7FC MOVZ W0, 0x2
	0x03C5B800 BL 0x3C5B730
	0x03C5B804 TBZ X0, 0x0, 0x3C5B878
	0x03C5B808 LDR X0, [X21]
	0x03C5B80C LDR W8, [X0 + 0xE0]
	0x03C5B810 CBNZ W8, 0x3C5B818
	0x03C5B814 BL 0x1C16DFC
	0x03C5B818 BL 0x3C5B374
	0x03C5B81C CBZ X0, 0x3C5B888
	0x03C5B820 LDR W8, [X0 + 0x18]
	0x03C5B824 CBZ W8, 0x3C5B878
	0x03C5B828 LDR X0, [X21]
	0x03C5B82C LDR W8, [X0 + 0xE0]
	0x03C5B830 CBNZ W8, 0x3C5B838
	0x03C5B834 BL 0x1C16DFC
	0x03C5B838 BL 0x3C5B374
	0x03C5B83C CBZ X0, 0x3C5B888
	0x03C5B840 LDR W8, [X0 + 0x1C]
	0x03C5B844 BICS W31, W20, W8, 0x0
	0x03C5B848 CSET W8, EQ
	0x03C5B84C CMP W20, 0x4
	0x03C5B850 STRB W8, [X19]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Subtract X31, X31, 816
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X21, 0x78C000
	012 Move X20, X1
	013 Move X19, X0
	014 Move [X31+808], X8
	015 Move W8, [X21+394]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x505000
	021 Move X0, [X0+3824]
	022 Call 0x1C17CF4
	023 Move X0, 0x4FC000
	024 Move X0, [X0+3792]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+394], W8
	028 Move X1, [X20]
	029 Move X2, [X20+8]
	030 Move X0, X19
	031 Call CullingResults.Equals, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {94}
	036 Move W8, [X19+16]
	037 Move W9, [X20+16]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X0, X31, 520
	040 Move W2, 288
	041 Move X1, X20
	042 Add X21, X19, 24
	043 Add X23, X31, 520
	044 Call 0x3EB2AC0
	045 Add X1, X23, 24
	046 Add X0, X31, 264
	047 Move W2, 252
	048 Call 0x3EB2AC0
	049 Move X8, 0x4FC000
	050 Move X8, [X8+3792]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Add X0, X31, 8
	057 Add X1, X31, 264
	058 Move W2, 252
	059 Call 0x3EB2AC0
	060 Add X1, X31, 8
	061 Move X0, X21
	062 Call ShadowSplitData.Equals, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {94}
	067 Move W1, [X20+20]
	068 Add X0, X19, 20
	069 Move X2, X31
	070 Call Int32.Equals, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {94}
	075 Move W8, [X20+276]
	076 Move X20, 0x505000
	077 Move X20, [X20+3824]
	078 Add X1, X31, 264
	079 Move [X31+264], W8
	080 Move X0, [X20]
	081 Call 0x1C17E04
	082 Move X8, [X20]
	083 Move TEMP, 0
	084 Not TEMP
	085 Move X9, TEMP
	086 Move [X31+528], X9
	087 Move X1, X0
	088 Move [X31+520], X8
	089 Move W8, [X19+276]
	090 Add X0, X31, 520
	091 Move X2, X31
	092 Move [X31+536], W8
	093 Call Enum.Equals, X0, X1
	094 Move W0, W31
	095 Move X8, [X22+40]
	096 Move X9, [X31+808]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 And W0, W0, 1
	099 Add X31, X31, 816
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X30, [X31+16]
	105 Move X23, [X31+24]
	106 Move X29, [X31+64]
	107 Return X0
	108 Call 0x3EB2B20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C5B9C8 MOVZ W8, 0x1
	0x03C5B9CC STRB W8, [X21 + 0x1A1]
	0x03C5B9D0 MOV X0, X19
	0x03C5B9D4 MOV X1, X31
	0x03C5B9D8 BL 0x33C6948
	0x03C5B9DC LDR X8, [X20]
	0x03C5B9E0 MOV X19, X0
	0x03C5B9E4 LDR W9, [X8 + 0xE0]
	0x03C5B9E8 CBNZ W9, 0x3C5B9F4
	0x03C5B9EC MOV X0, X8
	0x03C5B9F0 BL 0x1C16DFC
	0x03C5B9F4 BL 0x3C5B374
	0x03C5B9F8 CBZ X0, 0x3C5BA10
	0x03C5B9FC LDRB W8, [X0 + 0x2C]
	0x03C5BA00 STRB W8, [X19]
	0x03C5BA04 LDP X20, X19, [X31 + 0x10]
	0x03C5BA08 LDP X30, X21, [X31], #0x20
	0x03C5BA0C RET
	0x03C5BA10 BL 0x1C16F20
	0x03C5BA14 STP X30, X21, [X31 - 0x20]!
	0x03C5BA18 STP X20, X19, [X31 + 0x10]
	0x03C5BA1C ADRP X21, 0x78B000
	0x03C5BA20 ADRP X20, 0x4FC000
	0x03C5BA24 LDRB W8, [X21 + 0x1A2]
	0x03C5BA28 LDR X20, [X20 + 0x220]
	0x03C5BA2C MOV X19, X0
	0x03C5BA30 TBNZ X8, 0x0, 0x3C5BA48
	0x03C5BA34 ADRP X0, 0x4FC000
	0x03C5BA38 LDR X0, [X0 + 0x220]
	0x03C5BA3C BL 0x1C16CF4
	0x03C5BA40 MOVZ W8, 0x1
	0x03C5BA44 STRB W8, [X21 + 0x1A2]
	0x03C5BA48 MOV X0, X19
	0x03C5BA4C MOV X1, X31
	0x03C5BA50 BL 0x33C6948
	0x03C5BA54 LDR X8, [X20]
	0x03C5BA58 MOV X19, X0
	0x03C5BA5C LDR W9, [X8 + 0xE0]
	0x03C5BA60 CBNZ W9, 0x3C5BA6C
	0x03C5BA64 MOV X0, X8
	0x03C5BA68 BL 0x1C16DFC
	0x03C5BA6C BL 0x3C5B374
	0x03C5BA70 CBZ X0, 0x3C5BA88
	0x03C5BA74 LDRB W8, [X0 + 0x37]
	0x03C5BA78 STRB W8, [X19]
	0x03C5BA7C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X22
	005 Move [X31+328], X21
	006 Move [X31+336], X20
	007 Move [X31+344], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X22, 0x78C000
	011 Move X20, X1
	012 Move X19, X0
	013 Move [X31+296], X8
	014 Move W8, [X22+395]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x505000
	020 Move X0, [X0+3832]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+395], W8
	024 Compare X20, 0
	025 JumpIfEqual {31}
	026 Move X8, 0x505000
	027 Move X8, [X8+3832]
	028 Move X9, [X20]
	029 Move X8, [X8]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W0, W31
	032 Move X0, X20
	033 Call 0x1C17E08
	034 Move X1, X0
	035 Add X0, X31, 8
	036 Move W2, 288
	037 Call 0x3EB2AC0
	038 Add X1, X31, 8
	039 Move X0, X19
	040 Call ShadowDrawingSettings.Equals, X0, X1
	041 Move X8, [X21+40]
	042 Move X9, [X31+296]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X20, [X31+336]
	045 Move X19, [X31+344]
	046 Move X22, [X31+320]
	047 Move X21, [X31+328]
	048 Move X29, [X31+304]
	049 Move X30, [X31+312]
	050 And W0, W0, 1
	051 Add X31, X31, 352
	052 Return X0
	053 Call 0x3EB2B20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C5BA80 LDP X30, X21, [X31], #0x20
	0x03C5BA84 RET
	0x03C5BA88 BL 0x1C16F20
	0x03C5BA8C STP X30, X21, [X31 - 0x20]!
	0x03C5BA90 STP X20, X19, [X31 + 0x10]
	0x03C5BA94 ADRP X21, 0x78B000
	0x03C5BA98 ADRP X20, 0x4FC000
	0x03C5BA9C LDRB W8, [X21 + 0x1A3]
	0x03C5BAA0 LDR X20, [X20 + 0x220]
	0x03C5BAA4 MOV X19, X0
	0x03C5BAA8 TBNZ X8, 0x0, 0x3C5BAC0
	0x03C5BAAC ADRP X0, 0x4FC000
	0x03C5BAB0 LDR X0, [X0 + 0x220]
	0x03C5BAB4 BL 0x1C16CF4
	0x03C5BAB8 MOVZ W8, 0x1
	0x03C5BABC STRB W8, [X21 + 0x1A3]
	0x03C5BAC0 MOV X0, X19
	0x03C5BAC4 MOV X1, X31
	0x03C5BAC8 BL 0x33C6948
	0x03C5BACC LDR X8, [X20]
	0x03C5BAD0 MOV X19, X0
	0x03C5BAD4 LDR W9, [X8 + 0xE0]
	0x03C5BAD8 CBNZ W9, 0x3C5BAE4
	0x03C5BADC MOV X0, X8
	0x03C5BAE0 BL 0x1C16DFC
	0x03C5BAE4 BL 0x3C5B374
	0x03C5BAE8 CBZ X0, 0x3C5BB00
	0x03C5BAEC LDRB W8, [X0 + 0x38]
	0x03C5BAF0 STRB W8, [X19]
	0x03C5BAF4 LDP X20, X19, [X31 + 0x10]
	0x03C5BAF8 LDP X30, X21, [X31], #0x20
	0x03C5BAFC RET
	0x03C5BB00 BL 0x1C16F20
	0x03C5BB04 STP X30, X21, [X31 - 0x20]!
	0x03C5BB08 STP X20, X19, [X31 + 0x10]
	0x03C5BB0C ADRP X21, 0x78B000
	0x03C5BB10 ADRP X20, 0x4FC000
	0x03C5BB14 LDRB W8, [X21 + 0x1A4]
	0x03C5BB18 LDR X20, [X20 + 0x220]
	0x03C5BB1C MOV X19, X0
	0x03C5BB20 TBNZ X8, 0x0, 0x3C5BB38
	0x03C5BB24 ADRP X0, 0x4FC000
	0x03C5BB28 LDR X0, [X0 + 0x220]
	0x03C5BB2C BL 0x1C16CF4
	0x03C5BB30 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x78C000
	009 Move X20, 0x4FC000
	010 Move W8, [X21+396]
	011 Move X20, [X20+3792]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x4FC000
	018 Move X0, [X0+3792]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+396], W8
	022 Move X0, X19
	023 Move X1, X31
	024 Call IntPtr.GetHashCode, X0
	025 Move X8, [X20]
	026 Move X23, [X19+8]
	027 Move W22, [X19+16]
	028 Move W21, [X19+20]
	029 Move W20, W0
	030 Move W9, [X8+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {35}
	033 Move X0, X8
	034 Call 0x1C17DFC
	035 Move W24, 397
	036 Multiply W8, W20, W24
	037 Xor W8, W8, W23
	038 Multiply W8, W8, W24
	039 Xor W8, W8, W22
	040 Add X0, X19, 24
	041 Multiply W8, W8, W24
	042 Xor W20, W8, W21
	043 Call ShadowSplitData.GetHashCode, X0
	044 Multiply W9, W20, W24
	045 Move W8, [X19+276]
	046 Xor W9, W0, W9
	047 Multiply W9, W9, W24
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Xor W0, W9, W8
	055 Move X30, [X31+64]
	056 Return X0

