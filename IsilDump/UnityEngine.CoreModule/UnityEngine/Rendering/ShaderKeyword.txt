Type: UnityEngine.Rendering.ShaderKeyword

Method: System.UInt32 GetGlobalKeywordCount()

Disassembly:
	0x03C5E3D4 LDP X20, X19, [X31 + 0x20]
	0x03C5E3D8 LDP X22, X21, [X31 + 0x10]
	0x03C5E3DC MOVZ W0, 0x1
	0x03C5E3E0 LDR X30, [X31], #0x30
	0x03C5E3E4 RET
	0x03C5E3E8 STR D8, [X31 - 0x30]!
	0x03C5E3EC STR X30, [X31 + 0x8]
	0x03C5E3F0 STP X22, X21, [X31 + 0x10]
	0x03C5E3F4 STP X20, X19, [X31 + 0x20]
	0x03C5E3F8 ADRP X21, 0x788000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x789000
	004 Move X0, [X19+496]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51781632
	008 Add X0, X0, 1880
	009 Call 0x1C17CB8
	010 Move [X19+496], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.UInt32 GetGlobalKeywordIndex(System.String keyword)

Disassembly:
	0x03C5E3FC ADRP X22, 0x4BE000
	0x03C5E400 LDRB W8, [X21 + 0x28E]
	0x03C5E404 LDR X22, [X22 + 0x230]
	0x03C5E408 MOV V8.16B, V0.16B
	0x03C5E40C MOV W19, W1
	0x03C5E410 MOV X20, X0
	0x03C5E414 TBNZ X8, 0x0, 0x3C5E42C
	0x03C5E418 ADRP X0, 0x4BE000
	0x03C5E41C LDR X0, [X0 + 0x230]
	0x03C5E420 BL 0x1C16CF4
	0x03C5E424 MOVZ W8, 0x1
	0x03C5E428 STRB W8, [X21 + 0x28E]
	0x03C5E42C LDR X0, [X22]
	0x03C5E430 LDR W8, [X0 + 0xE0]
	0x03C5E434 CBNZ W8, 0x3C5E43C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x789000
	005 Move X1, [X20+504]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51679232
	010 Add X0, X0, 3683
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+504], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void CreateGlobalKeyword(System.String keyword)

Disassembly:
	0x03C5E438 BL 0x1C16DFC
	0x03C5E43C ADRP X21, 0x788000
	0x03C5E440 LDR X2, [X21 + 0x2C8]
	0x03C5E444 CBNZ X2, 0x3C5E45C
	0x03C5E448 ADRP X0, 0xFFFFFFFFFCEA5000
	0x03C5E44C ADD X0, X0, 0x5DA
	0x03C5E450 BL 0x1C16CB8
	0x03C5E454 MOV X2, X0
	0x03C5E458 STR X0, [X21 + 0x2C8]
	0x03C5E45C MOV X0, X20
	0x03C5E460 MOV W1, W19
	0x03C5E464 LDP X20, X19, [X31 + 0x20]
	0x03C5E468 LDP X22, X21, [X31 + 0x10]
	0x03C5E46C LDR X30, [X31 + 0x8]
	0x03C5E470 MOV V0.16B, V8.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x789000
	005 Move X1, [X20+512]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51662848
	010 Add X0, X0, 3796
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+512], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.String get_name()

Disassembly:
	0x03C5E474 LDR V8, [X31], #0x30
	0x03C5E478 BR X2

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void .ctor(System.String keywordName)

Disassembly:
	0x03C5E47C STR X30, [X31 - 0x20]!
	0x03C5E480 STP X20, X19, [X31 + 0x10]
	0x03C5E484 MOV X20, X1
	0x03C5E488 MOV X1, X2
	0x03C5E48C MOV X2, X31
	0x03C5E490 MOV X19, X3
	0x03C5E494 BL 0x33BE5B0
	0x03C5E498 CMP W20, W19
	0x03C5E49C LDP X20, X19, [X31 + 0x10]
	0x03C5E4A0 CSET W8, EQ
	0x03C5E4A4 AND W0, W8, W0, 0x0
	0x03C5E4A8 LDR X30, [X31], #0x20
	0x03C5E4AC RET
	0x03C5E4B0 STP X30, X21, [X31 - 0x20]!
	0x03C5E4B4 STP X20, X19, [X31 + 0x10]
	0x03C5E4B8 ADRP X21, 0x788000
	0x03C5E4BC LDRB W8, [X21 + 0x283]
	0x03C5E4C0 MOV X20, X1
	0x03C5E4C4 MOV X19, X0
	0x03C5E4C8 TBNZ X8, 0x0, 0x3C5E4E0
	0x03C5E4CC ADRP X0, 0x4BE000
	0x03C5E4D0 LDR X0, [X0 + 0x230]
	0x03C5E4D4 BL 0x1C16CF4
	0x03C5E4D8 MOVZ W8, 0x1
	0x03C5E4DC STRB W8, [X21 + 0x283]
	0x03C5E4E0 CBZ X20, 0x3C5E4FC
	0x03C5E4E4 ADRP X21, 0x4BE000
	0x03C5E4E8 LDR X21, [X21 + 0x230]
	0x03C5E4EC LDR X8, [X20]
	0x03C5E4F0 LDR X0, [X21]
	0x03C5E4F4 CMP X8, X0
	0x03C5E4F8 B.EQ 0x3C5E50C
	0x03C5E4FC LDP X20, X19, [X31 + 0x10]
	0x03C5E500 MOV W0, W31
	0x03C5E504 LDP X30, X21, [X31], #0x20
	0x03C5E508 RET
	0x03C5E50C LDR W8, [X0 + 0xE0]
	0x03C5E510 CBZ W8, 0x3C5E51C
	0x03C5E514 MOV X1, X0
	0x03C5E518 B 0x3C5E528
	0x03C5E51C BL 0x1C16DFC
	0x03C5E520 LDR X1, [X21]
	0x03C5E524 LDR X0, [X20]
	0x03C5E528 LDR X8, [X0 + 0x40]
	0x03C5E52C LDR X9, [X1 + 0x40]
	0x03C5E530 MOV X0, X20
	0x03C5E534 CMP X8, X9
	0x03C5E538 B.NE 0x3C5E554
	0x03C5E53C BL 0x1C16E08
	0x03C5E540 LDP X1, X2, [X0]
	0x03C5E544 MOV X0, X19
	0x03C5E548 LDP X20, X19, [X31 + 0x10]
	0x03C5E54C LDP X30, X21, [X31], #0x20
	0x03C5E550 B 0x3C5E558
	0x03C5E554 BL 0x1C171E0
	0x03C5E558 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move [X0], X1
	008 Move X22, 0x789000
	009 Move X8, [X22+504]
	010 Move X20, X1
	011 Move X19, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51679232
	015 Add X0, X0, 3683
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X22+504], X0
	019 Move X0, X20
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move [X19+8], W0
	022 Move X23, 0x789000
	023 Move X8, [X23+496]
	024 Move W21, W0
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -51781632
	028 Add X0, X0, 1880
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X23+496], X0
	032 NotImplemented "Instruction BLR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X21, 0x789000
	035 Move X8, [X21+512]
	036 Compare X8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, -51662848
	039 Add X0, X0, 3796
	040 Call 0x1C17CB8
	041 Move X8, X0
	042 Move [X21+512], X0
	043 Move X0, X20
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X22+504]
	046 Compare X8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, -51679232
	049 Add X0, X0, 3683
	050 Call 0x1C17CB8
	051 Move X8, X0
	052 Move [X22+504], X0
	053 Move X0, X20
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move [X19+8], W0
	056 Move W8, 1
	057 Move [X19+14], W8
	058 NotImplemented "Instruction STRH not yet implemented."
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return 

Method: System.String ToString()

Disassembly:
	0x03C5E55C STP X22, X21, [X31 + 0x10]
	0x03C5E560 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, [X0]
	002 Return X0

