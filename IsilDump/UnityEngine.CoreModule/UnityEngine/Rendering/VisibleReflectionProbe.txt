Type: UnityEngine.Rendering.VisibleReflectionProbe

Method: UnityEngine.Texture get_texture()

Disassembly:
	0x03C5CFF8 BL 0x1C16CB8
	0x03C5CFFC MOV X1, X0
	0x03C5D000 STR X0, [X20 + 0x1D8]
	0x03C5D004 MOV X0, X19
	0x03C5D008 LDP X20, X19, [X31 + 0x10]
	0x03C5D00C LDR X30, [X31], #0x20
	0x03C5D010 BR X1
	0x03C5D014 STP X30, X21, [X31 - 0x20]!
	0x03C5D018 STP X20, X19, [X31 + 0x10]
	0x03C5D01C ADRP X21, 0x789000
	0x03C5D020 LDR X2, [X21 + 0x1E0]
	0x03C5D024 MOV X19, X1
	0x03C5D028 MOV X20, X0
	0x03C5D02C CBNZ X2, 0x3C5D044
	0x03C5D030 ADRP X0, 0xFFFFFFFFFCE9A000
	0x03C5D034 ADD X0, X0, 0x95D
	0x03C5D038 BL 0x1C16CB8
	0x03C5D03C MOV X2, X0
	0x03C5D040 STR X0, [X21 + 0x1E0]
	0x03C5D044 MOV X0, X20
	0x03C5D048 MOV X1, X19
	0x03C5D04C LDP X20, X19, [X31 + 0x10]
	0x03C5D050 LDP X30, X21, [X31], #0x20
	0x03C5D054 BR X2
	0x03C5D058 STP X30, X23, [X31 - 0x30]!
	0x03C5D05C STP X22, X21, [X31 + 0x10]
	0x03C5D060 STP X20, X19, [X31 + 0x20]
	0x03C5D064 ADRP X22, 0x789000
	0x03C5D068 ADRP X23, 0x496000
	0x03C5D06C LDRB W8, [X22 + 0x1E8]
	0x03C5D070 LDR X23, [X23 + 0x598]
	0x03C5D074 MOV X19, X2
	0x03C5D078 MOV X20, X1
	0x03C5D07C MOV X21, X0
	0x03C5D080 TBNZ X8, 0x0, 0x3C5D0C8
	0x03C5D084 ADRP X0, 0x496000
	0x03C5D088 LDR X0, [X0 + 0xA28]
	0x03C5D08C BL 0x1C16CF4
	0x03C5D090 ADRP X0, 0x496000
	0x03C5D094 LDR X0, [X0 + 0x9D0]
	0x03C5D098 BL 0x1C16CF4
	0x03C5D09C ADRP X0, 0x496000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x78A000
	006 Move X20, 0x497000
	007 Move W8, [X21+425]
	008 Call 0x3EB275C
	009 Return X0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x497000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x503000
	019 Move X0, [X0+72]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+425], W8
	023 Move X0, [X20]
	024 Move W19, [X19+132]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move W0, W19
	030 Move X1, X31
	031 Call Object.FindObjectFromInstanceID, X0
	032 Compare X0, 0
	033 JumpIfEqual {45}
	034 Move X9, 0x503000
	035 Move X9, [X9+72]
	036 Move X8, [X0]
	037 Move X1, [X9]
	038 Move W10, [X8+304]
	039 Move W9, [X1+304]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X8+200]
	042 Add X8, X8, X9
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Call 0x1C181E0

Method: UnityEngine.ReflectionProbe get_reflectionProbe()

Disassembly:
	0x03C5D0A0 LDR X0, [X0 + 0x598]
	0x03C5D0A4 BL 0x1C16CF4
	0x03C5D0A8 ADRP X0, 0x502000
	0x03C5D0AC LDR X0, [X0 + 0xF80]
	0x03C5D0B0 BL 0x1C16CF4
	0x03C5D0B4 ADRP X0, 0x502000
	0x03C5D0B8 LDR X0, [X0 + 0xF88]
	0x03C5D0BC BL 0x1C16CF4
	0x03C5D0C0 MOVZ W8, 0x1
	0x03C5D0C4 STRB W8, [X22 + 0x1E8]
	0x03C5D0C8 LDR X0, [X23]
	0x03C5D0CC LDR W8, [X0 + 0xE0]
	0x03C5D0D0 CBNZ W8, 0x3C5D0D8
	0x03C5D0D4 BL 0x1C16DFC
	0x03C5D0D8 ADRP X23, 0x496000
	0x03C5D0DC LDR X23, [X23 + 0xA28]
	0x03C5D0E0 MOV X0, X20
	0x03C5D0E4 MOV X1, X31
	0x03C5D0E8 MOV X2, X31
	0x03C5D0EC BL 0x3C3883C
	0x03C5D0F0 TBZ X0, 0x0, 0x3C5D118
	0x03C5D0F4 LDR X0, [X23]
	0x03C5D0F8 ADRP X22, 0x502000
	0x03C5D0FC LDR W8, [X0 + 0xE0]
	0x03C5D100 LDR X22, [X22 + 0xF88]
	0x03C5D104 CBNZ W8, 0x3C5D10C
	0x03C5D108 BL 0x1C16DFC
	0x03C5D10C LDR X0, [X22]
	0x03C5D110 MOV X1, X31
	0x03C5D114 BL 0x3C0649C
	0x03C5D118 CBZ X20, 0x3C5D214
	0x03C5D11C MOV X0, X20
	0x03C5D120 MOV X1, X31
	0x03C5D124 BL 0x3C13F24
	0x03C5D128 STP X0, X19, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x78A000
	006 Move X20, 0x497000
	007 Move W8, [X21+426]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x497000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x4F7000
	018 Move X0, [X0+760]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+426], W8
	022 Move X0, [X20]
	023 Move W19, [X19+128]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W19
	029 Move X1, X31
	030 Call Object.FindObjectFromInstanceID, X0
	031 Compare X0, 0
	032 JumpIfEqual {38}
	033 Move X8, 0x4F7000
	034 Move X8, [X8+760]
	035 Move X1, [X8]
	036 Move X8, [X0]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C181E0

Method: UnityEngine.Bounds get_bounds()

Disassembly:
	0x03C5D12C ADRP X22, 0x789000
	0x03C5D130 LDR X8, [X22 + 0x1E0]
	0x03C5D134 CBNZ X8, 0x3C5D14C
	0x03C5D138 ADRP X0, 0xFFFFFFFFFCE9A000
	0x03C5D13C ADD X0, X0, 0x95D

ISIL:
	001 Move X9, [X0+16]
	002 Move V0, [X0]
	003 Move [X8+16], X9
	004 Move [X8], V0
	005 Return X0

Method: UnityEngine.Matrix4x4 get_localToWorldMatrix()

Disassembly:
	0x03C5D140 BL 0x1C16CB8
	0x03C5D144 MOV X8, X0
	0x03C5D148 STR X0, [X22 + 0x1E0]
	0x03C5D14C MOV X0, X20
	0x03C5D150 MOV X1, X19
	0x03C5D154 BLR X8
	0x03C5D158 STR W0, [X21 + 0x10]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 Move [X8+32], V1
	006 Move [X8+40], V0
	007 Move [X8], V3
	008 Move [X8+8], V2
	009 Return X0

Method: UnityEngine.Vector4 get_hdrData()

Disassembly:
	0x03C5D15C ADRP X21, 0x789000
	0x03C5D160 LDR X8, [X21 + 0x1D8]
	0x03C5D164 MOV W22, W0

ISIL:
	001 Move S0, [X0+88]
	002 Move S1, [X0+92]
	003 Move S2, [X0+96]
	004 Move S3, [X0+100]
	005 Return X0

Method: System.Single get_blendDistance()

Disassembly:
	0x03C5D168 CBNZ X8, 0x3C5D180
	0x03C5D16C ADRP X0, 0xFFFFFFFFFCEC0000

ISIL:
	001 Move V0, [X0+116]
	002 Return V0

Method: System.Int32 get_importance()

Disassembly:
	0x03C5D170 ADD X0, X0, 0x482
	0x03C5D174 BL 0x1C16CB8

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Boolean get_isBoxProjection()

Disassembly:
	0x03C5D178 MOV X8, X0
	0x03C5D17C STR X0, [X21 + 0x1D8]
	0x03C5D180 MOV X0, X20
	0x03C5D184 BLR X8
	0x03C5D188 CMP W22, W0
	0x03C5D18C B.CS 0x3C5D1A0
	0x03C5D190 LDP X20, X19, [X31 + 0x20]
	0x03C5D194 LDP X22, X21, [X31 + 0x10]
	0x03C5D198 LDP X30, X23, [X31], #0x30
	0x03C5D19C RET
	0x03C5D1A0 ADRP X8, 0x496000
	0x03C5D1A4 LDR X8, [X8 + 0x9D0]
	0x03C5D1A8 MOVZ W1, 0x1
	0x03C5D1AC LDR X0, [X8]
	0x03C5D1B0 BL 0x1C16D6C
	0x03C5D1B4 CBZ X0, 0x3C5D214
	0x03C5D1B8 MOV X20, X0
	0x03C5D1BC CBZ X19, 0x3C5D1D4
	0x03C5D1C0 LDR X8, [X20]
	0x03C5D1C4 MOV X0, X19
	0x03C5D1C8 LDR X1, [X8 + 0x40]
	0x03C5D1CC BL 0x1C16E00
	0x03C5D1D0 CBZ X0, 0x3C5D21C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x78A000
	006 Move X20, 0x4A0000
	007 Move W8, [X21+427]
	008 Move X20, [X20+2536]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4A0000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+427], W8
	019 Move X0, [X20]
	020 Move W19, [X19+124]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Convert.ToBoolean, X0
	032 Return X0

Method: System.Boolean Equals(UnityEngine.Rendering.VisibleReflectionProbe other)

Disassembly:
	0x03C5D1D4 LDR W8, [X20 + 0x18]
	0x03C5D1D8 CBZ W8, 0x3C5D218
	0x03C5D1DC STR X19, [X20 + 0x20]
	0x03C5D1E0 LDR X0, [X23]
	0x03C5D1E4 LDR W8, [X0 + 0xE0]
	0x03C5D1E8 CBNZ W8, 0x3C5D1F0
	0x03C5D1EC BL 0x1C16DFC
	0x03C5D1F0 ADRP X8, 0x502000
	0x03C5D1F4 LDR X8, [X8 + 0xF80]
	0x03C5D1F8 MOV X1, X20
	0x03C5D1FC LDP X20, X19, [X31 + 0x20]
	0x03C5D200 LDP X22, X21, [X31 + 0x10]
	0x03C5D204 LDR X0, [X8]
	0x03C5D208 MOV X2, X31
	0x03C5D20C LDP X30, X23, [X31], #0x30
	0x03C5D210 B 0x3C066BC
	0x03C5D214 BL 0x1C16F20
	0x03C5D218 BL 0x1C16F28
	0x03C5D21C BL 0x1C16F44
	0x03C5D220 MOV X1, X31
	0x03C5D224 BL 0x1C16DEC
	0x03C5D228 LDR X0, [X0 + 0x8]
	0x03C5D22C RET
	0x03C5D230 STP X30, X21, [X31 - 0x20]!
	0x03C5D234 STP X20, X19, [X31 + 0x10]
	0x03C5D238 ADRP X21, 0x789000
	0x03C5D23C LDRB W8, [X21 + 0x1E9]
	0x03C5D240 MOV X20, X1
	0x03C5D244 MOV X19, X0
	0x03C5D248 TBNZ X8, 0x0, 0x3C5D260
	0x03C5D24C ADRP X0, 0x502000
	0x03C5D250 LDR X0, [X0 + 0xF90]
	0x03C5D254 BL 0x1C16CF4
	0x03C5D258 MOVZ W8, 0x1
	0x03C5D25C STRB W8, [X21 + 0x1E9]
	0x03C5D260 CBZ X20, 0x3C5D2AC
	0x03C5D264 ADRP X8, 0x502000
	0x03C5D268 LDR X8, [X8 + 0xF90]
	0x03C5D26C LDR X9, [X20]
	0x03C5D270 LDR X8, [X8]
	0x03C5D274 CMP X9, X8
	0x03C5D278 B.NE 0x3C5D2AC
	0x03C5D27C MOV X0, X20
	0x03C5D280 BL 0x1C16E08
	0x03C5D284 LDR X1, [X0]
	0x03C5D288 LDR W20, [X0 + 0x10]
	0x03C5D28C LDR X0, [X19]
	0x03C5D290 MOV X2, X31
	0x03C5D294 BL 0x33BE5B0
	0x03C5D298 TBZ X0, 0x0, 0x3C5D2AC
	0x03C5D29C LDR W8, [X19 + 0x10]
	0x03C5D2A0 CMP W8, W20
	0x03C5D2A4 CSET W0, EQ
	0x03C5D2A8 B 0x3C5D2B0
	0x03C5D2AC MOV W0, W31
	0x03C5D2B0 LDP X20, X19, [X31 + 0x10]
	0x03C5D2B4 LDP X30, X21, [X31], #0x20
	0x03C5D2B8 RET
	0x03C5D2BC STR X30, [X31 - 0x20]!
	0x03C5D2C0 STP X20, X19, [X31 + 0x10]
	0x03C5D2C4 MOV X19, X1
	0x03C5D2C8 MOV X20, X0
	0x03C5D2CC LDR X0, [X0]
	0x03C5D2D0 LDR X1, [X1]
	0x03C5D2D4 MOV X2, X31
	0x03C5D2D8 BL 0x33BE5B0
	0x03C5D2DC TBZ X0, 0x0, 0x3C5D2F4
	0x03C5D2E0 LDR W8, [X20 + 0x10]
	0x03C5D2E4 LDR W9, [X19 + 0x10]
	0x03C5D2E8 CMP W8, W9
	0x03C5D2EC CSET W0, EQ
	0x03C5D2F0 B 0x3C5D2F8
	0x03C5D2F4 MOV W0, W31
	0x03C5D2F8 LDP X20, X19, [X31 + 0x10]
	0x03C5D2FC LDR X30, [X31], #0x20
	0x03C5D300 RET
	0x03C5D304 MOV X2, X31
	0x03C5D308 B 0x33BE5B0
	0x03C5D30C STR X30, [X31 - 0x20]!
	0x03C5D310 STP X20, X19, [X31 + 0x10]
	0x03C5D314 MOV X19, X0
	0x03C5D318 ADD X0, X0, 0x10
	0x03C5D31C MOV X1, X31
	0x03C5D320 BL 0x3399AF8
	0x03C5D324 MOV W20, W0
	0x03C5D328 MOV X0, X19
	0x03C5D32C MOV X1, X31
	0x03C5D330 BL 0x33C24FC
	0x03C5D334 EOR W0, W0, W20, 0x0
	0x03C5D338 LDP X20, X19, [X31 + 0x10]
	0x03C5D33C LDR X30, [X31], #0x20
	0x03C5D340 RET
	0x03C5D344 MOV X1, X31
	0x03C5D348 B 0x33C24FC
	0x03C5D34C STP X30, X21, [X31 - 0x20]!
	0x03C5D350 STP X20, X19, [X31 + 0x10]
	0x03C5D354 ADRP X21, 0x789000
	0x03C5D358 LDRB W8, [X21 + 0x1EA]
	0x03C5D35C MOV X20, X1
	0x03C5D360 MOV X19, X0
	0x03C5D364 TBNZ X8, 0x0, 0x3C5D37C
	0x03C5D368 ADRP X0, 0x502000
	0x03C5D36C LDR X0, [X0 + 0xF98]
	0x03C5D370 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+208], X30
	003 Move [X31+224], X22
	004 Move [X31+232], X21
	005 Move [X31+240], X20
	006 Move [X31+248], X19
	007 Move V0, [X1]
	008 Move V1, [X0]
	009 Move X20, X0
	010 Move W0, W31
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move V0, [X1+4]
	013 Move V1, [X20+4]
	014 Move X19, X1
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Move V0, [X19+8]
	017 Move V1, [X20+8]
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move V0, [X19+12]
	020 Move V1, [X20+12]
	021 Move W0, W31
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 Move V0, [X19+16]
	024 Move V1, [X20+16]
	025 NotImplemented "Instruction FCMP not yet implemented."
	026 Move V0, [X19+20]
	027 Move V1, [X20+20]
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 Add X0, X31, 72
	030 Move W2, 136
	031 Move X1, X19
	032 Add X22, X31, 72
	033 Add X21, X20, 24
	034 Call 0x3EB2AC0
	035 Move V0, [X31+96]
	036 Move V1, [X31+112]
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 Add X1, X31, 0
	040 Move X0, X21
	041 Move X2, X31
	042 Move [X31], V0
	043 Move [X31+8], V1
	044 Move [X31+32], V2
	045 Move [X31+40], V3
	046 Call 0x2079B9C
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {93}
	051 Move V0, [X19+88]
	052 Move V1, [X20+88]
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move V0, [X19+92]
	055 Move V1, [X20+92]
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Move V0, [X19+96]
	058 Move V1, [X20+96]
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move V0, [X19+100]
	061 Move V1, [X20+100]
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move V0, [X19+104]
	064 Move V1, [X20+104]
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Move V0, [X19+108]
	067 Move V1, [X20+108]
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 Move V0, [X19+112]
	070 Move V1, [X20+112]
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move V0, [X19+116]
	073 Add X0, X20, 116
	074 Move X1, X31
	075 Call Single.Equals, X0, V0
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {93}
	080 Move W8, [X20+120]
	081 Move W9, [X19+120]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W8, [X20+124]
	084 Move W9, [X19+124]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W8, [X20+128]
	087 Move W9, [X19+128]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move W8, [X20+132]
	090 Move W9, [X19+132]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSET not yet implemented."
	093 Move W0, W31
	094 Move X20, [X31+240]
	095 Move X19, [X31+248]
	096 Move X22, [X31+224]
	097 Move X21, [X31+232]
	098 Move X30, [X31+208]
	099 Add X31, X31, 256
	100 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C5D374 MOVZ W8, 0x1
	0x03C5D378 STRB W8, [X21 + 0x1EA]
	0x03C5D37C CBZ X20, 0x3C5D398
	0x03C5D380 ADRP X8, 0x502000
	0x03C5D384 LDR X8, [X8 + 0xF98]
	0x03C5D388 LDR X9, [X20]
	0x03C5D38C LDR X8, [X8]
	0x03C5D390 CMP X9, X8
	0x03C5D394 B.EQ 0x3C5D3A8
	0x03C5D398 LDP X20, X19, [X31 + 0x10]
	0x03C5D39C MOV W0, W31
	0x03C5D3A0 LDP X30, X21, [X31], #0x20
	0x03C5D3A4 RET
	0x03C5D3A8 MOV X0, X20
	0x03C5D3AC BL 0x1C16E08
	0x03C5D3B0 LDR X1, [X0]
	0x03C5D3B4 LDR X0, [X19]
	0x03C5D3B8 LDP X20, X19, [X31 + 0x10]
	0x03C5D3BC MOV X2, X31
	0x03C5D3C0 LDP X30, X21, [X31], #0x20
	0x03C5D3C4 B 0x33BE5B0
	0x03C5D3C8 LDR X0, [X0]
	0x03C5D3CC MOV X2, X31
	0x03C5D3D0 B 0x33BE5B0
	0x03C5D3D4 STP X30, X19, [X31 - 0x10]!
	0x03C5D3D8 ADRP X19, 0x789000
	0x03C5D3DC LDR X0, [X19 + 0x1F0]
	0x03C5D3E0 CBNZ X0, 0x3C5D3F4
	0x03C5D3E4 ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C5D3E8 ADD X0, X0, 0x758
	0x03C5D3EC BL 0x1C16CB8
	0x03C5D3F0 STR X0, [X19 + 0x1F0]
	0x03C5D3F4 LDP X30, X19, [X31], #0x10
	0x03C5D3F8 BR X0
	0x03C5D3FC STR X30, [X31 - 0x20]!
	0x03C5D400 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], X30
	003 Move [X31+152], X21
	004 Move [X31+160], X20
	005 Move [X31+168], X19
	006 Move X21, 0x78A000
	007 Move W8, [X21+428]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x503000
	015 Move X0, [X0+3896]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+428], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x503000
	022 Move X8, [X8+3896]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move X1, X0
	030 Add X0, X31, 8
	031 Move W2, 136
	032 Call 0x3EB2AC0
	033 Add X1, X31, 8
	034 Move X0, X19
	035 Call VisibleReflectionProbe.Equals, X0, X1
	036 Move X20, [X31+160]
	037 Move X19, [X31+168]
	038 Move X30, [X31+144]
	039 Move X21, [X31+152]
	040 And W0, W0, 1
	041 Add X31, X31, 176
	042 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C5D404 ADRP X20, 0x789000
	0x03C5D408 LDR X1, [X20 + 0x1F8]
	0x03C5D40C MOV X19, X0
	0x03C5D410 CBNZ X1, 0x3C5D428
	0x03C5D414 ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C5D418 ADD X0, X0, 0xE63
	0x03C5D41C BL 0x1C16CB8
	0x03C5D420 MOV X1, X0
	0x03C5D424 STR X0, [X20 + 0x1F8]
	0x03C5D428 MOV X0, X19
	0x03C5D42C LDP X20, X19, [X31 + 0x10]
	0x03C5D430 LDR X30, [X31], #0x20
	0x03C5D434 BR X1
	0x03C5D438 STR X30, [X31 - 0x20]!
	0x03C5D43C STP X20, X19, [X31 + 0x10]
	0x03C5D440 ADRP X20, 0x789000
	0x03C5D444 LDR X1, [X20 + 0x200]
	0x03C5D448 MOV X19, X0
	0x03C5D44C CBNZ X1, 0x3C5D464
	0x03C5D450 ADRP X0, 0xFFFFFFFFFCEBB000
	0x03C5D454 ADD X0, X0, 0xED4
	0x03C5D458 BL 0x1C16CB8
	0x03C5D45C MOV X1, X0
	0x03C5D460 STR X0, [X20 + 0x200]
	0x03C5D464 MOV X0, X19
	0x03C5D468 LDP X20, X19, [X31 + 0x10]
	0x03C5D46C LDR X30, [X31], #0x20
	0x03C5D470 BR X1
	0x03C5D474 LDR X0, [X0]
	0x03C5D478 RET
	0x03C5D47C STP X30, X23, [X31 - 0x30]!
	0x03C5D480 STP X22, X21, [X31 + 0x10]
	0x03C5D484 STP X20, X19, [X31 + 0x20]
	0x03C5D488 STR X1, [X0]
	0x03C5D48C ADRP X22, 0x789000
	0x03C5D490 LDR X8, [X22 + 0x1F8]
	0x03C5D494 MOV X20, X1
	0x03C5D498 MOV X19, X0
	0x03C5D49C CBNZ X8, 0x3C5D4B4
	0x03C5D4A0 ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C5D4A4 ADD X0, X0, 0xE63
	0x03C5D4A8 BL 0x1C16CB8
	0x03C5D4AC MOV X8, X0
	0x03C5D4B0 STR X0, [X22 + 0x1F8]
	0x03C5D4B4 MOV X0, X20
	0x03C5D4B8 BLR X8
	0x03C5D4BC STR W0, [X19 + 0x8]
	0x03C5D4C0 ADRP X23, 0x789000
	0x03C5D4C4 LDR X8, [X23 + 0x1F0]
	0x03C5D4C8 MOV W21, W0
	0x03C5D4CC CBNZ X8, 0x3C5D4E4
	0x03C5D4D0 ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C5D4D4 ADD X0, X0, 0x758
	0x03C5D4D8 BL 0x1C16CB8
	0x03C5D4DC MOV X8, X0
	0x03C5D4E0 STR X0, [X23 + 0x1F0]
	0x03C5D4E4 BLR X8
	0x03C5D4E8 CMP W21, W0
	0x03C5D4EC B.CC 0x3C5D540
	0x03C5D4F0 ADRP X21, 0x789000
	0x03C5D4F4 LDR X8, [X21 + 0x200]
	0x03C5D4F8 CBNZ X8, 0x3C5D510
	0x03C5D4FC ADRP X0, 0xFFFFFFFFFCEBB000
	0x03C5D500 ADD X0, X0, 0xED4
	0x03C5D504 BL 0x1C16CB8
	0x03C5D508 MOV X8, X0
	0x03C5D50C STR X0, [X21 + 0x200]
	0x03C5D510 MOV X0, X20
	0x03C5D514 BLR X8
	0x03C5D518 LDR X8, [X22 + 0x1F8]
	0x03C5D51C CBNZ X8, 0x3C5D534
	0x03C5D520 ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C5D524 ADD X0, X0, 0xE63
	0x03C5D528 BL 0x1C16CB8
	0x03C5D52C MOV X8, X0
	0x03C5D530 STR X0, [X22 + 0x1F8]
	0x03C5D534 MOV X0, X20
	0x03C5D538 BLR X8
	0x03C5D53C STR W0, [X19 + 0x8]
	0x03C5D540 MOVZ W8, 0x1
	0x03C5D544 STRB W8, [X19 + 0xE]
	0x03C5D548 STRH W31, [X19 + 0xC]
	0x03C5D54C LDP X20, X19, [X31 + 0x20]
	0x03C5D550 LDP X22, X21, [X31 + 0x10]
	0x03C5D554 LDP X30, X23, [X31], #0x30
	0x03C5D558 RET
	0x03C5D55C LDR X0, [X0]
	0x03C5D560 RET
	0x03C5D564 STP X30, X21, [X31 - 0x20]!
	0x03C5D568 STP X20, X19, [X31 + 0x10]
	0x03C5D56C ADRP X21, 0x789000
	0x03C5D570 LDR X2, [X21 + 0x210]
	0x03C5D574 MOV X19, X1
	0x03C5D578 MOV X20, X0
	0x03C5D57C CBNZ X2, 0x3C5D594
	0x03C5D580 ADRP X0, 0xFFFFFFFFFCEBE000
	0x03C5D584 ADD X0, X0, 0x9F
	0x03C5D588 BL 0x1C16CB8
	0x03C5D58C MOV X2, X0
	0x03C5D590 STR X0, [X21 + 0x210]
	0x03C5D594 MOV X0, X20
	0x03C5D598 MOV X1, X19
	0x03C5D59C LDP X20, X19, [X31 + 0x10]
	0x03C5D5A0 LDP X30, X21, [X31], #0x20
	0x03C5D5A4 BR X2
	0x03C5D5A8 STP X30, X21, [X31 - 0x20]!
	0x03C5D5AC STP X20, X19, [X31 + 0x10]
	0x03C5D5B0 ADRP X21, 0x789000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move V0, [X0]
	011 Move V1, [X0+8]
	012 Move X19, X0
	013 Add X8, X31, 0
	014 Add X0, X31, 0
	015 Move X1, X31
	016 Or X20, X8, 7
	017 Add X21, X8, 8
	018 Move [X31], D0
	019 Move [X31+8], S1
	020 Call Single.GetHashCode, X0
	021 Move W22, W0
	022 Move X0, X20
	023 Move X1, X31
	024 Call Single.GetHashCode, X0
	025 Move W23, W0
	026 Move X0, X21
	027 Move X1, X31
	028 Call Single.GetHashCode, X0
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Move V1, [X19+20]
	031 Move W24, W0
	032 Add X0, X31, 0
	033 Move X1, X31
	034 Move [X31], D0
	035 Move [X31+8], S1
	036 Call Single.GetHashCode, X0
	037 Move W25, W0
	038 Move X0, X20
	039 Move X1, X31
	040 Call Single.GetHashCode, X0
	041 Move W20, W0
	042 Move X0, X21
	043 Move X1, X31
	044 Call Single.GetHashCode, X0
	045 Xor W9, W22, W23
	046 Xor W9, W9, W24
	047 Xor W9, W9, W25
	048 And W8, W0, 0xFFFFFFFC
	049 Xor W9, W9, W20
	050 Add X0, X19, 24
	051 Move X1, X31
	052 Xor W20, W9, W8
	053 Call 0x2478824
	054 Move W23, 397
	055 Multiply W8, W20, W23
	056 Xor W24, W8, W0
	057 Add X0, X19, 88
	058 Move X1, X31
	059 Call Single.GetHashCode, X0
	060 Move W20, W0
	061 Add X0, X19, 92
	062 Move X1, X31
	063 Call Single.GetHashCode, X0
	064 Move W21, W0
	065 Add X0, X19, 96
	066 Move X1, X31
	067 Call Single.GetHashCode, X0
	068 Move W22, W0
	069 Add X0, X19, 100
	070 Move X1, X31
	071 Call Single.GetHashCode, X0
	072 Xor W8, W20, W21
	073 Multiply W9, W24, W23
	074 Xor W8, W8, W9
	075 Xor W8, W8, W22
	076 Xor W22, W8, W0
	077 Add X0, X19, 104
	078 Move X1, X31
	079 Call Single.GetHashCode, X0
	080 Move W20, W0
	081 Add X0, X19, 108
	082 Move X1, X31
	083 Call Single.GetHashCode, X0
	084 Move W21, W0
	085 Add X0, X19, 112
	086 Move X1, X31
	087 Call Single.GetHashCode, X0
	088 Xor W8, W20, W21
	089 Multiply W9, W22, W23
	090 Xor W8, W8, W0
	091 Add X0, X19, 116
	092 Move X1, X31
	093 Xor W20, W8, W9
	094 Call Single.GetHashCode, X0
	095 Move W9, [X19+120]
	096 Move W10, [X19+124]
	097 Multiply W8, W20, W23
	098 Xor W8, W8, W0
	099 Multiply W8, W8, W23
	100 Xor W8, W8, W9
	101 Multiply W8, W8, W23
	102 Xor W8, W8, W10
	103 Move W9, [X19+128]
	104 Move W10, [X19+132]
	105 Multiply W8, W8, W23
	106 Move X20, [X31+64]
	107 Move X19, [X31+72]
	108 Move X22, [X31+48]
	109 Move X21, [X31+56]
	110 Xor W8, W8, W9
	111 Multiply W8, W8, W23
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Move X30, [X31+16]
	115 Move X25, [X31+24]
	116 Xor W0, W8, W10
	117 Add X31, X31, 80
	118 Return X0

