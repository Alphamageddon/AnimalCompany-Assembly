Type: UnityEngine.Rendering.RenderPipelineManager

Method: UnityEngine.Rendering.RenderPipeline get_currentPipeline()

Disassembly:
	0x03C56370 LDR X30, [X31 + 0x40]
	0x03C56374 ADD X31, X31, 0x50
	0x03C56378 RET
	0x03C5637C STR X30, [X31 - 0x10]!
	0x03C56380 MOVZ W2, 0x44
	0x03C56384 BL 0x3EB1B30
	0x03C56388 LDR X30, [X31], #0x10
	0x03C5638C RET
	0x03C56390 STUR X1, [X0 + 0x44]
	0x03C56394 STUR X2, [X0 + 0x4C]
	0x03C56398 RET
	0x03C5639C LDRH W0, [X0 + 0x54]
	0x03C563A0 RET
	0x03C563A4 STRH W1, [X0 + 0x54]
	0x03C563A8 RET
	0x03C563AC LDUR X8, [X0 + 0x56]
	0x03C563B0 LDUR W1, [X0 + 0x5E]
	0x03C563B4 MOV X0, X8
	0x03C563B8 RET
	0x03C563BC STUR X1, [X0 + 0x56]
	0x03C563C0 STUR W2, [X0 + 0x5E]
	0x03C563C4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x791000
	005 Move X19, 0x4FF000
	006 Move W8, [X20+106]
	007 Move X19, [X19+80]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4FF000
	013 Move X0, [X0+80]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+106], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_currentPipeline(UnityEngine.Rendering.RenderPipeline value)

Disassembly:
	0x03C563C8 LDR W0, [X0 + 0x64]
	0x03C563CC RET
	0x03C563D0 STR W1, [X0 + 0x64]
	0x03C563D4 RET
	0x03C563D8 LDR W0, [X0 + 0x68]
	0x03C563DC RET
	0x03C563E0 STR W1, [X0 + 0x68]
	0x03C563E4 RET
	0x03C563E8 SUB X31, X31, 0x80
	0x03C563EC STP X30, X23, [X31 + 0x50]
	0x03C563F0 STP X22, X21, [X31 + 0x60]
	0x03C563F4 STP X20, X19, [X31 + 0x70]
	0x03C563F8 ADRP X21, 0x790000
	0x03C563FC LDRB W8, [X21 + 0x81]
	0x03C56400 MOV X19, X1
	0x03C56404 MOV X20, X0
	0x03C56408 TBNZ X8, 0x0, 0x3C56420
	0x03C5640C ADRP X0, 0x509000
	0x03C56410 LDR X0, [X0 + 0xDB0]
	0x03C56414 BL 0x1C16CF4
	0x03C56418 MOVZ W8, 0x1
	0x03C5641C STRB W8, [X21 + 0x81]
	0x03C56420 ADD X0, X31, 0x8
	0x03C56424 MOVZ W2, 0x44
	0x03C56428 MOV X1, X19
	0x03C5642C BL 0x3EB1AC0
	0x03C56430 ADD X1, X31, 0x8
	0x03C56434 MOV X0, X20
	0x03C56438 BL 0x3C50CC8
	0x03C5643C TBZ X0, 0x0, 0x3C564D0
	0x03C56440 ADRP X8, 0x509000
	0x03C56444 LDR X8, [X8 + 0xDB0]
	0x03C56448 LDUR X22, [X19 + 0x44]
	0x03C5644C LDUR X21, [X19 + 0x4C]
	0x03C56450 ADD X23, X20, 0x44
	0x03C56454 LDR X0, [X8]
	0x03C56458 LDR W8, [X0 + 0xE0]
	0x03C5645C CBNZ W8, 0x3C56464
	0x03C56460 BL 0x1C16DFC
	0x03C56464 MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x791000
	006 Move W8, [X20+107]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x4FF000
	013 Move X0, [X0+80]
	014 Call 0x1C17CF4
	015 Move X0, 0x50A000
	016 Move X0, [X0+3536]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+107], W8
	020 Compare X19, 0
	021 JumpIfEqual {32}
	022 Move X0, X19
	023 Move X1, X31
	024 Call "il2cpp_vm_object_is_inst", X0
	025 Compare X0, 0
	026 JumpIfEqual {51}
	027 Move X8, [X0]
	028 Move X9, [X8+360]
	029 Move X1, [X8+368]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X20, X0
	032 Move X8, 0x50A000
	033 Move X8, [X8+3536]
	034 Move X20, [X8]
	035 Move X21, 0x4FF000
	036 Move X21, [X21+80]
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move [X8+16], X20
	045 Move [X8+24], X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void add_beginCameraRendering(System.Action`2<UnityEngine.Rendering.ScriptableRenderContext, UnityEngine.Camera> value)

Disassembly:
	0x03C56468 MOV X1, X22
	0x03C5646C MOV X2, X21
	0x03C56470 BL 0x3C543B0
	0x03C56474 TBZ X0, 0x0, 0x3C564D0
	0x03C56478 LDRH W8, [X19 + 0x54]
	0x03C5647C LDRB W9, [X20 + 0x54]
	0x03C56480 CMP W9, W8, UXTB
	0x03C56484 B.NE 0x3C564D0
	0x00000000 INVALID
	0x03C5648C UBFM W8, W8, 0x10, 0xF
	0x03C56490 CMP W9, W8, ASR
	0x03C56494 B.NE 0x3C564D0
	0x03C56498 LDUR X1, [X19 + 0x56]
	0x03C5649C LDUR W2, [X19 + 0x5E]
	0x03C564A0 ADD X0, X20, 0x56
	0x03C564A4 BL 0x3C564E8
	0x03C564A8 TBZ X0, 0x0, 0x3C564D0
	0x03C564AC LDR W8, [X20 + 0x64]
	0x03C564B0 LDR W9, [X19 + 0x64]
	0x03C564B4 CMP W8, W9
	0x03C564B8 B.NE 0x3C564D0
	0x03C564BC LDR W8, [X20 + 0x68]
	0x03C564C0 LDR W9, [X19 + 0x68]
	0x03C564C4 CMP W8, W9
	0x03C564C8 CSET W0, EQ
	0x03C564CC B 0x3C564D4
	0x03C564D0 MOV W0, W31
	0x03C564D4 LDP X20, X19, [X31 + 0x70]
	0x03C564D8 LDP X22, X21, [X31 + 0x60]
	0x03C564DC LDP X30, X23, [X31 + 0x50]
	0x03C564E0 ADD X31, X31, 0x80
	0x03C564E4 RET
	0x03C564E8 LDRB W8, [X0]
	0x03C564EC CMP W8, W1, UXTB
	0x03C564F0 B.NE 0x3C56590
	0x03C564F4 LDRB W8, [X0 + 0x1]
	0x03C564F8 UBFM X9, X1, 0x8, 0x1F
	0x03C564FC CMP W8, W9, UXTB
	0x03C56500 B.NE 0x3C56590
	0x03C56504 LDRB W8, [X0 + 0x2]
	0x03C56508 UBFM X9, X1, 0x10, 0x1F
	0x03C5650C CMP W8, W9, UXTB
	0x03C56510 B.NE 0x3C56590
	0x03C56514 LDRB W8, [X0 + 0x4]
	0x03C56518 UBFM X9, X1, 0x20, 0x3F
	0x03C5651C CMP W8, W9, UXTB
	0x03C56520 B.NE 0x3C56590
	0x03C56524 LDRB W8, [X0 + 0x5]
	0x03C56528 UBFM X9, X1, 0x28, 0x3F
	0x03C5652C CMP W8, W9, UXTB
	0x03C56530 B.NE 0x3C56590
	0x03C56534 LDRB W8, [X0 + 0x6]
	0x03C56538 UBFM X9, X1, 0x30, 0x3F
	0x03C5653C CMP W8, W9, UXTB
	0x03C56540 B.NE 0x3C56590
	0x03C56544 LDRB W8, [X0 + 0x7]
	0x03C56548 UBFM X9, X1, 0x38, 0x3F
	0x03C5654C CMP W8, W9
	0x03C56550 B.NE 0x3C56590
	0x03C56554 LDRB W8, [X0 + 0x8]
	0x03C56558 CMP W8, W2, UXTB

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x791000
	010 Move X24, 0x4FF000
	011 Move W8, [X20+108]
	012 Move X24, [X24+80]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4FF000
	019 Move X0, [X0+64]
	020 Call 0x1C17CF4
	021 Move X0, 0x4FF000
	022 Move X0, [X0+80]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+108], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X24]
	032 Move X8, [X0+184]
	033 Move X25, 0x4FF000
	034 Move X20, [X8+64]
	035 Move X25, [X25+64]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X31
	039 Call Delegate.Combine, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X23, [X25]
	043 Move X22, X0
	044 Move X1, X23
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {50}
	049 Move X21, X31
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X8, [X0+184]
	057 Move X1, X21
	058 Move X2, X20
	059 Add X0, X8, 64
	060 Call 0x1C25138
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, X0
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Return 
	072 Move X0, X22
	073 Move X1, X23
	074 Call 0x1C181E0

Method: System.Void remove_beginCameraRendering(System.Action`2<UnityEngine.Rendering.ScriptableRenderContext, UnityEngine.Camera> value)

Disassembly:
	0x03C5655C B.NE 0x3C56590
	0x03C56560 LDRB W8, [X0 + 0x9]
	0x03C56564 UBFM X9, X2, 0x8, 0x1F
	0x03C56568 CMP W8, W9, UXTB
	0x03C5656C B.NE 0x3C56590
	0x03C56570 LDRB W8, [X0 + 0xA]
	0x03C56574 UBFM X9, X2, 0x10, 0x1F
	0x03C56578 CMP W8, W9, UXTB
	0x03C5657C B.NE 0x3C56590
	0x03C56580 LDRB W8, [X0 + 0xB]
	0x03C56584 CMP W8, W2, LSR
	0x03C56588 CSET W0, EQ
	0x03C5658C RET
	0x03C56590 MOV W0, W31
	0x03C56594 RET
	0x03C56598 SUB X31, X31, 0x90
	0x03C5659C STP X30, X21, [X31 + 0x70]
	0x03C565A0 STP X20, X19, [X31 + 0x80]
	0x03C565A4 ADRP X21, 0x790000
	0x03C565A8 LDRB W8, [X21 + 0x82]
	0x03C565AC MOV X20, X1
	0x03C565B0 MOV X19, X0
	0x03C565B4 TBNZ X8, 0x0, 0x3C565CC
	0x03C565B8 ADRP X0, 0x4FF000
	0x03C565BC LDR X0, [X0 + 0x5E8]
	0x03C565C0 BL 0x1C16CF4
	0x03C565C4 MOVZ W8, 0x1
	0x03C565C8 STRB W8, [X21 + 0x82]
	0x03C565CC CBZ X20, 0x3C565E8
	0x03C565D0 ADRP X8, 0x4FF000
	0x03C565D4 LDR X8, [X8 + 0x5E8]
	0x03C565D8 LDR X9, [X20]
	0x03C565DC LDR X8, [X8]
	0x03C565E0 CMP X9, X8
	0x03C565E4 B.EQ 0x3C565F0
	0x03C565E8 MOV W0, W31
	0x03C565EC B 0x3C56614
	0x03C565F0 MOV X0, X20
	0x03C565F4 BL 0x1C16E08
	0x03C565F8 MOV X1, X0
	0x03C565FC ADD X0, X31, 0x0
	0x03C56600 MOVZ W2, 0x6C
	0x03C56604 BL 0x3EB1AC0
	0x03C56608 ADD X1, X31, 0x0
	0x03C5660C MOV X0, X19
	0x03C56610 BL 0x3C563E8
	0x03C56614 LDP X20, X19, [X31 + 0x80]
	0x03C56618 LDP X30, X21, [X31 + 0x70]
	0x03C5661C AND W0, W0, 0x1
	0x03C56620 ADD X31, X31, 0x90
	0x03C56624 RET
	0x03C56628 STR X30, [X31 - 0x30]!
	0x03C5662C STP X22, X21, [X31 + 0x10]
	0x03C56630 STP X20, X19, [X31 + 0x20]
	0x03C56634 ADRP X21, 0x790000
	0x03C56638 ADRP X20, 0x509000
	0x03C5663C LDRB W8, [X21 + 0x83]
	0x03C56640 LDR X20, [X20 + 0xDB0]
	0x03C56644 MOV X19, X0
	0x03C56648 TBNZ X8, 0x0, 0x3C56660
	0x03C5664C ADRP X0, 0x509000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x791000
	010 Move X24, 0x4FF000
	011 Move W8, [X20+109]
	012 Move X24, [X24+80]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4FF000
	019 Move X0, [X0+64]
	020 Call 0x1C17CF4
	021 Move X0, 0x4FF000
	022 Move X0, [X0+80]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+109], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X24]
	032 Move X8, [X0+184]
	033 Move X25, 0x4FF000
	034 Move X20, [X8+64]
	035 Move X25, [X25+64]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X31
	039 Call Delegate.Remove, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X23, [X25]
	043 Move X22, X0
	044 Move X1, X23
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {50}
	049 Move X21, X31
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X8, [X0+184]
	057 Move X1, X21
	058 Move X2, X20
	059 Add X0, X8, 64
	060 Call 0x1C25138
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, X0
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Return 
	072 Move X0, X22
	073 Move X1, X23
	074 Call 0x1C181E0

Method: System.Void add_endCameraRendering(System.Action`2<UnityEngine.Rendering.ScriptableRenderContext, UnityEngine.Camera> value)

Disassembly:
	0x03C56650 LDR X0, [X0 + 0xDB0]
	0x03C56654 BL 0x1C16CF4
	0x03C56658 MOVZ W8, 0x1
	0x03C5665C STRB W8, [X21 + 0x83]
	0x03C56660 MOV X0, X19
	0x03C56664 BL 0x3C50E8C
	0x03C56668 LDR X8, [X20]
	0x03C5666C MOV W20, W0
	0x03C56670 LDR W9, [X8 + 0xE0]
	0x03C56674 CBNZ W9, 0x3C56680
	0x03C56678 MOV X0, X8
	0x03C5667C BL 0x1C16DFC
	0x03C56680 ADD X0, X19, 0x44
	0x03C56684 BL 0x3C544CC
	0x03C56688 MOVZ W21, 0x18D
	0x03C5668C MUL W8, W20, W21
	0x03C56690 EOR W22, W0, W8, 0x0
	0x03C56694 ADD X0, X19, 0x54
	0x03C56698 MOV X1, X31
	0x03C5669C BL 0x3319718
	0x03C566A0 MOV W20, W0
	0x03C566A4 ADD X0, X19, 0x55
	0x03C566A8 MOV X1, X31
	0x03C566AC BL 0x338EF90
	0x03C566B0 MUL W8, W20, W21
	0x03C566B4 MUL W9, W22, W21
	0x03C566B8 EOR W8, W8, W0, 0x0
	0x03C566BC ADD X0, X19, 0x56
	0x03C566C0 EOR W20, W8, W9, 0x0
	0x03C566C4 BL 0x3C566F4
	0x03C566C8 LDP W9, W10, [X19 + 0x64]
	0x03C566CC MUL W8, W20, W21
	0x03C566D0 EOR W8, W8, W0, 0x0
	0x03C566D4 MUL W8, W8, W21
	0x03C566D8 EOR W8, W8, W9, 0x0
	0x03C566DC MUL W8, W8, W21
	0x03C566E0 LDP X20, X19, [X31 + 0x20]
	0x03C566E4 LDP X22, X21, [X31 + 0x10]
	0x03C566E8 EOR W0, W8, W10, 0x0
	0x03C566EC LDR X30, [X31], #0x30
	0x03C566F0 RET
	0x03C566F4 STP X30, X21, [X31 - 0x20]!
	0x03C566F8 STP X20, X19, [X31 + 0x10]
	0x03C566FC MOV X1, X31
	0x03C56700 MOV X19, X0
	0x03C56704 BL 0x3319718
	0x03C56708 MOV W20, W0
	0x03C5670C ADD X0, X19, 0x1
	0x03C56710 MOV X1, X31
	0x03C56714 BL 0x3319718
	0x03C56718 MOVZ W21, 0x18D
	0x03C5671C MUL W8, W20, W21
	0x03C56720 EOR W20, W8, W0, 0x0
	0x03C56724 ADD X0, X19, 0x2
	0x03C56728 MOV X1, X31
	0x03C5672C BL 0x3319718
	0x03C56730 MUL W8, W20, W21
	0x03C56734 EOR W20, W8, W0, 0x0
	0x03C56738 ADD X0, X19, 0x4
	0x03C5673C MOV X1, X31
	0x03C56740 BL 0x3319718

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x791000
	010 Move X24, 0x4FF000
	011 Move W8, [X20+110]
	012 Move X24, [X24+80]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4FF000
	019 Move X0, [X0+64]
	020 Call 0x1C17CF4
	021 Move X0, 0x4FF000
	022 Move X0, [X0+80]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+110], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X24]
	032 Move X8, [X0+184]
	033 Move X25, 0x4FF000
	034 Move X20, [X8+72]
	035 Move X25, [X25+64]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X31
	039 Call Delegate.Combine, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X23, [X25]
	043 Move X22, X0
	044 Move X1, X23
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {50}
	049 Move X21, X31
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X8, [X0+184]
	057 Move X1, X21
	058 Move X2, X20
	059 Add X0, X8, 72
	060 Call 0x1C25138
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, X0
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Return 
	072 Move X0, X22
	073 Move X1, X23
	074 Call 0x1C181E0

Method: System.Void remove_endCameraRendering(System.Action`2<UnityEngine.Rendering.ScriptableRenderContext, UnityEngine.Camera> value)

Disassembly:
	0x03C56744 MUL W8, W20, W21
	0x03C56748 EOR W20, W8, W0, 0x0
	0x03C5674C ADD X0, X19, 0x5
	0x03C56750 MOV X1, X31
	0x03C56754 BL 0x3319718
	0x03C56758 MUL W8, W20, W21
	0x03C5675C EOR W20, W8, W0, 0x0
	0x03C56760 ADD X0, X19, 0x6
	0x03C56764 MOV X1, X31
	0x03C56768 BL 0x3319718
	0x03C5676C MUL W8, W20, W21
	0x03C56770 EOR W20, W8, W0, 0x0
	0x03C56774 ADD X0, X19, 0x7
	0x03C56778 MOV X1, X31
	0x03C5677C BL 0x3319718
	0x03C56780 MUL W8, W20, W21
	0x03C56784 EOR W20, W8, W0, 0x0
	0x03C56788 ADD X0, X19, 0x8
	0x03C5678C MOV X1, X31
	0x03C56790 BL 0x3319718
	0x03C56794 MUL W8, W20, W21
	0x03C56798 EOR W20, W8, W0, 0x0
	0x03C5679C ADD X0, X19, 0x9
	0x03C567A0 MOV X1, X31
	0x03C567A4 BL 0x3319718
	0x03C567A8 MUL W8, W20, W21
	0x03C567AC EOR W20, W8, W0, 0x0
	0x03C567B0 ADD X0, X19, 0xA
	0x03C567B4 MOV X1, X31
	0x03C567B8 BL 0x3319718
	0x03C567BC MUL W8, W20, W21
	0x03C567C0 EOR W20, W8, W0, 0x0
	0x03C567C4 ADD X0, X19, 0xB
	0x03C567C8 MOV X1, X31
	0x03C567CC BL 0x3319718
	0x03C567D0 MUL W8, W20, W21
	0x03C567D4 LDP X20, X19, [X31 + 0x10]
	0x03C567D8 EOR W0, W8, W0, 0x0
	0x03C567DC LDP X30, X21, [X31], #0x20
	0x03C567E0 RET
	0x03C567E4 STRB W1, [X0]
	0x03C567E8 STRB W2, [X0 + 0x1]
	0x03C567EC STRB W3, [X0 + 0x2]
	0x03C567F0 STRB W4, [X0 + 0x3]
	0x03C567F4 STRB W5, [X0 + 0x4]
	0x03C567F8 STRB W6, [X0 + 0x5]
	0x03C567FC STRB W7, [X0 + 0x6]
	0x03C56800 STRB W31, [X0 + 0x7]
	0x03C56804 RET
	0x03C56808 STP X30, X21, [X31 - 0x20]!
	0x03C5680C STP X20, X19, [X31 + 0x10]
	0x03C56810 ADRP X21, 0x790000
	0x03C56814 LDRB W8, [X21 + 0x84]
	0x03C56818 MOV X20, X1
	0x03C5681C MOV X19, X0
	0x03C56820 TBNZ X8, 0x0, 0x3C56838
	0x03C56824 ADRP X0, 0x509000
	0x03C56828 LDR X0, [X0 + 0xDE8]
	0x03C5682C BL 0x1C16CF4
	0x03C56830 MOVZ W8, 0x1
	0x03C56834 STRB W8, [X21 + 0x84]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x791000
	010 Move X24, 0x4FF000
	011 Move W8, [X20+111]
	012 Move X24, [X24+80]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4FF000
	019 Move X0, [X0+64]
	020 Call 0x1C17CF4
	021 Move X0, 0x4FF000
	022 Move X0, [X0+80]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+111], W8
	026 Move X0, [X24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X24]
	032 Move X8, [X0+184]
	033 Move X25, 0x4FF000
	034 Move X20, [X8+72]
	035 Move X25, [X25+64]
	036 Move X0, X20
	037 Move X1, X19
	038 Move X2, X31
	039 Call Delegate.Remove, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {49}
	042 Move X23, [X25]
	043 Move X22, X0
	044 Move X1, X23
	045 Call 0x1C17E00
	046 Move X21, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {50}
	049 Move X21, X31
	050 Move X0, [X24]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {56}
	054 Call 0x1C17DFC
	055 Move X0, [X24]
	056 Move X8, [X0+184]
	057 Move X1, X21
	058 Move X2, X20
	059 Add X0, X8, 72
	060 Call 0x1C25138
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X20, X0
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Move X25, [X31+72]
	071 Return 
	072 Move X0, X22
	073 Move X1, X23
	074 Call 0x1C181E0

Method: System.Void BeginContextRendering(UnityEngine.Rendering.ScriptableRenderContext context, System.Collections.Generic.List`1<UnityEngine.Camera> cameras)

Disassembly:
	0x03C55600 LDR W8, [X0 + 0xE0]
	0x03C55604 CBNZ W8, 0x3C55610
	0x03C55608 BL 0x1C16DFC
	0x03C5560C LDR X0, [X24]
	0x03C55610 LDR X8, [X0 + 0xB8]
	0x03C55614 MOV X1, X21
	0x03C55618 MOV X2, X20
	0x03C5561C ADD X0, X8, 0x40
	0x03C55620 BL 0x1C24138
	0x03C55624 CMP X20, X0
	0x03C55628 MOV X20, X0
	0x03C5562C B.NE 0x3C555C8
	0x03C55630 LDP X20, X19, [X31 + 0x30]
	0x03C55634 LDP X22, X21, [X31 + 0x20]
	0x03C55638 LDP X24, X23, [X31 + 0x10]
	0x03C5563C LDP X30, X25, [X31], #0x40
	0x03C55640 RET
	0x03C55644 MOV X0, X22
	0x03C55648 MOV X1, X23
	0x03C5564C BL 0x1C171E0
	0x03C55650 STP X30, X25, [X31 - 0x40]!
	0x03C55654 STP X24, X23, [X31 + 0x10]
	0x03C55658 STP X22, X21, [X31 + 0x20]
	0x03C5565C STP X20, X19, [X31 + 0x30]
	0x03C55660 ADRP X20, 0x791000
	0x03C55664 ADRP X24, 0x4FF000
	0x03C55668 LDRB W8, [X20 + 0x6E]
	0x03C5566C LDR X24, [X24 + 0x50]
	0x03C55670 MOV X19, X0
	0x03C55674 TBNZ X8, 0x0, 0x3C55698
	0x03C55678 ADRP X0, 0x4FF000
	0x03C5567C LDR X0, [X0 + 0x40]
	0x03C55680 BL 0x1C16CF4
	0x03C55684 ADRP X0, 0x4FF000
	0x03C55688 LDR X0, [X0 + 0x50]
	0x03C5568C BL 0x1C16CF4
	0x03C55690 MOVZ W8, 0x1
	0x03C55694 STRB W8, [X20 + 0x6E]
	0x03C55698 LDR X0, [X24]
	0x03C5569C LDR W8, [X0 + 0xE0]
	0x03C556A0 CBNZ W8, 0x3C556AC
	0x03C556A4 BL 0x1C16DFC
	0x03C556A8 LDR X0, [X24]
	0x03C556AC LDR X8, [X0 + 0xB8]
	0x03C556B0 ADRP X25, 0x4FF000
	0x03C556B4 LDR X20, [X8 + 0x48]
	0x03C556B8 LDR X25, [X25 + 0x40]
	0x03C556BC MOV X0, X20
	0x03C556C0 MOV X1, X19
	0x03C556C4 MOV X2, X31
	0x03C556C8 BL 0x33C0DE4
	0x03C556CC CBZ X0, 0x3C556EC
	0x03C556D0 LDR X23, [X25]
	0x03C556D4 MOV X22, X0
	0x03C556D8 MOV X1, X23
	0x03C556DC BL 0x1C16E00
	0x03C556E0 MOV X21, X0
	0x03C556E4 CBNZ X0, 0x3C556F0
	0x03C556E8 B 0x3C55738
	0x03C556EC MOV X21, X31
	0x03C556F0 LDR X0, [X24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x792000
	007 Move X21, 0x500000
	008 Move W8, [X22+112]
	009 Move X21, [X21+80]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4C8000
	017 Move X0, [X0+2192]
	018 Call 0x1C17CF4
	019 Move X0, 0x500000
	020 Move X0, [X0+80]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+112], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X8, [X8+48]
	032 Compare X8, 0
	033 JumpIfEqual {41}
	034 Move X9, [X8+24]
	035 Move X0, [X8+64]
	036 Move X3, [X8+40]
	037 Move X1, X19
	038 Move X2, X20
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X21]
	046 Move X8, [X0+184]
	047 Move X21, [X8+32]
	048 Compare X21, 0
	049 JumpIfEqual {69}
	050 Compare X20, 0
	051 JumpIfEqual {75}
	052 Move X8, 0x4C8000
	053 Move X8, [X8+2192]
	054 Move X0, X20
	055 Move X1, [X8]
	056 Call List`1<Object>.ToArray, X0
	057 Move X8, [X21+64]
	058 Move X4, [X21+24]
	059 Move X3, [X21+40]
	060 Move X1, X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X2, X0
	066 Move X0, X8
	067 Move X30, [X31+48]
	068 CallNoReturn X4
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Call 0x1C17F20

Method: System.Void BeginCameraRendering(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Camera camera)

Disassembly:
	0x03C55758 ADRP X24, 0x4FF000
	0x03C5575C LDRB W8, [X20 + 0x6F]
	0x03C55760 LDR X24, [X24 + 0x50]
	0x03C55764 MOV X19, X0
	0x03C55768 TBNZ X8, 0x0, 0x3C5578C
	0x03C5576C ADRP X0, 0x4FF000
	0x03C55770 LDR X0, [X0 + 0x40]
	0x03C55774 BL 0x1C16CF4
	0x03C55778 ADRP X0, 0x4FF000
	0x03C5577C LDR X0, [X0 + 0x50]
	0x03C55780 BL 0x1C16CF4
	0x03C55784 MOVZ W8, 0x1
	0x03C55788 STRB W8, [X20 + 0x6F]
	0x03C5578C LDR X0, [X24]
	0x03C55790 LDR W8, [X0 + 0xE0]
	0x03C55794 CBNZ W8, 0x3C557A0
	0x03C55798 BL 0x1C16DFC
	0x03C5579C LDR X0, [X24]
	0x03C557A0 LDR X8, [X0 + 0xB8]
	0x03C557A4 ADRP X25, 0x4FF000
	0x03C557A8 LDR X20, [X8 + 0x48]
	0x03C557AC LDR X25, [X25 + 0x40]
	0x03C557B0 MOV X0, X20
	0x03C557B4 MOV X1, X19
	0x03C557B8 MOV X2, X31
	0x03C557BC BL 0x33C0FDC
	0x03C557C0 CBZ X0, 0x3C557E0
	0x03C557C4 LDR X23, [X25]
	0x03C557C8 MOV X22, X0
	0x03C557CC MOV X1, X23
	0x03C557D0 BL 0x1C16E00
	0x03C557D4 MOV X21, X0
	0x03C557D8 CBNZ X0, 0x3C557E4
	0x03C557DC B 0x3C5582C
	0x03C557E0 MOV X21, X31
	0x03C557E4 LDR X0, [X24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x792000
	007 Move X21, 0x500000
	008 Move W8, [X22+113]
	009 Move X21, [X21+80]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x500000
	017 Move X0, [X0+80]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+113], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X8, [X8+64]
	029 Compare X8, 0
	030 JumpIfEqual {42}
	031 Move X4, [X8+24]
	032 Move X0, [X8+64]
	033 Move X3, [X8+40]
	034 Move X1, X20
	035 Move X2, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 CallNoReturn X4
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 

Method: System.Void EndContextRendering(UnityEngine.Rendering.ScriptableRenderContext context, System.Collections.Generic.List`1<UnityEngine.Camera> cameras)

Disassembly:
	0x03C5584C LDR X19, [X19 + 0x50]
	0x03C55850 TBNZ X8, 0x0, 0x3C55868
	0x03C55854 ADRP X0, 0x4FF000
	0x03C55858 LDR X0, [X0 + 0x50]
	0x03C5585C BL 0x1C16CF4
	0x03C55860 MOVZ W8, 0x1
	0x03C55864 STRB W8, [X20 + 0x74]
	0x03C55868 LDR X0, [X19]
	0x03C5586C LDR W8, [X0 + 0xE0]
	0x03C55870 CBNZ W8, 0x3C5587C
	0x03C55874 BL 0x1C16DFC
	0x03C55878 LDR X0, [X19]
	0x03C5587C LDR X8, [X0 + 0xB8]
	0x03C55880 LDR X8, [X8 + 0x50]
	0x03C55884 CBZ X8, 0x3C558A0
	0x03C55888 LDR X2, [X8 + 0x18]
	0x03C5588C LDR X0, [X8 + 0x40]
	0x03C55890 LDR X1, [X8 + 0x28]
	0x03C55894 LDP X20, X19, [X31 + 0x10]
	0x03C55898 LDR X30, [X31], #0x20
	0x03C5589C BR X2
	0x03C558A0 LDP X20, X19, [X31 + 0x10]
	0x03C558A4 LDR X30, [X31], #0x20
	0x03C558A8 RET
	0x03C558AC STR X30, [X31 - 0x30]!
	0x03C558B0 STP X22, X21, [X31 + 0x10]
	0x03C558B4 STP X20, X19, [X31 + 0x20]
	0x03C558B8 ADRP X22, 0x791000
	0x03C558BC ADRP X21, 0x4FF000
	0x03C558C0 LDRB W8, [X22 + 0x75]
	0x03C558C4 LDR X21, [X21 + 0x50]
	0x03C558C8 MOV X19, X1
	0x03C558CC MOV X20, X0
	0x03C558D0 TBNZ X8, 0x0, 0x3C558F4
	0x03C558D4 ADRP X0, 0x509000
	0x03C558D8 LDR X0, [X0 + 0xD88]
	0x03C558DC BL 0x1C16CF4
	0x03C558E0 ADRP X0, 0x4FF000
	0x03C558E4 LDR X0, [X0 + 0x50]
	0x03C558E8 BL 0x1C16CF4
	0x03C558EC MOVZ W8, 0x1
	0x03C558F0 STRB W8, [X22 + 0x75]
	0x03C558F4 LDR X0, [X21]
	0x03C558F8 LDR W8, [X0 + 0xE0]
	0x03C558FC CBNZ W8, 0x3C55908
	0x03C55900 BL 0x1C16DFC
	0x03C55904 LDR X0, [X21]
	0x03C55908 LDR X8, [X0 + 0xB8]
	0x03C5590C LDR X8, [X8 + 0x58]
	0x03C55910 CBZ X8, 0x3C55944
	0x03C55914 ADRP X9, 0x509000
	0x03C55918 LDR X9, [X9 + 0xD88]
	0x03C5591C LDR X9, [X9]
	0x03C55920 CBZ X20, 0x3C55938
	0x03C55924 LDR X10, [X20]
	0x03C55928 LDRB W11, [X9 + 0x130]
	0x03C5592C LDRB W12, [X10 + 0x130]
	0x03C55930 CMP W12, W11
	0x03C55934 B.CS 0x3C55954
	0x03C55938 MOV X1, X31
	0x03C5593C CBNZ X19, 0x3C5596C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x792000
	007 Move X21, 0x500000
	008 Move W8, [X22+114]
	009 Move X21, [X21+80]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4C8000
	017 Move X0, [X0+2192]
	018 Call 0x1C17CF4
	019 Move X0, 0x500000
	020 Move X0, [X0+80]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+114], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X22, [X8+40]
	032 Compare X22, 0
	033 JumpIfEqual {49}
	034 Compare X19, 0
	035 JumpIfEqual {75}
	036 Move X8, 0x4C8000
	037 Move X8, [X8+2192]
	038 Move X0, X19
	039 Move X1, [X8]
	040 Call List`1<Object>.ToArray, X0
	041 Move X8, [X22+64]
	042 Move X9, [X22+24]
	043 Move X3, [X22+40]
	044 Move X2, X0
	045 Move X0, X8
	046 Move X1, X20
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X21]
	054 Move X8, [X0+184]
	055 Move X8, [X8+56]
	056 Compare X8, 0
	057 JumpIfEqual {69}
	058 Move X4, [X8+24]
	059 Move X0, [X8+64]
	060 Move X3, [X8+40]
	061 Move X1, X20
	062 Move X2, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 CallNoReturn X4
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Call 0x1C17F20

Method: System.Void EndCameraRendering(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Camera camera)

Disassembly:
	0x03C559A4 LDR X3, [X8 + 0x28]
	0x03C559A8 LDP X20, X19, [X31 + 0x20]
	0x03C559AC LDP X22, X21, [X31 + 0x10]
	0x03C559B0 LDR X30, [X31], #0x30
	0x03C559B4 BR X4
	0x03C559B8 STP X30, X21, [X31 - 0x20]!
	0x03C559BC STP X20, X19, [X31 + 0x10]
	0x03C559C0 ADRP X21, 0x791000
	0x03C559C4 ADRP X20, 0x4FF000
	0x03C559C8 LDRB W8, [X21 + 0x76]
	0x03C559CC LDR X20, [X20 + 0x50]
	0x03C559D0 MOV X19, X0
	0x03C559D4 TBNZ X8, 0x0, 0x3C559EC
	0x03C559D8 ADRP X0, 0x4FF000
	0x03C559DC LDR X0, [X0 + 0x50]
	0x03C559E0 BL 0x1C16CF4
	0x03C559E4 MOVZ W8, 0x1
	0x03C559E8 STRB W8, [X21 + 0x76]
	0x03C559EC LDR X0, [X20]
	0x03C559F0 LDR W8, [X0 + 0xE0]
	0x03C559F4 CBNZ W8, 0x3C55A00
	0x03C559F8 BL 0x1C16DFC
	0x03C559FC LDR X0, [X20]
	0x03C55A00 LDR X8, [X0 + 0xB8]
	0x03C55A04 LDR X8, [X8]
	0x03C55A08 CMP X8, X19
	0x03C55A0C B.EQ 0x3C55A2C
	0x03C55A10 LDR W8, [X0 + 0xE0]
	0x03C55A14 CBNZ W8, 0x3C55A1C
	0x03C55A18 BL 0x1C16DFC
	0x03C55A1C BL 0x3C550AC
	0x03C55A20 LDR X8, [X20]
	0x03C55A24 LDR X8, [X8 + 0xB8]
	0x03C55A28 STR X19, [X8]
	0x03C55A2C LDP X20, X19, [X31 + 0x10]
	0x03C55A30 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x792000
	007 Move X21, 0x500000
	008 Move W8, [X22+115]
	009 Move X21, [X21+80]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x500000
	017 Move X0, [X0+80]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+115], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X8, [X8+72]
	029 Compare X8, 0
	030 JumpIfEqual {42}
	031 Move X4, [X8+24]
	032 Move X0, [X8+64]
	033 Move X3, [X8+40]
	034 Move X1, X20
	035 Move X2, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 CallNoReturn X4
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 

Method: System.Void OnActiveRenderPipelineTypeChanged()

Disassembly:
	0x03C56838 CBZ X20, 0x3C56854
	0x03C5683C ADRP X8, 0x509000
	0x03C56840 LDR X8, [X8 + 0xDE8]
	0x03C56844 LDR X9, [X20]
	0x03C56848 LDR X8, [X8]
	0x03C5684C CMP X9, X8
	0x03C56850 B.EQ 0x3C56864
	0x03C56854 LDP X20, X19, [X31 + 0x10]
	0x03C56858 MOV W0, W31
	0x03C5685C LDP X30, X21, [X31], #0x20
	0x03C56860 RET
	0x03C56864 MOV X0, X20
	0x03C56868 BL 0x1C16E08
	0x03C5686C LDR X1, [X0]
	0x03C56870 MOV X0, X19
	0x03C56874 LDP X20, X19, [X31 + 0x10]
	0x03C56878 LDP X30, X21, [X31], #0x20
	0x03C5687C B 0x3C50D88
	0x03C56880 STP X30, X21, [X31 - 0x20]!
	0x03C56884 STP X20, X19, [X31 + 0x10]
	0x03C56888 ADRP X20, 0x790000
	0x03C5688C ADRP X21, 0x4C8000
	0x03C56890 LDRB W8, [X20 + 0x85]
	0x03C56894 LDR X21, [X21 + 0x720]
	0x03C56898 MOV X19, X0
	0x03C5689C TBNZ X8, 0x0, 0x3C568B4
	0x03C568A0 ADRP X0, 0x4C8000
	0x03C568A4 LDR X0, [X0 + 0x720]
	0x03C568A8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x791000
	005 Move X19, 0x4FF000
	006 Move W8, [X20+116]
	007 Move X19, [X19+80]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4FF000
	013 Move X0, [X0+80]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+116], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X8, [X8+80]
	025 Compare X8, 0
	026 JumpIfEqual {34}
	027 Move X2, [X8+24]
	028 Move X0, [X8+64]
	029 Move X1, [X8+40]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 CallNoReturn X2
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return 

Method: System.Void OnActiveRenderPipelineAssetChanged(UnityEngine.ScriptableObject from, UnityEngine.ScriptableObject to)

Disassembly:
	0x03C568AC MOVZ W8, 0x1
	0x03C568B0 STRB W8, [X20 + 0x85]
	0x03C568B4 LDR X0, [X21]
	0x03C568B8 LDR W8, [X0 + 0xE0]
	0x03C568BC CBNZ W8, 0x3C568C4
	0x03C568C0 BL 0x1C16DFC
	0x03C568C4 ADRP X20, 0x790000
	0x03C568C8 LDR X1, [X20 + 0x88]
	0x03C568CC CBNZ X1, 0x3C568E4
	0x03C568D0 ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C568D4 ADD X0, X0, 0x5A0
	0x03C568D8 BL 0x1C16CB8
	0x03C568DC MOV X1, X0
	0x03C568E0 STR X0, [X20 + 0x88]
	0x03C568E4 MOV X0, X19
	0x03C568E8 LDP X20, X19, [X31 + 0x10]
	0x03C568EC LDP X30, X21, [X31], #0x20
	0x03C568F0 BR X1
	0x03C568F4 STR X30, [X31 - 0x20]!
	0x03C568F8 STP X20, X19, [X31 + 0x10]
	0x03C568FC ADRP X20, 0x790000
	0x03C56900 LDR X1, [X20 + 0x88]
	0x03C56904 MOV X19, X0
	0x03C56908 CBNZ X1, 0x3C56920
	0x03C5690C ADRP X0, 0xFFFFFFFFFCE9D000
	0x03C56910 ADD X0, X0, 0x5A0
	0x03C56914 BL 0x1C16CB8
	0x03C56918 MOV X1, X0
	0x03C5691C STR X0, [X20 + 0x88]
	0x03C56920 MOV X0, X19
	0x03C56924 LDP X20, X19, [X31 + 0x10]
	0x03C56928 LDR X30, [X31], #0x20
	0x03C5692C BR X1
	0x03C56930 STR X1, [X0]
	0x03C56934 STP W31, W31, [X0 + 0xC]
	0x03C56938 STR W2, [X0 + 0x8]
	0x03C5693C RET
	0x03C56940 STR X30, [X31 - 0x20]!
	0x03C56944 STP X20, X19, [X31 + 0x10]
	0x03C56948 ADRP X19, 0x790000
	0x03C5694C ADRP X20, 0x4C8000
	0x03C56950 LDRB W8, [X19 + 0x86]
	0x03C56954 LDR X20, [X20 + 0x720]
	0x03C56958 TBNZ X8, 0x0, 0x3C56970
	0x03C5695C ADRP X0, 0x4C8000
	0x03C56960 LDR X0, [X0 + 0x720]
	0x03C56964 BL 0x1C16CF4
	0x03C56968 MOVZ W8, 0x1
	0x03C5696C STRB W8, [X19 + 0x86]
	0x03C56970 LDR X8, [X20]
	0x03C56974 ADRP X9, 0xFFFFFFFFFCE94000
	0x03C56978 LDR V0, [X9 + 0xFD]
	0x03C5697C LDP X20, X19, [X31 + 0x10]
	0x03C56980 LDR X8, [X8 + 0xB8]
	0x03C56984 STR X31, [X8]
	0x03C56988 STUR V0, [X8 + 0x8]
	0x03C5698C LDR X30, [X31], #0x20
	0x03C56990 RET
	0x03C56994 STR X30, [X31 - 0x20]!
	0x03C56998 STP X20, X19, [X31 + 0x10]
	0x03C5699C ADRP X20, 0x790000
	0x03C569A0 LDRB W8, [X20 + 0x90]
	0x03C569A4 MOV X19, X0
	0x03C569A8 TBNZ X8, 0x0, 0x3C569CC
	0x03C569AC ADRP X0, 0x509000
	0x03C569B0 LDR X0, [X0 + 0xDF0]
	0x03C569B4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x791000
	007 Move X21, 0x4FF000
	008 Move W8, [X22+117]
	009 Move X21, [X21+80]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x509000
	017 Move X0, [X0+3464]
	018 Call 0x1C17CF4
	019 Move X0, 0x4FF000
	020 Move X0, [X0+80]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+117], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X8, [X8+88]
	032 Compare X8, 0
	033 JumpIfEqual {46}
	034 Move X9, 0x509000
	035 Move X9, [X9+3464]
	036 Move X9, [X9]
	037 Compare X20, 0
	038 JumpIfEqual {43}
	039 Move X10, [X20]
	040 Move W11, [X9+304]
	041 Move W12, [X10+304]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X1, X31
	044 Compare X19, 0
	045 JumpIfNotEqual {59}
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return 
	052 Move X10, [X10+200]
	053 Add X10, X10, X11
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Compare X19, 0
	058 JumpIfEqual {63}
	059 Move X10, [X19]
	060 Move W11, [X9+304]
	061 Move W12, [X10+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X2, X31
	064 Move X10, [X10+200]
	065 Add X10, X10, X11
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move X4, [X8+24]
	070 Move X0, [X8+64]
	071 Move X3, [X8+40]
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 CallNoReturn X4

Method: System.Void HandleRenderPipelineChange(UnityEngine.Rendering.RenderPipelineAsset pipelineAsset)

Disassembly:
	0x03C569B8 ADRP X0, 0x509000
	0x03C569BC LDR X0, [X0 + 0xDF8]
	0x03C569C0 BL 0x1C16CF4
	0x03C569C4 MOVZ W8, 0x1
	0x03C569C8 STRB W8, [X20 + 0x90]
	0x03C569CC LDRB W8, [X19 + 0xF8]!
	0x03C569D0 CBZ W8, 0x3C569F0
	0x03C569D4 ADRP X8, 0x509000
	0x03C569D8 LDR X8, [X8 + 0xDF8]
	0x03C569DC MOV X0, X19
	0x03C569E0 LDR X1, [X8]
	0x03C569E4 BL 0x242C804
	0x03C569E8 MOV X0, X1
	0x03C569EC B 0x3C569F4
	0x03C569F0 MOV W0, W31
	0x03C569F4 LDP X20, X19, [X31 + 0x10]
	0x03C569F8 LDR X30, [X31], #0x20
	0x03C569FC RET
	0x03C56A00 STR X30, [X31 - 0x20]!
	0x03C56A04 STP X20, X19, [X31 + 0x10]
	0x03C56A08 ADRP X20, 0x790000
	0x03C56A0C LDRB W8, [X20 + 0x91]
	0x03C56A10 MOV X19, X0
	0x03C56A14 TBNZ X8, 0x0, 0x3C56A44
	0x03C56A18 ADRP X0, 0x509000
	0x03C56A1C LDR X0, [X0 + 0xE00]
	0x03C56A20 BL 0x1C16CF4
	0x03C56A24 ADRP X0, 0x509000
	0x03C56A28 LDR X0, [X0 + 0xE08]
	0x03C56A2C BL 0x1C16CF4
	0x03C56A30 ADRP X0, 0x509000
	0x03C56A34 LDR X0, [X0 + 0xE10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x791000
	006 Move X20, 0x4FF000
	007 Move W8, [X21+118]
	008 Move X20, [X20+80]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4FF000
	015 Move X0, [X0+80]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+118], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X8, [X8]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Call RenderPipelineManager.CleanupRenderPipeline
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move [X8], X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 

Method: System.Void CleanupRenderPipeline()

Disassembly:
	0x03C560AC MOVZ X0, 0x9C4
	0x03C560B0 RET
	0x03C560B4 MOVZ X0, 0x9C5
	0x03C560B8 MOVK X0, 0x1388
	0x03C560BC RET
	0x03C560C0 STP X30, X21, [X31 - 0x20]!
	0x03C560C4 STP X20, X19, [X31 + 0x10]
	0x03C560C8 ADRP X21, 0x790000
	0x03C560CC LDRB W8, [X21 + 0x7D]
	0x03C560D0 MOV X20, X1
	0x03C560D4 MOV X19, X0
	0x03C560D8 TBNZ X8, 0x0, 0x3C560F0
	0x03C560DC ADRP X0, 0x4C6000
	0x03C560E0 LDR X0, [X0 + 0xD28]
	0x03C560E4 BL 0x1C16CF4
	0x03C560E8 MOVZ W8, 0x1
	0x03C560EC STRB W8, [X21 + 0x7D]
	0x03C560F0 CBZ X20, 0x3C56164
	0x03C560F4 ADRP X21, 0x4C6000
	0x03C560F8 LDR X21, [X21 + 0xD28]
	0x03C560FC LDR X8, [X20]
	0x03C56100 LDR X0, [X21]
	0x03C56104 CMP X8, X0
	0x03C56108 B.NE 0x3C56164
	0x03C5610C LDR W8, [X0 + 0xE0]
	0x03C56110 CBZ W8, 0x3C5611C
	0x03C56114 MOV X1, X0
	0x03C56118 B 0x3C56128
	0x03C5611C BL 0x1C16DFC
	0x03C56120 LDR X1, [X21]
	0x03C56124 LDR X0, [X20]
	0x03C56128 LDR X8, [X0 + 0x40]
	0x03C5612C LDR X9, [X1 + 0x40]
	0x03C56130 MOV X0, X20
	0x03C56134 CMP X8, X9
	0x03C56138 B.NE 0x3C56174
	0x03C5613C BL 0x1C16E08
	0x03C56140 LDR X8, [X0]
	0x03C56144 LDR W9, [X19]
	0x03C56148 CMP W9, W8
	0x03C5614C B.NE 0x3C56164
	0x03C56150 LDR W9, [X19 + 0x4]
	0x03C56154 UBFM X8, X8, 0x20, 0x3F
	0x03C56158 CMP W9, W8
	0x03C5615C CSET W0, EQ
	0x03C56160 B 0x3C56168
	0x03C56164 MOV W0, W31
	0x03C56168 LDP X20, X19, [X31 + 0x10]
	0x03C5616C LDP X30, X21, [X31], #0x20
	0x03C56170 RET
	0x03C56174 BL 0x1C171E0
	0x03C56178 STR X30, [X31 - 0x30]!
	0x03C5617C STP X22, X21, [X31 + 0x10]
	0x03C56180 STP X20, X19, [X31 + 0x20]
	0x03C56184 ADRP X21, 0x790000
	0x03C56188 ADRP X22, 0x4C6000
	0x03C5618C LDRB W8, [X21 + 0x7E]
	0x03C56190 LDR X22, [X22 + 0xD28]
	0x03C56194 MOV X19, X1
	0x03C56198 MOV X20, X0
	0x03C5619C TBNZ X8, 0x0, 0x3C561B4
	0x03C561A0 ADRP X0, 0x4C6000
	0x03C561A4 LDR X0, [X0 + 0xD28]
	0x03C561A8 BL 0x1C16CF4
	0x03C561AC MOVZ W8, 0x1
	0x03C561B0 STRB W8, [X21 + 0x7E]
	0x03C561B4 LDR X0, [X22]
	0x03C561B8 LDR W8, [X0 + 0xE0]
	0x03C561BC CBNZ W8, 0x3C561C4
	0x03C561C0 BL 0x1C16DFC
	0x03C561C4 UBFM X8, X20, 0x20, 0x3F
	0x03C561C8 CMP W20, W19
	0x03C561CC UBFM X9, X19, 0x20, 0x3F
	0x03C561D0 LDP X20, X19, [X31 + 0x20]
	0x03C561D4 LDP X22, X21, [X31 + 0x10]
	0x03C561D8 CSET W10, EQ
	0x03C561DC CMP W8, W9
	0x03C561E0 CSET W8, EQ
	0x03C561E4 AND W0, W10, W8, 0x0
	0x03C561E8 LDR X30, [X31], #0x30
	0x03C561EC RET
	0x03C561F0 STR X30, [X31 - 0x20]!
	0x03C561F4 STP X20, X19, [X31 + 0x10]
	0x03C561F8 ADRP X19, 0x790000
	0x03C561FC ADRP X20, 0x4C6000
	0x03C56200 LDRB W8, [X19 + 0x7F]
	0x03C56204 LDR X20, [X20 + 0xD28]
	0x03C56208 TBNZ X8, 0x0, 0x3C56220
	0x03C5620C ADRP X0, 0x4C6000
	0x03C56210 LDR X0, [X0 + 0xD28]
	0x03C56214 BL 0x1C16CF4
	0x03C56218 MOVZ W8, 0x1
	0x03C5621C STRB W8, [X19 + 0x7F]
	0x03C56220 LDR X8, [X20]
	0x03C56224 ADRP X9, 0xFFFFFFFFFCE97000
	0x03C56228 LDR V0, [X9 + 0x800]
	0x03C5622C LDP X20, X19, [X31 + 0x10]
	0x03C56230 LDR X8, [X8 + 0xB8]
	0x03C56234 STR D0, [X8]
	0x03C56238 LDR X30, [X31], #0x20
	0x03C5623C RET
	0x03C56240 SUB X31, X31, 0xD0
	0x03C56244 STR X30, [X31 + 0xA0]
	0x03C56248 STP X22, X21, [X31 + 0xB0]
	0x03C5624C STP X20, X19, [X31 + 0xC0]
	0x03C56250 ADRP X22, 0x790000
	0x03C56254 ADRP X21, 0x509000
	0x03C56258 LDRB W8, [X22 + 0x80]
	0x03C5625C LDR X21, [X21 + 0xDB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x791000
	005 Move X19, 0x4FF000
	006 Move W8, [X20+119]
	007 Move X19, [X19+80]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x4FF000
	013 Move X0, [X0+80]
	014 Call 0x1C17CF4
	015 Move X0, 0x502000
	016 Move X0, [X0+544]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+119], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x791000
	026 Move W8, [X20+768]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x4FF000
	030 Move X0, [X0+80]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+768], W8
	034 Move X0, [X19]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X8, [X8+24]
	042 Compare X8, 0
	043 JumpIfEqual {69}
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W8, [X20+768]
	049 Compare W8, 0
	050 JumpIfNotEqual {56}
	051 Move X0, 0x4FF000
	052 Move X0, [X0+80]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+768], W8
	056 Move X0, [X19]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X19]
	062 Move X8, [X0+184]
	063 Move X9, [X8+24]
	064 Compare X9, 0
	065 JumpIfEqual {132}
	066 Move W9, [X9+16]
	067 Compare W9, 0
	068 JumpIfEqual {73}
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 
	073 Move W9, [X0+224]
	074 Compare W9, 0
	075 JumpIfNotEqual {79}
	076 Call 0x1C17DFC
	077 Move X0, [X19]
	078 Move X8, [X0+184]
	079 Move X8, [X8+104]
	080 Compare X8, 0
	081 JumpIfEqual {87}
	082 Move X9, [X8+24]
	083 Move X0, [X8+64]
	084 Move X1, [X8+40]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X0, [X19]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move W8, [X20+768]
	092 Compare W8, 0
	093 JumpIfNotEqual {99}
	094 Move X0, 0x4FF000
	095 Move X0, [X0+80]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X20+768], W8
	099 Move X0, [X19]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X19]
	105 Move X8, [X0+184]
	106 Move X0, [X8+24]
	107 Compare X0, 0
	108 JumpIfEqual {132}
	109 Call RenderPipeline.Dispose, X0
	110 Move X8, [X19]
	111 Move X0, X31
	112 Move X8, [X8+184]
	113 Move [X8], X31
	114 Call RenderPipelineManager.set_currentPipeline, X0
	115 Move X20, 0x502000
	116 Move X20, [X20+544]
	117 Move X0, [X20]
	118 Call 0x1C17F10
	119 Move X19, X0
	120 Call SupportedRenderingFeatures..ctor, X0
	121 Move X0, [X20]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X0, X19
	127 Move X20, [X31+16]
	128 Move X19, [X31+24]
	129 Move X30, [X31+32]
	130 Call SupportedRenderingFeatures.set_active, X0
	131 Return 
	132 Call 0x1C17F20

Method: System.String GetCurrentPipelineAssetType()

Disassembly:
	0x03C56B18 LDR X30, [X31], #0x20
	0x03C56B1C RET
	0x03C56B20 SUB X31, X31, 0x40
	0x03C56B24 STP X30, X21, [X31 + 0x20]
	0x03C56B28 STP X20, X19, [X31 + 0x30]
	0x03C56B2C ADRP X20, 0x790000
	0x03C56B30 LDRB W8, [X20 + 0x93]
	0x03C56B34 MOV X19, X0
	0x03C56B38 TBNZ X8, 0x0, 0x3C56B8C
	0x03C56B3C ADRP X0, 0x502000
	0x03C56B40 LDR X0, [X0 + 0x78]
	0x03C56B44 BL 0x1C16CF4
	0x03C56B48 ADRP X0, 0x502000
	0x03C56B4C LDR X0, [X0 + 0x80]
	0x03C56B50 BL 0x1C16CF4
	0x03C56B54 ADRP X0, 0x509000
	0x03C56B58 LDR X0, [X0 + 0xDF0]
	0x03C56B5C BL 0x1C16CF4
	0x03C56B60 ADRP X0, 0x509000
	0x03C56B64 LDR X0, [X0 + 0xE08]
	0x03C56B68 BL 0x1C16CF4
	0x03C56B6C ADRP X0, 0x509000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x791000
	005 Move X19, 0x4FF000
	006 Move W8, [X20+120]
	007 Move X19, [X19+80]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4FF000
	013 Move X0, [X0+80]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+120], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void DoRenderLoop_Internal(UnityEngine.Rendering.RenderPipelineAsset pipe, System.IntPtr loopPtr, UnityEngine.Object renderRequest)

Disassembly:
	0x03C56B70 LDR X0, [X0 + 0xE10]
	0x03C56B74 BL 0x1C16CF4
	0x03C56B78 ADRP X0, 0x509000
	0x03C56B7C LDR X0, [X0 + 0xDF8]
	0x03C56B80 BL 0x1C16CF4
	0x03C56B84 MOVZ W8, 0x1
	0x03C56B88 STRB W8, [X20 + 0x93]
	0x03C56B8C STP X31, X31, [X31 + 0x10]
	0x03C56B90 STP X31, X31, [X31]
	0x03C56B94 LDRB W8, [X19 + 0x110]
	0x03C56B98 CBZ W8, 0x3C56BD8
	0x03C56B9C ADRP X8, 0x509000
	0x03C56BA0 LDR X8, [X8 + 0xE10]
	0x03C56BA4 ADRP X21, 0x502000
	0x03C56BA8 ADD X20, X19, 0x110
	0x03C56BAC MOV X0, X20
	0x03C56BB0 LDR X1, [X8]
	0x03C56BB4 LDR X21, [X21 + 0x78]
	0x03C56BB8 BL 0x242C3C0
	0x03C56BBC LDR X8, [X21]
	0x03C56BC0 STP X0, X1, [X31 + 0x10]
	0x03C56BC4 ADD X0, X31, 0x10
	0x03C56BC8 MOV X1, X8
	0x03C56BCC BL 0x23E28F0
	0x03C56BD0 STP X31, X31, [X20]
	0x03C56BD4 STR X31, [X20 + 0x10]
	0x03C56BD8 LDRB W8, [X19 + 0xF8]!
	0x03C56BDC CBZ W8, 0x3C56C18
	0x03C56BE0 ADRP X8, 0x509000
	0x03C56BE4 LDR X8, [X8 + 0xDF8]
	0x03C56BE8 ADRP X20, 0x502000
	0x03C56BEC MOV X0, X19
	0x03C56BF0 LDR X1, [X8]
	0x03C56BF4 LDR X20, [X20 + 0x80]
	0x03C56BF8 BL 0x242C804
	0x03C56BFC LDR X8, [X20]
	0x03C56C00 STP X0, X1, [X31]
	0x03C56C04 ADD X0, X31, 0x0
	0x03C56C08 MOV X1, X8
	0x03C56C0C BL 0x23E4598
	0x03C56C10 STP X31, X31, [X19]
	0x03C56C14 STR X31, [X19 + 0x10]
	0x03C56C18 LDP X20, X19, [X31 + 0x30]
	0x03C56C1C LDP X30, X21, [X31 + 0x20]
	0x03C56C20 ADD X31, X31, 0x40
	0x03C56C24 RET
	0x03C56C28 SUB X31, X31, 0x40
	0x03C56C2C STP X30, X23, [X31 + 0x10]
	0x03C56C30 STP X22, X21, [X31 + 0x20]
	0x03C56C34 STP X20, X19, [X31 + 0x30]
	0x03C56C38 ADRP X20, 0x790000
	0x03C56C3C LDRB W8, [X20 + 0x94]
	0x03C56C40 MOV X19, X0
	0x03C56C44 TBNZ X8, 0x0, 0x3C56C80
	0x03C56C48 ADRP X0, 0x509000
	0x03C56C4C LDR X0, [X0 + 0xDF0]
	0x03C56C50 BL 0x1C16CF4
	0x03C56C54 ADRP X0, 0x509000
	0x03C56C58 LDR X0, [X0 + 0xE08]
	0x03C56C5C BL 0x1C16CF4
	0x03C56C60 ADRP X0, 0x509000
	0x03C56C64 LDR X0, [X0 + 0xE10]
	0x03C56C68 BL 0x1C16CF4
	0x03C56C6C ADRP X0, 0x509000
	0x03C56C70 LDR X0, [X0 + 0xDF8]
	0x03C56C74 BL 0x1C16CF4
	0x03C56C78 MOVZ W8, 0x1
	0x03C56C7C STRB W8, [X20 + 0x94]
	0x03C56C80 MOV X21, X19
	0x03C56C84 LDRB W9, [X21 + 0xF8]!
	0x03C56C88 LDRB W8, [X21 + 0x18]
	0x03C56C8C CBZ W9, 0x3C56E84
	0x03C56C90 CBZ W8, 0x3C56E9C
	0x03C56C94 ADRP X8, 0x509000
	0x03C56C98 LDR X8, [X8 + 0xDF8]
	0x03C56C9C ADRP X20, 0x509000
	0x03C56CA0 MOV X0, X21
	0x03C56CA4 LDR X1, [X8]
	0x03C56CA8 LDR X20, [X20 + 0xE10]
	0x03C56CAC BL 0x242C804
	0x03C56CB0 MOV X22, X1
	0x03C56CB4 LDR X1, [X20]
	0x03C56CB8 ADD X20, X19, 0x110
	0x03C56CBC MOV X0, X20
	0x03C56CC0 BL 0x242C3C0
	0x03C56CC4 CMP W22, W1
	0x03C56CC8 B.EQ 0x3C56E88
	0x03C56CCC ADRP X0, 0x49D000
	0x03C56CD0 LDR X0, [X0 + 0x9D0]
	0x03C56CD4 BL 0x1C16D08
	0x03C56CD8 MOVZ W1, 0x6
	0x03C56CDC BL 0x1C16D6C
	0x03C56CE0 MOV X19, X0
	0x03C56CE4 BL 0x19903C0
	0x03C56CE8 ADRP X23, 0x509000
	0x03C56CEC LDR X23, [X23 + 0xE20]
	0x03C56CF0 MOV X0, X23
	0x03C56CF4 BL 0x1C16D08
	0x03C56CF8 MOV X1, X0
	0x03C56CFC MOV X0, X19
	0x03C56D00 BL 0x19980B4
	0x03C56D04 MOV X0, X23
	0x03C56D08 BL 0x1C16D08
	0x03C56D0C MOV X2, X0
	0x03C56D10 MOV X0, X19
	0x03C56D14 MOV X1, X31
	0x03C56D18 BL 0x1993444
	0x03C56D1C MOV X0, X19
	0x03C56D20 BL 0x19903C0
	0x03C56D24 ADRP X22, 0x509000
	0x03C56D28 LDR X22, [X22 + 0xE28]
	0x03C56D2C MOV X0, X22
	0x03C56D30 BL 0x1C16D08
	0x03C56D34 MOV X1, X0
	0x03C56D38 MOV X0, X19
	0x03C56D3C BL 0x19980B4
	0x03C56D40 MOV X0, X22
	0x03C56D44 BL 0x1C16D08
	0x03C56D48 MOV X2, X0
	0x03C56D4C MOVZ W1, 0x1
	0x03C56D50 MOV X0, X19
	0x03C56D54 BL 0x1993444
	0x03C56D58 MOV X0, X19
	0x03C56D5C BL 0x19903C0
	0x03C56D60 MOV X0, X23
	0x03C56D64 BL 0x1C16D08
	0x03C56D68 MOV X1, X0
	0x03C56D6C MOV X0, X19
	0x03C56D70 BL 0x19980B4
	0x03C56D74 MOV X0, X23
	0x03C56D78 BL 0x1C16D08
	0x03C56D7C MOV X2, X0
	0x03C56D80 MOVZ W1, 0x2
	0x03C56D84 MOV X0, X19
	0x03C56D88 BL 0x1993444
	0x03C56D8C ADRP X0, 0x509000
	0x03C56D90 LDR X0, [X0 + 0xDF8]
	0x03C56D94 BL 0x1C16D08
	0x03C56D98 MOV X1, X0
	0x03C56D9C MOV X0, X21
	0x03C56DA0 BL 0x1C0A348
	0x03C56DA4 STR W1, [X31 + 0xC]
	0x03C56DA8 ADRP X21, 0x49D000
	0x03C56DAC LDR X21, [X21 + 0x758]
	0x03C56DB0 MOV X0, X21
	0x03C56DB4 BL 0x1C16D08
	0x03C56DB8 ADD X1, X31, 0xC
	0x03C56DBC BL 0x1C16E04
	0x03C56DC0 MOV X23, X0
	0x03C56DC4 MOV X0, X19
	0x03C56DC8 BL 0x19903C0
	0x03C56DCC MOV X0, X19
	0x03C56DD0 MOV X1, X23
	0x03C56DD4 BL 0x19980B4
	0x03C56DD8 MOVZ W1, 0x3
	0x03C56DDC MOV X0, X19
	0x03C56DE0 MOV X2, X23
	0x03C56DE4 BL 0x1993444
	0x03C56DE8 MOV X0, X19
	0x03C56DEC BL 0x19903C0
	0x03C56DF0 MOV X0, X22
	0x03C56DF4 BL 0x1C16D08

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x791000
	009 Move X23, 0x4FF000
	010 Move W8, [X22+121]
	011 Move X23, [X23+80]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x4C8000
	020 Move X0, [X0+4000]
	021 Call 0x1C17CF4
	022 Move X0, 0x502000
	023 Move X0, [X0+704]
	024 Call 0x1C17CF4
	025 Move X0, 0x49E000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x4FF000
	029 Move X0, [X0+80]
	030 Call 0x1C17CF4
	031 Move X0, 0x50A000
	032 Move X0, [X0+3552]
	033 Call 0x1C17CF4
	034 Move X0, 0x4FB000
	035 Move X0, [X0+3200]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+121], W8
	039 Move X0, [X23]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Call RenderPipelineManager.PrepareRenderPipeline, X0
	046 Move X21, 0x791000
	047 Move W8, [X21+768]
	048 Compare W8, 0
	049 JumpIfNotEqual {55}
	050 Move X0, 0x4FF000
	051 Move X0, [X0+80]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+768], W8
	055 Move X0, [X23]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X23]
	061 Move X8, [X0+184]
	062 Move X8, [X8+24]
	063 Compare X8, 0
	064 JumpIfEqual {183}
	065 Move X8, 0x4FB000
	066 Move X8, [X8+3200]
	067 Move X8, [X8]
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {74}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X0, [X23]
	074 Move [X31+8], X20
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X23]
	080 Move X8, [X0+184]
	081 Move X1, [X8+8]
	082 Compare X1, 0
	083 JumpIfEqual {191}
	084 Move W2, [X1+24]
	085 Move W8, [X1+28]
	086 Move X20, 0x49E000
	087 Move X20, [X20+1432]
	088 Add W8, W8, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X1+24], W31
	091 Move [X1+28], W8
	092 Move X0, [X1+16]
	093 Move W1, W31
	094 Move X3, X31
	095 Call Array.Clear, X0, X1, X2
	096 Move X8, [X23]
	097 Move X8, [X8+184]
	098 Move X1, [X8+8]
	099 Add X0, X31, 8
	100 Call ScriptableRenderContext.GetCameras, X0, X1
	101 Move X0, [X20]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X19
	107 Move X1, X31
	108 Move X2, X31
	109 Call Object.op_Equality, X0, X1
	110 Move X8, [X23]
	111 Move W20, W0
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move W8, [X21+768]
	118 Compare W8, 0
	119 JumpIfNotEqual {125}
	120 Move X0, 0x4FF000
	121 Move X0, [X0+80]
	122 Call 0x1C17CF4
	123 Move W8, 1
	124 Move [X21+768], W8
	125 Move X0, [X23]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {131}
	129 Call 0x1C17DFC
	130 Move X0, [X23]
	131 Move X8, [X0+184]
	132 Move X21, [X31+8]
	133 Move X22, [X8+24]
	134 Move X8, [X8+8]
	135 Move TEMP, X20
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {145}
	139 Compare X22, 0
	140 JumpIfEqual {191}
	141 Move X0, X22
	142 Move X1, X21
	143 Move X2, X8
	144 Call RenderPipeline.InternalRender, X0, X1, X2
	145 Compare X8, 0
	146 JumpIfEqual {191}
	147 Move X9, 0x502000
	148 Move X9, [X9+704]
	149 Move X0, X8
	150 Move W1, W31
	151 Move X2, [X9]
	152 Call List`1<Object>.get_Item, X0, X1
	153 Compare X22, 0
	154 JumpIfEqual {191}
	155 Move X8, 0x50A000
	156 Move X8, [X8+3552]
	157 Move X2, X0
	158 Move X0, X22
	159 Move X1, X21
	160 Move X4, [X8]
	161 Move X3, X19
	162 Call 0x2242B50, X0, X1, X2, X3
	163 Move X0, [X23]
	164 Move W8, [X0+224]
	165 Compare W8, 0
	166 JumpIfNotEqual {169}
	167 Call 0x1C17DFC
	168 Move X0, [X23]
	169 Move X8, [X0+184]
	170 Move X8, [X8+8]
	171 Compare X8, 0
	172 JumpIfEqual {191}
	173 Move W2, [X8+24]
	174 Move W9, [X8+28]
	175 Add W9, W9, 1
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move [X8+24], W31
	178 Move [X8+28], W9
	179 Move X0, [X8+16]
	180 Move W1, W31
	181 Move X3, X31
	182 Call Array.Clear, X0, X1, X2
	183 Move X20, [X31+48]
	184 Move X19, [X31+56]
	185 Move X22, [X31+32]
	186 Move X21, [X31+40]
	187 Move X30, [X31+16]
	188 Move X23, [X31+24]
	189 Add X31, X31, 64
	190 Return 
	191 Call 0x1C17F20

Method: System.Void PrepareRenderPipeline(UnityEngine.Rendering.RenderPipelineAsset pipelineAsset)

Disassembly:
	0x03C56260 MOV W19, W1
	0x03C56264 MOV X20, X0
	0x03C56268 TBNZ X8, 0x0, 0x3C56280
	0x03C5626C ADRP X0, 0x509000
	0x03C56270 LDR X0, [X0 + 0xDB0]
	0x03C56274 BL 0x1C16CF4
	0x03C56278 MOVZ W8, 0x1
	0x03C5627C STRB W8, [X22 + 0x80]
	0x03C56280 MOVI V0.2D, 0x0
	0x03C56284 ADD X0, X31, 0x50
	0x03C56288 MOV W1, W31
	0x03C5628C MOV W2, W31
	0x03C56290 STR W31, [X31 + 0x90]
	0x03C56294 STP V0, V0, [X31 + 0x70]
	0x03C56298 STP V0, V0, [X31 + 0x50]
	0x03C5629C BL 0x3C50C1C
	0x03C562A0 ADD X0, X31, 0x8
	0x03C562A4 ADD X1, X31, 0x50
	0x03C562A8 MOVZ W2, 0x44
	0x03C562AC BL 0x3EB1AC0
	0x03C562B0 ADD X1, X31, 0x8
	0x03C562B4 MOVZ W2, 0x44
	0x03C562B8 MOV X0, X20
	0x03C562BC BL 0x3EB1AC0
	0x03C562C0 LDR X0, [X21]
	0x03C562C4 LDR W8, [X0 + 0xE0]
	0x03C562C8 CBNZ W8, 0x3C562D4
	0x03C562CC BL 0x1C16DFC
	0x03C562D0 LDR X0, [X21]
	0x03C562D4 LDR X8, [X0 + 0xB8]
	0x03C562D8 ADD X0, X31, 0x50
	0x03C562DC MOVZ W1, 0x1
	0x03C562E0 MOVZ W2, 0x2
	0x03C562E4 LDR V0, [X8]
	0x03C562E8 STUR V0, [X20 + 0x44]
	0x03C562EC STRH W31, [X31 + 0x50]
	0x03C562F0 BL 0x3C53458
	0x03C562F4 LDRH W8, [X31 + 0x50]
	0x03C562F8 STRH W8, [X20 + 0x54]
	0x03C562FC BL 0x3C56320
	0x03C56300 STUR X0, [X20 + 0x56]
	0x03C56304 STUR W1, [X20 + 0x5E]
	0x03C56308 STP W31, W19, [X20 + 0x64]
	0x03C5630C LDP X20, X19, [X31 + 0xC0]
	0x03C56310 LDP X22, X21, [X31 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x791000
	006 Move X20, 0x4FF000
	007 Move W8, [X21+122]
	008 Move X20, [X20+80]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4FF000
	015 Move X0, [X0+80]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+122], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call RenderPipelineManager.HandleRenderPipelineChange, X0
	026 Call RenderPipelineManager.IsPipelineRequireCreation
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {56}
	031 Move X0, [X20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X20]
	037 Move X8, [X0+184]
	038 Move X0, [X8]
	039 Compare X0, 0
	040 JumpIfEqual {61}
	041 Call RenderPipelineAsset.InternalCreatePipeline, X0
	042 Call RenderPipelineManager.set_currentPipeline, X0
	043 Move X8, [X20]
	044 Move X8, [X8+184]
	045 Move X8, [X8+96]
	046 Compare X8, 0
	047 JumpIfEqual {56}
	048 Move X2, [X8+24]
	049 Move X0, [X8+64]
	050 Move X1, [X8+40]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 CallNoReturn X2
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 
	061 Call 0x1C17F20

Method: System.Boolean IsPipelineRequireCreation()

Disassembly:
	0x03C56EB8 ADRP X22, 0x509000
	0x03C56EBC LDR X22, [X22 + 0xE20]
	0x03C56EC0 MOV X0, X22
	0x03C56EC4 BL 0x1C16D08
	0x03C56EC8 MOV X1, X0
	0x03C56ECC MOV X0, X20
	0x03C56ED0 BL 0x19980B4
	0x03C56ED4 MOV X0, X22
	0x03C56ED8 BL 0x1C16D08
	0x03C56EDC MOV X2, X0
	0x03C56EE0 MOV X0, X20
	0x03C56EE4 MOV X1, X31
	0x03C56EE8 BL 0x1993444
	0x03C56EEC MOV X0, X20
	0x03C56EF0 BL 0x19903C0
	0x03C56EF4 ADRP X21, 0x509000
	0x03C56EF8 LDR X21, [X21 + 0xE28]
	0x03C56EFC MOV X0, X21
	0x03C56F00 BL 0x1C16D08
	0x03C56F04 MOV X1, X0
	0x03C56F08 MOV X0, X20
	0x03C56F0C BL 0x19980B4
	0x03C56F10 MOV X0, X21
	0x03C56F14 BL 0x1C16D08
	0x03C56F18 MOV X2, X0
	0x03C56F1C MOVZ W1, 0x1
	0x03C56F20 MOV X0, X20
	0x03C56F24 BL 0x1993444
	0x03C56F28 MOV X0, X20
	0x03C56F2C BL 0x19903C0
	0x03C56F30 MOV X0, X22
	0x03C56F34 BL 0x1C16D08
	0x03C56F38 MOV X1, X0
	0x03C56F3C MOV X0, X20
	0x03C56F40 BL 0x19980B4
	0x03C56F44 MOV X0, X22
	0x03C56F48 BL 0x1C16D08
	0x03C56F4C MOV X2, X0
	0x03C56F50 MOVZ W1, 0x2
	0x03C56F54 MOV X0, X20
	0x03C56F58 BL 0x1993444
	0x03C56F5C ADRP X0, 0x509000
	0x03C56F60 LDR X0, [X0 + 0xDF0]
	0x03C56F64 BL 0x1C16D08
	0x03C56F68 LDRB W8, [X19 + 0xF8]
	0x03C56F6C ADRP X22, 0x49D000
	0x03C56F70 STRB W8, [X31 + 0x4]
	0x03C56F74 LDR X22, [X22 + 0xB58]
	0x03C56F78 MOV X0, X22
	0x03C56F7C BL 0x1C16D08
	0x03C56F80 ADD X1, X31, 0x4
	0x03C56F84 BL 0x1C16E04
	0x03C56F88 MOV X23, X0
	0x03C56F8C MOV X0, X20
	0x03C56F90 BL 0x19903C0
	0x03C56F94 MOV X0, X20
	0x03C56F98 MOV X1, X23
	0x03C56F9C BL 0x19980B4
	0x03C56FA0 MOVZ W1, 0x3
	0x03C56FA4 MOV X0, X20
	0x03C56FA8 MOV X2, X23
	0x03C56FAC BL 0x1993444
	0x03C56FB0 MOV X0, X20
	0x03C56FB4 BL 0x19903C0
	0x03C56FB8 MOV X0, X21
	0x03C56FBC BL 0x1C16D08
	0x03C56FC0 MOV X1, X0
	0x03C56FC4 MOV X0, X20
	0x03C56FC8 BL 0x19980B4
	0x03C56FCC MOV X0, X21
	0x03C56FD0 BL 0x1C16D08
	0x03C56FD4 MOV X2, X0
	0x03C56FD8 MOVZ W1, 0x4
	0x03C56FDC MOV X0, X20
	0x03C56FE0 BL 0x1993444
	0x03C56FE4 ADRP X0, 0x509000
	0x03C56FE8 LDR X0, [X0 + 0xE08]
	0x03C56FEC BL 0x1C16D08
	0x03C56FF0 LDRB W8, [X19 + 0x110]
	0x03C56FF4 MOV X0, X22
	0x03C56FF8 STRB W8, [X31]
	0x03C56FFC BL 0x1C16D08
	0x03C57000 ADD X1, X31, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x791000
	005 Move X20, 0x4FF000
	006 Move W8, [X19+123]
	007 Move X20, [X20+80]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x49E000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move X0, 0x4FF000
	016 Move X0, [X0+80]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+123], W8
	020 Move X0, [X20]
	021 Move X19, 0x49E000
	022 Move W8, [X0+224]
	023 Move X19, [X19+1432]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X19]
	029 Move X9, [X0+184]
	030 Move W10, [X8+224]
	031 Move X19, [X9]
	032 Compare W10, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {93}
	044 Move X0, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X19, 0x791000
	050 Move W8, [X19+768]
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0x4FF000
	054 Move X0, [X0+80]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X19+768], W8
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X20]
	064 Move X8, [X0+184]
	065 Move X8, [X8+24]
	066 Compare X8, 0
	067 JumpIfEqual {94}
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move W8, [X19+768]
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0x4FF000
	076 Move X0, [X0+80]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X19+768], W8
	080 Move X0, [X20]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X20]
	086 Move X8, [X0+184]
	087 Move X8, [X8+24]
	088 Compare X8, 0
	089 JumpIfEqual {99}
	090 Move W8, [X8+16]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSET not yet implemented."
	093 Move W0, W31
	094 Move W0, 1
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 Move X30, [X31+32]
	098 Return X0
	099 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03C57004 BL 0x1C16E04
	0x03C57008 MOV X19, X0
	0x03C5700C MOV X0, X20
	0x03C57010 BL 0x19903C0
	0x03C57014 MOV X0, X20
	0x03C57018 MOV X1, X19
	0x03C5701C BL 0x19980B4
	0x03C57020 MOVZ W1, 0x5
	0x03C57024 MOV X0, X20
	0x03C57028 MOV X2, X19
	0x03C5702C BL 0x1993444
	0x03C57030 ADRP X0, 0x508000
	0x03C57034 LDR X0, [X0 + 0xE38]
	0x03C57038 BL 0x1C16D08
	0x03C5703C MOV X1, X20
	0x03C57040 MOV X2, X31
	0x03C57044 BL 0x3227C5C
	0x03C57048 MOV X19, X0
	0x03C5704C ADRP X0, 0x4A4000
	0x03C57050 LDR X0, [X0 + 0x578]
	0x03C57054 BL 0x1C16D08
	0x03C57058 BL 0x1C16F10
	0x03C5705C MOV X1, X19
	0x03C57060 MOV X2, X31
	0x03C57064 MOV X20, X0
	0x03C57068 BL 0x3314A68
	0x03C5706C ADRP X0, 0x508000
	0x03C57070 LDR X0, [X0 + 0xE40]
	0x03C57074 BL 0x1C16D08
	0x03C57078 MOV X1, X0
	0x03C5707C MOV X0, X20
	0x03C57080 BL 0x1C16DEC
	0x03C57084 STR X29, [X31 - 0x40]!
	0x03C57088 STP X30, X23, [X31 + 0x10]
	0x03C5708C STP X22, X21, [X31 + 0x20]
	0x03C57090 STP X20, X19, [X31 + 0x30]
	0x03C57094 SUB X31, X31, 0x470
	0x03C57098 MRS X21, 0xC000
	0x03C5709C LDR X8, [X21 + 0x28]
	0x03C570A0 ADRP X22, 0x78F000
	0x03C570A4 MOV X19, X1
	0x03C570A8 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x790000
	008 Move X23, 0x4C8000
	009 Move X19, 0x4C8000
	010 Move X21, 0x4FE000
	011 Move X20, 0x509000
	012 Move W8, [X22+124]
	013 Move X23, [X23+80]
	014 Move X19, [X19+88]
	015 Move X21, [X21+80]
	016 Move X20, [X20+3536]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x4C8000
	022 Move X0, [X0+88]
	023 Call 0x1C17CF4
	024 Move X0, 0x4C8000
	025 Move X0, [X0+80]
	026 Call 0x1C17CF4
	027 Move X0, 0x4FE000
	028 Move X0, [X0+80]
	029 Call 0x1C17CF4
	030 Move X0, 0x509000
	031 Move X0, [X0+3536]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+124], W8
	035 Move X0, [X23]
	036 Call 0x1C17F10
	037 Move X1, [X19]
	038 Move X19, X0
	039 Call List`1<Object>..ctor, X0
	040 Move X8, [X21]
	041 Move X9, [X20]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X8, [X8+184]
	045 Move [X8+8], X19
	046 Move [X8+16], X9
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move [X8+24], X31
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Return 

