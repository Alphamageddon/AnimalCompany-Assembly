Type: UnityEngine.Rendering.VisibleLight

Method: UnityEngine.Light get_light()

Disassembly:
	0x03C5CBF0 MOV X19, X0
	0x03C5CBF4 MOV X0, X31
	0x03C5CBF8 BL 0x3BFDDB0
	0x03C5CBFC CBNZ X20, 0x3C5CC08
	0x03C5CC00 MOV X0, X19
	0x03C5CC04 BL 0x1D2C690
	0x03C5CC08 MOV X0, X20
	0x03C5CC0C BL 0x1C16F18
	0x03C5CC10 BL 0x1990590
	0x03C5CC14 STR X30, [X31 - 0x30]!
	0x03C5CC18 STP X22, X21, [X31 + 0x10]
	0x03C5CC1C STP X20, X19, [X31 + 0x20]
	0x03C5CC20 LDR X8, [X2 + 0x8]
	0x03C5CC24 STP X1, X2, [X0 + 0x20]
	0x03C5CC28 MOV X19, X0
	0x03C5CC2C MOV X20, X2
	0x03C5CC30 STR X8, [X0 + 0x10]
	0x03C5CC34 LDRB W22, [X2 + 0x52]
	0x03C5CC38 STR X0, [X0 + 0x40]
	0x03C5CC3C MOV X0, X2
	0x03C5CC40 MOV X21, X1
	0x03C5CC44 BL 0x1C16D84
	0x03C5CC48 TBZ X0, 0x0, 0x3C5CC60
	0x03C5CC4C CMP W22, 0x4
	0x03C5CC50 B.NE 0x3C5CC9C
	0x03C5CC54 ADRP X8, 0xFFFFFFFFFDFAE000
	0x03C5CC58 ADD X8, X8, 0xF84
	0x03C5CC5C B 0x3C5CCE0
	0x03C5CC60 CMP W22, 0x3
	0x03C5CC64 B.NE 0x3C5CC98
	0x03C5CC68 LDRB W8, [X19 + 0x70]
	0x03C5CC6C CBZ W8, 0x3C5CCB0
	0x03C5CC70 MOV X0, X20
	0x03C5CC74 BL 0x1C16D7C
	0x03C5CC78 MOV W21, W0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x78B000
	006 Move X20, 0x498000
	007 Move W8, [X21+423]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x504000
	015 Move X0, [X0+3880]
	016 Call 0x1C17CF4
	017 Move X0, 0x498000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+423], W8
	022 Move X0, [X20]
	023 Move W19, [X19+108]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W19
	029 Move X1, X31
	030 Call Object.FindObjectFromInstanceID, X0
	031 Compare X0, 0
	032 JumpIfEqual {38}
	033 Move X8, 0x504000
	034 Move X8, [X8+3880]
	035 Move X1, [X8]
	036 Move X8, [X0]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0
	043 Call 0x1C181E0

Method: UnityEngine.LightType get_lightType()

Disassembly:
	0x03C5CC7C MOV X0, X20
	0x03C5CC80 BL 0x1C17238

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: UnityEngine.Color get_finalColor()

Disassembly:
	0x03C5CC84 TBZ X21, 0x0, 0x3C5CCBC
	0x03C5CC88 TBZ X0, 0x0, 0x3C5CCCC
	0x03C5CC8C ADRP X8, 0xFFFFFFFFFDFAF000

ISIL:
	001 Move S0, [X0+4]
	002 Move S1, [X0+8]
	003 Move S2, [X0+12]
	004 Move S3, [X0+16]
	005 Return X0

Method: UnityEngine.Matrix4x4 get_localToWorldMatrix()

Disassembly:
	0x03C5CC90 ADD X8, X8, 0x228
	0x03C5CC94 B 0x3C5CCE0
	0x03C5CC98 CBZ X21, 0x3C5CD00
	0x03C5CC9C LDR X8, [X19 + 0x10]
	0x03C5CCA0 LDR X9, [X19 + 0x20]
	0x03C5CCA4 STR X8, [X19 + 0x18]
	0x03C5CCA8 STR X9, [X19 + 0x40]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 Move [X8+32], V1
	006 Move [X8+40], V0
	007 Move [X8], V3
	008 Move [X8+8], V2
	009 Return X0

Method: System.Single get_range()

Disassembly:
	0x03C5CCAC B 0x3C5CCE4
	0x03C5CCB0 ADRP X8, 0xFFFFFFFFFDFAE000

ISIL:
	001 Move V0, [X0+100]
	002 Return V0

Method: System.Single get_spotAngle()

Disassembly:
	0x03C5CCB4 ADD X8, X8, 0xF08
	0x03C5CCB8 B 0x3C5CCE0

ISIL:
	001 Move V0, [X0+104]
	002 Return V0

Method: System.Boolean Equals(UnityEngine.Rendering.VisibleLight other)

Disassembly:
	0x03C5CCBC TBZ X0, 0x0, 0x3C5CCD8
	0x03C5CCC0 ADRP X8, 0xFFFFFFFFFDFAF000
	0x03C5CCC4 ADD X8, X8, 0x8C
	0x03C5CCC8 B 0x3C5CCE0
	0x03C5CCCC ADRP X8, 0xFFFFFFFFFDFAF000
	0x03C5CCD0 ADD X8, X8, 0x180
	0x03C5CCD4 B 0x3C5CCE0
	0x03C5CCD8 ADRP X8, 0xFFFFFFFFFDFAE000
	0x03C5CCDC ADD X8, X8, 0xFF8
	0x03C5CCE0 STR X8, [X19 + 0x18]
	0x03C5CCE4 ADRP X8, 0xFFFFFFFFFDFAE000
	0x03C5CCE8 ADD X8, X8, 0xE58
	0x03C5CCEC STR X8, [X19 + 0x38]
	0x03C5CCF0 LDP X20, X19, [X31 + 0x20]
	0x03C5CCF4 LDP X22, X21, [X31 + 0x10]
	0x03C5CCF8 LDR X30, [X31], #0x30
	0x03C5CCFC RET
	0x03C5CD00 ADRP X1, 0xFFFFFFFFFCEBF000
	0x03C5CD04 ADD X1, X1, 0xEE3
	0x03C5CD08 MOV X0, X31
	0x03C5CD0C BL 0x1C16F3C
	0x03C5CD10 MOV X1, X31
	0x03C5CD14 BL 0x1C16DEC
	0x03C5CD18 SUB X31, X31, 0xF0
	0x03C5CD1C STP X30, X25, [X31 + 0xB0]
	0x03C5CD20 STP X24, X23, [X31 + 0xC0]
	0x03C5CD24 STP X22, X21, [X31 + 0xD0]
	0x03C5CD28 STP X20, X19, [X31 + 0xE0]
	0x03C5CD2C LDR X25, [X0 + 0x18]
	0x03C5CD30 LDR X23, [X0 + 0x40]
	0x03C5CD34 MOV X8, X2
	0x03C5CD38 MOV X22, X0
	0x03C5CD3C MOV X24, X1
	0x03C5CD40 ADD X0, X31, 0x0
	0x03C5CD44 MOVZ W2, 0xB0
	0x03C5CD48 MOV X1, X8
	0x03C5CD4C MOV X19, X5
	0x03C5CD50 MOV X20, X4
	0x03C5CD54 MOV X21, X3
	0x03C5CD58 BL 0x3EB1AC0
	0x03C5CD5C LDR X6, [X22 + 0x28]
	0x03C5CD60 ADD X2, X31, 0x0
	0x03C5CD64 MOV X0, X23
	0x03C5CD68 MOV X1, X24
	0x03C5CD6C MOV X3, X21
	0x03C5CD70 MOV X4, X20
	0x03C5CD74 MOV X5, X19
	0x03C5CD78 BLR X25
	0x03C5CD7C LDP X20, X19, [X31 + 0xE0]
	0x03C5CD80 LDP X22, X21, [X31 + 0xD0]
	0x03C5CD84 LDP X24, X23, [X31 + 0xC0]
	0x03C5CD88 LDP X30, X25, [X31 + 0xB0]
	0x03C5CD8C ADD X31, X31, 0xF0
	0x03C5CD90 RET
	0x03C5CD94 STP X30, X19, [X31 - 0x10]!
	0x03C5CD98 ADRP X19, 0x78A000
	0x03C5CD9C LDR X0, [X19 + 0x1B8]
	0x03C5CDA0 CBNZ X0, 0x3C5CDB4
	0x03C5CDA4 ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C5CDA8 ADD X0, X0, 0x270
	0x03C5CDAC BL 0x1C16CB8
	0x03C5CDB0 STR X0, [X19 + 0x1B8]
	0x03C5CDB4 LDP X30, X19, [X31], #0x10
	0x03C5CDB8 BR X0
	0x03C5CDBC STR X30, [X31 - 0x20]!
	0x03C5CDC0 STP X20, X19, [X31 + 0x10]
	0x03C5CDC4 ADRP X20, 0x78A000
	0x03C5CDC8 LDR X1, [X20 + 0x1C0]
	0x03C5CDCC MOV X19, X0
	0x03C5CDD0 CBNZ X1, 0x3C5CDE8
	0x03C5CDD4 ADRP X0, 0xFFFFFFFFFCEAF000
	0x03C5CDD8 ADD X0, X0, 0x7F4
	0x03C5CDDC BL 0x1C16CB8
	0x03C5CDE0 MOV X1, X0
	0x03C5CDE4 STR X0, [X20 + 0x1C0]
	0x03C5CDE8 MOV X0, X19
	0x03C5CDEC LDP X20, X19, [X31 + 0x10]
	0x03C5CDF0 LDR X30, [X31], #0x20
	0x03C5CDF4 BR X1
	0x03C5CDF8 STR X30, [X31 - 0x20]!
	0x03C5CDFC STP X20, X19, [X31 + 0x10]
	0x03C5CE00 ADRP X20, 0x78A000
	0x03C5CE04 LDR X1, [X20 + 0x1C8]
	0x03C5CE08 MOV X19, X0
	0x03C5CE0C CBNZ X1, 0x3C5CE24
	0x03C5CE10 ADRP X0, 0xFFFFFFFFFCEC9000
	0x03C5CE14 ADD X0, X0, 0x369
	0x03C5CE18 BL 0x1C16CB8
	0x03C5CE1C MOV X1, X0
	0x03C5CE20 STR X0, [X20 + 0x1C8]
	0x03C5CE24 MOV X0, X19
	0x03C5CE28 LDP X20, X19, [X31 + 0x10]
	0x03C5CE2C LDR X30, [X31], #0x20
	0x03C5CE30 BR X1
	0x03C5CE34 SUB X31, X31, 0x30
	0x03C5CE38 STR X30, [X31 + 0x10]
	0x03C5CE3C STP X20, X19, [X31 + 0x20]
	0x03C5CE40 ADRP X20, 0x78A000
	0x03C5CE44 LDR X8, [X20 + 0x1C8]
	0x03C5CE48 MOV X19, X0
	0x03C5CE4C CBNZ X8, 0x3C5CE64
	0x03C5CE50 ADRP X0, 0xFFFFFFFFFCEC9000
	0x03C5CE54 ADD X0, X0, 0x369
	0x03C5CE58 BL 0x1C16CB8
	0x03C5CE5C MOV X8, X0
	0x03C5CE60 STR X0, [X20 + 0x1C8]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], D10
	003 Move [X31+208], D9
	004 Move [X31+216], D8
	005 Move [X31+224], X29
	006 Move [X31+232], X30
	007 Move [X31+240], X22
	008 Move [X31+248], X21
	009 Move [X31+256], X20
	010 Move [X31+264], X19
	011 Move W8, [X0]
	012 Move W9, [X1]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move S0, [X1+4]
	015 Move S10, [X1+8]
	016 Move S9, [X1+12]
	017 Move S8, [X1+16]
	018 Move X19, X1
	019 Move X20, X0
	020 Add X0, X0, 4
	021 Move X1, X31
	022 Call Single.Equals, X0, V0
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {139}
	027 Add X0, X20, 8
	028 Move V0, V10
	029 Move X1, X31
	030 Call Single.Equals, X0, V0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {139}
	035 Add X0, X20, 12
	036 Move V0, V9
	037 Move X1, X31
	038 Call Single.Equals, X0, V0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {139}
	043 Add X0, X20, 16
	044 Move V0, V8
	045 Move X1, X31
	046 Call Single.Equals, X0, V0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {139}
	051 Move S0, [X19+20]
	052 Move S10, [X19+24]
	053 Move V1, [X20+20]
	054 Move S9, [X19+28]
	055 Move S8, [X19+32]
	056 Add X0, X31, 72
	057 Move X1, X31
	058 Move [X31+72], S1
	059 Call Single.Equals, X0, V0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {139}
	064 Move V0, [X20+24]
	065 Add X0, X31, 72
	066 Move X1, X31
	067 Move [X31+72], S0
	068 Move V0, V10
	069 Call Single.Equals, X0, V0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {139}
	074 Move V0, [X20+28]
	075 Add X0, X31, 72
	076 Move X1, X31
	077 Move [X31+72], S0
	078 Move V0, V9
	079 Call Single.Equals, X0, V0
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {139}
	084 Move V0, [X20+32]
	085 Add X0, X31, 72
	086 Move X1, X31
	087 Move [X31+72], S0
	088 Move V0, V8
	089 Call Single.Equals, X0, V0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {139}
	094 Add X0, X31, 72
	095 Move W2, 116
	096 Move X1, X19
	097 Add X22, X31, 72
	098 Add X21, X20, 36
	099 Call 0x3EB2AC0
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 Add X1, X31, 0
	105 Move X0, X21
	106 Move X2, X31
	107 Move [X31], V0
	108 Move [X31+8], V1
	109 Move [X31+32], V2
	110 Move [X31+40], V3
	111 Call 0x2079B9C
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {139}
	116 Move V0, [X19+100]
	117 Add X0, X20, 100
	118 Move X1, X31
	119 Call Single.Equals, X0, V0
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {139}
	124 Move V0, [X19+104]
	125 Add X0, X20, 104
	126 Move X1, X31
	127 Call Single.Equals, X0, V0
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {139}
	132 Move W8, [X20+108]
	133 Move W9, [X19+108]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W8, [X20+112]
	136 Move W9, [X19+112]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CSET not yet implemented."
	139 Move W0, W31
	140 Move X20, [X31+256]
	141 Move X19, [X31+264]
	142 Move X22, [X31+240]
	143 Move X21, [X31+248]
	144 Move X29, [X31+224]
	145 Move X30, [X31+232]
	146 Move D9, [X31+208]
	147 Move D8, [X31+216]
	148 Move V10, [X31+192]
	149 Add X31, X31, 272
	150 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C5CE64 MOV X0, X19
	0x03C5CE68 BLR X8
	0x03C5CE6C ADD X0, X31, 0x0
	0x03C5CE70 MOV X1, X19
	0x03C5CE74 STP X31, X31, [X31]
	0x03C5CE78 BL 0x3C5CE90
	0x03C5CE7C LDP X0, X1, [X31]
	0x03C5CE80 LDP X20, X19, [X31 + 0x20]
	0x03C5CE84 LDR X30, [X31 + 0x10]
	0x03C5CE88 ADD X31, X31, 0x30
	0x03C5CE8C RET
	0x03C5CE90 STP X30, X21, [X31 - 0x20]!
	0x03C5CE94 STP X20, X19, [X31 + 0x10]
	0x03C5CE98 ADRP X21, 0x78A000
	0x03C5CE9C LDRB W8, [X21 + 0x1D0]
	0x03C5CEA0 MOV X19, X1
	0x03C5CEA4 MOV X20, X0
	0x03C5CEA8 TBNZ X8, 0x0, 0x3C5CED8
	0x03C5CEAC ADRP X0, 0x497000
	0x03C5CEB0 LDR X0, [X0 + 0xA28]
	0x03C5CEB4 BL 0x1C16CF4
	0x03C5CEB8 ADRP X0, 0x497000
	0x03C5CEBC LDR X0, [X0 + 0x9D0]
	0x03C5CEC0 BL 0x1C16CF4
	0x03C5CEC4 ADRP X0, 0x503000
	0x03C5CEC8 LDR X0, [X0 + 0xF78]
	0x03C5CECC BL 0x1C16CF4
	0x03C5CED0 MOVZ W8, 0x1
	0x03C5CED4 STRB W8, [X21 + 0x1D0]
	0x03C5CED8 STR X19, [X20]
	0x03C5CEDC ADRP X21, 0x78A000
	0x03C5CEE0 LDR X8, [X21 + 0x1C0]
	0x03C5CEE4 CBNZ X8, 0x3C5CEFC
	0x03C5CEE8 ADRP X0, 0xFFFFFFFFFCEAF000
	0x03C5CEEC ADD X0, X0, 0x7F4
	0x03C5CEF0 BL 0x1C16CB8

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+136], X21
	004 Move [X31+144], X20
	005 Move [X31+152], X19
	006 Move X21, 0x78B000
	007 Move W8, [X21+424]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x504000
	015 Move X0, [X0+3888]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+424], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x504000
	022 Move X8, [X8+3888]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move X1, X0
	030 Add X0, X31, 8
	031 Move W2, 116
	032 Call 0x3EB2AC0
	033 Add X1, X31, 8
	034 Move X0, X19
	035 Call VisibleLight.Equals, X0, X1
	036 Move X20, [X31+144]
	037 Move X19, [X31+152]
	038 Move X30, [X31+128]
	039 Move X21, [X31+136]
	040 And W0, W0, 1
	041 Add X31, X31, 160
	042 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C5CEF4 MOV X8, X0
	0x03C5CEF8 STR X0, [X21 + 0x1C0]
	0x03C5CEFC MOV X0, X19
	0x03C5CF00 BLR X8
	0x03C5CF04 STR W0, [X20 + 0x8]
	0x03C5CF08 ADRP X20, 0x78A000
	0x03C5CF0C LDR X8, [X20 + 0x1B8]
	0x03C5CF10 MOV W21, W0
	0x03C5CF14 CBNZ X8, 0x3C5CF2C
	0x03C5CF18 ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C5CF1C ADD X0, X0, 0x270
	0x03C5CF20 BL 0x1C16CB8
	0x03C5CF24 MOV X8, X0
	0x03C5CF28 STR X0, [X20 + 0x1B8]
	0x03C5CF2C BLR X8
	0x03C5CF30 CMP W21, W0
	0x03C5CF34 B.CS 0x3C5CF44
	0x03C5CF38 LDP X20, X19, [X31 + 0x10]
	0x03C5CF3C LDP X30, X21, [X31], #0x20
	0x03C5CF40 RET
	0x03C5CF44 ADRP X8, 0x497000
	0x03C5CF48 LDR X8, [X8 + 0x9D0]
	0x03C5CF4C MOVZ W1, 0x1
	0x03C5CF50 LDR X0, [X8]
	0x03C5CF54 BL 0x1C16D6C
	0x03C5CF58 CBZ X0, 0x3C5CFBC
	0x03C5CF5C MOV X20, X0
	0x03C5CF60 CBZ X19, 0x3C5CF78
	0x03C5CF64 LDR X8, [X20]
	0x03C5CF68 MOV X0, X19
	0x03C5CF6C LDR X1, [X8 + 0x40]
	0x03C5CF70 BL 0x1C16E00
	0x03C5CF74 CBZ X0, 0x3C5CFC4
	0x03C5CF78 LDR W8, [X20 + 0x18]
	0x03C5CF7C CBZ W8, 0x3C5CFC0
	0x03C5CF80 STR X19, [X20 + 0x20]
	0x03C5CF84 ADRP X8, 0x497000
	0x03C5CF88 LDR X8, [X8 + 0xA28]
	0x03C5CF8C LDR X0, [X8]
	0x03C5CF90 LDR W8, [X0 + 0xE0]
	0x03C5CF94 CBNZ W8, 0x3C5CF9C
	0x03C5CF98 BL 0x1C16DFC
	0x03C5CF9C ADRP X8, 0x503000
	0x03C5CFA0 LDR X8, [X8 + 0xF78]
	0x03C5CFA4 MOV X1, X20
	0x03C5CFA8 LDP X20, X19, [X31 + 0x10]
	0x03C5CFAC MOV X2, X31
	0x03C5CFB0 LDR X0, [X8]
	0x03C5CFB4 LDP X30, X21, [X31], #0x20
	0x03C5CFB8 B 0x3C066BC
	0x03C5CFBC BL 0x1C16F20
	0x03C5CFC0 BL 0x1C16F28
	0x03C5CFC4 BL 0x1C16F44
	0x03C5CFC8 MOV X1, X31
	0x03C5CFCC BL 0x1C16DEC
	0x03C5CFD0 LDR X0, [X0]
	0x03C5CFD4 RET
	0x03C5CFD8 STR X30, [X31 - 0x20]!
	0x03C5CFDC STP X20, X19, [X31 + 0x10]
	0x03C5CFE0 ADRP X20, 0x78A000
	0x03C5CFE4 LDR X1, [X20 + 0x1D8]
	0x03C5CFE8 MOV X19, X0
	0x03C5CFEC CBNZ X1, 0x3C5D004
	0x03C5CFF0 ADRP X0, 0xFFFFFFFFFCEC1000
	0x03C5CFF4 ADD X0, X0, 0x482

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 NotImplemented "Instruction LDUR not yet implemented."
	010 Move W24, [X0]
	011 Move X19, X0
	012 Add X8, X31, 0
	013 Add X0, X31, 0
	014 Move X1, X31
	015 Or X20, X8, 7
	016 Or X21, X8, 15
	017 Or X22, X8, 15
	018 Move [X31], V0
	019 Call Single.GetHashCode, X0
	020 Move W23, W0
	021 Move X0, X20
	022 Move X1, X31
	023 Call Single.GetHashCode, X0
	024 Move W20, W0
	025 Move X0, X21
	026 Move X1, X31
	027 Call Single.GetHashCode, X0
	028 Move W21, W0
	029 Move X0, X22
	030 Move X1, X31
	031 Call Single.GetHashCode, X0
	032 Move W22, 397
	033 Multiply W8, W24, W22
	034 Xor W8, W23, W8
	035 Xor W8, W8, W20
	036 Xor W8, W8, W21
	037 Xor W20, W8, W0
	038 Add X0, X19, 20
	039 Move X1, X31
	040 Call Rect.GetHashCode, X0
	041 Multiply W8, W20, W22
	042 Xor W20, W8, W0
	043 Add X0, X19, 36
	044 Move X1, X31
	045 Call 0x2478824
	046 Multiply W8, W20, W22
	047 Xor W20, W8, W0
	048 Add X0, X19, 100
	049 Move X1, X31
	050 Call Single.GetHashCode, X0
	051 Multiply W8, W20, W22
	052 Xor W20, W8, W0
	053 Add X0, X19, 104
	054 Move X1, X31
	055 Call Single.GetHashCode, X0
	056 Move W9, [X19+108]
	057 Move W10, [X19+112]
	058 Multiply W8, W20, W22
	059 Xor W8, W8, W0
	060 Multiply W8, W8, W22
	061 Xor W8, W8, W9
	062 Multiply W8, W8, W22
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X30, [X31+16]
	070 Xor W0, W8, W10
	071 Add X31, X31, 80
	072 Return X0

