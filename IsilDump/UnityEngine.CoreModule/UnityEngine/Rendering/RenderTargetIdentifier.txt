Type: UnityEngine.Rendering.RenderTargetIdentifier

Method: System.Void .ctor(UnityEngine.Rendering.BuiltinRenderTextureType type)

Disassembly:
	0x03C4C004 STP X20, X19, [X31 + 0x10]
	0x03C4C008 ADRP X20, 0x799000
	0x03C4C00C LDR X1, [X20 + 0xE08]
	0x03C4C010 MOV X19, X0
	0x03C4C014 CBNZ X1, 0x3C4C02C
	0x03C4C018 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C4C01C ADD X0, X0, 0xC30
	0x03C4C020 BL 0x1C16CB8

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 NotImplemented "Instruction MOVI not yet implemented."
	003 Move [X0], W1
	004 Move [X0+16], X31
	005 Move [X0+4], D0
	006 Move [X0+24], D1
	007 Move [X0+32], W31
	008 Return 

Method: System.Void .ctor(System.String name)

Disassembly:
	0x03C4C024 MOV X1, X0
	0x03C4C028 STR X0, [X20 + 0xE08]
	0x03C4C02C MOV X0, X19
	0x03C4C030 LDP X20, X19, [X31 + 0x10]
	0x03C4C034 LDR X30, [X31], #0x20
	0x03C4C038 BR X1
	0x03C4C03C SUB X31, X31, 0x40
	0x03C4C040 STR X30, [X31 + 0x10]
	0x03C4C044 STP X22, X21, [X31 + 0x20]
	0x03C4C048 STP X20, X19, [X31 + 0x30]
	0x03C4C04C ADRP X22, 0x799000
	0x03C4C050 LDR X8, [X22 + 0xF50]
	0x03C4C054 MOV W19, W2
	0x03C4C058 MOV X20, X1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move TEMP, 3
	004 Not TEMP
	005 Move W8, TEMP
	006 Move X19, X0
	007 Move [X0], W8
	008 Move X0, X1
	009 Move X1, X31
	010 Call Shader.PropertyToID, X0
	011 NotImplemented "Instruction MOVI not yet implemented."
	012 Move [X19+4], W0
	013 Move [X19+8], W31
	014 Move [X19+16], X31
	015 Move [X19+24], D0
	016 Move [X19+32], W31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 

Method: System.Void .ctor(System.Int32 nameID)

Disassembly:
	0x03C4C05C MOV X21, X0
	0x03C4C060 STP S0, S1, [X31]
	0x03C4C064 STP S2, S3, [X31 + 0x8]
	0x03C4C068 CBNZ X8, 0x3C4C080
	0x03C4C06C ADRP X0, 0xFFFFFFFFFCED7000
	0x03C4C070 ADD X0, X0, 0x47B
	0x03C4C074 BL 0x1C16CB8
	0x03C4C078 MOV X8, X0

ISIL:
	001 Move TEMP, 3
	002 Not TEMP
	003 Move W8, TEMP
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Move [X0+4], W1
	006 Move [X0+8], W31
	007 Move [X0+16], X31
	008 Move [X0], W8
	009 Move [X0+24], D0
	010 Move [X0+32], W31
	011 Return 

Method: System.Void .ctor(System.Int32 nameID, System.Int32 mipLevel = 0, UnityEngine.CubemapFace cubeFace = -1, System.Int32 depthSlice = 0)

Disassembly:
	0x03C4C07C STR X0, [X22 + 0xF50]
	0x03C4C080 ADD X3, X31, 0x0
	0x03C4C084 MOV X0, X21
	0x03C4C088 MOV X1, X20
	0x03C4C08C MOV W2, W19
	0x03C4C090 BLR X8
	0x03C4C094 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move TEMP, 3
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+4], W1
	005 Move [X0+8], W31
	006 Move [X0+16], X31
	007 Move [X0+24], W2
	008 Move [X0+28], W3
	009 Move [X0], W8
	010 Move [X0+32], W4
	011 Return 

Method: System.Void .ctor(UnityEngine.Rendering.RenderTargetIdentifier renderTargetIdentifier, System.Int32 mipLevel, UnityEngine.CubemapFace cubeFace = -1, System.Int32 depthSlice = 0)

Disassembly:
	0x03C4C098 LDP X22, X21, [X31 + 0x20]
	0x03C4C09C LDR X30, [X31 + 0x10]
	0x03C4C0A0 ADD X31, X31, 0x40
	0x03C4C0A4 RET
	0x03C4C0A8 STP X30, X23, [X31 - 0x30]!
	0x03C4C0AC STP X22, X21, [X31 + 0x10]
	0x03C4C0B0 STP X20, X19, [X31 + 0x20]
	0x03C4C0B4 ADRP X23, 0x799000
	0x03C4C0B8 LDR X4, [X23 + 0xF50]
	0x03C4C0BC MOV X19, X3
	0x03C4C0C0 MOV W20, W2

ISIL:
	001 Move W8, [X1]
	002 Move [X0], W8
	003 Move W8, [X1+4]
	004 Move [X0+4], W8
	005 Move W8, [X1+8]
	006 Move [X0+8], W8
	007 Move X8, [X1+16]
	008 Move [X0+24], W2
	009 Move [X0+28], W3
	010 Move [X0+32], W4
	011 Move [X0+16], X8
	012 Return 

Method: System.Void .ctor(UnityEngine.Texture tex)

Disassembly:
	0x03C4C0C4 MOV X21, X1
	0x03C4C0C8 MOV X22, X0
	0x03C4C0CC CBNZ X4, 0x3C4C0E4
	0x03C4C0D0 ADRP X0, 0xFFFFFFFFFCED7000
	0x03C4C0D4 ADD X0, X0, 0x47B
	0x03C4C0D8 BL 0x1C16CB8
	0x03C4C0DC MOV X4, X0
	0x03C4C0E0 STR X0, [X23 + 0xF50]
	0x03C4C0E4 MOV X0, X22
	0x03C4C0E8 MOV X1, X21
	0x03C4C0EC MOV W2, W20
	0x03C4C0F0 MOV X3, X19
	0x03C4C0F4 LDP X20, X19, [X31 + 0x20]
	0x03C4C0F8 LDP X22, X21, [X31 + 0x10]
	0x03C4C0FC LDP X30, X23, [X31], #0x30
	0x03C4C100 BR X4
	0x03C4C104 STP X30, X23, [X31 - 0x30]!
	0x03C4C108 STP X22, X21, [X31 + 0x10]
	0x03C4C10C STP X20, X19, [X31 + 0x20]
	0x03C4C110 ADRP X23, 0x799000
	0x03C4C114 LDR X4, [X23 + 0xE10]
	0x03C4C118 MOV X19, X3
	0x03C4C11C MOV W20, W2
	0x03C4C120 MOV X21, X1
	0x03C4C124 MOV X22, X0
	0x03C4C128 CBNZ X4, 0x3C4C140
	0x03C4C12C ADRP X0, 0xFFFFFFFFFCED9000
	0x03C4C130 ADD X0, X0, 0x231
	0x03C4C134 BL 0x1C16CB8
	0x03C4C138 MOV X4, X0
	0x03C4C13C STR X0, [X23 + 0xE10]
	0x03C4C140 MOV X0, X22
	0x03C4C144 MOV X1, X21
	0x03C4C148 MOV W2, W20
	0x03C4C14C MOV X3, X19
	0x03C4C150 LDP X20, X19, [X31 + 0x20]
	0x03C4C154 LDP X22, X21, [X31 + 0x10]
	0x03C4C158 LDP X30, X23, [X31], #0x30
	0x03C4C15C BR X4
	0x03C4C160 STR X30, [X31 - 0x50]!
	0x03C4C164 STP X26, X25, [X31 + 0x10]
	0x03C4C168 STP X24, X23, [X31 + 0x20]
	0x03C4C16C STP X22, X21, [X31 + 0x30]
	0x03C4C170 STP X20, X19, [X31 + 0x40]
	0x03C4C174 ADRP X26, 0x799000
	0x03C4C178 LDR X7, [X26 + 0xE18]
	0x03C4C17C MOV W19, W6
	0x03C4C180 MOV W20, W5
	0x03C4C184 MOV X21, X4
	0x03C4C188 MOV W22, W3
	0x03C4C18C MOV W23, W2
	0x03C4C190 MOV X24, X1
	0x03C4C194 MOV X25, X0
	0x03C4C198 CBNZ X7, 0x3C4C1B0
	0x03C4C19C ADRP X0, 0xFFFFFFFFFCECA000
	0x03C4C1A0 ADD X0, X0, 0xDE9
	0x03C4C1A4 BL 0x1C16CB8
	0x03C4C1A8 MOV X7, X0
	0x03C4C1AC STR X0, [X26 + 0xE18]
	0x03C4C1B0 MOV X0, X25
	0x03C4C1B4 MOV X1, X24
	0x03C4C1B8 MOV W2, W23
	0x03C4C1BC MOV W3, W22
	0x03C4C1C0 MOV X4, X21
	0x03C4C1C4 MOV W5, W20
	0x03C4C1C8 MOV W6, W19
	0x03C4C1CC LDP X20, X19, [X31 + 0x40]
	0x03C4C1D0 LDP X22, X21, [X31 + 0x30]
	0x03C4C1D4 LDP X24, X23, [X31 + 0x20]
	0x03C4C1D8 LDP X26, X25, [X31 + 0x10]
	0x03C4C1DC LDR X30, [X31], #0x50
	0x03C4C1E0 BR X7

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x79A000
	007 Move X21, 0x4A8000
	008 Move W8, [X22+3419]
	009 Move X21, [X21+1432]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4A8000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x4AA000
	020 Move X0, [X0+304]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3419], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call Object.op_Equality, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {38}
	037 Move W8, W31
	038 Compare X20, 0
	039 JumpIfEqual {51}
	040 Move X8, 0x4AA000
	041 Move X8, [X8+304]
	042 Move X9, [X20]
	043 Move X8, [X8]
	044 Move W11, [X9+304]
	045 Move W10, [X8+304]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X9, [X9+200]
	048 Add X9, X9, X10
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W8, TEMP
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W9, TEMP
	057 Move [X19+16], X31
	058 Move [X19], W8
	059 Move [X19+4], W9
	060 Move X0, [X21]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X20
	066 Move X1, X31
	067 Call Object.op_Implicit, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {77}
	072 Compare X20, 0
	073 JumpIfEqual {91}
	074 Move X0, X20
	075 Move X1, X31
	076 Call Object.GetInstanceID, X0
	077 Move W0, W31
	078 NotImplemented "Instruction MOVI not yet implemented."
	079 Move [X19+8], W0
	080 Move [X19+24], D0
	081 Move [X19+32], W31
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return 
	088 Move TEMP, 1
	089 Not TEMP
	090 Move W8, TEMP
	091 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.RenderBuffer buf, System.Int32 mipLevel = 0, UnityEngine.CubemapFace cubeFace = -1, System.Int32 depthSlice = 0)

Disassembly:
	0x03C4C1E4 STP X30, X25, [X31 - 0x40]!
	0x03C4C1E8 STP X24, X23, [X31 + 0x10]
	0x03C4C1EC STP X22, X21, [X31 + 0x20]
	0x03C4C1F0 STP X20, X19, [X31 + 0x30]
	0x03C4C1F4 ADRP X25, 0x799000
	0x03C4C1F8 LDR X6, [X25 + 0xE20]
	0x03C4C1FC MOV W19, W5
	0x03C4C200 MOV W20, W4

ISIL:
	001 Move X8, -51765248
	002 Move V0, [X8+1712]
	003 Move [X0+8], W1
	004 Move [X0+16], X2
	005 Move [X0+24], W3
	006 Move [X0+28], W4
	007 Move [X0], D0
	008 Move [X0+32], W5
	009 Return 

Method: UnityEngine.Rendering.RenderTargetIdentifier op_Implicit(UnityEngine.Rendering.BuiltinRenderTextureType type)

Disassembly:
	0x03C4C204 MOV X21, X3
	0x03C4C208 MOV W22, W2
	0x03C4C20C MOV X23, X1
	0x03C4C210 MOV X24, X0
	0x03C4C214 CBNZ X6, 0x3C4C22C
	0x03C4C218 ADRP X0, 0xFFFFFFFFFCED4000
	0x03C4C21C ADD X0, X0, 0xCB5
	0x03C4C220 BL 0x1C16CB8
	0x03C4C224 MOV X6, X0

ISIL:
	001 Move X9, -51769344
	002 Move V1, [X9+169]
	003 NotImplemented "Instruction MOVI not yet implemented."
	004 Move [X8], W0
	005 Move [X8+4], D0
	006 Move [X8+12], W31
	007 Move [X8+16], X31
	008 Move [X8+24], V1
	009 Return X0

Method: UnityEngine.Rendering.RenderTargetIdentifier op_Implicit(System.String name)

Disassembly:
	0x03C4C228 STR X0, [X25 + 0xE20]
	0x03C4C22C MOV X0, X24
	0x03C4C230 MOV X1, X23
	0x03C4C234 MOV W2, W22
	0x03C4C238 MOV X3, X21
	0x03C4C23C MOV W4, W20
	0x03C4C240 MOV W5, W19
	0x03C4C244 LDP X20, X19, [X31 + 0x30]
	0x03C4C248 LDP X22, X21, [X31 + 0x20]
	0x03C4C24C LDP X24, X23, [X31 + 0x10]
	0x03C4C250 LDP X30, X25, [X31], #0x40
	0x03C4C254 BR X6

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X8
	005 Call Shader.PropertyToID, X0
	006 Move X9, -51769344
	007 Move V0, [X9+169]
	008 Move TEMP, 3
	009 Not TEMP
	010 Move W8, TEMP
	011 Move [X19], W8
	012 Move [X19+4], W0
	013 Move [X19+8], X31
	014 Move [X19+16], X31
	015 Move [X19+24], V0
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0

Method: UnityEngine.Rendering.RenderTargetIdentifier op_Implicit(System.Int32 nameID)

Disassembly:
	0x03C4C258 STP X30, X25, [X31 - 0x40]!
	0x03C4C25C STP X24, X23, [X31 + 0x10]
	0x03C4C260 STP X22, X21, [X31 + 0x20]
	0x03C4C264 STP X20, X19, [X31 + 0x30]
	0x03C4C268 ADRP X25, 0x799000
	0x03C4C26C LDR X6, [X25 + 0xE28]
	0x03C4C270 MOV W19, W5

ISIL:
	001 Move X10, -51769344
	002 Move V0, [X10+169]
	003 Move TEMP, 3
	004 Not TEMP
	005 Move W9, TEMP
	006 Move [X8], W9
	007 Move [X8+4], W0
	008 Move [X8+8], X31
	009 Move [X8+16], X31
	010 Move [X8+24], V0
	011 Return X0

Method: UnityEngine.Rendering.RenderTargetIdentifier op_Implicit(UnityEngine.Texture tex)

Disassembly:
	0x03C4C274 MOV W20, W4
	0x03C4C278 MOV W21, W3
	0x03C4C27C MOV W22, W2
	0x03C4C280 MOV X23, X1
	0x03C4C284 MOV X24, X0
	0x03C4C288 CBNZ X6, 0x3C4C2A0
	0x03C4C28C ADRP X0, 0xFFFFFFFFFCEAF000
	0x03C4C290 ADD X0, X0, 0x5B4
	0x03C4C294 BL 0x1C16CB8
	0x03C4C298 MOV X6, X0
	0x03C4C29C STR X0, [X25 + 0xE28]
	0x03C4C2A0 MOV X0, X24
	0x03C4C2A4 MOV X1, X23
	0x03C4C2A8 MOV W2, W22
	0x03C4C2AC MOV W3, W21
	0x03C4C2B0 MOV W4, W20
	0x03C4C2B4 MOV W5, W19
	0x03C4C2B8 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+96], X30
	003 Move [X31+104], X19
	004 Move X1, X0
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Add X0, X31, 0
	007 Move X19, X8
	008 Move [X31+32], X31
	009 Move [X31], V0
	010 Move [X31+8], V0
	011 Call RenderTargetIdentifier..ctor, X0, X1
	012 Move X8, [X31+32]
	013 Move V1, [X31]
	014 Move V0, [X31+16]
	015 Move [X19+32], X8
	016 Move [X19], V1
	017 Move [X19+8], V0
	018 Move X30, [X31+96]
	019 Move X19, [X31+104]
	020 Move [X31+80], X8
	021 Move [X31+48], V1
	022 Move [X31+56], V0
	023 Add X31, X31, 112
	024 Return X0

Method: System.String ToString()

Disassembly:
	0x03C4C2BC LDP X22, X21, [X31 + 0x20]
	0x03C4C2C0 LDP X24, X23, [X31 + 0x10]
	0x03C4C2C4 LDP X30, X25, [X31], #0x40
	0x03C4C2C8 BR X6
	0x03C4C2CC STP X30, X21, [X31 - 0x20]!
	0x03C4C2D0 STP X20, X19, [X31 + 0x10]
	0x03C4C2D4 ADRP X21, 0x799000
	0x03C4C2D8 LDR X2, [X21 + 0xE30]
	0x03C4C2DC MOV X19, X1
	0x03C4C2E0 MOV X20, X0
	0x03C4C2E4 CBNZ X2, 0x3C4C2FC
	0x03C4C2E8 ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C4C2EC ADD X0, X0, 0x30C
	0x03C4C2F0 BL 0x1C16CB8
	0x03C4C2F4 MOV X2, X0
	0x03C4C2F8 STR X0, [X21 + 0xE30]
	0x03C4C2FC MOV X0, X20
	0x03C4C300 MOV X1, X19
	0x03C4C304 LDP X20, X19, [X31 + 0x10]
	0x03C4C308 LDP X30, X21, [X31], #0x20
	0x03C4C30C BR X2
	0x03C4C310 STR X30, [X31 - 0x20]!
	0x03C4C314 STP X20, X19, [X31 + 0x10]
	0x03C4C318 ADRP X20, 0x799000
	0x03C4C31C LDR X1, [X20 + 0xE38]
	0x03C4C320 MOV X19, X0
	0x03C4C324 CBNZ X1, 0x3C4C33C
	0x03C4C328 ADRP X0, 0xFFFFFFFFFCEBD000
	0x03C4C32C ADD X0, X0, 0x791
	0x03C4C330 BL 0x1C16CB8
	0x03C4C334 MOV X1, X0
	0x03C4C338 STR X0, [X20 + 0xE38]
	0x03C4C33C MOV X0, X19
	0x03C4C340 LDP X20, X19, [X31 + 0x10]
	0x03C4C344 LDR X30, [X31], #0x20
	0x03C4C348 BR X1
	0x03C4C34C STR X30, [X31 - 0x50]!
	0x03C4C350 STP X26, X25, [X31 + 0x10]
	0x03C4C354 STP X24, X23, [X31 + 0x20]
	0x03C4C358 STP X22, X21, [X31 + 0x30]
	0x03C4C35C STP X20, X19, [X31 + 0x40]
	0x03C4C360 ADRP X26, 0x799000
	0x03C4C364 LDR X7, [X26 + 0xF58]
	0x03C4C368 MOV X19, X6
	0x03C4C36C MOV W20, W5
	0x03C4C370 MOV W21, W4
	0x03C4C374 MOV X22, X3
	0x03C4C378 MOV X23, X2
	0x03C4C37C MOV X24, X1
	0x03C4C380 MOV X25, X0
	0x03C4C384 CBNZ X7, 0x3C4C39C
	0x03C4C388 ADRP X0, 0xFFFFFFFFFCED9000
	0x03C4C38C ADD X0, X0, 0x2AF
	0x03C4C390 BL 0x1C16CB8
	0x03C4C394 MOV X7, X0
	0x03C4C398 STR X0, [X26 + 0xF58]
	0x03C4C39C MOV X0, X25
	0x03C4C3A0 MOV X1, X24
	0x03C4C3A4 MOV X2, X23
	0x03C4C3A8 MOV X3, X22
	0x03C4C3AC MOV W4, W21
	0x03C4C3B0 MOV W5, W20
	0x03C4C3B4 MOV X6, X19
	0x03C4C3B8 LDP X20, X19, [X31 + 0x40]
	0x03C4C3BC LDP X22, X21, [X31 + 0x30]
	0x03C4C3C0 LDP X24, X23, [X31 + 0x20]
	0x03C4C3C4 LDP X26, X25, [X31 + 0x10]
	0x03C4C3C8 LDR X30, [X31], #0x50
	0x03C4C3CC BR X7
	0x03C4C3D0 STR X30, [X31 - 0x50]!
	0x03C4C3D4 STP X26, X25, [X31 + 0x10]
	0x03C4C3D8 STP X24, X23, [X31 + 0x20]
	0x03C4C3DC STP X22, X21, [X31 + 0x30]
	0x03C4C3E0 STP X20, X19, [X31 + 0x40]
	0x03C4C3E4 ADRP X26, 0x799000
	0x03C4C3E8 LDR X7, [X26 + 0xF58]
	0x03C4C3EC MOV X19, X6
	0x03C4C3F0 MOV W20, W5
	0x03C4C3F4 MOV W21, W4
	0x03C4C3F8 MOV X22, X3
	0x03C4C3FC MOV X23, X2
	0x03C4C400 MOV X24, X1
	0x03C4C404 MOV X25, X0
	0x03C4C408 CBNZ X7, 0x3C4C420
	0x03C4C40C ADRP X0, 0xFFFFFFFFFCED9000
	0x03C4C410 ADD X0, X0, 0x2AF
	0x03C4C414 BL 0x1C16CB8
	0x03C4C418 MOV X7, X0
	0x03C4C41C STR X0, [X26 + 0xF58]
	0x03C4C420 MOV X0, X25
	0x03C4C424 MOV X1, X24
	0x03C4C428 MOV X2, X23
	0x03C4C42C MOV X3, X22
	0x03C4C430 MOV W4, W21
	0x03C4C434 MOV W5, W20
	0x03C4C438 MOV X6, X19
	0x03C4C43C LDP X20, X19, [X31 + 0x40]
	0x03C4C440 LDP X22, X21, [X31 + 0x30]
	0x03C4C444 LDP X24, X23, [X31 + 0x20]
	0x03C4C448 LDP X26, X25, [X31 + 0x10]
	0x03C4C44C LDR X30, [X31], #0x50
	0x03C4C450 BR X7
	0x03C4C454 STR X30, [X31 - 0x40]!
	0x03C4C458 STP X24, X23, [X31 + 0x10]
	0x03C4C45C STP X22, X21, [X31 + 0x20]
	0x03C4C460 STP X20, X19, [X31 + 0x30]
	0x03C4C464 ADRP X24, 0x799000
	0x03C4C468 LDR X5, [X24 + 0xE40]
	0x03C4C46C MOV W19, W4
	0x03C4C470 MOV W20, W3
	0x03C4C474 MOV X21, X2
	0x03C4C478 MOV X22, X1
	0x03C4C47C MOV X23, X0
	0x03C4C480 CBNZ X5, 0x3C4C498
	0x03C4C484 ADRP X0, 0xFFFFFFFFFCEDE000
	0x03C4C488 ADD X0, X0, 0xC2B
	0x03C4C48C BL 0x1C16CB8
	0x03C4C490 MOV X5, X0
	0x03C4C494 STR X0, [X24 + 0xE40]
	0x03C4C498 MOV X0, X23
	0x03C4C49C MOV X1, X22
	0x03C4C4A0 MOV X2, X21
	0x03C4C4A4 MOV W3, W20
	0x03C4C4A8 MOV W4, W19
	0x03C4C4AC LDP X20, X19, [X31 + 0x30]
	0x03C4C4B0 LDP X22, X21, [X31 + 0x20]
	0x03C4C4B4 LDP X24, X23, [X31 + 0x10]
	0x03C4C4B8 LDR X30, [X31], #0x40
	0x03C4C4BC BR X5
	0x03C4C4C0 STP X30, X21, [X31 - 0x20]!
	0x03C4C4C4 STP X20, X19, [X31 + 0x10]
	0x03C4C4C8 ADRP X21, 0x799000
	0x03C4C4CC LDR X2, [X21 + 0xF60]
	0x03C4C4D0 MOV X19, X1
	0x03C4C4D4 MOV X20, X0
	0x03C4C4D8 CBNZ X2, 0x3C4C4F0
	0x03C4C4DC ADRP X0, 0xFFFFFFFFFCEA9000
	0x03C4C4E0 ADD X0, X0, 0x628
	0x03C4C4E4 BL 0x1C16CB8
	0x03C4C4E8 MOV X2, X0
	0x03C4C4EC STR X0, [X21 + 0xF60]
	0x03C4C4F0 MOV X0, X20
	0x03C4C4F4 MOV X1, X19
	0x03C4C4F8 LDP X20, X19, [X31 + 0x10]
	0x03C4C4FC LDP X30, X21, [X31], #0x20
	0x03C4C500 BR X2
	0x03C4C504 STP X30, X21, [X31 - 0x20]!
	0x03C4C508 STP X20, X19, [X31 + 0x10]
	0x03C4C50C ADRP X21, 0x799000
	0x03C4C510 LDR X2, [X21 + 0xF60]
	0x03C4C514 MOV X19, X1
	0x03C4C518 MOV X20, X0
	0x03C4C51C CBNZ X2, 0x3C4C534
	0x03C4C520 ADRP X0, 0xFFFFFFFFFCEA9000
	0x03C4C524 ADD X0, X0, 0x628
	0x03C4C528 BL 0x1C16CB8
	0x03C4C52C MOV X2, X0
	0x03C4C530 STR X0, [X21 + 0xF60]
	0x03C4C534 MOV X0, X20
	0x03C4C538 MOV X1, X19
	0x03C4C53C LDP X20, X19, [X31 + 0x10]
	0x03C4C540 LDP X30, X21, [X31], #0x20
	0x03C4C544 BR X2
	0x03C4C548 STP X30, X27, [X31 - 0x50]!
	0x03C4C54C STP X26, X25, [X31 + 0x10]
	0x03C4C550 STP X24, X23, [X31 + 0x20]
	0x03C4C554 STP X22, X21, [X31 + 0x30]
	0x03C4C558 STP X20, X19, [X31 + 0x40]
	0x03C4C55C ADRP X27, 0x799000
	0x03C4C560 LDR X8, [X27 + 0xF68]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0x79A000
	008 Move X22, 0x4A8000
	009 Move X21, 0x514000
	010 Move W8, [X20+3420]
	011 Move X22, [X22+2512]
	012 Move X21, [X21+3032]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x514000
	019 Move X0, [X0+3032]
	020 Call 0x1C17CF4
	021 Move X0, 0x514000
	022 Move X0, [X0+3040]
	023 Call 0x1C17CF4
	024 Move X0, 0x4A8000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0x4D1000
	028 Move X0, [X0+3872]
	029 Call 0x1C17CF4
	030 Move X0, 0x4A8000
	031 Move X0, [X0+2512]
	032 Call 0x1C17CF4
	033 Move X0, 0x514000
	034 Move X0, [X0+3048]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+3420], W8
	038 Move X0, [X22]
	039 Move W1, 7
	040 Call 0x1C17D6C
	041 Move X20, X0
	042 Move W8, [X19]
	043 Move X0, [X21]
	044 Add X1, X31, 44
	045 Move [X31+44], W8
	046 Call 0x1C17E04
	047 Compare X20, 0
	048 JumpIfEqual {187}
	049 Move X21, X0
	050 Compare X0, 0
	051 JumpIfEqual {58}
	052 Move X8, [X20]
	053 Move X0, X21
	054 Move X1, [X8+64]
	055 Call 0x1C17E00
	056 Compare X0, 0
	057 JumpIfEqual {184}
	058 Move W8, [X20+24]
	059 Compare W8, 0
	060 JumpIfEqual {183}
	061 Move X22, 0x4A8000
	062 Move X22, [X22+1880]
	063 Move [X20+32], X21
	064 Move W8, [X19+4]
	065 Add X1, X31, 40
	066 Move X0, [X22]
	067 Move [X31+40], W8
	068 Call 0x1C17E04
	069 Move X21, X0
	070 Compare X0, 0
	071 JumpIfEqual {78}
	072 Move X8, [X20]
	073 Move X0, X21
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {184}
	078 Move W8, [X20+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move [X20+40], X21
	081 Move W8, [X19+8]
	082 Move X0, [X22]
	083 Add X1, X31, 28
	084 Move [X31+28], W8
	085 Call 0x1C17E04
	086 Move X21, X0
	087 Compare X0, 0
	088 JumpIfEqual {95}
	089 Move X8, [X20]
	090 Move X0, X21
	091 Move X1, [X8+64]
	092 Call 0x1C17E00
	093 Compare X0, 0
	094 JumpIfEqual {184}
	095 Move W8, [X20+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X8, 0x4D1000
	098 Move X8, [X8+3872]
	099 Move [X20+48], X21
	100 Move X9, [X19+16]
	101 Add X1, X31, 16
	102 Move X0, [X8]
	103 Move [X31+16], X9
	104 Call 0x1C17E04
	105 Move X21, X0
	106 Compare X0, 0
	107 JumpIfEqual {114}
	108 Move X8, [X20]
	109 Move X0, X21
	110 Move X1, [X8+64]
	111 Call 0x1C17E00
	112 Compare X0, 0
	113 JumpIfEqual {184}
	114 Move W8, [X20+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move [X20+56], X21
	117 Move W8, [X19+24]
	118 Move X0, [X22]
	119 Add X1, X31, 12
	120 Move [X31+12], W8
	121 Call 0x1C17E04
	122 Move X21, X0
	123 Compare X0, 0
	124 JumpIfEqual {131}
	125 Move X8, [X20]
	126 Move X0, X21
	127 Move X1, [X8+64]
	128 Call 0x1C17E00
	129 Compare X0, 0
	130 JumpIfEqual {184}
	131 Move W8, [X20+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X8, 0x514000
	134 Move X8, [X8+3040]
	135 Move [X20+64], X21
	136 Move W9, [X19+28]
	137 Add X1, X31, 8
	138 Move X0, [X8]
	139 Move [X31+8], W9
	140 Call 0x1C17E04
	141 Move X21, X0
	142 Compare X0, 0
	143 JumpIfEqual {150}
	144 Move X8, [X20]
	145 Move X0, X21
	146 Move X1, [X8+64]
	147 Call 0x1C17E00
	148 Compare X0, 0
	149 JumpIfEqual {184}
	150 Move W8, [X20+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move [X20+72], X21
	153 Move W8, [X19+32]
	154 Move X0, [X22]
	155 Add X1, X31, 4
	156 Move [X31+4], W8
	157 Call 0x1C17E04
	158 Move X19, X0
	159 Compare X0, 0
	160 JumpIfEqual {167}
	161 Move X8, [X20]
	162 Move X0, X19
	163 Move X1, [X8+64]
	164 Call 0x1C17E00
	165 Compare X0, 0
	166 JumpIfEqual {184}
	167 Move W8, [X20+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X8, 0x514000
	170 Move X8, [X8+3048]
	171 Move [X20+80], X19
	172 Move X1, X20
	173 Move X2, X31
	174 Move X0, [X8]
	175 Call UnityString.Format, X0, X1
	176 Move X20, [X31+64]
	177 Move X19, [X31+72]
	178 Move X22, [X31+48]
	179 Move X21, [X31+56]
	180 Move X30, [X31+32]
	181 Add X31, X31, 80
	182 Return X0
	183 Call 0x1C17F28
	184 Call 0x1C17F44
	185 Move X1, X31
	186 Call 0x1C17DEC
	187 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C4C564 MOV X19, X7
	0x03C4C568 MOV W20, W6
	0x03C4C56C MOV W21, W5
	0x03C4C570 MOV W22, W4
	0x03C4C574 MOV W23, W3
	0x03C4C578 MOV X24, X2
	0x03C4C57C MOV X25, X1
	0x03C4C580 MOV X26, X0
	0x03C4C584 CBNZ X8, 0x3C4C59C
	0x03C4C588 ADRP X0, 0xFFFFFFFFFCEA5000
	0x03C4C58C ADD X0, X0, 0x412
	0x03C4C590 BL 0x1C16CB8
	0x03C4C594 MOV X8, X0
	0x03C4C598 STR X0, [X27 + 0xF68]
	0x03C4C59C MOV X0, X26
	0x03C4C5A0 MOV X1, X25
	0x03C4C5A4 MOV X2, X24
	0x03C4C5A8 MOV W3, W23
	0x03C4C5AC MOV W4, W22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X1, X31
	006 Move X19, X0
	007 Call Int32.GetHashCode, X0
	008 Move W20, W0
	009 Add X0, X19, 4
	010 Move X1, X31
	011 Call Int32.GetHashCode, X0
	012 Move W21, W0
	013 Add X0, X19, 8
	014 Move X1, X31
	015 Call Int32.GetHashCode, X0
	016 Move W8, 23
	017 NotImplemented "Instruction MADD not yet implemented."
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 NotImplemented "Instruction MADD not yet implemented."
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return X0

Method: System.Boolean Equals(UnityEngine.Rendering.RenderTargetIdentifier rhs)

Disassembly:
	0x03C4C5B0 MOV W5, W21
	0x03C4C5B4 MOV W6, W20
	0x03C4C5B8 MOV X7, X19
	0x03C4C5BC LDP X20, X19, [X31 + 0x40]
	0x03C4C5C0 LDP X22, X21, [X31 + 0x30]
	0x03C4C5C4 LDP X24, X23, [X31 + 0x20]
	0x03C4C5C8 LDP X26, X25, [X31 + 0x10]
	0x03C4C5CC LDP X30, X27, [X31], #0x50
	0x03C4C5D0 BR X8
	0x03C4C5D4 STP X30, X27, [X31 - 0x50]!
	0x03C4C5D8 STP X26, X25, [X31 + 0x10]
	0x03C4C5DC STP X24, X23, [X31 + 0x20]
	0x03C4C5E0 STP X22, X21, [X31 + 0x30]
	0x03C4C5E4 STP X20, X19, [X31 + 0x40]
	0x03C4C5E8 ADRP X27, 0x799000
	0x03C4C5EC LDR X8, [X27 + 0xF68]
	0x03C4C5F0 MOV X19, X7
	0x03C4C5F4 MOV W20, W6
	0x03C4C5F8 MOV W21, W5
	0x03C4C5FC MOV W22, W4
	0x03C4C600 MOV W23, W3
	0x03C4C604 MOV X24, X2
	0x03C4C608 MOV X25, X1
	0x03C4C60C MOV X26, X0
	0x03C4C610 CBNZ X8, 0x3C4C628
	0x03C4C614 ADRP X0, 0xFFFFFFFFFCEA5000
	0x03C4C618 ADD X0, X0, 0x412
	0x03C4C61C BL 0x1C16CB8
	0x03C4C620 MOV X8, X0
	0x03C4C624 STR X0, [X27 + 0xF68]
	0x03C4C628 MOV X0, X26
	0x03C4C62C MOV X1, X25
	0x03C4C630 MOV X2, X24
	0x03C4C634 MOV W3, W23
	0x03C4C638 MOV W4, W22
	0x03C4C63C MOV W5, W21
	0x03C4C640 MOV W6, W20
	0x03C4C644 MOV X7, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0]
	005 Move W9, [X1]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, [X0+4]
	008 Move W9, [X1+4]
	009 Move X19, X1
	010 Move X20, X0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W8, [X20+8]
	013 Move W9, [X19+8]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, [X20+16]
	016 Move X1, [X19+16]
	017 Move X2, X31
	018 Call IntPtr.op_Equality, X0, X1
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {33}
	023 Move W8, [X20+24]
	024 Move W9, [X19+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, [X20+28]
	027 Move W9, [X19+28]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W8, [X20+32]
	030 Move W9, [X19+32]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move W0, W31
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C4C648 LDP X20, X19, [X31 + 0x40]
	0x03C4C64C LDP X22, X21, [X31 + 0x30]
	0x03C4C650 LDP X24, X23, [X31 + 0x20]
	0x03C4C654 LDP X26, X25, [X31 + 0x10]
	0x03C4C658 LDP X30, X27, [X31], #0x50
	0x03C4C65C BR X8
	0x03C4C660 STP X30, X27, [X31 - 0x50]!
	0x03C4C664 STP X26, X25, [X31 + 0x10]
	0x03C4C668 STP X24, X23, [X31 + 0x20]
	0x03C4C66C STP X22, X21, [X31 + 0x30]
	0x03C4C670 STP X20, X19, [X31 + 0x40]
	0x03C4C674 ADRP X27, 0x799000
	0x03C4C678 LDR X8, [X27 + 0xE48]
	0x03C4C67C MOV X19, X7
	0x03C4C680 MOV W20, W6
	0x03C4C684 MOV X21, X5
	0x03C4C688 MOV W22, W4
	0x03C4C68C MOV X23, X3
	0x03C4C690 MOV W24, W2
	0x03C4C694 MOV X25, X1
	0x03C4C698 MOV X26, X0
	0x03C4C69C CBNZ X8, 0x3C4C6B4
	0x03C4C6A0 ADRP X0, 0xFFFFFFFFFCECA000
	0x03C4C6A4 ADD X0, X0, 0xECC
	0x03C4C6A8 BL 0x1C16CB8
	0x03C4C6AC MOV X8, X0
	0x03C4C6B0 STR X0, [X27 + 0xE48]
	0x03C4C6B4 MOV X0, X26
	0x03C4C6B8 MOV X1, X25
	0x03C4C6BC MOV W2, W24
	0x03C4C6C0 MOV X3, X23
	0x03C4C6C4 MOV W4, W22
	0x03C4C6C8 MOV X5, X21
	0x03C4C6CC MOV W6, W20
	0x03C4C6D0 MOV X7, X19
	0x03C4C6D4 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x79A000
	007 Move W8, [X21+3421]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x514000
	015 Move X0, [X0+3056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3421], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x514000
	022 Move X8, [X8+3056]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move V0, [X0]
	030 Move V1, [X0+16]
	031 Move X8, [X0+32]
	032 Add X1, X31, 0
	033 Move X0, X19
	034 Move [X31], V0
	035 Move [X31+8], V1
	036 Move [X31+32], X8
	037 Call RenderTargetIdentifier.Equals, X0, X1
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X30, [X31+48]
	041 Move X21, [X31+56]
	042 And W0, W0, 1
	043 Add X31, X31, 80
	044 Return X0

Method: System.Boolean op_Equality(UnityEngine.Rendering.RenderTargetIdentifier lhs, UnityEngine.Rendering.RenderTargetIdentifier rhs)

Disassembly:
	0x03C4C6D8 LDP X22, X21, [X31 + 0x30]
	0x03C4C6DC LDP X24, X23, [X31 + 0x20]
	0x03C4C6E0 LDP X26, X25, [X31 + 0x10]
	0x03C4C6E4 LDP X30, X27, [X31], #0x50
	0x03C4C6E8 BR X8
	0x03C4C6EC SUB X31, X31, 0x30
	0x03C4C6F0 STP X2, X30, [X31 + 0x8]
	0x03C4C6F4 STP X20, X19, [X31 + 0x20]
	0x03C4C6F8 ADRP X20, 0x799000
	0x03C4C6FC LDR X8, [X20 + 0xF70]
	0x03C4C700 MOV X19, X0
	0x03C4C704 STR X1, [X31]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move X8, [X1+32]
	004 Move V1, [X1]
	005 Move V0, [X1+16]
	006 Add X1, X31, 0
	007 Move [X31+32], X8
	008 Move [X31], V1
	009 Move [X31+8], V0
	010 Call RenderTargetIdentifier.Equals, X0, X1
	011 Move X30, [X31+48]
	012 And W0, W0, 1
	013 Add X31, X31, 64
	014 Return X0

Method: System.Boolean op_Inequality(UnityEngine.Rendering.RenderTargetIdentifier lhs, UnityEngine.Rendering.RenderTargetIdentifier rhs)

Disassembly:
	0x03C4C708 CBNZ X8, 0x3C4C720
	0x03C4C70C ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C4C710 ADD X0, X0, 0x48B
	0x03C4C714 BL 0x1C16CB8
	0x03C4C718 MOV X8, X0
	0x03C4C71C STR X0, [X20 + 0xF70]
	0x03C4C720 ADD X1, X31, 0x0
	0x03C4C724 MOV X0, X19
	0x03C4C728 BLR X8
	0x03C4C72C LDP X20, X19, [X31 + 0x20]
	0x03C4C730 LDR X30, [X31 + 0x10]
	0x03C4C734 ADD X31, X31, 0x30
	0x03C4C738 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move X8, [X1+32]
	004 Move V1, [X1]
	005 Move V0, [X1+16]
	006 Add X1, X31, 0
	007 Move [X31+32], X8
	008 Move [X31], V1
	009 Move [X31+8], V0
	010 Call RenderTargetIdentifier.Equals, X0, X1
	011 Move X30, [X31+48]
	012 NotImplemented "Instruction ORN not yet implemented."
	013 And W0, W8, 1
	014 Add X31, X31, 64
	015 Return X0

