Type: UnityEngine.Rendering.ShadowSplitData

Method: System.Int32 get_cullingPlaneCount()

Disassembly:
	0x03C5BBB0 TBNZ X8, 0x0, 0x3C5BBC8
	0x03C5BBB4 ADRP X0, 0x4FC000

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: UnityEngine.Vector4 get_cullingSphere()

Disassembly:
	0x03C5BBB8 LDR X0, [X0 + 0x220]
	0x03C5BBBC BL 0x1C16CF4
	0x03C5BBC0 MOVZ W8, 0x1

ISIL:
	001 Move S0, [X0+164]
	002 Move S1, [X0+168]
	003 Move S2, [X0+172]
	004 Move S3, [X0+176]
	005 Return X0

Method: System.Void set_shadowCascadeBlendCullingFactor(System.Single value)

Disassembly:
	0x03C5B5FC LDR W8, [X0 + 0xE0]
	0x03C5B600 CBNZ W8, 0x3C5B608
	0x03C5B604 BL 0x1C16DFC
	0x03C5B608 ADD X1, X31, 0xC
	0x03C5B60C MOV W0, W19
	0x03C5B610 BL 0x3C5B628
	0x03C5B614 LDRB W0, [X31 + 0xC]
	0x03C5B618 LDP X20, X19, [X31 + 0x20]
	0x03C5B61C LDP X30, X21, [X31 + 0x10]
	0x03C5B620 ADD X31, X31, 0x30
	0x03C5B624 RET
	0x03C5B628 STR X30, [X31 - 0x30]!
	0x03C5B62C STP X22, X21, [X31 + 0x10]
	0x03C5B630 STP X20, X19, [X31 + 0x20]
	0x03C5B634 ADRP X22, 0x78B000
	0x03C5B638 ADRP X21, 0x4FC000
	0x03C5B63C LDRB W8, [X22 + 0x19C]
	0x03C5B640 LDR X21, [X21 + 0x220]
	0x03C5B644 MOV X19, X1
	0x03C5B648 MOV W20, W0
	0x03C5B64C TBNZ X8, 0x0, 0x3C5B664
	0x03C5B650 ADRP X0, 0x4FC000
	0x03C5B654 LDR X0, [X0 + 0x220]
	0x03C5B658 BL 0x1C16CF4
	0x03C5B65C MOVZ W8, 0x1
	0x03C5B660 STRB W8, [X22 + 0x19C]
	0x03C5B664 MOV X0, X19
	0x03C5B668 MOV X1, X31
	0x03C5B66C BL 0x33C6948
	0x03C5B670 LDR X8, [X21]
	0x03C5B674 MOV X19, X0
	0x03C5B678 LDR W9, [X8 + 0xE0]
	0x03C5B67C CBNZ W9, 0x3C5B688
	0x03C5B680 MOV X0, X8
	0x03C5B684 BL 0x1C16DFC
	0x03C5B688 MOVZ W0, 0x1
	0x03C5B68C BL 0x3C5B730
	0x03C5B690 TBZ X0, 0x0, 0x3C5B714
	0x03C5B694 CMP W20, 0x2
	0x03C5B698 B.EQ 0x3C5B6D0
	0x03C5B69C CMP W20, 0x1
	0x03C5B6A0 B.EQ 0x3C5B6F4
	0x03C5B6A4 CBNZ W20, 0x3C5B714
	0x03C5B6A8 LDR X0, [X21]
	0x03C5B6AC LDR W8, [X0 + 0xE0]
	0x03C5B6B0 CBNZ W8, 0x3C5B6B8
	0x03C5B6B4 BL 0x1C16DFC
	0x03C5B6B8 BL 0x3C5B374
	0x03C5B6BC CBZ X0, 0x3C5B72C
	0x03C5B6C0 LDRB W8, [X0 + 0x18]
	0x03C5B6C4 TBZ X8, 0x0, 0x3C5B714
	0x03C5B6C8 MOVZ W8, 0x1
	0x03C5B6CC B 0x3C5B718
	0x03C5B6D0 LDR X0, [X21]
	0x03C5B6D4 LDR W8, [X0 + 0xE0]
	0x03C5B6D8 CBNZ W8, 0x3C5B6E0
	0x03C5B6DC BL 0x1C16DFC
	0x03C5B6E0 BL 0x3C5B374
	0x03C5B6E4 CBZ X0, 0x3C5B72C
	0x03C5B6E8 LDRB W8, [X0 + 0x18]
	0x03C5B6EC UBFM W8, W8, 0x2, 0x2

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 NotImplemented "Instruction FCMP not yet implemented."
	008 Move S1, 1
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 Move X20, [X31+48]
	011 Move X19, [X31+56]
	012 Move X30, [X31+32]
	013 Move X21, [X31+40]
	014 Move V8, [X31+16]
	015 Move [X0+180], S0
	016 Add X31, X31, 64
	017 Return 
	018 Move [X31+28], W31
	019 Move X19, 0x499000
	020 Move X19, [X19+1880]
	021 Move V8, V0
	022 Move X0, X19
	023 Call 0x1C17D08
	024 Add X1, X31, 28
	025 Call 0x1C17E04
	026 Move X20, X0
	027 Move W8, 1
	028 Move X0, X19
	029 Move [X31+24], W8
	030 Call 0x1C17D08
	031 Add X1, X31, 24
	032 Call 0x1C17E04
	033 Move X19, X0
	034 Move [X31+12], S8
	035 Move X0, 0x499000
	036 Move X0, [X0+2704]
	037 Call 0x1C17D08
	038 Add X1, X31, 12
	039 Call 0x1C17E04
	040 Move X21, X0
	041 Move X0, 0x505000
	042 Move X0, [X0+3808]
	043 Call 0x1C17D08
	044 Move X1, X20
	045 Move X2, X19
	046 Move X3, X21
	047 Move X4, X31
	048 Call String.Format, X0, X1, X2, X3
	049 Move X19, X0
	050 Move X0, 0x4A1000
	051 Move X0, [X0+1400]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X1, X19
	055 Move X2, X31
	056 Move X20, X0
	057 Call ArgumentException..ctor, X0, X1
	058 Move X0, 0x505000
	059 Move X0, [X0+3816]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X20
	063 Call 0x1C17DEC

Method: UnityEngine.Plane GetCullingPlane(System.Int32 index)

Disassembly:
	0x03C5BBC4 STRB W8, [X19 + 0x1A6]
	0x03C5BBC8 LDR X0, [X20]
	0x03C5BBCC BL 0x1C16F10
	0x03C5BBD0 MOV X19, X0
	0x03C5BBD4 BL 0x3C55A38
	0x03C5BBD8 LDR X8, [X20]
	0x03C5BBDC LDR X8, [X8 + 0xB8]
	0x03C5BBE0 STR X19, [X8]
	0x03C5BBE4 LDP X20, X19, [X31 + 0x10]
	0x03C5BBE8 LDR X30, [X31], #0x20
	0x03C5BBEC RET
	0x03C5BBF0 STP X30, X21, [X31 - 0x20]!
	0x03C5BBF4 STP X20, X19, [X31 + 0x10]
	0x03C5BBF8 ADRP X21, 0x78B000
	0x03C5BBFC ADRP X20, 0x498000
	0x03C5BC00 LDRB W8, [X21 + 0x1A7]
	0x03C5BC04 LDR X20, [X20 + 0x598]
	0x03C5BC08 MOV X19, X0
	0x03C5BC0C TBNZ X8, 0x0, 0x3C5BC30
	0x03C5BC10 ADRP X0, 0x504000
	0x03C5BC14 LDR X0, [X0 + 0xF28]
	0x03C5BC18 BL 0x1C16CF4
	0x03C5BC1C ADRP X0, 0x498000
	0x03C5BC20 LDR X0, [X0 + 0x598]
	0x03C5BC24 BL 0x1C16CF4
	0x03C5BC28 MOVZ W8, 0x1
	0x03C5BC2C STRB W8, [X21 + 0x1A7]
	0x03C5BC30 LDR X0, [X20]
	0x03C5BC34 LDR W19, [X19 + 0x6C]
	0x03C5BC38 LDR W8, [X0 + 0xE0]
	0x03C5BC3C CBNZ W8, 0x3C5BC44
	0x03C5BC40 BL 0x1C16DFC
	0x03C5BC44 MOV W0, W19
	0x03C5BC48 MOV X1, X31
	0x03C5BC4C BL 0x3C39A64
	0x03C5BC50 CBZ X0, 0x3C5BC6C
	0x03C5BC54 ADRP X8, 0x504000
	0x03C5BC58 LDR X8, [X8 + 0xF28]
	0x03C5BC5C LDR X1, [X8]
	0x03C5BC60 LDR X8, [X0]
	0x03C5BC64 CMP X8, X1
	0x03C5BC68 B.NE 0x3C5BC78
	0x03C5BC6C LDP X20, X19, [X31 + 0x10]
	0x03C5BC70 LDP X30, X21, [X31], #0x20
	0x03C5BC74 RET
	0x03C5BC78 BL 0x1C171E0
	0x03C5BC7C LDR W0, [X0]
	0x03C5BC80 RET
	0x03C5BC84 LDP S0, S1, [X0 + 0x4]
	0x03C5BC88 LDP S2, S3, [X0 + 0xC]
	0x03C5BC8C RET
	0x03C5BC90 LDUR V0, [X0 + 0x54]
	0x03C5BC94 LDUR V1, [X0 + 0x44]
	0x03C5BC98 LDUR V2, [X0 + 0x34]
	0x03C5BC9C LDUR V3, [X0 + 0x24]
	0x03C5BCA0 STP V1, V0, [X8 + 0x20]
	0x03C5BCA4 STP V3, V2, [X8]
	0x03C5BCA8 RET
	0x03C5BCAC LDR V0, [X0 + 0x64]
	0x03C5BCB0 RET
	0x03C5BCB4 LDR V0, [X0 + 0x68]
	0x03C5BCB8 RET
	0x03C5BCBC SUB X31, X31, 0x110
	0x03C5BCC0 STR D10, [X31 + 0xC0]
	0x03C5BCC4 STP D9, D8, [X31 + 0xD0]
	0x03C5BCC8 STP X29, X30, [X31 + 0xE0]
	0x03C5BCCC STP X22, X21, [X31 + 0xF0]
	0x03C5BCD0 STP X20, X19, [X31 + 0x100]
	0x03C5BCD4 LDR W8, [X0]
	0x03C5BCD8 LDR W9, [X1]
	0x03C5BCDC CMP W8, W9
	0x03C5BCE0 B.NE 0x3C5BE44
	0x03C5BCE4 LDP S0, S10, [X1 + 0x4]
	0x03C5BCE8 LDP S9, S8, [X1 + 0xC]
	0x03C5BCEC MOV X19, X1
	0x03C5BCF0 MOV X20, X0
	0x03C5BCF4 ADD X0, X0, 0x4
	0x03C5BCF8 MOV X1, X31
	0x03C5BCFC BL 0x338FDC0
	0x03C5BD00 TBZ X0, 0x0, 0x3C5BE44
	0x03C5BD04 ADD X0, X20, 0x8
	0x03C5BD08 MOV V0.16B, V10.16B
	0x03C5BD0C MOV X1, X31
	0x03C5BD10 BL 0x338FDC0
	0x03C5BD14 TBZ X0, 0x0, 0x3C5BE44

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x78C000
	008 Move W8, [X21+397]
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x4FC000
	016 Move X0, [X0+3792]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+397], W8
	020 Move TEMP, X19
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {45}
	024 Move X8, 0x4FC000
	025 Move X8, [X8+3792]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move W8, [X20]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add X8, X20, W19
	034 Move S2, [X8+12]
	035 Move S3, [X8+16]
	036 Move S0, [X8+4]
	037 Move S1, [X8+8]
	038 Move X20, [X31+48]
	039 Move X19, [X31+56]
	040 Move X22, [X31+32]
	041 Move X21, [X31+40]
	042 Move X30, [X31+16]
	043 Add X31, X31, 64
	044 Return X0
	045 Move [X31+28], W31
	046 Move X21, 0x499000
	047 Move X21, [X21+1880]
	048 Move X0, X21
	049 Call 0x1C17D08
	050 Add X1, X31, 28
	051 Call 0x1C17E04
	052 Move X22, X0
	053 Move X0, 0x4FC000
	054 Move X0, [X0+3792]
	055 Call 0x1C17D08
	056 Call 0x19913D0
	057 Move W8, [X20]
	058 Move X0, X21
	059 Move [X31+24], W8
	060 Call 0x1C17D08
	061 Add X1, X31, 24
	062 Call 0x1C17E04
	063 Move X20, X0
	064 Move X0, X21
	065 Move [X31+12], W19
	066 Call 0x1C17D08
	067 Add X1, X31, 12
	068 Call 0x1C17E04
	069 Move X19, X0
	070 Move X0, 0x505000
	071 Move X0, [X0+3840]
	072 Call 0x1C17D08
	073 Move X1, X22
	074 Move X2, X20
	075 Move X3, X19
	076 Move X4, X31
	077 Call String.Format, X0, X1, X2, X3
	078 Move X19, X0
	079 Move X0, 0x4A1000
	080 Move X0, [X0+1400]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X20, X0
	084 Move X0, 0x4A4000
	085 Move X0, [X0+304]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X20
	089 Move X2, X19
	090 Move X3, X31
	091 Call ArgumentException..ctor, X0, X1, X2
	092 Move X0, 0x505000
	093 Move X0, [X0+3848]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X20
	097 Call 0x1C17DEC

Method: System.Boolean Equals(UnityEngine.Rendering.ShadowSplitData other)

Disassembly:
	0x03C5B854 B.NE 0x3C5B87C
	0x03C5B858 LDR X0, [X21]
	0x03C5B85C LDR W8, [X0 + 0xE0]
	0x03C5B860 CBNZ W8, 0x3C5B868
	0x03C5B864 BL 0x1C16DFC
	0x03C5B868 BL 0x3C5B374
	0x03C5B86C CBZ X0, 0x3C5B888
	0x03C5B870 LDRB W8, [X0 + 0x25]
	0x03C5B874 CBNZ W8, 0x3C5B87C
	0x03C5B878 STRB W31, [X19]
	0x03C5B87C LDP X20, X19, [X31 + 0x10]
	0x03C5B880 LDP X30, X21, [X31], #0x20
	0x03C5B884 RET
	0x03C5B888 BL 0x1C16F20
	0x03C5B88C STR X30, [X31 - 0x30]!
	0x03C5B890 STP X22, X21, [X31 + 0x10]
	0x03C5B894 STP X20, X19, [X31 + 0x20]
	0x03C5B898 ADRP X22, 0x78B000
	0x03C5B89C ADRP X21, 0x4FC000
	0x03C5B8A0 LDRB W8, [X22 + 0x19F]
	0x03C5B8A4 LDR X21, [X21 + 0x220]
	0x03C5B8A8 MOV X20, X1
	0x03C5B8AC MOV W19, W0
	0x03C5B8B0 TBNZ X8, 0x0, 0x3C5B8C8
	0x03C5B8B4 ADRP X0, 0x4FC000
	0x03C5B8B8 LDR X0, [X0 + 0x220]
	0x03C5B8BC BL 0x1C16CF4
	0x03C5B8C0 MOVZ W8, 0x1
	0x03C5B8C4 STRB W8, [X22 + 0x19F]
	0x03C5B8C8 MOV X0, X20
	0x03C5B8CC MOV X1, X31
	0x03C5B8D0 BL 0x33C6948
	0x03C5B8D4 LDR X8, [X21]
	0x03C5B8D8 MOV X20, X0
	0x03C5B8DC LDR W9, [X8 + 0xE0]
	0x03C5B8E0 CBNZ W9, 0x3C5B8EC
	0x03C5B8E4 MOV X0, X8
	0x03C5B8E8 BL 0x1C16DFC
	0x03C5B8EC BL 0x3C5B374
	0x03C5B8F0 CBZ X0, 0x3C5B914
	0x03C5B8F4 LDR W8, [X0 + 0x20]
	0x03C5B8F8 LDP X22, X21, [X31 + 0x10]
	0x03C5B8FC BICS W31, W19, W8, 0x0
	0x03C5B900 CSET W8, EQ
	0x03C5B904 STRB W8, [X20]
	0x03C5B908 LDP X20, X19, [X31 + 0x20]
	0x03C5B90C LDR X30, [X31], #0x30
	0x03C5B910 RET
	0x03C5B914 BL 0x1C16F20
	0x03C5B918 STP X30, X21, [X31 - 0x20]!
	0x03C5B91C STP X20, X19, [X31 + 0x10]
	0x03C5B920 ADRP X21, 0x78B000
	0x03C5B924 LDRB W8, [X21 + 0x1A0]
	0x03C5B928 MOV X19, X1
	0x03C5B92C MOV W20, W0
	0x03C5B930 TBNZ X8, 0x0, 0x3C5B948
	0x03C5B934 ADRP X0, 0x4FC000
	0x03C5B938 LDR X0, [X0 + 0x220]
	0x03C5B93C BL 0x1C16CF4
	0x03C5B940 MOVZ W8, 0x1
	0x03C5B944 STRB W8, [X21 + 0x1A0]
	0x03C5B948 MOV X0, X19
	0x03C5B94C MOV X1, X31
	0x03C5B950 BL 0x33C6948
	0x03C5B954 MOV X19, X0
	0x03C5B958 CBZ W20, 0x3C5B964
	0x03C5B95C MOVZ W8, 0x1
	0x03C5B960 B 0x3C5B988
	0x03C5B964 ADRP X8, 0x4FC000
	0x03C5B968 LDR X8, [X8 + 0x220]
	0x03C5B96C LDR X0, [X8]
	0x03C5B970 LDR W8, [X0 + 0xE0]
	0x03C5B974 CBNZ W8, 0x3C5B97C
	0x03C5B978 BL 0x1C16DFC
	0x03C5B97C BL 0x3C5B374
	0x03C5B980 CBZ X0, 0x3C5B998
	0x03C5B984 LDRB W8, [X0 + 0x24]
	0x03C5B988 STRB W8, [X19]
	0x03C5B98C LDP X20, X19, [X31 + 0x10]
	0x03C5B990 LDP X30, X21, [X31], #0x20
	0x03C5B994 RET
	0x03C5B998 BL 0x1C16F20
	0x03C5B99C STP X30, X21, [X31 - 0x20]!
	0x03C5B9A0 STP X20, X19, [X31 + 0x10]
	0x03C5B9A4 ADRP X21, 0x78B000
	0x03C5B9A8 ADRP X20, 0x4FC000
	0x03C5B9AC LDRB W8, [X21 + 0x1A1]
	0x03C5B9B0 LDR X20, [X20 + 0x220]
	0x03C5B9B4 MOV X19, X0
	0x03C5B9B8 TBNZ X8, 0x0, 0x3C5B9D0
	0x03C5B9BC ADRP X0, 0x4FC000
	0x03C5B9C0 LDR X0, [X0 + 0x220]
	0x03C5B9C4 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], D11
	003 Move [X31+56], D10
	004 Move [X31+64], D9
	005 Move [X31+72], D8
	006 Move [X31+80], X30
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X21, 0x78C000
	014 Move W8, [X21+398]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x505000
	022 Move X0, [X0+3368]
	023 Call 0x1C17CF4
	024 Move X0, 0x4FC000
	025 Move X0, [X0+3792]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+398], W8
	029 Move W8, [X20]
	030 Move W9, [X19]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X22, 0x4FC000
	033 Move X23, 0x505000
	034 Move X22, [X22+3792]
	035 Move X23, [X23+3368]
	036 Move W21, W31
	037 Move TEMP, 0
	038 Not TEMP
	039 Move X24, TEMP
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move W8, [X20]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, [X22]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move W1, W21
	054 Call ShadowSplitData.GetCullingPlane, X0, X1
	055 Move X0, X19
	056 Move W1, W21
	057 Move V8, V0
	058 Move V9, V1
	059 Move V10, V2
	060 Move V11, V3
	061 Call ShadowSplitData.GetCullingPlane, X0, X1
	062 Move X0, [X23]
	063 Add X1, X31, 32
	064 Move [X31+32], S0
	065 Move [X31+40], S1
	066 Move [X31+40], S2
	067 Move [X31+48], S3
	068 Call 0x1C17E04
	069 Move X8, [X23]
	070 Move X1, X0
	071 Add X0, X31, 0
	072 Move X2, X31
	073 Move [X31+16], S8
	074 Move [X31+24], S9
	075 Move [X31], X8
	076 Move [X31+8], X24
	077 Move [X31+24], S10
	078 Move [X31+32], S11
	079 Call ValueType.Equals, X0, X1
	080 Add W21, W21, 1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {40}
	085 Move V0, [X19+164]
	086 Move V1, [X20+164]
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 Move V0, [X19+168]
	089 Move V1, [X20+168]
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move V0, [X19+172]
	092 Move V1, [X20+172]
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 Move V0, [X19+176]
	095 Move V1, [X20+176]
	096 NotImplemented "Instruction FCMP not yet implemented."
	097 NotImplemented "Instruction CSET not yet implemented."
	098 Move W0, W31
	099 Move X20, [X31+128]
	100 Move X19, [X31+136]
	101 Move X22, [X31+112]
	102 Move X21, [X31+120]
	103 Move X24, [X31+96]
	104 Move X23, [X31+104]
	105 Move X30, [X31+80]
	106 Move D9, [X31+64]
	107 Move D8, [X31+72]
	108 Move D11, [X31+48]
	109 Move D10, [X31+56]
	110 Add X31, X31, 144
	111 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03C5BD18 ADD X0, X20, 0xC
	0x03C5BD1C MOV V0.16B, V9.16B
	0x03C5BD20 MOV X1, X31
	0x03C5BD24 BL 0x338FDC0
	0x03C5BD28 TBZ X0, 0x0, 0x3C5BE44
	0x03C5BD2C ADD X0, X20, 0x10
	0x03C5BD30 MOV V0.16B, V8.16B
	0x03C5BD34 MOV X1, X31
	0x03C5BD38 BL 0x338FDC0
	0x03C5BD3C TBZ X0, 0x0, 0x3C5BE44
	0x03C5BD40 LDP S0, S10, [X19 + 0x14]
	0x03C5BD44 LDR V1, [X20 + 0x14]
	0x03C5BD48 LDP S9, S8, [X19 + 0x1C]
	0x03C5BD4C ADD X0, X31, 0x48
	0x03C5BD50 MOV X1, X31
	0x03C5BD54 STR S1, [X31 + 0x48]
	0x03C5BD58 BL 0x338FDC0
	0x03C5BD5C TBZ X0, 0x0, 0x3C5BE44
	0x03C5BD60 LDR V0, [X20 + 0x18]
	0x03C5BD64 ADD X0, X31, 0x48
	0x03C5BD68 MOV X1, X31
	0x03C5BD6C STR S0, [X31 + 0x48]
	0x03C5BD70 MOV V0.16B, V10.16B
	0x03C5BD74 BL 0x338FDC0
	0x03C5BD78 TBZ X0, 0x0, 0x3C5BE44
	0x03C5BD7C LDR V0, [X20 + 0x1C]
	0x03C5BD80 ADD X0, X31, 0x48
	0x03C5BD84 MOV X1, X31
	0x03C5BD88 STR S0, [X31 + 0x48]
	0x03C5BD8C MOV V0.16B, V9.16B
	0x03C5BD90 BL 0x338FDC0
	0x03C5BD94 TBZ X0, 0x0, 0x3C5BE44
	0x03C5BD98 LDR V0, [X20 + 0x20]
	0x03C5BD9C ADD X0, X31, 0x48
	0x03C5BDA0 MOV X1, X31
	0x03C5BDA4 STR S0, [X31 + 0x48]
	0x03C5BDA8 MOV V0.16B, V8.16B
	0x03C5BDAC BL 0x338FDC0
	0x03C5BDB0 TBZ X0, 0x0, 0x3C5BE44
	0x03C5BDB4 ADD X0, X31, 0x48
	0x03C5BDB8 MOVZ W2, 0x74
	0x03C5BDBC MOV X1, X19
	0x03C5BDC0 ADD X22, X31, 0x48
	0x03C5BDC4 ADD X21, X20, 0x24
	0x03C5BDC8 BL 0x3EB1AC0
	0x03C5BDCC LDUR V0, [X31 + 0x6C]
	0x03C5BDD0 LDUR V1, [X31 + 0x7C]
	0x03C5BDD4 LDUR V2, [X22 + 0x44]
	0x03C5BDD8 LDUR V3, [X22 + 0x54]
	0x03C5BDDC ADD X1, X31, 0x0
	0x03C5BDE0 MOV X0, X21
	0x03C5BDE4 MOV X2, X31
	0x03C5BDE8 STP V0, V1, [X31]
	0x03C5BDEC STP V2, V3, [X31 + 0x20]
	0x03C5BDF0 BL 0x2078B9C
	0x03C5BDF4 TBZ X0, 0x0, 0x3C5BE44
	0x03C5BDF8 LDR V0, [X19 + 0x64]
	0x03C5BDFC ADD X0, X20, 0x64

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+272], X29
	003 Move [X31+280], X30
	004 Move [X31+288], X22
	005 Move [X31+296], X21
	006 Move [X31+304], X20
	007 Move [X31+312], X19
	008 NotImplemented "Instruction MRS not yet implemented."
	009 Move X8, [X21+40]
	010 Move X22, 0x78C000
	011 Move X20, X1
	012 Move X19, X0
	013 Move [X31+264], X8
	014 Move W8, [X22+399]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x4FC000
	020 Move X0, [X0+3792]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+399], W8
	024 Compare X20, 0
	025 JumpIfEqual {31}
	026 Move X22, 0x4FC000
	027 Move X22, [X22+3792]
	028 Move X8, [X20]
	029 Move X0, [X22]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W0, W31
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfEqual {36}
	035 Move X1, X0
	036 Call 0x1C17DFC
	037 Move X1, [X22]
	038 Move X0, [X20]
	039 Move X8, [X0+64]
	040 Move X9, [X1+64]
	041 Move X0, X20
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Call 0x1C17E08
	044 Move X1, X0
	045 Add X0, X31, 8
	046 Move W2, 252
	047 Call 0x3EB2AC0
	048 Add X1, X31, 8
	049 Move X0, X19
	050 Call ShadowSplitData.Equals, X0, X1
	051 Move X8, [X21+40]
	052 Move X9, [X31+264]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X20, [X31+304]
	055 Move X19, [X31+312]
	056 Move X22, [X31+288]
	057 Move X21, [X31+296]
	058 Move X29, [X31+272]
	059 Move X30, [X31+280]
	060 And W0, W0, 1
	061 Add X31, X31, 320
	062 Return X0
	063 Call 0x1C181E0
	064 Call 0x3EB2B20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C5BB34 STRB W8, [X21 + 0x1A4]
	0x03C5BB38 MOV X0, X19
	0x03C5BB3C MOV X1, X31
	0x03C5BB40 BL 0x33C6948
	0x03C5BB44 LDR X8, [X20]
	0x03C5BB48 MOV X19, X0
	0x03C5BB4C LDR W9, [X8 + 0xE0]
	0x03C5BB50 CBNZ W9, 0x3C5BB5C
	0x03C5BB54 MOV X0, X8
	0x03C5BB58 BL 0x1C16DFC
	0x03C5BB5C BL 0x3C5B374
	0x03C5BB60 CBZ X0, 0x3C5BB78
	0x03C5BB64 LDRB W8, [X0 + 0x3A]
	0x03C5BB68 STRB W8, [X19]
	0x03C5BB6C LDP X20, X19, [X31 + 0x10]
	0x03C5BB70 LDP X30, X21, [X31], #0x20
	0x03C5BB74 RET
	0x03C5BB78 BL 0x1C16F20
	0x03C5BB7C STR X30, [X31 - 0x10]!
	0x03C5BB80 MOV X1, X31
	0x03C5BB84 BL 0x33C6948
	0x03C5BB88 MOVZ W8, 0x1
	0x03C5BB8C STR W8, [X0]
	0x03C5BB90 LDR X30, [X31], #0x10
	0x03C5BB94 RET
	0x03C5BB98 STR X30, [X31 - 0x20]!
	0x03C5BB9C STP X20, X19, [X31 + 0x10]
	0x03C5BBA0 ADRP X19, 0x78B000
	0x03C5BBA4 ADRP X20, 0x4FC000
	0x03C5BBA8 LDRB W8, [X19 + 0x1A6]
	0x03C5BBAC LDR X20, [X20 + 0x220]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, X0
	008 Move W23, [X20+168]
	009 Move X19, X0
	010 Add X0, X0, 164
	011 Move X1, X31
	012 Call Single.GetHashCode, X0
	013 Move W21, W0
	014 Move X0, X20
	015 Move X1, X31
	016 Call Single.GetHashCode, X0
	017 Move W20, W0
	018 Add X0, X19, 172
	019 Move X1, X31
	020 Call Single.GetHashCode, X0
	021 Move W22, W0
	022 Add X0, X19, 176
	023 Move X1, X31
	024 Call Single.GetHashCode, X0
	025 Move W8, 397
	026 Multiply W8, W23, W8
	027 Xor W8, W8, W21
	028 Xor W8, W8, W20
	029 Xor W8, W8, W22
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Xor W0, W8, W0
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03C5BE00 MOV X1, X31
	0x03C5BE04 BL 0x338FDC0
	0x03C5BE08 TBZ X0, 0x0, 0x3C5BE44
	0x03C5BE0C LDR V0, [X19 + 0x68]
	0x03C5BE10 ADD X0, X20, 0x68
	0x03C5BE14 MOV X1, X31
	0x03C5BE18 BL 0x338FDC0
	0x03C5BE1C TBZ X0, 0x0, 0x3C5BE44
	0x03C5BE20 LDR W8, [X20 + 0x6C]
	0x03C5BE24 LDR W9, [X19 + 0x6C]
	0x03C5BE28 CMP W8, W9
	0x03C5BE2C B.NE 0x3C5BE44
	0x03C5BE30 LDR W8, [X20 + 0x70]
	0x03C5BE34 LDR W9, [X19 + 0x70]
	0x03C5BE38 CMP W8, W9
	0x03C5BE3C CSET W0, EQ
	0x03C5BE40 B 0x3C5BE48
	0x03C5BE44 MOV W0, W31
	0x03C5BE48 LDP X20, X19, [X31 + 0x100]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x78C000
	005 Move X20, 0x4FC000
	006 Move W8, [X19+400]
	007 Move X20, [X20+3792]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4FC000
	013 Move X0, [X0+3792]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+400], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 10
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

