Type: UnityEngine.Rendering.LocalKeyword

Method: System.UInt32 GetShaderKeywordCount(UnityEngine.Shader shader)

Disassembly:
	0x03C5DFD8 MOV X1, X0
	0x03C5DFDC STR X0, [X20 + 0x250]
	0x03C5DFE0 MOV X0, X19
	0x03C5DFE4 LDP X20, X19, [X31 + 0x10]
	0x03C5DFE8 LDR X30, [X31], #0x20
	0x03C5DFEC BR X1
	0x03C5DFF0 STR X30, [X31 - 0x20]!
	0x03C5DFF4 STP X20, X19, [X31 + 0x10]
	0x03C5DFF8 ADRP X20, 0x789000
	0x03C5DFFC LDR X1, [X20 + 0x258]
	0x03C5E000 MOV X19, X0
	0x03C5E004 CBNZ X1, 0x3C5E01C
	0x03C5E008 ADRP X0, 0xFFFFFFFFFCEB1000
	0x03C5E00C ADD X0, X0, 0x83B
	0x03C5E010 BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x78A000
	005 Move X1, [X20+472]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51638272
	010 Add X0, X0, 1154
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+472], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.UInt32 GetShaderKeywordIndex(UnityEngine.Shader shader, System.String keyword)

Disassembly:
	0x03C5E014 MOV X1, X0
	0x03C5E018 STR X0, [X20 + 0x258]
	0x03C5E01C MOV X0, X19
	0x03C5E020 LDP X20, X19, [X31 + 0x10]
	0x03C5E024 LDR X30, [X31], #0x20
	0x03C5E028 BR X1
	0x03C5E02C STR X30, [X31 - 0x20]!
	0x03C5E030 STP X20, X19, [X31 + 0x10]
	0x03C5E034 ADRP X20, 0x788000
	0x03C5E038 LDR X1, [X20 + 0x258]
	0x03C5E03C MOV X19, X0
	0x03C5E040 CBNZ X1, 0x3C5E058
	0x03C5E044 ADRP X0, 0xFFFFFFFFFCEB1000
	0x03C5E048 ADD X0, X0, 0x83B
	0x03C5E04C BL 0x1C16CB8
	0x03C5E050 MOV X1, X0
	0x03C5E054 STR X0, [X20 + 0x258]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x789000
	006 Move X2, [X21+480]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51798016
	012 Add X0, X0, 2397
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+480], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void .ctor(UnityEngine.Shader shader, System.String name)

Disassembly:
	0x03C5E058 MOV X0, X19
	0x03C5E05C LDP X20, X19, [X31 + 0x10]
	0x03C5E060 LDR X30, [X31], #0x20
	0x03C5E064 BR X1
	0x03C5E068 STR X30, [X31 - 0x20]!
	0x03C5E06C STP X20, X19, [X31 + 0x10]
	0x03C5E070 ADRP X20, 0x788000
	0x03C5E074 LDR X1, [X20 + 0x260]
	0x03C5E078 MOV X19, X0
	0x03C5E07C CBNZ X1, 0x3C5E094
	0x03C5E080 ADRP X0, 0xFFFFFFFFFCEC1000
	0x03C5E084 ADD X0, X0, 0x239
	0x03C5E088 BL 0x1C16CB8
	0x03C5E08C MOV X1, X0
	0x03C5E090 STR X0, [X20 + 0x260]
	0x03C5E094 MOV X0, X19
	0x03C5E098 LDP X20, X19, [X31 + 0x10]
	0x03C5E09C LDR X30, [X31], #0x20
	0x03C5E0A0 BR X1
	0x03C5E0A4 STR X30, [X31 - 0x20]!
	0x03C5E0A8 STP X20, X19, [X31 + 0x10]
	0x03C5E0AC ADRP X20, 0x788000
	0x03C5E0B0 LDR X1, [X20 + 0x260]
	0x03C5E0B4 MOV X19, X0
	0x03C5E0B8 CBNZ X1, 0x3C5E0D0
	0x03C5E0BC ADRP X0, 0xFFFFFFFFFCEC1000
	0x03C5E0C0 ADD X0, X0, 0x239
	0x03C5E0C4 BL 0x1C16CB8
	0x03C5E0C8 MOV X1, X0
	0x03C5E0CC STR X0, [X20 + 0x260]
	0x03C5E0D0 MOV X0, X19
	0x03C5E0D4 LDP X20, X19, [X31 + 0x10]
	0x03C5E0D8 LDR X30, [X31], #0x20
	0x03C5E0DC BR X1
	0x03C5E0E0 STR D8, [X31 - 0x20]!
	0x03C5E0E4 STR X30, [X31 + 0x8]
	0x03C5E0E8 STP X20, X19, [X31 + 0x10]
	0x03C5E0EC ADRP X20, 0x788000
	0x03C5E0F0 LDR X1, [X20 + 0x268]
	0x03C5E0F4 MOV V8.16B, V0.16B
	0x03C5E0F8 MOV X19, X0
	0x03C5E0FC CBNZ X1, 0x3C5E114
	0x03C5E100 ADRP X0, 0xFFFFFFFFFCE9B000
	0x03C5E104 ADD X0, X0, 0x845
	0x03C5E108 BL 0x1C16CB8
	0x03C5E10C MOV X1, X0
	0x03C5E110 STR X0, [X20 + 0x268]
	0x03C5E114 MOV X0, X19
	0x03C5E118 LDP X20, X19, [X31 + 0x10]
	0x03C5E11C LDR X30, [X31 + 0x8]
	0x03C5E120 MOV V0.16B, V8.16B
	0x03C5E124 LDR V8, [X31], #0x20
	0x03C5E128 BR X1
	0x03C5E12C STR D8, [X31 - 0x20]!
	0x03C5E130 STR X30, [X31 + 0x8]
	0x03C5E134 STP X20, X19, [X31 + 0x10]
	0x03C5E138 ADRP X20, 0x788000
	0x03C5E13C LDR X1, [X20 + 0x268]
	0x03C5E140 MOV V8.16B, V0.16B
	0x03C5E144 MOV X19, X0
	0x03C5E148 CBNZ X1, 0x3C5E160
	0x03C5E14C ADRP X0, 0xFFFFFFFFFCE9B000
	0x03C5E150 ADD X0, X0, 0x845
	0x03C5E154 BL 0x1C16CB8
	0x03C5E158 MOV X1, X0
	0x03C5E15C STR X0, [X20 + 0x268]
	0x03C5E160 MOV X0, X19
	0x03C5E164 LDP X20, X19, [X31 + 0x10]
	0x03C5E168 LDR X30, [X31 + 0x8]
	0x03C5E16C MOV V0.16B, V8.16B
	0x03C5E170 LDR V8, [X31], #0x20
	0x03C5E174 BR X1
	0x03C5E178 STP X30, X21, [X31 - 0x20]!
	0x03C5E17C STP X20, X19, [X31 + 0x10]
	0x03C5E180 ADRP X21, 0x788000
	0x03C5E184 LDR X2, [X21 + 0x270]
	0x03C5E188 MOV W19, W1
	0x03C5E18C MOV X20, X0
	0x03C5E190 CBNZ X2, 0x3C5E1A8
	0x03C5E194 ADRP X0, 0xFFFFFFFFFCEBA000
	0x03C5E198 ADD X0, X0, 0xF1C
	0x03C5E19C BL 0x1C16CB8
	0x03C5E1A0 MOV X2, X0
	0x03C5E1A4 STR X0, [X21 + 0x270]
	0x03C5E1A8 MOV X0, X20
	0x03C5E1AC MOV W1, W19
	0x03C5E1B0 LDP X20, X19, [X31 + 0x10]
	0x03C5E1B4 LDP X30, X21, [X31], #0x20
	0x03C5E1B8 BR X2
	0x03C5E1BC STP X30, X21, [X31 - 0x20]!
	0x03C5E1C0 STP X20, X19, [X31 + 0x10]
	0x03C5E1C4 ADRP X21, 0x788000
	0x03C5E1C8 LDR X2, [X21 + 0x270]
	0x03C5E1CC MOV W19, W1
	0x03C5E1D0 MOV X20, X0
	0x03C5E1D4 CBNZ X2, 0x3C5E1EC
	0x03C5E1D8 ADRP X0, 0xFFFFFFFFFCEBA000
	0x03C5E1DC ADD X0, X0, 0xF1C
	0x03C5E1E0 BL 0x1C16CB8
	0x03C5E1E4 MOV X2, X0
	0x03C5E1E8 STR X0, [X21 + 0x270]
	0x03C5E1EC MOV X0, X20
	0x03C5E1F0 MOV W1, W19
	0x03C5E1F4 LDP X20, X19, [X31 + 0x10]
	0x03C5E1F8 LDP X30, X21, [X31], #0x20
	0x03C5E1FC BR X2
	0x03C5E200 SUB X31, X31, 0x50
	0x03C5E204 STP X2, X30, [X31 + 0x18]
	0x03C5E208 STP X22, X21, [X31 + 0x30]
	0x03C5E20C STP X20, X19, [X31 + 0x40]
	0x03C5E210 ADRP X22, 0x788000
	0x03C5E214 LDR X8, [X22 + 0x278]
	0x03C5E218 MOV W19, W6
	0x03C5E21C MOV W20, W3
	0x03C5E220 MOV X21, X0
	0x03C5E224 STP X5, X1, [X31 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x789000
	008 Move X23, 0x496000
	009 Move W8, [X22+488]
	010 Move X23, [X23+1432]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x496000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x496000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x496000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0x502000
	028 Move X0, [X0+3968]
	029 Call 0x1C17CF4
	030 Move X0, 0x502000
	031 Move X0, [X0+3976]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+488], W8
	035 Move X0, [X23]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X23, 0x496000
	041 Move X23, [X23+2600]
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {60}
	050 Move X0, [X23]
	051 Move X22, 0x502000
	052 Move W8, [X0+224]
	053 Move X22, [X22+3976]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, [X22]
	058 Move X1, X31
	059 Call Debug.LogError, X0
	060 Compare X20, 0
	061 JumpIfEqual {138}
	062 Move X0, X20
	063 Move X1, X31
	064 Call Shader.get_keywordSpace, X0
	065 Move [X21], X0
	066 Move [X21+8], X19
	067 Move X22, 0x789000
	068 Move X8, [X22+480]
	069 Compare X8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, -51798016
	072 Add X0, X0, 2397
	073 Call 0x1C17CB8
	074 Move X8, X0
	075 Move [X22+480], X0
	076 Move X0, X20
	077 Move X1, X19
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move [X21+16], W0
	080 Move X21, 0x789000
	081 Move X8, [X21+472]
	082 Move W22, W0
	083 Compare X8, 0
	084 JumpIfNotEqual {90}
	085 Move X0, -51642368
	086 Add X0, X0, 1154
	087 Call 0x1C17CB8
	088 Move X8, X0
	089 Move [X21+472], X0
	090 Move X0, X20
	091 NotImplemented "Instruction BLR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X20, [X31+32]
	094 Move X19, [X31+40]
	095 Move X22, [X31+16]
	096 Move X21, [X31+24]
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 Return 
	100 Move X8, 0x496000
	101 Move X8, [X8+2512]
	102 Move W1, 1
	103 Move X0, [X8]
	104 Call 0x1C17D6C
	105 Compare X0, 0
	106 JumpIfEqual {138}
	107 Move X20, X0
	108 Compare X19, 0
	109 JumpIfEqual {116}
	110 Move X8, [X20]
	111 Move X0, X19
	112 Move X1, [X8+64]
	113 Call 0x1C17E00
	114 Compare X0, 0
	115 JumpIfEqual {140}
	116 Move W8, [X20+24]
	117 Compare W8, 0
	118 JumpIfEqual {139}
	119 Move [X20+32], X19
	120 Move X0, [X23]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X8, 0x502000
	126 Move X8, [X8+3968]
	127 Move X1, X20
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X22, [X31+16]
	131 Move X21, [X31+24]
	132 Move X0, [X8]
	133 Move X2, X31
	134 Move X30, [X31+48]
	135 Move X23, [X31+56]
	136 Call Debug.LogErrorFormat, X0, X1
	137 Return 
	138 Call 0x1C17F20
	139 Call 0x1C17F28
	140 Call 0x1C17F44
	141 Move X1, X31
	142 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x03C5E228 STR X4, [X31]
	0x03C5E22C CBNZ X8, 0x3C5E244

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Boolean Equals(System.Object o)

Disassembly:
	0x03C5E230 ADRP X0, 0xFFFFFFFFFCEC5000
	0x03C5E234 ADD X0, X0, 0x4FC
	0x03C5E238 BL 0x1C16CB8
	0x03C5E23C MOV X8, X0
	0x03C5E240 STR X0, [X22 + 0x278]
	0x03C5E244 ADD X1, X31, 0x10
	0x03C5E248 ADD X3, X31, 0x0
	0x03C5E24C MOV X0, X21
	0x03C5E250 MOV W2, W20
	0x03C5E254 MOV W4, W19
	0x03C5E258 BLR X8
	0x03C5E25C LDP X20, X19, [X31 + 0x40]
	0x03C5E260 LDP X22, X21, [X31 + 0x30]
	0x03C5E264 LDR X30, [X31 + 0x20]
	0x03C5E268 AND W0, W0, 0x1
	0x03C5E26C ADD X31, X31, 0x50
	0x03C5E270 RET
	0x03C5E274 STR X30, [X31 - 0x40]!
	0x03C5E278 STP X24, X23, [X31 + 0x10]
	0x03C5E27C STP X22, X21, [X31 + 0x20]
	0x03C5E280 STP X20, X19, [X31 + 0x30]
	0x03C5E284 ADRP X24, 0x788000
	0x03C5E288 LDR X5, [X24 + 0x278]
	0x03C5E28C MOV W19, W4
	0x03C5E290 MOV X20, X3
	0x03C5E294 MOV W21, W2
	0x03C5E298 MOV X22, X1
	0x03C5E29C MOV X23, X0
	0x03C5E2A0 CBNZ X5, 0x3C5E2B8
	0x03C5E2A4 ADRP X0, 0xFFFFFFFFFCEC5000
	0x03C5E2A8 ADD X0, X0, 0x4FC
	0x03C5E2AC BL 0x1C16CB8
	0x03C5E2B0 MOV X5, X0
	0x03C5E2B4 STR X0, [X24 + 0x278]
	0x03C5E2B8 MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x789000
	006 Move W8, [X21+489]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x502000
	014 Move X0, [X0+3984]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+489], W8
	018 Compare X20, 0
	019 JumpIfEqual {39}
	020 Move X8, 0x502000
	021 Move X8, [X8+3984]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X1, [X0]
	028 Move W20, [X0+16]
	029 Move X0, [X19]
	030 Move X2, X31
	031 Call IntPtr.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {39}
	036 Move W8, [X19+16]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Move W0, W31
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0

Method: System.Boolean Equals(UnityEngine.Rendering.LocalKeyword rhs)

Disassembly:
	0x03C5E2BC MOV X1, X22
	0x03C5E2C0 MOV W2, W21
	0x03C5E2C4 MOV X3, X20
	0x03C5E2C8 MOV W4, W19
	0x03C5E2CC LDP X20, X19, [X31 + 0x30]
	0x03C5E2D0 LDP X22, X21, [X31 + 0x20]
	0x03C5E2D4 LDP X24, X23, [X31 + 0x10]
	0x03C5E2D8 LDR X30, [X31], #0x40
	0x03C5E2DC BR X5
	0x03C5E2E0 STR D8, [X31 - 0x30]!
	0x03C5E2E4 STR X30, [X31 + 0x8]
	0x03C5E2E8 STP X22, X21, [X31 + 0x10]
	0x03C5E2EC STP X20, X19, [X31 + 0x20]
	0x03C5E2F0 ADRP X22, 0x788000
	0x03C5E2F4 ADRP X21, 0x4BE000
	0x03C5E2F8 LDRB W8, [X22 + 0x281]
	0x03C5E2FC LDR X21, [X21 + 0x230]
	0x03C5E300 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Move X0, [X0]
	007 Move X1, [X1]
	008 Move X2, X31
	009 Call IntPtr.op_Equality, X0, X1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {18}
	014 Move W8, [X20+16]
	015 Move W9, [X19+16]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSET not yet implemented."
	018 Move W0, W31
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C5E30C TBNZ X8, 0x0, 0x3C5E324
	0x03C5E310 ADRP X0, 0x4BE000
	0x03C5E314 LDR X0, [X0 + 0x230]
	0x03C5E318 BL 0x1C16CF4
	0x03C5E31C MOVZ W8, 0x1
	0x03C5E320 STRB W8, [X22 + 0x281]
	0x03C5E324 LDR X0, [X21]
	0x03C5E328 LDR W8, [X0 + 0xE0]
	0x03C5E32C CBNZ W8, 0x3C5E334
	0x03C5E330 BL 0x1C16DFC
	0x03C5E334 MOV X0, X20
	0x03C5E338 MOV W1, W19
	0x03C5E33C BL 0x3C5E378
	0x03C5E340 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Add X0, X0, 16
	006 Move X1, X31
	007 Call UInt32.GetHashCode, X0
	008 Move W20, W0
	009 Move X0, X19
	010 Move X1, X31
	011 Call IntPtr.GetHashCode, X0
	012 Xor W0, W0, W20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return X0

