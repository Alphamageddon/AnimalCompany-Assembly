Type: UnityEngine.Debug

Method: UnityEngine.ILogger get_unityLogger()

Disassembly:
	0x03C06BA0 CBZ X21, 0x3C06C20
	0x03C06BA4 ADRP X10, 0x4F5000
	0x03C06BA8 LDR X8, [X21]
	0x03C06BAC LDR X10, [X10 + 0x9B8]
	0x03C06BB0 LDRH W9, [X8 + 0x12E]
	0x03C06BB4 LDR X1, [X10]
	0x03C06BB8 CBZ X9, 0x3C06BDC
	0x03C06BBC LDR X10, [X8 + 0xB0]
	0x03C06BC0 ADD X10, X10, 0x8
	0x03C06BC4 LDUR X11, [X10 - 0x8]
	0x03C06BC8 CMP X11, X1
	0x03C06BCC B.EQ 0x3C06BEC
	0x03C06BD0 SUBS X9, X9, 0x1
	0x03C06BD4 ADD X10, X10, 0x10
	0x03C06BD8 B.NE 0x3C06BC4
	0x03C06BDC MOVZ W2, 0x3
	0x03C06BE0 MOV X0, X21
	0x03C06BE4 BL 0x1C5C788
	0x03C06BE8 B 0x3C06BFC
	0x03C06BEC LDR W9, [X10]
	0x03C06BF0 ADD W9, W9, 0x3
	0x03C06BF4 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7DF000
	005 Move X19, 0x4EE000
	006 Move W8, [X20+408]
	007 Move X19, [X19+2600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4EE000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+408], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void DrawLine(UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Color color)

Disassembly:
	0x03C06BF8 ADD X0, X8, 0x138
	0x03C06BFC LDP X5, X4, [X0]
	0x03C06C00 MOV X0, X21
	0x03C06C04 MOV X2, X20
	0x03C06C08 MOV X3, X19
	0x03C06C0C LDP X20, X19, [X31 + 0x20]
	0x03C06C10 LDP X22, X21, [X31 + 0x10]
	0x03C06C14 MOVZ W1, 0x2
	0x03C06C18 LDR X30, [X31], #0x30
	0x03C06C1C BR X5
	0x03C06C20 BL 0x1C16F20
	0x03C06C24 STR X30, [X31 - 0x30]!
	0x03C06C28 STP X22, X21, [X31 + 0x10]
	0x03C06C2C STP X20, X19, [X31 + 0x20]
	0x03C06C30 ADRP X22, 0x7DE000
	0x03C06C34 ADRP X21, 0x4ED000
	0x03C06C38 LDRB W8, [X22 + 0x1B4]
	0x03C06C3C LDR X21, [X21 + 0xA28]
	0x03C06C40 MOV X19, X1
	0x03C06C44 MOV X20, X0
	0x03C06C48 TBNZ X8, 0x0, 0x3C06C6C
	0x03C06C4C ADRP X0, 0x4ED000
	0x03C06C50 LDR X0, [X0 + 0xA28]
	0x03C06C54 BL 0x1C16CF4
	0x03C06C58 ADRP X0, 0x4F5000
	0x03C06C5C LDR X0, [X0 + 0x9B8]
	0x03C06C60 BL 0x1C16CF4
	0x03C06C64 MOVZ W8, 0x1
	0x03C06C68 STRB W8, [X22 + 0x1B4]
	0x03C06C6C LDR X0, [X21]
	0x03C06C70 LDR W8, [X0 + 0xE0]
	0x03C06C74 CBNZ W8, 0x3C06C7C
	0x03C06C78 BL 0x1C16DFC
	0x03C06C7C ADRP X22, 0x7D2000
	0x03C06C80 LDRB W8, [X22 + 0xFA8]
	0x03C06C84 CBNZ W8, 0x3C06C9C
	0x03C06C88 ADRP X0, 0x4ED000
	0x03C06C8C LDR X0, [X0 + 0xA28]
	0x03C06C90 BL 0x1C16CF4
	0x03C06C94 MOVZ W8, 0x1
	0x03C06C98 STRB W8, [X22 + 0xFA8]
	0x03C06C9C LDR X0, [X21]
	0x03C06CA0 LDR W8, [X0 + 0xE0]
	0x03C06CA4 CBNZ W8, 0x3C06CB0
	0x03C06CA8 BL 0x1C16DFC
	0x03C06CAC LDR X0, [X21]
	0x03C06CB0 LDR X8, [X0 + 0xB8]
	0x03C06CB4 LDR X21, [X8 + 0x8]
	0x03C06CB8 CBZ X21, 0x3C06D38
	0x03C06CBC ADRP X10, 0x4F5000
	0x03C06CC0 LDR X8, [X21]
	0x03C06CC4 LDR X10, [X10 + 0x9B8]
	0x03C06CC8 LDRH W9, [X8 + 0x12E]
	0x03C06CCC LDR X1, [X10]
	0x03C06CD0 CBZ X9, 0x3C06CF4
	0x03C06CD4 LDR X10, [X8 + 0xB0]
	0x03C06CD8 ADD X10, X10, 0x8
	0x03C06CDC LDUR X11, [X10 - 0x8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X20, 0x7DF000
	014 Move X19, 0x4EE000
	015 Move W8, [X20+409]
	016 Move X19, [X19+2600]
	017 Move V10, V4
	018 Move V11, V3
	019 Move V12, V2
	020 Move V13, V1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {34}
	025 Move X0, 0x4EE000
	026 Move X0, [X0+2600]
	027 Move V8, V5
	028 Move V9, V0
	029 Call 0x1C17CF4
	030 Move V0, V9
	031 Move V5, V8
	032 Move W8, 1
	033 Move [X20+409], W8
	034 Move X0, [X19]
	035 Move S15, [X31+136]
	036 Move S14, [X31+140]
	037 Move S8, [X31+128]
	038 Move S9, [X31+132]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {55}
	042 Move [X31+104], S12
	043 Move [X31+112], S13
	044 Move V12, V11
	045 Move V11, V10
	046 Move V10, V5
	047 Move V13, V0
	048 Call 0x1C17DFC
	049 Move V0, V13
	050 Move V5, V10
	051 Move V10, V11
	052 Move V11, V12
	053 Move S12, [X31+104]
	054 Move S13, [X31+108]
	055 Move W0, 1
	056 Move V1, V13
	057 Move V2, V12
	058 Move V3, V11
	059 Move V4, V10
	060 Move [X31+16], W31
	061 Move [X31], S8
	062 Move [X31+8], S9
	063 Move [X31+8], S15
	064 Move [X31+16], S14
	065 Call Debug.DrawLine, X0, X1, X2, V0, X3
	066 Move X20, [X31+112]
	067 Move X19, [X31+120]
	068 Move X30, [X31+96]
	069 Move D9, [X31+80]
	070 Move D8, [X31+88]
	071 Move D11, [X31+64]
	072 Move D10, [X31+72]
	073 Move D13, [X31+48]
	074 Move D12, [X31+56]
	075 Move D15, [X31+32]
	076 Move D14, [X31+40]
	077 Add X31, X31, 128
	078 Return 

Method: System.Void DrawLine(UnityEngine.Vector3 start, UnityEngine.Vector3 end, UnityEngine.Color color, System.Single duration, System.Boolean depthTest)

Disassembly:
	0x03C06CE0 CMP X11, X1
	0x03C06CE4 B.EQ 0x3C06D04
	0x03C06CE8 SUBS X9, X9, 0x1
	0x03C06CEC ADD X10, X10, 0x10
	0x03C06CF0 B.NE 0x3C06CDC
	0x03C06CF4 MOVZ W2, 0x5
	0x03C06CF8 MOV X0, X21
	0x03C06CFC BL 0x1C5C788
	0x03C06D00 B 0x3C06D14
	0x03C06D04 LDR W9, [X10]
	0x03C06D08 ADD W9, W9, 0x5
	0x03C06D0C ADD X8, X8, W9, 0x4, SXTW
	0x03C06D10 ADD X0, X8, 0x138
	0x03C06D14 LDP X5, X4, [X0]
	0x03C06D18 MOV X0, X21
	0x03C06D1C MOV X2, X20
	0x03C06D20 MOV X3, X19
	0x03C06D24 LDP X20, X19, [X31 + 0x20]
	0x03C06D28 LDP X22, X21, [X31 + 0x10]
	0x03C06D2C MOVZ W1, 0x2
	0x03C06D30 LDR X30, [X31], #0x30
	0x03C06D34 BR X5
	0x03C06D38 BL 0x1C16F20
	0x03C06D3C STP X30, X23, [X31 - 0x30]!
	0x03C06D40 STP X22, X21, [X31 + 0x10]
	0x03C06D44 STP X20, X19, [X31 + 0x20]
	0x03C06D48 ADRP X23, 0x7DE000
	0x03C06D4C ADRP X22, 0x4ED000
	0x03C06D50 LDRB W8, [X23 + 0x1B5]
	0x03C06D54 LDR X22, [X22 + 0xA28]
	0x03C06D58 MOV X19, X2
	0x03C06D5C MOV X20, X1
	0x03C06D60 MOV X21, X0
	0x03C06D64 TBNZ X8, 0x0, 0x3C06D88
	0x03C06D68 ADRP X0, 0x4ED000
	0x03C06D6C LDR X0, [X0 + 0xA28]
	0x03C06D70 BL 0x1C16CF4
	0x03C06D74 ADRP X0, 0x558000
	0x03C06D78 LDR X0, [X0 + 0xB10]
	0x03C06D7C BL 0x1C16CF4
	0x03C06D80 MOVZ W8, 0x1
	0x03C06D84 STRB W8, [X23 + 0x1B5]
	0x03C06D88 LDR X0, [X22]
	0x03C06D8C LDR W8, [X0 + 0xE0]
	0x03C06D90 CBNZ W8, 0x3C06D98

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], D8
	003 Move [X31+64], X30
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move V6, [X31+6]
	008 Move [X31+32], S0
	009 Move [X31+40], S1
	010 Move [X31+40], S2
	011 Move X20, 0x7DF000
	012 Move [X31+16], S3
	013 Move [X31+24], S4
	014 Move [X31+24], S5
	015 Move [X31], V6
	016 Move X21, 0x4EE000
	017 Move W8, [X20+410]
	018 Move X21, [X21+2600]
	019 Move W19, W0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x4EE000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+410], W8
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X20, 0x7DF000
	035 Move X8, [X20+464]
	036 Move V8, [X31+112]
	037 Compare X8, 0
	038 JumpIfNotEqual {44}
	039 Move X0, -51400704
	040 Add X0, X0, 3146
	041 Call 0x1C17CB8
	042 Move X8, X0
	043 Move [X20+464], X0
	044 And W3, W19, 1
	045 Add X0, X31, 32
	046 Add X1, X31, 16
	047 Add X2, X31, 0
	048 Move V0, V8
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X20, [X31+80]
	051 Move X19, [X31+88]
	052 Move X30, [X31+64]
	053 Move X21, [X31+72]
	054 Move V8, [X31+48]
	055 Add X31, X31, 96
	056 Return 

Method: System.Void DrawRay(UnityEngine.Vector3 start, UnityEngine.Vector3 dir, UnityEngine.Color color, System.Single duration)

Disassembly:
	0x03C06E00 B.EQ 0x3C06E20
	0x03C06E04 SUBS X9, X9, 0x1
	0x03C06E08 ADD X10, X10, 0x10
	0x03C06E0C B.NE 0x3C06DF8
	0x03C06E10 MOV X0, X22
	0x03C06E14 MOV W2, W31
	0x03C06E18 BL 0x1C5C788
	0x03C06E1C B 0x3C06E2C
	0x03C06E20 LDRSW X9, [X10]
	0x03C06E24 ADD X8, X8, X9, 0x4, LSL
	0x03C06E28 ADD X0, X8, 0x138
	0x03C06E2C LDP X6, X5, [X0]
	0x03C06E30 MOV X0, X22
	0x03C06E34 MOV X2, X21
	0x03C06E38 MOV X3, X20
	0x03C06E3C MOV X4, X19
	0x03C06E40 LDP X20, X19, [X31 + 0x20]
	0x03C06E44 LDP X22, X21, [X31 + 0x10]
	0x03C06E48 MOVZ W1, 0x2
	0x03C06E4C LDP X30, X23, [X31], #0x30
	0x03C06E50 BR X6
	0x03C06E54 BL 0x1C16F20
	0x03C06E58 STR X30, [X31 - 0x20]!
	0x03C06E5C STP X20, X19, [X31 + 0x10]
	0x03C06E60 ADRP X20, 0x7DE000
	0x03C06E64 LDRB W8, [X20 + 0x1B6]
	0x03C06E68 MOV W19, W0
	0x03C06E6C TBNZ X8, 0x0, 0x3C06E9C
	0x03C06E70 ADRP X0, 0x4ED000
	0x03C06E74 LDR X0, [X0 + 0xA28]
	0x03C06E78 BL 0x1C16CF4
	0x03C06E7C ADRP X0, 0x4F5000
	0x03C06E80 LDR X0, [X0 + 0x9B8]
	0x03C06E84 BL 0x1C16CF4
	0x03C06E88 ADRP X0, 0x558000
	0x03C06E8C LDR X0, [X0 + 0xB88]
	0x03C06E90 BL 0x1C16CF4
	0x03C06E94 MOVZ W8, 0x1
	0x03C06E98 STRB W8, [X20 + 0x1B6]
	0x03C06E9C TBZ X19, 0x0, 0x3C06EAC
	0x03C06EA0 LDP X20, X19, [X31 + 0x10]
	0x03C06EA4 LDR X30, [X31], #0x20
	0x03C06EA8 RET
	0x03C06EAC ADRP X19, 0x4ED000
	0x03C06EB0 LDR X19, [X19 + 0xA28]
	0x03C06EB4 LDR X0, [X19]
	0x03C06EB8 LDR W8, [X0 + 0xE0]
	0x03C06EBC CBNZ W8, 0x3C06EC4
	0x03C06EC0 BL 0x1C16DFC
	0x03C06EC4 ADRP X20, 0x7D2000
	0x03C06EC8 LDRB W8, [X20 + 0xFA8]
	0x03C06ECC CBNZ W8, 0x3C06EE4
	0x03C06ED0 ADRP X0, 0x4ED000
	0x03C06ED4 LDR X0, [X0 + 0xA28]
	0x03C06ED8 BL 0x1C16CF4
	0x03C06EDC MOVZ W8, 0x1
	0x03C06EE0 STRB W8, [X20 + 0xFA8]
	0x03C06EE4 LDR X0, [X19]
	0x03C06EE8 LDR W8, [X0 + 0xE0]
	0x03C06EEC CBNZ W8, 0x3C06EF8
	0x03C06EF0 BL 0x1C16DFC
	0x03C06EF4 LDR X0, [X19]
	0x03C06EF8 LDR X8, [X0 + 0xB8]
	0x03C06EFC LDR X19, [X8 + 0x8]
	0x03C06F00 CBZ X19, 0x3C06F84
	0x03C06F04 ADRP X9, 0x4F5000
	0x03C06F08 LDR X8, [X19]
	0x03C06F0C LDR X9, [X9 + 0x9B8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0x7DF000
	014 Move X19, 0x4EE000
	015 Move S10, [X31+120]
	016 Move S6, [X31+124]
	017 Move S16, [X31+112]
	018 Move S9, [X31+116]
	019 Move W8, [X20+411]
	020 Move V18, [X31+128]
	021 Move X19, [X19+2600]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0x4EE000
	027 Move X0, [X0+2600]
	028 Move V11, V5
	029 Move V12, V4
	030 Move V13, V3
	031 Move V14, V2
	032 Move V15, V1
	033 Move [X31+88], S6
	034 Move [X31+96], S16
	035 Move V8, V0
	036 Move [X31+12], S18
	037 Call 0x1C17CF4
	038 Move V18, [X31+12]
	039 Move S6, [X31+88]
	040 Move S16, [X31+92]
	041 Move V0, V8
	042 Move V1, V15
	043 Move V2, V14
	044 Move V3, V13
	045 Move V4, V12
	046 Move V5, V11
	047 Move W8, 1
	048 Move [X20+411], W8
	049 Move X0, [X19]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {72}
	053 Move [X31+12], S5
	054 Move V12, V4
	055 Move V13, V3
	056 Move V14, V2
	057 Move V15, V1
	058 Move [X31+88], S6
	059 Move [X31+96], S16
	060 Move V8, V0
	061 Move V11, V18
	062 Call 0x1C17DFC
	063 Move S6, [X31+88]
	064 Move S16, [X31+92]
	065 Move V5, [X31+12]
	066 Move V18, V11
	067 Move V0, V8
	068 Move V1, V15
	069 Move V2, V14
	070 Move V3, V13
	071 Move V4, V12
	072 Move [X31+112], S16
	073 Move [X31+120], S9
	074 Move [X31+120], S10
	075 Move X20, [X31+96]
	076 Move X19, [X31+104]
	077 Move X30, [X31+80]
	078 Move D9, [X31+64]
	079 Move D8, [X31+72]
	080 Move D11, [X31+48]
	081 Move D10, [X31+56]
	082 Move D13, [X31+32]
	083 Move D12, [X31+40]
	084 Move D15, [X31+16]
	085 Move D14, [X31+24]
	086 Move [X31+124], S6
	087 Move [X31+132], S18
	088 Move W0, 1
	089 Add X31, X31, 112

Method: System.Void DrawRay(UnityEngine.Vector3 start, UnityEngine.Vector3 dir, UnityEngine.Color color, System.Single duration, System.Boolean depthTest)

Disassembly:
	0x03C06F10 ADRP X10, 0x558000
	0x03C06F14 LDR X1, [X9]
	0x03C06F18 LDR X10, [X10 + 0xB88]
	0x03C06F1C LDRH W9, [X8 + 0x12E]
	0x03C06F20 LDR X20, [X10]
	0x03C06F24 CBZ X9, 0x3C06F48
	0x03C06F28 LDR X10, [X8 + 0xB0]
	0x03C06F2C ADD X10, X10, 0x8
	0x03C06F30 LDUR X11, [X10 - 0x8]
	0x03C06F34 CMP X11, X1
	0x03C06F38 B.EQ 0x3C06F58
	0x03C06F3C SUBS X9, X9, 0x1
	0x03C06F40 ADD X10, X10, 0x10
	0x03C06F44 B.NE 0x3C06F30
	0x03C06F48 MOVZ W2, 0x2
	0x03C06F4C MOV X0, X19
	0x03C06F50 BL 0x1C5C788
	0x03C06F54 B 0x3C06F68
	0x03C06F58 LDR W9, [X10]
	0x03C06F5C ADD W9, W9, 0x2
	0x03C06F60 ADD X8, X8, W9, 0x4, SXTW
	0x03C06F64 ADD X0, X8, 0x138
	0x03C06F68 LDP X4, X3, [X0]
	0x03C06F6C MOV X0, X19
	0x03C06F70 MOV X2, X20
	0x03C06F74 LDP X20, X19, [X31 + 0x10]
	0x03C06F78 MOVZ W1, 0x1
	0x03C06F7C LDR X30, [X31], #0x20
	0x03C06F80 BR X4
	0x03C06F84 BL 0x1C16F20
	0x03C06F88 STP X30, X21, [X31 - 0x20]!
	0x03C06F8C STP X20, X19, [X31 + 0x10]
	0x03C06F90 ADRP X21, 0x7DE000
	0x03C06F94 LDRB W8, [X21 + 0x1B7]
	0x03C06F98 MOV X19, X1
	0x03C06F9C MOV W20, W0
	0x03C06FA0 TBNZ X8, 0x0, 0x3C06FC4
	0x03C06FA4 ADRP X0, 0x4ED000
	0x03C06FA8 LDR X0, [X0 + 0xA28]
	0x03C06FAC BL 0x1C16CF4
	0x03C06FB0 ADRP X0, 0x4F5000
	0x03C06FB4 LDR X0, [X0 + 0x9B8]
	0x03C06FB8 BL 0x1C16CF4
	0x03C06FBC MOVZ W8, 0x1
	0x03C06FC0 STRB W8, [X21 + 0x1B7]
	0x03C06FC4 TBZ X20, 0x0, 0x3C06FD4
	0x03C06FC8 LDP X20, X19, [X31 + 0x10]
	0x03C06FCC LDP X30, X21, [X31], #0x20
	0x03C06FD0 RET
	0x03C06FD4 ADRP X20, 0x4ED000
	0x03C06FD8 LDR X20, [X20 + 0xA28]
	0x03C06FDC LDR X0, [X20]
	0x03C06FE0 LDR W8, [X0 + 0xE0]
	0x03C06FE4 CBNZ W8, 0x3C06FEC
	0x03C06FE8 BL 0x1C16DFC
	0x03C06FEC ADRP X21, 0x7D2000
	0x03C06FF0 LDRB W8, [X21 + 0xFA8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x7DF000
	015 Move X20, 0x4EE000
	016 Move V9, V1
	017 Move V10, V0
	018 Move S1, [X31+120]
	019 Move S0, [X31+124]
	020 Move S6, [X31+112]
	021 Move S12, [X31+116]
	022 Move W8, [X21+412]
	023 Move V13, [X31+128]
	024 Move X20, [X20+2600]
	025 Move W19, W0
	026 Move V11, V5
	027 Move V14, V4
	028 Move V15, V3
	029 Move V8, V2
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {45}
	034 Move X0, 0x4EE000
	035 Move X0, [X0+2600]
	036 Move [X31+4], S0
	037 Move [X31+12], S6
	038 Move [X31+12], S1
	039 Call 0x1C17CF4
	040 Move S6, [X31+8]
	041 Move S1, [X31+12]
	042 Move V0, [X31+4]
	043 Move W8, 1
	044 Move [X21+412], W8
	045 Move X0, [X20]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {56}
	049 Move [X31+4], S0
	050 Move [X31+12], S6
	051 Move [X31+12], S1
	052 Call 0x1C17DFC
	053 Move S6, [X31+8]
	054 Move S1, [X31+12]
	055 Move V0, [X31+4]
	056 Add S5, S8, S11
	057 Add S4, S9, S14
	058 Add S3, S10, S15
	059 Move [X31+124], S0
	060 Move [X31+132], S13
	061 Move [X31+112], S6
	062 Move [X31+120], S12
	063 Move [X31+120], S1
	064 And W0, W19, 1
	065 Move V0, V10
	066 Move V1, V9
	067 Move V2, V8
	068 Move X20, [X31+96]
	069 Move X19, [X31+104]
	070 Move X30, [X31+80]
	071 Move X21, [X31+88]
	072 Move D9, [X31+64]
	073 Move D8, [X31+72]
	074 Move D11, [X31+48]
	075 Move D10, [X31+56]
	076 Move D13, [X31+32]
	077 Move D12, [X31+40]
	078 Move D15, [X31+16]
	079 Move D14, [X31+24]
	080 Add X31, X31, 112
	081 Call Debug.DrawLine, X0, X1, X2, V0, X3
	082 Return 

Method: System.Int32 ExtractStackTraceNoAlloc(System.Byte* buffer, System.Int32 bufferMax, System.String projectFolder)

Disassembly:
	0x03C06FF4 CBNZ W8, 0x3C0700C
	0x03C06FF8 ADRP X0, 0x4ED000
	0x03C06FFC LDR X0, [X0 + 0xA28]
	0x03C07000 BL 0x1C16CF4
	0x03C07004 MOVZ W8, 0x1
	0x03C07008 STRB W8, [X21 + 0xFA8]
	0x03C0700C LDR X0, [X20]
	0x03C07010 LDR W8, [X0 + 0xE0]
	0x03C07014 CBNZ W8, 0x3C07020
	0x03C07018 BL 0x1C16DFC
	0x03C0701C LDR X0, [X20]
	0x03C07020 LDR X8, [X0 + 0xB8]
	0x03C07024 LDR X20, [X8 + 0x8]
	0x03C07028 CBZ X20, 0x3C070A0
	0x03C0702C ADRP X10, 0x4F4000
	0x03C07030 LDR X8, [X20]
	0x03C07034 LDR X10, [X10 + 0x9B8]
	0x03C07038 LDRH W9, [X8 + 0x12E]
	0x03C0703C LDR X1, [X10]
	0x03C07040 CBZ X9, 0x3C07064
	0x03C07044 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7DE000
	007 Move X3, [X22+416]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51298304
	014 Add X0, X0, 2239
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+416], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void Log(System.Object message)

Disassembly:
	0x03C07048 ADD X10, X10, 0x8
	0x03C0704C LDUR X11, [X10 - 0x8]
	0x03C07050 CMP X11, X1
	0x03C07054 B.EQ 0x3C07074
	0x03C07058 SUBS X9, X9, 0x1
	0x03C0705C ADD X10, X10, 0x10
	0x03C07060 B.NE 0x3C0704C
	0x03C07064 MOVZ W2, 0x2
	0x03C07068 MOV X0, X20
	0x03C0706C BL 0x1C5C788
	0x03C07070 B 0x3C07084
	0x03C07074 LDR W9, [X10]
	0x03C07078 ADD W9, W9, 0x2
	0x03C0707C ADD X8, X8, W9, 0x4, SXTW
	0x03C07080 ADD X0, X8, 0x138
	0x03C07084 LDP X4, X3, [X0]
	0x03C07088 MOV X0, X20
	0x03C0708C MOV X2, X19
	0x03C07090 LDP X20, X19, [X31 + 0x10]
	0x03C07094 MOVZ W1, 0x1
	0x03C07098 LDP X30, X21, [X31], #0x20
	0x03C0709C BR X4
	0x03C070A0 BL 0x1C16F20
	0x03C070A4 STP X30, X21, [X31 - 0x20]!
	0x03C070A8 STP X20, X19, [X31 + 0x10]
	0x03C070AC ADRP X21, 0x7DD000
	0x03C070B0 ADRP X20, 0x4EC000
	0x03C070B4 LDRB W8, [X21 + 0x1B8]
	0x03C070B8 LDR X20, [X20 + 0xA28]
	0x03C070BC MOV X19, X0
	0x03C070C0 TBNZ X8, 0x0, 0x3C070E4
	0x03C070C4 ADRP X0, 0x4EC000
	0x03C070C8 LDR X0, [X0 + 0xA28]
	0x03C070CC BL 0x1C16CF4
	0x03C070D0 ADRP X0, 0x4F4000
	0x03C070D4 LDR X0, [X0 + 0x9B8]
	0x03C070D8 BL 0x1C16CF4
	0x03C070DC MOVZ W8, 0x1
	0x03C070E0 STRB W8, [X21 + 0x1B8]
	0x03C070E4 LDR X0, [X20]
	0x03C070E8 LDR W8, [X0 + 0xE0]
	0x03C070EC CBNZ W8, 0x3C070F4
	0x03C070F0 BL 0x1C16DFC
	0x03C070F4 ADRP X21, 0x7D1000
	0x03C070F8 LDRB W8, [X21 + 0xFA8]
	0x03C070FC CBNZ W8, 0x3C07114
	0x03C07100 ADRP X0, 0x4EC000
	0x03C07104 LDR X0, [X0 + 0xA28]
	0x03C07108 BL 0x1C16CF4
	0x03C0710C MOVZ W8, 0x1
	0x03C07110 STRB W8, [X21 + 0xFA8]
	0x03C07114 LDR X0, [X20]
	0x03C07118 LDR W8, [X0 + 0xE0]
	0x03C0711C CBNZ W8, 0x3C07128
	0x03C07120 BL 0x1C16DFC
	0x03C07124 LDR X0, [X20]
	0x03C07128 LDR X8, [X0 + 0xB8]
	0x03C0712C LDR X20, [X8 + 0x8]
	0x03C07130 CBZ X20, 0x3C071A8
	0x03C07134 ADRP X10, 0x4F4000
	0x03C07138 LDR X8, [X20]
	0x03C0713C LDR X10, [X10 + 0x9B8]
	0x03C07140 LDRH W9, [X8 + 0x12E]
	0x03C07144 LDR X1, [X10]
	0x03C07148 CBZ X9, 0x3C0716C
	0x03C0714C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DE000
	006 Move X20, 0x4ED000
	007 Move W8, [X21+424]
	008 Move X20, [X20+2600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4ED000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x4F5000
	018 Move X0, [X0+2488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+424], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x7D2000
	028 Move W8, [X21+4008]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x4ED000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+4008], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X20, [X8+8]
	044 Compare X20, 0
	045 JumpIfEqual {76}
	046 Move X10, 0x4F5000
	047 Move X8, [X20]
	048 Move X10, [X10+2488]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 2
	060 Move X0, X20
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 2
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X4, [X0]
	067 Move X3, [X0+8]
	068 Move X0, X20
	069 Move X2, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move W1, 3
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 CallNoReturn X4
	076 Call 0x1C17F20

Method: System.Void Log(System.Object message, UnityEngine.Object context)

Disassembly:
	0x03C07150 ADD X10, X10, 0x8
	0x03C07154 LDUR X11, [X10 - 0x8]
	0x03C07158 CMP X11, X1
	0x03C0715C B.EQ 0x3C0717C
	0x03C07160 SUBS X9, X9, 0x1
	0x03C07164 ADD X10, X10, 0x10
	0x03C07168 B.NE 0x3C07154
	0x03C0716C MOVZ W2, 0x2
	0x03C07170 MOV X0, X20
	0x03C07174 BL 0x1C5C788
	0x03C07178 B 0x3C0718C
	0x03C0717C LDR W9, [X10]
	0x03C07180 ADD W9, W9, 0x2
	0x03C07184 ADD X8, X8, W9, 0x4, SXTW
	0x03C07188 ADD X0, X8, 0x138
	0x03C0718C LDP X4, X3, [X0]
	0x03C07190 MOV X0, X20
	0x03C07194 MOV X2, X19
	0x03C07198 LDP X20, X19, [X31 + 0x10]
	0x03C0719C MOVZ W1, 0x1
	0x03C071A0 LDP X30, X21, [X31], #0x20
	0x03C071A4 BR X4
	0x03C071A8 BL 0x1C16F20
	0x03C071AC STR X30, [X31 - 0x30]!
	0x03C071B0 STP X22, X21, [X31 + 0x10]
	0x03C071B4 STP X20, X19, [X31 + 0x20]
	0x03C071B8 ADRP X22, 0x7DD000
	0x03C071BC ADRP X21, 0x4EC000
	0x03C071C0 LDRB W8, [X22 + 0x1B9]
	0x03C071C4 LDR X21, [X21 + 0xA28]
	0x03C071C8 MOV X19, X1
	0x03C071CC MOV X20, X0
	0x03C071D0 TBNZ X8, 0x0, 0x3C071F4
	0x03C071D4 ADRP X0, 0x4EC000
	0x03C071D8 LDR X0, [X0 + 0xA28]
	0x03C071DC BL 0x1C16CF4
	0x03C071E0 ADRP X0, 0x4F4000
	0x03C071E4 LDR X0, [X0 + 0x9B8]
	0x03C071E8 BL 0x1C16CF4
	0x03C071EC MOVZ W8, 0x1
	0x03C071F0 STRB W8, [X22 + 0x1B9]
	0x03C071F4 LDR X0, [X21]
	0x03C071F8 LDR W8, [X0 + 0xE0]
	0x03C071FC CBNZ W8, 0x3C07204
	0x03C07200 BL 0x1C16DFC
	0x03C07204 ADRP X22, 0x7D1000
	0x03C07208 LDRB W8, [X22 + 0xFA8]
	0x03C0720C CBNZ W8, 0x3C07224
	0x03C07210 ADRP X0, 0x4EC000
	0x03C07214 LDR X0, [X0 + 0xA28]
	0x03C07218 BL 0x1C16CF4
	0x03C0721C MOVZ W8, 0x1
	0x03C07220 STRB W8, [X22 + 0xFA8]
	0x03C07224 LDR X0, [X21]
	0x03C07228 LDR W8, [X0 + 0xE0]
	0x03C0722C CBNZ W8, 0x3C07238
	0x03C07230 BL 0x1C16DFC
	0x03C07234 LDR X0, [X21]
	0x03C07238 LDR X8, [X0 + 0xB8]
	0x03C0723C LDR X21, [X8 + 0x8]
	0x03C07240 CBZ X21, 0x3C072C0
	0x03C07244 ADRP X10, 0x4F4000
	0x03C07248 LDR X8, [X21]
	0x03C0724C LDR X10, [X10 + 0x9B8]
	0x03C07250 LDRH W9, [X8 + 0x12E]
	0x03C07254 LDR X1, [X10]
	0x03C07258 CBZ X9, 0x3C0727C
	0x03C0725C LDR X10, [X8 + 0xB0]
	0x03C07260 ADD X10, X10, 0x8
	0x03C07264 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7DE000
	007 Move X21, 0x4ED000
	008 Move W8, [X22+425]
	009 Move X21, [X21+2600]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4ED000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F5000
	020 Move X0, [X0+2488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+425], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x7D2000
	030 Move W8, [X22+4008]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x4ED000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+4008], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X21, [X8+8]
	046 Compare X21, 0
	047 JumpIfEqual {80}
	048 Move X10, 0x4F5000
	049 Move X8, [X21]
	050 Move X10, [X10+2488]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 3
	062 Move X0, X21
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 3
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X5, [X0]
	069 Move X4, [X0+8]
	070 Move X0, X21
	071 Move X2, X20
	072 Move X3, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move W1, 3
	078 Move X30, [X31+48]
	079 CallNoReturn X5
	080 Call 0x1C17F20

Method: System.Void LogFormat(System.String format, System.Object[] args)

Disassembly:
	0x03C07268 CMP X11, X1
	0x03C0726C B.EQ 0x3C0728C
	0x03C07270 SUBS X9, X9, 0x1
	0x03C07274 ADD X10, X10, 0x10
	0x03C07278 B.NE 0x3C07264
	0x03C0727C MOVZ W2, 0x5
	0x03C07280 MOV X0, X21
	0x03C07284 BL 0x1C5C788
	0x03C07288 B 0x3C0729C
	0x03C0728C LDR W9, [X10]
	0x03C07290 ADD W9, W9, 0x5
	0x03C07294 ADD X8, X8, W9, 0x4, SXTW
	0x03C07298 ADD X0, X8, 0x138
	0x03C0729C LDP X5, X4, [X0]
	0x03C072A0 MOV X0, X21
	0x03C072A4 MOV X2, X20
	0x03C072A8 MOV X3, X19
	0x03C072AC LDP X20, X19, [X31 + 0x20]
	0x03C072B0 LDP X22, X21, [X31 + 0x10]
	0x03C072B4 MOVZ W1, 0x1
	0x03C072B8 LDR X30, [X31], #0x30
	0x03C072BC BR X5
	0x03C072C0 BL 0x1C16F20
	0x03C072C4 STP X30, X19, [X31 - 0x10]!
	0x03C072C8 ADRP X19, 0x7DD000
	0x03C072CC LDR X0, [X19 + 0x1C0]
	0x03C072D0 CBNZ X0, 0x3C072E4
	0x03C072D4 ADRP X0, 0xFFFFFFFFFCEF7000
	0x03C072D8 ADD X0, X0, 0xE7F
	0x03C072DC BL 0x1C16CB8
	0x03C072E0 STR X0, [X19 + 0x1C0]
	0x03C072E4 LDP X30, X19, [X31], #0x10
	0x03C072E8 BR X0
	0x03C072EC STP X30, X23, [X31 - 0x30]!
	0x03C072F0 STP X22, X21, [X31 + 0x10]
	0x03C072F4 STP X20, X19, [X31 + 0x20]
	0x03C072F8 ADRP X21, 0x7DD000
	0x03C072FC ADRP X23, 0x4EC000
	0x03C07300 LDRB W8, [X21 + 0x1C8]
	0x03C07304 LDR X23, [X23 + 0xA28]
	0x03C07308 MOV X19, X1
	0x03C0730C MOV X20, X0
	0x03C07310 TBNZ X8, 0x0, 0x3C0734C
	0x03C07314 ADRP X0, 0x557000
	0x03C07318 LDR X0, [X0 + 0xB90]
	0x03C0731C BL 0x1C16CF4
	0x03C07320 ADRP X0, 0x4EC000
	0x03C07324 LDR X0, [X0 + 0xA28]
	0x03C07328 BL 0x1C16CF4
	0x03C0732C ADRP X0, 0x557000
	0x03C07330 LDR X0, [X0 + 0xB10]
	0x03C07334 BL 0x1C16CF4
	0x03C07338 ADRP X0, 0x4F4000
	0x03C0733C LDR X0, [X0 + 0x9B8]
	0x03C07340 BL 0x1C16CF4
	0x03C07344 MOVZ W8, 0x1
	0x03C07348 STRB W8, [X21 + 0x1C8]
	0x03C0734C LDR X0, [X23]
	0x03C07350 LDR W8, [X0 + 0xE0]
	0x03C07354 CBNZ W8, 0x3C0735C
	0x03C07358 BL 0x1C16DFC
	0x03C0735C ADRP X22, 0x7D1000
	0x03C07360 LDRB W8, [X22 + 0xFA8]
	0x03C07364 CBNZ W8, 0x3C0737C
	0x03C07368 ADRP X0, 0x4EC000
	0x03C0736C LDR X0, [X0 + 0xA28]
	0x03C07370 BL 0x1C16CF4
	0x03C07374 MOVZ W8, 0x1
	0x03C07378 STRB W8, [X22 + 0xFA8]
	0x03C0737C LDR X0, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7DE000
	007 Move X21, 0x4ED000
	008 Move W8, [X22+426]
	009 Move X21, [X21+2600]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4ED000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F5000
	020 Move X0, [X0+2488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+426], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x7D2000
	030 Move W8, [X22+4008]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x4ED000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+4008], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X21, [X8+8]
	046 Compare X21, 0
	047 JumpIfEqual {80}
	048 Move X10, 0x4F5000
	049 Move X8, [X21]
	050 Move X10, [X10+2488]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 5
	062 Move X0, X21
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 5
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X5, [X0]
	069 Move X4, [X0+8]
	070 Move X0, X21
	071 Move X2, X20
	072 Move X3, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move W1, 3
	078 Move X30, [X31+48]
	079 CallNoReturn X5
	080 Call 0x1C17F20

Method: System.Void LogFormat(UnityEngine.Object context, System.String format, System.Object[] args)

Disassembly:
	0x03C07380 LDR W8, [X0 + 0xE0]
	0x03C07384 CBNZ W8, 0x3C07390
	0x03C07388 BL 0x1C16DFC
	0x03C0738C LDR X0, [X23]
	0x03C07390 LDR X8, [X0 + 0xB8]
	0x03C07394 LDR X21, [X8 + 0x8]
	0x03C07398 CBZ X21, 0x3C07674
	0x03C0739C ADRP X10, 0x4F4000
	0x03C073A0 LDR X8, [X21]
	0x03C073A4 LDR X10, [X10 + 0x9B8]
	0x03C073A8 LDRH W9, [X8 + 0x12E]
	0x03C073AC LDR X1, [X10]
	0x03C073B0 CBZ X9, 0x3C073D4
	0x03C073B4 LDR X10, [X8 + 0xB0]
	0x03C073B8 ADD X10, X10, 0x8
	0x03C073BC LDUR X11, [X10 - 0x8]
	0x03C073C0 CMP X11, X1
	0x03C073C4 B.EQ 0x3C073E4
	0x03C073C8 SUBS X9, X9, 0x1
	0x03C073CC ADD X10, X10, 0x10
	0x03C073D0 B.NE 0x3C073BC
	0x03C073D4 MOV X0, X21
	0x03C073D8 MOV W2, W31
	0x03C073DC BL 0x1C5C788
	0x03C073E0 B 0x3C073F0
	0x03C073E4 LDRSW X9, [X10]
	0x03C073E8 ADD X8, X8, X9, 0x4, LSL
	0x03C073EC ADD X0, X8, 0x138
	0x03C073F0 LDP X8, X1, [X0]
	0x03C073F4 MOV X0, X21
	0x03C073F8 BLR X8
	0x03C073FC CBZ X0, 0x3C07418
	0x03C07400 ADRP X8, 0x557000
	0x03C07404 LDR X8, [X8 + 0xB90]
	0x03C07408 LDR X9, [X0]
	0x03C0740C LDR X8, [X8]
	0x03C07410 CMP X9, X8
	0x03C07414 B.EQ 0x3C0769C
	0x03C07418 LDR X0, [X23]
	0x03C0741C LDR W8, [X0 + 0xE0]
	0x03C07420 CBNZ W8, 0x3C07428
	0x03C07424 BL 0x1C16DFC
	0x03C07428 LDRB W8, [X22 + 0xFA8]
	0x03C0742C CBNZ W8, 0x3C07444
	0x03C07430 ADRP X0, 0x4EC000
	0x03C07434 LDR X0, [X0 + 0xA28]
	0x03C07438 BL 0x1C16CF4
	0x03C0743C MOVZ W8, 0x1
	0x03C07440 STRB W8, [X22 + 0xFA8]
	0x03C07444 LDR X0, [X23]
	0x03C07448 LDR W8, [X0 + 0xE0]
	0x03C0744C CBNZ W8, 0x3C07458
	0x03C07450 BL 0x1C16DFC
	0x03C07454 LDR X0, [X23]
	0x03C07458 LDR X8, [X0 + 0xB8]
	0x03C0745C LDR X21, [X8 + 0x8]
	0x03C07460 CBZ X21, 0x3C074D8
	0x03C07464 ADRP X10, 0x557000
	0x03C07468 LDR X8, [X21]
	0x03C0746C LDR X10, [X10 + 0xB10]
	0x03C07470 LDRH W9, [X8 + 0x12E]
	0x03C07474 LDR X1, [X10]
	0x03C07478 CBZ X9, 0x3C0749C
	0x03C0747C LDR X10, [X8 + 0xB0]
	0x03C07480 ADD X10, X10, 0x8
	0x03C07484 LDUR X11, [X10 - 0x8]
	0x03C07488 CMP X11, X1
	0x03C0748C B.EQ 0x3C074AC
	0x03C07490 SUBS X9, X9, 0x1
	0x03C07494 ADD X10, X10, 0x10
	0x03C07498 B.NE 0x3C07484

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7DE000
	008 Move X22, 0x4ED000
	009 Move W8, [X23+427]
	010 Move X22, [X22+2600]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4ED000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x558000
	022 Move X0, [X0+2832]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+427], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X23, 0x7D2000
	032 Move W8, [X23+4008]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x4ED000
	036 Move X0, [X0+2600]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+4008], W8
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Move X8, [X0+184]
	047 Move X22, [X8+8]
	048 Compare X22, 0
	049 JumpIfEqual {83}
	050 Move X10, 0x558000
	051 Move X8, [X22]
	052 Move X10, [X10+2832]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X22
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X6, [X0]
	070 Move X5, [X0+8]
	071 Move X0, X22
	072 Move X2, X21
	073 Move X3, X20
	074 Move X4, X19
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move W1, 3
	080 Move X30, [X31+48]
	081 Move X23, [X31+56]
	082 CallNoReturn X6
	083 Call 0x1C17F20

Method: System.Void LogError(System.Object message)

Disassembly:
	0x03C0749C MOVZ W2, 0x1
	0x03C074A0 MOV X0, X21
	0x03C074A4 BL 0x1C5C788
	0x03C074A8 B 0x3C074BC
	0x03C074AC LDR W9, [X10]
	0x03C074B0 ADD W9, W9, 0x1
	0x03C074B4 ADD X8, X8, W9, 0x4, SXTW
	0x03C074B8 ADD X0, X8, 0x138
	0x03C074BC LDP X8, X3, [X0]
	0x03C074C0 MOV X0, X21
	0x03C074C4 MOV X1, X20
	0x03C074C8 MOV X2, X19
	0x03C074CC BLR X8
	0x03C074D0 MOVZ W0, 0x1
	0x03C074D4 B 0x3C076A0
	0x03C074D8 BL 0x1C16F20
	0x03C074DC B 0x3C074E4
	0x03C074E0 B 0x3C074E4
	0x03C074E4 MOV X23, X22
	0x03C074E8 MOV X20, X0
	0x03C074EC CMP W1, 0x1
	0x03C074F0 B.NE 0x3C076D8
	0x03C074F4 MOV X0, X20
	0x03C074F8 BL 0x3EB1AD0
	0x03C074FC MOV X20, X0
	0x03C07500 ADRP X0, 0x4EC000
	0x03C07504 LDR X0, [X0 + 0x7D0]
	0x03C07508 BL 0x1C16D08
	0x03C0750C LDR X8, [X20]
	0x03C07510 LDR X1, [X8]
	0x03C07514 BL 0x1C17270
	0x03C07518 TBZ X0, 0x0, 0x3C076B0
	0x03C0751C LDR X21, [X20]
	0x03C07520 BL 0x3EB1AE0
	0x03C07524 ADRP X0, 0x4EC000
	0x03C07528 LDR X0, [X0 + 0xA28]
	0x03C0752C BL 0x1C16D08
	0x03C07530 LDR W8, [X0 + 0xE0]
	0x03C07534 CBNZ W8, 0x3C0753C
	0x03C07538 BL 0x1C16DFC
	0x03C0753C ADRP X22, 0x4EC000
	0x03C07540 LDR X22, [X22 + 0xA28]
	0x03C07544 MOV X0, X22
	0x03C07548 BL 0x1C16D08
	0x03C0754C LDR X8, [X0 + 0xB8]
	0x03C07550 LDRB W9, [X23 + 0xFA8]
	0x03C07554 LDR X20, [X8]
	0x03C07558 CBNZ W9, 0x3C07570
	0x03C0755C ADRP X0, 0x4EC000
	0x03C07560 LDR X0, [X0 + 0xA28]
	0x03C07564 BL 0x1C16CF4
	0x03C07568 MOVZ W8, 0x1
	0x03C0756C STRB W8, [X23 + 0xFA8]
	0x03C07570 LDR X0, [X22]
	0x03C07574 LDR W8, [X0 + 0xE0]
	0x03C07578 CBNZ W8, 0x3C07584
	0x03C0757C BL 0x1C16DFC
	0x03C07580 LDR X0, [X22]
	0x03C07584 LDR X8, [X0 + 0xB8]
	0x03C07588 LDR X22, [X8 + 0x8]
	0x03C0758C CBZ X22, 0x3C07674
	0x03C07590 ADRP X0, 0x4F4000
	0x03C07594 LDR X0, [X0 + 0x9B8]
	0x03C07598 BL 0x1C16D08
	0x03C0759C LDR X8, [X22]
	0x03C075A0 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DE000
	006 Move X20, 0x4ED000
	007 Move W8, [X21+428]
	008 Move X20, [X20+2600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4ED000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x4F5000
	018 Move X0, [X0+2488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+428], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x7D2000
	028 Move W8, [X21+4008]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x4ED000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+4008], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X20, [X8+8]
	044 Compare X20, 0
	045 JumpIfEqual {76}
	046 Move X10, 0x4F5000
	047 Move X8, [X20]
	048 Move X10, [X10+2488]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 2
	060 Move X0, X20
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 2
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X4, [X0]
	067 Move X3, [X0+8]
	068 Move X0, X20
	069 Move X2, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move W1, W31
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 CallNoReturn X4
	076 Call 0x1C17F20

Method: System.Void LogError(System.Object message, UnityEngine.Object context)

Disassembly:
	0x03C075A4 LDRH W9, [X8 + 0x12E]
	0x03C075A8 CBZ X9, 0x3C075CC
	0x03C075AC LDR X10, [X8 + 0xB0]
	0x03C075B0 ADD X10, X10, 0x8
	0x03C075B4 LDUR X11, [X10 - 0x8]
	0x03C075B8 CMP X11, X1
	0x03C075BC B.EQ 0x3C075DC
	0x03C075C0 SUBS X9, X9, 0x1
	0x03C075C4 ADD X10, X10, 0x10
	0x03C075C8 B.NE 0x3C075B4
	0x03C075CC MOV X0, X22
	0x03C075D0 MOV W2, W31
	0x03C075D4 BL 0x1C5C788
	0x03C075D8 B 0x3C075E8
	0x03C075DC LDRSW X9, [X10]
	0x03C075E0 ADD X8, X8, X9, 0x4, LSL
	0x03C075E4 ADD X0, X8, 0x138
	0x03C075E8 LDP X8, X1, [X0]
	0x03C075EC MOV X0, X22
	0x03C075F0 BLR X8
	0x03C075F4 CBZ X0, 0x3C07674
	0x03C075F8 MOV X1, X31
	0x03C075FC BL 0x33BE520
	0x03C07600 MOV X22, X0
	0x03C07604 ADRP X0, 0x557000
	0x03C07608 LDR X0, [X0 + 0xB98]
	0x03C0760C BL 0x1C16D08
	0x03C07610 MOV X1, X22
	0x03C07614 MOV X2, X21
	0x03C07618 MOV X3, X31
	0x03C0761C BL 0x3227BD4
	0x03C07620 CBZ X20, 0x3C07674
	0x03C07624 MOV X21, X0
	0x03C07628 ADRP X0, 0x4F4000
	0x03C0762C LDR X0, [X0 + 0x9B8]
	0x03C07630 BL 0x1C16D08
	0x03C07634 LDR X8, [X20]
	0x03C07638 MOV X1, X0
	0x03C0763C LDRH W9, [X8 + 0x12E]
	0x03C07640 CBZ X9, 0x3C07664
	0x03C07644 LDR X10, [X8 + 0xB0]
	0x03C07648 ADD X10, X10, 0x8
	0x03C0764C LDUR X11, [X10 - 0x8]
	0x03C07650 CMP X11, X1
	0x03C07654 B.EQ 0x3C07678
	0x03C07658 SUBS X9, X9, 0x1
	0x03C0765C ADD X10, X10, 0x10
	0x03C07660 B.NE 0x3C0764C
	0x03C07664 MOVZ W2, 0x4
	0x03C07668 MOV X0, X20
	0x03C0766C BL 0x1C5C788
	0x03C07670 B 0x3C07688
	0x03C07674 BL 0x1C16F20
	0x03C07678 LDR W9, [X10]
	0x03C0767C ADD W9, W9, 0x4
	0x03C07680 ADD X8, X8, W9, 0x4, SXTW
	0x03C07684 ADD X0, X8, 0x138
	0x03C07688 LDP X8, X3, [X0]
	0x03C0768C MOV X0, X20
	0x03C07690 MOV X1, X21
	0x03C07694 MOV X2, X19
	0x03C07698 BLR X8
	0x03C0769C MOV W0, W31
	0x03C076A0 LDP X20, X19, [X31 + 0x20]
	0x03C076A4 LDP X22, X21, [X31 + 0x10]
	0x03C076A8 LDP X30, X23, [X31], #0x30
	0x03C076AC RET
	0x03C076B0 MOVZ W0, 0x8
	0x03C076B4 BL 0x3EB1AF0
	0x03C076B8 LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7DE000
	007 Move X21, 0x4ED000
	008 Move W8, [X22+429]
	009 Move X21, [X21+2600]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4ED000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F5000
	020 Move X0, [X0+2488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+429], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x7D2000
	030 Move W8, [X22+4008]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x4ED000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+4008], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X21, [X8+8]
	046 Compare X21, 0
	047 JumpIfEqual {80}
	048 Move X10, 0x4F5000
	049 Move X8, [X21]
	050 Move X10, [X10+2488]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 3
	062 Move X0, X21
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 3
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X5, [X0]
	069 Move X4, [X0+8]
	070 Move X0, X21
	071 Move X2, X20
	072 Move X3, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move W1, W31
	078 Move X30, [X31+48]
	079 CallNoReturn X5
	080 Call 0x1C17F20

Method: System.Void LogErrorFormat(System.String format, System.Object[] args)

Disassembly:
	0x03C076BC STR X8, [X0]
	0x03C076C0 ADRP X1, 0x2AD000
	0x03C076C4 ADD X1, X1, 0xE58
	0x03C076C8 MOV X2, X31
	0x03C076CC BL 0x3EB1B00
	0x03C076D0 MOV X20, X0
	0x03C076D4 BL 0x3EB1AE0
	0x03C076D8 MOV X0, X20
	0x03C076DC BL 0x1D2C690
	0x03C076E0 BL 0x1990590
	0x03C076E4 STR X30, [X31 - 0x30]!
	0x03C076E8 STP X22, X21, [X31 + 0x10]
	0x03C076EC STP X20, X19, [X31 + 0x20]
	0x03C076F0 ADRP X19, 0x7DD000
	0x03C076F4 ADRP X20, 0x4EC000
	0x03C076F8 LDRB W8, [X19 + 0x1C9]
	0x03C076FC LDR X20, [X20 + 0xA28]
	0x03C07700 TBNZ X8, 0x0, 0x3C07730
	0x03C07704 ADRP X0, 0x557000
	0x03C07708 LDR X0, [X0 + 0xB90]
	0x03C0770C BL 0x1C16CF4
	0x03C07710 ADRP X0, 0x4EC000
	0x03C07714 LDR X0, [X0 + 0xA28]
	0x03C07718 BL 0x1C16CF4
	0x03C0771C ADRP X0, 0x4F4000
	0x03C07720 LDR X0, [X0 + 0x9B8]
	0x03C07724 BL 0x1C16CF4
	0x03C07728 MOVZ W8, 0x1
	0x03C0772C STRB W8, [X19 + 0x1C9]
	0x03C07730 LDR X0, [X20]
	0x03C07734 LDR W8, [X0 + 0xE0]
	0x03C07738 CBNZ W8, 0x3C07740
	0x03C0773C BL 0x1C16DFC
	0x03C07740 ADRP X21, 0x7D1000
	0x03C07744 LDRB W8, [X21 + 0xFA8]
	0x03C07748 CBNZ W8, 0x3C07760
	0x03C0774C ADRP X0, 0x4EC000
	0x03C07750 LDR X0, [X0 + 0xA28]
	0x03C07754 BL 0x1C16CF4
	0x03C07758 MOVZ W8, 0x1
	0x03C0775C STRB W8, [X21 + 0xFA8]
	0x03C07760 LDR X0, [X20]
	0x03C07764 LDR W8, [X0 + 0xE0]
	0x03C07768 CBNZ W8, 0x3C07774
	0x03C0776C BL 0x1C16DFC
	0x03C07770 LDR X0, [X20]
	0x03C07774 LDR X8, [X0 + 0xB8]
	0x03C07778 LDR X19, [X8 + 0x8]
	0x03C0777C CBZ X19, 0x3C07904
	0x03C07780 ADRP X22, 0x4F4000
	0x03C07784 LDR X8, [X19]
	0x03C07788 LDR X22, [X22 + 0x9B8]
	0x03C0778C LDRH W9, [X8 + 0x12E]
	0x03C07790 LDR X1, [X22]
	0x03C07794 CBZ X9, 0x3C077B8
	0x03C07798 LDR X10, [X8 + 0xB0]
	0x03C0779C ADD X10, X10, 0x8
	0x03C077A0 LDUR X11, [X10 - 0x8]
	0x03C077A4 CMP X11, X1
	0x03C077A8 B.EQ 0x3C077C8
	0x03C077AC SUBS X9, X9, 0x1
	0x03C077B0 ADD X10, X10, 0x10
	0x03C077B4 B.NE 0x3C077A0
	0x03C077B8 MOV X0, X19
	0x03C077BC MOV W2, W31
	0x03C077C0 BL 0x1C5C788
	0x03C077C4 B 0x3C077D4
	0x03C077C8 LDRSW X9, [X10]
	0x03C077CC ADD X8, X8, X9, 0x4, LSL
	0x03C077D0 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7DE000
	007 Move X21, 0x4ED000
	008 Move W8, [X22+430]
	009 Move X21, [X21+2600]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4ED000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F5000
	020 Move X0, [X0+2488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+430], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x7D2000
	030 Move W8, [X22+4008]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x4ED000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+4008], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X21, [X8+8]
	046 Compare X21, 0
	047 JumpIfEqual {80}
	048 Move X10, 0x4F5000
	049 Move X8, [X21]
	050 Move X10, [X10+2488]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 5
	062 Move X0, X21
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 5
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X5, [X0]
	069 Move X4, [X0+8]
	070 Move X0, X21
	071 Move X2, X20
	072 Move X3, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move W1, W31
	078 Move X30, [X31+48]
	079 CallNoReturn X5
	080 Call 0x1C17F20

Method: System.Void LogErrorFormat(UnityEngine.Object context, System.String format, System.Object[] args)

Disassembly:
	0x03C077D4 LDP X8, X1, [X0]
	0x03C077D8 MOV X0, X19
	0x03C077DC BLR X8
	0x03C077E0 CBZ X0, 0x3C07800
	0x03C077E4 ADRP X8, 0x557000
	0x03C077E8 LDR X8, [X8 + 0xB90]
	0x03C077EC LDR X9, [X0]
	0x03C077F0 LDR X8, [X8]
	0x03C077F4 CMP X9, X8
	0x03C077F8 CSET W19, NE
	0x03C077FC B 0x3C07804
	0x03C07800 MOVZ W19, 0x1
	0x03C07804 LDR X0, [X20]
	0x03C07808 LDR W8, [X0 + 0xE0]
	0x03C0780C CBZ W8, 0x3C07858
	0x03C07810 TBZ X19, 0x0, 0x3C07860
	0x03C07814 LDR X8, [X20]
	0x03C07818 LDR X8, [X8 + 0xB8]
	0x03C0781C LDR X19, [X8]
	0x03C07820 CBZ X19, 0x3C07904
	0x03C07824 LDR X8, [X19]
	0x03C07828 LDR X1, [X22]
	0x03C0782C LDRH W9, [X8 + 0x12E]
	0x03C07830 CBZ X9, 0x3C078CC
	0x03C07834 LDR X10, [X8 + 0xB0]
	0x03C07838 ADD X10, X10, 0x8
	0x03C0783C LDUR X11, [X10 - 0x8]
	0x03C07840 CMP X11, X1
	0x03C07844 B.EQ 0x3C078DC
	0x03C07848 SUBS X9, X9, 0x1
	0x03C0784C ADD X10, X10, 0x10
	0x03C07850 B.NE 0x3C0783C
	0x03C07854 B 0x3C078CC
	0x03C07858 BL 0x1C16DFC
	0x03C0785C TBNZ X19, 0x0, 0x3C07814
	0x03C07860 LDRB W8, [X21 + 0xFA8]
	0x03C07864 CBNZ W8, 0x3C0787C
	0x03C07868 ADRP X0, 0x4EC000
	0x03C0786C LDR X0, [X0 + 0xA28]
	0x03C07870 BL 0x1C16CF4
	0x03C07874 MOVZ W8, 0x1
	0x03C07878 STRB W8, [X21 + 0xFA8]
	0x03C0787C LDR X0, [X20]
	0x03C07880 LDR W8, [X0 + 0xE0]
	0x03C07884 CBNZ W8, 0x3C07890
	0x03C07888 BL 0x1C16DFC
	0x03C0788C LDR X0, [X20]
	0x03C07890 LDR X8, [X0 + 0xB8]
	0x03C07894 LDR X19, [X8 + 0x8]
	0x03C07898 CBZ X19, 0x3C07904
	0x03C0789C LDR X8, [X19]
	0x03C078A0 LDR X1, [X22]
	0x03C078A4 LDRH W9, [X8 + 0x12E]
	0x03C078A8 CBZ X9, 0x3C078CC
	0x03C078AC LDR X10, [X8 + 0xB0]
	0x03C078B0 ADD X10, X10, 0x8
	0x03C078B4 LDUR X11, [X10 - 0x8]
	0x03C078B8 CMP X11, X1
	0x03C078BC B.EQ 0x3C078DC
	0x03C078C0 SUBS X9, X9, 0x1
	0x03C078C4 ADD X10, X10, 0x10
	0x03C078C8 B.NE 0x3C078B4
	0x03C078CC MOVZ W2, 0x1
	0x03C078D0 MOV X0, X19
	0x03C078D4 BL 0x1C5C788
	0x03C078D8 B 0x3C078EC
	0x03C078DC LDR W9, [X10]
	0x03C078E0 ADD W9, W9, 0x1
	0x03C078E4 ADD X8, X8, W9, 0x4, SXTW
	0x03C078E8 ADD X0, X8, 0x138
	0x03C078EC LDP X2, X1, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7DE000
	008 Move X22, 0x4ED000
	009 Move W8, [X23+431]
	010 Move X22, [X22+2600]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4ED000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x558000
	022 Move X0, [X0+2832]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+431], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X23, 0x7D2000
	032 Move W8, [X23+4008]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x4ED000
	036 Move X0, [X0+2600]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+4008], W8
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Move X8, [X0+184]
	047 Move X22, [X8+8]
	048 Compare X22, 0
	049 JumpIfEqual {83}
	050 Move X10, 0x558000
	051 Move X8, [X22]
	052 Move X10, [X10+2832]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X22
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X6, [X0]
	070 Move X5, [X0+8]
	071 Move X0, X22
	072 Move X2, X21
	073 Move X3, X20
	074 Move X4, X19
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move W1, W31
	080 Move X30, [X31+48]
	081 Move X23, [X31+56]
	082 CallNoReturn X6
	083 Call 0x1C17F20

Method: System.Void LogException(System.Exception exception)

Disassembly:
	0x03C03C84 STP X20, X19, [X31 + 0x10]
	0x03C03C88 ADRP X21, 0x7E0000
	0x03C03C8C LDR X2, [X21 + 0xFC8]
	0x03C03C90 MOV W19, W1
	0x03C03C94 MOV X20, X0
	0x03C03C98 CBNZ X2, 0x3C03CB0
	0x03C03C9C ADRP X0, 0xFFFFFFFFFCEFF000
	0x03C03CA0 ADD X0, X0, 0xCE8
	0x03C03CA4 BL 0x1C16CB8
	0x03C03CA8 MOV X2, X0
	0x03C03CAC STR X0, [X21 + 0xFC8]
	0x03C03CB0 MOV X0, X20
	0x03C03CB4 MOV W1, W19
	0x03C03CB8 LDP X20, X19, [X31 + 0x10]
	0x03C03CBC LDP X30, X21, [X31], #0x20
	0x03C03CC0 BR X2
	0x03C03CC4 STR X30, [X31 - 0x20]!
	0x03C03CC8 STP X20, X19, [X31 + 0x10]
	0x03C03CCC ADRP X20, 0x7E0000
	0x03C03CD0 LDR X1, [X20 + 0xFD0]
	0x03C03CD4 MOV X19, X0
	0x03C03CD8 CBNZ X1, 0x3C03CF0
	0x03C03CDC ADRP X0, 0xFFFFFFFFFCF1F000
	0x03C03CE0 ADD X0, X0, 0xC60
	0x03C03CE4 BL 0x1C16CB8
	0x03C03CE8 MOV X1, X0
	0x03C03CEC STR X0, [X20 + 0xFD0]
	0x03C03CF0 MOV X0, X19
	0x03C03CF4 LDP X20, X19, [X31 + 0x10]
	0x03C03CF8 LDR X30, [X31], #0x20
	0x03C03CFC BR X1
	0x03C03D00 STP X30, X21, [X31 - 0x20]!
	0x03C03D04 STP X20, X19, [X31 + 0x10]
	0x03C03D08 ADRP X21, 0x7E0000
	0x03C03D0C LDR X2, [X21 + 0xFD8]
	0x03C03D10 MOV W19, W1
	0x03C03D14 MOV X20, X0
	0x03C03D18 CBNZ X2, 0x3C03D30
	0x03C03D1C ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C03D20 ADD X0, X0, 0xDF1
	0x03C03D24 BL 0x1C16CB8
	0x03C03D28 MOV X2, X0
	0x03C03D2C STR X0, [X21 + 0xFD8]
	0x03C03D30 MOV X0, X20
	0x03C03D34 MOV W1, W19
	0x03C03D38 LDP X20, X19, [X31 + 0x10]
	0x03C03D3C LDP X30, X21, [X31], #0x20
	0x03C03D40 BR X2
	0x03C03D44 STR X30, [X31 - 0x30]!
	0x03C03D48 STP X22, X21, [X31 + 0x10]
	0x03C03D4C STP X20, X19, [X31 + 0x20]
	0x03C03D50 ADRP X22, 0x7E0000
	0x03C03D54 LDR X3, [X22 + 0xFE0]
	0x03C03D58 MOV X19, X2
	0x03C03D5C MOV X20, X1
	0x03C03D60 MOV X21, X0
	0x03C03D64 CBNZ X3, 0x3C03D7C
	0x03C03D68 ADRP X0, 0xFFFFFFFFFCF23000
	0x03C03D6C ADD X0, X0, 0xA48
	0x03C03D70 BL 0x1C16CB8
	0x03C03D74 MOV X3, X0
	0x03C03D78 STR X0, [X22 + 0xFE0]
	0x03C03D7C MOV X0, X21
	0x03C03D80 MOV X1, X20
	0x03C03D84 MOV X2, X19
	0x03C03D88 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7E2000
	006 Move X20, 0x4F1000
	007 Move W8, [X21+432]
	008 Move X20, [X20+2600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4F1000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x55C000
	018 Move X0, [X0+2832]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+432], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x7D6000
	028 Move W8, [X21+4008]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x4F1000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+4008], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X20, [X8+8]
	044 Compare X20, 0
	045 JumpIfEqual {76}
	046 Move X10, 0x55C000
	047 Move X8, [X20]
	048 Move X10, [X10+2832]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 1
	060 Move X0, X20
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 1
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X4, [X0]
	067 Move X3, [X0+8]
	068 Move X0, X20
	069 Move X1, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X2, X31
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 CallNoReturn X4
	076 Call 0x1C17F20

Method: System.Void LogException(System.Exception exception, UnityEngine.Object context)

Disassembly:
	0x03C078F0 MOV X0, X19
	0x03C078F4 LDP X20, X19, [X31 + 0x20]
	0x03C078F8 LDP X22, X21, [X31 + 0x10]
	0x03C078FC LDR X30, [X31], #0x30
	0x03C07900 BR X2
	0x03C07904 BL 0x1C16F20
	0x03C07908 STP X30, X23, [X31 - 0x30]!
	0x03C0790C STP X22, X21, [X31 + 0x10]
	0x03C07910 STP X20, X19, [X31 + 0x20]
	0x03C07914 ADRP X19, 0x7DD000
	0x03C07918 ADRP X23, 0x557000
	0x03C0791C ADRP X22, 0x557000
	0x03C07920 ADRP X21, 0x4EC000
	0x03C07924 LDRB W8, [X19 + 0x1CA]
	0x03C07928 LDR X23, [X23 + 0xB90]
	0x03C0792C LDR X22, [X22 + 0xBA0]
	0x03C07930 LDR X21, [X21 + 0xA28]
	0x03C07934 TBNZ X8, 0x0, 0x3C07964
	0x03C07938 ADRP X0, 0x557000
	0x03C0793C LDR X0, [X0 + 0xB90]
	0x03C07940 BL 0x1C16CF4
	0x03C07944 ADRP X0, 0x4EC000
	0x03C07948 LDR X0, [X0 + 0xA28]
	0x03C0794C BL 0x1C16CF4
	0x03C07950 ADRP X0, 0x557000
	0x03C07954 LDR X0, [X0 + 0xBA0]
	0x03C07958 BL 0x1C16CF4
	0x03C0795C MOVZ W8, 0x1
	0x03C07960 STRB W8, [X19 + 0x1CA]
	0x03C07964 LDR X0, [X23]
	0x03C07968 BL 0x1C16F10
	0x03C0796C MOV X1, X31
	0x03C07970 MOV X19, X0
	0x03C07974 BL 0x33BDD8C
	0x03C07978 LDR X0, [X22]
	0x03C0797C BL 0x1C16F10
	0x03C07980 MOV X1, X19
	0x03C07984 MOV X2, X31
	0x03C07988 MOV X20, X0
	0x03C0798C BL 0x3C24738
	0x03C07990 LDR X8, [X21]
	0x03C07994 LDR X8, [X8 + 0xB8]
	0x03C07998 STR X20, [X8]
	0x03C0799C LDR X0, [X23]
	0x03C079A0 BL 0x1C16F10
	0x03C079A4 MOV X1, X31
	0x03C079A8 MOV X19, X0
	0x03C079AC BL 0x33BDD8C
	0x03C079B0 LDR X0, [X22]
	0x03C079B4 BL 0x1C16F10
	0x03C079B8 MOV X1, X19
	0x03C079BC MOV X2, X31
	0x03C079C0 MOV X20, X0
	0x03C079C4 BL 0x3C24738
	0x03C079C8 LDR X8, [X21]
	0x03C079CC LDP X22, X21, [X31 + 0x10]
	0x03C079D0 LDR X8, [X8 + 0xB8]
	0x03C079D4 STR X20, [X8 + 0x8]
	0x03C079D8 LDP X20, X19, [X31 + 0x20]
	0x03C079DC LDP X30, X23, [X31], #0x30
	0x03C079E0 RET
	0x03C079E4 SUB X31, X31, 0x90
	0x03C079E8 STP X29, X30, [X31 + 0x30]
	0x03C079EC STP X28, X27, [X31 + 0x40]
	0x03C079F0 STP X26, X25, [X31 + 0x50]
	0x03C079F4 STP X24, X23, [X31 + 0x60]
	0x03C079F8 STP X22, X21, [X31 + 0x70]
	0x03C079FC STP X20, X19, [X31 + 0x80]
	0x03C07A00 STR W3, [X31 + 0x14]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7DE000
	007 Move X21, 0x4ED000
	008 Move W8, [X22+433]
	009 Move X21, [X21+2600]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4ED000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x558000
	020 Move X0, [X0+2832]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+433], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x7D2000
	030 Move W8, [X22+4008]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x4ED000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+4008], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X21, [X8+8]
	046 Compare X21, 0
	047 JumpIfEqual {79}
	048 Move X10, 0x558000
	049 Move X8, [X21]
	050 Move X10, [X10+2832]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 1
	062 Move X0, X21
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 1
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X4, [X0]
	069 Move X3, [X0+8]
	070 Move X0, X21
	071 Move X1, X20
	072 Move X2, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 CallNoReturn X4
	079 Call 0x1C17F20

Method: System.Void LogWarning(System.Object message)

Disassembly:
	0x03C07A04 STR X1, [X31 + 0x8]
	0x03C07A08 ADRP X22, 0x7DD000
	0x03C07A0C STR W2, [X31 + 0x2C]
	0x03C07A10 ADRP X20, 0x520000
	0x03C07A14 ADRP X19, 0x520000
	0x03C07A18 LDRB W8, [X22 + 0x1D8]
	0x03C07A1C LDR X20, [X20 + 0xC0]
	0x03C07A20 LDR X19, [X19 + 0xB0]
	0x03C07A24 MOV X21, X0
	0x03C07A28 TBNZ X8, 0x0, 0x3C07AF4
	0x03C07A2C ADRP X0, 0x4EE000
	0x03C07A30 LDR X0, [X0 + 0xC48]
	0x03C07A34 BL 0x1C16CF4
	0x03C07A38 ADRP X0, 0x557000
	0x03C07A3C LDR X0, [X0 + 0xBA8]
	0x03C07A40 BL 0x1C16CF4
	0x03C07A44 ADRP X0, 0x514000
	0x03C07A48 LDR X0, [X0 + 0xA68]
	0x03C07A4C BL 0x1C16CF4
	0x03C07A50 ADRP X0, 0x557000
	0x03C07A54 LDR X0, [X0 + 0xBB0]
	0x03C07A58 BL 0x1C16CF4
	0x03C07A5C ADRP X0, 0x557000
	0x03C07A60 LDR X0, [X0 + 0xBB8]
	0x03C07A64 BL 0x1C16CF4
	0x03C07A68 ADRP X0, 0x519000
	0x03C07A6C LDR X0, [X0 + 0x470]
	0x03C07A70 BL 0x1C16CF4
	0x03C07A74 ADRP X0, 0x557000
	0x03C07A78 LDR X0, [X0 + 0xBC0]
	0x03C07A7C BL 0x1C16CF4
	0x03C07A80 ADRP X0, 0x557000
	0x03C07A84 LDR X0, [X0 + 0xBC8]
	0x03C07A88 BL 0x1C16CF4
	0x03C07A8C ADRP X0, 0x557000
	0x03C07A90 LDR X0, [X0 + 0xBD0]
	0x03C07A94 BL 0x1C16CF4
	0x03C07A98 ADRP X0, 0x557000
	0x03C07A9C LDR X0, [X0 + 0xBD8]
	0x03C07AA0 BL 0x1C16CF4
	0x03C07AA4 ADRP X0, 0x520000
	0x03C07AA8 LDR X0, [X0 + 0xA0]
	0x03C07AAC BL 0x1C16CF4
	0x03C07AB0 ADRP X0, 0x520000
	0x03C07AB4 LDR X0, [X0 + 0xA8]
	0x03C07AB8 BL 0x1C16CF4
	0x03C07ABC ADRP X0, 0x520000
	0x03C07AC0 LDR X0, [X0 + 0xB0]
	0x03C07AC4 BL 0x1C16CF4
	0x03C07AC8 ADRP X0, 0x520000
	0x03C07ACC LDR X0, [X0 + 0xB8]
	0x03C07AD0 BL 0x1C16CF4
	0x03C07AD4 ADRP X0, 0x520000
	0x03C07AD8 LDR X0, [X0 + 0xC0]
	0x03C07ADC BL 0x1C16CF4
	0x03C07AE0 ADRP X0, 0x4ED000
	0x03C07AE4 LDR X0, [X0 + 0xA08]
	0x03C07AE8 BL 0x1C16CF4
	0x03C07AEC MOVZ W8, 0x1
	0x03C07AF0 STRB W8, [X22 + 0x1D8]
	0x03C07AF4 LDR X0, [X20]
	0x03C07AF8 STP X31, X31, [X31 + 0x18]
	0x03C07AFC BL 0x1C16F10
	0x03C07B00 LDR X1, [X19]
	0x03C07B04 MOV X22, X0
	0x03C07B08 BL 0x2601D04

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DE000
	006 Move X20, 0x4ED000
	007 Move W8, [X21+434]
	008 Move X20, [X20+2600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4ED000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x4F5000
	018 Move X0, [X0+2488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+434], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x7D2000
	028 Move W8, [X21+4008]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x4ED000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+4008], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X20, [X8+8]
	044 Compare X20, 0
	045 JumpIfEqual {76}
	046 Move X10, 0x4F5000
	047 Move X8, [X20]
	048 Move X10, [X10+2488]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 2
	060 Move X0, X20
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 2
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X4, [X0]
	067 Move X3, [X0+8]
	068 Move X0, X20
	069 Move X2, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move W1, 2
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 CallNoReturn X4
	076 Call 0x1C17F20

Method: System.Void LogWarning(System.Object message, UnityEngine.Object context)

Disassembly:
	0x03C07B0C CBZ X21, 0x3C07EAC
	0x03C07B10 LDR X8, [X21 + 0x18]
	0x03C07B14 ADRP X27, 0x514000
	0x03C07B18 LDR X27, [X27 + 0xA68]
	0x03C07B1C CMP W8, 0x1
	0x03C07B20 B.LT 0x3C07E28
	0x03C07B24 ADRP X19, 0x557000
	0x03C07B28 ADRP X20, 0x557000
	0x03C07B2C ADRP X28, 0x520000
	0x03C07B30 LDR X19, [X19 + 0xBD8]
	0x03C07B34 LDR X20, [X20 + 0xBB0]
	0x03C07B38 LDR X28, [X28 + 0xA8]
	0x03C07B3C MOV X29, X31
	0x03C07B40 AND X8, X8, 0x0
	0x03C07B44 CMP X29, W8, UXTW
	0x03C07B48 B.CS 0x3C07EB0
	0x03C07B4C LDR X0, [X27]
	0x03C07B50 ADD X8, X21, X29, 0x3, LSL
	0x03C07B54 LDR X23, [X8 + 0x20]
	0x03C07B58 LDR W9, [X0 + 0xE0]
	0x03C07B5C CBNZ W9, 0x3C07B64
	0x03C07B60 BL 0x1C16DFC
	0x03C07B64 MOV X0, X23
	0x03C07B68 BL 0x3C07EB4
	0x03C07B6C LDR X8, [X27]
	0x03C07B70 MOV W24, W0
	0x03C07B74 LDR W9, [X8 + 0xE0]
	0x03C07B78 CBZ W9, 0x3C07CE0
	0x03C07B7C TBZ X24, 0x0, 0x3C07CEC
	0x03C07B80 MOV X0, X23
	0x03C07B84 BL 0x3C07F34
	0x03C07B88 ADRP X8, 0x557000
	0x03C07B8C LDR X8, [X8 + 0xBD0]
	0x03C07B90 MOV X23, X0
	0x03C07B94 LDR X8, [X8]
	0x03C07B98 MOV X0, X8
	0x03C07B9C BL 0x1C16F10
	0x03C07BA0 ADRP X8, 0x557000
	0x03C07BA4 LDR X8, [X8 + 0xBC0]
	0x03C07BA8 MOV X24, X0
	0x03C07BAC LDR X1, [X8]
	0x03C07BB0 BL 0x2FB1714
	0x03C07BB4 CBZ X22, 0x3C07EAC
	0x03C07BB8 LDR W8, [X22 + 0x18]
	0x03C07BBC MOVZ W26, 0x1
	0x03C07BC0 CMP W8, 0x1
	0x03C07BC4 B.LT 0x3C07CBC
	0x03C07BC8 LDR X1, [X19]
	0x03C07BCC MOV X0, X22
	0x03C07BD0 BL 0x260227C
	0x03C07BD4 LDR X8, [X27]
	0x03C07BD8 MOV X25, X0
	0x03C07BDC LDR W9, [X8 + 0xE0]
	0x03C07BE0 CBNZ W9, 0x3C07BEC
	0x03C07BE4 MOV X0, X8
	0x03C07BE8 BL 0x1C16DFC
	0x03C07BEC MOV X0, X25
	0x03C07BF0 BL 0x3C07FD4
	0x03C07BF4 TBNZ X0, 0x0, 0x3C07CBC
	0x03C07BF8 CBZ X24, 0x3C07EAC
	0x03C07BFC CBZ X23, 0x3C07EAC
	0x03C07C00 LDR W8, [X24 + 0x18]
	0x03C07C04 LDR W9, [X23 + 0x1C]
	0x03C07C08 CMP W8, W9
	0x03C07C0C B.GE 0x3C07D60
	0x03C07C10 ADRP X8, 0x520000
	0x03C07C14 LDR X8, [X8 + 0xA0]
	0x03C07C18 MOV X0, X22
	0x03C07C1C LDR X1, [X8]
	0x03C07C20 BL 0x26022C0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7DE000
	007 Move X21, 0x4ED000
	008 Move W8, [X22+435]
	009 Move X21, [X21+2600]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4ED000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F5000
	020 Move X0, [X0+2488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+435], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x7D2000
	030 Move W8, [X22+4008]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x4ED000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+4008], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X21, [X8+8]
	046 Compare X21, 0
	047 JumpIfEqual {80}
	048 Move X10, 0x4F5000
	049 Move X8, [X21]
	050 Move X10, [X10+2488]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 3
	062 Move X0, X21
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 3
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X5, [X0]
	069 Move X4, [X0+8]
	070 Move X0, X21
	071 Move X2, X20
	072 Move X3, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move W1, 2
	078 Move X30, [X31+48]
	079 CallNoReturn X5
	080 Call 0x1C17F20

Method: System.Void LogWarningFormat(System.String format, System.Object[] args)

Disassembly:
	0x03C07C24 LDR X8, [X27]
	0x03C07C28 MOV X25, X0
	0x03C07C2C LDR W9, [X8 + 0xE0]
	0x03C07C30 CBNZ W9, 0x3C07C3C
	0x03C07C34 MOV X0, X8
	0x03C07C38 BL 0x1C16DFC
	0x03C07C3C ADRP X8, 0x557000
	0x03C07C40 LDR X8, [X8 + 0xBA8]
	0x03C07C44 ADD X1, X31, 0x20
	0x03C07C48 MOV X0, X25
	0x03C07C4C LDR X2, [X8]
	0x03C07C50 BL 0x21DFFC0
	0x03C07C54 LDR W10, [X24 + 0x1C]
	0x03C07C58 LDR V0, [X31 + 0x20]
	0x03C07C5C LDR X8, [X24 + 0x10]
	0x03C07C60 LDR X9, [X20]
	0x03C07C64 ADD W10, W10, 0x1
	0x03C07C68 STR W10, [X24 + 0x1C]
	0x03C07C6C CBZ X8, 0x3C07EAC
	0x03C07C70 LDRSW X10, [X24 + 0x18]
	0x03C07C74 LDR W11, [X8 + 0x18]
	0x03C07C78 MOV W25, W0
	0x03C07C7C CMP W10, W11
	0x03C07C80 B.CS 0x3C07C98
	0x03C07C84 ADD W9, W10, 0x1
	0x03C07C88 ADD X8, X8, X10, 0x3, LSL
	0x03C07C8C STR W9, [X24 + 0x18]
	0x03C07C90 STR D0, [X8 + 0x20]
	0x03C07C94 B 0x3C07CAC
	0x03C07C98 LDR X8, [X9 + 0x20]
	0x03C07C9C MOV X0, X24
	0x03C07CA0 LDR X8, [X8 + 0xC0]
	0x03C07CA4 LDR X1, [X8 + 0x70]
	0x03C07CA8 BL 0x2FB1F14
	0x03C07CAC LDR W8, [X22 + 0x18]
	0x03C07CB0 AND W26, W26, W25, 0x0
	0x03C07CB4 CMP W8, 0x1
	0x03C07CB8 B.GE 0x3C07BC8
	0x03C07CBC CBZ X24, 0x3C07EAC
	0x03C07CC0 ADRP X8, 0x557000
	0x03C07CC4 LDR X8, [X8 + 0xBB8]
	0x03C07CC8 MOV X0, X24
	0x03C07CCC LDR X1, [X8]
	0x03C07CD0 BL 0x2FB3AB8
	0x03C07CD4 TBZ X26, 0x0, 0x3C07E88
	0x03C07CD8 CBNZ X23, 0x3C07D78
	0x03C07CDC B 0x3C07EAC
	0x03C07CE0 MOV X0, X8
	0x03C07CE4 BL 0x1C16DFC
	0x03C07CE8 TBNZ X24, 0x0, 0x3C07B80
	0x03C07CEC MOV X0, X23
	0x03C07CF0 BL 0x3C083D4
	0x03C07CF4 TBZ X0, 0x0, 0x3C07D58
	0x03C07CF8 ADRP X8, 0x4ED000
	0x03C07CFC LDR X8, [X8 + 0xA08]
	0x03C07D00 MOV X0, X23
	0x03C07D04 MOV X2, X31
	0x03C07D08 LDR X1, [X8]
	0x03C07D0C BL 0x321BA08
	0x03C07D10 TBZ X0, 0x0, 0x3C07D24
	0x03C07D14 ADD X0, X31, 0x2C
	0x03C07D18 MOV X1, X31
	0x03C07D1C BL 0x337B6E0
	0x03C07D20 B 0x3C07D54
	0x03C07D24 ADRP X8, 0x4EE000
	0x03C07D28 LDR X8, [X8 + 0xC48]
	0x03C07D2C LDR X0, [X8]
	0x03C07D30 LDR W8, [X0 + 0xE0]
	0x03C07D34 CBNZ W8, 0x3C07D3C
	0x03C07D38 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7DE000
	007 Move X21, 0x4ED000
	008 Move W8, [X22+436]
	009 Move X21, [X21+2600]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4ED000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F5000
	020 Move X0, [X0+2488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+436], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x7D2000
	030 Move W8, [X22+4008]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x4ED000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+4008], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X21, [X8+8]
	046 Compare X21, 0
	047 JumpIfEqual {80}
	048 Move X10, 0x4F5000
	049 Move X8, [X21]
	050 Move X10, [X10+2488]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 5
	062 Move X0, X21
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 5
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X5, [X0]
	069 Move X4, [X0+8]
	070 Move X0, X21
	071 Move X2, X20
	072 Move X3, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move W1, 2
	078 Move X30, [X31+48]
	079 CallNoReturn X5
	080 Call 0x1C17F20

Method: System.Void LogWarningFormat(UnityEngine.Object context, System.String format, System.Object[] args)

Disassembly:
	0x03C07D3C MOV X0, X31
	0x03C07D40 BL 0x3338524
	0x03C07D44 MOV X1, X0
	0x03C07D48 LDR X0, [X31 + 0x8]
	0x03C07D4C MOV X2, X31
	0x03C07D50 BL 0x33662E0
	0x03C07D54 MOV X23, X0
	0x03C07D58 CBNZ X22, 0x3C07E08
	0x03C07D5C B 0x3C07EAC
	0x03C07D60 ADRP X8, 0x557000
	0x03C07D64 LDR X8, [X8 + 0xBB8]
	0x03C07D68 MOV X0, X24
	0x03C07D6C LDR X1, [X8]
	0x03C07D70 BL 0x2FB3AB8
	0x03C07D74 TBZ X26, 0x0, 0x3C07E88
	0x03C07D78 LDR W8, [X24 + 0x18]
	0x03C07D7C LDR W9, [X23 + 0x1C]
	0x03C07D80 CMP W8, W9
	0x03C07D84 B.NE 0x3C07E88
	0x03C07D88 ADRP X8, 0x519000
	0x03C07D8C LDR X8, [X8 + 0x470]
	0x03C07D90 MOV X0, X24
	0x03C07D94 LDR X1, [X8]
	0x03C07D98 BL 0x2FB3CE4
	0x03C07D9C LDR X8, [X27]
	0x03C07DA0 LDR W24, [X23 + 0x10]
	0x03C07DA4 LDR W23, [X31 + 0x2C]
	0x03C07DA8 MOV X25, X0
	0x03C07DAC LDR W9, [X8 + 0xE0]
	0x03C07DB0 CBNZ W9, 0x3C07DBC
	0x03C07DB4 MOV X0, X8
	0x03C07DB8 BL 0x1C16DFC
	0x03C07DBC LDR W3, [X31 + 0x14]
	0x03C07DC0 MOV X0, X25
	0x03C07DC4 MOV W1, W24
	0x03C07DC8 MOV W2, W23
	0x03C07DCC BL 0x3C08080
	0x03C07DD0 ADRP X8, 0x4EE000
	0x03C07DD4 LDR X8, [X8 + 0xC48]
	0x03C07DD8 STR D0, [X31 + 0x18]
	0x03C07DDC LDR X0, [X8]
	0x03C07DE0 LDR W8, [X0 + 0xE0]
	0x03C07DE4 CBNZ W8, 0x3C07DEC
	0x03C07DE8 BL 0x1C16DFC
	0x03C07DEC MOV X0, X31
	0x03C07DF0 BL 0x3338524
	0x03C07DF4 MOV X1, X0
	0x03C07DF8 ADD X0, X31, 0x18
	0x03C07DFC MOV X2, X31
	0x03C07E00 BL 0x33662E0
	0x03C07E04 MOV X23, X0
	0x03C07E08 LDR X2, [X28]
	0x03C07E0C MOV X0, X22
	0x03C07E10 MOV X1, X23
	0x03C07E14 BL 0x2602314
	0x03C07E18 LDR W8, [X21 + 0x18]
	0x03C07E1C ADD X29, X29, 0x1
	0x03C07E20 CMP X29, W8, SXTW
	0x03C07E24 B.LT 0x3C07B44
	0x03C07E28 CBZ X22, 0x3C07EAC
	0x03C07E2C LDR W8, [X22 + 0x18]
	0x03C07E30 CMP W8, 0x1
	0x03C07E34 B.NE 0x3C07E88
	0x03C07E38 ADRP X8, 0x520000
	0x03C07E3C LDR X8, [X8 + 0xA0]
	0x03C07E40 MOV X0, X22
	0x03C07E44 LDR X1, [X8]
	0x03C07E48 BL 0x26022C0
	0x03C07E4C LDR X8, [X27]
	0x03C07E50 MOV X20, X0
	0x03C07E54 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7DE000
	008 Move X22, 0x4ED000
	009 Move W8, [X23+437]
	010 Move X22, [X22+2600]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x4ED000
	019 Move X0, [X0+2600]
	020 Call 0x1C17CF4
	021 Move X0, 0x558000
	022 Move X0, [X0+2832]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+437], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X23, 0x7D2000
	032 Move W8, [X23+4008]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x4ED000
	036 Move X0, [X0+2600]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+4008], W8
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X22]
	046 Move X8, [X0+184]
	047 Move X22, [X8+8]
	048 Compare X22, 0
	049 JumpIfEqual {83}
	050 Move X10, 0x558000
	051 Move X8, [X22]
	052 Move X10, [X10+2832]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X22
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X6, [X0]
	070 Move X5, [X0+8]
	071 Move X0, X22
	072 Move X2, X21
	073 Move X3, X20
	074 Move X4, X19
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move W1, 2
	080 Move X30, [X31+48]
	081 Move X23, [X31+56]
	082 CallNoReturn X6
	083 Call 0x1C17F20

Method: System.Void Assert(System.Boolean condition)

Disassembly:
	0x03C07E58 CBNZ W9, 0x3C07E64
	0x03C07E5C MOV X0, X8
	0x03C07E60 BL 0x1C16DFC
	0x03C07E64 ADRP X8, 0x557000
	0x03C07E68 LDR X8, [X8 + 0xBA8]
	0x03C07E6C LDR X1, [X31 + 0x8]
	0x03C07E70 MOV X0, X20
	0x03C07E74 LDR X2, [X8]
	0x03C07E78 BL 0x21DFFC0
	0x03C07E7C TBZ X0, 0x0, 0x3C07E88
	0x03C07E80 MOVZ W0, 0x1
	0x03C07E84 B 0x3C07E8C
	0x03C07E88 MOV W0, W31
	0x03C07E8C LDP X20, X19, [X31 + 0x80]
	0x03C07E90 LDP X22, X21, [X31 + 0x70]
	0x03C07E94 LDP X24, X23, [X31 + 0x60]
	0x03C07E98 LDP X26, X25, [X31 + 0x50]
	0x03C07E9C LDP X28, X27, [X31 + 0x40]
	0x03C07EA0 LDP X29, X30, [X31 + 0x30]
	0x03C07EA4 ADD X31, X31, 0x90
	0x03C07EA8 RET
	0x03C07EAC BL 0x1C16F20
	0x03C07EB0 BL 0x1C16F28
	0x03C07EB4 STP X30, X21, [X31 - 0x20]!
	0x03C07EB8 STP X20, X19, [X31 + 0x10]
	0x03C07EBC ADRP X21, 0x7DD000
	0x03C07EC0 ADRP X20, 0x514000
	0x03C07EC4 LDRB W8, [X21 + 0x1DE]
	0x03C07EC8 LDR X20, [X20 + 0xA68]
	0x03C07ECC MOV X19, X0
	0x03C07ED0 TBNZ X8, 0x0, 0x3C07EF4
	0x03C07ED4 ADRP X0, 0x557000
	0x03C07ED8 LDR X0, [X0 + 0xBE0]
	0x03C07EDC BL 0x1C16CF4
	0x03C07EE0 ADRP X0, 0x514000
	0x03C07EE4 LDR X0, [X0 + 0xA68]
	0x03C07EE8 BL 0x1C16CF4
	0x03C07EEC MOVZ W8, 0x1
	0x03C07EF0 STRB W8, [X21 + 0x1DE]
	0x03C07EF4 LDR X0, [X20]
	0x03C07EF8 LDR W8, [X0 + 0xE0]
	0x03C07EFC CBNZ W8, 0x3C07F08
	0x03C07F00 BL 0x1C16DFC
	0x03C07F04 LDR X0, [X20]
	0x03C07F08 LDR X8, [X0 + 0xB8]
	0x03C07F0C LDR X0, [X8 + 0x10]
	0x03C07F10 CBZ X0, 0x3C07F30
	0x03C07F14 ADRP X8, 0x557000
	0x03C07F18 LDR X8, [X8 + 0xBE0]
	0x03C07F1C MOV X1, X19
	0x03C07F20 LDP X20, X19, [X31 + 0x10]
	0x03C07F24 LDR X2, [X8]
	0x03C07F28 LDP X30, X21, [X31], #0x20
	0x03C07F2C B 0x2AA528C
	0x03C07F30 BL 0x1C16F20
	0x03C07F34 SUB X31, X31, 0x30
	0x03C07F38 STP X30, X21, [X31 + 0x10]
	0x03C07F3C STP X20, X19, [X31 + 0x20]
	0x03C07F40 ADRP X21, 0x7DD000
	0x03C07F44 ADRP X20, 0x514000
	0x03C07F48 LDRB W8, [X21 + 0x1DF]
	0x03C07F4C LDR X20, [X20 + 0xA68]
	0x03C07F50 MOV X19, X0
	0x03C07F54 TBNZ X8, 0x0, 0x3C07F78
	0x03C07F58 ADRP X0, 0x557000
	0x03C07F5C LDR X0, [X0 + 0xBE8]
	0x03C07F60 BL 0x1C16CF4
	0x03C07F64 ADRP X0, 0x514000
	0x03C07F68 LDR X0, [X0 + 0xA68]
	0x03C07F6C BL 0x1C16CF4
	0x03C07F70 MOVZ W8, 0x1
	0x03C07F74 STRB W8, [X21 + 0x1DF]
	0x03C07F78 LDR X0, [X20]
	0x03C07F7C STR X31, [X31 + 0x8]
	0x03C07F80 LDR W8, [X0 + 0xE0]
	0x03C07F84 CBNZ W8, 0x3C07F90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7DE000
	005 Move W8, [X20+438]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x4ED000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x4F5000
	015 Move X0, [X0+2488]
	016 Call 0x1C17CF4
	017 Move X0, 0x558000
	018 Move X0, [X0+2952]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+438], W8
	022 Move TEMP, X19
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {30}
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 
	030 Move X19, 0x4ED000
	031 Move X19, [X19+2600]
	032 Move X0, [X19]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X20, 0x7D2000
	038 Move W8, [X20+4008]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x4ED000
	042 Move X0, [X0+2600]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+4008], W8
	046 Move X0, [X19]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X19]
	052 Move X8, [X0+184]
	053 Move X19, [X8+8]
	054 Compare X19, 0
	055 JumpIfEqual {88}
	056 Move X9, 0x4F5000
	057 Move X8, [X19]
	058 Move X9, [X9+2488]
	059 Move X10, 0x558000
	060 Move X1, [X9]
	061 Move X10, [X10+2952]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move X20, [X10]
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move W2, 2
	073 Move X0, X19
	074 Call 0x1C5D788
	075 Move W9, [X10]
	076 Add W9, W9, 2
	077 Add X8, X8, W9
	078 Add X0, X8, 312
	079 Move X4, [X0]
	080 Move X3, [X0+8]
	081 Move X0, X19
	082 Move X2, X20
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move W1, 1
	086 Move X30, [X31+32]
	087 CallNoReturn X4
	088 Call 0x1C17F20

Method: System.Void Assert(System.Boolean condition, System.String message)

Disassembly:
	0x03C07F88 BL 0x1C16DFC
	0x03C07F8C LDR X0, [X20]
	0x03C07F90 LDR X8, [X0 + 0xB8]
	0x03C07F94 LDR X0, [X8 + 0x10]
	0x03C07F98 CBZ X0, 0x3C07FD0
	0x03C07F9C ADRP X8, 0x557000
	0x03C07FA0 LDR X8, [X8 + 0xBE8]
	0x03C07FA4 ADD X2, X31, 0x8
	0x03C07FA8 MOV X1, X19
	0x03C07FAC LDR X3, [X8]
	0x03C07FB0 BL 0x2AA6B2C
	0x03C07FB4 LDR X8, [X31 + 0x8]
	0x03C07FB8 LDP X20, X19, [X31 + 0x20]
	0x03C07FBC LDP X30, X21, [X31 + 0x10]
	0x03C07FC0 ANDS W31, W0, 0x1
	0x03C07FC4 CSEL X0, X8, X31, NE
	0x03C07FC8 ADD X31, X31, 0x30
	0x03C07FCC RET
	0x03C07FD0 BL 0x1C16F20
	0x03C07FD4 STR X30, [X31 - 0x20]!
	0x03C07FD8 STP X20, X19, [X31 + 0x10]
	0x03C07FDC ADRP X20, 0x7DD000
	0x03C07FE0 LDRB W8, [X20 + 0x1DC]
	0x03C07FE4 MOV X19, X0
	0x03C07FE8 TBNZ X8, 0x0, 0x3C08000
	0x03C07FEC ADRP X0, 0x514000
	0x03C07FF0 LDR X0, [X0 + 0xA68]
	0x03C07FF4 BL 0x1C16CF4
	0x03C07FF8 MOVZ W8, 0x1
	0x03C07FFC STRB W8, [X20 + 0x1DC]
	0x03C08000 CBZ X19, 0x3C0807C
	0x03C08004 LDR W8, [X19 + 0x10]
	0x03C08008 CMP W8, 0x1
	0x03C0800C B.NE 0x3C08054
	0x03C08010 MOV X0, X19
	0x03C08014 MOV W1, W31
	0x03C08018 MOV X2, X31
	0x03C0801C BL 0x3222A1C
	0x03C08020 AND W8, W0, 0xFFFF
	0x03C08024 CMP W8, 0x2C
	0x03C08028 B.HI 0x3C08054
	0x03C0802C AND X8, X0, 0xFFFF
	0x03C08030 MOVZ W9, 0x1
	0x03C08034 LSLV X8, X9, X8
	0x03C08038 MOVZ X9, 0x1300
	0x03C0803C ANDS X31, X8, X9, 0x0
	0x03C08040 B.EQ 0x3C08054
	0x03C08044 LDP X20, X19, [X31 + 0x10]
	0x03C08048 MOVZ W0, 0x1
	0x03C0804C LDR X30, [X31], #0x20
	0x03C08050 RET
	0x03C08054 ADRP X8, 0x513000
	0x03C08058 LDR X8, [X8 + 0xA68]
	0x03C0805C LDR X0, [X8]
	0x03C08060 LDR W8, [X0 + 0xE0]
	0x03C08064 CBNZ W8, 0x3C0806C
	0x03C08068 BL 0x1C16DFC
	0x03C0806C MOV X0, X19
	0x03C08070 LDP X20, X19, [X31 + 0x10]
	0x03C08074 LDR X30, [X31], #0x20
	0x03C08078 B 0x3C07EB4
	0x03C0807C BL 0x1C16F20
	0x03C08080 SUB X31, X31, 0x50
	0x03C08084 STP D9, D8, [X31 + 0x10]
	0x03C08088 STP X30, X23, [X31 + 0x20]
	0x03C0808C STP X22, X21, [X31 + 0x30]
	0x03C08090 STP X20, X19, [X31 + 0x40]
	0x03C08094 ADRP X23, 0x7DC000
	0x03C08098 LDRB W8, [X23 + 0x1E2]
	0x03C0809C MOV W20, W3
	0x03C080A0 MOV W19, W2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DE000
	006 Move W8, [X21+439]
	007 Move X19, X1
	008 Move W20, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x4ED000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x4F5000
	017 Move X0, [X0+2488]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+439], W8
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {30}
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Move X20, 0x4ED000
	031 Move X20, [X20+2600]
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X21, 0x7D2000
	038 Move W8, [X21+4008]
	039 Compare W8, 0
	040 JumpIfNotEqual {46}
	041 Move X0, 0x4ED000
	042 Move X0, [X0+2600]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+4008], W8
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move X20, [X8+8]
	054 Compare X20, 0
	055 JumpIfEqual {86}
	056 Move X10, 0x4F4000
	057 Move X8, [X20]
	058 Move X10, [X10+2488]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X10]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 2
	070 Move X0, X20
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 2
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X4, [X0]
	077 Move X3, [X0+8]
	078 Move X0, X20
	079 Move X2, X19
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move W1, 1
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 CallNoReturn X4
	086 Call 0x1C17F20

Method: System.Void LogAssertion(System.Object message)

Disassembly:
	0x03C080A4 MOV W21, W1
	0x03C080A8 MOV X22, X0
	0x03C080AC TBNZ X8, 0x0, 0x3C080D0
	0x03C080B0 ADRP X0, 0x513000
	0x03C080B4 LDR X0, [X0 + 0xA68]
	0x03C080B8 BL 0x1C16CF4
	0x03C080BC ADRP X0, 0x4EB000
	0x03C080C0 LDR X0, [X0 + 0x5A8]
	0x03C080C4 BL 0x1C16CF4
	0x03C080C8 MOVZ W8, 0x1
	0x03C080CC STRB W8, [X23 + 0x1E2]
	0x03C080D0 CBZ X22, 0x3C083D0
	0x03C080D4 LDR W8, [X22 + 0x18]
	0x03C080D8 FMOV D0, X31
	0x03C080DC FMOV D8, X31
	0x03C080E0 FMOV D9, X31
	0x03C080E4 CMP W8, 0x1
	0x03C080E8 B.LT 0x3C08100
	0x03C080EC LDR V8, [X22 + 0x20]
	0x03C080F0 B.NE 0x3C080FC
	0x03C080F4 FMOV D9, X31
	0x03C080F8 B 0x3C08100
	0x03C080FC LDR V9, [X22 + 0x28]
	0x03C08100 CMP W21, 0xF
	0x03C08104 B.HI 0x3C083B8
	0x03C08108 ADRP X9, 0xFFFFFFFFFCF8F000
	0x03C0810C MOV W8, W21
	0x03C08110 ADD X9, X9, 0xDB3
	0x03C08114 ADR X10, 0x10
	0x03C08118 LDRB W11, [X9, X8, LSL]
	0x03C0811C ADD X10, X10, X11, 0x2, LSL
	0x03C08120 BR X10
	0x03C08124 FADD D0, D8, D9
	0x03C08128 B 0x3C083B8
	0x03C0812C FSUB D0, D8, D9
	0x03C08130 B 0x3C083B8
	0x03C08134 FMUL D0, D8, D9
	0x03C08138 B 0x3C083B8
	0x03C0813C FDIV D0, D8, D9
	0x03C08140 B 0x3C083B8
	0x03C08144 MOV V0.16B, V8.16B
	0x03C08148 MOV V1.16B, V9.16B
	0x03C0814C BL 0x3EB1C10
	0x03C08150 B 0x3C083B8
	0x03C08154 FNEG D0, D8
	0x03C08158 B 0x3C083B8
	0x03C0815C ADRP X8, 0x4EB000
	0x03C08160 LDR X8, [X8 + 0x5A8]
	0x03C08164 LDR X0, [X8]
	0x03C08168 LDR W8, [X0 + 0xE0]
	0x03C0816C CBNZ W8, 0x3C08174
	0x03C08170 BL 0x1C16DFC
	0x03C08174 MOV V0.16B, V8.16B
	0x03C08178 MOV V1.16B, V9.16B
	0x03C0817C LDP X20, X19, [X31 + 0x40]
	0x03C08180 LDP X22, X21, [X31 + 0x30]
	0x03C08184 LDP X30, X23, [X31 + 0x20]
	0x03C08188 LDP D9, D8, [X31 + 0x10]
	0x03C0818C MOV X0, X31
	0x03C08190 ADD X31, X31, 0x50
	0x03C08194 B 0x337F438
	0x03C08198 FCMP D8, 0x0
	0x03C0819C B.LS 0x3C083B8
	0x03C081A0 ADRP X8, 0x4EB000
	0x03C081A4 LDR X8, [X8 + 0x5A8]
	0x03C081A8 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DD000
	006 Move X20, 0x4EC000
	007 Move W8, [X21+440]
	008 Move X20, [X20+2600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x4EC000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x4F4000
	018 Move X0, [X0+2488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+440], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x7D1000
	028 Move W8, [X21+4008]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x4EC000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+4008], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X20, [X8+8]
	044 Compare X20, 0
	045 JumpIfEqual {76}
	046 Move X10, 0x4F4000
	047 Move X8, [X20]
	048 Move X10, [X10+2488]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 2
	060 Move X0, X20
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 2
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X4, [X0]
	067 Move X3, [X0+8]
	068 Move X0, X20
	069 Move X2, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move W1, 1
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 CallNoReturn X4
	076 Call 0x1C17F20

Method: System.Void LogAssertionFormat(System.String format, System.Object[] args)

Disassembly:
	0x03C081AC LDR W8, [X0 + 0xE0]
	0x03C081B0 CBNZ W8, 0x3C081B8
	0x03C081B4 BL 0x1C16DFC
	0x03C081B8 FSQRT D0, D8
	0x03C081BC B 0x3C083B8
	0x03C081C0 ADRP X8, 0x4EB000
	0x03C081C4 LDR X8, [X8 + 0x5A8]
	0x03C081C8 LDR X0, [X8]
	0x03C081CC LDR W8, [X0 + 0xE0]
	0x03C081D0 CBNZ W8, 0x3C081D8
	0x03C081D4 BL 0x1C16DFC
	0x03C081D8 MOV V0.16B, V8.16B
	0x03C081DC LDP X20, X19, [X31 + 0x40]
	0x03C081E0 LDP X22, X21, [X31 + 0x30]
	0x03C081E4 LDP X30, X23, [X31 + 0x20]
	0x03C081E8 LDP D9, D8, [X31 + 0x10]
	0x03C081EC ADD X31, X31, 0x50
	0x03C081F0 B 0x3EB1C30
	0x03C081F4 ADRP X8, 0x4EB000
	0x03C081F8 LDR X8, [X8 + 0x5A8]
	0x03C081FC LDR X0, [X8]
	0x03C08200 LDR W8, [X0 + 0xE0]
	0x03C08204 CBNZ W8, 0x3C0820C
	0x03C08208 BL 0x1C16DFC
	0x03C0820C MOV V0.16B, V8.16B
	0x03C08210 LDP X20, X19, [X31 + 0x40]
	0x03C08214 LDP X22, X21, [X31 + 0x30]
	0x03C08218 LDP X30, X23, [X31 + 0x20]
	0x03C0821C LDP D9, D8, [X31 + 0x10]
	0x03C08220 ADD X31, X31, 0x50
	0x03C08224 B 0x3EB1BF0
	0x03C08228 ADRP X8, 0x4EB000
	0x03C0822C LDR X8, [X8 + 0x5A8]
	0x03C08230 LDR X0, [X8]
	0x03C08234 LDR W8, [X0 + 0xE0]
	0x03C08238 CBNZ W8, 0x3C08240
	0x03C0823C BL 0x1C16DFC
	0x03C08240 MOV V0.16B, V8.16B
	0x03C08244 LDP X20, X19, [X31 + 0x40]
	0x03C08248 LDP X22, X21, [X31 + 0x30]
	0x03C0824C LDP X30, X23, [X31 + 0x20]
	0x03C08250 LDP D9, D8, [X31 + 0x10]
	0x03C08254 ADD X31, X31, 0x50
	0x03C08258 B 0x3EB1DD0
	0x03C0825C ADRP X8, 0x4EB000
	0x03C08260 LDR X8, [X8 + 0x5A8]
	0x03C08264 LDR X0, [X8]
	0x03C08268 LDR W8, [X0 + 0xE0]
	0x03C0826C CBNZ W8, 0x3C08274
	0x03C08270 BL 0x1C16DFC
	0x03C08274 FRINTM D0, D8
	0x03C08278 B 0x3C083B8
	0x03C0827C ADRP X8, 0x4EB000
	0x03C08280 LDR X8, [X8 + 0x5A8]
	0x03C08284 LDR X0, [X8]
	0x03C08288 LDR W8, [X0 + 0xE0]
	0x03C0828C CBNZ W8, 0x3C08294
	0x03C08290 BL 0x1C16DFC
	0x03C08294 FRINTP D0, D8
	0x03C08298 B 0x3C083B8
	0x03C0829C ADRP X8, 0x4EB000
	0x03C082A0 LDR X8, [X8 + 0x5A8]
	0x03C082A4 LDR X0, [X8]
	0x03C082A8 LDR W8, [X0 + 0xE0]
	0x03C082AC CBNZ W8, 0x3C082B4
	0x03C082B0 BL 0x1C16DFC
	0x03C082B4 ADD X0, X31, 0x8
	0x03C082B8 MOV V0.16B, V8.16B
	0x03C082BC BL 0x3EB1C00
	0x03C082C0 FCMP D8, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7DD000
	007 Move X21, 0x4EC000
	008 Move W8, [X22+441]
	009 Move X21, [X21+2600]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x4EC000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x4F4000
	020 Move X0, [X0+2488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+441], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X22, 0x7D1000
	030 Move W8, [X22+4008]
	031 Compare W8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, 0x4EC000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+4008], W8
	038 Move X0, [X21]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X21]
	044 Move X8, [X0+184]
	045 Move X21, [X8+8]
	046 Compare X21, 0
	047 JumpIfEqual {80}
	048 Move X10, 0x4F4000
	049 Move X8, [X21]
	050 Move X10, [X10+2488]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 5
	062 Move X0, X21
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 5
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X5, [X0]
	069 Move X4, [X0+8]
	070 Move X0, X21
	071 Move X2, X20
	072 Move X3, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move W1, 1
	078 Move X30, [X31+48]
	079 CallNoReturn X5
	080 Call 0x1C17F20

Method: System.Boolean get_isDebugBuild()

Disassembly:
	0x03C082C4 B.GE 0x3C0837C
	0x03C082C8 FMOV D1, -0.5
	0x03C082CC FCMP D0, D1
	0x03C082D0 B.NE 0x3C083A4
	0x03C082D4 LDR V0, [X31 + 0x8]
	0x03C082D8 FMOV D1, -1
	0x03C082DC B 0x3C08390
	0x03C082E0 ADRP X19, 0x513000
	0x03C082E4 LDR X19, [X19 + 0xA68]
	0x03C082E8 LDR X0, [X19]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7DD000
	004 Move X0, [X19+448]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51417088
	008 Add X0, X0, 3711
	009 Call 0x1C17CB8
	010 Move [X19+448], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean CallOverridenDebugHandler(System.Exception exception, UnityEngine.Object obj)

Disassembly:
	0x03C082EC LDR W8, [X0 + 0xE0]
	0x03C082F0 CBNZ W8, 0x3C082FC
	0x03C082F4 BL 0x1C16DFC
	0x03C082F8 LDR X0, [X19]
	0x03C082FC LDR X8, [X0 + 0xB8]
	0x03C08300 ADRP X11, 0xFFFFFFFFFCEE6000
	0x03C08304 LDR V0, [X11 + 0x350]
	0x03C08308 MOVZ X11, 0x7F2D
	0x03C0830C LDP X10, X9, [X8]
	0x03C08310 MOVK X11, 0x4C950000
	0x03C08314 MOVK X11, 0xF42D
	0x03C08318 MOVK X11, 0x58510000
	0x03C0831C MADD X10, X9, X11, X10
	0x03C08320 UBFM X11, X9, 0x2D, 0x3F
	0x03C08324 STR X10, [X8 + 0x8]
	0x03C08328 UBFM X8, X9, 0x1B, 0x3F
	0x03C0832C UBFM X9, X9, 0x3B, 0x3F
	0x03C08330 EOR W8, W11, W8, 0x0
	0x03C08334 RORV W8, W8, W9
	0x03C08338 AND W8, W8, 0xFFFFFF
	0x03C0833C UCVTF D1, W8
	0x03C08340 FDIV D0, D1, D0
	0x03C08344 B 0x3C0836C
	0x03C08348 CMP W20, 0x1
	0x03C0834C CSINC W8, W20, W31, GT
	0x03C08350 CMP W8, 0x2
	0x03C08354 FMOV D0, 0.5
	0x03C08358 B.LT 0x3C0836C
	0x03C0835C SUB W8, W8, 0x1
	0x03C08360 SCVTF D0, W19
	0x03C08364 SCVTF D1, W8
	0x03C08368 FDIV D0, D0, D1
	0x03C0836C FSUB D1, D9, D8
	0x03C08370 FMUL D0, D1, D0
	0x03C08374 FADD D0, D8, D0
	0x03C08378 B 0x3C083B8
	0x03C0837C FMOV D1, 0.5
	0x03C08380 FCMP D0, D1
	0x03C08384 B.NE 0x3C083B0
	0x03C08388 LDR V0, [X31 + 0x8]
	0x03C0838C FMOV D1, 1
	0x03C08390 FCVTZS X8, D0
	0x03C08394 FADD D1, D0, D1
	0x03C08398 ANDS X31, X8, 0x1
	0x03C0839C FCSEL D0, D0, D1, EQ
	0x03C083A0 B 0x3C083B8
	0x03C083A4 FADD D0, D8, D1
	0x03C083A8 FRINTP D0, D0
	0x03C083AC B 0x3C083B8
	0x03C083B0 FADD D0, D8, D1
	0x03C083B4 FRINTM D0, D0
	0x03C083B8 LDP X20, X19, [X31 + 0x40]
	0x03C083BC LDP X22, X21, [X31 + 0x30]
	0x03C083C0 LDP X30, X23, [X31 + 0x20]
	0x03C083C4 LDP D9, D8, [X31 + 0x10]
	0x03C083C8 ADD X31, X31, 0x50
	0x03C083CC RET
	0x03C083D0 BL 0x1C16F20
	0x03C083D4 STR X30, [X31 - 0x10]!
	0x03C083D8 CBZ X0, 0x3C08438
	0x03C083DC LDR W8, [X0 + 0x10]
	0x03C083E0 CMP W8, 0x1
	0x03C083E4 B.NE 0x3C0842C
	0x03C083E8 MOV W1, W31
	0x03C083EC MOV X2, X31
	0x03C083F0 BL 0x3222A1C
	0x03C083F4 AND W9, W0, 0xFFFF
	0x03C083F8 MOV W8, W0
	0x03C083FC CMP W9, 0x76
	0x03C08400 MOVZ W0, 0x1
	0x03C08404 B.EQ 0x3C08430
	0x03C08408 CMP W9, 0x78
	0x03C0840C B.EQ 0x3C08430
	0x03C08410 AND W8, W8, 0xFFFF
	0x03C08414 CMP W8, 0x66
	0x03C08418 CSET W9, EQ
	0x03C0841C CMP W8, 0x23
	0x03C08420 CSET W8, EQ
	0x03C08424 ORR W0, W9, W8, 0x0
	0x03C08428 B 0x3C08430
	0x03C0842C MOV W0, W31
	0x03C08430 LDR X30, [X31], #0x10
	0x03C08434 RET
	0x03C08438 BL 0x1C16F20
	0x03C0843C STP X29, X30, [X31 - 0x60]!
	0x03C08440 STP X28, X27, [X31 + 0x10]
	0x03C08444 STP X26, X25, [X31 + 0x20]
	0x03C08448 STP X24, X23, [X31 + 0x30]
	0x03C0844C STP X22, X21, [X31 + 0x40]
	0x03C08450 STP X20, X19, [X31 + 0x50]
	0x03C08454 ADRP X23, 0x7DC000
	0x03C08458 ADRP X24, 0x51F000
	0x03C0845C ADRP X20, 0x51F000
	0x03C08460 ADRP X22, 0x516000
	0x03C08464 ADRP X21, 0x516000
	0x03C08468 LDRB W8, [X23 + 0x1D9]
	0x03C0846C LDR X24, [X24 + 0xC0]
	0x03C08470 LDR X20, [X20 + 0xB0]
	0x03C08474 LDR X22, [X22 + 0xD90]
	0x03C08478 LDR X21, [X21 + 0xD88]
	0x03C0847C MOV X19, X0
	0x03C08480 TBNZ X8, 0x0, 0x3C0851C
	0x03C08484 ADRP X0, 0x513000
	0x03C08488 LDR X0, [X0 + 0xA68]
	0x03C0848C BL 0x1C16CF4
	0x03C08490 ADRP X0, 0x516000
	0x03C08494 LDR X0, [X0 + 0xD80]
	0x03C08498 BL 0x1C16CF4
	0x03C0849C ADRP X0, 0x556000
	0x03C084A0 LDR X0, [X0 + 0xBF0]
	0x03C084A4 BL 0x1C16CF4
	0x03C084A8 ADRP X0, 0x516000
	0x03C084AC LDR X0, [X0 + 0xD88]
	0x03C084B0 BL 0x1C16CF4
	0x03C084B4 ADRP X0, 0x516000
	0x03C084B8 LDR X0, [X0 + 0xD90]
	0x03C084BC BL 0x1C16CF4
	0x03C084C0 ADRP X0, 0x556000
	0x03C084C4 LDR X0, [X0 + 0xBD8]
	0x03C084C8 BL 0x1C16CF4
	0x03C084CC ADRP X0, 0x51F000
	0x03C084D0 LDR X0, [X0 + 0xA0]
	0x03C084D4 BL 0x1C16CF4
	0x03C084D8 ADRP X0, 0x51F000
	0x03C084DC LDR X0, [X0 + 0xA8]
	0x03C084E0 BL 0x1C16CF4
	0x03C084E4 ADRP X0, 0x51F000
	0x03C084E8 LDR X0, [X0 + 0xB0]
	0x03C084EC BL 0x1C16CF4
	0x03C084F0 ADRP X0, 0x51F000
	0x03C084F4 LDR X0, [X0 + 0xB8]
	0x03C084F8 BL 0x1C16CF4
	0x03C084FC ADRP X0, 0x51F000
	0x03C08500 LDR X0, [X0 + 0xC0]
	0x03C08504 BL 0x1C16CF4
	0x03C08508 ADRP X0, 0x4F6000
	0x03C0850C LDR X0, [X0 + 0x310]
	0x03C08510 BL 0x1C16CF4
	0x03C08514 MOVZ W8, 0x1
	0x03C08518 STRB W8, [X23 + 0x1D9]
	0x03C0851C LDR X0, [X24]
	0x03C08520 BL 0x1C16F10
	0x03C08524 LDR X1, [X20]
	0x03C08528 MOV X20, X0
	0x03C0852C BL 0x2601D04
	0x03C08530 LDR X0, [X22]
	0x03C08534 BL 0x1C16F10
	0x03C08538 LDR X1, [X21]
	0x03C0853C MOV X21, X0
	0x03C08540 BL 0x24F1248
	0x03C08544 CBZ X19, 0x3C08834
	0x03C08548 LDR X8, [X19 + 0x18]
	0x03C0854C ADRP X24, 0x51F000
	0x03C08550 ADRP X25, 0x516000
	0x03C08554 LDR X24, [X24 + 0xA0]
	0x03C08558 LDR X25, [X25 + 0xD80]
	0x03C0855C CMP W8, 0x1
	0x03C08560 B.LT 0x3C087C8
	0x03C08564 ADRP X27, 0x513000
	0x03C08568 ADRP X23, 0x51F000
	0x03C0856C ADRP X29, 0x556000
	0x03C08570 ADRP X28, 0x4F6000
	0x03C08574 LDR X27, [X27 + 0xA68]
	0x03C08578 LDR X23, [X23 + 0xA8]
	0x03C0857C LDR X29, [X29 + 0xBD8]
	0x03C08580 LDR X28, [X28 + 0x310]
	0x03C08584 MOV X26, X31
	0x03C08588 AND X8, X8, 0x0
	0x03C0858C CMP X26, W8, UXTW
	0x03C08590 B.CS 0x3C08838
	0x03C08594 LDR X0, [X27]
	0x03C08598 ADD X8, X19, X26, 0x3, LSL
	0x03C0859C LDR X22, [X8 + 0x20]
	0x03C085A0 LDR W9, [X0 + 0xE0]
	0x03C085A4 CBNZ W9, 0x3C085AC
	0x03C085A8 BL 0x1C16DFC
	0x03C085AC MOV X0, X22
	0x03C085B0 BL 0x3C07FD4
	0x03C085B4 TBZ X0, 0x0, 0x3C08638
	0x03C085B8 CBZ X22, 0x3C08834
	0x03C085BC MOV X0, X22
	0x03C085C0 MOV W1, W31
	0x03C085C4 MOV X2, X31
	0x03C085C8 BL 0x3222A1C
	0x03C085CC AND W8, W0, 0xFFFF
	0x03C085D0 CMP W8, 0x28
	0x03C085D4 B.EQ 0x3C08654
	0x03C085D8 CMP W8, 0x29
	0x03C085DC B.EQ 0x3C08674
	0x03C085E0 CMP W8, 0x2C
	0x03C085E4 B.NE 0x3C086C4
	0x03C085E8 CBZ X20, 0x3C08834
	0x03C085EC LDR W8, [X20 + 0x18]
	0x03C085F0 CMP W8, 0x1
	0x03C085F4 B.LT 0x3C08740
	0x03C085F8 LDR X1, [X29]
	0x03C085FC MOV X0, X20
	0x03C08600 BL 0x260227C
	0x03C08604 LDR X1, [X28]
	0x03C08608 MOV X2, X31
	0x03C0860C BL 0x3226EF8
	0x03C08610 TBZ X0, 0x0, 0x3C08740
	0x03C08614 LDR X1, [X24]
	0x03C08618 MOV X0, X20
	0x03C0861C BL 0x26022C0
	0x03C08620 CBZ X21, 0x3C08834
	0x03C08624 LDR X2, [X25]
	0x03C08628 MOV X1, X0
	0x03C0862C MOV X0, X21
	0x03C08630 BL 0x24F1750
	0x03C08634 B 0x3C085EC
	0x03C08638 LDR X0, [X27]
	0x03C0863C LDR W8, [X0 + 0xE0]
	0x03C08640 CBNZ W8, 0x3C08648
	0x03C08644 BL 0x1C16DFC
	0x03C08648 MOV X0, X22
	0x03C0864C BL 0x3C0883C
	0x03C08650 TBZ X0, 0x0, 0x3C0865C
	0x03C08654 CBNZ X20, 0x3C08730
	0x03C08658 B 0x3C08834
	0x03C0865C CBZ X21, 0x3C08834
	0x03C08660 LDR X2, [X25]
	0x03C08664 MOV X0, X21
	0x03C08668 MOV X1, X22
	0x03C0866C BL 0x24F1750
	0x03C08670 B 0x3C08740
	0x03C08674 CBZ X20, 0x3C08834
	0x03C08678 LDR W8, [X20 + 0x18]
	0x03C0867C CMP W8, 0x1
	0x03C08680 B.LT 0x3C08740
	0x03C08684 LDR X1, [X29]
	0x03C08688 MOV X0, X20
	0x03C0868C BL 0x260227C
	0x03C08690 LDR X1, [X28]
	0x03C08694 MOV X2, X31
	0x03C08698 BL 0x3226EF8
	0x03C0869C TBZ X0, 0x0, 0x3C08754
	0x03C086A0 LDR X1, [X24]
	0x03C086A4 MOV X0, X20
	0x03C086A8 BL 0x26022C0
	0x03C086AC CBZ X21, 0x3C08834
	0x03C086B0 LDR X2, [X25]
	0x03C086B4 MOV X1, X0
	0x03C086B8 MOV X0, X21
	0x03C086BC BL 0x24F1750
	0x03C086C0 B 0x3C08678
	0x03C086C4 LDR X0, [X27]
	0x03C086C8 LDR W8, [X0 + 0xE0]
	0x03C086CC CBNZ W8, 0x3C086D4
	0x03C086D0 BL 0x1C16DFC
	0x03C086D4 MOV X0, X22
	0x03C086D8 BL 0x3C07F34
	0x03C086DC MOV X23, X0
	0x03C086E0 LDR X0, [X27]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7DD000
	008 Move X23, 0x4EC000
	009 Move W8, [X21+456]
	010 Move X23, [X23+2600]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x557000
	018 Move X0, [X0+2960]
	019 Call 0x1C17CF4
	020 Move X0, 0x4EC000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x557000
	024 Move X0, [X0+2832]
	025 Call 0x1C17CF4
	026 Move X0, 0x4F4000
	027 Move X0, [X0+2488]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+456], W8
	031 Move X0, [X23]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X22, 0x7D1000
	037 Move W8, [X22+4008]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x4EC000
	041 Move X0, [X0+2600]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X22+4008], W8
	045 Move X0, [X23]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X23]
	051 Move X8, [X0+184]
	052 Move X21, [X8+8]
	053 Compare X21, 0
	054 JumpIfEqual {241}
	055 Move X10, 0x4F4000
	056 Move X8, [X21]
	057 Move X10, [X10+2488]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X10]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move X0, X21
	069 Move W2, W31
	070 Call 0x1C5D788
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 Add X8, X8, X9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X21
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {85}
	080 Move X8, 0x557000
	081 Move X8, [X8+2960]
	082 Move X9, [X0]
	083 Move X8, [X8]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, [X23]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move W8, [X22+4008]
	091 Compare W8, 0
	092 JumpIfNotEqual {98}
	093 Move X0, 0x4EC000
	094 Move X0, [X0+2600]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X22+4008], W8
	098 Move X0, [X23]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {104}
	102 Call 0x1C17DFC
	103 Move X0, [X23]
	104 Move X8, [X0+184]
	105 Move X21, [X8+8]
	106 Compare X21, 0
	107 JumpIfEqual {135}
	108 Move X10, 0x557000
	109 Move X8, [X21]
	110 Move X10, [X10+2832]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Move X1, [X10]
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move W2, 1
	122 Move X0, X21
	123 Call 0x1C5D788
	124 Move W9, [X10]
	125 Add W9, W9, 1
	126 Add X8, X8, W9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X3, [X0+8]
	130 Move X0, X21
	131 Move X1, X20
	132 Move X2, X19
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move W0, 1
	135 Call 0x1C17F20
	136 Move X23, X22
	137 Move X20, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X20
	140 Call 0x3EB2AD0
	141 Move X20, X0
	142 Move X0, 0x4EC000
	143 Move X0, [X0+2000]
	144 Call 0x1C17D08
	145 Move X8, [X20]
	146 Move X1, [X8]
	147 Call 0x1C18270
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {260}
	152 Move X21, [X20]
	153 Call 0x3EB2AE0
	154 Move X0, 0x4EC000
	155 Move X0, [X0+2600]
	156 Call 0x1C17D08
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X22, 0x4EC000
	162 Move X22, [X22+2600]
	163 Move X0, X22
	164 Call 0x1C17D08
	165 Move X8, [X0+184]
	166 Move W9, [X23+4008]
	167 Move X20, [X8]
	168 Compare W9, 0
	169 JumpIfNotEqual {175}
	170 Move X0, 0x4EC000
	171 Move X0, [X0+2600]
	172 Call 0x1C17CF4
	173 Move W8, 1
	174 Move [X23+4008], W8
	175 Move X0, [X22]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {181}
	179 Call 0x1C17DFC
	180 Move X0, [X22]
	181 Move X8, [X0+184]
	182 Move X22, [X8+8]
	183 Compare X22, 0
	184 JumpIfEqual {241}
	185 Move X0, 0x4F4000
	186 Move X0, [X0+2488]
	187 Call 0x1C17D08
	188 Move X8, [X22]
	189 Move X1, X0
	190 NotImplemented "Instruction LDRH not yet implemented."
	191 Compare X9, 0
	192 JumpIfEqual {199}
	193 Move X10, [X8+176]
	194 Add X10, X10, 8
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Subtract X9, X9, 1
	198 Add X10, X10, 16
	199 Move X0, X22
	200 Move W2, W31
	201 Call 0x1C5D788
	202 NotImplemented "Instruction LDRSW not yet implemented."
	203 Add X8, X8, X9
	204 Add X0, X8, 312
	205 Move X8, [X0]
	206 Move X1, [X0+8]
	207 Move X0, X22
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {241}
	211 Move X1, X31
	212 Call "il2cpp_vm_object_is_inst", X0
	213 Move X22, X0
	214 Move X0, 0x557000
	215 Move X0, [X0+2968]
	216 Call 0x1C17D08
	217 Move X1, X22
	218 Move X2, X21
	219 Move X3, X31
	220 Call String.Format, X0, X1, X2
	221 Compare X20, 0
	222 JumpIfEqual {241}
	223 Move X21, X0
	224 Move X0, 0x4F4000
	225 Move X0, [X0+2488]
	226 Call 0x1C17D08
	227 Move X8, [X20]
	228 Move X1, X0
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Compare X9, 0
	231 JumpIfEqual {238}
	232 Move X10, [X8+176]
	233 Add X10, X10, 8
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Subtract X9, X9, 1
	237 Add X10, X10, 16
	238 Move W2, 4
	239 Move X0, X20
	240 Call 0x1C5D788
	241 Call 0x1C17F20
	242 Move W9, [X10]
	243 Add W9, W9, 4
	244 Add X8, X8, W9
	245 Add X0, X8, 312
	246 Move X8, [X0]
	247 Move X3, [X0+8]
	248 Move X0, X20
	249 Move X1, X21
	250 Move X2, X19
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move W0, W31
	253 Move X20, [X31+32]
	254 Move X19, [X31+40]
	255 Move X22, [X31+16]
	256 Move X21, [X31+24]
	257 Move X30, [X31+48]
	258 Move X23, [X31+56]
	259 Return X0
	260 Move W0, 8
	261 Call 0x3EB2AF0
	262 Move X8, [X20]
	263 Move [X0], X8
	264 Move X1, 0x2AD000
	265 Add X1, X1, 3672
	266 Move X2, X31
	267 Call 0x3EB2B00
	268 Move X20, X0
	269 Call 0x3EB2AE0
	270 Move X0, X20
	271 Call 0x1D2D690
	272 Call 0x1991590

Method: System.Boolean IsLoggingEnabled()

Disassembly:
	0x03C086E4 LDR W8, [X0 + 0xE0]
	0x03C086E8 CBNZ W8, 0x3C086F0
	0x03C086EC BL 0x1C16DFC
	0x03C086F0 MOV X0, X20
	0x03C086F4 MOV X1, X23
	0x03C086F8 BL 0x3C088A8
	0x03C086FC CBZ X20, 0x3C08834
	0x03C08700 TBZ X0, 0x0, 0x3C08728
	0x03C08704 LDR X1, [X24]
	0x03C08708 MOV X0, X20
	0x03C0870C BL 0x26022C0
	0x03C08710 CBZ X21, 0x3C08834
	0x03C08714 LDR X2, [X25]
	0x03C08718 MOV X1, X0
	0x03C0871C MOV X0, X21
	0x03C08720 BL 0x24F1750
	0x03C08724 B 0x3C086E0
	0x03C08728 ADRP X23, 0x51F000
	0x03C0872C LDR X23, [X23 + 0xA8]
	0x03C08730 LDR X2, [X23]
	0x03C08734 MOV X0, X20
	0x03C08738 MOV X1, X22
	0x03C0873C BL 0x2602314
	0x03C08740 LDR W8, [X19 + 0x18]
	0x03C08744 ADD X26, X26, 0x1
	0x03C08748 CMP X26, W8, SXTW
	0x03C0874C B.LT 0x3C0858C
	0x03C08750 B 0x3C087C8
	0x03C08754 LDR W8, [X20 + 0x18]
	0x03C08758 CMP W8, 0x1
	0x03C0875C B.LT 0x3C08740
	0x03C08760 LDR X1, [X24]
	0x03C08764 MOV X0, X20
	0x03C08768 BL 0x26022C0
	0x03C0876C LDR W8, [X20 + 0x18]
	0x03C08770 CMP W8, 0x1
	0x03C08774 B.LT 0x3C08740
	0x03C08778 LDR X1, [X29]
	0x03C0877C MOV X0, X20
	0x03C08780 BL 0x260227C
	0x03C08784 LDR X8, [X27]
	0x03C08788 MOV X22, X0
	0x03C0878C LDR W9, [X8 + 0xE0]
	0x03C08790 CBNZ W9, 0x3C0879C
	0x03C08794 MOV X0, X8
	0x03C08798 BL 0x1C16DFC
	0x03C0879C MOV X0, X22
	0x03C087A0 BL 0x3C0883C
	0x03C087A4 TBZ X0, 0x0, 0x3C08740
	0x03C087A8 LDR X1, [X24]
	0x03C087AC MOV X0, X20
	0x03C087B0 BL 0x26022C0
	0x03C087B4 CBZ X21, 0x3C08834
	0x03C087B8 LDR X2, [X25]
	0x03C087BC MOV X1, X0
	0x03C087C0 MOV X0, X21
	0x03C087C4 B 0x3C0866C
	0x03C087C8 CBZ X20, 0x3C08834
	0x03C087CC LDR W8, [X20 + 0x18]
	0x03C087D0 CMP W8, 0x1
	0x03C087D4 B.LT 0x3C08804
	0x03C087D8 LDR X1, [X24]
	0x03C087DC MOV X0, X20
	0x03C087E0 BL 0x26022C0
	0x03C087E4 CBZ X21, 0x3C08834
	0x03C087E8 LDR X2, [X25]
	0x03C087EC MOV X1, X0
	0x03C087F0 MOV X0, X21
	0x03C087F4 BL 0x24F1750
	0x03C087F8 LDR W8, [X20 + 0x18]
	0x03C087FC CMP W8, 0x0
	0x03C08800 B.GT 0x3C087D8
	0x03C08804 CBZ X21, 0x3C08834
	0x03C08808 ADRP X8, 0x556000
	0x03C0880C LDR X8, [X8 + 0xBF0]
	0x03C08810 MOV X0, X21
	0x03C08814 LDP X20, X19, [X31 + 0x50]
	0x03C08818 LDP X22, X21, [X31 + 0x40]
	0x03C0881C LDR X1, [X8]
	0x03C08820 LDP X24, X23, [X31 + 0x30]
	0x03C08824 LDP X26, X25, [X31 + 0x20]
	0x03C08828 LDP X28, X27, [X31 + 0x10]
	0x03C0882C LDP X29, X30, [X31], #0x60
	0x03C08830 B 0x24F19A0
	0x03C08834 BL 0x1C16F20
	0x03C08838 BL 0x1C16F28
	0x03C0883C STP X30, X21, [X31 - 0x20]!
	0x03C08840 STP X20, X19, [X31 + 0x10]
	0x03C08844 ADRP X20, 0x7DC000
	0x03C08848 ADRP X21, 0x513000
	0x03C0884C LDRB W8, [X20 + 0x1DD]
	0x03C08850 LDR X21, [X21 + 0xA68]
	0x03C08854 MOV X19, X0
	0x03C08858 TBNZ X8, 0x0, 0x3C08870
	0x03C0885C ADRP X0, 0x513000
	0x03C08860 LDR X0, [X0 + 0xA68]
	0x03C08864 BL 0x1C16CF4
	0x03C08868 MOVZ W8, 0x1
	0x03C0886C STRB W8, [X20 + 0x1DD]
	0x03C08870 LDR X0, [X21]
	0x03C08874 LDR W8, [X0 + 0xE0]
	0x03C08878 CBNZ W8, 0x3C08880
	0x03C0887C BL 0x1C16DFC
	0x03C08880 MOV X0, X19
	0x03C08884 BL 0x3C07F34
	0x03C08888 CBZ X0, 0x3C0889C
	0x03C0888C LDR W8, [X0 + 0x10]
	0x03C08890 AND W8, W8, 0xFFFFFFFE
	0x03C08894 CMP W8, 0xE
	0x03C08898 CSET W0, EQ
	0x03C0889C LDP X20, X19, [X31 + 0x10]
	0x03C088A0 LDP X30, X21, [X31], #0x20
	0x03C088A4 RET
	0x03C088A8 STP X30, X21, [X31 - 0x20]!
	0x03C088AC STP X20, X19, [X31 + 0x10]
	0x03C088B0 ADRP X21, 0x7DC000
	0x03C088B4 LDRB W8, [X21 + 0x1DA]
	0x03C088B8 MOV X19, X1
	0x03C088BC MOV X20, X0
	0x03C088C0 TBNZ X8, 0x0, 0x3C088F0
	0x03C088C4 ADRP X0, 0x513000
	0x03C088C8 LDR X0, [X0 + 0xA68]
	0x03C088CC BL 0x1C16CF4
	0x03C088D0 ADRP X0, 0x556000
	0x03C088D4 LDR X0, [X0 + 0xBD8]
	0x03C088D8 BL 0x1C16CF4
	0x03C088DC ADRP X0, 0x51F000
	0x03C088E0 LDR X0, [X0 + 0xB8]
	0x03C088E4 BL 0x1C16CF4
	0x03C088E8 MOVZ W8, 0x1
	0x03C088EC STRB W8, [X21 + 0x1DA]
	0x03C088F0 CBZ X20, 0x3C0898C
	0x03C088F4 CBZ X19, 0x3C0897C
	0x03C088F8 LDR W8, [X20 + 0x18]
	0x03C088FC CMP W8, 0x1
	0x03C08900 B.LT 0x3C0897C
	0x03C08904 ADRP X8, 0x556000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x7DD000
	007 Move X20, 0x4EC000
	008 Move W8, [X19+457]
	009 Move X20, [X20+2600]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x557000
	015 Move X0, [X0+2960]
	016 Call 0x1C17CF4
	017 Move X0, 0x4EC000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x4F4000
	021 Move X0, [X0+2488]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+457], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X21, 0x7D1000
	031 Move W8, [X21+4008]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x4EC000
	035 Move X0, [X0+2600]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+4008], W8
	039 Move X0, [X20]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X20]
	045 Move X8, [X0+184]
	046 Move X19, [X8+8]
	047 Compare X19, 0
	048 JumpIfEqual {155}
	049 Move X22, 0x4F4000
	050 Move X8, [X19]
	051 Move X22, [X22+2488]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X22]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move X0, X19
	063 Move W2, W31
	064 Call 0x1C5D788
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X0, 0
	073 JumpIfEqual {80}
	074 Move X8, 0x557000
	075 Move X8, [X8+2960]
	076 Move X9, [X0]
	077 Move X8, [X8]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Move W19, 1
	081 Move X0, [X20]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfEqual {105}
	085 Move TEMP, X19
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {110}
	089 Move X8, [X20]
	090 Move X8, [X8+184]
	091 Move X19, [X8]
	092 Compare X19, 0
	093 JumpIfEqual {155}
	094 Move X8, [X19]
	095 Move X1, [X22]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Compare X9, 0
	098 JumpIfEqual {139}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Call 0x1C17DFC
	106 Move TEMP, X19
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfEqual {89}
	110 Move W8, [X21+4008]
	111 Compare W8, 0
	112 JumpIfNotEqual {118}
	113 Move X0, 0x4EC000
	114 Move X0, [X0+2600]
	115 Call 0x1C17CF4
	116 Move W8, 1
	117 Move [X21+4008], W8
	118 Move X0, [X20]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X20]
	124 Move X8, [X0+184]
	125 Move X19, [X8+8]
	126 Compare X19, 0
	127 JumpIfEqual {155}
	128 Move X8, [X19]
	129 Move X1, [X22]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move W2, 1
	140 Move X0, X19
	141 Call 0x1C5D788
	142 Move W9, [X10]
	143 Add W9, W9, 1
	144 Add X8, X8, W9
	145 Add X0, X8, 312
	146 Move X2, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X19
	149 Move X20, [X31+32]
	150 Move X19, [X31+40]
	151 Move X22, [X31+16]
	152 Move X21, [X31+24]
	153 Move X30, [X31+48]
	154 CallNoReturn X2
	155 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03C08908 LDR X8, [X8 + 0xBD8]
	0x03C0890C MOV X0, X20
	0x03C08910 LDR X1, [X8]
	0x03C08914 BL 0x260227C
	0x03C08918 ADRP X8, 0x513000
	0x03C0891C LDR X8, [X8 + 0xA68]
	0x03C08920 MOV X20, X0
	0x03C08924 LDR X8, [X8]
	0x03C08928 LDR W9, [X8 + 0xE0]
	0x03C0892C CBNZ W9, 0x3C08938
	0x03C08930 MOV X0, X8
	0x03C08934 BL 0x1C16DFC
	0x03C08938 MOV X0, X20
	0x03C0893C BL 0x3C07F34
	0x03C08940 CBZ X0, 0x3C0897C
	0x03C08944 LDR W8, [X19 + 0x18]
	0x03C08948 CMP W8, 0x1
	0x03C0894C B.EQ 0x3C0896C
	0x03C08950 CBNZ W8, 0x3C0897C
	0x03C08954 LDR W8, [X19 + 0x14]
	0x03C08958 LDR W9, [X0 + 0x14]
	0x03C0895C CMP W8, W9
	0x03C08960 B.GT 0x3C0897C
	0x03C08964 MOVZ W0, 0x1
	0x03C08968 B 0x3C08980
	0x03C0896C LDR W8, [X19 + 0x14]
	0x03C08970 LDR W9, [X0 + 0x14]
	0x03C08974 CMP W8, W9
	0x03C08978 B.LT 0x3C08964
	0x03C0897C MOV W0, W31
	0x03C08980 LDP X20, X19, [X31 + 0x10]
	0x03C08984 LDP X30, X21, [X31], #0x20
	0x03C08988 RET
	0x03C0898C BL 0x1C16F20
	0x03C08990 STR X30, [X31 - 0x60]!
	0x03C08994 STP X28, X27, [X31 + 0x10]
	0x03C08998 STP X26, X25, [X31 + 0x20]
	0x03C0899C STP X24, X23, [X31 + 0x30]
	0x03C089A0 STP X22, X21, [X31 + 0x40]
	0x03C089A4 STP X20, X19, [X31 + 0x50]
	0x03C089A8 ADRP X23, 0x7DC000
	0x03C089AC ADRP X22, 0x4EC000
	0x03C089B0 ADRP X20, 0x4EC000
	0x03C089B4 LDRB W8, [X23 + 0x1DB]
	0x03C089B8 LDR X22, [X22 + 0x1D0]
	0x03C089BC LDR X20, [X20 + 0x1C0]
	0x03C089C0 MOV X19, X1
	0x03C089C4 MOV X21, X0
	0x03C089C8 TBNZ X8, 0x0, 0x3C08A58
	0x03C089CC ADRP X0, 0x4ED000
	0x03C089D0 LDR X0, [X0 + 0x170]
	0x03C089D4 BL 0x1C16CF4
	0x03C089D8 ADRP X0, 0x4EC000
	0x03C089DC LDR X0, [X0 + 0xBE0]
	0x03C089E0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x7DD000
	008 Move X23, 0x557000
	009 Move X22, 0x557000
	010 Move X21, 0x4EC000
	011 Move W8, [X19+458]
	012 Move X23, [X23+2960]
	013 Move X22, [X22+2976]
	014 Move X21, [X21+2600]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x557000
	020 Move X0, [X0+2960]
	021 Call 0x1C17CF4
	022 Move X0, 0x4EC000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x557000
	026 Move X0, [X0+2976]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+458], W8
	030 Move X0, [X23]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X19, X0
	034 Call Object..ctor, X0
	035 Move X0, [X22]
	036 Call 0x1C17F10
	037 Move X1, X19
	038 Move X2, X31
	039 Move X20, X0
	040 Call Logger..ctor, X0, X1
	041 Move X8, [X21]
	042 Move X8, [X8+184]
	043 Move [X8], X20
	044 Move X0, [X23]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X19, X0
	048 Call Object..ctor, X0
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, X19
	052 Move X2, X31
	053 Move X20, X0
	054 Call Logger..ctor, X0, X1
	055 Move X8, [X21]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X8, [X8+184]
	059 Move [X8+8], X20
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+48]
	063 Move X23, [X31+56]
	064 Return 

Method: System.Void DrawLine_Injected(ref UnityEngine.Vector3 start, ref UnityEngine.Vector3 end, ref UnityEngine.Color color, System.Single duration, System.Boolean depthTest)

Disassembly:
	0x03C06D94 BL 0x1C16DFC
	0x03C06D98 ADRP X23, 0x7D2000
	0x03C06D9C LDRB W8, [X23 + 0xFA8]
	0x03C06DA0 CBNZ W8, 0x3C06DB8
	0x03C06DA4 ADRP X0, 0x4ED000
	0x03C06DA8 LDR X0, [X0 + 0xA28]
	0x03C06DAC BL 0x1C16CF4
	0x03C06DB0 MOVZ W8, 0x1
	0x03C06DB4 STRB W8, [X23 + 0xFA8]
	0x03C06DB8 LDR X0, [X22]
	0x03C06DBC LDR W8, [X0 + 0xE0]
	0x03C06DC0 CBNZ W8, 0x3C06DCC
	0x03C06DC4 BL 0x1C16DFC
	0x03C06DC8 LDR X0, [X22]
	0x03C06DCC LDR X8, [X0 + 0xB8]
	0x03C06DD0 LDR X22, [X8 + 0x8]
	0x03C06DD4 CBZ X22, 0x3C06E54
	0x03C06DD8 ADRP X10, 0x558000
	0x03C06DDC LDR X8, [X22]
	0x03C06DE0 LDR X10, [X10 + 0xB10]
	0x03C06DE4 LDRH W9, [X8 + 0x12E]
	0x03C06DE8 LDR X1, [X10]
	0x03C06DEC CBZ X9, 0x3C06E10
	0x03C06DF0 LDR X10, [X8 + 0xB0]
	0x03C06DF4 ADD X10, X10, 0x8
	0x03C06DF8 LDUR X11, [X10 - 0x8]
	0x03C06DFC CMP X11, X1

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x7DF000
	009 Move X4, [X23+464]
	010 Move W20, W3
	011 Move V8, V0
	012 Move X19, X2
	013 Move X21, X1
	014 Move X22, X0
	015 Compare X4, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51400704
	018 Add X0, X0, 3146
	019 Call 0x1C17CB8
	020 Move X4, X0
	021 Move [X23+464], X0
	022 And W3, W20, 1
	023 Move X0, X22
	024 Move X1, X21
	025 Move X2, X19
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X22, [X31+32]
	029 Move X21, [X31+40]
	030 Move X30, [X31+16]
	031 Move X23, [X31+24]
	032 Move V0, V8
	033 Move V8, [X31+64]
	034 CallNoReturn X4

