Type: UnityEngine.BoundsInt

Method: UnityEngine.Vector3Int get_position()

Disassembly:
	0x03C0B234 LDR X0, [X0 + 0xE78]
	0x03C0B238 BL 0x1C16CF4
	0x03C0B23C ADRP X0, 0x511000
	0x03C0B240 LDR X0, [X0 + 0xD40]

ISIL:
	001 Move X8, [X0]
	002 Move W1, [X0+8]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_position(UnityEngine.Vector3Int value)

Disassembly:
	0x03C0B244 BL 0x1C16CF4
	0x03C0B248 MOVZ W8, 0x1
	0x03C0B24C STRB W8, [X23 + 0x211]

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], W2
	003 Return 

Method: UnityEngine.Vector3Int get_size()

Disassembly:
	0x03C0B250 MOV X0, X21
	0x03C0B254 MOV X1, X31
	0x03C0B258 BL 0x32277A8
	0x03C0B25C LDR X8, [X22]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Move W1, [X0+20]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_size(UnityEngine.Vector3Int value)

Disassembly:
	0x03C0B260 ANDS W31, W0, 0x1
	0x03C0B264 CSEL X21, X8, X21, NE
	0x03C0B268 CBNZ X20, 0x3C0B2A4

ISIL:
	001 Move [X0+12], X1
	002 Move [X0+20], W2
	003 Return 

Method: System.Void .ctor(UnityEngine.Vector3Int position, UnityEngine.Vector3Int size)

Disassembly:
	0x03C0B26C ADRP X8, 0x4EA000
	0x03C0B270 LDR X8, [X8 + 0xC48]
	0x03C0B274 LDR X0, [X8]
	0x03C0B278 LDR W8, [X0 + 0xE0]
	0x03C0B27C CBNZ W8, 0x3C0B284

ISIL:
	001 Move [X0], X1
	002 Move [X0+8], W2
	003 Move [X0+12], X3
	004 Move [X0+20], W4
	005 Return 

Method: System.String ToString()

Disassembly:
	0x03C0B280 BL 0x1C16DFC
	0x03C0B284 MOV X0, X31
	0x03C0B288 BL 0x3338524
	0x03C0B28C CBZ X0, 0x3C0B364

ISIL:
	001 Move X1, X31
	002 Move X2, X31
	003 Move X3, X31
	004 Call 0x3C1EEA0
	005 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider formatProvider)

Disassembly:
	0x03C0B290 LDR X8, [X0]
	0x03C0B294 LDR X9, [X8 + 0x218]
	0x03C0B298 LDR X1, [X8 + 0x220]
	0x03C0B29C BLR X9
	0x03C0B2A0 MOV X20, X0
	0x03C0B2A4 ADRP X8, 0x4E8000
	0x03C0B2A8 LDR X8, [X8 + 0x9D0]
	0x03C0B2AC MOVZ W1, 0x2
	0x03C0B2B0 LDR X0, [X8]
	0x03C0B2B4 BL 0x1C16D6C
	0x03C0B2B8 MOV X22, X0
	0x03C0B2BC MOV X0, X19
	0x03C0B2C0 MOV X1, X21
	0x03C0B2C4 MOV X2, X20
	0x03C0B2C8 MOV X3, X31
	0x03C0B2CC BL 0x2430694
	0x03C0B2D0 CBZ X22, 0x3C0B364
	0x03C0B2D4 MOV X23, X0
	0x03C0B2D8 CBZ X0, 0x3C0B2F0
	0x03C0B2DC LDR X8, [X22]
	0x03C0B2E0 MOV X0, X23
	0x03C0B2E4 LDR X1, [X8 + 0x40]
	0x03C0B2E8 BL 0x1C16E00
	0x03C0B2EC CBZ X0, 0x3C0B368
	0x03C0B2F0 LDR W8, [X22 + 0x18]
	0x03C0B2F4 CBZ W8, 0x3C0B360
	0x03C0B2F8 ADD X0, X19, 0xC
	0x03C0B2FC MOV X1, X21
	0x03C0B300 MOV X2, X20
	0x03C0B304 MOV X3, X31
	0x03C0B308 STR X23, [X22 + 0x20]
	0x03C0B30C BL 0x2430694
	0x03C0B310 MOV X19, X0
	0x03C0B314 CBZ X0, 0x3C0B32C
	0x03C0B318 LDR X8, [X22]
	0x03C0B31C MOV X0, X19
	0x03C0B320 LDR X1, [X8 + 0x40]
	0x03C0B324 BL 0x1C16E00
	0x03C0B328 CBZ X0, 0x3C0B368
	0x03C0B32C LDR W8, [X22 + 0x18]
	0x03C0B330 CMP W8, 0x1
	0x03C0B334 B.LS 0x3C0B360
	0x03C0B338 ADRP X8, 0x511000
	0x03C0B33C LDR X8, [X8 + 0xD40]
	0x03C0B340 STR X19, [X22 + 0x28]
	0x03C0B344 MOV X1, X22
	0x03C0B348 LDP X20, X19, [X31 + 0x20]
	0x03C0B34C LDR X0, [X8]
	0x03C0B350 LDP X22, X21, [X31 + 0x10]
	0x03C0B354 MOV X2, X31
	0x03C0B358 LDP X30, X23, [X31], #0x30
	0x03C0B35C B 0x3C96574
	0x03C0B360 BL 0x1C16F28
	0x03C0B364 BL 0x1C16F20
	0x03C0B368 BL 0x1C16F44
	0x03C0B36C MOV X1, X31
	0x03C0B370 BL 0x1C16DEC
	0x03C0B374 STP S0, S1, [X0]
	0x03C0B378 STP S2, S3, [X0 + 0x8]
	0x03C0B37C RET
	0x03C0B380 STP S0, S1, [X0]
	0x03C0B384 STP S2, S3, [X0 + 0x8]
	0x03C0B388 RET
	0x03C0B38C STP S0, S1, [X0]
	0x03C0B390 STP S2, S3, [X0 + 0x8]
	0x03C0B394 RET
	0x03C0B398 FMOV S0, W31
	0x03C0B39C FMOV S1, W31
	0x03C0B3A0 FMOV S2, W31
	0x03C0B3A4 FMOV S3, W31
	0x03C0B3A8 RET
	0x03C0B3AC FSUB S2, S2, S0
	0x03C0B3B0 FSUB S3, S3, S1
	0x03C0B3B4 RET
	0x03C0B3B8 LDR V0, [X0]
	0x03C0B3BC RET
	0x03C0B3C0 STR S0, [X0]
	0x03C0B3C4 RET
	0x03C0B3C8 LDR V0, [X0 + 0x4]
	0x03C0B3CC RET
	0x03C0B3D0 STR S0, [X0 + 0x4]
	0x03C0B3D4 RET
	0x03C0B3D8 LDP S0, S1, [X0]
	0x03C0B3DC RET
	0x03C0B3E0 STP S0, S1, [X0]
	0x03C0B3E4 RET
	0x03C0B3E8 LDP D1, D0, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x7DA000
	008 Move W8, [X22+504]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x4EB000
	017 Move X0, [X0+3144]
	018 Call 0x1C17CF4
	019 Move X0, 0x4E9000
	020 Move X0, [X0+2512]
	021 Call 0x1C17CF4
	022 Move X0, 0x554000
	023 Move X0, [X0+3208]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+504], W8
	027 Compare X21, 0
	028 JumpIfNotEqual {45}
	029 Move X8, 0x4EB000
	030 Move X8, [X8+3144]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X31
	037 Call CultureInfo.get_InvariantCulture
	038 Compare X0, 0
	039 JumpIfEqual {102}
	040 Move X8, [X0]
	041 Move X9, [X8+536]
	042 Move X1, [X8+544]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X21, X0
	045 Move X8, 0x4E9000
	046 Move X8, [X8+2512]
	047 Move W1, 2
	048 Move X0, [X8]
	049 Call 0x1C17D6C
	050 Move X22, X0
	051 Move X0, X20
	052 Move X1, X19
	053 Move X2, X21
	054 Move X3, X31
	055 Call 0x3C1F004
	056 Compare X22, 0
	057 JumpIfEqual {102}
	058 Move X23, X0
	059 Compare X0, 0
	060 JumpIfEqual {67}
	061 Move X8, [X22]
	062 Move X0, X23
	063 Move X1, [X8+64]
	064 Call 0x1C17E00
	065 Compare X0, 0
	066 JumpIfEqual {103}
	067 Move W8, [X22+24]
	068 Compare W8, 0
	069 JumpIfEqual {101}
	070 Add X0, X20, 12
	071 Move X1, X19
	072 Move X2, X21
	073 Move X3, X31
	074 Move [X22+32], X23
	075 Call 0x3C1F004
	076 Move X19, X0
	077 Compare X0, 0
	078 JumpIfEqual {85}
	079 Move X8, [X22]
	080 Move X0, X19
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {103}
	085 Move W8, [X22+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, 0x554000
	088 Move X8, [X8+3208]
	089 Move [X22+40], X19
	090 Move X1, X22
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X0, [X8]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X2, X31
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 Call UnityString.Format, X0, X1
	100 Return X0
	101 Call 0x1C17F28
	102 Call 0x1C17F20
	103 Call 0x1C17F44
	104 Move X1, X31
	105 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object other)

Disassembly:
	0x03C0B3EC MOVI V2.2S, 0x3F, 0x18
	0x00000000 INVALID
	0x03C0B3F4 FADD V0.2S, V1.2S, V0.2S
	0x03C0B3F8 MOV S1, V0.S[1]
	0x03C0B3FC RET
	0x03C0B400 LDR V2, [X0 + 0x8]
	0x03C0B404 MOVI V3.2S, 0xBF, 0x18
	0x03C0B408 MOV V0.S[1], V1.S[0]
	0x00000000 INVALID
	0x03C0B410 FADD V0.2S, V0.2S, V2.2S
	0x03C0B414 STR D0, [X0]
	0x03C0B418 RET
	0x03C0B41C LDP S0, S1, [X0]
	0x03C0B420 RET
	0x03C0B424 LDP D2, D3, [X0]
	0x03C0B428 STP S0, S1, [X0]
	0x03C0B42C MOV V0.S[1], V1.S[0]
	0x03C0B430 FADD V2.2S, V3.2S, V2.2S
	0x03C0B434 FSUB V0.2S, V2.2S, V0.2S
	0x03C0B438 STR D0, [X0 + 0x8]
	0x03C0B43C RET
	0x03C0B440 LDP D1, D0, [X0]
	0x03C0B444 FADD V0.2S, V0.2S, V1.2S
	0x03C0B448 MOV S1, V0.S[1]
	0x03C0B44C RET
	0x03C0B450 LDR V2, [X0]
	0x03C0B454 MOV V0.S[1], V1.S[0]
	0x03C0B458 FSUB V0.2S, V0.2S, V2.2S
	0x03C0B45C STR D0, [X0 + 0x8]
	0x03C0B460 RET
	0x03C0B464 LDR V0, [X0 + 0x8]
	0x03C0B468 RET
	0x03C0B46C STR S0, [X0 + 0x8]
	0x03C0B470 RET
	0x03C0B474 LDR V0, [X0 + 0xC]
	0x03C0B478 RET
	0x03C0B47C STR S0, [X0 + 0xC]
	0x03C0B480 RET
	0x03C0B484 LDP S0, S1, [X0 + 0x8]
	0x03C0B488 RET
	0x03C0B48C STP S0, S1, [X0 + 0x8]
	0x03C0B490 RET
	0x03C0B494 LDR V0, [X0]
	0x03C0B498 RET
	0x03C0B49C LDR V1, [X0 + 0x8]
	0x03C0B4A0 LDR V2, [X0]
	0x03C0B4A4 STR S0, [X0]
	0x03C0B4A8 FADD S1, S1, S2
	0x03C0B4AC FSUB S0, S1, S0
	0x03C0B4B0 STR S0, [X0 + 0x8]
	0x03C0B4B4 RET
	0x03C0B4B8 LDR V0, [X0 + 0x4]
	0x03C0B4BC RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DA000
	006 Move W8, [X21+505]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x511000
	014 Move X0, [X0+1496]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+505], W8
	018 Compare X20, 0
	019 JumpIfEqual {57}
	020 Move X8, 0x511000
	021 Move X8, [X8+1496]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X20
	026 Call 0x1C17E08
	027 Move X9, [X0]
	028 Move X8, [X19]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, X9
	031 ShiftRight X9, 32
	032 And X9, X9, 0x7FFFFFFF
	033 Move X8, X8
	034 ShiftRight X8, 32
	035 And X8, X8, 0x7FFFFFFF
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, W31
	038 Move W9, [X0+8]
	039 Move W10, [X19+8]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W10, [X0+20]
	045 Move W11, [X19+20]
	046 Move X8, X8
	047 ShiftRight X8, 32
	048 And X8, X8, 0x7FFFFFFF
	049 Move X9, X9
	050 ShiftRight X9, 32
	051 And X9, X9, 0x7FFFFFFF
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CSET not yet implemented."
	056 And W8, W8, W9
	057 Move W8, W31
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move W0, W8
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return X0

Method: System.Boolean Equals(UnityEngine.BoundsInt other)

Disassembly:
	0x03C0B4C0 LDR V1, [X0 + 0xC]
	0x03C0B4C4 LDR V2, [X0 + 0x4]
	0x03C0B4C8 STR S0, [X0 + 0x4]
	0x03C0B4CC FADD S1, S1, S2
	0x03C0B4D0 FSUB S0, S1, S0
	0x03C0B4D4 STR S0, [X0 + 0xC]
	0x03C0B4D8 RET
	0x03C0B4DC LDR V0, [X0 + 0x8]
	0x03C0B4E0 LDR V1, [X0]
	0x03C0B4E4 FADD S0, S0, S1
	0x03C0B4E8 RET
	0x03C0B4EC LDR V1, [X0]
	0x03C0B4F0 FSUB S0, S0, S1
	0x03C0B4F4 STR S0, [X0 + 0x8]
	0x03C0B4F8 RET
	0x03C0B4FC LDR V0, [X0 + 0xC]
	0x03C0B500 LDR V1, [X0 + 0x4]
	0x03C0B504 FADD S0, S0, S1
	0x03C0B508 RET
	0x03C0B50C LDR V1, [X0 + 0x4]
	0x03C0B510 FSUB S0, S0, S1
	0x03C0B514 STR S0, [X0 + 0xC]
	0x03C0B518 RET
	0x03C0B51C LDR V2, [X0]
	0x03C0B520 FCMP S0, S2
	0x03C0B524 B.LT 0x3C0B544
	0x03C0B528 LDR V3, [X0 + 0x8]
	0x03C0B52C FADD S2, S2, S3
	0x03C0B530 FCMP S0, S2
	0x03C0B534 B.PL 0x3C0B544

ISIL:
	001 Move X9, [X1]
	002 Move X8, [X0]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, X9
	005 ShiftRight X9, 32
	006 And X9, X9, 0x7FFFFFFF
	007 Move X8, X8
	008 ShiftRight X8, 32
	009 And X8, X8, 0x7FFFFFFF
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W8, W31
	012 Move W9, [X1+8]
	013 Move W10, [X0+8]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction LDUR not yet implemented."
	016 NotImplemented "Instruction LDUR not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W10, [X1+20]
	019 Move W11, [X0+20]
	020 Move X9, X9
	021 ShiftRight X9, 32
	022 And X9, X9, 0x7FFFFFFF
	023 Move X8, X8
	024 ShiftRight X8, 32
	025 And X8, X8, 0x7FFFFFFF
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 And W8, W8, W9
	031 Move W8, W31
	032 Move W0, W8
	033 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C0B538 LDR V0, [X0 + 0x4]
	0x03C0B53C FCMP S1, S0
	0x03C0B540 B.GE 0x3C0B54C
	0x03C0B544 MOV W0, W31
	0x03C0B548 RET
	0x03C0B54C LDR V2, [X0 + 0xC]
	0x03C0B550 FADD S0, S0, S2
	0x03C0B554 FCMP S1, S0
	0x03C0B558 CSET W0, MI
	0x03C0B55C RET
	0x03C0B560 LDR V2, [X0]
	0x03C0B564 FCMP S0, S2
	0x03C0B568 B.LT 0x3C0B588
	0x03C0B56C LDR V3, [X0 + 0x8]
	0x03C0B570 FADD S2, S2, S3
	0x03C0B574 FCMP S0, S2
	0x03C0B578 B.PL 0x3C0B588
	0x03C0B57C LDR V0, [X0 + 0x4]
	0x03C0B580 FCMP S1, S0
	0x03C0B584 B.GE 0x3C0B590
	0x03C0B588 MOV W0, W31
	0x03C0B58C RET
	0x03C0B590 LDR V2, [X0 + 0xC]
	0x03C0B594 FADD S0, S0, S2
	0x03C0B598 FCMP S1, S0
	0x03C0B59C CSET W0, MI
	0x03C0B5A0 RET
	0x03C0B5A4 FADD S4, S2, S0
	0x03C0B5A8 FSUB S5, S0, S4
	0x03C0B5AC FCMP S0, S4
	0x03C0B5B0 FCSEL S2, S5, S2, GT
	0x03C0B5B4 FADD S5, S3, S1
	0x03C0B5B8 FCSEL S0, S4, S0, GT
	0x03C0B5BC FSUB S4, S1, S5
	0x03C0B5C0 FCMP S1, S5
	0x03C0B5C4 FCSEL S3, S4, S3, GT
	0x03C0B5C8 FCSEL S1, S5, S1, GT
	0x03C0B5CC RET
	0x03C0B5D0 LDR V4, [X0]
	0x03C0B5D4 FADD S2, S2, S0
	0x03C0B5D8 FCMP S2, S4
	0x03C0B5DC B.LE 0x3C0B614
	0x03C0B5E0 LDR V2, [X0 + 0x8]
	0x03C0B5E4 FADD S2, S4, S2
	0x03C0B5E8 FCMP S0, S2
	0x03C0B5EC B.PL 0x3C0B614
	0x03C0B5F0 LDR V0, [X0 + 0x4]
	0x03C0B5F4 FADD S2, S3, S1
	0x03C0B5F8 FCMP S2, S0
	0x03C0B5FC B.LE 0x3C0B614
	0x03C0B600 LDR V2, [X0 + 0xC]
	0x03C0B604 FADD S0, S0, S2
	0x03C0B608 FCMP S1, S0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+4]
	007 Move X19, X0
	008 Add X0, X31, 8
	009 Move X1, X31
	010 Move [X31+8], W8
	011 Call Int32.GetHashCode, X0
	012 Move W8, [X19+8]
	013 Move W20, W0
	014 Add X0, X31, 8
	015 Move X1, X31
	016 Move [X31+8], W8
	017 Call Int32.GetHashCode, X0
	018 Move W8, [X19]
	019 Move W21, W0
	020 Add X0, X31, 8
	021 Move X1, X31
	022 Move [X31+8], W8
	023 Call Int32.GetHashCode, X0
	024 NotImplemented "Instruction SBFM not yet implemented."
	025 Move W9, [X19+16]
	026 Xor W8, W8, W20
	027 Xor W8, W8, W21
	028 Xor W8, W8, W21
	029 Xor W22, W8, W0
	030 Add X0, X31, 12
	031 Move X1, X31
	032 Move [X31+12], W9
	033 Call Int32.GetHashCode, X0
	034 Move W8, [X19+20]
	035 Move W20, W0
	036 Add X0, X31, 12
	037 Move X1, X31
	038 Move [X31+12], W8
	039 Call Int32.GetHashCode, X0
	040 Move W8, [X19+12]
	041 Move W21, W0
	042 Add X0, X31, 12
	043 Move X1, X31
	044 Move [X31+12], W8
	045 Call Int32.GetHashCode, X0
	046 NotImplemented "Instruction SBFM not yet implemented."
	047 Xor W8, W8, W20
	048 Xor W8, W8, W21
	049 Xor W8, W8, W21
	050 Xor W8, W8, W0
	051 Xor W0, W22, W8
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Return X0

