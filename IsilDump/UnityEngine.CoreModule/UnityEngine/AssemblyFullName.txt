Type: UnityEngine.AssemblyFullName

Method: System.Boolean Equals(System.Object other)

Disassembly:
	0x03C33B90 ADRP X26, 0x52C000
	0x03C33B94 LDR X26, [X26 + 0x418]
	0x03C33B98 STR X22, [X23 + 0x10]
	0x03C33B9C ADRP X24, 0x52C000
	0x03C33BA0 LDR X0, [X26]
	0x03C33BA4 LDR W8, [X0 + 0xE0]
	0x03C33BA8 LDR X24, [X24 + 0x4B0]
	0x03C33BAC CBNZ W8, 0x3C33BB8
	0x03C33BB0 BL 0x1C16DFC
	0x03C33BB4 LDR X0, [X26]
	0x03C33BB8 LDR X8, [X0 + 0xB8]
	0x03C33BBC LDR X3, [X24]
	0x03C33BC0 ADD X0, X31, 0x110
	0x03C33BC4 MOV W1, W21
	0x03C33BC8 LDR X22, [X8]
	0x03C33BCC MOV X2, X20
	0x03C33BD0 STP X31, X31, [X31 + 0x110]
	0x03C33BD4 BL 0x27A40E8
	0x03C33BD8 CBZ X22, 0x3C34514
	0x03C33BDC ADRP X8, 0x52C000
	0x03C33BE0 LDR X8, [X8 + 0x408]
	0x03C33BE4 LDP X1, X2, [X31 + 0x110]
	0x03C33BE8 ADD X3, X31, 0xD0
	0x03C33BEC MOV X0, X22
	0x03C33BF0 LDR X4, [X8]
	0x03C33BF4 BL 0x29C21F8
	0x03C33BF8 TBNZ X0, 0x0, 0x3C34660
	0x03C33BFC STR X19, [X31 + 0x8]
	0x03C33C00 ADRP X8, 0x4C0000
	0x03C33C04 LDR X8, [X8 + 0xDF8]
	0x03C33C08 MOVI V0.2D, 0x0
	0x03C33C0C STP V0, V0, [X31 + 0x70]
	0x03C33C10 STR V0, [X31 + 0x6]
	0x03C33C14 LDR X0, [X8]
	0x03C33C18 LDR W8, [X0 + 0xE0]
	0x03C33C1C CBNZ W8, 0x3C33C24
	0x03C33C20 BL 0x1C16DFC
	0x03C33C24 MOV X0, X20
	0x03C33C28 MOV X1, X31
	0x03C33C2C BL 0x33AFB1C
	0x03C33C30 LDR V0, [X31 + 0x8]
	0x03C33C34 STP X0, X31, [X31 + 0x100]
	0x03C33C38 ADRP X28, 0x4C0000
	0x03C33C3C ADRP X9, 0x4E7000
	0x03C33C40 STR V0, [X31 + 0xF]
	0x03C33C44 LDP V1, V0, [X31 + 0x60]
	0x03C33C48 LDR X28, [X28 + 0x6C0]
	0x03C33C4C MOV X22, X0
	0x03C33C50 ADD X19, X31, 0xD0
	0x03C33C54 STP V1, V0, [X31 + 0xD0]
	0x03C33C58 LDR X0, [X28]
	0x03C33C5C LDR X9, [X9 + 0xD68]
	0x03C33C60 ADD X25, X19, 0x38
	0x03C33C64 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7B3000
	007 Move W8, [X21+719]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x52D000
	015 Move X0, [X0+976]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+719], W8
	019 Compare X20, 0
	020 JumpIfEqual {43}
	021 Move X8, 0x52D000
	022 Move X8, [X8+976]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X20
	027 Call 0x1C17E08
	028 Move X1, [X0]
	029 Move X22, [X0+8]
	030 Move X21, [X0+16]
	031 Move X20, [X0+24]
	032 Move X0, [X19]
	033 Move X2, X31
	034 Call String.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {43}
	039 Move X8, [X19+8]
	040 Xor X9, X8, X22
	041 Compare W9, 0
	042 JumpIfEqual {50}
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move W0, W31
	048 Move X30, [X31+48]
	049 Return X0
	050 And X31, X9, 0xFFFFFFFFFFFF
	051 Move X9, X22
	052 ShiftRight X9, 48
	053 And X9, X9, 0x7FFFFFFF
	054 Move X8, X8
	055 ShiftRight X8, 48
	056 And X8, X8, 0x7FFFFFFF
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, [X19+16]
	059 Move X1, X21
	060 Move X2, X31
	061 Call String.op_Equality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {43}
	066 Move X0, [X19+24]
	067 Move X1, X20
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X2, X31
	073 Move X30, [X31+48]
	074 Call String.op_Equality, X0, X1
	075 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C33C68 LDR X24, [X9]
	0x03C33C6C CBNZ W8, 0x3C33C74
	0x03C33C70 BL 0x1C16DFC
	0x03C33C74 MOV X0, X24
	0x03C33C78 MOV X1, X31
	0x03C33C7C BL 0x338C698
	0x03C33C80 MOV X1, X0
	0x03C33C84 MOV X0, X22
	0x03C33C88 MOV X2, X31
	0x03C33C8C BL 0x3395194
	0x03C33C90 ANDS W8, W0, 0x1
	0x03C33C94 CSEL X19, X31, X19, NE
	0x03C33C98 CBNZ W8, 0x3C33D28
	0x03C33C9C ADRP X8, 0x4E7000
	0x03C33CA0 LDR X0, [X28]
	0x03C33CA4 LDR X22, [X31 + 0x100]
	0x03C33CA8 LDR X8, [X8 + 0xD98]
	0x03C33CAC LDR W9, [X0 + 0xE0]
	0x03C33CB0 LDR X24, [X8]
	0x03C33CB4 CBNZ W9, 0x3C33CBC
	0x03C33CB8 BL 0x1C16DFC
	0x03C33CBC MOV X0, X24
	0x03C33CC0 MOV X1, X31
	0x03C33CC4 BL 0x338C698
	0x03C33CC8 MOV X1, X0
	0x03C33CCC MOV X0, X22
	0x03C33CD0 MOV X2, X31
	0x03C33CD4 BL 0x3395194
	0x03C33CD8 ANDS W8, W0, 0x1
	0x03C33CDC CSEL X27, X31, X19, NE
	0x03C33CE0 CBNZ W8, 0x3C33D28
	0x03C33CE4 ADRP X8, 0x4E7000
	0x03C33CE8 LDR X0, [X28]
	0x03C33CEC LDR X22, [X31 + 0x100]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7B3000
	008 Move X20, 0x4E9000
	009 Move W8, [X21+720]
	010 Move X20, [X20+2832]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x52D000
	017 Move X0, [X0+984]
	018 Call 0x1C17CF4
	019 Move X0, 0x4E9000
	020 Move X0, [X0+2832]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+720], W8
	024 Move X0, [X20]
	025 Move X23, 0x52D000
	026 Move X22, [X19]
	027 Move X20, [X19+8]
	028 Move X21, [X19+16]
	029 Move X19, [X19+24]
	030 Move W8, [X0+224]
	031 Move X23, [X23+984]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X4, [X23]
	036 Move X0, X22
	037 Move X1, X20
	038 Move X2, X21
	039 Move X3, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Call 0x21E9B48, X0, X1, X2, X3
	047 Return X0

Method: System.String ToString()

Disassembly:
	0x03C33CF0 LDR X8, [X8 + 0xDA0]
	0x03C33CF4 LDR W9, [X0 + 0xE0]
	0x03C33CF8 LDR X24, [X8]
	0x03C33CFC CBNZ W9, 0x3C33D04
	0x03C33D00 BL 0x1C16DFC
	0x03C33D04 MOV X0, X24
	0x03C33D08 MOV X1, X31
	0x03C33D0C BL 0x338C698
	0x03C33D10 MOV X1, X0
	0x03C33D14 MOV X0, X22
	0x03C33D18 MOV X2, X31
	0x03C33D1C BL 0x3395194
	0x03C33D20 TBZ X0, 0x0, 0x3C346A0
	0x03C33D24 ADD X25, X19, 0x38
	0x03C33D28 MOVZ W8, 0x1
	0x03C33D2C STRB W8, [X25]
	0x03C33D30 CBZ X20, 0x3C34514
	0x03C33D34 LDR X8, [X20]
	0x03C33D38 MOVZ W1, 0x18
	0x03C33D3C MOV X0, X20
	0x03C33D40 LDR X9, [X8 + 0x688]
	0x03C33D44 LDR X2, [X8 + 0x690]
	0x03C33D48 BLR X9
	0x03C33D4C ADRP X8, 0x50D000
	0x03C33D50 LDR X8, [X8 + 0xBB8]
	0x03C33D54 MOV X24, X0
	0x03C33D58 LDR X8, [X8]
	0x03C33D5C MOV X0, X8
	0x03C33D60 BL 0x1C16F10
	0x03C33D64 ADRP X8, 0x526000
	0x03C33D68 LDR X8, [X8 + 0xC90]
	0x03C33D6C MOV X22, X0
	0x03C33D70 LDR X1, [X8]
	0x03C33D74 BL 0x301B7C4
	0x03C33D78 CBZ X24, 0x3C34514
	0x03C33D7C LDR X8, [X24 + 0x18]
	0x03C33D80 CMP W8, 0x1
	0x03C33D84 B.LT 0x3C33E48
	0x03C33D88 AND X8, X8, 0x0
	0x03C33D8C CBZ X8, 0x3C33E44
	0x03C33D90 ADRP X19, 0x50D000
	0x03C33D94 LDR X19, [X19 + 0xB58]
	0x03C33D98 MOV X27, X31
	0x03C33D9C SUB X28, X8, 0x1
	0x03C33DA0 ADD X29, X24, 0x20
	0x03C33DA4 LDR X0, [X26]
	0x03C33DA8 LDR X25, [X29, X27, LSL #3]
	0x03C33DAC LDR W8, [X0 + 0xE0]
	0x03C33DB0 CBNZ W8, 0x3C33DB8
	0x03C33DB4 BL 0x1C16DFC
	0x03C33DB8 MOV X0, X25
	0x03C33DBC MOV W1, W21
	0x03C33DC0 BL 0x3C34790
	0x03C33DC4 TBZ X0, 0x0, 0x3C33E2C
	0x03C33DC8 LDR W8, [X24 + 0x18]
	0x03C33DCC CMP X27, X8
	0x03C33DD0 B.CS 0x3C33E44
	0x03C33DD4 CBZ X22, 0x3C34514
	0x03C33DD8 LDR W10, [X22 + 0x1C]
	0x03C33DDC LDR X1, [X29, X27, LSL #3]
	0x03C33DE0 LDR X8, [X22 + 0x10]
	0x03C33DE4 LDR X9, [X19]
	0x03C33DE8 ADD W10, W10, 0x1
	0x03C33DEC STR W10, [X22 + 0x1C]
	0x03C33DF0 CBZ X8, 0x3C34514
	0x03C33DF4 LDRSW X10, [X22 + 0x18]
	0x03C33DF8 LDR W11, [X8 + 0x18]
	0x03C33DFC CMP W10, W11
	0x03C33E00 B.CS 0x3C33E18
	0x03C33E04 ADD W9, W10, 0x1
	0x03C33E08 ADD X8, X8, X10, 0x3, LSL
	0x03C33E0C STR W9, [X22 + 0x18]
	0x03C33E10 STR X1, [X8 + 0x20]
	0x03C33E14 B 0x3C33E2C
	0x03C33E18 LDR X8, [X9 + 0x20]
	0x03C33E1C MOV X0, X22
	0x03C33E20 LDR X8, [X8 + 0xC0]
	0x03C33E24 LDR X2, [X8 + 0x70]
	0x03C33E28 BL 0x301BF90
	0x03C33E2C CMP X28, X27
	0x03C33E30 B.EQ 0x3C33E48
	0x03C33E34 LDR W8, [X24 + 0x18]
	0x03C33E38 ADD X27, X27, 0x1
	0x03C33E3C CMP X27, X8
	0x03C33E40 B.CC 0x3C33DA4
	0x03C33E44 BL 0x1C16F28
	0x03C33E48 ADRP X8, 0x52C000
	0x03C33E4C LDR X8, [X8 + 0x428]
	0x03C33E50 MOV X0, X22
	0x03C33E54 LDR X1, [X8]
	0x03C33E58 BL 0x21B2678
	0x03C33E5C TBZ X0, 0x0, 0x3C34090
	0x03C33E60 ADRP X8, 0x52C000
	0x03C33E64 LDR X8, [X8 + 0x430]
	0x03C33E68 LDR X1, [X8]
	0x03C33E6C MOV X0, X22
	0x03C33E70 BL 0x21C2FD4
	0x03C33E74 CBZ X0, 0x3C346E8
	0x03C33E78 LDR X8, [X0]
	0x03C33E7C LDP X9, X1, [X8 + 0x1D8]
	0x03C33E80 BLR X9
	0x03C33E84 CBZ X0, 0x3C346EC
	0x03C33E88 LDR X8, [X0]
	0x03C33E8C LDP X9, X1, [X8 + 0x1A8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x7B3000
	009 Move X21, 0x4C1000
	010 Move W8, [X20+721]
	011 Move X21, [X21+2512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x52D000
	018 Move X0, [X0+960]
	019 Call 0x1C17CF4
	020 Move X0, 0x4C1000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0x52D000
	024 Move X0, [X0+992]
	025 Call 0x1C17CF4
	026 Move X0, 0x4F4000
	027 Move X0, [X0+864]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+721], W8
	031 Move X0, [X21]
	032 Move W1, 4
	033 Call 0x1C17D6C
	034 Compare X0, 0
	035 JumpIfEqual {121}
	036 Move X21, [X19]
	037 Move X20, X0
	038 Compare X21, 0
	039 JumpIfEqual {46}
	040 Move X8, [X20]
	041 Move X0, X21
	042 Move X1, [X8+64]
	043 Call 0x1C17E00
	044 Compare X0, 0
	045 JumpIfEqual {118}
	046 Move W8, [X20+24]
	047 Compare W8, 0
	048 JumpIfEqual {117}
	049 Move X8, 0x52D000
	050 Move X8, [X8+960]
	051 Move [X20+32], X21
	052 Move X9, [X19+8]
	053 Add X1, X31, 8
	054 Move X0, [X8]
	055 Move [X31+8], X9
	056 Call 0x1C17E04
	057 Move X21, X0
	058 Compare X0, 0
	059 JumpIfEqual {66}
	060 Move X8, [X20]
	061 Move X0, X21
	062 Move X1, [X8+64]
	063 Call 0x1C17E00
	064 Compare X0, 0
	065 JumpIfEqual {118}
	066 Move W8, [X20+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X20+40], X21
	069 Move X21, X19
	070 Add X21, X21, 24
	071 Move X0, [X21]
	072 Move X23, 0x52D000
	073 Move X22, 0x4F4000
	074 Move X23, [X23+992]
	075 Move X22, [X22+864]
	076 Move X1, X31
	077 Call String.IsNullOrEmpty, X0
	078 And W31, W0, 1
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Move X22, [X8]
	081 Move X21, [X23]
	082 Compare X22, 0
	083 JumpIfEqual {90}
	084 Move X8, [X20]
	085 Move X0, X22
	086 Move X1, [X8+64]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {118}
	090 Move W8, [X20+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X20+48], X22
	093 Move X19, [X19+16]
	094 Compare X19, 0
	095 JumpIfEqual {103}
	096 Move X8, [X20]
	097 Move X0, X19
	098 Move X1, [X8+64]
	099 Call 0x1C17E00
	100 Compare X0, 0
	101 JumpIfEqual {118}
	102 Move W8, [X20+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, X21
	105 Move X1, X20
	106 Move X2, X31
	107 Move [X20+56], X19
	108 Call String.Format, X0, X1
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X30, [X31+16]
	114 Move X23, [X31+24]
	115 Add X31, X31, 64
	116 Return X0
	117 Call 0x1C17F28
	118 Call 0x1C17F44
	119 Move X1, X31
	120 Call 0x1C17DEC
	121 Call 0x1C17F20

