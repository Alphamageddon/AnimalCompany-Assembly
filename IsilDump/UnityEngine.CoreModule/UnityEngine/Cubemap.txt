Type: UnityEngine.Cubemap

Method: System.Boolean Internal_CreateImpl(UnityEngine.Cubemap mono, System.Int32 ext, System.Int32 mipCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.TextureColorSpace colorSpace, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.IntPtr nativeTex)

Disassembly:
	0x03C1D7F8 MOV W22, W2
	0x03C1D7FC BL 0x3C3C544
	0x03C1D800 MOV W4, W0
	0x03C1D804 MOV X0, X24
	0x03C1D808 MOV W1, W23
	0x03C1D80C MOV W2, W22
	0x03C1D810 MOV W3, W21
	0x03C1D814 MOV W5, W20
	0x03C1D818 MOV W6, W19
	0x03C1D81C LDP X20, X19, [X31 + 0x30]
	0x03C1D820 LDP X22, X21, [X31 + 0x20]
	0x03C1D824 LDP X24, X23, [X31 + 0x10]
	0x03C1D828 LDR X30, [X31], #0x40
	0x03C1D82C B 0x3C1D830
	0x03C1D830 SUB X31, X31, 0x60
	0x03C1D834 STP X30, X27, [X31 + 0x10]
	0x03C1D838 STP X26, X25, [X31 + 0x20]
	0x03C1D83C STP X24, X23, [X31 + 0x30]
	0x03C1D840 STP X22, X21, [X31 + 0x40]
	0x03C1D844 STP X20, X19, [X31 + 0x50]
	0x03C1D848 ADRP X27, 0x7C7000
	0x03C1D84C ADRP X26, 0x542000
	0x03C1D850 LDRB W8, [X27 + 0xD79]
	0x03C1D854 LDR X26, [X26 + 0x48]
	0x03C1D858 MOV W20, W6
	0x03C1D85C MOV W19, W5
	0x03C1D860 MOV W21, W4
	0x03C1D864 MOV W22, W3
	0x03C1D868 MOV W23, W2
	0x03C1D86C MOV W24, W1
	0x03C1D870 MOV X25, X0
	0x03C1D874 TBNZ X8, 0x0, 0x3C1D88C
	0x03C1D878 ADRP X0, 0x542000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7C8000
	011 Move X7, [X26+3368]
	012 Move X19, X6
	013 Move W20, W5
	014 Move W21, W4
	015 Move W22, W3
	016 Move W23, W2
	017 Move W24, W1
	018 Move X25, X0
	019 Compare X7, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51523584
	022 Add X0, X0, 242
	023 Call 0x1C17CB8
	024 Move X7, X0
	025 Move [X26+3368], X0
	026 Move X0, X25
	027 Move W1, W24
	028 Move W2, W23
	029 Move W3, W22
	030 Move W4, W21
	031 Move W5, W20
	032 Move X6, X19
	033 Move X20, [X31+64]
	034 Move X19, [X31+72]
	035 Move X22, [X31+48]
	036 Move X21, [X31+56]
	037 Move X24, [X31+32]
	038 Move X23, [X31+40]
	039 Move X26, [X31+16]
	040 Move X25, [X31+24]
	041 Move X30, [X31+80]
	042 CallNoReturn X7

Method: System.Void Internal_Create(UnityEngine.Cubemap mono, System.Int32 ext, System.Int32 mipCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.TextureColorSpace colorSpace, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.IntPtr nativeTex)

Disassembly:
	0x03C1D87C LDR X0, [X0 + 0x48]
	0x03C1D880 BL 0x1C16CF4
	0x03C1D884 MOVZ W8, 0x1
	0x03C1D888 STRB W8, [X27 + 0xD79]
	0x03C1D88C LDR X0, [X26]
	0x03C1D890 LDR W8, [X0 + 0xE0]
	0x03C1D894 CBNZ W8, 0x3C1D89C
	0x03C1D898 BL 0x1C16DFC
	0x03C1D89C MOV X0, X25
	0x03C1D8A0 BL 0x3C1A69C
	0x03C1D8A4 MOV X0, X25
	0x03C1D8A8 MOV W1, W21
	0x03C1D8AC MOV W2, W31
	0x03C1D8B0 BL 0x3C1B024
	0x03C1D8B4 TBZ X0, 0x0, 0x3C1D900
	0x03C1D8B8 MOV W0, W19
	0x03C1D8BC BL 0x3C1D91C
	0x03C1D8C0 LDR X0, [X26]
	0x03C1D8C4 LDR W8, [X0 + 0xE0]
	0x03C1D8C8 CBNZ W8, 0x3C1D8D0
	0x03C1D8CC BL 0x1C16DFC
	0x03C1D8D0 MOV W1, W21
	0x03C1D8D4 BL 0x3C1AE04
	0x03C1D8D8 MOV W6, W0
	0x03C1D8DC MOV X0, X25
	0x03C1D8E0 MOV W1, W24
	0x03C1D8E4 MOV W2, W23
	0x03C1D8E8 MOV W3, W22
	0x03C1D8EC MOV W4, W20
	0x03C1D8F0 MOV W5, W21
	0x03C1D8F4 MOV W7, W19
	0x03C1D8F8 STR X31, [X31]
	0x03C1D8FC BL 0x3C1D4C8
	0x03C1D900 LDP X20, X19, [X31 + 0x50]
	0x03C1D904 LDP X22, X21, [X31 + 0x40]
	0x03C1D908 LDP X24, X23, [X31 + 0x30]
	0x03C1D90C LDP X26, X25, [X31 + 0x20]
	0x03C1D910 LDP X30, X27, [X31 + 0x10]
	0x03C1D914 ADD X31, X31, 0x60
	0x03C1D918 RET
	0x03C1D91C TBNZ X0, 0x6, 0x3C1D924
	0x03C1D920 RET
	0x03C1D924 STP X30, X19, [X31 - 0x10]!
	0x03C1D928 ADRP X0, 0x4DE000
	0x03C1D92C LDR X0, [X0 + 0x578]
	0x03C1D930 BL 0x1C16D08
	0x03C1D934 BL 0x1C16F10
	0x03C1D938 MOV X19, X0
	0x03C1D93C ADRP X0, 0x542000
	0x03C1D940 LDR X0, [X0 + 0xF0]
	0x03C1D944 BL 0x1C16D08
	0x03C1D948 MOV X1, X0
	0x03C1D94C MOV X0, X19

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7C8000
	011 Move X8, [X26+3368]
	012 Move X19, X6
	013 Move W20, W5
	014 Move W21, W4
	015 Move W22, W3
	016 Move W23, W2
	017 Move W24, W1
	018 Move X25, X0
	019 Compare X8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, -51523584
	022 Add X0, X0, 242
	023 Call 0x1C17CB8
	024 Move X8, X0
	025 Move [X26+3368], X0
	026 Move X0, X25
	027 Move W1, W24
	028 Move W2, W23
	029 Move W3, W22
	030 Move W4, W21
	031 Move W5, W20
	032 Move X6, X19
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {48}
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X22, [X31+48]
	041 Move X21, [X31+56]
	042 Move X24, [X31+32]
	043 Move X23, [X31+40]
	044 Move X26, [X31+16]
	045 Move X25, [X31+24]
	046 Move X30, [X31+80]
	047 Return 
	048 Move X0, 0x500000
	049 Move X0, [X0+464]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0x543000
	054 Move X0, [X0+80]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call UnityException..ctor, X0, X1
	060 Move X0, 0x543000
	061 Move X0, [X0+168]
	062 Call 0x1C17D08
	063 Move X1, X0
	064 Move X0, X19
	065 Call 0x1C17DEC

Method: System.Void ApplyImpl(System.Boolean updateMipmaps, System.Boolean makeNoLongerReadable)

Disassembly:
	0x03C1D950 MOV X2, X31
	0x03C1D954 BL 0x3314A68
	0x03C1D958 ADRP X0, 0x542000
	0x03C1D95C LDR X0, [X0 + 0xF8]
	0x03C1D960 BL 0x1C16D08
	0x03C1D964 MOV X1, X0
	0x03C1D968 MOV X0, X19
	0x03C1D96C BL 0x1C16DEC
	0x03C1D970 SUB X31, X31, 0x20
	0x03C1D974 STR X30, [X31 + 0x10]
	0x03C1D978 MOV X6, X31
	0x03C1D97C MOV W7, W31
	0x03C1D980 BL 0x3C1D9AC
	0x03C1D984 LDR X30, [X31 + 0x10]
	0x03C1D988 ADD X31, X31, 0x20
	0x03C1D98C RET
	0x03C1D990 SUB X31, X31, 0x20
	0x03C1D994 STR X30, [X31 + 0x10]
	0x03C1D998 MOV W7, W31
	0x03C1D99C BL 0x3C1D9AC
	0x03C1D9A0 LDR X30, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7C8000
	007 Move X3, [X22+3376]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51568640
	014 Add X0, X0, 3741
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3376], X0
	018 And W1, W20, 1
	019 And W2, W19, 1
	020 Move X0, X21
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Boolean get_isReadable()

Disassembly:
	0x03C1D9A4 ADD X31, X31, 0x20
	0x03C1D9A8 RET
	0x03C1D9AC SUB X31, X31, 0x70
	0x03C1D9B0 STP X29, X30, [X31 + 0x10]
	0x03C1D9B4 STP X28, X27, [X31 + 0x20]
	0x03C1D9B8 STP X26, X25, [X31 + 0x30]
	0x03C1D9BC STP X24, X23, [X31 + 0x40]
	0x03C1D9C0 STP X22, X21, [X31 + 0x50]
	0x03C1D9C4 STP X20, X19, [X31 + 0x60]
	0x03C1D9C8 ADRP X27, 0x7C7000
	0x03C1D9CC ADRP X28, 0x542000
	0x03C1D9D0 LDRB W8, [X27 + 0xD7A]
	0x03C1D9D4 LDR X28, [X28 + 0x48]
	0x03C1D9D8 MOV W25, W7
	0x03C1D9DC MOV X22, X6

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C8000
	005 Move X1, [X20+3384]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51404800
	010 Add X0, X0, 2555
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3384], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetPixelImpl(System.Int32 image, System.Int32 mip, System.Int32 x, System.Int32 y, UnityEngine.Color color)

Disassembly:
	0x03C1D9E0 MOV W19, W5
	0x03C1D9E4 MOV W26, W4
	0x03C1D9E8 MOV W20, W3
	0x03C1D9EC MOV W21, W2
	0x03C1D9F0 MOV W23, W1
	0x03C1D9F4 MOV X24, X0
	0x03C1D9F8 TBNZ X8, 0x0, 0x3C1DA1C
	0x03C1D9FC ADRP X0, 0x536000
	0x03C1DA00 LDR X0, [X0 + 0x90]
	0x03C1DA04 BL 0x1C16CF4
	0x03C1DA08 ADRP X0, 0x542000
	0x03C1DA0C LDR X0, [X0 + 0x48]
	0x03C1DA10 BL 0x1C16CF4
	0x03C1DA14 MOVZ W8, 0x1
	0x03C1DA18 STRB W8, [X27 + 0xD7A]
	0x03C1DA1C LDR X0, [X28]
	0x03C1DA20 LDR W8, [X0 + 0xE0]
	0x03C1DA24 CBNZ W8, 0x3C1DA2C
	0x03C1DA28 BL 0x1C16DFC
	0x03C1DA2C MOV X0, X24
	0x03C1DA30 BL 0x3C1A69C
	0x03C1DA34 MOV X0, X24
	0x03C1DA38 MOV W1, W26
	0x03C1DA3C BL 0x3C1AE64
	0x03C1DA40 TBZ X0, 0x0, 0x3C1DAF0
	0x03C1DA44 ADRP X29, 0x536000
	0x03C1DA48 LDR X29, [X29 + 0x90]
	0x03C1DA4C LDR X0, [X29]
	0x03C1DA50 LDR W8, [X0 + 0xE0]
	0x03C1DA54 CBNZ W8, 0x3C1DA5C
	0x03C1DA58 BL 0x1C16DFC
	0x03C1DA5C MOV W0, W26
	0x03C1DA60 MOV W1, W31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0x7C8000
	010 Move X8, [X24+3400]
	011 Move W19, W4
	012 Move W20, W3
	013 Move W21, W2
	014 Move W22, W1
	015 Move X23, X0
	016 Move [X31], S0
	017 Move [X31+8], S1
	018 Move [X31+8], S2
	019 Move [X31+16], S3
	020 Compare X8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51449856
	023 Add X0, X0, 690
	024 Call 0x1C17CB8
	025 Move X8, X0
	026 Move [X24+3400], X0
	027 Add X5, X31, 0
	028 Move X0, X23
	029 Move W1, W22
	030 Move W2, W21
	031 Move W3, W20
	032 Move W4, W19
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X20, [X31+64]
	035 Move X19, [X31+72]
	036 Move X22, [X31+48]
	037 Move X21, [X31+56]
	038 Move X24, [X31+32]
	039 Move X23, [X31+40]
	040 Move X30, [X31+16]
	041 Add X31, X31, 80
	042 Return 

Method: System.Boolean ValidateFormat(UnityEngine.TextureFormat format, System.Int32 width)

Disassembly:
	0x03C1DAD8 MOV W4, W19
	0x03C1DADC MOV W5, W27
	0x03C1DAE0 MOV W6, W31
	0x03C1DAE4 MOV W7, W25
	0x03C1DAE8 STR X22, [X31]
	0x03C1DAEC BL 0x3C1D4C8
	0x03C1DAF0 LDP X20, X19, [X31 + 0x60]
	0x03C1DAF4 LDP X22, X21, [X31 + 0x50]
	0x03C1DAF8 LDP X24, X23, [X31 + 0x40]
	0x03C1DAFC LDP X26, X25, [X31 + 0x30]
	0x03C1DB00 LDP X28, X27, [X31 + 0x20]
	0x03C1DB04 LDP X29, X30, [X31 + 0x10]
	0x03C1DB08 ADD X31, X31, 0x70
	0x03C1DB0C RET
	0x03C1DB10 SUB X31, X31, 0x50
	0x03C1DB14 STP X30, X25, [X31 + 0x10]
	0x03C1DB18 STP X24, X23, [X31 + 0x20]
	0x03C1DB1C STP X22, X21, [X31 + 0x30]
	0x03C1DB20 STP X20, X19, [X31 + 0x40]
	0x03C1DB24 ADRP X25, 0x7C7000
	0x03C1DB28 LDRB W8, [X25 + 0xD7B]
	0x03C1DB2C MOV W24, W5
	0x03C1DB30 MOV W19, W4
	0x03C1DB34 MOV W20, W3
	0x03C1DB38 MOV W21, W2
	0x03C1DB3C MOV W22, W1
	0x03C1DB40 MOV X23, X0
	0x03C1DB44 TBZ X8, 0x0, 0x3C1DB74
	0x03C1DB48 TBZ X24, 0x0, 0x3C1DB8C
	0x03C1DB4C ADRP X24, 0x542000
	0x03C1DB50 LDR X24, [X24 + 0x48]
	0x03C1DB54 LDR X0, [X24]
	0x03C1DB58 LDR W8, [X0 + 0xE0]
	0x03C1DB5C CBNZ W8, 0x3C1DB68
	0x03C1DB60 BL 0x1C16DFC
	0x03C1DB64 LDR X0, [X24]
	0x03C1DB68 LDR X8, [X0 + 0xB8]
	0x03C1DB6C LDR W5, [X8]
	0x03C1DB70 B 0x3C1DB90
	0x03C1DB74 ADRP X0, 0x542000
	0x03C1DB78 LDR X0, [X0 + 0x48]
	0x03C1DB7C BL 0x1C16CF4
	0x03C1DB80 MOVZ W8, 0x1
	0x03C1DB84 STRB W8, [X25 + 0xD7B]
	0x03C1DB88 TBNZ X24, 0x0, 0x3C1DB4C
	0x03C1DB8C MOVZ W5, 0x1
	0x03C1DB90 MOV X0, X23
	0x03C1DB94 MOV W1, W22
	0x03C1DB98 MOV W2, W21
	0x03C1DB9C MOV W3, W20
	0x03C1DBA0 MOV W4, W19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move W20, W2
	007 Move W19, W1
	008 Call Texture.ValidateFormat, X0, X1
	009 Subtract W8, W19, 30
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W21, W0
	012 Move TEMP, X21
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {23}
	016 Move W0, W20
	017 Move X1, X31
	018 Call Mathf.IsPowerOfTwo, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {30}
	023 And W0, W21, 1
	024 Move X20, [X31+48]
	025 Move X19, [X31+56]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Add X31, X31, 64
	029 Return X0
	030 Move X0, 0x537000
	031 Move X0, [X0+1216]
	032 Call 0x1C17D08
	033 Move TEMP, 0
	034 Not TEMP
	035 Move X8, TEMP
	036 Move [X31+8], X0
	037 Move [X31+16], X8
	038 Add X0, X31, 8
	039 Move X1, X31
	040 Move [X31+24], W19
	041 Call Enum.ToString, X0
	042 Move X19, X0
	043 Move X0, 0x543000
	044 Move X0, [X0+176]
	045 Call 0x1C17D08
	046 Move X1, X19
	047 Move X2, X31
	048 Call String.Format, X0, X1
	049 Move X19, X0
	050 Move X0, 0x500000
	051 Move X0, [X0+464]
	052 Call 0x1C17D08
	053 Call 0x1C17F10
	054 Move X1, X19
	055 Move X2, X31
	056 Move X20, X0
	057 Call UnityException..ctor, X0, X1
	058 Move X0, 0x543000
	059 Move X0, [X0+184]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X20
	063 Call 0x1C17DEC

Method: System.Boolean ValidateFormat(UnityEngine.Experimental.Rendering.GraphicsFormat format, System.Int32 width)

Disassembly:
	0x03C1DBA4 MOV X6, X31
	0x03C1DBA8 MOV W7, W31
	0x03C1DBAC BL 0x3C1D9AC
	0x03C1DBB0 LDP X20, X19, [X31 + 0x40]
	0x03C1DBB4 LDP X22, X21, [X31 + 0x30]
	0x03C1DBB8 LDP X24, X23, [X31 + 0x20]
	0x03C1DBBC LDP X30, X25, [X31 + 0x10]
	0x03C1DBC0 ADD X31, X31, 0x50
	0x03C1DBC4 RET
	0x03C1DBC8 SUB X31, X31, 0x60
	0x03C1DBCC STR X30, [X31 + 0x10]
	0x03C1DBD0 STP X26, X25, [X31 + 0x20]
	0x03C1DBD4 STP X24, X23, [X31 + 0x30]
	0x03C1DBD8 STP X22, X21, [X31 + 0x40]
	0x03C1DBDC STP X20, X19, [X31 + 0x50]
	0x03C1DBE0 ADRP X26, 0x7C7000
	0x03C1DBE4 LDRB W8, [X26 + 0xD7C]
	0x03C1DBE8 MOV W22, W6
	0x03C1DBEC MOV W25, W5
	0x03C1DBF0 MOV W19, W4
	0x03C1DBF4 MOV W20, W3
	0x03C1DBF8 MOV W21, W2
	0x03C1DBFC MOV W23, W1
	0x03C1DC00 MOV X24, X0
	0x03C1DC04 TBZ X8, 0x0, 0x3C1DC34
	0x03C1DC08 TBZ X25, 0x0, 0x3C1DC4C
	0x03C1DC0C ADRP X25, 0x542000
	0x03C1DC10 LDR X25, [X25 + 0x48]
	0x03C1DC14 LDR X0, [X25]
	0x03C1DC18 LDR W8, [X0 + 0xE0]
	0x03C1DC1C CBNZ W8, 0x3C1DC28
	0x03C1DC20 BL 0x1C16DFC
	0x03C1DC24 LDR X0, [X25]
	0x03C1DC28 LDR X8, [X0 + 0xB8]
	0x03C1DC2C LDR W5, [X8]
	0x03C1DC30 B 0x3C1DC50
	0x03C1DC34 ADRP X0, 0x542000
	0x03C1DC38 LDR X0, [X0 + 0x48]
	0x03C1DC3C BL 0x1C16CF4
	0x03C1DC40 MOVZ W8, 0x1
	0x03C1DC44 STRB W8, [X26 + 0xD7C]
	0x03C1DC48 TBNZ X25, 0x0, 0x3C1DC0C
	0x03C1DC4C MOVZ W5, 0x1
	0x03C1DC50 AND W7, W22, 0x1
	0x03C1DC54 MOV X0, X24
	0x03C1DC58 MOV W1, W23
	0x03C1DC5C MOV W2, W21
	0x03C1DC60 MOV W3, W20
	0x03C1DC64 MOV W4, W19
	0x03C1DC68 MOV X6, X31
	0x03C1DC6C BL 0x3C1D9AC
	0x03C1DC70 LDP X20, X19, [X31 + 0x50]
	0x03C1DC74 LDP X22, X21, [X31 + 0x40]
	0x03C1DC78 LDP X24, X23, [X31 + 0x30]
	0x03C1DC7C LDP X26, X25, [X31 + 0x20]
	0x03C1DC80 LDR X30, [X31 + 0x10]
	0x03C1DC84 ADD X31, X31, 0x60
	0x03C1DC88 RET
	0x03C1DC8C SUB X31, X31, 0x60
	0x03C1DC90 STR X30, [X31 + 0x10]
	0x03C1DC94 STP X26, X25, [X31 + 0x20]
	0x03C1DC98 STP X24, X23, [X31 + 0x30]
	0x03C1DC9C STP X22, X21, [X31 + 0x40]
	0x03C1DCA0 STP X20, X19, [X31 + 0x50]
	0x03C1DCA4 ADRP X26, 0x7C7000
	0x03C1DCA8 LDRB W8, [X26 + 0xD7D]
	0x03C1DCAC MOV X19, X6
	0x03C1DCB0 MOV W25, W5
	0x03C1DCB4 MOV W20, W4
	0x03C1DCB8 MOV W21, W3
	0x03C1DCBC MOV W22, W2
	0x03C1DCC0 MOV W23, W1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x7C8000
	008 Move W8, [X22+3392]
	009 Move W20, W2
	010 Move W19, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x537000
	017 Move X0, [X0+144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3392], W8
	021 Move X0, X21
	022 Move W1, W19
	023 Move W2, W31
	024 Call Texture.ValidateFormat, X0, X1, X2
	025 Move W21, W0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {51}
	030 Move X8, 0x537000
	031 Move X8, [X8+144]
	032 Move X0, [X8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move W0, W19
	038 Move X1, X31
	039 Call GraphicsFormatUtility.IsPVRTCFormat, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {51}
	044 Move W0, W20
	045 Move X1, X31
	046 Call Mathf.IsPowerOfTwo, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {59}
	051 And W0, W21, 1
	052 Move X20, [X31+64]
	053 Move X19, [X31+72]
	054 Move X22, [X31+48]
	055 Move X21, [X31+56]
	056 Move X30, [X31+32]
	057 Add X31, X31, 80
	058 Return X0
	059 Move X0, 0x537000
	060 Move X0, [X0+1208]
	061 Call 0x1C17D08
	062 Move TEMP, 0
	063 Not TEMP
	064 Move X8, TEMP
	065 Move [X31+8], X0
	066 Move [X31+16], X8
	067 Add X0, X31, 8
	068 Move X1, X31
	069 Move [X31+24], W19
	070 Call Enum.ToString, X0
	071 Move X19, X0
	072 Move X0, 0x543000
	073 Move X0, [X0+176]
	074 Call 0x1C17D08
	075 Move X1, X19
	076 Move X2, X31
	077 Call String.Format, X0, X1
	078 Move X19, X0
	079 Move X0, 0x500000
	080 Move X0, [X0+464]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X1, X19
	084 Move X2, X31
	085 Move X20, X0
	086 Call UnityException..ctor, X0, X1
	087 Move X0, 0x543000
	088 Move X0, [X0+192]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X20
	092 Call 0x1C17DEC

Method: System.Void .ctor(System.Int32 width, UnityEngine.Experimental.Rendering.DefaultFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C1DCC4 MOV X24, X0
	0x03C1DCC8 TBZ X8, 0x0, 0x3C1DCF8
	0x03C1DCCC TBZ X25, 0x0, 0x3C1DD10
	0x03C1DCD0 ADRP X25, 0x542000
	0x03C1DCD4 LDR X25, [X25 + 0x48]
	0x03C1DCD8 LDR X0, [X25]
	0x03C1DCDC LDR W8, [X0 + 0xE0]
	0x03C1DCE0 CBNZ W8, 0x3C1DCEC
	0x03C1DCE4 BL 0x1C16DFC
	0x03C1DCE8 LDR X0, [X25]
	0x03C1DCEC LDR X8, [X0 + 0xB8]
	0x03C1DCF0 LDR W5, [X8]
	0x03C1DCF4 B 0x3C1DD14
	0x03C1DCF8 ADRP X0, 0x542000
	0x03C1DCFC LDR X0, [X0 + 0x48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X21, X0
	007 Move W0, W2
	008 Move X1, X31
	009 Move W19, W3
	010 Call SystemInfo.GetGraphicsFormat, X0
	011 Move W1, W20
	012 Move W3, W19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move W2, W0
	016 Move X0, X21
	017 Move X30, [X31+32]
	018 Move X21, [X31+40]

Method: System.Void .ctor(System.Int32 width, UnityEngine.Experimental.Rendering.DefaultFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.Int32 mipCount)

Disassembly:
	0x03C1DD88 ADRP X0, 0xFFFFFFFFFCF01000
	0x03C1DD8C ADD X0, X0, 0xB92
	0x03C1DD90 BL 0x1C16CB8
	0x03C1DD94 MOV X3, X0
	0x03C1DD98 STR X0, [X22 + 0xD60]
	0x03C1DD9C AND W1, W21, 0x1
	0x03C1DDA0 AND W2, W20, 0x1
	0x03C1DDA4 MOV X0, X19
	0x03C1DDA8 LDP X20, X19, [X31 + 0x20]
	0x03C1DDAC LDP X22, X21, [X31 + 0x10]
	0x03C1DDB0 LDR X30, [X31], #0x30
	0x03C1DDB4 BR X3
	0x03C1DDB8 MOV X1, X19
	0x03C1DDBC BL 0x3C1B1DC
	0x03C1DDC0 MOV X19, X0
	0x03C1DDC4 ADRP X0, 0x542000
	0x03C1DDC8 LDR X0, [X0 + 0x100]
	0x03C1DDCC BL 0x1C16D08
	0x03C1DDD0 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W21, W1
	007 Move X22, X0
	008 Move W0, W2
	009 Move X1, X31
	010 Move W19, W4
	011 Move W20, W3
	012 Call SystemInfo.GetGraphicsFormat, X0
	013 Move W2, W0
	014 Move X0, X22
	015 Move W1, W21
	016 Move W3, W20
	017 Move W4, W19
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move X30, [X31+48]

Method: System.Void .ctor(System.Int32 width, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C1DD00 BL 0x1C16CF4
	0x03C1DD04 MOVZ W8, 0x1
	0x03C1DD08 STRB W8, [X26 + 0xD7D]
	0x03C1DD0C TBNZ X25, 0x0, 0x3C1DCD0
	0x03C1DD10 MOVZ W5, 0x1
	0x03C1DD14 MOV X0, X24
	0x03C1DD18 MOV W1, W23
	0x03C1DD1C MOV W2, W22
	0x03C1DD20 MOV W3, W21
	0x03C1DD24 MOV W4, W20
	0x03C1DD28 MOV X6, X19
	0x03C1DD2C MOV W7, W31
	0x03C1DD30 BL 0x3C1D9AC
	0x03C1DD34 LDP X20, X19, [X31 + 0x50]
	0x03C1DD38 LDP X22, X21, [X31 + 0x40]
	0x03C1DD3C LDP X24, X23, [X31 + 0x30]
	0x03C1DD40 LDP X26, X25, [X31 + 0x20]
	0x03C1DD44 LDR X30, [X31 + 0x10]
	0x03C1DD48 ADD X31, X31, 0x60
	0x03C1DD4C RET
	0x03C1DD50 STR X30, [X31 - 0x30]!
	0x03C1DD54 STP X22, X21, [X31 + 0x10]
	0x03C1DD58 STP X20, X19, [X31 + 0x20]
	0x03C1DD5C LDR X8, [X0]
	0x03C1DD60 MOV W21, W1
	0x03C1DD64 MOV W20, W2
	0x03C1DD68 MOV X19, X0
	0x03C1DD6C LDP X9, X8, [X8 + 0x1E8]
	0x03C1DD70 MOV X1, X8
	0x03C1DD74 BLR X9
	0x03C1DD78 TBZ X0, 0x0, 0x3C1DDB8
	0x03C1DD7C ADRP X22, 0x7C7000
	0x03C1DD80 LDR X3, [X22 + 0xD60]
	0x03C1DD84 CBNZ X3, 0x3C1DD9C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7C8000
	009 Move X23, 0x543000
	010 Move W8, [X24+3393]
	011 Move X23, [X23+72]
	012 Move W19, W3
	013 Move W20, W2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x543000
	021 Move X0, [X0+72]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3393], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X23]
	031 Move X8, [X0+184]
	032 Move X0, X22
	033 Move W1, W21
	034 Move W2, W20
	035 Move W4, [X8]
	036 Move W3, W19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move X30, [X31+64]
	044 Call Cubemap..ctor, X0, X1, X2, X3, X4
	045 Return 

Method: System.Void .ctor(System.Int32 width, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.Int32 mipCount)

Disassembly:
	0x03C1DDD4 MOV X0, X19
	0x03C1DDD8 BL 0x1C16DEC
	0x03C1DDDC AND W1, W1, 0x1
	0x03C1DDE0 MOV W2, W31
	0x03C1DDE4 B 0x3C1DD50
	0x03C1DDE8 MOVZ W1, 0x1
	0x03C1DDEC MOV W2, W31
	0x03C1DDF0 B 0x3C1DD50
	0x03C1DDF4 STP D11, D10, [X31 - 0x50]!
	0x03C1DDF8 STP D9, D8, [X31 + 0x10]
	0x03C1DDFC STP X30, X23, [X31 + 0x20]
	0x03C1DE00 STP X22, X21, [X31 + 0x30]
	0x03C1DE04 STP X20, X19, [X31 + 0x40]
	0x03C1DE08 LDR X8, [X0]
	0x03C1DE0C MOV W23, W1
	0x03C1DE10 MOV W19, W4
	0x03C1DE14 MOV V8.16B, V3.16B
	0x03C1DE18 LDP X9, X8, [X8 + 0x1E8]
	0x03C1DE1C MOV V9.16B, V2.16B
	0x03C1DE20 MOV V10.16B, V1.16B
	0x03C1DE24 MOV V11.16B, V0.16B
	0x03C1DE28 MOV X1, X8
	0x03C1DE2C MOV W20, W3
	0x03C1DE30 MOV W21, W2
	0x03C1DE34 MOV X22, X0
	0x03C1DE38 BLR X9
	0x03C1DE3C TBZ X0, 0x0, 0x3C1DE7C
	0x03C1DE40 MOV X0, X22
	0x03C1DE44 MOV W1, W19
	0x03C1DE48 MOV W2, W23
	0x03C1DE4C MOV W3, W21
	0x03C1DE50 MOV W4, W20
	0x03C1DE54 MOV V2.16B, V9.16B
	0x03C1DE58 MOV V3.16B, V8.16B
	0x03C1DE5C LDP X20, X19, [X31 + 0x40]
	0x03C1DE60 LDP X22, X21, [X31 + 0x30]
	0x03C1DE64 LDP X30, X23, [X31 + 0x20]
	0x03C1DE68 LDP D9, D8, [X31 + 0x10]
	0x03C1DE6C MOV V0.16B, V11.16B
	0x03C1DE70 MOV V1.16B, V10.16B
	0x03C1DE74 LDP D11, D10, [X31], #0x50
	0x03C1DE78 B 0x3C1D334
	0x03C1DE7C MOV X1, X22
	0x03C1DE80 BL 0x3C1B1DC
	0x03C1DE84 MOV X19, X0
	0x03C1DE88 ADRP X0, 0x542000
	0x03C1DE8C LDR X0, [X0 + 0x108]
	0x03C1DE90 BL 0x1C16D08
	0x03C1DE94 MOV X1, X0
	0x03C1DE98 MOV X0, X19
	0x03C1DE9C BL 0x1C16DEC
	0x03C1DEA0 STP X30, X23, [X31 - 0x30]!
	0x03C1DEA4 STP X22, X21, [X31 + 0x10]
	0x03C1DEA8 STP X20, X19, [X31 + 0x20]
	0x03C1DEAC ADRP X22, 0x7C7000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C8000
	010 Move X24, 0x543000
	011 Move W8, [X25+3394]
	012 Move X24, [X24+72]
	013 Move W20, W4
	014 Move W19, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x543000
	023 Move X0, [X0+72]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3394], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X23
	033 Call Texture..ctor, X0
	034 Move X0, X23
	035 Move W1, W21
	036 Move W2, W22
	037 Call Cubemap.ValidateFormat, X0, X1, X2
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {68}
	042 Move W0, W19
	043 Call Cubemap.ValidateIsNotCrunched, X0
	044 Move X0, [X24]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move W1, W21
	050 Call Texture.GetTextureColorSpace, X0, X1
	051 Move W4, W0
	052 Move X0, X23
	053 Move W1, W22
	054 Move W2, W20
	055 Move W3, W21
	056 Move W5, W19
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X6, X31
	064 Move X30, [X31+64]
	065 Move X25, [X31+72]
	066 Call Cubemap.Internal_Create, X0, X1, X2, X3, X4, X5, X6
	067 Return 
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Move X25, [X31+72]
	076 Return 

Method: System.Void .ctor(System.Int32 width, UnityEngine.TextureFormat textureFormat, System.Int32 mipCount, System.IntPtr nativeTex, System.Boolean createUninitialized)

Disassembly:
	0x03C1DF04 LDR X0, [X8]
	0x03C1DF08 LDR W8, [X0 + 0xE0]
	0x03C1DF0C CBNZ W8, 0x3C1DF14
	0x03C1DF10 BL 0x1C16DFC
	0x03C1DF14 MOV X0, X31
	0x03C1DF18 BL 0x3338524
	0x03C1DF1C CBZ X0, 0x3C1DFF4
	0x03C1DF20 LDR X8, [X0]
	0x03C1DF24 LDR X9, [X8 + 0x218]
	0x03C1DF28 LDR X1, [X8 + 0x220]
	0x03C1DF2C BLR X9
	0x03C1DF30 MOV X21, X0
	0x03C1DF34 ADRP X8, 0x4D6000
	0x03C1DF38 LDR X8, [X8 + 0x9D0]
	0x03C1DF3C MOVZ W1, 0x2
	0x03C1DF40 LDR X0, [X8]
	0x03C1DF44 BL 0x1C16D6C
	0x03C1DF48 MOV X22, X0
	0x03C1DF4C MOV X0, X20
	0x03C1DF50 MOV X1, X19
	0x03C1DF54 MOV X2, X21
	0x03C1DF58 MOV X3, X31
	0x03C1DF5C BL 0x3C1E004
	0x03C1DF60 CBZ X22, 0x3C1DFF4
	0x03C1DF64 MOV X23, X0
	0x03C1DF68 CBZ X0, 0x3C1DF80
	0x03C1DF6C LDR X8, [X22]
	0x03C1DF70 MOV X0, X23
	0x03C1DF74 LDR X1, [X8 + 0x40]
	0x03C1DF78 BL 0x1C16E00
	0x03C1DF7C CBZ X0, 0x3C1DFF8
	0x03C1DF80 LDR W8, [X22 + 0x18]
	0x03C1DF84 CBZ W8, 0x3C1DFF0
	0x03C1DF88 ADD X0, X20, 0xC
	0x03C1DF8C MOV X1, X19
	0x03C1DF90 MOV X2, X21
	0x03C1DF94 MOV X3, X31
	0x03C1DF98 STR X23, [X22 + 0x20]
	0x03C1DF9C BL 0x3C1E004
	0x03C1DFA0 MOV X19, X0
	0x03C1DFA4 CBZ X0, 0x3C1DFBC
	0x03C1DFA8 LDR X8, [X22]
	0x03C1DFAC MOV X0, X19
	0x03C1DFB0 LDR X1, [X8 + 0x40]
	0x03C1DFB4 BL 0x1C16E00
	0x03C1DFB8 CBZ X0, 0x3C1DFF8
	0x03C1DFBC LDR W8, [X22 + 0x18]
	0x03C1DFC0 CMP W8, 0x1
	0x03C1DFC4 B.LS 0x3C1DFF0
	0x03C1DFC8 STR X19, [X22 + 0x28]
	0x03C1DFCC ADRP X8, 0x541000
	0x03C1DFD0 LDR X8, [X8 + 0xC88]
	0x03C1DFD4 MOV X1, X22
	0x03C1DFD8 LDP X20, X19, [X31 + 0x20]
	0x03C1DFDC LDP X22, X21, [X31 + 0x10]
	0x03C1DFE0 LDR X0, [X8]
	0x03C1DFE4 MOV X2, X31
	0x03C1DFE8 LDP X30, X23, [X31], #0x30
	0x03C1DFEC B 0x3C96574
	0x03C1DFF0 BL 0x1C16F28
	0x03C1DFF4 BL 0x1C16F20
	0x03C1DFF8 BL 0x1C16F44
	0x03C1DFFC MOV X1, X31
	0x03C1E000 BL 0x1C16DEC
	0x03C1E004 SUB X31, X31, 0x40
	0x03C1E008 STP X30, X23, [X31 + 0x10]
	0x03C1E00C STP X22, X21, [X31 + 0x20]
	0x03C1E010 STP X20, X19, [X31 + 0x30]
	0x03C1E014 ADRP X22, 0x7C6000
	0x03C1E018 LDRB W8, [X22 + 0xD89]
	0x03C1E01C MOV X21, X2
	0x03C1E020 MOV X19, X1
	0x03C1E024 MOV X20, X0
	0x03C1E028 CBZ W8, 0x3C1E034
	0x03C1E02C CBNZ X21, 0x3C1E09C
	0x03C1E030 B 0x3C1E064
	0x03C1E034 ADRP X0, 0x4D7000
	0x03C1E038 LDR X0, [X0 + 0xC48]
	0x03C1E03C BL 0x1C16CF4
	0x03C1E040 ADRP X0, 0x4D5000
	0x03C1E044 LDR X0, [X0 + 0x9D0]
	0x03C1E048 BL 0x1C16CF4
	0x03C1E04C ADRP X0, 0x4FE000
	0x03C1E050 LDR X0, [X0 + 0xD18]
	0x03C1E054 BL 0x1C16CF4
	0x03C1E058 MOVZ W8, 0x1
	0x03C1E05C STRB W8, [X22 + 0xD89]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X25, 0x7C8000
	012 Move X26, 0x543000
	013 Move W8, [X25+3395]
	014 Move X26, [X26+72]
	015 Move W23, W5
	016 Move X19, X4
	017 Move W20, W3
	018 Move W24, W2
	019 Move W21, W1
	020 Move X22, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x537000
	026 Move X0, [X0+144]
	027 Call 0x1C17CF4
	028 Move X0, 0x543000
	029 Move X0, [X0+72]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X25+3395], W8
	033 Move X0, [X26]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X22
	039 Call Texture..ctor, X0
	040 Move X0, X22
	041 Move W1, W24
	042 Move W2, W21
	043 Call Cubemap.ValidateFormat, X0, X1, X2
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {103}
	048 Move X27, 0x537000
	049 Move X27, [X27+144]
	050 Move X0, [X27]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move W0, W24
	056 Move W1, W31
	057 Move X2, X31
	058 Call GraphicsFormatUtility.GetGraphicsFormat, X0, X1
	059 Move W25, W0
	060 Move X0, [X27]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSET not yet implemented."
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move W0, W24
	068 Move X1, X31
	069 Call GraphicsFormatUtility.IsCrunchFormat, X0
	070 Or W8, W27, 64
	071 And W31, W0, 1
	072 Move W9, 1028
	073 NotImplemented "Instruction CSEL not yet implemented."
	074 Or W9, W8, W9
	075 And W31, W23, 1
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 Move W0, W23
	078 Call Cubemap.ValidateIsNotCrunched, X0
	079 Move X0, [X26]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X22
	085 Move W1, W21
	086 Move W2, W20
	087 Move W3, W25
	088 Move W5, W23
	089 Move X6, X19
	090 Move X20, [X31+64]
	091 Move X19, [X31+72]
	092 Move X22, [X31+48]
	093 Move X21, [X31+56]
	094 Move X24, [X31+32]
	095 Move X23, [X31+40]
	096 Move X26, [X31+16]
	097 Move X25, [X31+24]
	098 Move W4, W31
	099 Move X30, [X31+80]
	100 Move X27, [X31+88]
	101 Call Cubemap.Internal_Create, X0, X1, X2, X3, X4, X5, X6
	102 Return 
	103 Move X20, [X31+64]
	104 Move X19, [X31+72]
	105 Move X22, [X31+48]
	106 Move X21, [X31+56]
	107 Move X24, [X31+32]
	108 Move X23, [X31+40]
	109 Move X26, [X31+16]
	110 Move X25, [X31+24]
	111 Move X30, [X31+80]
	112 Move X27, [X31+88]
	113 Return 

Method: System.Void .ctor(System.Int32 width, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain)

Disassembly:
	0x03C1E060 CBNZ X21, 0x3C1E09C
	0x03C1E064 ADRP X8, 0x4D7000
	0x03C1E068 LDR X8, [X8 + 0xC48]
	0x03C1E06C LDR X0, [X8]
	0x03C1E070 LDR W8, [X0 + 0xE0]
	0x03C1E074 CBNZ W8, 0x3C1E07C
	0x03C1E078 BL 0x1C16DFC
	0x03C1E07C MOV X0, X31
	0x03C1E080 BL 0x3338524
	0x03C1E084 CBZ X0, 0x3C1E1C8
	0x03C1E088 LDR X8, [X0]
	0x03C1E08C LDR X9, [X8 + 0x218]
	0x03C1E090 LDR X1, [X8 + 0x220]
	0x03C1E094 BLR X9
	0x03C1E098 MOV X21, X0
	0x03C1E09C ADRP X8, 0x4D5000
	0x03C1E0A0 LDR X8, [X8 + 0x9D0]
	0x03C1E0A4 MOVZ W1, 0x3
	0x03C1E0A8 LDR X0, [X8]
	0x03C1E0AC BL 0x1C16D6C
	0x03C1E0B0 LDR W8, [X20]
	0x03C1E0B4 MOV X22, X0
	0x03C1E0B8 ADD X0, X31, 0xC
	0x03C1E0BC MOV X1, X19
	0x03C1E0C0 MOV X2, X21
	0x03C1E0C4 MOV X3, X31
	0x03C1E0C8 STR W8, [X31 + 0xC]
	0x03C1E0CC BL 0x337B8BC
	0x03C1E0D0 CBZ X22, 0x3C1E1C8
	0x03C1E0D4 MOV X23, X0
	0x03C1E0D8 CBZ X0, 0x3C1E0F0
	0x03C1E0DC LDR X8, [X22]
	0x03C1E0E0 MOV X0, X23
	0x03C1E0E4 LDR X1, [X8 + 0x40]
	0x03C1E0E8 BL 0x1C16E00
	0x03C1E0EC CBZ X0, 0x3C1E1BC
	0x03C1E0F0 LDR W8, [X22 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7C7000
	008 Move W8, [X23+3396]
	009 Move W22, W3
	010 Move W19, W2
	011 Move W20, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {31}
	017 Move TEMP, X22
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {40}
	021 Move X22, 0x542000
	022 Move X22, [X22+72]
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X22]
	029 Move X8, [X0+184]
	030 Move W3, [X8]
	031 Move X0, 0x542000
	032 Move X0, [X0+72]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+3396], W8
	036 Move TEMP, X22
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {21}
	040 Move W3, 1
	041 Move X0, X21
	042 Move W1, W20
	043 Move W2, W19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X4, X31
	049 Move W5, W31
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Call Cubemap..ctor, X0, X1, X2, X3, X4, X5
	053 Return 

Method: System.Void .ctor(System.Int32 width, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain, System.Boolean createUninitialized)

Disassembly:
	0x03C1E0F4 CBZ W8, 0x3C1E1B8
	0x03C1E0F8 STR X23, [X22 + 0x20]
	0x03C1E0FC LDR W8, [X20 + 0x4]
	0x03C1E100 ADD X0, X31, 0xC
	0x03C1E104 MOV X1, X19
	0x03C1E108 MOV X2, X21
	0x03C1E10C MOV X3, X31
	0x03C1E110 STR W8, [X31 + 0xC]
	0x03C1E114 BL 0x337B8BC
	0x03C1E118 MOV X23, X0
	0x03C1E11C CBZ X0, 0x3C1E134
	0x03C1E120 LDR X8, [X22]
	0x03C1E124 MOV X0, X23
	0x03C1E128 LDR X1, [X8 + 0x40]
	0x03C1E12C BL 0x1C16E00
	0x03C1E130 CBZ X0, 0x3C1E1BC
	0x03C1E134 LDR W8, [X22 + 0x18]
	0x03C1E138 CMP W8, 0x1
	0x03C1E13C B.LS 0x3C1E1B8
	0x03C1E140 STR X23, [X22 + 0x28]
	0x03C1E144 LDR W8, [X20 + 0x8]
	0x03C1E148 ADD X0, X31, 0xC
	0x03C1E14C MOV X1, X19
	0x03C1E150 MOV X2, X21
	0x03C1E154 MOV X3, X31
	0x03C1E158 STR W8, [X31 + 0xC]
	0x03C1E15C BL 0x337B8BC
	0x03C1E160 MOV X19, X0
	0x03C1E164 CBZ X0, 0x3C1E17C
	0x03C1E168 LDR X8, [X22]
	0x03C1E16C MOV X0, X19
	0x03C1E170 LDR X1, [X8 + 0x40]
	0x03C1E174 BL 0x1C16E00
	0x03C1E178 CBZ X0, 0x3C1E1BC
	0x03C1E17C LDR W8, [X22 + 0x18]
	0x03C1E180 CMP W8, 0x2
	0x03C1E184 B.LS 0x3C1E1B8
	0x03C1E188 STR X19, [X22 + 0x30]
	0x03C1E18C ADRP X8, 0x4FE000
	0x03C1E190 LDR X8, [X8 + 0xD18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7C7000
	009 Move W8, [X24+3397]
	010 Move W21, W4
	011 Move W23, W3
	012 Move W19, W2
	013 Move W20, W1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {33}
	019 Move TEMP, X23
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {42}
	023 Move X23, 0x542000
	024 Move X23, [X23+72]
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X23]
	031 Move X8, [X0+184]
	032 Move W3, [X8]
	033 Move X0, 0x542000
	034 Move X0, [X0+72]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+3397], W8
	038 Move TEMP, X23
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {23}
	042 Move W3, 1
	043 And W5, W21, 1
	044 Move X0, X22
	045 Move W1, W20
	046 Move W2, W19
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X4, X31
	054 Move X30, [X31+64]
	055 Call Cubemap..ctor, X0, X1, X2, X3, X4, X5
	056 Return 

Method: System.Void .ctor(System.Int32 width, UnityEngine.TextureFormat format, System.Int32 mipCount)

Disassembly:
	0x03C1E194 MOV X1, X22
	0x03C1E198 MOV X2, X31
	0x03C1E19C LDR X0, [X8]

ISIL:
	001 Move X4, X31
	002 Move W5, W31
	003 Call Cubemap..ctor, X0, X1, X2, X3, X4, X5
	004 Return 

Method: System.Void .ctor(System.Int32 width, UnityEngine.TextureFormat format, System.Int32 mipCount, System.Boolean createUninitialized)

Disassembly:
	0x03C1E1A0 BL 0x3C96574
	0x03C1E1A4 LDP X20, X19, [X31 + 0x30]
	0x03C1E1A8 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 And W5, W4, 1
	002 Move X4, X31
	003 Call Cubemap..ctor, X0, X1, X2, X3, X4, X5
	004 Return 

Method: System.Void SetPixel(UnityEngine.CubemapFace face, System.Int32 x, System.Int32 y, UnityEngine.Color color)

Disassembly:
	0x03C1E1AC LDP X30, X23, [X31 + 0x10]
	0x03C1E1B0 ADD X31, X31, 0x40

ISIL:
	001 Move W4, W31

Method: System.Void SetPixel(UnityEngine.CubemapFace face, System.Int32 x, System.Int32 y, UnityEngine.Color color, System.Int32 mip)

Disassembly:
	0x03C1E1B4 RET
	0x03C1E1B8 BL 0x1C16F28
	0x03C1E1BC BL 0x1C16F44
	0x03C1E1C0 MOV X1, X31
	0x03C1E1C4 BL 0x1C16DEC
	0x03C1E1C8 BL 0x1C16F20
	0x03C1E1CC STP X30, X23, [X31 - 0x30]!
	0x03C1E1D0 STP X22, X21, [X31 + 0x10]
	0x03C1E1D4 STP X20, X19, [X31 + 0x20]
	0x03C1E1D8 ADRP X22, 0x7C6000
	0x03C1E1DC LDRB W8, [X22 + 0xD8A]
	0x03C1E1E0 MOV X20, X2
	0x03C1E1E4 MOV X21, X1
	0x03C1E1E8 MOV X19, X0
	0x03C1E1EC CBNZ W8, 0x3C1E228
	0x03C1E1F0 ADRP X0, 0x4D7000
	0x03C1E1F4 LDR X0, [X0 + 0xC48]
	0x03C1E1F8 BL 0x1C16CF4
	0x03C1E1FC ADRP X0, 0x4D5000
	0x03C1E200 LDR X0, [X0 + 0x9D0]
	0x03C1E204 BL 0x1C16CF4
	0x03C1E208 ADRP X0, 0x540000
	0x03C1E20C LDR X0, [X0 + 0xCA8]
	0x03C1E210 BL 0x1C16CF4
	0x03C1E214 ADRP X0, 0x4DC000
	0x03C1E218 LDR X0, [X0 + 0xE78]
	0x03C1E21C BL 0x1C16CF4
	0x03C1E220 MOVZ W8, 0x1
	0x03C1E224 STRB W8, [X22 + 0xD8A]
	0x03C1E228 MOV X0, X21
	0x03C1E22C MOV X1, X31
	0x03C1E230 BL 0x32277A8
	0x03C1E234 ADRP X8, 0x4DC000
	0x03C1E238 LDR X8, [X8 + 0xE78]
	0x03C1E23C ANDS W31, W0, 0x1
	0x03C1E240 LDR X8, [X8]
	0x03C1E244 CSEL X21, X8, X21, NE
	0x03C1E248 CBNZ X20, 0x3C1E284
	0x03C1E24C ADRP X8, 0x4D7000
	0x03C1E250 LDR X8, [X8 + 0xC48]
	0x03C1E254 LDR X0, [X8]
	0x03C1E258 LDR W8, [X0 + 0xE0]
	0x03C1E25C CBNZ W8, 0x3C1E264

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X0]
	012 Move W23, W1
	013 Move W19, W4
	014 Move V8, V3
	015 Move X9, [X8+488]
	016 Move X8, [X8+496]
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move X1, X8
	021 Move W20, W3
	022 Move W21, W2
	023 Move X22, X0
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {50}
	029 Move X0, X22
	030 Move W1, W23
	031 Move W2, W19
	032 Move W3, W21
	033 Move W4, W20
	034 Move V2, V9
	035 Move V3, V8
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X30, [X31+32]
	041 Move X23, [X31+40]
	042 Move D9, [X31+16]
	043 Move D8, [X31+24]
	044 Move V0, V11
	045 Move V1, V10
	046 Move D11, [X31+80]
	047 Move D10, [X31+88]
	048 Call Cubemap.SetPixelImpl, X0, X1, X2, X3, X4, X5
	049 Return 
	050 Move X1, X22
	051 Call Texture.CreateNonReadableException, X0, X1
	052 Move X19, X0
	053 Move X0, 0x542000
	054 Move X0, [X0+216]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Call 0x1C17DEC

Method: System.Void Apply(System.Boolean updateMipmaps, System.Boolean makeNoLongerReadable)

Disassembly:
	0x03C1E260 BL 0x1C16DFC
	0x03C1E264 MOV X0, X31
	0x03C1E268 BL 0x3338524
	0x03C1E26C CBZ X0, 0x3C1E344
	0x03C1E270 LDR X8, [X0]
	0x03C1E274 LDR X9, [X8 + 0x218]
	0x03C1E278 LDR X1, [X8 + 0x220]
	0x03C1E27C BLR X9
	0x03C1E280 MOV X20, X0
	0x03C1E284 ADRP X8, 0x4D5000
	0x03C1E288 LDR X8, [X8 + 0x9D0]
	0x03C1E28C MOVZ W1, 0x2
	0x03C1E290 LDR X0, [X8]
	0x03C1E294 BL 0x1C16D6C
	0x03C1E298 MOV X22, X0
	0x03C1E29C MOV X0, X19
	0x03C1E2A0 MOV X1, X21
	0x03C1E2A4 MOV X2, X20
	0x03C1E2A8 MOV X3, X31
	0x03C1E2AC BL 0x2430694
	0x03C1E2B0 CBZ X22, 0x3C1E344
	0x03C1E2B4 MOV X23, X0
	0x03C1E2B8 CBZ X0, 0x3C1E2D0
	0x03C1E2BC LDR X8, [X22]
	0x03C1E2C0 MOV X0, X23
	0x03C1E2C4 LDR X1, [X8 + 0x40]
	0x03C1E2C8 BL 0x1C16E00
	0x03C1E2CC CBZ X0, 0x3C1E348
	0x03C1E2D0 LDR W8, [X22 + 0x18]
	0x03C1E2D4 CBZ W8, 0x3C1E340
	0x03C1E2D8 ADD X0, X19, 0xC
	0x03C1E2DC MOV X1, X21
	0x03C1E2E0 MOV X2, X20
	0x03C1E2E4 MOV X3, X31
	0x03C1E2E8 STR X23, [X22 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move W21, W1
	008 Move W20, W2
	009 Move X19, X0
	010 Move X9, [X8+488]
	011 Move X8, [X8+496]
	012 Move X1, X8
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {36}
	018 Move X22, 0x7C7000
	019 Move X3, [X22+3376]
	020 Compare X3, 0
	021 JumpIfNotEqual {27}
	022 Move X0, -51572736
	023 Add X0, X0, 3741
	024 Call 0x1C17CB8
	025 Move X3, X0
	026 Move [X22+3376], X0
	027 And W1, W21, 1
	028 And W2, W20, 1
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 CallNoReturn X3
	036 Move X1, X19
	037 Call Texture.CreateNonReadableException, X0, X1
	038 Move X19, X0
	039 Move X0, 0x542000
	040 Move X0, [X0+224]
	041 Call 0x1C17D08
	042 Move X1, X0
	043 Move X0, X19
	044 Call 0x1C17DEC

Method: System.Void Apply()

Disassembly:
	0x03C1E2EC BL 0x338FFB4
	0x03C1E2F0 MOV X19, X0
	0x03C1E2F4 CBZ X0, 0x3C1E30C

ISIL:
	001 Move W1, 1
	002 Move W2, W31
	003 Call Cubemap.Apply, X0, X1, X2
	004 Return 

Method: System.Void ValidateIsNotCrunched(UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C1DEB0 LDRB W8, [X22 + 0xD88]
	0x03C1DEB4 MOV X21, X2
	0x03C1DEB8 MOV X19, X1
	0x03C1DEBC MOV X20, X0
	0x03C1DEC0 CBZ W8, 0x3C1DECC
	0x03C1DEC4 CBNZ X21, 0x3C1DF34
	0x03C1DEC8 B 0x3C1DEFC
	0x03C1DECC ADRP X0, 0x4D8000
	0x03C1DED0 LDR X0, [X0 + 0xC48]
	0x03C1DED4 BL 0x1C16CF4
	0x03C1DED8 ADRP X0, 0x4D6000
	0x03C1DEDC LDR X0, [X0 + 0x9D0]
	0x03C1DEE0 BL 0x1C16CF4
	0x03C1DEE4 ADRP X0, 0x541000
	0x03C1DEE8 LDR X0, [X0 + 0xC88]
	0x03C1DEEC BL 0x1C16CF4
	0x03C1DEF0 MOVZ W8, 0x1
	0x03C1DEF4 STRB W8, [X22 + 0xD88]
	0x03C1DEF8 CBNZ X21, 0x3C1DF34
	0x03C1DEFC ADRP X8, 0x4D8000
	0x03C1DF00 LDR X8, [X8 + 0xC48]

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, 64
	003 Compare TEMP, 64
	004 JumpIfEqual {6}
	005 Return 
	006 Move [X31-16], X30
	007 Move [X31-8], X19
	008 Move X0, 0x4DF000
	009 Move X0, [X0+1400]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X19, X0
	013 Move X0, 0x543000
	014 Move X0, [X0+200]
	015 Call 0x1C17D08
	016 Move X1, X0
	017 Move X0, X19
	018 Move X2, X31
	019 Call ArgumentException..ctor, X0, X1
	020 Move X0, 0x543000
	021 Move X0, [X0+208]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Call 0x1C17DEC

Method: System.Void SetPixelImpl_Injected(System.Int32 image, System.Int32 mip, System.Int32 x, System.Int32 y, ref UnityEngine.Color color)

Disassembly:
	0x03C1DA64 MOV X2, X31
	0x03C1DA68 BL 0x3C61468
	0x03C1DA6C MOV W27, W0
	0x03C1DA70 LDR X0, [X29]
	0x03C1DA74 CMP W19, 0x1
	0x03C1DA78 CSET W29, NE
	0x03C1DA7C LDR W8, [X0 + 0xE0]
	0x03C1DA80 CBNZ W8, 0x3C1DA88
	0x03C1DA84 BL 0x1C16DFC
	0x03C1DA88 MOV W0, W26
	0x03C1DA8C MOV X1, X31
	0x03C1DA90 BL 0x3C61CEC
	0x03C1DA94 ORR W8, W29, 0x40
	0x03C1DA98 ANDS W31, W0, 0x1
	0x03C1DA9C MOVZ W9, 0x404
	0x03C1DAA0 CSEL W8, W8, W29, NE
	0x03C1DAA4 ORR W9, W8, W9, 0x0
	0x03C1DAA8 ANDS W31, W25, 0x1
	0x03C1DAAC CSEL W25, W9, W8, NE
	0x03C1DAB0 MOV W0, W25
	0x03C1DAB4 BL 0x3C1D91C
	0x03C1DAB8 LDR X0, [X28]
	0x03C1DABC LDR W8, [X0 + 0xE0]
	0x03C1DAC0 CBNZ W8, 0x3C1DAC8
	0x03C1DAC4 BL 0x1C16DFC
	0x03C1DAC8 MOV X0, X24
	0x03C1DACC MOV W1, W23
	0x03C1DAD0 MOV W2, W21
	0x03C1DAD4 MOV W3, W20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C8000
	010 Move X6, [X25+3400]
	011 Move X19, X5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move W23, W1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51449856
	020 Add X0, X0, 690
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+3400], X0
	024 Move X0, X24
	025 Move W1, W23
	026 Move W2, W22
	027 Move W3, W21
	028 Move W4, W20
	029 Move X5, X19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

