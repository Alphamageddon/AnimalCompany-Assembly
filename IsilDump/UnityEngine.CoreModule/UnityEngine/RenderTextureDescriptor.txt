Type: UnityEngine.RenderTextureDescriptor

Method: System.Int32 get_width()

Disassembly:
	0x03C233BC STP X24, X23, [X31 + 0x30]
	0x03C233C0 STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void set_width(System.Int32 value)

Disassembly:
	0x03C233C4 STP X20, X19, [X31 + 0x50]
	0x03C233C8 ADD X29, X31, 0x0

ISIL:
	001 Move [X0], W1
	002 Return 

Method: System.Int32 get_height()

Disassembly:
	0x03C233CC SUB X31, X31, 0x30
	0x03C233D0 MRS X24, 0xC000

ISIL:
	001 Move W0, [X0+4]
	002 Return X0

Method: System.Void set_height(System.Int32 value)

Disassembly:
	0x03C233D4 LDR X8, [X24 + 0x28]
	0x03C233D8 ADRP X23, 0x7C1000

ISIL:
	001 Move [X0+4], W1
	002 Return 

Method: System.Int32 get_msaaSamples()

Disassembly:
	0x03C233DC ADRP X25, 0x53C000
	0x03C233E0 MOV X19, X3

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Void set_msaaSamples(System.Int32 value)

Disassembly:
	0x03C233E4 STUR X8, [X29 - 0x8]
	0x03C233E8 LDRB W8, [X23 + 0xF45]

ISIL:
	001 Move [X0+8], W1
	002 Return 

Method: System.Int32 get_volumeDepth()

Disassembly:
	0x03C233EC LDR X25, [X25 + 0x230]
	0x03C233F0 MOV X20, X2

ISIL:
	001 Move W0, [X0+12]
	002 Return X0

Method: System.Void set_volumeDepth(System.Int32 value)

Disassembly:
	0x03C233F4 MOV X22, X1
	0x03C233F8 MOV X21, X0

ISIL:
	001 Move [X0+12], W1
	002 Return 

Method: System.Int32 get_mipCount()

Disassembly:
	0x03C233FC TBNZ X8, 0x0, 0x3C23414
	0x03C23400 ADRP X0, 0x53C000

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_mipCount(System.Int32 value)

Disassembly:
	0x03C23404 LDR X0, [X0 + 0x230]
	0x03C23408 BL 0x1C16CF4

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: UnityEngine.Experimental.Rendering.GraphicsFormat get_graphicsFormat()

Disassembly:
	0x03C23060 MOV X22, X0
	0x03C23064 TBNZ X8, 0x0, 0x3C2307C

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_graphicsFormat(UnityEngine.Experimental.Rendering.GraphicsFormat value)

Disassembly:
	0x03C2340C MOVZ W8, 0x1
	0x03C23410 STRB W8, [X23 + 0xF45]
	0x03C23414 SUB X23, X31, 0xC0
	0x03C23418 STP X31, X31, [X29 - 0x18]
	0x03C2341C STP X31, X31, [X29 - 0x28]
	0x03C23420 ADD X31, X23, 0x0
	0x03C23424 MOVZ W2, 0xC0
	0x03C23428 MOV X0, X23
	0x03C2342C MOV W1, W31
	0x03C23430 BL 0x3EB1B10
	0x03C23434 LDR X0, [X25]
	0x03C23438 LDR W8, [X0 + 0xE0]
	0x03C2343C CBNZ W8, 0x3C23448
	0x03C23440 BL 0x1C16DFC
	0x03C23444 LDR X0, [X25]
	0x03C23448 ANDS X31, X21, 0x7
	0x03C2344C B.EQ 0x3C23474
	0x03C23450 LDR X8, [X0 + 0xB8]
	0x03C23454 LDRB W8, [X8]
	0x03C23458 CBNZ W8, 0x3C23474
	0x03C2345C MOV X0, X23
	0x03C23460 MOV X1, X21
	0x03C23464 MOV X2, X22
	0x03C23468 MOV X3, X31
	0x03C2346C BL 0x3BFF954
	0x03C23470 MOV X21, X23
	0x03C23474 LDR X9, [X20]
	0x03C23478 MOVZ X23, 0xBEEF
	0x03C2347C LDR X8, [X19]
	0x03C23480 MOVK X23, 0xDEAD0000
	0x03C23484 MOVK X23, 0xBEEF
	0x03C23488 MOVK X23, 0xDEAD0000
	0x03C2348C AND X26, X22, 0x1F
	0x03C23490 CMP X22, 0x10
	0x03C23494 STP X23, X23, [X29 - 0x28]
	0x03C23498 STP X8, X9, [X29 - 0x18]
	0x03C2349C B.CC 0x3C2353C
	0x03C234A0 AND X8, X22, 0xFFFFFFFF
	0x03C234A4 ADD X27, X8, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7C2000
	007 Move X21, 0x531000
	008 Move W8, [X22+3872]
	009 Move X21, [X21+144]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x531000
	017 Move X0, [X0+144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3872], W8
	021 Move [X19+20], W20
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W0, W20
	028 Move X1, X31
	029 Call GraphicsFormatUtility.IsSRGBFormat, X0
	030 Move W8, [X19+44]
	031 And W31, W0, 1
	032 Move W9, 4
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 And W8, W8, 0xFFFFFFFB
	035 Or W8, W8, W9
	036 Move X0, X19
	037 Move [X19+44], W8
	038 Call RenderTextureDescriptor.get_depthBufferBits, X0
	039 Move W1, [X19+20]
	040 Call RenderTexture.GetDepthStencilFormatLegacy, X0, X1
	041 Move [X19+28], W0
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 

Method: System.Void set_stencilFormat(UnityEngine.Experimental.Rendering.GraphicsFormat value)

Disassembly:
	0x03C23544 MOVK X8, 0xBEEF
	0x03C23548 MOVK X8, 0xDEAD0000

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: UnityEngine.Experimental.Rendering.GraphicsFormat get_depthStencilFormat()

Disassembly:
	0x03C2354C B 0x3C235A8
	0x03C23550 CMP X26, 0xF

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.Void set_depthStencilFormat(UnityEngine.Experimental.Rendering.GraphicsFormat value)

Disassembly:
	0x03C23554 B.LS 0x3C235BC
	0x03C23558 LDUR X8, [X29 - 0x20]

ISIL:
	001 Move [X0+28], W1
	002 Return 

Method: UnityEngine.RenderTextureFormat get_colorFormat()

Disassembly:
	0x03C2355C LDR X9, [X21]
	0x03C23560 LDR X0, [X25]
	0x03C23564 ADD X8, X9, X8
	0x03C23568 STUR X8, [X29 - 0x20]
	0x03C2356C LDUR X8, [X29 - 0x28]
	0x03C23570 LDR X9, [X21 + 0x8]
	0x03C23574 ADD X8, X9, X8
	0x03C23578 STUR X8, [X29 - 0x28]
	0x03C2357C LDR W8, [X0 + 0xE0]
	0x03C23580 CBNZ W8, 0x3C23588
	0x03C23584 BL 0x1C16DFC
	0x03C23588 SUB X0, X29, 0x10
	0x03C2358C SUB X1, X29, 0x18
	0x03C23590 SUB X2, X29, 0x20
	0x03C23594 SUB X3, X29, 0x28
	0x03C23598 BL 0x3C24184
	0x03C2359C LDUR X8, [X29 - 0x28]
	0x03C235A0 ADD X21, X21, 0x10
	0x03C235A4 SUB X26, X26, 0x10
	0x03C235A8 ADD X8, X8, X22, 0x38, LSL
	0x03C235AC CMP X26, 0xF
	0x03C235B0 STUR X8, [X29 - 0x28]
	0x03C235B4 B.LS 0x3C235C8
	0x03C235B8 B 0x3C236D8
	0x03C235BC LDUR X8, [X29 - 0x28]
	0x03C235C0 ADD X8, X8, X22, 0x38, LSL
	0x03C235C4 STUR X8, [X29 - 0x28]
	0x03C235C8 CMP W26, 0xF
	0x03C235CC B.HI 0x3C236D8
	0x03C235D0 ADRP X10, 0xFFFFFFFFFCF74000
	0x03C235D4 AND X9, X26, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7C2000
	005 Move W8, [X19+3873]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x531000
	012 Move X0, [X0+144]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+3873], W8
	016 Move W19, [X20+20]
	017 Compare W19, 0
	018 JumpIfEqual {33}
	019 Move X8, 0x531000
	020 Move X8, [X8+144]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Call GraphicsFormatUtility.GetRenderTextureFormat, X0
	032 Return X0
	033 Move W8, [X20+36]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, 3
	038 NotImplemented "Instruction CSINC not yet implemented."
	039 Move X30, [X31+32]
	040 Return X0

Method: System.Void set_colorFormat(UnityEngine.RenderTextureFormat value)

Disassembly:
	0x03C235D8 ADD X10, X10, 0xDC9
	0x03C235DC ADR X11, 0x10
	0x03C235E0 LDRB W12, [X10, X9, LSL]
	0x03C235E4 ADD X11, X11, X12, 0x2, LSL
	0x03C235E8 BR X11
	0x03C235EC LDUR X9, [X29 - 0x20]
	0x03C235F0 ADD X8, X8, X23
	0x03C235F4 ADD X9, X9, X23
	0x03C235F8 STP X8, X9, [X29 - 0x28]
	0x03C235FC B 0x3C236D8
	0x03C23600 LDRB W9, [X21 + 0xA]
	0x03C23604 ADD X8, X8, X9, 0x10, LSL
	0x03C23608 STUR X8, [X29 - 0x28]
	0x03C2360C LDRB W9, [X21 + 0x9]
	0x03C23610 ADD X8, X8, X9, 0x8, LSL
	0x03C23614 STUR X8, [X29 - 0x28]
	0x03C23618 LDRB W9, [X21 + 0x8]
	0x03C2361C B 0x3C23654
	0x03C23620 LDUR X8, [X29 - 0x20]
	0x03C23624 B 0x3C23684
	0x03C23628 LDUR X8, [X29 - 0x20]
	0x03C2362C B 0x3C236CC
	0x03C23630 LDRB W9, [X21 + 0xE]
	0x03C23634 ADD X8, X8, X9, 0x30, LSL
	0x03C23638 STUR X8, [X29 - 0x28]
	0x03C2363C LDRB W9, [X21 + 0xD]
	0x03C23640 ADD X8, X8, X9, 0x28, LSL
	0x03C23644 STUR X8, [X29 - 0x28]
	0x03C23648 LDRB W9, [X21 + 0xC]
	0x03C2364C ADD X8, X8, X9, 0x20, LSL
	0x03C23650 LDR W9, [X21 + 0x8]
	0x03C23654 ADD X8, X8, X9
	0x03C23658 STUR X8, [X29 - 0x28]
	0x03C2365C LDUR X8, [X29 - 0x20]
	0x03C23660 LDR X9, [X21]
	0x03C23664 ADD X8, X9, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7C2000
	007 Move X21, 0x531000
	008 Move W8, [X22+3874]
	009 Move X21, [X21+144]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x531000
	017 Move X0, [X0+144]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3874], W8
	021 Move X0, X19
	022 Call RenderTextureDescriptor.get_sRGB, X0
	023 Move X8, [X21]
	024 Move W21, W0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 And W1, W21, 1
	031 Move W0, W20
	032 Move X2, X31
	033 Call GraphicsFormatUtility.GetGraphicsFormat, X0, X1
	034 Move W1, 4
	035 Move X2, X31
	036 Call SystemInfo.GetCompatibleFormat, X0, X1
	037 Move W1, W0
	038 Move X0, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	045 Return 

Method: System.Boolean get_sRGB()

Disassembly:
	0x03C23668 B 0x3C236D4
	0x03C2366C LDUR X8, [X29 - 0x20]
	0x03C23670 B 0x3C23690
	0x03C23674 LDUR X8, [X29 - 0x20]
	0x03C23678 LDRB W9, [X21 + 0x2]
	0x03C2367C ADD X8, X8, X9, 0x10, LSL
	0x03C23680 STUR X8, [X29 - 0x20]
	0x03C23684 LDRB W9, [X21 + 0x1]
	0x03C23688 ADD X8, X8, X9, 0x8, LSL
	0x03C2368C STUR X8, [X29 - 0x20]
	0x03C23690 LDRB W9, [X21]
	0x03C23694 B 0x3C236D0
	0x03C23698 LDUR X8, [X29 - 0x20]
	0x03C2369C B 0x3C236C4
	0x03C236A0 LDUR X8, [X29 - 0x20]
	0x03C236A4 B 0x3C236B8
	0x03C236A8 LDUR X8, [X29 - 0x20]
	0x03C236AC LDRB W9, [X21 + 0x6]
	0x03C236B0 ADD X8, X8, X9, 0x30, LSL
	0x03C236B4 STUR X8, [X29 - 0x20]
	0x03C236B8 LDRB W9, [X21 + 0x5]
	0x03C236BC ADD X8, X8, X9, 0x28, LSL
	0x03C236C0 STUR X8, [X29 - 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C2000
	006 Move X20, 0x531000
	007 Move W8, [X21+3875]
	008 Move X20, [X20+144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x531000
	015 Move X0, [X0+144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3875], W8
	019 Move X0, [X20]
	020 Move W19, [X19+20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call GraphicsFormatUtility.IsSRGBFormat, X0
	032 Return X0

Method: System.Void set_sRGB(System.Boolean value)

Disassembly:
	0x03C236C4 LDRB W9, [X21 + 0x4]
	0x03C236C8 ADD X8, X8, X9, 0x20, LSL
	0x03C236CC LDR W9, [X21]
	0x03C236D0 ADD X8, X8, X9
	0x03C236D4 STUR X8, [X29 - 0x20]
	0x03C236D8 LDR X0, [X25]
	0x03C236DC LDR W8, [X0 + 0xE0]
	0x03C236E0 CBNZ W8, 0x3C236E8
	0x03C236E4 BL 0x1C16DFC
	0x03C236E8 SUB X0, X29, 0x10
	0x03C236EC SUB X1, X29, 0x18
	0x03C236F0 SUB X2, X29, 0x20
	0x03C236F4 SUB X3, X29, 0x28
	0x03C236F8 BL 0x3C243A0
	0x03C236FC LDUR X8, [X29 - 0x10]
	0x03C23700 STR X8, [X20]
	0x03C23704 LDUR X8, [X29 - 0x18]
	0x03C23708 STR X8, [X19]
	0x03C2370C LDR X8, [X24 + 0x28]
	0x03C23710 LDUR X9, [X29 - 0x8]
	0x03C23714 CMP X8, X9
	0x03C23718 B.NE 0x3C2373C
	0x03C2371C ADD X31, X29, 0x0
	0x03C23720 LDP X20, X19, [X31 + 0x50]
	0x03C23724 LDP X22, X21, [X31 + 0x40]
	0x03C23728 LDP X24, X23, [X31 + 0x30]
	0x03C2372C LDP X26, X25, [X31 + 0x20]
	0x03C23730 LDR X27, [X31 + 0x10]
	0x03C23734 LDP X29, X30, [X31], #0x60
	0x03C23738 RET
	0x03C2373C BL 0x3EB1B20
	0x03C23740 STR X1, [X0]
	0x03C23744 RET
	0x03C23748 SUB X31, X31, 0x70
	0x03C2374C STP X29, X30, [X31 + 0x10]
	0x03C23750 STP X28, X27, [X31 + 0x20]
	0x03C23754 STP X26, X25, [X31 + 0x30]
	0x03C23758 STP X24, X23, [X31 + 0x40]
	0x03C2375C STP X22, X21, [X31 + 0x50]
	0x03C23760 STP X20, X19, [X31 + 0x60]
	0x03C23764 ADRP X8, 0x7C1000
	0x03C23768 ADRP X12, 0x53C000
	0x03C2376C LDP X10, X28, [X31 + 0x88]
	0x03C23770 LDP X21, X29, [X31 + 0x78]
	0x03C23774 LDRB W8, [X8 + 0xF48]
	0x03C23778 LDR X27, [X31 + 0x70]
	0x03C2377C LDR X12, [X12 + 0x230]
	0x03C23780 MOV X22, X7
	0x03C23784 MOV X23, X6
	0x03C23788 MOV X24, X5
	0x03C2378C MOV X25, X4
	0x03C23790 MOV X26, X3
	0x03C23794 MOV X20, X2
	0x03C23798 MOV X19, X1
	0x03C2379C MOV X11, X0
	0x03C237A0 TBNZ X8, 0x0, 0x3C237CC
	0x03C237A4 ADRP X0, 0x53C000
	0x03C237A8 LDR X0, [X0 + 0x230]
	0x03C237AC STP X11, X10, [X31]
	0x03C237B0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x7C2000
	008 Move W8, [X20+3876]
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x531000
	016 Move X0, [X0+144]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3876], W8
	020 Move X22, 0x531000
	021 Move X22, [X22+144]
	022 And W31, W21, 1
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 Move X20, X19
	025 Move TEMP, X21
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {42}
	029 Move X0, X31
	030 Call QualitySettings.get_activeColorSpace
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move X20, X19
	034 Move X0, X19
	035 Call RenderTextureDescriptor.get_colorFormat, X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, X23
	038 Move X0, X19
	039 Call RenderTextureDescriptor.get_colorFormat, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X20, X21
	042 Move X0, [X22]
	043 Move W19, [X19+20]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W0, W19
	049 Move X1, X31
	050 Call GraphicsFormatUtility.GetLinearFormat, X0
	051 Move W1, W0
	052 Move X0, X20
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	060 Return 
	061 Move X0, [X22]
	062 Move W19, [X19+20]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move W0, W19
	068 Move X1, X31
	069 Call GraphicsFormatUtility.GetSRGBFormat, X0
	070 Move W1, W0
	071 Move X20, X21

Method: System.Int32 get_depthBufferBits()

Disassembly:
	0x03C234C4 MOVK X9, 0xBEEF
	0x03C234C8 MOVK X8, 0xDEAD0000
	0x03C234CC MOVK X9, 0xDEAD0000
	0x03C234D0 LDR X10, [X21]
	0x03C234D4 LDR X0, [X25]
	0x03C234D8 ADD X9, X10, X9
	0x03C234DC STUR X9, [X29 - 0x20]
	0x03C234E0 LDR X9, [X21 + 0x8]
	0x03C234E4 ADD X8, X9, X8
	0x03C234E8 STUR X8, [X29 - 0x28]
	0x03C234EC LDR W8, [X0 + 0xE0]
	0x03C234F0 CBNZ W8, 0x3C234F8
	0x03C234F4 BL 0x1C16DFC
	0x03C234F8 SUB X0, X29, 0x10
	0x03C234FC SUB X1, X29, 0x18
	0x03C23500 SUB X2, X29, 0x20
	0x03C23504 SUB X3, X29, 0x28
	0x03C23508 BL 0x3C24184
	0x03C2350C LDP X10, X8, [X29 - 0x18]
	0x03C23510 LDR X9, [X21 + 0x10]
	0x03C23514 ADD X8, X9, X8
	0x03C23518 STUR X8, [X29 - 0x10]
	0x03C2351C LDR X8, [X21 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7C2000
	006 Move X20, 0x531000
	007 Move W8, [X21+3877]
	008 Move X20, [X20+144]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x531000
	015 Move X0, [X0+144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3877], W8
	019 Move X0, [X20]
	020 Move W19, [X19+28]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move W0, W19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call GraphicsFormatUtility.GetDepthBits, X0
	032 Return X0

Method: System.Void set_depthBufferBits(System.Int32 value)

Disassembly:
	0x03C23520 ADD X21, X21, 0x20
	0x03C23524 CMP X27, X21
	0x03C23528 ADD X8, X8, X10
	0x03C2352C STUR X8, [X29 - 0x18]
	0x03C23530 B.LS 0x3C23550
	0x03C23534 LDP X8, X9, [X29 - 0x28]
	0x03C23538 B 0x3C234D0
	0x03C2353C MOVZ X8, 0xBEEF
	0x03C23540 MOVK X8, 0xDEAD0000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+20]
	004 Move X19, X0
	005 Move W0, W1
	006 Move W1, W8
	007 Call RenderTexture.GetDepthStencilFormatLegacy, X0, X1
	008 Move [X19+28], W0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: UnityEngine.Rendering.TextureDimension get_dimension()

Disassembly:
	0x03C237B4 ADRP X12, 0x53C000
	0x03C237B8 LDR X12, [X12 + 0x230]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_dimension(UnityEngine.Rendering.TextureDimension value)

Disassembly:
	0x03C237BC LDP X11, X10, [X31]
	0x03C237C0 MOVZ W8, 0x1

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: UnityEngine.Rendering.ShadowSamplingMode get_shadowSamplingMode()

Disassembly:
	0x03C237C4 ADRP X9, 0x7C1000
	0x03C237C8 STRB W8, [X9 + 0xF48]

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_shadowSamplingMode(UnityEngine.Rendering.ShadowSamplingMode value)

Disassembly:
	0x03C237CC LDR X8, [X19]
	0x03C237D0 LDR X9, [X11]

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: UnityEngine.VRTextureUsage get_vrUsage()

Disassembly:
	0x03C237D4 ADD X8, X9, X8
	0x03C237D8 STR X8, [X19]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_vrUsage(UnityEngine.VRTextureUsage value)

Disassembly:
	0x03C237DC LDR X8, [X26]
	0x03C237E0 LDR X9, [X10]

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: UnityEngine.RenderTextureMemoryless get_memoryless()

Disassembly:
	0x03C237E4 EOR X8, X9, X8, 0x0
	0x03C237E8 STR X8, [X26]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_memoryless(UnityEngine.RenderTextureMemoryless value)

Disassembly:
	0x03C237EC LDR X8, [X28]
	0x03C237F0 LDR X9, [X19]

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height)

Disassembly:
	0x03C237F4 EOR X8, X9, X8, 0x0
	0x03C237F8 STR X8, [X28]
	0x03C237FC LDR X0, [X12]

ISIL:
	001 Move W3, 7
	002 Move W4, W31
	003 Call RenderTextureDescriptor..ctor, X0, X1, X2, X3, X4
	004 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.RenderTextureFormat colorFormat)

Disassembly:
	0x03C23800 LDR W8, [X0 + 0xE0]
	0x03C23804 CBNZ W8, 0x3C23814

ISIL:
	001 Move W4, W31

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.RenderTextureFormat colorFormat, System.Int32 depthBufferBits)

Disassembly:
	0x03C23808 STP X11, X10, [X31]
	0x03C2380C BL 0x1C16DFC
	0x03C23810 LDP X11, X10, [X31]
	0x03C23814 LDR X8, [X19]
	0x03C23818 EXTR X8, X8, X8, 0x35
	0x03C2381C STR X8, [X19]
	0x03C23820 LDR X8, [X28]
	0x03C23824 LDR X9, [X20]
	0x03C23828 ADD X8, X9, X8
	0x03C2382C STR X8, [X28]
	0x03C23830 LDR X8, [X20]
	0x03C23834 LDR X9, [X11 + 0x8]
	0x03C23838 ADD X8, X9, X8
	0x03C2383C STR X8, [X20]
	0x03C23840 LDR X8, [X25]
	0x03C23844 LDR X9, [X28]
	0x03C23848 EOR X8, X9, X8, 0x0
	0x03C2384C STR X8, [X25]
	0x03C23850 LDR X8, [X19]
	0x03C23854 LDR X9, [X20]
	0x03C23858 EOR X8, X9, X8, 0x0
	0x03C2385C STR X8, [X19]
	0x03C23860 LDR X8, [X20]
	0x03C23864 EXTR X8, X8, X8, 0x20
	0x03C23868 STR X8, [X20]
	0x03C2386C LDR X8, [X19]
	0x03C23870 LDR X9, [X26]
	0x03C23874 ADD X8, X9, X8
	0x03C23878 STR X8, [X19]
	0x03C2387C LDR X8, [X26]
	0x03C23880 LDR X9, [X11 + 0x10]
	0x03C23884 ADD X8, X9, X8
	0x03C23888 STR X8, [X26]
	0x03C2388C LDR X8, [X24]
	0x03C23890 LDR X9, [X19]
	0x03C23894 EOR X8, X9, X8, 0x0
	0x03C23898 STR X8, [X24]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C2000
	010 Move X24, 0x53D000
	011 Move W8, [X25+3878]
	012 Move X24, [X24+72]
	013 Move W19, W4
	014 Move W20, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x53D000
	023 Move X0, [X0+72]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3878], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X24]
	033 Move X8, [X0+184]
	034 Move X0, X23
	035 Move W1, W22
	036 Move W2, W21
	037 Move W5, [X8]
	038 Move W3, W20
	039 Move W4, W19
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move W6, 1
	047 Move X30, [X31+64]
	048 Move X25, [X31+72]
	049 Call RenderTextureDescriptor..ctor, X0, X1, X2, X3, X4, X5, X6
	050 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat, System.Int32 depthBufferBits)

Disassembly:
	0x03C238A4 EOR X8, X9, X8, 0x0
	0x03C238A8 STR X8, [X20]
	0x03C238AC LDR X8, [X26]
	0x03C238B0 EXTR X8, X8, X8, 0x15
	0x03C238B4 STR X8, [X26]
	0x03C238B8 LDR X8, [X20]
	0x03C238BC LDR X9, [X25]
	0x03C238C0 ADD X8, X9, X8
	0x03C238C4 STR X8, [X20]
	0x03C238C8 LDR X8, [X25]
	0x03C238CC LDR X9, [X11 + 0x18]
	0x03C238D0 ADD X8, X9, X8
	0x03C238D4 STR X8, [X25]
	0x03C238D8 LDR X8, [X23]
	0x03C238DC LDR X9, [X20]
	0x03C238E0 EOR X8, X9, X8, 0x0
	0x03C238E4 STR X8, [X23]
	0x03C238E8 LDR X8, [X26]
	0x03C238EC LDR X9, [X25]
	0x03C238F0 EOR X8, X9, X8, 0x0
	0x03C238F4 STR X8, [X26]
	0x03C238F8 LDR X8, [X25]
	0x03C238FC EXTR X8, X8, X8, 0x21
	0x03C23900 STR X8, [X25]
	0x03C23904 LDR X8, [X26]
	0x03C23908 LDR X9, [X24]
	0x03C2390C ADD X8, X9, X8
	0x03C23910 STR X8, [X26]
	0x03C23914 LDR X8, [X24]
	0x03C23918 LDR X9, [X11 + 0x20]
	0x03C2391C ADD X8, X9, X8
	0x03C23920 STR X8, [X24]
	0x03C23924 LDR X8, [X22]
	0x03C23928 LDR X9, [X26]
	0x03C2392C EOR X8, X9, X8, 0x0
	0x03C23930 STR X8, [X22]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C2000
	010 Move X24, 0x53D000
	011 Move W8, [X25+3879]
	012 Move X24, [X24+72]
	013 Move W19, W4
	014 Move W20, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x53D000
	023 Move X0, [X0+72]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3879], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X24]
	033 Move X8, [X0+184]
	034 Move X0, X23
	035 Move W1, W22
	036 Move W2, W21
	037 Move W5, [X8]
	038 Move W3, W20
	039 Move W4, W19
	040 Move X20, [X31+48]
	041 Move X19, [X31+56]
	042 Move X22, [X31+32]
	043 Move X21, [X31+40]
	044 Move X24, [X31+16]
	045 Move X23, [X31+24]
	046 Move X30, [X31+64]
	047 Move X25, [X31+72]

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.RenderTextureFormat colorFormat, System.Int32 depthBufferBits, System.Int32 mipCount)

Disassembly:
	0x03C2389C LDR X8, [X20]
	0x03C238A0 LDR X9, [X26]

ISIL:
	001 Move W6, 1
	002 Call RenderTextureDescriptor..ctor, X0, X1, X2, X3, X4, X5, X6
	003 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.RenderTextureFormat colorFormat, System.Int32 depthBufferBits, System.Int32 mipCount, UnityEngine.RenderTextureReadWrite readWrite)

Disassembly:
	0x03C239A8 ADD X8, X9, X8
	0x03C239AC STR X8, [X24]
	0x03C239B0 LDR X8, [X22]
	0x03C239B4 LDR X9, [X11 + 0x30]
	0x03C239B8 ADD X8, X9, X8
	0x03C239BC STR X8, [X22]
	0x03C239C0 LDR X8, [X21]
	0x03C239C4 LDR X9, [X24]
	0x03C239C8 EOR X8, X9, X8, 0x0
	0x03C239CC STR X8, [X21]
	0x03C239D0 LDR X8, [X23]
	0x03C239D4 LDR X9, [X22]
	0x03C239D8 EOR X8, X9, X8, 0x0
	0x03C239DC STR X8, [X23]
	0x03C239E0 LDR X8, [X22]
	0x03C239E4 EXTR X8, X8, X8, 0x19
	0x03C239E8 STR X8, [X22]
	0x03C239EC LDR X8, [X23]
	0x03C239F0 LDR X9, [X27]
	0x03C239F4 ADD X8, X9, X8
	0x03C239F8 STR X8, [X23]
	0x03C239FC LDR X8, [X27]
	0x03C23A00 LDR X9, [X11 + 0x38]
	0x03C23A04 ADD X8, X9, X8
	0x03C23A08 STR X8, [X27]
	0x03C23A0C LDR X8, [X29]
	0x03C23A10 LDR X9, [X23]
	0x03C23A14 LDP X24, X23, [X31 + 0x40]
	0x03C23A18 EOR X8, X9, X8, 0x0
	0x03C23A1C STR X8, [X29]
	0x03C23A20 LDR X8, [X22]
	0x03C23A24 LDR X9, [X27]
	0x03C23A28 EOR X8, X9, X8, 0x0
	0x03C23A2C STR X8, [X22]
	0x03C23A30 LDR X8, [X27]
	0x03C23A34 EXTR X8, X8, X8, 0x7
	0x03C23A38 STR X8, [X27]
	0x03C23A3C LDR X8, [X22]
	0x03C23A40 LDR X9, [X21]
	0x03C23A44 ADD X8, X9, X8
	0x03C23A48 STR X8, [X22]
	0x03C23A4C LDR X8, [X21]
	0x03C23A50 LDR X9, [X11 + 0x40]
	0x03C23A54 ADD X8, X9, X8
	0x03C23A58 STR X8, [X21]
	0x03C23A5C LDR X8, [X10]
	0x03C23A60 LDR X9, [X22]
	0x03C23A64 EOR X8, X9, X8, 0x0
	0x03C23A68 STR X8, [X10]
	0x03C23A6C LDR X8, [X27]
	0x03C23A70 LDR X9, [X21]
	0x03C23A74 EOR X8, X9, X8, 0x0
	0x03C23A78 STR X8, [X27]
	0x03C23A7C LDR X8, [X21]
	0x03C23A80 EXTR X8, X8, X8, 0x9
	0x03C23A84 STR X8, [X21]
	0x03C23A88 LDR X8, [X27]
	0x03C23A8C LDR X9, [X29]
	0x03C23A90 ADD X8, X9, X8
	0x03C23A94 STR X8, [X27]
	0x03C23A98 LDR X8, [X29]
	0x03C23A9C LDR X9, [X11 + 0x48]
	0x03C23AA0 ADD X8, X9, X8
	0x03C23AA4 STR X8, [X29]
	0x03C23AA8 LDR X8, [X28]
	0x03C23AAC LDR X9, [X27]
	0x03C23AB0 EOR X8, X9, X8, 0x0
	0x03C23AB4 STR X8, [X28]
	0x03C23AB8 LDR X8, [X21]
	0x03C23ABC LDR X9, [X29]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X26, 0x7C2000
	013 Move X27, 0x531000
	014 Move W8, [X26+3880]
	015 Move X27, [X27+144]
	016 Move W25, W6
	017 Move W20, W5
	018 Move W23, W4
	019 Move W24, W3
	020 Move W21, W2
	021 Move W22, W1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x531000
	028 Move X0, [X0+144]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+3880], W8
	032 Move X0, [X27]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move W0, W24
	038 Move W1, W25
	039 Move X2, X31
	040 Call GraphicsFormatUtility.GetGraphicsFormat, X0, X1
	041 Move W1, 4
	042 Move X2, X31
	043 Call SystemInfo.GetCompatibleFormat, X0, X1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W25, W0
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Move W0, W23
	048 Call RenderTexture.GetDepthStencilFormatLegacy, X0, X1
	049 Move W23, W0
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move W8, 130
	052 NotImplemented "Instruction MOVI not yet implemented."
	053 Add X0, X31, 8
	054 Move W1, W25
	055 Move [X31+8], W22
	056 Move [X31+12], W21
	057 Move [X31+40], V0
	058 Move [X31+24], V0
	059 Move [X31+52], W8
	060 Move [X31+56], W31
	061 Move [X31+16], D1
	062 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	063 NotImplemented "Instruction MOVI not yet implemented."
	064 Move [X31+36], W23
	065 Move [X31+24], W20
	066 Move [X31+48], W31
	067 Move [X31+40], D0
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 Move [X31+56], W31
	072 Move [X19+48], W31
	073 Move [X19], V1
	074 Move [X19+16], V2
	075 Move [X19+24], V0
	076 Move X20, [X31+128]
	077 Move X19, [X31+136]
	078 Move X22, [X31+112]
	079 Move X21, [X31+120]
	080 Move X24, [X31+96]
	081 Move X23, [X31+104]
	082 Move X26, [X31+80]
	083 Move X25, [X31+88]
	084 Move X30, [X31+64]
	085 Move X27, [X31+72]
	086 Add X31, X31, 144
	087 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat, System.Int32 depthBufferBits, System.Int32 mipCount)

Disassembly:
	0x03C23934 LDR X8, [X25]
	0x03C23938 LDR X9, [X24]
	0x03C2393C EOR X8, X9, X8, 0x0
	0x03C23940 STR X8, [X25]
	0x03C23944 LDR X8, [X24]
	0x03C23948 EXTR X8, X8, X8, 0x2F
	0x03C2394C STR X8, [X24]
	0x03C23950 LDR X8, [X25]
	0x03C23954 LDR X9, [X23]
	0x03C23958 ADD X8, X9, X8
	0x03C2395C STR X8, [X25]
	0x03C23960 LDR X8, [X23]
	0x03C23964 LDR X9, [X11 + 0x28]
	0x03C23968 ADD X8, X9, X8
	0x03C2396C STR X8, [X23]
	0x03C23970 LDR X8, [X27]
	0x03C23974 LDR X9, [X25]
	0x03C23978 LDP X26, X25, [X31 + 0x30]
	0x03C2397C EOR X8, X9, X8, 0x0
	0x03C23980 STR X8, [X27]
	0x03C23984 LDR X8, [X24]
	0x03C23988 LDR X9, [X23]
	0x03C2398C EOR X8, X9, X8, 0x0
	0x03C23990 STR X8, [X24]
	0x03C23994 LDR X8, [X23]
	0x03C23998 EXTR X8, X8, X8, 0x24
	0x03C2399C STR X8, [X23]
	0x03C239A0 LDR X8, [X24]
	0x03C239A4 LDR X9, [X22]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 NotImplemented "Instruction MOVI not yet implemented."
	007 Move W8, 130
	008 Move [X0], W1
	009 Move [X0+4], W2
	010 Move [X0+16], V0
	011 Move [X0+24], V0
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 Move W1, W3
	014 Move W19, W5
	015 Move W20, W4
	016 Move W21, W3
	017 Move X22, X0
	018 Move [X0+44], W8
	019 Move [X0+48], W31
	020 Move [X0+8], D0
	021 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	022 Move W0, W20
	023 Move W1, W21
	024 Call RenderTexture.GetDepthStencilFormatLegacy, X0, X1
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Move [X22+28], W0
	027 Move [X22+16], W19
	028 Move [X22+40], W31
	029 Move [X22+32], D0
	030 Move [X22+48], W31
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat, UnityEngine.Experimental.Rendering.GraphicsFormat depthStencilFormat)

Disassembly:
	0x03C231A0 SUB X2, X29, 0x18
	0x03C231A4 SUB X3, X29, 0x20
	0x03C231A8 SUB X4, X29, 0x28
	0x03C231AC SUB X5, X29, 0x30
	0x03C231B0 SUB X6, X29, 0x38
	0x03C231B4 SUB X7, X29, 0x40
	0x03C231B8 MOV X0, X21
	0x03C231BC STP X28, X27, [X31 + 0x18]
	0x03C231C0 STP X20, X19, [X31 + 0x8]
	0x03C231C4 STR X25, [X31]
	0x03C231C8 BL 0x3C23748
	0x03C231CC ADD X31, X31, 0x30
	0x03C231D0 ADD X22, X22, 0x60
	0x03C231D4 CMP X24, X22
	0x03C231D8 B.HI 0x3C23174
	0x03C231DC B 0x3C23254
	0x03C231E0 CMP X24, X22
	0x03C231E4 B.LS 0x3C23254
	0x03C231E8 SUB X27, X29, 0x68
	0x03C231EC SUB X19, X29, 0x60
	0x03C231F0 SUB X20, X29, 0x58
	0x03C231F4 SUB X25, X29, 0x50
	0x03C231F8 SUB X28, X29, 0x48
	0x03C231FC LDR W8, [X0 + 0xE0]
	0x03C23200 CBNZ W8, 0x3C23208
	0x03C23204 BL 0x1C16DFC
	0x03C23208 SUB X31, X31, 0x30
	0x03C2320C SUB X1, X29, 0x10
	0x03C23210 SUB X2, X29, 0x18
	0x03C23214 SUB X3, X29, 0x20
	0x03C23218 SUB X4, X29, 0x28
	0x03C2321C SUB X5, X29, 0x30
	0x03C23220 SUB X6, X29, 0x38
	0x03C23224 SUB X7, X29, 0x40
	0x03C23228 MOV X0, X22
	0x03C2322C STP X19, X27, [X31 + 0x18]
	0x03C23230 STP X25, X20, [X31 + 0x8]
	0x03C23234 STR X28, [X31]
	0x03C23238 BL 0x3C23748
	0x03C2323C ADD X31, X31, 0x30
	0x03C23240 ADD X22, X22, 0x60
	0x03C23244 CMP X24, X22
	0x03C23248 B.LS 0x3C23254
	0x03C2324C LDR X0, [X26]
	0x03C23250 B 0x3C231FC
	0x03C23254 MOV X0, X21
	0x03C23258 MOV X1, X24

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7C2000
	010 Move X24, 0x53D000
	011 Move W8, [X25+3881]
	012 Move X24, [X24+72]
	013 Move W20, W4
	014 Move W21, W3
	015 Move W22, W2
	016 Move W23, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x53D000
	023 Move X0, [X0+72]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3881], W8
	027 Move X0, [X24]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X24]
	033 Move X8, [X0+184]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move W9, 130
	036 Move X0, X19
	037 Move W24, [X8]
	038 Move [X19+16], V0
	039 Move [X19+24], V0
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move W1, W21
	042 Move [X19+44], W9
	043 Move [X19+48], W31
	044 Move [X19], W23
	045 Move [X19+4], W22
	046 Move [X19+8], D0
	047 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move [X19+28], W20
	050 Move [X19+16], W24
	051 Move [X19+40], W31
	052 Move [X19+32], D0
	053 Move [X19+48], W31
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 Move X25, [X31+72]
	062 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat colorFormat, UnityEngine.Experimental.Rendering.GraphicsFormat depthStencilFormat, System.Int32 mipCount)

Disassembly:
	0x03C23AC0 EOR X8, X9, X8, 0x0
	0x03C23AC4 STR X8, [X21]
	0x03C23AC8 LDR X8, [X29]
	0x03C23ACC EXTR X8, X8, X8, 0xA
	0x03C23AD0 STR X8, [X29]
	0x03C23AD4 LDR X8, [X21]
	0x03C23AD8 LDR X9, [X10]
	0x03C23ADC ADD X8, X9, X8
	0x03C23AE0 STR X8, [X21]
	0x03C23AE4 LDR X8, [X10]
	0x03C23AE8 LDR X9, [X11 + 0x50]
	0x03C23AEC ADD X8, X9, X8
	0x03C23AF0 STR X8, [X10]
	0x03C23AF4 LDR X8, [X19]
	0x03C23AF8 LDR X9, [X21]
	0x03C23AFC LDP X22, X21, [X31 + 0x50]
	0x03C23B00 EOR X8, X9, X8, 0x0
	0x03C23B04 STR X8, [X19]
	0x03C23B08 LDR X8, [X29]
	0x03C23B0C LDR X9, [X10]
	0x03C23B10 EOR X8, X9, X8, 0x0
	0x03C23B14 STR X8, [X29]
	0x03C23B18 LDR X8, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Move W8, 130
	007 Move [X0], W1
	008 Move [X0+4], W2
	009 Move [X0+16], V0
	010 Move [X0+24], V0
	011 NotImplemented "Instruction MOVI not yet implemented."
	012 Move W1, W3
	013 Move W19, W5
	014 Move W20, W4
	015 Move X21, X0
	016 Move [X0+44], W8
	017 Move [X0+48], W31
	018 Move [X0+8], D0
	019 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	020 Move [X21+28], W20
	021 Move [X21+16], W19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move [X21+40], W31
	026 Move [X21+32], D0
	027 Move [X21+48], W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 

Method: System.Void SetOrClearRenderTextureCreationFlag(System.Boolean value, UnityEngine.RenderTextureCreationFlags flag)

Disassembly:
	0x03C234A8 CMP X27, X21
	0x03C234AC B.LS 0x3C23550
	0x03C234B0 MOVZ X8, 0xBEEF
	0x03C234B4 MOVZ X9, 0xBEEF
	0x03C234B8 MOVK X8, 0xDEAD0000
	0x03C234BC MOVK X9, 0xDEAD0000
	0x03C234C0 MOVK X8, 0xBEEF

ISIL:
	001 Move W8, [X0+44]
	002 And W31, W1, 1
	003 NotImplemented "Instruction BIC not yet implemented."
	004 Or W8, W8, W2
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Move [X0+44], W8
	007 Return 

Method: System.Boolean get_useMipMap()

Disassembly:
	0x03C23B1C EXTR X8, X8, X8, 0x2A
	0x03C23B20 STR X8, [X10]
	0x03C23B24 LDR X8, [X29]

ISIL:
	001 Move W8, [X0+44]
	002 And W0, W8, 1
	003 Return X0

Method: System.Void set_useMipMap(System.Boolean value)

Disassembly:
	0x03C23B28 LDR X9, [X28]
	0x03C23B2C ADD X8, X9, X8
	0x03C23B30 STR X8, [X29]
	0x03C23B34 LDR X8, [X28]

ISIL:
	001 Move W8, [X0+44]
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Move [X0+44], W8
	004 Return 

Method: System.Boolean get_autoGenerateMips()

Disassembly:
	0x03C23B38 LDR X9, [X11 + 0x58]
	0x03C23B3C ADD X8, X9, X8
	0x03C23B40 STR X8, [X28]

ISIL:
	001 Move W8, [X0+44]
	002 Move W0, W8
	003 ShiftRight W0, 1
	004 And W0, W0, 1
	005 Return X0

Method: System.Void set_autoGenerateMips(System.Boolean value)

Disassembly:
	0x03C23B44 LDR X8, [X20]
	0x03C23B48 LDR X9, [X29]
	0x03C23B4C LDP X29, X30, [X31 + 0x10]
	0x03C23B50 EOR X8, X9, X8, 0x0
	0x03C23B54 STR X8, [X20]
	0x03C23B58 LDR X8, [X10]
	0x03C23B5C LDR X9, [X28]
	0x03C23B60 EOR X8, X9, X8, 0x0

ISIL:
	001 Move W8, [X0+44]
	002 And W31, W1, 1
	003 Move W9, 2
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 And W8, W8, 0xFFFFFFFD
	006 Or W8, W8, W9
	007 Move [X0+44], W8
	008 Return 

Method: System.Boolean get_enableRandomWrite()

Disassembly:
	0x03C23B64 STR X8, [X10]
	0x03C23B68 LDR X8, [X28]
	0x03C23B6C EXTR X8, X8, X8, 0x12

ISIL:
	001 Move W8, [X0+44]
	002 Move W0, W8
	003 ShiftRight W0, 4
	004 And W0, W0, 15
	005 Return X0

Method: System.Void set_enableRandomWrite(System.Boolean value)

Disassembly:
	0x03C23B70 STR X8, [X28]
	0x03C23B74 LDR X8, [X10]
	0x03C23B78 LDR X9, [X19]
	0x03C23B7C LDP X20, X19, [X31 + 0x60]
	0x03C23B80 LDP X28, X27, [X31 + 0x20]
	0x03C23B84 ADD X8, X9, X8
	0x03C23B88 STR X8, [X10]
	0x03C23B8C ADD X31, X31, 0x70

ISIL:
	001 Move W8, [X0+44]
	002 And W31, W1, 1
	003 Move W9, 16
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 And W8, W8, 0xFFFFFFEF
	006 Or W8, W8, W9
	007 Move [X0+44], W8
	008 Return 

Method: System.Boolean get_bindMS()

Disassembly:
	0x03C23B90 RET
	0x03C23B94 STP X29, X30, [X31 - 0x10]!
	0x03C23B98 ADD X29, X31, 0x0

ISIL:
	001 Move W8, [X0+45]
	002 Move W0, W8
	003 ShiftRight W0, 3
	004 And W0, W0, 7
	005 Return X0

Method: System.Void set_bindMS(System.Boolean value)

Disassembly:
	0x03C23B9C UBFM X8, X2, 0x3, 0x3F
	0x03C23BA0 CBZ X8, 0x3C23BFC
	0x03C23BA4 ADRP X12, 0xFFFFFFFFFCEC7000
	0x03C23BA8 LDR V0, [X12 + 0x79]
	0x03C23BAC SUB X11, X8, 0x1
	0x03C23BB0 ADD X10, X8, 0x1
	0x03C23BB4 UNIMPLEMENTED
	0x03C23BB8 MOVZ W11, 0x2

ISIL:
	001 Move W8, [X0+44]
	002 And W31, W1, 1
	003 Move W9, 2048
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 And W8, W8, 0xFFFFF7FF
	006 Or W8, W8, W9
	007 Move [X0+44], W8
	008 Return 

Method: System.Void set_createdFromScript(System.Boolean value)

Disassembly:
	0x03C230E8 STP X11, X9, [X29 - 0x40]
	0x03C230EC STP X11, X9, [X29 - 0x28]
	0x03C230F0 LDR X8, [X24]
	0x03C230F4 LDR X0, [X26]
	0x03C230F8 ORR X10, X31, 0xAAAAAAAAAAAAAAAA
	0x03C230FC MOVK X10, 0xAAAB
	0x00000000 INVALID
	0x03C23104 STP X9, X8, [X29 - 0x68]

ISIL:
	001 Move W8, [X0+44]
	002 And W31, W1, 1
	003 Move W9, 32
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 And W8, W8, 0xFFFFFFDF
	006 Or W8, W8, W9
	007 Move [X0+44], W8
	008 Return 

Method: System.Boolean get_useDynamicScale()

Disassembly:
	0x03C23BBC MOV W9, W1
	0x03C23BC0 AND X10, X10, 0x3FFFFFFF
	0x03C23BC4 UNIMPLEMENTED

ISIL:
	001 Move W8, [X0+45]
	002 Move W0, W8
	003 ShiftRight W0, 2
	004 And W0, W0, 3
	005 Return X0

Method: System.Void set_useDynamicScale(System.Boolean value)

Disassembly:
	0x03C2325C MOV X2, X23
	0x03C23260 MOV X3, X31
	0x03C23264 BL 0x3BFF954
	0x03C23268 LDR X0, [X26]
	0x03C2326C LDR W8, [X0 + 0xE0]
	0x03C23270 CBNZ W8, 0x3C23278
	0x03C23274 BL 0x1C16DFC
	0x03C23278 MOVZ W8, 0x60

ISIL:
	001 Move W8, [X0+44]
	002 And W31, W1, 1
	003 Move W9, 1024
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 And W8, W8, 0xFFFFFBFF
	006 Or W8, W8, W9
	007 Move [X0+44], W8
	008 Return 

