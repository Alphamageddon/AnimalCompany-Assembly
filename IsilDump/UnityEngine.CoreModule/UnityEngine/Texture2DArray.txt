Type: UnityEngine.Texture2DArray

Method: System.Int32 get_allSlices()

Disassembly:
	0x03C1FAA4 BL 0x3C1FB14
	0x03C1FAA8 LDR X0, [X25]
	0x03C1FAAC LDR W8, [X0 + 0xE0]
	0x03C1FAB0 CBNZ W8, 0x3C1FAB8
	0x03C1FAB4 BL 0x1C16DFC
	0x03C1FAB8 MOV X0, X24
	0x03C1FABC MOV W1, W21
	0x03C1FAC0 MOV X2, X31
	0x03C1FAC4 BL 0x3C1AE04
	0x03C1FAC8 MOV W5, W0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7C6000
	004 Move X0, [X19+3480]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51384320
	008 Add X0, X0, 14
	009 Call 0x1C17CB8
	010 Move [X19+3480], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean get_isReadable()

Disassembly:
	0x03C1FACC MOV X0, X24
	0x03C1FAD0 MOV W1, W23
	0x03C1FAD4 MOV W2, W22
	0x03C1FAD8 MOV W3, W20
	0x03C1FADC MOV W4, W21
	0x03C1FAE0 MOV W6, W19
	0x03C1FAE4 LDP X20, X19, [X31 + 0x40]
	0x03C1FAE8 LDP X22, X21, [X31 + 0x30]
	0x03C1FAEC LDP X24, X23, [X31 + 0x20]
	0x03C1FAF0 LDP X26, X25, [X31 + 0x10]
	0x03C1FAF4 LDR X30, [X31], #0x50
	0x03C1FAF8 B 0x3C1F6F4
	0x03C1FAFC LDP X20, X19, [X31 + 0x40]
	0x03C1FB00 LDP X22, X21, [X31 + 0x30]
	0x03C1FB04 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C6000
	005 Move X1, [X20+3488]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51453952
	010 Add X0, X0, 3778
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3488], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean Internal_CreateImpl(UnityEngine.Texture2DArray mono, System.Int32 w, System.Int32 h, System.Int32 d, System.Int32 mipCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.TextureColorSpace colorSpace, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C1FB08 LDP X26, X25, [X31 + 0x10]
	0x03C1FB0C LDR X30, [X31], #0x50
	0x03C1FB10 RET
	0x03C1FB14 TBNZ X0, 0x6, 0x3C1FB1C
	0x03C1FB18 RET
	0x03C1FB1C STP X30, X19, [X31 - 0x10]!
	0x03C1FB20 ADRP X0, 0x4DC000
	0x03C1FB24 LDR X0, [X0 + 0x578]
	0x03C1FB28 BL 0x1C16D08
	0x03C1FB2C BL 0x1C16F10
	0x03C1FB30 MOV X19, X0
	0x03C1FB34 ADRP X0, 0x540000
	0x03C1FB38 LDR X0, [X0 + 0x178]
	0x03C1FB3C BL 0x1C16D08
	0x03C1FB40 MOV X1, X0
	0x03C1FB44 MOV X0, X19
	0x03C1FB48 MOV X2, X31
	0x03C1FB4C BL 0x3314A68
	0x03C1FB50 ADRP X0, 0x540000
	0x03C1FB54 LDR X0, [X0 + 0x180]
	0x03C1FB58 BL 0x1C16D08
	0x03C1FB5C MOV X1, X0
	0x03C1FB60 MOV X0, X19
	0x03C1FB64 BL 0x1C16DEC
	0x03C1FB68 STR X30, [X31 - 0x60]!
	0x03C1FB6C STP X28, X27, [X31 + 0x10]
	0x03C1FB70 STP X26, X25, [X31 + 0x20]
	0x03C1FB74 STP X24, X23, [X31 + 0x30]
	0x03C1FB78 STP X22, X21, [X31 + 0x40]
	0x03C1FB7C STP X20, X19, [X31 + 0x50]
	0x03C1FB80 ADRP X26, 0x7C5000
	0x03C1FB84 ADRP X27, 0x540000
	0x03C1FB88 LDRB W8, [X26 + 0xDDA]
	0x03C1FB8C LDR X27, [X27 + 0x48]
	0x03C1FB90 MOV W24, W6

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x7C6000
	012 Move X8, [X27+3496]
	013 Move W19, W7
	014 Move W20, W6
	015 Move W21, W5
	016 Move W22, W4
	017 Move W23, W3
	018 Move W24, W2
	019 Move W25, W1
	020 Move X26, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51531776
	024 Add X0, X0, 748
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X27+3496], X0
	028 Move X0, X26
	029 Move W1, W25
	030 Move W2, W24
	031 Move W3, W23
	032 Move W4, W22
	033 Move W5, W21
	034 Move W6, W20
	035 Move W7, W19
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X24, [X31+32]
	041 Move X23, [X31+40]
	042 Move X26, [X31+16]
	043 Move X25, [X31+24]
	044 Move X30, [X31+80]
	045 Move X27, [X31+88]
	046 CallNoReturn X8

Method: System.Void Internal_Create(UnityEngine.Texture2DArray mono, System.Int32 w, System.Int32 h, System.Int32 d, System.Int32 mipCount, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.TextureColorSpace colorSpace, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C1FB94 MOV W23, W5
	0x03C1FB98 MOV W19, W4
	0x03C1FB9C MOV W25, W3
	0x03C1FBA0 MOV W20, W2
	0x03C1FBA4 MOV W21, W1
	0x03C1FBA8 MOV X22, X0
	0x03C1FBAC TBNZ X8, 0x0, 0x3C1FBD0
	0x03C1FBB0 ADRP X0, 0x534000
	0x03C1FBB4 LDR X0, [X0 + 0x90]
	0x03C1FBB8 BL 0x1C16CF4
	0x03C1FBBC ADRP X0, 0x540000
	0x03C1FBC0 LDR X0, [X0 + 0x48]
	0x03C1FBC4 BL 0x1C16CF4
	0x03C1FBC8 MOVZ W8, 0x1
	0x03C1FBCC STRB W8, [X26 + 0xDDA]
	0x03C1FBD0 LDR X0, [X27]
	0x03C1FBD4 LDR W8, [X0 + 0xE0]
	0x03C1FBD8 CBNZ W8, 0x3C1FBE0
	0x03C1FBDC BL 0x1C16DFC
	0x03C1FBE0 MOV X0, X22
	0x03C1FBE4 MOV X1, X31
	0x03C1FBE8 BL 0x3C1A69C
	0x03C1FBEC MOV X0, X22
	0x03C1FBF0 MOV W1, W25
	0x03C1FBF4 MOV X2, X31
	0x03C1FBF8 BL 0x3C1AE64
	0x03C1FBFC TBZ X0, 0x0, 0x3C1FCD0
	0x03C1FC00 ADRP X28, 0x534000
	0x03C1FC04 LDR X28, [X28 + 0x90]
	0x03C1FC08 LDR X0, [X28]
	0x03C1FC0C LDR W8, [X0 + 0xE0]
	0x03C1FC10 CBNZ W8, 0x3C1FC18
	0x03C1FC14 BL 0x1C16DFC
	0x03C1FC18 ORN W8, W31, W23, 0x0
	0x03C1FC1C AND W1, W8, 0x1
	0x03C1FC20 MOV W0, W25
	0x03C1FC24 MOV X2, X31
	0x03C1FC28 BL 0x3C61468
	0x03C1FC2C MOV W26, W0
	0x03C1FC30 LDR X0, [X28]
	0x03C1FC34 CMP W19, 0x1
	0x03C1FC38 CSET W28, NE
	0x03C1FC3C LDR W8, [X0 + 0xE0]
	0x03C1FC40 CBNZ W8, 0x3C1FC48
	0x03C1FC44 BL 0x1C16DFC
	0x03C1FC48 MOV W0, W25
	0x03C1FC4C MOV X1, X31
	0x03C1FC50 BL 0x3C61CEC
	0x03C1FC54 ORR W8, W28, 0x40
	0x03C1FC58 ANDS W31, W0, 0x1
	0x03C1FC5C MOVZ W9, 0x404
	0x03C1FC60 CSEL W8, W8, W28, NE
	0x03C1FC64 ORR W9, W8, W9, 0x0
	0x03C1FC68 ANDS W31, W24, 0x1
	0x03C1FC6C CSEL W24, W9, W8, NE

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x7C6000
	012 Move X8, [X27+3496]
	013 Move W19, W7
	014 Move W20, W6
	015 Move W21, W5
	016 Move W22, W4
	017 Move W23, W3
	018 Move W24, W2
	019 Move W25, W1
	020 Move X26, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51531776
	024 Add X0, X0, 748
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X27+3496], X0
	028 Move X0, X26
	029 Move W1, W25
	030 Move W2, W24
	031 Move W3, W23
	032 Move W4, W22
	033 Move W5, W21
	034 Move W6, W20
	035 Move W7, W19
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {52}
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X22, [X31+48]
	044 Move X21, [X31+56]
	045 Move X24, [X31+32]
	046 Move X23, [X31+40]
	047 Move X26, [X31+16]
	048 Move X25, [X31+24]
	049 Move X30, [X31+80]
	050 Move X27, [X31+88]
	051 Return 
	052 Move X0, 0x4FE000
	053 Move X0, [X0+464]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X19, X0
	057 Move X0, 0x541000
	058 Move X0, [X0+312]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Move X2, X31
	063 Call UnityException..ctor, X0, X1
	064 Move X0, 0x541000
	065 Move X0, [X0+320]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: System.Boolean ValidateFormat(UnityEngine.TextureFormat format, System.Int32 width, System.Int32 height)

Disassembly:
	0x03C1FC70 MOV W0, W24
	0x03C1FC74 BL 0x3C1FB14
	0x03C1FC78 LDR X0, [X27]
	0x03C1FC7C LDR W8, [X0 + 0xE0]
	0x03C1FC80 CBNZ W8, 0x3C1FC88
	0x03C1FC84 BL 0x1C16DFC
	0x03C1FC88 AND W1, W23, 0x1
	0x03C1FC8C MOV X0, X22
	0x03C1FC90 MOV X2, X31
	0x03C1FC94 BL 0x3C1ADF8
	0x03C1FC98 MOV W5, W0
	0x03C1FC9C MOV X0, X22
	0x03C1FCA0 MOV W1, W21
	0x03C1FCA4 MOV W2, W20
	0x03C1FCA8 MOV W3, W19
	0x03C1FCAC MOV W4, W26
	0x03C1FCB0 MOV W6, W24
	0x03C1FCB4 LDP X20, X19, [X31 + 0x50]
	0x03C1FCB8 LDP X22, X21, [X31 + 0x40]
	0x03C1FCBC LDP X24, X23, [X31 + 0x30]
	0x03C1FCC0 LDP X26, X25, [X31 + 0x20]
	0x03C1FCC4 LDP X28, X27, [X31 + 0x10]
	0x03C1FCC8 LDR X30, [X31], #0x60
	0x03C1FCCC B 0x3C1F6F4
	0x03C1FCD0 LDP X20, X19, [X31 + 0x50]
	0x03C1FCD4 LDP X22, X21, [X31 + 0x40]
	0x03C1FCD8 LDP X24, X23, [X31 + 0x30]
	0x03C1FCDC LDP X26, X25, [X31 + 0x20]
	0x03C1FCE0 LDP X28, X27, [X31 + 0x10]
	0x03C1FCE4 LDR X30, [X31], #0x60
	0x03C1FCE8 RET
	0x03C1FCEC AND W5, W5, 0x1
	0x03C1FCF0 MOV W6, W31
	0x03C1FCF4 B 0x3C1FB68
	0x03C1FCF8 STR X30, [X31 - 0x50]!
	0x03C1FCFC STP X26, X25, [X31 + 0x10]
	0x03C1FD00 STP X24, X23, [X31 + 0x20]
	0x03C1FD04 STP X22, X21, [X31 + 0x30]
	0x03C1FD08 STP X20, X19, [X31 + 0x40]
	0x03C1FD0C ADRP X26, 0x7C5000
	0x03C1FD10 LDRB W8, [X26 + 0xDDB]
	0x03C1FD14 MOV W20, W6
	0x03C1FD18 MOV W22, W5
	0x03C1FD1C MOV W25, W4
	0x03C1FD20 MOV W19, W3
	0x03C1FD24 MOV W21, W2
	0x03C1FD28 MOV W23, W1
	0x03C1FD2C MOV X24, X0
	0x03C1FD30 TBZ X8, 0x0, 0x3C1FD60
	0x03C1FD34 TBZ X25, 0x0, 0x3C1FD78
	0x03C1FD38 ADRP X25, 0x540000
	0x03C1FD3C LDR X25, [X25 + 0x48]
	0x03C1FD40 LDR X0, [X25]
	0x03C1FD44 LDR W8, [X0 + 0xE0]
	0x03C1FD48 CBNZ W8, 0x3C1FD54
	0x03C1FD4C BL 0x1C16DFC
	0x03C1FD50 LDR X0, [X25]
	0x03C1FD54 LDR X8, [X0 + 0xB8]
	0x03C1FD58 LDR W4, [X8]
	0x03C1FD5C B 0x3C1FD7C
	0x03C1FD60 ADRP X0, 0x540000
	0x03C1FD64 LDR X0, [X0 + 0x48]
	0x03C1FD68 BL 0x1C16CF4
	0x03C1FD6C MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move W20, W2
	008 Move X2, X31
	009 Move W22, W3
	010 Move W19, W1
	011 Call Texture.ValidateFormat, X0, X1
	012 Subtract W8, W19, 30
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W21, W0
	015 Move TEMP, X21
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {35}
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X22, 0x7C7000
	021 Move X8, [X22+184]
	022 Compare X8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, -51429376
	025 Add X0, X0, 3365
	026 Call 0x1C17CB8
	027 Move X8, X0
	028 Move [X22+184], X0
	029 Move W0, W20
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {43}
	035 And W0, W21, 1
	036 Move X20, [X31+64]
	037 Move X19, [X31+72]
	038 Move X22, [X31+48]
	039 Move X21, [X31+56]
	040 Move X30, [X31+32]
	041 Add X31, X31, 80
	042 Return X0
	043 Move X0, 0x535000
	044 Move X0, [X0+1216]
	045 Call 0x1C17D08
	046 Move TEMP, 0
	047 Not TEMP
	048 Move X8, TEMP
	049 Move [X31+8], X0
	050 Move [X31+16], X8
	051 Add X0, X31, 8
	052 Move X1, X31
	053 Move [X31+24], W19
	054 Call Enum.ToString, X0
	055 Move X19, X0
	056 Move X0, 0x541000
	057 Move X0, [X0+96]
	058 Call 0x1C17D08
	059 Move X1, X19
	060 Move X2, X31
	061 Call String.Format, X0, X1
	062 Move X19, X0
	063 Move X0, 0x4FE000
	064 Move X0, [X0+464]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X1, X19
	068 Move X2, X31
	069 Move X20, X0
	070 Call UnityException..ctor, X0, X1
	071 Move X0, 0x541000
	072 Move X0, [X0+328]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X20
	076 Call 0x1C17DEC

Method: System.Boolean ValidateFormat(UnityEngine.Experimental.Rendering.GraphicsFormat format, System.Int32 width, System.Int32 height)

Disassembly:
	0x03C1FDAC STP X30, X25, [X31 - 0x40]!
	0x03C1FDB0 STP X24, X23, [X31 + 0x10]
	0x03C1FDB4 STP X22, X21, [X31 + 0x20]
	0x03C1FDB8 STP X20, X19, [X31 + 0x30]
	0x03C1FDBC ADRP X25, 0x7C5000
	0x03C1FDC0 LDRB W8, [X25 + 0xDDC]
	0x03C1FDC4 MOV W21, W5
	0x03C1FDC8 MOV W24, W4
	0x03C1FDCC MOV W19, W3
	0x03C1FDD0 MOV W20, W2
	0x03C1FDD4 MOV W22, W1
	0x03C1FDD8 MOV X23, X0
	0x03C1FDDC TBZ X8, 0x0, 0x3C1FE0C
	0x03C1FDE0 TBZ X24, 0x0, 0x3C1FE24
	0x03C1FDE4 ADRP X24, 0x540000
	0x03C1FDE8 LDR X24, [X24 + 0x48]
	0x03C1FDEC LDR X0, [X24]
	0x03C1FDF0 LDR W8, [X0 + 0xE0]
	0x03C1FDF4 CBNZ W8, 0x3C1FE00
	0x03C1FDF8 BL 0x1C16DFC
	0x03C1FDFC LDR X0, [X24]
	0x03C1FE00 LDR X8, [X0 + 0xB8]
	0x03C1FE04 LDR W4, [X8]
	0x03C1FE08 B 0x3C1FE28
	0x03C1FE0C ADRP X0, 0x540000
	0x03C1FE10 LDR X0, [X0 + 0x48]
	0x03C1FE14 BL 0x1C16CF4
	0x03C1FE18 MOVZ W8, 0x1
	0x03C1FE1C STRB W8, [X25 + 0xDDC]
	0x03C1FE20 TBNZ X24, 0x0, 0x3C1FDE4
	0x03C1FE24 MOVZ W4, 0x1
	0x03C1FE28 AND W5, W21, 0x1
	0x03C1FE2C MOV X0, X23
	0x03C1FE30 MOV W1, W22
	0x03C1FE34 MOV W2, W20
	0x03C1FE38 MOV W3, W19
	0x03C1FE3C LDP X20, X19, [X31 + 0x30]
	0x03C1FE40 LDP X22, X21, [X31 + 0x20]
	0x03C1FE44 LDP X24, X23, [X31 + 0x10]
	0x03C1FE48 MOV W6, W31
	0x03C1FE4C LDP X30, X25, [X31], #0x40
	0x03C1FE50 B 0x3C1FB68
	0x03C1FE54 STR X30, [X31 - 0x40]!
	0x03C1FE58 STP X24, X23, [X31 + 0x10]
	0x03C1FE5C STP X22, X21, [X31 + 0x20]
	0x03C1FE60 STP X20, X19, [X31 + 0x30]
	0x03C1FE64 ADRP X24, 0x7C5000
	0x03C1FE68 LDRB W8, [X24 + 0xDDD]
	0x03C1FE6C MOV W23, W4
	0x03C1FE70 MOV W19, W3
	0x03C1FE74 MOV W20, W2
	0x03C1FE78 MOV W21, W1
	0x03C1FE7C MOV X22, X0
	0x03C1FE80 TBZ X8, 0x0, 0x3C1FEB0
	0x03C1FE84 TBZ X23, 0x0, 0x3C1FEC8
	0x03C1FE88 ADRP X23, 0x540000
	0x03C1FE8C LDR X23, [X23 + 0x48]
	0x03C1FE90 LDR X0, [X23]
	0x03C1FE94 LDR W8, [X0 + 0xE0]
	0x03C1FE98 CBNZ W8, 0x3C1FEA4
	0x03C1FE9C BL 0x1C16DFC
	0x03C1FEA0 LDR X0, [X23]
	0x03C1FEA4 LDR X8, [X0 + 0xB8]
	0x03C1FEA8 LDR W4, [X8]
	0x03C1FEAC B 0x3C1FECC
	0x03C1FEB0 ADRP X0, 0x540000
	0x03C1FEB4 LDR X0, [X0 + 0x48]
	0x03C1FEB8 BL 0x1C16CF4
	0x03C1FEBC MOVZ W8, 0x1
	0x03C1FEC0 STRB W8, [X24 + 0xDDD]
	0x03C1FEC4 TBNZ X23, 0x0, 0x3C1FE88
	0x03C1FEC8 MOVZ W4, 0x1
	0x03C1FECC MOV X0, X22
	0x03C1FED0 MOV W1, W21
	0x03C1FED4 MOV W2, W20
	0x03C1FED8 MOV W3, W19
	0x03C1FEDC LDP X20, X19, [X31 + 0x30]
	0x03C1FEE0 LDP X22, X21, [X31 + 0x20]
	0x03C1FEE4 LDP X24, X23, [X31 + 0x10]
	0x03C1FEE8 MOV W5, W31
	0x03C1FEEC MOV W6, W31
	0x03C1FEF0 LDR X30, [X31], #0x40
	0x03C1FEF4 B 0x3C1FB68

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x7C6000
	009 Move W8, [X23+3504]
	010 Move W22, W3
	011 Move W20, W2
	012 Move W19, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x535000
	019 Move X0, [X0+144]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3504], W8
	023 Move X0, X21
	024 Move W1, W19
	025 Move W2, W31
	026 Move X3, X31
	027 Call Texture.ValidateFormat, X0, X1, X2
	028 Move W21, W0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {63}
	033 Move X8, 0x535000
	034 Move X8, [X8+144]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move W0, W19
	041 Move X1, X31
	042 Call GraphicsFormatUtility.IsPVRTCFormat, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {63}
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X22, 0x7C7000
	049 Move X8, [X22+184]
	050 Compare X8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, -51429376
	053 Add X0, X0, 3365
	054 Call 0x1C17CB8
	055 Move X8, X0
	056 Move [X22+184], X0
	057 Move W0, W20
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {72}
	063 And W0, W21, 1
	064 Move X20, [X31+64]
	065 Move X19, [X31+72]
	066 Move X22, [X31+48]
	067 Move X21, [X31+56]
	068 Move X30, [X31+32]
	069 Move X23, [X31+40]
	070 Add X31, X31, 80
	071 Return X0
	072 Move X0, 0x535000
	073 Move X0, [X0+1208]
	074 Call 0x1C17D08
	075 Move TEMP, 0
	076 Not TEMP
	077 Move X8, TEMP
	078 Move [X31+8], X0
	079 Move [X31+16], X8
	080 Add X0, X31, 8
	081 Move X1, X31
	082 Move [X31+24], W19
	083 Call Enum.ToString, X0
	084 Move X19, X0
	085 Move X0, 0x541000
	086 Move X0, [X0+96]
	087 Call 0x1C17D08
	088 Move X1, X19
	089 Move X2, X31
	090 Call String.Format, X0, X1
	091 Move X19, X0
	092 Move X0, 0x4FE000
	093 Move X0, [X0+464]
	094 Call 0x1C17D08
	095 Call 0x1C17F10
	096 Move X1, X19
	097 Move X2, X31
	098 Move X20, X0
	099 Call UnityException..ctor, X0, X1
	100 Move X0, 0x541000
	101 Move X0, [X0+336]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X20
	105 Call 0x1C17DEC

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.DefaultFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C1FEF8 STR X30, [X31 - 0x30]!
	0x03C1FEFC STP X22, X21, [X31 + 0x10]
	0x03C1FF00 STP X20, X19, [X31 + 0x20]
	0x03C1FF04 LDR X8, [X0]
	0x03C1FF08 MOV W21, W1
	0x03C1FF0C MOV W20, W2
	0x03C1FF10 MOV X19, X0
	0x03C1FF14 LDP X9, X8, [X8 + 0x1E8]
	0x03C1FF18 MOV X1, X8
	0x03C1FF1C BLR X9
	0x03C1FF20 TBZ X0, 0x0, 0x3C1FF60
	0x03C1FF24 ADRP X22, 0x7C5000
	0x03C1FF28 LDR X3, [X22 + 0xDC8]
	0x03C1FF2C CBNZ X3, 0x3C1FF44
	0x03C1FF30 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C1FF34 ADD X0, X0, 0x1A8
	0x03C1FF38 BL 0x1C16CB8
	0x03C1FF3C MOV X3, X0
	0x03C1FF40 STR X0, [X22 + 0xDC8]
	0x03C1FF44 AND W1, W21, 0x1
	0x03C1FF48 AND W2, W20, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W22, W1
	008 Move X23, X0
	009 Move W0, W4
	010 Move X1, X31
	011 Move W19, W5
	012 Move W20, W3
	013 Move W21, W2
	014 Call SystemInfo.GetGraphicsFormat, X0
	015 Move W1, W22
	016 Move W2, W21
	017 Move W3, W20
	018 Move W5, W19
	019 Move X20, [X31+32]
	020 Move X19, [X31+40]
	021 Move X22, [X31+16]
	022 Move X21, [X31+24]
	023 Move W4, W0
	024 Move X0, X23
	025 Move X30, [X31+48]
	026 Move X23, [X31+56]

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.DefaultFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.Int32 mipCount)

Disassembly:
	0x03C1FFEC CBNZ X2, 0x3C20004
	0x03C1FFF0 ADRP X0, 0xFFFFFFFFFCECF000
	0x03C1FFF4 ADD X0, X0, 0xEDB
	0x03C1FFF8 BL 0x1C16CB8
	0x03C1FFFC MOV X2, X0
	0x03C20000 STR X0, [X21 + 0xDE8]
	0x03C20004 MOV X0, X20
	0x03C20008 MOV W1, W19
	0x03C2000C LDP X20, X19, [X31 + 0x10]
	0x03C20010 LDP X30, X21, [X31], #0x20
	0x03C20014 BR X2
	0x03C20018 STR X30, [X31 - 0x20]!
	0x03C2001C STP X20, X19, [X31 + 0x10]
	0x03C20020 ADRP X20, 0x7C4000
	0x03C20024 LDR X1, [X20 + 0xDF0]
	0x03C20028 MOV X19, X0
	0x03C2002C CBNZ X1, 0x3C20044
	0x03C20030 ADRP X0, 0xFFFFFFFFFCF06000
	0x03C20034 ADD X0, X0, 0xC85
	0x03C20038 BL 0x1C16CB8
	0x03C2003C MOV X1, X0
	0x03C20040 STR X0, [X20 + 0xDF0]
	0x03C20044 MOV X0, X19
	0x03C20048 LDP X20, X19, [X31 + 0x10]
	0x03C2004C LDR X30, [X31], #0x20
	0x03C20050 BR X1
	0x03C20054 STP X30, X21, [X31 - 0x20]!
	0x03C20058 STP X20, X19, [X31 + 0x10]
	0x03C2005C ADRP X21, 0x7C4000
	0x03C20060 LDR X2, [X21 + 0xDF8]
	0x03C20064 MOV W19, W1
	0x03C20068 MOV X20, X0
	0x03C2006C CBNZ X2, 0x3C20084
	0x03C20070 ADRP X0, 0xFFFFFFFFFCED0000
	0x03C20074 ADD X0, X0, 0xF5F
	0x03C20078 BL 0x1C16CB8
	0x03C2007C MOV X2, X0
	0x03C20080 STR X0, [X21 + 0xDF8]
	0x03C20084 MOV X0, X20
	0x03C20088 MOV W1, W19
	0x03C2008C LDP X20, X19, [X31 + 0x10]
	0x03C20090 LDP X30, X21, [X31], #0x20
	0x03C20094 BR X2
	0x03C20098 STR X30, [X31 - 0x20]!
	0x03C2009C STP X20, X19, [X31 + 0x10]
	0x03C200A0 ADRP X20, 0x7C4000
	0x03C200A4 LDR X1, [X20 + 0xE00]
	0x03C200A8 MOV X19, X0
	0x03C200AC CBNZ X1, 0x3C200C4
	0x03C200B0 ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C200B4 ADD X0, X0, 0x1EB
	0x03C200B8 BL 0x1C16CB8
	0x03C200BC MOV X1, X0
	0x03C200C0 STR X0, [X20 + 0xE00]
	0x03C200C4 MOV X0, X19
	0x03C200C8 LDP X20, X19, [X31 + 0x10]
	0x03C200CC LDR X30, [X31], #0x20
	0x03C200D0 BR X1
	0x03C200D4 STP X30, X21, [X31 - 0x20]!
	0x03C200D8 STP X20, X19, [X31 + 0x10]
	0x03C200DC ADRP X21, 0x7C4000
	0x03C200E0 LDR X2, [X21 + 0xE08]
	0x03C200E4 MOV W19, W1
	0x03C200E8 MOV X20, X0
	0x03C200EC CBNZ X2, 0x3C20104
	0x03C200F0 ADRP X0, 0xFFFFFFFFFCED0000
	0x03C200F4 ADD X0, X0, 0xF93
	0x03C200F8 BL 0x1C16CB8
	0x03C200FC MOV X2, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X26, 0x7C5000
	012 Move W8, [X26+3505]
	013 Move W20, W6
	014 Move W19, W5
	015 Move W25, W4
	016 Move W21, W3
	017 Move W22, W2
	018 Move W23, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x540000
	025 Move X0, [X0+72]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+3505], W8
	029 Move W0, W25
	030 Move X1, X31
	031 Call SystemInfo.GetGraphicsFormat, X0
	032 Move W4, W0
	033 Move X0, X24
	034 Move W1, W23
	035 Move W2, W22
	036 Move W3, W21
	037 Move W5, W19
	038 Call Texture2DArray..ctor, X0, X1, X2, X3, X4, X5
	039 Move W0, W25
	040 Move X1, X31
	041 Call SystemInfo.GetGraphicsFormat, X0
	042 Move W25, W0
	043 Move X0, X24
	044 Move W1, W25
	045 Move W2, W23
	046 Move W3, W22
	047 Call Texture2DArray.ValidateFormat, X0, X1, X2, X3
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {74}
	052 Move X26, 0x540000
	053 Move X26, [X26+72]
	054 Move W0, W19
	055 Call Texture2DArray.ValidateIsNotCrunched, X0
	056 Move X0, [X26]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X24
	062 Move W1, W25
	063 Move X2, X31
	064 Call Texture.GetTextureColorSpace, X0, X1
	065 Move W6, W0
	066 Move X0, X24
	067 Move W1, W23
	068 Move W2, W22
	069 Move W3, W21
	070 Move W4, W20
	071 Move W5, W25
	072 Move W7, W19
	073 Call Texture2DArray.Internal_Create, X0, X1, X2, X3, X4, X5, X6, X7
	074 Move X20, [X31+80]
	075 Move X19, [X31+88]
	076 Move X22, [X31+64]
	077 Move X21, [X31+72]
	078 Move X24, [X31+48]
	079 Move X23, [X31+56]
	080 Move X26, [X31+32]
	081 Move X25, [X31+40]
	082 Move X30, [X31+16]
	083 Add X31, X31, 96
	084 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C1FF4C MOV X0, X19
	0x03C1FF50 LDP X20, X19, [X31 + 0x20]
	0x03C1FF54 LDP X22, X21, [X31 + 0x10]
	0x03C1FF58 LDR X30, [X31], #0x30
	0x03C1FF5C BR X3
	0x03C1FF60 MOV X0, X19
	0x03C1FF64 MOV X1, X19
	0x03C1FF68 MOV X2, X31
	0x03C1FF6C BL 0x3C1B1DC
	0x03C1FF70 MOV X19, X0
	0x03C1FF74 ADRP X0, 0x540000
	0x03C1FF78 LDR X0, [X0 + 0x188]
	0x03C1FF7C BL 0x1C16D08
	0x03C1FF80 MOV X1, X0
	0x03C1FF84 MOV X0, X19
	0x03C1FF88 BL 0x1C16DEC
	0x03C1FF8C MOVZ W1, 0x1
	0x03C1FF90 MOV W2, W31
	0x03C1FF94 B 0x3C1FEF8
	0x03C1FF98 STR X30, [X31 - 0x20]!
	0x03C1FF9C STP X20, X19, [X31 + 0x10]
	0x03C1FFA0 ADRP X20, 0x7C5000
	0x03C1FFA4 LDR X1, [X20 + 0xDE0]
	0x03C1FFA8 MOV X19, X0
	0x03C1FFAC CBNZ X1, 0x3C1FFC4
	0x03C1FFB0 ADRP X0, 0xFFFFFFFFFCF0B000
	0x03C1FFB4 ADD X0, X0, 0x83A
	0x03C1FFB8 BL 0x1C16CB8
	0x03C1FFBC MOV X1, X0
	0x03C1FFC0 STR X0, [X20 + 0xDE0]
	0x03C1FFC4 MOV X0, X19
	0x03C1FFC8 LDP X20, X19, [X31 + 0x10]
	0x03C1FFCC LDR X30, [X31], #0x20
	0x03C1FFD0 BR X1
	0x03C1FFD4 STP X30, X21, [X31 - 0x20]!
	0x03C1FFD8 STP X20, X19, [X31 + 0x10]
	0x03C1FFDC ADRP X21, 0x7C5000
	0x03C1FFE0 LDR X2, [X21 + 0xDE8]
	0x03C1FFE4 MOV W19, W1
	0x03C1FFE8 MOV X20, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x7C6000
	011 Move X25, 0x541000
	012 Move W8, [X26+3506]
	013 Move X25, [X25+72]
	014 Move W19, W5
	015 Move W20, W4
	016 Move W21, W3
	017 Move W22, W2
	018 Move W23, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x541000
	025 Move X0, [X0+72]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+3506], W8
	029 Move X0, [X25]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X25]
	035 Move X8, [X0+184]
	036 Move X0, X24
	037 Move W1, W23
	038 Move W2, W22
	039 Move W6, [X8]
	040 Move W3, W21
	041 Move W4, W20
	042 Move W5, W19
	043 Move X20, [X31+64]
	044 Move X19, [X31+72]
	045 Move X22, [X31+48]
	046 Move X21, [X31+56]
	047 Move X24, [X31+32]
	048 Move X23, [X31+40]
	049 Move X26, [X31+16]
	050 Move X25, [X31+24]
	051 Move X30, [X31+80]
	052 Call Texture2DArray..ctor, X0, X1, X2, X3, X4, X5, X6
	053 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.TextureCreationFlags flags, System.Int32 mipCount)

Disassembly:
	0x03C20154 LDP X30, X21, [X31], #0x20
	0x03C20158 BR X2
	0x03C2015C STP X30, X21, [X31 - 0x20]!
	0x03C20160 STP X20, X19, [X31 + 0x10]
	0x03C20164 ADRP X21, 0x7C4000
	0x03C20168 LDR X2, [X21 + 0xE18]
	0x03C2016C MOV W19, W1
	0x03C20170 MOV X20, X0
	0x03C20174 CBNZ X2, 0x3C2018C
	0x03C20178 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C2017C ADD X0, X0, 0xA5
	0x03C20180 BL 0x1C16CB8
	0x03C20184 MOV X2, X0
	0x03C20188 STR X0, [X21 + 0xE18]
	0x03C2018C MOV X0, X20
	0x03C20190 MOV W1, W19
	0x03C20194 LDP X20, X19, [X31 + 0x10]
	0x03C20198 LDP X30, X21, [X31], #0x20
	0x03C2019C BR X2
	0x03C201A0 STR X30, [X31 - 0x20]!
	0x03C201A4 STP X20, X19, [X31 + 0x10]
	0x03C201A8 ADRP X20, 0x7C4000
	0x03C201AC LDR X2, [X20 + 0xE10]
	0x03C201B0 MOV X19, X0
	0x03C201B4 CBNZ X2, 0x3C201CC
	0x03C201B8 ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C201BC ADD X0, X0, 0x7A0
	0x03C201C0 BL 0x1C16CB8
	0x03C201C4 MOV X2, X0
	0x03C201C8 STR X0, [X20 + 0xE10]
	0x03C201CC MOV X0, X19
	0x03C201D0 LDP X20, X19, [X31 + 0x10]
	0x03C201D4 MOVZ W1, 0x1
	0x03C201D8 LDR X30, [X31], #0x20
	0x03C201DC BR X2
	0x03C201E0 STP X30, X21, [X31 - 0x20]!
	0x03C201E4 STP X20, X19, [X31 + 0x10]
	0x03C201E8 ADRP X21, 0x7C4000
	0x03C201EC LDR X2, [X21 + 0xE18]
	0x03C201F0 MOV W19, W1
	0x03C201F4 MOV X20, X0
	0x03C201F8 CBNZ X2, 0x3C20210
	0x03C201FC ADRP X0, 0xFFFFFFFFFCF03000
	0x03C20200 ADD X0, X0, 0xA5
	0x03C20204 BL 0x1C16CB8
	0x03C20208 MOV X2, X0
	0x03C2020C STR X0, [X21 + 0xE18]
	0x03C20210 MOV X0, X20
	0x03C20214 MOV W1, W19
	0x03C20218 LDP X20, X19, [X31 + 0x10]
	0x03C2021C LDP X30, X21, [X31], #0x20
	0x03C20220 BR X2
	0x03C20224 STR X30, [X31 - 0x20]!
	0x03C20228 STP X20, X19, [X31 + 0x10]
	0x03C2022C ADRP X20, 0x7C4000
	0x03C20230 LDR X1, [X20 + 0xE20]
	0x03C20234 MOV X19, X0
	0x03C20238 CBNZ X1, 0x3C20250
	0x03C2023C ADRP X0, 0xFFFFFFFFFCF0A000
	0x03C20240 ADD X0, X0, 0x861
	0x03C20244 BL 0x1C16CB8
	0x03C20248 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x7C5000
	013 Move X26, 0x540000
	014 Move W8, [X27+3507]
	015 Move X26, [X26+72]
	016 Move W20, W6
	017 Move W19, W5
	018 Move W21, W4
	019 Move W22, W3
	020 Move W23, W2
	021 Move W24, W1
	022 Move X25, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x540000
	028 Move X0, [X0+72]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X27+3507], W8
	032 Move X0, [X26]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X25
	038 Move X1, X31
	039 Call Texture..ctor, X0
	040 Move X0, X25
	041 Move W1, W21
	042 Move W2, W24
	043 Move W3, W23
	044 Call Texture2DArray.ValidateFormat, X0, X1, X2, X3
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {69}
	049 Move W0, W19
	050 Call Texture2DArray.ValidateIsNotCrunched, X0
	051 Move X0, [X26]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X25
	057 Move W1, W21
	058 Move X2, X31
	059 Call Texture.GetTextureColorSpace, X0, X1
	060 Move W6, W0
	061 Move X0, X25
	062 Move W1, W24
	063 Move W2, W23
	064 Move W3, W22
	065 Move W4, W20
	066 Move W5, W21
	067 Move W7, W19
	068 Call Texture2DArray.Internal_Create, X0, X1, X2, X3, X4, X5, X6, X7
	069 Move X20, [X31+80]
	070 Move X19, [X31+88]
	071 Move X22, [X31+64]
	072 Move X21, [X31+72]
	073 Move X24, [X31+48]
	074 Move X23, [X31+56]
	075 Move X26, [X31+32]
	076 Move X25, [X31+40]
	077 Move X30, [X31+16]
	078 Move X27, [X31+24]
	079 Add X31, X31, 96
	080 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.TextureFormat textureFormat, System.Int32 mipCount, System.Boolean linear, System.Boolean createUninitialized)

Disassembly:
	0x03C2024C STR X0, [X20 + 0xE20]
	0x03C20250 MOV X0, X19
	0x03C20254 LDP X20, X19, [X31 + 0x10]
	0x03C20258 LDR X30, [X31], #0x20
	0x03C2025C BR X1
	0x03C20260 STP X30, X21, [X31 - 0x20]!
	0x03C20264 STP X20, X19, [X31 + 0x10]
	0x03C20268 ADRP X21, 0x7C4000
	0x03C2026C LDR X2, [X21 + 0xE28]
	0x03C20270 MOV W19, W1
	0x03C20274 MOV X20, X0
	0x03C20278 CBNZ X2, 0x3C20290
	0x03C2027C ADRP X0, 0xFFFFFFFFFCED3000
	0x03C20280 ADD X0, X0, 0xA9
	0x03C20284 BL 0x1C16CB8
	0x03C20288 MOV X2, X0
	0x03C2028C STR X0, [X21 + 0xE28]
	0x03C20290 AND W1, W19, 0x1
	0x03C20294 MOV X0, X20
	0x03C20298 LDP X20, X19, [X31 + 0x10]
	0x03C2029C LDP X30, X21, [X31], #0x20
	0x03C202A0 BR X2
	0x03C202A4 STR X30, [X31 - 0x20]!
	0x03C202A8 STP X20, X19, [X31 + 0x10]
	0x03C202AC ADRP X20, 0x7C4000
	0x03C202B0 LDR X1, [X20 + 0xE30]
	0x03C202B4 MOV X19, X0
	0x03C202B8 CBNZ X1, 0x3C202D0
	0x03C202BC ADRP X0, 0xFFFFFFFFFCEFD000
	0x03C202C0 ADD X0, X0, 0x3A
	0x03C202C4 BL 0x1C16CB8
	0x03C202C8 MOV X1, X0
	0x03C202CC STR X0, [X20 + 0xE30]
	0x03C202D0 MOV X0, X19
	0x03C202D4 LDP X20, X19, [X31 + 0x10]
	0x03C202D8 LDR X30, [X31], #0x20
	0x03C202DC BR X1
	0x03C202E0 STP X30, X21, [X31 - 0x20]!
	0x03C202E4 STP X20, X19, [X31 + 0x10]
	0x03C202E8 ADRP X21, 0x7C4000
	0x03C202EC LDR X2, [X21 + 0xE38]
	0x03C202F0 MOV W19, W1
	0x03C202F4 MOV X20, X0
	0x03C202F8 CBNZ X2, 0x3C20310
	0x03C202FC ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C20300 ADD X0, X0, 0xBD2
	0x03C20304 BL 0x1C16CB8
	0x03C20308 MOV X2, X0
	0x03C2030C STR X0, [X21 + 0xE38]
	0x03C20310 MOV X0, X20
	0x03C20314 MOV W1, W19
	0x03C20318 LDP X20, X19, [X31 + 0x10]
	0x03C2031C LDP X30, X21, [X31], #0x20
	0x03C20320 BR X2
	0x03C20324 STP X30, X21, [X31 - 0x20]!
	0x03C20328 STP X20, X19, [X31 + 0x10]
	0x03C2032C ADRP X21, 0x7C4000
	0x03C20330 LDR X2, [X21 + 0xE40]
	0x03C20334 MOV W19, W1
	0x03C20338 MOV X20, X0
	0x03C2033C CBNZ X2, 0x3C20354
	0x03C20340 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C20344 ADD X0, X0, 0x379
	0x03C20348 BL 0x1C16CB8
	0x03C2034C MOV X2, X0
	0x03C20350 STR X0, [X21 + 0xE40]
	0x03C20354 MOV X0, X20
	0x03C20358 MOV W1, W19
	0x03C2035C LDP X20, X19, [X31 + 0x10]
	0x03C20360 LDP X30, X21, [X31], #0x20
	0x03C20364 BR X2
	0x03C20368 SUB X31, X31, 0x60
	0x03C2036C STP X30, X21, [X31 + 0x40]
	0x03C20370 STP X20, X19, [X31 + 0x50]
	0x03C20374 ADRP X20, 0x7C4000
	0x03C20378 LDRB W8, [X20 + 0xE48]
	0x03C2037C MOV X19, X0
	0x03C20380 TBNZ X8, 0x0, 0x3C20398
	0x03C20384 ADRP X0, 0x533000
	0x03C20388 LDR X0, [X0 + 0x90]
	0x03C2038C BL 0x1C16CF4
	0x03C20390 MOVZ W8, 0x1
	0x03C20394 STRB W8, [X20 + 0xE48]
	0x03C20398 ADRP X20, 0x7C4000
	0x03C2039C LDR X8, [X20 + 0xE10]
	0x03C203A0 CBNZ X8, 0x3C203B8
	0x03C203A4 ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C203A8 ADD X0, X0, 0x7A0
	0x03C203AC BL 0x1C16CB8
	0x03C203B0 MOV X8, X0
	0x03C203B4 STR X0, [X20 + 0xE10]
	0x03C203B8 MOVZ W1, 0x1
	0x03C203BC MOV X0, X19
	0x03C203C0 BLR X8
	0x03C203C4 CBZ W0, 0x3C20428
	0x03C203C8 ADRP X21, 0x533000
	0x03C203CC LDR X8, [X20 + 0xE10]
	0x03C203D0 LDR X21, [X21 + 0x90]
	0x03C203D4 CBNZ X8, 0x3C203EC
	0x03C203D8 ADRP X0, 0xFFFFFFFFFCF0C000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X27, 0x7C5000
	014 Move X28, 0x540000
	015 Move W8, [X27+3508]
	016 Move X28, [X28+72]
	017 Move W25, W7
	018 Move W24, W6
	019 Move W19, W5
	020 Move W26, W4
	021 Move W20, W3
	022 Move W21, W2
	023 Move W22, W1
	024 Move X23, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x534000
	030 Move X0, [X0+144]
	031 Call 0x1C17CF4
	032 Move X0, 0x540000
	033 Move X0, [X0+72]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X27+3508], W8
	037 Move X0, [X28]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X23
	043 Move X1, X31
	044 Call Texture..ctor, X0
	045 Move X0, X23
	046 Move W1, W26
	047 Move W2, W22
	048 Move W3, W21
	049 Call Texture2DArray.ValidateFormat, X0, X1, X2, X3
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {117}
	054 Move X29, 0x534000
	055 Move X29, [X29+144]
	056 Move X0, [X29]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 NotImplemented "Instruction ORN not yet implemented."
	062 And W1, W8, 1
	063 Move W0, W26
	064 Move X2, X31
	065 Call GraphicsFormatUtility.GetGraphicsFormat, X0, X1
	066 Move W27, W0
	067 Move X0, [X29]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CSET not yet implemented."
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move W0, W26
	075 Move X1, X31
	076 Call GraphicsFormatUtility.IsCrunchFormat, X0
	077 Or W8, W29, 64
	078 And W31, W0, 1
	079 Move W9, 1028
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Or W9, W8, W9
	082 And W31, W25, 1
	083 NotImplemented "Instruction CSEL not yet implemented."
	084 Move W0, W25
	085 Call Texture2DArray.ValidateIsNotCrunched, X0
	086 Move X0, [X28]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 And W1, W24, 1
	092 Move X0, X23
	093 Move X2, X31
	094 Call Texture.GetTextureColorSpace, X0, X1
	095 Move W6, W0
	096 Move X0, X23
	097 Move W1, W22
	098 Move W2, W21
	099 Move W3, W20
	100 Move W4, W19
	101 Move W5, W27
	102 Move W7, W25
	103 Move X20, [X31+80]
	104 Move X19, [X31+88]
	105 Move X22, [X31+64]
	106 Move X21, [X31+72]
	107 Move X24, [X31+48]
	108 Move X23, [X31+56]
	109 Move X26, [X31+32]
	110 Move X25, [X31+40]
	111 Move X28, [X31+16]
	112 Move X27, [X31+24]
	113 Move X29, [X31+96]
	114 Move X30, [X31+104]
	115 Call Texture2DArray.Internal_Create, X0, X1, X2, X3, X4, X5, X6, X7
	116 Return 
	117 Move X20, [X31+80]
	118 Move X19, [X31+88]
	119 Move X22, [X31+64]
	120 Move X21, [X31+72]
	121 Move X24, [X31+48]
	122 Move X23, [X31+56]
	123 Move X26, [X31+32]
	124 Move X25, [X31+40]
	125 Move X28, [X31+16]
	126 Move X27, [X31+24]
	127 Move X29, [X31+96]
	128 Move X30, [X31+104]
	129 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.TextureFormat textureFormat, System.Int32 mipCount, System.Boolean linear)

Disassembly:
	0x03C203DC ADD X0, X0, 0x7A0
	0x03C203E0 BL 0x1C16CB8
	0x03C203E4 MOV X8, X0
	0x03C203E8 STR X0, [X20 + 0xE10]
	0x03C203EC MOVZ W1, 0x1
	0x03C203F0 MOV X0, X19
	0x03C203F4 BLR X8
	0x03C203F8 LDR X8, [X21]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 And W6, W6, 1
	004 Move W7, W31
	005 Call Texture2DArray..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	006 Move X30, [X31+16]
	007 Add X31, X31, 32
	008 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain, System.Boolean linear, System.Boolean createUninitialized)

Disassembly:
	0x03C203FC MOV W19, W0
	0x03C20400 LDR W9, [X8 + 0xE0]
	0x03C20404 CBNZ W9, 0x3C20410
	0x03C20408 MOV X0, X8
	0x03C2040C BL 0x1C16DFC
	0x03C20410 MOV W0, W19
	0x03C20414 LDP X20, X19, [X31 + 0x50]
	0x03C20418 LDP X30, X21, [X31 + 0x40]
	0x03C2041C MOV X1, X31
	0x03C20420 ADD X31, X31, 0x60
	0x03C20424 B 0x3C61A18
	0x03C20428 ADRP X20, 0x7C4000
	0x03C2042C LDR X8, [X20 + 0xF10]
	0x03C20430 MOVI V0.2D, 0x0
	0x03C20434 STR W31, [X31 + 0x30]
	0x03C20438 STP V0, V0, [X31 + 0x10]
	0x03C2043C STR V0, [X31]
	0x03C20440 CBNZ X8, 0x3C20458
	0x03C20444 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C20448 ADD X0, X0, 0x409
	0x03C2044C BL 0x1C16CB8
	0x03C20450 MOV X8, X0
	0x03C20454 STR X0, [X20 + 0xF10]
	0x03C20458 ADD X1, X31, 0x0
	0x03C2045C MOV X0, X19
	0x03C20460 BLR X8
	0x03C20464 LDR W8, [X31 + 0x24]
	0x03C20468 LDP X20, X19, [X31 + 0x50]
	0x03C2046C LDP X30, X21, [X31 + 0x40]
	0x03C20470 CMP W8, 0x2
	0x03C20474 MOVZ W8, 0x3
	0x03C20478 CSINC W0, W8, W31, NE
	0x03C2047C ADD X31, X31, 0x60
	0x03C20480 RET
	0x03C20484 SUB X31, X31, 0x60
	0x03C20488 STP X30, X21, [X31 + 0x40]
	0x03C2048C STP X20, X19, [X31 + 0x50]
	0x03C20490 ADRP X21, 0x7C4000
	0x03C20494 MOV X19, X8
	0x03C20498 LDR X8, [X21 + 0xF10]
	0x03C2049C MOV X20, X0
	0x03C204A0 MOVI V0.2D, 0x0
	0x03C204A4 STR W31, [X31 + 0x30]
	0x03C204A8 STP V0, V0, [X31 + 0x10]
	0x03C204AC STR V0, [X31]
	0x03C204B0 CBNZ X8, 0x3C204C8
	0x03C204B4 ADRP X0, 0xFFFFFFFFFCEEF000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x7C5000
	012 Move W8, [X27+3509]
	013 Move W21, W7
	014 Move W23, W6
	015 Move W26, W5
	016 Move W19, W4
	017 Move W20, W3
	018 Move W22, W2
	019 Move W24, W1
	020 Move X25, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {39}
	025 Move TEMP, X26
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {48}
	029 Move X26, 0x540000
	030 Move X26, [X26+72]
	031 Move X0, [X26]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X26]
	037 Move X8, [X0+184]
	038 Move W5, [X8]
	039 Move X0, 0x540000
	040 Move X0, [X0+72]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X27+3509], W8
	044 Move TEMP, X26
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {29}
	048 Move W5, 1
	049 And W6, W23, 1
	050 And W7, W21, 1
	051 Move X0, X25
	052 Move W1, W24
	053 Move W2, W22
	054 Move W3, W20
	055 Move W4, W19
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X24, [X31+32]
	061 Move X23, [X31+40]
	062 Move X26, [X31+16]
	063 Move X25, [X31+24]
	064 Move X30, [X31+80]
	065 Move X27, [X31+88]
	066 Call Texture2DArray..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	067 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain, System.Boolean linear)

Disassembly:
	0x03C204B8 ADD X0, X0, 0x409
	0x03C204BC BL 0x1C16CB8
	0x03C204C0 MOV X8, X0
	0x03C204C4 STR X0, [X21 + 0xF10]
	0x03C204C8 ADD X1, X31, 0x0
	0x03C204CC MOV X0, X20
	0x03C204D0 BLR X8
	0x03C204D4 LDR W8, [X31 + 0x30]
	0x03C204D8 LDP V1, V0, [X31 + 0x10]
	0x03C204DC LDR V2, [X31]
	0x03C204E0 LDP X30, X21, [X31 + 0x40]
	0x03C204E4 STR W8, [X19 + 0x30]
	0x03C204E8 STP V1, V0, [X19 + 0x10]
	0x03C204EC STR V2, [X19]
	0x03C204F0 LDP X20, X19, [X31 + 0x50]
	0x03C204F4 ADD X31, X31, 0x60
	0x03C204F8 RET
	0x03C204FC STP X30, X21, [X31 - 0x20]!
	0x03C20500 STP X20, X19, [X31 + 0x10]
	0x03C20504 ADRP X21, 0x7C4000
	0x03C20508 LDR X2, [X21 + 0xE50]
	0x03C2050C MOV W19, W1
	0x03C20510 MOV X20, X0
	0x03C20514 CBNZ X2, 0x3C2052C
	0x03C20518 ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C2051C ADD X0, X0, 0x3FE
	0x03C20520 BL 0x1C16CB8
	0x03C20524 MOV X2, X0
	0x03C20528 STR X0, [X21 + 0xE50]
	0x03C2052C MOV X0, X20
	0x03C20530 MOV W1, W19
	0x03C20534 LDP X20, X19, [X31 + 0x10]
	0x03C20538 LDP X30, X21, [X31], #0x20
	0x03C2053C BR X2
	0x03C20540 STP X30, X21, [X31 - 0x20]!
	0x03C20544 STP X20, X19, [X31 + 0x10]
	0x03C20548 ADRP X21, 0x7C4000
	0x03C2054C LDR X2, [X21 + 0xE58]
	0x03C20550 MOV W19, W1
	0x03C20554 MOV X20, X0
	0x03C20558 CBNZ X2, 0x3C20570
	0x03C2055C ADRP X0, 0xFFFFFFFFFCF04000
	0x03C20560 ADD X0, X0, 0xC47
	0x03C20564 BL 0x1C16CB8
	0x03C20568 MOV X2, X0
	0x03C2056C STR X0, [X21 + 0xE58]
	0x03C20570 MOV X0, X20
	0x03C20574 MOV W1, W19
	0x03C20578 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X26, 0x7C5000
	012 Move W8, [X26+3510]
	013 Move W22, W6
	014 Move W25, W5
	015 Move W19, W4
	016 Move W20, W3
	017 Move W21, W2
	018 Move W23, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {38}
	024 Move TEMP, X25
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {47}
	028 Move X25, 0x540000
	029 Move X25, [X25+72]
	030 Move X0, [X25]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X25]
	036 Move X8, [X0+184]
	037 Move W5, [X8]
	038 Move X0, 0x540000
	039 Move X0, [X0+72]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X26+3510], W8
	043 Move TEMP, X25
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {28}
	047 Move W5, 1
	048 And W6, W22, 1
	049 Move X0, X24
	050 Move W1, W23
	051 Move W2, W21
	052 Move W3, W20
	053 Move W4, W19
	054 Move W7, W31
	055 Call Texture2DArray..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	056 Move X20, [X31+80]
	057 Move X19, [X31+88]
	058 Move X22, [X31+64]
	059 Move X21, [X31+72]
	060 Move X24, [X31+48]
	061 Move X23, [X31+56]
	062 Move X26, [X31+32]
	063 Move X25, [X31+40]
	064 Move X30, [X31+16]
	065 Add X31, X31, 96
	066 Return 

Method: System.Void .ctor(System.Int32 width, System.Int32 height, System.Int32 depth, UnityEngine.TextureFormat textureFormat, System.Boolean mipChain)

Disassembly:
	0x03C2057C LDP X30, X21, [X31], #0x20
	0x03C20580 BR X2
	0x03C20584 STP X30, X21, [X31 - 0x20]!
	0x03C20588 STP X20, X19, [X31 + 0x10]
	0x03C2058C ADRP X21, 0x7C4000
	0x03C20590 LDR X2, [X21 + 0xE60]
	0x03C20594 MOV W19, W1
	0x03C20598 MOV X20, X0
	0x03C2059C CBNZ X2, 0x3C205B4
	0x03C205A0 ADRP X0, 0xFFFFFFFFFCECE000
	0x03C205A4 ADD X0, X0, 0xF0E
	0x03C205A8 BL 0x1C16CB8
	0x03C205AC MOV X2, X0
	0x03C205B0 STR X0, [X21 + 0xE60]
	0x03C205B4 AND W1, W19, 0x1
	0x03C205B8 MOV X0, X20
	0x03C205BC LDP X20, X19, [X31 + 0x10]
	0x03C205C0 LDP X30, X21, [X31], #0x20
	0x03C205C4 BR X2
	0x03C205C8 STR X30, [X31 - 0x20]!
	0x03C205CC STP X20, X19, [X31 + 0x10]
	0x03C205D0 ADRP X20, 0x7C4000
	0x03C205D4 LDR X1, [X20 + 0xE68]
	0x03C205D8 MOV X19, X0
	0x03C205DC CBNZ X1, 0x3C205F4
	0x03C205E0 ADRP X0, 0xFFFFFFFFFCEE2000
	0x03C205E4 ADD X0, X0, 0xFD1
	0x03C205E8 BL 0x1C16CB8
	0x03C205EC MOV X1, X0
	0x03C205F0 STR X0, [X20 + 0xE68]
	0x03C205F4 MOV X0, X19
	0x03C205F8 LDP X20, X19, [X31 + 0x10]
	0x03C205FC LDR X30, [X31], #0x20
	0x03C20600 BR X1
	0x03C20604 STP X30, X21, [X31 - 0x20]!
	0x03C20608 STP X20, X19, [X31 + 0x10]
	0x03C2060C ADRP X21, 0x7C4000
	0x03C20610 LDR X2, [X21 + 0xE70]
	0x03C20614 MOV W19, W1
	0x03C20618 MOV X20, X0
	0x03C2061C CBNZ X2, 0x3C20634
	0x03C20620 ADRP X0, 0xFFFFFFFFFCEDD000
	0x03C20624 ADD X0, X0, 0x45E
	0x03C20628 BL 0x1C16CB8
	0x03C2062C MOV X2, X0
	0x03C20630 STR X0, [X21 + 0xE70]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x7C5000
	011 Move W8, [X25+3511]
	012 Move W24, W5
	013 Move W19, W4
	014 Move W20, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {36}
	022 Move TEMP, X24
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {45}
	026 Move X24, 0x540000
	027 Move X24, [X24+72]
	028 Move X0, [X24]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X24]
	034 Move X8, [X0+184]
	035 Move W5, [X8]
	036 Move X0, 0x540000
	037 Move X0, [X0+72]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X25+3511], W8
	041 Move TEMP, X24
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {26}
	045 Move W5, 1
	046 Move X0, X23
	047 Move W1, W22
	048 Move W2, W21
	049 Move W3, W20
	050 Move W4, W19
	051 Move W6, W31
	052 Move W7, W31
	053 Call Texture2DArray..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	054 Move X20, [X31+64]
	055 Move X19, [X31+72]
	056 Move X22, [X31+48]
	057 Move X21, [X31+56]
	058 Move X24, [X31+32]
	059 Move X23, [X31+40]
	060 Move X30, [X31+16]
	061 Move X25, [X31+24]
	062 Add X31, X31, 80
	063 Return 

Method: System.Void ValidateIsNotCrunched(UnityEngine.Experimental.Rendering.TextureCreationFlags flags)

Disassembly:
	0x03C20100 STR X0, [X21 + 0xE08]
	0x03C20104 MOV X0, X20
	0x03C20108 MOV W1, W19
	0x03C2010C LDP X20, X19, [X31 + 0x10]
	0x03C20110 LDP X30, X21, [X31], #0x20
	0x03C20114 BR X2
	0x03C20118 STP X30, X21, [X31 - 0x20]!
	0x03C2011C STP X20, X19, [X31 + 0x10]
	0x03C20120 ADRP X21, 0x7C4000
	0x03C20124 LDR X2, [X21 + 0xE10]
	0x03C20128 MOV W19, W1
	0x03C2012C MOV X20, X0
	0x03C20130 CBNZ X2, 0x3C20148
	0x03C20134 ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C20138 ADD X0, X0, 0x7A0
	0x03C2013C BL 0x1C16CB8
	0x03C20140 MOV X2, X0
	0x03C20144 STR X0, [X21 + 0xE10]
	0x03C20148 AND W1, W19, 0x1
	0x03C2014C MOV X0, X20
	0x03C20150 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move TEMP, X0
	002 And TEMP, TEMP, 64
	003 Compare TEMP, 64
	004 JumpIfEqual {6}
	005 Return 
	006 Move [X31-16], X30
	007 Move [X31-8], X19
	008 Move X0, 0x4DC000
	009 Move X0, [X0+1400]
	010 Call 0x1C17D08
	011 Call 0x1C17F10
	012 Move X19, X0
	013 Move X0, 0x540000
	014 Move X0, [X0+344]
	015 Call 0x1C17D08
	016 Move X1, X0
	017 Move X0, X19
	018 Move X2, X31
	019 Call ArgumentException..ctor, X0, X1
	020 Move X0, 0x540000
	021 Move X0, [X0+352]
	022 Call 0x1C17D08
	023 Move X1, X0
	024 Move X0, X19
	025 Call 0x1C17DEC

