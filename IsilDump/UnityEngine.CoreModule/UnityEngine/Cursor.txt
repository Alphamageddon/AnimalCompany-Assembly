Type: UnityEngine.Cursor

Method: System.Void SetCursor(UnityEngine.Texture2D texture, UnityEngine.Vector2 hotspot, UnityEngine.CursorMode cursorMode)

Disassembly:
	0x03C255EC LDP S9, S8, [X0 + 0x8]
	0x03C255F0 MOV X0, X19
	0x03C255F4 MOV X1, X31
	0x03C255F8 BL 0x338FDC0
	0x03C255FC TBZ X0, 0x0, 0x3C25648
	0x03C25600 ADD X0, X19, 0x4
	0x03C25604 MOV V0.16B, V10.16B
	0x03C25608 MOV X1, X31
	0x03C2560C BL 0x338FDC0
	0x03C25610 TBZ X0, 0x0, 0x3C25648
	0x03C25614 ADD X0, X19, 0x8
	0x03C25618 MOV V0.16B, V9.16B
	0x03C2561C MOV X1, X31
	0x03C25620 BL 0x338FDC0
	0x03C25624 TBZ X0, 0x0, 0x3C25648
	0x03C25628 ADD X0, X19, 0xC
	0x03C2562C MOV V0.16B, V8.16B
	0x03C25630 LDP X20, X19, [X31 + 0x30]
	0x03C25634 LDP X30, X21, [X31 + 0x20]
	0x03C25638 LDP D9, D8, [X31 + 0x10]
	0x03C2563C MOV X1, X31
	0x03C25640 LDR V10, [X31], #0x40

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7C0000
	007 Move X8, [X21+3944]
	008 Move W19, W1
	009 Move X20, X0
	010 Move [X31+8], S0
	011 Move [X31+16], S1
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51482624
	015 Add X0, X0, 805
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X21+3944], X0
	019 Add X1, X31, 8
	020 Move X0, X20
	021 Move W2, W19
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X30, [X31+16]
	026 Move X21, [X31+24]
	027 Add X31, X31, 48
	028 Return 

Method: System.Void set_visible(System.Boolean value)

Disassembly:
	0x03C25698 TBZ X0, 0x0, 0x3C256CC
	0x03C2569C ADD X0, X19, 0x8
	0x03C256A0 MOV V0.16B, V9.16B
	0x03C256A4 MOV X1, X31
	0x03C256A8 BL 0x338FDC0
	0x03C256AC TBZ X0, 0x0, 0x3C256CC
	0x03C256B0 ADD X0, X19, 0xC
	0x03C256B4 MOV V0.16B, V8.16B
	0x03C256B8 LDP X30, X19, [X31 + 0x20]
	0x03C256BC LDP D9, D8, [X31 + 0x10]
	0x03C256C0 MOV X1, X31
	0x03C256C4 LDR V10, [X31], #0x30
	0x03C256C8 B 0x338FDC0
	0x03C256CC LDP X30, X19, [X31 + 0x20]
	0x03C256D0 LDP D9, D8, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C0000
	005 Move X1, [X20+3920]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51515392
	010 Add X0, X0, 99
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3920], X0
	014 And W0, W19, 1
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.CursorLockMode get_lockState()

Disassembly:
	0x03C256D4 MOV W0, W31
	0x03C256D8 LDR V10, [X31], #0x30
	0x03C256DC RET
	0x03C256E0 FADD S0, S0, S4
	0x03C256E4 FADD S1, S1, S5
	0x03C256E8 FADD S2, S2, S6
	0x03C256EC FADD S3, S3, S7
	0x03C256F0 RET
	0x03C256F4 FSUB S0, S0, S4
	0x03C256F8 FSUB S1, S1, S5

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7C0000
	004 Move X0, [X19+3928]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51445760
	008 Add X0, X0, 2495
	009 Call 0x1C17CB8
	010 Move [X19+3928], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_lockState(UnityEngine.CursorLockMode value)

Disassembly:
	0x03C256FC FSUB S2, S2, S6
	0x03C25700 FSUB S3, S3, S7
	0x03C25704 RET
	0x03C25708 FMUL S0, S0, S4
	0x03C2570C FMUL S1, S1, S5
	0x03C25710 FMUL S2, S2, S6
	0x03C25714 FMUL S3, S3, S7
	0x03C25718 RET
	0x03C2571C FMUL S0, S0, S4
	0x03C25720 FMUL S1, S1, S4
	0x03C25724 FMUL S2, S2, S4
	0x03C25728 FMUL S3, S3, S4
	0x03C2572C RET
	0x03C25730 FMUL S5, S1, S0
	0x03C25734 FMUL S1, S2, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7C0000
	005 Move X1, [X20+3936]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51404800
	010 Add X0, X0, 3093
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3936], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetCursor_Injected(UnityEngine.Texture2D texture, ref UnityEngine.Vector2 hotspot, UnityEngine.CursorMode cursorMode)

Disassembly:
	0x03C25644 B 0x338FDC0
	0x03C25648 LDP X20, X19, [X31 + 0x30]
	0x03C2564C LDP X30, X21, [X31 + 0x20]
	0x03C25650 LDP D9, D8, [X31 + 0x10]
	0x03C25654 MOV W0, W31
	0x03C25658 LDR V10, [X31], #0x40
	0x03C2565C RET
	0x03C25660 STR D10, [X31 - 0x30]!
	0x03C25664 STP D9, D8, [X31 + 0x10]
	0x03C25668 STP X30, X19, [X31 + 0x20]
	0x03C2566C MOV X1, X31
	0x03C25670 MOV V8.16B, V3.16B
	0x03C25674 MOV V9.16B, V2.16B
	0x03C25678 MOV V10.16B, V1.16B
	0x03C2567C MOV X19, X0
	0x03C25680 BL 0x338FDC0
	0x03C25684 TBZ X0, 0x0, 0x3C256CC
	0x03C25688 ADD X0, X19, 0x4
	0x03C2568C MOV V0.16B, V10.16B
	0x03C25690 MOV X1, X31
	0x03C25694 BL 0x338FDC0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7C0000
	007 Move X3, [X22+3944]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51482624
	014 Add X0, X0, 805
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+3944], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

