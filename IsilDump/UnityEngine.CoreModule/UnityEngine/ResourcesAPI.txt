Type: UnityEngine.ResourcesAPI

Method: UnityEngine.ResourcesAPI get_ActiveAPI()

Disassembly:
	0x03C31EFC ADRP X8, 0x52E000
	0x03C31F00 LDR X0, [X21]
	0x03C31F04 LDR X8, [X8 + 0x388]
	0x03C31F08 LDR W9, [X0 + 0xE0]
	0x03C31F0C LDR X20, [X8]
	0x03C31F10 CBNZ W9, 0x3C31F18
	0x03C31F14 BL 0x1C16DFC
	0x03C31F18 MOV X0, X20
	0x03C31F1C MOV X1, X31
	0x03C31F20 BL 0x338C698
	0x03C31F24 LDR X8, [X19]
	0x03C31F28 MOV X1, X0
	0x03C31F2C MOV X0, X19
	0x03C31F30 MOV W2, W31
	0x03C31F34 LDR X9, [X8 + 0x208]
	0x03C31F38 LDR X3, [X8 + 0x210]
	0x03C31F3C BLR X9
	0x03C31F40 CBZ X0, 0x3C31F60
	0x03C31F44 LDR W8, [X0 + 0x18]
	0x03C31F48 CMP W8, 0x0
	0x03C31F4C CSET W0, NE
	0x03C31F50 LDP X20, X19, [X31 + 0x20]
	0x03C31F54 LDP X22, X21, [X31 + 0x10]
	0x03C31F58 LDR X30, [X31], #0x30
	0x03C31F5C RET
	0x03C31F60 BL 0x1C16F20
	0x03C31F64 STP X30, X23, [X31 - 0x30]!
	0x03C31F68 STP X22, X21, [X31 + 0x10]
	0x03C31F6C STP X20, X19, [X31 + 0x20]
	0x03C31F70 ADRP X20, 0x7B4000
	0x03C31F74 ADRP X21, 0x4C2000
	0x03C31F78 ADRP X22, 0x52E000
	0x03C31F7C ADRP X23, 0x52E000
	0x03C31F80 LDRB W8, [X20 + 0x2A5]
	0x03C31F84 LDR X21, [X21 + 0x6C0]
	0x03C31F88 LDR X22, [X22 + 0x368]
	0x03C31F8C LDR X23, [X23 + 0x390]
	0x03C31F90 MOV X19, X0
	0x03C31F94 TBNZ X8, 0x0, 0x3C31FC4
	0x03C31F98 ADRP X0, 0x52E000
	0x03C31F9C LDR X0, [X0 + 0x390]
	0x03C31FA0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B5000
	005 Move X19, 0x52E000
	006 Move W8, [X20+600]
	007 Move X19, [X19+3560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x52E000
	013 Move X0, [X0+3560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+600], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0x7B5000
	023 Move W8, [X20+3400]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x52E000
	027 Move X0, [X0+3560]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+3400], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X8, [X8+8]
	039 Compare X8, 0
	040 JumpIfNotEqual {48}
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X19]
	046 Move X8, [X0+184]
	047 Move X8, [X8]
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X0, X8
	051 Move X30, [X31+32]
	052 Return X0

Method: UnityEngine.ResourcesAPI get_overrideAPI()

Disassembly:
	0x03C31FA4 ADRP X0, 0x52E000
	0x03C31FA8 LDR X0, [X0 + 0x368]
	0x03C31FAC BL 0x1C16CF4
	0x03C31FB0 ADRP X0, 0x4C2000
	0x03C31FB4 LDR X0, [X0 + 0x6C0]
	0x03C31FB8 BL 0x1C16CF4
	0x03C31FBC MOVZ W8, 0x1
	0x03C31FC0 STRB W8, [X20 + 0x2A5]
	0x03C31FC4 LDR X0, [X21]
	0x03C31FC8 LDR W8, [X0 + 0xE0]
	0x03C31FCC CBNZ W8, 0x3C31FD4
	0x03C31FD0 BL 0x1C16DFC
	0x03C31FD4 MOV X0, X19
	0x03C31FD8 MOV X1, X31
	0x03C31FDC MOV X2, X31
	0x03C31FE0 BL 0x3395F0C
	0x03C31FE4 TBZ X0, 0x0, 0x3C3205C
	0x03C31FE8 LDR X0, [X21]
	0x03C31FEC LDR X20, [X22]
	0x03C31FF0 LDR W8, [X0 + 0xE0]
	0x03C31FF4 CBNZ W8, 0x3C31FFC
	0x03C31FF8 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B5000
	005 Move X19, 0x52E000
	006 Move W8, [X20+601]
	007 Move X19, [X19+3560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x52E000
	013 Move X0, [X0+3560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+601], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03C31FFC MOV X0, X20
	0x03C32000 MOV X1, X31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: UnityEngine.Object[] FindObjectsOfTypeAll(System.Type systemTypeInstance)

Disassembly:
	0x03C32004 BL 0x338C698
	0x03C32008 MOV X1, X0
	0x03C3200C MOV X0, X19
	0x03C32010 MOV X2, X31
	0x03C32014 BL 0x3395F0C
	0x03C32018 TBZ X0, 0x0, 0x3C3205C
	0x03C3201C LDR X0, [X23]
	0x03C32020 LDR W8, [X0 + 0xE0]
	0x03C32024 CBNZ W8, 0x3C3202C
	0x03C32028 BL 0x1C16DFC
	0x03C3202C MOV X0, X19
	0x03C32030 BL 0x3C31E50
	0x03C32034 CMP W0, 0x0
	0x03C32038 B.GT 0x3C32060
	0x03C3203C CBZ X19, 0x3C32070

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B4000
	005 Move X2, [X20+552]
	006 Move X19, X1
	007 Compare X2, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51535872
	010 Add X0, X0, 1138
	011 Call 0x1C17CB8
	012 Move X2, X0
	013 Move [X20+552], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X2

Method: UnityEngine.Shader FindShaderByName(System.String name)

Disassembly:
	0x03C32040 LDR X8, [X19]
	0x03C32044 MOV X0, X19
	0x03C32048 LDR X9, [X8 + 0x818]
	0x03C3204C LDR X1, [X8 + 0x820]
	0x03C32050 BLR X9
	0x03C32054 MOV X19, X0
	0x03C32058 B 0x3C31FC4
	0x03C3205C MOV W0, W31
	0x03C32060 LDP X20, X19, [X31 + 0x20]
	0x03C32064 LDP X22, X21, [X31 + 0x10]
	0x03C32068 LDP X30, X23, [X31], #0x30
	0x03C3206C RET
	0x03C32070 BL 0x1C16F20
	0x03C32074 STP X30, X21, [X31 - 0x20]!
	0x03C32078 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B4000
	005 Move X2, [X20+560]
	006 Move X19, X1
	007 Compare X2, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51617792
	010 Add X0, X0, 467
	011 Call 0x1C17CB8
	012 Move X2, X0
	013 Move [X20+560], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X2

Method: UnityEngine.Object Load(System.String path, System.Type systemTypeInstance)

Disassembly:
	0x03C3207C ADRP X21, 0x7B3000
	0x03C32080 ADRP X20, 0x52D000
	0x03C32084 LDRB W8, [X21 + 0x2A6]
	0x03C32088 LDR X20, [X20 + 0x390]
	0x03C3208C MOV X19, X0
	0x03C32090 TBNZ X8, 0x0, 0x3C320B4
	0x03C32094 ADRP X0, 0x52D000
	0x03C32098 LDR X0, [X0 + 0x398]
	0x03C3209C BL 0x1C16CF4
	0x03C320A0 ADRP X0, 0x52D000
	0x03C320A4 LDR X0, [X0 + 0x390]
	0x03C320A8 BL 0x1C16CF4
	0x03C320AC MOVZ W8, 0x1
	0x03C320B0 STRB W8, [X21 + 0x2A6]
	0x03C320B4 LDR X0, [X20]
	0x03C320B8 ADRP X20, 0x52D000
	0x03C320BC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B4000
	006 Move X19, X2
	007 Move X2, [X21+568]
	008 Move X20, X1
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51601408
	012 Add X0, X0, 689
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+568], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Object[] LoadAll(System.String path, System.Type systemTypeInstance)

Disassembly:
	0x03C320C0 LDR X20, [X20 + 0x398]
	0x03C320C4 CBNZ W8, 0x3C320CC
	0x03C320C8 BL 0x1C16DFC
	0x03C320CC LDR X1, [X20]
	0x03C320D0 MOV X0, X19
	0x03C320D4 BL 0x219C760
	0x03C320D8 CBZ X0, 0x3C320E0
	0x03C320DC LDR W0, [X0 + 0x10]
	0x03C320E0 LDP X20, X19, [X31 + 0x10]
	0x03C320E4 LDP X30, X21, [X31], #0x20
	0x03C320E8 RET
	0x03C320EC LDR W0, [X0 + 0x10]
	0x03C320F0 RET
	0x03C320F4 STP X30, X23, [X31 - 0x30]!
	0x03C320F8 STP X22, X21, [X31 + 0x10]
	0x03C320FC STP X20, X19, [X31 + 0x20]
	0x03C32100 ADRP X22, 0x7B3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B4000
	006 Move X19, X2
	007 Move X2, [X21+576]
	008 Move X20, X1
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51593216
	012 Add X0, X0, 1497
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+576], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.ResourceRequest LoadAsync(System.String path, System.Type systemTypeInstance)

Disassembly:
	0x03C32104 ADRP X23, 0x52D000
	0x03C32108 ADRP X19, 0x52D000
	0x03C3210C ADRP X21, 0x52D000
	0x03C32110 ADRP X20, 0x52D000
	0x03C32114 LDRB W8, [X22 + 0x2A7]
	0x03C32118 LDR X23, [X23 + 0x3A0]
	0x03C3211C LDR X19, [X19 + 0x390]
	0x03C32120 LDR X21, [X21 + 0x3A8]
	0x03C32124 LDR X20, [X20 + 0x370]
	0x03C32128 TBNZ X8, 0x0, 0x3C32164
	0x03C3212C ADRP X0, 0x52D000
	0x03C32130 LDR X0, [X0 + 0x390]
	0x03C32134 BL 0x1C16CF4
	0x03C32138 ADRP X0, 0x52D000
	0x03C3213C LDR X0, [X0 + 0x3A0]
	0x03C32140 BL 0x1C16CF4
	0x03C32144 ADRP X0, 0x52D000
	0x03C32148 LDR X0, [X0 + 0x3A8]
	0x03C3214C BL 0x1C16CF4
	0x03C32150 ADRP X0, 0x52D000
	0x03C32154 LDR X0, [X0 + 0x370]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B4000
	006 Move X8, [X21+584]
	007 Move X19, X2
	008 Move X20, X1
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51576832
	012 Add X0, X0, 19
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X21+584], X0
	016 Move X0, X20
	017 Move X1, X19
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Compare X0, 0
	020 JumpIfEqual {28}
	021 Move [X0+32], X20
	022 Move [X0+40], X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return X0
	028 Call 0x1C17F20

Method: System.Void UnloadAsset(UnityEngine.Object assetToUnload)

Disassembly:
	0x03C32158 BL 0x1C16CF4
	0x03C3215C MOVZ W8, 0x1
	0x03C32160 STRB W8, [X22 + 0x2A7]
	0x03C32164 LDR X0, [X23]
	0x03C32168 MOVZ W1, 0x1
	0x03C3216C BL 0x1C16D6C
	0x03C32170 LDR X8, [X19]
	0x03C32174 MOVZ W1, 0x1
	0x03C32178 LDR X8, [X8 + 0xB8]
	0x03C3217C STR X0, [X8]
	0x03C32180 LDR X0, [X21]
	0x03C32184 BL 0x1C16D6C
	0x03C32188 LDR X8, [X19]
	0x03C3218C MOVZ W1, 0x1
	0x03C32190 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B4000
	005 Move X2, [X20+592]
	006 Move X19, X1
	007 Compare X2, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51449856
	010 Add X0, X0, 2784
	011 Call 0x1C17CB8
	012 Move X2, X0
	013 Move [X20+592], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X2

Method: System.Void .cctor()

Disassembly:
	0x03C32194 STR X0, [X8 + 0x8]
	0x03C32198 LDR X0, [X20]
	0x03C3219C BL 0x1C16D6C
	0x03C321A0 LDR X8, [X19]
	0x03C321A4 LDP X20, X19, [X31 + 0x20]
	0x03C321A8 LDP X22, X21, [X31 + 0x10]
	0x03C321AC LDR X8, [X8 + 0xB8]
	0x03C321B0 STR X0, [X8 + 0x10]
	0x03C321B4 LDP X30, X23, [X31], #0x30
	0x03C321B8 RET
	0x03C321BC MOV X1, X31
	0x03C321C0 B 0x33A51F0
	0x03C321C4 STR X30, [X31 - 0x20]!
	0x03C321C8 STP X20, X19, [X31 + 0x10]
	0x03C321CC MOV X19, X1
	0x03C321D0 MOV X1, X31
	0x03C321D4 MOV X20, X0
	0x03C321D8 BL 0x33A51F0
	0x03C321DC STR X19, [X20 + 0x10]
	0x03C321E0 LDP X20, X19, [X31 + 0x10]
	0x03C321E4 LDR X30, [X31], #0x20
	0x03C321E8 RET
	0x03C321EC STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7B4000
	005 Move X20, 0x52D000
	006 Move W8, [X19+602]
	007 Move X20, [X20+3560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x52D000
	013 Move X0, [X0+3560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+602], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

