Type: UnityEngine.Gizmos

Method: System.Void DrawLine(UnityEngine.Vector3 from, UnityEngine.Vector3 to)

Disassembly:
	0x03C0DB04 CSEL W1, W11, W9, EQ
	0x03C0DB08 FCMP S8, S0
	0x03C0DB0C CSEL W0, W11, W12, EQ
	0x03C0DB10 ADD X2, X31, 0x1C
	0x03C0DB14 ADD X3, X31, 0x18
	0x03C0DB18 BLR X8
	0x03C0DB1C LDP S0, S2, [X31 + 0x18]
	0x03C0DB20 LDP X20, X19, [X31 + 0x20]
	0x03C0DB24 LDR X30, [X31 + 0x10]
	0x03C0DB28 SCVTF S1, S0
	0x03C0DB2C SCVTF S0, S2
	0x03C0DB30 SCVTF S2, W0
	0x03C0DB34 LDP D9, D8, [X31], #0x30
	0x03C0DB38 RET
	0x03C0DB3C STP X30, X23, [X31 - 0x30]!
	0x03C0DB40 STP X22, X21, [X31 + 0x10]
	0x03C0DB44 STP X20, X19, [X31 + 0x20]
	0x03C0DB48 ADRP X23, 0x7D7000
	0x03C0DB4C LDR X4, [X23 + 0x308]
	0x03C0DB50 MOV X19, X3

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X19, 0x7D8000
	005 Move X8, [X19+648]
	006 Move [X31+16], S0
	007 Move [X31+24], S1
	008 Move [X31+24], S2
	009 Move [X31], S3
	010 Move [X31+8], S4
	011 Move [X31+8], S5
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51503104
	015 Add X0, X0, 3176
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X19+648], X0
	019 Add X0, X31, 16
	020 Add X1, X31, 0
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X30, [X31+32]
	023 Move X19, [X31+40]
	024 Add X31, X31, 48
	025 Return 

Method: System.Void DrawWireSphere(UnityEngine.Vector3 center, System.Single radius)

Disassembly:
	0x03C0DB98 STR X30, [X31 - 0x20]!
	0x03C0DB9C STP X20, X19, [X31 + 0x10]
	0x03C0DBA0 ADRP X20, 0x7D7000
	0x03C0DBA4 ADRP X19, 0x54A000
	0x03C0DBA8 LDRB W8, [X20 + 0x2EE]
	0x03C0DBAC LDR X19, [X19 + 0x448]
	0x03C0DBB0 TBNZ X8, 0x0, 0x3C0DBC8
	0x03C0DBB4 ADRP X0, 0x54A000
	0x03C0DBB8 LDR X0, [X0 + 0x448]
	0x03C0DBBC BL 0x1C16CF4
	0x03C0DBC0 MOVZ W8, 0x1
	0x03C0DBC4 STRB W8, [X20 + 0x2EE]
	0x03C0DBC8 LDR X0, [X19]
	0x03C0DBCC LDR W8, [X0 + 0xE0]
	0x03C0DBD0 CBNZ W8, 0x3C0DBDC
	0x03C0DBD4 BL 0x1C16DFC
	0x03C0DBD8 LDR X0, [X19]
	0x03C0DBDC LDR X8, [X0 + 0xB8]
	0x03C0DBE0 LDP X20, X19, [X31 + 0x10]
	0x03C0DBE4 LDR X0, [X8 + 0x8]
	0x03C0DBE8 LDR X30, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X19
	005 Move X19, 0x7D8000
	006 Move X8, [X19+656]
	007 Move V8, V3
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51372032
	014 Add X0, X0, 3706
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X19+656], X0
	018 Add X0, X31, 0
	019 Move V0, V8
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X30, [X31+32]
	022 Move X19, [X31+40]
	023 Move V8, [X31+16]
	024 Add X31, X31, 48
	025 Return 

Method: System.Void DrawSphere(UnityEngine.Vector3 center, System.Single radius)

Disassembly:
	0x03C0DC38 CBZ W1, 0x3C0DD10
	0x03C0DC3C ADRP X8, 0x551000
	0x03C0DC40 LDR X8, [X8 + 0xCE8]
	0x03C0DC44 ADRP X21, 0x54A000
	0x03C0DC48 LDR X0, [X8]
	0x03C0DC4C LDR X21, [X21 + 0x448]
	0x03C0DC50 BL 0x1C16D6C
	0x03C0DC54 LDR X8, [X21]
	0x03C0DC58 MOV X20, X0
	0x03C0DC5C LDR W9, [X8 + 0xE0]
	0x03C0DC60 CBNZ W9, 0x3C0DC70
	0x03C0DC64 MOV X0, X8
	0x03C0DC68 BL 0x1C16DFC
	0x03C0DC6C LDR X8, [X21]
	0x03C0DC70 LDR X8, [X8 + 0xB8]
	0x03C0DC74 MOVZ W22, 0x4
	0x03C0DC78 STR X20, [X8]
	0x03C0DC7C LDR X0, [X21]
	0x03C0DC80 LDRSW X20, [X19 + 0x18]
	0x03C0DC84 SUB X23, X22, 0x4
	0x03C0DC88 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X19
	005 Move X19, 0x7D8000
	006 Move X8, [X19+664]
	007 Move V8, V3
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51306496
	014 Add X0, X0, 2068
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X19+664], X0
	018 Add X0, X31, 0
	019 Move V0, V8
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X30, [X31+32]
	022 Move X19, [X31+40]
	023 Move V8, [X31+16]
	024 Add X31, X31, 48
	025 Return 

Method: System.Void DrawWireCube(UnityEngine.Vector3 center, UnityEngine.Vector3 size)

Disassembly:
	0x03C0DCD8 LDR X1, [X8 + 0x40]
	0x03C0DCDC BL 0x1C16E00
	0x03C0DCE0 CBZ X0, 0x3C0DD28
	0x03C0DCE4 LDR W8, [X24 + 0x18]
	0x03C0DCE8 CMP X23, X8
	0x03C0DCEC B.CS 0x3C0DD24
	0x03C0DCF0 STR X20, [X24, X22, LSL #3]
	0x03C0DCF4 ADD X22, X22, 0x1
	0x03C0DCF8 B 0x3C0DC7C
	0x03C0DCFC CBZ X24, 0x3C0DD34
	0x03C0DD00 LDR W9, [X24 + 0x18]
	0x03C0DD04 CBZ W9, 0x3C0DD24
	0x03C0DD08 LDR X9, [X24 + 0x20]
	0x03C0DD0C STR X9, [X8 + 0x8]
	0x03C0DD10 LDP X20, X19, [X31 + 0x30]
	0x03C0DD14 LDP X22, X21, [X31 + 0x20]
	0x03C0DD18 LDP X24, X23, [X31 + 0x10]
	0x03C0DD1C LDP X30, X25, [X31], #0x40
	0x03C0DD20 RET
	0x03C0DD24 BL 0x1C16F28

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X19, 0x7D8000
	005 Move X8, [X19+672]
	006 Move [X31+16], S0
	007 Move [X31+24], S1
	008 Move [X31+24], S2
	009 Move [X31], S3
	010 Move [X31+8], S4
	011 Move [X31+8], S5
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51298304
	015 Add X0, X0, 2083
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X19+672], X0
	019 Add X0, X31, 16
	020 Add X1, X31, 0
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X30, [X31+32]
	023 Move X19, [X31+40]
	024 Add X31, X31, 48
	025 Return 

Method: System.Void DrawCube(UnityEngine.Vector3 center, UnityEngine.Vector3 size)

Disassembly:
	0x03C0DD6C LDR W8, [X0 + 0xE0]
	0x03C0DD70 CBNZ W8, 0x3C0DD7C
	0x03C0DD74 BL 0x1C16DFC
	0x03C0DD78 LDR X0, [X19]
	0x03C0DD7C LDR X8, [X0 + 0xB8]
	0x03C0DD80 LDR X9, [X8 + 0x18]
	0x03C0DD84 CBZ X9, 0x3C0DDBC
	0x03C0DD88 LDR W9, [X0 + 0xE0]
	0x03C0DD8C CBNZ W9, 0x3C0DD9C
	0x03C0DD90 BL 0x1C16DFC
	0x03C0DD94 LDR X8, [X19]
	0x03C0DD98 LDR X8, [X8 + 0xB8]
	0x03C0DD9C LDR X8, [X8 + 0x18]
	0x03C0DDA0 CBZ X8, 0x3C0DDC8
	0x03C0DDA4 LDR X2, [X8 + 0x18]
	0x03C0DDA8 LDR X0, [X8 + 0x40]
	0x03C0DDAC LDR X1, [X8 + 0x28]
	0x03C0DDB0 LDP X20, X19, [X31 + 0x10]
	0x03C0DDB4 LDR X30, [X31], #0x20
	0x03C0DDB8 BR X2

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X19, 0x7D8000
	005 Move X8, [X19+680]
	006 Move [X31+16], S0
	007 Move [X31+24], S1
	008 Move [X31+24], S2
	009 Move [X31], S3
	010 Move [X31+8], S4
	011 Move [X31+8], S5
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51273728
	015 Add X0, X0, 2815
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X19+680], X0
	019 Add X0, X31, 16
	020 Add X1, X31, 0
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X30, [X31+32]
	023 Move X19, [X31+40]
	024 Add X31, X31, 48
	025 Return 

Method: System.Void DrawMesh(UnityEngine.Mesh mesh, System.Int32 submeshIndex, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Vector3 scale)

Disassembly:
	0x03C0DE00 ADRP X0, 0x54A000
	0x03C0DE04 LDR X0, [X0 + 0x448]
	0x03C0DE08 BL 0x1C16CF4
	0x03C0DE0C MOVZ W8, 0x1
	0x03C0DE10 STRB W8, [X19 + 0x318]
	0x03C0DE14 LDR X0, [X20]
	0x03C0DE18 MOVZ W1, 0x1
	0x03C0DE1C BL 0x1C16D6C
	0x03C0DE20 LDR X8, [X21]
	0x03C0DE24 MOV X19, X0
	0x03C0DE28 MOV X0, X8
	0x03C0DE2C BL 0x1C16F10
	0x03C0DE30 MOV X1, X31
	0x03C0DE34 MOV X20, X0
	0x03C0DE38 BL 0x33BDD8C
	0x03C0DE3C ADD X0, X31, 0x8
	0x03C0DE40 MOV W1, W31
	0x03C0DE44 MOV X2, X31
	0x03C0DE48 STR X31, [X31 + 0x8]
	0x03C0DE4C BL 0x33C6730
	0x03C0DE50 LDR X8, [X31 + 0x8]
	0x03C0DE54 STR X8, [X20 + 0x10]
	0x03C0DE58 CBZ X19, 0x3C0DEC4
	0x03C0DE5C LDR X8, [X19]
	0x03C0DE60 MOV X0, X20
	0x03C0DE64 LDR X1, [X8 + 0x40]
	0x03C0DE68 BL 0x1C16E00
	0x03C0DE6C CBZ X0, 0x3C0DECC
	0x03C0DE70 LDR W8, [X19 + 0x18]
	0x03C0DE74 CBZ W8, 0x3C0DEC8
	0x03C0DE78 STR X20, [X19 + 0x20]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X8, [X31+80]
	007 Move X21, 0x7D8000
	008 Move V7, [X31+88]
	009 Move W19, W1
	010 Move [X31], X8
	011 Move X8, [X21+688]
	012 Move X20, X0
	013 Move [X31+32], S0
	014 Move [X31+40], S1
	015 Move [X31+40], S2
	016 Move [X31+16], S3
	017 Move [X31+24], S4
	018 Move [X31+24], S5
	019 Move [X31+32], S6
	020 Move [X31+8], S7
	021 Compare X8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51339264
	024 Add X0, X0, 1380
	025 Call 0x1C17CB8
	026 Move X8, X0
	027 Move [X21+688], X0
	028 Add X2, X31, 32
	029 Add X3, X31, 16
	030 Add X4, X31, 0
	031 Move X0, X20
	032 Move W1, W19
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X20, [X31+64]
	035 Move X19, [X31+72]
	036 Move X30, [X31+48]
	037 Move X21, [X31+56]
	038 Add X31, X31, 80
	039 Return 

Method: System.Void DrawIcon(UnityEngine.Vector3 center, System.String name, System.Boolean allowScaling, UnityEngine.Color tint)

Disassembly:
	0x03C0DEE8 MOV X19, X0
	0x03C0DEEC MOV X20, X1
	0x03C0DEF0 STR X8, [X0 + 0x10]
	0x03C0DEF4 LDRB W21, [X2 + 0x52]
	0x03C0DEF8 STR X0, [X0 + 0x40]
	0x03C0DEFC MOV X0, X2
	0x03C0DF00 BL 0x1C16D84
	0x03C0DF04 TBZ X0, 0x0, 0x3C0DF1C
	0x03C0DF08 CBNZ W21, 0x3C0DF20
	0x03C0DF0C ADRP X8, 0xFFFFFFFFFDFF8000
	0x03C0DF10 ADD X8, X8, 0xF54
	0x03C0DF14 STR X8, [X19 + 0x18]
	0x03C0DF18 B 0x3C0DF30
	0x03C0DF1C CBZ X20, 0x3C0DF48
	0x03C0DF20 LDR X8, [X19 + 0x10]
	0x03C0DF24 LDR X9, [X19 + 0x20]
	0x03C0DF28 STR X8, [X19 + 0x18]
	0x03C0DF2C STR X9, [X19 + 0x40]
	0x03C0DF30 ADRP X8, 0xFFFFFFFFFDFF8000
	0x03C0DF34 ADD X8, X8, 0xF14
	0x03C0DF38 STR X8, [X19 + 0x38]
	0x03C0DF3C LDP X20, X19, [X31 + 0x10]
	0x03C0DF40 LDP X30, X21, [X31], #0x20
	0x03C0DF44 RET
	0x03C0DF48 ADRP X1, 0xFFFFFFFFFCF0E000
	0x03C0DF4C ADD X1, X1, 0xEE3

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x7D8000
	007 Move X8, [X21+696]
	008 Move W20, W1
	009 Move X19, X0
	010 Move [X31+16], S0
	011 Move [X31+24], S1
	012 Move [X31+24], S2
	013 Move [X31], S3
	014 Move [X31+8], S4
	015 Move [X31+8], S5
	016 Move [X31+16], S6
	017 Compare X8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51306496
	020 Add X0, X0, 2144
	021 Call 0x1C17CB8
	022 Move X8, X0
	023 Move [X21+696], X0
	024 And W2, W20, 1
	025 Add X0, X31, 16
	026 Add X3, X31, 0
	027 Move X1, X19
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move X20, [X31+48]
	030 Move X19, [X31+56]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Add X31, X31, 64
	034 Return 

Method: UnityEngine.Color get_color()

Disassembly:
	0x03C0DFAC AND X11, X1, 0x0
	0x03C0DFB0 MUL X9, X11, X9
	0x03C0DFB4 MUL X8, X10, X8
	0x03C0DFB8 CMP X8, X9
	0x03C0DFBC CSET W0, EQ
	0x03C0DFC0 RET
	0x03C0DFC4 STR X30, [X31 - 0x10]!
	0x03C0DFC8 LDR W8, [X0 + 0x4]
	0x03C0DFCC UBFM X9, X1, 0x20, 0x3F
	0x03C0DFD0 CBZ W8, 0x3C0DFFC
	0x03C0DFD4 CBZ X9, 0x3C0E008
	0x03C0DFD8 LDR W10, [X0]
	0x03C0DFDC AND X11, X1, 0x0
	0x03C0DFE0 MUL X1, X11, X8
	0x03C0DFE4 ADD X0, X31, 0x8
	0x03C0DFE8 MUL X9, X9, X10
	0x03C0DFEC MOV X2, X31
	0x03C0DFF0 STR X9, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D8000
	005 Move X8, [X19+704]
	006 Move [X31], X31
	007 Move [X31+8], X31
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51380224
	011 Add X0, X0, 3410
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X19+704], X0
	015 Add X0, X31, 0
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move S0, [X31]
	018 Move S1, [X31+4]
	019 Move S2, [X31+8]
	020 Move S3, [X31+12]
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Add X31, X31, 32
	024 Return X0

Method: System.Void set_color(UnityEngine.Color value)

Disassembly:
	0x03C0E030 MOV X19, X0
	0x03C0E034 TBNZ X8, 0x0, 0x3C0E04C
	0x03C0E038 ADRP X0, 0x4E7000
	0x03C0E03C LDR X0, [X0 + 0xC48]
	0x03C0E040 BL 0x1C16CF4
	0x03C0E044 MOVZ W8, 0x1
	0x03C0E048 STRB W8, [X21 + 0x319]
	0x03C0E04C LDP S0, S1, [X19]
	0x03C0E050 LDR X0, [X20]
	0x03C0E054 UCVTF D0, D0
	0x03C0E058 UCVTF D1, D1
	0x03C0E05C FDIV D0, D0, D1
	0x03C0E060 STR D0, [X31 + 0x8]
	0x03C0E064 LDR W8, [X0 + 0xE0]
	0x03C0E068 CBNZ W8, 0x3C0E070
	0x03C0E06C BL 0x1C16DFC
	0x03C0E070 MOV X0, X31

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7D7000
	005 Move X8, [X19+712]
	006 Move [X31], S0
	007 Move [X31+8], S1
	008 Move [X31+8], S2
	009 Move [X31+16], S3
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51507200
	013 Add X0, X0, 3257
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X19+712], X0
	017 Add X0, X31, 0
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Add X31, X31, 32
	022 Return 

Method: UnityEngine.Matrix4x4 get_matrix()

Disassembly:
	0x03C0E0B0 STP X30, X19, [X31 - 0x10]!
	0x03C0E0B4 ADRP X19, 0x7D6000
	0x03C0E0B8 LDR X0, [X19 + 0x320]
	0x03C0E0BC CBNZ X0, 0x3C0E0D0
	0x03C0E0C0 ADRP X0, 0xFFFFFFFFFCEE4000
	0x03C0E0C4 ADD X0, X0, 0xE96
	0x03C0E0C8 BL 0x1C16CB8
	0x03C0E0CC STR X0, [X19 + 0x320]
	0x03C0E0D0 LDP X30, X19, [X31], #0x10
	0x03C0E0D4 BR X0
	0x03C0E0D8 STP X30, X19, [X31 - 0x10]!
	0x03C0E0DC ADRP X19, 0x7D6000
	0x03C0E0E0 LDR X0, [X19 + 0x328]
	0x03C0E0E4 CBNZ X0, 0x3C0E0F8
	0x03C0E0E8 ADRP X0, 0xFFFFFFFFFCF1E000
	0x03C0E0EC ADD X0, X0, 0x6B0
	0x03C0E0F0 BL 0x1C16CB8
	0x03C0E0F4 STR X0, [X19 + 0x328]
	0x03C0E0F8 LDP X30, X19, [X31], #0x10
	0x03C0E0FC BR X0
	0x03C0E100 STP X30, X19, [X31 - 0x10]!
	0x03C0E104 ADRP X19, 0x7D6000
	0x03C0E108 LDR X0, [X19 + 0x330]
	0x03C0E10C CBNZ X0, 0x3C0E120
	0x03C0E110 ADRP X0, 0xFFFFFFFFFCF02000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Move X20, 0x7D7000
	006 Move X19, X8
	007 Move X8, [X20+720]
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move [X31+32], V0
	010 Move [X31+40], V0
	011 Move [X31], V0
	012 Move [X31+8], V0
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51445760
	016 Add X0, X0, 372
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X20+720], X0
	020 Add X0, X31, 0
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move V1, [X31+32]
	023 Move V0, [X31+48]
	024 Move V3, [X31]
	025 Move V2, [X31+16]
	026 Move X30, [X31+64]
	027 Move [X19+32], V1
	028 Move [X19+40], V0
	029 Move [X19], V3
	030 Move [X19+8], V2
	031 Move X20, [X31+80]
	032 Move X19, [X31+88]
	033 Add X31, X31, 96
	034 Return X0

Method: System.Void set_matrix(UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C0E150 STP X30, X19, [X31 - 0x10]!
	0x03C0E154 ADRP X19, 0x7D6000
	0x03C0E158 LDR X0, [X19 + 0x338]
	0x03C0E15C CBNZ X0, 0x3C0E170
	0x03C0E160 ADRP X0, 0xFFFFFFFFFCF18000
	0x03C0E164 ADD X0, X0, 0xB50
	0x03C0E168 BL 0x1C16CB8
	0x03C0E16C STR X0, [X19 + 0x338]
	0x03C0E170 LDP X30, X19, [X31], #0x10
	0x03C0E174 BR X0
	0x03C0E178 STP X30, X19, [X31 - 0x10]!
	0x03C0E17C ADRP X19, 0x7D6000
	0x03C0E180 LDR X0, [X19 + 0x340]
	0x03C0E184 CBNZ X0, 0x3C0E198
	0x03C0E188 ADRP X0, 0xFFFFFFFFFCF0A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D7000
	005 Move X1, [X20+728]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51433472
	010 Add X0, X0, 3368
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+728], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void DrawRay(UnityEngine.Vector3 from, UnityEngine.Vector3 direction)

Disassembly:
	0x03C0E1C8 STR X0, [X19 + 0x348]
	0x03C0E1CC ADD X0, X31, 0x0
	0x03C0E1D0 BLR X8
	0x03C0E1D4 LDP S0, S1, [X31]

ISIL:
	001 Add S3, S0, S3
	002 Add S4, S1, S4
	003 Add S5, S2, S5
	004 Call Gizmos.DrawLine, X0, X1
	005 Return 

Method: System.Void DrawMesh(UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation)

Disassembly:
	0x03C0E1D8 LDP S2, S3, [X31 + 0x8]
	0x03C0E1DC LDP X30, X19, [X31 + 0x10]
	0x03C0E1E0 ADD X31, X31, 0x20
	0x03C0E1E4 RET
	0x03C0E1E8 STR X30, [X31 - 0x20]!
	0x03C0E1EC STP X20, X19, [X31 + 0x10]
	0x03C0E1F0 ADRP X20, 0x7D6000
	0x03C0E1F4 LDR X1, [X20 + 0x348]
	0x03C0E1F8 MOV X19, X0
	0x03C0E1FC CBNZ X1, 0x3C0E214
	0x03C0E200 ADRP X0, 0xFFFFFFFFFCF18000
	0x03C0E204 ADD X0, X0, 0xB7B
	0x03C0E208 BL 0x1C16CB8
	0x03C0E20C MOV X1, X0
	0x03C0E210 STR X0, [X20 + 0x348]
	0x03C0E214 MOV X0, X19
	0x03C0E218 LDP X20, X19, [X31 + 0x10]
	0x03C0E21C LDR X30, [X31], #0x20
	0x03C0E220 BR X1
	0x03C0E224 STP X30, X19, [X31 - 0x10]!
	0x03C0E228 ADRP X19, 0x7D6000
	0x03C0E22C LDR X0, [X19 + 0x350]
	0x03C0E230 CBNZ X0, 0x3C0E244
	0x03C0E234 ADRP X0, 0xFFFFFFFFFCF02000
	0x03C0E238 ADD X0, X0, 0xF05
	0x03C0E23C BL 0x1C16CB8
	0x03C0E240 STR X0, [X19 + 0x350]
	0x03C0E244 LDP X30, X19, [X31], #0x10
	0x03C0E248 BR X0
	0x03C0E24C STP X30, X19, [X31 - 0x10]!
	0x03C0E250 ADRP X19, 0x7D6000
	0x03C0E254 LDR X0, [X19 + 0x358]
	0x03C0E258 CBNZ X0, 0x3C0E26C
	0x03C0E25C ADRP X0, 0xFFFFFFFFFCF16000
	0x03C0E260 ADD X0, X0, 0xAAA
	0x03C0E264 BL 0x1C16CB8
	0x03C0E268 STR X0, [X19 + 0x358]
	0x03C0E26C LDP X30, X19, [X31], #0x10
	0x03C0E270 BR X0
	0x03C0E274 STP X30, X19, [X31 - 0x10]!
	0x03C0E278 ADRP X19, 0x7D6000
	0x03C0E27C LDR X0, [X19 + 0x360]
	0x03C0E280 CBNZ X0, 0x3C0E294
	0x03C0E284 ADRP X0, 0xFFFFFFFFFCF10000
	0x03C0E288 ADD X0, X0, 0x8CC
	0x03C0E28C BL 0x1C16CB8
	0x03C0E290 STR X0, [X19 + 0x360]
	0x03C0E294 LDP X30, X19, [X31], #0x10
	0x03C0E298 BR X0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D14
	003 Move [X31+24], D13
	004 Move [X31+32], D12
	005 Move [X31+40], D11
	006 Move [X31+48], D10
	007 Move [X31+56], D9
	008 Move [X31+64], D8
	009 Move [X31+72], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x7CB000
	013 Move W8, [X20+2139]
	014 Move V8, V6
	015 Move V9, V5
	016 Move V10, V4
	017 Move V11, V3
	018 Move V12, V2
	019 Move V13, V1
	020 Move V14, V0
	021 Move X19, X0
	022 Compare W8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0x4E6000
	025 Move X0, [X0+1440]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2139], W8
	029 Move X8, 0x4E6000
	030 Move X8, [X8+1440]
	031 Move TEMP, 0
	032 Not TEMP
	033 Move W1, TEMP
	034 Move X0, X19
	035 Move V1, V13
	036 Move X8, [X8]
	037 Move V2, V12
	038 Move V3, V11
	039 Move V4, V10
	040 Move X8, [X8+184]
	041 Move V5, V9
	042 Move V6, V8
	043 Move V0, [X8+20]
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move [X31+8], S0
	046 Move V0, V14
	047 Move [X31], X9
	048 Call Gizmos.DrawMesh, X0, X1, X2, X3, X4
	049 Move X20, [X31+80]
	050 Move X19, [X31+88]
	051 Move X30, [X31+72]
	052 Move D9, [X31+56]
	053 Move D8, [X31+64]
	054 Move D11, [X31+40]
	055 Move D10, [X31+48]
	056 Move D13, [X31+24]
	057 Move D12, [X31+32]
	058 Move V14, [X31+16]
	059 Add X31, X31, 96
	060 Return 

Method: System.Void DrawMesh(UnityEngine.Mesh mesh)

Disassembly:
	0x03C0E2B4 TBNZ X8, 0x0, 0x3C0E2CC
	0x03C0E2B8 ADRP X0, 0x4E9000
	0x03C0E2BC LDR X0, [X0 + 0x2C8]
	0x03C0E2C0 BL 0x1C16CF4
	0x03C0E2C4 MOVZ W8, 0x1
	0x03C0E2C8 STRB W8, [X19 + 0x368]
	0x03C0E2CC LDR X0, [X20]
	0x03C0E2D0 LDR W8, [X0 + 0xE0]
	0x03C0E2D4 CBNZ W8, 0x3C0E2DC
	0x03C0E2D8 BL 0x1C16DFC
	0x03C0E2DC ADRP X19, 0x7D6000
	0x03C0E2E0 LDR X0, [X19 + 0x360]
	0x03C0E2E4 CBNZ X0, 0x3C0E2F8
	0x03C0E2E8 ADRP X0, 0xFFFFFFFFFCF10000
	0x03C0E2EC ADD X0, X0, 0x8CC
	0x03C0E2F0 BL 0x1C16CB8
	0x03C0E2F4 STR X0, [X19 + 0x360]
	0x03C0E2F8 LDP X20, X19, [X31 + 0x10]
	0x03C0E2FC LDR X30, [X31], #0x20
	0x03C0E300 BR X0
	0x03C0E304 STP X30, X19, [X31 - 0x10]!
	0x03C0E308 ADRP X19, 0x7D6000
	0x03C0E30C LDR X0, [X19 + 0x370]
	0x03C0E310 CBNZ X0, 0x3C0E324
	0x03C0E314 ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C0E318 ADD X0, X0, 0xE9
	0x03C0E31C BL 0x1C16CB8
	0x03C0E320 STR X0, [X19 + 0x370]
	0x03C0E324 LDP X30, X19, [X31], #0x10
	0x03C0E328 BR X0
	0x03C0E32C STR X30, [X31 - 0x20]!
	0x03C0E330 STP X20, X19, [X31 + 0x10]
	0x03C0E334 ADRP X19, 0x7D6000
	0x03C0E338 ADRP X20, 0x4E9000
	0x03C0E33C LDRB W8, [X19 + 0x378]
	0x03C0E340 LDR X20, [X20 + 0x2C8]
	0x03C0E344 TBNZ X8, 0x0, 0x3C0E35C
	0x03C0E348 ADRP X0, 0x4E9000
	0x03C0E34C LDR X0, [X0 + 0x2C8]
	0x03C0E350 BL 0x1C16CF4
	0x03C0E354 MOVZ W8, 0x1
	0x03C0E358 STRB W8, [X19 + 0x378]
	0x03C0E35C LDR X0, [X20]
	0x03C0E360 LDR W8, [X0 + 0xE0]
	0x03C0E364 CBNZ W8, 0x3C0E36C
	0x03C0E368 BL 0x1C16DFC
	0x03C0E36C ADRP X19, 0x7D6000
	0x03C0E370 LDR X0, [X19 + 0x370]
	0x03C0E374 CBNZ X0, 0x3C0E388
	0x03C0E378 ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C0E37C ADD X0, X0, 0xE9
	0x03C0E380 BL 0x1C16CB8
	0x03C0E384 STR X0, [X19 + 0x370]
	0x03C0E388 LDP X20, X19, [X31 + 0x10]
	0x03C0E38C LDR X30, [X31], #0x20
	0x03C0E390 BR X0
	0x03C0E394 STP X30, X19, [X31 - 0x10]!
	0x03C0E398 ADRP X19, 0x7D6000
	0x03C0E39C LDR X0, [X19 + 0x380]
	0x03C0E3A0 CBNZ X0, 0x3C0E3B4
	0x03C0E3A4 ADRP X0, 0xFFFFFFFFFCF1A000
	0x03C0E3A8 ADD X0, X0, 0x420
	0x03C0E3AC BL 0x1C16CB8
	0x03C0E3B0 STR X0, [X19 + 0x380]
	0x03C0E3B4 LDP X30, X19, [X31], #0x10

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D14
	003 Move [X31+32], D13
	004 Move [X31+40], D12
	005 Move [X31+48], D11
	006 Move [X31+56], D10
	007 Move [X31+64], D9
	008 Move [X31+72], D8
	009 Move [X31+80], X30
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0x7CB000
	014 Move W8, [X20+2139]
	015 Move X19, X0
	016 Compare W8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, 0x4E6000
	019 Move X0, [X0+1440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2139], W8
	023 Move X20, 0x4E6000
	024 Move X20, [X20+1440]
	025 Move X21, 0x7CB000
	026 Move W9, [X21+1939]
	027 Move X8, [X20]
	028 Move X8, [X8+184]
	029 Move S12, [X8+12]
	030 Move S13, [X8+16]
	031 Move V14, [X8+20]
	032 Compare W9, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x4E7000
	035 Move X0, [X0+1448]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1939], W8
	039 Move X8, 0x4E7000
	040 Move X8, [X8+1448]
	041 Move X21, 0x7CB000
	042 Move W9, [X21+1923]
	043 Move X8, [X8]
	044 Move X8, [X8+184]
	045 Move S11, [X8]
	046 Move S10, [X8+4]
	047 Move S9, [X8+8]
	048 Move S8, [X8+12]
	049 Compare W9, 0
	050 JumpIfNotEqual {56}
	051 Move X0, 0x4E6000
	052 Move X0, [X0+1440]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X21+1923], W8
	056 Move X8, [X20]
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W1, TEMP
	060 Move X0, X19
	061 Move V3, V11
	062 Move X8, [X8+184]
	063 Move V4, V10
	064 Move V5, V9
	065 Move V6, V8
	066 Move S0, [X8]
	067 Move S1, [X8+4]
	068 Move V2, [X8+8]
	069 Move [X31+4], S13
	070 Move [X31+12], S14
	071 Move [X31], S12
	072 Call Gizmos.DrawMesh, X0, X1, X2, X3, X4
	073 Move X20, [X31+96]
	074 Move X19, [X31+104]
	075 Move X30, [X31+80]
	076 Move X21, [X31+88]
	077 Move D9, [X31+64]
	078 Move D8, [X31+72]
	079 Move D11, [X31+48]
	080 Move D10, [X31+56]
	081 Move D13, [X31+32]
	082 Move D12, [X31+40]
	083 Move V14, [X31+16]
	084 Add X31, X31, 112
	085 Return 

Method: System.Void DrawMesh(UnityEngine.Mesh mesh, UnityEngine.Vector3 position, UnityEngine.Quaternion rotation, UnityEngine.Vector3 scale)

Disassembly:
	0x03C0E29C STR X30, [X31 - 0x20]!
	0x03C0E2A0 STP X20, X19, [X31 + 0x10]
	0x03C0E2A4 ADRP X19, 0x7D6000
	0x03C0E2A8 ADRP X20, 0x4E9000
	0x03C0E2AC LDRB W8, [X19 + 0x368]
	0x03C0E2B0 LDR X20, [X20 + 0x2C8]

ISIL:
	001 Move V7, [X31+8]
	002 Move X8, [X31]
	003 Move TEMP, 0
	004 Not TEMP
	005 Move W1, TEMP
	006 Move [X31+8], S7
	007 Move [X31], X8
	008 Call Gizmos.DrawMesh, X0, X1, X2, X3, X4
	009 Return 

Method: System.Void DrawLine_Injected(ref UnityEngine.Vector3 from, ref UnityEngine.Vector3 to)

Disassembly:
	0x03C0DB54 MOV X20, X2
	0x03C0DB58 MOV W21, W1
	0x03C0DB5C MOV W22, W0
	0x03C0DB60 CBNZ X4, 0x3C0DB78
	0x03C0DB64 ADRP X0, 0xFFFFFFFFFCF01000
	0x03C0DB68 ADD X0, X0, 0xECA
	0x03C0DB6C BL 0x1C16CB8
	0x03C0DB70 MOV X4, X0
	0x03C0DB74 STR X0, [X23 + 0x308]
	0x03C0DB78 MOV W0, W22
	0x03C0DB7C MOV W1, W21
	0x03C0DB80 MOV X2, X20
	0x03C0DB84 MOV X3, X19
	0x03C0DB88 LDP X20, X19, [X31 + 0x20]
	0x03C0DB8C LDP X22, X21, [X31 + 0x10]
	0x03C0DB90 LDP X30, X23, [X31], #0x30
	0x03C0DB94 BR X4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D8000
	006 Move X2, [X21+648]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51503104
	012 Add X0, X0, 3176
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+648], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void DrawWireSphere_Injected(ref UnityEngine.Vector3 center, System.Single radius)

Disassembly:
	0x03C0DBEC RET
	0x03C0DBF0 STP X30, X25, [X31 - 0x40]!
	0x03C0DBF4 STP X24, X23, [X31 + 0x10]
	0x03C0DBF8 STP X22, X21, [X31 + 0x20]
	0x03C0DBFC STP X20, X19, [X31 + 0x30]
	0x03C0DC00 ADRP X20, 0x7D7000
	0x03C0DC04 LDRB W8, [X20 + 0x2EF]
	0x03C0DC08 MOV X19, X0
	0x03C0DC0C TBNZ X8, 0x0, 0x3C0DC30
	0x03C0DC10 ADRP X0, 0x551000
	0x03C0DC14 LDR X0, [X0 + 0xCE8]
	0x03C0DC18 BL 0x1C16CF4
	0x03C0DC1C ADRP X0, 0x54A000
	0x03C0DC20 LDR X0, [X0 + 0x448]
	0x03C0DC24 BL 0x1C16CF4
	0x03C0DC28 MOVZ W8, 0x1
	0x03C0DC2C STRB W8, [X20 + 0x2EF]
	0x03C0DC30 CBZ X19, 0x3C0DD34
	0x03C0DC34 LDR W1, [X19 + 0x18]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7D8000
	006 Move X1, [X20+656]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51372032
	012 Add X0, X0, 3706
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+656], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void DrawSphere_Injected(ref UnityEngine.Vector3 center, System.Single radius)

Disassembly:
	0x03C0DC8C CBNZ W8, 0x3C0DC98
	0x03C0DC90 BL 0x1C16DFC
	0x03C0DC94 LDR X0, [X21]
	0x03C0DC98 LDR X8, [X0 + 0xB8]
	0x03C0DC9C CMP X23, X20
	0x03C0DCA0 LDR X24, [X8]
	0x03C0DCA4 B.GE 0x3C0DCFC
	0x03C0DCA8 LDR W8, [X19 + 0x18]
	0x03C0DCAC CMP X23, X8
	0x03C0DCB0 B.CS 0x3C0DD24
	0x03C0DCB4 LDR X25, [X19, X22, LSL #3]
	0x03C0DCB8 BL 0x1C16F10
	0x03C0DCBC MOV X1, X31
	0x03C0DCC0 MOV X20, X0
	0x03C0DCC4 BL 0x33BDD8C
	0x03C0DCC8 STR X25, [X20 + 0x10]
	0x03C0DCCC CBZ X24, 0x3C0DD34
	0x03C0DCD0 LDR X8, [X24]
	0x03C0DCD4 MOV X0, X20

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7D8000
	006 Move X1, [X20+664]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51306496
	012 Add X0, X0, 2068
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+664], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Void DrawWireCube_Injected(ref UnityEngine.Vector3 center, ref UnityEngine.Vector3 size)

Disassembly:
	0x03C0DD28 BL 0x1C16F44
	0x03C0DD2C MOV X1, X31
	0x03C0DD30 BL 0x1C16DEC
	0x03C0DD34 BL 0x1C16F20
	0x03C0DD38 STR X30, [X31 - 0x20]!
	0x03C0DD3C STP X20, X19, [X31 + 0x10]
	0x03C0DD40 ADRP X20, 0x7D7000
	0x03C0DD44 ADRP X19, 0x54A000
	0x03C0DD48 LDRB W8, [X20 + 0x2F0]
	0x03C0DD4C LDR X19, [X19 + 0x448]
	0x03C0DD50 TBNZ X8, 0x0, 0x3C0DD68
	0x03C0DD54 ADRP X0, 0x54A000
	0x03C0DD58 LDR X0, [X0 + 0x448]
	0x03C0DD5C BL 0x1C16CF4
	0x03C0DD60 MOVZ W8, 0x1
	0x03C0DD64 STRB W8, [X20 + 0x2F0]
	0x03C0DD68 LDR X0, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D8000
	006 Move X2, [X21+672]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51298304
	012 Add X0, X0, 2083
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+672], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void DrawCube_Injected(ref UnityEngine.Vector3 center, ref UnityEngine.Vector3 size)

Disassembly:
	0x03C0DDBC LDP X20, X19, [X31 + 0x10]
	0x03C0DDC0 LDR X30, [X31], #0x20
	0x03C0DDC4 RET
	0x03C0DDC8 BL 0x1C16F20
	0x03C0DDCC SUB X31, X31, 0x30
	0x03C0DDD0 STP X30, X21, [X31 + 0x10]
	0x03C0DDD4 STP X20, X19, [X31 + 0x20]
	0x03C0DDD8 ADRP X19, 0x7D7000
	0x03C0DDDC ADRP X20, 0x551000
	0x03C0DDE0 ADRP X21, 0x54A000
	0x03C0DDE4 LDRB W8, [X19 + 0x318]
	0x03C0DDE8 LDR X20, [X20 + 0xCE8]
	0x03C0DDEC LDR X21, [X21 + 0x448]
	0x03C0DDF0 TBNZ X8, 0x0, 0x3C0DE14
	0x03C0DDF4 ADRP X0, 0x551000
	0x03C0DDF8 LDR X0, [X0 + 0xCE8]
	0x03C0DDFC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D8000
	006 Move X2, [X21+680]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51273728
	012 Add X0, X0, 2815
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+680], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void DrawMesh_Injected(UnityEngine.Mesh mesh, System.Int32 submeshIndex, ref UnityEngine.Vector3 position, ref UnityEngine.Quaternion rotation, ref UnityEngine.Vector3 scale)

Disassembly:
	0x03C0DE7C LDR X8, [X21]
	0x03C0DE80 LDR X8, [X8 + 0xB8]
	0x03C0DE84 STR X19, [X8]
	0x03C0DE88 LDR X8, [X21]
	0x03C0DE8C LDR X8, [X8 + 0xB8]
	0x03C0DE90 LDR X9, [X8]
	0x03C0DE94 CBZ X9, 0x3C0DEC4
	0x03C0DE98 LDR W10, [X9 + 0x18]
	0x03C0DE9C CBZ W10, 0x3C0DEC8
	0x03C0DEA0 LDR X9, [X9 + 0x20]
	0x03C0DEA4 LDP X20, X19, [X31 + 0x20]
	0x03C0DEA8 LDP X30, X21, [X31 + 0x10]
	0x03C0DEAC MOVN W10, 0x0
	0x03C0DEB0 STR W10, [X8 + 0x10]
	0x03C0DEB4 STR X9, [X8 + 0x8]
	0x03C0DEB8 STR X31, [X8 + 0x18]
	0x03C0DEBC ADD X31, X31, 0x30
	0x03C0DEC0 RET
	0x03C0DEC4 BL 0x1C16F20
	0x03C0DEC8 BL 0x1C16F28
	0x03C0DECC BL 0x1C16F44
	0x03C0DED0 MOV X1, X31
	0x03C0DED4 BL 0x1C16DEC
	0x03C0DED8 STP X30, X21, [X31 - 0x20]!
	0x03C0DEDC STP X20, X19, [X31 + 0x10]
	0x03C0DEE0 LDR X8, [X2 + 0x8]
	0x03C0DEE4 STP X1, X2, [X0 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7D8000
	009 Move X5, [X24+688]
	010 Move X19, X4
	011 Move X20, X3
	012 Move X21, X2
	013 Move W22, W1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51339264
	018 Add X0, X0, 1380
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+688], X0
	022 Move X0, X23
	023 Move W1, W22
	024 Move X2, X21
	025 Move X3, X20
	026 Move X4, X19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void DrawIcon_Injected(ref UnityEngine.Vector3 center, System.String name, System.Boolean allowScaling, ref UnityEngine.Color tint)

Disassembly:
	0x03C0DF50 MOV X0, X31
	0x03C0DF54 BL 0x1C16F3C
	0x03C0DF58 MOV X1, X31
	0x03C0DF5C BL 0x1C16DEC
	0x03C0DF60 LDR X8, [X0 + 0x40]
	0x03C0DF64 LDR X2, [X0 + 0x18]
	0x03C0DF68 LDR X1, [X0 + 0x28]
	0x03C0DF6C MOV X0, X8
	0x03C0DF70 BR X2
	0x03C0DF74 LDP S0, S1, [X0]
	0x03C0DF78 UCVTF D0, D0
	0x03C0DF7C UCVTF D1, D1
	0x03C0DF80 FDIV D0, D0, D1
	0x03C0DF84 RET
	0x03C0DF88 LDR W9, [X0 + 0x4]
	0x03C0DF8C MOV X8, X0
	0x03C0DF90 UBFM X10, X1, 0x20, 0x3F
	0x03C0DF94 ORR X11, X9, X1, 0x20
	0x03C0DF98 CMP X11, 0x0
	0x03C0DF9C CSET W0, EQ
	0x03C0DFA0 CBZ X10, 0x3C0DFC0
	0x03C0DFA4 CBZ W9, 0x3C0DFC0
	0x03C0DFA8 LDR W8, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7D8000
	008 Move X4, [X23+696]
	009 Move X19, X3
	010 Move W21, W2
	011 Move X20, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51306496
	016 Add X0, X0, 2144
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+696], X0
	020 And W2, W21, 1
	021 Move X0, X22
	022 Move X1, X20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void get_color_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C0DFF4 BL 0x339A8B8
	0x03C0DFF8 B 0x3C0E00C
	0x03C0DFFC CMP X9, 0x0
	0x03C0E000 CSET W0, NE
	0x03C0E004 B 0x3C0E00C
	0x03C0E008 MOVN W0, 0x0
	0x03C0E00C LDR X30, [X31], #0x10
	0x03C0E010 RET
	0x03C0E014 SUB X31, X31, 0x30
	0x03C0E018 STP X30, X21, [X31 + 0x10]
	0x03C0E01C STP X20, X19, [X31 + 0x20]
	0x03C0E020 ADRP X21, 0x7D6000
	0x03C0E024 ADRP X20, 0x4E7000
	0x03C0E028 LDRB W8, [X21 + 0x319]
	0x03C0E02C LDR X20, [X20 + 0xC48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D8000
	005 Move X1, [X20+704]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51384320
	010 Add X0, X0, 3410
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+704], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_color_Injected(ref UnityEngine.Color value)

Disassembly:
	0x03C0E074 BL 0x3338524
	0x03C0E078 CBZ X0, 0x3C0E0AC
	0x03C0E07C LDR X8, [X0]
	0x03C0E080 LDR X9, [X8 + 0x218]
	0x03C0E084 LDR X1, [X8 + 0x220]
	0x03C0E088 BLR X9
	0x03C0E08C MOV X1, X0
	0x03C0E090 ADD X0, X31, 0x8
	0x03C0E094 MOV X2, X31
	0x03C0E098 BL 0x33662E0
	0x03C0E09C LDP X20, X19, [X31 + 0x20]
	0x03C0E0A0 LDP X30, X21, [X31 + 0x10]
	0x03C0E0A4 ADD X31, X31, 0x30
	0x03C0E0A8 RET
	0x03C0E0AC BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D7000
	005 Move X1, [X20+712]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51507200
	010 Add X0, X0, 3257
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+712], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void get_matrix_Injected(out UnityEngine.Matrix4x4 ret)

Disassembly:
	0x03C0E114 ADD X0, X0, 0xEE7
	0x03C0E118 BL 0x1C16CB8
	0x03C0E11C STR X0, [X19 + 0x330]
	0x03C0E120 LDP X30, X19, [X31], #0x10
	0x03C0E124 BR X0
	0x03C0E128 STP X30, X19, [X31 - 0x10]!
	0x03C0E12C ADRP X19, 0x7D6000
	0x03C0E130 LDR X0, [X19 + 0x338]
	0x03C0E134 CBNZ X0, 0x3C0E148
	0x03C0E138 ADRP X0, 0xFFFFFFFFFCF18000
	0x03C0E13C ADD X0, X0, 0xB50
	0x03C0E140 BL 0x1C16CB8
	0x03C0E144 STR X0, [X19 + 0x338]
	0x03C0E148 LDP X30, X19, [X31], #0x10
	0x03C0E14C BR X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D7000
	005 Move X1, [X20+720]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51445760
	010 Add X0, X0, 372
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+720], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_matrix_Injected(ref UnityEngine.Matrix4x4 value)

Disassembly:
	0x03C0E18C ADD X0, X0, 0x711
	0x03C0E190 BL 0x1C16CB8
	0x03C0E194 STR X0, [X19 + 0x340]
	0x03C0E198 LDP X30, X19, [X31], #0x10
	0x03C0E19C BR X0
	0x03C0E1A0 SUB X31, X31, 0x20
	0x03C0E1A4 STP X30, X19, [X31 + 0x10]
	0x03C0E1A8 ADRP X19, 0x7D6000
	0x03C0E1AC LDR X8, [X19 + 0x348]
	0x03C0E1B0 STP X31, X31, [X31]
	0x03C0E1B4 CBNZ X8, 0x3C0E1CC
	0x03C0E1B8 ADRP X0, 0xFFFFFFFFFCF18000
	0x03C0E1BC ADD X0, X0, 0xB7B
	0x03C0E1C0 BL 0x1C16CB8
	0x03C0E1C4 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D7000
	005 Move X1, [X20+728]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51433472
	010 Add X0, X0, 3368
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+728], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

