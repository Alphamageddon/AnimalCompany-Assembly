Type: UnityEngine.ComputeBuffer

Method: System.Void Finalize()

Disassembly:
	0x03C3B7DC STP X24, X23, [X31 + 0x10]
	0x03C3B7E0 STP X22, X21, [X31 + 0x20]
	0x03C3B7E4 STP X20, X19, [X31 + 0x30]
	0x03C3B7E8 ADRP X24, 0x7AA000
	0x03C3B7EC LDR X5, [X24 + 0x648]
	0x03C3B7F0 MOV W19, W4
	0x03C3B7F4 MOV W20, W3
	0x03C3B7F8 MOV X21, X2
	0x03C3B7FC MOV W22, W1
	0x03C3B800 MOV X23, X0
	0x03C3B804 CBNZ X5, 0x3C3B81C
	0x03C3B808 ADRP X0, 0xFFFFFFFFFCED7000
	0x03C3B80C ADD X0, X0, 0xE60
	0x03C3B810 BL 0x1C16CB8
	0x03C3B814 MOV X5, X0
	0x03C3B818 STR X0, [X24 + 0x648]
	0x03C3B81C MOV X0, X23
	0x03C3B820 MOV W1, W22
	0x03C3B824 MOV X2, X21
	0x03C3B828 MOV W3, W20
	0x03C3B82C MOV W4, W19
	0x03C3B830 LDP X20, X19, [X31 + 0x30]
	0x03C3B834 LDP X22, X21, [X31 + 0x20]
	0x03C3B838 LDP X24, X23, [X31 + 0x10]
	0x03C3B83C LDR X30, [X31], #0x40
	0x03C3B840 BR X5
	0x03C3B844 RET
	0x03C3B848 RET
	0x03C3B84C STP X30, X19, [X31 - 0x10]!
	0x03C3B850 ADRP X19, 0x7AA000
	0x03C3B854 LDR X0, [X19 + 0x670]
	0x03C3B858 CBNZ X0, 0x3C3B86C
	0x03C3B85C ADRP X0, 0xFFFFFFFFFCEB4000
	0x03C3B860 ADD X0, X0, 0xCA
	0x03C3B864 BL 0x1C16CB8
	0x03C3B868 STR X0, [X19 + 0x670]
	0x03C3B86C LDP X30, X19, [X31], #0x10
	0x03C3B870 BR X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move W1, W31
	007 Call ComputeBuffer.Dispose, X0, X1
	008 Move X0, X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X1, X31
	012 Move X30, [X31+32]
	013 Move X21, [X31+40]
	014 Call Object.Finalize, X0
	015 Return 
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X21, X0
	018 Move X0, X21
	019 Call 0x3EB2AD0
	020 Move X20, [X0]
	021 Call 0x3EB2AE0
	022 Move X0, X19
	023 Move X1, X31
	024 Call Object.Finalize, X0
	025 Compare X20, 0
	026 JumpIfNotEqual {33}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 
	032 Move X20, X31
	033 Move X0, X20
	034 Call 0x1C17F18
	035 Move X21, X0
	036 Move X0, X19
	037 Move X1, X31
	038 Call Object.Finalize, X0
	039 Compare X20, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X21
	042 Call 0x1D2D690
	043 Move X0, X20
	044 Call 0x1C17F18
	045 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x03C3B930 STR X0, [X19 + 0x680]
	0x03C3B934 LDP X30, X19, [X31], #0x10
	0x03C3B938 BR X0
	0x03C3B93C STP X30, X19, [X31 - 0x10]!
	0x03C3B940 ADRP X19, 0x7AA000
	0x03C3B944 LDR X0, [X19 + 0x688]
	0x03C3B948 CBNZ X0, 0x3C3B95C
	0x03C3B94C ADRP X0, 0xFFFFFFFFFCED2000
	0x03C3B950 ADD X0, X0, 0x3B
	0x03C3B954 BL 0x1C16CB8
	0x03C3B958 STR X0, [X19 + 0x688]
	0x03C3B95C LDP X30, X19, [X31], #0x10
	0x03C3B960 BR X0
	0x03C3B964 STP X30, X19, [X31 - 0x10]!
	0x03C3B968 ADRP X19, 0x7AA000
	0x03C3B96C LDR X0, [X19 + 0x688]
	0x03C3B970 CBNZ X0, 0x3C3B984
	0x03C3B974 ADRP X0, 0xFFFFFFFFFCED2000
	0x03C3B978 ADD X0, X0, 0x3B
	0x03C3B97C BL 0x1C16CB8
	0x03C3B980 STR X0, [X19 + 0x688]
	0x03C3B984 LDP X30, X19, [X31], #0x10
	0x03C3B988 BR X0
	0x03C3B98C STP X30, X19, [X31 - 0x10]!
	0x03C3B990 ADRP X19, 0x7AA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AB000
	006 Move X20, 0x4C0000
	007 Move W8, [X21+1490]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4C0000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1490], W8
	019 Move W1, 1
	020 Move X0, X19
	021 Call ComputeBuffer.Dispose, X0, X1
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call GC.SuppressFinalize, X0
	034 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03C3B874 STP X30, X19, [X31 - 0x10]!
	0x03C3B878 ADRP X19, 0x7AA000
	0x03C3B87C LDR X0, [X19 + 0x670]
	0x03C3B880 CBNZ X0, 0x3C3B894
	0x03C3B884 ADRP X0, 0xFFFFFFFFFCEB4000
	0x03C3B888 ADD X0, X0, 0xCA
	0x03C3B88C BL 0x1C16CB8
	0x03C3B890 STR X0, [X19 + 0x670]
	0x03C3B894 LDP X30, X19, [X31], #0x10
	0x03C3B898 BR X0
	0x03C3B89C STP X30, X19, [X31 - 0x10]!
	0x03C3B8A0 ADRP X19, 0x7AA000
	0x03C3B8A4 LDR X0, [X19 + 0x678]
	0x03C3B8A8 CBNZ X0, 0x3C3B8BC
	0x03C3B8AC ADRP X0, 0xFFFFFFFFFCEC4000
	0x03C3B8B0 ADD X0, X0, 0x378
	0x03C3B8B4 BL 0x1C16CB8
	0x03C3B8B8 STR X0, [X19 + 0x678]
	0x03C3B8BC LDP X30, X19, [X31], #0x10
	0x03C3B8C0 BR X0
	0x03C3B8C4 STP X30, X19, [X31 - 0x10]!
	0x03C3B8C8 ADRP X19, 0x7AA000
	0x03C3B8CC LDR X0, [X19 + 0x678]
	0x03C3B8D0 CBNZ X0, 0x3C3B8E4
	0x03C3B8D4 ADRP X0, 0xFFFFFFFFFCEC4000
	0x03C3B8D8 ADD X0, X0, 0x378
	0x03C3B8DC BL 0x1C16CB8
	0x03C3B8E0 STR X0, [X19 + 0x678]
	0x03C3B8E4 LDP X30, X19, [X31], #0x10
	0x03C3B8E8 BR X0
	0x03C3B8EC STP X30, X19, [X31 - 0x10]!
	0x03C3B8F0 ADRP X19, 0x7AA000
	0x03C3B8F4 LDR X0, [X19 + 0x680]
	0x03C3B8F8 CBNZ X0, 0x3C3B90C
	0x03C3B8FC ADRP X0, 0xFFFFFFFFFCEDF000
	0x03C3B900 ADD X0, X0, 0xDF6
	0x03C3B904 BL 0x1C16CB8
	0x03C3B908 STR X0, [X19 + 0x680]
	0x03C3B90C LDP X30, X19, [X31], #0x10
	0x03C3B910 BR X0
	0x03C3B914 STP X30, X19, [X31 - 0x10]!
	0x03C3B918 ADRP X19, 0x7AA000
	0x03C3B91C LDR X0, [X19 + 0x680]
	0x03C3B920 CBNZ X0, 0x3C3B934
	0x03C3B924 ADRP X0, 0xFFFFFFFFFCEDF000
	0x03C3B928 ADD X0, X0, 0xDF6
	0x03C3B92C BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AB000
	006 Move W8, [X21+1491]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x4B9000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x525000
	017 Move X0, [X0+1752]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1491], W8
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {36}
	025 Move X20, 0x7AB000
	026 Move X8, [X20+1504]
	027 Compare X8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51671040
	030 Add X0, X0, 885
	031 Call 0x1C17CB8
	032 Move X8, X0
	033 Move [X20+1504], X0
	034 Move X0, X19
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X0, [X19+16]
	037 Move X1, X31
	038 Move X2, X31
	039 Call IntPtr.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {56}
	044 Move X8, 0x4B9000
	045 Move X8, [X8+2600]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X8, 0x525000
	052 Move X8, [X8+1752]
	053 Move X1, X31
	054 Move X0, [X8]
	055 Call Debug.LogWarning, X0
	056 Move [X19+16], X31
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return 

Method: System.IntPtr InitBuffer(System.Int32 count, System.Int32 stride, UnityEngine.ComputeBufferType type, UnityEngine.ComputeBufferMode usage)

Disassembly:
	0x03C3B9D0 STR X0, [X19 + 0x690]
	0x03C3B9D4 LDP X30, X19, [X31], #0x10
	0x03C3B9D8 BR X0
	0x03C3B9DC STP X30, X19, [X31 - 0x10]!
	0x03C3B9E0 ADRP X19, 0x7AA000
	0x03C3B9E4 LDR X0, [X19 + 0x698]
	0x03C3B9E8 CBNZ X0, 0x3C3B9FC
	0x03C3B9EC ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C3B9F0 ADD X0, X0, 0xE66
	0x03C3B9F4 BL 0x1C16CB8
	0x03C3B9F8 STR X0, [X19 + 0x698]
	0x03C3B9FC LDP X30, X19, [X31], #0x10
	0x03C3BA00 BR X0
	0x03C3BA04 STP X30, X19, [X31 - 0x10]!
	0x03C3BA08 ADRP X19, 0x7AA000
	0x03C3BA0C LDR X0, [X19 + 0x698]
	0x03C3BA10 CBNZ X0, 0x3C3BA24
	0x03C3BA14 ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C3BA18 ADD X0, X0, 0xE66
	0x03C3BA1C BL 0x1C16CB8
	0x03C3BA20 STR X0, [X19 + 0x698]
	0x03C3BA24 LDP X30, X19, [X31], #0x10
	0x03C3BA28 BR X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7AB000
	008 Move X4, [X23+1496]
	009 Move W19, W3
	010 Move W20, W2
	011 Move W21, W1
	012 Move W22, W0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51605504
	016 Add X0, X0, 336
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+1496], X0
	020 Move W0, W22
	021 Move W1, W21
	022 Move W2, W20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void DestroyBuffer(UnityEngine.ComputeBuffer buf)

Disassembly:
	0x03C3B994 LDR X0, [X19 + 0x690]
	0x03C3B998 CBNZ X0, 0x3C3B9AC
	0x03C3B99C ADRP X0, 0xFFFFFFFFFCEBC000
	0x03C3B9A0 ADD X0, X0, 0x347
	0x03C3B9A4 BL 0x1C16CB8
	0x03C3B9A8 STR X0, [X19 + 0x690]
	0x03C3B9AC LDP X30, X19, [X31], #0x10
	0x03C3B9B0 BR X0
	0x03C3B9B4 STP X30, X19, [X31 - 0x10]!
	0x03C3B9B8 ADRP X19, 0x7AA000
	0x03C3B9BC LDR X0, [X19 + 0x690]
	0x03C3B9C0 CBNZ X0, 0x3C3B9D4
	0x03C3B9C4 ADRP X0, 0xFFFFFFFFFCEBC000
	0x03C3B9C8 ADD X0, X0, 0x347
	0x03C3B9CC BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AB000
	005 Move X1, [X20+1504]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51671040
	010 Add X0, X0, 885
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1504], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor(System.Int32 count, System.Int32 stride)

Disassembly:
	0x03C3BA2C STP X30, X19, [X31 - 0x10]!
	0x03C3BA30 ADRP X19, 0x7AA000
	0x03C3BA34 LDR X0, [X19 + 0x6A0]

ISIL:
	001 Move W3, W31
	002 Move W4, W31

Method: System.Void .ctor(System.Int32 count, System.Int32 stride, UnityEngine.ComputeBufferType type)

Disassembly:
	0x03C3BC18 CBNZ X0, 0x3C3BC2C
	0x03C3BC1C ADRP X0, 0xFFFFFFFFFCECA000

ISIL:
	001 Move W4, W31
	002 Call ComputeBuffer..ctor, X0, X1, X2, X3, X4, X5
	003 Return 

Method: System.Void .ctor(System.Int32 count, System.Int32 stride, UnityEngine.ComputeBufferType type, UnityEngine.ComputeBufferMode usage, System.Int32 stackDepth)

Disassembly:
	0x03C3BA38 CBNZ X0, 0x3C3BA4C
	0x03C3BA3C ADRP X0, 0xFFFFFFFFFCED7000
	0x03C3BA40 ADD X0, X0, 0xED6
	0x03C3BA44 BL 0x1C16CB8
	0x03C3BA48 STR X0, [X19 + 0x6A0]
	0x03C3BA4C LDP X30, X19, [X31], #0x10
	0x03C3BA50 BR X0
	0x03C3BA54 STP X30, X19, [X31 - 0x10]!
	0x03C3BA58 ADRP X19, 0x7AA000
	0x03C3BA5C LDR X0, [X19 + 0x6A0]
	0x03C3BA60 CBNZ X0, 0x3C3BA74
	0x03C3BA64 ADRP X0, 0xFFFFFFFFFCED7000
	0x03C3BA68 ADD X0, X0, 0xED6
	0x03C3BA6C BL 0x1C16CB8
	0x03C3BA70 STR X0, [X19 + 0x6A0]
	0x03C3BA74 LDP X30, X19, [X31], #0x10
	0x03C3BA78 BR X0
	0x03C3BA7C STP X30, X19, [X31 - 0x10]!
	0x03C3BA80 ADRP X19, 0x7AA000
	0x03C3BA84 LDR X0, [X19 + 0x6A8]
	0x03C3BA88 CBNZ X0, 0x3C3BA9C
	0x03C3BA8C ADRP X0, 0xFFFFFFFFFCECC000
	0x03C3BA90 ADD X0, X0, 0x29B
	0x03C3BA94 BL 0x1C16CB8
	0x03C3BA98 STR X0, [X19 + 0x6A8]
	0x03C3BA9C LDP X30, X19, [X31], #0x10
	0x03C3BAA0 BR X0
	0x03C3BAA4 STP X30, X19, [X31 - 0x10]!
	0x03C3BAA8 ADRP X19, 0x7AA000
	0x03C3BAAC LDR X0, [X19 + 0x6A8]
	0x03C3BAB0 CBNZ X0, 0x3C3BAC4
	0x03C3BAB4 ADRP X0, 0xFFFFFFFFFCECC000
	0x03C3BAB8 ADD X0, X0, 0x29B
	0x03C3BABC BL 0x1C16CB8
	0x03C3BAC0 STR X0, [X19 + 0x6A8]
	0x03C3BAC4 LDP X30, X19, [X31], #0x10
	0x03C3BAC8 BR X0
	0x03C3BACC STP X30, X19, [X31 - 0x10]!
	0x03C3BAD0 ADRP X19, 0x7AA000
	0x03C3BAD4 LDR X0, [X19 + 0x6B0]
	0x03C3BAD8 CBNZ X0, 0x3C3BAEC
	0x03C3BADC ADRP X0, 0xFFFFFFFFFCEED000
	0x03C3BAE0 ADD X0, X0, 0x9BD
	0x03C3BAE4 BL 0x1C16CB8
	0x03C3BAE8 STR X0, [X19 + 0x6B0]
	0x03C3BAEC LDP X30, X19, [X31], #0x10
	0x03C3BAF0 BR X0
	0x03C3BAF4 STP X30, X19, [X31 - 0x10]!
	0x03C3BAF8 ADRP X19, 0x7AA000
	0x03C3BAFC LDR X0, [X19 + 0x6B0]
	0x03C3BB00 CBNZ X0, 0x3C3BB14
	0x03C3BB04 ADRP X0, 0xFFFFFFFFFCEED000
	0x03C3BB08 ADD X0, X0, 0x9BD
	0x03C3BB0C BL 0x1C16CB8
	0x03C3BB10 STR X0, [X19 + 0x6B0]
	0x03C3BB14 LDP X30, X19, [X31], #0x10
	0x03C3BB18 BR X0
	0x03C3BB1C STP X30, X19, [X31 - 0x10]!
	0x03C3BB20 ADRP X19, 0x7AA000
	0x03C3BB24 LDR X0, [X19 + 0x6B8]
	0x03C3BB28 CBNZ X0, 0x3C3BB3C
	0x03C3BB2C ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C3BB30 ADD X0, X0, 0xEA1
	0x03C3BB34 BL 0x1C16CB8
	0x03C3BB38 STR X0, [X19 + 0x6B8]
	0x03C3BB3C LDP X30, X19, [X31], #0x10
	0x03C3BB40 BR X0
	0x03C3BB44 STP X30, X19, [X31 - 0x10]!
	0x03C3BB48 ADRP X19, 0x7AA000
	0x03C3BB4C LDR X0, [X19 + 0x6B8]
	0x03C3BB50 CBNZ X0, 0x3C3BB64
	0x03C3BB54 ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C3BB58 ADD X0, X0, 0xEA1
	0x03C3BB5C BL 0x1C16CB8
	0x03C3BB60 STR X0, [X19 + 0x6B8]
	0x03C3BB64 LDP X30, X19, [X31], #0x10
	0x03C3BB68 BR X0
	0x03C3BB6C STP X30, X19, [X31 - 0x10]!
	0x03C3BB70 ADRP X19, 0x7AA000
	0x03C3BB74 LDR X0, [X19 + 0x6C0]
	0x03C3BB78 CBNZ X0, 0x3C3BB8C
	0x03C3BB7C ADRP X0, 0xFFFFFFFFFCECC000
	0x03C3BB80 ADD X0, X0, 0x2CD
	0x03C3BB84 BL 0x1C16CB8
	0x03C3BB88 STR X0, [X19 + 0x6C0]
	0x03C3BB8C LDP X30, X19, [X31], #0x10
	0x03C3BB90 BR X0
	0x03C3BB94 STP X30, X19, [X31 - 0x10]!
	0x03C3BB98 ADRP X19, 0x7AA000
	0x03C3BB9C LDR X0, [X19 + 0x6C0]
	0x03C3BBA0 CBNZ X0, 0x3C3BBB4
	0x03C3BBA4 ADRP X0, 0xFFFFFFFFFCECC000
	0x03C3BBA8 ADD X0, X0, 0x2CD
	0x03C3BBAC BL 0x1C16CB8
	0x03C3BBB0 STR X0, [X19 + 0x6C0]
	0x03C3BBB4 LDP X30, X19, [X31], #0x10
	0x03C3BBB8 BR X0
	0x03C3BBBC STP X30, X19, [X31 - 0x10]!
	0x03C3BBC0 ADRP X19, 0x7AA000
	0x03C3BBC4 LDR X0, [X19 + 0x6C8]
	0x03C3BBC8 CBNZ X0, 0x3C3BBDC
	0x03C3BBCC ADRP X0, 0xFFFFFFFFFCEE5000
	0x03C3BBD0 ADD X0, X0, 0xB5A
	0x03C3BBD4 BL 0x1C16CB8
	0x03C3BBD8 STR X0, [X19 + 0x6C8]
	0x03C3BBDC LDP X30, X19, [X31], #0x10
	0x03C3BBE0 BR X0
	0x03C3BBE4 STP X30, X19, [X31 - 0x10]!
	0x03C3BBE8 ADRP X19, 0x7AA000
	0x03C3BBEC LDR X0, [X19 + 0x6C8]
	0x03C3BBF0 CBNZ X0, 0x3C3BC04
	0x03C3BBF4 ADRP X0, 0xFFFFFFFFFCEE5000
	0x03C3BBF8 ADD X0, X0, 0xB5A
	0x03C3BBFC BL 0x1C16CB8
	0x03C3BC00 STR X0, [X19 + 0x6C8]
	0x03C3BC04 LDP X30, X19, [X31], #0x10
	0x03C3BC08 BR X0
	0x03C3BC0C STP X30, X19, [X31 - 0x10]!
	0x03C3BC10 ADRP X19, 0x7AA000
	0x03C3BC14 LDR X0, [X19 + 0x6D0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W23, W1
	011 Move X1, X31
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X19, X0
	016 Call Object..ctor, X0
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X25, 0x7AB000
	020 Move X8, [X25+1864]
	021 NotImplemented "Instruction UMADDL not yet implemented."
	022 Compare X8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, -51589120
	025 Add X0, X0, 811
	026 Call 0x1C17CB8
	027 Move X8, X0
	028 Move [X25+1864], X0
	029 NotImplemented "Instruction BLR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X24, 0x7AB000
	032 Move X8, [X24+1496]
	033 Compare X8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, -51605504
	036 Add X0, X0, 336
	037 Call 0x1C17CB8
	038 Move X8, X0
	039 Move [X24+1496], X0
	040 Move W0, W23
	041 Move W1, W22
	042 Move W2, W21
	043 Move W3, W20
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move [X19+16], X0
	046 Move X20, [X31+64]
	047 Move X19, [X31+72]
	048 Move X22, [X31+48]
	049 Move X21, [X31+56]
	050 Move X24, [X31+32]
	051 Move X23, [X31+40]
	052 Move X30, [X31+16]
	053 Move X25, [X31+24]
	054 Add X31, X31, 80
	055 Return 
	056 Move X0, 0x4C1000
	057 Move X0, [X0+1400]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x525000
	062 Move X0, [X0+1760]
	063 Call 0x1C17D08
	064 Move X20, X0
	065 Move X0, 0x4E1000
	066 Move X0, [X0+1608]
	067 Move X0, 0x4C1000
	068 Move X0, [X0+1400]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X19, X0
	072 Move X0, 0x525000
	073 Move X0, [X0+1768]
	074 Call 0x1C17D08
	075 Move X20, X0
	076 Move X0, 0x4E2000
	077 Move X0, [X0+336]
	078 Call 0x1C17D08
	079 Move X2, X0
	080 Move X0, X19
	081 Move X1, X20
	082 Move X3, X31
	083 Call ArgumentException..ctor, X0, X1, X2
	084 Move X0, 0x525000
	085 Move X0, [X0+1776]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X19
	089 Call 0x1C17DEC
	090 Move [X31+8], X24
	091 Move X19, 0x4BB000
	092 Move X19, [X19+2656]
	093 Move X21, X0
	094 Move X0, X19
	095 Call 0x1C17D08
	096 Add X1, X31, 8
	097 Call 0x1C17E04
	098 Move X20, X0
	099 Move X0, X19
	100 Move [X31], X21
	101 Call 0x1C17D08
	102 Add X1, X31, 0
	103 Call 0x1C17E04
	104 Move X19, X0
	105 Move X0, 0x525000
	106 Move X0, [X0+1784]
	107 Call 0x1C17D08
	108 Move X1, X20
	109 Move X2, X19
	110 Move X3, X31
	111 Call String.Format, X0, X1, X2
	112 Move X19, X0
	113 Move X0, 0x4C1000
	114 Move X0, [X0+1400]
	115 Call 0x1C17D08
	116 Call 0x1C17F10
	117 Move X1, X19
	118 Move X2, X31
	119 Move X20, X0
	120 Call ArgumentException..ctor, X0, X1
	121 Move X0, 0x525000
	122 Move X0, [X0+1776]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X20
	126 Call 0x1C17DEC

Method: System.Void Release()

Disassembly:
	0x03C3BC48 ADD X0, X0, 0x2E9

ISIL:
	001 Call ComputeBuffer.Dispose, X0
	002 Return 

Method: System.Int32 get_count()

Disassembly:
	0x03C3BC4C BL 0x1C16CB8
	0x03C3BC50 STR X0, [X19 + 0x6D0]
	0x03C3BC54 LDP X30, X19, [X31], #0x10
	0x03C3BC58 BR X0
	0x03C3BC5C STP X30, X19, [X31 - 0x10]!
	0x03C3BC60 ADRP X19, 0x7AA000
	0x03C3BC64 LDR X0, [X19 + 0x6D8]
	0x03C3BC68 CBNZ X0, 0x3C3BC7C
	0x03C3BC6C ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C3BC70 ADD X0, X0, 0xA5A
	0x03C3BC74 BL 0x1C16CB8
	0x03C3BC78 STR X0, [X19 + 0x6D8]
	0x03C3BC7C LDP X30, X19, [X31], #0x10
	0x03C3BC80 BR X0
	0x03C3BC84 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AB000
	005 Move X1, [X20+1512]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51445760
	010 Add X0, X0, 2611
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1512], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_stride()

Disassembly:
	0x03C3BC88 ADRP X19, 0x7AA000
	0x03C3BC8C LDR X0, [X19 + 0x6D8]
	0x03C3BC90 CBNZ X0, 0x3C3BCA4
	0x03C3BC94 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C3BC98 ADD X0, X0, 0xA5A
	0x03C3BC9C BL 0x1C16CB8
	0x03C3BCA0 STR X0, [X19 + 0x6D8]
	0x03C3BCA4 LDP X30, X19, [X31], #0x10
	0x03C3BCA8 BR X0
	0x03C3BCAC STP X30, X19, [X31 - 0x10]!
	0x03C3BCB0 ADRP X19, 0x7AA000
	0x03C3BCB4 LDR X0, [X19 + 0x6E0]
	0x03C3BCB8 CBNZ X0, 0x3C3BCCC
	0x03C3BCBC ADRP X0, 0xFFFFFFFFFCED9000
	0x03C3BCC0 ADD X0, X0, 0xB45

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AB000
	005 Move X1, [X20+1520]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51638272
	010 Add X0, X0, 1023
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1520], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetData(System.Array data)

Disassembly:
	0x03C3BCC4 BL 0x1C16CB8
	0x03C3BCC8 STR X0, [X19 + 0x6E0]
	0x03C3BCCC LDP X30, X19, [X31], #0x10
	0x03C3BCD0 BR X0
	0x03C3BCD4 STP X30, X19, [X31 - 0x10]!
	0x03C3BCD8 ADRP X19, 0x7AA000
	0x03C3BCDC LDR X0, [X19 + 0x6E0]
	0x03C3BCE0 CBNZ X0, 0x3C3BCF4
	0x03C3BCE4 ADRP X0, 0xFFFFFFFFFCED9000
	0x03C3BCE8 ADD X0, X0, 0xB45
	0x03C3BCEC BL 0x1C16CB8
	0x03C3BCF0 STR X0, [X19 + 0x6E0]
	0x03C3BCF4 LDP X30, X19, [X31], #0x10
	0x03C3BCF8 BR X0
	0x03C3BCFC STP X30, X19, [X31 - 0x10]!
	0x03C3BD00 ADRP X19, 0x7AA000
	0x03C3BD04 LDR X0, [X19 + 0x6E8]
	0x03C3BD08 CBNZ X0, 0x3C3BD1C
	0x03C3BD0C ADRP X0, 0xFFFFFFFFFCEED000
	0x03C3BD10 ADD X0, X0, 0x9ED
	0x03C3BD14 BL 0x1C16CB8
	0x03C3BD18 STR X0, [X19 + 0x6E8]
	0x03C3BD1C LDP X30, X19, [X31], #0x10
	0x03C3BD20 BR X0
	0x03C3BD24 STP X30, X19, [X31 - 0x10]!
	0x03C3BD28 ADRP X19, 0x7AA000
	0x03C3BD2C LDR X0, [X19 + 0x6E8]
	0x03C3BD30 CBNZ X0, 0x3C3BD44
	0x03C3BD34 ADRP X0, 0xFFFFFFFFFCEED000
	0x03C3BD38 ADD X0, X0, 0x9ED
	0x03C3BD3C BL 0x1C16CB8
	0x03C3BD40 STR X0, [X19 + 0x6E8]
	0x03C3BD44 LDP X30, X19, [X31], #0x10
	0x03C3BD48 BR X0
	0x03C3BD4C STP X30, X19, [X31 - 0x10]!
	0x03C3BD50 ADRP X19, 0x7AA000
	0x03C3BD54 LDR X0, [X19 + 0x6F0]
	0x03C3BD58 CBNZ X0, 0x3C3BD6C
	0x03C3BD5C ADRP X0, 0xFFFFFFFFFCEC2000
	0x03C3BD60 ADD X0, X0, 0x693
	0x03C3BD64 BL 0x1C16CB8
	0x03C3BD68 STR X0, [X19 + 0x6F0]
	0x03C3BD6C LDP X30, X19, [X31], #0x10
	0x03C3BD70 BR X0
	0x03C3BD74 STP X30, X19, [X31 - 0x10]!
	0x03C3BD78 ADRP X19, 0x7AA000
	0x03C3BD7C LDR X0, [X19 + 0x6F0]
	0x03C3BD80 CBNZ X0, 0x3C3BD94
	0x03C3BD84 ADRP X0, 0xFFFFFFFFFCEC2000
	0x03C3BD88 ADD X0, X0, 0x693
	0x03C3BD8C BL 0x1C16CB8
	0x03C3BD90 STR X0, [X19 + 0x6F0]
	0x03C3BD94 LDP X30, X19, [X31], #0x10
	0x03C3BD98 BR X0
	0x03C3BD9C STP X30, X19, [X31 - 0x10]!
	0x03C3BDA0 ADRP X19, 0x7AA000
	0x03C3BDA4 LDR X0, [X19 + 0x6F8]
	0x03C3BDA8 CBNZ X0, 0x3C3BDBC
	0x03C3BDAC ADRP X0, 0xFFFFFFFFFCECC000
	0x03C3BDB0 ADD X0, X0, 0x2FE
	0x03C3BDB4 BL 0x1C16CB8
	0x03C3BDB8 STR X0, [X19 + 0x6F8]
	0x03C3BDBC LDP X30, X19, [X31], #0x10
	0x03C3BDC0 BR X0
	0x03C3BDC4 STP X30, X19, [X31 - 0x10]!
	0x03C3BDC8 ADRP X19, 0x7AA000
	0x03C3BDCC LDR X0, [X19 + 0x6F8]
	0x03C3BDD0 CBNZ X0, 0x3C3BDE4
	0x03C3BDD4 ADRP X0, 0xFFFFFFFFFCECC000
	0x03C3BDD8 ADD X0, X0, 0x2FE
	0x03C3BDDC BL 0x1C16CB8
	0x03C3BDE0 STR X0, [X19 + 0x6F8]
	0x03C3BDE4 LDP X30, X19, [X31], #0x10
	0x03C3BDE8 BR X0
	0x03C3BDEC STP X30, X19, [X31 - 0x10]!
	0x03C3BDF0 ADRP X19, 0x7AA000
	0x03C3BDF4 LDR X0, [X19 + 0x700]
	0x03C3BDF8 CBNZ X0, 0x3C3BE0C
	0x03C3BDFC ADRP X0, 0xFFFFFFFFFCEE3000
	0x03C3BE00 ADD X0, X0, 0xDFC
	0x03C3BE04 BL 0x1C16CB8
	0x03C3BE08 STR X0, [X19 + 0x700]
	0x03C3BE0C LDP X30, X19, [X31], #0x10
	0x03C3BE10 BR X0
	0x03C3BE14 STP X30, X19, [X31 - 0x10]!
	0x03C3BE18 ADRP X19, 0x7AA000
	0x03C3BE1C LDR X0, [X19 + 0x700]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {56}
	009 Move X19, X1
	010 Move X20, X0
	011 Move X0, X1
	012 Move X1, X31
	013 Call UnsafeUtility.IsArrayBlittable, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {74}
	018 Move X0, X19
	019 Move X1, X31
	020 Call Array.get_Length, X0
	021 Move W21, W0
	022 Move X0, X19
	023 Move X1, X31
	024 Call "il2cpp_vm_object_is_inst", X0
	025 Compare X0, 0
	026 JumpIfEqual {99}
	027 Move X8, [X0]
	028 Move X9, [X8+1064]
	029 Move X1, [X8+1072]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X1, X31
	032 Call UnsafeUtility.SizeOf, X0
	033 Move X23, 0x7AB000
	034 Move X6, [X23+1544]
	035 Move W22, W0
	036 Compare X6, 0
	037 JumpIfNotEqual {43}
	038 Move X0, -51568640
	039 Add X0, X0, 4046
	040 Call 0x1C17CB8
	041 Move X6, X0
	042 Move [X23+1544], X0
	043 Move X0, X20
	044 Move X1, X19
	045 Move W4, W21
	046 Move W5, W22
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move W2, W31
	052 Move W3, W31
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 CallNoReturn X6
	056 Move X0, 0x4BE000
	057 Move X0, [X0+1320]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x4C5000
	062 Move X0, [X0+1680]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentNullException..ctor, X0, X1
	068 Move X0, 0x525000
	069 Move X0, [X0+1792]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC
	074 Move X0, X19
	075 Move X1, X31
	076 Call UnsafeUtility.GetReasonForArrayNonBlittable, X0
	077 Move X19, X0
	078 Move X0, 0x525000
	079 Move X0, [X0+1800]
	080 Call 0x1C17D08
	081 Move X1, X19
	082 Move X2, X31
	083 Call String.Format, X0, X1
	084 Move X19, X0
	085 Move X0, 0x4C1000
	086 Move X0, [X0+1400]
	087 Call 0x1C17D08
	088 Call 0x1C17F10
	089 Move X1, X19
	090 Move X2, X31
	091 Move X20, X0
	092 Call ArgumentException..ctor, X0, X1
	093 Move X0, 0x525000
	094 Move X0, [X0+1792]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X20
	098 Call 0x1C17DEC
	099 Call 0x1C17F20

Method: System.Void SetData(Unity.Collections.NativeArray`1<T> data)

Disassembly:
	0x021A5AEC MOV X0, X21
	0x021A5AF0 BL 0x1D2C690
	0x021A5AF4 MOV X0, X20
	0x021A5AF8 BL 0x1C16F18
	0x021A5AFC BL 0x1990590
	0x021A5B00 STP X29, X30, [X31 - 0x60]!
	0x021A5B04 STP X28, X27, [X31 + 0x10]
	0x021A5B08 STP X26, X25, [X31 + 0x20]
	0x021A5B0C STP X24, X23, [X31 + 0x30]
	0x021A5B10 STP X22, X21, [X31 + 0x40]
	0x021A5B14 STP X20, X19, [X31 + 0x50]
	0x021A5B18 ADD X29, X31, 0x0
	0x021A5B1C SUB X31, X31, 0x20
	0x021A5B20 MRS X27, 0xC000
	0x021A5B24 LDR X8, [X27 + 0x28]
	0x021A5B28 MOV X20, X2
	0x021A5B2C MOV X21, X1
	0x021A5B30 MOV X19, X0
	0x021A5B34 STUR X8, [X29 - 0x8]
	0x021A5B38 LDR X26, [X2 + 0x38]
	0x021A5B3C CBNZ X26, 0x21A5B6C
	0x021A5B40 ADRP X0, 0x1F4E000
	0x021A5B44 LDR X0, [X0 + 0xE00]
	0x021A5B48 BL 0x1C16CF4
	0x021A5B4C ADRP X0, 0x1F4E000
	0x021A5B50 LDR X0, [X0 + 0xE18]
	0x021A5B54 BL 0x1C16CF4
	0x021A5B58 LDR X26, [X20 + 0x38]
	0x021A5B5C CBNZ X26, 0x21A5B6C
	0x021A5B60 MOV X0, X20
	0x021A5B64 BL 0x1C5C6E0
	0x021A5B68 LDR X26, [X20 + 0x38]
	0x021A5B6C LDR X8, [X26 + 0x28]
	0x021A5B70 LDR W22, [X8 + 0xFC]
	0x021A5B74 ADD X8, X31, 0x0
	0x021A5B78 ADD X9, X22, 0xF
	0x021A5B7C AND X9, X9, 0x1FFFFFFFF
	0x021A5B80 SUB X23, X8, X9
	0x021A5B84 ADD X31, X23, 0x0
	0x021A5B88 ADD X8, X31, 0x0
	0x021A5B8C SUB X24, X8, X9
	0x021A5B90 ADD X31, X24, 0x0
	0x021A5B94 ADD X8, X31, 0x0
	0x021A5B98 SUB X25, X8, X9
	0x021A5B9C ADD X31, X25, 0x0
	0x021A5BA0 MOV X0, X25

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31], X1
	009 Move X8, [X3+56]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X20
	017 Call 0x1C5D6E0
	018 Move X8, [X20+56]
	019 Move X2, [X8+8]
	020 Move X0, X22
	021 Move X1, X21
	022 Move X8, [X2]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X1, X31
	025 Call IntPtr.op_Explicit, X0
	026 Move X8, [X20+56]
	027 Move X21, X0
	028 Add X0, X31, 0
	029 Move X1, [X8+16]
	030 Move X8, [X1]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X20+56]
	033 Move W20, W0
	034 Move X8, [X8+32]
	035 Move X9, [X8]
	036 Move X0, X8
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move W5, W0
	039 Move X0, X19
	040 Move X1, X21
	041 Move W2, W31
	042 Move W3, W31
	043 Move W4, W20
	044 Move X6, X31
	045 Call ComputeBuffer.InternalSetNativeData, X0, X1, X2, X3, X4, X5
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X30, [X31+16]
	051 Add X31, X31, 64
	052 Return 

Method: System.Void SetData(System.Array data, System.Int32 managedBufferStartIndex, System.Int32 computeBufferStartIndex, System.Int32 count)

Disassembly:
	0x03C3BE94 LDR X0, [X19 + 0x710]
	0x03C3BE98 CBNZ X0, 0x3C3BEAC
	0x03C3BE9C ADRP X0, 0xFFFFFFFFFCEED000
	0x03C3BEA0 ADD X0, X0, 0xA1E
	0x03C3BEA4 BL 0x1C16CB8
	0x03C3BEA8 STR X0, [X19 + 0x710]
	0x03C3BEAC LDP X30, X19, [X31], #0x10
	0x03C3BEB0 BR X0
	0x03C3BEB4 STP X30, X19, [X31 - 0x10]!
	0x03C3BEB8 ADRP X19, 0x7AA000
	0x03C3BEBC LDR X0, [X19 + 0x710]
	0x03C3BEC0 CBNZ X0, 0x3C3BED4
	0x03C3BEC4 ADRP X0, 0xFFFFFFFFFCEED000
	0x03C3BEC8 ADD X0, X0, 0xA1E
	0x03C3BECC BL 0x1C16CB8
	0x03C3BED0 STR X0, [X19 + 0x710]
	0x03C3BED4 LDP X30, X19, [X31], #0x10
	0x03C3BED8 BR X0
	0x03C3BEDC STP X30, X19, [X31 - 0x10]!
	0x03C3BEE0 ADRP X19, 0x7AA000
	0x03C3BEE4 LDR X0, [X19 + 0x718]
	0x03C3BEE8 CBNZ X0, 0x3C3BEFC
	0x03C3BEEC ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C3BEF0 ADD X0, X0, 0xE8E
	0x03C3BEF4 BL 0x1C16CB8
	0x03C3BEF8 STR X0, [X19 + 0x718]
	0x03C3BEFC LDP X30, X19, [X31], #0x10
	0x03C3BF00 BR X0
	0x03C3BF04 STP X30, X19, [X31 - 0x10]!
	0x03C3BF08 ADRP X19, 0x7AA000
	0x03C3BF0C LDR X0, [X19 + 0x718]
	0x03C3BF10 CBNZ X0, 0x3C3BF24
	0x03C3BF14 ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C3BF18 ADD X0, X0, 0xE8E
	0x03C3BF1C BL 0x1C16CB8
	0x03C3BF20 STR X0, [X19 + 0x718]
	0x03C3BF24 LDP X30, X19, [X31], #0x10
	0x03C3BF28 BR X0
	0x03C3BF2C STR X30, [X31 - 0x20]!
	0x03C3BF30 STP X20, X19, [X31 + 0x10]
	0x03C3BF34 ADRP X20, 0x7AA000
	0x03C3BF38 LDRB W8, [X20 + 0x668]
	0x03C3BF3C MOV X19, X0
	0x03C3BF40 TBNZ X8, 0x0, 0x3C3BF58
	0x03C3BF44 ADRP X0, 0x4B8000
	0x03C3BF48 LDR X0, [X0 + 0xDF8]
	0x03C3BF4C BL 0x1C16CF4
	0x03C3BF50 MOVZ W8, 0x1
	0x03C3BF54 STRB W8, [X20 + 0x668]
	0x03C3BF58 CBZ X19, 0x3C3BFA0
	0x03C3BF5C ADRP X20, 0x4B8000
	0x03C3BF60 LDR X20, [X20 + 0xDF8]
	0x03C3BF64 MOV X0, X19
	0x03C3BF68 MOV X1, X31
	0x03C3BF6C BL 0x33BE520
	0x03C3BF70 LDR X8, [X20]
	0x03C3BF74 MOV X20, X0
	0x03C3BF78 LDR W9, [X8 + 0xE0]
	0x03C3BF7C CBNZ W9, 0x3C3BF88
	0x03C3BF80 MOV X0, X8
	0x03C3BF84 BL 0x1C16DFC
	0x03C3BF88 MOV X0, X20
	0x03C3BF8C MOV X1, X19
	0x03C3BF90 LDP X20, X19, [X31 + 0x10]
	0x03C3BF94 MOV X2, X31
	0x03C3BF98 LDR X30, [X31], #0x20
	0x03C3BF9C B 0x33B153C
	0x03C3BFA0 BL 0x1C16F20
	0x03C3BFA4 SUB X31, X31, 0x30
	0x03C3BFA8 STP X30, X21, [X31 + 0x10]
	0x03C3BFAC STP X20, X19, [X31 + 0x20]
	0x03C3BFB0 ADRP X21, 0x7AA000
	0x03C3BFB4 ADRP X20, 0x518000
	0x03C3BFB8 LDRB W8, [X21 + 0x669]
	0x03C3BFBC LDR X20, [X20 + 0x138]
	0x03C3BFC0 MOV W19, W0
	0x03C3BFC4 TBNZ X8, 0x0, 0x3C3BFDC
	0x03C3BFC8 ADRP X0, 0x518000
	0x03C3BFCC LDR X0, [X0 + 0x138]
	0x03C3BFD0 BL 0x1C16CF4
	0x03C3BFD4 MOVZ W8, 0x1
	0x03C3BFD8 STRB W8, [X21 + 0x669]
	0x03C3BFDC LDR X0, [X20]
	0x03C3BFE0 ADD X1, X31, 0xC
	0x03C3BFE4 STR W19, [X31 + 0xC]
	0x03C3BFE8 BL 0x1C16E04
	0x03C3BFEC BL 0x3C3BF2C
	0x03C3BFF0 TBZ X0, 0x0, 0x3C3C030
	0x03C3BFF4 ADRP X20, 0x7AA000
	0x03C3BFF8 LDR X8, [X20 + 0x720]
	0x03C3BFFC CBNZ X8, 0x3C3C014
	0x03C3C000 ADRP X0, 0xFFFFFFFFFCED8000
	0x03C3C004 ADD X0, X0, 0xB75
	0x03C3C008 BL 0x1C16CB8
	0x03C3C00C MOV X8, X0
	0x03C3C010 STR X0, [X20 + 0x720]
	0x03C3C014 MOV W0, W19
	0x03C3C018 BLR X8
	0x03C3C01C LDP X20, X19, [X31 + 0x20]
	0x03C3C020 LDP X30, X21, [X31 + 0x10]
	0x03C3C024 AND W0, W0, 0x1
	0x03C3C028 ADD X31, X31, 0x30
	0x03C3C02C RET
	0x03C3C030 ADRP X0, 0x4BF000
	0x03C3C034 LDR X0, [X0 + 0x578]
	0x03C3C038 BL 0x1C16D08
	0x03C3C03C BL 0x1C16F10
	0x03C3C040 MOV X19, X0
	0x03C3C044 ADRP X0, 0x523000
	0x03C3C048 LDR X0, [X0 + 0x730]
	0x03C3C04C BL 0x1C16D08
	0x03C3C050 MOV X1, X0
	0x03C3C054 MOV X0, X19
	0x03C3C058 MOV X2, X31
	0x03C3C05C BL 0x3314A68
	0x03C3C060 ADRP X0, 0x523000
	0x03C3C064 LDR X0, [X0 + 0x738]
	0x03C3C068 BL 0x1C16D08
	0x03C3C06C MOV X1, X0
	0x03C3C070 MOV X0, X19
	0x03C3C074 BL 0x1C16DEC
	0x03C3C078 STR X30, [X31 - 0x20]!
	0x03C3C07C STP X20, X19, [X31 + 0x10]
	0x03C3C080 ADRP X20, 0x7A9000
	0x03C3C084 LDR X1, [X20 + 0x720]
	0x03C3C088 MOV W19, W0
	0x03C3C08C CBNZ X1, 0x3C3C0A4
	0x03C3C090 ADRP X0, 0xFFFFFFFFFCED8000
	0x03C3C094 ADD X0, X0, 0xB75
	0x03C3C098 BL 0x1C16CB8
	0x03C3C09C MOV X1, X0
	0x03C3C0A0 STR X0, [X20 + 0x720]
	0x03C3C0A4 MOV W0, W19
	0x03C3C0A8 LDP X20, X19, [X31 + 0x10]
	0x03C3C0AC LDR X30, [X31], #0x20
	0x03C3C0B0 BR X1
	0x03C3C0B4 SUB X31, X31, 0x30
	0x03C3C0B8 STP X30, X21, [X31 + 0x10]
	0x03C3C0BC STP X20, X19, [X31 + 0x20]
	0x03C3C0C0 ADRP X21, 0x7A9000
	0x03C3C0C4 ADRP X20, 0x517000
	0x03C3C0C8 LDRB W8, [X21 + 0x66A]
	0x03C3C0CC LDR X20, [X20 + 0x4C0]
	0x03C3C0D0 MOV W19, W0
	0x03C3C0D4 TBNZ X8, 0x0, 0x3C3C0EC
	0x03C3C0D8 ADRP X0, 0x517000
	0x03C3C0DC LDR X0, [X0 + 0x4C0]
	0x03C3C0E0 BL 0x1C16CF4
	0x03C3C0E4 MOVZ W8, 0x1
	0x03C3C0E8 STRB W8, [X21 + 0x66A]
	0x03C3C0EC LDR X0, [X20]
	0x03C3C0F0 ADD X1, X31, 0xC
	0x03C3C0F4 STR W19, [X31 + 0xC]
	0x03C3C0F8 BL 0x1C16E04

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x7AB000
	011 Move W8, [X24+1528]
	012 Move W19, W4
	013 Move W20, W3
	014 Move W22, W2
	015 Move X21, X1
	016 Move X23, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x4E1000
	022 Move X0, [X0+2128]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+1528], W8
	026 Compare X21, 0
	027 JumpIfEqual {130}
	028 Move X0, X21
	029 Move X1, X31
	030 Call UnsafeUtility.IsArrayBlittable, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {148}
	035 Or W8, W20, W22
	036 Or W8, W8, W19
	037 Move TEMP, X8
	038 And TEMP, TEMP, -2147483648
	039 Compare TEMP, -2147483648
	040 JumpIfEqual {93}
	041 Move X0, X21
	042 Move X1, X31
	043 Call Array.get_Length, X0
	044 Add W8, W19, W22
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X21
	047 Move X1, X31
	048 Call "il2cpp_vm_object_is_inst", X0
	049 Compare X0, 0
	050 JumpIfEqual {173}
	051 Move X8, [X0]
	052 Move X24, 0x4E1000
	053 Move X9, [X8+1064]
	054 Move X1, [X8+1072]
	055 Move X24, [X24+2128]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X8, [X24]
	058 Move X24, X0
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X0, X24
	065 Move X1, X31
	066 Call Marshal.SizeOf, X0
	067 Move X25, 0x7AB000
	068 Move X6, [X25+1544]
	069 Move W24, W0
	070 Compare X6, 0
	071 JumpIfNotEqual {77}
	072 Move X0, -51568640
	073 Add X0, X0, 4046
	074 Call 0x1C17CB8
	075 Move X6, X0
	076 Move [X25+1544], X0
	077 Move X0, X23
	078 Move X1, X21
	079 Move W2, W22
	080 Move W3, W20
	081 Move W4, W19
	082 Move W5, W24
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X22, [X31+48]
	086 Move X21, [X31+56]
	087 Move X24, [X31+32]
	088 Move X23, [X31+40]
	089 Move X30, [X31+16]
	090 Move X25, [X31+24]
	091 Add X31, X31, 80
	092 CallNoReturn X6
	093 Move [X31+12], W22
	094 Move X21, 0x4B9000
	095 Move X21, [X21+1880]
	096 Move X0, X21
	097 Call 0x1C17D08
	098 Add X1, X31, 12
	099 Call 0x1C17E04
	100 Move X22, X0
	101 Move X0, X21
	102 Move [X31+8], W20
	103 Call 0x1C17D08
	104 Add X1, X31, 8
	105 Call 0x1C17E04
	106 Move X20, X0
	107 Move X0, X21
	108 Move [X31+4], W19
	109 Call 0x1C17D08
	110 Add X1, X31, 4
	111 Call 0x1C17E04
	112 Move X19, X0
	113 Move X0, 0x524000
	114 Move X0, [X0+1808]
	115 Call 0x1C17D08
	116 Move X1, X22
	117 Move X2, X20
	118 Move X3, X19
	119 Move X4, X31
	120 Call String.Format, X0, X1, X2, X3
	121 Move X19, X0
	122 Move X0, 0x4C0000
	123 Move X0, [X0+1888]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X1, X19
	127 Move X2, X31
	128 Move X20, X0
	129 Call ArgumentOutOfRangeException..ctor, X0, X1
	130 Move X0, 0x4BD000
	131 Move X0, [X0+1320]
	132 Call 0x1C17D08
	133 Call 0x1C17F10
	134 Move X19, X0
	135 Move X0, 0x4C4000
	136 Move X0, [X0+1680]
	137 Call 0x1C17D08
	138 Move X1, X0
	139 Move X0, X19
	140 Move X2, X31
	141 Call ArgumentNullException..ctor, X0, X1
	142 Move X0, 0x524000
	143 Move X0, [X0+1816]
	144 Call 0x1C17D08
	145 Move X1, X0
	146 Move X0, X19
	147 Call 0x1C17DEC
	148 Move X0, X21
	149 Move X1, X31
	150 Call UnsafeUtility.GetReasonForArrayNonBlittable, X0
	151 Move X19, X0
	152 Move X0, 0x524000
	153 Move X0, [X0+1800]
	154 Call 0x1C17D08
	155 Move X1, X19
	156 Move X2, X31
	157 Call String.Format, X0, X1
	158 Move X19, X0
	159 Move X0, 0x4C0000
	160 Move X0, [X0+1400]
	161 Call 0x1C17D08
	162 Call 0x1C17F10
	163 Move X1, X19
	164 Move X2, X31
	165 Move X20, X0
	166 Call ArgumentException..ctor, X0, X1
	167 Move X0, 0x524000
	168 Move X0, [X0+1816]
	169 Call 0x1C17D08
	170 Move X1, X0
	171 Move X0, X20
	172 Call 0x1C17DEC
	173 Call 0x1C17F20

Method: System.Void InternalSetNativeData(System.IntPtr data, System.Int32 nativeBufferStartIndex, System.Int32 computeBufferStartIndex, System.Int32 count, System.Int32 elemSize)

Disassembly:
	0x03C3C0FC BL 0x3C3BF2C
	0x03C3C100 TBZ X0, 0x0, 0x3C3C140
	0x03C3C104 ADRP X20, 0x7A9000
	0x03C3C108 LDR X8, [X20 + 0x728]
	0x03C3C10C CBNZ X8, 0x3C3C124
	0x03C3C110 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C3C114 ADD X0, X0, 0xA38
	0x03C3C118 BL 0x1C16CB8
	0x03C3C11C MOV X8, X0
	0x03C3C120 STR X0, [X20 + 0x728]
	0x03C3C124 MOV W0, W19
	0x03C3C128 BLR X8
	0x03C3C12C LDP X20, X19, [X31 + 0x20]
	0x03C3C130 LDP X30, X21, [X31 + 0x10]
	0x03C3C134 AND W0, W0, 0x1
	0x03C3C138 ADD X31, X31, 0x30
	0x03C3C13C RET
	0x03C3C140 ADRP X0, 0x4BF000
	0x03C3C144 LDR X0, [X0 + 0x578]
	0x03C3C148 BL 0x1C16D08
	0x03C3C14C BL 0x1C16F10
	0x03C3C150 MOV X19, X0
	0x03C3C154 ADRP X0, 0x523000
	0x03C3C158 LDR X0, [X0 + 0x740]
	0x03C3C15C BL 0x1C16D08
	0x03C3C160 MOV X1, X0
	0x03C3C164 MOV X0, X19
	0x03C3C168 MOV X2, X31
	0x03C3C16C BL 0x3314A68

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7AA000
	010 Move X6, [X25+1536]
	011 Move W19, W5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51675136
	020 Add X0, X0, 953
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+1536], X0
	024 Move X0, X24
	025 Move X1, X23
	026 Move W2, W22
	027 Move W3, W21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void InternalSetData(System.Array data, System.Int32 managedBufferStartIndex, System.Int32 computeBufferStartIndex, System.Int32 count, System.Int32 elemSize)

Disassembly:
	0x03C3BE20 CBNZ X0, 0x3C3BE34
	0x03C3BE24 ADRP X0, 0xFFFFFFFFFCEE3000
	0x03C3BE28 ADD X0, X0, 0xDFC
	0x03C3BE2C BL 0x1C16CB8
	0x03C3BE30 STR X0, [X19 + 0x700]
	0x03C3BE34 LDP X30, X19, [X31], #0x10
	0x03C3BE38 BR X0
	0x03C3BE3C STP X30, X19, [X31 - 0x10]!
	0x03C3BE40 ADRP X19, 0x7AA000
	0x03C3BE44 LDR X0, [X19 + 0x708]
	0x03C3BE48 CBNZ X0, 0x3C3BE5C
	0x03C3BE4C ADRP X0, 0xFFFFFFFFFCED0000
	0x03C3BE50 ADD X0, X0, 0x582
	0x03C3BE54 BL 0x1C16CB8
	0x03C3BE58 STR X0, [X19 + 0x708]
	0x03C3BE5C LDP X30, X19, [X31], #0x10
	0x03C3BE60 BR X0
	0x03C3BE64 STP X30, X19, [X31 - 0x10]!
	0x03C3BE68 ADRP X19, 0x7AA000
	0x03C3BE6C LDR X0, [X19 + 0x708]
	0x03C3BE70 CBNZ X0, 0x3C3BE84
	0x03C3BE74 ADRP X0, 0xFFFFFFFFFCED0000
	0x03C3BE78 ADD X0, X0, 0x582
	0x03C3BE7C BL 0x1C16CB8
	0x03C3BE80 STR X0, [X19 + 0x708]
	0x03C3BE84 LDP X30, X19, [X31], #0x10
	0x03C3BE88 BR X0
	0x03C3BE8C STP X30, X19, [X31 - 0x10]!
	0x03C3BE90 ADRP X19, 0x7AA000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7AB000
	010 Move X6, [X25+1544]
	011 Move W19, W5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51568640
	020 Add X0, X0, 4046
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+1544], X0
	024 Move X0, X24
	025 Move X1, X23
	026 Move W2, W22
	027 Move W3, W21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void GetData(System.Array data)

Disassembly:
	0x03C3C170 ADRP X0, 0x523000
	0x03C3C174 LDR X0, [X0 + 0x748]
	0x03C3C178 BL 0x1C16D08
	0x03C3C17C MOV X1, X0
	0x03C3C180 MOV X0, X19
	0x03C3C184 BL 0x1C16DEC
	0x03C3C188 STR X30, [X31 - 0x20]!
	0x03C3C18C STP X20, X19, [X31 + 0x10]
	0x03C3C190 ADRP X20, 0x7A9000
	0x03C3C194 LDR X1, [X20 + 0x728]
	0x03C3C198 MOV W19, W0
	0x03C3C19C CBNZ X1, 0x3C3C1B4
	0x03C3C1A0 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C3C1A4 ADD X0, X0, 0xA38
	0x03C3C1A8 BL 0x1C16CB8
	0x03C3C1AC MOV X1, X0
	0x03C3C1B0 STR X0, [X20 + 0x728]
	0x03C3C1B4 MOV W0, W19
	0x03C3C1B8 LDP X20, X19, [X31 + 0x10]
	0x03C3C1BC LDR X30, [X31], #0x20
	0x03C3C1C0 BR X1
	0x03C3C1C4 STP X30, X19, [X31 - 0x10]!
	0x03C3C1C8 ADRP X19, 0x7A9000
	0x03C3C1CC LDR X0, [X19 + 0x730]
	0x03C3C1D0 CBNZ X0, 0x3C3C1E4
	0x03C3C1D4 ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C3C1D8 ADD X0, X0, 0x42D
	0x03C3C1DC BL 0x1C16CB8
	0x03C3C1E0 STR X0, [X19 + 0x730]
	0x03C3C1E4 LDP X30, X19, [X31], #0x10
	0x03C3C1E8 BR X0
	0x03C3C1EC STP X30, X19, [X31 - 0x10]!
	0x03C3C1F0 ADRP X19, 0x7A9000
	0x03C3C1F4 LDR X0, [X19 + 0x730]
	0x03C3C1F8 CBNZ X0, 0x3C3C20C
	0x03C3C1FC ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C3C200 ADD X0, X0, 0x42D
	0x03C3C204 BL 0x1C16CB8
	0x03C3C208 STR X0, [X19 + 0x730]
	0x03C3C20C LDP X30, X19, [X31], #0x10
	0x03C3C210 BR X0
	0x03C3C214 STP X30, X19, [X31 - 0x10]!
	0x03C3C218 ADRP X19, 0x7A9000
	0x03C3C21C LDR X0, [X19 + 0x738]
	0x03C3C220 CBNZ X0, 0x3C3C234
	0x03C3C224 ADRP X0, 0xFFFFFFFFFCEC7000
	0x03C3C228 ADD X0, X0, 0x1CD
	0x03C3C22C BL 0x1C16CB8
	0x03C3C230 STR X0, [X19 + 0x738]
	0x03C3C234 LDP X30, X19, [X31], #0x10
	0x03C3C238 BR X0
	0x03C3C23C STP X30, X19, [X31 - 0x10]!
	0x03C3C240 ADRP X19, 0x7A9000
	0x03C3C244 LDR X0, [X19 + 0x738]
	0x03C3C248 CBNZ X0, 0x3C3C25C
	0x03C3C24C ADRP X0, 0xFFFFFFFFFCEC7000
	0x03C3C250 ADD X0, X0, 0x1CD
	0x03C3C254 BL 0x1C16CB8
	0x03C3C258 STR X0, [X19 + 0x738]
	0x03C3C25C LDP X30, X19, [X31], #0x10
	0x03C3C260 BR X0
	0x03C3C264 STP X30, X19, [X31 - 0x10]!
	0x03C3C268 ADRP X19, 0x7A9000
	0x03C3C26C LDR X0, [X19 + 0x740]
	0x03C3C270 CBNZ X0, 0x3C3C284
	0x03C3C274 ADRP X0, 0xFFFFFFFFFCEE8000
	0x03C3C278 ADD X0, X0, 0xEBC
	0x03C3C27C BL 0x1C16CB8
	0x03C3C280 STR X0, [X19 + 0x740]
	0x03C3C284 LDP X30, X19, [X31], #0x10
	0x03C3C288 BR X0
	0x03C3C28C STP X30, X19, [X31 - 0x10]!
	0x03C3C290 ADRP X19, 0x7A9000
	0x03C3C294 LDR X0, [X19 + 0x740]
	0x03C3C298 CBNZ X0, 0x3C3C2AC
	0x03C3C29C ADRP X0, 0xFFFFFFFFFCEE8000
	0x03C3C2A0 ADD X0, X0, 0xEBC
	0x03C3C2A4 BL 0x1C16CB8
	0x03C3C2A8 STR X0, [X19 + 0x740]
	0x03C3C2AC LDP X30, X19, [X31], #0x10
	0x03C3C2B0 BR X0
	0x03C3C2B4 STP X30, X19, [X31 - 0x10]!
	0x03C3C2B8 ADRP X19, 0x7A9000
	0x03C3C2BC LDR X0, [X19 + 0x748]
	0x03C3C2C0 CBNZ X0, 0x3C3C2D4
	0x03C3C2C4 ADRP X0, 0xFFFFFFFFFCECB000
	0x03C3C2C8 ADD X0, X0, 0x32B
	0x03C3C2CC BL 0x1C16CB8
	0x03C3C2D0 STR X0, [X19 + 0x748]
	0x03C3C2D4 LDP X30, X19, [X31], #0x10
	0x03C3C2D8 BR X0
	0x03C3C2DC STP X30, X19, [X31 - 0x10]!
	0x03C3C2E0 ADRP X19, 0x7A9000
	0x03C3C2E4 LDR X0, [X19 + 0x768]
	0x03C3C2E8 CBNZ X0, 0x3C3C2FC
	0x03C3C2EC ADRP X0, 0xFFFFFFFFFCECF000
	0x03C3C2F0 ADD X0, X0, 0x5B9
	0x03C3C2F4 BL 0x1C16CB8
	0x03C3C2F8 STR X0, [X19 + 0x768]
	0x03C3C2FC LDP X30, X19, [X31], #0x10
	0x03C3C300 BR X0
	0x03C3C304 STP X30, X19, [X31 - 0x10]!
	0x03C3C308 ADRP X19, 0x7A9000
	0x03C3C30C LDR X0, [X19 + 0x768]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7AA000
	008 Move W8, [X21+1552]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x4E0000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1552], W8
	020 Compare X19, 0
	021 JumpIfEqual {77}
	022 Move X0, X19
	023 Move X1, X31
	024 Call UnsafeUtility.IsArrayBlittable, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {95}
	029 Move X0, X19
	030 Move X1, X31
	031 Call Array.get_Length, X0
	032 Move W21, W0
	033 Move X0, X19
	034 Move X1, X31
	035 Call "il2cpp_vm_object_is_inst", X0
	036 Compare X0, 0
	037 JumpIfEqual {120}
	038 Move X8, [X0]
	039 Move X22, 0x4E0000
	040 Move X9, [X8+1064]
	041 Move X1, [X8+1072]
	042 Move X22, [X22+2128]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X22]
	045 Move X22, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X0, X22
	052 Move X1, X31
	053 Call Marshal.SizeOf, X0
	054 Move X23, 0x7AA000
	055 Move X6, [X23+1560]
	056 Move W22, W0
	057 Compare X6, 0
	058 JumpIfNotEqual {64}
	059 Move X0, -51466240
	060 Add X0, X0, 3636
	061 Call 0x1C17CB8
	062 Move X6, X0
	063 Move [X23+1560], X0
	064 Move X0, X20
	065 Move X1, X19
	066 Move W4, W21
	067 Move W5, W22
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move W2, W31
	073 Move W3, W31
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 CallNoReturn X6
	077 Move X0, 0x4BD000
	078 Move X0, [X0+1320]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X19, X0
	082 Move X0, 0x4C4000
	083 Move X0, [X0+1680]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Move X2, X31
	088 Call ArgumentNullException..ctor, X0, X1
	089 Move X0, 0x524000
	090 Move X0, [X0+1824]
	091 Call 0x1C17D08
	092 Move X1, X0
	093 Move X0, X19
	094 Call 0x1C17DEC
	095 Move X0, X19
	096 Move X1, X31
	097 Call UnsafeUtility.GetReasonForArrayNonBlittable, X0
	098 Move X19, X0
	099 Move X0, 0x524000
	100 Move X0, [X0+1832]
	101 Call 0x1C17D08
	102 Move X1, X19
	103 Move X2, X31
	104 Call String.Format, X0, X1
	105 Move X19, X0
	106 Move X0, 0x4C0000
	107 Move X0, [X0+1400]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X1, X19
	111 Move X2, X31
	112 Move X20, X0
	113 Call ArgumentException..ctor, X0, X1
	114 Move X0, 0x524000
	115 Move X0, [X0+1824]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X20
	119 Call 0x1C17DEC
	120 Call 0x1C17F20

Method: System.Void InternalGetData(System.Array data, System.Int32 managedBufferStartIndex, System.Int32 computeBufferStartIndex, System.Int32 count, System.Int32 elemSize)

Disassembly:
	0x03C3C310 CBNZ X0, 0x3C3C324
	0x03C3C314 ADRP X0, 0xFFFFFFFFFCECF000
	0x03C3C318 ADD X0, X0, 0x5B9
	0x03C3C31C BL 0x1C16CB8
	0x03C3C320 STR X0, [X19 + 0x768]
	0x03C3C324 LDP X30, X19, [X31], #0x10
	0x03C3C328 BR X0
	0x03C3C32C STP X30, X19, [X31 - 0x10]!
	0x03C3C330 ADRP X19, 0x7A9000
	0x03C3C334 LDR X0, [X19 + 0x770]
	0x03C3C338 CBNZ X0, 0x3C3C34C
	0x03C3C33C ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C3C340 ADD X0, X0, 0x274
	0x03C3C344 BL 0x1C16CB8
	0x03C3C348 STR X0, [X19 + 0x770]
	0x03C3C34C LDP X30, X19, [X31], #0x10
	0x03C3C350 BR X0
	0x03C3C354 STP X30, X19, [X31 - 0x10]!
	0x03C3C358 ADRP X19, 0x7A9000
	0x03C3C35C LDR X0, [X19 + 0x770]
	0x03C3C360 CBNZ X0, 0x3C3C374
	0x03C3C364 ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C3C368 ADD X0, X0, 0x274
	0x03C3C36C BL 0x1C16CB8
	0x03C3C370 STR X0, [X19 + 0x770]
	0x03C3C374 LDP X30, X19, [X31], #0x10
	0x03C3C378 BR X0
	0x03C3C37C STP X30, X19, [X31 - 0x10]!
	0x03C3C380 ADRP X19, 0x7A9000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7AA000
	010 Move X6, [X25+1560]
	011 Move W19, W5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51466240
	020 Add X0, X0, 3636
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+1560], X0
	024 Move X0, X24
	025 Move X1, X23
	026 Move W2, W22
	027 Move W3, W21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void set_name(System.String value)

Disassembly:
	0x03C3C384 LDR X0, [X19 + 0x778]
	0x03C3C388 CBNZ X0, 0x3C3C39C
	0x03C3C38C ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C3C390 ADD X0, X0, 0xB10
	0x03C3C394 BL 0x1C16CB8
	0x03C3C398 STR X0, [X19 + 0x778]
	0x03C3C39C LDP X30, X19, [X31], #0x10
	0x03C3C3A0 BR X0
	0x03C3C3A4 STP X30, X19, [X31 - 0x10]!
	0x03C3C3A8 ADRP X19, 0x7A9000
	0x03C3C3AC LDR X0, [X19 + 0x778]
	0x03C3C3B0 CBNZ X0, 0x3C3C3C4
	0x03C3C3B4 ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C3C3B8 ADD X0, X0, 0xB10
	0x03C3C3BC BL 0x1C16CB8
	0x03C3C3C0 STR X0, [X19 + 0x778]
	0x03C3C3C4 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AA000
	006 Move X2, [X21+1568]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51515392
	012 Add X0, X0, 3524
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1568], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetName(System.String name)

Disassembly:
	0x03C3C3C8 BR X0
	0x03C3C3CC STP X30, X19, [X31 - 0x10]!
	0x03C3C3D0 ADRP X19, 0x7A9000
	0x03C3C3D4 LDR X0, [X19 + 0x780]
	0x03C3C3D8 CBNZ X0, 0x3C3C3EC
	0x03C3C3DC ADRP X0, 0xFFFFFFFFFCEC5000
	0x03C3C3E0 ADD X0, X0, 0x13E
	0x03C3C3E4 BL 0x1C16CB8
	0x03C3C3E8 STR X0, [X19 + 0x780]
	0x03C3C3EC LDP X30, X19, [X31], #0x10
	0x03C3C3F0 BR X0
	0x03C3C3F4 STP X30, X19, [X31 - 0x10]!
	0x03C3C3F8 ADRP X19, 0x7A9000
	0x03C3C3FC LDR X0, [X19 + 0x780]
	0x03C3C400 CBNZ X0, 0x3C3C414
	0x03C3C404 ADRP X0, 0xFFFFFFFFFCEC5000
	0x03C3C408 ADD X0, X0, 0x13E

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AA000
	006 Move X2, [X21+1568]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51515392
	012 Add X0, X0, 3524
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1568], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

