Type: UnityEngine.SceneManagement.Scene

Method: System.Boolean IsValidInternal(System.Int32 sceneHandle)

Disassembly:
	0x03C47080 CBNZ X2, 0x3C47098
	0x03C47084 ADRP X0, 0xFFFFFFFFFCECD000
	0x03C47088 ADD X0, X0, 0xC30
	0x03C4708C BL 0x1C16CB8
	0x03C47090 MOV X2, X0
	0x03C47094 STR X0, [X21 + 0xCA0]
	0x03C47098 MOV W0, W20
	0x03C4709C MOV X1, X19
	0x03C470A0 LDP X20, X19, [X31 + 0x10]
	0x03C470A4 LDP X30, X21, [X31], #0x20
	0x03C470A8 BR X2
	0x03C470AC SUB X31, X31, 0x30
	0x03C470B0 STP X30, X21, [X31 + 0x10]
	0x03C470B4 STP X20, X19, [X31 + 0x20]
	0x03C470B8 ADRP X21, 0x79E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3048]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51679232
	010 Add X0, X0, 1756
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3048], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.String GetPathInternal(System.Int32 sceneHandle)

Disassembly:
	0x03C470BC STR W1, [X31 + 0x8]
	0x03C470C0 ADRP X20, 0x4AC000
	0x03C470C4 LDRB W8, [X21 + 0xC75]
	0x03C470C8 LDR X20, [X20 + 0xC90]
	0x03C470CC MOV X19, X0
	0x03C470D0 TBNZ X8, 0x0, 0x3C470E8
	0x03C470D4 ADRP X0, 0x4AC000
	0x03C470D8 LDR X0, [X0 + 0xC90]
	0x03C470DC BL 0x1C16CF4
	0x03C470E0 MOVZ W8, 0x1
	0x03C470E4 STRB W8, [X21 + 0xC75]
	0x03C470E8 LDR X0, [X20]
	0x03C470EC STR W31, [X31]
	0x03C470F0 LDR W8, [X0 + 0xE0]
	0x03C470F4 CBNZ W8, 0x3C470FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3056]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51613696
	010 Add X0, X0, 390
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3056], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.String GetNameInternal(System.Int32 sceneHandle)

Disassembly:
	0x03C470F8 BL 0x1C16DFC
	0x03C470FC ADRP X20, 0x79E000
	0x03C47100 LDR X8, [X20 + 0xCA8]
	0x03C47104 CBNZ X8, 0x3C4711C
	0x03C47108 ADRP X0, 0xFFFFFFFFFCEB4000
	0x03C4710C ADD X0, X0, 0x4CB
	0x03C47110 BL 0x1C16CB8
	0x03C47114 MOV X8, X0
	0x03C47118 STR X0, [X20 + 0xCA8]
	0x03C4711C ADD X1, X31, 0x8
	0x03C47120 ADD X2, X31, 0x0
	0x03C47124 MOV X0, X19
	0x03C47128 BLR X8
	0x03C4712C LDR W0, [X31]
	0x03C47130 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3064]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51568640
	010 Add X0, X0, 3011
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3064], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.String GetGUIDInternal(System.Int32 sceneHandle)

Disassembly:
	0x03C47134 LDP X30, X21, [X31 + 0x10]
	0x03C47138 ADD X31, X31, 0x30
	0x03C4713C RET
	0x03C47140 STR X30, [X31 - 0x30]!
	0x03C47144 STP X22, X21, [X31 + 0x10]
	0x03C47148 STP X20, X19, [X31 + 0x20]
	0x03C4714C ADRP X22, 0x79E000
	0x03C47150 LDR X3, [X22 + 0xCA8]
	0x03C47154 MOV X19, X2
	0x03C47158 MOV X20, X1
	0x03C4715C MOV X21, X0
	0x03C47160 CBNZ X3, 0x3C47178
	0x03C47164 ADRP X0, 0xFFFFFFFFFCEB4000
	0x03C47168 ADD X0, X0, 0x4CB
	0x03C4716C BL 0x1C16CB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3072]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51654656
	010 Add X0, X0, 715
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3072], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean IsSubScene(System.Int32 sceneHandle)

Disassembly:
	0x03C47170 MOV X3, X0
	0x03C47174 STR X0, [X22 + 0xCA8]
	0x03C47178 MOV X0, X21
	0x03C4717C MOV X1, X20
	0x03C47180 MOV X2, X19
	0x03C47184 LDP X20, X19, [X31 + 0x20]
	0x03C47188 LDP X22, X21, [X31 + 0x10]
	0x03C4718C LDR X30, [X31], #0x30
	0x03C47190 BR X3
	0x03C47194 SUB X31, X31, 0x30
	0x03C47198 STP X30, X21, [X31 + 0x10]
	0x03C4719C STP X20, X19, [X31 + 0x20]
	0x03C471A0 ADRP X20, 0x79E000
	0x03C471A4 STR W0, [X31 + 0x8]
	0x03C471A8 ADRP X21, 0x4AC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3080]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51662848
	010 Add X0, X0, 725
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3080], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean GetIsLoadedInternal(System.Int32 sceneHandle)

Disassembly:
	0x03C471AC LDRB W8, [X20 + 0xC76]
	0x03C471B0 LDR X21, [X21 + 0xC90]
	0x03C471B4 MOV W19, W1
	0x03C471B8 TBNZ X8, 0x0, 0x3C471D0
	0x03C471BC ADRP X0, 0x4AC000
	0x03C471C0 LDR X0, [X0 + 0xC90]
	0x03C471C4 BL 0x1C16CF4
	0x03C471C8 MOVZ W8, 0x1
	0x03C471CC STRB W8, [X20 + 0xC76]
	0x03C471D0 LDR X0, [X21]
	0x03C471D4 LDR W8, [X0 + 0xE0]
	0x03C471D8 CBNZ W8, 0x3C471E0
	0x03C471DC BL 0x1C16DFC
	0x03C471E0 ADRP X20, 0x79E000
	0x03C471E4 LDR X8, [X20 + 0xCB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3088]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51515392
	010 Add X0, X0, 72
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3088], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean GetIsDirtyInternal(System.Int32 sceneHandle)

Disassembly:
	0x03C471E8 CBNZ X8, 0x3C47200
	0x03C471EC ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C471F0 ADD X0, X0, 0x3DC
	0x03C471F4 BL 0x1C16CB8
	0x03C471F8 MOV X8, X0
	0x03C471FC STR X0, [X20 + 0xCB0]
	0x03C47200 ADD X0, X31, 0x8
	0x03C47204 MOV W1, W19
	0x03C47208 BLR X8
	0x03C4720C LDP X20, X19, [X31 + 0x20]
	0x03C47210 LDP X30, X21, [X31 + 0x10]
	0x03C47214 ADD X31, X31, 0x30
	0x03C47218 RET
	0x03C4721C STP X30, X21, [X31 - 0x20]!
	0x03C47220 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3096]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51576832
	010 Add X0, X0, 3194
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3096], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 GetBuildIndexInternal(System.Int32 sceneHandle)

Disassembly:
	0x03C47224 ADRP X21, 0x79E000
	0x03C47228 LDR X2, [X21 + 0xCB0]
	0x03C4722C MOV W19, W1
	0x03C47230 MOV X20, X0
	0x03C47234 CBNZ X2, 0x3C4724C
	0x03C47238 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C4723C ADD X0, X0, 0x3DC
	0x03C47240 BL 0x1C16CB8
	0x03C47244 MOV X2, X0
	0x03C47248 STR X0, [X21 + 0xCB0]
	0x03C4724C MOV X0, X20
	0x03C47250 MOV W1, W19
	0x03C47254 LDP X20, X19, [X31 + 0x10]
	0x03C47258 LDP X30, X21, [X31], #0x20
	0x03C4725C BR X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3104]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51523584
	010 Add X0, X0, 917
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3104], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 GetRootCountInternal(System.Int32 sceneHandle)

Disassembly:
	0x03C47260 STR X30, [X31 - 0x40]!
	0x03C47264 STP X24, X23, [X31 + 0x10]
	0x03C47268 STP X22, X21, [X31 + 0x20]
	0x03C4726C STP X20, X19, [X31 + 0x30]
	0x03C47270 ADRP X24, 0x79E000
	0x03C47274 ADRP X23, 0x4AC000
	0x03C47278 LDRB W8, [X24 + 0xC77]
	0x03C4727C LDR X23, [X23 + 0xC90]
	0x03C47280 MOV W21, W3
	0x03C47284 MOV X19, X2
	0x03C47288 MOV W20, W1
	0x03C4728C MOV X22, X0
	0x03C47290 TBNZ X8, 0x0, 0x3C472B4
	0x03C47294 ADRP X0, 0x518000
	0x03C47298 LDR X0, [X0 + 0xA00]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3112]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51560448
	010 Add X0, X0, 3830
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3112], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void GetRootGameObjectsInternal(System.Int32 sceneHandle, System.Object resultRootList)

Disassembly:
	0x03C4729C BL 0x1C16CF4
	0x03C472A0 ADRP X0, 0x4AC000
	0x03C472A4 LDR X0, [X0 + 0xC90]
	0x03C472A8 BL 0x1C16CF4
	0x03C472AC MOVZ W8, 0x1
	0x03C472B0 STRB W8, [X24 + 0xC77]
	0x03C472B4 LDR X0, [X23]
	0x03C472B8 LDR W8, [X0 + 0xE0]
	0x03C472BC CBNZ W8, 0x3C472C8
	0x03C472C0 BL 0x1C16DFC
	0x03C472C4 LDR X0, [X23]
	0x03C472C8 LDR X8, [X0 + 0xB8]
	0x03C472CC LDRB W8, [X8]
	0x03C472D0 CBZ W8, 0x3C47320
	0x03C472D4 ADRP X8, 0x518000
	0x03C472D8 LDR X8, [X8 + 0xA00]
	0x03C472DC LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x79F000
	006 Move X2, [X21+3120]
	007 Move X19, X1
	008 Move W20, W0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51576832
	012 Add X0, X0, 3262
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3120], X0
	016 Move W0, W20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_handle()

Disassembly:
	0x03C472E0 LDR W8, [X0 + 0xE0]
	0x03C472E4 CBNZ W8, 0x3C472EC

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.String get_guid()

Disassembly:
	0x03C472E8 BL 0x1C16DFC
	0x03C472EC BL 0x3C46AC8
	0x03C472F0 CBZ X0, 0x3C47338
	0x03C472F4 LDR X8, [X0]
	0x03C472F8 AND W4, W21, 0x1
	0x03C472FC MOV X1, X22
	0x03C47300 MOV W2, W20
	0x03C47304 LDP X6, X5, [X8 + 0x198]
	0x03C47308 MOV X3, X19
	0x03C4730C LDP X20, X19, [X31 + 0x30]
	0x03C47310 LDP X22, X21, [X31 + 0x20]
	0x03C47314 LDP X24, X23, [X31 + 0x10]
	0x03C47318 LDR X30, [X31], #0x40
	0x03C4731C BR X6
	0x03C47320 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3072]
	006 Move W19, [X0]
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51654656
	010 Add X0, X0, 715
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3072], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean IsValid()

Disassembly:
	0x03C47324 LDP X22, X21, [X31 + 0x20]
	0x03C47328 LDP X24, X23, [X31 + 0x10]
	0x03C4732C MOV X0, X31
	0x03C47330 LDR X30, [X31], #0x40
	0x03C47334 RET
	0x03C47338 BL 0x1C16F20
	0x03C4733C STP X30, X25, [X31 - 0x40]!
	0x03C47340 STP X24, X23, [X31 + 0x10]
	0x03C47344 STP X22, X21, [X31 + 0x20]
	0x03C47348 STP X20, X19, [X31 + 0x30]
	0x03C4734C ADRP X25, 0x79E000
	0x03C47350 ADRP X24, 0x4AC000
	0x03C47354 LDRB W8, [X25 + 0xC78]
	0x03C47358 LDR X24, [X24 + 0xC90]
	0x03C4735C MOV X19, X4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3048]
	006 Move W19, [X0]
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51679232
	010 Add X0, X0, 1756
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3048], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.String get_path()

Disassembly:
	0x03C47360 MOV W20, W3
	0x03C47364 MOV W23, W2
	0x03C47368 MOV W21, W1
	0x03C4736C MOV X22, X0
	0x03C47370 TBNZ X8, 0x0, 0x3C47394
	0x03C47374 ADRP X0, 0x518000
	0x03C47378 LDR X0, [X0 + 0xA00]
	0x03C4737C BL 0x1C16CF4
	0x03C47380 ADRP X0, 0x4AC000
	0x03C47384 LDR X0, [X0 + 0xC90]
	0x03C47388 BL 0x1C16CF4
	0x03C4738C MOVZ W8, 0x1
	0x03C47390 STRB W8, [X25 + 0xC78]
	0x03C47394 LDR X0, [X24]
	0x03C47398 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3056]
	006 Move W19, [X0]
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51613696
	010 Add X0, X0, 390
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3056], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.String get_name()

Disassembly:
	0x03C4739C CBNZ W8, 0x3C473A8
	0x03C473A0 BL 0x1C16DFC
	0x03C473A4 LDR X0, [X24]
	0x03C473A8 LDR X8, [X0 + 0xB8]
	0x03C473AC LDRB W8, [X8]
	0x03C473B0 CBZ W8, 0x3C47404
	0x03C473B4 ADRP X8, 0x518000
	0x03C473B8 LDR X8, [X8 + 0xA00]
	0x03C473BC LDR X0, [X8]
	0x03C473C0 LDR W8, [X0 + 0xE0]
	0x03C473C4 CBNZ W8, 0x3C473CC
	0x03C473C8 BL 0x1C16DFC
	0x03C473CC BL 0x3C46AC8
	0x03C473D0 CBZ X0, 0x3C47420
	0x03C473D4 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3064]
	006 Move W19, [X0]
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51568640
	010 Add X0, X0, 3011
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3064], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_isLoaded()

Disassembly:
	0x03C473D8 AND W3, W23, 0x1
	0x03C473DC MOV X1, X22
	0x03C473E0 MOV W2, W21
	0x03C473E4 LDP X7, X6, [X8 + 0x1A8]
	0x03C473E8 MOV W4, W20
	0x03C473EC MOV X5, X19
	0x03C473F0 LDP X20, X19, [X31 + 0x30]
	0x03C473F4 LDP X22, X21, [X31 + 0x20]
	0x03C473F8 LDP X24, X23, [X31 + 0x10]
	0x03C473FC LDP X30, X25, [X31], #0x40
	0x03C47400 BR X7
	0x03C47404 STRB W31, [X19]
	0x03C47408 LDP X20, X19, [X31 + 0x30]
	0x03C4740C LDP X22, X21, [X31 + 0x20]
	0x03C47410 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3088]
	006 Move W19, [X0]
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51515392
	010 Add X0, X0, 72
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3088], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_buildIndex()

Disassembly:
	0x03C47414 MOV X0, X31
	0x03C47418 LDP X30, X25, [X31], #0x40
	0x03C4741C RET
	0x03C47420 BL 0x1C16F20
	0x03C47424 SUB X31, X31, 0x30
	0x03C47428 STR X30, [X31 + 0x10]
	0x03C4742C STP X20, X19, [X31 + 0x20]
	0x03C47430 ADRP X19, 0x79E000
	0x03C47434 STR W0, [X31 + 0x18]
	0x03C47438 STR W1, [X31 + 0x8]
	0x03C4743C ADRP X20, 0x4AC000
	0x03C47440 LDRB W8, [X19 + 0xC79]
	0x03C47444 LDR X20, [X20 + 0xC90]
	0x03C47448 TBNZ X8, 0x0, 0x3C47460
	0x03C4744C ADRP X0, 0x4AC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3104]
	006 Move W19, [X0]
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51523584
	010 Add X0, X0, 917
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3104], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_isDirty()

Disassembly:
	0x03C47450 LDR X0, [X0 + 0xC90]
	0x03C47454 BL 0x1C16CF4
	0x03C47458 MOVZ W8, 0x1
	0x03C4745C STRB W8, [X19 + 0xC79]
	0x03C47460 LDR X0, [X20]
	0x03C47464 LDR W8, [X0 + 0xE0]
	0x03C47468 CBNZ W8, 0x3C47470
	0x03C4746C BL 0x1C16DFC
	0x03C47470 ADRP X19, 0x79E000
	0x03C47474 LDR X8, [X19 + 0xCB8]
	0x03C47478 CBNZ X8, 0x3C47490
	0x03C4747C ADRP X0, 0xFFFFFFFFFCEB0000
	0x03C47480 ADD X0, X0, 0x534
	0x03C47484 BL 0x1C16CB8
	0x03C47488 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3096]
	006 Move W19, [X0]
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51576832
	010 Add X0, X0, 3194
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3096], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 get_rootCount()

Disassembly:
	0x03C4748C STR X0, [X19 + 0xCB8]
	0x03C47490 ADD X0, X31, 0x18
	0x03C47494 ADD X1, X31, 0x8
	0x03C47498 BLR X8
	0x03C4749C LDP X20, X19, [X31 + 0x20]
	0x03C474A0 LDR X30, [X31 + 0x10]
	0x03C474A4 ADD X31, X31, 0x30
	0x03C474A8 RET
	0x03C474AC STP X30, X21, [X31 - 0x20]!
	0x03C474B0 STP X20, X19, [X31 + 0x10]
	0x03C474B4 ADRP X21, 0x79E000
	0x03C474B8 LDR X2, [X21 + 0xCB8]
	0x03C474BC MOV X19, X1
	0x03C474C0 MOV X20, X0
	0x03C474C4 CBNZ X2, 0x3C474DC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3112]
	006 Move W19, [X0]
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51560448
	010 Add X0, X0, 3830
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3112], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_isSubScene()

Disassembly:
	0x03C474C8 ADRP X0, 0xFFFFFFFFFCEB0000
	0x03C474CC ADD X0, X0, 0x534
	0x03C474D0 BL 0x1C16CB8
	0x03C474D4 MOV X2, X0
	0x03C474D8 STR X0, [X21 + 0xCB8]
	0x03C474DC MOV X0, X20
	0x03C474E0 MOV X1, X19
	0x03C474E4 LDP X20, X19, [X31 + 0x10]
	0x03C474E8 LDP X30, X21, [X31], #0x20
	0x03C474EC BR X2
	0x03C474F0 SUB X31, X31, 0x30
	0x03C474F4 STP X30, X21, [X31 + 0x10]
	0x03C474F8 STP X20, X19, [X31 + 0x20]
	0x03C474FC ADRP X20, 0x79E000
	0x03C47500 STR W1, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x79F000
	005 Move X1, [X20+3080]
	006 Move W19, [X0]
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51662848
	010 Add X0, X0, 725
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3080], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.GameObject[] GetRootGameObjects()

Disassembly:
	0x03C47504 ADRP X21, 0x4AC000
	0x03C47508 LDRB W8, [X20 + 0xC7A]
	0x03C4750C LDR X21, [X21 + 0xC90]
	0x03C47510 MOV X19, X0
	0x03C47514 TBNZ X8, 0x0, 0x3C4752C
	0x03C47518 ADRP X0, 0x4AC000
	0x03C4751C LDR X0, [X0 + 0xC90]
	0x03C47520 BL 0x1C16CF4
	0x03C47524 MOVZ W8, 0x1
	0x03C47528 STRB W8, [X20 + 0xC7A]
	0x03C4752C LDR X0, [X21]
	0x03C47530 LDR W8, [X0 + 0xE0]
	0x03C47534 CBNZ W8, 0x3C4753C
	0x03C47538 BL 0x1C16DFC
	0x03C4753C ADRP X20, 0x79E000
	0x03C47540 LDR X8, [X20 + 0xCC0]
	0x03C47544 CBNZ X8, 0x3C4755C
	0x03C47548 ADRP X0, 0xFFFFFFFFFCECF000
	0x03C4754C ADD X0, X0, 0xD18
	0x03C47550 BL 0x1C16CB8
	0x03C47554 MOV X8, X0
	0x03C47558 STR X0, [X20 + 0xCC0]
	0x03C4755C ADD X1, X31, 0x8
	0x03C47560 MOV X0, X19
	0x03C47564 BLR X8
	0x03C47568 LDP X20, X19, [X31 + 0x20]
	0x03C4756C LDP X30, X21, [X31 + 0x10]
	0x03C47570 ADD X31, X31, 0x30
	0x03C47574 RET
	0x03C47578 STP X30, X21, [X31 - 0x20]!
	0x03C4757C STP X20, X19, [X31 + 0x10]
	0x03C47580 ADRP X21, 0x79E000
	0x03C47584 LDR X2, [X21 + 0xCC0]
	0x03C47588 MOV X19, X1
	0x03C4758C MOV X20, X0
	0x03C47590 CBNZ X2, 0x3C475A8
	0x03C47594 ADRP X0, 0xFFFFFFFFFCECF000
	0x03C47598 ADD X0, X0, 0xD18
	0x03C4759C BL 0x1C16CB8
	0x03C475A0 MOV X2, X0
	0x03C475A4 STR X0, [X21 + 0xCC0]
	0x03C475A8 MOV X0, X20
	0x03C475AC MOV X1, X19
	0x03C475B0 LDP X20, X19, [X31 + 0x10]
	0x03C475B4 LDP X30, X21, [X31], #0x20
	0x03C475B8 BR X2
	0x03C475BC STP X30, X21, [X31 - 0x20]!
	0x03C475C0 STP X20, X19, [X31 + 0x10]
	0x03C475C4 ADRP X20, 0x79E000
	0x03C475C8 ADRP X21, 0x518000
	0x03C475CC LDRB W8, [X20 + 0xC7B]
	0x03C475D0 LDR X21, [X21 + 0xA00]
	0x03C475D4 MOV W19, W0
	0x03C475D8 TBNZ X8, 0x0, 0x3C475F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x79F000
	008 Move W8, [X20+3128]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x519000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0x519000
	018 Move X0, [X0+2512]
	019 Call 0x1C17CF4
	020 Move X0, 0x4B3000
	021 Move X0, [X0+1352]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3128], W8
	025 Move X23, 0x79F000
	026 Move X21, 0x4B3000
	027 Move X22, 0x519000
	028 Move X8, [X23+3112]
	029 Move W20, [X19]
	030 Move X21, [X21+1352]
	031 Move X22, [X22+2512]
	032 Compare X8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, -51560448
	035 Add X0, X0, 3830
	036 Call 0x1C17CB8
	037 Move X8, X0
	038 Move [X23+3112], X0
	039 Move W0, W20
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, [X21]
	042 Move W21, W0
	043 Move X0, X8
	044 Call 0x1C17F10
	045 Move X2, [X22]
	046 Move W1, W21
	047 Move X20, X0
	048 Call List`1<Object>..ctor, X0, X1
	049 Move X0, X19
	050 Move X1, X20
	051 Call Scene.GetRootGameObjects, X0, X1
	052 Compare X20, 0
	053 JumpIfEqual {66}
	054 Move X8, 0x519000
	055 Move X8, [X8+2504]
	056 Move X0, X20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X1, [X8]
	062 Move X30, [X31+48]
	063 Move X23, [X31+56]
	064 Call List`1<Object>.ToArray, X0
	065 Return X0
	066 Call 0x1C17F20

Method: System.Void GetRootGameObjects(System.Collections.Generic.List`1<UnityEngine.GameObject> rootGameObjects)

Disassembly:
	0x03C475DC ADRP X0, 0x518000
	0x03C475E0 LDR X0, [X0 + 0xA00]
	0x03C475E4 BL 0x1C16CF4
	0x03C475E8 MOVZ W8, 0x1
	0x03C475EC STRB W8, [X20 + 0xC7B]
	0x03C475F0 LDR X0, [X21]
	0x03C475F4 LDR W8, [X0 + 0xE0]
	0x03C475F8 CBNZ W8, 0x3C47600
	0x03C475FC BL 0x1C16DFC
	0x03C47600 BL 0x3C46AC8
	0x03C47604 CBZ X0, 0x3C47620
	0x03C47608 LDR X8, [X0]
	0x03C4760C AND W1, W19, 0x1
	0x03C47610 LDP X20, X19, [X31 + 0x10]
	0x03C47614 LDP X3, X2, [X8 + 0x1B8]
	0x03C47618 LDP X30, X21, [X31], #0x20
	0x03C4761C BR X3
	0x03C47620 BL 0x1C16F20
	0x03C47624 STP X30, X25, [X31 - 0x40]!
	0x03C47628 STP X24, X23, [X31 + 0x10]
	0x03C4762C STP X22, X21, [X31 + 0x20]
	0x03C47630 STP X20, X19, [X31 + 0x30]
	0x03C47634 ADRP X20, 0x79E000
	0x03C47638 ADRP X24, 0x4AC000
	0x03C4763C LDRB W8, [X20 + 0xC7C]
	0x03C47640 LDR X24, [X24 + 0xC90]
	0x03C47644 MOV X19, X0
	0x03C47648 TBNZ X8, 0x0, 0x3C4766C
	0x03C4764C ADRP X0, 0x4AC000
	0x03C47650 LDR X0, [X0 + 0xC90]
	0x03C47654 BL 0x1C16CF4
	0x03C47658 ADRP X0, 0x4D8000
	0x03C4765C LDR X0, [X0 + 0x390]
	0x03C47660 BL 0x1C16CF4
	0x03C47664 MOVZ W8, 0x1
	0x03C47668 STRB W8, [X20 + 0xC7C]
	0x03C4766C LDR X0, [X24]
	0x03C47670 LDR W8, [X0 + 0xE0]
	0x03C47674 CBNZ W8, 0x3C47680
	0x03C47678 BL 0x1C16DFC
	0x03C4767C LDR X0, [X24]
	0x03C47680 LDR X8, [X0 + 0xB8]
	0x03C47684 ADRP X25, 0x4D8000
	0x03C47688 LDR X20, [X8 + 0x8]
	0x03C4768C LDR X25, [X25 + 0x390]
	0x03C47690 MOV X0, X20
	0x03C47694 MOV X1, X19
	0x03C47698 MOV X2, X31
	0x03C4769C BL 0x33C0DE4
	0x03C476A0 CBZ X0, 0x3C476C0
	0x03C476A4 LDR X23, [X25]
	0x03C476A8 MOV X22, X0
	0x03C476AC MOV X1, X23
	0x03C476B0 BL 0x1C16E00
	0x03C476B4 MOV X21, X0
	0x03C476B8 CBNZ X0, 0x3C476C4
	0x03C476BC B 0x3C4770C
	0x03C476C0 MOV X21, X31
	0x03C476C4 LDR X0, [X24]
	0x03C476C8 LDR W8, [X0 + 0xE0]
	0x03C476CC CBNZ W8, 0x3C476D8
	0x03C476D0 BL 0x1C16DFC
	0x03C476D4 LDR X0, [X24]
	0x03C476D8 LDR X8, [X0 + 0xB8]
	0x03C476DC MOV X1, X21
	0x03C476E0 MOV X2, X20
	0x03C476E4 ADD X0, X8, 0x8
	0x03C476E8 BL 0x1C24138
	0x03C476EC CMP X20, X0
	0x03C476F0 MOV X20, X0
	0x03C476F4 B.NE 0x3C47690
	0x03C476F8 LDP X20, X19, [X31 + 0x30]
	0x03C476FC LDP X22, X21, [X31 + 0x20]
	0x03C47700 LDP X24, X23, [X31 + 0x10]
	0x03C47704 LDP X30, X25, [X31], #0x40
	0x03C47708 RET
	0x03C4770C MOV X0, X22
	0x03C47710 MOV X1, X23
	0x03C47714 BL 0x1C171E0
	0x03C47718 STP X30, X25, [X31 - 0x40]!
	0x03C4771C STP X24, X23, [X31 + 0x10]
	0x03C47720 STP X22, X21, [X31 + 0x20]
	0x03C47724 STP X20, X19, [X31 + 0x30]
	0x03C47728 ADRP X20, 0x79E000
	0x03C4772C ADRP X24, 0x4AC000
	0x03C47730 LDRB W8, [X20 + 0xC7D]
	0x03C47734 LDR X24, [X24 + 0xC90]
	0x03C47738 MOV X19, X0
	0x03C4773C TBNZ X8, 0x0, 0x3C47760
	0x03C47740 ADRP X0, 0x4AC000
	0x03C47744 LDR X0, [X0 + 0xC90]
	0x03C47748 BL 0x1C16CF4
	0x03C4774C ADRP X0, 0x4D8000
	0x03C47750 LDR X0, [X0 + 0x390]
	0x03C47754 BL 0x1C16CF4
	0x03C47758 MOVZ W8, 0x1
	0x03C4775C STRB W8, [X20 + 0xC7D]
	0x03C47760 LDR X0, [X24]
	0x03C47764 LDR W8, [X0 + 0xE0]
	0x03C47768 CBNZ W8, 0x3C47774
	0x03C4776C BL 0x1C16DFC
	0x03C47770 LDR X0, [X24]
	0x03C47774 LDR X8, [X0 + 0xB8]
	0x03C47778 ADRP X25, 0x4D8000
	0x03C4777C LDR X20, [X8 + 0x8]
	0x03C47780 LDR X25, [X25 + 0x390]
	0x03C47784 MOV X0, X20
	0x03C47788 MOV X1, X19
	0x03C4778C MOV X2, X31
	0x03C47790 BL 0x33C0FDC
	0x03C47794 CBZ X0, 0x3C477B4
	0x03C47798 LDR X23, [X25]
	0x03C4779C MOV X22, X0
	0x03C477A0 MOV X1, X23
	0x03C477A4 BL 0x1C16E00
	0x03C477A8 MOV X21, X0
	0x03C477AC CBNZ X0, 0x3C477B8
	0x03C477B0 B 0x3C47800
	0x03C477B4 MOV X21, X31
	0x03C477B8 LDR X0, [X24]
	0x03C477BC LDR W8, [X0 + 0xE0]
	0x03C477C0 CBNZ W8, 0x3C477CC
	0x03C477C4 BL 0x1C16DFC
	0x03C477C8 LDR X0, [X24]
	0x03C477CC LDR X8, [X0 + 0xB8]
	0x03C477D0 MOV X1, X21
	0x03C477D4 MOV X2, X20
	0x03C477D8 ADD X0, X8, 0x8
	0x03C477DC BL 0x1C24138
	0x03C477E0 CMP X20, X0
	0x03C477E4 MOV X20, X0
	0x03C477E8 B.NE 0x3C47784
	0x03C477EC LDP X20, X19, [X31 + 0x30]
	0x03C477F0 LDP X22, X21, [X31 + 0x20]
	0x03C477F4 LDP X24, X23, [X31 + 0x10]
	0x03C477F8 LDP X30, X25, [X31], #0x40
	0x03C477FC RET
	0x03C47800 MOV X0, X22
	0x03C47804 MOV X1, X23
	0x03C47808 BL 0x1C171E0
	0x03C4780C STP X30, X25, [X31 - 0x40]!
	0x03C47810 STP X24, X23, [X31 + 0x10]
	0x03C47814 STP X22, X21, [X31 + 0x20]
	0x03C47818 STP X20, X19, [X31 + 0x30]
	0x03C4781C ADRP X20, 0x79E000
	0x03C47820 ADRP X24, 0x4AC000
	0x03C47824 LDRB W8, [X20 + 0xC7E]
	0x03C47828 LDR X24, [X24 + 0xC90]
	0x03C4782C MOV X19, X0
	0x03C47830 TBNZ X8, 0x0, 0x3C47854
	0x03C47834 ADRP X0, 0x4AC000
	0x03C47838 LDR X0, [X0 + 0xC90]
	0x03C4783C BL 0x1C16CF4
	0x03C47840 ADRP X0, 0x4D3000
	0x03C47844 LDR X0, [X0 + 0x988]
	0x03C47848 BL 0x1C16CF4
	0x03C4784C MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x79F000
	008 Move W8, [X21+3129]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x4AD000
	016 Move X0, [X0+2416]
	017 Call 0x1C17CF4
	018 Move X0, 0x503000
	019 Move X0, [X0+1032]
	020 Call 0x1C17CF4
	021 Move X0, 0x519000
	022 Move X0, [X0+2520]
	023 Call 0x1C17CF4
	024 Move X0, 0x519000
	025 Move X0, [X0+2528]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3129], W8
	029 Compare X19, 0
	030 JumpIfEqual {161}
	031 Move X8, 0x519000
	032 Move X8, [X8+2520]
	033 Move X0, X19
	034 Move X1, [X8]
	035 Call List`1<Object>.get_Capacity, X0
	036 Move X23, 0x79F000
	037 Move X8, [X23+3112]
	038 Move W22, [X20]
	039 Move W21, W0
	040 Compare X8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, -51560448
	043 Add X0, X0, 3830
	044 Call 0x1C17CB8
	045 Move X8, X0
	046 Move [X23+3112], X0
	047 Move W0, W22
	048 NotImplemented "Instruction BLR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X23+3112]
	051 Move W21, [X20]
	052 Compare X8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, -51560448
	055 Add X0, X0, 3830
	056 Call 0x1C17CB8
	057 Move X8, X0
	058 Move [X23+3112], X0
	059 Move W0, W21
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X8, 0x519000
	062 Move X8, [X8+2528]
	063 Move W1, W0
	064 Move X0, X19
	065 Move X2, [X8]
	066 Call List`1<Object>.set_Capacity, X0, X1
	067 Move W2, [X19+24]
	068 Move W8, [X19+28]
	069 Add W8, W8, 1
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X19+24], W31
	072 Move [X19+28], W8
	073 Move X0, [X19+16]
	074 Move W1, W31
	075 Move X3, X31
	076 Call Array.Clear, X0, X1, X2
	077 Move X22, 0x79F000
	078 Move X8, [X22+3048]
	079 Move W21, [X20]
	080 Compare X8, 0
	081 JumpIfNotEqual {87}
	082 Move X0, -51679232
	083 Add X0, X0, 1756
	084 Call 0x1C17CB8
	085 Move X8, X0
	086 Move [X22+3048], X0
	087 Move W0, W21
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {162}
	093 Move X8, 0x4AD000
	094 Move X8, [X8+2416]
	095 Move X0, [X8]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X31
	101 Call Application.get_isPlaying
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {122}
	106 Move X22, 0x79F000
	107 Move X8, [X22+3088]
	108 Move W21, [X20]
	109 Compare X8, 0
	110 JumpIfNotEqual {116}
	111 Move X0, -51515392
	112 Add X0, X0, 72
	113 Call 0x1C17CB8
	114 Move X8, X0
	115 Move [X22+3088], X0
	116 Move W0, W21
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {169}
	122 Move X8, [X23+3112]
	123 Move W21, [X20]
	124 Compare X8, 0
	125 JumpIfNotEqual {131}
	126 Move X0, -51560448
	127 Add X0, X0, 3830
	128 Call 0x1C17CB8
	129 Move X8, X0
	130 Move [X23+3112], X0
	131 Move W0, W21
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Compare W0, 0
	134 JumpIfEqual {154}
	135 Move X21, 0x79F000
	136 Move X2, [X21+3120]
	137 Move W20, [X20]
	138 Compare X2, 0
	139 JumpIfNotEqual {145}
	140 Move X0, -51576832
	141 Add X0, X0, 3262
	142 Call 0x1C17CB8
	143 Move X2, X0
	144 Move [X21+3120], X0
	145 Move W0, W20
	146 Move X1, X19
	147 Move X20, [X31+32]
	148 Move X19, [X31+40]
	149 Move X22, [X31+16]
	150 Move X21, [X31+24]
	151 Move X30, [X31+48]
	152 Move X23, [X31+56]
	153 CallNoReturn X2
	154 Move X20, [X31+32]
	155 Move X19, [X31+40]
	156 Move X22, [X31+16]
	157 Move X21, [X31+24]
	158 Move X30, [X31+48]
	159 Move X23, [X31+56]
	160 Return 
	161 Call 0x1C17F20
	162 Move X0, 0x4B5000
	163 Move X0, [X0+1400]
	164 Call 0x1C17D08
	165 Call 0x1C17F10
	166 Move X19, X0
	167 Move X0, 0x519000
	168 Move X0, [X0+2536]
	169 Move X0, 0x4B5000
	170 Move X0, [X0+1400]
	171 Call 0x1C17D08
	172 Call 0x1C17F10
	173 Move X19, X0
	174 Move X0, 0x519000
	175 Move X0, [X0+2544]
	176 Call 0x1C17D08
	177 Move X1, X0
	178 Move X0, X19
	179 Move X2, X31
	180 Call ArgumentException..ctor, X0, X1
	181 Move X0, 0x519000
	182 Move X0, [X0+2552]
	183 Call 0x1C17D08
	184 Move X1, X0
	185 Move X0, X19
	186 Call 0x1C17DEC

Method: System.Boolean op_Equality(UnityEngine.SceneManagement.Scene lhs, UnityEngine.SceneManagement.Scene rhs)

Disassembly:
	0x03C47850 STRB W8, [X20 + 0xC7E]
	0x03C47854 LDR X0, [X24]
	0x03C47858 LDR W8, [X0 + 0xE0]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean op_Inequality(UnityEngine.SceneManagement.Scene lhs, UnityEngine.SceneManagement.Scene rhs)

Disassembly:
	0x03C4785C CBNZ W8, 0x3C47868
	0x03C47860 BL 0x1C16DFC
	0x03C47864 LDR X0, [X24]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03C47868 LDR X8, [X0 + 0xB8]
	0x03C4786C ADRP X25, 0x4D3000

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Boolean Equals(System.Object other)

Disassembly:
	0x03C47870 LDR X20, [X8 + 0x10]
	0x03C47874 LDR X25, [X25 + 0x988]
	0x03C47878 MOV X0, X20
	0x03C4787C MOV X1, X19
	0x03C47880 MOV X2, X31
	0x03C47884 BL 0x33C0DE4
	0x03C47888 CBZ X0, 0x3C478A8
	0x03C4788C LDR X23, [X25]
	0x03C47890 MOV X22, X0
	0x03C47894 MOV X1, X23
	0x03C47898 BL 0x1C16E00
	0x03C4789C MOV X21, X0
	0x03C478A0 CBNZ X0, 0x3C478AC
	0x03C478A4 B 0x3C478F4
	0x03C478A8 MOV X21, X31
	0x03C478AC LDR X0, [X24]
	0x03C478B0 LDR W8, [X0 + 0xE0]
	0x03C478B4 CBNZ W8, 0x3C478C0
	0x03C478B8 BL 0x1C16DFC
	0x03C478BC LDR X0, [X24]
	0x03C478C0 LDR X8, [X0 + 0xB8]
	0x03C478C4 MOV X1, X21
	0x03C478C8 MOV X2, X20
	0x03C478CC ADD X0, X8, 0x10
	0x03C478D0 BL 0x1C24138
	0x03C478D4 CMP X20, X0
	0x03C478D8 MOV X20, X0
	0x03C478DC B.NE 0x3C47878
	0x03C478E0 LDP X20, X19, [X31 + 0x30]
	0x03C478E4 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x79F000
	006 Move W8, [X21+3130]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x4D8000
	014 Move X0, [X0+1864]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3130], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x4D8000
	021 Move X8, [X8+1864]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W0, W31
	026 Move X0, X20
	027 Call 0x1C17E08
	028 Move W8, [X0]
	029 Move W9, [X19]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

