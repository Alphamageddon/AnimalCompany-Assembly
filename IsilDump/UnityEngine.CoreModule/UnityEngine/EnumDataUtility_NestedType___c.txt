Type: UnityEngine.EnumDataUtility/<>c

Method: System.Void .cctor()

Disassembly:
	0x03C360FC STR X0, [X20 + 0x490]
	0x03C36100 MOV X0, X19
	0x03C36104 BLR X8
	0x03C36108 LDR X0, [X19 + 0x18]
	0x03C3610C CBZ X0, 0x3C36120
	0x03C36110 LDP X20, X19, [X31 + 0x10]
	0x03C36114 MOV X1, X31
	0x03C36118 LDR X30, [X31], #0x20
	0x03C3611C B 0x33DFA08
	0x03C36120 BL 0x1C16F20
	0x03C36124 STR X30, [X31 - 0x20]!
	0x03C36128 STP X20, X19, [X31 + 0x10]
	0x03C3612C ADRP X20, 0x7AF000
	0x03C36130 LDR X1, [X20 + 0x490]
	0x03C36134 MOV X19, X0
	0x03C36138 CBNZ X1, 0x3C36150
	0x03C3613C ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C36140 ADD X0, X0, 0xE2E
	0x03C36144 BL 0x1C16CB8
	0x03C36148 MOV X1, X0
	0x03C3614C STR X0, [X20 + 0x490]
	0x03C36150 MOV X0, X19
	0x03C36154 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7B0000
	005 Move X20, 0x52A000
	006 Move W8, [X19+800]
	007 Move X20, [X20+1192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x52A000
	013 Move X0, [X0+1192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+800], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C36158 LDR X30, [X31], #0x20
	0x03C3615C BR X1

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <GetCachedEnumData>b__2_5(System.Reflection.FieldInfo f)

Disassembly:
	0x03C36160 LDR X0, [X0 + 0x18]
	0x03C36164 CBZ X0, 0x3C36170
	0x03C36168 MOV X1, X31
	0x03C3616C B 0x33DFCF8
	0x03C36170 RET
	0x03C36174 STR X30, [X31 - 0x20]!
	0x03C36178 STP X20, X19, [X31 + 0x10]
	0x03C3617C ADRP X20, 0x7AF000
	0x03C36180 LDR X1, [X20 + 0x440]
	0x03C36184 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X8, [X1]
	005 Move X0, X1
	006 Move X2, [X8+568]
	007 Move X8, [X8+576]
	008 Move X1, X8
	009 Move X30, [X31+16]
	010 CallNoReturn X2
	011 Call 0x1C17F20

Method: System.String <GetCachedEnumData>b__2_1(System.Reflection.FieldInfo f)

Disassembly:
	0x03C36188 CBNZ X1, 0x3C361A0
	0x03C3618C ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C36190 ADD X0, X0, 0x35
	0x03C36194 BL 0x1C16CB8
	0x03C36198 MOV X1, X0
	0x03C3619C STR X0, [X20 + 0x440]
	0x03C361A0 MOV X0, X19
	0x03C361A4 LDP X20, X19, [X31 + 0x10]
	0x03C361A8 LDR X30, [X31], #0x20
	0x03C361AC BR X1
	0x03C361B0 STR X30, [X31 - 0x20]!
	0x03C361B4 STP X20, X19, [X31 + 0x10]
	0x03C361B8 ADRP X20, 0x7AF000
	0x03C361BC LDR X1, [X20 + 0x440]
	0x03C361C0 MOV X19, X0
	0x03C361C4 CBNZ X1, 0x3C361DC
	0x03C361C8 ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C361CC ADD X0, X0, 0x35
	0x03C361D0 BL 0x1C16CB8
	0x03C361D4 MOV X1, X0
	0x03C361D8 STR X0, [X20 + 0x440]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7B0000
	006 Move X21, 0x52A000
	007 Move W8, [X20+801]
	008 Move X21, [X21+1048]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x52A000
	015 Move X0, [X0+1048]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+801], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call EnumDataUtility.EnumTooltipFromEnumField, X0
	030 Return X0

Method: System.Enum <GetCachedEnumData>b__2_2(System.Reflection.FieldInfo f)

Disassembly:
	0x03C361DC MOV X0, X19
	0x03C361E0 LDP X20, X19, [X31 + 0x10]
	0x03C361E4 LDR X30, [X31], #0x20
	0x03C361E8 BR X1
	0x03C361EC STR X30, [X31 - 0x20]!
	0x03C361F0 STP X20, X19, [X31 + 0x10]
	0x03C361F4 ADRP X20, 0x7AF000
	0x03C361F8 LDR X1, [X20 + 0x438]
	0x03C361FC MOV X19, X0
	0x03C36200 CBNZ X1, 0x3C36218
	0x03C36204 ADRP X0, 0xFFFFFFFFFCEC5000
	0x03C36208 ADD X0, X0, 0x33E
	0x03C3620C BL 0x1C16CB8
	0x03C36210 MOV X1, X0
	0x03C36214 STR X0, [X20 + 0x438]
	0x03C36218 MOV X0, X19
	0x03C3621C LDP X20, X19, [X31 + 0x10]
	0x03C36220 LDR X30, [X31], #0x20
	0x03C36224 BR X1
	0x03C36228 STR X30, [X31 - 0x20]!
	0x03C3622C STP X20, X19, [X31 + 0x10]
	0x03C36230 ADRP X20, 0x7AF000
	0x03C36234 LDR X1, [X20 + 0x438]
	0x03C36238 MOV X19, X0
	0x03C3623C CBNZ X1, 0x3C36254
	0x03C36240 ADRP X0, 0xFFFFFFFFFCEC5000
	0x03C36244 ADD X0, X0, 0x33E
	0x03C36248 BL 0x1C16CB8
	0x03C3624C MOV X1, X0
	0x03C36250 STR X0, [X20 + 0x438]
	0x03C36254 MOV X0, X19
	0x03C36258 LDP X20, X19, [X31 + 0x10]
	0x03C3625C LDR X30, [X31], #0x20
	0x03C36260 BR X1
	0x03C36264 STR D8, [X31 - 0x30]!
	0x03C36268 STP X30, X21, [X31 + 0x10]
	0x03C3626C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B0000
	005 Move W8, [X20+802]
	006 Move X19, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x4BE000
	012 Move X0, [X0+3576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+802], W8
	016 Compare X19, 0
	017 JumpIfEqual {42}
	018 Move X8, [X19]
	019 Move X0, X19
	020 Move X1, X31
	021 Move X9, [X8+712]
	022 Move X2, [X8+720]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Compare X0, 0
	025 JumpIfEqual {37}
	026 Move X9, 0x4BE000
	027 Move X9, [X9+3576]
	028 Move X8, [X0]
	029 Move X1, [X9]
	030 Move W10, [X8+304]
	031 Move W9, [X1+304]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X8+200]
	034 Add X8, X8, X9
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return X0
	041 Call 0x1C181E0
	042 Call 0x1C17F20

Method: System.Int32 <GetCachedEnumData>b__2_3(System.Enum v)

Disassembly:
	0x03C36270 ADRP X21, 0x7AF000
	0x03C36274 LDR X2, [X21 + 0x448]
	0x03C36278 MOV V8.16B, V0.16B
	0x03C3627C MOV X19, X1
	0x03C36280 MOV X20, X0
	0x03C36284 CBNZ X2, 0x3C3629C
	0x03C36288 ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C3628C ADD X0, X0, 0x178
	0x03C36290 BL 0x1C16CB8
	0x03C36294 MOV X2, X0
	0x03C36298 STR X0, [X21 + 0x448]
	0x03C3629C MOV X0, X20
	0x03C362A0 MOV X1, X19
	0x03C362A4 LDP X20, X19, [X31 + 0x20]
	0x03C362A8 LDP X30, X21, [X31 + 0x10]
	0x03C362AC FMOV S1, W31
	0x03C362B0 MOV V0.16B, V8.16B
	0x03C362B4 LDR V8, [X31], #0x30
	0x03C362B8 BR X2
	0x03C362BC STP D9, D8, [X31 - 0x30]!
	0x03C362C0 STP X30, X21, [X31 + 0x10]
	0x03C362C4 STP X20, X19, [X31 + 0x20]
	0x03C362C8 ADRP X21, 0x7AF000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7B0000
	006 Move X21, 0x4C7000
	007 Move W8, [X20+803]
	008 Move X21, [X21+2536]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4C7000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+803], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Convert.ToUInt64, X0
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Int32 <GetCachedEnumData>b__2_4(System.Enum v)

Disassembly:
	0x03C362CC LDR X2, [X21 + 0x448]
	0x03C362D0 MOV V8.16B, V1.16B
	0x03C362D4 MOV V9.16B, V0.16B
	0x03C362D8 MOV X19, X1
	0x03C362DC MOV X20, X0
	0x03C362E0 CBNZ X2, 0x3C362F8
	0x03C362E4 ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C362E8 ADD X0, X0, 0x178
	0x03C362EC BL 0x1C16CB8
	0x03C362F0 MOV X2, X0
	0x03C362F4 STR X0, [X21 + 0x448]
	0x03C362F8 MOV X0, X20
	0x03C362FC MOV X1, X19
	0x03C36300 LDP X20, X19, [X31 + 0x20]
	0x03C36304 LDP X30, X21, [X31 + 0x10]
	0x03C36308 MOV V0.16B, V9.16B
	0x03C3630C MOV V1.16B, V8.16B
	0x03C36310 LDP D9, D8, [X31], #0x30
	0x03C36314 BR X2
	0x03C36318 STP D9, D8, [X31 - 0x30]!
	0x03C3631C STP X30, X21, [X31 + 0x10]
	0x03C36320 STP X20, X19, [X31 + 0x20]
	0x03C36324 ADRP X8, 0xFFFFFFFFFCEB4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7B0000
	006 Move X21, 0x4C7000
	007 Move W8, [X20+804]
	008 Move X21, [X21+2536]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4C7000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+804], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X1, X31
	026 Call Convert.ToInt64, X0
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

