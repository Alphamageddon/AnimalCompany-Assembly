Type: UnityEngine.Graphics

Method: System.Int32 Internal_GetMaxDrawMeshInstanceCount()

Disassembly:
	0x03C0F224 TBNZ X8, 0x0, 0x3C0F248
	0x03C0F228 ADRP X0, 0x4E8000
	0x03C0F22C LDR X0, [X0 + 0x2C8]
	0x03C0F230 BL 0x1C16CF4
	0x03C0F234 ADRP X0, 0x4E4000
	0x03C0F238 LDR X0, [X0 + 0x598]
	0x03C0F23C BL 0x1C16CF4
	0x03C0F240 MOVZ W8, 0x1
	0x03C0F244 STRB W8, [X21 + 0x3DF]
	0x03C0F248 MOV X0, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D6000
	004 Move X0, [X19+848]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51372032
	008 Add X0, X0, 3845
	009 Call 0x1C17CB8
	010 Move [X19+848], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Rendering.GraphicsTier get_activeTier()

Disassembly:
	0x03C0F24C BL 0x3C3BD9C
	0x03C0F250 TBZ X0, 0x0, 0x3C0F52C
	0x03C0F254 ADRP X21, 0x4E4000
	0x03C0F258 LDR X21, [X21 + 0x598]
	0x03C0F25C LDR X0, [X21]
	0x03C0F260 LDR W8, [X0 + 0xE0]
	0x03C0F264 CBNZ W8, 0x3C0F26C
	0x03C0F268 BL 0x1C16DFC
	0x03C0F26C MOV X0, X27
	0x03C0F270 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D6000
	004 Move X0, [X19+856]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51290112
	008 Add X0, X0, 2730
	009 Call 0x1C17CB8
	010 Move [X19+856], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean GetPreserveFramebufferAlpha()

Disassembly:
	0x03C0F274 MOV X2, X31
	0x03C0F278 BL 0x3C3883C
	0x03C0F27C TBNZ X0, 0x0, 0x3C0F54C
	0x03C0F280 TBNZ X25, 0x1F, 0x3C0F424
	0x03C0F284 CBZ X27, 0x3C0F46C
	0x03C0F288 ADRP X23, 0x7D5000
	0x03C0F28C LDR X8, [X23 + 0xB50]
	0x03C0F290 CBNZ X8, 0x3C0F2A8
	0x03C0F294 ADRP X0, 0xFFFFFFFFFCEFC000
	0x03C0F298 ADD X0, X0, 0x175

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D6000
	004 Move X0, [X19+864]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51314688
	008 Add X0, X0, 2252
	009 Call 0x1C17CB8
	010 Move [X19+864], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Boolean get_preserveFramebufferAlpha()

Disassembly:
	0x03C0F29C BL 0x1C16CB8
	0x03C0F2A0 MOV X8, X0
	0x03C0F2A4 STR X0, [X23 + 0xB50]
	0x03C0F2A8 MOV X0, X27
	0x03C0F2AC BLR X8
	0x03C0F2B0 CMP W0, W25
	0x03C0F2B4 B.LE 0x3C0F424
	0x03C0F2B8 LDR X0, [X21]
	0x03C0F2BC LDR W8, [X0 + 0xE0]
	0x03C0F2C0 CBNZ W8, 0x3C0F2C8
	0x03C0F2C4 BL 0x1C16DFC
	0x03C0F2C8 MOV X0, X24
	0x03C0F2CC MOV X1, X31
	0x03C0F2D0 MOV X2, X31
	0x03C0F2D4 BL 0x3C3883C
	0x03C0F2D8 TBNZ X0, 0x0, 0x3C0F56C
	0x03C0F2DC CBZ X24, 0x3C0F46C
	0x03C0F2E0 ADRP X23, 0x7D5000
	0x03C0F2E4 LDR X8, [X23 + 0x8D8]
	0x03C0F2E8 CBNZ X8, 0x3C0F300
	0x03C0F2EC ADRP X0, 0xFFFFFFFFFCF17000
	0x03C0F2F0 ADD X0, X0, 0xC34
	0x03C0F2F4 BL 0x1C16CB8
	0x03C0F2F8 MOV X8, X0
	0x03C0F2FC STR X0, [X23 + 0x8D8]
	0x03C0F300 MOV X0, X24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7D6000
	005 Move X20, 0x4E9000
	006 Move W8, [X19+872]
	007 Move X20, [X20+712]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4E9000
	013 Move X0, [X0+712]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+872], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X19, 0x7D6000
	023 Move X0, [X19+864]
	024 Compare X0, 0
	025 JumpIfNotEqual {30}
	026 Move X0, -51314688
	027 Add X0, X0, 2252
	028 Call 0x1C17CB8
	029 Move [X19+864], X0
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 CallNoReturn X0

Method: UnityEngine.Rendering.OpenGLESVersion GetMinOpenGLESVersion()

Disassembly:
	0x03C0F304 BLR X8
	0x03C0F308 TBZ X0, 0x0, 0x3C0F58C
	0x03C0F30C CBZ X19, 0x3C0F5C0
	0x03C0F310 TBNZ X22, 0x1F, 0x3C0F470
	0x03C0F314 ADRP X23, 0x4E8000
	0x03C0F318 LDR X23, [X23 + 0x2C8]
	0x03C0F31C LDR X0, [X23]
	0x03C0F320 LDR W8, [X0 + 0xE0]
	0x03C0F324 CBNZ W8, 0x3C0F330
	0x03C0F328 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D6000
	004 Move X0, [X19+880]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51482624
	008 Add X0, X0, 233
	009 Call 0x1C17CB8
	010 Move [X19+880], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: UnityEngine.Rendering.OpenGLESVersion get_minOpenGLESVersion()

Disassembly:
	0x03C0F32C LDR X0, [X23]
	0x03C0F330 LDR X8, [X0 + 0xB8]
	0x03C0F334 LDR W9, [X19 + 0x18]
	0x03C0F338 LDR W8, [X8]
	0x03C0F33C CMP W8, W9
	0x03C0F340 CSEL W8, W8, W9, LT
	0x03C0F344 CMP W8, W22
	0x03C0F348 B.LT 0x3C0F470
	0x03C0F34C CMP W28, 0x2
	0x03C0F350 B.NE 0x3C0F378
	0x03C0F354 LDR X0, [X21]
	0x03C0F358 LDR W8, [X0 + 0xE0]
	0x03C0F35C CBNZ W8, 0x3C0F364
	0x03C0F360 BL 0x1C16DFC
	0x03C0F364 MOV X0, X26
	0x03C0F368 MOV X1, X31
	0x03C0F36C MOV X2, X31
	0x03C0F370 BL 0x3C3883C
	0x03C0F374 TBNZ X0, 0x0, 0x3C0F608
	0x03C0F378 CMP W22, 0x1
	0x03C0F37C B.LT 0x3C0F404
	0x03C0F380 LDR X0, [X23]
	0x03C0F384 LDR W8, [X0 + 0xE0]
	0x03C0F388 CBNZ W8, 0x3C0F390
	0x03C0F38C BL 0x1C16DFC
	0x03C0F390 ADRP X21, 0x7D5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7D6000
	005 Move X20, 0x4E9000
	006 Move W8, [X19+888]
	007 Move X20, [X20+712]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4E9000
	013 Move X0, [X0+712]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+888], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X19, 0x7D6000
	023 Move X0, [X19+880]
	024 Compare X0, 0
	025 JumpIfNotEqual {30}
	026 Move X0, -51482624
	027 Add X0, X0, 233
	028 Call 0x1C17CB8
	029 Move [X19+880], X0
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 CallNoReturn X0

Method: System.Void Internal_SetNullRT()

Disassembly:
	0x03C0F394 LDR X8, [X21 + 0x3B8]
	0x03C0F398 CBNZ X8, 0x3C0F3B0
	0x03C0F39C ADRP X0, 0xFFFFFFFFFCEFF000
	0x03C0F3A0 ADD X0, X0, 0xF2A
	0x03C0F3A4 BL 0x1C16CB8
	0x03C0F3A8 MOV X8, X0
	0x03C0F3AC STR X0, [X21 + 0x3B8]
	0x03C0F3B0 LDR W9, [X31 + 0xC]
	0x03C0F3B4 STR X26, [X31 + 0x98]
	0x03C0F3B8 STR W28, [X31 + 0x90]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7D6000
	004 Move X0, [X19+896]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51273728
	008 Add X0, X0, 1056
	009 Call 0x1C17CB8
	010 Move [X19+896], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void Internal_SetRTSimple(UnityEngine.RenderBuffer color, UnityEngine.RenderBuffer depth, System.Int32 mip, UnityEngine.CubemapFace face, System.Int32 depthSlice)

Disassembly:
	0x03C0F3BC STR X29, [X31 + 0x88]
	0x03C0F3C0 STR W20, [X31 + 0x80]
	0x03C0F3C4 MOV X0, X27
	0x03C0F3C8 MOV W1, W25
	0x03C0F3CC MOV X2, X24
	0x03C0F3D0 MOV X3, X19
	0x03C0F3D4 MOV W4, W22
	0x03C0F3D8 LDR X5, [X31 + 0x10]
	0x03C0F3DC LDR W6, [X31 + 0x18]
	0x03C0F3E0 LDP X20, X19, [X31 + 0x70]
	0x03C0F3E4 LDP X22, X21, [X31 + 0x60]
	0x03C0F3E8 LDP X24, X23, [X31 + 0x50]
	0x03C0F3EC LDP X26, X25, [X31 + 0x40]
	0x03C0F3F0 LDP X28, X27, [X31 + 0x30]
	0x03C0F3F4 LDP X29, X30, [X31 + 0x20]
	0x03C0F3F8 AND W7, W9, 0x1
	0x03C0F3FC ADD X31, X31, 0x80
	0x03C0F400 BR X8
	0x03C0F404 LDP X20, X19, [X31 + 0x70]
	0x03C0F408 LDP X22, X21, [X31 + 0x60]
	0x03C0F40C LDP X24, X23, [X31 + 0x50]
	0x03C0F410 LDP X26, X25, [X31 + 0x40]
	0x03C0F414 LDP X28, X27, [X31 + 0x30]
	0x03C0F418 LDP X29, X30, [X31 + 0x20]
	0x03C0F41C ADD X31, X31, 0x80
	0x03C0F420 RET
	0x03C0F424 ADRP X0, 0x4EC000
	0x03C0F428 LDR X0, [X0 + 0x760]
	0x03C0F42C BL 0x1C16D08
	0x03C0F430 BL 0x1C16F10
	0x03C0F434 MOV X19, X0
	0x03C0F438 ADRP X0, 0x54F000
	0x03C0F43C LDR X0, [X0 + 0xD10]
	0x03C0F440 BL 0x1C16D08
	0x03C0F444 MOV X20, X0
	0x03C0F448 ADRP X0, 0x54F000
	0x03C0F44C LDR X0, [X0 + 0xD18]
	0x03C0F450 BL 0x1C16D08
	0x03C0F454 MOV X2, X0
	0x03C0F458 MOV X0, X19
	0x03C0F45C MOV X1, X20
	0x03C0F460 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0x7D6000
	009 Move [X31+16], X0
	010 Move [X31+24], X1
	011 Move [X31], X2
	012 Move [X31+8], X3
	013 Move X23, 0x4E9000
	014 Move W8, [X22+904]
	015 Move X23, [X23+712]
	016 Move W19, W6
	017 Move W20, W5
	018 Move W21, W4
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x4E9000
	024 Move X0, [X0+712]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+904], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X22, 0x7D6000
	034 Move X8, [X22+1008]
	035 Compare X8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, -51445760
	038 Add X0, X0, 3749
	039 Call 0x1C17CB8
	040 Move X8, X0
	041 Move [X22+1008], X0
	042 Add X0, X31, 16
	043 Add X1, X31, 0
	044 Move W2, W21
	045 Move W3, W20
	046 Move W4, W19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X22, [X31+48]
	051 Move X21, [X31+56]
	052 Move X30, [X31+32]
	053 Move X23, [X31+40]
	054 Add X31, X31, 80
	055 Return 

Method: System.Void CopyTexture_Slice(UnityEngine.Texture src, System.Int32 srcElement, System.Int32 srcMip, UnityEngine.Texture dst, System.Int32 dstElement, System.Int32 dstMip)

Disassembly:
	0x03C0F4D0 MOV X1, X19
	0x03C0F4D4 MOV X2, X31
	0x03C0F4D8 BL 0x321EFD0
	0x03C0F4DC MOV X19, X0
	0x03C0F4E0 ADRP X0, 0x4EC000
	0x03C0F4E4 LDR X0, [X0 + 0x760]
	0x03C0F4E8 BL 0x1C16D08
	0x03C0F4EC BL 0x1C16F10
	0x03C0F4F0 MOV X20, X0
	0x03C0F4F4 ADRP X0, 0x50C000
	0x03C0F4F8 LDR X0, [X0 + 0x648]
	0x03C0F4FC BL 0x1C16D08
	0x03C0F500 MOV X1, X0
	0x03C0F504 MOV X0, X20
	0x03C0F508 MOV X2, X19
	0x03C0F50C MOV X3, X31
	0x03C0F510 BL 0x3311888
	0x03C0F514 ADRP X0, 0x54F000
	0x03C0F518 LDR X0, [X0 + 0xD28]
	0x03C0F51C BL 0x1C16D08
	0x03C0F520 MOV X1, X0
	0x03C0F524 MOV X0, X20
	0x03C0F528 BL 0x1C16DEC
	0x03C0F52C ADRP X0, 0x4E4000
	0x03C0F530 LDR X0, [X0 + 0x5B0]
	0x03C0F534 BL 0x1C16D08
	0x03C0F538 BL 0x1C16F10
	0x03C0F53C MOV X19, X0
	0x03C0F540 ADRP X0, 0x54F000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7D6000
	010 Move X6, [X25+912]
	011 Move W19, W5
	012 Move W20, W4
	013 Move X21, X3
	014 Move W22, W2
	015 Move W23, W1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51511296
	020 Add X0, X0, 3316
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+912], X0
	024 Move X0, X24
	025 Move W1, W23
	026 Move W2, W22
	027 Move X3, X21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void CopyTexture_Region(UnityEngine.Texture src, System.Int32 srcElement, System.Int32 srcMip, System.Int32 srcX, System.Int32 srcY, System.Int32 srcWidth, System.Int32 srcHeight, UnityEngine.Texture dst, System.Int32 dstElement, System.Int32 dstMip, System.Int32 dstX, System.Int32 dstY)

Disassembly:
	0x03C0F544 LDR X0, [X0 + 0xD30]
	0x03C0F548 B 0x3C0F5A8
	0x03C0F54C ADRP X0, 0x4E9000
	0x03C0F550 LDR X0, [X0 + 0x528]
	0x03C0F554 BL 0x1C16D08
	0x03C0F558 BL 0x1C16F10
	0x03C0F55C MOV X19, X0
	0x03C0F560 ADRP X0, 0x53E000
	0x03C0F564 LDR X0, [X0 + 0xE90]
	0x03C0F568 B 0x3C0F5DC
	0x03C0F56C ADRP X0, 0x4E9000
	0x03C0F570 LDR X0, [X0 + 0x528]
	0x03C0F574 BL 0x1C16D08
	0x03C0F578 BL 0x1C16F10
	0x03C0F57C MOV X19, X0
	0x03C0F580 ADRP X0, 0x54F000
	0x03C0F584 LDR X0, [X0 + 0xD38]
	0x03C0F588 B 0x3C0F5DC
	0x03C0F58C ADRP X0, 0x4E4000
	0x03C0F590 LDR X0, [X0 + 0x5B0]
	0x03C0F594 BL 0x1C16D08
	0x03C0F598 BL 0x1C16F10
	0x03C0F59C MOV X19, X0
	0x03C0F5A0 ADRP X0, 0x54F000
	0x03C0F5A4 LDR X0, [X0 + 0xD40]
	0x03C0F5A8 BL 0x1C16D08
	0x03C0F5AC MOV X1, X0
	0x03C0F5B0 MOV X0, X19
	0x03C0F5B4 MOV X2, X31
	0x03C0F5B8 BL 0x337DF1C
	0x03C0F5BC B 0x3C0F5F0
	0x03C0F5C0 ADRP X0, 0x4E9000
	0x03C0F5C4 LDR X0, [X0 + 0x528]
	0x03C0F5C8 BL 0x1C16D08
	0x03C0F5CC BL 0x1C16F10
	0x03C0F5D0 MOV X19, X0
	0x03C0F5D4 ADRP X0, 0x54F000
	0x03C0F5D8 LDR X0, [X0 + 0xD48]
	0x03C0F5DC BL 0x1C16D08
	0x03C0F5E0 MOV X1, X0
	0x03C0F5E4 MOV X0, X19
	0x03C0F5E8 MOV X2, X31
	0x03C0F5EC BL 0x330E100
	0x03C0F5F0 ADRP X0, 0x54F000
	0x03C0F5F4 LDR X0, [X0 + 0xD28]
	0x03C0F5F8 BL 0x1C16D08
	0x03C0F5FC MOV X1, X0
	0x03C0F600 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X8, 0x7D6000
	015 Move W27, [X31+136]
	016 Move W28, [X31+128]
	017 Move W29, [X31+120]
	018 Move X8, [X8+920]
	019 Move W19, [X31+112]
	020 Move W20, W6
	021 Move W21, W5
	022 Move W22, W4
	023 Move W23, W3
	024 Move W24, W2
	025 Move W25, W1
	026 Move X26, X0
	027 Compare X8, 0
	028 JumpIfNotEqual {37}
	029 Move X0, -51347456
	030 Add X0, X0, 1515
	031 Move [X31+8], X7
	032 Call 0x1C17CB8
	033 Move X7, [X31+8]
	034 Move X8, X0
	035 Move X9, 0x7D6000
	036 Move [X9+920], X0
	037 Move [X31+136], W27
	038 Move [X31+128], W28
	039 Move [X31+120], W29
	040 Move [X31+112], W19
	041 Move X0, X26
	042 Move W1, W25
	043 Move W2, W24
	044 Move W3, W23
	045 Move W4, W22
	046 Move W5, W21
	047 Move W6, W20
	048 Move X20, [X31+96]
	049 Move X19, [X31+104]
	050 Move X22, [X31+80]
	051 Move X21, [X31+88]
	052 Move X24, [X31+64]
	053 Move X23, [X31+72]
	054 Move X26, [X31+48]
	055 Move X25, [X31+56]
	056 Move X28, [X31+32]
	057 Move X27, [X31+40]
	058 Move X29, [X31+16]
	059 Move X30, [X31+24]
	060 Add X31, X31, 112
	061 CallNoReturn X8

Method: System.Void Internal_DrawMeshNow2(UnityEngine.Mesh mesh, System.Int32 subsetIndex, UnityEngine.Matrix4x4 matrix)

Disassembly:
	0x03C0F604 BL 0x1C16DEC
	0x03C0F608 ADRP X0, 0x4EC000
	0x03C0F60C LDR X0, [X0 + 0x578]
	0x03C0F610 BL 0x1C16D08
	0x03C0F614 BL 0x1C16F10
	0x03C0F618 MOV X19, X0
	0x03C0F61C ADRP X0, 0x54F000
	0x03C0F620 LDR X0, [X0 + 0xCF8]
	0x03C0F624 BL 0x1C16D08
	0x03C0F628 MOV X20, X0
	0x03C0F62C ADRP X0, 0x54F000
	0x03C0F630 LDR X0, [X0 + 0xD00]
	0x03C0F634 BL 0x1C16D08
	0x03C0F638 MOV X2, X0
	0x03C0F63C MOV X0, X19
	0x03C0F640 MOV X1, X20
	0x03C0F644 MOV X3, X31
	0x03C0F648 BL 0x330E16C
	0x03C0F64C B 0x3C0F5F0
	0x03C0F650 STR X30, [X31 - 0x20]!
	0x03C0F654 STP X20, X19, [X31 + 0x10]
	0x03C0F658 ADRP X20, 0x7D5000
	0x03C0F65C LDR X1, [X20 + 0xB50]
	0x03C0F660 MOV X19, X0
	0x03C0F664 CBNZ X1, 0x3C0F67C
	0x03C0F668 ADRP X0, 0xFFFFFFFFFCEFC000
	0x03C0F66C ADD X0, X0, 0x175
	0x03C0F670 BL 0x1C16CB8
	0x03C0F674 MOV X1, X0
	0x03C0F678 STR X0, [X20 + 0xB50]
	0x03C0F67C MOV X0, X19
	0x03C0F680 LDP X20, X19, [X31 + 0x10]
	0x03C0F684 LDR X30, [X31], #0x20
	0x03C0F688 BR X1
	0x03C0F68C STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x7D6000
	008 Move X23, 0x4E9000
	009 Move W8, [X22+928]
	010 Move X23, [X23+712]
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x4E9000
	019 Move X0, [X0+712]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+928], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X22, 0x7D6000
	029 Move X3, [X22+1016]
	030 Compare X3, 0
	031 JumpIfNotEqual {37}
	032 Move X0, -51421184
	033 Add X0, X0, 4013
	034 Call 0x1C17CB8
	035 Move X3, X0
	036 Move [X22+1016], X0
	037 Move X0, X21
	038 Move W1, W20
	039 Move X2, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 CallNoReturn X3

Method: System.Void Internal_DrawTexture(ref UnityEngine.Internal_DrawTextureArguments args)

Disassembly:
	0x03C0F6E4 LDRB W8, [X22 + 0x3E0]
	0x03C0F6E8 LDR X21, [X21 + 0x2C8]
	0x03C0F6EC MOV V8.16B, V3.16B
	0x03C0F6F0 MOV V9.16B, V2.16B
	0x03C0F6F4 MOV V10.16B, V1.16B
	0x03C0F6F8 MOV V11.16B, V0.16B
	0x03C0F6FC MOV X19, X1
	0x03C0F700 MOV X20, X0
	0x03C0F704 TBNZ X8, 0x0, 0x3C0F71C
	0x03C0F708 ADRP X0, 0x4E8000
	0x03C0F70C LDR X0, [X0 + 0x2C8]
	0x03C0F710 BL 0x1C16CF4
	0x03C0F714 MOVZ W8, 0x1
	0x03C0F718 STRB W8, [X22 + 0x3E0]
	0x03C0F71C LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D6000
	005 Move X1, [X20+936]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51437568
	010 Add X0, X0, 3432
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+936], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Internal_DrawMesh(UnityEngine.Mesh mesh, System.Int32 submeshIndex, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 layer, UnityEngine.Camera camera, UnityEngine.MaterialPropertyBlock properties, UnityEngine.Rendering.ShadowCastingMode castShadows, System.Boolean receiveShadows, UnityEngine.Transform probeAnchor, UnityEngine.Rendering.LightProbeUsage lightProbeUsage, UnityEngine.LightProbeProxyVolume lightProbeProxyVolume)

Disassembly:
	0x03C0F720 LDR W8, [X0 + 0xE0]
	0x03C0F724 CBNZ W8, 0x3C0F72C
	0x03C0F728 BL 0x1C16DFC
	0x03C0F72C MOV X0, X20
	0x03C0F730 MOV X1, X19
	0x03C0F734 MOV V2.16B, V9.16B
	0x03C0F738 MOV V3.16B, V8.16B
	0x03C0F73C LDP X20, X19, [X31 + 0x40]
	0x03C0F740 LDP X22, X21, [X31 + 0x30]
	0x03C0F744 LDR X30, [X31 + 0x20]
	0x03C0F748 LDP D9, D8, [X31 + 0x10]
	0x03C0F74C MOV V0.16B, V11.16B
	0x03C0F750 MOV V1.16B, V10.16B
	0x03C0F754 LDP D11, D10, [X31], #0x50
	0x03C0F758 B 0x3C0E9FC
	0x03C0F75C STR X30, [X31 - 0x40]!
	0x03C0F760 STP X24, X23, [X31 + 0x10]
	0x03C0F764 STP X22, X21, [X31 + 0x20]
	0x03C0F768 STP X20, X19, [X31 + 0x30]
	0x03C0F76C ADRP X23, 0x7D5000
	0x03C0F770 ADRP X24, 0x4E8000
	0x03C0F774 LDRB W8, [X23 + 0x3E1]
	0x03C0F778 LDR X24, [X24 + 0x2C8]
	0x03C0F77C MOV W19, W3
	0x03C0F780 MOV X20, X2
	0x03C0F784 MOV X21, X1
	0x03C0F788 MOV X22, X0
	0x03C0F78C TBNZ X8, 0x0, 0x3C0F7A4
	0x03C0F790 ADRP X0, 0x4E8000
	0x03C0F794 LDR X0, [X0 + 0x2C8]
	0x03C0F798 BL 0x1C16CF4
	0x03C0F79C MOVZ W8, 0x1
	0x03C0F7A0 STRB W8, [X23 + 0x3E1]
	0x03C0F7A4 LDR X0, [X24]
	0x03C0F7A8 LDR W8, [X0 + 0xE0]
	0x03C0F7AC CBNZ W8, 0x3C0F7B4
	0x03C0F7B0 BL 0x1C16DFC
	0x03C0F7B4 ADRP X23, 0x7D5000
	0x03C0F7B8 LDR X5, [X23 + 0x3C0]
	0x03C0F7BC CBNZ X5, 0x3C0F7D4
	0x03C0F7C0 ADRP X0, 0xFFFFFFFFFCF0D000
	0x03C0F7C4 ADD X0, X0, 0xD52
	0x03C0F7C8 BL 0x1C16CB8
	0x03C0F7CC MOV X5, X0
	0x03C0F7D0 STR X0, [X23 + 0x3C0]
	0x03C0F7D4 MOV X0, X22
	0x03C0F7D8 MOV X1, X21
	0x03C0F7DC MOV X2, X20
	0x03C0F7E0 MOV W3, W19
	0x03C0F7E4 LDP X20, X19, [X31 + 0x30]
	0x03C0F7E8 LDP X22, X21, [X31 + 0x20]
	0x03C0F7EC LDP X24, X23, [X31 + 0x10]
	0x03C0F7F0 MOVZ W4, 0x1
	0x03C0F7F4 LDR X30, [X31], #0x40
	0x03C0F7F8 BR X5
	0x03C0F7FC STP X30, X23, [X31 - 0x30]!
	0x03C0F800 STP X22, X21, [X31 + 0x10]
	0x03C0F804 STP X20, X19, [X31 + 0x20]
	0x03C0F808 ADRP X22, 0x7D5000
	0x03C0F80C ADRP X23, 0x4E8000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move [X31+28], W7
	015 Move [X31+8], X5
	016 Move [X31+16], X6
	017 Move X20, 0x7D6000
	018 Move X21, 0x4E9000
	019 Move X27, [X31+152]
	020 Move W28, [X31+144]
	021 Move X29, [X31+136]
	022 Move W8, [X20+944]
	023 Move W19, [X31+128]
	024 Move X21, [X21+712]
	025 Move W22, W4
	026 Move X23, X3
	027 Move X24, X2
	028 Move W25, W1
	029 Move X26, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X0, 0x4E9000
	035 Move X0, [X0+712]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+944], W8
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X20, 0x7D6000
	045 Move X8, [X20+1024]
	046 Compare X8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, -51355648
	049 Add X0, X0, 1652
	050 Call 0x1C17CB8
	051 Move X8, X0
	052 Move [X20+1024], X0
	053 Move [X31+152], X27
	054 Move [X31+144], W28
	055 Move [X31+136], X29
	056 And W9, W19, 1
	057 Move X0, X26
	058 Move W1, W25
	059 Move X2, X24
	060 Move X3, X23
	061 Move W4, W22
	062 Move X5, [X31+8]
	063 Move X6, [X31+16]
	064 Move W7, [X31+28]
	065 Move X20, [X31+112]
	066 Move X19, [X31+120]
	067 Move X22, [X31+96]
	068 Move X21, [X31+104]
	069 Move X24, [X31+80]
	070 Move X23, [X31+88]
	071 Move X26, [X31+64]
	072 Move X25, [X31+72]
	073 Move X28, [X31+48]
	074 Move X27, [X31+56]
	075 Move X29, [X31+32]
	076 Move X30, [X31+40]
	077 Move [X31+128], W9
	078 Add X31, X31, 128
	079 CallNoReturn X8

Method: System.Void Internal_DrawMeshInstanced(UnityEngine.Mesh mesh, System.Int32 submeshIndex, UnityEngine.Material material, UnityEngine.Matrix4x4[] matrices, System.Int32 count, UnityEngine.MaterialPropertyBlock properties, UnityEngine.Rendering.ShadowCastingMode castShadows, System.Boolean receiveShadows, System.Int32 layer, UnityEngine.Camera camera, UnityEngine.Rendering.LightProbeUsage lightProbeUsage, UnityEngine.LightProbeProxyVolume lightProbeProxyVolume)

Disassembly:
	0x03C0F8D0 STP V0, V1, [X31 + 0x90]
	0x03C0F8D4 STP V2, V3, [X31 + 0x70]
	0x03C0F8D8 LDR W8, [X0 + 0xE0]
	0x03C0F8DC CBNZ W8, 0x3C0F8E4
	0x03C0F8E0 BL 0x1C16DFC
	0x03C0F8E4 LDP V0, V1, [X31 + 0x70]
	0x03C0F8E8 LDP V2, V3, [X31 + 0x90]
	0x03C0F8EC MOVZ W8, 0x1
	0x03C0F8F0 ADD X1, X31, 0x30
	0x03C0F8F4 MOVZ W7, 0x1
	0x03C0F8F8 MOV X0, X23
	0x03C0F8FC MOV X2, X22
	0x03C0F900 MOV W3, W21
	0x03C0F904 MOV X4, X20
	0x03C0F908 MOV W5, W19
	0x03C0F90C MOV X6, X31
	0x03C0F910 STP V0, V1, [X31 + 0x30]
	0x03C0F914 STP V2, V3, [X31 + 0x50]
	0x03C0F918 STR X31, [X31 + 0x18]
	0x03C0F91C STR X31, [X31 + 0x8]
	0x03C0F920 STR W8, [X31 + 0x10]
	0x03C0F924 STRB W8, [X31]
	0x03C0F928 BL 0x3C0F038
	0x03C0F92C LDP X20, X19, [X31 + 0xF0]
	0x03C0F930 LDP X22, X21, [X31 + 0xE0]
	0x03C0F934 LDP X24, X23, [X31 + 0xD0]
	0x03C0F938 LDP X26, X25, [X31 + 0xC0]
	0x03C0F93C LDR X30, [X31 + 0xB0]
	0x03C0F940 ADD X31, X31, 0x100
	0x03C0F944 RET
	0x03C0F948 SUB X31, X31, 0x110
	0x03C0F94C STR X29, [X31 + 0xB0]
	0x03C0F950 STP X30, X27, [X31 + 0xC0]
	0x03C0F954 STP X26, X25, [X31 + 0xD0]
	0x03C0F958 STP X24, X23, [X31 + 0xE0]
	0x03C0F95C STP X22, X21, [X31 + 0xF0]
	0x03C0F960 STP X20, X19, [X31 + 0x100]
	0x03C0F964 ADRP X27, 0x7D5000
	0x03C0F968 ADRP X26, 0x4E8000
	0x03C0F96C LDRB W8, [X27 + 0x3E4]
	0x03C0F970 LDR X26, [X26 + 0x2C8]
	0x03C0F974 MOV X19, X6
	0x03C0F978 MOV W20, W5
	0x03C0F97C MOV X21, X4
	0x03C0F980 MOV W22, W3
	0x03C0F984 MOV X23, X2
	0x03C0F988 MOV X25, X1
	0x03C0F98C MOV X24, X0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X8, 0x7D6000
	015 Move X27, [X31+136]
	016 Move W28, [X31+128]
	017 Move X29, [X31+120]
	018 Move X8, [X8+952]
	019 Move W19, [X31+112]
	020 Move W23, W7
	021 Move X20, X5
	022 Move W21, W4
	023 Move X22, X3
	024 Move X24, X2
	025 Move W25, W1
	026 Move X26, X0
	027 Compare X8, 0
	028 JumpIfNotEqual {37}
	029 Move X0, -51380224
	030 Add X0, X0, 3882
	031 Move [X31+12], W6
	032 Call 0x1C17CB8
	033 Move W6, [X31+12]
	034 Move X8, X0
	035 Move X9, 0x7D6000
	036 Move [X9+952], X0
	037 Move [X31+136], X27
	038 Move [X31+128], W28
	039 Move [X31+120], X29
	040 And W7, W23, 1
	041 Move [X31+112], W19
	042 Move X0, X26
	043 Move W1, W25
	044 Move X2, X24
	045 Move X3, X22
	046 Move W4, W21
	047 Move X5, X20
	048 Move X20, [X31+96]
	049 Move X19, [X31+104]
	050 Move X22, [X31+80]
	051 Move X21, [X31+88]
	052 Move X24, [X31+64]
	053 Move X23, [X31+72]
	054 Move X26, [X31+48]
	055 Move X25, [X31+56]
	056 Move X28, [X31+32]
	057 Move X27, [X31+40]
	058 Move X29, [X31+16]
	059 Move X30, [X31+24]
	060 Add X31, X31, 112
	061 CallNoReturn X8

Method: System.Void Internal_BlitMaterial5(UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Material mat, System.Int32 pass, System.Boolean setRT)

Disassembly:
	0x03C0F990 TBNZ X8, 0x0, 0x3C0F9A8
	0x03C0F994 ADRP X0, 0x4E8000
	0x03C0F998 LDR X0, [X0 + 0x2C8]
	0x03C0F99C BL 0x1C16CF4
	0x03C0F9A0 MOVZ W8, 0x1
	0x03C0F9A4 STRB W8, [X27 + 0x3E4]
	0x03C0F9A8 LDP V0, V1, [X25 + 0x20]
	0x03C0F9AC LDP V2, V3, [X25]
	0x03C0F9B0 LDR X0, [X26]
	0x03C0F9B4 STP V0, V1, [X31 + 0x90]
	0x03C0F9B8 STP V2, V3, [X31 + 0x70]
	0x03C0F9BC LDR W8, [X0 + 0xE0]
	0x03C0F9C0 CBNZ W8, 0x3C0F9C8
	0x03C0F9C4 BL 0x1C16DFC
	0x03C0F9C8 LDP V0, V1, [X31 + 0x70]
	0x03C0F9CC LDP V2, V3, [X31 + 0x90]
	0x03C0F9D0 MOVZ W8, 0x1
	0x03C0F9D4 ADD X1, X31, 0x30
	0x03C0F9D8 MOVZ W7, 0x1
	0x03C0F9DC MOV X0, X24
	0x03C0F9E0 MOV X2, X23
	0x03C0F9E4 MOV W3, W22
	0x03C0F9E8 MOV X4, X21
	0x03C0F9EC MOV W5, W20
	0x03C0F9F0 MOV X6, X19
	0x03C0F9F4 STP V0, V1, [X31 + 0x30]
	0x03C0F9F8 STP V2, V3, [X31 + 0x50]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7D6000
	009 Move X5, [X24+960]
	010 Move W21, W4
	011 Move W19, W3
	012 Move X20, X2
	013 Move X22, X1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51322880
	018 Add X0, X0, 3410
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+960], X0
	022 And W4, W21, 1
	023 Move X0, X23
	024 Move X1, X22
	025 Move X2, X20
	026 Move W3, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void Blit4(UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Vector2 scale, UnityEngine.Vector2 offset)

Disassembly:
	0x03C0F9FC STR X31, [X31 + 0x18]
	0x03C0FA00 STR X31, [X31 + 0x8]
	0x03C0FA04 STR W8, [X31 + 0x10]
	0x03C0FA08 STRB W8, [X31]
	0x03C0FA0C BL 0x3C0F038
	0x03C0FA10 LDP X20, X19, [X31 + 0x100]
	0x03C0FA14 LDP X22, X21, [X31 + 0xF0]
	0x03C0FA18 LDP X24, X23, [X31 + 0xE0]
	0x03C0FA1C LDP X26, X25, [X31 + 0xD0]
	0x03C0FA20 LDP X30, X27, [X31 + 0xC0]
	0x03C0FA24 LDR X29, [X31 + 0xB0]
	0x03C0FA28 ADD X31, X31, 0x110
	0x03C0FA2C RET
	0x03C0FA30 SUB X31, X31, 0x60
	0x03C0FA34 STP X30, X23, [X31 + 0x30]
	0x03C0FA38 STP X22, X21, [X31 + 0x40]
	0x03C0FA3C STP X20, X19, [X31 + 0x50]
	0x03C0FA40 ADRP X23, 0x7D5000
	0x03C0FA44 LDRB W8, [X23 + 0x3E5]
	0x03C0FA48 MOV X19, X3
	0x03C0FA4C MOV X20, X2
	0x03C0FA50 MOV W21, W1
	0x03C0FA54 MOV X22, X0
	0x03C0FA58 TBNZ X8, 0x0, 0x3C0FA70
	0x03C0FA5C ADRP X0, 0x4E8000
	0x03C0FA60 LDR X0, [X0 + 0x2C8]
	0x03C0FA64 BL 0x1C16CF4
	0x03C0FA68 MOVZ W8, 0x1
	0x03C0FA6C STRB W8, [X23 + 0x3E5]
	0x03C0FA70 CBZ X19, 0x3C0FAD8
	0x03C0FA74 ADRP X8, 0x4E8000
	0x03C0FA78 LDR X8, [X8 + 0x2C8]
	0x03C0FA7C LDR X0, [X8]
	0x03C0FA80 LDR W8, [X0 + 0xE0]
	0x03C0FA84 CBNZ W8, 0x3C0FA8C
	0x03C0FA88 BL 0x1C16DFC
	0x03C0FA8C LDR W4, [X19 + 0x18]
	0x03C0FA90 MOVZ W8, 0x1
	0x03C0FA94 MOVZ W6, 0x1
	0x03C0FA98 MOVZ W7, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x7D6000
	008 Move [X31+24], S0
	009 Move [X31+32], S1
	010 Move [X31+8], S2
	011 Move [X31+16], S3
	012 Move X22, 0x4E9000
	013 Move W8, [X21+968]
	014 Move X22, [X22+712]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x4E9000
	022 Move X0, [X0+712]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+968], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X21, 0x7D6000
	032 Move X8, [X21+1032]
	033 Compare X8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, -51478528
	036 Add X0, X0, 3790
	037 Call 0x1C17CB8
	038 Move X8, X0
	039 Move [X21+1032], X0
	040 Add X2, X31, 24
	041 Add X3, X31, 8
	042 Move X0, X20
	043 Move X1, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+16]
	050 Add X31, X31, 64
	051 Return 

Method: System.Void ExecuteCommandBuffer(UnityEngine.Rendering.CommandBuffer buffer)

Disassembly:
	0x03C0FAF8 ADRP X28, 0x7D5000
	0x03C0FAFC ADRP X27, 0x4E8000
	0x03C0FB00 LDRB W8, [X28 + 0x3E6]
	0x03C0FB04 LDR X27, [X27 + 0x2C8]
	0x03C0FB08 MOV W23, W7
	0x03C0FB0C MOV W19, W6
	0x03C0FB10 MOV X20, X5
	0x03C0FB14 MOV W21, W4
	0x03C0FB18 MOV X22, X3
	0x03C0FB1C MOV X24, X2
	0x03C0FB20 MOV W25, W1
	0x03C0FB24 MOV X26, X0
	0x03C0FB28 TBNZ X8, 0x0, 0x3C0FB40
	0x03C0FB2C ADRP X0, 0x4E8000
	0x03C0FB30 LDR X0, [X0 + 0x2C8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D6000
	005 Move X1, [X20+976]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51482624
	010 Add X0, X0, 279
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+976], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetRenderTargetImpl(UnityEngine.RenderBuffer colorBuffer, UnityEngine.RenderBuffer depthBuffer, System.Int32 mipLevel, UnityEngine.CubemapFace face, System.Int32 depthSlice)

Disassembly:
	0x03C0FB34 BL 0x1C16CF4
	0x03C0FB38 MOVZ W8, 0x1
	0x03C0FB3C STRB W8, [X28 + 0x3E6]
	0x03C0FB40 LDR X0, [X27]
	0x03C0FB44 LDR X28, [X31 + 0x98]
	0x03C0FB48 LDR W27, [X31 + 0x90]
	0x03C0FB4C LDR W8, [X0 + 0xE0]
	0x03C0FB50 CBNZ W8, 0x3C0FB58
	0x03C0FB54 BL 0x1C16DFC
	0x03C0FB58 MOVZ W8, 0x1
	0x03C0FB5C AND W7, W23, 0x1
	0x03C0FB60 MOV X0, X26
	0x03C0FB64 MOV W1, W25
	0x03C0FB68 MOV X2, X24
	0x03C0FB6C MOV X3, X22
	0x03C0FB70 MOV W4, W21
	0x03C0FB74 MOV X5, X20
	0x03C0FB78 MOV W6, W19
	0x03C0FB7C STR X31, [X31 + 0x18]
	0x03C0FB80 STR X28, [X31 + 0x8]
	0x03C0FB84 STR W8, [X31 + 0x10]
	0x03C0FB88 STR W27, [X31]
	0x03C0FB8C BL 0x3C0F1D0
	0x03C0FB90 LDP X20, X19, [X31 + 0x80]
	0x03C0FB94 LDP X22, X21, [X31 + 0x70]
	0x03C0FB98 LDP X24, X23, [X31 + 0x60]
	0x03C0FB9C LDP X26, X25, [X31 + 0x50]
	0x03C0FBA0 LDP X28, X27, [X31 + 0x40]
	0x03C0FBA4 LDR X30, [X31 + 0x30]
	0x03C0FBA8 ADD X31, X31, 0x90
	0x03C0FBAC RET
	0x03C0FBB0 STP X30, X21, [X31 - 0x20]!
	0x03C0FBB4 STP X20, X19, [X31 + 0x10]
	0x03C0FBB8 ADRP X20, 0x7D5000
	0x03C0FBBC ADRP X21, 0x4E8000
	0x03C0FBC0 LDRB W8, [X20 + 0x3E7]
	0x03C0FBC4 LDR X21, [X21 + 0x2C8]
	0x03C0FBC8 MOV X19, X0
	0x03C0FBCC TBNZ X8, 0x0, 0x3C0FBE4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x7D6000
	012 Move X26, 0x4E9000
	013 Move W8, [X27+984]
	014 Move X26, [X26+712]
	015 Move W19, W6
	016 Move W20, W5
	017 Move W21, W4
	018 Move X22, X3
	019 Move X23, X2
	020 Move X24, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x4E9000
	027 Move X0, [X0+712]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X27+984], W8
	031 Move X0, [X26]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X25
	037 Move X1, X24
	038 Move X2, X23
	039 Move X3, X22
	040 Move W4, W21
	041 Move W5, W20
	042 Move W6, W19
	043 Move X20, [X31+64]
	044 Move X19, [X31+72]
	045 Move X22, [X31+48]
	046 Move X21, [X31+56]
	047 Move X24, [X31+32]
	048 Move X23, [X31+40]
	049 Move X26, [X31+16]
	050 Move X25, [X31+24]
	051 Move X30, [X31+80]
	052 Move X27, [X31+88]
	053 Call Graphics.Internal_SetRTSimple, X0, X1, X2, X3, X4
	054 Return 

Method: System.Void SetRenderTargetImpl(UnityEngine.RenderTexture rt, System.Int32 mipLevel, UnityEngine.CubemapFace face, System.Int32 depthSlice)

Disassembly:
	0x03C0FBD0 ADRP X0, 0x4E8000
	0x03C0FBD4 LDR X0, [X0 + 0x2C8]
	0x03C0FBD8 BL 0x1C16CF4
	0x03C0FBDC MOVZ W8, 0x1
	0x03C0FBE0 STRB W8, [X20 + 0x3E7]
	0x03C0FBE4 LDR X0, [X21]
	0x03C0FBE8 LDR W8, [X0 + 0xE0]
	0x03C0FBEC CBNZ W8, 0x3C0FBF4
	0x03C0FBF0 BL 0x1C16DFC
	0x03C0FBF4 MOV X0, X19
	0x03C0FBF8 LDP X20, X19, [X31 + 0x10]
	0x03C0FBFC MOVN W2, 0x0
	0x03C0FC00 MOV W1, W31
	0x03C0FC04 MOV W3, W31
	0x03C0FC08 LDP X30, X21, [X31], #0x20
	0x03C0FC0C B 0x3C0ED04
	0x03C0FC10 STR X30, [X31 - 0x30]!
	0x03C0FC14 STP X22, X21, [X31 + 0x10]
	0x03C0FC18 STP X20, X19, [X31 + 0x20]
	0x03C0FC1C ADRP X21, 0x7D5000
	0x03C0FC20 ADRP X22, 0x4E8000
	0x03C0FC24 LDRB W8, [X21 + 0x3E8]
	0x03C0FC28 LDR X22, [X22 + 0x2C8]
	0x03C0FC2C MOV W19, W1
	0x03C0FC30 MOV X20, X0
	0x03C0FC34 TBNZ X8, 0x0, 0x3C0FC4C
	0x03C0FC38 ADRP X0, 0x4E8000
	0x03C0FC3C LDR X0, [X0 + 0x2C8]
	0x03C0FC40 BL 0x1C16CF4
	0x03C0FC44 MOVZ W8, 0x1
	0x03C0FC48 STRB W8, [X21 + 0x3E8]
	0x03C0FC4C LDR X0, [X22]
	0x03C0FC50 LDR W8, [X0 + 0xE0]
	0x03C0FC54 CBNZ W8, 0x3C0FC5C
	0x03C0FC58 BL 0x1C16DFC
	0x03C0FC5C MOV X0, X20
	0x03C0FC60 MOV W1, W19
	0x03C0FC64 LDP X20, X19, [X31 + 0x20]
	0x03C0FC68 LDP X22, X21, [X31 + 0x10]
	0x03C0FC6C MOVN W2, 0x0
	0x03C0FC70 MOV W3, W31
	0x03C0FC74 LDR X30, [X31], #0x30
	0x03C0FC78 B 0x3C0ED04
	0x03C0FC7C STR X30, [X31 - 0x30]!
	0x03C0FC80 STP X22, X21, [X31 + 0x10]
	0x03C0FC84 STP X20, X19, [X31 + 0x20]
	0x03C0FC88 ADRP X19, 0x7D5000
	0x03C0FC8C LDRB W8, [X19 + 0x3E9]
	0x03C0FC90 TBNZ X8, 0x0, 0x3C0FCC0
	0x03C0FC94 ADRP X0, 0x54F000
	0x03C0FC98 LDR X0, [X0 + 0xD50]
	0x03C0FC9C BL 0x1C16CF4
	0x03C0FCA0 ADRP X0, 0x54F000
	0x03C0FCA4 LDR X0, [X0 + 0xD58]
	0x03C0FCA8 BL 0x1C16CF4
	0x03C0FCAC ADRP X0, 0x4E8000
	0x03C0FCB0 LDR X0, [X0 + 0x2C8]
	0x03C0FCB4 BL 0x1C16CF4
	0x03C0FCB8 MOVZ W8, 0x1
	0x03C0FCBC STRB W8, [X19 + 0x3E9]
	0x03C0FCC0 ADRP X22, 0x7D5000
	0x03C0FCC4 ADRP X20, 0x4E8000
	0x03C0FCC8 ADRP X21, 0x54F000
	0x03C0FCCC ADRP X19, 0x54F000
	0x03C0FCD0 LDR X8, [X22 + 0x350]
	0x03C0FCD4 LDR X20, [X20 + 0x2C8]
	0x03C0FCD8 LDR X21, [X21 + 0xD58]
	0x03C0FCDC LDR X19, [X19 + 0xD50]
	0x03C0FCE0 CBNZ X8, 0x3C0FCF8
	0x03C0FCE4 ADRP X0, 0xFFFFFFFFFCF01000
	0x03C0FCE8 ADD X0, X0, 0xF05
	0x03C0FCEC BL 0x1C16CB8
	0x03C0FCF0 MOV X8, X0
	0x03C0FCF4 STR X0, [X22 + 0x350]
	0x03C0FCF8 BLR X8
	0x03C0FCFC LDR X8, [X20]
	0x03C0FD00 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x7D6000
	010 Move X24, 0x4E5000
	011 Move W8, [X23+985]
	012 Move X24, [X24+1432]
	013 Move W19, W3
	014 Move W20, W2
	015 Move W21, W1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x4E9000
	022 Move X0, [X0+712]
	023 Call 0x1C17CF4
	024 Move X0, 0x4E5000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+985], W8
	029 Move X0, [X24]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X22
	035 Move X1, X31
	036 Call Object.op_Implicit, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {77}
	041 Compare X22, 0
	042 JumpIfEqual {101}
	043 Move X0, X22
	044 Move X1, X31
	045 Call RenderTexture.get_colorBuffer, X0
	046 Move X23, X0
	047 Move X24, X1
	048 Move X0, X22
	049 Move X1, X31
	050 Call RenderTexture.get_depthBuffer, X0
	051 Move X8, 0x4E9000
	052 Move X8, [X8+712]
	053 Move X22, X0
	054 Move X25, X1
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X23
	061 Move X1, X24
	062 Move X2, X22
	063 Move W4, W21
	064 Move W5, W20
	065 Move W6, W19
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X3, X25
	073 Move X30, [X31+64]
	074 Move X25, [X31+72]
	075 Call Graphics.SetRenderTargetImpl, X0, X1, X2, X3, X4
	076 Return 
	077 Move X8, 0x4E9000
	078 Move X8, [X8+712]
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X19, 0x7D6000
	085 Move X0, [X19+896]
	086 Compare X0, 0
	087 JumpIfNotEqual {92}
	088 Move X0, -51273728
	089 Add X0, X0, 1056
	090 Call 0x1C17CB8
	091 Move [X19+896], X0
	092 Move X20, [X31+48]
	093 Move X19, [X31+56]
	094 Move X22, [X31+32]
	095 Move X21, [X31+40]
	096 Move X24, [X31+16]
	097 Move X23, [X31+24]
	098 Move X30, [X31+64]
	099 Move X25, [X31+72]
	100 CallNoReturn X0
	101 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.RenderTexture rt, System.Int32 mipLevel, UnityEngine.CubemapFace face, System.Int32 depthSlice)

Disassembly:
	0x03C0FD04 STR W0, [X8]
	0x03C0FD08 LDR X0, [X21]
	0x03C0FD0C BL 0x1C16F10
	0x03C0FD10 LDR X1, [X19]
	0x03C0FD14 MOV X19, X0
	0x03C0FD18 BL 0x2A15E14
	0x03C0FD1C LDR X8, [X20]
	0x03C0FD20 LDP X22, X21, [X31 + 0x10]
	0x03C0FD24 LDR X8, [X8 + 0xB8]
	0x03C0FD28 STR X19, [X8 + 0x8]
	0x03C0FD2C LDP X20, X19, [X31 + 0x20]
	0x03C0FD30 LDR X30, [X31], #0x30
	0x03C0FD34 RET
	0x03C0FD38 STR D10, [X31 - 0x30]!
	0x03C0FD3C STP D9, D8, [X31 + 0x10]
	0x03C0FD40 STP X30, X19, [X31 + 0x20]
	0x03C0FD44 ADRP X19, 0x7D5000
	0x03C0FD48 LDR X0, [X19 + 0x410]
	0x03C0FD4C MOV V8.16B, V2.16B
	0x03C0FD50 MOV V9.16B, V1.16B
	0x03C0FD54 MOV V10.16B, V0.16B
	0x03C0FD58 CBNZ X0, 0x3C0FD6C
	0x03C0FD5C ADRP X0, 0xFFFFFFFFFCF13000
	0x03C0FD60 ADD X0, X0, 0xD27
	0x03C0FD64 BL 0x1C16CB8
	0x03C0FD68 STR X0, [X19 + 0x410]
	0x03C0FD6C MOV V1.16B, V9.16B
	0x03C0FD70 MOV V2.16B, V8.16B
	0x03C0FD74 LDP X30, X19, [X31 + 0x20]
	0x03C0FD78 LDP D9, D8, [X31 + 0x10]
	0x03C0FD7C MOV V0.16B, V10.16B

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x7D6000
	009 Move X24, 0x4E9000
	010 Move W8, [X23+986]
	011 Move X24, [X24+712]
	012 Move W19, W3
	013 Move W20, W2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x4E9000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+986], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move W1, W21
	032 Move W2, W20
	033 Move W3, W19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Call Graphics.SetRenderTargetImpl, X0, X1, X2, X3
	042 Return 

Method: System.Void CopyTexture(UnityEngine.Texture src, System.Int32 srcElement, System.Int32 srcMip, UnityEngine.Texture dst, System.Int32 dstElement, System.Int32 dstMip)

Disassembly:
	0x03C0FD80 LDR V10, [X31], #0x30
	0x03C0FD84 BR X0
	0x03C0FD88 STR D10, [X31 - 0x30]!
	0x03C0FD8C STP D9, D8, [X31 + 0x10]
	0x03C0FD90 STP X30, X19, [X31 + 0x20]
	0x03C0FD94 ADRP X19, 0x7D5000
	0x03C0FD98 LDR X0, [X19 + 0x410]
	0x03C0FD9C MOV V8.16B, V2.16B
	0x03C0FDA0 MOV V9.16B, V1.16B
	0x03C0FDA4 MOV V10.16B, V0.16B
	0x03C0FDA8 CBNZ X0, 0x3C0FDBC
	0x03C0FDAC ADRP X0, 0xFFFFFFFFFCF13000
	0x03C0FDB0 ADD X0, X0, 0xD27
	0x03C0FDB4 BL 0x1C16CB8
	0x03C0FDB8 STR X0, [X19 + 0x410]
	0x03C0FDBC MOV V1.16B, V9.16B
	0x03C0FDC0 MOV V2.16B, V8.16B
	0x03C0FDC4 LDP X30, X19, [X31 + 0x20]
	0x03C0FDC8 LDP D9, D8, [X31 + 0x10]
	0x03C0FDCC MOV V0.16B, V10.16B
	0x03C0FDD0 LDR V10, [X31], #0x30
	0x03C0FDD4 BR X0
	0x03C0FDD8 STR D10, [X31 - 0x30]!
	0x03C0FDDC STP D9, D8, [X31 + 0x10]
	0x03C0FDE0 STP X30, X19, [X31 + 0x20]
	0x03C0FDE4 ADRP X19, 0x7D5000
	0x03C0FDE8 LDR X0, [X19 + 0x418]
	0x03C0FDEC MOV V8.16B, V2.16B
	0x03C0FDF0 MOV V9.16B, V1.16B
	0x03C0FDF4 MOV V10.16B, V0.16B
	0x03C0FDF8 CBNZ X0, 0x3C0FE0C
	0x03C0FDFC ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C0FE00 ADD X0, X0, 0xF40
	0x03C0FE04 BL 0x1C16CB8
	0x03C0FE08 STR X0, [X19 + 0x418]
	0x03C0FE0C MOV V1.16B, V9.16B
	0x03C0FE10 MOV V2.16B, V8.16B
	0x03C0FE14 LDP X30, X19, [X31 + 0x20]
	0x03C0FE18 LDP D9, D8, [X31 + 0x10]
	0x03C0FE1C MOV V0.16B, V10.16B
	0x03C0FE20 LDR V10, [X31], #0x30
	0x03C0FE24 BR X0
	0x03C0FE28 STP D9, D8, [X31 - 0x20]!
	0x03C0FE2C STP X30, X19, [X31 + 0x10]
	0x03C0FE30 ADRP X19, 0x7D5000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x7D6000
	011 Move X26, 0x4E9000
	012 Move W8, [X25+987]
	013 Move X26, [X26+712]
	014 Move W19, W5
	015 Move W20, W4
	016 Move X21, X3
	017 Move W22, W2
	018 Move W23, W1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x4E9000
	025 Move X0, [X0+712]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+987], W8
	029 Move X0, [X26]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X25, 0x7D6000
	035 Move X6, [X25+912]
	036 Compare X6, 0
	037 JumpIfNotEqual {43}
	038 Move X0, -51511296
	039 Add X0, X0, 3316
	040 Call 0x1C17CB8
	041 Move X6, X0
	042 Move [X25+912], X0
	043 Move X0, X24
	044 Move W1, W23
	045 Move W2, W22
	046 Move X3, X21
	047 Move W4, W20
	048 Move W5, W19
	049 Move X20, [X31+64]
	050 Move X19, [X31+72]
	051 Move X22, [X31+48]
	052 Move X21, [X31+56]
	053 Move X24, [X31+32]
	054 Move X23, [X31+40]
	055 Move X26, [X31+16]
	056 Move X25, [X31+24]
	057 Move X30, [X31+80]
	058 CallNoReturn X6

Method: System.Void CopyTexture(UnityEngine.Texture src, System.Int32 srcElement, System.Int32 srcMip, System.Int32 srcX, System.Int32 srcY, System.Int32 srcWidth, System.Int32 srcHeight, UnityEngine.Texture dst, System.Int32 dstElement, System.Int32 dstMip, System.Int32 dstX, System.Int32 dstY)

Disassembly:
	0x03C0FE34 LDR X0, [X19 + 0x418]
	0x03C0FE38 MOV V8.16B, V1.16B
	0x03C0FE3C MOV V9.16B, V0.16B
	0x03C0FE40 CBNZ X0, 0x3C0FE54
	0x03C0FE44 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C0FE48 ADD X0, X0, 0xF40
	0x03C0FE4C BL 0x1C16CB8
	0x03C0FE50 STR X0, [X19 + 0x418]
	0x03C0FE54 LDP X30, X19, [X31 + 0x10]
	0x03C0FE58 FMOV S2, W31
	0x03C0FE5C MOV V0.16B, V9.16B
	0x03C0FE60 MOV V1.16B, V8.16B
	0x03C0FE64 LDP D9, D8, [X31], #0x20
	0x03C0FE68 BR X0
	0x03C0FE6C STP D11, D10, [X31 - 0x30]!
	0x03C0FE70 STP D9, D8, [X31 + 0x10]
	0x03C0FE74 STP X30, X19, [X31 + 0x20]
	0x03C0FE78 ADRP X19, 0x7D5000
	0x03C0FE7C LDR X0, [X19 + 0x420]
	0x03C0FE80 MOV V8.16B, V3.16B
	0x03C0FE84 MOV V9.16B, V2.16B
	0x03C0FE88 MOV V10.16B, V1.16B
	0x03C0FE8C MOV V11.16B, V0.16B
	0x03C0FE90 CBNZ X0, 0x3C0FEA4
	0x03C0FE94 ADRP X0, 0xFFFFFFFFFCF07000
	0x03C0FE98 ADD X0, X0, 0x6BF
	0x03C0FE9C BL 0x1C16CB8
	0x03C0FEA0 STR X0, [X19 + 0x420]
	0x03C0FEA4 MOV V2.16B, V9.16B
	0x03C0FEA8 MOV V3.16B, V8.16B
	0x03C0FEAC LDP X30, X19, [X31 + 0x20]
	0x03C0FEB0 LDP D9, D8, [X31 + 0x10]
	0x03C0FEB4 MOV V0.16B, V11.16B
	0x03C0FEB8 MOV V1.16B, V10.16B
	0x03C0FEBC LDP D11, D10, [X31], #0x30
	0x03C0FEC0 BR X0
	0x03C0FEC4 STP D11, D10, [X31 - 0x30]!
	0x03C0FEC8 STP D9, D8, [X31 + 0x10]
	0x03C0FECC STP X30, X19, [X31 + 0x20]
	0x03C0FED0 ADRP X19, 0x7D5000
	0x03C0FED4 LDR X0, [X19 + 0x420]
	0x03C0FED8 MOV V8.16B, V3.16B
	0x03C0FEDC MOV V9.16B, V2.16B
	0x03C0FEE0 MOV V10.16B, V1.16B
	0x03C0FEE4 MOV V11.16B, V0.16B
	0x03C0FEE8 CBNZ X0, 0x3C0FEFC
	0x03C0FEEC ADRP X0, 0xFFFFFFFFFCF07000
	0x03C0FEF0 ADD X0, X0, 0x6BF
	0x03C0FEF4 BL 0x1C16CB8
	0x03C0FEF8 STR X0, [X19 + 0x420]
	0x03C0FEFC MOV V2.16B, V9.16B
	0x03C0FF00 MOV V3.16B, V8.16B
	0x03C0FF04 LDP X30, X19, [X31 + 0x20]
	0x03C0FF08 LDP D9, D8, [X31 + 0x10]
	0x03C0FF0C MOV V0.16B, V11.16B
	0x03C0FF10 MOV V1.16B, V10.16B
	0x03C0FF14 LDP D11, D10, [X31], #0x30
	0x03C0FF18 BR X0
	0x03C0FF1C STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move [X31+8], X7
	015 Move [X31], W5
	016 Move [X31+4], W6
	017 Move X20, 0x7D6000
	018 Move X21, 0x4E9000
	019 Move W27, [X31+136]
	020 Move W28, [X31+128]
	021 Move W29, [X31+120]
	022 Move W8, [X20+988]
	023 Move W19, [X31+112]
	024 Move X21, [X21+712]
	025 Move W22, W4
	026 Move W23, W3
	027 Move W24, W2
	028 Move W25, W1
	029 Move X26, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X0, 0x4E9000
	035 Move X0, [X0+712]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+988], W8
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X20, 0x7D6000
	045 Move X8, [X20+920]
	046 Compare X8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, -51347456
	049 Add X0, X0, 1515
	050 Call 0x1C17CB8
	051 Move X8, X0
	052 Move [X20+920], X0
	053 Move [X31+136], W27
	054 Move [X31+128], W28
	055 Move [X31+120], W29
	056 Move [X31+112], W19
	057 Move X0, X26
	058 Move W1, W25
	059 Move W2, W24
	060 Move W3, W23
	061 Move W4, W22
	062 Move W5, [X31]
	063 Move W6, [X31+4]
	064 Move X7, [X31+8]
	065 Move X20, [X31+96]
	066 Move X19, [X31+104]
	067 Move X22, [X31+80]
	068 Move X21, [X31+88]
	069 Move X24, [X31+64]
	070 Move X23, [X31+72]
	071 Move X26, [X31+48]
	072 Move X25, [X31+56]
	073 Move X28, [X31+32]
	074 Move X27, [X31+40]
	075 Move X29, [X31+16]
	076 Move X30, [X31+24]
	077 Add X31, X31, 112
	078 CallNoReturn X8

Method: System.Void DrawMeshNow(UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, System.Int32 materialIndex)

Disassembly:
	0x03C0FF20 ADRP X19, 0x7D5000
	0x03C0FF24 LDR X0, [X19 + 0x428]
	0x03C0FF28 CBNZ X0, 0x3C0FF3C
	0x03C0FF2C ADRP X0, 0xFFFFFFFFFCEF3000
	0x03C0FF30 ADD X0, X0, 0xD4C
	0x03C0FF34 BL 0x1C16CB8
	0x03C0FF38 STR X0, [X19 + 0x428]
	0x03C0FF3C LDP X30, X19, [X31], #0x10
	0x03C0FF40 BR X0
	0x03C0FF44 STR X30, [X31 - 0x20]!
	0x03C0FF48 STP X20, X19, [X31 + 0x10]
	0x03C0FF4C ADRP X20, 0x7D5000
	0x03C0FF50 LDR X1, [X20 + 0x430]
	0x03C0FF54 MOV W19, W0
	0x03C0FF58 CBNZ X1, 0x3C0FF70
	0x03C0FF5C ADRP X0, 0xFFFFFFFFFCF0B000
	0x03C0FF60 ADD X0, X0, 0x942
	0x03C0FF64 BL 0x1C16CB8
	0x03C0FF68 MOV X1, X0
	0x03C0FF6C STR X0, [X20 + 0x430]
	0x03C0FF70 AND W0, W19, 0x1
	0x03C0FF74 LDP X20, X19, [X31 + 0x10]
	0x03C0FF78 LDR X30, [X31], #0x20
	0x03C0FF7C BR X1
	0x03C0FF80 STR X30, [X31 - 0x20]!
	0x03C0FF84 STP X20, X19, [X31 + 0x10]
	0x03C0FF88 ADRP X20, 0x7D5000
	0x03C0FF8C LDR X1, [X20 + 0x470]
	0x03C0FF90 MOV X19, X0
	0x03C0FF94 CBNZ X1, 0x3C0FFAC
	0x03C0FF98 ADRP X0, 0xFFFFFFFFFCF0F000
	0x03C0FF9C ADD X0, X0, 0x900
	0x03C0FFA0 BL 0x1C16CB8
	0x03C0FFA4 MOV X1, X0
	0x03C0FFA8 STR X0, [X20 + 0x470]
	0x03C0FFAC MOV X0, X19
	0x03C0FFB0 LDP X20, X19, [X31 + 0x10]
	0x03C0FFB4 LDR X30, [X31], #0x20
	0x03C0FFB8 BR X1
	0x03C0FFBC STR X30, [X31 - 0x20]!
	0x03C0FFC0 STP X20, X19, [X31 + 0x10]
	0x03C0FFC4 ADRP X20, 0x7D5000
	0x03C0FFC8 LDR X1, [X20 + 0x470]
	0x03C0FFCC MOV X19, X0
	0x03C0FFD0 CBNZ X1, 0x3C0FFE8
	0x03C0FFD4 ADRP X0, 0xFFFFFFFFFCF0F000
	0x03C0FFD8 ADD X0, X0, 0x900
	0x03C0FFDC BL 0x1C16CB8
	0x03C0FFE0 MOV X1, X0
	0x03C0FFE4 STR X0, [X20 + 0x470]
	0x03C0FFE8 MOV X0, X19
	0x03C0FFEC LDP X20, X19, [X31 + 0x10]
	0x03C0FFF0 LDR X30, [X31], #0x20
	0x03C0FFF4 BR X1
	0x03C0FFF8 SUB X31, X31, 0x50
	0x03C0FFFC STP X30, X19, [X31 + 0x40]
	0x03C10000 ADRP X19, 0x7D4000
	0x03C10004 LDP V0, V1, [X0 + 0x20]
	0x03C10008 LDP V2, V3, [X0]
	0x03C1000C LDR X8, [X19 + 0x470]
	0x03C10010 STP V0, V1, [X31 + 0x20]
	0x03C10014 STP V2, V3, [X31]
	0x03C10018 CBNZ X8, 0x3C10030
	0x03C1001C ADRP X0, 0xFFFFFFFFFCF0E000
	0x03C10020 ADD X0, X0, 0x900
	0x03C10024 BL 0x1C16CB8
	0x03C10028 MOV X8, X0
	0x03C1002C STR X0, [X19 + 0x470]
	0x03C10030 ADD X0, X31, 0x0
	0x03C10034 BLR X8

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 Move X22, 0x7D6000
	009 Move X23, 0x4E5000
	010 Move W8, [X22+989]
	011 Move X23, [X23+1432]
	012 Move W19, W2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x4E9000
	020 Move X0, [X0+712]
	021 Call 0x1C17CF4
	022 Move X0, 0x4E5000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+989], W8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {75}
	040 Move X8, 0x4E9000
	041 Move X8, [X8+712]
	042 Move V0, [X21+32]
	043 Move V1, [X21+48]
	044 Move V2, [X21]
	045 Move V3, [X21+16]
	046 Move X0, [X8]
	047 Move [X31+96], V0
	048 Move [X31+104], V1
	049 Move [X31+64], V2
	050 Move [X31+72], V3
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move V0, [X31+64]
	056 Move V1, [X31+80]
	057 Move V2, [X31+96]
	058 Move V3, [X31+112]
	059 Add X2, X31, 0
	060 Move X0, X20
	061 Move W1, W19
	062 Move [X31], V0
	063 Move [X31+8], V1
	064 Move [X31+32], V2
	065 Move [X31+40], V3
	066 Call Graphics.Internal_DrawMeshNow2, X0, X1, X2
	067 Move X20, [X31+160]
	068 Move X19, [X31+168]
	069 Move X22, [X31+144]
	070 Move X21, [X31+152]
	071 Move X30, [X31+128]
	072 Move X23, [X31+136]
	073 Add X31, X31, 176
	074 Return 
	075 Move X0, 0x4EA000
	076 Move X0, [X0+1320]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X19, X0
	080 Move X0, 0x53E000
	081 Move X0, [X0+3728]
	082 Call 0x1C17D08
	083 Move X1, X0
	084 Move X0, X19
	085 Move X2, X31
	086 Call ArgumentNullException..ctor, X0, X1
	087 Move X0, 0x54F000
	088 Move X0, [X0+3312]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Call 0x1C17DEC

Method: System.Void DrawMesh(UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 layer, UnityEngine.Camera camera, System.Int32 submeshIndex, UnityEngine.MaterialPropertyBlock properties, UnityEngine.Rendering.ShadowCastingMode castShadows, System.Boolean receiveShadows, UnityEngine.Transform probeAnchor, UnityEngine.Rendering.LightProbeUsage lightProbeUsage, UnityEngine.LightProbeProxyVolume lightProbeProxyVolume)

Disassembly:
	0x03C10038 LDP X30, X19, [X31 + 0x40]
	0x03C1003C ADD X31, X31, 0x50
	0x03C10040 RET
	0x03C10044 STP X30, X19, [X31 - 0x10]!
	0x03C10048 ADRP X19, 0x7D4000
	0x03C1004C LDR X0, [X19 + 0x438]
	0x03C10050 CBNZ X0, 0x3C10064
	0x03C10054 ADRP X0, 0xFFFFFFFFFCF1A000
	0x03C10058 ADD X0, X0, 0x599
	0x03C1005C BL 0x1C16CB8
	0x03C10060 STR X0, [X19 + 0x438]
	0x03C10064 LDP X30, X19, [X31], #0x10
	0x03C10068 BR X0
	0x03C1006C STP X30, X19, [X31 - 0x10]!
	0x03C10070 ADRP X19, 0x7D4000
	0x03C10074 LDR X0, [X19 + 0x440]
	0x03C10078 CBNZ X0, 0x3C1008C
	0x03C1007C ADRP X0, 0xFFFFFFFFFCF1A000
	0x03C10080 ADD X0, X0, 0x5B6
	0x03C10084 BL 0x1C16CB8
	0x03C10088 STR X0, [X19 + 0x440]
	0x03C1008C LDP X30, X19, [X31], #0x10
	0x03C10090 BR X0
	0x03C10094 STP X30, X19, [X31 - 0x10]!
	0x03C10098 ADRP X19, 0x7D4000
	0x03C1009C LDR X0, [X19 + 0x448]
	0x03C100A0 CBNZ X0, 0x3C100B4
	0x03C100A4 ADRP X0, 0xFFFFFFFFFCEF2000
	0x03C100A8 ADD X0, X0, 0xD6C
	0x03C100AC BL 0x1C16CB8
	0x03C100B0 STR X0, [X19 + 0x448]
	0x03C100B4 LDP X30, X19, [X31], #0x10
	0x03C100B8 BR X0
	0x03C100BC STP X30, X19, [X31 - 0x10]!
	0x03C100C0 ADRP X19, 0x7D4000
	0x03C100C4 LDR X0, [X19 + 0x450]
	0x03C100C8 CBNZ X0, 0x3C100DC
	0x03C100CC ADRP X0, 0xFFFFFFFFFCEE5000
	0x03C100D0 ADD X0, X0, 0x167
	0x03C100D4 BL 0x1C16CB8
	0x03C100D8 STR X0, [X19 + 0x450]
	0x03C100DC LDP X30, X19, [X31], #0x10
	0x03C100E0 BR X0
	0x03C100E4 STR X30, [X31 - 0x20]!
	0x03C100E8 STP X20, X19, [X31 + 0x10]
	0x03C100EC ADRP X20, 0x7D4000
	0x03C100F0 LDR X1, [X20 + 0x478]
	0x03C100F4 MOV X19, X0
	0x03C100F8 CBNZ X1, 0x3C10110
	0x03C100FC ADRP X0, 0xFFFFFFFFFCEE6000
	0x03C10100 ADD X0, X0, 0xF4C
	0x03C10104 BL 0x1C16CB8
	0x03C10108 MOV X1, X0
	0x03C1010C STR X0, [X20 + 0x478]
	0x03C10110 MOV X0, X19
	0x03C10114 LDP X20, X19, [X31 + 0x10]
	0x03C10118 LDR X30, [X31], #0x20
	0x03C1011C BR X1
	0x03C10120 STR X30, [X31 - 0x20]!
	0x03C10124 STP X20, X19, [X31 + 0x10]
	0x03C10128 ADRP X20, 0x7D4000
	0x03C1012C LDR X1, [X20 + 0x478]
	0x03C10130 MOV X19, X0
	0x03C10134 CBNZ X1, 0x3C1014C
	0x03C10138 ADRP X0, 0xFFFFFFFFFCEE6000
	0x03C1013C ADD X0, X0, 0xF4C
	0x03C10140 BL 0x1C16CB8
	0x03C10144 MOV X1, X0
	0x03C10148 STR X0, [X20 + 0x478]
	0x03C1014C MOV X0, X19
	0x03C10150 LDP X20, X19, [X31 + 0x10]
	0x03C10154 LDR X30, [X31], #0x20
	0x03C10158 BR X1
	0x03C1015C SUB X31, X31, 0x70
	0x03C10160 STR X30, [X31 + 0x40]
	0x03C10164 STP X22, X21, [X31 + 0x50]
	0x03C10168 STP X20, X19, [X31 + 0x60]
	0x03C1016C ADRP X22, 0x7D4000
	0x03C10170 MOV X19, X8
	0x03C10174 LDR X8, [X22 + 0x480]
	0x03C10178 MOV W21, W1
	0x03C1017C MOV X20, X0
	0x03C10180 MOVI V0.2D, 0x0
	0x03C10184 STP V0, V0, [X31 + 0x20]
	0x03C10188 STP V0, V0, [X31]
	0x03C1018C CBNZ X8, 0x3C101A4
	0x03C10190 ADRP X0, 0xFFFFFFFFFCF0E000
	0x03C10194 ADD X0, X0, 0x93F
	0x03C10198 BL 0x1C16CB8
	0x03C1019C MOV X8, X0
	0x03C101A0 STR X0, [X22 + 0x480]
	0x03C101A4 AND W1, W21, 0x1
	0x03C101A8 ADD X2, X31, 0x0
	0x03C101AC MOV X0, X20
	0x03C101B0 BLR X8
	0x03C101B4 LDP V1, V0, [X31 + 0x20]
	0x03C101B8 LDP V3, V2, [X31]
	0x03C101BC LDP X22, X21, [X31 + 0x50]
	0x03C101C0 LDR X30, [X31 + 0x40]
	0x03C101C4 STP V1, V0, [X19 + 0x20]
	0x03C101C8 STP V3, V2, [X19]
	0x03C101CC LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+184], X30
	004 Move [X31+192], X28
	005 Move [X31+200], X27
	006 Move [X31+208], X26
	007 Move [X31+216], X25
	008 Move [X31+224], X24
	009 Move [X31+232], X23
	010 Move [X31+240], X22
	011 Move [X31+248], X21
	012 Move [X31+256], X20
	013 Move [X31+264], X19
	014 Move X26, 0x7D5000
	015 Move W8, [X26+990]
	016 Move W28, [X31+288]
	017 Move W19, W7
	018 Move X20, X6
	019 Move W22, W5
	020 Move X21, X4
	021 Move W23, W3
	022 Move X24, X2
	023 Move X27, X1
	024 Move X25, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x4E8000
	030 Move X0, [X0+712]
	031 Call 0x1C17CF4
	032 Move X0, 0x4E4000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+990], W8
	037 Move X26, [X31+296]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, 0x4E4000
	040 Move X8, [X8+1432]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X26
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {107}
	054 Move X8, 0x4E8000
	055 Move X8, [X8+712]
	056 Move V0, [X27+32]
	057 Move V1, [X27+48]
	058 Move V2, [X27]
	059 Move V3, [X27+16]
	060 Move X29, [X31+280]
	061 Move X0, [X8]
	062 Move [X31+144], V0
	063 Move [X31+152], V1
	064 Move [X31+112], V2
	065 Move [X31+120], V3
	066 Move W27, [X31+272]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move V0, [X31+112]
	072 Move V1, [X31+128]
	073 Move V2, [X31+144]
	074 Move V3, [X31+160]
	075 And W8, W27, 1
	076 Add X2, X31, 48
	077 Move X0, X25
	078 Move W1, W22
	079 Move X3, X24
	080 Move W4, W23
	081 Move X5, X21
	082 Move X6, X20
	083 Move W7, W19
	084 Move [X31+48], V0
	085 Move [X31+56], V1
	086 Move [X31+80], V2
	087 Move [X31+88], V3
	088 Move [X31+24], X26
	089 Move [X31+16], W28
	090 Move [X31+8], X29
	091 Move [X31], W8
	092 Call Graphics.Internal_DrawMesh, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	093 Move X20, [X31+256]
	094 Move X19, [X31+264]
	095 Move X22, [X31+240]
	096 Move X21, [X31+248]
	097 Move X24, [X31+224]
	098 Move X23, [X31+232]
	099 Move X26, [X31+208]
	100 Move X25, [X31+216]
	101 Move X28, [X31+192]
	102 Move X27, [X31+200]
	103 Move X29, [X31+176]
	104 Move X30, [X31+184]
	105 Add X31, X31, 272
	106 Return 
	107 Move X0, 0x4EC000
	108 Move X0, [X0+1400]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0x54F000
	113 Move X0, [X0+3320]
	114 Call 0x1C17D08
	115 Move X20, X0
	116 Move X0, 0x54F000
	117 Move X0, [X0+3328]
	118 Call 0x1C17D08
	119 Move X2, X0
	120 Move X0, X19
	121 Move X1, X20
	122 Move X3, X31
	123 Call ArgumentException..ctor, X0, X1, X2
	124 Move X0, 0x54F000
	125 Move X0, [X0+3336]
	126 Call 0x1C17D08
	127 Move X1, X0
	128 Move X0, X19
	129 Call 0x1C17DEC

Method: System.Void DrawMeshInstanced(UnityEngine.Mesh mesh, System.Int32 submeshIndex, UnityEngine.Material material, UnityEngine.Matrix4x4[] matrices, System.Int32 count, UnityEngine.MaterialPropertyBlock properties, UnityEngine.Rendering.ShadowCastingMode castShadows, System.Boolean receiveShadows, System.Int32 layer, UnityEngine.Camera camera, UnityEngine.Rendering.LightProbeUsage lightProbeUsage, UnityEngine.LightProbeProxyVolume lightProbeProxyVolume)

Disassembly:
	0x03C101D0 ADD X31, X31, 0x70
	0x03C101D4 RET
	0x03C101D8 STR X30, [X31 - 0x30]!
	0x03C101DC STP X22, X21, [X31 + 0x10]
	0x03C101E0 STP X20, X19, [X31 + 0x20]
	0x03C101E4 ADRP X22, 0x7D4000
	0x03C101E8 LDR X3, [X22 + 0x480]
	0x03C101EC MOV X19, X2
	0x03C101F0 MOV W20, W1
	0x03C101F4 MOV X21, X0
	0x03C101F8 CBNZ X3, 0x3C10210
	0x03C101FC ADRP X0, 0xFFFFFFFFFCF0E000
	0x03C10200 ADD X0, X0, 0x93F
	0x03C10204 BL 0x1C16CB8
	0x03C10208 MOV X3, X0
	0x03C1020C STR X0, [X22 + 0x480]
	0x03C10210 AND W1, W20, 0x1
	0x03C10214 MOV X0, X21
	0x03C10218 MOV X2, X19
	0x03C1021C LDP X20, X19, [X31 + 0x20]
	0x03C10220 LDP X22, X21, [X31 + 0x10]
	0x03C10224 LDR X30, [X31], #0x30
	0x03C10228 BR X3
	0x03C1022C STP D11, D10, [X31 - 0x30]!
	0x03C10230 STP D9, D8, [X31 + 0x10]
	0x03C10234 STP X30, X19, [X31 + 0x20]
	0x03C10238 ADRP X19, 0x7D4000
	0x03C1023C LDR X0, [X19 + 0x458]
	0x03C10240 MOV V8.16B, V3.16B
	0x03C10244 MOV V9.16B, V2.16B
	0x03C10248 MOV V10.16B, V1.16B
	0x03C1024C MOV V11.16B, V0.16B
	0x03C10250 CBNZ X0, 0x3C10264
	0x03C10254 ADRP X0, 0xFFFFFFFFFCF1A000
	0x03C10258 ADD X0, X0, 0x5D2
	0x03C1025C BL 0x1C16CB8
	0x03C10260 STR X0, [X19 + 0x458]
	0x03C10264 MOV V2.16B, V9.16B
	0x03C10268 MOV V3.16B, V8.16B
	0x03C1026C LDP X30, X19, [X31 + 0x20]
	0x03C10270 LDP D9, D8, [X31 + 0x10]
	0x03C10274 MOV V0.16B, V11.16B
	0x03C10278 MOV V1.16B, V10.16B
	0x03C1027C LDP D11, D10, [X31], #0x30
	0x03C10280 BR X0
	0x03C10284 STP D11, D10, [X31 - 0x30]!
	0x03C10288 STP D9, D8, [X31 + 0x10]
	0x03C1028C STP X30, X19, [X31 + 0x20]
	0x03C10290 ADRP X19, 0x7D4000
	0x03C10294 LDR X0, [X19 + 0x458]
	0x03C10298 MOV V8.16B, V3.16B
	0x03C1029C MOV V9.16B, V2.16B
	0x03C102A0 MOV V10.16B, V1.16B
	0x03C102A4 MOV V11.16B, V0.16B
	0x03C102A8 CBNZ X0, 0x3C102BC
	0x03C102AC ADRP X0, 0xFFFFFFFFFCF1A000
	0x03C102B0 ADD X0, X0, 0x5D2
	0x03C102B4 BL 0x1C16CB8
	0x03C102B8 STR X0, [X19 + 0x458]
	0x03C102BC MOV V2.16B, V9.16B
	0x03C102C0 MOV V3.16B, V8.16B
	0x03C102C4 LDP X30, X19, [X31 + 0x20]
	0x03C102C8 LDP D9, D8, [X31 + 0x10]
	0x03C102CC MOV V0.16B, V11.16B
	0x03C102D0 MOV V1.16B, V10.16B
	0x03C102D4 LDP D11, D10, [X31], #0x30
	0x03C102D8 BR X0
	0x03C102DC STR X30, [X31 - 0x20]!
	0x03C102E0 STP X20, X19, [X31 + 0x10]
	0x03C102E4 ADRP X20, 0x7D4000
	0x03C102E8 LDR X1, [X20 + 0x460]
	0x03C102EC MOV W19, W0
	0x03C102F0 CBNZ X1, 0x3C10308
	0x03C102F4 ADRP X0, 0xFFFFFFFFFCF02000
	0x03C102F8 ADD X0, X0, 0x9F6
	0x03C102FC BL 0x1C16CB8
	0x03C10300 MOV X1, X0
	0x03C10304 STR X0, [X20 + 0x460]
	0x03C10308 MOV W0, W19
	0x03C1030C LDP X20, X19, [X31 + 0x10]
	0x03C10310 LDR X30, [X31], #0x20
	0x03C10314 BR X1
	0x03C10318 STP X30, X19, [X31 - 0x10]!
	0x03C1031C ADRP X19, 0x7D4000
	0x03C10320 LDR X0, [X19 + 0x468]
	0x03C10324 CBNZ X0, 0x3C10338
	0x03C10328 ADRP X0, 0xFFFFFFFFFCEFF000
	0x03C1032C ADD X0, X0, 0x75
	0x03C10330 BL 0x1C16CB8
	0x03C10334 STR X0, [X19 + 0x468]
	0x03C10338 LDP X30, X19, [X31], #0x10
	0x03C1033C BR X0
	0x03C10340 SUB X31, X31, 0x40
	0x03C10344 STR D8, [X31 + 0x10]
	0x03C10348 STP X30, X21, [X31 + 0x20]
	0x03C1034C STP X20, X19, [X31 + 0x30]
	0x03C10350 ADRP X21, 0x7D4000
	0x03C10354 LDR X8, [X21 + 0x488]
	0x03C10358 MOV V8.16B, V4.16B
	0x03C1035C MOV W19, W1
	0x03C10360 MOV W20, W0
	0x03C10364 STP S0, S1, [X31]
	0x03C10368 STP S2, S3, [X31 + 0x8]
	0x03C1036C CBNZ X8, 0x3C10384
	0x03C10370 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C10374 ADD X0, X0, 0xE3B
	0x03C10378 BL 0x1C16CB8
	0x03C1037C MOV X8, X0
	0x03C10380 STR X0, [X21 + 0x488]
	0x03C10384 AND W0, W20, 0x1
	0x03C10388 AND W1, W19, 0x1
	0x03C1038C ADD X2, X31, 0x0
	0x03C10390 MOV V0.16B, V8.16B
	0x03C10394 BLR X8
	0x03C10398 LDP X20, X19, [X31 + 0x30]
	0x03C1039C LDP X30, X21, [X31 + 0x20]
	0x03C103A0 LDR V8, [X31 + 0x10]
	0x03C103A4 ADD X31, X31, 0x40
	0x03C103A8 RET
	0x03C103AC STR D8, [X31 - 0x30]!
	0x03C103B0 STR X30, [X31 + 0x8]
	0x03C103B4 STP X22, X21, [X31 + 0x10]
	0x03C103B8 STP X20, X19, [X31 + 0x20]
	0x03C103BC ADRP X22, 0x7D4000
	0x03C103C0 LDR X3, [X22 + 0x488]
	0x03C103C4 MOV V8.16B, V0.16B
	0x03C103C8 MOV X19, X2
	0x03C103CC MOV W20, W1
	0x03C103D0 MOV W21, W0
	0x03C103D4 CBNZ X3, 0x3C103EC
	0x03C103D8 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C103DC ADD X0, X0, 0xE3B
	0x03C103E0 BL 0x1C16CB8
	0x03C103E4 MOV X3, X0
	0x03C103E8 STR X0, [X22 + 0x488]
	0x03C103EC AND W0, W21, 0x1
	0x03C103F0 AND W1, W20, 0x1
	0x03C103F4 MOV X2, X19
	0x03C103F8 LDP X20, X19, [X31 + 0x20]
	0x03C103FC LDP X22, X21, [X31 + 0x10]
	0x03C10400 LDR X30, [X31 + 0x8]
	0x03C10404 MOV V0.16B, V8.16B
	0x03C10408 LDR V8, [X31], #0x30
	0x03C1040C BR X3
	0x03C10410 AND W0, W0, 0x1
	0x03C10414 AND W1, W1, 0x1
	0x03C10418 B 0x3C10340
	0x03C1041C AND W0, W0, 0x1
	0x03C10420 AND W1, W1, 0x1
	0x03C10424 FMOV S4, 1
	0x03C10428 B 0x3C10340
	0x03C1042C SUB X31, X31, 0x20
	0x03C10430 STP X30, X19, [X31 + 0x10]
	0x03C10434 ADRP X19, 0x7D4000
	0x03C10438 LDR X8, [X19 + 0x490]
	0x03C1043C STP S0, S1, [X31]
	0x03C10440 STP S2, S3, [X31 + 0x8]
	0x03C10444 CBNZ X8, 0x3C1045C
	0x03C10448 ADRP X0, 0xFFFFFFFFFCEFF000
	0x03C1044C ADD X0, X0, 0x8B
	0x03C10450 BL 0x1C16CB8
	0x03C10454 MOV X8, X0
	0x03C10458 STR X0, [X19 + 0x490]
	0x03C1045C ADD X0, X31, 0x0
	0x03C10460 BLR X8
	0x03C10464 LDP X30, X19, [X31 + 0x10]
	0x03C10468 ADD X31, X31, 0x20
	0x03C1046C RET
	0x03C10470 STR X30, [X31 - 0x20]!
	0x03C10474 STP X20, X19, [X31 + 0x10]
	0x03C10478 ADRP X20, 0x7D4000
	0x03C1047C LDR X1, [X20 + 0x490]
	0x03C10480 MOV X19, X0
	0x03C10484 CBNZ X1, 0x3C1049C
	0x03C10488 ADRP X0, 0xFFFFFFFFFCEFF000
	0x03C1048C ADD X0, X0, 0x8B
	0x03C10490 BL 0x1C16CB8
	0x03C10494 MOV X1, X0
	0x03C10498 STR X0, [X20 + 0x490]
	0x03C1049C MOV X0, X19
	0x03C104A0 LDP X20, X19, [X31 + 0x10]
	0x03C104A4 LDR X30, [X31], #0x20
	0x03C104A8 BR X1
	0x03C104AC STP X30, X19, [X31 - 0x10]!
	0x03C104B0 ADRP X19, 0x7D4000
	0x03C104B4 LDR X0, [X19 + 0x498]
	0x03C104B8 CBNZ X0, 0x3C104CC
	0x03C104BC ADRP X0, 0xFFFFFFFFFCF18000
	0x03C104C0 ADD X0, X0, 0x44B
	0x03C104C4 BL 0x1C16CB8
	0x03C104C8 STR X0, [X19 + 0x498]
	0x03C104CC LDP X30, X19, [X31], #0x10
	0x03C104D0 BR X0
	0x03C104D4 STP X30, X19, [X31 - 0x10]!
	0x03C104D8 ADRP X19, 0x7D4000
	0x03C104DC LDR X0, [X19 + 0x4A0]
	0x03C104E0 CBNZ X0, 0x3C104F4
	0x03C104E4 ADRP X0, 0xFFFFFFFFFCF0A000
	0x03C104E8 ADD X0, X0, 0x970
	0x03C104EC BL 0x1C16CB8
	0x03C104F0 STR X0, [X19 + 0x4A0]
	0x03C104F4 LDP X30, X19, [X31], #0x10
	0x03C104F8 BR X0
	0x03C104FC STP D9, D8, [X31 - 0x20]!
	0x03C10500 STP X30, X19, [X31 + 0x10]
	0x03C10504 ADRP X19, 0x7D4000
	0x03C10508 LDR X0, [X19 + 0x4A8]
	0x03C1050C MOV V8.16B, V1.16B
	0x03C10510 MOV V9.16B, V0.16B
	0x03C10514 CBNZ X0, 0x3C10528
	0x03C10518 ADRP X0, 0xFFFFFFFFFCEF5000
	0x03C1051C ADD X0, X0, 0x18
	0x03C10520 BL 0x1C16CB8
	0x03C10524 STR X0, [X19 + 0x4A8]
	0x03C10528 LDP X30, X19, [X31 + 0x10]
	0x03C1052C MOV V0.16B, V9.16B
	0x03C10530 MOV V1.16B, V8.16B
	0x03C10534 LDP D9, D8, [X31], #0x20
	0x03C10538 BR X0
	0x03C1053C STP X30, X19, [X31 - 0x10]!
	0x03C10540 ADRP X19, 0x7D4000
	0x03C10544 LDR X0, [X19 + 0x4B0]
	0x03C10548 CBNZ X0, 0x3C1055C
	0x03C1054C ADRP X0, 0xFFFFFFFFFCEE0000
	0x03C10550 ADD X0, X0, 0xCAD
	0x03C10554 BL 0x1C16CB8
	0x03C10558 STR X0, [X19 + 0x4B0]
	0x03C1055C LDP X30, X19, [X31], #0x10
	0x03C10560 BR X0
	0x03C10564 STP X30, X21, [X31 - 0x20]!
	0x03C10568 STP X20, X19, [X31 + 0x10]
	0x03C1056C ADRP X21, 0x7D4000
	0x03C10570 LDR X2, [X21 + 0x4B8]
	0x03C10574 MOV X19, X1
	0x03C10578 MOV W20, W0
	0x03C1057C CBNZ X2, 0x3C10594
	0x03C10580 ADRP X0, 0xFFFFFFFFFCEE0000
	0x03C10584 ADD X0, X0, 0xCE3
	0x03C10588 BL 0x1C16CB8
	0x03C1058C MOV X2, X0
	0x03C10590 STR X0, [X21 + 0x4B8]
	0x03C10594 MOV W0, W20
	0x03C10598 MOV X1, X19
	0x03C1059C LDP X20, X19, [X31 + 0x10]
	0x03C105A0 LDP X30, X21, [X31], #0x20
	0x03C105A4 BR X2
	0x03C105A8 STR X30, [X31 - 0x20]!
	0x03C105AC STP X20, X19, [X31 + 0x10]
	0x03C105B0 ADRP X19, 0x7D4000
	0x03C105B4 ADRP X20, 0x54E000
	0x03C105B8 LDRB W8, [X19 + 0x4C0]
	0x03C105BC LDR X20, [X20 + 0xD60]
	0x03C105C0 TBNZ X8, 0x0, 0x3C105D8
	0x03C105C4 ADRP X0, 0x54E000
	0x03C105C8 LDR X0, [X0 + 0xD60]
	0x03C105CC BL 0x1C16CF4
	0x03C105D0 MOVZ W8, 0x1
	0x03C105D4 STRB W8, [X19 + 0x4C0]
	0x03C105D8 LDR X8, [X20]
	0x03C105DC LDR X8, [X8 + 0xB8]
	0x03C105E0 LDR X8, [X8]
	0x03C105E4 CBZ X8, 0x3C10600
	0x03C105E8 LDR X2, [X8 + 0x18]
	0x03C105EC LDR X0, [X8 + 0x40]
	0x03C105F0 LDR X1, [X8 + 0x28]
	0x03C105F4 LDP X20, X19, [X31 + 0x10]
	0x03C105F8 LDR X30, [X31], #0x20
	0x03C105FC BR X2
	0x03C10600 LDP X20, X19, [X31 + 0x10]
	0x03C10604 LDR X30, [X31], #0x20
	0x03C10608 RET
	0x03C1060C STR X30, [X31 - 0x20]!
	0x03C10610 STP X20, X19, [X31 + 0x10]
	0x03C10614 ADRP X19, 0x7D4000
	0x03C10618 ADRP X20, 0x54E000
	0x03C1061C LDRB W8, [X19 + 0x4C1]
	0x03C10620 LDR X20, [X20 + 0xD60]
	0x03C10624 TBNZ X8, 0x0, 0x3C1063C
	0x03C10628 ADRP X0, 0x54E000
	0x03C1062C LDR X0, [X0 + 0xD60]
	0x03C10630 BL 0x1C16CF4
	0x03C10634 MOVZ W8, 0x1
	0x03C10638 STRB W8, [X19 + 0x4C1]
	0x03C1063C LDR X8, [X20]
	0x03C10640 LDR X8, [X8 + 0xB8]
	0x03C10644 LDR X8, [X8 + 0x8]
	0x03C10648 CBZ X8, 0x3C10664
	0x03C1064C LDR X2, [X8 + 0x18]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x7D5000
	015 Move X26, [X31+152]
	016 Move W28, [X31+144]
	017 Move X29, [X31+136]
	018 Move W8, [X21+991]
	019 Move W20, [X31+128]
	020 Move W22, W4
	021 Move X19, X3
	022 Move X24, X2
	023 Move W25, W1
	024 Move X27, X0
	025 Move [X31+12], W7
	026 Move [X31+24], W6
	027 Move [X31+16], X5
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {40}
	032 Move X0, 0x4E8000
	033 Move X0, [X0+712]
	034 Call 0x1C17CF4
	035 Move X0, 0x4E4000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+991], W8
	040 Move X0, X31
	041 Call SystemInfo.get_supportsInstancing
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {264}
	046 Move X21, 0x4E4000
	047 Move X21, [X21+1432]
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X27
	054 Move X1, X31
	055 Move X2, X31
	056 Call Object.op_Equality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {271}
	061 Move TEMP, X25
	062 And TEMP, TEMP, -2147483648
	063 Compare TEMP, -2147483648
	064 JumpIfEqual {199}
	065 Compare X27, 0
	066 JumpIfEqual {216}
	067 Move X23, 0x7D5000
	068 Move X8, [X23+2896]
	069 Compare X8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, -51396608
	072 Add X0, X0, 373
	073 Call 0x1C17CB8
	074 Move X8, X0
	075 Move [X23+2896], X0
	076 Move X0, X27
	077 NotImplemented "Instruction BLR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X21]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X24
	085 Move X1, X31
	086 Move X2, X31
	087 Call Object.op_Equality, X0, X1
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {278}
	092 Compare X24, 0
	093 JumpIfEqual {216}
	094 Move X23, 0x7D5000
	095 Move X8, [X23+2264]
	096 Compare X8, 0
	097 JumpIfNotEqual {103}
	098 Move X0, -51286016
	099 Add X0, X0, 3124
	100 Call 0x1C17CB8
	101 Move X8, X0
	102 Move [X23+2264], X0
	103 Move X0, X24
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {285}
	109 Compare X19, 0
	110 JumpIfEqual {297}
	111 Move TEMP, X22
	112 And TEMP, TEMP, -2147483648
	113 Compare TEMP, -2147483648
	114 JumpIfEqual {217}
	115 Move X23, 0x4E8000
	116 Move X23, [X23+712]
	117 Move X0, [X23]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {123}
	121 Call 0x1C17DFC
	122 Move X0, [X23]
	123 Move X8, [X0+184]
	124 Move W9, [X19+24]
	125 Move W8, [X8]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 NotImplemented "Instruction CSEL not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, [X21]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X26
	136 Move X1, X31
	137 Move X2, X31
	138 Call Object.op_Equality, X0, X1
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {315}
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, [X23]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X21, 0x7D5000
	150 Move X8, [X21+952]
	151 Compare X8, 0
	152 JumpIfNotEqual {158}
	153 Move X0, -51384320
	154 Add X0, X0, 3882
	155 Call 0x1C17CB8
	156 Move X8, X0
	157 Move [X21+952], X0
	158 Move W9, [X31+12]
	159 Move [X31+152], X26
	160 Move [X31+144], W28
	161 Move [X31+136], X29
	162 Move [X31+128], W20
	163 Move X0, X27
	164 Move W1, W25
	165 Move X2, X24
	166 Move X3, X19
	167 Move W4, W22
	168 Move X5, [X31+16]
	169 Move W6, [X31+24]
	170 Move X20, [X31+112]
	171 Move X19, [X31+120]
	172 Move X22, [X31+96]
	173 Move X21, [X31+104]
	174 Move X24, [X31+80]
	175 Move X23, [X31+88]
	176 Move X26, [X31+64]
	177 Move X25, [X31+72]
	178 Move X28, [X31+48]
	179 Move X27, [X31+56]
	180 Move X29, [X31+32]
	181 Move X30, [X31+40]
	182 And W7, W9, 1
	183 Add X31, X31, 128
	184 CallNoReturn X8
	185 Move X20, [X31+112]
	186 Move X19, [X31+120]
	187 Move X22, [X31+96]
	188 Move X21, [X31+104]
	189 Move X24, [X31+80]
	190 Move X23, [X31+88]
	191 Move X26, [X31+64]
	192 Move X25, [X31+72]
	193 Move X28, [X31+48]
	194 Move X27, [X31+56]
	195 Move X29, [X31+32]
	196 Move X30, [X31+40]
	197 Add X31, X31, 128
	198 Return 
	199 Move X0, 0x4EC000
	200 Move X0, [X0+1888]
	201 Call 0x1C17D08
	202 Call 0x1C17F10
	203 Move X19, X0
	204 Move X0, 0x54F000
	205 Move X0, [X0+3344]
	206 Call 0x1C17D08
	207 Move X20, X0
	208 Move X0, 0x54F000
	209 Move X0, [X0+3352]
	210 Call 0x1C17D08
	211 Move X2, X0
	212 Move X0, X19
	213 Move X1, X20
	214 Move X3, X31
	215 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	216 Call 0x1C17F20
	217 Move X20, 0x4E8000
	218 Move X20, [X20+712]
	219 Move X0, X20
	220 Call 0x1C17D08
	221 Call 0x19913D0
	222 Move X0, X20
	223 Call 0x1C17D08
	224 Move X8, [X0+184]
	225 Move X0, X19
	226 Move W20, [X8]
	227 Call 0x19913C0
	228 Move W8, [X19+24]
	229 Move X0, 0x4E4000
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CSEL not yet implemented."
	232 Move [X31+28], W8
	233 Move X0, [X0+1880]
	234 Call 0x1C17D08
	235 Add X1, X31, 28
	236 Call 0x1C17E04
	237 Move X19, X0
	238 Move X0, 0x54F000
	239 Move X0, [X0+3360]
	240 Call 0x1C17D08
	241 Move X1, X19
	242 Move X2, X31
	243 Call String.Format, X0, X1
	244 Move X19, X0
	245 Move X0, 0x4EC000
	246 Move X0, [X0+1888]
	247 Call 0x1C17D08
	248 Call 0x1C17F10
	249 Move X20, X0
	250 Move X0, 0x50C000
	251 Move X0, [X0+1608]
	252 Call 0x1C17D08
	253 Move X1, X0
	254 Move X0, X20
	255 Move X2, X19
	256 Move X3, X31
	257 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	258 Move X0, 0x54F000
	259 Move X0, [X0+3368]
	260 Call 0x1C17D08
	261 Move X1, X0
	262 Move X0, X20
	263 Call 0x1C17DEC
	264 Move X0, 0x4E4000
	265 Move X0, [X0+1456]
	266 Call 0x1C17D08
	267 Call 0x1C17F10
	268 Move X19, X0
	269 Move X0, 0x54F000
	270 Move X0, [X0+3376]
	271 Move X0, 0x4E9000
	272 Move X0, [X0+1320]
	273 Call 0x1C17D08
	274 Call 0x1C17F10
	275 Move X19, X0
	276 Move X0, 0x53E000
	277 Move X0, [X0+3728]
	278 Move X0, 0x4E9000
	279 Move X0, [X0+1320]
	280 Call 0x1C17D08
	281 Call 0x1C17F10
	282 Move X19, X0
	283 Move X0, 0x54F000
	284 Move X0, [X0+3384]
	285 Move X0, 0x4E4000
	286 Move X0, [X0+1456]
	287 Call 0x1C17D08
	288 Call 0x1C17F10
	289 Move X19, X0
	290 Move X0, 0x54F000
	291 Move X0, [X0+3392]
	292 Call 0x1C17D08
	293 Move X1, X0
	294 Move X0, X19
	295 Move X2, X31
	296 Call InvalidOperationException..ctor, X0, X1
	297 Move X0, 0x4E9000
	298 Move X0, [X0+1320]
	299 Call 0x1C17D08
	300 Call 0x1C17F10
	301 Move X19, X0
	302 Move X0, 0x54F000
	303 Move X0, [X0+3400]
	304 Call 0x1C17D08
	305 Move X1, X0
	306 Move X0, X19
	307 Move X2, X31
	308 Call ArgumentNullException..ctor, X0, X1
	309 Move X0, 0x54F000
	310 Move X0, [X0+3368]
	311 Call 0x1C17D08
	312 Move X1, X0
	313 Move X0, X19
	314 Call 0x1C17DEC
	315 Move X0, 0x4EC000
	316 Move X0, [X0+1400]
	317 Call 0x1C17D08
	318 Call 0x1C17F10
	319 Move X19, X0
	320 Move X0, 0x54F000
	321 Move X0, [X0+3320]
	322 Call 0x1C17D08
	323 Move X20, X0
	324 Move X0, 0x54F000
	325 Move X0, [X0+3328]
	326 Call 0x1C17D08
	327 Move X2, X0
	328 Move X0, X19
	329 Move X1, X20
	330 Move X3, X31
	331 Call ArgumentException..ctor, X0, X1, X2

Method: System.Void Blit(UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Vector2 scale, UnityEngine.Vector2 offset)

Disassembly:
	0x03C106C8 LDP X20, X19, [X31 + 0x10]
	0x03C106CC LDR X30, [X31], #0x20
	0x03C106D0 RET
	0x03C106D4 STP X30, X19, [X31 - 0x10]!
	0x03C106D8 MOV X1, X31
	0x03C106DC MOV X19, X0
	0x03C106E0 BL 0x33BDD8C
	0x03C106E4 STR W31, [X19 + 0x10]
	0x03C106E8 LDP X30, X19, [X31], #0x10
	0x03C106EC RET
	0x03C106F0 STR X30, [X31 - 0x20]!
	0x03C106F4 STP X20, X19, [X31 + 0x10]
	0x03C106F8 MOV W19, W1
	0x03C106FC MOV X1, X31
	0x03C10700 MOV X20, X0
	0x03C10704 BL 0x33BDD8C
	0x03C10708 STR W19, [X20 + 0x10]
	0x03C1070C LDP X20, X19, [X31 + 0x10]
	0x03C10710 LDR X30, [X31], #0x20
	0x03C10714 RET
	0x03C10718 STR X30, [X31 - 0x20]!
	0x03C1071C STP X20, X19, [X31 + 0x10]
	0x03C10720 ADRP X20, 0x7D4000
	0x03C10724 ADRP X19, 0x540000
	0x03C10728 LDRB W8, [X20 + 0x4C3]
	0x03C1072C LDR X19, [X19 + 0x570]
	0x03C10730 TBNZ X8, 0x0, 0x3C10748
	0x03C10734 ADRP X0, 0x540000
	0x03C10738 LDR X0, [X0 + 0x570]
	0x03C1073C BL 0x1C16CF4
	0x03C10740 MOVZ W8, 0x1
	0x03C10744 STRB W8, [X20 + 0x4C3]
	0x03C10748 LDR X0, [X19]
	0x03C1074C LDR W8, [X0 + 0xE0]
	0x03C10750 CBNZ W8, 0x3C1075C
	0x03C10754 BL 0x1C16DFC
	0x03C10758 LDR X0, [X19]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x7D5000
	011 Move X21, 0x4E8000
	012 Move W8, [X22+992]
	013 Move X21, [X21+712]
	014 Move V8, V3
	015 Move V9, V2
	016 Move V10, V1
	017 Move V11, V0
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x4E8000
	025 Move X0, [X0+712]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+992], W8
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X19
	036 Move V2, V9
	037 Move V3, V8
	038 Move X20, [X31+64]
	039 Move X19, [X31+72]
	040 Move X22, [X31+48]
	041 Move X21, [X31+56]
	042 Move X30, [X31+32]
	043 Move D9, [X31+16]
	044 Move D8, [X31+24]
	045 Move V0, V11
	046 Move V1, V10
	047 Move D11, [X31+80]
	048 Move D10, [X31+88]
	049 Call Graphics.Blit4, X0, X1, X2, X3
	050 Return 

Method: System.Void Blit(UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Material mat, System.Int32 pass)

Disassembly:
	0x03C1075C LDR X8, [X0 + 0xB8]
	0x03C10760 LDP X20, X19, [X31 + 0x10]
	0x03C10764 LDR X0, [X8 + 0x8]
	0x03C10768 LDR X30, [X31], #0x20
	0x03C1076C RET
	0x03C10770 STP X30, X21, [X31 - 0x20]!
	0x03C10774 STP X20, X19, [X31 + 0x10]
	0x03C10778 ADRP X21, 0x7D4000
	0x03C1077C ADRP X20, 0x540000
	0x03C10780 LDRB W8, [X21 + 0x4C4]
	0x03C10784 LDR X20, [X20 + 0x570]
	0x03C10788 MOV X19, X0
	0x03C1078C TBNZ X8, 0x0, 0x3C107A4
	0x03C10790 ADRP X0, 0x540000
	0x03C10794 LDR X0, [X0 + 0x570]
	0x03C10798 BL 0x1C16CF4
	0x03C1079C MOVZ W8, 0x1
	0x03C107A0 STRB W8, [X21 + 0x4C4]
	0x03C107A4 LDR X0, [X20]
	0x03C107A8 LDR W19, [X19 + 0x10]
	0x03C107AC LDR W8, [X0 + 0xE0]
	0x03C107B0 CBNZ W8, 0x3C107B8
	0x03C107B4 BL 0x1C16DFC
	0x03C107B8 ADRP X20, 0x7D4000
	0x03C107BC LDR X1, [X20 + 0x4D0]
	0x03C107C0 CBNZ X1, 0x3C107D8
	0x03C107C4 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C107C8 ADD X0, X0, 0xFC0
	0x03C107CC BL 0x1C16CB8
	0x03C107D0 MOV X1, X0
	0x03C107D4 STR X0, [X20 + 0x4D0]
	0x03C107D8 MOV W0, W19
	0x03C107DC LDP X20, X19, [X31 + 0x10]
	0x03C107E0 LDP X30, X21, [X31], #0x20
	0x03C107E4 BR X1
	0x03C107E8 STR X30, [X31 - 0x20]!
	0x03C107EC STP X20, X19, [X31 + 0x10]
	0x03C107F0 ADRP X20, 0x7D4000
	0x03C107F4 LDR X1, [X20 + 0x4D0]
	0x03C107F8 MOV W19, W0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x7D5000
	009 Move X24, 0x4E8000
	010 Move W8, [X23+993]
	011 Move X24, [X24+712]
	012 Move W19, W3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x4E8000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+993], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X23, 0x7D5000
	031 Move X5, [X23+960]
	032 Compare X5, 0
	033 JumpIfNotEqual {39}
	034 Move X0, -51326976
	035 Add X0, X0, 3410
	036 Call 0x1C17CB8
	037 Move X5, X0
	038 Move [X23+960], X0
	039 Move X0, X22
	040 Move X1, X21
	041 Move X2, X20
	042 Move W3, W19
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move W4, 1
	050 Move X30, [X31+64]
	051 CallNoReturn X5

Method: System.Void Blit(UnityEngine.Texture source, UnityEngine.RenderTexture dest, UnityEngine.Material mat)

Disassembly:
	0x03C107FC CBNZ X1, 0x3C10814
	0x03C10800 ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C10804 ADD X0, X0, 0xFC0
	0x03C10808 BL 0x1C16CB8
	0x03C1080C MOV X1, X0
	0x03C10810 STR X0, [X20 + 0x4D0]
	0x03C10814 MOV W0, W19
	0x03C10818 LDP X20, X19, [X31 + 0x10]
	0x03C1081C LDR X30, [X31], #0x20
	0x03C10820 BR X1
	0x03C10824 STP X30, X21, [X31 - 0x20]!
	0x03C10828 STP X20, X19, [X31 + 0x10]
	0x03C1082C ADRP X21, 0x7D4000
	0x03C10830 ADRP X20, 0x540000
	0x03C10834 LDRB W8, [X21 + 0x4C5]
	0x03C10838 LDR X20, [X20 + 0x570]
	0x03C1083C MOV X19, X0
	0x03C10840 TBNZ X8, 0x0, 0x3C10858
	0x03C10844 ADRP X0, 0x540000
	0x03C10848 LDR X0, [X0 + 0x570]
	0x03C1084C BL 0x1C16CF4
	0x03C10850 MOVZ W8, 0x1
	0x03C10854 STRB W8, [X21 + 0x4C5]
	0x03C10858 LDR X0, [X20]
	0x03C1085C LDR W19, [X19 + 0x10]
	0x03C10860 LDR W8, [X0 + 0xE0]
	0x03C10864 CBNZ W8, 0x3C1086C
	0x03C10868 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x7D5000
	008 Move X23, 0x4E8000
	009 Move W8, [X22+994]
	010 Move X23, [X23+712]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x4E8000
	019 Move X0, [X0+712]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+994], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X20
	030 Move X2, X19
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W3, TEMP
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Call Graphics.Blit, X0, X1, X2, X3
	041 Return 

Method: System.Void DrawMesh(UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 layer, UnityEngine.Camera camera, System.Int32 submeshIndex)

Disassembly:
	0x03C1086C ADRP X20, 0x7D4000
	0x03C10870 LDR X1, [X20 + 0x4D8]
	0x03C10874 CBNZ X1, 0x3C1088C
	0x03C10878 ADRP X0, 0xFFFFFFFFFCF06000
	0x03C1087C ADD X0, X0, 0x717
	0x03C10880 BL 0x1C16CB8
	0x03C10884 MOV X1, X0
	0x03C10888 STR X0, [X20 + 0x4D8]
	0x03C1088C MOV W0, W19
	0x03C10890 LDP X20, X19, [X31 + 0x10]
	0x03C10894 LDP X30, X21, [X31], #0x20
	0x03C10898 BR X1
	0x03C1089C STR X30, [X31 - 0x20]!
	0x03C108A0 STP X20, X19, [X31 + 0x10]
	0x03C108A4 ADRP X20, 0x7D4000
	0x03C108A8 LDR X1, [X20 + 0x4D8]
	0x03C108AC MOV W19, W0
	0x03C108B0 CBNZ X1, 0x3C108C8
	0x03C108B4 ADRP X0, 0xFFFFFFFFFCF06000
	0x03C108B8 ADD X0, X0, 0x717
	0x03C108BC BL 0x1C16CB8
	0x03C108C0 MOV X1, X0
	0x03C108C4 STR X0, [X20 + 0x4D8]
	0x03C108C8 MOV W0, W19
	0x03C108CC LDP X20, X19, [X31 + 0x10]
	0x03C108D0 LDR X30, [X31], #0x20
	0x03C108D4 BR X1
	0x03C108D8 STR X30, [X31 - 0x30]!
	0x03C108DC STP X22, X21, [X31 + 0x10]
	0x03C108E0 STP X20, X19, [X31 + 0x20]
	0x03C108E4 ADRP X22, 0x7D4000
	0x03C108E8 ADRP X21, 0x540000
	0x03C108EC LDRB W8, [X22 + 0x4C6]
	0x03C108F0 LDR X21, [X21 + 0x570]
	0x03C108F4 MOV W19, W1
	0x03C108F8 MOV X20, X0
	0x03C108FC TBNZ X8, 0x0, 0x3C10914
	0x03C10900 ADRP X0, 0x540000
	0x03C10904 LDR X0, [X0 + 0x570]
	0x03C10908 BL 0x1C16CF4
	0x03C1090C MOVZ W8, 0x1
	0x03C10910 STRB W8, [X22 + 0x4C6]
	0x03C10914 LDR X0, [X21]
	0x03C10918 LDR W20, [X20 + 0x10]
	0x03C1091C LDR W8, [X0 + 0xE0]
	0x03C10920 CBNZ W8, 0x3C10928
	0x03C10924 BL 0x1C16DFC
	0x03C10928 ADRP X21, 0x7D4000
	0x03C1092C LDR X2, [X21 + 0x4E0]
	0x03C10930 CBNZ X2, 0x3C10948
	0x03C10934 ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C10938 ADD X0, X0, 0xDDF
	0x03C1093C BL 0x1C16CB8
	0x03C10940 MOV X2, X0
	0x03C10944 STR X0, [X21 + 0x4E0]

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+176], X30
	003 Move [X31+192], X26
	004 Move [X31+200], X25
	005 Move [X31+208], X24
	006 Move [X31+216], X23
	007 Move [X31+224], X22
	008 Move [X31+232], X21
	009 Move [X31+240], X20
	010 Move [X31+248], X19
	011 Move X26, 0x7D5000
	012 Move X25, 0x4E8000
	013 Move W8, [X26+995]
	014 Move X25, [X25+712]
	015 Move W19, W5
	016 Move X20, X4
	017 Move W21, W3
	018 Move X22, X2
	019 Move X24, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x4E8000
	026 Move X0, [X0+712]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X26+995], W8
	030 Move V0, [X24+32]
	031 Move V1, [X24+48]
	032 Move V2, [X24]
	033 Move V3, [X24+16]
	034 Move X0, [X25]
	035 Move [X31+144], V0
	036 Move [X31+152], V1
	037 Move [X31+112], V2
	038 Move [X31+120], V3
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move V0, [X31+112]
	044 Move V1, [X31+128]
	045 Move V2, [X31+144]
	046 Move V3, [X31+160]
	047 Move W8, 1
	048 Add X1, X31, 48
	049 Move W7, 1
	050 Move X0, X23
	051 Move X2, X22
	052 Move W3, W21
	053 Move X4, X20
	054 Move W5, W19
	055 Move X6, X31
	056 Move [X31+48], V0
	057 Move [X31+56], V1
	058 Move [X31+80], V2
	059 Move [X31+88], V3
	060 Move [X31+24], X31
	061 Move [X31+8], X31
	062 Move [X31+16], W8
	063 Move [X31], W8
	064 Call Graphics.DrawMesh, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	065 Move X20, [X31+240]
	066 Move X19, [X31+248]
	067 Move X22, [X31+224]
	068 Move X21, [X31+232]
	069 Move X24, [X31+208]
	070 Move X23, [X31+216]
	071 Move X26, [X31+192]
	072 Move X25, [X31+200]
	073 Move X30, [X31+176]
	074 Add X31, X31, 256
	075 Return 

Method: System.Void DrawMesh(UnityEngine.Mesh mesh, UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 layer, UnityEngine.Camera camera, System.Int32 submeshIndex, UnityEngine.MaterialPropertyBlock properties)

Disassembly:
	0x03C10948 AND W1, W19, 0x1
	0x03C1094C MOV W0, W20
	0x03C10950 LDP X20, X19, [X31 + 0x20]
	0x03C10954 LDP X22, X21, [X31 + 0x10]
	0x03C10958 LDR X30, [X31], #0x30
	0x03C1095C BR X2
	0x03C10960 STP X30, X21, [X31 - 0x20]!
	0x03C10964 STP X20, X19, [X31 + 0x10]
	0x03C10968 ADRP X21, 0x7D4000
	0x03C1096C LDR X2, [X21 + 0x4E0]
	0x03C10970 MOV W19, W1
	0x03C10974 MOV W20, W0
	0x03C10978 CBNZ X2, 0x3C10990
	0x03C1097C ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C10980 ADD X0, X0, 0xDDF
	0x03C10984 BL 0x1C16CB8
	0x03C10988 MOV X2, X0
	0x03C1098C STR X0, [X21 + 0x4E0]
	0x03C10990 AND W1, W19, 0x1
	0x03C10994 MOV W0, W20
	0x03C10998 LDP X20, X19, [X31 + 0x10]
	0x03C1099C LDP X30, X21, [X31], #0x20
	0x03C109A0 BR X2
	0x03C109A4 STP X30, X21, [X31 - 0x20]!
	0x03C109A8 STP X20, X19, [X31 + 0x10]
	0x03C109AC ADRP X21, 0x7D4000
	0x03C109B0 ADRP X20, 0x540000
	0x03C109B4 LDRB W8, [X21 + 0x4C7]
	0x03C109B8 LDR X20, [X20 + 0x570]
	0x03C109BC MOV X19, X0
	0x03C109C0 TBNZ X8, 0x0, 0x3C109D8
	0x03C109C4 ADRP X0, 0x540000
	0x03C109C8 LDR X0, [X0 + 0x570]
	0x03C109CC BL 0x1C16CF4
	0x03C109D0 MOVZ W8, 0x1
	0x03C109D4 STRB W8, [X21 + 0x4C7]
	0x03C109D8 LDR X0, [X20]
	0x03C109DC LDR W19, [X19 + 0x10]
	0x03C109E0 LDR W8, [X0 + 0xE0]
	0x03C109E4 CBNZ W8, 0x3C109EC
	0x03C109E8 BL 0x1C16DFC
	0x03C109EC ADRP X20, 0x7D4000
	0x03C109F0 LDR X1, [X20 + 0x4E8]
	0x03C109F4 CBNZ X1, 0x3C10A0C
	0x03C109F8 ADRP X0, 0xFFFFFFFFFCEE8000
	0x03C109FC ADD X0, X0, 0xEFC
	0x03C10A00 BL 0x1C16CB8
	0x03C10A04 MOV X1, X0
	0x03C10A08 STR X0, [X20 + 0x4E8]
	0x03C10A0C MOV W0, W19
	0x03C10A10 LDP X20, X19, [X31 + 0x10]
	0x03C10A14 LDP X30, X21, [X31], #0x20
	0x03C10A18 BR X1
	0x03C10A1C STR X30, [X31 - 0x20]!
	0x03C10A20 STP X20, X19, [X31 + 0x10]
	0x03C10A24 ADRP X20, 0x7D4000
	0x03C10A28 LDR X1, [X20 + 0x4E8]
	0x03C10A2C MOV W19, W0

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], X29
	003 Move [X31+192], X30
	004 Move [X31+200], X27
	005 Move [X31+208], X26
	006 Move [X31+216], X25
	007 Move [X31+224], X24
	008 Move [X31+232], X23
	009 Move [X31+240], X22
	010 Move [X31+248], X21
	011 Move [X31+256], X20
	012 Move [X31+264], X19
	013 Move X27, 0x7D5000
	014 Move X26, 0x4E8000
	015 Move W8, [X27+996]
	016 Move X26, [X26+712]
	017 Move X19, X6
	018 Move W20, W5
	019 Move X21, X4
	020 Move W22, W3
	021 Move X23, X2
	022 Move X25, X1
	023 Move X24, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x4E8000
	029 Move X0, [X0+712]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X27+996], W8
	033 Move V0, [X25+32]
	034 Move V1, [X25+48]
	035 Move V2, [X25]
	036 Move V3, [X25+16]
	037 Move X0, [X26]
	038 Move [X31+144], V0
	039 Move [X31+152], V1
	040 Move [X31+112], V2
	041 Move [X31+120], V3
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move V0, [X31+112]
	047 Move V1, [X31+128]
	048 Move V2, [X31+144]
	049 Move V3, [X31+160]
	050 Move W8, 1
	051 Add X1, X31, 48
	052 Move W7, 1
	053 Move X0, X24
	054 Move X2, X23
	055 Move W3, W22
	056 Move X4, X21
	057 Move W5, W20
	058 Move X6, X19
	059 Move [X31+48], V0
	060 Move [X31+56], V1
	061 Move [X31+80], V2
	062 Move [X31+88], V3
	063 Move [X31+24], X31
	064 Move [X31+8], X31
	065 Move [X31+16], W8
	066 Move [X31], W8
	067 Call Graphics.DrawMesh, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	068 Move X20, [X31+256]
	069 Move X19, [X31+264]
	070 Move X22, [X31+240]
	071 Move X21, [X31+248]
	072 Move X24, [X31+224]
	073 Move X23, [X31+232]
	074 Move X26, [X31+208]
	075 Move X25, [X31+216]
	076 Move X30, [X31+192]
	077 Move X27, [X31+200]
	078 Move X29, [X31+176]
	079 Add X31, X31, 272
	080 Return 

Method: System.Void DrawMeshInstanced(UnityEngine.Mesh mesh, System.Int32 submeshIndex, UnityEngine.Material material, UnityEngine.Matrix4x4[] matrices)

Disassembly:
	0x03C10A30 CBNZ X1, 0x3C10A48
	0x03C10A34 ADRP X0, 0xFFFFFFFFFCEE8000
	0x03C10A38 ADD X0, X0, 0xEFC
	0x03C10A3C BL 0x1C16CB8
	0x03C10A40 MOV X1, X0
	0x03C10A44 STR X0, [X20 + 0x4E8]
	0x03C10A48 MOV W0, W19
	0x03C10A4C LDP X20, X19, [X31 + 0x10]
	0x03C10A50 LDR X30, [X31], #0x20
	0x03C10A54 BR X1
	0x03C10A58 STP X30, X21, [X31 - 0x20]!
	0x03C10A5C STP X20, X19, [X31 + 0x10]
	0x03C10A60 ADRP X21, 0x7D4000
	0x03C10A64 ADRP X20, 0x540000
	0x03C10A68 LDRB W8, [X21 + 0x4C8]
	0x03C10A6C LDR X20, [X20 + 0x570]
	0x03C10A70 MOV X19, X0
	0x03C10A74 TBNZ X8, 0x0, 0x3C10A8C
	0x03C10A78 ADRP X0, 0x540000
	0x03C10A7C LDR X0, [X0 + 0x570]
	0x03C10A80 BL 0x1C16CF4
	0x03C10A84 MOVZ W8, 0x1
	0x03C10A88 STRB W8, [X21 + 0x4C8]
	0x03C10A8C LDR X0, [X20]
	0x03C10A90 LDR W19, [X19 + 0x10]
	0x03C10A94 LDR W8, [X0 + 0xE0]
	0x03C10A98 CBNZ W8, 0x3C10AA0
	0x03C10A9C BL 0x1C16DFC
	0x03C10AA0 ADRP X20, 0x7D4000
	0x03C10AA4 LDR X1, [X20 + 0x4F0]
	0x03C10AA8 CBNZ X1, 0x3C10AC0
	0x03C10AAC ADRP X0, 0xFFFFFFFFFCF18000
	0x03C10AB0 ADD X0, X0, 0x485
	0x03C10AB4 BL 0x1C16CB8
	0x03C10AB8 MOV X1, X0
	0x03C10ABC STR X0, [X20 + 0x4F0]
	0x03C10AC0 MOV W0, W19
	0x03C10AC4 LDP X20, X19, [X31 + 0x10]
	0x03C10AC8 LDP X30, X21, [X31], #0x20
	0x03C10ACC BR X1
	0x03C10AD0 STR X30, [X31 - 0x20]!
	0x03C10AD4 STP X20, X19, [X31 + 0x10]
	0x03C10AD8 ADRP X20, 0x7D4000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0x7D5000
	009 Move W8, [X23+997]
	010 Move X19, X3
	011 Move X20, X2
	012 Move W21, W1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x4E8000
	019 Move X0, [X0+712]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+997], W8
	023 Compare X19, 0
	024 JumpIfEqual {54}
	025 Move X8, 0x4E8000
	026 Move X8, [X8+712]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move W4, [X19+24]
	033 Move W8, 1
	034 Move W6, 1
	035 Move W7, 1
	036 Move X0, X22
	037 Move W1, W21
	038 Move X2, X20
	039 Move X3, X19
	040 Move X5, X31
	041 Move [X31+24], X31
	042 Move [X31+8], X31
	043 Move [X31+16], W8
	044 Move [X31], W31
	045 Call Graphics.DrawMeshInstanced, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	046 Move X20, [X31+80]
	047 Move X19, [X31+88]
	048 Move X22, [X31+64]
	049 Move X21, [X31+72]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Add X31, X31, 96
	053 Return 
	054 Call 0x1C17F20

Method: System.Void DrawMeshInstanced(UnityEngine.Mesh mesh, System.Int32 submeshIndex, UnityEngine.Material material, UnityEngine.Matrix4x4[] matrices, System.Int32 count, UnityEngine.MaterialPropertyBlock properties, UnityEngine.Rendering.ShadowCastingMode castShadows, System.Boolean receiveShadows, System.Int32 layer, UnityEngine.Camera camera)

Disassembly:
	0x03C10ADC LDR X1, [X20 + 0x4F0]
	0x03C10AE0 MOV W19, W0
	0x03C10AE4 CBNZ X1, 0x3C10AFC
	0x03C10AE8 ADRP X0, 0xFFFFFFFFFCF18000
	0x03C10AEC ADD X0, X0, 0x485
	0x03C10AF0 BL 0x1C16CB8
	0x03C10AF4 MOV X1, X0
	0x03C10AF8 STR X0, [X20 + 0x4F0]
	0x03C10AFC MOV W0, W19
	0x03C10B00 LDP X20, X19, [X31 + 0x10]
	0x03C10B04 LDR X30, [X31], #0x20
	0x03C10B08 BR X1
	0x03C10B0C STP X30, X21, [X31 - 0x20]!
	0x03C10B10 STP X20, X19, [X31 + 0x10]
	0x03C10B14 ADRP X21, 0x7D4000
	0x03C10B18 ADRP X20, 0x540000
	0x03C10B1C LDRB W8, [X21 + 0x4C9]
	0x03C10B20 LDR X20, [X20 + 0x570]
	0x03C10B24 MOV X19, X0
	0x03C10B28 TBNZ X8, 0x0, 0x3C10B40
	0x03C10B2C ADRP X0, 0x540000
	0x03C10B30 LDR X0, [X0 + 0x570]
	0x03C10B34 BL 0x1C16CF4
	0x03C10B38 MOVZ W8, 0x1
	0x03C10B3C STRB W8, [X21 + 0x4C9]
	0x03C10B40 LDR X0, [X20]
	0x03C10B44 LDR W19, [X19 + 0x10]
	0x03C10B48 LDR W8, [X0 + 0xE0]
	0x03C10B4C CBNZ W8, 0x3C10B54
	0x03C10B50 BL 0x1C16DFC
	0x03C10B54 ADRP X20, 0x7D4000
	0x03C10B58 LDR X1, [X20 + 0x4F8]
	0x03C10B5C CBNZ X1, 0x3C10B74
	0x03C10B60 ADRP X0, 0xFFFFFFFFFCF02000
	0x03C10B64 ADD X0, X0, 0xA1A
	0x03C10B68 BL 0x1C16CB8
	0x03C10B6C MOV X1, X0
	0x03C10B70 STR X0, [X20 + 0x4F8]
	0x03C10B74 MOV W0, W19
	0x03C10B78 LDP X20, X19, [X31 + 0x10]
	0x03C10B7C LDP X30, X21, [X31], #0x20
	0x03C10B80 BR X1
	0x03C10B84 STR X30, [X31 - 0x20]!
	0x03C10B88 STP X20, X19, [X31 + 0x10]
	0x03C10B8C ADRP X20, 0x7D4000
	0x03C10B90 LDR X1, [X20 + 0x4F8]
	0x03C10B94 MOV W19, W0
	0x03C10B98 CBNZ X1, 0x3C10BB0
	0x03C10B9C ADRP X0, 0xFFFFFFFFFCF02000
	0x03C10BA0 ADD X0, X0, 0xA1A
	0x03C10BA4 BL 0x1C16CB8
	0x03C10BA8 MOV X1, X0
	0x03C10BAC STR X0, [X20 + 0x4F8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X30
	003 Move [X31+64], X28
	004 Move [X31+72], X27
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X28, 0x7D5000
	014 Move X27, 0x4E8000
	015 Move W8, [X28+998]
	016 Move X27, [X27+712]
	017 Move W23, W7
	018 Move W19, W6
	019 Move X20, X5
	020 Move W21, W4
	021 Move X22, X3
	022 Move X24, X2
	023 Move W25, W1
	024 Move X26, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x4E8000
	030 Move X0, [X0+712]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X28+998], W8
	034 Move X0, [X27]
	035 Move X28, [X31+152]
	036 Move W27, [X31+144]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move W8, 1
	042 And W7, W23, 1
	043 Move X0, X26
	044 Move W1, W25
	045 Move X2, X24
	046 Move X3, X22
	047 Move W4, W21
	048 Move X5, X20
	049 Move W6, W19
	050 Move [X31+24], X31
	051 Move [X31+8], X28
	052 Move [X31+16], W8
	053 Move [X31], W27
	054 Call Graphics.DrawMeshInstanced, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	055 Move X20, [X31+128]
	056 Move X19, [X31+136]
	057 Move X22, [X31+112]
	058 Move X21, [X31+120]
	059 Move X24, [X31+96]
	060 Move X23, [X31+104]
	061 Move X26, [X31+80]
	062 Move X25, [X31+88]
	063 Move X28, [X31+64]
	064 Move X27, [X31+72]
	065 Move X30, [X31+48]
	066 Add X31, X31, 144
	067 Return 

Method: System.Void SetRenderTarget(UnityEngine.RenderTexture rt)

Disassembly:
	0x03C10BB0 MOV W0, W19
	0x03C10BB4 LDP X20, X19, [X31 + 0x10]
	0x03C10BB8 LDR X30, [X31], #0x20
	0x03C10BBC BR X1
	0x03C10BC0 STP X30, X21, [X31 - 0x20]!
	0x03C10BC4 STP X20, X19, [X31 + 0x10]
	0x03C10BC8 ADRP X21, 0x7D4000
	0x03C10BCC ADRP X20, 0x540000
	0x03C10BD0 LDRB W8, [X21 + 0x4CA]
	0x03C10BD4 LDR X20, [X20 + 0x570]
	0x03C10BD8 MOV X19, X0
	0x03C10BDC TBNZ X8, 0x0, 0x3C10BF4
	0x03C10BE0 ADRP X0, 0x540000
	0x03C10BE4 LDR X0, [X0 + 0x570]
	0x03C10BE8 BL 0x1C16CF4
	0x03C10BEC MOVZ W8, 0x1
	0x03C10BF0 STRB W8, [X21 + 0x4CA]
	0x03C10BF4 LDR X0, [X20]
	0x03C10BF8 LDR W19, [X19 + 0x10]
	0x03C10BFC LDR W8, [X0 + 0xE0]
	0x03C10C00 CBNZ W8, 0x3C10C08
	0x03C10C04 BL 0x1C16DFC
	0x03C10C08 ADRP X20, 0x7D4000
	0x03C10C0C LDR X1, [X20 + 0x500]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7D5000
	006 Move X21, 0x4E8000
	007 Move W8, [X20+999]
	008 Move X21, [X21+712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4E8000
	015 Move X0, [X0+712]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+999], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move TEMP, 0
	028 Not TEMP
	029 Move W2, TEMP
	030 Move W1, W31
	031 Move W3, W31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call Graphics.SetRenderTarget, X0, X1, X2, X3
	035 Return 

Method: System.Void SetRenderTarget(UnityEngine.RenderTexture rt, System.Int32 mipLevel)

Disassembly:
	0x03C10C10 CBNZ X1, 0x3C10C28
	0x03C10C14 ADRP X0, 0xFFFFFFFFFCEF5000
	0x03C10C18 ADD X0, X0, 0x66
	0x03C10C1C BL 0x1C16CB8
	0x03C10C20 MOV X1, X0
	0x03C10C24 STR X0, [X20 + 0x500]
	0x03C10C28 MOV W0, W19
	0x03C10C2C LDP X20, X19, [X31 + 0x10]
	0x03C10C30 LDP X30, X21, [X31], #0x20
	0x03C10C34 BR X1
	0x03C10C38 STR X30, [X31 - 0x20]!
	0x03C10C3C STP X20, X19, [X31 + 0x10]
	0x03C10C40 ADRP X20, 0x7D4000
	0x03C10C44 LDR X1, [X20 + 0x500]
	0x03C10C48 MOV W19, W0
	0x03C10C4C CBNZ X1, 0x3C10C64
	0x03C10C50 ADRP X0, 0xFFFFFFFFFCEF5000
	0x03C10C54 ADD X0, X0, 0x66
	0x03C10C58 BL 0x1C16CB8
	0x03C10C5C MOV X1, X0
	0x03C10C60 STR X0, [X20 + 0x500]
	0x03C10C64 MOV W0, W19
	0x03C10C68 LDP X20, X19, [X31 + 0x10]
	0x03C10C6C LDR X30, [X31], #0x20
	0x03C10C70 BR X1
	0x03C10C74 STP X30, X21, [X31 - 0x20]!
	0x03C10C78 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7D5000
	007 Move X22, 0x4E8000
	008 Move W8, [X21+1000]
	009 Move X22, [X22+712]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x4E8000
	017 Move X0, [X0+712]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1000], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move TEMP, 0
	033 Not TEMP
	034 Move W2, TEMP
	035 Move W3, W31
	036 Move X30, [X31+48]
	037 Call Graphics.SetRenderTarget, X0, X1, X2, X3
	038 Return 

Method: System.Void .cctor()

Disassembly:
	0x03C10C7C ADRP X21, 0x7D4000
	0x03C10C80 ADRP X20, 0x540000
	0x03C10C84 LDRB W8, [X21 + 0x4CB]
	0x03C10C88 LDR X20, [X20 + 0x570]
	0x03C10C8C MOV X19, X0
	0x03C10C90 TBNZ X8, 0x0, 0x3C10CA8
	0x03C10C94 ADRP X0, 0x540000
	0x03C10C98 LDR X0, [X0 + 0x570]
	0x03C10C9C BL 0x1C16CF4
	0x03C10CA0 MOVZ W8, 0x1
	0x03C10CA4 STRB W8, [X21 + 0x4CB]
	0x03C10CA8 LDR X0, [X20]
	0x03C10CAC LDR W19, [X19 + 0x10]
	0x03C10CB0 LDR W8, [X0 + 0xE0]
	0x03C10CB4 CBNZ W8, 0x3C10CBC
	0x03C10CB8 BL 0x1C16DFC
	0x03C10CBC ADRP X20, 0x7D4000
	0x03C10CC0 LDR X1, [X20 + 0x508]
	0x03C10CC4 CBNZ X1, 0x3C10CDC
	0x03C10CC8 ADRP X0, 0xFFFFFFFFFCEE0000
	0x03C10CCC ADD X0, X0, 0xD3D
	0x03C10CD0 BL 0x1C16CB8
	0x03C10CD4 MOV X1, X0
	0x03C10CD8 STR X0, [X20 + 0x508]
	0x03C10CDC MOV W0, W19
	0x03C10CE0 LDP X20, X19, [X31 + 0x10]
	0x03C10CE4 LDP X30, X21, [X31], #0x20
	0x03C10CE8 BR X1
	0x03C10CEC STR X30, [X31 - 0x20]!
	0x03C10CF0 STP X20, X19, [X31 + 0x10]
	0x03C10CF4 ADRP X20, 0x7D4000
	0x03C10CF8 LDR X1, [X20 + 0x508]
	0x03C10CFC MOV W19, W0
	0x03C10D00 CBNZ X1, 0x3C10D18
	0x03C10D04 ADRP X0, 0xFFFFFFFFFCEE0000
	0x03C10D08 ADD X0, X0, 0xD3D
	0x03C10D0C BL 0x1C16CB8
	0x03C10D10 MOV X1, X0
	0x03C10D14 STR X0, [X20 + 0x508]
	0x03C10D18 MOV W0, W19
	0x03C10D1C LDP X20, X19, [X31 + 0x10]
	0x03C10D20 LDR X30, [X31], #0x20
	0x03C10D24 BR X1
	0x03C10D28 STR X30, [X31 - 0x30]!
	0x03C10D2C STP X22, X21, [X31 + 0x10]
	0x03C10D30 STP X20, X19, [X31 + 0x20]
	0x03C10D34 ADRP X22, 0x7D4000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x7D5000
	007 Move W8, [X19+1001]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x54F000
	013 Move X0, [X0+3408]
	014 Call 0x1C17CF4
	015 Move X0, 0x54F000
	016 Move X0, [X0+3416]
	017 Call 0x1C17CF4
	018 Move X0, 0x4E8000
	019 Move X0, [X0+712]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1001], W8
	023 Move X22, 0x7D5000
	024 Move X20, 0x4E8000
	025 Move X21, 0x54F000
	026 Move X19, 0x54F000
	027 Move X8, [X22+848]
	028 Move X20, [X20+712]
	029 Move X21, [X21+3416]
	030 Move X19, [X19+3408]
	031 Compare X8, 0
	032 JumpIfNotEqual {38}
	033 Move X0, -51376128
	034 Add X0, X0, 3845
	035 Call 0x1C17CB8
	036 Move X8, X0
	037 Move [X22+848], X0
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X20]
	040 Move X8, [X8+184]
	041 Move [X8], W0
	042 Move X0, [X21]
	043 Call 0x1C17F10
	044 Move X1, [X19]
	045 Move X19, X0
	046 Call Dictionary`2<Int32, RenderInstancedDataLayout>..ctor, X0
	047 Move X8, [X20]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X8, [X8+184]
	051 Move [X8+8], X19
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X30, [X31+48]
	055 Return 

Method: System.Void Internal_SetRTSimple_Injected(ref UnityEngine.RenderBuffer color, ref UnityEngine.RenderBuffer depth, System.Int32 mip, UnityEngine.CubemapFace face, System.Int32 depthSlice)

Disassembly:
	0x03C0F464 BL 0x3311888
	0x03C0F468 B 0x3C0F5F0
	0x03C0F46C BL 0x1C16F20
	0x03C0F470 ADRP X20, 0x4E8000
	0x03C0F474 LDR X20, [X20 + 0x2C8]
	0x03C0F478 MOV X0, X20
	0x03C0F47C BL 0x1C16D08
	0x03C0F480 BL 0x19903D0
	0x03C0F484 MOV X0, X20
	0x03C0F488 BL 0x1C16D08
	0x03C0F48C LDR X8, [X0 + 0xB8]
	0x03C0F490 MOV X0, X19
	0x03C0F494 LDR W20, [X8]
	0x03C0F498 BL 0x19903C0
	0x03C0F49C LDR W8, [X19 + 0x18]
	0x03C0F4A0 ADRP X0, 0x4E4000
	0x03C0F4A4 CMP W20, W8
	0x03C0F4A8 CSEL W8, W20, W8, LT
	0x03C0F4AC STR W8, [X31 + 0x1C]
	0x03C0F4B0 LDR X0, [X0 + 0x758]
	0x03C0F4B4 BL 0x1C16D08
	0x03C0F4B8 ADD X1, X31, 0x1C
	0x03C0F4BC BL 0x1C16E04
	0x03C0F4C0 MOV X19, X0
	0x03C0F4C4 ADRP X0, 0x54F000
	0x03C0F4C8 LDR X0, [X0 + 0xD20]
	0x03C0F4CC BL 0x1C16D08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7D6000
	009 Move X5, [X24+1008]
	010 Move W19, W4
	011 Move W20, W3
	012 Move W21, W2
	013 Move X22, X1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51445760
	018 Add X0, X0, 3749
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+1008], X0
	022 Move X0, X23
	023 Move X1, X22
	024 Move W2, W21
	025 Move W3, W20
	026 Move W4, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void Internal_DrawMeshNow2_Injected(UnityEngine.Mesh mesh, System.Int32 subsetIndex, ref UnityEngine.Matrix4x4 matrix)

Disassembly:
	0x03C0F690 STP X20, X19, [X31 + 0x10]
	0x03C0F694 ADRP X20, 0x7D5000
	0x03C0F698 LDR X1, [X20 + 0x8D8]
	0x03C0F69C MOV X19, X0
	0x03C0F6A0 CBNZ X1, 0x3C0F6B8
	0x03C0F6A4 ADRP X0, 0xFFFFFFFFFCF17000
	0x03C0F6A8 ADD X0, X0, 0xC34
	0x03C0F6AC BL 0x1C16CB8
	0x03C0F6B0 MOV X1, X0
	0x03C0F6B4 STR X0, [X20 + 0x8D8]
	0x03C0F6B8 MOV X0, X19
	0x03C0F6BC LDP X20, X19, [X31 + 0x10]
	0x03C0F6C0 LDR X30, [X31], #0x20
	0x03C0F6C4 BR X1
	0x03C0F6C8 STP D11, D10, [X31 - 0x50]!
	0x03C0F6CC STP D9, D8, [X31 + 0x10]
	0x03C0F6D0 STR X30, [X31 + 0x20]
	0x03C0F6D4 STP X22, X21, [X31 + 0x30]
	0x03C0F6D8 STP X20, X19, [X31 + 0x40]
	0x03C0F6DC ADRP X22, 0x7D5000
	0x03C0F6E0 ADRP X21, 0x4E8000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D6000
	007 Move X3, [X22+1016]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51421184
	014 Add X0, X0, 4013
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1016], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void Internal_DrawMesh_Injected(UnityEngine.Mesh mesh, System.Int32 submeshIndex, ref UnityEngine.Matrix4x4 matrix, UnityEngine.Material material, System.Int32 layer, UnityEngine.Camera camera, UnityEngine.MaterialPropertyBlock properties, UnityEngine.Rendering.ShadowCastingMode castShadows, System.Boolean receiveShadows, UnityEngine.Transform probeAnchor, UnityEngine.Rendering.LightProbeUsage lightProbeUsage, UnityEngine.LightProbeProxyVolume lightProbeProxyVolume)

Disassembly:
	0x03C0F810 LDRB W8, [X22 + 0x3E2]
	0x03C0F814 LDR X23, [X23 + 0x2C8]
	0x03C0F818 MOV X19, X2
	0x03C0F81C MOV X20, X1
	0x03C0F820 MOV X21, X0
	0x03C0F824 TBNZ X8, 0x0, 0x3C0F83C
	0x03C0F828 ADRP X0, 0x4E8000
	0x03C0F82C LDR X0, [X0 + 0x2C8]
	0x03C0F830 BL 0x1C16CF4
	0x03C0F834 MOVZ W8, 0x1
	0x03C0F838 STRB W8, [X22 + 0x3E2]
	0x03C0F83C LDR X0, [X23]
	0x03C0F840 LDR W8, [X0 + 0xE0]
	0x03C0F844 CBNZ W8, 0x3C0F84C
	0x03C0F848 BL 0x1C16DFC
	0x03C0F84C MOV X0, X21
	0x03C0F850 MOV X1, X20
	0x03C0F854 MOV X2, X19
	0x03C0F858 LDP X20, X19, [X31 + 0x20]
	0x03C0F85C LDP X22, X21, [X31 + 0x10]
	0x03C0F860 MOVN W3, 0x0
	0x03C0F864 LDP X30, X23, [X31], #0x30
	0x03C0F868 B 0x3C0F75C
	0x03C0F86C SUB X31, X31, 0x100
	0x03C0F870 STR X30, [X31 + 0xB0]
	0x03C0F874 STP X26, X25, [X31 + 0xC0]
	0x03C0F878 STP X24, X23, [X31 + 0xD0]
	0x03C0F87C STP X22, X21, [X31 + 0xE0]
	0x03C0F880 STP X20, X19, [X31 + 0xF0]
	0x03C0F884 ADRP X26, 0x7D5000
	0x03C0F888 ADRP X25, 0x4E8000
	0x03C0F88C LDRB W8, [X26 + 0x3E3]
	0x03C0F890 LDR X25, [X25 + 0x2C8]
	0x03C0F894 MOV W19, W5
	0x03C0F898 MOV X20, X4
	0x03C0F89C MOV W21, W3
	0x03C0F8A0 MOV X22, X2
	0x03C0F8A4 MOV X24, X1
	0x03C0F8A8 MOV X23, X0
	0x03C0F8AC TBNZ X8, 0x0, 0x3C0F8C4
	0x03C0F8B0 ADRP X0, 0x4E8000
	0x03C0F8B4 LDR X0, [X0 + 0x2C8]
	0x03C0F8B8 BL 0x1C16CF4
	0x03C0F8BC MOVZ W8, 0x1
	0x03C0F8C0 STRB W8, [X26 + 0x3E3]
	0x03C0F8C4 LDP V0, V1, [X24 + 0x20]
	0x03C0F8C8 LDP V2, V3, [X24]
	0x03C0F8CC LDR X0, [X25]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x7D6000
	015 Move X27, [X31+136]
	016 Move W28, [X31+128]
	017 Move X29, [X31+120]
	018 Move X8, [X20+1024]
	019 Move W19, [X31+112]
	020 Move X21, X5
	021 Move W22, W4
	022 Move X23, X3
	023 Move X24, X2
	024 Move W25, W1
	025 Move X26, X0
	026 Compare X8, 0
	027 JumpIfNotEqual {37}
	028 Move X0, -51355648
	029 Add X0, X0, 1652
	030 Move [X31+12], W7
	031 Move [X31], X6
	032 Call 0x1C17CB8
	033 Move X6, [X31]
	034 Move W7, [X31+12]
	035 Move X8, X0
	036 Move [X20+1024], X0
	037 Move [X31+136], X27
	038 Move [X31+128], W28
	039 Move [X31+120], X29
	040 And W9, W19, 1
	041 Move X0, X26
	042 Move W1, W25
	043 Move X2, X24
	044 Move X3, X23
	045 Move W4, W22
	046 Move X5, X21
	047 Move X20, [X31+96]
	048 Move X19, [X31+104]
	049 Move X22, [X31+80]
	050 Move X21, [X31+88]
	051 Move X24, [X31+64]
	052 Move X23, [X31+72]
	053 Move X26, [X31+48]
	054 Move X25, [X31+56]
	055 Move X28, [X31+32]
	056 Move X27, [X31+40]
	057 Move X29, [X31+16]
	058 Move X30, [X31+24]
	059 Move [X31+112], W9
	060 Add X31, X31, 112
	061 CallNoReturn X8

Method: System.Void Blit4_Injected(UnityEngine.Texture source, UnityEngine.RenderTexture dest, ref UnityEngine.Vector2 scale, ref UnityEngine.Vector2 offset)

Disassembly:
	0x03C0FA9C MOV X0, X22
	0x03C0FAA0 MOV W1, W21
	0x03C0FAA4 MOV X2, X20
	0x03C0FAA8 MOV X3, X19
	0x03C0FAAC MOV X5, X31
	0x03C0FAB0 STR X31, [X31 + 0x18]
	0x03C0FAB4 STR X31, [X31 + 0x8]
	0x03C0FAB8 STR W8, [X31 + 0x10]
	0x03C0FABC STR W31, [X31]
	0x03C0FAC0 BL 0x3C0F1D0
	0x03C0FAC4 LDP X20, X19, [X31 + 0x50]
	0x03C0FAC8 LDP X22, X21, [X31 + 0x40]
	0x03C0FACC LDP X30, X23, [X31 + 0x30]
	0x03C0FAD0 ADD X31, X31, 0x60
	0x03C0FAD4 RET
	0x03C0FAD8 BL 0x1C16F20
	0x03C0FADC SUB X31, X31, 0x90
	0x03C0FAE0 STR X30, [X31 + 0x30]
	0x03C0FAE4 STP X28, X27, [X31 + 0x40]
	0x03C0FAE8 STP X26, X25, [X31 + 0x50]
	0x03C0FAEC STP X24, X23, [X31 + 0x60]
	0x03C0FAF0 STP X22, X21, [X31 + 0x70]
	0x03C0FAF4 STP X20, X19, [X31 + 0x80]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7D6000
	008 Move X4, [X23+1032]
	009 Move X19, X3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51478528
	016 Add X0, X0, 3790
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+1032], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move X2, X20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

