Type: UnityEngine.Pool.ObjectPool`1

Method: System.Int32 get_CountAll()

Disassembly:
	0x02494160 SUB X24, X8, X9
	0x02494164 ADD X31, X24, 0x0

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_CountAll(System.Int32 value)

Disassembly:
	0x02494168 STUR X10, [X29 - 0x28]
	0x0249416C ADD X10, X10, 0xF

ISIL:
	001 Move [X0+64], W1
	002 Return 

Method: System.Int32 get_CountInactive()

Disassembly:
	0x02494170 ADD X8, X31, 0x0
	0x02494174 AND X10, X10, 0x1FFFFFFFF
	0x02494178 SUB X23, X8, X10
	0x0249417C ADD X31, X23, 0x0
	0x02494180 ADD X8, X31, 0x0
	0x02494184 SUB X28, X8, X9
	0x02494188 ADD X31, X28, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void .ctor(System.Func`1<T> createFunc, System.Action`1<T> actionOnGet = null, System.Action`1<T> actionOnRelease = null, System.Action`1<T> actionOnDestroy = null, System.Boolean collectionCheck = True, System.Int32 defaultCapacity = 10, System.Int32 maxSize = 10000)

Disassembly:
	0x0249418C MOV X0, X28
	0x02494190 MOV W1, W31
	0x02494194 MOV X2, X22
	0x02494198 BL 0x3EB1B10
	0x0249419C LDR X1, [X27 + 0x68]
	0x024941A0 SUB X3, X29, 0x10
	0x024941A4 MOV X2, X20
	0x024941A8 MOV X4, X19
	0x024941AC LDR X0, [X1]
	0x024941B0 STUR X19, [X29 - 0x10]
	0x024941B4 LDR X8, [X1 + 0x10]
	0x024941B8 MOV X27, X20
	0x024941BC BLR X8
	0x024941C0 MOV X0, X21
	0x024941C4 MOV X1, X19
	0x024941C8 MOV X2, X22
	0x024941CC BL 0x3EB1AC0
	0x024941D0 MOV X0, X28
	0x024941D4 MOV X1, X21
	0x024941D8 MOV X2, X22
	0x024941DC BL 0x3EB1AC0
	0x024941E0 LDUR X0, [X29 - 0x30]
	0x024941E4 MOV X1, X21
	0x024941E8 MOV X2, X22
	0x024941EC BL 0x3EB1AC0
	0x024941F0 LDR X19, [X26 + 0x20]
	0x024941F4 LDR X8, [X19 + 0xC0]
	0x024941F8 LDR X0, [X8 + 0x40]
	0x024941FC LDRB W8, [X0 + 0x135]
	0x02494200 TBNZ X8, 0x0, 0x249420C
	0x02494204 BL 0x1C5C684
	0x02494208 LDR X19, [X26 + 0x20]
	0x0249420C MOV X0, X25
	0x02494210 MOV X1, X28
	0x02494214 MOV X2, X22
	0x02494218 BL 0x3EB1AC0
	0x0249421C LDUR X20, [X29 - 0x28]
	0x02494220 MOV X0, X23
	0x02494224 MOV W1, W31
	0x02494228 MOV X2, X20
	0x0249422C BL 0x3EB1B10
	0x02494230 LDR X8, [X19 + 0xC0]
	0x02494234 LDR X9, [X8 + 0x40]
	0x02494238 LDR W9, [X9 + 0x28]
	0x0249423C TBNZ X9, 0x1F, 0x2494248
	0x02494240 LDR X24, [X25]
	0x02494244 B 0x249425C
	0x02494248 MOV X0, X24
	0x0249424C MOV X1, X25
	0x02494250 MOV X2, X22
	0x02494254 BL 0x3EB1AC0
	0x02494258 LDR X8, [X19 + 0xC0]
	0x0249425C LDR X3, [X8 + 0x78]
	0x02494260 MOV X0, X23
	0x02494264 MOV X1, X24
	0x02494268 MOV X2, X27
	0x0249426C BL 0x24A6A04
	0x02494270 LDUR X0, [X29 - 0x20]
	0x02494274 MOV X1, X23
	0x02494278 MOV X2, X20
	0x0249427C BL 0x3EB1AC0
	0x02494280 LDUR X8, [X29 - 0x18]
	0x02494284 LDR X8, [X8 + 0x28]
	0x02494288 LDUR X9, [X29 - 0x8]
	0x0249428C CMP X8, X9
	0x02494290 B.NE 0x24942B4
	0x02494294 ADD X31, X29, 0x0
	0x02494298 LDP X20, X19, [X31 + 0x50]
	0x0249429C LDP X22, X21, [X31 + 0x40]
	0x024942A0 LDP X24, X23, [X31 + 0x30]
	0x024942A4 LDP X26, X25, [X31 + 0x20]
	0x024942A8 LDP X28, X27, [X31 + 0x10]
	0x024942AC LDP X29, X30, [X31], #0x60
	0x024942B0 RET
	0x024942B4 BL 0x3EB1B20
	0x024942B8 STP X29, X30, [X31 - 0x60]!
	0x024942BC STR X27, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X19, [X31+80]
	012 Move X25, X1
	013 Move X1, X31
	014 Move W21, W7
	015 Move W26, W6
	016 Move W27, W5
	017 Move X20, X4
	018 Move X22, X3
	019 Move X23, X2
	020 Move X24, X0
	021 Call Object..ctor, X0
	022 Compare X25, 0
	023 JumpIfEqual {60}
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, [X19+32]
	026 Move X8, [X8+192]
	027 Move X0, [X8+8]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 And W27, W27, 1
	035 Call 0x1C17F10
	036 Move X8, [X19+32]
	037 Move W1, W26
	038 Move X19, X0
	039 Move X8, [X8+192]
	040 Move X2, [X8+32]
	041 Call List`1<Object>..ctor, X0, X1
	042 Move [X24+16], X19
	043 Move [X24+24], X25
	044 Move [X24+56], W21
	045 Move [X24+32], X23
	046 Move [X24+40], X22
	047 Move [X24+48], X20
	048 Move [X24+60], W27
	049 Move X20, [X31+64]
	050 Move X19, [X31+72]
	051 Move X22, [X31+48]
	052 Move X21, [X31+56]
	053 Move X24, [X31+32]
	054 Move X23, [X31+40]
	055 Move X26, [X31+16]
	056 Move X25, [X31+24]
	057 Move X30, [X31+80]
	058 Move X27, [X31+88]
	059 Return 
	060 Move X0, 0x1C65000
	061 Move X0, [X0+1320]
	062 Call 0x1C17D08
	063 Call 0x1C17F10
	064 Move X20, X0
	065 Move X0, 0x1C89000
	066 Move X0, [X0+3488]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X20
	070 Move X2, X31
	071 Call ArgumentNullException..ctor, X0, X1
	072 Move X0, 0x1C68000
	073 Move X0, [X0+1400]
	074 Call 0x1C17D08
	075 Call 0x1C17F10
	076 Move X20, X0
	077 Move X0, 0x1C89000
	078 Move X0, [X0+3496]
	079 Call 0x1C17D08
	080 Move X21, X0
	081 Move X0, 0x1C89000
	082 Move X0, [X0+3504]
	083 Call 0x1C17D08
	084 Move X2, X0
	085 Move X0, X20
	086 Move X1, X21
	087 Move X3, X31
	088 Call ArgumentException..ctor, X0, X1, X2
	089 Move X0, X20
	090 Move X1, X19
	091 Call 0x1C17DEC

Method: T Get()

Disassembly:
	0x024942C0 STP X26, X25, [X31 + 0x20]
	0x024942C4 STP X24, X23, [X31 + 0x30]
	0x024942C8 STP X22, X21, [X31 + 0x40]
	0x024942CC STP X20, X19, [X31 + 0x50]
	0x024942D0 ADD X29, X31, 0x0
	0x024942D4 SUB X31, X31, 0x20
	0x024942D8 MRS X25, 0xC000
	0x024942DC LDR X8, [X25 + 0x28]
	0x024942E0 ADD X9, X31, 0x0
	0x024942E4 MOV X20, X1
	0x024942E8 MOV X22, X0
	0x024942EC STUR X8, [X29 - 0x8]
	0x024942F0 STUR X1, [X29 - 0x18]
	0x024942F4 LDR X26, [X2 + 0x20]
	0x024942F8 LDR X8, [X26 + 0xC0]
	0x024942FC LDR X8, [X8 + 0x40]
	0x02494300 LDR W21, [X8 + 0xFC]
	0x02494304 ADD X10, X21, 0xF
	0x02494308 AND X10, X10, 0x1FFFFFFFF
	0x0249430C SUB X19, X9, X10
	0x02494310 ADD X31, X19, 0x0
	0x02494314 LDR X24, [X0 + 0x20]
	0x02494318 CBZ X24, 0x2494384
	0x0249431C LDR W8, [X8 + 0x28]
	0x02494320 MOV X23, X2
	0x02494324 MOV X0, X19
	0x02494328 MOV X2, X21
	0x0249432C CMP W8, 0x0
	0x02494330 SUB X8, X29, 0x18
	0x02494334 CSEL X1, X20, X8, LT
	0x02494338 BL 0x3EB1AC0
	0x0249433C LDR X8, [X26 + 0xC0]
	0x02494340 MOV X4, X19
	0x02494344 LDR X9, [X8 + 0x40]
	0x02494348 LDR X1, [X8 + 0x58]
	0x0249434C LDR W8, [X9 + 0x28]
	0x02494350 LDR X0, [X1]
	0x02494354 TBNZ X8, 0x1F, 0x249435C
	0x02494358 LDR X4, [X19]
	0x0249435C STUR X4, [X29 - 0x10]
	0x02494360 LDR X8, [X1 + 0x10]
	0x02494364 SUB X3, X29, 0x10
	0x02494368 MOV X2, X24
	0x0249436C SUB X27, X29, 0x18
	0x02494370 BLR X8
	0x02494374 LDR X26, [X23 + 0x20]
	0x02494378 LDR X8, [X26 + 0xC0]
	0x0249437C LDR X8, [X8 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+16]
	008 Compare X0, 0
	009 JumpIfEqual {56}
	010 Move W8, [X0+24]
	011 Compare W8, 0
	012 JumpIfEqual {30}
	013 Move X9, [X1+32]
	014 Subtract W22, W8, 1
	015 Move X21, X1
	016 Move W1, W22
	017 Move X9, [X9+192]
	018 Move X2, [X9+80]
	019 Call List`1<Object>.get_Item, X0, X1
	020 Move X8, [X19+16]
	021 Compare X8, 0
	022 JumpIfEqual {56}
	023 Move X9, [X21+32]
	024 Move X20, X0
	025 Move X0, X8
	026 Move W1, W22
	027 Move X9, [X9+192]
	028 Move X2, [X9+88]
	029 Call List`1<Object>.RemoveAt, X0, X1
	030 Move X8, [X19+24]
	031 Compare X8, 0
	032 JumpIfEqual {56}
	033 Move X9, [X8+24]
	034 Move X0, [X8+64]
	035 Move X1, [X8+40]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move W8, [X19+64]
	038 Move X20, X0
	039 Add W8, W8, 1
	040 Move [X19+64], W8
	041 Move X8, [X19+32]
	042 Compare X8, 0
	043 JumpIfEqual {49}
	044 Move X9, [X8+24]
	045 Move X0, [X8+64]
	046 Move X2, [X8+40]
	047 Move X1, X20
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X0, X20
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Return X0
	056 Call 0x1C17F20

Method: UnityEngine.Pool.PooledObject`1<T> Get(out T v)

Disassembly:
	0x02494380 B 0x2494388
	0x02494384 SUB X27, X29, 0x18
	0x02494388 LDR W8, [X8 + 0x28]
	0x0249438C LDR X22, [X22 + 0x10]
	0x02494390 MOV X0, X19
	0x02494394 MOV X2, X21
	0x02494398 CMP W8, 0x0
	0x0249439C CSEL X1, X20, X27, LT
	0x024943A0 BL 0x3EB1AC0
	0x024943A4 CBZ X22, 0x249440C
	0x024943A8 LDR X8, [X26 + 0xC0]
	0x024943AC LDR X9, [X8 + 0x40]
	0x024943B0 LDR X1, [X8 + 0x80]
	0x024943B4 LDR W8, [X9 + 0x28]
	0x024943B8 LDR X0, [X1]
	0x024943BC TBNZ X8, 0x1F, 0x24943C4
	0x024943C0 LDR X19, [X19]
	0x024943C4 STUR X19, [X29 - 0x10]
	0x024943C8 LDR X8, [X1 + 0x10]
	0x024943CC SUB X3, X29, 0x10
	0x024943D0 MOV X2, X22
	0x024943D4 MOV X4, X19
	0x024943D8 BLR X8
	0x024943DC LDR X8, [X25 + 0x28]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X20, X1
	008 Move X19, X2
	009 Move X21, X0
	010 Move X8, [X8+192]
	011 Move X1, [X8+112]
	012 Call 0x24942C0, X0
	013 Move [X20], X0
	014 Move [X31], X31
	015 Move [X31+8], X31
	016 Move X8, [X19+32]
	017 Move X1, X0
	018 Add X0, X31, 0
	019 Move X2, X21
	020 Move X8, [X8+192]
	021 Move X3, [X8+128]
	022 Call 0x24A7D18, X0, X1, X2
	023 Move X0, [X31]
	024 Move X1, [X31+8]
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Void Release(T element)

Disassembly:
	0x024943E0 LDUR X9, [X29 - 0x8]
	0x024943E4 CMP X8, X9
	0x024943E8 B.NE 0x2494410
	0x024943EC ADD X31, X29, 0x0
	0x024943F0 LDP X20, X19, [X31 + 0x50]
	0x024943F4 LDP X22, X21, [X31 + 0x40]
	0x024943F8 LDP X24, X23, [X31 + 0x30]
	0x024943FC LDP X26, X25, [X31 + 0x20]
	0x02494400 LDR X27, [X31 + 0x10]
	0x02494404 LDP X29, X30, [X31], #0x60
	0x02494408 RET
	0x0249440C BL 0x1C16F20
	0x02494410 BL 0x3EB1B20
	0x02494414 LDR W0, [X0 + 0x18]
	0x02494418 RET
	0x0249441C STP X30, X23, [X31 - 0x30]!
	0x02494420 STP X22, X21, [X31 + 0x10]
	0x02494424 STP X20, X19, [X31 + 0x20]
	0x02494428 ADRP X22, 0x1F45000
	0x0249442C ADRP X23, 0x1C5F000
	0x02494430 LDRB W8, [X22 + 0xB90]
	0x02494434 LDR X23, [X23 + 0x5A8]
	0x02494438 MOV X19, X2
	0x0249443C MOV W21, W1
	0x02494440 MOV X20, X0
	0x02494444 TBNZ X8, 0x0, 0x249445C
	0x02494448 ADRP X0, 0x1C5F000
	0x0249444C LDR X0, [X0 + 0x5A8]
	0x02494450 BL 0x1C16CF4
	0x02494454 MOVZ W8, 0x1
	0x02494458 STRB W8, [X22 + 0xB90]
	0x0249445C LDR X0, [X23]
	0x02494460 LDR W8, [X0 + 0xE0]
	0x02494464 CBNZ W8, 0x249446C
	0x02494468 BL 0x1C16DFC
	0x0249446C MOV W0, W31
	0x02494470 MOV W1, W21
	0x02494474 MOV X2, X31
	0x02494478 BL 0x337EDF0
	0x0249447C LDR X8, [X20 + 0x10]
	0x02494480 STR W0, [X20 + 0x18]
	0x02494484 CBZ X8, 0x24944D0
	0x02494488 LDR W8, [X8 + 0x18]
	0x0249448C CMP W8, W0
	0x02494490 B.LE 0x24944C0
	0x02494494 LDR X8, [X19 + 0x20]
	0x02494498 MOV X0, X20
	0x0249449C LDR X8, [X8 + 0xC0]
	0x024944A0 LDR X1, [X8 + 0x8]
	0x024944A4 BL 0x249468C
	0x024944A8 LDR X8, [X20 + 0x10]
	0x024944AC CBZ X8, 0x24944D0
	0x024944B0 LDR W9, [X20 + 0x18]
	0x024944B4 LDR W8, [X8 + 0x18]
	0x024944B8 CMP W8, W9
	0x024944BC B.GT 0x2494494
	0x024944C0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+40]
	006 Move X21, X2
	007 Move X20, X0
	008 Move X19, X1
	009 Compare X8, 0
	010 JumpIfEqual {16}
	011 Move X9, [X8+24]
	012 Move X0, [X8+64]
	013 Move X2, [X8+40]
	014 Move X1, X19
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X0, [X20+16]
	017 Compare X0, 0
	018 JumpIfEqual {67}
	019 NotImplemented "Instruction LDRSW not yet implemented."
	020 Move W9, [X20+56]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X9, [X21+32]
	023 Move W11, [X0+28]
	024 Move X10, [X9+192]
	025 Move X9, [X0+16]
	026 Add W11, W11, 1
	027 Move X10, [X10+152]
	028 Move [X0+28], W11
	029 Compare X9, 0
	030 JumpIfEqual {67}
	031 Move W11, [X9+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W10, W8, 1
	034 Add X8, X9, X8
	035 Move [X0+24], W10
	036 Move [X8+32], X19
	037 Move W9, [X20+64]
	038 Move X8, [X20+48]
	039 Subtract W9, W9, 1
	040 Move [X20+64], W9
	041 Compare X8, 0
	042 JumpIfEqual {52}
	043 Move X3, [X8+24]
	044 Move X0, [X8+64]
	045 Move X2, [X8+40]
	046 Move X1, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 CallNoReturn X3
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Move X8, [X10+32]
	058 Move X1, X19
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X8, [X8+192]
	062 Move X2, [X8+112]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 Call List`1<Object>.AddWithResize, X0, X1
	066 Return 
	067 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x024944C4 LDP X22, X21, [X31 + 0x10]
	0x024944C8 LDP X30, X23, [X31], #0x30
	0x024944CC RET
	0x024944D0 BL 0x1C16F20
	0x024944D4 STP X30, X23, [X31 - 0x30]!
	0x024944D8 STP X22, X21, [X31 + 0x10]
	0x024944DC STP X20, X19, [X31 + 0x20]
	0x024944E0 LDR X8, [X3 + 0x20]
	0x024944E4 MOV X20, X3
	0x024944E8 MOV W22, W2
	0x024944EC MOV X21, X1
	0x024944F0 LDR X8, [X8 + 0xC0]
	0x024944F4 MOV X19, X0
	0x024944F8 LDR X8, [X8 + 0x20]
	0x024944FC LDRB W9, [X8 + 0x135]
	0x02494500 TBNZ X9, 0x0, 0x2494510
	0x02494504 MOV X0, X8
	0x02494508 BL 0x1C5C684
	0x0249450C MOV X8, X0
	0x02494510 MOV X0, X8
	0x02494514 BL 0x1C16F10
	0x02494518 LDR X8, [X20 + 0x20]
	0x0249451C MOV X23, X0
	0x02494520 LDR X8, [X8 + 0xC0]
	0x02494524 LDR X1, [X8 + 0x28]
	0x02494528 BL 0x2601D04
	0x0249452C MOV X0, X19
	0x02494530 MOV X1, X31
	0x02494534 STR X23, [X19 + 0x10]
	0x02494538 BL 0x33BDD8C
	0x0249453C LDR X8, [X20 + 0x20]
	0x02494540 MOV X0, X19
	0x02494544 MOV W1, W22
	0x02494548 LDR X8, [X8 + 0xC0]
	0x0249454C LDR X2, [X8 + 0x30]
	0x02494550 BL 0x249441C
	0x02494554 CBNZ X21, 0x249465C
	0x02494558 LDR X8, [X20 + 0x20]
	0x0249455C LDR X8, [X8 + 0xC0]
	0x02494560 LDR X0, [X8 + 0x48]
	0x02494564 LDRB W8, [X0 + 0x135]
	0x02494568 TBNZ X8, 0x0, 0x2494570
	0x0249456C BL 0x1C5C684
	0x02494570 LDR W8, [X0 + 0xE0]
	0x02494574 CBNZ W8, 0x249457C
	0x02494578 BL 0x1C16DFC
	0x0249457C LDR X8, [X20 + 0x20]
	0x02494580 LDR X8, [X8 + 0xC0]
	0x02494584 LDR X0, [X8 + 0x48]
	0x02494588 LDRB W8, [X0 + 0x135]
	0x0249458C TBNZ X8, 0x0, 0x2494594
	0x02494590 BL 0x1C5C684
	0x02494594 LDR X8, [X0 + 0xB8]
	0x02494598 LDR X21, [X8 + 0x8]
	0x0249459C CBNZ X21, 0x249465C
	0x024945A0 LDR X8, [X20 + 0x20]
	0x024945A4 LDR X8, [X8 + 0xC0]
	0x024945A8 LDR X0, [X8 + 0x48]
	0x024945AC LDRB W8, [X0 + 0x135]
	0x024945B0 TBNZ X8, 0x0, 0x24945B8
	0x024945B4 BL 0x1C5C684
	0x024945B8 LDR W8, [X0 + 0xE0]
	0x024945BC CBNZ W8, 0x24945C4
	0x024945C0 BL 0x1C16DFC
	0x024945C4 LDR X8, [X20 + 0x20]
	0x024945C8 LDR X8, [X8 + 0xC0]
	0x024945CC LDR X0, [X8 + 0x48]
	0x024945D0 LDRB W9, [X0 + 0x135]
	0x024945D4 TBNZ X9, 0x0, 0x24945E4
	0x024945D8 BL 0x1C5C684
	0x024945DC LDR X8, [X20 + 0x20]
	0x024945E0 LDR X8, [X8 + 0xC0]
	0x024945E4 LDR X8, [X8 + 0x38]
	0x024945E8 LDR X9, [X0 + 0xB8]
	0x024945EC LDRB W10, [X8 + 0x135]
	0x024945F0 LDR X22, [X9]
	0x024945F4 TBNZ X10, 0x0, 0x2494604
	0x024945F8 MOV X0, X8
	0x024945FC BL 0x1C5C684
	0x02494600 MOV X8, X0
	0x02494604 MOV X0, X8
	0x02494608 BL 0x1C16F10
	0x0249460C LDR X8, [X20 + 0x20]
	0x02494610 MOV X1, X22
	0x02494614 MOV X21, X0
	0x02494618 LDR X8, [X8 + 0xC0]
	0x0249461C LDP X2, X3, [X8 + 0x50]
	0x02494620 BL 0x2D27AA8
	0x02494624 LDR X8, [X20 + 0x20]
	0x02494628 LDR X8, [X8 + 0xC0]
	0x0249462C LDR X0, [X8 + 0x48]
	0x02494630 LDRB W9, [X0 + 0x135]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move [X31+32], X31
	008 Move [X31+40], X31
	009 Move [X31+48], X31
	010 Move X8, [X0+48]
	011 Move X19, X0
	012 Compare X8, 0
	013 JumpIfEqual {56}
	014 Move X0, [X19+16]
	015 Compare X0, 0
	016 JumpIfEqual {78}
	017 Move X8, [X1+32]
	018 Move X20, X1
	019 Move X8, [X8+192]
	020 Move X1, [X8+160]
	021 Add X8, X31, 8
	022 Call List`1<Object>.GetEnumerator, X0
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 Move X8, [X31+24]
	025 Move [X31+2], V0
	026 Move [X31+48], X8
	027 Move X8, [X20+32]
	028 Move X8, [X8+192]
	029 Move X1, [X8+192]
	030 Add X0, X31, 32
	031 Call Enumerator<Object>.MoveNext, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {44}
	036 Move X8, [X19+48]
	037 Compare X8, 0
	038 JumpIfEqual {77}
	039 Move X1, [X31+48]
	040 Move X0, [X8+64]
	041 Move X9, [X8+24]
	042 Move X2, [X8+40]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X21, X31
	045 Move W22, 5
	046 Move X8, [X20+32]
	047 Add X0, X31, 32
	048 Move X8, [X8+192]
	049 Move X1, [X8+200]
	050 Call Enumerator<Object>.Dispose, X0
	051 Compare X21, 0
	052 JumpIfNotEqual {79}
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Compare W22, 0
	055 JumpIfNotEqual {70}
	056 Move X8, [X19+16]
	057 Compare X8, 0
	058 JumpIfEqual {78}
	059 Move W2, [X8+24]
	060 Move W9, [X8+28]
	061 Add W9, W9, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X8+24], W31
	064 Move [X8+28], W9
	065 Move X0, [X8+16]
	066 Move W1, W31
	067 Move X3, X31
	068 Call Array.Clear, X0, X1, X2
	069 Move [X19+64], W31
	070 Move X20, [X31+96]
	071 Move X19, [X31+104]
	072 Move X22, [X31+80]
	073 Move X21, [X31+88]
	074 Move X30, [X31+64]
	075 Add X31, X31, 112
	076 Return 
	077 Call 0x1C17F20
	078 Call 0x1C17F20
	079 Move X0, X21
	080 Call 0x1C17F18
	081 Move X22, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X22
	084 Call 0x3EB2AD0
	085 Move X21, [X0]
	086 Call 0x3EB2AE0
	087 Move W22, W31
	088 Move X21, X31
	089 Move X22, X0
	090 Move X8, [X20+32]
	091 Move X8, [X8+192]
	092 Move X1, [X8+200]
	093 Add X0, X31, 32
	094 Call Enumerator<Object>.Dispose, X0
	095 Compare X21, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X22
	098 Call 0x1D2D690
	099 Move X0, X21
	100 Call 0x1C17F18
	101 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x02494634 TBNZ X9, 0x0, 0x2494644
	0x02494638 BL 0x1C5C684
	0x0249463C LDR X8, [X20 + 0x20]
	0x02494640 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+216]
	004 Call 0x24944C4, X0
	005 Return 

