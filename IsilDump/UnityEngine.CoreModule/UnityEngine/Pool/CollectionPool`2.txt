Type: UnityEngine.Pool.CollectionPool`2

Method: TCollection Get()

Disassembly:
	0x028F9B30 LDR X21, [X9]
	0x028F9B34 TBNZ X10, 0x0, 0x28F9B44
	0x028F9B38 MOV X0, X8
	0x028F9B3C BL 0x1C5C684
	0x028F9B40 MOV X8, X0
	0x028F9B44 LDR X8, [X8 + 0xC0]
	0x028F9B48 LDR X0, [X8 + 0x60]
	0x028F9B4C LDRB W8, [X0 + 0x135]
	0x028F9B50 TBNZ X8, 0x0, 0x28F9B58
	0x028F9B54 BL 0x1C5C684
	0x028F9B58 BL 0x1C16F10
	0x028F9B5C LDR X8, [X19 + 0x20]
	0x028F9B60 MOV X20, X0
	0x028F9B64 ADD X9, X8, 0x135
	0x028F9B68 LDRH W9, [X9]
	0x028F9B6C TBNZ X9, 0x0, 0x28F9B88
	0x028F9B70 MOV X0, X8
	0x028F9B74 BL 0x1C5C684
	0x028F9B78 LDR X8, [X19 + 0x20]
	0x028F9B7C ADD X9, X8, 0x135
	0x028F9B80 LDRH W9, [X9]
	0x028F9B84 B 0x28F9B8C
	0x028F9B88 MOV X0, X8
	0x028F9B8C LDR X10, [X0 + 0xC0]
	0x028F9B90 LDR X22, [X10 + 0x58]
	0x028F9B94 TBNZ X9, 0x0, 0x28F9BA4
	0x028F9B98 MOV X0, X8
	0x028F9B9C BL 0x1C5C684
	0x028F9BA0 MOV X8, X0
	0x028F9BA4 LDR X8, [X8 + 0xC0]
	0x028F9BA8 MOV X0, X20
	0x028F9BAC MOV X1, X21
	0x028F9BB0 MOV X2, X22
	0x028F9BB4 LDR X3, [X8 + 0x68]
	0x028F9BB8 BL 0x2D27AA8
	0x028F9BBC LDR X0, [X19 + 0x20]
	0x028F9BC0 LDRB W8, [X0 + 0x135]
	0x028F9BC4 TBNZ X8, 0x0, 0x28F9BCC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, [X8+16]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+184]
	040 Move X20, [X8]
	041 Compare X20, 0
	042 JumpIfEqual {58}
	043 Move X0, [X19+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+192]
	051 Move X0, X20
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, [X8+24]
	055 Move X30, [X31+32]
	056 Call 0x24942C0, X0
	057 Return X0
	058 Call 0x1C17F20

Method: UnityEngine.Pool.PooledObject`1<TCollection> Get(out TCollection value)

Disassembly:
	0x028F9BC8 BL 0x1C5C684
	0x028F9BCC LDR X8, [X0 + 0xC0]
	0x028F9BD0 LDR X0, [X8 + 0x50]
	0x028F9BD4 LDRB W8, [X0 + 0x135]
	0x028F9BD8 TBNZ X8, 0x0, 0x28F9BE0
	0x028F9BDC BL 0x1C5C684
	0x028F9BE0 LDR X8, [X19 + 0x20]
	0x028F9BE4 LDR X9, [X0 + 0xB8]
	0x028F9BE8 LDRB W10, [X8 + 0x135]
	0x028F9BEC LDR X22, [X9]
	0x028F9BF0 TBNZ X10, 0x0, 0x28F9C00
	0x028F9BF4 MOV X0, X8
	0x028F9BF8 BL 0x1C5C684
	0x028F9BFC MOV X8, X0
	0x028F9C00 LDR X8, [X8 + 0xC0]
	0x028F9C04 LDR X0, [X8 + 0x78]
	0x028F9C08 LDRB W8, [X0 + 0x135]
	0x028F9C0C TBNZ X8, 0x0, 0x28F9C14
	0x028F9C10 BL 0x1C5C684
	0x028F9C14 BL 0x1C16F10
	0x028F9C18 LDR X8, [X19 + 0x20]
	0x028F9C1C MOV X21, X0
	0x028F9C20 ADD X9, X8, 0x135
	0x028F9C24 LDRH W9, [X9]
	0x028F9C28 TBNZ X9, 0x0, 0x28F9C44
	0x028F9C2C MOV X0, X8
	0x028F9C30 BL 0x1C5C684
	0x028F9C34 LDR X8, [X19 + 0x20]
	0x028F9C38 ADD X9, X8, 0x135
	0x028F9C3C LDRH W9, [X9]
	0x028F9C40 B 0x28F9C48
	0x028F9C44 MOV X0, X8
	0x028F9C48 LDR X10, [X0 + 0xC0]
	0x028F9C4C LDR X23, [X10 + 0x70]
	0x028F9C50 TBNZ X9, 0x0, 0x28F9C60
	0x028F9C54 MOV X0, X8
	0x028F9C58 BL 0x1C5C684
	0x028F9C5C MOV X8, X0
	0x028F9C60 LDR X8, [X8 + 0xC0]
	0x028F9C64 MOV X0, X21
	0x028F9C68 MOV X1, X22
	0x028F9C6C MOV X2, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8+16]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+184]
	044 Move X21, [X8]
	045 Compare X21, 0
	046 JumpIfEqual {64}
	047 Move X0, [X20+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X1, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X0, X21
	059 Move X2, [X8+48]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call 0x2494380, X0, X1
	063 Return X0
	064 Call 0x1C17F20

Method: System.Void Release(TCollection toRelease)

Disassembly:
	0x028F9C70 LDR X3, [X8 + 0x80]
	0x028F9C74 BL 0x2A6B948
	0x028F9C78 LDR X0, [X19 + 0x20]
	0x028F9C7C LDRB W8, [X0 + 0x135]
	0x028F9C80 TBNZ X8, 0x0, 0x28F9C88
	0x028F9C84 BL 0x1C5C684
	0x028F9C88 LDR X8, [X0 + 0xC0]
	0x028F9C8C LDR X0, [X8 + 0x8]
	0x028F9C90 LDRB W8, [X0 + 0x135]
	0x028F9C94 TBNZ X8, 0x0, 0x28F9C9C
	0x028F9C98 BL 0x1C5C684
	0x028F9C9C BL 0x1C16F10
	0x028F9CA0 LDR X8, [X19 + 0x20]
	0x028F9CA4 MOV X22, X0
	0x028F9CA8 LDRB W9, [X8 + 0x135]
	0x028F9CAC TBNZ X9, 0x0, 0x28F9CBC
	0x028F9CB0 MOV X0, X8
	0x028F9CB4 BL 0x1C5C684
	0x028F9CB8 MOV X8, X0
	0x028F9CBC LDR X8, [X8 + 0xC0]
	0x028F9CC0 MOVZ W5, 0x1
	0x028F9CC4 MOVZ W6, 0xA
	0x028F9CC8 MOVZ W7, 0x2710
	0x028F9CCC LDR X8, [X8 + 0x88]
	0x028F9CD0 MOV X0, X22
	0x028F9CD4 MOV X1, X20
	0x028F9CD8 MOV X2, X31
	0x028F9CDC MOV X3, X21
	0x028F9CE0 MOV X4, X31
	0x028F9CE4 STR X8, [X31]
	0x028F9CE8 BL 0x249318C
	0x028F9CEC LDR X0, [X19 + 0x20]
	0x028F9CF0 LDRB W8, [X0 + 0x135]
	0x028F9CF4 TBNZ X8, 0x0, 0x28F9CFC
	0x028F9CF8 BL 0x1C5C684
	0x028F9CFC LDR X8, [X0 + 0xC0]
	0x028F9D00 LDR X0, [X8 + 0x10]
	0x028F9D04 LDRB W8, [X0 + 0x135]
	0x028F9D08 TBNZ X8, 0x0, 0x28F9D10
	0x028F9D0C BL 0x1C5C684
	0x028F9D10 LDR X8, [X0 + 0xB8]
	0x028F9D14 STR X22, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X20, X1
	007 Move X19, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8+16]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X20+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X0+184]
	044 Move X21, [X8]
	045 Compare X21, 0
	046 JumpIfEqual {64}
	047 Move X0, [X20+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X1, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X0, X21
	059 Move X2, [X8+64]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Call 0x24943E0, X0, X1
	063 Return 
	064 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x028F9D18 LDR X0, [X19 + 0x20]
	0x028F9D1C LDRB W8, [X0 + 0x135]
	0x028F9D20 TBNZ X8, 0x0, 0x28F9D28
	0x028F9D24 BL 0x1C5C684
	0x028F9D28 LDR X8, [X0 + 0xC0]
	0x028F9D2C LDR X0, [X8 + 0x10]
	0x028F9D30 LDRB W8, [X0 + 0x135]
	0x028F9D34 TBNZ X8, 0x0, 0x28F9D4C
	0x028F9D38 LDP X20, X19, [X31 + 0x30]
	0x028F9D3C LDP X22, X21, [X31 + 0x20]
	0x028F9D40 LDP X30, X23, [X31 + 0x10]
	0x028F9D44 ADD X31, X31, 0x40
	0x028F9D48 B 0x1C5C684
	0x028F9D4C LDP X20, X19, [X31 + 0x30]
	0x028F9D50 LDP X22, X21, [X31 + 0x20]
	0x028F9D54 LDP X30, X23, [X31 + 0x10]
	0x028F9D58 ADD X31, X31, 0x40
	0x028F9D5C RET
	0x028F9D60 STR X30, [X31 - 0x20]!
	0x028F9D64 STP X20, X19, [X31 + 0x10]
	0x028F9D68 MOV X19, X0
	0x028F9D6C LDR X0, [X0 + 0x20]
	0x028F9D70 LDRB W8, [X0 + 0x135]
	0x028F9D74 TBNZ X8, 0x0, 0x28F9D7C
	0x028F9D78 BL 0x1C5C684
	0x028F9D7C LDR X8, [X0 + 0xC0]
	0x028F9D80 LDR X0, [X8 + 0x10]
	0x028F9D84 LDRB W8, [X0 + 0x135]
	0x028F9D88 TBNZ X8, 0x0, 0x28F9D90
	0x028F9D8C BL 0x1C5C684
	0x028F9D90 LDR W8, [X0 + 0xE0]
	0x028F9D94 CBNZ W8, 0x28F9D9C
	0x028F9D98 BL 0x1C16DFC
	0x028F9D9C LDR X0, [X19 + 0x20]
	0x028F9DA0 LDRB W8, [X0 + 0x135]
	0x028F9DA4 TBNZ X8, 0x0, 0x28F9DAC
	0x028F9DA8 BL 0x1C5C684
	0x028F9DAC LDR X8, [X0 + 0xC0]
	0x028F9DB0 LDR X0, [X8 + 0x10]
	0x028F9DB4 LDRB W8, [X0 + 0x135]
	0x028F9DB8 TBNZ X8, 0x0, 0x28F9DC0
	0x028F9DBC BL 0x1C5C684
	0x028F9DC0 LDR X8, [X0 + 0xB8]
	0x028F9DC4 LDR X20, [X8]
	0x028F9DC8 CBZ X20, 0x28F9DF4
	0x028F9DCC LDR X0, [X19 + 0x20]
	0x028F9DD0 LDRB W8, [X0 + 0x135]
	0x028F9DD4 TBNZ X8, 0x0, 0x28F9DDC
	0x028F9DD8 BL 0x1C5C684
	0x028F9DDC LDR X8, [X0 + 0xC0]
	0x028F9DE0 MOV X0, X20
	0x028F9DE4 LDP X20, X19, [X31 + 0x10]
	0x028F9DE8 LDR X1, [X8 + 0x18]
	0x028F9DEC LDR X30, [X31], #0x20
	0x028F9DF0 B 0x24932C0
	0x028F9DF4 BL 0x1C16F20
	0x028F9DF8 STP X30, X21, [X31 - 0x20]!
	0x028F9DFC STP X20, X19, [X31 + 0x10]
	0x028F9E00 LDR X8, [X1 + 0x20]
	0x028F9E04 MOV X20, X1
	0x028F9E08 MOV X19, X0
	0x028F9E0C LDRB W9, [X8 + 0x135]
	0x028F9E10 TBNZ X9, 0x0, 0x28F9E20
	0x028F9E14 MOV X0, X8
	0x028F9E18 BL 0x1C5C684
	0x028F9E1C MOV X8, X0
	0x028F9E20 LDR X8, [X8 + 0xC0]
	0x028F9E24 LDR X0, [X8 + 0x10]
	0x028F9E28 LDRB W8, [X0 + 0x135]
	0x028F9E2C TBNZ X8, 0x0, 0x28F9E34
	0x028F9E30 BL 0x1C5C684
	0x028F9E34 LDR W8, [X0 + 0xE0]
	0x028F9E38 CBNZ W8, 0x28F9E40
	0x028F9E3C BL 0x1C16DFC
	0x028F9E40 LDR X0, [X20 + 0x20]
	0x028F9E44 LDRB W8, [X0 + 0x135]
	0x028F9E48 TBNZ X8, 0x0, 0x28F9E50
	0x028F9E4C BL 0x1C5C684
	0x028F9E50 LDR X8, [X0 + 0xC0]
	0x028F9E54 LDR X0, [X8 + 0x10]
	0x028F9E58 LDRB W8, [X0 + 0x135]
	0x028F9E5C TBNZ X8, 0x0, 0x28F9E64
	0x028F9E60 BL 0x1C5C684
	0x028F9E64 LDR X8, [X0 + 0xB8]
	0x028F9E68 LDR X21, [X8]
	0x028F9E6C CBZ X21, 0x28F9E9C
	0x028F9E70 LDR X0, [X20 + 0x20]
	0x028F9E74 LDRB W8, [X0 + 0x135]
	0x028F9E78 TBNZ X8, 0x0, 0x28F9E80
	0x028F9E7C BL 0x1C5C684
	0x028F9E80 LDR X8, [X0 + 0xC0]
	0x028F9E84 MOV X1, X19
	0x028F9E88 LDP X20, X19, [X31 + 0x10]
	0x028F9E8C MOV X0, X21
	0x028F9E90 LDR X2, [X8 + 0x30]
	0x028F9E94 LDP X30, X21, [X31], #0x20
	0x028F9E98 B 0x2493380
	0x028F9E9C BL 0x1C16F20
	0x028F9EA0 STP X30, X21, [X31 - 0x20]!
	0x028F9EA4 STP X20, X19, [X31 + 0x10]
	0x028F9EA8 LDR X8, [X1 + 0x20]
	0x028F9EAC MOV X20, X1
	0x028F9EB0 MOV X19, X0
	0x028F9EB4 LDRB W9, [X8 + 0x135]
	0x028F9EB8 TBNZ X9, 0x0, 0x28F9EC8
	0x028F9EBC MOV X0, X8
	0x028F9EC0 BL 0x1C5C684
	0x028F9EC4 MOV X8, X0
	0x028F9EC8 LDR X8, [X8 + 0xC0]
	0x028F9ECC LDR X0, [X8 + 0x10]
	0x028F9ED0 LDRB W8, [X0 + 0x135]
	0x028F9ED4 TBNZ X8, 0x0, 0x28F9EDC
	0x028F9ED8 BL 0x1C5C684
	0x028F9EDC LDR W8, [X0 + 0xE0]
	0x028F9EE0 CBNZ W8, 0x28F9EE8
	0x028F9EE4 BL 0x1C16DFC
	0x028F9EE8 LDR X0, [X20 + 0x20]
	0x028F9EEC LDRB W8, [X0 + 0x135]
	0x028F9EF0 TBNZ X8, 0x0, 0x28F9EF8
	0x028F9EF4 BL 0x1C5C684
	0x028F9EF8 LDR X8, [X0 + 0xC0]
	0x028F9EFC LDR X0, [X8 + 0x10]
	0x028F9F00 LDRB W8, [X0 + 0x135]
	0x028F9F04 TBNZ X8, 0x0, 0x28F9F0C
	0x028F9F08 BL 0x1C5C684
	0x028F9F0C LDR X8, [X0 + 0xB8]
	0x028F9F10 LDR X21, [X8]
	0x028F9F14 CBZ X21, 0x28F9F44
	0x028F9F18 LDR X0, [X20 + 0x20]
	0x028F9F1C LDRB W8, [X0 + 0x135]
	0x028F9F20 TBNZ X8, 0x0, 0x28F9F28
	0x028F9F24 BL 0x1C5C684
	0x028F9F28 LDR X8, [X0 + 0xC0]
	0x028F9F2C MOV X1, X19
	0x028F9F30 LDP X20, X19, [X31 + 0x10]
	0x028F9F34 MOV X0, X21
	0x028F9F38 LDR X2, [X8 + 0x40]
	0x028F9F3C LDP X30, X21, [X31], #0x20
	0x028F9F40 B 0x24933E0
	0x028F9F44 BL 0x1C16F20
	0x028F9F48 SUB X31, X31, 0x40
	0x028F9F4C STP X30, X23, [X31 + 0x10]
	0x028F9F50 STP X22, X21, [X31 + 0x20]
	0x028F9F54 STP X20, X19, [X31 + 0x30]
	0x028F9F58 MOV X19, X0
	0x028F9F5C LDR X0, [X0 + 0x20]
	0x028F9F60 LDRB W8, [X0 + 0x135]
	0x028F9F64 TBNZ X8, 0x0, 0x28F9F6C
	0x028F9F68 BL 0x1C5C684
	0x028F9F6C LDR X8, [X0 + 0xC0]
	0x028F9F70 LDR X0, [X8 + 0x50]
	0x028F9F74 LDRB W8, [X0 + 0x135]
	0x028F9F78 TBNZ X8, 0x0, 0x28F9F80
	0x028F9F7C BL 0x1C5C684
	0x028F9F80 LDR W8, [X0 + 0xE0]
	0x028F9F84 CBNZ W8, 0x28F9F8C
	0x028F9F88 BL 0x1C16DFC
	0x028F9F8C LDR X0, [X19 + 0x20]
	0x028F9F90 LDRB W8, [X0 + 0x135]
	0x028F9F94 TBNZ X8, 0x0, 0x28F9F9C
	0x028F9F98 BL 0x1C5C684
	0x028F9F9C LDR X8, [X0 + 0xC0]
	0x028F9FA0 LDR X0, [X8 + 0x50]
	0x028F9FA4 LDRB W8, [X0 + 0x135]
	0x028F9FA8 TBNZ X8, 0x0, 0x28F9FB0
	0x028F9FAC BL 0x1C5C684
	0x028F9FB0 LDR X8, [X19 + 0x20]
	0x028F9FB4 LDR X9, [X0 + 0xB8]
	0x028F9FB8 LDRB W10, [X8 + 0x135]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, X0
	009 Move X0, [X0+32]
	010 Move W8, [X0+309]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Move X0, [X8+80]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, [X19+32]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X0+192]
	036 Move X0, [X8+80]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move X8, [X19+32]
	044 Move X9, [X0+184]
	045 Move W10, [X8+309]
	046 Move X21, [X9]
	047 Move TEMP, X10
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {54}
	051 Move X0, X8
	052 Call 0x1C5D684
	053 Move X8, X0
	054 Move X8, [X8+192]
	055 Move X0, [X8+96]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Call 0x1C17F10
	063 Move X8, [X19+32]
	064 Move X20, X0
	065 Add X9, X8, 309
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move TEMP, X9
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {76}
	071 Move X0, X8
	072 Call 0x1C5D684
	073 Move X8, [X19+32]
	074 Add X9, X8, 309
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X0, X8
	077 Move X10, [X0+192]
	078 Move X22, [X10+88]
	079 Move TEMP, X9
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {86}
	083 Move X0, X8
	084 Call 0x1C5D684
	085 Move X8, X0
	086 Move X8, [X8+192]
	087 Move X0, X20
	088 Move X1, X21
	089 Move X2, X22
	090 Move X3, [X8+104]
	091 Call Func`1<Object>..ctor, X0, X1, X2
	092 Move X0, [X19+32]
	093 Move W8, [X0+309]
	094 Move TEMP, X8
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {99}
	098 Call 0x1C5D684
	099 Move X8, [X0+192]
	100 Move X0, [X8+80]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Move X8, [X19+32]
	108 Move X9, [X0+184]
	109 Move W10, [X8+309]
	110 Move X22, [X9]
	111 Move TEMP, X10
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {118}
	115 Move X0, X8
	116 Call 0x1C5D684
	117 Move X8, X0
	118 Move X8, [X8+192]
	119 Move X0, [X8+120]
	120 Move W8, [X0+309]
	121 Move TEMP, X8
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {126}
	125 Call 0x1C5D684
	126 Call 0x1C17F10
	127 Move X8, [X19+32]
	128 Move X21, X0
	129 Add X9, X8, 309
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Move TEMP, X9
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {140}
	135 Move X0, X8
	136 Call 0x1C5D684
	137 Move X8, [X19+32]
	138 Add X9, X8, 309
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Move X0, X8
	141 Move X10, [X0+192]
	142 Move X23, [X10+112]
	143 Move TEMP, X9
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {150}
	147 Move X0, X8
	148 Call 0x1C5D684
	149 Move X8, X0
	150 Move X8, [X8+192]
	151 Move X0, X21
	152 Move X1, X22
	153 Move X2, X23
	154 Move X3, [X8+128]
	155 Call Action`1<Object>..ctor, X0, X1, X2
	156 Move X0, [X19+32]
	157 Move W8, [X0+309]
	158 Move TEMP, X8
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {163}
	162 Call 0x1C5D684
	163 Move X8, [X0+192]
	164 Move X0, [X8+8]
	165 Move W8, [X0+309]
	166 Move TEMP, X8
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfEqual {171}
	170 Call 0x1C5D684
	171 Call 0x1C17F10
	172 Move X8, [X19+32]
	173 Move X22, X0
	174 Move W9, [X8+309]
	175 Move TEMP, X9
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfEqual {182}
	179 Move X0, X8
	180 Call 0x1C5D684
	181 Move X8, X0
	182 Move X8, [X8+192]
	183 Move W5, 1
	184 Move W6, 10
	185 Move W7, 0x2710
	186 Move X8, [X8+136]
	187 Move X0, X22
	188 Move X1, X20
	189 Move X2, X31
	190 Move X3, X21
	191 Move X4, X31
	192 Move [X31], X8
	193 Call 0x249418C, X0, X1, X2, X3, X4, X5, X6, X7
	194 Move X0, [X19+32]
	195 Move W8, [X0+309]
	196 Move TEMP, X8
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {201}
	200 Call 0x1C5D684
	201 Move X8, [X0+192]
	202 Move X0, [X8+16]
	203 Move W8, [X0+309]
	204 Move TEMP, X8
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfEqual {209}
	208 Call 0x1C5D684
	209 Move X8, [X0+184]
	210 Move [X8], X22
	211 Move X0, [X19+32]
	212 Move W8, [X0+309]
	213 Move TEMP, X8
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfEqual {218}
	217 Call 0x1C5D684
	218 Move X8, [X0+192]
	219 Move X0, [X8+16]
	220 Move W8, [X0+309]
	221 Move TEMP, X8
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfEqual {234}
	225 Move X20, [X31+48]
	226 Move X19, [X31+56]
	227 Move X22, [X31+32]
	228 Move X21, [X31+40]
	229 Move X30, [X31+16]
	230 Move X23, [X31+24]
	231 Add X31, X31, 64
	232 Call 0x1C5D684
	233 Return 
	234 Move X20, [X31+48]
	235 Move X19, [X31+56]
	236 Move X22, [X31+32]
	237 Move X21, [X31+40]
	238 Move X30, [X31+16]
	239 Move X23, [X31+24]
	240 Add X31, X31, 64
	241 Return 

