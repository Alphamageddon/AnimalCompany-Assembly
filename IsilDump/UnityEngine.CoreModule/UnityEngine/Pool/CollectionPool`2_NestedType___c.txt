Type: UnityEngine.Pool.CollectionPool`2/<>c

Method: System.Void .cctor()

Disassembly:
	0x0236F430 STP X20, X19, [X31 + 0x10]
	0x0236F434 MOV X19, X0
	0x0236F438 LDR X0, [X0 + 0x20]
	0x0236F43C LDRB W8, [X0 + 0x135]
	0x0236F440 TBNZ X8, 0x0, 0x236F448
	0x0236F444 BL 0x1C5C684
	0x0236F448 LDR X8, [X0 + 0xC0]
	0x0236F44C LDR X0, [X8]
	0x0236F450 LDRB W8, [X0 + 0x135]
	0x0236F454 TBNZ X8, 0x0, 0x236F45C
	0x0236F458 BL 0x1C5C684
	0x0236F45C BL 0x1C16F10
	0x0236F460 LDR X8, [X19 + 0x20]
	0x0236F464 MOV X20, X0
	0x0236F468 ADD X9, X8, 0x135
	0x0236F46C LDRH W9, [X9]
	0x0236F470 TBNZ X9, 0x0, 0x236F48C
	0x0236F474 MOV X0, X8
	0x0236F478 BL 0x1C5C684
	0x0236F47C LDR X8, [X19 + 0x20]
	0x0236F480 ADD X9, X8, 0x135
	0x0236F484 LDRH W9, [X9]
	0x0236F488 B 0x236F490
	0x0236F48C MOV X0, X8
	0x0236F490 LDR X10, [X0 + 0xC0]
	0x0236F494 LDR X10, [X10 + 0x8]
	0x0236F498 LDR X21, [X10]
	0x0236F49C TBNZ X9, 0x0, 0x236F4AC
	0x0236F4A0 MOV X0, X8
	0x0236F4A4 BL 0x1C5C684
	0x0236F4A8 MOV X8, X0
	0x0236F4AC LDR X8, [X8 + 0xC0]
	0x0236F4B0 MOV X0, X20
	0x0236F4B4 LDR X1, [X8 + 0x8]
	0x0236F4B8 BLR X21
	0x0236F4BC LDR X0, [X19 + 0x20]
	0x0236F4C0 LDRB W8, [X0 + 0x135]
	0x0236F4C4 TBNZ X8, 0x0, 0x236F4CC
	0x0236F4C8 BL 0x1C5C684
	0x0236F4CC LDR X8, [X0 + 0xC0]
	0x0236F4D0 LDR X0, [X8 + 0x10]
	0x0236F4D4 LDRB W8, [X0 + 0x135]
	0x0236F4D8 TBNZ X8, 0x0, 0x236F4E0
	0x0236F4DC BL 0x1C5C684
	0x0236F4E0 LDR X8, [X0 + 0xB8]
	0x0236F4E4 STR X20, [X8]
	0x0236F4E8 LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X19+32]
	022 Move X20, X0
	023 Move W9, [X8+309]
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {30}
	028 Move X0, X8
	029 Call 0x1C5D684
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move X0, [X19+32]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+192]
	041 Move X0, [X8+16]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move [X8], X20
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+16]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {69}
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X30, [X31+32]
	067 Call 0x1C5D684
	068 Return 
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return 

Method: System.Void .ctor()

Disassembly:
	0x0236F4EC LDRB W8, [X0 + 0x135]
	0x0236F4F0 TBNZ X8, 0x0, 0x236F4F8

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: TCollection <.cctor>b__5_0()

Disassembly:
	0x0236F4F4 BL 0x1C5C684
	0x0236F4F8 LDR X8, [X0 + 0xC0]
	0x0236F4FC LDR X0, [X8 + 0x10]
	0x0236F500 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X0, [X8+24]
	004 Call Activator.CreateInstance
	005 Return X0

Method: System.Void <.cctor>b__5_1(TCollection l)

Disassembly:
	0x0236F504 TBNZ X8, 0x0, 0x236F514
	0x0236F508 LDP X20, X19, [X31 + 0x10]
	0x0236F50C LDP X30, X21, [X31], #0x20
	0x0236F510 B 0x1C5C684
	0x0236F514 LDP X20, X19, [X31 + 0x10]
	0x0236F518 LDP X30, X21, [X31], #0x20
	0x0236F51C RET
	0x0236F520 MOV X1, X31
	0x0236F524 B 0x33BDD8C
	0x0236F528 STR X30, [X31 - 0x20]!
	0x0236F52C STP X20, X19, [X31 + 0x10]
	0x0236F530 ADRP X20, 0x206A000
	0x0236F534 LDRB W8, [X20 + 0x8CD]
	0x0236F538 MOV X19, X1
	0x0236F53C TBNZ X8, 0x0, 0x236F554
	0x0236F540 ADRP X0, 0x1DAD000
	0x0236F544 LDR X0, [X0 + 0xB48]
	0x0236F548 BL 0x1C16CF4
	0x0236F54C MOVZ W8, 0x1
	0x0236F550 STRB W8, [X20 + 0x8CD]
	0x0236F554 CBZ X19, 0x236F580
	0x0236F558 LDR W8, [X19 + 0xA4]
	0x0236F55C CBZ W8, 0x236F56C
	0x0236F560 LDP X20, X19, [X31 + 0x10]
	0x0236F564 LDR X30, [X31], #0x20
	0x0236F568 RET
	0x0236F56C MOV X0, X19
	0x0236F570 LDP X20, X19, [X31 + 0x10]
	0x0236F574 MOV X1, X31
	0x0236F578 LDR X30, [X31], #0x20
	0x0236F57C B 0x3D9D950
	0x0236F580 BL 0x1C16F20
	0x0236F584 STP X30, X21, [X31 - 0x20]!
	0x0236F588 STP X20, X19, [X31 + 0x10]
	0x0236F58C MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {40}
	005 Move X8, [X2+32]
	006 Move X19, X1
	007 Move X8, [X8+192]
	008 Move X1, [X8+40]
	009 Move W8, [X1+309]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X1
	015 Call 0x1C5D684
	016 Move X1, X0
	017 Move X8, [X19]
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 Compare X9, 0
	020 JumpIfEqual {27}
	021 Move X10, [X8+176]
	022 Add X10, X10, 8
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Subtract X9, X9, 1
	026 Add X10, X10, 16
	027 Move W2, 3
	028 Move X0, X19
	029 Call 0x1C5D788
	030 Move W9, [X10]
	031 Add W9, W9, 3
	032 Add X8, X8, W9
	033 Add X0, X8, 312
	034 Move X2, [X0]
	035 Move X1, [X0+8]
	036 Move X0, X19
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 CallNoReturn X2
	040 Call 0x1C17F20

