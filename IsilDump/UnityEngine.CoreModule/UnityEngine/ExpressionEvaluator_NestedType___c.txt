Type: UnityEngine.ExpressionEvaluator/<>c

Method: System.Void .cctor()

Disassembly:
	0x03C0A80C STP X30, X21, [X31 - 0x20]!
	0x03C0A810 STP X20, X19, [X31 + 0x10]
	0x03C0A814 ADRP X21, 0x7DA000
	0x03C0A818 LDR X2, [X21 + 0x208]
	0x03C0A81C MOV X19, X1
	0x03C0A820 MOV X20, X0
	0x03C0A824 CBNZ X2, 0x3C0A83C
	0x03C0A828 ADRP X0, 0xFFFFFFFFFCF0A000
	0x03C0A82C ADD X0, X0, 0x60B
	0x03C0A830 BL 0x1C16CB8
	0x03C0A834 MOV X2, X0
	0x03C0A838 STR X0, [X21 + 0x208]
	0x03C0A83C MOV X0, X20
	0x03C0A840 MOV X1, X19
	0x03C0A844 LDP X20, X19, [X31 + 0x10]
	0x03C0A848 LDP X30, X21, [X31], #0x20
	0x03C0A84C BR X2
	0x03C0A850 STP X30, X21, [X31 - 0x20]!
	0x03C0A854 STP X20, X19, [X31 + 0x10]
	0x03C0A858 ADRP X21, 0x7DA000
	0x03C0A85C LDR X2, [X21 + 0x200]
	0x03C0A860 MOV X19, X1
	0x03C0A864 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7DB000
	005 Move X20, 0x555000
	006 Move W8, [X19+485]
	007 Move X20, [X20+3072]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x555000
	013 Move X0, [X0+3072]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+485], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C0A868 CBNZ X2, 0x3C0A880
	0x03C0A86C ADRP X0, 0xFFFFFFFFFCEF6000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <ExpressionToTokens>b__14_0(System.String f)

Disassembly:
	0x03C0A870 ADD X0, X0, 0xCCA
	0x03C0A874 BL 0x1C16CB8
	0x03C0A878 MOV X2, X0
	0x03C0A87C STR X0, [X21 + 0x200]
	0x03C0A880 MOV X0, X20
	0x03C0A884 MOV X1, X19
	0x03C0A888 LDP X20, X19, [X31 + 0x10]
	0x03C0A88C LDP X30, X21, [X31], #0x20
	0x03C0A890 BR X2
	0x03C0A894 STP X30, X21, [X31 - 0x20]!
	0x03C0A898 STP X20, X19, [X31 + 0x10]
	0x03C0A89C ADRP X21, 0x7DA000
	0x03C0A8A0 LDR X2, [X21 + 0x200]
	0x03C0A8A4 MOV X19, X1
	0x03C0A8A8 MOV X20, X0
	0x03C0A8AC CBNZ X2, 0x3C0A8C4
	0x03C0A8B0 ADRP X0, 0xFFFFFFFFFCEF6000
	0x03C0A8B4 ADD X0, X0, 0xCCA
	0x03C0A8B8 BL 0x1C16CB8
	0x03C0A8BC MOV X2, X0
	0x03C0A8C0 STR X0, [X21 + 0x200]
	0x03C0A8C4 MOV X0, X20
	0x03C0A8C8 MOV X1, X19
	0x03C0A8CC LDP X20, X19, [X31 + 0x10]
	0x03C0A8D0 LDP X30, X21, [X31], #0x20
	0x03C0A8D4 BR X2
	0x03C0A8D8 STP X30, X21, [X31 - 0x20]!
	0x03C0A8DC STP X20, X19, [X31 + 0x10]
	0x03C0A8E0 ADRP X21, 0x7DA000
	0x03C0A8E4 LDR X2, [X21 + 0x208]
	0x03C0A8E8 MOV X19, X1
	0x03C0A8EC MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DB000
	006 Move X20, 0x512000
	007 Move W8, [X21+486]
	008 Move X20, [X20+2664]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x512000
	015 Move X0, [X0+2664]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+486], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call ExpressionEvaluator.IsVariable, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {36}
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move W0, 1
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call ExpressionEvaluator.IsDelayedFunction, X0
	047 Return X0

