Type: UnityEngine.BeforeRenderHelper

Method: System.Int32 GetUpdateOrder(UnityEngine.Events.UnityAction callback)

Disassembly:
	0x03C0E3F0 TBNZ X8, 0x0, 0x3C0E408
	0x03C0E3F4 ADRP X0, 0x4E9000
	0x03C0E3F8 LDR X0, [X0 + 0x2C8]
	0x03C0E3FC BL 0x1C16CF4
	0x03C0E400 MOVZ W8, 0x1
	0x03C0E404 STRB W8, [X22 + 0x388]
	0x03C0E408 LDR X0, [X23]
	0x03C0E40C LDR W8, [X0 + 0xE0]
	0x03C0E410 CBNZ W8, 0x3C0E418
	0x03C0E414 BL 0x1C16DFC
	0x03C0E418 ADRP X22, 0x7D6000
	0x03C0E41C LDR X8, [X22 + 0x3F0]
	0x03C0E420 CBNZ X8, 0x3C0E438
	0x03C0E424 ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C0E428 ADD X0, X0, 0xEA5
	0x03C0E42C BL 0x1C16CB8
	0x03C0E430 MOV X8, X0
	0x03C0E434 STR X0, [X22 + 0x3F0]
	0x03C0E438 ADD X0, X31, 0x10
	0x03C0E43C ADD X1, X31, 0x0
	0x03C0E440 MOV W2, W21
	0x03C0E444 MOV W3, W20
	0x03C0E448 MOV W4, W19
	0x03C0E44C BLR X8
	0x03C0E450 LDP X20, X19, [X31 + 0x40]
	0x03C0E454 LDP X22, X21, [X31 + 0x30]
	0x03C0E458 LDP X30, X23, [X31 + 0x20]
	0x03C0E45C ADD X31, X31, 0x50
	0x03C0E460 RET
	0x03C0E464 STR X30, [X31 - 0x40]!
	0x03C0E468 STP X24, X23, [X31 + 0x10]
	0x03C0E46C STP X22, X21, [X31 + 0x20]
	0x03C0E470 STP X20, X19, [X31 + 0x30]
	0x03C0E474 ADRP X24, 0x7D6000
	0x03C0E478 LDR X5, [X24 + 0x3F0]
	0x03C0E47C MOV W19, W4
	0x03C0E480 MOV W20, W3
	0x03C0E484 MOV W21, W2
	0x03C0E488 MOV X22, X1
	0x03C0E48C MOV X23, X0
	0x03C0E490 CBNZ X5, 0x3C0E4A8
	0x03C0E494 ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C0E498 ADD X0, X0, 0xEA5
	0x03C0E49C BL 0x1C16CB8
	0x03C0E4A0 MOV X5, X0
	0x03C0E4A4 STR X0, [X24 + 0x3F0]
	0x03C0E4A8 MOV X0, X23
	0x03C0E4AC MOV X1, X22
	0x03C0E4B0 MOV W2, W21
	0x03C0E4B4 MOV W3, W20
	0x03C0E4B8 MOV W4, W19
	0x03C0E4BC LDP X20, X19, [X31 + 0x30]
	0x03C0E4C0 LDP X22, X21, [X31 + 0x20]
	0x03C0E4C4 LDP X24, X23, [X31 + 0x10]
	0x03C0E4C8 LDR X30, [X31], #0x40
	0x03C0E4CC BR X5
	0x03C0E4D0 STP X30, X25, [X31 - 0x40]!
	0x03C0E4D4 STP X24, X23, [X31 + 0x10]
	0x03C0E4D8 STP X22, X21, [X31 + 0x20]
	0x03C0E4DC STP X20, X19, [X31 + 0x30]
	0x03C0E4E0 ADRP X25, 0x7D6000
	0x03C0E4E4 LDR X6, [X25 + 0x390]
	0x03C0E4E8 MOV W19, W5
	0x03C0E4EC MOV W20, W4
	0x03C0E4F0 MOV X21, X3
	0x03C0E4F4 MOV W22, W2
	0x03C0E4F8 MOV W23, W1
	0x03C0E4FC MOV X24, X0
	0x03C0E500 CBNZ X6, 0x3C0E518
	0x03C0E504 ADRP X0, 0xFFFFFFFFFCEE0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7D7000
	006 Move W8, [X20+736]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x551000
	013 Move X0, [X0+3264]
	014 Call 0x1C17CF4
	015 Move X0, 0x551000
	016 Move X0, [X0+3272]
	017 Call 0x1C17CF4
	018 Move X0, 0x4E6000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+736], W8
	023 Compare X19, 0
	024 JumpIfEqual {80}
	025 Move X20, 0x551000
	026 Move X21, 0x4E6000
	027 Move X20, [X20+3264]
	028 Move X21, [X21+1728]
	029 Move X0, X19
	030 Move X1, X31
	031 Call Delegate.get_Method, X0
	032 Move X8, [X21]
	033 Move X20, [X20]
	034 Move X19, X0
	035 Move W9, [X8+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {40}
	038 Move X0, X8
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Call Type.GetTypeFromHandle, X0
	043 Compare X19, 0
	044 JumpIfEqual {80}
	045 Move X8, [X19]
	046 Move X1, X0
	047 Move W2, 1
	048 Move X0, X19
	049 Move X9, [X8+520]
	050 Move X3, [X8+528]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {74}
	054 Move X8, [X0+24]
	055 Compare X8, 0
	056 JumpIfEqual {73}
	057 Compare W8, 0
	058 JumpIfEqual {81}
	059 Move X8, [X0+32]
	060 Compare X8, 0
	061 JumpIfEqual {73}
	062 Move X9, 0x551000
	063 Move X9, [X9+3272]
	064 Move X10, [X8]
	065 Move X9, [X9]
	066 Move W12, [X10+304]
	067 Move W11, [X9+304]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X10, [X10+200]
	070 Add X10, X10, X11
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W0, W31
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Move X21, [X31+40]
	078 Return X0
	079 Move W0, [X8+16]
	080 Call 0x1C17F20
	081 Call 0x1C17F28

Method: System.Void RegisterCallback(UnityEngine.Events.UnityAction callback)

Disassembly:
	0x03C03044 CMP W20, W9
	0x03C03048 B.GE 0x3C03094
	0x03C0304C LDR W9, [X0 + 0xE0]
	0x03C03050 CBNZ W9, 0x3C03068
	0x03C03054 BL 0x1C16DFC
	0x03C03058 LDR X8, [X21]
	0x03C0305C LDR X8, [X8 + 0xB8]
	0x03C03060 LDR X8, [X8]
	0x03C03064 CBZ X8, 0x3C030C4
	0x03C03068 LDR X2, [X22]
	0x03C0306C MOV X0, X8
	0x03C03070 MOV W1, W20
	0x03C03074 BL 0x30EA8B8
	0x03C03078 CBZ X1, 0x3C0308C
	0x03C0307C LDR X8, [X1 + 0x18]
	0x03C03080 LDR X0, [X1 + 0x40]
	0x03C03084 LDR X1, [X1 + 0x28]
	0x03C03088 BLR X8
	0x03C0308C ADD W20, W20, 0x1
	0x03C03090 B 0x3C03020
	0x03C03094 MOV X21, X31
	0x03C03098 LDRB W8, [X31 + 0xC]
	0x03C0309C CBZ W8, 0x3C030AC
	0x03C030A0 MOV X0, X19
	0x03C030A4 MOV X1, X31
	0x03C030A8 BL 0x33E14E4
	0x03C030AC CBNZ X21, 0x3C030C8
	0x03C030B0 LDP X20, X19, [X31 + 0x20]
	0x03C030B4 LDP X22, X21, [X31 + 0x10]
	0x03C030B8 LDR X30, [X31], #0x30
	0x03C030BC RET
	0x03C030C0 BL 0x1C16F20
	0x03C030C4 BL 0x1C16F20
	0x03C030C8 MOV X0, X21
	0x03C030CC BL 0x1C16F18
	0x03C030D0 B 0x3C030E8
	0x03C030D4 B 0x3C030E8
	0x03C030D8 B 0x3C030E8
	0x03C030DC B 0x3C030E8
	0x03C030E0 B 0x3C030E8
	0x03C030E4 B 0x3C030E8
	0x03C030E8 MOV X20, X0
	0x03C030EC CMP W1, 0x1
	0x03C030F0 B.NE 0x3C03108
	0x03C030F4 MOV X0, X20
	0x03C030F8 BL 0x3EB1AD0
	0x03C030FC LDR X21, [X0]
	0x03C03100 BL 0x3EB1AE0
	0x03C03104 B 0x3C03098
	0x03C03108 MOV X21, X31
	0x03C0310C B 0x3C03114
	0x03C03110 MOV X20, X0
	0x03C03114 LDRB W8, [X31 + 0xC]
	0x03C03118 CBZ W8, 0x3C03128
	0x03C0311C MOV X0, X19
	0x03C03120 MOV X1, X31
	0x03C03124 BL 0x33E14E4
	0x03C03128 CBNZ X21, 0x3C03134
	0x03C0312C MOV X0, X20
	0x03C03130 BL 0x1D2C690
	0x03C03134 MOV X0, X21
	0x03C03138 BL 0x1C16F18
	0x03C0313C BL 0x1990590
	0x03C03140 STP X30, X21, [X31 - 0x20]!
	0x03C03144 STP X20, X19, [X31 + 0x10]
	0x03C03148 ADRP X21, 0x7E0000
	0x03C0314C ADRP X20, 0x4F0000
	0x03C03150 LDRB W8, [X21 + 0xF10]
	0x03C03154 LDR X20, [X20 + 0x970]
	0x03C03158 MOV W19, W0
	0x03C0315C TBNZ X8, 0x0, 0x3C03174
	0x03C03160 ADRP X0, 0x4F0000
	0x03C03164 LDR X0, [X0 + 0x970]
	0x03C03168 BL 0x1C16CF4
	0x03C0316C MOVZ W8, 0x1
	0x03C03170 STRB W8, [X21 + 0xF10]
	0x03C03174 LDR X0, [X20]
	0x03C03178 LDR W8, [X0 + 0xE0]
	0x03C0317C CBNZ W8, 0x3C03188
	0x03C03180 BL 0x1C16DFC
	0x03C03184 LDR X0, [X20]
	0x03C03188 LDR X8, [X0 + 0xB8]
	0x03C0318C LDR X9, [X8 + 0x20]
	0x03C03190 CBZ X9, 0x3C031CC
	0x03C03194 LDR W9, [X0 + 0xE0]
	0x03C03198 CBNZ W9, 0x3C031A8
	0x03C0319C BL 0x1C16DFC
	0x03C031A0 LDR X8, [X20]
	0x03C031A4 LDR X8, [X8 + 0xB8]
	0x03C031A8 LDR X8, [X8 + 0x20]
	0x03C031AC CBZ X8, 0x3C031D8
	0x03C031B0 LDR X3, [X8 + 0x18]
	0x03C031B4 LDR X0, [X8 + 0x40]
	0x03C031B8 LDR X2, [X8 + 0x28]
	0x03C031BC AND W1, W19, 0x1
	0x03C031C0 LDP X20, X19, [X31 + 0x10]
	0x03C031C4 LDP X30, X21, [X31], #0x20
	0x03C031C8 BR X3
	0x03C031CC LDP X20, X19, [X31 + 0x10]
	0x03C031D0 LDP X30, X21, [X31], #0x20
	0x03C031D4 RET
	0x03C031D8 BL 0x1C16F20
	0x03C031DC STP X30, X21, [X31 - 0x20]!
	0x03C031E0 STP X20, X19, [X31 + 0x10]
	0x03C031E4 ADRP X21, 0x7E0000
	0x03C031E8 ADRP X20, 0x4F0000
	0x03C031EC LDRB W8, [X21 + 0xF11]
	0x03C031F0 LDR X20, [X20 + 0x970]
	0x03C031F4 MOV X19, X0
	0x03C031F8 TBNZ X8, 0x0, 0x3C03210
	0x03C031FC ADRP X0, 0x4F0000
	0x03C03200 LDR X0, [X0 + 0x970]
	0x03C03204 BL 0x1C16CF4
	0x03C03208 MOVZ W8, 0x1
	0x03C0320C STRB W8, [X21 + 0xF11]
	0x03C03210 LDR X0, [X20]
	0x03C03214 LDR W8, [X0 + 0xE0]
	0x03C03218 CBNZ W8, 0x3C03224
	0x03C0321C BL 0x1C16DFC
	0x03C03220 LDR X0, [X20]
	0x03C03224 LDR X8, [X0 + 0xB8]
	0x03C03228 LDR X9, [X8 + 0x28]
	0x03C0322C CBZ X9, 0x3C03268
	0x03C03230 LDR W9, [X0 + 0xE0]
	0x03C03234 CBNZ W9, 0x3C03244
	0x03C03238 BL 0x1C16DFC
	0x03C0323C LDR X8, [X20]
	0x03C03240 LDR X8, [X8 + 0xB8]
	0x03C03244 LDR X8, [X8 + 0x28]
	0x03C03248 CBZ X8, 0x3C03274
	0x03C0324C LDR X3, [X8 + 0x18]
	0x03C03250 LDR X0, [X8 + 0x40]
	0x03C03254 LDR X2, [X8 + 0x28]
	0x03C03258 MOV X1, X19
	0x03C0325C LDP X20, X19, [X31 + 0x10]
	0x03C03260 LDP X30, X21, [X31], #0x20
	0x03C03264 BR X3
	0x03C03268 LDP X20, X19, [X31 + 0x10]
	0x03C0326C LDP X30, X21, [X31], #0x20
	0x03C03270 RET
	0x03C03274 BL 0x1C16F20
	0x03C03278 MOV W0, W31
	0x03C0327C RET
	0x03C03280 STP X30, X21, [X31 - 0x20]!
	0x03C03284 STP X20, X19, [X31 + 0x10]
	0x03C03288 ADRP X19, 0x7E0000
	0x03C0328C ADRP X21, 0x4F2000
	0x03C03290 ADRP X20, 0x4F0000
	0x03C03294 LDRB W8, [X19 + 0xF12]
	0x03C03298 LDR X21, [X21 + 0xA50]
	0x03C0329C LDR X20, [X20 + 0x970]
	0x03C032A0 TBNZ X8, 0x0, 0x3C032C4
	0x03C032A4 ADRP X0, 0x4F0000
	0x03C032A8 LDR X0, [X0 + 0x970]
	0x03C032AC BL 0x1C16CF4
	0x03C032B0 ADRP X0, 0x4F2000
	0x03C032B4 LDR X0, [X0 + 0xA50]
	0x03C032B8 BL 0x1C16CF4
	0x03C032BC MOVZ W8, 0x1
	0x03C032C0 STRB W8, [X19 + 0xF12]
	0x03C032C4 LDR X0, [X21]
	0x03C032C8 BL 0x1C16F10
	0x03C032CC MOV X1, X31
	0x03C032D0 MOV X19, X0
	0x03C032D4 BL 0x33DFA8C
	0x03C032D8 LDR X8, [X20]
	0x03C032DC LDR X8, [X8 + 0xB8]
	0x03C032E0 STR X19, [X8 + 0x48]
	0x03C032E4 LDP X20, X19, [X31 + 0x10]
	0x03C032E8 LDP X30, X21, [X31], #0x20
	0x03C032EC RET
	0x03C032F0 STP X30, X21, [X31 - 0x20]!
	0x03C032F4 STP X20, X19, [X31 + 0x10]
	0x03C032F8 LDR X8, [X2 + 0x8]
	0x03C032FC STP X1, X2, [X0 + 0x20]
	0x03C03300 MOV X19, X0
	0x03C03304 MOV X20, X1
	0x03C03308 STR X8, [X0 + 0x10]
	0x03C0330C LDRB W21, [X2 + 0x52]
	0x03C03310 STR X0, [X0 + 0x40]
	0x03C03314 MOV X0, X2
	0x03C03318 BL 0x1C16D84
	0x03C0331C TBZ X0, 0x0, 0x3C03334
	0x03C03320 CBNZ W21, 0x3C03338
	0x03C03324 ADRP X8, 0xFFFFFFFFFE001000
	0x03C03328 ADD X8, X8, 0x5D4
	0x03C0332C STR X8, [X19 + 0x18]
	0x03C03330 B 0x3C03348
	0x03C03334 CBZ X20, 0x3C03360
	0x03C03338 LDR X8, [X19 + 0x10]
	0x03C0333C LDR X9, [X19 + 0x20]
	0x03C03340 STR X8, [X19 + 0x18]
	0x03C03344 STR X9, [X19 + 0x40]
	0x03C03348 ADRP X8, 0xFFFFFFFFFE001000
	0x03C0334C ADD X8, X8, 0x594
	0x03C03350 STR X8, [X19 + 0x38]
	0x03C03354 LDP X20, X19, [X31 + 0x10]
	0x03C03358 LDP X30, X21, [X31], #0x20
	0x03C0335C RET
	0x03C03360 ADRP X1, 0xFFFFFFFFFCF18000
	0x03C03364 ADD X1, X1, 0xEE3
	0x03C03368 MOV X0, X31
	0x03C0336C BL 0x1C16F3C
	0x03C03370 MOV X1, X31
	0x03C03374 BL 0x1C16DEC
	0x03C03378 LDR X8, [X0 + 0x40]
	0x03C0337C LDR X2, [X0 + 0x18]
	0x03C03380 LDR X1, [X0 + 0x28]
	0x03C03384 MOV X0, X8
	0x03C03388 BR X2
	0x03C0338C STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x7E2000
	011 Move X23, 0x55C000
	012 Move W8, [X19+737]
	013 Move X23, [X23+2784]
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x55C000
	020 Move X0, [X0+2784]
	021 Call 0x1C17CF4
	022 Move X0, 0x55C000
	023 Move X0, [X0+2792]
	024 Call 0x1C17CF4
	025 Move X0, 0x55C000
	026 Move X0, [X0+2800]
	027 Call 0x1C17CF4
	028 Move X0, 0x55C000
	029 Move X0, [X0+2808]
	030 Call 0x1C17CF4
	031 Move X0, 0x55C000
	032 Move X0, [X0+2816]
	033 Call 0x1C17CF4
	034 Move X0, 0x518000
	035 Move X0, [X0+3632]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+737], W8
	039 Move X0, [X23]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X21
	045 Call BeforeRenderHelper.GetUpdateOrder, X0
	046 Move X8, [X23]
	047 Move W22, W0
	048 Move X8, [X8+184]
	049 Move X19, [X8]
	050 Move [X31+12], W31
	051 Add X1, X31, 12
	052 Move X0, X19
	053 Move X2, X31
	054 Call Monitor.Enter, X0, X1
	055 Move X26, 0x55C000
	056 Move X24, 0x518000
	057 Move X25, 0x55C000
	058 Move X26, [X26+2808]
	059 Move X24, [X24+3632]
	060 Move X25, [X25+2792]
	061 Move W20, W31
	062 Move X8, [X23]
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {69}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X8, [X23]
	069 Move X9, [X8+184]
	070 Move X9, [X9]
	071 Compare X9, 0
	072 JumpIfEqual {184}
	073 Move W10, [X9+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W10, [X8+224]
	076 Compare W10, 0
	077 JumpIfNotEqual {85}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X8, [X23]
	081 Move X8, [X8+184]
	082 Move X9, [X8]
	083 Compare X9, 0
	084 JumpIfEqual {186}
	085 Move X2, [X26]
	086 Move X0, X9
	087 Move W1, W20
	088 Call List`1<OrderBlock>.get_Item, X0, X1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, [X23]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X23]
	096 Move X8, [X0+184]
	097 Move X0, [X8]
	098 Compare X0, 0
	099 JumpIfEqual {185}
	100 Move X2, [X26]
	101 Move W1, W20
	102 Call List`1<OrderBlock>.get_Item, X0, X1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add W20, W20, 1
	105 Move X0, X31
	106 Move X1, X21
	107 Move X2, X31
	108 Call Delegate.Combine, X0, X1
	109 Move X21, X0
	110 Compare X0, 0
	111 JumpIfEqual {115}
	112 Move X1, [X24]
	113 Move X8, [X21]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, [X23]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X23]
	121 Move X8, [X0+184]
	122 Move X0, [X8]
	123 Compare X0, 0
	124 JumpIfEqual {189}
	125 Move X4, [X25]
	126 Move W2, W22
	127 Move W1, W20
	128 Move X3, X21
	129 Call List`1<OrderBlock>.Insert, X0, X1, X2
	130 Move X0, [X23]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {136}
	134 Call 0x1C17DFC
	135 Move X0, [X23]
	136 Move X8, [X0+184]
	137 Move X0, [X8]
	138 Compare X0, 0
	139 JumpIfEqual {192}
	140 Move X2, [X26]
	141 Move W1, W20
	142 Call List`1<OrderBlock>.get_Item, X0, X1
	143 Move X22, X0
	144 Move X0, X1
	145 Move X1, X21
	146 Move X2, X31
	147 Call Delegate.Combine, X0, X1
	148 Move X3, X0
	149 Compare X0, 0
	150 JumpIfEqual {154}
	151 Move X1, [X24]
	152 Move X8, [X3]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X8, [X23]
	155 Move X8, [X8+184]
	156 Move X0, [X8]
	157 Compare X0, 0
	158 JumpIfEqual {193}
	159 Move X8, 0x55C000
	160 Move X8, [X8+2816]
	161 Move X4, [X8]
	162 Move W1, W20
	163 Move X2, X22
	164 Call List`1<OrderBlock>.set_Item, X0, X1, X2
	165 Move X21, X31
	166 Move W8, [X31+12]
	167 Compare W8, 0
	168 JumpIfEqual {172}
	169 Move X0, X19
	170 Move X1, X31
	171 Call Monitor.Exit, X0
	172 Compare X21, 0
	173 JumpIfNotEqual {187}
	174 Move X20, [X31+64]
	175 Move X19, [X31+72]
	176 Move X22, [X31+48]
	177 Move X21, [X31+56]
	178 Move X24, [X31+32]
	179 Move X23, [X31+40]
	180 Move X26, [X31+16]
	181 Move X25, [X31+24]
	182 Move X30, [X31+80]
	183 Return 
	184 Call 0x1C17F20
	185 Call 0x1C17F20
	186 Call 0x1C17F20
	187 Move X0, X21
	188 Call 0x1C17F18
	189 Call 0x1C17F20
	190 Move X0, X21
	191 Call 0x1C181E0
	192 Call 0x1C17F20
	193 Call 0x1C17F20
	194 Move X0, X3
	195 Call 0x1C181E0
	196 Move X20, X0
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X0, X20
	199 Call 0x3EB2AD0
	200 Move X21, [X0]
	201 Call 0x3EB2AE0
	202 Move X21, X31
	203 Move X20, X0
	204 Move W8, [X31+12]
	205 Compare W8, 0
	206 JumpIfEqual {210}
	207 Move X0, X19
	208 Move X1, X31
	209 Call Monitor.Exit, X0
	210 Compare X21, 0
	211 JumpIfNotEqual {214}
	212 Move X0, X20
	213 Call 0x1D2D690
	214 Move X0, X21
	215 Call 0x1C17F18
	216 Call 0x1991590

Method: System.Void UnregisterCallback(UnityEngine.Events.UnityAction callback)

Disassembly:
	0x03C033E4 STR X9, [X19 + 0x40]
	0x03C033E8 B 0x3C033F8
	0x03C033EC ADRP X8, 0xFFFFFFFFFE001000
	0x03C033F0 ADD X8, X8, 0x630
	0x03C033F4 STR X8, [X19 + 0x18]
	0x03C033F8 ADRP X8, 0xFFFFFFFFFE001000
	0x03C033FC ADD X8, X8, 0x5E8
	0x03C03400 STR X8, [X19 + 0x38]
	0x03C03404 LDP X20, X19, [X31 + 0x10]
	0x03C03408 LDP X30, X21, [X31], #0x20
	0x03C0340C RET
	0x03C03410 ADRP X1, 0xFFFFFFFFFCF18000
	0x03C03414 ADD X1, X1, 0xEE3
	0x03C03418 MOV X0, X31
	0x03C0341C BL 0x1C16F3C
	0x03C03420 MOV X1, X31
	0x03C03424 BL 0x1C16DEC
	0x03C03428 LDR X8, [X0 + 0x40]
	0x03C0342C LDR X3, [X0 + 0x18]
	0x03C03430 LDR X2, [X0 + 0x28]
	0x03C03434 MOV X0, X8
	0x03C03438 BR X3
	0x03C0343C STP X30, X21, [X31 - 0x20]!
	0x03C03440 STP X20, X19, [X31 + 0x10]
	0x03C03444 LDR X8, [X2 + 0x8]
	0x03C03448 STP X1, X2, [X0 + 0x20]
	0x03C0344C MOV X19, X0
	0x03C03450 MOV X20, X1
	0x03C03454 STR X8, [X0 + 0x10]
	0x03C03458 LDRB W21, [X2 + 0x52]
	0x03C0345C STR X0, [X0 + 0x40]
	0x03C03460 MOV X0, X2
	0x03C03464 BL 0x1C16D84
	0x03C03468 TBZ X0, 0x0, 0x3C03480
	0x03C0346C CMP W21, 0x3
	0x03C03470 B.NE 0x3C0349C
	0x03C03474 ADRP X8, 0xFFFFFFFFFE001000
	0x03C03478 ADD X8, X8, 0x6F4
	0x03C0347C B 0x3C03490
	0x03C03480 CMP W21, 0x2
	0x03C03484 B.NE 0x3C03498
	0x03C03488 ADRP X8, 0xFFFFFFFFFE001000
	0x03C0348C ADD X8, X8, 0x6CC
	0x03C03490 STR X8, [X19 + 0x18]
	0x03C03494 B 0x3C034AC
	0x03C03498 CBZ X20, 0x3C034C4
	0x03C0349C LDR X8, [X19 + 0x10]
	0x03C034A0 LDR X9, [X19 + 0x20]
	0x03C034A4 STR X8, [X19 + 0x18]
	0x03C034A8 STR X9, [X19 + 0x40]
	0x03C034AC ADRP X8, 0xFFFFFFFFFE001000
	0x03C034B0 ADD X8, X8, 0x66C
	0x03C034B4 STR X8, [X19 + 0x38]
	0x03C034B8 LDP X20, X19, [X31 + 0x10]
	0x03C034BC LDP X30, X21, [X31], #0x20
	0x03C034C0 RET
	0x03C034C4 ADRP X1, 0xFFFFFFFFFCF18000
	0x03C034C8 ADD X1, X1, 0xEE3
	0x03C034CC MOV X0, X31
	0x03C034D0 BL 0x1C16F3C
	0x03C034D4 MOV X1, X31
	0x03C034D8 BL 0x1C16DEC
	0x03C034DC LDR X8, [X0 + 0x40]
	0x03C034E0 LDR X5, [X0 + 0x18]
	0x03C034E4 LDR X4, [X0 + 0x28]
	0x03C034E8 MOV X0, X8
	0x03C034EC BR X5
	0x03C034F0 STR W1, [X0]
	0x03C034F4 RET
	0x03C034F8 STP X30, X21, [X31 - 0x20]!
	0x03C034FC STP X20, X19, [X31 + 0x10]
	0x03C03500 ADRP X20, 0x7E0000
	0x03C03504 ADRP X21, 0x55B000
	0x03C03508 LDRB W8, [X20 + 0xF13]
	0x03C0350C LDR X21, [X21 + 0xB18]
	0x03C03510 MOV X19, X0
	0x03C03514 TBNZ X8, 0x0, 0x3C0352C
	0x03C03518 ADRP X0, 0x55B000
	0x03C0351C LDR X0, [X0 + 0xB18]
	0x03C03520 BL 0x1C16CF4
	0x03C03524 MOVZ W8, 0x1
	0x03C03528 STRB W8, [X20 + 0xF13]
	0x03C0352C LDR X0, [X21]
	0x03C03530 BL 0x1C16F10
	0x03C03534 MOV X1, X19
	0x03C03538 MOV X20, X0
	0x03C0353C BL 0x3C03550
	0x03C03540 MOV X0, X20
	0x03C03544 LDP X20, X19, [X31 + 0x10]
	0x03C03548 LDP X30, X21, [X31], #0x20
	0x03C0354C RET
	0x03C03550 STR X30, [X31 - 0x20]!
	0x03C03554 STP X20, X19, [X31 + 0x10]
	0x03C03558 MOV X19, X1
	0x03C0355C MOV X1, X31
	0x03C03560 MOV X20, X0
	0x03C03564 BL 0x33BDD8C
	0x03C03568 MOV X0, X19
	0x03C0356C MOV X1, X31
	0x03C03570 MOV X2, X31
	0x03C03574 BL 0x33BE5B0
	0x03C03578 TBNZ X0, 0x0, 0x3C0358C
	0x03C0357C STR X19, [X20 + 0x10]
	0x03C03580 LDP X20, X19, [X31 + 0x10]
	0x03C03584 LDR X30, [X31], #0x20
	0x03C03588 RET
	0x03C0358C ADRP X0, 0x4F8000
	0x03C03590 LDR X0, [X0 + 0x578]
	0x03C03594 BL 0x1C16D08
	0x03C03598 BL 0x1C16F10
	0x03C0359C MOV X19, X0
	0x03C035A0 ADRP X0, 0x55B000
	0x03C035A4 LDR X0, [X0 + 0xB20]
	0x03C035A8 BL 0x1C16D08
	0x03C035AC MOV X1, X0
	0x03C035B0 MOV X0, X19
	0x03C035B4 MOV X2, X31
	0x03C035B8 BL 0x3314A68
	0x03C035BC ADRP X0, 0x55B000
	0x03C035C0 LDR X0, [X0 + 0xB28]
	0x03C035C4 BL 0x1C16D08
	0x03C035C8 MOV X1, X0
	0x03C035CC MOV X0, X19
	0x03C035D0 BL 0x1C16DEC
	0x03C035D4 MOV X1, X31
	0x03C035D8 B 0x3C32490
	0x03C035DC STR X30, [X31 - 0x20]!
	0x03C035E0 STP X20, X19, [X31 + 0x10]
	0x03C035E4 ADRP X20, 0x7E0000
	0x03C035E8 LDR X1, [X20 + 0xF18]
	0x03C035EC MOV X19, X0
	0x03C035F0 CBNZ X1, 0x3C03608
	0x03C035F4 ADRP X0, 0xFFFFFFFFFCEFD000
	0x03C035F8 ADD X0, X0, 0xBFE
	0x03C035FC BL 0x1C16CB8
	0x03C03600 MOV X1, X0
	0x03C03604 STR X0, [X20 + 0xF18]
	0x03C03608 MOV X0, X19
	0x03C0360C LDP X20, X19, [X31 + 0x10]
	0x03C03610 LDR X30, [X31], #0x20
	0x03C03614 BR X1
	0x03C03618 STR X30, [X31 - 0x20]!
	0x03C0361C STP X20, X19, [X31 + 0x10]
	0x03C03620 ADRP X20, 0x7E0000
	0x03C03624 LDR X1, [X20 + 0xF20]
	0x03C03628 MOV X19, X0
	0x03C0362C CBNZ X1, 0x3C03644
	0x03C03630 ADRP X0, 0xFFFFFFFFFCEED000
	0x03C03634 ADD X0, X0, 0xBAE
	0x03C03638 BL 0x1C16CB8
	0x03C0363C MOV X1, X0
	0x03C03640 STR X0, [X20 + 0xF20]
	0x03C03644 MOV X0, X19
	0x03C03648 LDP X20, X19, [X31 + 0x10]
	0x03C0364C LDR X30, [X31], #0x20
	0x03C03650 BR X1
	0x03C03654 STR X30, [X31 - 0x20]!
	0x03C03658 STP X20, X19, [X31 + 0x10]
	0x03C0365C ADRP X20, 0x7E0000
	0x03C03660 LDR X1, [X20 + 0xF28]
	0x03C03664 MOV X19, X0
	0x03C03668 CBNZ X1, 0x3C03680
	0x03C0366C ADRP X0, 0xFFFFFFFFFCF07000
	0x03C03670 ADD X0, X0, 0xE60
	0x03C03674 BL 0x1C16CB8
	0x03C03678 MOV X1, X0
	0x03C0367C STR X0, [X20 + 0xF28]
	0x03C03680 MOV X0, X19
	0x03C03684 LDP X20, X19, [X31 + 0x10]
	0x03C03688 LDR X30, [X31], #0x20
	0x03C0368C BR X1
	0x03C03690 STR D8, [X31 - 0x20]!
	0x03C03694 STR X30, [X31 + 0x8]
	0x03C03698 STP X20, X19, [X31 + 0x10]
	0x03C0369C ADRP X20, 0x7E0000
	0x03C036A0 LDR X1, [X20 + 0xF30]
	0x03C036A4 MOV V8.16B, V0.16B
	0x03C036A8 MOV X19, X0
	0x03C036AC CBNZ X1, 0x3C036C4
	0x03C036B0 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C036B4 ADD X0, X0, 0xDFA
	0x03C036B8 BL 0x1C16CB8
	0x03C036BC MOV X1, X0
	0x03C036C0 STR X0, [X20 + 0xF30]
	0x03C036C4 MOV X0, X19
	0x03C036C8 LDP X20, X19, [X31 + 0x10]
	0x03C036CC LDR X30, [X31 + 0x8]
	0x03C036D0 MOV V0.16B, V8.16B
	0x03C036D4 LDR V8, [X31], #0x20
	0x03C036D8 BR X1
	0x03C036DC STP X30, X21, [X31 - 0x20]!
	0x03C036E0 STP X20, X19, [X31 + 0x10]
	0x03C036E4 ADRP X21, 0x7E0000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x7E2000
	009 Move X23, 0x55C000
	010 Move W8, [X19+738]
	011 Move X23, [X23+2784]
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x55C000
	018 Move X0, [X0+2784]
	019 Call 0x1C17CF4
	020 Move X0, 0x55C000
	021 Move X0, [X0+2824]
	022 Call 0x1C17CF4
	023 Move X0, 0x55C000
	024 Move X0, [X0+2800]
	025 Call 0x1C17CF4
	026 Move X0, 0x55C000
	027 Move X0, [X0+2808]
	028 Call 0x1C17CF4
	029 Move X0, 0x55C000
	030 Move X0, [X0+2816]
	031 Call 0x1C17CF4
	032 Move X0, 0x518000
	033 Move X0, [X0+3632]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+738], W8
	037 Move X0, [X23]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Call BeforeRenderHelper.GetUpdateOrder, X0
	044 Move X8, [X23]
	045 Move W22, W0
	046 Move X8, [X8+184]
	047 Move X19, [X8]
	048 Move [X31+12], W31
	049 Add X1, X31, 12
	050 Move X0, X19
	051 Move X2, X31
	052 Call Monitor.Enter, X0, X1
	053 Move X24, 0x55C000
	054 Move X24, [X24+2808]
	055 Move W20, W31
	056 Move X0, [X23]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X23]
	062 Move X8, [X0+184]
	063 Move X8, [X8]
	064 Compare X8, 0
	065 JumpIfEqual {169}
	066 Move W9, [X8+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W9, [X0+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {77}
	071 Call 0x1C17DFC
	072 Move X8, [X23]
	073 Move X8, [X8+184]
	074 Move X8, [X8]
	075 Compare X8, 0
	076 JumpIfEqual {171}
	077 Move X2, [X24]
	078 Move X0, X8
	079 Move W1, W20
	080 Call List`1<OrderBlock>.get_Item, X0, X1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, [X23]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X23]
	088 Move X8, [X0+184]
	089 Move X0, [X8]
	090 Compare X0, 0
	091 JumpIfEqual {170}
	092 Move X2, [X24]
	093 Move W1, W20
	094 Call List`1<OrderBlock>.get_Item, X0, X1
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add W20, W20, 1
	097 Move X0, [X23]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X23]
	103 Move X8, [X0+184]
	104 Move X0, [X8]
	105 Compare X0, 0
	106 JumpIfEqual {174}
	107 Move X2, [X24]
	108 Move W1, W20
	109 Call List`1<OrderBlock>.get_Item, X0, X1
	110 Move X22, X0
	111 Move X0, X1
	112 Move X1, X21
	113 Move X2, X31
	114 Call Delegate.Remove, X0, X1
	115 Move X21, X0
	116 Compare X0, 0
	117 JumpIfEqual {123}
	118 Move X8, 0x518000
	119 Move X8, [X8+3632]
	120 Move X1, [X8]
	121 Move X8, [X21]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X23]
	124 Move X8, [X8+184]
	125 Move X0, [X8]
	126 Compare X0, 0
	127 JumpIfEqual {175}
	128 Move X8, 0x55C000
	129 Move X8, [X8+2816]
	130 Move X4, [X8]
	131 Move W1, W20
	132 Move X2, X22
	133 Move X3, X21
	134 Call List`1<OrderBlock>.set_Item, X0, X1, X2
	135 Compare X21, 0
	136 JumpIfNotEqual {152}
	137 Move X0, [X23]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {143}
	141 Call 0x1C17DFC
	142 Move X0, [X23]
	143 Move X8, [X0+184]
	144 Move X0, [X8]
	145 Compare X0, 0
	146 JumpIfEqual {178}
	147 Move X8, 0x55C000
	148 Move X8, [X8+2824]
	149 Move X2, [X8]
	150 Move W1, W20
	151 Call List`1<OrderBlock>.RemoveAt, X0, X1
	152 Move X21, X31
	153 Move W8, [X31+12]
	154 Compare W8, 0
	155 JumpIfEqual {159}
	156 Move X0, X19
	157 Move X1, X31
	158 Call Monitor.Exit, X0
	159 Compare X21, 0
	160 JumpIfNotEqual {172}
	161 Move X20, [X31+48]
	162 Move X19, [X31+56]
	163 Move X22, [X31+32]
	164 Move X21, [X31+40]
	165 Move X24, [X31+16]
	166 Move X23, [X31+24]
	167 Move X30, [X31+64]
	168 Return 
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Call 0x1C17F20
	172 Move X0, X21
	173 Call 0x1C17F18
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Move X0, X21
	177 Call 0x1C181E0
	178 Call 0x1C17F20
	179 Move X20, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X20
	182 Call 0x3EB2AD0
	183 Move X21, [X0]
	184 Call 0x3EB2AE0
	185 Move X21, X31
	186 Move X20, X0
	187 Move W8, [X31+12]
	188 Compare W8, 0
	189 JumpIfEqual {193}
	190 Move X0, X19
	191 Move X1, X31
	192 Call Monitor.Exit, X0
	193 Compare X21, 0
	194 JumpIfNotEqual {197}
	195 Move X0, X20
	196 Call 0x1D2D690
	197 Move X0, X21
	198 Call 0x1C17F18
	199 Call 0x1991590

Method: System.Void Invoke()

Disassembly:
	0x03C03F98 LDP X20, X19, [X31 + 0x10]
	0x03C03F9C LDP X30, X21, [X31], #0x20
	0x03C03FA0 BR X2
	0x03C03FA4 SUB X31, X31, 0x30
	0x03C03FA8 STR X30, [X31 + 0x10]
	0x03C03FAC STP X20, X19, [X31 + 0x20]
	0x03C03FB0 ADRP X20, 0x7E1000
	0x03C03FB4 LDR X8, [X20 + 0xB8]
	0x03C03FB8 MOV X19, X0
	0x03C03FBC STP S0, S1, [X31]
	0x03C03FC0 STP S2, S3, [X31 + 0x8]
	0x03C03FC4 CBNZ X8, 0x3C03FDC
	0x03C03FC8 ADRP X0, 0xFFFFFFFFFCEF2000
	0x03C03FCC ADD X0, X0, 0xAB
	0x03C03FD0 BL 0x1C16CB8
	0x03C03FD4 MOV X8, X0
	0x03C03FD8 STR X0, [X20 + 0xB8]
	0x03C03FDC ADD X1, X31, 0x0
	0x03C03FE0 MOV X0, X19
	0x03C03FE4 BLR X8
	0x03C03FE8 LDP X20, X19, [X31 + 0x20]
	0x03C03FEC LDR X30, [X31 + 0x10]
	0x03C03FF0 ADD X31, X31, 0x30
	0x03C03FF4 RET
	0x03C03FF8 STP X30, X21, [X31 - 0x20]!
	0x03C03FFC STP X20, X19, [X31 + 0x10]
	0x03C04000 ADRP X21, 0x7E0000
	0x03C04004 LDR X2, [X21 + 0xB8]
	0x03C04008 MOV X19, X1
	0x03C0400C MOV X20, X0
	0x03C04010 CBNZ X2, 0x3C04028
	0x03C04014 ADRP X0, 0xFFFFFFFFFCEF1000
	0x03C04018 ADD X0, X0, 0xAB
	0x03C0401C BL 0x1C16CB8
	0x03C04020 MOV X2, X0
	0x03C04024 STR X0, [X21 + 0xB8]
	0x03C04028 MOV X0, X20
	0x03C0402C MOV X1, X19
	0x03C04030 LDP X20, X19, [X31 + 0x10]
	0x03C04034 LDP X30, X21, [X31], #0x20
	0x03C04038 BR X2
	0x03C0403C STR X30, [X31 - 0x20]!
	0x03C04040 STP X20, X19, [X31 + 0x10]
	0x03C04044 ADRP X20, 0x7DF000
	0x03C04048 LDR X1, [X20 + 0xFF0]
	0x03C0404C MOV X19, X0
	0x03C04050 CBNZ X1, 0x3C04068
	0x03C04054 ADRP X0, 0xFFFFFFFFFCEF2000
	0x03C04058 ADD X0, X0, 0xE68
	0x03C0405C BL 0x1C16CB8
	0x03C04060 MOV X1, X0
	0x03C04064 STR X0, [X20 + 0xFF0]
	0x03C04068 MOV X0, X19
	0x03C0406C LDP X20, X19, [X31 + 0x10]
	0x03C04070 LDR X30, [X31], #0x20
	0x03C04074 BR X1
	0x03C04078 STR X30, [X31 - 0x20]!
	0x03C0407C STP X20, X19, [X31 + 0x10]
	0x03C04080 ADRP X20, 0x7DF000
	0x03C04084 LDR X1, [X20 + 0xFF8]
	0x03C04088 MOV X19, X0
	0x03C0408C CBNZ X1, 0x3C040A4
	0x03C04090 ADRP X0, 0xFFFFFFFFFCF1E000
	0x03C04094 ADD X0, X0, 0xC8B
	0x03C04098 BL 0x1C16CB8
	0x03C0409C MOV X1, X0
	0x03C040A0 STR X0, [X20 + 0xFF8]
	0x03C040A4 MOV X0, X19
	0x03C040A8 LDP X20, X19, [X31 + 0x10]
	0x03C040AC LDR X30, [X31], #0x20
	0x03C040B0 BR X1
	0x03C040B4 STR X30, [X31 - 0x20]!
	0x03C040B8 STP X20, X19, [X31 + 0x10]
	0x03C040BC ADRP X20, 0x7E0000
	0x03C040C0 LDR X1, [X20]
	0x03C040C4 MOV X19, X0
	0x03C040C8 CBNZ X1, 0x3C040E0
	0x03C040CC ADRP X0, 0xFFFFFFFFFCF02000
	0x03C040D0 ADD X0, X0, 0xE81
	0x03C040D4 BL 0x1C16CB8
	0x03C040D8 MOV X1, X0
	0x03C040DC STR X0, [X20]
	0x03C040E0 MOV X0, X19
	0x03C040E4 LDP X20, X19, [X31 + 0x10]
	0x03C040E8 LDR X30, [X31], #0x20
	0x03C040EC BR X1
	0x03C040F0 STP X30, X21, [X31 - 0x20]!
	0x03C040F4 STP X20, X19, [X31 + 0x10]
	0x03C040F8 ADRP X21, 0x7E0000
	0x03C040FC LDR X2, [X21 + 0x8]
	0x03C04100 MOV X19, X1
	0x03C04104 MOV X20, X0
	0x03C04108 CBNZ X2, 0x3C04120
	0x03C0410C ADRP X0, 0xFFFFFFFFFCEF2000
	0x03C04110 ADD X0, X0, 0xE8D
	0x03C04114 BL 0x1C16CB8
	0x03C04118 MOV X2, X0
	0x03C0411C STR X0, [X21 + 0x8]
	0x03C04120 MOV X0, X20
	0x03C04124 MOV X1, X19
	0x03C04128 LDP X20, X19, [X31 + 0x10]
	0x03C0412C LDP X30, X21, [X31], #0x20
	0x03C04130 BR X2
	0x03C04134 STR X30, [X31 - 0x20]!
	0x03C04138 STP X20, X19, [X31 + 0x10]
	0x03C0413C ADRP X20, 0x7E0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x7E2000
	007 Move X21, 0x55C000
	008 Move W8, [X19+739]
	009 Move X21, [X21+2784]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x55C000
	015 Move X0, [X0+2784]
	016 Call 0x1C17CF4
	017 Move X0, 0x55C000
	018 Move X0, [X0+2800]
	019 Call 0x1C17CF4
	020 Move X0, 0x55C000
	021 Move X0, [X0+2808]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+739], W8
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X19, [X8]
	033 Move [X31+12], W31
	034 Add X1, X31, 12
	035 Move X0, X19
	036 Move X2, X31
	037 Call Monitor.Enter, X0, X1
	038 Move X22, 0x55B000
	039 Move X22, [X22+2808]
	040 Move W20, W31
	041 Move X0, [X21]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X21]
	047 Move X8, [X0+184]
	048 Move X8, [X8]
	049 Compare X8, 0
	050 JumpIfEqual {88}
	051 Move W9, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W9, [X0+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {62}
	056 Call 0x1C17DFC
	057 Move X8, [X21]
	058 Move X8, [X8+184]
	059 Move X8, [X8]
	060 Compare X8, 0
	061 JumpIfEqual {89}
	062 Move X2, [X22]
	063 Move X0, X8
	064 Move W1, W20
	065 Call List`1<OrderBlock>.get_Item, X0, X1
	066 Compare X1, 0
	067 JumpIfEqual {72}
	068 Move X8, [X1+24]
	069 Move X0, [X1+64]
	070 Move X1, [X1+40]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Add W20, W20, 1
	073 Move X21, X31
	074 Move W8, [X31+12]
	075 Compare W8, 0
	076 JumpIfEqual {80}
	077 Move X0, X19
	078 Move X1, X31
	079 Call Monitor.Exit, X0
	080 Compare X21, 0
	081 JumpIfNotEqual {90}
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return 
	088 Call 0x1C17F20
	089 Call 0x1C17F20
	090 Move X0, X21
	091 Call 0x1C17F18
	092 Move X20, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, X20
	095 Call 0x3EB2AD0
	096 Move X21, [X0]
	097 Call 0x3EB2AE0
	098 Move X21, X31
	099 Move X20, X0
	100 Move W8, [X31+12]
	101 Compare W8, 0
	102 JumpIfEqual {106}
	103 Move X0, X19
	104 Move X1, X31
	105 Call Monitor.Exit, X0
	106 Compare X21, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X20
	109 Call 0x1D2D690
	110 Move X0, X21
	111 Call 0x1C17F18
	112 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03C0E508 ADD X0, X0, 0xCF4
	0x03C0E50C BL 0x1C16CB8
	0x03C0E510 MOV X6, X0
	0x03C0E514 STR X0, [X25 + 0x390]
	0x03C0E518 MOV X0, X24
	0x03C0E51C MOV W1, W23
	0x03C0E520 MOV W2, W22
	0x03C0E524 MOV X3, X21
	0x03C0E528 MOV W4, W20
	0x03C0E52C MOV W5, W19
	0x03C0E530 LDP X20, X19, [X31 + 0x30]
	0x03C0E534 LDP X22, X21, [X31 + 0x20]
	0x03C0E538 LDP X24, X23, [X31 + 0x10]
	0x03C0E53C LDP X30, X25, [X31], #0x40
	0x03C0E540 BR X6
	0x03C0E544 SUB X31, X31, 0x70
	0x03C0E548 STP X29, X30, [X31 + 0x10]
	0x03C0E54C STP X28, X27, [X31 + 0x20]
	0x03C0E550 STP X26, X25, [X31 + 0x30]
	0x03C0E554 STP X24, X23, [X31 + 0x40]
	0x03C0E558 STP X22, X21, [X31 + 0x50]
	0x03C0E55C STP X20, X19, [X31 + 0x60]
	0x03C0E560 ADRP X8, 0x7D6000
	0x03C0E564 LDR W27, [X31 + 0x88]
	0x03C0E568 LDR W28, [X31 + 0x80]
	0x03C0E56C LDR W29, [X31 + 0x78]
	0x03C0E570 LDR X8, [X8 + 0x398]
	0x03C0E574 LDR W19, [X31 + 0x70]
	0x03C0E578 MOV W20, W6
	0x03C0E57C MOV W21, W5
	0x03C0E580 MOV W22, W4
	0x03C0E584 MOV W23, W3
	0x03C0E588 MOV W24, W2
	0x03C0E58C MOV W25, W1
	0x03C0E590 MOV X26, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7D7000
	007 Move X22, 0x551000
	008 Move X19, 0x551000
	009 Move X20, 0x551000
	010 Move W8, [X21+740]
	011 Move X22, [X22+3280]
	012 Move X19, [X19+3288]
	013 Move X20, [X20+2784]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x551000
	019 Move X0, [X0+2784]
	020 Call 0x1C17CF4
	021 Move X0, 0x551000
	022 Move X0, [X0+3288]
	023 Call 0x1C17CF4
	024 Move X0, 0x551000
	025 Move X0, [X0+3280]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+740], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<OrderBlock>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

