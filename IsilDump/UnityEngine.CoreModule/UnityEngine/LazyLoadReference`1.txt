Type: UnityEngine.LazyLoadReference`1

Method: System.Boolean get_isSet()

Disassembly:
	0x02EE957C STP X20, X19, [X31 + 0x30]
	0x02EE9580 MOV X22, X3
	0x02EE9584 MOV W21, W2
	0x02EE9588 MOV X19, X1

ISIL:
	001 Move W8, [X0]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_isBroken()

Disassembly:
	0x02EE958C MOV X20, X0
	0x02EE9590 STRB W31, [X31 + 0xC]
	0x02EE9594 ADD X1, X31, 0xC
	0x02EE9598 MOV X0, X19
	0x02EE959C MOV X2, X31
	0x02EE95A0 BL 0x33DE64C
	0x02EE95A4 LDR X8, [X22 + 0x20]
	0x02EE95A8 LDR X8, [X8 + 0xC0]
	0x02EE95AC LDR X8, [X8 + 0x20]
	0x02EE95B0 LDR X1, [X8 + 0x80]
	0x02EE95B4 MOV X0, X20
	0x02EE95B8 BL 0x1C16D18
	0x02EE95BC LDR X23, [X0]
	0x02EE95C0 BL 0x1C16D44
	0x02EE95C4 CMP X23, X19
	0x02EE95C8 B.NE 0x2EE9600
	0x02EE95CC LDR X8, [X22 + 0x20]
	0x02EE95D0 LDR X8, [X8 + 0xC0]
	0x02EE95D4 TBZ X21, 0x0, 0x2EE95EC
	0x02EE95D8 LDR X1, [X8 + 0x40]
	0x02EE95DC LDR X8, [X1]
	0x02EE95E0 MOV X0, X20
	0x02EE95E4 BLR X8
	0x02EE95E8 B 0x2EE9600
	0x02EE95EC LDR X2, [X8 + 0x48]
	0x02EE95F0 LDR X8, [X2]
	0x02EE95F4 MOVZ W1, 0x2
	0x02EE95F8 MOV X0, X20
	0x02EE95FC BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x14F3000
	005 Move W8, [X20+2913]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x120B000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2913], W8
	016 Move W19, [X19]
	017 Compare W19, 0
	018 JumpIfEqual {30}
	019 Move X8, 0x120B000
	020 Move X8, [X8+1432]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W19
	027 Move X1, X31
	028 Call Object.DoesObjectWithInstanceIDExist, X0
	029 Xor W8, W0, 1
	030 Move W8, W31
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 And W0, W8, 1
	034 Move X30, [X31+32]
	035 Return X0

Method: T get_asset()

Disassembly:
	0x02EE9600 MOV X20, X31
	0x02EE9604 LDRB W8, [X31 + 0xC]
	0x02EE9608 CBZ W8, 0x2EE9618
	0x02EE960C MOV X0, X19
	0x02EE9610 MOV X1, X31
	0x02EE9614 BL 0x33E14E4
	0x02EE9618 CBNZ X20, 0x2EE9630
	0x02EE961C LDP X20, X19, [X31 + 0x30]
	0x02EE9620 LDP X22, X21, [X31 + 0x20]
	0x02EE9624 LDP X30, X23, [X31 + 0x10]
	0x02EE9628 ADD X31, X31, 0x40
	0x02EE962C RET
	0x02EE9630 MOV X0, X20
	0x02EE9634 BL 0x1C16F18
	0x02EE9638 B 0x2EE9640
	0x02EE963C B 0x2EE9640
	0x02EE9640 MOV X21, X0
	0x02EE9644 CMP W1, 0x1
	0x02EE9648 B.NE 0x2EE9660
	0x02EE964C MOV X0, X21
	0x02EE9650 BL 0x3EB1AD0
	0x02EE9654 LDR X20, [X0]
	0x02EE9658 BL 0x3EB1AE0
	0x02EE965C B 0x2EE9604
	0x02EE9660 MOV X20, X31
	0x02EE9664 B 0x2EE966C
	0x02EE9668 MOV X21, X0
	0x02EE966C LDRB W8, [X31 + 0xC]
	0x02EE9670 CBZ W8, 0x2EE9680
	0x02EE9674 MOV X0, X19
	0x02EE9678 MOV X1, X31
	0x02EE967C BL 0x33E14E4
	0x02EE9680 CBNZ X20, 0x2EE968C
	0x02EE9684 MOV X0, X21
	0x02EE9688 BL 0x1D2C690
	0x02EE968C MOV X0, X20
	0x02EE9690 BL 0x1C16F18
	0x02EE9694 BL 0x1990590
	0x02EE9698 STP X29, X30, [X31 - 0x50]!
	0x02EE969C STP X26, X25, [X31 + 0x10]
	0x02EE96A0 STP X24, X23, [X31 + 0x20]
	0x02EE96A4 STP X22, X21, [X31 + 0x30]
	0x02EE96A8 STP X20, X19, [X31 + 0x40]
	0x02EE96AC ADD X29, X31, 0x0
	0x02EE96B0 SUB X31, X31, 0x10
	0x02EE96B4 MRS X26, 0xC000
	0x02EE96B8 LDR X8, [X26 + 0x28]
	0x02EE96BC ADRP X22, 0x14F2000
	0x02EE96C0 ADRP X25, 0x1236000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x14F3000
	006 Move W8, [X21+2914]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x120B000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2914], W8
	018 Move W20, [X20]
	019 Compare W20, 0
	020 JumpIfEqual {61}
	021 Move X8, 0x120B000
	022 Move X8, [X8+1432]
	023 Move X0, [X8]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W20
	029 Move X1, X31
	030 Call Object.ForceLoadFromInstanceID, X0
	031 Move X8, [X19+32]
	032 Move X19, X0
	033 Move W9, [X8+309]
	034 Move TEMP, X9
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {41}
	038 Move X0, X8
	039 Call 0x1C5D684
	040 Move X8, X0
	041 Move X8, [X8+192]
	042 Move X20, [X8+8]
	043 Move W8, [X20+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Move X0, X20
	049 Call 0x1C5D684
	050 Move X20, X0
	051 Compare X19, 0
	052 JumpIfEqual {61}
	053 Move X0, X19
	054 Move X1, X20
	055 Call 0x1C17E00
	056 Compare X0, 0
	057 JumpIfNotEqual {62}
	058 Move X0, X19
	059 Move X1, X20
	060 Call 0x1C181E0
	061 Move X0, X31
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return X0

