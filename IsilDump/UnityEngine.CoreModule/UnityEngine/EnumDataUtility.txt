Type: UnityEngine.EnumDataUtility

Method: UnityEngine.EnumData GetCachedEnumData(System.Type enumType, UnityEngine.EnumDataUtility/CachedType cachedType = 1, System.Func`2<System.String, System.String> nicifyName = null)

Disassembly:
	0x03C348DC LDR X22, [X22 + 0x6C0]
	0x03C348E0 MOV X19, X1
	0x03C348E4 MOV X20, X0
	0x03C348E8 TBNZ X8, 0x0, 0x3C3496C
	0x03C348EC ADRP X0, 0x519000
	0x03C348F0 LDR X0, [X0 + 0xDA8]
	0x03C348F4 BL 0x1C16CF4
	0x03C348F8 ADRP X0, 0x52B000
	0x03C348FC LDR X0, [X0 + 0x4D8]
	0x03C34900 BL 0x1C16CF4
	0x03C34904 ADRP X0, 0x52B000
	0x03C34908 LDR X0, [X0 + 0x4E0]
	0x03C3490C BL 0x1C16CF4
	0x03C34910 ADRP X0, 0x52B000
	0x03C34914 LDR X0, [X0 + 0x420]
	0x03C34918 BL 0x1C16CF4
	0x03C3491C ADRP X0, 0x52B000
	0x03C34920 LDR X0, [X0 + 0x4D0]
	0x03C34924 BL 0x1C16CF4
	0x03C34928 ADRP X0, 0x52B000
	0x03C3492C LDR X0, [X0 + 0x4E8]
	0x03C34930 BL 0x1C16CF4
	0x03C34934 ADRP X0, 0x4C0000
	0x03C34938 LDR X0, [X0 + 0xE58]
	0x03C3493C BL 0x1C16CF4
	0x03C34940 ADRP X0, 0x4CC000
	0x03C34944 LDR X0, [X0 + 0x2F0]
	0x03C34948 BL 0x1C16CF4
	0x03C3494C ADRP X0, 0x4BF000
	0x03C34950 LDR X0, [X0 + 0xAC8]
	0x03C34954 BL 0x1C16CF4
	0x03C34958 ADRP X0, 0x4BF000
	0x03C3495C LDR X0, [X0 + 0x6C0]
	0x03C34960 BL 0x1C16CF4
	0x03C34964 MOVZ W8, 0x1
	0x03C34968 STRB W8, [X23 + 0x31B]
	0x03C3496C LDR X0, [X22]
	0x03C34970 LDR X21, [X21]
	0x03C34974 LDR W8, [X0 + 0xE0]
	0x03C34978 CBNZ W8, 0x3C34980
	0x03C3497C BL 0x1C16DFC
	0x03C34980 MOV X0, X21
	0x03C34984 MOV X1, X31
	0x03C34988 BL 0x338C698
	0x03C3498C MOV X1, X0
	0x03C34990 MOV X0, X20
	0x03C34994 MOV X2, X31
	0x03C34998 BL 0x33A7D48
	0x03C3499C CBZ X0, 0x3C34CEC
	0x03C349A0 ADRP X8, 0x52B000
	0x03C349A4 LDR X8, [X8 + 0x4E8]
	0x03C349A8 LDR X9, [X0]
	0x03C349AC LDR X8, [X8]
	0x03C349B0 CMP X9, X8
	0x03C349B4 CSEL X24, X0, X31, EQ
	0x03C349B8 CBZ X24, 0x3C34CEC
	0x03C349BC LDR X8, [X19 + 0x10]
	0x03C349C0 CBZ X8, 0x3C34D0C
	0x03C349C4 ADRP X23, 0x4C0000
	0x03C349C8 LDR X20, [X8 + 0x18]
	0x03C349CC LDR X23, [X23 + 0xE58]
	0x03C349D0 MOV W1, W20
	0x03C349D4 LDR X0, [X23]
	0x03C349D8 BL 0x1C16D6C
	0x03C349DC CMP W20, 0x1
	0x03C349E0 MOV X21, X0
	0x03C349E4 B.LT 0x3C34A14
	0x03C349E8 CBZ X21, 0x3C34D0C
	0x03C349EC LDR W9, [X21 + 0x18]
	0x03C349F0 MOV X8, X31
	0x03C349F4 AND X10, X20, 0x0
	0x03C349F8 ADD X11, X21, 0x20
	0x03C349FC CMP X8, X9
	0x03C34A00 B.CS 0x3C34D08
	0x03C34A04 STR W8, [X11, X8, LSL #2]
	0x03C34A08 ADD X8, X8, 0x1
	0x03C34A0C CMP X10, X8
	0x03C34A10 B.NE 0x3C349FC
	0x03C34A14 LDR W8, [X24 + 0x14]
	0x03C34A18 CMP W8, 0x1
	0x03C34A1C B.NE 0x3C34A64
	0x03C34A20 LDR X0, [X23]
	0x03C34A24 MOV W1, W20
	0x03C34A28 BL 0x1C16D6C
	0x03C34A2C LDR X8, [X19 + 0x8]
	0x03C34A30 MOV X22, X0
	0x03C34A34 MOV X1, X22
	0x03C34A38 MOV W2, W20
	0x03C34A3C MOV X0, X8
	0x03C34A40 MOV X3, X31
	0x03C34A44 BL 0x33A0C7C
	0x03C34A48 ADRP X8, 0x52B000
	0x03C34A4C LDR X8, [X8 + 0x4D8]
	0x03C34A50 MOV X0, X22
	0x03C34A54 MOV X1, X21
	0x03C34A58 LDR X2, [X8]
	0x03C34A5C BL 0x2158020
	0x03C34A60 B 0x3C34B00
	0x03C34A64 ADRP X8, 0x4BF000
	0x03C34A68 LDR X8, [X8 + 0xAC8]
	0x03C34A6C MOV W1, W20
	0x03C34A70 LDR X0, [X8]
	0x03C34A74 BL 0x1C16D6C
	0x03C34A78 LDR X8, [X19 + 0x10]
	0x03C34A7C MOV X22, X0
	0x03C34A80 MOV X1, X22
	0x03C34A84 MOV W2, W20
	0x03C34A88 MOV X0, X8
	0x03C34A8C MOV X3, X31
	0x03C34A90 BL 0x33A0C7C
	0x03C34A94 ADRP X25, 0x4CC000
	0x03C34A98 LDR X25, [X25 + 0x2F0]
	0x03C34A9C LDR X0, [X25]
	0x03C34AA0 LDR W8, [X0 + 0xE0]
	0x03C34AA4 CBNZ W8, 0x3C34AAC
	0x03C34AA8 BL 0x1C16DFC
	0x03C34AAC ADRP X26, 0x7A5000
	0x03C34AB0 LDRB W8, [X26 + 0x5A3]
	0x03C34AB4 CBNZ W8, 0x3C34ACC
	0x03C34AB8 ADRP X0, 0x4CC000
	0x03C34ABC LDR X0, [X0 + 0x2F0]
	0x03C34AC0 BL 0x1C16CF4
	0x03C34AC4 MOVZ W8, 0x1
	0x03C34AC8 STRB W8, [X26 + 0x5A3]
	0x03C34ACC LDR X0, [X25]
	0x03C34AD0 LDR W8, [X0 + 0xE0]
	0x03C34AD4 CBNZ W8, 0x3C34AE0
	0x03C34AD8 BL 0x1C16DFC
	0x03C34ADC LDR X0, [X25]
	0x03C34AE0 ADRP X9, 0x52B000
	0x03C34AE4 LDR X8, [X0 + 0xB8]
	0x03C34AE8 LDR X9, [X9 + 0x4E0]
	0x03C34AEC MOV X0, X22
	0x03C34AF0 MOV X1, X21
	0x03C34AF4 LDR X2, [X8 + 0x10]
	0x03C34AF8 LDR X3, [X9]
	0x03C34AFC BL 0x2158194
	0x03C34B00 LDR W8, [X24 + 0x18]
	0x03C34B04 CMP W8, 0x1
	0x03C34B08 B.NE 0x3C34B20
	0x03C34B0C ADRP X8, 0x519000
	0x03C34B10 LDR X8, [X8 + 0xDA8]
	0x03C34B14 MOV X0, X21
	0x03C34B18 LDR X1, [X8]
	0x03C34B1C BL 0x2146668
	0x03C34B20 ADRP X8, 0x52B000
	0x03C34B24 LDR X8, [X8 + 0x420]
	0x03C34B28 MOV W1, W20
	0x03C34B2C LDR X0, [X8]
	0x03C34B30 BL 0x1C16D6C
	0x03C34B34 LDR X8, [X23]
	0x03C34B38 MOV X22, X0
	0x03C34B3C MOV W1, W20
	0x03C34B40 MOV X0, X8
	0x03C34B44 BL 0x1C16D6C
	0x03C34B48 ADRP X25, 0x4BF000
	0x03C34B4C LDR X25, [X25 + 0xAC8]
	0x03C34B50 MOV X23, X0
	0x03C34B54 MOV W1, W20
	0x03C34B58 LDR X8, [X25]
	0x03C34B5C MOV X0, X8
	0x03C34B60 BL 0x1C16D6C
	0x03C34B64 LDR X8, [X25]
	0x03C34B68 MOV X24, X0
	0x03C34B6C MOV W1, W20
	0x03C34B70 MOV X0, X8
	0x03C34B74 BL 0x1C16D6C
	0x03C34B78 LDR X8, [X25]
	0x03C34B7C MOV X25, X0
	0x03C34B80 MOV W1, W20
	0x03C34B84 MOV X0, X8
	0x03C34B88 BL 0x1C16D6C
	0x03C34B8C CMP W20, 0x1
	0x03C34B90 MOV X26, X0
	0x03C34B94 B.LT 0x3C34CE0
	0x03C34B98 CBZ X21, 0x3C34D0C
	0x03C34B9C MOV W9, W31
	0x03C34BA0 LDR W8, [X21 + 0x18]
	0x03C34BA4 CMP W9, W8
	0x03C34BA8 B.CS 0x3C34D08
	0x03C34BAC LDR X8, [X19]
	0x03C34BB0 CBZ X8, 0x3C34D0C
	0x03C34BB4 SXTW X28, W9
	0x03C34BB8 ADD X9, X21, X28, 0x2, LSL
	0x03C34BBC LDRSW X29, [X9 + 0x20]
	0x03C34BC0 LDR W9, [X8 + 0x18]
	0x03C34BC4 CMP W29, W9
	0x03C34BC8 B.CS 0x3C34D08
	0x03C34BCC CBZ X22, 0x3C34D0C
	0x03C34BD0 ADD X8, X8, X29, 0x3, LSL
	0x03C34BD4 LDR X27, [X8 + 0x20]
	0x03C34BD8 CBZ X27, 0x3C34BF0
	0x03C34BDC LDR X8, [X22]
	0x03C34BE0 MOV X0, X27
	0x03C34BE4 LDR X1, [X8 + 0x40]
	0x03C34BE8 BL 0x1C16E00
	0x03C34BEC CBZ X0, 0x3C34D10
	0x03C34BF0 LDR W8, [X22 + 0x18]
	0x03C34BF4 CMP W28, W8
	0x03C34BF8 B.CS 0x3C34D08
	0x03C34BFC ADD X8, X22, X28, 0x3, LSL
	0x03C34C00 STR X27, [X8 + 0x20]
	0x03C34C04 LDR X8, [X19 + 0x8]
	0x03C34C08 CBZ X8, 0x3C34D0C
	0x03C34C0C LDR W9, [X8 + 0x18]
	0x03C34C10 CMP W29, W9
	0x03C34C14 B.CS 0x3C34D08
	0x03C34C18 CBZ X23, 0x3C34D0C
	0x03C34C1C LDR W9, [X23 + 0x18]
	0x03C34C20 CMP W28, W9
	0x03C34C24 B.CS 0x3C34D08
	0x03C34C28 ADD X8, X8, X29, 0x2, LSL
	0x03C34C2C LDR W8, [X8 + 0x20]
	0x03C34C30 ADD X9, X23, X28, 0x2, LSL
	0x03C34C34 STR W8, [X9 + 0x20]
	0x03C34C38 LDR X8, [X19 + 0x10]
	0x03C34C3C CBZ X8, 0x3C34D0C
	0x03C34C40 LDR W9, [X8 + 0x18]
	0x03C34C44 CMP W29, W9
	0x03C34C48 B.CS 0x3C34D08
	0x03C34C4C CBZ X24, 0x3C34D0C
	0x03C34C50 LDR W9, [X24 + 0x18]
	0x03C34C54 CMP W28, W9
	0x03C34C58 B.CS 0x3C34D08
	0x03C34C5C ADD X8, X8, X29, 0x3, LSL
	0x03C34C60 LDR X8, [X8 + 0x20]
	0x03C34C64 ADD X9, X24, X28, 0x3, LSL
	0x03C34C68 STR X8, [X9 + 0x20]
	0x03C34C6C LDR X8, [X19 + 0x18]
	0x03C34C70 CBZ X8, 0x3C34D0C
	0x03C34C74 LDR W9, [X8 + 0x18]
	0x03C34C78 CMP W29, W9
	0x03C34C7C B.CS 0x3C34D08
	0x03C34C80 CBZ X25, 0x3C34D0C
	0x03C34C84 LDR W9, [X25 + 0x18]
	0x03C34C88 CMP W28, W9
	0x03C34C8C B.CS 0x3C34D08
	0x03C34C90 ADD X8, X8, X29, 0x3, LSL
	0x03C34C94 LDR X8, [X8 + 0x20]
	0x03C34C98 ADD X9, X25, X28, 0x3, LSL
	0x03C34C9C STR X8, [X9 + 0x20]
	0x03C34CA0 LDR X8, [X19 + 0x20]
	0x03C34CA4 CBZ X8, 0x3C34D0C
	0x03C34CA8 LDR W9, [X8 + 0x18]
	0x03C34CAC CMP W29, W9
	0x03C34CB0 B.CS 0x3C34D08
	0x03C34CB4 CBZ X26, 0x3C34D0C
	0x03C34CB8 LDR W9, [X26 + 0x18]
	0x03C34CBC CMP W28, W9
	0x03C34CC0 B.CS 0x3C34D08
	0x03C34CC4 ADD X8, X8, X29, 0x3, LSL
	0x03C34CC8 LDR X8, [X8 + 0x20]
	0x03C34CCC ADD W9, W28, 0x1
	0x03C34CD0 ADD X10, X26, X28, 0x3, LSL
	0x03C34CD4 CMP W20, W9
	0x03C34CD8 STR X8, [X10 + 0x20]
	0x03C34CDC B.NE 0x3C34BA0
	0x03C34CE0 STP X22, X23, [X19]
	0x03C34CE4 STP X24, X25, [X19 + 0x10]
	0x03C34CE8 STR X26, [X19 + 0x20]
	0x03C34CEC LDP X20, X19, [X31 + 0x50]
	0x03C34CF0 LDP X22, X21, [X31 + 0x40]
	0x03C34CF4 LDP X24, X23, [X31 + 0x30]
	0x03C34CF8 LDP X26, X25, [X31 + 0x20]
	0x03C34CFC LDP X28, X27, [X31 + 0x10]
	0x03C34D00 LDP X29, X30, [X31], #0x60
	0x03C34D04 RET
	0x03C34D08 BL 0x1C16F28
	0x03C34D0C BL 0x1C16F20
	0x03C34D10 BL 0x1C16F44
	0x03C34D14 MOV X1, X31
	0x03C34D18 BL 0x1C16DEC
	0x03C34D1C STR X30, [X31 - 0x30]!
	0x03C34D20 STP X22, X21, [X31 + 0x10]
	0x03C34D24 STP X20, X19, [X31 + 0x20]
	0x03C34D28 ADRP X22, 0x7B1000
	0x03C34D2C ADRP X20, 0x52B000
	0x03C34D30 ADRP X21, 0x4BF000
	0x03C34D34 LDRB W8, [X22 + 0x31D]
	0x03C34D38 LDR X20, [X20 + 0x4F0]
	0x03C34D3C LDR X21, [X21 + 0x6C0]
	0x03C34D40 MOV X19, X0
	0x03C34D44 TBNZ X8, 0x0, 0x3C34D8C
	0x03C34D48 ADRP X0, 0x52B000
	0x03C34D4C LDR X0, [X0 + 0x4C8]
	0x03C34D50 BL 0x1C16CF4
	0x03C34D54 ADRP X0, 0x4C1000
	0x03C34D58 LDR X0, [X0 + 0x278]
	0x03C34D5C BL 0x1C16CF4
	0x03C34D60 ADRP X0, 0x52B000
	0x03C34D64 LDR X0, [X0 + 0x4F0]
	0x03C34D68 BL 0x1C16CF4
	0x03C34D6C ADRP X0, 0x52B000
	0x03C34D70 LDR X0, [X0 + 0x4F8]
	0x03C34D74 BL 0x1C16CF4
	0x03C34D78 ADRP X0, 0x4BF000
	0x03C34D7C LDR X0, [X0 + 0x6C0]
	0x03C34D80 BL 0x1C16CF4
	0x03C34D84 MOVZ W8, 0x1
	0x03C34D88 STRB W8, [X22 + 0x31D]
	0x03C34D8C LDR X0, [X21]
	0x03C34D90 LDR X20, [X20]
	0x03C34D94 LDR W8, [X0 + 0xE0]
	0x03C34D98 CBNZ W8, 0x3C34DA0
	0x03C34D9C BL 0x1C16DFC
	0x03C34DA0 MOV X0, X20
	0x03C34DA4 MOV X1, X31
	0x03C34DA8 BL 0x338C698
	0x03C34DAC CBZ X19, 0x3C34E4C
	0x03C34DB0 LDR X8, [X19]
	0x03C34DB4 MOV X1, X0
	0x03C34DB8 MOV X0, X19
	0x03C34DBC MOV W2, W31
	0x03C34DC0 LDR X9, [X8 + 0x208]
	0x03C34DC4 LDR X3, [X8 + 0x210]
	0x03C34DC8 BLR X9
	0x03C34DCC CBZ X0, 0x3C34E4C
	0x03C34DD0 LDR W8, [X0 + 0x18]
	0x03C34DD4 CBZ W8, 0x3C34E28
	0x03C34DD8 ADRP X8, 0x52B000
	0x03C34DDC LDR X8, [X8 + 0x4C8]
	0x03C34DE0 LDR X1, [X8]
	0x03C34DE4 BL 0x21C2FD4
	0x03C34DE8 CBZ X0, 0x3C34E4C
	0x03C34DEC ADRP X9, 0x52B000
	0x03C34DF0 LDR X9, [X9 + 0x4F8]
	0x03C34DF4 LDR X8, [X0]
	0x03C34DF8 LDR X1, [X9]
	0x03C34DFC LDRB W10, [X8 + 0x130]
	0x03C34E00 LDRB W9, [X1 + 0x130]
	0x03C34E04 CMP W10, W9
	0x03C34E08 B.CC 0x3C34E50
	0x03C34E0C LDR X8, [X8 + 0xC8]
	0x03C34E10 ADD X8, X8, X9, 0x3, LSL
	0x03C34E14 LDUR X8, [X8 - 0x8]
	0x03C34E18 CMP X8, X1
	0x03C34E1C B.NE 0x3C34E50
	0x03C34E20 ADD X8, X0, 0x18
	0x03C34E24 B 0x3C34E38
	0x03C34E28 ADRP X8, 0x4C1000
	0x03C34E2C LDR X8, [X8 + 0x278]
	0x03C34E30 LDR X8, [X8]
	0x03C34E34 LDR X8, [X8 + 0xB8]
	0x03C34E38 LDR X0, [X8]
	0x03C34E3C LDP X20, X19, [X31 + 0x20]
	0x03C34E40 LDP X22, X21, [X31 + 0x10]
	0x03C34E44 LDR X30, [X31], #0x30
	0x03C34E48 RET
	0x03C34E4C BL 0x1C16F20
	0x03C34E50 BL 0x1C171E0
	0x03C34E54 SUB X31, X31, 0x40
	0x03C34E58 STP X30, X23, [X31 + 0x10]
	0x03C34E5C STP X22, X21, [X31 + 0x20]
	0x03C34E60 STP X20, X19, [X31 + 0x30]
	0x03C34E64 ADRP X23, 0x7B1000
	0x03C34E68 ADRP X22, 0x52B000
	0x03C34E6C ADRP X21, 0x4BF000
	0x03C34E70 LDRB W8, [X23 + 0x31E]
	0x03C34E74 LDR X22, [X22 + 0x500]
	0x03C34E78 LDR X21, [X21 + 0x6C0]
	0x03C34E7C MOV X20, X1
	0x03C34E80 MOV X19, X0
	0x03C34E84 TBNZ X8, 0x0, 0x3C34EE4
	0x03C34E88 ADRP X0, 0x52B000
	0x03C34E8C LDR X0, [X0 + 0x418]
	0x03C34E90 BL 0x1C16CF4
	0x03C34E94 ADRP X0, 0x52B000
	0x03C34E98 LDR X0, [X0 + 0x4C8]
	0x03C34E9C BL 0x1C16CF4
	0x03C34EA0 ADRP X0, 0x52B000
	0x03C34EA4 LDR X0, [X0 + 0x500]
	0x03C34EA8 BL 0x1C16CF4
	0x03C34EAC ADRP X0, 0x52B000
	0x03C34EB0 LDR X0, [X0 + 0x508]
	0x03C34EB4 BL 0x1C16CF4
	0x03C34EB8 ADRP X0, 0x4E8000
	0x03C34EBC LDR X0, [X0 + 0xB28]
	0x03C34EC0 BL 0x1C16CF4
	0x03C34EC4 ADRP X0, 0x4BF000
	0x03C34EC8 LDR X0, [X0 + 0x6C0]
	0x03C34ECC BL 0x1C16CF4
	0x03C34ED0 ADRP X0, 0x52B000
	0x03C34ED4 LDR X0, [X0 + 0x510]
	0x03C34ED8 BL 0x1C16CF4
	0x03C34EDC MOVZ W8, 0x1
	0x03C34EE0 STRB W8, [X23 + 0x31E]
	0x03C34EE4 LDR X0, [X21]
	0x03C34EE8 STP X20, X19, [X31]
	0x03C34EEC LDR X20, [X22]
	0x03C34EF0 LDR W8, [X0 + 0xE0]
	0x03C34EF4 CBNZ W8, 0x3C34EFC
	0x03C34EF8 BL 0x1C16DFC
	0x03C34EFC MOV X0, X20
	0x03C34F00 MOV X1, X31
	0x03C34F04 BL 0x338C698
	0x03C34F08 CBZ X19, 0x3C35018
	0x03C34F0C LDR X8, [X19]
	0x03C34F10 MOV X1, X0
	0x03C34F14 MOV X0, X19
	0x03C34F18 MOV W2, W31
	0x03C34F1C LDR X9, [X8 + 0x208]
	0x03C34F20 LDR X3, [X8 + 0x210]
	0x03C34F24 BLR X9
	0x03C34F28 CBZ X0, 0x3C35018
	0x03C34F2C LDR W8, [X0 + 0x18]
	0x03C34F30 CBZ W8, 0x3C34F84
	0x03C34F34 ADRP X8, 0x52B000
	0x03C34F38 LDR X8, [X8 + 0x4C8]
	0x03C34F3C LDR X1, [X8]
	0x03C34F40 BL 0x21C2FD4
	0x03C34F44 CBZ X0, 0x3C35018
	0x03C34F48 ADRP X9, 0x52B000
	0x03C34F4C LDR X9, [X9 + 0x508]
	0x03C34F50 LDR X8, [X0]
	0x03C34F54 LDR X1, [X9]
	0x03C34F58 LDRB W10, [X8 + 0x130]
	0x03C34F5C LDRB W9, [X1 + 0x130]
	0x03C34F60 CMP W10, W9
	0x03C34F64 B.CC 0x3C3501C
	0x03C34F68 LDR X8, [X8 + 0xC8]
	0x03C34F6C ADD X8, X8, X9, 0x3, LSL
	0x03C34F70 LDUR X8, [X8 - 0x8]
	0x03C34F74 CMP X8, X1
	0x03C34F78 B.NE 0x3C3501C
	0x03C34F7C LDR X0, [X0 + 0x18]
	0x03C34F80 B 0x3C35004
	0x03C34F84 ADRP X8, 0x4E8000
	0x03C34F88 LDR X0, [X21]
	0x03C34F8C LDR X8, [X8 + 0xB28]
	0x03C34F90 LDR W9, [X0 + 0xE0]
	0x03C34F94 LDR X20, [X8]
	0x03C34F98 CBNZ W9, 0x3C34FA0
	0x03C34F9C BL 0x1C16DFC
	0x03C34FA0 MOV X0, X20
	0x03C34FA4 MOV X1, X31
	0x03C34FA8 BL 0x338C698
	0x03C34FAC LDR X8, [X19]
	0x03C34FB0 MOV X1, X0
	0x03C34FB4 MOV X0, X19
	0x03C34FB8 MOV W2, W31
	0x03C34FBC LDP X9, X3, [X8 + 0x1E8]
	0x03C34FC0 BLR X9
	0x03C34FC4 ADRP X8, 0x52B000
	0x03C34FC8 LDR X8, [X8 + 0x418]
	0x03C34FCC MOV W19, W0
	0x03C34FD0 LDR X8, [X8]
	0x03C34FD4 LDR W9, [X8 + 0xE0]
	0x03C34FD8 CBNZ W9, 0x3C34FE4
	0x03C34FDC MOV X0, X8
	0x03C34FE0 BL 0x1C16DFC
	0x03C34FE4 ADD X0, X31, 0x0
	0x03C34FE8 BL 0x3C35020
	0x03C34FEC TBZ X19, 0x0, 0x3C35004
	0x03C34FF0 ADRP X8, 0x52B000
	0x03C34FF4 LDR X8, [X8 + 0x510]
	0x03C34FF8 MOV X2, X31
	0x03C34FFC LDR X1, [X8]
	0x03C35000 BL 0x321B938
	0x03C35004 LDP X20, X19, [X31 + 0x30]
	0x03C35008 LDP X22, X21, [X31 + 0x20]
	0x03C3500C LDP X30, X23, [X31 + 0x10]
	0x03C35010 ADD X31, X31, 0x40
	0x03C35014 RET
	0x03C35018 BL 0x1C16F20
	0x03C3501C BL 0x1C171E0
	0x03C35020 STP X30, X19, [X31 - 0x10]!
	0x03C35024 LDP X19, X0, [X0]
	0x03C35028 CBZ X19, 0x3C35058
	0x03C3502C CBZ X0, 0x3C3506C
	0x03C35030 LDR X8, [X0]
	0x03C35034 LDP X9, X1, [X8 + 0x1A8]
	0x03C35038 BLR X9
	0x03C3503C LDR X8, [X19 + 0x40]
	0x03C35040 LDR X3, [X19 + 0x18]
	0x03C35044 LDR X2, [X19 + 0x28]
	0x03C35048 MOV X1, X0
	0x03C3504C MOV X0, X8
	0x03C35050 LDP X30, X19, [X31], #0x10
	0x03C35054 BR X3
	0x03C35058 CBZ X0, 0x3C3506C
	0x03C3505C LDR X8, [X0]
	0x03C35060 LDP X2, X1, [X8 + 0x1A8]
	0x03C35064 LDP X30, X19, [X31], #0x10
	0x03C35068 BR X2
	0x03C3506C BL 0x1C16F20
	0x03C35070 STR X30, [X31 - 0x30]!
	0x03C35074 STP X22, X21, [X31 + 0x10]
	0x03C35078 STP X20, X19, [X31 + 0x20]
	0x03C3507C ADRP X21, 0x7B0000
	0x03C35080 ADRP X22, 0x52A000
	0x03C35084 ADRP X19, 0x52A000
	0x03C35088 ADRP X20, 0x52A000
	0x03C3508C LDRB W8, [X21 + 0x31F]
	0x03C35090 LDR X22, [X22 + 0x518]
	0x03C35094 LDR X19, [X19 + 0x520]
	0x03C35098 LDR X20, [X20 + 0x418]
	0x03C3509C TBNZ X8, 0x0, 0x3C350CC
	0x03C350A0 ADRP X0, 0x52A000
	0x03C350A4 LDR X0, [X0 + 0x520]
	0x03C350A8 BL 0x1C16CF4
	0x03C350AC ADRP X0, 0x52A000
	0x03C350B0 LDR X0, [X0 + 0x518]
	0x03C350B4 BL 0x1C16CF4
	0x03C350B8 ADRP X0, 0x52A000
	0x03C350BC LDR X0, [X0 + 0x418]
	0x03C350C0 BL 0x1C16CF4
	0x03C350C4 MOVZ W8, 0x1
	0x03C350C8 STRB W8, [X21 + 0x31F]
	0x03C350CC LDR X0, [X22]
	0x03C350D0 BL 0x1C16F10
	0x03C350D4 LDR X1, [X19]
	0x03C350D8 MOV X19, X0
	0x03C350DC BL 0x29BFB74
	0x03C350E0 LDR X8, [X20]
	0x03C350E4 LDP X22, X21, [X31 + 0x10]
	0x03C350E8 LDR X8, [X8 + 0xB8]
	0x03C350EC STR X19, [X8]
	0x03C350F0 LDP X20, X19, [X31 + 0x20]
	0x03C350F4 LDR X30, [X31], #0x30
	0x03C350F8 RET
	0x03C350FC STR X30, [X31 - 0x20]!
	0x03C35100 STP X20, X19, [X31 + 0x10]
	0x03C35104 ADRP X19, 0x7B0000
	0x03C35108 ADRP X20, 0x52A000
	0x03C3510C LDRB W8, [X19 + 0x320]
	0x03C35110 LDR X20, [X20 + 0x4A8]
	0x03C35114 TBNZ X8, 0x0, 0x3C3512C
	0x03C35118 ADRP X0, 0x52A000
	0x03C3511C LDR X0, [X0 + 0x4A8]
	0x03C35120 BL 0x1C16CF4
	0x03C35124 MOVZ W8, 0x1
	0x03C35128 STRB W8, [X19 + 0x320]
	0x03C3512C LDR X0, [X20]
	0x03C35130 BL 0x1C16F10
	0x03C35134 MOV X1, X31
	0x03C35138 MOV X19, X0
	0x03C3513C BL 0x33BDD8C
	0x03C35140 LDR X8, [X20]
	0x03C35144 LDR X8, [X8 + 0xB8]
	0x03C35148 STR X19, [X8]
	0x03C3514C LDP X20, X19, [X31 + 0x10]
	0x03C35150 LDR X30, [X31], #0x20
	0x03C35154 RET
	0x03C35158 MOV X1, X31
	0x03C3515C B 0x33BDD8C
	0x03C35160 STR X30, [X31 - 0x10]!
	0x03C35164 CBZ X1, 0x3C35184
	0x03C35168 LDR X8, [X1]
	0x03C3516C MOV X0, X1
	0x03C35170 LDR X2, [X8 + 0x238]
	0x03C35174 LDR X8, [X8 + 0x240]
	0x03C35178 MOV X1, X8
	0x03C3517C LDR X30, [X31], #0x10
	0x03C35180 BR X2
	0x03C35184 BL 0x1C16F20
	0x03C35188 STP X30, X21, [X31 - 0x20]!
	0x03C3518C STP X20, X19, [X31 + 0x10]
	0x03C35190 ADRP X20, 0x7B0000
	0x03C35194 ADRP X21, 0x52A000
	0x03C35198 LDRB W8, [X20 + 0x321]
	0x03C3519C LDR X21, [X21 + 0x418]
	0x03C351A0 MOV X19, X1
	0x03C351A4 TBNZ X8, 0x0, 0x3C351BC
	0x03C351A8 ADRP X0, 0x52A000
	0x03C351AC LDR X0, [X0 + 0x418]
	0x03C351B0 BL 0x1C16CF4
	0x03C351B4 MOVZ W8, 0x1
	0x03C351B8 STRB W8, [X20 + 0x321]
	0x03C351BC LDR X0, [X21]
	0x03C351C0 LDR W8, [X0 + 0xE0]
	0x03C351C4 CBNZ W8, 0x3C351CC
	0x03C351C8 BL 0x1C16DFC
	0x03C351CC MOV X0, X19
	0x03C351D0 LDP X20, X19, [X31 + 0x10]
	0x03C351D4 LDP X30, X21, [X31], #0x20
	0x03C351D8 B 0x3C34D1C
	0x03C351DC STR X30, [X31 - 0x20]!
	0x03C351E0 STP X20, X19, [X31 + 0x10]
	0x03C351E4 ADRP X20, 0x7B0000
	0x03C351E8 LDRB W8, [X20 + 0x322]
	0x03C351EC MOV X19, X1
	0x03C351F0 TBNZ X8, 0x0, 0x3C35208
	0x03C351F4 ADRP X0, 0x4BE000
	0x03C351F8 LDR X0, [X0 + 0xDF8]
	0x03C351FC BL 0x1C16CF4
	0x03C35200 MOVZ W8, 0x1
	0x03C35204 STRB W8, [X20 + 0x322]
	0x03C35208 CBZ X19, 0x3C3526C
	0x03C3520C LDR X8, [X19]
	0x03C35210 MOV X0, X19
	0x03C35214 MOV X1, X31
	0x03C35218 LDR X9, [X8 + 0x2C8]
	0x03C3521C LDR X2, [X8 + 0x2D0]
	0x03C35220 BLR X9
	0x03C35224 CBZ X0, 0x3C3525C
	0x03C35228 ADRP X9, 0x4BE000
	0x03C3522C LDR X9, [X9 + 0xDF8]
	0x03C35230 LDR X8, [X0]
	0x03C35234 LDR X1, [X9]
	0x03C35238 LDRB W10, [X8 + 0x130]
	0x03C3523C LDRB W9, [X1 + 0x130]
	0x03C35240 CMP W10, W9
	0x03C35244 B.CC 0x3C35268
	0x03C35248 LDR X8, [X8 + 0xC8]
	0x03C3524C ADD X8, X8, X9, 0x3, LSL
	0x03C35250 LDUR X8, [X8 - 0x8]
	0x03C35254 CMP X8, X1
	0x03C35258 B.NE 0x3C35268
	0x03C3525C LDP X20, X19, [X31 + 0x10]
	0x03C35260 LDR X30, [X31], #0x20
	0x03C35264 RET
	0x03C35268 BL 0x1C171E0
	0x03C3526C BL 0x1C16F20
	0x03C35270 STP X30, X21, [X31 - 0x20]!
	0x03C35274 STP X20, X19, [X31 + 0x10]
	0x03C35278 ADRP X20, 0x7B0000
	0x03C3527C ADRP X21, 0x4C7000
	0x03C35280 LDRB W8, [X20 + 0x323]
	0x03C35284 LDR X21, [X21 + 0x9E8]
	0x03C35288 MOV X19, X1
	0x03C3528C TBNZ X8, 0x0, 0x3C352A4
	0x03C35290 ADRP X0, 0x4C7000
	0x03C35294 LDR X0, [X0 + 0x9E8]
	0x03C35298 BL 0x1C16CF4
	0x03C3529C MOVZ W8, 0x1
	0x03C352A0 STRB W8, [X20 + 0x323]
	0x03C352A4 LDR X0, [X21]
	0x03C352A8 LDR W8, [X0 + 0xE0]
	0x03C352AC CBNZ W8, 0x3C352B4
	0x03C352B0 BL 0x1C16DFC
	0x03C352B4 MOV X0, X19
	0x03C352B8 MOV X1, X31
	0x03C352BC BL 0x332101C
	0x03C352C0 LDP X20, X19, [X31 + 0x10]
	0x03C352C4 LDP X30, X21, [X31], #0x20
	0x03C352C8 RET
	0x03C352CC STP X30, X21, [X31 - 0x20]!
	0x03C352D0 STP X20, X19, [X31 + 0x10]
	0x03C352D4 ADRP X20, 0x7B0000
	0x03C352D8 ADRP X21, 0x4C7000
	0x03C352DC LDRB W8, [X20 + 0x324]
	0x03C352E0 LDR X21, [X21 + 0x9E8]
	0x03C352E4 MOV X19, X1
	0x03C352E8 TBNZ X8, 0x0, 0x3C35300
	0x03C352EC ADRP X0, 0x4C7000
	0x03C352F0 LDR X0, [X0 + 0x9E8]
	0x03C352F4 BL 0x1C16CF4
	0x03C352F8 MOVZ W8, 0x1
	0x03C352FC STRB W8, [X20 + 0x324]
	0x03C35300 LDR X0, [X21]
	0x03C35304 LDR W8, [X0 + 0xE0]
	0x03C35308 CBNZ W8, 0x3C35310
	0x03C3530C BL 0x1C16DFC
	0x03C35310 MOV X0, X19
	0x03C35314 MOV X1, X31
	0x03C35318 BL 0x3320B38
	0x03C3531C LDP X20, X19, [X31 + 0x10]
	0x03C35320 LDP X30, X21, [X31], #0x20
	0x03C35324 RET
	0x03C35328 STR X30, [X31 - 0x30]!
	0x03C3532C STP X22, X21, [X31 + 0x10]
	0x03C35330 STP X20, X19, [X31 + 0x20]
	0x03C35334 ADRP X22, 0x7B0000
	0x03C35338 ADRP X21, 0x52A000
	0x03C3533C LDRB W8, [X22 + 0x325]
	0x03C35340 LDR X21, [X21 + 0x418]
	0x03C35344 MOV X19, X1
	0x03C35348 MOV X20, X0
	0x03C3534C TBNZ X8, 0x0, 0x3C35364
	0x03C35350 ADRP X0, 0x52A000
	0x03C35354 LDR X0, [X0 + 0x418]
	0x03C35358 BL 0x1C16CF4
	0x03C3535C MOVZ W8, 0x1
	0x03C35360 STRB W8, [X22 + 0x325]
	0x03C35364 LDR X0, [X21]
	0x03C35368 LDR X20, [X20 + 0x10]
	0x03C3536C LDR W8, [X0 + 0xE0]
	0x03C35370 CBNZ W8, 0x3C35378
	0x03C35374 BL 0x1C16DFC
	0x03C35378 MOV X0, X19
	0x03C3537C MOV X1, X20
	0x03C35380 LDP X20, X19, [X31 + 0x20]
	0x03C35384 LDP X22, X21, [X31 + 0x10]
	0x03C35388 LDR X30, [X31], #0x30
	0x03C3538C B 0x3C34E54
	0x03C35390 MOV X1, X31
	0x03C35394 B 0x33A51F0
	0x03C35398 MOV X1, X31
	0x03C3539C B 0x33A51F0
	0x03C353A0 STR X30, [X31 - 0x20]!
	0x03C353A4 STP X20, X19, [X31 + 0x10]
	0x03C353A8 ADRP X20, 0x7B0000
	0x03C353AC LDR X1, [X20 + 0x328]
	0x03C353B0 MOV W19, W0
	0x03C353B4 CBNZ X1, 0x3C353CC
	0x03C353B8 ADRP X0, 0xFFFFFFFFFCEF7000
	0x03C353BC ADD X0, X0, 0x94A
	0x03C353C0 BL 0x1C16CB8
	0x03C353C4 MOV X1, X0
	0x03C353C8 STR X0, [X20 + 0x328]
	0x03C353CC MOV W0, W19
	0x03C353D0 LDP X20, X19, [X31 + 0x10]
	0x03C353D4 LDR X30, [X31], #0x20
	0x03C353D8 BR X1
	0x03C353DC STR X30, [X31 - 0x30]!
	0x03C353E0 STP X22, X21, [X31 + 0x10]
	0x03C353E4 STP X20, X19, [X31 + 0x20]
	0x03C353E8 ADRP X22, 0x7B0000
	0x03C353EC LDR X3, [X22 + 0x338]
	0x03C353F0 MOV X19, X2
	0x03C353F4 MOV X20, X1
	0x03C353F8 MOV X21, X0
	0x03C353FC CBNZ X3, 0x3C35414
	0x03C35400 ADRP X0, 0xFFFFFFFFFCEC4000
	0x03C35404 ADD X0, X0, 0x4B2
	0x03C35408 BL 0x1C16CB8
	0x03C3540C MOV X3, X0
	0x03C35410 STR X0, [X22 + 0x338]
	0x03C35414 MOV X0, X21
	0x03C35418 MOV X1, X20
	0x03C3541C MOV X2, X19
	0x03C35420 LDP X20, X19, [X31 + 0x20]
	0x03C35424 LDP X22, X21, [X31 + 0x10]
	0x03C35428 LDR X30, [X31], #0x30
	0x03C3542C BR X3
	0x03C35430 STR X30, [X31 - 0x50]!
	0x03C35434 STP X26, X25, [X31 + 0x10]
	0x03C35438 STP X24, X23, [X31 + 0x20]
	0x03C3543C STP X22, X21, [X31 + 0x30]
	0x03C35440 STP X20, X19, [X31 + 0x40]
	0x03C35444 ADRP X26, 0x7B0000
	0x03C35448 LDR X7, [X26 + 0x350]
	0x03C3544C MOV X19, X6
	0x03C35450 MOV W20, W5
	0x03C35454 MOV W22, W4
	0x03C35458 MOV W23, W3
	0x03C3545C MOV W24, W2
	0x03C35460 MOV X21, X1
	0x03C35464 MOV X25, X0
	0x03C35468 CBNZ X7, 0x3C35480
	0x03C3546C ADRP X0, 0xFFFFFFFFFCEC2000
	0x03C35470 ADD X0, X0, 0x215
	0x03C35474 BL 0x1C16CB8
	0x03C35478 MOV X7, X0
	0x03C3547C STR X0, [X26 + 0x350]
	0x03C35480 AND W2, W24, 0x1
	0x03C35484 AND W3, W23, 0x1
	0x03C35488 AND W4, W22, 0x1
	0x03C3548C AND W5, W20, 0x1
	0x03C35490 MOV X0, X25
	0x03C35494 MOV X1, X21
	0x03C35498 MOV X6, X19
	0x03C3549C LDP X20, X19, [X31 + 0x40]
	0x03C354A0 LDP X22, X21, [X31 + 0x30]
	0x03C354A4 LDP X24, X23, [X31 + 0x20]
	0x03C354A8 LDP X26, X25, [X31 + 0x10]
	0x03C354AC LDR X30, [X31], #0x50
	0x03C354B0 BR X7
	0x03C354B4 STP X30, X21, [X31 - 0x20]!
	0x03C354B8 STP X20, X19, [X31 + 0x10]
	0x03C354BC ADRP X21, 0x7B0000
	0x03C354C0 LDR X2, [X21 + 0x360]
	0x03C354C4 MOV X19, X1
	0x03C354C8 MOV X20, X0
	0x03C354CC CBNZ X2, 0x3C354E4
	0x03C354D0 ADRP X0, 0xFFFFFFFFFCED2000
	0x03C354D4 ADD X0, X0, 0x21E
	0x03C354D8 BL 0x1C16CB8
	0x03C354DC MOV X2, X0
	0x03C354E0 STR X0, [X21 + 0x360]
	0x03C354E4 MOV X0, X20
	0x03C354E8 MOV X1, X19
	0x03C354EC LDP X20, X19, [X31 + 0x10]
	0x03C354F0 LDP X30, X21, [X31], #0x20
	0x03C354F4 BR X2
	0x03C354F8 STR X30, [X31 - 0x30]!
	0x03C354FC STP X22, X21, [X31 + 0x10]
	0x03C35500 STP X20, X19, [X31 + 0x20]
	0x03C35504 ADRP X21, 0x7B0000
	0x03C35508 ADRP X22, 0x4BE000
	0x03C3550C LDRB W8, [X21 + 0x54C]
	0x03C35510 LDR X22, [X22 + 0x598]
	0x03C35514 MOV X19, X1
	0x03C35518 MOV X20, X0
	0x03C3551C TBNZ X8, 0x0, 0x3C35534
	0x03C35520 ADRP X0, 0x4BE000
	0x03C35524 LDR X0, [X0 + 0x598]
	0x03C35528 BL 0x1C16CF4
	0x03C3552C MOVZ W8, 0x1
	0x03C35530 STRB W8, [X21 + 0x54C]
	0x03C35534 LDR X0, [X22]
	0x03C35538 LDR W8, [X0 + 0xE0]
	0x03C3553C CBNZ W8, 0x3C35544
	0x03C35540 BL 0x1C16DFC
	0x03C35544 MOV X0, X20
	0x03C35548 MOV X1, X19
	0x03C3554C BL 0x3C388A0
	0x03C35550 LDP X20, X19, [X31 + 0x20]
	0x03C35554 LDP X22, X21, [X31 + 0x10]
	0x03C35558 ORN W8, W31, W0, 0x0
	0x03C3555C AND W0, W8, 0x1
	0x03C35560 LDR X30, [X31], #0x30
	0x03C35564 RET
	0x03C35568 STR X30, [X31 - 0x30]!
	0x03C3556C STP X22, X21, [X31 + 0x10]
	0x03C35570 STP X20, X19, [X31 + 0x20]
	0x03C35574 ADRP X22, 0x7B0000
	0x03C35578 LDR X3, [X22 + 0x368]
	0x03C3557C MOV X19, X2
	0x03C35580 MOV X20, X1
	0x03C35584 MOV X21, X0
	0x03C35588 CBNZ X3, 0x3C355A0
	0x03C3558C ADRP X0, 0xFFFFFFFFFCEC6000
	0x03C35590 ADD X0, X0, 0x2F3
	0x03C35594 BL 0x1C16CB8
	0x03C35598 MOV X3, X0
	0x03C3559C STR X0, [X22 + 0x368]
	0x03C355A0 MOV X0, X21
	0x03C355A4 MOV X1, X20
	0x03C355A8 MOV X2, X19
	0x03C355AC LDP X20, X19, [X31 + 0x20]
	0x03C355B0 LDP X22, X21, [X31 + 0x10]
	0x03C355B4 LDR X30, [X31], #0x30
	0x03C355B8 BR X3
	0x03C355BC STR X30, [X31 - 0x30]!
	0x03C355C0 STP X22, X21, [X31 + 0x10]
	0x03C355C4 STP X20, X19, [X31 + 0x20]
	0x03C355C8 ADRP X22, 0x7B0000
	0x03C355CC LDR X4, [X22 + 0x3D0]
	0x03C355D0 MOV W19, W2
	0x03C355D4 MOV X20, X1
	0x03C355D8 MOV X21, X0
	0x03C355DC CBNZ X4, 0x3C355F4
	0x03C355E0 ADRP X0, 0xFFFFFFFFFCEBC000
	0x03C355E4 ADD X0, X0, 0x154
	0x03C355E8 BL 0x1C16CB8
	0x03C355EC MOV X4, X0
	0x03C355F0 STR X0, [X22 + 0x3D0]
	0x03C355F4 MOV X0, X21
	0x03C355F8 MOV X1, X20
	0x03C355FC MOV W3, W19
	0x03C35600 LDP X20, X19, [X31 + 0x20]
	0x03C35604 LDP X22, X21, [X31 + 0x10]
	0x03C35608 MOV X2, X31
	0x03C3560C LDR X30, [X31], #0x30
	0x03C35610 BR X4
	0x03C35614 STP X30, X23, [X31 - 0x30]!
	0x03C35618 STP X22, X21, [X31 + 0x10]
	0x03C3561C STP X20, X19, [X31 + 0x20]
	0x03C35620 ADRP X23, 0x7B0000
	0x03C35624 LDR X4, [X23 + 0x3D0]
	0x03C35628 MOV W19, W3
	0x03C3562C MOV X20, X2
	0x03C35630 MOV X21, X1
	0x03C35634 MOV X22, X0
	0x03C35638 CBNZ X4, 0x3C35650
	0x03C3563C ADRP X0, 0xFFFFFFFFFCEBC000
	0x03C35640 ADD X0, X0, 0x154
	0x03C35644 BL 0x1C16CB8
	0x03C35648 MOV X4, X0
	0x03C3564C STR X0, [X23 + 0x3D0]
	0x03C35650 MOV X0, X22
	0x03C35654 MOV X1, X21
	0x03C35658 MOV X2, X20
	0x03C3565C MOV W3, W19
	0x03C35660 LDP X20, X19, [X31 + 0x20]
	0x03C35664 LDP X22, X21, [X31 + 0x10]
	0x03C35668 LDP X30, X23, [X31], #0x30
	0x03C3566C BR X4
	0x03C35670 STP X30, X21, [X31 - 0x20]!
	0x03C35674 STP X20, X19, [X31 + 0x10]
	0x03C35678 ADRP X21, 0x7B0000
	0x03C3567C LDR X2, [X21 + 0x370]
	0x03C35680 MOV X19, X1
	0x03C35684 MOV X20, X0
	0x03C35688 CBNZ X2, 0x3C356A0
	0x03C3568C ADRP X0, 0xFFFFFFFFFCEC2000
	0x03C35690 ADD X0, X0, 0x29A
	0x03C35694 BL 0x1C16CB8
	0x03C35698 MOV X2, X0
	0x03C3569C STR X0, [X21 + 0x370]
	0x03C356A0 MOV X0, X20
	0x03C356A4 MOV X1, X19
	0x03C356A8 LDP X20, X19, [X31 + 0x10]
	0x03C356AC LDP X30, X21, [X31], #0x20
	0x03C356B0 BR X2
	0x03C356B4 STP X30, X21, [X31 - 0x20]!
	0x03C356B8 STP X20, X19, [X31 + 0x10]
	0x03C356BC ADRP X21, 0x7B0000
	0x03C356C0 LDR X2, [X21 + 0x370]
	0x03C356C4 MOV X19, X1
	0x03C356C8 MOV X20, X0
	0x03C356CC CBNZ X2, 0x3C356E4
	0x03C356D0 ADRP X0, 0xFFFFFFFFFCEC2000
	0x03C356D4 ADD X0, X0, 0x29A
	0x03C356D8 BL 0x1C16CB8
	0x03C356DC MOV X2, X0
	0x03C356E0 STR X0, [X21 + 0x370]
	0x03C356E4 MOV X0, X20
	0x03C356E8 MOV X1, X19
	0x03C356EC LDP X20, X19, [X31 + 0x10]
	0x03C356F0 LDP X30, X21, [X31], #0x20
	0x03C356F4 BR X2
	0x03C356F8 STR X30, [X31 - 0x20]!
	0x03C356FC STP X20, X19, [X31 + 0x10]
	0x03C35700 ADRP X20, 0x7B0000
	0x03C35704 LDR X1, [X20 + 0x378]
	0x03C35708 MOV X19, X0
	0x03C3570C CBNZ X1, 0x3C35724
	0x03C35710 ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C35714 ADD X0, X0, 0x1EA
	0x03C35718 BL 0x1C16CB8
	0x03C3571C MOV X1, X0
	0x03C35720 STR X0, [X20 + 0x378]
	0x03C35724 MOV X0, X19
	0x03C35728 LDP X20, X19, [X31 + 0x10]
	0x03C3572C LDR X30, [X31], #0x20
	0x03C35730 BR X1
	0x03C35734 STR X30, [X31 - 0x20]!
	0x03C35738 STP X20, X19, [X31 + 0x10]
	0x03C3573C ADRP X20, 0x7B0000
	0x03C35740 LDR X1, [X20 + 0x380]
	0x03C35744 MOV X19, X0
	0x03C35748 CBNZ X1, 0x3C35760
	0x03C3574C ADRP X0, 0xFFFFFFFFFCEE5000
	0x03C35750 ADD X0, X0, 0xD2E
	0x03C35754 BL 0x1C16CB8
	0x03C35758 MOV X1, X0
	0x03C3575C STR X0, [X20 + 0x380]
	0x03C35760 MOV X0, X19
	0x03C35764 LDP X20, X19, [X31 + 0x10]
	0x03C35768 LDR X30, [X31], #0x20
	0x03C3576C BR X1
	0x03C35770 STP X30, X21, [X31 - 0x20]!
	0x03C35774 STP X20, X19, [X31 + 0x10]
	0x03C35778 ADRP X21, 0x7B0000
	0x03C3577C LDR X2, [X21 + 0x388]
	0x03C35780 MOV W19, W1
	0x03C35784 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+336], X29
	003 Move [X31+344], X30
	004 Move [X31+352], X28
	005 Move [X31+360], X27
	006 Move [X31+368], X26
	007 Move [X31+376], X25
	008 Move [X31+384], X24
	009 Move [X31+392], X23
	010 Move [X31+400], X22
	011 Move [X31+408], X21
	012 Move [X31+416], X20
	013 Move [X31+424], X19
	014 Move X24, 0x7B2000
	015 Move X23, 0x52C000
	016 Move X19, X8
	017 Move W8, [X24+794]
	018 Move X23, [X23+1024]
	019 Move X22, X2
	020 Move W21, W1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {172}
	026 Move X0, 0x4E7000
	027 Move X0, [X0+3432]
	028 Call 0x1C17CF4
	029 Move X0, 0x4C0000
	030 Move X0, [X0+2600]
	031 Call 0x1C17CF4
	032 Move X0, 0x52C000
	033 Move X0, [X0+1032]
	034 Call 0x1C17CF4
	035 Move X0, 0x52C000
	036 Move X0, [X0+1040]
	037 Call 0x1C17CF4
	038 Move X0, 0x52C000
	039 Move X0, [X0+1048]
	040 Call 0x1C17CF4
	041 Move X0, 0x52C000
	042 Move X0, [X0+1056]
	043 Call 0x1C17CF4
	044 Move X0, 0x4C0000
	045 Move X0, [X0+3576]
	046 Call 0x1C17CF4
	047 Move X0, 0x52C000
	048 Move X0, [X0+1064]
	049 Call 0x1C17CF4
	050 Move X0, 0x4C1000
	051 Move X0, [X0+88]
	052 Call 0x1C17CF4
	053 Move X0, 0x4C1000
	054 Move X0, [X0+3056]
	055 Call 0x1C17CF4
	056 Move X0, 0x52C000
	057 Move X0, [X0+1072]
	058 Call 0x1C17CF4
	059 Move X0, 0x4E9000
	060 Move X0, [X0+3400]
	061 Call 0x1C17CF4
	062 Move X0, 0x52C000
	063 Move X0, [X0+1080]
	064 Call 0x1C17CF4
	065 Move X0, 0x52C000
	066 Move X0, [X0+1088]
	067 Call 0x1C17CF4
	068 Move X0, 0x4C0000
	069 Move X0, [X0+3760]
	070 Call 0x1C17CF4
	071 Move X0, 0x52C000
	072 Move X0, [X0+1096]
	073 Call 0x1C17CF4
	074 Move X0, 0x4C2000
	075 Move X0, [X0+2504]
	076 Call 0x1C17CF4
	077 Move X0, 0x4C0000
	078 Move X0, [X0+3768]
	079 Call 0x1C17CF4
	080 Move X0, 0x52C000
	081 Move X0, [X0+1104]
	082 Call 0x1C17CF4
	083 Move X0, 0x4F8000
	084 Move X0, [X0+3720]
	085 Call 0x1C17CF4
	086 Move X0, 0x4C0000
	087 Move X0, [X0+3776]
	088 Call 0x1C17CF4
	089 Move X0, 0x4E9000
	090 Move X0, [X0+3440]
	091 Call 0x1C17CF4
	092 Move X0, 0x52C000
	093 Move X0, [X0+1112]
	094 Call 0x1C17CF4
	095 Move X0, 0x52C000
	096 Move X0, [X0+1120]
	097 Call 0x1C17CF4
	098 Move X0, 0x4C1000
	099 Move X0, [X0+3672]
	100 Call 0x1C17CF4
	101 Move X0, 0x4E7000
	102 Move X0, [X0+3464]
	103 Call 0x1C17CF4
	104 Move X0, 0x50D000
	105 Move X0, [X0+2904]
	106 Call 0x1C17CF4
	107 Move X0, 0x526000
	108 Move X0, [X0+3216]
	109 Call 0x1C17CF4
	110 Move X0, 0x52C000
	111 Move X0, [X0+1128]
	112 Call 0x1C17CF4
	113 Move X0, 0x52C000
	114 Move X0, [X0+1136]
	115 Call 0x1C17CF4
	116 Move X0, 0x50D000
	117 Move X0, [X0+3000]
	118 Call 0x1C17CF4
	119 Move X0, 0x4C0000
	120 Move X0, [X0+2760]
	121 Call 0x1C17CF4
	122 Move X0, 0x4C0000
	123 Move X0, [X0+1728]
	124 Call 0x1C17CF4
	125 Move X0, 0x52C000
	126 Move X0, [X0+1144]
	127 Call 0x1C17CF4
	128 Move X0, 0x52C000
	129 Move X0, [X0+1152]
	130 Call 0x1C17CF4
	131 Move X0, 0x52C000
	132 Move X0, [X0+1160]
	133 Call 0x1C17CF4
	134 Move X0, 0x52C000
	135 Move X0, [X0+1168]
	136 Call 0x1C17CF4
	137 Move X0, 0x52C000
	138 Move X0, [X0+1176]
	139 Call 0x1C17CF4
	140 Move X0, 0x52C000
	141 Move X0, [X0+1184]
	142 Call 0x1C17CF4
	143 Move X0, 0x52C000
	144 Move X0, [X0+1024]
	145 Call 0x1C17CF4
	146 Move X0, 0x52C000
	147 Move X0, [X0+1192]
	148 Call 0x1C17CF4
	149 Move X0, 0x4E7000
	150 Move X0, [X0+3480]
	151 Call 0x1C17CF4
	152 Move X0, 0x4E7000
	153 Move X0, [X0+3488]
	154 Call 0x1C17CF4
	155 Move X0, 0x4E7000
	156 Move X0, [X0+3496]
	157 Call 0x1C17CF4
	158 Move X0, 0x52C000
	159 Move X0, [X0+1200]
	160 Call 0x1C17CF4
	161 Move X0, 0x52C000
	162 Move X0, [X0+1208]
	163 Call 0x1C17CF4
	164 Move X0, 0x52C000
	165 Move X0, [X0+1216]
	166 Call 0x1C17CF4
	167 Move X0, 0x4C0000
	168 Move X0, [X0+2440]
	169 Call 0x1C17CF4
	170 Move W8, 1
	171 Move [X24+794], W8
	172 Move X0, [X23]
	173 NotImplemented "Instruction MOVI not yet implemented."
	174 Move [X31+240], V0
	175 Move [X31+248], V0
	176 Move [X31+208], V0
	177 Move [X31+216], V0
	178 Move [X31+176], V0
	179 Move [X31+184], V0
	180 Move [X31+144], V0
	181 Move [X31+152], V0
	182 Call 0x1C17F10
	183 Move X1, X31
	184 Move X23, X0
	185 Call Object..ctor, X0
	186 Compare X23, 0
	187 JumpIfEqual {863}
	188 Move X26, 0x52C000
	189 Move X26, [X26+1048]
	190 Move [X23+16], X22
	191 Move X24, 0x52C000
	192 Move X0, [X26]
	193 Move W8, [X0+224]
	194 Move X24, [X24+1200]
	195 Compare W8, 0
	196 JumpIfNotEqual {199}
	197 Call 0x1C17DFC
	198 Move X0, [X26]
	199 Move X8, [X0+184]
	200 Move X3, [X24]
	201 Add X0, X31, 272
	202 Move W1, W21
	203 Move X22, [X8]
	204 Move X2, X20
	205 Move [X31+272], X31
	206 Move [X31+280], X31
	207 Call ValueTuple`2<Int32Enum, Object>..ctor, X0, X1, X2
	208 Compare X22, 0
	209 JumpIfEqual {863}
	210 Move X8, 0x52C000
	211 Move X8, [X8+1032]
	212 Move X1, [X31+272]
	213 Move X2, [X31+280]
	214 Add X3, X31, 208
	215 Move X0, X22
	216 Move X4, [X8]
	217 Call Dictionary`2<ValueTuple`2<Int32Enum, Object>, EnumData>.TryGetValue, X0, X1, X2
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfEqual {964}
	222 Move [X31+8], X19
	223 Move X8, 0x4C0000
	224 Move X8, [X8+3576]
	225 NotImplemented "Instruction MOVI not yet implemented."
	226 Move [X31+112], V0
	227 Move [X31+120], V0
	228 Move [X31+6], V0
	229 Move X0, [X8]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X0, X20
	235 Move X1, X31
	236 Call Enum.GetUnderlyingType, X0
	237 Move V0, [X31+8]
	238 Move [X31+256], X0
	239 Move [X31+264], X31
	240 Move X28, 0x4C0000
	241 Move X9, 0x4E7000
	242 Move [X31+15], V0
	243 Move V1, [X31+96]
	244 Move V0, [X31+112]
	245 Move X28, [X28+1728]
	246 Move X22, X0
	247 Add X19, X31, 208
	248 Move [X31+208], V1
	249 Move [X31+216], V0
	250 Move X0, [X28]
	251 Move X9, [X9+3432]
	252 Add X25, X19, 56
	253 Move W8, [X0+224]
	254 Move X24, [X9]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X0, X24
	259 Move X1, X31
	260 Call Type.GetTypeFromHandle, X0
	261 Move X1, X0
	262 Move X0, X22
	263 Move X2, X31
	264 Call Type.op_Equality, X0, X1
	265 And W8, W0, 1
	266 NotImplemented "Instruction CSEL not yet implemented."
	267 Compare W8, 0
	268 JumpIfNotEqual {310}
	269 Move X8, 0x4E7000
	270 Move X0, [X28]
	271 Move X22, [X31+256]
	272 Move X8, [X8+3480]
	273 Move W9, [X0+224]
	274 Move X24, [X8]
	275 Compare W9, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 Move X0, X24
	279 Move X1, X31
	280 Call Type.GetTypeFromHandle, X0
	281 Move X1, X0
	282 Move X0, X22
	283 Move X2, X31
	284 Call Type.op_Equality, X0, X1
	285 And W8, W0, 1
	286 NotImplemented "Instruction CSEL not yet implemented."
	287 Compare W8, 0
	288 JumpIfNotEqual {310}
	289 Move X8, 0x4E7000
	290 Move X0, [X28]
	291 Move X22, [X31+256]
	292 Move X8, [X8+3488]
	293 Move W9, [X0+224]
	294 Move X24, [X8]
	295 Compare W9, 0
	296 JumpIfNotEqual {298}
	297 Call 0x1C17DFC
	298 Move X0, X24
	299 Move X1, X31
	300 Call Type.GetTypeFromHandle, X0
	301 Move X1, X0
	302 Move X0, X22
	303 Move X2, X31
	304 Call Type.op_Equality, X0, X1
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {994}
	309 Add X25, X19, 56
	310 Move W8, 1
	311 Move [X25], W8
	312 Compare X20, 0
	313 JumpIfEqual {863}
	314 Move X8, [X20]
	315 Move W1, 24
	316 Move X0, X20
	317 Move X9, [X8+1672]
	318 Move X2, [X8+1680]
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Move X8, 0x50D000
	321 Move X8, [X8+3000]
	322 Move X24, X0
	323 Move X8, [X8]
	324 Move X0, X8
	325 Call 0x1C17F10
	326 Move X8, 0x526000
	327 Move X8, [X8+3216]
	328 Move X22, X0
	329 Move X1, [X8]
	330 Call List`1<Object>..ctor, X0
	331 Compare X24, 0
	332 JumpIfEqual {863}
	333 Move X8, [X24+24]
	334 NotImplemented "Instruction CMP not yet implemented."
	335 And X8, X8, 0
	336 Compare X8, 0
	337 JumpIfEqual {384}
	338 Move X19, 0x50D000
	339 Move X19, [X19+2904]
	340 Move X27, X31
	341 Subtract X28, X8, 1
	342 Add X29, X24, 32
	343 Move X0, [X26]
	344 Move X25, [X29]
	345 Move W8, [X0+224]
	346 Compare W8, 0
	347 JumpIfNotEqual {349}
	348 Call 0x1C17DFC
	349 Move X0, X25
	350 Move W1, W21
	351 Call EnumDataUtility.CheckObsoleteAddition, X0, X1
	352 Move TEMP, X0
	353 And TEMP, TEMP, 1
	354 Compare TEMP, 1
	355 JumpIfNotEqual {380}
	356 Move W8, [X24+24]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Compare X22, 0
	359 JumpIfEqual {863}
	360 Move W10, [X22+28]
	361 Move X1, [X29]
	362 Move X8, [X22+16]
	363 Move X9, [X19]
	364 Add W10, W10, 1
	365 Move [X22+28], W10
	366 Compare X8, 0
	367 JumpIfEqual {863}
	368 NotImplemented "Instruction LDRSW not yet implemented."
	369 Move W11, [X8+24]
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Add W9, W10, 1
	372 Add X8, X8, X10
	373 Move [X22+24], W9
	374 Move [X8+32], X1
	375 Move X8, [X9+32]
	376 Move X0, X22
	377 Move X8, [X8+192]
	378 Move X2, [X8+112]
	379 Call List`1<Object>.AddWithResize, X0, X1
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move W8, [X24+24]
	382 Add X27, X27, 1
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Call 0x1C17F28
	385 Move X8, 0x52C000
	386 Move X8, [X8+1064]
	387 Move X0, X22
	388 Move X1, [X8]
	389 Call Enumerable.Any, X0
	390 Move TEMP, X0
	391 And TEMP, TEMP, 1
	392 Compare TEMP, 1
	393 JumpIfNotEqual {549}
	394 Move X8, 0x52C000
	395 Move X8, [X8+1072]
	396 Move X1, [X8]
	397 Move X0, X22
	398 Call Enumerable.First, X0
	399 Compare X0, 0
	400 JumpIfEqual {1012}
	401 Move X8, [X0]
	402 Move X9, [X8+472]
	403 Move X1, [X8+480]
	404 NotImplemented "Instruction BLR not yet implemented."
	405 Compare X0, 0
	406 JumpIfEqual {1013}
	407 Move X8, [X0]
	408 Move X9, [X8+424]
	409 Move X1, [X8+432]
	410 NotImplemented "Instruction BLR not yet implemented."
	411 Compare X0, 0
	412 JumpIfEqual {1014}
	413 Move X8, [X0]
	414 Move X9, [X8+472]
	415 Move X1, [X8+480]
	416 NotImplemented "Instruction BLR not yet implemented."
	417 Move X1, X31
	418 Call String.IsNullOrEmpty, X0
	419 Move TEMP, X0
	420 And TEMP, TEMP, 1
	421 Compare TEMP, 1
	422 JumpIfEqual {469}
	423 Move X19, 0x52C000
	424 Move X19, [X19+1192]
	425 Move X8, [X19]
	426 Move W9, [X8+224]
	427 Compare W9, 0
	428 JumpIfNotEqual {432}
	429 Move X0, X8
	430 Call 0x1C17DFC
	431 Move X8, [X19]
	432 Move X9, [X8+184]
	433 Move X24, [X9+8]
	434 Compare X24, 0
	435 JumpIfNotEqual {458}
	436 Move W9, [X8+224]
	437 Compare W9, 0
	438 JumpIfNotEqual {442}
	439 Move X0, X8
	440 Call 0x1C17DFC
	441 Move X8, [X19]
	442 Move X9, 0x4E9000
	443 Move X8, [X8+184]
	444 Move X9, [X9+3440]
	445 Move X25, [X8]
	446 Move X0, [X9]
	447 Call 0x1C17F10
	448 Move X8, 0x52C000
	449 Move X8, [X8+1176]
	450 Move X24, X0
	451 Move X2, [X8]
	452 Move X1, X25
	453 Move X3, X31
	454 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	455 Move X8, [X19]
	456 Move X8, [X8+184]
	457 Move [X8+8], X24
	458 Move X8, 0x4E9000
	459 Move X8, [X8+3400]
	460 Move X2, [X8]
	461 Move X0, X22
	462 Move X1, X24
	463 Call Enumerable.OrderBy, X0, X1
	464 Move X8, 0x52C000
	465 Move X8, [X8+1104]
	466 Move X1, [X8]
	467 Call Enumerable.ToList, X0
	468 Move X22, X0
	469 Move X19, 0x4C0000
	470 Move X19, [X19+3776]
	471 Move X0, [X19]
	472 Call 0x1C17F10
	473 Move X8, 0x52C000
	474 Move X8, [X8+1184]
	475 Move X1, X23
	476 Move X3, X31
	477 Move X24, X0
	478 Move X2, [X8]
	479 Call Func`2<Object, Object>..ctor, X0, X1, X2
	480 Move X27, 0x4C0000
	481 Move X27, [X27+3760]
	482 Move X0, X22
	483 Move X1, X24
	484 Move X2, [X27]
	485 Call Enumerable.Select, X0, X1
	486 Move X28, 0x4C0000
	487 Move X28, [X28+3768]
	488 Move X1, [X28]
	489 Call Enumerable.ToArray, X0
	490 Move X8, 0x4C1000
	491 Move X8, [X8+3056]
	492 Move [X31+224], X0
	493 Move X1, [X8]
	494 Call Enumerable.Distinct, X0
	495 Move X8, 0x4C1000
	496 Move X8, [X8+88]
	497 Move X1, [X8]
	498 Call Enumerable.Count, X0
	499 Move X8, [X31+224]
	500 Compare X8, 0
	501 JumpIfEqual {863}
	502 Move W8, [X8+24]
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Move X8, [X20]
	505 Move X0, X20
	506 Move X9, [X8+424]
	507 Move X1, [X8+432]
	508 NotImplemented "Instruction BLR not yet implemented."
	509 Move X8, 0x52C000
	510 Move X8, [X8+1208]
	511 Move X9, 0x52B000
	512 Move X9, [X9+1216]
	513 Move X1, X0
	514 Move X8, [X8]
	515 Move X3, X31
	516 Move X2, [X9]
	517 Move X0, X8
	518 Call String.Concat, X0, X1, X2
	519 Move X8, 0x4BF000
	520 Move X8, [X8+2600]
	521 Move X23, X0
	522 Move X8, [X8]
	523 Move W9, [X8+224]
	524 Compare W9, 0
	525 JumpIfNotEqual {528}
	526 Move X0, X8
	527 Call 0x1C17DFC
	528 Move X0, X23
	529 Move X1, X31
	530 Call Debug.LogWarning, X0
	531 Move X29, 0x52B000
	532 Move X29, [X29+1192]
	533 Move X0, [X29]
	534 Move W8, [X0+224]
	535 Compare W8, 0
	536 JumpIfNotEqual {539}
	537 Call 0x1C17DFC
	538 Move X0, [X29]
	539 Move X8, [X0+184]
	540 Move X23, [X8+16]
	541 Add X8, X31, 208
	542 NotImplemented "Instruction CMP not yet implemented."
	543 NotImplemented "Instruction CSEL not yet implemented."
	544 Compare X23, 0
	545 JumpIfEqual {589}
	546 Add X8, X31, 208
	547 Add X25, X31, 208
	548 Add X19, X8, 32
	549 Move X8, 0x4BF000
	550 Move X8, [X8+2760]
	551 Move W1, 1
	552 Move X0, [X8]
	553 Call 0x1C17D6C
	554 Compare X0, 0
	555 JumpIfEqual {863}
	556 Move W8, [X0+24]
	557 Move X20, X0
	558 Compare W8, 0
	559 JumpIfEqual {384}
	560 Move X8, 0x4BF000
	561 Move X8, [X8+2440]
	562 Move W1, W31
	563 Move X8, [X8]
	564 Move [X20+32], X8
	565 Move X8, 0x52B000
	566 Move X8, [X8+1056]
	567 Move X0, [X8]
	568 Call 0x1C17D6C
	569 Move X8, 0x4C0000
	570 Move X8, [X8+3672]
	571 Move X21, X0
	572 Move W1, 1
	573 Move W19, 1
	574 Move X8, [X8]
	575 Move X0, X8
	576 Call 0x1C17D6C
	577 Move [X31+208], X21
	578 Move [X31+216], X0
	579 Move [X31+224], X20
	580 Move [X31+232], X20
	581 Move [X31+240], X20
	582 Move [X31+248], W19
	583 Move [X31+265], W19
	584 Move V0, [X31+208]
	585 Move V1, [X31+224]
	586 Move V2, [X31+240]
	587 Move V3, [X31+256]
	588 Move X19, [X31+8]
	589 Move W9, [X0+224]
	590 Move X23, X19
	591 Add X25, X31, 208
	592 Add X19, X8, 32
	593 Compare W9, 0
	594 JumpIfNotEqual {597}
	595 Call 0x1C17DFC
	596 Move X0, [X29]
	597 Move X8, [X0+184]
	598 Move X0, [X23]
	599 Move X24, [X8]
	600 Call 0x1C17F10
	601 Move X8, 0x52B000
	602 Move X8, [X8+1144]
	603 Move X1, X24
	604 Move X3, X31
	605 Move X23, X0
	606 Move X2, [X8]
	607 Call Func`2<Object, Object>..ctor, X0, X1, X2
	608 Move X8, [X29]
	609 Move X8, [X8+184]
	610 Move [X8+16], X23
	611 Move X2, [X27]
	612 Move X0, X22
	613 Move X1, X23
	614 Call Enumerable.Select, X0, X1
	615 Move X1, [X28]
	616 Call Enumerable.ToArray, X0
	617 Move [X19], X0
	618 Move X0, [X29]
	619 Move W8, [X0+224]
	620 Compare W8, 0
	621 JumpIfNotEqual {624}
	622 Call 0x1C17DFC
	623 Move X0, [X29]
	624 Move X28, 0x4BF000
	625 Move X28, [X28+1728]
	626 Move X8, [X0+184]
	627 Move X23, [X8+24]
	628 Compare X23, 0
	629 JumpIfNotEqual {651}
	630 Move W8, [X0+224]
	631 Compare W8, 0
	632 JumpIfNotEqual {635}
	633 Call 0x1C17DFC
	634 Move X0, [X29]
	635 Move X9, 0x52B000
	636 Move X8, [X0+184]
	637 Move X9, [X9+1120]
	638 Move X24, [X8]
	639 Move X0, [X9]
	640 Call 0x1C17F10
	641 Move X8, 0x52B000
	642 Move X8, [X8+1152]
	643 Move X1, X24
	644 Move X3, X31
	645 Move X23, X0
	646 Move X2, [X8]
	647 Call Func`2<Object, Object>..ctor, X0, X1, X2
	648 Move X8, [X29]
	649 Move X8, [X8+184]
	650 Move [X8+24], X23
	651 Move X8, 0x52B000
	652 Move X8, [X8+1088]
	653 Move X0, X22
	654 Move X1, X23
	655 Move X2, [X8]
	656 Call Enumerable.Select, X0, X1
	657 Move X8, 0x52B000
	658 Move X8, [X8+1096]
	659 Move X1, [X8]
	660 Call Enumerable.ToArray, X0
	661 Move X23, X0
	662 Move X0, [X29]
	663 Move W24, [X31+264]
	664 Move [X31+208], X23
	665 Add X9, X31, 208
	666 Move W8, [X0+224]
	667 And W31, W24, 1
	668 NotImplemented "Instruction CSEL not yet implemented."
	669 Compare W8, 0
	670 JumpIfNotEqual {673}
	671 Call 0x1C17DFC
	672 Move X0, [X29]
	673 Move X8, [X0+184]
	674 Move TEMP, X24
	675 And TEMP, TEMP, 1
	676 Compare TEMP, 1
	677 JumpIfEqual {703}
	678 Move X24, [X8+40]
	679 Add X27, X25, 8
	680 Compare X24, 0
	681 JumpIfNotEqual {728}
	682 Move W8, [X0+224]
	683 Compare W8, 0
	684 JumpIfNotEqual {687}
	685 Call 0x1C17DFC
	686 Move X0, [X29]
	687 Move X9, 0x52B000
	688 Move X8, [X0+184]
	689 Move X9, [X9+1112]
	690 Move X25, [X8]
	691 Move X0, [X9]
	692 Call 0x1C17F10
	693 Move X8, 0x52B000
	694 Move X8, [X8+1168]
	695 Move X1, X25
	696 Move X3, X31
	697 Move X24, X0
	698 Move X2, [X8]
	699 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	700 Move X8, [X29]
	701 Move X8, [X8+184]
	702 Move [X8+40], X24
	703 Move X24, [X8+32]
	704 Or X27, X19, 15
	705 Compare X24, 0
	706 JumpIfNotEqual {728}
	707 Move W8, [X0+224]
	708 Compare W8, 0
	709 JumpIfNotEqual {712}
	710 Call 0x1C17DFC
	711 Move X0, [X29]
	712 Move X9, 0x52B000
	713 Move X8, [X0+184]
	714 Move X9, [X9+1112]
	715 Move X25, [X8]
	716 Move X0, [X9]
	717 Call 0x1C17F10
	718 Move X8, 0x52B000
	719 Move X8, [X8+1160]
	720 Move X1, X25
	721 Move X3, X31
	722 Move X24, X0
	723 Move X2, [X8]
	724 Call Func`2<Object, Int32>..ctor, X0, X1, X2
	725 Move X8, [X29]
	726 Move X8, [X8+184]
	727 Move [X8+32], X24
	728 Move X8, 0x52B000
	729 Move X8, [X8+1080]
	730 Move X0, X23
	731 Move X1, X24
	732 Move X2, [X8]
	733 Call Enumerable.Select, X0, X1
	734 Move X8, 0x4C1000
	735 Move X8, [X8+2504]
	736 Move X1, [X8]
	737 Call Enumerable.ToArray, X0
	738 Move [X27], X0
	739 Move X8, [X31+208]
	740 Compare X8, 0
	741 JumpIfEqual {863}
	742 Move X9, 0x4BF000
	743 Move X9, [X9+2760]
	744 Move W1, [X8+24]
	745 Move X0, [X9]
	746 Call 0x1C17D6C
	747 Move [X31+232], X0
	748 Compare X22, 0
	749 JumpIfEqual {863}
	750 Move W8, [X22+24]
	751 NotImplemented "Instruction CMP not yet implemented."
	752 Move X19, 0x52B000
	753 Move X19, [X19+1136]
	754 Move X23, X31
	755 Move X2, [X19]
	756 Move X24, [X31+232]
	757 Move X0, X22
	758 Move W1, W23
	759 Call List`1<Object>.get_Item, X0, X1
	760 Compare X0, 0
	761 JumpIfEqual {863}
	762 Move X8, [X0]
	763 Move X9, [X8+424]
	764 Move X1, [X8+432]
	765 NotImplemented "Instruction BLR not yet implemented."
	766 Compare X24, 0
	767 JumpIfEqual {863}
	768 Move W8, [X24+24]
	769 NotImplemented "Instruction CMP not yet implemented."
	770 Add X8, X24, X23
	771 Move [X8+32], X0
	772 NotImplemented "Instruction LDRSW not yet implemented."
	773 Add X23, X23, 1
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Move X8, 0x4E6000
	776 Move X0, [X28]
	777 Move X22, [X31+256]
	778 Move X8, [X8+3480]
	779 Move W9, [X0+224]
	780 Move X23, [X8]
	781 Compare W9, 0
	782 JumpIfNotEqual {784}
	783 Call 0x1C17DFC
	784 Move X0, X23
	785 Move X1, X31
	786 Call Type.GetTypeFromHandle, X0
	787 Move X1, X0
	788 Move X0, X22
	789 Move X2, X31
	790 Call Type.op_Equality, X0, X1
	791 Move X24, 0x52B000
	792 Move X19, [X31+8]
	793 Move X24, [X24+1200]
	794 Move TEMP, X0
	795 And TEMP, TEMP, 1
	796 Compare TEMP, 1
	797 JumpIfNotEqual {821}
	798 Move X10, [X31+216]
	799 Compare X10, 0
	800 JumpIfEqual {863}
	801 Move X9, [X10+24]
	802 NotImplemented "Instruction CMP not yet implemented."
	803 And X11, X9, 0
	804 Move X8, X31
	805 Move W9, 0xFFFF
	806 Subtract X11, X11, 1
	807 Move TEMP, 0
	808 Not TEMP
	809 Move W12, TEMP
	810 Move W13, [X10+24]
	811 NotImplemented "Instruction CMP not yet implemented."
	812 Add X10, X10, X8
	813 Move W13, [X10+32]
	814 NotImplemented "Instruction CMP not yet implemented."
	815 Move [X10+32], W12
	816 NotImplemented "Instruction CMP not yet implemented."
	817 Move X10, [X31+216]
	818 Add X8, X8, 1
	819 Compare X10, 0
	820 JumpIfNotEqual {810}
	821 Move X0, [X28]
	822 Move X9, 0x4E6000
	823 Move X22, [X31+256]
	824 Move W8, [X0+224]
	825 Move X9, [X9+3432]
	826 Move X23, [X9]
	827 Compare W8, 0
	828 JumpIfNotEqual {830}
	829 Call 0x1C17DFC
	830 Move X0, X23
	831 Move X1, X31
	832 Call Type.GetTypeFromHandle, X0
	833 Move X1, X0
	834 Move X0, X22
	835 Move X2, X31
	836 Call Type.op_Equality, X0, X1
	837 Move TEMP, X0
	838 And TEMP, TEMP, 1
	839 Compare TEMP, 1
	840 JumpIfNotEqual {864}
	841 Move X11, [X31+216]
	842 Compare X11, 0
	843 JumpIfEqual {863}
	844 Move X9, [X11+24]
	845 NotImplemented "Instruction CMP not yet implemented."
	846 And X9, X9, 0
	847 Move X8, X31
	848 Subtract X9, X9, 1
	849 Move TEMP, 0
	850 Not TEMP
	851 Move W10, TEMP
	852 Move W12, [X11+24]
	853 NotImplemented "Instruction CMP not yet implemented."
	854 Add X11, X11, X8
	855 Move W12, [X11+32]
	856 NotImplemented "Instruction CMP not yet implemented."
	857 Move [X11+32], W10
	858 NotImplemented "Instruction CMP not yet implemented."
	859 Move X11, [X31+216]
	860 Add X8, X8, 1
	861 Compare X11, 0
	862 JumpIfNotEqual {852}
	863 Call 0x1C17F20
	864 Move X8, 0x4F7000
	865 Move X0, [X28]
	866 Move X8, [X8+3720]
	867 Move W9, [X0+224]
	868 Move X22, [X8]
	869 Compare W9, 0
	870 JumpIfNotEqual {872}
	871 Call 0x1C17DFC
	872 Move X0, X22
	873 Move X1, X31
	874 Call Type.GetTypeFromHandle, X0
	875 Move X8, [X20]
	876 Move X1, X0
	877 Move X0, X20
	878 Move W2, W31
	879 Move X9, [X8+488]
	880 Move X3, [X8+496]
	881 NotImplemented "Instruction BLR not yet implemented."
	882 Move X8, 0x4E6000
	883 Move X22, [X31+256]
	884 Move X8, [X8+3464]
	885 And W9, W0, 1
	886 Move X1, X31
	887 Move [X31+248], W9
	888 Move X8, [X8]
	889 Move X0, X8
	890 Call Type.GetTypeFromHandle, X0
	891 Move X1, X0
	892 Move X0, X22
	893 Move X2, X31
	894 Call Type.op_Inequality, X0, X1
	895 Move W8, W0
	896 Move W0, W31
	897 Move TEMP, X8
	898 And TEMP, TEMP, 1
	899 Compare TEMP, 1
	900 JumpIfNotEqual {917}
	901 Move X8, 0x4E6000
	902 Move X0, [X28]
	903 Move X22, [X31+256]
	904 Move X8, [X8+3496]
	905 Move W9, [X0+224]
	906 Move X23, [X8]
	907 Compare W9, 0
	908 JumpIfNotEqual {910}
	909 Call 0x1C17DFC
	910 Move X0, X23
	911 Move X1, X31
	912 Call Type.GetTypeFromHandle, X0
	913 Move X1, X0
	914 Move X0, X22
	915 Move X2, X31
	916 Call Type.op_Inequality, X0, X1
	917 Move X8, [X26]
	918 And W9, W0, 1
	919 Move [X31+265], W9
	920 Move W9, [X8+224]
	921 Compare W9, 0
	922 JumpIfNotEqual {925}
	923 Move X0, X8
	924 Call 0x1C17DFC
	925 Add X1, X31, 208
	926 Move X0, X20
	927 Call EnumDataUtility.HandleInspectorOrderAttribute, X0, X1
	928 Move X8, [X26]
	929 Move X3, [X24]
	930 Add X0, X31, 80
	931 Move W1, W21
	932 Move X8, [X8+184]
	933 Move X2, X20
	934 Move X22, [X8]
	935 Move [X31+80], X31
	936 Move [X31+88], X31
	937 Call ValueTuple`2<Int32Enum, Object>..ctor, X0, X1, X2
	938 Move V0, [X31+208]
	939 Move V1, [X31+224]
	940 Move V2, [X31+240]
	941 Move V3, [X31+256]
	942 Move [X31+16], V0
	943 Move [X31+24], V1
	944 Move [X31+48], V2
	945 Move [X31+56], V3
	946 Compare X22, 0
	947 JumpIfEqual {863}
	948 Move X8, 0x52B000
	949 Move X1, [X31+80]
	950 Move X2, [X31+88]
	951 Move X8, [X8+1040]
	952 Move V0, [X31+16]
	953 Move V1, [X31+32]
	954 Move V2, [X31+48]
	955 Move V3, [X31+64]
	956 Add X3, X31, 272
	957 Move X4, [X8]
	958 Move X0, X22
	959 Move [X31+272], V0
	960 Move [X31+280], V1
	961 Move [X31+304], V2
	962 Move [X31+312], V3
	963 Call Dictionary`2<ValueTuple`2<Int32Enum, Object>, EnumData>.set_Item, X0, X1, X2
	964 Move V0, [X31+208]
	965 Move V1, [X31+224]
	966 Move V2, [X31+240]
	967 Move V3, [X31+256]
	968 Move [X31+144], V0
	969 Move [X31+152], V1
	970 Move [X31+176], V2
	971 Move [X31+184], V3
	972 Move V1, [X31+176]
	973 Move V0, [X31+192]
	974 Move V3, [X31+144]
	975 Move V2, [X31+160]
	976 Move X22, [X31+400]
	977 Move X21, [X31+408]
	978 Move X24, [X31+384]
	979 Move X23, [X31+392]
	980 Move [X19+32], V1
	981 Move [X19+40], V0
	982 Move [X19], V3
	983 Move [X19+8], V2
	984 Move X20, [X31+416]
	985 Move X19, [X31+424]
	986 Move X26, [X31+368]
	987 Move X25, [X31+376]
	988 Move X28, [X31+352]
	989 Move X27, [X31+360]
	990 Move X29, [X31+336]
	991 Move X30, [X31+344]
	992 Add X31, X31, 432
	993 Return X0
	994 Move X8, 0x4E6000
	995 Move X0, [X28]
	996 Move X22, [X31+256]
	997 Move X8, [X8+3496]
	998 Add X25, X27, 56
	999 Move W9, [X0+224]
	1000 Move X24, [X8]
	1001 Compare W9, 0
	1002 JumpIfNotEqual {1004}
	1003 Call 0x1C17DFC
	1004 Move X0, X24
	1005 Move X1, X31
	1006 Call Type.GetTypeFromHandle, X0
	1007 Move X1, X0
	1008 Move X0, X22
	1009 Move X2, X31
	1010 Call Type.op_Equality, X0, X1
	1011 And W8, W0, 1
	1012 Call 0x1C17F20
	1013 Call 0x1C17F20
	1014 Call 0x1C17F20
	1015 Move X24, X0
	1016 NotImplemented "Instruction CMP not yet implemented."
	1017 Move X0, X24
	1018 Call 0x3EB2AD0
	1019 Move X24, X0
	1020 Move X0, 0x4C5000
	1021 Move X0, [X0+3264]
	1022 Call 0x1C17D08
	1023 Move X8, [X24]
	1024 Move X1, [X8]
	1025 Call 0x1C18270
	1026 Move TEMP, X0
	1027 And TEMP, TEMP, 1
	1028 Compare TEMP, 1
	1029 JumpIfNotEqual {1031}
	1030 Call 0x3EB2AE0
	1031 Move W0, 8
	1032 Call 0x3EB2AF0
	1033 Move X8, [X24]
	1034 Move [X0], X8
	1035 Move X1, 0x280000
	1036 Add X1, X1, 3672
	1037 Move X2, X31
	1038 Call 0x3EB2B00
	1039 Move X24, X0
	1040 Call 0x3EB2AE0
	1041 Move X0, X24
	1042 Call 0x1D2D690
	1043 Call 0x1991590

Method: System.Void HandleInspectorOrderAttribute(System.Type enumType, ref UnityEngine.EnumData enumData)

Disassembly:
	0x03C358B0 BR X2
	0x03C358B4 STP X30, X21, [X31 - 0x20]!
	0x03C358B8 STP X20, X19, [X31 + 0x10]
	0x03C358BC ADRP X21, 0x7B0000
	0x03C358C0 LDR X2, [X21 + 0x3B8]
	0x03C358C4 MOV X19, X1
	0x03C358C8 MOV X20, X0
	0x03C358CC CBNZ X2, 0x3C358E4
	0x03C358D0 ADRP X0, 0xFFFFFFFFFCEF7000
	0x03C358D4 ADD X0, X0, 0x9C2
	0x03C358D8 BL 0x1C16CB8
	0x03C358DC MOV X2, X0
	0x03C358E0 STR X0, [X21 + 0x3B8]
	0x03C358E4 MOV X0, X20
	0x03C358E8 MOV X1, X19
	0x03C358EC LDP X20, X19, [X31 + 0x10]
	0x03C358F0 LDP X30, X21, [X31], #0x20
	0x03C358F4 BR X2
	0x03C358F8 STR X30, [X31 - 0x20]!
	0x03C358FC STP X20, X19, [X31 + 0x10]
	0x03C35900 ADRP X20, 0x7B0000
	0x03C35904 LDR X1, [X20 + 0x3C8]
	0x03C35908 MOV X19, X0
	0x03C3590C CBNZ X1, 0x3C35924
	0x03C35910 ADRP X0, 0xFFFFFFFFFCEF3000
	0x03C35914 ADD X0, X0, 0x909
	0x03C35918 BL 0x1C16CB8
	0x03C3591C MOV X1, X0
	0x03C35920 STR X0, [X20 + 0x3C8]
	0x03C35924 MOV X0, X19
	0x03C35928 LDP X20, X19, [X31 + 0x10]
	0x03C3592C LDR X30, [X31], #0x20
	0x03C35930 BR X1
	0x03C35934 STR X30, [X31 - 0x30]!
	0x03C35938 STP X22, X21, [X31 + 0x10]
	0x03C3593C STP X20, X19, [X31 + 0x20]
	0x03C35940 ADRP X21, 0x7B0000
	0x03C35944 ADRP X22, 0x4BE000
	0x03C35948 LDRB W8, [X21 + 0x3D8]
	0x03C3594C LDR X22, [X22 + 0x598]
	0x03C35950 MOV X19, X1
	0x03C35954 MOV X20, X0
	0x03C35958 TBNZ X8, 0x0, 0x3C35970
	0x03C3595C ADRP X0, 0x4BE000
	0x03C35960 LDR X0, [X0 + 0x598]
	0x03C35964 BL 0x1C16CF4
	0x03C35968 MOVZ W8, 0x1
	0x03C3596C STRB W8, [X21 + 0x3D8]
	0x03C35970 LDR X0, [X22]
	0x03C35974 LDR W8, [X0 + 0xE0]
	0x03C35978 CBNZ W8, 0x3C35980
	0x03C3597C BL 0x1C16DFC
	0x03C35980 MOV X0, X20
	0x03C35984 MOV X1, X31
	0x03C35988 BL 0x33BDD8C
	0x03C3598C ADRP X21, 0x7B0000
	0x03C35990 LDR X2, [X21 + 0x3E0]
	0x03C35994 CBNZ X2, 0x3C359AC
	0x03C35998 ADRP X0, 0xFFFFFFFFFCECE000
	0x03C3599C ADD X0, X0, 0xB3
	0x03C359A0 BL 0x1C16CB8
	0x03C359A4 MOV X2, X0
	0x03C359A8 STR X0, [X21 + 0x3E0]
	0x03C359AC MOV X0, X20
	0x03C359B0 MOV X1, X19
	0x03C359B4 LDP X20, X19, [X31 + 0x20]
	0x03C359B8 LDP X22, X21, [X31 + 0x10]
	0x03C359BC LDR X30, [X31], #0x30
	0x03C359C0 BR X2
	0x03C359C4 STP X30, X21, [X31 - 0x20]!
	0x03C359C8 STP X20, X19, [X31 + 0x10]
	0x03C359CC ADRP X21, 0x7B0000
	0x03C359D0 LDR X2, [X21 + 0x3E0]
	0x03C359D4 MOV X19, X1
	0x03C359D8 MOV X20, X0
	0x03C359DC CBNZ X2, 0x3C359F4
	0x03C359E0 ADRP X0, 0xFFFFFFFFFCECE000
	0x03C359E4 ADD X0, X0, 0xB3
	0x03C359E8 BL 0x1C16CB8
	0x03C359EC MOV X2, X0
	0x03C359F0 STR X0, [X21 + 0x3E0]
	0x03C359F4 MOV X0, X20
	0x03C359F8 MOV X1, X19
	0x03C359FC LDP X20, X19, [X31 + 0x10]
	0x03C35A00 LDP X30, X21, [X31], #0x20
	0x03C35A04 BR X2
	0x03C35A08 STP X30, X21, [X31 - 0x20]!
	0x03C35A0C STP X20, X19, [X31 + 0x10]
	0x03C35A10 ADRP X20, 0x7B0000
	0x03C35A14 ADRP X21, 0x4BE000
	0x03C35A18 LDRB W8, [X20 + 0x3D9]
	0x03C35A1C LDR X21, [X21 + 0x598]
	0x03C35A20 MOV X19, X0
	0x03C35A24 TBNZ X8, 0x0, 0x3C35A3C
	0x03C35A28 ADRP X0, 0x4BE000
	0x03C35A2C LDR X0, [X0 + 0x598]
	0x03C35A30 BL 0x1C16CF4
	0x03C35A34 MOVZ W8, 0x1
	0x03C35A38 STRB W8, [X20 + 0x3D9]
	0x03C35A3C LDR X0, [X21]
	0x03C35A40 LDR W8, [X0 + 0xE0]
	0x03C35A44 CBNZ W8, 0x3C35A4C
	0x03C35A48 BL 0x1C16DFC
	0x03C35A4C MOV X0, X19
	0x03C35A50 MOV X1, X31
	0x03C35A54 BL 0x33BDD8C
	0x03C35A58 ADRP X20, 0x7B0000
	0x03C35A5C LDR X2, [X20 + 0x3E0]
	0x03C35A60 CBNZ X2, 0x3C35A78
	0x03C35A64 ADRP X0, 0xFFFFFFFFFCECE000
	0x03C35A68 ADD X0, X0, 0xB3
	0x03C35A6C BL 0x1C16CB8
	0x03C35A70 MOV X2, X0
	0x03C35A74 STR X0, [X20 + 0x3E0]
	0x03C35A78 MOV X0, X19
	0x03C35A7C LDP X20, X19, [X31 + 0x10]
	0x03C35A80 MOV X1, X31
	0x03C35A84 LDP X30, X21, [X31], #0x20
	0x03C35A88 BR X2
	0x03C35A8C STP X30, X25, [X31 - 0x40]!
	0x03C35A90 STP X24, X23, [X31 + 0x10]
	0x03C35A94 STP X22, X21, [X31 + 0x20]
	0x03C35A98 STP X20, X19, [X31 + 0x30]
	0x03C35A9C ADRP X22, 0x7B0000
	0x03C35AA0 ADRP X23, 0x4BE000
	0x03C35AA4 LDRB W8, [X22 + 0x3DA]
	0x03C35AA8 LDR X23, [X23 + 0x598]
	0x03C35AAC MOV X19, X2
	0x03C35AB0 MOV X21, X1
	0x03C35AB4 MOV X20, X0
	0x03C35AB8 TBNZ X8, 0x0, 0x3C35AD0
	0x03C35ABC ADRP X0, 0x4BE000
	0x03C35AC0 LDR X0, [X0 + 0x598]
	0x03C35AC4 BL 0x1C16CF4
	0x03C35AC8 MOVZ W8, 0x1
	0x03C35ACC STRB W8, [X22 + 0x3DA]
	0x03C35AD0 LDR X0, [X23]
	0x03C35AD4 LDR W8, [X0 + 0xE0]
	0x03C35AD8 CBNZ W8, 0x3C35AE0
	0x03C35ADC BL 0x1C16DFC
	0x03C35AE0 MOV X0, X20
	0x03C35AE4 MOV X1, X31
	0x03C35AE8 BL 0x33BDD8C
	0x03C35AEC ADRP X22, 0x7B0000
	0x03C35AF0 LDR X8, [X22 + 0x3E0]
	0x03C35AF4 CBNZ X8, 0x3C35B0C
	0x03C35AF8 ADRP X0, 0xFFFFFFFFFCECE000
	0x03C35AFC ADD X0, X0, 0xB3
	0x03C35B00 BL 0x1C16CB8
	0x03C35B04 MOV X8, X0
	0x03C35B08 STR X0, [X22 + 0x3E0]
	0x03C35B0C MOV X0, X20
	0x03C35B10 MOV X1, X21
	0x03C35B14 BLR X8
	0x03C35B18 CBZ X19, 0x3C35B98
	0x03C35B1C LDR X8, [X19 + 0x18]
	0x03C35B20 CMP W8, 0x1
	0x03C35B24 B.LT 0x3C35B80
	0x03C35B28 ADRP X21, 0xFFFFFFFFFCEC2000
	0x03C35B2C MOV X23, X31
	0x03C35B30 AND X8, X8, 0x0
	0x03C35B34 ADD X24, X19, 0x20
	0x03C35B38 ADRP X25, 0x7B0000
	0x03C35B3C ADD X21, X21, 0x29A
	0x03C35B40 CMP X23, W8, UXTW
	0x03C35B44 B.CS 0x3C35B94
	0x03C35B48 LDR X8, [X25 + 0x370]
	0x03C35B4C LDR X22, [X24, X23, LSL #3]
	0x03C35B50 CBNZ X8, 0x3C35B64
	0x03C35B54 MOV X0, X21
	0x03C35B58 BL 0x1C16CB8
	0x03C35B5C MOV X8, X0
	0x03C35B60 STR X0, [X25 + 0x370]
	0x03C35B64 MOV X0, X20
	0x03C35B68 MOV X1, X22
	0x03C35B6C BLR X8
	0x03C35B70 LDR W8, [X19 + 0x18]
	0x03C35B74 ADD X23, X23, 0x1
	0x03C35B78 CMP X23, W8, SXTW
	0x03C35B7C B.LT 0x3C35B40
	0x03C35B80 LDP X20, X19, [X31 + 0x30]
	0x03C35B84 LDP X22, X21, [X31 + 0x20]
	0x03C35B88 LDP X24, X23, [X31 + 0x10]
	0x03C35B8C LDP X30, X25, [X31], #0x40
	0x03C35B90 RET
	0x03C35B94 BL 0x1C16F28
	0x03C35B98 BL 0x1C16F20
	0x03C35B9C STR X30, [X31 - 0x20]!
	0x03C35BA0 STP X20, X19, [X31 + 0x10]
	0x03C35BA4 ADRP X20, 0x7B0000
	0x03C35BA8 LDR X1, [X20 + 0x3E8]
	0x03C35BAC MOV X19, X0
	0x03C35BB0 CBNZ X1, 0x3C35BC8
	0x03C35BB4 ADRP X0, 0xFFFFFFFFFCEC4000
	0x03C35BB8 ADD X0, X0, 0x4FA
	0x03C35BBC BL 0x1C16CB8
	0x03C35BC0 MOV X1, X0
	0x03C35BC4 STR X0, [X20 + 0x3E8]
	0x03C35BC8 MOV X0, X19
	0x03C35BCC LDP X20, X19, [X31 + 0x10]
	0x03C35BD0 LDR X30, [X31], #0x20
	0x03C35BD4 BR X1
	0x03C35BD8 STR X30, [X31 - 0x20]!
	0x03C35BDC STP X20, X19, [X31 + 0x10]
	0x03C35BE0 ADRP X20, 0x7B0000
	0x03C35BE4 LDR X8, [X20 + 0x3F8]
	0x03C35BE8 MOV X19, X0
	0x03C35BEC STR W31, [X31 + 0x8]
	0x03C35BF0 CBNZ X8, 0x3C35C08
	0x03C35BF4 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C35BF8 ADD X0, X0, 0x107
	0x03C35BFC BL 0x1C16CB8
	0x03C35C00 MOV X8, X0
	0x03C35C04 STR X0, [X20 + 0x3F8]
	0x03C35C08 ADD X1, X31, 0x8
	0x03C35C0C MOV X0, X19
	0x03C35C10 BLR X8
	0x03C35C14 LDR W0, [X31 + 0x8]
	0x03C35C18 LDP X20, X19, [X31 + 0x10]
	0x03C35C1C LDR X30, [X31], #0x20
	0x03C35C20 RET
	0x03C35C24 STP X30, X21, [X31 - 0x20]!
	0x03C35C28 STP X20, X19, [X31 + 0x10]
	0x03C35C2C ADRP X21, 0x7B0000
	0x03C35C30 LDR X2, [X21 + 0x3F8]
	0x03C35C34 MOV X19, X1
	0x03C35C38 MOV X20, X0
	0x03C35C3C CBNZ X2, 0x3C35C54
	0x03C35C40 ADRP X0, 0xFFFFFFFFFCEDC000
	0x03C35C44 ADD X0, X0, 0x107
	0x03C35C48 BL 0x1C16CB8
	0x03C35C4C MOV X2, X0
	0x03C35C50 STR X0, [X21 + 0x3F8]
	0x03C35C54 MOV X0, X20
	0x03C35C58 MOV X1, X19
	0x03C35C5C LDP X20, X19, [X31 + 0x10]
	0x03C35C60 LDP X30, X21, [X31], #0x20
	0x03C35C64 BR X2
	0x03C35C68 STR X30, [X31 - 0x20]!
	0x03C35C6C STP X20, X19, [X31 + 0x10]
	0x03C35C70 ADRP X20, 0x7B0000
	0x03C35C74 LDR X1, [X20 + 0x3F0]
	0x03C35C78 MOV X19, X0
	0x03C35C7C CBNZ X1, 0x3C35C94
	0x03C35C80 ADRP X0, 0xFFFFFFFFFCED6000
	0x03C35C84 ADD X0, X0, 0x4B6
	0x03C35C88 BL 0x1C16CB8
	0x03C35C8C MOV X1, X0
	0x03C35C90 STR X0, [X20 + 0x3F0]
	0x03C35C94 MOV X0, X19
	0x03C35C98 LDP X20, X19, [X31 + 0x10]
	0x03C35C9C LDR X30, [X31], #0x20
	0x03C35CA0 BR X1
	0x03C35CA4 RET
	0x03C35CA8 LDR W0, [X0 + 0x14]
	0x03C35CAC RET
	0x03C35CB0 LDR W0, [X0 + 0x18]
	0x03C35CB4 RET
	0x03C35CB8 RET
	0x03C35CBC MOV W0, W0
	0x03C35CC0 RET
	0x03C35CC4 LDR W0, [X0]
	0x03C35CC8 RET
	0x03C35CCC STR X30, [X31 - 0x20]!
	0x03C35CD0 STP X20, X19, [X31 + 0x10]
	0x03C35CD4 ADRP X20, 0x7B0000
	0x03C35CD8 LDR X1, [X20 + 0x400]
	0x03C35CDC MOV X19, X0
	0x03C35CE0 CBNZ X1, 0x3C35CF8
	0x03C35CE4 ADRP X0, 0xFFFFFFFFFCEEF000
	0x03C35CE8 ADD X0, X0, 0xD70
	0x03C35CEC BL 0x1C16CB8
	0x03C35CF0 MOV X1, X0
	0x03C35CF4 STR X0, [X20 + 0x400]
	0x03C35CF8 MOV X0, X19
	0x03C35CFC LDP X20, X19, [X31 + 0x10]
	0x03C35D00 LDR X30, [X31], #0x20
	0x03C35D04 BR X1
	0x03C35D08 STR X30, [X31 - 0x20]!
	0x03C35D0C STP X20, X19, [X31 + 0x10]
	0x03C35D10 CBZ X0, 0x3C35D48
	0x03C35D14 LDR X8, [X0]
	0x03C35D18 MOV X19, X0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x7B1000
	014 Move X21, 0x52B000
	015 Move X22, 0x4BF000
	016 Move W8, [X23+795]
	017 Move X21, [X21+1232]
	018 Move X22, [X22+1728]
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {57}
	025 Move X0, 0x519000
	026 Move X0, [X0+3496]
	027 Call 0x1C17CF4
	028 Move X0, 0x52B000
	029 Move X0, [X0+1240]
	030 Call 0x1C17CF4
	031 Move X0, 0x52B000
	032 Move X0, [X0+1248]
	033 Call 0x1C17CF4
	034 Move X0, 0x52B000
	035 Move X0, [X0+1056]
	036 Call 0x1C17CF4
	037 Move X0, 0x52B000
	038 Move X0, [X0+1232]
	039 Call 0x1C17CF4
	040 Move X0, 0x52B000
	041 Move X0, [X0+1256]
	042 Call 0x1C17CF4
	043 Move X0, 0x4C0000
	044 Move X0, [X0+3672]
	045 Call 0x1C17CF4
	046 Move X0, 0x4CC000
	047 Move X0, [X0+752]
	048 Call 0x1C17CF4
	049 Move X0, 0x4BF000
	050 Move X0, [X0+2760]
	051 Call 0x1C17CF4
	052 Move X0, 0x4BF000
	053 Move X0, [X0+1728]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X23+795], W8
	057 Move X0, [X22]
	058 Move X21, [X21]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X31
	065 Call Type.GetTypeFromHandle, X0
	066 Move X1, X0
	067 Move X0, X20
	068 Move X2, X31
	069 Call Attribute.GetCustomAttribute, X0, X1
	070 Compare X0, 0
	071 JumpIfEqual {285}
	072 Move X8, 0x52B000
	073 Move X8, [X8+1256]
	074 Move X9, [X0]
	075 Move X8, [X8]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 Compare X24, 0
	079 JumpIfEqual {285}
	080 Move X8, [X19+16]
	081 Compare X8, 0
	082 JumpIfEqual {299}
	083 Move X23, 0x4C0000
	084 Move X20, [X8+24]
	085 Move X23, [X23+3672]
	086 Move W1, W20
	087 Move X0, [X23]
	088 Call 0x1C17D6C
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X21, X0
	091 Compare X21, 0
	092 JumpIfEqual {299}
	093 Move W9, [X21+24]
	094 Move X8, X31
	095 And X10, X20, 0
	096 Add X11, X21, 32
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move [X11], W8
	099 Add X8, X8, 1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W8, [X24+20]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, [X23]
	104 Move W1, W20
	105 Call 0x1C17D6C
	106 Move X8, [X19+8]
	107 Move X22, X0
	108 Move X1, X22
	109 Move W2, W20
	110 Move X0, X8
	111 Move X3, X31
	112 Call Array.Copy, X0, X1, X2
	113 Move X8, 0x52B000
	114 Move X8, [X8+1240]
	115 Move X0, X22
	116 Move X1, X21
	117 Move X2, [X8]
	118 Call 0x2159020, X0, X1
	119 Move X8, 0x4BF000
	120 Move X8, [X8+2760]
	121 Move W1, W20
	122 Move X0, [X8]
	123 Call 0x1C17D6C
	124 Move X8, [X19+16]
	125 Move X22, X0
	126 Move X1, X22
	127 Move W2, W20
	128 Move X0, X8
	129 Move X3, X31
	130 Call Array.Copy, X0, X1, X2
	131 Move X25, 0x4CC000
	132 Move X25, [X25+752]
	133 Move X0, [X25]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X26, 0x7A5000
	139 Move W8, [X26+1443]
	140 Compare W8, 0
	141 JumpIfNotEqual {147}
	142 Move X0, 0x4CC000
	143 Move X0, [X0+752]
	144 Call 0x1C17CF4
	145 Move W8, 1
	146 Move [X26+1443], W8
	147 Move X0, [X25]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {153}
	151 Call 0x1C17DFC
	152 Move X0, [X25]
	153 Move X9, 0x52B000
	154 Move X8, [X0+184]
	155 Move X9, [X9+1248]
	156 Move X0, X22
	157 Move X1, X21
	158 Move X2, [X8+16]
	159 Move X3, [X9]
	160 Call 0x2159194, X0, X1, X2
	161 Move W8, [X24+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X8, 0x519000
	164 Move X8, [X8+3496]
	165 Move X0, X21
	166 Move X1, [X8]
	167 Call Array.Reverse, X0
	168 Move X8, 0x52B000
	169 Move X8, [X8+1056]
	170 Move W1, W20
	171 Move X0, [X8]
	172 Call 0x1C17D6C
	173 Move X8, [X23]
	174 Move X22, X0
	175 Move W1, W20
	176 Move X0, X8
	177 Call 0x1C17D6C
	178 Move X25, 0x4BF000
	179 Move X25, [X25+2760]
	180 Move X23, X0
	181 Move W1, W20
	182 Move X8, [X25]
	183 Move X0, X8
	184 Call 0x1C17D6C
	185 Move X8, [X25]
	186 Move X24, X0
	187 Move W1, W20
	188 Move X0, X8
	189 Call 0x1C17D6C
	190 Move X8, [X25]
	191 Move X25, X0
	192 Move W1, W20
	193 Move X0, X8
	194 Call 0x1C17D6C
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X26, X0
	197 Compare X21, 0
	198 JumpIfEqual {299}
	199 Move W9, W31
	200 Move W8, [X21+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X8, [X19]
	203 Compare X8, 0
	204 JumpIfEqual {299}
	205 Move X28, W9
	206 Add X9, X21, X28
	207 NotImplemented "Instruction LDRSW not yet implemented."
	208 Move W9, [X8+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Compare X22, 0
	211 JumpIfEqual {299}
	212 Add X8, X8, X29
	213 Move X27, [X8+32]
	214 Compare X27, 0
	215 JumpIfEqual {222}
	216 Move X8, [X22]
	217 Move X0, X27
	218 Move X1, [X8+64]
	219 Call 0x1C17E00
	220 Compare X0, 0
	221 JumpIfEqual {300}
	222 Move W8, [X22+24]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Add X8, X22, X28
	225 Move [X8+32], X27
	226 Move X8, [X19+8]
	227 Compare X8, 0
	228 JumpIfEqual {299}
	229 Move W9, [X8+24]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Compare X23, 0
	232 JumpIfEqual {299}
	233 Move W9, [X23+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Add X8, X8, X29
	236 Move W8, [X8+32]
	237 Add X9, X23, X28
	238 Move [X9+32], W8
	239 Move X8, [X19+16]
	240 Compare X8, 0
	241 JumpIfEqual {299}
	242 Move W9, [X8+24]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Compare X24, 0
	245 JumpIfEqual {299}
	246 Move W9, [X24+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Add X8, X8, X29
	249 Move X8, [X8+32]
	250 Add X9, X24, X28
	251 Move [X9+32], X8
	252 Move X8, [X19+24]
	253 Compare X8, 0
	254 JumpIfEqual {299}
	255 Move W9, [X8+24]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Compare X25, 0
	258 JumpIfEqual {299}
	259 Move W9, [X25+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Add X8, X8, X29
	262 Move X8, [X8+32]
	263 Add X9, X25, X28
	264 Move [X9+32], X8
	265 Move X8, [X19+32]
	266 Compare X8, 0
	267 JumpIfEqual {299}
	268 Move W9, [X8+24]
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Compare X26, 0
	271 JumpIfEqual {299}
	272 Move W9, [X26+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Add X8, X8, X29
	275 Move X8, [X8+32]
	276 Add W9, W28, 1
	277 Add X10, X26, X28
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move [X10+32], X8
	280 Move [X19], X22
	281 Move [X19+8], X23
	282 Move [X19+16], X24
	283 Move [X19+24], X25
	284 Move [X19+32], X26
	285 Move X20, [X31+80]
	286 Move X19, [X31+88]
	287 Move X22, [X31+64]
	288 Move X21, [X31+72]
	289 Move X24, [X31+48]
	290 Move X23, [X31+56]
	291 Move X26, [X31+32]
	292 Move X25, [X31+40]
	293 Move X28, [X31+16]
	294 Move X27, [X31+24]
	295 Move X29, [X31+96]
	296 Move X30, [X31+104]
	297 Return 
	298 Call 0x1C17F28
	299 Call 0x1C17F20
	300 Call 0x1C17F44
	301 Move X1, X31
	302 Call 0x1C17DEC

Method: System.Boolean CheckObsoleteAddition(System.Reflection.FieldInfo field, UnityEngine.EnumDataUtility/CachedType cachedType)

Disassembly:
	0x03C35790 ADD X0, X0, 0xA64
	0x03C35794 BL 0x1C16CB8
	0x03C35798 MOV X2, X0
	0x03C3579C STR X0, [X21 + 0x388]
	0x03C357A0 MOV X0, X20
	0x03C357A4 MOV W1, W19
	0x03C357A8 LDP X20, X19, [X31 + 0x10]
	0x03C357AC LDP X30, X21, [X31], #0x20
	0x03C357B0 BR X2
	0x03C357B4 STP X30, X21, [X31 - 0x20]!
	0x03C357B8 STP X20, X19, [X31 + 0x10]
	0x03C357BC ADRP X21, 0x7B0000
	0x03C357C0 LDR X2, [X21 + 0x390]
	0x03C357C4 MOV W19, W1
	0x03C357C8 MOV X20, X0
	0x03C357CC CBNZ X2, 0x3C357E4
	0x03C357D0 ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C357D4 ADD X0, X0, 0x212
	0x03C357D8 BL 0x1C16CB8
	0x03C357DC MOV X2, X0
	0x03C357E0 STR X0, [X21 + 0x390]
	0x03C357E4 AND W1, W19, 0x1
	0x03C357E8 MOV X0, X20
	0x03C357EC LDP X20, X19, [X31 + 0x10]
	0x03C357F0 LDP X30, X21, [X31], #0x20
	0x03C357F4 BR X2
	0x03C357F8 STR X30, [X31 - 0x20]!
	0x03C357FC STP X20, X19, [X31 + 0x10]
	0x03C35800 ADRP X20, 0x7B0000
	0x03C35804 LDR X1, [X20 + 0x398]
	0x03C35808 MOV X19, X0
	0x03C3580C CBNZ X1, 0x3C35824
	0x03C35810 ADRP X0, 0xFFFFFFFFFCEC0000
	0x03C35814 ADD X0, X0, 0x407
	0x03C35818 BL 0x1C16CB8
	0x03C3581C MOV X1, X0
	0x03C35820 STR X0, [X20 + 0x398]
	0x03C35824 MOV X0, X19
	0x03C35828 LDP X20, X19, [X31 + 0x10]
	0x03C3582C LDR X30, [X31], #0x20
	0x03C35830 BR X1
	0x03C35834 STR X30, [X31 - 0x20]!
	0x03C35838 STP X20, X19, [X31 + 0x10]
	0x03C3583C ADRP X20, 0x7B0000
	0x03C35840 LDR X1, [X20 + 0x3A0]
	0x03C35844 MOV X19, X0
	0x03C35848 CBNZ X1, 0x3C35860
	0x03C3584C ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C35850 ADD X0, X0, 0x244
	0x03C35854 BL 0x1C16CB8
	0x03C35858 MOV X1, X0
	0x03C3585C STR X0, [X20 + 0x3A0]
	0x03C35860 MOV X0, X19
	0x03C35864 LDP X20, X19, [X31 + 0x10]
	0x03C35868 LDR X30, [X31], #0x20
	0x03C3586C BR X1
	0x03C35870 STP X30, X21, [X31 - 0x20]!
	0x03C35874 STP X20, X19, [X31 + 0x10]
	0x03C35878 ADRP X21, 0x7B0000
	0x03C3587C LDR X2, [X21 + 0x3A8]
	0x03C35880 MOV W19, W1
	0x03C35884 MOV X20, X0
	0x03C35888 CBNZ X2, 0x3C358A0
	0x03C3588C ADRP X0, 0xFFFFFFFFFCEF7000
	0x03C35890 ADD X0, X0, 0x98D
	0x03C35894 BL 0x1C16CB8
	0x03C35898 MOV X2, X0
	0x03C3589C STR X0, [X21 + 0x3A8]
	0x03C358A0 AND W1, W19, 0x1
	0x03C358A4 MOV X0, X20
	0x03C358A8 LDP X20, X19, [X31 + 0x10]
	0x03C358AC LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7B1000
	008 Move X21, 0x4E8000
	009 Move X22, 0x4BF000
	010 Move W8, [X23+796]
	011 Move X21, [X21+2856]
	012 Move X22, [X22+1728]
	013 Move W19, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x52B000
	020 Move X0, [X0+1224]
	021 Call 0x1C17CF4
	022 Move X0, 0x4E8000
	023 Move X0, [X0+2856]
	024 Call 0x1C17CF4
	025 Move X0, 0x51F000
	026 Move X0, [X0+1912]
	027 Call 0x1C17CF4
	028 Move X0, 0x4BF000
	029 Move X0, [X0+1728]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+796], W8
	033 Move X0, [X22]
	034 Move X21, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X21
	040 Move X1, X31
	041 Call Type.GetTypeFromHandle, X0
	042 Compare X20, 0
	043 JumpIfEqual {82}
	044 Move X8, [X20]
	045 Move X1, X0
	046 Move X0, X20
	047 Move W2, W31
	048 Move X9, [X8+520]
	049 Move X3, [X8+528]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Compare X0, 0
	052 JumpIfEqual {82}
	053 Move W8, [X0+24]
	054 Compare W8, 0
	055 JumpIfEqual {59}
	056 Compare W19, 0
	057 JumpIfEqual {60}
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W0, 1
	060 Move W0, W31
	061 Move X8, 0x52B000
	062 Move X8, [X8+1224]
	063 Move X1, [X8]
	064 Call Enumerable.First, X0
	065 Compare X0, 0
	066 JumpIfEqual {82}
	067 Move X8, 0x51F000
	068 Move X8, [X8+1912]
	069 Move X1, [X8]
	070 Move X8, [X0]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W8, [X0+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSET not yet implemented."
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 Return X0
	082 Call 0x1C17F20
	083 Call 0x1C181E0

Method: System.String EnumTooltipFromEnumField(System.Reflection.FieldInfo field)

Disassembly:
	0x03C35D1C LDP X9, X1, [X8 + 0x1A8]
	0x03C35D20 BLR X9
	0x03C35D24 TBZ X0, 0x0, 0x3C35D90
	0x03C35D28 LDR X8, [X19]
	0x03C35D2C MOV X0, X19
	0x03C35D30 LDP X9, X1, [X8 + 0x1B8]
	0x03C35D34 BLR X9
	0x03C35D38 TBZ X0, 0x0, 0x3C35DB0
	0x03C35D3C LDP X20, X19, [X31 + 0x10]
	0x03C35D40 LDR X30, [X31], #0x20
	0x03C35D44 RET
	0x03C35D48 ADRP X0, 0x4C3000
	0x03C35D4C LDR X0, [X0 + 0x528]
	0x03C35D50 BL 0x1C16D08
	0x03C35D54 BL 0x1C16F10
	0x03C35D58 MOV X19, X0
	0x03C35D5C ADRP X0, 0x52A000
	0x03C35D60 LDR X0, [X0 + 0x528]
	0x03C35D64 BL 0x1C16D08
	0x03C35D68 MOV X20, X0
	0x03C35D6C ADRP X0, 0x4ED000
	0x03C35D70 LDR X0, [X0 + 0xD38]
	0x03C35D74 BL 0x1C16D08
	0x03C35D78 MOV X2, X0
	0x03C35D7C MOV X0, X19
	0x03C35D80 MOV X1, X20
	0x03C35D84 MOV X3, X31
	0x03C35D88 BL 0x3315F7C
	0x03C35D8C B 0x3C35DF4
	0x03C35D90 ADRP X0, 0x4C6000
	0x03C35D94 LDR X0, [X0 + 0x578]
	0x03C35D98 BL 0x1C16D08
	0x03C35D9C BL 0x1C16F10
	0x03C35DA0 MOV X19, X0
	0x03C35DA4 ADRP X0, 0x52A000
	0x03C35DA8 LDR X0, [X0 + 0x530]
	0x03C35DAC B 0x3C35DCC
	0x03C35DB0 ADRP X0, 0x4C6000
	0x03C35DB4 LDR X0, [X0 + 0x578]
	0x03C35DB8 BL 0x1C16D08
	0x03C35DBC BL 0x1C16F10
	0x03C35DC0 MOV X19, X0
	0x03C35DC4 ADRP X0, 0x52A000
	0x03C35DC8 LDR X0, [X0 + 0x538]
	0x03C35DCC BL 0x1C16D08
	0x03C35DD0 MOV X20, X0
	0x03C35DD4 ADRP X0, 0x4ED000
	0x03C35DD8 LDR X0, [X0 + 0xD38]
	0x03C35DDC BL 0x1C16D08
	0x03C35DE0 MOV X2, X0
	0x03C35DE4 MOV X0, X19
	0x03C35DE8 MOV X1, X20
	0x03C35DEC MOV X3, X31
	0x03C35DF0 BL 0x330E16C
	0x03C35DF4 ADRP X0, 0x52A000
	0x03C35DF8 LDR X0, [X0 + 0x540]
	0x03C35DFC BL 0x1C16D08
	0x03C35E00 MOV X1, X0
	0x03C35E04 MOV X0, X19
	0x03C35E08 BL 0x1C16DEC
	0x03C35E0C STP X30, X23, [X31 - 0x30]!
	0x03C35E10 STP X22, X21, [X31 + 0x10]
	0x03C35E14 STP X20, X19, [X31 + 0x20]
	0x03C35E18 MOV W19, W2
	0x03C35E1C MOV W20, W1
	0x03C35E20 MOV X22, X0
	0x03C35E24 MOV X0, X4
	0x03C35E28 MOV X1, X31
	0x03C35E2C MOV X2, X31
	0x03C35E30 MOV X23, X4
	0x03C35E34 MOV X21, X3
	0x03C35E38 BL 0x33BE5B0
	0x03C35E3C TBNZ X0, 0x0, 0x3C35E90
	0x03C35E40 MOV X0, X21
	0x03C35E44 BL 0x3C35D08
	0x03C35E48 MOV X0, X23
	0x03C35E4C MOV X1, X31
	0x03C35E50 BL 0x33C6948

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B1000
	007 Move X20, 0x52B000
	008 Move X21, 0x4BF000
	009 Move W8, [X22+797]
	010 Move X20, [X20+1264]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x52B000
	018 Move X0, [X0+1224]
	019 Call 0x1C17CF4
	020 Move X0, 0x4C1000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move X0, 0x52B000
	024 Move X0, [X0+1264]
	025 Call 0x1C17CF4
	026 Move X0, 0x52B000
	027 Move X0, [X0+1272]
	028 Call 0x1C17CF4
	029 Move X0, 0x4BF000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+797], W8
	034 Move X0, [X21]
	035 Move X20, [X20]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Call Type.GetTypeFromHandle, X0
	043 Compare X19, 0
	044 JumpIfEqual {86}
	045 Move X8, [X19]
	046 Move X1, X0
	047 Move X0, X19
	048 Move W2, W31
	049 Move X9, [X8+520]
	050 Move X3, [X8+528]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {86}
	054 Move W8, [X0+24]
	055 Compare W8, 0
	056 JumpIfEqual {75}
	057 Move X8, 0x52B000
	058 Move X8, [X8+1224]
	059 Move X1, [X8]
	060 Call Enumerable.First, X0
	061 Compare X0, 0
	062 JumpIfEqual {86}
	063 Move X9, 0x52B000
	064 Move X9, [X9+1272]
	065 Move X8, [X0]
	066 Move X1, [X9]
	067 Move W10, [X8+304]
	068 Move W9, [X1+304]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X8+200]
	071 Add X8, X8, X9
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add X8, X0, 24
	075 Move X8, 0x4C1000
	076 Move X8, [X8+632]
	077 Move X8, [X8]
	078 Move X8, [X8+184]
	079 Move X0, [X8]
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X30, [X31+48]
	085 Return X0
	086 Call 0x1C17F20
	087 Call 0x1C181E0

Method: System.String EnumNameFromEnumField(System.Reflection.FieldInfo field, System.Func`2<System.String, System.String> nicifyName)

Disassembly:
	0x03C35E54 CBZ X21, 0x3C35EEC
	0x03C35E58 LDR X8, [X21]
	0x03C35E5C MOV X23, X0
	0x03C35E60 MOV X0, X21
	0x03C35E64 MOV X1, X22
	0x03C35E68 LDR X9, [X8 + 0x358]
	0x03C35E6C LDR X4, [X8 + 0x360]
	0x03C35E70 MOV W2, W20
	0x03C35E74 MOV W3, W19
	0x03C35E78 BLR X9
	0x03C35E7C LDP X20, X19, [X31 + 0x20]
	0x03C35E80 LDP X22, X21, [X31 + 0x10]
	0x03C35E84 STR W0, [X23]
	0x03C35E88 LDP X30, X23, [X31], #0x30
	0x03C35E8C RET
	0x03C35E90 ADRP X0, 0x4C6000
	0x03C35E94 LDR X0, [X0 + 0x578]
	0x03C35E98 BL 0x1C16D08
	0x03C35E9C BL 0x1C16F10
	0x03C35EA0 MOV X19, X0
	0x03C35EA4 ADRP X0, 0x52A000
	0x03C35EA8 LDR X0, [X0 + 0x3E8]
	0x03C35EAC BL 0x1C16D08
	0x03C35EB0 MOV X20, X0
	0x03C35EB4 ADRP X0, 0x52A000
	0x03C35EB8 LDR X0, [X0 + 0x3F0]
	0x03C35EBC BL 0x1C16D08
	0x03C35EC0 MOV X2, X0
	0x03C35EC4 MOV X0, X19
	0x03C35EC8 MOV X1, X20
	0x03C35ECC MOV X3, X31
	0x03C35ED0 BL 0x330E16C
	0x03C35ED4 ADRP X0, 0x52A000
	0x03C35ED8 LDR X0, [X0 + 0x548]
	0x03C35EDC BL 0x1C16D08
	0x03C35EE0 MOV X1, X0
	0x03C35EE4 MOV X0, X19
	0x03C35EE8 BL 0x1C16DEC
	0x03C35EEC BL 0x1C16F20
	0x03C35EF0 STR X30, [X31 - 0x30]!
	0x03C35EF4 STP X22, X21, [X31 + 0x10]
	0x03C35EF8 STP X20, X19, [X31 + 0x20]
	0x03C35EFC MOV X20, X2
	0x03C35F00 MOV W19, W1
	0x03C35F04 MOV X21, X0
	0x03C35F08 MOV X0, X3
	0x03C35F0C MOV X1, X31
	0x03C35F10 MOV X2, X31
	0x03C35F14 MOV X22, X3
	0x03C35F18 BL 0x33BE5B0
	0x03C35F1C TBNZ X0, 0x0, 0x3C35F6C
	0x03C35F20 MOV X0, X20
	0x03C35F24 BL 0x3C35D08
	0x03C35F28 MOV X0, X22
	0x03C35F2C MOV X1, X31
	0x03C35F30 BL 0x33C6948
	0x03C35F34 CBZ X20, 0x3C35FC8
	0x03C35F38 LDR X8, [X20]
	0x03C35F3C MOV X22, X0
	0x03C35F40 MOV X0, X20
	0x03C35F44 MOV X1, X21
	0x03C35F48 LDR X9, [X8 + 0x338]
	0x03C35F4C LDR X3, [X8 + 0x340]
	0x03C35F50 MOV W2, W19
	0x03C35F54 BLR X9
	0x03C35F58 STR X0, [X22]
	0x03C35F5C LDP X20, X19, [X31 + 0x20]
	0x03C35F60 LDP X22, X21, [X31 + 0x10]
	0x03C35F64 LDR X30, [X31], #0x30
	0x03C35F68 RET
	0x03C35F6C ADRP X0, 0x4C6000
	0x03C35F70 LDR X0, [X0 + 0x578]
	0x03C35F74 BL 0x1C16D08
	0x03C35F78 BL 0x1C16F10
	0x03C35F7C MOV X19, X0
	0x03C35F80 ADRP X0, 0x52A000
	0x03C35F84 LDR X0, [X0 + 0x3E8]
	0x03C35F88 BL 0x1C16D08
	0x03C35F8C MOV X20, X0
	0x03C35F90 ADRP X0, 0x52A000
	0x03C35F94 LDR X0, [X0 + 0x3F0]
	0x03C35F98 BL 0x1C16D08
	0x03C35F9C MOV X2, X0
	0x03C35FA0 MOV X0, X19
	0x03C35FA4 MOV X1, X20
	0x03C35FA8 MOV X3, X31
	0x03C35FAC BL 0x330E16C
	0x03C35FB0 ADRP X0, 0x52A000
	0x03C35FB4 LDR X0, [X0 + 0x550]
	0x03C35FB8 BL 0x1C16D08
	0x03C35FBC MOV X1, X0
	0x03C35FC0 MOV X0, X19
	0x03C35FC4 BL 0x1C16DEC
	0x03C35FC8 BL 0x1C16F20
	0x03C35FCC STR X30, [X31 - 0x20]!
	0x03C35FD0 STP X20, X19, [X31 + 0x10]
	0x03C35FD4 MOV X20, X1
	0x03C35FD8 MOV X19, X0
	0x03C35FDC MOV X0, X1
	0x03C35FE0 MOV X1, X31
	0x03C35FE4 MOV X2, X31
	0x03C35FE8 BL 0x33BE5B0
	0x03C35FEC TBNZ X0, 0x0, 0x3C3602C
	0x03C35FF0 MOV X0, X19
	0x03C35FF4 BL 0x3C35D08
	0x03C35FF8 MOV X0, X20
	0x03C35FFC MOV X1, X31
	0x03C36000 BL 0x33C6948
	0x03C36004 CBZ X19, 0x3C36088
	0x03C36008 LDR X8, [X19]
	0x03C3600C MOV X20, X0
	0x03C36010 MOV X0, X19
	0x03C36014 LDP X9, X1, [X8 + 0x1E8]
	0x03C36018 BLR X9
	0x03C3601C STR X0, [X20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x7B1000
	009 Move X22, 0x52B000
	010 Move X21, 0x4BF000
	011 Move W8, [X23+798]
	012 Move X22, [X22+1280]
	013 Move X21, [X21+1728]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x52B000
	021 Move X0, [X0+1048]
	022 Call 0x1C17CF4
	023 Move X0, 0x52B000
	024 Move X0, [X0+1224]
	025 Call 0x1C17CF4
	026 Move X0, 0x52B000
	027 Move X0, [X0+1280]
	028 Call 0x1C17CF4
	029 Move X0, 0x52B000
	030 Move X0, [X0+1288]
	031 Call 0x1C17CF4
	032 Move X0, 0x4E8000
	033 Move X0, [X0+2856]
	034 Call 0x1C17CF4
	035 Move X0, 0x4BF000
	036 Move X0, [X0+1728]
	037 Call 0x1C17CF4
	038 Move X0, 0x52B000
	039 Move X0, [X0+1296]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X23+798], W8
	043 Move X0, [X21]
	044 Move [X31], X20
	045 Move [X31+8], X19
	046 Move X20, [X22]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X20
	052 Move X1, X31
	053 Call Type.GetTypeFromHandle, X0
	054 Compare X19, 0
	055 JumpIfEqual {132}
	056 Move X8, [X19]
	057 Move X1, X0
	058 Move X0, X19
	059 Move W2, W31
	060 Move X9, [X8+520]
	061 Move X3, [X8+528]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X0, 0
	064 JumpIfEqual {132}
	065 Move W8, [X0+24]
	066 Compare W8, 0
	067 JumpIfEqual {86}
	068 Move X8, 0x52B000
	069 Move X8, [X8+1224]
	070 Move X1, [X8]
	071 Call Enumerable.First, X0
	072 Compare X0, 0
	073 JumpIfEqual {132}
	074 Move X9, 0x52B000
	075 Move X9, [X9+1288]
	076 Move X8, [X0]
	077 Move X1, [X9]
	078 Move W10, [X8+304]
	079 Move W9, [X1+304]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X8, [X8+200]
	082 Add X8, X8, X9
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, [X0+24]
	086 Move X8, 0x4E8000
	087 Move X0, [X21]
	088 Move X8, [X8+2856]
	089 Move W9, [X0+224]
	090 Move X20, [X8]
	091 Compare W9, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X20
	095 Move X1, X31
	096 Call Type.GetTypeFromHandle, X0
	097 Move X8, [X19]
	098 Move X1, X0
	099 Move X0, X19
	100 Move W2, W31
	101 Move X9, [X8+488]
	102 Move X3, [X8+496]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X8, 0x52B000
	105 Move X8, [X8+1048]
	106 Move W19, W0
	107 Move X8, [X8]
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1C17DFC
	113 Add X0, X31, 0
	114 Call EnumDataUtility.<EnumNameFromEnumField>g__NicifyName|8_0, X0
	115 Move TEMP, X19
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {124}
	119 Move X8, 0x52B000
	120 Move X8, [X8+1296]
	121 Move X2, X31
	122 Move X1, [X8]
	123 Call String.Concat, X0, X1
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X30, [X31+16]
	129 Move X23, [X31+24]
	130 Add X31, X31, 64
	131 Return X0
	132 Call 0x1C17F20
	133 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x03C36070 ADRP X0, 0x529000
	0x03C36074 LDR X0, [X0 + 0x558]
	0x03C36078 BL 0x1C16D08
	0x03C3607C MOV X1, X0
	0x03C36080 MOV X0, X19
	0x03C36084 BL 0x1C16DEC
	0x03C36088 BL 0x1C16F20
	0x03C3608C STR X30, [X31 - 0x20]!
	0x03C36090 STP X20, X19, [X31 + 0x10]
	0x03C36094 ADRP X20, 0x7AF000
	0x03C36098 LDRB W8, [X20 + 0x408]
	0x03C3609C MOV X19, X0
	0x03C360A0 TBNZ X8, 0x0, 0x3C360B8
	0x03C360A4 ADRP X0, 0x4BF000
	0x03C360A8 LDR X0, [X0 + 0xA50]
	0x03C360AC BL 0x1C16CF4
	0x03C360B0 MOVZ W8, 0x1
	0x03C360B4 STRB W8, [X20 + 0x408]
	0x03C360B8 LDR X0, [X19 + 0x18]
	0x03C360BC CBNZ X0, 0x3C3610C
	0x03C360C0 ADRP X8, 0x4BF000
	0x03C360C4 LDR X8, [X8 + 0xA50]
	0x03C360C8 LDR X0, [X8]
	0x03C360CC BL 0x1C16F10
	0x03C360D0 MOV X1, X31
	0x03C360D4 MOV X20, X0
	0x03C360D8 BL 0x33DFA8C
	0x03C360DC STR X20, [X19 + 0x18]
	0x03C360E0 ADRP X20, 0x7AF000
	0x03C360E4 LDR X8, [X20 + 0x490]
	0x03C360E8 CBNZ X8, 0x3C36100
	0x03C360EC ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C360F0 ADD X0, X0, 0xE2E
	0x03C360F4 BL 0x1C16CB8
	0x03C360F8 MOV X8, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7B0000
	007 Move X22, 0x52A000
	008 Move X19, 0x52A000
	009 Move X20, 0x52A000
	010 Move W8, [X21+799]
	011 Move X22, [X22+1304]
	012 Move X19, [X19+1312]
	013 Move X20, [X20+1048]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x52A000
	019 Move X0, [X0+1312]
	020 Call 0x1C17CF4
	021 Move X0, 0x52A000
	022 Move X0, [X0+1304]
	023 Call 0x1C17CF4
	024 Move X0, 0x52A000
	025 Move X0, [X0+1048]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+799], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call Dictionary`2<ValueTuple`2<Int32Enum, Object>, EnumData>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

Method: System.String <EnumNameFromEnumField>g__NicifyName|8_0(ref UnityEngine.EnumDataUtility/<>c__DisplayClass8_0 param_0)

Disassembly:
	0x03C36020 LDP X20, X19, [X31 + 0x10]
	0x03C36024 LDR X30, [X31], #0x20
	0x03C36028 RET
	0x03C3602C ADRP X0, 0x4C5000
	0x03C36030 LDR X0, [X0 + 0x578]
	0x03C36034 BL 0x1C16D08
	0x03C36038 BL 0x1C16F10
	0x03C3603C MOV X19, X0
	0x03C36040 ADRP X0, 0x529000
	0x03C36044 LDR X0, [X0 + 0x3E8]
	0x03C36048 BL 0x1C16D08
	0x03C3604C MOV X20, X0
	0x03C36050 ADRP X0, 0x529000
	0x03C36054 LDR X0, [X0 + 0x3F0]
	0x03C36058 BL 0x1C16D08
	0x03C3605C MOV X2, X0
	0x03C36060 MOV X0, X19
	0x03C36064 MOV X1, X20
	0x03C36068 MOV X3, X31
	0x03C3606C BL 0x330E16C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0]
	004 Move X0, [X0+8]
	005 Compare X19, 0
	006 JumpIfEqual {21}
	007 Compare X0, 0
	008 JumpIfEqual {29}
	009 Move X8, [X0]
	010 Move X9, [X8+424]
	011 Move X1, [X8+432]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X8, [X19+64]
	014 Move X3, [X19+24]
	015 Move X2, [X19+40]
	016 Move X1, X0
	017 Move X0, X8
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 CallNoReturn X3
	021 Compare X0, 0
	022 JumpIfEqual {29}
	023 Move X8, [X0]
	024 Move X2, [X8+424]
	025 Move X1, [X8+432]
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 CallNoReturn X2
	029 Call 0x1C17F20

