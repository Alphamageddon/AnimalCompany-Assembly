Type: UnityEngine.StackTraceUtility

Method: System.Void SetProjectFolder(System.String folder)

Disassembly:
	0x03C37EA4 B.CS 0x3C38030
	0x03C37EA8 SXTW X26, W23
	0x03C37EAC ADD X8, X8, X26, 0x4, LSL
	0x03C37EB0 LDR X11, [X8 + 0x20]
	0x03C37EB4 CBZ X11, 0x3C38034
	0x03C37EB8 CBZ X19, 0x3C38034
	0x03C37EBC LDR X8, [X11 + 0x18]
	0x03C37EC0 LDR X9, [X19 + 0x18]
	0x03C37EC4 CMP W9, W8
	0x03C37EC8 B.LT 0x3C37FD4
	0x03C37ECC CMP W8, 0x1
	0x03C37ED0 B.LT 0x3C37F14
	0x03C37ED4 MOV X10, X31
	0x03C37ED8 ADD X11, X11, 0x20
	0x03C37EDC MOV W21, W8
	0x03C37EE0 CMP W8, W10
	0x03C37EE4 B.EQ 0x3C38030
	0x03C37EE8 CMP W9, W10
	0x03C37EEC B.EQ 0x3C38030
	0x03C37EF0 LDRB W12, [X11, X10, LSL]
	0x03C37EF4 LDRB W13, [X24, X10, LSL]
	0x03C37EF8 ADD X10, X10, 0x1
	0x03C37EFC CMP W12, W13
	0x03C37F00 CSINV W21, W21, W31, EQ
	0x03C37F04 CMP W10, W21
	0x03C37F08 B.LT 0x3C37EE0
	0x03C37F0C TBZ X21, 0x1F, 0x3C37F1C
	0x03C37F10 B 0x3C37FD4
	0x03C37F14 MOV W21, W8
	0x03C37F18 TBNZ X21, 0x1F, 0x3C37FD4
	0x03C37F1C LDR W8, [X0 + 0xE0]
	0x03C37F20 CBNZ W8, 0x3C37F2C
	0x03C37F24 BL 0x1C16DFC
	0x03C37F28 LDR X0, [X22]
	0x03C37F2C LDR X8, [X0 + 0xB8]
	0x03C37F30 LDR X8, [X8]
	0x03C37F34 CBZ X8, 0x3C37F74
	0x03C37F38 LDR W9, [X8 + 0x18]
	0x03C37F3C CMP W23, W9
	0x03C37F40 B.CS 0x3C37F7C
	0x03C37F44 ADD X8, X8, X26, 0x4, LSL
	0x03C37F48 LDR X0, [X8 + 0x28]
	0x03C37F4C CBZ X0, 0x3C37F84
	0x03C37F50 LDR X8, [X0]
	0x03C37F54 LDR W9, [X19 + 0x18]
	0x03C37F58 LDR X10, [X8 + 0x388]
	0x03C37F5C LDR X4, [X8 + 0x390]
	0x03C37F60 SUB W3, W9, W21
	0x03C37F64 MOV X1, X19
	0x03C37F68 MOV W2, W21
	0x03C37F6C BLR X10
	0x03C37F70 B 0x3C37FDC
	0x03C37F74 BL 0x1C16F20
	0x03C37F78 B 0x3C38058
	0x03C37F7C BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AF000
	006 Move X20, 0x501000
	007 Move W8, [X21+1224]
	008 Move X20, [X20+3528]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x501000
	015 Move X0, [X0+3528]
	016 Call 0x1C17CF4
	017 Move X0, 0x4F1000
	018 Move X0, [X0+2040]
	019 Call 0x1C17CF4
	020 Move X0, 0x4BE000
	021 Move X0, [X0+3784]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1224], W8
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move X1, X31
	033 Move [X8], X19
	034 Move X8, [X20]
	035 Move X8, [X8+184]
	036 Move X0, [X8]
	037 Call String.IsNullOrEmpty, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {63}
	042 Move X0, [X20]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X20]
	048 Move X8, [X0+184]
	049 Move X0, [X8]
	050 Compare X0, 0
	051 JumpIfEqual {68}
	052 Move X8, 0x4F1000
	053 Move X9, 0x4BE000
	054 Move X8, [X8+2040]
	055 Move X9, [X9+3784]
	056 Move X3, X31
	057 Move X1, [X8]
	058 Move X2, [X9]
	059 Call String.Replace, X0, X1, X2
	060 Move X8, [X20]
	061 Move X8, [X8+184]
	062 Move [X8], X0
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return 
	068 Call 0x1C17F20

Method: System.String ExtractStackTrace()

Disassembly:
	0x03C37F80 B 0x3C38058
	0x03C37F84 BL 0x1C16F20
	0x03C37F88 B 0x3C38038
	0x03C37F8C B 0x3C37F9C
	0x03C37F90 B 0x3C37F9C
	0x03C37F94 B 0x3C37F9C
	0x03C37F98 B 0x3C37F9C
	0x03C37F9C MOV X21, X0
	0x03C37FA0 CMP W1, 0x1
	0x03C37FA4 B.NE 0x3C38064
	0x03C37FA8 MOV X0, X21
	0x03C37FAC BL 0x3EB1AD0
	0x03C37FB0 MOV X21, X0
	0x03C37FB4 MOV X0, X20
	0x03C37FB8 BL 0x1C16D08
	0x03C37FBC LDR X8, [X21]
	0x03C37FC0 LDR X1, [X8]
	0x03C37FC4 BL 0x1C17270
	0x03C37FC8 TBZ X0, 0x0, 0x3C38038
	0x03C37FCC BL 0x3EB1AE0
	0x03C37FD0 LDR X0, [X22]
	0x03C37FD4 ADD W23, W23, 0x1
	0x03C37FD8 B 0x3C37E78
	0x03C37FDC LDP X20, X19, [X31 + 0x40]
	0x03C37FE0 LDP X22, X21, [X31 + 0x30]
	0x03C37FE4 LDP X24, X23, [X31 + 0x20]
	0x03C37FE8 LDP X26, X25, [X31 + 0x10]
	0x03C37FEC LDR X30, [X31], #0x50
	0x03C37FF0 RET
	0x03C37FF4 CBZ X19, 0x3C38034
	0x03C37FF8 LDR X0, [X8 + 0x8]
	0x03C37FFC CBZ X0, 0x3C38034
	0x03C38000 LDR X8, [X0]
	0x03C38004 LDR W3, [X19 + 0x18]
	0x03C38008 MOV X1, X19
	0x03C3800C LDP X20, X19, [X31 + 0x40]
	0x03C38010 LDR X5, [X8 + 0x388]
	0x03C38014 LDR X4, [X8 + 0x390]
	0x03C38018 LDP X22, X21, [X31 + 0x30]
	0x03C3801C LDP X24, X23, [X31 + 0x20]
	0x03C38020 LDP X26, X25, [X31 + 0x10]
	0x03C38024 MOV W2, W31
	0x03C38028 LDR X30, [X31], #0x50
	0x03C3802C BR X5
	0x03C38030 BL 0x1C16F28
	0x03C38034 BL 0x1C16F20
	0x03C38038 MOVZ W0, 0x8
	0x03C3803C BL 0x3EB1AF0
	0x03C38040 LDR X8, [X21]
	0x03C38044 STR X8, [X0]
	0x03C38048 ADRP X1, 0x27C000
	0x03C3804C ADD X1, X1, 0xE58
	0x03C38050 MOV X2, X31
	0x03C38054 BL 0x3EB1B00
	0x03C38058 B 0x3C3805C
	0x03C3805C MOV X21, X0
	0x03C38060 BL 0x3EB1AE0
	0x03C38064 MOV X0, X21
	0x03C38068 BL 0x1D2C690
	0x03C3806C BL 0x1990590
	0x03C38070 B 0x3C37D58
	0x03C38074 SUB X31, X31, 0xB0
	0x03C38078 STR X30, [X31 + 0x50]
	0x03C3807C STP X28, X27, [X31 + 0x60]
	0x03C38080 STP X26, X25, [X31 + 0x70]
	0x03C38084 STP X24, X23, [X31 + 0x80]
	0x03C38088 STP X22, X21, [X31 + 0x90]
	0x03C3808C STP X20, X19, [X31 + 0xA0]
	0x03C38090 ADRP X19, 0x7AD000
	0x03C38094 LDRB W8, [X19 + 0x4EA]
	0x03C38098 TBNZ X8, 0x0, 0x3C38110
	0x03C3809C ADRP X0, 0x4EA000
	0x03C380A0 LDR X0, [X0 + 0x648]
	0x03C380A4 BL 0x1C16CF4
	0x03C380A8 ADRP X0, 0x4EA000
	0x03C380AC LDR X0, [X0 + 0x368]
	0x03C380B0 BL 0x1C16CF4
	0x03C380B4 ADRP X0, 0x527000
	0x03C380B8 LDR X0, [X0 + 0x618]
	0x03C380BC BL 0x1C16CF4
	0x03C380C0 ADRP X0, 0x527000
	0x03C380C4 LDR X0, [X0 + 0x630]
	0x03C380C8 BL 0x1C16CF4
	0x03C380CC ADRP X0, 0x527000
	0x03C380D0 LDR X0, [X0 + 0x638]
	0x03C380D4 BL 0x1C16CF4
	0x03C380D8 ADRP X0, 0x4EA000

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X29, X31, 0
	008 Subtract X31, X31, 16
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X21+40]
	011 Move X19, 0x7AF000
	012 Move X22, 0x501000
	013 Move [X29-8], X8
	014 Move W8, [X19+1225]
	015 Move X22, [X22+3528]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x4BD000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x501000
	024 Move X0, [X0+3528]
	025 Call 0x1C17CF4
	026 Move X0, 0x4EF000
	027 Move X0, [X0+2056]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+1225], W8
	031 Move X20, 0x4BD000
	032 Move X20, [X20+2600]
	033 Subtract X19, X31, 0x4000
	034 Add X31, X19, 0
	035 Move W2, 0x4000
	036 Move X0, X19
	037 Move W1, W31
	038 Call 0x3EB2B10
	039 Move X0, [X22]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X22]
	045 Move X8, [X20]
	046 Move X9, [X0+184]
	047 Move W10, [X8+224]
	048 Move X20, [X9]
	049 Compare W10, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move W1, 0x4000
	054 Move X0, X19
	055 Move X2, X20
	056 Move X3, X31
	057 Call Debug.ExtractStackTraceNoAlloc, X0, X1, X2
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W20, W0
	060 Move X0, X31
	061 Call Encoding.get_UTF8
	062 Move X4, X0
	063 Move X0, X31
	064 Move X1, X19
	065 Move W2, W31
	066 Move W3, W20
	067 Move X5, X31
	068 Call String.CreateString, X0, X1, X2, X3, X4
	069 Move X8, 0x4EE000
	070 Move X8, [X8+2056]
	071 Move X0, [X8]
	072 Call 0x1C17F10
	073 Move W1, 1
	074 Move W2, 1
	075 Move X3, X31
	076 Move X19, X0
	077 Call StackTrace..ctor, X0, X1, X2
	078 Move X0, [X22]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X19
	084 Call StackTraceUtility.ExtractFormattedStackTrace, X0
	085 Move X8, [X21+40]
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add X31, X29, 0
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X29, [X31+48]
	094 Move X30, [X31+56]
	095 Return X0
	096 Call 0x3EB2B20

Method: System.Void ExtractStringFromExceptionInternal(System.Object exceptiono, out System.String message, out System.String stackTrace)

Disassembly:
	0x03C387E8 B.CC 0x3C38800
	0x03C387EC LDR X9, [X9 + 0xC8]
	0x03C387F0 ADD X9, X9, X10, 0x3, LSL
	0x03C387F4 LDUR X9, [X9 - 0x8]
	0x03C387F8 CMP X9, X8
	0x03C387FC B.EQ 0x3C38814
	0x03C38800 LDP X20, X19, [X31 + 0x20]
	0x03C38804 LDP X22, X21, [X31 + 0x10]
	0x03C38808 MOV W0, W31
	0x03C3880C LDR X30, [X31], #0x30
	0x03C38810 RET
	0x03C38814 LDR W9, [X8 + 0xE0]
	0x03C38818 CBNZ W9, 0x3C38824
	0x03C3881C MOV X0, X8
	0x03C38820 BL 0x1C16DFC
	0x03C38824 MOV X0, X19
	0x03C38828 MOV X1, X21
	0x03C3882C LDP X20, X19, [X31 + 0x20]
	0x03C38830 LDP X22, X21, [X31 + 0x10]
	0x03C38834 LDR X30, [X31], #0x30
	0x03C38838 B 0x3C388A0
	0x03C3883C STR X30, [X31 - 0x30]!
	0x03C38840 STP X22, X21, [X31 + 0x10]
	0x03C38844 STP X20, X19, [X31 + 0x20]
	0x03C38848 ADRP X21, 0x7AD000
	0x03C3884C ADRP X22, 0x4BB000
	0x03C38850 LDRB W8, [X21 + 0x54B]
	0x03C38854 LDR X22, [X22 + 0x598]
	0x03C38858 MOV X19, X1
	0x03C3885C MOV X20, X0
	0x03C38860 TBNZ X8, 0x0, 0x3C38878
	0x03C38864 ADRP X0, 0x4BB000
	0x03C38868 LDR X0, [X0 + 0x598]
	0x03C3886C BL 0x1C16CF4
	0x03C38870 MOVZ W8, 0x1
	0x03C38874 STRB W8, [X21 + 0x54B]
	0x03C38878 LDR X0, [X22]
	0x03C3887C LDR W8, [X0 + 0xE0]
	0x03C38880 CBNZ W8, 0x3C38888
	0x03C38884 BL 0x1C16DFC
	0x03C38888 MOV X0, X20
	0x03C3888C MOV X1, X19
	0x03C38890 LDP X20, X19, [X31 + 0x20]
	0x03C38894 LDP X22, X21, [X31 + 0x10]
	0x03C38898 LDR X30, [X31], #0x30
	0x03C3889C B 0x3C388A0
	0x03C388A0 STP X30, X21, [X31 - 0x20]!
	0x03C388A4 STP X20, X19, [X31 + 0x10]
	0x03C388A8 ADRP X21, 0x7AD000
	0x03C388AC LDRB W8, [X21 + 0x4F1]
	0x03C388B0 MOV X19, X1
	0x03C388B4 MOV X20, X0
	0x03C388B8 TBNZ X8, 0x0, 0x3C388D0
	0x03C388BC ADRP X0, 0x4BB000
	0x03C388C0 LDR X0, [X0 + 0x598]
	0x03C388C4 BL 0x1C16CF4
	0x03C388C8 MOVZ W8, 0x1
	0x03C388CC STRB W8, [X21 + 0x4F1]
	0x03C388D0 ORR X8, X20, X19, 0x0
	0x03C388D4 CBNZ X8, 0x3C388E0
	0x03C388D8 MOVZ W8, 0x1
	0x03C388DC B 0x3C38938
	0x03C388E0 CBZ X19, 0x3C388F4
	0x03C388E4 CBZ X20, 0x3C38914
	0x03C388E8 CMP X20, X19
	0x03C388EC CSET W8, EQ
	0x03C388F0 B 0x3C38938
	0x03C388F4 ADRP X8, 0x4BB000
	0x03C388F8 LDR X8, [X8 + 0x598]
	0x03C388FC LDR X0, [X8]
	0x03C38900 LDR W8, [X0 + 0xE0]
	0x03C38904 CBNZ W8, 0x3C3890C
	0x03C38908 BL 0x1C16DFC
	0x03C3890C MOV X0, X20
	0x03C38910 B 0x3C38930
	0x03C38914 ADRP X8, 0x4BB000
	0x03C38918 LDR X8, [X8 + 0x598]
	0x03C3891C LDR X0, [X8]
	0x03C38920 LDR W8, [X0 + 0xE0]
	0x03C38924 CBNZ W8, 0x3C3892C
	0x03C38928 BL 0x1C16DFC
	0x03C3892C MOV X0, X19
	0x03C38930 BL 0x3C389AC
	0x03C38934 EOR W8, W0, 0x1
	0x03C38938 LDP X20, X19, [X31 + 0x10]
	0x03C3893C AND W0, W8, 0x1
	0x03C38940 LDP X30, X21, [X31], #0x20
	0x03C38944 RET
	0x03C38948 STP X30, X21, [X31 - 0x20]!
	0x03C3894C STP X20, X19, [X31 + 0x10]
	0x03C38950 ADRP X20, 0x7AD000
	0x03C38954 ADRP X21, 0x4BB000
	0x03C38958 LDRB W8, [X20 + 0x4F0]
	0x03C3895C LDR X21, [X21 + 0x598]
	0x03C38960 MOV X19, X0
	0x03C38964 TBNZ X8, 0x0, 0x3C3897C
	0x03C38968 ADRP X0, 0x4BB000
	0x03C3896C LDR X0, [X0 + 0x598]
	0x03C38970 BL 0x1C16CF4
	0x03C38974 MOVZ W8, 0x1
	0x03C38978 STRB W8, [X20 + 0x4F0]
	0x03C3897C LDR X0, [X21]
	0x03C38980 LDR W8, [X0 + 0xE0]
	0x03C38984 CBNZ W8, 0x3C3898C
	0x03C38988 BL 0x1C16DFC
	0x03C3898C MOV X0, X19
	0x03C38990 MOV X1, X31
	0x03C38994 BL 0x3C388A0
	0x03C38998 LDP X20, X19, [X31 + 0x10]
	0x03C3899C ORN W8, W31, W0, 0x0
	0x03C389A0 AND W0, W8, 0x1
	0x03C389A4 LDP X30, X21, [X31], #0x20
	0x03C389A8 RET
	0x03C389AC STR X30, [X31 - 0x10]!
	0x03C389B0 CBZ X0, 0x3C389C8
	0x03C389B4 LDR X0, [X0 + 0x10]
	0x03C389B8 MOV X1, X31
	0x03C389BC MOV X2, X31
	0x03C389C0 LDR X30, [X31], #0x10
	0x03C389C4 B 0x33C5D2C
	0x03C389C8 BL 0x1C16F20
	0x03C389CC LDR X0, [X0 + 0x10]
	0x03C389D0 RET
	0x03C389D4 STP X30, X21, [X31 - 0x20]!
	0x03C389D8 STP X20, X19, [X31 + 0x10]
	0x03C389DC ADRP X20, 0x7AD000
	0x03C389E0 ADRP X21, 0x4BB000
	0x03C389E4 LDRB W8, [X20 + 0x4F2]
	0x03C389E8 LDR X21, [X21 + 0x598]
	0x03C389EC MOV X19, X0
	0x03C389F0 TBNZ X8, 0x0, 0x3C38A08
	0x03C389F4 ADRP X0, 0x4BB000
	0x03C389F8 LDR X0, [X0 + 0x598]
	0x03C389FC BL 0x1C16CF4
	0x03C38A00 MOVZ W8, 0x1
	0x03C38A04 STRB W8, [X20 + 0x4F2]
	0x03C38A08 LDR X0, [X21]
	0x03C38A0C LDR W8, [X0 + 0xE0]
	0x03C38A10 CBNZ W8, 0x3C38A18
	0x03C38A14 BL 0x1C16DFC
	0x03C38A18 ADRP X20, 0x7AD000
	0x03C38A1C LDR X1, [X20 + 0x580]
	0x03C38A20 CBNZ X1, 0x3C38A38
	0x03C38A24 ADRP X0, 0xFFFFFFFFFCEBD000
	0x03C38A28 ADD X0, X0, 0x468
	0x03C38A2C BL 0x1C16CB8
	0x03C38A30 MOV X1, X0
	0x03C38A34 STR X0, [X20 + 0x580]
	0x03C38A38 MOV X0, X19
	0x03C38A3C LDP X20, X19, [X31 + 0x10]
	0x03C38A40 LDP X30, X21, [X31], #0x20
	0x03C38A44 BR X1
	0x03C38A48 STR X30, [X31 - 0x20]!
	0x03C38A4C STP X20, X19, [X31 + 0x10]
	0x03C38A50 ADRP X20, 0x7AD000
	0x03C38A54 LDR X1, [X20 + 0x580]
	0x03C38A58 MOV X19, X0
	0x03C38A5C CBNZ X1, 0x3C38A74
	0x03C38A60 ADRP X0, 0xFFFFFFFFFCEBD000
	0x03C38A64 ADD X0, X0, 0x468
	0x03C38A68 BL 0x1C16CB8
	0x03C38A6C MOV X1, X0
	0x03C38A70 STR X0, [X20 + 0x580]
	0x03C38A74 MOV X0, X19
	0x03C38A78 LDP X20, X19, [X31 + 0x10]
	0x03C38A7C LDR X30, [X31], #0x20
	0x03C38A80 BR X1
	0x03C38A84 STR X30, [X31 - 0x30]!
	0x03C38A88 STP X22, X21, [X31 + 0x10]
	0x03C38A8C STP X20, X19, [X31 + 0x20]
	0x03C38A90 ADRP X21, 0x7AD000
	0x03C38A94 ADRP X22, 0x4BB000
	0x03C38A98 LDRB W8, [X21 + 0x4F3]
	0x03C38A9C LDR X22, [X22 + 0x598]
	0x03C38AA0 MOV X19, X1
	0x03C38AA4 MOV X20, X0
	0x03C38AA8 TBNZ X8, 0x0, 0x3C38AC0
	0x03C38AAC ADRP X0, 0x4BB000
	0x03C38AB0 LDR X0, [X0 + 0x598]
	0x03C38AB4 BL 0x1C16CF4
	0x03C38AB8 MOVZ W8, 0x1
	0x03C38ABC STRB W8, [X21 + 0x4F3]
	0x03C38AC0 LDR X0, [X22]
	0x03C38AC4 LDR W8, [X0 + 0xE0]
	0x03C38AC8 CBNZ W8, 0x3C38AD0
	0x03C38ACC BL 0x1C16DFC
	0x03C38AD0 ADRP X21, 0x7AD000
	0x03C38AD4 LDR X2, [X21 + 0x588]
	0x03C38AD8 CBNZ X2, 0x3C38AF0
	0x03C38ADC ADRP X0, 0xFFFFFFFFFCEBB000
	0x03C38AE0 ADD X0, X0, 0x337
	0x03C38AE4 BL 0x1C16CB8
	0x03C38AE8 MOV X2, X0
	0x03C38AEC STR X0, [X21 + 0x588]
	0x03C38AF0 MOV X0, X20
	0x03C38AF4 MOV X1, X19
	0x03C38AF8 LDP X20, X19, [X31 + 0x20]
	0x03C38AFC LDP X22, X21, [X31 + 0x10]
	0x03C38B00 LDR X30, [X31], #0x30
	0x03C38B04 BR X2
	0x03C38B08 STP X30, X21, [X31 - 0x20]!
	0x03C38B0C STP X20, X19, [X31 + 0x10]
	0x03C38B10 ADRP X21, 0x7AD000
	0x03C38B14 LDR X2, [X21 + 0x588]
	0x03C38B18 MOV X19, X1
	0x03C38B1C MOV X20, X0
	0x03C38B20 CBNZ X2, 0x3C38B38
	0x03C38B24 ADRP X0, 0xFFFFFFFFFCEBB000
	0x03C38B28 ADD X0, X0, 0x337
	0x03C38B2C BL 0x1C16CB8
	0x03C38B30 MOV X2, X0
	0x03C38B34 STR X0, [X21 + 0x588]
	0x03C38B38 MOV X0, X20
	0x03C38B3C MOV X1, X19
	0x03C38B40 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x7AE000
	014 Move W8, [X22+1226]
	015 Move X19, X2
	016 Move X20, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0x4BC000
	023 Move X0, [X0+2000]
	024 Call 0x1C17CF4
	025 Move X0, 0x500000
	026 Move X0, [X0+3528]
	027 Call 0x1C17CF4
	028 Move X0, 0x4EE000
	029 Move X0, [X0+2056]
	030 Call 0x1C17CF4
	031 Move X0, 0x4BC000
	032 Move X0, [X0+2288]
	033 Call 0x1C17CF4
	034 Move X0, 0x4BD000
	035 Move X0, [X0+4064]
	036 Call 0x1C17CF4
	037 Move X0, 0x4C0000
	038 Move X0, [X0+2344]
	039 Call 0x1C17CF4
	040 Move X0, 0x528000
	041 Move X0, [X0+1520]
	042 Call 0x1C17CF4
	043 Move X0, 0x4BC000
	044 Move X0, [X0+2440]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X22+1226], W8
	048 Compare X21, 0
	049 JumpIfEqual {231}
	050 Move X9, 0x4BC000
	051 Move X9, [X9+2000]
	052 Move X8, [X21]
	053 Move X9, [X9]
	054 Move W11, [X8+304]
	055 Move W10, [X9+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X11, [X8+200]
	058 Add X10, X11, X10
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, [X8+440]
	062 Move X1, [X8+448]
	063 Move X0, X21
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Compare X0, 0
	066 JumpIfEqual {78}
	067 Move X8, [X21]
	068 Move X0, X21
	069 Move X9, [X8+440]
	070 Move X1, [X8+448]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X0, 0
	073 JumpIfEqual {223}
	074 Move W8, [X0+16]
	075 Move W23, W8
	076 ShiftRight W23, 31
	077 And W23, W23, 0x3FFFFFFF
	078 Move W23, 512
	079 Move X8, 0x4BC000
	080 Move X8, [X8+2288]
	081 Move X29, 0x4BC000
	082 Move X26, 0x528000
	083 Move X28, 0x4BD000
	084 Move X29, [X29+2440]
	085 Move X26, [X26+1520]
	086 Move X28, [X28+4064]
	087 Move X0, [X8]
	088 Move X27, 0x4C0000
	089 Move X27, [X27+2344]
	090 Call 0x1C17F10
	091 Move W1, W23
	092 Move X2, X31
	093 Move X22, X0
	094 Call StringBuilder..ctor, X0, X1
	095 Move X8, [X29]
	096 Move [X20], X8
	097 Move X24, [X29]
	098 Compare X24, 0
	099 JumpIfEqual {223}
	100 Move X8, [X21]
	101 Move W25, [X24+16]
	102 Move X0, X21
	103 Move X9, [X8+440]
	104 Move X1, [X8+448]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X23, X0
	107 Compare W25, 0
	108 JumpIfEqual {115}
	109 Move X1, [X28]
	110 Move X0, X23
	111 Move X2, X24
	112 Move X3, X31
	113 Call String.Concat, X0, X1, X2
	114 Move X23, X0
	115 Move X0, X21
	116 Move X1, X31
	117 Call Exception.GetType, X0
	118 Compare X0, 0
	119 JumpIfEqual {223}
	120 Move X8, [X0]
	121 Move X9, [X8+424]
	122 Move X1, [X8+432]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, [X21]
	125 Move X25, [X29]
	126 Move X24, X0
	127 Move X0, X21
	128 Move X9, [X8+392]
	129 Move X1, [X8+400]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Compare X0, 0
	132 JumpIfEqual {139}
	133 Move X8, [X21]
	134 Move X0, X21
	135 Move X9, [X8+392]
	136 Move X1, [X8+400]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X25, X0
	139 Compare X25, 0
	140 JumpIfEqual {223}
	141 Move X0, X25
	142 Move X1, X31
	143 Call String.Trim, X0
	144 Compare X0, 0
	145 JumpIfEqual {223}
	146 Move W8, [X0+16]
	147 Compare W8, 0
	148 JumpIfEqual {157}
	149 Move X1, [X27]
	150 Move X0, X24
	151 Move X2, X31
	152 Call String.Concat, X0, X1
	153 Move X1, X25
	154 Move X2, X31
	155 Call String.Concat, X0, X1
	156 Move X24, X0
	157 Move [X20], X24
	158 Move X8, [X21+40]
	159 Compare X8, 0
	160 JumpIfEqual {171}
	161 Move X0, [X26]
	162 Move X2, [X28]
	163 Move X1, X24
	164 Move X3, X23
	165 Move X4, X31
	166 Call String.Concat, X0, X1, X2, X3
	167 Move X21, [X21+40]
	168 Move X24, X0
	169 Compare X21, 0
	170 JumpIfNotEqual {98}
	171 Move X24, X23
	172 Move X1, [X28]
	173 Move X0, X24
	174 Move X2, X31
	175 Call String.Concat, X0, X1
	176 Compare X22, 0
	177 JumpIfEqual {223}
	178 Move X1, X0
	179 Move X0, X22
	180 Move X2, X31
	181 Call StringBuilder.Append, X0, X1
	182 Move X8, 0x4EE000
	183 Move X8, [X8+2056]
	184 Move X0, [X8]
	185 Call 0x1C17F10
	186 Move W1, 1
	187 Move W2, 1
	188 Move X3, X31
	189 Move X20, X0
	190 Call StackTrace..ctor, X0, X1, X2
	191 Move X8, 0x500000
	192 Move X8, [X8+3528]
	193 Move X0, [X8]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X20
	199 Call StackTraceUtility.ExtractFormattedStackTrace, X0
	200 Move X1, X0
	201 Move X0, X22
	202 Move X2, X31
	203 Call StringBuilder.Append, X0, X1
	204 Move X8, [X22]
	205 Move X0, X22
	206 Move X9, [X8+360]
	207 Move X1, [X8+368]
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Move [X19], X0
	210 Move X20, [X31+80]
	211 Move X19, [X31+88]
	212 Move X22, [X31+64]
	213 Move X21, [X31+72]
	214 Move X24, [X31+48]
	215 Move X23, [X31+56]
	216 Move X26, [X31+32]
	217 Move X25, [X31+40]
	218 Move X28, [X31+16]
	219 Move X27, [X31+24]
	220 Move X29, [X31+96]
	221 Move X30, [X31+104]
	222 Return 
	223 Call 0x1C17F20
	224 Move X0, 0x4C4000
	225 Move X0, [X0+1400]
	226 Call 0x1C17D08
	227 Call 0x1C17F10
	228 Move X19, X0
	229 Move X0, 0x528000
	230 Move X0, [X0+1528]
	231 Move X0, 0x4C4000
	232 Move X0, [X0+1400]
	233 Call 0x1C17D08
	234 Call 0x1C17F10
	235 Move X19, X0
	236 Move X0, 0x528000
	237 Move X0, [X0+1536]
	238 Call 0x1C17D08
	239 Move X1, X0
	240 Move X0, X19
	241 Move X2, X31
	242 Call ArgumentException..ctor, X0, X1
	243 Move X0, 0x528000
	244 Move X0, [X0+1544]
	245 Call 0x1C17D08
	246 Move X1, X0
	247 Move X0, X19
	248 Call 0x1C17DEC

Method: System.String ExtractFormattedStackTrace(System.Diagnostics.StackTrace stackTrace)

Disassembly:
	0x03C380DC LDR X0, [X0 + 0x6F8]
	0x03C380E0 BL 0x1C16CF4
	0x03C380E4 ADRP X0, 0x4EA000
	0x03C380E8 LDR X0, [X0 + 0x828]
	0x03C380EC BL 0x1C16CF4
	0x03C380F0 ADRP X0, 0x4EA000
	0x03C380F4 LDR X0, [X0 + 0x8D0]
	0x03C380F8 BL 0x1C16CF4
	0x03C380FC ADRP X0, 0x4EA000
	0x03C38100 LDR X0, [X0 + 0x650]
	0x03C38104 BL 0x1C16CF4
	0x03C38108 MOVZ W8, 0x1
	0x03C3810C STRB W8, [X19 + 0x4EA]
	0x03C38110 MOV X0, X31
	0x03C38114 BL 0x3241948
	0x03C38118 CBZ X0, 0x3C383E4
	0x03C3811C ADRP X19, 0x4EA000
	0x03C38120 ADRP X21, 0x4EA000
	0x03C38124 LDR X19, [X19 + 0x368]
	0x03C38128 LDR X21, [X21 + 0x650]
	0x03C3812C LDR X8, [X0]
	0x03C38130 ADRP X22, 0x4EA000
	0x03C38134 ADRP X25, 0x527000
	0x03C38138 ADRP X23, 0x4EA000
	0x03C3813C LDR X22, [X22 + 0x648]
	0x03C38140 LDR X25, [X25 + 0x618]
	0x03C38144 LDR X23, [X23 + 0x6F8]
	0x03C38148 LDR X9, [X8 + 0x328]
	0x03C3814C LDR X1, [X8 + 0x330]
	0x03C38150 ADRP X28, 0x4EA000
	0x03C38154 ADRP X27, 0x4EA000
	0x03C38158 ADRP X26, 0x527000
	0x03C3815C LDR X28, [X28 + 0x8D0]
	0x03C38160 LDR X27, [X27 + 0x828]
	0x03C38164 LDR X26, [X26 + 0x630]
	0x03C38168 BLR X9
	0x03C3816C LDR X8, [X19]
	0x03C38170 MOV W19, W0
	0x03C38174 MOV X0, X8
	0x03C38178 BL 0x1C16F10
	0x03C3817C LDR X1, [X21]
	0x03C38180 MOV X2, X31
	0x03C38184 MOV X20, X0
	0x03C38188 BL 0x322F374
	0x03C3818C LDR X0, [X22]
	0x03C38190 BL 0x1C16F10
	0x03C38194 LDR X1, [X21]
	0x03C38198 MOV X2, X31
	0x03C3819C MOV X21, X0
	0x03C381A0 BL 0x33FE644
	0x03C381A4 MOV W0, W19
	0x03C381A8 MOV X1, X20
	0x03C381AC MOV X2, X21
	0x03C381B0 MOV X3, X31
	0x03C381B4 BL 0x324371C
	0x03C381B8 LDR X8, [X25]
	0x03C381BC LDR X8, [X8 + 0xB8]
	0x03C381C0 STR X0, [X8 + 0x8]
	0x03C381C4 LDR X0, [X23]
	0x03C381C8 BL 0x1C16F10
	0x03C381CC MOVZ W1, 0x1
	0x03C381D0 MOVZ W2, 0x1
	0x03C381D4 MOVZ W3, 0x1
	0x03C381D8 MOV X4, X31
	0x03C381DC MOV X24, X0
	0x03C381E0 BL 0x3235C4C
	0x03C381E4 LDR X0, [X23]
	0x03C381E8 BL 0x1C16F10
	0x03C381EC MOVZ W2, 0x1
	0x03C381F0 MOVZ W3, 0x1
	0x03C381F4 MOV W1, W31
	0x03C381F8 MOV X4, X31
	0x03C381FC MOV X23, X0
	0x03C38200 BL 0x3235C4C
	0x03C38204 LDR X0, [X28]
	0x03C38208 BL 0x1C16F10
	0x03C3820C MOVZ W1, 0x1
	0x03C38210 MOVZ W2, 0x1
	0x03C38214 MOVZ W3, 0x1
	0x03C38218 MOV X4, X31
	0x03C3821C MOV X22, X0
	0x03C38220 BL 0x323D808
	0x03C38224 LDR X0, [X28]
	0x03C38228 BL 0x1C16F10
	0x03C3822C MOVZ W2, 0x1
	0x03C38230 MOVZ W3, 0x1
	0x03C38234 MOV W1, W31
	0x03C38238 MOV X4, X31
	0x03C3823C MOV X21, X0
	0x03C38240 BL 0x323D808
	0x03C38244 LDR X0, [X27]
	0x03C38248 BL 0x1C16F10
	0x03C3824C MOVZ W1, 0x1
	0x03C38250 MOVZ W2, 0x1
	0x03C38254 MOV X3, X31
	0x03C38258 MOV X19, X0
	0x03C3825C BL 0x323A334
	0x03C38260 LDR X0, [X26]
	0x03C38264 MOVZ W1, 0x5
	0x03C38268 BL 0x1C16D6C
	0x03C3826C CBZ X24, 0x3C383E4
	0x03C38270 LDR X8, [X24]
	0x03C38274 ADRP X26, 0x527000
	0x03C38278 MOV X20, X0
	0x03C3827C MOV X0, X24
	0x03C38280 LDP X9, X1, [X8 + 0x198]
	0x03C38284 LDR X26, [X26 + 0x638]
	0x03C38288 BLR X9
	0x03C3828C LDR X3, [X26]
	0x03C38290 MOV X1, X0
	0x03C38294 ADD X0, X31, 0x40
	0x03C38298 MOV X2, X24
	0x03C3829C STP X31, X31, [X31 + 0x40]
	0x03C382A0 BL 0x2EE2840
	0x03C382A4 CBZ X20, 0x3C383E4
	0x03C382A8 LDR W8, [X20 + 0x18]
	0x03C382AC CBZ W8, 0x3C383E8
	0x03C382B0 LDR V0, [X31 + 0x4]
	0x03C382B4 STR V0, [X20 + 0x2]
	0x03C382B8 CBZ X23, 0x3C383E4
	0x03C382BC LDR X8, [X23]
	0x03C382C0 MOV X0, X23
	0x03C382C4 LDP X9, X1, [X8 + 0x198]
	0x03C382C8 BLR X9
	0x03C382CC LDR X3, [X26]
	0x03C382D0 MOV X1, X0
	0x03C382D4 ADD X0, X31, 0x30
	0x03C382D8 MOV X2, X23
	0x03C382DC STP X31, X31, [X31 + 0x30]
	0x03C382E0 BL 0x2EE2840
	0x03C382E4 LDR W8, [X20 + 0x18]
	0x03C382E8 CMP W8, 0x1
	0x03C382EC B.LS 0x3C383E8
	0x03C382F0 LDR V0, [X31 + 0x3]
	0x03C382F4 STR V0, [X20 + 0x3]
	0x03C382F8 CBZ X22, 0x3C383E4
	0x03C382FC LDR X8, [X22]
	0x03C38300 MOV X0, X22
	0x03C38304 LDP X9, X1, [X8 + 0x198]
	0x03C38308 BLR X9
	0x03C3830C LDR X3, [X26]
	0x03C38310 MOV X1, X0
	0x03C38314 ADD X0, X31, 0x20
	0x03C38318 MOV X2, X22
	0x03C3831C STP X31, X31, [X31 + 0x20]
	0x03C38320 BL 0x2EE2840
	0x03C38324 LDR W8, [X20 + 0x18]
	0x03C38328 CMP W8, 0x2
	0x03C3832C B.LS 0x3C383E8
	0x03C38330 LDR V0, [X31 + 0x2]
	0x03C38334 STR V0, [X20 + 0x4]
	0x03C38338 CBZ X21, 0x3C383E4
	0x03C3833C LDR X8, [X21]
	0x03C38340 MOV X0, X21
	0x03C38344 LDP X9, X1, [X8 + 0x198]
	0x03C38348 BLR X9
	0x03C3834C LDR X3, [X26]
	0x03C38350 MOV X1, X0
	0x03C38354 ADD X0, X31, 0x10
	0x03C38358 MOV X2, X21
	0x03C3835C STP X31, X31, [X31 + 0x10]
	0x03C38360 BL 0x2EE2840
	0x03C38364 LDR W8, [X20 + 0x18]
	0x03C38368 CMP W8, 0x3
	0x03C3836C B.LS 0x3C383E8
	0x03C38370 LDR V0, [X31 + 0x1]
	0x03C38374 STR V0, [X20 + 0x5]
	0x03C38378 CBZ X19, 0x3C383E4
	0x03C3837C LDR X8, [X19]
	0x03C38380 MOV X0, X19
	0x03C38384 LDP X9, X1, [X8 + 0x198]
	0x03C38388 BLR X9
	0x03C3838C LDR X3, [X26]
	0x03C38390 MOV X1, X0
	0x03C38394 ADD X0, X31, 0x0
	0x03C38398 MOV X2, X19
	0x03C3839C STP X31, X31, [X31]
	0x03C383A0 BL 0x2EE2840
	0x03C383A4 LDR W8, [X20 + 0x18]
	0x03C383A8 CMP W8, 0x4
	0x03C383AC B.LS 0x3C383E8
	0x03C383B0 LDR V0, [X31]
	0x03C383B4 LDP X22, X21, [X31 + 0x90]
	0x03C383B8 LDP X24, X23, [X31 + 0x80]
	0x03C383BC LDP X28, X27, [X31 + 0x60]
	0x03C383C0 STR V0, [X20 + 0x6]
	0x03C383C4 LDR X8, [X25]
	0x03C383C8 LDP X26, X25, [X31 + 0x70]
	0x03C383CC LDR X30, [X31 + 0x50]
	0x03C383D0 LDR X8, [X8 + 0xB8]
	0x03C383D4 STR X20, [X8]
	0x03C383D8 LDP X20, X19, [X31 + 0xA0]
	0x03C383DC ADD X31, X31, 0xB0
	0x03C383E0 RET
	0x03C383E4 BL 0x1C16F20
	0x03C383E8 BL 0x1C16F28
	0x03C383EC STR X30, [X31 - 0x30]!
	0x03C383F0 STP X22, X21, [X31 + 0x10]
	0x03C383F4 STP X20, X19, [X31 + 0x20]
	0x03C383F8 ADRP X19, 0x7AD000
	0x03C383FC ADRP X22, 0x527000
	0x03C38400 LDRB W8, [X19 + 0x4EB]
	0x03C38404 LDR X22, [X22 + 0x640]
	0x03C38408 TBNZ X8, 0x0, 0x3C38438
	0x03C3840C ADRP X0, 0x527000
	0x03C38410 LDR X0, [X0 + 0x648]
	0x03C38414 BL 0x1C16CF4
	0x03C38418 ADRP X0, 0x527000
	0x03C3841C LDR X0, [X0 + 0x640]
	0x03C38420 BL 0x1C16CF4
	0x03C38424 ADRP X0, 0x4F4000
	0x03C38428 LDR X0, [X0 + 0x5F0]
	0x03C3842C BL 0x1C16CF4
	0x03C38430 MOVZ W8, 0x1
	0x03C38434 STRB W8, [X19 + 0x4EB]
	0x03C38438 MOV X0, X31
	0x03C3843C BL 0x33C0128
	0x03C38440 LDR X8, [X22]
	0x03C38444 MOV X19, X0
	0x03C38448 LDR W9, [X8 + 0xE0]
	0x03C3844C CBNZ W9, 0x3C3845C
	0x03C38450 MOV X0, X8
	0x03C38454 BL 0x1C16DFC
	0x03C38458 LDR X8, [X22]
	0x03C3845C LDR X9, [X8 + 0xB8]
	0x03C38460 LDR X20, [X9 + 0x8]
	0x03C38464 CBNZ X20, 0x3C384BC
	0x03C38468 LDR W9, [X8 + 0xE0]
	0x03C3846C CBNZ W9, 0x3C3847C
	0x03C38470 MOV X0, X8
	0x03C38474 BL 0x1C16DFC
	0x03C38478 LDR X8, [X22]
	0x03C3847C ADRP X9, 0x4F4000
	0x03C38480 LDR X8, [X8 + 0xB8]
	0x03C38484 LDR X9, [X9 + 0x5F0]
	0x03C38488 LDR X21, [X8]
	0x03C3848C LDR X0, [X9]
	0x03C38490 BL 0x1C16F10
	0x03C38494 ADRP X8, 0x527000
	0x03C38498 LDR X8, [X8 + 0x648]
	0x03C3849C MOV X1, X21
	0x03C384A0 MOV X3, X31
	0x03C384A4 MOV X20, X0
	0x03C384A8 LDR X2, [X8]
	0x03C384AC BL 0x339B778
	0x03C384B0 LDR X8, [X22]
	0x03C384B4 LDR X8, [X8 + 0xB8]
	0x03C384B8 STR X20, [X8 + 0x8]
	0x03C384BC CBZ X19, 0x3C384DC
	0x03C384C0 MOV X0, X19
	0x03C384C4 MOV X1, X20
	0x03C384C8 LDP X20, X19, [X31 + 0x20]
	0x03C384CC LDP X22, X21, [X31 + 0x10]
	0x03C384D0 MOV X2, X31
	0x03C384D4 LDR X30, [X31], #0x30
	0x03C384D8 B 0x33C1268
	0x03C384DC BL 0x1C16F20
	0x03C384E0 STR X30, [X31 - 0x20]!
	0x03C384E4 STP X20, X19, [X31 + 0x10]
	0x03C384E8 ADRP X19, 0x7AD000
	0x03C384EC ADRP X20, 0x527000
	0x03C384F0 LDRB W8, [X19 + 0x4EC]
	0x03C384F4 LDR X20, [X20 + 0x640]
	0x03C384F8 TBNZ X8, 0x0, 0x3C38510
	0x03C384FC ADRP X0, 0x527000
	0x03C38500 LDR X0, [X0 + 0x640]
	0x03C38504 BL 0x1C16CF4
	0x03C38508 MOVZ W8, 0x1
	0x03C3850C STRB W8, [X19 + 0x4EC]
	0x03C38510 LDR X0, [X20]
	0x03C38514 BL 0x1C16F10
	0x03C38518 MOV X1, X31
	0x03C3851C MOV X19, X0
	0x03C38520 BL 0x33BDD8C
	0x03C38524 LDR X8, [X20]
	0x03C38528 LDR X8, [X8 + 0xB8]
	0x03C3852C STR X19, [X8]
	0x03C38530 LDP X20, X19, [X31 + 0x10]
	0x03C38534 LDR X30, [X31], #0x20
	0x03C38538 RET
	0x03C3853C MOV X1, X31
	0x03C38540 B 0x33BDD8C
	0x03C38544 STR X30, [X31 - 0x20]!
	0x03C38548 STP X20, X19, [X31 + 0x10]
	0x03C3854C ADRP X20, 0x7AD000
	0x03C38550 LDRB W8, [X20 + 0x4ED]
	0x03C38554 MOV X19, X2
	0x03C38558 TBNZ X8, 0x0, 0x3C3857C
	0x03C3855C ADRP X0, 0x4BB000
	0x03C38560 LDR X0, [X0 + 0xA28]
	0x03C38564 BL 0x1C16CF4
	0x03C38568 ADRP X0, 0x4BB000
	0x03C3856C LDR X0, [X0 + 0x7D0]
	0x03C38570 BL 0x1C16CF4
	0x03C38574 MOVZ W8, 0x1
	0x03C38578 STRB W8, [X20 + 0x4ED]
	0x03C3857C CBZ X19, 0x3C385F4
	0x03C38580 ADRP X8, 0x4BB000
	0x03C38584 LDR X8, [X8 + 0xA28]
	0x03C38588 LDR X19, [X19 + 0x10]
	0x03C3858C LDR X0, [X8]
	0x03C38590 LDR W8, [X0 + 0xE0]
	0x03C38594 CBZ W8, 0x3C385A0
	0x03C38598 CBNZ X19, 0x3C385A8
	0x03C3859C B 0x3C385C8
	0x03C385A0 BL 0x1C16DFC
	0x03C385A4 CBZ X19, 0x3C385C8
	0x03C385A8 ADRP X8, 0x4BB000
	0x03C385AC LDR X8, [X8 + 0x7D0]
	0x03C385B0 LDR X9, [X19]
	0x03C385B4 LDR X8, [X8]
	0x03C385B8 LDRB W11, [X9 + 0x130]
	0x03C385BC LDRB W10, [X8 + 0x130]
	0x03C385C0 CMP W11, W10
	0x03C385C4 B.CS 0x3C385D0
	0x03C385C8 MOV X0, X31
	0x03C385CC B 0x3C385E4
	0x03C385D0 LDR X9, [X9 + 0xC8]
	0x03C385D4 ADD X9, X9, X10, 0x3, LSL
	0x03C385D8 LDUR X9, [X9 - 0x8]
	0x03C385DC CMP X9, X8
	0x03C385E0 CSEL X0, X19, X31, EQ
	0x03C385E4 LDP X20, X19, [X31 + 0x10]
	0x03C385E8 MOV X1, X31
	0x03C385EC LDR X30, [X31], #0x20
	0x03C385F0 B 0x3C02C84
	0x03C385F4 BL 0x1C16F20
	0x03C385F8 SUB X31, X31, 0x30
	0x03C385FC STP X30, X21, [X31 + 0x10]
	0x03C38600 STP X20, X19, [X31 + 0x20]
	0x03C38604 ADRP X20, 0x7AD000
	0x03C38608 LDRB W8, [X20 + 0x4EE]
	0x03C3860C MOV X19, X0
	0x03C38610 TBNZ X8, 0x0, 0x3C38628
	0x03C38614 ADRP X0, 0x4BB000
	0x03C38618 LDR X0, [X0 + 0x598]
	0x03C3861C BL 0x1C16CF4
	0x03C38620 MOVZ W8, 0x1
	0x03C38624 STRB W8, [X20 + 0x4EE]
	0x03C38628 LDR X0, [X19 + 0x10]!
	0x03C3862C MOV X1, X31
	0x03C38630 MOV X2, X31
	0x03C38634 BL 0x33BE5B0
	0x03C38638 TBZ X0, 0x0, 0x3C38644
	0x03C3863C MOV W0, W31
	0x03C38640 B 0x3C38700
	0x03C38644 ADRP X20, 0x4BB000
	0x03C38648 LDR X20, [X20 + 0x598]
	0x03C3864C LDR X0, [X20]
	0x03C38650 LDR W8, [X0 + 0xE0]
	0x03C38654 CBNZ W8, 0x3C38660
	0x03C38658 BL 0x1C16DFC
	0x03C3865C LDR X0, [X20]
	0x03C38660 LDR X8, [X0 + 0xB8]
	0x03C38664 LDR W8, [X8]
	0x03C38668 ADDS W31, W8, 0x1
	0x03C3866C B.NE 0x3C386AC
	0x03C38670 LDR W8, [X0 + 0xE0]
	0x03C38674 CBNZ W8, 0x3C3867C
	0x03C38678 BL 0x1C16DFC
	0x03C3867C ADRP X21, 0x7AD000
	0x03C38680 LDR X8, [X21 + 0x550]
	0x03C38684 CBNZ X8, 0x3C3869C
	0x03C38688 ADRP X0, 0xFFFFFFFFFCEE6000
	0x03C3868C ADD X0, X0, 0xD85
	0x03C38690 BL 0x1C16CB8
	0x03C38694 MOV X8, X0
	0x03C38698 STR X0, [X21 + 0x550]
	0x03C3869C BLR X8
	0x03C386A0 LDR X8, [X20]
	0x03C386A4 LDR X8, [X8 + 0xB8]
	0x03C386A8 STR W0, [X8]
	0x03C386AC MOV X0, X19
	0x03C386B0 MOV X1, X31
	0x03C386B4 BL 0x33C6854
	0x03C386B8 LDR X8, [X20]
	0x03C386BC MOV X19, X0
	0x03C386C0 LDR W9, [X8 + 0xE0]
	0x03C386C4 CBNZ W9, 0x3C386D4
	0x03C386C8 MOV X0, X8
	0x03C386CC BL 0x1C16DFC
	0x03C386D0 LDR X8, [X20]
	0x03C386D4 LDR X8, [X8 + 0xB8]
	0x03C386D8 ADD X0, X31, 0x8
	0x03C386DC MOV X2, X31
	0x03C386E0 LDRSW X8, [X8]
	0x03C386E4 STR X31, [X31 + 0x8]
	0x03C386E8 ADD X1, X19, X8
	0x03C386EC BL 0x33C673C
	0x03C386F0 LDR X0, [X31 + 0x8]
	0x03C386F4 MOV X1, X31
	0x03C386F8 BL 0x33C6948
	0x03C386FC LDR W0, [X0]
	0x03C38700 LDP X20, X19, [X31 + 0x20]
	0x03C38704 LDP X30, X21, [X31 + 0x10]
	0x03C38708 ADD X31, X31, 0x30
	0x03C3870C RET
	0x03C38710 STP X30, X19, [X31 - 0x10]!
	0x03C38714 ADRP X19, 0x7AD000
	0x03C38718 LDR X0, [X19 + 0x550]
	0x03C3871C CBNZ X0, 0x3C38730
	0x03C38720 ADRP X0, 0xFFFFFFFFFCEE6000
	0x03C38724 ADD X0, X0, 0xD85
	0x03C38728 BL 0x1C16CB8
	0x03C3872C STR X0, [X19 + 0x550]
	0x03C38730 LDP X30, X19, [X31], #0x10
	0x03C38734 BR X0
	0x03C38738 MOV X1, X31
	0x03C3873C B 0x33CB4E0
	0x03C38740 STR X30, [X31 - 0x30]!
	0x03C38744 STP X22, X21, [X31 + 0x10]
	0x03C38748 STP X20, X19, [X31 + 0x20]
	0x03C3874C ADRP X21, 0x7AD000
	0x03C38750 ADRP X22, 0x4BB000
	0x03C38754 LDRB W8, [X21 + 0x4EF]
	0x03C38758 LDR X22, [X22 + 0x598]
	0x03C3875C MOV X20, X1
	0x03C38760 MOV X19, X0
	0x03C38764 TBNZ X8, 0x0, 0x3C3877C
	0x03C38768 ADRP X0, 0x4BB000
	0x03C3876C LDR X0, [X0 + 0x598]
	0x03C38770 BL 0x1C16CF4
	0x03C38774 MOVZ W8, 0x1
	0x03C38778 STRB W8, [X21 + 0x4EF]
	0x03C3877C LDR X0, [X22]
	0x03C38780 CBZ X20, 0x3C38798
	0x03C38784 LDR X8, [X20]
	0x03C38788 LDRB W9, [X0 + 0x130]
	0x03C3878C LDRB W10, [X8 + 0x130]
	0x03C38790 CMP W10, W9
	0x03C38794 B.CS 0x3C387A0
	0x03C38798 MOV X21, X31
	0x03C3879C B 0x3C387B4
	0x03C387A0 LDR X8, [X8 + 0xC8]
	0x03C387A4 ADD X8, X8, X9, 0x3, LSL
	0x03C387A8 LDUR X8, [X8 - 0x8]
	0x03C387AC CMP X8, X0
	0x03C387B0 CSEL X21, X20, X31, EQ
	0x03C387B4 LDR W8, [X0 + 0xE0]
	0x03C387B8 CBNZ W8, 0x3C387C0
	0x03C387BC BL 0x1C16DFC
	0x03C387C0 MOV X0, X21
	0x03C387C4 MOV X1, X31
	0x03C387C8 BL 0x3C3883C
	0x03C387CC LDR X8, [X22]
	0x03C387D0 CBZ X20, 0x3C38814
	0x03C387D4 TBZ X0, 0x0, 0x3C38814
	0x03C387D8 LDR X9, [X20]
	0x03C387DC LDRB W10, [X8 + 0x130]
	0x03C387E0 LDRB W11, [X9 + 0x130]
	0x03C387E4 CMP W11, W10

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x7AE000
	015 Move X20, 0x4BC000
	016 Move W8, [X21+1227]
	017 Move X20, [X20+2288]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {85}
	023 Move X0, 0x500000
	024 Move X0, [X0+3528]
	025 Call 0x1C17CF4
	026 Move X0, 0x4BC000
	027 Move X0, [X0+2288]
	028 Call 0x1C17CF4
	029 Move X0, 0x4BC000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0x4BD000
	033 Move X0, [X0+4064]
	034 Call 0x1C17CF4
	035 Move X0, 0x4F0000
	036 Move X0, [X0+2040]
	037 Call 0x1C17CF4
	038 Move X0, 0x528000
	039 Move X0, [X0+1448]
	040 Call 0x1C17CF4
	041 Move X0, 0x528000
	042 Move X0, [X0+1456]
	043 Call 0x1C17CF4
	044 Move X0, 0x4BC000
	045 Move X0, [X0+2104]
	046 Call 0x1C17CF4
	047 Move X0, 0x4BD000
	048 Move X0, [X0+3784]
	049 Call 0x1C17CF4
	050 Move X0, 0x4C5000
	051 Move X0, [X0+2440]
	052 Call 0x1C17CF4
	053 Move X0, 0x528000
	054 Move X0, [X0+1464]
	055 Call 0x1C17CF4
	056 Move X0, 0x4C7000
	057 Move X0, [X0+784]
	058 Call 0x1C17CF4
	059 Move X0, 0x528000
	060 Move X0, [X0+1472]
	061 Call 0x1C17CF4
	062 Move X0, 0x4BD000
	063 Move X0, [X0+1544]
	064 Call 0x1C17CF4
	065 Move X0, 0x528000
	066 Move X0, [X0+1480]
	067 Call 0x1C17CF4
	068 Move X0, 0x528000
	069 Move X0, [X0+1488]
	070 Call 0x1C17CF4
	071 Move X0, 0x528000
	072 Move X0, [X0+1496]
	073 Call 0x1C17CF4
	074 Move X0, 0x528000
	075 Move X0, [X0+1504]
	076 Call 0x1C17CF4
	077 Move X0, 0x528000
	078 Move X0, [X0+1512]
	079 Call 0x1C17CF4
	080 Move X0, 0x4C5000
	081 Move X0, [X0+1936]
	082 Call 0x1C17CF4
	083 Move W8, 1
	084 Move [X21+1227], W8
	085 Move X0, [X20]
	086 Move [X31+12], W31
	087 Call 0x1C17F10
	088 Move W1, 255
	089 Move X2, X31
	090 Move X20, X0
	091 Call StringBuilder..ctor, X0, X1
	092 Compare X19, 0
	093 JumpIfEqual {546}
	094 Move X8, [X19]
	095 Move X0, X19
	096 Move X9, [X8+376]
	097 Move X1, [X8+384]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X26, 0x4BC000
	101 Move X29, 0x4BC000
	102 Move X28, 0x4BD000
	103 Move X26, [X26+1728]
	104 Move X29, [X29+2104]
	105 Move X28, [X28+1544]
	106 Move W21, W31
	107 Move X8, [X19]
	108 Move X0, X19
	109 Move W1, W21
	110 Move X9, [X8+392]
	111 Move X2, [X8+400]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Compare X0, 0
	114 JumpIfEqual {546}
	115 Move X8, [X0]
	116 Move X22, X0
	117 Move X9, [X8+424]
	118 Move X1, [X8+432]
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X1, X31
	121 Move X2, X31
	122 Move X24, X0
	123 Call MethodBase.op_Equality, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {518}
	128 Compare X24, 0
	129 JumpIfEqual {546}
	130 Move X8, [X24]
	131 Move X0, X24
	132 Move X9, [X8+440]
	133 Move X1, [X8+448]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X8, [X26]
	136 Move X23, X0
	137 Move W9, [X8+224]
	138 Compare W9, 0
	139 JumpIfNotEqual {142}
	140 Move X0, X8
	141 Call 0x1C17DFC
	142 Move X0, X23
	143 Move X1, X31
	144 Move X2, X31
	145 Call Type.op_Equality, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {518}
	150 Compare X23, 0
	151 JumpIfEqual {546}
	152 Move X8, [X23]
	153 Move X0, X23
	154 Move X9, [X8+712]
	155 Move X1, [X8+720]
	156 NotImplemented "Instruction BLR not yet implemented."
	157 Move X1, X31
	158 Move X25, X0
	159 Call String.IsNullOrEmpty, X0
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {176}
	164 Compare X20, 0
	165 JumpIfEqual {546}
	166 Move X0, X20
	167 Move X1, X25
	168 Move X2, X31
	169 Call StringBuilder.Append, X0, X1
	170 Move X8, 0x4C5000
	171 Move X8, [X8+1936]
	172 Move X0, X20
	173 Move X2, X31
	174 Move X1, [X8]
	175 Call StringBuilder.Append, X0, X1
	176 Move X8, [X23]
	177 Move X0, X23
	178 Move X9, [X8+424]
	179 Move X1, [X8+432]
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Compare X20, 0
	182 JumpIfEqual {546}
	183 Move X1, X0
	184 Move X0, X20
	185 Move X2, X31
	186 Call StringBuilder.Append, X0, X1
	187 Move X8, 0x4C5000
	188 Move X8, [X8+2440]
	189 Move X0, X20
	190 Move X2, X31
	191 Move X1, [X8]
	192 Call StringBuilder.Append, X0, X1
	193 Move X8, [X24]
	194 Move X0, X24
	195 Move X9, [X8+424]
	196 Move X1, [X8+432]
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X1, X0
	199 Move X0, X20
	200 Move X2, X31
	201 Call StringBuilder.Append, X0, X1
	202 Move X8, 0x4C7000
	203 Move X8, [X8+784]
	204 Move X0, X20
	205 Move X2, X31
	206 Move X1, [X8]
	207 Call StringBuilder.Append, X0, X1
	208 Move X8, [X24]
	209 Move X0, X24
	210 Move X9, [X8+584]
	211 Move X1, [X8+592]
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Compare X0, 0
	214 JumpIfEqual {546}
	215 Move W8, [X0+24]
	216 Move X25, X0
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move W27, W31
	219 Move W9, 1
	220 Move TEMP, X9
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfEqual {229}
	224 Move X1, [X29]
	225 Move X0, X20
	226 Move X2, X31
	227 Call StringBuilder.Append, X0, X1
	228 Move W8, [X25+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Add X8, X25, W27
	231 Move X0, [X8+32]
	232 Compare X0, 0
	233 JumpIfEqual {546}
	234 Move X8, [X0]
	235 Move X9, [X8+472]
	236 Move X1, [X8+480]
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X0, 0
	239 JumpIfEqual {546}
	240 Move X8, [X0]
	241 Move X9, [X8+424]
	242 Move X1, [X8+432]
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move X1, X0
	245 Move X0, X20
	246 Move X2, X31
	247 Call StringBuilder.Append, X0, X1
	248 Move W8, [X25+24]
	249 Add W27, W27, 1
	250 Move W9, W31
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X1, [X28]
	253 Move X0, X20
	254 Move X2, X31
	255 Call StringBuilder.Append, X0, X1
	256 Move X8, [X22]
	257 Move X0, X22
	258 Move X9, [X8+392]
	259 Move X1, [X8+400]
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Compare X0, 0
	262 JumpIfEqual {512}
	263 Move X8, [X23]
	264 Move X25, X0
	265 Move X0, X23
	266 Move X9, [X8+424]
	267 Move X1, [X8+432]
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Move X8, 0x528000
	270 Move X8, [X8+1456]
	271 Move X2, X31
	272 Move X1, [X8]
	273 Call String.op_Equality, X0, X1
	274 Move TEMP, X0
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfNotEqual {292}
	278 Move X8, [X23]
	279 Move X0, X23
	280 Move X9, [X8+712]
	281 Move X1, [X8+720]
	282 NotImplemented "Instruction BLR not yet implemented."
	283 Move X8, 0x528000
	284 Move X8, [X8+1512]
	285 Move X2, X31
	286 Move X1, [X8]
	287 Call String.op_Equality, X0, X1
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfEqual {512}
	292 Move X8, [X23]
	293 Move X0, X23
	294 Move X9, [X8+424]
	295 Move X1, [X8+432]
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Move X8, 0x528000
	298 Move X8, [X8+1488]
	299 Move X2, X31
	300 Move X1, [X8]
	301 Call String.op_Equality, X0, X1
	302 Move TEMP, X0
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfNotEqual {320}
	306 Move X8, [X23]
	307 Move X0, X23
	308 Move X9, [X8+712]
	309 Move X1, [X8+720]
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move X8, 0x528000
	312 Move X8, [X8+1512]
	313 Move X2, X31
	314 Move X1, [X8]
	315 Call String.op_Equality, X0, X1
	316 Move TEMP, X0
	317 And TEMP, TEMP, 1
	318 Compare TEMP, 1
	319 JumpIfEqual {512}
	320 Move X8, [X23]
	321 Move X0, X23
	322 Move X9, [X8+424]
	323 Move X1, [X8+432]
	324 NotImplemented "Instruction BLR not yet implemented."
	325 Move X8, 0x528000
	326 Move X8, [X8+1448]
	327 Move X2, X31
	328 Move X1, [X8]
	329 Call String.op_Equality, X0, X1
	330 Move TEMP, X0
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfNotEqual {348}
	334 Move X8, [X23]
	335 Move X0, X23
	336 Move X9, [X8+712]
	337 Move X1, [X8+720]
	338 NotImplemented "Instruction BLR not yet implemented."
	339 Move X8, 0x528000
	340 Move X8, [X8+1512]
	341 Move X2, X31
	342 Move X1, [X8]
	343 Call String.op_Equality, X0, X1
	344 Move TEMP, X0
	345 And TEMP, TEMP, 1
	346 Compare TEMP, 1
	347 JumpIfEqual {512}
	348 Move X8, [X23]
	349 Move X0, X23
	350 Move X9, [X8+424]
	351 Move X1, [X8+432]
	352 NotImplemented "Instruction BLR not yet implemented."
	353 Move X8, 0x528000
	354 Move X8, [X8+1496]
	355 Move X2, X31
	356 Move X1, [X8]
	357 Call String.op_Equality, X0, X1
	358 Move TEMP, X0
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfNotEqual {376}
	362 Move X8, [X23]
	363 Move X0, X23
	364 Move X9, [X8+712]
	365 Move X1, [X8+720]
	366 NotImplemented "Instruction BLR not yet implemented."
	367 Move X8, 0x528000
	368 Move X8, [X8+1504]
	369 Move X2, X31
	370 Move X1, [X8]
	371 Call String.op_Equality, X0, X1
	372 Move TEMP, X0
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfEqual {512}
	376 Move X8, [X24]
	377 Move X0, X24
	378 Move X9, [X8+424]
	379 Move X1, [X8+432]
	380 NotImplemented "Instruction BLR not yet implemented."
	381 Move X8, 0x528000
	382 Move X8, [X8+1480]
	383 Move X2, X31
	384 Move X1, [X8]
	385 Call String.op_Equality, X0, X1
	386 Move TEMP, X0
	387 And TEMP, TEMP, 1
	388 Compare TEMP, 1
	389 JumpIfNotEqual {418}
	390 Move X8, [X23]
	391 Move X0, X23
	392 Move X9, [X8+424]
	393 Move X1, [X8+432]
	394 NotImplemented "Instruction BLR not yet implemented."
	395 Move X8, 0x528000
	396 Move X8, [X8+1464]
	397 Move X2, X31
	398 Move X1, [X8]
	399 Call String.op_Equality, X0, X1
	400 Move TEMP, X0
	401 And TEMP, TEMP, 1
	402 Compare TEMP, 1
	403 JumpIfNotEqual {418}
	404 Move X8, [X23]
	405 Move X0, X23
	406 Move X9, [X8+712]
	407 Move X1, [X8+720]
	408 NotImplemented "Instruction BLR not yet implemented."
	409 Move X8, 0x528000
	410 Move X8, [X8+1512]
	411 Move X2, X31
	412 Move X1, [X8]
	413 Call String.op_Equality, X0, X1
	414 Move TEMP, X0
	415 And TEMP, TEMP, 1
	416 Compare TEMP, 1
	417 JumpIfEqual {512}
	418 Move X8, 0x528000
	419 Move X8, [X8+1472]
	420 Move X0, X20
	421 Move X2, X31
	422 Move X1, [X8]
	423 Call StringBuilder.Append, X0, X1
	424 Move X24, 0x500000
	425 Move X24, [X24+3528]
	426 Move X0, [X24]
	427 Move W8, [X0+224]
	428 Compare W8, 0
	429 JumpIfNotEqual {432}
	430 Call 0x1C17DFC
	431 Move X0, [X24]
	432 Move X8, [X0+184]
	433 Move X1, X31
	434 Move X0, [X8]
	435 Call String.IsNullOrEmpty, X0
	436 Move TEMP, X0
	437 And TEMP, TEMP, 1
	438 Compare TEMP, 1
	439 JumpIfEqual {485}
	440 Move X8, 0x4F0000
	441 Move X8, [X8+2040]
	442 Move X0, X25
	443 Move X3, X31
	444 Move X1, [X8]
	445 Move X8, 0x4BD000
	446 Move X8, [X8+3784]
	447 Move X2, [X8]
	448 Call String.Replace, X0, X1, X2
	449 Move X8, [X24]
	450 Move X23, X0
	451 Move W9, [X8+224]
	452 Compare W9, 0
	453 JumpIfNotEqual {456}
	454 Move X0, X8
	455 Call 0x1C17DFC
	456 Compare X23, 0
	457 JumpIfEqual {546}
	458 Move X8, [X24]
	459 Move X0, X23
	460 Move X2, X31
	461 Move X8, [X8+184]
	462 Move X1, [X8]
	463 Call String.StartsWith, X0, X1
	464 Move TEMP, X0
	465 And TEMP, TEMP, 1
	466 Compare TEMP, 1
	467 JumpIfNotEqual {485}
	468 Move X0, [X24]
	469 Move W8, [X0+224]
	470 Compare W8, 0
	471 JumpIfNotEqual {474}
	472 Call 0x1C17DFC
	473 Move X0, [X24]
	474 Move X8, [X0+184]
	475 Move X8, [X8]
	476 Compare X8, 0
	477 JumpIfEqual {546}
	478 Move W1, [X8+16]
	479 Move W8, [X25+16]
	480 Move X0, X25
	481 Move X3, X31
	482 Subtract W2, W8, W1
	483 Call String.Substring, X0, X1, X2
	484 Move X25, X0
	485 Move X0, X20
	486 Move X1, X25
	487 Move X2, X31
	488 Call StringBuilder.Append, X0, X1
	489 Move X8, 0x4C5000
	490 Move X8, [X8+2440]
	491 Move X0, X20
	492 Move X2, X31
	493 Move X1, [X8]
	494 Call StringBuilder.Append, X0, X1
	495 Move X8, [X22]
	496 Move X0, X22
	497 Move X9, [X8+376]
	498 Move X1, [X8+384]
	499 NotImplemented "Instruction BLR not yet implemented."
	500 Move [X31+12], W0
	501 Add X0, X31, 12
	502 Move X1, X31
	503 Call Int32.ToString, X0
	504 Move X1, X0
	505 Move X0, X20
	506 Move X2, X31
	507 Call StringBuilder.Append, X0, X1
	508 Move X1, [X28]
	509 Move X0, X20
	510 Move X2, X31
	511 Call StringBuilder.Append, X0, X1
	512 Move X8, 0x4BD000
	513 Move X8, [X8+4064]
	514 Move X0, X20
	515 Move X2, X31
	516 Move X1, [X8]
	517 Call StringBuilder.Append, X0, X1
	518 Move X8, [X19]
	519 Move X0, X19
	520 Add W21, W21, 1
	521 Move X9, [X8+376]
	522 Move X1, [X8+384]
	523 NotImplemented "Instruction BLR not yet implemented."
	524 NotImplemented "Instruction CMP not yet implemented."
	525 Compare X20, 0
	526 JumpIfEqual {546}
	527 Move X8, [X20]
	528 Move X0, X20
	529 Move X9, [X8+360]
	530 Move X1, [X8+368]
	531 NotImplemented "Instruction BLR not yet implemented."
	532 Move X20, [X31+96]
	533 Move X19, [X31+104]
	534 Move X22, [X31+80]
	535 Move X21, [X31+88]
	536 Move X24, [X31+64]
	537 Move X23, [X31+72]
	538 Move X26, [X31+48]
	539 Move X25, [X31+56]
	540 Move X28, [X31+32]
	541 Move X27, [X31+40]
	542 Move X29, [X31+16]
	543 Move X30, [X31+24]
	544 Add X31, X31, 112
	545 Return X0
	546 Call 0x1C17F20
	547 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x03C38B44 LDP X30, X21, [X31], #0x20
	0x03C38B48 BR X2
	0x03C38B4C STR D14, [X31 - 0x60]!
	0x03C38B50 STP D13, D12, [X31 + 0x10]
	0x03C38B54 STP D11, D10, [X31 + 0x20]
	0x03C38B58 STP D9, D8, [X31 + 0x30]
	0x03C38B5C STP X30, X21, [X31 + 0x40]
	0x03C38B60 STP X20, X19, [X31 + 0x50]
	0x03C38B64 ADRP X21, 0x7AD000
	0x03C38B68 ADRP X20, 0x4BB000
	0x03C38B6C LDRB W8, [X21 + 0x4F4]
	0x03C38B70 LDR X20, [X20 + 0x598]
	0x03C38B74 MOV V8.16B, V6.16B
	0x03C38B78 MOV V9.16B, V5.16B
	0x03C38B7C MOV V10.16B, V4.16B
	0x03C38B80 MOV V11.16B, V3.16B
	0x03C38B84 MOV V12.16B, V2.16B
	0x03C38B88 MOV V13.16B, V1.16B
	0x03C38B8C MOV V14.16B, V0.16B
	0x03C38B90 MOV X19, X0
	0x03C38B94 TBNZ X8, 0x0, 0x3C38BC4
	0x03C38B98 ADRP X0, 0x4BB000
	0x03C38B9C LDR X0, [X0 + 0x598]
	0x03C38BA0 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7AE000
	006 Move X19, 0x4BC000
	007 Move X21, 0x500000
	008 Move W8, [X20+1228]
	009 Move X19, [X19+2440]
	010 Move X21, [X21+3528]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x500000
	016 Move X0, [X0+3528]
	017 Call 0x1C17CF4
	018 Move X0, 0x4BC000
	019 Move X0, [X0+2440]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1228], W8
	023 Move X8, [X21]
	024 Move X9, [X19]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X8, [X8+184]
	028 Move [X8], X9
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

