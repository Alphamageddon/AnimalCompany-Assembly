Type: UnityEngine.Sprite

Method: System.Void .ctor()

Disassembly:
	0x03C423C4 STR X31, [X21]
	0x03C423C8 CBZ X0, 0x3C425AC
	0x03C423CC LDR W8, [X0 + 0x18]
	0x03C423D0 CMP W8, 0x1
	0x03C423D4 B.NE 0x3C424DC
	0x03C423D8 LDR X0, [X0 + 0x20]
	0x03C423DC CBZ X0, 0x3C425AC
	0x03C423E0 ADRP X8, 0x511000
	0x03C423E4 LDR X8, [X8 + 0x778]
	0x03C423E8 LDR X1, [X8]
	0x03C423EC LDR X8, [X0]
	0x03C423F0 CMP X8, X1
	0x03C423F4 B.NE 0x3C425B0
	0x03C423F8 LDR X23, [X0 + 0x10]
	0x03C423FC MOV X1, X31
	0x03C42400 MOV X0, X23
	0x03C42404 BL 0x32277A8
	0x03C42408 TBNZ X0, 0x0, 0x3C424DC
	0x03C4240C CBZ X23, 0x3C425AC
	0x03C42410 ADRP X8, 0x51D000
	0x03C42414 LDR X8, [X8 + 0x868]
	0x03C42418 MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7A4000
	006 Move X21, 0x4B2000
	007 Move W8, [X20+2680]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4B2000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2680], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

Method: System.Int32 GetPackingRotation()

Disassembly:
	0x03C4241C MOV X2, X31
	0x03C42420 LDR X24, [X8]
	0x03C42424 MOV X1, X24
	0x03C42428 BL 0x322C2F0
	0x03C4242C TBNZ X0, 0x1F, 0x3C424DC
	0x03C42430 CBZ X24, 0x3C425AC
	0x03C42434 LDR W8, [X24 + 0x10]
	0x03C42438 MOV X2, X31
	0x03C4243C ADD W1, W8, W0
	0x03C42440 MOV X0, X23
	0x03C42444 BL 0x322B484
	0x03C42448 CBZ X0, 0x3C425AC
	0x03C4244C MOV X1, X31
	0x03C42450 BL 0x322B8DC
	0x03C42454 CBZ X0, 0x3C425AC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A4000
	005 Move X1, [X20+2688]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51593216
	010 Add X0, X0, 254
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2688], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 GetPacked()

Disassembly:
	0x03C42458 LDR W8, [X0 + 0x10]
	0x03C4245C MOV X23, X0
	0x03C42460 CBZ W8, 0x3C424DC
	0x03C42464 MOV X0, X23
	0x03C42468 MOV W1, W31
	0x03C4246C MOV X2, X31
	0x03C42470 BL 0x3222A1C
	0x03C42474 AND W8, W0, 0xFFFF
	0x03C42478 CMP W8, 0x5B
	0x03C4247C B.NE 0x3C424F4
	0x03C42480 MOVZ W1, 0x5D
	0x03C42484 MOV X0, X23
	0x03C42488 MOV X2, X31
	0x03C4248C BL 0x322BD98
	0x03C42490 ADDS W31, W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A4000
	005 Move X1, [X20+2696]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51494912
	010 Add X0, X0, 40
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2696], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Vector4 GetInnerUVs()

Disassembly:
	0x03C42494 B.EQ 0x3C424DC
	0x03C42498 MOV W24, W0
	0x03C4249C SUB W2, W0, 0x1
	0x03C424A0 MOVZ W1, 0x1
	0x03C424A4 MOV X0, X23
	0x03C424A8 MOV X3, X31
	0x03C424AC BL 0x3228DE4
	0x03C424B0 STR X0, [X22]
	0x03C424B4 ADD W1, W24, 0x1
	0x03C424B8 MOV X0, X23
	0x03C424BC MOV X2, X31
	0x03C424C0 BL 0x322B484
	0x03C424C4 CBZ X0, 0x3C425AC
	0x03C424C8 MOV X1, X31
	0x03C424CC BL 0x322B8DC
	0x03C424D0 MOV X23, X0
	0x03C424D4 CBNZ X0, 0x3C42528
	0x03C424D8 B 0x3C425AC
	0x03C424DC MOV W0, W31
	0x03C424E0 LDP X20, X19, [X31 + 0x30]
	0x03C424E4 LDP X22, X21, [X31 + 0x20]
	0x03C424E8 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7A4000
	007 Move X8, [X20+2760]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51486720
	013 Add X0, X0, 150
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+2760], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: UnityEngine.Vector4 GetOuterUVs()

Disassembly:
	0x03C42530 MOV X2, X31
	0x03C42534 BL 0x322C668
	0x03C42538 TBNZ X0, 0x1F, 0x3C4256C
	0x03C4253C MOV W22, W0
	0x03C42540 ADD W1, W0, 0x1
	0x03C42544 MOV X0, X23
	0x03C42548 MOV X2, X31
	0x03C4254C BL 0x322B484
	0x03C42550 STR X0, [X21]
	0x03C42554 MOV X0, X23
	0x03C42558 MOV W1, W31
	0x03C4255C MOV W2, W22
	0x03C42560 MOV X3, X31
	0x03C42564 BL 0x3228DE4
	0x03C42568 B 0x3C4257C
	0x03C4256C STR X23, [X21]
	0x03C42570 ADRP X8, 0x4B1000
	0x03C42574 LDR X8, [X8 + 0x988]
	0x03C42578 LDR X0, [X8]
	0x03C4257C CBZ X0, 0x3C425AC
	0x03C42580 LDR W8, [X0 + 0x10]
	0x03C42584 CMP W8, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7A4000
	007 Move X8, [X20+2768]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51675136
	013 Add X0, X0, 1412
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+2768], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: UnityEngine.Vector4 GetPadding()

Disassembly:
	0x03C425CC STR X30, [X31 - 0x10]!
	0x03C425D0 BL 0x1C16F20
	0x03C425D4 CBZ X0, 0x3C425DC
	0x03C425D8 B 0x3C415CC
	0x03C425DC STR X30, [X31 - 0x10]!
	0x03C425E0 BL 0x1C16F20
	0x03C425E4 STP D9, D8, [X31 - 0x20]!
	0x03C425E8 STP X30, X19, [X31 + 0x10]
	0x03C425EC CBZ X0, 0x3C42630
	0x03C425F0 MOV X19, X0
	0x03C425F4 BL 0x3C418F4
	0x03C425F8 MOV X0, X19
	0x03C425FC MOV V8.16B, V0.16B
	0x03C42600 BL 0x3C418F4
	0x03C42604 MOV X0, X19
	0x03C42608 FADD S8, S8, S2
	0x03C4260C BL 0x3C418F4
	0x03C42610 MOV X0, X19
	0x03C42614 MOV V9.16B, V1.16B
	0x03C42618 BL 0x3C418F4
	0x03C4261C LDP X30, X19, [X31 + 0x10]
	0x03C42620 FADD S1, S9, S3

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7A4000
	007 Move X8, [X20+2776]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51691520
	013 Add X0, X0, 1360
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+2776], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: UnityEngine.Sprite CreateSprite(UnityEngine.Texture2D texture, UnityEngine.Rect rect, UnityEngine.Vector2 pivot, System.Single pixelsPerUnit, System.UInt32 extrude, UnityEngine.SpriteMeshType meshType, UnityEngine.Vector4 border, System.Boolean generateFallbackPhysicsShape, UnityEngine.SecondarySpriteTexture[] secondaryTexture)

Disassembly:
	0x03C42668 LDR V8, [X31], #0x20
	0x03C4266C BR X0
	0x03C42670 LDR X0, [X0]
	0x03C42674 MOV X1, X31
	0x03C42678 B 0x33C6948
	0x03C4267C LDR W0, [X0 + 0x8]
	0x03C42680 RET
	0x03C42684 LDR W0, [X0 + 0xC]
	0x03C42688 RET
	0x03C4268C LDR W0, [X0 + 0x10]
	0x03C42690 RET
	0x03C42694 SUB X31, X31, 0x40
	0x03C42698 STP X30, X21, [X31 + 0x20]
	0x03C4269C STP X20, X19, [X31 + 0x30]
	0x03C426A0 ADRP X20, 0x7A3000
	0x03C426A4 LDRB W8, [X20 + 0xB18]
	0x03C426A8 MOV X19, X0
	0x03C426AC TBNZ X8, 0x0, 0x3C426C4
	0x03C426B0 ADRP X0, 0x51D000
	0x03C426B4 LDR X0, [X0 + 0x870]
	0x03C426B8 BL 0x1C16CF4
	0x03C426BC MOVZ W8, 0x1
	0x03C426C0 STRB W8, [X20 + 0xB18]
	0x03C426C4 ADRP X21, 0x7A3000
	0x03C426C8 ADRP X20, 0x51D000
	0x03C426CC LDR X8, [X21 + 0xB20]
	0x03C426D0 LDR X20, [X20 + 0x870]
	0x03C426D4 STP X31, X31, [X31 + 0x8]
	0x03C426D8 STR X31, [X31 + 0x18]
	0x03C426DC CBNZ X8, 0x3C426F4
	0x03C426E0 ADRP X0, 0xFFFFFFFFFCED0000
	0x03C426E4 ADD X0, X0, 0xF91
	0x03C426E8 BL 0x1C16CB8
	0x03C426EC MOV X8, X0
	0x03C426F0 STR X0, [X21 + 0xB20]
	0x03C426F4 ADD X1, X31, 0x8
	0x03C426F8 MOV X0, X19
	0x03C426FC BLR X8
	0x03C42700 LDR X0, [X31 + 0x8]
	0x03C42704 LDR W19, [X31 + 0x10]
	0x03C42708 MOV X1, X31
	0x03C4270C BL 0x33C6948

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], D8
	003 Move [X31+56], X30
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X24, 0x7A4000
	011 Move V8, V6
	012 Move V6, [X31+7]
	013 Move X8, [X24+2784]
	014 Move X19, X4
	015 Move W23, W3
	016 Move W20, W2
	017 Move W21, W1
	018 Move X22, X0
	019 Move [X31+32], S0
	020 Move [X31+40], S1
	021 Move [X31+40], S2
	022 Move [X31+48], S3
	023 Move [X31+24], S4
	024 Move [X31+32], S5
	025 Move [X31+8], V6
	026 Compare X8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -51523584
	029 Add X0, X0, 3633
	030 Call 0x1C17CB8
	031 Move X8, X0
	032 Move [X24+2784], X0
	033 And W6, W23, 1
	034 Add X1, X31, 32
	035 Add X2, X31, 24
	036 Add X5, X31, 8
	037 Move X0, X22
	038 Move V0, V8
	039 Move W3, W21
	040 Move W4, W20
	041 Move X7, X19
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X31+96]
	044 Move X19, [X31+104]
	045 Move X22, [X31+80]
	046 Move X21, [X31+88]
	047 Move X24, [X31+64]
	048 Move X23, [X31+72]
	049 Move X30, [X31+56]
	050 Move V8, [X31+48]
	051 Add X31, X31, 112
	052 Return X0

Method: UnityEngine.Bounds get_bounds()

Disassembly:
	0x03C427AC MOV X20, X0
	0x03C427B0 CBNZ X2, 0x3C427C8
	0x03C427B4 ADRP X0, 0xFFFFFFFFFCED0000
	0x03C427B8 ADD X0, X0, 0xF91
	0x03C427BC BL 0x1C16CB8
	0x03C427C0 MOV X2, X0
	0x03C427C4 STR X0, [X21 + 0xB20]
	0x03C427C8 MOV X0, X20
	0x03C427CC MOV X1, X19
	0x03C427D0 LDP X20, X19, [X31 + 0x10]
	0x03C427D4 LDP X30, X21, [X31], #0x20
	0x03C427D8 BR X2
	0x03C427DC SUB X31, X31, 0x50
	0x03C427E0 STP X31, X30, [X31 + 0x18]
	0x03C427E4 STP X22, X21, [X31 + 0x30]
	0x03C427E8 STP X20, X19, [X31 + 0x40]
	0x03C427EC ADRP X22, 0x7A3000
	0x03C427F0 MOV X19, X8
	0x03C427F4 LDR X8, [X22 + 0xB28]
	0x03C427F8 MOV W20, W1
	0x03C427FC MOV X21, X0
	0x03C42800 STP X31, X31, [X31 + 0x8]
	0x03C42804 CBNZ X8, 0x3C4281C
	0x03C42808 ADRP X0, 0xFFFFFFFFFCEC7000
	0x03C4280C ADD X0, X0, 0x4EE
	0x03C42810 BL 0x1C16CB8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x7A4000
	007 Move X19, X8
	008 Move X8, [X21+2792]
	009 Move X20, X0
	010 Move [X31+8], X31
	011 Move [X31+16], X31
	012 Move [X31+24], X31
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51650560
	016 Add X0, X0, 1317
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X21+2792], X0
	020 Add X1, X31, 8
	021 Move X0, X20
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X8, [X31+24]
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Move [X19+16], X8
	028 Move [X19], V0
	029 Move X20, [X31+48]
	030 Move X19, [X31+56]
	031 Add X31, X31, 64
	032 Return X0

Method: UnityEngine.Rect get_rect()

Disassembly:
	0x03C42858 ADRP X22, 0x7A3000
	0x03C4285C LDR X3, [X22 + 0xB28]
	0x03C42860 MOV X19, X2
	0x03C42864 MOV W20, W1
	0x03C42868 MOV X21, X0
	0x03C4286C CBNZ X3, 0x3C42884
	0x03C42870 ADRP X0, 0xFFFFFFFFFCEC7000
	0x03C42874 ADD X0, X0, 0x4EE
	0x03C42878 BL 0x1C16CB8
	0x03C4287C MOV X3, X0
	0x03C42880 STR X0, [X22 + 0xB28]
	0x03C42884 MOV X0, X21
	0x03C42888 MOV W1, W20
	0x03C4288C MOV X2, X19
	0x03C42890 LDP X20, X19, [X31 + 0x20]
	0x03C42894 LDP X22, X21, [X31 + 0x10]
	0x03C42898 LDR X30, [X31], #0x30
	0x03C4289C BR X3
	0x03C428A0 STP X30, X21, [X31 - 0x20]!
	0x03C428A4 STP X20, X19, [X31 + 0x10]
	0x03C428A8 ADRP X20, 0x7A3000
	0x03C428AC ADRP X21, 0x51D000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7A4000
	007 Move X8, [X20+2800]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51609600
	013 Add X0, X0, 1205
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+2800], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: UnityEngine.Vector4 get_border()

Disassembly:
	0x03C428F4 LDR X21, [X8]
	0x03C428F8 CBZ X21, 0x3C42940
	0x03C428FC ADRP X8, 0x51D000
	0x03C42900 LDR X8, [X8 + 0x880]
	0x03C42904 ADRP X20, 0x51D000
	0x03C42908 LDR X0, [X8]
	0x03C4290C LDR X20, [X20 + 0x888]
	0x03C42910 BL 0x1C16F10
	0x03C42914 LDR X2, [X20]
	0x03C42918 MOV X1, X31
	0x03C4291C MOV X3, X31
	0x03C42920 MOV X20, X0
	0x03C42924 BL 0x2A6B948
	0x03C42928 LDR X8, [X21 + 0x18]
	0x03C4292C LDR X0, [X21 + 0x40]
	0x03C42930 LDR X3, [X21 + 0x28]
	0x03C42934 MOV X1, X19
	0x03C42938 MOV X2, X20
	0x03C4293C BLR X8
	0x03C42940 LDP X20, X19, [X31 + 0x10]
	0x03C42944 CMP X21, 0x0
	0x03C42948 CSET W0, NE

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7A4000
	007 Move X8, [X20+2808]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51486720
	013 Add X0, X0, 213
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+2808], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: UnityEngine.Texture2D get_texture()

Disassembly:
	0x03C42990 BL 0x1C16CF4
	0x03C42994 MOVZ W8, 0x1
	0x03C42998 STRB W8, [X20 + 0xB31]
	0x03C4299C LDR X8, [X23]
	0x03C429A0 ADRP X24, 0x51D000
	0x03C429A4 LDR X8, [X8 + 0xB8]
	0x03C429A8 LDR X20, [X8 + 0x8]
	0x03C429AC LDR X24, [X24 + 0x880]
	0x03C429B0 MOV X0, X20
	0x03C429B4 MOV X1, X19
	0x03C429B8 MOV X2, X31
	0x03C429BC BL 0x33C0DE4
	0x03C429C0 CBZ X0, 0x3C429E0
	0x03C429C4 LDR X22, [X24]
	0x03C429C8 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A4000
	005 Move X1, [X20+2704]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51625984
	010 Add X0, X0, 800
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2704], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_pixelsPerUnit()

Disassembly:
	0x03C429CC MOV X1, X22
	0x03C429D0 BL 0x1C16E00
	0x03C429D4 MOV X1, X0
	0x03C429D8 CBNZ X0, 0x3C429E4
	0x03C429DC B 0x3C42A18
	0x03C429E0 MOV X1, X31
	0x03C429E4 LDR X8, [X23]
	0x03C429E8 MOV X2, X20
	0x03C429EC LDR X8, [X8 + 0xB8]
	0x03C429F0 ADD X0, X8, 0x8
	0x03C429F4 BL 0x1C24138
	0x03C429F8 CMP X20, X0
	0x03C429FC MOV X20, X0
	0x03C42A00 B.NE 0x3C429B0
	0x03C42A04 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A4000
	005 Move X1, [X20+2712]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51548160
	010 Add X0, X0, 2971
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2712], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Texture2D get_associatedAlphaSplitTexture()

Disassembly:
	0x03C42A08 LDP X22, X21, [X31 + 0x20]
	0x03C42A0C LDP X24, X23, [X31 + 0x10]
	0x03C42A10 LDR X30, [X31], #0x40
	0x03C42A14 RET
	0x03C42A18 MOV X0, X21
	0x03C42A1C MOV X1, X22
	0x03C42A20 BL 0x1C171E0
	0x03C42A24 STR X30, [X31 - 0x40]!
	0x03C42A28 STP X24, X23, [X31 + 0x10]
	0x03C42A2C STP X22, X21, [X31 + 0x20]
	0x03C42A30 STP X20, X19, [X31 + 0x30]
	0x03C42A34 ADRP X20, 0x7A3000
	0x03C42A38 ADRP X23, 0x51D000
	0x03C42A3C LDRB W8, [X20 + 0xB32]
	0x03C42A40 LDR X23, [X23 + 0x878]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A4000
	005 Move X1, [X20+2720]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51564544
	010 Add X0, X0, 3066
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2720], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Vector2 get_pivot()

Disassembly:
	0x03C42A44 MOV X19, X0
	0x03C42A48 TBNZ X8, 0x0, 0x3C42A6C
	0x03C42A4C ADRP X0, 0x51D000
	0x03C42A50 LDR X0, [X0 + 0x880]
	0x03C42A54 BL 0x1C16CF4
	0x03C42A58 ADRP X0, 0x51D000
	0x03C42A5C LDR X0, [X0 + 0x878]
	0x03C42A60 BL 0x1C16CF4
	0x03C42A64 MOVZ W8, 0x1
	0x03C42A68 STRB W8, [X20 + 0xB32]
	0x03C42A6C LDR X8, [X23]
	0x03C42A70 ADRP X24, 0x51D000
	0x03C42A74 LDR X8, [X8 + 0xB8]
	0x03C42A78 LDR X20, [X8 + 0x8]
	0x03C42A7C LDR X24, [X24 + 0x880]
	0x03C42A80 MOV X0, X20
	0x03C42A84 MOV X1, X19
	0x03C42A88 MOV X2, X31
	0x03C42A8C BL 0x33C0FDC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A4000
	005 Move X8, [X20+2816]
	006 Move X19, X0
	007 Move [X31+8], X31
	008 Compare X8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, -51617792
	011 Add X0, X0, 1145
	012 Call 0x1C17CB8
	013 Move X8, X0
	014 Move [X20+2816], X0
	015 Add X1, X31, 8
	016 Move X0, X19
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move S0, [X31+8]
	019 Move S1, [X31+12]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Boolean get_packed()

Disassembly:
	0x03C42AD4 LDP X20, X19, [X31 + 0x30]
	0x03C42AD8 LDP X22, X21, [X31 + 0x20]
	0x03C42ADC LDP X24, X23, [X31 + 0x10]
	0x03C42AE0 LDR X30, [X31], #0x40
	0x03C42AE4 RET
	0x03C42AE8 MOV X0, X21
	0x03C42AEC MOV X1, X22
	0x03C42AF0 BL 0x1C171E0
	0x03C42AF4 STP X30, X21, [X31 - 0x20]!
	0x03C42AF8 STP X20, X19, [X31 + 0x10]
	0x03C42AFC ADRP X20, 0x7A3000
	0x03C42B00 ADRP X21, 0x51D000
	0x03C42B04 LDRB W8, [X20 + 0xB33]
	0x03C42B08 LDR X21, [X21 + 0x878]
	0x03C42B0C MOV X19, X0
	0x03C42B10 TBNZ X8, 0x0, 0x3C42B28
	0x03C42B14 ADRP X0, 0x51D000
	0x03C42B18 LDR X0, [X0 + 0x878]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A4000
	005 Move X8, [X20+2696]
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51494912
	010 Add X0, X0, 40
	011 Call 0x1C17CB8
	012 Move X8, X0
	013 Move [X20+2696], X0
	014 Move X0, X19
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Move X30, [X31+32]
	021 Return X0

Method: UnityEngine.SpritePackingRotation get_packingRotation()

Disassembly:
	0x03C42B1C BL 0x1C16CF4
	0x03C42B20 MOVZ W8, 0x1
	0x03C42B24 STRB W8, [X20 + 0xB33]
	0x03C42B28 LDR X8, [X21]
	0x03C42B2C LDR X8, [X8 + 0xB8]
	0x03C42B30 LDR X8, [X8 + 0x8]
	0x03C42B34 CBZ X8, 0x3C42B54
	0x03C42B38 LDR X3, [X8 + 0x18]
	0x03C42B3C LDR X0, [X8 + 0x40]
	0x03C42B40 LDR X2, [X8 + 0x28]
	0x03C42B44 MOV X1, X19
	0x03C42B48 LDP X20, X19, [X31 + 0x10]
	0x03C42B4C LDP X30, X21, [X31], #0x20
	0x03C42B50 BR X3
	0x03C42B54 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A4000
	005 Move X1, [X20+2688]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51593216
	010 Add X0, X0, 254
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2688], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Vector2[] get_vertices()

Disassembly:
	0x03C42B58 LDP X30, X21, [X31], #0x20
	0x03C42B5C RET
	0x03C42B60 STR X30, [X31 - 0x20]!
	0x03C42B64 STP X20, X19, [X31 + 0x10]
	0x03C42B68 ADRP X20, 0x7A3000
	0x03C42B6C LDR X1, [X20 + 0xB38]
	0x03C42B70 MOV X19, X0
	0x03C42B74 CBNZ X1, 0x3C42B8C
	0x03C42B78 ADRP X0, 0xFFFFFFFFFCEC3000
	0x03C42B7C ADD X0, X0, 0x342
	0x03C42B80 BL 0x1C16CB8
	0x03C42B84 MOV X1, X0
	0x03C42B88 STR X0, [X20 + 0xB38]
	0x03C42B8C MOV X0, X19
	0x03C42B90 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A4000
	005 Move X1, [X20+2728]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51585024
	010 Add X0, X0, 1702
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2728], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.UInt16[] get_triangles()

Disassembly:
	0x03C42B94 LDR X30, [X31], #0x20
	0x03C42B98 BR X1
	0x03C42B9C STP X30, X21, [X31 - 0x20]!
	0x03C42BA0 STP X20, X19, [X31 + 0x10]
	0x03C42BA4 ADRP X21, 0x7A3000
	0x03C42BA8 LDR X2, [X21 + 0xB40]
	0x03C42BAC MOV X19, X1
	0x03C42BB0 MOV X20, X0
	0x03C42BB4 CBNZ X2, 0x3C42BCC
	0x03C42BB8 ADRP X0, 0xFFFFFFFFFCECB000
	0x03C42BBC ADD X0, X0, 0x14B
	0x03C42BC0 BL 0x1C16CB8
	0x03C42BC4 MOV X2, X0
	0x03C42BC8 STR X0, [X21 + 0xB40]
	0x03C42BCC MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A4000
	005 Move X1, [X20+2736]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51593216
	010 Add X0, X0, 295
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2736], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Vector2[] get_uv()

Disassembly:
	0x03C42BD0 MOV X1, X19
	0x03C42BD4 LDP X20, X19, [X31 + 0x10]
	0x03C42BD8 LDP X30, X21, [X31], #0x20
	0x03C42BDC BR X2
	0x03C42BE0 STR X30, [X31 - 0x20]!
	0x03C42BE4 STP X20, X19, [X31 + 0x10]
	0x03C42BE8 MOV X1, X31
	0x03C42BEC MOV X19, X0
	0x03C42BF0 BL 0x32277A8
	0x03C42BF4 TBNZ X0, 0x0, 0x3C42C2C
	0x03C42BF8 ADRP X20, 0x7A3000
	0x03C42BFC LDR X2, [X20 + 0xB48]
	0x03C42C00 CBNZ X2, 0x3C42C18
	0x03C42C04 ADRP X0, 0xFFFFFFFFFCEC3000
	0x03C42C08 ADD X0, X0, 0x38C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A4000
	005 Move X1, [X20+2744]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51576832
	010 Add X0, X0, 817
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2744], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Sprite Create(UnityEngine.Texture2D texture, UnityEngine.Rect rect, UnityEngine.Vector2 pivot, System.Single pixelsPerUnit, System.UInt32 extrude, UnityEngine.SpriteMeshType meshType, UnityEngine.Vector4 border, System.Boolean generateFallbackPhysicsShape)

Disassembly:
	0x03C42C0C BL 0x1C16CB8
	0x03C42C10 MOV X2, X0
	0x03C42C14 STR X0, [X20 + 0xB48]
	0x03C42C18 MOV X0, X19
	0x03C42C1C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move V7, [X31]
	002 And W3, W3, 1
	003 Move X4, X31
	004 Move [X31], V7

Method: UnityEngine.Sprite Create(UnityEngine.Texture2D texture, UnityEngine.Rect rect, UnityEngine.Vector2 pivot, System.Single pixelsPerUnit, System.UInt32 extrude, UnityEngine.SpriteMeshType meshType, UnityEngine.Vector4 border, System.Boolean generateFallbackPhysicsShape, UnityEngine.SecondarySpriteTexture[] secondaryTextures)

Disassembly:
	0x03C42C20 MOV X1, X31
	0x03C42C24 LDR X30, [X31], #0x20
	0x03C42C28 BR X2
	0x03C42C2C ADRP X0, 0x4B9000
	0x03C42C30 LDR X0, [X0 + 0x578]
	0x03C42C34 BL 0x1C16D08
	0x03C42C38 BL 0x1C16F10
	0x03C42C3C MOV X19, X0
	0x03C42C40 ADRP X0, 0x4B9000
	0x03C42C44 LDR X0, [X0 + 0x580]
	0x03C42C48 BL 0x1C16D08
	0x03C42C4C MOV X20, X0
	0x03C42C50 ADRP X0, 0x4B9000
	0x03C42C54 LDR X0, [X0 + 0x588]
	0x03C42C58 BL 0x1C16D08
	0x03C42C5C MOV X2, X0
	0x03C42C60 MOV X0, X19
	0x03C42C64 MOV X1, X20
	0x03C42C68 MOV X3, X31
	0x03C42C6C BL 0x330E16C
	0x03C42C70 ADRP X0, 0x4B9000
	0x03C42C74 LDR X0, [X0 + 0x590]
	0x03C42C78 BL 0x1C16D08
	0x03C42C7C MOV X1, X0
	0x03C42C80 MOV X0, X19
	0x03C42C84 BL 0x1C16DEC
	0x03C42C88 STP X30, X21, [X31 - 0x20]!
	0x03C42C8C STP X20, X19, [X31 + 0x10]
	0x03C42C90 ADRP X21, 0x7A3000
	0x03C42C94 LDR X2, [X21 + 0xB48]
	0x03C42C98 MOV X19, X1
	0x03C42C9C MOV X20, X0
	0x03C42CA0 CBNZ X2, 0x3C42CB8
	0x03C42CA4 ADRP X0, 0xFFFFFFFFFCEC3000
	0x03C42CA8 ADD X0, X0, 0x38C
	0x03C42CAC BL 0x1C16CB8
	0x03C42CB0 MOV X2, X0
	0x03C42CB4 STR X0, [X21 + 0xB48]
	0x03C42CB8 MOV X0, X20
	0x03C42CBC MOV X1, X19
	0x03C42CC0 LDP X20, X19, [X31 + 0x10]
	0x03C42CC4 LDP X30, X21, [X31], #0x20
	0x03C42CC8 BR X2
	0x03C42CCC STR X30, [X31 - 0x20]!
	0x03C42CD0 STP X20, X19, [X31 + 0x10]
	0x03C42CD4 MOV X1, X31
	0x03C42CD8 BL 0x32277A8
	0x03C42CDC TBNZ X0, 0x0, 0x3C42CEC
	0x03C42CE0 LDP X20, X19, [X31 + 0x10]
	0x03C42CE4 LDR X30, [X31], #0x20
	0x03C42CE8 RET
	0x03C42CEC ADRP X0, 0x4B9000
	0x03C42CF0 LDR X0, [X0 + 0x578]
	0x03C42CF4 BL 0x1C16D08
	0x03C42CF8 BL 0x1C16F10
	0x03C42CFC MOV X19, X0
	0x03C42D00 ADRP X0, 0x4B9000
	0x03C42D04 LDR X0, [X0 + 0x580]
	0x03C42D08 BL 0x1C16D08
	0x03C42D0C MOV X20, X0
	0x03C42D10 ADRP X0, 0x4B9000
	0x03C42D14 LDR X0, [X0 + 0x588]
	0x03C42D18 BL 0x1C16D08
	0x03C42D1C MOV X2, X0
	0x03C42D20 MOV X0, X19
	0x03C42D24 MOV X1, X20
	0x03C42D28 MOV X3, X31
	0x03C42D2C BL 0x330E16C
	0x03C42D30 ADRP X0, 0x4B9000
	0x03C42D34 LDR X0, [X0 + 0x590]
	0x03C42D38 BL 0x1C16D08
	0x03C42D3C MOV X1, X0
	0x03C42D40 MOV X0, X19
	0x03C42D44 BL 0x1C16DEC
	0x03C42D48 STP X30, X19, [X31 - 0x10]!
	0x03C42D4C ADRP X19, 0x7A3000
	0x03C42D50 LDR X0, [X19 + 0xB50]
	0x03C42D54 CBNZ X0, 0x3C42D68
	0x03C42D58 ADRP X0, 0xFFFFFFFFFCEBF000
	0x03C42D5C ADD X0, X0, 0x241
	0x03C42D60 BL 0x1C16CB8
	0x03C42D64 STR X0, [X19 + 0xB50]
	0x03C42D68 LDP X30, X19, [X31], #0x10
	0x03C42D6C BR X0
	0x03C42D70 STR X30, [X31 - 0x20]!
	0x03C42D74 STP X20, X19, [X31 + 0x10]
	0x03C42D78 ADRP X20, 0x7A3000
	0x03C42D7C LDR X1, [X20 + 0xB58]
	0x03C42D80 MOV X19, X0
	0x03C42D84 CBNZ X1, 0x3C42D9C
	0x03C42D88 ADRP X0, 0xFFFFFFFFFCED8000
	0x03C42D8C ADD X0, X0, 0xEA9
	0x03C42D90 BL 0x1C16CB8
	0x03C42D94 MOV X1, X0
	0x03C42D98 STR X0, [X20 + 0xB58]
	0x03C42D9C MOV X0, X19
	0x03C42DA0 LDP X20, X19, [X31 + 0x10]
	0x03C42DA4 LDR X30, [X31], #0x20
	0x03C42DA8 BR X1
	0x03C42DAC MOV X1, X31
	0x03C42DB0 B 0x33BDD8C
	0x03C42DB4 SUB X31, X31, 0x50
	0x03C42DB8 STR X30, [X31 + 0x30]
	0x03C42DBC STP X20, X19, [X31 + 0x40]
	0x03C42DC0 MRS X20, 0xC000
	0x03C42DC4 LDR X8, [X20 + 0x28]
	0x03C42DC8 MOV X19, X0
	0x03C42DCC STR X8, [X31 + 0x28]
	0x03C42DD0 STR X1, [X31 + 0x8]
	0x03C42DD4 MOV X1, X31
	0x03C42DD8 BL 0x33BDD8C
	0x03C42DDC ADD X0, X31, 0x8
	0x03C42DE0 MOV X1, X31
	0x03C42DE4 BL 0x3BFF198
	0x03C42DE8 TBZ X0, 0x0, 0x3C42E48
	0x03C42DEC LDR X1, [X31 + 0x8]
	0x03C42DF0 ADD X0, X31, 0x0
	0x03C42DF4 MOVZ W2, 0x1
	0x03C42DF8 MOVZ W3, 0x99
	0x03C42DFC MOV X4, X31
	0x03C42E00 STR X31, [X31]
	0x03C42E04 BL 0x3BFEA50
	0x03C42E08 LDP X8, X0, [X31]
	0x03C42E0C MOV X1, X31
	0x03C42E10 STR X8, [X19 + 0x10]
	0x03C42E14 ADD X8, X31, 0x10
	0x03C42E18 BL 0x3BFF1AC
	0x03C42E1C LDRH W8, [X31 + 0x12]
	0x03C42E20 TBZ X8, 0x8, 0x3C42E48
	0x03C42E24 LDR X1, [X31 + 0x8]
	0x03C42E28 ADD X0, X31, 0x10
	0x03C42E2C MOVZ W2, 0x1
	0x03C42E30 MOVZ W3, 0xD9
	0x03C42E34 MOV X4, X31
	0x03C42E38 STR X31, [X31 + 0x10]
	0x03C42E3C BL 0x3BFEA50
	0x03C42E40 LDR X8, [X31 + 0x10]
	0x03C42E44 STR X8, [X19 + 0x18]
	0x03C42E48 LDR X8, [X20 + 0x28]
	0x03C42E4C LDR X9, [X31 + 0x28]
	0x03C42E50 CMP X8, X9
	0x03C42E54 B.NE 0x3C42E68
	0x03C42E58 LDP X20, X19, [X31 + 0x40]
	0x03C42E5C LDR X30, [X31 + 0x30]
	0x03C42E60 ADD X31, X31, 0x50
	0x03C42E64 RET
	0x03C42E68 BL 0x3EB1B20
	0x03C42E6C STP X30, X21, [X31 - 0x20]!
	0x03C42E70 STP X20, X19, [X31 + 0x10]
	0x03C42E74 MOV X19, X0
	0x03C42E78 ADD X0, X0, 0x10
	0x03C42E7C MOV X1, X31
	0x03C42E80 BL 0x3BFF114
	0x03C42E84 ADD X0, X19, 0x18
	0x03C42E88 MOV X1, X31
	0x03C42E8C BL 0x3BFF114
	0x03C42E90 MOV X0, X19
	0x03C42E94 LDP X20, X19, [X31 + 0x10]
	0x03C42E98 MOV X1, X31
	0x03C42E9C LDP X30, X21, [X31], #0x20
	0x03C42EA0 B 0x33CB4DC
	0x03C42EA4 B 0x3C42EA8
	0x03C42EA8 MOV X21, X0
	0x03C42EAC CMP W1, 0x1
	0x03C42EB0 B.NE 0x3C42EE0
	0x03C42EB4 MOV X0, X21
	0x03C42EB8 BL 0x3EB1AD0
	0x03C42EBC LDR X20, [X0]
	0x03C42EC0 BL 0x3EB1AE0
	0x03C42EC4 MOV X0, X19
	0x03C42EC8 MOV X1, X31
	0x03C42ECC BL 0x33CB4DC
	0x03C42ED0 CBNZ X20, 0x3C42EE8
	0x03C42ED4 LDP X20, X19, [X31 + 0x10]
	0x03C42ED8 LDP X30, X21, [X31], #0x20
	0x03C42EDC RET
	0x03C42EE0 MOV X20, X31
	0x03C42EE4 B 0x3C42EF4
	0x03C42EE8 MOV X0, X20
	0x03C42EEC BL 0x1C16F18
	0x03C42EF0 MOV X21, X0
	0x03C42EF4 MOV X0, X19
	0x03C42EF8 MOV X1, X31
	0x03C42EFC BL 0x33CB4DC
	0x03C42F00 CBNZ X20, 0x3C42F0C
	0x03C42F04 MOV X0, X21
	0x03C42F08 BL 0x1D2C690
	0x03C42F0C MOV X0, X20
	0x03C42F10 BL 0x1C16F18
	0x03C42F14 BL 0x1990590
	0x03C42F18 ADD X0, X0, 0x10
	0x03C42F1C MOV X1, X31
	0x03C42F20 B 0x3BFEDD4
	0x03C42F24 AND W1, W1, 0x1
	0x03C42F28 B 0x3C42F2C
	0x03C42F2C STP X30, X19, [X31 - 0x10]!
	0x03C42F30 MOV X19, X0
	0x03C42F34 ADD X0, X0, 0x10
	0x03C42F38 TBZ X1, 0x0, 0x3C42F68
	0x03C42F3C MOV X1, X31
	0x03C42F40 BL 0x3BFEB6C
	0x03C42F44 ADD X19, X19, 0x18
	0x03C42F48 MOV X0, X19
	0x03C42F4C MOV X1, X31
	0x03C42F50 BL 0x3BFEAD4
	0x03C42F54 TBZ X0, 0x0, 0x3C42F94
	0x03C42F58 MOV X0, X19
	0x03C42F5C MOV X1, X31
	0x03C42F60 LDP X30, X19, [X31], #0x10
	0x03C42F64 B 0x3BFEB6C
	0x03C42F68 MOV X1, X31
	0x03C42F6C BL 0x3BFEC60
	0x03C42F70 ADD X19, X19, 0x18
	0x03C42F74 MOV X0, X19
	0x03C42F78 MOV X1, X31
	0x03C42F7C BL 0x3BFEAD4
	0x03C42F80 TBZ X0, 0x0, 0x3C42F94
	0x03C42F84 MOV X0, X19
	0x03C42F88 MOV X1, X31
	0x03C42F8C LDP X30, X19, [X31], #0x10
	0x03C42F90 B 0x3BFEC60
	0x03C42F94 LDP X30, X19, [X31], #0x10
	0x03C42F98 RET
	0x03C42F9C STP X30, X19, [X31 - 0x10]!
	0x03C42FA0 ADD X19, X0, 0x10
	0x03C42FA4 MOV X0, X19
	0x03C42FA8 MOV X1, X31
	0x03C42FAC BL 0x3BFEAD4
	0x03C42FB0 TBZ X0, 0x0, 0x3C42FC4
	0x03C42FB4 MOV X0, X19
	0x03C42FB8 MOV X1, X31
	0x03C42FBC LDP X30, X19, [X31], #0x10
	0x03C42FC0 B 0x3BFECB0
	0x03C42FC4 MOV X0, X31
	0x03C42FC8 LDP X30, X19, [X31], #0x10
	0x03C42FCC RET
	0x03C42FD0 STP X30, X19, [X31 - 0x10]!
	0x03C42FD4 ADD X19, X0, 0x18
	0x03C42FD8 MOV X0, X19
	0x03C42FDC MOV X1, X31
	0x03C42FE0 BL 0x3BFEAD4
	0x03C42FE4 TBZ X0, 0x0, 0x3C42FF8
	0x03C42FE8 MOV X0, X19
	0x03C42FEC MOV X1, X31
	0x03C42FF0 LDP X30, X19, [X31], #0x10
	0x03C42FF4 B 0x3BFECB0
	0x03C42FF8 MOV X0, X31
	0x03C42FFC LDP X30, X19, [X31], #0x10
	0x03C43000 RET
	0x03C43004 SUB X31, X31, 0x30
	0x03C43008 STP X30, X19, [X31 + 0x20]
	0x03C4300C ADD X19, X0, 0x10
	0x03C43010 MOV X0, X19
	0x03C43014 MOV X1, X31
	0x03C43018 BL 0x3BFEAD4
	0x03C4301C TBZ X0, 0x0, 0x3C43050
	0x03C43020 MOV X0, X19
	0x03C43024 MOV X1, X31
	0x03C43028 BL 0x3BFED3C
	0x03C4302C CMP W0, 0x1
	0x03C43030 B.NE 0x3C43050
	0x03C43034 ADD X8, X31, 0x8
	0x03C43038 MOV X0, X19
	0x03C4303C MOV W1, W31
	0x03C43040 MOV X2, X31
	0x03C43044 BL 0x3BFEE68
	0x03C43048 LDR W0, [X31 + 0x10]
	0x03C4304C B 0x3C43054
	0x03C43050 MOV W0, W31
	0x03C43054 LDP X30, X19, [X31 + 0x20]
	0x03C43058 ADD X31, X31, 0x30
	0x03C4305C RET
	0x03C43060 SUB X31, X31, 0x30
	0x03C43064 STP X30, X19, [X31 + 0x20]
	0x03C43068 ADD X19, X0, 0x18
	0x03C4306C MOV X0, X19
	0x03C43070 MOV X1, X31
	0x03C43074 BL 0x3BFEAD4
	0x03C43078 TBZ X0, 0x0, 0x3C430AC
	0x03C4307C MOV X0, X19
	0x03C43080 MOV X1, X31
	0x03C43084 BL 0x3BFED3C
	0x03C43088 CMP W0, 0x1
	0x03C4308C B.NE 0x3C430AC
	0x03C43090 ADD X8, X31, 0x8
	0x03C43094 MOV X0, X19
	0x03C43098 MOV W1, W31

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+112], X28
	012 Move [X31+120], X27
	013 Move [X31+128], X26
	014 Move [X31+136], X25
	015 Move [X31+144], X24
	016 Move [X31+152], X23
	017 Move [X31+160], X22
	018 Move [X31+168], X21
	019 Move [X31+176], X20
	020 Move [X31+184], X19
	021 Move [X31+4], S4
	022 Move [X31+12], S5
	023 Move [X31+12], S3
	024 Move X24, 0x7A4000
	025 Move X26, 0x4B2000
	026 Move S8, [X31+200]
	027 Move S15, [X31+204]
	028 Move W8, [X24+2752]
	029 Move S13, [X31+192]
	030 Move S9, [X31+196]
	031 Move X26, [X26+1432]
	032 Move X20, X4
	033 Move W23, W3
	034 Move W21, W2
	035 Move W22, W1
	036 Move V12, V6
	037 Move V14, V2
	038 Move V10, V1
	039 Move V11, V0
	040 Move X19, X0
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {50}
	045 Move X0, 0x4B2000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X24+2752], W8
	050 Move X0, [X26]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X1, X31
	057 Call Object.op_Equality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {84}
	062 Move X20, [X31+176]
	063 Move X19, [X31+184]
	064 Move X22, [X31+160]
	065 Move X21, [X31+168]
	066 Move X24, [X31+144]
	067 Move X23, [X31+152]
	068 Move X26, [X31+128]
	069 Move X25, [X31+136]
	070 Move X28, [X31+112]
	071 Move X27, [X31+120]
	072 Move X30, [X31+96]
	073 Move D9, [X31+80]
	074 Move D8, [X31+88]
	075 Move D11, [X31+64]
	076 Move D10, [X31+72]
	077 Move D13, [X31+48]
	078 Move D12, [X31+56]
	079 Move D15, [X31+32]
	080 Move D14, [X31+40]
	081 Move X0, X31
	082 Add X31, X31, 192
	083 Return X0
	084 Compare X19, 0
	085 JumpIfEqual {314}
	086 Move X8, [X19]
	087 Move X0, X19
	088 Move [X31], S14
	089 Add S14, S14, S11
	090 Move X9, [X8+392]
	091 Move X1, [X8+400]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 NotImplemented "Instruction SCVTF not yet implemented."
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 Move X8, [X19]
	096 Move V0, [X31+12]
	097 Move X0, X19
	098 Move X9, [X8+424]
	099 Move X1, [X8+432]
	100 Add S14, S0, S10
	101 NotImplemented "Instruction BLR not yet implemented."
	102 NotImplemented "Instruction SCVTF not yet implemented."
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Move V14, [X31]
	106 Compare X20, 0
	107 JumpIfEqual {132}
	108 Move X8, [X20+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X27, X31
	111 And X8, X8, 0
	112 Add X28, X20, 40
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, [X26]
	115 Move X24, [X28-8]
	116 Move X25, [X28]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Move X0, X25
	122 Move X1, X19
	123 Call Object.op_Equality, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {171}
	128 Move W8, [X20+24]
	129 Add X27, X27, 1
	130 Add X28, X28, 16
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X31+192], S13
	133 Move [X31+200], S9
	134 Move [X31+200], S8
	135 Move [X31+208], S15
	136 And W3, W23, 1
	137 Move X0, X19
	138 Move V0, V11
	139 Move V1, V10
	140 Move V2, V14
	141 Move S5, [X31+8]
	142 Move S3, [X31+12]
	143 Move V4, [X31+4]
	144 Move V6, V12
	145 Move W1, W22
	146 Move W2, W21
	147 Move X4, X20
	148 Move X20, [X31+176]
	149 Move X19, [X31+184]
	150 Move X22, [X31+160]
	151 Move X21, [X31+168]
	152 Move X24, [X31+144]
	153 Move X23, [X31+152]
	154 Move X26, [X31+128]
	155 Move X25, [X31+136]
	156 Move X28, [X31+112]
	157 Move X27, [X31+120]
	158 Move X30, [X31+96]
	159 Move D9, [X31+80]
	160 Move D8, [X31+88]
	161 Move D11, [X31+64]
	162 Move D10, [X31+72]
	163 Move D13, [X31+48]
	164 Move D12, [X31+56]
	165 Move D15, [X31+32]
	166 Move D14, [X31+40]
	167 Add X31, X31, 192
	168 Call Sprite.CreateSprite, X0, X1, X2, V0, X3, X4, X5, X6, X7
	169 Return X0
	170 Call 0x1C17F28
	171 Move X0, 0x51E000
	172 Move X0, [X0+2104]
	173 Call 0x1C17D08
	174 Move X1, X24
	175 Move X2, X31
	176 Call String.Format, X0, X1
	177 Move X19, X0
	178 Move X0, 0x4BA000
	179 Move X0, [X0+1400]
	180 Call 0x1C17D08
	181 Call 0x1C17F10
	182 Move X1, X19
	183 Move X2, X31
	184 Move X20, X0
	185 Call ArgumentException..ctor, X0, X1
	186 Move X0, 0x51E000
	187 Move X0, [X0+2112]
	188 Call 0x1C17D08
	189 Move X1, X0
	190 Move X0, X20
	191 Call 0x1C17DEC
	192 Move X0, 0x4B2000
	193 Move X0, [X0+2512]
	194 Call 0x1C17D08
	195 Move W1, 6
	196 Call 0x1C17D6C
	197 Move [X31+108], S11
	198 Move X21, 0x4B2000
	199 Move X21, [X21+2704]
	200 Move X20, X0
	201 Move X0, X21
	202 Call 0x1C17D08
	203 Add X1, X31, 108
	204 Call 0x1C17E04
	205 Move X22, X0
	206 Move X0, X20
	207 Call 0x19913C0
	208 Move X0, X20
	209 Move X1, X22
	210 Call 0x19990B4
	211 Move X0, X20
	212 Move X1, X31
	213 Move X2, X22
	214 Call 0x1994444
	215 Move X0, X21
	216 Move [X31+104], S10
	217 Call 0x1C17D08
	218 Add X1, X31, 104
	219 Call 0x1C17E04
	220 Move X22, X0
	221 Move X0, X20
	222 Call 0x19913C0
	223 Move X0, X20
	224 Move X1, X22
	225 Call 0x19990B4
	226 Move W1, 1
	227 Move X0, X20
	228 Move X2, X22
	229 Call 0x1994444
	230 Move V0, [X31]
	231 Move X0, X21
	232 Move [X31+28], S0
	233 Call 0x1C17D08
	234 Add X1, X31, 28
	235 Call 0x1C17E04
	236 Move X22, X0
	237 Move X0, X20
	238 Call 0x19913C0
	239 Move X0, X20
	240 Move X1, X22
	241 Call 0x19990B4
	242 Move W1, 2
	243 Move X0, X20
	244 Move X2, X22
	245 Call 0x1994444
	246 Move V0, [X31+12]
	247 Move X0, X21
	248 Move [X31+24], S0
	249 Call 0x1C17D08
	250 Add X1, X31, 24
	251 Call 0x1C17E04
	252 Move X21, X0
	253 Move X0, X20
	254 Call 0x19913C0
	255 Move X0, X20
	256 Move X1, X21
	257 Call 0x19990B4
	258 Move W1, 3
	259 Move X0, X20
	260 Move X2, X21
	261 Call 0x1994444
	262 Move X0, X19
	263 Call 0x19913C0
	264 Move X8, [X19]
	265 Move X0, X19
	266 Move X9, [X8+392]
	267 Move X1, [X8+400]
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Move [X31+20], W0
	270 Move X21, 0x4B2000
	271 Move X21, [X21+1880]
	272 Move X0, X21
	273 Call 0x1C17D08
	274 Add X1, X31, 20
	275 Call 0x1C17E04
	276 Move X22, X0
	277 Move X0, X20
	278 Call 0x19913C0
	279 Move X0, X20
	280 Move X1, X22
	281 Call 0x19990B4
	282 Move W1, 4
	283 Move X0, X20
	284 Move X2, X22
	285 Call 0x1994444
	286 Move X0, X19
	287 Call 0x19913C0
	288 Move X8, [X19]
	289 Move X0, X19
	290 Move X9, [X8+424]
	291 Move X1, [X8+432]
	292 NotImplemented "Instruction BLR not yet implemented."
	293 Move [X31+16], W0
	294 Move X0, X21
	295 Call 0x1C17D08
	296 Add X1, X31, 16
	297 Call 0x1C17E04
	298 Move X19, X0
	299 Move X0, X20
	300 Call 0x19913C0
	301 Move X0, X20
	302 Move X1, X19
	303 Call 0x19990B4
	304 Move W1, 5
	305 Move X0, X20
	306 Move X2, X19
	307 Call 0x1994444
	308 Move X0, 0x51D000
	309 Move X0, [X0+2120]
	310 Call 0x1C17D08
	311 Move X1, X20
	312 Move X2, X31
	313 Call String.Format, X0, X1
	314 Call 0x1C17F20
	315 Move X0, 0x4B9000
	316 Move X0, [X0+1400]
	317 Call 0x1C17D08
	318 Call 0x1C17F10
	319 Move X19, X0
	320 Move X0, 0x51D000
	321 Move X0, [X0+2128]
	322 Call 0x1C17D08
	323 Move X1, X0
	324 Move X0, X19
	325 Move X2, X31
	326 Call ArgumentException..ctor, X0, X1
	327 Move X0, 0x51D000
	328 Move X0, [X0+2112]
	329 Call 0x1C17D08
	330 Move X1, X0
	331 Move X0, X19
	332 Call 0x1C17DEC

Method: UnityEngine.Sprite Create(UnityEngine.Texture2D texture, UnityEngine.Rect rect, UnityEngine.Vector2 pivot, System.Single pixelsPerUnit, System.UInt32 extrude, UnityEngine.SpriteMeshType meshType, UnityEngine.Vector4 border)

Disassembly:
	0x03C4309C MOV X2, X31
	0x03C430A0 BL 0x3BFEE68
	0x03C430A4 LDR W0, [X31 + 0x10]
	0x03C430A8 B 0x3C430B0
	0x03C430AC MOV W0, W31

ISIL:
	001 Move V7, [X31]
	002 Move W3, W31
	003 Move X4, X31
	004 Move [X31], V7
	005 Call Sprite.Create, X0, X1, X2, V0, X3, X4, X5, X6, X7
	006 Return X0

Method: UnityEngine.Sprite Create(UnityEngine.Texture2D texture, UnityEngine.Rect rect, UnityEngine.Vector2 pivot, System.Single pixelsPerUnit, System.UInt32 extrude, UnityEngine.SpriteMeshType meshType)

Disassembly:
	0x03C430B0 LDP X30, X19, [X31 + 0x20]
	0x03C430B4 ADD X31, X31, 0x30
	0x03C430B8 RET
	0x03C430BC STR X30, [X31 - 0x20]!
	0x03C430C0 STP X20, X19, [X31 + 0x10]
	0x03C430C4 ADRP X19, 0x7A2000
	0x03C430C8 ADRP X20, 0x51C000
	0x03C430CC LDRB W8, [X19 + 0xB60]
	0x03C430D0 LDR X20, [X20 + 0x890]
	0x03C430D4 TBNZ X8, 0x0, 0x3C430EC
	0x03C430D8 ADRP X0, 0x51C000
	0x03C430DC LDR X0, [X0 + 0x890]
	0x03C430E0 BL 0x1C16CF4
	0x03C430E4 MOVZ W8, 0x1
	0x03C430E8 STRB W8, [X19 + 0xB60]
	0x03C430EC LDR X0, [X20]
	0x03C430F0 BL 0x1C16F10
	0x03C430F4 MOV X1, X31
	0x03C430F8 MOV X19, X0
	0x03C430FC BL 0x33BDD8C
	0x03C43100 LDR X8, [X20]
	0x03C43104 LDR X8, [X8 + 0xB8]
	0x03C43108 STR X19, [X8]
	0x03C4310C LDP X20, X19, [X31 + 0x10]
	0x03C43110 LDR X30, [X31], #0x20
	0x03C43114 RET
	0x03C43118 MOV X1, X31
	0x03C4311C B 0x33BDD8C
	0x03C43120 LDR X0, [X0 + 0x10]
	0x03C43124 MOV X1, X31
	0x03C43128 MOV X2, X31
	0x03C4312C B 0x33C5D2C
	0x03C43130 SUB X31, X31, 0x30
	0x03C43134 STP X30, X21, [X31 + 0x10]
	0x03C43138 STP X20, X19, [X31 + 0x20]
	0x03C4313C ADRP X21, 0x7A2000
	0x03C43140 ADRP X20, 0x51C000
	0x03C43144 LDRB W8, [X21 + 0xB61]
	0x03C43148 LDR X20, [X20 + 0x890]
	0x03C4314C MOV X19, X0
	0x03C43150 TBNZ X8, 0x0, 0x3C43168
	0x03C43154 ADRP X0, 0x51C000
	0x03C43158 LDR X0, [X0 + 0x890]
	0x03C4315C BL 0x1C16CF4
	0x03C43160 MOVZ W8, 0x1
	0x03C43164 STRB W8, [X21 + 0xB61]
	0x03C43168 ADD X0, X19, 0x10
	0x03C4316C MOV X1, X31
	0x03C43170 STR X31, [X31 + 0x8]
	0x03C43174 BL 0x33C6854
	0x03C43178 MOV X1, X0
	0x03C4317C ADD X0, X31, 0x8
	0x03C43180 MOV X2, X31
	0x03C43184 BL 0x3BFF190
	0x03C43188 LDR X0, [X20]
	0x03C4318C LDR X19, [X31 + 0x8]
	0x03C43190 BL 0x1C16F10
	0x03C43194 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D14
	003 Move [X31+24], D13
	004 Move [X31+32], D12
	005 Move [X31+40], D11
	006 Move [X31+48], D10
	007 Move [X31+56], D9
	008 Move [X31+64], D8
	009 Move [X31+72], X30
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x796000
	015 Move W8, [X22+3674]
	016 Move W19, W2
	017 Move W20, W1
	018 Move V8, V6
	019 Move V9, V5
	020 Move V10, V4
	021 Move V11, V3
	022 Move V12, V2
	023 Move V13, V1
	024 Move V14, V0
	025 Move X21, X0
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x4B8000
	029 Move X0, [X0+2464]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+3674], W8
	033 Move X8, 0x4B8000
	034 Move X8, [X8+2464]
	035 Move X0, X21
	036 Move V2, V12
	037 Move V3, V11
	038 Move X8, [X8]
	039 Move V4, V10
	040 Move V5, V9
	041 Move V6, V8
	042 Move X8, [X8+184]
	043 Move W1, W20
	044 Move W2, W19
	045 Move W3, W31
	046 Move V0, [X8]
	047 Move V1, [X8+12]
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X4, X31
	050 Move [X31], S0
	051 Move [X31+12], S1
	052 Move V0, V14
	053 Move V1, V13
	054 Move [X31+4], X9
	055 Call Sprite.Create, X0, X1, X2, V0, X3, X4, X5, X6, X7
	056 Move X20, [X31+96]
	057 Move X19, [X31+104]
	058 Move X22, [X31+80]
	059 Move X21, [X31+88]
	060 Move X30, [X31+72]
	061 Move D9, [X31+56]
	062 Move D8, [X31+64]
	063 Move D11, [X31+40]
	064 Move D10, [X31+48]
	065 Move D13, [X31+24]
	066 Move D12, [X31+32]
	067 Move V14, [X31+16]
	068 Add X31, X31, 112
	069 Return X0

Method: UnityEngine.Sprite Create(UnityEngine.Texture2D texture, UnityEngine.Rect rect, UnityEngine.Vector2 pivot, System.Single pixelsPerUnit, System.UInt32 extrude)

Disassembly:
	0x03C43198 MOV X20, X0
	0x03C4319C BL 0x3C42DB4

ISIL:
	001 Move W2, 1
	002 Call Sprite.Create, X0, X1, X2, V0, X3, X4
	003 Return X0

Method: UnityEngine.Sprite Create(UnityEngine.Texture2D texture, UnityEngine.Rect rect, UnityEngine.Vector2 pivot, System.Single pixelsPerUnit)

Disassembly:
	0x03C431A0 MOV X0, X20
	0x03C431A4 LDP X20, X19, [X31 + 0x20]
	0x03C431A8 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move W2, 1
	002 Move W1, W31
	003 Call Sprite.Create, X0, X1, X2, V0, X3, X4
	004 Return X0

Method: UnityEngine.Sprite Create(UnityEngine.Texture2D texture, UnityEngine.Rect rect, UnityEngine.Vector2 pivot)

Disassembly:
	0x03C431AC ADD X31, X31, 0x30
	0x03C431B0 RET
	0x03C431B4 STR X30, [X31 - 0x20]!
	0x03C431B8 STP X20, X19, [X31 + 0x10]
	0x03C431BC ADRP X19, 0x7A2000

ISIL:
	001 Move W8, 0x42C80000
	002 Move W2, 1
	003 Move S6, W8
	004 Move W1, W31
	005 Call Sprite.Create, X0, X1, X2, V0, X3, X4
	006 Return X0

Method: System.Void GetInnerUVs_Injected(out UnityEngine.Vector4 ret)

Disassembly:
	0x03C424EC LDP X30, X25, [X31], #0x40
	0x03C424F0 RET
	0x03C424F4 LDR X8, [X20]
	0x03C424F8 MOV X0, X20
	0x03C424FC LDR X9, [X8 + 0x2F8]
	0x03C42500 LDR X1, [X8 + 0x300]
	0x03C42504 BLR X9
	0x03C42508 CBZ X0, 0x3C425AC
	0x03C4250C LDR X8, [X0]
	0x03C42510 LDR X9, [X8 + 0x258]
	0x03C42514 LDR X1, [X8 + 0x260]
	0x03C42518 BLR X9
	0x03C4251C CBZ X0, 0x3C425AC
	0x03C42520 LDR X8, [X0 + 0x10]
	0x03C42524 STR X8, [X22]
	0x03C42528 MOVZ W1, 0x2E
	0x03C4252C MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A4000
	006 Move X2, [X21+2760]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51486720
	012 Add X0, X0, 150
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2760], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetOuterUVs_Injected(out UnityEngine.Vector4 ret)

Disassembly:
	0x03C42588 B.GE 0x3C425A0
	0x03C4258C LDR X8, [X20]
	0x03C42590 MOV X0, X20
	0x03C42594 LDR X9, [X8 + 0x2C8]
	0x03C42598 LDR X1, [X8 + 0x2D0]
	0x03C4259C BLR X9
	0x03C425A0 STR X0, [X19]
	0x03C425A4 MOVZ W0, 0x1
	0x03C425A8 B 0x3C424E0
	0x03C425AC BL 0x1C16F20
	0x03C425B0 BL 0x1C171E0
	0x03C425B4 CBZ X0, 0x3C425BC
	0x03C425B8 B 0x3C41494
	0x03C425BC STR X30, [X31 - 0x10]!
	0x03C425C0 BL 0x1C16F20
	0x03C425C4 CBZ X0, 0x3C425CC
	0x03C425C8 B 0x3C41530

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A4000
	006 Move X2, [X21+2768]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51675136
	012 Add X0, X0, 1412
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2768], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetPadding_Injected(out UnityEngine.Vector4 ret)

Disassembly:
	0x03C42624 MOV V0.16B, V8.16B
	0x03C42628 LDP D9, D8, [X31], #0x20
	0x03C4262C RET
	0x03C42630 BL 0x1C16F20
	0x03C42634 B 0x3C32494
	0x03C42638 STR D8, [X31 - 0x20]!
	0x03C4263C STP X30, X19, [X31 + 0x10]
	0x03C42640 ADRP X19, 0x7A3000
	0x03C42644 LDR X0, [X19 + 0xB10]
	0x03C42648 MOV V8.16B, V0.16B
	0x03C4264C CBNZ X0, 0x3C42660
	0x03C42650 ADRP X0, 0xFFFFFFFFFCEB5000
	0x03C42654 ADD X0, X0, 0x446
	0x03C42658 BL 0x1C16CB8
	0x03C4265C STR X0, [X19 + 0xB10]
	0x03C42660 LDP X30, X19, [X31 + 0x10]
	0x03C42664 MOV V0.16B, V8.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A4000
	006 Move X2, [X21+2776]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51691520
	012 Add X0, X0, 1360
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2776], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Sprite CreateSprite_Injected(UnityEngine.Texture2D texture, ref UnityEngine.Rect rect, ref UnityEngine.Vector2 pivot, System.Single pixelsPerUnit, System.UInt32 extrude, UnityEngine.SpriteMeshType meshType, ref UnityEngine.Vector4 border, System.Boolean generateFallbackPhysicsShape, UnityEngine.SecondarySpriteTexture[] secondaryTexture)

Disassembly:
	0x03C42710 LDR X3, [X20]
	0x03C42714 MOV W1, W19
	0x03C42718 MOV W2, W31
	0x03C4271C BL 0x2222550
	0x03C42720 LDP X20, X19, [X31 + 0x30]
	0x03C42724 LDP X30, X21, [X31 + 0x20]
	0x03C42728 ADD X31, X31, 0x40
	0x03C4272C RET
	0x03C42730 SUB X31, X31, 0x40
	0x03C42734 STP X30, X21, [X31 + 0x20]
	0x03C42738 STP X20, X19, [X31 + 0x30]
	0x03C4273C ADRP X21, 0x7A3000
	0x03C42740 MOV X19, X8
	0x03C42744 LDR X8, [X21 + 0xB20]
	0x03C42748 MOV X20, X0
	0x03C4274C STP X31, X31, [X31 + 0x8]
	0x03C42750 STR X31, [X31 + 0x18]
	0x03C42754 CBNZ X8, 0x3C4276C
	0x03C42758 ADRP X0, 0xFFFFFFFFFCED0000
	0x03C4275C ADD X0, X0, 0xF91
	0x03C42760 BL 0x1C16CB8
	0x03C42764 MOV X8, X0
	0x03C42768 STR X0, [X21 + 0xB20]
	0x03C4276C ADD X1, X31, 0x8
	0x03C42770 MOV X0, X20
	0x03C42774 BLR X8
	0x03C42778 LDR X8, [X31 + 0x18]
	0x03C4277C LDUR V0, [X31 + 0x8]
	0x03C42780 LDP X30, X21, [X31 + 0x20]
	0x03C42784 STR X8, [X19 + 0x10]
	0x03C42788 STR V0, [X19]
	0x03C4278C LDP X20, X19, [X31 + 0x30]
	0x03C42790 ADD X31, X31, 0x40
	0x03C42794 RET
	0x03C42798 STP X30, X21, [X31 - 0x20]!
	0x03C4279C STP X20, X19, [X31 + 0x10]
	0x03C427A0 ADRP X21, 0x7A3000
	0x03C427A4 LDR X2, [X21 + 0xB20]
	0x03C427A8 MOV X19, X1

ISIL:
	001 Move [X31-96], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x7A4000
	013 Move X8, [X27+2784]
	014 Move X19, X7
	015 Move W23, W6
	016 Move X20, X5
	017 Move W21, W4
	018 Move W22, W3
	019 Move V8, V0
	020 Move X24, X2
	021 Move X25, X1
	022 Move X26, X0
	023 Compare X8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51523584
	026 Add X0, X0, 3633
	027 Call 0x1C17CB8
	028 Move X8, X0
	029 Move [X27+2784], X0
	030 And W6, W23, 1
	031 Move X0, X26
	032 Move X1, X25
	033 Move X2, X24
	034 Move W3, W22
	035 Move W4, W21
	036 Move X5, X20
	037 Move X7, X19
	038 Move X20, [X31+80]
	039 Move X19, [X31+88]
	040 Move X22, [X31+64]
	041 Move X21, [X31+72]
	042 Move X24, [X31+48]
	043 Move X23, [X31+56]
	044 Move X26, [X31+32]
	045 Move X25, [X31+40]
	046 Move X30, [X31+16]
	047 Move X27, [X31+24]
	048 Move V0, V8
	049 Move V8, [X31+96]
	050 CallNoReturn X8

Method: System.Void get_bounds_Injected(out UnityEngine.Bounds ret)

Disassembly:
	0x03C42814 MOV X8, X0
	0x03C42818 STR X0, [X22 + 0xB28]
	0x03C4281C ADD X2, X31, 0x8
	0x03C42820 MOV X0, X21
	0x03C42824 MOV W1, W20
	0x03C42828 BLR X8
	0x03C4282C LDP X8, X30, [X31 + 0x18]
	0x03C42830 LDUR V0, [X31 + 0x8]
	0x03C42834 LDP X22, X21, [X31 + 0x30]
	0x03C42838 STR X8, [X19 + 0x10]
	0x03C4283C STR V0, [X19]
	0x03C42840 LDP X20, X19, [X31 + 0x40]
	0x03C42844 ADD X31, X31, 0x50
	0x03C42848 RET
	0x03C4284C STR X30, [X31 - 0x30]!
	0x03C42850 STP X22, X21, [X31 + 0x10]
	0x03C42854 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A4000
	006 Move X2, [X21+2792]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51650560
	012 Add X0, X0, 1317
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2792], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void get_rect_Injected(out UnityEngine.Rect ret)

Disassembly:
	0x03C428B0 LDRB W8, [X20 + 0xB30]
	0x03C428B4 LDR X21, [X21 + 0x878]
	0x03C428B8 MOV X19, X0
	0x03C428BC TBNZ X8, 0x0, 0x3C428EC
	0x03C428C0 ADRP X0, 0x51D000
	0x03C428C4 LDR X0, [X0 + 0x880]
	0x03C428C8 BL 0x1C16CF4
	0x03C428CC ADRP X0, 0x51D000
	0x03C428D0 LDR X0, [X0 + 0x888]
	0x03C428D4 BL 0x1C16CF4
	0x03C428D8 ADRP X0, 0x51D000
	0x03C428DC LDR X0, [X0 + 0x878]
	0x03C428E0 BL 0x1C16CF4
	0x03C428E4 MOVZ W8, 0x1
	0x03C428E8 STRB W8, [X20 + 0xB30]
	0x03C428EC LDR X8, [X21]
	0x03C428F0 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A4000
	006 Move X2, [X21+2800]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51609600
	012 Add X0, X0, 1205
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2800], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void get_border_Injected(out UnityEngine.Vector4 ret)

Disassembly:
	0x03C4294C LDP X30, X21, [X31], #0x20
	0x03C42950 RET
	0x03C42954 STR X30, [X31 - 0x40]!
	0x03C42958 STP X24, X23, [X31 + 0x10]
	0x03C4295C STP X22, X21, [X31 + 0x20]
	0x03C42960 STP X20, X19, [X31 + 0x30]
	0x03C42964 ADRP X20, 0x7A3000
	0x03C42968 ADRP X23, 0x51D000
	0x03C4296C LDRB W8, [X20 + 0xB31]
	0x03C42970 LDR X23, [X23 + 0x878]
	0x03C42974 MOV X19, X0
	0x03C42978 TBNZ X8, 0x0, 0x3C4299C
	0x03C4297C ADRP X0, 0x51D000
	0x03C42980 LDR X0, [X0 + 0x880]
	0x03C42984 BL 0x1C16CF4
	0x03C42988 ADRP X0, 0x51D000
	0x03C4298C LDR X0, [X0 + 0x878]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A4000
	006 Move X2, [X21+2808]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51486720
	012 Add X0, X0, 213
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2808], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void get_pivot_Injected(out UnityEngine.Vector2 ret)

Disassembly:
	0x03C42A90 CBZ X0, 0x3C42AB0
	0x03C42A94 LDR X22, [X24]
	0x03C42A98 MOV X21, X0
	0x03C42A9C MOV X1, X22
	0x03C42AA0 BL 0x1C16E00
	0x03C42AA4 MOV X1, X0
	0x03C42AA8 CBNZ X0, 0x3C42AB4
	0x03C42AAC B 0x3C42AE8
	0x03C42AB0 MOV X1, X31
	0x03C42AB4 LDR X8, [X23]
	0x03C42AB8 MOV X2, X20
	0x03C42ABC LDR X8, [X8 + 0xB8]
	0x03C42AC0 ADD X0, X8, 0x8
	0x03C42AC4 BL 0x1C24138
	0x03C42AC8 CMP X20, X0
	0x03C42ACC MOV X20, X0
	0x03C42AD0 B.NE 0x3C42A80

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A4000
	006 Move X2, [X21+2816]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51617792
	012 Add X0, X0, 1145
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2816], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

