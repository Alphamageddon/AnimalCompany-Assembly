Type: UnityEngine.ComputeShader

Method: System.Int32 FindKernel(System.String name)

Disassembly:
	0x03C3C40C BL 0x1C16CB8
	0x03C3C410 STR X0, [X19 + 0x780]
	0x03C3C414 LDP X30, X19, [X31], #0x10
	0x03C3C418 BR X0
	0x03C3C41C STP X30, X19, [X31 - 0x10]!
	0x03C3C420 ADRP X19, 0x7A9000
	0x03C3C424 LDR X0, [X19 + 0x788]
	0x03C3C428 CBNZ X0, 0x3C3C43C
	0x03C3C42C ADRP X0, 0xFFFFFFFFFCECD000
	0x03C3C430 ADD X0, X0, 0x3AD
	0x03C3C434 BL 0x1C16CB8
	0x03C3C438 STR X0, [X19 + 0x788]
	0x03C3C43C LDP X30, X19, [X31], #0x10
	0x03C3C440 BR X0
	0x03C3C444 STP X30, X19, [X31 - 0x10]!
	0x03C3C448 ADRP X19, 0x7A9000
	0x03C3C44C LDR X0, [X19 + 0x788]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AA000
	006 Move X2, [X21+1576]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51531776
	012 Add X0, X0, 2911
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1576], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetFloat(System.Int32 nameID, System.Single val)

Disassembly:
	0x03C3C450 CBNZ X0, 0x3C3C464
	0x03C3C454 ADRP X0, 0xFFFFFFFFFCECD000
	0x03C3C458 ADD X0, X0, 0x3AD
	0x03C3C45C BL 0x1C16CB8
	0x03C3C460 STR X0, [X19 + 0x788]
	0x03C3C464 LDP X30, X19, [X31], #0x10
	0x03C3C468 BR X0
	0x03C3C46C STP X30, X19, [X31 - 0x10]!
	0x03C3C470 ADRP X19, 0x7A9000
	0x03C3C474 LDR X0, [X19 + 0x790]
	0x03C3C478 CBNZ X0, 0x3C3C48C
	0x03C3C47C ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C3C480 ADD X0, X0, 0x2A8
	0x03C3C484 BL 0x1C16CB8
	0x03C3C488 STR X0, [X19 + 0x790]
	0x03C3C48C LDP X30, X19, [X31], #0x10
	0x03C3C490 BR X0
	0x03C3C494 STP X30, X19, [X31 - 0x10]!
	0x03C3C498 ADRP X19, 0x7A9000
	0x03C3C49C LDR X0, [X19 + 0x790]
	0x03C3C4A0 CBNZ X0, 0x3C3C4B4

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7AA000
	007 Move X2, [X21+1584]
	008 Move V8, V0
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51593216
	014 Add X0, X0, 603
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+1584], X0
	018 Move X0, X20
	019 Move W1, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move V0, V8
	025 Move V8, [X31+48]
	026 CallNoReturn X2

Method: System.Void SetInt(System.Int32 nameID, System.Int32 val)

Disassembly:
	0x03C3C4A4 ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C3C4A8 ADD X0, X0, 0x2A8
	0x03C3C4AC BL 0x1C16CB8
	0x03C3C4B0 STR X0, [X19 + 0x790]
	0x03C3C4B4 LDP X30, X19, [X31], #0x10
	0x03C3C4B8 BR X0
	0x03C3C4BC STP X30, X21, [X31 - 0x20]!
	0x03C3C4C0 STP X20, X19, [X31 + 0x10]
	0x03C3C4C4 ADRP X21, 0x7A9000
	0x03C3C4C8 LDR X2, [X21 + 0x750]
	0x03C3C4CC MOV W19, W1
	0x03C3C4D0 MOV W20, W0
	0x03C3C4D4 CBNZ X2, 0x3C3C4EC
	0x03C3C4D8 ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C3C4DC ADD X0, X0, 0xA84
	0x03C3C4E0 BL 0x1C16CB8
	0x03C3C4E4 MOV X2, X0
	0x03C3C4E8 STR X0, [X21 + 0x750]
	0x03C3C4EC MOV W0, W20
	0x03C3C4F0 MOV W1, W19
	0x03C3C4F4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7AA000
	007 Move X3, [X22+1592]
	008 Move W19, W2
	009 Move W20, W1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51458048
	014 Add X0, X0, 2375
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1592], X0
	018 Move X0, X21
	019 Move W1, W20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void Internal_SetBuffer(System.Int32 kernelIndex, System.Int32 nameID, UnityEngine.ComputeBuffer buffer)

Disassembly:
	0x03C3C4F8 LDP X30, X21, [X31], #0x20
	0x03C3C4FC BR X2
	0x03C3C500 STP X30, X21, [X31 - 0x20]!
	0x03C3C504 STP X20, X19, [X31 + 0x10]
	0x03C3C508 ADRP X21, 0x7A9000
	0x03C3C50C LDR X2, [X21 + 0x758]
	0x03C3C510 MOV W19, W1
	0x03C3C514 MOV W20, W0
	0x03C3C518 CBNZ X2, 0x3C3C530
	0x03C3C51C ADRP X0, 0xFFFFFFFFFCEB5000
	0x03C3C520 ADD X0, X0, 0x246
	0x03C3C524 BL 0x1C16CB8
	0x03C3C528 MOV X2, X0
	0x03C3C52C STR X0, [X21 + 0x758]
	0x03C3C530 MOV W0, W20
	0x03C3C534 MOV W1, W19
	0x03C3C538 LDP X20, X19, [X31 + 0x10]
	0x03C3C53C LDP X30, X21, [X31], #0x20
	0x03C3C540 BR X2
	0x03C3C544 STR X30, [X31 - 0x20]!
	0x03C3C548 STP X20, X19, [X31 + 0x10]
	0x03C3C54C ADRP X20, 0x7A9000
	0x03C3C550 LDR X1, [X20 + 0x760]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7AA000
	008 Move X4, [X23+1600]
	009 Move X19, X3
	010 Move W20, W2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51683328
	016 Add X0, X0, 483
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+1600], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move W2, W20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetBuffer(System.Int32 kernelIndex, System.Int32 nameID, UnityEngine.ComputeBuffer buffer)

Disassembly:
	0x03C3C554 MOV W19, W0
	0x03C3C558 CBNZ X1, 0x3C3C570
	0x03C3C55C ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C3C560 ADD X0, X0, 0xED4
	0x03C3C564 BL 0x1C16CB8
	0x03C3C568 MOV X1, X0
	0x03C3C56C STR X0, [X20 + 0x760]
	0x03C3C570 MOV W0, W19
	0x03C3C574 LDP X20, X19, [X31 + 0x10]
	0x03C3C578 LDR X30, [X31], #0x20
	0x03C3C57C BR X1
	0x03C3C580 STR X30, [X31 - 0x20]!
	0x03C3C584 STP X20, X19, [X31 + 0x10]
	0x03C3C588 ADRP X20, 0x7A9000
	0x03C3C58C LDR X1, [X20 + 0x798]
	0x03C3C590 MOV X19, X0
	0x03C3C594 CBNZ X1, 0x3C3C5AC
	0x03C3C598 ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C3C59C ADD X0, X0, 0x498
	0x03C3C5A0 BL 0x1C16CB8
	0x03C3C5A4 MOV X1, X0
	0x03C3C5A8 STR X0, [X20 + 0x798]
	0x03C3C5AC MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7AA000
	008 Move X4, [X23+1600]
	009 Move X19, X3
	010 Move W20, W2
	011 Move W21, W1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51683328
	016 Add X0, X0, 483
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+1600], X0
	020 Move X0, X22
	021 Move W1, W21
	022 Move W2, W20
	023 Move X3, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void SetConstantComputeBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03C3C5B0 LDP X20, X19, [X31 + 0x10]
	0x03C3C5B4 LDR X30, [X31], #0x20
	0x03C3C5B8 BR X1
	0x03C3C5BC STR X30, [X31 - 0x20]!
	0x03C3C5C0 STP X20, X19, [X31 + 0x10]
	0x03C3C5C4 ADRP X20, 0x7A9000
	0x03C3C5C8 LDR X1, [X20 + 0x798]
	0x03C3C5CC MOV X19, X0
	0x03C3C5D0 CBNZ X1, 0x3C3C5E8
	0x03C3C5D4 ADRP X0, 0xFFFFFFFFFCEB9000
	0x03C3C5D8 ADD X0, X0, 0x498
	0x03C3C5DC BL 0x1C16CB8
	0x03C3C5E0 MOV X1, X0
	0x03C3C5E4 STR X0, [X20 + 0x798]
	0x03C3C5E8 MOV X0, X19
	0x03C3C5EC LDP X20, X19, [X31 + 0x10]
	0x03C3C5F0 LDR X30, [X31], #0x20
	0x03C3C5F4 BR X1
	0x03C3C5F8 STR X30, [X31 - 0x20]!
	0x03C3C5FC STP X20, X19, [X31 + 0x10]
	0x03C3C600 ADRP X19, 0x7A9000
	0x03C3C604 ADRP X20, 0x4B8000
	0x03C3C608 LDRB W8, [X19 + 0x7A0]
	0x03C3C60C LDR X20, [X20 + 0x9F0]
	0x03C3C610 TBNZ X8, 0x0, 0x3C3C628
	0x03C3C614 ADRP X0, 0x4B8000
	0x03C3C618 LDR X0, [X0 + 0x9F0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7AA000
	009 Move X5, [X24+1608]
	010 Move W19, W4
	011 Move W20, W3
	012 Move X21, X2
	013 Move W22, W1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51548160
	018 Add X0, X0, 3680
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+1608], X0
	022 Move X0, X23
	023 Move W1, W22
	024 Move X2, X21
	025 Move W3, W20
	026 Move W4, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void Dispatch(System.Int32 kernelIndex, System.Int32 threadGroupsX, System.Int32 threadGroupsY, System.Int32 threadGroupsZ)

Disassembly:
	0x03C3C61C BL 0x1C16CF4
	0x03C3C620 MOVZ W8, 0x1
	0x03C3C624 STRB W8, [X19 + 0x7A0]
	0x03C3C628 LDR X0, [X20]
	0x03C3C62C LDR W8, [X0 + 0xE0]
	0x03C3C630 CBNZ W8, 0x3C3C638
	0x03C3C634 BL 0x1C16DFC
	0x03C3C638 LDP X20, X19, [X31 + 0x10]
	0x03C3C63C MOV X0, X31
	0x03C3C640 LDR X30, [X31], #0x20
	0x03C3C644 B 0x3361584
	0x03C3C648 SUB X31, X31, 0x30
	0x03C3C64C STR X30, [X31 + 0x10]
	0x03C3C650 STP X20, X19, [X31 + 0x20]
	0x03C3C654 ADRP X20, 0x7A9000
	0x03C3C658 ADRP X19, 0x523000
	0x03C3C65C LDRB W8, [X20 + 0x7A1]
	0x03C3C660 LDR X19, [X19 + 0x750]
	0x03C3C664 TBNZ X8, 0x0, 0x3C3C67C
	0x03C3C668 ADRP X0, 0x523000
	0x03C3C66C LDR X0, [X0 + 0x750]
	0x03C3C670 BL 0x1C16CF4
	0x03C3C674 MOVZ W8, 0x1
	0x03C3C678 STRB W8, [X20 + 0x7A1]
	0x03C3C67C ADD X0, X31, 0x18
	0x03C3C680 MOVZ W1, 0x7B2
	0x03C3C684 MOVZ W2, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7AA000
	009 Move X5, [X24+1616]
	010 Move W19, W4
	011 Move W20, W3
	012 Move W21, W2
	013 Move W22, W1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51625984
	018 Add X0, X0, 799
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+1616], X0
	022 Move X0, X23
	023 Move W1, W22
	024 Move W2, W21
	025 Move W3, W20
	026 Move W4, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

Method: System.Void EnableKeyword(System.String keyword)

Disassembly:
	0x03C3C688 MOVZ W3, 0x1
	0x03C3C68C MOVZ W7, 0x1
	0x03C3C690 MOV W4, W31
	0x03C3C694 MOV W5, W31
	0x03C3C698 MOV W6, W31
	0x03C3C69C STR X31, [X31 + 0x18]
	0x03C3C6A0 STR X31, [X31]
	0x03C3C6A4 BL 0x335F47C
	0x03C3C6A8 LDR X8, [X19]
	0x03C3C6AC LDP X30, X9, [X31 + 0x10]
	0x03C3C6B0 LDP X20, X19, [X31 + 0x20]
	0x03C3C6B4 LDR X8, [X8 + 0xB8]
	0x03C3C6B8 STR X9, [X8]
	0x03C3C6BC ADD X31, X31, 0x30
	0x03C3C6C0 RET
	0x03C3C6C4 STP X30, X19, [X31 - 0x10]!
	0x03C3C6C8 ADRP X19, 0x7A9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AA000
	006 Move X2, [X21+1624]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51490816
	012 Add X0, X0, 2850
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1624], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void DisableKeyword(System.String keyword)

Disassembly:
	0x03C3C6CC LDR X0, [X19 + 0x7A8]
	0x03C3C6D0 CBNZ X0, 0x3C3C6E4
	0x03C3C6D4 ADRP X0, 0xFFFFFFFFFCEB7000
	0x03C3C6D8 ADD X0, X0, 0x459
	0x03C3C6DC BL 0x1C16CB8
	0x03C3C6E0 STR X0, [X19 + 0x7A8]
	0x03C3C6E4 LDP X30, X19, [X31], #0x10
	0x03C3C6E8 BR X0
	0x03C3C6EC STP X30, X19, [X31 - 0x10]!
	0x03C3C6F0 ADRP X19, 0x7A9000
	0x03C3C6F4 LDR X0, [X19 + 0x7B0]
	0x03C3C6F8 CBNZ X0, 0x3C3C70C
	0x03C3C6FC ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C3C700 ADD X0, X0, 0xB3C
	0x03C3C704 BL 0x1C16CB8
	0x03C3C708 STR X0, [X19 + 0x7B0]
	0x03C3C70C LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AA000
	006 Move X2, [X21+1632]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51458048
	012 Add X0, X0, 2436
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1632], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetFloat(System.String name, System.Single val)

Disassembly:
	0x03C3C710 BR X0
	0x03C3C714 STP X30, X19, [X31 - 0x10]!
	0x03C3C718 ADRP X19, 0x7A9000
	0x03C3C71C LDR X0, [X19 + 0x7B8]
	0x03C3C720 CBNZ X0, 0x3C3C734
	0x03C3C724 ADRP X0, 0xFFFFFFFFFCED3000
	0x03C3C728 ADD X0, X0, 0x571
	0x03C3C72C BL 0x1C16CB8
	0x03C3C730 STR X0, [X19 + 0x7B8]
	0x03C3C734 LDP X30, X19, [X31], #0x10
	0x03C3C738 BR X0
	0x03C3C73C STP X30, X19, [X31 - 0x10]!
	0x03C3C740 ADRP X19, 0x7A9000
	0x03C3C744 LDR X0, [X19 + 0x7C0]
	0x03C3C748 CBNZ X0, 0x3C3C75C
	0x03C3C74C ADRP X0, 0xFFFFFFFFFCEBD000
	0x03C3C750 ADD X0, X0, 0x526
	0x03C3C754 BL 0x1C16CB8
	0x03C3C758 STR X0, [X19 + 0x7C0]
	0x03C3C75C LDP X30, X19, [X31], #0x10
	0x03C3C760 BR X0
	0x03C3C764 STP X30, X19, [X31 - 0x10]!
	0x03C3C768 ADRP X19, 0x7A9000
	0x03C3C76C LDR X0, [X19 + 0x7C8]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, X1
	008 Move X1, X31
	009 Move V8, V0
	010 Call Shader.PropertyToID, X0
	011 Move X21, 0x7AA000
	012 Move X2, [X21+1584]
	013 Move W20, W0
	014 Compare X2, 0
	015 JumpIfNotEqual {21}
	016 Move X0, -51593216
	017 Add X0, X0, 603
	018 Call 0x1C17CB8
	019 Move X2, X0
	020 Move [X21+1584], X0
	021 Move X0, X19
	022 Move W1, W20
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X30, [X31+16]
	026 Move X21, [X31+24]
	027 Move V0, V8
	028 Move V8, [X31+48]
	029 CallNoReturn X2

Method: System.Void SetBuffer(System.Int32 kernelIndex, System.String name, UnityEngine.ComputeBuffer buffer)

Disassembly:
	0x03C3C770 CBNZ X0, 0x3C3C784
	0x03C3C774 ADRP X0, 0xFFFFFFFFFCEC7000
	0x03C3C778 ADD X0, X0, 0x1FF
	0x03C3C77C BL 0x1C16CB8
	0x03C3C780 STR X0, [X19 + 0x7C8]
	0x03C3C784 LDP X30, X19, [X31], #0x10
	0x03C3C788 BR X0
	0x03C3C78C STP X30, X19, [X31 - 0x10]!
	0x03C3C790 ADRP X19, 0x7A9000
	0x03C3C794 LDR X0, [X19 + 0x7D0]
	0x03C3C798 CBNZ X0, 0x3C3C7AC
	0x03C3C79C ADRP X0, 0xFFFFFFFFFCED1000
	0x03C3C7A0 ADD X0, X0, 0x6F
	0x03C3C7A4 BL 0x1C16CB8
	0x03C3C7A8 STR X0, [X19 + 0x7D0]
	0x03C3C7AC LDP X30, X19, [X31], #0x10
	0x03C3C7B0 BR X0
	0x03C3C7B4 STP X30, X19, [X31 - 0x10]!
	0x03C3C7B8 ADRP X19, 0x7A9000
	0x03C3C7BC LDR X0, [X19 + 0x7D8]
	0x03C3C7C0 CBNZ X0, 0x3C3C7D4
	0x03C3C7C4 ADRP X0, 0xFFFFFFFFFCEE7000
	0x03C3C7C8 ADD X0, X0, 0x2E4
	0x03C3C7CC BL 0x1C16CB8
	0x03C3C7D0 STR X0, [X19 + 0x7D8]
	0x03C3C7D4 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W20, W1
	008 Move X21, X0
	009 Move X0, X2
	010 Move X1, X31
	011 Move X19, X3
	012 Call Shader.PropertyToID, X0
	013 Move X23, 0x7AA000
	014 Move X4, [X23+1600]
	015 Move W22, W0
	016 Compare X4, 0
	017 JumpIfNotEqual {23}
	018 Move X0, -51683328
	019 Add X0, X0, 483
	020 Call 0x1C17CB8
	021 Move X4, X0
	022 Move [X23+1600], X0
	023 Move X0, X21
	024 Move W1, W20
	025 Move W2, W22
	026 Move X3, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 CallNoReturn X4

Method: System.Void SetConstantBuffer(System.Int32 nameID, UnityEngine.ComputeBuffer buffer, System.Int32 offset, System.Int32 size)

Disassembly:
	0x03C3C7D8 BR X0
	0x03C3C7DC STP X30, X19, [X31 - 0x10]!
	0x03C3C7E0 ADRP X19, 0x7A9000
	0x03C3C7E4 LDR X0, [X19 + 0x7E0]
	0x03C3C7E8 CBNZ X0, 0x3C3C7FC
	0x03C3C7EC ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C3C7F0 ADD X0, X0, 0x295
	0x03C3C7F4 BL 0x1C16CB8
	0x03C3C7F8 STR X0, [X19 + 0x7E0]
	0x03C3C7FC LDP X30, X19, [X31], #0x10
	0x03C3C800 BR X0
	0x03C3C804 STR D8, [X31 - 0x20]!
	0x03C3C808 STP X30, X19, [X31 + 0x10]
	0x03C3C80C ADRP X19, 0x7A9000
	0x03C3C810 LDR X0, [X19 + 0x7E8]
	0x03C3C814 MOV V8.16B, V0.16B
	0x03C3C818 CBNZ X0, 0x3C3C82C
	0x03C3C81C ADRP X0, 0xFFFFFFFFFCEEA000
	0x03C3C820 ADD X0, X0, 0xF30
	0x03C3C824 BL 0x1C16CB8
	0x03C3C828 STR X0, [X19 + 0x7E8]
	0x03C3C82C LDP X30, X19, [X31 + 0x10]
	0x03C3C830 MOV V0.16B, V8.16B
	0x03C3C834 LDR V8, [X31], #0x20
	0x03C3C838 BR X0
	0x03C3C83C STP X30, X19, [X31 - 0x10]!
	0x03C3C840 ADRP X19, 0x7A9000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x7AA000
	009 Move X5, [X24+1608]
	010 Move W19, W4
	011 Move W20, W3
	012 Move X21, X2
	013 Move W22, W1
	014 Move X23, X0
	015 Compare X5, 0
	016 JumpIfNotEqual {22}
	017 Move X0, -51548160
	018 Add X0, X0, 3680
	019 Call 0x1C17CB8
	020 Move X5, X0
	021 Move [X24+1608], X0
	022 Move X0, X23
	023 Move W1, W22
	024 Move X2, X21
	025 Move W3, W20
	026 Move W4, W19
	027 Move X20, [X31+48]
	028 Move X19, [X31+56]
	029 Move X22, [X31+32]
	030 Move X21, [X31+40]
	031 Move X24, [X31+16]
	032 Move X23, [X31+24]
	033 Move X30, [X31+64]
	034 CallNoReturn X5

