Type: UnityEngine.Jobs.TransformAccessArray

Method: System.Void .ctor(System.Int32 capacity, System.Int32 desiredJobCount = -1)

Disassembly:
	0x03C44678 LDR X8, [X8 + 0x5C8]
	0x03C4467C LDR X9, [X9 + 0x910]
	0x03C44680 MOV X0, X21
	0x03C44684 MOV W1, W31
	0x03C44688 LDR X2, [X8]

ISIL:
	001 Move X8, X0
	002 Move W0, W1
	003 Move W1, W2
	004 Move X2, X8

Method: System.Void Allocate(System.Int32 capacity, System.Int32 desiredJobCount, out UnityEngine.Jobs.TransformAccessArray array)

Disassembly:
	0x03C4468C LDR X3, [X9]
	0x03C44690 BL 0x1C170BC
	0x03C44694 MOV X21, X0
	0x03C44698 CBNZ X0, 0x3C446C0
	0x03C4469C LDR X0, [X23]
	0x03C446A0 LDR X21, [X22]
	0x03C446A4 LDR W8, [X0 + 0xE0]
	0x03C446A8 CBNZ W8, 0x3C446B0
	0x03C446AC BL 0x1C16DFC
	0x03C446B0 MOV X0, X21
	0x03C446B4 MOV X1, X31
	0x03C446B8 BL 0x338C698
	0x03C446BC MOV X21, X0
	0x03C446C0 ADRP X8, 0x4AF000
	0x03C446C4 LDR X8, [X8 + 0x598]
	0x03C446C8 LDR X22, [X20 + 0x10]
	0x03C446CC LDR X0, [X8]
	0x03C446D0 LDR W8, [X0 + 0xE0]
	0x03C446D4 CBNZ W8, 0x3C446DC
	0x03C446D8 BL 0x1C16DFC
	0x03C446DC MOV X0, X22
	0x03C446E0 MOV X1, X31
	0x03C446E4 BL 0x3C354F8
	0x03C446E8 TBZ X0, 0x0, 0x3C44700
	0x03C446EC LDR X0, [X20 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7A2000
	007 Move X8, [X22+2952]
	008 Move X19, X2
	009 Move W20, W1
	010 Move W21, W0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51531776
	014 Add X0, X0, 3865
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+2952], X0
	018 Move W0, W21
	019 Move W1, W20
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move [X19], X0
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X22, [X31+16]
	025 Move X21, [X31+24]
	026 Move W1, 7
	027 Move W2, W31
	028 Move X3, X31
	029 Move X30, [X31+48]
	030 Call UnsafeUtility.LeakRecord, X0, X1, X2
	031 Return 

Method: System.Boolean get_isCreated()

Disassembly:
	0x03C44734 MOV W1, W31
	0x03C44738 LDR X2, [X8]
	0x03C4473C LDR X3, [X9]
	0x03C44740 BL 0x1C170BC

ISIL:
	001 Move X0, [X0]
	002 Move X1, X31
	003 Move X2, X31
	004 Call IntPtr.op_Inequality, X0, X1
	005 Return X0

Method: System.Void Dispose()

Disassembly:
	0x03C44744 MOV X2, X0
	0x03C44748 LDR X1, [X20 + 0x20]
	0x03C4474C LDR W3, [X20 + 0x28]
	0x03C44750 MOV X0, X19
	0x03C44754 MOV X4, X21
	0x03C44758 LDP X20, X19, [X31 + 0x20]
	0x03C4475C LDP X22, X21, [X31 + 0x10]
	0x03C44760 LDP X30, X23, [X31], #0x30
	0x03C44764 B 0x3C455FC
	0x03C44768 BL 0x1C16F20
	0x03C4476C STR X30, [X31 - 0x50]!
	0x03C44770 STP X26, X25, [X31 + 0x10]
	0x03C44774 STP X24, X23, [X31 + 0x20]
	0x03C44778 STP X22, X21, [X31 + 0x30]
	0x03C4477C STP X20, X19, [X31 + 0x40]
	0x03C44780 ADRP X22, 0x7A1000
	0x03C44784 ADRP X25, 0x4D7000
	0x03C44788 ADRP X23, 0x4AF000
	0x03C4478C LDRB W8, [X22 + 0xBCF]
	0x03C44790 LDR X25, [X25 + 0x7F8]
	0x03C44794 LDR X23, [X23 + 0x6C0]
	0x03C44798 MOV X21, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0]
	007 Move W1, 7
	008 Move X2, X31
	009 Call UnsafeUtility.LeakErase, X0, X1
	010 Move X21, 0x7A2000
	011 Move X8, [X21+2960]
	012 Move X20, [X19]
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51490816
	016 Add X0, X0, 2714
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X21+2960], X0
	020 Move X0, X20
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move [X19], X31
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.IntPtr GetTransformAccessArrayForSchedule()

Disassembly:
	0x03C447D8 ADRP X0, 0x4D7000
	0x03C447DC LDR X0, [X0 + 0x7F8]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: UnityEngine.Transform get_Item(System.Int32 index)

Disassembly:
	0x03C447E0 BL 0x1C16CF4
	0x03C447E4 ADRP X0, 0x4AF000
	0x03C447E8 LDR X0, [X0 + 0x598]
	0x03C447EC BL 0x1C16CF4
	0x03C447F0 ADRP X0, 0x51B000
	0x03C447F4 LDR X0, [X0 + 0x928]
	0x03C447F8 BL 0x1C16CF4
	0x03C447FC ADRP X0, 0x4B7000
	0x03C44800 LDR X0, [X0 + 0xC60]
	0x03C44804 BL 0x1C16CF4
	0x03C44808 ADRP X0, 0x4B7000
	0x03C4480C LDR X0, [X0 + 0x5C8]
	0x03C44810 BL 0x1C16CF4
	0x03C44814 ADRP X0, 0x4AF000
	0x03C44818 LDR X0, [X0 + 0x6C0]
	0x03C4481C BL 0x1C16CF4
	0x03C44820 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A2000
	006 Move X2, [X21+3008]
	007 Move X20, [X0]
	008 Move W19, W1
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51691520
	012 Add X0, X0, 1169
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3008], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_length()

Disassembly:
	0x03C44868 LDR X0, [X23]
	0x03C4486C LDR X22, [X21 + 0x18]
	0x03C44870 LDR W8, [X0 + 0xE0]
	0x03C44874 CBNZ W8, 0x3C4487C
	0x03C44878 BL 0x1C16DFC
	0x03C4487C ADRP X8, 0x4B7000
	0x03C44880 ADRP X9, 0x51B000
	0x03C44884 LDR X8, [X8 + 0x5C8]
	0x03C44888 LDR X9, [X9 + 0x928]
	0x03C4488C MOV X0, X22
	0x03C44890 MOV W1, W31
	0x03C44894 LDR X2, [X8]
	0x03C44898 LDR X3, [X9]
	0x03C4489C BL 0x1C170BC
	0x03C448A0 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A2000
	005 Move X1, [X20+3000]
	006 Move X19, [X0]
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51716096
	010 Add X0, X0, 843
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3000], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Add(UnityEngine.Transform transform)

Disassembly:
	0x03C448E0 CBNZ W8, 0x3C448E8
	0x03C448E4 BL 0x1C16DFC
	0x03C448E8 MOV X0, X23
	0x03C448EC MOV X1, X31
	0x03C448F0 BL 0x338C698
	0x03C448F4 LDR X8, [X26]
	0x03C448F8 MOV X23, X0
	0x03C448FC MOVZ W1, 0x1
	0x03C44900 MOV X0, X8
	0x03C44904 BL 0x1C16D6C
	0x03C44908 CBZ X0, 0x3C44B84
	0x03C4490C MOV X24, X0
	0x03C44910 CBZ X22, 0x3C44928
	0x03C44914 LDR X8, [X24]
	0x03C44918 MOV X0, X22
	0x03C4491C LDR X1, [X8 + 0x40]
	0x03C44920 BL 0x1C16E00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A2000
	006 Move X2, [X21+2968]
	007 Move X20, [X0]
	008 Move X19, X1
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51531776
	012 Add X0, X0, 3938
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2968], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void RemoveAtSwapBack(System.Int32 index)

Disassembly:
	0x03C44968 MOV X24, X0
	0x03C4496C MOV X1, X31
	0x03C44970 MOV X0, X8
	0x03C44974 BL 0x338C698
	0x03C44978 CBZ X24, 0x3C44B84
	0x03C4497C MOV X25, X0
	0x03C44980 CBZ X0, 0x3C44998
	0x03C44984 LDR X8, [X24]
	0x03C44988 MOV X0, X25
	0x03C4498C LDR X1, [X8 + 0x40]
	0x03C44990 BL 0x1C16E00
	0x03C44994 CBZ X0, 0x3C44B8C
	0x03C44998 LDR W8, [X24 + 0x18]
	0x03C4499C CBZ W8, 0x3C44B88
	0x03C449A0 ADRP X8, 0x4E8000
	0x03C449A4 LDR X8, [X8 + 0x878]
	0x03C449A8 STR X25, [X24 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A2000
	006 Move X2, [X21+2976]
	007 Move X20, [X0]
	008 Move W19, W1
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51609600
	012 Add X0, X0, 1512
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2976], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.IntPtr Create(System.Int32 capacity, System.Int32 desiredJobCount)

Disassembly:
	0x03C446F0 CBZ X0, 0x3C44768
	0x03C446F4 MOV X1, X31
	0x03C446F8 BL 0x33BE520
	0x03C446FC B 0x3C44744
	0x03C44700 MOV X0, X20
	0x03C44704 BL 0x3C441BC
	0x03C44708 LDR X8, [X23]
	0x03C4470C MOV X22, X0
	0x03C44710 LDR W9, [X8 + 0xE0]
	0x03C44714 CBNZ W9, 0x3C44720
	0x03C44718 MOV X0, X8
	0x03C4471C BL 0x1C16DFC
	0x03C44720 ADRP X8, 0x4B7000
	0x03C44724 ADRP X9, 0x51B000
	0x03C44728 LDR X8, [X8 + 0x5C8]
	0x03C4472C LDR X9, [X9 + 0x910]
	0x03C44730 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A2000
	006 Move X2, [X21+2952]
	007 Move W19, W1
	008 Move W20, W0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51531776
	012 Add X0, X0, 3865
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2952], X0
	016 Move W0, W20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void DestroyTransformAccessArray(System.IntPtr transformArray)

Disassembly:
	0x03C4479C MOV X19, X1
	0x03C447A0 MOV X20, X0
	0x03C447A4 TBNZ X8, 0x0, 0x3C44828
	0x03C447A8 ADRP X0, 0x51B000
	0x03C447AC LDR X0, [X0 + 0x918]
	0x03C447B0 BL 0x1C16CF4
	0x03C447B4 ADRP X0, 0x51B000
	0x03C447B8 LDR X0, [X0 + 0x920]
	0x03C447BC BL 0x1C16CF4
	0x03C447C0 ADRP X0, 0x4E8000
	0x03C447C4 LDR X0, [X0 + 0x878]
	0x03C447C8 BL 0x1C16CF4
	0x03C447CC ADRP X0, 0x4AF000
	0x03C447D0 LDR X0, [X0 + 0x9D0]
	0x03C447D4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A2000
	005 Move X1, [X20+2960]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51490816
	010 Add X0, X0, 2714
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2960], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Add(System.IntPtr transformArrayIntPtr, UnityEngine.Transform transform)

Disassembly:
	0x03C44924 CBZ X0, 0x3C44B8C
	0x03C44928 LDR W8, [X24 + 0x18]
	0x03C4492C CBZ W8, 0x3C44B88
	0x03C44930 STR X22, [X24 + 0x20]
	0x03C44934 CBZ X23, 0x3C44B84
	0x03C44938 LDR X8, [X23]
	0x03C4493C MOV X0, X23
	0x03C44940 MOV X1, X24
	0x03C44944 LDR X9, [X8 + 0x8D8]
	0x03C44948 LDR X2, [X8 + 0x8E0]
	0x03C4494C BLR X9
	0x03C44950 LDR X8, [X26]
	0x03C44954 MOV X23, X0
	0x03C44958 MOVZ W1, 0x3
	0x03C4495C MOV X0, X8
	0x03C44960 BL 0x1C16D6C
	0x03C44964 LDR X8, [X25]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A2000
	006 Move X2, [X21+2968]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51531776
	012 Add X0, X0, 3938
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2968], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void RemoveAtSwapBack(System.IntPtr transformArrayIntPtr, System.Int32 index)

Disassembly:
	0x03C449AC MOV X1, X31
	0x03C449B0 LDR X0, [X8]
	0x03C449B4 BL 0x338C698
	0x03C449B8 MOV X25, X0
	0x03C449BC CBZ X0, 0x3C449D4
	0x03C449C0 LDR X8, [X24]
	0x03C449C4 MOV X0, X25
	0x03C449C8 LDR X1, [X8 + 0x40]
	0x03C449CC BL 0x1C16E00
	0x03C449D0 CBZ X0, 0x3C44B8C
	0x03C449D4 LDR W8, [X24 + 0x18]
	0x03C449D8 CMP W8, 0x1
	0x03C449DC B.LS 0x3C44B88
	0x03C449E0 STR X25, [X24 + 0x28]
	0x03C449E4 CBZ X22, 0x3C44A00
	0x03C449E8 LDR X8, [X24]
	0x03C449EC MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A2000
	006 Move X2, [X21+2976]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51609600
	012 Add X0, X0, 1512
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2976], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.IntPtr GetSortedTransformAccess(System.IntPtr transformArrayIntPtr)

Disassembly:
	0x03C449F0 LDR X1, [X8 + 0x40]
	0x03C449F4 BL 0x1C16E00
	0x03C449F8 CBZ X0, 0x3C44B8C
	0x03C449FC LDR W8, [X24 + 0x18]
	0x03C44A00 CMP W8, 0x2
	0x03C44A04 B.LS 0x3C44B88
	0x03C44A08 STR X22, [X24 + 0x30]
	0x03C44A0C CBZ X23, 0x3C44B84
	0x03C44A10 ADRP X25, 0x4AF000
	0x03C44A14 LDR X25, [X25 + 0x598]
	0x03C44A18 MOV X0, X23
	0x03C44A1C MOV X1, X24
	0x03C44A20 MOV X2, X31
	0x03C44A24 BL 0x3397418
	0x03C44A28 LDR X8, [X25]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A2000
	005 Move X1, [X20+2984]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51699712
	010 Add X0, X0, 1422
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2984], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.IntPtr GetSortedToUserIndex(System.IntPtr transformArrayIntPtr)

Disassembly:
	0x03C44A2C LDR X23, [X21 + 0x10]
	0x03C44A30 MOV X21, X0
	0x03C44A34 LDR W9, [X8 + 0xE0]
	0x03C44A38 CBNZ W9, 0x3C44A44
	0x03C44A3C MOV X0, X8
	0x03C44A40 BL 0x1C16DFC
	0x03C44A44 MOV X0, X23
	0x03C44A48 MOV X1, X31
	0x03C44A4C BL 0x3C354F8
	0x03C44A50 TBZ X0, 0x0, 0x3C44A88
	0x03C44A54 CBZ X23, 0x3C44B84
	0x03C44A58 MOV X0, X23
	0x03C44A5C MOV X1, X31
	0x03C44A60 BL 0x33BE520
	0x03C44A64 CBZ X22, 0x3C44B84

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A2000
	005 Move X1, [X20+2992]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51699712
	010 Add X0, X0, 1501
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2992], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 GetLength(System.IntPtr transformArrayIntPtr)

Disassembly:
	0x03C448A4 CBNZ X0, 0x3C448CC
	0x03C448A8 LDR X0, [X23]
	0x03C448AC LDR X22, [X25]
	0x03C448B0 LDR W8, [X0 + 0xE0]
	0x03C448B4 CBNZ W8, 0x3C448BC
	0x03C448B8 BL 0x1C16DFC
	0x03C448BC MOV X0, X22
	0x03C448C0 MOV X1, X31
	0x03C448C4 BL 0x338C698
	0x03C448C8 MOV X22, X0
	0x03C448CC LDR X0, [X23]
	0x03C448D0 ADRP X26, 0x4B7000
	0x03C448D4 LDR X23, [X24]
	0x03C448D8 LDR W8, [X0 + 0xE0]
	0x03C448DC LDR X26, [X26 + 0xC60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7A2000
	005 Move X1, [X20+3000]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51716096
	010 Add X0, X0, 843
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+3000], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Transform GetTransform(System.IntPtr transformArrayIntPtr, System.Int32 index)

Disassembly:
	0x03C44824 STRB W8, [X22 + 0xBCF]
	0x03C44828 LDR X0, [X23]
	0x03C4482C LDR X22, [X25]
	0x03C44830 LDR W8, [X0 + 0xE0]
	0x03C44834 CBNZ W8, 0x3C4483C
	0x03C44838 BL 0x1C16DFC
	0x03C4483C MOV X0, X22
	0x03C44840 MOV X1, X31
	0x03C44844 BL 0x338C698
	0x03C44848 CBZ X21, 0x3C44B84
	0x03C4484C MOV X22, X0
	0x03C44850 LDR X0, [X21 + 0x18]
	0x03C44854 ADRP X24, 0x51B000
	0x03C44858 LDR X24, [X24 + 0x920]
	0x03C4485C MOV X1, X31
	0x03C44860 BL 0x32277A8
	0x03C44864 TBNZ X0, 0x0, 0x3C448CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7A2000
	006 Move X2, [X21+3008]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51691520
	012 Add X0, X0, 1169
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+3008], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

