Type: UnityEngine.ExpressionEvaluator

Method: System.Boolean Evaluate(System.String expression, out T value, out UnityEngine.ExpressionEvaluator/Expression delayed)

Disassembly:
	0x021DF730 MOV X24, X0
	0x021DF734 MOV X1, X31
	0x021DF738 LDR X8, [X8]
	0x021DF73C MOV X0, X8
	0x021DF740 BL 0x338C698
	0x021DF744 MOV X1, X0
	0x021DF748 MOV X0, X24
	0x021DF74C MOV X2, X31
	0x021DF750 BL 0x3395194
	0x021DF754 LDR X8, [X20 + 0x38]
	0x021DF758 TBZ X0, 0x0, 0x21DF7DC
	0x021DF75C LDR X1, [X8 + 0x28]
	0x021DF760 MOV X0, X19
	0x021DF764 BL 0x22A6DC0
	0x021DF768 ADRP X9, 0x1F3C000
	0x021DF76C LDR W8, [X0]
	0x021DF770 LDR X9, [X9 + 0xA68]
	0x021DF774 SCVTF D0, W8
	0x021DF778 LDR X0, [X9]
	0x021DF77C STR D0, [X31 + 0x38]
	0x021DF780 LDR W8, [X0 + 0xE0]
	0x021DF784 CBNZ W8, 0x21DF78C
	0x021DF788 BL 0x1C16DFC
	0x021DF78C ADD X1, X31, 0x38
	0x021DF790 MOV X0, X23
	0x021DF794 MOV W2, W22
	0x021DF798 MOV W3, W21
	0x021DF79C MOV X4, X31
	0x021DF7A0 BL 0x3C079E4
	0x021DF7A4 LDR V0, [X31 + 0x38]
	0x021DF7A8 MOVZ X8, 0x7FF00000
	0x021DF7AC FMOV D1, X8
	0x021DF7B0 MOVZ W9, 0x80000000
	0x021DF7B4 FCVTZS W8, D0
	0x021DF7B8 FCMP D0, D1
	0x021DF7BC CSEL W8, W9, W8, EQ
	0x021DF7C0 STR W8, [X31 + 0x34]
	0x021DF7C4 LDR X8, [X20 + 0x38]
	0x021DF7C8 MOV W21, W0
	0x021DF7CC ADD X0, X31, 0x34
	0x021DF7D0 LDR X1, [X8 + 0x30]
	0x021DF7D4 BL 0x22A6D98
	0x021DF7D8 B 0x21DFA38
	0x021DF7DC LDR X0, [X25]
	0x021DF7E0 LDR X24, [X8]
	0x021DF7E4 LDR W9, [X0 + 0xE0]
	0x021DF7E8 CBNZ W9, 0x21DF7F0
	0x021DF7EC BL 0x1C16DFC
	0x021DF7F0 MOV X0, X24
	0x021DF7F4 MOV X1, X31
	0x021DF7F8 BL 0x338C698
	0x021DF7FC ADRP X8, 0x1F3B000
	0x021DF800 LDR X8, [X8 + 0xD88]
	0x021DF804 MOV X24, X0
	0x021DF808 MOV X1, X31
	0x021DF80C LDR X8, [X8]
	0x021DF810 MOV X0, X8
	0x021DF814 BL 0x338C698
	0x021DF818 MOV X1, X0
	0x021DF81C MOV X0, X24
	0x021DF820 MOV X2, X31
	0x021DF824 BL 0x3395194
	0x021DF828 LDR X8, [X20 + 0x38]
	0x021DF82C TBZ X0, 0x0, 0x21DF8B0
	0x021DF830 LDR X1, [X8 + 0x38]
	0x021DF834 MOV X0, X19
	0x021DF838 BL 0x22A6DC4
	0x021DF83C ADRP X8, 0x1F3C000
	0x021DF840 LDR V0, [X0]
	0x021DF844 LDR X8, [X8 + 0xA68]
	0x021DF848 SCVTF D0, D0
	0x021DF84C LDR X0, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X3+56]
	009 Move X20, X3
	010 Move X21, X2
	011 Move X19, X1
	012 Move X22, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {26}
	015 Move X0, 0x1F3D000
	016 Move X0, [X0+2664]
	017 Call 0x1C17CF4
	018 Move X0, 0x1F3D000
	019 Move X0, [X0+2672]
	020 Call 0x1C17CF4
	021 Move X8, [X20+56]
	022 Compare X8, 0
	023 JumpIfNotEqual {26}
	024 Move X0, X20
	025 Call 0x1C5D6E0
	026 Move [X19], X31
	027 Move [X21], X31
	028 Move X24, 0x1F3D000
	029 Move X24, [X24+2664]
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X8, [X20+56]
	036 Move X0, X22
	037 Move X1, X19
	038 Move X2, [X8+16]
	039 Call 0x21E0FC0, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {45}
	044 Move W0, 1
	045 Move X8, 0x1F3D000
	046 Move X8, [X8+2672]
	047 Move X0, [X8]
	048 Call 0x1C17F10
	049 Move X1, X22
	050 Move X2, X31
	051 Move X23, X0
	052 Call Expression..ctor, X0, X1
	053 Compare X23, 0
	054 JumpIfEqual {90}
	055 Move W8, [X23+24]
	056 Compare W8, 0
	057 JumpIfEqual {69}
	058 Move W0, W31
	059 Move [X19], X31
	060 Move [X21], X23
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 Return X0
	069 Move X0, [X24]
	070 Move X21, [X23+16]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X8, [X20+56]
	076 Move X0, X21
	077 Move X1, X19
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X4, [X8+24]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move W3, 1
	086 Move W2, W31
	087 Move X30, [X31+64]
	088 Call 0x21DFBDC, X0, X1, X2, X3
	089 Return X0
	090 Call 0x1C17F20

Method: System.Boolean EvaluateTokens(System.String[] tokens, ref T value, System.Int32 index, System.Int32 count)

Disassembly:
	0x021DFBDC SUB X1, X29, 0x10
	0x021DFBE0 MOV X0, X25
	0x021DFBE4 MOV W2, W24
	0x021DFBE8 MOV W3, W23
	0x021DFBEC MOV X4, X31
	0x021DFBF0 BL 0x3C079E4
	0x021DFBF4 LDUR V0, [X29 - 0x10]
	0x021DFBF8 MOV W23, W0
	0x021DFBFC SUB X0, X29, 0x14
	0x00000000 INVALID
	0x021DFC04 STUR S0, [X29 - 0x14]
	0x021DFC08 LDR X8, [X19 + 0x38]
	0x021DFC0C LDR X1, [X8 + 0x18]
	0x021DFC10 B 0x21DFF44
	0x021DFC14 LDR X0, [X28]
	0x021DFC18 LDR X26, [X8]
	0x021DFC1C LDR W9, [X0 + 0xE0]
	0x021DFC20 CBNZ W9, 0x21DFC28
	0x021DFC24 BL 0x1C16DFC
	0x021DFC28 MOV X0, X26
	0x021DFC2C MOV X1, X31
	0x021DFC30 BL 0x338C698
	0x021DFC34 ADRP X8, 0x1F3B000
	0x021DFC38 LDR X8, [X8 + 0xD80]
	0x021DFC3C MOV X26, X0
	0x021DFC40 MOV X1, X31
	0x021DFC44 LDR X8, [X8]
	0x021DFC48 MOV X0, X8
	0x021DFC4C BL 0x338C698
	0x021DFC50 MOV X1, X0
	0x021DFC54 MOV X0, X26
	0x021DFC58 MOV X2, X31
	0x021DFC5C BL 0x3395194
	0x021DFC60 LDR X8, [X19 + 0x38]
	0x021DFC64 TBZ X0, 0x0, 0x21DFCE8
	0x021DFC68 LDR X1, [X8 + 0x28]
	0x021DFC6C MOV X0, X20
	0x021DFC70 LDR X8, [X1]
	0x021DFC74 BLR X8
	0x021DFC78 ADRP X9, 0x1F3C000
	0x021DFC7C LDR W8, [X0]
	0x021DFC80 LDR X9, [X9 + 0xA68]
	0x021DFC84 SCVTF D0, W8
	0x021DFC88 LDR X0, [X9]
	0x021DFC8C STUR D0, [X29 - 0x20]
	0x021DFC90 LDR W8, [X0 + 0xE0]
	0x021DFC94 CBNZ W8, 0x21DFC9C
	0x021DFC98 BL 0x1C16DFC
	0x021DFC9C SUB X1, X29, 0x20
	0x021DFCA0 MOV X0, X25
	0x021DFCA4 MOV W2, W24
	0x021DFCA8 MOV W3, W23
	0x021DFCAC MOV X4, X31
	0x021DFCB0 BL 0x3C079E4
	0x021DFCB4 LDUR V0, [X29 - 0x20]
	0x021DFCB8 MOVZ X8, 0x7FF00000
	0x021DFCBC FMOV D1, X8
	0x021DFCC0 MOVZ W9, 0x80000000
	0x021DFCC4 FCVTZS W8, D0
	0x021DFCC8 FCMP D0, D1
	0x021DFCCC CSEL W8, W9, W8, EQ
	0x021DFCD0 STUR W8, [X29 - 0x24]
	0x021DFCD4 LDR X8, [X19 + 0x38]
	0x021DFCD8 MOV W23, W0
	0x021DFCDC SUB X0, X29, 0x24
	0x021DFCE0 LDR X1, [X8 + 0x30]
	0x021DFCE4 B 0x21DFF44
	0x021DFCE8 LDR X0, [X28]
	0x021DFCEC LDR X26, [X8]
	0x021DFCF0 LDR W9, [X0 + 0xE0]
	0x021DFCF4 CBNZ W9, 0x21DFCFC
	0x021DFCF8 BL 0x1C16DFC
	0x021DFCFC MOV X0, X26
	0x021DFD00 MOV X1, X31
	0x021DFD04 BL 0x338C698
	0x021DFD08 ADRP X8, 0x1F3B000
	0x021DFD0C LDR X8, [X8 + 0xD88]
	0x021DFD10 MOV X26, X0
	0x021DFD14 MOV X1, X31
	0x021DFD18 LDR X8, [X8]
	0x021DFD1C MOV X0, X8
	0x021DFD20 BL 0x338C698
	0x021DFD24 MOV X1, X0
	0x021DFD28 MOV X0, X26
	0x021DFD2C MOV X2, X31
	0x021DFD30 BL 0x3395194
	0x021DFD34 LDR X8, [X19 + 0x38]
	0x021DFD38 TBZ X0, 0x0, 0x21DFDBC
	0x021DFD3C LDR X1, [X8 + 0x38]
	0x021DFD40 MOV X0, X20
	0x021DFD44 LDR X8, [X1]
	0x021DFD48 BLR X8
	0x021DFD4C ADRP X8, 0x1F3C000
	0x021DFD50 LDR V0, [X0]
	0x021DFD54 LDR X8, [X8 + 0xA68]
	0x021DFD58 SCVTF D0, D0
	0x021DFD5C LDR X0, [X8]
	0x021DFD60 STUR D0, [X29 - 0x30]
	0x021DFD64 LDR W8, [X0 + 0xE0]
	0x021DFD68 CBNZ W8, 0x21DFD70
	0x021DFD6C BL 0x1C16DFC
	0x021DFD70 SUB X1, X29, 0x30
	0x021DFD74 MOV X0, X25
	0x021DFD78 MOV W2, W24
	0x021DFD7C MOV W3, W23
	0x021DFD80 MOV X4, X31
	0x021DFD84 BL 0x3C079E4
	0x021DFD88 LDUR V0, [X29 - 0x30]
	0x021DFD8C MOVZ X8, 0x7FF00000
	0x021DFD90 FMOV D1, X8
	0x021DFD94 MOVZ X9, 0x80000000
	0x021DFD98 FCVTZS X8, D0
	0x021DFD9C FCMP D0, D1
	0x021DFDA0 CSEL X8, X9, X8, EQ
	0x021DFDA4 STUR X8, [X29 - 0x38]
	0x021DFDA8 LDR X8, [X19 + 0x38]
	0x021DFDAC MOV W23, W0
	0x021DFDB0 SUB X0, X29, 0x38
	0x021DFDB4 LDR X1, [X8 + 0x40]
	0x021DFDB8 B 0x21DFF44
	0x021DFDBC LDR X0, [X28]
	0x021DFDC0 LDR X26, [X8]
	0x021DFDC4 LDR W9, [X0 + 0xE0]
	0x021DFDC8 CBNZ W9, 0x21DFDD0
	0x021DFDCC BL 0x1C16DFC
	0x021DFDD0 MOV X0, X26
	0x021DFDD4 MOV X1, X31
	0x021DFDD8 BL 0x338C698
	0x021DFDDC ADRP X8, 0x1F3B000
	0x021DFDE0 LDR X8, [X8 + 0xDA8]
	0x021DFDE4 MOV X26, X0
	0x021DFDE8 MOV X1, X31
	0x021DFDEC LDR X8, [X8]
	0x021DFDF0 MOV X0, X8
	0x021DFDF4 BL 0x338C698
	0x021DFDF8 MOV X1, X0
	0x021DFDFC MOV X0, X26
	0x021DFE00 MOV X2, X31
	0x021DFE04 BL 0x3395194
	0x021DFE08 LDR X8, [X19 + 0x38]
	0x021DFE0C TBZ X0, 0x0, 0x21DFE98
	0x021DFE10 LDR X1, [X8 + 0x48]
	0x021DFE14 MOV X0, X20
	0x021DFE18 LDR X8, [X1]
	0x021DFE1C BLR X8
	0x021DFE20 ADRP X8, 0x1F3C000
	0x021DFE24 LDR V0, [X0]
	0x021DFE28 LDR X8, [X8 + 0xA68]
	0x021DFE2C UCVTF D0, D0
	0x021DFE30 LDR X0, [X8]
	0x021DFE34 STUR D0, [X29 - 0x40]
	0x021DFE38 LDR W8, [X0 + 0xE0]
	0x021DFE3C CBNZ W8, 0x21DFE44
	0x021DFE40 BL 0x1C16DFC
	0x021DFE44 SUB X1, X29, 0x40
	0x021DFE48 MOV X0, X25
	0x021DFE4C MOV W2, W24
	0x021DFE50 MOV W3, W23
	0x021DFE54 MOV X4, X31
	0x021DFE58 BL 0x3C079E4
	0x021DFE5C LDUR V0, [X29 - 0x40]
	0x021DFE60 MOV W23, W0
	0x021DFE64 FCMP D0, 0x0
	0x021DFE68 B.PL 0x21DFE74
	0x021DFE6C FMOV D0, X31
	0x021DFE70 STUR X31, [X29 - 0x40]
	0x021DFE74 FCVTZS X8, D0
	0x021DFE78 FCVTZU X9, D0
	0x021DFE7C FCMP D0, 0x0
	0x021DFE80 CSEL X8, X8, X9, MI
	0x021DFE84 STUR X8, [X29 - 0x48]
	0x021DFE88 LDR X8, [X19 + 0x38]
	0x021DFE8C SUB X0, X29, 0x48
	0x021DFE90 LDR X1, [X8 + 0x50]
	0x021DFE94 B 0x21DFF44
	0x021DFE98 LDR X0, [X28]
	0x021DFE9C LDR X26, [X8]
	0x021DFEA0 LDR W9, [X0 + 0xE0]
	0x021DFEA4 CBNZ W9, 0x21DFEAC
	0x021DFEA8 BL 0x1C16DFC
	0x021DFEAC MOV X0, X26
	0x021DFEB0 MOV X1, X31
	0x021DFEB4 BL 0x338C698
	0x021DFEB8 ADRP X8, 0x1F3C000
	0x021DFEBC LDR X8, [X8 + 0xA78]
	0x021DFEC0 MOV X26, X0
	0x021DFEC4 MOV X1, X31
	0x021DFEC8 LDR X8, [X8]
	0x021DFECC MOV X0, X8
	0x021DFED0 BL 0x338C698
	0x021DFED4 MOV X1, X0
	0x021DFED8 MOV X0, X26
	0x021DFEDC MOV X2, X31
	0x021DFEE0 BL 0x3395194
	0x021DFEE4 TBZ X0, 0x0, 0x21DFFB4
	0x021DFEE8 LDR X8, [X19 + 0x38]
	0x021DFEEC MOV X0, X20
	0x021DFEF0 LDR X1, [X8 + 0x58]
	0x021DFEF4 LDR X8, [X1]
	0x021DFEF8 BLR X8
	0x021DFEFC ADRP X8, 0x1F3C000
	0x021DFF00 LDR V0, [X0]
	0x021DFF04 LDR X8, [X8 + 0xA68]
	0x021DFF08 STUR D0, [X29 - 0x50]
	0x021DFF0C LDR X0, [X8]
	0x021DFF10 LDR W8, [X0 + 0xE0]
	0x021DFF14 CBNZ W8, 0x21DFF1C
	0x021DFF18 BL 0x1C16DFC
	0x021DFF1C SUB X1, X29, 0x50
	0x021DFF20 MOV X0, X25
	0x021DFF24 MOV W2, W24
	0x021DFF28 MOV W3, W23
	0x021DFF2C MOV X4, X31
	0x021DFF30 BL 0x3C079E4
	0x021DFF34 LDR X8, [X19 + 0x38]
	0x021DFF38 MOV W23, W0
	0x021DFF3C SUB X0, X29, 0x50
	0x021DFF40 LDR X1, [X8 + 0x60]
	0x021DFF44 LDR X8, [X1]
	0x021DFF48 BLR X8
	0x021DFF4C MOV X1, X0
	0x021DFF50 MOV X0, X22
	0x021DFF54 MOV X2, X21
	0x021DFF58 BL 0x3EB1AC0
	0x021DFF5C MOV X0, X20
	0x021DFF60 MOV X1, X22
	0x021DFF64 MOV X2, X21
	0x021DFF68 BL 0x3EB1AC0
	0x021DFF6C LDR X8, [X19 + 0x38]
	0x021DFF70 LDR X0, [X8 + 0x20]
	0x021DFF74 LDRB W8, [X0 + 0x135]
	0x021DFF78 TBNZ X8, 0x0, 0x21DFF80
	0x021DFF7C BL 0x1C5C684
	0x021DFF80 LDR X8, [X27 + 0x28]
	0x021DFF84 LDUR X9, [X29 - 0x8]
	0x021DFF88 CMP X8, X9
	0x021DFF8C B.NE 0x21DFFBC
	0x021DFF90 AND W0, W23, 0x1
	0x021DFF94 ADD X31, X29, 0x0
	0x021DFF98 LDP X20, X19, [X31 + 0x50]
	0x021DFF9C LDP X22, X21, [X31 + 0x40]
	0x021DFFA0 LDP X24, X23, [X31 + 0x30]
	0x021DFFA4 LDP X26, X25, [X31 + 0x20]
	0x021DFFA8 LDP X28, X27, [X31 + 0x10]
	0x021DFFAC LDP X29, X30, [X31], #0x60
	0x021DFFB0 RET
	0x021DFFB4 MOV W23, W31
	0x021DFFB8 B 0x21DFF80
	0x021DFFBC BL 0x3EB1B20
	0x021DFFC0 SUB X31, X31, 0x60
	0x021DFFC4 STP X30, X23, [X31 + 0x30]
	0x021DFFC8 STP X22, X21, [X31 + 0x40]
	0x021DFFCC STP X20, X19, [X31 + 0x50]
	0x021DFFD0 LDR X8, [X2 + 0x38]
	0x021DFFD4 MOV X20, X2
	0x021DFFD8 MOV X19, X1
	0x021DFFDC MOV X21, X0
	0x021DFFE0 CBNZ X8, 0x21E00B4
	0x021DFFE4 ADRP X0, 0x1F1D000
	0x021DFFE8 LDR X0, [X0 + 0x8D8]
	0x021DFFEC BL 0x1C16CF4
	0x021DFFF0 ADRP X0, 0x1F16000
	0x021DFFF4 LDR X0, [X0 + 0x170]
	0x021DFFF8 BL 0x1C16CF4
	0x021DFFFC ADRP X0, 0x1F16000
	0x021E0000 LDR X0, [X0 + 0xC48]
	0x021E0004 BL 0x1C16CF4
	0x021E0008 ADRP X0, 0x1F3B000
	0x021E000C LDR X0, [X0 + 0xA78]
	0x021E0010 BL 0x1C16CF4
	0x021E0014 ADRP X0, 0x1F16000
	0x021E0018 LDR X0, [X0 + 0x978]
	0x021E001C BL 0x1C16CF4
	0x021E0020 ADRP X0, 0x1F3A000
	0x021E0024 LDR X0, [X0 + 0xD80]
	0x021E0028 BL 0x1C16CF4
	0x021E002C ADRP X0, 0x1F13000
	0x021E0030 LDR X0, [X0 + 0x758]
	0x021E0034 BL 0x1C16CF4
	0x021E0038 ADRP X0, 0x1F3A000
	0x021E003C LDR X0, [X0 + 0xD88]
	0x021E0040 BL 0x1C16CF4
	0x021E0044 ADRP X0, 0x1F15000
	0x021E0048 LDR X0, [X0 + 0xA60]
	0x021E004C BL 0x1C16CF4
	0x021E0050 ADRP X0, 0x1F3B000
	0x021E0054 LDR X0, [X0 + 0xA80]
	0x021E0058 BL 0x1C16CF4
	0x021E005C ADRP X0, 0x1F13000
	0x021E0060 LDR X0, [X0 + 0xA90]
	0x021E0064 BL 0x1C16CF4
	0x021E0068 ADRP X0, 0x1F13000
	0x021E006C LDR X0, [X0 + 0x6C0]
	0x021E0070 BL 0x1C16CF4
	0x021E0074 ADRP X0, 0x1F3B000
	0x021E0078 LDR X0, [X0 + 0xA88]
	0x021E007C BL 0x1C16CF4
	0x021E0080 ADRP X0, 0x1F3A000
	0x021E0084 LDR X0, [X0 + 0xDA8]
	0x021E0088 BL 0x1C16CF4
	0x021E008C ADRP X0, 0x1F14000
	0x021E0090 LDR X0, [X0 + 0x758]
	0x021E0094 BL 0x1C16CF4
	0x021E0098 ADRP X0, 0x1F3B000
	0x021E009C LDR X0, [X0 + 0xA90]
	0x021E00A0 BL 0x1C16CF4
	0x021E00A4 LDR X8, [X20 + 0x38]
	0x021E00A8 CBNZ X8, 0x21E00B4
	0x021E00AC MOV X0, X20
	0x021E00B0 BL 0x1C5C6E0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X8, [X4+56]
	011 Move X20, X4
	012 Move W21, W3
	013 Move W22, W2
	014 Move X19, X1
	015 Move X23, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {45}
	018 Move X0, 0x1F3D000
	019 Move X0, [X0+2680]
	020 Call 0x1C17CF4
	021 Move X0, 0x1F3D000
	022 Move X0, [X0+2664]
	023 Call 0x1C17CF4
	024 Move X0, 0x1F3C000
	025 Move X0, [X0+3456]
	026 Call 0x1C17CF4
	027 Move X0, 0x1F3C000
	028 Move X0, [X0+3464]
	029 Call 0x1C17CF4
	030 Move X0, 0x1F3D000
	031 Move X0, [X0+2688]
	032 Call 0x1C17CF4
	033 Move X0, 0x1F15000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move X0, 0x1F3C000
	037 Move X0, [X0+3496]
	038 Call 0x1C17CF4
	039 Move X8, [X20+56]
	040 Compare X8, 0
	041 JumpIfNotEqual {45}
	042 Move X0, X20
	043 Call 0x1C5D6E0
	044 Move X8, [X20+56]
	045 Move [X31+72], X31
	046 Move [X31+68], W31
	047 Move [X31+56], X31
	048 Move [X31+52], W31
	049 Move [X31+32], X31
	050 Move [X31+40], X31
	051 Move X25, 0x1F15000
	052 Move X25, [X25+1728]
	053 Move [X31+16], X31
	054 Move [X31+24], X31
	055 Move [X31+8], X31
	056 Move X24, [X8]
	057 Move X0, [X25]
	058 Move W9, [X0+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X24
	063 Move X1, X31
	064 Call Type.GetTypeFromHandle, X0
	065 Move X8, 0x1F3D000
	066 Move X8, [X8+2688]
	067 Move X24, X0
	068 Move X1, X31
	069 Move X8, [X8]
	070 Move X0, X8
	071 Call Type.GetTypeFromHandle, X0
	072 Move X1, X0
	073 Move X0, X24
	074 Move X2, X31
	075 Call Type.op_Equality, X0, X1
	076 Move X8, [X20+56]
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {108}
	081 Move X1, [X8+16]
	082 Move X0, X19
	083 Call UnsafeUtility.As, X0
	084 Move X8, 0x1F3D000
	085 Move V0, [X0]
	086 Move X8, [X8+2664]
	087 NotImplemented "Instruction FCVT not yet implemented."
	088 Move X0, [X8]
	089 Move [X31+72], D0
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Add X1, X31, 72
	095 Move X0, X23
	096 Move W2, W22
	097 Move W3, W21
	098 Move X4, X31
	099 Call ExpressionEvaluator.EvaluateDouble, X0, X1, X2, X3
	100 Move V0, [X31+72]
	101 Move W21, W0
	102 Add X0, X31, 68
	103 NotImplemented "Instruction INVALID not yet implemented."
	104 Move [X31+68], S0
	105 Move X8, [X20+56]
	106 Move X1, [X8+24]
	107 Call UnsafeUtility.As, X0
	108 Move X0, [X25]
	109 Move X24, [X8]
	110 Move W9, [X0+224]
	111 Compare W9, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X24
	115 Move X1, X31
	116 Call Type.GetTypeFromHandle, X0
	117 Move X8, 0x1F3C000
	118 Move X8, [X8+3456]
	119 Move X24, X0
	120 Move X1, X31
	121 Move X8, [X8]
	122 Move X0, X8
	123 Call Type.GetTypeFromHandle, X0
	124 Move X1, X0
	125 Move X0, X24
	126 Move X2, X31
	127 Call Type.op_Equality, X0, X1
	128 Move X8, [X20+56]
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {165}
	133 Move X1, [X8+40]
	134 Move X0, X19
	135 Call UnsafeUtility.As, X0
	136 Move X9, 0x1F3D000
	137 Move W8, [X0]
	138 Move X9, [X9+2664]
	139 NotImplemented "Instruction SCVTF not yet implemented."
	140 Move X0, [X9]
	141 Move [X31+56], D0
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Add X1, X31, 56
	147 Move X0, X23
	148 Move W2, W22
	149 Move W3, W21
	150 Move X4, X31
	151 Call ExpressionEvaluator.EvaluateDouble, X0, X1, X2, X3
	152 Move V0, [X31+56]
	153 Move X8, 0x7FF00000
	154 Move D1, X8
	155 Move W9, 0x80000000
	156 NotImplemented "Instruction FCVTZS not yet implemented."
	157 NotImplemented "Instruction FCMP not yet implemented."
	158 NotImplemented "Instruction CSEL not yet implemented."
	159 Move [X31+52], W8
	160 Move X8, [X20+56]
	161 Move W21, W0
	162 Add X0, X31, 52
	163 Move X1, [X8+48]
	164 Call UnsafeUtility.As, X0
	165 Move X0, [X25]
	166 Move X24, [X8]
	167 Move W9, [X0+224]
	168 Compare W9, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X24
	172 Move X1, X31
	173 Call Type.GetTypeFromHandle, X0
	174 Move X8, 0x1F3C000
	175 Move X8, [X8+3464]
	176 Move X24, X0
	177 Move X1, X31
	178 Move X8, [X8]
	179 Move X0, X8
	180 Call Type.GetTypeFromHandle, X0
	181 Move X1, X0
	182 Move X0, X24
	183 Move X2, X31
	184 Call Type.op_Equality, X0, X1
	185 Move X8, [X20+56]
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {222}
	190 Move X1, [X8+56]
	191 Move X0, X19
	192 Call UnsafeUtility.As, X0
	193 Move X8, 0x1F3D000
	194 Move V0, [X0]
	195 Move X8, [X8+2664]
	196 NotImplemented "Instruction SCVTF not yet implemented."
	197 Move X0, [X8]
	198 Move [X31+40], D0
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Add X1, X31, 40
	204 Move X0, X23
	205 Move W2, W22
	206 Move W3, W21
	207 Move X4, X31
	208 Call ExpressionEvaluator.EvaluateDouble, X0, X1, X2, X3
	209 Move V0, [X31+40]
	210 Move X8, 0x7FF00000
	211 Move D1, X8
	212 Move X9, 0x80000000
	213 NotImplemented "Instruction FCVTZS not yet implemented."
	214 NotImplemented "Instruction FCMP not yet implemented."
	215 NotImplemented "Instruction CSEL not yet implemented."
	216 Move [X31+32], X8
	217 Move X8, [X20+56]
	218 Move W21, W0
	219 Add X0, X31, 32
	220 Move X1, [X8+64]
	221 Call UnsafeUtility.As, X0
	222 Move X0, [X25]
	223 Move X24, [X8]
	224 Move W9, [X0+224]
	225 Compare W9, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X0, X24
	229 Move X1, X31
	230 Call Type.GetTypeFromHandle, X0
	231 Move X8, 0x1F3C000
	232 Move X8, [X8+3496]
	233 Move X24, X0
	234 Move X1, X31
	235 Move X8, [X8]
	236 Move X0, X8
	237 Call Type.GetTypeFromHandle, X0
	238 Move X1, X0
	239 Move X0, X24
	240 Move X2, X31
	241 Call Type.op_Equality, X0, X1
	242 Move X8, [X20+56]
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {280}
	247 Move X1, [X8+72]
	248 Move X0, X19
	249 Call UnsafeUtility.As, X0
	250 Move X8, 0x1F3D000
	251 Move V0, [X0]
	252 Move X8, [X8+2664]
	253 NotImplemented "Instruction UCVTF not yet implemented."
	254 Move X0, [X8]
	255 Move [X31+24], D0
	256 Move W8, [X0+224]
	257 Compare W8, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Add X1, X31, 24
	261 Move X0, X23
	262 Move W2, W22
	263 Move W3, W21
	264 Move X4, X31
	265 Call ExpressionEvaluator.EvaluateDouble, X0, X1, X2, X3
	266 Move V0, [X31+24]
	267 Move W21, W0
	268 NotImplemented "Instruction FCMP not yet implemented."
	269 Move D0, X31
	270 Move [X31+24], X31
	271 NotImplemented "Instruction FCVTZS not yet implemented."
	272 NotImplemented "Instruction FCVTZU not yet implemented."
	273 NotImplemented "Instruction FCMP not yet implemented."
	274 NotImplemented "Instruction CSEL not yet implemented."
	275 Move [X31+16], X8
	276 Move X8, [X20+56]
	277 Add X0, X31, 16
	278 Move X1, [X8+80]
	279 Call UnsafeUtility.As, X0
	280 Move X0, [X25]
	281 Move X24, [X8]
	282 Move W9, [X0+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1C17DFC
	286 Move X0, X24
	287 Move X1, X31
	288 Call Type.GetTypeFromHandle, X0
	289 Move X8, 0x1F3D000
	290 Move X8, [X8+2680]
	291 Move X24, X0
	292 Move X1, X31
	293 Move X8, [X8]
	294 Move X0, X8
	295 Call Type.GetTypeFromHandle, X0
	296 Move X1, X0
	297 Move X0, X24
	298 Move X2, X31
	299 Call Type.op_Equality, X0, X1
	300 Move TEMP, X0
	301 And TEMP, TEMP, 1
	302 Compare TEMP, 1
	303 JumpIfNotEqual {341}
	304 Move X8, [X20+56]
	305 Move X0, X19
	306 Move X1, [X8+88]
	307 Call 0x22A7D7C, X0
	308 Move X8, 0x1F3C000
	309 Move V0, [X0]
	310 Move X8, [X8+2664]
	311 Move [X31+8], D0
	312 Move X0, [X8]
	313 Move W8, [X0+224]
	314 Compare W8, 0
	315 JumpIfNotEqual {317}
	316 Call 0x1C17DFC
	317 Add X1, X31, 8
	318 Move X0, X23
	319 Move W2, W22
	320 Move W3, W21
	321 Move X4, X31
	322 Call ExpressionEvaluator.EvaluateDouble, X0, X1, X2, X3
	323 Move X8, [X20+56]
	324 Move W21, W0
	325 Add X0, X31, 8
	326 Move X1, [X8+96]
	327 Call 0x22A7D7C, X0
	328 Move V0, [X0]
	329 Move [X19], D0
	330 And W0, W21, 1
	331 Move X20, [X31+128]
	332 Move X19, [X31+136]
	333 Move X22, [X31+112]
	334 Move X21, [X31+120]
	335 Move X24, [X31+96]
	336 Move X23, [X31+104]
	337 Move X30, [X31+80]
	338 Move X25, [X31+88]
	339 Add X31, X31, 144
	340 Return X0
	341 Move W21, W31

Method: System.Boolean EvaluateDouble(System.String[] tokens, ref System.Double value, System.Int32 index, System.Int32 count)

Disassembly:
	0x03C089E4 ADRP X0, 0x513000
	0x03C089E8 LDR X0, [X0 + 0xA68]
	0x03C089EC BL 0x1C16CF4
	0x03C089F0 ADRP X0, 0x4EC000
	0x03C089F4 LDR X0, [X0 + 0xBF8]
	0x03C089F8 BL 0x1C16CF4
	0x03C089FC ADRP X0, 0x4EC000
	0x03C08A00 LDR X0, [X0 + 0x1B8]
	0x03C08A04 BL 0x1C16CF4
	0x03C08A08 ADRP X0, 0x4ED000
	0x03C08A0C LDR X0, [X0 + 0xE78]
	0x03C08A10 BL 0x1C16CF4
	0x03C08A14 ADRP X0, 0x4EC000
	0x03C08A18 LDR X0, [X0 + 0x1C0]
	0x03C08A1C BL 0x1C16CF4
	0x03C08A20 ADRP X0, 0x4EC000
	0x03C08A24 LDR X0, [X0 + 0x1D0]
	0x03C08A28 BL 0x1C16CF4
	0x03C08A2C ADRP X0, 0x556000
	0x03C08A30 LDR X0, [X0 + 0xBF8]
	0x03C08A34 BL 0x1C16CF4
	0x03C08A38 ADRP X0, 0x556000
	0x03C08A3C LDR X0, [X0 + 0xC00]
	0x03C08A40 BL 0x1C16CF4
	0x03C08A44 ADRP X0, 0x4EB000
	0x03C08A48 LDR X0, [X0 + 0x988]
	0x03C08A4C BL 0x1C16CF4
	0x03C08A50 MOVZ W8, 0x1
	0x03C08A54 STRB W8, [X23 + 0x1DB]
	0x03C08A58 STRH W31, [X31 + 0xC]
	0x03C08A5C STRB W31, [X19]
	0x03C08A60 LDR X0, [X22]
	0x03C08A64 BL 0x1C16F10
	0x03C08A68 LDR X1, [X20]
	0x03C08A6C MOV X20, X0
	0x03C08A70 BL 0x301B7C4
	0x03C08A74 CBZ X21, 0x3C08DC8
	0x03C08A78 ADRP X26, 0x4EB000
	0x03C08A7C LDR W8, [X21 + 0x10]
	0x03C08A80 LDR X26, [X26 + 0x988]
	0x03C08A84 ADRP X25, 0x4EC000
	0x03C08A88 CMP W8, 0x1
	0x03C08A8C LDR X23, [X26]
	0x03C08A90 LDR X25, [X25 + 0x1B8]
	0x03C08A94 B.LT 0x3C08C94
	0x03C08A98 ADRP X27, 0x4ED000
	0x03C08A9C ADRP X28, 0x513000
	0x03C08AA0 LDR X27, [X27 + 0x170]
	0x03C08AA4 LDR X28, [X28 + 0xA68]
	0x03C08AA8 MOV W22, W31
	0x03C08AAC MOV X0, X21
	0x03C08AB0 MOV W1, W22
	0x03C08AB4 MOV X2, X31
	0x03C08AB8 BL 0x3222A1C
	0x03C08ABC LDR X8, [X27]
	0x03C08AC0 STRH W0, [X31 + 0xC]
	0x03C08AC4 LDR W9, [X8 + 0xE0]
	0x03C08AC8 CBNZ W9, 0x3C08AD4
	0x03C08ACC MOV X0, X8
	0x03C08AD0 BL 0x1C16DFC
	0x03C08AD4 ADD X0, X31, 0xC
	0x03C08AD8 MOV X1, X31
	0x03C08ADC BL 0x330A76C
	0x03C08AE0 LDR X8, [X28]
	0x03C08AE4 MOV X24, X0
	0x03C08AE8 LDR W9, [X8 + 0xE0]
	0x03C08AEC CBNZ W9, 0x3C08AF8
	0x03C08AF0 MOV X0, X8
	0x03C08AF4 BL 0x1C16DFC
	0x03C08AF8 MOV X0, X24
	0x03C08AFC BL 0x3C07FD4
	0x03C08B00 TBZ X0, 0x0, 0x3C08B54
	0x03C08B04 CBZ X23, 0x3C08DC8
	0x03C08B08 LDR W8, [X23 + 0x10]
	0x03C08B0C CMP W8, 0x1
	0x03C08B10 B.LT 0x3C08BFC
	0x03C08B14 CBZ X20, 0x3C08DC8
	0x03C08B18 LDR W10, [X20 + 0x1C]
	0x03C08B1C LDR X8, [X20 + 0x10]
	0x03C08B20 LDR X9, [X25]
	0x03C08B24 ADD W10, W10, 0x1
	0x03C08B28 STR W10, [X20 + 0x1C]
	0x03C08B2C CBZ X8, 0x3C08DC8
	0x03C08B30 LDRSW X10, [X20 + 0x18]
	0x03C08B34 LDR W11, [X8 + 0x18]
	0x03C08B38 CMP W10, W11
	0x03C08B3C B.CS 0x3C08BE4
	0x03C08B40 ADD W9, W10, 0x1
	0x03C08B44 ADD X8, X8, X10, 0x3, LSL
	0x03C08B48 STR W9, [X20 + 0x18]
	0x03C08B4C STR X23, [X8 + 0x20]
	0x03C08B50 B 0x3C08BFC
	0x03C08B54 LDRH W8, [X31 + 0xC]
	0x03C08B58 CMP W8, 0x20
	0x03C08B5C B.NE 0x3C08BB0
	0x03C08B60 CBZ X23, 0x3C08DC8
	0x03C08B64 LDR W8, [X23 + 0x10]
	0x03C08B68 CMP W8, 0x1
	0x03C08B6C B.LT 0x3C08C80
	0x03C08B70 CBZ X20, 0x3C08DC8
	0x03C08B74 LDR W10, [X20 + 0x1C]
	0x03C08B78 LDR X8, [X20 + 0x10]
	0x03C08B7C LDR X9, [X25]
	0x03C08B80 ADD W10, W10, 0x1
	0x03C08B84 STR W10, [X20 + 0x1C]
	0x03C08B88 CBZ X8, 0x3C08DC8
	0x03C08B8C LDRSW X10, [X20 + 0x18]
	0x03C08B90 LDR W11, [X8 + 0x18]
	0x03C08B94 CMP W10, W11
	0x03C08B98 B.CS 0x3C08C68
	0x03C08B9C ADD W9, W10, 0x1
	0x03C08BA0 ADD X8, X8, X10, 0x3, LSL
	0x03C08BA4 STR W9, [X20 + 0x18]
	0x03C08BA8 STR X23, [X8 + 0x20]
	0x03C08BAC B 0x3C08C80
	0x03C08BB0 LDR X0, [X27]
	0x03C08BB4 LDR W8, [X0 + 0xE0]
	0x03C08BB8 CBNZ W8, 0x3C08BC0
	0x03C08BBC BL 0x1C16DFC
	0x03C08BC0 ADD X0, X31, 0xC
	0x03C08BC4 MOV X1, X31
	0x03C08BC8 BL 0x330A76C
	0x03C08BCC MOV X1, X0
	0x03C08BD0 MOV X0, X23
	0x03C08BD4 MOV X2, X31
	0x03C08BD8 BL 0x321B938
	0x03C08BDC MOV X23, X0
	0x03C08BE0 B 0x3C08C84
	0x03C08BE4 LDR X8, [X9 + 0x20]
	0x03C08BE8 MOV X0, X20
	0x03C08BEC MOV X1, X23
	0x03C08BF0 LDR X8, [X8 + 0xC0]
	0x03C08BF4 LDR X2, [X8 + 0x70]
	0x03C08BF8 BL 0x301BF90
	0x03C08BFC LDR X0, [X27]
	0x03C08C00 LDR W8, [X0 + 0xE0]
	0x03C08C04 CBNZ W8, 0x3C08C0C
	0x03C08C08 BL 0x1C16DFC
	0x03C08C0C ADD X0, X31, 0xC
	0x03C08C10 MOV X1, X31
	0x03C08C14 BL 0x330A76C
	0x03C08C18 CBZ X20, 0x3C08DC8
	0x03C08C1C LDR W10, [X20 + 0x1C]
	0x03C08C20 LDR X8, [X20 + 0x10]
	0x03C08C24 LDR X9, [X25]
	0x03C08C28 ADD W10, W10, 0x1
	0x03C08C2C STR W10, [X20 + 0x1C]
	0x03C08C30 CBZ X8, 0x3C08DC8
	0x03C08C34 LDRSW X10, [X20 + 0x18]
	0x03C08C38 LDR W11, [X8 + 0x18]
	0x03C08C3C MOV X1, X0
	0x03C08C40 CMP W10, W11
	0x03C08C44 B.CS 0x3C08C5C
	0x03C08C48 ADD W9, W10, 0x1
	0x03C08C4C ADD X8, X8, X10, 0x3, LSL
	0x03C08C50 STR W9, [X20 + 0x18]
	0x03C08C54 STR X1, [X8 + 0x20]
	0x03C08C58 B 0x3C08C80
	0x03C08C5C LDR X8, [X9 + 0x20]
	0x03C08C60 MOV X0, X20
	0x03C08C64 B 0x3C08C74
	0x03C08C68 LDR X8, [X9 + 0x20]
	0x03C08C6C MOV X0, X20
	0x03C08C70 MOV X1, X23
	0x03C08C74 LDR X8, [X8 + 0xC0]
	0x03C08C78 LDR X2, [X8 + 0x70]
	0x03C08C7C BL 0x301BF90
	0x03C08C80 LDR X23, [X26]
	0x03C08C84 LDR W8, [X21 + 0x10]
	0x03C08C88 ADD W22, W22, 0x1
	0x03C08C8C CMP W22, W8
	0x03C08C90 B.LT 0x3C08AAC
	0x03C08C94 CBZ X23, 0x3C08DC8
	0x03C08C98 LDR W8, [X23 + 0x10]
	0x03C08C9C CMP W8, 0x1
	0x03C08CA0 B.LT 0x3C08CFC
	0x03C08CA4 CBZ X20, 0x3C08DC8
	0x03C08CA8 LDR W10, [X20 + 0x1C]
	0x03C08CAC LDR X8, [X20 + 0x10]
	0x03C08CB0 LDR X9, [X25]
	0x03C08CB4 ADD W10, W10, 0x1
	0x03C08CB8 STR W10, [X20 + 0x1C]
	0x03C08CBC CBZ X8, 0x3C08DC8
	0x03C08CC0 LDRSW X10, [X20 + 0x18]
	0x03C08CC4 LDR W11, [X8 + 0x18]
	0x03C08CC8 CMP W10, W11
	0x03C08CCC B.CS 0x3C08CE4
	0x03C08CD0 ADD W9, W10, 0x1
	0x03C08CD4 ADD X8, X8, X10, 0x3, LSL
	0x03C08CD8 STR W9, [X20 + 0x18]
	0x03C08CDC STR X23, [X8 + 0x20]
	0x03C08CE0 B 0x3C08CFC
	0x03C08CE4 LDR X8, [X9 + 0x20]
	0x03C08CE8 MOV X0, X20
	0x03C08CEC MOV X1, X23
	0x03C08CF0 LDR X8, [X8 + 0xC0]
	0x03C08CF4 LDR X2, [X8 + 0x70]
	0x03C08CF8 BL 0x301BF90
	0x03C08CFC ADRP X23, 0x556000
	0x03C08D00 LDR X23, [X23 + 0xC00]
	0x03C08D04 LDR X0, [X23]
	0x03C08D08 LDR W8, [X0 + 0xE0]
	0x03C08D0C CBNZ W8, 0x3C08D18
	0x03C08D10 BL 0x1C16DFC
	0x03C08D14 LDR X0, [X23]
	0x03C08D18 LDR X8, [X0 + 0xB8]
	0x03C08D1C ADRP X24, 0x4EC000
	0x03C08D20 LDR X21, [X8 + 0x8]
	0x03C08D24 LDR X24, [X24 + 0xBE0]
	0x03C08D28 CBNZ X21, 0x3C08D7C
	0x03C08D2C LDR W8, [X0 + 0xE0]
	0x03C08D30 CBNZ W8, 0x3C08D3C
	0x03C08D34 BL 0x1C16DFC
	0x03C08D38 LDR X0, [X23]
	0x03C08D3C ADRP X9, 0x4EC000
	0x03C08D40 LDR X8, [X0 + 0xB8]
	0x03C08D44 LDR X9, [X9 + 0xBF8]
	0x03C08D48 LDR X22, [X8]
	0x03C08D4C LDR X0, [X9]
	0x03C08D50 BL 0x1C16F10
	0x03C08D54 ADRP X8, 0x556000
	0x03C08D58 LDR X8, [X8 + 0xBF8]
	0x03C08D5C MOV X1, X22
	0x03C08D60 MOV X3, X31
	0x03C08D64 MOV X21, X0
	0x03C08D68 LDR X2, [X8]
	0x03C08D6C BL 0x2D2F428
	0x03C08D70 LDR X8, [X23]
	0x03C08D74 LDR X8, [X8 + 0xB8]
	0x03C08D78 STR X21, [X8 + 0x8]
	0x03C08D7C LDR X2, [X24]
	0x03C08D80 MOV X0, X20
	0x03C08D84 MOV X1, X21
	0x03C08D88 BL 0x21B36AC
	0x03C08D8C AND W8, W0, 0x1
	0x03C08D90 STRB W8, [X19]
	0x03C08D94 CBZ X20, 0x3C08DC8
	0x03C08D98 ADRP X8, 0x4ED000
	0x03C08D9C LDR X8, [X8 + 0xE78]
	0x03C08DA0 MOV X0, X20
	0x03C08DA4 LDR X1, [X8]
	0x03C08DA8 BL 0x301DDC4
	0x03C08DAC LDP X20, X19, [X31 + 0x50]
	0x03C08DB0 LDP X22, X21, [X31 + 0x40]
	0x03C08DB4 LDP X24, X23, [X31 + 0x30]
	0x03C08DB8 LDP X26, X25, [X31 + 0x20]
	0x03C08DBC LDP X28, X27, [X31 + 0x10]
	0x03C08DC0 LDR X30, [X31], #0x60
	0x03C08DC4 RET
	0x03C08DC8 BL 0x1C16F20
	0x03C08DCC SUB X31, X31, 0x30
	0x03C08DD0 STP X30, X21, [X31 + 0x10]
	0x03C08DD4 STP X20, X19, [X31 + 0x20]
	0x03C08DD8 ADRP X20, 0x7DC000
	0x03C08DDC LDRB W8, [X20 + 0x1E0]
	0x03C08DE0 MOV X19, X0
	0x03C08DE4 TBNZ X8, 0x0, 0x3C08E44
	0x03C08DE8 ADRP X0, 0x4ED000
	0x03C08DEC LDR X0, [X0 + 0x170]
	0x03C08DF0 BL 0x1C16CF4
	0x03C08DF4 ADRP X0, 0x513000
	0x03C08DF8 LDR X0, [X0 + 0xA68]
	0x03C08DFC BL 0x1C16CF4
	0x03C08E00 ADRP X0, 0x556000
	0x03C08E04 LDR X0, [X0 + 0xC08]
	0x03C08E08 BL 0x1C16CF4
	0x03C08E0C ADRP X0, 0x556000
	0x03C08E10 LDR X0, [X0 + 0xC10]
	0x03C08E14 BL 0x1C16CF4
	0x03C08E18 ADRP X0, 0x556000
	0x03C08E1C LDR X0, [X0 + 0xC18]
	0x03C08E20 BL 0x1C16CF4
	0x03C08E24 ADRP X0, 0x4EC000
	0x03C08E28 LDR X0, [X0 + 0x608]
	0x03C08E2C BL 0x1C16CF4
	0x03C08E30 ADRP X0, 0x556000
	0x03C08E34 LDR X0, [X0 + 0xC20]
	0x03C08E38 BL 0x1C16CF4
	0x03C08E3C MOVZ W8, 0x1
	0x03C08E40 STRB W8, [X20 + 0x1E0]
	0x03C08E44 CBZ X19, 0x3C08FB8
	0x03C08E48 MOV X0, X19
	0x03C08E4C MOV X1, X31
	0x03C08E50 BL 0x322B8DC
	0x03C08E54 CBZ X0, 0x3C08FB8
	0x03C08E58 LDR W8, [X0 + 0x10]
	0x03C08E5C MOV X19, X0
	0x03C08E60 CBZ W8, 0x3C08FA4
	0x03C08E64 ADRP X21, 0x4ED000
	0x03C08E68 ADRP X20, 0x513000
	0x03C08E6C LDR X21, [X21 + 0x170]
	0x03C08E70 LDR X20, [X20 + 0xA68]
	0x03C08E74 SUB W1, W8, 0x1
	0x03C08E78 MOV X0, X19
	0x03C08E7C MOV X2, X31
	0x03C08E80 BL 0x3222A1C
	0x03C08E84 LDR X8, [X21]
	0x03C08E88 STRH W0, [X31 + 0xC]
	0x03C08E8C LDR W9, [X8 + 0xE0]
	0x03C08E90 CBNZ W9, 0x3C08E9C
	0x03C08E94 MOV X0, X8
	0x03C08E98 BL 0x1C16DFC
	0x03C08E9C ADD X0, X31, 0xC
	0x03C08EA0 MOV X1, X31
	0x03C08EA4 BL 0x330A76C
	0x03C08EA8 LDR X8, [X20]
	0x03C08EAC MOV X20, X0
	0x03C08EB0 LDR W9, [X8 + 0xE0]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move [X31+20], W3
	015 Move [X31+8], X1
	016 Move X22, 0x7DD000
	017 Move [X31+44], W2
	018 Move X20, 0x520000
	019 Move X19, 0x520000
	020 Move W8, [X22+472]
	021 Move X20, [X20+192]
	022 Move X19, [X19+176]
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {78}
	028 Move X0, 0x4EE000
	029 Move X0, [X0+3144]
	030 Call 0x1C17CF4
	031 Move X0, 0x557000
	032 Move X0, [X0+2984]
	033 Call 0x1C17CF4
	034 Move X0, 0x514000
	035 Move X0, [X0+2664]
	036 Call 0x1C17CF4
	037 Move X0, 0x557000
	038 Move X0, [X0+2992]
	039 Call 0x1C17CF4
	040 Move X0, 0x557000
	041 Move X0, [X0+3000]
	042 Call 0x1C17CF4
	043 Move X0, 0x519000
	044 Move X0, [X0+1136]
	045 Call 0x1C17CF4
	046 Move X0, 0x557000
	047 Move X0, [X0+3008]
	048 Call 0x1C17CF4
	049 Move X0, 0x557000
	050 Move X0, [X0+3016]
	051 Call 0x1C17CF4
	052 Move X0, 0x557000
	053 Move X0, [X0+3024]
	054 Call 0x1C17CF4
	055 Move X0, 0x557000
	056 Move X0, [X0+3032]
	057 Call 0x1C17CF4
	058 Move X0, 0x520000
	059 Move X0, [X0+160]
	060 Call 0x1C17CF4
	061 Move X0, 0x520000
	062 Move X0, [X0+168]
	063 Call 0x1C17CF4
	064 Move X0, 0x520000
	065 Move X0, [X0+176]
	066 Call 0x1C17CF4
	067 Move X0, 0x520000
	068 Move X0, [X0+184]
	069 Call 0x1C17CF4
	070 Move X0, 0x520000
	071 Move X0, [X0+192]
	072 Call 0x1C17CF4
	073 Move X0, 0x4ED000
	074 Move X0, [X0+2568]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X22+472], W8
	078 Move X0, [X20]
	079 Move [X31+24], X31
	080 Move [X31+32], X31
	081 Call 0x1C17F10
	082 Move X1, [X19]
	083 Move X22, X0
	084 Call Stack`1<Object>..ctor, X0
	085 Compare X21, 0
	086 JumpIfEqual {350}
	087 Move X8, [X21+24]
	088 Move X27, 0x514000
	089 Move X27, [X27+2664]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X19, 0x557000
	092 Move X20, 0x557000
	093 Move X28, 0x520000
	094 Move X19, [X19+3032]
	095 Move X20, [X20+2992]
	096 Move X28, [X28+168]
	097 Move X29, X31
	098 And X8, X8, 0
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, [X27]
	101 Add X8, X21, X29
	102 Move X23, [X8+32]
	103 Move W9, [X0+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X23
	108 Call ExpressionEvaluator.IsOperator, X0
	109 Move X8, [X27]
	110 Move W24, W0
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfEqual {214}
	114 Move TEMP, X24
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {220}
	118 Move X0, X23
	119 Call ExpressionEvaluator.TokenToOperator, X0
	120 Move X8, 0x557000
	121 Move X8, [X8+3024]
	122 Move X23, X0
	123 Move X8, [X8]
	124 Move X0, X8
	125 Call 0x1C17F10
	126 Move X8, 0x557000
	127 Move X8, [X8+3008]
	128 Move X24, X0
	129 Move X1, [X8]
	130 Call List`1<Double>..ctor, X0
	131 Compare X22, 0
	132 JumpIfEqual {350}
	133 Move W8, [X22+24]
	134 Move W26, 1
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X1, [X19]
	137 Move X0, X22
	138 Call Stack`1<Object>.Peek, X0
	139 Move X8, [X27]
	140 Move X25, X0
	141 Move W9, [X8+224]
	142 Compare W9, 0
	143 JumpIfNotEqual {146}
	144 Move X0, X8
	145 Call 0x1C17DFC
	146 Move X0, X25
	147 Call ExpressionEvaluator.IsCommand, X0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {201}
	152 Compare X24, 0
	153 JumpIfEqual {350}
	154 Compare X23, 0
	155 JumpIfEqual {350}
	156 Move W8, [X24+24]
	157 Move W9, [X23+28]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, 0x520000
	160 Move X8, [X8+160]
	161 Move X0, X22
	162 Move X1, [X8]
	163 Call Stack`1<Object>.Pop, X0
	164 Move X8, [X27]
	165 Move X25, X0
	166 Move W9, [X8+224]
	167 Compare W9, 0
	168 JumpIfNotEqual {171}
	169 Move X0, X8
	170 Call 0x1C17DFC
	171 Move X8, 0x557000
	172 Move X8, [X8+2984]
	173 Add X1, X31, 32
	174 Move X0, X25
	175 Move X2, [X8]
	176 Call 0x21E0FC0, X0, X1
	177 Move W10, [X24+28]
	178 Move V0, [X31+32]
	179 Move X8, [X24+16]
	180 Move X9, [X20]
	181 Add W10, W10, 1
	182 Move [X24+28], W10
	183 Compare X8, 0
	184 JumpIfEqual {350}
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Move W11, [X8+24]
	187 Move W25, W0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Add W9, W10, 1
	190 Add X8, X8, X10
	191 Move [X24+24], W9
	192 Move [X8+32], D0
	193 Move X8, [X9+32]
	194 Move X0, X24
	195 Move X8, [X8+192]
	196 Move X1, [X8+112]
	197 Call List`1<Double>.AddWithResize, X0, V0
	198 Move W8, [X22+24]
	199 And W26, W26, W25
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Compare X24, 0
	202 JumpIfEqual {350}
	203 Move X8, 0x557000
	204 Move X8, [X8+3000]
	205 Move X0, X24
	206 Move X1, [X8]
	207 Call List`1<Double>.Reverse, X0
	208 Move TEMP, X26
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {335}
	212 Compare X23, 0
	213 JumpIfNotEqual {264}
	214 Move X0, X8
	215 Call 0x1C17DFC
	216 Move TEMP, X24
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfEqual {118}
	220 Move X0, X23
	221 Call ExpressionEvaluator.IsVariable, X0
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {253}
	226 Move X8, 0x4ED000
	227 Move X8, [X8+2568]
	228 Move X0, X23
	229 Move X2, X31
	230 Move X1, [X8]
	231 Call String.op_Equality, X0, X1
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {239}
	236 Add X0, X31, 44
	237 Move X1, X31
	238 Call Int32.ToString, X0
	239 Move X8, 0x4EE000
	240 Move X8, [X8+3144]
	241 Move X0, [X8]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X0, X31
	247 Call CultureInfo.get_InvariantCulture
	248 Move X1, X0
	249 Move X0, [X31+8]
	250 Move X2, X31
	251 Call Double.ToString, X0, X1
	252 Move X23, X0
	253 Compare X22, 0
	254 JumpIfNotEqual {301}
	255 Move X8, 0x557000
	256 Move X8, [X8+3000]
	257 Move X0, X24
	258 Move X1, [X8]
	259 Call List`1<Double>.Reverse, X0
	260 Move TEMP, X26
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfNotEqual {335}
	264 Move W8, [X24+24]
	265 Move W9, [X23+28]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move X8, 0x519000
	268 Move X8, [X8+1136]
	269 Move X0, X24
	270 Move X1, [X8]
	271 Call List`1<Double>.ToArray, X0
	272 Move X8, [X27]
	273 Move W24, [X23+16]
	274 Move W23, [X31+44]
	275 Move X25, X0
	276 Move W9, [X8+224]
	277 Compare W9, 0
	278 JumpIfNotEqual {281}
	279 Move X0, X8
	280 Call 0x1C17DFC
	281 Move W3, [X31+20]
	282 Move X0, X25
	283 Move W1, W24
	284 Move W2, W23
	285 Call ExpressionEvaluator.EvaluateOp, X0, X1, X2, X3
	286 Move X8, 0x4EE000
	287 Move X8, [X8+3144]
	288 Move [X31+24], D0
	289 Move X0, [X8]
	290 Move W8, [X0+224]
	291 Compare W8, 0
	292 JumpIfNotEqual {294}
	293 Call 0x1C17DFC
	294 Move X0, X31
	295 Call CultureInfo.get_InvariantCulture
	296 Move X1, X0
	297 Add X0, X31, 24
	298 Move X2, X31
	299 Call Double.ToString, X0, X1
	300 Move X23, X0
	301 Move X2, [X28]
	302 Move X0, X22
	303 Move X1, X23
	304 Call Stack`1<Object>.Push, X0, X1
	305 Move W8, [X21+24]
	306 Add X29, X29, 1
	307 NotImplemented "Instruction CMP not yet implemented."
	308 Compare X22, 0
	309 JumpIfEqual {350}
	310 Move W8, [X22+24]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move X8, 0x520000
	313 Move X8, [X8+160]
	314 Move X0, X22
	315 Move X1, [X8]
	316 Call Stack`1<Object>.Pop, X0
	317 Move X8, [X27]
	318 Move X20, X0
	319 Move W9, [X8+224]
	320 Compare W9, 0
	321 JumpIfNotEqual {324}
	322 Move X0, X8
	323 Call 0x1C17DFC
	324 Move X8, 0x557000
	325 Move X8, [X8+2984]
	326 Move X1, [X31+8]
	327 Move X0, X20
	328 Move X2, [X8]
	329 Call 0x21E0FC0, X0, X1
	330 Move TEMP, X0
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfNotEqual {335}
	334 Move W0, 1
	335 Move W0, W31
	336 Move X20, [X31+128]
	337 Move X19, [X31+136]
	338 Move X22, [X31+112]
	339 Move X21, [X31+120]
	340 Move X24, [X31+96]
	341 Move X23, [X31+104]
	342 Move X26, [X31+80]
	343 Move X25, [X31+88]
	344 Move X28, [X31+64]
	345 Move X27, [X31+72]
	346 Move X29, [X31+48]
	347 Move X30, [X31+56]
	348 Add X31, X31, 144
	349 Return X0
	350 Call 0x1C17F20
	351 Call 0x1C17F28

Method: System.String[] InfixToRPN(System.String[] tokens)

Disassembly:
	0x03C0943C MOV X20, X0
	0x03C09440 BL 0x33BDD8C
	0x03C09444 ADRP X8, 0xFFFFFFFFFCEE1000
	0x03C09448 LDR V0, [X8 + 0x8B]
	0x03C0944C MOV X0, X19
	0x03C09450 MOV X2, X20
	0x03C09454 STR V0, [X20 + 0x1]
	0x03C09458 LDR X1, [X27]
	0x03C0945C LDR X3, [X23]
	0x03C09460 BL 0x2AA5098
	0x03C09464 LDR X0, [X22]
	0x03C09468 BL 0x1C16F10
	0x03C0946C MOV X1, X31
	0x03C09470 MOV X20, X0
	0x03C09474 BL 0x33BDD8C
	0x03C09478 ADRP X8, 0xFFFFFFFFFCEE3000
	0x03C0947C LDR V0, [X8 + 0x75]
	0x03C09480 MOV X0, X19
	0x03C09484 MOV X2, X20
	0x03C09488 STR V0, [X20 + 0x1]
	0x03C0948C LDR X1, [X26]
	0x03C09490 LDR X3, [X23]
	0x03C09494 BL 0x2AA5098
	0x03C09498 LDR X0, [X22]
	0x03C0949C BL 0x1C16F10
	0x03C094A0 MOV X1, X31
	0x03C094A4 MOV X20, X0
	0x03C094A8 BL 0x33BDD8C
	0x03C094AC ADRP X8, 0xFFFFFFFFFCEE2000
	0x03C094B0 LDR V0, [X8 + 0xA5]
	0x03C094B4 MOV X0, X19
	0x03C094B8 MOV X2, X20
	0x03C094BC STR V0, [X20 + 0x1]
	0x03C094C0 LDR X1, [X25]
	0x03C094C4 LDR X3, [X23]
	0x03C094C8 BL 0x2AA5098
	0x03C094CC LDR X0, [X22]
	0x03C094D0 BL 0x1C16F10
	0x03C094D4 MOV X1, X31
	0x03C094D8 MOV X20, X0
	0x03C094DC BL 0x33BDD8C
	0x03C094E0 ADRP X8, 0xFFFFFFFFFCEE3000
	0x03C094E4 LDR V0, [X8 + 0x93]
	0x03C094E8 ADRP X8, 0x555000
	0x03C094EC MOV X0, X19
	0x03C094F0 MOV X2, X20
	0x03C094F4 STR V0, [X20 + 0x1]
	0x03C094F8 LDR X8, [X8 + 0xC58]
	0x03C094FC LDR X3, [X23]
	0x03C09500 LDR X1, [X8]
	0x03C09504 BL 0x2AA5098
	0x03C09508 LDR X0, [X22]
	0x03C0950C BL 0x1C16F10
	0x03C09510 MOV X1, X31
	0x03C09514 MOV X20, X0
	0x03C09518 BL 0x33BDD8C
	0x03C0951C ADRP X8, 0xFFFFFFFFFCEE2000
	0x03C09520 LDR V0, [X8 + 0xE3]
	0x03C09524 ADRP X8, 0x555000
	0x03C09528 MOV X0, X19
	0x03C0952C MOV X2, X20
	0x03C09530 STR V0, [X20 + 0x1]
	0x03C09534 LDR X8, [X8 + 0xC68]
	0x03C09538 LDR X3, [X23]
	0x03C0953C LDR X1, [X8]
	0x03C09540 BL 0x2AA5098
	0x03C09544 LDR X0, [X22]
	0x03C09548 BL 0x1C16F10
	0x03C0954C MOV X1, X31
	0x03C09550 MOV X20, X0
	0x03C09554 BL 0x33BDD8C
	0x03C09558 ADRP X8, 0xFFFFFFFFFCEE1000
	0x03C0955C LDR V0, [X8 + 0x8C]
	0x03C09560 ADRP X8, 0x555000
	0x03C09564 MOV X0, X19
	0x03C09568 MOV X2, X20
	0x03C0956C STR V0, [X20 + 0x1]
	0x03C09570 LDR X8, [X8 + 0xC48]
	0x03C09574 LDR X3, [X23]
	0x03C09578 LDR X1, [X8]
	0x03C0957C BL 0x2AA5098
	0x03C09580 LDR X0, [X22]
	0x03C09584 BL 0x1C16F10
	0x03C09588 MOV X1, X31
	0x03C0958C MOV X20, X0
	0x03C09590 BL 0x33BDD8C
	0x03C09594 ADRP X8, 0xFFFFFFFFFCEE4000
	0x03C09598 LDR V0, [X8 + 0x21]
	0x03C0959C ADRP X8, 0x555000
	0x03C095A0 MOV X0, X19
	0x03C095A4 MOV X2, X20
	0x03C095A8 STR V0, [X20 + 0x1]
	0x03C095AC LDR X8, [X8 + 0xC70]
	0x03C095B0 LDR X3, [X23]
	0x03C095B4 LDR X1, [X8]
	0x03C095B8 BL 0x2AA5098
	0x03C095BC LDR X0, [X22]
	0x03C095C0 BL 0x1C16F10
	0x03C095C4 MOV X1, X31
	0x03C095C8 MOV X20, X0
	0x03C095CC BL 0x33BDD8C
	0x03C095D0 ADRP X8, 0xFFFFFFFFFCEE2000
	0x03C095D4 LDR V0, [X8 + 0x41]
	0x03C095D8 ADRP X8, 0x555000
	0x03C095DC MOV X0, X19
	0x03C095E0 MOV X2, X20
	0x03C095E4 STR V0, [X20 + 0x1]
	0x03C095E8 LDR X8, [X8 + 0xC80]
	0x03C095EC LDR X3, [X23]
	0x03C095F0 LDR X1, [X8]
	0x03C095F4 BL 0x2AA5098
	0x03C095F8 LDR X0, [X22]
	0x03C095FC BL 0x1C16F10
	0x03C09600 MOV X1, X31
	0x03C09604 MOV X20, X0
	0x03C09608 BL 0x33BDD8C
	0x03C0960C ADRP X8, 0xFFFFFFFFFCEE1000
	0x03C09610 LDR V0, [X8 + 0x5D]
	0x03C09614 ADRP X8, 0x555000
	0x03C09618 MOV X0, X19
	0x03C0961C MOV X2, X20
	0x03C09620 STR V0, [X20 + 0x1]
	0x03C09624 LDR X8, [X8 + 0xC50]
	0x03C09628 LDR X3, [X23]
	0x03C0962C LDR X1, [X8]
	0x03C09630 BL 0x2AA5098
	0x03C09634 LDR X0, [X22]
	0x03C09638 BL 0x1C16F10
	0x03C0963C MOV X1, X31
	0x03C09640 MOV X20, X0
	0x03C09644 BL 0x33BDD8C
	0x03C09648 ADRP X8, 0xFFFFFFFFFCEE3000
	0x03C0964C LDR V0, [X8 + 0xA8]
	0x03C09650 ADRP X8, 0x51F000
	0x03C09654 MOV X0, X19
	0x03C09658 MOV X2, X20
	0x03C0965C STR V0, [X20 + 0x1]
	0x03C09660 LDR X8, [X8 + 0x9F0]
	0x03C09664 LDR X3, [X23]
	0x03C09668 LDR X1, [X8]
	0x03C0966C BL 0x2AA5098
	0x03C09670 LDR X0, [X22]
	0x03C09674 BL 0x1C16F10
	0x03C09678 MOV X1, X31
	0x03C0967C MOV X20, X0
	0x03C09680 BL 0x33BDD8C
	0x03C09684 ADRP X8, 0xFFFFFFFFFCEE2000
	0x03C09688 LDR V0, [X8 + 0x27]
	0x03C0968C ADRP X8, 0x530000
	0x03C09690 MOV X0, X19
	0x03C09694 MOV X2, X20
	0x03C09698 STR V0, [X20 + 0x1]
	0x03C0969C LDR X8, [X8 + 0xC20]
	0x03C096A0 LDR X3, [X23]
	0x03C096A4 LDR X1, [X8]
	0x03C096A8 BL 0x2AA5098
	0x03C096AC ADRP X8, 0x512000
	0x03C096B0 LDR X8, [X8 + 0xA68]
	0x03C096B4 LDP X22, X21, [X31 + 0x40]
	0x03C096B8 LDP X24, X23, [X31 + 0x30]
	0x03C096BC LDP X26, X25, [X31 + 0x20]
	0x03C096C0 LDR X8, [X8]
	0x03C096C4 LDP X28, X27, [X31 + 0x10]
	0x03C096C8 LDR X8, [X8 + 0xB8]
	0x03C096CC STR X19, [X8 + 0x10]
	0x03C096D0 LDP X20, X19, [X31 + 0x50]
	0x03C096D4 LDP X29, X30, [X31], #0x60
	0x03C096D8 RET
	0x03C096DC BL 0x1C16F20
	0x03C096E0 MOVZ X9, 0x7F2D
	0x03C096E4 MOVZ W8, 0x1
	0x03C096E8 MOVK X9, 0x4C950000
	0x03C096EC MOVK X9, 0xF42D
	0x03C096F0 BFM X8, X2, 0x3F, 0x3E
	0x03C096F4 MOVK X9, 0x58510000
	0x03C096F8 ADD X10, X8, X1
	0x03C096FC MADD X9, X10, X9, X8
	0x03C09700 STP X8, X9, [X0]
	0x03C09704 RET
	0x03C09708 STP X30, X23, [X31 - 0x30]!
	0x03C0970C STP X22, X21, [X31 + 0x10]
	0x03C09710 STP X20, X19, [X31 + 0x20]
	0x03C09714 MOV W22, W1
	0x03C09718 MOV X1, X31
	0x03C0971C MOV W19, W4
	0x03C09720 MOV W20, W3
	0x03C09724 MOV W21, W2
	0x03C09728 MOV X23, X0
	0x03C0972C BL 0x33BDD8C
	0x03C09730 STP W22, W21, [X23 + 0x10]
	0x03C09734 STP W19, W20, [X23 + 0x18]
	0x03C09738 LDP X20, X19, [X31 + 0x20]
	0x03C0973C LDP X22, X21, [X31 + 0x10]
	0x03C09740 LDP X30, X23, [X31], #0x30
	0x03C09744 RET
	0x03C09748 STR X30, [X31 - 0x30]!
	0x03C0974C STP X22, X21, [X31 + 0x10]
	0x03C09750 STP X20, X19, [X31 + 0x20]
	0x03C09754 ADRP X22, 0x7DB000
	0x03C09758 ADRP X21, 0x512000
	0x03C0975C LDRB W8, [X22 + 0x1E4]
	0x03C09760 LDR X21, [X21 + 0xA68]
	0x03C09764 MOV X20, X1
	0x03C09768 MOV X19, X0
	0x03C0976C TBNZ X8, 0x0, 0x3C09784
	0x03C09770 ADRP X0, 0x512000
	0x03C09774 LDR X0, [X0 + 0xA68]
	0x03C09778 BL 0x1C16CF4
	0x03C0977C MOVZ W8, 0x1
	0x03C09780 STRB W8, [X22 + 0x1E4]
	0x03C09784 MOV X0, X19
	0x03C09788 MOV X1, X31
	0x03C0978C BL 0x33BDD8C
	0x03C09790 LDR X0, [X21]
	0x03C09794 LDR W8, [X0 + 0xE0]
	0x03C09798 CBNZ W8, 0x3C097A0
	0x03C0979C BL 0x1C16DFC
	0x03C097A0 MOV X0, X20
	0x03C097A4 BL 0x3C08DCC
	0x03C097A8 ADD X1, X19, 0x18
	0x03C097AC BL 0x3C08990
	0x03C097B0 BL 0x3C08FBC
	0x03C097B4 BL 0x3C0843C
	0x03C097B8 STR X0, [X19 + 0x10]
	0x03C097BC LDP X20, X19, [X31 + 0x20]
	0x03C097C0 LDP X22, X21, [X31 + 0x10]
	0x03C097C4 LDR X30, [X31], #0x30
	0x03C097C8 RET
	0x03C097CC LDP X9, X8, [X0]
	0x03C097D0 MOVZ X10, 0x7F2D
	0x03C097D4 MOVK X10, 0x4C950000
	0x03C097D8 MOVK X10, 0xF42D
	0x03C097DC MOVK X10, 0x58510000
	0x03C097E0 MADD X8, X8, X10, X9
	0x03C097E4 STR X8, [X0 + 0x8]
	0x03C097E8 RET
	0x03C097EC UBFM X8, X0, 0x2D, 0x3F
	0x03C097F0 UBFM X9, X0, 0x1B, 0x3F
	0x03C097F4 EOR W8, W8, W9, 0x0
	0x03C097F8 UBFM X9, X0, 0x3B, 0x3F
	0x03C097FC RORV W0, W8, W9
	0x03C09800 RET
	0x03C09804 RORV W0, W0, W1
	0x03C09808 RET
	0x03C0980C STR X30, [X31 - 0x20]!
	0x03C09810 STP X20, X19, [X31 + 0x10]
	0x03C09814 ADRP X19, 0x7DB000
	0x03C09818 ADRP X20, 0x555000
	0x03C0981C LDRB W8, [X19 + 0x1E5]
	0x03C09820 LDR X20, [X20 + 0xC00]
	0x03C09824 TBNZ X8, 0x0, 0x3C0983C
	0x03C09828 ADRP X0, 0x555000
	0x03C0982C LDR X0, [X0 + 0xC00]
	0x03C09830 BL 0x1C16CF4
	0x03C09834 MOVZ W8, 0x1
	0x03C09838 STRB W8, [X19 + 0x1E5]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x7DC000
	014 Move X24, 0x51F000
	015 Move X20, 0x51F000
	016 Move X22, 0x516000
	017 Move X21, 0x516000
	018 Move W8, [X23+473]
	019 Move X24, [X24+192]
	020 Move X20, [X20+176]
	021 Move X22, [X22+3472]
	022 Move X21, [X21+3464]
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {66}
	028 Move X0, 0x513000
	029 Move X0, [X0+2664]
	030 Call 0x1C17CF4
	031 Move X0, 0x516000
	032 Move X0, [X0+3456]
	033 Call 0x1C17CF4
	034 Move X0, 0x556000
	035 Move X0, [X0+3056]
	036 Call 0x1C17CF4
	037 Move X0, 0x516000
	038 Move X0, [X0+3464]
	039 Call 0x1C17CF4
	040 Move X0, 0x516000
	041 Move X0, [X0+3472]
	042 Call 0x1C17CF4
	043 Move X0, 0x556000
	044 Move X0, [X0+3032]
	045 Call 0x1C17CF4
	046 Move X0, 0x51F000
	047 Move X0, [X0+160]
	048 Call 0x1C17CF4
	049 Move X0, 0x51F000
	050 Move X0, [X0+168]
	051 Call 0x1C17CF4
	052 Move X0, 0x51F000
	053 Move X0, [X0+176]
	054 Call 0x1C17CF4
	055 Move X0, 0x51F000
	056 Move X0, [X0+184]
	057 Call 0x1C17CF4
	058 Move X0, 0x51F000
	059 Move X0, [X0+192]
	060 Call 0x1C17CF4
	061 Move X0, 0x4F6000
	062 Move X0, [X0+784]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X23+473], W8
	066 Move X0, [X24]
	067 Call 0x1C17F10
	068 Move X1, [X20]
	069 Move X20, X0
	070 Call Stack`1<Object>..ctor, X0
	071 Move X0, [X22]
	072 Call 0x1C17F10
	073 Move X1, [X21]
	074 Move X21, X0
	075 Call Queue`1<Object>..ctor, X0
	076 Compare X19, 0
	077 JumpIfEqual {289}
	078 Move X8, [X19+24]
	079 Move X24, 0x51F000
	080 Move X25, 0x516000
	081 Move X24, [X24+160]
	082 Move X25, [X25+3456]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X27, 0x513000
	085 Move X23, 0x51F000
	086 Move X29, 0x556000
	087 Move X28, 0x4F6000
	088 Move X27, [X27+2664]
	089 Move X23, [X23+168]
	090 Move X29, [X29+3032]
	091 Move X28, [X28+784]
	092 Move X26, X31
	093 And X8, X8, 0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, [X27]
	096 Add X8, X19, X26
	097 Move X22, [X8+32]
	098 Move W9, [X0+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X22
	103 Call ExpressionEvaluator.IsCommand, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {141}
	108 Compare X22, 0
	109 JumpIfEqual {289}
	110 Move X0, X22
	111 Move W1, W31
	112 Move X2, X31
	113 Call String.get_Chars, X0, X1
	114 And W8, W0, 0xFFFF
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Compare X20, 0
	119 JumpIfEqual {289}
	120 Move W8, [X20+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X1, [X29]
	123 Move X0, X20
	124 Call Stack`1<Object>.Peek, X0
	125 Move X1, [X28]
	126 Move X2, X31
	127 Call String.op_Inequality, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {220}
	132 Move X1, [X24]
	133 Move X0, X20
	134 Call Stack`1<Object>.Pop, X0
	135 Compare X21, 0
	136 JumpIfEqual {289}
	137 Move X2, [X25]
	138 Move X1, X0
	139 Move X0, X21
	140 Call Queue`1<Object>.Enqueue, X0, X1
	141 Move X0, [X27]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X22
	147 Call ExpressionEvaluator.IsDelayedFunction, X0
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {154}
	152 Compare X20, 0
	153 JumpIfNotEqual {216}
	154 Compare X21, 0
	155 JumpIfEqual {289}
	156 Move X2, [X25]
	157 Move X0, X21
	158 Move X1, X22
	159 Call Queue`1<Object>.Enqueue, X0, X1
	160 Compare X20, 0
	161 JumpIfEqual {289}
	162 Move W8, [X20+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X1, [X29]
	165 Move X0, X20
	166 Call Stack`1<Object>.Peek, X0
	167 Move X1, [X28]
	168 Move X2, X31
	169 Call String.op_Inequality, X0, X1
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {223}
	174 Move X1, [X24]
	175 Move X0, X20
	176 Call Stack`1<Object>.Pop, X0
	177 Compare X21, 0
	178 JumpIfEqual {289}
	179 Move X2, [X25]
	180 Move X1, X0
	181 Move X0, X21
	182 Call Queue`1<Object>.Enqueue, X0, X1
	183 Move X0, [X27]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X0, X22
	189 Call ExpressionEvaluator.TokenToOperator, X0
	190 Move X23, X0
	191 Move X0, [X27]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X0, X20
	197 Move X1, X23
	198 Call ExpressionEvaluator.NeedToPop, X0, X1
	199 Compare X20, 0
	200 JumpIfEqual {289}
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {214}
	205 Move X1, [X24]
	206 Move X0, X20
	207 Call Stack`1<Object>.Pop, X0
	208 Compare X21, 0
	209 JumpIfEqual {289}
	210 Move X2, [X25]
	211 Move X1, X0
	212 Move X0, X21
	213 Call Queue`1<Object>.Enqueue, X0, X1
	214 Move X23, 0x51F000
	215 Move X23, [X23+168]
	216 Move X2, [X23]
	217 Move X0, X20
	218 Move X1, X22
	219 Call Stack`1<Object>.Push, X0, X1
	220 Move W8, [X19+24]
	221 Add X26, X26, 1
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move W8, [X20+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X1, [X24]
	226 Move X0, X20
	227 Call Stack`1<Object>.Pop, X0
	228 Move W8, [X20+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X1, [X29]
	231 Move X0, X20
	232 Call Stack`1<Object>.Peek, X0
	233 Move X8, [X27]
	234 Move X22, X0
	235 Move W9, [X8+224]
	236 Compare W9, 0
	237 JumpIfNotEqual {240}
	238 Move X0, X8
	239 Call 0x1C17DFC
	240 Move X0, X22
	241 Call ExpressionEvaluator.IsDelayedFunction, X0
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfNotEqual {220}
	246 Move X1, [X24]
	247 Move X0, X20
	248 Call Stack`1<Object>.Pop, X0
	249 Compare X21, 0
	250 JumpIfEqual {289}
	251 Move X2, [X25]
	252 Move X1, X0
	253 Move X0, X21
	254 Compare X20, 0
	255 JumpIfEqual {289}
	256 Move W8, [X20+24]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X1, [X24]
	259 Move X0, X20
	260 Call Stack`1<Object>.Pop, X0
	261 Compare X21, 0
	262 JumpIfEqual {289}
	263 Move X2, [X25]
	264 Move X1, X0
	265 Move X0, X21
	266 Call Queue`1<Object>.Enqueue, X0, X1
	267 Move W8, [X20+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Compare X21, 0
	270 JumpIfEqual {289}
	271 Move X8, 0x556000
	272 Move X8, [X8+3056]
	273 Move X0, X21
	274 Move X20, [X31+80]
	275 Move X19, [X31+88]
	276 Move X22, [X31+64]
	277 Move X21, [X31+72]
	278 Move X1, [X8]
	279 Move X24, [X31+48]
	280 Move X23, [X31+56]
	281 Move X26, [X31+32]
	282 Move X25, [X31+40]
	283 Move X28, [X31+16]
	284 Move X27, [X31+24]
	285 Move X29, [X31+96]
	286 Move X30, [X31+104]
	287 Call Queue`1<Object>.ToArray, X0
	288 Return X0
	289 Call 0x1C17F20
	290 Call 0x1C17F28

Method: System.Boolean NeedToPop(System.Collections.Generic.Stack`1<System.String> operatorStack, UnityEngine.ExpressionEvaluator/Operator newOperator)

Disassembly:
	0x03C098A8 LDR W8, [X0 + 0xE0]
	0x03C098AC CBNZ W8, 0x3C098B4
	0x03C098B0 BL 0x1C16DFC
	0x03C098B4 MOV X0, X19
	0x03C098B8 BL 0x3C083D4
	0x03C098BC TBZ X0, 0x0, 0x3C098D0
	0x03C098C0 LDP X20, X19, [X31 + 0x10]
	0x03C098C4 MOVZ W0, 0x1
	0x03C098C8 LDP X30, X21, [X31], #0x20
	0x03C098CC RET
	0x03C098D0 LDR X0, [X20]
	0x03C098D4 LDR W8, [X0 + 0xE0]
	0x03C098D8 CBNZ W8, 0x3C098E0
	0x03C098DC BL 0x1C16DFC
	0x03C098E0 MOV X0, X19
	0x03C098E4 LDP X20, X19, [X31 + 0x10]
	0x03C098E8 LDP X30, X21, [X31], #0x20
	0x03C098EC B 0x3C0883C
	0x03C098F0 RET
	0x03C098F4 STP S0, S1, [X0]
	0x03C098F8 FMOV S0, 0.5
	0x03C098FC FMUL S1, S3, S0
	0x03C09900 FMUL S3, S4, S0
	0x03C09904 FMUL S0, S5, S0
	0x03C09908 STP S2, S1, [X0 + 0x8]
	0x03C0990C STP S3, S0, [X0 + 0x10]
	0x03C09910 RET
	0x03C09914 SUB X31, X31, 0x50
	0x03C09918 STR X30, [X31 + 0x10]
	0x03C0991C STP X24, X23, [X31 + 0x20]
	0x03C09920 STP X22, X21, [X31 + 0x30]
	0x03C09924 STP X20, X19, [X31 + 0x40]
	0x03C09928 LDR V0, [X0]
	0x03C0992C LDR V1, [X0 + 0x8]
	0x03C09930 MOV X19, X0
	0x03C09934 ADD X8, X31, 0x0
	0x03C09938 ADD X0, X31, 0x0
	0x03C0993C MOV X1, X31
	0x03C09940 ORR X20, X8, 0x7
	0x03C09944 ADD X21, X8, 0x8
	0x03C09948 STR D0, [X31]
	0x03C0994C STR S1, [X31 + 0x8]
	0x03C09950 BL 0x338FE0C
	0x03C09954 MOV W22, W0
	0x03C09958 MOV X0, X20
	0x03C0995C MOV X1, X31
	0x03C09960 BL 0x338FE0C
	0x03C09964 MOV W23, W0
	0x03C09968 MOV X0, X21
	0x03C0996C MOV X1, X31
	0x03C09970 BL 0x338FE0C
	0x03C09974 LDUR V0, [X19 + 0xC]
	0x03C09978 LDR V1, [X19 + 0x14]
	0x03C0997C MOV W24, W0
	0x03C09980 ADD X0, X31, 0x0
	0x03C09984 MOV X1, X31
	0x03C09988 STR D0, [X31]
	0x03C0998C STR S1, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DC000
	006 Move W8, [X21+474]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x513000
	014 Move X0, [X0+2664]
	015 Call 0x1C17CF4
	016 Move X0, 0x556000
	017 Move X0, [X0+3032]
	018 Call 0x1C17CF4
	019 Move X0, 0x51F000
	020 Move X0, [X0+184]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+474], W8
	024 Compare X20, 0
	025 JumpIfEqual {65}
	026 Compare X19, 0
	027 JumpIfEqual {59}
	028 Move W8, [X20+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, 0x556000
	031 Move X8, [X8+3032]
	032 Move X0, X20
	033 Move X1, [X8]
	034 Call Stack`1<Object>.Peek, X0
	035 Move X8, 0x513000
	036 Move X8, [X8+2664]
	037 Move X20, X0
	038 Move X8, [X8]
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Call ExpressionEvaluator.TokenToOperator, X0
	046 Compare X0, 0
	047 JumpIfEqual {59}
	048 Move W8, [X19+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Compare W8, 0
	051 JumpIfNotEqual {59}
	052 Move W8, [X19+20]
	053 Move W9, [X0+20]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W0, 1
	056 Move W8, [X19+20]
	057 Move W9, [X0+20]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W0, W31
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return X0
	065 Call 0x1C17F20

Method: System.String[] ExpressionToTokens(System.String expression, out System.Boolean hasVariables)

Disassembly:
	0x03C09990 BL 0x338FE0C
	0x03C09994 MOV W19, W0
	0x03C09998 MOV X0, X20
	0x03C0999C MOV X1, X31
	0x03C099A0 BL 0x338FE0C
	0x03C099A4 MOV W20, W0
	0x03C099A8 MOV X0, X21
	0x03C099AC MOV X1, X31
	0x03C099B0 BL 0x338FE0C
	0x03C099B4 EOR W9, W22, W23, 0x2
	0x03C099B8 EOR W9, W9, W24, 0x2
	0x03C099BC EOR W9, W9, W19, 0x2
	0x03C099C0 EOR W9, W9, W20, 0x4
	0x03C099C4 LDP X20, X19, [X31 + 0x40]
	0x03C099C8 LDP X22, X21, [X31 + 0x30]
	0x03C099CC LDP X24, X23, [X31 + 0x20]
	0x03C099D0 LDR X30, [X31 + 0x10]
	0x03C099D4 AND W8, W0, 0xFFFFFFFC
	0x03C099D8 EOR W0, W9, W8, 0x0
	0x03C099DC ADD X31, X31, 0x50
	0x03C099E0 RET
	0x03C099E4 STP X30, X21, [X31 - 0x20]!
	0x03C099E8 STP X20, X19, [X31 + 0x10]
	0x03C099EC ADRP X21, 0x7DB000
	0x03C099F0 LDRB W8, [X21 + 0x1E7]
	0x03C099F4 MOV X20, X1
	0x03C099F8 MOV X19, X0
	0x03C099FC TBNZ X8, 0x0, 0x3C09A14
	0x03C09A00 ADRP X0, 0x512000
	0x03C09A04 LDR X0, [X0 + 0x5D0]
	0x03C09A08 BL 0x1C16CF4
	0x03C09A0C MOVZ W8, 0x1
	0x03C09A10 STRB W8, [X21 + 0x1E7]
	0x03C09A14 CBZ X20, 0x3C09A30
	0x03C09A18 ADRP X8, 0x512000
	0x03C09A1C LDR X8, [X8 + 0x5D0]
	0x03C09A20 LDR X9, [X20]
	0x03C09A24 LDR X8, [X8]
	0x03C09A28 CMP X9, X8
	0x03C09A2C B.EQ 0x3C09A40
	0x03C09A30 MOV W0, W31
	0x03C09A34 LDP X20, X19, [X31 + 0x10]
	0x03C09A38 LDP X30, X21, [X31], #0x20
	0x03C09A3C RET
	0x03C09A40 MOV X0, X20
	0x03C09A44 BL 0x1C16E08
	0x03C09A48 LDR V0, [X0]
	0x03C09A4C LDR V1, [X19]
	0x03C09A50 MOV X8, X0
	0x03C09A54 MOV W0, W31
	0x03C09A58 FCMP S1, S0
	0x03C09A5C B.NE 0x3C09A34
	0x03C09A60 LDR V0, [X8 + 0x4]
	0x03C09A64 LDR V1, [X19 + 0x4]
	0x03C09A68 FCMP S1, S0
	0x03C09A6C B.NE 0x3C09A34
	0x03C09A70 LDR V0, [X8 + 0x8]
	0x03C09A74 LDR V1, [X19 + 0x8]
	0x03C09A78 FCMP S1, S0
	0x03C09A7C B.NE 0x3C09A34
	0x03C09A80 LDP S1, S0, [X8 + 0xC]
	0x03C09A84 LDP S2, S4, [X19 + 0xC]
	0x03C09A88 LDR V3, [X8 + 0x14]
	0x03C09A8C LDR V5, [X19 + 0x14]
	0x03C09A90 FCMP S2, S1
	0x03C09A94 CSET W8, EQ
	0x03C09A98 FCMP S4, S0
	0x03C09A9C CSET W9, EQ
	0x03C09AA0 FCMP S5, S3
	0x03C09AA4 AND W8, W8, W9, 0x0
	0x03C09AA8 CSET W9, EQ
	0x03C09AAC AND W0, W8, W9, 0x0
	0x03C09AB0 B 0x3C09A34
	0x03C09AB4 LDR V0, [X0]
	0x03C09AB8 LDR V1, [X1]
	0x03C09ABC FCMP S0, S1
	0x03C09AC0 B.NE 0x3C09B18
	0x03C09AC4 LDR V0, [X0 + 0x4]
	0x03C09AC8 LDR V1, [X1 + 0x4]
	0x03C09ACC FCMP S0, S1
	0x03C09AD0 B.NE 0x3C09B18
	0x03C09AD4 LDR V0, [X0 + 0x8]
	0x03C09AD8 LDR V1, [X1 + 0x8]
	0x03C09ADC FCMP S0, S1
	0x03C09AE0 B.NE 0x3C09B18
	0x03C09AE4 LDP S0, S1, [X0 + 0xC]
	0x03C09AE8 LDP S2, S4, [X1 + 0xC]
	0x03C09AEC LDR V3, [X0 + 0x14]
	0x03C09AF0 LDR V5, [X1 + 0x14]
	0x03C09AF4 FCMP S0, S2
	0x03C09AF8 CSET W8, EQ
	0x03C09AFC FCMP S1, S4
	0x03C09B00 CSET W9, EQ
	0x03C09B04 FCMP S3, S5
	0x03C09B08 AND W8, W8, W9, 0x0
	0x03C09B0C CSET W9, EQ
	0x03C09B10 AND W0, W8, W9, 0x0
	0x03C09B14 RET
	0x03C09B18 MOV W0, W31
	0x03C09B1C RET
	0x03C09B20 LDP S0, S1, [X0]
	0x03C09B24 LDR V2, [X0 + 0x8]
	0x03C09B28 RET
	0x03C09B2C STP S0, S1, [X0]
	0x03C09B30 STR S2, [X0 + 0x8]
	0x03C09B34 RET
	0x03C09B38 LDP S0, S1, [X0 + 0xC]
	0x03C09B3C LDR V2, [X0 + 0x14]
	0x03C09B40 FADD S0, S0, S0
	0x03C09B44 FADD S1, S1, S1
	0x03C09B48 FADD S2, S2, S2
	0x03C09B4C RET
	0x03C09B50 FMOV S3, 0.5
	0x03C09B54 FMUL S0, S0, S3
	0x03C09B58 FMUL S1, S1, S3
	0x03C09B5C FMUL S2, S2, S3
	0x03C09B60 STP S0, S1, [X0 + 0xC]
	0x03C09B64 STR S2, [X0 + 0x14]
	0x03C09B68 RET
	0x03C09B6C LDP S0, S1, [X0 + 0xC]
	0x03C09B70 LDR V2, [X0 + 0x14]
	0x03C09B74 RET
	0x03C09B78 STP S0, S1, [X0 + 0xC]
	0x03C09B7C STR S2, [X0 + 0x14]
	0x03C09B80 RET
	0x03C09B84 LDR V0, [X0]
	0x03C09B88 LDUR V2, [X0 + 0xC]
	0x03C09B8C LDR V1, [X0 + 0x8]
	0x03C09B90 LDR V3, [X0 + 0x14]
	0x03C09B94 FSUB V0.2S, V0.2S, V2.2S
	0x03C09B98 FSUB S2, S1, S3
	0x03C09B9C MOV S1, V0.S[1]
	0x03C09BA0 RET
	0x03C09BA4 LDR V3, [X0]
	0x03C09BA8 LDR V4, [X0 + 0x8]
	0x03C09BAC LDUR V5, [X0 + 0xC]
	0x03C09BB0 LDR V6, [X0 + 0x14]
	0x03C09BB4 MOV V0.S[1], V1.S[0]
	0x03C09BB8 FADD V3.2S, V3.2S, V5.2S
	0x03C09BBC FADD S4, S4, S6
	0x03C09BC0 MOVI V1.2S, 0x3F, 0x18
	0x03C09BC4 FMOV S5, 0.5
	0x03C09BC8 FSUB V3.2S, V3.2S, V0.2S
	0x03C09BCC FSUB S4, S4, S2
	0x00000000 INVALID
	0x03C09BD4 FMUL S3, S4, S5
	0x03C09BD8 STUR D1, [X0 + 0xC]
	0x03C09BDC FADD V0.2S, V0.2S, V1.2S
	0x03C09BE0 FADD S1, S2, S3
	0x03C09BE4 STR S3, [X0 + 0x14]
	0x03C09BE8 STR D0, [X0]
	0x03C09BEC STR S1, [X0 + 0x8]
	0x03C09BF0 RET
	0x03C09BF4 LDR V0, [X0]
	0x03C09BF8 LDUR V2, [X0 + 0xC]
	0x03C09BFC LDR V1, [X0 + 0x8]
	0x03C09C00 LDR V3, [X0 + 0x14]
	0x03C09C04 FADD V0.2S, V0.2S, V2.2S
	0x03C09C08 FADD S2, S1, S3
	0x03C09C0C MOV S1, V0.S[1]
	0x03C09C10 RET
	0x03C09C14 LDR V3, [X0]
	0x03C09C18 LDR V4, [X0 + 0x8]
	0x03C09C1C LDUR V5, [X0 + 0xC]
	0x03C09C20 LDR V6, [X0 + 0x14]
	0x03C09C24 MOV V0.S[1], V1.S[0]
	0x03C09C28 FSUB V3.2S, V3.2S, V5.2S
	0x03C09C2C FSUB S4, S4, S6
	0x03C09C30 MOVI V1.2S, 0x3F, 0x18
	0x03C09C34 FMOV S5, 0.5
	0x03C09C38 FSUB V0.2S, V0.2S, V3.2S
	0x03C09C3C FSUB S2, S2, S4
	0x00000000 INVALID
	0x03C09C44 FMUL S1, S2, S5
	0x03C09C48 STUR D0, [X0 + 0xC]
	0x03C09C4C STR S1, [X0 + 0x14]
	0x03C09C50 FADD V0.2S, V3.2S, V0.2S
	0x03C09C54 FADD S1, S4, S1
	0x03C09C58 STR D0, [X0]
	0x03C09C5C STR S1, [X0 + 0x8]
	0x03C09C60 RET
	0x03C09C64 LDR V0, [X0]
	0x03C09C68 LDR V1, [X1]
	0x03C09C6C LDUR V2, [X0 + 0x4]
	0x03C09C70 LDUR V3, [X1 + 0x4]
	0x03C09C74 ADRP X8, 0xFFFFFFFFFCEE0000
	0x03C09C78 FSUB S1, S0, S1
	0x03C09C7C LDR V0, [X8 + 0xF20]
	0x03C09C80 FSUB V2.2S, V2.2S, V3.2S
	0x03C09C84 FMUL S1, S1, S1
	0x00000000 INVALID
	0x03C09C8C FADD S1, S1, S2
	0x03C09C90 MOV S2, V2.S[1]
	0x03C09C94 FADD S1, S2, S1
	0x03C09C98 FCMP S1, S0
	0x03C09C9C B.PL 0x3C09CD8
	0x03C09CA0 LDR V1, [X0 + 0xC]
	0x03C09CA4 LDR V2, [X0 + 0x10]
	0x03C09CA8 LDR V3, [X1 + 0xC]
	0x03C09CAC LDR V4, [X1 + 0x10]
	0x03C09CB0 FSUB S1, S1, S3
	0x03C09CB4 FSUB V2.2S, V2.2S, V4.2S
	0x03C09CB8 FMUL S1, S1, S1
	0x00000000 INVALID
	0x03C09CC0 FADD S1, S1, S2
	0x03C09CC4 MOV S2, V2.S[1]
	0x03C09CC8 FADD S1, S2, S1
	0x03C09CCC FCMP S1, S0
	0x03C09CD0 CSET W0, MI
	0x03C09CD4 RET
	0x03C09CD8 MOV W0, W31
	0x03C09CDC RET
	0x03C09CE0 LDR V0, [X0]
	0x03C09CE4 LDR V1, [X1]
	0x03C09CE8 LDUR V2, [X0 + 0x4]
	0x03C09CEC LDUR V3, [X1 + 0x4]
	0x03C09CF0 ADRP X8, 0xFFFFFFFFFCEE0000
	0x03C09CF4 FSUB S1, S0, S1
	0x03C09CF8 LDR V0, [X8 + 0xF20]
	0x03C09CFC FSUB V2.2S, V2.2S, V3.2S
	0x03C09D00 FMUL S1, S1, S1
	0x00000000 INVALID
	0x03C09D08 FADD S1, S1, S2
	0x03C09D0C MOV S2, V2.S[1]
	0x03C09D10 FADD S1, S2, S1
	0x03C09D14 FCMP S1, S0
	0x03C09D18 B.PL 0x3C09D54
	0x03C09D1C LDR V1, [X1 + 0x10]
	0x03C09D20 LDR V2, [X1 + 0xC]
	0x03C09D24 LDR V3, [X0 + 0xC]
	0x03C09D28 LDR V4, [X0 + 0x10]
	0x03C09D2C FSUB S2, S3, S2
	0x03C09D30 FSUB V1.2S, V4.2S, V1.2S
	0x03C09D34 FMUL S2, S2, S2
	0x00000000 INVALID
	0x03C09D3C FADD S2, S1, S2
	0x03C09D40 MOV S1, V1.S[1]
	0x03C09D44 FADD S1, S1, S2
	0x03C09D48 FCMP S1, S0
	0x03C09D4C CSET W0, PL
	0x03C09D50 RET
	0x03C09D54 MOVZ W0, 0x1
	0x03C09D58 RET
	0x03C09D5C FSUB S3, S3, S0
	0x03C09D60 FSUB S4, S4, S1
	0x03C09D64 FSUB S5, S5, S2
	0x03C09D68 FMOV S6, 0.5
	0x03C09D6C FMUL S3, S3, S6
	0x03C09D70 FMUL S4, S4, S6
	0x03C09D74 FMUL S5, S5, S6
	0x03C09D78 FADD S0, S0, S3
	0x03C09D7C FADD S1, S1, S4
	0x03C09D80 FADD S2, S2, S5
	0x03C09D84 STP S4, S5, [X0 + 0x10]
	0x03C09D88 STP S0, S1, [X0]
	0x03C09D8C STP S2, S3, [X0 + 0x8]
	0x03C09D90 RET
	0x03C09D94 LDR V3, [X0]
	0x03C09D98 LDR V4, [X0 + 0x8]
	0x03C09D9C LDUR V5, [X0 + 0xC]
	0x03C09DA0 LDR V6, [X0 + 0x14]
	0x03C09DA4 MOVI V7.2S, 0x3F, 0x18
	0x03C09DA8 MOV V0.S[1], V1.S[0]
	0x03C09DAC FSUB V1.2S, V3.2S, V5.2S
	0x03C09DB0 FADD V3.2S, V3.2S, V5.2S
	0x03C09DB4 FSUB S5, S4, S6
	0x03C09DB8 FADD S4, S4, S6
	0x00000000 INVALID
	0x03C09DC0 FCMP S5, S2
	0x00000000 INVALID
	0x00000000 INVALID

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x7DC000
	013 Move X22, 0x4EC000
	014 Move X20, 0x4EC000
	015 Move W8, [X23+475]
	016 Move X22, [X22+464]
	017 Move X20, [X20+448]
	018 Move X19, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {59}
	024 Move X0, 0x4ED000
	025 Move X0, [X0+368]
	026 Call 0x1C17CF4
	027 Move X0, 0x4EC000
	028 Move X0, [X0+3040]
	029 Call 0x1C17CF4
	030 Move X0, 0x513000
	031 Move X0, [X0+2664]
	032 Call 0x1C17CF4
	033 Move X0, 0x4EC000
	034 Move X0, [X0+3064]
	035 Call 0x1C17CF4
	036 Move X0, 0x4EC000
	037 Move X0, [X0+440]
	038 Call 0x1C17CF4
	039 Move X0, 0x4ED000
	040 Move X0, [X0+3704]
	041 Call 0x1C17CF4
	042 Move X0, 0x4EC000
	043 Move X0, [X0+448]
	044 Call 0x1C17CF4
	045 Move X0, 0x4EC000
	046 Move X0, [X0+464]
	047 Call 0x1C17CF4
	048 Move X0, 0x556000
	049 Move X0, [X0+3064]
	050 Call 0x1C17CF4
	051 Move X0, 0x556000
	052 Move X0, [X0+3072]
	053 Call 0x1C17CF4
	054 Move X0, 0x4EB000
	055 Move X0, [X0+2440]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X23+475], W8
	059 NotImplemented "Instruction STRH not yet implemented."
	060 Move [X19], W31
	061 Move X0, [X22]
	062 Call 0x1C17F10
	063 Move X1, [X20]
	064 Move X20, X0
	065 Call List`1<Object>..ctor, X0
	066 Compare X21, 0
	067 JumpIfEqual {291}
	068 Move X26, 0x4EB000
	069 Move W8, [X21+16]
	070 Move X26, [X26+2440]
	071 Move X25, 0x4EC000
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X23, [X26]
	074 Move X25, [X25+440]
	075 Move X27, 0x4ED000
	076 Move X28, 0x513000
	077 Move X27, [X27+368]
	078 Move X28, [X28+2664]
	079 Move W22, W31
	080 Move X0, X21
	081 Move W1, W22
	082 Move X2, X31
	083 Call String.get_Chars, X0, X1
	084 Move X8, [X27]
	085 NotImplemented "Instruction STRH not yet implemented."
	086 Move W9, [X8+224]
	087 Compare W9, 0
	088 JumpIfNotEqual {91}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Add X0, X31, 12
	092 Move X1, X31
	093 Call Char.ToString, X0
	094 Move X8, [X28]
	095 Move X24, X0
	096 Move W9, [X8+224]
	097 Compare W9, 0
	098 JumpIfNotEqual {101}
	099 Move X0, X8
	100 Call 0x1C17DFC
	101 Move X0, X24
	102 Call ExpressionEvaluator.IsCommand, X0
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {127}
	107 Compare X23, 0
	108 JumpIfEqual {291}
	109 Move W8, [X23+16]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Compare X20, 0
	112 JumpIfEqual {291}
	113 Move W10, [X20+28]
	114 Move X8, [X20+16]
	115 Move X9, [X25]
	116 Add W10, W10, 1
	117 Move [X20+28], W10
	118 Compare X8, 0
	119 JumpIfEqual {291}
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Move W11, [X8+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add W9, W10, 1
	124 Add X8, X8, X10
	125 Move [X20+24], W9
	126 Move [X8+32], X23
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Compare X23, 0
	130 JumpIfEqual {291}
	131 Move W8, [X23+16]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Compare X20, 0
	134 JumpIfEqual {291}
	135 Move W10, [X20+28]
	136 Move X8, [X20+16]
	137 Move X9, [X25]
	138 Add W10, W10, 1
	139 Move [X20+28], W10
	140 Compare X8, 0
	141 JumpIfEqual {291}
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Move W11, [X8+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add W9, W10, 1
	146 Add X8, X8, X10
	147 Move [X20+24], W9
	148 Move [X8+32], X23
	149 Move X0, [X27]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Add X0, X31, 12
	155 Move X1, X31
	156 Call Char.ToString, X0
	157 Move X1, X0
	158 Move X0, X23
	159 Move X2, X31
	160 Call String.Concat, X0, X1
	161 Move X23, X0
	162 Move X8, [X9+32]
	163 Move X0, X20
	164 Move X1, X23
	165 Move X8, [X8+192]
	166 Move X2, [X8+112]
	167 Call List`1<Object>.AddWithResize, X0, X1
	168 Move X0, [X27]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Add X0, X31, 12
	174 Move X1, X31
	175 Call Char.ToString, X0
	176 Compare X20, 0
	177 JumpIfEqual {291}
	178 Move W10, [X20+28]
	179 Move X8, [X20+16]
	180 Move X9, [X25]
	181 Add W10, W10, 1
	182 Move [X20+28], W10
	183 Compare X8, 0
	184 JumpIfEqual {291}
	185 NotImplemented "Instruction LDRSW not yet implemented."
	186 Move W11, [X8+24]
	187 Move X1, X0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Add W9, W10, 1
	190 Add X8, X8, X10
	191 Move [X20+24], W9
	192 Move [X8+32], X1
	193 Move X8, [X9+32]
	194 Move X0, X20
	195 Move X8, [X9+32]
	196 Move X0, X20
	197 Move X1, X23
	198 Move X8, [X8+192]
	199 Move X2, [X8+112]
	200 Call List`1<Object>.AddWithResize, X0, X1
	201 Move X23, [X26]
	202 Move W8, [X21+16]
	203 Add W22, W22, 1
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Compare X23, 0
	206 JumpIfEqual {291}
	207 Move W8, [X23+16]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Compare X20, 0
	210 JumpIfEqual {291}
	211 Move W10, [X20+28]
	212 Move X8, [X20+16]
	213 Move X9, [X25]
	214 Add W10, W10, 1
	215 Move [X20+28], W10
	216 Compare X8, 0
	217 JumpIfEqual {291}
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Move W11, [X8+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Add W9, W10, 1
	222 Add X8, X8, X10
	223 Move [X20+24], W9
	224 Move [X8+32], X23
	225 Move X8, [X9+32]
	226 Move X0, X20
	227 Move X1, X23
	228 Move X8, [X8+192]
	229 Move X2, [X8+112]
	230 Call List`1<Object>.AddWithResize, X0, X1
	231 Move X23, 0x556000
	232 Move X23, [X23+3072]
	233 Move X0, [X23]
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {239}
	237 Call 0x1C17DFC
	238 Move X0, [X23]
	239 Move X8, [X0+184]
	240 Move X24, 0x4EC000
	241 Move X21, [X8+8]
	242 Move X24, [X24+3040]
	243 Compare X21, 0
	244 JumpIfNotEqual {266}
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {250}
	248 Call 0x1C17DFC
	249 Move X0, [X23]
	250 Move X9, 0x4EC000
	251 Move X8, [X0+184]
	252 Move X9, [X9+3064]
	253 Move X22, [X8]
	254 Move X0, [X9]
	255 Call 0x1C17F10
	256 Move X8, 0x556000
	257 Move X8, [X8+3064]
	258 Move X1, X22
	259 Move X3, X31
	260 Move X21, X0
	261 Move X2, [X8]
	262 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	263 Move X8, [X23]
	264 Move X8, [X8+184]
	265 Move [X8+8], X21
	266 Move X2, [X24]
	267 Move X0, X20
	268 Move X1, X21
	269 Call Enumerable.Any, X0, X1
	270 And W8, W0, 1
	271 Move [X19], W8
	272 Compare X20, 0
	273 JumpIfEqual {291}
	274 Move X8, 0x4ED000
	275 Move X8, [X8+3704]
	276 Move X0, X20
	277 Move X1, [X8]
	278 Call List`1<Object>.ToArray, X0
	279 Move X20, [X31+80]
	280 Move X19, [X31+88]
	281 Move X22, [X31+64]
	282 Move X21, [X31+72]
	283 Move X24, [X31+48]
	284 Move X23, [X31+56]
	285 Move X26, [X31+32]
	286 Move X25, [X31+40]
	287 Move X28, [X31+16]
	288 Move X27, [X31+24]
	289 Move X30, [X31+96]
	290 Return X0
	291 Call 0x1C17F20

Method: System.Boolean IsCommand(System.String token)

Disassembly:
	0x03C08FD4 LDRB W8, [X20 + 0x1E1]
	0x03C08FD8 MOV X19, X0
	0x03C08FDC TBNZ X8, 0x0, 0x3C09018
	0x03C08FE0 ADRP X0, 0x513000
	0x03C08FE4 LDR X0, [X0 + 0xA68]
	0x03C08FE8 BL 0x1C16CF4
	0x03C08FEC ADRP X0, 0x4EC000
	0x03C08FF0 LDR X0, [X0 + 0x2A8]
	0x03C08FF4 BL 0x1C16CF4
	0x03C08FF8 ADRP X0, 0x4EB000
	0x03C08FFC LDR X0, [X0 + 0xDE0]
	0x03C09000 BL 0x1C16CF4
	0x03C09004 ADRP X0, 0x4EB000
	0x03C09008 LDR X0, [X0 + 0x608]
	0x03C0900C BL 0x1C16CF4
	0x03C09010 MOVZ W8, 0x1
	0x03C09014 STRB W8, [X20 + 0x1E1]
	0x03C09018 CBZ X19, 0x3C09134
	0x03C0901C LDR W8, [X19 + 0x18]
	0x03C09020 CBZ W8, 0x3C09114
	0x03C09024 ADRP X21, 0x4EB000
	0x03C09028 LDR X21, [X21 + 0x2A8]
	0x03C0902C LDR X0, [X19 + 0x20]
	0x03C09030 MOV X2, X31
	0x03C09034 LDR X1, [X21]
	0x03C09038 BL 0x321BA08
	0x03C0903C LDR X8, [X19 + 0x18]
	0x03C09040 TBZ X0, 0x0, 0x3C09058
	0x03C09044 CBZ W8, 0x3C09130
	0x03C09048 ADRP X9, 0x4EA000
	0x03C0904C LDR X9, [X9 + 0xDE0]
	0x03C09050 LDR X9, [X9]
	0x03C09054 STR X9, [X19 + 0x20]
	0x03C09058 SUB W9, W8, 0x1
	0x03C0905C CMP W9, 0x2
	0x03C09060 B.LT 0x3C09114
	0x03C09064 ADRP X23, 0x512000
	0x03C09068 ADRP X24, 0x4EB000
	0x03C0906C ADRP X25, 0x4EA000
	0x03C09070 LDR X23, [X23 + 0xA68]
	0x03C09074 LDR X24, [X24 + 0x608]
	0x03C09078 LDR X25, [X25 + 0xDE0]
	0x03C0907C MOV X22, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7DD000
	005 Move W8, [X20+476]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x514000
	012 Move X0, [X0+2664]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+476], W8
	016 Compare X19, 0
	017 JumpIfEqual {49}
	018 Move W8, [X19+16]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X19
	021 Move W1, W31
	022 Move X2, X31
	023 Call String.get_Chars, X0, X1
	024 And W8, W0, 0xFFFF
	025 NotImplemented "Instruction CMP not yet implemented."
	026 And X8, X0, 0xFFFF
	027 Move W9, 1
	028 NotImplemented "Instruction LSLV not yet implemented."
	029 Move X9, 0x1300
	030 And X31, X8, X9
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move W0, 1
	034 Move X30, [X31+32]
	035 Return X0
	036 Move X8, 0x513000
	037 Move X8, [X8+2664]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Call ExpressionEvaluator.IsOperator, X0
	048 Return X0
	049 Call 0x1C17F20

Method: System.Boolean IsVariable(System.String token)

Disassembly:
	0x03C093D4 MOV X20, X0
	0x03C093D8 BL 0x33BDD8C
	0x03C093DC ADRP X8, 0xFFFFFFFFFCEE3000
	0x03C093E0 LDR V0, [X8 + 0x74]
	0x03C093E4 MOV X0, X19
	0x03C093E8 MOV X2, X20
	0x03C093EC STR V0, [X20 + 0x1]
	0x03C093F0 LDR X1, [X29]
	0x03C093F4 LDR X3, [X23]
	0x03C093F8 BL 0x2AA5098
	0x03C093FC LDR X0, [X22]
	0x03C09400 BL 0x1C16F10
	0x03C09404 MOV X1, X31
	0x03C09408 MOV X20, X0
	0x03C0940C BL 0x33BDD8C
	0x03C09410 ADRP X8, 0xFFFFFFFFFCEE3000
	0x03C09414 LDR V0, [X8 + 0x35]
	0x03C09418 MOV X0, X19
	0x03C0941C MOV X2, X20
	0x03C09420 STR V0, [X20 + 0x1]
	0x03C09424 LDR X1, [X28]
	0x03C09428 LDR X3, [X23]
	0x03C0942C BL 0x2AA5098
	0x03C09430 LDR X0, [X22]
	0x03C09434 BL 0x1C16F10
	0x03C09438 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {23}
	004 Move W8, [X0+16]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W1, W31
	007 Move X2, X31
	008 Call String.get_Chars, X0, X1
	009 And W9, W0, 0xFFFF
	010 Move W8, W0
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W0, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 And W8, W8, 0xFFFF
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSET not yet implemented."
	019 Or W0, W9, W8
	020 Move W0, W31
	021 Move X30, [X31+16]
	022 Return X0
	023 Call 0x1C17F20

Method: System.Boolean IsDelayedFunction(System.String token)

Disassembly:
	0x03C0983C LDR X0, [X20]
	0x03C09840 BL 0x1C16F10
	0x03C09844 MOV X1, X31
	0x03C09848 MOV X19, X0
	0x03C0984C BL 0x33BDD8C
	0x03C09850 LDR X8, [X20]
	0x03C09854 LDR X8, [X8 + 0xB8]
	0x03C09858 STR X19, [X8]
	0x03C0985C LDP X20, X19, [X31 + 0x10]
	0x03C09860 LDR X30, [X31], #0x20
	0x03C09864 RET
	0x03C09868 MOV X1, X31
	0x03C0986C B 0x33BDD8C
	0x03C09870 STP X30, X21, [X31 - 0x20]!
	0x03C09874 STP X20, X19, [X31 + 0x10]
	0x03C09878 ADRP X21, 0x7DB000
	0x03C0987C ADRP X20, 0x512000
	0x03C09880 LDRB W8, [X21 + 0x1E6]
	0x03C09884 LDR X20, [X20 + 0xA68]
	0x03C09888 MOV X19, X1
	0x03C0988C TBNZ X8, 0x0, 0x3C098A4
	0x03C09890 ADRP X0, 0x512000
	0x03C09894 LDR X0, [X0 + 0xA68]
	0x03C09898 BL 0x1C16CF4
	0x03C0989C MOVZ W8, 0x1
	0x03C098A0 STRB W8, [X21 + 0x1E6]
	0x03C098A4 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7DC000
	006 Move X21, 0x513000
	007 Move W8, [X20+477]
	008 Move X21, [X21+2664]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x513000
	015 Move X0, [X0+2664]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+477], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Call ExpressionEvaluator.TokenToOperator, X0
	026 Compare X0, 0
	027 JumpIfEqual {32}
	028 Move W8, [X0+16]
	029 And W8, W8, 0xFFFFFFFE
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Boolean IsOperator(System.String token)

Disassembly:
	0x03C08EB4 CBNZ W9, 0x3C08EC0
	0x03C08EB8 MOV X0, X8
	0x03C08EBC BL 0x1C16DFC
	0x03C08EC0 MOV X0, X20
	0x03C08EC4 BL 0x3C07EB4
	0x03C08EC8 TBZ X0, 0x0, 0x3C08EE4
	0x03C08ECC LDRH W1, [X31 + 0xC]
	0x03C08ED0 MOV X0, X19
	0x03C08ED4 MOV X2, X31
	0x03C08ED8 BL 0x322BC38
	0x03C08EDC MOV X19, X0
	0x03C08EE0 CBZ X0, 0x3C08FB8
	0x03C08EE4 LDR W8, [X19 + 0x10]
	0x03C08EE8 CMP W8, 0x2
	0x03C08EEC B.LT 0x3C08FA4
	0x03C08EF0 MOVZ W1, 0x1
	0x03C08EF4 MOV X0, X19
	0x03C08EF8 MOV X2, X31
	0x03C08EFC BL 0x3222A1C
	0x03C08F00 AND W8, W0, 0xFFFF
	0x03C08F04 CMP W8, 0x3D
	0x03C08F08 B.NE 0x3C08FA4
	0x03C08F0C MOV X0, X19
	0x03C08F10 MOV W1, W31
	0x03C08F14 MOV X2, X31
	0x03C08F18 BL 0x3222A1C
	0x03C08F1C MOV W20, W0
	0x03C08F20 MOVZ W1, 0x2
	0x03C08F24 MOV X0, X19
	0x03C08F28 MOV X2, X31
	0x03C08F2C BL 0x322B484
	0x03C08F30 AND W8, W20, 0xFFFF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7DD000
	006 Move X20, 0x514000
	007 Move W8, [X21+478]
	008 Move X20, [X20+2664]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x557000
	015 Move X0, [X0+3040]
	016 Call 0x1C17CF4
	017 Move X0, 0x514000
	018 Move X0, [X0+2664]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+478], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8+16]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x557000
	033 Move X8, [X8+3040]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	041 Return X0
	042 Call 0x1C17F20

Method: UnityEngine.ExpressionEvaluator/Operator TokenToOperator(System.String token)

Disassembly:
	0x03C08F34 SUB W8, W8, 0x2A
	0x03C08F38 CMP W8, 0x5
	0x03C08F3C B.HI 0x3C08FA4
	0x03C08F40 ADRP X9, 0xFFFFFFFFFCF8F000
	0x03C08F44 ADD X9, X9, 0xDC3
	0x03C08F48 ADR X10, 0x14
	0x03C08F4C LDRB W11, [X9, X8, LSL]
	0x03C08F50 ADD X10, X10, X11, 0x2, LSL
	0x03C08F54 MOV X1, X0
	0x03C08F58 BR X10
	0x03C08F5C ADRP X8, 0x556000
	0x03C08F60 LDR X8, [X8 + 0xC08]
	0x03C08F64 B 0x3C08F88
	0x03C08F68 ADRP X8, 0x556000
	0x03C08F6C LDR X8, [X8 + 0xC20]
	0x03C08F70 B 0x3C08F88
	0x03C08F74 ADRP X8, 0x556000
	0x03C08F78 LDR X8, [X8 + 0xC10]
	0x03C08F7C B 0x3C08F88
	0x03C08F80 ADRP X8, 0x556000
	0x03C08F84 LDR X8, [X8 + 0xC18]
	0x03C08F88 ADRP X9, 0x4EC000
	0x03C08F8C LDR X9, [X9 + 0x608]
	0x03C08F90 LDR X0, [X8]
	0x03C08F94 MOV X3, X31
	0x03C08F98 LDR X2, [X9]
	0x03C08F9C BL 0x32274B8
	0x03C08FA0 MOV X19, X0
	0x03C08FA4 MOV X0, X19
	0x03C08FA8 LDP X20, X19, [X31 + 0x20]
	0x03C08FAC LDP X30, X21, [X31 + 0x10]
	0x03C08FB0 ADD X31, X31, 0x30
	0x03C08FB4 RET
	0x03C08FB8 BL 0x1C16F20
	0x03C08FBC STP X30, X27, [X31 - 0x50]!
	0x03C08FC0 STP X26, X25, [X31 + 0x10]
	0x03C08FC4 STP X24, X23, [X31 + 0x20]
	0x03C08FC8 STP X22, X21, [X31 + 0x30]
	0x03C08FCC STP X20, X19, [X31 + 0x40]
	0x03C08FD0 ADRP X20, 0x7DC000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7DD000
	007 Move X20, 0x514000
	008 Move W8, [X21+479]
	009 Move X20, [X20+2664]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x557000
	016 Move X0, [X0+3048]
	017 Call 0x1C17CF4
	018 Move X0, 0x514000
	019 Move X0, [X0+2664]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+479], W8
	023 Move X0, [X20]
	024 Move [X31+8], X31
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move X0, [X8+16]
	032 Compare X0, 0
	033 JumpIfEqual {49}
	034 Move X8, 0x557000
	035 Move X8, [X8+3048]
	036 Add X2, X31, 8
	037 Move X1, X19
	038 Move X3, [X8]
	039 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	040 Move X8, [X31+8]
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move X21, [X31+24]
	045 And W31, W0, 1
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Add X31, X31, 48
	048 Return X0
	049 Call 0x1C17F20

Method: System.String PreFormatExpression(System.String expression)

Disassembly:
	0x03C09DCC FCSEL S5, S5, S2, MI
	0x03C09DD0 FCMP S4, S2
	0x00000000 INVALID
	0x03C09DD8 FCSEL S2, S4, S2, GT
	0x03C09DDC FMOV S16, 0.5
	0x03C09DE0 FSUB V0.2S, V0.2S, V1.2S
	0x03C09DE4 FSUB S2, S2, S5
	0x00000000 INVALID
	0x03C09DEC FMUL S2, S2, S16
	0x03C09DF0 STUR D0, [X0 + 0xC]
	0x03C09DF4 FADD V0.2S, V1.2S, V0.2S
	0x03C09DF8 FADD S1, S5, S2
	0x03C09DFC STR S2, [X0 + 0x14]
	0x03C09E00 STR D0, [X0]
	0x03C09E04 STR S1, [X0 + 0x8]
	0x03C09E08 RET
	0x03C09E0C LDR V1, [X1 + 0x8]
	0x03C09E10 LDR V3, [X1 + 0x14]
	0x03C09E14 LDR V5, [X0 + 0x8]
	0x03C09E18 LDR V7, [X0 + 0x14]
	0x03C09E1C LDR V0, [X1]
	0x03C09E20 LDUR V2, [X1 + 0xC]
	0x03C09E24 LDR V4, [X0]
	0x03C09E28 LDUR V6, [X0 + 0xC]
	0x03C09E2C FSUB S1, S1, S3
	0x03C09E30 FSUB S3, S5, S7
	0x03C09E34 FSUB V0.2S, V0.2S, V2.2S
	0x03C09E38 FSUB V2.2S, V4.2S, V6.2S
	0x03C09E3C FADD V4.2S, V4.2S, V6.2S
	0x03C09E40 FADD S5, S5, S7
	0x03C09E44 FCMP S3, S1
	0x00000000 INVALID
	0x00000000 INVALID
	0x03C09E50 FCSEL S3, S3, S1, MI
	0x03C09E54 FCMP S5, S1
	0x00000000 INVALID
	0x00000000 INVALID
	0x03C09E60 FCSEL S1, S5, S1, GT
	0x03C09E64 MOVI V16.2S, 0x3F, 0x18
	0x03C09E68 FMOV S17, 0.5
	0x03C09E6C FSUB V0.2S, V0.2S, V2.2S
	0x03C09E70 FSUB S1, S1, S3
	0x00000000 INVALID
	0x03C09E78 FMUL S1, S1, S17
	0x03C09E7C FADD V2.2S, V2.2S, V0.2S
	0x03C09E80 FADD S3, S3, S1
	0x03C09E84 STUR D0, [X0 + 0xC]
	0x03C09E88 STR S1, [X0 + 0x14]
	0x03C09E8C STR D2, [X0]
	0x03C09E90 STR S3, [X0 + 0x8]
	0x03C09E94 FSUB V4.2S, V2.2S, V0.2S
	0x03C09E98 FADD V0.2S, V0.2S, V2.2S
	0x03C09E9C LDR V2, [X1]
	0x03C09EA0 LDR V5, [X1 + 0x8]
	0x03C09EA4 LDUR V6, [X1 + 0xC]
	0x03C09EA8 LDR V7, [X1 + 0x14]
	0x03C09EAC FSUB S18, S3, S1
	0x03C09EB0 FADD S1, S1, S3
	0x03C09EB4 FADD V2.2S, V2.2S, V6.2S
	0x03C09EB8 FADD S3, S5, S7
	0x00000000 INVALID
	0x03C09EC0 FCMP S18, S3
	0x00000000 INVALID
	0x00000000 INVALID
	0x03C09ECC FCSEL S5, S18, S3, MI
	0x03C09ED0 FCMP S1, S3
	0x00000000 INVALID
	0x03C09ED8 FCSEL S1, S1, S3, GT
	0x03C09EDC FSUB V0.2S, V0.2S, V4.2S
	0x03C09EE0 FSUB S1, S1, S5
	0x00000000 INVALID
	0x03C09EE8 FMUL S1, S1, S17
	0x03C09EEC STUR D0, [X0 + 0xC]
	0x03C09EF0 FADD V0.2S, V4.2S, V0.2S
	0x03C09EF4 STR S1, [X0 + 0x14]
	0x03C09EF8 FADD S1, S5, S1
	0x03C09EFC STR D0, [X0]
	0x03C09F00 STR S1, [X0 + 0x8]
	0x03C09F04 RET
	0x03C09F08 LDUR V2, [X0 + 0xC]
	0x03C09F0C LDR V3, [X0 + 0x14]
	0x03C09F10 FMOV S1, 0.5
	0x03C09F14 FMUL S0, S0, S1
	0x03C09F18 UNIMPLEMENTED
	0x03C09F1C FADD V1.2S, V1.2S, V2.2S
	0x03C09F20 FADD S0, S0, S3
	0x03C09F24 STUR D1, [X0 + 0xC]
	0x03C09F28 STR S0, [X0 + 0x14]
	0x03C09F2C RET
	0x03C09F30 LDUR V3, [X0 + 0xC]
	0x03C09F34 LDR V4, [X0 + 0x14]
	0x03C09F38 MOVI V5.2S, 0x3F, 0x18
	0x03C09F3C FMOV S6, 0.5
	0x03C09F40 MOV V0.S[1], V1.S[0]
	0x03C09F44 FMUL S1, S2, S6
	0x00000000 INVALID
	0x03C09F4C FADD V0.2S, V0.2S, V3.2S
	0x03C09F50 FADD S1, S1, S4
	0x03C09F54 STUR D0, [X0 + 0xC]
	0x03C09F58 STR S1, [X0 + 0x14]
	0x03C09F5C RET
	0x03C09F60 LDR V0, [X0]
	0x03C09F64 LDR V1, [X0 + 0xC]
	0x03C09F68 LDR V2, [X1]
	0x03C09F6C LDR V4, [X1 + 0xC]
	0x03C09F70 FSUB S3, S0, S1
	0x03C09F74 FADD S5, S2, S4
	0x03C09F78 FCMP S3, S5
	0x03C09F7C B.LS 0x3C09F88
	0x03C09F80 MOV W0, W31
	0x03C09F84 RET
	0x03C09F88 LDR V3, [X0 + 0x4]
	0x03C09F8C LDR V5, [X0 + 0x10]
	0x03C09F90 LDR V6, [X1 + 0x4]
	0x03C09F94 LDR V7, [X1 + 0x10]
	0x03C09F98 FADD S16, S3, S5
	0x03C09F9C FSUB S17, S6, S7
	0x03C09FA0 FCMP S16, S17
	0x03C09FA4 B.LT 0x3C09F80
	0x03C09FA8 FADD S0, S0, S1
	0x03C09FAC FSUB S1, S2, S4
	0x03C09FB0 FCMP S0, S1
	0x03C09FB4 B.LT 0x3C09F80
	0x03C09FB8 FADD S0, S6, S7

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7DC000
	007 Move W8, [X20+480]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X0, 0x4ED000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move X0, 0x513000
	017 Move X0, [X0+2664]
	018 Call 0x1C17CF4
	019 Move X0, 0x556000
	020 Move X0, [X0+3080]
	021 Call 0x1C17CF4
	022 Move X0, 0x556000
	023 Move X0, [X0+3088]
	024 Call 0x1C17CF4
	025 Move X0, 0x556000
	026 Move X0, [X0+3096]
	027 Call 0x1C17CF4
	028 Move X0, 0x4EC000
	029 Move X0, [X0+1544]
	030 Call 0x1C17CF4
	031 Move X0, 0x556000
	032 Move X0, [X0+3104]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+480], W8
	036 Compare X19, 0
	037 JumpIfEqual {134}
	038 Move X0, X19
	039 Move X1, X31
	040 Call String.Trim, X0
	041 Compare X0, 0
	042 JumpIfEqual {134}
	043 Move W8, [X0+16]
	044 Move X19, X0
	045 Compare W8, 0
	046 JumpIfEqual {127}
	047 Move X21, 0x4ED000
	048 Move X20, 0x513000
	049 Move X21, [X21+368]
	050 Move X20, [X20+2664]
	051 Subtract W1, W8, 1
	052 Move X0, X19
	053 Move X2, X31
	054 Call String.get_Chars, X0, X1
	055 Move X8, [X21]
	056 NotImplemented "Instruction STRH not yet implemented."
	057 Move W9, [X8+224]
	058 Compare W9, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Add X0, X31, 12
	063 Move X1, X31
	064 Call Char.ToString, X0
	065 Move X8, [X20]
	066 Move X20, X0
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Call ExpressionEvaluator.IsOperator, X0
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {85}
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X0, X19
	080 Move X2, X31
	081 Call String.TrimEnd, X0, X1
	082 Move X19, X0
	083 Compare X0, 0
	084 JumpIfEqual {134}
	085 Move W8, [X19+16]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W1, 1
	088 Move X0, X19
	089 Move X2, X31
	090 Call String.get_Chars, X0, X1
	091 And W8, W0, 0xFFFF
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X19
	094 Move W1, W31
	095 Move X2, X31
	096 Call String.get_Chars, X0, X1
	097 Move W20, W0
	098 Move W1, 2
	099 Move X0, X19
	100 Move X2, X31
	101 Call String.Substring, X0, X1
	102 And W8, W20, 0xFFFF
	103 Subtract W8, W8, 42
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X9, -50794496
	106 Add X9, X9, 3523
	107 NotImplemented "Instruction ADR not yet implemented."
	108 Move W11, [X9]
	109 Add X10, X10, X11
	110 Move X1, X0
	111 CallNoReturn X10
	112 Move X8, 0x556000
	113 Move X8, [X8+3080]
	114 Move X8, 0x556000
	115 Move X8, [X8+3104]
	116 Move X8, 0x556000
	117 Move X8, [X8+3088]
	118 Move X8, 0x556000
	119 Move X8, [X8+3096]
	120 Move X9, 0x4EC000
	121 Move X9, [X9+1544]
	122 Move X0, [X8]
	123 Move X3, X31
	124 Move X2, [X9]
	125 Call String.Concat, X0, X1, X2
	126 Move X19, X0
	127 Move X0, X19
	128 Move X20, [X31+32]
	129 Move X19, [X31+40]
	130 Move X30, [X31+16]
	131 Move X21, [X31+24]
	132 Add X31, X31, 48
	133 Return X0
	134 Call 0x1C17F20

Method: System.String[] FixUnaryOperators(System.String[] tokens)

Disassembly:
	0x03C09FBC FSUB S1, S3, S5
	0x03C09FC0 FCMP S1, S0
	0x03C09FC4 B.HI 0x3C09F80
	0x03C09FC8 LDR V0, [X0 + 0x8]
	0x03C09FCC LDR V1, [X1 + 0x8]
	0x03C09FD0 LDR V2, [X1 + 0x14]
	0x03C09FD4 LDR V3, [X0 + 0x14]
	0x03C09FD8 FSUB S4, S1, S2
	0x03C09FDC FADD S5, S0, S3
	0x03C09FE0 FADD S1, S1, S2
	0x03C09FE4 FSUB S0, S0, S3
	0x03C09FE8 FCMP S0, S1
	0x03C09FEC CSET W8, LS
	0x03C09FF0 FCMP S5, S4
	0x03C09FF4 CSET W9, GE
	0x03C09FF8 AND W0, W8, W9, 0x0
	0x03C09FFC RET
	0x03C0A000 MOV X1, X31
	0x03C0A004 MOV X2, X31
	0x03C0A008 MOV X3, X31
	0x03C0A00C B 0x243085C
	0x03C0A010 STP X30, X23, [X31 - 0x30]!
	0x03C0A014 STP X22, X21, [X31 + 0x10]
	0x03C0A018 STP X20, X19, [X31 + 0x20]
	0x03C0A01C ADRP X23, 0x7DA000
	0x03C0A020 ADRP X22, 0x4F0000
	0x03C0A024 LDRB W8, [X23 + 0x1E8]
	0x03C0A028 LDR X22, [X22 + 0xE78]
	0x03C0A02C MOV X20, X2
	0x03C0A030 MOV X21, X1
	0x03C0A034 MOV X19, X0
	0x03C0A038 TBNZ X8, 0x0, 0x3C0A074
	0x03C0A03C ADRP X0, 0x4EB000
	0x03C0A040 LDR X0, [X0 + 0xC48]
	0x03C0A044 BL 0x1C16CF4
	0x03C0A048 ADRP X0, 0x4E9000
	0x03C0A04C LDR X0, [X0 + 0x9D0]
	0x03C0A050 BL 0x1C16CF4
	0x03C0A054 ADRP X0, 0x4F0000
	0x03C0A058 LDR X0, [X0 + 0xE78]
	0x03C0A05C BL 0x1C16CF4
	0x03C0A060 ADRP X0, 0x512000
	0x03C0A064 LDR X0, [X0 + 0xD20]
	0x03C0A068 BL 0x1C16CF4
	0x03C0A06C MOVZ W8, 0x1
	0x03C0A070 STRB W8, [X23 + 0x1E8]
	0x03C0A074 MOV X0, X21
	0x03C0A078 MOV X1, X31
	0x03C0A07C BL 0x32277A8
	0x03C0A080 LDR X8, [X22]
	0x03C0A084 ANDS W31, W0, 0x1
	0x03C0A088 CSEL X21, X8, X21, NE
	0x03C0A08C CBNZ X20, 0x3C0A0C8
	0x03C0A090 ADRP X8, 0x4EB000
	0x03C0A094 LDR X8, [X8 + 0xC48]
	0x03C0A098 LDR X0, [X8]
	0x03C0A09C LDR W8, [X0 + 0xE0]
	0x03C0A0A0 CBNZ W8, 0x3C0A0A8
	0x03C0A0A4 BL 0x1C16DFC
	0x03C0A0A8 MOV X0, X31
	0x03C0A0AC BL 0x3338524
	0x03C0A0B0 CBZ X0, 0x3C0A188
	0x03C0A0B4 LDR X8, [X0]
	0x03C0A0B8 LDR X9, [X8 + 0x218]
	0x03C0A0BC LDR X1, [X8 + 0x220]
	0x03C0A0C0 BLR X9
	0x03C0A0C4 MOV X20, X0
	0x03C0A0C8 ADRP X8, 0x4E9000
	0x03C0A0CC LDR X8, [X8 + 0x9D0]
	0x03C0A0D0 MOVZ W1, 0x2
	0x03C0A0D4 LDR X0, [X8]
	0x03C0A0D8 BL 0x1C16D6C
	0x03C0A0DC MOV X22, X0
	0x03C0A0E0 MOV X0, X19
	0x03C0A0E4 MOV X1, X21
	0x03C0A0E8 MOV X2, X20
	0x03C0A0EC MOV X3, X31
	0x03C0A0F0 BL 0x2430694
	0x03C0A0F4 CBZ X22, 0x3C0A188
	0x03C0A0F8 MOV X23, X0
	0x03C0A0FC CBZ X0, 0x3C0A114
	0x03C0A100 LDR X8, [X22]
	0x03C0A104 MOV X0, X23
	0x03C0A108 LDR X1, [X8 + 0x40]
	0x03C0A10C BL 0x1C16E00
	0x03C0A110 CBZ X0, 0x3C0A18C
	0x03C0A114 LDR W8, [X22 + 0x18]
	0x03C0A118 CBZ W8, 0x3C0A184
	0x03C0A11C ADD X0, X19, 0xC
	0x03C0A120 MOV X1, X21
	0x03C0A124 MOV X2, X20
	0x03C0A128 MOV X3, X31
	0x03C0A12C STR X23, [X22 + 0x20]
	0x03C0A130 BL 0x2430694
	0x03C0A134 MOV X19, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x7DC000
	012 Move W8, [X20+481]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x513000
	019 Move X0, [X0+2664]
	020 Call 0x1C17CF4
	021 Move X0, 0x4EC000
	022 Move X0, [X0+680]
	023 Call 0x1C17CF4
	024 Move X0, 0x4EB000
	025 Move X0, [X0+3552]
	026 Call 0x1C17CF4
	027 Move X0, 0x4EB000
	028 Move X0, [X0+1544]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+481], W8
	032 Compare X19, 0
	033 JumpIfEqual {120}
	034 Move W8, [X19+24]
	035 Compare W8, 0
	036 JumpIfEqual {107}
	037 Move X21, 0x4EB000
	038 Move X21, [X21+680]
	039 Move X0, [X19+32]
	040 Move X2, X31
	041 Move X1, [X21]
	042 Call String.op_Equality, X0, X1
	043 Move X8, [X19+24]
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {54}
	048 Compare W8, 0
	049 JumpIfEqual {119}
	050 Move X9, 0x4EA000
	051 Move X9, [X9+3552]
	052 Move X9, [X9]
	053 Move [X19+32], X9
	054 Subtract W9, W8, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X23, 0x512000
	057 Move X24, 0x4EB000
	058 Move X25, 0x4EA000
	059 Move X23, [X23+2664]
	060 Move X24, [X24+1544]
	061 Move X25, [X25+3552]
	062 Move X22, X31
	063 And X8, X8, 0
	064 Add X26, X22, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 And X8, X8, 0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X27, X19, X22
	069 Move X20, [X27+32]
	070 Move X0, [X27+40]
	071 Move X1, [X21]
	072 Move X2, X31
	073 Call String.op_Equality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {101}
	078 Move X0, [X23]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X20
	084 Call ExpressionEvaluator.IsCommand, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {101}
	089 Move X1, [X24]
	090 Move X0, X20
	091 Move X2, X31
	092 Call String.op_Inequality, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {101}
	097 Move W8, [X19+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X25]
	100 Move [X27+40], X8
	101 Move X8, [X19+24]
	102 Add X9, X22, 2
	103 Add X22, X22, 1
	104 Subtract W10, W8, 1
	105 NotImplemented "Instruction CMP not yet implemented."
	106 And X8, X8, 0
	107 Move X0, X19
	108 Move X20, [X31+64]
	109 Move X19, [X31+72]
	110 Move X22, [X31+48]
	111 Move X21, [X31+56]
	112 Move X24, [X31+32]
	113 Move X23, [X31+40]
	114 Move X26, [X31+16]
	115 Move X25, [X31+24]
	116 Move X30, [X31+80]
	117 Move X27, [X31+88]
	118 Return X0
	119 Call 0x1C17F28
	120 Call 0x1C17F20

Method: System.Double EvaluateOp(System.Double[] values, UnityEngine.ExpressionEvaluator/Op op, System.Int32 index, System.Int32 count)

Disassembly:
	0x03C09080 AND X8, X8, 0x0
	0x03C09084 ADD X26, X22, 0x1
	0x03C09088 CMP X26, W8, UXTW
	0x03C0908C B.CS 0x3C09130
	0x03C09090 AND X8, X8, 0x0
	0x03C09094 CMP X22, X8
	0x03C09098 B.CS 0x3C09130
	0x03C0909C ADD X27, X19, X22, 0x3, LSL
	0x03C090A0 LDP X20, X0, [X27 + 0x20]
	0x03C090A4 LDR X1, [X21]
	0x03C090A8 MOV X2, X31
	0x03C090AC BL 0x321BA08
	0x03C090B0 TBZ X0, 0x0, 0x3C090F8
	0x03C090B4 LDR X0, [X23]
	0x03C090B8 LDR W8, [X0 + 0xE0]
	0x03C090BC CBNZ W8, 0x3C090C4
	0x03C090C0 BL 0x1C16DFC
	0x03C090C4 MOV X0, X20
	0x03C090C8 BL 0x3C07FD4
	0x03C090CC TBZ X0, 0x0, 0x3C090F8
	0x03C090D0 LDR X1, [X24]
	0x03C090D4 MOV X0, X20
	0x03C090D8 MOV X2, X31
	0x03C090DC BL 0x3226EF8
	0x03C090E0 TBZ X0, 0x0, 0x3C090F8
	0x03C090E4 LDR W8, [X19 + 0x18]
	0x03C090E8 CMP X26, X8
	0x03C090EC B.CS 0x3C09130
	0x03C090F0 LDR X8, [X25]
	0x03C090F4 STR X8, [X27 + 0x28]
	0x03C090F8 LDR X8, [X19 + 0x18]
	0x03C090FC ADD X9, X22, 0x2
	0x03C09100 ADD X22, X22, 0x1
	0x03C09104 SUB W10, W8, 0x1
	0x03C09108 CMP X9, W10, SXTW
	0x03C0910C AND X8, X8, 0x0
	0x03C09110 B.LT 0x3C09084
	0x03C09114 MOV X0, X19
	0x03C09118 LDP X20, X19, [X31 + 0x40]
	0x03C0911C LDP X22, X21, [X31 + 0x30]
	0x03C09120 LDP X24, X23, [X31 + 0x20]
	0x03C09124 LDP X26, X25, [X31 + 0x10]
	0x03C09128 LDP X30, X27, [X31], #0x50
	0x03C0912C RET
	0x03C09130 BL 0x1C16F28
	0x03C09134 BL 0x1C16F20
	0x03C09138 LDP X9, X8, [X0]
	0x03C0913C MOVZ X10, 0x7F2D
	0x03C09140 MOVK X10, 0x4C950000
	0x03C09144 MOVK X10, 0xF42D
	0x03C09148 MOVK X10, 0x58510000
	0x03C0914C MADD X9, X8, X10, X9
	0x03C09150 UBFM X10, X8, 0x2D, 0x3F
	0x03C09154 UBFM X11, X8, 0x1B, 0x3F
	0x03C09158 EOR W10, W10, W11, 0x0
	0x03C0915C UBFM X8, X8, 0x3B, 0x3F
	0x03C09160 RORV W8, W10, W8
	0x03C09164 STR X9, [X0 + 0x8]
	0x03C09168 MOV W0, W8
	0x03C0916C RET
	0x03C09170 STP X29, X30, [X31 - 0x60]!
	0x03C09174 STP X28, X27, [X31 + 0x10]
	0x03C09178 STP X26, X25, [X31 + 0x20]
	0x03C0917C STP X24, X23, [X31 + 0x30]
	0x03C09180 STP X22, X21, [X31 + 0x40]
	0x03C09184 STP X20, X19, [X31 + 0x50]
	0x03C09188 ADRP X21, 0x7DB000
	0x03C0918C ADRP X23, 0x512000
	0x03C09190 ADRP X20, 0x555000
	0x03C09194 ADRP X19, 0x555000
	0x03C09198 ADRP X22, 0x555000
	0x03C0919C LDRB W8, [X21 + 0x1E3]
	0x03C091A0 LDR X23, [X23 + 0xA68]
	0x03C091A4 LDR X20, [X20 + 0xC28]
	0x03C091A8 LDR X19, [X19 + 0xC30]
	0x03C091AC LDR X22, [X22 + 0xC38]
	0x03C091B0 TBNZ X8, 0x0, 0x3C092B8
	0x03C091B4 ADRP X0, 0x555000
	0x03C091B8 LDR X0, [X0 + 0xC40]
	0x03C091BC BL 0x1C16CF4
	0x03C091C0 ADRP X0, 0x555000
	0x03C091C4 LDR X0, [X0 + 0xC30]
	0x03C091C8 BL 0x1C16CF4
	0x03C091CC ADRP X0, 0x555000
	0x03C091D0 LDR X0, [X0 + 0xC28]
	0x03C091D4 BL 0x1C16CF4
	0x03C091D8 ADRP X0, 0x512000
	0x03C091DC LDR X0, [X0 + 0xA68]
	0x03C091E0 BL 0x1C16CF4
	0x03C091E4 ADRP X0, 0x555000
	0x03C091E8 LDR X0, [X0 + 0xC38]
	0x03C091EC BL 0x1C16CF4
	0x03C091F0 ADRP X0, 0x555000
	0x03C091F4 LDR X0, [X0 + 0xC48]
	0x03C091F8 BL 0x1C16CF4
	0x03C091FC ADRP X0, 0x4EF000
	0x03C09200 LDR X0, [X0 + 0x3F8]
	0x03C09204 BL 0x1C16CF4
	0x03C09208 ADRP X0, 0x555000
	0x03C0920C LDR X0, [X0 + 0xC50]
	0x03C09210 BL 0x1C16CF4
	0x03C09214 ADRP X0, 0x51F000
	0x03C09218 LDR X0, [X0 + 0x9F0]
	0x03C0921C BL 0x1C16CF4
	0x03C09220 ADRP X0, 0x4EB000
	0x03C09224 LDR X0, [X0 + 0x2A8]
	0x03C09228 BL 0x1C16CF4
	0x03C0922C ADRP X0, 0x555000
	0x03C09230 LDR X0, [X0 + 0xC58]
	0x03C09234 BL 0x1C16CF4
	0x03C09238 ADRP X0, 0x4EA000
	0x03C0923C LDR X0, [X0 + 0xDE0]
	0x03C09240 BL 0x1C16CF4
	0x03C09244 ADRP X0, 0x514000
	0x03C09248 LDR X0, [X0 + 0xB08]
	0x03C0924C BL 0x1C16CF4
	0x03C09250 ADRP X0, 0x555000
	0x03C09254 LDR X0, [X0 + 0xC60]
	0x03C09258 BL 0x1C16CF4
	0x03C0925C ADRP X0, 0x530000
	0x03C09260 LDR X0, [X0 + 0xC20]
	0x03C09264 BL 0x1C16CF4
	0x03C09268 ADRP X0, 0x4EB000
	0x03C0926C LDR X0, [X0 + 0xEC8]
	0x03C09270 BL 0x1C16CF4
	0x03C09274 ADRP X0, 0x555000
	0x03C09278 LDR X0, [X0 + 0xC68]
	0x03C0927C BL 0x1C16CF4
	0x03C09280 ADRP X0, 0x555000
	0x03C09284 LDR X0, [X0 + 0xC70]
	0x03C09288 BL 0x1C16CF4
	0x03C0928C ADRP X0, 0x51C000
	0x03C09290 LDR X0, [X0 + 0xEF0]
	0x03C09294 BL 0x1C16CF4
	0x03C09298 ADRP X0, 0x555000
	0x03C0929C LDR X0, [X0 + 0xC78]
	0x03C092A0 BL 0x1C16CF4
	0x03C092A4 ADRP X0, 0x555000
	0x03C092A8 LDR X0, [X0 + 0xC80]
	0x03C092AC BL 0x1C16CF4
	0x03C092B0 MOVZ W8, 0x1
	0x03C092B4 STRB W8, [X21 + 0x1E3]
	0x03C092B8 LDR X8, [X23]
	0x03C092BC ADRP X9, 0xFFFFFFFFFCEE2000
	0x03C092C0 LDR V0, [X9 + 0x40]
	0x03C092C4 LDR X8, [X8 + 0xB8]
	0x03C092C8 STR V0, [X8]
	0x03C092CC LDR X0, [X20]
	0x03C092D0 BL 0x1C16F10
	0x03C092D4 LDR X1, [X19]
	0x03C092D8 MOV X19, X0
	0x03C092DC BL 0x2AA4804
	0x03C092E0 LDR X0, [X22]
	0x03C092E4 BL 0x1C16F10
	0x03C092E8 MOV X1, X31
	0x03C092EC MOV X20, X0
	0x03C092F0 BL 0x33BDD8C
	0x03C092F4 ADRP X8, 0xFFFFFFFFFCEE3000
	0x03C092F8 LDR V0, [X8 + 0xB8]
	0x03C092FC STR V0, [X20 + 0x1]
	0x03C09300 CBZ X19, 0x3C096DC
	0x03C09304 ADRP X8, 0x4EB000
	0x03C09308 ADRP X23, 0x555000
	0x03C0930C LDR X8, [X8 + 0x2A8]
	0x03C09310 LDR X23, [X23 + 0xC40]
	0x03C09314 ADRP X21, 0x4EF000
	0x03C09318 ADRP X24, 0x4EB000
	0x03C0931C ADRP X29, 0x51C000
	0x03C09320 ADRP X28, 0x514000
	0x03C09324 ADRP X27, 0x555000
	0x03C09328 ADRP X26, 0x4EA000
	0x03C0932C ADRP X25, 0x555000
	0x03C09330 LDR X21, [X21 + 0x3F8]
	0x03C09334 LDR X24, [X24 + 0xEC8]
	0x03C09338 LDR X29, [X29 + 0xEF0]
	0x03C0933C LDR X28, [X28 + 0xB08]
	0x03C09340 LDR X27, [X27 + 0xC60]
	0x03C09344 LDR X26, [X26 + 0xDE0]
	0x03C09348 LDR X25, [X25 + 0xC78]
	0x03C0934C LDR X1, [X8]
	0x03C09350 LDR X3, [X23]
	0x03C09354 MOV X0, X19
	0x03C09358 MOV X2, X20
	0x03C0935C BL 0x2AA5098
	0x03C09360 LDR X0, [X22]
	0x03C09364 BL 0x1C16F10
	0x03C09368 MOV X1, X31
	0x03C0936C MOV X20, X0
	0x03C09370 BL 0x33BDD8C
	0x03C09374 ADRP X8, 0xFFFFFFFFFCEE3000
	0x03C09378 LDR V0, [X8 + 0x92]
	0x03C0937C MOV X0, X19
	0x03C09380 MOV X2, X20
	0x03C09384 STR V0, [X20 + 0x1]
	0x03C09388 LDR X1, [X21]
	0x03C0938C LDR X3, [X23]
	0x03C09390 BL 0x2AA5098
	0x03C09394 LDR X0, [X22]
	0x03C09398 BL 0x1C16F10
	0x03C0939C MOV X1, X31
	0x03C093A0 MOV X20, X0
	0x03C093A4 BL 0x33BDD8C
	0x03C093A8 ADRP X8, 0xFFFFFFFFFCEE3000
	0x03C093AC LDR V0, [X8 + 0x34]
	0x03C093B0 MOV X0, X19
	0x03C093B4 MOV X2, X20
	0x03C093B8 STR V0, [X20 + 0x1]
	0x03C093BC LDR X1, [X24]
	0x03C093C0 LDR X3, [X23]
	0x03C093C4 BL 0x2AA5098
	0x03C093C8 LDR X0, [X22]
	0x03C093CC BL 0x1C16F10
	0x03C093D0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x7DC000
	011 Move W8, [X23+482]
	012 Move W20, W3
	013 Move W19, W2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x513000
	021 Move X0, [X0+2664]
	022 Call 0x1C17CF4
	023 Move X0, 0x4EB000
	024 Move X0, [X0+1448]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+482], W8
	028 Compare X22, 0
	029 JumpIfEqual {238}
	030 Move W8, [X22+24]
	031 Move D0, X31
	032 Move D8, X31
	033 Move D9, X31
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move V8, [X22+32]
	036 Move D9, X31
	037 Move V9, [X22+40]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X9, -50794496
	040 Move W8, W21
	041 Add X9, X9, 3507
	042 NotImplemented "Instruction ADR not yet implemented."
	043 Move W11, [X9]
	044 Add X10, X10, X11
	045 CallNoReturn X10
	046 Add D0, D8, D9
	047 Subtract D0, D8, D9
	048 Multiply D0, D8, D9
	049 NotImplemented "Instruction FDIV not yet implemented."
	050 Move V0, V8
	051 Move V1, V9
	052 Call 0x3EB2C10
	053 NotImplemented "Instruction FNEG not yet implemented."
	054 Move X8, 0x4EB000
	055 Move X8, [X8+1448]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move V0, V8
	062 Move V1, V9
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X30, [X31+32]
	068 Move X23, [X31+40]
	069 Move D9, [X31+16]
	070 Move D8, [X31+24]
	071 Move X0, X31
	072 Add X31, X31, 80
	073 Call Math.Pow, V0, V1
	074 Return V0
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Move X8, 0x4EB000
	077 Move X8, [X8+1448]
	078 Move X0, [X8]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 NotImplemented "Instruction FSQRT not yet implemented."
	084 Move X8, 0x4EB000
	085 Move X8, [X8+1448]
	086 Move X0, [X8]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {91}
	090 Call 0x1C17DFC
	091 Move V0, V8
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X22, [X31+48]
	095 Move X21, [X31+56]
	096 Move X30, [X31+32]
	097 Move X23, [X31+40]
	098 Move D9, [X31+16]
	099 Move D8, [X31+24]
	100 Add X31, X31, 80
	101 Call 0x3EB2C30
	102 Return V0
	103 Move X8, 0x4EB000
	104 Move X8, [X8+1448]
	105 Move X0, [X8]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move V0, V8
	111 Move X20, [X31+64]
	112 Move X19, [X31+72]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X30, [X31+32]
	116 Move X23, [X31+40]
	117 Move D9, [X31+16]
	118 Move D8, [X31+24]
	119 Add X31, X31, 80
	120 Call 0x3EB2BF0
	121 Return V0
	122 Move X8, 0x4EB000
	123 Move X8, [X8+1448]
	124 Move X0, [X8]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move V0, V8
	130 Move X20, [X31+64]
	131 Move X19, [X31+72]
	132 Move X22, [X31+48]
	133 Move X21, [X31+56]
	134 Move X30, [X31+32]
	135 Move X23, [X31+40]
	136 Move D9, [X31+16]
	137 Move D8, [X31+24]
	138 Add X31, X31, 80
	139 Call 0x3EB2DD0
	140 Return V0
	141 Move X8, 0x4EB000
	142 Move X8, [X8+1448]
	143 Move X0, [X8]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 NotImplemented "Instruction FRINTM not yet implemented."
	149 Move X8, 0x4EB000
	150 Move X8, [X8+1448]
	151 Move X0, [X8]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 NotImplemented "Instruction FRINTP not yet implemented."
	157 Move X8, 0x4EB000
	158 Move X8, [X8+1448]
	159 Move X0, [X8]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Add X0, X31, 8
	165 Move V0, V8
	166 Call 0x3EB2C00
	167 NotImplemented "Instruction FCMP not yet implemented."
	168 Move D1, -0.5
	169 NotImplemented "Instruction FCMP not yet implemented."
	170 Move V0, [X31+8]
	171 Move D1, -1
	172 Move X19, 0x513000
	173 Move X19, [X19+2664]
	174 Move X0, [X19]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {180}
	178 Call 0x1C17DFC
	179 Move X0, [X19]
	180 Move X8, [X0+184]
	181 Move X11, -51486720
	182 Move V0, [X11+848]
	183 Move X11, 0x7F2D
	184 Move X10, [X8]
	185 Move X9, [X8+8]
	186 NotImplemented "Instruction MOVK not yet implemented."
	187 NotImplemented "Instruction MOVK not yet implemented."
	188 NotImplemented "Instruction MOVK not yet implemented."
	189 NotImplemented "Instruction MADD not yet implemented."
	190 Move X11, X9
	191 ShiftRight X11, 45
	192 And X11, X11, 0x7FFFFFFF
	193 Move [X8+8], X10
	194 Move X8, X9
	195 ShiftRight X8, 27
	196 And X8, X8, 0x7FFFFFFF
	197 Move X9, X9
	198 ShiftRight X9, 59
	199 And X9, X9, 0x7FFFFFFF
	200 Xor W8, W11, W8
	201 NotImplemented "Instruction RORV not yet implemented."
	202 And W8, W8, 0xFFFFFF
	203 NotImplemented "Instruction UCVTF not yet implemented."
	204 NotImplemented "Instruction FDIV not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CSINC not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move D0, 0.5
	209 Subtract W8, W8, 1
	210 NotImplemented "Instruction SCVTF not yet implemented."
	211 NotImplemented "Instruction SCVTF not yet implemented."
	212 NotImplemented "Instruction FDIV not yet implemented."
	213 Subtract D1, D9, D8
	214 Multiply D0, D1, D0
	215 Add D0, D8, D0
	216 Move D1, 0.5
	217 NotImplemented "Instruction FCMP not yet implemented."
	218 Move V0, [X31+8]
	219 Move D1, 1
	220 NotImplemented "Instruction FCVTZS not yet implemented."
	221 Add D1, D0, D1
	222 And X31, X8, 1
	223 NotImplemented "Instruction FCSEL not yet implemented."
	224 Add D0, D8, D1
	225 NotImplemented "Instruction FRINTP not yet implemented."
	226 Add D0, D8, D1
	227 NotImplemented "Instruction FRINTM not yet implemented."
	228 Move X20, [X31+64]
	229 Move X19, [X31+72]
	230 Move X22, [X31+48]
	231 Move X21, [X31+56]
	232 Move X30, [X31+32]
	233 Move X23, [X31+40]
	234 Move D9, [X31+16]
	235 Move D8, [X31+24]
	236 Add X31, X31, 80
	237 Return V0
	238 Call 0x1C17F20

Method: System.Boolean TryParse(System.String expression, out T result)

Disassembly:
	0x021E0FC0 LDR X8, [X8]
	0x021E0FC4 MOV X0, X8
	0x021E0FC8 BL 0x338C698
	0x021E0FCC MOV X1, X0
	0x021E0FD0 MOV X0, X22
	0x021E0FD4 MOV X2, X31
	0x021E0FD8 BL 0x3395194
	0x021E0FDC TBZ X0, 0x0, 0x21E10B4
	0x021E0FE0 ADRP X8, 0x1F15000
	0x021E0FE4 LDR X8, [X8 + 0xC48]
	0x021E0FE8 LDR X0, [X8]
	0x021E0FEC LDR W8, [X0 + 0xE0]
	0x021E0FF0 CBNZ W8, 0x21E0FF8
	0x021E0FF4 BL 0x1C16DFC
	0x021E0FF8 MOV X0, X31
	0x021E0FFC BL 0x3338524
	0x021E1000 CBZ X0, 0x21E13DC
	0x021E1004 LDR X8, [X0]
	0x021E1008 LDR X9, [X8 + 0x218]
	0x021E100C LDR X1, [X8 + 0x220]
	0x021E1010 BLR X9
	0x021E1014 MOV X2, X0
	0x021E1018 ADD X3, X31, 0x28
	0x021E101C MOVZ W1, 0x7
	0x021E1020 MOV X0, X21
	0x021E1024 MOV X4, X31
	0x021E1028 BL 0x337C0CC
	0x021E102C ADRP X9, 0x1F12000
	0x021E1030 LDR W8, [X31 + 0x28]
	0x021E1034 LDR X9, [X9 + 0x758]
	0x021E1038 MOV W21, W0
	0x021E103C STR W8, [X31 + 0x8]
	0x021E1040 LDR X0, [X9]
	0x021E1044 B 0x21E136C
	0x021E1048 ADRP X8, 0x1F14000
	0x021E104C LDR X8, [X8 + 0xC48]
	0x021E1050 LDR X0, [X8]
	0x021E1054 LDR W8, [X0 + 0xE0]
	0x021E1058 CBNZ W8, 0x21E1060
	0x021E105C BL 0x1C16DFC
	0x021E1060 MOV X0, X31
	0x021E1064 BL 0x3338524
	0x021E1068 CBZ X0, 0x21E13DC
	0x021E106C LDR X8, [X0]
	0x021E1070 LDR X9, [X8 + 0x218]
	0x021E1074 LDR X1, [X8 + 0x220]
	0x021E1078 BLR X9
	0x021E107C MOV X2, X0
	0x021E1080 ADD X3, X31, 0x2C
	0x021E1084 MOVZ W1, 0xA7
	0x021E1088 MOV X0, X21
	0x021E108C MOV X4, X31
	0x021E1090 BL 0x3390688
	0x021E1094 ADRP X8, 0x1F12000
	0x021E1098 LDR V0, [X31 + 0x2C]
	0x021E109C LDR X8, [X8 + 0xA90]
	0x021E10A0 MOV W21, W0
	0x021E10A4 ADD X1, X31, 0x8
	0x021E10A8 STR S0, [X31 + 0x8]
	0x021E10AC LDR X0, [X8]
	0x021E10B0 B 0x21E1370
	0x021E10B4 LDR X0, [X23]
	0x021E10B8 LDR X8, [X20 + 0x38]
	0x021E10BC LDR W9, [X0 + 0xE0]
	0x021E10C0 LDR X22, [X8 + 0x10]
	0x021E10C4 CBNZ W9, 0x21E10CC
	0x021E10C8 BL 0x1C16DFC
	0x021E10CC MOV X0, X22
	0x021E10D0 MOV X1, X31
	0x021E10D4 BL 0x338C698
	0x021E10D8 ADRP X8, 0x1F3A000
	0x021E10DC LDR X8, [X8 + 0xA78]
	0x021E10E0 MOV X22, X0
	0x021E10E4 MOV X1, X31
	0x021E10E8 LDR X8, [X8]
	0x021E10EC MOV X0, X8
	0x021E10F0 BL 0x338C698
	0x021E10F4 MOV X1, X0
	0x021E10F8 MOV X0, X22
	0x021E10FC MOV X2, X31
	0x021E1100 BL 0x3395194
	0x021E1104 TBZ X0, 0x0, 0x21E119C
	0x021E1108 ADRP X8, 0x1F3A000
	0x021E110C LDR X8, [X8 + 0xA90]
	0x021E1110 MOV X0, X21
	0x021E1114 MOV X2, X31
	0x021E1118 LDR X1, [X8]
	0x021E111C BL 0x321BA08
	0x021E1120 TBZ X0, 0x0, 0x21E124C
	0x021E1124 ADRP X8, 0x1F15000
	0x021E1128 LDR X8, [X8 + 0x978]
	0x021E112C LDR X0, [X8]
	0x021E1130 MOVZ X8, 0x2D18
	0x021E1134 MOVK X8, 0x54440000
	0x021E1138 MOVK X8, 0x21FB
	0x021E113C MOVK X8, 0x40090000
	0x021E1140 STR X8, [X31 + 0x8]
	0x021E1144 ADD X1, X31, 0x8
	0x021E1148 BL 0x1C16E04
	0x021E114C LDR X8, [X20 + 0x38]
	0x021E1150 MOV X20, X0
	0x021E1154 LDR X1, [X8 + 0x8]
	0x021E1158 LDRB W8, [X1 + 0x135]
	0x021E115C TBNZ X8, 0x0, 0x21E116C
	0x021E1160 MOV X0, X1
	0x021E1164 BL 0x1C5C684
	0x021E1168 MOV X1, X0
	0x021E116C CBZ X20, 0x21E13DC
	0x021E1170 LDR X8, [X20]
	0x021E1174 LDR X9, [X1 + 0x40]
	0x021E1178 LDR X8, [X8 + 0x40]
	0x021E117C CMP X8, X9
	0x021E1180 B.NE 0x21E13E0
	0x021E1184 MOV X0, X20
	0x021E1188 BL 0x1C16E08
	0x021E118C LDR X8, [X0]
	0x021E1190 STR X8, [X19]
	0x021E1194 MOVZ W21, 0x1
	0x021E1198 B 0x21E13BC
	0x021E119C LDR X0, [X23]
	0x021E11A0 LDR X8, [X20 + 0x38]
	0x021E11A4 LDR W9, [X0 + 0xE0]
	0x021E11A8 LDR X22, [X8 + 0x10]
	0x021E11AC CBNZ W9, 0x21E11B4
	0x021E11B0 BL 0x1C16DFC
	0x021E11B4 MOV X0, X22
	0x021E11B8 MOV X1, X31
	0x021E11BC BL 0x338C698
	0x021E11C0 ADRP X8, 0x1F39000
	0x021E11C4 LDR X8, [X8 + 0xD88]
	0x021E11C8 MOV X22, X0
	0x021E11CC MOV X1, X31
	0x021E11D0 LDR X8, [X8]
	0x021E11D4 MOV X0, X8
	0x021E11D8 BL 0x338C698
	0x021E11DC MOV X1, X0
	0x021E11E0 MOV X0, X22
	0x021E11E4 MOV X2, X31
	0x021E11E8 BL 0x3395194
	0x021E11EC TBZ X0, 0x0, 0x21E12B4
	0x021E11F0 ADRP X8, 0x1F14000
	0x021E11F4 LDR X8, [X8 + 0xC48]
	0x021E11F8 LDR X0, [X8]
	0x021E11FC LDR W8, [X0 + 0xE0]
	0x021E1200 CBNZ W8, 0x21E1208
	0x021E1204 BL 0x1C16DFC
	0x021E1208 MOV X0, X31
	0x021E120C BL 0x3338524
	0x021E1210 CBZ X0, 0x21E13DC
	0x021E1214 LDR X8, [X0]
	0x021E1218 LDR X9, [X8 + 0x218]
	0x021E121C LDR X1, [X8 + 0x220]
	0x021E1220 BLR X9
	0x021E1224 MOV X2, X0
	0x021E1228 ADD X3, X31, 0x18
	0x021E122C MOVZ W1, 0x7
	0x021E1230 MOV X0, X21
	0x021E1234 MOV X4, X31
	0x021E1238 BL 0x337D7DC
	0x021E123C ADRP X9, 0x1F14000
	0x021E1240 LDR X8, [X31 + 0x18]
	0x021E1244 LDR X9, [X9 + 0xA60]
	0x021E1248 B 0x21E1360
	0x021E124C ADRP X8, 0x1F14000
	0x021E1250 LDR X8, [X8 + 0xC48]
	0x021E1254 LDR X0, [X8]
	0x021E1258 LDR W8, [X0 + 0xE0]
	0x021E125C CBNZ W8, 0x21E1264
	0x021E1260 BL 0x1C16DFC
	0x021E1264 MOV X0, X31
	0x021E1268 BL 0x3338524
	0x021E126C CBZ X0, 0x21E13DC
	0x021E1270 LDR X8, [X0]
	0x021E1274 LDR X9, [X8 + 0x218]
	0x021E1278 LDR X1, [X8 + 0x220]
	0x021E127C BLR X9
	0x021E1280 MOV X2, X0
	0x021E1284 ADD X3, X31, 0x20
	0x021E1288 MOVZ W1, 0xA7
	0x021E128C MOV X0, X21
	0x021E1290 MOV X4, X31
	0x021E1294 BL 0x3366A70
	0x021E1298 ADRP X8, 0x1F15000
	0x021E129C LDR V0, [X31 + 0x20]
	0x021E12A0 LDR X8, [X8 + 0x978]
	0x021E12A4 MOV W21, W0
	0x021E12A8 STR D0, [X31 + 0x8]
	0x021E12AC LDR X0, [X8]
	0x021E12B0 B 0x21E136C
	0x021E12B4 LDR X0, [X23]
	0x021E12B8 LDR X8, [X20 + 0x38]
	0x021E12BC LDR W9, [X0 + 0xE0]
	0x021E12C0 LDR X22, [X8 + 0x10]
	0x021E12C4 CBNZ W9, 0x21E12CC
	0x021E12C8 BL 0x1C16DFC
	0x021E12CC MOV X0, X22
	0x021E12D0 MOV X1, X31
	0x021E12D4 BL 0x338C698
	0x021E12D8 ADRP X8, 0x1F39000
	0x021E12DC LDR X8, [X8 + 0xDA8]
	0x021E12E0 MOV X22, X0
	0x021E12E4 MOV X1, X31
	0x021E12E8 LDR X8, [X8]
	0x021E12EC MOV X0, X8
	0x021E12F0 BL 0x338C698
	0x021E12F4 MOV X1, X0
	0x021E12F8 MOV X0, X22
	0x021E12FC MOV X2, X31
	0x021E1300 BL 0x3395194
	0x021E1304 TBZ X0, 0x0, 0x21E13D4
	0x021E1308 ADRP X8, 0x1F14000
	0x021E130C LDR X8, [X8 + 0xC48]
	0x021E1310 LDR X0, [X8]
	0x021E1314 LDR W8, [X0 + 0xE0]
	0x021E1318 CBNZ W8, 0x21E1320
	0x021E131C BL 0x1C16DFC
	0x021E1320 MOV X0, X31
	0x021E1324 BL 0x3338524
	0x021E1328 CBZ X0, 0x21E13DC
	0x021E132C LDR X8, [X0]
	0x021E1330 LDR X9, [X8 + 0x218]
	0x021E1334 LDR X1, [X8 + 0x220]
	0x021E1338 BLR X9
	0x021E133C MOV X2, X0
	0x021E1340 ADD X3, X31, 0x10
	0x021E1344 MOVZ W1, 0x7
	0x021E1348 MOV X0, X21
	0x021E134C MOV X4, X31
	0x021E1350 BL 0x339AFCC
	0x021E1354 ADRP X9, 0x1F13000
	0x021E1358 LDR X8, [X31 + 0x10]
	0x021E135C LDR X9, [X9 + 0x758]
	0x021E1360 MOV W21, W0
	0x021E1364 LDR X0, [X9]
	0x021E1368 STR X8, [X31 + 0x8]
	0x021E136C ADD X1, X31, 0x8
	0x021E1370 BL 0x1C16E04
	0x021E1374 LDR X8, [X20 + 0x38]
	0x021E1378 MOV X20, X0
	0x021E137C LDR X1, [X8 + 0x8]
	0x021E1380 LDRB W8, [X1 + 0x135]
	0x021E1384 TBNZ X8, 0x0, 0x21E1394
	0x021E1388 MOV X0, X1
	0x021E138C BL 0x1C5C684
	0x021E1390 MOV X1, X0
	0x021E1394 CBZ X20, 0x21E13DC
	0x021E1398 LDR X8, [X20]
	0x021E139C LDR X9, [X1 + 0x40]
	0x021E13A0 LDR X8, [X8 + 0x40]
	0x021E13A4 CMP X8, X9
	0x021E13A8 B.NE 0x21E13E0
	0x021E13AC MOV X0, X20
	0x021E13B0 BL 0x1C16E08
	0x021E13B4 LDR X8, [X0]
	0x021E13B8 STR X8, [X19]
	0x021E13BC AND W0, W21, 0x1
	0x021E13C0 LDP X20, X19, [X31 + 0x50]
	0x021E13C4 LDP X22, X21, [X31 + 0x40]
	0x021E13C8 LDP X30, X23, [X31 + 0x30]
	0x021E13CC ADD X31, X31, 0x60
	0x021E13D0 RET
	0x021E13D4 MOV W21, W31
	0x021E13D8 B 0x21E13BC
	0x021E13DC BL 0x1C16F20
	0x021E13E0 MOV X0, X20
	0x021E13E4 BL 0x1C171E0
	0x021E13E8 STP X29, X30, [X31 - 0x50]!
	0x021E13EC STP X26, X25, [X31 + 0x10]
	0x021E13F0 STP X24, X23, [X31 + 0x20]
	0x021E13F4 STP X22, X21, [X31 + 0x30]
	0x021E13F8 STP X20, X19, [X31 + 0x40]
	0x021E13FC ADD X29, X31, 0x0
	0x021E1400 SUB X31, X31, 0x30
	0x021E1404 MRS X24, 0xC000
	0x021E1408 LDR X8, [X24 + 0x28]
	0x021E140C MOV X25, X2
	0x021E1410 MOV X19, X1
	0x021E1414 MOV X22, X0
	0x021E1418 STUR X8, [X29 - 0x8]
	0x021E141C LDR X8, [X25 + 0x38]!
	0x021E1420 CBNZ X8, 0x21E14FC
	0x021E1424 ADRP X0, 0x1F1B000
	0x021E1428 LDR X0, [X0 + 0x8D8]
	0x021E142C MOV X20, X2
	0x021E1430 BL 0x1C16CF4
	0x021E1434 ADRP X0, 0x1F14000
	0x021E1438 LDR X0, [X0 + 0x170]
	0x021E143C BL 0x1C16CF4
	0x021E1440 ADRP X0, 0x1F14000
	0x021E1444 LDR X0, [X0 + 0xC48]
	0x021E1448 BL 0x1C16CF4
	0x021E144C ADRP X0, 0x1F3A000
	0x021E1450 LDR X0, [X0 + 0xA78]
	0x021E1454 BL 0x1C16CF4
	0x021E1458 ADRP X0, 0x1F15000
	0x021E145C LDR X0, [X0 + 0x978]
	0x021E1460 BL 0x1C16CF4
	0x021E1464 ADRP X0, 0x1F39000
	0x021E1468 LDR X0, [X0 + 0xD80]
	0x021E146C BL 0x1C16CF4
	0x021E1470 ADRP X0, 0x1F12000
	0x021E1474 LDR X0, [X0 + 0x758]
	0x021E1478 BL 0x1C16CF4
	0x021E147C ADRP X0, 0x1F39000
	0x021E1480 LDR X0, [X0 + 0xD88]
	0x021E1484 BL 0x1C16CF4
	0x021E1488 ADRP X0, 0x1F14000
	0x021E148C LDR X0, [X0 + 0xA60]
	0x021E1490 BL 0x1C16CF4
	0x021E1494 ADRP X0, 0x1F3A000
	0x021E1498 LDR X0, [X0 + 0xA80]
	0x021E149C BL 0x1C16CF4
	0x021E14A0 ADRP X0, 0x1F12000
	0x021E14A4 LDR X0, [X0 + 0xA90]
	0x021E14A8 BL 0x1C16CF4
	0x021E14AC ADRP X0, 0x1F12000
	0x021E14B0 LDR X0, [X0 + 0x6C0]
	0x021E14B4 BL 0x1C16CF4
	0x021E14B8 ADRP X0, 0x1F3A000
	0x021E14BC LDR X0, [X0 + 0xA88]
	0x021E14C0 BL 0x1C16CF4
	0x021E14C4 ADRP X0, 0x1F39000
	0x021E14C8 LDR X0, [X0 + 0xDA8]
	0x021E14CC BL 0x1C16CF4
	0x021E14D0 ADRP X0, 0x1F13000
	0x021E14D4 LDR X0, [X0 + 0x758]
	0x021E14D8 BL 0x1C16CF4
	0x021E14DC ADRP X0, 0x1F3A000
	0x021E14E0 LDR X0, [X0 + 0xA90]
	0x021E14E4 BL 0x1C16CF4
	0x021E14E8 LDR X8, [X25]
	0x021E14EC CBNZ X8, 0x21E14FC
	0x021E14F0 MOV X0, X20
	0x021E14F4 BL 0x1C5C6E0
	0x021E14F8 LDR X8, [X20 + 0x38]
	0x021E14FC LDR X8, [X8 + 0x8]
	0x021E1500 LDR W20, [X8 + 0xFC]
	0x021E1504 ADD X8, X31, 0x0
	0x021E1508 ADD X9, X20, 0xF
	0x021E150C AND X9, X9, 0x1FFFFFFFF
	0x021E1510 SUB X21, X8, X9
	0x021E1514 ADD X31, X21, 0x0
	0x021E1518 STP X31, X31, [X29 - 0x18]
	0x021E151C STP X31, X31, [X29 - 0x28]
	0x021E1520 CBZ X22, 0x21E1B08
	0x021E1524 MOVZ W1, 0x2C
	0x021E1528 MOVZ W2, 0x2E
	0x021E152C MOV X0, X22
	0x021E1530 MOV X3, X31
	0x021E1534 BL 0x32296D0
	0x021E1538 CBZ X0, 0x21E1B08
	0x021E153C MOV X1, X31
	0x021E1540 BL 0x322B6E4
	0x021E1544 CBZ X0, 0x21E1B08
	0x021E1548 LDR W8, [X0 + 0x10]
	0x021E154C MOV X22, X0
	0x021E1550 SUBS W1, W8, 0x2
	0x021E1554 B.LT 0x21E15EC
	0x021E1558 MOV X0, X22
	0x021E155C MOV X2, X31
	0x021E1560 BL 0x3222A1C
	0x021E1564 ADRP X8, 0x1F14000
	0x021E1568 LDR X8, [X8 + 0x170]
	0x021E156C MOV W23, W0
	0x021E1570 LDR X8, [X8]
	0x021E1574 LDR W9, [X8 + 0xE0]
	0x021E1578 CBNZ W9, 0x21E1584
	0x021E157C MOV X0, X8
	0x021E1580 BL 0x1C16DFC
	0x021E1584 MOV W0, W23
	0x021E1588 MOV X1, X31
	0x021E158C BL 0x33141B4
	0x021E1590 TBZ X0, 0x0, 0x21E15EC
	0x021E1594 ADRP X8, 0x1F1B000
	0x021E1598 LDR X8, [X8 + 0x8D8]
	0x021E159C MOVZ W1, 0x3
	0x021E15A0 LDR X0, [X8]
	0x021E15A4 BL 0x1C16D6C
	0x021E15A8 ADRP X8, 0x1F3A000
	0x021E15AC LDR X8, [X8 + 0xA88]
	0x021E15B0 MOV X2, X31
	0x021E15B4 MOV X23, X0
	0x021E15B8 LDR X1, [X8]
	0x021E15BC BL 0x32C5BD8
	0x021E15C0 MOV X0, X22
	0x021E15C4 MOV X1, X23
	0x021E15C8 MOV X2, X31
	0x021E15CC BL 0x322BC58
	0x021E15D0 MOV X22, X0
	0x021E15D4 MOV X0, X19
	0x021E15D8 MOV W1, W31
	0x021E15DC MOV X2, X20
	0x021E15E0 BL 0x3EB1B10
	0x021E15E4 CBNZ X22, 0x21E15FC
	0x021E15E8 B 0x21E1B08
	0x021E15EC MOV X0, X19
	0x021E15F0 MOV W1, W31
	0x021E15F4 MOV X2, X20
	0x021E15F8 BL 0x3EB1B10
	0x021E15FC LDR W8, [X22 + 0x10]
	0x021E1600 CBZ W8, 0x21E16EC
	0x021E1604 ADRP X26, 0x1F12000
	0x021E1608 LDR X26, [X26 + 0x6C0]
	0x021E160C LDR X8, [X25]
	0x021E1610 LDR X0, [X26]
	0x021E1614 LDR X23, [X8 + 0x10]
	0x021E1618 LDR W9, [X0 + 0xE0]
	0x021E161C CBNZ W9, 0x21E1624
	0x021E1620 BL 0x1C16DFC
	0x021E1624 MOV X0, X23
	0x021E1628 MOV X1, X31
	0x021E162C BL 0x338C698
	0x021E1630 ADRP X8, 0x1F3A000
	0x021E1634 LDR X8, [X8 + 0xA80]
	0x021E1638 MOV X23, X0
	0x021E163C MOV X1, X31
	0x021E1640 LDR X8, [X8]
	0x021E1644 MOV X0, X8
	0x021E1648 BL 0x338C698
	0x021E164C MOV X1, X0
	0x021E1650 MOV X0, X23
	0x021E1654 MOV X2, X31
	0x021E1658 BL 0x3395194
	0x021E165C TBZ X0, 0x0, 0x21E16F4
	0x021E1660 ADRP X8, 0x1F3A000
	0x021E1664 LDR X8, [X8 + 0xA90]
	0x021E1668 MOV X0, X22
	0x021E166C MOV X2, X31
	0x021E1670 LDR X1, [X8]
	0x021E1674 BL 0x321BA08

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X8, [X2+56]
	009 Move X20, X2
	010 Move X19, X1
	011 Move X21, X0
	012 Compare X8, 0
	013 JumpIfNotEqual {67}
	014 Move X0, 0x1F1D000
	015 Move X0, [X0+2264]
	016 Call 0x1C17CF4
	017 Move X0, 0x1F16000
	018 Move X0, [X0+368]
	019 Call 0x1C17CF4
	020 Move X0, 0x1F16000
	021 Move X0, [X0+3144]
	022 Call 0x1C17CF4
	023 Move X0, 0x1F3B000
	024 Move X0, [X0+2680]
	025 Call 0x1C17CF4
	026 Move X0, 0x1F16000
	027 Move X0, [X0+2424]
	028 Call 0x1C17CF4
	029 Move X0, 0x1F3A000
	030 Move X0, [X0+3456]
	031 Call 0x1C17CF4
	032 Move X0, 0x1F13000
	033 Move X0, [X0+1880]
	034 Call 0x1C17CF4
	035 Move X0, 0x1F3A000
	036 Move X0, [X0+3464]
	037 Call 0x1C17CF4
	038 Move X0, 0x1F15000
	039 Move X0, [X0+2656]
	040 Call 0x1C17CF4
	041 Move X0, 0x1F3B000
	042 Move X0, [X0+2688]
	043 Call 0x1C17CF4
	044 Move X0, 0x1F13000
	045 Move X0, [X0+2704]
	046 Call 0x1C17CF4
	047 Move X0, 0x1F13000
	048 Move X0, [X0+1728]
	049 Call 0x1C17CF4
	050 Move X0, 0x1F3B000
	051 Move X0, [X0+2696]
	052 Call 0x1C17CF4
	053 Move X0, 0x1F3A000
	054 Move X0, [X0+3496]
	055 Call 0x1C17CF4
	056 Move X0, 0x1F14000
	057 Move X0, [X0+1880]
	058 Call 0x1C17CF4
	059 Move X0, 0x1F3B000
	060 Move X0, [X0+2704]
	061 Call 0x1C17CF4
	062 Move X8, [X20+56]
	063 Compare X8, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X20
	066 Call 0x1C5D6E0
	067 Move [X31+32], X31
	068 Move [X31+40], X31
	069 Move [X31+16], X31
	070 Move [X31+24], X31
	071 Compare X21, 0
	072 JumpIfEqual {480}
	073 Move W1, 44
	074 Move W2, 46
	075 Move X0, X21
	076 Move X3, X31
	077 Call String.Replace, X0, X1, X2
	078 Compare X0, 0
	079 JumpIfEqual {480}
	080 Move X1, X31
	081 Call String.ToLowerInvariant, X0
	082 Compare X0, 0
	083 JumpIfEqual {480}
	084 Move W8, [X0+16]
	085 Move X21, X0
	086 Subtract W1, W8, 2
	087 Move X0, X21
	088 Move X2, X31
	089 Call String.get_Chars, X0, X1
	090 Move X8, 0x1F15000
	091 Move X8, [X8+368]
	092 Move W22, W0
	093 Move X8, [X8]
	094 Move W9, [X8+224]
	095 Compare W9, 0
	096 JumpIfNotEqual {99}
	097 Move X0, X8
	098 Call 0x1C17DFC
	099 Move W0, W22
	100 Move X1, X31
	101 Call Char.IsDigit, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {125}
	106 Move X8, 0x1F1C000
	107 Move X8, [X8+2264]
	108 Move W1, 3
	109 Move X0, [X8]
	110 Call 0x1C17D6C
	111 Move X8, 0x1F3B000
	112 Move X8, [X8+2696]
	113 Move X2, X31
	114 Move X22, X0
	115 Move X1, [X8]
	116 Call RuntimeHelpers.InitializeArray, X0, X1
	117 Move X0, X21
	118 Move X1, X22
	119 Move X2, X31
	120 Call String.TrimEnd, X0, X1
	121 Move X21, X0
	122 Move [X19], X31
	123 Compare X0, 0
	124 JumpIfNotEqual {126}
	125 Move [X19], X31
	126 Move W8, [X21+16]
	127 Compare W8, 0
	128 JumpIfEqual {318}
	129 Move X23, 0x1F13000
	130 Move X23, [X23+1728]
	131 Move X8, [X20+56]
	132 Move X0, [X23]
	133 Move X22, [X8+16]
	134 Move W9, [X0+224]
	135 Compare W9, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X22
	139 Move X1, X31
	140 Call Type.GetTypeFromHandle, X0
	141 Move X8, 0x1F3B000
	142 Move X8, [X8+2688]
	143 Move X22, X0
	144 Move X1, X31
	145 Move X8, [X8]
	146 Move X0, X8
	147 Call Type.GetTypeFromHandle, X0
	148 Move X1, X0
	149 Move X0, X22
	150 Move X2, X31
	151 Call Type.op_Equality, X0, X1
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {172}
	156 Move X8, 0x1F3B000
	157 Move X8, [X8+2704]
	158 Move X0, X21
	159 Move X2, X31
	160 Move X1, [X8]
	161 Call String.op_Equality, X0, X1
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfNotEqual {224}
	166 Move X8, 0x1F13000
	167 Move X8, [X8+2704]
	168 Move X0, [X8]
	169 Move W8, 4059
	170 NotImplemented "Instruction MOVK not yet implemented."
	171 Move [X31+8], W8
	172 Move X0, [X23]
	173 Move X8, [X20+56]
	174 Move W9, [X0+224]
	175 Move X22, [X8+16]
	176 Compare W9, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X22
	180 Move X1, X31
	181 Call Type.GetTypeFromHandle, X0
	182 Move X8, 0x1F3A000
	183 Move X8, [X8+3456]
	184 Move X22, X0
	185 Move X1, X31
	186 Move X8, [X8]
	187 Move X0, X8
	188 Call Type.GetTypeFromHandle, X0
	189 Move X1, X0
	190 Move X0, X22
	191 Move X2, X31
	192 Call Type.op_Equality, X0, X1
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {252}
	197 Move X8, 0x1F15000
	198 Move X8, [X8+3144]
	199 Move X0, [X8]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X0, X31
	205 Call CultureInfo.get_InvariantCulture
	206 Compare X0, 0
	207 JumpIfEqual {480}
	208 Move X8, [X0]
	209 Move X9, [X8+536]
	210 Move X1, [X8+544]
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move X2, X0
	213 Add X3, X31, 40
	214 Move W1, 7
	215 Move X0, X21
	216 Move X4, X31
	217 Call Int32.TryParse, X0, X1, X2, X3
	218 Move X9, 0x1F13000
	219 Move W8, [X31+40]
	220 Move X9, [X9+1880]
	221 Move W21, W0
	222 Move [X31+8], W8
	223 Move X0, [X9]
	224 Move X8, 0x1F15000
	225 Move X8, [X8+3144]
	226 Move X0, [X8]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Move X0, X31
	232 Call CultureInfo.get_InvariantCulture
	233 Compare X0, 0
	234 JumpIfEqual {480}
	235 Move X8, [X0]
	236 Move X9, [X8+536]
	237 Move X1, [X8+544]
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Move X2, X0
	240 Add X3, X31, 44
	241 Move W1, 167
	242 Move X0, X21
	243 Move X4, X31
	244 Call Single.TryParse, X0, X1, X2, X3
	245 Move X8, 0x1F13000
	246 Move V0, [X31+44]
	247 Move X8, [X8+2704]
	248 Move W21, W0
	249 Add X1, X31, 8
	250 Move [X31+8], S0
	251 Move X0, [X8]
	252 Move X0, [X23]
	253 Move X8, [X20+56]
	254 Move W9, [X0+224]
	255 Move X22, [X8+16]
	256 Compare W9, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Move X0, X22
	260 Move X1, X31
	261 Call Type.GetTypeFromHandle, X0
	262 Move X8, 0x1F3B000
	263 Move X8, [X8+2680]
	264 Move X22, X0
	265 Move X1, X31
	266 Move X8, [X8]
	267 Move X0, X8
	268 Call Type.GetTypeFromHandle, X0
	269 Move X1, X0
	270 Move X0, X22
	271 Move X2, X31
	272 Call Type.op_Equality, X0, X1
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {319}
	277 Move X8, 0x1F3B000
	278 Move X8, [X8+2704]
	279 Move X0, X21
	280 Move X2, X31
	281 Move X1, [X8]
	282 Call String.op_Equality, X0, X1
	283 Move TEMP, X0
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfNotEqual {368}
	287 Move X8, 0x1F16000
	288 Move X8, [X8+2424]
	289 Move X0, [X8]
	290 Move X8, 0x2D18
	291 NotImplemented "Instruction MOVK not yet implemented."
	292 NotImplemented "Instruction MOVK not yet implemented."
	293 NotImplemented "Instruction MOVK not yet implemented."
	294 Move [X31+8], X8
	295 Add X1, X31, 8
	296 Call 0x1C17E04
	297 Move X8, [X20+56]
	298 Move X20, X0
	299 Move X1, [X8+8]
	300 Move W8, [X1+309]
	301 Move TEMP, X8
	302 And TEMP, TEMP, 1
	303 Compare TEMP, 1
	304 JumpIfEqual {308}
	305 Move X0, X1
	306 Call 0x1C5D684
	307 Move X1, X0
	308 Compare X20, 0
	309 JumpIfEqual {480}
	310 Move X8, [X20]
	311 Move X9, [X1+64]
	312 Move X8, [X8+64]
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move X0, X20
	315 Call 0x1C17E08
	316 Move V0, [X0]
	317 Move [X19], D0
	318 Move W21, 1
	319 Move X0, [X23]
	320 Move X8, [X20+56]
	321 Move W9, [X0+224]
	322 Move X22, [X8+16]
	323 Compare W9, 0
	324 JumpIfNotEqual {326}
	325 Call 0x1C17DFC
	326 Move X0, X22
	327 Move X1, X31
	328 Call Type.GetTypeFromHandle, X0
	329 Move X8, 0x1F3A000
	330 Move X8, [X8+3464]
	331 Move X22, X0
	332 Move X1, X31
	333 Move X8, [X8]
	334 Move X0, X8
	335 Call Type.GetTypeFromHandle, X0
	336 Move X1, X0
	337 Move X0, X22
	338 Move X2, X31
	339 Call Type.op_Equality, X0, X1
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {395}
	344 Move X8, 0x1F15000
	345 Move X8, [X8+3144]
	346 Move X0, [X8]
	347 Move W8, [X0+224]
	348 Compare W8, 0
	349 JumpIfNotEqual {351}
	350 Call 0x1C17DFC
	351 Move X0, X31
	352 Call CultureInfo.get_InvariantCulture
	353 Compare X0, 0
	354 JumpIfEqual {480}
	355 Move X8, [X0]
	356 Move X9, [X8+536]
	357 Move X1, [X8+544]
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Move X2, X0
	360 Add X3, X31, 24
	361 Move W1, 7
	362 Move X0, X21
	363 Move X4, X31
	364 Call Int64.TryParse, X0, X1, X2, X3
	365 Move X9, 0x1F15000
	366 Move X8, [X31+24]
	367 Move X9, [X9+2656]
	368 Move X8, 0x1F15000
	369 Move X8, [X8+3144]
	370 Move X0, [X8]
	371 Move W8, [X0+224]
	372 Compare W8, 0
	373 JumpIfNotEqual {375}
	374 Call 0x1C17DFC
	375 Move X0, X31
	376 Call CultureInfo.get_InvariantCulture
	377 Compare X0, 0
	378 JumpIfEqual {480}
	379 Move X8, [X0]
	380 Move X9, [X8+536]
	381 Move X1, [X8+544]
	382 NotImplemented "Instruction BLR not yet implemented."
	383 Move X2, X0
	384 Add X3, X31, 32
	385 Move W1, 167
	386 Move X0, X21
	387 Move X4, X31
	388 Call Double.TryParse, X0, X1, X2, X3
	389 Move X8, 0x1F16000
	390 Move V0, [X31+32]
	391 Move X8, [X8+2424]
	392 Move W21, W0
	393 Move [X31+8], D0
	394 Move X0, [X8]
	395 Move X0, [X23]
	396 Move X8, [X20+56]
	397 Move W9, [X0+224]
	398 Move X22, [X8+16]
	399 Compare W9, 0
	400 JumpIfNotEqual {402}
	401 Call 0x1C17DFC
	402 Move X0, X22
	403 Move X1, X31
	404 Call Type.GetTypeFromHandle, X0
	405 Move X8, 0x1F3A000
	406 Move X8, [X8+3496]
	407 Move X22, X0
	408 Move X1, X31
	409 Move X8, [X8]
	410 Move X0, X8
	411 Call Type.GetTypeFromHandle, X0
	412 Move X1, X0
	413 Move X0, X22
	414 Move X2, X31
	415 Call Type.op_Equality, X0, X1
	416 Move TEMP, X0
	417 And TEMP, TEMP, 1
	418 Compare TEMP, 1
	419 JumpIfNotEqual {479}
	420 Move X8, 0x1F15000
	421 Move X8, [X8+3144]
	422 Move X0, [X8]
	423 Move W8, [X0+224]
	424 Compare W8, 0
	425 JumpIfNotEqual {427}
	426 Call 0x1C17DFC
	427 Move X0, X31
	428 Call CultureInfo.get_InvariantCulture
	429 Compare X0, 0
	430 JumpIfEqual {480}
	431 Move X8, [X0]
	432 Move X9, [X8+536]
	433 Move X1, [X8+544]
	434 NotImplemented "Instruction BLR not yet implemented."
	435 Move X2, X0
	436 Add X3, X31, 16
	437 Move W1, 7
	438 Move X0, X21
	439 Move X4, X31
	440 Call UInt64.TryParse, X0, X1, X2, X3
	441 Move X9, 0x1F14000
	442 Move X8, [X31+16]
	443 Move X9, [X9+1880]
	444 Move W21, W0
	445 Move X0, [X9]
	446 Move [X31+8], X8
	447 Add X1, X31, 8
	448 Call 0x1C17E04
	449 Move X8, [X20+56]
	450 Move X20, X0
	451 Move X1, [X8+8]
	452 Move W8, [X1+309]
	453 Move TEMP, X8
	454 And TEMP, TEMP, 1
	455 Compare TEMP, 1
	456 JumpIfEqual {460}
	457 Move X0, X1
	458 Call 0x1C5D684
	459 Move X1, X0
	460 Compare X20, 0
	461 JumpIfEqual {480}
	462 Move X8, [X20]
	463 Move X9, [X1+64]
	464 Move X8, [X8+64]
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move X0, X20
	467 Call 0x1C17E08
	468 Move V0, [X0]
	469 Move [X19], D0
	470 And W0, W21, 1
	471 Move X20, [X31+80]
	472 Move X19, [X31+88]
	473 Move X22, [X31+64]
	474 Move X21, [X31+72]
	475 Move X30, [X31+48]
	476 Move X23, [X31+56]
	477 Add X31, X31, 96
	478 Return X0
	479 Move W21, W31
	480 Call 0x1C17F20
	481 Move X0, X20
	482 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x03C0A170 LDR X0, [X8]
	0x03C0A174 LDP X22, X21, [X31 + 0x10]
	0x03C0A178 MOV X2, X31
	0x03C0A17C LDP X30, X23, [X31], #0x30
	0x03C0A180 B 0x3C96574
	0x03C0A184 BL 0x1C16F28
	0x03C0A188 BL 0x1C16F20
	0x03C0A18C BL 0x1C16F44
	0x03C0A190 MOV X1, X31
	0x03C0A194 BL 0x1C16DEC
	0x03C0A198 SUB X31, X31, 0x30
	0x03C0A19C STR X30, [X31 + 0x10]
	0x03C0A1A0 STP X20, X19, [X31 + 0x20]
	0x03C0A1A4 ADRP X20, 0x7DA000
	0x03C0A1A8 LDR X8, [X20 + 0x1F0]
	0x03C0A1AC MOV X19, X0
	0x03C0A1B0 STP S0, S1, [X31]
	0x03C0A1B4 STR S2, [X31 + 0x8]
	0x03C0A1B8 CBNZ X8, 0x3C0A1D0
	0x03C0A1BC ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C0A1C0 ADD X0, X0, 0xEAC
	0x03C0A1C4 BL 0x1C16CB8
	0x03C0A1C8 MOV X8, X0
	0x03C0A1CC STR X0, [X20 + 0x1F0]
	0x03C0A1D0 ADD X1, X31, 0x0
	0x03C0A1D4 MOV X0, X19
	0x03C0A1D8 BLR X8
	0x03C0A1DC LDP X20, X19, [X31 + 0x20]
	0x03C0A1E0 LDR X30, [X31 + 0x10]
	0x03C0A1E4 AND W0, W0, 0x1
	0x03C0A1E8 ADD X31, X31, 0x30
	0x03C0A1EC RET
	0x03C0A1F0 STP X30, X21, [X31 - 0x20]!
	0x03C0A1F4 STP X20, X19, [X31 + 0x10]
	0x03C0A1F8 ADRP X21, 0x7DA000
	0x03C0A1FC LDR X2, [X21 + 0x1F0]
	0x03C0A200 MOV X19, X1
	0x03C0A204 MOV X20, X0
	0x03C0A208 CBNZ X2, 0x3C0A220
	0x03C0A20C ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C0A210 ADD X0, X0, 0xEAC
	0x03C0A214 BL 0x1C16CB8
	0x03C0A218 MOV X2, X0
	0x03C0A21C STR X0, [X21 + 0x1F0]
	0x03C0A220 MOV X0, X20
	0x03C0A224 MOV X1, X19
	0x03C0A228 LDP X20, X19, [X31 + 0x10]
	0x03C0A22C LDP X30, X21, [X31], #0x20
	0x03C0A230 BR X2
	0x03C0A234 LDR X8, [X0]
	0x03C0A238 LDR W1, [X0 + 0x8]
	0x03C0A23C MOV X0, X8
	0x03C0A240 RET
	0x03C0A244 STR X1, [X0]
	0x03C0A248 STR W2, [X0 + 0x8]
	0x03C0A24C RET
	0x03C0A250 LDUR X8, [X0 + 0xC]
	0x03C0A254 LDR W1, [X0 + 0x14]
	0x03C0A258 MOV X0, X8
	0x03C0A25C RET
	0x03C0A260 STUR X1, [X0 + 0xC]
	0x03C0A264 STR W2, [X0 + 0x14]
	0x03C0A268 RET
	0x03C0A26C STR X1, [X0]
	0x03C0A270 STR W2, [X0 + 0x8]
	0x03C0A274 STUR X3, [X0 + 0xC]
	0x03C0A278 STR W4, [X0 + 0x14]
	0x03C0A27C RET
	0x03C0A280 MOV X1, X31
	0x03C0A284 MOV X2, X31
	0x03C0A288 MOV X3, X31
	0x03C0A28C B 0x3C1DEA0
	0x03C0A290 STP X30, X23, [X31 - 0x30]!
	0x03C0A294 STP X22, X21, [X31 + 0x10]
	0x03C0A298 STP X20, X19, [X31 + 0x20]
	0x03C0A29C ADRP X22, 0x7DA000
	0x03C0A2A0 LDRB W8, [X22 + 0x1F8]
	0x03C0A2A4 MOV X21, X2
	0x03C0A2A8 MOV X19, X1
	0x03C0A2AC MOV X20, X0
	0x03C0A2B0 TBNZ X8, 0x0, 0x3C0A2E0
	0x03C0A2B4 ADRP X0, 0x4EB000
	0x03C0A2B8 LDR X0, [X0 + 0xC48]
	0x03C0A2BC BL 0x1C16CF4
	0x03C0A2C0 ADRP X0, 0x4E9000
	0x03C0A2C4 LDR X0, [X0 + 0x9D0]
	0x03C0A2C8 BL 0x1C16CF4
	0x03C0A2CC ADRP X0, 0x554000
	0x03C0A2D0 LDR X0, [X0 + 0xC88]
	0x03C0A2D4 BL 0x1C16CF4
	0x03C0A2D8 MOVZ W8, 0x1
	0x03C0A2DC STRB W8, [X22 + 0x1F8]
	0x03C0A2E0 CBNZ X21, 0x3C0A31C
	0x03C0A2E4 ADRP X8, 0x4EB000
	0x03C0A2E8 LDR X8, [X8 + 0xC48]
	0x03C0A2EC LDR X0, [X8]
	0x03C0A2F0 LDR W8, [X0 + 0xE0]
	0x03C0A2F4 CBNZ W8, 0x3C0A2FC
	0x03C0A2F8 BL 0x1C16DFC
	0x03C0A2FC MOV X0, X31
	0x03C0A300 BL 0x3338524
	0x03C0A304 CBZ X0, 0x3C0A3DC
	0x03C0A308 LDR X8, [X0]
	0x03C0A30C LDR X9, [X8 + 0x218]
	0x03C0A310 LDR X1, [X8 + 0x220]
	0x03C0A314 BLR X9
	0x03C0A318 MOV X21, X0
	0x03C0A31C ADRP X8, 0x4E9000
	0x03C0A320 LDR X8, [X8 + 0x9D0]
	0x03C0A324 MOVZ W1, 0x2
	0x03C0A328 LDR X0, [X8]
	0x03C0A32C BL 0x1C16D6C
	0x03C0A330 MOV X22, X0
	0x03C0A334 MOV X0, X20
	0x03C0A338 MOV X1, X19
	0x03C0A33C MOV X2, X21
	0x03C0A340 MOV X3, X31
	0x03C0A344 BL 0x3C1E004
	0x03C0A348 CBZ X22, 0x3C0A3DC
	0x03C0A34C MOV X23, X0
	0x03C0A350 CBZ X0, 0x3C0A368
	0x03C0A354 LDR X8, [X22]
	0x03C0A358 MOV X0, X23
	0x03C0A35C LDR X1, [X8 + 0x40]
	0x03C0A360 BL 0x1C16E00
	0x03C0A364 CBZ X0, 0x3C0A3E0
	0x03C0A368 LDR W8, [X22 + 0x18]
	0x03C0A36C CBZ W8, 0x3C0A3D8
	0x03C0A370 ADD X0, X20, 0xC
	0x03C0A374 MOV X1, X19
	0x03C0A378 MOV X2, X21
	0x03C0A37C MOV X3, X31
	0x03C0A380 STR X23, [X22 + 0x20]
	0x03C0A384 BL 0x3C1E004
	0x03C0A388 MOV X19, X0
	0x03C0A38C CBZ X0, 0x3C0A3A4
	0x03C0A390 LDR X8, [X22]
	0x03C0A394 MOV X0, X19
	0x03C0A398 LDR X1, [X8 + 0x40]
	0x03C0A39C BL 0x1C16E00
	0x03C0A3A0 CBZ X0, 0x3C0A3E0
	0x03C0A3A4 LDR W8, [X22 + 0x18]
	0x03C0A3A8 CMP W8, 0x1
	0x03C0A3AC B.LS 0x3C0A3D8
	0x03C0A3B0 ADRP X8, 0x554000
	0x03C0A3B4 LDR X8, [X8 + 0xC88]
	0x03C0A3B8 STR X19, [X22 + 0x28]
	0x03C0A3BC MOV X1, X22
	0x03C0A3C0 LDP X20, X19, [X31 + 0x20]
	0x03C0A3C4 LDR X0, [X8]
	0x03C0A3C8 LDP X22, X21, [X31 + 0x10]
	0x03C0A3CC MOV X2, X31
	0x03C0A3D0 LDP X30, X23, [X31], #0x30
	0x03C0A3D4 B 0x3C96574
	0x03C0A3D8 BL 0x1C16F28
	0x03C0A3DC BL 0x1C16F20
	0x03C0A3E0 BL 0x1C16F44
	0x03C0A3E4 MOV X1, X31
	0x03C0A3E8 BL 0x1C16DEC
	0x03C0A3EC STP X30, X21, [X31 - 0x20]!
	0x03C0A3F0 STP X20, X19, [X31 + 0x10]
	0x03C0A3F4 ADRP X21, 0x7DA000
	0x03C0A3F8 LDRB W8, [X21 + 0x1F9]
	0x03C0A3FC MOV X20, X1
	0x03C0A400 MOV X19, X0
	0x03C0A404 TBNZ X8, 0x0, 0x3C0A41C
	0x03C0A408 ADRP X0, 0x511000
	0x03C0A40C LDR X0, [X0 + 0x5D8]
	0x03C0A410 BL 0x1C16CF4
	0x03C0A414 MOVZ W8, 0x1
	0x03C0A418 STRB W8, [X21 + 0x1F9]
	0x03C0A41C CBZ X20, 0x3C0A4AC
	0x03C0A420 ADRP X8, 0x511000
	0x03C0A424 LDR X8, [X8 + 0x5D8]
	0x03C0A428 LDR X9, [X20]
	0x03C0A42C LDR X8, [X8]
	0x03C0A430 CMP X9, X8
	0x03C0A434 B.NE 0x3C0A4AC
	0x03C0A438 MOV X0, X20
	0x03C0A43C BL 0x1C16E08
	0x03C0A440 LDR X9, [X0]
	0x03C0A444 LDR X8, [X19]
	0x03C0A448 CMP W8, W9
	0x03C0A44C B.NE 0x3C0A4AC
	0x03C0A450 UBFM X9, X9, 0x20, 0x3F
	0x03C0A454 UBFM X8, X8, 0x20, 0x3F
	0x03C0A458 CMP W8, W9
	0x03C0A45C MOV W8, W31
	0x03C0A460 B.NE 0x3C0A4B0
	0x03C0A464 LDR W9, [X0 + 0x8]
	0x03C0A468 LDR W10, [X19 + 0x8]
	0x03C0A46C CMP W10, W9
	0x03C0A470 B.NE 0x3C0A4B0
	0x03C0A474 LDUR X8, [X0 + 0xC]
	0x03C0A478 LDUR X9, [X19 + 0xC]
	0x03C0A47C CMP W9, W8
	0x03C0A480 B.NE 0x3C0A4AC
	0x03C0A484 LDR W10, [X0 + 0x14]
	0x03C0A488 LDR W11, [X19 + 0x14]
	0x03C0A48C UBFM X8, X8, 0x20, 0x3F
	0x03C0A490 UBFM X9, X9, 0x20, 0x3F
	0x03C0A494 CMP W9, W8
	0x03C0A498 CSET W8, EQ
	0x03C0A49C CMP W11, W10
	0x03C0A4A0 CSET W9, EQ
	0x03C0A4A4 AND W8, W8, W9, 0x0
	0x03C0A4A8 B 0x3C0A4B0
	0x03C0A4AC MOV W8, W31
	0x03C0A4B0 LDP X20, X19, [X31 + 0x10]
	0x03C0A4B4 MOV W0, W8
	0x03C0A4B8 LDP X30, X21, [X31], #0x20
	0x03C0A4BC RET
	0x03C0A4C0 LDR X9, [X1]
	0x03C0A4C4 LDR X8, [X0]
	0x03C0A4C8 CMP W8, W9
	0x03C0A4CC B.NE 0x3C0A52C
	0x03C0A4D0 UBFM X9, X9, 0x20, 0x3F
	0x03C0A4D4 UBFM X8, X8, 0x20, 0x3F
	0x03C0A4D8 CMP W8, W9
	0x03C0A4DC MOV W8, W31
	0x03C0A4E0 B.NE 0x3C0A530
	0x03C0A4E4 LDR W9, [X1 + 0x8]
	0x03C0A4E8 LDR W10, [X0 + 0x8]
	0x03C0A4EC CMP W10, W9
	0x03C0A4F0 B.NE 0x3C0A530
	0x03C0A4F4 LDUR X9, [X1 + 0xC]
	0x03C0A4F8 LDUR X8, [X0 + 0xC]
	0x03C0A4FC CMP W8, W9
	0x03C0A500 B.NE 0x3C0A52C
	0x03C0A504 LDR W10, [X1 + 0x14]
	0x03C0A508 LDR W11, [X0 + 0x14]
	0x03C0A50C UBFM X9, X9, 0x20, 0x3F
	0x03C0A510 UBFM X8, X8, 0x20, 0x3F
	0x03C0A514 CMP W8, W9
	0x03C0A518 CSET W8, EQ
	0x03C0A51C CMP W11, W10
	0x03C0A520 CSET W9, EQ
	0x03C0A524 AND W8, W8, W9, 0x0
	0x03C0A528 B 0x3C0A530
	0x03C0A52C MOV W8, W31
	0x03C0A530 MOV W0, W8
	0x03C0A534 RET
	0x03C0A538 STR X30, [X31 - 0x30]!
	0x03C0A53C STP X22, X21, [X31 + 0x10]
	0x03C0A540 STP X20, X19, [X31 + 0x20]
	0x03C0A544 LDR W8, [X0 + 0x4]
	0x03C0A548 MOV X19, X0
	0x03C0A54C ADD X0, X31, 0x8
	0x03C0A550 MOV X1, X31
	0x03C0A554 STR W8, [X31 + 0x8]
	0x03C0A558 BL 0x337B6D8
	0x03C0A55C LDR W8, [X19 + 0x8]
	0x03C0A560 MOV W20, W0
	0x03C0A564 ADD X0, X31, 0x8
	0x03C0A568 MOV X1, X31
	0x03C0A56C STR W8, [X31 + 0x8]
	0x03C0A570 BL 0x337B6D8
	0x03C0A574 LDR W8, [X19]
	0x03C0A578 MOV W21, W0
	0x03C0A57C ADD X0, X31, 0x8
	0x03C0A580 MOV X1, X31
	0x03C0A584 STR W8, [X31 + 0x8]
	0x03C0A588 BL 0x337B6D8
	0x03C0A58C SBFM W8, W20, 0x1C, 0x1F
	0x03C0A590 LDR W9, [X19 + 0x10]
	0x03C0A594 EOR W8, W8, W20, 0x4
	0x03C0A598 EOR W8, W8, W21, 0x4
	0x03C0A59C EOR W8, W8, W21, 0x1C
	0x03C0A5A0 EOR W22, W8, W0, 0x0
	0x03C0A5A4 ADD X0, X31, 0xC
	0x03C0A5A8 MOV X1, X31
	0x03C0A5AC STR W9, [X31 + 0xC]
	0x03C0A5B0 BL 0x337B6D8
	0x03C0A5B4 LDR W8, [X19 + 0x14]
	0x03C0A5B8 MOV W20, W0
	0x03C0A5BC ADD X0, X31, 0xC
	0x03C0A5C0 MOV X1, X31
	0x03C0A5C4 STR W8, [X31 + 0xC]
	0x03C0A5C8 BL 0x337B6D8
	0x03C0A5CC LDR W8, [X19 + 0xC]
	0x03C0A5D0 MOV W21, W0
	0x03C0A5D4 ADD X0, X31, 0xC
	0x03C0A5D8 MOV X1, X31
	0x03C0A5DC STR W8, [X31 + 0xC]
	0x03C0A5E0 BL 0x337B6D8
	0x03C0A5E4 SBFM W8, W20, 0x1C, 0x1F
	0x03C0A5E8 EOR W8, W8, W20, 0x4
	0x03C0A5EC EOR W8, W8, W21, 0x4
	0x03C0A5F0 EOR W8, W8, W21, 0x1C
	0x03C0A5F4 EOR W8, W8, W0, 0x0
	0x03C0A5F8 EOR W0, W22, W8, 0x2
	0x03C0A5FC LDP X20, X19, [X31 + 0x20]
	0x03C0A600 LDP X22, X21, [X31 + 0x10]
	0x03C0A604 LDR X30, [X31], #0x30
	0x03C0A608 RET
	0x03C0A60C SUB X31, X31, 0x170
	0x03C0A610 STR X29, [X31 + 0x140]
	0x03C0A614 STP X30, X21, [X31 + 0x150]
	0x03C0A618 STP X20, X19, [X31 + 0x160]
	0x03C0A61C CBZ X0, 0x3C0A70C
	0x03C0A620 ADRP X21, 0x7DA000
	0x03C0A624 LDR X8, [X21 + 0xD8]
	0x03C0A628 MOV X19, X1
	0x03C0A62C MOV X20, X0
	0x03C0A630 MOVI V0.2D, 0x0
	0x03C0A634 STP V0, V0, [X31 + 0x120]
	0x03C0A638 STP V0, V0, [X31 + 0x100]
	0x03C0A63C CBNZ X8, 0x3C0A654
	0x03C0A640 ADRP X0, 0xFFFFFFFFFCF00000
	0x03C0A644 ADD X0, X0, 0xE86
	0x03C0A648 BL 0x1C16CB8
	0x03C0A64C MOV X8, X0
	0x03C0A650 STR X0, [X21 + 0xD8]
	0x03C0A654 ADD X1, X31, 0x100
	0x03C0A658 MOV X0, X20
	0x03C0A65C BLR X8
	0x03C0A660 ADRP X21, 0x7DA000
	0x03C0A664 LDP V0, V1, [X31 + 0x100]
	0x03C0A668 LDP V2, V3, [X31 + 0x120]
	0x03C0A66C LDR X8, [X21 + 0xC8]
	0x03C0A670 MOVI V4.2D, 0x0
	0x03C0A674 STP V4, V4, [X31 + 0x120]
	0x03C0A678 STP V0, V1, [X31 + 0xC0]
	0x03C0A67C STP V2, V3, [X31 + 0xE0]
	0x03C0A680 STP V4, V4, [X31 + 0x100]
	0x03C0A684 CBNZ X8, 0x3C0A69C
	0x03C0A688 ADRP X0, 0xFFFFFFFFFCF0C000
	0x03C0A68C ADD X0, X0, 0x48A
	0x03C0A690 BL 0x1C16CB8
	0x03C0A694 MOV X8, X0
	0x03C0A698 STR X0, [X21 + 0xC8]
	0x03C0A69C ADD X1, X31, 0x100
	0x03C0A6A0 MOV X0, X20
	0x03C0A6A4 BLR X8
	0x03C0A6A8 LDP V0, V1, [X31 + 0x100]
	0x03C0A6AC LDP V2, V3, [X31 + 0x120]
	0x03C0A6B0 ADD X8, X31, 0x100
	0x03C0A6B4 ADD X0, X31, 0x80
	0x03C0A6B8 STP V0, V1, [X31 + 0x40]
	0x03C0A6BC LDP V0, V1, [X31 + 0xC0]
	0x03C0A6C0 STP V2, V3, [X31 + 0x60]
	0x03C0A6C4 LDP V2, V3, [X31 + 0xE0]
	0x03C0A6C8 ADD X1, X31, 0x40
	0x03C0A6CC MOV X2, X31
	0x03C0A6D0 STP V0, V1, [X31 + 0x80]
	0x03C0A6D4 STP V2, V3, [X31 + 0xA0]
	0x03C0A6D8 BL 0x3C27F74
	0x03C0A6DC LDP V0, V1, [X31 + 0x100]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x7DB000
	014 Move X23, 0x512000
	015 Move X20, 0x555000
	016 Move X19, 0x555000
	017 Move X22, 0x555000
	018 Move W8, [X21+483]
	019 Move X23, [X23+2664]
	020 Move X20, [X20+3112]
	021 Move X19, [X19+3120]
	022 Move X22, [X22+3128]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {92}
	027 Move X0, 0x555000
	028 Move X0, [X0+3136]
	029 Call 0x1C17CF4
	030 Move X0, 0x555000
	031 Move X0, [X0+3120]
	032 Call 0x1C17CF4
	033 Move X0, 0x555000
	034 Move X0, [X0+3112]
	035 Call 0x1C17CF4
	036 Move X0, 0x512000
	037 Move X0, [X0+2664]
	038 Call 0x1C17CF4
	039 Move X0, 0x555000
	040 Move X0, [X0+3128]
	041 Call 0x1C17CF4
	042 Move X0, 0x555000
	043 Move X0, [X0+3144]
	044 Call 0x1C17CF4
	045 Move X0, 0x4EF000
	046 Move X0, [X0+1016]
	047 Call 0x1C17CF4
	048 Move X0, 0x555000
	049 Move X0, [X0+3152]
	050 Call 0x1C17CF4
	051 Move X0, 0x51F000
	052 Move X0, [X0+2544]
	053 Call 0x1C17CF4
	054 Move X0, 0x4EB000
	055 Move X0, [X0+680]
	056 Call 0x1C17CF4
	057 Move X0, 0x555000
	058 Move X0, [X0+3160]
	059 Call 0x1C17CF4
	060 Move X0, 0x4EA000
	061 Move X0, [X0+3552]
	062 Call 0x1C17CF4
	063 Move X0, 0x514000
	064 Move X0, [X0+2824]
	065 Call 0x1C17CF4
	066 Move X0, 0x555000
	067 Move X0, [X0+3168]
	068 Call 0x1C17CF4
	069 Move X0, 0x530000
	070 Move X0, [X0+3104]
	071 Call 0x1C17CF4
	072 Move X0, 0x4EB000
	073 Move X0, [X0+3784]
	074 Call 0x1C17CF4
	075 Move X0, 0x555000
	076 Move X0, [X0+3176]
	077 Call 0x1C17CF4
	078 Move X0, 0x555000
	079 Move X0, [X0+3184]
	080 Call 0x1C17CF4
	081 Move X0, 0x51C000
	082 Move X0, [X0+3824]
	083 Call 0x1C17CF4
	084 Move X0, 0x555000
	085 Move X0, [X0+3192]
	086 Call 0x1C17CF4
	087 Move X0, 0x555000
	088 Move X0, [X0+3200]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X21+483], W8
	092 Move X8, [X23]
	093 Move X9, -51503104
	094 Move V0, [X9+64]
	095 Move X8, [X8+184]
	096 Move [X8], V0
	097 Move X0, [X20]
	098 Call 0x1C17F10
	099 Move X1, [X19]
	100 Move X19, X0
	101 Call Dictionary`2<Object, Object>..ctor, X0
	102 Move X0, [X22]
	103 Call 0x1C17F10
	104 Move X1, X31
	105 Move X20, X0
	106 Call Object..ctor, X0
	107 Move X8, -51499008
	108 Move V0, [X8+184]
	109 Move [X20+1], V0
	110 Compare X19, 0
	111 JumpIfEqual {364}
	112 Move X8, 0x4EB000
	113 Move X23, 0x555000
	114 Move X8, [X8+680]
	115 Move X23, [X23+3136]
	116 Move X21, 0x4EF000
	117 Move X24, 0x4EB000
	118 Move X29, 0x51C000
	119 Move X28, 0x514000
	120 Move X27, 0x555000
	121 Move X26, 0x4EA000
	122 Move X25, 0x555000
	123 Move X21, [X21+1016]
	124 Move X24, [X24+3784]
	125 Move X29, [X29+3824]
	126 Move X28, [X28+2824]
	127 Move X27, [X27+3168]
	128 Move X26, [X26+3552]
	129 Move X25, [X25+3192]
	130 Move X1, [X8]
	131 Move X3, [X23]
	132 Move X0, X19
	133 Move X2, X20
	134 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	135 Move X0, [X22]
	136 Call 0x1C17F10
	137 Move X1, X31
	138 Move X20, X0
	139 Call Object..ctor, X0
	140 Move X8, -51499008
	141 Move V0, [X8+146]
	142 Move X0, X19
	143 Move X2, X20
	144 Move [X20+1], V0
	145 Move X1, [X21]
	146 Move X3, [X23]
	147 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	148 Move X0, [X22]
	149 Call 0x1C17F10
	150 Move X1, X31
	151 Move X20, X0
	152 Call Object..ctor, X0
	153 Move X8, -51499008
	154 Move V0, [X8+52]
	155 Move X0, X19
	156 Move X2, X20
	157 Move [X20+1], V0
	158 Move X1, [X24]
	159 Move X3, [X23]
	160 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	161 Move X0, [X22]
	162 Call 0x1C17F10
	163 Move X1, X31
	164 Move X20, X0
	165 Call Object..ctor, X0
	166 Move X8, -51499008
	167 Move V0, [X8+116]
	168 Move X0, X19
	169 Move X2, X20
	170 Move [X20+1], V0
	171 Move X1, [X29]
	172 Move X3, [X23]
	173 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	174 Move X0, [X22]
	175 Call 0x1C17F10
	176 Move X1, X31
	177 Move X20, X0
	178 Call Object..ctor, X0
	179 Move X8, -51499008
	180 Move V0, [X8+53]
	181 Move X0, X19
	182 Move X2, X20
	183 Move [X20+1], V0
	184 Move X1, [X28]
	185 Move X3, [X23]
	186 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	187 Move X0, [X22]
	188 Call 0x1C17F10
	189 Move X1, X31
	190 Move X20, X0
	191 Call Object..ctor, X0
	192 Move X8, -51507200
	193 Move V0, [X8+139]
	194 Move X0, X19
	195 Move X2, X20
	196 Move [X20+1], V0
	197 Move X1, [X27]
	198 Move X3, [X23]
	199 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	200 Move X0, [X22]
	201 Call 0x1C17F10
	202 Move X1, X31
	203 Move X20, X0
	204 Call Object..ctor, X0
	205 Move X8, -51499008
	206 Move V0, [X8+117]
	207 Move X0, X19
	208 Move X2, X20
	209 Move [X20+1], V0
	210 Move X1, [X26]
	211 Move X3, [X23]
	212 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	213 Move X0, [X22]
	214 Call 0x1C17F10
	215 Move X1, X31
	216 Move X20, X0
	217 Call Object..ctor, X0
	218 Move X8, -51503104
	219 Move V0, [X8+165]
	220 Move X0, X19
	221 Move X2, X20
	222 Move [X20+1], V0
	223 Move X1, [X25]
	224 Move X3, [X23]
	225 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	226 Move X0, [X22]
	227 Call 0x1C17F10
	228 Move X1, X31
	229 Move X20, X0
	230 Call Object..ctor, X0
	231 Move X8, -51499008
	232 Move V0, [X8+147]
	233 Move X8, 0x555000
	234 Move X0, X19
	235 Move X2, X20
	236 Move [X20+1], V0
	237 Move X8, [X8+3160]
	238 Move X3, [X23]
	239 Move X1, [X8]
	240 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	241 Move X0, [X22]
	242 Call 0x1C17F10
	243 Move X1, X31
	244 Move X20, X0
	245 Call Object..ctor, X0
	246 Move X8, -51503104
	247 Move V0, [X8+227]
	248 Move X8, 0x555000
	249 Move X0, X19
	250 Move X2, X20
	251 Move [X20+1], V0
	252 Move X8, [X8+3176]
	253 Move X3, [X23]
	254 Move X1, [X8]
	255 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	256 Move X0, [X22]
	257 Call 0x1C17F10
	258 Move X1, X31
	259 Move X20, X0
	260 Call Object..ctor, X0
	261 Move X8, -51507200
	262 Move V0, [X8+140]
	263 Move X8, 0x555000
	264 Move X0, X19
	265 Move X2, X20
	266 Move [X20+1], V0
	267 Move X8, [X8+3144]
	268 Move X3, [X23]
	269 Move X1, [X8]
	270 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	271 Move X0, [X22]
	272 Call 0x1C17F10
	273 Move X1, X31
	274 Move X20, X0
	275 Call Object..ctor, X0
	276 Move X8, -51494912
	277 Move V0, [X8+33]
	278 Move X8, 0x555000
	279 Move X0, X19
	280 Move X2, X20
	281 Move [X20+1], V0
	282 Move X8, [X8+3184]
	283 Move X3, [X23]
	284 Move X1, [X8]
	285 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	286 Move X0, [X22]
	287 Call 0x1C17F10
	288 Move X1, X31
	289 Move X20, X0
	290 Call Object..ctor, X0
	291 Move X8, -51503104
	292 Move V0, [X8+65]
	293 Move X8, 0x555000
	294 Move X0, X19
	295 Move X2, X20
	296 Move [X20+1], V0
	297 Move X8, [X8+3200]
	298 Move X3, [X23]
	299 Move X1, [X8]
	300 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	301 Move X0, [X22]
	302 Call 0x1C17F10
	303 Move X1, X31
	304 Move X20, X0
	305 Call Object..ctor, X0
	306 Move X8, -51507200
	307 Move V0, [X8+93]
	308 Move X8, 0x555000
	309 Move X0, X19
	310 Move X2, X20
	311 Move [X20+1], V0
	312 Move X8, [X8+3152]
	313 Move X3, [X23]
	314 Move X1, [X8]
	315 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	316 Move X0, [X22]
	317 Call 0x1C17F10
	318 Move X1, X31
	319 Move X20, X0
	320 Call Object..ctor, X0
	321 Move X8, -51499008
	322 Move V0, [X8+168]
	323 Move X8, 0x51F000
	324 Move X0, X19
	325 Move X2, X20
	326 Move [X20+1], V0
	327 Move X8, [X8+2544]
	328 Move X3, [X23]
	329 Move X1, [X8]
	330 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	331 Move X0, [X22]
	332 Call 0x1C17F10
	333 Move X1, X31
	334 Move X20, X0
	335 Call Object..ctor, X0
	336 Move X8, -51503104
	337 Move V0, [X8+39]
	338 Move X8, 0x530000
	339 Move X0, X19
	340 Move X2, X20
	341 Move [X20+1], V0
	342 Move X8, [X8+3104]
	343 Move X3, [X23]
	344 Move X1, [X8]
	345 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	346 Move X8, 0x512000
	347 Move X8, [X8+2664]
	348 Move X22, [X31+64]
	349 Move X21, [X31+72]
	350 Move X24, [X31+48]
	351 Move X23, [X31+56]
	352 Move X26, [X31+32]
	353 Move X25, [X31+40]
	354 Move X8, [X8]
	355 Move X28, [X31+16]
	356 Move X27, [X31+24]
	357 Move X8, [X8+184]
	358 Move [X8+16], X19
	359 Move X20, [X31+80]
	360 Move X19, [X31+88]
	361 Move X29, [X31+96]
	362 Move X30, [X31+104]
	363 Return 
	364 Call 0x1C17F20

