Type: UnityEngine.ExpressionEvaluator/Expression

Method: System.Void .ctor(System.String expression)

Disassembly:
	0x03C0A748 CBNZ X8, 0x3C0A760
	0x03C0A74C ADRP X0, 0xFFFFFFFFFCF0A000
	0x03C0A750 ADD X0, X0, 0x60B
	0x03C0A754 BL 0x1C16CB8
	0x03C0A758 MOV X8, X0
	0x03C0A75C STR X0, [X20 + 0x208]
	0x03C0A760 ADD X1, X31, 0x0
	0x03C0A764 MOV X0, X19
	0x03C0A768 BLR X8
	0x03C0A76C LDP X20, X19, [X31 + 0x50]
	0x03C0A770 LDR X30, [X31 + 0x40]
	0x03C0A774 ADD X31, X31, 0x60
	0x03C0A778 RET
	0x03C0A77C ADRP X0, 0x4EE000
	0x03C0A780 LDR X0, [X0 + 0x528]
	0x03C0A784 BL 0x1C16D08
	0x03C0A788 BL 0x1C16F10
	0x03C0A78C MOV X19, X0
	0x03C0A790 ADRP X0, 0x554000
	0x03C0A794 LDR X0, [X0 + 0xC90]
	0x03C0A798 BL 0x1C16D08
	0x03C0A79C MOV X1, X0
	0x03C0A7A0 MOV X0, X19
	0x03C0A7A4 MOV X2, X31
	0x03C0A7A8 BL 0x330E100
	0x03C0A7AC B 0x3C0A7F4
	0x03C0A7B0 ADRP X0, 0x4F1000
	0x03C0A7B4 LDR X0, [X0 + 0x578]
	0x03C0A7B8 BL 0x1C16D08
	0x03C0A7BC BL 0x1C16F10
	0x03C0A7C0 MOV X19, X0
	0x03C0A7C4 ADRP X0, 0x554000
	0x03C0A7C8 LDR X0, [X0 + 0xC98]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7DB000
	007 Move X21, 0x512000
	008 Move W8, [X22+484]
	009 Move X21, [X21+2664]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x512000
	017 Move X0, [X0+2664]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+484], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Object..ctor, X0
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Call ExpressionEvaluator.PreFormatExpression, X0
	031 Add X1, X19, 24
	032 Call ExpressionEvaluator.ExpressionToTokens, X0, X1
	033 Call ExpressionEvaluator.FixUnaryOperators, X0
	034 Call ExpressionEvaluator.InfixToRPN, X0
	035 Move [X19+16], X0
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 

Method: System.Boolean Evaluate(ref T value, System.Int32 index = 0, System.Int32 count = 1)

Disassembly:
	0x022B5848 B.NE 0x22B590C
	0x022B584C LDR X8, [X19 + 0x38]
	0x022B5850 SUB X3, X29, 0x10
	0x022B5854 MOV X2, X31
	0x022B5858 MOV X4, X26
	0x022B585C LDR X1, [X8 + 0x10]
	0x022B5860 LDR X0, [X1]
	0x022B5864 STUR X26, [X29 - 0x10]
	0x022B5868 LDR X8, [X1 + 0x10]
	0x022B586C BLR X8
	0x022B5870 MOV X0, X25
	0x022B5874 MOV X1, X26
	0x022B5878 MOV X2, X23
	0x022B587C BL 0x3EB1AC0
	0x022B5880 LDR X8, [X19 + 0x38]
	0x022B5884 MOV X0, X25
	0x022B5888 LDR X1, [X8 + 0x20]
	0x022B588C LDR X8, [X1]
	0x022B5890 BLR X8
	0x022B5894 LDR X8, [X20 + 0x8]
	0x022B5898 MOV X19, X0
	0x022B589C MOV X1, X31
	0x022B58A0 MOV X0, X8
	0x022B58A4 BL 0x3800384
	0x022B58A8 MOV X1, X0
	0x022B58AC SXTW X2, W21
	0x022B58B0 MOV X0, X19
	0x022B58B4 MOV X3, X31
	0x022B58B8 BL 0x3BFF954
	0x022B58BC MOV X0, X24
	0x022B58C0 MOV X1, X25
	0x022B58C4 MOV X2, X23
	0x022B58C8 BL 0x3EB1AC0
	0x022B58CC MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X4+56]
	008 Move X22, X4
	009 Move W19, W3
	010 Move W20, W2
	011 Move X21, X1
	012 Move X23, X0
	013 Compare X8, 0
	014 JumpIfNotEqual {23}
	015 Move X0, 0x1E67000
	016 Move X0, [X0+2664]
	017 Call 0x1C17CF4
	018 Move X8, [X22+56]
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X22
	022 Call 0x1C5D6E0
	023 Move X8, 0x1E67000
	024 Move X8, [X8+2664]
	025 Move X23, [X23+16]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X8, [X22+56]
	032 Move X1, X21
	033 Move W2, W20
	034 Move W3, W19
	035 Move X4, [X8+8]
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X0, X23
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Call 0x21DFBDC, X0, X1, X2, X3
	044 Return X0

