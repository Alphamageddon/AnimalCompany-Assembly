Type: UnityEngine.Time

Method: System.Single get_time()

Disassembly:
	0x03C3D6C4 B 0x21DE850
	0x03C3D6C8 SUB X31, X31, 0x50
	0x03C3D6CC STP X30, X23, [X31 + 0x20]
	0x03C3D6D0 STP X22, X21, [X31 + 0x30]
	0x03C3D6D4 STP X20, X19, [X31 + 0x40]
	0x03C3D6D8 ADRP X23, 0x7A8000
	0x03C3D6DC ADRP X22, 0x522000
	0x03C3D6E0 LDRB W8, [X23 + 0x8AC]
	0x03C3D6E4 LDR X22, [X22 + 0x7A8]
	0x03C3D6E8 MOV X19, X2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7A9000
	004 Move X0, [X19+1960]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51679232
	008 Add X0, X0, 1113
	009 Call 0x1C17CB8
	010 Move [X19+1960], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Double get_timeAsDouble()

Disassembly:
	0x03C3D6EC MOV X20, X1
	0x03C3D6F0 MOV X21, X0
	0x03C3D6F4 TBNZ X8, 0x0, 0x3C3D718
	0x03C3D6F8 ADRP X0, 0x522000
	0x03C3D6FC LDR X0, [X0 + 0x7C0]
	0x03C3D700 BL 0x1C16CF4
	0x03C3D704 ADRP X0, 0x522000
	0x03C3D708 LDR X0, [X0 + 0x7A8]
	0x03C3D70C BL 0x1C16CF4
	0x03C3D710 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7A9000
	004 Move X0, [X19+1968]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51453952
	008 Add X0, X0, 2876
	009 Call 0x1C17CB8
	010 Move [X19+1968], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Single get_deltaTime()

Disassembly:
	0x03C3D714 STRB W8, [X23 + 0x8AC]
	0x03C3D718 LDR X0, [X22]
	0x03C3D71C STP X31, X31, [X31 + 0x10]
	0x03C3D720 STR X31, [X31 + 0x8]
	0x03C3D724 LDR W8, [X0 + 0xE0]
	0x03C3D728 CBNZ W8, 0x3C3D730
	0x03C3D72C BL 0x1C16DFC
	0x03C3D730 ADD X2, X31, 0x18
	0x03C3D734 MOV X0, X21
	0x03C3D738 MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7A9000
	004 Move X0, [X19+1976]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51564544
	008 Add X0, X0, 1393
	009 Call 0x1C17CB8
	010 Move [X19+1976], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Single get_fixedTime()

Disassembly:
	0x03C3D73C BL 0x3C3D644
	0x03C3D740 TBNZ X0, 0x0, 0x3C3D7B0
	0x03C3D744 LDR X8, [X31 + 0x18]
	0x03C3D748 CBZ X8, 0x3C3D7B0
	0x03C3D74C MOV X0, X20
	0x03C3D750 MOV X1, X31
	0x03C3D754 BL 0x32277A8
	0x03C3D758 TBNZ X0, 0x0, 0x3C3D7AC
	0x03C3D75C LDR X0, [X22]
	0x03C3D760 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7A9000
	004 Move X0, [X19+1984]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51654656
	008 Add X0, X0, 1318
	009 Call 0x1C17CB8
	010 Move [X19+1984], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Single get_unscaledTime()

Disassembly:
	0x03C3D764 CBNZ W8, 0x3C3D76C
	0x03C3D768 BL 0x1C16DFC
	0x03C3D76C ADD X1, X31, 0x10
	0x03C3D770 ADD X2, X31, 0x8
	0x03C3D774 MOV X0, X20
	0x03C3D778 BL 0x3C3D644
	0x03C3D77C TBZ X0, 0x0, 0x3C3D7AC
	0x03C3D780 LDP X8, X0, [X31 + 0x10]
	0x03C3D784 STR X8, [X19]
	0x03C3D788 CBZ X0, 0x3C3D7C8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7A9000
	004 Move X0, [X19+1992]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51613696
	008 Add X0, X0, 511
	009 Call 0x1C17CB8
	010 Move [X19+1992], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Single get_fixedUnscaledTime()

Disassembly:
	0x03C3D78C ADRP X8, 0x522000
	0x03C3D790 LDR X8, [X8 + 0x7C0]
	0x03C3D794 MOVZ W3, 0x1
	0x03C3D798 MOV X1, X19
	0x03C3D79C MOV W2, W31
	0x03C3D7A0 LDR X4, [X8]
	0x03C3D7A4 BL 0x22B48D0
	0x03C3D7A8 B 0x3C3D7B0
	0x03C3D7AC MOV W0, W31
	0x03C3D7B0 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7A9000
	004 Move X0, [X19+2000]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51572736
	008 Add X0, X0, 111
	009 Call 0x1C17CB8
	010 Move [X19+2000], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Single get_unscaledDeltaTime()

Disassembly:
	0x03C3D7B4 LDP X22, X21, [X31 + 0x30]
	0x03C3D7B8 LDP X30, X23, [X31 + 0x20]
	0x03C3D7BC AND W0, W0, 0x1
	0x03C3D7C0 ADD X31, X31, 0x50
	0x03C3D7C4 RET
	0x03C3D7C8 BL 0x1C16F20
	0x03C3D7CC STP X30, X23, [X31 - 0x30]!
	0x03C3D7D0 STP X22, X21, [X31 + 0x10]
	0x03C3D7D4 STP X20, X19, [X31 + 0x20]
	0x03C3D7D8 ADRP X23, 0x7A8000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7A9000
	004 Move X0, [X19+2008]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51482624
	008 Add X0, X0, 740
	009 Call 0x1C17CB8
	010 Move [X19+2008], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Single get_fixedDeltaTime()

Disassembly:
	0x03C3D7DC ADRP X22, 0x4DE000
	0x03C3D7E0 LDRB W8, [X23 + 0x8AD]
	0x03C3D7E4 LDR X22, [X22 + 0xA68]
	0x03C3D7E8 MOV X19, X2
	0x03C3D7EC MOV X20, X1
	0x03C3D7F0 MOV X21, X0
	0x03C3D7F4 TBNZ X8, 0x0, 0x3C3D818
	0x03C3D7F8 ADRP X0, 0x522000
	0x03C3D7FC LDR X0, [X0 + 0x7C8]
	0x03C3D800 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7A9000
	004 Move X0, [X19+2016]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51507200
	008 Add X0, X0, 661
	009 Call 0x1C17CB8
	010 Move [X19+2016], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void set_fixedDeltaTime(System.Single value)

Disassembly:
	0x03C3D804 ADRP X0, 0x4DE000
	0x03C3D808 LDR X0, [X0 + 0xA68]
	0x03C3D80C BL 0x1C16CF4
	0x03C3D810 MOVZ W8, 0x1
	0x03C3D814 STRB W8, [X23 + 0x8AD]
	0x03C3D818 LDR X0, [X22]
	0x03C3D81C ADRP X22, 0x522000
	0x03C3D820 LDR W8, [X0 + 0xE0]
	0x03C3D824 LDR X22, [X22 + 0x7C8]
	0x03C3D828 CBNZ W8, 0x3C3D830
	0x03C3D82C BL 0x1C16DFC
	0x03C3D830 LDR X3, [X22]
	0x03C3D834 MOV X0, X21
	0x03C3D838 MOV X1, X20

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, 0x7A9000
	005 Move X0, [X19+2024]
	006 Move V8, V0
	007 Compare X0, 0
	008 JumpIfNotEqual {13}
	009 Move X0, -51470336
	010 Add X0, X0, 3888
	011 Call 0x1C17CB8
	012 Move [X19+2024], X0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Move V0, V8
	016 Move V8, [X31+32]
	017 CallNoReturn X0

Method: System.Single get_smoothDeltaTime()

Disassembly:
	0x03C3D83C MOV X2, X19
	0x03C3D840 LDP X20, X19, [X31 + 0x20]
	0x03C3D844 LDP X22, X21, [X31 + 0x10]
	0x03C3D848 LDP X30, X23, [X31], #0x30
	0x03C3D84C B 0x21DE970
	0x03C3D850 SUB X31, X31, 0x50
	0x03C3D854 STP X30, X23, [X31 + 0x20]
	0x03C3D858 STP X22, X21, [X31 + 0x30]
	0x03C3D85C STP X20, X19, [X31 + 0x40]
	0x03C3D860 ADRP X23, 0x7A8000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7A9000
	004 Move X0, [X19+2032]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51630080
	008 Add X0, X0, 939
	009 Call 0x1C17CB8
	010 Move [X19+2032], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Single get_timeScale()

Disassembly:
	0x03C3D864 ADRP X22, 0x522000
	0x03C3D868 LDRB W8, [X23 + 0x8AE]
	0x03C3D86C LDR X22, [X22 + 0x7A8]
	0x03C3D870 MOV X19, X2
	0x03C3D874 MOV X20, X1
	0x03C3D878 MOV X21, X0
	0x03C3D87C TBNZ X8, 0x0, 0x3C3D8A0
	0x03C3D880 ADRP X0, 0x522000
	0x03C3D884 LDR X0, [X0 + 0x7D0]
	0x03C3D888 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7A9000
	004 Move X0, [X19+2040]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51679232
	008 Add X0, X0, 1142
	009 Call 0x1C17CB8
	010 Move [X19+2040], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Int32 get_frameCount()

Disassembly:
	0x03C3D88C ADRP X0, 0x522000
	0x03C3D890 LDR X0, [X0 + 0x7A8]
	0x03C3D894 BL 0x1C16CF4
	0x03C3D898 MOVZ W8, 0x1
	0x03C3D89C STRB W8, [X23 + 0x8AE]
	0x03C3D8A0 LDR X0, [X22]
	0x03C3D8A4 STP X31, X31, [X31 + 0x10]
	0x03C3D8A8 STR X31, [X31 + 0x8]
	0x03C3D8AC LDR W8, [X0 + 0xE0]
	0x03C3D8B0 CBNZ W8, 0x3C3D8B8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7A9000
	004 Move X0, [X19+2048]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51507200
	008 Add X0, X0, 700
	009 Call 0x1C17CB8
	010 Move [X19+2048], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Int32 get_renderedFrameCount()

Disassembly:
	0x03C3D8B4 BL 0x1C16DFC
	0x03C3D8B8 ADD X2, X31, 0x18
	0x03C3D8BC MOV X0, X21
	0x03C3D8C0 MOV X1, X19
	0x03C3D8C4 BL 0x3C3D7CC
	0x03C3D8C8 TBNZ X0, 0x0, 0x3C3D938
	0x03C3D8CC LDR X8, [X31 + 0x18]
	0x03C3D8D0 CBZ X8, 0x3C3D938
	0x03C3D8D4 MOV X0, X20
	0x03C3D8D8 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7A9000
	004 Move X0, [X19+2056]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51589120
	008 Add X0, X0, 999
	009 Call 0x1C17CB8
	010 Move [X19+2056], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Single get_realtimeSinceStartup()

Disassembly:
	0x03C3B708 LDP X30, X21, [X31], #0x20
	0x03C3B70C BR X2
	0x03C3B710 STR D8, [X31 - 0x30]!
	0x03C3B714 STP X30, X21, [X31 + 0x10]
	0x03C3B718 STP X20, X19, [X31 + 0x20]
	0x03C3B71C MOV X19, X0
	0x03C3B720 MOV X0, X1
	0x03C3B724 MOV X1, X31
	0x03C3B728 MOV V8.16B, V0.16B
	0x03C3B72C BL 0x3C124EC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x7AB000
	004 Move X0, [X19+2064]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51527680
	008 Add X0, X0, 2964
	009 Call 0x1C17CB8
	010 Move [X19+2064], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

