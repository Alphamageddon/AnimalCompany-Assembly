Type: UnityEngine.HDROutputSettings

Method: System.Void .ctor()

Disassembly:
	0x03C116D4 ADRP X0, 0xFFFFFFFFFCF0F000
	0x03C116D8 ADD X0, X0, 0x878
	0x03C116DC BL 0x1C16CB8
	0x03C116E0 MOV X8, X0
	0x03C116E4 STR X0, [X20 + 0x5F8]
	0x03C116E8 ADD X1, X31, 0x0
	0x03C116EC MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move [X19+16], W31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void .ctor(System.Int32 displayIndex)

Disassembly:
	0x03C116F0 BLR X8
	0x03C116F4 LDP S0, S1, [X31]
	0x03C116F8 LDP S2, S3, [X31 + 0x8]
	0x03C116FC LDP X20, X19, [X31 + 0x20]
	0x03C11700 LDR X30, [X31 + 0x10]
	0x03C11704 ADD X31, X31, 0x30
	0x03C11708 RET
	0x03C1170C STP X30, X21, [X31 - 0x20]!
	0x03C11710 STP X20, X19, [X31 + 0x10]
	0x03C11714 ADRP X21, 0x7D3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: UnityEngine.HDROutputSettings get_main()

Disassembly:
	0x03C11718 LDR X2, [X21 + 0x5F8]
	0x03C1171C MOV X19, X1
	0x03C11720 MOV X20, X0
	0x03C11724 CBNZ X2, 0x3C1173C
	0x03C11728 ADRP X0, 0xFFFFFFFFFCF0F000
	0x03C1172C ADD X0, X0, 0x878
	0x03C11730 BL 0x1C16CB8
	0x03C11734 MOV X2, X0
	0x03C11738 STR X0, [X21 + 0x5F8]
	0x03C1173C MOV X0, X20
	0x03C11740 MOV X1, X19
	0x03C11744 LDP X20, X19, [X31 + 0x10]
	0x03C11748 LDP X30, X21, [X31], #0x20
	0x03C1174C BR X2
	0x03C11750 SUB X31, X31, 0x30
	0x03C11754 STR X30, [X31 + 0x10]
	0x03C11758 STP X20, X19, [X31 + 0x20]
	0x03C1175C ADRP X20, 0x7D3000
	0x03C11760 LDR X8, [X20 + 0x600]
	0x03C11764 MOV X19, X0
	0x03C11768 STP S0, S1, [X31]
	0x03C1176C STP S2, S3, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D4000
	005 Move X19, 0x540000
	006 Move W8, [X20+1219]
	007 Move X19, [X19+1392]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x540000
	013 Move X0, [X0+1392]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1219], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Boolean get_active()

Disassembly:
	0x03C11770 CBNZ X8, 0x3C11788
	0x03C11774 ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C11778 ADD X0, X0, 0x141
	0x03C1177C BL 0x1C16CB8
	0x03C11780 MOV X8, X0
	0x03C11784 STR X0, [X20 + 0x600]
	0x03C11788 ADD X1, X31, 0x0
	0x03C1178C MOV X0, X19
	0x03C11790 BLR X8
	0x03C11794 LDP X20, X19, [X31 + 0x20]
	0x03C11798 LDR X30, [X31 + 0x10]
	0x03C1179C ADD X31, X31, 0x30
	0x03C117A0 RET
	0x03C117A4 STP X30, X21, [X31 - 0x20]!
	0x03C117A8 STP X20, X19, [X31 + 0x10]
	0x03C117AC ADRP X21, 0x7D3000
	0x03C117B0 LDR X2, [X21 + 0x600]
	0x03C117B4 MOV X19, X1
	0x03C117B8 MOV X20, X0
	0x03C117BC CBNZ X2, 0x3C117D4
	0x03C117C0 ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C117C4 ADD X0, X0, 0x141
	0x03C117C8 BL 0x1C16CB8
	0x03C117CC MOV X2, X0
	0x03C117D0 STR X0, [X21 + 0x600]
	0x03C117D4 MOV X0, X20
	0x03C117D8 MOV X1, X19
	0x03C117DC LDP X20, X19, [X31 + 0x10]
	0x03C117E0 LDP X30, X21, [X31], #0x20
	0x03C117E4 BR X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D4000
	006 Move X20, 0x540000
	007 Move W8, [X21+1220]
	008 Move X20, [X20+1392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x540000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1220], W8
	019 Move X0, [X20]
	020 Move W19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x7D4000
	026 Move X1, [X20+1232]
	027 Compare X1, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51470336
	030 Add X0, X0, 4032
	031 Call 0x1C17CB8
	032 Move X1, X0
	033 Move [X20+1232], X0
	034 Move W0, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X1

Method: System.Boolean get_available()

Disassembly:
	0x03C11824 LDP X30, X21, [X31], #0x20
	0x03C11828 BR X2
	0x03C1182C STP X30, X21, [X31 - 0x20]!
	0x03C11830 STP X20, X19, [X31 + 0x10]
	0x03C11834 ADRP X21, 0x7D3000
	0x03C11838 LDR X2, [X21 + 0x5C0]
	0x03C1183C MOV X19, X1
	0x03C11840 MOV X20, X0
	0x03C11844 CBNZ X2, 0x3C1185C
	0x03C11848 ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C1184C ADD X0, X0, 0xFD
	0x03C11850 BL 0x1C16CB8
	0x03C11854 MOV X2, X0
	0x03C11858 STR X0, [X21 + 0x5C0]
	0x03C1185C MOV X0, X20
	0x03C11860 MOV X1, X19
	0x03C11864 LDP X20, X19, [X31 + 0x10]
	0x03C11868 LDP X30, X21, [X31], #0x20
	0x03C1186C BR X2
	0x03C11870 STP X30, X21, [X31 - 0x20]!
	0x03C11874 STP X20, X19, [X31 + 0x10]
	0x03C11878 ADRP X21, 0x7D3000
	0x03C1187C LDR X2, [X21 + 0x5C0]
	0x03C11880 MOV X19, X1
	0x03C11884 MOV X20, X0
	0x03C11888 CBNZ X2, 0x3C118A0
	0x03C1188C ADRP X0, 0xFFFFFFFFFCEFE000
	0x03C11890 ADD X0, X0, 0xFD
	0x03C11894 BL 0x1C16CB8
	0x03C11898 MOV X2, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D4000
	006 Move X20, 0x540000
	007 Move W8, [X21+1221]
	008 Move X20, [X20+1392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x540000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1221], W8
	019 Move X0, [X20]
	020 Move W19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x7D4000
	026 Move X1, [X20+1240]
	027 Compare X1, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51355648
	030 Add X0, X0, 1815
	031 Call 0x1C17CB8
	032 Move X1, X0
	033 Move [X20+1240], X0
	034 Move W0, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X1

Method: System.Void set_automaticHDRTonemapping(System.Boolean value)

Disassembly:
	0x03C118D8 BL 0x1C16CB8
	0x03C118DC MOV X2, X0
	0x03C118E0 STR X0, [X21 + 0x5C8]
	0x03C118E4 MOV X0, X20
	0x03C118E8 MOV X1, X19
	0x03C118EC LDP X20, X19, [X31 + 0x10]
	0x03C118F0 LDP X30, X21, [X31], #0x20
	0x03C118F4 BR X2
	0x03C118F8 STP X30, X21, [X31 - 0x20]!
	0x03C118FC STP X20, X19, [X31 + 0x10]
	0x03C11900 ADRP X21, 0x7D3000
	0x03C11904 LDR X2, [X21 + 0x5C8]
	0x03C11908 MOV X19, X1
	0x03C1190C MOV X20, X0
	0x03C11910 CBNZ X2, 0x3C11928
	0x03C11914 ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C11918 ADD X0, X0, 0xF30
	0x03C1191C BL 0x1C16CB8
	0x03C11920 MOV X2, X0
	0x03C11924 STR X0, [X21 + 0x5C8]
	0x03C11928 MOV X0, X20
	0x03C1192C MOV X1, X19
	0x03C11930 LDP X20, X19, [X31 + 0x10]
	0x03C11934 LDP X30, X21, [X31], #0x20
	0x03C11938 BR X2
	0x03C1193C STP X30, X21, [X31 - 0x20]!
	0x03C11940 STP X20, X19, [X31 + 0x10]
	0x03C11944 ADRP X21, 0x7D3000
	0x03C11948 LDR X2, [X21 + 0x5D0]
	0x03C1194C MOV X19, X1
	0x03C11950 MOV X20, X0
	0x03C11954 CBNZ X2, 0x3C1196C
	0x03C11958 ADRP X0, 0xFFFFFFFFFCF09000
	0x03C1195C ADD X0, X0, 0x9AB

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D4000
	007 Move X21, 0x540000
	008 Move W8, [X22+1222]
	009 Move X21, [X21+1392]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x540000
	017 Move X0, [X0+1392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1222], W8
	021 Move X0, [X21]
	022 Move W20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x7D4000
	028 Move X2, [X21+1248]
	029 Compare X2, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51331072
	032 Add X0, X0, 3551
	033 Call 0x1C17CB8
	034 Move X2, X0
	035 Move [X21+1248], X0
	036 And W1, W19, 1
	037 Move W0, W20
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 CallNoReturn X2

Method: UnityEngine.ColorGamut get_displayColorGamut()

Disassembly:
	0x03C119A4 MOV X20, X0
	0x03C119A8 TBNZ X8, 0x0, 0x3C119C0
	0x03C119AC ADRP X0, 0x54D000
	0x03C119B0 LDR X0, [X0 + 0xD90]
	0x03C119B4 BL 0x1C16CF4
	0x03C119B8 MOVZ W8, 0x1
	0x03C119BC STRB W8, [X22 + 0x5D8]
	0x03C119C0 LDR X2, [X23]
	0x03C119C4 MOV X0, X21
	0x03C119C8 MOV X1, X19
	0x03C119CC BL 0x22226DC
	0x03C119D0 MOV X1, X31
	0x03C119D4 BL 0x33C693C
	0x03C119D8 ADRP X22, 0x7D3000
	0x03C119DC LDR X3, [X22 + 0x5E0]
	0x03C119E0 MOV X21, X0
	0x03C119E4 CBNZ X3, 0x3C119FC
	0x03C119E8 ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C119EC ADD X0, X0, 0xF80
	0x03C119F0 BL 0x1C16CB8
	0x03C119F4 MOV X3, X0
	0x03C119F8 STR X0, [X22 + 0x5E0]
	0x03C119FC MOV X0, X20
	0x03C11A00 MOV X1, X21
	0x03C11A04 MOV W2, W19
	0x03C11A08 LDP X20, X19, [X31 + 0x20]
	0x03C11A0C LDP X22, X21, [X31 + 0x10]
	0x03C11A10 LDP X30, X23, [X31], #0x30
	0x03C11A14 BR X3
	0x03C11A18 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D4000
	006 Move X20, 0x540000
	007 Move W8, [X21+1223]
	008 Move X20, [X20+1392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x540000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1223], W8
	019 Move X0, [X20]
	020 Move W19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x7D4000
	026 Move X1, [X20+1256]
	027 Compare X1, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51478528
	030 Add X0, X0, 3836
	031 Call 0x1C17CB8
	032 Move X1, X0
	033 Move [X20+1256], X0
	034 Move W0, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X1

Method: System.Single get_paperWhiteNits()

Disassembly:
	0x03C11A58 MOV W2, W19
	0x03C11A5C LDP X20, X19, [X31 + 0x20]
	0x03C11A60 LDP X22, X21, [X31 + 0x10]
	0x03C11A64 LDR X30, [X31], #0x30
	0x03C11A68 BR X3
	0x03C11A6C STR X30, [X31 - 0x30]!
	0x03C11A70 STP X22, X21, [X31 + 0x10]
	0x03C11A74 STP X20, X19, [X31 + 0x20]
	0x03C11A78 ADRP X22, 0x7D3000
	0x03C11A7C LDR X3, [X22 + 0x608]
	0x03C11A80 MOV W19, W2
	0x03C11A84 MOV W20, W1
	0x03C11A88 MOV X21, X0
	0x03C11A8C CBNZ X3, 0x3C11AA4
	0x03C11A90 ADRP X0, 0xFFFFFFFFFCF0D000
	0x03C11A94 ADD X0, X0, 0xA3E
	0x03C11A98 BL 0x1C16CB8
	0x03C11A9C MOV X3, X0
	0x03C11AA0 STR X0, [X22 + 0x608]
	0x03C11AA4 MOV X0, X21
	0x03C11AA8 MOV W1, W20
	0x03C11AAC MOV W2, W19
	0x03C11AB0 LDP X20, X19, [X31 + 0x20]
	0x03C11AB4 LDP X22, X21, [X31 + 0x10]
	0x03C11AB8 LDR X30, [X31], #0x30
	0x03C11ABC BR X3
	0x03C11AC0 STR D8, [X31 - 0x30]!
	0x03C11AC4 STP X30, X21, [X31 + 0x10]
	0x03C11AC8 STP X20, X19, [X31 + 0x20]
	0x03C11ACC ADRP X21, 0x7D3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D4000
	006 Move X20, 0x540000
	007 Move W8, [X21+1224]
	008 Move X20, [X20+1392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x540000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1224], W8
	019 Move X0, [X20]
	020 Move W19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x7D4000
	026 Move X1, [X20+1264]
	027 Compare X1, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51281920
	030 Add X0, X0, 1157
	031 Call 0x1C17CB8
	032 Move X1, X0
	033 Move [X20+1264], X0
	034 Move W0, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X1

Method: System.Int32 get_maxFullFrameToneMapLuminance()

Disassembly:
	0x03C11B0C LDR V8, [X31], #0x30
	0x03C11B10 BR X2
	0x03C11B14 SUB X31, X31, 0x30
	0x03C11B18 STP X30, X21, [X31 + 0x10]
	0x03C11B1C STP X20, X19, [X31 + 0x20]
	0x03C11B20 ADRP X21, 0x7D3000
	0x03C11B24 LDR X8, [X21 + 0x660]
	0x03C11B28 MOV W19, W1
	0x03C11B2C MOV X20, X0
	0x03C11B30 STP S0, S1, [X31]
	0x03C11B34 STP S2, S3, [X31 + 0x8]
	0x03C11B38 CBNZ X8, 0x3C11B50
	0x03C11B3C ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C11B40 ADD X0, X0, 0xFF7
	0x03C11B44 BL 0x1C16CB8
	0x03C11B48 MOV X8, X0
	0x03C11B4C STR X0, [X21 + 0x660]
	0x03C11B50 ADD X2, X31, 0x0
	0x03C11B54 MOV X0, X20
	0x03C11B58 MOV W1, W19
	0x03C11B5C BLR X8
	0x03C11B60 LDP X20, X19, [X31 + 0x20]
	0x03C11B64 LDP X30, X21, [X31 + 0x10]
	0x03C11B68 ADD X31, X31, 0x30
	0x03C11B6C RET
	0x03C11B70 STR X30, [X31 - 0x30]!
	0x03C11B74 STP X22, X21, [X31 + 0x10]
	0x03C11B78 STP X20, X19, [X31 + 0x20]
	0x03C11B7C ADRP X22, 0x7D3000
	0x03C11B80 LDR X3, [X22 + 0x660]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D4000
	006 Move X20, 0x540000
	007 Move W8, [X21+1225]
	008 Move X20, [X20+1392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x540000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1225], W8
	019 Move X0, [X20]
	020 Move W19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x7D4000
	026 Move X1, [X20+1272]
	027 Compare X1, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51372032
	030 Add X0, X0, 2586
	031 Call 0x1C17CB8
	032 Move X1, X0
	033 Move [X20+1272], X0
	034 Move W0, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X1

Method: System.Int32 get_maxToneMapLuminance()

Disassembly:
	0x03C11BC0 BR X3
	0x03C11BC4 SUB X31, X31, 0x30
	0x03C11BC8 STP X30, X21, [X31 + 0x10]
	0x03C11BCC STP X20, X19, [X31 + 0x20]
	0x03C11BD0 ADRP X21, 0x7D3000
	0x03C11BD4 LDR X8, [X21 + 0x668]
	0x03C11BD8 MOV W19, W1
	0x03C11BDC MOV X20, X0
	0x03C11BE0 STP S0, S1, [X31]
	0x03C11BE4 STP S2, S3, [X31 + 0x8]
	0x03C11BE8 CBNZ X8, 0x3C11C00
	0x03C11BEC ADRP X0, 0xFFFFFFFFFCF03000
	0x03C11BF0 ADD X0, X0, 0x80C
	0x03C11BF4 BL 0x1C16CB8
	0x03C11BF8 MOV X8, X0
	0x03C11BFC STR X0, [X21 + 0x668]
	0x03C11C00 ADD X2, X31, 0x0
	0x03C11C04 MOV X0, X20
	0x03C11C08 MOV W1, W19
	0x03C11C0C BLR X8
	0x03C11C10 LDP X20, X19, [X31 + 0x20]
	0x03C11C14 LDP X30, X21, [X31 + 0x10]
	0x03C11C18 ADD X31, X31, 0x30
	0x03C11C1C RET
	0x03C11C20 STR X30, [X31 - 0x30]!
	0x03C11C24 STP X22, X21, [X31 + 0x10]
	0x03C11C28 STP X20, X19, [X31 + 0x20]
	0x03C11C2C ADRP X22, 0x7D3000
	0x03C11C30 LDR X3, [X22 + 0x668]
	0x03C11C34 MOV X19, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D4000
	006 Move X20, 0x540000
	007 Move W8, [X21+1226]
	008 Move X20, [X20+1392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x540000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1226], W8
	019 Move X0, [X20]
	020 Move W19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x7D4000
	026 Move X1, [X20+1280]
	027 Compare X1, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51425280
	030 Add X0, X0, 102
	031 Call 0x1C17CB8
	032 Move X1, X0
	033 Move [X20+1280], X0
	034 Move W0, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X1

Method: System.Int32 get_minToneMapLuminance()

Disassembly:
	0x03C11C74 STR X30, [X31 - 0x30]!
	0x03C11C78 STP X22, X21, [X31 + 0x10]
	0x03C11C7C STP X20, X19, [X31 + 0x20]
	0x03C11C80 ADRP X22, 0x7D3000
	0x03C11C84 LDR X3, [X22 + 0x670]
	0x03C11C88 MOV X19, X2
	0x03C11C8C MOV W20, W1
	0x03C11C90 MOV X21, X0
	0x03C11C94 CBNZ X3, 0x3C11CAC
	0x03C11C98 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C11C9C ADD X0, X0, 0x866
	0x03C11CA0 BL 0x1C16CB8
	0x03C11CA4 MOV X3, X0
	0x03C11CA8 STR X0, [X22 + 0x670]
	0x03C11CAC MOV X0, X21
	0x03C11CB0 MOV W1, W20
	0x03C11CB4 MOV X2, X19
	0x03C11CB8 LDP X20, X19, [X31 + 0x20]
	0x03C11CBC LDP X22, X21, [X31 + 0x10]
	0x03C11CC0 LDR X30, [X31], #0x30
	0x03C11CC4 BR X3
	0x03C11CC8 STR X30, [X31 - 0x30]!
	0x03C11CCC STP X22, X21, [X31 + 0x10]
	0x03C11CD0 STP X20, X19, [X31 + 0x20]
	0x03C11CD4 ADRP X22, 0x7D3000
	0x03C11CD8 LDR X3, [X22 + 0x670]
	0x03C11CDC MOV X19, X2
	0x03C11CE0 MOV W20, W1
	0x03C11CE4 MOV X21, X0
	0x03C11CE8 CBNZ X3, 0x3C11D00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D4000
	006 Move X20, 0x540000
	007 Move W8, [X21+1227]
	008 Move X20, [X20+1392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x540000
	015 Move X0, [X0+1392]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1227], W8
	019 Move X0, [X20]
	020 Move W19, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x7D4000
	026 Move X1, [X20+1288]
	027 Compare X1, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51511296
	030 Add X0, X0, 3389
	031 Call 0x1C17CB8
	032 Move X1, X0
	033 Move [X20+1288], X0
	034 Move W0, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X1

Method: System.Void RequestHDRModeChange(System.Boolean enabled)

Disassembly:
	0x03C11D28 ADRP X22, 0x7D3000
	0x03C11D2C LDR X3, [X22 + 0x618]
	0x03C11D30 MOV X19, X2
	0x03C11D34 MOV W20, W1
	0x03C11D38 MOV X21, X0
	0x03C11D3C CBNZ X3, 0x3C11D54
	0x03C11D40 ADRP X0, 0xFFFFFFFFFCF1B000
	0x03C11D44 ADD X0, X0, 0x6D1
	0x03C11D48 BL 0x1C16CB8
	0x03C11D4C MOV X3, X0
	0x03C11D50 STR X0, [X22 + 0x618]
	0x03C11D54 MOV X0, X21
	0x03C11D58 MOV W1, W20
	0x03C11D5C MOV X2, X19
	0x03C11D60 LDP X20, X19, [X31 + 0x20]
	0x03C11D64 LDP X22, X21, [X31 + 0x10]
	0x03C11D68 LDR X30, [X31], #0x30
	0x03C11D6C BR X3
	0x03C11D70 STP X30, X23, [X31 - 0x30]!
	0x03C11D74 STP X22, X21, [X31 + 0x10]
	0x03C11D78 STP X20, X19, [X31 + 0x20]
	0x03C11D7C ADRP X23, 0x7D3000
	0x03C11D80 LDR X4, [X23 + 0x620]
	0x03C11D84 MOV W19, W3
	0x03C11D88 MOV X20, X2
	0x03C11D8C MOV W21, W1
	0x03C11D90 MOV X22, X0
	0x03C11D94 CBNZ X4, 0x3C11DAC
	0x03C11D98 ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C11D9C ADD X0, X0, 0xFD6
	0x03C11DA0 BL 0x1C16CB8
	0x03C11DA4 MOV X4, X0
	0x03C11DA8 STR X0, [X23 + 0x620]
	0x03C11DAC MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7D4000
	007 Move X21, 0x540000
	008 Move W8, [X22+1228]
	009 Move X21, [X21+1392]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x540000
	017 Move X0, [X0+1392]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1228], W8
	021 Move X0, [X21]
	022 Move W20, [X20+16]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x7D4000
	028 Move X2, [X21+1296]
	029 Compare X2, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51380224
	032 Add X0, X0, 3906
	033 Call 0x1C17CB8
	034 Move X2, X0
	035 Move [X21+1296], X0
	036 And W1, W19, 1
	037 Move W0, W20
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 CallNoReturn X2

Method: System.Boolean GetActive(System.Int32 displayIndex)

Disassembly:
	0x03C117E8 STP X30, X21, [X31 - 0x20]!
	0x03C117EC STP X20, X19, [X31 + 0x10]
	0x03C117F0 ADRP X21, 0x7D3000
	0x03C117F4 LDR X2, [X21 + 0x5B8]
	0x03C117F8 MOV W19, W1
	0x03C117FC MOV X20, X0
	0x03C11800 CBNZ X2, 0x3C11818
	0x03C11804 ADRP X0, 0xFFFFFFFFFCEE4000
	0x03C11808 ADD X0, X0, 0x189
	0x03C1180C BL 0x1C16CB8
	0x03C11810 MOV X2, X0
	0x03C11814 STR X0, [X21 + 0x5B8]
	0x03C11818 MOV X0, X20
	0x03C1181C MOV W1, W19
	0x03C11820 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D4000
	005 Move X1, [X20+1232]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51470336
	010 Add X0, X0, 4032
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1232], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean GetAvailable(System.Int32 displayIndex)

Disassembly:
	0x03C1189C STR X0, [X21 + 0x5C0]
	0x03C118A0 MOV X0, X20
	0x03C118A4 MOV X1, X19
	0x03C118A8 LDP X20, X19, [X31 + 0x10]
	0x03C118AC LDP X30, X21, [X31], #0x20
	0x03C118B0 BR X2
	0x03C118B4 STP X30, X21, [X31 - 0x20]!
	0x03C118B8 STP X20, X19, [X31 + 0x10]
	0x03C118BC ADRP X21, 0x7D3000
	0x03C118C0 LDR X2, [X21 + 0x5C8]
	0x03C118C4 MOV X19, X1
	0x03C118C8 MOV X20, X0
	0x03C118CC CBNZ X2, 0x3C118E4
	0x03C118D0 ADRP X0, 0xFFFFFFFFFCEE1000
	0x03C118D4 ADD X0, X0, 0xF30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D4000
	005 Move X1, [X20+1240]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51355648
	010 Add X0, X0, 1815
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1240], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetAutomaticHDRTonemapping(System.Int32 displayIndex, System.Boolean scripted)

Disassembly:
	0x03C11960 BL 0x1C16CB8
	0x03C11964 MOV X2, X0
	0x03C11968 STR X0, [X21 + 0x5D0]
	0x03C1196C MOV X0, X20
	0x03C11970 MOV X1, X19
	0x03C11974 LDP X20, X19, [X31 + 0x10]
	0x03C11978 LDP X30, X21, [X31], #0x20
	0x03C1197C BR X2
	0x03C11980 STP X30, X23, [X31 - 0x30]!
	0x03C11984 STP X22, X21, [X31 + 0x10]
	0x03C11988 STP X20, X19, [X31 + 0x20]
	0x03C1198C ADRP X22, 0x7D3000
	0x03C11990 ADRP X23, 0x54D000
	0x03C11994 LDRB W8, [X22 + 0x5D8]
	0x03C11998 LDR X23, [X23 + 0xD90]
	0x03C1199C MOV X19, X2
	0x03C119A0 MOV X21, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D4000
	006 Move X2, [X21+1248]
	007 Move W19, W1
	008 Move W20, W0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51331072
	012 Add X0, X0, 3551
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1248], X0
	016 And W1, W19, 1
	017 Move W0, W20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.ColorGamut GetDisplayColorGamut(System.Int32 displayIndex)

Disassembly:
	0x03C11A1C STP X22, X21, [X31 + 0x10]
	0x03C11A20 STP X20, X19, [X31 + 0x20]
	0x03C11A24 ADRP X22, 0x7D3000
	0x03C11A28 LDR X3, [X22 + 0x5E0]
	0x03C11A2C MOV W19, W2
	0x03C11A30 MOV X20, X1
	0x03C11A34 MOV X21, X0
	0x03C11A38 CBNZ X3, 0x3C11A50
	0x03C11A3C ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C11A40 ADD X0, X0, 0xF80
	0x03C11A44 BL 0x1C16CB8
	0x03C11A48 MOV X3, X0
	0x03C11A4C STR X0, [X22 + 0x5E0]
	0x03C11A50 MOV X0, X21
	0x03C11A54 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D4000
	005 Move X1, [X20+1256]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51478528
	010 Add X0, X0, 3836
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1256], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single GetPaperWhiteNits(System.Int32 displayIndex)

Disassembly:
	0x03C11AD0 LDR X2, [X21 + 0x610]
	0x03C11AD4 MOV V8.16B, V0.16B
	0x03C11AD8 MOV W19, W1
	0x03C11ADC MOV X20, X0
	0x03C11AE0 CBNZ X2, 0x3C11AF8
	0x03C11AE4 ADRP X0, 0xFFFFFFFFFCF09000
	0x03C11AE8 ADD X0, X0, 0x9E9
	0x03C11AEC BL 0x1C16CB8
	0x03C11AF0 MOV X2, X0
	0x03C11AF4 STR X0, [X21 + 0x610]
	0x03C11AF8 MOV X0, X20
	0x03C11AFC MOV W1, W19
	0x03C11B00 LDP X20, X19, [X31 + 0x20]
	0x03C11B04 LDP X30, X21, [X31 + 0x10]
	0x03C11B08 MOV V0.16B, V8.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D4000
	005 Move X1, [X20+1264]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51281920
	010 Add X0, X0, 1157
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1264], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 GetMaxFullFrameToneMapLuminance(System.Int32 displayIndex)

Disassembly:
	0x03C11B84 MOV X19, X2
	0x03C11B88 MOV W20, W1
	0x03C11B8C MOV X21, X0
	0x03C11B90 CBNZ X3, 0x3C11BA8
	0x03C11B94 ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C11B98 ADD X0, X0, 0xFF7
	0x03C11B9C BL 0x1C16CB8
	0x03C11BA0 MOV X3, X0
	0x03C11BA4 STR X0, [X22 + 0x660]
	0x03C11BA8 MOV X0, X21
	0x03C11BAC MOV W1, W20
	0x03C11BB0 MOV X2, X19
	0x03C11BB4 LDP X20, X19, [X31 + 0x20]
	0x03C11BB8 LDP X22, X21, [X31 + 0x10]
	0x03C11BBC LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D4000
	005 Move X1, [X20+1272]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51372032
	010 Add X0, X0, 2586
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1272], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 GetMaxToneMapLuminance(System.Int32 displayIndex)

Disassembly:
	0x03C11C38 MOV W20, W1
	0x03C11C3C MOV X21, X0
	0x03C11C40 CBNZ X3, 0x3C11C58
	0x03C11C44 ADRP X0, 0xFFFFFFFFFCF03000
	0x03C11C48 ADD X0, X0, 0x80C
	0x03C11C4C BL 0x1C16CB8
	0x03C11C50 MOV X3, X0
	0x03C11C54 STR X0, [X22 + 0x668]
	0x03C11C58 MOV X0, X21
	0x03C11C5C MOV W1, W20
	0x03C11C60 MOV X2, X19
	0x03C11C64 LDP X20, X19, [X31 + 0x20]
	0x03C11C68 LDP X22, X21, [X31 + 0x10]
	0x03C11C6C LDR X30, [X31], #0x30
	0x03C11C70 BR X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D4000
	005 Move X1, [X20+1280]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51425280
	010 Add X0, X0, 102
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1280], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Int32 GetMinToneMapLuminance(System.Int32 displayIndex)

Disassembly:
	0x03C11CEC ADRP X0, 0xFFFFFFFFFCF03000
	0x03C11CF0 ADD X0, X0, 0x866
	0x03C11CF4 BL 0x1C16CB8
	0x03C11CF8 MOV X3, X0
	0x03C11CFC STR X0, [X22 + 0x670]
	0x03C11D00 MOV X0, X21
	0x03C11D04 MOV W1, W20
	0x03C11D08 MOV X2, X19
	0x03C11D0C LDP X20, X19, [X31 + 0x20]
	0x03C11D10 LDP X22, X21, [X31 + 0x10]
	0x03C11D14 LDR X30, [X31], #0x30
	0x03C11D18 BR X3
	0x03C11D1C STR X30, [X31 - 0x30]!
	0x03C11D20 STP X22, X21, [X31 + 0x10]
	0x03C11D24 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7D4000
	005 Move X1, [X20+1288]
	006 Move W19, W0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51511296
	010 Add X0, X0, 3389
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1288], X0
	014 Move W0, W19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void RequestHDRModeChangeInternal(System.Int32 displayIndex, System.Boolean enabled)

Disassembly:
	0x03C11DB0 MOV W1, W21
	0x03C11DB4 MOV X2, X20
	0x03C11DB8 MOV W3, W19
	0x03C11DBC LDP X20, X19, [X31 + 0x20]
	0x03C11DC0 LDP X22, X21, [X31 + 0x10]
	0x03C11DC4 LDP X30, X23, [X31], #0x30
	0x03C11DC8 BR X4
	0x03C11DCC STP X30, X23, [X31 - 0x30]!
	0x03C11DD0 STP X22, X21, [X31 + 0x10]
	0x03C11DD4 STP X20, X19, [X31 + 0x20]
	0x03C11DD8 ADRP X23, 0x7D3000
	0x03C11DDC LDR X4, [X23 + 0x628]
	0x03C11DE0 MOV W19, W3
	0x03C11DE4 MOV X20, X2
	0x03C11DE8 MOV W21, W1
	0x03C11DEC MOV X22, X0
	0x03C11DF0 CBNZ X4, 0x3C11E08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7D4000
	006 Move X2, [X21+1296]
	007 Move W19, W1
	008 Move W20, W0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51380224
	012 Add X0, X0, 3906
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1296], X0
	016 And W1, W19, 1
	017 Move W0, W20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void .cctor()

Disassembly:
	0x03C11DF4 ADRP X0, 0xFFFFFFFFFCEF7000
	0x03C11DF8 ADD X0, X0, 0xF33
	0x03C11DFC BL 0x1C16CB8
	0x03C11E00 MOV X4, X0
	0x03C11E04 STR X0, [X23 + 0x628]
	0x03C11E08 MOV X0, X22
	0x03C11E0C MOV W1, W21
	0x03C11E10 MOV X2, X20
	0x03C11E14 MOV W3, W19
	0x03C11E18 LDP X20, X19, [X31 + 0x20]
	0x03C11E1C LDP X22, X21, [X31 + 0x10]
	0x03C11E20 LDP X30, X23, [X31], #0x30
	0x03C11E24 BR X4
	0x03C11E28 STP X30, X23, [X31 - 0x30]!
	0x03C11E2C STP X22, X21, [X31 + 0x10]
	0x03C11E30 STP X20, X19, [X31 + 0x20]
	0x03C11E34 ADRP X23, 0x7D3000
	0x03C11E38 LDR X4, [X23 + 0x630]
	0x03C11E3C MOV W19, W3
	0x03C11E40 MOV X20, X2
	0x03C11E44 MOV W21, W1
	0x03C11E48 MOV X22, X0
	0x03C11E4C CBNZ X4, 0x3C11E64
	0x03C11E50 ADRP X0, 0xFFFFFFFFFCF13000
	0x03C11E54 ADD X0, X0, 0xAD1
	0x03C11E58 BL 0x1C16CB8
	0x03C11E5C MOV X4, X0
	0x03C11E60 STR X0, [X23 + 0x630]
	0x03C11E64 MOV X0, X22
	0x03C11E68 MOV W1, W21
	0x03C11E6C MOV X2, X20
	0x03C11E70 MOV W3, W19
	0x03C11E74 LDP X20, X19, [X31 + 0x20]
	0x03C11E78 LDP X22, X21, [X31 + 0x10]
	0x03C11E7C LDP X30, X23, [X31], #0x30
	0x03C11E80 BR X4
	0x03C11E84 STP X30, X23, [X31 - 0x30]!
	0x03C11E88 STP X22, X21, [X31 + 0x10]
	0x03C11E8C STP X20, X19, [X31 + 0x20]
	0x03C11E90 ADRP X23, 0x7D3000
	0x03C11E94 LDR X4, [X23 + 0x638]
	0x03C11E98 MOV W19, W3
	0x03C11E9C MOV X20, X2
	0x03C11EA0 MOV W21, W1
	0x03C11EA4 MOV X22, X0
	0x03C11EA8 CBNZ X4, 0x3C11EC0
	0x03C11EAC ADRP X0, 0xFFFFFFFFFCEF4000
	0x03C11EB0 ADD X0, X0, 0xAA
	0x03C11EB4 BL 0x1C16CB8
	0x03C11EB8 MOV X4, X0
	0x03C11EBC STR X0, [X23 + 0x638]
	0x03C11EC0 MOV X0, X22
	0x03C11EC4 MOV W1, W21
	0x03C11EC8 MOV X2, X20
	0x03C11ECC MOV W3, W19
	0x03C11ED0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x7D4000
	006 Move X20, 0x54E000
	007 Move X21, 0x540000
	008 Move W8, [X19+1304]
	009 Move X20, [X20+3432]
	010 Move X21, [X21+1392]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x54E000
	016 Move X0, [X0+3432]
	017 Call 0x1C17CF4
	018 Move X0, 0x540000
	019 Move X0, [X0+1392]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+1304], W8
	023 Move X0, [X20]
	024 Move W1, 1
	025 Call 0x1C17D6C
	026 Move X8, [X21]
	027 Move X19, X0
	028 Move X0, X8
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X20, X0
	032 Call Object..ctor, X0
	033 Move [X20+16], W31
	034 Compare X19, 0
	035 JumpIfEqual {64}
	036 Move X8, [X19]
	037 Move X0, X20
	038 Move X1, [X8+64]
	039 Call 0x1C17E00
	040 Compare X0, 0
	041 JumpIfEqual {66}
	042 Move W8, [X19+24]
	043 Compare W8, 0
	044 JumpIfEqual {65}
	045 Move [X19+32], X20
	046 Move X8, [X21]
	047 Move X8, [X8+184]
	048 Move [X8], X19
	049 Move X8, [X21]
	050 Move X8, [X8+184]
	051 Move X9, [X8]
	052 Compare X9, 0
	053 JumpIfEqual {64}
	054 Move W10, [X9+24]
	055 Compare W10, 0
	056 JumpIfEqual {65}
	057 Move X9, [X9+32]
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move [X8+8], X9
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 
	064 Call 0x1C17F20
	065 Call 0x1C17F28
	066 Call 0x1C17F44
	067 Move X1, X31
	068 Call 0x1C17DEC

