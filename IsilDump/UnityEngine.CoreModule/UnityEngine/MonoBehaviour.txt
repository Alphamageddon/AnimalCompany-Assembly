Type: UnityEngine.MonoBehaviour

Method: System.Threading.CancellationToken get_destroyCancellationToken()

Disassembly:
	0x03C3708C MOVZ W2, 0x1
	0x03C37090 MOV X3, X31
	0x03C37094 MOV X19, X0
	0x03C37098 BL 0x334E484
	0x03C3709C LDR X0, [X22]
	0x03C370A0 LDR W8, [X0 + 0xE0]
	0x03C370A4 CBNZ W8, 0x3C370AC
	0x03C370A8 BL 0x1C16DFC
	0x03C370AC MOV X0, X19
	0x03C370B0 BL 0x3C370DC
	0x03C370B4 LDR X8, [X21 + 0x28]
	0x03C370B8 LDUR X9, [X29 - 0x8]
	0x03C370BC CMP X8, X9
	0x03C370C0 B.NE 0x3C370D8
	0x03C370C4 ADD X31, X29, 0x0
	0x03C370C8 LDP X20, X19, [X31 + 0x20]
	0x03C370CC LDP X22, X21, [X31 + 0x10]
	0x03C370D0 LDP X29, X30, [X31], #0x30
	0x03C370D4 RET
	0x03C370D8 BL 0x3EB1B20
	0x03C370DC SUB X31, X31, 0x70
	0x03C370E0 STP X29, X30, [X31 + 0x10]
	0x03C370E4 STP X28, X27, [X31 + 0x20]
	0x03C370E8 STP X26, X25, [X31 + 0x30]
	0x03C370EC STP X24, X23, [X31 + 0x40]
	0x03C370F0 STP X22, X21, [X31 + 0x50]
	0x03C370F4 STP X20, X19, [X31 + 0x60]
	0x03C370F8 ADRP X21, 0x7AE000
	0x03C370FC ADRP X20, 0x4BC000
	0x03C37100 LDRB W8, [X21 + 0x4CB]
	0x03C37104 LDR X20, [X20 + 0x8F0]
	0x03C37108 MOV X19, X0
	0x03C3710C TBNZ X8, 0x0, 0x3C37208
	0x03C37110 ADRP X0, 0x500000
	0x03C37114 LDR X0, [X0 + 0xDC8]
	0x03C37118 BL 0x1C16CF4
	0x03C3711C ADRP X0, 0x4BC000
	0x03C37120 LDR X0, [X0 + 0x8F0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AF000
	005 Move W8, [X20+1032]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x4BF000
	012 Move X0, [X0+2640]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1032], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfNotEqual {39}
	019 Move X8, 0x4BF000
	020 Move X8, [X8+2640]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call CancellationTokenSource..ctor, X0
	026 Move [X19+24], X20
	027 Move X20, 0x7AF000
	028 Move X8, [X20+1168]
	029 Compare X8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, -51453952
	032 Add X0, X0, 3630
	033 Call 0x1C17CB8
	034 Move X8, X0
	035 Move [X20+1168], X0
	036 Move X0, X19
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X0, [X19+24]
	039 Compare X0, 0
	040 JumpIfEqual {47}
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X1, X31
	044 Move X30, [X31+32]
	045 Call CancellationTokenSource.get_Token, X0
	046 Return X0
	047 Call 0x1C17F20

Method: System.Void RaiseCancellation()

Disassembly:
	0x03C37160 BL 0x1C16CF4
	0x03C37164 ADRP X0, 0x4BC000
	0x03C37168 LDR X0, [X0 + 0x838]
	0x03C3716C BL 0x1C16CF4
	0x03C37170 ADRP X0, 0x4BD000

ISIL:
	001 Move X0, [X0+24]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call CancellationTokenSource.Cancel, X0
	006 Return 
	007 Return 

Method: System.Boolean IsInvoking()

Disassembly:
	0x03C37174 LDR X0, [X0 + 0xEC8]
	0x03C37178 BL 0x1C16CF4
	0x03C3717C ADRP X0, 0x4C5000
	0x03C37180 LDR X0, [X0 + 0x988]
	0x03C37184 BL 0x1C16CF4
	0x03C37188 ADRP X0, 0x528000
	0x03C3718C LDR X0, [X0 + 0x5B8]
	0x03C37190 BL 0x1C16CF4
	0x03C37194 ADRP X0, 0x4C7000
	0x03C37198 LDR X0, [X0 + 0x310]
	0x03C3719C BL 0x1C16CF4
	0x03C371A0 ADRP X0, 0x528000
	0x03C371A4 LDR X0, [X0 + 0x5C0]
	0x03C371A8 BL 0x1C16CF4
	0x03C371AC ADRP X0, 0x4BD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AF000
	005 Move X1, [X20+1088]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51671040
	010 Add X0, X0, 53
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1088], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void CancelInvoke()

Disassembly:
	0x03C371EC LDR X0, [X0 + 0x5E8]
	0x03C371F0 BL 0x1C16CF4
	0x03C371F4 ADRP X0, 0x4C5000
	0x03C371F8 LDR X0, [X0 + 0x790]
	0x03C371FC BL 0x1C16CF4
	0x03C37200 MOVZ W8, 0x1
	0x03C37204 STRB W8, [X21 + 0x4CB]
	0x03C37208 LDR X0, [X20]
	0x03C3720C STR W31, [X31 + 0xC]
	0x03C37210 BL 0x1C16F10
	0x03C37214 MOVZ W1, 0xFF
	0x03C37218 MOV X2, X31
	0x03C3721C MOV X20, X0
	0x03C37220 BL 0x3231B28
	0x03C37224 CBZ X19, 0x3C377E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AF000
	005 Move X1, [X20+1080]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51621888
	010 Add X0, X0, 830
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1080], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void Invoke(System.String methodName, System.Single time)

Disassembly:
	0x03C37264 MOV W1, W21
	0x03C37268 LDP X9, X2, [X8 + 0x188]
	0x03C3726C BLR X9
	0x03C37270 CBZ X0, 0x3C377E0
	0x03C37274 LDR X8, [X0]
	0x03C37278 MOV X22, X0
	0x03C3727C LDP X9, X1, [X8 + 0x1A8]
	0x03C37280 BLR X9
	0x03C37284 MOV X1, X31
	0x03C37288 MOV X2, X31
	0x03C3728C MOV X24, X0
	0x03C37290 BL 0x32CE12C
	0x03C37294 TBNZ X0, 0x0, 0x3C37790
	0x03C37298 CBZ X24, 0x3C377E0
	0x03C3729C LDR X8, [X24]
	0x03C372A0 MOV X0, X24
	0x03C372A4 LDP X9, X1, [X8 + 0x1B8]
	0x03C372A8 BLR X9
	0x03C372AC LDR X8, [X26]
	0x03C372B0 MOV X23, X0
	0x03C372B4 LDR W9, [X8 + 0xE0]
	0x03C372B8 CBNZ W9, 0x3C372C4

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x7AF000
	007 Move X2, [X21+1096]
	008 Move V8, V0
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X2, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51482624
	014 Add X0, X0, 376
	015 Call 0x1C17CB8
	016 Move X2, X0
	017 Move [X21+1096], X0
	018 Move X0, X20
	019 Move X1, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X30, [X31+16]
	023 Move X21, [X31+24]
	024 Move S1, W31
	025 Move V0, V8
	026 Move V8, [X31+48]
	027 CallNoReturn X2

Method: System.Void InvokeRepeating(System.String methodName, System.Single time, System.Single repeatRate)

Disassembly:
	0x03C37318 LDR X8, [X8 + 0x790]
	0x03C3731C MOV X0, X20
	0x03C37320 MOV X2, X31
	0x03C37324 LDR X1, [X8]
	0x03C37328 BL 0x32333E0
	0x03C3732C LDR X8, [X23]
	0x03C37330 MOV X0, X23
	0x03C37334 LDP X9, X1, [X8 + 0x1A8]
	0x03C37338 BLR X9
	0x03C3733C CBZ X20, 0x3C377E0
	0x03C37340 MOV X1, X0
	0x03C37344 MOV X0, X20
	0x03C37348 MOV X2, X31
	0x03C3734C BL 0x32333E0
	0x03C37350 ADRP X8, 0x4C5000
	0x03C37354 LDR X8, [X8 + 0x988]
	0x03C37358 MOV X0, X20
	0x03C3735C MOV X2, X31
	0x03C37360 LDR X1, [X8]
	0x03C37364 BL 0x32333E0
	0x03C37368 LDR X8, [X24]
	0x03C3736C MOV X0, X24
	0x03C37370 LDP X9, X1, [X8 + 0x1A8]
	0x03C37374 BLR X9
	0x03C37378 MOV X1, X0
	0x03C3737C MOV X0, X20
	0x03C37380 MOV X2, X31
	0x03C37384 BL 0x32333E0
	0x03C37388 ADRP X8, 0x4C7000
	0x03C3738C LDR X8, [X8 + 0x310]
	0x03C37390 MOV X0, X20
	0x03C37394 MOV X2, X31
	0x03C37398 LDR X1, [X8]
	0x03C3739C BL 0x32333E0
	0x03C373A0 LDR X8, [X24]
	0x03C373A4 MOV X0, X24
	0x03C373A8 LDR X9, [X8 + 0x248]
	0x03C373AC LDR X1, [X8 + 0x250]
	0x03C373B0 BLR X9
	0x03C373B4 CBZ X0, 0x3C377E0
	0x03C373B8 LDR W8, [X0 + 0x18]
	0x03C373BC MOV X25, X0
	0x03C373C0 CMP W8, 0x1
	0x03C373C4 B.LT 0x3C3743C
	0x03C373C8 MOV W27, W31
	0x03C373CC MOVZ W9, 0x1

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, -51691520
	008 Move V9, V0
	009 Move V0, [X8+380]
	010 Move V8, V1
	011 Move X19, X1
	012 Move X20, X0
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 NotImplemented "Instruction FCMP not yet implemented."
	015 Move X21, 0x7AF000
	016 Move X2, [X21+1096]
	017 Compare X2, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51482624
	020 Add X0, X0, 376
	021 Call 0x1C17CB8
	022 Move X2, X0
	023 Move [X21+1096], X0
	024 Move X0, X20
	025 Move X1, X19
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Move V0, V9
	031 Move V1, V8
	032 Move D9, [X31+48]
	033 Move D8, [X31+56]
	034 CallNoReturn X2
	035 Move X0, 0x4E6000
	036 Move X0, [X0+464]
	037 Call 0x1C17D08
	038 Call 0x1C17F10
	039 Move X19, X0
	040 Move X0, 0x529000
	041 Move X0, [X0+1376]
	042 Call 0x1C17D08
	043 Move X1, X0
	044 Move X0, X19
	045 Call UnityException..ctor, X0, X1
	046 Move X0, 0x529000
	047 Move X0, [X0+1384]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X19
	051 Call 0x1C17DEC

Method: System.Void CancelInvoke(System.String methodName)

Disassembly:
	0x03C37448 BL 0x32333E0
	0x03C3744C LDR X8, [X22]
	0x03C37450 MOV X0, X22
	0x03C37454 LDP X9, X1, [X8 + 0x188]
	0x03C37458 BLR X9
	0x03C3745C CBZ X0, 0x3C37778
	0x03C37460 LDR X8, [X23]
	0x03C37464 MOV X25, X0
	0x03C37468 MOV X0, X23
	0x03C3746C LDP X9, X1, [X8 + 0x1A8]
	0x03C37470 BLR X9
	0x03C37474 ADRP X8, 0x528000
	0x03C37478 LDR X8, [X8 + 0x5B0]
	0x03C3747C MOV X2, X31
	0x03C37480 LDR X1, [X8]
	0x03C37484 BL 0x321BA08
	0x03C37488 TBZ X0, 0x0, 0x3C374B8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AF000
	006 Move X2, [X21+1104]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51556352
	012 Add X0, X0, 1253
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1104], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean IsInvoking(System.String methodName)

Disassembly:
	0x03C374D0 MOV X2, X31
	0x03C374D4 LDR X1, [X8]
	0x03C374D8 BL 0x321BA08
	0x03C374DC TBZ X0, 0x0, 0x3C3750C
	0x03C374E0 LDR X8, [X23]
	0x03C374E4 MOV X0, X23
	0x03C374E8 LDR X9, [X8 + 0x2C8]
	0x03C374EC LDR X1, [X8 + 0x2D0]
	0x03C374F0 BLR X9
	0x03C374F4 ADRP X8, 0x528000
	0x03C374F8 LDR X8, [X8 + 0x5E8]
	0x03C374FC MOV X2, X31
	0x03C37500 LDR X1, [X8]
	0x03C37504 BL 0x321BA08
	0x03C37508 TBNZ X0, 0x0, 0x3C37778
	0x03C3750C LDR X8, [X23]
	0x03C37510 MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AF000
	006 Move X2, [X21+1112]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51605504
	012 Add X0, X0, 720
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1112], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.Coroutine StartCoroutine(System.String methodName)

Disassembly:
	0x03C37558 BL 0x321BA08
	0x03C3755C TBNZ X0, 0x0, 0x3C37778

ISIL:
	001 Move X2, X31

Method: UnityEngine.Coroutine StartCoroutine(System.String methodName, System.Object value)

Disassembly:
	0x03C37560 LDR X8, [X23]
	0x03C37564 MOV X0, X23
	0x03C37568 LDP X9, X1, [X8 + 0x1A8]
	0x03C3756C BLR X9
	0x03C37570 ADRP X8, 0x528000
	0x03C37574 LDR X8, [X8 + 0x5D8]
	0x03C37578 MOV X2, X31
	0x03C3757C LDR X1, [X8]
	0x03C37580 BL 0x321BA08
	0x03C37584 TBZ X0, 0x0, 0x3C375B4
	0x03C37588 LDR X8, [X23]
	0x03C3758C MOV X0, X23
	0x03C37590 LDR X9, [X8 + 0x2C8]
	0x03C37594 LDR X1, [X8 + 0x2D0]
	0x03C37598 BLR X9
	0x03C3759C ADRP X8, 0x528000
	0x03C375A0 LDR X8, [X8 + 0x5E0]
	0x03C375A4 MOV X2, X31
	0x03C375A8 LDR X1, [X8]
	0x03C375AC BL 0x321BA08
	0x03C375B0 TBNZ X0, 0x0, 0x3C37778
	0x03C375B4 LDR X8, [X24]
	0x03C375B8 MOV X0, X24
	0x03C375BC LDP X9, X1, [X8 + 0x1A8]
	0x03C375C0 BLR X9
	0x03C375C4 ADRP X8, 0x528000
	0x03C375C8 LDR X8, [X8 + 0x5C8]
	0x03C375CC MOV X2, X31
	0x03C375D0 LDR X1, [X8]
	0x03C375D4 BL 0x321BA08
	0x03C375D8 TBZ X0, 0x0, 0x3C37630
	0x03C375DC LDR X8, [X23]
	0x03C375E0 MOV X0, X23
	0x03C375E4 LDP X9, X1, [X8 + 0x1A8]
	0x03C375E8 BLR X9
	0x03C375EC ADRP X8, 0x528000
	0x03C375F0 LDR X8, [X8 + 0x5B8]
	0x03C375F4 MOV X2, X31
	0x03C375F8 LDR X1, [X8]
	0x03C375FC BL 0x321BA08
	0x03C37600 TBZ X0, 0x0, 0x3C37630
	0x03C37604 LDR X8, [X23]
	0x03C37608 MOV X0, X23
	0x03C3760C LDR X9, [X8 + 0x2C8]
	0x03C37610 LDR X1, [X8 + 0x2D0]
	0x03C37614 BLR X9
	0x03C37618 ADRP X8, 0x528000
	0x03C3761C LDR X8, [X8 + 0x5E8]
	0x03C37620 MOV X2, X31
	0x03C37624 LDR X1, [X8]
	0x03C37628 BL 0x321BA08
	0x03C3762C TBNZ X0, 0x0, 0x3C37778
	0x03C37630 ADRP X8, 0x528000
	0x03C37634 LDR X8, [X8 + 0x5C0]
	0x03C37638 MOV X0, X20
	0x03C3763C MOV X2, X31
	0x03C37640 LDR X1, [X8]
	0x03C37644 BL 0x32333E0
	0x03C37648 ADRP X24, 0x500000
	0x03C3764C LDR X24, [X24 + 0xDC8]
	0x03C37650 LDR X0, [X24]
	0x03C37654 LDR W8, [X0 + 0xE0]
	0x03C37658 CBNZ W8, 0x3C37664
	0x03C3765C BL 0x1C16DFC
	0x03C37660 LDR X0, [X24]
	0x03C37664 LDR X8, [X0 + 0xB8]
	0x03C37668 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X1
	007 Move X21, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Move X19, X2
	011 Call String.IsNullOrEmpty, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {49}
	016 Move X22, 0x7AF000
	017 Move X8, [X22+1120]
	018 Compare X8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, -51589120
	021 Add X0, X0, 267
	022 Call 0x1C17CB8
	023 Move X8, X0
	024 Move [X22+1120], X0
	025 Move X0, X21
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {61}
	031 Move X22, 0x7AF000
	032 Move X3, [X22+1128]
	033 Compare X3, 0
	034 JumpIfNotEqual {40}
	035 Move X0, -51482624
	036 Add X0, X0, 486
	037 Call 0x1C17CB8
	038 Move X3, X0
	039 Move [X22+1128], X0
	040 Move X0, X21
	041 Move X1, X20
	042 Move X2, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 CallNoReturn X3
	049 Move X0, 0x4C8000
	050 Move X0, [X0+2584]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x529000
	055 Move X0, [X0+1392]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Move X2, X31
	060 Call NullReferenceException..ctor, X0, X1
	061 Move X0, 0x4C5000
	062 Move X0, [X0+1400]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0x529000
	067 Move X0, [X0+1400]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call ArgumentException..ctor, X0, X1
	073 Move X0, 0x529000
	074 Move X0, [X0+1408]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Call 0x1C17DEC

Method: UnityEngine.Coroutine StartCoroutine(System.Collections.IEnumerator routine)

Disassembly:
	0x03C376FC MOV X0, X25
	0x03C37700 MOV X3, X31
	0x03C37704 SUB W2, W8, W1
	0x03C37708 BL 0x3228DE4
	0x03C3770C MOV X25, X0
	0x03C37710 MOV X0, X20
	0x03C37714 MOV X1, X25
	0x03C37718 MOV X2, X31
	0x03C3771C BL 0x32333E0
	0x03C37720 ADRP X8, 0x4C5000
	0x03C37724 LDR X8, [X8 + 0x988]
	0x03C37728 MOV X0, X20
	0x03C3772C MOV X2, X31
	0x03C37730 LDR X1, [X8]
	0x03C37734 BL 0x32333E0
	0x03C37738 LDR X8, [X22]
	0x03C3773C MOV X0, X22
	0x03C37740 LDP X9, X1, [X8 + 0x178]
	0x03C37744 BLR X9
	0x03C37748 STR W0, [X31 + 0xC]
	0x03C3774C ADD X0, X31, 0xC
	0x03C37750 MOV X1, X31
	0x03C37754 BL 0x337B6E0
	0x03C37758 MOV X1, X0
	0x03C3775C MOV X0, X20
	0x03C37760 MOV X2, X31
	0x03C37764 BL 0x32333E0
	0x03C37768 LDR X1, [X28]
	0x03C3776C MOV X0, X20
	0x03C37770 MOV X2, X31
	0x03C37774 BL 0x32333E0
	0x03C37778 ADRP X8, 0x4BD000
	0x03C3777C LDR X8, [X8 + 0xFE0]
	0x03C37780 MOV X0, X20
	0x03C37784 MOV X2, X31
	0x03C37788 LDR X1, [X8]
	0x03C3778C BL 0x32333E0
	0x03C37790 LDR X8, [X19]
	0x03C37794 MOV X0, X19
	0x03C37798 ADD W21, W21, 0x1
	0x03C3779C LDP X9, X1, [X8 + 0x178]
	0x03C377A0 BLR X9
	0x03C377A4 CMP W21, W0
	0x03C377A8 B.LT 0x3C3725C
	0x03C377AC CBZ X20, 0x3C377E0
	0x03C377B0 LDR X8, [X20]
	0x03C377B4 MOV X0, X20
	0x03C377B8 LDP X9, X1, [X8 + 0x168]
	0x03C377BC BLR X9
	0x03C377C0 LDP X20, X19, [X31 + 0x60]
	0x03C377C4 LDP X22, X21, [X31 + 0x50]
	0x03C377C8 LDP X24, X23, [X31 + 0x40]
	0x03C377CC LDP X26, X25, [X31 + 0x30]
	0x03C377D0 LDP X28, X27, [X31 + 0x20]
	0x03C377D4 LDP X29, X30, [X31 + 0x10]
	0x03C377D8 ADD X31, X31, 0x70
	0x03C377DC RET
	0x03C377E0 BL 0x1C16F20
	0x03C377E4 BL 0x1C16F28
	0x03C377E8 STP X29, X30, [X31 - 0x60]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {40}
	007 Move X21, 0x7AF000
	008 Move X8, [X21+1120]
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51589120
	014 Add X0, X0, 267
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X21+1120], X0
	018 Move X0, X20
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {52}
	024 Move X21, 0x7AF000
	025 Move X2, [X21+1136]
	026 Compare X2, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -51531776
	029 Add X0, X0, 342
	030 Call 0x1C17CB8
	031 Move X2, X0
	032 Move [X21+1136], X0
	033 Move X0, X20
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X2
	040 Move X0, 0x4C8000
	041 Move X0, [X0+2584]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0x529000
	046 Move X0, [X0+1416]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Move X2, X31
	051 Call NullReferenceException..ctor, X0, X1
	052 Move X0, 0x4C5000
	053 Move X0, [X0+1400]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X19, X0
	057 Move X0, 0x529000
	058 Move X0, [X0+1400]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Move X2, X31
	063 Call ArgumentException..ctor, X0, X1
	064 Move X0, 0x529000
	065 Move X0, [X0+1424]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: UnityEngine.Coroutine StartCoroutine_Auto(System.Collections.IEnumerator routine)

Disassembly:
	0x03C37830 ADRP X0, 0x4EE000

ISIL:
	001 Call MonoBehaviour.StartCoroutine, X0, X1
	002 Return X0

Method: System.Void StopCoroutine(System.Collections.IEnumerator routine)

Disassembly:
	0x03C37834 LDR X0, [X0 + 0x808]
	0x03C37838 BL 0x1C16CF4
	0x03C3783C ADRP X0, 0x4BC000
	0x03C37840 LDR X0, [X0 + 0x8F0]
	0x03C37844 BL 0x1C16CF4
	0x03C37848 ADRP X0, 0x4BD000
	0x03C3784C LDR X0, [X0 + 0xFE0]
	0x03C37850 BL 0x1C16CF4
	0x03C37854 ADRP X0, 0x4C0000
	0x03C37858 LDR X0, [X0 + 0x928]
	0x03C3785C BL 0x1C16CF4
	0x03C37860 ADRP X0, 0x528000
	0x03C37864 LDR X0, [X0 + 0x5F0]
	0x03C37868 BL 0x1C16CF4
	0x03C3786C ADRP X0, 0x4BC000
	0x03C37870 LDR X0, [X0 + 0x988]
	0x03C37874 BL 0x1C16CF4
	0x03C37878 MOVZ W8, 0x1
	0x03C3787C STRB W8, [X22 + 0x4CA]
	0x03C37880 CBZ X21, 0x3C37AFC
	0x03C37884 ADRP X9, 0x4BC000
	0x03C37888 LDR X9, [X9 + 0x7D0]
	0x03C3788C LDR X8, [X21]
	0x03C37890 LDR X9, [X9]
	0x03C37894 LDRB W11, [X8 + 0x130]
	0x03C37898 LDRB W10, [X9 + 0x130]
	0x03C3789C CMP W11, W10
	0x03C378A0 B.CC 0x3C37ADC
	0x03C378A4 LDR X11, [X8 + 0xC8]
	0x03C378A8 ADD X10, X11, X10, 0x3, LSL
	0x03C378AC LDUR X10, [X10 - 0x8]
	0x03C378B0 CMP X10, X9
	0x03C378B4 B.NE 0x3C37ADC
	0x03C378B8 LDP X9, X1, [X8 + 0x1B8]
	0x03C378BC MOV X0, X21
	0x03C378C0 BLR X9
	0x03C378C4 CBZ X0, 0x3C378E8
	0x03C378C8 LDR X8, [X21]
	0x03C378CC MOV X0, X21
	0x03C378D0 LDP X9, X1, [X8 + 0x1B8]
	0x03C378D4 BLR X9
	0x03C378D8 CBZ X0, 0x3C37AD8
	0x03C378DC LDR W8, [X0 + 0x10]
	0x03C378E0 UBFM W23, W8, 0x1F, 0x1E
	0x03C378E4 B 0x3C378EC
	0x03C378E8 MOVZ W23, 0x200
	0x03C378EC ADRP X8, 0x4BC000
	0x03C378F0 LDR X8, [X8 + 0x8F0]
	0x03C378F4 ADRP X29, 0x4BC000
	0x03C378F8 ADRP X26, 0x528000
	0x03C378FC ADRP X28, 0x4BD000
	0x03C37900 LDR X29, [X29 + 0x988]
	0x03C37904 LDR X26, [X26 + 0x5F0]
	0x03C37908 LDR X28, [X28 + 0xFE0]
	0x03C3790C LDR X0, [X8]
	0x03C37910 ADRP X27, 0x4C0000
	0x03C37914 LDR X27, [X27 + 0x928]
	0x03C37918 BL 0x1C16F10
	0x03C3791C MOV W1, W23
	0x03C37920 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {40}
	007 Move X21, 0x7AF000
	008 Move X8, [X21+1120]
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51589120
	014 Add X0, X0, 267
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X21+1120], X0
	018 Move X0, X20
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {52}
	024 Move X21, 0x7AF000
	025 Move X2, [X21+1152]
	026 Compare X2, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -51453952
	029 Add X0, X0, 3536
	030 Call 0x1C17CB8
	031 Move X2, X0
	032 Move [X21+1152], X0
	033 Move X0, X20
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X2
	040 Move X0, 0x4C8000
	041 Move X0, [X0+2584]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0x529000
	046 Move X0, [X0+1416]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Move X2, X31
	051 Call NullReferenceException..ctor, X0, X1
	052 Move X0, 0x4C5000
	053 Move X0, [X0+1400]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X19, X0
	057 Move X0, 0x529000
	058 Move X0, [X0+1400]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Move X2, X31
	063 Call ArgumentException..ctor, X0, X1
	064 Move X0, 0x529000
	065 Move X0, [X0+1432]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: System.Void StopCoroutine(UnityEngine.Coroutine routine)

Disassembly:
	0x03C37968 BL 0x32274B8
	0x03C3796C MOV X23, X0
	0x03C37970 MOV X0, X21
	0x03C37974 MOV X1, X31
	0x03C37978 BL 0x33B32AC
	0x03C3797C CBZ X0, 0x3C37AD8
	0x03C37980 LDR X8, [X0]
	0x03C37984 LDP X9, X1, [X8 + 0x1A8]
	0x03C37988 BLR X9
	0x03C3798C LDR X8, [X21]
	0x03C37990 LDR X25, [X29]
	0x03C37994 MOV X24, X0
	0x03C37998 MOV X0, X21
	0x03C3799C LDP X9, X1, [X8 + 0x188]
	0x03C379A0 BLR X9
	0x03C379A4 CBZ X0, 0x3C379BC
	0x03C379A8 LDR X8, [X21]
	0x03C379AC MOV X0, X21
	0x03C379B0 LDP X9, X1, [X8 + 0x188]
	0x03C379B4 BLR X9
	0x03C379B8 MOV X25, X0
	0x03C379BC CBZ X25, 0x3C37AD8
	0x03C379C0 MOV X0, X25
	0x03C379C4 MOV X1, X31
	0x03C379C8 BL 0x322B8DC
	0x03C379CC CBZ X0, 0x3C37AD8
	0x03C379D0 LDR W8, [X0 + 0x10]
	0x03C379D4 CBZ W8, 0x3C379F8
	0x03C379D8 LDR X1, [X27]
	0x03C379DC MOV X0, X24
	0x03C379E0 MOV X2, X31
	0x03C379E4 BL 0x321B938
	0x03C379E8 MOV X1, X25
	0x03C379EC MOV X2, X31
	0x03C379F0 BL 0x321B938
	0x03C379F4 MOV X24, X0
	0x03C379F8 STR X24, [X20]
	0x03C379FC LDR X8, [X21 + 0x28]
	0x03C37A00 CBZ X8, 0x3C37A2C
	0x03C37A04 LDR X0, [X26]
	0x03C37A08 LDR X2, [X28]
	0x03C37A0C MOV X1, X24
	0x03C37A10 MOV X3, X23
	0x03C37A14 MOV X4, X31
	0x03C37A18 BL 0x32277C4
	0x03C37A1C LDR X21, [X21 + 0x28]
	0x03C37A20 MOV X24, X0
	0x03C37A24 CBNZ X21, 0x3C37938
	0x03C37A28 B 0x3C37A30
	0x03C37A2C MOV X24, X23
	0x03C37A30 LDR X1, [X28]
	0x03C37A34 MOV X0, X24
	0x03C37A38 MOV X2, X31
	0x03C37A3C BL 0x321B938
	0x03C37A40 CBZ X22, 0x3C37AD8
	0x03C37A44 MOV X1, X0
	0x03C37A48 MOV X0, X22
	0x03C37A4C MOV X2, X31
	0x03C37A50 BL 0x32333E0
	0x03C37A54 ADRP X8, 0x4EE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {40}
	007 Move X21, 0x7AF000
	008 Move X8, [X21+1120]
	009 Move X19, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51589120
	014 Add X0, X0, 267
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X21+1120], X0
	018 Move X0, X20
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {52}
	024 Move X21, 0x7AF000
	025 Move X2, [X21+1144]
	026 Compare X2, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -51638272
	029 Add X0, X0, 733
	030 Call 0x1C17CB8
	031 Move X2, X0
	032 Move [X21+1144], X0
	033 Move X0, X20
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X2
	040 Move X0, 0x4C8000
	041 Move X0, [X0+2584]
	042 Call 0x1C17D08
	043 Call 0x1C17F10
	044 Move X19, X0
	045 Move X0, 0x529000
	046 Move X0, [X0+1416]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X19
	050 Move X2, X31
	051 Call NullReferenceException..ctor, X0, X1
	052 Move X0, 0x4C5000
	053 Move X0, [X0+1400]
	054 Call 0x1C17D08
	055 Call 0x1C17F10
	056 Move X19, X0
	057 Move X0, 0x529000
	058 Move X0, [X0+1400]
	059 Call 0x1C17D08
	060 Move X1, X0
	061 Move X0, X19
	062 Move X2, X31
	063 Call ArgumentException..ctor, X0, X1
	064 Move X0, 0x529000
	065 Move X0, [X0+1440]
	066 Call 0x1C17D08
	067 Move X1, X0
	068 Move X0, X19
	069 Call 0x1C17DEC

Method: System.Void StopCoroutine(System.String methodName)

Disassembly:
	0x03C37A9C MOV X0, X22
	0x03C37AA0 MOV X2, X31
	0x03C37AA4 BL 0x32333E0
	0x03C37AA8 LDR X8, [X22]
	0x03C37AAC MOV X0, X22
	0x03C37AB0 LDP X9, X1, [X8 + 0x168]
	0x03C37AB4 BLR X9
	0x03C37AB8 STR X0, [X19]
	0x03C37ABC LDP X20, X19, [X31 + 0x50]
	0x03C37AC0 LDP X22, X21, [X31 + 0x40]
	0x03C37AC4 LDP X24, X23, [X31 + 0x30]
	0x03C37AC8 LDP X26, X25, [X31 + 0x20]
	0x03C37ACC LDP X28, X27, [X31 + 0x10]
	0x03C37AD0 LDP X29, X30, [X31], #0x60
	0x03C37AD4 RET
	0x03C37AD8 BL 0x1C16F20
	0x03C37ADC ADRP X0, 0x4C4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AF000
	006 Move X2, [X21+1040]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51646464
	012 Add X0, X0, 1072
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1040], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void StopAllCoroutines()

Disassembly:
	0x03C37AE0 LDR X0, [X0 + 0x578]
	0x03C37AE4 BL 0x1C16D08
	0x03C37AE8 BL 0x1C16F10
	0x03C37AEC MOV X19, X0
	0x03C37AF0 ADRP X0, 0x528000
	0x03C37AF4 LDR X0, [X0 + 0x5F8]
	0x03C37AF8 B 0x3C37B18
	0x03C37AFC ADRP X0, 0x4C4000
	0x03C37B00 LDR X0, [X0 + 0x578]
	0x03C37B04 BL 0x1C16D08
	0x03C37B08 BL 0x1C16F10
	0x03C37B0C MOV X19, X0
	0x03C37B10 ADRP X0, 0x528000
	0x03C37B14 LDR X0, [X0 + 0x600]
	0x03C37B18 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AF000
	005 Move X1, [X20+1048]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51662848
	010 Add X0, X0, 436
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1048], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_useGUILayout()

Disassembly:
	0x03C37B1C MOV X1, X0
	0x03C37B20 MOV X0, X19
	0x03C37B24 MOV X2, X31
	0x03C37B28 BL 0x3314A68
	0x03C37B2C ADRP X0, 0x528000
	0x03C37B30 LDR X0, [X0 + 0x608]
	0x03C37B34 BL 0x1C16D08
	0x03C37B38 MOV X1, X0
	0x03C37B3C MOV X0, X19
	0x03C37B40 BL 0x1C16DEC
	0x03C37B44 STP X30, X21, [X31 - 0x20]!
	0x03C37B48 STP X20, X19, [X31 + 0x10]
	0x03C37B4C ADRP X20, 0x7AE000
	0x03C37B50 ADRP X19, 0x4BC000
	0x03C37B54 ADRP X21, 0x500000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AF000
	005 Move X1, [X20+1056]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51453952
	010 Add X0, X0, 3490
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1056], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_useGUILayout(System.Boolean value)

Disassembly:
	0x03C37B58 LDRB W8, [X20 + 0x4CC]
	0x03C37B5C LDR X19, [X19 + 0x988]
	0x03C37B60 LDR X21, [X21 + 0xDC8]
	0x03C37B64 TBNZ X8, 0x0, 0x3C37B88
	0x03C37B68 ADRP X0, 0x500000
	0x03C37B6C LDR X0, [X0 + 0xDC8]
	0x03C37B70 BL 0x1C16CF4
	0x03C37B74 ADRP X0, 0x4BC000
	0x03C37B78 LDR X0, [X0 + 0x988]
	0x03C37B7C BL 0x1C16CF4
	0x03C37B80 MOVZ W8, 0x1
	0x03C37B84 STRB W8, [X20 + 0x4CC]
	0x03C37B88 LDR X8, [X21]
	0x03C37B8C LDR X9, [X19]
	0x03C37B90 LDP X20, X19, [X31 + 0x10]
	0x03C37B94 LDR X8, [X8 + 0xB8]
	0x03C37B98 STR X9, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AF000
	006 Move X2, [X21+1064]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51613696
	012 Add X0, X0, 1566
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1064], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void print(System.Object message)

Disassembly:
	0x03C37B9C LDP X30, X21, [X31], #0x20
	0x03C37BA0 RET
	0x03C37BA4 STP X30, X21, [X31 - 0x20]!
	0x03C37BA8 STP X20, X19, [X31 + 0x10]
	0x03C37BAC ADRP X21, 0x7AE000
	0x03C37BB0 ADRP X20, 0x4BC000
	0x03C37BB4 LDRB W8, [X21 + 0x4CD]
	0x03C37BB8 LDR X20, [X20 + 0x7D0]
	0x03C37BBC MOV X19, X0
	0x03C37BC0 TBNZ X8, 0x0, 0x3C37BE4
	0x03C37BC4 ADRP X0, 0x4BC000
	0x03C37BC8 LDR X0, [X0 + 0x7D0]
	0x03C37BCC BL 0x1C16CF4
	0x03C37BD0 ADRP X0, 0x528000
	0x03C37BD4 LDR X0, [X0 + 0x610]
	0x03C37BD8 BL 0x1C16CF4
	0x03C37BDC MOVZ W8, 0x1
	0x03C37BE0 STRB W8, [X21 + 0x4CD]
	0x03C37BE4 LDR X0, [X20]
	0x03C37BE8 ADRP X20, 0x528000
	0x03C37BEC LDR W8, [X0 + 0xE0]
	0x03C37BF0 LDR X20, [X20 + 0x610]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7AF000
	006 Move X21, 0x4BD000
	007 Move W8, [X20+1072]
	008 Move X21, [X21+2600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4BD000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1072], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Debug.Log, X0
	031 Return 

Method: System.Void Internal_CancelInvokeAll(UnityEngine.MonoBehaviour self)

Disassembly:
	0x03C37228 LDR X8, [X19]
	0x03C3722C MOV X0, X19
	0x03C37230 LDP X9, X1, [X8 + 0x178]
	0x03C37234 BLR X9
	0x03C37238 CMP W0, 0x1
	0x03C3723C B.LT 0x3C377AC
	0x03C37240 ADRP X26, 0x4BC000
	0x03C37244 ADRP X29, 0x4BC000
	0x03C37248 ADRP X28, 0x4BD000
	0x03C3724C LDR X26, [X26 + 0x6C0]
	0x03C37250 LDR X29, [X29 + 0x838]
	0x03C37254 LDR X28, [X28 + 0x608]
	0x03C37258 MOV W21, W31
	0x03C3725C LDR X8, [X19]
	0x03C37260 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AF000
	005 Move X1, [X20+1080]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51621888
	010 Add X0, X0, 830
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1080], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean Internal_IsInvokingAll(UnityEngine.MonoBehaviour self)

Disassembly:
	0x03C371B0 LDR X0, [X0 + 0x608]
	0x03C371B4 BL 0x1C16CF4
	0x03C371B8 ADRP X0, 0x528000
	0x03C371BC LDR X0, [X0 + 0x5C8]
	0x03C371C0 BL 0x1C16CF4
	0x03C371C4 ADRP X0, 0x528000
	0x03C371C8 LDR X0, [X0 + 0x5D0]
	0x03C371CC BL 0x1C16CF4
	0x03C371D0 ADRP X0, 0x528000
	0x03C371D4 LDR X0, [X0 + 0x5D8]
	0x03C371D8 BL 0x1C16CF4
	0x03C371DC ADRP X0, 0x528000
	0x03C371E0 LDR X0, [X0 + 0x5E0]
	0x03C371E4 BL 0x1C16CF4
	0x03C371E8 ADRP X0, 0x528000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AF000
	005 Move X1, [X20+1088]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51671040
	010 Add X0, X0, 53
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1088], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void InvokeDelayed(UnityEngine.MonoBehaviour self, System.String methodName, System.Single time, System.Single repeatRate)

Disassembly:
	0x03C372BC MOV X0, X8
	0x03C372C0 BL 0x1C16DFC
	0x03C372C4 MOV X0, X23
	0x03C372C8 MOV X1, X31
	0x03C372CC MOV X2, X31
	0x03C372D0 BL 0x3395194
	0x03C372D4 TBNZ X0, 0x0, 0x3C37790
	0x03C372D8 CBZ X23, 0x3C377E0
	0x03C372DC LDR X8, [X23]
	0x03C372E0 MOV X0, X23
	0x03C372E4 LDR X9, [X8 + 0x2C8]
	0x03C372E8 LDR X1, [X8 + 0x2D0]
	0x03C372EC BLR X9
	0x03C372F0 MOV X1, X31
	0x03C372F4 MOV X25, X0
	0x03C372F8 BL 0x32277A8
	0x03C372FC TBNZ X0, 0x0, 0x3C3732C
	0x03C37300 CBZ X20, 0x3C377E0
	0x03C37304 MOV X0, X20
	0x03C37308 MOV X1, X25
	0x03C3730C MOV X2, X31
	0x03C37310 BL 0x32333E0
	0x03C37314 ADRP X8, 0x4C5000

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x7AF000
	008 Move X2, [X21+1096]
	009 Move V8, V1
	010 Move V9, V0
	011 Move X19, X1
	012 Move X20, X0
	013 Compare X2, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51482624
	016 Add X0, X0, 376
	017 Call 0x1C17CB8
	018 Move X2, X0
	019 Move [X21+1096], X0
	020 Move X0, X20
	021 Move X1, X19
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Move X21, [X31+24]
	026 Move V0, V9
	027 Move V1, V8
	028 Move D9, [X31+48]
	029 Move D8, [X31+56]
	030 CallNoReturn X2

Method: System.Void CancelInvoke(UnityEngine.MonoBehaviour self, System.String methodName)

Disassembly:
	0x03C3748C LDR X8, [X23]
	0x03C37490 MOV X0, X23
	0x03C37494 LDR X9, [X8 + 0x2C8]
	0x03C37498 LDR X1, [X8 + 0x2D0]
	0x03C3749C BLR X9
	0x03C374A0 ADRP X8, 0x528000
	0x03C374A4 LDR X8, [X8 + 0x5E8]
	0x03C374A8 MOV X2, X31
	0x03C374AC LDR X1, [X8]
	0x03C374B0 BL 0x321BA08
	0x03C374B4 TBNZ X0, 0x0, 0x3C37778
	0x03C374B8 LDR X8, [X23]
	0x03C374BC MOV X0, X23
	0x03C374C0 LDP X9, X1, [X8 + 0x1A8]
	0x03C374C4 BLR X9
	0x03C374C8 ADRP X8, 0x528000
	0x03C374CC LDR X8, [X8 + 0x5D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AF000
	006 Move X2, [X21+1104]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51556352
	012 Add X0, X0, 1253
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1104], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean IsInvoking(UnityEngine.MonoBehaviour self, System.String methodName)

Disassembly:
	0x03C37514 LDP X9, X1, [X8 + 0x1A8]
	0x03C37518 BLR X9
	0x03C3751C ADRP X8, 0x528000
	0x03C37520 LDR X8, [X8 + 0x5A8]
	0x03C37524 MOV X2, X31
	0x03C37528 LDR X1, [X8]
	0x03C3752C BL 0x321BA08
	0x03C37530 TBZ X0, 0x0, 0x3C37560
	0x03C37534 LDR X8, [X23]
	0x03C37538 MOV X0, X23
	0x03C3753C LDR X9, [X8 + 0x2C8]
	0x03C37540 LDR X1, [X8 + 0x2D0]
	0x03C37544 BLR X9
	0x03C37548 ADRP X8, 0x528000
	0x03C3754C LDR X8, [X8 + 0x5E8]
	0x03C37550 MOV X2, X31
	0x03C37554 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AF000
	006 Move X2, [X21+1112]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51605504
	012 Add X0, X0, 720
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1112], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean IsObjectMonoBehaviour(UnityEngine.Object obj)

Disassembly:
	0x03C3766C LDR X0, [X8]
	0x03C37670 BL 0x32277A8
	0x03C37674 TBNZ X0, 0x0, 0x3C37710
	0x03C37678 ADRP X8, 0x4F0000
	0x03C3767C LDR X8, [X8 + 0x7F8]
	0x03C37680 MOV X0, X25
	0x03C37684 MOV X3, X31
	0x03C37688 LDR X1, [X8]
	0x03C3768C ADRP X8, 0x4BD000
	0x03C37690 LDR X8, [X8 + 0xEC8]
	0x03C37694 LDR X2, [X8]
	0x03C37698 BL 0x32293BC
	0x03C3769C LDR X8, [X24]
	0x03C376A0 MOV X23, X0
	0x03C376A4 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AF000
	005 Move X1, [X20+1120]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51589120
	010 Add X0, X0, 267
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1120], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Coroutine StartCoroutineManaged(System.String methodName, System.Object value)

Disassembly:
	0x03C376A8 CBNZ W9, 0x3C376B4
	0x03C376AC MOV X0, X8
	0x03C376B0 BL 0x1C16DFC
	0x03C376B4 CBZ X23, 0x3C377E0
	0x03C376B8 LDR X8, [X24]
	0x03C376BC MOV X0, X23
	0x03C376C0 MOV X2, X31
	0x03C376C4 LDR X8, [X8 + 0xB8]
	0x03C376C8 LDR X1, [X8]
	0x03C376CC BL 0x3226F64
	0x03C376D0 TBZ X0, 0x0, 0x3C37710
	0x03C376D4 LDR X0, [X24]
	0x03C376D8 LDR W8, [X0 + 0xE0]
	0x03C376DC CBNZ W8, 0x3C376E8
	0x03C376E0 BL 0x1C16DFC
	0x03C376E4 LDR X0, [X24]
	0x03C376E8 LDR X8, [X0 + 0xB8]
	0x03C376EC LDR X8, [X8]
	0x03C376F0 CBZ X8, 0x3C377E0
	0x03C376F4 LDR W1, [X8 + 0x10]
	0x03C376F8 LDR W8, [X25 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7AF000
	007 Move X3, [X22+1128]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51482624
	014 Add X0, X0, 486
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1128], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: UnityEngine.Coroutine StartCoroutineManaged2(System.Collections.IEnumerator enumerator)

Disassembly:
	0x03C377EC STP X28, X27, [X31 + 0x10]
	0x03C377F0 STP X26, X25, [X31 + 0x20]
	0x03C377F4 STP X24, X23, [X31 + 0x30]
	0x03C377F8 STP X22, X21, [X31 + 0x40]
	0x03C377FC STP X20, X19, [X31 + 0x50]
	0x03C37800 ADRP X22, 0x7AE000
	0x03C37804 LDRB W8, [X22 + 0x4CA]
	0x03C37808 MOV X19, X2
	0x03C3780C MOV X20, X1
	0x03C37810 MOV X21, X0
	0x03C37814 TBNZ X8, 0x0, 0x3C37880
	0x03C37818 ADRP X0, 0x4BC000
	0x03C3781C LDR X0, [X0 + 0x7D0]
	0x03C37820 BL 0x1C16CF4
	0x03C37824 ADRP X0, 0x500000
	0x03C37828 LDR X0, [X0 + 0xDC8]
	0x03C3782C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AF000
	006 Move X2, [X21+1136]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51531776
	012 Add X0, X0, 342
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1136], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void StopCoroutineManaged(UnityEngine.Coroutine routine)

Disassembly:
	0x03C37A58 LDR X8, [X8 + 0x808]
	0x03C37A5C LDR X0, [X8]
	0x03C37A60 BL 0x1C16F10
	0x03C37A64 MOVZ W1, 0x1
	0x03C37A68 MOVZ W2, 0x1
	0x03C37A6C MOV X3, X31
	0x03C37A70 MOV X20, X0
	0x03C37A74 BL 0x334E484
	0x03C37A78 ADRP X8, 0x500000
	0x03C37A7C LDR X8, [X8 + 0xDC8]
	0x03C37A80 LDR X0, [X8]
	0x03C37A84 LDR W8, [X0 + 0xE0]
	0x03C37A88 CBNZ W8, 0x3C37A90
	0x03C37A8C BL 0x1C16DFC
	0x03C37A90 MOV X0, X20
	0x03C37A94 BL 0x3C370DC
	0x03C37A98 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AF000
	006 Move X2, [X21+1144]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51638272
	012 Add X0, X0, 733
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1144], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void StopCoroutineFromEnumeratorManaged(System.Collections.IEnumerator routine)

Disassembly:
	0x03C37924 MOV X22, X0
	0x03C37928 BL 0x3231B28
	0x03C3792C LDR X8, [X29]
	0x03C37930 STR X8, [X20]
	0x03C37934 LDR X24, [X29]
	0x03C37938 CBZ X24, 0x3C37AD8
	0x03C3793C LDR X8, [X21]
	0x03C37940 LDR W25, [X24 + 0x10]
	0x03C37944 MOV X0, X21
	0x03C37948 LDP X9, X1, [X8 + 0x1B8]
	0x03C3794C BLR X9
	0x03C37950 MOV X23, X0
	0x03C37954 CBZ W25, 0x3C37970
	0x03C37958 LDR X1, [X28]
	0x03C3795C MOV X0, X23
	0x03C37960 MOV X2, X24
	0x03C37964 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7AF000
	006 Move X2, [X21+1152]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51453952
	012 Add X0, X0, 3536
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1152], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.String GetScriptClassName()

Disassembly:
	0x03C37BF4 CBNZ W8, 0x3C37BFC
	0x03C37BF8 BL 0x1C16DFC
	0x03C37BFC LDR X1, [X20]
	0x03C37C00 MOV X0, X19
	0x03C37C04 MOV X2, X31
	0x03C37C08 BL 0x33B2C70
	0x03C37C0C MOVZ W8, 0x4003
	0x03C37C10 MOVK W8, 0x80000000
	0x03C37C14 STR W8, [X19 + 0x60]
	0x03C37C18 LDP X20, X19, [X31 + 0x10]
	0x03C37C1C LDP X30, X21, [X31], #0x20
	0x03C37C20 RET
	0x03C37C24 STR X30, [X31 - 0x40]!
	0x03C37C28 STP X24, X23, [X31 + 0x10]
	0x03C37C2C STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AF000
	005 Move X1, [X20+1160]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51597312
	010 Add X0, X0, 98
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1160], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void OnCancellationTokenCreated()

Disassembly:
	0x03C37124 BL 0x1C16CF4
	0x03C37128 ADRP X0, 0x4BC000
	0x03C3712C LDR X0, [X0 + 0x6C0]
	0x03C37130 BL 0x1C16CF4
	0x03C37134 ADRP X0, 0x4BD000
	0x03C37138 LDR X0, [X0 + 0xFE0]
	0x03C3713C BL 0x1C16CF4
	0x03C37140 ADRP X0, 0x4F0000
	0x03C37144 LDR X0, [X0 + 0x7F8]
	0x03C37148 BL 0x1C16CF4
	0x03C3714C ADRP X0, 0x528000
	0x03C37150 LDR X0, [X0 + 0x5A8]
	0x03C37154 BL 0x1C16CF4
	0x03C37158 ADRP X0, 0x528000
	0x03C3715C LDR X0, [X0 + 0x5B0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7AF000
	005 Move X1, [X20+1168]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51453952
	010 Add X0, X0, 3630
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1168], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor()

Disassembly:
	0x03C37C30 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Call Component..ctor, X0
	002 Return 

