Type: UnityEngine.Plane

Method: UnityEngine.Vector3 get_normal()

Disassembly:
	0x03C0B91C LDP D9, D8, [X31 + 0x10]
	0x03C0B920 AND W0, W0, 0x1
	0x03C0B924 LDR V10, [X31], #0x30

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move V2, [X0+8]
	004 Return X0

Method: System.Single get_distance()

Disassembly:
	0x03C0B928 RET
	0x03C0B92C MOV X1, X31

ISIL:
	001 Move V0, [X0+12]
	002 Return V0

Method: System.Void .ctor(UnityEngine.Vector3 inNormal, UnityEngine.Vector3 inPoint)

Disassembly:
	0x03C0B930 MOV X2, X31
	0x03C0B934 B 0x3C0B938
	0x03C0B938 SUB X31, X31, 0x40
	0x03C0B93C STP X30, X23, [X31 + 0x10]
	0x03C0B940 STP X22, X21, [X31 + 0x20]
	0x03C0B944 STP X20, X19, [X31 + 0x30]
	0x03C0B948 ADRP X23, 0x7D9000
	0x03C0B94C ADRP X22, 0x4EF000
	0x03C0B950 LDRB W8, [X23 + 0x213]
	0x03C0B954 LDR X22, [X22 + 0xE78]
	0x03C0B958 MOV X20, X2
	0x03C0B95C MOV X21, X1
	0x03C0B960 MOV X19, X0
	0x03C0B964 TBNZ X8, 0x0, 0x3C0B9A0
	0x03C0B968 ADRP X0, 0x4EA000
	0x03C0B96C LDR X0, [X0 + 0xC48]
	0x03C0B970 BL 0x1C16CF4
	0x03C0B974 ADRP X0, 0x4E8000
	0x03C0B978 LDR X0, [X0 + 0x9D0]
	0x03C0B97C BL 0x1C16CF4
	0x03C0B980 ADRP X0, 0x553000
	0x03C0B984 LDR X0, [X0 + 0xCB0]
	0x03C0B988 BL 0x1C16CF4
	0x03C0B98C ADRP X0, 0x4EF000
	0x03C0B990 LDR X0, [X0 + 0xE78]
	0x03C0B994 BL 0x1C16CF4
	0x03C0B998 MOVZ W8, 0x1
	0x03C0B99C STRB W8, [X23 + 0x213]
	0x03C0B9A0 MOV X0, X21
	0x03C0B9A4 MOV X1, X31
	0x03C0B9A8 BL 0x32277A8
	0x03C0B9AC LDR X8, [X22]
	0x03C0B9B0 ANDS W31, W0, 0x1
	0x03C0B9B4 CSEL X21, X8, X21, NE
	0x03C0B9B8 CBNZ X20, 0x3C0B9F4
	0x03C0B9BC ADRP X8, 0x4EA000
	0x03C0B9C0 LDR X8, [X8 + 0xC48]
	0x03C0B9C4 LDR X0, [X8]
	0x03C0B9C8 LDR W8, [X0 + 0xE0]
	0x03C0B9CC CBNZ W8, 0x3C0B9D4
	0x03C0B9D0 BL 0x1C16DFC
	0x03C0B9D4 MOV X0, X31
	0x03C0B9D8 BL 0x3338524
	0x03C0B9DC CBZ X0, 0x3C0BB68
	0x03C0B9E0 LDR X8, [X0]
	0x03C0B9E4 LDR X9, [X8 + 0x218]
	0x03C0B9E8 LDR X1, [X8 + 0x220]
	0x03C0B9EC BLR X9
	0x03C0B9F0 MOV X20, X0
	0x03C0B9F4 ADRP X8, 0x4E8000
	0x03C0B9F8 LDR X8, [X8 + 0x9D0]
	0x03C0B9FC MOVZ W1, 0x4
	0x03C0BA00 LDR X0, [X8]
	0x03C0BA04 BL 0x1C16D6C
	0x03C0BA08 LDR V0, [X19]
	0x03C0BA0C MOV X22, X0
	0x03C0BA10 ADD X0, X31, 0xC
	0x03C0BA14 MOV X1, X21
	0x03C0BA18 MOV X2, X20
	0x03C0BA1C MOV X3, X31
	0x03C0BA20 STR S0, [X31 + 0xC]
	0x03C0BA24 BL 0x338FFB4
	0x03C0BA28 CBZ X22, 0x3C0BB68
	0x03C0BA2C MOV X23, X0
	0x03C0BA30 CBZ X0, 0x3C0BA48
	0x03C0BA34 LDR X8, [X22]
	0x03C0BA38 MOV X0, X23
	0x03C0BA3C LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x7CE000
	011 Move W8, [X20+1925]
	012 Move V8, V5
	013 Move V9, V4
	014 Move V10, V3
	015 Move V11, V2
	016 Move V12, V1
	017 Move V13, V0
	018 Move X19, X0
	019 Compare W8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, 0x4E9000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1925], W8
	026 Move X8, 0x4E9000
	027 Move X8, [X8+1448]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Multiply S0, S13, S13
	034 Multiply S1, S12, S12
	035 Move X8, -51511296
	036 Add S0, S0, S1
	037 Move V1, [X8+380]
	038 Multiply S2, S11, S11
	039 Add S0, S2, S0
	040 NotImplemented "Instruction FSQRT not yet implemented."
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 NotImplemented "Instruction FDIV not yet implemented."
	043 NotImplemented "Instruction FDIV not yet implemented."
	044 NotImplemented "Instruction FDIV not yet implemented."
	045 Move X20, 0x7CE000
	046 Move W8, [X20+1923]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0x4E9000
	050 Move X0, [X0+1440]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+1923], W8
	054 Move X8, 0x4E9000
	055 Move X8, [X8+1440]
	056 Move X8, [X8]
	057 Move X8, [X8+184]
	058 Move S1, [X8]
	059 Move S2, [X8+4]
	060 Move V0, [X8+8]
	061 Move [X19], S1
	062 Move [X19+8], S2
	063 Multiply S1, S10, S1
	064 Multiply S2, S9, S2
	065 Multiply S3, S8, S0
	066 Add S1, S1, S2
	067 Add S1, S3, S1
	068 NotImplemented "Instruction FNEG not yet implemented."
	069 Move [X19+8], S0
	070 Move [X19+16], S1
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X30, [X31+48]
	074 Move D9, [X31+32]
	075 Move D8, [X31+40]
	076 Move D11, [X31+16]
	077 Move D10, [X31+24]
	078 Move D13, [X31+80]
	079 Move D12, [X31+88]
	080 Return 

Method: System.Void .ctor(UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 c)

Disassembly:
	0x03C0BA40 BL 0x1C16E00
	0x03C0BA44 CBZ X0, 0x3C0BB5C
	0x03C0BA48 LDR W8, [X22 + 0x18]
	0x03C0BA4C CBZ W8, 0x3C0BB58
	0x03C0BA50 STR X23, [X22 + 0x20]
	0x03C0BA54 LDR V0, [X19 + 0x4]
	0x03C0BA58 ADD X0, X31, 0xC
	0x03C0BA5C MOV X1, X21
	0x03C0BA60 MOV X2, X20
	0x03C0BA64 MOV X3, X31
	0x03C0BA68 STR S0, [X31 + 0xC]
	0x03C0BA6C BL 0x338FFB4
	0x03C0BA70 MOV X23, X0
	0x03C0BA74 CBZ X0, 0x3C0BA8C
	0x03C0BA78 LDR X8, [X22]
	0x03C0BA7C MOV X0, X23
	0x03C0BA80 LDR X1, [X8 + 0x40]
	0x03C0BA84 BL 0x1C16E00
	0x03C0BA88 CBZ X0, 0x3C0BB5C
	0x03C0BA8C LDR W8, [X22 + 0x18]
	0x03C0BA90 CMP W8, 0x1
	0x03C0BA94 B.LS 0x3C0BB58
	0x03C0BA98 STR X23, [X22 + 0x28]
	0x03C0BA9C LDR V0, [X19 + 0x8]
	0x03C0BAA0 ADD X0, X31, 0xC
	0x03C0BAA4 MOV X1, X21
	0x03C0BAA8 MOV X2, X20
	0x03C0BAAC MOV X3, X31
	0x03C0BAB0 STR S0, [X31 + 0xC]
	0x03C0BAB4 BL 0x338FFB4
	0x03C0BAB8 MOV X23, X0
	0x03C0BABC CBZ X0, 0x3C0BAD4
	0x03C0BAC0 LDR X8, [X22]
	0x03C0BAC4 MOV X0, X23
	0x03C0BAC8 LDR X1, [X8 + 0x40]
	0x03C0BACC BL 0x1C16E00
	0x03C0BAD0 CBZ X0, 0x3C0BB5C
	0x03C0BAD4 LDR W8, [X22 + 0x18]
	0x03C0BAD8 CMP W8, 0x2
	0x03C0BADC B.LS 0x3C0BB58
	0x03C0BAE0 STR X23, [X22 + 0x30]
	0x03C0BAE4 LDR V0, [X19 + 0xC]
	0x03C0BAE8 ADD X0, X31, 0xC
	0x03C0BAEC MOV X1, X21
	0x03C0BAF0 MOV X2, X20
	0x03C0BAF4 MOV X3, X31
	0x03C0BAF8 STR S0, [X31 + 0xC]
	0x03C0BAFC BL 0x338FFB4
	0x03C0BB00 MOV X19, X0
	0x03C0BB04 CBZ X0, 0x3C0BB1C
	0x03C0BB08 LDR X8, [X22]
	0x03C0BB0C MOV X0, X19
	0x03C0BB10 LDR X1, [X8 + 0x40]
	0x03C0BB14 BL 0x1C16E00
	0x03C0BB18 CBZ X0, 0x3C0BB5C
	0x03C0BB1C LDR W8, [X22 + 0x18]
	0x03C0BB20 CMP W8, 0x3
	0x03C0BB24 B.LS 0x3C0BB58
	0x03C0BB28 ADRP X8, 0x553000
	0x03C0BB2C LDR X8, [X8 + 0xCB0]
	0x03C0BB30 STR X19, [X22 + 0x38]
	0x03C0BB34 MOV X1, X22
	0x03C0BB38 MOV X2, X31
	0x03C0BB3C LDR X0, [X8]
	0x03C0BB40 BL 0x3C96574
	0x03C0BB44 LDP X20, X19, [X31 + 0x30]
	0x03C0BB48 LDP X22, X21, [X31 + 0x20]
	0x03C0BB4C LDP X30, X23, [X31 + 0x10]
	0x03C0BB50 ADD X31, X31, 0x40
	0x03C0BB54 RET
	0x03C0BB58 BL 0x1C16F28
	0x03C0BB5C BL 0x1C16F44
	0x03C0BB60 MOV X1, X31
	0x03C0BB64 BL 0x1C16DEC
	0x03C0BB68 BL 0x1C16F20
	0x03C0BB6C LDR W0, [X0]
	0x03C0BB70 RET
	0x03C0BB74 STR W1, [X0]
	0x03C0BB78 RET
	0x03C0BB7C LDR W0, [X0 + 0x4]
	0x03C0BB80 RET
	0x03C0BB84 STR W1, [X0 + 0x4]
	0x03C0BB88 RET
	0x03C0BB8C LDR W0, [X0 + 0x8]
	0x03C0BB90 RET
	0x03C0BB94 STR W1, [X0 + 0x8]
	0x03C0BB98 RET
	0x03C0BB9C LDR W0, [X0 + 0xC]
	0x03C0BBA0 RET
	0x03C0BBA4 STR W1, [X0 + 0xC]
	0x03C0BBA8 RET
	0x03C0BBAC STP X30, X21, [X31 - 0x20]!
	0x03C0BBB0 STP X20, X19, [X31 + 0x10]
	0x03C0BBB4 ADRP X21, 0x7D9000

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move V10, V0
	013 Move S7, [X31+100]
	014 Move S0, [X31+104]
	015 Move V6, [X31+96]
	016 Move X20, 0x7CE000
	017 Move W8, [X20+1925]
	018 Subtract S3, S3, S10
	019 Subtract S4, S4, S1
	020 Subtract S5, S5, S2
	021 Subtract S6, S6, S10
	022 Subtract S7, S7, S1
	023 Subtract S0, S0, S2
	024 Move X19, X0
	025 Multiply S11, S4, S0
	026 Multiply S12, S5, S7
	027 Multiply S14, S5, S6
	028 Multiply S15, S3, S0
	029 Multiply S8, S3, S7
	030 Multiply S9, S4, S6
	031 Compare W8, 0
	032 JumpIfNotEqual {42}
	033 Move X0, 0x4E9000
	034 Move X0, [X0+1448]
	035 Move V13, V2
	036 Move [X31+76], S1
	037 Call 0x1C17CF4
	038 Move V1, [X31+76]
	039 Move V2, V13
	040 Move W8, 1
	041 Move [X20+1925], W8
	042 Move X8, 0x4E9000
	043 Move X8, [X8+1448]
	044 Subtract S13, S11, S12
	045 Subtract S12, S14, S15
	046 Subtract S11, S8, S9
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {56}
	051 Move V8, V2
	052 Move V9, V1
	053 Call 0x1C17DFC
	054 Move V1, V9
	055 Move V2, V8
	056 Move X8, -51511296
	057 Multiply S0, S13, S13
	058 Multiply S3, S12, S12
	059 Move V4, [X8+380]
	060 Add S0, S0, S3
	061 Multiply S3, S11, S11
	062 Add S0, S3, S0
	063 NotImplemented "Instruction FSQRT not yet implemented."
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 NotImplemented "Instruction FDIV not yet implemented."
	066 NotImplemented "Instruction FDIV not yet implemented."
	067 NotImplemented "Instruction FDIV not yet implemented."
	068 Move X20, 0x7CE000
	069 Move W8, [X20+1923]
	070 Compare W8, 0
	071 JumpIfNotEqual {81}
	072 Move X0, 0x4E9000
	073 Move X0, [X0+1440]
	074 Move V8, V2
	075 Move V9, V1
	076 Call 0x1C17CF4
	077 Move V1, V9
	078 Move V2, V8
	079 Move W8, 1
	080 Move [X20+1923], W8
	081 Move X8, 0x4E9000
	082 Move X8, [X8+1440]
	083 Move X8, [X8]
	084 Move X8, [X8+184]
	085 Move S4, [X8]
	086 Move S3, [X8+4]
	087 Move V0, [X8+8]
	088 Move [X19], S4
	089 Move [X19+8], S3
	090 Multiply S5, S10, S4
	091 Multiply S4, S1, S3
	092 Multiply S3, S2, S0
	093 Add S1, S5, S4
	094 Add S1, S3, S1
	095 NotImplemented "Instruction FNEG not yet implemented."
	096 Move [X19+8], S0
	097 Move [X19+16], S1
	098 Move X20, [X31+80]
	099 Move X19, [X31+88]
	100 Move X30, [X31+64]
	101 Move D9, [X31+48]
	102 Move D8, [X31+56]
	103 Move D11, [X31+32]
	104 Move D10, [X31+40]
	105 Move D13, [X31+16]
	106 Move D12, [X31+24]
	107 Move D15, [X31+96]
	108 Move D14, [X31+104]
	109 Return 

Method: System.Void SetNormalAndPosition(UnityEngine.Vector3 inNormal, UnityEngine.Vector3 inPoint)

Disassembly:
	0x03C0BBB8 ADRP X20, 0x4E8000
	0x03C0BBBC LDRB W8, [X21 + 0x214]
	0x03C0BBC0 LDR X20, [X20 + 0x5A8]
	0x03C0BBC4 MOV X19, X0
	0x03C0BBC8 TBNZ X8, 0x0, 0x3C0BBE0
	0x03C0BBCC ADRP X0, 0x4E8000
	0x03C0BBD0 LDR X0, [X0 + 0x5A8]
	0x03C0BBD4 BL 0x1C16CF4
	0x03C0BBD8 MOVZ W8, 0x1
	0x03C0BBDC STRB W8, [X21 + 0x214]
	0x03C0BBE0 LDR X0, [X20]
	0x03C0BBE4 LDR W20, [X19]
	0x03C0BBE8 LDR W19, [X19 + 0x8]
	0x03C0BBEC LDR W8, [X0 + 0xE0]
	0x03C0BBF0 CBNZ W8, 0x3C0BBF8
	0x03C0BBF4 BL 0x1C16DFC
	0x03C0BBF8 ADD W1, W19, W20
	0x03C0BBFC MOV W0, W20
	0x03C0BC00 LDP X20, X19, [X31 + 0x10]
	0x03C0BC04 MOV X2, X31
	0x03C0BC08 LDP X30, X21, [X31], #0x20
	0x03C0BC0C B 0x337EE94
	0x03C0BC10 STP X30, X21, [X31 - 0x20]!
	0x03C0BC14 STP X20, X19, [X31 + 0x10]
	0x03C0BC18 ADRP X21, 0x7D9000
	0x03C0BC1C ADRP X20, 0x4E8000
	0x03C0BC20 LDRB W8, [X21 + 0x215]
	0x03C0BC24 LDR X20, [X20 + 0x5A8]
	0x03C0BC28 MOV X19, X0
	0x03C0BC2C TBNZ X8, 0x0, 0x3C0BC44
	0x03C0BC30 ADRP X0, 0x4E8000
	0x03C0BC34 LDR X0, [X0 + 0x5A8]
	0x03C0BC38 BL 0x1C16CF4
	0x03C0BC3C MOVZ W8, 0x1
	0x03C0BC40 STRB W8, [X21 + 0x215]
	0x03C0BC44 LDR X0, [X20]
	0x03C0BC48 LDR W20, [X19 + 0x4]
	0x03C0BC4C LDR W19, [X19 + 0xC]
	0x03C0BC50 LDR W8, [X0 + 0xE0]
	0x03C0BC54 CBNZ W8, 0x3C0BC5C
	0x03C0BC58 BL 0x1C16DFC
	0x03C0BC5C ADD W1, W19, W20
	0x03C0BC60 MOV W0, W20
	0x03C0BC64 LDP X20, X19, [X31 + 0x10]
	0x03C0BC68 MOV X2, X31
	0x03C0BC6C LDP X30, X21, [X31], #0x20
	0x03C0BC70 B 0x337EE94
	0x03C0BC74 STP X30, X21, [X31 - 0x20]!
	0x03C0BC78 STP X20, X19, [X31 + 0x10]
	0x03C0BC7C ADRP X21, 0x7D9000
	0x03C0BC80 ADRP X20, 0x4E8000
	0x03C0BC84 LDRB W8, [X21 + 0x216]
	0x03C0BC88 LDR X20, [X20 + 0x5A8]
	0x03C0BC8C MOV X19, X0
	0x03C0BC90 TBNZ X8, 0x0, 0x3C0BCA8
	0x03C0BC94 ADRP X0, 0x4E8000
	0x03C0BC98 LDR X0, [X0 + 0x5A8]
	0x03C0BC9C BL 0x1C16CF4
	0x03C0BCA0 MOVZ W8, 0x1
	0x03C0BCA4 STRB W8, [X21 + 0x216]
	0x03C0BCA8 LDR X0, [X20]
	0x03C0BCAC LDR W20, [X19]
	0x03C0BCB0 LDR W19, [X19 + 0x8]
	0x03C0BCB4 LDR W8, [X0 + 0xE0]
	0x03C0BCB8 CBNZ W8, 0x3C0BCC0
	0x03C0BCBC BL 0x1C16DFC
	0x03C0BCC0 ADD W1, W19, W20
	0x03C0BCC4 MOV W0, W20

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x7CE000
	011 Move W8, [X20+1925]
	012 Move V8, V5
	013 Move V9, V4
	014 Move V10, V3
	015 Move V11, V2
	016 Move V12, V1
	017 Move V13, V0
	018 Move X19, X0
	019 Compare W8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, 0x4E9000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1925], W8
	026 Move X8, 0x4E9000
	027 Move X8, [X8+1448]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Multiply S0, S13, S13
	034 Multiply S1, S12, S12
	035 Move X8, -51511296
	036 Add S0, S0, S1
	037 Move V1, [X8+380]
	038 Multiply S2, S11, S11
	039 Add S0, S2, S0
	040 NotImplemented "Instruction FSQRT not yet implemented."
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 NotImplemented "Instruction FDIV not yet implemented."
	043 NotImplemented "Instruction FDIV not yet implemented."
	044 NotImplemented "Instruction FDIV not yet implemented."
	045 Move X20, 0x7CE000
	046 Move W8, [X20+1923]
	047 Compare W8, 0
	048 JumpIfNotEqual {54}
	049 Move X0, 0x4E9000
	050 Move X0, [X0+1440]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+1923], W8
	054 Move X8, 0x4E9000
	055 Move X8, [X8+1440]
	056 Move X8, [X8]
	057 Move X8, [X8+184]
	058 Move S1, [X8]
	059 Move S2, [X8+4]
	060 Move V0, [X8+8]
	061 Move [X19], S1
	062 Move [X19+8], S2
	063 Multiply S1, S10, S1
	064 Multiply S2, S9, S2
	065 Multiply S3, S8, S0
	066 Add S1, S1, S2
	067 Add S1, S3, S1
	068 NotImplemented "Instruction FNEG not yet implemented."
	069 Move [X19+8], S0
	070 Move [X19+16], S1
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X30, [X31+48]
	074 Move D9, [X31+32]
	075 Move D8, [X31+40]
	076 Move D11, [X31+16]
	077 Move D10, [X31+24]
	078 Move D13, [X31+80]
	079 Move D12, [X31+88]
	080 Return 

Method: UnityEngine.Vector3 ClosestPointOnPlane(UnityEngine.Vector3 point)

Disassembly:
	0x03C0BCC8 LDP X20, X19, [X31 + 0x10]
	0x03C0BCCC MOV X2, X31
	0x03C0BCD0 LDP X30, X21, [X31], #0x20
	0x03C0BCD4 B 0x337EDF0
	0x03C0BCD8 STP X30, X21, [X31 - 0x20]!
	0x03C0BCDC STP X20, X19, [X31 + 0x10]
	0x03C0BCE0 ADRP X21, 0x7D9000
	0x03C0BCE4 ADRP X20, 0x4E8000
	0x03C0BCE8 LDRB W8, [X21 + 0x217]
	0x03C0BCEC LDR X20, [X20 + 0x5A8]
	0x03C0BCF0 MOV X19, X0
	0x03C0BCF4 TBNZ X8, 0x0, 0x3C0BD0C
	0x03C0BCF8 ADRP X0, 0x4E8000
	0x03C0BCFC LDR X0, [X0 + 0x5A8]
	0x03C0BD00 BL 0x1C16CF4

ISIL:
	001 Move S3, [X0]
	002 Move S4, [X0+4]
	003 Move S5, [X0+8]
	004 Move S6, [X0+12]
	005 Multiply S7, S0, S3
	006 Multiply S16, S1, S4
	007 Add S7, S7, S16
	008 Multiply S16, S2, S5
	009 Add S7, S16, S7
	010 Add S6, S6, S7
	011 Multiply S3, S3, S6
	012 Multiply S4, S4, S6
	013 Multiply S5, S5, S6
	014 Subtract S0, S0, S3
	015 Subtract S1, S1, S4
	016 Subtract S2, S2, S5
	017 Return X0

Method: System.Single GetDistanceToPoint(UnityEngine.Vector3 point)

Disassembly:
	0x03C0BD04 MOVZ W8, 0x1
	0x03C0BD08 STRB W8, [X21 + 0x217]
	0x03C0BD0C LDR X0, [X20]
	0x03C0BD10 LDR W20, [X19 + 0x4]
	0x03C0BD14 LDR W19, [X19 + 0xC]
	0x03C0BD18 LDR W8, [X0 + 0xE0]
	0x03C0BD1C CBNZ W8, 0x3C0BD24
	0x03C0BD20 BL 0x1C16DFC
	0x03C0BD24 ADD W1, W19, W20

ISIL:
	001 Move S3, [X0]
	002 Move S4, [X0+4]
	003 Move S5, [X0+8]
	004 Move S6, [X0+12]
	005 Multiply S0, S0, S3
	006 Multiply S1, S1, S4
	007 Add S0, S0, S1
	008 Multiply S1, S2, S5
	009 Add S0, S1, S0
	010 Add S0, S6, S0
	011 Return V0

Method: System.Boolean Raycast(UnityEngine.Ray ray, out System.Single enter)

Disassembly:
	0x03C0BD28 MOV W0, W20
	0x03C0BD2C LDP X20, X19, [X31 + 0x10]
	0x03C0BD30 MOV X2, X31
	0x03C0BD34 LDP X30, X21, [X31], #0x20
	0x03C0BD38 B 0x337EDF0
	0x03C0BD3C STP W1, W2, [X0]
	0x03C0BD40 STP W3, W4, [X0 + 0x8]
	0x03C0BD44 RET
	0x03C0BD48 STR X30, [X31 - 0x60]!
	0x03C0BD4C STP X28, X27, [X31 + 0x10]
	0x03C0BD50 STP X26, X25, [X31 + 0x20]
	0x03C0BD54 STP X24, X23, [X31 + 0x30]
	0x03C0BD58 STP X22, X21, [X31 + 0x40]
	0x03C0BD5C STP X20, X19, [X31 + 0x50]
	0x03C0BD60 ADRP X26, 0x7D9000
	0x03C0BD64 LDRB W8, [X26 + 0xD8B]
	0x03C0BD68 MOV X20, X2
	0x03C0BD6C MOV X21, X1
	0x03C0BD70 MOV X19, X0
	0x03C0BD74 CBNZ W8, 0x3C0BD8C
	0x03C0BD78 ADRP X0, 0x4E8000
	0x03C0BD7C LDR X0, [X0 + 0x5A8]
	0x03C0BD80 BL 0x1C16CF4
	0x03C0BD84 MOVZ W8, 0x1
	0x03C0BD88 STRB W8, [X26 + 0xD8B]
	0x03C0BD8C ADRP X25, 0x4E8000
	0x03C0BD90 LDR X25, [X25 + 0x5A8]
	0x03C0BD94 LDR X0, [X25]
	0x03C0BD98 LDR W8, [X0 + 0xE0]
	0x03C0BD9C CBNZ W8, 0x3C0BDA4
	0x03C0BDA0 BL 0x1C16DFC
	0x03C0BDA4 ADD W22, W20, W21
	0x03C0BDA8 MOV W0, W21
	0x03C0BDAC MOV W1, W22
	0x03C0BDB0 MOV X2, X31
	0x03C0BDB4 BL 0x337EE94
	0x03C0BDB8 ADRP X27, 0x7D9000
	0x03C0BDBC LDRB W8, [X27 + 0xD8D]
	0x03C0BDC0 MOV W23, W0
	0x03C0BDC4 CBNZ W8, 0x3C0BDDC
	0x03C0BDC8 ADRP X0, 0x4E8000
	0x03C0BDCC LDR X0, [X0 + 0x5A8]
	0x03C0BDD0 BL 0x1C16CF4
	0x03C0BDD4 MOVZ W8, 0x1
	0x03C0BDD8 STRB W8, [X27 + 0xD8D]
	0x03C0BDDC LDR X0, [X25]
	0x03C0BDE0 LDR W24, [X19]
	0x03C0BDE4 LDR W28, [X19 + 0x8]
	0x03C0BDE8 LDR W8, [X0 + 0xE0]
	0x03C0BDEC CBNZ W8, 0x3C0BDF4
	0x03C0BDF0 BL 0x1C16DFC
	0x03C0BDF4 ADD W1, W28, W24
	0x03C0BDF8 MOV W0, W24
	0x03C0BDFC MOV X2, X31
	0x03C0BE00 BL 0x337EDF0
	0x03C0BE04 CMP W23, W0
	0x03C0BE08 B.GE 0x3C0BFC8
	0x03C0BE0C LDRB W8, [X27 + 0xD8D]
	0x03C0BE10 CBNZ W8, 0x3C0BE28
	0x03C0BE14 ADRP X0, 0x4E8000
	0x03C0BE18 LDR X0, [X0 + 0x5A8]
	0x03C0BE1C BL 0x1C16CF4
	0x03C0BE20 MOVZ W8, 0x1
	0x03C0BE24 STRB W8, [X27 + 0xD8D]

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move S0, [X1+16]
	013 Move S1, [X1+20]
	014 Move S8, [X0]
	015 Move S9, [X0+4]
	016 Move S11, [X1+8]
	017 Move S2, [X1+12]
	018 Move S12, [X0+8]
	019 Move S10, [X0+12]
	020 Move X20, 0x7CF000
	021 Move S13, [X1]
	022 Move S14, [X1+4]
	023 Move W8, [X20+1450]
	024 Multiply S2, S2, S8
	025 Multiply S0, S0, S9
	026 Add S0, S2, S0
	027 Multiply S1, S1, S12
	028 Move X19, X2
	029 Add S15, S1, S0
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x4F0000
	033 Move X0, [X0+1208]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+1450], W8
	037 Move X8, 0x4F0000
	038 Move X8, [X8+1208]
	039 Move X9, -51511296
	040 Move V0, [X9+576]
	041 NotImplemented "Instruction FABS not yet implemented."
	042 Move X8, [X8]
	043 Move S2, W31
	044 NotImplemented "Instruction FMAXNM not yet implemented."
	045 Multiply S0, S1, S0
	046 Move X8, [X8+184]
	047 Move S1, 8
	048 Move V3, [X8]
	049 Multiply S1, S3, S1
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 NotImplemented "Instruction FCSEL not yet implemented."
	052 NotImplemented "Instruction FABD not yet implemented."
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move W0, W31
	055 Move [X19], W31
	056 Multiply S0, S8, S13
	057 Multiply S1, S9, S14
	058 Multiply S2, S12, S11
	059 Add S0, S0, S1
	060 Add S0, S2, S0
	061 NotImplemented "Instruction FNEG not yet implemented."
	062 Subtract S0, S0, S10
	063 NotImplemented "Instruction FDIV not yet implemented."
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Move [X19], S0
	067 Move X20, [X31+80]
	068 Move X19, [X31+88]
	069 Move X30, [X31+64]
	070 Move D9, [X31+48]
	071 Move D8, [X31+56]
	072 Move D11, [X31+32]
	073 Move D10, [X31+40]
	074 Move D13, [X31+16]
	075 Move D12, [X31+24]
	076 Move D15, [X31+96]
	077 Move D14, [X31+104]
	078 Return X0

Method: System.String ToString()

Disassembly:
	0x03C0BE28 LDR X0, [X25]
	0x03C0BE2C LDR W8, [X0 + 0xE0]
	0x03C0BE30 CBNZ W8, 0x3C0BE38
	0x03C0BE34 BL 0x1C16DFC

ISIL:
	001 Move X1, X31
	002 Move X2, X31
	003 Move X3, X31
	004 Call 0x3C1F1CC
	005 Return X0

Method: System.String ToString(System.String format, System.IFormatProvider formatProvider)

Disassembly:
	0x03C0BE38 MOV W0, W21
	0x03C0BE3C MOV W1, W22
	0x03C0BE40 MOV X2, X31
	0x03C0BE44 BL 0x337EDF0
	0x03C0BE48 LDRB W8, [X26 + 0xD8B]
	0x03C0BE4C MOV W22, W0
	0x03C0BE50 CBNZ W8, 0x3C0BE68
	0x03C0BE54 ADRP X0, 0x4E8000
	0x03C0BE58 LDR X0, [X0 + 0x5A8]
	0x03C0BE5C BL 0x1C16CF4
	0x03C0BE60 MOVZ W8, 0x1
	0x03C0BE64 STRB W8, [X26 + 0xD8B]
	0x03C0BE68 LDR X0, [X25]
	0x03C0BE6C LDR W23, [X19]
	0x03C0BE70 LDR W24, [X19 + 0x8]
	0x03C0BE74 LDR W8, [X0 + 0xE0]
	0x03C0BE78 CBNZ W8, 0x3C0BE80
	0x03C0BE7C BL 0x1C16DFC
	0x03C0BE80 ADD W1, W24, W23
	0x03C0BE84 MOV W0, W23
	0x03C0BE88 MOV X2, X31
	0x03C0BE8C BL 0x337EE94
	0x03C0BE90 CMP W22, W0
	0x03C0BE94 B.LE 0x3C0BFC8
	0x03C0BE98 ADRP X24, 0x7D9000
	0x03C0BE9C LDRB W8, [X24 + 0xD8C]
	0x03C0BEA0 UBFM X21, X21, 0x20, 0x3F
	0x03C0BEA4 UBFM X20, X20, 0x20, 0x3F
	0x03C0BEA8 CBNZ W8, 0x3C0BEC0
	0x03C0BEAC ADRP X0, 0x4E8000
	0x03C0BEB0 LDR X0, [X0 + 0x5A8]
	0x03C0BEB4 BL 0x1C16CF4
	0x03C0BEB8 MOVZ W8, 0x1
	0x03C0BEBC STRB W8, [X24 + 0xD8C]
	0x03C0BEC0 LDR X0, [X25]
	0x03C0BEC4 LDR W8, [X0 + 0xE0]
	0x03C0BEC8 CBNZ W8, 0x3C0BED0
	0x03C0BECC BL 0x1C16DFC
	0x03C0BED0 ADD W20, W20, W21
	0x03C0BED4 MOV W0, W21
	0x03C0BED8 MOV W1, W20
	0x03C0BEDC MOV X2, X31
	0x03C0BEE0 BL 0x337EE94
	0x03C0BEE4 ADRP X26, 0x7D9000
	0x03C0BEE8 LDRB W8, [X26 + 0xD8E]
	0x03C0BEEC MOV W22, W0
	0x03C0BEF0 CBNZ W8, 0x3C0BF08
	0x03C0BEF4 ADRP X0, 0x4E8000
	0x03C0BEF8 LDR X0, [X0 + 0x5A8]
	0x03C0BEFC BL 0x1C16CF4
	0x03C0BF00 MOVZ W8, 0x1
	0x03C0BF04 STRB W8, [X26 + 0xD8E]
	0x03C0BF08 LDR X0, [X25]
	0x03C0BF0C LDR W23, [X19 + 0x4]
	0x03C0BF10 LDR W27, [X19 + 0xC]
	0x03C0BF14 LDR W8, [X0 + 0xE0]
	0x03C0BF18 CBNZ W8, 0x3C0BF20
	0x03C0BF1C BL 0x1C16DFC
	0x03C0BF20 ADD W1, W27, W23
	0x03C0BF24 MOV W0, W23
	0x03C0BF28 MOV X2, X31
	0x03C0BF2C BL 0x337EDF0
	0x03C0BF30 CMP W22, W0
	0x03C0BF34 B.GE 0x3C0BFC8
	0x03C0BF38 LDRB W8, [X26 + 0xD8E]
	0x03C0BF3C CBNZ W8, 0x3C0BF54
	0x03C0BF40 ADRP X0, 0x4E8000
	0x03C0BF44 LDR X0, [X0 + 0x5A8]
	0x03C0BF48 BL 0x1C16CF4
	0x03C0BF4C MOVZ W8, 0x1
	0x03C0BF50 STRB W8, [X26 + 0xD8E]
	0x03C0BF54 LDR X0, [X25]
	0x03C0BF58 LDR W8, [X0 + 0xE0]
	0x03C0BF5C CBNZ W8, 0x3C0BF64
	0x03C0BF60 BL 0x1C16DFC
	0x03C0BF64 MOV W0, W21
	0x03C0BF68 MOV W1, W20
	0x03C0BF6C MOV X2, X31
	0x03C0BF70 BL 0x337EDF0
	0x03C0BF74 LDRB W8, [X24 + 0xD8C]
	0x03C0BF78 MOV W20, W0
	0x03C0BF7C CBNZ W8, 0x3C0BF94
	0x03C0BF80 ADRP X0, 0x4E8000
	0x03C0BF84 LDR X0, [X0 + 0x5A8]
	0x03C0BF88 BL 0x1C16CF4
	0x03C0BF8C MOVZ W8, 0x1
	0x03C0BF90 STRB W8, [X24 + 0xD8C]
	0x03C0BF94 LDR X0, [X25]
	0x03C0BF98 LDR W21, [X19 + 0x4]
	0x03C0BF9C LDR W19, [X19 + 0xC]
	0x03C0BFA0 LDR W8, [X0 + 0xE0]
	0x03C0BFA4 CBNZ W8, 0x3C0BFAC
	0x03C0BFA8 BL 0x1C16DFC
	0x03C0BFAC ADD W1, W19, W21
	0x03C0BFB0 MOV W0, W21
	0x03C0BFB4 MOV X2, X31
	0x03C0BFB8 BL 0x337EE94
	0x03C0BFBC CMP W20, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7DA000
	008 Move X22, 0x4F0000
	009 Move W8, [X23+528]
	010 Move X22, [X22+3704]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x4EB000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0x4E9000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x554000
	025 Move X0, [X0+3240]
	026 Call 0x1C17CF4
	027 Move X0, 0x4F0000
	028 Move X0, [X0+3704]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+528], W8
	032 Move X0, X21
	033 Move X1, X31
	034 Call String.IsNullOrEmpty, X0
	035 Move X8, [X22]
	036 And W31, W0, 1
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Compare X20, 0
	039 JumpIfNotEqual {56}
	040 Move X8, 0x4EB000
	041 Move X8, [X8+3144]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X31
	048 Call CultureInfo.get_InvariantCulture
	049 Compare X0, 0
	050 JumpIfEqual {113}
	051 Move X8, [X0]
	052 Move X9, [X8+536]
	053 Move X1, [X8+544]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X20, X0
	056 Move X8, 0x4E9000
	057 Move X8, [X8+2512]
	058 Move W1, 2
	059 Move X0, [X8]
	060 Call 0x1C17D6C
	061 Move X22, X0
	062 Move X0, X19
	063 Move X1, X21
	064 Move X2, X20
	065 Move X3, X31
	066 Call 0x2431694
	067 Compare X22, 0
	068 JumpIfEqual {113}
	069 Move X23, X0
	070 Compare X0, 0
	071 JumpIfEqual {78}
	072 Move X8, [X22]
	073 Move X0, X23
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {114}
	078 Move W8, [X22+24]
	079 Compare W8, 0
	080 JumpIfEqual {112}
	081 Add X0, X19, 12
	082 Move X1, X21
	083 Move X2, X20
	084 Move X3, X31
	085 Move [X22+32], X23
	086 Call Single.ToString, X0, X1, X2
	087 Move X19, X0
	088 Compare X0, 0
	089 JumpIfEqual {96}
	090 Move X8, [X22]
	091 Move X0, X19
	092 Move X1, [X8+64]
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {114}
	096 Move W8, [X22+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X8, 0x554000
	099 Move X8, [X8+3240]
	100 Move [X22+40], X19
	101 Move X1, X22
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X0, [X8]
	105 Move X22, [X31+16]
	106 Move X21, [X31+24]
	107 Move X2, X31
	108 Move X30, [X31+48]
	109 Move X23, [X31+56]
	110 Call UnityString.Format, X0, X1
	111 Return X0
	112 Call 0x1C17F28
	113 Call 0x1C17F20
	114 Call 0x1C17F44
	115 Move X1, X31
	116 Call 0x1C17DEC

