Type: UnityEngine.Light

Method: UnityEngine.LightType get_type()

Disassembly:
	0x03C1768C LDP X20, X19, [X31 + 0x10]
	0x03C17690 LDP X30, X21, [X31], #0x20
	0x03C17694 BR X2
	0x03C17698 SUB X31, X31, 0x60
	0x03C1769C STR X30, [X31 + 0x30]
	0x03C176A0 STP X22, X21, [X31 + 0x40]
	0x03C176A4 STP X20, X19, [X31 + 0x50]
	0x03C176A8 ADRP X22, 0x7CD000
	0x03C176AC MOV X19, X8
	0x03C176B0 LDR X8, [X22 + 0xBD8]
	0x03C176B4 MOV W20, W1
	0x03C176B8 MOV X21, X0
	0x03C176BC MOVI V0.2D, 0x0
	0x03C176C0 STP V0, V0, [X31 + 0x10]
	0x03C176C4 STR V0, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2496]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51462144
	010 Add X0, X0, 3668
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2496], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_spotAngle()

Disassembly:
	0x03C176C8 CBNZ X8, 0x3C176E0
	0x03C176CC ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C176D0 ADD X0, X0, 0xEBE
	0x03C176D4 BL 0x1C16CB8
	0x03C176D8 MOV X8, X0
	0x03C176DC STR X0, [X22 + 0xBD8]
	0x03C176E0 ADD X2, X31, 0x0
	0x03C176E4 MOV X0, X21
	0x03C176E8 MOV W1, W20
	0x03C176EC BLR X8
	0x03C176F0 LDP V1, V0, [X31 + 0x10]
	0x03C176F4 LDR V2, [X31]
	0x03C176F8 LDP X22, X21, [X31 + 0x40]
	0x03C176FC LDR X30, [X31 + 0x30]
	0x03C17700 STP V1, V0, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2504]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51515392
	010 Add X0, X0, 546
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2504], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_innerSpotAngle()

Disassembly:
	0x03C17704 STR V2, [X19]
	0x03C17708 LDP X20, X19, [X31 + 0x50]
	0x03C1770C ADD X31, X31, 0x60
	0x03C17710 RET
	0x03C17714 STR X30, [X31 - 0x30]!
	0x03C17718 STP X22, X21, [X31 + 0x10]
	0x03C1771C STP X20, X19, [X31 + 0x20]
	0x03C17720 ADRP X22, 0x7CD000
	0x03C17724 LDR X3, [X22 + 0xBD8]
	0x03C17728 MOV X19, X2
	0x03C1772C MOV W20, W1
	0x03C17730 MOV X21, X0
	0x03C17734 CBNZ X3, 0x3C1774C
	0x03C17738 ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C1773C ADD X0, X0, 0xEBE

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2512]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51425280
	010 Add X0, X0, 333
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2512], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Color get_color()

Disassembly:
	0x03C17740 BL 0x1C16CB8
	0x03C17744 MOV X3, X0
	0x03C17748 STR X0, [X22 + 0xBD8]
	0x03C1774C MOV X0, X21
	0x03C17750 MOV W1, W20
	0x03C17754 MOV X2, X19
	0x03C17758 LDP X20, X19, [X31 + 0x20]
	0x03C1775C LDP X22, X21, [X31 + 0x10]
	0x03C17760 LDR X30, [X31], #0x30
	0x03C17764 BR X3
	0x03C17768 SUB X31, X31, 0x40
	0x03C1776C STP X30, X21, [X31 + 0x20]
	0x03C17770 STP X20, X19, [X31 + 0x30]
	0x03C17774 ADRP X21, 0x7CD000
	0x03C17778 MOV X19, X8
	0x03C1777C LDR X8, [X21 + 0xBE0]
	0x03C17780 MOV X20, X0
	0x03C17784 STP X31, X31, [X31 + 0x8]
	0x03C17788 STR X31, [X31 + 0x18]
	0x03C1778C CBNZ X8, 0x3C177A4
	0x03C17790 ADRP X0, 0xFFFFFFFFFCEE4000
	0x03C17794 ADD X0, X0, 0x1FB

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x7CE000
	007 Move X8, [X20+2640]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -51523584
	013 Add X0, X0, 111
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+2640], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: System.Void set_color(UnityEngine.Color value)

Disassembly:
	0x03C177DC LDR X2, [X21 + 0xBE0]
	0x03C177E0 MOV X19, X1
	0x03C177E4 MOV X20, X0
	0x03C177E8 CBNZ X2, 0x3C17800
	0x03C177EC ADRP X0, 0xFFFFFFFFFCEE4000
	0x03C177F0 ADD X0, X0, 0x1FB
	0x03C177F4 BL 0x1C16CB8
	0x03C177F8 MOV X2, X0
	0x03C177FC STR X0, [X21 + 0xBE0]
	0x03C17800 MOV X0, X20
	0x03C17804 MOV X1, X19
	0x03C17808 LDP X20, X19, [X31 + 0x10]
	0x03C1780C LDP X30, X21, [X31], #0x20
	0x03C17810 BR X2
	0x03C17814 STP X30, X21, [X31 - 0x20]!
	0x03C17818 STP X20, X19, [X31 + 0x10]
	0x03C1781C ADRP X21, 0x7CD000
	0x03C17820 LDR X2, [X21 + 0xBE8]
	0x03C17824 MOV X19, X1
	0x03C17828 MOV X20, X0
	0x03C1782C CBNZ X2, 0x3C17844

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x7CE000
	006 Move X8, [X20+2648]
	007 Move X19, X0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Move [X31+16], S3
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -51507200
	015 Add X0, X0, 31
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+2648], X0
	019 Add X1, X31, 0
	020 Move X0, X19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return 

Method: System.Single get_colorTemperature()

Disassembly:
	0x03C17874 ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C17878 ADD X0, X0, 0xF1B
	0x03C1787C BL 0x1C16CB8
	0x03C17880 MOV X2, X0
	0x03C17884 STR X0, [X21 + 0xBE8]
	0x03C17888 MOV X0, X20
	0x03C1788C MOV X1, X19
	0x03C17890 LDP X20, X19, [X31 + 0x10]
	0x03C17894 LDP X30, X21, [X31], #0x20
	0x03C17898 BR X2
	0x03C1789C STP X30, X21, [X31 - 0x20]!
	0x03C178A0 STP X20, X19, [X31 + 0x10]
	0x03C178A4 ADRP X21, 0x7CD000
	0x03C178A8 LDR X2, [X21 + 0xB60]
	0x03C178AC MOV W19, W1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2520]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51298304
	010 Add X0, X0, 1853
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2520], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_useColorTemperature()

Disassembly:
	0x03C178B0 MOV X20, X0
	0x03C178B4 CBNZ X2, 0x3C178CC
	0x03C178B8 ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C178BC ADD X0, X0, 0xFA5
	0x03C178C0 BL 0x1C16CB8
	0x03C178C4 MOV X2, X0
	0x03C178C8 STR X0, [X21 + 0xB60]
	0x03C178CC AND W1, W19, 0x1
	0x03C178D0 MOV X0, X20
	0x03C178D4 LDP X20, X19, [X31 + 0x10]
	0x03C178D8 LDP X30, X21, [X31], #0x20
	0x03C178DC BR X2
	0x03C178E0 STP X30, X21, [X31 - 0x20]!
	0x03C178E4 STP X20, X19, [X31 + 0x10]
	0x03C178E8 ADRP X21, 0x7CD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2528]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51441664
	010 Add X0, X0, 55
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2528], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_intensity()

Disassembly:
	0x03C178EC LDR X2, [X21 + 0xB68]
	0x03C178F0 MOV W19, W1
	0x03C178F4 MOV X20, X0
	0x03C178F8 CBNZ X2, 0x3C17910
	0x03C178FC ADRP X0, 0xFFFFFFFFFCEDE000
	0x03C17900 ADD X0, X0, 0x245
	0x03C17904 BL 0x1C16CB8
	0x03C17908 MOV X2, X0
	0x03C1790C STR X0, [X21 + 0xB68]
	0x03C17910 MOV X0, X20
	0x03C17914 MOV W1, W19
	0x03C17918 LDP X20, X19, [X31 + 0x10]
	0x03C1791C LDP X30, X21, [X31], #0x20
	0x03C17920 BR X2
	0x03C17924 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2536]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51290112
	010 Add X0, X0, 1865
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2536], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_intensity(System.Single value)

Disassembly:
	0x03C17928 STP X20, X19, [X31 + 0x10]
	0x03C1792C ADRP X21, 0x7CD000
	0x03C17930 LDR X2, [X21 + 0xB70]
	0x03C17934 MOV W19, W1
	0x03C17938 MOV X20, X0
	0x03C1793C CBNZ X2, 0x3C17954
	0x03C17940 ADRP X0, 0xFFFFFFFFFCEE8000
	0x03C17944 ADD X0, X0, 0xDD
	0x03C17948 BL 0x1C16CB8
	0x03C1794C MOV X2, X0
	0x03C17950 STR X0, [X21 + 0xB70]
	0x03C17954 MOV X0, X20
	0x03C17958 MOV W1, W19
	0x03C1795C LDP X20, X19, [X31 + 0x10]
	0x03C17960 LDP X30, X21, [X31], #0x20
	0x03C17964 BR X2
	0x03C17968 STP X30, X21, [X31 - 0x20]!
	0x03C1796C STP X20, X19, [X31 + 0x10]
	0x03C17970 ADRP X21, 0x7CD000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7CE000
	006 Move X1, [X20+2544]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51372032
	012 Add X0, X0, 2178
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+2544], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Single get_bounceIntensity()

Disassembly:
	0x03C17974 LDR X2, [X21 + 0xB78]
	0x03C17978 MOV W19, W1
	0x03C1797C MOV X20, X0
	0x03C17980 CBNZ X2, 0x3C17998
	0x03C17984 ADRP X0, 0xFFFFFFFFFCEF4000
	0x03C17988 ADD X0, X0, 0x1CB
	0x03C1798C BL 0x1C16CB8
	0x03C17990 MOV X2, X0
	0x03C17994 STR X0, [X21 + 0xB78]
	0x03C17998 MOV X0, X20
	0x03C1799C MOV W1, W19
	0x03C179A0 LDP X20, X19, [X31 + 0x10]
	0x03C179A4 LDP X30, X21, [X31], #0x20
	0x03C179A8 BR X2
	0x03C179AC STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2552]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51396608
	010 Add X0, X0, 2887
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2552], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_shadowBias()

Disassembly:
	0x03C179B0 STP X20, X19, [X31 + 0x10]
	0x03C179B4 ADRP X20, 0x7CD000
	0x03C179B8 LDR X1, [X20 + 0xB80]
	0x03C179BC MOV X19, X0
	0x03C179C0 CBNZ X1, 0x3C179D8
	0x03C179C4 ADRP X0, 0xFFFFFFFFFCEF5000
	0x03C179C8 ADD X0, X0, 0xE33
	0x03C179CC BL 0x1C16CB8
	0x03C179D0 MOV X1, X0
	0x03C179D4 STR X0, [X20 + 0xB80]
	0x03C179D8 MOV X0, X19
	0x03C179DC LDP X20, X19, [X31 + 0x10]
	0x03C179E0 LDR X30, [X31], #0x20
	0x03C179E4 BR X1
	0x03C179E8 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2560]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51490816
	010 Add X0, X0, 390
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2560], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_shadowNormalBias()

Disassembly:
	0x03C179EC STP X20, X19, [X31 + 0x10]
	0x03C179F0 ADRP X21, 0x7CD000
	0x03C179F4 LDR X2, [X21 + 0xB88]
	0x03C179F8 MOV W19, W1
	0x03C179FC MOV X20, X0
	0x03C17A00 CBNZ X2, 0x3C17A18
	0x03C17A04 ADRP X0, 0xFFFFFFFFFCF0D000
	0x03C17A08 ADD X0, X0, 0xBAF
	0x03C17A0C BL 0x1C16CB8
	0x03C17A10 MOV X2, X0
	0x03C17A14 STR X0, [X21 + 0xB88]
	0x03C17A18 AND W1, W19, 0x1
	0x03C17A1C MOV X0, X20
	0x03C17A20 LDP X20, X19, [X31 + 0x10]
	0x03C17A24 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2568]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51322880
	010 Add X0, X0, 2949
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2568], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_shadowNearPlane()

Disassembly:
	0x03C17A28 BR X2
	0x03C17A2C STP X30, X21, [X31 - 0x20]!
	0x03C17A30 STP X20, X19, [X31 + 0x10]
	0x03C17A34 ADRP X21, 0x7CD000
	0x03C17A38 LDR X2, [X21 + 0xB90]
	0x03C17A3C MOV W19, W1
	0x03C17A40 MOV X20, X0
	0x03C17A44 CBNZ X2, 0x3C17A5C
	0x03C17A48 ADRP X0, 0xFFFFFFFFFCEE2000
	0x03C17A4C ADD X0, X0, 0xC2
	0x03C17A50 BL 0x1C16CB8
	0x03C17A54 MOV X2, X0
	0x03C17A58 STR X0, [X21 + 0xB90]
	0x03C17A5C MOV X0, X20
	0x03C17A60 MOV W1, W19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2576]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51544064
	010 Add X0, X0, 3664
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2576], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_range()

Disassembly:
	0x03C17A64 LDP X20, X19, [X31 + 0x10]
	0x03C17A68 LDP X30, X21, [X31], #0x20
	0x03C17A6C BR X2
	0x03C17A70 STR X30, [X31 - 0x40]!
	0x03C17A74 STP X24, X23, [X31 + 0x10]
	0x03C17A78 STP X22, X21, [X31 + 0x20]
	0x03C17A7C STP X20, X19, [X31 + 0x30]
	0x03C17A80 ADRP X24, 0x7CD000
	0x03C17A84 LDR X5, [X24 + 0xB98]
	0x03C17A88 MOV W19, W4
	0x03C17A8C MOV W21, W3
	0x03C17A90 MOV W22, W2
	0x03C17A94 MOV X20, X1
	0x03C17A98 MOV X23, X0
	0x03C17A9C CBNZ X5, 0x3C17AB4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2584]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51482624
	010 Add X0, X0, 866
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2584], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.LightBakingOutput get_bakingOutput()

Disassembly:
	0x03C17AA0 ADRP X0, 0xFFFFFFFFFCEF4000
	0x03C17AA4 ADD X0, X0, 0x21C
	0x03C17AA8 BL 0x1C16CB8
	0x03C17AAC MOV X5, X0
	0x03C17AB0 STR X0, [X24 + 0xB98]
	0x03C17AB4 AND W2, W22, 0x1
	0x03C17AB8 AND W3, W21, 0x1
	0x03C17ABC AND W4, W19, 0x1
	0x03C17AC0 MOV X0, X23
	0x03C17AC4 MOV X1, X20
	0x03C17AC8 LDP X20, X19, [X31 + 0x30]
	0x03C17ACC LDP X22, X21, [X31 + 0x20]
	0x03C17AD0 LDP X24, X23, [X31 + 0x10]
	0x03C17AD4 LDR X30, [X31], #0x40
	0x03C17AD8 BR X5
	0x03C17ADC STR X30, [X31 - 0x20]!
	0x03C17AE0 STP X20, X19, [X31 + 0x10]
	0x03C17AE4 ADRP X20, 0x7CD000
	0x03C17AE8 LDR X1, [X20 + 0xBA0]
	0x03C17AEC MOV X19, X0
	0x03C17AF0 CBNZ X1, 0x3C17B08
	0x03C17AF4 ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C17AF8 ADD X0, X0, 0x147
	0x03C17AFC BL 0x1C16CB8
	0x03C17B00 MOV X1, X0
	0x03C17B04 STR X0, [X20 + 0xBA0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x7CE000
	007 Move X19, X8
	008 Move X8, [X21+2656]
	009 Move X20, X0
	010 Move [X31+8], X31
	011 Move [X31+16], X31
	012 Move [X31+24], W31
	013 Compare X8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51470336
	016 Add X0, X0, 3662
	017 Call 0x1C17CB8
	018 Move X8, X0
	019 Move [X21+2656], X0
	020 Add X1, X31, 8
	021 Move X0, X20
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move W8, [X31+24]
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Move [X19+16], W8
	028 Move [X19], V0
	029 Move X20, [X31+48]
	030 Move X19, [X31+56]
	031 Add X31, X31, 64
	032 Return X0

Method: System.Void set_renderingLayerMask(System.Int32 value)

Disassembly:
	0x03C17B4C BL 0x1C16D08
	0x03C17B50 MOV X20, X0
	0x03C17B54 ADRP X0, 0x547000
	0x03C17B58 LDR X0, [X0 + 0xE60]
	0x03C17B5C BL 0x1C16D08
	0x03C17B60 MOV X2, X0
	0x03C17B64 MOV X0, X19
	0x03C17B68 MOV X1, X20
	0x03C17B6C MOV X3, X31
	0x03C17B70 BL 0x330E16C
	0x03C17B74 ADRP X0, 0x547000
	0x03C17B78 LDR X0, [X0 + 0xE68]
	0x03C17B7C BL 0x1C16D08
	0x03C17B80 MOV X1, X0
	0x03C17B84 MOV X0, X19
	0x03C17B88 BL 0x1C16DEC
	0x03C17B8C CMP W0, 0x2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CE000
	006 Move X2, [X21+2592]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51380224
	012 Add X0, X0, 2226
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2592], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: UnityEngine.LightShadows get_shadows()

Disassembly:
	0x03C17B90 B.CS 0x3C17B9C
	0x03C17B94 MOVZ W0, 0x3
	0x03C17B98 RET
	0x03C17B9C SUB W8, W0, 0x4
	0x03C17BA0 CMP W8, 0x8
	0x03C17BA4 B.CC 0x3C17BBC
	0x03C17BA8 AND W8, W0, 0xFFFFFFFE
	0x03C17BAC CMP W8, 0x2
	0x03C17BB0 B.NE 0x3C17BC4
	0x03C17BB4 MOVZ W0, 0x4
	0x03C17BB8 RET
	0x03C17BBC MOVZ W0, 0x2
	0x03C17BC0 RET
	0x03C17BC4 STR X30, [X31 - 0x20]!
	0x03C17BC8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2600]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51372032
	010 Add X0, X0, 2226
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2600], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_shadowStrength()

Disassembly:
	0x03C17BCC ADRP X0, 0x4E4000
	0x03C17BD0 LDR X0, [X0 + 0x578]
	0x03C17BD4 BL 0x1C16D08
	0x03C17BD8 BL 0x1C16F10
	0x03C17BDC MOV X19, X0
	0x03C17BE0 ADRP X0, 0x547000
	0x03C17BE4 LDR X0, [X0 + 0xE70]
	0x03C17BE8 BL 0x1C16D08
	0x03C17BEC MOV X20, X0
	0x03C17BF0 ADRP X0, 0x50D000
	0x03C17BF4 LDR X0, [X0 + 0x38]
	0x03C17BF8 BL 0x1C16D08
	0x03C17BFC MOV X2, X0
	0x03C17C00 MOV X0, X19
	0x03C17C04 MOV X1, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2608]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51388416
	010 Add X0, X0, 2389
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2608], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Rendering.LightShadowResolution get_shadowResolution()

Disassembly:
	0x03C17C08 MOV X3, X31
	0x03C17C0C BL 0x330E16C
	0x03C17C10 ADRP X0, 0x547000
	0x03C17C14 LDR X0, [X0 + 0xE78]
	0x03C17C18 BL 0x1C16D08
	0x03C17C1C MOV X1, X0
	0x03C17C20 MOV X0, X19
	0x03C17C24 BL 0x1C16DEC
	0x03C17C28 STR X30, [X31 - 0x60]!
	0x03C17C2C STP X28, X27, [X31 + 0x10]
	0x03C17C30 STP X26, X25, [X31 + 0x20]
	0x03C17C34 STP X24, X23, [X31 + 0x30]
	0x03C17C38 STP X22, X21, [X31 + 0x40]
	0x03C17C3C STP X20, X19, [X31 + 0x50]
	0x03C17C40 ADRP X28, 0x7CD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2616]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51331072
	010 Add X0, X0, 3739
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2616], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Single get_cookieSize()

Disassembly:
	0x03C17C44 LDR X8, [X28 + 0xB40]
	0x03C17C48 LDR W27, [X31 + 0x60]
	0x03C17C4C MOV W21, W7
	0x03C17C50 MOV W26, W6
	0x03C17C54 MOV W22, W5
	0x03C17C58 MOV X23, X4
	0x03C17C5C MOV W24, W3
	0x03C17C60 MOV W25, W2
	0x03C17C64 MOV W19, W1
	0x03C17C68 MOV X20, X0
	0x03C17C6C CBNZ X8, 0x3C17C84
	0x03C17C70 ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C17C74 ADD X0, X0, 0x245
	0x03C17C78 BL 0x1C16CB8
	0x03C17C7C MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2624]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51306496
	010 Add X0, X0, 1674
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2624], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Texture get_cookie()

Disassembly:
	0x03C17C80 STR X0, [X28 + 0xB40]
	0x03C17C84 MOV X0, X20
	0x03C17C88 BLR X8
	0x03C17C8C TBZ X0, 0x0, 0x3C17D18
	0x03C17C90 TBNZ X26, 0x1F, 0x3C17D5C
	0x03C17C94 TBNZ X21, 0x1F, 0x3C17DA8
	0x03C17C98 CMP W26, W22
	0x03C17C9C B.LT 0x3C17CA4
	0x03C17CA0 CBNZ W21, 0x3C17DF4
	0x03C17CA4 ADD W8, W21, W26
	0x03C17CA8 CMP W8, W22
	0x03C17CAC B.GT 0x3C17E40
	0x03C17CB0 ADRP X28, 0x7CD000
	0x03C17CB4 LDR X8, [X28 + 0xB28]
	0x03C17CB8 CMP X23, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2632]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51499008
	010 Add X0, X0, 111
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2632], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor()

Disassembly:
	0x03C17CBC CSEL W26, W31, W26, EQ
	0x03C17CC0 CBNZ X8, 0x3C17CD8

ISIL:
	001 Move X1, X31
	002 Call Behaviour..ctor, X0
	003 Return 

Method: System.Void get_color_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03C17798 BL 0x1C16CB8
	0x03C1779C MOV X8, X0
	0x03C177A0 STR X0, [X21 + 0xBE0]
	0x03C177A4 ADD X1, X31, 0x8
	0x03C177A8 MOV X0, X20
	0x03C177AC BLR X8
	0x03C177B0 LDR X8, [X31 + 0x18]
	0x03C177B4 LDUR V0, [X31 + 0x8]
	0x03C177B8 LDP X30, X21, [X31 + 0x20]
	0x03C177BC STR X8, [X19 + 0x10]
	0x03C177C0 STR V0, [X19]
	0x03C177C4 LDP X20, X19, [X31 + 0x30]
	0x03C177C8 ADD X31, X31, 0x40
	0x03C177CC RET
	0x03C177D0 STP X30, X21, [X31 - 0x20]!
	0x03C177D4 STP X20, X19, [X31 + 0x10]
	0x03C177D8 ADRP X21, 0x7CD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CE000
	006 Move X2, [X21+2640]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51523584
	012 Add X0, X0, 111
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2640], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_color_Injected(ref UnityEngine.Color value)

Disassembly:
	0x03C17830 ADRP X0, 0xFFFFFFFFFCEE9000
	0x03C17834 ADD X0, X0, 0xF1B
	0x03C17838 BL 0x1C16CB8
	0x03C1783C MOV X2, X0
	0x03C17840 STR X0, [X21 + 0xBE8]
	0x03C17844 MOV X0, X20
	0x03C17848 MOV X1, X19
	0x03C1784C LDP X20, X19, [X31 + 0x10]
	0x03C17850 LDP X30, X21, [X31], #0x20
	0x03C17854 BR X2
	0x03C17858 STP X30, X21, [X31 - 0x20]!
	0x03C1785C STP X20, X19, [X31 + 0x10]
	0x03C17860 ADRP X21, 0x7CD000
	0x03C17864 LDR X2, [X21 + 0xBE8]
	0x03C17868 MOV X19, X1
	0x03C1786C MOV X20, X0
	0x03C17870 CBNZ X2, 0x3C17888

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CE000
	006 Move X2, [X21+2648]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51507200
	012 Add X0, X0, 31
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2648], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void get_bakingOutput_Injected(out UnityEngine.LightBakingOutput ret)

Disassembly:
	0x03C17B08 MOV X0, X19
	0x03C17B0C LDP X20, X19, [X31 + 0x10]
	0x03C17B10 LDR X30, [X31], #0x20
	0x03C17B14 BR X1
	0x03C17B18 CMP W0, 0x8
	0x03C17B1C B.CS 0x3C17B28
	0x03C17B20 ADD W0, W0, 0x4
	0x03C17B24 RET
	0x03C17B28 STR X30, [X31 - 0x20]!
	0x03C17B2C STP X20, X19, [X31 + 0x10]
	0x03C17B30 ADRP X0, 0x4E4000
	0x03C17B34 LDR X0, [X0 + 0x578]
	0x03C17B38 BL 0x1C16D08
	0x03C17B3C BL 0x1C16F10
	0x03C17B40 MOV X19, X0
	0x03C17B44 ADRP X0, 0x547000
	0x03C17B48 LDR X0, [X0 + 0xE58]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CE000
	006 Move X2, [X21+2656]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51470336
	012 Add X0, X0, 3662
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2656], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

