Type: UnityEngine.ObjectDispatcher/<>c

Method: System.Void .cctor()

Disassembly:
	0x03C30258 MOV X1, X0
	0x03C3025C MOV X0, X19
	0x03C30260 BL 0x3C2FF5C
	0x03C30264 ADRP X0, 0x52F000
	0x03C30268 LDR X0, [X0 + 0x348]
	0x03C3026C BL 0x1C16D08
	0x03C30270 MOV X1, X0
	0x03C30274 MOV X0, X19
	0x03C30278 BL 0x1C16DEC
	0x03C3027C STP X30, X21, [X31 - 0x20]!
	0x03C30280 STP X20, X19, [X31 + 0x10]
	0x03C30284 ADRP X21, 0x7B5000
	0x03C30288 LDR X2, [X21 + 0x1B0]
	0x03C3028C MOV X19, X1
	0x03C30290 MOV X20, X0
	0x03C30294 CBNZ X2, 0x3C302AC
	0x03C30298 ADRP X0, 0xFFFFFFFFFCED9000
	0x03C3029C ADD X0, X0, 0x309
	0x03C302A0 BL 0x1C16CB8
	0x03C302A4 MOV X2, X0
	0x03C302A8 STR X0, [X21 + 0x1B0]
	0x03C302AC MOV X0, X20
	0x03C302B0 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x7B6000
	005 Move X20, 0x530000
	006 Move W8, [X19+309]
	007 Move X20, [X20+704]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x530000
	013 Move X0, [X0+704]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+309], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03C302B4 LDP X20, X19, [X31 + 0x10]
	0x03C302B8 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <.cctor>b__54_0(UnityEngine.Object[] changed, System.IntPtr changedID, System.IntPtr destroyedID, System.Int32 changedCount, System.Int32 destroyedCount, System.Action`1<UnityEngine.TypeDispatchData> callback)

Disassembly:
	0x03C302BC BR X2
	0x03C302C0 STP X30, X21, [X31 - 0x20]!
	0x03C302C4 STP X20, X19, [X31 + 0x10]
	0x03C302C8 ADRP X21, 0x7B5000
	0x03C302CC ADRP X20, 0x4C3000
	0x03C302D0 LDRB W8, [X21 + 0x1B8]
	0x03C302D4 LDR X20, [X20 + 0x988]
	0x03C302D8 MOV X19, X0
	0x03C302DC TBNZ X8, 0x0, 0x3C302F4
	0x03C302E0 ADRP X0, 0x4C3000
	0x03C302E4 LDR X0, [X0 + 0x988]
	0x03C302E8 BL 0x1C16CF4
	0x03C302EC MOVZ W8, 0x1
	0x03C302F0 STRB W8, [X21 + 0x1B8]
	0x03C302F4 ADRP X21, 0x7B5000
	0x03C302F8 LDR X2, [X21 + 0x1B0]
	0x03C302FC LDR X20, [X20]
	0x03C30300 CBNZ X2, 0x3C30318
	0x03C30304 ADRP X0, 0xFFFFFFFFFCED9000
	0x03C30308 ADD X0, X0, 0x309
	0x03C3030C BL 0x1C16CB8
	0x03C30310 MOV X2, X0
	0x03C30314 STR X0, [X21 + 0x1B0]
	0x03C30318 MOV X0, X19
	0x03C3031C MOV X1, X20
	0x03C30320 LDP X20, X19, [X31 + 0x10]
	0x03C30324 LDP X30, X21, [X31], #0x20
	0x03C30328 BR X2
	0x03C3032C STR X30, [X31 - 0x20]!
	0x03C30330 STP X20, X19, [X31 + 0x10]
	0x03C30334 ADRP X20, 0x7B5000
	0x03C30338 LDR X1, [X20 + 0x1C0]
	0x03C3033C MOV X19, X0
	0x03C30340 CBNZ X1, 0x3C30358
	0x03C30344 ADRP X0, 0xFFFFFFFFFCEC7000
	0x03C30348 ADD X0, X0, 0x1A4
	0x03C3034C BL 0x1C16CB8
	0x03C30350 MOV X1, X0
	0x03C30354 STR X0, [X20 + 0x1C0]
	0x03C30358 MOV X0, X19
	0x03C3035C LDP X20, X19, [X31 + 0x10]
	0x03C30360 LDR X30, [X31], #0x20
	0x03C30364 BR X1
	0x03C30368 STR X30, [X31 - 0x20]!
	0x03C3036C STP X20, X19, [X31 + 0x10]
	0x03C30370 ADRP X20, 0x7B5000
	0x03C30374 LDR X1, [X20 + 0x1C8]
	0x03C30378 MOV X19, X0
	0x03C3037C CBNZ X1, 0x3C30394
	0x03C30380 ADRP X0, 0xFFFFFFFFFCEFA000
	0x03C30384 ADD X0, X0, 0x90A
	0x03C30388 BL 0x1C16CB8

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+64], X26
	004 Move [X31+72], X25
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X26, 0x7B6000
	012 Move X25, 0x530000
	013 Move W8, [X26+310]
	014 Move X25, [X25+752]
	015 Move X19, X6
	016 Move W21, W5
	017 Move W23, W4
	018 Move X22, X3
	019 Move X24, X2
	020 Move X20, X1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x530000
	026 Move X0, [X0+752]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X26+310], W8
	030 Move X3, [X25]
	031 Move X0, X24
	032 Move W1, W23
	033 Move W2, W31
	034 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	035 Move X3, [X25]
	036 Move X23, X0
	037 Move X24, X1
	038 Move X0, X22
	039 Move W1, W21
	040 Move W2, W31
	041 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	042 Compare X19, 0
	043 JumpIfEqual {66}
	044 Move X9, [X19+24]
	045 Move X8, [X19+64]
	046 Move [X31+8], X20
	047 Move [X31+16], X23
	048 Move [X31+24], X24
	049 Move [X31+32], X0
	050 Move [X31+40], X1
	051 Move X2, [X19+40]
	052 Add X1, X31, 8
	053 Move X0, X8
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X20, [X31+112]
	056 Move X19, [X31+120]
	057 Move X22, [X31+96]
	058 Move X21, [X31+104]
	059 Move X24, [X31+80]
	060 Move X23, [X31+88]
	061 Move X26, [X31+64]
	062 Move X25, [X31+72]
	063 Move X30, [X31+48]
	064 Add X31, X31, 128
	065 Return 
	066 Call 0x1C17F20

Method: System.Void <.cctor>b__54_1(System.IntPtr transformed, System.IntPtr parents, System.IntPtr localToWorldMatrices, System.IntPtr positions, System.IntPtr rotations, System.IntPtr scales, System.Int32 count, System.Action`1<UnityEngine.TransformDispatchData> callback)

Disassembly:
	0x03C3038C MOV X1, X0
	0x03C30390 STR X0, [X20 + 0x1C8]
	0x03C30394 MOV X0, X19
	0x03C30398 LDP X20, X19, [X31 + 0x10]
	0x03C3039C LDR X30, [X31], #0x20
	0x03C303A0 BR X1
	0x03C303A4 STP X30, X19, [X31 - 0x10]!
	0x03C303A8 ADRP X19, 0x7B5000
	0x03C303AC LDR X0, [X19 + 0x1D0]
	0x03C303B0 CBNZ X0, 0x3C303C4
	0x03C303B4 ADRP X0, 0xFFFFFFFFFCEC5000
	0x03C303B8 ADD X0, X0, 0x3C2
	0x03C303BC BL 0x1C16CB8
	0x03C303C0 STR X0, [X19 + 0x1D0]
	0x03C303C4 LDP X30, X19, [X31], #0x10
	0x03C303C8 BR X0
	0x03C303CC STR W1, [X0 + 0x10]
	0x03C303D0 RET
	0x03C303D4 MOV X1, X31
	0x03C303D8 B 0x33A51F0
	0x03C303DC STR X30, [X31 - 0x20]!
	0x03C303E0 STP X20, X19, [X31 + 0x10]
	0x03C303E4 MOV X19, X1
	0x03C303E8 MOV X1, X31
	0x03C303EC MOV X20, X0
	0x03C303F0 BL 0x33A51F0
	0x03C303F4 STR X19, [X20 + 0x18]
	0x03C303F8 LDP X20, X19, [X31 + 0x10]
	0x03C303FC LDR X30, [X31], #0x20
	0x03C30400 RET
	0x03C30404 STR X30, [X31 - 0x20]!
	0x03C30408 STP X20, X19, [X31 + 0x10]
	0x03C3040C MOV X19, X1
	0x03C30410 MOV X1, X31
	0x03C30414 MOV X20, X0
	0x03C30418 BL 0x33A51F0
	0x03C3041C STR X19, [X20 + 0x18]
	0x03C30420 LDP X20, X19, [X31 + 0x10]
	0x03C30424 LDR X30, [X31], #0x20
	0x03C30428 RET
	0x03C3042C STP X30, X19, [X31 - 0x10]!
	0x03C30430 MOV X1, X31
	0x03C30434 MOV X19, X0
	0x03C30438 BL 0x33A51F0
	0x03C3043C MOVZ W8, 0x41000000
	0x03C30440 STR W8, [X19 + 0x14]
	0x03C30444 LDP X30, X19, [X31], #0x10
	0x03C30448 RET
	0x03C3044C STR D8, [X31 - 0x20]!
	0x03C30450 STP X30, X19, [X31 + 0x10]
	0x03C30454 MOV X1, X31
	0x03C30458 MOV V8.16B, V0.16B
	0x03C3045C MOV X19, X0
	0x03C30460 BL 0x33A51F0
	0x03C30464 STR S8, [X19 + 0x14]
	0x03C30468 LDP X30, X19, [X31 + 0x10]
	0x03C3046C LDR V8, [X31], #0x20
	0x03C30470 RET
	0x03C30474 STR X30, [X31 - 0x20]!
	0x03C30478 STP X20, X19, [X31 + 0x10]
	0x03C3047C MOV X19, X1
	0x03C30480 MOV X1, X31
	0x03C30484 MOV X20, X0
	0x03C30488 BL 0x33A51F0
	0x03C3048C STR X19, [X20 + 0x18]
	0x03C30490 LDP X20, X19, [X31 + 0x10]
	0x03C30494 LDR X30, [X31], #0x20
	0x03C30498 RET
	0x03C3049C STP D9, D8, [X31 - 0x20]!
	0x03C304A0 STP X30, X19, [X31 + 0x10]
	0x03C304A4 MOV X1, X31
	0x03C304A8 MOV V8.16B, V1.16B
	0x03C304AC MOV V9.16B, V0.16B
	0x03C304B0 MOV X19, X0
	0x03C304B4 BL 0x33A51F0
	0x03C304B8 STP S9, S8, [X19 + 0x14]
	0x03C304BC LDP X30, X19, [X31 + 0x10]
	0x03C304C0 LDP D9, D8, [X31], #0x20
	0x03C304C4 RET
	0x03C304C8 STR D8, [X31 - 0x20]!
	0x03C304CC STP X30, X19, [X31 + 0x10]
	0x03C304D0 MOV X1, X31
	0x03C304D4 MOV V8.16B, V0.16B
	0x03C304D8 MOV X19, X0
	0x03C304DC BL 0x33A51F0
	0x03C304E0 STR S8, [X19 + 0x14]
	0x03C304E4 LDP X30, X19, [X31 + 0x10]
	0x03C304E8 LDR V8, [X31], #0x20
	0x03C304EC RET
	0x03C304F0 STP X30, X19, [X31 - 0x10]!
	0x03C304F4 MOV X1, X31
	0x03C304F8 MOV X19, X0
	0x03C304FC BL 0x33A51F0
	0x03C30500 MOVZ W8, 0x3
	0x03C30504 STR W8, [X19 + 0x14]
	0x03C30508 LDP X30, X19, [X31], #0x10
	0x03C3050C RET
	0x03C30510 STP X30, X21, [X31 - 0x20]!
	0x03C30514 STP X20, X19, [X31 + 0x10]
	0x03C30518 MOV W20, W1
	0x03C3051C MOV X1, X31
	0x03C30520 MOV W19, W2
	0x03C30524 MOV X21, X0
	0x03C30528 BL 0x33A51F0
	0x03C3052C STP W20, W19, [X21 + 0x14]
	0x03C30530 LDP X20, X19, [X31 + 0x10]
	0x03C30534 LDP X30, X21, [X31], #0x20
	0x03C30538 RET
	0x03C3053C STR X30, [X31 - 0x20]!
	0x03C30540 STP X20, X19, [X31 + 0x10]
	0x03C30544 ADRP X8, 0xFFFFFFFFFCEBA000
	0x03C30548 LDR V0, [X8 + 0xE9]
	0x03C3054C AND W20, W1, 0x1
	0x03C30550 MOVZ W8, 0x1
	0x03C30554 MOV X1, X31
	0x03C30558 MOV X19, X0
	0x03C3055C STRH W8, [X0 + 0x14]
	0x03C30560 STUR V0, [X0 + 0x18]
	0x03C30564 BL 0x33A51F0
	0x03C30568 STRB W20, [X19 + 0x14]
	0x03C3056C LDP X20, X19, [X31 + 0x10]
	0x03C30570 LDR X30, [X31], #0x20
	0x03C30574 RET
	0x03C30578 STP X30, X21, [X31 - 0x20]!
	0x03C3057C STP X20, X19, [X31 + 0x10]
	0x03C30580 ADRP X8, 0xFFFFFFFFFCEBA000
	0x03C30584 LDR V0, [X8 + 0xE9]
	0x03C30588 AND W20, W1, 0x1
	0x03C3058C MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X29, 0x7B6000
	015 Move X26, 0x530000
	016 Move X28, 0x530000
	017 Move X23, [X31+224]
	018 Move W8, [X29+311]
	019 Move X26, [X26+752]
	020 Move X28, [X28+760]
	021 Move W20, W7
	022 Move X19, X6
	023 Move X21, X5
	024 Move X24, X4
	025 Move X27, X3
	026 Move X25, X2
	027 Move X22, X1
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {46}
	032 Move X0, 0x530000
	033 Move X0, [X0+752]
	034 Call 0x1C17CF4
	035 Move X0, 0x530000
	036 Move X0, [X0+760]
	037 Call 0x1C17CF4
	038 Move X0, 0x530000
	039 Move X0, [X0+768]
	040 Call 0x1C17CF4
	041 Move X0, 0x530000
	042 Move X0, [X0+776]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X29+311], W8
	046 Move X3, [X26]
	047 Move X0, X22
	048 Move W1, W20
	049 Move W2, W31
	050 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	051 Move [X31+16], X1
	052 Move [X31+24], X0
	053 Move X0, X25
	054 Move X1, X31
	055 Move X2, X31
	056 Call IntPtr.op_Inequality, X0, X1
	057 Move X3, [X26]
	058 And W31, W0, 1
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move X0, X25
	061 Move W2, W31
	062 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	063 Move [X31+8], X0
	064 Move X26, X1
	065 Move X0, X27
	066 Move X1, X31
	067 Move X2, X31
	068 Call IntPtr.op_Inequality, X0, X1
	069 Move X3, [X28]
	070 And W31, W0, 1
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 Move X0, X27
	073 Move W2, W31
	074 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	075 Move X27, X0
	076 Move X28, X1
	077 Move X0, X24
	078 Move X1, X31
	079 Move X2, X31
	080 Call IntPtr.op_Inequality, X0, X1
	081 Move X25, 0x530000
	082 Move X25, [X25+776]
	083 And W31, W0, 1
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Move X0, X24
	086 Move X3, [X25]
	087 Move W2, W31
	088 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	089 Move X24, X0
	090 Move X29, X1
	091 Move X0, X21
	092 Move X1, X31
	093 Move X2, X31
	094 Call IntPtr.op_Inequality, X0, X1
	095 Move X8, 0x530000
	096 Move X8, [X8+768]
	097 And W31, W0, 1
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 Move X0, X21
	100 Move X3, [X8]
	101 Move W2, W31
	102 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	103 Move X21, X0
	104 Move X22, X1
	105 Move X0, X19
	106 Move X1, X31
	107 Move X2, X31
	108 Call IntPtr.op_Inequality, X0, X1
	109 Move X3, [X25]
	110 And W31, W0, 1
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Move X0, X19
	113 Move W2, W31
	114 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	115 Compare X23, 0
	116 JumpIfEqual {152}
	117 Move X11, [X31+24]
	118 Move X10, [X31+16]
	119 Move X9, [X23+24]
	120 Move X8, [X23+64]
	121 Move [X31+64], X27
	122 Move [X31+72], X28
	123 Move [X31+32], X11
	124 Move [X31+40], X10
	125 Move X10, [X31+8]
	126 Move [X31+80], X24
	127 Move [X31+88], X29
	128 Move [X31+96], X21
	129 Move [X31+104], X22
	130 Move [X31+112], X0
	131 Move [X31+120], X1
	132 Move [X31+48], X10
	133 Move [X31+56], X26
	134 Move X2, [X23+40]
	135 Add X1, X31, 32
	136 Move X0, X8
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X20, [X31+208]
	139 Move X19, [X31+216]
	140 Move X22, [X31+192]
	141 Move X21, [X31+200]
	142 Move X24, [X31+176]
	143 Move X23, [X31+184]
	144 Move X26, [X31+160]
	145 Move X25, [X31+168]
	146 Move X28, [X31+144]
	147 Move X27, [X31+152]
	148 Move X29, [X31+128]
	149 Move X30, [X31+136]
	150 Add X31, X31, 224
	151 Return 
	152 Call 0x1C17F20

