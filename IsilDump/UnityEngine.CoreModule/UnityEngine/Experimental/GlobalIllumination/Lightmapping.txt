Type: UnityEngine.Experimental.GlobalIllumination.Lightmapping

Method: System.Void SetDelegate(UnityEngine.Experimental.GlobalIllumination.Lightmapping/RequestLightsDelegate del)

Disassembly:
	0x03C618D0 RET
	0x03C618D4 BL 0x1C16F28
	0x03C618D8 BL 0x1C16F20
	0x03C618DC ADRP X0, 0x49A000
	0x03C618E0 LDR X0, [X0 + 0x578]
	0x03C618E4 BL 0x1C16D08
	0x03C618E8 BL 0x1C16F10
	0x03C618EC MOV X19, X0
	0x03C618F0 ADRP X0, 0x4FF000
	0x03C618F4 LDR X0, [X0 + 0x70]
	0x03C618F8 B 0x3C61938
	0x03C618FC ADRP X0, 0x49A000
	0x03C61900 LDR X0, [X0 + 0x578]
	0x03C61904 BL 0x1C16D08
	0x03C61908 BL 0x1C16F10
	0x03C6190C MOV X19, X0
	0x03C61910 ADRP X0, 0x4FF000
	0x03C61914 LDR X0, [X0 + 0x78]
	0x03C61918 B 0x3C61938
	0x03C6191C ADRP X0, 0x49A000
	0x03C61920 LDR X0, [X0 + 0x578]
	0x03C61924 BL 0x1C16D08
	0x03C61928 BL 0x1C16F10
	0x03C6192C MOV X19, X0
	0x03C61930 ADRP X0, 0x4FF000
	0x03C61934 LDR X0, [X0 + 0x80]
	0x03C61938 BL 0x1C16D08
	0x03C6193C MOV X1, X0
	0x03C61940 MOV X0, X19
	0x03C61944 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x786000
	006 Move X20, 0x4F7000
	007 Move W8, [X21+770]
	008 Move X20, [X20+664]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4F7000
	015 Move X0, [X0+664]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+770], W8
	019 Move X0, [X20]
	020 Compare X19, 0
	021 JumpIfNotEqual {29}
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Move X8, [X0+184]
	028 Move X19, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move [X8+8], X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 

Method: UnityEngine.Experimental.GlobalIllumination.Lightmapping/RequestLightsDelegate GetDelegate()

Disassembly:
	0x03C61948 BL 0x3314A68
	0x03C6194C ADRP X0, 0x4FF000
	0x03C61950 LDR X0, [X0 + 0x88]
	0x03C61954 BL 0x1C16D08
	0x03C61958 MOV X1, X0
	0x03C6195C MOV X0, X19
	0x03C61960 BL 0x1C16DEC
	0x03C61964 STR X30, [X31 - 0x20]!
	0x03C61968 STP X20, X19, [X31 + 0x10]
	0x03C6196C ADRP X20, 0x785000
	0x03C61970 LDR X1, [X20 + 0x380]
	0x03C61974 MOV W19, W0
	0x03C61978 CBNZ X1, 0x3C61990
	0x03C6197C ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C61980 ADD X0, X0, 0x793
	0x03C61984 BL 0x1C16CB8
	0x03C61988 MOV X1, X0
	0x03C6198C STR X0, [X20 + 0x380]
	0x03C61990 MOV W0, W19
	0x03C61994 LDP X20, X19, [X31 + 0x10]
	0x03C61998 LDR X30, [X31], #0x20
	0x03C6199C BR X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x786000
	005 Move X19, 0x4F7000
	006 Move W8, [X20+771]
	007 Move X19, [X19+664]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4F7000
	013 Move X0, [X0+664]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+771], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void ResetDelegate()

Disassembly:
	0x03C619A0 STR X30, [X31 - 0x20]!
	0x03C619A4 STP X20, X19, [X31 + 0x10]
	0x03C619A8 ADRP X20, 0x785000
	0x03C619AC LDR X1, [X20 + 0x388]
	0x03C619B0 MOV W19, W0
	0x03C619B4 CBNZ X1, 0x3C619CC
	0x03C619B8 ADRP X0, 0xFFFFFFFFFCEC6000
	0x03C619BC ADD X0, X0, 0x23B
	0x03C619C0 BL 0x1C16CB8
	0x03C619C4 MOV X1, X0
	0x03C619C8 STR X0, [X20 + 0x388]
	0x03C619CC MOV W0, W19
	0x03C619D0 LDP X20, X19, [X31 + 0x10]
	0x03C619D4 LDR X30, [X31], #0x20
	0x03C619D8 BR X1
	0x03C619DC STR X30, [X31 - 0x20]!
	0x03C619E0 STP X20, X19, [X31 + 0x10]
	0x03C619E4 ADRP X20, 0x785000
	0x03C619E8 LDR X1, [X20 + 0x390]
	0x03C619EC MOV W19, W0
	0x03C619F0 CBNZ X1, 0x3C61A08
	0x03C619F4 ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C619F8 ADD X0, X0, 0x8C9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x786000
	005 Move X19, 0x4F7000
	006 Move W8, [X20+772]
	007 Move X19, [X19+664]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4F7000
	013 Move X0, [X0+664]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+772], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X9, [X8]
	027 Move [X8+8], X9
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void RequestLights(UnityEngine.Light[] lights, System.IntPtr outLightsPtr, System.Int32 outLightsCount)

Disassembly:
	0x03C619FC BL 0x1C16CB8
	0x03C61A00 MOV X1, X0
	0x03C61A04 STR X0, [X20 + 0x390]
	0x03C61A08 MOV W0, W19
	0x03C61A0C LDP X20, X19, [X31 + 0x10]
	0x03C61A10 LDR X30, [X31], #0x20
	0x03C61A14 BR X1
	0x03C61A18 STR X30, [X31 - 0x20]!
	0x03C61A1C STP X20, X19, [X31 + 0x10]
	0x03C61A20 ADRP X20, 0x785000
	0x03C61A24 LDR X1, [X20 + 0x398]
	0x03C61A28 MOV W19, W0
	0x03C61A2C CBNZ X1, 0x3C61A44
	0x03C61A30 ADRP X0, 0xFFFFFFFFFCEC4000
	0x03C61A34 ADD X0, X0, 0x3B1
	0x03C61A38 BL 0x1C16CB8
	0x03C61A3C MOV X1, X0
	0x03C61A40 STR X0, [X20 + 0x398]
	0x03C61A44 MOV W0, W19
	0x03C61A48 LDP X20, X19, [X31 + 0x10]
	0x03C61A4C LDR X30, [X31], #0x20
	0x03C61A50 BR X1
	0x03C61A54 STR X30, [X31 - 0x20]!
	0x03C61A58 STP X20, X19, [X31 + 0x10]
	0x03C61A5C ADRP X20, 0x785000
	0x03C61A60 LDR X1, [X20 + 0x3A0]
	0x03C61A64 MOV W19, W0
	0x03C61A68 CBNZ X1, 0x3C61A80
	0x03C61A6C ADRP X0, 0xFFFFFFFFFCEB8000
	0x03C61A70 ADD X0, X0, 0x1C
	0x03C61A74 BL 0x1C16CB8
	0x03C61A78 MOV X1, X0
	0x03C61A7C STR X0, [X20 + 0x3A0]
	0x03C61A80 MOV W0, W19
	0x03C61A84 LDP X20, X19, [X31 + 0x10]
	0x03C61A88 LDR X30, [X31], #0x20
	0x03C61A8C BR X1
	0x03C61A90 STR X30, [X31 - 0x20]!
	0x03C61A94 STP X20, X19, [X31 + 0x10]
	0x03C61A98 ADRP X20, 0x785000
	0x03C61A9C LDR X1, [X20 + 0x3A8]
	0x03C61AA0 MOV W19, W0
	0x03C61AA4 CBNZ X1, 0x3C61ABC
	0x03C61AA8 ADRP X0, 0xFFFFFFFFFCE98000
	0x03C61AAC ADD X0, X0, 0x8B0
	0x03C61AB0 BL 0x1C16CB8
	0x03C61AB4 MOV X1, X0
	0x03C61AB8 STR X0, [X20 + 0x3A8]
	0x03C61ABC MOV W0, W19
	0x03C61AC0 LDP X20, X19, [X31 + 0x10]
	0x03C61AC4 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x786000
	009 Move X23, 0x500000
	010 Move X22, 0x4F7000
	011 Move W8, [X24+773]
	012 Move X23, [X23+56]
	013 Move X22, [X22+664]
	014 Move W20, W2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x4F7000
	022 Move X0, [X0+664]
	023 Call 0x1C17CF4
	024 Move X0, 0x500000
	025 Move X0, [X0+56]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+773], W8
	029 Move X0, X21
	030 Move X1, X31
	031 Call IntPtr.op_Explicit, X0
	032 Move X3, [X23]
	033 Move W2, 1
	034 Move W1, W20
	035 Call NativeArrayUnsafeUtility.ConvertExistingDataToNativeArray, X0, X1, X2
	036 Move X20, X0
	037 Move X0, [X22]
	038 Move X21, X1
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X22]
	044 Move X8, [X0+184]
	045 Move X8, [X8+8]
	046 Compare X8, 0
	047 JumpIfEqual {62}
	048 Move X5, [X8+24]
	049 Move X0, [X8+64]
	050 Move X4, [X8+40]
	051 Move X1, X19
	052 Move X2, X20
	053 Move X3, X21
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 CallNoReturn X5
	062 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03C61AC8 BR X1
	0x03C61ACC STR X30, [X31 - 0x20]!
	0x03C61AD0 STP X20, X19, [X31 + 0x10]
	0x03C61AD4 ADRP X20, 0x785000
	0x03C61AD8 LDR X1, [X20 + 0x3B0]
	0x03C61ADC MOV W19, W0
	0x03C61AE0 CBNZ X1, 0x3C61AF8
	0x03C61AE4 ADRP X0, 0xFFFFFFFFFCEC0000
	0x03C61AE8 ADD X0, X0, 0xB6
	0x03C61AEC BL 0x1C16CB8
	0x03C61AF0 MOV X1, X0
	0x03C61AF4 STR X0, [X20 + 0x3B0]
	0x03C61AF8 MOV W0, W19
	0x03C61AFC LDP X20, X19, [X31 + 0x10]
	0x03C61B00 LDR X30, [X31], #0x20
	0x03C61B04 BR X1
	0x03C61B08 STP X30, X21, [X31 - 0x20]!
	0x03C61B0C STP X20, X19, [X31 + 0x10]
	0x03C61B10 ADRP X20, 0x785000
	0x03C61B14 ADRP X21, 0x4F2000
	0x03C61B18 LDRB W8, [X20 + 0x3B8]
	0x03C61B1C LDR X21, [X21 + 0x90]
	0x03C61B20 MOV W19, W0
	0x03C61B24 TBNZ X8, 0x0, 0x3C61B3C
	0x03C61B28 ADRP X0, 0x4F2000
	0x03C61B2C LDR X0, [X0 + 0x90]
	0x03C61B30 BL 0x1C16CF4
	0x03C61B34 MOVZ W8, 0x1
	0x03C61B38 STRB W8, [X20 + 0x3B8]
	0x03C61B3C LDR X0, [X21]
	0x03C61B40 LDR W8, [X0 + 0xE0]
	0x03C61B44 CBNZ W8, 0x3C61B4C
	0x03C61B48 BL 0x1C16DFC
	0x03C61B4C ADRP X20, 0x785000
	0x03C61B50 LDR X1, [X20 + 0x3B0]
	0x03C61B54 CBNZ X1, 0x3C61B6C
	0x03C61B58 ADRP X0, 0xFFFFFFFFFCEC0000
	0x03C61B5C ADD X0, X0, 0xB6
	0x03C61B60 BL 0x1C16CB8
	0x03C61B64 MOV X1, X0
	0x03C61B68 STR X0, [X20 + 0x3B0]
	0x03C61B6C MOV W0, W19
	0x03C61B70 LDP X20, X19, [X31 + 0x10]
	0x03C61B74 LDP X30, X21, [X31], #0x20
	0x03C61B78 BR X1
	0x03C61B7C STP X30, X21, [X31 - 0x20]!
	0x03C61B80 STP X20, X19, [X31 + 0x10]
	0x03C61B84 ADRP X21, 0x785000
	0x03C61B88 LDR X2, [X21 + 0x3C0]
	0x03C61B8C MOV W19, W1
	0x03C61B90 MOV W20, W0
	0x03C61B94 CBNZ X2, 0x3C61BAC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x786000
	007 Move X19, 0x500000
	008 Move W8, [X20+774]
	009 Move X19, [X19+64]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x4F7000
	015 Move X0, [X0+664]
	016 Call 0x1C17CF4
	017 Move X0, 0x4F7000
	018 Move X0, [X0+944]
	019 Call 0x1C17CF4
	020 Move X0, 0x500000
	021 Move X0, [X0+72]
	022 Call 0x1C17CF4
	023 Move X0, 0x500000
	024 Move X0, [X0+64]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+774], W8
	028 Move X0, [X19]
	029 Move X22, 0x4F7000
	030 Move X20, 0x500000
	031 Move X21, 0x4F7000
	032 Move W8, [X0+224]
	033 Move X22, [X22+944]
	034 Move X20, [X20+72]
	035 Move X21, [X21+664]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X0, [X22]
	042 Move X19, [X8]
	043 Call 0x1C17F10
	044 Move X2, [X20]
	045 Move X1, X19
	046 Move X20, X0
	047 Call RequestLightsDelegate..ctor, X0, X1, X2
	048 Move X8, [X21]
	049 Move X8, [X8+184]
	050 Move [X8], X20
	051 Move X8, [X21]
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X8, [X8+184]
	057 Move X9, [X8]
	058 Move [X8+8], X9
	059 Move X30, [X31+48]
	060 Return 

