Type: UnityEngine.Experimental.GlobalIllumination.LightmapperUtils

Method: UnityEngine.Experimental.GlobalIllumination.LightMode Extract(UnityEngine.LightmapBakeType baketype)

Disassembly:
	0x03C60D1C CBZ X1, 0x3C60ECC
	0x03C60D20 LDR W9, [X1 + 0x18]
	0x03C60D24 MOV X20, X1
	0x03C60D28 CMP W9, 0x1
	0x03C60D2C B.LT 0x3C60EB0
	0x03C60D30 ADRP X23, 0xFFFFFFFFFCF37000
	0x03C60D34 MOV X19, X2
	0x03C60D38 MOV W8, W31

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W0, W31
	003 Return X0
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, 1
	006 NotImplemented "Instruction CINC not yet implemented."
	007 Return X0

Method: UnityEngine.Experimental.GlobalIllumination.LinearColor ExtractIndirect(UnityEngine.Light l)

Disassembly:
	0x03C60D3C MOVZ W22, 0x60
	0x03C60D40 ADD X23, X23, 0xE1E
	0x03C60D44 CMP W8, W9
	0x03C60D48 B.CS 0x3C60EC8
	0x03C60D4C SXTW X24, W8
	0x03C60D50 ADD X8, X20, X24, 0x3, LSL
	0x03C60D54 LDR X21, [X8 + 0x20]
	0x03C60D58 CBZ X21, 0x3C60ECC
	0x03C60D5C MOV X0, X21
	0x03C60D60 MOV X1, X31
	0x03C60D64 BL 0x3C1668C
	0x03C60D68 CMP W0, 0x4
	0x03C60D6C B.HI 0x3C60DB4
	0x03C60D70 MOV W8, W0
	0x03C60D74 ADR X9, 0x10
	0x03C60D78 LDRB W10, [X23, X8, LSL]
	0x03C60D7C ADD X9, X9, X10, 0x2, LSL
	0x03C60D80 BR X9
	0x03C60D84 ADD X1, X31, 0x120
	0x03C60D88 MOV X0, X21
	0x03C60D8C BL 0x3C60248
	0x03C60D90 ADD X1, X31, 0x60
	0x03C60D94 MOV X0, X21
	0x03C60D98 BL 0x3C6078C
	0x03C60D9C ADD X0, X31, 0x0
	0x03C60DA0 ADD X1, X31, 0x120
	0x03C60DA4 ADD X2, X31, 0x60
	0x03C60DA8 MOV X3, X31
	0x03C60DAC BL 0x3C5FA84
	0x03C60DB0 B 0x3C60E90
	0x03C60DB4 MOV X0, X21

ISIL:
	001 Move [X31-64], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X19
	008 Compare X0, 0
	009 JumpIfEqual {39}
	010 Move X1, X31
	011 Move X19, X0
	012 Call Light.get_color, X0
	013 Move X0, X19
	014 Move X1, X31
	015 Move V8, V0
	016 Move V9, V1
	017 Move V10, V2
	018 Move V11, V3
	019 Call Light.get_intensity, X0
	020 Move X0, X19
	021 Move X1, X31
	022 Move V12, V0
	023 Call Light.get_bounceIntensity, X0
	024 Multiply S4, S12, S0
	025 Move V0, V8
	026 Move V1, V9
	027 Move V2, V10
	028 Move V3, V11
	029 Move X30, [X31+48]
	030 Move X19, [X31+56]
	031 Move D9, [X31+32]
	032 Move D8, [X31+40]
	033 Move D11, [X31+16]
	034 Move D10, [X31+24]
	035 Move X0, X31
	036 Move V12, [X31+64]
	037 Call LinearColor.Convert, X0, V0
	038 Return X0
	039 Call 0x1C17F20

Method: System.Single ExtractInnerCone(UnityEngine.Light l)

Disassembly:
	0x03C60DB8 MOV X1, X31
	0x03C60DBC BL 0x3C385F8
	0x03C60DC0 MOV W1, W0
	0x03C60DC4 ADD X0, X31, 0x0
	0x03C60DC8 MOV X2, X31
	0x03C60DCC BL 0x3C5FD0C
	0x03C60DD0 B 0x3C60E90
	0x03C60DD4 ADD X1, X31, 0x1D0
	0x03C60DD8 MOV X0, X21
	0x03C60DDC BL 0x3C5FEF8
	0x03C60DE0 ADD X1, X31, 0x60
	0x03C60DE4 MOV X0, X21
	0x03C60DE8 BL 0x3C6078C
	0x03C60DEC ADD X0, X31, 0x0
	0x03C60DF0 ADD X1, X31, 0x1D0
	0x03C60DF4 ADD X2, X31, 0x60
	0x03C60DF8 MOV X3, X31
	0x03C60DFC BL 0x3C5F994
	0x03C60E00 B 0x3C60E90
	0x03C60E04 ADD X1, X31, 0x180
	0x03C60E08 MOV X0, X21

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {22}
	004 Move X1, X31
	005 Call Light.get_spotAngle, X0
	006 Move X8, -51859456
	007 Move V1, [X8+260]
	008 Move S2, 0.5
	009 Multiply S0, S0, S2
	010 Multiply S0, S0, S1
	011 Call 0x3EB2E50
	012 Move W8, 0x42380000
	013 Move W9, 0x3C800000
	014 Move S1, W8
	015 Multiply S0, S0, S1
	016 Move S1, W9
	017 Multiply S0, S0, S1
	018 Call 0x3EB2BE0
	019 Add S0, S0, S0
	020 Move X30, [X31+16]
	021 Return V0
	022 Call 0x1C17F20

Method: UnityEngine.Color ExtractColorTemperature(UnityEngine.Light l)

Disassembly:
	0x03C60E0C BL 0x3C60094
	0x03C60E10 ADD X1, X31, 0x60
	0x03C60E14 MOV X0, X21
	0x03C60E18 BL 0x3C6078C
	0x03C60E1C ADD X0, X31, 0x0
	0x03C60E20 ADD X1, X31, 0x180
	0x03C60E24 ADD X2, X31, 0x60
	0x03C60E28 MOV X3, X31
	0x03C60E2C BL 0x3C5FA08
	0x03C60E30 B 0x3C60E90
	0x03C60E34 ADD X1, X31, 0xC0
	0x03C60E38 MOV X0, X21
	0x03C60E3C BL 0x3C60424
	0x03C60E40 ADD X1, X31, 0x60
	0x03C60E44 MOV X0, X21
	0x03C60E48 BL 0x3C6078C
	0x03C60E4C ADD X0, X31, 0x0
	0x03C60E50 ADD X1, X31, 0xC0
	0x03C60E54 ADD X2, X31, 0x60
	0x03C60E58 MOV X3, X31
	0x03C60E5C BL 0x3C5FB04
	0x03C60E60 B 0x3C60E90
	0x03C60E64 ADD X1, X31, 0x70
	0x03C60E68 MOV X0, X21
	0x03C60E6C BL 0x3C605D8
	0x03C60E70 ADD X1, X31, 0x60
	0x03C60E74 MOV X0, X21
	0x03C60E78 BL 0x3C6078C
	0x03C60E7C ADD X0, X31, 0x0

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {37}
	006 Move X1, X31
	007 Move X19, X0
	008 Call Light.get_useColorTemperature, X0
	009 Move S8, 1
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {29}
	014 Move X0, X31
	015 Call GraphicsSettings.get_lightsUseLinearIntensity
	016 Move S1, 1
	017 Move S2, 1
	018 Move S3, 1
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {32}
	023 Move X0, X19
	024 Move X1, X31
	025 Call Light.get_colorTemperature, X0
	026 Move X0, X31
	027 Call Mathf.CorrelatedColorTemperatureToRGB, V0
	028 Move V8, V0
	029 Move S1, 1
	030 Move S2, 1
	031 Move S3, 1
	032 Move X30, [X31+16]
	033 Move X19, [X31+24]
	034 Move V0, V8
	035 Move V8, [X31+32]
	036 Return X0
	037 Call 0x1C17F20

Method: System.Void ApplyColorTemperature(UnityEngine.Color cct, ref UnityEngine.Experimental.GlobalIllumination.LinearColor lightColor)

Disassembly:
	0x03C60E80 ADD X1, X31, 0x70
	0x03C60E84 ADD X2, X31, 0x60
	0x03C60E88 MOV X3, X31
	0x03C60E8C BL 0x3C5FB7C
	0x03C60E90 MADD X0, X24, X22, X19
	0x03C60E94 ADD X1, X31, 0x0
	0x03C60E98 MOVZ W2, 0x60
	0x03C60E9C BL 0x3EB1B30
	0x03C60EA0 LDR W9, [X20 + 0x18]
	0x03C60EA4 ADD W8, W24, 0x1
	0x03C60EA8 CMP W8, W9
	0x03C60EAC B.LT 0x3C60D44
	0x03C60EB0 ADD X31, X31, 0x230
	0x03C60EB4 LDP X20, X19, [X31 + 0x30]
	0x03C60EB8 LDP X22, X21, [X31 + 0x20]
	0x03C60EBC LDP X24, X23, [X31 + 0x10]
	0x03C60EC0 LDP X29, X30, [X31], #0x40
	0x03C60EC4 RET
	0x03C60EC8 BL 0x1C16F28
	0x03C60ECC BL 0x1C16F20
	0x03C60ED0 LDP X8, X1, [X0]
	0x03C60ED4 MOV X0, X8
	0x03C60ED8 RET
	0x03C60EDC STP X30, X23, [X31 - 0x30]!
	0x03C60EE0 STP X22, X21, [X31 + 0x10]
	0x03C60EE4 STP X20, X19, [X31 + 0x20]
	0x03C60EE8 ADRP X23, 0x786000
	0x03C60EEC ADRP X22, 0x4BC000
	0x03C60EF0 LDRB W8, [X23 + 0x308]
	0x03C60EF4 LDR X22, [X22 + 0x230]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X1, X31
	007 Move X19, X0
	008 Move V8, V2
	009 Move V9, V1
	010 Move V10, V0
	011 Call LinearColor.get_red, X0
	012 Multiply S0, S10, S0
	013 Move X0, X19
	014 Move X1, X31
	015 Call LinearColor.set_red, X0, V0
	016 Move X0, X19
	017 Move X1, X31
	018 Call LinearColor.get_green, X0
	019 Multiply S0, S9, S0
	020 Move X0, X19
	021 Move X1, X31
	022 Call LinearColor.set_green, X0, V0
	023 Move X0, X19
	024 Move X1, X31
	025 Call LinearColor.get_blue, X0
	026 Multiply S0, S8, S0
	027 Move X0, X19
	028 Move X30, [X31+32]
	029 Move X19, [X31+40]
	030 Move D9, [X31+16]
	031 Move D8, [X31+24]
	032 Move X1, X31
	033 Move V10, [X31+48]
	034 Call LinearColor.set_blue, X0, V0
	035 Return 

Method: System.Void Extract(UnityEngine.Light l, ref UnityEngine.Experimental.GlobalIllumination.DirectionalLight dir)

Disassembly:
	0x03C60EF8 MOV X19, X2
	0x03C60EFC MOV X20, X1
	0x03C60F00 MOV X21, X0
	0x03C60F04 TBNZ X8, 0x0, 0x3C60F1C
	0x03C60F08 ADRP X0, 0x4BC000
	0x03C60F0C LDR X0, [X0 + 0x230]
	0x03C60F10 BL 0x1C16CF4
	0x03C60F14 MOVZ W8, 0x1
	0x03C60F18 STRB W8, [X23 + 0x308]
	0x03C60F1C LDR X0, [X22]
	0x03C60F20 LDP X22, X21, [X21]
	0x03C60F24 LDR W8, [X0 + 0xE0]
	0x03C60F28 CBNZ W8, 0x3C60F30
	0x03C60F2C BL 0x1C16DFC
	0x03C60F30 MOV X0, X22
	0x03C60F34 MOV X1, X21
	0x03C60F38 MOV X2, X20
	0x03C60F3C MOV X3, X19
	0x03C60F40 LDP X20, X19, [X31 + 0x20]
	0x03C60F44 LDP X22, X21, [X31 + 0x10]
	0x03C60F48 MOV X4, X31
	0x03C60F4C LDP X30, X23, [X31], #0x30
	0x03C60F50 B 0x3C5DA90
	0x03C60F54 LDP X8, X1, [X0]
	0x03C60F58 MOV X0, X8
	0x03C60F5C RET
	0x03C60F60 STP X30, X23, [X31 - 0x30]!
	0x03C60F64 STP X22, X21, [X31 + 0x10]
	0x03C60F68 STP X20, X19, [X31 + 0x20]
	0x03C60F6C ADRP X23, 0x786000
	0x03C60F70 ADRP X22, 0x4BC000
	0x03C60F74 LDRB W8, [X23 + 0x309]
	0x03C60F78 LDR X22, [X22 + 0x230]
	0x03C60F7C MOV X19, X2
	0x03C60F80 MOV X20, X1
	0x03C60F84 MOV X21, X0
	0x03C60F88 TBNZ X8, 0x0, 0x3C60FA0
	0x03C60F8C ADRP X0, 0x4BC000
	0x03C60F90 LDR X0, [X0 + 0x230]
	0x03C60F94 BL 0x1C16CF4
	0x03C60F98 MOVZ W8, 0x1
	0x03C60F9C STRB W8, [X23 + 0x309]
	0x03C60FA0 LDR X0, [X22]
	0x03C60FA4 LDP X22, X21, [X21]
	0x03C60FA8 LDR W8, [X0 + 0xE0]
	0x03C60FAC CBNZ W8, 0x3C60FB4
	0x03C60FB0 BL 0x1C16DFC
	0x03C60FB4 MOV X0, X22
	0x03C60FB8 MOV X1, X21
	0x03C60FBC MOV X2, X20
	0x03C60FC0 MOV X3, X19
	0x03C60FC4 LDP X20, X19, [X31 + 0x20]
	0x03C60FC8 LDP X22, X21, [X31 + 0x10]
	0x03C60FCC MOV X4, X31
	0x03C60FD0 LDP X30, X23, [X31], #0x30
	0x03C60FD4 B 0x3C5DA90
	0x03C60FD8 LDP X8, X1, [X0]
	0x03C60FDC MOV X0, X8
	0x03C60FE0 RET
	0x03C60FE4 STP X30, X23, [X31 - 0x30]!
	0x03C60FE8 STP X22, X21, [X31 + 0x10]
	0x03C60FEC STP X20, X19, [X31 + 0x20]
	0x03C60FF0 ADRP X23, 0x786000
	0x03C60FF4 ADRP X22, 0x4BC000
	0x03C60FF8 LDRB W8, [X23 + 0x30A]
	0x03C60FFC LDR X22, [X22 + 0x230]
	0x03C61000 MOV X19, X2
	0x03C61004 MOV X20, X1
	0x03C61008 MOV X21, X0
	0x03C6100C TBNZ X8, 0x0, 0x3C61024
	0x03C61010 ADRP X0, 0x4BB000
	0x03C61014 LDR X0, [X0 + 0x230]
	0x03C61018 BL 0x1C16CF4
	0x03C6101C MOVZ W8, 0x1
	0x03C61020 STRB W8, [X23 + 0x30A]
	0x03C61024 LDR X0, [X22]
	0x03C61028 LDP X22, X21, [X21]
	0x03C6102C LDR W8, [X0 + 0xE0]
	0x03C61030 CBNZ W8, 0x3C61038
	0x03C61034 BL 0x1C16DFC
	0x03C61038 MOV X0, X22
	0x03C6103C MOV X1, X21
	0x03C61040 MOV X2, X20
	0x03C61044 MOV X3, X19
	0x03C61048 LDP X20, X19, [X31 + 0x20]
	0x03C6104C LDP X22, X21, [X31 + 0x10]
	0x03C61050 MOV X4, X31
	0x03C61054 LDP X30, X23, [X31], #0x30
	0x03C61058 B 0x3C5DA90
	0x03C6105C LDP X8, X1, [X0]
	0x03C61060 MOV X0, X8
	0x03C61064 RET
	0x03C61068 STP X30, X19, [X31 - 0x10]!
	0x03C6106C ADRP X19, 0x785000
	0x03C61070 LDR X0, [X19 + 0x310]
	0x03C61074 CBNZ X0, 0x3C61088
	0x03C61078 ADRP X0, 0xFFFFFFFFFCEA0000
	0x03C6107C ADD X0, X0, 0x4DD
	0x03C61080 BL 0x1C16CB8
	0x03C61084 STR X0, [X19 + 0x310]
	0x03C61088 LDP X30, X19, [X31], #0x10
	0x03C6108C BR X0
	0x03C61090 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move [X31+48], X31
	014 Move [X31+56], X31
	015 Move [X31+32], X31
	016 Move [X31+40], X31
	017 Compare X0, 0
	018 JumpIfEqual {125}
	019 Move X19, X1
	020 Move X1, X31
	021 Move X20, X0
	022 Call Object.GetInstanceID, X0
	023 Move [X19], W0
	024 Add X8, X31, 8
	025 Move X0, X20
	026 Move X1, X31
	027 Call Light.get_bakingOutput, X0
	028 Move W8, [X31+16]
	029 Move W9, 1
	030 Move X0, X20
	031 Move X1, X31
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CINC not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move [X19+5], W8
	037 Call Light.get_shadows, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X0, X20
	041 Move X1, X31
	042 Move [X19+4], W8
	043 Call Component.get_transform, X0
	044 Compare X0, 0
	045 JumpIfEqual {125}
	046 Move X1, X31
	047 Call Transform.get_position, X0
	048 Move X0, X20
	049 Move X1, X31
	050 Move [X19+8], S0
	051 Move [X19+16], S1
	052 Move [X19+16], S2
	053 Call Component.get_transform, X0
	054 Compare X0, 0
	055 JumpIfEqual {125}
	056 Move X1, X31
	057 Call Transform.get_rotation, X0
	058 Move X0, X20
	059 Move [X19+20], S0
	060 Move [X19+28], S1
	061 Move [X19+28], S2
	062 Move [X19+36], S3
	063 Call LightmapperUtils.ExtractColorTemperature, X0
	064 Move X0, X20
	065 Move X1, X31
	066 Move V8, V0
	067 Move V9, V1
	068 Move V10, V2
	069 Move V11, V3
	070 Call Light.get_color, X0
	071 Move X0, X20
	072 Move X1, X31
	073 Move V12, V0
	074 Move V13, V1
	075 Move V14, V2
	076 Move V15, V3
	077 Call Light.get_intensity, X0
	078 Move V4, V0
	079 Move V0, V12
	080 Move V1, V13
	081 Move V2, V14
	082 Move V3, V15
	083 Move X0, X31
	084 Call LinearColor.Convert, X0, V0
	085 Move X0, X20
	086 Move [X31+48], S0
	087 Move [X31+56], S1
	088 Move [X31+56], S2
	089 Move [X31+64], S3
	090 Call LightmapperUtils.ExtractIndirect, X0
	091 Move [X31+32], S0
	092 Move [X31+40], S1
	093 Move [X31+40], S2
	094 Move [X31+48], S3
	095 Add X0, X31, 48
	096 Move V0, V8
	097 Move V1, V9
	098 Move V2, V10
	099 Move V3, V11
	100 Call LightmapperUtils.ApplyColorTemperature, X0, X1
	101 Add X0, X31, 32
	102 Move V0, V8
	103 Move V1, V9
	104 Move V2, V10
	105 Move V3, V11
	106 Call LightmapperUtils.ApplyColorTemperature, X0, X1
	107 Move V0, [X31+3]
	108 Move X30, [X31+128]
	109 Move D9, [X31+112]
	110 Move D8, [X31+120]
	111 Move D11, [X31+96]
	112 Move D10, [X31+104]
	113 Move [X19+36], V0
	114 Move V0, [X31+2]
	115 Move [X19+68], W31
	116 Move D13, [X31+80]
	117 Move D12, [X31+88]
	118 Move D15, [X31+64]
	119 Move D14, [X31+72]
	120 Move [X19+52], V0
	121 Move X20, [X31+144]
	122 Move X19, [X31+152]
	123 Add X31, X31, 160
	124 Return 
	125 Call 0x1C17F20

Method: System.Void Extract(UnityEngine.Light l, ref UnityEngine.Experimental.GlobalIllumination.PointLight point)

Disassembly:
	0x03C61094 ADRP X19, 0x785000
	0x03C61098 LDR X0, [X19 + 0x310]
	0x03C6109C CBNZ X0, 0x3C610B0
	0x03C610A0 ADRP X0, 0xFFFFFFFFFCEA0000
	0x03C610A4 ADD X0, X0, 0x4DD
	0x03C610A8 BL 0x1C16CB8
	0x03C610AC STR X0, [X19 + 0x310]
	0x03C610B0 LDP X30, X19, [X31], #0x10
	0x03C610B4 BR X0
	0x03C610B8 RET
	0x03C610BC RET
	0x03C610C0 STR X30, [X31 - 0x20]!
	0x03C610C4 STP X20, X19, [X31 + 0x10]
	0x03C610C8 ADRP X19, 0x785000
	0x03C610CC ADRP X20, 0x4FF000
	0x03C610D0 LDRB W8, [X19 + 0x318]
	0x03C610D4 LDR X20, [X20 + 0x50]
	0x03C610D8 TBNZ X8, 0x0, 0x3C610F0
	0x03C610DC ADRP X0, 0x4FF000
	0x03C610E0 LDR X0, [X0 + 0x50]
	0x03C610E4 BL 0x1C16CF4
	0x03C610E8 MOVZ W8, 0x1
	0x03C610EC STRB W8, [X19 + 0x318]
	0x03C610F0 LDR X0, [X20]
	0x03C610F4 BL 0x1C16F10
	0x03C610F8 MOV X1, X31
	0x03C610FC MOV X19, X0
	0x03C61100 BL 0x33BDD8C
	0x03C61104 MOV X0, X19
	0x03C61108 LDP X20, X19, [X31 + 0x10]
	0x03C6110C LDR X30, [X31], #0x20
	0x03C61110 RET
	0x03C61114 MOV X1, X31
	0x03C61118 B 0x33BDD8C
	0x03C6111C STP X30, X21, [X31 - 0x20]!
	0x03C61120 STP X20, X19, [X31 + 0x10]
	0x03C61124 ADRP X20, 0x785000
	0x03C61128 ADRP X21, 0x4FF000
	0x03C6112C LDRB W8, [X20 + 0x319]
	0x03C61130 LDR X21, [X21 + 0x58]
	0x03C61134 MOV X19, X0
	0x03C61138 TBNZ X8, 0x0, 0x3C6115C
	0x03C6113C ADRP X0, 0x492000
	0x03C61140 LDR X0, [X0 + 0xE00]
	0x03C61144 BL 0x1C16CF4
	0x03C61148 ADRP X0, 0x4FF000
	0x03C6114C LDR X0, [X0 + 0x58]
	0x03C61150 BL 0x1C16CF4
	0x03C61154 MOVZ W8, 0x1
	0x03C61158 STRB W8, [X20 + 0x319]
	0x03C6115C LDR X0, [X21]
	0x03C61160 LDR W8, [X0 + 0xE0]
	0x03C61164 CBNZ W8, 0x3C61170
	0x03C61168 BL 0x1C16DFC
	0x03C6116C LDR X0, [X21]
	0x03C61170 LDR X8, [X0 + 0xB8]
	0x03C61174 LDR X8, [X8]
	0x03C61178 CBZ X8, 0x3C61260
	0x03C6117C LDR X9, [X8 + 0x10]
	0x03C61180 CMP X9, X19
	0x03C61184 B.EQ 0x3C61234
	0x03C61188 LDR W9, [X0 + 0xE0]
	0x03C6118C CBNZ W9, 0x3C611A4
	0x03C61190 BL 0x1C16DFC
	0x03C61194 LDR X0, [X21]
	0x03C61198 LDR X8, [X0 + 0xB8]
	0x03C6119C LDR X8, [X8]
	0x03C611A0 CBZ X8, 0x3C61260
	0x03C611A4 LDR X9, [X8 + 0x10]
	0x03C611A8 CBZ X9, 0x3C61234
	0x03C611AC LDR W9, [X0 + 0xE0]
	0x03C611B0 CBNZ W9, 0x3C611C8
	0x03C611B4 BL 0x1C16DFC
	0x03C611B8 LDR X8, [X21]
	0x03C611BC LDR X8, [X8 + 0xB8]
	0x03C611C0 LDR X8, [X8]
	0x03C611C4 CBZ X8, 0x3C61260
	0x03C611C8 LDR X20, [X8 + 0x10]
	0x03C611CC CBZ X20, 0x3C61260
	0x03C611D0 ADRP X10, 0x492000
	0x03C611D4 LDR X8, [X20]
	0x03C611D8 LDR X10, [X10 + 0xE00]
	0x03C611DC LDRH W9, [X8 + 0x12E]
	0x03C611E0 LDR X1, [X10]
	0x03C611E4 CBZ X9, 0x3C61208
	0x03C611E8 LDR X10, [X8 + 0xB0]
	0x03C611EC ADD X10, X10, 0x8
	0x03C611F0 LDUR X11, [X10 - 0x8]
	0x03C611F4 CMP X11, X1
	0x03C611F8 B.EQ 0x3C61218
	0x03C611FC SUBS X9, X9, 0x1
	0x03C61200 ADD X10, X10, 0x10
	0x03C61204 B.NE 0x3C611F0
	0x03C61208 MOV X0, X20
	0x03C6120C MOV W2, W31
	0x03C61210 BL 0x1C5C788
	0x03C61214 B 0x3C61224
	0x03C61218 LDRSW X9, [X10]
	0x03C6121C ADD X8, X8, X9, 0x4, LSL
	0x03C61220 ADD X0, X8, 0x138
	0x03C61224 LDP X8, X1, [X0]
	0x03C61228 MOV X0, X20
	0x03C6122C BLR X8
	0x03C61230 LDR X0, [X21]
	0x03C61234 LDR W8, [X0 + 0xE0]
	0x03C61238 CBNZ W8, 0x3C61244
	0x03C6123C BL 0x1C16DFC
	0x03C61240 LDR X0, [X21]
	0x03C61244 LDR X8, [X0 + 0xB8]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move [X31+48], X31
	014 Move [X31+56], X31
	015 Move [X31+32], X31
	016 Move [X31+40], X31
	017 Compare X0, 0
	018 JumpIfEqual {131}
	019 Move X19, X1
	020 Move X1, X31
	021 Move X20, X0
	022 Call Object.GetInstanceID, X0
	023 Move [X19], W0
	024 Add X8, X31, 8
	025 Move X0, X20
	026 Move X1, X31
	027 Call Light.get_bakingOutput, X0
	028 Move W8, [X31+16]
	029 Move W9, 1
	030 Move X0, X20
	031 Move X1, X31
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CINC not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move [X19+5], W8
	037 Call Light.get_shadows, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X0, X20
	041 Move X1, X31
	042 Move [X19+4], W8
	043 Call Component.get_transform, X0
	044 Compare X0, 0
	045 JumpIfEqual {131}
	046 Move X1, X31
	047 Call Transform.get_position, X0
	048 Move X0, X20
	049 Move X1, X31
	050 Move [X19+8], S0
	051 Move [X19+16], S1
	052 Move [X19+16], S2
	053 Call Component.get_transform, X0
	054 Compare X0, 0
	055 JumpIfEqual {131}
	056 Move X1, X31
	057 Call Transform.get_rotation, X0
	058 Move X0, X20
	059 Move [X19+20], S0
	060 Move [X19+28], S1
	061 Move [X19+28], S2
	062 Move [X19+36], S3
	063 Call LightmapperUtils.ExtractColorTemperature, X0
	064 Move X0, X20
	065 Move X1, X31
	066 Move V8, V0
	067 Move V9, V1
	068 Move V10, V2
	069 Move V11, V3
	070 Call Light.get_color, X0
	071 Move X0, X20
	072 Move X1, X31
	073 Move V12, V0
	074 Move V13, V1
	075 Move V14, V2
	076 Move V15, V3
	077 Call Light.get_intensity, X0
	078 Move V4, V0
	079 Move V0, V12
	080 Move V1, V13
	081 Move V2, V14
	082 Move V3, V15
	083 Move X0, X31
	084 Call LinearColor.Convert, X0, V0
	085 Move X0, X20
	086 Move [X31+48], S0
	087 Move [X31+56], S1
	088 Move [X31+56], S2
	089 Move [X31+64], S3
	090 Call LightmapperUtils.ExtractIndirect, X0
	091 Move [X31+32], S0
	092 Move [X31+40], S1
	093 Move [X31+40], S2
	094 Move [X31+48], S3
	095 Add X0, X31, 48
	096 Move V0, V8
	097 Move V1, V9
	098 Move V2, V10
	099 Move V3, V11
	100 Call LightmapperUtils.ApplyColorTemperature, X0, X1
	101 Add X0, X31, 32
	102 Move V0, V8
	103 Move V1, V9
	104 Move V2, V10
	105 Move V3, V11
	106 Call LightmapperUtils.ApplyColorTemperature, X0, X1
	107 Move V0, [X31+3]
	108 Move X0, X20
	109 Move X1, X31
	110 Move [X19+36], V0
	111 Move V0, [X31+2]
	112 Move [X19+52], V0
	113 Call Light.get_range, X0
	114 Move W8, 3
	115 Move [X19+68], S0
	116 Move [X19+72], W31
	117 Move [X19+76], W8
	118 Move X20, [X31+144]
	119 Move X19, [X31+152]
	120 Move X30, [X31+128]
	121 Move D9, [X31+112]
	122 Move D8, [X31+120]
	123 Move D11, [X31+96]
	124 Move D10, [X31+104]
	125 Move D13, [X31+80]
	126 Move D12, [X31+88]
	127 Move D15, [X31+64]
	128 Move D14, [X31+72]
	129 Add X31, X31, 160
	130 Return 
	131 Call 0x1C17F20

Method: System.Void Extract(UnityEngine.Light l, ref UnityEngine.Experimental.GlobalIllumination.SpotLight spot)

Disassembly:
	0x03C61248 LDR X8, [X8]
	0x03C6124C CBZ X8, 0x3C61260
	0x03C61250 STR X19, [X8 + 0x10]
	0x03C61254 LDP X20, X19, [X31 + 0x10]
	0x03C61258 LDP X30, X21, [X31], #0x20
	0x03C6125C RET
	0x03C61260 BL 0x1C16F20
	0x03C61264 STR X30, [X31 - 0x20]!
	0x03C61268 STP X20, X19, [X31 + 0x10]
	0x03C6126C ADRP X20, 0x785000
	0x03C61270 ADRP X19, 0x4FF000
	0x03C61274 LDRB W8, [X20 + 0x31A]
	0x03C61278 LDR X19, [X19 + 0x58]
	0x03C6127C TBNZ X8, 0x0, 0x3C61294
	0x03C61280 ADRP X0, 0x4FF000
	0x03C61284 LDR X0, [X0 + 0x58]
	0x03C61288 BL 0x1C16CF4
	0x03C6128C MOVZ W8, 0x1
	0x03C61290 STRB W8, [X20 + 0x31A]
	0x03C61294 LDR X0, [X19]
	0x03C61298 LDR W8, [X0 + 0xE0]
	0x03C6129C CBNZ W8, 0x3C612A8
	0x03C612A0 BL 0x1C16DFC
	0x03C612A4 LDR X0, [X19]
	0x03C612A8 LDR X8, [X0 + 0xB8]
	0x03C612AC LDP X20, X19, [X31 + 0x10]
	0x03C612B0 LDR X0, [X8]
	0x03C612B4 LDR X30, [X31], #0x20
	0x03C612B8 RET
	0x03C612BC STP X30, X19, [X31 - 0x10]!
	0x03C612C0 ADRP X19, 0x785000
	0x03C612C4 LDR X0, [X19 + 0x320]
	0x03C612C8 CBNZ X0, 0x3C612DC
	0x03C612CC ADRP X0, 0xFFFFFFFFFCEC0000
	0x03C612D0 ADD X0, X0, 0x3F
	0x03C612D4 BL 0x1C16CB8
	0x03C612D8 STR X0, [X19 + 0x320]
	0x03C612DC LDP X30, X19, [X31], #0x10
	0x03C612E0 BR X0
	0x03C612E4 STP X30, X21, [X31 - 0x20]!
	0x03C612E8 STP X20, X19, [X31 + 0x10]
	0x03C612EC ADRP X19, 0x785000
	0x03C612F0 ADRP X21, 0x4FF000
	0x03C612F4 ADRP X20, 0x4FF000
	0x03C612F8 LDRB W8, [X19 + 0x328]
	0x03C612FC LDR X21, [X21 + 0x60]
	0x03C61300 LDR X20, [X20 + 0x58]
	0x03C61304 TBNZ X8, 0x0, 0x3C61328
	0x03C61308 ADRP X0, 0x4FF000
	0x03C6130C LDR X0, [X0 + 0x58]
	0x03C61310 BL 0x1C16CF4
	0x03C61314 ADRP X0, 0x4FF000
	0x03C61318 LDR X0, [X0 + 0x60]
	0x03C6131C BL 0x1C16CF4
	0x03C61320 MOVZ W8, 0x1
	0x03C61324 STRB W8, [X19 + 0x328]
	0x03C61328 LDR X0, [X21]
	0x03C6132C BL 0x1C16F10
	0x03C61330 MOV X1, X31
	0x03C61334 MOV X19, X0
	0x03C61338 BL 0x33BDD8C
	0x03C6133C LDR X8, [X20]
	0x03C61340 LDR X8, [X8 + 0xB8]
	0x03C61344 STR X19, [X8]
	0x03C61348 LDP X20, X19, [X31 + 0x10]
	0x03C6134C LDP X30, X21, [X31], #0x20
	0x03C61350 RET
	0x03C61354 MOV X1, X31
	0x03C61358 B 0x33BDD8C
	0x03C6135C LDR X0, [X0 + 0x10]
	0x03C61360 RET
	0x03C61364 STR X1, [X0 + 0x10]
	0x03C61368 RET
	0x03C6136C STP X30, X21, [X31 - 0x20]!
	0x03C61370 STP X20, X19, [X31 + 0x10]
	0x03C61374 ADRP X21, 0x785000
	0x03C61378 LDRB W8, [X21 + 0x329]
	0x03C6137C MOV X20, X1
	0x03C61380 MOV X19, X0
	0x03C61384 TBNZ X8, 0x0, 0x3C6139C
	0x03C61388 ADRP X0, 0x4FF000
	0x03C6138C LDR X0, [X0 + 0x68]
	0x03C61390 BL 0x1C16CF4
	0x03C61394 MOVZ W8, 0x1
	0x03C61398 STRB W8, [X21 + 0x329]
	0x03C6139C LDR X19, [X19 + 0x10]
	0x03C613A0 CMP X19, 0x0
	0x03C613A4 CSEL X21, X31, X20, EQ
	0x03C613A8 CBZ X19, 0x3C613F4
	0x03C613AC ADRP X10, 0x4FF000
	0x03C613B0 LDR X8, [X19]
	0x03C613B4 LDR X10, [X10 + 0x68]
	0x03C613B8 LDRH W9, [X8 + 0x12E]
	0x03C613BC LDR X1, [X10]
	0x03C613C0 CBZ X9, 0x3C613E4
	0x03C613C4 LDR X10, [X8 + 0xB0]
	0x03C613C8 ADD X10, X10, 0x8
	0x03C613CC LDUR X11, [X10 - 0x8]
	0x03C613D0 CMP X11, X1
	0x03C613D4 B.EQ 0x3C613FC
	0x03C613D8 SUBS X9, X9, 0x1
	0x03C613DC ADD X10, X10, 0x10
	0x03C613E0 B.NE 0x3C613CC
	0x03C613E4 MOV X0, X19
	0x03C613E8 MOV W2, W31
	0x03C613EC BL 0x1C5C788
	0x03C613F0 B 0x3C61408
	0x03C613F4 MOV W8, W31
	0x03C613F8 B 0x3C6141C
	0x03C613FC LDRSW X9, [X10]
	0x03C61400 ADD X8, X8, X9, 0x4, LSL
	0x03C61404 ADD X0, X8, 0x138
	0x03C61408 LDP X8, X1, [X0]
	0x03C6140C MOV X0, X19
	0x03C61410 BLR X8
	0x03C61414 AND W8, W0, 0x1
	0x03C61418 MOV X20, X21
	0x03C6141C STRB W8, [X20]
	0x03C61420 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move [X31+48], X31
	014 Move [X31+56], X31
	015 Move [X31+32], X31
	016 Move [X31+40], X31
	017 Compare X0, 0
	018 JumpIfEqual {141}
	019 Move X19, X1
	020 Move X1, X31
	021 Move X20, X0
	022 Call Object.GetInstanceID, X0
	023 Move [X19], W0
	024 Add X8, X31, 8
	025 Move X0, X20
	026 Move X1, X31
	027 Call Light.get_bakingOutput, X0
	028 Move W8, [X31+16]
	029 Move W9, 1
	030 Move X0, X20
	031 Move X1, X31
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CINC not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move [X19+5], W8
	037 Call Light.get_shadows, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X0, X20
	041 Move X1, X31
	042 Move [X19+4], W8
	043 Call Component.get_transform, X0
	044 Compare X0, 0
	045 JumpIfEqual {141}
	046 Move X1, X31
	047 Call Transform.get_position, X0
	048 Move X0, X20
	049 Move X1, X31
	050 Move [X19+8], S0
	051 Move [X19+16], S1
	052 Move [X19+16], S2
	053 Call Component.get_transform, X0
	054 Compare X0, 0
	055 JumpIfEqual {141}
	056 Move X1, X31
	057 Call Transform.get_rotation, X0
	058 Move X0, X20
	059 Move [X19+20], S0
	060 Move [X19+28], S1
	061 Move [X19+28], S2
	062 Move [X19+36], S3
	063 Call LightmapperUtils.ExtractColorTemperature, X0
	064 Move X0, X20
	065 Move X1, X31
	066 Move V8, V0
	067 Move V9, V1
	068 Move V10, V2
	069 Move V11, V3
	070 Call Light.get_color, X0
	071 Move X0, X20
	072 Move X1, X31
	073 Move V12, V0
	074 Move V13, V1
	075 Move V14, V2
	076 Move V15, V3
	077 Call Light.get_intensity, X0
	078 Move V4, V0
	079 Move V0, V12
	080 Move V1, V13
	081 Move V2, V14
	082 Move V3, V15
	083 Move X0, X31
	084 Call LinearColor.Convert, X0, V0
	085 Move X0, X20
	086 Move [X31+48], S0
	087 Move [X31+56], S1
	088 Move [X31+56], S2
	089 Move [X31+64], S3
	090 Call LightmapperUtils.ExtractIndirect, X0
	091 Move [X31+32], S0
	092 Move [X31+40], S1
	093 Move [X31+40], S2
	094 Move [X31+48], S3
	095 Add X0, X31, 48
	096 Move V0, V8
	097 Move V1, V9
	098 Move V2, V10
	099 Move V3, V11
	100 Call LightmapperUtils.ApplyColorTemperature, X0, X1
	101 Add X0, X31, 32
	102 Move V0, V8
	103 Move V1, V9
	104 Move V2, V10
	105 Move V3, V11
	106 Call LightmapperUtils.ApplyColorTemperature, X0, X1
	107 Move V0, [X31+3]
	108 Move X0, X20
	109 Move X1, X31
	110 Move [X19+36], V0
	111 Move V0, [X31+2]
	112 Move [X19+52], V0
	113 Call Light.get_range, X0
	114 Move X0, X20
	115 Move X1, X31
	116 Move [X19+68], S0
	117 Move [X19+72], W31
	118 Call Light.get_spotAngle, X0
	119 Move X8, -51863552
	120 Move V1, [X8+260]
	121 Move X0, X20
	122 Multiply S0, S0, S1
	123 Move [X19+76], S0
	124 Call LightmapperUtils.ExtractInnerCone, X0
	125 Move W8, 3
	126 Move [X19+80], S0
	127 NotImplemented "Instruction STRH not yet implemented."
	128 Move X20, [X31+144]
	129 Move X19, [X31+152]
	130 Move X30, [X31+128]
	131 Move D9, [X31+112]
	132 Move D8, [X31+120]
	133 Move D11, [X31+96]
	134 Move D10, [X31+104]
	135 Move D13, [X31+80]
	136 Move D12, [X31+88]
	137 Move D15, [X31+64]
	138 Move D14, [X31+72]
	139 Add X31, X31, 160
	140 Return 
	141 Call 0x1C17F20

Method: System.Void Extract(UnityEngine.Light l, ref UnityEngine.Experimental.GlobalIllumination.RectangleLight rect)

Disassembly:
	0x03C61424 LDP X30, X21, [X31], #0x20
	0x03C61428 RET
	0x03C6142C STR X30, [X31 - 0x20]!
	0x03C61430 STP X20, X19, [X31 + 0x10]
	0x03C61434 ADRP X20, 0x785000
	0x03C61438 LDR X1, [X20 + 0x330]
	0x03C6143C MOV X19, X0
	0x03C61440 CBNZ X1, 0x3C61458
	0x03C61444 ADRP X0, 0xFFFFFFFFFCE9A000
	0x03C61448 ADD X0, X0, 0x830
	0x03C6144C BL 0x1C16CB8
	0x03C61450 MOV X1, X0
	0x03C61454 STR X0, [X20 + 0x330]
	0x03C61458 MOV X0, X19
	0x03C6145C LDP X20, X19, [X31 + 0x10]
	0x03C61460 LDR X30, [X31], #0x20
	0x03C61464 BR X1
	0x03C61468 STR X30, [X31 - 0x30]!
	0x03C6146C STP X22, X21, [X31 + 0x10]
	0x03C61470 STP X20, X19, [X31 + 0x20]
	0x03C61474 ADRP X21, 0x785000
	0x03C61478 ADRP X22, 0x4F2000
	0x03C6147C LDRB W8, [X21 + 0x338]
	0x03C61480 LDR X22, [X22 + 0x90]
	0x03C61484 MOV W20, W1
	0x03C61488 MOV W19, W0
	0x03C6148C TBNZ X8, 0x0, 0x3C614A4
	0x03C61490 ADRP X0, 0x4F2000
	0x03C61494 LDR X0, [X0 + 0x90]
	0x03C61498 BL 0x1C16CF4
	0x03C6149C MOVZ W8, 0x1
	0x03C614A0 STRB W8, [X21 + 0x338]
	0x03C614A4 LDR X0, [X22]
	0x03C614A8 LDR W8, [X0 + 0xE0]
	0x03C614AC CBNZ W8, 0x3C614B4
	0x03C614B0 BL 0x1C16DFC
	0x03C614B4 ADRP X21, 0x785000
	0x03C614B8 LDR X2, [X21 + 0x340]
	0x03C614BC CBNZ X2, 0x3C614D4
	0x03C614C0 ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C614C4 ADD X0, X0, 0x708
	0x03C614C8 BL 0x1C16CB8
	0x03C614CC MOV X2, X0
	0x03C614D0 STR X0, [X21 + 0x340]
	0x03C614D4 AND W1, W20, 0x1
	0x03C614D8 MOV W0, W19
	0x03C614DC LDP X20, X19, [X31 + 0x20]
	0x03C614E0 LDP X22, X21, [X31 + 0x10]
	0x03C614E4 LDR X30, [X31], #0x30
	0x03C614E8 BR X2
	0x03C614EC STP X30, X21, [X31 - 0x20]!
	0x03C614F0 STP X20, X19, [X31 + 0x10]
	0x03C614F4 ADRP X21, 0x785000
	0x03C614F8 LDR X2, [X21 + 0x340]
	0x03C614FC MOV W19, W1
	0x03C61500 MOV W20, W0
	0x03C61504 CBNZ X2, 0x3C6151C
	0x03C61508 ADRP X0, 0xFFFFFFFFFCE9E000
	0x03C6150C ADD X0, X0, 0x708
	0x03C61510 BL 0x1C16CB8
	0x03C61514 MOV X2, X0
	0x03C61518 STR X0, [X21 + 0x340]
	0x03C6151C AND W1, W19, 0x1
	0x03C61520 MOV W0, W20
	0x03C61524 LDP X20, X19, [X31 + 0x10]
	0x03C61528 LDP X30, X21, [X31], #0x20
	0x03C6152C BR X2
	0x03C61530 STR X30, [X31 - 0x30]!
	0x03C61534 STP X22, X21, [X31 + 0x10]
	0x03C61538 STP X20, X19, [X31 + 0x20]
	0x03C6153C ADRP X21, 0x785000
	0x03C61540 ADRP X22, 0x4F2000
	0x03C61544 LDRB W8, [X21 + 0x348]
	0x03C61548 LDR X22, [X22 + 0x90]
	0x03C6154C MOV W20, W1
	0x03C61550 MOV W19, W0
	0x03C61554 TBNZ X8, 0x0, 0x3C6156C
	0x03C61558 ADRP X0, 0x4F2000
	0x03C6155C LDR X0, [X0 + 0x90]
	0x03C61560 BL 0x1C16CF4
	0x03C61564 MOVZ W8, 0x1
	0x03C61568 STRB W8, [X21 + 0x348]
	0x03C6156C LDR X0, [X22]
	0x03C61570 LDR W8, [X0 + 0xE0]
	0x03C61574 CBNZ W8, 0x3C6157C
	0x03C61578 BL 0x1C16DFC
	0x03C6157C ADRP X21, 0x785000
	0x03C61580 LDR X2, [X21 + 0x350]
	0x03C61584 CBNZ X2, 0x3C6159C
	0x03C61588 ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C6158C ADD X0, X0, 0x832
	0x03C61590 BL 0x1C16CB8
	0x03C61594 MOV X2, X0
	0x03C61598 STR X0, [X21 + 0x350]
	0x03C6159C AND W1, W20, 0x1
	0x03C615A0 MOV W0, W19
	0x03C615A4 LDP X20, X19, [X31 + 0x20]
	0x03C615A8 LDP X22, X21, [X31 + 0x10]
	0x03C615AC LDR X30, [X31], #0x30
	0x03C615B0 BR X2
	0x03C615B4 STP X30, X21, [X31 - 0x20]!
	0x03C615B8 STP X20, X19, [X31 + 0x10]
	0x03C615BC ADRP X21, 0x785000
	0x03C615C0 LDR X2, [X21 + 0x350]
	0x03C615C4 MOV W19, W1
	0x03C615C8 MOV W20, W0
	0x03C615CC CBNZ X2, 0x3C615E4
	0x03C615D0 ADRP X0, 0xFFFFFFFFFCEA6000
	0x03C615D4 ADD X0, X0, 0x832

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move [X31+48], X31
	014 Move [X31+56], X31
	015 Move [X31+32], X31
	016 Move [X31+40], X31
	017 Compare X0, 0
	018 JumpIfEqual {131}
	019 Move X19, X1
	020 Move X1, X31
	021 Move X20, X0
	022 Call Object.GetInstanceID, X0
	023 Move [X19], W0
	024 Add X8, X31, 8
	025 Move X0, X20
	026 Move X1, X31
	027 Call Light.get_bakingOutput, X0
	028 Move W8, [X31+16]
	029 Move W9, 1
	030 Move X0, X20
	031 Move X1, X31
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CINC not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move [X19+5], W8
	037 Call Light.get_shadows, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X0, X20
	041 Move X1, X31
	042 Move [X19+4], W8
	043 Call Component.get_transform, X0
	044 Compare X0, 0
	045 JumpIfEqual {131}
	046 Move X1, X31
	047 Call Transform.get_position, X0
	048 Move X0, X20
	049 Move X1, X31
	050 Move [X19+8], S0
	051 Move [X19+16], S1
	052 Move [X19+16], S2
	053 Call Component.get_transform, X0
	054 Compare X0, 0
	055 JumpIfEqual {131}
	056 Move X1, X31
	057 Call Transform.get_rotation, X0
	058 Move X0, X20
	059 Move [X19+20], S0
	060 Move [X19+28], S1
	061 Move [X19+28], S2
	062 Move [X19+36], S3
	063 Call LightmapperUtils.ExtractColorTemperature, X0
	064 Move X0, X20
	065 Move X1, X31
	066 Move V8, V0
	067 Move V9, V1
	068 Move V10, V2
	069 Move V11, V3
	070 Call Light.get_color, X0
	071 Move X0, X20
	072 Move X1, X31
	073 Move V12, V0
	074 Move V13, V1
	075 Move V14, V2
	076 Move V15, V3
	077 Call Light.get_intensity, X0
	078 Move V4, V0
	079 Move V0, V12
	080 Move V1, V13
	081 Move V2, V14
	082 Move V3, V15
	083 Move X0, X31
	084 Call LinearColor.Convert, X0, V0
	085 Move X0, X20
	086 Move [X31+48], S0
	087 Move [X31+56], S1
	088 Move [X31+56], S2
	089 Move [X31+64], S3
	090 Call LightmapperUtils.ExtractIndirect, X0
	091 Move [X31+32], S0
	092 Move [X31+40], S1
	093 Move [X31+40], S2
	094 Move [X31+48], S3
	095 Add X0, X31, 48
	096 Move V0, V8
	097 Move V1, V9
	098 Move V2, V10
	099 Move V3, V11
	100 Call LightmapperUtils.ApplyColorTemperature, X0, X1
	101 Add X0, X31, 32
	102 Move V0, V8
	103 Move V1, V9
	104 Move V2, V10
	105 Move V3, V11
	106 Call LightmapperUtils.ApplyColorTemperature, X0, X1
	107 Move V0, [X31+3]
	108 Move X0, X20
	109 Move X1, X31
	110 Move [X19+36], V0
	111 Move V0, [X31+2]
	112 Move [X19+52], V0
	113 Call Light.get_range, X0
	114 Move W8, 3
	115 Move [X19+68], S0
	116 Move [X19+72], X31
	117 Move [X19+80], W8
	118 Move X20, [X31+144]
	119 Move X19, [X31+152]
	120 Move X30, [X31+128]
	121 Move D9, [X31+112]
	122 Move D8, [X31+120]
	123 Move D11, [X31+96]
	124 Move D10, [X31+104]
	125 Move D13, [X31+80]
	126 Move D12, [X31+88]
	127 Move D15, [X31+64]
	128 Move D14, [X31+72]
	129 Add X31, X31, 160
	130 Return 
	131 Call 0x1C17F20

Method: System.Void Extract(UnityEngine.Light l, ref UnityEngine.Experimental.GlobalIllumination.DiscLight disc)

Disassembly:
	0x03C615D8 BL 0x1C16CB8
	0x03C615DC MOV X2, X0
	0x03C615E0 STR X0, [X21 + 0x350]
	0x03C615E4 AND W1, W19, 0x1
	0x03C615E8 MOV W0, W20
	0x03C615EC LDP X20, X19, [X31 + 0x10]
	0x03C615F0 LDP X30, X21, [X31], #0x20
	0x03C615F4 BR X2
	0x03C615F8 STR X30, [X31 - 0x30]!
	0x03C615FC STP X22, X21, [X31 + 0x10]
	0x03C61600 STP X20, X19, [X31 + 0x20]
	0x03C61604 ADRP X22, 0x785000
	0x03C61608 ADRP X21, 0x4F2000
	0x03C6160C LDRB W8, [X22 + 0x358]
	0x03C61610 LDR X21, [X21 + 0x90]
	0x03C61614 MOV W20, W1
	0x03C61618 MOV W19, W0
	0x03C6161C TBNZ X8, 0x0, 0x3C61634
	0x03C61620 ADRP X0, 0x4F2000
	0x03C61624 LDR X0, [X0 + 0x90]
	0x03C61628 BL 0x1C16CF4
	0x03C6162C MOVZ W8, 0x1
	0x03C61630 STRB W8, [X22 + 0x358]
	0x03C61634 MOV X0, X31
	0x03C61638 BL 0x3C113A8
	0x03C6163C LDR X8, [X21]
	0x03C61640 MOV W21, W0
	0x03C61644 LDR W9, [X8 + 0xE0]
	0x03C61648 CBNZ W9, 0x3C61654
	0x03C6164C MOV X0, X8
	0x03C61650 BL 0x1C16DFC
	0x03C61654 CMP W21, 0x1
	0x03C61658 CSET W8, EQ
	0x03C6165C CMP W20, 0x2
	0x03C61660 CSET W9, EQ
	0x03C61664 CMP W20, 0x0
	0x03C61668 MOV W0, W19
	0x03C6166C LDP X20, X19, [X31 + 0x20]
	0x03C61670 LDP X22, X21, [X31 + 0x10]
	0x03C61674 CSEL W1, W8, W9, EQ
	0x03C61678 LDR X30, [X31], #0x30
	0x03C6167C B 0x3C61530
	0x03C61680 STR X30, [X31 - 0x20]!
	0x03C61684 STP X20, X19, [X31 + 0x10]
	0x03C61688 ADRP X20, 0x785000
	0x03C6168C LDR X1, [X20 + 0x360]
	0x03C61690 MOV W19, W0
	0x03C61694 CBNZ X1, 0x3C616AC
	0x03C61698 ADRP X0, 0xFFFFFFFFFCEBE000
	0x03C6169C ADD X0, X0, 0x292
	0x03C616A0 BL 0x1C16CB8
	0x03C616A4 MOV X1, X0
	0x03C616A8 STR X0, [X20 + 0x360]
	0x03C616AC MOV W0, W19
	0x03C616B0 LDP X20, X19, [X31 + 0x10]
	0x03C616B4 LDR X30, [X31], #0x20
	0x03C616B8 BR X1
	0x03C616BC STP X30, X21, [X31 - 0x20]!
	0x03C616C0 STP X20, X19, [X31 + 0x10]
	0x03C616C4 ADRP X20, 0x785000
	0x03C616C8 ADRP X21, 0x4F2000
	0x03C616CC LDRB W8, [X20 + 0x368]
	0x03C616D0 LDR X21, [X21 + 0x90]
	0x03C616D4 MOV W19, W0
	0x03C616D8 TBNZ X8, 0x0, 0x3C616F0
	0x03C616DC ADRP X0, 0x4F2000
	0x03C616E0 LDR X0, [X0 + 0x90]
	0x03C616E4 BL 0x1C16CF4
	0x03C616E8 MOVZ W8, 0x1
	0x03C616EC STRB W8, [X20 + 0x368]
	0x03C616F0 LDR X0, [X21]
	0x03C616F4 LDR W8, [X0 + 0xE0]
	0x03C616F8 CBNZ W8, 0x3C61700
	0x03C616FC BL 0x1C16DFC
	0x03C61700 ADRP X20, 0x785000
	0x03C61704 LDR X1, [X20 + 0x360]
	0x03C61708 CBNZ X1, 0x3C61720
	0x03C6170C ADRP X0, 0xFFFFFFFFFCEBE000
	0x03C61710 ADD X0, X0, 0x292
	0x03C61714 BL 0x1C16CB8
	0x03C61718 MOV X1, X0
	0x03C6171C STR X0, [X20 + 0x360]
	0x03C61720 MOV W0, W19
	0x03C61724 LDP X20, X19, [X31 + 0x10]
	0x03C61728 LDP X30, X21, [X31], #0x20
	0x03C6172C BR X1
	0x03C61730 STR X30, [X31 - 0x20]!
	0x03C61734 STP X20, X19, [X31 + 0x10]
	0x03C61738 ADRP X20, 0x785000
	0x03C6173C LDR X1, [X20 + 0x370]
	0x03C61740 MOV W19, W0
	0x03C61744 CBNZ X1, 0x3C6175C
	0x03C61748 ADRP X0, 0xFFFFFFFFFCEBC000
	0x03C6174C ADD X0, X0, 0x531
	0x03C61750 BL 0x1C16CB8
	0x03C61754 MOV X1, X0
	0x03C61758 STR X0, [X20 + 0x370]
	0x03C6175C MOV W0, W19
	0x03C61760 LDP X20, X19, [X31 + 0x10]
	0x03C61764 LDR X30, [X31], #0x20
	0x03C61768 BR X1
	0x03C6176C STP X30, X23, [X31 - 0x30]!
	0x03C61770 STP X22, X21, [X31 + 0x10]
	0x03C61774 STP X20, X19, [X31 + 0x20]
	0x03C61778 ADRP X21, 0x785000
	0x03C6177C LDRB W8, [X21 + 0x378]
	0x03C61780 MOV W19, W1
	0x03C61784 MOV W20, W0
	0x03C61788 TBNZ X8, 0x0, 0x3C617AC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move [X31+48], X31
	014 Move [X31+56], X31
	015 Move [X31+32], X31
	016 Move [X31+40], X31
	017 Compare X0, 0
	018 JumpIfEqual {131}
	019 Move X19, X1
	020 Move X1, X31
	021 Move X20, X0
	022 Call Object.GetInstanceID, X0
	023 Move [X19], W0
	024 Add X8, X31, 8
	025 Move X0, X20
	026 Move X1, X31
	027 Call Light.get_bakingOutput, X0
	028 Move W8, [X31+16]
	029 Move W9, 1
	030 Move X0, X20
	031 Move X1, X31
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CINC not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move [X19+5], W8
	037 Call Light.get_shadows, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Move X0, X20
	041 Move X1, X31
	042 Move [X19+4], W8
	043 Call Component.get_transform, X0
	044 Compare X0, 0
	045 JumpIfEqual {131}
	046 Move X1, X31
	047 Call Transform.get_position, X0
	048 Move X0, X20
	049 Move X1, X31
	050 Move [X19+8], S0
	051 Move [X19+16], S1
	052 Move [X19+16], S2
	053 Call Component.get_transform, X0
	054 Compare X0, 0
	055 JumpIfEqual {131}
	056 Move X1, X31
	057 Call Transform.get_rotation, X0
	058 Move X0, X20
	059 Move [X19+20], S0
	060 Move [X19+28], S1
	061 Move [X19+28], S2
	062 Move [X19+36], S3
	063 Call LightmapperUtils.ExtractColorTemperature, X0
	064 Move X0, X20
	065 Move X1, X31
	066 Move V8, V0
	067 Move V9, V1
	068 Move V10, V2
	069 Move V11, V3
	070 Call Light.get_color, X0
	071 Move X0, X20
	072 Move X1, X31
	073 Move V12, V0
	074 Move V13, V1
	075 Move V14, V2
	076 Move V15, V3
	077 Call Light.get_intensity, X0
	078 Move V4, V0
	079 Move V0, V12
	080 Move V1, V13
	081 Move V2, V14
	082 Move V3, V15
	083 Move X0, X31
	084 Call LinearColor.Convert, X0, V0
	085 Move X0, X20
	086 Move [X31+48], S0
	087 Move [X31+56], S1
	088 Move [X31+56], S2
	089 Move [X31+64], S3
	090 Call LightmapperUtils.ExtractIndirect, X0
	091 Move [X31+32], S0
	092 Move [X31+40], S1
	093 Move [X31+40], S2
	094 Move [X31+48], S3
	095 Add X0, X31, 48
	096 Move V0, V8
	097 Move V1, V9
	098 Move V2, V10
	099 Move V3, V11
	100 Call LightmapperUtils.ApplyColorTemperature, X0, X1
	101 Add X0, X31, 32
	102 Move V0, V8
	103 Move V1, V9
	104 Move V2, V10
	105 Move V3, V11
	106 Call LightmapperUtils.ApplyColorTemperature, X0, X1
	107 Move V0, [X31+3]
	108 Move X0, X20
	109 Move X1, X31
	110 Move [X19+36], V0
	111 Move V0, [X31+2]
	112 Move [X19+52], V0
	113 Call Light.get_range, X0
	114 Move W8, 3
	115 Move [X19+68], S0
	116 Move [X19+72], W31
	117 Move [X19+76], W8
	118 Move X20, [X31+144]
	119 Move X19, [X31+152]
	120 Move X30, [X31+128]
	121 Move D9, [X31+112]
	122 Move D8, [X31+120]
	123 Move D11, [X31+96]
	124 Move D10, [X31+104]
	125 Move D13, [X31+80]
	126 Move D12, [X31+88]
	127 Move D15, [X31+64]
	128 Move D14, [X31+72]
	129 Add X31, X31, 160
	130 Return 
	131 Call 0x1C17F20

Method: System.Void Extract(UnityEngine.Light l, out UnityEngine.Experimental.GlobalIllumination.Cookie cookie)

Disassembly:
	0x03C6178C ADRP X0, 0x492000
	0x03C61790 LDR X0, [X0 + 0xA28]
	0x03C61794 BL 0x1C16CF4
	0x03C61798 ADRP X0, 0x4F2000
	0x03C6179C LDR X0, [X0 + 0x90]
	0x03C617A0 BL 0x1C16CF4
	0x03C617A4 MOVZ W8, 0x1
	0x03C617A8 STRB W8, [X21 + 0x378]
	0x03C617AC ORR W8, W19, W20, 0x0
	0x03C617B0 CBZ W8, 0x3C618BC
	0x03C617B4 TBNZ X8, 0x1F, 0x3C618DC
	0x03C617B8 CMP W20, 0x21
	0x03C617BC B.GE 0x3C618FC
	0x03C617C0 CMP W19, 0x9
	0x03C617C4 B.GE 0x3C6191C
	0x03C617C8 ADRP X21, 0x4F2000
	0x03C617CC LDR X21, [X21 + 0x90]
	0x03C617D0 CBZ W20, 0x3C617E4
	0x03C617D4 CMP W20, 0x11
	0x03C617D8 B.GE 0x3C617EC
	0x03C617DC MOVZ W20, 0x2
	0x03C617E0 B 0x3C617F8
	0x03C617E4 MOV X20, X31
	0x03C617E8 B 0x3C617F8
	0x03C617EC CMP W20, 0x19
	0x03C617F0 MOVZ W8, 0x3
	0x03C617F4 CINC X20, X8, GE
	0x03C617F8 LDR X0, [X21]
	0x03C617FC LDR W8, [X0 + 0xE0]
	0x03C61800 CBNZ W8, 0x3C6180C
	0x03C61804 BL 0x1C16DFC
	0x03C61808 LDR X0, [X21]
	0x03C6180C LDR X8, [X0 + 0xB8]
	0x03C61810 LDR X22, [X8]
	0x03C61814 CBZ X22, 0x3C618D8
	0x03C61818 LDR X23, [X8 + 0x8]
	0x03C6181C CBZ X23, 0x3C618D8
	0x03C61820 ADRP X8, 0x492000
	0x03C61824 LDR X8, [X8 + 0xA28]
	0x03C61828 LDR X0, [X8]
	0x03C6182C LDR W8, [X0 + 0xE0]
	0x03C61830 CBNZ W8, 0x3C61838
	0x03C61834 BL 0x1C16DFC
	0x03C61838 LDR W8, [X22 + 0x18]
	0x03C6183C LDR W9, [X23 + 0x18]
	0x03C61840 MOV X1, X31
	0x03C61844 CMP W8, W9
	0x03C61848 CSET W0, EQ
	0x03C6184C BL 0x3C06E58
	0x03C61850 LDR X0, [X21]
	0x03C61854 LDR W8, [X0 + 0xE0]
	0x03C61858 CBNZ W8, 0x3C61864
	0x03C6185C BL 0x1C16DFC
	0x03C61860 LDR X0, [X21]
	0x03C61864 LDR X8, [X0 + 0xB8]
	0x03C61868 CMP W19, 0x0
	0x03C6186C ADD X9, X8, 0x8
	0x03C61870 CSEL X8, X8, X9, EQ
	0x03C61874 LDR X21, [X8]
	0x03C61878 CBZ X21, 0x3C618D8
	0x03C6187C LDR W8, [X21 + 0x18]
	0x03C61880 CMP X20, W8, SXTW
	0x03C61884 B.GE 0x3C618BC
	0x03C61888 ADD X22, X21, 0x20
	0x03C6188C CMP X20, W8, UXTW
	0x03C61890 B.CS 0x3C618D4
	0x03C61894 LDR W19, [X22, X20, LSL #2]
	0x03C61898 MOVZ W1, 0x4
	0x03C6189C MOV X2, X31
	0x03C618A0 MOV W0, W19
	0x03C618A4 BL 0x3C3C4BC
	0x03C618A8 TBNZ X0, 0x0, 0x3C618C0
	0x03C618AC LDR W8, [X21 + 0x18]
	0x03C618B0 ADD X20, X20, 0x1
	0x03C618B4 CMP X20, W8, SXTW
	0x03C618B8 B.LT 0x3C6188C
	0x03C618BC MOV W19, W31
	0x03C618C0 MOV W0, W19
	0x03C618C4 LDP X20, X19, [X31 + 0x20]
	0x03C618C8 LDP X22, X21, [X31 + 0x10]
	0x03C618CC LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x786000
	008 Move W8, [X21+769]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x493000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+769], W8
	020 Compare X20, 0
	021 JumpIfEqual {97}
	022 Move X22, 0x493000
	023 Move X22, [X22+1432]
	024 Move X0, X20
	025 Move X1, X31
	026 Call Light.get_cookie, X0
	027 Move X8, [X22]
	028 Move X21, X0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X0, X21
	035 Move X1, X31
	036 Call Object.op_Implicit, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {48}
	041 Move X0, X20
	042 Move X1, X31
	043 Call Light.get_cookie, X0
	044 Compare X0, 0
	045 JumpIfEqual {97}
	046 Move X1, X31
	047 Call Object.GetInstanceID, X0
	048 Move W0, W31
	049 Move W21, 0x3F800000
	050 Move [X19], W0
	051 Move [X19+4], W21
	052 Move X0, X20
	053 Move X1, X31
	054 Call Light.get_type, X0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X20
	057 Move X1, X31
	058 Call Light.get_cookie, X0
	059 Move X8, [X22]
	060 Move X21, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X21
	067 Move X1, X31
	068 Call Object.op_Implicit, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {86}
	073 Move X0, X20
	074 Move X1, X31
	075 Call Light.get_cookieSize, X0
	076 Move X0, X20
	077 Move X1, X31
	078 Move V8, V0
	079 Call Light.get_cookieSize, X0
	080 Move W8, S0
	081 Move W21, S8
	082 Move X8, X8
	083 ShiftRight X8, 32
	084 And X8, X8, 0x7FFFFFFF
	085 Move X8, 0x3F800000
	086 Move X8, 0x3F800000
	087 Move W21, 0x3F800000
	088 Or X8, X8, X21
	089 Move [X19+8], X8
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+8]
	095 Move V8, [X31+48]
	096 Return 
	097 Call 0x1C17F20

