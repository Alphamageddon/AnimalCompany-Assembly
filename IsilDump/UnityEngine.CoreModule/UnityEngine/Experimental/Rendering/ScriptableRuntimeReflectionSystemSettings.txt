Type: UnityEngine.Experimental.Rendering.ScriptableRuntimeReflectionSystemSettings

Method: System.Void set_Internal_ScriptableRuntimeReflectionSystemSettings_system(UnityEngine.Experimental.Rendering.IScriptableRuntimeReflectionSystem value)

Disassembly:
	0x03C6211C LDR X30, [X31], #0x20
	0x03C62120 B 0x3C62124
	0x03C62124 STP X30, X21, [X31 - 0x20]!
	0x03C62128 STP X20, X19, [X31 + 0x10]
	0x03C6212C ADRP X21, 0x784000
	0x03C62130 LDRB W8, [X21 + 0x41B]
	0x03C62134 MOV X19, X1
	0x03C62138 MOV W20, W0
	0x03C6213C TBZ X8, 0x0, 0x3C62150
	0x03C62140 TBZ X20, 0x0, 0x3C62168
	0x03C62144 LDP X20, X19, [X31 + 0x10]
	0x03C62148 LDP X30, X21, [X31], #0x20
	0x03C6214C RET
	0x03C62150 ADRP X0, 0x4B9000
	0x03C62154 LDR X0, [X0 + 0x7F0]
	0x03C62158 BL 0x1C16CF4
	0x03C6215C MOVZ W8, 0x1
	0x03C62160 STRB W8, [X21 + 0x41B]
	0x03C62164 TBNZ X20, 0x0, 0x3C62144
	0x03C62168 ADRP X20, 0x4B9000
	0x03C6216C LDR X20, [X20 + 0x7F0]
	0x03C62170 MOVZ W0, 0x1
	0x03C62174 BL 0x3C621A4
	0x03C62178 LDR X8, [X20]
	0x03C6217C MOV X20, X0
	0x03C62180 LDR W9, [X8 + 0xE0]
	0x03C62184 CBNZ W9, 0x3C62190
	0x03C62188 MOV X0, X8
	0x03C6218C BL 0x1C16DFC
	0x03C62190 MOV X0, X20
	0x03C62194 MOV X1, X19
	0x03C62198 LDP X20, X19, [X31 + 0x10]
	0x03C6219C LDP X30, X21, [X31], #0x20
	0x03C621A0 B 0x3C61F24
	0x03C621A4 SUB X31, X31, 0x30
	0x03C621A8 STP X30, X21, [X31 + 0x10]
	0x03C621AC STP X20, X19, [X31 + 0x20]
	0x03C621B0 AND W19, W0, 0x1
	0x03C621B4 ADRP X21, 0x784000
	0x03C621B8 STRB W19, [X31 + 0xC]
	0x03C621BC ADRP X20, 0x491000
	0x03C621C0 LDRB W8, [X21 + 0x428]
	0x03C621C4 LDR X20, [X20 + 0xB58]
	0x03C621C8 TBNZ X8, 0x0, 0x3C621EC
	0x03C621CC ADRP X0, 0x491000
	0x03C621D0 LDR X0, [X0 + 0xB58]
	0x03C621D4 BL 0x1C16CF4
	0x03C621D8 ADRP X0, 0x4FE000
	0x03C621DC LDR X0, [X0 + 0xB8]
	0x03C621E0 BL 0x1C16CF4
	0x03C621E4 MOVZ W8, 0x1
	0x03C621E8 STRB W8, [X21 + 0x428]
	0x03C621EC LDR X0, [X20]
	0x03C621F0 EOR W8, W19, 0x1
	0x03C621F4 STRB W8, [X31 + 0x8]
	0x03C621F8 ADRP X19, 0x4FE000
	0x03C621FC LDR W8, [X0 + 0xE0]
	0x03C62200 LDR X19, [X19 + 0xB8]
	0x03C62204 CBNZ W8, 0x3C6220C
	0x03C62208 BL 0x1C16DFC
	0x03C6220C ADD X0, X31, 0x8
	0x03C62210 MOV X1, X31
	0x03C62214 BL 0x33176C4
	0x03C62218 LDR X8, [X19]
	0x03C6221C MOV X1, X0
	0x03C62220 MOV X2, X31
	0x03C62224 MOV X0, X8
	0x03C62228 BL 0x321B938
	0x03C6222C MOV X19, X0
	0x03C62230 ADD X0, X31, 0xC
	0x03C62234 MOV X1, X31
	0x03C62238 BL 0x33176C4
	0x03C6223C MOV X1, X0
	0x03C62240 MOV X0, X19
	0x03C62244 BL 0x3C62AAC
	0x03C62248 LDP X20, X19, [X31 + 0x20]
	0x03C6224C LDP X30, X21, [X31 + 0x10]
	0x03C62250 ADD X31, X31, 0x30
	0x03C62254 RET
	0x03C62258 STP X30, X21, [X31 - 0x20]!
	0x03C6225C STP X20, X19, [X31 + 0x10]
	0x03C62260 ADRP X21, 0x784000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x785000
	006 Move X21, 0x4FF000
	007 Move W8, [X20+793]
	008 Move X21, [X21+88]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x492000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move X0, 0x4FF000
	018 Move X0, [X0+88]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+793], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Move X8, [X0+184]
	029 Move X8, [X8]
	030 Compare X8, 0
	031 JumpIfEqual {97}
	032 Move X9, [X8+16]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W9, [X0+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {43}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Move X8, [X0+184]
	040 Move X8, [X8]
	041 Compare X8, 0
	042 JumpIfEqual {97}
	043 Move X9, [X8+16]
	044 Compare X9, 0
	045 JumpIfEqual {82}
	046 Move W9, [X0+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {55}
	049 Call 0x1C17DFC
	050 Move X8, [X21]
	051 Move X8, [X8+184]
	052 Move X8, [X8]
	053 Compare X8, 0
	054 JumpIfEqual {97}
	055 Move X20, [X8+16]
	056 Compare X20, 0
	057 JumpIfEqual {97}
	058 Move X10, 0x492000
	059 Move X8, [X20]
	060 Move X10, [X10+3584]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move X0, X20
	072 Move W2, W31
	073 Call 0x1C5D788
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Add X8, X8, X9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X1, [X0+8]
	079 Move X0, X20
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X0, [X21]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X21]
	087 Move X8, [X0+184]
	088 Move X8, [X8]
	089 Compare X8, 0
	090 JumpIfEqual {97}
	091 Move [X8+16], X19
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Return 
	097 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.ScriptableRuntimeReflectionSystemWrapper get_Internal_ScriptableRuntimeReflectionSystemSettings_instance()

Disassembly:
	0x03C62264 LDRB W8, [X21 + 0x41C]
	0x03C62268 MOV X19, X1
	0x03C6226C MOV W20, W0
	0x03C62270 TBZ X8, 0x0, 0x3C622B4
	0x03C62274 TBZ X20, 0x0, 0x3C622CC
	0x03C62278 ADRP X20, 0x4B9000
	0x03C6227C LDR X20, [X20 + 0x7F0]
	0x03C62280 MOV W0, W31
	0x03C62284 BL 0x3C621A4
	0x03C62288 LDR X8, [X20]
	0x03C6228C MOV X20, X0
	0x03C62290 LDR W9, [X8 + 0xE0]
	0x03C62294 CBNZ W9, 0x3C622A0
	0x03C62298 MOV X0, X8
	0x03C6229C BL 0x1C16DFC
	0x03C622A0 MOV X0, X20
	0x03C622A4 MOV X1, X19
	0x03C622A8 LDP X20, X19, [X31 + 0x10]
	0x03C622AC LDP X30, X21, [X31], #0x20
	0x03C622B0 B 0x3C61F24
	0x03C622B4 ADRP X0, 0x4B9000
	0x03C622B8 LDR X0, [X0 + 0x7F0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x785000
	005 Move X19, 0x4FF000
	006 Move W8, [X20+794]
	007 Move X19, [X19+88]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x4FF000
	013 Move X0, [X0+88]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+794], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void ScriptingDirtyReflectionSystemInstance()

Disassembly:
	0x03C622BC BL 0x1C16CF4
	0x03C622C0 MOVZ W8, 0x1
	0x03C622C4 STRB W8, [X21 + 0x41C]
	0x03C622C8 TBNZ X20, 0x0, 0x3C62278
	0x03C622CC LDP X20, X19, [X31 + 0x10]
	0x03C622D0 LDP X30, X21, [X31], #0x20
	0x03C622D4 RET
	0x03C622D8 STP X30, X23, [X31 - 0x30]!
	0x03C622DC STP X22, X21, [X31 + 0x10]
	0x03C622E0 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x785000
	004 Move X0, [X19+800]
	005 Compare X0, 0
	006 JumpIfNotEqual {11}
	007 Move X0, -51642368
	008 Add X0, X0, 63
	009 Call 0x1C17CB8
	010 Move [X19+800], X0
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 CallNoReturn X0

Method: System.Void .cctor()

Disassembly:
	0x03C622E4 ADRP X22, 0x784000
	0x03C622E8 ADRP X23, 0x491000
	0x03C622EC LDRB W8, [X22 + 0x41D]
	0x03C622F0 LDR X23, [X23 + 0x598]
	0x03C622F4 MOV X19, X2
	0x03C622F8 MOV X20, X1
	0x03C622FC MOV X21, X0
	0x03C62300 TBNZ X8, 0x0, 0x3C62324
	0x03C62304 ADRP X0, 0x4B9000
	0x03C62308 LDR X0, [X0 + 0x7F0]
	0x03C6230C BL 0x1C16CF4
	0x03C62310 ADRP X0, 0x491000
	0x03C62314 LDR X0, [X0 + 0x598]
	0x03C62318 BL 0x1C16CF4
	0x03C6231C MOVZ W8, 0x1
	0x03C62320 STRB W8, [X22 + 0x41D]
	0x03C62324 LDR X0, [X23]
	0x03C62328 LDR W8, [X0 + 0xE0]
	0x03C6232C CBNZ W8, 0x3C62334
	0x03C62330 BL 0x1C16DFC
	0x03C62334 MOV X0, X20
	0x03C62338 MOV X1, X21
	0x03C6233C MOV X2, X31
	0x03C62340 BL 0x3C354F8
	0x03C62344 TBZ X0, 0x0, 0x3C62390
	0x03C62348 ADRP X22, 0x4B9000
	0x03C6234C LDR X22, [X22 + 0x7F0]
	0x03C62350 MOVZ W2, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x785000
	006 Move X21, 0x4FF000
	007 Move X20, 0x4FF000
	008 Move W8, [X19+808]
	009 Move X21, [X21+96]
	010 Move X20, [X20+88]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x4FF000
	016 Move X0, [X0+88]
	017 Call 0x1C17CF4
	018 Move X0, 0x4FF000
	019 Move X0, [X0+96]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+808], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X19, X0
	027 Call Object..ctor, X0
	028 Move X8, [X20]
	029 Move X8, [X8+184]
	030 Move [X8], X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 

