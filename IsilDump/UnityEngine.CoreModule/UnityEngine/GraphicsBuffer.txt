Type: UnityEngine.GraphicsBuffer

Method: System.Void Finalize()

Disassembly:
	0x03C16FE0 BR X1
	0x03C16FE4 MOV X1, X31
	0x03C16FE8 B 0x3C32494
	0x03C16FEC STR X30, [X31 - 0x20]!
	0x03C16FF0 STP X20, X19, [X31 + 0x10]
	0x03C16FF4 ADRP X20, 0x7CE000
	0x03C16FF8 LDR X1, [X20 + 0xAC8]
	0x03C16FFC MOV X19, X0
	0x03C17000 CBNZ X1, 0x3C17018
	0x03C17004 ADRP X0, 0xFFFFFFFFFCF15000
	0x03C17008 ADD X0, X0, 0x76C
	0x03C1700C BL 0x1C16CB8
	0x03C17010 MOV X1, X0
	0x03C17014 STR X0, [X20 + 0xAC8]
	0x03C17018 MOV X0, X19
	0x03C1701C LDP X20, X19, [X31 + 0x10]
	0x03C17020 LDR X30, [X31], #0x20
	0x03C17024 BR X1
	0x03C17028 STP X30, X21, [X31 - 0x20]!
	0x03C1702C STP X20, X19, [X31 + 0x10]
	0x03C17030 ADRP X20, 0x7CD000
	0x03C17034 ADRP X21, 0x4DC000
	0x03C17038 LDRB W8, [X20 + 0xAD0]
	0x03C1703C LDR X21, [X21 + 0x598]
	0x03C17040 MOV X19, X0
	0x03C17044 TBNZ X8, 0x0, 0x3C1705C
	0x03C17048 ADRP X0, 0x4DC000
	0x03C1704C LDR X0, [X0 + 0x598]
	0x03C17050 BL 0x1C16CF4
	0x03C17054 MOVZ W8, 0x1
	0x03C17058 STRB W8, [X20 + 0xAD0]
	0x03C1705C LDR X0, [X21]
	0x03C17060 LDR W8, [X0 + 0xE0]
	0x03C17064 CBNZ W8, 0x3C1706C
	0x03C17068 BL 0x1C16DFC
	0x03C1706C MOV X0, X19
	0x03C17070 MOV X1, X31
	0x03C17074 BL 0x3C33594

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move W1, W31
	007 Call GraphicsBuffer.Dispose, X0, X1
	008 Move X0, X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X1, X31
	012 Move X30, [X31+32]
	013 Move X21, [X31+40]
	014 Call Object.Finalize, X0
	015 Return 
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X21, X0
	018 Move X0, X21
	019 Call 0x3EB2AD0
	020 Move X20, [X0]
	021 Call 0x3EB2AE0
	022 Move X0, X19
	023 Move X1, X31
	024 Call Object.Finalize, X0
	025 Compare X20, 0
	026 JumpIfNotEqual {33}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 
	032 Move X20, X31
	033 Move X0, X20
	034 Call 0x1C17F18
	035 Move X21, X0
	036 Move X0, X19
	037 Move X1, X31
	038 Call Object.Finalize, X0
	039 Compare X20, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X21
	042 Call 0x1D2D690
	043 Move X0, X20
	044 Call 0x1C17F18
	045 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x03C17130 LDP X20, X19, [X31 + 0x20]
	0x03C17134 LDP X22, X21, [X31 + 0x10]
	0x03C17138 LDR X30, [X31], #0x30
	0x03C1713C BR X3
	0x03C17140 STP X30, X27, [X31 - 0x50]!
	0x03C17144 STP X26, X25, [X31 + 0x10]
	0x03C17148 STP X24, X23, [X31 + 0x20]
	0x03C1714C STP X22, X21, [X31 + 0x30]
	0x03C17150 STP X20, X19, [X31 + 0x40]
	0x03C17154 ADRP X27, 0x7CD000
	0x03C17158 LDR X8, [X27 + 0xAE8]
	0x03C1715C MOV W19, W7
	0x03C17160 MOV W20, W6
	0x03C17164 MOV W21, W5
	0x03C17168 MOV W22, W4
	0x03C1716C MOV W23, W3
	0x03C17170 MOV X24, X2
	0x03C17174 MOV W25, W1
	0x03C17178 MOV X26, X0
	0x03C1717C CBNZ X8, 0x3C17194
	0x03C17180 ADRP X0, 0xFFFFFFFFFCEFF000
	0x03C17184 ADD X0, X0, 0x8EA
	0x03C17188 BL 0x1C16CB8
	0x03C1718C MOV X8, X0
	0x03C17190 STR X0, [X27 + 0xAE8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CE000
	006 Move X20, 0x4E4000
	007 Move W8, [X21+2456]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4E4000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2456], W8
	019 Move W1, 1
	020 Move X0, X19
	021 Call GraphicsBuffer.Dispose, X0, X1
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call GC.SuppressFinalize, X0
	034 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03C17078 ADRP X20, 0x7CD000
	0x03C1707C LDR X1, [X20 + 0xAC8]
	0x03C17080 CBNZ X1, 0x3C17098
	0x03C17084 ADRP X0, 0xFFFFFFFFFCF15000
	0x03C17088 ADD X0, X0, 0x76C
	0x03C1708C BL 0x1C16CB8
	0x03C17090 MOV X1, X0
	0x03C17094 STR X0, [X20 + 0xAC8]
	0x03C17098 MOV X0, X19
	0x03C1709C LDP X20, X19, [X31 + 0x10]
	0x03C170A0 LDP X30, X21, [X31], #0x20
	0x03C170A4 BR X1
	0x03C170A8 STP X30, X21, [X31 - 0x20]!
	0x03C170AC STP X20, X19, [X31 + 0x10]
	0x03C170B0 ADRP X21, 0x7CD000
	0x03C170B4 LDR X2, [X21 + 0xAD8]
	0x03C170B8 MOV W19, W1
	0x03C170BC MOV X20, X0
	0x03C170C0 CBNZ X2, 0x3C170D8
	0x03C170C4 ADRP X0, 0xFFFFFFFFFCEF8000
	0x03C170C8 ADD X0, X0, 0x1C0
	0x03C170CC BL 0x1C16CB8
	0x03C170D0 MOV X2, X0
	0x03C170D4 STR X0, [X21 + 0xAD8]
	0x03C170D8 MOV X0, X20
	0x03C170DC MOV W1, W19
	0x03C170E0 LDP X20, X19, [X31 + 0x10]
	0x03C170E4 LDP X30, X21, [X31], #0x20
	0x03C170E8 BR X2
	0x03C170EC STR X30, [X31 - 0x30]!
	0x03C170F0 STP X22, X21, [X31 + 0x10]
	0x03C170F4 STP X20, X19, [X31 + 0x20]
	0x03C170F8 ADRP X22, 0x7CD000
	0x03C170FC LDR X3, [X22 + 0xAE0]
	0x03C17100 MOV X19, X2
	0x03C17104 MOV W20, W1
	0x03C17108 MOV X21, X0
	0x03C1710C CBNZ X3, 0x3C17124
	0x03C17110 ADRP X0, 0xFFFFFFFFFCF0B000
	0x03C17114 ADD X0, X0, 0xEC5
	0x03C17118 BL 0x1C16CB8
	0x03C1711C MOV X3, X0
	0x03C17120 STR X0, [X22 + 0xAE0]
	0x03C17124 MOV X0, X21
	0x03C17128 MOV W1, W20
	0x03C1712C MOV X2, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CE000
	006 Move W8, [X21+2457]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x4DD000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x548000
	017 Move X0, [X0+3592]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2457], W8
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {36}
	025 Move X20, 0x7CE000
	026 Move X8, [X20+2472]
	027 Compare X8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, -51363840
	030 Add X0, X0, 2701
	031 Call 0x1C17CB8
	032 Move X8, X0
	033 Move [X20+2472], X0
	034 Move X0, X19
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move X0, [X19+16]
	037 Move X1, X31
	038 Move X2, X31
	039 Call IntPtr.op_Inequality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {55}
	044 Move X8, 0x4DD000
	045 Move X8, [X8+2600]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X8, 0x548000
	052 Move X8, [X8+3592]
	053 Move X0, [X8]
	054 Call Debug.LogWarning, X0
	055 Move [X19+16], X31
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 

Method: System.Boolean RequiresCompute(UnityEngine.GraphicsBuffer/Target target)

Disassembly:
	0x03C171D0 STP X20, X19, [X31 + 0x10]
	0x03C171D4 ADRP X21, 0x7CD000
	0x03C171D8 LDR X2, [X21 + 0xAF0]

ISIL:
	001 And W31, W0, 496
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean IsVertexIndexOrCopyOnly(UnityEngine.GraphicsBuffer/Target target)

Disassembly:
	0x03C171DC MOV W19, W1
	0x03C171E0 MOV X20, X0
	0x03C171E4 CBNZ X2, 0x3C171FC

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.IntPtr InitBuffer(UnityEngine.GraphicsBuffer/Target target, UnityEngine.GraphicsBuffer/UsageFlags usageFlags, System.Int32 count, System.Int32 stride)

Disassembly:
	0x03C171E8 ADRP X0, 0xFFFFFFFFFCEF2000
	0x03C171EC ADD X0, X0, 0x57
	0x03C171F0 BL 0x1C16CB8
	0x03C171F4 MOV X2, X0
	0x03C171F8 STR X0, [X21 + 0xAF0]
	0x03C171FC MOV X0, X20
	0x03C17200 MOV W1, W19
	0x03C17204 LDP X20, X19, [X31 + 0x10]
	0x03C17208 LDP X30, X21, [X31], #0x20
	0x03C1720C BR X2
	0x03C17210 STR X30, [X31 - 0x30]!
	0x03C17214 STP X22, X21, [X31 + 0x10]
	0x03C17218 STP X20, X19, [X31 + 0x20]
	0x03C1721C ADRP X22, 0x7CD000
	0x03C17220 LDR X3, [X22 + 0xAF8]
	0x03C17224 MOV W20, W2
	0x03C17228 MOV W19, W1
	0x03C1722C MOV X21, X0
	0x03C17230 CBNZ X3, 0x3C17248
	0x03C17234 ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C17238 ADD X0, X0, 0xECE
	0x03C1723C BL 0x1C16CB8
	0x03C17240 MOV X3, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7CE000
	008 Move X4, [X23+2464]
	009 Move W19, W3
	010 Move W20, W2
	011 Move W21, W1
	012 Move W22, W0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51449856
	016 Add X0, X0, 319
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+2464], X0
	020 Move W0, W22
	021 Move W1, W21
	022 Move W2, W20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void DestroyBuffer(UnityEngine.GraphicsBuffer buf)

Disassembly:
	0x03C17194 MOV X0, X26
	0x03C17198 MOV W1, W25
	0x03C1719C MOV X2, X24
	0x03C171A0 MOV W3, W23
	0x03C171A4 MOV W4, W22
	0x03C171A8 MOV W5, W21
	0x03C171AC MOV W6, W20
	0x03C171B0 MOV W7, W19
	0x03C171B4 LDP X20, X19, [X31 + 0x40]
	0x03C171B8 LDP X22, X21, [X31 + 0x30]
	0x03C171BC LDP X24, X23, [X31 + 0x20]
	0x03C171C0 LDP X26, X25, [X31 + 0x10]
	0x03C171C4 LDP X30, X27, [X31], #0x50
	0x03C171C8 BR X8
	0x03C171CC STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7CE000
	005 Move X1, [X20+2472]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51363840
	010 Add X0, X0, 2701
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+2472], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void .ctor(UnityEngine.GraphicsBuffer/Target target, System.Int32 count, System.Int32 stride)

Disassembly:
	0x03C17244 STR X0, [X22 + 0xAF8]
	0x03C17248 AND W2, W20, 0x1
	0x03C1724C MOV X0, X21
	0x03C17250 MOV W1, W19
	0x03C17254 LDP X20, X19, [X31 + 0x20]
	0x03C17258 LDP X22, X21, [X31 + 0x10]
	0x03C1725C LDR X30, [X31], #0x30
	0x03C17260 BR X3
	0x03C17264 STR X30, [X31 - 0x30]!
	0x03C17268 STP X22, X21, [X31 + 0x10]
	0x03C1726C STP X20, X19, [X31 + 0x20]
	0x03C17270 ADRP X22, 0x7CD000
	0x03C17274 LDR X3, [X22 + 0xB00]
	0x03C17278 MOV W20, W2
	0x03C1727C MOV W19, W1
	0x03C17280 MOV X21, X0
	0x03C17284 CBNZ X3, 0x3C1729C
	0x03C17288 ADRP X0, 0xFFFFFFFFFCF05000
	0x03C1728C ADD X0, X0, 0xFD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W21, W1
	007 Move X1, X31
	008 Move W19, W3
	009 Move W20, W2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, X22
	014 Move W1, W21
	015 Move W3, W20
	016 Move W4, W19
	017 Move X20, [X31+32]
	018 Move X19, [X31+40]
	019 Move X22, [X31+16]
	020 Move X21, [X31+24]
	021 NotImplemented "Instruction CSET not yet implemented."
	022 Move X30, [X31+48]

Method: System.Void InternalInitialization(UnityEngine.GraphicsBuffer/Target target, UnityEngine.GraphicsBuffer/UsageFlags usageFlags, System.Int32 count, System.Int32 stride)

Disassembly:
	0x03C17290 BL 0x1C16CB8
	0x03C17294 MOV X3, X0
	0x03C17298 STR X0, [X22 + 0xB00]
	0x03C1729C AND W2, W20, 0x1
	0x03C172A0 MOV X0, X21
	0x03C172A4 MOV W1, W19
	0x03C172A8 LDP X20, X19, [X31 + 0x20]
	0x03C172AC LDP X22, X21, [X31 + 0x10]
	0x03C172B0 LDR X30, [X31], #0x30
	0x03C172B4 BR X3
	0x03C172B8 STR X30, [X31 - 0x60]!
	0x03C172BC STP X28, X27, [X31 + 0x10]
	0x03C172C0 STP X26, X25, [X31 + 0x20]
	0x03C172C4 STP X24, X23, [X31 + 0x30]
	0x03C172C8 STP X22, X21, [X31 + 0x40]
	0x03C172CC STP X20, X19, [X31 + 0x50]
	0x03C172D0 ADRP X28, 0x7CD000
	0x03C172D4 LDR X8, [X28 + 0xB08]
	0x03C172D8 LDR W27, [X31 + 0x60]
	0x03C172DC MOV W23, W7
	0x03C172E0 MOV W19, W6
	0x03C172E4 MOV W20, W5
	0x03C172E8 MOV X21, X4
	0x03C172EC MOV W22, W3
	0x03C172F0 MOV W24, W2
	0x03C172F4 MOV W25, W1
	0x03C172F8 MOV X26, X0
	0x03C172FC CBNZ X8, 0x3C17314
	0x03C17300 ADRP X0, 0xFFFFFFFFFCF0B000
	0x03C17304 ADD X0, X0, 0xF36
	0x03C17308 BL 0x1C16CB8
	0x03C1730C MOV X8, X0
	0x03C17310 STR X0, [X28 + 0xB08]
	0x03C17314 AND W7, W23, 0x1
	0x03C17318 STR W27, [X31 + 0x60]
	0x03C1731C MOV X0, X26
	0x03C17320 MOV W1, W25
	0x03C17324 MOV W2, W24
	0x03C17328 MOV W3, W22
	0x03C1732C MOV X4, X21
	0x03C17330 MOV W5, W20
	0x03C17334 MOV W6, W19
	0x03C17338 LDP X20, X19, [X31 + 0x50]
	0x03C1733C LDP X22, X21, [X31 + 0x40]
	0x03C17340 LDP X24, X23, [X31 + 0x30]
	0x03C17344 LDP X26, X25, [X31 + 0x20]
	0x03C17348 LDP X28, X27, [X31 + 0x10]
	0x03C1734C LDR X30, [X31], #0x60
	0x03C17350 BR X8
	0x03C17354 STR X30, [X31 - 0x60]!
	0x03C17358 STP X28, X27, [X31 + 0x10]
	0x03C1735C STP X26, X25, [X31 + 0x20]
	0x03C17360 STP X24, X23, [X31 + 0x30]
	0x03C17364 STP X22, X21, [X31 + 0x40]
	0x03C17368 STP X20, X19, [X31 + 0x50]
	0x03C1736C ADRP X28, 0x7CD000
	0x03C17370 LDR X8, [X28 + 0xB10]
	0x03C17374 LDR W27, [X31 + 0x60]
	0x03C17378 MOV W23, W7
	0x03C1737C MOV W19, W6
	0x03C17380 MOV W20, W5
	0x03C17384 MOV X21, X4
	0x03C17388 MOV W22, W3
	0x03C1738C MOV W24, W2
	0x03C17390 MOV W25, W1
	0x03C17394 MOV X26, X0
	0x03C17398 CBNZ X8, 0x3C173B0
	0x03C1739C ADRP X0, 0xFFFFFFFFFCEF2000
	0x03C173A0 ADD X0, X0, 0x89
	0x03C173A4 BL 0x1C16CB8
	0x03C173A8 MOV X8, X0
	0x03C173AC STR X0, [X28 + 0xB10]
	0x03C173B0 AND W7, W23, 0x1
	0x03C173B4 STR W27, [X31 + 0x60]
	0x03C173B8 MOV X0, X26
	0x03C173BC MOV W1, W25
	0x03C173C0 MOV W2, W24
	0x03C173C4 MOV W3, W22
	0x03C173C8 MOV X4, X21
	0x03C173CC MOV W5, W20
	0x03C173D0 MOV W6, W19
	0x03C173D4 LDP X20, X19, [X31 + 0x50]
	0x03C173D8 LDP X22, X21, [X31 + 0x40]
	0x03C173DC LDP X24, X23, [X31 + 0x30]
	0x03C173E0 LDP X26, X25, [X31 + 0x20]
	0x03C173E4 LDP X28, X27, [X31 + 0x10]
	0x03C173E8 LDR X30, [X31], #0x60
	0x03C173EC BR X8
	0x03C173F0 STP X30, X21, [X31 - 0x20]!
	0x03C173F4 STP X20, X19, [X31 + 0x10]
	0x03C173F8 ADRP X21, 0x7CD000
	0x03C173FC LDR X2, [X21 + 0xB18]
	0x03C17400 MOV W19, W1
	0x03C17404 MOV X20, X0
	0x03C17408 CBNZ X2, 0x3C17420
	0x03C1740C ADRP X0, 0xFFFFFFFFFCEF9000
	0x03C17410 ADD X0, X0, 0xFF7
	0x03C17414 BL 0x1C16CB8
	0x03C17418 MOV X2, X0
	0x03C1741C STR X0, [X21 + 0xB18]
	0x03C17420 MOV X0, X20
	0x03C17424 MOV W1, W19
	0x03C17428 LDP X20, X19, [X31 + 0x10]
	0x03C1742C LDP X30, X21, [X31], #0x20
	0x03C17430 BR X2
	0x03C17434 STP X30, X21, [X31 - 0x20]!
	0x03C17438 STP X20, X19, [X31 + 0x10]
	0x03C1743C ADRP X21, 0x7CD000
	0x03C17440 LDR X2, [X21 + 0xB20]
	0x03C17444 MOV W19, W1
	0x03C17448 MOV X20, X0
	0x03C1744C CBNZ X2, 0x3C17464
	0x03C17450 ADRP X0, 0xFFFFFFFFFCF09000
	0x03C17454 ADD X0, X0, 0x8FC
	0x03C17458 BL 0x1C16CB8
	0x03C1745C MOV X2, X0
	0x03C17460 STR X0, [X21 + 0xB20]
	0x03C17464 MOV X0, X20
	0x03C17468 MOV W1, W19
	0x03C1746C LDP X20, X19, [X31 + 0x10]
	0x03C17470 LDP X30, X21, [X31], #0x20
	0x03C17474 BR X2
	0x03C17478 STR X30, [X31 - 0x60]!
	0x03C1747C STP X28, X27, [X31 + 0x10]
	0x03C17480 STP X26, X25, [X31 + 0x20]
	0x03C17484 STP X24, X23, [X31 + 0x30]
	0x03C17488 STP X22, X21, [X31 + 0x40]
	0x03C1748C STP X20, X19, [X31 + 0x50]
	0x03C17490 ADRP X28, 0x7CD000
	0x03C17494 LDR X8, [X28 + 0xB28]
	0x03C17498 LDR W27, [X31 + 0x60]
	0x03C1749C MOV W19, W7
	0x03C174A0 MOV W20, W6
	0x03C174A4 MOV W21, W5
	0x03C174A8 MOV X22, X4
	0x03C174AC MOV W23, W3
	0x03C174B0 MOV W24, W2
	0x03C174B4 MOV W25, W1
	0x03C174B8 MOV X26, X0
	0x03C174BC CBNZ X8, 0x3C174D4
	0x03C174C0 ADRP X0, 0xFFFFFFFFFCEF0000
	0x03C174C4 ADD X0, X0, 0x64
	0x03C174C8 BL 0x1C16CB8
	0x03C174CC MOV X8, X0
	0x03C174D0 STR X0, [X28 + 0xB28]
	0x03C174D4 STR W27, [X31 + 0x60]
	0x03C174D8 MOV X0, X26
	0x03C174DC MOV W1, W25
	0x03C174E0 MOV W2, W24
	0x03C174E4 MOV W3, W23
	0x03C174E8 MOV X4, X22
	0x03C174EC MOV W5, W21
	0x03C174F0 MOV W6, W20
	0x03C174F4 MOV W7, W19
	0x03C174F8 LDP X20, X19, [X31 + 0x50]
	0x03C174FC LDP X22, X21, [X31 + 0x40]
	0x03C17500 LDP X24, X23, [X31 + 0x30]
	0x03C17504 LDP X26, X25, [X31 + 0x20]
	0x03C17508 LDP X28, X27, [X31 + 0x10]
	0x03C1750C LDR X30, [X31], #0x60
	0x03C17510 BR X8
	0x03C17514 STP X30, X23, [X31 - 0x30]!
	0x03C17518 STP X22, X21, [X31 + 0x10]
	0x03C1751C STP X20, X19, [X31 + 0x20]
	0x03C17520 ADRP X23, 0x7CD000
	0x03C17524 LDR X4, [X23 + 0xB30]
	0x03C17528 MOV W19, W3
	0x03C1752C MOV W20, W2
	0x03C17530 MOV W21, W1
	0x03C17534 MOV X22, X0
	0x03C17538 CBNZ X4, 0x3C17550
	0x03C1753C ADRP X0, 0xFFFFFFFFFCEE0000
	0x03C17540 ADD X0, X0, 0x59
	0x03C17544 BL 0x1C16CB8
	0x03C17548 MOV X4, X0
	0x03C1754C STR X0, [X23 + 0xB30]
	0x03C17550 MOV X0, X22
	0x03C17554 MOV W1, W21
	0x03C17558 MOV W2, W20
	0x03C1755C MOV W3, W19
	0x03C17560 LDP X20, X19, [X31 + 0x20]
	0x03C17564 LDP X22, X21, [X31 + 0x10]
	0x03C17568 LDP X30, X23, [X31], #0x30
	0x03C1756C BR X4
	0x03C17570 STR X30, [X31 - 0x40]!
	0x03C17574 STP X24, X23, [X31 + 0x10]
	0x03C17578 STP X22, X21, [X31 + 0x20]
	0x03C1757C STP X20, X19, [X31 + 0x30]
	0x03C17580 ADRP X24, 0x7CD000
	0x03C17584 LDR X5, [X24 + 0xB38]
	0x03C17588 MOV X19, X4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move W21, W4
	010 Move W22, W3
	011 Move W23, W2
	012 Move W19, W1
	013 Move X20, X0
	014 And W31, W1, 496
	015 Move [X31+44], W4
	016 Move X0, X31
	017 Call SystemInfo.get_supportsComputeShaders
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {145}
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move TEMP, X19
	025 And TEMP, TEMP, 2
	026 Compare TEMP, 2
	027 JumpIfNotEqual {30}
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 And W8, W21, 3
	032 Compare W8, 0
	033 JumpIfNotEqual {88}
	034 Move X0, X31
	035 NotImplemented "Instruction UMADDL not yet implemented."
	036 Call SystemInfo.get_maxGraphicsBufferSize
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move TEMP, X19
	039 And TEMP, TEMP, 8
	040 Compare TEMP, 8
	041 JumpIfNotEqual {46}
	042 Move TEMP, X23
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {127}
	046 Move X24, 0x7CE000
	047 Move X8, [X24+2464]
	048 Compare X8, 0
	049 JumpIfNotEqual {55}
	050 Move X0, -51449856
	051 Add X0, X0, 319
	052 Call 0x1C17CB8
	053 Move X8, X0
	054 Move [X24+2464], X0
	055 Move W0, W19
	056 Move W1, W23
	057 Move W2, W22
	058 Move W3, W21
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move [X20+16], X0
	061 Move X20, [X31+80]
	062 Move X19, [X31+88]
	063 Move X22, [X31+64]
	064 Move X21, [X31+72]
	065 Move X24, [X31+48]
	066 Move X23, [X31+56]
	067 Move X30, [X31+32]
	068 Add X31, X31, 96
	069 Return 
	070 Move X0, 0x4E5000
	071 Move X0, [X0+1400]
	072 Call 0x1C17D08
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X0, 0x548000
	076 Move X0, [X0+3600]
	077 Call 0x1C17D08
	078 Move X20, X0
	079 Move X0, 0x505000
	080 Move X0, [X0+1608]
	081 Move X0, 0x4E5000
	082 Move X0, [X0+1400]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0x548000
	087 Move X0, [X0+3608]
	088 Move X0, 0x4E5000
	089 Move X0, [X0+1400]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X19, X0
	093 Move X0, 0x548000
	094 Move X0, [X0+3616]
	095 Call 0x1C17D08
	096 Move X20, X0
	097 Move X0, 0x506000
	098 Move X0, [X0+336]
	099 Call 0x1C17D08
	100 Move X2, X0
	101 Move X0, X19
	102 Move X1, X20
	103 Move X3, X31
	104 Call ArgumentException..ctor, X0, X1, X2
	105 Move [X31+8], X24
	106 Move X19, 0x4DF000
	107 Move X19, [X19+2656]
	108 Move X21, X0
	109 Move X0, X19
	110 Call 0x1C17D08
	111 Add X1, X31, 8
	112 Call 0x1C17E04
	113 Move X20, X0
	114 Move X0, X19
	115 Move [X31], X21
	116 Call 0x1C17D08
	117 Add X1, X31, 0
	118 Call 0x1C17E04
	119 Move X19, X0
	120 Move X0, 0x548000
	121 Move X0, [X0+3624]
	122 Call 0x1C17D08
	123 Move X1, X20
	124 Move X2, X19
	125 Move X3, X31
	126 Call String.Format, X0, X1, X2
	127 Move X0, 0x4E5000
	128 Move X0, [X0+1400]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X19, X0
	132 Move X0, 0x548000
	133 Move X0, [X0+3632]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X19
	137 Move X2, X31
	138 Call ArgumentException..ctor, X0, X1
	139 Move X0, 0x548000
	140 Move X0, [X0+3640]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X19
	144 Call 0x1C17DEC
	145 Move X0, 0x548000
	146 Move X0, [X0+3648]
	147 Call 0x1C17D08
	148 Move TEMP, 0
	149 Not TEMP
	150 Move X8, TEMP
	151 Move [X31+8], X0
	152 Move [X31+16], X8
	153 Add X0, X31, 8
	154 Move X1, X31
	155 Move [X31+24], W19
	156 Call Enum.ToString, X0
	157 Move X19, X0
	158 Move X0, 0x548000
	159 Move X0, [X0+3656]
	160 Call 0x1C17D08
	161 Move X1, X19
	162 Move X2, X31
	163 Call String.Concat, X0, X1
	164 Move X19, X0
	165 Move X0, 0x4E5000
	166 Move X0, [X0+1400]
	167 Call 0x1C17D08
	168 Call 0x1C17F10
	169 Move X1, X19
	170 Move X2, X31
	171 Move X20, X0
	172 Call ArgumentException..ctor, X0, X1
	173 Move X0, 0x548000
	174 Move X0, [X0+3640]
	175 Call 0x1C17D08
	176 Move X1, X0
	177 Move X0, X20
	178 Call 0x1C17DEC
	179 Add X0, X31, 44
	180 Move X1, X31
	181 Call Int32.ToString, X0
	182 Move X19, X0
	183 Move X0, 0x548000
	184 Move X0, [X0+3664]
	185 Call 0x1C17D08
	186 Move X1, X19
	187 Move X2, X31
	188 Call String.Concat, X0, X1
	189 Move X19, X0
	190 Move X0, 0x4E5000
	191 Move X0, [X0+1400]
	192 Call 0x1C17D08
	193 Call 0x1C17F10
	194 Move X20, X0
	195 Move X0, 0x506000
	196 Move X0, [X0+336]
	197 Call 0x1C17D08
	198 Move X2, X0
	199 Move X0, X20
	200 Move X1, X19
	201 Move X3, X31
	202 Call ArgumentException..ctor, X0, X1, X2

Method: System.Void Release()

Disassembly:
	0x03C1758C MOV W20, W3

ISIL:
	001 Call GraphicsBuffer.Dispose, X0
	002 Return 

Method: System.Void SetData(Unity.Collections.NativeArray`1<T> data)

Disassembly:
	0x021E8B28 ADD X31, X29, 0x0
	0x021E8B2C LDP X20, X19, [X31 + 0x40]
	0x021E8B30 LDP X22, X21, [X31 + 0x30]
	0x021E8B34 LDP X24, X23, [X31 + 0x20]
	0x021E8B38 LDP X26, X25, [X31 + 0x10]
	0x021E8B3C LDP X29, X30, [X31], #0x50
	0x021E8B40 RET
	0x021E8B44 BL 0x3EB1B20
	0x021E8B48 STR X30, [X31 - 0x50]!
	0x021E8B4C STP X26, X25, [X31 + 0x10]
	0x021E8B50 STP X24, X23, [X31 + 0x20]
	0x021E8B54 STP X22, X21, [X31 + 0x30]
	0x021E8B58 STP X20, X19, [X31 + 0x40]
	0x021E8B5C STR X1, [X31 + 0x8]
	0x021E8B60 LDR X8, [X4 + 0x38]
	0x021E8B64 MOV X20, X4
	0x021E8B68 MOV X19, X3
	0x021E8B6C MOV X21, X2
	0x021E8B70 MOV X22, X0
	0x021E8B74 CBNZ X8, 0x21E8B94
	0x021E8B78 ADRP X0, 0x1F33000
	0x021E8B7C LDR X0, [X0 + 0xB10]
	0x021E8B80 BL 0x1C16CF4
	0x021E8B84 LDR X8, [X20 + 0x38]
	0x021E8B88 CBNZ X8, 0x21E8B94
	0x021E8B8C MOV X0, X20
	0x021E8B90 BL 0x1C5C6E0
	0x021E8B94 MOVZ W23, 0xCA77
	0x021E8B98 MOVZ W25, 0x4428
	0x021E8B9C MOVK W23, 0x85EB0000
	0x021E8BA0 MOVK W25, 0x24230000
	0x021E8BA4 CBZ X22, 0x21E8BBC
	0x021E8BA8 LDR X8, [X22]
	0x021E8BAC MOV X0, X22
	0x021E8BB0 LDP X9, X1, [X8 + 0x158]
	0x021E8BB4 BLR X9
	0x021E8BB8 MADD W25, W0, W23, W25
	0x021E8BBC LDR X8, [X20 + 0x38]
	0x021E8BC0 ADD X0, X31, 0x8
	0x021E8BC4 LDR X1, [X8 + 0x18]
	0x021E8BC8 BL 0x3C32B00
	0x021E8BCC MOV W20, W0
	0x021E8BD0 CBZ X21, 0x21E8BEC
	0x021E8BD4 LDR X8, [X21]
	0x021E8BD8 MOV X0, X21
	0x021E8BDC LDP X9, X1, [X8 + 0x158]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31], X1
	009 Move X8, [X3+56]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X20
	017 Call 0x1C5D6E0
	018 Move X8, [X20+56]
	019 Move X2, [X8+8]
	020 Move X0, X22
	021 Move X1, X21
	022 Move X8, [X2]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X1, X31
	025 Call IntPtr.op_Explicit, X0
	026 Move X8, [X20+56]
	027 Move X21, X0
	028 Add X0, X31, 0
	029 Move X1, [X8+16]
	030 Move X8, [X1]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X20+56]
	033 Move W20, W0
	034 Move X8, [X8+32]
	035 Move X9, [X8]
	036 Move X0, X8
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move W5, W0
	039 Move X0, X19
	040 Move X1, X21
	041 Move W2, W31
	042 Move W3, W31
	043 Move W4, W20
	044 Move X6, X31
	045 Call GraphicsBuffer.InternalSetNativeData, X0, X1, X2, X3, X4, X5
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X30, [X31+16]
	051 Add X31, X31, 64
	052 Return 

Method: System.Void SetData(Unity.Collections.NativeArray`1<T> data, System.Int32 nativeBufferStartIndex, System.Int32 graphicsBufferStartIndex, System.Int32 count)

Disassembly:
	0x021E8C54 BL 0x1C16DFC
	0x021E8C58 LDR X0, [X19]
	0x021E8C5C LDR X8, [X0 + 0xB8]
	0x021E8C60 ADRP X26, 0x21F1000
	0x021E8C64 LDRB W9, [X26 + 0x836]
	0x021E8C68 LDR W24, [X8]
	0x021E8C6C CBNZ W9, 0x21E8C84
	0x021E8C70 MOV X0, X19
	0x021E8C74 BL 0x1C16CF4
	0x021E8C78 LDR X0, [X19]
	0x021E8C7C MOVZ W8, 0x1
	0x021E8C80 STRB W8, [X26 + 0x836]
	0x021E8C84 LDR W8, [X0 + 0xE0]
	0x021E8C88 ADD W25, W25, W24
	0x021E8C8C CBZ W8, 0x21E8C98
	0x021E8C90 EXTR W25, W25, W25, 0x13
	0x021E8C94 B 0x21E8CBC
	0x021E8C98 BL 0x1C16DFC
	0x021E8C9C LDRB W8, [X26 + 0x836]
	0x021E8CA0 EXTR W25, W25, W25, 0x13
	0x021E8CA4 CBNZ W8, 0x21E8CBC
	0x021E8CA8 ADRP X0, 0x1F33000
	0x021E8CAC LDR X0, [X0 + 0xB10]
	0x021E8CB0 BL 0x1C16CF4
	0x021E8CB4 MOVZ W8, 0x1
	0x021E8CB8 STRB W8, [X26 + 0x836]
	0x021E8CBC LDR X0, [X19]
	0x021E8CC0 MADD W9, W20, W23, W23
	0x021E8CC4 ADD W20, W9, W24
	0x021E8CC8 LDR W8, [X0 + 0xE0]
	0x021E8CCC CBZ W8, 0x21E8CD8
	0x021E8CD0 EXTR W20, W20, W20, 0x13
	0x021E8CD4 B 0x21E8CFC
	0x021E8CD8 BL 0x1C16DFC
	0x021E8CDC LDRB W8, [X26 + 0x836]
	0x021E8CE0 EXTR W20, W20, W20, 0x13
	0x021E8CE4 CBNZ W8, 0x21E8CFC
	0x021E8CE8 ADRP X0, 0x1F33000
	0x021E8CEC LDR X0, [X0 + 0xB10]
	0x021E8CF0 BL 0x1C16CF4
	0x021E8CF4 MOVZ W8, 0x1
	0x021E8CF8 STRB W8, [X26 + 0x836]
	0x021E8CFC LDR X0, [X19]
	0x021E8D00 ADD W22, W24, W22
	0x021E8D04 LDR W8, [X0 + 0xE0]
	0x021E8D08 CBZ W8, 0x21E8D14
	0x021E8D0C EXTR W22, W22, W22, 0x13
	0x021E8D10 B 0x21E8D38
	0x021E8D14 BL 0x1C16DFC
	0x021E8D18 LDRB W8, [X26 + 0x836]
	0x021E8D1C EXTR W22, W22, W22, 0x13
	0x021E8D20 CBNZ W8, 0x21E8D38
	0x021E8D24 ADRP X0, 0x1F33000
	0x021E8D28 LDR X0, [X0 + 0xB10]
	0x021E8D2C BL 0x1C16CF4
	0x021E8D30 MOVZ W8, 0x1
	0x021E8D34 STRB W8, [X26 + 0x836]
	0x021E8D38 LDR X0, [X19]
	0x021E8D3C LDR W8, [X0 + 0xE0]
	0x021E8D40 CBNZ W8, 0x21E8D48
	0x021E8D44 BL 0x1C16DFC
	0x021E8D48 ADRP X26, 0x21F1000
	0x021E8D4C LDRB W8, [X26 + 0x837]
	0x021E8D50 CBNZ W8, 0x21E8D68
	0x021E8D54 ADRP X0, 0x1F33000
	0x021E8D58 LDR X0, [X0 + 0xB10]
	0x021E8D5C BL 0x1C16CF4
	0x021E8D60 MOVZ W8, 0x1
	0x021E8D64 STRB W8, [X26 + 0x837]
	0x021E8D68 LDR X0, [X19]
	0x021E8D6C ADD W19, W21, W24
	0x021E8D70 LDR W8, [X0 + 0xE0]
	0x021E8D74 CBNZ W8, 0x21E8D7C
	0x021E8D78 BL 0x1C16DFC
	0x021E8D7C MOVZ W9, 0x79B1
	0x021E8D80 MOVK W9, 0x9E370000
	0x021E8D84 ADRP X12, 0xFFFFFFFFFE902000
	0x021E8D88 EXTR W8, W19, W19, 0x13
	0x021E8D8C MUL W10, W22, W9
	0x021E8D90 LDR V0, [X12 + 0xFF]
	0x021E8D94 ADRP X12, 0xFFFFFFFFFE904000
	0x021E8D98 MUL W8, W8, W9

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X6+56]
	011 Move X19, X6
	012 Move W20, W5
	013 Move W21, W4
	014 Move W22, W3
	015 Move X24, X2
	016 Move X25, X1
	017 Move X23, X0
	018 Compare X8, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Or W8, W21, W22
	023 Or W8, W8, W20
	024 Move TEMP, X8
	025 And TEMP, TEMP, -2147483648
	026 Compare TEMP, -2147483648
	027 JumpIfEqual {55}
	028 Add W8, W20, W22
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X19+56]
	031 Move X0, X25
	032 Move X1, X24
	033 Move X2, [X8+24]
	034 Call NativeArrayUnsafeUtility.GetUnsafeReadOnlyPtr, X0
	035 Move X1, X31
	036 Call IntPtr.op_Explicit, X0
	037 Move X1, X0
	038 Move X0, X23
	039 Move W2, W22
	040 Move W3, W21
	041 Move W4, W20
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X22, [X31+48]
	045 Move X21, [X31+56]
	046 Move X24, [X31+32]
	047 Move X23, [X31+40]
	048 Move X30, [X31+16]
	049 Move X25, [X31+24]
	050 Move W5, 4
	051 Move X6, X31
	052 Add X31, X31, 80
	053 Call GraphicsBuffer.InternalSetNativeData, X0, X1, X2, X3, X4, X5
	054 Return 
	055 Move [X31+12], W22
	056 Move X22, 0x1F0C000
	057 Move X22, [X22+1880]
	058 Move X0, X22
	059 Call 0x1C17D08
	060 Add X1, X31, 12
	061 Call 0x1C17E04
	062 Move X23, X0
	063 Move X0, X22
	064 Move [X31+8], W21
	065 Call 0x1C17D08
	066 Add X1, X31, 8
	067 Call 0x1C17E04
	068 Move X21, X0
	069 Move X0, X22
	070 Move [X31+4], W20
	071 Call 0x1C17D08
	072 Add X1, X31, 4
	073 Call 0x1C17E04
	074 Move X20, X0
	075 Move X0, 0x1F34000
	076 Move X0, [X0+2760]
	077 Call 0x1C17D08
	078 Move X1, X23
	079 Move X2, X21
	080 Move X3, X20
	081 Move X4, X31
	082 Call String.Format, X0, X1, X2, X3
	083 Move X20, X0
	084 Move X0, 0x1F14000
	085 Move X0, [X0+1888]
	086 Call 0x1C17D08
	087 Call 0x1C17F10
	088 Move X1, X20
	089 Move X2, X31
	090 Move X21, X0
	091 Call ArgumentOutOfRangeException..ctor, X0, X1
	092 Move X0, X21
	093 Move X1, X19
	094 Call 0x1C17DEC

Method: System.Void InternalSetNativeData(System.IntPtr data, System.Int32 nativeBufferStartIndex, System.Int32 graphicsBufferStartIndex, System.Int32 count, System.Int32 elemSize)

Disassembly:
	0x03C17590 MOV W21, W2
	0x03C17594 MOV W22, W1
	0x03C17598 MOV X23, X0
	0x03C1759C CBNZ X5, 0x3C175B4
	0x03C175A0 ADRP X0, 0xFFFFFFFFFCEEB000
	0x03C175A4 ADD X0, X0, 0xF0E
	0x03C175A8 BL 0x1C16CB8
	0x03C175AC MOV X5, X0
	0x03C175B0 STR X0, [X24 + 0xB38]
	0x03C175B4 MOV X0, X23
	0x03C175B8 MOV W1, W22
	0x03C175BC MOV W2, W21
	0x03C175C0 MOV W3, W20
	0x03C175C4 MOV X4, X19
	0x03C175C8 LDP X20, X19, [X31 + 0x30]
	0x03C175CC LDP X22, X21, [X31 + 0x20]
	0x03C175D0 LDP X24, X23, [X31 + 0x10]
	0x03C175D4 LDR X30, [X31], #0x40
	0x03C175D8 BR X5
	0x03C175DC STR X30, [X31 - 0x20]!
	0x03C175E0 STP X20, X19, [X31 + 0x10]
	0x03C175E4 ADRP X20, 0x7CD000
	0x03C175E8 LDR X1, [X20 + 0xB40]
	0x03C175EC MOV X19, X0
	0x03C175F0 CBNZ X1, 0x3C17608
	0x03C175F4 ADRP X0, 0xFFFFFFFFFCEEE000
	0x03C175F8 ADD X0, X0, 0x245
	0x03C175FC BL 0x1C16CB8
	0x03C17600 MOV X1, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x7CE000
	010 Move X6, [X25+2480]
	011 Move W19, W5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move X23, X1
	016 Move X24, X0
	017 Compare X6, 0
	018 JumpIfNotEqual {24}
	019 Move X0, -51437568
	020 Add X0, X0, 4066
	021 Call 0x1C17CB8
	022 Move X6, X0
	023 Move [X25+2480], X0
	024 Move X0, X24
	025 Move X1, X23
	026 Move W2, W22
	027 Move W3, W21
	028 Move W4, W20
	029 Move W5, W19
	030 Move X20, [X31+48]
	031 Move X19, [X31+56]
	032 Move X22, [X31+32]
	033 Move X21, [X31+40]
	034 Move X24, [X31+16]
	035 Move X23, [X31+24]
	036 Move X30, [X31+64]
	037 Move X25, [X31+72]
	038 CallNoReturn X6

Method: System.Void set_name(System.String value)

Disassembly:
	0x03C17604 STR X0, [X20 + 0xB40]
	0x03C17608 MOV X0, X19
	0x03C1760C LDP X20, X19, [X31 + 0x10]
	0x03C17610 LDR X30, [X31], #0x20
	0x03C17614 BR X1
	0x03C17618 STR X30, [X31 - 0x20]!
	0x03C1761C STP X20, X19, [X31 + 0x10]
	0x03C17620 ADRP X20, 0x7CD000
	0x03C17624 LDR X1, [X20 + 0xB48]
	0x03C17628 MOV X19, X0
	0x03C1762C CBNZ X1, 0x3C17644
	0x03C17630 ADRP X0, 0xFFFFFFFFFCF11000
	0x03C17634 ADD X0, X0, 0x6F1
	0x03C17638 BL 0x1C16CB8
	0x03C1763C MOV X1, X0
	0x03C17640 STR X0, [X20 + 0xB48]
	0x03C17644 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CE000
	006 Move X2, [X21+2488]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51388416
	012 Add X0, X0, 2338
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2488], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetName(System.String name)

Disassembly:
	0x03C17648 LDP X20, X19, [X31 + 0x10]
	0x03C1764C LDR X30, [X31], #0x20
	0x03C17650 BR X1
	0x03C17654 STP X30, X21, [X31 - 0x20]!
	0x03C17658 STP X20, X19, [X31 + 0x10]
	0x03C1765C ADRP X21, 0x7CD000
	0x03C17660 LDR X2, [X21 + 0xB58]
	0x03C17664 MOV W19, W1
	0x03C17668 MOV X20, X0
	0x03C1766C CBNZ X2, 0x3C17684
	0x03C17670 ADRP X0, 0xFFFFFFFFFCEF4000
	0x03C17674 ADD X0, X0, 0x19A
	0x03C17678 BL 0x1C16CB8
	0x03C1767C MOV X2, X0
	0x03C17680 STR X0, [X21 + 0xB58]
	0x03C17684 MOV X0, X20
	0x03C17688 MOV W1, W19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7CE000
	006 Move X2, [X21+2488]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51388416
	012 Add X0, X0, 2338
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+2488], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

