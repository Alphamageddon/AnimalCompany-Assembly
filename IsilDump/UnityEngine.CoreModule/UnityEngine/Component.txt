Type: UnityEngine.Component

Method: UnityEngine.Transform get_transform()

Disassembly:
	0x03C33E90 BLR X9
	0x03C33E94 CBZ X0, 0x3C346F0
	0x03C33E98 LDR X8, [X0]
	0x03C33E9C LDP X9, X1, [X8 + 0x1D8]
	0x03C33EA0 BLR X9
	0x03C33EA4 MOV X1, X31
	0x03C33EA8 BL 0x32277A8
	0x03C33EAC TBNZ X0, 0x0, 0x3C33F5C
	0x03C33EB0 ADRP X19, 0x52C000
	0x03C33EB4 LDR X19, [X19 + 0x4A8]
	0x03C33EB8 LDR X8, [X19]
	0x03C33EBC LDR W9, [X8 + 0xE0]
	0x03C33EC0 CBNZ W9, 0x3C33ED0
	0x03C33EC4 MOV X0, X8
	0x03C33EC8 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B3000
	005 Move X1, [X20+728]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51412992
	010 Add X0, X0, 2364
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+728], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.GameObject get_gameObject()

Disassembly:
	0x03C33ECC LDR X8, [X19]
	0x03C33ED0 LDR X9, [X8 + 0xB8]
	0x03C33ED4 LDR X24, [X9 + 0x8]
	0x03C33ED8 CBNZ X24, 0x3C33F30
	0x03C33EDC LDR W9, [X8 + 0xE0]
	0x03C33EE0 CBNZ W9, 0x3C33EF0
	0x03C33EE4 MOV X0, X8
	0x03C33EE8 BL 0x1C16DFC
	0x03C33EEC LDR X8, [X19]
	0x03C33EF0 ADRP X9, 0x4E9000
	0x03C33EF4 LDR X8, [X8 + 0xB8]
	0x03C33EF8 LDR X9, [X9 + 0xD70]
	0x03C33EFC LDR X25, [X8]
	0x03C33F00 LDR X0, [X9]
	0x03C33F04 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B3000
	005 Move X1, [X20+736]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51503104
	010 Add X0, X0, 2620
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+736], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: UnityEngine.Component GetComponent(System.Type type)

Disassembly:
	0x03C33F08 ADRP X8, 0x52C000
	0x03C33F0C LDR X8, [X8 + 0x498]
	0x03C33F10 MOV X24, X0
	0x03C33F14 LDR X2, [X8]
	0x03C33F18 MOV X1, X25
	0x03C33F1C MOV X3, X31
	0x03C33F20 BL 0x2D30128
	0x03C33F24 LDR X8, [X19]
	0x03C33F28 LDR X8, [X8 + 0xB8]
	0x03C33F2C STR X24, [X8 + 0x8]
	0x03C33F30 ADRP X8, 0x4E9000
	0x03C33F34 LDR X8, [X8 + 0xD48]
	0x03C33F38 LDR X2, [X8]
	0x03C33F3C MOV X0, X22
	0x03C33F40 MOV X1, X24
	0x03C33F44 BL 0x21C9A84
	0x03C33F48 ADRP X8, 0x52C000
	0x03C33F4C LDR X8, [X8 + 0x450]
	0x03C33F50 LDR X1, [X8]
	0x03C33F54 BL 0x21D79F4
	0x03C33F58 MOV X22, X0
	0x03C33F5C ADRP X19, 0x4C0000
	0x03C33F60 LDR X19, [X19 + 0xEC0]
	0x03C33F64 LDR X0, [X19]
	0x03C33F68 BL 0x1C16F10
	0x03C33F6C ADRP X8, 0x52C000
	0x03C33F70 LDR X8, [X8 + 0x4A0]
	0x03C33F74 MOV X1, X23
	0x03C33F78 MOV X3, X31
	0x03C33F7C MOV X24, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B3000
	006 Move X8, [X21+736]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51503104
	012 Add X0, X0, 2620
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X21+736], X0
	016 Move X0, X20
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Compare X0, 0
	019 JumpIfEqual {37}
	020 Move X21, 0x7B3000
	021 Move X2, [X21+816]
	022 Move X20, X0
	023 Compare X2, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51613696
	026 Add X0, X0, 1152
	027 Call 0x1C17CB8
	028 Move X2, X0
	029 Move [X21+816], X0
	030 Move X0, X20
	031 Move X1, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 CallNoReturn X2
	037 Call 0x1C17F20

Method: System.Void GetComponentFastPath(System.Type type, System.IntPtr oneFurtherThanResultValue)

Disassembly:
	0x03C33FC4 ADRP X8, 0x4C1000
	0x03C33FC8 LDR X8, [X8 + 0x58]
	0x03C33FCC LDR X1, [X8]
	0x03C33FD0 BL 0x21BD4C4
	0x03C33FD4 LDR X8, [X31 + 0xE0]
	0x03C33FD8 CBZ X8, 0x3C34514
	0x03C33FDC LDR W8, [X8 + 0x18]
	0x03C33FE0 CMP W0, W8
	0x03C33FE4 B.EQ 0x3C3404C
	0x03C33FE8 LDR X8, [X20]
	0x03C33FEC MOV X0, X20
	0x03C33FF0 LDP X9, X1, [X8 + 0x1A8]
	0x03C33FF4 BLR X9
	0x03C33FF8 ADRP X8, 0x52C000
	0x03C33FFC LDR X8, [X8 + 0x4B8]
	0x03C34000 ADRP X9, 0x52B000
	0x03C34004 LDR X9, [X9 + 0x4C0]
	0x03C34008 MOV X1, X0
	0x03C3400C LDR X8, [X8]
	0x03C34010 MOV X3, X31
	0x03C34014 LDR X2, [X9]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B3000
	007 Move X3, [X22+744]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51589120
	014 Add X0, X0, 649
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+744], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: T GetComponent()

Disassembly:
	0x021A4894 MOV X0, X20
	0x021A4898 BL 0x1C5C6E0
	0x021A489C MOV X0, X21
	0x021A48A0 MOV X1, X31
	0x021A48A4 BL 0x3C32ECC
	0x021A48A8 CBZ X0, 0x21A48C8
	0x021A48AC LDR X8, [X20 + 0x38]
	0x021A48B0 AND W1, W19, 0x1
	0x021A48B4 LDP X20, X19, [X31 + 0x10]
	0x021A48B8 LDR X2, [X8]
	0x021A48BC LDR X3, [X2]
	0x021A48C0 LDP X30, X21, [X31], #0x20
	0x021A48C4 BR X3
	0x021A48C8 BL 0x1C16F20
	0x021A48CC STR X30, [X31 - 0x30]!
	0x021A48D0 STP X22, X21, [X31 + 0x10]
	0x021A48D4 STP X20, X19, [X31 + 0x20]
	0x021A48D8 LDR X8, [X3 + 0x38]
	0x021A48DC MOV X21, X3
	0x021A48E0 MOV X19, X2
	0x021A48E4 MOV W20, W1
	0x021A48E8 MOV X22, X0
	0x021A48EC CBNZ X8, 0x21A48F8
	0x021A48F0 MOV X0, X21
	0x021A48F4 BL 0x1C5C6E0
	0x021A48F8 MOV X0, X22
	0x021A48FC MOV X1, X31
	0x021A4900 BL 0x3C32ECC
	0x021A4904 CBZ X0, 0x21A4928
	0x021A4908 LDR X8, [X21 + 0x38]
	0x021A490C AND W1, W20, 0x1
	0x021A4910 MOV X2, X19
	0x021A4914 LDP X20, X19, [X31 + 0x20]
	0x021A4918 LDR X3, [X8 + 0x8]
	0x021A491C LDP X22, X21, [X31 + 0x10]
	0x021A4920 LDR X30, [X31], #0x30
	0x021A4924 B 0x21E64C8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X8, [X1+56]
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {19}
	009 Move X0, 0x1F50000
	010 Move X0, [X0+1728]
	011 Move X20, X1
	012 Call 0x1C17CF4
	013 Move X8, [X20+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X20
	017 Call 0x1C5D6E0
	018 Move X8, [X20+56]
	019 Move X9, 0x1F50000
	020 Move X9, [X9+1728]
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Move X20, [X8+8]
	024 Move X0, [X9]
	025 Move W9, [X0+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X20
	030 Move X1, X31
	031 Call Type.GetTypeFromHandle, X0
	032 Add X8, X31, 0
	033 Move X1, X0
	034 Add X2, X8, 8
	035 Move X0, X19
	036 Move X3, X31
	037 Call Component.GetComponentFastPath, X0, X1, X2
	038 Move X0, [X31]
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Add X31, X31, 48
	043 Return X0

Method: System.Boolean TryGetComponent(System.Type type, out UnityEngine.Component component)

Disassembly:
	0x03C34018 MOV X0, X8
	0x03C3401C BL 0x32274B8
	0x03C34020 ADRP X8, 0x4BF000
	0x03C34024 LDR X8, [X8 + 0xA28]
	0x03C34028 MOV X23, X0
	0x03C3402C LDR X8, [X8]
	0x03C34030 LDR W9, [X8 + 0xE0]
	0x03C34034 CBNZ W9, 0x3C34040
	0x03C34038 MOV X0, X8
	0x03C3403C BL 0x1C16DFC
	0x03C34040 MOV X0, X23
	0x03C34044 MOV X1, X31
	0x03C34048 BL 0x3C06A04
	0x03C3404C ADRP X29, 0x52B000
	0x03C34050 LDR X29, [X29 + 0x4A8]
	0x03C34054 LDR X0, [X29]
	0x03C34058 LDR W8, [X0 + 0xE0]
	0x03C3405C CBNZ W8, 0x3C34068
	0x03C34060 BL 0x1C16DFC
	0x03C34064 LDR X0, [X29]
	0x03C34068 LDR X8, [X0 + 0xB8]
	0x03C3406C LDR X23, [X8 + 0x10]
	0x03C34070 ADD X8, X31, 0xD0
	0x03C34074 CMP X23, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B2000
	007 Move X8, [X22+736]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51507200
	014 Add X0, X0, 2620
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+736], X0
	018 Move X0, X21
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Compare X0, 0
	021 JumpIfEqual {29}
	022 Move X1, X20
	023 Move X2, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x1C17F20

Method: System.Boolean TryGetComponent(out T component)

Disassembly:
	0x021A5990 SUBS X9, X9, 0x1
	0x021A5994 ADD X10, X10, 0x10
	0x021A5998 B.NE 0x21A5984
	0x021A599C MOV X0, X19
	0x021A59A0 MOV W2, W31
	0x021A59A4 BL 0x1C5C788
	0x021A59A8 B 0x21A59B8
	0x021A59AC LDRSW X9, [X10]
	0x021A59B0 ADD X8, X8, X9, 0x4, LSL
	0x021A59B4 ADD X0, X8, 0x138
	0x021A59B8 LDP X8, X1, [X0]
	0x021A59BC MOV X0, X19
	0x021A59C0 BLR X8
	0x021A59C4 CBNZ X20, 0x21A5A3C
	0x021A59C8 AND W0, W21, 0x1
	0x021A59CC LDP X20, X19, [X31 + 0x20]
	0x021A59D0 LDP X22, X21, [X31 + 0x10]
	0x021A59D4 LDP X30, X23, [X31], #0x30
	0x021A59D8 RET
	0x021A59DC ADRP X0, 0x1F53000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X20, X2
	007 Move X19, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X20
	012 Call 0x1C5D6E0
	013 Move X0, X21
	014 Move X1, X31
	015 Call Component.get_gameObject, X0
	016 Compare X0, 0
	017 JumpIfEqual {27}
	018 Move X8, [X20+56]
	019 Move X1, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X2, [X8+8]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x21E7600, X0, X1
	026 Return X0
	027 Call 0x1C17F20

Method: UnityEngine.Component GetComponentInChildren(System.Type t, System.Boolean includeInactive)

Disassembly:
	0x03C34114 LDR X19, [X31 + 0x8]
	0x03C34118 B 0x3C34668
	0x03C3411C LDR W9, [X0 + 0xE0]
	0x03C34120 MOV X23, X19
	0x03C34124 ADD X25, X31, 0xD0
	0x03C34128 ADD X19, X8, 0x20
	0x03C3412C CBNZ W9, 0x3C34138
	0x03C34130 BL 0x1C16DFC
	0x03C34134 LDR X0, [X29]
	0x03C34138 LDR X8, [X0 + 0xB8]
	0x03C3413C LDR X0, [X23]
	0x03C34140 LDR X24, [X8]
	0x03C34144 BL 0x1C16F10
	0x03C34148 ADRP X8, 0x52B000
	0x03C3414C LDR X8, [X8 + 0x478]
	0x03C34150 MOV X1, X24
	0x03C34154 MOV X3, X31
	0x03C34158 MOV X23, X0
	0x03C3415C LDR X2, [X8]
	0x03C34160 BL 0x2D30578
	0x03C34164 LDR X8, [X29]
	0x03C34168 LDR X8, [X8 + 0xB8]
	0x03C3416C STR X23, [X8 + 0x10]
	0x03C34170 LDR X2, [X27]
	0x03C34174 MOV X0, X22
	0x03C34178 MOV X1, X23
	0x03C3417C BL 0x21CF224
	0x03C34180 LDR X1, [X28]
	0x03C34184 BL 0x21D577C
	0x03C34188 STR X0, [X19]
	0x03C3418C LDR X0, [X29]
	0x03C34190 LDR W8, [X0 + 0xE0]
	0x03C34194 CBNZ W8, 0x3C341A0
	0x03C34198 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B2000
	007 Move X8, [X22+736]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51507200
	014 Add X0, X0, 2620
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+736], X0
	018 Move X0, X21
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Compare X0, 0
	021 JumpIfEqual {41}
	022 Move X22, 0x7B2000
	023 Move X3, [X22+832]
	024 Move X21, X0
	025 Compare X3, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -51519488
	028 Add X0, X0, 188
	029 Call 0x1C17CB8
	030 Move X3, X0
	031 Move [X22+832], X0
	032 And W2, W20, 1
	033 Move X0, X21
	034 Move X1, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 CallNoReturn X3
	041 Call 0x1C17F20

Method: T GetComponentInChildren(System.Boolean includeInactive)

Disassembly:
	0x021A4D18 STUR X3, [X29 - 0x30]
	0x021A4D1C MRS X28, 0xC000
	0x021A4D20 LDR X8, [X28 + 0x28]
	0x021A4D24 MOV X25, X4
	0x021A4D28 MOV X26, X2
	0x021A4D2C MOV W24, W1
	0x021A4D30 STUR X8, [X29 - 0x8]
	0x021A4D34 STUR X2, [X29 - 0x28]
	0x021A4D38 LDR X19, [X4 + 0x38]
	0x021A4D3C MOV X23, X0
	0x021A4D40 CBNZ X19, 0x21A4D50
	0x021A4D44 MOV X0, X25
	0x021A4D48 BL 0x1C5C6E0
	0x021A4D4C LDR X19, [X25 + 0x38]
	0x021A4D50 LDR X8, [X19 + 0x18]
	0x021A4D54 LDR W20, [X8 + 0xFC]
	0x021A4D58 ADD X8, X31, 0x0
	0x021A4D5C ADD X9, X20, 0xF
	0x021A4D60 AND X27, X9, 0x1FFFFFFFF
	0x021A4D64 SUB X21, X8, X27
	0x021A4D68 ADD X31, X21, 0x0
	0x021A4D6C ADD X8, X31, 0x0
	0x021A4D70 SUB X22, X8, X27
	0x021A4D74 ADD X31, X22, 0x0
	0x021A4D78 MOV X0, X22
	0x021A4D7C MOV W1, W31
	0x021A4D80 MOV X2, X20
	0x021A4D84 BL 0x3EB1B10
	0x021A4D88 ADD X8, X31, 0x0
	0x021A4D8C SUB X27, X8, X27
	0x021A4D90 ADD X31, X27, 0x0
	0x021A4D94 MOV X0, X27
	0x021A4D98 MOV W1, W31
	0x021A4D9C MOV X2, X20
	0x021A4DA0 BL 0x3EB1B10
	0x021A4DA4 CBZ X23, 0x21A4E98
	0x021A4DA8 LDR X1, [X19 + 0x8]
	0x021A4DAC MOV X0, X23
	0x021A4DB0 LDR X8, [X1]
	0x021A4DB4 BLR X8
	0x021A4DB8 LDR X8, [X25 + 0x38]
	0x021A4DBC CBZ W0, 0x21A4E08
	0x021A4DC0 LDR X1, [X8 + 0x8]
	0x021A4DC4 MOV X0, X23
	0x021A4DC8 LDR X8, [X1]
	0x021A4DCC BLR X8
	0x021A4DD0 LDR X8, [X25 + 0x38]
	0x021A4DD4 SUB X9, X29, 0xC
	0x021A4DD8 SUB X3, X29, 0x20
	0x021A4DDC MOV X2, X23
	0x021A4DE0 LDR X1, [X8 + 0x10]
	0x021A4DE4 SDIV W8, W24, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move W20, W1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {21}
	012 Move X0, 0x1F50000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Move X8, [X19+56]
	021 Move X9, 0x1F50000
	022 Move X9, [X9+1728]
	023 Move X22, [X8]
	024 Move X0, [X9]
	025 Move W9, [X0+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Call Type.GetTypeFromHandle, X0
	032 Move X1, X0
	033 And W2, W20, 1
	034 Move X0, X21
	035 Move X3, X31
	036 Call Component.GetComponentInChildren, X0, X1, X2
	037 Move X8, [X19+56]
	038 Move X20, X0
	039 Move X19, [X8+8]
	040 Move W8, [X19+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X19
	046 Call 0x1C5D684
	047 Move X19, X0
	048 Compare X20, 0
	049 JumpIfEqual {58}
	050 Move X0, X20
	051 Move X1, X19
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfNotEqual {59}
	055 Move X0, X20
	056 Move X1, X19
	057 Call 0x1C181E0
	058 Move X0, X31
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return X0

Method: T GetComponentInChildren()

Disassembly:
	0x021A4AF8 STP X20, X19, [X31 + 0x30]
	0x021A4AFC STR X1, [X31]
	0x021A4B00 LDR X8, [X3 + 0x38]
	0x021A4B04 MOV X20, X3
	0x021A4B08 MOV X21, X2
	0x021A4B0C MOV X22, X1
	0x021A4B10 MOV X19, X0
	0x021A4B14 CBNZ X8, 0x21A4B24
	0x021A4B18 MOV X0, X20
	0x021A4B1C BL 0x1C5C6E0
	0x021A4B20 LDR X8, [X20 + 0x38]
	0x021A4B24 LDR X2, [X8 + 0x8]
	0x021A4B28 MOV X0, X22
	0x021A4B2C MOV X1, X21
	0x021A4B30 LDR X8, [X2]
	0x021A4B34 BLR X8
	0x021A4B38 MOV X1, X31
	0x021A4B3C BL 0x33C693C
	0x021A4B40 LDR X8, [X20 + 0x38]
	0x021A4B44 MOV X21, X0
	0x021A4B48 ADD X0, X31, 0x0
	0x021A4B4C LDR X1, [X8 + 0x10]
	0x021A4B50 LDR X8, [X1]
	0x021A4B54 BLR X8
	0x021A4B58 LDR X8, [X20 + 0x38]
	0x021A4B5C MOV W20, W0
	0x021A4B60 LDR X8, [X8 + 0x20]
	0x021A4B64 LDR X9, [X8]
	0x021A4B68 MOV X0, X8
	0x021A4B6C BLR X9
	0x021A4B70 MOV W5, W0
	0x021A4B74 MOV X0, X19
	0x021A4B78 MOV X1, X21
	0x021A4B7C MOV W2, W31
	0x021A4B80 MOV W3, W31
	0x021A4B84 MOV W4, W20
	0x021A4B88 MOV X6, X31
	0x021A4B8C BL 0x3C3B0FC
	0x021A4B90 LDP X20, X19, [X31 + 0x30]
	0x021A4B94 LDP X22, X21, [X31 + 0x20]
	0x021A4B98 LDR X30, [X31 + 0x10]
	0x021A4B9C ADD X31, X31, 0x40
	0x021A4BA0 RET
	0x021A4BA4 STR X30, [X31 - 0x30]!
	0x021A4BA8 STP X22, X21, [X31 + 0x10]
	0x021A4BAC STP X20, X19, [X31 + 0x20]
	0x021A4BB0 LDR X8, [X3 + 0x38]
	0x021A4BB4 MOV X19, X2
	0x021A4BB8 MOV X21, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {19}
	010 Move X0, 0x1F50000
	011 Move X0, [X0+1728]
	012 Call 0x1C17CF4
	013 Move X8, [X19+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move X8, [X19+56]
	019 Move X9, 0x1F50000
	020 Move X9, [X9+1728]
	021 Move X21, [X8]
	022 Move X0, [X9]
	023 Move W9, [X0+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Call Type.GetTypeFromHandle, X0
	030 Move X1, X0
	031 Move X0, X20
	032 Move W2, W31
	033 Move X3, X31
	034 Call Component.GetComponentInChildren, X0, X1, X2
	035 Move X8, [X19+56]
	036 Move X20, X0
	037 Move X19, [X8+8]
	038 Move W8, [X19+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X19
	044 Call 0x1C5D684
	045 Move X19, X0
	046 Compare X20, 0
	047 JumpIfEqual {56}
	048 Move X0, X20
	049 Move X1, X19
	050 Call 0x1C17E00
	051 Compare X0, 0
	052 JumpIfNotEqual {57}
	053 Move X0, X20
	054 Move X1, X19
	055 Call 0x1C181E0
	056 Move X0, X31
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return X0

Method: T[] GetComponentsInChildren(System.Boolean includeInactive)

Disassembly:
	0x021A55B8 BR X4
	0x021A55BC BL 0x1C16F20
	0x021A55C0 STR X30, [X31 - 0x20]!
	0x021A55C4 STP X20, X19, [X31 + 0x10]
	0x021A55C8 LDR X8, [X1 + 0x38]
	0x021A55CC MOV X20, X1
	0x021A55D0 MOV X19, X0
	0x021A55D4 CBNZ X8, 0x21A55E4
	0x021A55D8 MOV X0, X20
	0x021A55DC BL 0x1C5C6E0
	0x021A55E0 LDR X8, [X20 + 0x38]
	0x021A55E4 LDR X0, [X8]
	0x021A55E8 LDR X8, [X0]
	0x021A55EC BLR X8
	0x021A55F0 CBZ X0, 0x21A5610
	0x021A55F4 LDR X8, [X20 + 0x38]
	0x021A55F8 MOV X1, X19
	0x021A55FC LDP X20, X19, [X31 + 0x10]
	0x021A5600 LDR X2, [X8 + 0x30]
	0x021A5604 LDR X3, [X2]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X20, X2
	007 Move W19, W1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X20
	012 Call 0x1C5D6E0
	013 Move X0, X21
	014 Move X1, X31
	015 Call Component.get_gameObject, X0
	016 Compare X0, 0
	017 JumpIfEqual {27}
	018 Move X8, [X20+56]
	019 And W1, W19, 1
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X2, [X8]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x21E6F84, X0, X1
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void GetComponentsInChildren(System.Boolean includeInactive, System.Collections.Generic.List`1<T> result)

Disassembly:
	0x021A56E8 LDR X2, [X8 + 0x30]
	0x021A56EC LDR X30, [X31], #0x20
	0x021A56F0 B 0x299DE64
	0x021A56F4 BL 0x1C16F20
	0x021A56F8 STR X30, [X31 - 0x20]!
	0x021A56FC STP X20, X19, [X31 + 0x10]
	0x021A5700 LDR X8, [X1 + 0x38]
	0x021A5704 MOV X20, X1
	0x021A5708 MOV X19, X0
	0x021A570C CBNZ X8, 0x21A571C
	0x021A5710 MOV X0, X20
	0x021A5714 BL 0x1C5C6E0
	0x021A5718 LDR X8, [X20 + 0x38]
	0x021A571C LDR X0, [X8]
	0x021A5720 BL 0x299C01C
	0x021A5724 CBZ X0, 0x21A5740
	0x021A5728 LDR X8, [X20 + 0x38]
	0x021A572C MOV X1, X19
	0x021A5730 LDP X20, X19, [X31 + 0x10]
	0x021A5734 LDR X2, [X8 + 0x30]
	0x021A5738 LDR X30, [X31], #0x20
	0x021A573C B 0x299E4C0
	0x021A5740 BL 0x1C16F20
	0x021A5744 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X21, X3
	008 Move X19, X2
	009 Move W20, W1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X21
	014 Call 0x1C5D6E0
	015 Move X0, X22
	016 Move X1, X31
	017 Call Component.get_gameObject, X0
	018 Compare X0, 0
	019 JumpIfEqual {31}
	020 Move X8, [X21+56]
	021 And W1, W20, 1
	022 Move X2, X19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X3, [X8+8]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x21E71D0, X0, X1, X2
	030 Return 
	031 Call 0x1C17F20

Method: T[] GetComponentsInChildren()

Disassembly:
	0x021A553C BLR X8
	0x021A5540 CBZ X0, 0x21A5560
	0x021A5544 LDR X8, [X20 + 0x38]
	0x021A5548 MOV W1, W19
	0x021A554C LDP X20, X19, [X31 + 0x10]
	0x021A5550 LDR X2, [X8 + 0x28]
	0x021A5554 LDR X3, [X2]
	0x021A5558 LDR X30, [X31], #0x20
	0x021A555C BR X3
	0x021A5560 BL 0x1C16F20
	0x021A5564 STP X30, X21, [X31 - 0x20]!
	0x021A5568 STP X20, X19, [X31 + 0x10]
	0x021A556C LDR X8, [X2 + 0x38]
	0x021A5570 MOV X21, X2
	0x021A5574 MOV W19, W1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {12}
	008 Move X0, X1
	009 Move X20, X1
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X2, [X8]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move W1, W31
	017 Move X30, [X31+32]
	018 Call 0x21A55B8, X0, X1
	019 Return X0

Method: System.Void GetComponentsInChildren(System.Collections.Generic.List`1<T> results)

Disassembly:
	0x021A5608 LDR X30, [X31], #0x20
	0x021A560C BR X3
	0x021A5610 BL 0x1C16F20
	0x021A5614 STR X30, [X31 - 0x20]!
	0x021A5618 STP X20, X19, [X31 + 0x10]
	0x021A561C LDR X8, [X1 + 0x38]
	0x021A5620 MOV X20, X1
	0x021A5624 MOV X19, X0
	0x021A5628 CBNZ X8, 0x21A5638
	0x021A562C MOV X0, X20
	0x021A5630 BL 0x1C5C6E0
	0x021A5634 LDR X8, [X20 + 0x38]
	0x021A5638 LDR X0, [X8]
	0x021A563C BL 0x299B8A8
	0x021A5640 CBZ X0, 0x21A565C
	0x021A5644 LDR X8, [X20 + 0x38]
	0x021A5648 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X3, [X8+8]
	015 Move X0, X20
	016 Move X2, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move W1, W31
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call 0x21A56E8, X0, X1, X2
	023 Return 

Method: UnityEngine.Component GetComponentInParent(System.Type t, System.Boolean includeInactive)

Disassembly:
	0x03C341F0 LDR X2, [X8]
	0x03C341F4 BL 0x2D30578
	0x03C341F8 LDR X8, [X29]
	0x03C341FC LDR X8, [X8 + 0xB8]
	0x03C34200 STR X23, [X8 + 0x18]
	0x03C34204 ADRP X8, 0x52B000
	0x03C34208 LDR X8, [X8 + 0x440]
	0x03C3420C MOV X0, X22
	0x03C34210 MOV X1, X23
	0x03C34214 LDR X2, [X8]
	0x03C34218 BL 0x21CF224
	0x03C3421C ADRP X8, 0x52B000
	0x03C34220 LDR X8, [X8 + 0x448]
	0x03C34224 LDR X1, [X8]
	0x03C34228 BL 0x21D577C
	0x03C3422C MOV X23, X0
	0x03C34230 LDR X0, [X29]
	0x03C34234 LDRB W24, [X31 + 0x108]
	0x03C34238 STR X23, [X31 + 0xD0]
	0x03C3423C ADD X9, X31, 0xD0
	0x03C34240 LDR W8, [X0 + 0xE0]
	0x03C34244 ANDS W31, W24, 0x1
	0x03C34248 CSEL X19, X31, X9, EQ
	0x03C3424C CBNZ W8, 0x3C34258
	0x03C34250 BL 0x1C16DFC
	0x03C34254 LDR X0, [X29]
	0x03C34258 LDR X8, [X0 + 0xB8]
	0x03C3425C TBNZ X24, 0x0, 0x3C342C0
	0x03C34260 LDR X24, [X8 + 0x28]
	0x03C34264 ADD X27, X25, 0x8
	0x03C34268 CBNZ X24, 0x3C3431C
	0x03C3426C LDR W8, [X0 + 0xE0]
	0x03C34270 CBNZ W8, 0x3C3427C
	0x03C34274 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B2000
	007 Move X8, [X22+736]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51507200
	014 Add X0, X0, 2620
	015 Call 0x1C17CB8
	016 Move X8, X0
	017 Move [X22+736], X0
	018 Move X0, X21
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Compare X0, 0
	021 JumpIfEqual {41}
	022 Move X22, 0x7B2000
	023 Move X3, [X22+840]
	024 Move X21, X0
	025 Compare X3, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -51642368
	028 Add X0, X0, 750
	029 Call 0x1C17CB8
	030 Move X3, X0
	031 Move [X22+840], X0
	032 And W2, W20, 1
	033 Move X0, X21
	034 Move X1, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 CallNoReturn X3
	041 Call 0x1C17F20

Method: T GetComponentInParent(System.Boolean includeInactive)

Disassembly:
	0x021A5170 MOV X22, X1
	0x021A5174 MOV X21, X0
	0x021A5178 CBNZ X8, 0x21A5188
	0x021A517C MOV X0, X20
	0x021A5180 BL 0x1C5C6E0
	0x021A5184 LDR X8, [X20 + 0x38]
	0x021A5188 LDR X0, [X8]
	0x021A518C BL 0x299B378
	0x021A5190 CBZ X0, 0x21A51D0
	0x021A5194 LDR X8, [X20 + 0x38]
	0x021A5198 MOV X1, X21
	0x021A519C MOV X2, X22
	0x021A51A0 MOV X23, X0
	0x021A51A4 LDR X3, [X8 + 0x30]
	0x021A51A8 BL 0x299C378
	0x021A51AC LDR X8, [X20 + 0x38]
	0x021A51B0 MOV X1, X21
	0x021A51B4 MOV W2, W19
	0x021A51B8 LDP X20, X19, [X31 + 0x20]
	0x021A51BC LDR X3, [X8 + 0x38]
	0x021A51C0 LDP X22, X21, [X31 + 0x10]
	0x021A51C4 MOV X0, X23
	0x021A51C8 LDP X30, X23, [X31], #0x30
	0x021A51CC B 0x299C474
	0x021A51D0 BL 0x1C16F20
	0x021A51D4 STP X30, X23, [X31 - 0x30]!
	0x021A51D8 STP X22, X21, [X31 + 0x10]
	0x021A51DC STP X20, X19, [X31 + 0x20]
	0x021A51E0 LDR X8, [X3 + 0x38]
	0x021A51E4 MOV X20, X3
	0x021A51E8 MOV W19, W2
	0x021A51EC MOV X22, X1
	0x021A51F0 MOV X21, X0
	0x021A51F4 CBNZ X8, 0x21A5204
	0x021A51F8 MOV X0, X20
	0x021A51FC BL 0x1C5C6E0
	0x021A5200 LDR X8, [X20 + 0x38]
	0x021A5204 LDR X0, [X8]
	0x021A5208 LDR X8, [X0]
	0x021A520C BLR X8
	0x021A5210 CBZ X0, 0x21A5258
	0x021A5214 LDR X8, [X20 + 0x38]
	0x021A5218 MOV X1, X21
	0x021A521C MOV X2, X22
	0x021A5220 MOV X23, X0
	0x021A5224 LDR X3, [X8 + 0x30]
	0x021A5228 LDR X8, [X3]
	0x021A522C BLR X8
	0x021A5230 LDR X8, [X20 + 0x38]
	0x021A5234 MOV X1, X21
	0x021A5238 MOV W2, W19
	0x021A523C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+56]
	007 Move X19, X2
	008 Move W20, W1
	009 Move X21, X0
	010 Compare X8, 0
	011 JumpIfNotEqual {21}
	012 Move X0, 0x1F4F000
	013 Move X0, [X0+1728]
	014 Call 0x1C17CF4
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Move X8, [X19+56]
	021 Move X9, 0x1F4F000
	022 Move X9, [X9+1728]
	023 Move X22, [X8]
	024 Move X0, [X9]
	025 Move W9, [X0+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X22
	030 Move X1, X31
	031 Call Type.GetTypeFromHandle, X0
	032 Move X1, X0
	033 And W2, W20, 1
	034 Move X0, X21
	035 Move X3, X31
	036 Call Component.GetComponentInParent, X0, X1, X2
	037 Move X8, [X19+56]
	038 Move X20, X0
	039 Move X19, [X8+8]
	040 Move W8, [X19+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X19
	046 Call 0x1C5D684
	047 Move X19, X0
	048 Compare X20, 0
	049 JumpIfEqual {58}
	050 Move X0, X20
	051 Move X1, X19
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfNotEqual {59}
	055 Move X0, X20
	056 Move X1, X19
	057 Call 0x1C181E0
	058 Move X0, X31
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X22, [X31+16]
	062 Move X21, [X31+24]
	063 Move X30, [X31+48]
	064 Return X0

Method: T GetComponentInParent()

Disassembly:
	0x021A4F50 MOV X0, X21
	0x021A4F54 BL 0x1C5C6E0
	0x021A4F58 LDR X8, [X21 + 0x38]
	0x021A4F5C LDR X0, [X8]
	0x021A4F60 LDR X8, [X0]
	0x021A4F64 BLR X8
	0x021A4F68 CBZ X0, 0x21A4FAC
	0x021A4F6C LDR X8, [X21 + 0x38]
	0x021A4F70 MOV X1, X22
	0x021A4F74 MOV X23, X0
	0x021A4F78 LDR X2, [X8 + 0x30]
	0x021A4F7C LDR X8, [X2]
	0x021A4F80 BLR X8
	0x021A4F84 LDR X8, [X21 + 0x38]
	0x021A4F88 MOV X1, X20
	0x021A4F8C MOV W2, W19
	0x021A4F90 LDP X20, X19, [X31 + 0x20]
	0x021A4F94 LDR X3, [X8 + 0x38]
	0x021A4F98 LDP X22, X21, [X31 + 0x10]
	0x021A4F9C MOV X0, X23
	0x021A4FA0 LDR X4, [X3]
	0x021A4FA4 LDP X30, X23, [X31], #0x30
	0x021A4FA8 BR X4
	0x021A4FAC BL 0x1C16F20
	0x021A4FB0 STR X30, [X31 - 0x40]!
	0x021A4FB4 STP X24, X23, [X31 + 0x10]
	0x021A4FB8 STP X22, X21, [X31 + 0x20]
	0x021A4FBC STP X20, X19, [X31 + 0x30]
	0x021A4FC0 LDR X8, [X4 + 0x38]
	0x021A4FC4 MOV X21, X4
	0x021A4FC8 MOV W19, W3
	0x021A4FCC MOV X20, X2
	0x021A4FD0 MOV X23, X1
	0x021A4FD4 MOV X22, X0
	0x021A4FD8 CBNZ X8, 0x21A4FE8
	0x021A4FDC MOV X0, X21
	0x021A4FE0 BL 0x1C5C6E0
	0x021A4FE4 LDR X8, [X21 + 0x38]
	0x021A4FE8 LDR X0, [X8]
	0x021A4FEC LDR X8, [X0]
	0x021A4FF0 BLR X8
	0x021A4FF4 CBZ X0, 0x21A5044
	0x021A4FF8 LDR X8, [X21 + 0x38]
	0x021A4FFC MOV X1, X22
	0x021A5000 MOV X2, X23
	0x021A5004 MOV X24, X0
	0x021A5008 LDR X3, [X8 + 0x30]
	0x021A500C LDR X8, [X3]
	0x021A5010 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {19}
	010 Move X0, 0x1F50000
	011 Move X0, [X0+1728]
	012 Call 0x1C17CF4
	013 Move X8, [X19+56]
	014 Compare X8, 0
	015 JumpIfNotEqual {19}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Move X8, [X19+56]
	019 Move X9, 0x1F50000
	020 Move X9, [X9+1728]
	021 Move X21, [X8]
	022 Move X0, [X9]
	023 Move W9, [X0+224]
	024 Compare W9, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X21
	028 Move X1, X31
	029 Call Type.GetTypeFromHandle, X0
	030 Move X1, X0
	031 Move X0, X20
	032 Move W2, W31
	033 Move X3, X31
	034 Call Component.GetComponentInParent, X0, X1, X2
	035 Move X8, [X19+56]
	036 Move X20, X0
	037 Move X19, [X8+8]
	038 Move W8, [X19+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X19
	044 Call 0x1C5D684
	045 Move X19, X0
	046 Compare X20, 0
	047 JumpIfEqual {56}
	048 Move X0, X20
	049 Move X1, X19
	050 Call 0x1C17E00
	051 Compare X0, 0
	052 JumpIfNotEqual {57}
	053 Move X0, X20
	054 Move X1, X19
	055 Call 0x1C181E0
	056 Move X0, X31
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return X0

Method: T[] GetComponentsInParent(System.Boolean includeInactive)

Disassembly:
	0x021A5828 B.EQ 0x21A5848
	0x021A582C SUBS X9, X9, 0x1
	0x021A5830 ADD X10, X10, 0x10
	0x021A5834 B.NE 0x21A5820
	0x021A5838 MOV X0, X19
	0x021A583C MOV W2, W31
	0x021A5840 BL 0x1C5C788
	0x021A5844 B 0x21A5854
	0x021A5848 LDRSW X9, [X10]
	0x021A584C ADD X8, X8, X9, 0x4, LSL
	0x021A5850 ADD X0, X8, 0x138
	0x021A5854 LDP X8, X1, [X0]
	0x021A5858 MOV X0, X19
	0x021A585C BLR X8
	0x021A5860 MOV X19, X0
	0x021A5864 CBZ X0, 0x21A5A38
	0x021A5868 ADRP X23, 0x1F4E000
	0x021A586C LDR X23, [X23 + 0xE18]
	0x021A5870 LDR X8, [X19]
	0x021A5874 LDR X1, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X20, X2
	007 Move W19, W1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X20
	012 Call 0x1C5D6E0
	013 Move X0, X21
	014 Move X1, X31
	015 Call Component.get_gameObject, X0
	016 Compare X0, 0
	017 JumpIfEqual {27}
	018 Move X8, [X20+56]
	019 And W1, W19, 1
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X2, [X8]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x21E7308, X0, X1
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void GetComponentsInParent(System.Boolean includeInactive, System.Collections.Generic.List`1<T> results)

Disassembly:
	0x021A58CC TBZ X0, 0x0, 0x21A5958
	0x021A58D0 LDR X8, [X20 + 0x38]
	0x021A58D4 LDR X1, [X8 + 0x18]
	0x021A58D8 LDRB W8, [X1 + 0x135]
	0x021A58DC TBNZ X8, 0x0, 0x21A58EC
	0x021A58E0 MOV X0, X1
	0x021A58E4 BL 0x1C5C684
	0x021A58E8 MOV X1, X0
	0x021A58EC LDR X8, [X19]
	0x021A58F0 LDRH W9, [X8 + 0x12E]
	0x021A58F4 CBZ X9, 0x21A5918
	0x021A58F8 LDR X10, [X8 + 0xB0]
	0x021A58FC ADD X10, X10, 0x8
	0x021A5900 LDUR X11, [X10 - 0x8]
	0x021A5904 CMP X11, X1
	0x021A5908 B.EQ 0x21A5928
	0x021A590C SUBS X9, X9, 0x1
	0x021A5910 ADD X10, X10, 0x10
	0x021A5914 B.NE 0x21A5900
	0x021A5918 MOV X0, X19
	0x021A591C MOV W2, W31
	0x021A5920 BL 0x1C5C788
	0x021A5924 B 0x21A5934
	0x021A5928 LDRSW X9, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X21, X3
	008 Move X19, X2
	009 Move W20, W1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X21
	014 Call 0x1C5D6E0
	015 Move X0, X22
	016 Move X1, X31
	017 Call Component.get_gameObject, X0
	018 Compare X0, 0
	019 JumpIfEqual {31}
	020 Move X8, [X21+56]
	021 And W1, W20, 1
	022 Move X2, X19
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X3, [X8+8]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call 0x21E74C8, X0, X1, X2
	030 Return 
	031 Call 0x1C17F20

Method: T[] GetComponentsInParent()

Disassembly:
	0x021A57AC LDR X8, [X2 + 0x38]
	0x021A57B0 MOV X20, X2
	0x021A57B4 MOV X21, X1
	0x021A57B8 MOV X19, X0
	0x021A57BC CBNZ X8, 0x21A57E8
	0x021A57C0 ADRP X0, 0x1F4E000
	0x021A57C4 LDR X0, [X0 + 0xE00]
	0x021A57C8 BL 0x1C16CF4
	0x021A57CC ADRP X0, 0x1F4E000
	0x021A57D0 LDR X0, [X0 + 0xE18]
	0x021A57D4 BL 0x1C16CF4
	0x021A57D8 LDR X8, [X20 + 0x38]
	0x021A57DC CBNZ X8, 0x21A57E8
	0x021A57E0 MOV X0, X20
	0x021A57E4 BL 0x1C5C6E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X0
	006 Compare X8, 0
	007 JumpIfNotEqual {12}
	008 Move X0, X1
	009 Move X20, X1
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X2, [X8]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move W1, W31
	017 Move X30, [X31+32]
	018 Call 0x21A5828, X0, X1
	019 Return X0

Method: System.Void GetComponentsForListInternal(System.Type searchType, System.Object resultList)

Disassembly:
	0x03C342CC LDR W8, [X0 + 0xE0]
	0x03C342D0 CBNZ W8, 0x3C342DC
	0x03C342D4 BL 0x1C16DFC
	0x03C342D8 LDR X0, [X29]
	0x03C342DC ADRP X9, 0x52B000
	0x03C342E0 LDR X8, [X0 + 0xB8]
	0x03C342E4 LDR X9, [X9 + 0x458]
	0x03C342E8 LDR X25, [X8]
	0x03C342EC LDR X0, [X9]
	0x03C342F0 BL 0x1C16F10
	0x03C342F4 ADRP X8, 0x52B000
	0x03C342F8 LDR X8, [X8 + 0x488]
	0x03C342FC MOV X1, X25
	0x03C34300 MOV X3, X31
	0x03C34304 MOV X24, X0
	0x03C34308 LDR X2, [X8]
	0x03C3430C BL 0x2D30128
	0x03C34310 LDR X8, [X29]
	0x03C34314 LDR X8, [X8 + 0xB8]
	0x03C34318 STR X24, [X8 + 0x20]
	0x03C3431C ADRP X8, 0x52B000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B2000
	007 Move X3, [X22+752]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51433472
	014 Add X0, X0, 3557
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+752], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void GetComponents(System.Type type, System.Collections.Generic.List`1<UnityEngine.Component> results)

Disassembly:
	0x03C34320 LDR X8, [X8 + 0x438]
	0x03C34324 MOV X0, X23
	0x03C34328 MOV X1, X24
	0x03C3432C LDR X2, [X8]
	0x03C34330 BL 0x21CEC3C
	0x03C34334 ADRP X8, 0x4C1000
	0x03C34338 LDR X8, [X8 + 0x9C8]
	0x03C3433C LDR X1, [X8]
	0x03C34340 BL 0x21D54D4
	0x03C34344 STR X0, [X27]
	0x03C34348 LDR X8, [X31 + 0xD0]
	0x03C3434C CBZ X8, 0x3C34514
	0x03C34350 ADRP X9, 0x4BF000
	0x03C34354 LDR X9, [X9 + 0xAC8]
	0x03C34358 LDR W1, [X8 + 0x18]
	0x03C3435C LDR X0, [X9]
	0x03C34360 BL 0x1C16D6C
	0x03C34364 STR X0, [X31 + 0xE8]
	0x03C34368 CBZ X22, 0x3C34514
	0x03C3436C LDR W8, [X22 + 0x18]
	0x03C34370 CMP W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x7B2000
	007 Move X3, [X22+752]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -51433472
	014 Add X0, X0, 3557
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+752], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move X2, X19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void GetComponents(System.Collections.Generic.List`1<T> results)

Disassembly:
	0x021A543C LDR X30, [X31], #0x30
	0x021A5440 B 0x299D9C4
	0x021A5444 BL 0x1C16F20
	0x021A5448 STR X30, [X31 - 0x30]!
	0x021A544C STP X22, X21, [X31 + 0x10]
	0x021A5450 STP X20, X19, [X31 + 0x20]
	0x021A5454 LDR X8, [X3 + 0x38]
	0x021A5458 MOV X21, X3
	0x021A545C MOV W19, W2
	0x021A5460 MOV X20, X1
	0x021A5464 MOV X22, X0
	0x021A5468 CBNZ X8, 0x21A5478
	0x021A546C MOV X0, X21
	0x021A5470 BL 0x1C5C6E0
	0x021A5474 LDR X8, [X21 + 0x38]
	0x021A5478 LDR X0, [X8]
	0x021A547C BL 0x299BDA0
	0x021A5480 CBZ X0, 0x21A54A8
	0x021A5484 LDR X8, [X21 + 0x38]
	0x021A5488 MOV X1, X22
	0x021A548C MOV X2, X20
	0x021A5490 MOV W3, W19
	0x021A5494 LDR X4, [X8 + 0x28]
	0x021A5498 LDP X20, X19, [X31 + 0x20]
	0x021A549C LDP X22, X21, [X31 + 0x10]
	0x021A54A0 LDR X30, [X31], #0x30
	0x021A54A4 B 0x299E020
	0x021A54A8 BL 0x1C16F20
	0x021A54AC STR X30, [X31 - 0x30]!
	0x021A54B0 STP X22, X21, [X31 + 0x10]
	0x021A54B4 STP X20, X19, [X31 + 0x20]
	0x021A54B8 LDR X8, [X3 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {20}
	010 Move X0, 0x1F4F000
	011 Move X0, [X0+1728]
	012 Move X21, X2
	013 Call 0x1C17CF4
	014 Move X8, [X21+56]
	015 Compare X8, 0
	016 JumpIfNotEqual {20}
	017 Move X0, X21
	018 Call 0x1C5D6E0
	019 Move X8, [X21+56]
	020 Move X9, 0x1F4F000
	021 Move X9, [X9+1728]
	022 Move X21, [X8]
	023 Move X0, [X9]
	024 Move W9, [X0+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move X1, X31
	030 Call Type.GetTypeFromHandle, X0
	031 Move X1, X0
	032 Move X0, X20
	033 Move X2, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X3, X31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call Component.GetComponentsForListInternal, X0, X1, X2
	040 Return 

Method: System.String get_tag()

Disassembly:
	0x03C34374 B.LT 0x3C343D0
	0x03C34378 ADRP X19, 0x52B000
	0x03C3437C LDR X19, [X19 + 0x470]
	0x03C34380 MOV X23, X31
	0x03C34384 LDR X2, [X19]
	0x03C34388 LDR X24, [X31 + 0xE8]
	0x03C3438C MOV X0, X22
	0x03C34390 MOV W1, W23
	0x03C34394 BL 0x301BCCC
	0x03C34398 CBZ X0, 0x3C34514
	0x03C3439C LDR X8, [X0]
	0x03C343A0 LDP X9, X1, [X8 + 0x1A8]
	0x03C343A4 BLR X9
	0x03C343A8 CBZ X24, 0x3C34514
	0x03C343AC LDR W8, [X24 + 0x18]
	0x03C343B0 CMP X23, X8
	0x03C343B4 B.CS 0x3C33E44
	0x03C343B8 ADD X8, X24, X23, 0x3, LSL
	0x03C343BC STR X0, [X8 + 0x20]
	0x03C343C0 LDRSW X8, [X22 + 0x18]
	0x03C343C4 ADD X23, X23, 0x1
	0x03C343C8 CMP X23, X8
	0x03C343CC B.LT 0x3C34384
	0x03C343D0 ADRP X8, 0x4E6000
	0x03C343D4 LDR X0, [X28]
	0x03C343D8 LDR X22, [X31 + 0x100]
	0x03C343DC LDR X8, [X8 + 0xD98]
	0x03C343E0 LDR W9, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x7B2000
	005 Move X8, [X20+736]
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -51507200
	010 Add X0, X0, 2620
	011 Call 0x1C17CB8
	012 Move X8, X0
	013 Move [X20+736], X0
	014 Move X0, X19
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Compare X0, 0
	017 JumpIfEqual {33}
	018 Move X20, 0x7B2000
	019 Move X1, [X20+944]
	020 Move X19, X0
	021 Compare X1, 0
	022 JumpIfNotEqual {28}
	023 Move X0, -51650560
	024 Add X0, X0, 256
	025 Call 0x1C17CB8
	026 Move X1, X0
	027 Move [X20+944], X0
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 CallNoReturn X1
	033 Call 0x1C17F20

Method: T[] GetComponents()

Disassembly:
	0x021A53A8 BL 0x1C5C6E0
	0x021A53AC LDR X8, [X21 + 0x38]
	0x021A53B0 LDR X0, [X8]
	0x021A53B4 BL 0x299B8A8
	0x021A53B8 CBZ X0, 0x21A53E0
	0x021A53BC LDR X8, [X21 + 0x38]
	0x021A53C0 MOV X1, X22
	0x021A53C4 MOV X2, X20
	0x021A53C8 MOV W3, W19
	0x021A53CC LDR X4, [X8 + 0x28]
	0x021A53D0 LDP X20, X19, [X31 + 0x20]
	0x021A53D4 LDP X22, X21, [X31 + 0x10]
	0x021A53D8 LDR X30, [X31], #0x30
	0x021A53DC B 0x299D348
	0x021A53E0 BL 0x1C16F20
	0x021A53E4 STR X30, [X31 - 0x30]!
	0x021A53E8 STP X22, X21, [X31 + 0x10]
	0x021A53EC STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X19, X1
	006 Move X20, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X19
	010 Call 0x1C5D6E0
	011 Move X0, X20
	012 Move X1, X31
	013 Call Component.get_gameObject, X0
	014 Compare X0, 0
	015 JumpIfEqual {23}
	016 Move X8, [X19+56]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X1, [X8]
	020 Move X30, [X31+32]
	021 Call 0x21E6C40, X0
	022 Return X0
	023 Call 0x1C17F20

Method: System.Boolean CompareTag(System.String tag)

Disassembly:
	0x03C34420 CBZ X10, 0x3C34514
	0x03C34424 LDR X9, [X10 + 0x18]
	0x03C34428 CMP W9, 0x1
	0x03C3442C B.LT 0x3C34518
	0x03C34430 AND X11, X9, 0x0
	0x03C34434 MOV X8, X31
	0x03C34438 MOVZ W9, 0xFFFF
	0x03C3443C SUB X11, X11, 0x1
	0x03C34440 MOVN W12, 0x0
	0x03C34444 LDR W13, [X10 + 0x18]
	0x03C34448 CMP X8, X13
	0x03C3444C B.CS 0x3C33E44
	0x03C34450 ADD X10, X10, X8, 0x2, LSL
	0x03C34454 LDR W13, [X10 + 0x20]
	0x03C34458 CMP W13, W9
	0x03C3445C B.NE 0x3C34464
	0x03C34460 STR W12, [X10 + 0x20]
	0x03C34464 CMP X11, X8
	0x03C34468 B.EQ 0x3C34518
	0x03C3446C LDR X10, [X31 + 0xD8]
	0x03C34470 ADD X8, X8, 0x1
	0x03C34474 CBNZ X10, 0x3C34444
	0x03C34478 B 0x3C34514
	0x03C3447C LDR X0, [X28]
	0x03C34480 ADRP X9, 0x4E6000
	0x03C34484 LDR X22, [X31 + 0x100]
	0x03C34488 LDR W8, [X0 + 0xE0]
	0x03C3448C LDR X9, [X9 + 0xD68]
	0x03C34490 LDR X23, [X9]
	0x03C34494 CBNZ W8, 0x3C3449C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x7B2000
	006 Move X8, [X21+736]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -51507200
	012 Add X0, X0, 2620
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X21+736], X0
	016 Move X0, X20
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Compare X0, 0
	019 JumpIfEqual {37}
	020 Move X21, 0x7B2000
	021 Move X2, [X21+960]
	022 Move X20, X0
	023 Compare X2, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -51650560
	026 Add X0, X0, 290
	027 Call 0x1C17CB8
	028 Move X2, X0
	029 Move [X21+960], X0
	030 Move X0, X20
	031 Move X1, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 CallNoReturn X2
	037 Call 0x1C17F20

Method: System.Void SendMessage(System.String methodName, System.Object value, UnityEngine.SendMessageOptions options)

Disassembly:
	0x03C344DC MOVN W10, 0x0
	0x03C344E0 LDR W12, [X11 + 0x18]
	0x03C344E4 CMP X8, X12
	0x03C344E8 B.CS 0x3C33E44
	0x03C344EC ADD X11, X11, X8, 0x2, LSL
	0x03C344F0 LDR W12, [X11 + 0x20]
	0x03C344F4 CMP W12, 0xFF
	0x03C344F8 B.NE 0x3C34500
	0x03C344FC STR W10, [X11 + 0x20]
	0x03C34500 CMP X9, X8
	0x03C34504 B.EQ 0x3C34518
	0x03C34508 LDR X11, [X31 + 0xD8]
	0x03C3450C ADD X8, X8, 0x1
	0x03C34510 CBNZ X11, 0x3C344E0
	0x03C34514 BL 0x1C16F20
	0x03C34518 ADRP X8, 0x4F7000
	0x03C3451C LDR X0, [X28]
	0x03C34520 LDR X8, [X8 + 0xE88]
	0x03C34524 LDR W9, [X0 + 0xE0]
	0x03C34528 LDR X22, [X8]
	0x03C3452C CBNZ W9, 0x3C34534
	0x03C34530 BL 0x1C16DFC
	0x03C34534 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7B2000
	008 Move X4, [X23+760]
	009 Move W19, W3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51490816
	016 Add X0, X0, 2521
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+760], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void BroadcastMessage(System.String methodName, System.Object parameter, UnityEngine.SendMessageOptions options)

Disassembly:
	0x03C34538 MOV X1, X31
	0x03C3453C BL 0x338C698
	0x03C34540 LDR X8, [X20]
	0x03C34544 MOV X1, X0
	0x03C34548 MOV X0, X20
	0x03C3454C MOV W2, W31
	0x03C34550 LDP X9, X3, [X8 + 0x1E8]
	0x03C34554 BLR X9
	0x03C34558 ADRP X8, 0x4E6000
	0x03C3455C LDR X22, [X31 + 0x100]
	0x03C34560 LDR X8, [X8 + 0xD88]
	0x03C34564 AND W9, W0, 0x1
	0x03C34568 MOV X1, X31
	0x03C3456C STRB W9, [X31 + 0xF8]
	0x03C34570 LDR X8, [X8]
	0x03C34574 MOV X0, X8
	0x03C34578 BL 0x338C698
	0x03C3457C MOV X1, X0
	0x03C34580 MOV X0, X22
	0x03C34584 MOV X2, X31
	0x03C34588 BL 0x3395F0C
	0x03C3458C MOV W8, W0
	0x03C34590 MOV W0, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x7B2000
	008 Move X4, [X23+768]
	009 Move W19, W3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Compare X4, 0
	014 JumpIfNotEqual {20}
	015 Move X0, -51642368
	016 Add X0, X0, 550
	017 Call 0x1C17CB8
	018 Move X4, X0
	019 Move [X23+768], X0
	020 Move X0, X22
	021 Move X1, X21
	022 Move X2, X20
	023 Move W3, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Move X23, [X31+56]
	030 CallNoReturn X4

Method: System.Void .ctor()

Disassembly:
	0x03C33494 BL 0x1C16F20
	0x03C33498 STP X30, X21, [X31 - 0x20]!
	0x03C3349C STP X20, X19, [X31 + 0x10]
	0x03C334A0 ADRP X21, 0x7B2000
	0x03C334A4 LDR X2, [X21 + 0x3C0]
	0x03C334A8 MOV X19, X1
	0x03C334AC MOV X20, X0
	0x03C334B0 CBNZ X2, 0x3C334C8
	0x03C334B4 ADRP X0, 0xFFFFFFFFFCEBE000
	0x03C334B8 ADD X0, X0, 0x122
	0x03C334BC BL 0x1C16CB8
	0x03C334C0 MOV X2, X0
	0x03C334C4 STR X0, [X21 + 0x3C0]
	0x03C334C8 MOV X0, X20
	0x03C334CC MOV X1, X19
	0x03C334D0 LDP X20, X19, [X31 + 0x10]
	0x03C334D4 LDP X30, X21, [X31], #0x20
	0x03C334D8 BR X2
	0x03C334DC STP X30, X23, [X31 - 0x30]!
	0x03C334E0 STP X22, X21, [X31 + 0x10]
	0x03C334E4 STP X20, X19, [X31 + 0x20]
	0x03C334E8 ADRP X23, 0x7B2000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x7B3000
	006 Move X21, 0x4C1000
	007 Move W8, [X20+776]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x4C1000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+776], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call Object..ctor, X0
	031 Return 

