Type: UnityEngine.Animations.Rigging.TwistCorrection

Method: System.Void OnValidate()

Disassembly:
	0x036F1308 MOV X19, X0
	0x036F130C TBNZ X8, 0x0, 0x36F1324
	0x036F1310 ADRP X0, 0xA4F000
	0x036F1314 LDR X0, [X0 + 0x9D8]
	0x036F1318 BL 0x1C16CF4
	0x036F131C MOVZ W8, 0x1
	0x036F1320 STRB W8, [X20 + 0xB89]
	0x036F1324 LDR X8, [X19 + 0x28]
	0x036F1328 CBZ X8, 0x36F14F0
	0x036F132C MOV X0, X19
	0x036F1330 BL 0x36F153C
	0x036F1334 CBZ X0, 0x36F14EC
	0x036F1338 LDR X1, [X19 + 0x28]
	0x036F133C BL 0x36F15A0
	0x036F1340 LDR X8, [X19 + 0x28]
	0x036F1344 CBZ X8, 0x36F14EC
	0x036F1348 LDR W21, [X8 + 0x18]
	0x036F134C CMP W21, 0x1
	0x036F1350 B.LT 0x36F14F0
	0x036F1354 ADRP X22, 0xA4F000
	0x036F1358 LDR X22, [X22 + 0x9D8]
	0x036F135C MOV W9, W31
	0x036F1360 LDR W10, [X8 + 0x18]
	0x036F1364 CMP W9, W10
	0x036F1368 B.CS 0x36F1500
	0x036F136C SXTW X23, W9
	0x036F1370 ADD X8, X8, X23, 0x3, LSL
	0x036F1374 LDR X20, [X8 + 0x20]
	0x036F1378 CBZ X20, 0x36F14EC
	0x036F137C LDR X8, [X20]
	0x036F1380 LDR X1, [X22]
	0x036F1384 LDRH W9, [X8 + 0x12E]
	0x036F1388 CBZ X9, 0x36F13AC
	0x036F138C LDR X10, [X8 + 0xB0]
	0x036F1390 ADD X10, X10, 0x8
	0x036F1394 LDUR X11, [X10 - 0x8]
	0x036F1398 CMP X11, X1
	0x036F139C B.EQ 0x36F13BC
	0x036F13A0 SUBS X9, X9, 0x1
	0x036F13A4 ADD X10, X10, 0x10
	0x036F13A8 B.NE 0x36F1394
	0x036F13AC MOVZ W2, 0x8
	0x036F13B0 MOV X0, X20
	0x036F13B4 BL 0x1C5C788
	0x036F13B8 B 0x36F13CC

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+160], X22
	004 Move [X31+168], X21
	005 Move [X31+176], X20
	006 Move [X31+184], X19
	007 Move X21, 0xCF0000
	008 Move X22, 0xA50000
	009 Move X20, 0xA2D000
	010 Move W8, [X21+2937]
	011 Move X22, [X22+2384]
	012 Move X20, [X20+2400]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xA50000
	019 Move X0, [X0+2384]
	020 Call 0x1C17CF4
	021 Move X0, 0xA2D000
	022 Move X0, [X0+2400]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2937], W8
	026 Move X1, [X22]
	027 Move X0, X19
	028 Call RigConstraint`3<TwistCorrectionJob, TwistCorrectionData, Object>.OnValidate, X0
	029 Add X19, X19, 56
	030 Add X0, X31, 8
	031 Move W2, 136
	032 Move X1, X19
	033 Call 0x3EB2AC0
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Add X0, X31, 8
	040 Move S0, -1
	041 Move S1, 1
	042 Call WeightedTransformArray.OnValidate, X0, V0, V1
	043 Add X1, X31, 8
	044 Move W2, 136
	045 Move X0, X19
	046 Call 0x3EB2AC0
	047 Move X20, [X31+176]
	048 Move X19, [X31+184]
	049 Move X22, [X31+160]
	050 Move X21, [X31+168]
	051 Move X30, [X31+144]
	052 Add X31, X31, 192
	053 Return 

Method: System.Void .ctor()

Disassembly:
	0x036F13BC LDR W9, [X10]
	0x036F13C0 ADD W9, W9, 0x8
	0x036F13C4 ADD X8, X8, W9, 0x4, SXTW
	0x036F13C8 ADD X0, X8, 0x138
	0x036F13CC LDP X8, X1, [X0]
	0x036F13D0 MOV X0, X20
	0x036F13D4 BLR X8
	0x036F13D8 TBZ X0, 0x0, 0x36F14D8
	0x036F13DC LDR X8, [X19 + 0x28]
	0x036F13E0 CBZ X8, 0x36F14EC
	0x036F13E4 LDR W9, [X8 + 0x18]
	0x036F13E8 CMP W23, W9
	0x036F13EC B.CS 0x36F1500
	0x036F13F0 ADD X8, X8, X23, 0x3, LSL
	0x036F13F4 LDR X20, [X8 + 0x20]
	0x036F13F8 CBZ X20, 0x36F14EC
	0x036F13FC LDR X8, [X20]
	0x036F1400 LDR X1, [X22]
	0x036F1404 LDRH W9, [X8 + 0x12E]
	0x036F1408 CBZ X9, 0x36F142C
	0x036F140C LDR X10, [X8 + 0xB0]
	0x036F1410 ADD X10, X10, 0x8
	0x036F1414 LDUR X11, [X10 - 0x8]
	0x036F1418 CMP X11, X1
	0x036F141C B.EQ 0x36F143C
	0x036F1420 SUBS X9, X9, 0x1
	0x036F1424 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCF0000
	006 Move X20, 0xA50000
	007 Move W8, [X21+2938]
	008 Move X20, [X20+2392]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA50000
	015 Move X0, [X0+2400]
	016 Call 0x1C17CF4
	017 Move X0, 0xA50000
	018 Move X0, [X0+2392]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2938], W8
	022 Move X0, [X20]
	023 Move X20, 0xA50000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2400]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call RigConstraint`3<TwistCorrectionJob, TwistCorrectionData, Object>..ctor, X0
	036 Return 

