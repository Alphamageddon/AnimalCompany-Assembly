Type: UnityEngine.Animations.Rigging.MultiPositionConstraintJobBinder`1

Method: UnityEngine.Animations.Rigging.MultiPositionConstraintJob Create(UnityEngine.Animator animator, ref T data, UnityEngine.Component component)

Disassembly:
	0x031A5330 STUR V0, [X8 + 0xC]
	0x031A5334 STR V1, [X8]
	0x031A5338 LDR W8, [X22 + 0x18]
	0x031A533C ADD X24, X24, 0xC
	0x031A5340 ADD X23, X23, 0x1C
	0x031A5344 CMP W25, W8
	0x031A5348 B.LT 0x31A525C
	0x031A534C LDR W1, [X20]
	0x031A5350 ADD X0, X31, 0x40
	0x031A5354 MOV X2, X31
	0x031A5358 BL 0x36E9118
	0x031A535C ADD X1, X31, 0x40
	0x031A5360 MOVZ W2, 0x58
	0x031A5364 MOV X0, X19
	0x031A5368 BL 0x3EB1AC0
	0x031A536C LDP X20, X19, [X31 + 0x100]
	0x031A5370 LDP X22, X21, [X31 + 0xF0]
	0x031A5374 LDP X24, X23, [X31 + 0xE0]
	0x031A5378 LDP X26, X25, [X31 + 0xD0]
	0x031A537C LDP X29, X30, [X31 + 0xC0]
	0x031A5380 LDP D9, D8, [X31 + 0xB0]
	0x031A5384 LDR V10, [X31 + 0xA0]
	0x031A5388 ADD X31, X31, 0x110
	0x031A538C RET
	0x031A5390 BL 0x1C16F28
	0x031A5394 BL 0x1C16F20
	0x031A5398 STR X30, [X31 - 0x30]!
	0x031A539C STP X22, X21, [X31 + 0x10]
	0x031A53A0 STP X20, X19, [X31 + 0x20]
	0x031A53A4 ADRP X22, 0x1236000
	0x031A53A8 ADRP X21, 0xF78000
	0x031A53AC ADRP X20, 0xF7A000
	0x031A53B0 LDRB W8, [X22 + 0xE24]
	0x031A53B4 LDR X21, [X21 + 0x950]
	0x031A53B8 LDR X20, [X20 + 0x248]
	0x031A53BC MOV X19, X1
	0x031A53C0 TBNZ X8, 0x0, 0x31A53E4
	0x031A53C4 ADRP X0, 0xF7A000
	0x031A53C8 LDR X0, [X0 + 0x248]
	0x031A53CC BL 0x1C16CF4
	0x031A53D0 ADRP X0, 0xF78000
	0x031A53D4 LDR X0, [X0 + 0x950]
	0x031A53D8 BL 0x1C16CF4
	0x031A53DC MOVZ W8, 0x1
	0x031A53E0 STRB W8, [X22 + 0xE24]
	0x031A53E4 LDR X1, [X21]
	0x031A53E8 ADD X0, X19, 0x10
	0x031A53EC BL 0x23E19F4
	0x031A53F0 LDR X1, [X20]
	0x031A53F4 ADD X0, X19, 0x20
	0x031A53F8 BL 0x31A6A1C
	0x031A53FC LDR X1, [X20]
	0x031A5400 ADD X0, X19, 0x30
	0x031A5404 LDP X20, X19, [X31 + 0x20]
	0x031A5408 LDP X22, X21, [X31 + 0x10]
	0x031A540C LDR X30, [X31], #0x30
	0x031A5410 B 0x31A6A1C
	0x031A5414 LDR X8, [X1 + 0x20]
	0x031A5418 LDR X8, [X8 + 0xC0]
	0x031A541C LDR X1, [X8 + 0x28]
	0x031A5420 B 0x2B84F6C
	0x031A5424 STR D10, [X31 - 0x80]!
	0x031A5428 STP D9, D8, [X31 + 0x10]
	0x031A542C STP X29, X30, [X31 + 0x20]
	0x031A5430 STP X28, X27, [X31 + 0x30]
	0x031A5434 STP X26, X25, [X31 + 0x40]
	0x031A5438 STP X24, X23, [X31 + 0x50]
	0x031A543C STP X22, X21, [X31 + 0x60]
	0x031A5440 STP X20, X19, [X31 + 0x70]
	0x031A5444 ADD X29, X31, 0x20
	0x031A5448 SUB X31, X31, 0xC0
	0x031A544C MRS X27, 0xC000
	0x031A5450 LDR X9, [X27 + 0x28]
	0x031A5454 ADRP X19, 0x1236000
	0x031A5458 MOV X21, X4
	0x031A545C MOV X24, X3
	0x031A5460 STUR X9, [X29 - 0x30]
	0x031A5464 LDRB W9, [X19 + 0xE25]
	0x031A5468 MOV X20, X2
	0x031A546C MOV X22, X1
	0x031A5470 STUR X8, [X29 - 0xD8]
	0x031A5474 TBNZ X9, 0x0, 0x31A5498
	0x031A5478 ADRP X0, 0xF7A000
	0x031A547C LDR X0, [X0 + 0x240]
	0x031A5480 BL 0x1C16CF4
	0x031A5484 ADRP X0, 0xF78000
	0x031A5488 LDR X0, [X0 + 0x948]
	0x031A548C BL 0x1C16CF4
	0x031A5490 MOVZ W8, 0x1
	0x031A5494 STRB W8, [X19 + 0xE25]
	0x031A5498 LDR X8, [X21 + 0x20]
	0x031A549C LDR X9, [X8 + 0xC0]
	0x031A54A0 LDR X8, [X9 + 0x8]
	0x031A54A4 ADD X10, X8, 0x135
	0x031A54A8 LDRH W10, [X10]
	0x031A54AC TBNZ X10, 0x0, 0x31A54D0
	0x031A54B0 MOV X0, X8
	0x031A54B4 BL 0x1C5C684
	0x031A54B8 LDR X8, [X21 + 0x20]
	0x031A54BC LDR X9, [X8 + 0xC0]
	0x031A54C0 LDR X8, [X9 + 0x8]
	0x031A54C4 ADD X10, X8, 0x135
	0x031A54C8 LDRH W10, [X10]
	0x031A54CC B 0x31A54D4
	0x031A54D0 MOV X0, X8
	0x031A54D4 LDR W11, [X0 + 0xFC]
	0x031A54D8 ADD X12, X31, 0x0
	0x031A54DC ADD W11, W11, 0x10
	0x031A54E0 ADD X11, X11, 0xF
	0x031A54E4 AND X11, X11, 0x1FFFFFFFF
	0x031A54E8 SUB X25, X12, X11
	0x031A54EC ADD X31, X25, 0x0
	0x031A54F0 TBNZ X10, 0x0, 0x31A5514
	0x031A54F4 MOV X0, X8
	0x031A54F8 BL 0x1C5C684
	0x031A54FC LDR X8, [X21 + 0x20]
	0x031A5500 LDR X9, [X8 + 0xC0]
	0x031A5504 LDR X8, [X9 + 0x8]
	0x031A5508 ADD X10, X8, 0x135
	0x031A550C LDRH W10, [X10]
	0x031A5510 B 0x31A5518
	0x031A5514 MOV X0, X8
	0x031A5518 LDR W11, [X0 + 0xFC]
	0x031A551C ADD X12, X31, 0x0
	0x031A5520 ADD W11, W11, 0x10
	0x031A5524 ADD X11, X11, 0xF
	0x031A5528 AND X11, X11, 0x1FFFFFFFF
	0x031A552C SUB X26, X12, X11
	0x031A5530 ADD X31, X26, 0x0
	0x031A5534 TBNZ X10, 0x0, 0x31A554C
	0x031A5538 MOV X0, X8
	0x031A553C BL 0x1C5C684
	0x031A5540 LDR X8, [X21 + 0x20]
	0x031A5544 LDR X9, [X8 + 0xC0]
	0x031A5548 MOV X8, X0
	0x031A554C LDR W8, [X8 + 0xFC]
	0x031A5550 ADD X10, X31, 0x0
	0x031A5554 ADD W8, W8, 0x10
	0x031A5558 ADD X8, X8, 0xF
	0x031A555C AND X8, X8, 0x1FFFFFFFF
	0x031A5560 SUB X23, X10, X8
	0x031A5564 ADD X31, X23, 0x0
	0x031A5568 MOVI V0.2D, 0x0
	0x031A556C STUR X31, [X29 - 0x40]
	0x031A5570 STP V0, V0, [X29 - 0x60]
	0x031A5574 STP V0, V0, [X29 - 0x80]
	0x031A5578 STUR V0, [X29 - 0x90]
	0x031A557C LDR X0, [X9 + 0x8]
	0x031A5580 LDRB W8, [X0 + 0x135]
	0x031A5584 TBNZ X8, 0x0, 0x31A5594
	0x031A5588 BL 0x1C5C684
	0x031A558C LDR X8, [X21 + 0x20]
	0x031A5590 LDR X9, [X8 + 0xC0]
	0x031A5594 LDR X1, [X9 + 0x10]
	0x031A5598 SUB X5, X29, 0xD0
	0x031A559C MOV X2, X25
	0x031A55A0 MOV X3, X20
	0x031A55A4 MOV X4, X31
	0x031A55A8 BL 0x1C17728
	0x031A55AC LDR X8, [X21 + 0x20]
	0x031A55B0 LDUR X25, [X29 - 0xD0]
	0x031A55B4 LDR X8, [X8 + 0xC0]
	0x031A55B8 LDR X0, [X8 + 0x8]
	0x031A55BC LDRB W9, [X0 + 0x135]
	0x031A55C0 TBNZ X9, 0x0, 0x31A55D0
	0x031A55C4 BL 0x1C5C684
	0x031A55C8 LDR X8, [X21 + 0x20]
	0x031A55CC LDR X8, [X8 + 0xC0]
	0x031A55D0 LDR X1, [X8 + 0x18]
	0x031A55D4 SUB X5, X29, 0xD0
	0x031A55D8 MOV X2, X26
	0x031A55DC MOV X3, X20
	0x031A55E0 MOV X4, X31
	0x031A55E4 BL 0x1C17728
	0x031A55E8 LDUR X2, [X29 - 0xD0]
	0x031A55EC MOV X0, X22
	0x031A55F0 MOV X1, X24
	0x031A55F4 MOV X3, X31
	0x031A55F8 BL 0x36E5080
	0x031A55FC STP X0, X1, [X29 - 0x90]
	0x031A5600 CBZ X25, 0x31A5820
	0x031A5604 ADRP X8, 0xF78000
	0x031A5608 LDR X8, [X8 + 0x948]
	0x031A560C STP X31, X31, [X29 - 0xD0]
	0x031A5610 LDR W1, [X25 + 0x18]
	0x031A5614 ADRP X19, 0xF7A000
	0x031A5618 LDR X4, [X8]
	0x031A561C LDR X19, [X19 + 0x240]
	0x031A5620 SUB X0, X29, 0xD0
	0x031A5624 MOVZ W2, 0x4
	0x031A5628 MOV W3, W31
	0x031A562C BL 0x23E17A0
	0x031A5630 LDUR V0, [X29 - 0xD0]
	0x031A5634 STP X31, X31, [X29 - 0xA0]
	0x031A5638 LDR X4, [X19]
	0x031A563C SUB X0, X29, 0xA0
	0x031A5640 STUR V0, [X29 - 0x80]
	0x031A5644 LDR W1, [X25 + 0x18]
	0x031A5648 MOVZ W2, 0x4
	0x031A564C MOV W3, W31
	0x031A5650 BL 0x31A6760
	0x031A5654 LDUR V0, [X29 - 0xA0]
	0x031A5658 STP X31, X31, [X29 - 0xB0]
	0x031A565C LDR X4, [X19]
	0x031A5660 SUB X0, X29, 0xB0
	0x031A5664 STUR V0, [X29 - 0x70]
	0x031A5668 LDR W8, [X25 + 0x18]
	0x031A566C MOVZ W2, 0x4
	0x031A5670 MOV W3, W31
	0x031A5674 SUB W1, W8, 0x1
	0x031A5678 BL 0x31A6760
	0x031A567C LDUR V0, [X29 - 0xB0]
	0x031A5680 STUR V0, [X29 - 0x60]
	0x031A5684 LDR W8, [X25 + 0x18]
	0x031A5688 CMP W8, 0x1
	0x031A568C B.LT 0x31A5790
	0x031A5690 MOV X24, X31
	0x031A5694 MOV X26, X31
	0x031A5698 MOV X28, X31
	0x031A569C ADD X19, X25, 0x20
	0x031A56A0 CMP W28, W8
	0x031A56A4 B.CS 0x31A5824
	0x031A56A8 LDR X0, [X19, X28, LSL #3]
	0x031A56AC CBZ X0, 0x31A5820
	0x031A56B0 MOV X1, X31
	0x031A56B4 BL 0x3C32E90
	0x031A56B8 MOV X1, X0
	0x031A56BC MOV X0, X22
	0x031A56C0 MOV X2, X31
	0x031A56C4 BL 0x36EADF0
	0x031A56C8 LDUR X8, [X29 - 0x80]
	0x031A56CC ADD X8, X8, X26
	0x031A56D0 STR X0, [X8]
	0x031A56D4 STR W1, [X8 + 0x8]
	0x031A56D8 LDR W8, [X25 + 0x18]
	0x031A56DC CMP W28, W8
	0x031A56E0 B.CS 0x31A5824
	0x031A56E4 LDR X0, [X19, X28, LSL #3]
	0x031A56E8 CBZ X0, 0x31A5820
	0x031A56EC MOV X1, X31
	0x031A56F0 BL 0x3C3F58C
	0x031A56F4 LDR W8, [X25 + 0x18]
	0x031A56F8 CMP W28, W8
	0x031A56FC B.CS 0x31A5824
	0x031A5700 LDR X0, [X19, X28, LSL #3]
	0x031A5704 CBZ X0, 0x31A5820
	0x031A5708 MOV X1, X31
	0x031A570C MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-128], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Subtract X31, X31, 768
	017 Move X24, 0x1237000
	018 Move W9, [X24+3615]
	019 Move X21, X4
	020 Move X22, X3
	021 Move X20, X2
	022 Move X23, X1
	023 Move X19, X8
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {42}
	028 Move X0, 0xF58000
	029 Move X0, [X0+2536]
	030 Call 0x1C17CF4
	031 Move X0, 0xF79000
	032 Move X0, [X0+296]
	033 Call 0x1C17CF4
	034 Move X0, 0xF7A000
	035 Move X0, [X0+496]
	036 Call 0x1C17CF4
	037 Move X0, 0xF79000
	038 Move X0, [X0+2400]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X24+3615], W8
	042 Add X0, X31, 448
	043 Move W2, 136
	044 Move W1, W31
	045 Call 0x3EB2B10
	046 Add X0, X31, 584
	047 Move W2, 184
	048 Move W1, W31
	049 Add X25, X31, 584
	050 Call 0x3EB2B10
	051 Move X1, [X20]
	052 Move X0, X23
	053 Move X2, X31
	054 Call ReadWriteTransformHandle.Bind, X0, X1
	055 Move [X31+584], X0
	056 Move [X31+592], W1
	057 Move X0, [X20]
	058 Compare X0, 0
	059 JumpIfEqual {276}
	060 Move X26, 0xF79000
	061 Move X29, 0xF7A000
	062 Move X28, 0xF79000
	063 Move X26, [X26+2400]
	064 Move X29, [X29+496]
	065 Move X28, [X28+296]
	066 Move X1, X31
	067 Add X27, X31, 584
	068 Add X24, X31, 176
	069 Call Transform.get_parent, X0
	070 Move X1, X0
	071 Add X8, X31, 176
	072 Move X0, X23
	073 Move X2, X31
	074 Call ReadOnlyTransformHandle.Bind, X0, X1
	075 Move V0, [X24]
	076 Move X8, [X31+192]
	077 Move X0, X20
	078 Move [X27+12], V0
	079 Move [X27+28], X8
	080 Move X8, [X21+32]
	081 Move X8, [X8+192]
	082 Move X1, [X8+24]
	083 Call MultiPositionConstraintData.UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_offsetVector3Property, X0
	084 Move X2, X0
	085 Add X8, X31, 176
	086 Move X0, X23
	087 Move X1, X22
	088 Move X3, X31
	089 Call Vector3Property.Bind, X0, X1, X2
	090 Move V0, [X24]
	091 Move V1, [X24+16]
	092 Move V2, [X24+2]
	093 Add X24, X20, 8
	094 Add X0, X31, 448
	095 Move W2, 136
	096 Move X1, X24
	097 Move [X27+36], V0
	098 Move [X27+52], V1
	099 Move [X27+68], V2
	100 Call 0x3EB2AC0
	101 Add X0, X31, 312
	102 Move W2, 136
	103 Move X1, X24
	104 Call 0x3EB2AC0
	105 Add X3, X25, 88
	106 Add X2, X31, 312
	107 Move X0, X23
	108 Move X1, X22
	109 Move X4, X31
	110 Call WeightedTransformArrayBinder.BindReadOnlyTransforms, X0, X1, X2, X3
	111 Add X0, X31, 176
	112 Add X1, X31, 448
	113 Move W2, 136
	114 Call 0x3EB2AC0
	115 Move X8, [X21+32]
	116 Move X0, X20
	117 Move X8, [X8+192]
	118 Move X1, [X8+40]
	119 Call MultiPositionConstraintData.UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_sourceObjectsProperty, X0
	120 Move X24, X0
	121 Add X0, X31, 40
	122 Add X1, X31, 176
	123 Move W2, 136
	124 Add X25, X25, 104
	125 Call 0x3EB2AC0
	126 Add X2, X31, 40
	127 Move X0, X23
	128 Move X1, X22
	129 Move X3, X24
	130 Move X4, X25
	131 Move X5, X31
	132 Call WeightedTransformArrayBinder.BindWeights, X0, X1, X2, X3, X4
	133 Move X0, [X26]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move W22, [X31+448]
	139 Move X4, [X29]
	140 Add X0, X31, 24
	141 Move W2, 4
	142 Move W1, W22
	143 Move W3, W31
	144 Move [X31+24], X31
	145 Move [X31+32], X31
	146 Call NativeArray`1<Vector3>..ctor, X0, X1, X2, X3
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 Move X4, [X28]
	149 Add X0, X31, 8
	150 Move W2, 4
	151 Move W1, W22
	152 Move W3, W31
	153 Move [X27+120], V0
	154 Move [X31+8], X31
	155 Move [X31+16], X31
	156 Call NativeArray`1<Single>..ctor, X0, X1, X2, X3
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 Move [X27+136], V0
	159 Move X0, [X20]
	160 Compare X0, 0
	161 JumpIfEqual {276}
	162 Move X24, 0xF58000
	163 Move X24, [X24+2536]
	164 Move X1, X31
	165 Call Transform.get_position, X0
	166 Move X23, 0xF4F000
	167 Move X23, [X23+1440]
	168 Move V8, V0
	169 Move V9, V1
	170 Move V10, V2
	171 Move X25, X31
	172 Move X22, X31
	173 Move X27, 0x1234000
	174 Move W28, 1
	175 Move X0, [X26]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 NotImplemented "Instruction LDRSW not yet implemented."
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move W8, [X20+159]
	183 Compare W8, 0
	184 JumpIfEqual {201}
	185 Move X0, [X26]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Add X0, X31, 448
	191 Move W1, W22
	192 Move X2, X31
	193 Call WeightedTransformArray.get_Item, X0, X1
	194 Compare X0, 0
	195 JumpIfEqual {276}
	196 Move X1, X31
	197 Call Transform.get_position, X0
	198 Subtract S0, S8, S0
	199 Subtract S1, S9, S1
	200 Subtract S2, S10, S2
	201 Move W8, [X27+1923]
	202 Compare W8, 0
	203 JumpIfNotEqual {207}
	204 Move X0, X23
	205 Call 0x1C17CF4
	206 Move [X27+1923], W28
	207 Move X8, [X23]
	208 Move X8, [X8+184]
	209 Move S0, [X8]
	210 Move S1, [X8+4]
	211 Move V2, [X8+8]
	212 Move X8, [X31+704]
	213 Add X22, X22, 1
	214 Add X8, X8, X25
	215 Add X25, X25, 12
	216 Move [X8], S0
	217 Move [X8+8], S1
	218 Move [X8+8], S2
	219 Move X8, [X21+32]
	220 Move X0, X20
	221 Move X8, [X8+192]
	222 Move X1, [X8+56]
	223 Call MultiPositionConstraintData.get_constrainedXAxis, X0
	224 Move X8, [X24]
	225 Move W22, W0
	226 Move W9, [X8+224]
	227 Compare W9, 0
	228 JumpIfNotEqual {231}
	229 Move X0, X8
	230 Call 0x1C17DFC
	231 And W0, W22, 1
	232 Move X1, X31
	233 Call Convert.ToSingle, X0
	234 Move X8, [X21+32]
	235 Move X0, X20
	236 Move V8, V0
	237 Move X8, [X8+192]
	238 Move X1, [X8+64]
	239 Call MultiPositionConstraintData.get_constrainedYAxis, X0
	240 And W0, W0, 1
	241 Move X1, X31
	242 Call Convert.ToSingle, X0
	243 Move X8, [X21+32]
	244 Move X0, X20
	245 Move V9, V0
	246 Move X8, [X8+192]
	247 Move X1, [X8+72]
	248 Call MultiPositionConstraintData.get_constrainedZAxis, X0
	249 And W0, W0, 1
	250 Move X1, X31
	251 Call Convert.ToSingle, X0
	252 Add X1, X31, 584
	253 Move W2, 184
	254 Move X0, X19
	255 Move [X31+736], S8
	256 Move [X31+740], S9
	257 Move [X31+744], S0
	258 Call 0x3EB2AC0
	259 Add X31, X31, 768
	260 Move X20, [X31+112]
	261 Move X19, [X31+120]
	262 Move X22, [X31+96]
	263 Move X21, [X31+104]
	264 Move X24, [X31+80]
	265 Move X23, [X31+88]
	266 Move X26, [X31+64]
	267 Move X25, [X31+72]
	268 Move X28, [X31+48]
	269 Move X27, [X31+56]
	270 Move X29, [X31+32]
	271 Move X30, [X31+40]
	272 Move D9, [X31+16]
	273 Move D8, [X31+24]
	274 Move V10, [X31+128]
	275 Return X0
	276 Call 0x1C17F20

Method: System.Void Destroy(UnityEngine.Animations.Rigging.MultiPositionConstraintJob job)

Disassembly:
	0x031A5710 MOV V9.16B, V1.16B
	0x031A5714 MOV V10.16B, V2.16B
	0x031A5718 BL 0x3C3DEB4
	0x031A571C MOV V4.16B, V0.16B
	0x031A5720 MOV V5.16B, V1.16B
	0x031A5724 MOV V6.16B, V2.16B
	0x031A5728 MOV V7.16B, V3.16B
	0x031A572C SUB X0, X29, 0xD0
	0x031A5730 MOV V0.16B, V8.16B
	0x031A5734 MOV V1.16B, V9.16B
	0x031A5738 MOV V2.16B, V10.16B
	0x031A573C MOV V3.16B, V4.16B
	0x031A5740 MOV V4.16B, V5.16B
	0x031A5744 MOV V5.16B, V6.16B
	0x031A5748 MOV V6.16B, V7.16B
	0x031A574C MOV X1, X31
	0x031A5750 STP X31, X31, [X29 - 0xD0]
	0x031A5754 STUR W31, [X29 - 0xB8]
	0x031A5758 STUR X31, [X29 - 0xC0]
	0x031A575C BL 0x36E4E50
	0x031A5760 LDUR X8, [X29 - 0x70]
	0x031A5764 LDUR V0, [X29 - 0xC4]
	0x031A5768 LDUR V1, [X29 - 0xD0]
	0x031A576C ADD X28, X28, 0x1
	0x031A5770 ADD X8, X8, X24
	0x031A5774 STUR V0, [X8 + 0xC]
	0x031A5778 STR V1, [X8]
	0x031A577C LDR W8, [X25 + 0x18]
	0x031A5780 ADD X26, X26, 0xC
	0x031A5784 ADD X24, X24, 0x1C
	0x031A5788 CMP W28, W8
	0x031A578C B.LT 0x31A56A0
	0x031A5790 LDR X8, [X21 + 0x20]
	0x031A5794 LDR X8, [X8 + 0xC0]
	0x031A5798 LDR X0, [X8 + 0x8]
	0x031A579C LDRB W9, [X0 + 0x135]
	0x031A57A0 TBNZ X9, 0x0, 0x31A57B0
	0x031A57A4 BL 0x1C5C684
	0x031A57A8 LDR X8, [X21 + 0x20]
	0x031A57AC LDR X8, [X8 + 0xC0]
	0x031A57B0 LDR X1, [X8 + 0x20]
	0x031A57B4 SUB X5, X29, 0xD0
	0x031A57B8 MOV X2, X23
	0x031A57BC MOV X3, X20
	0x031A57C0 MOV X4, X31
	0x031A57C4 BL 0x1C17728

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1237000
	009 Move X23, 0xF7B000
	010 Move X22, 0xF79000
	011 Move X21, 0xF7A000
	012 Move X20, 0xF79000
	013 Move W8, [X24+3616]
	014 Move X23, [X23+568]
	015 Move X22, [X22+336]
	016 Move X21, [X21+504]
	017 Move X20, [X20+344]
	018 Move X19, X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xF79000
	024 Move X0, [X0+336]
	025 Call 0x1C17CF4
	026 Move X0, 0xF7B000
	027 Move X0, [X0+568]
	028 Call 0x1C17CF4
	029 Move X0, 0xF7A000
	030 Move X0, [X0+504]
	031 Call 0x1C17CF4
	032 Move X0, 0xF79000
	033 Move X0, [X0+344]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+3616], W8
	037 Move X1, [X23]
	038 Add X0, X19, 88
	039 Call NativeArray`1<ReadOnlyTransformHandle>.Dispose, X0
	040 Move X1, [X22]
	041 Add X0, X19, 104
	042 Call NativeArray`1<PropertyStreamHandle>.Dispose, X0
	043 Move X1, [X21]
	044 Add X0, X19, 120
	045 Call NativeArray`1<Vector3>.Dispose, X0
	046 Move X1, [X20]
	047 Add X0, X19, 136
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move X30, [X31+64]
	055 Call NativeArray`1<Single>.Dispose, X0
	056 Return 

Method: System.Void .ctor()

Disassembly:
	0x031A57C8 LDUR W1, [X29 - 0xD0]
	0x031A57CC SUB X0, X29, 0x90
	0x031A57D0 MOV X2, X31
	0x031A57D4 BL 0x36E9118

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+80]
	004 Call AnimationJobBinder`2<MultiPositionConstraintJob, MultiPositionConstraintData>..ctor, X0
	005 Return 

