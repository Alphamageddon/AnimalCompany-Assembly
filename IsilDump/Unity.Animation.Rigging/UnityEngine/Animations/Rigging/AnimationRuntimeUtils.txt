Type: UnityEngine.Animations.Rigging.AnimationRuntimeUtils

Method: System.Void SolveTwoBoneIK(UnityEngine.Animations.AnimationStream stream, UnityEngine.Animations.Rigging.ReadWriteTransformHandle root, UnityEngine.Animations.Rigging.ReadWriteTransformHandle mid, UnityEngine.Animations.Rigging.ReadWriteTransformHandle tip, UnityEngine.Animations.Rigging.ReadOnlyTransformHandle target, UnityEngine.Animations.Rigging.ReadOnlyTransformHandle hint, System.Single posWeight, System.Single rotWeight, System.Single hintWeight, UnityEngine.Animations.Rigging.AffineTransform targetOffset)

Disassembly:
	0x036ECD50 ADRP X24, 0xA31000
	0x036ECD54 LDR W8, [X0 + 0xE0]
	0x036ECD58 LDR X24, [X24 + 0x130]
	0x036ECD5C CBNZ W8, 0x36ECD64
	0x036ECD60 BL 0x1C16DFC
	0x036ECD64 ADRP X27, 0xA54000
	0x036ECD68 LDR X27, [X27 + 0x7C0]
	0x036ECD6C LDR W1, [X21]
	0x036ECD70 LDR X4, [X24]
	0x036ECD74 ADRP X28, 0xA54000
	0x036ECD78 LDR X28, [X28 + 0x7B8]
	0x036ECD7C ADD X0, X31, 0x8
	0x036ECD80 MOVZ W2, 0x4
	0x036ECD84 MOV W3, W31
	0x036ECD88 STP X31, X31, [X31 + 0x8]
	0x036ECD8C BL 0x23DEBC4
	0x036ECD90 LDUR V0, [X31 + 0x8]
	0x036ECD94 MOV W24, W31
	0x036ECD98 STR V0, [X19]
	0x036ECD9C STR W31, [X31 + 0x1C]
	0x036ECDA0 LDR X0, [X26]
	0x036ECDA4 LDR W8, [X0 + 0xE0]
	0x036ECDA8 CBNZ W8, 0x36ECDB0
	0x036ECDAC BL 0x1C16DFC
	0x036ECDB0 LDR W8, [X21]
	0x036ECDB4 CMP W24, W8
	0x036ECDB8 B.GE 0x36ECE3C
	0x036ECDBC CBZ X22, 0x36ECE5C
	0x036ECDC0 LDRSW X29, [X31 + 0x1C]
	0x036ECDC4 MOV X0, X22
	0x036ECDC8 MOV X1, X31
	0x036ECDCC BL 0x3C32E90
	0x036ECDD0 MOV X24, X0
	0x036ECDD4 MOV X0, X22
	0x036ECDD8 MOV X1, X31
	0x036ECDDC BL 0x33BE520
	0x036ECDE0 MOV X25, X0
	0x036ECDE4 ADD X0, X31, 0x1C
	0x036ECDE8 MOV X1, X31
	0x036ECDEC BL 0x337B6E0
	0x036ECDF0 LDR X1, [X27]
	0x036ECDF4 LDR X3, [X28]
	0x036ECDF8 MOV X2, X0
	0x036ECDFC MOV X0, X20
	0x036ECE00 MOV X4, X31
	0x036ECE04 BL 0x32277C4
	0x036ECE08 MOV X3, X0
	0x036ECE0C MOV X0, X23
	0x036ECE10 MOV X1, X24
	0x036ECE14 MOV X2, X25
	0x036ECE18 MOV X4, X31
	0x036ECE1C BL 0x3BFB030
	0x036ECE20 LDR X8, [X19]
	0x036ECE24 ADD X8, X8, X29, 0x4, LSL
	0x036ECE28 STP X0, X1, [X8]
	0x036ECE2C LDR W8, [X31 + 0x1C]
	0x036ECE30 ADD W24, W8, 0x1
	0x036ECE34 STR W24, [X31 + 0x1C]
	0x036ECE38 B 0x36ECDA0
	0x036ECE3C LDP X20, X19, [X31 + 0x70]
	0x036ECE40 LDP X22, X21, [X31 + 0x60]
	0x036ECE44 LDP X24, X23, [X31 + 0x50]
	0x036ECE48 LDP X26, X25, [X31 + 0x40]
	0x036ECE4C LDP X28, X27, [X31 + 0x30]
	0x036ECE50 LDP X29, X30, [X31 + 0x20]
	0x036ECE54 ADD X31, X31, 0x80
	0x036ECE58 RET
	0x036ECE5C BL 0x1C16F20
	0x036ECE60 MOV X1, X31
	0x036ECE64 B 0x33BDD8C
	0x036ECE68 LDR X0, [X0]
	0x036ECE6C RET
	0x036ECE70 STR X1, [X0]
	0x036ECE74 RET
	0x036ECE78 LDR X0, [X0 + 0x8]
	0x036ECE7C RET
	0x036ECE80 STR X1, [X0 + 0x8]
	0x036ECE84 RET
	0x036ECE88 LDR X0, [X0 + 0x10]
	0x036ECE8C RET
	0x036ECE90 STR X1, [X0 + 0x10]
	0x036ECE94 RET
	0x036ECE98 LDRB W0, [X0 + 0x18]
	0x036ECE9C RET
	0x036ECEA0 AND W8, W1, 0x1
	0x036ECEA4 STRB W8, [X0 + 0x18]
	0x036ECEA8 RET
	0x036ECEAC LDRB W0, [X0 + 0x19]
	0x036ECEB0 RET
	0x036ECEB4 AND W8, W1, 0x1
	0x036ECEB8 STRB W8, [X0 + 0x19]
	0x036ECEBC RET
	0x036ECEC0 LDR V0, [X0 + 0x1C]
	0x036ECEC4 RET
	0x036ECEC8 FMOV S1, 1
	0x036ECECC FCMP S0, 0x0
	0x036ECED0 FMIN S0, S0, S1
	0x036ECED4 FMOV S1, W31
	0x036ECED8 FCSEL S0, S0, S1, PL
	0x036ECEDC STR S0, [X0 + 0x1C]
	0x036ECEE0 RET
	0x036ECEE4 LDR V0, [X0 + 0x20]
	0x036ECEE8 RET
	0x036ECEEC FMOV S1, 1
	0x036ECEF0 FCMP S0, 0x0
	0x036ECEF4 FMIN S0, S0, S1
	0x036ECEF8 FMOV S1, W31
	0x036ECEFC FCSEL S0, S0, S1, PL
	0x036ECF00 STR S0, [X0 + 0x20]
	0x036ECF04 RET
	0x036ECF08 LDRB W0, [X0 + 0x24]
	0x036ECF0C RET
	0x036ECF10 AND W8, W1, 0x1
	0x036ECF14 STRB W8, [X0 + 0x24]
	0x036ECF18 RET
	0x036ECF1C LDRB W0, [X0 + 0x25]
	0x036ECF20 RET
	0x036ECF24 AND W8, W1, 0x1
	0x036ECF28 STRB W8, [X0 + 0x25]
	0x036ECF2C RET
	0x036ECF30 STR X30, [X31 - 0x20]!
	0x036ECF34 STP X20, X19, [X31 + 0x10]
	0x036ECF38 ADRP X19, 0xCF4000
	0x036ECF3C ADRP X20, 0xA54000
	0x036ECF40 LDRB W8, [X19 + 0xB39]
	0x036ECF44 LDR X20, [X20 + 0x7C8]
	0x036ECF48 TBNZ X8, 0x0, 0x36ECF60
	0x036ECF4C ADRP X0, 0xA54000
	0x036ECF50 LDR X0, [X0 + 0x7C8]
	0x036ECF54 BL 0x1C16CF4
	0x036ECF58 MOVZ W8, 0x1
	0x036ECF5C STRB W8, [X19 + 0xB39]
	0x036ECF60 LDR X0, [X20]
	0x036ECF64 LDP X20, X19, [X31 + 0x10]
	0x036ECF68 LDR X30, [X31], #0x20
	0x036ECF6C B 0x36ECF70
	0x036ECF70 STP X30, X21, [X31 - 0x20]!
	0x036ECF74 STP X20, X19, [X31 + 0x10]
	0x036ECF78 ADRP X20, 0xCF4000
	0x036ECF7C ADRP X21, 0xA54000
	0x036ECF80 LDRB W8, [X20 + 0xBDD]
	0x036ECF84 LDR X21, [X21 + 0x7D0]
	0x036ECF88 MOV X19, X0
	0x036ECF8C TBNZ X8, 0x0, 0x36ECFA4
	0x036ECF90 ADRP X0, 0xA54000
	0x036ECF94 LDR X0, [X0 + 0x7D0]
	0x036ECF98 BL 0x1C16CF4
	0x036ECF9C MOVZ W8, 0x1
	0x036ECFA0 STRB W8, [X20 + 0xBDD]
	0x036ECFA4 LDR X0, [X21]
	0x036ECFA8 MOV X1, X19
	0x036ECFAC LDP X20, X19, [X31 + 0x10]
	0x036ECFB0 MOV X2, X31
	0x036ECFB4 LDP X30, X21, [X31], #0x20
	0x036ECFB8 B 0x321B938
	0x036ECFBC STR X30, [X31 - 0x20]!
	0x036ECFC0 STP X20, X19, [X31 + 0x10]
	0x036ECFC4 ADRP X19, 0xCF4000
	0x036ECFC8 ADRP X20, 0xA54000
	0x036ECFCC LDRB W8, [X19 + 0xB3A]
	0x036ECFD0 LDR X20, [X20 + 0x7D8]
	0x036ECFD4 TBNZ X8, 0x0, 0x36ECFEC
	0x036ECFD8 ADRP X0, 0xA54000
	0x036ECFDC LDR X0, [X0 + 0x7D8]
	0x036ECFE0 BL 0x1C16CF4
	0x036ECFE4 MOVZ W8, 0x1
	0x036ECFE8 STRB W8, [X19 + 0xB3A]
	0x036ECFEC LDR X0, [X20]
	0x036ECFF0 LDP X20, X19, [X31 + 0x10]
	0x036ECFF4 LDR X30, [X31], #0x20
	0x036ECFF8 B 0x36ECF70
	0x036ECFFC STR X30, [X31 - 0x20]!
	0x036ED000 STP X20, X19, [X31 + 0x10]
	0x036ED004 ADRP X19, 0xCF3000
	0x036ED008 ADRP X20, 0xA53000
	0x036ED00C LDRB W8, [X19 + 0xB3B]
	0x036ED010 LDR X20, [X20 + 0x7E0]
	0x036ED014 TBNZ X8, 0x0, 0x36ED02C
	0x036ED018 ADRP X0, 0xA53000
	0x036ED01C LDR X0, [X0 + 0x7E0]
	0x036ED020 BL 0x1C16CF4
	0x036ED024 MOVZ W8, 0x1
	0x036ED028 STRB W8, [X19 + 0xB3B]
	0x036ED02C LDR X0, [X20]
	0x036ED030 LDP X20, X19, [X31 + 0x10]
	0x036ED034 LDR X30, [X31], #0x20
	0x036ED038 B 0x36ECF70
	0x036ED03C STR X30, [X31 - 0x20]!
	0x036ED040 STP X20, X19, [X31 + 0x10]
	0x036ED044 ADRP X19, 0xCF3000
	0x036ED048 ADRP X20, 0xA53000
	0x036ED04C LDRB W8, [X19 + 0xB3C]
	0x036ED050 LDR X20, [X20 + 0x7E8]
	0x036ED054 TBNZ X8, 0x0, 0x36ED06C
	0x036ED058 ADRP X0, 0xA53000
	0x036ED05C LDR X0, [X0 + 0x7E8]
	0x036ED060 BL 0x1C16CF4
	0x036ED064 MOVZ W8, 0x1
	0x036ED068 STRB W8, [X19 + 0xB3C]
	0x036ED06C LDR X0, [X20]
	0x036ED070 LDP X20, X19, [X31 + 0x10]
	0x036ED074 LDR X30, [X31], #0x20
	0x036ED078 B 0x36ECF70
	0x036ED07C STP X30, X21, [X31 - 0x20]!
	0x036ED080 STP X20, X19, [X31 + 0x10]
	0x036ED084 ADRP X20, 0xCF3000
	0x036ED088 ADRP X21, 0xA06000
	0x036ED08C LDRB W8, [X20 + 0xB3D]
	0x036ED090 LDR X21, [X21 + 0x598]
	0x036ED094 MOV X19, X0
	0x036ED098 TBNZ X8, 0x0, 0x36ED0B0
	0x036ED09C ADRP X0, 0xA06000
	0x036ED0A0 LDR X0, [X0 + 0x598]
	0x036ED0A4 BL 0x1C16CF4
	0x036ED0A8 MOVZ W8, 0x1
	0x036ED0AC STRB W8, [X20 + 0xB3D]
	0x036ED0B0 LDR X0, [X21]
	0x036ED0B4 LDR X20, [X19]
	0x036ED0B8 LDR W8, [X0 + 0xE0]
	0x036ED0BC CBNZ W8, 0x36ED0C4
	0x036ED0C0 BL 0x1C16DFC
	0x036ED0C4 MOV X0, X20
	0x036ED0C8 MOV X1, X31
	0x036ED0CC MOV X2, X31
	0x036ED0D0 BL 0x3C3883C
	0x036ED0D4 TBNZ X0, 0x0, 0x36ED100
	0x036ED0D8 LDR X0, [X21]
	0x036ED0DC LDR X20, [X19 + 0x8]
	0x036ED0E0 LDR W8, [X0 + 0xE0]
	0x036ED0E4 CBNZ W8, 0x36ED0EC
	0x036ED0E8 BL 0x1C16DFC
	0x036ED0EC MOV X0, X20
	0x036ED0F0 MOV X1, X31
	0x036ED0F4 MOV X2, X31
	0x036ED0F8 BL 0x3C3883C
	0x036ED0FC TBZ X0, 0x0, 0x36ED108
	0x036ED100 MOV W8, W31
	0x036ED104 B 0x36ED130
	0x036ED108 LDR X0, [X21]
	0x036ED10C LDR X19, [X19 + 0x10]
	0x036ED110 LDR W8, [X0 + 0xE0]
	0x036ED114 CBNZ W8, 0x36ED11C
	0x036ED118 BL 0x1C16DFC
	0x036ED11C MOV X0, X19
	0x036ED120 MOV X1, X31
	0x036ED124 MOV X2, X31
	0x036ED128 BL 0x3C3883C
	0x036ED12C EOR W8, W0, 0x1
	0x036ED130 LDP X20, X19, [X31 + 0x10]
	0x036ED134 AND W0, W8, 0x1
	0x036ED138 LDP X30, X21, [X31], #0x20
	0x036ED13C RET
	0x036ED140 MOVZ W8, 0x101
	0x036ED144 MOVI V0.2S, 0x3F, 0x18
	0x036ED148 STP X31, X31, [X0]
	0x036ED14C STR X31, [X0 + 0x10]
	0x036ED150 STRH W8, [X0 + 0x18]
	0x036ED154 STUR D0, [X0 + 0x1C]
	0x036ED158 STRH W31, [X0 + 0x24]
	0x036ED15C RET
	0x036ED160 STP X30, X21, [X31 - 0x20]!
	0x036ED164 STP X20, X19, [X31 + 0x10]
	0x036ED168 ADRP X20, 0xCF3000
	0x036ED16C ADRP X21, 0xA53000
	0x036ED170 LDRB W8, [X20 + 0xB3E]
	0x036ED174 LDR X21, [X21 + 0x7F0]
	0x036ED178 MOV X19, X0
	0x036ED17C TBNZ X8, 0x0, 0x36ED194
	0x036ED180 ADRP X0, 0xA53000
	0x036ED184 LDR X0, [X0 + 0x7F0]
	0x036ED188 BL 0x1C16CF4
	0x036ED18C MOVZ W8, 0x1
	0x036ED190 STRB W8, [X20 + 0xB3E]
	0x036ED194 LDR X1, [X21]
	0x036ED198 MOV X0, X19
	0x036ED19C BL 0x25C9F64
	0x036ED1A0 LDP S0, S2, [X19 + 0x44]
	0x036ED1A4 FMOV S1, 1
	0x036ED1A8 FMOV S3, W31
	0x036ED1AC FMIN S4, S0, S1
	0x036ED1B0 FCMP S0, 0x0
	0x036ED1B4 FMIN S0, S2, S1
	0x036ED1B8 FCSEL S1, S4, S3, PL
	0x036ED1BC FCMP S2, 0x0
	0x036ED1C0 FCSEL S0, S0, S3, PL
	0x036ED1C4 FMAX S1, S1, S3
	0x036ED1C8 FMAX S0, S0, S3
	0x036ED1CC STP S1, S0, [X19 + 0x44]
	0x036ED1D0 LDP X20, X19, [X31 + 0x10]
	0x036ED1D4 LDP X30, X21, [X31], #0x20
	0x036ED1D8 RET
	0x036ED1DC STP X30, X21, [X31 - 0x20]!
	0x036ED1E0 STP X20, X19, [X31 + 0x10]
	0x036ED1E4 ADRP X21, 0xCF3000
	0x036ED1E8 ADRP X20, 0xA53000
	0x036ED1EC LDRB W8, [X21 + 0xB3F]
	0x036ED1F0 LDR X20, [X20 + 0x7F8]
	0x036ED1F4 MOV X19, X0
	0x036ED1F8 TBNZ X8, 0x0, 0x36ED21C
	0x036ED1FC ADRP X0, 0xA53000
	0x036ED200 LDR X0, [X0 + 0x800]
	0x036ED204 BL 0x1C16CF4
	0x036ED208 ADRP X0, 0xA53000
	0x036ED20C LDR X0, [X0 + 0x7F8]
	0x036ED210 BL 0x1C16CF4
	0x036ED214 MOVZ W8, 0x1
	0x036ED218 STRB W8, [X21 + 0xB3F]
	0x036ED21C LDR X0, [X20]
	0x036ED220 ADRP X20, 0xA53000
	0x036ED224 LDR W8, [X0 + 0xE0]
	0x036ED228 LDR X20, [X20 + 0x800]
	0x036ED22C CBNZ W8, 0x36ED234
	0x036ED230 BL 0x1C16DFC
	0x036ED234 LDR X1, [X20]
	0x036ED238 MOV X0, X19
	0x036ED23C LDP X20, X19, [X31 + 0x10]
	0x036ED240 LDP X30, X21, [X31], #0x20
	0x036ED244 B 0x25CA3A8
	0x036ED248 LDR X0, [X0]
	0x036ED24C RET
	0x036ED250 STR X1, [X0]
	0x036ED254 RET
	0x036ED258 LDR X0, [X0 + 0x8]
	0x036ED25C RET
	0x036ED260 STR X1, [X0 + 0x8]
	0x036ED264 RET
	0x036ED268 LDR X0, [X0 + 0x10]
	0x036ED26C RET
	0x036ED270 STR X1, [X0 + 0x10]
	0x036ED274 RET
	0x036ED278 LDR V0, [X0 + 0x18]
	0x036ED27C RET
	0x036ED280 FMOV S1, 1
	0x036ED284 FCMP S0, 0x0
	0x036ED288 FMIN S0, S0, S1
	0x036ED28C FMOV S1, W31
	0x036ED290 FCSEL S0, S0, S1, PL
	0x036ED294 STR S0, [X0 + 0x18]
	0x036ED298 RET
	0x036ED29C LDR V0, [X0 + 0x1C]
	0x036ED2A0 RET
	0x036ED2A4 FMOV S1, 1
	0x036ED2A8 FCMP S0, 0x0
	0x036ED2AC FMIN S0, S0, S1
	0x036ED2B0 FMOV S1, W31
	0x036ED2B4 FCSEL S0, S0, S1, PL
	0x036ED2B8 STR S0, [X0 + 0x1C]
	0x036ED2BC RET
	0x036ED2C0 LDR W0, [X0 + 0x20]
	0x036ED2C4 RET
	0x036ED2C8 CMP W1, 0x32
	0x036ED2CC MOVZ W8, 0x32
	0x036ED2D0 CSEL W8, W1, W8, LT
	0x036ED2D4 CMP W8, 0x1
	0x036ED2D8 CSINC W8, W8, W31, GT
	0x036ED2DC STR W8, [X0 + 0x20]
	0x036ED2E0 RET
	0x036ED2E4 LDR V0, [X0 + 0x24]
	0x036ED2E8 RET
	0x036ED2EC ADRP X8, 0xFFFFFFFFFD3FD000
	0x036ED2F0 LDR V1, [X8 + 0x330]
	0x036ED2F4 FCMP S0, 0x0
	0x036ED2F8 FMIN S0, S0, S1
	0x036ED2FC FMOV S1, W31
	0x036ED300 FCSEL S0, S0, S1, PL
	0x036ED304 STR S0, [X0 + 0x24]
	0x036ED308 RET
	0x036ED30C LDRB W0, [X0 + 0x28]
	0x036ED310 RET
	0x036ED314 AND W8, W1, 0x1
	0x036ED318 STRB W8, [X0 + 0x28]
	0x036ED31C RET
	0x036ED320 LDRB W0, [X0 + 0x29]
	0x036ED324 RET
	0x036ED328 AND W8, W1, 0x1
	0x036ED32C STRB W8, [X0 + 0x29]
	0x036ED330 RET
	0x036ED334 STR X30, [X31 - 0x20]!
	0x036ED338 STP X20, X19, [X31 + 0x10]
	0x036ED33C ADRP X19, 0xCF3000
	0x036ED340 ADRP X20, 0xA53000
	0x036ED344 LDRB W8, [X19 + 0xB40]
	0x036ED348 LDR X20, [X20 + 0x808]
	0x036ED34C TBNZ X8, 0x0, 0x36ED364
	0x036ED350 ADRP X0, 0xA53000
	0x036ED354 LDR X0, [X0 + 0x808]
	0x036ED358 BL 0x1C16CF4
	0x036ED35C MOVZ W8, 0x1
	0x036ED360 STRB W8, [X19 + 0xB40]
	0x036ED364 LDR X0, [X20]
	0x036ED368 LDP X20, X19, [X31 + 0x10]
	0x036ED36C LDR X30, [X31], #0x20
	0x036ED370 B 0x36ECF70
	0x036ED374 STR X30, [X31 - 0x20]!
	0x036ED378 STP X20, X19, [X31 + 0x10]
	0x036ED37C ADRP X19, 0xCF3000
	0x036ED380 ADRP X20, 0xA53000
	0x036ED384 LDRB W8, [X19 + 0xB41]
	0x036ED388 LDR X20, [X20 + 0x810]
	0x036ED38C TBNZ X8, 0x0, 0x36ED3A4
	0x036ED390 ADRP X0, 0xA53000
	0x036ED394 LDR X0, [X0 + 0x810]
	0x036ED398 BL 0x1C16CF4
	0x036ED39C MOVZ W8, 0x1
	0x036ED3A0 STRB W8, [X19 + 0xB41]
	0x036ED3A4 LDR X0, [X20]
	0x036ED3A8 LDP X20, X19, [X31 + 0x10]
	0x036ED3AC LDR X30, [X31], #0x20
	0x036ED3B0 B 0x36ECF70
	0x036ED3B4 STP X30, X23, [X31 - 0x30]!
	0x036ED3B8 STP X22, X21, [X31 + 0x10]
	0x036ED3BC STP X20, X19, [X31 + 0x20]
	0x036ED3C0 ADRP X20, 0xCF3000
	0x036ED3C4 ADRP X22, 0xA06000
	0x036ED3C8 LDRB W8, [X20 + 0xB42]
	0x036ED3CC LDR X22, [X22 + 0x598]
	0x036ED3D0 MOV X19, X0
	0x036ED3D4 TBNZ X8, 0x0, 0x36ED3EC
	0x036ED3D8 ADRP X0, 0xA06000
	0x036ED3DC LDR X0, [X0 + 0x598]
	0x036ED3E0 BL 0x1C16CF4
	0x036ED3E4 MOVZ W8, 0x1
	0x036ED3E8 STRB W8, [X20 + 0xB42]
	0x036ED3EC LDR X0, [X22]
	0x036ED3F0 LDR X20, [X19]
	0x036ED3F4 LDR W8, [X0 + 0xE0]
	0x036ED3F8 CBNZ W8, 0x36ED400
	0x036ED3FC BL 0x1C16DFC
	0x036ED400 MOV X0, X20
	0x036ED404 MOV X1, X31
	0x036ED408 MOV X2, X31
	0x036ED40C BL 0x3C3883C
	0x036ED410 TBNZ X0, 0x0, 0x36ED464
	0x036ED414 LDR X0, [X22]
	0x036ED418 LDR X20, [X19 + 0x8]
	0x036ED41C LDR W8, [X0 + 0xE0]
	0x036ED420 CBNZ W8, 0x36ED428
	0x036ED424 BL 0x1C16DFC
	0x036ED428 MOV X0, X20
	0x036ED42C MOV X1, X31
	0x036ED430 MOV X2, X31
	0x036ED434 BL 0x3C3883C
	0x036ED438 TBNZ X0, 0x0, 0x36ED464
	0x036ED43C LDR X0, [X22]
	0x036ED440 LDR X20, [X19 + 0x10]
	0x036ED444 LDR W8, [X0 + 0xE0]
	0x036ED448 CBNZ W8, 0x36ED450
	0x036ED44C BL 0x1C16DFC
	0x036ED450 MOV X0, X20
	0x036ED454 MOV X1, X31
	0x036ED458 MOV X2, X31
	0x036ED45C BL 0x3C3883C
	0x036ED460 TBZ X0, 0x0, 0x36ED478
	0x036ED464 MOV W0, W31
	0x036ED468 LDP X20, X19, [X31 + 0x20]
	0x036ED46C LDP X22, X21, [X31 + 0x10]
	0x036ED470 LDP X30, X23, [X31], #0x30
	0x036ED474 RET
	0x036ED478 LDR X20, [X19 + 0x8]
	0x036ED47C MOVZ W23, 0x1
	0x036ED480 LDR X0, [X22]
	0x036ED484 LDR W8, [X0 + 0xE0]
	0x036ED488 CBNZ W8, 0x36ED490
	0x036ED48C BL 0x1C16DFC
	0x036ED490 MOV X0, X20
	0x036ED494 MOV X1, X31
	0x036ED498 MOV X2, X31
	0x036ED49C BL 0x3C354F8
	0x036ED4A0 TBZ X0, 0x0, 0x36ED4E8
	0x036ED4A4 LDR X0, [X22]
	0x036ED4A8 LDR X21, [X19]
	0x036ED4AC LDR W8, [X0 + 0xE0]
	0x036ED4B0 CBNZ W8, 0x36ED4B8
	0x036ED4B4 BL 0x1C16DFC
	0x036ED4B8 MOV X0, X20
	0x036ED4BC MOV X1, X21
	0x036ED4C0 MOV X2, X31
	0x036ED4C4 BL 0x3C354F8
	0x036ED4C8 TBZ X0, 0x0, 0x36ED4E8
	0x036ED4CC CBZ X20, 0x36ED51C
	0x036ED4D0 MOV X0, X20
	0x036ED4D4 MOV X1, X31
	0x036ED4D8 BL 0x3C3F49C
	0x036ED4DC MOV X20, X0
	0x036ED4E0 ADD W23, W23, 0x1
	0x036ED4E4 B 0x36ED480
	0x036ED4E8 LDR X0, [X22]
	0x036ED4EC LDR X19, [X19]
	0x036ED4F0 LDR W8, [X0 + 0xE0]
	0x036ED4F4 CBNZ W8, 0x36ED4FC
	0x036ED4F8 BL 0x1C16DFC
	0x036ED4FC MOV X0, X20
	0x036ED500 MOV X1, X19
	0x036ED504 MOV X2, X31
	0x036ED508 BL 0x3C3883C
	0x036ED50C CMP W23, 0x2
	0x036ED510 CSET W8, GT
	0x036ED514 AND W0, W8, W0, 0x0
	0x036ED518 B 0x36ED468
	0x036ED51C BL 0x1C16F20
	0x036ED520 MOVZ X8, 0xF
	0x036ED524 MOVK X8, 0xB717
	0x036ED528 FMOV V0.2S, 0x0
	0x036ED52C MOVK X8, 0x38D10000
	0x036ED530 STP X31, X31, [X0]
	0x036ED534 STR X31, [X0 + 0x10]
	0x036ED538 STR D0, [X0 + 0x18]
	0x036ED53C STR X8, [X0 + 0x20]
	0x036ED540 STRH W31, [X0 + 0x28]
	0x036ED544 RET
	0x036ED548 STP X30, X21, [X31 - 0x20]!
	0x036ED54C STP X20, X19, [X31 + 0x10]
	0x036ED550 ADRP X20, 0xCF3000
	0x036ED554 ADRP X21, 0xA53000
	0x036ED558 LDRB W8, [X20 + 0xB43]
	0x036ED55C LDR X21, [X21 + 0x818]
	0x036ED560 MOV X19, X0
	0x036ED564 TBNZ X8, 0x0, 0x36ED57C
	0x036ED568 ADRP X0, 0xA53000
	0x036ED56C LDR X0, [X0 + 0x818]
	0x036ED570 BL 0x1C16CF4
	0x036ED574 MOVZ W8, 0x1
	0x036ED578 STRB W8, [X20 + 0xB43]
	0x036ED57C LDR X1, [X21]
	0x036ED580 MOV X0, X19
	0x036ED584 BL 0x25CA480
	0x036ED588 LDP S2, S3, [X19 + 0x40]
	0x036ED58C FMOV S1, 1
	0x036ED590 LDR W8, [X19 + 0x48]
	0x036ED594 FMOV S0, W31
	0x036ED598 FCMP S2, 0x0
	0x036ED59C FMIN S2, S2, S1
	0x036ED5A0 FMIN S1, S3, S1
	0x036ED5A4 FCSEL S2, S2, S0, PL
	0x036ED5A8 FCMP S3, 0x0
	0x036ED5AC FCSEL S1, S1, S0, PL
	0x036ED5B0 FMAX S2, S2, S0
	0x036ED5B4 CMP W8, 0x1
	0x036ED5B8 FMAX S1, S1, S0
	0x036ED5BC STP S2, S1, [X19 + 0x40]
	0x036ED5C0 B.LT 0x36ED5D4
	0x036ED5C4 CMP W8, 0x31
	0x036ED5C8 B.GT 0x36ED5DC
	0x036ED5CC CMP W8, 0x2
	0x036ED5D0 B.GE 0x36ED5E0
	0x036ED5D4 MOVZ W8, 0x1
	0x036ED5D8 B 0x36ED5E0
	0x036ED5DC MOVZ W8, 0x32
	0x036ED5E0 ADRP X9, 0xFFFFFFFFFD3FD000
	0x036ED5E4 LDR V1, [X19 + 0x4C]
	0x036ED5E8 LDR V2, [X9 + 0x330]
	0x036ED5EC STR W8, [X19 + 0x48]
	0x036ED5F0 FCMP S1, 0x0
	0x036ED5F4 FMIN S2, S1, S2
	0x036ED5F8 FCSEL S1, S2, S0, PL
	0x036ED5FC FMAX S0, S1, S0
	0x036ED600 STR S0, [X19 + 0x4C]
	0x036ED604 LDP X20, X19, [X31 + 0x10]
	0x036ED608 LDP X30, X21, [X31], #0x20
	0x036ED60C RET
	0x036ED610 STP X30, X21, [X31 - 0x20]!
	0x036ED614 STP X20, X19, [X31 + 0x10]
	0x036ED618 ADRP X21, 0xCF3000
	0x036ED61C ADRP X20, 0xA53000
	0x036ED620 LDRB W8, [X21 + 0xB44]
	0x036ED624 LDR X20, [X20 + 0x820]
	0x036ED628 MOV X19, X0
	0x036ED62C TBNZ X8, 0x0, 0x36ED650
	0x036ED630 ADRP X0, 0xA53000
	0x036ED634 LDR X0, [X0 + 0x828]
	0x036ED638 BL 0x1C16CF4
	0x036ED63C ADRP X0, 0xA53000
	0x036ED640 LDR X0, [X0 + 0x820]
	0x036ED644 BL 0x1C16CF4
	0x036ED648 MOVZ W8, 0x1
	0x036ED64C STRB W8, [X21 + 0xB44]
	0x036ED650 LDR X0, [X20]
	0x036ED654 ADRP X20, 0xA53000
	0x036ED658 LDR W8, [X0 + 0xE0]
	0x036ED65C LDR X20, [X20 + 0x828]
	0x036ED660 CBNZ W8, 0x36ED668
	0x036ED664 BL 0x1C16DFC
	0x036ED668 LDR X1, [X20]
	0x036ED66C MOV X0, X19
	0x036ED670 LDP X20, X19, [X31 + 0x10]
	0x036ED674 LDP X30, X21, [X31], #0x20
	0x036ED678 B 0x25CA8C4
	0x036ED67C LDR X0, [X0]
	0x036ED680 RET
	0x036ED684 STR X1, [X0]
	0x036ED688 RET
	0x036ED68C LDR X0, [X0 + 0x8]
	0x036ED690 RET
	0x036ED694 STR X1, [X0 + 0x8]
	0x036ED698 RET
	0x036ED69C LDR V0, [X0 + 0x10]
	0x036ED6A0 RET
	0x036ED6A4 FMOV S1, 1
	0x036ED6A8 FCMP S0, 0x0
	0x036ED6AC FMIN S0, S0, S1
	0x036ED6B0 FMOV S1, W31
	0x036ED6B4 FCSEL S0, S0, S1, PL
	0x036ED6B8 STR S0, [X0 + 0x10]
	0x036ED6BC RET
	0x036ED6C0 LDR V0, [X0 + 0x14]
	0x036ED6C4 RET
	0x036ED6C8 FMOV S1, 1
	0x036ED6CC FCMP S0, 0x0
	0x036ED6D0 FMIN S0, S0, S1
	0x036ED6D4 FMOV S1, W31
	0x036ED6D8 FCSEL S0, S0, S1, PL
	0x036ED6DC STR S0, [X0 + 0x14]
	0x036ED6E0 RET
	0x036ED6E4 LDRB W0, [X0 + 0x18]
	0x036ED6E8 RET
	0x036ED6EC AND W8, W1, 0x1
	0x036ED6F0 STRB W8, [X0 + 0x18]
	0x036ED6F4 RET
	0x036ED6F8 STR X30, [X31 - 0x20]!
	0x036ED6FC STP X20, X19, [X31 + 0x10]
	0x036ED700 ADRP X19, 0xCF3000
	0x036ED704 ADRP X20, 0xA53000
	0x036ED708 LDRB W8, [X19 + 0xB45]
	0x036ED70C LDR X20, [X20 + 0x830]
	0x036ED710 TBNZ X8, 0x0, 0x36ED728
	0x036ED714 ADRP X0, 0xA53000
	0x036ED718 LDR X0, [X0 + 0x830]
	0x036ED71C BL 0x1C16CF4
	0x036ED720 MOVZ W8, 0x1
	0x036ED724 STRB W8, [X19 + 0xB45]
	0x036ED728 LDR X0, [X20]
	0x036ED72C LDP X20, X19, [X31 + 0x10]
	0x036ED730 LDR X30, [X31], #0x20
	0x036ED734 B 0x36ECF70
	0x036ED738 STR X30, [X31 - 0x20]!
	0x036ED73C STP X20, X19, [X31 + 0x10]
	0x036ED740 ADRP X19, 0xCF3000
	0x036ED744 ADRP X20, 0xA53000
	0x036ED748 LDRB W8, [X19 + 0xB46]
	0x036ED74C LDR X20, [X20 + 0x838]
	0x036ED750 TBNZ X8, 0x0, 0x36ED768
	0x036ED754 ADRP X0, 0xA53000
	0x036ED758 LDR X0, [X0 + 0x838]
	0x036ED75C BL 0x1C16CF4
	0x036ED760 MOVZ W8, 0x1
	0x036ED764 STRB W8, [X19 + 0xB46]
	0x036ED768 LDR X0, [X20]
	0x036ED76C LDP X20, X19, [X31 + 0x10]
	0x036ED770 LDR X30, [X31], #0x20
	0x036ED774 B 0x36ECF70
	0x036ED778 STP X30, X21, [X31 - 0x20]!
	0x036ED77C STP X20, X19, [X31 + 0x10]
	0x036ED780 ADRP X20, 0xCF3000
	0x036ED784 ADRP X21, 0xA06000
	0x036ED788 LDRB W8, [X20 + 0xB47]
	0x036ED78C LDR X21, [X21 + 0x598]
	0x036ED790 MOV X19, X0
	0x036ED794 TBNZ X8, 0x0, 0x36ED7AC
	0x036ED798 ADRP X0, 0xA06000
	0x036ED79C LDR X0, [X0 + 0x598]
	0x036ED7A0 BL 0x1C16CF4
	0x036ED7A4 MOVZ W8, 0x1
	0x036ED7A8 STRB W8, [X20 + 0xB47]
	0x036ED7AC LDR X0, [X21]
	0x036ED7B0 LDR X20, [X19]
	0x036ED7B4 LDR W8, [X0 + 0xE0]
	0x036ED7B8 CBNZ W8, 0x36ED7C0
	0x036ED7BC BL 0x1C16DFC
	0x036ED7C0 MOV X0, X20
	0x036ED7C4 MOV X1, X31
	0x036ED7C8 MOV X2, X31
	0x036ED7CC BL 0x3C3883C
	0x036ED7D0 TBZ X0, 0x0, 0x36ED7DC
	0x036ED7D4 MOV W8, W31
	0x036ED7D8 B 0x36ED804
	0x036ED7DC LDR X0, [X21]
	0x036ED7E0 LDR X19, [X19 + 0x8]
	0x036ED7E4 LDR W8, [X0 + 0xE0]
	0x036ED7E8 CBNZ W8, 0x36ED7F0
	0x036ED7EC BL 0x1C16DFC
	0x036ED7F0 MOV X0, X19
	0x036ED7F4 MOV X1, X31
	0x036ED7F8 MOV X2, X31
	0x036ED7FC BL 0x3C3883C
	0x036ED800 EOR W8, W0, 0x1
	0x036ED804 LDP X20, X19, [X31 + 0x10]
	0x036ED808 AND W0, W8, 0x1
	0x036ED80C LDP X30, X21, [X31], #0x20
	0x036ED810 RET
	0x036ED814 MOVI V0.2S, 0x3F, 0x18
	0x036ED818 MOVZ W8, 0x1
	0x036ED81C STP X31, X31, [X0]
	0x036ED820 STR D0, [X0 + 0x10]
	0x036ED824 STRB W8, [X0 + 0x18]
	0x036ED828 RET
	0x036ED82C STP X30, X21, [X31 - 0x20]!
	0x036ED830 STP X20, X19, [X31 + 0x10]
	0x036ED834 ADRP X20, 0xCF3000
	0x036ED838 ADRP X21, 0xA53000
	0x036ED83C LDRB W8, [X20 + 0xB48]
	0x036ED840 LDR X21, [X21 + 0x840]
	0x036ED844 MOV X19, X0
	0x036ED848 TBNZ X8, 0x0, 0x36ED860
	0x036ED84C ADRP X0, 0xA53000
	0x036ED850 LDR X0, [X0 + 0x840]
	0x036ED854 BL 0x1C16CF4
	0x036ED858 MOVZ W8, 0x1
	0x036ED85C STRB W8, [X20 + 0xB48]
	0x036ED860 LDR X1, [X21]
	0x036ED864 MOV X0, X19
	0x036ED868 BL 0x25CA99C
	0x036ED86C LDP S0, S2, [X19 + 0x38]
	0x036ED870 FMOV S1, 1
	0x036ED874 FMOV S3, W31
	0x036ED878 FMIN S4, S0, S1
	0x036ED87C FCMP S0, 0x0
	0x036ED880 FMIN S0, S2, S1
	0x036ED884 FCSEL S1, S4, S3, PL
	0x036ED888 FCMP S2, 0x0
	0x036ED88C FCSEL S0, S0, S3, PL
	0x036ED890 FMAX S1, S1, S3
	0x036ED894 FMAX S0, S0, S3
	0x036ED898 STP S1, S0, [X19 + 0x38]
	0x036ED89C LDP X20, X19, [X31 + 0x10]
	0x036ED8A0 LDP X30, X21, [X31], #0x20
	0x036ED8A4 RET
	0x036ED8A8 STP X30, X21, [X31 - 0x20]!
	0x036ED8AC STP X20, X19, [X31 + 0x10]
	0x036ED8B0 ADRP X21, 0xCF3000
	0x036ED8B4 ADRP X20, 0xA53000
	0x036ED8B8 LDRB W8, [X21 + 0xB49]
	0x036ED8BC LDR X20, [X20 + 0x848]
	0x036ED8C0 MOV X19, X0
	0x036ED8C4 TBNZ X8, 0x0, 0x36ED8E8
	0x036ED8C8 ADRP X0, 0xA53000
	0x036ED8CC LDR X0, [X0 + 0x850]
	0x036ED8D0 BL 0x1C16CF4
	0x036ED8D4 ADRP X0, 0xA53000
	0x036ED8D8 LDR X0, [X0 + 0x848]
	0x036ED8DC BL 0x1C16CF4
	0x036ED8E0 MOVZ W8, 0x1
	0x036ED8E4 STRB W8, [X21 + 0xB49]
	0x036ED8E8 LDR X0, [X20]
	0x036ED8EC ADRP X20, 0xA53000
	0x036ED8F0 LDR W8, [X0 + 0xE0]
	0x036ED8F4 LDR X20, [X20 + 0x850]
	0x036ED8F8 CBNZ W8, 0x36ED900
	0x036ED8FC BL 0x1C16DFC
	0x036ED900 LDR X1, [X20]
	0x036ED904 MOV X0, X19
	0x036ED908 LDP X20, X19, [X31 + 0x10]
	0x036ED90C LDP X30, X21, [X31], #0x20
	0x036ED910 B 0x25CADD8
	0x036ED914 LDR X0, [X0]
	0x036ED918 RET
	0x036ED91C STR X1, [X0]
	0x036ED920 RET
	0x036ED924 ADD X1, X0, 0x8
	0x036ED928 MOVZ W2, 0x88
	0x036ED92C MOV X0, X8
	0x036ED930 B 0x3EB1AC0
	0x036ED934 STR X30, [X31 - 0x10]!
	0x036ED938 ADD X0, X0, 0x8
	0x036ED93C MOVZ W2, 0x88
	0x036ED940 BL 0x3EB1B30
	0x036ED944 LDR X30, [X31], #0x10
	0x036ED948 RET
	0x036ED94C LDRB W0, [X0 + 0xBC]
	0x036ED950 RET
	0x036ED954 AND W8, W1, 0x1
	0x036ED958 STRB W8, [X0 + 0xBC]
	0x036ED95C RET
	0x036ED960 LDP S0, S1, [X0 + 0x90]
	0x036ED964 LDR V2, [X0 + 0x98]
	0x036ED968 RET
	0x036ED96C STP S0, S1, [X0 + 0x90]
	0x036ED970 STR S2, [X0 + 0x98]
	0x036ED974 RET
	0x036ED978 LDP S0, S1, [X0 + 0x9C]
	0x036ED97C RET
	0x036ED980 MOVZ W8, 0x43340000
	0x036ED984 MOVZ W9, 0xC3340000
	0x036ED988 FMOV S2, W8
	0x036ED98C FMOV S4, W9
	0x036ED990 FMIN S3, S0, S2
	0x036ED994 FCMP S0, S4
	0x036ED998 FMIN S0, S1, S2
	0x036ED99C FCSEL S2, S3, S4, PL
	0x036ED9A0 FCMP S1, S4
	0x036ED9A4 FCSEL S0, S0, S4, PL
	0x036ED9A8 STP S2, S0, [X0 + 0x9C]
	0x036ED9AC RET
	0x036ED9B0 LDR W0, [X0 + 0xA4]
	0x036ED9B4 RET
	0x036ED9B8 STR W1, [X0 + 0xA4]
	0x036ED9BC RET
	0x036ED9C0 LDR W0, [X0 + 0xA8]
	0x036ED9C4 RET
	0x036ED9C8 STR W1, [X0 + 0xA8]
	0x036ED9CC RET
	0x036ED9D0 LDR W0, [X0 + 0xAC]
	0x036ED9D4 RET
	0x036ED9D8 STR W1, [X0 + 0xAC]
	0x036ED9DC RET
	0x036ED9E0 LDR W0, [X0 + 0xB8]
	0x036ED9E4 RET
	0x036ED9E8 STR W1, [X0 + 0xB8]
	0x036ED9EC RET
	0x036ED9F0 LDR X0, [X0 + 0xB0]
	0x036ED9F4 RET
	0x036ED9F8 STR X1, [X0 + 0xB0]
	0x036ED9FC RET
	0x036EDA00 LDRB W0, [X0 + 0xBD]
	0x036EDA04 RET
	0x036EDA08 AND W8, W1, 0x1
	0x036EDA0C STRB W8, [X0 + 0xBD]
	0x036EDA10 RET
	0x036EDA14 LDRB W0, [X0 + 0xBE]
	0x036EDA18 RET
	0x036EDA1C AND W8, W1, 0x1
	0x036EDA20 STRB W8, [X0 + 0xBE]
	0x036EDA24 RET
	0x036EDA28 LDRB W0, [X0 + 0xBF]
	0x036EDA2C RET
	0x036EDA30 AND W8, W1, 0x1
	0x036EDA34 STRB W8, [X0 + 0xBF]
	0x036EDA38 RET

ISIL:
	001 Move [X31-144], D15
	002 Move [X31-136], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+80], X30
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Subtract X31, X31, 768
	019 Move X24, 0xCF5000
	020 Move X23, [X31+920]
	021 Move X20, [X31+912]
	022 Move W8, [X24+3033]
	023 Move V14, V2
	024 Move V11, V0
	025 Move X21, X7
	026 Move X19, X0
	027 Add X22, X31, 304
	028 Move [X31+80], S1
	029 Move [X31+688], X1
	030 Move [X31+696], W2
	031 Move [X31+672], X3
	032 Move [X31+680], W4
	033 Move [X31+656], X5
	034 Move [X31+664], W6
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {44}
	039 Move X0, 0xA34000
	040 Move X0, [X0+560]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+3033], W8
	044 Move [X31+648], W31
	045 Move [X31+640], X31
	046 Move [X31+632], X31
	047 Move [X31+624], X31
	048 Move X8, [X19+48]
	049 Move V1, [X19+16]
	050 Move V0, [X19+32]
	051 Move V2, [X19]
	052 Add X0, X31, 688
	053 Add X1, X31, 704
	054 Move X2, X31
	055 Move [X31+752], X8
	056 Move [X22+416], V1
	057 Move [X22+424], V0
	058 Move [X22+25], V2
	059 Call TransformStreamHandle.GetPosition, X0, X1
	060 Move [X31+144], D0
	061 Move [X31+128], D1
	062 Move [X31+844], S2
	063 Move X8, [X19+48]
	064 Move V1, [X19+16]
	065 Move V0, [X19+32]
	066 Move V2, [X19]
	067 Add X0, X31, 672
	068 Add X1, X31, 704
	069 Move X2, X31
	070 Move [X31+752], X8
	071 Move [X22+416], V1
	072 Move [X22+424], V0
	073 Move [X22+25], V2
	074 Call TransformStreamHandle.GetPosition, X0, X1
	075 Move V8, V0
	076 Move V9, V1
	077 Move V15, V2
	078 Move X8, [X19+48]
	079 Move V1, [X19+16]
	080 Move V0, [X19+32]
	081 Move V2, [X19]
	082 Add X0, X31, 656
	083 Add X1, X31, 704
	084 Move X2, X31
	085 Move [X31+752], X8
	086 Move [X22+416], V1
	087 Move [X22+424], V0
	088 Move [X22+25], V2
	089 Call TransformStreamHandle.GetPosition, X0, X1
	090 Move [X31+112], D0
	091 Move [X31+96], D1
	092 Move [X31+56], S2
	093 Move X8, [X19+48]
	094 Move V1, [X19+16]
	095 Move V0, [X19+32]
	096 Move V2, [X19]
	097 Add X1, X31, 560
	098 Add X2, X31, 640
	099 Add X3, X31, 624
	100 Move X0, X21
	101 Move [X31+608], X8
	102 Move [X22+272], V1
	103 Move [X22+280], V0
	104 Move [X22+16], V2
	105 Call ReadOnlyTransformHandle.GetGlobalTR, X0, X1, X2, X3
	106 Move S0, 1
	107 Move V2, [X19]
	108 Move V3, [X19+16]
	109 Move X8, [X19+48]
	110 Move V4, [X19+2]
	111 Move V12, [X31+640]
	112 Move V13, [X31+648]
	113 Move V10, [X23]
	114 NotImplemented "Instruction FCMP not yet implemented."
	115 NotImplemented "Instruction FMIN not yet implemented."
	116 Move V11, [X23+8]
	117 Move S1, W31
	118 NotImplemented "Instruction FCSEL not yet implemented."
	119 Add X0, X31, 656
	120 Add X1, X31, 704
	121 Move X2, X31
	122 Move [X31+2], V0
	123 Move [X31+752], X8
	124 Move [X22+416], V3
	125 Move [X22+424], V4
	126 Move [X22+25], V2
	127 Call TransformStreamHandle.GetRotation, X0, X1
	128 Move V4, [X31+632]
	129 Move V5, [X31+636]
	130 Move S6, [X23+12]
	131 Move S19, [X23+16]
	132 Move S7, [X23+20]
	133 Move S16, [X23+24]
	134 Move V17, [X31+624]
	135 Move V18, [X31+628]
	136 Multiply S20, S5, S6
	137 Multiply S23, S4, S19
	138 Multiply S21, S17, S16
	139 Multiply S22, S18, S7
	140 Multiply S24, S5, S19
	141 Multiply S25, S18, S16
	142 Multiply S26, S4, S6
	143 Multiply S27, S17, S7
	144 Multiply S28, S17, S19
	145 Multiply S17, S17, S6
	146 Multiply S6, S18, S6
	147 Multiply S18, S18, S19
	148 Multiply S19, S5, S7
	149 Multiply S5, S5, S16
	150 Multiply S16, S4, S16
	151 Add S16, S19, S16
	152 Add S16, S28, S16
	153 Subtract S6, S16, S6
	154 Move V16, [X31+80]
	155 Multiply S7, S4, S7
	156 Add S4, S20, S21
	157 Add S20, S24, S25
	158 Subtract S5, S5, S17
	159 Add S4, S22, S4
	160 Add S17, S26, S20
	161 Subtract S18, S5, S18
	162 Subtract S4, S4, S23
	163 Subtract S5, S17, S27
	164 Subtract S7, S18, S7
	165 Move X0, X31
	166 Move [X31], S16
	167 Call Quaternion.Lerp, X0, X1, V0
	168 Move [X31+68], S1
	169 Move [X31+76], S0
	170 Move [X31+60], S3
	171 Move [X31+68], S2
	172 Move X8, [X19+48]
	173 Move V2, [X19+16]
	174 Move V0, [X19+32]
	175 Move V1, [X19]
	176 Add X1, X31, 496
	177 Move X0, X20
	178 Move [X31+544], X8
	179 Move [X22+208], V2
	180 Move [X22+216], V0
	181 Move [X22+12], V1
	182 Call ReadOnlyTransformHandle.IsValid, X0, X1
	183 Move X25, 0xCED000
	184 Move W8, [X25+1924]
	185 NotImplemented "Instruction FCMP not yet implemented."
	186 Move W21, W0
	187 NotImplemented "Instruction CSET not yet implemented."
	188 Compare W8, 0
	189 JumpIfNotEqual {195}
	190 Move X0, 0xA08000
	191 Move X0, [X0+1448]
	192 Call 0x1C17CF4
	193 Move W8, 1
	194 Move [X25+1924], W8
	195 Move X23, 0xA08000
	196 Move X23, [X23+1448]
	197 Move X0, [X23]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfEqual {202}
	201 Move W8, 1
	202 Call 0x1C17DFC
	203 Move W8, [X25+1924]
	204 Move V4, [X31+96]
	205 Move V3, [X31+112]
	206 Move V2, [X31+844]
	207 Move V0, V3
	208 Move V0.S[1], V4.S[0]
	209 Move [X31+5], V0
	210 Compare W8, 0
	211 JumpIfNotEqual {220}
	212 Move X0, 0xA07000
	213 Move X0, [X0+1448]
	214 Call 0x1C17CF4
	215 Move V4, [X31+96]
	216 Move V3, [X31+112]
	217 Move V2, [X31+844]
	218 Move W8, 1
	219 Move [X25+1924], W8
	220 Move V0, [X31+9]
	221 Move X0, [X23]
	222 Add V10, V12, V10
	223 Add S11, S13, S11
	224 Subtract S1, S8, S0
	225 Move V0, [X31+8]
	226 Move W8, [X0+224]
	227 Subtract S12, S3, S8
	228 Subtract S13, S4, S9
	229 Subtract S0, S9, S0
	230 Move [X31+12], S14
	231 Compare W8, 0
	232 JumpIfEqual {234}
	233 Move W8, 1
	234 Move V8, V0
	235 Move V9, V1
	236 Call 0x1C17DFC
	237 Move V4, [X31+96]
	238 Move V3, [X31+112]
	239 Move V2, [X31+844]
	240 Move W8, [X25+1924]
	241 Move V1, V9
	242 Move V0, V8
	243 Move V5, [X31+5]
	244 Move V14, [X31+56]
	245 Subtract S9, S15, S2
	246 Multiply S16, S1, S1
	247 Subtract V10, V10, V5
	248 Subtract S8, S11, S14
	249 Multiply S17, S0, S0
	250 Subtract S15, S14, S15
	251 Move [X31+840], S12
	252 Multiply S11, S12, S12
	253 Multiply S12, S13, S13
	254 Move [X31+24], S1
	255 Move [X31+32], S0
	256 Move [X31+76], S13
	257 Compare W8, 0
	258 JumpIfNotEqual {271}
	259 Move X0, 0xA07000
	260 Move X0, [X0+1448]
	261 Move V13, V16
	262 Move [X31+20], S17
	263 Call 0x1C17CF4
	264 Move V17, [X31+20]
	265 Move V4, [X31+96]
	266 Move V3, [X31+112]
	267 Move V2, [X31+844]
	268 Move V16, V13
	269 Move W8, 1
	270 Move [X25+1924], W8
	271 Move V0, [X31+2]
	272 Move X0, [X23]
	273 Move [X31+20], S9
	274 Multiply S9, S9, S9
	275 NotImplemented "Instruction INVALID not yet implemented."
	276 Multiply S7, S0, S8
	277 Move V1, [X31+128]
	278 Move V0, [X31+144]
	279 Move W8, [X0+224]
	280 Add S8, S16, S17
	281 Add S12, S11, S12
	282 Move V5, V0
	283 Move V5.S[1], V1.S[0]
	284 Move [X31+32], S15
	285 Multiply S10, S15, S15
	286 Subtract S15, S3, S0
	287 Subtract S13, S4, S1
	288 Subtract S11, S14, S2
	289 Compare W8, 0
	290 JumpIfEqual {292}
	291 Move W8, 1
	292 Move [X31+7], V5
	293 Move [X31+96], D6
	294 Move [X31+16], S7
	295 Call 0x1C17DFC
	296 Move V7, [X31+16]
	297 Move V6, [X31+96]
	298 Move V5, [X31+7]
	299 Move V2, [X31+844]
	300 Move W8, [X25+1924]
	301 Move V0, [X31+5]
	302 Multiply S1, S13, S13
	303 Add S14, S14, S7
	304 Add S9, S9, S8
	305 Add V3, V0, V6
	306 Multiply S0, S15, S15
	307 Add S0, S0, S1
	308 Multiply S1, S11, S11
	309 Add S12, S10, S12
	310 Add S8, S1, S0
	311 Compare W8, 0
	312 JumpIfNotEqual {323}
	313 Move X0, 0xA07000
	314 Move X0, [X0+1448]
	315 Move [X31+7], V5
	316 Move V10, V3
	317 Call 0x1C17CF4
	318 Move V5, [X31+7]
	319 Move V2, [X31+844]
	320 Move V3, V10
	321 Move W8, 1
	322 Move [X25+1924], W8
	323 Move X0, [X23]
	324 Subtract S13, S14, S2
	325 Move V14, [X31+20]
	326 Subtract V0, V3, V5
	327 Move W8, [X0+224]
	328 NotImplemented "Instruction FSQRT not yet implemented."
	329 NotImplemented "Instruction FSQRT not yet implemented."
	330 NotImplemented "Instruction FSQRT not yet implemented."
	331 Move [X31+7], V0
	332 Compare W8, 0
	333 Invalid "Jump target not found in method."
	334 Call 0x1C17DFC
	335 Move V0, [X31+7]
	336 NotImplemented "Instruction INVALID not yet implemented."
	337 Multiply S2, S9, S9
	338 Multiply S3, S10, S10
	339 Multiply S1, S13, S13
	340 Multiply S4, S8, S8
	341 Add S11, S2, S3
	342 NotImplemented "Instruction FADDP not yet implemented."
	343 Multiply S8, S9, S10
	344 Add S0, S0, S1
	345 Subtract S1, S11, S4
	346 Move [X31+96], S13
	347 Move [X31+56], S9
	348 Move S9, 0.5
	349 NotImplemented "Instruction FSQRT not yet implemented."
	350 NotImplemented "Instruction FDIV not yet implemented."
	351 Move [X31+16], S10
	352 Move S10, 1
	353 Move S12, -1
	354 Multiply S0, S0, S9
	355 NotImplemented "Instruction FMIN not yet implemented."
	356 NotImplemented "Instruction FCMP not yet implemented."
	357 NotImplemented "Instruction FCSEL not yet implemented."
	358 And W21, W24, W21
	359 Call 0x3EB2BB0
	360 Move [X31+80], S0
	361 Multiply S0, S13, S13
	362 Subtract S0, S11, S0
	363 NotImplemented "Instruction FDIV not yet implemented."
	364 Multiply S0, S0, S9
	365 NotImplemented "Instruction FMIN not yet implemented."
	366 NotImplemented "Instruction FCMP not yet implemented."
	367 NotImplemented "Instruction FCSEL not yet implemented."
	368 Call 0x3EB2BB0
	369 Move S7, [X31+28]
	370 Move S9, [X31+32]
	371 Move V5, [X31+76]
	372 Move V6, [X31+840]
	373 Move V16, [X31+24]
	374 Multiply S1, S7, S9
	375 Multiply S2, S14, S5
	376 Multiply S3, S14, S6
	377 Multiply S4, S16, S9
	378 Move X8, -46145536
	379 Multiply S5, S16, S5
	380 Multiply S6, S7, S6
	381 Subtract S13, S1, S2
	382 Subtract S15, S3, S4
	383 Move V12, [X8+696]
	384 Subtract S14, S5, S6
	385 Multiply S1, S13, S13
	386 Multiply S2, S15, S15
	387 Add S1, S1, S2
	388 Multiply S2, S14, S14
	389 Add S1, S2, S1
	390 NotImplemented "Instruction FCMP not yet implemented."
	391 Move V8, V0
	392 Move TEMP, X21
	393 And TEMP, TEMP, 1
	394 Compare TEMP, 1
	395 JumpIfNotEqual {424}
	396 Move X8, [X19+48]
	397 Move V1, [X19+16]
	398 Move V0, [X19+32]
	399 Move V2, [X19]
	400 Add X1, X31, 432
	401 Move X0, X20
	402 Move [X31+480], X8
	403 Move [X22+144], V1
	404 Move [X22+152], V0
	405 Move [X22+8], V2
	406 Call ReadOnlyTransformHandle.GetPosition, X0, X1
	407 Move V3, [X31+9]
	408 Move V7, [X31+76]
	409 Move V6, [X31+840]
	410 Subtract S0, S0, S3
	411 Move V3, [X31+8]
	412 Multiply S5, S9, S0
	413 Multiply S0, S7, S0
	414 Subtract S1, S1, S3
	415 Move V3, [X31+844]
	416 Subtract S2, S2, S3
	417 Multiply S3, S9, S1
	418 Multiply S4, S7, S2
	419 Multiply S2, S6, S2
	420 Multiply S1, S6, S1
	421 Subtract S13, S3, S4
	422 Subtract S15, S2, S5
	423 Subtract S14, S0, S1
	424 Move X24, 0xCEC000
	425 Move W8, [X24+1923]
	426 Compare W8, 0
	427 JumpIfNotEqual {433}
	428 Move X0, 0xA07000
	429 Move X0, [X0+1440]
	430 Call 0x1C17CF4
	431 Move W8, 1
	432 Move [X24+1923], W8
	433 Move X8, 0xA07000
	434 Move X8, [X8+1440]
	435 Move X8, [X8]
	436 Move X8, [X8+184]
	437 Move S13, [X8]
	438 Move S15, [X8+4]
	439 Move V14, [X8+8]
	440 Multiply S0, S13, S13
	441 Multiply S1, S15, S15
	442 Add S0, S0, S1
	443 Multiply S1, S14, S14
	444 Add S0, S0, S1
	445 NotImplemented "Instruction FCMP not yet implemented."
	446 Move V5, [X31+7]
	447 Move V2, [X31+96]
	448 Move V4, [X31+76]
	449 Move V6, [X31+840]
	450 Multiply S0, S9, V5.S[1]
	451 Multiply S3, S9, V5.S[0]
	452 Multiply S1, S4, S2
	453 Multiply S2, S6, S2
	454 Multiply S4, S4, V5.S[0]
	455 Multiply S5, S6, V5.S[1]
	456 Subtract S13, S0, S1
	457 Subtract S15, S2, S3
	458 Subtract S14, S4, S5
	459 Multiply S0, S13, S13
	460 Multiply S1, S15, S15
	461 Add S0, S0, S1
	462 Multiply S1, S14, S14
	463 Add S0, S0, S1
	464 NotImplemented "Instruction FCMP not yet implemented."
	465 Move X24, 0xCEC000
	466 Move W8, [X24+1926]
	467 Compare W8, 0
	468 JumpIfNotEqual {474}
	469 Move X0, 0xA07000
	470 Move X0, [X0+1440]
	471 Call 0x1C17CF4
	472 Move W8, 1
	473 Move [X24+1926], W8
	474 Move X8, 0xA07000
	475 Move X8, [X8+1440]
	476 Move X8, [X8]
	477 Move X8, [X8+184]
	478 Move S13, [X8+24]
	479 Move S15, [X8+28]
	480 Move V14, [X8+32]
	481 Move X24, 0xCEC000
	482 Move W8, [X24+1925]
	483 Compare W8, 0
	484 JumpIfNotEqual {490}
	485 Move X0, 0xA07000
	486 Move X0, [X0+1448]
	487 Call 0x1C17CF4
	488 Move W8, 1
	489 Move [X24+1925], W8
	490 Move X0, [X23]
	491 Move W8, [X0+224]
	492 Compare W8, 0
	493 JumpIfNotEqual {495}
	494 Call 0x1C17DFC
	495 Multiply S0, S13, S13
	496 Multiply S1, S15, S15
	497 Move X8, -46145536
	498 Add S0, S0, S1
	499 Move V1, [X8+380]
	500 Move X23, 0xA33000
	501 Multiply S2, S14, S14
	502 Move X23, [X23+560]
	503 Add S0, S2, S0
	504 NotImplemented "Instruction FSQRT not yet implemented."
	505 NotImplemented "Instruction FCMP not yet implemented."
	506 NotImplemented "Instruction FDIV not yet implemented."
	507 NotImplemented "Instruction FDIV not yet implemented."
	508 NotImplemented "Instruction FDIV not yet implemented."
	509 Move X24, 0xCEC000
	510 Move W8, [X24+1923]
	511 Compare W8, 0
	512 JumpIfNotEqual {518}
	513 Move X0, 0xA07000
	514 Move X0, [X0+1440]
	515 Call 0x1C17CF4
	516 Move W8, 1
	517 Move [X24+1923], W8
	518 Move X8, 0xA07000
	519 Move X8, [X8+1440]
	520 Move X8, [X8]
	521 Move X8, [X8+184]
	522 Move S10, [X8]
	523 Move S11, [X8+4]
	524 Move V9, [X8+8]
	525 Move V0, [X31+80]
	526 Move V12, [X31+96]
	527 Move S1, 0.5
	528 Add X0, X31, 172
	529 Subtract S0, S0, S8
	530 Multiply S0, S0, S1
	531 Add X1, X31, 168
	532 Call 0x3EB2BC0
	533 Move V1, [X19]
	534 Move V2, [X19+16]
	535 Move X8, [X19+48]
	536 Move V3, [X19+2]
	537 Move S8, [X31+168]
	538 Move S0, [X31+172]
	539 Move [X22+4], V1
	540 Move [X31+416], X8
	541 Move [X22+80], V2
	542 Move [X22+88], V3
	543 Move V3, [X19+16]
	544 Move V1, [X19+32]
	545 Move X8, [X19+48]
	546 Move V2, [X19]
	547 Add X0, X31, 672
	548 Add X1, X31, 704
	549 Move X2, X31
	550 Multiply S10, S0, S10
	551 Multiply S11, S0, S11
	552 Multiply S9, S0, S9
	553 Move [X31+752], X8
	554 Move [X22+416], V3
	555 Move [X22+424], V1
	556 Move [X22+25], V2
	557 Call TransformStreamHandle.GetRotation, X0, X1
	558 Multiply S4, S8, S0
	559 Multiply S5, S10, S3
	560 Multiply S6, S11, S2
	561 Multiply S7, S9, S1
	562 Multiply S16, S8, S1
	563 Multiply S17, S11, S3
	564 Multiply S18, S9, S0
	565 Multiply S19, S10, S2
	566 Multiply S20, S10, S1
	567 Multiply S21, S10, S0
	568 Multiply S22, S11, S0
	569 Multiply S0, S11, S1
	570 Multiply S1, S8, S2
	571 Multiply S24, S9, S2
	572 Add S2, S4, S5
	573 Multiply S23, S8, S3
	574 Multiply S3, S9, S3
	575 Add S4, S16, S17
	576 Add S2, S6, S2
	577 Move V5, [X22+64]
	578 Move V6, [X22+80]
	579 Move V17, [X22+6]
	580 Move X8, [X31+416]
	581 Add S1, S1, S3
	582 Subtract S3, S23, S21
	583 Add S4, S18, S4
	584 Add S16, S20, S1
	585 Subtract S3, S3, S0
	586 Subtract S0, S2, S7
	587 Subtract S1, S4, S19
	588 Subtract S2, S16, S22
	589 Subtract S3, S3, S24
	590 Add X0, X31, 672
	591 Add X1, X31, 704
	592 Move X2, X31
	593 Move [X22+400], V5
	594 Move [X22+408], V6
	595 Move [X22+27], V17
	596 Move [X31+752], X8
	597 Call TransformStreamHandle.SetRotation, X0, X1, X2
	598 Move X8, [X19+48]
	599 Move V1, [X19+16]
	600 Move V0, [X19+32]
	601 Move V2, [X19]
	602 Add X0, X31, 656
	603 Add X1, X31, 704
	604 Move X2, X31
	605 Move [X31+752], X8
	606 Move [X22+416], V1
	607 Move [X22+424], V0
	608 Move [X22+25], V2
	609 Call TransformStreamHandle.GetPosition, X0, X1
	610 Move V5, [X19+16]
	611 Move V3, [X19+32]
	612 Move X8, [X19+48]
	613 Move V4, [X19]
	614 Move X0, [X23]
	615 Move [X22+16], V5
	616 Move [X22+24], V3
	617 Move V3, [X31+9]
	618 Move [X31+352], X8
	619 Move [X22], V4
	620 Move W8, [X0+224]
	621 Subtract S15, S0, S3
	622 Move V0, [X31+8]
	623 Subtract S9, S1, S0
	624 Move V0, [X31+844]
	625 Subtract S8, S2, S0
	626 Compare W8, 0
	627 JumpIfNotEqual {629}
	628 Call 0x1C17DFC
	629 Move V3, [X31+7]
	630 Move V0, V15
	631 Move V1, V9
	632 Move V2, V8
	633 Move S4, V3.S[1]
	634 Move V5, V12
	635 Call QuaternionExt.FromToRotation, X0, X1
	636 Move V10, V0
	637 Move V14, V1
	638 Move V11, V2
	639 Move X8, [X19+48]
	640 Move V1, [X19+16]
	641 Move V0, [X19+32]
	642 Move V2, [X19]
	643 Add X0, X31, 688
	644 Add X1, X31, 704
	645 Move X2, X31
	646 Move V12, V3
	647 Move [X31+752], X8
	648 Move [X22+416], V1
	649 Move [X22+424], V0
	650 Move [X22+25], V2
	651 Call TransformStreamHandle.GetRotation, X0, X1
	652 Multiply S4, S12, S0
	653 Multiply S5, S10, S3
	654 Multiply S6, S14, S2
	655 Multiply S7, S11, S1
	656 Multiply S16, S12, S1
	657 Multiply S17, S14, S3
	658 Multiply S18, S11, S0
	659 Multiply S19, S10, S2
	660 Multiply S20, S10, S1
	661 Multiply S21, S10, S0
	662 Multiply S22, S14, S0
	663 Multiply S0, S14, S1
	664 Multiply S1, S12, S2
	665 Multiply S24, S11, S2
	666 Add S2, S4, S5
	667 Multiply S23, S12, S3
	668 Multiply S3, S11, S3
	669 Add S4, S16, S17
	670 Add S2, S6, S2
	671 Move V5, [X22]
	672 Move V6, [X22+16]
	673 Move V17, [X22+2]
	674 Move X8, [X31+352]
	675 Add S1, S1, S3
	676 Subtract S3, S23, S21
	677 Add S4, S18, S4
	678 Add S16, S20, S1
	679 Subtract S3, S3, S0
	680 Subtract S0, S2, S7
	681 Subtract S1, S4, S19
	682 Subtract S2, S16, S22
	683 Subtract S3, S3, S24
	684 Add X0, X31, 688
	685 Add X1, X31, 704
	686 Move X2, X31
	687 Move [X22+400], V5
	688 Move [X22+408], V6
	689 Move [X22+27], V17
	690 Move [X31+752], X8
	691 Call TransformStreamHandle.SetRotation, X0, X1, X2
	692 Compare W21, 0
	693 JumpIfEqual {879}
	694 Multiply S0, S15, S15
	695 Multiply S1, S9, S9
	696 Add S0, S0, S1
	697 Multiply S1, S8, S8
	698 Add S11, S1, S0
	699 NotImplemented "Instruction FCMP not yet implemented."
	700 Move X8, [X19+48]
	701 Move V1, [X19+16]
	702 Move V0, [X19+32]
	703 Move V2, [X19]
	704 Add X0, X31, 672
	705 Add X1, X31, 704
	706 Move X2, X31
	707 Move [X31+752], X8
	708 Move [X22+416], V1
	709 Move [X22+424], V0
	710 Move [X22+25], V2
	711 Call TransformStreamHandle.GetPosition, X0, X1
	712 Move V8, V0
	713 Move V9, V1
	714 Move V10, V2
	715 Move X8, [X19+48]
	716 Move V1, [X19+16]
	717 Move V0, [X19+32]
	718 Move V2, [X19]
	719 Add X0, X31, 656
	720 Add X1, X31, 704
	721 Move X2, X31
	722 Move [X31+752], X8
	723 Move [X22+416], V1
	724 Move [X22+424], V0
	725 Move [X22+25], V2
	726 Call TransformStreamHandle.GetPosition, X0, X1
	727 Move V4, [X31+128]
	728 Move V3, [X31+144]
	729 Move V5, [X31+844]
	730 Move X8, [X19+48]
	731 Add X1, X31, 240
	732 Subtract S8, S8, S3
	733 Subtract S0, S0, S3
	734 Subtract S1, S1, S4
	735 NotImplemented "Instruction FSQRT not yet implemented."
	736 Subtract S9, S9, S4
	737 NotImplemented "Instruction FDIV not yet implemented."
	738 NotImplemented "Instruction FDIV not yet implemented."
	739 Move V0, [X19]
	740 Move V1, [X19+16]
	741 Move V4, [X19+32]
	742 Subtract S2, S2, S5
	743 Move X0, X20
	744 NotImplemented "Instruction FDIV not yet implemented."
	745 Subtract S10, S10, S5
	746 Move [X31+288], X8
	747 Move [X31+256], V1
	748 Move [X31+264], V4
	749 Move [X31+15], V0
	750 Call ReadOnlyTransformHandle.GetPosition, X0, X1
	751 Move V6, [X31+56]
	752 Move V7, [X31+16]
	753 Multiply S3, S8, S13
	754 Multiply S4, S9, S12
	755 Multiply S5, S10, S11
	756 Add S3, S3, S4
	757 Add S6, S6, S7
	758 Move X8, -46145536
	759 Add S3, S5, S3
	760 Multiply S4, S6, S6
	761 Move V6, [X8+1040]
	762 Multiply S5, S13, S3
	763 Multiply S7, S12, S3
	764 Multiply S3, S11, S3
	765 Subtract S14, S8, S5
	766 Subtract S9, S9, S7
	767 Subtract S8, S10, S3
	768 Multiply S3, S14, S14
	769 Multiply S5, S9, S9
	770 Multiply S7, S8, S8
	771 Add S3, S3, S5
	772 Add S3, S7, S3
	773 Multiply S4, S4, S6
	774 NotImplemented "Instruction FCMP not yet implemented."
	775 Move V3, [X31+9]
	776 Subtract S0, S0, S3
	777 Move V3, [X31+8]
	778 Subtract S1, S1, S3
	779 Move V3, [X31+844]
	780 Multiply S4, S12, S1
	781 Subtract S2, S2, S3
	782 Multiply S3, S13, S0
	783 Multiply S5, S11, S2
	784 Add S3, S3, S4
	785 Add S3, S5, S3
	786 Multiply S4, S13, S3
	787 Multiply S5, S12, S3
	788 Multiply S3, S11, S3
	789 Subtract S13, S0, S4
	790 Subtract S15, S1, S5
	791 Subtract S10, S2, S3
	792 Multiply S0, S13, S13
	793 Multiply S1, S15, S15
	794 Add S0, S0, S1
	795 Multiply S1, S10, S10
	796 Add S0, S1, S0
	797 NotImplemented "Instruction FCMP not yet implemented."
	798 Move X0, [X23]
	799 Move W8, [X0+224]
	800 Compare W8, 0
	801 JumpIfNotEqual {803}
	802 Call 0x1C17DFC
	803 Move V0, V14
	804 Move V1, V9
	805 Move V2, V8
	806 Move V3, V13
	807 Move V4, V15
	808 Move V5, V10
	809 Call QuaternionExt.FromToRotation, X0, X1
	810 Move V4, [X31+12]
	811 Multiply S0, S0, S4
	812 Multiply S1, S1, S4
	813 Multiply S2, S2, S4
	814 Call QuaternionExt.NormalizeSafe, X0
	815 Move V8, V0
	816 Move V9, V1
	817 Move V10, V2
	818 Move X8, [X19+48]
	819 Move V2, [X19+16]
	820 Move V0, [X19+32]
	821 Move V1, [X19]
	822 Add X0, X31, 688
	823 Move [X31+224], X8
	824 Move [X31+192], V2
	825 Move [X31+200], V0
	826 Move [X31+11], V1
	827 Move X8, [X19+48]
	828 Move V1, [X19+16]
	829 Move V0, [X19+32]
	830 Move V2, [X19]
	831 Add X1, X31, 704
	832 Move X2, X31
	833 Move V11, V3
	834 Move [X31+752], X8
	835 Move [X22+416], V1
	836 Move [X22+424], V0
	837 Move [X22+25], V2
	838 Call TransformStreamHandle.GetRotation, X0, X1
	839 Multiply S4, S11, S0
	840 Multiply S5, S8, S3
	841 Multiply S6, S9, S2
	842 Multiply S7, S10, S1
	843 Multiply S16, S11, S1
	844 Multiply S17, S9, S3
	845 Multiply S18, S10, S0
	846 Multiply S19, S8, S2
	847 Multiply S20, S8, S1
	848 Multiply S21, S8, S0
	849 Multiply S22, S9, S0
	850 Multiply S0, S9, S1
	851 Multiply S1, S11, S2
	852 Multiply S24, S10, S2
	853 Add S2, S4, S5
	854 Multiply S23, S11, S3
	855 Multiply S3, S10, S3
	856 Add S4, S16, S17
	857 Add S2, S6, S2
	858 Move V5, [X31+176]
	859 Move V6, [X31+192]
	860 Move V17, [X31+13]
	861 Move X8, [X31+224]
	862 Add S1, S1, S3
	863 Subtract S3, S23, S21
	864 Add S4, S18, S4
	865 Add S16, S20, S1
	866 Subtract S3, S3, S0
	867 Subtract S0, S2, S7
	868 Subtract S1, S4, S19
	869 Subtract S2, S16, S22
	870 Subtract S3, S3, S24
	871 Add X0, X31, 688
	872 Add X1, X31, 704
	873 Move X2, X31
	874 Move [X22+400], V5
	875 Move [X22+408], V6
	876 Move [X22+27], V17
	877 Move [X31+752], X8
	878 Call TransformStreamHandle.SetRotation, X0, X1, X2
	879 Move V1, [X19+16]
	880 Move V0, [X19+32]
	881 Move V2, [X19]
	882 Move X8, [X19+48]
	883 Add X0, X31, 656
	884 Move [X22+416], V1
	885 Move [X22+424], V0
	886 Move [X22+25], V2
	887 Move S1, [X31+68]
	888 Move S0, [X31+72]
	889 Move S3, [X31+60]
	890 Move S2, [X31+64]
	891 Add X1, X31, 704
	892 Move X2, X31
	893 Move [X31+752], X8
	894 Call TransformStreamHandle.SetRotation, X0, X1, X2
	895 Add X31, X31, 768
	896 Move X20, [X31+128]
	897 Move X19, [X31+136]
	898 Move X22, [X31+112]
	899 Move X21, [X31+120]
	900 Move X24, [X31+96]
	901 Move X23, [X31+104]
	902 Move X30, [X31+80]
	903 Move X25, [X31+88]
	904 Move X29, [X31+64]
	905 Move D9, [X31+48]
	906 Move D8, [X31+56]
	907 Move D11, [X31+32]
	908 Move D10, [X31+40]
	909 Move D13, [X31+16]
	910 Move D12, [X31+24]
	911 Move D15, [X31+144]
	912 Move D14, [X31+152]
	913 Return 

Method: System.Void InverseSolveTwoBoneIK(UnityEngine.Animations.AnimationStream stream, UnityEngine.Animations.Rigging.ReadOnlyTransformHandle root, UnityEngine.Animations.Rigging.ReadOnlyTransformHandle mid, UnityEngine.Animations.Rigging.ReadOnlyTransformHandle tip, UnityEngine.Animations.Rigging.ReadWriteTransformHandle target, UnityEngine.Animations.Rigging.ReadWriteTransformHandle hint, System.Single posWeight, System.Single rotWeight, System.Single hintWeight, UnityEngine.Animations.Rigging.AffineTransform targetOffset)

Disassembly:
	0x036FA24C STP X20, X19, [X31 + 0x20]
	0x036FA250 ADRP X22, 0xCE6000
	0x036FA254 ADRP X21, 0x9FD000
	0x036FA258 LDRB W8, [X22 + 0xBE8]
	0x036FA25C LDR X21, [X21 + 0xFD8]
	0x036FA260 MOV W20, W1
	0x036FA264 MOV X19, X0
	0x036FA268 TBNZ X8, 0x0, 0x36FA280
	0x036FA26C ADRP X0, 0x9FD000
	0x036FA270 LDR X0, [X0 + 0xFD8]
	0x036FA274 BL 0x1C16CF4
	0x036FA278 MOVZ W8, 0x1
	0x036FA27C STRB W8, [X22 + 0xBE8]
	0x036FA280 LDR X2, [X21]
	0x036FA284 AND W1, W20, 0x1
	0x036FA288 ADD X0, X31, 0xC
	0x036FA28C STRH W31, [X31 + 0xC]
	0x036FA290 BL 0x242D570
	0x036FA294 LDRH W8, [X31 + 0xC]
	0x036FA298 LDP X22, X21, [X31 + 0x10]
	0x036FA29C STRH W8, [X19 + 0x1C]
	0x036FA2A0 LDP X20, X19, [X31 + 0x20]
	0x036FA2A4 LDR X30, [X31], #0x30
	0x036FA2A8 RET
	0x036FA2AC STR X30, [X31 - 0x20]!
	0x036FA2B0 STP X20, X19, [X31 + 0x10]
	0x036FA2B4 ADRP X20, 0xCE6000
	0x036FA2B8 LDRB W8, [X20 + 0xBE9]
	0x036FA2BC MOV X19, X0
	0x036FA2C0 TBNZ X8, 0x0, 0x36FA2E4
	0x036FA2C4 ADRP X0, 0x9FD000
	0x036FA2C8 LDR X0, [X0 + 0xBF0]
	0x036FA2CC BL 0x1C16CF4
	0x036FA2D0 ADRP X0, 0x9FD000
	0x036FA2D4 LDR X0, [X0 + 0xBF8]
	0x036FA2D8 BL 0x1C16CF4
	0x036FA2DC MOVZ W8, 0x1
	0x036FA2E0 STRB W8, [X20 + 0xBE9]
	0x036FA2E4 LDRB W8, [X19 + 0x1E]!
	0x036FA2E8 CBZ W8, 0x36FA308
	0x036FA2EC ADRP X8, 0x9FD000
	0x036FA2F0 LDR X8, [X8 + 0xBF8]
	0x036FA2F4 MOV X0, X19
	0x036FA2F8 LDP X20, X19, [X31 + 0x10]
	0x036FA2FC LDR X1, [X8]
	0x036FA300 LDR X30, [X31], #0x20
	0x036FA304 B 0x242D58C
	0x036FA308 LDP X20, X19, [X31 + 0x10]
	0x036FA30C MOV W0, W31
	0x036FA310 LDR X30, [X31], #0x20
	0x036FA314 RET
	0x036FA318 STR X30, [X31 - 0x30]!
	0x036FA31C STP X22, X21, [X31 + 0x10]
	0x036FA320 STP X20, X19, [X31 + 0x20]
	0x036FA324 ADRP X22, 0xCE6000
	0x036FA328 ADRP X21, 0x9FD000
	0x036FA32C LDRB W8, [X22 + 0xBEA]
	0x036FA330 LDR X21, [X21 + 0xFD8]
	0x036FA334 MOV W20, W1
	0x036FA338 MOV X19, X0
	0x036FA33C TBNZ X8, 0x0, 0x36FA354
	0x036FA340 ADRP X0, 0x9FD000
	0x036FA344 LDR X0, [X0 + 0xFD8]
	0x036FA348 BL 0x1C16CF4
	0x036FA34C MOVZ W8, 0x1
	0x036FA350 STRB W8, [X22 + 0xBEA]
	0x036FA354 LDR X2, [X21]
	0x036FA358 AND W1, W20, 0x1
	0x036FA35C ADD X0, X31, 0xC
	0x036FA360 STRH W31, [X31 + 0xC]
	0x036FA364 BL 0x242D570
	0x036FA368 LDRH W8, [X31 + 0xC]
	0x036FA36C LDP X22, X21, [X31 + 0x10]
	0x036FA370 STRH W8, [X19 + 0x1E]
	0x036FA374 LDP X20, X19, [X31 + 0x20]
	0x036FA378 LDR X30, [X31], #0x30
	0x036FA37C RET
	0x036FA380 LDR W0, [X0 + 0x20]
	0x036FA384 RET
	0x036FA388 STR W1, [X0 + 0x20]
	0x036FA38C RET
	0x036FA390 LDR X0, [X0 + 0x28]
	0x036FA394 RET
	0x036FA398 STR X1, [X0 + 0x28]
	0x036FA39C RET
	0x036FA3A0 MOV X1, X31
	0x036FA3A4 B 0x33A51F0
	0x036FA3A8 STP X30, X21, [X31 - 0x20]!
	0x036FA3AC STP X20, X19, [X31 + 0x10]
	0x036FA3B0 MOV W20, W1
	0x036FA3B4 MOV X1, X31
	0x036FA3B8 MOV W19, W2
	0x036FA3BC MOV X21, X0
	0x036FA3C0 BL 0x33A51F0
	0x036FA3C4 STP W19, W20, [X21 + 0x10]
	0x036FA3C8 LDP X20, X19, [X31 + 0x10]
	0x036FA3CC LDP X30, X21, [X31], #0x20
	0x036FA3D0 RET
	0x036FA3D4 STR X30, [X31 - 0x20]!
	0x036FA3D8 STP X20, X19, [X31 + 0x10]
	0x036FA3DC MOV X19, X1
	0x036FA3E0 MOV X1, X31
	0x036FA3E4 MOV X20, X0
	0x036FA3E8 BL 0x33A51F0
	0x036FA3EC STR X19, [X20 + 0x28]
	0x036FA3F0 LDP X20, X19, [X31 + 0x10]
	0x036FA3F4 LDR X30, [X31], #0x20
	0x036FA3F8 RET
	0x036FA3FC STR X30, [X31 - 0x20]!
	0x036FA400 STP X20, X19, [X31 + 0x10]
	0x036FA404 ADRP X20, 0xCE6000
	0x036FA408 ADRP X19, 0xA21000
	0x036FA40C LDRB W8, [X20 + 0xBEB]
	0x036FA410 LDR X19, [X19 + 0x848]
	0x036FA414 TBNZ X8, 0x0, 0x36FA438
	0x036FA418 ADRP X0, 0xA21000
	0x036FA41C LDR X0, [X0 + 0x848]
	0x036FA420 BL 0x1C16CF4
	0x036FA424 ADRP X0, 0xA46000
	0x036FA428 LDR X0, [X0 + 0xCA0]
	0x036FA42C BL 0x1C16CF4
	0x036FA430 MOVZ W8, 0x1
	0x036FA434 STRB W8, [X20 + 0xBEB]
	0x036FA438 LDR X0, [X19]
	0x036FA43C ADRP X19, 0xA46000
	0x036FA440 LDR W8, [X0 + 0xE0]
	0x036FA444 LDR X19, [X19 + 0xCA0]
	0x036FA448 CBNZ W8, 0x36FA450
	0x036FA44C BL 0x1C16DFC
	0x036FA450 LDR X0, [X19]
	0x036FA454 LDP X20, X19, [X31 + 0x10]
	0x036FA458 LDR X30, [X31], #0x20
	0x036FA45C B 0x36FA460
	0x036FA460 STP X30, X21, [X31 - 0x20]!
	0x036FA464 STP X20, X19, [X31 + 0x10]
	0x036FA468 ADRP X21, 0xCE6000
	0x036FA46C ADRP X20, 0xA21000
	0x036FA470 LDRB W8, [X21 + 0xBF4]
	0x036FA474 LDR X20, [X20 + 0x848]
	0x036FA478 MOV X19, X0
	0x036FA47C TBNZ X8, 0x0, 0x36FA4AC
	0x036FA480 ADRP X0, 0xA21000
	0x036FA484 LDR X0, [X0 + 0x848]
	0x036FA488 BL 0x1C16CF4
	0x036FA48C ADRP X0, 0xA46000
	0x036FA490 LDR X0, [X0 + 0xCA8]
	0x036FA494 BL 0x1C16CF4
	0x036FA498 ADRP X0, 0xA2E000
	0x036FA49C LDR X0, [X0]
	0x036FA4A0 BL 0x1C16CF4
	0x036FA4A4 MOVZ W8, 0x1
	0x036FA4A8 STRB W8, [X21 + 0xBF4]
	0x036FA4AC LDR X0, [X20]
	0x036FA4B0 ADRP X21, 0xA46000
	0x036FA4B4 ADRP X20, 0xA2E000
	0x036FA4B8 LDR W8, [X0 + 0xE0]
	0x036FA4BC LDR X21, [X21 + 0xCA8]
	0x036FA4C0 LDR X20, [X20]
	0x036FA4C4 CBNZ W8, 0x36FA4CC
	0x036FA4C8 BL 0x1C16DFC
	0x036FA4CC LDR X0, [X21]
	0x036FA4D0 MOV X1, X19
	0x036FA4D4 BL 0x36FB600
	0x036FA4D8 LDR X1, [X20]
	0x036FA4DC LDP X20, X19, [X31 + 0x10]
	0x036FA4E0 MOV X2, X31
	0x036FA4E4 LDP X30, X21, [X31], #0x20
	0x036FA4E8 B 0x321BA08
	0x036FA4EC STP X30, X21, [X31 - 0x20]!
	0x036FA4F0 STP X20, X19, [X31 + 0x10]
	0x036FA4F4 ADRP X20, 0xCE6000
	0x036FA4F8 ADRP X21, 0xA21000
	0x036FA4FC LDRB W8, [X20 + 0xBEC]
	0x036FA500 LDR X21, [X21 + 0x848]
	0x036FA504 MOV X19, X0
	0x036FA508 TBNZ X8, 0x0, 0x36FA52C
	0x036FA50C ADRP X0, 0xA21000
	0x036FA510 LDR X0, [X0 + 0x848]
	0x036FA514 BL 0x1C16CF4
	0x036FA518 ADRP X0, 0xA46000
	0x036FA51C LDR X0, [X0 + 0xCB0]
	0x036FA520 BL 0x1C16CF4
	0x036FA524 MOVZ W8, 0x1
	0x036FA528 STRB W8, [X20 + 0xBEC]
	0x036FA52C LDR X0, [X21]
	0x036FA530 LDR W8, [X0 + 0xE0]
	0x036FA534 CBNZ W8, 0x36FA540
	0x036FA538 BL 0x1C16DFC
	0x036FA53C LDR X0, [X21]
	0x036FA540 BL 0x1C16D0C
	0x036FA544 LDR X8, [X0]
	0x036FA548 CBNZ X8, 0x36FA588
	0x036FA54C ADRP X8, 0xA46000

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Subtract X31, X31, 464
	016 Move [X31+384], X4
	017 Move [X31+392], W5
	018 Move [X31+368], X6
	019 Move [X31+376], W7
	020 Move [X31+360], W31
	021 Move [X31+344], X31
	022 Move [X31+352], X31
	023 Move [X31+336], X31
	024 Move [X31+328], W31
	025 Move [X31+312], X31
	026 Move [X31+320], X31
	027 Move [X31+304], X31
	028 Move V10, V2
	029 Move V9, V1
	030 Move [X31+60], S0
	031 Move V2, [X0+16]
	032 Move V0, [X0+32]
	033 Move X9, [X0+48]
	034 Move V1, [X0]
	035 Move X22, [X31+576]
	036 Move X8, X1
	037 Move X19, X0
	038 Add X1, X31, 224
	039 Move X0, X8
	040 Move X20, X3
	041 Move X21, X2
	042 Move [X31+272], X9
	043 Move [X31+240], V2
	044 Move [X31+248], V0
	045 Move [X31+14], V1
	046 Call ReadOnlyTransformHandle.GetPosition, X0, X1
	047 Move V11, V0
	048 Move V12, V1
	049 Move V13, V2
	050 Move X8, [X19+48]
	051 Move V2, [X19+16]
	052 Move V0, [X19+32]
	053 Move V1, [X19]
	054 Add X1, X31, 160
	055 Move X0, X21
	056 Move [X31+208], X8
	057 Move [X31+176], V2
	058 Move [X31+184], V0
	059 Move [X31+10], V1
	060 Call ReadOnlyTransformHandle.GetPosition, X0, X1
	061 Move V14, V0
	062 Move V15, V1
	063 Move V8, V2
	064 Move X8, [X19+48]
	065 Move V2, [X19+16]
	066 Move V0, [X19+32]
	067 Move V1, [X19]
	068 Add X1, X31, 96
	069 Add X2, X31, 352
	070 Add X3, X31, 336
	071 Move X0, X20
	072 Move [X31+144], X8
	073 Move [X31+112], V2
	074 Move [X31+120], V0
	075 Move [X31+6], V1
	076 Call ReadOnlyTransformHandle.GetGlobalTR, X0, X1, X2, X3
	077 Move X8, [X19+48]
	078 Move V1, [X19+16]
	079 Move V0, [X19+32]
	080 Move V2, [X19]
	081 Add X0, X31, 384
	082 Add X1, X31, 400
	083 Add X2, X31, 320
	084 Add X3, X31, 304
	085 Move X4, X31
	086 Move [X31+448], X8
	087 Move [X31+416], V1
	088 Move [X31+424], V0
	089 Move [X31+25], V2
	090 Call TransformStreamHandle.GetGlobalTR, X0, X1, X2, X3
	091 Move X8, [X19+48]
	092 Move V1, [X19+16]
	093 Move V0, [X19+32]
	094 Move V2, [X19]
	095 Add X0, X31, 368
	096 Add X1, X31, 400
	097 Move X2, X31
	098 Move [X31+448], X8
	099 Move [X31+416], V1
	100 Move [X31+424], V0
	101 Move [X31+25], V2
	102 Call TransformStreamHandle.IsValid, X0, X1
	103 Move X21, 0xCDF000
	104 Move W8, [X21+1923]
	105 Move W20, W0
	106 Compare W8, 0
	107 JumpIfNotEqual {113}
	108 Move X0, 0x9FA000
	109 Move X0, [X0+1440]
	110 Call 0x1C17CF4
	111 Move W8, 1
	112 Move [X21+1923], W8
	113 Move X8, 0x9FA000
	114 Move X8, [X8+1440]
	115 Move X8, [X8]
	116 Move X8, [X8+184]
	117 Move V0, [X8]
	118 Move V1, [X8+8]
	119 Move [X31+288], D0
	120 Move [X31+296], S1
	121 Move TEMP, X20
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {140}
	125 Move X8, [X19+48]
	126 Move V1, [X19+16]
	127 Move V0, [X19+32]
	128 Move V2, [X19]
	129 Add X0, X31, 368
	130 Add X1, X31, 400
	131 Move X2, X31
	132 Move [X31+448], X8
	133 Move [X31+416], V1
	134 Move [X31+424], V0
	135 Move [X31+25], V2
	136 Call TransformStreamHandle.GetPosition, X0, X1
	137 Move [X31+288], S0
	138 Move [X31+292], S1
	139 Move [X31+296], S2
	140 Move V2, [X22]
	141 Move V0, [X31+360]
	142 Move V1, [X31+336]
	143 Add X9, X31, 85
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 Move V4, [X31+348]
	146 Move [X31+4], V2
	147 Move V2, [X31+60]
	148 Move X8, [X31+352]
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 Move [X31+76], V3
	151 Move [X31+28], S4
	152 Move [X31+36], S2
	153 Move [X31+16], S1
	154 And W3, W20, 1
	155 Add X0, X31, 320
	156 Add X1, X31, 304
	157 Add X2, X31, 288
	158 Add X4, X31, 64
	159 Move [X31+8], S0
	160 Move V0, V11
	161 Move V1, V12
	162 Move V2, V13
	163 Move V3, V14
	164 Move V4, V15
	165 Move V5, V8
	166 Move [X31+48], S10
	167 Move [X31+40], S9
	168 Move [X31+20], X9
	169 Move [X31], X8
	170 Call AnimationRuntimeUtils.InverseSolveTwoBoneIK, X0, X1, X2, X3, X4, X5, X6, X7, V0, V1, V2, X8
	171 Move V0, [X31+320]
	172 Move V1, [X31+324]
	173 Move V5, [X19+16]
	174 Move V3, [X19+32]
	175 Move X8, [X19+48]
	176 Move V4, [X19]
	177 Move V2, [X31+328]
	178 Add X0, X31, 384
	179 Add X1, X31, 400
	180 Move X2, X31
	181 Move [X31+448], X8
	182 Move [X31+416], V5
	183 Move [X31+424], V3
	184 Move [X31+25], V4
	185 Call TransformStreamHandle.SetPosition, X0, X1, X2
	186 Move V0, [X31+304]
	187 Move V1, [X31+308]
	188 Move V4, [X19]
	189 Move V5, [X19+16]
	190 Move X8, [X19+48]
	191 Move V6, [X19+2]
	192 Move V2, [X31+312]
	193 Move V3, [X31+316]
	194 Add X0, X31, 384
	195 Add X1, X31, 400
	196 Move X2, X31
	197 Move [X31+448], X8
	198 Move [X31+416], V5
	199 Move [X31+424], V6
	200 Move [X31+25], V4
	201 Call TransformStreamHandle.SetRotation, X0, X1, X2
	202 Move V0, [X31+288]
	203 Move V1, [X31+292]
	204 Move V5, [X19+16]
	205 Move V3, [X19+32]
	206 Move X8, [X19+48]
	207 Move V4, [X19]
	208 Move V2, [X31+296]
	209 Add X0, X31, 368
	210 Add X1, X31, 400
	211 Move X2, X31
	212 Move [X31+448], X8
	213 Move [X31+416], V5
	214 Move [X31+424], V3
	215 Move [X31+25], V4
	216 Call TransformStreamHandle.SetPosition, X0, X1, X2
	217 Add X31, X31, 464
	218 Move X20, [X31+96]
	219 Move X19, [X31+104]
	220 Move X22, [X31+80]
	221 Move X21, [X31+88]
	222 Move X29, [X31+64]
	223 Move X30, [X31+72]
	224 Move D9, [X31+48]
	225 Move D8, [X31+56]
	226 Move D11, [X31+32]
	227 Move D10, [X31+40]
	228 Move D13, [X31+16]
	229 Move D12, [X31+24]
	230 Move D15, [X31+112]
	231 Move D14, [X31+120]
	232 Return 

Method: System.Void InverseSolveTwoBoneIK(UnityEngine.Vector3 rootPosition, UnityEngine.Vector3 midPosition, UnityEngine.Vector3 tipPosition, UnityEngine.Quaternion tipRotation, ref UnityEngine.Vector3 targetPosition, ref UnityEngine.Quaternion targetRotation, ref UnityEngine.Vector3 hintPosition, System.Boolean isHintValid, System.Single posWeight, System.Single rotWeight, System.Single hintWeight, UnityEngine.Animations.Rigging.AffineTransform targetOffset)

Disassembly:
	0x036FA550 LDR X8, [X8 + 0xCB0]
	0x036FA554 LDR X0, [X8]
	0x036FA558 BL 0x1C16F10
	0x036FA55C MOV X20, X0
	0x036FA560 BL 0x36FA5BC
	0x036FA564 LDR X0, [X21]
	0x036FA568 LDR W8, [X0 + 0xE0]
	0x036FA56C CBNZ W8, 0x36FA578
	0x036FA570 BL 0x1C16DFC
	0x036FA574 LDR X0, [X21]
	0x036FA578 BL 0x1C16D0C
	0x036FA57C STR X20, [X0]
	0x036FA580 LDR X0, [X21]
	0x036FA584 BL 0x1C16D0C
	0x036FA588 LDR X0, [X21]
	0x036FA58C LDR W8, [X0 + 0xE0]
	0x036FA590 CBNZ W8, 0x36FA59C
	0x036FA594 BL 0x1C16DFC
	0x036FA598 LDR X0, [X21]
	0x036FA59C BL 0x1C16D0C
	0x036FA5A0 LDR X0, [X0]
	0x036FA5A4 CBZ X0, 0x36FA5B8
	0x036FA5A8 MOV X1, X19
	0x036FA5AC LDP X20, X19, [X31 + 0x10]
	0x036FA5B0 LDP X30, X21, [X31], #0x20
	0x036FA5B4 B 0x36FA624
	0x036FA5B8 BL 0x1C16F20
	0x036FA5BC STP X30, X21, [X31 - 0x20]!
	0x036FA5C0 STP X20, X19, [X31 + 0x10]
	0x036FA5C4 ADRP X21, 0xCE6000
	0x036FA5C8 ADRP X20, 0x9F9000
	0x036FA5CC LDRB W8, [X21 + 0xBFA]
	0x036FA5D0 LDR X20, [X20 + 0x8F0]
	0x036FA5D4 MOV X19, X0
	0x036FA5D8 TBNZ X8, 0x0, 0x36FA5F0
	0x036FA5DC ADRP X0, 0x9F9000
	0x036FA5E0 LDR X0, [X0 + 0x8F0]
	0x036FA5E4 BL 0x1C16CF4
	0x036FA5E8 MOVZ W8, 0x1
	0x036FA5EC STRB W8, [X21 + 0xBFA]
	0x036FA5F0 MOV X0, X19
	0x036FA5F4 MOV X1, X31
	0x036FA5F8 BL 0x33BDD8C
	0x036FA5FC LDR X0, [X20]
	0x036FA600 BL 0x1C16F10
	0x036FA604 MOV X1, X31
	0x036FA608 MOV X20, X0
	0x036FA60C BL 0x3231AC4
	0x036FA610 STR X20, [X19 + 0x10]
	0x036FA614 STRB W31, [X19 + 0x18]
	0x036FA618 LDP X20, X19, [X31 + 0x10]
	0x036FA61C LDP X30, X21, [X31], #0x20
	0x036FA620 RET
	0x036FA624 STR X30, [X31 - 0x20]!
	0x036FA628 STP X20, X19, [X31 + 0x10]
	0x036FA62C MOV X19, X0
	0x036FA630 LDR X0, [X0 + 0x10]
	0x036FA634 CBZ X0, 0x36FA66C
	0x036FA638 MOV X20, X1
	0x036FA63C MOV X1, X31
	0x036FA640 BL 0x3232AC0
	0x036FA644 LDR X0, [X19 + 0x10]
	0x036FA648 STRB W31, [X19 + 0x18]
	0x036FA64C CBZ X0, 0x36FA66C
	0x036FA650 MOV X1, X20
	0x036FA654 MOV X2, X31
	0x036FA658 BL 0x32333E0
	0x036FA65C MOV X0, X19
	0x036FA660 LDP X20, X19, [X31 + 0x10]
	0x036FA664 LDR X30, [X31], #0x20
	0x036FA668 RET
	0x036FA66C BL 0x1C16F20
	0x036FA670 STR X30, [X31 - 0x20]!
	0x036FA674 STP X20, X19, [X31 + 0x10]
	0x036FA678 ADRP X20, 0xCE6000
	0x036FA67C ADRP X19, 0xA21000
	0x036FA680 LDRB W8, [X20 + 0xBED]
	0x036FA684 LDR X19, [X19 + 0x848]
	0x036FA688 TBNZ X8, 0x0, 0x36FA6AC
	0x036FA68C ADRP X0, 0xA46000
	0x036FA690 LDR X0, [X0 + 0xCB8]
	0x036FA694 BL 0x1C16CF4
	0x036FA698 ADRP X0, 0xA21000
	0x036FA69C LDR X0, [X0 + 0x848]
	0x036FA6A0 BL 0x1C16CF4
	0x036FA6A4 MOVZ W8, 0x1
	0x036FA6A8 STRB W8, [X20 + 0xBED]
	0x036FA6AC LDR X0, [X19]
	0x036FA6B0 LDR W8, [X0 + 0xE0]
	0x036FA6B4 CBNZ W8, 0x36FA6C0
	0x036FA6B8 BL 0x1C16DFC
	0x036FA6BC LDR X0, [X19]
	0x036FA6C0 LDR X8, [X0 + 0xB8]
	0x036FA6C4 LDRB W8, [X8]
	0x036FA6C8 CBZ W8, 0x36FA6FC
	0x036FA6CC ADRP X19, 0xA46000
	0x036FA6D0 LDR X19, [X19 + 0xCB8]
	0x036FA6D4 LDR X0, [X19]
	0x036FA6D8 LDR W8, [X0 + 0xE0]
	0x036FA6DC CBNZ W8, 0x36FA6E8
	0x036FA6E0 BL 0x1C16DFC
	0x036FA6E4 LDR X0, [X19]
	0x036FA6E8 LDR X8, [X0 + 0xB8]
	0x036FA6EC LDRB W8, [X8 + 0x8]
	0x036FA6F0 CMP W8, 0x0
	0x036FA6F4 CSET W0, NE
	0x036FA6F8 B 0x36FA700
	0x036FA6FC MOV W0, W31
	0x036FA700 LDP X20, X19, [X31 + 0x10]
	0x036FA704 LDR X30, [X31], #0x20
	0x036FA708 RET
	0x036FA70C MOV X1, X31
	0x036FA710 B 0x3C006AC
	0x036FA714 MOV X0, X31
	0x036FA718 B 0x3C006E8
	0x036FA71C STP X30, X19, [X31 - 0x10]!
	0x036FA720 ADRP X0, 0xA02000
	0x036FA724 LDR X0, [X0 + 0x758]
	0x036FA728 BL 0x1C16D08
	0x036FA72C BL 0x1C16F10
	0x036FA730 MOV X1, X31
	0x036FA734 MOV X19, X0
	0x036FA738 BL 0x3380288
	0x036FA73C ADRP X0, 0xA46000
	0x036FA740 LDR X0, [X0 + 0xCC0]
	0x036FA744 BL 0x1C16D08
	0x036FA748 MOV X1, X0
	0x036FA74C MOV X0, X19
	0x036FA750 BL 0x1C16DEC
	0x036FA754 STP X30, X21, [X31 - 0x20]!
	0x036FA758 STP X20, X19, [X31 + 0x10]
	0x036FA75C ADRP X20, 0xCE6000
	0x036FA760 LDRB W8, [X20 + 0xBEE]
	0x036FA764 MOV X19, X0
	0x036FA768 TBNZ X8, 0x0, 0x36FA798
	0x036FA76C ADRP X0, 0xA21000
	0x036FA770 LDR X0, [X0 + 0x848]
	0x036FA774 BL 0x1C16CF4
	0x036FA778 ADRP X0, 0xA46000
	0x036FA77C LDR X0, [X0 + 0xCC8]
	0x036FA780 BL 0x1C16CF4
	0x036FA784 ADRP X0, 0xA2A000
	0x036FA788 LDR X0, [X0 + 0x278]
	0x036FA78C BL 0x1C16CF4
	0x036FA790 MOVZ W8, 0x1
	0x036FA794 STRB W8, [X20 + 0xBEE]
	0x036FA798 MOV X0, X19
	0x036FA79C MOV X1, X31
	0x036FA7A0 MOV X2, X31
	0x036FA7A4 BL 0x33BE5B0
	0x036FA7A8 TBNZ X0, 0x0, 0x36FA888
	0x036FA7AC ADRP X21, 0xA21000
	0x036FA7B0 LDR X21, [X21 + 0x848]
	0x036FA7B4 LDR X0, [X21]
	0x036FA7B8 LDR W8, [X0 + 0xE0]
	0x036FA7BC CBNZ W8, 0x36FA7C8
	0x036FA7C0 BL 0x1C16DFC
	0x036FA7C4 LDR X0, [X21]
	0x036FA7C8 LDR X8, [X0 + 0xB8]
	0x036FA7CC LDR X8, [X8 + 0x10]
	0x036FA7D0 CBZ X8, 0x36FA7E4
	0x036FA7D4 LDR X9, [X8 + 0x18]
	0x036FA7D8 LDR X0, [X8 + 0x40]
	0x036FA7DC LDR X1, [X8 + 0x28]
	0x036FA7E0 BLR X9
	0x036FA7E4 MOV X0, X19
	0x036FA7E8 MOV X1, X31
	0x036FA7EC BL 0x32CE9D0
	0x036FA7F0 MOV X19, X0
	0x036FA7F4 CBZ X0, 0x36FA82C
	0x036FA7F8 ADRP X9, 0xA2A000
	0x036FA7FC LDR X9, [X9 + 0x278]
	0x036FA800 LDR X8, [X19]
	0x036FA804 LDR X1, [X9]
	0x036FA808 LDRB W10, [X8 + 0x130]
	0x036FA80C LDRB W9, [X1 + 0x130]
	0x036FA810 CMP W10, W9
	0x036FA814 B.CC 0x36FA880
	0x036FA818 LDR X8, [X8 + 0xC8]
	0x036FA81C ADD X8, X8, X9, 0x3, LSL
	0x036FA820 LDUR X8, [X8 - 0x8]
	0x036FA824 CMP X8, X1
	0x036FA828 B.NE 0x36FA880
	0x036FA82C ADRP X8, 0xA46000
	0x036FA830 LDR X8, [X8 + 0xCC8]
	0x036FA834 LDR X0, [X8]
	0x036FA838 BL 0x1C16F10
	0x036FA83C MOV X1, X31
	0x036FA840 MOV X20, X0
	0x036FA844 BL 0x33BDD8C
	0x036FA848 STR X19, [X20 + 0x10]
	0x036FA84C LDR X0, [X21]
	0x036FA850 LDR W8, [X0 + 0xE0]
	0x036FA854 CBNZ W8, 0x36FA85C
	0x036FA858 BL 0x1C16DFC
	0x036FA85C MOVZ W2, 0x1
	0x036FA860 MOVZ W3, 0x1
	0x036FA864 MOV X0, X20
	0x036FA868 MOV X1, X19
	0x036FA86C BL 0x36FA8F8
	0x036FA870 LDP X20, X19, [X31 + 0x10]
	0x036FA874 MOV X1, X31
	0x036FA878 LDP X30, X21, [X31], #0x20
	0x036FA87C B 0x33C693C
	0x036FA880 MOV X0, X19
	0x036FA884 BL 0x1C171E0
	0x036FA888 ADRP X0, 0x9FE000
	0x036FA88C LDR X0, [X0 + 0x528]
	0x036FA890 BL 0x1C16D08
	0x036FA894 BL 0x1C16F10
	0x036FA898 MOV X19, X0
	0x036FA89C ADRP X0, 0xA46000
	0x036FA8A0 LDR X0, [X0 + 0xCD0]
	0x036FA8A4 BL 0x1C16D08
	0x036FA8A8 MOV X1, X0
	0x036FA8AC MOV X0, X19
	0x036FA8B0 MOV X2, X31
	0x036FA8B4 BL 0x330E100
	0x036FA8B8 ADRP X0, 0xA46000
	0x036FA8BC LDR X0, [X0 + 0xCD8]
	0x036FA8C0 BL 0x1C16D08
	0x036FA8C4 MOV X1, X0
	0x036FA8C8 MOV X0, X19
	0x036FA8CC BL 0x1C16DEC
	0x036FA8D0 STR X30, [X31 - 0x20]!
	0x036FA8D4 STP X20, X19, [X31 + 0x10]
	0x036FA8D8 MOV X19, X1
	0x036FA8DC MOV X1, X31
	0x036FA8E0 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move V6, [X31+176]
	015 Move V9, V1
	016 Move S30, [X31+148]
	017 Move S14, [X31+152]
	018 Move V31, [X31+144]
	019 Move V1, [X31+184]
	020 Move X19, X2
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 Move V16, [X4]
	023 Move V7, [X4+8]
	024 Move V6, V31
	025 Move V6.S[1], V30.S[0]
	026 Add V6, V6, V16
	027 Add S7, S14, S7
	028 Move V6, [X0]
	029 Move V7, [X0+8]
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move [X0], D6
	032 Move [X0+8], S7
	033 Move S6, [X31+168]
	034 Move S29, [X31+172]
	035 Move S27, [X31+160]
	036 Move S1, [X31+164]
	037 Move S28, [X4+12]
	038 Move S7, [X4+16]
	039 Move S26, [X4+20]
	040 Move S25, [X4+24]
	041 Multiply S16, S29, S28
	042 Multiply S17, S27, S25
	043 Multiply S18, S1, S26
	044 Multiply S19, S6, S7
	045 Multiply S20, S29, S7
	046 Multiply S21, S1, S25
	047 Multiply S22, S6, S28
	048 Multiply S23, S27, S26
	049 Multiply S24, S27, S7
	050 Multiply S27, S27, S28
	051 Multiply S28, S1, S28
	052 Multiply S1, S1, S7
	053 Multiply S7, S29, S26
	054 Multiply S29, S29, S25
	055 Multiply S25, S6, S25
	056 Multiply S26, S6, S26
	057 Add S6, S16, S17
	058 Add S16, S20, S21
	059 Add S7, S7, S25
	060 Subtract S20, S29, S27
	061 Add S17, S18, S6
	062 Add S6, S22, S16
	063 Add S16, S24, S7
	064 Subtract S7, S20, S1
	065 Subtract S17, S17, S19
	066 Subtract S1, S6, S23
	067 Subtract S6, S16, S28
	068 Subtract S7, S7, S26
	069 Move S17, [X1]
	070 Move S1, [X1+4]
	071 Move S6, [X1+8]
	072 Move S7, [X1+12]
	073 Move [X1], S17
	074 Move [X1+8], S1
	075 Move [X1+8], S6
	076 Move [X1+16], S7
	077 Move TEMP, X3
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {247}
	081 Move X21, 0xCDF000
	082 Move W8, [X21+1924]
	083 Move V12, V0
	084 Move V11, V2
	085 Move V13, V5
	086 Move [X31+8], S3
	087 Move [X31+16], S4
	088 Move [X31+16], V31
	089 Move [X31+24], V30
	090 Compare W8, 0
	091 JumpIfNotEqual {100}
	092 Move X0, 0x9FA000
	093 Move X0, [X0+1448]
	094 Call 0x1C17CF4
	095 Move V31, [X31+16]
	096 Move V30, [X31+32]
	097 Move V5, V13
	098 Move W8, 1
	099 Move [X21+1924], W8
	100 Move X20, 0x9FA000
	101 Move X20, [X20+1448]
	102 Move X0, [X20]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfEqual {213}
	106 Move W8, W31
	107 Compare W8, 0
	108 JumpIfEqual {117}
	109 Move X0, 0x9FA000
	110 Move X0, [X0+1448]
	111 Call 0x1C17CF4
	112 Move V31, [X31+16]
	113 Move V30, [X31+32]
	114 Move V5, V13
	115 Move W8, 1
	116 Move [X21+1924], W8
	117 Move X0, [X20]
	118 Subtract S15, S31, S12
	119 Subtract S8, S30, S9
	120 Move V10, V14
	121 Move W8, [X0+224]
	122 Subtract S14, S14, S11
	123 Compare W8, 0
	124 JumpIfNotEqual {129}
	125 Call 0x1C17DFC
	126 Move V31, [X31+16]
	127 Move V30, [X31+32]
	128 Move V5, V13
	129 Move X8, -46198784
	130 Move S17, [X31+8]
	131 Move S16, [X31+12]
	132 Move V6, [X8+696]
	133 Move V3, [X31+192]
	134 Multiply S2, S15, S15
	135 Multiply S4, S8, S8
	136 Add S2, S2, S4
	137 Multiply S4, S14, S14
	138 Add S4, S4, S2
	139 Subtract S0, S17, S12
	140 Subtract S1, S16, S9
	141 NotImplemented "Instruction FCMP not yet implemented."
	142 Subtract S2, S5, S11
	143 NotImplemented "Instruction FDIV not yet implemented."
	144 NotImplemented "Instruction FDIV not yet implemented."
	145 NotImplemented "Instruction FDIV not yet implemented."
	146 Multiply S7, S15, S7
	147 Multiply S6, S8, S6
	148 Multiply S4, S14, S4
	149 Add S6, S7, S6
	150 Add S4, S4, S6
	151 Multiply S7, S15, S4
	152 Multiply S6, S8, S4
	153 Multiply S4, S14, S4
	154 Add S12, S12, S7
	155 Add S9, S9, S6
	156 Add S11, S11, S4
	157 Subtract S15, S17, S12
	158 Subtract S8, S16, S9
	159 Subtract S6, S5, S11
	160 Move V6, V2
	161 Move V8, V1
	162 Move V15, V0
	163 NotImplemented "Instruction FCMP not yet implemented."
	164 Move X21, 0xCDF000
	165 Subtract S3, S31, S17
	166 Subtract S4, S30, S16
	167 Move W8, [X21+1925]
	168 Multiply S0, S0, S0
	169 Multiply S1, S1, S1
	170 Subtract S5, S10, S5
	171 Multiply S3, S3, S3
	172 Multiply S4, S4, S4
	173 Multiply S2, S2, S2
	174 Add S0, S0, S1
	175 Add S1, S3, S4
	176 Multiply S3, S5, S5
	177 Add S13, S2, S0
	178 Add S14, S3, S1
	179 Compare W8, 0
	180 JumpIfNotEqual {188}
	181 Move X0, 0x9FA000
	182 Move X0, [X0+1448]
	183 Move V10, V6
	184 Call 0x1C17CF4
	185 Move V6, V10
	186 Move W8, 1
	187 Move [X21+1925], W8
	188 Move X0, [X20]
	189 NotImplemented "Instruction FSQRT not yet implemented."
	190 NotImplemented "Instruction FSQRT not yet implemented."
	191 Move W8, [X0+224]
	192 Compare W8, 0
	193 JumpIfNotEqual {197}
	194 Move V10, V6
	195 Call 0x1C17DFC
	196 Move V6, V10
	197 Multiply S0, S15, S15
	198 Multiply S1, S8, S8
	199 Move X8, -46198784
	200 Add S0, S1, S0
	201 Move V1, [X8+380]
	202 Multiply S2, S6, S6
	203 Add S0, S2, S0
	204 NotImplemented "Instruction FSQRT not yet implemented."
	205 NotImplemented "Instruction FCMP not yet implemented."
	206 Add S13, S13, S14
	207 NotImplemented "Instruction FDIV not yet implemented."
	208 NotImplemented "Instruction FDIV not yet implemented."
	209 NotImplemented "Instruction FDIV not yet implemented."
	210 Move S0, [X19]
	211 Move S1, [X19+4]
	212 Move V2, [X19+8]
	213 Call 0x1C17DFC
	214 Move W8, [X21+1924]
	215 Move V31, [X31+16]
	216 Move V30, [X31+32]
	217 Move V5, V13
	218 NotImplemented "Instruction CMP not yet implemented."
	219 NotImplemented "Instruction CSET not yet implemented."
	220 Compare W8, 0
	221 JumpIfNotEqual {109}
	222 Move X20, 0xCDF000
	223 Move W8, [X20+1923]
	224 Compare W8, 0
	225 JumpIfNotEqual {231}
	226 Move X0, 0x9FA000
	227 Move X0, [X0+1440]
	228 Call 0x1C17CF4
	229 Move W8, 1
	230 Move [X20+1923], W8
	231 Move X8, 0x9FA000
	232 Move X8, [X8+1440]
	233 Move X8, [X8]
	234 Move X8, [X8+184]
	235 Move S0, [X8]
	236 Move S1, [X8+4]
	237 Move V2, [X8+8]
	238 Multiply S0, S13, S0
	239 Multiply S1, S13, S1
	240 Multiply S2, S13, S2
	241 Add S0, S12, S0
	242 Add S1, S9, S1
	243 Add S2, S11, S2
	244 Move [X19], S0
	245 Move [X19+8], S1
	246 Move [X19+8], S2
	247 Move X20, [X31+128]
	248 Move X19, [X31+136]
	249 Move X30, [X31+112]
	250 Move X21, [X31+120]
	251 Move D9, [X31+96]
	252 Move D8, [X31+104]
	253 Move D11, [X31+80]
	254 Move D10, [X31+88]
	255 Move D13, [X31+64]
	256 Move D12, [X31+72]
	257 Move D15, [X31+48]
	258 Move D14, [X31+56]
	259 Add X31, X31, 144
	260 Return 

Method: System.Single TriangleAngle(System.Single aLen, System.Single aLen1, System.Single aLen2)

Disassembly:
	0x036FA210 LDRB W8, [X19 + 0x1C]!
	0x036FA214 CBZ W8, 0x36FA234
	0x036FA218 ADRP X8, 0x9FD000
	0x036FA21C LDR X8, [X8 + 0xBF8]
	0x036FA220 MOV X0, X19
	0x036FA224 LDP X20, X19, [X31 + 0x10]
	0x036FA228 LDR X1, [X8]
	0x036FA22C LDR X30, [X31], #0x20
	0x036FA230 B 0x242D58C
	0x036FA234 LDP X20, X19, [X31 + 0x10]
	0x036FA238 MOV W0, W31
	0x036FA23C LDR X30, [X31], #0x20
	0x036FA240 RET
	0x036FA244 STR X30, [X31 - 0x30]!
	0x036FA248 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Multiply S3, S1, S1
	002 Multiply S4, S2, S2
	003 Multiply S0, S0, S0
	004 Add S3, S3, S4
	005 Multiply S1, S1, S2
	006 Subtract S0, S3, S0
	007 Move S2, 0.5
	008 NotImplemented "Instruction FDIV not yet implemented."
	009 Move S4, 1
	010 Move S3, -1
	011 Multiply S0, S0, S2
	012 NotImplemented "Instruction FMIN not yet implemented."
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 NotImplemented "Instruction FCSEL not yet implemented."
	015 Call 0x3EB2BB0
	016 Return V0

Method: System.Boolean SolveFABRIK(ref Unity.Collections.NativeArray`1<UnityEngine.Vector3> linkPositions, ref Unity.Collections.NativeArray`1<System.Single> linkLengths, UnityEngine.Vector3 target, System.Single tolerance, System.Single maxReach, System.Int32 maxIterations)

Disassembly:
	0x036E4D54 LDP V1, V0, [X20 + 0x10]
	0x036E4D58 LDR V2, [X20]
	0x036E4D5C ADD X0, X31, 0x90
	0x036E4D60 STR X8, [X31 + 0xC0]
	0x036E4D64 STP V1, V0, [X31 + 0xA0]
	0x036E4D68 STR V2, [X31 + 0x9]
	0x036E4D6C LDR X1, [X19]
	0x036E4D70 LDR W2, [X19 + 0x8]
	0x036E4D74 BL 0x36E3614
	0x036E4D78 ADD X31, X31, 0x220
	0x036E4D7C LDP X20, X19, [X31 + 0x90]
	0x036E4D80 LDP X22, X21, [X31 + 0x80]
	0x036E4D84 LDP X24, X23, [X31 + 0x70]
	0x036E4D88 LDP X26, X25, [X31 + 0x60]
	0x036E4D8C LDP X28, X27, [X31 + 0x50]
	0x036E4D90 LDP X29, X30, [X31 + 0x40]
	0x036E4D94 LDP D9, D8, [X31 + 0x30]
	0x036E4D98 LDP D11, D10, [X31 + 0x20]
	0x036E4D9C LDP D13, D12, [X31 + 0x10]
	0x036E4DA0 LDP D15, D14, [X31], #0xA0
	0x036E4DA4 RET
	0x036E4DA8 SUB X31, X31, 0x50
	0x036E4DAC STR X30, [X31 + 0x40]
	0x036E4DB0 LDR X8, [X1 + 0x30]
	0x036E4DB4 LDP V1, V0, [X1 + 0x10]
	0x036E4DB8 LDR V2, [X1]
	0x036E4DBC ADD X1, X31, 0x0
	0x036E4DC0 MOV X4, X31
	0x036E4DC4 STR X8, [X31 + 0x30]
	0x036E4DC8 STP V1, V0, [X31 + 0x10]
	0x036E4DCC STR V2, [X31]
	0x036E4DD0 BL 0x3BF8E04
	0x036E4DD4 LDR X30, [X31 + 0x40]
	0x036E4DD8 ADD X31, X31, 0x50
	0x036E4DDC RET
	0x036E4DE0 SUB X31, X31, 0x90
	0x036E4DE4 STR X30, [X31 + 0x80]
	0x036E4DE8 LDRB W8, [X0 + 0x14]
	0x036E4DEC CMP W8, 0x1
	0x036E4DF0 B.NE 0x36E4E1C
	0x036E4DF4 LDR X8, [X1 + 0x30]
	0x036E4DF8 LDP V1, V0, [X1 + 0x10]
	0x036E4DFC LDR V2, [X1]
	0x036E4E00 ADD X1, X31, 0x40
	0x036E4E04 MOV X4, X31
	0x036E4E08 STR X8, [X31 + 0x70]
	0x036E4E0C STP V1, V0, [X31 + 0x50]
	0x036E4E10 STR V2, [X31 + 0x4]
	0x036E4E14 BL 0x3BF8E04
	0x036E4E18 B 0x36E4E44
	0x036E4E1C LDP V2, V0, [X1 + 0x10]
	0x036E4E20 LDR X8, [X1 + 0x30]
	0x036E4E24 LDR V1, [X1]
	0x036E4E28 ADD X0, X0, 0xC
	0x036E4E2C ADD X1, X31, 0x0
	0x036E4E30 MOV X4, X31
	0x036E4E34 STR X8, [X31 + 0x30]
	0x036E4E38 STP V2, V0, [X31 + 0x10]
	0x036E4E3C STR V1, [X31]
	0x036E4E40 BL 0x3BFA458
	0x036E4E44 LDR X30, [X31 + 0x80]
	0x036E4E48 ADD X31, X31, 0x90
	0x036E4E4C RET
	0x036E4E50 STP S0, S1, [X0]
	0x036E4E54 STP S2, S3, [X0 + 0x8]
	0x036E4E58 STP S4, S5, [X0 + 0x10]
	0x036E4E5C STR S6, [X0 + 0x18]
	0x036E4E60 RET
	0x036E4E64 STR D10, [X31 - 0x50]!
	0x036E4E68 STP D9, D8, [X31 + 0x10]
	0x036E4E6C STP X30, X23, [X31 + 0x20]
	0x036E4E70 STP X22, X21, [X31 + 0x30]
	0x036E4E74 STP X20, X19, [X31 + 0x40]
	0x036E4E78 ADRP X23, 0xCFC000
	0x036E4E7C ADRP X22, 0xA38000
	0x036E4E80 MOV X19, X8
	0x036E4E84 LDRB W8, [X23 + 0xBD6]
	0x036E4E88 LDR X22, [X22 + 0xE40]
	0x036E4E8C MOV X20, X1
	0x036E4E90 MOV X21, X0
	0x036E4E94 TBNZ X8, 0x0, 0x36E4EAC
	0x036E4E98 ADRP X0, 0xA38000
	0x036E4E9C LDR X0, [X0 + 0xE40]
	0x036E4EA0 BL 0x1C16CF4
	0x036E4EA4 MOVZ W8, 0x1
	0x036E4EA8 STRB W8, [X23 + 0xBD6]
	0x036E4EAC LDR X0, [X22]
	0x036E4EB0 LDP S10, S8, [X20]
	0x036E4EB4 LDR V9, [X20 + 0x8]
	0x036E4EB8 LDR W8, [X0 + 0xE0]
	0x036E4EBC CBNZ W8, 0x36E4EC4
	0x036E4EC0 BL 0x1C16DFC
	0x036E4EC4 MOV X0, X21
	0x036E4EC8 MOV V0.16B, V10.16B
	0x036E4ECC MOV V1.16B, V8.16B
	0x036E4ED0 MOV V2.16B, V9.16B
	0x036E4ED4 BL 0x36F909C
	0x036E4ED8 LDP S3, S4, [X21 + 0xC]
	0x036E4EDC LDP S5, S6, [X21 + 0x14]
	0x036E4EE0 LDP S7, S16, [X20 + 0xC]
	0x036E4EE4 LDP S17, S18, [X20 + 0x14]
	0x036E4EE8 STP S0, S1, [X19]
	0x036E4EEC LDP X22, X21, [X31 + 0x30]
	0x036E4EF0 FMUL S0, S6, S7
	0x036E4EF4 FMUL S1, S3, S18
	0x036E4EF8 FMUL S19, S4, S17
	0x036E4EFC FMUL S20, S5, S16
	0x036E4F00 FMUL S21, S6, S16
	0x036E4F04 FMUL S22, S4, S18
	0x036E4F08 FMUL S23, S5, S7
	0x036E4F0C FMUL S24, S3, S17
	0x036E4F10 FMUL S25, S3, S16
	0x036E4F14 FMUL S3, S3, S7
	0x036E4F18 FMUL S7, S4, S7
	0x036E4F1C FMUL S4, S4, S16
	0x036E4F20 FMUL S16, S6, S17
	0x036E4F24 FMUL S6, S6, S18
	0x036E4F28 FMUL S18, S5, S18
	0x036E4F2C FADD S0, S0, S1
	0x036E4F30 FADD S1, S21, S22
	0x036E4F34 FADD S16, S16, S18
	0x036E4F38 FSUB S3, S6, S3
	0x036E4F3C FMUL S5, S5, S17
	0x036E4F40 FADD S0, S19, S0
	0x036E4F44 FADD S1, S23, S1
	0x036E4F48 FADD S6, S25, S16
	0x036E4F4C FSUB S3, S3, S4
	0x036E4F50 FSUB S0, S0, S20
	0x036E4F54 FSUB S1, S1, S24
	0x036E4F58 FSUB S4, S6, S7
	0x036E4F5C FSUB S3, S3, S5
	0x036E4F60 STP S2, S0, [X19 + 0x8]
	0x036E4F64 STP S1, S4, [X19 + 0x10]
	0x036E4F68 STR S3, [X19 + 0x18]
	0x036E4F6C LDP X20, X19, [X31 + 0x40]
	0x036E4F70 LDP X30, X23, [X31 + 0x20]
	0x036E4F74 LDP D9, D8, [X31 + 0x10]
	0x036E4F78 LDR V10, [X31], #0x50
	0x036E4F7C RET
	0x036E4F80 FMUL S0, S0, S0
	0x036E4F84 RET
	0x036E4F88 SUB X31, X31, 0x50
	0x036E4F8C STR X30, [X31 + 0x40]
	0x036E4F90 LDR X8, [X1 + 0x30]
	0x036E4F94 LDP V16, V7, [X1 + 0x10]
	0x036E4F98 LDR V17, [X1]
	0x036E4F9C AND W2, W2, 0x1
	0x036E4FA0 ADD X1, X31, 0x0
	0x036E4FA4 MOV X3, X31
	0x036E4FA8 STR X8, [X31 + 0x30]
	0x036E4FAC STP V16, V7, [X31 + 0x10]
	0x036E4FB0 STR V17, [X31]
	0x036E4FB4 BL 0x3BF8EC0
	0x036E4FB8 LDR X30, [X31 + 0x40]
	0x036E4FBC ADD X31, X31, 0x50
	0x036E4FC0 RET
	0x036E4FC4 STP S0, S1, [X0]
	0x036E4FC8 STP S2, S3, [X0 + 0x8]
	0x036E4FCC STP S4, S5, [X0 + 0x10]
	0x036E4FD0 STR S6, [X0 + 0x18]
	0x036E4FD4 RET
	0x036E4FD8 STR X30, [X31 - 0x30]!
	0x036E4FDC STP X22, X21, [X31 + 0x10]
	0x036E4FE0 STP X20, X19, [X31 + 0x20]
	0x036E4FE4 CBZ X1, 0x36E5034
	0x036E4FE8 MOV X21, X1
	0x036E4FEC MOV X20, X0
	0x036E4FF0 MOV X0, X1
	0x036E4FF4 MOV X1, X31
	0x036E4FF8 MOV X19, X2
	0x036E4FFC BL 0x3C32E90
	0x036E5000 MOV X22, X0
	0x036E5004 MOV X0, X21
	0x036E5008 MOV X1, X31
	0x036E500C BL 0x33BE520
	0x036E5010 MOV X2, X0
	0x036E5014 MOV X0, X20
	0x036E5018 MOV X1, X22
	0x036E501C MOV X3, X19
	0x036E5020 LDP X20, X19, [X31 + 0x20]
	0x036E5024 LDP X22, X21, [X31 + 0x10]
	0x036E5028 MOV X4, X31
	0x036E502C LDR X30, [X31], #0x30
	0x036E5030 B 0x3BFB030
	0x036E5034 BL 0x1C16F20
	0x036E5038 MOVZ W2, 0x6
	0x036E503C MOV X3, X31
	0x036E5040 B 0x3BFB0BC
	0x036E5044 SUB X31, X31, 0x50
	0x036E5048 STR X30, [X31 + 0x40]
	0x036E504C LDR X8, [X1 + 0x30]
	0x036E5050 LDP V1, V0, [X1 + 0x10]
	0x036E5054 LDR V2, [X1]
	0x036E5058 AND W2, W2, 0x1
	0x036E505C ADD X1, X31, 0x0
	0x036E5060 MOV X3, X31
	0x036E5064 STR X8, [X31 + 0x30]
	0x036E5068 STP V1, V0, [X31 + 0x10]
	0x036E506C STR V2, [X31]
	0x036E5070 BL 0x3BF9BFC
	0x036E5074 LDR X30, [X31 + 0x40]
	0x036E5078 ADD X31, X31, 0x50
	0x036E507C RET
	0x036E5080 STR X30, [X31 - 0x30]!
	0x036E5084 STP X22, X21, [X31 + 0x10]
	0x036E5088 STP X20, X19, [X31 + 0x20]
	0x036E508C CBZ X1, 0x36E50DC
	0x036E5090 MOV X21, X1
	0x036E5094 MOV X20, X0
	0x036E5098 MOV X0, X1
	0x036E509C MOV X1, X31
	0x036E50A0 MOV X19, X2
	0x036E50A4 BL 0x3C32E90
	0x036E50A8 MOV X22, X0
	0x036E50AC MOV X0, X21
	0x036E50B0 MOV X1, X31
	0x036E50B4 BL 0x33BE520
	0x036E50B8 MOV X2, X0
	0x036E50BC MOV X0, X20
	0x036E50C0 MOV X1, X22
	0x036E50C4 MOV X3, X19
	0x036E50C8 LDP X20, X19, [X31 + 0x20]
	0x036E50CC LDP X22, X21, [X31 + 0x10]
	0x036E50D0 MOV X4, X31
	0x036E50D4 LDR X30, [X31], #0x30
	0x036E50D8 B 0x3BFB030
	0x036E50DC BL 0x1C16F20
	0x036E50E0 MOVZ W2, 0xA
	0x036E50E4 MOV X3, X31
	0x036E50E8 B 0x3BFB0BC
	0x036E50EC SUB X31, X31, 0x50
	0x036E50F0 STR X30, [X31 + 0x40]
	0x036E50F4 LDR X8, [X1 + 0x30]
	0x036E50F8 LDP V1, V0, [X1 + 0x10]
	0x036E50FC LDR V2, [X1]
	0x036E5100 ADD X1, X31, 0x0
	0x036E5104 MOV X2, X31
	0x036E5108 STR X8, [X31 + 0x30]
	0x036E510C STP V1, V0, [X31 + 0x10]
	0x036E5110 STR V2, [X31]
	0x036E5114 BL 0x3BF9930
	0x036E5118 LDR X30, [X31 + 0x40]
	0x036E511C ADD X31, X31, 0x50
	0x036E5120 RET
	0x036E5124 SUB X31, X31, 0x50
	0x036E5128 STR X30, [X31 + 0x40]
	0x036E512C LDR X8, [X1 + 0x30]
	0x036E5130 LDP V1, V0, [X1 + 0x10]
	0x036E5134 LDR V2, [X1]
	0x036E5138 ADD X1, X31, 0x0
	0x036E513C MOV X3, X31
	0x036E5140 STR X8, [X31 + 0x30]
	0x036E5144 STP V1, V0, [X31 + 0x10]
	0x036E5148 STR V2, [X31]
	0x036E514C BL 0x3BF9A14
	0x036E5150 LDR X30, [X31 + 0x40]
	0x036E5154 ADD X31, X31, 0x50
	0x036E5158 RET
	0x036E515C STR X30, [X31 - 0x30]!
	0x036E5160 STP X22, X21, [X31 + 0x10]
	0x036E5164 STP X20, X19, [X31 + 0x20]
	0x036E5168 CBZ X1, 0x36E51B8
	0x036E516C MOV X21, X1
	0x036E5170 MOV X20, X0
	0x036E5174 MOV X0, X1
	0x036E5178 MOV X1, X31
	0x036E517C MOV X19, X2
	0x036E5180 BL 0x3C32E90
	0x036E5184 MOV X22, X0
	0x036E5188 MOV X0, X21
	0x036E518C MOV X1, X31
	0x036E5190 BL 0x33BE520
	0x036E5194 MOV X2, X0
	0x036E5198 MOV X0, X20
	0x036E519C MOV X1, X22
	0x036E51A0 MOV X3, X19
	0x036E51A4 LDP X20, X19, [X31 + 0x20]
	0x036E51A8 LDP X22, X21, [X31 + 0x10]
	0x036E51AC MOV X4, X31
	0x036E51B0 LDR X30, [X31], #0x30
	0x036E51B4 B 0x3BFB030
	0x036E51B8 BL 0x1C16F20
	0x036E51BC MOVZ W2, 0x5
	0x036E51C0 MOV X3, X31
	0x036E51C4 B 0x3BFB0BC
	0x036E51C8 SUB X31, X31, 0x50
	0x036E51CC STR X30, [X31 + 0x40]
	0x036E51D0 LDR X8, [X1 + 0x30]
	0x036E51D4 LDP V2, V1, [X1 + 0x10]
	0x036E51D8 LDR V3, [X1]
	0x036E51DC ADD X1, X31, 0x0
	0x036E51E0 MOV X2, X31
	0x036E51E4 STR X8, [X31 + 0x30]
	0x036E51E8 STP V2, V1, [X31 + 0x10]
	0x036E51EC STR V3, [X31]
	0x036E51F0 BL 0x3BF9830
	0x036E51F4 LDR X30, [X31 + 0x40]
	0x036E51F8 ADD X31, X31, 0x50
	0x036E51FC RET
	0x036E5200 STR X30, [X31 - 0x50]!
	0x036E5204 STP X26, X25, [X31 + 0x10]
	0x036E5208 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+96], D14
	003 Move [X31+112], D13
	004 Move [X31+120], D12
	005 Move [X31+128], D11
	006 Move [X31+136], D10
	007 Move [X31+144], D9
	008 Move [X31+152], D8
	009 Move [X31+160], X29
	010 Move [X31+168], X30
	011 Move [X31+176], X28
	012 Move [X31+184], X27
	013 Move [X31+192], X26
	014 Move [X31+200], X25
	015 Move [X31+208], X24
	016 Move [X31+216], X23
	017 Move [X31+224], X22
	018 Move [X31+232], X21
	019 Move [X31+240], X20
	020 Move [X31+248], X19
	021 Move X8, [X0]
	022 Move V6, V0
	023 Move V5, V1
	024 Move V8, V2
	025 Move V0, [X8]
	026 Move V1, [X8+8]
	027 Move V2, V6
	028 Move V2.S[1], V5.S[0]
	029 Subtract V9, V2, V0
	030 Subtract S10, S8, S1
	031 NotImplemented "Instruction INVALID not yet implemented."
	032 Multiply S1, S10, S10
	033 NotImplemented "Instruction FADDP not yet implemented."
	034 Add S11, S0, S1
	035 Multiply S0, S4, S4
	036 Move X19, X0
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move X20, X1
	039 Move X21, 0xCF5000
	040 Move W8, [X21+1925]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0xA10000
	044 Move X0, [X0+1448]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+1925], W8
	048 Move X8, 0xA10000
	049 Move X8, [X8+1448]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X8, -46108672
	056 Move V0, [X8+380]
	057 NotImplemented "Instruction FSQRT not yet implemented."
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	060 NotImplemented "Instruction INVALID not yet implemented."
	061 NotImplemented "Instruction FDIV not yet implemented."
	062 Move W9, [X19+8]
	063 Move W11, 12
	064 Multiply S9, S3, S3
	065 Subtract W10, W9, 1
	066 NotImplemented "Instruction SMADDL not yet implemented."
	067 Move S0, [X11]
	068 Move S1, [X11+4]
	069 Move V2, [X11+8]
	070 Subtract S0, S6, S0
	071 Subtract S1, S5, S1
	072 Subtract S2, S8, S2
	073 Multiply S0, S0, S0
	074 Multiply S1, S1, S1
	075 Add S0, S0, S1
	076 Multiply S1, S2, S2
	077 Add S0, S1, S0
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move X14, W10
	080 Move X10, [X8]
	081 Move W11, [X8+8]
	082 Subtract W15, W9, 2
	083 Move X9, 1
	084 Move X12, -46108672
	085 Move V10, [X12+380]
	086 Add X12, X9, X15
	087 Add X9, X15, W15
	088 Move X22, 0xA10000
	089 Move X9, X9
	090 ShiftRight X9, 62
	091 And X9, X9, 0x1FFFFFFF
	092 Move X22, [X22+1448]
	093 Move [X31+88], W11
	094 Move [X31+72], X15
	095 Move [X31+80], X10
	096 Move [X31+8], X9
	097 Move [X31+16], X12
	098 Move X23, 0xA10000
	099 Move X23, [X23+1440]
	100 Move W13, W31
	101 Move W27, 12
	102 Move X28, 0xCF5000
	103 Move W29, 1
	104 Move X26, 0xCF5000
	105 Move W21, W2
	106 Move [X31+104], W2
	107 Move [X31+32], V6
	108 Move [X31+40], V5
	109 Move [X31+24], X14
	110 NotImplemented "Instruction NOP not yet implemented."
	111 NotImplemented "Instruction MADD not yet implemented."
	112 Move [X8], S6
	113 Move [X8+8], S5
	114 Move [X8+8], S8
	115 Move X8, [X31+72]
	116 Move [X31+108], W13
	117 Move TEMP, X8
	118 And TEMP, TEMP, -2147483648
	119 Compare TEMP, -2147483648
	120 JumpIfEqual {180}
	121 Move X25, [X31+8]
	122 Move X24, [X31+16]
	123 Move X21, [X31+72]
	124 Move X8, [X19]
	125 NotImplemented "Instruction SBFM not yet implemented."
	126 Move W10, [X28+1925]
	127 NotImplemented "Instruction NOP not yet implemented."
	128 NotImplemented "Instruction MADD not yet implemented."
	129 Add X8, X8, X25
	130 Move V11, [X9]
	131 Move V12, [X9+8]
	132 Move V14, [X8]
	133 Move V13, [X8+8]
	134 Compare W10, 0
	135 JumpIfNotEqual {139}
	136 Move X0, X22
	137 Call 0x1C17CF4
	138 Move [X28+1925], W29
	139 Move X0, [X22]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Subtract V0, V14, V11
	145 Subtract S1, S13, S12
	146 NotImplemented "Instruction INVALID not yet implemented."
	147 NotImplemented "Instruction FADDP not yet implemented."
	148 Multiply S3, S1, S1
	149 Add S2, S3, S2
	150 NotImplemented "Instruction FSQRT not yet implemented."
	151 NotImplemented "Instruction FCMP not yet implemented."
	152 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	153 NotImplemented "Instruction INVALID not yet implemented."
	154 NotImplemented "Instruction FDIV not yet implemented."
	155 Move W8, [X26+1923]
	156 Compare W8, 0
	157 JumpIfNotEqual {161}
	158 Move X0, X23
	159 Call 0x1C17CF4
	160 Move [X26+1923], W29
	161 Move X8, [X23]
	162 Move X8, [X8+184]
	163 Move V0, [X8]
	164 Move V1, [X8+8]
	165 Move X8, [X20]
	166 Move X9, [X19]
	167 Move X10, INVALID
	168 Add X24, X24, X10
	169 Move V2, [X8]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X8, X9, X25
	172 Subtract X21, X21, 1
	173 NotImplemented "Instruction INVALID not yet implemented."
	174 Multiply S1, S1, S2
	175 Add V0, V11, V0
	176 Add S1, S12, S1
	177 Subtract X25, X25, 12
	178 Move [X8], D0
	179 Move [X8+8], S1
	180 Move X8, [X19]
	181 Move W9, [X31+88]
	182 Move X10, [X31+80]
	183 Move [X8+8], W9
	184 Move [X8], X10
	185 Move W9, [X19+8]
	186 Move X8, [X19]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move W21, [X31+104]
	189 Move X25, X31
	190 Move X24, X31
	191 Add X8, X8, X24
	192 Move W9, [X28+1925]
	193 Move V12, [X8]
	194 Move V11, [X8+8]
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 Move V13, [X8+20]
	197 Compare W9, 0
	198 JumpIfNotEqual {202}
	199 Move X0, X22
	200 Call 0x1C17CF4
	201 Move [X28+1925], W29
	202 Move X0, [X22]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Subtract V0, V14, V12
	208 Subtract S1, S13, S11
	209 NotImplemented "Instruction INVALID not yet implemented."
	210 NotImplemented "Instruction FADDP not yet implemented."
	211 Multiply S3, S1, S1
	212 Add S2, S3, S2
	213 NotImplemented "Instruction FSQRT not yet implemented."
	214 NotImplemented "Instruction FCMP not yet implemented."
	215 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	216 NotImplemented "Instruction INVALID not yet implemented."
	217 NotImplemented "Instruction FDIV not yet implemented."
	218 Move W8, [X26+1923]
	219 Compare W8, 0
	220 JumpIfNotEqual {224}
	221 Move X0, X23
	222 Call 0x1C17CF4
	223 Move [X26+1923], W29
	224 Move X8, [X23]
	225 Move X8, [X8+184]
	226 Move V0, [X8]
	227 Move V1, [X8+8]
	228 Move X8, [X20]
	229 Move X9, [X19]
	230 Add X10, X25, 2
	231 Move V2, [X8]
	232 Add X8, X9, X24
	233 Add X25, X25, 1
	234 Add X24, X24, 12
	235 NotImplemented "Instruction INVALID not yet implemented."
	236 Multiply S1, S1, S2
	237 Add V0, V12, V0
	238 Add S1, S11, S1
	239 Move [X8+12], D0
	240 Move [X8+20], S1
	241 NotImplemented "Instruction LDRSW not yet implemented."
	242 Move X8, [X19]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move W21, [X31+104]
	245 Move W13, [X31+108]
	246 Move W0, 1
	247 Add W13, W13, 1
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X14, [X31+24]
	250 Move V6, [X31+32]
	251 Move V5, [X31+48]
	252 NotImplemented "Instruction NOP not yet implemented."
	253 NotImplemented "Instruction MADD not yet implemented."
	254 Move S0, [X9]
	255 Move S1, [X9+4]
	256 Move V2, [X9+8]
	257 Subtract S0, S6, S0
	258 Subtract S1, S5, S1
	259 Subtract S2, S8, S2
	260 Multiply S0, S0, S0
	261 Multiply S1, S1, S1
	262 Add S0, S0, S1
	263 Multiply S1, S2, S2
	264 Add S0, S1, S0
	265 NotImplemented "Instruction FCMP not yet implemented."
	266 Move X21, 0xCF4000
	267 Move W8, [X21+1923]
	268 Compare W8, 0
	269 JumpIfNotEqual {275}
	270 Move X0, 0xA0F000
	271 Move X0, [X0+1440]
	272 Call 0x1C17CF4
	273 Move W8, 1
	274 Move [X21+1923], W8
	275 Move X8, 0xA0F000
	276 Move X8, [X8+1440]
	277 Move X8, [X8]
	278 Move X8, [X8+184]
	279 Move V0, [X8]
	280 Move V1, [X8+8]
	281 Move W8, [X19+8]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X9, X31
	284 Move X8, X31
	285 Move X10, [X20]
	286 Move X11, [X19]
	287 Move V2, [X10]
	288 Add X10, X11, X8
	289 Move V3, [X10]
	290 Move V4, [X10+8]
	291 NotImplemented "Instruction INVALID not yet implemented."
	292 Multiply S2, S1, S2
	293 Add V3, V3, V5
	294 Add S2, S4, S2
	295 Move [X10+12], D3
	296 Move [X10+20], S2
	297 NotImplemented "Instruction LDRSW not yet implemented."
	298 Add X11, X9, 2
	299 Add X9, X9, 1
	300 Add X8, X8, 12
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Move W0, 1
	303 Move W0, W31
	304 Move X20, [X31+240]
	305 Move X19, [X31+248]
	306 Move X22, [X31+224]
	307 Move X21, [X31+232]
	308 Move X24, [X31+208]
	309 Move X23, [X31+216]
	310 Move X26, [X31+192]
	311 Move X25, [X31+200]
	312 Move X28, [X31+176]
	313 Move X27, [X31+184]
	314 Move X29, [X31+160]
	315 Move X30, [X31+168]
	316 Move D9, [X31+144]
	317 Move D8, [X31+152]
	318 Move D11, [X31+128]
	319 Move D10, [X31+136]
	320 Move D13, [X31+112]
	321 Move D12, [X31+120]
	322 Move V14, [X31+96]
	323 Add X31, X31, 256
	324 Return X0

Method: System.Single SqrDistance(UnityEngine.Vector3 lhs, UnityEngine.Vector3 rhs)

Disassembly:
	0x036FA8E4 BL 0x33BDD8C
	0x036FA8E8 STR X19, [X20 + 0x10]
	0x036FA8EC LDP X20, X19, [X31 + 0x10]
	0x036FA8F0 LDR X30, [X31], #0x20
	0x036FA8F4 RET
	0x036FA8F8 STP X30, X25, [X31 - 0x40]!
	0x036FA8FC STP X24, X23, [X31 + 0x10]
	0x036FA900 STP X22, X21, [X31 + 0x20]
	0x036FA904 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract S0, S3, S0
	002 Subtract S1, S4, S1
	003 Subtract S2, S5, S2
	004 Multiply S0, S0, S0
	005 Multiply S1, S1, S1
	006 Add S0, S0, S1
	007 Multiply S1, S2, S2
	008 Add S0, S1, S0
	009 Return V0

Method: System.Single Square(System.Single value)

Disassembly:
	0x036E5F80 STR X8, [X31 + 0x70]
	0x036E5F84 STP V1, V0, [X31 + 0x50]

ISIL:
	001 Multiply S0, S0, S0
	002 Return V0

Method: UnityEngine.Vector3 Lerp(UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 t)

Disassembly:
	0x036E95D0 FMUL S22, S13, S12
	0x036E95D4 LDR V9, [X31 + 0x18]
	0x036E95D8 FMUL S2, S14, S11
	0x036E95DC FMUL S6, S13, S10
	0x036E95E0 FADD S0, S0, S1
	0x036E95E4 FADD S1, S4, S5
	0x036E95E8 FADD S4, S20, S22
	0x036E95EC FSUB S5, S21, S17
	0x036E95F0 FMUL S7, S15, S11
	0x036E95F4 FMUL S18, S14, S10
	0x036E95F8 FMUL S23, S13, S11
	0x036E95FC FADD S0, S2, S0
	0x036E9600 FADD S1, S6, S1
	0x036E9604 FADD S2, S16, S4
	0x036E9608 FSUB S4, S5, S19
	0x036E960C FSUB S0, S0, S3
	0x036E9610 FSUB S1, S1, S7
	0x036E9614 FSUB S2, S2, S18
	0x036E9618 FSUB S3, S4, S23
	0x036E961C FMUL S4, S9, S0
	0x036E9620 FMUL S5, S9, S1
	0x036E9624 FMUL S6, S9, S2
	0x036E9628 FMUL S7, S9, S3
	0x036E962C LDP S0, S1, [X31 + 0x1C]
	0x036E9630 LDP S2, S3, [X31 + 0x24]
	0x036E9634 BL 0x36E7A14
	0x036E9638 LDR X8, [X19 + 0x58]
	0x036E963C MOV V13.16B, V0.16B
	0x036E9640 LDR V0, [X31 + 0x23]
	0x036E9644 LDR X9, [X31 + 0x240]
	0x036E9648 LDR V8, [X31 + 0x2C]
	0x036E964C ADD X8, X8, X22
	0x036E9650 STR V0, [X8]
	0x036E9654 STR X9, [X8 + 0x10]
	0x036E9658 LDR W8, [X19 + 0x60]
	0x036E965C FADD S8, S8, S9
	0x036E9660 LDP S14, S9, [X31 + 0x10]
	0x036E9664 MOV V12.16B, V1.16B
	0x036E9668 MOV V11.16B, V2.16B
	0x036E966C MOV V10.16B, V3.16B
	0x036E9670 ADD X24, X24, 0x1
	0x036E9674 ADD X23, X23, 0x10
	0x036E9678 CMP X24, W8, SXTW
	0x036E967C ADD X22, X22, 0x18
	0x036E9680 B.LT 0x36E951C
	0x036E9684 LDR X0, [X21]
	0x036E9688 B 0x36E9690
	0x036E968C FMOV S8, W31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+88], X19
	012 Move X19, 0xCF0000
	013 Move S15, [X31+100]
	014 Move S14, [X31+104]
	015 Move W8, [X19+2139]
	016 Move V8, [X31+96]
	017 Move V9, V5
	018 Move V11, V4
	019 Move V12, V3
	020 Move V10, V1
	021 Move V13, V0
	022 Compare W8, 0
	023 JumpIfNotEqual {31}
	024 Move X0, 0xA0B000
	025 Move X0, [X0+1440]
	026 Move [X31+12], S2
	027 Call 0x1C17CF4
	028 Move V2, [X31+12]
	029 Move W8, 1
	030 Move [X19+2139], W8
	031 Move X8, 0xA0B000
	032 Move X8, [X8+1440]
	033 Multiply S0, S12, S8
	034 Multiply S1, S11, S15
	035 Multiply S5, S9, S14
	036 Move X8, [X8]
	037 Move X30, [X31+80]
	038 Move X19, [X31+88]
	039 Move X8, [X8+184]
	040 Move S6, [X8+12]
	041 Move S3, [X8+16]
	042 Move V4, [X8+20]
	043 Subtract S6, S6, S8
	044 Subtract S3, S3, S15
	045 Subtract S4, S4, S14
	046 Multiply S6, S13, S6
	047 Multiply S3, S10, S3
	048 Move D9, [X31+64]
	049 Move D8, [X31+72]
	050 Move D11, [X31+48]
	051 Move D10, [X31+56]
	052 Move D13, [X31+32]
	053 Move D12, [X31+40]
	054 Move D15, [X31+16]
	055 Move D14, [X31+24]
	056 Multiply S4, S2, S4
	057 Add S0, S0, S6
	058 Add S1, S1, S3
	059 Add S2, S5, S4
	060 Add X31, X31, 96
	061 Return X0

Method: System.Single Select(System.Single a, System.Single b, System.Single c)

Disassembly:
	0x036FA908 ADRP X23, 0xCE6000
	0x036FA90C LDRB W8, [X23 + 0xBF0]
	0x036FA910 MOV W21, W3

ISIL:
	001 NotImplemented "Instruction FCMP not yet implemented."
	002 NotImplemented "Instruction FCSEL not yet implemented."
	003 Return V0

Method: UnityEngine.Vector3 Select(UnityEngine.Vector3 a, UnityEngine.Vector3 b, UnityEngine.Vector3 c)

Disassembly:
	0x036E898C LDR X0, [X23]
	0x036E8990 LDR W8, [X0 + 0xE0]
	0x036E8994 CBNZ W8, 0x36E899C
	0x036E8998 BL 0x1C16DFC
	0x036E899C ADRP X21, 0xCF2000
	0x036E89A0 LDRB W8, [X21 + 0x628]
	0x036E89A4 CBNZ W8, 0x36E89BC
	0x036E89A8 ADRP X0, 0xA34000
	0x036E89AC LDR X0, [X0 + 0xE40]

ISIL:
	001 Move S6, [X31]
	002 Move S7, [X31+4]
	003 Move V16, [X31+8]
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 NotImplemented "Instruction FCSEL not yet implemented."
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 NotImplemented "Instruction FCSEL not yet implemented."
	010 Return X0

Method: UnityEngine.Vector3 ProjectOnPlane(UnityEngine.Vector3 vector, UnityEngine.Vector3 planeNormal)

Disassembly:
	0x036E89B0 BL 0x1C16CF4
	0x036E89B4 MOVZ W8, 0x1
	0x036E89B8 STRB W8, [X21 + 0x628]
	0x036E89BC LDR X0, [X23]
	0x036E89C0 LDR W8, [X0 + 0xE0]
	0x036E89C4 CBNZ W8, 0x36E89D0
	0x036E89C8 BL 0x1C16DFC
	0x036E89CC LDR X0, [X23]
	0x036E89D0 LDR X8, [X0 + 0xB8]
	0x036E89D4 ADD X21, X19, 0xC
	0x036E89D8 ADD X1, X31, 0x100
	0x036E89DC MOV X0, X21
	0x036E89E0 LDUR V0, [X8 + 0xC]
	0x036E89E4 LDR V1, [X8]
	0x036E89E8 STUR V0, [X22 + 0xC]
	0x036E89EC STR V1, [X31 + 0x24]
	0x036E89F0 LDP V2, V0, [X20 + 0x10]
	0x036E89F4 LDR X8, [X20 + 0x30]
	0x036E89F8 LDR V1, [X20]
	0x036E89FC STP V2, V0, [X31 + 0x110]

ISIL:
	001 Multiply S6, S3, S3
	002 Multiply S7, S4, S4
	003 Multiply S16, S0, S3
	004 Add S6, S6, S7
	005 Multiply S7, S1, S4
	006 Add S7, S16, S7
	007 Multiply S16, S5, S5
	008 Add S6, S16, S6
	009 Multiply S16, S2, S5
	010 Add S7, S16, S7
	011 Multiply S3, S3, S7
	012 Multiply S4, S4, S7
	013 Multiply S5, S5, S7
	014 NotImplemented "Instruction FDIV not yet implemented."
	015 NotImplemented "Instruction FDIV not yet implemented."
	016 NotImplemented "Instruction FDIV not yet implemented."
	017 Subtract S0, S0, S3
	018 Subtract S1, S1, S4
	019 Subtract S2, S2, S5
	020 Return X0

Method: System.Single Sum(UnityEngine.Animations.Rigging.AnimationJobCache cache, UnityEngine.Animations.Rigging.CacheIndex index, System.Int32 count)

Disassembly:
	0x036FA914 MOV W22, W2
	0x036FA918 MOV X19, X1
	0x036FA91C MOV X20, X0
	0x036FA920 TBNZ X8, 0x0, 0x36FA9BC
	0x036FA924 ADRP X0, 0xA46000
	0x036FA928 LDR X0, [X0 + 0xCB8]
	0x036FA92C BL 0x1C16CF4
	0x036FA930 ADRP X0, 0xA46000
	0x036FA934 LDR X0, [X0 + 0xCE0]
	0x036FA938 BL 0x1C16CF4
	0x036FA93C ADRP X0, 0xA21000
	0x036FA940 LDR X0, [X0 + 0x848]
	0x036FA944 BL 0x1C16CF4
	0x036FA948 ADRP X0, 0x9F9000
	0x036FA94C LDR X0, [X0 + 0xA28]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, W3
	003 Move X9, X2
	004 ShiftRight X9, 32
	005 And X9, X9, 0x7FFFFFFF
	006 Move S0, W31
	007 Move X10, 1
	008 NotImplemented "Instruction SBFM not yet implemented."
	009 Move V1, [X0]
	010 Subtract X8, X8, 1
	011 Add X9, X9, X10
	012 Add S0, S0, S1
	013 Return V0
	014 Move S0, W31
	015 Return V0

Method: System.Single Sum(Unity.Collections.NativeArray`1<System.Single> floatBuffer)

Disassembly:
	0x036E8668 LDP D9, D8, [X31 + 0x40]
	0x036E866C LDP D11, D10, [X31 + 0x30]
	0x036E8670 LDP D13, D12, [X31 + 0x20]
	0x036E8674 LDP D15, D14, [X31 + 0x10]
	0x036E8678 FMUL S4, S2, S4
	0x036E867C FADD S0, S0, S6
	0x036E8680 FADD S1, S1, S3
	0x036E8684 FADD S2, S5, S4
	0x036E8688 ADD X31, X31, 0x60
	0x036E868C RET
	0x036E8690 LDUR X8, [X0 + 0xA4]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 And X8, X1, 0
	003 Move S0, W31
	004 Move V1, [X0+4]
	005 Subtract X8, X8, 1
	006 Add S0, S0, S1
	007 Return V0
	008 Move S0, W31
	009 Return V0

Method: System.Void PassThrough(UnityEngine.Animations.AnimationStream stream, UnityEngine.Animations.Rigging.ReadWriteTransformHandle handle)

Disassembly:
	0x036E4614 STRB W8, [X21 + 0xB1D]
	0x036E4618 ADRP X21, 0xA38000
	0x036E461C LDR X21, [X21 + 0xE40]
	0x036E4620 MOV X0, X19
	0x036E4624 MOV X1, X31
	0x036E4628 STR W31, [X31 + 0x1D8]
	0x036E462C STP X31, X31, [X31 + 0x1C8]
	0x036E4630 STR X31, [X31 + 0x1C0]
	0x036E4634 STR W31, [X31 + 0x1A8]
	0x036E4638 STP X31, X31, [X31 + 0x198]
	0x036E463C STR X31, [X31 + 0x190]
	0x036E4640 BL 0x36F9EB0
	0x036E4644 STP X0, X1, [X31 + 0x1B0]
	0x036E4648 LDR X8, [X20 + 0x30]
	0x036E464C LDP V1, V0, [X20 + 0x10]
	0x036E4650 LDR V2, [X20]
	0x036E4654 ADD X0, X31, 0x1B0
	0x036E4658 ADD X1, X31, 0x1E0
	0x036E465C MOV X2, X31
	0x036E4660 STR X8, [X31 + 0x210]
	0x036E4664 STP V1, V0, [X31 + 0x1F0]
	0x036E4668 STR V2, [X31 + 0x1E]
	0x036E466C BL 0x3BF9750
	0x036E4670 MOV X0, X20
	0x036E4674 MOV X1, X31
	0x036E4678 MOV V8.16B, V0.16B
	0x036E467C BL 0x3BF82BC
	0x036E4680 MOV V9.16B, V0.16B
	0x036E4684 LDR X8, [X20 + 0x30]
	0x036E4688 LDP V1, V0, [X20 + 0x10]
	0x036E468C LDR V2, [X20]
	0x036E4690 ADD X1, X31, 0x1E0
	0x036E4694 ADD X2, X31, 0x1D0
	0x036E4698 ADD X3, X31, 0x1C0
	0x036E469C MOV X0, X19
	0x036E46A0 MOV X4, X31
	0x036E46A4 STR X8, [X31 + 0x210]
	0x036E46A8 STP V1, V0, [X31 + 0x1F0]
	0x036E46AC STR V2, [X31 + 0x1E]
	0x036E46B0 BL 0x3BF8E04
	0x036E46B4 FCMP S8, 0x0
	0x036E46B8 B.LE 0x36E4D20
	0x036E46BC FCMP S9, 0x0
	0x036E46C0 B.EQ 0x36E4D20
	0x036E46C4 B.VS 0x36E4D20

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+144], X30
	003 Move [X31+152], X19
	004 Move [X31+64], X1
	005 Move [X31+72], W2
	006 Move [X31+56], W31
	007 Move [X31+40], X31
	008 Move [X31+48], X31
	009 Move [X31+32], X31
	010 Move [X31+24], W31
	011 Move [X31+16], X31
	012 Move X8, [X0+48]
	013 Move V1, [X0+16]
	014 Move V0, [X0+32]
	015 Move V2, [X0]
	016 Move X19, X0
	017 Add X0, X31, 64
	018 Add X1, X31, 80
	019 Add X2, X31, 48
	020 Add X3, X31, 32
	021 Add X4, X31, 16
	022 Move X5, X31
	023 Move [X31+128], X8
	024 Move [X31+96], V1
	025 Move [X31+104], V0
	026 Move [X31+5], V2
	027 Call TransformStreamHandle.GetLocalTRS, X0, X1, X2, X3, X4
	028 Move S0, [X31+48]
	029 Move S1, [X31+52]
	030 Move V2, [X31+56]
	031 Move S3, [X31+32]
	032 Move S4, [X31+36]
	033 Move S5, [X31+40]
	034 Move S6, [X31+44]
	035 Move V7, [X19]
	036 Move V16, [X19+16]
	037 Move X8, [X19+48]
	038 Move V17, [X19+2]
	039 Move X9, [X31+16]
	040 Move V18, [X31+24]
	041 Add X0, X31, 64
	042 Add X1, X31, 80
	043 Move W2, W31
	044 Move X3, X31
	045 Move [X31+128], X8
	046 Move [X31+96], V16
	047 Move [X31+104], V17
	048 Move [X31+5], V7
	049 Move [X31+8], S18
	050 Move [X31], X9
	051 Call TransformStreamHandle.SetLocalTRS, X0, X1, X2, X3, X4, X5
	052 Move X30, [X31+144]
	053 Move X19, [X31+152]
	054 Add X31, X31, 160
	055 Return 

