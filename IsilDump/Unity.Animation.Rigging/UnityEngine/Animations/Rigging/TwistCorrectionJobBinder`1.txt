Type: UnityEngine.Animations.Rigging.TwistCorrectionJobBinder`1

Method: UnityEngine.Animations.Rigging.TwistCorrectionJob Create(UnityEngine.Animator animator, ref T data, UnityEngine.Component component)

Disassembly:
	0x0270FBC4 B 0x270FBCC
	0x0270FBC8 MOV X0, X8
	0x0270FBCC LDR W11, [X0 + 0xFC]
	0x0270FBD0 ADD X12, X31, 0x0
	0x0270FBD4 ADD W11, W11, 0x10
	0x0270FBD8 ADD X11, X11, 0xF
	0x0270FBDC AND X11, X11, 0x1FFFFFFFF
	0x0270FBE0 SUB X11, X12, X11
	0x0270FBE4 SUB X12, X29, 0x20
	0x0270FBE8 STUR X11, [X12 - 0x100]
	0x0270FBEC ADD X31, X11, 0x0
	0x0270FBF0 TBNZ X10, 0x0, 0x270FC14
	0x0270FBF4 MOV X0, X8
	0x0270FBF8 BL 0x1C5C684
	0x0270FBFC LDR X8, [X23]
	0x0270FC00 LDR X9, [X8 + 0xC0]
	0x0270FC04 LDR X8, [X9 + 0x8]
	0x0270FC08 ADD X10, X8, 0x135
	0x0270FC0C LDRH W10, [X10]
	0x0270FC10 B 0x270FC18
	0x0270FC14 MOV X0, X8
	0x0270FC18 LDR W11, [X0 + 0xFC]
	0x0270FC1C ADD X12, X31, 0x0
	0x0270FC20 ADD W11, W11, 0x10
	0x0270FC24 ADD X11, X11, 0xF
	0x0270FC28 AND X11, X11, 0x1FFFFFFFF
	0x0270FC2C SUB X11, X12, X11
	0x0270FC30 STUR X11, [X29 - 0xC8]
	0x0270FC34 ADD X31, X11, 0x0
	0x0270FC38 TBNZ X10, 0x0, 0x270FC5C
	0x0270FC3C MOV X0, X8
	0x0270FC40 BL 0x1C5C684
	0x0270FC44 LDR X8, [X23]
	0x0270FC48 LDR X9, [X8 + 0xC0]
	0x0270FC4C LDR X8, [X9 + 0x8]
	0x0270FC50 ADD X10, X8, 0x135
	0x0270FC54 LDRH W10, [X10]
	0x0270FC58 B 0x270FC60
	0x0270FC5C MOV X0, X8
	0x0270FC60 LDR W11, [X0 + 0xFC]
	0x0270FC64 ADD X12, X31, 0x0
	0x0270FC68 ADD W11, W11, 0x10
	0x0270FC6C ADD X11, X11, 0xF
	0x0270FC70 AND X11, X11, 0x1FFFFFFFF
	0x0270FC74 SUB X11, X12, X11
	0x0270FC78 SUB X12, X29, 0x28
	0x0270FC7C STUR X11, [X12 - 0x100]
	0x0270FC80 ADD X31, X11, 0x0
	0x0270FC84 TBNZ X10, 0x0, 0x270FCA8
	0x0270FC88 MOV X0, X8
	0x0270FC8C BL 0x1C5C684
	0x0270FC90 LDR X8, [X23]
	0x0270FC94 LDR X9, [X8 + 0xC0]
	0x0270FC98 LDR X8, [X9 + 0x8]
	0x0270FC9C ADD X10, X8, 0x135
	0x0270FCA0 LDRH W10, [X10]
	0x0270FCA4 B 0x270FCAC
	0x0270FCA8 MOV X0, X8
	0x0270FCAC LDR W11, [X0 + 0xFC]
	0x0270FCB0 ADD X12, X31, 0x0
	0x0270FCB4 ADD W11, W11, 0x10
	0x0270FCB8 ADD X11, X11, 0xF
	0x0270FCBC AND X11, X11, 0x1FFFFFFFF
	0x0270FCC0 SUB X11, X12, X11
	0x0270FCC4 SUB X12, X29, 0x30
	0x0270FCC8 STUR X11, [X12 - 0x100]
	0x0270FCCC ADD X31, X11, 0x0
	0x0270FCD0 TBNZ X10, 0x0, 0x270FCF4
	0x0270FCD4 MOV X0, X8
	0x0270FCD8 BL 0x1C5C684
	0x0270FCDC LDR X8, [X23]
	0x0270FCE0 LDR X9, [X8 + 0xC0]
	0x0270FCE4 LDR X8, [X9 + 0x8]
	0x0270FCE8 ADD X10, X8, 0x135
	0x0270FCEC LDRH W10, [X10]
	0x0270FCF0 B 0x270FCF8
	0x0270FCF4 MOV X0, X8
	0x0270FCF8 LDR W11, [X0 + 0xFC]
	0x0270FCFC ADD X12, X31, 0x0
	0x0270FD00 ADD W11, W11, 0x10
	0x0270FD04 ADD X11, X11, 0xF
	0x0270FD08 AND X11, X11, 0x1FFFFFFFF
	0x0270FD0C SUB X11, X12, X11
	0x0270FD10 STUR X11, [X29 - 0xE8]
	0x0270FD14 ADD X31, X11, 0x0
	0x0270FD18 TBNZ X10, 0x0, 0x270FD3C
	0x0270FD1C MOV X0, X8
	0x0270FD20 BL 0x1C5C684
	0x0270FD24 LDR X8, [X23]
	0x0270FD28 LDR X9, [X8 + 0xC0]
	0x0270FD2C LDR X8, [X9 + 0x8]
	0x0270FD30 ADD X10, X8, 0x135
	0x0270FD34 LDRH W10, [X10]
	0x0270FD38 B 0x270FD40
	0x0270FD3C MOV X0, X8
	0x0270FD40 LDR W11, [X0 + 0xFC]
	0x0270FD44 ADD X12, X31, 0x0
	0x0270FD48 ADD W11, W11, 0x10
	0x0270FD4C ADD X11, X11, 0xF
	0x0270FD50 AND X11, X11, 0x1FFFFFFFF
	0x0270FD54 SUB X11, X12, X11
	0x0270FD58 STUR X11, [X29 - 0xE0]
	0x0270FD5C ADD X31, X11, 0x0
	0x0270FD60 TBNZ X10, 0x0, 0x270FD78
	0x0270FD64 MOV X0, X8
	0x0270FD68 BL 0x1C5C684
	0x0270FD6C LDR X8, [X23]
	0x0270FD70 LDR X9, [X8 + 0xC0]
	0x0270FD74 MOV X8, X0
	0x0270FD78 LDR W8, [X8 + 0xFC]
	0x0270FD7C ADD X10, X31, 0x0
	0x0270FD80 ADD W8, W8, 0x10
	0x0270FD84 ADD X8, X8, 0xF
	0x0270FD88 AND X8, X8, 0x1FFFFFFFF
	0x0270FD8C SUB X8, X10, X8
	0x0270FD90 STUR X8, [X29 - 0xD8]
	0x0270FD94 ADD X31, X8, 0x0
	0x0270FD98 STP X31, X31, [X29 - 0x68]
	0x0270FD9C STUR X31, [X29 - 0x70]
	0x0270FDA0 STP X31, X31, [X29 - 0x88]
	0x0270FDA4 STP X31, X31, [X29 - 0x98]
	0x0270FDA8 STUR X31, [X29 - 0xA0]
	0x0270FDAC LDR X0, [X9 + 0x8]
	0x0270FDB0 LDRB W8, [X0 + 0x135]
	0x0270FDB4 TBNZ X8, 0x0, 0x270FDC4
	0x0270FDB8 BL 0x1C5C684
	0x0270FDBC LDR X8, [X23]
	0x0270FDC0 LDR X9, [X8 + 0xC0]
	0x0270FDC4 LDR X1, [X9 + 0x10]
	0x0270FDC8 SUB X5, X29, 0xB8
	0x0270FDCC MOV X2, X20
	0x0270FDD0 MOV X3, X22
	0x0270FDD4 MOV X4, X31
	0x0270FDD8 BL 0x1C17728
	0x0270FDDC LDUR X1, [X29 - 0xB8]
	0x0270FDE0 MOV X0, X21
	0x0270FDE4 MOV X2, X31
	0x0270FDE8 BL 0x36EADF0
	0x0270FDEC LDR X8, [X23]
	0x0270FDF0 STP X1, X0, [X29 - 0xF8]
	0x0270FDF4 LDR X8, [X8 + 0xC0]
	0x0270FDF8 LDR X0, [X8 + 0x8]
	0x0270FDFC LDRB W9, [X0 + 0x135]
	0x0270FE00 TBNZ X9, 0x0, 0x270FE10
	0x0270FE04 BL 0x1C5C684
	0x0270FE08 LDR X8, [X23]
	0x0270FE0C LDR X8, [X8 + 0xC0]
	0x0270FE10 LDR X1, [X8 + 0x18]
	0x0270FE14 SUB X5, X29, 0xB8
	0x0270FE18 MOV X2, X25
	0x0270FE1C MOV X3, X22
	0x0270FE20 MOV X4, X31
	0x0270FE24 BL 0x1C17728
	0x0270FE28 LDUR X1, [X29 - 0xB8]
	0x0270FE2C MOV X0, X21
	0x0270FE30 MOV X2, X31
	0x0270FE34 BL 0x36EADF0
	0x0270FE38 LDR X8, [X23]
	0x0270FE3C STUR X0, [X29 - 0x100]
	0x0270FE40 SUB X10, X29, 0x8
	0x0270FE44 STUR X1, [X10 - 0x100]
	0x0270FE48 LDR X8, [X8 + 0xC0]
	0x0270FE4C LDR X0, [X8 + 0x8]
	0x0270FE50 LDRB W9, [X0 + 0x135]
	0x0270FE54 TBNZ X9, 0x0, 0x270FE64
	0x0270FE58 BL 0x1C5C684
	0x0270FE5C LDR X8, [X23]
	0x0270FE60 LDR X8, [X8 + 0xC0]
	0x0270FE64 LDR X1, [X8 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 736
	014 Move X24, 0x1CCC000
	015 Move W9, [X24+1514]
	016 Move X23, X4
	017 Move X20, X3
	018 Move X22, X2
	019 Move X21, X1
	020 Move X19, X8
	021 Move TEMP, X9
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0x1A0F000
	026 Move X0, [X0+296]
	027 Call 0x1C17CF4
	028 Move X0, 0x1A0F000
	029 Move X0, [X0+2368]
	030 Call 0x1C17CF4
	031 Move X0, 0x1A0F000
	032 Move X0, [X0+2400]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+1514], W8
	036 Add X0, X31, 456
	037 Move W2, 136
	038 Move W1, W31
	039 Call 0x3EB2B10
	040 Add X0, X31, 592
	041 Move W2, 136
	042 Move W1, W31
	043 Add X29, X31, 592
	044 Call 0x3EB2B10
	045 Move X1, [X22]
	046 Add X8, X31, 184
	047 Move X0, X21
	048 Move X2, X31
	049 Call ReadOnlyTransformHandle.Bind, X0, X1
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 Move X8, [X31+200]
	052 Move [X31+37], V0
	053 Move [X31+608], X8
	054 Move X0, [X22]
	055 Compare X0, 0
	056 JumpIfEqual {191}
	057 Move X25, 0x1A0F000
	058 Move X28, 0x1A0F000
	059 Move X27, 0x1A0F000
	060 Move X25, [X25+2400]
	061 Move X28, [X28+296]
	062 Move X27, [X27+2368]
	063 Move X1, X31
	064 Add X26, X31, 592
	065 Call Transform.get_localRotation, X0
	066 Move X0, X31
	067 Call Quaternion.Inverse, X0
	068 Move [X31+616], S0
	069 Move [X31+620], S1
	070 Move [X31+624], S2
	071 Move [X31+628], S3
	072 Move X8, [X23+32]
	073 Move X0, X22
	074 Move X8, [X8+192]
	075 Move X1, [X8+24]
	076 Call TwistCorrectionData.UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistAxis, X0
	077 Add X24, X22, 16
	078 Add X0, X31, 456
	079 Move W2, 136
	080 Move X1, X24
	081 Move [X31+632], S0
	082 Move [X31+636], S1
	083 Move [X31+640], S2
	084 Call 0x3EB2AC0
	085 Add X0, X31, 320
	086 Move W2, 136
	087 Move X1, X24
	088 Call 0x3EB2AC0
	089 Add X3, X29, 56
	090 Add X2, X31, 320
	091 Move X0, X21
	092 Move X1, X20
	093 Move X4, X31
	094 Call WeightedTransformArrayBinder.BindReadWriteTransforms, X0, X1, X2, X3
	095 Add X0, X31, 184
	096 Add X1, X31, 456
	097 Move W2, 136
	098 Call 0x3EB2AC0
	099 Move X8, [X23+32]
	100 Move X0, X22
	101 Move X8, [X8+192]
	102 Move X1, [X8+40]
	103 Call TwistCorrectionData.UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodesProperty, X0
	104 Move X22, X0
	105 Add X0, X31, 48
	106 Add X1, X31, 184
	107 Move W2, 136
	108 Add X23, X29, 72
	109 Call 0x3EB2AC0
	110 Add X2, X31, 48
	111 Move X0, X21
	112 Move X1, X20
	113 Move X3, X22
	114 Move X4, X23
	115 Move X5, X31
	116 Call WeightedTransformArrayBinder.BindWeights, X0, X1, X2, X3, X4
	117 Move X0, [X25]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move W20, [X31+456]
	123 Move X4, [X28]
	124 Add X0, X31, 32
	125 Move W2, 4
	126 Move W1, W20
	127 Move W3, W31
	128 Move [X31+32], X31
	129 Move [X31+40], X31
	130 Call NativeArray`1<Single>..ctor, X0, X1, X2, X3
	131 Move V0, [X31+2]
	132 Move X4, [X27]
	133 Add X0, X31, 16
	134 Move W2, 4
	135 Move W1, W20
	136 Move W3, W31
	137 Move [X26+104], V0
	138 Move [X31+16], X31
	139 Move [X31+24], X31
	140 Call NativeArray`1<Quaternion>..ctor, X0, X1, X2, X3
	141 Move V0, [X31+1]
	142 Move X21, X31
	143 Move X20, X31
	144 Move [X26+88], V0
	145 Move X0, [X25]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, [X25]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Add X0, X31, 456
	158 Move W1, W20
	159 Move X2, X31
	160 Call WeightedTransformArray.get_Item, X0, X1
	161 Compare X0, 0
	162 JumpIfEqual {191}
	163 Move X1, X31
	164 Call Transform.get_localRotation, X0
	165 Move X8, [X31+680]
	166 Add X20, X20, 1
	167 Add X8, X8, X21
	168 Add X21, X21, 16
	169 Move [X8], S0
	170 Move [X8+8], S1
	171 Move [X8+8], S2
	172 Move [X8+16], S3
	173 Add X1, X31, 592
	174 Move W2, 136
	175 Move X0, X19
	176 Call 0x3EB2AC0
	177 Add X31, X31, 736
	178 Move X20, [X31+80]
	179 Move X19, [X31+88]
	180 Move X22, [X31+64]
	181 Move X21, [X31+72]
	182 Move X24, [X31+48]
	183 Move X23, [X31+56]
	184 Move X26, [X31+32]
	185 Move X25, [X31+40]
	186 Move X28, [X31+16]
	187 Move X27, [X31+24]
	188 Move X29, [X31+96]
	189 Move X30, [X31+104]
	190 Return X0
	191 Call 0x1C17F20

Method: System.Void Destroy(UnityEngine.Animations.Rigging.TwistCorrectionJob job)

Disassembly:
	0x0270FE68 SUB X5, X29, 0xB8
	0x0270FE6C MOV X2, X28
	0x0270FE70 MOV X3, X22
	0x0270FE74 MOV X4, X31
	0x0270FE78 BL 0x1C17728
	0x0270FE7C LDUR X1, [X29 - 0xB8]
	0x0270FE80 MOV X0, X21
	0x0270FE84 MOV X2, X31
	0x0270FE88 BL 0x36EADF0
	0x0270FE8C LDR X8, [X23]
	0x0270FE90 MOV X28, X0
	0x0270FE94 SUB X10, X29, 0x10
	0x0270FE98 STUR X1, [X10 - 0x100]
	0x0270FE9C LDR X8, [X8 + 0xC0]
	0x0270FEA0 LDR X0, [X8 + 0x8]
	0x0270FEA4 LDRB W9, [X0 + 0x135]
	0x0270FEA8 TBNZ X9, 0x0, 0x270FEB8
	0x0270FEAC BL 0x1C5C684
	0x0270FEB0 LDR X8, [X23]
	0x0270FEB4 LDR X8, [X8 + 0xC0]
	0x0270FEB8 LDR X1, [X8 + 0x28]
	0x0270FEBC ADRP X20, 0x19E4000
	0x0270FEC0 LDR X20, [X20 + 0x598]
	0x0270FEC4 SUB X5, X29, 0xB8
	0x0270FEC8 MOV X2, X26
	0x0270FECC MOV X3, X22
	0x0270FED0 MOV X4, X31
	0x0270FED4 BL 0x1C17728
	0x0270FED8 LDUR X1, [X29 - 0xB8]
	0x0270FEDC SUB X8, X29, 0xB8
	0x0270FEE0 MOV X0, X21
	0x0270FEE4 MOV X2, X31
	0x0270FEE8 BL 0x36EB150
	0x0270FEEC LDUR V0, [X29 - 0xB8]
	0x0270FEF0 LDUR X8, [X29 - 0xA8]
	0x0270FEF4 STUR V0, [X29 - 0x90]
	0x0270FEF8 STUR X8, [X29 - 0x80]
	0x0270FEFC LDR X8, [X23]
	0x0270FF00 LDR X8, [X8 + 0xC0]
	0x0270FF04 LDR X0, [X8 + 0x8]
	0x0270FF08 LDRB W9, [X0 + 0x135]
	0x0270FF0C TBNZ X9, 0x0, 0x270FF1C
	0x0270FF10 BL 0x1C5C684
	0x0270FF14 LDR X8, [X23]
	0x0270FF18 LDR X8, [X8 + 0xC0]
	0x0270FF1C LDR X1, [X8 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1CCC000
	009 Move X23, 0x1A0F000
	010 Move X22, 0x1A0F000
	011 Move X21, 0x1A0F000
	012 Move X20, 0x1A0F000
	013 Move W8, [X24+1515]
	014 Move X23, [X23+2384]
	015 Move X22, [X22+336]
	016 Move X21, [X21+2392]
	017 Move X20, [X20+344]
	018 Move X19, X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x1A0F000
	024 Move X0, [X0+336]
	025 Call 0x1C17CF4
	026 Move X0, 0x1A0F000
	027 Move X0, [X0+2392]
	028 Call 0x1C17CF4
	029 Move X0, 0x1A0F000
	030 Move X0, [X0+344]
	031 Call 0x1C17CF4
	032 Move X0, 0x1A0F000
	033 Move X0, [X0+2384]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+1515], W8
	037 Move X1, [X23]
	038 Add X0, X19, 56
	039 Call NativeArray`1<ReadWriteTransformHandle>.Dispose, X0
	040 Move X1, [X22]
	041 Add X0, X19, 72
	042 Call NativeArray`1<PropertyStreamHandle>.Dispose, X0
	043 Move X1, [X21]
	044 Add X0, X19, 88
	045 Call NativeArray`1<Quaternion>.Dispose, X0
	046 Move X1, [X20]
	047 Add X0, X19, 104
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move X30, [X31+64]
	055 Call NativeArray`1<Single>.Dispose, X0
	056 Return 

Method: System.Void .ctor()

Disassembly:
	0x0270FF20 SUB X5, X29, 0xB8
	0x0270FF24 MOV X2, X27
	0x0270FF28 MOV X3, X22
	0x0270FF2C MOV X4, X31

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+48]
	004 Call AnimationJobBinder`2<TwistCorrectionJob, TwistCorrectionData>..ctor, X0
	005 Return 

