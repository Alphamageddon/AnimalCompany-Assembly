Type: UnityEngine.Animations.Rigging.WeightedTransformArray/Enumerator

Method: System.Void .ctor(ref UnityEngine.Animations.Rigging.WeightedTransformArray array)

Disassembly:
	0x036F8838 MOV X0, X19
	0x036F883C BL 0x1C16D08
	0x036F8840 BL 0x19903D0
	0x036F8844 MOV X0, X19
	0x036F8848 BL 0x1C16D08
	0x036F884C LDR X8, [X0 + 0xB8]
	0x036F8850 ADRP X0, 0x9FB000
	0x036F8854 LDR W8, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W2, 136
	004 Move X19, X0
	005 Call 0x3EB2B30
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W8, TEMP
	009 Move [X19+136], W8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x036F9CD0 STR X30, [X31 - 0x30]!
	0x036F9CD4 STP X22, X21, [X31 + 0x10]
	0x036F9CD8 STP X20, X19, [X31 + 0x20]
	0x036F9CDC ADRP X19, 0xCE7000
	0x036F9CE0 ADRP X21, 0xA47000
	0x036F9CE4 LDRB W8, [X19 + 0xBDC]
	0x036F9CE8 LDR X21, [X21 + 0xC78]
	0x036F9CEC MOV X20, X0
	0x036F9CF0 TBNZ X8, 0x0, 0x36F9D38
	0x036F9CF4 ADRP X0, 0x9FC000
	0x036F9CF8 LDR X0, [X0 + 0x5B0]
	0x036F9CFC BL 0x1C16CF4
	0x036F9D00 ADRP X0, 0xA47000
	0x036F9D04 LDR X0, [X0 + 0xC80]
	0x036F9D08 BL 0x1C16CF4
	0x036F9D0C ADRP X0, 0x9FA000
	0x036F9D10 LDR X0, [X0 + 0x638]
	0x036F9D14 BL 0x1C16CF4
	0x036F9D18 ADRP X0, 0xA47000
	0x036F9D1C LDR X0, [X0 + 0xC88]
	0x036F9D20 BL 0x1C16CF4
	0x036F9D24 ADRP X0, 0xA47000
	0x036F9D28 LDR X0, [X0 + 0xC78]
	0x036F9D2C BL 0x1C16CF4
	0x036F9D30 MOVZ W8, 0x1
	0x036F9D34 STRB W8, [X19 + 0xBDC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCE8000
	006 Move X20, 0xA25000
	007 Move W8, [X21+3025]
	008 Move X20, [X20+2400]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA25000
	015 Move X0, [X0+2400]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3025], W8
	019 Move W8, [X19+136]
	020 Add W21, W8, 1
	021 Move [X19+136], W21
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W8, [X19]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSET not yet implemented."
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0

Method: System.Void Reset()

Disassembly:
	0x036F9D38 LDR X0, [X21]
	0x036F9D3C BL 0x1C16F10
	0x036F9D40 MOV X1, X31

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+136], W8
	005 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x036F9D44 MOV X19, X0

ISIL:
	001 Return 

Method: UnityEngine.Animations.Rigging.WeightedTransform get_Current()

Disassembly:
	0x036F9D48 BL 0x33BDD8C
	0x036F9D4C MOV X0, X20
	0x036F9D50 BL 0x36F9B88
	0x036F9D54 CBZ X19, 0x36F9E2C
	0x036F9D58 ADRP X8, 0x9FC000
	0x036F9D5C LDR X8, [X8 + 0x5B0]
	0x036F9D60 STR W31, [X19 + 0x10]
	0x036F9D64 MOV X20, X0
	0x036F9D68 ADRP X21, 0xA47000
	0x036F9D6C LDR X0, [X8]
	0x036F9D70 ADRP X22, 0xA47000
	0x036F9D74 LDR X21, [X21 + 0xC88]
	0x036F9D78 LDR X22, [X22 + 0xC80]
	0x036F9D7C BL 0x1C16F10
	0x036F9D80 LDR X2, [X21]
	0x036F9D84 MOV X1, X19
	0x036F9D88 MOV X3, X31
	0x036F9D8C MOV X21, X0
	0x036F9D90 BL 0x2A6DA40
	0x036F9D94 LDR X2, [X22]
	0x036F9D98 MOV X0, X20
	0x036F9D9C MOV X1, X21
	0x036F9DA0 BL 0x22E7120

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCE8000
	006 Move X20, 0xA25000
	007 Move W8, [X21+3026]
	008 Move X20, [X20+2400]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA25000
	015 Move X0, [X0+2400]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3026], W8
	019 Move X0, [X20]
	020 Move W20, [X19+136]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X19
	026 Move W1, W20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call WeightedTransformArray.Get, X0, X1
	032 Return X0

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x036F9DA4 CBZ X20, 0x36F9E2C
	0x036F9DA8 ADRP X8, 0x9FA000
	0x036F9DAC LDR X8, [X8 + 0x638]
	0x036F9DB0 LDR W1, [X20 + 0x18]
	0x036F9DB4 LDR X0, [X8]
	0x036F9DB8 BL 0x1C16D6C
	0x036F9DBC LDR X9, [X20 + 0x18]
	0x036F9DC0 CMP W9, 0x1
	0x036F9DC4 B.LT 0x36F9E18
	0x036F9DC8 AND X9, X9, 0x0
	0x036F9DCC MOV X8, X31
	0x036F9DD0 ADD X10, X20, 0x20
	0x036F9DD4 ADD X11, X0, 0x20
	0x036F9DD8 SXTW X12, W9
	0x036F9DDC FMOV S0, W31
	0x036F9DE0 CMP X8, X9
	0x036F9DE4 B.CS 0x36F9E28
	0x036F9DE8 CBZ X0, 0x36F9E2C
	0x036F9DEC LDR W13, [X0 + 0x18]
	0x036F9DF0 CMP X8, X13
	0x036F9DF4 B.CS 0x36F9E28
	0x036F9DF8 LDR V1, [X10, X8, LSL #2]
	0x036F9DFC LDR V2, [X19 + 0x10]
	0x036F9E00 FADD S0, S0, S1
	0x036F9E04 FDIV S1, S0, S2

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCE8000
	007 Move X20, 0xA48000
	008 Move W8, [X21+3027]
	009 Move X20, [X20+2808]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA48000
	016 Move X0, [X0+2808]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3027], W8
	020 Move X0, X19
	021 Call Enumerator.get_Current, X0
	022 Move X8, [X20]
	023 Move [X31], X0
	024 Move [X31+8], X1
	025 Add X1, X31, 0
	026 Move X0, X8
	027 Call 0x1C17E04
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X30, [X31+16]
	031 Move X21, [X31+24]
	032 Add X31, X31, 48
	033 Return X0

