Type: UnityEngine.Animations.Rigging.ChainIKConstraintJobBinder`1

Method: UnityEngine.Animations.Rigging.ChainIKConstraintJob Create(UnityEngine.Animator animator, ref T data, UnityEngine.Component component)

Disassembly:
	0x028F2908 FMUL S16, S11, S1
	0x028F290C FMUL S17, S9, S3
	0x028F2910 FMUL S22, S11, S2
	0x028F2914 FMUL S23, S11, S3
	0x028F2918 FMUL S3, S8, S3
	0x028F291C FMUL S6, S9, S2
	0x028F2920 FMUL S18, S8, S0
	0x028F2924 FMUL S20, S10, S1
	0x028F2928 FMUL S21, S10, S0
	0x028F292C FADD S4, S4, S5
	0x028F2930 FADD S5, S16, S17
	0x028F2934 FADD S3, S22, S3
	0x028F2938 FMUL S7, S8, S1
	0x028F293C FMUL S19, S10, S2
	0x028F2940 FMUL S0, S9, S0
	0x028F2944 FMUL S1, S9, S1
	0x028F2948 FSUB S16, S23, S21
	0x028F294C FADD S4, S6, S4
	0x028F2950 FADD S5, S18, S5
	0x028F2954 FADD S3, S20, S3
	0x028F2958 FMUL S2, S8, S2
	0x028F295C FSUB S1, S16, S1
	0x028F2960 FSUB S4, S4, S7
	0x028F2964 FSUB S5, S5, S19
	0x028F2968 FSUB S0, S3, S0
	0x028F296C FSUB S11, S1, S2
	0x028F2970 MOV V8.16B, V12.16B
	0x028F2974 MOV V12.16B, V4.16B
	0x028F2978 MOV V9.16B, V13.16B
	0x028F297C MOV V13.16B, V5.16B
	0x028F2980 MOV V10.16B, V15.16B
	0x028F2984 MOV V15.16B, V0.16B
	0x028F2988 LDR X8, [X23]
	0x028F298C LDR X8, [X8 + 0xC0]
	0x028F2990 LDR X0, [X8 + 0x8]
	0x028F2994 LDRB W9, [X0 + 0x135]
	0x028F2998 TBNZ X9, 0x0, 0x28F29A8
	0x028F299C BL 0x1C5C684
	0x028F29A0 LDR X8, [X23]
	0x028F29A4 LDR X8, [X8 + 0xC0]
	0x028F29A8 SUB X9, X29, 0x10
	0x028F29AC LDUR X2, [X9 - 0x100]
	0x028F29B0 LDR X1, [X8 + 0x38]
	0x028F29B4 ADRP X20, 0x182A000
	0x028F29B8 LDR X20, [X20 + 0xE38]
	0x028F29BC SUB X5, X29, 0xC8
	0x028F29C0 MOV X3, X27
	0x028F29C4 MOV X4, X31
	0x028F29C8 BL 0x1C17728
	0x028F29CC LDP X0, X2, [X29 - 0xD0]
	0x028F29D0 MOV X1, X25
	0x028F29D4 MOV X3, X31
	0x028F29D8 BL 0x36E515C
	0x028F29DC LDR X8, [X23]
	0x028F29E0 MOV X22, X0
	0x028F29E4 STUR X1, [X29 - 0xE8]
	0x028F29E8 LDR X8, [X8 + 0xC0]
	0x028F29EC LDR X0, [X8 + 0x8]
	0x028F29F0 LDRB W9, [X0 + 0x135]
	0x028F29F4 TBNZ X9, 0x0, 0x28F2A04
	0x028F29F8 BL 0x1C5C684
	0x028F29FC LDR X8, [X23]
	0x028F2A00 LDR X8, [X8 + 0xC0]
	0x028F2A04 SUB X9, X29, 0x8
	0x028F2A08 LDUR X2, [X9 - 0x100]
	0x028F2A0C LDR X1, [X8 + 0x40]
	0x028F2A10 SUB X5, X29, 0xC8
	0x028F2A14 MOV X3, X27
	0x028F2A18 MOV X4, X31
	0x028F2A1C MOV X21, X23
	0x028F2A20 BL 0x1C17728
	0x028F2A24 LDP X0, X2, [X29 - 0xD0]
	0x028F2A28 MOV X1, X25
	0x028F2A2C MOV X3, X31
	0x028F2A30 BL 0x36E515C
	0x028F2A34 MOV X23, X0
	0x028F2A38 LDR X0, [X20]
	0x028F2A3C MOV X25, X1
	0x028F2A40 BL 0x1C16F10
	0x028F2A44 MOV X1, X31
	0x028F2A48 MOV X26, X0
	0x028F2A4C BL 0x36E2580
	0x028F2A50 LDR X8, [X21]
	0x028F2A54 LDR X8, [X8 + 0xC0]
	0x028F2A58 LDR X0, [X8 + 0x8]
	0x028F2A5C LDRB W9, [X0 + 0x135]
	0x028F2A60 TBNZ X9, 0x0, 0x28F2A70
	0x028F2A64 BL 0x1C5C684
	0x028F2A68 LDR X8, [X21]
	0x028F2A6C LDR X8, [X8 + 0xC0]
	0x028F2A70 LDR X1, [X8 + 0x48]
	0x028F2A74 SUB X8, X29, 0x18
	0x028F2A78 LDUR X2, [X8 - 0x100]
	0x028F2A7C SUB X5, X29, 0xC8
	0x028F2A80 MOV X3, X27
	0x028F2A84 MOV X4, X31
	0x028F2A88 BL 0x1C17728
	0x028F2A8C CBZ X26, 0x28F2BCC
	0x028F2A90 LDUR W8, [X29 - 0xC8]
	0x028F2A94 MOV X0, X26
	0x028F2A98 MOV X1, X31
	0x028F2A9C SCVTF S0, W8
	0x028F2AA0 BL 0x36E2600
	0x028F2AA4 LDUR X20, [X29 - 0xE0]
	0x028F2AA8 MOV X27, X0
	0x028F2AAC LDR X8, [X20]
	0x028F2AB0 LDR X9, [X8 + 0xC0]
	0x028F2AB4 LDR X8, [X9 + 0x8]
	0x028F2AB8 LDRB W10, [X8 + 0x135]
	0x028F2ABC TBNZ X10, 0x0, 0x28F2AD4
	0x028F2AC0 MOV X0, X8
	0x028F2AC4 BL 0x1C5C684
	0x028F2AC8 LDR X8, [X20]
	0x028F2ACC LDR X9, [X8 + 0xC0]
	0x028F2AD0 MOV X8, X0
	0x028F2AD4 MOV X0, X8
	0x028F2AD8 SUB X8, X29, 0x28
	0x028F2ADC LDR X1, [X9 + 0x50]
	0x028F2AE0 LDUR X2, [X8 - 0x100]
	0x028F2AE4 LDUR X3, [X29 - 0xD8]
	0x028F2AE8 SUB X5, X29, 0xC8
	0x028F2AEC MOV X4, X31
	0x028F2AF0 BL 0x1C17728
	0x028F2AF4 LDUR V0, [X29 - 0xC8]
	0x028F2AF8 MOV X0, X26
	0x028F2AFC MOV X1, X31
	0x028F2B00 BL 0x36E2600
	0x028F2B04 MOV X20, X0
	0x028F2B08 MOV X0, X26
	0x028F2B0C MOV X1, X31
	0x028F2B10 BL 0x36E2D10
	0x028F2B14 SUB X8, X29, 0x30
	0x028F2B18 SUB X9, X29, 0x38
	0x028F2B1C LDUR X8, [X8 - 0x100]
	0x028F2B20 LDUR X9, [X9 - 0x100]
	0x028F2B24 LDUR V0, [X29 - 0x90]
	0x028F2B28 LDUR V1, [X29 - 0x60]
	0x028F2B2C STP X24, X8, [X19]
	0x028F2B30 LDUR X8, [X29 - 0x80]
	0x028F2B34 STP X28, X9, [X19 + 0x48]
	0x028F2B38 LDUR X9, [X29 - 0xE8]
	0x028F2B3C LDUR V2, [X29 - 0x78]
	0x028F2B40 STR X8, [X19 + 0x20]
	0x028F2B44 SUB X8, X29, 0x20
	0x028F2B48 STP X22, X9, [X19 + 0x68]
	0x028F2B4C LDUR W9, [X29 - 0x68]
	0x028F2B50 LDUR X8, [X8 - 0x100]
	0x028F2B54 STP S8, S9, [X19 + 0x28]
	0x028F2B58 STP S10, S12, [X19 + 0x30]
	0x028F2B5C STP S13, S15, [X19 + 0x38]
	0x028F2B60 STR S11, [X19 + 0x40]
	0x028F2B64 STR W31, [X19 + 0x44]
	0x028F2B68 STP X23, X25, [X19 + 0x78]
	0x028F2B6C STP W20, W27, [X19 + 0x88]
	0x028F2B70 STP X0, X1, [X19 + 0x90]
	0x028F2B74 STR S14, [X19 + 0xA0]
	0x028F2B78 STR V0, [X19 + 0x1]
	0x028F2B7C STUR V1, [X19 + 0x58]
	0x028F2B80 STR W9, [X19 + 0xB4]
	0x028F2B84 STUR V2, [X19 + 0xA4]
	0x028F2B88 LDR X8, [X8 + 0x28]
	0x028F2B8C LDUR X9, [X29 - 0x50]
	0x028F2B90 CMP X8, X9
	0x028F2B94 B.NE 0x28F2BD0
	0x028F2B98 SUB X31, X29, 0x40
	0x028F2B9C LDP X20, X19, [X31 + 0x90]
	0x028F2BA0 LDP X22, X21, [X31 + 0x80]
	0x028F2BA4 LDP X24, X23, [X31 + 0x70]
	0x028F2BA8 LDP X26, X25, [X31 + 0x60]
	0x028F2BAC LDP X28, X27, [X31 + 0x50]
	0x028F2BB0 LDP X29, X30, [X31 + 0x40]
	0x028F2BB4 LDP D9, D8, [X31 + 0x30]
	0x028F2BB8 LDP D11, D10, [X31 + 0x20]
	0x028F2BBC LDP D13, D12, [X31 + 0x10]
	0x028F2BC0 LDP D15, D14, [X31], #0xA0
	0x028F2BC4 RET
	0x028F2BC8 BL 0x1C16F28
	0x028F2BCC BL 0x1C16F20
	0x028F2BD0 BL 0x3EB1B20
	0x028F2BD4 STP X30, X23, [X31 - 0x30]!
	0x028F2BD8 STP X22, X21, [X31 + 0x10]
	0x028F2BDC STP X20, X19, [X31 + 0x20]
	0x028F2BE0 ADRP X22, 0x1AE8000
	0x028F2BE4 ADRP X23, 0x182B000
	0x028F2BE8 ADRP X21, 0x182B000
	0x028F2BEC ADRP X20, 0x182C000
	0x028F2BF0 LDRB W8, [X22 + 0xD57]
	0x028F2BF4 LDR X23, [X23 + 0x950]
	0x028F2BF8 LDR X21, [X21 + 0x158]
	0x028F2BFC LDR X20, [X20 + 0x1F8]
	0x028F2C00 MOV X19, X1
	0x028F2C04 TBNZ X8, 0x0, 0x28F2C34
	0x028F2C08 ADRP X0, 0x182C000
	0x028F2C0C LDR X0, [X0 + 0x1F8]
	0x028F2C10 BL 0x1C16CF4
	0x028F2C14 ADRP X0, 0x182B000
	0x028F2C18 LDR X0, [X0 + 0x158]
	0x028F2C1C BL 0x1C16CF4
	0x028F2C20 ADRP X0, 0x182B000
	0x028F2C24 LDR X0, [X0 + 0x950]
	0x028F2C28 BL 0x1C16CF4
	0x028F2C2C MOVZ W8, 0x1
	0x028F2C30 STRB W8, [X22 + 0xD57]
	0x028F2C34 LDR X1, [X23]
	0x028F2C38 MOV X0, X19
	0x028F2C3C BL 0x23E19F4
	0x028F2C40 LDR X1, [X21]
	0x028F2C44 ADD X0, X19, 0x48
	0x028F2C48 BL 0x23E53EC
	0x028F2C4C LDR X1, [X20]
	0x028F2C50 ADD X0, X19, 0x58
	0x028F2C54 BL 0x23F1210
	0x028F2C58 ADD X0, X19, 0x90
	0x028F2C5C LDP X20, X19, [X31 + 0x20]
	0x028F2C60 LDP X22, X21, [X31 + 0x10]
	0x028F2C64 MOV X1, X31
	0x028F2C68 LDP X30, X23, [X31], #0x30
	0x028F2C6C B 0x36E2518
	0x028F2C70 STP X29, X30, [X31 - 0x50]!
	0x028F2C74 STR X25, [X31 + 0x10]
	0x028F2C78 STP X24, X23, [X31 + 0x20]
	0x028F2C7C STP X22, X21, [X31 + 0x30]
	0x028F2C80 STP X20, X19, [X31 + 0x40]
	0x028F2C84 ADD X29, X31, 0x0
	0x028F2C88 SUB X31, X31, 0x10
	0x028F2C8C MRS X25, 0xC000
	0x028F2C90 LDR X8, [X25 + 0x28]
	0x028F2C94 MOV X21, X3
	0x028F2C98 MOV X19, X2
	0x028F2C9C MOV X20, X1
	0x028F2CA0 STUR X8, [X29 - 0x8]
	0x028F2CA4 LDR X8, [X3 + 0x20]
	0x028F2CA8 LDR X9, [X8 + 0xC0]
	0x028F2CAC LDR X8, [X9 + 0x8]
	0x028F2CB0 ADD X10, X8, 0x135
	0x028F2CB4 LDRH W10, [X10]
	0x028F2CB8 TBNZ X10, 0x0, 0x28F2CDC
	0x028F2CBC MOV X0, X8
	0x028F2CC0 BL 0x1C5C684
	0x028F2CC4 LDR X8, [X21 + 0x20]
	0x028F2CC8 LDR X9, [X8 + 0xC0]
	0x028F2CCC LDR X8, [X9 + 0x8]
	0x028F2CD0 ADD X10, X8, 0x135
	0x028F2CD4 LDRH W10, [X10]
	0x028F2CD8 B 0x28F2CE0
	0x028F2CDC MOV X0, X8
	0x028F2CE0 LDR W11, [X0 + 0xFC]
	0x028F2CE4 ADD X12, X31, 0x0
	0x028F2CE8 ADD W11, W11, 0x10
	0x028F2CEC ADD X11, X11, 0xF
	0x028F2CF0 AND X11, X11, 0x1FFFFFFFF
	0x028F2CF4 SUB X24, X12, X11
	0x028F2CF8 ADD X31, X24, 0x0
	0x028F2CFC TBNZ X10, 0x0, 0x28F2D20
	0x028F2D00 MOV X0, X8
	0x028F2D04 BL 0x1C5C684
	0x028F2D08 LDR X8, [X21 + 0x20]
	0x028F2D0C LDR X9, [X8 + 0xC0]
	0x028F2D10 LDR X8, [X9 + 0x8]
	0x028F2D14 ADD X10, X8, 0x135
	0x028F2D18 LDRH W10, [X10]
	0x028F2D1C B 0x28F2D24
	0x028F2D20 MOV X0, X8
	0x028F2D24 LDR W11, [X0 + 0xFC]
	0x028F2D28 ADD X12, X31, 0x0
	0x028F2D2C ADD W11, W11, 0x10
	0x028F2D30 ADD X11, X11, 0xF
	0x028F2D34 AND X11, X11, 0x1FFFFFFFF
	0x028F2D38 SUB X23, X12, X11
	0x028F2D3C ADD X31, X23, 0x0
	0x028F2D40 ADD X22, X20, 0x90
	0x028F2D44 TBNZ X10, 0x0, 0x28F2D5C
	0x028F2D48 MOV X0, X8
	0x028F2D4C BL 0x1C5C684
	0x028F2D50 LDR X8, [X21 + 0x20]
	0x028F2D54 LDR X9, [X8 + 0xC0]
	0x028F2D58 MOV X8, X0
	0x028F2D5C LDR X1, [X9 + 0x48]
	0x028F2D60 SUB X5, X29, 0xC
	0x028F2D64 MOV X0, X8
	0x028F2D68 MOV X2, X24
	0x028F2D6C MOV X3, X19
	0x028F2D70 MOV X4, X31
	0x028F2D74 BL 0x1C17728
	0x028F2D78 LDUR V0, [X29 - 0xC]
	0x028F2D7C LDR W1, [X20 + 0x8C]
	0x028F2D80 MOV X0, X22
	0x028F2D84 MOV W2, W31
	0x028F2D88 SCVTF S0, S0
	0x028F2D8C MOV X3, X31
	0x028F2D90 BL 0x36E2570
	0x028F2D94 LDR X8, [X21 + 0x20]
	0x028F2D98 LDR X8, [X8 + 0xC0]
	0x028F2D9C LDR X0, [X8 + 0x8]
	0x028F2DA0 LDRB W9, [X0 + 0x135]
	0x028F2DA4 TBNZ X9, 0x0, 0x28F2DB4
	0x028F2DA8 BL 0x1C5C684
	0x028F2DAC LDR X8, [X21 + 0x20]
	0x028F2DB0 LDR X8, [X8 + 0xC0]
	0x028F2DB4 LDR X1, [X8 + 0x50]
	0x028F2DB8 SUB X5, X29, 0xC
	0x028F2DBC MOV X2, X23
	0x028F2DC0 MOV X3, X19
	0x028F2DC4 MOV X4, X31
	0x028F2DC8 BL 0x1C17728
	0x028F2DCC LDUR V0, [X29 - 0xC]
	0x028F2DD0 LDR W1, [X20 + 0x88]
	0x028F2DD4 MOV X0, X22
	0x028F2DD8 MOV W2, W31
	0x028F2DDC MOV X3, X31
	0x028F2DE0 BL 0x36E2570
	0x028F2DE4 LDR X8, [X25 + 0x28]
	0x028F2DE8 LDUR X9, [X29 - 0x8]
	0x028F2DEC CMP X8, X9
	0x028F2DF0 B.NE 0x28F2E10
	0x028F2DF4 ADD X31, X29, 0x0
	0x028F2DF8 LDP X20, X19, [X31 + 0x40]
	0x028F2DFC LDP X22, X21, [X31 + 0x30]
	0x028F2E00 LDP X24, X23, [X31 + 0x20]
	0x028F2E04 LDR X25, [X31 + 0x10]
	0x028F2E08 LDP X29, X30, [X31], #0x50
	0x028F2E0C RET
	0x028F2E10 BL 0x3EB1B20
	0x028F2E14 LDR X8, [X1 + 0x20]
	0x028F2E18 LDR X8, [X8 + 0xC0]
	0x028F2E1C LDR X1, [X8 + 0x58]
	0x028F2E20 LDR X2, [X1]
	0x028F2E24 BR X2
	0x028F2E28 STR X30, [X31 - 0x30]!
	0x028F2E2C STP X22, X21, [X31 + 0x10]
	0x028F2E30 STP X20, X19, [X31 + 0x20]
	0x028F2E34 MOV X19, X0
	0x028F2E38 LDR X0, [X0 + 0x20]
	0x028F2E3C LDRB W8, [X0 + 0x135]
	0x028F2E40 TBNZ X8, 0x0, 0x28F2E48
	0x028F2E44 BL 0x1C5C684
	0x028F2E48 LDR X8, [X0 + 0xC0]
	0x028F2E4C LDR X0, [X8 + 0x8]
	0x028F2E50 LDRB W8, [X0 + 0x135]
	0x028F2E54 TBNZ X8, 0x0, 0x28F2E5C
	0x028F2E58 BL 0x1C5C684
	0x028F2E5C LDR W8, [X0 + 0xE0]
	0x028F2E60 CBNZ W8, 0x28F2E68
	0x028F2E64 BL 0x1C16DFC
	0x028F2E68 LDR X0, [X19 + 0x20]
	0x028F2E6C LDRB W8, [X0 + 0x135]
	0x028F2E70 TBNZ X8, 0x0, 0x28F2E78
	0x028F2E74 BL 0x1C5C684
	0x028F2E78 LDR X8, [X0 + 0xC0]

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+208], D15
	003 Move [X31+216], D14
	004 Move [X31+224], D13
	005 Move [X31+232], D12
	006 Move [X31+240], D11
	007 Move [X31+248], D10
	008 Move [X31+256], D9
	009 Move [X31+264], D8
	010 Move [X31+272], X29
	011 Move [X31+280], X30
	012 Move [X31+288], X28
	013 Move [X31+296], X27
	014 Move [X31+304], X26
	015 Move [X31+312], X25
	016 Move [X31+320], X24
	017 Move [X31+328], X23
	018 Move [X31+336], X22
	019 Move [X31+344], X21
	020 Move [X31+352], X20
	021 Move [X31+360], X19
	022 NotImplemented "Instruction MRS not yet implemented."
	023 Move X9, [X21+40]
	024 Move X20, 0x1AE9000
	025 Move X26, X4
	026 Move X25, X3
	027 Move [X31+200], X9
	028 Move W9, [X20+3412]
	029 Move X23, X2
	030 Move X22, X1
	031 Move X19, X8
	032 Move TEMP, X9
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {53}
	036 Move X0, 0x182B000
	037 Move X0, [X0+3648]
	038 Call 0x1C17CF4
	039 Move X0, 0x182B000
	040 Move X0, [X0+3640]
	041 Call 0x1C17CF4
	042 Move X0, 0x182C000
	043 Move X0, [X0+296]
	044 Call 0x1C17CF4
	045 Move X0, 0x182D000
	046 Move X0, [X0+496]
	047 Call 0x1C17CF4
	048 Move X0, 0x182C000
	049 Move X0, [X0+2376]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+3412], W8
	053 Move [X31+136], X31
	054 Move [X31+144], X31
	055 Move [X31+128], X31
	056 Move X0, [X23]
	057 Move X1, [X23+8]
	058 Move X2, X31
	059 Call ConstraintsUtils.ExtractChain, X0, X1
	060 Move [X31+152], X31
	061 Move [X31+160], X31
	062 Move [X31+168], W31
	063 Compare X0, 0
	064 JumpIfEqual {401}
	065 Move [X31+48], X26
	066 Move [X31+56], X25
	067 Move [X31+64], X23
	068 Move [X31+40], X21
	069 Move X8, 0x182C000
	070 Move X8, [X8+2376]
	071 Move [X31+72], X31
	072 Move [X31+80], X31
	073 Move W1, [X0+24]
	074 Move X20, 0x182C000
	075 Move X4, [X8]
	076 Move X21, 0x182D000
	077 Move X20, [X20+296]
	078 Move X21, [X21+496]
	079 Move X24, X0
	080 Add X0, X31, 72
	081 Move W2, 4
	082 Move W3, W31
	083 Call NativeArray`1<ReadWriteTransformHandle>..ctor, X0, X1, X2, X3
	084 Move [X31+112], X31
	085 Move [X31+120], X31
	086 Move X29, [X31+72]
	087 Move X8, [X31+80]
	088 Move W1, [X24+24]
	089 Move X4, [X20]
	090 Add X0, X31, 112
	091 Move W2, 4
	092 Move W3, W31
	093 Move [X31+32], X8
	094 Call NativeArray`1<Single>..ctor, X0, X1, X2, X3
	095 Move [X31+96], X31
	096 Move [X31+104], X31
	097 Move X28, [X31+112]
	098 Move X8, [X31+120]
	099 Move W1, [X24+24]
	100 Move X4, [X21]
	101 Add X0, X31, 96
	102 Move W2, 4
	103 Move W3, W31
	104 Move [X31+24], X8
	105 Call NativeArray`1<Vector3>..ctor, X0, X1, X2, X3
	106 Move V0, [X31+6]
	107 Move [X31+11], V0
	108 Move X8, [X24+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X25, 0x1802000
	111 Move X25, [X25+1448]
	112 Move X27, X31
	113 Subtract W26, W8, 1
	114 Move S14, W31
	115 Move W21, 12
	116 Move X23, 0x1AE7000
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Add X20, X24, X27
	119 Add X20, X20, 32
	120 Move X1, [X20]
	121 Move X0, X22
	122 Move X2, X31
	123 Call ReadWriteTransformHandle.Bind, X0, X1
	124 NotImplemented "Instruction MADD not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X8], X0
	127 Move [X8+8], W1
	128 Add X20, X27, 1
	129 Move S0, W31
	130 Move W8, [X24+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, [X20]
	133 Compare X0, 0
	134 JumpIfEqual {401}
	135 Move X1, X31
	136 Call Transform.get_position, X0
	137 Move W8, [X24+24]
	138 Add X20, X27, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add X8, X24, X20
	141 Move X0, [X8+32]
	142 Compare X0, 0
	143 JumpIfEqual {401}
	144 Move X1, X31
	145 Move V8, V0
	146 Move V9, V1
	147 Move V10, V2
	148 Call Transform.get_position, X0
	149 Move W8, [X23+2140]
	150 Move V11, V0
	151 Move V12, V1
	152 Move V13, V2
	153 Compare W8, 0
	154 JumpIfNotEqual {159}
	155 Move X0, X25
	156 Call 0x1C17CF4
	157 Move W8, 1
	158 Move [X23+2140], W8
	159 Move X0, [X25]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Subtract S0, S8, S11
	165 Subtract S1, S9, S12
	166 Subtract S2, S10, S13
	167 Multiply S0, S0, S0
	168 Multiply S1, S1, S1
	169 Add S0, S0, S1
	170 Multiply S1, S2, S2
	171 Add S0, S1, S0
	172 NotImplemented "Instruction FSQRT not yet implemented."
	173 Move [X28], S0
	174 Move W8, [X24+24]
	175 Add S14, S14, S0
	176 Move X27, X20
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move S14, W31
	179 Move X26, [X31+64]
	180 Move X20, 0x182B000
	181 Add X8, X31, 72
	182 Move X0, X22
	183 Move X1, [X26+16]
	184 Move X20, [X20+3648]
	185 Move X2, X31
	186 Call ReadOnlyTransformHandle.Bind, X0, X1
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 Move X8, [X31+88]
	189 Move X0, [X20]
	190 Move [X31+8], V0
	191 Move [X31+144], X8
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 Move X21, 0x1AE9000
	197 Move W8, [X21+1576]
	198 Compare W8, 0
	199 JumpIfNotEqual {205}
	200 Move X0, 0x182B000
	201 Move X0, [X0+3648]
	202 Call 0x1C17CF4
	203 Move W8, 1
	204 Move [X21+1576], W8
	205 Move X0, [X20]
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {211}
	209 Call 0x1C17DFC
	210 Move X0, [X20]
	211 Move X8, [X0+184]
	212 Move W9, [X26+40]
	213 Move S15, [X8+12]
	214 Move S11, [X8+16]
	215 Move S12, [X8+20]
	216 Move S13, [X8+24]
	217 Compare W9, 0
	218 JumpIfEqual {235}
	219 Move X0, [X26+8]
	220 Compare X0, 0
	221 JumpIfEqual {401}
	222 Move X1, X31
	223 Call Transform.get_position, X0
	224 Move X0, [X26+16]
	225 Compare X0, 0
	226 JumpIfEqual {401}
	227 Move X1, X31
	228 Move V8, V0
	229 Move V9, V1
	230 Move V10, V2
	231 Call Transform.get_position, X0
	232 Subtract S8, S8, S0
	233 Subtract S9, S9, S1
	234 Subtract S10, S10, S2
	235 Move S8, [X8]
	236 Move S9, [X8+4]
	237 Move V10, [X8+8]
	238 Move W8, [X26+41]
	239 Compare W8, 0
	240 JumpIfEqual {291}
	241 Move X0, [X26+16]
	242 Move [X31+12], S10
	243 Move [X31+20], S9
	244 Move [X31+20], S8
	245 Compare X0, 0
	246 JumpIfEqual {401}
	247 Move X1, X31
	248 Call Transform.get_rotation, X0
	249 Move X0, X31
	250 Call Quaternion.Inverse, X0
	251 Move X0, [X26+8]
	252 Compare X0, 0
	253 JumpIfEqual {401}
	254 Move X1, X31
	255 Move V10, V0
	256 Move V9, V1
	257 Move V8, V2
	258 Move V11, V3
	259 Call Transform.get_rotation, X0
	260 Multiply S4, S11, S0
	261 Multiply S5, S10, S3
	262 Multiply S6, S9, S2
	263 Multiply S7, S8, S1
	264 Multiply S16, S11, S1
	265 Multiply S17, S9, S3
	266 Multiply S18, S8, S0
	267 Multiply S19, S10, S2
	268 Multiply S20, S10, S1
	269 Multiply S21, S10, S0
	270 Multiply S0, S9, S0
	271 Multiply S1, S9, S1
	272 Multiply S22, S11, S2
	273 Multiply S23, S11, S3
	274 Multiply S3, S8, S3
	275 Multiply S2, S8, S2
	276 Move S9, [X31+16]
	277 Move S8, [X31+20]
	278 Move V10, [X31+12]
	279 Add S4, S4, S5
	280 Add S5, S16, S17
	281 Add S3, S22, S3
	282 Subtract S16, S23, S21
	283 Add S4, S6, S4
	284 Add S5, S18, S5
	285 Add S3, S20, S3
	286 Subtract S1, S16, S1
	287 Subtract S15, S4, S7
	288 Subtract S11, S5, S19
	289 Subtract S12, S3, S0
	290 Subtract S13, S1, S2
	291 Move X23, [X31+48]
	292 Move X20, 0x182B000
	293 Move X0, X26
	294 Move X8, [X23+32]
	295 Move X8, [X8+192]
	296 Move X1, [X8+56]
	297 Move X20, [X20+3640]
	298 Call ChainIKConstraintData.UnityEngine.Animations.Rigging.IChainIKConstraintData.get_chainRotationWeightFloatProperty, X0
	299 Move X21, [X31+56]
	300 Move X2, X0
	301 Move X0, X22
	302 Move X3, X31
	303 Move X1, X21
	304 Call FloatProperty.Bind, X0, X1, X2
	305 Move X8, [X23+32]
	306 Move X24, X0
	307 Move X23, X1
	308 Move X0, X26
	309 Move X8, [X8+192]
	310 Move X8, [X8+64]
	311 Move X1, X8
	312 Call ChainIKConstraintData.UnityEngine.Animations.Rigging.IChainIKConstraintData.get_tipRotationWeightFloatProperty, X0
	313 Move X2, X0
	314 Move X0, X22
	315 Move X1, X21
	316 Move X3, X31
	317 Call FloatProperty.Bind, X0, X1, X2
	318 Move X21, X0
	319 Move X0, [X20]
	320 Move X22, X1
	321 Call 0x1C17F10
	322 Move X1, X31
	323 Move X25, X0
	324 Call AnimationJobCacheBuilder..ctor, X0
	325 Compare X25, 0
	326 JumpIfEqual {401}
	327 Move V0, [X26+32]
	328 Move X0, X25
	329 Move X1, X31
	330 NotImplemented "Instruction SCVTF not yet implemented."
	331 Call AnimationJobCacheBuilder.Add, X0, V0
	332 Move V0, [X26+36]
	333 Move X20, X0
	334 Move X0, X25
	335 Move X1, X31
	336 Call AnimationJobCacheBuilder.Add, X0, V0
	337 Move X26, X0
	338 Move X0, X25
	339 Move X1, X31
	340 Call AnimationJobCacheBuilder.Build, X0
	341 Move X9, [X31+24]
	342 Move X8, [X31+32]
	343 Move V0, [X31+8]
	344 Move V1, [X31+11]
	345 NotImplemented "Instruction LDUR not yet implemented."
	346 Move [X19], X29
	347 Move [X19+8], X8
	348 Move X8, [X31+144]
	349 Move [X19+72], X28
	350 Move [X19+80], X9
	351 Move W9, [X31+168]
	352 Move [X19+40], S8
	353 Move [X19+48], S9
	354 Move [X19+32], X8
	355 Move X8, [X31+40]
	356 Move [X19+48], S10
	357 Move [X19+56], S15
	358 Move [X19+56], S11
	359 Move [X19+64], S12
	360 Move [X19+64], S13
	361 Move [X19+68], W31
	362 Move [X19+104], X24
	363 Move [X19+112], X23
	364 Move [X19+120], X21
	365 Move [X19+128], X22
	366 Move [X19+136], W26
	367 Move [X19+140], W20
	368 Move [X19+144], X0
	369 Move [X19+152], X1
	370 Move [X19+160], S14
	371 Move [X19+1], V0
	372 Move [X19+88], V1
	373 Move [X19+180], W9
	374 Move [X19+164], V2
	375 Move X8, [X8+40]
	376 Move X9, [X31+200]
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Move X20, [X31+352]
	379 Move X19, [X31+360]
	380 Move X22, [X31+336]
	381 Move X21, [X31+344]
	382 Move X24, [X31+320]
	383 Move X23, [X31+328]
	384 Move X26, [X31+304]
	385 Move X25, [X31+312]
	386 Move X28, [X31+288]
	387 Move X27, [X31+296]
	388 Move X29, [X31+272]
	389 Move X30, [X31+280]
	390 Move D9, [X31+256]
	391 Move D8, [X31+264]
	392 Move D11, [X31+240]
	393 Move D10, [X31+248]
	394 Move D13, [X31+224]
	395 Move D12, [X31+232]
	396 Move D15, [X31+208]
	397 Move D14, [X31+216]
	398 Add X31, X31, 368
	399 Return X0
	400 Call 0x1C17F28
	401 Call 0x1C17F20
	402 Call 0x3EB2B20

Method: System.Void Destroy(UnityEngine.Animations.Rigging.ChainIKConstraintJob job)

Disassembly:
	0x028F2E7C LDR X0, [X8 + 0x8]
	0x028F2E80 LDRB W8, [X0 + 0x135]
	0x028F2E84 TBNZ X8, 0x0, 0x28F2E8C
	0x028F2E88 BL 0x1C5C684
	0x028F2E8C LDR X8, [X19 + 0x20]
	0x028F2E90 LDR X9, [X0 + 0xB8]
	0x028F2E94 LDRB W10, [X8 + 0x135]
	0x028F2E98 LDR X21, [X9]
	0x028F2E9C TBNZ X10, 0x0, 0x28F2EAC
	0x028F2EA0 MOV X0, X8
	0x028F2EA4 BL 0x1C5C684
	0x028F2EA8 MOV X8, X0
	0x028F2EAC LDR X8, [X8 + 0xC0]
	0x028F2EB0 LDR X0, [X8 + 0x18]
	0x028F2EB4 LDRB W8, [X0 + 0x135]
	0x028F2EB8 TBNZ X8, 0x0, 0x28F2EC0
	0x028F2EBC BL 0x1C5C684
	0x028F2EC0 BL 0x1C16F10
	0x028F2EC4 LDR X8, [X19 + 0x20]
	0x028F2EC8 MOV X20, X0
	0x028F2ECC ADD X9, X8, 0x135
	0x028F2ED0 LDRH W9, [X9]
	0x028F2ED4 TBNZ X9, 0x0, 0x28F2EF0
	0x028F2ED8 MOV X0, X8
	0x028F2EDC BL 0x1C5C684
	0x028F2EE0 LDR X8, [X19 + 0x20]
	0x028F2EE4 ADD X9, X8, 0x135
	0x028F2EE8 LDRH W9, [X9]
	0x028F2EEC B 0x28F2EF4
	0x028F2EF0 MOV X0, X8
	0x028F2EF4 LDR X10, [X0 + 0xC0]
	0x028F2EF8 LDR X22, [X10 + 0x10]
	0x028F2EFC TBNZ X9, 0x0, 0x28F2F0C
	0x028F2F00 MOV X0, X8
	0x028F2F04 BL 0x1C5C684
	0x028F2F08 MOV X8, X0
	0x028F2F0C LDR X8, [X8 + 0xC0]
	0x028F2F10 MOV X0, X20
	0x028F2F14 MOV X1, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1AE9000
	008 Move X23, 0x182C000
	009 Move X21, 0x182C000
	010 Move X20, 0x182D000
	011 Move W8, [X22+3413]
	012 Move X23, [X23+2384]
	013 Move X21, [X21+344]
	014 Move X20, [X20+504]
	015 Move X19, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x182D000
	021 Move X0, [X0+504]
	022 Call 0x1C17CF4
	023 Move X0, 0x182C000
	024 Move X0, [X0+344]
	025 Call 0x1C17CF4
	026 Move X0, 0x182C000
	027 Move X0, [X0+2384]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+3413], W8
	031 Move X1, [X23]
	032 Move X0, X19
	033 Call NativeArray`1<ReadWriteTransformHandle>.Dispose, X0
	034 Move X1, [X21]
	035 Add X0, X19, 72
	036 Call NativeArray`1<Single>.Dispose, X0
	037 Move X1, [X20]
	038 Add X0, X19, 88
	039 Call NativeArray`1<Vector3>.Dispose, X0
	040 Add X0, X19, 144
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Call AnimationJobCache.Dispose, X0
	049 Return 

Method: System.Void Update(UnityEngine.Animations.Rigging.ChainIKConstraintJob job, ref T data)

Disassembly:
	0x028F2F18 MOV X2, X22
	0x028F2F1C LDR X3, [X8 + 0x20]
	0x028F2F20 BL 0x2D27AA8
	0x028F2F24 LDR X0, [X19 + 0x20]
	0x028F2F28 LDRB W8, [X0 + 0x135]
	0x028F2F2C TBNZ X8, 0x0, 0x28F2F34
	0x028F2F30 BL 0x1C5C684
	0x028F2F34 LDR X8, [X0 + 0xC0]
	0x028F2F38 LDR X0, [X8 + 0x30]
	0x028F2F3C LDRB W8, [X0 + 0x135]
	0x028F2F40 TBNZ X8, 0x0, 0x28F2F48
	0x028F2F44 BL 0x1C5C684
	0x028F2F48 LDR W8, [X0 + 0xE0]
	0x028F2F4C CBNZ W8, 0x28F2F54
	0x028F2F50 BL 0x1C16DFC
	0x028F2F54 LDR X0, [X19 + 0x20]
	0x028F2F58 LDRB W8, [X0 + 0x135]
	0x028F2F5C TBNZ X8, 0x0, 0x28F2F64
	0x028F2F60 BL 0x1C5C684
	0x028F2F64 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move V0, [X2+32]
	006 Move X20, X1
	007 Move W1, [X1+140]
	008 Add X21, X20, 144
	009 Move X19, X2
	010 NotImplemented "Instruction SCVTF not yet implemented."
	011 Move X0, X21
	012 Move W2, W31
	013 Move X3, X31
	014 Call AnimationJobCache.SetRaw, X0, V0, X1, X2
	015 Move V0, [X19+36]
	016 Move W1, [X20+136]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X0, X21
	020 Move W2, W31
	021 Move X3, X31
	022 Move X30, [X31+32]
	023 Move X21, [X31+40]
	024 Call AnimationJobCache.SetRaw, X0, V0, X1, X2
	025 Return 

Method: System.Void .ctor()

Disassembly:
	0x028F2F68 MOV X0, X20
	0x028F2F6C LDP X20, X19, [X31 + 0x20]
	0x028F2F70 LDP X22, X21, [X31 + 0x10]
	0x028F2F74 LDR X1, [X8 + 0x28]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+88]
	004 Call AnimationJobBinder`2<ChainIKConstraintJob, ChainIKConstraintData>..ctor, X0
	005 Return 

