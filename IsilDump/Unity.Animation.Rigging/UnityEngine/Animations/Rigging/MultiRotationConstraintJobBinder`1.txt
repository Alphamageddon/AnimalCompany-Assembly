Type: UnityEngine.Animations.Rigging.MultiRotationConstraintJobBinder`1

Method: UnityEngine.Animations.Rigging.MultiRotationConstraintJob Create(UnityEngine.Animator animator, ref T data, UnityEngine.Component component)

Disassembly:
	0x031A68BC LDRB W8, [X0 + 0x135]
	0x031A68C0 TBNZ X8, 0x0, 0x31A68C8
	0x031A68C4 BL 0x1C5C684
	0x031A68C8 LDR X8, [X0 + 0xC0]
	0x031A68CC LDR X0, [X8 + 0x40]
	0x031A68D0 MOVZ W8, 0x1C
	0x031A68D4 SMADDL X22, X21, X8, X31
	0x031A68D8 BL 0x22A65C0
	0x031A68DC MOV W1, W0
	0x031A68E0 MOV X0, X22
	0x031A68E4 MOV W2, W20
	0x031A68E8 MOV W3, W31
	0x031A68EC MOV X4, X31
	0x031A68F0 BL 0x3BFFFA4
	0x031A68F4 STR X0, [X19]
	0x031A68F8 STP W21, W20, [X19 + 0x8]
	0x031A68FC LDP X20, X19, [X31 + 0x20]
	0x031A6900 LDP X22, X21, [X31 + 0x10]
	0x031A6904 LDR X30, [X31], #0x30
	0x031A6908 RET
	0x031A690C LDR W0, [X0 + 0x8]
	0x031A6910 RET
	0x031A6914 SUB X31, X31, 0x60
	0x031A6918 STP X30, X21, [X31 + 0x40]
	0x031A691C STP X20, X19, [X31 + 0x50]
	0x031A6920 STP X31, X31, [X31 + 0x20]
	0x031A6924 STR W31, [X31 + 0x38]
	0x031A6928 STR X31, [X31 + 0x30]
	0x031A692C MOV X9, X0
	0x031A6930 LDR X0, [X2 + 0x20]
	0x031A6934 LDR X21, [X9]
	0x031A6938 MOV W20, W1
	0x031A693C MOV X19, X8
	0x031A6940 LDRB W10, [X0 + 0x135]
	0x031A6944 TBNZ X10, 0x0, 0x31A694C
	0x031A6948 BL 0x1C5C684
	0x031A694C MOVZ W8, 0x1C
	0x031A6950 SMADDL X8, X20, X8, X21
	0x031A6954 LDR W9, [X8 + 0x18]
	0x031A6958 LDR X10, [X8 + 0x10]
	0x031A695C LDR V0, [X8]
	0x031A6960 LDP X30, X21, [X31 + 0x40]
	0x031A6964 STR W9, [X31 + 0x18]
	0x031A6968 STR X10, [X31 + 0x10]
	0x031A696C STR V0, [X31]
	0x031A6970 LDUR V1, [X31 + 0xC]
	0x031A6974 STR V0, [X31 + 0x2]
	0x031A6978 STUR V1, [X31 + 0x2C]
	0x031A697C LDUR V0, [X31 + 0x2C]
	0x031A6980 LDR V1, [X31 + 0x2]
	0x031A6984 STUR V0, [X19 + 0xC]
	0x031A6988 STR V1, [X19]
	0x031A698C LDP X20, X19, [X31 + 0x50]
	0x031A6990 ADD X31, X31, 0x60
	0x031A6994 RET
	0x031A6998 SUB X31, X31, 0x60
	0x031A699C STR X30, [X31 + 0x40]
	0x031A69A0 STP X20, X19, [X31 + 0x50]
	0x031A69A4 LDUR V0, [X2 + 0xC]
	0x031A69A8 LDR V1, [X2]
	0x031A69AC LDR X20, [X0]
	0x031A69B0 MOV W19, W1
	0x031A69B4 STUR V0, [X31 + 0xC]
	0x031A69B8 STR V1, [X31]
	0x031A69BC LDR X0, [X3 + 0x20]
	0x031A69C0 LDRB W8, [X0 + 0x135]
	0x031A69C4 TBNZ X8, 0x0, 0x31A69CC
	0x031A69C8 BL 0x1C5C684
	0x031A69CC LDR V0, [X31]
	0x031A69D0 LDUR V1, [X31 + 0xC]
	0x031A69D4 MOVZ W8, 0x1C
	0x031A69D8 SMADDL X8, X19, X8, X20
	0x031A69DC STR V0, [X31 + 0x2]
	0x031A69E0 STUR V1, [X31 + 0x2C]
	0x031A69E4 LDR W9, [X31 + 0x38]
	0x031A69E8 LDR X10, [X31 + 0x30]
	0x031A69EC LDR V0, [X31 + 0x2]
	0x031A69F0 LDP X20, X19, [X31 + 0x50]
	0x031A69F4 LDR X30, [X31 + 0x40]
	0x031A69F8 STR W9, [X8 + 0x18]
	0x031A69FC STR X10, [X8 + 0x10]
	0x031A6A00 STR V0, [X8]
	0x031A6A04 ADD X31, X31, 0x60
	0x031A6A08 RET
	0x031A6A0C LDR X8, [X0]
	0x031A6A10 CMP X8, 0x0
	0x031A6A14 CSET W0, NE
	0x031A6A18 RET
	0x031A6A1C STR X30, [X31 - 0x20]!
	0x031A6A20 STP X20, X19, [X31 + 0x10]
	0x031A6A24 LDR X8, [X1 + 0x20]
	0x031A6A28 MOV X19, X1
	0x031A6A2C MOV X20, X0
	0x031A6A30 LDRB W9, [X8 + 0x135]
	0x031A6A34 TBNZ X9, 0x0, 0x31A6A40
	0x031A6A38 MOV X0, X8
	0x031A6A3C BL 0x1C5C684
	0x031A6A40 LDR X0, [X20]
	0x031A6A44 CBZ X0, 0x31A6A68
	0x031A6A48 LDR W1, [X20 + 0xC]
	0x031A6A4C CBZ W1, 0x31A6A74
	0x031A6A50 CMP W1, 0x2
	0x031A6A54 B.LT 0x31A6A64
	0x031A6A58 MOV X2, X31
	0x031A6A5C BL 0x3BFFB84
	0x031A6A60 STR W31, [X20 + 0xC]
	0x031A6A64 STR X31, [X20]
	0x031A6A68 LDP X20, X19, [X31 + 0x10]
	0x031A6A6C LDR X30, [X31], #0x20
	0x031A6A70 RET
	0x031A6A74 ADRP X0, 0xF4D000
	0x031A6A78 LDR X0, [X0 + 0x5B0]
	0x031A6A7C BL 0x1C16D08
	0x031A6A80 BL 0x1C16F10
	0x031A6A84 MOV X20, X0
	0x031A6A88 ADRP X0, 0xF76000
	0x031A6A8C LDR X0, [X0 + 0xBC8]
	0x031A6A90 BL 0x1C16D08
	0x031A6A94 MOV X1, X0
	0x031A6A98 MOV X0, X20
	0x031A6A9C MOV X2, X31
	0x031A6AA0 BL 0x337DF1C
	0x031A6AA4 MOV X0, X20
	0x031A6AA8 MOV X1, X19
	0x031A6AAC BL 0x1C16DEC
	0x031A6AB0 STP X30, X23, [X31 - 0x30]!
	0x031A6AB4 STP X22, X21, [X31 + 0x10]
	0x031A6AB8 STP X20, X19, [X31 + 0x20]
	0x031A6ABC ADRP X23, 0x1235000
	0x031A6AC0 LDRB W8, [X23 + 0xE2B]
	0x031A6AC4 MOV X19, X3
	0x031A6AC8 MOV X21, X2
	0x031A6ACC MOV X22, X1
	0x031A6AD0 MOV X20, X0
	0x031A6AD4 TBNZ X8, 0x0, 0x31A6AEC
	0x031A6AD8 ADRP X0, 0xF76000
	0x031A6ADC LDR X0, [X0 + 0xBD0]
	0x031A6AE0 BL 0x1C16CF4
	0x031A6AE4 MOVZ W8, 0x1
	0x031A6AE8 STRB W8, [X23 + 0xE2B]
	0x031A6AEC LDR X0, [X19 + 0x20]
	0x031A6AF0 LDRB W8, [X0 + 0x135]
	0x031A6AF4 TBNZ X8, 0x0, 0x31A6AFC
	0x031A6AF8 BL 0x1C5C684
	0x031A6AFC LDR X0, [X20]
	0x031A6B00 CBZ X0, 0x31A6B40
	0x031A6B04 LDR W1, [X20 + 0xC]
	0x031A6B08 CMP W1, 0x40
	0x031A6B0C B.GE 0x31A6B58
	0x031A6B10 CMP W1, 0x2
	0x031A6B14 B.LT 0x31A6B3C
	0x031A6B18 ADRP X8, 0xF76000
	0x031A6B1C LDR X8, [X8 + 0xBD0]
	0x031A6B20 MOV X2, X22
	0x031A6B24 MOV X3, X21
	0x031A6B28 LDR X4, [X8]
	0x031A6B2C BL 0x21EE34C
	0x031A6B30 STR X31, [X20]
	0x031A6B34 STR W31, [X20 + 0xC]
	0x031A6B38 B 0x31A6B48
	0x031A6B3C STR X31, [X20]
	0x031A6B40 MOV X0, X22
	0x031A6B44 MOV X1, X21
	0x031A6B48 LDP X20, X19, [X31 + 0x20]
	0x031A6B4C LDP X22, X21, [X31 + 0x10]
	0x031A6B50 LDP X30, X23, [X31], #0x30
	0x031A6B54 RET
	0x031A6B58 ADRP X0, 0xF4D000
	0x031A6B5C LDR X0, [X0 + 0x5B0]
	0x031A6B60 BL 0x1C16D08
	0x031A6B64 BL 0x1C16F10
	0x031A6B68 MOV X20, X0
	0x031A6B6C ADRP X0, 0xF76000
	0x031A6B70 LDR X0, [X0 + 0xBD8]
	0x031A6B74 BL 0x1C16D08
	0x031A6B78 MOV X1, X0
	0x031A6B7C MOV X0, X20
	0x031A6B80 MOV X2, X31
	0x031A6B84 BL 0x337DF1C
	0x031A6B88 MOV X0, X20
	0x031A6B8C MOV X1, X19
	0x031A6B90 BL 0x1C16DEC
	0x031A6B94 STP X30, X21, [X31 - 0x20]!
	0x031A6B98 STP X20, X19, [X31 + 0x10]
	0x031A6B9C MOV X8, X0
	0x031A6BA0 LDR X0, [X2 + 0x20]
	0x031A6BA4 LDP X20, X19, [X8]
	0x031A6BA8 MOV X21, X1
	0x031A6BAC LDRB W9, [X0 + 0x135]
	0x031A6BB0 TBNZ X9, 0x0, 0x31A6BB8
	0x031A6BB4 BL 0x1C5C684
	0x031A6BB8 LDR X8, [X0 + 0xC0]
	0x031A6BBC MOV X1, X20
	0x031A6BC0 MOV X2, X19
	0x031A6BC4 LDP X20, X19, [X31 + 0x10]
	0x031A6BC8 LDR X3, [X8 + 0x38]
	0x031A6BCC MOV X0, X21
	0x031A6BD0 LDP X30, X21, [X31], #0x20
	0x031A6BD4 B 0x31A7044
	0x031A6BD8 STR X30, [X31 - 0x30]!
	0x031A6BDC STP X22, X21, [X31 + 0x10]
	0x031A6BE0 STP X20, X19, [X31 + 0x20]
	0x031A6BE4 MOV X8, X0
	0x031A6BE8 LDR X0, [X3 + 0x20]
	0x031A6BEC LDP X21, X20, [X8]
	0x031A6BF0 MOV X19, X2
	0x031A6BF4 MOV X22, X1
	0x031A6BF8 LDRB W9, [X0 + 0x135]
	0x031A6BFC TBNZ X9, 0x0, 0x31A6C04
	0x031A6C00 BL 0x1C5C684
	0x031A6C04 LDR X8, [X0 + 0xC0]
	0x031A6C08 MOV X0, X22
	0x031A6C0C MOV X1, X19
	0x031A6C10 MOV X2, X21
	0x031A6C14 LDR X4, [X8 + 0x68]
	0x031A6C18 MOV X3, X20
	0x031A6C1C LDP X20, X19, [X31 + 0x20]
	0x031A6C20 LDP X22, X21, [X31 + 0x10]
	0x031A6C24 LDR X30, [X31], #0x30
	0x031A6C28 B 0x31A6FDC
	0x031A6C2C STP X30, X21, [X31 - 0x20]!
	0x031A6C30 STP X20, X19, [X31 + 0x10]
	0x031A6C34 MOV X8, X0
	0x031A6C38 LDR X0, [X2 + 0x20]
	0x031A6C3C LDP X21, X20, [X8]
	0x031A6C40 MOV X19, X1
	0x031A6C44 LDRB W9, [X0 + 0x135]
	0x031A6C48 TBNZ X9, 0x0, 0x31A6C50
	0x031A6C4C BL 0x1C5C684
	0x031A6C50 LDR X8, [X0 + 0xC0]
	0x031A6C54 MOV X1, X20
	0x031A6C58 MOV X2, X19
	0x031A6C5C LDP X20, X19, [X31 + 0x10]
	0x031A6C60 LDR X3, [X8 + 0x70]
	0x031A6C64 MOV X0, X21
	0x031A6C68 LDP X30, X21, [X31], #0x20
	0x031A6C6C B 0x31A70A8
	0x031A6C70 STP X30, X21, [X31 - 0x20]!
	0x031A6C74 STP X20, X19, [X31 + 0x10]
	0x031A6C78 MOV X19, X0
	0x031A6C7C LDR X0, [X1 + 0x20]
	0x031A6C80 LDR W21, [X19 + 0x8]
	0x031A6C84 MOV X20, X1
	0x031A6C88 LDRB W8, [X0 + 0x135]
	0x031A6C8C TBNZ X8, 0x0, 0x31A6C94
	0x031A6C90 BL 0x1C5C684
	0x031A6C94 LDR X8, [X0 + 0xC0]
	0x031A6C98 LDR X0, [X8 + 0x78]
	0x031A6C9C LDRB W8, [X0 + 0x135]
	0x031A6CA0 TBNZ X8, 0x0, 0x31A6CA8
	0x031A6CA4 BL 0x1C5C684
	0x031A6CA8 MOV W1, W21
	0x031A6CAC BL 0x1C16D6C
	0x031A6CB0 LDR X8, [X20 + 0x20]
	0x031A6CB4 LDP X21, X20, [X19]
	0x031A6CB8 MOV X19, X0
	0x031A6CBC LDRB W9, [X8 + 0x135]
	0x031A6CC0 TBNZ X9, 0x0, 0x31A6CD0
	0x031A6CC4 MOV X0, X8
	0x031A6CC8 BL 0x1C5C684
	0x031A6CCC MOV X8, X0
	0x031A6CD0 LDR X8, [X8 + 0xC0]
	0x031A6CD4 MOV X0, X21
	0x031A6CD8 MOV X1, X20
	0x031A6CDC MOV X2, X19
	0x031A6CE0 LDR X4, [X8 + 0x80]
	0x031A6CE4 MOV W3, W20
	0x031A6CE8 BL 0x31A71D0
	0x031A6CEC MOV X0, X19
	0x031A6CF0 LDP X20, X19, [X31 + 0x10]
	0x031A6CF4 LDP X30, X21, [X31], #0x20
	0x031A6CF8 RET
	0x031A6CFC SUB X31, X31, 0x80
	0x031A6D00 STR X30, [X31 + 0x60]
	0x031A6D04 STP X20, X19, [X31 + 0x70]
	0x031A6D08 MOVI V0.2D, 0x0

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X29
	006 Move [X31+40], X30
	007 Move [X31+48], X28
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Subtract X31, X31, 768
	018 Move X24, 0x1236000
	019 Move W9, [X24+3623]
	020 Move X21, X4
	021 Move X22, X3
	022 Move X20, X2
	023 Move X23, X1
	024 Move X19, X8
	025 Move TEMP, X9
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {43}
	029 Move X0, 0xF57000
	030 Move X0, [X0+2536]
	031 Call 0x1C17CF4
	032 Move X0, 0xF78000
	033 Move X0, [X0+296]
	034 Call 0x1C17CF4
	035 Move X0, 0xF78000
	036 Move X0, [X0+2368]
	037 Call 0x1C17CF4
	038 Move X0, 0xF78000
	039 Move X0, [X0+2400]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X24+3623], W8
	043 Add X0, X31, 448
	044 Move W2, 136
	045 Move W1, W31
	046 Call 0x3EB2B10
	047 Add X0, X31, 584
	048 Move W2, 184
	049 Move W1, W31
	050 Add X25, X31, 584
	051 Call 0x3EB2B10
	052 Move X1, [X20]
	053 Move X0, X23
	054 Move X2, X31
	055 Call ReadWriteTransformHandle.Bind, X0, X1
	056 Move [X31+584], X0
	057 Move [X31+592], W1
	058 Move X0, [X20]
	059 Compare X0, 0
	060 JumpIfEqual {308}
	061 Move X26, 0xF78000
	062 Move X29, 0xF78000
	063 Move X28, 0xF78000
	064 Move X26, [X26+2400]
	065 Move X29, [X29+2368]
	066 Move X28, [X28+296]
	067 Move X1, X31
	068 Add X27, X31, 584
	069 Add X24, X31, 176
	070 Call Transform.get_parent, X0
	071 Move X1, X0
	072 Add X8, X31, 176
	073 Move X0, X23
	074 Move X2, X31
	075 Call ReadOnlyTransformHandle.Bind, X0, X1
	076 Move V0, [X24]
	077 Move X8, [X31+192]
	078 Move X0, X20
	079 Move [X27+12], V0
	080 Move [X27+28], X8
	081 Move X8, [X21+32]
	082 Move X8, [X8+192]
	083 Move X1, [X8+24]
	084 Call MultiRotationConstraintData.UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_offsetVector3Property, X0
	085 Move X2, X0
	086 Add X8, X31, 176
	087 Move X0, X23
	088 Move X1, X22
	089 Move X3, X31
	090 Call Vector3Property.Bind, X0, X1, X2
	091 Move V0, [X24]
	092 Move V1, [X24+16]
	093 Move V2, [X24+2]
	094 Add X24, X20, 8
	095 Add X0, X31, 448
	096 Move W2, 136
	097 Move X1, X24
	098 Move [X27+36], V0
	099 Move [X27+52], V1
	100 Move [X27+68], V2
	101 Call 0x3EB2AC0
	102 Add X0, X31, 312
	103 Move W2, 136
	104 Move X1, X24
	105 Call 0x3EB2AC0
	106 Add X3, X25, 88
	107 Add X2, X31, 312
	108 Move X0, X23
	109 Move X1, X22
	110 Move X4, X31
	111 Call WeightedTransformArrayBinder.BindReadOnlyTransforms, X0, X1, X2, X3
	112 Add X0, X31, 176
	113 Add X1, X31, 448
	114 Move W2, 136
	115 Call 0x3EB2AC0
	116 Move X8, [X21+32]
	117 Move X0, X20
	118 Move X8, [X8+192]
	119 Move X1, [X8+40]
	120 Call MultiRotationConstraintData.UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_sourceObjectsProperty, X0
	121 Move X24, X0
	122 Add X0, X31, 40
	123 Add X1, X31, 176
	124 Move W2, 136
	125 Add X25, X25, 104
	126 Call 0x3EB2AC0
	127 Add X2, X31, 40
	128 Move X0, X23
	129 Move X1, X22
	130 Move X3, X24
	131 Move X4, X25
	132 Move X5, X31
	133 Call WeightedTransformArrayBinder.BindWeights, X0, X1, X2, X3, X4
	134 Move X0, [X26]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move W22, [X31+448]
	140 Move X4, [X29]
	141 Add X0, X31, 24
	142 Move W2, 4
	143 Move W1, W22
	144 Move W3, W31
	145 Move [X31+24], X31
	146 Move [X31+32], X31
	147 Call NativeArray`1<Quaternion>..ctor, X0, X1, X2, X3
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 Move X4, [X28]
	150 Add X0, X31, 8
	151 Move W2, 4
	152 Move W1, W22
	153 Move W3, W31
	154 Move [X27+120], V0
	155 Move [X31+8], X31
	156 Move [X31+16], X31
	157 Call NativeArray`1<Single>..ctor, X0, X1, X2, X3
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 Move [X27+136], V0
	160 Move X0, [X20]
	161 Compare X0, 0
	162 JumpIfEqual {308}
	163 Move X24, 0xF57000
	164 Move X24, [X24+2536]
	165 Move X1, X31
	166 Call Transform.get_rotation, X0
	167 Move X23, 0xF4F000
	168 Move X23, [X23+1448]
	169 Move V8, V0
	170 Move V9, V1
	171 Move V10, V2
	172 Move V11, V3
	173 Move X25, X31
	174 Move X22, X31
	175 Move X27, 0x1233000
	176 Move W28, 1
	177 Move X0, [X26]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move W8, [X20+159]
	185 Compare W8, 0
	186 JumpIfEqual {230}
	187 Move X0, [X26]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {192}
	191 Call 0x1C17DFC
	192 Add X0, X31, 448
	193 Move W1, W22
	194 Move X2, X31
	195 Call WeightedTransformArray.get_Item, X0, X1
	196 Compare X0, 0
	197 JumpIfEqual {308}
	198 Move X1, X31
	199 Call Transform.get_rotation, X0
	200 Move X0, X31
	201 Call Quaternion.Inverse, X0
	202 Multiply S4, S8, S3
	203 Multiply S5, S11, S0
	204 Multiply S6, S9, S3
	205 Multiply S7, S11, S1
	206 Add S4, S4, S5
	207 Multiply S5, S10, S3
	208 Add S6, S6, S7
	209 Multiply S7, S11, S2
	210 Multiply S3, S11, S3
	211 Add S5, S5, S7
	212 Multiply S7, S8, S0
	213 Subtract S3, S3, S7
	214 Multiply S7, S10, S1
	215 Add S4, S7, S4
	216 Multiply S7, S8, S2
	217 Add S6, S7, S6
	218 Multiply S7, S9, S0
	219 Add S5, S7, S5
	220 Multiply S7, S9, S1
	221 Subtract S3, S3, S7
	222 Multiply S7, S9, S2
	223 Multiply S16, S10, S0
	224 Multiply S17, S8, S1
	225 Multiply S18, S10, S2
	226 Subtract S0, S4, S7
	227 Subtract S1, S6, S16
	228 Subtract S2, S5, S17
	229 Subtract S3, S3, S18
	230 Move W8, [X27+1939]
	231 Compare W8, 0
	232 JumpIfNotEqual {236}
	233 Move X0, X23
	234 Call 0x1C17CF4
	235 Move [X27+1939], W28
	236 Move X8, [X23]
	237 Move X8, [X8+184]
	238 Move S0, [X8]
	239 Move S1, [X8+4]
	240 Move S2, [X8+8]
	241 Move S3, [X8+12]
	242 Move X8, [X31+704]
	243 Add X22, X22, 1
	244 Add X8, X8, X25
	245 Add X25, X25, 16
	246 Move [X8], S0
	247 Move [X8+8], S1
	248 Move [X8+8], S2
	249 Move [X8+16], S3
	250 Move X8, [X21+32]
	251 Move X0, X20
	252 Move X8, [X8+192]
	253 Move X1, [X8+56]
	254 Call MultiRotationConstraintData.get_constrainedXAxis, X0
	255 Move X8, [X24]
	256 Move W22, W0
	257 Move W9, [X8+224]
	258 Compare W9, 0
	259 JumpIfNotEqual {262}
	260 Move X0, X8
	261 Call 0x1C17DFC
	262 And W0, W22, 1
	263 Move X1, X31
	264 Call Convert.ToSingle, X0
	265 Move X8, [X21+32]
	266 Move X0, X20
	267 Move V8, V0
	268 Move X8, [X8+192]
	269 Move X1, [X8+64]
	270 Call MultiRotationConstraintData.get_constrainedYAxis, X0
	271 And W0, W0, 1
	272 Move X1, X31
	273 Call Convert.ToSingle, X0
	274 Move X8, [X21+32]
	275 Move X0, X20
	276 Move V9, V0
	277 Move X8, [X8+192]
	278 Move X1, [X8+72]
	279 Call MultiRotationConstraintData.get_constrainedZAxis, X0
	280 And W0, W0, 1
	281 Move X1, X31
	282 Call Convert.ToSingle, X0
	283 Add X1, X31, 584
	284 Move W2, 184
	285 Move X0, X19
	286 Move [X31+736], S8
	287 Move [X31+740], S9
	288 Move [X31+744], S0
	289 Call 0x3EB2AC0
	290 Add X31, X31, 768
	291 Move X20, [X31+112]
	292 Move X19, [X31+120]
	293 Move X22, [X31+96]
	294 Move X21, [X31+104]
	295 Move X24, [X31+80]
	296 Move X23, [X31+88]
	297 Move X26, [X31+64]
	298 Move X25, [X31+72]
	299 Move X28, [X31+48]
	300 Move X27, [X31+56]
	301 Move X29, [X31+32]
	302 Move X30, [X31+40]
	303 Move D9, [X31+16]
	304 Move D8, [X31+24]
	305 Move D11, [X31+128]
	306 Move D10, [X31+136]
	307 Return X0
	308 Call 0x1C17F20

Method: System.Void Destroy(UnityEngine.Animations.Rigging.MultiRotationConstraintJob job)

Disassembly:
	0x031A6D0C STP V0, V0, [X31 + 0x10]
	0x031A6D10 STR V0, [X31]
	0x031A6D14 MOV X20, X0
	0x031A6D18 LDR X0, [X1 + 0x20]
	0x031A6D1C MOV X19, X8
	0x031A6D20 LDRB W9, [X0 + 0x135]
	0x031A6D24 TBNZ X9, 0x0, 0x31A6D2C
	0x031A6D28 BL 0x1C5C684
	0x031A6D2C LDR X8, [X0 + 0xC0]
	0x031A6D30 ADD X0, X31, 0x0
	0x031A6D34 MOV X1, X20
	0x031A6D38 LDR X2, [X8 + 0x90]
	0x031A6D3C BL 0x2BB4848
	0x031A6D40 LDP V1, V0, [X31 + 0x10]
	0x031A6D44 LDR V2, [X31]
	0x031A6D48 LDR X30, [X31 + 0x60]
	0x031A6D4C STP V1, V0, [X19 + 0x10]
	0x031A6D50 STR V2, [X19]
	0x031A6D54 LDP X20, X19, [X31 + 0x70]
	0x031A6D58 STP V1, V0, [X31 + 0x40]
	0x031A6D5C STR V2, [X31 + 0x3]
	0x031A6D60 ADD X31, X31, 0x80
	0x031A6D64 RET
	0x031A6D68 SUB X31, X31, 0x80
	0x031A6D6C STR X30, [X31 + 0x60]
	0x031A6D70 STP X20, X19, [X31 + 0x70]
	0x031A6D74 MOVI V0.2D, 0x0
	0x031A6D78 STP V0, V0, [X31 + 0x40]
	0x031A6D7C STR V0, [X31 + 0x3]
	0x031A6D80 LDR X8, [X1 + 0x20]
	0x031A6D84 MOV X19, X1
	0x031A6D88 MOV X20, X0
	0x031A6D8C LDRB W9, [X8 + 0x135]
	0x031A6D90 TBNZ X9, 0x0, 0x31A6DA0
	0x031A6D94 MOV X0, X8
	0x031A6D98 BL 0x1C5C684
	0x031A6D9C MOV X8, X0
	0x031A6DA0 LDR X8, [X8 + 0xC0]
	0x031A6DA4 ADD X0, X31, 0x30
	0x031A6DA8 MOV X1, X20
	0x031A6DAC LDR X2, [X8 + 0x90]
	0x031A6DB0 BL 0x2BB4848
	0x031A6DB4 LDP V1, V0, [X31 + 0x40]
	0x031A6DB8 LDR V2, [X31 + 0x3]
	0x031A6DBC STP V1, V0, [X31 + 0x10]
	0x031A6DC0 STR V2, [X31]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1236000
	009 Move X23, 0xF7A000
	010 Move X22, 0xF78000
	011 Move X21, 0xF78000
	012 Move X20, 0xF78000
	013 Move W8, [X24+3624]
	014 Move X23, [X23+568]
	015 Move X22, [X22+336]
	016 Move X21, [X21+2392]
	017 Move X20, [X20+344]
	018 Move X19, X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xF78000
	024 Move X0, [X0+336]
	025 Call 0x1C17CF4
	026 Move X0, 0xF78000
	027 Move X0, [X0+2392]
	028 Call 0x1C17CF4
	029 Move X0, 0xF7A000
	030 Move X0, [X0+568]
	031 Call 0x1C17CF4
	032 Move X0, 0xF78000
	033 Move X0, [X0+344]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+3624], W8
	037 Move X1, [X23]
	038 Add X0, X19, 88
	039 Call NativeArray`1<ReadOnlyTransformHandle>.Dispose, X0
	040 Move X1, [X22]
	041 Add X0, X19, 104
	042 Call NativeArray`1<PropertyStreamHandle>.Dispose, X0
	043 Move X1, [X21]
	044 Add X0, X19, 120
	045 Call NativeArray`1<Quaternion>.Dispose, X0
	046 Move X1, [X20]
	047 Add X0, X19, 136
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move X30, [X31+64]
	055 Call NativeArray`1<Single>.Dispose, X0
	056 Return 

Method: System.Void .ctor()

Disassembly:
	0x031A6DC4 LDR X0, [X19 + 0x20]
	0x031A6DC8 LDRB W8, [X0 + 0x135]
	0x031A6DCC TBNZ X8, 0x0, 0x31A6DD4
	0x031A6DD0 BL 0x1C5C684

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+80]
	004 Call AnimationJobBinder`2<MultiRotationConstraintJob, MultiRotationConstraintData>..ctor, X0
	005 Return 

