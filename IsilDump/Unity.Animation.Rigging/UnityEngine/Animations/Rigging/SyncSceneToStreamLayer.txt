Type: UnityEngine.Animations.Rigging.SyncSceneToStreamLayer

Method: System.Boolean Initialize(UnityEngine.Animator animator, System.Collections.Generic.IList`1<UnityEngine.Animations.Rigging.IRigLayer> layers)

Disassembly:
	0x036F489C LDR W9, [X8 + 0xE0]
	0x036F48A0 CBNZ W9, 0x36F48AC
	0x036F48A4 MOV X0, X8
	0x036F48A8 BL 0x1C16DFC
	0x036F48AC MOV X0, X24
	0x036F48B0 MOV X1, X31
	0x036F48B4 BL 0x338C698
	0x036F48B8 MOV X1, X0
	0x036F48BC MOV X0, X23
	0x036F48C0 MOV X2, X31
	0x036F48C4 BL 0x3395194
	0x036F48C8 TBZ X0, 0x0, 0x36F49BC
	0x036F48CC LDR X8, [X22]
	0x036F48D0 MOV X0, X22
	0x036F48D4 MOV X1, X21
	0x036F48D8 LDR X9, [X8 + 0x2C8]
	0x036F48DC LDR X2, [X8 + 0x2D0]
	0x036F48E0 BLR X9
	0x036F48E4 MOV X21, X0
	0x036F48E8 CBZ X0, 0x36F4920
	0x036F48EC ADRP X9, 0xA01000
	0x036F48F0 LDR X9, [X9 + 0x638]
	0x036F48F4 LDR X8, [X21]
	0x036F48F8 LDR X1, [X9]
	0x036F48FC LDRB W10, [X8 + 0x130]
	0x036F4900 LDRB W9, [X1 + 0x130]
	0x036F4904 CMP W10, W9
	0x036F4908 B.CC 0x36F4D2C
	0x036F490C LDR X8, [X8 + 0xC8]
	0x036F4910 ADD X8, X8, X9, 0x3, LSL
	0x036F4914 LDUR X8, [X8 - 0x8]
	0x036F4918 CMP X8, X1
	0x036F491C B.NE 0x36F4D2C
	0x036F4920 ADRP X8, 0x9FF000
	0x036F4924 LDR X8, [X8 + 0x598]
	0x036F4928 LDR X0, [X8]
	0x036F492C LDR W8, [X0 + 0xE0]
	0x036F4930 CBNZ W8, 0x36F4938
	0x036F4934 BL 0x1C16DFC
	0x036F4938 MOV X0, X21
	0x036F493C MOV X1, X31
	0x036F4940 MOV X2, X31
	0x036F4944 BL 0x3C354F8
	0x036F4948 TBZ X0, 0x0, 0x36F4CF8
	0x036F494C CBZ X20, 0x36F4D28
	0x036F4950 MOV X0, X20
	0x036F4954 MOV X1, X31
	0x036F4958 BL 0x3C32E90
	0x036F495C CBZ X21, 0x36F4D28
	0x036F4960 MOV X1, X0
	0x036F4964 MOV X0, X21
	0x036F4968 MOV X2, X31
	0x036F496C BL 0x3C40F48
	0x036F4970 TBZ X0, 0x0, 0x36F4CF8
	0x036F4974 CBZ X19, 0x36F4D28
	0x036F4978 ADRP X9, 0xA06000
	0x036F497C LDR X9, [X9 + 0x958]
	0x036F4980 LDR W10, [X19 + 0x1C]
	0x036F4984 LDR X8, [X19 + 0x10]
	0x036F4988 LDR X9, [X9]
	0x036F498C ADD W10, W10, 0x1
	0x036F4990 STR W10, [X19 + 0x1C]
	0x036F4994 CBZ X8, 0x36F4D28
	0x036F4998 LDRSW X10, [X19 + 0x18]
	0x036F499C LDR W11, [X8 + 0x18]
	0x036F49A0 CMP W10, W11
	0x036F49A4 B.CS 0x36F4CE0
	0x036F49A8 ADD W9, W10, 0x1
	0x036F49AC ADD X8, X8, X10, 0x3, LSL
	0x036F49B0 STR W9, [X19 + 0x18]
	0x036F49B4 STR X21, [X8 + 0x20]
	0x036F49B8 B 0x36F4CF8
	0x036F49BC ADRP X8, 0xA4C000
	0x036F49C0 LDR X0, [X25]
	0x036F49C4 LDR X8, [X8 + 0xAB8]
	0x036F49C8 LDR W9, [X0 + 0xE0]
	0x036F49CC LDR X24, [X8]
	0x036F49D0 CBNZ W9, 0x36F49D8
	0x036F49D4 BL 0x1C16DFC
	0x036F49D8 MOV X0, X24
	0x036F49DC MOV X1, X31
	0x036F49E0 BL 0x338C698
	0x036F49E4 MOV X1, X0
	0x036F49E8 MOV X0, X23
	0x036F49EC MOV X2, X31
	0x036F49F0 BL 0x3395194
	0x036F49F4 TBNZ X0, 0x0, 0x36F4A34
	0x036F49F8 ADRP X8, 0xA4C000
	0x036F49FC LDR X0, [X25]
	0x036F4A00 LDR X8, [X8 + 0xAB0]
	0x036F4A04 LDR W9, [X0 + 0xE0]
	0x036F4A08 LDR X24, [X8]
	0x036F4A0C CBNZ W9, 0x36F4A14
	0x036F4A10 BL 0x1C16DFC
	0x036F4A14 MOV X0, X24
	0x036F4A18 MOV X1, X31
	0x036F4A1C BL 0x338C698
	0x036F4A20 MOV X1, X0
	0x036F4A24 MOV X0, X23
	0x036F4A28 MOV X2, X31
	0x036F4A2C BL 0x3395194
	0x036F4A30 TBZ X0, 0x0, 0x36F4CD8
	0x036F4A34 LDR X8, [X22]
	0x036F4A38 MOV X0, X22
	0x036F4A3C MOV X1, X21
	0x036F4A40 LDR X9, [X8 + 0x2C8]
	0x036F4A44 LDR X2, [X8 + 0x2D0]
	0x036F4A48 BLR X9
	0x036F4A4C CBZ X0, 0x36F4D28
	0x036F4A50 ADRP X22, 0xA27000
	0x036F4A54 LDR X22, [X22 + 0xFA8]
	0x036F4A58 MOV X23, X0
	0x036F4A5C LDR X21, [X22]
	0x036F4A60 MOV X1, X21
	0x036F4A64 BL 0x1C16E00
	0x036F4A68 CBZ X0, 0x36F4D34
	0x036F4A6C LDR X22, [X22]
	0x036F4A70 MOV X0, X23
	0x036F4A74 MOV X1, X22
	0x036F4A78 BL 0x1C16E00
	0x036F4A7C CBZ X0, 0x36F4D40
	0x036F4A80 LDR X8, [X0]
	0x036F4A84 MOV X21, X0
	0x036F4A88 LDRH W9, [X8 + 0x12E]
	0x036F4A8C CBZ X9, 0x36F4AB0
	0x036F4A90 LDR X10, [X8 + 0xB0]
	0x036F4A94 ADD X10, X10, 0x8
	0x036F4A98 LDUR X11, [X10 - 0x8]
	0x036F4A9C CMP X11, X22
	0x036F4AA0 B.EQ 0x36F4AC4
	0x036F4AA4 SUBS X9, X9, 0x1
	0x036F4AA8 ADD X10, X10, 0x10
	0x036F4AAC B.NE 0x36F4A98
	0x036F4AB0 MOV X0, X21
	0x036F4AB4 MOV X1, X22
	0x036F4AB8 MOV W2, W31
	0x036F4ABC BL 0x1C5C788
	0x036F4AC0 B 0x36F4AD0
	0x036F4AC4 LDRSW X9, [X10]
	0x036F4AC8 ADD X8, X8, X9, 0x4, LSL
	0x036F4ACC ADD X0, X8, 0x138
	0x036F4AD0 LDP X8, X1, [X0]
	0x036F4AD4 MOV X0, X21
	0x036F4AD8 BLR X8
	0x036F4ADC MOV X21, X0
	0x036F4AE0 CBZ X0, 0x36F4D4C
	0x036F4AE4 ADRP X23, 0x9FF000
	0x036F4AE8 ADRP X24, 0xA27000
	0x036F4AEC ADRP X25, 0x9FF000
	0x036F4AF0 ADRP X26, 0xA06000
	0x036F4AF4 LDR X23, [X23 + 0xE18]
	0x036F4AF8 LDR X24, [X24 + 0xFB0]
	0x036F4AFC LDR X25, [X25 + 0x598]
	0x036F4B00 LDR X26, [X26 + 0x958]
	0x036F4B04 LDR X8, [X21]
	0x036F4B08 LDR X1, [X23]
	0x036F4B0C LDRH W9, [X8 + 0x12E]
	0x036F4B10 CBZ X9, 0x36F4B34
	0x036F4B14 LDR X10, [X8 + 0xB0]
	0x036F4B18 ADD X10, X10, 0x8
	0x036F4B1C LDUR X11, [X10 - 0x8]
	0x036F4B20 CMP X11, X1
	0x036F4B24 B.EQ 0x36F4B44
	0x036F4B28 SUBS X9, X9, 0x1
	0x036F4B2C ADD X10, X10, 0x10
	0x036F4B30 B.NE 0x36F4B1C
	0x036F4B34 MOV X0, X21
	0x036F4B38 MOV W2, W31
	0x036F4B3C BL 0x1C5C788
	0x036F4B40 B 0x36F4B50
	0x036F4B44 LDRSW X9, [X10]
	0x036F4B48 ADD X8, X8, X9, 0x4, LSL
	0x036F4B4C ADD X0, X8, 0x138
	0x036F4B50 LDP X8, X1, [X0]
	0x036F4B54 MOV X0, X21
	0x036F4B58 BLR X8
	0x036F4B5C TBZ X0, 0x0, 0x36F4C64
	0x036F4B60 LDR X8, [X21]
	0x036F4B64 LDR X1, [X24]
	0x036F4B68 LDRH W9, [X8 + 0x12E]
	0x036F4B6C CBZ X9, 0x36F4B90
	0x036F4B70 LDR X10, [X8 + 0xB0]
	0x036F4B74 ADD X10, X10, 0x8
	0x036F4B78 LDUR X11, [X10 - 0x8]
	0x036F4B7C CMP X11, X1
	0x036F4B80 B.EQ 0x36F4BA0
	0x036F4B84 SUBS X9, X9, 0x1
	0x036F4B88 ADD X10, X10, 0x10
	0x036F4B8C B.NE 0x36F4B78
	0x036F4B90 MOV X0, X21
	0x036F4B94 MOV W2, W31
	0x036F4B98 BL 0x1C5C788
	0x036F4B9C B 0x36F4BAC
	0x036F4BA0 LDRSW X9, [X10]
	0x036F4BA4 ADD X8, X8, X9, 0x4, LSL
	0x036F4BA8 ADD X0, X8, 0x138
	0x036F4BAC LDP X8, X1, [X0]
	0x036F4BB0 MOV X0, X21
	0x036F4BB4 BLR X8
	0x036F4BB8 MOV X22, X0
	0x036F4BBC LDR X0, [X25]
	0x036F4BC0 LDR W8, [X0 + 0xE0]
	0x036F4BC4 CBNZ W8, 0x36F4BCC
	0x036F4BC8 BL 0x1C16DFC
	0x036F4BCC MOV X0, X22
	0x036F4BD0 MOV X1, X31
	0x036F4BD4 MOV X2, X31
	0x036F4BD8 BL 0x3C354F8
	0x036F4BDC TBZ X0, 0x0, 0x36F4B04
	0x036F4BE0 CBZ X20, 0x36F4D18
	0x036F4BE4 MOV X0, X20
	0x036F4BE8 MOV X1, X31
	0x036F4BEC BL 0x3C32E90
	0x036F4BF0 MOV X1, X0
	0x036F4BF4 CBZ X22, 0x36F4D1C
	0x036F4BF8 MOV X0, X22
	0x036F4BFC MOV X2, X31
	0x036F4C00 BL 0x3C40F48
	0x036F4C04 TBZ X0, 0x0, 0x36F4B04
	0x036F4C08 CBZ X19, 0x36F4D20
	0x036F4C0C LDR W10, [X19 + 0x1C]
	0x036F4C10 LDR X8, [X19 + 0x10]
	0x036F4C14 LDR X9, [X26]
	0x036F4C18 ADD W10, W10, 0x1
	0x036F4C1C STR W10, [X19 + 0x1C]
	0x036F4C20 CBZ X8, 0x36F4D24
	0x036F4C24 LDRSW X10, [X19 + 0x18]
	0x036F4C28 LDR W11, [X8 + 0x18]
	0x036F4C2C CMP W10, W11
	0x036F4C30 B.CS 0x36F4C48
	0x036F4C34 ADD W9, W10, 0x1
	0x036F4C38 ADD X8, X8, X10, 0x3, LSL
	0x036F4C3C STR W9, [X19 + 0x18]
	0x036F4C40 STR X22, [X8 + 0x20]
	0x036F4C44 B 0x36F4B04
	0x036F4C48 LDR X8, [X9 + 0x20]
	0x036F4C4C LDR X8, [X8 + 0xC0]
	0x036F4C50 LDR X2, [X8 + 0x70]
	0x036F4C54 MOV X0, X19
	0x036F4C58 MOV X1, X22
	0x036F4C5C BL 0x301BF90
	0x036F4C60 B 0x36F4B04
	0x036F4C64 MOV X19, X31
	0x036F4C68 MOV W20, W31
	0x036F4C6C CBZ X21, 0x36F4CD0
	0x036F4C70 ADRP X10, 0x9FF000
	0x036F4C74 LDR X8, [X21]
	0x036F4C78 LDR X10, [X10 + 0xE00]
	0x036F4C7C LDRH W9, [X8 + 0x12E]
	0x036F4C80 LDR X1, [X10]
	0x036F4C84 CBZ X9, 0x36F4CA8
	0x036F4C88 LDR X10, [X8 + 0xB0]
	0x036F4C8C ADD X10, X10, 0x8
	0x036F4C90 LDUR X11, [X10 - 0x8]
	0x036F4C94 CMP X11, X1
	0x036F4C98 B.EQ 0x36F4CB8
	0x036F4C9C SUBS X9, X9, 0x1
	0x036F4CA0 ADD X10, X10, 0x10
	0x036F4CA4 B.NE 0x36F4C90
	0x036F4CA8 MOV X0, X21
	0x036F4CAC MOV W2, W31
	0x036F4CB0 BL 0x1C5C788
	0x036F4CB4 B 0x36F4CC4
	0x036F4CB8 LDRSW X9, [X10]
	0x036F4CBC ADD X8, X8, X9, 0x4, LSL
	0x036F4CC0 ADD X0, X8, 0x138
	0x036F4CC4 LDP X8, X1, [X0]
	0x036F4CC8 MOV X0, X21
	0x036F4CCC BLR X8
	0x036F4CD0 CBNZ X19, 0x36F4D50
	0x036F4CD4 CBZ W20, 0x36F4CF8
	0x036F4CD8 MOV W8, W31
	0x036F4CDC B 0x36F4CFC
	0x036F4CE0 LDR X8, [X9 + 0x20]
	0x036F4CE4 MOV X0, X19
	0x036F4CE8 MOV X1, X21
	0x036F4CEC LDR X8, [X8 + 0xC0]
	0x036F4CF0 LDR X2, [X8 + 0x70]
	0x036F4CF4 BL 0x301BF90
	0x036F4CF8 MOVZ W8, 0x1
	0x036F4CFC LDP X20, X19, [X31 + 0x40]
	0x036F4D00 LDP X22, X21, [X31 + 0x30]
	0x036F4D04 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0xCED000
	012 Move W8, [X22+2991]
	013 Move X21, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0xA29000
	021 Move X0, [X0+3624]
	022 Call 0x1C17CF4
	023 Move X0, 0xA4D000
	024 Move X0, [X0+2536]
	025 Call 0x1C17CF4
	026 Move X0, 0xA4D000
	027 Move X0, [X0+2632]
	028 Call 0x1C17CF4
	029 Move X0, 0xA4D000
	030 Move X0, [X0+2544]
	031 Call 0x1C17CF4
	032 Move X0, 0xA4D000
	033 Move X0, [X0+2520]
	034 Call 0x1C17CF4
	035 Move X0, 0xA01000
	036 Move X0, [X0+3600]
	037 Call 0x1C17CF4
	038 Move X0, 0xA01000
	039 Move X0, [X0+3616]
	040 Call 0x1C17CF4
	041 Move X0, 0xA01000
	042 Move X0, [X0+3632]
	043 Call 0x1C17CF4
	044 Move X0, 0xA4D000
	045 Move X0, [X0+2560]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X22+2991], W8
	049 Move W8, [X19+16]
	050 Compare W8, 0
	051 JumpIfEqual {53}
	052 Move W0, 1
	053 Compare X21, 0
	054 JumpIfEqual {301}
	055 Move X24, 0xA4D000
	056 Move X8, [X21]
	057 Move X24, [X24+2632]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X24]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move X0, X21
	069 Move W2, W31
	070 Call 0x1C5D788
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 Add X8, X8, X9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X21
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, 0xA01000
	079 Move X8, [X8+3632]
	080 Move W22, W0
	081 Move X8, [X8]
	082 Move X0, X8
	083 Call 0x1C17F10
	084 Move X8, 0xA01000
	085 Move X8, [X8+3616]
	086 Move W1, W22
	087 Move X23, X0
	088 Move X2, [X8]
	089 Call List`1<Int32>..ctor, X0, X1
	090 Move [X19+40], X23
	091 Move X25, 0xA4D000
	092 Move X26, 0xA4D000
	093 Move X27, 0xA01000
	094 Move X25, [X25+2544]
	095 Move X26, [X26+2520]
	096 Move X27, [X27+3600]
	097 Move W22, W31
	098 Move X8, [X21]
	099 Move X1, [X24]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X21
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X21
	118 NotImplemented "Instruction BLR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X8, [X21]
	121 Move X1, [X25]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move X0, X21
	132 Move W2, W31
	133 Call 0x1C5D788
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Add X8, X8, X9
	136 Add X0, X8, 312
	137 Move X8, [X0]
	138 Move X2, [X0+8]
	139 Move X0, X21
	140 Move W1, W22
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Compare X0, 0
	143 JumpIfEqual {301}
	144 Move X8, [X0]
	145 Move X1, [X26]
	146 Move X23, X0
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move W2, 8
	157 Move X0, X23
	158 Call 0x1C5D788
	159 Move W9, [X10]
	160 Add W9, W9, 8
	161 Add X8, X8, W9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X1, [X0+8]
	165 Move X0, X23
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {193}
	171 Move X0, [X19+40]
	172 Compare X0, 0
	173 JumpIfEqual {301}
	174 Move W10, [X0+28]
	175 Move X8, [X0+16]
	176 Move X9, [X27]
	177 Add W10, W10, 1
	178 Move [X0+28], W10
	179 Compare X8, 0
	180 JumpIfEqual {301}
	181 NotImplemented "Instruction LDRSW not yet implemented."
	182 Move W11, [X8+24]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Add W9, W10, 1
	185 Add X8, X8, X10
	186 Move [X0+24], W9
	187 Move [X8+32], W22
	188 Move X8, [X9+32]
	189 Move W1, W22
	190 Move X8, [X8+192]
	191 Move X2, [X8+112]
	192 Call List`1<Int32>.AddWithResize, X0, X1
	193 Add W22, W22, 1
	194 Move X22, 0xA4D000
	195 Move X22, [X22+2560]
	196 Move X0, [X22]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X0, X20
	202 Move X1, X21
	203 Call RigUtils.CreateSyncSceneToStreamData, X0, X1
	204 Move [X19+32], X0
	205 Compare X0, 0
	206 JumpIfEqual {301}
	207 Move X10, 0xA4D000
	208 Move X8, [X0]
	209 Move X10, [X10+2536]
	210 Move X21, X0
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Move X1, [X10]
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move X0, X21
	222 Move W2, W31
	223 Call 0x1C5D788
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Add X8, X8, X9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X1, [X0+8]
	229 Move X0, X21
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move TEMP, X0
	232 And TEMP, TEMP, 1
	233 Compare TEMP, 1
	234 JumpIfNotEqual {276}
	235 Move X0, [X22]
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move X21, 0xCED000
	241 Move W8, [X21+3040]
	242 Compare W8, 0
	243 JumpIfNotEqual {249}
	244 Move X0, 0xA4D000
	245 Move X0, [X0+2560]
	246 Call 0x1C17CF4
	247 Move W8, 1
	248 Move [X21+3040], W8
	249 Move X0, [X22]
	250 Move W8, [X0+224]
	251 Compare W8, 0
	252 JumpIfNotEqual {255}
	253 Call 0x1C17DFC
	254 Move X0, [X22]
	255 Move X8, [X0+184]
	256 Move X21, [X8+8]
	257 Compare X21, 0
	258 JumpIfEqual {301}
	259 Move X10, 0xA29000
	260 Move X8, [X21]
	261 Move X22, [X19+32]
	262 Move X10, [X10+3624]
	263 NotImplemented "Instruction LDRH not yet implemented."
	264 Move X1, [X10]
	265 Compare X9, 0
	266 JumpIfEqual {273}
	267 Move X10, [X8+176]
	268 Add X10, X10, 8
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Subtract X9, X9, 1
	272 Add X10, X10, 16
	273 Move X0, X21
	274 Move W2, W31
	275 Call 0x1C5D788
	276 Move W0, W31
	277 NotImplemented "Instruction LDRSW not yet implemented."
	278 Add X8, X8, X9
	279 Add X0, X8, 312
	280 Move X8, [X0]
	281 Move X4, [X0+8]
	282 Move X0, X21
	283 Move X1, X20
	284 Move X2, X22
	285 Move X3, X31
	286 NotImplemented "Instruction BLR not yet implemented."
	287 Move [X19+24], X0
	288 Move W0, 1
	289 Move [X19+16], W0
	290 Move X20, [X31+64]
	291 Move X19, [X31+72]
	292 Move X22, [X31+48]
	293 Move X21, [X31+56]
	294 Move X24, [X31+32]
	295 Move X23, [X31+40]
	296 Move X26, [X31+16]
	297 Move X25, [X31+24]
	298 Move X30, [X31+80]
	299 Move X27, [X31+88]
	300 Return X0
	301 Call 0x1C17F20

Method: System.Void Update(System.Collections.Generic.IList`1<UnityEngine.Animations.Rigging.IRigLayer> layers)

Disassembly:
	0x036F25A0 SUBS X9, X9, 0x1
	0x036F25A4 ADD X10, X10, 0x10
	0x036F25A8 B.NE 0x36F2594
	0x036F25AC MOVZ W2, 0x6
	0x036F25B0 MOV X0, X19
	0x036F25B4 BL 0x1C5C788
	0x036F25B8 B 0x36F25CC
	0x036F25BC LDR W9, [X10]
	0x036F25C0 ADD W9, W9, 0x6
	0x036F25C4 ADD X8, X8, W9, 0x4, SXTW
	0x036F25C8 ADD X0, X8, 0x138
	0x036F25CC LDP X8, X1, [X0]
	0x036F25D0 MOV X0, X19
	0x036F25D4 BLR X8
	0x036F25D8 LDR W8, [X20 + 0x18]
	0x036F25DC ADD W21, W21, 0x1
	0x036F25E0 CMP W21, W8
	0x036F25E4 B.LT 0x36F24A8
	0x036F25E8 LDP X20, X19, [X31 + 0x30]
	0x036F25EC LDP X22, X21, [X31 + 0x20]
	0x036F25F0 LDR X30, [X31 + 0x10]
	0x036F25F4 ADD X31, X31, 0x40
	0x036F25F8 RET
	0x036F25FC BL 0x1C16F28
	0x036F2600 BL 0x1C16F20
	0x036F2604 STP X30, X25, [X31 - 0x40]!
	0x036F2608 STP X24, X23, [X31 + 0x10]
	0x036F260C STP X22, X21, [X31 + 0x20]
	0x036F2610 STP X20, X19, [X31 + 0x30]
	0x036F2614 ADRP X24, 0xCEE000
	0x036F2618 LDRB W8, [X24 + 0xB90]
	0x036F261C MOV X19, X4
	0x036F2620 MOV X20, X3
	0x036F2624 MOV X21, X2
	0x036F2628 MOV X22, X1
	0x036F262C MOV X23, X0
	0x036F2630 TBNZ X8, 0x0, 0x36F269C
	0x036F2634 ADRP X0, 0xA0B000
	0x036F2638 LDR X0, [X0 + 0x850]
	0x036F263C BL 0x1C16CF4
	0x036F2640 ADRP X0, 0xA01000
	0x036F2644 LDR X0, [X0 + 0xE00]
	0x036F2648 BL 0x1C16CF4
	0x036F264C ADRP X0, 0xA4E000
	0x036F2650 LDR X0, [X0 + 0xA20]
	0x036F2654 BL 0x1C16CF4
	0x036F2658 ADRP X0, 0xA4E000
	0x036F265C LDR X0, [X0 + 0xA28]
	0x036F2660 BL 0x1C16CF4
	0x036F2664 ADRP X0, 0xA01000
	0x036F2668 LDR X0, [X0 + 0xE18]
	0x036F266C BL 0x1C16CF4
	0x036F2670 ADRP X0, 0xA01000
	0x036F2674 LDR X0, [X0 + 0x598]
	0x036F2678 BL 0x1C16CF4
	0x036F267C ADRP X0, 0xA4E000
	0x036F2680 LDR X0, [X0 + 0xA40]
	0x036F2684 BL 0x1C16CF4
	0x036F2688 ADRP X0, 0xA4E000
	0x036F268C LDR X0, [X0 + 0x9D0]
	0x036F2690 BL 0x1C16CF4
	0x036F2694 MOVZ W8, 0x1
	0x036F2698 STRB W8, [X24 + 0xB90]
	0x036F269C MOV X0, X23
	0x036F26A0 MOV X1, X31
	0x036F26A4 BL 0x3C323D4
	0x036F26A8 TBZ X0, 0x0, 0x36F2948
	0x036F26AC ADRP X25, 0xA0B000
	0x036F26B0 ADRP X24, 0xA01000
	0x036F26B4 LDR X8, [X23 + 0x28]
	0x036F26B8 LDR X25, [X25 + 0x850]
	0x036F26BC LDR X24, [X24 + 0x598]
	0x036F26C0 CBNZ X8, 0x36F26CC
	0x036F26C4 MOV X0, X23
	0x036F26C8 BL 0x36F21FC
	0x036F26CC LDR X1, [X25]
	0x036F26D0 MOV X0, X23
	0x036F26D4 BL 0x21A3894
	0x036F26D8 LDR X8, [X24]
	0x036F26DC MOV X24, X0
	0x036F26E0 LDR W9, [X8 + 0xE0]
	0x036F26E4 CBNZ W9, 0x36F26F0
	0x036F26E8 MOV X0, X8
	0x036F26EC BL 0x1C16DFC
	0x036F26F0 MOV X0, X24
	0x036F26F4 MOV X1, X31
	0x036F26F8 MOV X2, X31
	0x036F26FC BL 0x3C3883C
	0x036F2700 TBNZ X0, 0x0, 0x36F2948
	0x036F2704 LDR X25, [X23 + 0x28]
	0x036F2708 CBZ X25, 0x36F2948
	0x036F270C LDR X8, [X25 + 0x18]
	0x036F2710 CBZ X8, 0x36F2948
	0x036F2714 MOV X0, X23
	0x036F2718 BL 0x36F153C
	0x036F271C ADRP X8, 0xA4E000
	0x036F2720 LDR X8, [X8 + 0x9D0]
	0x036F2724 MOV X23, X0
	0x036F2728 LDR X8, [X8]
	0x036F272C LDR W9, [X8 + 0xE0]
	0x036F2730 CBNZ W9, 0x36F273C
	0x036F2734 MOV X0, X8
	0x036F2738 BL 0x1C16DFC
	0x036F273C MOV X0, X24
	0x036F2740 MOV X1, X22
	0x036F2744 MOV X2, X21
	0x036F2748 MOV X3, X25
	0x036F274C MOV X4, X23
	0x036F2750 BL 0x36F2A38
	0x036F2754 CBZ X0, 0x36F2964
	0x036F2758 ADRP X10, 0xA4E000
	0x036F275C LDR X8, [X0]
	0x036F2760 LDR X10, [X10 + 0xA20]
	0x036F2764 MOV X21, X0
	0x036F2768 LDRH W9, [X8 + 0x12E]
	0x036F276C LDR X1, [X10]
	0x036F2770 CBZ X9, 0x36F2794
	0x036F2774 LDR X10, [X8 + 0xB0]
	0x036F2778 ADD X10, X10, 0x8
	0x036F277C LDUR X11, [X10 - 0x8]
	0x036F2780 CMP X11, X1
	0x036F2784 B.EQ 0x36F27A4
	0x036F2788 SUBS X9, X9, 0x1
	0x036F278C ADD X10, X10, 0x10
	0x036F2790 B.NE 0x36F277C
	0x036F2794 MOV X0, X21
	0x036F2798 MOV W2, W31
	0x036F279C BL 0x1C5C788
	0x036F27A0 B 0x36F27B0
	0x036F27A4 LDRSW X9, [X10]
	0x036F27A8 ADD X8, X8, X9, 0x4, LSL
	0x036F27AC ADD X0, X8, 0x138
	0x036F27B0 LDP X8, X1, [X0]
	0x036F27B4 MOV X0, X21
	0x036F27B8 BLR X8
	0x036F27BC MOV X21, X0
	0x036F27C0 CBZ X0, 0x36F2968
	0x036F27C4 ADRP X23, 0xA01000
	0x036F27C8 ADRP X24, 0xA4E000
	0x036F27CC ADRP X25, 0xA4E000
	0x036F27D0 LDR X23, [X23 + 0xE18]
	0x036F27D4 LDR X24, [X24 + 0xA28]
	0x036F27D8 LDR X25, [X25 + 0xA40]
	0x036F27DC LDR X8, [X21]
	0x036F27E0 LDR X1, [X23]
	0x036F27E4 LDRH W9, [X8 + 0x12E]
	0x036F27E8 CBZ X9, 0x36F280C
	0x036F27EC LDR X10, [X8 + 0xB0]
	0x036F27F0 ADD X10, X10, 0x8
	0x036F27F4 LDUR X11, [X10 - 0x8]
	0x036F27F8 CMP X11, X1
	0x036F27FC B.EQ 0x36F281C
	0x036F2800 SUBS X9, X9, 0x1
	0x036F2804 ADD X10, X10, 0x10
	0x036F2808 B.NE 0x36F27F4
	0x036F280C MOV X0, X21
	0x036F2810 MOV W2, W31
	0x036F2814 BL 0x1C5C788
	0x036F2818 B 0x36F2828
	0x036F281C LDRSW X9, [X10]
	0x036F2820 ADD X8, X8, X9, 0x4, LSL
	0x036F2824 ADD X0, X8, 0x138
	0x036F2828 LDP X8, X1, [X0]
	0x036F282C MOV X0, X21
	0x036F2830 BLR X8
	0x036F2834 TBZ X0, 0x0, 0x36F28DC
	0x036F2838 LDR X8, [X21]
	0x036F283C LDR X1, [X24]
	0x036F2840 LDRH W9, [X8 + 0x12E]
	0x036F2844 CBZ X9, 0x36F2868
	0x036F2848 LDR X10, [X8 + 0xB0]
	0x036F284C ADD X10, X10, 0x8
	0x036F2850 LDUR X11, [X10 - 0x8]
	0x036F2854 CMP X11, X1
	0x036F2858 B.EQ 0x36F2878
	0x036F285C SUBS X9, X9, 0x1
	0x036F2860 ADD X10, X10, 0x10
	0x036F2864 B.NE 0x36F2850
	0x036F2868 MOV X0, X21
	0x036F286C MOV W2, W31
	0x036F2870 BL 0x1C5C788
	0x036F2874 B 0x36F2884
	0x036F2878 LDRSW X9, [X10]
	0x036F287C ADD X8, X8, X9, 0x4, LSL
	0x036F2880 ADD X0, X8, 0x138
	0x036F2884 LDP X8, X1, [X0]
	0x036F2888 MOV X0, X21
	0x036F288C BLR X8
	0x036F2890 MOV X22, X1
	0x036F2894 CBZ X1, 0x36F27DC
	0x036F2898 LDR X8, [X22 + 0x18]
	0x036F289C CBZ X8, 0x36F27DC
	0x036F28A0 CBZ W8, 0x36F2974
	0x036F28A4 LDP X0, X1, [X22 + 0x20]
	0x036F28A8 LDR X5, [X25]
	0x036F28AC FMOV S0, 1
	0x036F28B0 MOV X2, X20
	0x036F28B4 MOV X3, X19
	0x036F28B8 MOV W4, W31
	0x036F28BC BL 0x222FBBC
	0x036F28C0 LDR W8, [X22 + 0x18]
	0x036F28C4 CBZ W8, 0x36F2978
	0x036F28C8 SUB W8, W8, 0x1
	0x036F28CC SXTW X8, W8
	0x036F28D0 ADD X8, X22, X8, 0x4, LSL
	0x036F28D4 LDP X20, X19, [X8 + 0x20]
	0x036F28D8 B 0x36F27DC
	0x036F28DC MOV X22, X31
	0x036F28E0 CBZ X21, 0x36F2944
	0x036F28E4 ADRP X10, 0xA01000
	0x036F28E8 LDR X8, [X21]
	0x036F28EC LDR X10, [X10 + 0xE00]
	0x036F28F0 LDRH W9, [X8 + 0x12E]
	0x036F28F4 LDR X1, [X10]
	0x036F28F8 CBZ X9, 0x36F291C
	0x036F28FC LDR X10, [X8 + 0xB0]
	0x036F2900 ADD X10, X10, 0x8
	0x036F2904 LDUR X11, [X10 - 0x8]
	0x036F2908 CMP X11, X1
	0x036F290C B.EQ 0x36F292C
	0x036F2910 SUBS X9, X9, 0x1
	0x036F2914 ADD X10, X10, 0x10
	0x036F2918 B.NE 0x36F2904
	0x036F291C MOV X0, X21
	0x036F2920 MOV W2, W31
	0x036F2924 BL 0x1C5C788
	0x036F2928 B 0x36F2938
	0x036F292C LDRSW X9, [X10]
	0x036F2930 ADD X8, X8, X9, 0x4, LSL
	0x036F2934 ADD X0, X8, 0x138
	0x036F2938 LDP X8, X1, [X0]
	0x036F293C MOV X0, X21
	0x036F2940 BLR X8
	0x036F2944 CBNZ X22, 0x36F296C
	0x036F2948 MOV X0, X20
	0x036F294C MOV X1, X19
	0x036F2950 LDP X20, X19, [X31 + 0x30]
	0x036F2954 LDP X22, X21, [X31 + 0x20]
	0x036F2958 LDP X24, X23, [X31 + 0x10]
	0x036F295C LDP X30, X25, [X31], #0x40
	0x036F2960 RET
	0x036F2964 BL 0x1C16F20
	0x036F2968 BL 0x1C16F20
	0x036F296C MOV X0, X22
	0x036F2970 BL 0x1C16F18
	0x036F2974 BL 0x1C16F28
	0x036F2978 BL 0x1C16F28
	0x036F297C B 0x36F2990

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0xCEF000
	014 Move W8, [X21+2992]
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0xA2B000
	022 Move X0, [X0+3624]
	023 Call 0x1C17CF4
	024 Move X0, 0xA4F000
	025 Move X0, [X0+2536]
	026 Call 0x1C17CF4
	027 Move X0, 0xA4F000
	028 Move X0, [X0+2544]
	029 Call 0x1C17CF4
	030 Move X0, 0xA4F000
	031 Move X0, [X0+2520]
	032 Call 0x1C17CF4
	033 Move X0, 0xA4F000
	034 Move X0, [X0+2552]
	035 Call 0x1C17CF4
	036 Move X0, 0xA03000
	037 Move X0, [X0+3624]
	038 Call 0x1C17CF4
	039 Move X0, 0xA2C000
	040 Move X0, [X0+3896]
	041 Call 0x1C17CF4
	042 Move X0, 0xA4F000
	043 Move X0, [X0+2560]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+2992], W8
	047 Move W8, [X19+16]
	048 Compare W8, 0
	049 JumpIfEqual {95}
	050 Move X21, [X19+32]
	051 Compare X21, 0
	052 JumpIfEqual {278}
	053 Move X10, 0xA4F000
	054 Move X8, [X21]
	055 Move X10, [X10+2536]
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X10]
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X21
	067 Move W2, W31
	068 Call 0x1C5D788
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X0, X21
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {95}
	080 Move X25, 0xA4F000
	081 Move X22, [X19+32]
	082 Move X25, [X25+2552]
	083 Compare X22, 0
	084 JumpIfEqual {108}
	085 Move X23, [X25]
	086 Move X0, X22
	087 Move X1, X23
	088 Call 0x1C17E00
	089 Move X21, X0
	090 Compare X0, 0
	091 JumpIfNotEqual {109}
	092 Move X0, X22
	093 Move X1, X23
	094 Call 0x1C181E0
	095 Move X20, [X31+80]
	096 Move X19, [X31+88]
	097 Move X22, [X31+64]
	098 Move X21, [X31+72]
	099 Move X24, [X31+48]
	100 Move X23, [X31+56]
	101 Move X26, [X31+32]
	102 Move X25, [X31+40]
	103 Move X28, [X31+16]
	104 Move X27, [X31+24]
	105 Move X29, [X31+96]
	106 Move X30, [X31+104]
	107 Return 
	108 Move X21, X31
	109 Move X8, [X19+40]
	110 Compare X8, 0
	111 JumpIfEqual {278}
	112 Move W26, [X8+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Compare X21, 0
	115 JumpIfEqual {278}
	116 Move X27, 0xA2C000
	117 Move X28, 0xA4F000
	118 Move X29, 0xA4F000
	119 Move X27, [X27+3896]
	120 Move X28, [X28+2544]
	121 Move X29, [X29+2520]
	122 Move X22, X31
	123 Move X8, [X21]
	124 Move X1, [X25]
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move W2, 2
	135 Move X0, X21
	136 Call 0x1C5D788
	137 Move W9, [X10]
	138 Add W9, W9, 2
	139 Add X8, X8, W9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X21
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X8, [X19+40]
	146 Compare X8, 0
	147 JumpIfEqual {278}
	148 Move X2, [X27]
	149 Move X23, X0
	150 Move X0, X8
	151 Move W1, W22
	152 Call List`1<Int32>.get_Item, X0, X1
	153 Compare X20, 0
	154 JumpIfEqual {278}
	155 Move X8, [X20]
	156 Move X1, [X28]
	157 Move W24, W0
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move X0, X20
	168 Move W2, W31
	169 Call 0x1C5D788
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Add X8, X8, X9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X2, [X0+8]
	175 Move X0, X20
	176 Move W1, W24
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Compare X0, 0
	179 JumpIfEqual {278}
	180 Move X8, [X0]
	181 Move X1, [X29]
	182 Move X24, X0
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move W2, 3
	193 Move X0, X24
	194 Call 0x1C5D788
	195 Move W9, [X10]
	196 Add W9, W9, 3
	197 Add X8, X8, W9
	198 Add X0, X8, 312
	199 Move X8, [X0]
	200 Move X1, [X0+8]
	201 Move X0, X24
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Compare X23, 0
	204 JumpIfEqual {278}
	205 Move W8, [X23+24]
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Add X9, X23, X22
	208 Add X22, X22, 1
	209 And W8, W0, 1
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move [X9+32], W8
	212 Move X20, 0xA4F000
	213 Move X20, [X20+2560]
	214 Move X0, [X20]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X21, 0xCEF000
	220 Move W8, [X21+3040]
	221 Compare W8, 0
	222 JumpIfNotEqual {228}
	223 Move X0, 0xA4F000
	224 Move X0, [X0+2560]
	225 Call 0x1C17CF4
	226 Move W8, 1
	227 Move [X21+3040], W8
	228 Move X0, [X20]
	229 Move W8, [X0+224]
	230 Compare W8, 0
	231 JumpIfNotEqual {234}
	232 Call 0x1C17DFC
	233 Move X0, [X20]
	234 Move X8, [X0+184]
	235 Move X20, [X8+8]
	236 Compare X20, 0
	237 JumpIfEqual {278}
	238 Move X10, 0xA2B000
	239 Move X8, [X20]
	240 Move X21, [X19+24]
	241 Move X19, [X19+32]
	242 Move X10, [X10+3624]
	243 NotImplemented "Instruction LDRH not yet implemented."
	244 Move X1, [X10]
	245 Compare X9, 0
	246 JumpIfEqual {253}
	247 Move X10, [X8+176]
	248 Add X10, X10, 8
	249 NotImplemented "Instruction LDUR not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Subtract X9, X9, 1
	252 Add X10, X10, 16
	253 Move W2, 2
	254 Move X0, X20
	255 Call 0x1C5D788
	256 Move W9, [X10]
	257 Add W9, W9, 2
	258 Add X8, X8, W9
	259 Add X0, X8, 312
	260 Move X4, [X0]
	261 Move X3, [X0+8]
	262 Move X0, X20
	263 Move X1, X21
	264 Move X2, X19
	265 Move X20, [X31+80]
	266 Move X19, [X31+88]
	267 Move X22, [X31+64]
	268 Move X21, [X31+72]
	269 Move X24, [X31+48]
	270 Move X23, [X31+56]
	271 Move X26, [X31+32]
	272 Move X25, [X31+40]
	273 Move X28, [X31+16]
	274 Move X27, [X31+24]
	275 Move X29, [X31+96]
	276 Move X30, [X31+104]
	277 CallNoReturn X4
	278 Call 0x1C17F20
	279 Call 0x1C17F28

Method: System.Void Reset()

Disassembly:
	0x036F3068 B 0x36F2E64
	0x036F306C MOV X19, X0
	0x036F3070 MOV X26, X31
	0x036F3074 B 0x36F307C
	0x036F3078 MOV X19, X0
	0x036F307C CBZ X25, 0x36F30E0
	0x036F3080 LDR X8, [X25]
	0x036F3084 ADRP X10, 0xA00000
	0x036F3088 LDRH W9, [X8 + 0x12E]
	0x036F308C LDR X10, [X10 + 0xE00]
	0x036F3090 LDR X1, [X10]
	0x036F3094 CBZ X9, 0x36F30B8
	0x036F3098 LDR X10, [X8 + 0xB0]
	0x036F309C ADD X10, X10, 0x8
	0x036F30A0 LDUR X11, [X10 - 0x8]
	0x036F30A4 CMP X11, X1
	0x036F30A8 B.EQ 0x36F30C8
	0x036F30AC SUBS X9, X9, 0x1
	0x036F30B0 ADD X10, X10, 0x10
	0x036F30B4 B.NE 0x36F30A0
	0x036F30B8 MOV X0, X25
	0x036F30BC MOV W2, W31
	0x036F30C0 BL 0x1C5C788
	0x036F30C4 B 0x36F30D4
	0x036F30C8 LDRSW X9, [X10]
	0x036F30CC ADD X8, X8, X9, 0x4, LSL
	0x036F30D0 ADD X0, X8, 0x138
	0x036F30D4 LDP X8, X1, [X0]
	0x036F30D8 MOV X0, X25
	0x036F30DC BLR X8
	0x036F30E0 CBNZ X26, 0x36F30EC
	0x036F30E4 MOV X0, X19
	0x036F30E8 BL 0x1D2C690
	0x036F30EC MOV X0, X26
	0x036F30F0 BL 0x1C16F18
	0x036F30F4 BL 0x1990590
	0x036F30F8 STR X1, [X0 + 0x20]
	0x036F30FC RET
	0x036F3100 MOV X1, X31
	0x036F3104 B 0x33BDD8C
	0x036F3108 STR X1, [X0 + 0x30]
	0x036F310C RET
	0x036F3110 LDP X8, X1, [X0 + 0x48]
	0x036F3114 MOV X0, X8
	0x036F3118 RET
	0x036F311C STP X1, X2, [X0 + 0x48]
	0x036F3120 RET
	0x036F3124 STR X30, [X31 - 0x30]!
	0x036F3128 STP X22, X21, [X31 + 0x10]
	0x036F312C STP X20, X19, [X31 + 0x20]
	0x036F3130 ADRP X21, 0xCED000
	0x036F3134 ADRP X22, 0xA4D000
	0x036F3138 ADRP X20, 0xA4D000
	0x036F313C LDRB W8, [X21 + 0xB93]
	0x036F3140 LDR X22, [X22 + 0x9A8]
	0x036F3144 LDR X20, [X20 + 0x9B0]
	0x036F3148 MOV X19, X0
	0x036F314C TBNZ X8, 0x0, 0x36F3170
	0x036F3150 ADRP X0, 0xA4D000
	0x036F3154 LDR X0, [X0 + 0x9B0]
	0x036F3158 BL 0x1C16CF4
	0x036F315C ADRP X0, 0xA4D000
	0x036F3160 LDR X0, [X0 + 0x9A8]
	0x036F3164 BL 0x1C16CF4
	0x036F3168 MOVZ W8, 0x1
	0x036F316C STRB W8, [X21 + 0xB93]
	0x036F3170 LDR X0, [X22]
	0x036F3174 BL 0x1C16F10
	0x036F3178 LDR X1, [X20]
	0x036F317C MOV X20, X0
	0x036F3180 BL 0x301B7C4
	0x036F3184 STR X20, [X19 + 0x38]
	0x036F3188 MOV X0, X19
	0x036F318C LDP X20, X19, [X31 + 0x20]
	0x036F3190 LDP X22, X21, [X31 + 0x10]
	0x036F3194 MOV X1, X31
	0x036F3198 LDR X30, [X31], #0x30
	0x036F319C B 0x3C36C30
	0x036F31A0 STR X30, [X31 - 0x30]!
	0x036F31A4 STP X22, X21, [X31 + 0x10]
	0x036F31A8 STP X20, X19, [X31 + 0x20]
	0x036F31AC LDR X8, [X2 + 0x8]
	0x036F31B0 STP X1, X2, [X0 + 0x20]
	0x036F31B4 MOV X19, X0
	0x036F31B8 MOV X20, X2
	0x036F31BC STR X8, [X0 + 0x10]
	0x036F31C0 LDRB W22, [X2 + 0x52]
	0x036F31C4 STR X0, [X0 + 0x40]
	0x036F31C8 MOV X0, X2
	0x036F31CC MOV X21, X1
	0x036F31D0 BL 0x1C16D84
	0x036F31D4 TBZ X0, 0x0, 0x36F31EC
	0x036F31D8 CMP W22, 0x1
	0x036F31DC B.NE 0x36F31F4
	0x036F31E0 ADRP X8, 0xFFFFFFFFFE4D6000
	0x036F31E4 ADD X8, X8, 0xD68
	0x036F31E8 B 0x36F3268
	0x036F31EC CBZ W22, 0x36F3208
	0x036F31F0 CBZ X21, 0x36F3288
	0x036F31F4 LDR X8, [X19 + 0x10]
	0x036F31F8 LDR X9, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCEE000
	006 Move W8, [X20+2993]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0xA2A000
	013 Move X0, [X0+3624]
	014 Call 0x1C17CF4
	015 Move X0, 0xA4E000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move X0, 0xA4E000
	019 Move X0, [X0+2560]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2993], W8
	023 Move W8, [X19+16]
	024 Compare W8, 0
	025 JumpIfEqual {110}
	026 Move X20, [X19+32]
	027 Compare X20, 0
	028 JumpIfEqual {109}
	029 Move X10, 0xA4E000
	030 Move X8, [X20]
	031 Move X10, [X10+2536]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move X0, X20
	043 Move W2, W31
	044 Call 0x1C5D788
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Add X8, X8, X9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X20
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {109}
	056 Move X20, 0xA4E000
	057 Move X20, [X20+2560]
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X21, 0xCEE000
	064 Move W8, [X21+3040]
	065 Compare W8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, 0xA4E000
	068 Move X0, [X0+2560]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X21+3040], W8
	072 Move X0, [X20]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X20]
	078 Move X8, [X0+184]
	079 Move X20, [X8+8]
	080 Compare X20, 0
	081 JumpIfEqual {115}
	082 Move X10, 0xA2A000
	083 Move X8, [X20]
	084 Move X21, [X19+24]
	085 Move X10, [X10+3624]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X1, [X10]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move W2, 1
	097 Move X0, X20
	098 Call 0x1C5D788
	099 Move W9, [X10]
	100 Add W9, W9, 1
	101 Add X8, X8, W9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X2, [X0+8]
	105 Move X0, X20
	106 Move X1, X21
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move [X19+32], X31
	109 Move [X19+16], W31
	110 Move X20, [X31+16]
	111 Move X19, [X31+24]
	112 Move X30, [X31+32]
	113 Move X21, [X31+40]
	114 Return 
	115 Call 0x1C17F20

Method: System.Boolean IsValid()

Disassembly:
	0x036F4D08 LDP X26, X25, [X31 + 0x10]
	0x036F4D0C MOV W0, W8
	0x036F4D10 LDR X30, [X31], #0x50
	0x036F4D14 RET
	0x036F4D18 BL 0x1C16F20
	0x036F4D1C BL 0x1C16F20
	0x036F4D20 BL 0x1C16F20
	0x036F4D24 BL 0x1C16F20

ISIL:
	001 Move X8, [X0+24]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0+32]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Boolean get_isInitialized()

Disassembly:
	0x036F8624 ADRP X0, 0xA48000
	0x036F8628 LDR X0, [X0 + 0xC58]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_isInitialized(System.Boolean value)

Disassembly:
	0x036F862C BL 0x1C16D08
	0x036F8630 MOV X1, X0
	0x036F8634 MOV X0, X20

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x036F4100 ADD X10, X10, 0x10
	0x036F4104 B.NE 0x36F40F0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

