Type: UnityEngine.Animations.Rigging.WeightedTransformArray

Method: System.Void .ctor(System.Int32 size)

Disassembly:
	0x036F8740 CBNZ W8, 0x36F874C
	0x036F8744 BL 0x1C16DFC
	0x036F8748 LDR X0, [X25]
	0x036F874C LDR X8, [X0 + 0xB8]
	0x036F8750 LDR W8, [X8]
	0x036F8754 CMP W23, W8
	0x036F8758 B.GE 0x36F8830
	0x036F875C LDR W8, [X0 + 0xE0]
	0x036F8760 CBNZ W8, 0x36F8768
	0x036F8764 BL 0x1C16DFC
	0x036F8768 MOV X0, X19
	0x036F876C MOV W1, W22
	0x036F8770 BL 0x36F8534
	0x036F8774 LDR W23, [X19]
	0x036F8778 CMP W23, W22
	0x036F877C B.LE 0x36F87C4
	0x036F8780 LDR X0, [X25]
	0x036F8784 LDR W8, [X0 + 0xE0]
	0x036F8788 CBNZ W8, 0x36F8790
	0x036F878C BL 0x1C16DFC
	0x036F8790 CMP W23, W22
	0x036F8794 B.LE 0x36F87F8
	0x036F8798 SUB W24, W23, 0x1
	0x036F879C MOV X0, X19
	0x036F87A0 MOV W1, W24
	0x036F87A4 BL 0x36F7D0C
	0x036F87A8 MOV X2, X0
	0x036F87AC MOV X3, X1
	0x036F87B0 MOV X0, X19
	0x036F87B4 MOV W1, W23
	0x036F87B8 BL 0x36F7AB8
	0x036F87BC MOV W23, W24
	0x036F87C0 B 0x36F8780
	0x036F87C4 LDR X0, [X25]
	0x036F87C8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCE9000
	007 Move X22, 0xA26000
	008 Move W8, [X21+2995]
	009 Move X22, [X22+2400]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA26000
	017 Move X0, [X0+2400]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2995], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W0, W20
	027 Call WeightedTransformArray.ClampSize, X0
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 Move [X19], W0
	030 Move [X19+8], V0
	031 Move [X19+24], V0
	032 Move [X19+40], V0
	033 Move [X19+56], V0
	034 Move [X19+72], V0
	035 Move [X19+88], V0
	036 Move [X19+104], V0
	037 Move [X19+120], V0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.Animations.Rigging.WeightedTransform> GetEnumerator()

Disassembly:
	0x036EF038 MOV X20, X0
	0x036EF03C LDR X1, [X8]
	0x036EF040 BL 0x301B7C4
	0x036EF044 STR X20, [X19 + 0x8]
	0x036EF048 MOV X0, X20
	0x036EF04C LDP X20, X19, [X31 + 0x10]
	0x036EF050 LDR X30, [X31], #0x20
	0x036EF054 RET
	0x036EF058 STP X30, X21, [X31 - 0x20]!
	0x036EF05C STP X20, X19, [X31 + 0x10]
	0x036EF060 ADRP X21, 0xCF1000
	0x036EF064 LDRB W8, [X21 + 0xB5F]
	0x036EF068 MOV X20, X1
	0x036EF06C MOV X19, X0
	0x036EF070 TBNZ X8, 0x0, 0x36EF088
	0x036EF074 ADRP X0, 0xA0B000
	0x036EF078 LDR X0, [X0 + 0x8B8]
	0x036EF07C BL 0x1C16CF4
	0x036EF080 MOVZ W8, 0x1
	0x036EF084 STRB W8, [X21 + 0xB5F]
	0x036EF088 STR X20, [X19 + 0x8]
	0x036EF08C CBZ X20, 0x36EF0BC
	0x036EF090 LDR W8, [X20 + 0x18]
	0x036EF094 LDR W9, [X19]
	0x036EF098 SUB W8, W8, 0x1
	0x036EF09C CMP W9, W8
	0x036EF0A0 CSEL W8, W8, W9, GT

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], X30
	003 Move [X31+152], X21
	004 Move [X31+160], X20
	005 Move [X31+168], X19
	006 Move X21, 0xCF2000
	007 Move X20, 0xA52000
	008 Move W8, [X21+2996]
	009 Move X20, [X20+2176]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA52000
	016 Move X0, [X0+2176]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2996], W8
	020 Add X0, X31, 0
	021 Move W2, 136
	022 Move X1, X19
	023 Call 0x3EB2AC0
	024 Move X0, [X20]
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Add X1, X31, 0
	027 Move [X31+136], D0
	028 Call 0x1C17E04
	029 Move X20, [X31+160]
	030 Move X19, [X31+168]
	031 Move X30, [X31+144]
	032 Move X21, [X31+152]
	033 Add X31, X31, 176
	034 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x036F8858 STR W8, [X31 + 0xC]
	0x036F885C LDR X0, [X0 + 0x758]
	0x036F8860 BL 0x1C16D08
	0x036F8864 ADD X1, X31, 0xC
	0x036F8868 BL 0x1C16E04
	0x036F886C MOV X19, X0
	0x036F8870 ADRP X0, 0xA48000
	0x036F8874 LDR X0, [X0 + 0xC18]
	0x036F8878 BL 0x1C16D08
	0x036F887C MOV X1, X19
	0x036F8880 MOV X2, X31
	0x036F8884 BL 0x321EFD0
	0x036F8888 MOV X19, X0
	0x036F888C ADRP X0, 0xA03000
	0x036F8890 LDR X0, [X0 + 0x578]
	0x036F8894 BL 0x1C16D08
	0x036F8898 BL 0x1C16F10
	0x036F889C MOV X1, X19
	0x036F88A0 MOV X2, X31
	0x036F88A4 MOV X20, X0
	0x036F88A8 BL 0x3314A68
	0x036F88AC ADRP X0, 0xA48000
	0x036F88B0 LDR X0, [X0 + 0xC60]
	0x036F88B4 BL 0x1C16D08
	0x036F88B8 MOV X1, X0
	0x036F88BC MOV X0, X20
	0x036F88C0 BL 0x1C16DEC

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], X30
	003 Move [X31+152], X21
	004 Move [X31+160], X20
	005 Move [X31+168], X19
	006 Move X21, 0xCE9000
	007 Move X20, 0xA49000
	008 Move W8, [X21+2997]
	009 Move X20, [X20+2176]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA49000
	016 Move X0, [X0+2176]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2997], W8
	020 Add X0, X31, 0
	021 Move W2, 136
	022 Move X1, X19
	023 Call 0x3EB2AC0
	024 Move X0, [X20]
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Add X1, X31, 0
	027 Move [X31+136], D0
	028 Call 0x1C17E04
	029 Move X20, [X31+160]
	030 Move X19, [X31+168]
	031 Move X30, [X31+144]
	032 Move X21, [X31+152]
	033 Add X31, X31, 176
	034 Return X0

Method: System.Int32 System.Collections.IList.Add(System.Object value)

Disassembly:
	0x036F88C4 STR D8, [X31 - 0x30]!
	0x036F88C8 STR X30, [X31 + 0x8]
	0x036F88CC STP X22, X21, [X31 + 0x10]
	0x036F88D0 STP X20, X19, [X31 + 0x20]
	0x036F88D4 ADRP X21, 0xCE8000
	0x036F88D8 ADRP X22, 0xA25000
	0x036F88DC LDRB W8, [X21 + 0xBC7]
	0x036F88E0 LDR X22, [X22 + 0x960]
	0x036F88E4 MOV V8.16B, V0.16B
	0x036F88E8 MOV W19, W1
	0x036F88EC MOV X20, X0
	0x036F88F0 TBNZ X8, 0x0, 0x36F8908
	0x036F88F4 ADRP X0, 0xA25000
	0x036F88F8 LDR X0, [X0 + 0x960]
	0x036F88FC BL 0x1C16CF4
	0x036F8900 MOVZ W8, 0x1
	0x036F8904 STRB W8, [X21 + 0xBC7]
	0x036F8908 LDR X0, [X22]
	0x036F890C LDR W8, [X0 + 0xE0]
	0x036F8910 CBNZ W8, 0x36F8918
	0x036F8914 BL 0x1C16DFC
	0x036F8918 MOV X0, X20
	0x036F891C MOV W1, W19
	0x036F8920 BL 0x36F7D0C
	0x036F8924 AND X8, X1, 0x0
	0x036F8928 MOV X2, X0
	0x036F892C MOV X0, X20
	0x036F8930 MOV W1, W19
	0x036F8934 LDP X20, X19, [X31 + 0x20]
	0x036F8938 LDP X22, X21, [X31 + 0x10]
	0x036F893C LDR X30, [X31 + 0x8]
	0x036F8940 FMOV W9, S8
	0x036F8944 ORR X3, X8, X9, 0x0
	0x036F8948 LDR V8, [X31], #0x30
	0x036F894C B 0x36F7AB8
	0x036F8950 STR X30, [X31 - 0x30]!
	0x036F8954 STP X22, X21, [X31 + 0x10]
	0x036F8958 STP X20, X19, [X31 + 0x20]
	0x036F895C ADRP X21, 0xCE8000
	0x036F8960 ADRP X22, 0xA25000
	0x036F8964 LDRB W8, [X21 + 0xBC8]
	0x036F8968 LDR X22, [X22 + 0x960]
	0x036F896C MOV W19, W1
	0x036F8970 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCE9000
	007 Move X22, 0xA26000
	008 Move W8, [X21+2998]
	009 Move X22, [X22+2400]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA26000
	017 Move X0, [X0+2400]
	018 Call 0x1C17CF4
	019 Move X0, 0xA49000
	020 Move X0, [X0+2808]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2998], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Compare X20, 0
	030 JumpIfEqual {52}
	031 Move X8, 0xA49000
	032 Move X8, [X8+2808]
	033 Move X9, [X20]
	034 Move X0, X20
	035 Move X1, [X8]
	036 Move X8, [X9+64]
	037 Move X9, [X1+64]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Call 0x1C17E08
	040 Move X1, [X0]
	041 Move X2, [X0+8]
	042 Move X0, X19
	043 Call WeightedTransformArray.Add, X0, X1
	044 Move W8, [X19]
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Subtract W0, W8, 1
	050 Move X30, [X31+48]
	051 Return X0
	052 Call 0x1C17F20
	053 Call 0x1C181E0

Method: System.Void Add(UnityEngine.Animations.Rigging.WeightedTransform value)

Disassembly:
	0x036F8974 TBNZ X8, 0x0, 0x36F898C
	0x036F8978 ADRP X0, 0xA25000
	0x036F897C LDR X0, [X0 + 0x960]
	0x036F8980 BL 0x1C16CF4
	0x036F8984 MOVZ W8, 0x1
	0x036F8988 STRB W8, [X21 + 0xBC8]
	0x036F898C LDR X0, [X22]
	0x036F8990 LDR W8, [X0 + 0xE0]
	0x036F8994 CBNZ W8, 0x36F899C
	0x036F8998 BL 0x1C16DFC
	0x036F899C MOV X0, X20
	0x036F89A0 MOV W1, W19
	0x036F89A4 BL 0x36F7D0C
	0x036F89A8 LDP X20, X19, [X31 + 0x20]
	0x036F89AC LDP X22, X21, [X31 + 0x10]
	0x036F89B0 FMOV S0, W1
	0x036F89B4 LDR X30, [X31], #0x30
	0x036F89B8 RET
	0x036F89BC STP X30, X23, [X31 - 0x30]!
	0x036F89C0 STP X22, X21, [X31 + 0x10]
	0x036F89C4 STP X20, X19, [X31 + 0x20]
	0x036F89C8 ADRP X22, 0xCE8000
	0x036F89CC ADRP X23, 0xA25000
	0x036F89D0 LDRB W8, [X22 + 0xBC9]
	0x036F89D4 LDR X23, [X23 + 0x960]
	0x036F89D8 MOV X19, X2
	0x036F89DC MOV W20, W1
	0x036F89E0 MOV X21, X0
	0x036F89E4 TBNZ X8, 0x0, 0x36F89FC
	0x036F89E8 ADRP X0, 0xA25000
	0x036F89EC LDR X0, [X0 + 0x960]
	0x036F89F0 BL 0x1C16CF4
	0x036F89F4 MOVZ W8, 0x1
	0x036F89F8 STRB W8, [X22 + 0xBC9]
	0x036F89FC LDR X0, [X23]
	0x036F8A00 LDR W8, [X0 + 0xE0]
	0x036F8A04 CBNZ W8, 0x36F8A0C
	0x036F8A08 BL 0x1C16DFC
	0x036F8A0C MOV X0, X21
	0x036F8A10 MOV W1, W20
	0x036F8A14 BL 0x36F7D0C
	0x036F8A18 MOV X3, X1
	0x036F8A1C MOV X0, X21
	0x036F8A20 MOV W1, W20
	0x036F8A24 MOV X2, X19
	0x036F8A28 LDP X20, X19, [X31 + 0x20]
	0x036F8A2C LDP X22, X21, [X31 + 0x10]
	0x036F8A30 LDP X30, X23, [X31], #0x30
	0x036F8A34 B 0x36F7AB8
	0x036F8A38 STR X30, [X31 - 0x30]!
	0x036F8A3C STP X22, X21, [X31 + 0x10]
	0x036F8A40 STP X20, X19, [X31 + 0x20]
	0x036F8A44 ADRP X21, 0xCE8000
	0x036F8A48 ADRP X22, 0xA25000
	0x036F8A4C LDRB W8, [X21 + 0xBCA]
	0x036F8A50 LDR X22, [X22 + 0x960]
	0x036F8A54 MOV W19, W1
	0x036F8A58 MOV X20, X0
	0x036F8A5C TBNZ X8, 0x0, 0x36F8A74
	0x036F8A60 ADRP X0, 0xA25000
	0x036F8A64 LDR X0, [X0 + 0x960]
	0x036F8A68 BL 0x1C16CF4
	0x036F8A6C MOVZ W8, 0x1
	0x036F8A70 STRB W8, [X21 + 0xBCA]
	0x036F8A74 LDR X0, [X22]
	0x036F8A78 LDR W8, [X0 + 0xE0]
	0x036F8A7C CBNZ W8, 0x36F8A84
	0x036F8A80 BL 0x1C16DFC
	0x036F8A84 MOV X0, X20
	0x036F8A88 MOV W1, W19
	0x036F8A8C LDP X20, X19, [X31 + 0x20]
	0x036F8A90 LDP X22, X21, [X31 + 0x10]
	0x036F8A94 LDR X30, [X31], #0x30
	0x036F8A98 B 0x36F7D0C
	0x036F8A9C SUB X31, X31, 0x40
	0x036F8AA0 STR X30, [X31 + 0x10]
	0x036F8AA4 STP X22, X21, [X31 + 0x20]
	0x036F8AA8 STP X20, X19, [X31 + 0x30]
	0x036F8AAC ADRP X22, 0xCE8000
	0x036F8AB0 ADRP X21, 0xA25000
	0x036F8AB4 LDRB W8, [X22 + 0xBCC]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xCE9000
	009 Move X22, 0xA26000
	010 Move W8, [X23+2999]
	011 Move X22, [X22+2400]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xA26000
	020 Move X0, [X0+2400]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+2999], W8
	024 Move X0, [X22]
	025 Move W23, [X19]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X22]
	031 Move X8, [X0+184]
	032 Move W8, [X8]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, [X0+224]
	035 Move W22, [X19]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move W1, W22
	041 Move X2, X21
	042 Move X3, X20
	043 Call WeightedTransformArray.Set, X0, X1, X2
	044 Move W8, [X19]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X30, [X31+16]
	048 Move X23, [X31+24]
	049 Add W8, W8, 1
	050 Move [X19], W8
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Add X31, X31, 64
	054 Return 
	055 Move X19, 0xA26000
	056 Move X19, [X19+2400]
	057 Move X0, X19
	058 Call 0x1C17D08
	059 Call 0x19913D0
	060 Move X0, X19
	061 Call 0x1C17D08
	062 Move X8, [X0+184]
	063 Move X0, 0x9FC000
	064 Move W8, [X8]
	065 Move [X31+12], W8
	066 Move X0, [X0+1880]
	067 Call 0x1C17D08
	068 Add X1, X31, 12
	069 Call 0x1C17E04
	070 Move X19, X0
	071 Move X0, 0xA49000
	072 Move X0, [X0+3096]
	073 Call 0x1C17D08
	074 Move X1, X19
	075 Move X2, X31
	076 Call String.Format, X0, X1
	077 Move X19, X0
	078 Move X0, 0xA04000
	079 Move X0, [X0+1400]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X1, X19
	083 Move X2, X31
	084 Move X20, X0
	085 Call ArgumentException..ctor, X0, X1
	086 Move X0, 0xA49000
	087 Move X0, [X0+3104]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X20
	091 Call 0x1C17DEC

Method: System.Void Clear()

Disassembly:
	0x036EF178 LDR X0, [X0 + 0x940]
	0x036EF17C BL 0x1C16CF4

ISIL:
	001 Move [X0], W31
	002 Return 

Method: System.Int32 System.Collections.IList.IndexOf(System.Object value)

Disassembly:
	0x036F8BB4 B.NE 0x36F8BDC
	0x036F8BB8 BL 0x1C16E08
	0x036F8BBC LDP X2, X3, [X0]
	0x036F8BC0 MOV X0, X20
	0x036F8BC4 MOV W1, W19
	0x036F8BC8 LDP X20, X19, [X31 + 0x20]
	0x036F8BCC LDP X22, X21, [X31 + 0x10]
	0x036F8BD0 LDP X30, X23, [X31], #0x30
	0x036F8BD4 B 0x36F7AB8
	0x036F8BD8 BL 0x1C16F20
	0x036F8BDC BL 0x1C171E0
	0x036F8BE0 STR X30, [X31 - 0x40]!
	0x036F8BE4 STP X24, X23, [X31 + 0x10]
	0x036F8BE8 STP X22, X21, [X31 + 0x20]
	0x036F8BEC STP X20, X19, [X31 + 0x30]
	0x036F8BF0 ADRP X24, 0xCE8000
	0x036F8BF4 ADRP X23, 0xA25000
	0x036F8BF8 LDRB W8, [X24 + 0xBCF]
	0x036F8BFC LDR X23, [X23 + 0x960]
	0x036F8C00 MOV X19, X3
	0x036F8C04 MOV X20, X2
	0x036F8C08 MOV W21, W1
	0x036F8C0C MOV X22, X0
	0x036F8C10 TBNZ X8, 0x0, 0x36F8C28
	0x036F8C14 ADRP X0, 0xA25000
	0x036F8C18 LDR X0, [X0 + 0x960]
	0x036F8C1C BL 0x1C16CF4
	0x036F8C20 MOVZ W8, 0x1
	0x036F8C24 STRB W8, [X24 + 0xBCF]
	0x036F8C28 LDR X0, [X23]
	0x036F8C2C LDR W8, [X0 + 0xE0]
	0x036F8C30 CBNZ W8, 0x36F8C38
	0x036F8C34 BL 0x1C16DFC
	0x036F8C38 MOV X0, X22
	0x036F8C3C MOV W1, W21
	0x036F8C40 MOV X2, X20
	0x036F8C44 MOV X3, X19
	0x036F8C48 LDP X20, X19, [X31 + 0x30]
	0x036F8C4C LDP X22, X21, [X31 + 0x20]
	0x036F8C50 LDP X24, X23, [X31 + 0x10]
	0x036F8C54 LDR X30, [X31], #0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCE9000
	007 Move X22, 0xA26000
	008 Move W8, [X21+3000]
	009 Move X22, [X22+2400]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA26000
	017 Move X0, [X0+2400]
	018 Call 0x1C17CF4
	019 Move X0, 0xA49000
	020 Move X0, [X0+2808]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3000], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Compare X20, 0
	030 JumpIfEqual {48}
	031 Move X8, 0xA49000
	032 Move X8, [X8+2808]
	033 Move X9, [X20]
	034 Move X0, X20
	035 Move X1, [X8]
	036 Move X8, [X9+64]
	037 Move X9, [X1+64]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Call 0x1C17E08
	040 Move X1, [X0]
	041 Move X2, [X0+8]
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Call 0x1C17F20
	049 Call 0x1C181E0

Method: System.Int32 IndexOf(UnityEngine.Animations.Rigging.WeightedTransform value)

Disassembly:
	0x036F8C58 B 0x36F7AB8
	0x036F8C5C LDR W0, [X0]
	0x036F8C60 RET
	0x036F8C64 MOV W0, W31
	0x036F8C68 RET
	0x036F8C6C MOV W0, W31
	0x036F8C70 RET
	0x036F8C74 MOVZ W0, 0x1
	0x036F8C78 RET
	0x036F8C7C MOV X0, X31
	0x036F8C80 RET
	0x036F8C84 STR X30, [X31 - 0x20]!
	0x036F8C88 STP X20, X19, [X31 + 0x10]
	0x036F8C8C ADRP X19, 0xCE8000
	0x036F8C90 ADRP X20, 0xA25000
	0x036F8C94 LDRB W8, [X19 + 0xBD0]
	0x036F8C98 LDR X20, [X20 + 0x960]
	0x036F8C9C TBNZ X8, 0x0, 0x36F8CB4
	0x036F8CA0 ADRP X0, 0xA25000
	0x036F8CA4 LDR X0, [X0 + 0x960]
	0x036F8CA8 BL 0x1C16CF4
	0x036F8CAC MOVZ W8, 0x1
	0x036F8CB0 STRB W8, [X19 + 0xBD0]
	0x036F8CB4 LDR X8, [X20]
	0x036F8CB8 LDP X20, X19, [X31 + 0x10]
	0x036F8CBC MOVZ W9, 0x8
	0x036F8CC0 LDR X8, [X8 + 0xB8]
	0x036F8CC4 STR W9, [X8]
	0x036F8CC8 LDR X30, [X31], #0x20
	0x036F8CCC RET
	0x036F8CD0 STP X30, X21, [X31 - 0x20]!
	0x036F8CD4 STP X20, X19, [X31 + 0x10]
	0x036F8CD8 ADRP X21, 0xCE8000
	0x036F8CDC ADRP X20, 0xA25000
	0x036F8CE0 LDRB W8, [X21 + 0xBD1]
	0x036F8CE4 LDR X20, [X20 + 0x960]
	0x036F8CE8 MOV X19, X0
	0x036F8CEC TBNZ X8, 0x0, 0x36F8D04
	0x036F8CF0 ADRP X0, 0xA25000
	0x036F8CF4 LDR X0, [X0 + 0x960]
	0x036F8CF8 BL 0x1C16CF4
	0x036F8CFC MOVZ W8, 0x1
	0x036F8D00 STRB W8, [X21 + 0xBD1]
	0x036F8D04 LDR W8, [X19 + 0x88]
	0x036F8D08 ADD W21, W8, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xCE9000
	009 Move W8, [X22+3001]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xA26000
	018 Move X0, [X0+2400]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3001], W8
	022 Move W8, [X21]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X23, 0xA26000
	025 Move X23, [X23+2400]
	026 Move W22, W31
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move W1, W22
	034 Call WeightedTransformArray.Get, X0, X1
	035 Move [X31], X0
	036 Move [X31+8], X1
	037 Add X0, X31, 0
	038 Move X1, X20
	039 Move X2, X19
	040 Call WeightedTransform.Equals, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {51}
	045 Move W8, [X21]
	046 Add W22, W22, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move TEMP, 0
	049 Not TEMP
	050 Move W22, TEMP
	051 Move W0, W22
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X30, [X31+16]
	057 Move X23, [X31+24]
	058 Add X31, X31, 64
	059 Return X0

Method: System.Boolean System.Collections.IList.Contains(System.Object value)

Disassembly:
	0x036F8DFC LDP X30, X21, [X31 + 0x10]
	0x036F8E00 ADD X31, X31, 0x30
	0x036F8E04 RET
	0x036F8E08 MOV X1, X31
	0x036F8E0C B 0x3C303D4
	0x036F8E10 MOV X1, X31
	0x036F8E14 B 0x33A51F0
	0x036F8E18 STP X30, X21, [X31 - 0x20]!
	0x036F8E1C STP X20, X19, [X31 + 0x10]
	0x036F8E20 ADRP X20, 0xCE8000
	0x036F8E24 ADRP X19, 0xA48000
	0x036F8E28 ADRP X21, 0xA25000
	0x036F8E2C LDRB W8, [X20 + 0xBD4]
	0x036F8E30 LDR X19, [X19 + 0xC68]
	0x036F8E34 LDR X21, [X21 + 0x140]
	0x036F8E38 TBNZ X8, 0x0, 0x36F8E5C
	0x036F8E3C ADRP X0, 0xA25000
	0x036F8E40 LDR X0, [X0 + 0x140]
	0x036F8E44 BL 0x1C16CF4
	0x036F8E48 ADRP X0, 0xA48000
	0x036F8E4C LDR X0, [X0 + 0xC68]
	0x036F8E50 BL 0x1C16CF4
	0x036F8E54 MOVZ W8, 0x1
	0x036F8E58 STRB W8, [X20 + 0xBD4]
	0x036F8E5C LDR X8, [X21]
	0x036F8E60 LDR X9, [X19]
	0x036F8E64 LDP X20, X19, [X31 + 0x10]
	0x036F8E68 LDR X8, [X8 + 0xB8]
	0x036F8E6C STR X9, [X8]
	0x036F8E70 LDP X30, X21, [X31], #0x20
	0x036F8E74 RET
	0x036F8E78 STP X30, X21, [X31 - 0x20]!
	0x036F8E7C STP X20, X19, [X31 + 0x10]
	0x036F8E80 ADRP X20, 0xCE8000
	0x036F8E84 ADRP X19, 0xA48000
	0x036F8E88 ADRP X21, 0xA24000
	0x036F8E8C LDRB W8, [X20 + 0xBD5]
	0x036F8E90 LDR X19, [X19 + 0xC68]
	0x036F8E94 LDR X21, [X21 + 0xE20]
	0x036F8E98 TBNZ X8, 0x0, 0x36F8EBC
	0x036F8E9C ADRP X0, 0xA24000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCE9000
	007 Move X22, 0xA26000
	008 Move W8, [X21+3002]
	009 Move X22, [X22+2400]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA26000
	017 Move X0, [X0+2400]
	018 Call 0x1C17CF4
	019 Move X0, 0xA49000
	020 Move X0, [X0+2808]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3002], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Compare X20, 0
	030 JumpIfEqual {48}
	031 Move X8, 0xA49000
	032 Move X8, [X8+2808]
	033 Move X9, [X20]
	034 Move X0, X20
	035 Move X1, [X8]
	036 Move X8, [X9+64]
	037 Move X9, [X1+64]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Call 0x1C17E08
	040 Move X1, [X0]
	041 Move X2, [X0+8]
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Call 0x1C17F20
	049 Call 0x1C181E0

Method: System.Boolean Contains(UnityEngine.Animations.Rigging.WeightedTransform value)

Disassembly:
	0x036F8EA0 LDR X0, [X0 + 0xE20]
	0x036F8EA4 BL 0x1C16CF4
	0x036F8EA8 ADRP X0, 0xA48000
	0x036F8EAC LDR X0, [X0 + 0xC68]
	0x036F8EB0 BL 0x1C16CF4
	0x036F8EB4 MOVZ W8, 0x1
	0x036F8EB8 STRB W8, [X20 + 0xBD5]
	0x036F8EBC LDR X8, [X21]
	0x036F8EC0 LDR X9, [X19]
	0x036F8EC4 LDP X20, X19, [X31 + 0x10]
	0x036F8EC8 LDR X8, [X8 + 0xB8]
	0x036F8ECC STR X9, [X8]
	0x036F8ED0 LDP X30, X21, [X31], #0x20
	0x036F8ED4 RET
	0x036F8ED8 B 0x36ECF70
	0x036F8EDC B 0x36F8EE0
	0x036F8EE0 STR X30, [X31 - 0x30]!
	0x036F8EE4 STP X22, X21, [X31 + 0x10]
	0x036F8EE8 STP X20, X19, [X31 + 0x20]
	0x036F8EEC ADRP X20, 0xCE8000
	0x036F8EF0 ADRP X22, 0x9FB000
	0x036F8EF4 LDRB W8, [X20 + 0xBDE]
	0x036F8EF8 LDR X22, [X22 + 0xAC8]
	0x036F8EFC MOV X19, X1
	0x036F8F00 MOV X21, X0
	0x036F8F04 TBNZ X8, 0x0, 0x36F8F28
	0x036F8F08 ADRP X0, 0x9FB000
	0x036F8F0C LDR X0, [X0 + 0xAC8]
	0x036F8F10 BL 0x1C16CF4
	0x036F8F14 ADRP X0, 0x9FC000
	0x036F8F18 LDR X0, [X0 + 0xEC8]
	0x036F8F1C BL 0x1C16CF4
	0x036F8F20 MOVZ W8, 0x1
	0x036F8F24 STRB W8, [X20 + 0xBDE]
	0x036F8F28 LDR X0, [X22]
	0x036F8F2C MOVZ W1, 0x5
	0x036F8F30 BL 0x1C16D6C
	0x036F8F34 CBZ X21, 0x36F8FF4
	0x036F8F38 MOV X20, X0
	0x036F8F3C MOV X0, X21
	0x036F8F40 MOV X1, X31
	0x036F8F44 BL 0x3C32E90
	0x036F8F48 CBZ X0, 0x36F8FF4
	0x036F8F4C MOV X1, X31
	0x036F8F50 BL 0x3C385F8
	0x036F8F54 STR W0, [X31 + 0xC]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xCE9000
	009 Move W8, [X22+3003]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xA26000
	018 Move X0, [X0+2400]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3003], W8
	022 Move W8, [X21]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X23, 0xA26000
	025 Move X23, [X23+2400]
	026 Move W22, W31
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move W1, W22
	034 Call WeightedTransformArray.Get, X0, X1
	035 Move [X31], X0
	036 Move [X31+8], X1
	037 Add X0, X31, 0
	038 Move X1, X20
	039 Move X2, X19
	040 Call WeightedTransform.Equals, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {49}
	045 Move W8, [X21]
	046 Add W22, W22, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W0, W31
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X30, [X31+16]
	054 Move X23, [X31+24]
	055 And W0, W0, 1
	056 Add X31, X31, 64
	057 Return X0

Method: System.Void System.Collections.ICollection.CopyTo(System.Array array, System.Int32 arrayIndex)

Disassembly:
	0x036F8F58 ADD X0, X31, 0xC
	0x036F8F5C MOV X1, X31
	0x036F8F60 BL 0x337B6E0
	0x036F8F64 CBZ X20, 0x36F8FF4
	0x036F8F68 LDR W8, [X20 + 0x18]
	0x036F8F6C CBZ W8, 0x36F8FF0
	0x036F8F70 CMP W8, 0x1
	0x036F8F74 STR X0, [X20 + 0x20]
	0x036F8F78 B.EQ 0x36F8FF0
	0x036F8F7C ADRP X22, 0x9FC000
	0x036F8F80 LDR X22, [X22 + 0xEC8]
	0x036F8F84 MOV X0, X21
	0x036F8F88 MOV X1, X31
	0x036F8F8C LDR X8, [X22]
	0x036F8F90 STR X8, [X20 + 0x28]
	0x036F8F94 BL 0x33BE520
	0x036F8F98 CBZ X0, 0x36F8FA8
	0x036F8F9C LDR X8, [X0]
	0x036F8FA0 LDP X9, X1, [X8 + 0x168]
	0x036F8FA4 BLR X9
	0x036F8FA8 LDR W8, [X20 + 0x18]
	0x036F8FAC CMP W8, 0x2
	0x036F8FB0 B.LS 0x36F8FF0
	0x036F8FB4 CMP W8, 0x3
	0x036F8FB8 STR X0, [X20 + 0x30]
	0x036F8FBC B.EQ 0x36F8FF0
	0x036F8FC0 LDR X9, [X22]
	0x036F8FC4 CMP W8, 0x4
	0x036F8FC8 STR X9, [X20 + 0x38]
	0x036F8FCC B.LS 0x36F8FF0
	0x036F8FD0 MOV X0, X20
	0x036F8FD4 MOV X1, X31
	0x036F8FD8 STR X19, [X20 + 0x40]
	0x036F8FDC BL 0x32278CC
	0x036F8FE0 LDP X20, X19, [X31 + 0x20]
	0x036F8FE4 LDP X22, X21, [X31 + 0x10]
	0x036F8FE8 LDR X30, [X31], #0x30
	0x036F8FEC RET
	0x036F8FF0 BL 0x1C16F28
	0x036F8FF4 BL 0x1C16F20
	0x036F8FF8 STP D9, D8, [X31 - 0x20]!
	0x036F8FFC STP X30, X19, [X31 + 0x10]
	0x036F9000 MOVZ W8, 0x3F800000
	0x036F9004 MOV X1, X31
	0x036F9008 MOV V8.16B, V1.16B
	0x036F900C MOV V9.16B, V0.16B
	0x036F9010 MOV X19, X0
	0x036F9014 STR W8, [X0 + 0x18]
	0x036F9018 BL 0x3C303D4
	0x036F901C STP S9, S8, [X19 + 0x14]
	0x036F9020 LDP X30, X19, [X31 + 0x10]
	0x036F9024 LDP D9, D8, [X31], #0x20
	0x036F9028 RET
	0x036F902C LDR X0, [X0 + 0x10]
	0x036F9030 RET
	0x036F9034 LDR X9, [X0 + 0x48]
	0x036F9038 LDUR V0, [X0 + 0x38]
	0x036F903C LDUR V1, [X0 + 0x28]
	0x036F9040 LDUR V2, [X0 + 0x18]
	0x036F9044 STR X9, [X8 + 0x30]
	0x036F9048 STP V1, V0, [X8 + 0x10]
	0x036F904C STR V2, [X8]
	0x036F9050 RET
	0x036F9054 LDRB W0, [X0 + 0x50]
	0x036F9058 RET
	0x036F905C AND W8, W1, 0x1
	0x036F9060 STRB W8, [X0 + 0x50]
	0x036F9064 RET
	0x036F9068 STR X1, [X0 + 0x10]
	0x036F906C LDR X8, [X2 + 0x30]
	0x036F9070 LDP V1, V0, [X2 + 0x10]
	0x036F9074 LDR V2, [X2]
	0x036F9078 STR X8, [X0 + 0x48]
	0x036F907C STUR V0, [X0 + 0x38]
	0x036F9080 STUR V1, [X0 + 0x28]
	0x036F9084 STUR V2, [X0 + 0x18]
	0x036F9088 RET
	0x036F908C MOVZ W8, 0x1
	0x036F9090 MOV X1, X31
	0x036F9094 STRB W8, [X0 + 0x50]
	0x036F9098 B 0x33BDD8C
	0x036F909C STP X30, X19, [X31 - 0x10]!
	0x036F90A0 MOV V5.16B, V1.16B
	0x036F90A4 LDP S4, S1, [X0 + 0xC]
	0x036F90A8 MOV V6.16B, V2.16B
	0x036F90AC LDP S2, S3, [X0 + 0x14]
	0x036F90B0 MOV V7.16B, V0.16B
	0x036F90B4 MOV X19, X0
	0x036F90B8 MOV V0.16B, V4.16B
	0x036F90BC MOV V4.16B, V7.16B
	0x036F90C0 MOV X0, X31
	0x036F90C4 BL 0x3C2A9FC
	0x036F90C8 LDP S3, S4, [X19]
	0x036F90CC LDR V5, [X19 + 0x8]
	0x036F90D0 FADD S0, S0, S3
	0x036F90D4 FADD S1, S1, S4
	0x036F90D8 FADD S2, S2, S5
	0x036F90DC LDP X30, X19, [X31], #0x10
	0x036F90E0 RET
	0x036F90E4 STP X30, X21, [X31 - 0x20]!
	0x036F90E8 STP X20, X19, [X31 + 0x10]
	0x036F90EC ADRP X21, 0xCE7000
	0x036F90F0 ADRP X20, 0xA23000
	0x036F90F4 MOV X19, X8
	0x036F90F8 LDRB W8, [X21 + 0xBD7]
	0x036F90FC LDR X20, [X20 + 0xE40]
	0x036F9100 TBNZ X8, 0x0, 0x36F9118
	0x036F9104 ADRP X0, 0xA23000
	0x036F9108 LDR X0, [X0 + 0xE40]
	0x036F910C BL 0x1C16CF4
	0x036F9110 MOVZ W8, 0x1
	0x036F9114 STRB W8, [X21 + 0xBD7]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0xCE9000
	010 Move W8, [X22+3004]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xA26000
	019 Move X0, [X0+2400]
	020 Call 0x1C17CF4
	021 Move X0, 0xA49000
	022 Move X0, [X0+2808]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3004], W8
	026 Compare X20, 0
	027 JumpIfEqual {82}
	028 Move TEMP, X19
	029 And TEMP, TEMP, -2147483648
	030 Compare TEMP, -2147483648
	031 JumpIfEqual {94}
	032 Move X23, 0xA26000
	033 Move X23, [X23+2400]
	034 Move X0, [X23]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W22, [X21]
	040 Move X0, X20
	041 Move X1, X31
	042 Call Array.get_Length, X0
	043 Subtract W8, W0, W19
	044 Add W8, W8, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, [X21]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X24, 0xA49000
	049 Move X24, [X24+2808]
	050 Move W22, W31
	051 Move X0, [X23]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X21
	057 Move W1, W22
	058 Call WeightedTransformArray.Get, X0, X1
	059 Move X8, [X24]
	060 Move [X31], X0
	061 Move [X31+8], X1
	062 Add X1, X31, 0
	063 Move X0, X8
	064 Call 0x1C17E04
	065 Move X1, X0
	066 Add W2, W19, W22
	067 Move X0, X20
	068 Move X3, X31
	069 Call Array.SetValue, X0, X1, X2
	070 Move W8, [X21]
	071 Add W22, W22, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X20, [X31+64]
	074 Move X19, [X31+72]
	075 Move X22, [X31+48]
	076 Move X21, [X31+56]
	077 Move X24, [X31+32]
	078 Move X23, [X31+40]
	079 Move X30, [X31+16]
	080 Add X31, X31, 80
	081 Return 
	082 Move X0, 0xA00000
	083 Move X0, [X0+1320]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0xA48000
	088 Move X0, [X0+3112]
	089 Call 0x1C17D08
	090 Move X1, X0
	091 Move X0, X19
	092 Move X2, X31
	093 Call ArgumentNullException..ctor, X0, X1
	094 Move X0, 0xA03000
	095 Move X0, [X0+1888]
	096 Call 0x1C17D08
	097 Call 0x1C17F10
	098 Move X19, X0
	099 Move X0, 0xA48000
	100 Move X0, [X0+3120]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Move X2, X31
	105 Call ArgumentOutOfRangeException..ctor, X0, X1
	106 Move X0, 0xA03000
	107 Move X0, [X0+1400]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X19, X0
	111 Move X0, 0xA48000
	112 Move X0, [X0+3128]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Move X2, X31
	117 Call ArgumentException..ctor, X0, X1
	118 Move X0, 0xA48000
	119 Move X0, [X0+3136]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X19
	123 Call 0x1C17DEC

Method: System.Void CopyTo(UnityEngine.Animations.Rigging.WeightedTransform[] array, System.Int32 arrayIndex)

Disassembly:
	0x036F9118 LDR X0, [X20]
	0x036F911C LDR W8, [X0 + 0xE0]
	0x036F9120 CBNZ W8, 0x36F912C
	0x036F9124 BL 0x1C16DFC
	0x036F9128 LDR X0, [X20]
	0x036F912C LDR X8, [X0 + 0xB8]
	0x036F9130 LDUR V0, [X8 + 0xC]
	0x036F9134 LDR V1, [X8]
	0x036F9138 STUR V0, [X19 + 0xC]
	0x036F913C STR V1, [X19]
	0x036F9140 LDP X20, X19, [X31 + 0x10]
	0x036F9144 LDP X30, X21, [X31], #0x20
	0x036F9148 RET
	0x036F914C STP D9, D8, [X31 - 0x30]!
	0x036F9150 STR X30, [X31 + 0x10]
	0x036F9154 STP X20, X19, [X31 + 0x20]
	0x036F9158 ADRP X19, 0xCE7000
	0x036F915C LDRB W8, [X19 + 0xBD8]
	0x036F9160 TBNZ X8, 0x0, 0x36F9178
	0x036F9164 ADRP X0, 0xA23000
	0x036F9168 LDR X0, [X0 + 0xE40]
	0x036F916C BL 0x1C16CF4
	0x036F9170 MOVZ W8, 0x1
	0x036F9174 STRB W8, [X19 + 0xBD8]
	0x036F9178 ADRP X19, 0xCDF000
	0x036F917C LDRB W8, [X19 + 0x783]
	0x036F9180 CBNZ W8, 0x36F9198
	0x036F9184 ADRP X0, 0x9FA000
	0x036F9188 LDR X0, [X0 + 0x5A0]
	0x036F918C BL 0x1C16CF4
	0x036F9190 MOVZ W8, 0x1
	0x036F9194 STRB W8, [X19 + 0x783]
	0x036F9198 ADRP X8, 0x9FA000
	0x036F919C LDR X8, [X8 + 0x5A0]
	0x036F91A0 ADRP X20, 0xCDF000
	0x036F91A4 ADRP X19, 0xA23000
	0x036F91A8 LDRB W9, [X20 + 0x793]
	0x036F91AC LDR X8, [X8]
	0x036F91B0 LDR X8, [X8 + 0xB8]
	0x036F91B4 LDR V9, [X8]
	0x036F91B8 LDR V8, [X8 + 0x8]
	0x036F91BC LDR X19, [X19 + 0xE40]
	0x036F91C0 CBNZ W9, 0x36F91D8
	0x036F91C4 ADRP X0, 0x9FB000
	0x036F91C8 LDR X0, [X0 + 0x5A8]
	0x036F91CC BL 0x1C16CF4
	0x036F91D0 MOVZ W8, 0x1
	0x036F91D4 STRB W8, [X20 + 0x793]
	0x036F91D8 ADRP X8, 0x9FB000
	0x036F91DC LDR X8, [X8 + 0x5A8]
	0x036F91E0 LDR X9, [X19]
	0x036F91E4 LDP X20, X19, [X31 + 0x20]
	0x036F91E8 LDR X30, [X31 + 0x10]
	0x036F91EC LDR X8, [X8]
	0x036F91F0 LDR X9, [X9 + 0xB8]
	0x036F91F4 LDR X8, [X8 + 0xB8]
	0x036F91F8 LDR V0, [X8]
	0x036F91FC STR D9, [X9]
	0x036F9200 STR S8, [X9 + 0x8]
	0x036F9204 STUR V0, [X9 + 0xC]
	0x036F9208 LDP D9, D8, [X31], #0x30
	0x036F920C RET
	0x036F9210 FMUL S3, S1, S1
	0x036F9214 FMUL S4, S2, S2
	0x036F9218 FMUL S0, S0, S0
	0x036F921C FADD S3, S3, S4
	0x036F9220 FMUL S1, S1, S2
	0x036F9224 FSUB S0, S3, S0
	0x036F9228 FMOV S2, 0.5
	0x036F922C FDIV S0, S0, S1
	0x036F9230 FMOV S4, 1
	0x036F9234 FMOV S3, -1
	0x036F9238 FMUL S0, S0, S2
	0x036F923C FMIN S1, S0, S4
	0x036F9240 FCMP S0, S3
	0x036F9244 FCSEL S0, S1, S3, PL
	0x036F9248 B 0x3EB1BB0
	0x036F924C STP D15, D14, [X31 - 0x70]!
	0x036F9250 STP D13, D12, [X31 + 0x10]
	0x036F9254 STP D11, D10, [X31 + 0x20]
	0x036F9258 STP D9, D8, [X31 + 0x30]
	0x036F925C STP X29, X30, [X31 + 0x40]
	0x036F9260 STP X22, X21, [X31 + 0x50]
	0x036F9264 STP X20, X19, [X31 + 0x60]
	0x036F9268 SUB X31, X31, 0x1D0
	0x036F926C STR X4, [X31 + 0x180]
	0x036F9270 STR W5, [X31 + 0x188]
	0x036F9274 STR X6, [X31 + 0x170]
	0x036F9278 STR W7, [X31 + 0x178]
	0x036F927C STR W31, [X31 + 0x168]
	0x036F9280 STP X31, X31, [X31 + 0x158]
	0x036F9284 STR X31, [X31 + 0x150]
	0x036F9288 STR W31, [X31 + 0x148]
	0x036F928C STP X31, X31, [X31 + 0x138]
	0x036F9290 STR X31, [X31 + 0x130]
	0x036F9294 MOV V10.16B, V2.16B
	0x036F9298 MOV V9.16B, V1.16B
	0x036F929C STR S0, [X31 + 0x3C]
	0x036F92A0 LDP V2, V0, [X0 + 0x10]
	0x036F92A4 LDR X9, [X0 + 0x30]
	0x036F92A8 LDR V1, [X0]
	0x036F92AC LDR X22, [X31 + 0x240]
	0x036F92B0 MOV X8, X1
	0x036F92B4 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xCE8000
	010 Move W8, [X21+3005]
	011 Move W22, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xA25000
	019 Move X0, [X0+2400]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3005], W8
	023 Compare X19, 0
	024 JumpIfEqual {77}
	025 Move TEMP, X22
	026 And TEMP, TEMP, -2147483648
	027 Compare TEMP, -2147483648
	028 JumpIfEqual {89}
	029 Move X23, 0xA25000
	030 Move X23, [X23+2400]
	031 Move X0, [X23]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W9, [X19+24]
	037 Move W8, [X20]
	038 Subtract W9, W9, W22
	039 Add W9, W9, 1
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W22, W22
	043 Move X21, X31
	044 Move X24, X22
	045 ShiftRight X24, 32
	046 And X24, X24, 0x7FFFFFFF
	047 Move X25, 1
	048 Move X0, [X23]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move W1, W21
	055 Call WeightedTransformArray.Get, X0, X1
	056 Move W8, [X19+24]
	057 Add X9, X22, X21
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction SBFM not yet implemented."
	060 Add X8, X19, X8
	061 Move [X8+32], X0
	062 Move [X8+40], X1
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 Add X21, X21, 1
	065 Add X24, X24, X25
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Move X25, [X31+72]
	075 Return 
	076 Call 0x1C17F28
	077 Move X0, 0xA00000
	078 Move X0, [X0+1320]
	079 Call 0x1C17D08
	080 Call 0x1C17F10
	081 Move X19, X0
	082 Move X0, 0xA48000
	083 Move X0, [X0+3112]
	084 Call 0x1C17D08
	085 Move X1, X0
	086 Move X0, X19
	087 Move X2, X31
	088 Call ArgumentNullException..ctor, X0, X1
	089 Move X0, 0xA03000
	090 Move X0, [X0+1888]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X19, X0
	094 Move X0, 0xA48000
	095 Move X0, [X0+3120]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Move X2, X31
	100 Call ArgumentOutOfRangeException..ctor, X0, X1
	101 Move X0, 0xA03000
	102 Move X0, [X0+1400]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X19, X0
	106 Move X0, 0xA48000
	107 Move X0, [X0+3128]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X19
	111 Move X2, X31
	112 Call ArgumentException..ctor, X0, X1
	113 Move X0, 0xA48000
	114 Move X0, [X0+3144]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Call 0x1C17DEC

Method: System.Void System.Collections.IList.Remove(System.Object value)

Disassembly:
	0x036F92B8 ADD X1, X31, 0xE0
	0x036F92BC MOV X0, X8
	0x036F92C0 MOV X20, X3
	0x036F92C4 MOV X21, X2
	0x036F92C8 STR X9, [X31 + 0x110]
	0x036F92CC STP V2, V0, [X31 + 0xF0]
	0x036F92D0 STR V1, [X31 + 0xE]
	0x036F92D4 BL 0x36E3374
	0x036F92D8 MOV V11.16B, V0.16B
	0x036F92DC MOV V12.16B, V1.16B
	0x036F92E0 MOV V13.16B, V2.16B
	0x036F92E4 LDR X8, [X19 + 0x30]
	0x036F92E8 LDP V2, V0, [X19 + 0x10]
	0x036F92EC LDR V1, [X19]
	0x036F92F0 ADD X1, X31, 0xA0
	0x036F92F4 MOV X0, X21
	0x036F92F8 STR X8, [X31 + 0xD0]
	0x036F92FC STP V2, V0, [X31 + 0xB0]
	0x036F9300 STR V1, [X31 + 0xA]
	0x036F9304 BL 0x36E3374
	0x036F9308 MOV V14.16B, V0.16B
	0x036F930C MOV V15.16B, V1.16B
	0x036F9310 MOV V8.16B, V2.16B
	0x036F9314 LDR X8, [X19 + 0x30]
	0x036F9318 LDP V2, V0, [X19 + 0x10]
	0x036F931C LDR V1, [X19]
	0x036F9320 ADD X1, X31, 0x60
	0x036F9324 ADD X2, X31, 0x160
	0x036F9328 ADD X3, X31, 0x150
	0x036F932C MOV X0, X20
	0x036F9330 STR X8, [X31 + 0x90]
	0x036F9334 STP V2, V0, [X31 + 0x70]
	0x036F9338 STR V1, [X31 + 0x6]
	0x036F933C BL 0x36E4DE0
	0x036F9340 LDR X8, [X19 + 0x30]
	0x036F9344 LDP V1, V0, [X19 + 0x10]
	0x036F9348 LDR V2, [X19]
	0x036F934C ADD X0, X31, 0x180
	0x036F9350 ADD X1, X31, 0x190
	0x036F9354 ADD X2, X31, 0x140
	0x036F9358 ADD X3, X31, 0x130

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCE8000
	007 Move X22, 0xA25000
	008 Move W8, [X21+3006]
	009 Move X22, [X22+2400]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA25000
	017 Move X0, [X0+2400]
	018 Call 0x1C17CF4
	019 Move X0, 0xA48000
	020 Move X0, [X0+2808]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3006], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Compare X20, 0
	030 JumpIfEqual {48}
	031 Move X8, 0xA48000
	032 Move X8, [X8+2808]
	033 Move X9, [X20]
	034 Move X0, X20
	035 Move X1, [X8]
	036 Move X8, [X9+64]
	037 Move X9, [X1+64]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Call 0x1C17E08
	040 Move X1, [X0]
	041 Move X2, [X0+8]
	042 Move X0, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Call 0x1C17F20
	049 Call 0x1C181E0

Method: System.Boolean Remove(UnityEngine.Animations.Rigging.WeightedTransform value)

Disassembly:
	0x036F935C MOV X4, X31
	0x036F9360 STR X8, [X31 + 0x1C0]
	0x036F9364 STP V1, V0, [X31 + 0x1A0]
	0x036F9368 STR V2, [X31 + 0x19]
	0x036F936C BL 0x3BF8E04
	0x036F9370 LDR X8, [X19 + 0x30]
	0x036F9374 LDP V1, V0, [X19 + 0x10]
	0x036F9378 LDR V2, [X19]
	0x036F937C ADD X0, X31, 0x170
	0x036F9380 ADD X1, X31, 0x190
	0x036F9384 MOV X2, X31
	0x036F9388 STR X8, [X31 + 0x1C0]
	0x036F938C STP V1, V0, [X31 + 0x1A0]
	0x036F9390 STR V2, [X31 + 0x19]
	0x036F9394 BL 0x3BF8374
	0x036F9398 ADRP X21, 0xCDF000
	0x036F939C LDRB W8, [X21 + 0x783]
	0x036F93A0 MOV W20, W0
	0x036F93A4 CBNZ W8, 0x36F93BC
	0x036F93A8 ADRP X0, 0x9FA000
	0x036F93AC LDR X0, [X0 + 0x5A0]
	0x036F93B0 BL 0x1C16CF4
	0x036F93B4 MOVZ W8, 0x1
	0x036F93B8 STRB W8, [X21 + 0x783]
	0x036F93BC ADRP X8, 0x9FA000
	0x036F93C0 LDR X8, [X8 + 0x5A0]
	0x036F93C4 LDR X8, [X8]
	0x036F93C8 LDR X8, [X8 + 0xB8]
	0x036F93CC LDR V0, [X8]
	0x036F93D0 LDR V1, [X8 + 0x8]
	0x036F93D4 STR D0, [X31 + 0x120]
	0x036F93D8 STR S1, [X31 + 0x128]
	0x036F93DC TBZ X20, 0x0, 0x36F9414
	0x036F93E0 LDR X8, [X19 + 0x30]
	0x036F93E4 LDP V1, V0, [X19 + 0x10]
	0x036F93E8 LDR V2, [X19]
	0x036F93EC ADD X0, X31, 0x170
	0x036F93F0 ADD X1, X31, 0x190
	0x036F93F4 MOV X2, X31
	0x036F93F8 STR X8, [X31 + 0x1C0]
	0x036F93FC STP V1, V0, [X31 + 0x1A0]
	0x036F9400 STR V2, [X31 + 0x19]
	0x036F9404 BL 0x3BF85E4
	0x036F9408 STR S0, [X31 + 0x120]
	0x036F940C STR S1, [X31 + 0x124]
	0x036F9410 STR S2, [X31 + 0x128]
	0x036F9414 LDR V2, [X22]
	0x036F9418 LDR V0, [X31 + 0x168]
	0x036F941C LDR V1, [X31 + 0x150]
	0x036F9420 ADD X9, X31, 0x55
	0x036F9424 LDUR V3, [X22 + 0xC]
	0x036F9428 LDR V4, [X31 + 0x15C]
	0x036F942C STR V2, [X31 + 0x4]
	0x036F9430 LDR V2, [X31 + 0x3C]
	0x036F9434 LDR X8, [X31 + 0x160]
	0x036F9438 LDUR X9, [X9 + 0xFF]
	0x036F943C STUR V3, [X31 + 0x4C]
	0x036F9440 STP S4, S2, [X31 + 0x1C]
	0x036F9444 STR S1, [X31 + 0x10]
	0x036F9448 AND W3, W20, 0x1
	0x036F944C ADD X0, X31, 0x140
	0x036F9450 ADD X1, X31, 0x130
	0x036F9454 ADD X2, X31, 0x120
	0x036F9458 ADD X4, X31, 0x40
	0x036F945C STR S0, [X31 + 0x8]
	0x036F9460 MOV V0.16B, V11.16B
	0x036F9464 MOV V1.16B, V12.16B
	0x036F9468 MOV V2.16B, V13.16B
	0x036F946C MOV V3.16B, V14.16B

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xCE8000
	009 Move W8, [X20+3007]
	010 Move X21, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xA25000
	018 Move X0, [X0+2400]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3007], W8
	022 Move W8, [X19]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X23, 0xA25000
	025 Move X23, [X23+2400]
	026 Move W20, W31
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move W1, W20
	034 Call WeightedTransformArray.Get, X0, X1
	035 Move [X31], X0
	036 Move [X31+8], X1
	037 Add X0, X31, 0
	038 Move X1, X22
	039 Move X2, X21
	040 Call WeightedTransform.Equals, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {49}
	045 Move W8, [X19]
	046 Add W20, W20, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W0, W31
	049 Move W8, [X19]
	050 Subtract W8, W8, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X23]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Add W21, W20, 1
	058 Move X0, X19
	059 Move W1, W21
	060 Call WeightedTransformArray.Get, X0, X1
	061 Move X2, X0
	062 Move X3, X1
	063 Move X0, X19
	064 Move W1, W20
	065 Call WeightedTransformArray.Set, X0, X1, X2
	066 Move W8, [X19]
	067 Move W20, W21
	068 Subtract W8, W8, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X19], W8
	071 Move W0, 1
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X30, [X31+16]
	077 Move X23, [X31+24]
	078 Add X31, X31, 64
	079 Return X0

Method: System.Void RemoveAt(System.Int32 index)

Disassembly:
	0x036F9470 MOV V4.16B, V15.16B
	0x036F9474 MOV V5.16B, V8.16B
	0x036F9478 STR S10, [X31 + 0x30]
	0x036F947C STR S9, [X31 + 0x28]
	0x036F9480 STUR X9, [X31 + 0x14]
	0x036F9484 STR X8, [X31]
	0x036F9488 BL 0x36F9550
	0x036F948C LDR V0, [X31 + 0x140]
	0x036F9490 LDR V1, [X31 + 0x144]
	0x036F9494 LDP V5, V3, [X19 + 0x10]
	0x036F9498 LDR X8, [X19 + 0x30]
	0x036F949C LDR V4, [X19]
	0x036F94A0 LDR V2, [X31 + 0x148]
	0x036F94A4 ADD X0, X31, 0x180
	0x036F94A8 ADD X1, X31, 0x190
	0x036F94AC MOV X2, X31
	0x036F94B0 STR X8, [X31 + 0x1C0]
	0x036F94B4 STP V5, V3, [X31 + 0x1A0]
	0x036F94B8 STR V4, [X31 + 0x19]
	0x036F94BC BL 0x3BF8670
	0x036F94C0 LDR V0, [X31 + 0x130]
	0x036F94C4 LDR V1, [X31 + 0x134]
	0x036F94C8 LDP V4, V5, [X19]
	0x036F94CC LDR X8, [X19 + 0x30]
	0x036F94D0 LDR V6, [X19 + 0x2]
	0x036F94D4 LDR V2, [X31 + 0x138]
	0x036F94D8 LDR V3, [X31 + 0x13C]
	0x036F94DC ADD X0, X31, 0x180
	0x036F94E0 ADD X1, X31, 0x190
	0x036F94E4 MOV X2, X31
	0x036F94E8 STR X8, [X31 + 0x1C0]
	0x036F94EC STP V5, V6, [X31 + 0x1A0]
	0x036F94F0 STR V4, [X31 + 0x19]
	0x036F94F4 BL 0x3BF87A4
	0x036F94F8 LDR V0, [X31 + 0x120]
	0x036F94FC LDR V1, [X31 + 0x124]
	0x036F9500 LDP V5, V3, [X19 + 0x10]
	0x036F9504 LDR X8, [X19 + 0x30]
	0x036F9508 LDR V4, [X19]
	0x036F950C LDR V2, [X31 + 0x128]
	0x036F9510 ADD X0, X31, 0x170
	0x036F9514 ADD X1, X31, 0x190
	0x036F9518 MOV X2, X31
	0x036F951C STR X8, [X31 + 0x1C0]
	0x036F9520 STP V5, V3, [X31 + 0x1A0]
	0x036F9524 STR V4, [X31 + 0x19]
	0x036F9528 BL 0x3BF8670
	0x036F952C ADD X31, X31, 0x1D0
	0x036F9530 LDP X20, X19, [X31 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCE8000
	007 Move X22, 0xA25000
	008 Move W8, [X21+3008]
	009 Move X22, [X22+2400]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA25000
	017 Move X0, [X0+2400]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3008], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move W1, W20
	028 Call WeightedTransformArray.CheckOutOfRangeIndex, X0, X1
	029 Move W8, [X19]
	030 Subtract W8, W8, 1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X0, [X22]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add W21, W20, 1
	038 Move X0, X19
	039 Move W1, W21
	040 Call WeightedTransformArray.Get, X0, X1
	041 Move X2, X0
	042 Move X3, X1
	043 Move X0, X19
	044 Move W1, W20
	045 Call WeightedTransformArray.Set, X0, X1, X2
	046 Move W8, [X19]
	047 Move W20, W21
	048 Subtract W8, W8, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X19], W8
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Return 

Method: System.Void System.Collections.IList.Insert(System.Int32 index, System.Object value)

Disassembly:
	0x036F963C FSUB S7, S7, S26
	0x036F9640 B 0x36F964C
	0x036F9644 LDP S17, S1, [X1]
	0x036F9648 LDP S6, S7, [X1 + 0x8]
	0x036F964C STP S17, S1, [X1]
	0x036F9650 STP S6, S7, [X1 + 0x8]
	0x036F9654 TBZ X3, 0x0, 0x36F98C4
	0x036F9658 ADRP X21, 0xCDF000
	0x036F965C LDRB W8, [X21 + 0x784]
	0x036F9660 MOV V12.16B, V0.16B
	0x036F9664 MOV V11.16B, V2.16B
	0x036F9668 MOV V13.16B, V5.16B
	0x036F966C STP S3, S4, [X31 + 0x8]
	0x036F9670 STP V31, V30, [X31 + 0x10]
	0x036F9674 CBNZ W8, 0x36F9694
	0x036F9678 ADRP X0, 0x9FA000
	0x036F967C LDR X0, [X0 + 0x5A8]
	0x036F9680 BL 0x1C16CF4
	0x036F9684 LDP V31, V30, [X31 + 0x10]
	0x036F9688 MOV V5.16B, V13.16B
	0x036F968C MOVZ W8, 0x1
	0x036F9690 STRB W8, [X21 + 0x784]
	0x036F9694 ADRP X20, 0x9FA000
	0x036F9698 LDR X20, [X20 + 0x5A8]
	0x036F969C LDR X0, [X20]
	0x036F96A0 LDR W8, [X0 + 0xE0]
	0x036F96A4 CBZ W8, 0x36F984C
	0x036F96A8 MOV W8, W31
	0x036F96AC CBZ W8, 0x36F96CC
	0x036F96B0 ADRP X0, 0x9FA000
	0x036F96B4 LDR X0, [X0 + 0x5A8]
	0x036F96B8 BL 0x1C16CF4
	0x036F96BC LDP V31, V30, [X31 + 0x10]
	0x036F96C0 MOV V5.16B, V13.16B
	0x036F96C4 MOVZ W8, 0x1
	0x036F96C8 STRB W8, [X21 + 0x784]
	0x036F96CC LDR X0, [X20]
	0x036F96D0 FSUB S15, S31, S12
	0x036F96D4 FSUB S8, S30, S9
	0x036F96D8 MOV V10.16B, V14.16B
	0x036F96DC LDR W8, [X0 + 0xE0]
	0x036F96E0 FSUB S14, S14, S11
	0x036F96E4 CBNZ W8, 0x36F96F4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xCE8000
	008 Move X23, 0xA25000
	009 Move W8, [X22+3009]
	010 Move X23, [X23+2400]
	011 Move X21, X2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xA25000
	019 Move X0, [X0+2400]
	020 Call 0x1C17CF4
	021 Move X0, 0xA48000
	022 Move X0, [X0+2808]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3009], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Compare X21, 0
	032 JumpIfEqual {52}
	033 Move X8, 0xA48000
	034 Move X8, [X8+2808]
	035 Move X9, [X21]
	036 Move X0, X21
	037 Move X1, [X8]
	038 Move X8, [X9+64]
	039 Move X9, [X1+64]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Call 0x1C17E08
	042 Move X2, [X0]
	043 Move X3, [X0+8]
	044 Move X0, X20
	045 Move W1, W19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Call 0x1C17F20
	053 Call 0x1C181E0

Method: System.Void Insert(System.Int32 index, UnityEngine.Animations.Rigging.WeightedTransform value)

Disassembly:
	0x036F96E8 BL 0x1C16DFC
	0x036F96EC LDP V31, V30, [X31 + 0x10]
	0x036F96F0 MOV V5.16B, V13.16B
	0x036F96F4 ADRP X8, 0xFFFFFFFFFD3F1000
	0x036F96F8 LDP S17, S16, [X31 + 0x8]
	0x036F96FC LDR V6, [X8 + 0x2B8]
	0x036F9700 LDR V3, [X31 + 0xC0]
	0x036F9704 FMUL S2, S15, S15
	0x036F9708 FMUL S4, S8, S8
	0x036F970C FADD S2, S2, S4
	0x036F9710 FMUL S4, S14, S14
	0x036F9714 FADD S4, S4, S2
	0x036F9718 FSUB S0, S17, S12
	0x036F971C FSUB S1, S16, S9
	0x036F9720 FCMP S4, S6
	0x036F9724 FSUB S2, S5, S11
	0x036F9728 B.LE 0x36F9774
	0x036F972C FDIV S7, S0, S4
	0x036F9730 FDIV S6, S1, S4
	0x036F9734 FDIV S4, S2, S4
	0x036F9738 FMUL S7, S15, S7
	0x036F973C FMUL S6, S8, S6
	0x036F9740 FMUL S4, S14, S4
	0x036F9744 FADD S6, S7, S6
	0x036F9748 FADD S4, S4, S6
	0x036F974C FMUL S7, S15, S4
	0x036F9750 FMUL S6, S8, S4
	0x036F9754 FMUL S4, S14, S4
	0x036F9758 FADD S12, S12, S7
	0x036F975C FADD S9, S9, S6
	0x036F9760 FADD S11, S11, S4
	0x036F9764 FSUB S15, S17, S12
	0x036F9768 FSUB S8, S16, S9
	0x036F976C FSUB S6, S5, S11
	0x036F9770 B 0x36F9780
	0x036F9774 MOV V6.16B, V2.16B
	0x036F9778 MOV V8.16B, V1.16B
	0x036F977C MOV V15.16B, V0.16B
	0x036F9780 FCMP S3, 0x0
	0x036F9784 B.LE 0x36F9840
	0x036F9788 ADRP X21, 0xCDF000
	0x036F978C FSUB S3, S31, S17
	0x036F9790 FSUB S4, S30, S16
	0x036F9794 LDRB W8, [X21 + 0x785]
	0x036F9798 FMUL S0, S0, S0
	0x036F979C FMUL S1, S1, S1
	0x036F97A0 FSUB S5, S10, S5
	0x036F97A4 FMUL S3, S3, S3
	0x036F97A8 FMUL S4, S4, S4
	0x036F97AC FMUL S2, S2, S2
	0x036F97B0 FADD S0, S0, S1
	0x036F97B4 FADD S1, S3, S4
	0x036F97B8 FMUL S3, S5, S5
	0x036F97BC FADD S13, S2, S0
	0x036F97C0 FADD S14, S3, S1
	0x036F97C4 CBNZ W8, 0x36F97E4
	0x036F97C8 ADRP X0, 0x9FA000
	0x036F97CC LDR X0, [X0 + 0x5A8]
	0x036F97D0 MOV V10.16B, V6.16B
	0x036F97D4 BL 0x1C16CF4
	0x036F97D8 MOV V6.16B, V10.16B
	0x036F97DC MOVZ W8, 0x1
	0x036F97E0 STRB W8, [X21 + 0x785]
	0x036F97E4 LDR X0, [X20]
	0x036F97E8 FSQRT S13, S13
	0x036F97EC FSQRT S14, S14
	0x036F97F0 LDR W8, [X0 + 0xE0]
	0x036F97F4 CBNZ W8, 0x36F9804
	0x036F97F8 MOV V10.16B, V6.16B
	0x036F97FC BL 0x1C16DFC
	0x036F9800 MOV V6.16B, V10.16B
	0x036F9804 FMUL S0, S15, S15
	0x036F9808 FMUL S1, S8, S8
	0x036F980C ADRP X8, 0xFFFFFFFFFD3F1000
	0x036F9810 FADD S0, S1, S0
	0x036F9814 LDR V1, [X8 + 0x17C]
	0x036F9818 FMUL S2, S6, S6
	0x036F981C FADD S0, S2, S0
	0x036F9820 FSQRT S2, S0
	0x036F9824 FCMP S2, S1
	0x036F9828 FADD S13, S13, S14
	0x036F982C B.LE 0x36F986C
	0x036F9830 FDIV S0, S15, S2
	0x036F9834 FDIV S1, S8, S2
	0x036F9838 FDIV S2, S6, S2
	0x036F983C B 0x36F98A4
	0x036F9840 LDP S0, S1, [X19]
	0x036F9844 LDR V2, [X19 + 0x8]
	0x036F9848 B 0x36F98BC
	0x036F984C BL 0x1C16DFC
	0x036F9850 LDRB W8, [X21 + 0x784]
	0x036F9854 LDP V31, V30, [X31 + 0x10]
	0x036F9858 MOV V5.16B, V13.16B
	0x036F985C CMP W8, 0x0
	0x036F9860 CSET W8, EQ
	0x036F9864 CBNZ W8, 0x36F96B0
	0x036F9868 B 0x36F96CC
	0x036F986C ADRP X20, 0xCDF000
	0x036F9870 LDRB W8, [X20 + 0x783]
	0x036F9874 CBNZ W8, 0x36F988C
	0x036F9878 ADRP X0, 0x9FA000
	0x036F987C LDR X0, [X0 + 0x5A0]
	0x036F9880 BL 0x1C16CF4
	0x036F9884 MOVZ W8, 0x1
	0x036F9888 STRB W8, [X20 + 0x783]
	0x036F988C ADRP X8, 0x9FA000
	0x036F9890 LDR X8, [X8 + 0x5A0]
	0x036F9894 LDR X8, [X8]
	0x036F9898 LDR X8, [X8 + 0xB8]
	0x036F989C LDP S0, S1, [X8]
	0x036F98A0 LDR V2, [X8 + 0x8]
	0x036F98A4 FMUL S0, S13, S0
	0x036F98A8 FMUL S1, S13, S1
	0x036F98AC FMUL S2, S13, S2
	0x036F98B0 FADD S0, S12, S0
	0x036F98B4 FADD S1, S9, S1
	0x036F98B8 FADD S2, S11, S2
	0x036F98BC STP S0, S1, [X19]
	0x036F98C0 STR S2, [X19 + 0x8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xCE8000
	011 Move X25, 0xA25000
	012 Move W8, [X23+3010]
	013 Move X25, [X25+2400]
	014 Move X20, X3
	015 Move X21, X2
	016 Move W22, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xA25000
	023 Move X0, [X0+2400]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3010], W8
	027 Move X0, [X25]
	028 Move W23, [X19]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X25]
	034 Move X8, [X0+184]
	035 Move W8, [X8]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move W1, W22
	043 Call WeightedTransformArray.CheckOutOfRangeIndex, X0, X1
	044 Move W23, [X19]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X25]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract W24, W23, 1
	053 Move X0, X19
	054 Move W1, W24
	055 Call WeightedTransformArray.Get, X0, X1
	056 Move X2, X0
	057 Move X3, X1
	058 Move X0, X19
	059 Move W1, W23
	060 Call WeightedTransformArray.Set, X0, X1, X2
	061 Move W23, W24
	062 Move X0, [X25]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move X1, X21
	069 Move X2, X20
	070 Move X20, [X31+64]
	071 Move X19, [X31+72]
	072 Move X22, [X31+48]
	073 Move X21, [X31+56]
	074 Move X24, [X31+32]
	075 Move X23, [X31+40]
	076 Move X30, [X31+16]
	077 Move X25, [X31+24]
	078 Add X31, X31, 80
	079 Call WeightedTransformArray.Add, X0, X1
	080 Return 
	081 Move X0, X19
	082 Move W1, W22
	083 Move X2, X21
	084 Move X3, X20
	085 Call WeightedTransformArray.Set, X0, X1, X2
	086 Move W8, [X19]
	087 Move X22, [X31+48]
	088 Move X21, [X31+56]
	089 Move X24, [X31+32]
	090 Move X23, [X31+40]
	091 Move X30, [X31+16]
	092 Move X25, [X31+24]
	093 Add W8, W8, 1
	094 Move [X19], W8
	095 Move X20, [X31+64]
	096 Move X19, [X31+72]
	097 Add X31, X31, 80
	098 Return 
	099 Move X19, 0xA25000
	100 Move X19, [X19+2400]
	101 Move X0, X19
	102 Call 0x1C17D08
	103 Call 0x19913D0
	104 Move X0, X19
	105 Call 0x1C17D08
	106 Move X8, [X0+184]
	107 Move X0, 0x9FB000
	108 Move W8, [X8]
	109 Move [X31+12], W8
	110 Move X0, [X0+1880]
	111 Call 0x1C17D08
	112 Add X1, X31, 12
	113 Call 0x1C17E04
	114 Move X19, X0
	115 Move X0, 0xA48000
	116 Move X0, [X0+3096]
	117 Call 0x1C17D08
	118 Move X1, X19
	119 Move X2, X31
	120 Call String.Format, X0, X1
	121 Move X19, X0
	122 Move X0, 0xA03000
	123 Move X0, [X0+1400]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X1, X19
	127 Move X2, X31
	128 Move X20, X0
	129 Call ArgumentException..ctor, X0, X1
	130 Move X0, 0xA48000
	131 Move X0, [X0+3168]
	132 Call 0x1C17D08
	133 Move X1, X0
	134 Move X0, X20
	135 Call 0x1C17DEC

Method: System.Int32 ClampSize(System.Int32 size)

Disassembly:
	0x036F87CC CBNZ W8, 0x36F87D4
	0x036F87D0 BL 0x1C16DFC
	0x036F87D4 MOV X0, X19
	0x036F87D8 MOV X1, X21
	0x036F87DC MOV X2, X20
	0x036F87E0 LDP X20, X19, [X31 + 0x40]
	0x036F87E4 LDP X22, X21, [X31 + 0x30]
	0x036F87E8 LDP X24, X23, [X31 + 0x20]
	0x036F87EC LDP X30, X25, [X31 + 0x10]
	0x036F87F0 ADD X31, X31, 0x50
	0x036F87F4 B 0x36F7974
	0x036F87F8 MOV X0, X19
	0x036F87FC MOV W1, W22
	0x036F8800 MOV X2, X21
	0x036F8804 MOV X3, X20
	0x036F8808 BL 0x36F7AB8
	0x036F880C LDR W8, [X19]
	0x036F8810 LDP X22, X21, [X31 + 0x30]
	0x036F8814 LDP X24, X23, [X31 + 0x20]
	0x036F8818 LDP X30, X25, [X31 + 0x10]
	0x036F881C ADD W8, W8, 0x1
	0x036F8820 STR W8, [X19]
	0x036F8824 LDP X20, X19, [X31 + 0x40]
	0x036F8828 ADD X31, X31, 0x50
	0x036F882C RET
	0x036F8830 ADRP X19, 0xA25000
	0x036F8834 LDR X19, [X19 + 0x960]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCE9000
	006 Move X20, 0xA26000
	007 Move W8, [X21+3011]
	008 Move X20, [X20+2400]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA26000
	015 Move X0, [X0+2400]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3011], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W8, [X8]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: System.Void CheckOutOfRangeIndex(System.Int32 index)

Disassembly:
	0x036F9534 LDP X22, X21, [X31 + 0x50]
	0x036F9538 LDP X29, X30, [X31 + 0x40]
	0x036F953C LDP D9, D8, [X31 + 0x30]
	0x036F9540 LDP D11, D10, [X31 + 0x20]
	0x036F9544 LDP D13, D12, [X31 + 0x10]
	0x036F9548 LDP D15, D14, [X31], #0x70
	0x036F954C RET
	0x036F9550 SUB X31, X31, 0x90
	0x036F9554 STP D15, D14, [X31 + 0x30]
	0x036F9558 STP D13, D12, [X31 + 0x40]
	0x036F955C STP D11, D10, [X31 + 0x50]
	0x036F9560 STP D9, D8, [X31 + 0x60]
	0x036F9564 STP X30, X21, [X31 + 0x70]
	0x036F9568 STP X20, X19, [X31 + 0x80]
	0x036F956C LDR V6, [X31 + 0xB0]
	0x036F9570 MOV V9.16B, V1.16B
	0x036F9574 LDP S30, S14, [X31 + 0x94]
	0x036F9578 LDR V31, [X31 + 0x90]
	0x036F957C LDR V1, [X31 + 0xB8]
	0x036F9580 MOV X19, X2
	0x036F9584 FCMP S6, 0x0
	0x036F9588 B.LE 0x36F95A8
	0x036F958C LDR V16, [X4]
	0x036F9590 LDR V7, [X4 + 0x8]
	0x036F9594 MOV V6.16B, V31.16B
	0x036F9598 MOV V6.S[1], V30.S[0]
	0x036F959C FADD V6.2S, V6.2S, V16.2S
	0x036F95A0 FADD S7, S14, S7
	0x036F95A4 B 0x36F95B0
	0x036F95A8 LDR V6, [X0]
	0x036F95AC LDR V7, [X0 + 0x8]
	0x036F95B0 FCMP S1, 0x0
	0x036F95B4 STR D6, [X0]
	0x036F95B8 STR S7, [X0 + 0x8]
	0x036F95BC B.LE 0x36F9644
	0x036F95C0 LDP S6, S29, [X31 + 0xA8]
	0x036F95C4 LDP S27, S1, [X31 + 0xA0]
	0x036F95C8 LDP S28, S7, [X4 + 0xC]
	0x036F95CC LDP S26, S25, [X4 + 0x14]
	0x036F95D0 FMUL S16, S29, S28
	0x036F95D4 FMUL S17, S27, S25
	0x036F95D8 FMUL S18, S1, S26
	0x036F95DC FMUL S19, S6, S7
	0x036F95E0 FMUL S20, S29, S7
	0x036F95E4 FMUL S21, S1, S25
	0x036F95E8 FMUL S22, S6, S28
	0x036F95EC FMUL S23, S27, S26
	0x036F95F0 FMUL S24, S27, S7
	0x036F95F4 FMUL S27, S27, S28
	0x036F95F8 FMUL S28, S1, S28
	0x036F95FC FMUL S1, S1, S7
	0x036F9600 FMUL S7, S29, S26
	0x036F9604 FMUL S29, S29, S25
	0x036F9608 FMUL S25, S6, S25
	0x036F960C FMUL S26, S6, S26
	0x036F9610 FADD S6, S16, S17
	0x036F9614 FADD S16, S20, S21
	0x036F9618 FADD S7, S7, S25
	0x036F961C FSUB S20, S29, S27
	0x036F9620 FADD S17, S18, S6
	0x036F9624 FADD S6, S22, S16
	0x036F9628 FADD S16, S24, S7
	0x036F962C FSUB S7, S20, S1
	0x036F9630 FSUB S17, S17, S19
	0x036F9634 FSUB S1, S6, S23
	0x036F9638 FSUB S6, S16, S28

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCE8000
	007 Move W8, [X21+3012]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA25000
	015 Move X0, [X0+2400]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3012], W8
	019 Move TEMP, X20
	020 And TEMP, TEMP, -2147483648
	021 Compare TEMP, -2147483648
	022 JumpIfEqual {40}
	023 Move X21, 0xA25000
	024 Move X21, [X21+2400]
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move W8, [X8]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X30, [X31+16]
	037 Move X21, [X31+24]
	038 Add X31, X31, 48
	039 Return 
	040 Move [X31+12], W20
	041 Move X20, 0x9FB000
	042 Move X20, [X20+1880]
	043 Move X0, X20
	044 Call 0x1C17D08
	045 Add X1, X31, 12
	046 Call 0x1C17E04
	047 Move W8, [X19]
	048 Move X21, X0
	049 Move X0, X20
	050 Move [X31+8], W8
	051 Call 0x1C17D08
	052 Add X1, X31, 8
	053 Call 0x1C17E04
	054 Move X19, X0
	055 Move X0, 0xA48000
	056 Move X0, [X0+3152]
	057 Call 0x1C17D08
	058 Move X1, X21
	059 Move X2, X19
	060 Move X3, X31
	061 Call String.Format, X0, X1, X2
	062 Move X19, X0
	063 Move X0, 0xA05000
	064 Move X0, [X0+3960]
	065 Call 0x1C17D08
	066 Call 0x1C17F10
	067 Move X1, X19
	068 Move X2, X31
	069 Move X20, X0
	070 Call IndexOutOfRangeException..ctor, X0, X1
	071 Move X0, 0xA48000
	072 Move X0, [X0+3160]
	073 Call 0x1C17D08
	074 Move X1, X0
	075 Move X0, X20
	076 Call 0x1C17DEC

Method: UnityEngine.Animations.Rigging.WeightedTransform Get(System.Int32 index)

Disassembly:
	0x036F8D0C STR W21, [X19 + 0x88]
	0x036F8D10 LDR X0, [X20]
	0x036F8D14 LDR W8, [X0 + 0xE0]
	0x036F8D18 CBNZ W8, 0x36F8D20
	0x036F8D1C BL 0x1C16DFC
	0x036F8D20 LDR W8, [X19]
	0x036F8D24 LDP X20, X19, [X31 + 0x10]
	0x036F8D28 CMP W21, W8
	0x036F8D2C CSET W0, LT
	0x036F8D30 LDP X30, X21, [X31], #0x20
	0x036F8D34 RET
	0x036F8D38 MOVN W8, 0x0
	0x036F8D3C STR W8, [X0 + 0x88]
	0x036F8D40 RET
	0x036F8D44 RET
	0x036F8D48 STP X30, X21, [X31 - 0x20]!
	0x036F8D4C STP X20, X19, [X31 + 0x10]
	0x036F8D50 ADRP X21, 0xCE8000
	0x036F8D54 ADRP X20, 0xA25000
	0x036F8D58 LDRB W8, [X21 + 0xBD2]
	0x036F8D5C LDR X20, [X20 + 0x960]
	0x036F8D60 MOV X19, X0
	0x036F8D64 TBNZ X8, 0x0, 0x36F8D7C
	0x036F8D68 ADRP X0, 0xA25000
	0x036F8D6C LDR X0, [X0 + 0x960]
	0x036F8D70 BL 0x1C16CF4
	0x036F8D74 MOVZ W8, 0x1
	0x036F8D78 STRB W8, [X21 + 0xBD2]
	0x036F8D7C LDR X0, [X20]
	0x036F8D80 LDR W20, [X19 + 0x88]
	0x036F8D84 LDR W8, [X0 + 0xE0]
	0x036F8D88 CBNZ W8, 0x36F8D90
	0x036F8D8C BL 0x1C16DFC
	0x036F8D90 MOV X0, X19
	0x036F8D94 MOV W1, W20
	0x036F8D98 LDP X20, X19, [X31 + 0x10]
	0x036F8D9C LDP X30, X21, [X31], #0x20
	0x036F8DA0 B 0x36F7D0C
	0x036F8DA4 SUB X31, X31, 0x30
	0x036F8DA8 STP X30, X21, [X31 + 0x10]
	0x036F8DAC STP X20, X19, [X31 + 0x20]
	0x036F8DB0 ADRP X21, 0xCE8000
	0x036F8DB4 ADRP X20, 0xA48000
	0x036F8DB8 LDRB W8, [X21 + 0xBD3]
	0x036F8DBC LDR X20, [X20 + 0xAF8]
	0x036F8DC0 MOV X19, X0
	0x036F8DC4 TBNZ X8, 0x0, 0x36F8DDC
	0x036F8DC8 ADRP X0, 0xA48000
	0x036F8DCC LDR X0, [X0 + 0xAF8]
	0x036F8DD0 BL 0x1C16CF4
	0x036F8DD4 MOVZ W8, 0x1
	0x036F8DD8 STRB W8, [X21 + 0xBD3]
	0x036F8DDC MOV X0, X19
	0x036F8DE0 BL 0x36F8D48
	0x036F8DE4 LDR X8, [X20]
	0x036F8DE8 STP X0, X1, [X31]
	0x036F8DEC ADD X1, X31, 0x0
	0x036F8DF0 MOV X0, X8
	0x036F8DF4 BL 0x1C16E04
	0x036F8DF8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCE9000
	007 Move X22, 0xA26000
	008 Move W8, [X21+3013]
	009 Move X22, [X22+2400]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA26000
	017 Move X0, [X0+2400]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3013], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move W1, W20
	028 Call WeightedTransformArray.CheckOutOfRangeIndex, X0, X1
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, -45481984
	031 Move W8, W20
	032 Add X9, X9, 2073
	033 NotImplemented "Instruction ADR not yet implemented."
	034 Move W11, [X9]
	035 Add X10, X10, X11
	036 CallNoReturn X10
	037 Add X8, X19, 8
	038 Add X9, X19, 16
	039 Add X8, X19, 24
	040 Add X9, X19, 32
	041 Add X8, X19, 40
	042 Add X9, X19, 48
	043 Add X8, X19, 56
	044 Add X9, X19, 64
	045 Add X8, X19, 72
	046 Add X9, X19, 80
	047 Add X8, X19, 88
	048 Add X9, X19, 96
	049 Add X8, X19, 104
	050 Add X9, X19, 112
	051 Add X8, X19, 120
	052 Add X9, X19, 128
	053 Move X1, [X9]
	054 Move X0, [X8]
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return X0

Method: System.Void Set(System.Int32 index, UnityEngine.Animations.Rigging.WeightedTransform value)

Disassembly:
	0x036F8AB8 LDR X21, [X21 + 0x960]
	0x036F8ABC MOV W19, W1
	0x036F8AC0 MOV X20, X0
	0x036F8AC4 TBNZ X8, 0x0, 0x36F8AE8
	0x036F8AC8 ADRP X0, 0xA25000
	0x036F8ACC LDR X0, [X0 + 0x960]
	0x036F8AD0 BL 0x1C16CF4
	0x036F8AD4 ADRP X0, 0xA48000
	0x036F8AD8 LDR X0, [X0 + 0xAF8]
	0x036F8ADC BL 0x1C16CF4
	0x036F8AE0 MOVZ W8, 0x1
	0x036F8AE4 STRB W8, [X22 + 0xBCC]
	0x036F8AE8 LDR X0, [X21]
	0x036F8AEC ADRP X21, 0xA48000
	0x036F8AF0 LDR W8, [X0 + 0xE0]
	0x036F8AF4 LDR X21, [X21 + 0xAF8]
	0x036F8AF8 CBNZ W8, 0x36F8B00
	0x036F8AFC BL 0x1C16DFC
	0x036F8B00 MOV X0, X20
	0x036F8B04 MOV W1, W19
	0x036F8B08 BL 0x36F7D0C
	0x036F8B0C LDR X8, [X21]
	0x036F8B10 STP X0, X1, [X31]
	0x036F8B14 ADD X1, X31, 0x0
	0x036F8B18 MOV X0, X8
	0x036F8B1C BL 0x1C16E04
	0x036F8B20 LDP X20, X19, [X31 + 0x30]
	0x036F8B24 LDP X22, X21, [X31 + 0x20]
	0x036F8B28 LDR X30, [X31 + 0x10]
	0x036F8B2C ADD X31, X31, 0x40
	0x036F8B30 RET
	0x036F8B34 STP X30, X23, [X31 - 0x30]!
	0x036F8B38 STP X22, X21, [X31 + 0x10]
	0x036F8B3C STP X20, X19, [X31 + 0x20]
	0x036F8B40 ADRP X22, 0xCE8000
	0x036F8B44 ADRP X23, 0xA25000
	0x036F8B48 LDRB W8, [X22 + 0xBCD]
	0x036F8B4C LDR X23, [X23 + 0x960]
	0x036F8B50 MOV X21, X2
	0x036F8B54 MOV W19, W1
	0x036F8B58 MOV X20, X0
	0x036F8B5C TBNZ X8, 0x0, 0x36F8B80
	0x036F8B60 ADRP X0, 0xA25000
	0x036F8B64 LDR X0, [X0 + 0x960]
	0x036F8B68 BL 0x1C16CF4
	0x036F8B6C ADRP X0, 0xA48000
	0x036F8B70 LDR X0, [X0 + 0xAF8]
	0x036F8B74 BL 0x1C16CF4
	0x036F8B78 MOVZ W8, 0x1
	0x036F8B7C STRB W8, [X22 + 0xBCD]
	0x036F8B80 LDR X0, [X23]
	0x036F8B84 LDR W8, [X0 + 0xE0]
	0x036F8B88 CBNZ W8, 0x36F8B90
	0x036F8B8C BL 0x1C16DFC
	0x036F8B90 CBZ X21, 0x36F8BD8
	0x036F8B94 ADRP X8, 0xA48000
	0x036F8B98 LDR X8, [X8 + 0xAF8]
	0x036F8B9C LDR X9, [X21]
	0x036F8BA0 MOV X0, X21
	0x036F8BA4 LDR X1, [X8]
	0x036F8BA8 LDR X8, [X9 + 0x40]
	0x036F8BAC LDR X9, [X1 + 0x40]
	0x036F8BB0 CMP X8, X9

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xCE9000
	009 Move X24, 0xA26000
	010 Move W8, [X23+3014]
	011 Move X24, [X24+2400]
	012 Move X19, X3
	013 Move X21, X2
	014 Move W22, W1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xA26000
	021 Move X0, [X0+2400]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3014], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move W1, W22
	032 Call WeightedTransformArray.CheckOutOfRangeIndex, X0, X1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, -45481984
	035 Move W8, W22
	036 Add X9, X9, 2073
	037 NotImplemented "Instruction ADR not yet implemented."
	038 Move W11, [X9]
	039 Add X10, X10, X11
	040 CallNoReturn X10
	041 Move [X20+8], X21
	042 Add X8, X20, 16
	043 Move [X20+24], X21
	044 Add X8, X20, 32
	045 Move [X20+40], X21
	046 Add X8, X20, 48
	047 Move [X20+56], X21
	048 Add X8, X20, 64
	049 Move [X20+72], X21
	050 Add X8, X20, 80
	051 Move [X20+88], X21
	052 Add X8, X20, 96
	053 Move [X20+104], X21
	054 Add X8, X20, 112
	055 Add X8, X20, 128
	056 Move [X20+120], X21
	057 Move [X8], X19
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X30, [X31+64]
	065 Return 

Method: System.Void SetWeight(System.Int32 index, System.Single weight)

Disassembly:
	0x036F98C4 LDP X20, X19, [X31 + 0x80]
	0x036F98C8 LDP X30, X21, [X31 + 0x70]
	0x036F98CC LDP D9, D8, [X31 + 0x60]
	0x036F98D0 LDP D11, D10, [X31 + 0x50]
	0x036F98D4 LDP D13, D12, [X31 + 0x40]
	0x036F98D8 LDP D15, D14, [X31 + 0x30]
	0x036F98DC ADD X31, X31, 0x90
	0x036F98E0 RET
	0x036F98E4 FSUB S0, S3, S0
	0x036F98E8 FSUB S1, S4, S1
	0x036F98EC FSUB S2, S5, S2
	0x036F98F0 FMUL S0, S0, S0
	0x036F98F4 FMUL S1, S1, S1
	0x036F98F8 FADD S0, S0, S1
	0x036F98FC FMUL S1, S2, S2
	0x036F9900 FADD S0, S1, S0
	0x036F9904 RET
	0x036F9908 FCMP S2, 0x0
	0x036F990C FCSEL S0, S1, S0, GT
	0x036F9910 RET
	0x036F9914 CMP W3, 0x1
	0x036F9918 B.LT 0x36F9948
	0x036F991C MOV W8, W3
	0x036F9920 UBFM X9, X2, 0x20, 0x1F
	0x036F9924 FMOV S0, W31
	0x036F9928 MOVZ X10, 0x1
	0x036F992C SBFM X11, X9, 0x1E, 0x3F
	0x036F9930 LDR V1, [X0, X11, LSL]
	0x036F9934 SUBS X8, X8, 0x1
	0x036F9938 ADD X9, X9, X10
	0x036F993C FADD S0, S0, S1
	0x036F9940 B.NE 0x36F992C
	0x036F9944 RET
	0x036F9948 FMOV S0, W31
	0x036F994C RET

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xCE8000
	008 Move X22, 0xA25000
	009 Move W8, [X21+3015]
	010 Move X22, [X22+2400]
	011 Move V8, V0
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xA25000
	019 Move X0, [X0+2400]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3015], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move W1, W19
	030 Call WeightedTransformArray.Get, X0, X1
	031 And X8, X1, 0
	032 Move X2, X0
	033 Move X0, X20
	034 Move W1, W19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+8]
	040 Move W9, S8
	041 Or X3, X8, X9
	042 Move V8, [X31+48]
	043 Call WeightedTransformArray.Set, X0, X1, X2
	044 Return 

Method: System.Single GetWeight(System.Int32 index)

Disassembly:
	0x036F9950 LDR X0, [X0 + 0x40]
	0x036F9954 RET
	0x036F9958 ADRP X9, 0xFFFFFFFFFD3F1000
	0x036F995C ADRP X10, 0xFFFFFFFFFD3F4000
	0x036F9960 LDR V0, [X9 + 0x8E]
	0x036F9964 LDR V1, [X10 + 0x4F0]
	0x036F9968 MOVZ W8, 0x1
	0x036F996C MOV X1, X31
	0x036F9970 STR W8, [X0 + 0x20]
	0x036F9974 STRB W8, [X0 + 0x24]
	0x036F9978 STUR V0, [X0 + 0x28]
	0x036F997C STR D1, [X0 + 0x38]
	0x036F9980 B 0x3C36C30
	0x036F9984 STP X30, X23, [X31 - 0x30]!
	0x036F9988 STP X22, X21, [X31 + 0x10]
	0x036F998C STP X20, X19, [X31 + 0x20]
	0x036F9990 ADRP X21, 0xCE7000
	0x036F9994 LDRB W8, [X21 + 0xBDA]
	0x036F9998 MOV X20, X1
	0x036F999C MOV X19, X0
	0x036F99A0 TBNZ X8, 0x0, 0x36F9A00
	0x036F99A4 ADRP X0, 0xA01000
	0x036F99A8 LDR X0, [X0 + 0x958]
	0x036F99AC BL 0x1C16CF4
	0x036F99B0 ADRP X0, 0xA47000
	0x036F99B4 LDR X0, [X0 + 0xC70]
	0x036F99B8 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCE8000
	007 Move X22, 0xA25000
	008 Move W8, [X21+3016]
	009 Move X22, [X22+2400]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA25000
	017 Move X0, [X0+2400]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3016], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Call WeightedTransformArray.Get, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move S0, W1
	034 Move X30, [X31+48]
	035 Return V0

Method: System.Void SetTransform(System.Int32 index, UnityEngine.Transform transform)

Disassembly:
	0x036F99BC ADRP X0, 0xA47000
	0x036F99C0 LDR X0, [X0 + 0x8D0]
	0x036F99C4 BL 0x1C16CF4
	0x036F99C8 ADRP X0, 0xA01000
	0x036F99CC LDR X0, [X0 + 0x938]
	0x036F99D0 BL 0x1C16CF4
	0x036F99D4 ADRP X0, 0xA01000
	0x036F99D8 LDR X0, [X0 + 0x930]
	0x036F99DC BL 0x1C16CF4
	0x036F99E0 ADRP X0, 0x9FA000
	0x036F99E4 LDR X0, [X0 + 0x598]
	0x036F99E8 BL 0x1C16CF4
	0x036F99EC ADRP X0, 0xA01000
	0x036F99F0 LDR X0, [X0 + 0x708]
	0x036F99F4 BL 0x1C16CF4
	0x036F99F8 MOVZ W8, 0x1
	0x036F99FC STRB W8, [X21 + 0xBDA]
	0x036F9A00 CBZ X20, 0x36F9B84
	0x036F9A04 MOV X0, X20
	0x036F9A08 MOV X1, X19
	0x036F9A0C MOV X2, X31
	0x036F9A10 BL 0x3C40F48
	0x036F9A14 TBZ X0, 0x0, 0x36F9AE0
	0x036F9A18 ADRP X8, 0xA01000
	0x036F9A1C LDR X8, [X8 + 0x930]
	0x036F9A20 LDR X0, [X8]
	0x036F9A24 BL 0x1C16F10
	0x036F9A28 ADRP X8, 0xA01000
	0x036F9A2C LDR X8, [X8 + 0x938]
	0x036F9A30 MOV X21, X0
	0x036F9A34 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xCE8000
	008 Move X23, 0xA25000
	009 Move W8, [X22+3017]
	010 Move X23, [X23+2400]
	011 Move X19, X2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xA25000
	019 Move X0, [X0+2400]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3017], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X21
	029 Move W1, W20
	030 Call WeightedTransformArray.Get, X0, X1
	031 Move X3, X1
	032 Move X0, X21
	033 Move W1, W20
	034 Move X2, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call WeightedTransformArray.Set, X0, X1, X2
	042 Return 

Method: UnityEngine.Transform GetTransform(System.Int32 index)

Disassembly:
	0x036F9A38 BL 0x301B7C4
	0x036F9A3C ADRP X22, 0x9FA000
	0x036F9A40 ADRP X23, 0xA01000
	0x036F9A44 LDR X22, [X22 + 0x598]
	0x036F9A48 LDR X23, [X23 + 0x958]
	0x036F9A4C LDR X0, [X22]
	0x036F9A50 LDR W8, [X0 + 0xE0]
	0x036F9A54 CBNZ W8, 0x36F9A5C
	0x036F9A58 BL 0x1C16DFC
	0x036F9A5C MOV X0, X20
	0x036F9A60 MOV X1, X19
	0x036F9A64 MOV X2, X31
	0x036F9A68 BL 0x3C354F8
	0x036F9A6C CBZ X21, 0x36F9B84
	0x036F9A70 LDR X8, [X23]
	0x036F9A74 TBZ X0, 0x0, 0x36F9B00
	0x036F9A78 LDR W10, [X21 + 0x1C]
	0x036F9A7C LDR X9, [X21 + 0x10]
	0x036F9A80 ADD W10, W10, 0x1
	0x036F9A84 STR W10, [X21 + 0x1C]
	0x036F9A88 CBZ X9, 0x36F9B84
	0x036F9A8C LDRSW X10, [X21 + 0x18]
	0x036F9A90 LDR W11, [X9 + 0x18]
	0x036F9A94 CMP W10, W11
	0x036F9A98 B.CS 0x36F9AB0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCE8000
	007 Move X22, 0xA25000
	008 Move W8, [X21+3018]
	009 Move X22, [X22+2400]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA25000
	017 Move X0, [X0+2400]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3018], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call WeightedTransformArray.Get, X0, X1
	034 Return X0

Method: System.Void OnValidate(ref UnityEngine.Animations.Rigging.WeightedTransformArray array, System.Single min = 0, System.Single max = 1)

Disassembly:
	0x036EF280 B 0x36EF288
	0x036EF284 B 0x36EF288
	0x036EF288 MOV X19, X0
	0x036EF28C CMP W1, 0x1
	0x036EF290 B.NE 0x36EF2C4
	0x036EF294 MOV X0, X19
	0x036EF298 BL 0x3EB1AD0
	0x036EF29C LDR X20, [X0]
	0x036EF2A0 BL 0x3EB1AE0
	0x036EF2A4 ADRP X8, 0xA0B000
	0x036EF2A8 LDR X8, [X8 + 0x940]
	0x036EF2AC ADD X0, X31, 0x8
	0x036EF2B0 LDR X1, [X8]
	0x036EF2B4 BL 0x2BC434C
	0x036EF2B8 CBNZ X20, 0x36EF2CC
	0x036EF2BC MOV W19, W31
	0x036EF2C0 B 0x36EF264
	0x036EF2C4 MOV X20, X31
	0x036EF2C8 B 0x36EF2D8
	0x036EF2CC MOV X0, X20
	0x036EF2D0 BL 0x1C16F18
	0x036EF2D4 MOV X19, X0
	0x036EF2D8 ADRP X8, 0xA0B000
	0x036EF2DC LDR X8, [X8 + 0x940]
	0x036EF2E0 LDR X1, [X8]
	0x036EF2E4 ADD X0, X31, 0x8
	0x036EF2E8 BL 0x2BC434C
	0x036EF2EC CBNZ X20, 0x36EF2F8
	0x036EF2F0 MOV X0, X19
	0x036EF2F4 BL 0x1D2C690
	0x036EF2F8 MOV X0, X20
	0x036EF2FC BL 0x1C16F18
	0x036EF300 BL 0x1990590
	0x036EF304 STR X30, [X31 - 0x30]!
	0x036EF308 STP X22, X21, [X31 + 0x10]
	0x036EF30C STP X20, X19, [X31 + 0x20]
	0x036EF310 ADRP X22, 0xCF1000
	0x036EF314 ADRP X21, 0xA0B000
	0x036EF318 ADRP X20, 0xA0B000
	0x036EF31C LDRB W8, [X22 + 0xB63]
	0x036EF320 LDR X21, [X21 + 0x930]
	0x036EF324 LDR X20, [X20 + 0x938]
	0x036EF328 MOV X19, X0
	0x036EF32C TBNZ X8, 0x0, 0x36EF350
	0x036EF330 ADRP X0, 0xA0B000

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xCF2000
	008 Move W8, [X20+3019]
	009 Move V8, V1
	010 Move V9, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA2F000
	017 Move X0, [X0+2400]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3019], W8
	021 Move X21, 0xA2F000
	022 Move X21, [X21+2400]
	023 Move W20, W31
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move W8, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X0, X19
	038 Move W1, W20
	039 Call WeightedTransformArray.GetWeight, X0, X1
	040 NotImplemented "Instruction FCMP not yet implemented."
	041 NotImplemented "Instruction FCSEL not yet implemented."
	042 NotImplemented "Instruction FCMP not yet implemented."
	043 NotImplemented "Instruction FCSEL not yet implemented."
	044 Move X0, X19
	045 Move W1, W20
	046 Call WeightedTransformArray.SetWeight, X0, X1, V0
	047 Add W20, W20, 1
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 Move D9, [X31+48]
	053 Move D8, [X31+56]
	054 Return 

Method: System.Object System.Collections.IList.get_Item(System.Int32 index)

Disassembly:
	0x036F9A9C ADD W8, W10, 0x1
	0x036F9AA0 ADD X9, X9, X10, 0x3, LSL
	0x036F9AA4 STR W8, [X21 + 0x18]
	0x036F9AA8 STR X20, [X9 + 0x20]
	0x036F9AAC B 0x36F9AC8
	0x036F9AB0 LDR X8, [X8 + 0x20]
	0x036F9AB4 MOV X0, X21
	0x036F9AB8 MOV X1, X20
	0x036F9ABC LDR X8, [X8 + 0xC0]
	0x036F9AC0 LDR X2, [X8 + 0x70]
	0x036F9AC4 BL 0x301BF90
	0x036F9AC8 CBZ X20, 0x36F9B84
	0x036F9ACC MOV X0, X20
	0x036F9AD0 MOV X1, X31
	0x036F9AD4 BL 0x3C3F49C
	0x036F9AD8 MOV X20, X0
	0x036F9ADC B 0x36F9A4C
	0x036F9AE0 ADRP X8, 0xA01000
	0x036F9AE4 LDR X8, [X8 + 0x708]
	0x036F9AE8 LDP X20, X19, [X31 + 0x20]
	0x036F9AEC LDP X22, X21, [X31 + 0x10]
	0x036F9AF0 MOV W1, W31
	0x036F9AF4 LDR X0, [X8]
	0x036F9AF8 LDP X30, X23, [X31], #0x30
	0x036F9AFC B 0x1C16D6C
	0x036F9B00 LDR W10, [X21 + 0x1C]
	0x036F9B04 LDR X9, [X21 + 0x10]
	0x036F9B08 ADD W10, W10, 0x1
	0x036F9B0C STR W10, [X21 + 0x1C]
	0x036F9B10 CBZ X9, 0x36F9B84
	0x036F9B14 LDRSW X10, [X21 + 0x18]
	0x036F9B18 LDR W11, [X9 + 0x18]
	0x036F9B1C CMP W10, W11
	0x036F9B20 B.CS 0x36F9B38
	0x036F9B24 ADD W8, W10, 0x1
	0x036F9B28 ADD X9, X9, X10, 0x3, LSL
	0x036F9B2C STR W8, [X21 + 0x18]
	0x036F9B30 STR X19, [X9 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xCE8000
	008 Move X21, 0xA25000
	009 Move W8, [X22+3020]
	010 Move X21, [X21+2400]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA25000
	018 Move X0, [X0+2400]
	019 Call 0x1C17CF4
	020 Move X0, 0xA48000
	021 Move X0, [X0+2808]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3020], W8
	025 Move X0, [X21]
	026 Move X21, 0xA48000
	027 Move W8, [X0+224]
	028 Move X21, [X21+2808]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X20
	033 Move W1, W19
	034 Call WeightedTransformArray.Get, X0, X1
	035 Move X8, [X21]
	036 Move [X31], X0
	037 Move [X31+8], X1
	038 Add X1, X31, 0
	039 Move X0, X8
	040 Call 0x1C17E04
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X30, [X31+16]
	046 Add X31, X31, 64
	047 Return X0

Method: System.Void System.Collections.IList.set_Item(System.Int32 index, System.Object value)

Disassembly:
	0x036F9B34 B 0x36F9B50
	0x036F9B38 LDR X8, [X8 + 0x20]
	0x036F9B3C MOV X0, X21
	0x036F9B40 MOV X1, X19
	0x036F9B44 LDR X8, [X8 + 0xC0]
	0x036F9B48 LDR X2, [X8 + 0x70]
	0x036F9B4C BL 0x301BF90
	0x036F9B50 ADRP X8, 0xA47000
	0x036F9B54 LDR X8, [X8 + 0xC70]
	0x036F9B58 MOV X0, X21
	0x036F9B5C LDR X1, [X8]
	0x036F9B60 BL 0x301DB98
	0x036F9B64 ADRP X8, 0xA47000
	0x036F9B68 LDR X8, [X8 + 0x8D0]
	0x036F9B6C MOV X0, X21
	0x036F9B70 LDP X20, X19, [X31 + 0x20]
	0x036F9B74 LDP X22, X21, [X31 + 0x10]
	0x036F9B78 LDR X1, [X8]
	0x036F9B7C LDP X30, X23, [X31], #0x30
	0x036F9B80 B 0x301DDC4
	0x036F9B84 BL 0x1C16F20
	0x036F9B88 STR D10, [X31 - 0x70]!
	0x036F9B8C STP D9, D8, [X31 + 0x10]
	0x036F9B90 STP X30, X27, [X31 + 0x20]
	0x036F9B94 STP X26, X25, [X31 + 0x30]
	0x036F9B98 STP X24, X23, [X31 + 0x40]
	0x036F9B9C STP X22, X21, [X31 + 0x50]
	0x036F9BA0 STP X20, X19, [X31 + 0x60]
	0x036F9BA4 ADRP X20, 0xCE7000
	0x036F9BA8 LDRB W8, [X20 + 0xBDB]
	0x036F9BAC MOV X19, X0
	0x036F9BB0 TBNZ X8, 0x0, 0x36F9BC8
	0x036F9BB4 ADRP X0, 0x9FA000
	0x036F9BB8 LDR X0, [X0 + 0x638]
	0x036F9BBC BL 0x1C16CF4
	0x036F9BC0 MOVZ W8, 0x1
	0x036F9BC4 STRB W8, [X20 + 0xBDB]
	0x036F9BC8 CBZ X19, 0x36F9CCC
	0x036F9BCC ADRP X8, 0x9FA000
	0x036F9BD0 LDR X8, [X8 + 0x638]
	0x036F9BD4 LDR W1, [X19 + 0x18]
	0x036F9BD8 LDR X0, [X8]
	0x036F9BDC BL 0x1C16D6C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xCE8000
	008 Move X23, 0xA25000
	009 Move W8, [X22+3021]
	010 Move X23, [X23+2400]
	011 Move X21, X2
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xA25000
	019 Move X0, [X0+2400]
	020 Call 0x1C17CF4
	021 Move X0, 0xA48000
	022 Move X0, [X0+2808]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3021], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Compare X21, 0
	032 JumpIfEqual {54}
	033 Move X8, 0xA48000
	034 Move X8, [X8+2808]
	035 Move X9, [X21]
	036 Move X0, X21
	037 Move X1, [X8]
	038 Move X8, [X9+64]
	039 Move X9, [X1+64]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Call 0x1C17E08
	042 Move X2, [X0]
	043 Move X3, [X0+8]
	044 Move X0, X20
	045 Move W1, W19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Call WeightedTransformArray.Set, X0, X1, X2
	053 Return 
	054 Call 0x1C17F20
	055 Call 0x1C181E0

Method: UnityEngine.Animations.Rigging.WeightedTransform get_Item(System.Int32 index)

Disassembly:
	0x036EDB58 LDR X10, [X8 + 0xB8]
	0x036EDB5C ADD X8, X10, 0x24
	0x036EDB60 ADD X9, X10, 0x28
	0x036EDB64 ADD X10, X10, 0x2C
	0x036EDB68 B 0x36EDBE8
	0x036EDB6C ADRP X19, 0xCEB000
	0x036EDB70 LDRB W8, [X19 + 0xA1F]
	0x036EDB74 CBNZ W8, 0x36EDB8C
	0x036EDB78 ADRP X0, 0xA06000
	0x036EDB7C LDR X0, [X0 + 0x5A0]
	0x036EDB80 BL 0x1C16CF4
	0x036EDB84 MOVZ W8, 0x1
	0x036EDB88 STRB W8, [X19 + 0xA1F]
	0x036EDB8C ADRP X8, 0xA06000
	0x036EDB90 LDR X8, [X8 + 0x5A0]
	0x036EDB94 LDR X8, [X8]
	0x036EDB98 LDR X10, [X8 + 0xB8]
	0x036EDB9C ADD X8, X10, 0x48
	0x036EDBA0 ADD X9, X10, 0x4C
	0x036EDBA4 ADD X10, X10, 0x50
	0x036EDBA8 B 0x36EDBE8
	0x036EDBAC ADRP X19, 0xCEB000
	0x036EDBB0 LDRB W8, [X19 + 0xDDE]
	0x036EDBB4 CBNZ W8, 0x36EDBCC
	0x036EDBB8 ADRP X0, 0xA06000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCF4000
	007 Move X22, 0xA31000
	008 Move W8, [X21+3022]
	009 Move X22, [X22+2400]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA31000
	017 Move X0, [X0+2400]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3022], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call WeightedTransformArray.Get, X0, X1
	034 Return X0

Method: System.Void set_Item(System.Int32 index, UnityEngine.Animations.Rigging.WeightedTransform value)

Disassembly:
	0x036F9BE0 CBZ X0, 0x36F9CCC
	0x036F9BE4 LDR W8, [X0 + 0x18]
	0x036F9BE8 MOV X20, X0
	0x036F9BEC CBZ W8, 0x36F9CC8
	0x036F9BF0 STR W31, [X20 + 0x20]
	0x036F9BF4 LDR W8, [X19 + 0x18]
	0x036F9BF8 CMP W8, 0x2
	0x036F9BFC B.LT 0x36F9CA4
	0x036F9C00 ADRP X21, 0x9FA000
	0x036F9C04 LDR X21, [X21 + 0x5A8]
	0x036F9C08 MOV X22, X31
	0x036F9C0C ADD X23, X20, 0x24
	0x036F9C10 ADD X24, X19, 0x28
	0x036F9C14 ADRP X25, 0xCDF000
	0x036F9C18 MOVZ W26, 0x1
	0x036F9C1C ADD X27, X22, 0x1
	0x036F9C20 CMP W27, W8
	0x036F9C24 B.CS 0x36F9CC8
	0x036F9C28 LDR X0, [X24, X22, LSL #3]
	0x036F9C2C CBZ X0, 0x36F9CCC
	0x036F9C30 MOV X1, X31
	0x036F9C34 BL 0x3C3EB78
	0x036F9C38 LDRB W8, [X25 + 0x784]
	0x036F9C3C MOV V8.16B, V0.16B
	0x036F9C40 MOV V9.16B, V1.16B
	0x036F9C44 MOV V10.16B, V2.16B
	0x036F9C48 CBNZ W8, 0x36F9C58
	0x036F9C4C MOV X0, X21
	0x036F9C50 BL 0x1C16CF4
	0x036F9C54 STRB W26, [X25 + 0x784]
	0x036F9C58 LDR X0, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xCE8000
	009 Move X23, 0xA25000
	010 Move W8, [X24+3023]
	011 Move X23, [X23+2400]
	012 Move X19, X3
	013 Move X20, X2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xA25000
	021 Move X0, [X0+2400]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3023], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move W1, W21
	032 Move X2, X20
	033 Move X3, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Call WeightedTransformArray.Set, X0, X1, X2
	042 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x036F9C5C LDR W8, [X0 + 0xE0]
	0x036F9C60 CBNZ W8, 0x36F9C68

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Boolean get_IsReadOnly()

Disassembly:
	0x036F9C64 BL 0x1C16DFC
	0x036F9C68 LDR W8, [X20 + 0x18]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_IsFixedSize()

Disassembly:
	0x036F9C6C CMP W27, W8
	0x036F9C70 B.CS 0x36F9CC8

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean System.Collections.ICollection.get_IsSynchronized()

Disassembly:
	0x036F9C74 FMUL S0, S8, S8
	0x036F9C78 FMUL S1, S9, S9

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Object System.Collections.ICollection.get_SyncRoot()

Disassembly:
	0x036F9C7C FADD S0, S0, S1
	0x036F9C80 FMUL S1, S10, S10

ISIL:
	001 Move X0, X31
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x036F9C84 FADD S0, S1, S0
	0x036F9C88 FSQRT S0, S0
	0x036F9C8C STR S0, [X23, X22, LSL #2]
	0x036F9C90 LDR W8, [X19 + 0x18]
	0x036F9C94 ADD X22, X22, 0x1
	0x036F9C98 ADD W9, W22, 0x1
	0x036F9C9C CMP W9, W8
	0x036F9CA0 B.LT 0x36F9C1C
	0x036F9CA4 MOV X0, X20
	0x036F9CA8 LDP X20, X19, [X31 + 0x60]
	0x036F9CAC LDP X22, X21, [X31 + 0x50]
	0x036F9CB0 LDP X24, X23, [X31 + 0x40]
	0x036F9CB4 LDP X26, X25, [X31 + 0x30]
	0x036F9CB8 LDP X30, X27, [X31 + 0x20]
	0x036F9CBC LDP D9, D8, [X31 + 0x10]
	0x036F9CC0 LDR V10, [X31], #0x70
	0x036F9CC4 RET
	0x036F9CC8 BL 0x1C16F28
	0x036F9CCC BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCE8000
	005 Move X20, 0xA25000
	006 Move W8, [X19+3024]
	007 Move X20, [X20+2400]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA25000
	013 Move X0, [X0+2400]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3024], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 8
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

