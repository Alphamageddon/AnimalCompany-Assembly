Type: UnityEngine.Animations.Rigging.RigBuilder

Method: System.Void OnEnable()

Disassembly:
	0x036F1E94 BL 0x3BF6B50
	0x036F1E98 ADRP X8, 0xA4F000
	0x036F1E9C LDR X8, [X8 + 0x9D0]
	0x036F1EA0 LDR X0, [X8]
	0x036F1EA4 LDR W8, [X0 + 0xE0]
	0x036F1EA8 CBNZ W8, 0x36F1EBC
	0x036F1EAC BL 0x1C16DFC
	0x036F1EB0 ADRP X8, 0xA4F000
	0x036F1EB4 LDR X8, [X8 + 0x9D0]
	0x036F1EB8 LDR X0, [X8]
	0x036F1EBC LDR X8, [X0 + 0xB8]
	0x036F1EC0 LDRH W2, [X8]
	0x036F1EC4 MOV X0, X24
	0x036F1EC8 MOV X1, X25
	0x036F1ECC MOV X3, X31
	0x036F1ED0 BL 0x3BF6BB0
	0x036F1ED4 LDR W8, [X23 + 0x18]
	0x036F1ED8 CBZ W8, 0x36F1F88
	0x036F1EDC SUB W8, W8, 0x1
	0x036F1EE0 SXTW X8, W8
	0x036F1EE4 ADD X8, X23, X8, 0x4, LSL
	0x036F1EE8 LDP X2, X3, [X8 + 0x20]
	0x036F1EEC LDR X4, [X27]
	0x036F1EF0 MOV X0, X24
	0x036F1EF4 MOV X1, X25
	0x036F1EF8 BL 0x223119C
	0x036F1EFC B 0x36F1D94
	0x036F1F00 MOV X20, X31
	0x036F1F04 CBZ X19, 0x36F1F68
	0x036F1F08 LDR X8, [X19]
	0x036F1F0C ADRP X10, 0xA02000
	0x036F1F10 LDRH W9, [X8 + 0x12E]
	0x036F1F14 LDR X10, [X10 + 0xE00]
	0x036F1F18 LDR X1, [X10]
	0x036F1F1C CBZ X9, 0x36F1F40
	0x036F1F20 LDR X10, [X8 + 0xB0]
	0x036F1F24 ADD X10, X10, 0x8
	0x036F1F28 LDUR X11, [X10 - 0x8]
	0x036F1F2C CMP X11, X1
	0x036F1F30 B.EQ 0x36F1F50
	0x036F1F34 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCF0000
	006 Move X21, 0xA03000
	007 Move W8, [X20+2951]
	008 Move X21, [X21+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA03000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move X0, 0xA50000
	018 Move X0, [X0+2488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2951], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X20, 0xA50000
	028 Move X20, [X20+2488]
	029 Move X0, X31
	030 Call Application.get_isPlaying
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {37}
	035 Move X0, X19
	036 Call RigBuilder.Build, X0
	037 Move X8, [X20]
	038 Move X8, [X8+184]
	039 Move X8, [X8]
	040 Compare X8, 0
	041 JumpIfEqual {51}
	042 Move X3, [X8+24]
	043 Move X0, [X8+64]
	044 Move X2, [X8+40]
	045 Move X1, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 CallNoReturn X3
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 

Method: System.Void OnDisable()

Disassembly:
	0x036F20B8 CBZ X20, 0x36F21E8
	0x036F20BC ADRP X10, 0xA4E000
	0x036F20C0 LDR X8, [X20]
	0x036F20C4 LDR X10, [X10 + 0x9E8]
	0x036F20C8 LDRH W9, [X8 + 0x12E]
	0x036F20CC LDR X1, [X10]
	0x036F20D0 CBZ X9, 0x36F20F4
	0x036F20D4 LDR X10, [X8 + 0xB0]
	0x036F20D8 ADD X10, X10, 0x8
	0x036F20DC LDUR X11, [X10 - 0x8]
	0x036F20E0 CMP X11, X1
	0x036F20E4 B.EQ 0x36F2104
	0x036F20E8 SUBS X9, X9, 0x1
	0x036F20EC ADD X10, X10, 0x10
	0x036F20F0 B.NE 0x36F20DC
	0x036F20F4 MOV X0, X20
	0x036F20F8 MOV W2, W31
	0x036F20FC BL 0x1C5C788
	0x036F2100 B 0x36F2110
	0x036F2104 LDRSW X9, [X10]
	0x036F2108 ADD X8, X8, X9, 0x4, LSL
	0x036F210C ADD X0, X8, 0x138
	0x036F2110 LDP X8, X1, [X0]
	0x036F2114 MOV X0, X20
	0x036F2118 BLR X8
	0x036F211C TBZ X0, 0x0, 0x36F21E8
	0x036F2120 ADRP X20, 0xA4E000
	0x036F2124 LDR X20, [X20 + 0xA00]
	0x036F2128 LDR X0, [X20]
	0x036F212C LDR W8, [X0 + 0xE0]
	0x036F2130 CBNZ W8, 0x36F2138
	0x036F2134 BL 0x1C16DFC
	0x036F2138 ADRP X21, 0xCEE000
	0x036F213C LDRB W8, [X21 + 0xBE0]
	0x036F2140 CBNZ W8, 0x36F2158
	0x036F2144 ADRP X0, 0xA4E000
	0x036F2148 LDR X0, [X0 + 0xA00]
	0x036F214C BL 0x1C16CF4
	0x036F2150 MOVZ W8, 0x1
	0x036F2154 STRB W8, [X21 + 0xBE0]
	0x036F2158 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCEF000
	006 Move X21, 0xA02000
	007 Move W8, [X20+2952]
	008 Move X21, [X21+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xA02000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move X0, 0xA4F000
	018 Move X0, [X0+2488]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2952], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X20, 0xA4F000
	028 Move X20, [X20+2488]
	029 Move X0, X31
	030 Call Application.get_isPlaying
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {37}
	035 Move X0, X19
	036 Call RigBuilder.Clear, X0
	037 Move X8, [X20]
	038 Move X8, [X8+184]
	039 Move X8, [X8+8]
	040 Compare X8, 0
	041 JumpIfEqual {51}
	042 Move X3, [X8+24]
	043 Move X0, [X8+64]
	044 Move X2, [X8+40]
	045 Move X1, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 CallNoReturn X3
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 

Method: System.Void OnDestroy()

Disassembly:
	0x036F2294 LDR X8, [X8 + 0x850]

ISIL:
	001 Call RigBuilder.Clear, X0
	002 Return 

Method: System.Void Evaluate(System.Single deltaTime)

Disassembly:
	0x036F2298 MOV X0, X20
	0x036F229C LDR X1, [X8]
	0x036F22A0 BL 0x21A3894
	0x036F22A4 ADRP X8, 0xA01000
	0x036F22A8 LDR X8, [X8 + 0x598]
	0x036F22AC MOV X19, X0
	0x036F22B0 LDR X8, [X8]
	0x036F22B4 LDR W9, [X8 + 0xE0]
	0x036F22B8 CBNZ W9, 0x36F22C4
	0x036F22BC MOV X0, X8
	0x036F22C0 BL 0x1C16DFC
	0x036F22C4 MOV X0, X19
	0x036F22C8 MOV X1, X31
	0x036F22CC MOV X2, X31
	0x036F22D0 BL 0x3C354F8
	0x036F22D4 TBZ X0, 0x0, 0x36F237C
	0x036F22D8 LDR X21, [X20 + 0x28]
	0x036F22DC CBZ X21, 0x36F2390
	0x036F22E0 LDR W8, [X21 + 0x18]
	0x036F22E4 CMP W8, 0x1
	0x036F22E8 B.LT 0x36F237C
	0x036F22EC ADRP X23, 0xA4E000
	0x036F22F0 LDR X23, [X23 + 0x9D8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X19
	005 Move V8, V0
	006 NotImplemented "Instruction LDUR not yet implemented."
	007 Move X19, X0
	008 Add X0, X31, 0
	009 Move X1, X31
	010 Move [X31], V0
	011 Call PlayableGraph.IsValid, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {24}
	016 Move X0, X19
	017 Call RigBuilder.SyncLayers, X0
	018 NotImplemented "Instruction LDUR not yet implemented."
	019 Add X0, X31, 0
	020 Move X1, X31
	021 Move [X31], V0
	022 Move V0, V8
	023 Call PlayableGraph.Evaluate, X0, V0
	024 Move X30, [X31+32]
	025 Move X19, [X31+40]
	026 Move V8, [X31+16]
	027 Add X31, X31, 48
	028 Return 

Method: System.Void Update()

Disassembly:
	0x036F2504 ADD X8, X8, W9, 0x4, SXTW
	0x036F2508 ADD X0, X8, 0x138
	0x036F250C LDP X8, X1, [X0]
	0x036F2510 MOV X0, X19
	0x036F2514 BLR X8
	0x036F2518 TBZ X0, 0x0, 0x36F25D8
	0x036F251C LDR X8, [X19]
	0x036F2520 LDR X1, [X22]
	0x036F2524 LDRH W9, [X8 + 0x12E]
	0x036F2528 CBZ X9, 0x36F254C
	0x036F252C LDR X10, [X8 + 0xB0]
	0x036F2530 ADD X10, X10, 0x8
	0x036F2534 LDUR X11, [X10 - 0x8]
	0x036F2538 CMP X11, X1

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 Move X19, X0
	006 Add X0, X31, 0
	007 Move X1, X31
	008 Move [X31], V0
	009 Call PlayableGraph.IsValid, X0
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {16}
	014 Move X0, X19
	015 Call RigBuilder.SyncLayers, X0
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Add X31, X31, 32
	019 Return 

Method: System.Void SyncLayers()

Disassembly:
	0x036F22F4 MOV W22, W31
	0x036F22F8 CMP W22, W8
	0x036F22FC B.CS 0x36F238C
	0x036F2300 ADD X8, X21, W22, 0x3, SXTW
	0x036F2304 LDR X20, [X8 + 0x20]
	0x036F2308 CBZ X20, 0x36F2390
	0x036F230C LDR X8, [X20]
	0x036F2310 LDR X1, [X23]
	0x036F2314 LDRH W9, [X8 + 0x12E]
	0x036F2318 CBZ X9, 0x36F233C
	0x036F231C LDR X10, [X8 + 0xB0]
	0x036F2320 ADD X10, X10, 0x8
	0x036F2324 LDUR X11, [X10 - 0x8]
	0x036F2328 CMP X11, X1
	0x036F232C B.EQ 0x36F234C
	0x036F2330 SUBS X9, X9, 0x1
	0x036F2334 ADD X10, X10, 0x10
	0x036F2338 B.NE 0x36F2324
	0x036F233C MOVZ W2, 0x5
	0x036F2340 MOV X0, X20
	0x036F2344 BL 0x1C5C788
	0x036F2348 B 0x36F235C
	0x036F234C LDR W9, [X10]
	0x036F2350 ADD W9, W9, 0x5
	0x036F2354 ADD X8, X8, W9, 0x4, SXTW
	0x036F2358 ADD X0, X8, 0x138
	0x036F235C LDP X8, X2, [X0]
	0x036F2360 MOV X0, X20
	0x036F2364 MOV X1, X19
	0x036F2368 BLR X8
	0x036F236C LDR W8, [X21 + 0x18]
	0x036F2370 ADD W22, W22, 0x1
	0x036F2374 CMP W22, W8
	0x036F2378 B.LT 0x36F22F8
	0x036F237C LDP X20, X19, [X31 + 0x20]
	0x036F2380 LDP X22, X21, [X31 + 0x10]
	0x036F2384 LDP X30, X23, [X31], #0x30
	0x036F2388 RET
	0x036F238C BL 0x1C16F28
	0x036F2390 BL 0x1C16F20
	0x036F2394 STR X30, [X31 - 0x20]!
	0x036F2398 STP X20, X19, [X31 + 0x10]
	0x036F239C ADRP X20, 0xCEE000
	0x036F23A0 LDRB W8, [X20 + 0xB8E]
	0x036F23A4 MOV X19, X0
	0x036F23A8 TBNZ X8, 0x0, 0x36F23C0
	0x036F23AC ADRP X0, 0xA01000
	0x036F23B0 LDR X0, [X0 + 0x970]
	0x036F23B4 BL 0x1C16CF4
	0x036F23B8 MOVZ W8, 0x1
	0x036F23BC STRB W8, [X20 + 0xB8E]
	0x036F23C0 MOV X0, X19
	0x036F23C4 MOV X1, X31
	0x036F23C8 STRB W31, [X19 + 0x40]
	0x036F23CC BL 0x3C323D4
	0x036F23D0 TBZ X0, 0x0, 0x36F23F8
	0x036F23D4 ADRP X8, 0xA01000
	0x036F23D8 LDR X8, [X8 + 0x970]
	0x036F23DC LDR X0, [X8]
	0x036F23E0 LDR W8, [X0 + 0xE0]
	0x036F23E4 CBNZ W8, 0x36F23EC
	0x036F23E8 BL 0x1C16DFC
	0x036F23EC MOV X0, X31
	0x036F23F0 BL 0x3C018E4
	0x036F23F4 TBZ X0, 0x0, 0x36F2404
	0x036F23F8 LDP X20, X19, [X31 + 0x10]
	0x036F23FC LDR X30, [X31], #0x20
	0x036F2400 RET
	0x036F2404 MOV X0, X19
	0x036F2408 LDP X20, X19, [X31 + 0x10]
	0x036F240C LDR X30, [X31], #0x20
	0x036F2410 B 0x36F115C
	0x036F2414 SUB X31, X31, 0x40
	0x036F2418 STP X2, X30, [X31 + 0x8]
	0x036F241C STP X22, X21, [X31 + 0x20]
	0x036F2420 STP X20, X19, [X31 + 0x30]
	0x036F2424 ADRP X20, 0xCEE000
	0x036F2428 LDRB W8, [X20 + 0xB8F]
	0x036F242C MOV X19, X0
	0x036F2430 STR X1, [X31]
	0x036F2434 TBNZ X8, 0x0, 0x36F244C
	0x036F2438 ADRP X0, 0xA4E000
	0x036F243C LDR X0, [X0 + 0x9D8]
	0x036F2440 BL 0x1C16CF4
	0x036F2444 MOVZ W8, 0x1
	0x036F2448 STRB W8, [X20 + 0xB8F]
	0x036F244C MOV X0, X19
	0x036F2450 MOV X1, X31
	0x036F2454 BL 0x3C323D4
	0x036F2458 TBZ X0, 0x0, 0x36F25E8
	0x036F245C ADD X0, X31, 0x0
	0x036F2460 MOV X1, X31
	0x036F2464 BL 0x3C5DFF0
	0x036F2468 TBZ X0, 0x0, 0x36F25E8
	0x036F246C LDR X8, [X19 + 0x28]
	0x036F2470 CBZ X8, 0x36F25E8
	0x036F2474 MOV X0, X19
	0x036F2478 BL 0x36F153C
	0x036F247C CBZ X0, 0x36F2600
	0x036F2480 LDR X1, [X19 + 0x28]
	0x036F2484 BL 0x36F15A0
	0x036F2488 LDR X20, [X19 + 0x28]
	0x036F248C CBZ X20, 0x36F2600
	0x036F2490 LDR W8, [X20 + 0x18]
	0x036F2494 CMP W8, 0x1
	0x036F2498 B.LT 0x36F25E8
	0x036F249C ADRP X22, 0xA4E000
	0x036F24A0 LDR X22, [X22 + 0x9D8]
	0x036F24A4 MOV W21, W31
	0x036F24A8 CMP W21, W8
	0x036F24AC B.CS 0x36F25FC
	0x036F24B0 ADD X8, X20, W21, 0x3, SXTW
	0x036F24B4 LDR X19, [X8 + 0x20]
	0x036F24B8 CBZ X19, 0x36F2600
	0x036F24BC LDR X8, [X19]
	0x036F24C0 LDR X1, [X22]
	0x036F24C4 LDRH W9, [X8 + 0x12E]
	0x036F24C8 CBZ X9, 0x36F24EC
	0x036F24CC LDR X10, [X8 + 0xB0]
	0x036F24D0 ADD X10, X10, 0x8
	0x036F24D4 LDUR X11, [X10 - 0x8]
	0x036F24D8 CMP X11, X1
	0x036F24DC B.EQ 0x36F24FC
	0x036F24E0 SUBS X9, X9, 0x1
	0x036F24E4 ADD X10, X10, 0x10
	0x036F24E8 B.NE 0x36F24D4
	0x036F24EC MOVZ W2, 0x8
	0x036F24F0 MOV X0, X19
	0x036F24F4 BL 0x1C5C788
	0x036F24F8 B 0x36F250C
	0x036F24FC LDR W9, [X10]
	0x036F2500 ADD W9, W9, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xCEF000
	008 Move W8, [X20+2953]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA4F000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2953], W8
	019 Move X8, [X19+40]
	020 Compare X8, 0
	021 JumpIfEqual {141}
	022 Move X0, X19
	023 Call RigBuilder.get_syncSceneToStreamLayer, X0
	024 Compare X0, 0
	025 JumpIfEqual {140}
	026 Move X1, [X19+40]
	027 Call SyncSceneToStreamLayer.Update, X0, X1
	028 Move X8, [X19+40]
	029 Compare X8, 0
	030 JumpIfEqual {140}
	031 Move W21, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X22, 0xA4F000
	034 Move X22, [X22+2520]
	035 Move W9, W31
	036 Move W10, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X23, W9
	039 Add X8, X8, X23
	040 Move X20, [X8+32]
	041 Compare X20, 0
	042 JumpIfEqual {140}
	043 Move X8, [X20]
	044 Move X1, [X22]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move W2, 8
	055 Move X0, X20
	056 Call 0x1C5D788
	057 Move W9, [X10]
	058 Add W9, W9, 8
	059 Add X8, X8, W9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X1, [X0+8]
	063 Move X0, X20
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {135}
	069 Move X8, [X19+40]
	070 Compare X8, 0
	071 JumpIfEqual {140}
	072 Move W9, [X8+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add X8, X8, X23
	075 Move X20, [X8+32]
	076 Compare X20, 0
	077 JumpIfEqual {140}
	078 Move X8, [X20]
	079 Move X1, [X22]
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move W2, 3
	090 Move X0, X20
	091 Call 0x1C5D788
	092 Move W9, [X10]
	093 Add W9, W9, 3
	094 Add X8, X8, W9
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X1, [X0+8]
	098 Move X0, X20
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move TEMP, X0
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {135}
	104 Move X8, [X19+40]
	105 Compare X8, 0
	106 JumpIfEqual {140}
	107 Move W9, [X8+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Add X8, X8, X23
	110 Move X20, [X8+32]
	111 Compare X20, 0
	112 JumpIfEqual {140}
	113 Move X8, [X20]
	114 Move X1, [X22]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move W2, 6
	125 Move X0, X20
	126 Call 0x1C5D788
	127 Move W9, [X10]
	128 Add W9, W9, 6
	129 Add X8, X8, W9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, X20
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Add W9, W23, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X8, [X19+40]
	138 Compare X8, 0
	139 JumpIfNotEqual {36}
	140 Call 0x1C17F20
	141 Move X20, [X31+32]
	142 Move X19, [X31+40]
	143 Move X22, [X31+16]
	144 Move X21, [X31+24]
	145 Move X30, [X31+48]
	146 Move X23, [X31+56]
	147 Return 
	148 Call 0x1C17F28

Method: System.Boolean Build()

Disassembly:
	0x036F1F38 ADD X10, X10, 0x10
	0x036F1F3C B.NE 0x36F1F28
	0x036F1F40 MOV X0, X19
	0x036F1F44 MOV W2, W31
	0x036F1F48 BL 0x1C5C788
	0x036F1F4C B 0x36F1F5C
	0x036F1F50 LDRSW X9, [X10]
	0x036F1F54 ADD X8, X8, X9, 0x4, LSL
	0x036F1F58 ADD X0, X8, 0x138
	0x036F1F5C LDP X8, X1, [X0]
	0x036F1F60 MOV X0, X19
	0x036F1F64 BLR X8
	0x036F1F68 CBNZ X20, 0x36F1F94
	0x036F1F6C LDP X20, X19, [X31 + 0x50]
	0x036F1F70 LDP X22, X21, [X31 + 0x40]
	0x036F1F74 LDP X24, X23, [X31 + 0x30]
	0x036F1F78 LDP X26, X25, [X31 + 0x20]
	0x036F1F7C LDP X28, X27, [X31 + 0x10]
	0x036F1F80 LDP X29, X30, [X31], #0x60
	0x036F1F84 RET
	0x036F1F88 BL 0x1C16F28
	0x036F1F8C BL 0x1C16F20
	0x036F1F90 BL 0x1C16F20
	0x036F1F94 MOV X0, X20
	0x036F1F98 BL 0x1C16F18
	0x036F1F9C B 0x36F1FC0
	0x036F1FA0 B 0x36F1FC0
	0x036F1FA4 B 0x36F1FC0
	0x036F1FA8 B 0x36F1FC0
	0x036F1FAC B 0x36F1FC0
	0x036F1FB0 B 0x36F1FC0
	0x036F1FB4 B 0x36F1FC0
	0x036F1FB8 B 0x36F1FC0
	0x036F1FBC B 0x36F1FC0
	0x036F1FC0 MOV X21, X0
	0x036F1FC4 CMP W1, 0x1
	0x036F1FC8 B.NE 0x36F1FE0
	0x036F1FCC MOV X0, X21
	0x036F1FD0 BL 0x3EB1AD0
	0x036F1FD4 LDR X20, [X0]
	0x036F1FD8 BL 0x3EB1AE0
	0x036F1FDC B 0x36F1F04
	0x036F1FE0 MOV X20, X31
	0x036F1FE4 B 0x36F1FEC
	0x036F1FE8 MOV X21, X0
	0x036F1FEC CBZ X19, 0x36F2050
	0x036F1FF0 LDR X8, [X19]
	0x036F1FF4 ADRP X10, 0xA02000
	0x036F1FF8 LDRH W9, [X8 + 0x12E]
	0x036F1FFC LDR X10, [X10 + 0xE00]
	0x036F2000 LDR X1, [X10]
	0x036F2004 CBZ X9, 0x36F2028
	0x036F2008 LDR X10, [X8 + 0xB0]
	0x036F200C ADD X10, X10, 0x8
	0x036F2010 LDUR X11, [X10 - 0x8]
	0x036F2014 CMP X11, X1
	0x036F2018 B.EQ 0x36F2038
	0x036F201C SUBS X9, X9, 0x1
	0x036F2020 ADD X10, X10, 0x10
	0x036F2024 B.NE 0x36F2010
	0x036F2028 MOV X0, X19
	0x036F202C MOV W2, W31
	0x036F2030 BL 0x1C5C788
	0x036F2034 B 0x36F2044
	0x036F2038 LDRSW X9, [X10]
	0x036F203C ADD X8, X8, X9, 0x4, LSL
	0x036F2040 ADD X0, X8, 0x138
	0x036F2044 LDP X8, X1, [X0]
	0x036F2048 MOV X0, X19
	0x036F204C BLR X8
	0x036F2050 CBNZ X20, 0x36F205C
	0x036F2054 MOV X0, X21
	0x036F2058 BL 0x1D2C690
	0x036F205C MOV X0, X20
	0x036F2060 BL 0x1C16F18
	0x036F2064 BL 0x1990590
	0x036F2068 STP X30, X21, [X31 - 0x20]!
	0x036F206C STP X20, X19, [X31 + 0x10]
	0x036F2070 ADRP X20, 0xCEE000
	0x036F2074 LDRB W8, [X20 + 0xBB1]
	0x036F2078 MOV X19, X0
	0x036F207C TBNZ X8, 0x0, 0x36F20AC
	0x036F2080 ADRP X0, 0xA2A000
	0x036F2084 LDR X0, [X0 + 0xE28]
	0x036F2088 BL 0x1C16CF4
	0x036F208C ADRP X0, 0xA4E000
	0x036F2090 LDR X0, [X0 + 0x9E8]
	0x036F2094 BL 0x1C16CF4
	0x036F2098 ADRP X0, 0xA4E000
	0x036F209C LDR X0, [X0 + 0xA00]
	0x036F20A0 BL 0x1C16CF4
	0x036F20A4 MOVZ W8, 0x1
	0x036F20A8 STRB W8, [X20 + 0xBB1]
	0x036F20AC LDRB W8, [X19 + 0x10]
	0x036F20B0 CBZ W8, 0x36F21EC
	0x036F20B4 LDR X20, [X19 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xCF0000
	008 Move W8, [X20+2954]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0xA0D000
	015 Move X0, [X0+2128]
	016 Call 0x1C17CF4
	017 Move X0, 0xA50000
	018 Move X0, [X0+2496]
	019 Call 0x1C17CF4
	020 Move X0, 0xA50000
	021 Move X0, [X0+2504]
	022 Call 0x1C17CF4
	023 Move X0, 0xA03000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0xA50000
	027 Move X0, [X0+2512]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2954], W8
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Move W8, [X19+64]
	034 Compare W8, 0
	035 JumpIfNotEqual {109}
	036 Move X0, X19
	037 Call RigBuilder.Clear, X0
	038 Move X8, 0xA0D000
	039 Move X8, [X8+2128]
	040 Move X0, X19
	041 Move X1, [X8]
	042 Call 0x21A4894, X0
	043 Move X8, 0xA03000
	044 Move X8, [X8+1432]
	045 Move X20, X0
	046 Move X8, [X8]
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {109}
	060 Move X0, X19
	061 Call RigBuilder.get_layers, X0
	062 Compare X0, 0
	063 JumpIfEqual {117}
	064 Move W8, [X0+24]
	065 Compare W8, 0
	066 JumpIfEqual {109}
	067 Move X0, X19
	068 Call RigBuilder.get_layers, X0
	069 Compare X0, 0
	070 JumpIfEqual {117}
	071 Move X8, 0xA4F000
	072 Move X8, [X8+2496]
	073 Move X1, [X8]
	074 Call List`1<Object>.ToArray, X0
	075 Move X21, X0
	076 Move [X19+40], X0
	077 Move X0, X19
	078 Call RigBuilder.get_syncSceneToStreamLayer, X0
	079 Move X8, 0xA4F000
	080 Move X8, [X8+2512]
	081 Move X22, X0
	082 Move X8, [X8]
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X0, X20
	089 Move X1, X21
	090 Move X2, X22
	091 Call RigBuilderUtils.BuildPlayableGraph, X0, X1, X2
	092 Move [X19+72], X0
	093 Move [X19+80], X1
	094 Move [X31], X0
	095 Move [X31+8], X1
	096 Add X0, X31, 0
	097 Move X1, X31
	098 Call PlayableGraph.IsValid, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {109}
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 Add X0, X31, 0
	105 Move X1, X31
	106 Move [X31], V0
	107 Call PlayableGraph.Play, X0
	108 Move W0, 1
	109 Move W0, W31
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X30, [X31+16]
	115 Add X31, X31, 64
	116 Return X0
	117 Call 0x1C17F20

Method: System.Boolean Build(UnityEngine.Playables.PlayableGraph graph)

Disassembly:
	0x036F2AE8 BL 0x1C16CF4
	0x036F2AEC ADRP X0, 0xA4E000
	0x036F2AF0 LDR X0, [X0 + 0x9D0]
	0x036F2AF4 BL 0x1C16CF4
	0x036F2AF8 ADRP X0, 0xA4E000
	0x036F2AFC LDR X0, [X0 + 0xA00]
	0x036F2B00 BL 0x1C16CF4
	0x036F2B04 ADRP X0, 0xA4E000
	0x036F2B08 LDR X0, [X0 + 0xA70]
	0x036F2B0C BL 0x1C16CF4
	0x036F2B10 MOVZ W8, 0x1
	0x036F2B14 STRB W8, [X19 + 0xB95]
	0x036F2B18 CBZ X23, 0x36F3018
	0x036F2B1C ADRP X10, 0xA4E000
	0x036F2B20 LDR X8, [X23]
	0x036F2B24 LDR X10, [X10 + 0xA48]
	0x036F2B28 ADRP X21, 0xA4E000
	0x036F2B2C ADRP X19, 0xA4E000
	0x036F2B30 LDRH W9, [X8 + 0x12E]
	0x036F2B34 LDR X1, [X10]
	0x036F2B38 LDR X21, [X21 + 0xA60]
	0x036F2B3C LDR X19, [X19 + 0xA50]
	0x036F2B40 CBZ X9, 0x36F2B64
	0x036F2B44 LDR X10, [X8 + 0xB0]
	0x036F2B48 ADD X10, X10, 0x8
	0x036F2B4C LDUR X11, [X10 - 0x8]
	0x036F2B50 CMP X11, X1
	0x036F2B54 B.EQ 0x36F2B74
	0x036F2B58 SUBS X9, X9, 0x1
	0x036F2B5C ADD X10, X10, 0x10
	0x036F2B60 B.NE 0x36F2B4C
	0x036F2B64 MOV X0, X23
	0x036F2B68 MOV W2, W31
	0x036F2B6C BL 0x1C5C788
	0x036F2B70 B 0x36F2B80
	0x036F2B74 LDRSW X9, [X10]
	0x036F2B78 ADD X8, X8, X9, 0x4, LSL
	0x036F2B7C ADD X0, X8, 0x138
	0x036F2B80 LDP X8, X1, [X0]
	0x036F2B84 MOV X0, X23
	0x036F2B88 BLR X8
	0x036F2B8C LDR X8, [X21]
	0x036F2B90 ADD W1, W0, 0x1
	0x036F2B94 MOV X0, X8
	0x036F2B98 BL 0x1C16D6C
	0x036F2B9C LDR X8, [X23]
	0x036F2BA0 LDR X1, [X19]
	0x036F2BA4 MOV X22, X0
	0x036F2BA8 LDRH W9, [X8 + 0x12E]
	0x036F2BAC CBZ X9, 0x36F2BD0
	0x036F2BB0 LDR X10, [X8 + 0xB0]
	0x036F2BB4 ADD X10, X10, 0x8
	0x036F2BB8 LDUR X11, [X10 - 0x8]
	0x036F2BBC CMP X11, X1
	0x036F2BC0 B.EQ 0x36F2BE0
	0x036F2BC4 SUBS X9, X9, 0x1
	0x036F2BC8 ADD X10, X10, 0x10
	0x036F2BCC B.NE 0x36F2BB8
	0x036F2BD0 MOV X0, X23
	0x036F2BD4 MOV W2, W31
	0x036F2BD8 BL 0x1C5C788
	0x036F2BDC B 0x36F2BEC
	0x036F2BE0 LDRSW X9, [X10]
	0x036F2BE4 ADD X8, X8, X9, 0x4, LSL
	0x036F2BE8 ADD X0, X8, 0x138
	0x036F2BEC LDP X8, X1, [X0]
	0x036F2BF0 MOV X0, X23
	0x036F2BF4 STR X23, [X31 + 0x10]
	0x036F2BF8 BLR X8
	0x036F2BFC MOV X25, X0
	0x036F2C00 CBZ X0, 0x36F301C
	0x036F2C04 ADRP X29, 0xA01000
	0x036F2C08 ADRP X28, 0xA4E000
	0x036F2C0C ADRP X21, 0xA4E000
	0x036F2C10 ADRP X23, 0xA4E000
	0x036F2C14 LDR X29, [X29 + 0xE18]
	0x036F2C18 LDR X28, [X28 + 0xA58]
	0x036F2C1C LDR X21, [X21 + 0x9D8]
	0x036F2C20 LDR X23, [X23 + 0x9D0]
	0x036F2C24 MOVZ W19, 0x1
	0x036F2C28 LDR X8, [X25]
	0x036F2C2C LDR X1, [X29]
	0x036F2C30 LDRH W9, [X8 + 0x12E]
	0x036F2C34 CBZ X9, 0x36F2C58
	0x036F2C38 LDR X10, [X8 + 0xB0]
	0x036F2C3C ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xCEF000
	008 Move W8, [X22+2955]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xA0C000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move X0, 0xA4F000
	020 Move X0, [X0+2496]
	021 Call 0x1C17CF4
	022 Move X0, 0xA4F000
	023 Move X0, [X0+2504]
	024 Call 0x1C17CF4
	025 Move X0, 0xA02000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0xA4F000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2955], W8
	033 Move W8, [X21+64]
	034 Compare W8, 0
	035 JumpIfNotEqual {95}
	036 Move X0, X21
	037 Call RigBuilder.Clear, X0
	038 Move X8, 0xA0C000
	039 Move X8, [X8+2128]
	040 Move X0, X21
	041 Move X1, [X8]
	042 Call 0x21A4894, X0
	043 Move X8, 0xA02000
	044 Move X8, [X8+1432]
	045 Move X22, X0
	046 Move X8, [X8]
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X0, X22
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {95}
	060 Move X0, X21
	061 Call RigBuilder.get_layers, X0
	062 Compare X0, 0
	063 JumpIfEqual {103}
	064 Move W8, [X0+24]
	065 Compare W8, 0
	066 JumpIfEqual {95}
	067 Move X0, X21
	068 Call RigBuilder.get_layers, X0
	069 Compare X0, 0
	070 JumpIfEqual {103}
	071 Move X8, 0xA4F000
	072 Move X8, [X8+2496]
	073 Move X1, [X8]
	074 Call List`1<Object>.ToArray, X0
	075 Move X23, X0
	076 Move [X21+40], X0
	077 Move X0, X21
	078 Call RigBuilder.get_syncSceneToStreamLayer, X0
	079 Move X8, 0xA4F000
	080 Move X8, [X8+2512]
	081 Move X21, X0
	082 Move X8, [X8]
	083 Move W9, [X8+224]
	084 Compare W9, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move X0, X20
	089 Move X1, X19
	090 Move X2, X22
	091 Move X3, X23
	092 Move X4, X21
	093 Call RigBuilderUtils.BuildPlayableGraph, X0, X1, X2, X3
	094 Move W0, 1
	095 Move W0, W31
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Move X23, [X31+56]
	102 Return X0
	103 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x036F215C LDR W8, [X0 + 0xE0]
	0x036F2160 CBNZ W8, 0x36F216C
	0x036F2164 BL 0x1C16DFC
	0x036F2168 LDR X0, [X20]
	0x036F216C LDR X8, [X0 + 0xB8]
	0x036F2170 LDR X20, [X8 + 0x8]
	0x036F2174 CBZ X20, 0x36F21F8
	0x036F2178 ADRP X10, 0xA2A000
	0x036F217C LDR X8, [X20]
	0x036F2180 LDR X21, [X19 + 0x18]
	0x036F2184 LDR X10, [X10 + 0xE28]
	0x036F2188 LDRH W9, [X8 + 0x12E]
	0x036F218C LDR X1, [X10]
	0x036F2190 CBZ X9, 0x36F21B4
	0x036F2194 LDR X10, [X8 + 0xB0]
	0x036F2198 ADD X10, X10, 0x8
	0x036F219C LDUR X11, [X10 - 0x8]
	0x036F21A0 CMP X11, X1
	0x036F21A4 B.EQ 0x36F21C4
	0x036F21A8 SUBS X9, X9, 0x1
	0x036F21AC ADD X10, X10, 0x10
	0x036F21B0 B.NE 0x36F219C
	0x036F21B4 MOVZ W2, 0x1
	0x036F21B8 MOV X0, X20
	0x036F21BC BL 0x1C5C788
	0x036F21C0 B 0x36F21D4
	0x036F21C4 LDR W9, [X10]
	0x036F21C8 ADD W9, W9, 0x1
	0x036F21CC ADD X8, X8, W9, 0x4, SXTW
	0x036F21D0 ADD X0, X8, 0x138
	0x036F21D4 LDP X8, X2, [X0]
	0x036F21D8 MOV X0, X20
	0x036F21DC MOV X1, X21
	0x036F21E0 BLR X8
	0x036F21E4 STR X31, [X19 + 0x20]
	0x036F21E8 STRB W31, [X19 + 0x10]
	0x036F21EC LDP X20, X19, [X31 + 0x10]
	0x036F21F0 LDP X30, X21, [X31], #0x20
	0x036F21F4 RET
	0x036F21F8 BL 0x1C16F20
	0x036F21FC STP X30, X23, [X31 - 0x30]!
	0x036F2200 STP X22, X21, [X31 + 0x10]
	0x036F2204 STP X20, X19, [X31 + 0x20]
	0x036F2208 ADRP X19, 0xCEE000
	0x036F220C LDRB W8, [X19 + 0xB8D]
	0x036F2210 MOV X20, X0
	0x036F2214 TBNZ X8, 0x0, 0x36F2250
	0x036F2218 ADRP X0, 0xA0B000
	0x036F221C LDR X0, [X0 + 0x850]
	0x036F2220 BL 0x1C16CF4
	0x036F2224 ADRP X0, 0xA4E000
	0x036F2228 LDR X0, [X0 + 0x9D8]
	0x036F222C BL 0x1C16CF4
	0x036F2230 ADRP X0, 0xA4E000
	0x036F2234 LDR X0, [X0 + 0x9C0]
	0x036F2238 BL 0x1C16CF4
	0x036F223C ADRP X0, 0xA01000
	0x036F2240 LDR X0, [X0 + 0x598]
	0x036F2244 BL 0x1C16CF4
	0x036F2248 MOVZ W8, 0x1
	0x036F224C STRB W8, [X19 + 0xB8D]
	0x036F2250 MOVZ W8, 0x1
	0x036F2254 MOV X0, X20
	0x036F2258 MOV X1, X31
	0x036F225C STRB W8, [X20 + 0x40]
	0x036F2260 BL 0x3C323D4
	0x036F2264 TBZ X0, 0x0, 0x36F237C
	0x036F2268 LDR X8, [X20 + 0x28]
	0x036F226C CBNZ X8, 0x36F2290
	0x036F2270 MOV X0, X20
	0x036F2274 BL 0x36F1980
	0x036F2278 CBZ X0, 0x36F2390
	0x036F227C ADRP X8, 0xA4E000
	0x036F2280 LDR X8, [X8 + 0x9C0]
	0x036F2284 LDR X1, [X8]
	0x036F2288 BL 0x301DDC4
	0x036F228C STR X0, [X20 + 0x28]
	0x036F2290 ADRP X8, 0xA0B000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xCEF000
	009 Move W8, [X20+2956]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xA4F000
	016 Move X0, [X0+2520]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2956], W8
	020 Move W8, [X19+64]
	021 Compare W8, 0
	022 JumpIfNotEqual {81}
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 Add X0, X31, 0
	025 Move X1, X31
	026 Move [X31], V0
	027 Call PlayableGraph.IsValid, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {37}
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 Add X0, X31, 0
	034 Move X1, X31
	035 Move [X31], V0
	036 Call PlayableGraph.Destroy, X0
	037 Move X21, [X19+40]
	038 Compare X21, 0
	039 JumpIfEqual {76}
	040 Move W8, [X21+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X23, 0xA4F000
	043 Move X23, [X23+2520]
	044 Move W22, W31
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X8, X21, W22
	047 Move X20, [X8+32]
	048 Compare X20, 0
	049 JumpIfEqual {90}
	050 Move X8, [X20]
	051 Move X1, [X23]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 7
	062 Move X0, X20
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 7
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X20
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move W8, [X21+24]
	073 Add W22, W22, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X19+40], X31
	076 Move X0, X19
	077 Call RigBuilder.get_syncSceneToStreamLayer, X0
	078 Compare X0, 0
	079 JumpIfEqual {90}
	080 Call SyncSceneToStreamLayer.Reset, X0
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X30, [X31+16]
	086 Move X23, [X31+24]
	087 Add X31, X31, 64
	088 Return 
	089 Call 0x1C17F28
	090 Call 0x1C17F20

Method: System.Void StartPreview()

Disassembly:
	0x036F31FC STR X8, [X19 + 0x18]
	0x036F3200 STR X9, [X19 + 0x40]
	0x036F3204 B 0x36F326C
	0x036F3208 LDRB W8, [X19 + 0x70]
	0x036F320C CBZ W8, 0x36F3238
	0x036F3210 MOV X0, X20
	0x036F3214 BL 0x1C16D7C
	0x036F3218 MOV W21, W0
	0x036F321C MOV X0, X20
	0x036F3220 BL 0x1C17238
	0x036F3224 TBZ X21, 0x0, 0x36F3244
	0x036F3228 TBZ X0, 0x0, 0x36F3254
	0x036F322C ADRP X8, 0xFFFFFFFFFE4D6000
	0x036F3230 ADD X8, X8, 0xE64
	0x036F3234 B 0x36F3268
	0x036F3238 ADRP X8, 0xFFFFFFFFFE4D6000
	0x036F323C ADD X8, X8, 0xD48
	0x036F3240 B 0x36F3268
	0x036F3244 TBZ X0, 0x0, 0x36F3260
	0x036F3248 ADRP X8, 0xFFFFFFFFFE4D6000
	0x036F324C ADD X8, X8, 0xDA4
	0x036F3250 B 0x36F3268
	0x036F3254 ADRP X8, 0xFFFFFFFFFE4D6000
	0x036F3258 ADD X8, X8, 0xE28
	0x036F325C B 0x36F3268
	0x036F3260 ADRP X8, 0xFFFFFFFFFE4D6000
	0x036F3264 ADD X8, X8, 0xD78
	0x036F3268 STR X8, [X19 + 0x18]
	0x036F326C ADRP X8, 0xFFFFFFFFFE4D6000
	0x036F3270 ADD X8, X8, 0xD00
	0x036F3274 STR X8, [X19 + 0x38]
	0x036F3278 LDP X20, X19, [X31 + 0x20]
	0x036F327C LDP X22, X21, [X31 + 0x10]
	0x036F3280 LDR X30, [X31], #0x30
	0x036F3284 RET
	0x036F3288 ADRP X1, 0xFFFFFFFFFD428000
	0x036F328C ADD X1, X1, 0xEE3
	0x036F3290 MOV X0, X31
	0x036F3294 BL 0x1C16F3C
	0x036F3298 MOV X1, X31
	0x036F329C BL 0x1C16DEC
	0x036F32A0 LDR X8, [X0 + 0x40]
	0x036F32A4 LDR X3, [X0 + 0x18]
	0x036F32A8 LDR X2, [X0 + 0x28]
	0x036F32AC MOV X0, X8
	0x036F32B0 BR X3
	0x036F32B4 SUB X31, X31, 0x20
	0x036F32B8 STP X31, X30, [X31 + 0x8]
	0x036F32BC STR X1, [X31]
	0x036F32C0 ADD X1, X31, 0x0
	0x036F32C4 BL 0x1C16CB0
	0x036F32C8 LDR X30, [X31 + 0x10]
	0x036F32CC ADD X31, X31, 0x20
	0x036F32D0 RET
	0x036F32D4 MOV X0, X1
	0x036F32D8 MOV X1, X31
	0x036F32DC B 0x1C16CB4
	0x036F32E0 STR X30, [X31 - 0x30]!
	0x036F32E4 STP X22, X21, [X31 + 0x10]
	0x036F32E8 STP X20, X19, [X31 + 0x20]
	0x036F32EC LDR X8, [X2 + 0x8]
	0x036F32F0 STP X1, X2, [X0 + 0x20]
	0x036F32F4 MOV X19, X0
	0x036F32F8 MOV X20, X2
	0x036F32FC STR X8, [X0 + 0x10]
	0x036F3300 LDRB W22, [X2 + 0x52]
	0x036F3304 STR X0, [X0 + 0x40]
	0x036F3308 MOV X0, X2
	0x036F330C MOV X21, X1
	0x036F3310 BL 0x1C16D84
	0x036F3314 TBZ X0, 0x0, 0x36F332C
	0x036F3318 CMP W22, 0x1
	0x036F331C B.NE 0x36F3334
	0x036F3320 ADRP X8, 0xFFFFFFFFFE4D6000
	0x036F3324 ADD X8, X8, 0xF58
	0x036F3328 B 0x36F33A8
	0x036F332C CBZ W22, 0x36F3348
	0x036F3330 CBZ X21, 0x36F33C8
	0x036F3334 LDR X8, [X19 + 0x10]
	0x036F3338 LDR X9, [X19 + 0x20]
	0x036F333C STR X8, [X19 + 0x18]
	0x036F3340 STR X9, [X19 + 0x40]
	0x036F3344 B 0x36F33AC
	0x036F3348 LDRB W8, [X19 + 0x70]
	0x036F334C CBZ W8, 0x36F3378
	0x036F3350 MOV X0, X20
	0x036F3354 BL 0x1C16D7C
	0x036F3358 MOV W21, W0
	0x036F335C MOV X0, X20
	0x036F3360 BL 0x1C17238
	0x036F3364 TBZ X21, 0x0, 0x36F3384
	0x036F3368 TBZ X0, 0x0, 0x36F3394
	0x036F336C ADRP X8, 0xFFFFFFFFFE4D7000
	0x036F3370 ADD X8, X8, 0x54
	0x036F3374 B 0x36F33A8
	0x036F3378 ADRP X8, 0xFFFFFFFFFE4D6000
	0x036F337C ADD X8, X8, 0xF38
	0x036F3380 B 0x36F33A8
	0x036F3384 TBZ X0, 0x0, 0x36F33A0
	0x036F3388 ADRP X8, 0xFFFFFFFFFE4D6000
	0x036F338C ADD X8, X8, 0xF94
	0x036F3390 B 0x36F33A8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0xCEE000
	008 Move W8, [X19+2957]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xA0B000
	015 Move X0, [X0+2128]
	016 Call 0x1C17CF4
	017 Move X0, 0xA4E000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move X0, 0xA4E000
	021 Move X0, [X0+2496]
	022 Call 0x1C17CF4
	023 Move X0, 0xA01000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+2957], W8
	028 Move W8, 1
	029 Move X0, X20
	030 Move X1, X31
	031 Move [X20+64], W8
	032 Call Behaviour.get_enabled, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {110}
	037 Move X8, [X20+40]
	038 Compare X8, 0
	039 JumpIfNotEqual {49}
	040 Move X0, X20
	041 Call RigBuilder.get_layers, X0
	042 Compare X0, 0
	043 JumpIfEqual {118}
	044 Move X8, 0xA4E000
	045 Move X8, [X8+2496]
	046 Move X1, [X8]
	047 Call List`1<Object>.ToArray, X0
	048 Move [X20+40], X0
	049 Move X8, 0xA0B000
	050 Move X8, [X8+2128]
	051 Move X0, X20
	052 Move X1, [X8]
	053 Call 0x21A4894, X0
	054 Move X8, 0xA01000
	055 Move X8, [X8+1432]
	056 Move X19, X0
	057 Move X8, [X8]
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X0, X19
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Inequality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {110}
	071 Move X21, [X20+40]
	072 Compare X21, 0
	073 JumpIfEqual {118}
	074 Move W8, [X21+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X23, 0xA4E000
	077 Move X23, [X23+2520]
	078 Move W22, W31
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X8, X21, W22
	081 Move X20, [X8+32]
	082 Compare X20, 0
	083 JumpIfEqual {118}
	084 Move X8, [X20]
	085 Move X1, [X23]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 5
	096 Move X0, X20
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 5
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X2, [X0+8]
	104 Move X0, X20
	105 Move X1, X19
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move W8, [X21+24]
	108 Add W22, W22, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X30, [X31+48]
	115 Move X23, [X31+56]
	116 Return 
	117 Call 0x1C17F28
	118 Call 0x1C17F20

Method: System.Void StopPreview()

Disassembly:
	0x036F3394 ADRP X8, 0xFFFFFFFFFE4D7000
	0x036F3398 ADD X8, X8, 0x18
	0x036F339C B 0x36F33A8
	0x036F33A0 ADRP X8, 0xFFFFFFFFFE4D6000
	0x036F33A4 ADD X8, X8, 0xF68
	0x036F33A8 STR X8, [X19 + 0x18]
	0x036F33AC ADRP X8, 0xFFFFFFFFFE4D6000
	0x036F33B0 ADD X8, X8, 0xEF0
	0x036F33B4 STR X8, [X19 + 0x38]
	0x036F33B8 LDP X20, X19, [X31 + 0x20]
	0x036F33BC LDP X22, X21, [X31 + 0x10]
	0x036F33C0 LDR X30, [X31], #0x30
	0x036F33C4 RET
	0x036F33C8 ADRP X1, 0xFFFFFFFFFD428000
	0x036F33CC ADD X1, X1, 0xEE3
	0x036F33D0 MOV X0, X31
	0x036F33D4 BL 0x1C16F3C
	0x036F33D8 MOV X1, X31
	0x036F33DC BL 0x1C16DEC
	0x036F33E0 LDR X8, [X0 + 0x40]
	0x036F33E4 LDR X3, [X0 + 0x18]
	0x036F33E8 LDR X2, [X0 + 0x28]
	0x036F33EC MOV X0, X8
	0x036F33F0 BR X3
	0x036F33F4 SUB X31, X31, 0x20
	0x036F33F8 STP X31, X30, [X31 + 0x8]
	0x036F33FC STR X1, [X31]
	0x036F3400 ADD X1, X31, 0x0
	0x036F3404 BL 0x1C16CB0
	0x036F3408 LDR X30, [X31 + 0x10]
	0x036F340C ADD X31, X31, 0x20
	0x036F3410 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCEE000
	005 Move W8, [X20+2958]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA01000
	012 Move X0, [X0+2416]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2958], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Move [X19+64], W31
	019 Call Behaviour.get_enabled, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {37}
	024 Move X8, 0xA01000
	025 Move X8, [X8+2416]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X31
	032 Call Application.get_isPlaying
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {41}
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return 
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Call RigBuilder.Clear, X0
	046 Return 

Method: System.Void UpdatePreviewGraph(UnityEngine.Playables.PlayableGraph graph)

Disassembly:
	0x036F3414 MOV X0, X1
	0x036F3418 MOV X1, X31
	0x036F341C B 0x1C16CB4
	0x036F3420 STP X29, X30, [X31 - 0x60]!
	0x036F3424 STP X28, X27, [X31 + 0x10]
	0x036F3428 STP X26, X25, [X31 + 0x20]
	0x036F342C STP X24, X23, [X31 + 0x30]
	0x036F3430 STP X22, X21, [X31 + 0x40]
	0x036F3434 STP X20, X19, [X31 + 0x50]
	0x036F3438 ADRP X22, 0xCED000
	0x036F343C LDRB W8, [X22 + 0xB94]
	0x036F3440 MOV X19, X2
	0x036F3444 MOV X20, X1
	0x036F3448 MOV X21, X0
	0x036F344C TBNZ X8, 0x0, 0x36F34A0
	0x036F3450 ADRP X0, 0xA29000
	0x036F3454 LDR X0, [X0 + 0xAF8]
	0x036F3458 BL 0x1C16CF4
	0x036F345C ADRP X0, 0xA29000
	0x036F3460 LDR X0, [X0 + 0xE28]
	0x036F3464 BL 0x1C16CF4
	0x036F3468 ADRP X0, 0xA29000
	0x036F346C LDR X0, [X0 + 0xE30]
	0x036F3470 BL 0x1C16CF4
	0x036F3474 ADRP X0, 0xA4D000
	0x036F3478 LDR X0, [X0 + 0x9D8]
	0x036F347C BL 0x1C16CF4
	0x036F3480 ADRP X0, 0xA4D000
	0x036F3484 LDR X0, [X0 + 0xA40]
	0x036F3488 BL 0x1C16CF4
	0x036F348C ADRP X0, 0xA4D000
	0x036F3490 LDR X0, [X0 + 0xA68]
	0x036F3494 BL 0x1C16CF4
	0x036F3498 MOVZ W8, 0x1
	0x036F349C STRB W8, [X22 + 0xB94]
	0x036F34A0 CBZ X19, 0x36F35B4
	0x036F34A4 ADRP X26, 0xA4D000
	0x036F34A8 LDR X8, [X19]
	0x036F34AC LDR X26, [X26 + 0x9D8]
	0x036F34B0 LDRH W9, [X8 + 0x12E]
	0x036F34B4 LDR X1, [X26]
	0x036F34B8 CBZ X9, 0x36F34DC
	0x036F34BC LDR X10, [X8 + 0xB0]
	0x036F34C0 ADD X10, X10, 0x8
	0x036F34C4 LDUR X11, [X10 - 0x8]
	0x036F34C8 CMP X11, X1
	0x036F34CC B.EQ 0x36F34EC
	0x036F34D0 SUBS X9, X9, 0x1
	0x036F34D4 ADD X10, X10, 0x10
	0x036F34D8 B.NE 0x36F34C4
	0x036F34DC MOVZ W2, 0x2
	0x036F34E0 MOV X0, X19
	0x036F34E4 BL 0x1C5C788
	0x036F34E8 B 0x36F34FC
	0x036F34EC LDR W9, [X10]
	0x036F34F0 ADD W9, W9, 0x2
	0x036F34F4 ADD X8, X8, W9, 0x4, SXTW
	0x036F34F8 ADD X0, X8, 0x138
	0x036F34FC LDP X8, X1, [X0]
	0x036F3500 MOV X0, X19
	0x036F3504 BLR X8
	0x036F3508 CBZ X0, 0x36F35B4
	0x036F350C LDR X8, [X19]
	0x036F3510 LDR X1, [X26]
	0x036F3514 LDRH W9, [X8 + 0x12E]
	0x036F3518 CBZ X9, 0x36F353C
	0x036F351C LDR X10, [X8 + 0xB0]
	0x036F3520 ADD X10, X10, 0x8
	0x036F3524 LDUR X11, [X10 - 0x8]
	0x036F3528 CMP X11, X1
	0x036F352C B.EQ 0x36F354C
	0x036F3530 SUBS X9, X9, 0x1
	0x036F3534 ADD X10, X10, 0x10
	0x036F3538 B.NE 0x36F3524
	0x036F353C MOVZ W2, 0x2
	0x036F3540 MOV X0, X19
	0x036F3544 BL 0x1C5C788
	0x036F3548 B 0x36F355C
	0x036F354C LDR W9, [X10]
	0x036F3550 ADD W9, W9, 0x2
	0x036F3554 ADD X8, X8, W9, 0x4, SXTW
	0x036F3558 ADD X0, X8, 0x138
	0x036F355C LDP X8, X1, [X0]
	0x036F3560 MOV X0, X19
	0x036F3564 BLR X8
	0x036F3568 CBZ X0, 0x36F3894
	0x036F356C LDR X8, [X0 + 0x18]
	0x036F3570 CBZ X8, 0x36F35B4
	0x036F3574 LDR X8, [X19]
	0x036F3578 LDR X1, [X26]
	0x036F357C LDRH W9, [X8 + 0x12E]
	0x036F3580 CBZ X9, 0x36F35A4
	0x036F3584 LDR X10, [X8 + 0xB0]
	0x036F3588 ADD X10, X10, 0x8
	0x036F358C LDUR X11, [X10 - 0x8]
	0x036F3590 CMP X11, X1
	0x036F3594 B.EQ 0x36F35D8
	0x036F3598 SUBS X9, X9, 0x1
	0x036F359C ADD X10, X10, 0x10
	0x036F35A0 B.NE 0x36F358C
	0x036F35A4 MOVZ W2, 0x2
	0x036F35A8 MOV X0, X19
	0x036F35AC BL 0x1C5C788
	0x036F35B0 B 0x36F35E8
	0x036F35B4 MOV X22, X31
	0x036F35B8 MOV X0, X22
	0x036F35BC LDP X20, X19, [X31 + 0x50]
	0x036F35C0 LDP X22, X21, [X31 + 0x40]
	0x036F35C4 LDP X24, X23, [X31 + 0x30]
	0x036F35C8 LDP X26, X25, [X31 + 0x20]
	0x036F35CC LDP X28, X27, [X31 + 0x10]
	0x036F35D0 LDP X29, X30, [X31], #0x60
	0x036F35D4 RET
	0x036F35D8 LDR W9, [X10]
	0x036F35DC ADD W9, W9, 0x2
	0x036F35E0 ADD X8, X8, W9, 0x4, SXTW
	0x036F35E4 ADD X0, X8, 0x138
	0x036F35E8 LDP X8, X1, [X0]
	0x036F35EC MOV X0, X19
	0x036F35F0 BLR X8
	0x036F35F4 CBZ X0, 0x36F3894
	0x036F35F8 ADRP X8, 0xA4D000
	0x036F35FC LDR W23, [X0 + 0x18]
	0x036F3600 LDR X8, [X8 + 0xA68]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+8], X2
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xCEE000
	009 Move W8, [X20+2959]
	010 Move X19, X0
	011 Move [X31], X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA4E000
	017 Move X0, [X0+2520]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2959], W8
	021 Move X0, X19
	022 Move X1, X31
	023 Call Behaviour.get_enabled, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {134}
	028 Add X0, X31, 0
	029 Move X1, X31
	030 Call PlayableGraph.IsValid, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {134}
	035 Move X8, [X19+40]
	036 Compare X8, 0
	037 JumpIfEqual {134}
	038 Move X0, X19
	039 Call RigBuilder.get_syncSceneToStreamLayer, X0
	040 Compare X0, 0
	041 JumpIfEqual {142}
	042 Move X1, [X19+40]
	043 Call SyncSceneToStreamLayer.Update, X0, X1
	044 Move X20, [X19+40]
	045 Compare X20, 0
	046 JumpIfEqual {142}
	047 Move W8, [X20+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X22, 0xA4E000
	050 Move X22, [X22+2520]
	051 Move W21, W31
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X8, X20, W21
	054 Move X19, [X8+32]
	055 Compare X19, 0
	056 JumpIfEqual {142}
	057 Move X8, [X19]
	058 Move X1, [X22]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move W2, 8
	069 Move X0, X19
	070 Call 0x1C5D788
	071 Move W9, [X10]
	072 Add W9, W9, 8
	073 Add X8, X8, W9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X1, [X0+8]
	077 Move X0, X19
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {131}
	083 Move X8, [X19]
	084 Move X1, [X22]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move W2, 3
	095 Move X0, X19
	096 Call 0x1C5D788
	097 Move W9, [X10]
	098 Add W9, W9, 3
	099 Add X8, X8, W9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X1, [X0+8]
	103 Move X0, X19
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {131}
	109 Move X8, [X19]
	110 Move X1, [X22]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move W2, 6
	121 Move X0, X19
	122 Call 0x1C5D788
	123 Move W9, [X10]
	124 Add W9, W9, 6
	125 Add X8, X8, W9
	126 Add X0, X8, 312
	127 Move X8, [X0]
	128 Move X1, [X0+8]
	129 Move X0, X19
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move W8, [X20+24]
	132 Add W21, W21, 1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X30, [X31+16]
	139 Add X31, X31, 64
	140 Return 
	141 Call 0x1C17F28
	142 Call 0x1C17F20

Method: UnityEngine.Playables.Playable BuildPreviewGraph(UnityEngine.Playables.PlayableGraph graph, UnityEngine.Playables.Playable inputPlayable)

Disassembly:
	0x036F3604 MOV W1, W23
	0x036F3608 LDR X0, [X8]
	0x036F360C BL 0x1C16D6C
	0x036F3610 CMP W23, 0x1
	0x036F3614 MOV X22, X0
	0x036F3618 B.LT 0x36F35B8
	0x036F361C ADRP X28, 0xA29000
	0x036F3620 LDR X28, [X28 + 0xAF8]
	0x036F3624 MOV W27, W31
	0x036F3628 LDR X8, [X19]
	0x036F362C LDR X1, [X26]
	0x036F3630 LDRH W9, [X8 + 0x12E]
	0x036F3634 CBZ X9, 0x36F3658
	0x036F3638 LDR X10, [X8 + 0xB0]
	0x036F363C ADD X10, X10, 0x8
	0x036F3640 LDUR X11, [X10 - 0x8]
	0x036F3644 CMP X11, X1
	0x036F3648 B.EQ 0x36F3668
	0x036F364C SUBS X9, X9, 0x1
	0x036F3650 ADD X10, X10, 0x10
	0x036F3654 B.NE 0x36F3640
	0x036F3658 MOVZ W2, 0x1
	0x036F365C MOV X0, X19
	0x036F3660 BL 0x1C5C788
	0x036F3664 B 0x36F3678
	0x036F3668 LDR W9, [X10]
	0x036F366C ADD W9, W9, 0x1
	0x036F3670 ADD X8, X8, W9, 0x4, SXTW
	0x036F3674 ADD X0, X8, 0x138
	0x036F3678 LDP X8, X1, [X0]
	0x036F367C MOV X0, X19
	0x036F3680 BLR X8
	0x036F3684 CBZ X0, 0x36F3894
	0x036F3688 LDR W8, [X0 + 0x18]
	0x036F368C CMP W27, W8
	0x036F3690 B.CS 0x36F3898
	0x036F3694 SXTW X29, W27
	0x036F3698 ADD X8, X0, X29, 0x3, LSL
	0x036F369C LDR X24, [X8 + 0x20]
	0x036F36A0 CBZ X24, 0x36F3894
	0x036F36A4 LDR X8, [X24]
	0x036F36A8 ADRP X10, 0xA29000
	0x036F36AC LDRH W9, [X8 + 0x12E]
	0x036F36B0 LDR X10, [X10 + 0xE30]
	0x036F36B4 LDR X1, [X10]
	0x036F36B8 CBZ X9, 0x36F36DC
	0x036F36BC LDR X10, [X8 + 0xB0]
	0x036F36C0 ADD X10, X10, 0x8
	0x036F36C4 LDUR X11, [X10 - 0x8]
	0x036F36C8 CMP X11, X1
	0x036F36CC B.EQ 0x36F36EC
	0x036F36D0 SUBS X9, X9, 0x1
	0x036F36D4 ADD X10, X10, 0x10
	0x036F36D8 B.NE 0x36F36C4
	0x036F36DC MOVZ W2, 0x5
	0x036F36E0 MOV X0, X24
	0x036F36E4 BL 0x1C5C788
	0x036F36E8 B 0x36F36FC
	0x036F36EC LDR W9, [X10]
	0x036F36F0 ADD W9, W9, 0x5
	0x036F36F4 ADD X8, X8, W9, 0x4, SXTW
	0x036F36F8 ADD X0, X8, 0x138
	0x036F36FC LDP X8, X1, [X0]
	0x036F3700 MOV X0, X24
	0x036F3704 BLR X8
	0x036F3708 LDR X8, [X19]
	0x036F370C LDR X1, [X26]
	0x036F3710 MOV X24, X0
	0x036F3714 LDRH W9, [X8 + 0x12E]
	0x036F3718 CBZ X9, 0x36F373C
	0x036F371C LDR X10, [X8 + 0xB0]
	0x036F3720 ADD X10, X10, 0x8
	0x036F3724 LDUR X11, [X10 - 0x8]
	0x036F3728 CMP X11, X1
	0x036F372C B.EQ 0x36F374C
	0x036F3730 SUBS X9, X9, 0x1
	0x036F3734 ADD X10, X10, 0x10
	0x036F3738 B.NE 0x36F3724
	0x036F373C MOVZ W2, 0x2
	0x036F3740 MOV X0, X19
	0x036F3744 BL 0x1C5C788
	0x036F3748 B 0x36F375C
	0x036F374C LDR W9, [X10]
	0x036F3750 ADD W9, W9, 0x2
	0x036F3754 ADD X8, X8, W9, 0x4, SXTW
	0x036F3758 ADD X0, X8, 0x138
	0x036F375C LDP X8, X1, [X0]
	0x036F3760 MOV X0, X19
	0x036F3764 BLR X8
	0x036F3768 CBZ X0, 0x36F3894
	0x036F376C LDR W8, [X0 + 0x18]
	0x036F3770 CMP W27, W8
	0x036F3774 B.CS 0x36F3898
	0x036F3778 CBZ X24, 0x36F3894
	0x036F377C LDR X8, [X24]
	0x036F3780 ADD X9, X0, X29, 0x3, LSL
	0x036F3784 ADRP X10, 0xA29000
	0x036F3788 LDR X25, [X9 + 0x20]
	0x036F378C LDRH W9, [X8 + 0x12E]
	0x036F3790 LDR X10, [X10 + 0xE28]
	0x036F3794 LDR X1, [X10]
	0x036F3798 CBZ X9, 0x36F37BC
	0x036F379C LDR X10, [X8 + 0xB0]
	0x036F37A0 ADD X10, X10, 0x8
	0x036F37A4 LDUR X11, [X10 - 0x8]
	0x036F37A8 CMP X11, X1
	0x036F37AC B.EQ 0x36F37CC
	0x036F37B0 SUBS X9, X9, 0x1
	0x036F37B4 ADD X10, X10, 0x10
	0x036F37B8 B.NE 0x36F37A4
	0x036F37BC MOVZ W2, 0x3
	0x036F37C0 MOV X0, X24
	0x036F37C4 BL 0x1C5C788
	0x036F37C8 B 0x36F37DC
	0x036F37CC LDR W9, [X10]
	0x036F37D0 ADD W9, W9, 0x3
	0x036F37D4 ADD X8, X8, W9, 0x4, SXTW
	0x036F37D8 ADD X0, X8, 0x138
	0x036F37DC LDP X8, X4, [X0]
	0x036F37E0 MOV X0, X24
	0x036F37E4 MOV X1, X21
	0x036F37E8 MOV X2, X20
	0x036F37EC MOV X3, X25
	0x036F37F0 BLR X8
	0x036F37F4 MOV X24, X0
	0x036F37F8 LDR X0, [X28]
	0x036F37FC MOV X25, X1
	0x036F3800 LDR W8, [X0 + 0xE0]
	0x036F3804 CBNZ W8, 0x36F380C
	0x036F3808 BL 0x1C16DFC
	0x036F380C MOV X0, X24
	0x036F3810 MOV X1, X25
	0x036F3814 MOV X2, X31
	0x036F3818 BL 0x3BF7F2C
	0x036F381C CBZ X22, 0x36F3894
	0x036F3820 LDR W8, [X22 + 0x18]
	0x036F3824 CMP W27, W8
	0x036F3828 B.CS 0x36F3898
	0x036F382C ADD W27, W27, 0x1
	0x036F3830 ADD X8, X22, X29, 0x4, LSL
	0x036F3834 CMP W27, W23
	0x036F3838 STP X0, X1, [X8 + 0x20]
	0x036F383C B.NE 0x36F3628
	0x036F3840 CMP W23, 0x2
	0x036F3844 B.LT 0x36F35B8
	0x036F3848 SXTW X20, W23
	0x036F384C ADRP X23, 0xA4D000
	0x036F3850 LDR X23, [X23 + 0xA40]
	0x036F3854 ADD X19, X22, 0x38
	0x036F3858 MOVZ W21, 0x1
	0x036F385C LDR W8, [X22 + 0x18]
	0x036F3860 CMP X21, X8
	0x036F3864 B.CS 0x36F3898
	0x036F3868 LDP X0, X1, [X19 - 0x8]
	0x036F386C LDP X2, X3, [X19 - 0x18]
	0x036F3870 LDR X5, [X23]
	0x036F3874 FMOV S0, 1
	0x036F3878 MOV W4, W31
	0x036F387C BL 0x222FBBC
	0x036F3880 ADD X21, X21, 0x1
	0x036F3884 CMP X20, X21
	0x036F3888 ADD X19, X19, 0x10
	0x036F388C B.NE 0x36F385C
	0x036F3890 B 0x36F35B8
	0x036F3894 BL 0x1C16F20
	0x036F3898 BL 0x1C16F28
	0x036F389C STP X30, X27, [X31 - 0x50]!
	0x036F38A0 STP X26, X25, [X31 + 0x10]
	0x036F38A4 STP X24, X23, [X31 + 0x20]
	0x036F38A8 STP X22, X21, [X31 + 0x30]
	0x036F38AC STP X20, X19, [X31 + 0x40]
	0x036F38B0 ADRP X22, 0xCED000
	0x036F38B4 LDRB W8, [X22 + 0xBAF]
	0x036F38B8 MOV X21, X2
	0x036F38BC MOV X20, X1
	0x036F38C0 MOV X19, X0
	0x036F38C4 TBNZ X8, 0x0, 0x36F393C
	0x036F38C8 ADRP X0, 0xA29000
	0x036F38CC LDR X0, [X0 + 0xE28]
	0x036F38D0 BL 0x1C16CF4
	0x036F38D4 ADRP X0, 0xA4D000
	0x036F38D8 LDR X0, [X0 + 0x9E8]
	0x036F38DC BL 0x1C16CF4
	0x036F38E0 ADRP X0, 0xA4D000
	0x036F38E4 LDR X0, [X0 + 0xA48]
	0x036F38E8 BL 0x1C16CF4
	0x036F38EC ADRP X0, 0xA4D000
	0x036F38F0 LDR X0, [X0 + 0x9F0]
	0x036F38F4 BL 0x1C16CF4
	0x036F38F8 ADRP X0, 0xA4D000
	0x036F38FC LDR X0, [X0 + 0x9D8]
	0x036F3900 BL 0x1C16CF4
	0x036F3904 ADRP X0, 0xA01000
	0x036F3908 LDR X0, [X0 + 0xE10]
	0x036F390C BL 0x1C16CF4
	0x036F3910 ADRP X0, 0xA01000
	0x036F3914 LDR X0, [X0 + 0xE20]
	0x036F3918 BL 0x1C16CF4
	0x036F391C ADRP X0, 0xA01000
	0x036F3920 LDR X0, [X0 + 0xE30]
	0x036F3924 BL 0x1C16CF4
	0x036F3928 ADRP X0, 0xA4D000
	0x036F392C LDR X0, [X0 + 0xA00]
	0x036F3930 BL 0x1C16CF4
	0x036F3934 MOVZ W8, 0x1
	0x036F3938 STRB W8, [X22 + 0xBAF]
	0x036F393C LDRB W8, [X19 + 0x10]
	0x036F3940 CBZ W8, 0x36F394C
	0x036F3944 MOVZ W0, 0x1
	0x036F3948 B 0x36F3CEC
	0x036F394C CBZ X21, 0x36F3D04
	0x036F3950 ADRP X24, 0xA4D000
	0x036F3954 LDR X8, [X21]
	0x036F3958 LDR X24, [X24 + 0xA48]
	0x036F395C LDRH W9, [X8 + 0x12E]
	0x036F3960 LDR X1, [X24]
	0x036F3964 CBZ X9, 0x36F3988
	0x036F3968 LDR X10, [X8 + 0xB0]
	0x036F396C ADD X10, X10, 0x8
	0x036F3970 LDUR X11, [X10 - 0x8]
	0x036F3974 CMP X11, X1
	0x036F3978 B.EQ 0x36F3998
	0x036F397C SUBS X9, X9, 0x1
	0x036F3980 ADD X10, X10, 0x10
	0x036F3984 B.NE 0x36F3970
	0x036F3988 MOV X0, X21
	0x036F398C MOV W2, W31
	0x036F3990 BL 0x1C5C788
	0x036F3994 B 0x36F39A4
	0x036F3998 LDRSW X9, [X10]
	0x036F399C ADD X8, X8, X9, 0x4, LSL
	0x036F39A0 ADD X0, X8, 0x138
	0x036F39A4 LDP X8, X1, [X0]
	0x036F39A8 MOV X0, X21
	0x036F39AC BLR X8
	0x036F39B0 ADRP X8, 0xA01000
	0x036F39B4 LDR X8, [X8 + 0xE30]
	0x036F39B8 MOV W22, W0
	0x036F39BC LDR X8, [X8]
	0x036F39C0 MOV X0, X8
	0x036F39C4 BL 0x1C16F10
	0x036F39C8 ADRP X8, 0xA01000
	0x036F39CC LDR X8, [X8 + 0xE20]
	0x036F39D0 MOV W1, W22
	0x036F39D4 MOV X23, X0
	0x036F39D8 LDR X2, [X8]
	0x036F39DC BL 0x2FDBF80
	0x036F39E0 STR X23, [X19 + 0x28]
	0x036F39E4 ADRP X25, 0xA4D000
	0x036F39E8 ADRP X26, 0xA4D000
	0x036F39EC ADRP X27, 0xA01000
	0x036F39F0 LDR X25, [X25 + 0x9F0]
	0x036F39F4 LDR X26, [X26 + 0x9D8]
	0x036F39F8 LDR X27, [X27 + 0xE10]
	0x036F39FC MOV W22, W31
	0x036F3A00 LDR X8, [X21]
	0x036F3A04 LDR X1, [X24]
	0x036F3A08 LDRH W9, [X8 + 0x12E]
	0x036F3A0C CBZ X9, 0x36F3A30
	0x036F3A10 LDR X10, [X8 + 0xB0]
	0x036F3A14 ADD X10, X10, 0x8
	0x036F3A18 LDUR X11, [X10 - 0x8]
	0x036F3A1C CMP X11, X1
	0x036F3A20 B.EQ 0x36F3A40
	0x036F3A24 SUBS X9, X9, 0x1
	0x036F3A28 ADD X10, X10, 0x10
	0x036F3A2C B.NE 0x36F3A18
	0x036F3A30 MOV X0, X21
	0x036F3A34 MOV W2, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0xCEE000
	010 Move W8, [X24+2960]
	011 Move X19, X4
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0xA0B000
	021 Move X0, [X0+2128]
	022 Call 0x1C17CF4
	023 Move X0, 0xA01000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0xA4E000
	027 Move X0, [X0+2592]
	028 Call 0x1C17CF4
	029 Move X0, 0xA4E000
	030 Move X0, [X0+2600]
	031 Call 0x1C17CF4
	032 Move X0, 0xA01000
	033 Move X0, [X0+3608]
	034 Call 0x1C17CF4
	035 Move X0, 0xA01000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move X0, 0xA4E000
	039 Move X0, [X0+2624]
	040 Call 0x1C17CF4
	041 Move X0, 0xA4E000
	042 Move X0, [X0+2512]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X24+2960], W8
	046 Move X0, X23
	047 Move X1, X31
	048 Call Behaviour.get_enabled, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {236}
	053 Move X25, 0xA0B000
	054 Move X24, 0xA01000
	055 Move X8, [X23+40]
	056 Move X25, [X25+2128]
	057 Move X24, [X24+1432]
	058 Compare X8, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X23
	061 Call RigBuilder.StartPreview, X0
	062 Move X1, [X25]
	063 Move X0, X23
	064 Call 0x21A4894, X0
	065 Move X8, [X24]
	066 Move X24, X0
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X0, X24
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Equality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {236}
	080 Move X25, [X23+40]
	081 Compare X25, 0
	082 JumpIfEqual {236}
	083 Move X8, [X25+24]
	084 Compare X8, 0
	085 JumpIfEqual {236}
	086 Move X0, X23
	087 Call RigBuilder.get_syncSceneToStreamLayer, X0
	088 Move X8, 0xA4E000
	089 Move X8, [X8+2512]
	090 Move X23, X0
	091 Move X8, [X8]
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X0, X24
	098 Move X1, X22
	099 Move X2, X21
	100 Move X3, X25
	101 Move X4, X23
	102 Call RigBuilderUtils.BuildPlayables, X0, X1, X2, X3
	103 Compare X0, 0
	104 JumpIfEqual {247}
	105 Move X10, 0xA4E000
	106 Move X8, [X0]
	107 Move X10, [X10+2592]
	108 Move X21, X0
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X1, [X10]
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X21
	120 Move W2, W31
	121 Call 0x1C5D788
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X21
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X21, X0
	130 Compare X0, 0
	131 JumpIfEqual {248}
	132 Move X23, 0xA01000
	133 Move X24, 0xA4E000
	134 Move X25, 0xA4E000
	135 Move X23, [X23+3608]
	136 Move X24, [X24+2600]
	137 Move X25, [X25+2624]
	138 Move X8, [X21]
	139 Move X1, [X23]
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move X0, X21
	150 Move W2, W31
	151 Call 0x1C5D788
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Add X8, X8, X9
	154 Add X0, X8, 312
	155 Move X8, [X0]
	156 Move X1, [X0+8]
	157 Move X0, X21
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfNotEqual {208}
	163 Move X8, [X21]
	164 Move X1, [X24]
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move X0, X21
	175 Move W2, W31
	176 Call 0x1C5D788
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Add X8, X8, X9
	179 Add X0, X8, 312
	180 Move X8, [X0]
	181 Move X1, [X0+8]
	182 Move X0, X21
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move X22, X1
	185 Compare X1, 0
	186 JumpIfEqual {138}
	187 Move X8, [X22+24]
	188 Compare X8, 0
	189 JumpIfEqual {138}
	190 Compare W8, 0
	191 JumpIfEqual {251}
	192 Move X0, [X22+32]
	193 Move X1, [X22+40]
	194 Move X5, [X25]
	195 Move S0, 1
	196 Move X2, X20
	197 Move X3, X19
	198 Move W4, W31
	199 Call 0x2230BBC, X0, X1, X2, V0
	200 Move W8, [X22+24]
	201 Compare W8, 0
	202 JumpIfEqual {252}
	203 Subtract W8, W8, 1
	204 Move X8, W8
	205 Add X8, X22, X8
	206 Move X20, [X8+32]
	207 Move X19, [X8+40]
	208 Move X22, X31
	209 Compare X21, 0
	210 JumpIfEqual {234}
	211 Move X10, 0xA01000
	212 Move X8, [X21]
	213 Move X10, [X10+3584]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move X1, [X10]
	216 Compare X9, 0
	217 JumpIfEqual {224}
	218 Move X10, [X8+176]
	219 Add X10, X10, 8
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Subtract X9, X9, 1
	223 Add X10, X10, 16
	224 Move X0, X21
	225 Move W2, W31
	226 Call 0x1C5D788
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Add X8, X8, X9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X21
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Compare X22, 0
	235 JumpIfNotEqual {249}
	236 Move X0, X20
	237 Move X1, X19
	238 Move X20, [X31+48]
	239 Move X19, [X31+56]
	240 Move X22, [X31+32]
	241 Move X21, [X31+40]
	242 Move X24, [X31+16]
	243 Move X23, [X31+24]
	244 Move X30, [X31+64]
	245 Move X25, [X31+72]
	246 Return X0
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Move X0, X22
	250 Call 0x1C17F18
	251 Call 0x1C17F28
	252 Call 0x1C17F28
	253 Move X23, X0
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Move X0, X23
	256 Call 0x3EB2AD0
	257 Move X22, [X0]
	258 Call 0x3EB2AE0
	259 Move X22, X31
	260 Move X23, X0
	261 Compare X21, 0
	262 JumpIfEqual {286}
	263 Move X10, 0xA01000
	264 Move X8, [X21]
	265 Move X10, [X10+3584]
	266 NotImplemented "Instruction LDRH not yet implemented."
	267 Move X1, [X10]
	268 Compare X9, 0
	269 JumpIfEqual {276}
	270 Move X10, [X8+176]
	271 Add X10, X10, 8
	272 NotImplemented "Instruction LDUR not yet implemented."
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Subtract X9, X9, 1
	275 Add X10, X10, 16
	276 Move X0, X21
	277 Move W2, W31
	278 Call 0x1C5D788
	279 NotImplemented "Instruction LDRSW not yet implemented."
	280 Add X8, X8, X9
	281 Add X0, X8, 312
	282 Move X8, [X0]
	283 Move X1, [X0+8]
	284 Move X0, X21
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Compare X22, 0
	287 JumpIfNotEqual {290}
	288 Move X0, X23
	289 Call 0x1D2D690
	290 Move X0, X22
	291 Call 0x1C17F18
	292 Call 0x1991590

Method: System.Collections.Generic.List`1<UnityEngine.Animations.Rigging.RigLayer> get_layers()

Disassembly:
	0x036F2980 B 0x36F2990
	0x036F2984 B 0x36F2990
	0x036F2988 B 0x36F2990
	0x036F298C B 0x36F2990
	0x036F2990 MOV X23, X0
	0x036F2994 CMP W1, 0x1
	0x036F2998 B.NE 0x36F29B0
	0x036F299C MOV X0, X23
	0x036F29A0 BL 0x3EB1AD0
	0x036F29A4 LDR X22, [X0]
	0x036F29A8 BL 0x3EB1AE0
	0x036F29AC B 0x36F28E0
	0x036F29B0 MOV X22, X31
	0x036F29B4 B 0x36F29BC
	0x036F29B8 MOV X23, X0
	0x036F29BC CBZ X21, 0x36F2A20
	0x036F29C0 ADRP X10, 0xA01000
	0x036F29C4 LDR X8, [X21]
	0x036F29C8 LDR X10, [X10 + 0xE00]
	0x036F29CC LDRH W9, [X8 + 0x12E]
	0x036F29D0 LDR X1, [X10]
	0x036F29D4 CBZ X9, 0x36F29F8
	0x036F29D8 LDR X10, [X8 + 0xB0]
	0x036F29DC ADD X10, X10, 0x8
	0x036F29E0 LDUR X11, [X10 - 0x8]
	0x036F29E4 CMP X11, X1
	0x036F29E8 B.EQ 0x36F2A08
	0x036F29EC SUBS X9, X9, 0x1
	0x036F29F0 ADD X10, X10, 0x10
	0x036F29F4 B.NE 0x36F29E0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCEF000
	005 Move W8, [X20+2961]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xA4F000
	012 Move X0, [X0+2568]
	013 Call 0x1C17CF4
	014 Move X0, 0xA4F000
	015 Move X0, [X0+2576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2961], W8
	019 Move X20, [X19+32]
	020 Compare X20, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xA4F000
	023 Move X8, [X8+2576]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xA4F000
	027 Move X8, [X8+2568]
	028 Move X20, X0
	029 Move X1, [X8]
	030 Call List`1<Object>..ctor, X0
	031 Move [X19+32], X20
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Void set_layers(System.Collections.Generic.List`1<UnityEngine.Animations.Rigging.RigLayer> value)

Disassembly:
	0x036F40F8 B.EQ 0x36F4118
	0x036F40FC SUBS X9, X9, 0x1

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: UnityEngine.Animations.Rigging.SyncSceneToStreamLayer get_syncSceneToStreamLayer()

Disassembly:
	0x036F253C B.EQ 0x36F255C
	0x036F2540 SUBS X9, X9, 0x1
	0x036F2544 ADD X10, X10, 0x10
	0x036F2548 B.NE 0x36F2534
	0x036F254C MOVZ W2, 0x3
	0x036F2550 MOV X0, X19
	0x036F2554 BL 0x1C5C788
	0x036F2558 B 0x36F256C
	0x036F255C LDR W9, [X10]
	0x036F2560 ADD W9, W9, 0x3
	0x036F2564 ADD X8, X8, W9, 0x4, SXTW
	0x036F2568 ADD X0, X8, 0x138
	0x036F256C LDP X8, X1, [X0]
	0x036F2570 MOV X0, X19
	0x036F2574 BLR X8
	0x036F2578 TBZ X0, 0x0, 0x36F25D8
	0x036F257C LDR X8, [X19]
	0x036F2580 LDR X1, [X22]
	0x036F2584 LDRH W9, [X8 + 0x12E]
	0x036F2588 CBZ X9, 0x36F25AC
	0x036F258C LDR X10, [X8 + 0xB0]
	0x036F2590 ADD X10, X10, 0x8
	0x036F2594 LDUR X11, [X10 - 0x8]
	0x036F2598 CMP X11, X1
	0x036F259C B.EQ 0x36F25BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCEF000
	005 Move W8, [X20+2962]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA4F000
	012 Move X0, [X0+2528]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2962], W8
	016 Move X20, [X19+48]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0xA4F000
	020 Move X8, [X8+2528]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X19+48], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Void set_syncSceneToStreamLayer(UnityEngine.Animations.Rigging.SyncSceneToStreamLayer value)

Disassembly:
	0x036F4108 MOV X0, X21
	0x036F410C MOV W2, W31

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: UnityEngine.Playables.PlayableGraph get_graph()

Disassembly:
	0x036F4110 BL 0x1C5C788
	0x036F4114 B 0x36F4124
	0x036F4118 LDRSW X9, [X10]

ISIL:
	001 Move X8, [X0+72]
	002 Move X1, [X0+80]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_graph(UnityEngine.Playables.PlayableGraph value)

Disassembly:
	0x036F411C ADD X8, X8, X9, 0x4, LSL
	0x036F4120 ADD X0, X8, 0x138

ISIL:
	001 Move [X0+72], X1
	002 Move [X0+80], X2
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x036F4124 LDP X8, X1, [X0]
	0x036F4128 MOV X0, X21
	0x036F412C BLR X8
	0x036F4130 TBZ X0, 0x0, 0x36F418C
	0x036F4134 CBZ X20, 0x36F41E4
	0x036F4138 LDR W10, [X20 + 0x1C]
	0x036F413C LDR X8, [X20 + 0x10]
	0x036F4140 LDR X9, [X24]
	0x036F4144 ADD W10, W10, 0x1
	0x036F4148 STR W10, [X20 + 0x1C]
	0x036F414C CBZ X8, 0x36F41E4
	0x036F4150 LDRSW X10, [X20 + 0x18]
	0x036F4154 LDR W11, [X8 + 0x18]
	0x036F4158 CMP W10, W11
	0x036F415C B.CS 0x36F4174
	0x036F4160 ADD W9, W10, 0x1
	0x036F4164 ADD X8, X8, X10, 0x3, LSL
	0x036F4168 STR W9, [X20 + 0x18]
	0x036F416C STR X21, [X8 + 0x20]
	0x036F4170 B 0x36F418C
	0x036F4174 LDR X8, [X9 + 0x20]
	0x036F4178 MOV X0, X20
	0x036F417C MOV X1, X21
	0x036F4180 LDR X8, [X8 + 0xC0]
	0x036F4184 LDR X2, [X8 + 0x70]
	0x036F4188 BL 0x301BF90
	0x036F418C LDR W8, [X19 + 0x18]
	0x036F4190 ADD W22, W22, 0x1
	0x036F4194 CMP W22, W8
	0x036F4198 B.LT 0x36F40C4
	0x036F419C CBZ X20, 0x36F41E4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCED000
	007 Move X22, 0xA4D000
	008 Move X20, 0xA4D000
	009 Move W8, [X21+2963]
	010 Move X22, [X22+2472]
	011 Move X20, [X20+2480]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA4D000
	018 Move X0, [X0+2480]
	019 Call 0x1C17CF4
	020 Move X0, 0xA4D000
	021 Move X0, [X0+2472]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2963], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+56], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call MonoBehaviour..ctor, X0
	039 Return 

