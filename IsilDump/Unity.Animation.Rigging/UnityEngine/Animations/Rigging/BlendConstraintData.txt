Type: UnityEngine.Animations.Rigging.BlendConstraintData

Method: UnityEngine.Transform get_constrainedObject()

Disassembly:
	0x036EDE68 CBZ X9, 0x36EDE8C
	0x036EDE6C LDR X10, [X8 + 0xB0]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_constrainedObject(UnityEngine.Transform value)

Disassembly:
	0x036EDE70 ADD X10, X10, 0x8
	0x036EDE74 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X0], X1
	002 Return 

Method: UnityEngine.Transform get_sourceObjectA()

Disassembly:
	0x036EDE78 CMP X11, X1
	0x036EDE7C B.EQ 0x36EDE9C

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Void set_sourceObjectA(UnityEngine.Transform value)

Disassembly:
	0x036EDE80 SUBS X9, X9, 0x1
	0x036EDE84 ADD X10, X10, 0x10

ISIL:
	001 Move [X0+8], X1
	002 Return 

Method: UnityEngine.Transform get_sourceObjectB()

Disassembly:
	0x036EDE88 B.NE 0x36EDE74
	0x036EDE8C MOV X0, X19

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_sourceObjectB(UnityEngine.Transform value)

Disassembly:
	0x036EDE90 MOV W2, W31
	0x036EDE94 BL 0x1C5C788

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Boolean get_blendPosition()

Disassembly:
	0x036EDE98 B 0x36EDEA8
	0x036EDE9C LDRSW X9, [X10]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_blendPosition(System.Boolean value)

Disassembly:
	0x036EDEA0 ADD X8, X8, X9, 0x4, LSL
	0x036EDEA4 ADD X0, X8, 0x138
	0x036EDEA8 LDP X8, X1, [X0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+24], W8
	003 Return 

Method: System.Boolean get_blendRotation()

Disassembly:
	0x036EDEAC MOV X0, X19
	0x036EDEB0 BLR X8

ISIL:
	001 Move W0, [X0+25]
	002 Return X0

Method: System.Void set_blendRotation(System.Boolean value)

Disassembly:
	0x036EDEB4 MOV X20, X0
	0x036EDEB8 LDR X0, [X22]
	0x036EDEBC LDR W8, [X0 + 0xE0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+25], W8
	003 Return 

Method: System.Single get_positionWeight()

Disassembly:
	0x036EDEC0 CBNZ W8, 0x36EDEC8
	0x036EDEC4 BL 0x1C16DFC

ISIL:
	001 Move V0, [X0+28]
	002 Return V0

Method: System.Void set_positionWeight(System.Single value)

Disassembly:
	0x036EDEC8 MOV X0, X20
	0x036EDECC MOV X1, X31
	0x036EDED0 MOV X2, X31
	0x036EDED4 BL 0x3C3883C
	0x036EDED8 TBZ X0, 0x0, 0x36EDDFC
	0x036EDEDC MOV X20, X31
	0x036EDEE0 EOR W21, W21, 0x1

ISIL:
	001 Move S1, 1
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 NotImplemented "Instruction FMIN not yet implemented."
	004 Move S1, W31
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 Move [X0+28], S0
	007 Return 

Method: System.Single get_rotationWeight()

Disassembly:
	0x036EDEE4 CBZ X19, 0x36EDF50
	0x036EDEE8 ADRP X10, 0xA06000

ISIL:
	001 Move V0, [X0+32]
	002 Return V0

Method: System.Void set_rotationWeight(System.Single value)

Disassembly:
	0x036EDEEC LDR X8, [X19]
	0x036EDEF0 LDR X10, [X10 + 0xE00]
	0x036EDEF4 LDRH W9, [X8 + 0x12E]
	0x036EDEF8 LDR X1, [X10]
	0x036EDEFC CBZ X9, 0x36EDF20
	0x036EDF00 LDR X10, [X8 + 0xB0]
	0x036EDF04 ADD X10, X10, 0x8

ISIL:
	001 Move S1, 1
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 NotImplemented "Instruction FMIN not yet implemented."
	004 Move S1, W31
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 Move [X0+32], S0
	007 Return 

Method: System.Boolean get_maintainPositionOffsets()

Disassembly:
	0x036EDF08 LDUR X11, [X10 - 0x8]
	0x036EDF0C CMP X11, X1

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_maintainPositionOffsets(System.Boolean value)

Disassembly:
	0x036EDF10 B.EQ 0x36EDF38
	0x036EDF14 SUBS X9, X9, 0x1
	0x036EDF18 ADD X10, X10, 0x10

ISIL:
	001 And W8, W1, 1
	002 Move [X0+36], W8
	003 Return 

Method: System.Boolean get_maintainRotationOffsets()

Disassembly:
	0x036EDF1C B.NE 0x36EDF08
	0x036EDF20 MOV X0, X19

ISIL:
	001 Move W0, [X0+37]
	002 Return X0

Method: System.Void set_maintainRotationOffsets(System.Boolean value)

Disassembly:
	0x036EDF24 MOV W2, W31
	0x036EDF28 BL 0x1C5C788
	0x036EDF2C B 0x36EDF44

ISIL:
	001 And W8, W1, 1
	002 Move [X0+37], W8
	003 Return 

Method: System.String UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendPositionBoolProperty()

Disassembly:
	0x036EDF30 MOV W21, W31
	0x036EDF34 B 0x36EDF54
	0x036EDF38 LDRSW X9, [X10]
	0x036EDF3C ADD X8, X8, X9, 0x4, LSL
	0x036EDF40 ADD X0, X8, 0x138
	0x036EDF44 LDP X8, X1, [X0]
	0x036EDF48 MOV X0, X19
	0x036EDF4C BLR X8
	0x036EDF50 CBNZ X20, 0x36EDF70
	0x036EDF54 AND W0, W21, 0x1
	0x036EDF58 LDP X20, X19, [X31 + 0x30]
	0x036EDF5C LDP X22, X21, [X31 + 0x20]
	0x036EDF60 LDP X24, X23, [X31 + 0x10]
	0x036EDF64 LDR X30, [X31], #0x40
	0x036EDF68 RET
	0x036EDF6C BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCF4000
	005 Move X20, 0xA54000
	006 Move W8, [X19+2873]
	007 Move X20, [X20+1992]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA54000
	013 Move X0, [X0+1992]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2873], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]

Method: System.String UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendRotationBoolProperty()

Disassembly:
	0x036EDFBC CBZ X19, 0x36EE020
	0x036EDFC0 ADRP X10, 0xA06000
	0x036EDFC4 LDR X8, [X19]
	0x036EDFC8 LDR X10, [X10 + 0xE00]
	0x036EDFCC LDRH W9, [X8 + 0x12E]
	0x036EDFD0 LDR X1, [X10]
	0x036EDFD4 CBZ X9, 0x36EDFF8
	0x036EDFD8 LDR X10, [X8 + 0xB0]
	0x036EDFDC ADD X10, X10, 0x8
	0x036EDFE0 LDUR X11, [X10 - 0x8]
	0x036EDFE4 CMP X11, X1
	0x036EDFE8 B.EQ 0x36EE008
	0x036EDFEC SUBS X9, X9, 0x1
	0x036EDFF0 ADD X10, X10, 0x10
	0x036EDFF4 B.NE 0x36EDFE0
	0x036EDFF8 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCF4000
	005 Move X20, 0xA54000
	006 Move W8, [X19+2874]
	007 Move X20, [X20+2008]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA54000
	013 Move X0, [X0+2008]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2874], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	022 Return X0

Method: System.String UnityEngine.Animations.Rigging.IBlendConstraintData.get_positionWeightFloatProperty()

Disassembly:
	0x036EDFFC MOV W2, W31
	0x036EE000 BL 0x1C5C788
	0x036EE004 B 0x36EE014
	0x036EE008 LDRSW X9, [X10]
	0x036EE00C ADD X8, X8, X9, 0x4, LSL
	0x036EE010 ADD X0, X8, 0x138
	0x036EE014 LDP X8, X1, [X0]
	0x036EE018 MOV X0, X19
	0x036EE01C BLR X8
	0x036EE020 CBNZ X20, 0x36EE02C
	0x036EE024 MOV X0, X21
	0x036EE028 BL 0x1D2C690
	0x036EE02C MOV X0, X20
	0x036EE030 BL 0x1C16F18
	0x036EE034 BL 0x1990590
	0x036EE038 SUB X31, X31, 0xB0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCF3000
	005 Move X20, 0xA53000
	006 Move W8, [X19+2875]
	007 Move X20, [X20+2016]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA53000
	013 Move X0, [X0+2016]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2875], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	022 Return X0

Method: System.String UnityEngine.Animations.Rigging.IBlendConstraintData.get_rotationWeightFloatProperty()

Disassembly:
	0x036EE03C STP X30, X21, [X31 + 0x90]
	0x036EE040 STP X20, X19, [X31 + 0xA0]
	0x036EE044 ADRP X21, 0xCF2000
	0x036EE048 ADRP X20, 0xA52000
	0x036EE04C LDRB W8, [X21 + 0xBB4]
	0x036EE050 LDR X20, [X20 + 0x880]
	0x036EE054 MOV X19, X0
	0x036EE058 TBNZ X8, 0x0, 0x36EE070
	0x036EE05C ADRP X0, 0xA52000
	0x036EE060 LDR X0, [X0 + 0x880]
	0x036EE064 BL 0x1C16CF4
	0x036EE068 MOVZ W8, 0x1
	0x036EE06C STRB W8, [X21 + 0xBB4]
	0x036EE070 ADD X0, X31, 0x0
	0x036EE074 MOVZ W2, 0x88
	0x036EE078 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCF3000
	005 Move X20, 0xA53000
	006 Move W8, [X19+2876]
	007 Move X20, [X20+2024]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA53000
	013 Move X0, [X0+2024]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2876], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	022 Return X0

Method: System.Boolean UnityEngine.Animations.Rigging.IAnimationJobData.IsValid()

Disassembly:
	0x036EE07C BL 0x3EB1AC0
	0x036EE080 LDR X0, [X20]
	0x036EE084 MOVI D0, 0xFFFFFFFF
	0x036EE088 ADD X1, X31, 0x0
	0x036EE08C STR D0, [X31 + 0x88]
	0x036EE090 BL 0x1C16E04
	0x036EE094 LDP X20, X19, [X31 + 0xA0]
	0x036EE098 LDP X30, X21, [X31 + 0x90]
	0x036EE09C ADD X31, X31, 0xB0
	0x036EE0A0 RET
	0x036EE0A4 STP X30, X21, [X31 - 0x20]!
	0x036EE0A8 STP X20, X19, [X31 + 0x10]
	0x036EE0AC ADRP X21, 0xCF2000
	0x036EE0B0 ADRP X20, 0xA2F000
	0x036EE0B4 LDRB W8, [X21 + 0xB4F]
	0x036EE0B8 LDR X20, [X20 + 0x960]
	0x036EE0BC MOV X19, X0
	0x036EE0C0 TBNZ X8, 0x0, 0x36EE0D8
	0x036EE0C4 ADRP X0, 0xA2F000
	0x036EE0C8 LDR X0, [X0 + 0x960]
	0x036EE0CC BL 0x1C16CF4
	0x036EE0D0 MOVZ W8, 0x1
	0x036EE0D4 STRB W8, [X21 + 0xB4F]
	0x036EE0D8 ADRP X8, 0xFFFFFFFFFD3FF000
	0x036EE0DC LDR V0, [X8 + 0x5C0]
	0x036EE0E0 MOVZ W8, 0x2
	0x036EE0E4 STR X31, [X19]
	0x036EE0E8 STR W31, [X19 + 0xAC]
	0x036EE0EC STR W8, [X19 + 0xB8]
	0x036EE0F0 STUR D0, [X19 + 0xA4]
	0x036EE0F4 STR X31, [X19 + 0xB0]
	0x036EE0F8 LDR X0, [X20]
	0x036EE0FC LDR W8, [X0 + 0xE0]
	0x036EE100 CBNZ W8, 0x36EE108
	0x036EE104 BL 0x1C16DFC
	0x036EE108 STR W31, [X19 + 0x8]
	0x036EE10C STRB W31, [X19 + 0xBC]
	0x036EE110 ADRP X20, 0xCEA000
	0x036EE114 LDRB W8, [X20 + 0x783]
	0x036EE118 CBNZ W8, 0x36EE130
	0x036EE11C ADRP X0, 0xA05000
	0x036EE120 LDR X0, [X0 + 0x5A0]
	0x036EE124 BL 0x1C16CF4
	0x036EE128 MOVZ W8, 0x1
	0x036EE12C STRB W8, [X20 + 0x783]
	0x036EE130 ADRP X8, 0xA05000
	0x036EE134 LDR X8, [X8 + 0x5A0]
	0x036EE138 ADRP X11, 0xFFFFFFFFFD3FF000
	0x036EE13C LDR V0, [X11 + 0xA40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCF3000
	006 Move X21, 0xA06000
	007 Move W8, [X20+2877]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA06000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2877], W8
	019 Move X0, [X21]
	020 Move X20, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {47}
	033 Move X0, [X21]
	034 Move X20, [X19+8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {48}
	047 Move W8, W31
	048 Move X0, [X21]
	049 Move X19, [X19+16]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X19
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Equality, X0, X1
	058 Xor W8, W0, 1
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 And W0, W8, 1
	062 Move X30, [X31+32]
	063 Move X21, [X31+40]
	064 Return X0

Method: System.Void UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues()

Disassembly:
	0x036EE140 MOVZ W9, 0x101
	0x036EE144 LDR X8, [X8]
	0x036EE148 MOVZ W10, 0x1
	0x036EE14C LDR X8, [X8 + 0xB8]
	0x036EE150 LDR V1, [X8]
	0x036EE154 LDR V2, [X8 + 0x8]
	0x036EE158 STURH W9, [X19 + 0xBD]
	0x036EE15C STRB W10, [X19 + 0xBF]

ISIL:
	001 Move W8, 257
	002 NotImplemented "Instruction MOVI not yet implemented."
	003 Move [X0], X31
	004 Move [X0+8], X31
	005 Move [X0+16], X31
	006 NotImplemented "Instruction STRH not yet implemented."
	007 Move [X0+28], D0
	008 NotImplemented "Instruction STRH not yet implemented."
	009 Return 

