Type: UnityEngine.Animations.Rigging.DampedTransformJobBinder`1

Method: UnityEngine.Animations.Rigging.DampedTransformJob Create(UnityEngine.Animator animator, ref T data, UnityEngine.Component component)

Disassembly:
	0x029AC098 LDP D11, D10, [X31 + 0x20]
	0x029AC09C LDP D13, D12, [X31 + 0x10]
	0x029AC0A0 LDP D15, D14, [X31], #0xA0
	0x029AC0A4 RET
	0x029AC0A8 BL 0x1C16F20
	0x029AC0AC BL 0x3EB1B20
	0x029AC0B0 RET
	0x029AC0B4 LDR X8, [X1 + 0x20]
	0x029AC0B8 LDR X8, [X8 + 0xC0]
	0x029AC0BC LDR X1, [X8 + 0x38]
	0x029AC0C0 LDR X2, [X1]
	0x029AC0C4 BR X2
	0x029AC0C8 SUB X31, X31, 0x60
	0x029AC0CC STP X30, X27, [X31 + 0x10]
	0x029AC0D0 STP X26, X25, [X31 + 0x20]
	0x029AC0D4 STP X24, X23, [X31 + 0x30]
	0x029AC0D8 STP X22, X21, [X31 + 0x40]
	0x029AC0DC STP X20, X19, [X31 + 0x50]
	0x029AC0E0 ADRP X26, 0x1A2E000
	0x029AC0E4 LDRB W8, [X26 + 0xF8A]
	0x029AC0E8 MOV X22, X6
	0x029AC0EC MOV W23, W5
	0x029AC0F0 MOV W20, W4
	0x029AC0F4 MOV W21, W3
	0x029AC0F8 MOV W24, W2
	0x029AC0FC MOV W25, W1
	0x029AC100 MOV X19, X0
	0x029AC104 TBNZ X8, 0x0, 0x29AC128
	0x029AC108 ADRP X0, 0x1772000
	0x029AC10C LDR X0, [X0 + 0x590]
	0x029AC110 BL 0x1C16CF4
	0x029AC114 ADRP X0, 0x1772000
	0x029AC118 LDR X0, [X0 + 0x598]
	0x029AC11C BL 0x1C16CF4
	0x029AC120 MOVZ W8, 0x1
	0x029AC124 STRB W8, [X26 + 0xF8A]
	0x029AC128 ADRP X27, 0x1772000
	0x029AC12C LDR X27, [X27 + 0x590]
	0x029AC130 MOV X0, X19
	0x029AC134 MOV X1, X31
	0x029AC138 BL 0x33BDD8C
	0x029AC13C TBNZ X23, 0x0, 0x29AC17C
	0x029AC140 LDR X8, [X22 + 0x20]
	0x029AC144 LDR X8, [X8 + 0xC0]
	0x029AC148 LDR X0, [X8]
	0x029AC14C LDRB W8, [X0 + 0x135]
	0x029AC150 TBNZ X8, 0x0, 0x29AC158
	0x029AC154 BL 0x1C5C684
	0x029AC158 BL 0x1C16F10
	0x029AC15C LDR X8, [X22 + 0x20]
	0x029AC160 MOV W1, W24
	0x029AC164 MOV W2, W25
	0x029AC168 MOV X26, X0
	0x029AC16C LDR X8, [X8 + 0xC0]
	0x029AC170 LDR X3, [X8 + 0x8]
	0x029AC174 BL 0x2D42B4C
	0x029AC178 STR X26, [X19 + 0x18]
	0x029AC17C STP X31, X31, [X31]
	0x029AC180 LDR X8, [X22 + 0x20]
	0x029AC184 ADD X0, X31, 0x0
	0x029AC188 MOVZ W2, 0x4
	0x029AC18C MOV W1, W24
	0x029AC190 LDR X8, [X8 + 0xC0]
	0x029AC194 MOV W3, W31
	0x029AC198 LDR X4, [X8 + 0x20]
	0x029AC19C BL 0x23EB8B4
	0x029AC1A0 LDR V0, [X31]
	0x029AC1A4 STR V0, [X19 + 0x2]
	0x029AC1A8 LDR X0, [X27]
	0x029AC1AC BL 0x1C16F10
	0x029AC1B0 MOV W1, W24
	0x029AC1B4 MOV X2, X31
	0x029AC1B8 MOV X25, X0
	0x029AC1BC BL 0x3D349BC
	0x029AC1C0 STR X25, [X19 + 0x40]
	0x029AC1C4 TBNZ X23, 0x0, 0x29AC1E4
	0x029AC1C8 LDR X0, [X19 + 0x18]
	0x029AC1CC CBZ X0, 0x29AC23C
	0x029AC1D0 LDR X8, [X22 + 0x20]
	0x029AC1D4 LDR X8, [X8 + 0xC0]
	0x029AC1D8 LDR X1, [X8 + 0x28]
	0x029AC1DC BL 0x2D42D2C
	0x029AC1E0 STR W0, [X19 + 0x4C]
	0x029AC1E4 ADRP X8, 0x1772000
	0x029AC1E8 LDR X8, [X8 + 0x598]
	0x029AC1EC STR W20, [X19 + 0x48]
	0x029AC1F0 MUL W1, W20, W21
	0x029AC1F4 ADD X0, X31, 0x0
	0x029AC1F8 LDR X4, [X8]
	0x029AC1FC MOVZ W2, 0x4
	0x029AC200 MOV W3, W31
	0x029AC204 STP X31, X31, [X31]
	0x029AC208 BL 0x23D2DA4
	0x029AC20C ADRP X8, 0xFFFFFFFFFE13E000
	0x029AC210 LDR V0, [X31]
	0x029AC214 LDR V1, [X8 + 0xFD]
	0x029AC218 LDP X22, X21, [X31 + 0x40]
	0x029AC21C LDP X24, X23, [X31 + 0x30]
	0x029AC220 STR V0, [X19 + 0x3]
	0x029AC224 STR V1, [X19 + 0x5]
	0x029AC228 LDP X20, X19, [X31 + 0x50]
	0x029AC22C LDP X26, X25, [X31 + 0x20]
	0x029AC230 LDP X30, X27, [X31 + 0x10]
	0x029AC234 ADD X31, X31, 0x60
	0x029AC238 RET
	0x029AC23C BL 0x1C16F20
	0x029AC240 LDRB W0, [X0 + 0x10]
	0x029AC244 RET
	0x029AC248 AND W8, W1, 0x1
	0x029AC24C STRB W8, [X0 + 0x10]
	0x029AC250 RET
	0x029AC254 STR X30, [X31 - 0x30]!
	0x029AC258 STP X22, X21, [X31 + 0x10]
	0x029AC25C STP X20, X19, [X31 + 0x20]
	0x029AC260 ADRP X22, 0x1A2E000
	0x029AC264 ADRP X21, 0x174E000
	0x029AC268 LDRB W8, [X22 + 0xF8B]
	0x029AC26C LDR X21, [X21 + 0xC10]
	0x029AC270 MOV X20, X1
	0x029AC274 MOV X19, X0
	0x029AC278 TBNZ X8, 0x0, 0x29AC290
	0x029AC27C ADRP X0, 0x174E000
	0x029AC280 LDR X0, [X0 + 0xC10]
	0x029AC284 BL 0x1C16CF4
	0x029AC288 MOVZ W8, 0x1
	0x029AC28C STRB W8, [X22 + 0xF8B]
	0x029AC290 LDR X8, [X20 + 0x20]
	0x029AC294 MOVZ W1, 0x1
	0x029AC298 MOV X0, X19
	0x029AC29C LDR X8, [X8 + 0xC0]
	0x029AC2A0 LDR X2, [X8 + 0x30]
	0x029AC2A4 BL 0x29AC2D0
	0x029AC2A8 LDR X0, [X21]
	0x029AC2AC LDR W8, [X0 + 0xE0]
	0x029AC2B0 CBNZ W8, 0x29AC2B8
	0x029AC2B4 BL 0x1C16DFC
	0x029AC2B8 MOV X0, X19
	0x029AC2BC LDP X20, X19, [X31 + 0x20]
	0x029AC2C0 LDP X22, X21, [X31 + 0x10]
	0x029AC2C4 MOV X1, X31
	0x029AC2C8 LDR X30, [X31], #0x30
	0x029AC2CC B 0x33B3E9C
	0x029AC2D0 STR X30, [X31 - 0x30]!
	0x029AC2D4 STP X22, X21, [X31 + 0x10]
	0x029AC2D8 STP X20, X19, [X31 + 0x20]
	0x029AC2DC ADRP X22, 0x1A2E000
	0x029AC2E0 LDRB W8, [X22 + 0xF8C]
	0x029AC2E4 MOV X20, X2
	0x029AC2E8 MOV W21, W1
	0x029AC2EC MOV X19, X0
	0x029AC2F0 TBNZ X8, 0x0, 0x29AC308
	0x029AC2F4 ADRP X0, 0x1772000
	0x029AC2F8 LDR X0, [X0 + 0x5A0]
	0x029AC2FC BL 0x1C16CF4
	0x029AC300 MOVZ W8, 0x1
	0x029AC304 STRB W8, [X22 + 0xF8C]
	0x029AC308 LDRB W8, [X19 + 0x10]
	0x029AC30C CBNZ W8, 0x29AC35C
	0x029AC310 TBZ X21, 0x0, 0x29AC354
	0x029AC314 LDR X8, [X20 + 0x20]
	0x029AC318 LDR X0, [X19 + 0x18]
	0x029AC31C LDR X8, [X8 + 0xC0]
	0x029AC320 CBZ X0, 0x29AC334
	0x029AC324 LDR X1, [X8 + 0x40]
	0x029AC328 BL 0x2D42BDC
	0x029AC32C LDR X8, [X20 + 0x20]
	0x029AC330 LDR X8, [X8 + 0xC0]
	0x029AC334 LDR X1, [X8 + 0x48]
	0x029AC338 ADD X0, X19, 0x20
	0x029AC33C BL 0x23EBADC
	0x029AC340 ADRP X8, 0x1772000
	0x029AC344 LDR X8, [X8 + 0x5A0]
	0x029AC348 ADD X0, X19, 0x30
	0x029AC34C LDR X1, [X8]
	0x029AC350 BL 0x23D2FE0
	0x029AC354 MOVZ W8, 0x1
	0x029AC358 STRB W8, [X19 + 0x10]
	0x029AC35C LDP X20, X19, [X31 + 0x20]
	0x029AC360 LDP X22, X21, [X31 + 0x10]
	0x029AC364 LDR X30, [X31], #0x30
	0x029AC368 RET
	0x029AC36C STP X30, X25, [X31 - 0x40]!
	0x029AC370 STP X24, X23, [X31 + 0x10]
	0x029AC374 STP X22, X21, [X31 + 0x20]
	0x029AC378 STP X20, X19, [X31 + 0x30]
	0x029AC37C ADRP X24, 0x1A2E000
	0x029AC380 ADRP X23, 0x1747000
	0x029AC384 LDRB W8, [X24 + 0xF8D]
	0x029AC388 LDR X23, [X23 + 0xA28]
	0x029AC38C MOV X22, X3
	0x029AC390 MOV W20, W2
	0x029AC394 MOV W21, W1
	0x029AC398 MOV X19, X0
	0x029AC39C TBNZ X8, 0x0, 0x29AC3C0
	0x029AC3A0 ADRP X0, 0x1747000
	0x029AC3A4 LDR X0, [X0 + 0xA28]
	0x029AC3A8 BL 0x1C16CF4
	0x029AC3AC ADRP X0, 0x1747000
	0x029AC3B0 LDR X0, [X0 + 0x5A8]
	0x029AC3B4 BL 0x1C16CF4
	0x029AC3B8 MOVZ W8, 0x1
	0x029AC3BC STRB W8, [X24 + 0xF8D]
	0x029AC3C0 LDR X0, [X23]
	0x029AC3C4 LDRSW X25, [X19 + 0x28]
	0x029AC3C8 LDR W8, [X0 + 0xE0]
	0x029AC3CC CBNZ W8, 0x29AC3D4
	0x029AC3D0 BL 0x1C16DFC
	0x029AC3D4 ADRP X24, 0x1747000
	0x029AC3D8 LDR X24, [X24 + 0x5A8]
	0x029AC3DC ADD W23, W20, W21
	0x029AC3E0 CMP X23, X25
	0x029AC3E4 CSET W0, LE
	0x029AC3E8 MOV X1, X31
	0x029AC3EC BL 0x3C06E58
	0x029AC3F0 LDP W9, W8, [X19 + 0x58]
	0x029AC3F4 ADD W25, W9, W8
	0x029AC3F8 CBZ W9, 0x29AC45C
	0x029AC3FC LDR X9, [X19 + 0x30]
	0x029AC400 SUB W8, W25, 0x1
	0x029AC404 SBFM X10, X8, 0x3C, 0x1F
	0x029AC408 ADD X8, X9, W8, 0x4, SXTW
	0x029AC40C LDR W11, [X9, X10, LSL]
	0x029AC410 LDR W9, [X8 + 0x4]!
	0x029AC414 LDR W10, [X19 + 0x4C]
	0x029AC418 ADD W11, W9, W11
	0x029AC41C MUL W12, W10, W21
	0x029AC420 CMP W11, W12
	0x029AC424 B.NE 0x29AC45C
	0x029AC428 MADD W9, W10, W20, W9
	0x029AC42C STR W9, [X8]
	0x029AC430 LDR X0, [X24]
	0x029AC434 LDR W20, [X19 + 0x54]
	0x029AC438 LDR W8, [X0 + 0xE0]
	0x029AC43C CBNZ W8, 0x29AC444
	0x029AC440 BL 0x1C16DFC
	0x029AC444 MOV W0, W20
	0x029AC448 MOV W1, W23
	0x029AC44C MOV X2, X31
	0x029AC450 BL 0x337EE48
	0x029AC454 STR W0, [X19 + 0x54]
	0x029AC458 B 0x29AC50C
	0x029AC45C LDR X0, [X24]
	0x029AC460 LDR W24, [X19 + 0x50]
	0x029AC464 LDR W8, [X0 + 0xE0]
	0x029AC468 CBNZ W8, 0x29AC470
	0x029AC46C BL 0x1C16DFC
	0x029AC470 MOV W0, W24
	0x029AC474 MOV W1, W21
	0x029AC478 MOV X2, X31
	0x029AC47C BL 0x337EEEC
	0x029AC480 LDR W8, [X19 + 0x54]
	0x029AC484 STR W0, [X19 + 0x50]
	0x029AC488 MOV W1, W23
	0x029AC48C MOV X2, X31
	0x029AC490 MOV W0, W8
	0x029AC494 BL 0x337EE48
	0x029AC498 LDR W8, [X19 + 0x58]
	0x029AC49C LDR W9, [X19 + 0x48]
	0x029AC4A0 STR W0, [X19 + 0x54]
	0x029AC4A4 CMP W8, W9
	0x029AC4A8 B.NE 0x29AC4B8
	0x029AC4AC MOVZ W8, 0x1
	0x029AC4B0 STRB W8, [X19 + 0x60]
	0x029AC4B4 B 0x29AC50C
	0x029AC4B8 LDR X8, [X22 + 0x20]
	0x029AC4BC LDP X0, X1, [X19 + 0x20]
	0x029AC4C0 MOV W2, W21
	0x029AC4C4 MOV W3, W20
	0x029AC4C8 LDR X8, [X8 + 0xC0]
	0x029AC4CC LDR X4, [X8 + 0x68]
	0x029AC4D0 BL 0x22229E0
	0x029AC4D4 LDR X8, [X22 + 0x20]
	0x029AC4D8 LDR X8, [X8 + 0xC0]
	0x029AC4DC LDR X2, [X8 + 0x78]
	0x029AC4E0 BL 0x22232E8
	0x029AC4E4 LDR W8, [X19 + 0x4C]
	0x029AC4E8 LDR X9, [X19 + 0x30]
	0x029AC4EC MUL W10, W8, W21
	0x029AC4F0 MUL W8, W8, W20
	0x029AC4F4 ADD X9, X9, W25, 0x4, SXTW
	0x029AC4F8 STP W10, W8, [X9]
	0x029AC4FC STR X0, [X9 + 0x8]
	0x029AC500 LDR W8, [X19 + 0x58]
	0x029AC504 ADD W8, W8, 0x1
	0x029AC508 STR W8, [X19 + 0x58]
	0x029AC50C LDP X20, X19, [X31 + 0x30]
	0x029AC510 LDP X22, X21, [X31 + 0x20]
	0x029AC514 LDP X24, X23, [X31 + 0x10]
	0x029AC518 LDP X30, X25, [X31], #0x40
	0x029AC51C RET
	0x029AC520 STR X30, [X31 - 0x20]!
	0x029AC524 STP X20, X19, [X31 + 0x10]
	0x029AC528 ADRP X19, 0x1A2E000
	0x029AC52C ADRP X20, 0x1770000
	0x029AC530 LDRB W8, [X19 + 0xF8E]
	0x029AC534 LDR X20, [X20 + 0x820]
	0x029AC538 TBNZ X8, 0x0, 0x29AC550
	0x029AC53C ADRP X0, 0x1770000
	0x029AC540 LDR X0, [X0 + 0x820]

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+240], D15
	003 Move [X31+248], D14
	004 Move [X31+256], D13
	005 Move [X31+264], D12
	006 Move [X31+272], D11
	007 Move [X31+280], D10
	008 Move [X31+288], D9
	009 Move [X31+296], D8
	010 Move [X31+304], X29
	011 Move [X31+320], X30
	012 Move [X31+328], X27
	013 Move [X31+336], X26
	014 Move [X31+344], X25
	015 Move [X31+352], X24
	016 Move [X31+360], X23
	017 Move [X31+368], X22
	018 Move [X31+376], X21
	019 Move [X31+384], X20
	020 Move [X31+392], X19
	021 Move X20, 0x1A2F000
	022 Move W9, [X20+3976]
	023 Move X24, X4
	024 Move X25, X3
	025 Move X22, X2
	026 Move X26, X1
	027 Move X19, X8
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x1771000
	033 Move X0, [X0+3648]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3976], W8
	037 Move [X31+184], X31
	038 Move [X31+192], X31
	039 Move [X31+176], X31
	040 Move [X31+200], W31
	041 Move [X31+152], X31
	042 Move [X31+160], X31
	043 Move [X31+136], X31
	044 Move [X31+144], X31
	045 Move [X31+168], W31
	046 Move [X31+96], X31
	047 Move [X31+104], X31
	048 Move [X31+120], W31
	049 Move [X31+112], X31
	050 Move [X31+64], X31
	051 Move [X31+72], X31
	052 Move [X31+88], W31
	053 Move [X31+80], X31
	054 Move [X31+128], X31
	055 Move X1, [X22]
	056 Move X0, X26
	057 Move X2, X31
	058 Call ReadWriteTransformHandle.Bind, X0, X1
	059 Move X9, [X22+8]
	060 Move X20, X0
	061 Move X21, X1
	062 Add X8, X31, 32
	063 Move X0, X26
	064 Move X1, X9
	065 Move X2, X31
	066 Call ReadOnlyTransformHandle.Bind, X0, X1
	067 Move V0, [X31+2]
	068 Move X8, [X31+48]
	069 Move [X31+13], V0
	070 Move [X31+224], X8
	071 Move X0, [X22]
	072 Compare X0, 0
	073 JumpIfEqual {342}
	074 Move X1, X31
	075 Call Transform.get_position, X0
	076 Move X0, [X22]
	077 Compare X0, 0
	078 JumpIfEqual {342}
	079 Move X23, 0x1771000
	080 Move X23, [X23+3648]
	081 Move X1, X31
	082 Move V8, V0
	083 Move V9, V1
	084 Move V10, V2
	085 Call Transform.get_rotation, X0
	086 Move X0, [X23]
	087 Move V11, V0
	088 Move V12, V1
	089 Move V13, V2
	090 Move W8, [X0+224]
	091 Move V14, V3
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Add X0, X31, 96
	096 Move V0, V8
	097 Move V1, V9
	098 Move V2, V10
	099 Move V3, V11
	100 Move V4, V12
	101 Move V5, V13
	102 Move V6, V14
	103 Move X1, X31
	104 Call AffineTransform..ctor, X0, X1, X2
	105 Move X0, [X22+8]
	106 Compare X0, 0
	107 JumpIfEqual {342}
	108 Move X1, X31
	109 Call Transform.get_position, X0
	110 Move X0, [X22+8]
	111 Compare X0, 0
	112 JumpIfEqual {342}
	113 Move X1, X31
	114 Move V8, V0
	115 Move V9, V1
	116 Move V10, V2
	117 Add X27, X31, 144
	118 Call Transform.get_rotation, X0
	119 Move V4, V0
	120 Move V5, V1
	121 Move V6, V2
	122 Move V7, V3
	123 Add X0, X31, 64
	124 Move V0, V8
	125 Move V1, V9
	126 Move V2, V10
	127 Move V3, V4
	128 Move V4, V5
	129 Move V5, V6
	130 Move V6, V7
	131 Move X1, X31
	132 Call AffineTransform..ctor, X0, X1, X2
	133 Move V0, [X31+6]
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 Add X8, X31, 32
	136 Add X0, X31, 64
	137 Add X1, X31, 0
	138 Move X2, X31
	139 Move [X31], V0
	140 Move [X31+12], V1
	141 Call AffineTransform.InverseMul, X0, X1
	142 Move V0, [X31+2]
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 Move V2, [X31+6]
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 Move [X31+11], V0
	147 Move [X27+44], V1
	148 Move [X31+9], V2
	149 Move [X27+12], V3
	150 Move X8, [X24+32]
	151 Move X0, X22
	152 Move X8, [X8+192]
	153 Move X1, [X8+32]
	154 Call DampedTransformData.UnityEngine.Animations.Rigging.IDampedTransformData.get_dampPositionFloatProperty, X0
	155 Move X2, X0
	156 Move X0, X26
	157 Move X1, X25
	158 Move X3, X31
	159 Call FloatProperty.Bind, X0, X1, X2
	160 Move X8, [X24+32]
	161 Move X23, X0
	162 Move X24, X1
	163 Move X0, X22
	164 Move X8, [X8+192]
	165 Move X8, [X8+40]
	166 Move X1, X8
	167 Call DampedTransformData.UnityEngine.Animations.Rigging.IDampedTransformData.get_dampRotationFloatProperty, X0
	168 Move X2, X0
	169 Move X0, X26
	170 Move X1, X25
	171 Move X3, X31
	172 Call FloatProperty.Bind, X0, X1, X2
	173 Move W8, [X22+24]
	174 Move X25, X0
	175 Move X26, X1
	176 Compare W8, 0
	177 JumpIfEqual {258}
	178 Move X0, [X22]
	179 Compare X0, 0
	180 JumpIfEqual {342}
	181 Move X1, X31
	182 Call Transform.get_position, X0
	183 Move X0, [X22+8]
	184 Compare X0, 0
	185 JumpIfEqual {342}
	186 Move X1, X31
	187 Move V8, V0
	188 Move V9, V1
	189 Move V10, V2
	190 Call Transform.get_position, X0
	191 Move V3, V0
	192 Move V4, V1
	193 Move V5, V2
	194 Move V0, V8
	195 Move V1, V9
	196 Move V2, V10
	197 Move X0, X31
	198 Call AnimationRuntimeUtils.SqrDistance, X0, X1
	199 NotImplemented "Instruction FCMP not yet implemented."
	200 Move X0, [X22]
	201 Compare X0, 0
	202 JumpIfEqual {342}
	203 Move X1, X31
	204 Call Transform.get_rotation, X0
	205 Move X0, X31
	206 Call Quaternion.Inverse, X0
	207 Move X22, 0x1A2D000
	208 Move S12, [X31+64]
	209 Move S13, [X31+68]
	210 Move V15, [X31+72]
	211 Move S14, [X31+96]
	212 Move S8, [X31+100]
	213 Move W8, [X22+1925]
	214 Move V9, [X31+104]
	215 Move V10, V1
	216 Move V11, V2
	217 Compare W8, 0
	218 JumpIfNotEqual {232}
	219 Move X0, 0x1748000
	220 Move X0, [X0+1448]
	221 Move [X31+316], S11
	222 Move [X31+312], S10
	223 Move V10, V0
	224 Move V11, V3
	225 Call 0x1C17CF4
	226 Move V3, V11
	227 Move V0, V10
	228 Move V10, [X31+312]
	229 Move V11, [X31+316]
	230 Move W8, 1
	231 Move [X22+1925], W8
	232 Move X8, 0x1748000
	233 Move X8, [X8+1448]
	234 Subtract S14, S12, S14
	235 Subtract S13, S13, S8
	236 Subtract S12, S15, S9
	237 Move X0, [X8]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {246}
	241 Move V8, V0
	242 Move V9, V3
	243 Call 0x1C17DFC
	244 Move V3, V9
	245 Move V0, V8
	246 Multiply S2, S14, S14
	247 Multiply S1, S13, S13
	248 Move X8, -32247808
	249 Add S4, S2, S1
	250 Move V1, [X8+380]
	251 Multiply S2, S12, S12
	252 Add S2, S2, S4
	253 NotImplemented "Instruction FSQRT not yet implemented."
	254 NotImplemented "Instruction FCMP not yet implemented."
	255 NotImplemented "Instruction FDIV not yet implemented."
	256 NotImplemented "Instruction FDIV not yet implemented."
	257 NotImplemented "Instruction FDIV not yet implemented."
	258 Move X22, 0x1A2D000
	259 Move W8, [X22+1923]
	260 Compare W8, 0
	261 JumpIfNotEqual {267}
	262 Move X0, 0x1748000
	263 Move X0, [X0+1440]
	264 Call 0x1C17CF4
	265 Move W8, 1
	266 Move [X22+1923], W8
	267 Move X8, 0x1748000
	268 Move X8, [X8+1440]
	269 Move X8, [X8]
	270 Move X8, [X8+184]
	271 Move S0, [X8]
	272 Move S1, [X8+4]
	273 Move V2, [X8+8]
	274 Move X22, 0x1A2D000
	275 Move W8, [X22+1923]
	276 Compare W8, 0
	277 JumpIfNotEqual {287}
	278 Move X0, 0x1748000
	279 Move X0, [X0+1440]
	280 Move V8, V0
	281 Move V9, V3
	282 Call 0x1C17CF4
	283 Move V3, V9
	284 Move V0, V8
	285 Move W8, 1
	286 Move [X22+1923], W8
	287 Move X8, 0x1748000
	288 Move X8, [X8+1440]
	289 Move X8, [X8]
	290 Move X8, [X8+184]
	291 Move S4, [X8]
	292 Move S5, [X8+4]
	293 Move V6, [X8+8]
	294 Move V1, V10
	295 Move V2, V11
	296 Move X0, X31
	297 Call Quaternion.op_Multiply, X0, X1
	298 Move V3, [X31+13]
	299 Move X8, [X31+224]
	300 Move V4, [X31+11]
	301 NotImplemented "Instruction LDUR not yet implemented."
	302 Move [X19+64], S0
	303 Move [X19+72], S1
	304 Move [X19+72], S2
	305 Move V2, [X31+128]
	306 Move V0, [X31+144]
	307 NotImplemented "Instruction LDUR not yet implemented."
	308 Move [X19], X20
	309 Move [X19+8], W21
	310 Move [X19+104], X23
	311 Move [X19+112], X24
	312 Move [X19+120], X25
	313 Move [X19+128], X26
	314 Move [X19+12], V3
	315 Move [X19+28], X8
	316 Move [X19+3], V5
	317 Move [X19+36], V4
	318 Move [X19+88], V1
	319 Move [X19+76], V0
	320 Move [X19+136], V2
	321 Move X20, [X31+384]
	322 Move X19, [X31+392]
	323 Move X22, [X31+368]
	324 Move X21, [X31+376]
	325 Move X24, [X31+352]
	326 Move X23, [X31+360]
	327 Move X26, [X31+336]
	328 Move X25, [X31+344]
	329 Move X30, [X31+320]
	330 Move X27, [X31+328]
	331 Move X29, [X31+304]
	332 Move D9, [X31+288]
	333 Move D8, [X31+296]
	334 Move D11, [X31+272]
	335 Move D10, [X31+280]
	336 Move D13, [X31+256]
	337 Move D12, [X31+264]
	338 Move D15, [X31+240]
	339 Move D14, [X31+248]
	340 Add X31, X31, 400
	341 Return X0
	342 Call 0x1C17F20

Method: System.Void Destroy(UnityEngine.Animations.Rigging.DampedTransformJob job)

Disassembly:
	0x029AC544 BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x029AC548 MOVZ W8, 0x1
	0x029AC54C STRB W8, [X19 + 0xF8E]
	0x029AC550 LDR X0, [X20]
	0x029AC554 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+56]
	004 Call AnimationJobBinder`2<DampedTransformJob, DampedTransformData>..ctor, X0
	005 Return 

