Type: UnityEngine.Animations.Rigging.MultiReferentialConstraintData

Method: System.Int32 get_driver()

Disassembly:
	0x036EFF74 CSET W0, NE
	0x036EFF78 B 0x36EFF60

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void set_driver(System.Int32 value)

Disassembly:
	0x036EFF7C BL 0x1C16F20
	0x036EFF80 STP X30, X19, [X31 - 0x10]!
	0x036EFF84 MOVI V0.2D, 0x0
	0x036EFF88 MOV X19, X0
	0x036EFF8C STP V0, V0, [X0]
	0x036EFF90 FMOV S0, W31
	0x036EFF94 FMOV S1, W31
	0x036EFF98 FMOV S2, 1
	0x036EFF9C FMOV S3, 1
	0x036EFFA0 MOV X0, X31
	0x036EFFA4 BL 0x3C01298
	0x036EFFA8 STR X0, [X19 + 0x20]
	0x036EFFAC LDP X30, X19, [X31], #0x10
	0x036EFFB0 RET
	0x036EFFB4 STP X30, X21, [X31 - 0x20]!
	0x036EFFB8 STP X20, X19, [X31 + 0x10]
	0x036EFFBC ADRP X21, 0xCF1000
	0x036EFFC0 ADRP X20, 0xA51000
	0x036EFFC4 LDRB W8, [X21 + 0xB75]
	0x036EFFC8 LDR X20, [X20 + 0x938]
	0x036EFFCC MOV X19, X0
	0x036EFFD0 TBNZ X8, 0x0, 0x36EFFF4
	0x036EFFD4 ADRP X0, 0xA51000
	0x036EFFD8 LDR X0, [X0 + 0x940]
	0x036EFFDC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCF2000
	006 Move W8, [X21+2909]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA0C000
	014 Move X0, [X0+2232]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2909], W8
	018 Move X8, [X20+8]
	019 Compare X8, 0
	020 JumpIfEqual {33}
	021 Move W8, [X8+24]
	022 Subtract W8, W8, 1
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSEL not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Move [X20], W8
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 
	033 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.Transform> get_sourceObjects()

Disassembly:
	0x036EFFE0 ADRP X0, 0xA51000
	0x036EFFE4 LDR X0, [X0 + 0x938]
	0x036EFFE8 BL 0x1C16CF4
	0x036EFFEC MOVZ W8, 0x1
	0x036EFFF0 STRB W8, [X21 + 0xB75]
	0x036EFFF4 LDR X0, [X20]
	0x036EFFF8 ADRP X20, 0xA51000
	0x036EFFFC LDR W8, [X0 + 0xE0]
	0x036F0000 B 0x3EB192C
	0x036F0004 CBNZ W8, 0x36F000C
	0x036F0008 BL 0x1C16DFC
	0x036F000C LDR X1, [X20]
	0x036F0010 MOV X0, X19
	0x036F0014 LDP X20, X19, [X31 + 0x10]
	0x036F0018 LDP X30, X21, [X31], #0x20
	0x036F001C B 0x25CD1A0
	0x036F0020 LDR X0, [X0]
	0x036F0024 RET
	0x036F0028 STR X1, [X0]
	0x036F002C RET
	0x036F0030 ADD X1, X0, 0x10
	0x036F0034 MOVZ W2, 0x88
	0x036F0038 MOV X0, X8
	0x036F003C B 0x3EB1AC0
	0x036F0040 STR X30, [X31 - 0x10]!
	0x036F0044 ADD X0, X0, 0x10
	0x036F0048 MOVZ W2, 0x88
	0x036F004C BL 0x3EB1B30
	0x036F0050 LDR X30, [X31], #0x10
	0x036F0054 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCF2000
	005 Move W8, [X20+2910]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xA0C000
	012 Move X0, [X0+2360]
	013 Call 0x1C17CF4
	014 Move X0, 0xA0B000
	015 Move X0, [X0+2352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2910], W8
	019 Move X20, [X19+8]
	020 Compare X20, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0xA0B000
	023 Move X8, [X8+2352]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0xA0B000
	027 Move X8, [X8+2360]
	028 Move X20, X0
	029 Move X1, [X8]
	030 Call List`1<Object>..ctor, X0
	031 Move [X19+8], X20
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Void set_sourceObjects(System.Collections.Generic.List`1<UnityEngine.Transform> value)

Disassembly:
	0x036F0058 LDR W0, [X0 + 0x8]
	0x036F005C RET
	0x036F0060 STR W1, [X0 + 0x8]
	0x036F0064 RET
	0x036F0068 LDR X0, [X0]
	0x036F006C RET
	0x036F0070 LDR W0, [X0 + 0x8]
	0x036F0074 B 0x36F0078
	0x036F0078 STP X30, X19, [X31 - 0x10]!
	0x036F007C CMP W0, 0x1
	0x036F0080 B.EQ 0x36F00C8
	0x036F0084 CBNZ W0, 0x36F0108
	0x036F0088 ADRP X19, 0xCE8000
	0x036F008C LDRB W8, [X19 + 0xB70]
	0x036F0090 CBNZ W8, 0x36F00A8
	0x036F0094 ADRP X0, 0xA03000
	0x036F0098 LDR X0, [X0 + 0x5A0]
	0x036F009C BL 0x1C16CF4
	0x036F00A0 MOVZ W8, 0x1
	0x036F00A4 STRB W8, [X19 + 0xB70]
	0x036F00A8 ADRP X8, 0xA03000
	0x036F00AC LDR X8, [X8 + 0x5A0]
	0x036F00B0 LDR X8, [X8]
	0x036F00B4 LDR X10, [X8 + 0xB8]
	0x036F00B8 ADD X8, X10, 0x3C
	0x036F00BC ADD X9, X10, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCF1000
	006 Move W8, [X21+2911]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA0B000
	014 Move X0, [X0+2232]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2911], W8
	018 Move [X19+8], X20
	019 Compare X20, 0
	020 JumpIfEqual {34}
	021 Move W8, [X20+24]
	022 Move W9, [X19]
	023 Subtract W8, W8, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 Move [X19], W8
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Call 0x1C17F20

Method: UnityEngine.Transform[] UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_sourceObjects()

Disassembly:
	0x036F00C0 ADD X10, X10, 0x44
	0x036F00C4 B 0x36F0144
	0x036F00C8 ADRP X19, 0xCE8000
	0x036F00CC LDRB W8, [X19 + 0x786]
	0x036F00D0 CBNZ W8, 0x36F00E8
	0x036F00D4 ADRP X0, 0xA03000
	0x036F00D8 LDR X0, [X0 + 0x5A0]
	0x036F00DC BL 0x1C16CF4
	0x036F00E0 MOVZ W8, 0x1
	0x036F00E4 STRB W8, [X19 + 0x786]
	0x036F00E8 ADRP X8, 0xA03000
	0x036F00EC LDR X8, [X8 + 0x5A0]
	0x036F00F0 LDR X8, [X8]
	0x036F00F4 LDR X10, [X8 + 0xB8]
	0x036F00F8 ADD X8, X10, 0x18
	0x036F00FC ADD X9, X10, 0x1C
	0x036F0100 ADD X10, X10, 0x20
	0x036F0104 B 0x36F0144
	0x036F0108 ADRP X19, 0xCE8000
	0x036F010C LDRB W8, [X19 + 0xA1F]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCF1000
	005 Move W8, [X20+2912]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA51000
	012 Move X0, [X0+2256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2912], W8
	016 Move X0, [X19+8]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0xA51000
	020 Move X8, [X8+2256]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call List`1<Object>.ToArray, X0
	026 Return X0
	027 Call 0x1C17F20

Method: System.Int32 UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverValue()

Disassembly:
	0x036F0110 CBNZ W8, 0x36F0128
	0x036F0114 ADRP X0, 0xA03000

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.String UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverIntProperty()

Disassembly:
	0x036F0118 LDR X0, [X0 + 0x5A0]
	0x036F011C BL 0x1C16CF4
	0x036F0120 MOVZ W8, 0x1
	0x036F0124 STRB W8, [X19 + 0xA1F]
	0x036F0128 ADRP X8, 0xA03000
	0x036F012C LDR X8, [X8 + 0x5A0]
	0x036F0130 LDR X8, [X8]
	0x036F0134 LDR X10, [X8 + 0xB8]
	0x036F0138 ADD X8, X10, 0x48
	0x036F013C ADD X9, X10, 0x4C
	0x036F0140 ADD X10, X10, 0x50
	0x036F0144 LDR V2, [X10]
	0x036F0148 LDR V1, [X9]
	0x036F014C LDR V0, [X8]
	0x036F0150 LDP X30, X19, [X31], #0x10
	0x036F0154 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCF1000
	005 Move X20, 0xA51000
	006 Move W8, [X19+2913]
	007 Move X20, [X20+2264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA51000
	013 Move X0, [X0+2264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2913], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	022 Return X0

Method: System.Boolean UnityEngine.Animations.Rigging.IAnimationJobData.IsValid()

Disassembly:
	0x036F0158 STR X30, [X31 - 0x20]!
	0x036F015C STP X20, X19, [X31 + 0x10]
	0x036F0160 ADRP X19, 0xCF0000
	0x036F0164 ADRP X20, 0xA50000
	0x036F0168 LDRB W8, [X19 + 0xB76]
	0x036F016C LDR X20, [X20 + 0x948]
	0x036F0170 TBNZ X8, 0x0, 0x36F0188
	0x036F0174 ADRP X0, 0xA50000
	0x036F0178 LDR X0, [X0 + 0x948]
	0x036F017C BL 0x1C16CF4
	0x036F0180 MOVZ W8, 0x1
	0x036F0184 STRB W8, [X19 + 0xB76]
	0x036F0188 LDR X0, [X20]
	0x036F018C LDP X20, X19, [X31 + 0x10]
	0x036F0190 LDR X30, [X31], #0x20
	0x036F0194 B 0x36ECF70
	0x036F0198 STR X30, [X31 - 0x40]!
	0x036F019C STP X24, X23, [X31 + 0x10]
	0x036F01A0 STP X22, X21, [X31 + 0x20]
	0x036F01A4 STP X20, X19, [X31 + 0x30]
	0x036F01A8 ADRP X20, 0xCF0000
	0x036F01AC ADRP X22, 0xA03000
	0x036F01B0 LDRB W8, [X20 + 0xB77]
	0x036F01B4 LDR X22, [X22 + 0x598]
	0x036F01B8 MOV X19, X0
	0x036F01BC TBNZ X8, 0x0, 0x36F01E0
	0x036F01C0 ADRP X0, 0xA03000
	0x036F01C4 LDR X0, [X0 + 0x598]
	0x036F01C8 BL 0x1C16CF4
	0x036F01CC ADRP X0, 0xA2D000
	0x036F01D0 LDR X0, [X0 + 0x960]
	0x036F01D4 BL 0x1C16CF4
	0x036F01D8 MOVZ W8, 0x1
	0x036F01DC STRB W8, [X20 + 0xB77]
	0x036F01E0 LDR X0, [X22]
	0x036F01E4 LDR X20, [X19]
	0x036F01E8 LDR W8, [X0 + 0xE0]
	0x036F01EC CBNZ W8, 0x36F01F4
	0x036F01F0 BL 0x1C16DFC
	0x036F01F4 MOV X0, X20
	0x036F01F8 MOV X1, X31
	0x036F01FC MOV X2, X31
	0x036F0200 BL 0x3C3883C
	0x036F0204 TBZ X0, 0x0, 0x36F0210
	0x036F0208 MOV W0, W31
	0x036F020C B 0x36F0294
	0x036F0210 ADRP X23, 0xA2D000
	0x036F0214 LDR X23, [X23 + 0x960]
	0x036F0218 MOV W8, W31
	0x036F021C ADD X19, X19, 0x10
	0x036F0220 LDR X0, [X23]
	0x036F0224 MOV W20, W8
	0x036F0228 LDR W9, [X0 + 0xE0]
	0x036F022C CBNZ W9, 0x36F0234
	0x036F0230 BL 0x1C16DFC
	0x036F0234 LDR W24, [X19]
	0x036F0238 CMP W20, W24
	0x036F023C B.GE 0x36F028C
	0x036F0240 LDR X0, [X23]
	0x036F0244 LDR W8, [X0 + 0xE0]
	0x036F0248 CBNZ W8, 0x36F0250
	0x036F024C BL 0x1C16DFC
	0x036F0250 MOV X0, X19
	0x036F0254 MOV W1, W20
	0x036F0258 BL 0x36ECB58
	0x036F025C LDR X8, [X22]
	0x036F0260 MOV X21, X0
	0x036F0264 LDR W9, [X8 + 0xE0]
	0x036F0268 CBNZ W9, 0x36F0274
	0x036F026C MOV X0, X8
	0x036F0270 BL 0x1C16DFC
	0x036F0274 MOV X0, X21
	0x036F0278 MOV X1, X31
	0x036F027C MOV X2, X31
	0x036F0280 BL 0x3C3883C
	0x036F0284 ADD W8, W20, 0x1
	0x036F0288 TBZ X0, 0x0, 0x36F0220
	0x036F028C CMP W20, W24
	0x036F0290 CSET W0, GE
	0x036F0294 LDP X20, X19, [X31 + 0x30]
	0x036F0298 LDP X22, X21, [X31 + 0x20]
	0x036F029C LDP X24, X23, [X31 + 0x10]
	0x036F02A0 LDR X30, [X31], #0x40
	0x036F02A4 RET
	0x036F02A8 STP X30, X21, [X31 - 0x20]!
	0x036F02AC STP X20, X19, [X31 + 0x10]
	0x036F02B0 ADRP X21, 0xCF0000
	0x036F02B4 ADRP X20, 0xA2D000
	0x036F02B8 LDRB W8, [X21 + 0xB78]
	0x036F02BC LDR X20, [X20 + 0x960]
	0x036F02C0 MOV X19, X0
	0x036F02C4 TBNZ X8, 0x0, 0x36F02DC
	0x036F02C8 ADRP X0, 0xA2D000
	0x036F02CC LDR X0, [X0 + 0x960]
	0x036F02D0 BL 0x1C16CF4
	0x036F02D4 MOVZ W8, 0x1
	0x036F02D8 STRB W8, [X21 + 0xB78]
	0x036F02DC MOVZ W8, 0x2
	0x036F02E0 STR X31, [X19]
	0x036F02E4 STR W8, [X19 + 0x8]
	0x036F02E8 LDR X0, [X20]
	0x036F02EC LDR W8, [X0 + 0xE0]
	0x036F02F0 CBNZ W8, 0x36F02F8
	0x036F02F4 BL 0x1C16DFC
	0x036F02F8 STR W31, [X19 + 0x10]
	0x036F02FC LDP X20, X19, [X31 + 0x10]
	0x036F0300 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0xCF1000
	007 Move W8, [X20+2914]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0xA0B000
	014 Move X0, [X0+2368]
	015 Call 0x1C17CF4
	016 Move X0, 0xA0B000
	017 Move X0, [X0+2376]
	018 Call 0x1C17CF4
	019 Move X0, 0xA0B000
	020 Move X0, [X0+2384]
	021 Call 0x1C17CF4
	022 Move X0, 0xA0B000
	023 Move X0, [X0+2408]
	024 Call 0x1C17CF4
	025 Move X0, 0xA0B000
	026 Move X0, [X0+2232]
	027 Call 0x1C17CF4
	028 Move X0, 0xA04000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+2914], W8
	033 Move [X31+8], X31
	034 Move [X31+16], X31
	035 Move [X31+24], X31
	036 Move X0, [X19+8]
	037 Compare X0, 0
	038 JumpIfEqual {87}
	039 Move W8, [X0+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, 0xA0B000
	042 Move X8, [X8+2408]
	043 Move X1, [X8]
	044 Add X8, X31, 8
	045 Call List`1<Object>.GetEnumerator, X0
	046 Move X20, 0xA0B000
	047 Move X21, 0xA04000
	048 Move X20, [X20+2376]
	049 Move X21, [X21+1432]
	050 Move X1, [X20]
	051 Add X0, X31, 8
	052 Call Enumerator<Object>.MoveNext, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {73}
	057 Move X0, [X21]
	058 Move X19, [X31+24]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X19
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {50}
	071 Move W19, 5
	072 Move W0, W31
	073 Move W19, 6
	074 Move X8, 0xA0B000
	075 Move X8, [X8+2368]
	076 Add X0, X31, 8
	077 Move X1, [X8]
	078 Call Enumerator<Object>.Dispose, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSET not yet implemented."
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X30, [X31+32]
	084 Move X21, [X31+40]
	085 Add X31, X31, 64
	086 Return X0
	087 Call 0x1C17F20
	088 Move X19, X0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, X19
	091 Call 0x3EB2AD0
	092 Move X20, [X0]
	093 Call 0x3EB2AE0
	094 Move X8, 0xA0B000
	095 Move X8, [X8+2368]
	096 Add X0, X31, 8
	097 Move X1, [X8]
	098 Call Enumerator<Object>.Dispose, X0
	099 Compare X20, 0
	100 JumpIfNotEqual {103}
	101 Move W19, W31
	102 Move X20, X31
	103 Move X0, X20
	104 Call 0x1C17F18
	105 Move X19, X0
	106 Move X8, 0xA0B000
	107 Move X8, [X8+2368]
	108 Move X1, [X8]
	109 Add X0, X31, 8
	110 Call Enumerator<Object>.Dispose, X0
	111 Compare X20, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X19
	114 Call 0x1D2D690
	115 Move X0, X20
	116 Call 0x1C17F18
	117 Call 0x1991590

Method: System.Void UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues()

Disassembly:
	0x036F0304 RET
	0x036F0308 SUB X31, X31, 0xC0
	0x036F030C STR X30, [X31 + 0x90]
	0x036F0310 STP X22, X21, [X31 + 0xA0]
	0x036F0314 STP X20, X19, [X31 + 0xB0]
	0x036F0318 ADRP X21, 0xCF0000
	0x036F031C ADRP X22, 0xA50000
	0x036F0320 ADRP X20, 0xA2D000
	0x036F0324 LDRB W8, [X21 + 0xB79]
	0x036F0328 LDR X22, [X22 + 0x950]
	0x036F032C LDR X20, [X20 + 0x960]
	0x036F0330 MOV X19, X0
	0x036F0334 TBNZ X8, 0x0, 0x36F0358
	0x036F0338 ADRP X0, 0xA50000
	0x036F033C LDR X0, [X0 + 0x950]
	0x036F0340 BL 0x1C16CF4
	0x036F0344 ADRP X0, 0xA2D000
	0x036F0348 LDR X0, [X0 + 0x960]
	0x036F034C BL 0x1C16CF4
	0x036F0350 MOVZ W8, 0x1
	0x036F0354 STRB W8, [X21 + 0xB79]
	0x036F0358 LDR X1, [X22]
	0x036F035C MOV X0, X19
	0x036F0360 BL 0x25CD278
	0x036F0364 ADD X19, X19, 0x38
	0x036F0368 ADD X0, X31, 0x8
	0x036F036C MOVZ W2, 0x88
	0x036F0370 MOV X1, X19
	0x036F0374 BL 0x3EB1AC0
	0x036F0378 LDR X0, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xCF1000
	007 Move X21, 0xA0B000
	008 Move X20, 0xA0B000
	009 Move W8, [X22+2915]
	010 Move X21, [X21+2352]
	011 Move X20, [X20+2360]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA0B000
	018 Move X0, [X0+2360]
	019 Call 0x1C17CF4
	020 Move X0, 0xA0B000
	021 Move X0, [X0+2352]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2915], W8
	025 Move [X19], W31
	026 Move X0, [X21]
	027 Call 0x1C17F10
	028 Move X1, [X20]
	029 Move X20, X0
	030 Call List`1<Object>..ctor, X0
	031 Move [X19+8], X20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return 

Method: System.Void UpdateDriver()

Disassembly:
	0x036F037C LDR W8, [X0 + 0xE0]
	0x036F0380 CBNZ W8, 0x36F0388
	0x036F0384 BL 0x1C16DFC
	0x036F0388 ADD X0, X31, 0x8
	0x036F038C FMOV S0, -1
	0x036F0390 FMOV S1, 1
	0x036F0394 BL 0x36EE280
	0x036F0398 ADD X1, X31, 0x8
	0x036F039C MOVZ W2, 0x88
	0x036F03A0 MOV X0, X19
	0x036F03A4 BL 0x3EB1AC0
	0x036F03A8 LDP X20, X19, [X31 + 0xB0]
	0x036F03AC LDP X22, X21, [X31 + 0xA0]
	0x036F03B0 LDR X30, [X31 + 0x90]
	0x036F03B4 ADD X31, X31, 0xC0
	0x036F03B8 RET
	0x036F03BC STP X30, X21, [X31 - 0x20]!
	0x036F03C0 STP X20, X19, [X31 + 0x10]
	0x036F03C4 ADRP X21, 0xCF0000
	0x036F03C8 ADRP X20, 0xA50000
	0x036F03CC LDRB W8, [X21 + 0xB7A]
	0x036F03D0 LDR X20, [X20 + 0x958]
	0x036F03D4 MOV X19, X0
	0x036F03D8 TBNZ X8, 0x0, 0x36F03FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCF1000
	005 Move W8, [X20+2916]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xA0B000
	012 Move X0, [X0+2232]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2916], W8
	016 Move X9, [X19+8]
	017 Move W8, [X19]
	018 Compare X9, 0
	019 JumpIfEqual {22}
	020 Move W9, [X9+24]
	021 Subtract W9, W9, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSEL not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Move [X19], W8
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return 

