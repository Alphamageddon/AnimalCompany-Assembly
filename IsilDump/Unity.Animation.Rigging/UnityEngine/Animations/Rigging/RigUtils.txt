Type: UnityEngine.Animations.Rigging.RigUtils

Method: UnityEngine.Animations.Rigging.IRigConstraint[] GetConstraints(UnityEngine.Animations.Rigging.Rig rig)

Disassembly:
	0x036F4FD8 BL 0x1C16CF4
	0x036F4FDC ADRP X0, 0x9FF000
	0x036F4FE0 LDR X0, [X0 + 0xE00]
	0x036F4FE4 BL 0x1C16CF4
	0x036F4FE8 ADRP X0, 0xA4C000
	0x036F4FEC LDR X0, [X0 + 0xAE0]
	0x036F4FF0 BL 0x1C16CF4
	0x036F4FF4 ADRP X0, 0xA4C000
	0x036F4FF8 LDR X0, [X0 + 0x878]
	0x036F4FFC BL 0x1C16CF4
	0x036F5000 ADRP X0, 0x9FE000
	0x036F5004 LDR X0, [X0 + 0xE18]
	0x036F5008 BL 0x1C16CF4
	0x036F500C ADRP X0, 0xA05000
	0x036F5010 LDR X0, [X0 + 0x958]
	0x036F5014 BL 0x1C16CF4
	0x036F5018 ADRP X0, 0xA4B000
	0x036F501C LDR X0, [X0 + 0xAD0]
	0x036F5020 BL 0x1C16CF4
	0x036F5024 ADRP X0, 0x9FE000
	0x036F5028 LDR X0, [X0 + 0x598]
	0x036F502C BL 0x1C16CF4
	0x036F5030 ADRP X0, 0xA4B000
	0x036F5034 LDR X0, [X0 + 0xA00]
	0x036F5038 BL 0x1C16CF4
	0x036F503C ADRP X0, 0xA26000
	0x036F5040 LDR X0, [X0 + 0xA80]
	0x036F5044 BL 0x1C16CF4
	0x036F5048 ADRP X0, 0x9FE000
	0x036F504C LDR X0, [X0 + 0x6C0]
	0x036F5050 BL 0x1C16CF4
	0x036F5054 ADRP X0, 0xA4B000
	0x036F5058 LDR X0, [X0 + 0xAE8]
	0x036F505C BL 0x1C16CF4
	0x036F5060 ADRP X0, 0xA4B000
	0x036F5064 LDR X0, [X0 + 0xAF0]
	0x036F5068 BL 0x1C16CF4
	0x036F506C ADRP X0, 0xA4B000
	0x036F5070 LDR X0, [X0 + 0xAF8]
	0x036F5074 BL 0x1C16CF4
	0x036F5078 ADRP X0, 0xA4B000
	0x036F507C LDR X0, [X0 + 0x7B8]
	0x036F5080 BL 0x1C16CF4
	0x036F5084 ADRP X0, 0xA4B000
	0x036F5088 LDR X0, [X0 + 0x7C0]
	0x036F508C BL 0x1C16CF4
	0x036F5090 MOVZ W8, 0x1
	0x036F5094 STRB W8, [X24 + 0xBA3]
	0x036F5098 CBZ X21, 0x36F5758
	0x036F509C LDR X8, [X21]
	0x036F50A0 ADRP X24, 0xA4B000
	0x036F50A4 ADRP X25, 0x9FE000
	0x036F50A8 MOV X0, X21
	0x036F50AC LDR X9, [X8 + 0x258]
	0x036F50B0 LDR X1, [X8 + 0x260]
	0x036F50B4 LDR X24, [X24 + 0xAF0]
	0x036F50B8 LDR X25, [X25 + 0x6C0]
	0x036F50BC BLR X9
	0x036F50C0 LDR X8, [X25]
	0x036F50C4 LDR X25, [X24]
	0x036F50C8 MOV X24, X0
	0x036F50CC LDR W9, [X8 + 0xE0]
	0x036F50D0 CBNZ W9, 0x36F50DC
	0x036F50D4 MOV X0, X8
	0x036F50D8 BL 0x1C16DFC
	0x036F50DC MOV X0, X25
	0x036F50E0 MOV X1, X31
	0x036F50E4 BL 0x338C698
	0x036F50E8 MOV X1, X0
	0x036F50EC MOV X0, X24
	0x036F50F0 MOV X2, X31
	0x036F50F4 BL 0x3395194
	0x036F50F8 TBZ X0, 0x0, 0x36F51E0
	0x036F50FC LDR X8, [X21]
	0x036F5100 MOV X0, X21
	0x036F5104 MOV X1, X20
	0x036F5108 LDR X9, [X8 + 0x2C8]
	0x036F510C LDR X2, [X8 + 0x2D0]
	0x036F5110 BLR X9
	0x036F5114 CBZ X0, 0x36F5758
	0x036F5118 ADRP X8, 0xA4B000
	0x036F511C LDR X8, [X8 + 0xAF8]
	0x036F5120 LDR X9, [X0]
	0x036F5124 LDR X1, [X8]
	0x036F5128 LDR X8, [X9 + 0x40]
	0x036F512C LDR X9, [X1 + 0x40]
	0x036F5130 CMP X8, X9
	0x036F5134 B.NE 0x36F576C
	0x036F5138 BL 0x1C16E08
	0x036F513C ADRP X9, 0x9FE000
	0x036F5140 LDR X9, [X9 + 0x598]
	0x036F5144 MOV X8, X0
	0x036F5148 LDR X20, [X8]
	0x036F514C LDR X0, [X9]
	0x036F5150 LDR W9, [X0 + 0xE0]
	0x036F5154 CBNZ W9, 0x36F515C
	0x036F5158 BL 0x1C16DFC
	0x036F515C MOV X0, X20
	0x036F5160 MOV X1, X31
	0x036F5164 MOV X2, X31
	0x036F5168 BL 0x3C354F8
	0x036F516C TBZ X0, 0x0, 0x36F55F4
	0x036F5170 CBZ X23, 0x36F5758
	0x036F5174 MOV X0, X23
	0x036F5178 MOV X1, X31
	0x036F517C BL 0x3C32E90
	0x036F5180 CBZ X20, 0x36F5758
	0x036F5184 MOV X1, X0
	0x036F5188 MOV X0, X20
	0x036F518C MOV X2, X31
	0x036F5190 BL 0x3C40F48
	0x036F5194 TBZ X0, 0x0, 0x36F55F4
	0x036F5198 CBZ X22, 0x36F5758
	0x036F519C ADRP X9, 0xA05000
	0x036F51A0 LDR X9, [X9 + 0x958]
	0x036F51A4 LDR W10, [X22 + 0x1C]
	0x036F51A8 LDR X8, [X22 + 0x10]
	0x036F51AC LDR X9, [X9]
	0x036F51B0 ADD W10, W10, 0x1
	0x036F51B4 STR W10, [X22 + 0x1C]
	0x036F51B8 CBZ X8, 0x36F5758
	0x036F51BC LDRSW X10, [X22 + 0x18]
	0x036F51C0 LDR W11, [X8 + 0x18]
	0x036F51C4 CMP W10, W11
	0x036F51C8 B.CS 0x36F55DC
	0x036F51CC ADD W9, W10, 0x1
	0x036F51D0 ADD X8, X8, X10, 0x3, LSL
	0x036F51D4 STR W9, [X22 + 0x18]
	0x036F51D8 STR X20, [X8 + 0x20]
	0x036F51DC B 0x36F55F4
	0x036F51E0 ADRP X8, 0x9FE000
	0x036F51E4 LDR X8, [X8 + 0x6C0]
	0x036F51E8 LDR X0, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xCED000
	009 Move W8, [X20+2975]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0xA4D000
	016 Move X0, [X0+2680]
	017 Call 0x1C17CF4
	018 Move X0, 0xA28000
	019 Move X0, [X0+3632]
	020 Call 0x1C17CF4
	021 Move X0, 0xA4C000
	022 Move X0, [X0+2688]
	023 Call 0x1C17CF4
	024 Move X0, 0xA4C000
	025 Move X0, [X0+2696]
	026 Call 0x1C17CF4
	027 Move X0, 0xA4C000
	028 Move X0, [X0+2704]
	029 Call 0x1C17CF4
	030 Move X0, 0xA4C000
	031 Move X0, [X0+2712]
	032 Call 0x1C17CF4
	033 Move X0, 0xA4C000
	034 Move X0, [X0+2720]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+2975], W8
	038 Compare X19, 0
	039 JumpIfEqual {150}
	040 Move X8, 0xA4C000
	041 Move X8, [X8+2680]
	042 Move X0, X19
	043 Move X1, [X8]
	044 Call 0x21A553C, X0
	045 Compare X0, 0
	046 JumpIfEqual {150}
	047 Move X8, [X0+24]
	048 Move X19, X0
	049 Compare X8, 0
	050 JumpIfEqual {141}
	051 Move X8, 0xA4C000
	052 Move X8, [X8+2720]
	053 Move X20, 0xA4C000
	054 Move X0, [X8]
	055 Move X20, [X20+2704]
	056 Call 0x1C17F10
	057 Move W1, [X19+24]
	058 Move X2, [X20]
	059 Move X20, X0
	060 Call List`1<Object>..ctor, X0, X1
	061 Move W8, [X19+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X23, 0xA28000
	064 Move X24, 0xA4C000
	065 Move X23, [X23+3632]
	066 Move X24, [X24+2688]
	067 Move W22, W31
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X8, X19, W22
	070 Move X21, [X8+32]
	071 Compare X21, 0
	072 JumpIfEqual {150}
	073 Move X8, [X21]
	074 Move X1, [X23]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X21
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {120}
	098 Compare X20, 0
	099 JumpIfEqual {150}
	100 Move W10, [X20+28]
	101 Move X8, [X20+16]
	102 Move X9, [X24]
	103 Add W10, W10, 1
	104 Move [X20+28], W10
	105 Compare X8, 0
	106 JumpIfEqual {150}
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Move W11, [X8+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add W9, W10, 1
	111 Add X8, X8, X10
	112 Move [X20+24], W9
	113 Move [X8+32], X21
	114 Move X8, [X9+32]
	115 Move X0, X20
	116 Move X1, X21
	117 Move X8, [X8+192]
	118 Move X2, [X8+112]
	119 Call List`1<Object>.AddWithResize, X0, X1
	120 Move W8, [X19+24]
	121 Add W22, W22, 1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Compare X20, 0
	124 JumpIfEqual {150}
	125 Move W8, [X20+24]
	126 Compare W8, 0
	127 JumpIfEqual {141}
	128 Move X8, 0xA4C000
	129 Move X8, [X8+2696]
	130 Move X0, X20
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X22, [X31+32]
	134 Move X21, [X31+40]
	135 Move X1, [X8]
	136 Move X24, [X31+16]
	137 Move X23, [X31+24]
	138 Move X30, [X31+64]
	139 Call List`1<Object>.ToArray, X0
	140 Return X0
	141 Move X20, [X31+48]
	142 Move X19, [X31+56]
	143 Move X22, [X31+32]
	144 Move X21, [X31+40]
	145 Move X24, [X31+16]
	146 Move X23, [X31+24]
	147 Move X0, X31
	148 Move X30, [X31+64]
	149 Return X0
	150 Call 0x1C17F20
	151 Call 0x1C17F28

Method: UnityEngine.Transform[] GetSyncableRigTransforms(UnityEngine.Animator animator)

Disassembly:
	0x036F5690 BL 0x2AAE90C
	0x036F5694 CBZ X19, 0x36F5758
	0x036F5698 ADRP X9, 0xA4B000
	0x036F569C LDR X9, [X9 + 0xAD0]
	0x036F56A0 LDR W10, [X19 + 0x1C]
	0x036F56A4 LDR X8, [X19 + 0x10]
	0x036F56A8 LDR X9, [X9]
	0x036F56AC ADD W10, W10, 0x1
	0x036F56B0 STR W10, [X19 + 0x1C]
	0x036F56B4 CBZ X8, 0x36F5758
	0x036F56B8 LDRSW X10, [X19 + 0x18]
	0x036F56BC LDR W11, [X8 + 0x18]
	0x036F56C0 MOV X2, X0
	0x036F56C4 CMP W10, W11
	0x036F56C8 B.CS 0x36F56E0
	0x036F56CC ADD W9, W10, 0x1
	0x036F56D0 ADD X8, X8, X10, 0x4, LSL
	0x036F56D4 STR W9, [X19 + 0x18]
	0x036F56D8 STP X20, X2, [X8 + 0x20]
	0x036F56DC B 0x36F5724
	0x036F56E0 LDR X8, [X9 + 0x20]
	0x036F56E4 MOV X0, X19
	0x036F56E8 MOV X1, X20
	0x036F56EC LDR X8, [X8 + 0xC0]
	0x036F56F0 LDR X3, [X8 + 0x70]
	0x036F56F4 BL 0x302A37C
	0x036F56F8 B 0x36F5724
	0x036F56FC LDRSW X9, [X10]
	0x036F5700 ADD X8, X8, X9, 0x4, LSL
	0x036F5704 ADD X0, X8, 0x138
	0x036F5708 LDP X8, X1, [X0]
	0x036F570C MOV X0, X20
	0x036F5710 BLR X8
	0x036F5714 CBNZ X21, 0x36F578C
	0x036F5718 CBZ W19, 0x36F5724
	0x036F571C MOV W8, W31
	0x036F5720 B 0x36F5728
	0x036F5724 MOVZ W8, 0x1
	0x036F5728 LDP X20, X19, [X31 + 0x60]
	0x036F572C LDP X22, X21, [X31 + 0x50]
	0x036F5730 LDP X24, X23, [X31 + 0x40]
	0x036F5734 LDP X26, X25, [X31 + 0x30]
	0x036F5738 LDP X28, X27, [X31 + 0x20]
	0x036F573C LDP X29, X30, [X31 + 0x10]
	0x036F5740 MOV W0, W8
	0x036F5744 ADD X31, X31, 0x70
	0x036F5748 RET
	0x036F574C BL 0x1C16F20
	0x036F5750 BL 0x1C16F20
	0x036F5754 BL 0x1C16F20
	0x036F5758 BL 0x1C16F20
	0x036F575C BL 0x1C16F20
	0x036F5760 BL 0x1C16F20
	0x036F5764 BL 0x1C16F20
	0x036F5768 BL 0x1C16F20
	0x036F576C BL 0x1C171E0
	0x036F5770 MOV X0, X25
	0x036F5774 MOV X1, X20
	0x036F5778 BL 0x1C171E0
	0x036F577C MOV X0, X25
	0x036F5780 MOV X1, X24
	0x036F5784 BL 0x1C171E0
	0x036F5788 BL 0x1C16F20
	0x036F578C MOV X0, X21
	0x036F5790 BL 0x1C16F18
	0x036F5794 B 0x36F57E4
	0x036F5798 B 0x36F57E4
	0x036F579C B 0x36F57E4
	0x036F57A0 B 0x36F57E4
	0x036F57A4 B 0x36F57E4
	0x036F57A8 B 0x36F57E4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xCEC000
	007 Move W8, [X20+2976]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xA4C000
	014 Move X0, [X0+2728]
	015 Call 0x1C17CF4
	016 Move X0, 0xA06000
	017 Move X0, [X0+1800]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2976], W8
	021 Compare X19, 0
	022 JumpIfEqual {77}
	023 Move X8, 0xA4C000
	024 Move X8, [X8+2728]
	025 Move X0, X19
	026 Move X1, [X8]
	027 Call 0x21A553C, X0
	028 Compare X0, 0
	029 JumpIfEqual {77}
	030 Move X1, [X0+24]
	031 Move X19, X0
	032 Compare X1, 0
	033 JumpIfEqual {68}
	034 Move X8, 0xA06000
	035 Move X8, [X8+1800]
	036 Move X0, [X8]
	037 Call 0x1C17D6C
	038 Compare X0, 0
	039 JumpIfEqual {77}
	040 Move W8, [X0+24]
	041 Move X20, X0
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W8, W31
	044 Move W9, [X19+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X22, W8
	047 Add X8, X19, X22
	048 Move X0, [X8+32]
	049 Compare X0, 0
	050 JumpIfEqual {77}
	051 Move X1, X31
	052 Call Component.get_transform, X0
	053 Move X21, X0
	054 Compare X0, 0
	055 JumpIfEqual {62}
	056 Move X8, [X20]
	057 Move X0, X21
	058 Move X1, [X8+64]
	059 Call 0x1C17E00
	060 Compare X0, 0
	061 JumpIfEqual {78}
	062 Move X9, [X20+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add W8, W22, 1
	065 Add X10, X20, X22
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X10+32], X21
	068 Move X20, X31
	069 Move X0, X20
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return X0
	076 Call 0x1C17F28
	077 Call 0x1C17F20
	078 Call 0x1C17F44
	079 Move X1, X31
	080 Call 0x1C17DEC

Method: System.Boolean ExtractTransformType(UnityEngine.Animator animator, System.Reflection.FieldInfo field, System.Object data, System.Collections.Generic.List`1<UnityEngine.Transform> syncableTransforms)

Disassembly:
	0x036F57AC B 0x36F57E4
	0x036F57B0 B 0x36F57E4
	0x036F57B4 B 0x36F57E4
	0x036F57B8 B 0x36F57E4
	0x036F57BC B 0x36F57E4
	0x036F57C0 B 0x36F57E4
	0x036F57C4 B 0x36F57E4
	0x036F57C8 B 0x36F57E4
	0x036F57CC B 0x36F57E4
	0x036F57D0 B 0x36F57E4
	0x036F57D4 B 0x36F57E4
	0x036F57D8 B 0x36F57E4
	0x036F57DC B 0x36F57E4
	0x036F57E0 B 0x36F57E4
	0x036F57E4 MOV X19, X0
	0x036F57E8 CMP W1, 0x1
	0x036F57EC B.NE 0x36F580C
	0x036F57F0 MOV X0, X19
	0x036F57F4 BL 0x3EB1AD0
	0x036F57F8 LDR X21, [X0]
	0x036F57FC BL 0x3EB1AE0
	0x036F5800 MOVZ W19, 0x1
	0x036F5804 CBNZ X20, 0x36F5594
	0x036F5808 B 0x36F5714
	0x036F580C MOV X21, X31
	0x036F5810 B 0x36F5818
	0x036F5814 MOV X19, X0
	0x036F5818 CBZ X20, 0x36F587C
	0x036F581C ADRP X10, 0x9FE000
	0x036F5820 LDR X8, [X20]
	0x036F5824 LDR X10, [X10 + 0xE00]
	0x036F5828 LDRH W9, [X8 + 0x12E]
	0x036F582C LDR X1, [X10]
	0x036F5830 CBZ X9, 0x36F5854
	0x036F5834 LDR X10, [X8 + 0xB0]
	0x036F5838 ADD X10, X10, 0x8
	0x036F583C LDUR X11, [X10 - 0x8]
	0x036F5840 CMP X11, X1
	0x036F5844 B.EQ 0x36F5864
	0x036F5848 SUBS X9, X9, 0x1
	0x036F584C ADD X10, X10, 0x10
	0x036F5850 B.NE 0x36F583C
	0x036F5854 MOV X0, X20
	0x036F5858 MOV W2, W31
	0x036F585C BL 0x1C5C788
	0x036F5860 B 0x36F5870
	0x036F5864 LDRSW X9, [X10]
	0x036F5868 ADD X8, X8, X9, 0x4, LSL
	0x036F586C ADD X0, X8, 0x138
	0x036F5870 LDP X8, X1, [X0]
	0x036F5874 MOV X0, X20
	0x036F5878 BLR X8
	0x036F587C CBNZ X21, 0x36F5888
	0x036F5880 MOV X0, X19
	0x036F5884 BL 0x1D2C690
	0x036F5888 MOV X0, X21
	0x036F588C BL 0x1C16F18
	0x036F5890 BL 0x1990590
	0x036F5894 STP X29, X30, [X31 - 0x60]!
	0x036F5898 STP X28, X27, [X31 + 0x10]
	0x036F589C STP X26, X25, [X31 + 0x20]
	0x036F58A0 STP X24, X23, [X31 + 0x30]
	0x036F58A4 STP X22, X21, [X31 + 0x40]
	0x036F58A8 STP X20, X19, [X31 + 0x50]
	0x036F58AC ADRP X25, 0xCEB000
	0x036F58B0 LDRB W8, [X25 + 0xBA4]
	0x036F58B4 MOV X19, X5
	0x036F58B8 MOV X21, X4
	0x036F58BC MOV X22, X3
	0x036F58C0 MOV X24, X2
	0x036F58C4 MOV X20, X1
	0x036F58C8 MOV X23, X0
	0x036F58CC TBNZ X8, 0x0, 0x36F5950
	0x036F58D0 ADRP X0, 0xA27000
	0x036F58D4 LDR X0, [X0 + 0xD60]
	0x036F58D8 BL 0x1C16CF4
	0x036F58DC ADRP X0, 0xA27000
	0x036F58E0 LDR X0, [X0 + 0xD68]
	0x036F58E4 BL 0x1C16CF4
	0x036F58E8 ADRP X0, 0x9FE000
	0x036F58EC LDR X0, [X0 + 0xE00]
	0x036F58F0 BL 0x1C16CF4
	0x036F58F4 ADRP X0, 0xA29000
	0x036F58F8 LDR X0, [X0 + 0xBD8]
	0x036F58FC BL 0x1C16CF4
	0x036F5900 ADRP X0, 0xA29000
	0x036F5904 LDR X0, [X0 + 0xBE0]
	0x036F5908 BL 0x1C16CF4
	0x036F590C ADRP X0, 0x9FE000
	0x036F5910 LDR X0, [X0 + 0xE18]
	0x036F5914 BL 0x1C16CF4
	0x036F5918 ADRP X0, 0xA4B000
	0x036F591C LDR X0, [X0 + 0xA00]
	0x036F5920 BL 0x1C16CF4
	0x036F5924 ADRP X0, 0xA4B000
	0x036F5928 LDR X0, [X0 + 0xB00]
	0x036F592C BL 0x1C16CF4
	0x036F5930 ADRP X0, 0xA4B000
	0x036F5934 LDR X0, [X0 + 0xB08]
	0x036F5938 BL 0x1C16CF4
	0x036F593C ADRP X0, 0xA07000
	0x036F5940 LDR X0, [X0 + 0x790]
	0x036F5944 BL 0x1C16CF4
	0x036F5948 MOVZ W8, 0x1
	0x036F594C STRB W8, [X25 + 0xBA4]
	0x036F5950 CBZ X20, 0x36F5D14
	0x036F5954 LDR X8, [X20]
	0x036F5958 ADRP X25, 0xA07000
	0x036F595C MOV X0, X20
	0x036F5960 LDR X9, [X8 + 0x258]
	0x036F5964 LDR X1, [X8 + 0x260]
	0x036F5968 LDR X25, [X25 + 0x790]
	0x036F596C BLR X9
	0x036F5970 LDR X8, [X20]
	0x036F5974 MOV X26, X0
	0x036F5978 MOV X0, X20
	0x036F597C MOV X1, X24
	0x036F5980 LDR X9, [X8 + 0x2C8]
	0x036F5984 LDR X2, [X8 + 0x2D0]
	0x036F5988 BLR X9
	0x036F598C LDR X8, [X20]
	0x036F5990 MOV X24, X0
	0x036F5994 MOV X0, X20
	0x036F5998 LDP X9, X1, [X8 + 0x1A8]
	0x036F599C BLR X9
	0x036F59A0 LDR X2, [X25]
	0x036F59A4 MOV X1, X0
	0x036F59A8 MOV X0, X19
	0x036F59AC MOV X3, X31
	0x036F59B0 BL 0x32274B8
	0x036F59B4 CBZ X26, 0x36F5D14
	0x036F59B8 MOV X25, X0
	0x036F59BC MOV X0, X26
	0x036F59C0 MOV X1, X31
	0x036F59C4 BL 0x33970C4
	0x036F59C8 TBZ X0, 0x0, 0x36F59DC
	0x036F59CC MOV X0, X26
	0x036F59D0 MOV X1, X31
	0x036F59D4 BL 0x3397374
	0x036F59D8 TBZ X0, 0x0, 0x36F59E4
	0x036F59DC MOV W0, W31
	0x036F59E0 B 0x36F5CF8
	0x036F59E4 LDR X8, [X26]
	0x036F59E8 MOVZ W1, 0x34
	0x036F59EC MOV X0, X26
	0x036F59F0 LDR X9, [X8 + 0x688]
	0x036F59F4 LDR X2, [X8 + 0x690]
	0x036F59F8 BLR X9
	0x036F59FC ADRP X28, 0xA4B000
	0x036F5A00 LDR X28, [X28 + 0xB08]
	0x036F5A04 MOV X19, X0
	0x036F5A08 LDR X8, [X28]
	0x036F5A0C LDR W9, [X8 + 0xE0]
	0x036F5A10 CBNZ W9, 0x36F5A20
	0x036F5A14 MOV X0, X8
	0x036F5A18 BL 0x1C16DFC
	0x036F5A1C LDR X8, [X28]
	0x036F5A20 LDR X9, [X8 + 0xB8]
	0x036F5A24 LDR X26, [X9 + 0x8]
	0x036F5A28 CBNZ X26, 0x36F5A80
	0x036F5A2C LDR W9, [X8 + 0xE0]
	0x036F5A30 CBNZ W9, 0x36F5A40
	0x036F5A34 MOV X0, X8
	0x036F5A38 BL 0x1C16DFC
	0x036F5A3C LDR X8, [X28]
	0x036F5A40 ADRP X9, 0xA27000
	0x036F5A44 LDR X8, [X8 + 0xB8]
	0x036F5A48 LDR X9, [X9 + 0xD68]
	0x036F5A4C LDR X27, [X8]
	0x036F5A50 LDR X0, [X9]
	0x036F5A54 BL 0x1C16F10
	0x036F5A58 ADRP X8, 0xA4B000
	0x036F5A5C LDR X8, [X8 + 0xB00]
	0x036F5A60 MOV X1, X27
	0x036F5A64 MOV X3, X31
	0x036F5A68 MOV X26, X0
	0x036F5A6C LDR X2, [X8]
	0x036F5A70 BL 0x2D2F428
	0x036F5A74 LDR X8, [X28]
	0x036F5A78 LDR X8, [X8 + 0xB8]
	0x036F5A7C STR X26, [X8 + 0x8]
	0x036F5A80 ADRP X8, 0xA27000
	0x036F5A84 LDR X8, [X8 + 0xD60]
	0x036F5A88 MOV X0, X19
	0x036F5A8C MOV X1, X26
	0x036F5A90 LDR X2, [X8]
	0x036F5A94 BL 0x21DA490
	0x036F5A98 CBZ X0, 0x36F5D14
	0x036F5A9C ADRP X10, 0xA29000
	0x036F5AA0 LDR X8, [X0]
	0x036F5AA4 LDR X10, [X10 + 0xBD8]
	0x036F5AA8 MOV X19, X0
	0x036F5AAC LDRH W9, [X8 + 0x12E]
	0x036F5AB0 LDR X1, [X10]
	0x036F5AB4 CBZ X9, 0x36F5AD8
	0x036F5AB8 LDR X10, [X8 + 0xB0]
	0x036F5ABC ADD X10, X10, 0x8
	0x036F5AC0 LDUR X11, [X10 - 0x8]
	0x036F5AC4 CMP X11, X1
	0x036F5AC8 B.EQ 0x36F5AE8
	0x036F5ACC SUBS X9, X9, 0x1
	0x036F5AD0 ADD X10, X10, 0x10
	0x036F5AD4 B.NE 0x36F5AC0
	0x036F5AD8 MOV X0, X19
	0x036F5ADC MOV W2, W31
	0x036F5AE0 BL 0x1C5C788
	0x036F5AE4 B 0x36F5AF4
	0x036F5AE8 LDRSW X9, [X10]
	0x036F5AEC ADD X8, X8, X9, 0x4, LSL
	0x036F5AF0 ADD X0, X8, 0x138
	0x036F5AF4 LDP X8, X1, [X0]
	0x036F5AF8 MOV X0, X19
	0x036F5AFC BLR X8
	0x036F5B00 MOV X19, X0
	0x036F5B04 CBZ X0, 0x36F5D98
	0x036F5B08 ADRP X27, 0x9FE000
	0x036F5B0C ADRP X28, 0xA29000
	0x036F5B10 ADRP X29, 0xA4B000
	0x036F5B14 LDR X27, [X27 + 0xE18]
	0x036F5B18 LDR X28, [X28 + 0xBE0]
	0x036F5B1C LDR X29, [X29 + 0xA00]
	0x036F5B20 LDR X8, [X19]
	0x036F5B24 LDR X1, [X27]
	0x036F5B28 LDRH W9, [X8 + 0x12E]
	0x036F5B2C CBZ X9, 0x36F5B50
	0x036F5B30 LDR X10, [X8 + 0xB0]
	0x036F5B34 ADD X10, X10, 0x8
	0x036F5B38 LDUR X11, [X10 - 0x8]
	0x036F5B3C CMP X11, X1
	0x036F5B40 B.EQ 0x36F5B60
	0x036F5B44 SUBS X9, X9, 0x1
	0x036F5B48 ADD X10, X10, 0x10
	0x036F5B4C B.NE 0x36F5B38
	0x036F5B50 MOV X0, X19
	0x036F5B54 MOV W2, W31
	0x036F5B58 BL 0x1C5C788
	0x036F5B5C B 0x36F5B6C
	0x036F5B60 LDRSW X9, [X10]
	0x036F5B64 ADD X8, X8, X9, 0x4, LSL
	0x036F5B68 ADD X0, X8, 0x138
	0x036F5B6C LDP X8, X1, [X0]
	0x036F5B70 MOV X0, X19
	0x036F5B74 BLR X8
	0x036F5B78 TBZ X0, 0x0, 0x36F5C88
	0x036F5B7C LDR X8, [X19]
	0x036F5B80 LDR X1, [X28]
	0x036F5B84 LDRH W9, [X8 + 0x12E]
	0x036F5B88 CBZ X9, 0x36F5BAC
	0x036F5B8C LDR X10, [X8 + 0xB0]
	0x036F5B90 ADD X10, X10, 0x8
	0x036F5B94 LDUR X11, [X10 - 0x8]
	0x036F5B98 CMP X11, X1
	0x036F5B9C B.EQ 0x36F5BBC
	0x036F5BA0 SUBS X9, X9, 0x1
	0x036F5BA4 ADD X10, X10, 0x10
	0x036F5BA8 B.NE 0x36F5B94
	0x036F5BAC MOV X0, X19
	0x036F5BB0 MOV W2, W31
	0x036F5BB4 BL 0x1C5C788
	0x036F5BB8 B 0x36F5BC8
	0x036F5BBC LDRSW X9, [X10]
	0x036F5BC0 ADD X8, X8, X9, 0x4, LSL
	0x036F5BC4 ADD X0, X8, 0x138
	0x036F5BC8 LDP X8, X1, [X0]
	0x036F5BCC MOV X0, X19
	0x036F5BD0 BLR X8
	0x036F5BD4 MOV X26, X0
	0x036F5BD8 LDR X0, [X29]
	0x036F5BDC LDR W8, [X0 + 0xE0]
	0x036F5BE0 CBNZ W8, 0x36F5BE8
	0x036F5BE4 BL 0x1C16DFC
	0x036F5BE8 MOV X0, X23
	0x036F5BEC MOV X1, X26
	0x036F5BF0 MOV X2, X24
	0x036F5BF4 MOV X3, X22
	0x036F5BF8 BL 0x36F47AC
	0x036F5BFC TBNZ X0, 0x0, 0x36F5B20
	0x036F5C00 LDR X0, [X29]
	0x036F5C04 LDR W8, [X0 + 0xE0]
	0x036F5C08 CBNZ W8, 0x36F5C10
	0x036F5C0C BL 0x1C16DFC
	0x036F5C10 MOV X0, X26
	0x036F5C14 MOV X2, X21
	0x036F5C18 MOV X3, X25
	0x036F5C1C BL 0x36F4E30
	0x036F5C20 TBNZ X0, 0x0, 0x36F5B20
	0x036F5C24 LDR X0, [X29]
	0x036F5C28 LDR W8, [X0 + 0xE0]
	0x036F5C2C CBNZ W8, 0x36F5C34
	0x036F5C30 BL 0x1C16DFC
	0x036F5C34 MOV X0, X23
	0x036F5C38 MOV X1, X26
	0x036F5C3C MOV X2, X24
	0x036F5C40 MOV X3, X22
	0x036F5C44 MOV X4, X21
	0x036F5C48 MOV X5, X25
	0x036F5C4C BL 0x36F5894
	0x036F5C50 TBNZ X0, 0x0, 0x36F5B20
	0x036F5C54 LDR X8, [X20]
	0x036F5C58 LDR X1, [X8 + 0x260]
	0x036F5C5C LDR X9, [X8 + 0x258]
	0x036F5C60 MOV X0, X20
	0x036F5C64 BLR X9
	0x036F5C68 MOV X21, X0
	0x036F5C6C CBNZ X0, 0x36F5D18
	0x036F5C70 ADRP X0, 0xA4B000
	0x036F5C74 LDR X0, [X0 + 0xB10]
	0x036F5C78 BL 0x1C16D08
	0x036F5C7C MOV X20, X0
	0x036F5C80 MOV X21, X31
	0x036F5C84 B 0x36F5D3C
	0x036F5C88 MOV X21, X31
	0x036F5C8C CBZ X19, 0x36F5CF0
	0x036F5C90 ADRP X10, 0x9FE000
	0x036F5C94 LDR X8, [X19]
	0x036F5C98 LDR X10, [X10 + 0xE00]
	0x036F5C9C LDRH W9, [X8 + 0x12E]
	0x036F5CA0 LDR X1, [X10]
	0x036F5CA4 CBZ X9, 0x36F5CC8
	0x036F5CA8 LDR X10, [X8 + 0xB0]
	0x036F5CAC ADD X10, X10, 0x8
	0x036F5CB0 LDUR X11, [X10 - 0x8]
	0x036F5CB4 CMP X11, X1
	0x036F5CB8 B.EQ 0x36F5CD8
	0x036F5CBC SUBS X9, X9, 0x1
	0x036F5CC0 ADD X10, X10, 0x10
	0x036F5CC4 B.NE 0x36F5CB0
	0x036F5CC8 MOV X0, X19
	0x036F5CCC MOV W2, W31
	0x036F5CD0 BL 0x1C5C788
	0x036F5CD4 B 0x36F5CE4
	0x036F5CD8 LDRSW X9, [X10]
	0x036F5CDC ADD X8, X8, X9, 0x4, LSL
	0x036F5CE0 ADD X0, X8, 0x138
	0x036F5CE4 LDP X8, X1, [X0]
	0x036F5CE8 MOV X0, X19
	0x036F5CEC BLR X8
	0x036F5CF0 CBNZ X21, 0x36F5D9C
	0x036F5CF4 MOVZ W0, 0x1
	0x036F5CF8 LDP X20, X19, [X31 + 0x50]
	0x036F5CFC LDP X22, X21, [X31 + 0x40]
	0x036F5D00 LDP X24, X23, [X31 + 0x30]
	0x036F5D04 LDP X26, X25, [X31 + 0x20]
	0x036F5D08 LDP X28, X27, [X31 + 0x10]
	0x036F5D0C LDP X29, X30, [X31], #0x60
	0x036F5D10 RET
	0x036F5D14 BL 0x1C16F20
	0x036F5D18 ADRP X0, 0xA4B000
	0x036F5D1C LDR X0, [X0 + 0xB10]
	0x036F5D20 BL 0x1C16D08
	0x036F5D24 LDR X8, [X21]
	0x036F5D28 MOV X20, X0
	0x036F5D2C LDP X9, X1, [X8 + 0x168]
	0x036F5D30 MOV X0, X21
	0x036F5D34 BLR X9
	0x036F5D38 MOV X21, X0
	0x036F5D3C ADRP X0, 0xA4B000
	0x036F5D40 LDR X0, [X0 + 0xB18]
	0x036F5D44 BL 0x1C16D08
	0x036F5D48 MOV X2, X0
	0x036F5D4C MOV X0, X20
	0x036F5D50 MOV X1, X21
	0x036F5D54 MOV X3, X31
	0x036F5D58 BL 0x32274B8
	0x036F5D5C MOV X20, X0
	0x036F5D60 ADRP X0, 0x9FE000
	0x036F5D64 LDR X0, [X0 + 0xB40]
	0x036F5D68 BL 0x1C16D08
	0x036F5D6C BL 0x1C16F10
	0x036F5D70 MOV X21, X0
	0x036F5D74 MOV X1, X20
	0x036F5D78 MOV X2, X31
	0x036F5D7C BL 0x3379A44
	0x036F5D80 ADRP X0, 0xA4B000
	0x036F5D84 LDR X0, [X0 + 0xB20]
	0x036F5D88 BL 0x1C16D08
	0x036F5D8C MOV X1, X0
	0x036F5D90 MOV X0, X21
	0x036F5D94 BL 0x1C16DEC
	0x036F5D98 BL 0x1C16F20
	0x036F5D9C MOV X0, X21
	0x036F5DA0 BL 0x1C16F18
	0x036F5DA4 B 0x36F5DD8
	0x036F5DA8 B 0x36F5DD8
	0x036F5DAC B 0x36F5DD8
	0x036F5DB0 B 0x36F5DD8
	0x036F5DB4 B 0x36F5DD8
	0x036F5DB8 B 0x36F5DD8
	0x036F5DBC B 0x36F5DD8
	0x036F5DC0 B 0x36F5DD8
	0x036F5DC4 B 0x36F5DD8
	0x036F5DC8 B 0x36F5DD8
	0x036F5DCC B 0x36F5DD8
	0x036F5DD0 B 0x36F5DD8
	0x036F5DD4 B 0x36F5DD8
	0x036F5DD8 MOV X20, X0
	0x036F5DDC CMP W1, 0x1
	0x036F5DE0 B.NE 0x36F5DF8
	0x036F5DE4 MOV X0, X20
	0x036F5DE8 BL 0x3EB1AD0
	0x036F5DEC LDR X21, [X0]
	0x036F5DF0 BL 0x3EB1AE0
	0x036F5DF4 B 0x36F5C8C
	0x036F5DF8 MOV X21, X31
	0x036F5DFC B 0x36F5E04
	0x036F5E00 MOV X20, X0
	0x036F5E04 CBZ X19, 0x36F5E68
	0x036F5E08 ADRP X10, 0x9FE000
	0x036F5E0C LDR X8, [X19]
	0x036F5E10 LDR X10, [X10 + 0xE00]
	0x036F5E14 LDRH W9, [X8 + 0x12E]
	0x036F5E18 LDR X1, [X10]
	0x036F5E1C CBZ X9, 0x36F5E40
	0x036F5E20 LDR X10, [X8 + 0xB0]
	0x036F5E24 ADD X10, X10, 0x8
	0x036F5E28 LDUR X11, [X10 - 0x8]
	0x036F5E2C CMP X11, X1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xCEC000
	011 Move W8, [X23+2977]
	012 Move X19, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {55}
	020 Move X0, 0x9FF000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move X0, 0xA27000
	024 Move X0, [X0+4008]
	025 Call 0x1C17CF4
	026 Move X0, 0xA27000
	027 Move X0, [X0+4016]
	028 Call 0x1C17CF4
	029 Move X0, 0x9FF000
	030 Move X0, [X0+3608]
	031 Call 0x1C17CF4
	032 Move X0, 0xA06000
	033 Move X0, [X0+2392]
	034 Call 0x1C17CF4
	035 Move X0, 0xA4C000
	036 Move X0, [X0+2736]
	037 Call 0x1C17CF4
	038 Move X0, 0x9FF000
	039 Move X0, [X0+1432]
	040 Call 0x1C17CF4
	041 Move X0, 0xA4C000
	042 Move X0, [X0+2744]
	043 Call 0x1C17CF4
	044 Move X0, 0xA4C000
	045 Move X0, [X0+2752]
	046 Call 0x1C17CF4
	047 Move X0, 0xA01000
	048 Move X0, [X0+1592]
	049 Call 0x1C17CF4
	050 Move X0, 0x9FF000
	051 Move X0, [X0+1728]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X23+2977], W8
	055 Compare X22, 0
	056 JumpIfEqual {397}
	057 Move X8, [X22]
	058 Move X23, 0xA4C000
	059 Move X25, 0x9FF000
	060 Move X0, X22
	061 Move X9, [X8+600]
	062 Move X1, [X8+608]
	063 Move X23, [X23+2752]
	064 Move X25, [X25+1728]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, [X25]
	067 Move X24, [X23]
	068 Move X23, X0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X0, X24
	075 Move X1, X31
	076 Call Type.GetTypeFromHandle, X0
	077 Move X1, X0
	078 Move X0, X23
	079 Move X2, X31
	080 Call Type.op_Equality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {153}
	085 Move X8, [X22]
	086 Move X0, X22
	087 Move X1, X21
	088 Move X9, [X8+712]
	089 Move X2, [X8+720]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X21, X0
	092 Compare X0, 0
	093 JumpIfEqual {105}
	094 Move X9, 0xA01000
	095 Move X9, [X9+1592]
	096 Move X8, [X21]
	097 Move X1, [X9]
	098 Move W10, [X8+304]
	099 Move W9, [X1+304]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X8+200]
	102 Add X8, X8, X9
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, 0x9FF000
	106 Move X8, [X8+1432]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X21
	113 Move X1, X31
	114 Move X2, X31
	115 Call Object.op_Inequality, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {381}
	120 Compare X20, 0
	121 JumpIfEqual {397}
	122 Move X0, X20
	123 Move X1, X31
	124 Call Component.get_transform, X0
	125 Compare X21, 0
	126 JumpIfEqual {397}
	127 Move X1, X0
	128 Move X0, X21
	129 Move X2, X31
	130 Call Transform.IsChildOf, X0, X1
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {381}
	135 Compare X19, 0
	136 JumpIfEqual {397}
	137 Move X9, 0xA06000
	138 Move X9, [X9+2392]
	139 Move W10, [X19+28]
	140 Move X8, [X19+16]
	141 Move X9, [X9]
	142 Add W10, W10, 1
	143 Move [X19+28], W10
	144 Compare X8, 0
	145 JumpIfEqual {397}
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Move W11, [X8+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Add W9, W10, 1
	150 Add X8, X8, X10
	151 Move [X19+24], W9
	152 Move [X8+32], X21
	153 Move X8, 0xA4C000
	154 Move X0, [X25]
	155 Move X8, [X8+2744]
	156 Move W9, [X0+224]
	157 Move X24, [X8]
	158 Compare W9, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X0, X24
	162 Move X1, X31
	163 Call Type.GetTypeFromHandle, X0
	164 Move X1, X0
	165 Move X0, X23
	166 Move X2, X31
	167 Call Type.op_Equality, X0, X1
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {191}
	172 Move X8, 0xA4C000
	173 Move X0, [X25]
	174 Move X8, [X8+2736]
	175 Move W9, [X0+224]
	176 Move X24, [X8]
	177 Compare W9, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move X0, X24
	181 Move X1, X31
	182 Call Type.GetTypeFromHandle, X0
	183 Move X1, X0
	184 Move X0, X23
	185 Move X2, X31
	186 Call Type.op_Equality, X0, X1
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {374}
	191 Move X8, [X22]
	192 Move X0, X22
	193 Move X1, X21
	194 Move X9, [X8+712]
	195 Move X2, [X8+720]
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare X0, 0
	198 JumpIfEqual {397}
	199 Move X22, 0xA27000
	200 Move X22, [X22+4008]
	201 Move X23, X0
	202 Move X21, [X22]
	203 Move X1, X21
	204 Call 0x1C17E00
	205 Compare X0, 0
	206 JumpIfEqual {400}
	207 Move X22, [X22]
	208 Move X0, X23
	209 Move X1, X22
	210 Call 0x1C17E00
	211 Compare X0, 0
	212 JumpIfEqual {403}
	213 Move X8, [X0]
	214 Move X21, X0
	215 NotImplemented "Instruction LDRH not yet implemented."
	216 Compare X9, 0
	217 JumpIfEqual {224}
	218 Move X10, [X8+176]
	219 Add X10, X10, 8
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Subtract X9, X9, 1
	223 Add X10, X10, 16
	224 Move X0, X21
	225 Move X1, X22
	226 Move W2, W31
	227 Call 0x1C5D788
	228 NotImplemented "Instruction LDRSW not yet implemented."
	229 Add X8, X8, X9
	230 Add X0, X8, 312
	231 Move X8, [X0]
	232 Move X1, [X0+8]
	233 Move X0, X21
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move X21, X0
	236 Compare X0, 0
	237 JumpIfEqual {406}
	238 Move X23, 0x9FF000
	239 Move X24, 0xA27000
	240 Move X25, 0x9FF000
	241 Move X26, 0xA06000
	242 Move X23, [X23+3608]
	243 Move X24, [X24+4016]
	244 Move X25, [X25+1432]
	245 Move X26, [X26+2392]
	246 Move X8, [X21]
	247 Move X1, [X23]
	248 NotImplemented "Instruction LDRH not yet implemented."
	249 Compare X9, 0
	250 JumpIfEqual {257}
	251 Move X10, [X8+176]
	252 Add X10, X10, 8
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract X9, X9, 1
	256 Add X10, X10, 16
	257 Move X0, X21
	258 Move W2, W31
	259 Call 0x1C5D788
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Add X8, X8, X9
	262 Add X0, X8, 312
	263 Move X8, [X0]
	264 Move X1, [X0+8]
	265 Move X0, X21
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfNotEqual {343}
	271 Move X8, [X21]
	272 Move X1, [X24]
	273 NotImplemented "Instruction LDRH not yet implemented."
	274 Compare X9, 0
	275 JumpIfEqual {282}
	276 Move X10, [X8+176]
	277 Add X10, X10, 8
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Subtract X9, X9, 1
	281 Add X10, X10, 16
	282 Move X0, X21
	283 Move W2, W31
	284 Call 0x1C5D788
	285 NotImplemented "Instruction LDRSW not yet implemented."
	286 Add X8, X8, X9
	287 Add X0, X8, 312
	288 Move X8, [X0]
	289 Move X1, [X0+8]
	290 Move X0, X21
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Move X22, X0
	293 Move X0, [X25]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {298}
	297 Call 0x1C17DFC
	298 Move X0, X22
	299 Move X1, X31
	300 Move X2, X31
	301 Call Object.op_Inequality, X0, X1
	302 Move TEMP, X0
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfNotEqual {246}
	306 Compare X20, 0
	307 JumpIfEqual {393}
	308 Move X0, X20
	309 Move X1, X31
	310 Call Component.get_transform, X0
	311 Move X1, X0
	312 Compare X22, 0
	313 JumpIfEqual {394}
	314 Move X0, X22
	315 Move X2, X31
	316 Call Transform.IsChildOf, X0, X1
	317 Move TEMP, X0
	318 And TEMP, TEMP, 1
	319 Compare TEMP, 1
	320 JumpIfNotEqual {246}
	321 Compare X19, 0
	322 JumpIfEqual {395}
	323 Move W10, [X19+28]
	324 Move X8, [X19+16]
	325 Move X9, [X26]
	326 Add W10, W10, 1
	327 Move [X19+28], W10
	328 Compare X8, 0
	329 JumpIfEqual {396}
	330 NotImplemented "Instruction LDRSW not yet implemented."
	331 Move W11, [X8+24]
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Add W9, W10, 1
	334 Add X8, X8, X10
	335 Move [X19+24], W9
	336 Move [X8+32], X22
	337 Move X8, [X9+32]
	338 Move X8, [X8+192]
	339 Move X2, [X8+112]
	340 Move X0, X19
	341 Move X1, X22
	342 Call List`1<Object>.AddWithResize, X0, X1
	343 Move X19, X31
	344 Move W20, W31
	345 Compare X21, 0
	346 JumpIfEqual {370}
	347 Move X10, 0x9FF000
	348 Move X8, [X21]
	349 Move X10, [X10+3584]
	350 NotImplemented "Instruction LDRH not yet implemented."
	351 Move X1, [X10]
	352 Compare X9, 0
	353 JumpIfEqual {360}
	354 Move X10, [X8+176]
	355 Add X10, X10, 8
	356 NotImplemented "Instruction LDUR not yet implemented."
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Subtract X9, X9, 1
	359 Add X10, X10, 16
	360 Move X0, X21
	361 Move W2, W31
	362 Call 0x1C5D788
	363 NotImplemented "Instruction LDRSW not yet implemented."
	364 Add X8, X8, X9
	365 Add X0, X8, 312
	366 Move X8, [X0]
	367 Move X1, [X0+8]
	368 Move X0, X21
	369 NotImplemented "Instruction BLR not yet implemented."
	370 Compare X19, 0
	371 JumpIfNotEqual {407}
	372 Compare W20, 0
	373 JumpIfEqual {381}
	374 Move W8, W31
	375 Move X8, [X9+32]
	376 Move X0, X19
	377 Move X1, X21
	378 Move X8, [X8+192]
	379 Move X2, [X8+112]
	380 Call List`1<Object>.AddWithResize, X0, X1
	381 Move W8, 1
	382 Move X20, [X31+64]
	383 Move X19, [X31+72]
	384 Move X22, [X31+48]
	385 Move X21, [X31+56]
	386 Move X24, [X31+32]
	387 Move X23, [X31+40]
	388 Move X26, [X31+16]
	389 Move X25, [X31+24]
	390 Move W0, W8
	391 Move X30, [X31+80]
	392 Return X0
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Move X0, X21
	399 Call 0x1C181E0
	400 Move X0, X23
	401 Move X1, X21
	402 Call 0x1C181E0
	403 Move X0, X23
	404 Move X1, X22
	405 Call 0x1C181E0
	406 Call 0x1C17F20
	407 Move X0, X19
	408 Call 0x1C17F18
	409 Move X20, X0
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Move X0, X20
	412 Call 0x3EB2AD0
	413 Move X19, [X0]
	414 Call 0x3EB2AE0
	415 Move W20, 1
	416 Compare X21, 0
	417 JumpIfNotEqual {347}
	418 Move X19, X31
	419 Move X20, X0
	420 Compare X21, 0
	421 JumpIfEqual {445}
	422 Move X10, 0x9FF000
	423 Move X8, [X21]
	424 Move X10, [X10+3584]
	425 NotImplemented "Instruction LDRH not yet implemented."
	426 Move X1, [X10]
	427 Compare X9, 0
	428 JumpIfEqual {435}
	429 Move X10, [X8+176]
	430 Add X10, X10, 8
	431 NotImplemented "Instruction LDUR not yet implemented."
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Subtract X9, X9, 1
	434 Add X10, X10, 16
	435 Move X0, X21
	436 Move W2, W31
	437 Call 0x1C5D788
	438 NotImplemented "Instruction LDRSW not yet implemented."
	439 Add X8, X8, X9
	440 Add X0, X8, 312
	441 Move X8, [X0]
	442 Move X1, [X0+8]
	443 Move X0, X21
	444 NotImplemented "Instruction BLR not yet implemented."
	445 Compare X19, 0
	446 JumpIfNotEqual {449}
	447 Move X0, X20
	448 Call 0x1D2D690
	449 Move X0, X19
	450 Call 0x1C17F18
	451 Call 0x1991590

Method: System.Boolean ExtractPropertyType(System.Reflection.FieldInfo field, System.Object data, System.Collections.Generic.List`1<UnityEngine.Animations.Rigging.Property> syncableProperties, System.String namePrefix = )

Disassembly:
	0x036F5E30 B.EQ 0x36F5E50
	0x036F5E34 SUBS X9, X9, 0x1
	0x036F5E38 ADD X10, X10, 0x10
	0x036F5E3C B.NE 0x36F5E28
	0x036F5E40 MOV X0, X19
	0x036F5E44 MOV W2, W31
	0x036F5E48 BL 0x1C5C788
	0x036F5E4C B 0x36F5E5C
	0x036F5E50 LDRSW X9, [X10]
	0x036F5E54 ADD X8, X8, X9, 0x4, LSL
	0x036F5E58 ADD X0, X8, 0x138
	0x036F5E5C LDP X8, X1, [X0]
	0x036F5E60 MOV X0, X19
	0x036F5E64 BLR X8
	0x036F5E68 CBNZ X21, 0x36F5E74
	0x036F5E6C MOV X0, X20
	0x036F5E70 BL 0x1D2C690
	0x036F5E74 MOV X0, X21
	0x036F5E78 BL 0x1C16F18
	0x036F5E7C BL 0x1990590
	0x036F5E80 SUB X31, X31, 0xA0
	0x036F5E84 STP X29, X30, [X31 + 0x40]
	0x036F5E88 STP X28, X27, [X31 + 0x50]
	0x036F5E8C STP X26, X25, [X31 + 0x60]
	0x036F5E90 STP X24, X23, [X31 + 0x70]
	0x036F5E94 STP X22, X21, [X31 + 0x80]
	0x036F5E98 STP X20, X19, [X31 + 0x90]
	0x036F5E9C STR X3, [X31 + 0x8]
	0x036F5EA0 ADRP X24, 0xCEB000
	0x036F5EA4 ADRP X23, 0xA05000
	0x036F5EA8 ADRP X22, 0xA05000
	0x036F5EAC LDRB W8, [X24 + 0xBA5]
	0x036F5EB0 LDR X23, [X23 + 0x930]
	0x036F5EB4 LDR X22, [X22 + 0x938]
	0x036F5EB8 MOV X19, X2
	0x036F5EBC MOV X21, X1
	0x036F5EC0 MOV X20, X0
	0x036F5EC4 TBNZ X8, 0x0, 0x36F6044
	0x036F5EC8 ADRP X0, 0xA4B000
	0x036F5ECC LDR X0, [X0 + 0xB28]
	0x036F5ED0 BL 0x1C16CF4
	0x036F5ED4 ADRP X0, 0xA4B000
	0x036F5ED8 LDR X0, [X0 + 0xB30]
	0x036F5EDC BL 0x1C16CF4
	0x036F5EE0 ADRP X0, 0xA4B000
	0x036F5EE4 LDR X0, [X0 + 0xB38]
	0x036F5EE8 BL 0x1C16CF4
	0x036F5EEC ADRP X0, 0xA4B000
	0x036F5EF0 LDR X0, [X0 + 0xB40]
	0x036F5EF4 BL 0x1C16CF4
	0x036F5EF8 ADRP X0, 0xA4B000
	0x036F5EFC LDR X0, [X0 + 0xB48]
	0x036F5F00 BL 0x1C16CF4
	0x036F5F04 ADRP X0, 0xA4B000
	0x036F5F08 LDR X0, [X0 + 0xA48]
	0x036F5F0C BL 0x1C16CF4
	0x036F5F10 ADRP X0, 0x9FE000
	0x036F5F14 LDR X0, [X0 + 0xE00]
	0x036F5F18 BL 0x1C16CF4
	0x036F5F1C ADRP X0, 0xA4B000
	0x036F5F20 LDR X0, [X0 + 0xA50]
	0x036F5F24 BL 0x1C16CF4
	0x036F5F28 ADRP X0, 0xA4B000
	0x036F5F2C LDR X0, [X0 + 0xA58]
	0x036F5F30 BL 0x1C16CF4
	0x036F5F34 ADRP X0, 0x9FE000
	0x036F5F38 LDR X0, [X0 + 0xE18]
	0x036F5F3C BL 0x1C16CF4
	0x036F5F40 ADRP X0, 0xA27000
	0x036F5F44 LDR X0, [X0 + 0xE30]
	0x036F5F48 BL 0x1C16CF4
	0x036F5F4C ADRP X0, 0xA4B000
	0x036F5F50 LDR X0, [X0 + 0x9D8]
	0x036F5F54 BL 0x1C16CF4
	0x036F5F58 ADRP X0, 0xA4B000
	0x036F5F5C LDR X0, [X0 + 0xB50]
	0x036F5F60 BL 0x1C16CF4
	0x036F5F64 ADRP X0, 0xA4B000
	0x036F5F68 LDR X0, [X0 + 0xB58]
	0x036F5F6C BL 0x1C16CF4
	0x036F5F70 ADRP X0, 0xA4B000
	0x036F5F74 LDR X0, [X0 + 0xB60]
	0x036F5F78 BL 0x1C16CF4
	0x036F5F7C ADRP X0, 0xA4B000
	0x036F5F80 LDR X0, [X0 + 0xB68]
	0x036F5F84 BL 0x1C16CF4
	0x036F5F88 ADRP X0, 0xA4B000
	0x036F5F8C LDR X0, [X0 + 0xB70]
	0x036F5F90 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xCEC000
	009 Move X22, 0xA4C000
	010 Move W8, [X23+2978]
	011 Move X22, [X22+2560]
	012 Move X20, X3
	013 Move X19, X2
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xA4C000
	020 Move X0, [X0+2760]
	021 Call 0x1C17CF4
	022 Move X0, 0xA4C000
	023 Move X0, [X0+2768]
	024 Call 0x1C17CF4
	025 Move X0, 0xA4C000
	026 Move X0, [X0+2560]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+2978], W8
	030 Move X0, [X22]
	031 Move [X31+8], X31
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X22]
	037 Compare X21, 0
	038 JumpIfEqual {105}
	039 Move X8, [X0+184]
	040 Move X9, [X21]
	041 Move X0, X21
	042 Move X22, [X8]
	043 Move X8, [X9+600]
	044 Move X1, [X9+608]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X22, 0
	047 JumpIfEqual {105}
	048 Move X8, 0xA4C000
	049 Move X8, [X8+2760]
	050 Move X1, X0
	051 Add X2, X31, 8
	052 Move X0, X22
	053 Move X3, [X8]
	054 Call Dictionary`2<Object, PropertyDescriptor>.TryGetValue, X0, X1, X2
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {90}
	059 Move X8, [X21]
	060 Move X0, X21
	061 Move X9, [X8+424]
	062 Move X1, [X8+432]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X1, X0
	065 Move X0, X20
	066 Move X2, X31
	067 Call String.Concat, X0, X1
	068 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	069 Compare X19, 0
	070 JumpIfEqual {105}
	071 Move X9, 0xA4C000
	072 Move X2, [X31+8]
	073 Move X9, [X9+2768]
	074 Move W10, [X19+28]
	075 Move X8, [X19+16]
	076 Move X9, [X9]
	077 Add W10, W10, 1
	078 Move [X19+28], W10
	079 Compare X8, 0
	080 JumpIfEqual {105}
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Move W11, [X8+24]
	083 Move X1, X0
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add W9, W10, 1
	086 Add X8, X8, X10
	087 Move [X19+24], W9
	088 Move [X8+32], X1
	089 Move [X8+40], X2
	090 Move W0, W31
	091 Move X8, [X9+32]
	092 Move X0, X19
	093 Move X8, [X8+192]
	094 Move X3, [X8+112]
	095 Call List`1<Property>.AddWithResize, X0, X1
	096 Move W0, 1
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X22, [X31+32]
	100 Move X21, [X31+40]
	101 Move X30, [X31+16]
	102 Move X23, [X31+24]
	103 Add X31, X31, 64
	104 Return X0
	105 Call 0x1C17F20

Method: System.Boolean ExtractWeightedTransforms(UnityEngine.Animator animator, System.Reflection.FieldInfo field, System.Object data, System.Collections.Generic.List`1<UnityEngine.Transform> syncableTransforms, System.Collections.Generic.List`1<UnityEngine.Animations.Rigging.Property> syncableProperties)

Disassembly:
	0x036F5F94 ADRP X0, 0xA4B000
	0x036F5F98 LDR X0, [X0 + 0xB78]
	0x036F5F9C BL 0x1C16CF4
	0x036F5FA0 ADRP X0, 0xA4B000
	0x036F5FA4 LDR X0, [X0 + 0xB80]
	0x036F5FA8 BL 0x1C16CF4
	0x036F5FAC ADRP X0, 0xA4B000
	0x036F5FB0 LDR X0, [X0 + 0xB88]
	0x036F5FB4 BL 0x1C16CF4
	0x036F5FB8 ADRP X0, 0xA4B000
	0x036F5FBC LDR X0, [X0 + 0xB90]
	0x036F5FC0 BL 0x1C16CF4
	0x036F5FC4 ADRP X0, 0xA4B000
	0x036F5FC8 LDR X0, [X0 + 0xB98]
	0x036F5FCC BL 0x1C16CF4
	0x036F5FD0 ADRP X0, 0xA4B000
	0x036F5FD4 LDR X0, [X0 + 0xBA0]
	0x036F5FD8 BL 0x1C16CF4
	0x036F5FDC ADRP X0, 0xA05000
	0x036F5FE0 LDR X0, [X0 + 0x938]
	0x036F5FE4 BL 0x1C16CF4
	0x036F5FE8 ADRP X0, 0xA4B000
	0x036F5FEC LDR X0, [X0 + 0xBA8]
	0x036F5FF0 BL 0x1C16CF4
	0x036F5FF4 ADRP X0, 0xA4B000
	0x036F5FF8 LDR X0, [X0 + 0xBB0]
	0x036F5FFC BL 0x1C16CF4
	0x036F6000 ADRP X0, 0xA4A000
	0x036F6004 LDR X0, [X0 + 0xBB8]
	0x036F6008 BL 0x1C16CF4
	0x036F600C ADRP X0, 0xA04000
	0x036F6010 LDR X0, [X0 + 0x930]
	0x036F6014 BL 0x1C16CF4
	0x036F6018 ADRP X0, 0xA4A000
	0x036F601C LDR X0, [X0 + 0xBC0]
	0x036F6020 BL 0x1C16CF4
	0x036F6024 ADRP X0, 0xA4A000
	0x036F6028 LDR X0, [X0 + 0xA00]
	0x036F602C BL 0x1C16CF4
	0x036F6030 ADRP X0, 0x9FD000
	0x036F6034 LDR X0, [X0 + 0x988]
	0x036F6038 BL 0x1C16CF4
	0x036F603C MOVZ W8, 0x1
	0x036F6040 STRB W8, [X24 + 0xBA5]
	0x036F6044 LDR X0, [X23]
	0x036F6048 STR X31, [X31 + 0x38]
	0x036F604C BL 0x1C16F10
	0x036F6050 LDR X1, [X22]
	0x036F6054 MOV X22, X0
	0x036F6058 BL 0x301B7C4
	0x036F605C STR X22, [X19]
	0x036F6060 CBZ X21, 0x36F6B10
	0x036F6064 ADRP X10, 0xA4A000
	0x036F6068 LDR X8, [X21]
	0x036F606C LDR X10, [X10 + 0xA48]
	0x036F6070 ADRP X22, 0xA4A000
	0x036F6074 ADRP X23, 0xA4A000
	0x036F6078 ADRP X26, 0xA4A000
	0x036F607C ADRP X25, 0xA4A000
	0x036F6080 ADRP X24, 0xA4A000
	0x036F6084 LDR X22, [X22 + 0xBA8]
	0x036F6088 LDR X23, [X23 + 0xB88]
	0x036F608C LDRH W9, [X8 + 0x12E]
	0x036F6090 LDR X1, [X10]
	0x036F6094 LDR X26, [X26 + 0xB48]
	0x036F6098 LDR X25, [X25 + 0xB38]
	0x036F609C LDR X24, [X24 + 0xA50]
	0x036F60A0 CBZ X9, 0x36F60C4
	0x036F60A4 LDR X10, [X8 + 0xB0]
	0x036F60A8 ADD X10, X10, 0x8
	0x036F60AC LDUR X11, [X10 - 0x8]
	0x036F60B0 CMP X11, X1
	0x036F60B4 B.EQ 0x36F60D4
	0x036F60B8 SUBS X9, X9, 0x1
	0x036F60BC ADD X10, X10, 0x10
	0x036F60C0 B.NE 0x36F60AC
	0x036F60C4 MOV X0, X21
	0x036F60C8 MOV W2, W31
	0x036F60CC BL 0x1C5C788
	0x036F60D0 B 0x36F60E0
	0x036F60D4 LDRSW X9, [X10]
	0x036F60D8 ADD X8, X8, X9, 0x4, LSL
	0x036F60DC ADD X0, X8, 0x138
	0x036F60E0 LDP X8, X1, [X0]
	0x036F60E4 MOV X0, X21
	0x036F60E8 BLR X8
	0x036F60EC LDR X8, [X22]
	0x036F60F0 MOV W22, W0
	0x036F60F4 MOV X0, X8
	0x036F60F8 BL 0x1C16F10
	0x036F60FC LDR X2, [X23]
	0x036F6100 MOV W1, W22
	0x036F6104 MOV X23, X0
	0x036F6108 BL 0x307C32C
	0x036F610C LDR X8, [X31 + 0x8]
	0x036F6110 STR X23, [X8]
	0x036F6114 LDR X0, [X26]
	0x036F6118 BL 0x1C16F10
	0x036F611C LDR X1, [X25]
	0x036F6120 MOV X23, X0
	0x036F6124 BL 0x2AA4804
	0x036F6128 LDR X8, [X21]
	0x036F612C LDR X1, [X24]
	0x036F6130 LDRH W9, [X8 + 0x12E]
	0x036F6134 CBZ X9, 0x36F6158
	0x036F6138 LDR X10, [X8 + 0xB0]
	0x036F613C ADD X10, X10, 0x8
	0x036F6140 LDUR X11, [X10 - 0x8]
	0x036F6144 CMP X11, X1
	0x036F6148 B.EQ 0x36F6168
	0x036F614C SUBS X9, X9, 0x1
	0x036F6150 ADD X10, X10, 0x10
	0x036F6154 B.NE 0x36F6140
	0x036F6158 MOV X0, X21
	0x036F615C MOV W2, W31
	0x036F6160 BL 0x1C5C788
	0x036F6164 B 0x36F6174
	0x036F6168 LDRSW X9, [X10]
	0x036F616C ADD X8, X8, X9, 0x4, LSL
	0x036F6170 ADD X0, X8, 0x138
	0x036F6174 LDP X8, X1, [X0]
	0x036F6178 MOV X0, X21
	0x036F617C BLR X8
	0x036F6180 STR X0, [X31 + 0x18]
	0x036F6184 CBZ X0, 0x36F6B14
	0x036F6188 ADRP X24, 0x9FD000
	0x036F618C ADRP X25, 0xA4A000
	0x036F6190 ADRP X26, 0xA4A000
	0x036F6194 LDR X24, [X24 + 0xE18]
	0x036F6198 LDR X25, [X25 + 0xA58]
	0x036F619C LDR X26, [X26 + 0x9D8]
	0x036F61A0 STR X23, [X31 + 0x30]
	0x036F61A4 LDR X8, [X31 + 0x18]
	0x036F61A8 LDR X1, [X24]
	0x036F61AC LDR X8, [X8]
	0x036F61B0 LDRH W9, [X8 + 0x12E]
	0x036F61B4 CBZ X9, 0x36F61D8
	0x036F61B8 LDR X10, [X8 + 0xB0]
	0x036F61BC ADD X10, X10, 0x8
	0x036F61C0 LDUR X11, [X10 - 0x8]
	0x036F61C4 CMP X11, X1
	0x036F61C8 B.EQ 0x36F61E8
	0x036F61CC SUBS X9, X9, 0x1
	0x036F61D0 ADD X10, X10, 0x10
	0x036F61D4 B.NE 0x36F61C0
	0x036F61D8 LDR X0, [X31 + 0x18]
	0x036F61DC MOV W2, W31
	0x036F61E0 BL 0x1C5C788
	0x036F61E4 B 0x36F61F4
	0x036F61E8 LDRSW X9, [X10]
	0x036F61EC ADD X8, X8, X9, 0x4, LSL
	0x036F61F0 ADD X0, X8, 0x138
	0x036F61F4 LDP X8, X1, [X0]
	0x036F61F8 LDR X0, [X31 + 0x18]
	0x036F61FC BLR X8
	0x036F6200 TBZ X0, 0x0, 0x36F6918
	0x036F6204 LDR X8, [X31 + 0x18]
	0x036F6208 LDR X1, [X25]
	0x036F620C LDR X8, [X8]
	0x036F6210 LDRH W9, [X8 + 0x12E]
	0x036F6214 CBZ X9, 0x36F6238
	0x036F6218 LDR X10, [X8 + 0xB0]
	0x036F621C ADD X10, X10, 0x8
	0x036F6220 LDUR X11, [X10 - 0x8]
	0x036F6224 CMP X11, X1
	0x036F6228 B.EQ 0x36F6248
	0x036F622C SUBS X9, X9, 0x1
	0x036F6230 ADD X10, X10, 0x10
	0x036F6234 B.NE 0x36F6220
	0x036F6238 LDR X0, [X31 + 0x18]
	0x036F623C MOV W2, W31
	0x036F6240 BL 0x1C5C788
	0x036F6244 B 0x36F6254
	0x036F6248 LDRSW X9, [X10]
	0x036F624C ADD X8, X8, X9, 0x4, LSL
	0x036F6250 ADD X0, X8, 0x138
	0x036F6254 LDP X8, X1, [X0]
	0x036F6258 LDR X0, [X31 + 0x18]
	0x036F625C BLR X8
	0x036F6260 CBZ X0, 0x36F6AFC
	0x036F6264 LDR X8, [X0]
	0x036F6268 LDR X1, [X26]
	0x036F626C STR X0, [X31 + 0x10]
	0x036F6270 LDRH W9, [X8 + 0x12E]
	0x036F6274 CBZ X9, 0x36F6298
	0x036F6278 LDR X10, [X8 + 0xB0]
	0x036F627C ADD X10, X10, 0x8
	0x036F6280 LDUR X11, [X10 - 0x8]
	0x036F6284 CMP X11, X1
	0x036F6288 B.EQ 0x36F62A8
	0x036F628C SUBS X9, X9, 0x1
	0x036F6290 ADD X10, X10, 0x10
	0x036F6294 B.NE 0x36F6280
	0x036F6298 LDR X0, [X31 + 0x10]
	0x036F629C MOVZ W2, 0x8
	0x036F62A0 BL 0x1C5C788
	0x036F62A4 B 0x36F62B8
	0x036F62A8 LDR W9, [X10]
	0x036F62AC ADD W9, W9, 0x8
	0x036F62B0 ADD X8, X8, W9, 0x4, SXTW
	0x036F62B4 ADD X0, X8, 0x138
	0x036F62B8 LDP X8, X1, [X0]
	0x036F62BC LDR X0, [X31 + 0x10]
	0x036F62C0 BLR X8
	0x036F62C4 TBZ X0, 0x0, 0x36F61A4
	0x036F62C8 LDR X8, [X31 + 0x10]
	0x036F62CC LDR X1, [X26]
	0x036F62D0 LDR X8, [X8]
	0x036F62D4 LDRH W9, [X8 + 0x12E]
	0x036F62D8 CBZ X9, 0x36F62FC
	0x036F62DC LDR X10, [X8 + 0xB0]
	0x036F62E0 ADD X10, X10, 0x8
	0x036F62E4 LDUR X11, [X10 - 0x8]
	0x036F62E8 CMP X11, X1
	0x036F62EC B.EQ 0x36F630C
	0x036F62F0 SUBS X9, X9, 0x1
	0x036F62F4 ADD X10, X10, 0x10
	0x036F62F8 B.NE 0x36F62E4
	0x036F62FC LDR X0, [X31 + 0x10]
	0x036F6300 MOVZ W2, 0x1
	0x036F6304 BL 0x1C5C788
	0x036F6308 B 0x36F631C
	0x036F630C LDR W9, [X10]
	0x036F6310 ADD W9, W9, 0x1
	0x036F6314 ADD X8, X8, W9, 0x4, SXTW
	0x036F6318 ADD X0, X8, 0x138
	0x036F631C LDP X8, X1, [X0]
	0x036F6320 LDR X0, [X31 + 0x10]
	0x036F6324 BLR X8
	0x036F6328 STR X0, [X31 + 0x28]
	0x036F632C CBZ X0, 0x36F6B00
	0x036F6330 ADRP X8, 0xA4A000
	0x036F6334 LDR X8, [X8 + 0xBC0]
	0x036F6338 LDR X0, [X8]
	0x036F633C BL 0x1C16F10
	0x036F6340 LDR X21, [X31 + 0x28]
	0x036F6344 ADRP X8, 0xA4A000
	0x036F6348 LDR W1, [X21 + 0x18]
	0x036F634C LDR X8, [X8 + 0xB90]
	0x036F6350 MOV X28, X0
	0x036F6354 LDR X2, [X8]
	0x036F6358 BL 0x2F78778
	0x036F635C LDR W8, [X21 + 0x18]
	0x036F6360 CMP W8, 0x1
	0x036F6364 B.LT 0x36F680C
	0x036F6368 MOV X9, X21
	0x036F636C MOV W26, W31
	0x036F6370 STR X28, [X31 + 0x20]
	0x036F6374 CMP W26, W8
	0x036F6378 B.CS 0x36F6A4C
	0x036F637C ADD X8, X9, W26, 0x3, SXTW
	0x036F6380 LDR X27, [X8 + 0x20]
	0x036F6384 CBZ X27, 0x36F6A58
	0x036F6388 LDR X8, [X27]
	0x036F638C ADRP X10, 0xA26000
	0x036F6390 LDRH W9, [X8 + 0x12E]
	0x036F6394 LDR X10, [X10 + 0xE30]
	0x036F6398 LDR X1, [X10]
	0x036F639C CBZ X9, 0x36F63C0
	0x036F63A0 LDR X10, [X8 + 0xB0]
	0x036F63A4 ADD X10, X10, 0x8
	0x036F63A8 LDUR X11, [X10 - 0x8]
	0x036F63AC CMP X11, X1
	0x036F63B0 B.EQ 0x36F63D0
	0x036F63B4 SUBS X9, X9, 0x1
	0x036F63B8 ADD X10, X10, 0x10
	0x036F63BC B.NE 0x36F63A8
	0x036F63C0 MOVZ W2, 0x4
	0x036F63C4 MOV X0, X27
	0x036F63C8 BL 0x1C5C788
	0x036F63CC B 0x36F63E0
	0x036F63D0 LDR W9, [X10]
	0x036F63D4 ADD W9, W9, 0x4
	0x036F63D8 ADD X8, X8, W9, 0x4, SXTW
	0x036F63DC ADD X0, X8, 0x138
	0x036F63E0 LDP X8, X1, [X0]
	0x036F63E4 MOV X0, X27
	0x036F63E8 BLR X8
	0x036F63EC LDR X8, [X27]
	0x036F63F0 ADRP X10, 0xA26000
	0x036F63F4 MOV X28, X0
	0x036F63F8 LDRH W9, [X8 + 0x12E]
	0x036F63FC LDR X10, [X10 + 0xE30]
	0x036F6400 LDR X1, [X10]
	0x036F6404 CBZ X9, 0x36F6428
	0x036F6408 LDR X10, [X8 + 0xB0]
	0x036F640C ADD X10, X10, 0x8
	0x036F6410 LDUR X11, [X10 - 0x8]
	0x036F6414 CMP X11, X1
	0x036F6418 B.EQ 0x36F6438
	0x036F641C SUBS X9, X9, 0x1
	0x036F6420 ADD X10, X10, 0x10
	0x036F6424 B.NE 0x36F6410
	0x036F6428 MOVZ W2, 0x4
	0x036F642C MOV X0, X27
	0x036F6430 BL 0x1C5C788
	0x036F6434 B 0x36F6448
	0x036F6438 LDR W9, [X10]
	0x036F643C ADD W9, W9, 0x4
	0x036F6440 ADD X8, X8, W9, 0x4, SXTW
	0x036F6444 ADD X0, X8, 0x138
	0x036F6448 LDP X8, X1, [X0]
	0x036F644C MOV X0, X27
	0x036F6450 BLR X8
	0x036F6454 CBZ X0, 0x36F6A54
	0x036F6458 MOV X1, X31
	0x036F645C BL 0x33BE520
	0x036F6460 CBZ X23, 0x36F6A50
	0x036F6464 ADRP X8, 0xA4A000
	0x036F6468 LDR X8, [X8 + 0xB30]
	0x036F646C MOV X29, X0
	0x036F6470 LDR X3, [X8]
	0x036F6474 ADD X2, X31, 0x38
	0x036F6478 MOV X0, X23
	0x036F647C MOV X1, X29
	0x036F6480 BL 0x2AA6B2C
	0x036F6484 TBNZ X0, 0x0, 0x36F65B8
	0x036F6488 CBZ X29, 0x36F6A70
	0x036F648C LDR X8, [X29]
	0x036F6490 LDR X9, [X8 + 0x688]
	0x036F6494 LDR X2, [X8 + 0x690]
	0x036F6498 MOVZ W1, 0x34
	0x036F649C MOV X0, X29
	0x036F64A0 BLR X9
	0x036F64A4 MOV X22, X0
	0x036F64A8 CBZ X0, 0x36F6A74
	0x036F64AC ADRP X8, 0xA4A000
	0x036F64B0 LDR X8, [X8 + 0xBB8]
	0x036F64B4 LDR X0, [X8]
	0x036F64B8 BL 0x1C16F10
	0x036F64BC ADRP X8, 0xA4A000
	0x036F64C0 LDR W1, [X22 + 0x18]
	0x036F64C4 LDR X8, [X8 + 0xB98]
	0x036F64C8 MOV X21, X0
	0x036F64CC LDR X2, [X8]
	0x036F64D0 BL 0x301B830
	0x036F64D4 LDR X8, [X22 + 0x18]
	0x036F64D8 CMP W8, 0x1
	0x036F64DC B.LT 0x36F6580
	0x036F64E0 MOV X23, X31
	0x036F64E4 AND X8, X8, 0x0
	0x036F64E8 ADD X25, X22, 0x20
	0x036F64EC CMP X23, W8, UXTW
	0x036F64F0 B.CS 0x36F6A04
	0x036F64F4 ADRP X8, 0xA4A000
	0x036F64F8 LDR X24, [X25, X23, LSL #3]
	0x036F64FC LDR X8, [X8 + 0xB28]
	0x036F6500 LDR X1, [X8]
	0x036F6504 MOV X0, X24
	0x036F6508 BL 0x21A891C
	0x036F650C CBZ X0, 0x36F6570
	0x036F6510 CBZ X21, 0x36F6A0C
	0x036F6514 ADRP X9, 0xA4A000
	0x036F6518 LDR W10, [X21 + 0x1C]
	0x036F651C LDR X8, [X21 + 0x10]
	0x036F6520 LDR X9, [X9 + 0xB58]
	0x036F6524 ADD W10, W10, 0x1
	0x036F6528 LDR X9, [X9]
	0x036F652C STR W10, [X21 + 0x1C]
	0x036F6530 CBZ X8, 0x36F6A08
	0x036F6534 LDRSW X10, [X21 + 0x18]
	0x036F6538 LDR W11, [X8 + 0x18]
	0x036F653C CMP W10, W11
	0x036F6540 B.CS 0x36F6558
	0x036F6544 ADD W9, W10, 0x1
	0x036F6548 ADD X8, X8, X10, 0x3, LSL
	0x036F654C STR W9, [X21 + 0x18]
	0x036F6550 STR X24, [X8 + 0x20]
	0x036F6554 B 0x36F6570
	0x036F6558 LDR X8, [X9 + 0x20]
	0x036F655C LDR X8, [X8 + 0xC0]
	0x036F6560 LDR X2, [X8 + 0x70]
	0x036F6564 MOV X0, X21
	0x036F6568 MOV X1, X24
	0x036F656C BL 0x301BF90
	0x036F6570 LDR W8, [X22 + 0x18]
	0x036F6574 ADD X23, X23, 0x1
	0x036F6578 CMP X23, W8, SXTW
	0x036F657C B.LT 0x36F64EC
	0x036F6580 CBZ X21, 0x36F6A78
	0x036F6584 ADRP X8, 0xA4A000
	0x036F6588 LDR X8, [X8 + 0xB78]
	0x036F658C LDR X1, [X8]
	0x036F6590 MOV X0, X21
	0x036F6594 BL 0x301DDC4
	0x036F6598 ADRP X8, 0xA4A000
	0x036F659C LDR X8, [X8 + 0xB40]
	0x036F65A0 MOV X2, X0
	0x036F65A4 STR X0, [X31 + 0x38]
	0x036F65A8 LDR X3, [X8]
	0x036F65AC LDR X0, [X31 + 0x30]
	0x036F65B0 MOV X1, X29
	0x036F65B4 BL 0x2AA5084
	0x036F65B8 LDR X21, [X31 + 0x38]
	0x036F65BC CBZ X21, 0x36F6A5C
	0x036F65C0 ADRP X8, 0xA4A000
	0x036F65C4 LDR X8, [X8 + 0xBB0]
	0x036F65C8 LDR X0, [X8]
	0x036F65CC BL 0x1C16F10
	0x036F65D0 ADRP X8, 0xA4A000
	0x036F65D4 LDR W1, [X21 + 0x18]
	0x036F65D8 LDR X8, [X8 + 0xBA0]
	0x036F65DC MOV X29, X0
	0x036F65E0 LDR X2, [X8]
	0x036F65E4 BL 0x3029BDC
	0x036F65E8 LDR X24, [X31 + 0x38]
	0x036F65EC CBZ X24, 0x36F6A60
	0x036F65F0 LDR X8, [X24 + 0x18]
	0x036F65F4 CMP W8, 0x1
	0x036F65F8 B.LT 0x36F6708
	0x036F65FC MOV X25, X31
	0x036F6600 AND X8, X8, 0x0
	0x036F6604 ADD X23, X24, 0x20
	0x036F6608 CMP X25, W8, UXTW
	0x036F660C B.CS 0x36F6A00
	0x036F6610 ADRP X8, 0xA4A000
	0x036F6614 LDR X8, [X8 + 0xA00]
	0x036F6618 LDR X22, [X23, X25, LSL #3]
	0x036F661C LDR X21, [X19]
	0x036F6620 LDR X0, [X8]
	0x036F6624 LDR W8, [X0 + 0xE0]
	0x036F6628 CBNZ W8, 0x36F6630
	0x036F662C BL 0x1C16DFC
	0x036F6630 MOV X0, X20
	0x036F6634 MOV X1, X22
	0x036F6638 MOV X2, X28
	0x036F663C MOV X3, X21
	0x036F6640 MOV X4, X29
	0x036F6644 BL 0x36F4F94
	0x036F6648 TBNZ X0, 0x0, 0x36F66F8
	0x036F664C ADRP X8, 0xA4A000
	0x036F6650 LDR X8, [X8 + 0xA00]
	0x036F6654 LDR X21, [X19]
	0x036F6658 LDR X0, [X8]
	0x036F665C LDR W8, [X0 + 0xE0]
	0x036F6660 CBNZ W8, 0x36F6668
	0x036F6664 BL 0x1C16DFC
	0x036F6668 MOV X0, X20
	0x036F666C MOV X1, X22
	0x036F6670 MOV X2, X28
	0x036F6674 MOV X3, X21
	0x036F6678 BL 0x36F47AC
	0x036F667C TBNZ X0, 0x0, 0x36F66F8
	0x036F6680 ADRP X8, 0xA4A000
	0x036F6684 LDR X8, [X8 + 0xA00]
	0x036F6688 LDR X0, [X8]
	0x036F668C LDR W8, [X0 + 0xE0]
	0x036F6690 CBNZ W8, 0x36F6698
	0x036F6694 BL 0x1C16DFC
	0x036F6698 ADRP X8, 0x9FD000
	0x036F669C LDR X8, [X8 + 0x988]
	0x036F66A0 LDR X3, [X8]
	0x036F66A4 MOV X0, X22
	0x036F66A8 MOV X2, X29
	0x036F66AC BL 0x36F4E30
	0x036F66B0 TBNZ X0, 0x0, 0x36F66F8
	0x036F66B4 ADRP X8, 0xA4A000
	0x036F66B8 LDR X8, [X8 + 0xA00]
	0x036F66BC LDR X21, [X19]
	0x036F66C0 LDR X0, [X8]
	0x036F66C4 LDR W8, [X0 + 0xE0]
	0x036F66C8 CBNZ W8, 0x36F66D0
	0x036F66CC BL 0x1C16DFC
	0x036F66D0 ADRP X8, 0x9FD000
	0x036F66D4 LDR X8, [X8 + 0x988]
	0x036F66D8 LDR X5, [X8]
	0x036F66DC MOV X0, X20
	0x036F66E0 MOV X1, X22
	0x036F66E4 MOV X2, X28
	0x036F66E8 MOV X3, X21
	0x036F66EC MOV X4, X29
	0x036F66F0 BL 0x36F5894
	0x036F66F4 TBZ X0, 0x0, 0x36F6A10
	0x036F66F8 LDR W8, [X24 + 0x18]
	0x036F66FC ADD X25, X25, 0x1
	0x036F6700 CMP X25, W8, SXTW
	0x036F6704 B.LT 0x36F6608
	0x036F6708 LDR X8, [X27]
	0x036F670C ADRP X10, 0xA26000
	0x036F6710 LDRH W9, [X8 + 0x12E]
	0x036F6714 LDR X10, [X10 + 0xE30]
	0x036F6718 LDR X28, [X31 + 0x20]
	0x036F671C LDR X1, [X10]
	0x036F6720 CBZ X9, 0x36F6744
	0x036F6724 LDR X10, [X8 + 0xB0]
	0x036F6728 ADD X10, X10, 0x8
	0x036F672C LDUR X11, [X10 - 0x8]
	0x036F6730 CMP X11, X1
	0x036F6734 B.EQ 0x36F6754
	0x036F6738 SUBS X9, X9, 0x1
	0x036F673C ADD X10, X10, 0x10
	0x036F6740 B.NE 0x36F672C
	0x036F6744 MOVZ W2, 0x6
	0x036F6748 MOV X0, X27
	0x036F674C BL 0x1C5C788
	0x036F6750 B 0x36F6764
	0x036F6754 LDR W9, [X10]
	0x036F6758 ADD W9, W9, 0x6
	0x036F675C ADD X8, X8, W9, 0x4, SXTW
	0x036F6760 ADD X0, X8, 0x138
	0x036F6764 LDP X8, X1, [X0]
	0x036F6768 MOV X0, X27
	0x036F676C BLR X8
	0x036F6770 CBZ X29, 0x36F6A68
	0x036F6774 ADRP X8, 0xA4A000
	0x036F6778 LDR X8, [X8 + 0xB70]
	0x036F677C MOV X21, X0
	0x036F6780 LDR X1, [X8]
	0x036F6784 MOV X0, X29
	0x036F6788 BL 0x302C244
	0x036F678C CBZ X28, 0x36F6A64
	0x036F6790 ADRP X9, 0xA4A000
	0x036F6794 LDR W10, [X28 + 0x1C]
	0x036F6798 LDR X8, [X28 + 0x10]
	0x036F679C LDR X9, [X9 + 0xB68]
	0x036F67A0 ADD W10, W10, 0x1
	0x036F67A4 LDR X9, [X9]
	0x036F67A8 STR W10, [X28 + 0x1C]
	0x036F67AC CBZ X8, 0x36F6A6C
	0x036F67B0 LDRSW X10, [X28 + 0x18]
	0x036F67B4 LDR W11, [X8 + 0x18]
	0x036F67B8 MOV X2, X0
	0x036F67BC CMP W10, W11
	0x036F67C0 B.CS 0x36F67DC
	0x036F67C4 LDR X23, [X31 + 0x30]
	0x036F67C8 ADD W9, W10, 0x1
	0x036F67CC ADD X8, X8, X10, 0x4, LSL
	0x036F67D0 STR W9, [X28 + 0x18]
	0x036F67D4 STP X21, X2, [X8 + 0x20]
	0x036F67D8 B 0x36F67F8
	0x036F67DC LDR X8, [X9 + 0x20]
	0x036F67E0 LDR X8, [X8 + 0xC0]
	0x036F67E4 LDR X3, [X8 + 0x70]
	0x036F67E8 MOV X0, X28
	0x036F67EC MOV X1, X21
	0x036F67F0 BL 0x2F78F18
	0x036F67F4 LDR X23, [X31 + 0x30]
	0x036F67F8 LDR X9, [X31 + 0x28]
	0x036F67FC ADD W26, W26, 0x1
	0x036F6800 LDR W8, [X9 + 0x18]
	0x036F6804 CMP W26, W8
	0x036F6808 B.LT 0x36F6374
	0x036F680C LDP X9, X8, [X31 + 0x8]
	0x036F6810 ADRP X26, 0xA4A000
	0x036F6814 LDR X8, [X8]
	0x036F6818 LDR X21, [X9]
	0x036F681C LDRH W9, [X8 + 0x12E]
	0x036F6820 LDR X26, [X26 + 0x9D8]
	0x036F6824 LDR X1, [X26]
	0x036F6828 CBZ X9, 0x36F684C
	0x036F682C LDR X10, [X8 + 0xB0]
	0x036F6830 ADD X10, X10, 0x8
	0x036F6834 LDUR X11, [X10 - 0x8]
	0x036F6838 CMP X11, X1
	0x036F683C B.EQ 0x36F686C
	0x036F6840 SUBS X9, X9, 0x1
	0x036F6844 ADD X10, X10, 0x10
	0x036F6848 B.NE 0x36F6834
	0x036F684C LDR X0, [X31 + 0x10]
	0x036F6850 MOV W2, W31
	0x036F6854 BL 0x1C5C788
	0x036F6858 ADRP X24, 0x9FD000
	0x036F685C ADRP X25, 0xA4A000
	0x036F6860 LDR X24, [X24 + 0xE18]
	0x036F6864 LDR X25, [X25 + 0xA58]
	0x036F6868 B 0x36F6888
	0x036F686C LDRSW X9, [X10]
	0x036F6870 ADRP X24, 0x9FD000
	0x036F6874 ADRP X25, 0xA4A000
	0x036F6878 LDR X24, [X24 + 0xE18]
	0x036F687C LDR X25, [X25 + 0xA58]
	0x036F6880 ADD X8, X8, X9, 0x4, LSL
	0x036F6884 ADD X0, X8, 0x138
	0x036F6888 LDP X8, X1, [X0]
	0x036F688C LDR X0, [X31 + 0x10]
	0x036F6890 BLR X8

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X24, 0xCEC000
	015 Move W8, [X24+2979]
	016 Move X19, X4
	017 Move X22, X3
	018 Move X20, X2
	019 Move X21, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {75}
	025 Move X0, 0xA4C000
	026 Move X0, [X0+2776]
	027 Call 0x1C17CF4
	028 Move X0, 0x9FF000
	029 Move X0, [X0+3584]
	030 Call 0x1C17CF4
	031 Move X0, 0xA4C000
	032 Move X0, [X0+2784]
	033 Call 0x1C17CF4
	034 Move X0, 0xA4C000
	035 Move X0, [X0+2168]
	036 Call 0x1C17CF4
	037 Move X0, 0x9FE000
	038 Move X0, [X0+3608]
	039 Call 0x1C17CF4
	040 Move X0, 0xA05000
	041 Move X0, [X0+2392]
	042 Call 0x1C17CF4
	043 Move X0, 0xA4B000
	044 Move X0, [X0+2768]
	045 Call 0x1C17CF4
	046 Move X0, 0x9FE000
	047 Move X0, [X0+1432]
	048 Call 0x1C17CF4
	049 Move X0, 0xA4B000
	050 Move X0, [X0+2560]
	051 Call 0x1C17CF4
	052 Move X0, 0xA26000
	053 Move X0, [X0+2688]
	054 Call 0x1C17CF4
	055 Move X0, 0x9FE000
	056 Move X0, [X0+1728]
	057 Call 0x1C17CF4
	058 Move X0, 0xA4B000
	059 Move X0, [X0+2792]
	060 Call 0x1C17CF4
	061 Move X0, 0xA4B000
	062 Move X0, [X0+2800]
	063 Call 0x1C17CF4
	064 Move X0, 0xA4B000
	065 Move X0, [X0+2808]
	066 Call 0x1C17CF4
	067 Move X0, 0xA4B000
	068 Move X0, [X0+1976]
	069 Call 0x1C17CF4
	070 Move X0, 0xA4B000
	071 Move X0, [X0+1984]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X24+2979], W8
	075 Compare X21, 0
	076 JumpIfEqual {553}
	077 Move X8, [X21]
	078 Move X24, 0xA4B000
	079 Move X25, 0x9FE000
	080 Move X0, X21
	081 Move X9, [X8+600]
	082 Move X1, [X8+608]
	083 Move X24, [X24+2800]
	084 Move X25, [X25+1728]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, [X25]
	087 Move X25, [X24]
	088 Move X24, X0
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X0, X25
	095 Move X1, X31
	096 Call Type.GetTypeFromHandle, X0
	097 Move X1, X0
	098 Move X0, X24
	099 Move X2, X31
	100 Call Type.op_Equality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {171}
	105 Move X8, [X21]
	106 Move X0, X21
	107 Move X1, X20
	108 Move X9, [X8+712]
	109 Move X2, [X8+720]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Compare X0, 0
	112 JumpIfEqual {553}
	113 Move X8, 0xA4B000
	114 Move X8, [X8+2808]
	115 Move X9, [X0]
	116 Move X1, [X8]
	117 Move X8, [X9+64]
	118 Move X9, [X1+64]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Call 0x1C17E08
	121 Move X9, 0x9FE000
	122 Move X9, [X9+1432]
	123 Move X8, X0
	124 Move X20, [X8]
	125 Move X0, [X9]
	126 Move W9, [X0+224]
	127 Compare W9, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X20
	131 Move X1, X31
	132 Move X2, X31
	133 Call Object.op_Inequality, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {452}
	138 Compare X23, 0
	139 JumpIfEqual {553}
	140 Move X0, X23
	141 Move X1, X31
	142 Call Component.get_transform, X0
	143 Compare X20, 0
	144 JumpIfEqual {553}
	145 Move X1, X0
	146 Move X0, X20
	147 Move X2, X31
	148 Call Transform.IsChildOf, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {452}
	153 Compare X22, 0
	154 JumpIfEqual {553}
	155 Move X9, 0xA05000
	156 Move X9, [X9+2392]
	157 Move W10, [X22+28]
	158 Move X8, [X22+16]
	159 Move X9, [X9]
	160 Add W10, W10, 1
	161 Move [X22+28], W10
	162 Compare X8, 0
	163 JumpIfEqual {553}
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Move W11, [X8+24]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Add W9, W10, 1
	168 Add X8, X8, X10
	169 Move [X22+24], W9
	170 Move [X8+32], X20
	171 Move X8, 0x9FE000
	172 Move X8, [X8+1728]
	173 Move X0, [X8]
	174 Move X8, 0xA4B000
	175 Move X8, [X8+2792]
	176 Move W9, [X0+224]
	177 Move X25, [X8]
	178 Compare W9, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move X0, X25
	182 Move X1, X31
	183 Call Type.GetTypeFromHandle, X0
	184 Move X1, X0
	185 Move X0, X24
	186 Move X2, X31
	187 Call Type.op_Equality, X0, X1
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {533}
	192 Move X8, [X21]
	193 Move X0, X21
	194 Move X1, X20
	195 Move X9, [X8+712]
	196 Move X2, [X8+720]
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move [X31+12], W31
	199 Compare X0, 0
	200 JumpIfEqual {553}
	201 Move X24, 0xA4B000
	202 Move X24, [X24+2784]
	203 Move X25, X0
	204 Move X20, [X24]
	205 Move X1, X20
	206 Call 0x1C17E00
	207 Compare X0, 0
	208 JumpIfEqual {559}
	209 Move X24, [X24]
	210 Move X0, X25
	211 Move X1, X24
	212 Call 0x1C17E00
	213 Compare X0, 0
	214 JumpIfEqual {562}
	215 Move X8, [X0]
	216 Move X20, X0
	217 NotImplemented "Instruction LDRH not yet implemented."
	218 Compare X9, 0
	219 JumpIfEqual {226}
	220 Move X10, [X8+176]
	221 Add X10, X10, 8
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Subtract X9, X9, 1
	225 Add X10, X10, 16
	226 Move X0, X20
	227 Move X1, X24
	228 Move W2, W31
	229 Call 0x1C5D788
	230 NotImplemented "Instruction LDRSW not yet implemented."
	231 Add X8, X8, X9
	232 Add X0, X8, 312
	233 Move X8, [X0]
	234 Move X1, [X0+8]
	235 Move X0, X20
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Move X20, X0
	238 Compare X0, 0
	239 JumpIfEqual {565}
	240 Move X28, 0x9FE000
	241 Move X29, 0xA4B000
	242 Move X27, 0xA4B000
	243 Move X28, [X28+3608]
	244 Move X29, [X29+2560]
	245 Move X27, [X27+2768]
	246 Move X8, [X20]
	247 Move X1, [X28]
	248 NotImplemented "Instruction LDRH not yet implemented."
	249 Compare X9, 0
	250 JumpIfEqual {257}
	251 Move X10, [X8+176]
	252 Add X10, X10, 8
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract X9, X9, 1
	256 Add X10, X10, 16
	257 Move X0, X20
	258 Move W2, W31
	259 Call 0x1C5D788
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Add X8, X8, X9
	262 Add X0, X8, 312
	263 Move X8, [X0]
	264 Move X1, [X0+8]
	265 Move X0, X20
	266 NotImplemented "Instruction BLR not yet implemented."
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfNotEqual {426}
	271 Move X8, [X20]
	272 Move X10, 0xA4B000
	273 NotImplemented "Instruction LDRH not yet implemented."
	274 Move X10, [X10+2168]
	275 Move X1, [X10]
	276 Compare X9, 0
	277 JumpIfEqual {284}
	278 Move X10, [X8+176]
	279 Add X10, X10, 8
	280 NotImplemented "Instruction LDUR not yet implemented."
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Subtract X9, X9, 1
	283 Add X10, X10, 16
	284 Move X0, X20
	285 Move W2, W31
	286 Call 0x1C5D788
	287 NotImplemented "Instruction LDRSW not yet implemented."
	288 Add X8, X8, X9
	289 Add X0, X8, 312
	290 Move X8, [X0]
	291 Move X1, [X0+8]
	292 Move X0, X20
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Move X8, 0x9FE000
	295 Move X8, [X8+1432]
	296 Move X24, X0
	297 Move X0, [X8]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {302}
	301 Call 0x1C17DFC
	302 Move X0, X24
	303 Move X1, X31
	304 Move X2, X31
	305 Call Object.op_Inequality, X0, X1
	306 Move TEMP, X0
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfNotEqual {349}
	310 Compare X23, 0
	311 JumpIfEqual {554}
	312 Move X0, X23
	313 Move X1, X31
	314 Call Component.get_transform, X0
	315 Move X1, X0
	316 Compare X24, 0
	317 JumpIfEqual {555}
	318 Move X0, X24
	319 Move X2, X31
	320 Call Transform.IsChildOf, X0, X1
	321 Move TEMP, X0
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfNotEqual {349}
	325 Compare X22, 0
	326 JumpIfEqual {556}
	327 Move X9, 0xA05000
	328 Move W10, [X22+28]
	329 Move X8, [X22+16]
	330 Move X9, [X9+2392]
	331 Add W10, W10, 1
	332 Move X9, [X9]
	333 Move [X22+28], W10
	334 Compare X8, 0
	335 JumpIfEqual {557}
	336 NotImplemented "Instruction LDRSW not yet implemented."
	337 Move W11, [X8+24]
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Add W9, W10, 1
	340 Add X8, X8, X10
	341 Move [X22+24], W9
	342 Move [X8+32], X24
	343 Move X8, [X9+32]
	344 Move X8, [X8+192]
	345 Move X2, [X8+112]
	346 Move X0, X22
	347 Move X1, X24
	348 Call List`1<Object>.AddWithResize, X0, X1
	349 Move X8, [X21]
	350 Move X9, [X8+424]
	351 Move X1, [X8+432]
	352 Move X0, X21
	353 NotImplemented "Instruction BLR not yet implemented."
	354 Move X24, X0
	355 Add X0, X31, 12
	356 Move X1, X31
	357 Call Int32.ToString, X0
	358 Move X8, 0xA4B000
	359 Move X8, [X8+1984]
	360 Move X2, X0
	361 Move X1, [X8]
	362 Move X8, 0xA4B000
	363 Move X8, [X8+1976]
	364 Move X3, [X8]
	365 Move X0, X24
	366 Move X4, X31
	367 Call String.Concat, X0, X1, X2, X3
	368 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	369 Move X24, X0
	370 Move X0, [X29]
	371 Move W8, [X0+224]
	372 Compare W8, 0
	373 JumpIfNotEqual {376}
	374 Call 0x1C17DFC
	375 Move X0, [X29]
	376 Move X9, 0x9FE000
	377 Move X8, [X0+184]
	378 Move X9, [X9+1728]
	379 Move X25, [X8]
	380 Move X0, [X9]
	381 Move X9, 0xA26000
	382 Move W8, [X0+224]
	383 Move X9, [X9+2688]
	384 Move X26, [X9]
	385 Compare W8, 0
	386 JumpIfNotEqual {388}
	387 Call 0x1C17DFC
	388 Move X0, X26
	389 Move X1, X31
	390 Call Type.GetTypeFromHandle, X0
	391 Move X1, X0
	392 Compare X25, 0
	393 JumpIfEqual {551}
	394 Move X8, 0xA4B000
	395 Move X8, [X8+2776]
	396 Move X2, [X8]
	397 Move X0, X25
	398 Call Dictionary`2<Object, PropertyDescriptor>.get_Item, X0, X1
	399 Compare X19, 0
	400 JumpIfEqual {550}
	401 Move W10, [X19+28]
	402 Move X8, [X19+16]
	403 Move X9, [X27]
	404 Add W10, W10, 1
	405 Move [X19+28], W10
	406 Compare X8, 0
	407 JumpIfEqual {552}
	408 NotImplemented "Instruction LDRSW not yet implemented."
	409 Move W11, [X8+24]
	410 Move X2, X0
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Add W9, W10, 1
	413 Add X8, X8, X10
	414 Move [X19+24], W9
	415 Move [X8+32], X24
	416 Move [X8+40], X2
	417 Move X8, [X9+32]
	418 Move X8, [X8+192]
	419 Move X3, [X8+112]
	420 Move X0, X19
	421 Move X1, X24
	422 Call List`1<Property>.AddWithResize, X0, X1
	423 Move W8, [X31+12]
	424 Add W8, W8, 1
	425 Move [X31+12], W8
	426 Move X21, X31
	427 Move W19, W31
	428 Compare X20, 0
	429 JumpIfEqual {529}
	430 Move X10, 0x9FE000
	431 Move X8, [X20]
	432 Move X10, [X10+3584]
	433 NotImplemented "Instruction LDRH not yet implemented."
	434 Move X1, [X10]
	435 Compare X9, 0
	436 JumpIfEqual {443}
	437 Move X10, [X8+176]
	438 Add X10, X10, 8
	439 NotImplemented "Instruction LDUR not yet implemented."
	440 NotImplemented "Instruction CMP not yet implemented."
	441 Subtract X9, X9, 1
	442 Add X10, X10, 16
	443 Move X0, X20
	444 Move W2, W31
	445 Call 0x1C5D788
	446 Move X8, [X9+32]
	447 Move X0, X22
	448 Move X1, X20
	449 Move X8, [X8+192]
	450 Move X2, [X8+112]
	451 Call List`1<Object>.AddWithResize, X0, X1
	452 Move X8, [X21]
	453 Move X0, X21
	454 Move X9, [X8+424]
	455 Move X1, [X8+432]
	456 NotImplemented "Instruction BLR not yet implemented."
	457 Move X8, 0xA4B000
	458 Move X8, [X8+1976]
	459 Move X2, X31
	460 Move X1, [X8]
	461 Call String.Concat, X0, X1
	462 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	463 Move X21, 0xA4B000
	464 Move X21, [X21+2560]
	465 Move X20, X0
	466 Move X8, [X21]
	467 Move W9, [X8+224]
	468 Compare W9, 0
	469 JumpIfNotEqual {473}
	470 Move X0, X8
	471 Call 0x1C17DFC
	472 Move X8, [X21]
	473 Move X9, 0x9FE000
	474 Move X8, [X8+184]
	475 Move X9, [X9+1728]
	476 Move X0, [X9]
	477 Move X9, 0xA26000
	478 Move X9, [X9+2688]
	479 Move X21, [X8]
	480 Move W8, [X0+224]
	481 Move X22, [X9]
	482 Compare W8, 0
	483 JumpIfNotEqual {485}
	484 Call 0x1C17DFC
	485 Move X0, X22
	486 Move X1, X31
	487 Call Type.GetTypeFromHandle, X0
	488 Compare X21, 0
	489 JumpIfEqual {553}
	490 Move X8, 0xA4B000
	491 Move X8, [X8+2776]
	492 Move X1, X0
	493 Move X0, X21
	494 Move X2, [X8]
	495 Call Dictionary`2<Object, PropertyDescriptor>.get_Item, X0, X1
	496 Compare X19, 0
	497 JumpIfEqual {553}
	498 Move X9, 0xA4B000
	499 Move X9, [X9+2768]
	500 Move W10, [X19+28]
	501 Move X8, [X19+16]
	502 Move X9, [X9]
	503 Add W10, W10, 1
	504 Move [X19+28], W10
	505 Compare X8, 0
	506 JumpIfEqual {553}
	507 NotImplemented "Instruction LDRSW not yet implemented."
	508 Move W11, [X8+24]
	509 Move X2, X0
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Add W9, W10, 1
	512 Add X8, X8, X10
	513 Move [X19+24], W9
	514 Move [X8+32], X20
	515 Move [X8+40], X2
	516 Move X8, [X9+32]
	517 Move X0, X19
	518 Move X1, X20
	519 Move X8, [X8+192]
	520 Move X3, [X8+112]
	521 Call List`1<Property>.AddWithResize, X0, X1
	522 NotImplemented "Instruction LDRSW not yet implemented."
	523 Add X8, X8, X9
	524 Add X0, X8, 312
	525 Move X8, [X0]
	526 Move X1, [X0+8]
	527 Move X0, X20
	528 NotImplemented "Instruction BLR not yet implemented."
	529 Compare X21, 0
	530 JumpIfNotEqual {566}
	531 Compare W19, 0
	532 JumpIfEqual {534}
	533 Move W8, W31
	534 Move W8, 1
	535 Move X20, [X31+96]
	536 Move X19, [X31+104]
	537 Move X22, [X31+80]
	538 Move X21, [X31+88]
	539 Move X24, [X31+64]
	540 Move X23, [X31+72]
	541 Move X26, [X31+48]
	542 Move X25, [X31+56]
	543 Move X28, [X31+32]
	544 Move X27, [X31+40]
	545 Move X29, [X31+16]
	546 Move X30, [X31+24]
	547 Move W0, W8
	548 Add X31, X31, 112
	549 Return X0
	550 Call 0x1C17F20
	551 Call 0x1C17F20
	552 Call 0x1C17F20
	553 Call 0x1C17F20
	554 Call 0x1C17F20
	555 Call 0x1C17F20
	556 Call 0x1C17F20
	557 Call 0x1C17F20
	558 Call 0x1C181E0
	559 Move X0, X25
	560 Move X1, X20
	561 Call 0x1C181E0
	562 Move X0, X25
	563 Move X1, X24
	564 Call 0x1C181E0
	565 Call 0x1C17F20
	566 Move X0, X21
	567 Call 0x1C17F18
	568 Move X19, X0
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Move X0, X19
	571 Call 0x3EB2AD0
	572 Move X21, [X0]
	573 Call 0x3EB2AE0
	574 Move W19, 1
	575 Compare X20, 0
	576 JumpIfNotEqual {430}
	577 Move X21, X31
	578 Move X19, X0
	579 Compare X20, 0
	580 JumpIfEqual {604}
	581 Move X10, 0x9FE000
	582 Move X8, [X20]
	583 Move X10, [X10+3584]
	584 NotImplemented "Instruction LDRH not yet implemented."
	585 Move X1, [X10]
	586 Compare X9, 0
	587 JumpIfEqual {594}
	588 Move X10, [X8+176]
	589 Add X10, X10, 8
	590 NotImplemented "Instruction LDUR not yet implemented."
	591 NotImplemented "Instruction CMP not yet implemented."
	592 Subtract X9, X9, 1
	593 Add X10, X10, 16
	594 Move X0, X20
	595 Move W2, W31
	596 Call 0x1C5D788
	597 NotImplemented "Instruction LDRSW not yet implemented."
	598 Add X8, X8, X9
	599 Add X0, X8, 312
	600 Move X8, [X0]
	601 Move X1, [X0+8]
	602 Move X0, X20
	603 NotImplemented "Instruction BLR not yet implemented."
	604 Compare X21, 0
	605 JumpIfNotEqual {608}
	606 Move X0, X19
	607 Call 0x1D2D690
	608 Move X0, X21
	609 Call 0x1C17F18
	610 Call 0x1991590

Method: System.Boolean ExtractNestedPropertyType(UnityEngine.Animator animator, System.Reflection.FieldInfo field, System.Object data, System.Collections.Generic.List`1<UnityEngine.Transform> syncableTransforms, System.Collections.Generic.List`1<UnityEngine.Animations.Rigging.Property> syncableProperties, System.String namePrefix = )

Disassembly:
	0x036F6894 CBZ X28, 0x36F6B0C
	0x036F6898 ADRP X8, 0xA4A000
	0x036F689C LDR X8, [X8 + 0xB80]
	0x036F68A0 MOV X22, X0
	0x036F68A4 LDR X1, [X8]
	0x036F68A8 MOV X0, X28
	0x036F68AC BL 0x2F7ADE0
	0x036F68B0 CBZ X21, 0x36F6B08
	0x036F68B4 ADRP X9, 0xA4A000
	0x036F68B8 LDR W10, [X21 + 0x1C]
	0x036F68BC LDR X8, [X21 + 0x10]
	0x036F68C0 LDR X9, [X9 + 0xB60]
	0x036F68C4 ADD W10, W10, 0x1
	0x036F68C8 LDR X9, [X9]
	0x036F68CC STR W10, [X21 + 0x1C]
	0x036F68D0 CBZ X8, 0x36F6B04
	0x036F68D4 LDRSW X10, [X21 + 0x18]
	0x036F68D8 LDR W11, [X8 + 0x18]
	0x036F68DC MOV X2, X0
	0x036F68E0 CMP W10, W11
	0x036F68E4 B.CS 0x36F68FC
	0x036F68E8 ADD W9, W10, 0x1
	0x036F68EC ADD X8, X8, X10, 0x4, LSL
	0x036F68F0 STR W9, [X21 + 0x18]
	0x036F68F4 STP X22, X2, [X8 + 0x20]
	0x036F68F8 B 0x36F61A4
	0x036F68FC LDR X8, [X9 + 0x20]
	0x036F6900 LDR X8, [X8 + 0xC0]
	0x036F6904 LDR X3, [X8 + 0x70]
	0x036F6908 MOV X0, X21
	0x036F690C MOV X1, X22
	0x036F6910 BL 0x307CACC
	0x036F6914 B 0x36F61A4
	0x036F6918 MOV X21, X31
	0x036F691C MOVZ W22, 0x11
	0x036F6920 LDR X8, [X31 + 0x18]
	0x036F6924 CBZ X8, 0x36F6990
	0x036F6928 LDR X8, [X8]
	0x036F692C ADRP X10, 0x9FD000
	0x036F6930 LDRH W9, [X8 + 0x12E]
	0x036F6934 LDR X10, [X10 + 0xE00]
	0x036F6938 LDR X1, [X10]
	0x036F693C CBZ X9, 0x36F6960
	0x036F6940 LDR X10, [X8 + 0xB0]
	0x036F6944 ADD X10, X10, 0x8
	0x036F6948 LDUR X11, [X10 - 0x8]
	0x036F694C CMP X11, X1
	0x036F6950 B.EQ 0x36F6974
	0x036F6954 SUBS X9, X9, 0x1
	0x036F6958 ADD X10, X10, 0x10
	0x036F695C B.NE 0x36F6948
	0x036F6960 LDR X23, [X31 + 0x18]
	0x036F6964 MOV W2, W31
	0x036F6968 MOV X0, X23
	0x036F696C BL 0x1C5C788
	0x036F6970 B 0x36F6984
	0x036F6974 LDRSW X9, [X10]
	0x036F6978 LDR X23, [X31 + 0x18]
	0x036F697C ADD X8, X8, X9, 0x4, LSL
	0x036F6980 ADD X0, X8, 0x138
	0x036F6984 LDP X8, X1, [X0]
	0x036F6988 MOV X0, X23
	0x036F698C BLR X8
	0x036F6990 CBNZ X21, 0x36F6B18
	0x036F6994 CMP W22, 0x11
	0x036F6998 B.EQ 0x36F69A0
	0x036F699C CBNZ W22, 0x36F69E0
	0x036F69A0 ADRP X8, 0xA4A000
	0x036F69A4 LDR X8, [X8 + 0xA00]
	0x036F69A8 LDR X0, [X8]
	0x036F69AC LDR W8, [X0 + 0xE0]
	0x036F69B0 CBNZ W8, 0x36F69B8
	0x036F69B4 BL 0x1C16DFC
	0x036F69B8 MOV X0, X20
	0x036F69BC BL 0x36F4690
	0x036F69C0 CBZ X0, 0x36F69E0
	0x036F69C4 MOV X1, X0
	0x036F69C8 LDR X0, [X19]
	0x036F69CC CBZ X0, 0x36F6B10
	0x036F69D0 ADRP X8, 0xA4A000
	0x036F69D4 LDR X8, [X8 + 0xB50]
	0x036F69D8 LDR X2, [X8]
	0x036F69DC BL 0x301C194
	0x036F69E0 LDP X20, X19, [X31 + 0x90]
	0x036F69E4 LDP X22, X21, [X31 + 0x80]
	0x036F69E8 LDP X24, X23, [X31 + 0x70]
	0x036F69EC LDP X26, X25, [X31 + 0x60]
	0x036F69F0 LDP X28, X27, [X31 + 0x50]
	0x036F69F4 LDP X29, X30, [X31 + 0x40]
	0x036F69F8 ADD X31, X31, 0xA0
	0x036F69FC RET
	0x036F6A00 BL 0x1C16F28
	0x036F6A04 BL 0x1C16F28
	0x036F6A08 BL 0x1C16F20
	0x036F6A0C BL 0x1C16F20
	0x036F6A10 CBNZ X22, 0x36F6A18
	0x036F6A14 BL 0x1C16F20
	0x036F6A18 LDR X8, [X22]
	0x036F6A1C LDR X1, [X8 + 0x260]
	0x036F6A20 LDR X9, [X8 + 0x258]
	0x036F6A24 MOV X0, X22
	0x036F6A28 BLR X9
	0x036F6A2C MOV X22, X0
	0x036F6A30 CBNZ X0, 0x36F6A7C
	0x036F6A34 ADRP X0, 0xA4A000
	0x036F6A38 LDR X0, [X0 + 0xB10]
	0x036F6A3C BL 0x1C16D08
	0x036F6A40 MOV X21, X0
	0x036F6A44 MOV X22, X31
	0x036F6A48 B 0x36F6AA0
	0x036F6A4C BL 0x1C16F28
	0x036F6A50 BL 0x1C16F20
	0x036F6A54 BL 0x1C16F20
	0x036F6A58 BL 0x1C16F20
	0x036F6A5C BL 0x1C16F20
	0x036F6A60 BL 0x1C16F20
	0x036F6A64 BL 0x1C16F20
	0x036F6A68 BL 0x1C16F20
	0x036F6A6C BL 0x1C16F20
	0x036F6A70 BL 0x1C16F20
	0x036F6A74 BL 0x1C16F20
	0x036F6A78 BL 0x1C16F20
	0x036F6A7C ADRP X0, 0xA4A000
	0x036F6A80 LDR X0, [X0 + 0xB10]
	0x036F6A84 BL 0x1C16D08
	0x036F6A88 LDR X8, [X22]
	0x036F6A8C MOV X21, X0
	0x036F6A90 LDP X9, X1, [X8 + 0x168]
	0x036F6A94 MOV X0, X22
	0x036F6A98 BLR X9
	0x036F6A9C MOV X22, X0
	0x036F6AA0 ADRP X0, 0xA4A000
	0x036F6AA4 LDR X0, [X0 + 0xB18]
	0x036F6AA8 BL 0x1C16D08
	0x036F6AAC MOV X2, X0
	0x036F6AB0 MOV X0, X21
	0x036F6AB4 MOV X1, X22
	0x036F6AB8 MOV X3, X31
	0x036F6ABC BL 0x32274B8
	0x036F6AC0 MOV X21, X0
	0x036F6AC4 ADRP X0, 0x9FD000
	0x036F6AC8 LDR X0, [X0 + 0xB40]
	0x036F6ACC BL 0x1C16D08
	0x036F6AD0 BL 0x1C16F10
	0x036F6AD4 MOV X22, X0
	0x036F6AD8 MOV X1, X21
	0x036F6ADC MOV X2, X31
	0x036F6AE0 BL 0x3379A44
	0x036F6AE4 ADRP X0, 0xA4A000
	0x036F6AE8 LDR X0, [X0 + 0xBC8]
	0x036F6AEC BL 0x1C16D08
	0x036F6AF0 MOV X1, X0
	0x036F6AF4 MOV X0, X22
	0x036F6AF8 BL 0x1C16DEC
	0x036F6AFC BL 0x1C16F20
	0x036F6B00 BL 0x1C16F20
	0x036F6B04 BL 0x1C16F20
	0x036F6B08 BL 0x1C16F20
	0x036F6B0C BL 0x1C16F20
	0x036F6B10 BL 0x1C16F20
	0x036F6B14 BL 0x1C16F20
	0x036F6B18 MOV X0, X21
	0x036F6B1C BL 0x1C16F18
	0x036F6B20 B 0x36F6BF8
	0x036F6B24 B 0x36F6BF8
	0x036F6B28 B 0x36F6BF8
	0x036F6B2C B 0x36F6BF8
	0x036F6B30 B 0x36F6BF8
	0x036F6B34 B 0x36F6BF8
	0x036F6B38 B 0x36F6BF8
	0x036F6B3C B 0x36F6BF8
	0x036F6B40 B 0x36F6BF8
	0x036F6B44 B 0x36F6BF8
	0x036F6B48 B 0x36F6BF8
	0x036F6B4C B 0x36F6BF8
	0x036F6B50 B 0x36F6BF8
	0x036F6B54 B 0x36F6BF8
	0x036F6B58 B 0x36F6BF8
	0x036F6B5C B 0x36F6BF8
	0x036F6B60 B 0x36F6BF8
	0x036F6B64 B 0x36F6BF8
	0x036F6B68 B 0x36F6BF8
	0x036F6B6C B 0x36F6BF8
	0x036F6B70 B 0x36F6BF8
	0x036F6B74 B 0x36F6BF8
	0x036F6B78 B 0x36F6BF8
	0x036F6B7C B 0x36F6BF8
	0x036F6B80 B 0x36F6BF8
	0x036F6B84 B 0x36F6BF8
	0x036F6B88 B 0x36F6BF8
	0x036F6B8C B 0x36F6BF8
	0x036F6B90 B 0x36F6BF8
	0x036F6B94 B 0x36F6BF8
	0x036F6B98 B 0x36F6BF8
	0x036F6B9C B 0x36F6BF8
	0x036F6BA0 B 0x36F6BF8
	0x036F6BA4 B 0x36F6BF8
	0x036F6BA8 B 0x36F6BF8
	0x036F6BAC B 0x36F6BF8
	0x036F6BB0 B 0x36F6BF8
	0x036F6BB4 B 0x36F6BF8
	0x036F6BB8 B 0x36F6BF8
	0x036F6BBC B 0x36F6BF8
	0x036F6BC0 B 0x36F6BF8
	0x036F6BC4 B 0x36F6BF8
	0x036F6BC8 B 0x36F6BF8
	0x036F6BCC B 0x36F6BF8
	0x036F6BD0 B 0x36F6BF8
	0x036F6BD4 B 0x36F6BF8
	0x036F6BD8 B 0x36F6BF8
	0x036F6BDC B 0x36F6BF8
	0x036F6BE0 B 0x36F6BF8
	0x036F6BE4 B 0x36F6BF8
	0x036F6BE8 B 0x36F6BF8
	0x036F6BEC B 0x36F6BF8
	0x036F6BF0 B 0x36F6BF8
	0x036F6BF4 B 0x36F6BF8
	0x036F6BF8 MOV X22, X0
	0x036F6BFC CMP W1, 0x1
	0x036F6C00 B.NE 0x36F6C1C
	0x036F6C04 MOV X0, X22
	0x036F6C08 BL 0x3EB1AD0
	0x036F6C0C LDR X21, [X0]
	0x036F6C10 BL 0x3EB1AE0
	0x036F6C14 MOV W22, W31
	0x036F6C18 B 0x36F6920
	0x036F6C1C MOV X21, X31
	0x036F6C20 B 0x36F6C28
	0x036F6C24 MOV X22, X0
	0x036F6C28 LDR X8, [X31 + 0x18]
	0x036F6C2C CBZ X8, 0x36F6C94
	0x036F6C30 LDR X8, [X31 + 0x18]
	0x036F6C34 ADRP X10, 0x9FD000
	0x036F6C38 LDR X8, [X8]
	0x036F6C3C LDRH W9, [X8 + 0x12E]
	0x036F6C40 LDR X10, [X10 + 0xE00]
	0x036F6C44 LDR X1, [X10]
	0x036F6C48 CBZ X9, 0x36F6C6C
	0x036F6C4C LDR X10, [X8 + 0xB0]
	0x036F6C50 ADD X10, X10, 0x8
	0x036F6C54 LDUR X11, [X10 - 0x8]
	0x036F6C58 CMP X11, X1
	0x036F6C5C B.EQ 0x36F6C7C
	0x036F6C60 SUBS X9, X9, 0x1
	0x036F6C64 ADD X10, X10, 0x10
	0x036F6C68 B.NE 0x36F6C54
	0x036F6C6C LDR X0, [X31 + 0x18]
	0x036F6C70 MOV W2, W31
	0x036F6C74 BL 0x1C5C788
	0x036F6C78 B 0x36F6C88
	0x036F6C7C LDRSW X9, [X10]
	0x036F6C80 ADD X8, X8, X9, 0x4, LSL
	0x036F6C84 ADD X0, X8, 0x138
	0x036F6C88 LDP X8, X1, [X0]
	0x036F6C8C LDR X0, [X31 + 0x18]
	0x036F6C90 BLR X8
	0x036F6C94 CBNZ X21, 0x36F6CA0
	0x036F6C98 MOV X0, X22
	0x036F6C9C BL 0x1D2C690
	0x036F6CA0 MOV X0, X21
	0x036F6CA4 BL 0x1C16F18
	0x036F6CA8 BL 0x1990590
	0x036F6CAC SUB X31, X31, 0x80
	0x036F6CB0 STR X30, [X31 + 0x50]
	0x036F6CB4 STP X22, X21, [X31 + 0x60]
	0x036F6CB8 STP X20, X19, [X31 + 0x70]
	0x036F6CBC ADRP X22, 0xCEA000
	0x036F6CC0 ADRP X21, 0xA4A000
	0x036F6CC4 LDRB W8, [X22 + 0xBA8]
	0x036F6CC8 LDR X21, [X21 + 0xA00]
	0x036F6CCC MOV X19, X1
	0x036F6CD0 MOV X20, X0
	0x036F6CD4 TBNZ X8, 0x0, 0x36F6D1C
	0x036F6CD8 ADRP X0, 0xA4A000
	0x036F6CDC LDR X0, [X0 + 0xA48]
	0x036F6CE0 BL 0x1C16CF4
	0x036F6CE4 ADRP X0, 0xA4A000
	0x036F6CE8 LDR X0, [X0 + 0x8D0]
	0x036F6CEC BL 0x1C16CF4
	0x036F6CF0 ADRP X0, 0xA4A000
	0x036F6CF4 LDR X0, [X0 + 0xBD0]
	0x036F6CF8 BL 0x1C16CF4
	0x036F6CFC ADRP X0, 0xA4A000
	0x036F6D00 LDR X0, [X0 + 0xBD8]
	0x036F6D04 BL 0x1C16CF4
	0x036F6D08 ADRP X0, 0xA4A000
	0x036F6D0C LDR X0, [X0 + 0xA00]
	0x036F6D10 BL 0x1C16CF4
	0x036F6D14 MOVZ W8, 0x1
	0x036F6D18 STRB W8, [X22 + 0xBA8]
	0x036F6D1C LDR X0, [X21]
	0x036F6D20 STR X31, [X31 + 0x58]
	0x036F6D24 STR X31, [X31 + 0x48]
	0x036F6D28 LDR W8, [X0 + 0xE0]
	0x036F6D2C CBNZ W8, 0x36F6D34
	0x036F6D30 BL 0x1C16DFC
	0x036F6D34 ADD X2, X31, 0x58
	0x036F6D38 ADD X3, X31, 0x48
	0x036F6D3C MOV X0, X20
	0x036F6D40 MOV X1, X19
	0x036F6D44 BL 0x36F5E80
	0x036F6D48 LDR X0, [X31 + 0x58]
	0x036F6D4C CBZ X0, 0x36F6E34
	0x036F6D50 ADRP X8, 0xA4A000
	0x036F6D54 LDR X8, [X8 + 0x8D0]
	0x036F6D58 LDR X1, [X8]
	0x036F6D5C BL 0x301DDC4
	0x036F6D60 LDR X8, [X31 + 0x48]
	0x036F6D64 CBZ X8, 0x36F6E34
	0x036F6D68 ADRP X9, 0xA4A000
	0x036F6D6C LDR X9, [X9 + 0xBD0]
	0x036F6D70 MOV X20, X0
	0x036F6D74 MOV X0, X8
	0x036F6D78 LDR X1, [X9]
	0x036F6D7C BL 0x307E994
	0x036F6D80 CBZ X19, 0x36F6E34
	0x036F6D84 ADRP X10, 0xA4A000
	0x036F6D88 LDR X8, [X19]
	0x036F6D8C LDR X10, [X10 + 0xA48]
	0x036F6D90 ADRP X22, 0xA4A000
	0x036F6D94 MOV X21, X0
	0x036F6D98 LDRH W9, [X8 + 0x12E]
	0x036F6D9C LDR X1, [X10]
	0x036F6DA0 LDR X22, [X22 + 0xBD8]
	0x036F6DA4 CBZ X9, 0x36F6DC8
	0x036F6DA8 LDR X10, [X8 + 0xB0]
	0x036F6DAC ADD X10, X10, 0x8
	0x036F6DB0 LDUR X11, [X10 - 0x8]
	0x036F6DB4 CMP X11, X1
	0x036F6DB8 B.EQ 0x36F6DD8
	0x036F6DBC SUBS X9, X9, 0x1
	0x036F6DC0 ADD X10, X10, 0x10
	0x036F6DC4 B.NE 0x36F6DB0
	0x036F6DC8 MOV X0, X19
	0x036F6DCC MOV W2, W31
	0x036F6DD0 BL 0x1C5C788
	0x036F6DD4 B 0x36F6DE4
	0x036F6DD8 LDRSW X9, [X10]
	0x036F6DDC ADD X8, X8, X9, 0x4, LSL
	0x036F6DE0 ADD X0, X8, 0x138
	0x036F6DE4 LDP X8, X1, [X0]
	0x036F6DE8 MOV X0, X19
	0x036F6DEC BLR X8
	0x036F6DF0 MOV W3, W0
	0x036F6DF4 MOVI V0.2D, 0x0
	0x036F6DF8 ADD X0, X31, 0x20
	0x036F6DFC MOV X1, X20
	0x036F6E00 MOV X2, X21
	0x036F6E04 STP V0, V0, [X31 + 0x20]
	0x036F6E08 BL 0x36F6E38
	0x036F6E0C LDP V0, V1, [X31 + 0x20]
	0x036F6E10 LDR X0, [X22]
	0x036F6E14 ADD X1, X31, 0x0
	0x036F6E18 STP V0, V1, [X31]
	0x036F6E1C BL 0x1C16E04
	0x036F6E20 LDP X20, X19, [X31 + 0x70]
	0x036F6E24 LDP X22, X21, [X31 + 0x60]
	0x036F6E28 LDR X30, [X31 + 0x50]
	0x036F6E2C ADD X31, X31, 0x80
	0x036F6E30 RET
	0x036F6E34 BL 0x1C16F20
	0x036F6E38 STP X30, X27, [X31 - 0x50]!
	0x036F6E3C STP X26, X25, [X31 + 0x10]
	0x036F6E40 STP X24, X23, [X31 + 0x20]
	0x036F6E44 STP X22, X21, [X31 + 0x30]
	0x036F6E48 STP X20, X19, [X31 + 0x40]
	0x036F6E4C ADRP X23, 0xCEA000
	0x036F6E50 LDRB W8, [X23 + 0xBAB]
	0x036F6E54 MOV W20, W3
	0x036F6E58 MOV X21, X2
	0x036F6E5C MOV X22, X1
	0x036F6E60 MOV X19, X0
	0x036F6E64 TBNZ X8, 0x0, 0x36F6E88
	0x036F6E68 ADRP X0, 0x9FF000
	0x036F6E6C LDR X0, [X0 + 0x9B8]
	0x036F6E70 BL 0x1C16CF4
	0x036F6E74 ADRP X0, 0xA04000
	0x036F6E78 LDR X0, [X0 + 0x708]
	0x036F6E7C BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X25, 0xCEB000
	014 Move W8, [X25+2980]
	015 Move X19, X5
	016 Move X21, X4
	017 Move X22, X3
	018 Move X24, X2
	019 Move X20, X1
	020 Move X23, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {57}
	025 Move X0, 0xA27000
	026 Move X0, [X0+3424]
	027 Call 0x1C17CF4
	028 Move X0, 0xA27000
	029 Move X0, [X0+3432]
	030 Call 0x1C17CF4
	031 Move X0, 0x9FE000
	032 Move X0, [X0+3584]
	033 Call 0x1C17CF4
	034 Move X0, 0xA29000
	035 Move X0, [X0+3032]
	036 Call 0x1C17CF4
	037 Move X0, 0xA29000
	038 Move X0, [X0+3040]
	039 Call 0x1C17CF4
	040 Move X0, 0x9FE000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move X0, 0xA4B000
	044 Move X0, [X0+2560]
	045 Call 0x1C17CF4
	046 Move X0, 0xA4B000
	047 Move X0, [X0+2816]
	048 Call 0x1C17CF4
	049 Move X0, 0xA4B000
	050 Move X0, [X0+2824]
	051 Call 0x1C17CF4
	052 Move X0, 0xA07000
	053 Move X0, [X0+1936]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X25+2980], W8
	057 Compare X20, 0
	058 JumpIfEqual {330}
	059 Move X8, [X20]
	060 Move X25, 0xA07000
	061 Move X0, X20
	062 Move X9, [X8+600]
	063 Move X1, [X8+608]
	064 Move X25, [X25+1936]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, [X20]
	067 Move X26, X0
	068 Move X0, X20
	069 Move X1, X24
	070 Move X9, [X8+712]
	071 Move X2, [X8+720]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, [X20]
	074 Move X24, X0
	075 Move X0, X20
	076 Move X9, [X8+424]
	077 Move X1, [X8+432]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X2, [X25]
	080 Move X1, X0
	081 Move X0, X19
	082 Move X3, X31
	083 Call String.Concat, X0, X1, X2
	084 Compare X26, 0
	085 JumpIfEqual {330}
	086 Move X25, X0
	087 Move X0, X26
	088 Move X1, X31
	089 Call Type.get_IsValueType, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {101}
	094 Move X0, X26
	095 Move X1, X31
	096 Call Type.get_IsPrimitive, X0
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {102}
	101 Move W0, W31
	102 Move X8, [X26]
	103 Move W1, 52
	104 Move X0, X26
	105 Move X9, [X8+1672]
	106 Move X2, [X8+1680]
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X28, 0xA4B000
	109 Move X28, [X28+2824]
	110 Move X19, X0
	111 Move X8, [X28]
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {118}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X8, [X28]
	118 Move X9, [X8+184]
	119 Move X26, [X9+8]
	120 Compare X26, 0
	121 JumpIfNotEqual {144}
	122 Move W9, [X8+224]
	123 Compare W9, 0
	124 JumpIfNotEqual {128}
	125 Move X0, X8
	126 Call 0x1C17DFC
	127 Move X8, [X28]
	128 Move X9, 0xA27000
	129 Move X8, [X8+184]
	130 Move X9, [X9+3432]
	131 Move X27, [X8]
	132 Move X0, [X9]
	133 Call 0x1C17F10
	134 Move X8, 0xA4B000
	135 Move X8, [X8+2816]
	136 Move X1, X27
	137 Move X3, X31
	138 Move X26, X0
	139 Move X2, [X8]
	140 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	141 Move X8, [X28]
	142 Move X8, [X8+184]
	143 Move [X8+8], X26
	144 Move X8, 0xA27000
	145 Move X8, [X8+3424]
	146 Move X0, X19
	147 Move X1, X26
	148 Move X2, [X8]
	149 Call Enumerable.Where, X0, X1
	150 Compare X0, 0
	151 JumpIfEqual {330}
	152 Move X10, 0xA29000
	153 Move X8, [X0]
	154 Move X10, [X10+3032]
	155 Move X19, X0
	156 NotImplemented "Instruction LDRH not yet implemented."
	157 Move X1, [X10]
	158 Compare X9, 0
	159 JumpIfEqual {166}
	160 Move X10, [X8+176]
	161 Add X10, X10, 8
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract X9, X9, 1
	165 Add X10, X10, 16
	166 Move X0, X19
	167 Move W2, W31
	168 Call 0x1C5D788
	169 NotImplemented "Instruction LDRSW not yet implemented."
	170 Add X8, X8, X9
	171 Add X0, X8, 312
	172 Move X8, [X0]
	173 Move X1, [X0+8]
	174 Move X0, X19
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X19, X0
	177 Compare X0, 0
	178 JumpIfEqual {364}
	179 Move X27, 0x9FE000
	180 Move X28, 0xA29000
	181 Move X29, 0xA4B000
	182 Move X27, [X27+3608]
	183 Move X28, [X28+3040]
	184 Move X29, [X29+2560]
	185 Move X8, [X19]
	186 Move X1, [X27]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move X0, X19
	197 Move W2, W31
	198 Call 0x1C5D788
	199 NotImplemented "Instruction LDRSW not yet implemented."
	200 Add X8, X8, X9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X19
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {288}
	210 Move X8, [X19]
	211 Move X1, [X28]
	212 NotImplemented "Instruction LDRH not yet implemented."
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move X0, X19
	222 Move W2, W31
	223 Call 0x1C5D788
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Add X8, X8, X9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X1, [X0+8]
	229 Move X0, X19
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move X26, X0
	232 Move X0, [X29]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {237}
	236 Call 0x1C17DFC
	237 Move X0, X23
	238 Move X1, X26
	239 Move X2, X24
	240 Move X3, X22
	241 Call RigUtils.ExtractTransformType, X0, X1, X2, X3
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfEqual {185}
	246 Move X0, [X29]
	247 Move W8, [X0+224]
	248 Compare W8, 0
	249 JumpIfNotEqual {251}
	250 Call 0x1C17DFC
	251 Move X0, X26
	252 Move X2, X21
	253 Move X3, X25
	254 Call RigUtils.ExtractPropertyType, X0, X1, X2, X3
	255 Move TEMP, X0
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfEqual {185}
	259 Move X0, [X29]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {264}
	263 Call 0x1C17DFC
	264 Move X0, X23
	265 Move X1, X26
	266 Move X2, X24
	267 Move X3, X22
	268 Move X4, X21
	269 Move X5, X25
	270 Call RigUtils.ExtractNestedPropertyType, X0, X1, X2, X3, X4, X5
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfEqual {185}
	275 Move X8, [X20]
	276 Move X1, [X8+608]
	277 Move X9, [X8+600]
	278 Move X0, X20
	279 NotImplemented "Instruction BLR not yet implemented."
	280 Move X21, X0
	281 Compare X0, 0
	282 JumpIfNotEqual {331}
	283 Move X0, 0xA4B000
	284 Move X0, [X0+2832]
	285 Call 0x1C17D08
	286 Move X20, X0
	287 Move X21, X31
	288 Move X21, X31
	289 Compare X19, 0
	290 JumpIfEqual {314}
	291 Move X10, 0x9FE000
	292 Move X8, [X19]
	293 Move X10, [X10+3584]
	294 NotImplemented "Instruction LDRH not yet implemented."
	295 Move X1, [X10]
	296 Compare X9, 0
	297 JumpIfEqual {304}
	298 Move X10, [X8+176]
	299 Add X10, X10, 8
	300 NotImplemented "Instruction LDUR not yet implemented."
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Subtract X9, X9, 1
	303 Add X10, X10, 16
	304 Move X0, X19
	305 Move W2, W31
	306 Call 0x1C5D788
	307 NotImplemented "Instruction LDRSW not yet implemented."
	308 Add X8, X8, X9
	309 Add X0, X8, 312
	310 Move X8, [X0]
	311 Move X1, [X0+8]
	312 Move X0, X19
	313 NotImplemented "Instruction BLR not yet implemented."
	314 Compare X21, 0
	315 JumpIfNotEqual {365}
	316 Move W0, 1
	317 Move X20, [X31+80]
	318 Move X19, [X31+88]
	319 Move X22, [X31+64]
	320 Move X21, [X31+72]
	321 Move X24, [X31+48]
	322 Move X23, [X31+56]
	323 Move X26, [X31+32]
	324 Move X25, [X31+40]
	325 Move X28, [X31+16]
	326 Move X27, [X31+24]
	327 Move X29, [X31+96]
	328 Move X30, [X31+104]
	329 Return X0
	330 Call 0x1C17F20
	331 Move X0, 0xA4B000
	332 Move X0, [X0+2832]
	333 Call 0x1C17D08
	334 Move X8, [X21]
	335 Move X20, X0
	336 Move X9, [X8+360]
	337 Move X1, [X8+368]
	338 Move X0, X21
	339 NotImplemented "Instruction BLR not yet implemented."
	340 Move X21, X0
	341 Move X0, 0xA4B000
	342 Move X0, [X0+2840]
	343 Call 0x1C17D08
	344 Move X2, X0
	345 Move X0, X20
	346 Move X1, X21
	347 Move X3, X31
	348 Call String.Concat, X0, X1, X2
	349 Move X20, X0
	350 Move X0, 0x9FE000
	351 Move X0, [X0+2880]
	352 Call 0x1C17D08
	353 Call 0x1C17F10
	354 Move X21, X0
	355 Move X1, X20
	356 Move X2, X31
	357 Call NotSupportedException..ctor, X0, X1
	358 Move X0, 0xA4B000
	359 Move X0, [X0+2848]
	360 Call 0x1C17D08
	361 Move X1, X0
	362 Move X0, X21
	363 Call 0x1C17DEC
	364 Call 0x1C17F20
	365 Move X0, X21
	366 Call 0x1C17F18
	367 Move X20, X0
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Move X0, X20
	370 Call 0x3EB2AD0
	371 Move X21, [X0]
	372 Call 0x3EB2AE0
	373 Move X21, X31
	374 Move X20, X0
	375 Compare X19, 0
	376 JumpIfEqual {400}
	377 Move X10, 0x9FE000
	378 Move X8, [X19]
	379 Move X10, [X10+3584]
	380 NotImplemented "Instruction LDRH not yet implemented."
	381 Move X1, [X10]
	382 Compare X9, 0
	383 JumpIfEqual {390}
	384 Move X10, [X8+176]
	385 Add X10, X10, 8
	386 NotImplemented "Instruction LDUR not yet implemented."
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Subtract X9, X9, 1
	389 Add X10, X10, 16
	390 Move X0, X19
	391 Move W2, W31
	392 Call 0x1C5D788
	393 NotImplemented "Instruction LDRSW not yet implemented."
	394 Add X8, X8, X9
	395 Add X0, X8, 312
	396 Move X8, [X0]
	397 Move X1, [X0+8]
	398 Move X0, X19
	399 NotImplemented "Instruction BLR not yet implemented."
	400 Compare X21, 0
	401 JumpIfNotEqual {404}
	402 Move X0, X20
	403 Call 0x1D2D690
	404 Move X0, X21
	405 Call 0x1C17F18
	406 Call 0x1991590

Method: System.Void ExtractAllSyncableData(UnityEngine.Animator animator, System.Collections.Generic.IList`1<UnityEngine.Animations.Rigging.IRigLayer> layers, out System.Collections.Generic.List`1<UnityEngine.Transform> syncableTransforms, out System.Collections.Generic.List`1<UnityEngine.Animations.Rigging.SyncableProperties> syncableProperties)

Disassembly:
	0x036F6E80 MOVZ W8, 0x1
	0x036F6E84 STRB W8, [X23 + 0xBAB]
	0x036F6E88 CBZ X22, 0x36F6EBC
	0x036F6E8C LDR X8, [X22 + 0x18]
	0x036F6E90 CBZ X8, 0x36F6EBC
	0x036F6E94 MOV X0, X22
	0x036F6E98 BL 0x36F7350
	0x036F6E9C CBZ X0, 0x36F6FD0
	0x036F6EA0 LDR W1, [X0 + 0x18]
	0x036F6EA4 LDR W8, [X22 + 0x18]
	0x036F6EA8 MOV X23, X0
	0x036F6EAC CMP W1, W8
	0x036F6EB0 B.NE 0x36F6F38
	0x036F6EB4 STR X22, [X19]
	0x036F6EB8 B 0x36F6EC0
	0x036F6EBC STR X31, [X19]
	0x036F6EC0 CMP W20, 0x1
	0x036F6EC4 STR X21, [X19 + 0x8]
	0x036F6EC8 B.LT 0x36F6EE4
	0x036F6ECC ADRP X8, 0x9FF000
	0x036F6ED0 LDR X8, [X8 + 0x9B8]
	0x036F6ED4 MOV W1, W20
	0x036F6ED8 LDR X0, [X8]
	0x036F6EDC BL 0x1C16D6C
	0x036F6EE0 B 0x36F6EE8
	0x036F6EE4 MOV X0, X31
	0x036F6EE8 LDR X8, [X19]
	0x036F6EEC STR X0, [X19 + 0x10]
	0x036F6EF0 CBZ X8, 0x36F6EFC
	0x036F6EF4 LDR X8, [X8 + 0x18]
	0x036F6EF8 CBNZ X8, 0x36F6F0C
	0x036F6EFC LDR X8, [X19 + 0x8]
	0x036F6F00 CBZ X8, 0x36F6F14
	0x036F6F04 LDR X8, [X8 + 0x18]
	0x036F6F08 CBZ X8, 0x36F6F14
	0x036F6F0C MOVZ W8, 0x1
	0x036F6F10 B 0x36F6F1C
	0x036F6F14 CMP X0, 0x0
	0x036F6F18 CSET W8, NE
	0x036F6F1C STRB W8, [X19 + 0x18]
	0x036F6F20 LDP X20, X19, [X31 + 0x40]
	0x036F6F24 LDP X22, X21, [X31 + 0x30]
	0x036F6F28 LDP X24, X23, [X31 + 0x20]
	0x036F6F2C LDP X26, X25, [X31 + 0x10]
	0x036F6F30 LDP X30, X27, [X31], #0x50
	0x036F6F34 RET
	0x036F6F38 ADRP X8, 0xA04000
	0x036F6F3C LDR X8, [X8 + 0x708]
	0x036F6F40 LDR X0, [X8]
	0x036F6F44 BL 0x1C16D6C
	0x036F6F48 STR X0, [X19]
	0x036F6F4C LDR W8, [X23 + 0x18]
	0x036F6F50 CMP W8, 0x1
	0x036F6F54 B.LT 0x36F6EC0
	0x036F6F58 MOV X24, X0
	0x036F6F5C MOV X26, X31
	0x036F6F60 ADD X27, X23, 0x20
	0x036F6F64 LDRSW X8, [X27, X26, LSL #2]
	0x036F6F68 LDR W9, [X22 + 0x18]
	0x036F6F6C CMP W8, W9
	0x036F6F70 B.CS 0x36F6FCC
	0x036F6F74 CBZ X24, 0x36F6FD0
	0x036F6F78 ADD X8, X22, X8, 0x3, LSL
	0x036F6F7C LDR X25, [X8 + 0x20]
	0x036F6F80 CBZ X25, 0x36F6F98
	0x036F6F84 LDR X8, [X24]
	0x036F6F88 MOV X0, X25
	0x036F6F8C LDR X1, [X8 + 0x40]
	0x036F6F90 BL 0x1C16E00
	0x036F6F94 CBZ X0, 0x36F6FD4
	0x036F6F98 LDR W8, [X24 + 0x18]
	0x036F6F9C CMP W26, W8
	0x036F6FA0 B.CS 0x36F6FCC
	0x036F6FA4 ADD X8, X24, X26, 0x3, LSL
	0x036F6FA8 STR X25, [X8 + 0x20]
	0x036F6FAC LDR W8, [X23 + 0x18]
	0x036F6FB0 ADD W9, W26, 0x1
	0x036F6FB4 CMP W9, W8
	0x036F6FB8 B.GE 0x36F6EC0
	0x036F6FBC LDR X24, [X19]
	0x036F6FC0 ADD X26, X26, 0x1
	0x036F6FC4 CMP W26, W8
	0x036F6FC8 B.CC 0x36F6F64
	0x036F6FCC BL 0x1C16F28
	0x036F6FD0 BL 0x1C16F20
	0x036F6FD4 BL 0x1C16F44
	0x036F6FD8 MOV X1, X31
	0x036F6FDC BL 0x1C16DEC
	0x036F6FE0 STR X30, [X31 - 0x20]!
	0x036F6FE4 STP X20, X19, [X31 + 0x10]
	0x036F6FE8 ADRP X20, 0xCEA000
	0x036F6FEC ADRP X19, 0xA4A000
	0x036F6FF0 LDRB W8, [X20 + 0xBA9]
	0x036F6FF4 LDR X19, [X19 + 0xA00]
	0x036F6FF8 TBNZ X8, 0x0, 0x36F7010
	0x036F6FFC ADRP X0, 0xA4A000
	0x036F7000 LDR X0, [X0 + 0xA00]
	0x036F7004 BL 0x1C16CF4
	0x036F7008 MOVZ W8, 0x1
	0x036F700C STRB W8, [X20 + 0xBA9]
	0x036F7010 LDR X0, [X19]
	0x036F7014 LDR W8, [X0 + 0xE0]
	0x036F7018 CBNZ W8, 0x36F7024
	0x036F701C BL 0x1C16DFC
	0x036F7020 LDR X0, [X19]
	0x036F7024 LDR X8, [X0 + 0xB8]
	0x036F7028 LDP X20, X19, [X31 + 0x10]
	0x036F702C LDR X0, [X8 + 0x8]
	0x036F7030 LDR X30, [X31], #0x20
	0x036F7034 RET
	0x036F7038 STP X29, X30, [X31 - 0x60]!
	0x036F703C STP X28, X27, [X31 + 0x10]
	0x036F7040 STP X26, X25, [X31 + 0x20]
	0x036F7044 STP X24, X23, [X31 + 0x30]
	0x036F7048 STP X22, X21, [X31 + 0x40]
	0x036F704C STP X20, X19, [X31 + 0x50]
	0x036F7050 ADRP X22, 0xCE9000
	0x036F7054 ADRP X23, 0xA49000
	0x036F7058 ADRP X19, 0xA49000
	0x036F705C ADRP X20, 0xA24000
	0x036F7060 ADRP X21, 0x9FC000
	0x036F7064 LDRB W8, [X22 + 0xBAA]
	0x036F7068 LDR X23, [X23 + 0xBE0]
	0x036F706C LDR X19, [X19 + 0xBE8]
	0x036F7070 LDR X20, [X20 + 0xA80]
	0x036F7074 LDR X21, [X21 + 0x6C0]
	0x036F7078 TBNZ X8, 0x0, 0x36F7144
	0x036F707C ADRP X0, 0xA25000
	0x036F7080 LDR X0, [X0 + 0x248]
	0x036F7084 BL 0x1C16CF4
	0x036F7088 ADRP X0, 0xA49000
	0x036F708C LDR X0, [X0 + 0xBF0]
	0x036F7090 BL 0x1C16CF4
	0x036F7094 ADRP X0, 0xA49000
	0x036F7098 LDR X0, [X0 + 0xBE8]
	0x036F709C BL 0x1C16CF4
	0x036F70A0 ADRP X0, 0xA49000
	0x036F70A4 LDR X0, [X0 + 0xBE0]
	0x036F70A8 BL 0x1C16CF4
	0x036F70AC ADRP X0, 0xA23000
	0x036F70B0 LDR X0, [X0 + 0xD80]
	0x036F70B4 BL 0x1C16CF4
	0x036F70B8 ADRP X0, 0xA04000
	0x036F70BC LDR X0, [X0 + 0xEE8]
	0x036F70C0 BL 0x1C16CF4
	0x036F70C4 ADRP X0, 0xA49000
	0x036F70C8 LDR X0, [X0 + 0xBF8]
	0x036F70CC BL 0x1C16CF4
	0x036F70D0 ADRP X0, 0xA49000
	0x036F70D4 LDR X0, [X0 + 0xC00]
	0x036F70D8 BL 0x1C16CF4
	0x036F70DC ADRP X0, 0xA49000
	0x036F70E0 LDR X0, [X0 + 0xA00]
	0x036F70E4 BL 0x1C16CF4
	0x036F70E8 ADRP X0, 0xA24000
	0x036F70EC LDR X0, [X0 + 0xA80]
	0x036F70F0 BL 0x1C16CF4
	0x036F70F4 ADRP X0, 0x9FC000
	0x036F70F8 LDR X0, [X0 + 0x6C0]
	0x036F70FC BL 0x1C16CF4
	0x036F7100 ADRP X0, 0xA04000
	0x036F7104 LDR X0, [X0 + 0xEA0]
	0x036F7108 BL 0x1C16CF4
	0x036F710C ADRP X0, 0xA49000
	0x036F7110 LDR X0, [X0 + 0xC08]
	0x036F7114 BL 0x1C16CF4
	0x036F7118 ADRP X0, 0xA49000
	0x036F711C LDR X0, [X0 + 0xC10]
	0x036F7120 BL 0x1C16CF4
	0x036F7124 ADRP X0, 0xA04000
	0x036F7128 LDR X0, [X0 + 0xEF8]
	0x036F712C BL 0x1C16CF4
	0x036F7130 ADRP X0, 0xA25000
	0x036F7134 LDR X0, [X0 + 0x510]
	0x036F7138 BL 0x1C16CF4
	0x036F713C MOVZ W8, 0x1
	0x036F7140 STRB W8, [X22 + 0xBAA]
	0x036F7144 LDR X0, [X23]
	0x036F7148 BL 0x1C16F10
	0x036F714C LDR X1, [X19]
	0x036F7150 MOV X19, X0
	0x036F7154 BL 0x2AAE0F8
	0x036F7158 LDR X0, [X21]
	0x036F715C LDR X20, [X20]
	0x036F7160 LDR W8, [X0 + 0xE0]
	0x036F7164 CBNZ W8, 0x36F716C
	0x036F7168 BL 0x1C16DFC
	0x036F716C MOV X0, X20
	0x036F7170 MOV X1, X31
	0x036F7174 BL 0x338C698
	0x036F7178 CBZ X19, 0x36F734C
	0x036F717C ADRP X23, 0xA49000
	0x036F7180 LDR X23, [X23 + 0xBF0]
	0x036F7184 ADRP X21, 0xA23000
	0x036F7188 ADRP X22, 0xA25000
	0x036F718C ADRP X24, 0xA04000
	0x036F7190 ADRP X28, 0xA04000
	0x036F7194 ADRP X27, 0xA25000
	0x036F7198 ADRP X26, 0xA04000
	0x036F719C ADRP X25, 0xA49000
	0x036F71A0 ADRP X20, 0xA49000
	0x036F71A4 LDR X21, [X21 + 0xD80]
	0x036F71A8 LDR X22, [X22 + 0x248]
	0x036F71AC LDR X24, [X24 + 0xEA0]
	0x036F71B0 LDR X28, [X28 + 0xEF8]
	0x036F71B4 LDR X27, [X27 + 0x510]
	0x036F71B8 LDR X26, [X26 + 0xEE8]
	0x036F71BC LDR X25, [X25 + 0xC10]
	0x036F71C0 LDR X20, [X20 + 0xA00]
	0x036F71C4 LDR X3, [X23]
	0x036F71C8 MOVZ X29, 0x4
	0x036F71CC MOVK X29, 0x2
	0x036F71D0 MOV X1, X0
	0x036F71D4 SUB X2, X29, 0x3
	0x036F71D8 MOV X0, X19
	0x036F71DC BL 0x2AAE98C
	0x036F71E0 LDR X0, [X21]
	0x036F71E4 MOV X1, X31
	0x036F71E8 BL 0x338C698
	0x036F71EC LDR X3, [X23]
	0x036F71F0 MOV X1, X0
	0x036F71F4 ORR X2, X31, 0x100000001
	0x036F71F8 MOV X0, X19
	0x036F71FC BL 0x2AAE98C
	0x036F7200 LDR X0, [X22]
	0x036F7204 MOV X1, X31
	0x036F7208 BL 0x338C698
	0x036F720C LDR X3, [X23]
	0x036F7210 MOV X1, X0
	0x036F7214 MOVZ W2, 0x1
	0x036F7218 MOV X0, X19
	0x036F721C BL 0x2AAE98C
	0x036F7220 LDR X0, [X24]
	0x036F7224 MOV X1, X31
	0x036F7228 BL 0x338C698
	0x036F722C LDR X3, [X23]
	0x036F7230 MOV X1, X0
	0x036F7234 ORR X2, X31, 0x200000002
	0x036F7238 MOV X0, X19
	0x036F723C BL 0x2AAE98C
	0x036F7240 LDR X0, [X28]
	0x036F7244 MOV X1, X31
	0x036F7248 BL 0x338C698
	0x036F724C LDR X3, [X23]
	0x036F7250 MOV X1, X0
	0x036F7254 SUB X2, X29, 0x1
	0x036F7258 MOV X0, X19
	0x036F725C BL 0x2AAE98C
	0x036F7260 LDR X0, [X27]
	0x036F7264 MOV X1, X31
	0x036F7268 BL 0x338C698
	0x036F726C LDR X3, [X23]
	0x036F7270 MOVZ X2, 0x4
	0x036F7274 MOV X1, X0
	0x036F7278 MOVK X2, 0x2
	0x036F727C MOV X0, X19
	0x036F7280 BL 0x2AAE98C
	0x036F7284 LDR X0, [X26]
	0x036F7288 MOV X1, X31
	0x036F728C BL 0x338C698
	0x036F7290 LDR X3, [X23]
	0x036F7294 MOVZ X2, 0x4
	0x036F7298 MOV X1, X0
	0x036F729C MOVK X2, 0x2
	0x036F72A0 MOV X0, X19
	0x036F72A4 BL 0x2AAE98C
	0x036F72A8 LDR X0, [X25]
	0x036F72AC MOV X1, X31
	0x036F72B0 BL 0x338C698
	0x036F72B4 LDR X3, [X23]
	0x036F72B8 MOVZ X2, 0x3
	0x036F72BC MOV X1, X0
	0x036F72C0 MOVK X2, 0x1
	0x036F72C4 MOV X0, X19
	0x036F72C8 BL 0x2AAE98C
	0x036F72CC ADRP X8, 0xA49000
	0x036F72D0 LDR X8, [X8 + 0xC08]
	0x036F72D4 MOV X1, X31
	0x036F72D8 LDR X0, [X8]
	0x036F72DC BL 0x338C698
	0x036F72E0 LDR X3, [X23]
	0x036F72E4 MOV X1, X0
	0x036F72E8 MOVZ W2, 0x3
	0x036F72EC MOV X0, X19
	0x036F72F0 BL 0x2AAE98C
	0x036F72F4 LDR X8, [X20]
	0x036F72F8 LDR X8, [X8 + 0xB8]
	0x036F72FC STR X19, [X8]
	0x036F7300 ADRP X8, 0xA49000
	0x036F7304 LDR X8, [X8 + 0xC00]
	0x036F7308 LDR X0, [X8]
	0x036F730C BL 0x1C16F10
	0x036F7310 ADRP X8, 0xA49000
	0x036F7314 LDR X8, [X8 + 0xBF8]
	0x036F7318 MOV X19, X0
	0x036F731C LDR X1, [X8]
	0x036F7320 BL 0x25CF8E4
	0x036F7324 LDR X8, [X20]
	0x036F7328 LDP X22, X21, [X31 + 0x40]
	0x036F732C LDP X24, X23, [X31 + 0x30]
	0x036F7330 LDP X26, X25, [X31 + 0x20]
	0x036F7334 LDR X8, [X8 + 0xB8]
	0x036F7338 LDP X28, X27, [X31 + 0x10]
	0x036F733C STR X19, [X8 + 0x8]
	0x036F7340 LDP X20, X19, [X31 + 0x50]
	0x036F7344 LDP X29, X30, [X31], #0x60
	0x036F7348 RET
	0x036F734C BL 0x1C16F20
	0x036F7350 STP X30, X25, [X31 - 0x40]!
	0x036F7354 STP X24, X23, [X31 + 0x10]
	0x036F7358 STP X22, X21, [X31 + 0x20]
	0x036F735C STP X20, X19, [X31 + 0x30]
	0x036F7360 ADRP X20, 0xCE9000
	0x036F7364 LDRB W8, [X20 + 0xBAC]
	0x036F7368 MOV X19, X0
	0x036F736C TBNZ X8, 0x0, 0x36F73CC
	0x036F7370 ADRP X0, 0x9FE000
	0x036F7374 LDR X0, [X0 + 0x9D8]
	0x036F7378 BL 0x1C16CF4
	0x036F737C ADRP X0, 0xA03000
	0x036F7380 LDR X0, [X0 + 0x688]
	0x036F7384 BL 0x1C16CF4
	0x036F7388 ADRP X0, 0x9FD000
	0x036F738C LDR X0, [X0 + 0xE08]
	0x036F7390 BL 0x1C16CF4
	0x036F7394 ADRP X0, 0x9FD000
	0x036F7398 LDR X0, [X0 + 0xE10]
	0x036F739C BL 0x1C16CF4
	0x036F73A0 ADRP X0, 0x9FD000
	0x036F73A4 LDR X0, [X0 + 0xE18]
	0x036F73A8 BL 0x1C16CF4
	0x036F73AC ADRP X0, 0x9FD000
	0x036F73B0 LDR X0, [X0 + 0xE20]
	0x036F73B4 BL 0x1C16CF4
	0x036F73B8 ADRP X0, 0x9FD000
	0x036F73BC LDR X0, [X0 + 0xE30]
	0x036F73C0 BL 0x1C16CF4
	0x036F73C4 MOVZ W8, 0x1
	0x036F73C8 STRB W8, [X20 + 0xBAC]
	0x036F73CC CBZ X19, 0x36F7508
	0x036F73D0 LDR X8, [X19 + 0x18]
	0x036F73D4 CBZ X8, 0x36F7508
	0x036F73D8 ADRP X8, 0x9FD000
	0x036F73DC LDR X8, [X8 + 0xE08]
	0x036F73E0 LDR X0, [X8]
	0x036F73E4 BL 0x1C16F10
	0x036F73E8 ADRP X8, 0xA03000
	0x036F73EC LDR X8, [X8 + 0x688]
	0x036F73F0 MOV X20, X0
	0x036F73F4 LDR X1, [X8]
	0x036F73F8 BL 0x2DA9EF4
	0x036F73FC ADRP X8, 0x9FD000
	0x036F7400 LDR X8, [X8 + 0xE30]
	0x036F7404 LDR X0, [X8]
	0x036F7408 BL 0x1C16F10
	0x036F740C ADRP X8, 0x9FD000
	0x036F7410 LDR W1, [X19 + 0x18]
	0x036F7414 LDR X8, [X8 + 0xE20]
	0x036F7418 MOV X21, X0
	0x036F741C LDR X2, [X8]
	0x036F7420 BL 0x2FDBF80
	0x036F7424 LDR W8, [X19 + 0x18]
	0x036F7428 CMP W8, 0x1
	0x036F742C B.LT 0x36F74E0
	0x036F7430 ADRP X24, 0x9FE000
	0x036F7434 ADRP X25, 0x9FD000
	0x036F7438 LDR X24, [X24 + 0x9D8]
	0x036F743C LDR X25, [X25 + 0xE10]
	0x036F7440 MOV X22, X31
	0x036F7444 ADD X23, X19, 0x20
	0x036F7448 CMP W22, W8
	0x036F744C B.CS 0x36F7524
	0x036F7450 LDR X0, [X23, X22, LSL #3]
	0x036F7454 CBZ X0, 0x36F7520
	0x036F7458 MOV X1, X31
	0x036F745C BL 0x3C385F8
	0x036F7460 CBZ X20, 0x36F7520
	0x036F7464 LDR X2, [X24]
	0x036F7468 MOV W1, W0
	0x036F746C MOV X0, X20
	0x036F7470 BL 0x2DAB03C
	0x036F7474 TBZ X0, 0x0, 0x36F74D0
	0x036F7478 CBZ X21, 0x36F7520
	0x036F747C LDR W10, [X21 + 0x1C]
	0x036F7480 LDR X8, [X21 + 0x10]
	0x036F7484 LDR X9, [X25]
	0x036F7488 ADD W10, W10, 0x1
	0x036F748C STR W10, [X21 + 0x1C]
	0x036F7490 CBZ X8, 0x36F7520
	0x036F7494 LDRSW X10, [X21 + 0x18]
	0x036F7498 LDR W11, [X8 + 0x18]
	0x036F749C CMP W10, W11
	0x036F74A0 B.CS 0x36F74B8
	0x036F74A4 ADD W9, W10, 0x1
	0x036F74A8 ADD X8, X8, X10, 0x2, LSL
	0x036F74AC STR W9, [X21 + 0x18]
	0x036F74B0 STR W22, [X8 + 0x20]
	0x036F74B4 B 0x36F74D0
	0x036F74B8 LDR X8, [X9 + 0x20]
	0x036F74BC MOV X0, X21
	0x036F74C0 MOV W1, W22
	0x036F74C4 LDR X8, [X8 + 0xC0]
	0x036F74C8 LDR X2, [X8 + 0x70]
	0x036F74CC BL 0x2FDC70C
	0x036F74D0 LDR W8, [X19 + 0x18]
	0x036F74D4 ADD X22, X22, 0x1
	0x036F74D8 CMP W22, W8
	0x036F74DC B.LT 0x36F7448
	0x036F74E0 CBZ X21, 0x36F7520
	0x036F74E4 ADRP X8, 0x9FD000
	0x036F74E8 LDR X8, [X8 + 0xE18]
	0x036F74EC MOV X0, X21
	0x036F74F0 LDP X20, X19, [X31 + 0x30]
	0x036F74F4 LDP X22, X21, [X31 + 0x20]
	0x036F74F8 LDR X1, [X8]
	0x036F74FC LDP X24, X23, [X31 + 0x10]
	0x036F7500 LDP X30, X25, [X31], #0x40
	0x036F7504 B 0x2FDE4C8
	0x036F7508 LDP X20, X19, [X31 + 0x30]
	0x036F750C LDP X22, X21, [X31 + 0x20]
	0x036F7510 LDP X24, X23, [X31 + 0x10]
	0x036F7514 MOV X0, X31
	0x036F7518 LDP X30, X25, [X31], #0x40
	0x036F751C RET
	0x036F7520 BL 0x1C16F20
	0x036F7524 BL 0x1C16F28
	0x036F7528 LDR X0, [X0]
	0x036F752C RET
	0x036F7530 STR X1, [X0]
	0x036F7534 RET
	0x036F7538 LDR X0, [X0 + 0x8]
	0x036F753C RET
	0x036F7540 STR X1, [X0 + 0x8]
	0x036F7544 RET
	0x036F7548 LDR X0, [X0 + 0x10]
	0x036F754C RET
	0x036F7550 STR X1, [X0 + 0x10]
	0x036F7554 RET
	0x036F7558 LDRB W0, [X0 + 0x18]
	0x036F755C RET
	0x036F7560 STP X31, X31, [X0]
	0x036F7564 STR X31, [X0 + 0x10]
	0x036F7568 RET
	0x036F756C STR X30, [X31 - 0x20]!
	0x036F7570 STP X20, X19, [X31 + 0x10]
	0x036F7574 ADRP X19, 0xCE9000
	0x036F7578 ADRP X20, 0xA49000
	0x036F757C LDRB W8, [X19 + 0xBAD]
	0x036F7580 LDR X20, [X20 + 0xB08]
	0x036F7584 TBNZ X8, 0x0, 0x36F759C
	0x036F7588 ADRP X0, 0xA49000
	0x036F758C LDR X0, [X0 + 0xB08]
	0x036F7590 BL 0x1C16CF4
	0x036F7594 MOVZ W8, 0x1
	0x036F7598 STRB W8, [X19 + 0xBAD]
	0x036F759C LDR X0, [X20]
	0x036F75A0 BL 0x1C16F10
	0x036F75A4 MOV X1, X31
	0x036F75A8 MOV X19, X0
	0x036F75AC BL 0x33BDD8C
	0x036F75B0 LDR X8, [X20]
	0x036F75B4 LDR X8, [X8 + 0xB8]
	0x036F75B8 STR X19, [X8]
	0x036F75BC LDP X20, X19, [X31 + 0x10]
	0x036F75C0 LDR X30, [X31], #0x20
	0x036F75C4 RET
	0x036F75C8 MOV X1, X31
	0x036F75CC B 0x33BDD8C
	0x036F75D0 STP X30, X21, [X31 - 0x20]!
	0x036F75D4 STP X20, X19, [X31 + 0x10]
	0x036F75D8 ADRP X20, 0xCE9000
	0x036F75DC ADRP X21, 0xA49000
	0x036F75E0 LDRB W8, [X20 + 0xBAE]
	0x036F75E4 LDR X21, [X21 + 0xB28]
	0x036F75E8 MOV X19, X1
	0x036F75EC TBNZ X8, 0x0, 0x36F7604
	0x036F75F0 ADRP X0, 0xA49000
	0x036F75F4 LDR X0, [X0 + 0xB28]
	0x036F75F8 BL 0x1C16CF4
	0x036F75FC MOVZ W8, 0x1
	0x036F7600 STRB W8, [X20 + 0xBAE]
	0x036F7604 LDR X1, [X21]
	0x036F7608 MOV X0, X19
	0x036F760C BL 0x21A891C
	0x036F7610 LDP X20, X19, [X31 + 0x10]
	0x036F7614 CMP X0, 0x0
	0x036F7618 CSET W0, NE
	0x036F761C LDP X30, X21, [X31], #0x20
	0x036F7620 RET
	0x036F7624 LDRB W0, [X0 + 0x10]
	0x036F7628 RET
	0x036F762C AND W8, W1, 0x1
	0x036F7630 STRB W8, [X0 + 0x10]
	0x036F7634 RET
	0x036F7638 FMOV S1, 1
	0x036F763C FCMP S0, 0x0
	0x036F7640 FMIN S0, S0, S1
	0x036F7644 FMOV S1, W31
	0x036F7648 FCSEL S0, S0, S1, PL
	0x036F764C STR X1, [X0]
	0x036F7650 STR S0, [X0 + 0x8]
	0x036F7654 RET
	0x036F7658 FMOV S1, 1
	0x036F765C FCMP S0, 0x0
	0x036F7660 FMIN S0, S0, S1
	0x036F7664 FMOV S1, W31
	0x036F7668 FCSEL S0, S0, S1, PL
	0x036F766C FMOV W1, S0
	0x036F7670 MOV X0, X31
	0x036F7674 RET
	0x036F7678 STP X30, X23, [X31 - 0x30]!
	0x036F767C STP X22, X21, [X31 + 0x10]
	0x036F7680 STP X20, X19, [X31 + 0x20]
	0x036F7684 ADRP X23, 0xCE9000
	0x036F7688 ADRP X22, 0x9FC000
	0x036F768C LDRB W8, [X23 + 0xBB2]
	0x036F7690 LDR X22, [X22 + 0x598]
	0x036F7694 MOV X19, X2
	0x036F7698 MOV X21, X1
	0x036F769C MOV X20, X0
	0x036F76A0 TBNZ X8, 0x0, 0x36F76B8
	0x036F76A4 ADRP X0, 0x9FC000
	0x036F76A8 LDR X0, [X0 + 0x598]
	0x036F76AC BL 0x1C16CF4
	0x036F76B0 MOVZ W8, 0x1
	0x036F76B4 STRB W8, [X23 + 0xBB2]
	0x036F76B8 LDR X0, [X22]
	0x036F76BC LDR X22, [X20]
	0x036F76C0 LDR W8, [X0 + 0xE0]
	0x036F76C4 CBNZ W8, 0x36F76CC
	0x036F76C8 BL 0x1C16DFC
	0x036F76CC MOV X0, X22
	0x036F76D0 MOV X1, X21
	0x036F76D4 MOV X2, X31
	0x036F76D8 BL 0x3C3883C
	0x036F76DC TBZ X0, 0x0, 0x36F76F8
	0x036F76E0 LDR V0, [X20 + 0x8]
	0x036F76E4 FMOV S1, W19
	0x036F76E8 FCMP S0, S1
	0x036F76EC B.NE 0x36F76F8
	0x036F76F0 MOVZ W0, 0x1
	0x036F76F4 B 0x36F76FC
	0x036F76F8 MOV W0, W31
	0x036F76FC LDP X20, X19, [X31 + 0x20]
	0x036F7700 LDP X22, X21, [X31 + 0x10]
	0x036F7704 LDP X30, X23, [X31], #0x30
	0x036F7708 RET
	0x036F770C LDR X0, [X0]
	0x036F7710 RET
	0x036F7714 STR X1, [X0]
	0x036F7718 RET
	0x036F771C LDR V0, [X0 + 0x8]
	0x036F7720 RET
	0x036F7724 FMOV S1, 1
	0x036F7728 FCMP S0, 0x0
	0x036F772C FMIN S0, S0, S1
	0x036F7730 FMOV S1, W31
	0x036F7734 FCSEL S0, S0, S1, PL
	0x036F7738 STR S0, [X0 + 0x8]
	0x036F773C RET
	0x036F7740 STR X30, [X31 - 0x30]!
	0x036F7744 STP X22, X21, [X31 + 0x10]
	0x036F7748 STP X20, X19, [X31 + 0x20]
	0x036F774C ADRP X21, 0xCE9000
	0x036F7750 ADRP X22, 0xA26000
	0x036F7754 LDRB W8, [X21 + 0xBB3]
	0x036F7758 LDR X22, [X22 + 0x960]
	0x036F775C MOV W20, W1
	0x036F7760 MOV X19, X0
	0x036F7764 TBNZ X8, 0x0, 0x36F777C
	0x036F7768 ADRP X0, 0xA26000
	0x036F776C LDR X0, [X0 + 0x960]
	0x036F7770 BL 0x1C16CF4
	0x036F7774 MOVZ W8, 0x1
	0x036F7778 STRB W8, [X21 + 0xBB3]
	0x036F777C LDR X0, [X22]
	0x036F7780 LDR W8, [X0 + 0xE0]
	0x036F7784 CBNZ W8, 0x36F778C
	0x036F7788 BL 0x1C16DFC
	0x036F778C MOV W0, W20
	0x036F7790 BL 0x36F77CC
	0x036F7794 MOVI V0.2D, 0x0
	0x036F7798 STR W0, [X19]
	0x036F779C STUR V0, [X19 + 0x8]
	0x036F77A0 STUR V0, [X19 + 0x18]
	0x036F77A4 STUR V0, [X19 + 0x28]
	0x036F77A8 STUR V0, [X19 + 0x38]
	0x036F77AC STUR V0, [X19 + 0x48]
	0x036F77B0 STUR V0, [X19 + 0x58]
	0x036F77B4 STUR V0, [X19 + 0x68]
	0x036F77B8 STUR V0, [X19 + 0x78]
	0x036F77BC LDP X20, X19, [X31 + 0x20]
	0x036F77C0 LDP X22, X21, [X31 + 0x10]
	0x036F77C4 LDR X30, [X31], #0x30
	0x036F77C8 RET
	0x036F77CC STP X30, X21, [X31 - 0x20]!
	0x036F77D0 STP X20, X19, [X31 + 0x10]
	0x036F77D4 ADRP X21, 0xCE9000
	0x036F77D8 ADRP X20, 0xA26000
	0x036F77DC LDRB W8, [X21 + 0xBC3]
	0x036F77E0 LDR X20, [X20 + 0x960]
	0x036F77E4 MOV W19, W0
	0x036F77E8 TBNZ X8, 0x0, 0x36F7800
	0x036F77EC ADRP X0, 0xA26000
	0x036F77F0 LDR X0, [X0 + 0x960]
	0x036F77F4 BL 0x1C16CF4
	0x036F77F8 MOVZ W8, 0x1
	0x036F77FC STRB W8, [X21 + 0xBC3]
	0x036F7800 LDR X0, [X20]
	0x036F7804 LDR W8, [X0 + 0xE0]
	0x036F7808 CBNZ W8, 0x36F7814
	0x036F780C BL 0x1C16DFC
	0x036F7810 LDR X0, [X20]
	0x036F7814 LDR X8, [X0 + 0xB8]
	0x036F7818 LDR W8, [X8]
	0x036F781C CMP W8, W19
	0x036F7820 CSEL W8, W8, W19, LT
	0x036F7824 CMP W19, 0x0
	0x036F7828 LDP X20, X19, [X31 + 0x10]
	0x036F782C CSEL W0, W31, W8, LT
	0x036F7830 LDP X30, X21, [X31], #0x20
	0x036F7834 RET
	0x036F7838 STP X30, X19, [X31 - 0x10]!
	0x036F783C MOVZ W2, 0x88
	0x036F7840 MOV X19, X0
	0x036F7844 BL 0x3EB1B30
	0x036F7848 MOVN W8, 0x0
	0x036F784C STR W8, [X19 + 0x88]
	0x036F7850 LDP X30, X19, [X31], #0x10
	0x036F7854 RET
	0x036F7858 SUB X31, X31, 0xB0
	0x036F785C STP X30, X21, [X31 + 0x90]
	0x036F7860 STP X20, X19, [X31 + 0xA0]
	0x036F7864 ADRP X21, 0xCE9000
	0x036F7868 ADRP X20, 0xA49000
	0x036F786C LDRB W8, [X21 + 0xBB5]
	0x036F7870 LDR X20, [X20 + 0x880]
	0x036F7874 MOV X19, X0
	0x036F7878 TBNZ X8, 0x0, 0x36F7890
	0x036F787C ADRP X0, 0xA49000
	0x036F7880 LDR X0, [X0 + 0x880]
	0x036F7884 BL 0x1C16CF4
	0x036F7888 MOVZ W8, 0x1
	0x036F788C STRB W8, [X21 + 0xBB5]
	0x036F7890 ADD X0, X31, 0x0
	0x036F7894 MOVZ W2, 0x88
	0x036F7898 MOV X1, X19
	0x036F789C BL 0x3EB1AC0
	0x036F78A0 LDR X0, [X20]
	0x036F78A4 MOVI D0, 0xFFFFFFFF
	0x036F78A8 ADD X1, X31, 0x0
	0x036F78AC STR D0, [X31 + 0x88]
	0x036F78B0 BL 0x1C16E04
	0x036F78B4 LDP X20, X19, [X31 + 0xA0]
	0x036F78B8 LDP X30, X21, [X31 + 0x90]
	0x036F78BC ADD X31, X31, 0xB0
	0x036F78C0 RET
	0x036F78C4 STR X30, [X31 - 0x30]!
	0x036F78C8 STP X22, X21, [X31 + 0x10]
	0x036F78CC STP X20, X19, [X31 + 0x20]
	0x036F78D0 ADRP X21, 0xCE9000
	0x036F78D4 ADRP X22, 0xA26000
	0x036F78D8 LDRB W8, [X21 + 0xBB6]
	0x036F78DC LDR X22, [X22 + 0x960]
	0x036F78E0 MOV X20, X1
	0x036F78E4 MOV X19, X0
	0x036F78E8 TBNZ X8, 0x0, 0x36F790C
	0x036F78EC ADRP X0, 0xA26000
	0x036F78F0 LDR X0, [X0 + 0x960]
	0x036F78F4 BL 0x1C16CF4
	0x036F78F8 ADRP X0, 0xA49000
	0x036F78FC LDR X0, [X0 + 0xAF8]
	0x036F7900 BL 0x1C16CF4
	0x036F7904 MOVZ W8, 0x1
	0x036F7908 STRB W8, [X21 + 0xBB6]
	0x036F790C LDR X0, [X22]
	0x036F7910 LDR W8, [X0 + 0xE0]
	0x036F7914 CBNZ W8, 0x36F791C
	0x036F7918 BL 0x1C16DFC
	0x036F791C CBZ X20, 0x36F796C
	0x036F7920 ADRP X8, 0xA49000
	0x036F7924 LDR X8, [X8 + 0xAF8]
	0x036F7928 LDR X9, [X20]
	0x036F792C MOV X0, X20
	0x036F7930 LDR X1, [X8]
	0x036F7934 LDR X8, [X9 + 0x40]
	0x036F7938 LDR X9, [X1 + 0x40]
	0x036F793C CMP X8, X9
	0x036F7940 B.NE 0x36F7970
	0x036F7944 BL 0x1C16E08
	0x036F7948 LDP X1, X2, [X0]
	0x036F794C MOV X0, X19
	0x036F7950 BL 0x36F7974
	0x036F7954 LDR W8, [X19]
	0x036F7958 LDP X20, X19, [X31 + 0x20]
	0x036F795C LDP X22, X21, [X31 + 0x10]
	0x036F7960 SUB W0, W8, 0x1
	0x036F7964 LDR X30, [X31], #0x30
	0x036F7968 RET
	0x036F796C BL 0x1C16F20
	0x036F7970 BL 0x1C171E0
	0x036F7974 SUB X31, X31, 0x40
	0x036F7978 STP X30, X23, [X31 + 0x10]
	0x036F797C STP X22, X21, [X31 + 0x20]
	0x036F7980 STP X20, X19, [X31 + 0x30]
	0x036F7984 ADRP X23, 0xCE9000
	0x036F7988 ADRP X22, 0xA26000
	0x036F798C LDRB W8, [X23 + 0xBB7]
	0x036F7990 LDR X22, [X22 + 0x960]
	0x036F7994 MOV X20, X2
	0x036F7998 MOV X21, X1
	0x036F799C MOV X19, X0
	0x036F79A0 TBNZ X8, 0x0, 0x36F79B8
	0x036F79A4 ADRP X0, 0xA26000
	0x036F79A8 LDR X0, [X0 + 0x960]
	0x036F79AC BL 0x1C16CF4
	0x036F79B0 MOVZ W8, 0x1
	0x036F79B4 STRB W8, [X23 + 0xBB7]
	0x036F79B8 LDR X0, [X22]
	0x036F79BC LDR W23, [X19]
	0x036F79C0 LDR W8, [X0 + 0xE0]
	0x036F79C4 CBNZ W8, 0x36F79D0
	0x036F79C8 BL 0x1C16DFC
	0x036F79CC LDR X0, [X22]
	0x036F79D0 LDR X8, [X0 + 0xB8]
	0x036F79D4 LDR W8, [X8]
	0x036F79D8 CMP W23, W8
	0x036F79DC B.GE 0x36F7A24
	0x036F79E0 LDR W8, [X0 + 0xE0]
	0x036F79E4 LDR W22, [X19]
	0x036F79E8 CBNZ W8, 0x36F79F0
	0x036F79EC BL 0x1C16DFC
	0x036F79F0 MOV X0, X19
	0x036F79F4 MOV W1, W22
	0x036F79F8 MOV X2, X21
	0x036F79FC MOV X3, X20
	0x036F7A00 BL 0x36F7AB8
	0x036F7A04 LDR W8, [X19]
	0x036F7A08 LDP X22, X21, [X31 + 0x20]
	0x036F7A0C LDP X30, X23, [X31 + 0x10]
	0x036F7A10 ADD W8, W8, 0x1
	0x036F7A14 STR W8, [X19]
	0x036F7A18 LDP X20, X19, [X31 + 0x30]
	0x036F7A1C ADD X31, X31, 0x40
	0x036F7A20 RET
	0x036F7A24 ADRP X19, 0xA26000
	0x036F7A28 LDR X19, [X19 + 0x960]
	0x036F7A2C MOV X0, X19
	0x036F7A30 BL 0x1C16D08
	0x036F7A34 BL 0x19903D0
	0x036F7A38 MOV X0, X19
	0x036F7A3C BL 0x1C16D08
	0x036F7A40 LDR X8, [X0 + 0xB8]
	0x036F7A44 ADRP X0, 0x9FC000
	0x036F7A48 LDR W8, [X8]
	0x036F7A4C STR W8, [X31 + 0xC]
	0x036F7A50 LDR X0, [X0 + 0x758]
	0x036F7A54 BL 0x1C16D08
	0x036F7A58 ADD X1, X31, 0xC
	0x036F7A5C BL 0x1C16E04
	0x036F7A60 MOV X19, X0
	0x036F7A64 ADRP X0, 0xA49000
	0x036F7A68 LDR X0, [X0 + 0xC18]
	0x036F7A6C BL 0x1C16D08
	0x036F7A70 MOV X1, X19
	0x036F7A74 MOV X2, X31
	0x036F7A78 BL 0x321EFD0
	0x036F7A7C MOV X19, X0
	0x036F7A80 ADRP X0, 0xA04000
	0x036F7A84 LDR X0, [X0 + 0x578]
	0x036F7A88 BL 0x1C16D08
	0x036F7A8C BL 0x1C16F10
	0x036F7A90 MOV X1, X19
	0x036F7A94 MOV X2, X31
	0x036F7A98 MOV X20, X0
	0x036F7A9C BL 0x3314A68
	0x036F7AA0 ADRP X0, 0xA49000
	0x036F7AA4 LDR X0, [X0 + 0xC20]
	0x036F7AA8 BL 0x1C16D08
	0x036F7AAC MOV X1, X0
	0x036F7AB0 MOV X0, X20
	0x036F7AB4 BL 0x1C16DEC
	0x036F7AB8 STR X30, [X31 - 0x40]!
	0x036F7ABC STP X24, X23, [X31 + 0x10]
	0x036F7AC0 STP X22, X21, [X31 + 0x20]
	0x036F7AC4 STP X20, X19, [X31 + 0x30]
	0x036F7AC8 ADRP X23, 0xCE9000
	0x036F7ACC ADRP X24, 0xA26000
	0x036F7AD0 LDRB W8, [X23 + 0xBC6]
	0x036F7AD4 LDR X24, [X24 + 0x960]
	0x036F7AD8 MOV X19, X3
	0x036F7ADC MOV X21, X2
	0x036F7AE0 MOV W22, W1
	0x036F7AE4 MOV X20, X0
	0x036F7AE8 TBNZ X8, 0x0, 0x36F7B00
	0x036F7AEC ADRP X0, 0xA26000
	0x036F7AF0 LDR X0, [X0 + 0x960]
	0x036F7AF4 BL 0x1C16CF4
	0x036F7AF8 MOVZ W8, 0x1
	0x036F7AFC STRB W8, [X23 + 0xBC6]
	0x036F7B00 LDR X0, [X24]
	0x036F7B04 LDR W8, [X0 + 0xE0]
	0x036F7B08 CBNZ W8, 0x36F7B10
	0x036F7B0C BL 0x1C16DFC
	0x036F7B10 MOV X0, X20
	0x036F7B14 MOV W1, W22
	0x036F7B18 BL 0x36F8534
	0x036F7B1C CMP W22, 0x7
	0x036F7B20 B.HI 0x36F7BA0
	0x036F7B24 ADRP X9, 0xFFFFFFFFFD4A0000
	0x036F7B28 MOV W8, W22
	0x036F7B2C ADD X9, X9, 0x819
	0x036F7B30 ADR X10, 0x10
	0x036F7B34 LDRB W11, [X9, X8, LSL]
	0x036F7B38 ADD X10, X10, X11, 0x2, LSL
	0x036F7B3C BR X10
	0x036F7B40 STR X21, [X20 + 0x8]
	0x036F7B44 ADD X8, X20, 0x10
	0x036F7B48 B 0x36F7B9C
	0x036F7B4C STR X21, [X20 + 0x18]
	0x036F7B50 ADD X8, X20, 0x20
	0x036F7B54 B 0x36F7B9C
	0x036F7B58 STR X21, [X20 + 0x28]
	0x036F7B5C ADD X8, X20, 0x30
	0x036F7B60 B 0x36F7B9C
	0x036F7B64 STR X21, [X20 + 0x38]
	0x036F7B68 ADD X8, X20, 0x40
	0x036F7B6C B 0x36F7B9C
	0x036F7B70 STR X21, [X20 + 0x48]
	0x036F7B74 ADD X8, X20, 0x50
	0x036F7B78 B 0x36F7B9C
	0x036F7B7C STR X21, [X20 + 0x58]
	0x036F7B80 ADD X8, X20, 0x60
	0x036F7B84 B 0x36F7B9C
	0x036F7B88 STR X21, [X20 + 0x68]
	0x036F7B8C ADD X8, X20, 0x70
	0x036F7B90 B 0x36F7B9C
	0x036F7B94 ADD X8, X20, 0x80
	0x036F7B98 STR X21, [X20 + 0x78]
	0x036F7B9C STR X19, [X8]
	0x036F7BA0 LDP X20, X19, [X31 + 0x30]
	0x036F7BA4 LDP X22, X21, [X31 + 0x20]
	0x036F7BA8 LDP X24, X23, [X31 + 0x10]
	0x036F7BAC LDR X30, [X31], #0x40
	0x036F7BB0 RET
	0x036F7BB4 STR X30, [X31 - 0x30]!
	0x036F7BB8 STP X22, X21, [X31 + 0x10]
	0x036F7BBC STP X20, X19, [X31 + 0x20]
	0x036F7BC0 ADRP X21, 0xCE9000
	0x036F7BC4 ADRP X22, 0xA26000
	0x036F7BC8 LDRB W8, [X21 + 0xBB8]
	0x036F7BCC LDR X22, [X22 + 0x960]
	0x036F7BD0 MOV X20, X1
	0x036F7BD4 MOV X19, X0
	0x036F7BD8 TBNZ X8, 0x0, 0x36F7BFC
	0x036F7BDC ADRP X0, 0xA26000
	0x036F7BE0 LDR X0, [X0 + 0x960]
	0x036F7BE4 BL 0x1C16CF4
	0x036F7BE8 ADRP X0, 0xA49000
	0x036F7BEC LDR X0, [X0 + 0xAF8]
	0x036F7BF0 BL 0x1C16CF4
	0x036F7BF4 MOVZ W8, 0x1
	0x036F7BF8 STRB W8, [X21 + 0xBB8]
	0x036F7BFC LDR X0, [X22]
	0x036F7C00 LDR W8, [X0 + 0xE0]
	0x036F7C04 CBNZ W8, 0x36F7C0C
	0x036F7C08 BL 0x1C16DFC
	0x036F7C0C CBZ X20, 0x36F7C50
	0x036F7C10 ADRP X8, 0xA49000
	0x036F7C14 LDR X8, [X8 + 0xAF8]
	0x036F7C18 LDR X9, [X20]
	0x036F7C1C MOV X0, X20
	0x036F7C20 LDR X1, [X8]
	0x036F7C24 LDR X8, [X9 + 0x40]
	0x036F7C28 LDR X9, [X1 + 0x40]
	0x036F7C2C CMP X8, X9
	0x036F7C30 B.NE 0x36F7C54
	0x036F7C34 BL 0x1C16E08
	0x036F7C38 LDP X1, X2, [X0]
	0x036F7C3C MOV X0, X19
	0x036F7C40 LDP X20, X19, [X31 + 0x20]
	0x036F7C44 LDP X22, X21, [X31 + 0x10]
	0x036F7C48 LDR X30, [X31], #0x30
	0x036F7C4C B 0x36F7C58
	0x036F7C50 BL 0x1C16F20
	0x036F7C54 BL 0x1C171E0
	0x036F7C58 SUB X31, X31, 0x40
	0x036F7C5C STP X30, X23, [X31 + 0x10]
	0x036F7C60 STP X22, X21, [X31 + 0x20]
	0x036F7C64 STP X20, X19, [X31 + 0x30]
	0x036F7C68 ADRP X22, 0xCE9000
	0x036F7C6C LDRB W8, [X22 + 0xBB9]
	0x036F7C70 MOV X19, X2
	0x036F7C74 MOV X20, X1
	0x036F7C78 MOV X21, X0
	0x036F7C7C TBNZ X8, 0x0, 0x36F7C94
	0x036F7C80 ADRP X0, 0xA26000
	0x036F7C84 LDR X0, [X0 + 0x960]
	0x036F7C88 BL 0x1C16CF4
	0x036F7C8C MOVZ W8, 0x1
	0x036F7C90 STRB W8, [X22 + 0xBB9]
	0x036F7C94 LDR W8, [X21]
	0x036F7C98 CMP W8, 0x1
	0x036F7C9C B.LT 0x36F7CF0
	0x036F7CA0 ADRP X23, 0xA26000
	0x036F7CA4 LDR X23, [X23 + 0x960]
	0x036F7CA8 MOV W22, W31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move [X31+8], X3
	015 Move X24, 0xCEB000
	016 Move X23, 0xA05000
	017 Move X22, 0xA05000
	018 Move W8, [X24+2981]
	019 Move X23, [X23+2352]
	020 Move X22, [X22+2360]
	021 Move X19, X2
	022 Move X21, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {123}
	028 Move X0, 0xA4B000
	029 Move X0, [X0+2856]
	030 Call 0x1C17CF4
	031 Move X0, 0xA4B000
	032 Move X0, [X0+2864]
	033 Call 0x1C17CF4
	034 Move X0, 0xA4B000
	035 Move X0, [X0+2872]
	036 Call 0x1C17CF4
	037 Move X0, 0xA4B000
	038 Move X0, [X0+2880]
	039 Call 0x1C17CF4
	040 Move X0, 0xA4B000
	041 Move X0, [X0+2888]
	042 Call 0x1C17CF4
	043 Move X0, 0xA4B000
	044 Move X0, [X0+2632]
	045 Call 0x1C17CF4
	046 Move X0, 0x9FE000
	047 Move X0, [X0+3584]
	048 Call 0x1C17CF4
	049 Move X0, 0xA4B000
	050 Move X0, [X0+2640]
	051 Call 0x1C17CF4
	052 Move X0, 0xA4B000
	053 Move X0, [X0+2648]
	054 Call 0x1C17CF4
	055 Move X0, 0x9FE000
	056 Move X0, [X0+3608]
	057 Call 0x1C17CF4
	058 Move X0, 0xA27000
	059 Move X0, [X0+3632]
	060 Call 0x1C17CF4
	061 Move X0, 0xA4B000
	062 Move X0, [X0+2520]
	063 Call 0x1C17CF4
	064 Move X0, 0xA4B000
	065 Move X0, [X0+2896]
	066 Call 0x1C17CF4
	067 Move X0, 0xA4B000
	068 Move X0, [X0+2904]
	069 Call 0x1C17CF4
	070 Move X0, 0xA4B000
	071 Move X0, [X0+2912]
	072 Call 0x1C17CF4
	073 Move X0, 0xA4B000
	074 Move X0, [X0+2920]
	075 Call 0x1C17CF4
	076 Move X0, 0xA4B000
	077 Move X0, [X0+2928]
	078 Call 0x1C17CF4
	079 Move X0, 0xA4B000
	080 Move X0, [X0+2936]
	081 Call 0x1C17CF4
	082 Move X0, 0xA4B000
	083 Move X0, [X0+2944]
	084 Call 0x1C17CF4
	085 Move X0, 0xA4B000
	086 Move X0, [X0+2952]
	087 Call 0x1C17CF4
	088 Move X0, 0xA4B000
	089 Move X0, [X0+2960]
	090 Call 0x1C17CF4
	091 Move X0, 0xA4B000
	092 Move X0, [X0+2968]
	093 Call 0x1C17CF4
	094 Move X0, 0xA4B000
	095 Move X0, [X0+2976]
	096 Call 0x1C17CF4
	097 Move X0, 0xA05000
	098 Move X0, [X0+2360]
	099 Call 0x1C17CF4
	100 Move X0, 0xA4B000
	101 Move X0, [X0+2984]
	102 Call 0x1C17CF4
	103 Move X0, 0xA4B000
	104 Move X0, [X0+2992]
	105 Call 0x1C17CF4
	106 Move X0, 0xA4A000
	107 Move X0, [X0+3000]
	108 Call 0x1C17CF4
	109 Move X0, 0xA04000
	110 Move X0, [X0+2352]
	111 Call 0x1C17CF4
	112 Move X0, 0xA4A000
	113 Move X0, [X0+3008]
	114 Call 0x1C17CF4
	115 Move X0, 0xA4A000
	116 Move X0, [X0+2560]
	117 Call 0x1C17CF4
	118 Move X0, 0x9FD000
	119 Move X0, [X0+2440]
	120 Call 0x1C17CF4
	121 Move W8, 1
	122 Move [X24+2981], W8
	123 Move X0, [X23]
	124 Move [X31+56], X31
	125 Call 0x1C17F10
	126 Move X1, [X22]
	127 Move X22, X0
	128 Call List`1<Object>..ctor, X0
	129 Move [X19], X22
	130 Compare X21, 0
	131 JumpIfEqual {849}
	132 Move X10, 0xA4A000
	133 Move X8, [X21]
	134 Move X10, [X10+2632]
	135 Move X22, 0xA4A000
	136 Move X23, 0xA4A000
	137 Move X26, 0xA4A000
	138 Move X25, 0xA4A000
	139 Move X24, 0xA4A000
	140 Move X22, [X22+2984]
	141 Move X23, [X23+2952]
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Move X1, [X10]
	144 Move X26, [X26+2888]
	145 Move X25, [X25+2872]
	146 Move X24, [X24+2640]
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X21
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X21
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X8, [X22]
	166 Move W22, W0
	167 Move X0, X8
	168 Call 0x1C17F10
	169 Move X2, [X23]
	170 Move W1, W22
	171 Move X23, X0
	172 Call List`1<SyncableProperties>..ctor, X0, X1
	173 Move X8, [X31+8]
	174 Move [X8], X23
	175 Move X0, [X26]
	176 Call 0x1C17F10
	177 Move X1, [X25]
	178 Move X23, X0
	179 Call Dictionary`2<Object, Object>..ctor, X0
	180 Move X8, [X21]
	181 Move X1, [X24]
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move X0, X21
	192 Move W2, W31
	193 Call 0x1C5D788
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Add X8, X8, X9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X1, [X0+8]
	199 Move X0, X21
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Move [X31+24], X0
	202 Compare X0, 0
	203 JumpIfEqual {850}
	204 Move X24, 0x9FD000
	205 Move X25, 0xA4A000
	206 Move X26, 0xA4A000
	207 Move X24, [X24+3608]
	208 Move X25, [X25+2648]
	209 Move X26, [X26+2520]
	210 Move [X31+48], X23
	211 Move X8, [X31+24]
	212 Move X1, [X24]
	213 Move X8, [X8]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move X0, [X31+24]
	224 Move W2, W31
	225 Call 0x1C5D788
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Add X8, X8, X9
	228 Add X0, X8, 312
	229 Move X8, [X0]
	230 Move X1, [X0+8]
	231 Move X0, [X31+24]
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move TEMP, X0
	234 And TEMP, TEMP, 1
	235 Compare TEMP, 1
	236 JumpIfNotEqual {711}
	237 Move X8, [X31+24]
	238 Move X1, [X25]
	239 Move X8, [X8]
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 Compare X9, 0
	242 JumpIfEqual {249}
	243 Move X10, [X8+176]
	244 Add X10, X10, 8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Subtract X9, X9, 1
	248 Add X10, X10, 16
	249 Move X0, [X31+24]
	250 Move W2, W31
	251 Call 0x1C5D788
	252 NotImplemented "Instruction LDRSW not yet implemented."
	253 Add X8, X8, X9
	254 Add X0, X8, 312
	255 Move X8, [X0]
	256 Move X1, [X0+8]
	257 Move X0, [X31+24]
	258 NotImplemented "Instruction BLR not yet implemented."
	259 Compare X0, 0
	260 JumpIfEqual {844}
	261 Move X8, [X0]
	262 Move X1, [X26]
	263 Move [X31+16], X0
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Compare X9, 0
	266 JumpIfEqual {273}
	267 Move X10, [X8+176]
	268 Add X10, X10, 8
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Subtract X9, X9, 1
	272 Add X10, X10, 16
	273 Move X0, [X31+16]
	274 Move W2, 8
	275 Call 0x1C5D788
	276 Move W9, [X10]
	277 Add W9, W9, 8
	278 Add X8, X8, W9
	279 Add X0, X8, 312
	280 Move X8, [X0]
	281 Move X1, [X0+8]
	282 Move X0, [X31+16]
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Move TEMP, X0
	285 And TEMP, TEMP, 1
	286 Compare TEMP, 1
	287 JumpIfNotEqual {211}
	288 Move X8, [X31+16]
	289 Move X1, [X26]
	290 Move X8, [X8]
	291 NotImplemented "Instruction LDRH not yet implemented."
	292 Compare X9, 0
	293 JumpIfEqual {300}
	294 Move X10, [X8+176]
	295 Add X10, X10, 8
	296 NotImplemented "Instruction LDUR not yet implemented."
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Subtract X9, X9, 1
	299 Add X10, X10, 16
	300 Move X0, [X31+16]
	301 Move W2, 1
	302 Call 0x1C5D788
	303 Move W9, [X10]
	304 Add W9, W9, 1
	305 Add X8, X8, W9
	306 Add X0, X8, 312
	307 Move X8, [X0]
	308 Move X1, [X0+8]
	309 Move X0, [X31+16]
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move [X31+40], X0
	312 Compare X0, 0
	313 JumpIfEqual {845}
	314 Move X8, 0xA4A000
	315 Move X8, [X8+3008]
	316 Move X0, [X8]
	317 Call 0x1C17F10
	318 Move X21, [X31+40]
	319 Move X8, 0xA4A000
	320 Move W1, [X21+24]
	321 Move X8, [X8+2960]
	322 Move X28, X0
	323 Move X2, [X8]
	324 Call List`1<ConstraintProperties>..ctor, X0, X1
	325 Move W8, [X21+24]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X9, X21
	328 Move W26, W31
	329 Move [X31+32], X28
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Add X8, X9, W26
	332 Move X27, [X8+32]
	333 Compare X27, 0
	334 JumpIfEqual {802}
	335 Move X8, [X27]
	336 Move X10, 0xA26000
	337 NotImplemented "Instruction LDRH not yet implemented."
	338 Move X10, [X10+3632]
	339 Move X1, [X10]
	340 Compare X9, 0
	341 JumpIfEqual {348}
	342 Move X10, [X8+176]
	343 Add X10, X10, 8
	344 NotImplemented "Instruction LDUR not yet implemented."
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Subtract X9, X9, 1
	347 Add X10, X10, 16
	348 Move W2, 4
	349 Move X0, X27
	350 Call 0x1C5D788
	351 Move W9, [X10]
	352 Add W9, W9, 4
	353 Add X8, X8, W9
	354 Add X0, X8, 312
	355 Move X8, [X0]
	356 Move X1, [X0+8]
	357 Move X0, X27
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Move X8, [X27]
	360 Move X10, 0xA26000
	361 Move X28, X0
	362 NotImplemented "Instruction LDRH not yet implemented."
	363 Move X10, [X10+3632]
	364 Move X1, [X10]
	365 Compare X9, 0
	366 JumpIfEqual {373}
	367 Move X10, [X8+176]
	368 Add X10, X10, 8
	369 NotImplemented "Instruction LDUR not yet implemented."
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Subtract X9, X9, 1
	372 Add X10, X10, 16
	373 Move W2, 4
	374 Move X0, X27
	375 Call 0x1C5D788
	376 Move W9, [X10]
	377 Add W9, W9, 4
	378 Add X8, X8, W9
	379 Add X0, X8, 312
	380 Move X8, [X0]
	381 Move X1, [X0+8]
	382 Move X0, X27
	383 NotImplemented "Instruction BLR not yet implemented."
	384 Compare X0, 0
	385 JumpIfEqual {801}
	386 Move X1, X31
	387 Call "il2cpp_vm_object_is_inst", X0
	388 Compare X23, 0
	389 JumpIfEqual {800}
	390 Move X8, 0xA4A000
	391 Move X8, [X8+2864]
	392 Move X29, X0
	393 Move X3, [X8]
	394 Add X2, X31, 56
	395 Move X0, X23
	396 Move X1, X29
	397 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	398 Move TEMP, X0
	399 And TEMP, TEMP, 1
	400 Compare TEMP, 1
	401 JumpIfEqual {479}
	402 Compare X29, 0
	403 JumpIfEqual {808}
	404 Move X8, [X29]
	405 Move X9, [X8+1672]
	406 Move X2, [X8+1680]
	407 Move W1, 52
	408 Move X0, X29
	409 NotImplemented "Instruction BLR not yet implemented."
	410 Move X22, X0
	411 Compare X0, 0
	412 JumpIfEqual {809}
	413 Move X8, 0xA4A000
	414 Move X8, [X8+3000]
	415 Move X0, [X8]
	416 Call 0x1C17F10
	417 Move X8, 0xA4A000
	418 Move W1, [X22+24]
	419 Move X8, [X8+2968]
	420 Move X21, X0
	421 Move X2, [X8]
	422 Call List`1<Object>..ctor, X0, X1
	423 Move X8, [X22+24]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move X23, X31
	426 And X8, X8, 0
	427 Add X25, X22, 32
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Move X8, 0xA4A000
	430 Move X24, [X25]
	431 Move X8, [X8+2856]
	432 Move X1, [X8]
	433 Move X0, X24
	434 Call 0x21A991C, X0
	435 Compare X0, 0
	436 JumpIfEqual {461}
	437 Compare X21, 0
	438 JumpIfEqual {782}
	439 Move X9, 0xA4A000
	440 Move W10, [X21+28]
	441 Move X8, [X21+16]
	442 Move X9, [X9+2904]
	443 Add W10, W10, 1
	444 Move X9, [X9]
	445 Move [X21+28], W10
	446 Compare X8, 0
	447 JumpIfEqual {781}
	448 NotImplemented "Instruction LDRSW not yet implemented."
	449 Move W11, [X8+24]
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Add W9, W10, 1
	452 Add X8, X8, X10
	453 Move [X21+24], W9
	454 Move [X8+32], X24
	455 Move X8, [X9+32]
	456 Move X8, [X8+192]
	457 Move X2, [X8+112]
	458 Move X0, X21
	459 Move X1, X24
	460 Call List`1<Object>.AddWithResize, X0, X1
	461 Move W8, [X22+24]
	462 Add X23, X23, 1
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Compare X21, 0
	465 JumpIfEqual {810}
	466 Move X8, 0xA4A000
	467 Move X8, [X8+2936]
	468 Move X1, [X8]
	469 Move X0, X21
	470 Call List`1<Object>.ToArray, X0
	471 Move X8, 0xA4A000
	472 Move X8, [X8+2880]
	473 Move X2, X0
	474 Move [X31+56], X0
	475 Move X3, [X8]
	476 Move X0, [X31+48]
	477 Move X1, X29
	478 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	479 Move X21, [X31+56]
	480 Compare X21, 0
	481 JumpIfEqual {803}
	482 Move X8, 0xA4A000
	483 Move X8, [X8+2992]
	484 Move X0, [X8]
	485 Call 0x1C17F10
	486 Move X8, 0xA4A000
	487 Move W1, [X21+24]
	488 Move X8, [X8+2976]
	489 Move X29, X0
	490 Move X2, [X8]
	491 Call List`1<Property>..ctor, X0, X1
	492 Move X24, [X31+56]
	493 Compare X24, 0
	494 JumpIfEqual {804}
	495 Move X8, [X24+24]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Move X25, X31
	498 And X8, X8, 0
	499 Add X23, X24, 32
	500 NotImplemented "Instruction CMP not yet implemented."
	501 Move X8, 0xA4A000
	502 Move X8, [X8+2560]
	503 Move X22, [X23]
	504 Move X21, [X19]
	505 Move X0, [X8]
	506 Move W8, [X0+224]
	507 Compare W8, 0
	508 JumpIfNotEqual {510}
	509 Call 0x1C17DFC
	510 Move X0, X20
	511 Move X1, X22
	512 Move X2, X28
	513 Move X3, X21
	514 Move X4, X29
	515 Call RigUtils.ExtractWeightedTransforms, X0, X1, X2, X3, X4
	516 Move TEMP, X0
	517 And TEMP, TEMP, 1
	518 Compare TEMP, 1
	519 JumpIfEqual {575}
	520 Move X8, 0xA4A000
	521 Move X8, [X8+2560]
	522 Move X21, [X19]
	523 Move X0, [X8]
	524 Move W8, [X0+224]
	525 Compare W8, 0
	526 JumpIfNotEqual {528}
	527 Call 0x1C17DFC
	528 Move X0, X20
	529 Move X1, X22
	530 Move X2, X28
	531 Move X3, X21
	532 Call RigUtils.ExtractTransformType, X0, X1, X2, X3
	533 Move TEMP, X0
	534 And TEMP, TEMP, 1
	535 Compare TEMP, 1
	536 JumpIfEqual {575}
	537 Move X8, 0xA4A000
	538 Move X8, [X8+2560]
	539 Move X0, [X8]
	540 Move W8, [X0+224]
	541 Compare W8, 0
	542 JumpIfNotEqual {544}
	543 Call 0x1C17DFC
	544 Move X8, 0x9FD000
	545 Move X8, [X8+2440]
	546 Move X3, [X8]
	547 Move X0, X22
	548 Move X2, X29
	549 Call RigUtils.ExtractPropertyType, X0, X1, X2, X3
	550 Move TEMP, X0
	551 And TEMP, TEMP, 1
	552 Compare TEMP, 1
	553 JumpIfEqual {575}
	554 Move X8, 0xA4A000
	555 Move X8, [X8+2560]
	556 Move X21, [X19]
	557 Move X0, [X8]
	558 Move W8, [X0+224]
	559 Compare W8, 0
	560 JumpIfNotEqual {562}
	561 Call 0x1C17DFC
	562 Move X8, 0x9FD000
	563 Move X8, [X8+2440]
	564 Move X5, [X8]
	565 Move X0, X20
	566 Move X1, X22
	567 Move X2, X28
	568 Move X3, X21
	569 Move X4, X29
	570 Call RigUtils.ExtractNestedPropertyType, X0, X1, X2, X3, X4, X5
	571 Move TEMP, X0
	572 And TEMP, TEMP, 1
	573 Compare TEMP, 1
	574 JumpIfNotEqual {783}
	575 Move W8, [X24+24]
	576 Add X25, X25, 1
	577 NotImplemented "Instruction CMP not yet implemented."
	578 Move X8, [X27]
	579 Move X10, 0xA26000
	580 NotImplemented "Instruction LDRH not yet implemented."
	581 Move X10, [X10+3632]
	582 Move X28, [X31+32]
	583 Move X1, [X10]
	584 Compare X9, 0
	585 JumpIfEqual {592}
	586 Move X10, [X8+176]
	587 Add X10, X10, 8
	588 NotImplemented "Instruction LDUR not yet implemented."
	589 NotImplemented "Instruction CMP not yet implemented."
	590 Subtract X9, X9, 1
	591 Add X10, X10, 16
	592 Move W2, 6
	593 Move X0, X27
	594 Call 0x1C5D788
	595 Move W9, [X10]
	596 Add W9, W9, 6
	597 Add X8, X8, W9
	598 Add X0, X8, 312
	599 Move X8, [X0]
	600 Move X1, [X0+8]
	601 Move X0, X27
	602 NotImplemented "Instruction BLR not yet implemented."
	603 Compare X29, 0
	604 JumpIfEqual {806}
	605 Move X8, 0xA4A000
	606 Move X8, [X8+2928]
	607 Move X21, X0
	608 Move X1, [X8]
	609 Move X0, X29
	610 Call List`1<Property>.ToArray, X0
	611 Compare X28, 0
	612 JumpIfEqual {805}
	613 Move X9, 0xA4A000
	614 Move W10, [X28+28]
	615 Move X8, [X28+16]
	616 Move X9, [X9+2920]
	617 Add W10, W10, 1
	618 Move X9, [X9]
	619 Move [X28+28], W10
	620 Compare X8, 0
	621 JumpIfEqual {807}
	622 NotImplemented "Instruction LDRSW not yet implemented."
	623 Move W11, [X8+24]
	624 Move X2, X0
	625 NotImplemented "Instruction CMP not yet implemented."
	626 Move X23, [X31+48]
	627 Add W9, W10, 1
	628 Add X8, X8, X10
	629 Move [X28+24], W9
	630 Move [X8+32], X21
	631 Move [X8+40], X2
	632 Move X8, [X9+32]
	633 Move X8, [X8+192]
	634 Move X3, [X8+112]
	635 Move X0, X28
	636 Move X1, X21
	637 Call List`1<ConstraintProperties>.AddWithResize, X0, X1
	638 Move X23, [X31+48]
	639 Move X9, [X31+40]
	640 Add W26, W26, 1
	641 Move W8, [X9+24]
	642 NotImplemented "Instruction CMP not yet implemented."
	643 Move X9, [X31+8]
	644 Move X8, [X31+16]
	645 Move X26, 0xA4A000
	646 Move X8, [X8]
	647 Move X21, [X9]
	648 NotImplemented "Instruction LDRH not yet implemented."
	649 Move X26, [X26+2520]
	650 Move X1, [X26]
	651 Compare X9, 0
	652 JumpIfEqual {659}
	653 Move X10, [X8+176]
	654 Add X10, X10, 8
	655 NotImplemented "Instruction LDUR not yet implemented."
	656 NotImplemented "Instruction CMP not yet implemented."
	657 Subtract X9, X9, 1
	658 Add X10, X10, 16
	659 Move X0, [X31+16]
	660 Move W2, W31
	661 Call 0x1C5D788
	662 Move X24, 0x9FD000
	663 Move X25, 0xA4A000
	664 Move X24, [X24+3608]
	665 Move X25, [X25+2648]
	666 NotImplemented "Instruction LDRSW not yet implemented."
	667 Move X24, 0x9FD000
	668 Move X25, 0xA4A000
	669 Move X24, [X24+3608]
	670 Move X25, [X25+2648]
	671 Add X8, X8, X9
	672 Add X0, X8, 312
	673 Move X8, [X0]
	674 Move X1, [X0+8]
	675 Move X0, [X31+16]
	676 NotImplemented "Instruction BLR not yet implemented."
	677 Compare X28, 0
	678 JumpIfEqual {848}
	679 Move X8, 0xA4A000
	680 Move X8, [X8+2944]
	681 Move X22, X0
	682 Move X1, [X8]
	683 Move X0, X28
	684 Call List`1<ConstraintProperties>.ToArray, X0
	685 Compare X21, 0
	686 JumpIfEqual {847}
	687 Move X9, 0xA4A000
	688 Move W10, [X21+28]
	689 Move X8, [X21+16]
	690 Move X9, [X9+2912]
	691 Add W10, W10, 1
	692 Move X9, [X9]
	693 Move [X21+28], W10
	694 Compare X8, 0
	695 JumpIfEqual {846}
	696 NotImplemented "Instruction LDRSW not yet implemented."
	697 Move W11, [X8+24]
	698 Move X2, X0
	699 NotImplemented "Instruction CMP not yet implemented."
	700 Add W9, W10, 1
	701 Add X8, X8, X10
	702 Move [X21+24], W9
	703 Move [X8+32], X22
	704 Move [X8+40], X2
	705 Move X8, [X9+32]
	706 Move X8, [X8+192]
	707 Move X3, [X8+112]
	708 Move X0, X21
	709 Move X1, X22
	710 Call List`1<SyncableProperties>.AddWithResize, X0, X1
	711 Move X21, X31
	712 Move W22, 17
	713 Move X8, [X31+24]
	714 Compare X8, 0
	715 JumpIfEqual {741}
	716 Move X8, [X8]
	717 Move X10, 0x9FD000
	718 NotImplemented "Instruction LDRH not yet implemented."
	719 Move X10, [X10+3584]
	720 Move X1, [X10]
	721 Compare X9, 0
	722 JumpIfEqual {729}
	723 Move X10, [X8+176]
	724 Add X10, X10, 8
	725 NotImplemented "Instruction LDUR not yet implemented."
	726 NotImplemented "Instruction CMP not yet implemented."
	727 Subtract X9, X9, 1
	728 Add X10, X10, 16
	729 Move X23, [X31+24]
	730 Move W2, W31
	731 Move X0, X23
	732 Call 0x1C5D788
	733 NotImplemented "Instruction LDRSW not yet implemented."
	734 Move X23, [X31+24]
	735 Add X8, X8, X9
	736 Add X0, X8, 312
	737 Move X8, [X0]
	738 Move X1, [X0+8]
	739 Move X0, X23
	740 NotImplemented "Instruction BLR not yet implemented."
	741 Compare X21, 0
	742 JumpIfNotEqual {851}
	743 NotImplemented "Instruction CMP not yet implemented."
	744 Compare W22, 0
	745 JumpIfNotEqual {765}
	746 Move X8, 0xA4A000
	747 Move X8, [X8+2560]
	748 Move X0, [X8]
	749 Move W8, [X0+224]
	750 Compare W8, 0
	751 JumpIfNotEqual {753}
	752 Call 0x1C17DFC
	753 Move X0, X20
	754 Call RigUtils.GetSyncableRigTransforms, X0
	755 Compare X0, 0
	756 JumpIfEqual {765}
	757 Move X1, X0
	758 Move X0, [X19]
	759 Compare X0, 0
	760 JumpIfEqual {849}
	761 Move X8, 0xA4A000
	762 Move X8, [X8+2896]
	763 Move X2, [X8]
	764 Call List`1<Object>.AddRange, X0, X1
	765 Move X20, [X31+144]
	766 Move X19, [X31+152]
	767 Move X22, [X31+128]
	768 Move X21, [X31+136]
	769 Move X24, [X31+112]
	770 Move X23, [X31+120]
	771 Move X26, [X31+96]
	772 Move X25, [X31+104]
	773 Move X28, [X31+80]
	774 Move X27, [X31+88]
	775 Move X29, [X31+64]
	776 Move X30, [X31+72]
	777 Add X31, X31, 160
	778 Return 
	779 Call 0x1C17F28
	780 Call 0x1C17F28
	781 Call 0x1C17F20
	782 Call 0x1C17F20
	783 Compare X22, 0
	784 JumpIfNotEqual {786}
	785 Call 0x1C17F20
	786 Move X8, [X22]
	787 Move X1, [X8+608]
	788 Move X9, [X8+600]
	789 Move X0, X22
	790 NotImplemented "Instruction BLR not yet implemented."
	791 Move X22, X0
	792 Compare X0, 0
	793 JumpIfNotEqual {811}
	794 Move X0, 0xA4A000
	795 Move X0, [X0+2832]
	796 Call 0x1C17D08
	797 Move X21, X0
	798 Move X22, X31
	799 Call 0x1C17F28
	800 Call 0x1C17F20
	801 Call 0x1C17F20
	802 Call 0x1C17F20
	803 Call 0x1C17F20
	804 Call 0x1C17F20
	805 Call 0x1C17F20
	806 Call 0x1C17F20
	807 Call 0x1C17F20
	808 Call 0x1C17F20
	809 Call 0x1C17F20
	810 Call 0x1C17F20
	811 Move X0, 0xA4A000
	812 Move X0, [X0+2832]
	813 Call 0x1C17D08
	814 Move X8, [X22]
	815 Move X21, X0
	816 Move X9, [X8+360]
	817 Move X1, [X8+368]
	818 Move X0, X22
	819 NotImplemented "Instruction BLR not yet implemented."
	820 Move X22, X0
	821 Move X0, 0xA4A000
	822 Move X0, [X0+2840]
	823 Call 0x1C17D08
	824 Move X2, X0
	825 Move X0, X21
	826 Move X1, X22
	827 Move X3, X31
	828 Call String.Concat, X0, X1, X2
	829 Move X21, X0
	830 Move X0, 0x9FD000
	831 Move X0, [X0+2880]
	832 Call 0x1C17D08
	833 Call 0x1C17F10
	834 Move X22, X0
	835 Move X1, X21
	836 Move X2, X31
	837 Call NotSupportedException..ctor, X0, X1
	838 Move X0, 0xA4A000
	839 Move X0, [X0+3016]
	840 Call 0x1C17D08
	841 Move X1, X0
	842 Move X0, X22
	843 Call 0x1C17DEC
	844 Call 0x1C17F20
	845 Call 0x1C17F20
	846 Call 0x1C17F20
	847 Call 0x1C17F20
	848 Call 0x1C17F20
	849 Call 0x1C17F20
	850 Call 0x1C17F20
	851 Move X0, X21
	852 Call 0x1C17F18
	853 Move X22, X0
	854 NotImplemented "Instruction CMP not yet implemented."
	855 Move X0, X22
	856 Call 0x3EB2AD0
	857 Move X21, [X0]
	858 Call 0x3EB2AE0
	859 Move W22, W31
	860 Move X21, X31
	861 Move X22, X0
	862 Move X8, [X31+24]
	863 Compare X8, 0
	864 JumpIfEqual {889}
	865 Move X8, [X31+24]
	866 Move X10, 0x9FD000
	867 Move X8, [X8]
	868 NotImplemented "Instruction LDRH not yet implemented."
	869 Move X10, [X10+3584]
	870 Move X1, [X10]
	871 Compare X9, 0
	872 JumpIfEqual {879}
	873 Move X10, [X8+176]
	874 Add X10, X10, 8
	875 NotImplemented "Instruction LDUR not yet implemented."
	876 NotImplemented "Instruction CMP not yet implemented."
	877 Subtract X9, X9, 1
	878 Add X10, X10, 16
	879 Move X0, [X31+24]
	880 Move W2, W31
	881 Call 0x1C5D788
	882 NotImplemented "Instruction LDRSW not yet implemented."
	883 Add X8, X8, X9
	884 Add X0, X8, 312
	885 Move X8, [X0]
	886 Move X1, [X0+8]
	887 Move X0, [X31+24]
	888 NotImplemented "Instruction BLR not yet implemented."
	889 Compare X21, 0
	890 JumpIfNotEqual {893}
	891 Move X0, X22
	892 Call 0x1D2D690
	893 Move X0, X21
	894 Call 0x1C17F18
	895 Call 0x1991590

Method: UnityEngine.Animations.IAnimationJob[] CreateAnimationJobs(UnityEngine.Animator animator, UnityEngine.Animations.Rigging.IRigConstraint[] constraints)

Disassembly:
	0x036F51EC ADRP X8, 0xA4B000
	0x036F51F0 LDR X8, [X8 + 0xAE8]
	0x036F51F4 LDR W9, [X0 + 0xE0]
	0x036F51F8 LDR X25, [X8]
	0x036F51FC CBNZ W9, 0x36F5204
	0x036F5200 BL 0x1C16DFC
	0x036F5204 MOV X0, X25
	0x036F5208 MOV X1, X31
	0x036F520C BL 0x338C698
	0x036F5210 MOV X1, X0
	0x036F5214 MOV X0, X24
	0x036F5218 MOV X2, X31
	0x036F521C BL 0x3395194
	0x036F5220 TBZ X0, 0x0, 0x36F571C
	0x036F5224 LDR X8, [X21]
	0x036F5228 MOV X0, X21
	0x036F522C MOV X1, X20
	0x036F5230 LDR X9, [X8 + 0x2C8]
	0x036F5234 LDR X2, [X8 + 0x2D0]
	0x036F5238 BLR X9
	0x036F523C STR W31, [X31 + 0xC]
	0x036F5240 CBZ X0, 0x36F5758
	0x036F5244 ADRP X24, 0xA4B000
	0x036F5248 LDR X24, [X24 + 0xAE0]
	0x036F524C MOV X25, X0
	0x036F5250 LDR X20, [X24]
	0x036F5254 MOV X1, X20
	0x036F5258 BL 0x1C16E00
	0x036F525C CBZ X0, 0x36F5770
	0x036F5260 LDR X24, [X24]
	0x036F5264 MOV X0, X25
	0x036F5268 MOV X1, X24
	0x036F526C BL 0x1C16E00
	0x036F5270 CBZ X0, 0x36F577C
	0x036F5274 LDR X8, [X0]
	0x036F5278 MOV X20, X0
	0x036F527C LDRH W9, [X8 + 0x12E]
	0x036F5280 CBZ X9, 0x36F52A4
	0x036F5284 LDR X10, [X8 + 0xB0]
	0x036F5288 ADD X10, X10, 0x8
	0x036F528C LDUR X11, [X10 - 0x8]
	0x036F5290 CMP X11, X24
	0x036F5294 B.EQ 0x36F52B8
	0x036F5298 SUBS X9, X9, 0x1
	0x036F529C ADD X10, X10, 0x10
	0x036F52A0 B.NE 0x36F528C
	0x036F52A4 MOV X0, X20
	0x036F52A8 MOV X1, X24
	0x036F52AC MOV W2, W31
	0x036F52B0 BL 0x1C5C788
	0x036F52B4 B 0x36F52C4
	0x036F52B8 LDRSW X9, [X10]
	0x036F52BC ADD X8, X8, X9, 0x4, LSL
	0x036F52C0 ADD X0, X8, 0x138
	0x036F52C4 LDP X8, X1, [X0]
	0x036F52C8 MOV X0, X20
	0x036F52CC BLR X8
	0x036F52D0 MOV X20, X0
	0x036F52D4 CBZ X0, 0x36F5788
	0x036F52D8 ADRP X28, 0x9FE000
	0x036F52DC ADRP X29, 0xA4B000
	0x036F52E0 ADRP X27, 0xA4B000
	0x036F52E4 LDR X28, [X28 + 0xE18]
	0x036F52E8 LDR X29, [X29 + 0xA00]
	0x036F52EC LDR X27, [X27 + 0xAD0]
	0x036F52F0 LDR X8, [X20]
	0x036F52F4 LDR X1, [X28]
	0x036F52F8 LDRH W9, [X8 + 0x12E]
	0x036F52FC CBZ X9, 0x36F5320
	0x036F5300 LDR X10, [X8 + 0xB0]
	0x036F5304 ADD X10, X10, 0x8
	0x036F5308 LDUR X11, [X10 - 0x8]
	0x036F530C CMP X11, X1
	0x036F5310 B.EQ 0x36F5330
	0x036F5314 SUBS X9, X9, 0x1
	0x036F5318 ADD X10, X10, 0x10
	0x036F531C B.NE 0x36F5308
	0x036F5320 MOV X0, X20
	0x036F5324 MOV W2, W31
	0x036F5328 BL 0x1C5C788
	0x036F532C B 0x36F533C
	0x036F5330 LDRSW X9, [X10]
	0x036F5334 ADD X8, X8, X9, 0x4, LSL
	0x036F5338 ADD X0, X8, 0x138
	0x036F533C LDP X8, X1, [X0]
	0x036F5340 MOV X0, X20
	0x036F5344 BLR X8
	0x036F5348 TBZ X0, 0x0, 0x36F5588
	0x036F534C LDR X8, [X20]
	0x036F5350 ADRP X10, 0xA4B000
	0x036F5354 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xCEC000
	009 Move W8, [X21+2982]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xA4C000
	017 Move X0, [X0+2464]
	018 Call 0x1C17CF4
	019 Move X0, 0xA28000
	020 Move X0, [X0+3632]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2982], W8
	024 Compare X19, 0
	025 JumpIfEqual {86}
	026 Move X1, [X19+24]
	027 Compare X1, 0
	028 JumpIfEqual {86}
	029 Move X8, 0xA4C000
	030 Move X8, [X8+2464]
	031 Move X0, [X8]
	032 Call 0x1C17D6C
	033 Move W9, [X19+24]
	034 Move X21, X0
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X23, 0xA28000
	037 Move X23, [X23+3632]
	038 Move W8, W31
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X24, W8
	041 Add X8, X19, X24
	042 Move X22, [X8+32]
	043 Compare X22, 0
	044 JumpIfEqual {96}
	045 Move X8, [X22]
	046 Move X1, [X23]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 1
	057 Move X0, X22
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 1
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X2, [X0+8]
	065 Move X0, X22
	066 Move X1, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare X21, 0
	069 JumpIfEqual {96}
	070 Move X22, X0
	071 Compare X0, 0
	072 JumpIfEqual {79}
	073 Move X8, [X21]
	074 Move X0, X22
	075 Move X1, [X8+64]
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {98}
	079 Move W8, [X21+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add X8, X21, X24
	082 Move [X8+32], X22
	083 Move W9, [X19+24]
	084 Add W8, W24, 1
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X21, X31
	087 Move X0, X21
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X30, [X31+64]
	095 Return X0
	096 Call 0x1C17F20
	097 Call 0x1C17F28
	098 Call 0x1C17F44
	099 Move X1, X31
	100 Call 0x1C17DEC

Method: System.Void DestroyAnimationJobs(UnityEngine.Animations.Rigging.IRigConstraint[] constraints, UnityEngine.Animations.IAnimationJob[] jobs)

Disassembly:
	0x036F54F0 BL 0x1C16DFC
	0x036F54F4 MOV X0, X26
	0x036F54F8 MOV X1, X31
	0x036F54FC BL 0x338C698
	0x036F5500 MOV X1, X0
	0x036F5504 CBZ X25, 0x36F5750
	0x036F5508 ADRP X8, 0xA4B000
	0x036F550C LDR X8, [X8 + 0xAD8]
	0x036F5510 LDR X2, [X8]
	0x036F5514 MOV X0, X25
	0x036F5518 BL 0x2AAE90C
	0x036F551C CBZ X19, 0x36F574C
	0x036F5520 LDR W10, [X19 + 0x1C]
	0x036F5524 LDR X8, [X19 + 0x10]
	0x036F5528 LDR X9, [X27]
	0x036F552C ADD W10, W10, 0x1
	0x036F5530 STR W10, [X19 + 0x1C]
	0x036F5534 CBZ X8, 0x36F5754
	0x036F5538 LDRSW X10, [X19 + 0x18]
	0x036F553C LDR W11, [X8 + 0x18]
	0x036F5540 MOV X2, X0
	0x036F5544 CMP W10, W11
	0x036F5548 B.CS 0x36F5560
	0x036F554C ADD W9, W10, 0x1
	0x036F5550 ADD X8, X8, X10, 0x4, LSL
	0x036F5554 STR W9, [X19 + 0x18]
	0x036F5558 STP X24, X2, [X8 + 0x20]
	0x036F555C B 0x36F5578
	0x036F5560 LDR X8, [X9 + 0x20]
	0x036F5564 LDR X8, [X8 + 0xC0]
	0x036F5568 LDR X3, [X8 + 0x70]
	0x036F556C MOV X0, X19
	0x036F5570 MOV X1, X24
	0x036F5574 BL 0x302A37C
	0x036F5578 LDR W8, [X31 + 0xC]
	0x036F557C ADD W8, W8, 0x1
	0x036F5580 STR W8, [X31 + 0xC]
	0x036F5584 B 0x36F52F0
	0x036F5588 MOV X21, X31
	0x036F558C MOV W19, W31
	0x036F5590 CBZ X20, 0x36F5714
	0x036F5594 ADRP X10, 0x9FE000
	0x036F5598 LDR X8, [X20]
	0x036F559C LDR X10, [X10 + 0xE00]
	0x036F55A0 LDRH W9, [X8 + 0x12E]
	0x036F55A4 LDR X1, [X10]
	0x036F55A8 CBZ X9, 0x36F55CC
	0x036F55AC LDR X10, [X8 + 0xB0]
	0x036F55B0 ADD X10, X10, 0x8
	0x036F55B4 LDUR X11, [X10 - 0x8]
	0x036F55B8 CMP X11, X1
	0x036F55BC B.EQ 0x36F56FC
	0x036F55C0 SUBS X9, X9, 0x1
	0x036F55C4 ADD X10, X10, 0x10
	0x036F55C8 B.NE 0x36F55B4
	0x036F55CC MOV X0, X20
	0x036F55D0 MOV W2, W31
	0x036F55D4 BL 0x1C5C788
	0x036F55D8 B 0x36F5708
	0x036F55DC LDR X8, [X9 + 0x20]
	0x036F55E0 MOV X0, X22
	0x036F55E4 MOV X1, X20
	0x036F55E8 LDR X8, [X8 + 0xC0]
	0x036F55EC LDR X2, [X8 + 0x70]
	0x036F55F0 BL 0x301BF90
	0x036F55F4 LDR X8, [X21]
	0x036F55F8 MOV X0, X21
	0x036F55FC LDP X9, X1, [X8 + 0x1A8]
	0x036F5600 BLR X9
	0x036F5604 ADRP X8, 0xA4B000
	0x036F5608 LDR X8, [X8 + 0x7B8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xCEC000
	009 Move W8, [X21+2983]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xA28000
	017 Move X0, [X0+3632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2983], W8
	021 Compare X19, 0
	022 JumpIfEqual {68}
	023 Compare X20, 0
	024 JumpIfEqual {77}
	025 Move W8, [X19+24]
	026 Move W9, [X20+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X23, 0xA28000
	030 Move X23, [X23+3632]
	031 Move W9, W31
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X19+24]
	034 Move X24, W9
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X20, X24
	037 Move X21, [X8+32]
	038 Compare X21, 0
	039 JumpIfEqual {77}
	040 Move X8, [X21]
	041 Add X9, X19, X24
	042 Move X22, [X9+32]
	043 Move X1, [X23]
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Compare X9, 0
	046 JumpIfEqual {53}
	047 Move X10, [X8+176]
	048 Add X10, X10, 8
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X9, X9, 1
	052 Add X10, X10, 16
	053 Move W2, 3
	054 Move X0, X21
	055 Call 0x1C5D788
	056 Move W9, [X10]
	057 Add W9, W9, 3
	058 Add X8, X8, W9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X2, [X0+8]
	062 Move X0, X21
	063 Move X1, X22
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W8, [X20+24]
	066 Add W9, W24, 1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Return 
	076 Call 0x1C17F28
	077 Call 0x1C17F20

Method: UnityEngine.Animations.Rigging.IAnimationJobData CreateSyncSceneToStreamData(UnityEngine.Animator animator, System.Collections.Generic.IList`1<UnityEngine.Animations.Rigging.IRigLayer> layers)

Disassembly:
	0x036F7CAC LDR X0, [X23]
	0x036F7CB0 LDR W8, [X0 + 0xE0]
	0x036F7CB4 CBNZ W8, 0x36F7CBC
	0x036F7CB8 BL 0x1C16DFC
	0x036F7CBC MOV X0, X21
	0x036F7CC0 MOV W1, W22
	0x036F7CC4 BL 0x36F7D0C
	0x036F7CC8 STP X0, X1, [X31]
	0x036F7CCC ADD X0, X31, 0x0
	0x036F7CD0 MOV X1, X20
	0x036F7CD4 MOV X2, X19
	0x036F7CD8 BL 0x36F7678
	0x036F7CDC TBNZ X0, 0x0, 0x36F7CF4
	0x036F7CE0 LDR W8, [X21]
	0x036F7CE4 ADD W22, W22, 0x1
	0x036F7CE8 CMP W22, W8
	0x036F7CEC B.LT 0x36F7CAC
	0x036F7CF0 MOVN W22, 0x0
	0x036F7CF4 MOV W0, W22
	0x036F7CF8 LDP X20, X19, [X31 + 0x30]
	0x036F7CFC LDP X22, X21, [X31 + 0x20]
	0x036F7D00 LDP X30, X23, [X31 + 0x10]
	0x036F7D04 ADD X31, X31, 0x40
	0x036F7D08 RET
	0x036F7D0C STR X30, [X31 - 0x30]!
	0x036F7D10 STP X22, X21, [X31 + 0x10]
	0x036F7D14 STP X20, X19, [X31 + 0x20]
	0x036F7D18 ADRP X21, 0xCE9000
	0x036F7D1C ADRP X22, 0xA26000
	0x036F7D20 LDRB W8, [X21 + 0xBC5]
	0x036F7D24 LDR X22, [X22 + 0x960]
	0x036F7D28 MOV W20, W1
	0x036F7D2C MOV X19, X0
	0x036F7D30 TBNZ X8, 0x0, 0x36F7D48
	0x036F7D34 ADRP X0, 0xA26000
	0x036F7D38 LDR X0, [X0 + 0x960]
	0x036F7D3C BL 0x1C16CF4
	0x036F7D40 MOVZ W8, 0x1
	0x036F7D44 STRB W8, [X21 + 0xBC5]
	0x036F7D48 LDR X0, [X22]
	0x036F7D4C LDR W8, [X0 + 0xE0]
	0x036F7D50 CBNZ W8, 0x36F7D58
	0x036F7D54 BL 0x1C16DFC
	0x036F7D58 MOV X0, X19
	0x036F7D5C MOV W1, W20
	0x036F7D60 BL 0x36F8534
	0x036F7D64 CMP W20, 0x7
	0x036F7D68 B.HI 0x36F7D88
	0x036F7D6C ADRP X9, 0xFFFFFFFFFD4A0000
	0x036F7D70 MOV W8, W20
	0x036F7D74 ADD X9, X9, 0x819
	0x036F7D78 ADR X10, 0x10
	0x036F7D7C LDRB W11, [X9, X8, LSL]
	0x036F7D80 ADD X10, X10, X11, 0x2, LSL
	0x036F7D84 BR X10
	0x036F7D88 ADD X8, X19, 0x8
	0x036F7D8C ADD X9, X19, 0x10
	0x036F7D90 B 0x36F7DE4
	0x036F7D94 ADD X8, X19, 0x18
	0x036F7D98 ADD X9, X19, 0x20
	0x036F7D9C B 0x36F7DE4
	0x036F7DA0 ADD X8, X19, 0x28
	0x036F7DA4 ADD X9, X19, 0x30
	0x036F7DA8 B 0x36F7DE4
	0x036F7DAC ADD X8, X19, 0x38
	0x036F7DB0 ADD X9, X19, 0x40
	0x036F7DB4 B 0x36F7DE4
	0x036F7DB8 ADD X8, X19, 0x48
	0x036F7DBC ADD X9, X19, 0x50
	0x036F7DC0 B 0x36F7DE4
	0x036F7DC4 ADD X8, X19, 0x58
	0x036F7DC8 ADD X9, X19, 0x60
	0x036F7DCC B 0x36F7DE4
	0x036F7DD0 ADD X8, X19, 0x68
	0x036F7DD4 ADD X9, X19, 0x70
	0x036F7DD8 B 0x36F7DE4
	0x036F7DDC ADD X8, X19, 0x78
	0x036F7DE0 ADD X9, X19, 0x80
	0x036F7DE4 LDR X1, [X9]
	0x036F7DE8 LDR X0, [X8]
	0x036F7DEC LDP X20, X19, [X31 + 0x20]
	0x036F7DF0 LDP X22, X21, [X31 + 0x10]
	0x036F7DF4 LDR X30, [X31], #0x30
	0x036F7DF8 RET
	0x036F7DFC STR X30, [X31 - 0x30]!
	0x036F7E00 STP X22, X21, [X31 + 0x10]
	0x036F7E04 STP X20, X19, [X31 + 0x20]
	0x036F7E08 ADRP X21, 0xCE9000
	0x036F7E0C ADRP X22, 0xA26000
	0x036F7E10 LDRB W8, [X21 + 0xBBA]
	0x036F7E14 LDR X22, [X22 + 0x960]
	0x036F7E18 MOV X20, X1
	0x036F7E1C MOV X19, X0
	0x036F7E20 TBNZ X8, 0x0, 0x36F7E44
	0x036F7E24 ADRP X0, 0xA26000
	0x036F7E28 LDR X0, [X0 + 0x960]
	0x036F7E2C BL 0x1C16CF4
	0x036F7E30 ADRP X0, 0xA49000
	0x036F7E34 LDR X0, [X0 + 0xAF8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X22, 0xCEA000
	008 Move X21, 0xA4A000
	009 Move W8, [X22+2984]
	010 Move X21, [X21+2560]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xA4A000
	018 Move X0, [X0+2632]
	019 Call 0x1C17CF4
	020 Move X0, 0xA4A000
	021 Move X0, [X0+2256]
	022 Call 0x1C17CF4
	023 Move X0, 0xA4A000
	024 Move X0, [X0+3024]
	025 Call 0x1C17CF4
	026 Move X0, 0xA4A000
	027 Move X0, [X0+3032]
	028 Call 0x1C17CF4
	029 Move X0, 0xA4A000
	030 Move X0, [X0+2560]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2984], W8
	034 Move X0, [X21]
	035 Move [X31+88], X31
	036 Move [X31+72], X31
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X2, X31, 88
	042 Add X3, X31, 72
	043 Move X0, X20
	044 Move X1, X19
	045 Call RigUtils.ExtractAllSyncableData, X0, X1, X2, X3
	046 Move X0, [X31+88]
	047 Compare X0, 0
	048 JumpIfEqual {112}
	049 Move X8, 0xA4A000
	050 Move X8, [X8+2256]
	051 Move X1, [X8]
	052 Call List`1<Object>.ToArray, X0
	053 Move X8, [X31+72]
	054 Compare X8, 0
	055 JumpIfEqual {112}
	056 Move X9, 0xA4A000
	057 Move X9, [X9+3024]
	058 Move X20, X0
	059 Move X0, X8
	060 Move X1, [X9]
	061 Call List`1<SyncableProperties>.ToArray, X0
	062 Compare X19, 0
	063 JumpIfEqual {112}
	064 Move X10, 0xA4A000
	065 Move X8, [X19]
	066 Move X10, [X10+2632]
	067 Move X22, 0xA4A000
	068 Move X21, X0
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Move X1, [X10]
	071 Move X22, [X22+3032]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X19
	081 Move W2, W31
	082 Call 0x1C5D788
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Add X8, X8, X9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X1, [X0+8]
	088 Move X0, X19
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move W3, W0
	091 NotImplemented "Instruction MOVI not yet implemented."
	092 Add X0, X31, 32
	093 Move X1, X20
	094 Move X2, X21
	095 Move [X31+32], V0
	096 Move [X31+40], V0
	097 Call RigSyncSceneToStreamData..ctor, X0, X1, X2, X3
	098 Move V0, [X31+32]
	099 Move V1, [X31+48]
	100 Move X0, [X22]
	101 Add X1, X31, 0
	102 Move [X31], V0
	103 Move [X31+8], V1
	104 Call 0x1C17E04
	105 Move X20, [X31+112]
	106 Move X19, [X31+120]
	107 Move X22, [X31+96]
	108 Move X21, [X31+104]
	109 Move X30, [X31+80]
	110 Add X31, X31, 128
	111 Return X0
	112 Call 0x1C17F20

Method: UnityEngine.Animations.Rigging.IAnimationJobBinder get_syncSceneToStreamBinder()

Disassembly:
	0x036F7FE0 B.GT 0x36F80D0
	0x036F7FE4 LDR W8, [X21]
	0x036F7FE8 CMP W8, 0x1
	0x036F7FEC B.LT 0x36F8050
	0x036F7FF0 ADRP X24, 0xA49000
	0x036F7FF4 LDR X24, [X24 + 0xAF8]
	0x036F7FF8 MOV W22, W31
	0x036F7FFC LDR X0, [X23]
	0x036F8000 LDR W8, [X0 + 0xE0]
	0x036F8004 CBNZ W8, 0x36F800C
	0x036F8008 BL 0x1C16DFC
	0x036F800C MOV X0, X21
	0x036F8010 MOV W1, W22
	0x036F8014 BL 0x36F7D0C
	0x036F8018 LDR X8, [X24]
	0x036F801C STP X0, X1, [X31]
	0x036F8020 ADD X1, X31, 0x0
	0x036F8024 MOV X0, X8
	0x036F8028 BL 0x1C16E04
	0x036F802C MOV X1, X0
	0x036F8030 ADD W2, W19, W22
	0x036F8034 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xCEA000
	005 Move X19, 0xA4A000
	006 Move W8, [X20+2985]
	007 Move X19, [X19+2560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA4A000
	013 Move X0, [X0+2560]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2985], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .cctor()

Disassembly:
	0x036F8038 MOV X3, X31
	0x036F803C BL 0x339F798
	0x036F8040 LDR W8, [X21]
	0x036F8044 ADD W22, W22, 0x1
	0x036F8048 CMP W22, W8
	0x036F804C B.LT 0x36F7FFC
	0x036F8050 LDP X20, X19, [X31 + 0x40]
	0x036F8054 LDP X22, X21, [X31 + 0x30]
	0x036F8058 LDP X24, X23, [X31 + 0x20]
	0x036F805C LDR X30, [X31 + 0x10]
	0x036F8060 ADD X31, X31, 0x50
	0x036F8064 RET
	0x036F8068 ADRP X0, 0xA00000
	0x036F806C LDR X0, [X0 + 0x528]
	0x036F8070 BL 0x1C16D08
	0x036F8074 BL 0x1C16F10
	0x036F8078 MOV X19, X0
	0x036F807C ADRP X0, 0xA48000
	0x036F8080 LDR X0, [X0 + 0xC28]
	0x036F8084 BL 0x1C16D08
	0x036F8088 MOV X1, X0
	0x036F808C MOV X0, X19
	0x036F8090 MOV X2, X31
	0x036F8094 BL 0x330E100
	0x036F8098 B 0x36F8100
	0x036F809C ADRP X0, 0xA03000
	0x036F80A0 LDR X0, [X0 + 0x760]
	0x036F80A4 BL 0x1C16D08
	0x036F80A8 BL 0x1C16F10
	0x036F80AC MOV X19, X0
	0x036F80B0 ADRP X0, 0xA48000
	0x036F80B4 LDR X0, [X0 + 0xC30]
	0x036F80B8 BL 0x1C16D08
	0x036F80BC MOV X1, X0
	0x036F80C0 MOV X0, X19
	0x036F80C4 MOV X2, X31
	0x036F80C8 BL 0x3316014
	0x036F80CC B 0x36F8100
	0x036F80D0 ADRP X0, 0xA03000
	0x036F80D4 LDR X0, [X0 + 0x578]
	0x036F80D8 BL 0x1C16D08
	0x036F80DC BL 0x1C16F10
	0x036F80E0 MOV X19, X0
	0x036F80E4 ADRP X0, 0xA48000
	0x036F80E8 LDR X0, [X0 + 0xC38]
	0x036F80EC BL 0x1C16D08
	0x036F80F0 MOV X1, X0
	0x036F80F4 MOV X0, X19
	0x036F80F8 MOV X2, X31
	0x036F80FC BL 0x3314A68
	0x036F8100 ADRP X0, 0xA48000
	0x036F8104 LDR X0, [X0 + 0xC40]
	0x036F8108 BL 0x1C16D08
	0x036F810C MOV X1, X0
	0x036F8110 MOV X0, X19
	0x036F8114 BL 0x1C16DEC
	0x036F8118 STP X30, X25, [X31 - 0x40]!
	0x036F811C STP X24, X23, [X31 + 0x10]
	0x036F8120 STP X22, X21, [X31 + 0x20]
	0x036F8124 STP X20, X19, [X31 + 0x30]
	0x036F8128 ADRP X21, 0xCE8000
	0x036F812C LDRB W8, [X21 + 0xBBD]
	0x036F8130 MOV W22, W2
	0x036F8134 MOV X19, X1
	0x036F8138 MOV X20, X0
	0x036F813C TBNZ X8, 0x0, 0x36F8154
	0x036F8140 ADRP X0, 0xA25000
	0x036F8144 LDR X0, [X0 + 0x960]
	0x036F8148 BL 0x1C16CF4
	0x036F814C MOVZ W8, 0x1
	0x036F8150 STRB W8, [X21 + 0xBBD]
	0x036F8154 CBZ X19, 0x36F8208
	0x036F8158 TBNZ X22, 0x1F, 0x36F823C
	0x036F815C ADRP X23, 0xA25000
	0x036F8160 LDR X23, [X23 + 0x960]
	0x036F8164 LDR X0, [X23]
	0x036F8168 LDR W8, [X0 + 0xE0]
	0x036F816C CBNZ W8, 0x36F8174
	0x036F8170 BL 0x1C16DFC
	0x036F8174 LDR W9, [X19 + 0x18]
	0x036F8178 LDR W8, [X20]
	0x036F817C SUB W9, W9, W22
	0x036F8180 ADD W9, W9, 0x1
	0x036F8184 CMP W8, W9
	0x036F8188 B.GT 0x36F8270
	0x036F818C CMP W8, 0x1
	0x036F8190 B.LT 0x36F81F0
	0x036F8194 MOV W22, W22
	0x036F8198 MOV X21, X31
	0x036F819C UBFM X24, X22, 0x20, 0x1F
	0x036F81A0 MOVZ X25, 0x1
	0x036F81A4 LDR X0, [X23]
	0x036F81A8 LDR W8, [X0 + 0xE0]
	0x036F81AC CBNZ W8, 0x36F81B4
	0x036F81B0 BL 0x1C16DFC
	0x036F81B4 MOV X0, X20
	0x036F81B8 MOV W1, W21
	0x036F81BC BL 0x36F7D0C
	0x036F81C0 LDR W8, [X19 + 0x18]
	0x036F81C4 ADD X9, X22, X21
	0x036F81C8 CMP X9, X8
	0x036F81CC B.CS 0x36F8204
	0x036F81D0 SBFM X8, X24, 0x20, 0x3F
	0x036F81D4 ADD X8, X19, X8, 0x4, LSL
	0x036F81D8 STP X0, X1, [X8 + 0x20]
	0x036F81DC LDRSW X8, [X20]
	0x036F81E0 ADD X21, X21, 0x1
	0x036F81E4 ADD X24, X24, X25
	0x036F81E8 CMP X21, X8
	0x036F81EC B.LT 0x36F81A4
	0x036F81F0 LDP X20, X19, [X31 + 0x30]
	0x036F81F4 LDP X22, X21, [X31 + 0x20]
	0x036F81F8 LDP X24, X23, [X31 + 0x10]
	0x036F81FC LDP X30, X25, [X31], #0x40
	0x036F8200 RET
	0x036F8204 BL 0x1C16F28
	0x036F8208 ADRP X0, 0xA00000
	0x036F820C LDR X0, [X0 + 0x528]
	0x036F8210 BL 0x1C16D08
	0x036F8214 BL 0x1C16F10
	0x036F8218 MOV X19, X0
	0x036F821C ADRP X0, 0xA48000
	0x036F8220 LDR X0, [X0 + 0xC28]
	0x036F8224 BL 0x1C16D08
	0x036F8228 MOV X1, X0
	0x036F822C MOV X0, X19
	0x036F8230 MOV X2, X31
	0x036F8234 BL 0x330E100
	0x036F8238 B 0x36F82A0
	0x036F823C ADRP X0, 0xA03000
	0x036F8240 LDR X0, [X0 + 0x760]
	0x036F8244 BL 0x1C16D08
	0x036F8248 BL 0x1C16F10
	0x036F824C MOV X19, X0
	0x036F8250 ADRP X0, 0xA48000
	0x036F8254 LDR X0, [X0 + 0xC30]
	0x036F8258 BL 0x1C16D08
	0x036F825C MOV X1, X0
	0x036F8260 MOV X0, X19
	0x036F8264 MOV X2, X31
	0x036F8268 BL 0x3316014
	0x036F826C B 0x36F82A0
	0x036F8270 ADRP X0, 0xA03000
	0x036F8274 LDR X0, [X0 + 0x578]
	0x036F8278 BL 0x1C16D08
	0x036F827C BL 0x1C16F10
	0x036F8280 MOV X19, X0
	0x036F8284 ADRP X0, 0xA48000
	0x036F8288 LDR X0, [X0 + 0xC38]
	0x036F828C BL 0x1C16D08
	0x036F8290 MOV X1, X0
	0x036F8294 MOV X0, X19
	0x036F8298 MOV X2, X31
	0x036F829C BL 0x3314A68
	0x036F82A0 ADRP X0, 0xA48000
	0x036F82A4 LDR X0, [X0 + 0xC48]
	0x036F82A8 BL 0x1C16D08
	0x036F82AC MOV X1, X0
	0x036F82B0 MOV X0, X19
	0x036F82B4 BL 0x1C16DEC
	0x036F82B8 STR X30, [X31 - 0x30]!
	0x036F82BC STP X22, X21, [X31 + 0x10]
	0x036F82C0 STP X20, X19, [X31 + 0x20]
	0x036F82C4 ADRP X21, 0xCE8000
	0x036F82C8 ADRP X22, 0xA25000
	0x036F82CC LDRB W8, [X21 + 0xBBE]
	0x036F82D0 LDR X22, [X22 + 0x960]
	0x036F82D4 MOV X20, X1
	0x036F82D8 MOV X19, X0
	0x036F82DC TBNZ X8, 0x0, 0x36F8300
	0x036F82E0 ADRP X0, 0xA25000
	0x036F82E4 LDR X0, [X0 + 0x960]
	0x036F82E8 BL 0x1C16CF4
	0x036F82EC ADRP X0, 0xA48000
	0x036F82F0 LDR X0, [X0 + 0xAF8]
	0x036F82F4 BL 0x1C16CF4
	0x036F82F8 MOVZ W8, 0x1
	0x036F82FC STRB W8, [X21 + 0xBBE]
	0x036F8300 LDR X0, [X22]
	0x036F8304 LDR W8, [X0 + 0xE0]
	0x036F8308 CBNZ W8, 0x36F8310
	0x036F830C BL 0x1C16DFC
	0x036F8310 CBZ X20, 0x36F8354
	0x036F8314 ADRP X8, 0xA48000
	0x036F8318 LDR X8, [X8 + 0xAF8]
	0x036F831C LDR X9, [X20]
	0x036F8320 MOV X0, X20
	0x036F8324 LDR X1, [X8]
	0x036F8328 LDR X8, [X9 + 0x40]
	0x036F832C LDR X9, [X1 + 0x40]
	0x036F8330 CMP X8, X9
	0x036F8334 B.NE 0x36F8358
	0x036F8338 BL 0x1C16E08
	0x036F833C LDP X1, X2, [X0]
	0x036F8340 MOV X0, X19
	0x036F8344 LDP X20, X19, [X31 + 0x20]
	0x036F8348 LDP X22, X21, [X31 + 0x10]
	0x036F834C LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xCE9000
	014 Move X23, 0xA49000
	015 Move X19, 0xA49000
	016 Move X20, 0xA24000
	017 Move X21, 0x9FC000
	018 Move W8, [X22+2986]
	019 Move X23, [X23+3040]
	020 Move X19, [X19+3048]
	021 Move X20, [X20+2688]
	022 Move X21, [X21+1728]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {77}
	027 Move X0, 0xA25000
	028 Move X0, [X0+584]
	029 Call 0x1C17CF4
	030 Move X0, 0xA49000
	031 Move X0, [X0+3056]
	032 Call 0x1C17CF4
	033 Move X0, 0xA49000
	034 Move X0, [X0+3048]
	035 Call 0x1C17CF4
	036 Move X0, 0xA49000
	037 Move X0, [X0+3040]
	038 Call 0x1C17CF4
	039 Move X0, 0xA23000
	040 Move X0, [X0+3456]
	041 Call 0x1C17CF4
	042 Move X0, 0xA04000
	043 Move X0, [X0+3816]
	044 Call 0x1C17CF4
	045 Move X0, 0xA49000
	046 Move X0, [X0+3064]
	047 Call 0x1C17CF4
	048 Move X0, 0xA49000
	049 Move X0, [X0+3072]
	050 Call 0x1C17CF4
	051 Move X0, 0xA49000
	052 Move X0, [X0+2560]
	053 Call 0x1C17CF4
	054 Move X0, 0xA24000
	055 Move X0, [X0+2688]
	056 Call 0x1C17CF4
	057 Move X0, 0x9FC000
	058 Move X0, [X0+1728]
	059 Call 0x1C17CF4
	060 Move X0, 0xA04000
	061 Move X0, [X0+3744]
	062 Call 0x1C17CF4
	063 Move X0, 0xA49000
	064 Move X0, [X0+3080]
	065 Call 0x1C17CF4
	066 Move X0, 0xA49000
	067 Move X0, [X0+3088]
	068 Call 0x1C17CF4
	069 Move X0, 0xA04000
	070 Move X0, [X0+3832]
	071 Call 0x1C17CF4
	072 Move X0, 0xA25000
	073 Move X0, [X0+1296]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X22+2986], W8
	077 Move X0, [X23]
	078 Call 0x1C17F10
	079 Move X1, [X19]
	080 Move X19, X0
	081 Call Dictionary`2<Object, PropertyDescriptor>..ctor, X0
	082 Move X0, [X21]
	083 Move X20, [X20]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X0, X20
	089 Move X1, X31
	090 Call Type.GetTypeFromHandle, X0
	091 Compare X19, 0
	092 JumpIfEqual {215}
	093 Move X23, 0xA49000
	094 Move X23, [X23+3056]
	095 Move X21, 0xA23000
	096 Move X22, 0xA25000
	097 Move X24, 0xA04000
	098 Move X28, 0xA04000
	099 Move X27, 0xA25000
	100 Move X26, 0xA04000
	101 Move X25, 0xA49000
	102 Move X20, 0xA49000
	103 Move X21, [X21+3456]
	104 Move X22, [X22+584]
	105 Move X24, [X24+3744]
	106 Move X28, [X28+3832]
	107 Move X27, [X27+1296]
	108 Move X26, [X26+3816]
	109 Move X25, [X25+3088]
	110 Move X20, [X20+2560]
	111 Move X3, [X23]
	112 Move X29, 4
	113 NotImplemented "Instruction MOVK not yet implemented."
	114 Move X1, X0
	115 Subtract X2, X29, 3
	116 Move X0, X19
	117 Call Dictionary`2<Object, PropertyDescriptor>.Add, X0, X1, X2
	118 Move X0, [X21]
	119 Move X1, X31
	120 Call Type.GetTypeFromHandle, X0
	121 Move X3, [X23]
	122 Move X1, X0
	123 Or X2, X31, 0x100000001
	124 Move X0, X19
	125 Call Dictionary`2<Object, PropertyDescriptor>.Add, X0, X1, X2
	126 Move X0, [X22]
	127 Move X1, X31
	128 Call Type.GetTypeFromHandle, X0
	129 Move X3, [X23]
	130 Move X1, X0
	131 Move W2, 1
	132 Move X0, X19
	133 Call Dictionary`2<Object, PropertyDescriptor>.Add, X0, X1, X2
	134 Move X0, [X24]
	135 Move X1, X31
	136 Call Type.GetTypeFromHandle, X0
	137 Move X3, [X23]
	138 Move X1, X0
	139 Or X2, X31, 0x200000002
	140 Move X0, X19
	141 Call Dictionary`2<Object, PropertyDescriptor>.Add, X0, X1, X2
	142 Move X0, [X28]
	143 Move X1, X31
	144 Call Type.GetTypeFromHandle, X0
	145 Move X3, [X23]
	146 Move X1, X0
	147 Subtract X2, X29, 1
	148 Move X0, X19
	149 Call Dictionary`2<Object, PropertyDescriptor>.Add, X0, X1, X2
	150 Move X0, [X27]
	151 Move X1, X31
	152 Call Type.GetTypeFromHandle, X0
	153 Move X3, [X23]
	154 Move X2, 4
	155 Move X1, X0
	156 NotImplemented "Instruction MOVK not yet implemented."
	157 Move X0, X19
	158 Call Dictionary`2<Object, PropertyDescriptor>.Add, X0, X1, X2
	159 Move X0, [X26]
	160 Move X1, X31
	161 Call Type.GetTypeFromHandle, X0
	162 Move X3, [X23]
	163 Move X2, 4
	164 Move X1, X0
	165 NotImplemented "Instruction MOVK not yet implemented."
	166 Move X0, X19
	167 Call Dictionary`2<Object, PropertyDescriptor>.Add, X0, X1, X2
	168 Move X0, [X25]
	169 Move X1, X31
	170 Call Type.GetTypeFromHandle, X0
	171 Move X3, [X23]
	172 Move X2, 3
	173 Move X1, X0
	174 NotImplemented "Instruction MOVK not yet implemented."
	175 Move X0, X19
	176 Call Dictionary`2<Object, PropertyDescriptor>.Add, X0, X1, X2
	177 Move X8, 0xA49000
	178 Move X8, [X8+3080]
	179 Move X1, X31
	180 Move X0, [X8]
	181 Call Type.GetTypeFromHandle, X0
	182 Move X3, [X23]
	183 Move X1, X0
	184 Move W2, 3
	185 Move X0, X19
	186 Call Dictionary`2<Object, PropertyDescriptor>.Add, X0, X1, X2
	187 Move X8, [X20]
	188 Move X8, [X8+184]
	189 Move [X8], X19
	190 Move X8, 0xA49000
	191 Move X8, [X8+3072]
	192 Move X0, [X8]
	193 Call 0x1C17F10
	194 Move X8, 0xA49000
	195 Move X8, [X8+3064]
	196 Move X19, X0
	197 Move X1, [X8]
	198 Call RigSyncSceneToStreamJobBinder`1<RigSyncSceneToStreamData>..ctor, X0
	199 Move X8, [X20]
	200 Move X22, [X31+64]
	201 Move X21, [X31+72]
	202 Move X24, [X31+48]
	203 Move X23, [X31+56]
	204 Move X26, [X31+32]
	205 Move X25, [X31+40]
	206 Move X8, [X8+184]
	207 Move X28, [X31+16]
	208 Move X27, [X31+24]
	209 Move [X8+8], X19
	210 Move X20, [X31+80]
	211 Move X19, [X31+88]
	212 Move X29, [X31+96]
	213 Move X30, [X31+104]
	214 Return 
	215 Call 0x1C17F20

