Type: UnityEngine.Animations.Rigging.AnimationJobCacheBuilder

Method: System.Void .ctor()

Disassembly:
	0x036E3580 ADD X1, X31, 0x0
	0x036E3584 MOV X2, X31
	0x036E3588 STR X8, [X31 + 0x30]
	0x036E358C STP V5, V4, [X31 + 0x10]
	0x036E3590 STR V6, [X31]
	0x036E3594 BL 0x3BF87A4
	0x036E3598 LDR X30, [X31 + 0x40]
	0x036E359C ADD X31, X31, 0x50
	0x036E35A0 RET
	0x036E35A4 SUB X31, X31, 0x50
	0x036E35A8 STR X30, [X31 + 0x40]
	0x036E35AC LDR X8, [X1 + 0x30]
	0x036E35B0 LDP V1, V0, [X1 + 0x10]
	0x036E35B4 LDR V2, [X1]
	0x036E35B8 ADD X1, X31, 0x0
	0x036E35BC MOV X2, X31
	0x036E35C0 STR X8, [X31 + 0x30]
	0x036E35C4 STP V1, V0, [X31 + 0x10]
	0x036E35C8 STR V2, [X31]
	0x036E35CC BL 0x3BF8990
	0x036E35D0 LDR X30, [X31 + 0x40]
	0x036E35D4 ADD X31, X31, 0x50
	0x036E35D8 RET
	0x036E35DC SUB X31, X31, 0x50
	0x036E35E0 STR X30, [X31 + 0x40]
	0x036E35E4 LDR X8, [X1 + 0x30]
	0x036E35E8 LDP V5, V4, [X1 + 0x10]
	0x036E35EC LDR V6, [X1]
	0x036E35F0 ADD X1, X31, 0x0
	0x036E35F4 MOV X2, X31
	0x036E35F8 STR X8, [X31 + 0x30]
	0x036E35FC STP V5, V4, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xCFE000
	007 Move X21, 0xA3D000
	008 Move X20, 0xA3D000
	009 Move W8, [X22+2835]
	010 Move X21, [X21+3256]
	011 Move X20, [X20+3264]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA3D000
	018 Move X0, [X0+3264]
	019 Call 0x1C17CF4
	020 Move X0, 0xA3D000
	021 Move X0, [X0+3256]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2835], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move X0, [X21]
	029 Call 0x1C17F10
	030 Move X1, [X20]
	031 Move X20, X0
	032 Call List`1<Single>..ctor, X0
	033 Move [X19+16], X20
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 

Method: UnityEngine.Animations.Rigging.CacheIndex Add(System.Single v)

Disassembly:
	0x036E3600 STR V6, [X31]
	0x036E3604 BL 0x3BF8A18
	0x036E3608 LDR X30, [X31 + 0x40]
	0x036E360C ADD X31, X31, 0x50
	0x036E3610 RET
	0x036E3614 SUB X31, X31, 0xA0
	0x036E3618 STP X30, X19, [X31 + 0x90]
	0x036E361C STR X1, [X31 + 0x40]
	0x036E3620 STR W2, [X31 + 0x48]
	0x036E3624 STR W31, [X31 + 0x38]
	0x036E3628 STP X31, X31, [X31 + 0x28]
	0x036E362C STR X31, [X31 + 0x20]
	0x036E3630 STR W31, [X31 + 0x18]
	0x036E3634 STR X31, [X31 + 0x10]
	0x036E3638 LDR X8, [X0 + 0x30]
	0x036E363C LDP V1, V0, [X0 + 0x10]
	0x036E3640 LDR V2, [X0]
	0x036E3644 MOV X19, X0
	0x036E3648 ADD X0, X31, 0x40
	0x036E364C ADD X1, X31, 0x50
	0x036E3650 ADD X2, X31, 0x30
	0x036E3654 ADD X3, X31, 0x20
	0x036E3658 ADD X4, X31, 0x10
	0x036E365C MOV X5, X31
	0x036E3660 STR X8, [X31 + 0x80]
	0x036E3664 STP V1, V0, [X31 + 0x60]
	0x036E3668 STR V2, [X31 + 0x5]
	0x036E366C BL 0x3BF8C04
	0x036E3670 LDP S0, S1, [X31 + 0x30]
	0x036E3674 LDR V2, [X31 + 0x38]
	0x036E3678 LDP S3, S4, [X31 + 0x20]
	0x036E367C LDP S5, S6, [X31 + 0x28]
	0x036E3680 LDP V7, V16, [X19]
	0x036E3684 LDR X8, [X19 + 0x30]
	0x036E3688 LDR V17, [X19 + 0x2]
	0x036E368C LDR X9, [X31 + 0x10]
	0x036E3690 LDR V18, [X31 + 0x18]
	0x036E3694 ADD X0, X31, 0x40
	0x036E3698 ADD X1, X31, 0x50
	0x036E369C MOV W2, W31
	0x036E36A0 MOV X3, X31
	0x036E36A4 STR X8, [X31 + 0x80]
	0x036E36A8 STP V16, V17, [X31 + 0x60]
	0x036E36AC STR V7, [X31 + 0x5]
	0x036E36B0 STR S18, [X31 + 0x8]
	0x036E36B4 STR X9, [X31]
	0x036E36B8 BL 0x3BF8CE0
	0x036E36BC LDP X30, X19, [X31 + 0x90]
	0x036E36C0 ADD X31, X31, 0xA0

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCFE000
	006 Move W8, [X20+2836]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xA5E000
	014 Move X0, [X0+1816]
	015 Call 0x1C17CF4
	016 Move X0, 0xA5E000
	017 Move X0, [X0+1824]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+2836], W8
	021 Move X0, [X19+16]
	022 Compare X0, 0
	023 JumpIfEqual {55}
	024 Move X9, 0xA5E000
	025 Move X9, [X9+1816]
	026 Move W10, [X0+28]
	027 Move X8, [X0+16]
	028 Move X9, [X9]
	029 Add W10, W10, 1
	030 Move [X0+28], W10
	031 Compare X8, 0
	032 JumpIfEqual {55}
	033 NotImplemented "Instruction LDRSW not yet implemented."
	034 Move W11, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add W9, W10, 1
	037 Add X8, X8, X10
	038 Move [X0+24], W9
	039 Move [X8+32], S8
	040 Move X8, [X9+32]
	041 Move V0, V8
	042 Move X8, [X8+192]
	043 Move X1, [X8+112]
	044 Call List`1<Single>.AddWithResize, X0, V0
	045 Move X0, [X19+16]
	046 Compare X0, 0
	047 JumpIfEqual {55}
	048 Move W8, [X0+24]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+8]
	052 Subtract W0, W8, 1
	053 Move V8, [X31+32]
	054 Return X0
	055 Call 0x1C17F20

Method: UnityEngine.Animations.Rigging.CacheIndex Add(UnityEngine.Vector2 v)

Disassembly:
	0x036E36C4 RET
	0x036E36C8 LDUR X8, [X0 + 0xA4]
	0x036E36CC LDUR X1, [X0 + 0xAC]
	0x036E36D0 MOV X0, X8
	0x036E36D4 RET
	0x036E36D8 STUR X1, [X0 + 0xA4]
	0x036E36DC STUR X2, [X0 + 0xAC]
	0x036E36E0 RET
	0x036E36E4 RET
	0x036E36E8 STP D15, D14, [X31 - 0x90]!
	0x036E36EC STP D13, D12, [X31 + 0x10]
	0x036E36F0 STP D11, D10, [X31 + 0x20]
	0x036E36F4 STP D9, D8, [X31 + 0x30]
	0x036E36F8 STR X29, [X31 + 0x40]
	0x036E36FC STP X30, X25, [X31 + 0x50]
	0x036E3700 STP X24, X23, [X31 + 0x60]
	0x036E3704 STP X22, X21, [X31 + 0x70]
	0x036E3708 STP X20, X19, [X31 + 0x80]
	0x036E370C SUB X31, X31, 0x1E0
	0x036E3710 ADRP X21, 0xCFD000
	0x036E3714 LDRB W8, [X21 + 0xB1C]
	0x036E3718 MOV X20, X1
	0x036E371C MOV X19, X0
	0x036E3720 TBNZ X8, 0x0, 0x36E3738
	0x036E3724 ADRP X0, 0xA3C000
	0x036E3728 LDR X0, [X0 + 0x230]
	0x036E372C BL 0x1C16CF4
	0x036E3730 MOVZ W8, 0x1
	0x036E3734 STRB W8, [X21 + 0xB1C]
	0x036E3738 MOV X0, X19
	0x036E373C MOV X1, X31
	0x036E3740 STR W31, [X31 + 0x188]
	0x036E3744 STR X31, [X31 + 0x180]
	0x036E3748 STR W31, [X31 + 0x178]
	0x036E374C STR X31, [X31 + 0x170]
	0x036E3750 STR W31, [X31 + 0x168]
	0x036E3754 STR X31, [X31 + 0x160]
	0x036E3758 BL 0x36F9EA0
	0x036E375C STP X0, X1, [X31 + 0x190]
	0x036E3760 LDR X8, [X20 + 0x30]
	0x036E3764 LDP V1, V0, [X20 + 0x10]
	0x036E3768 LDR V2, [X20]
	0x036E376C ADD X0, X31, 0x190
	0x036E3770 ADD X1, X31, 0x1A0
	0x036E3774 MOV X2, X31
	0x036E3778 STR X8, [X31 + 0x1D0]
	0x036E377C STP V1, V0, [X31 + 0x1B0]
	0x036E3780 STR V2, [X31 + 0x1A]
	0x036E3784 BL 0x3BF9750
	0x036E3788 LDR W8, [X19 + 0x8]
	0x036E378C FCMP S0, 0x0
	0x036E3790 B.LE 0x36E3CC8
	0x036E3794 CMP W8, 0x1
	0x036E3798 STR S0, [X31 + 0x8]
	0x036E379C B.LT 0x36E3824
	0x036E37A0 MOV X21, X31
	0x036E37A4 MOV X22, X31
	0x036E37A8 LDR X8, [X19]
	0x036E37AC ADD X0, X31, 0x180
	0x036E37B0 ADD X1, X31, 0x1A0
	0x036E37B4 MOV X2, X31
	0x036E37B8 ADD X8, X8, X21
	0x036E37BC LDR W9, [X8 + 0x8]
	0x036E37C0 LDR X8, [X8]
	0x036E37C4 STR W9, [X31 + 0x188]
	0x036E37C8 STR X8, [X31 + 0x180]
	0x036E37CC LDR X8, [X20 + 0x30]
	0x036E37D0 LDP V1, V0, [X20 + 0x10]
	0x036E37D4 LDR V2, [X20]
	0x036E37D8 STR X8, [X31 + 0x1D0]
	0x036E37DC STP V1, V0, [X31 + 0x1B0]
	0x036E37E0 STR V2, [X31 + 0x1A]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xCFE000
	007 Move W8, [X20+2837]
	008 Move V8, V1
	009 Move V9, V0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xA5E000
	016 Move X0, [X0+1816]
	017 Call 0x1C17CF4
	018 Move X0, 0xA5E000
	019 Move X0, [X0+1824]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2837], W8
	023 Move X0, [X19+16]
	024 Compare X0, 0
	025 JumpIfEqual {80}
	026 Move X20, 0xA5E000
	027 Move X20, [X20+1816]
	028 Move W10, [X0+28]
	029 Move X8, [X0+16]
	030 Move X9, [X20]
	031 Add W10, W10, 1
	032 Move [X0+28], W10
	033 Compare X8, 0
	034 JumpIfEqual {80}
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Move W11, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add W9, W10, 1
	039 Add X8, X8, X10
	040 Move [X0+24], W9
	041 Move [X8+32], S9
	042 Move X8, [X9+32]
	043 Move V0, V9
	044 Move X8, [X8+192]
	045 Move X1, [X8+112]
	046 Call List`1<Single>.AddWithResize, X0, V0
	047 Move X0, [X19+16]
	048 Compare X0, 0
	049 JumpIfEqual {80}
	050 Move W10, [X0+28]
	051 Move X8, [X0+16]
	052 Move X9, [X20]
	053 Add W10, W10, 1
	054 Move [X0+28], W10
	055 Compare X8, 0
	056 JumpIfEqual {80}
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Move W11, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add W9, W10, 1
	061 Add X8, X8, X10
	062 Move [X0+24], W9
	063 Move [X8+32], S8
	064 Move X8, [X9+32]
	065 Move V0, V8
	066 Move X8, [X8+192]
	067 Move X1, [X8+112]
	068 Call List`1<Single>.AddWithResize, X0, V0
	069 Move X0, [X19+16]
	070 Compare X0, 0
	071 JumpIfEqual {80}
	072 Move W8, [X0+24]
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X30, [X31+16]
	076 Subtract W0, W8, 2
	077 Move D9, [X31+48]
	078 Move D8, [X31+56]
	079 Return X0
	080 Call 0x1C17F20

Method: UnityEngine.Animations.Rigging.CacheIndex Add(UnityEngine.Vector3 v)

Disassembly:
	0x036E37E4 BL 0x3BF85E4
	0x036E37E8 LDR X8, [X19 + 0x58]
	0x036E37EC ADD X22, X22, 0x1
	0x036E37F0 ADD X8, X8, X21
	0x036E37F4 STP S0, S1, [X8]
	0x036E37F8 STR S2, [X8 + 0x8]
	0x036E37FC LDR X8, [X19]
	0x036E3800 LDR W9, [X31 + 0x188]
	0x036E3804 LDR X10, [X31 + 0x180]
	0x036E3808 ADD X8, X8, X21
	0x036E380C STR W9, [X8 + 0x8]
	0x036E3810 STR X10, [X8]
	0x036E3814 LDRSW X8, [X19 + 0x8]
	0x036E3818 ADD X21, X21, 0xC
	0x036E381C CMP X22, X8
	0x036E3820 B.LT 0x36E37A8
	0x036E3824 SUB W24, W8, 0x1
	0x036E3828 LDP V2, V0, [X20 + 0x10]
	0x036E382C LDR X8, [X20 + 0x30]
	0x036E3830 LDR V1, [X20]
	0x036E3834 ADD X21, X19, 0x10
	0x036E3838 ADD X1, X31, 0x120
	0x036E383C MOV X0, X21
	0x036E3840 ADD X22, X19, 0x58
	0x036E3844 ADD X23, X19, 0x48
	0x036E3848 STR X8, [X31 + 0x150]
	0x036E384C STP V2, V0, [X31 + 0x130]
	0x036E3850 STR V1, [X31 + 0x12]
	0x036E3854 BL 0x36E3374
	0x036E3858 MOVZ W8, 0x7F800000
	0x036E385C LDR X9, [X19 + 0x90]
	0x036E3860 FMOV S5, W8
	0x036E3864 LDPSW D8, D10, [X19 + 0x110]
	0x036E3868 LDP S3, S4, [X19 + 0x28]
	0x036E386C LDR V6, [X19 + 0x30]
	0x036E3870 MOV X0, X22
	0x036E3874 LDR V7, [X9, X10, LSL #2]
	0x036E3878 FADD S0, S0, S3
	0x036E387C FADD S1, S1, S4
	0x036E3880 LDR V4, [X19 + 0xA0]
	0x036E3884 LDR V3, [X9, X8, LSL #2]
	0x036E3888 FCVTZS W8, S7
	0x036E388C FCMP S7, S5
	0x036E3890 MOVZ W9, 0x80000000
	0x036E3894 FADD S2, S2, S6
	0x036E3898 CSEL W2, W9, W8, EQ
	0x036E389C MOV X1, X23
	0x036E38A0 BL 0x36E3D54
	0x036E38A4 TBZ X0, 0x0, 0x36E3B28
	0x036E38A8 LDP V2, V0, [X20 + 0x10]
	0x036E38AC LDR X8, [X20 + 0x30]
	0x036E38B0 LDR V1, [X20]
	0x036E38B4 ADD X0, X19, 0x68
	0x036E38B8 ADD X1, X31, 0x1A0
	0x036E38BC MOV X2, X31
	0x036E38C0 STR X8, [X31 + 0x1D0]
	0x036E38C4 STP V2, V0, [X31 + 0x1B0]
	0x036E38C8 STR V1, [X31 + 0x1A]
	0x036E38CC BL 0x3BF9750
	0x036E38D0 CMP W24, 0x1
	0x036E38D4 B.LT 0x36E3B28
	0x036E38D8 LDR V1, [X31 + 0x8]
	0x036E38DC ADRP X25, 0xA3C000
	0x036E38E0 MOVZ W8, 0xC
	0x036E38E4 MOV X22, X31
	0x036E38E8 FMUL S0, S1, S0
	0x036E38EC STR S0, [X31 + 0xC]
	0x036E38F0 LDR X25, [X25 + 0x230]
	0x036E38F4 UMADDL X23, X24, X8, X31
	0x036E38F8 LDR X8, [X19]
	0x036E38FC ADD X0, X31, 0x170
	0x036E3900 ADD X1, X31, 0x1A0
	0x036E3904 MOV X2, X31
	0x036E3908 ADD X8, X8, X22
	0x036E390C LDR W9, [X8 + 0x14]
	0x036E3910 LDUR X8, [X8 + 0xC]
	0x036E3914 STR W9, [X31 + 0x178]
	0x036E3918 STR X8, [X31 + 0x170]
	0x036E391C LDR X8, [X20 + 0x30]
	0x036E3920 LDP V1, V0, [X20 + 0x10]
	0x036E3924 LDR V2, [X20]
	0x036E3928 STR X8, [X31 + 0x1D0]
	0x036E392C STP V1, V0, [X31 + 0x1B0]
	0x036E3930 STR V2, [X31 + 0x1A]
	0x036E3934 BL 0x3BF85E4
	0x036E3938 LDR X8, [X19]
	0x036E393C STR S0, [X31 + 0x22C]
	0x036E3940 STR S1, [X31 + 0x228]
	0x036E3944 STR S2, [X31 + 0x1C]
	0x036E3948 ADD X8, X8, X22
	0x036E394C LDR W9, [X8 + 0x8]
	0x036E3950 LDR X8, [X8]
	0x036E3954 ADD X0, X31, 0x170
	0x036E3958 ADD X1, X31, 0x1A0
	0x036E395C STR W9, [X31 + 0x178]
	0x036E3960 STR X8, [X31 + 0x170]
	0x036E3964 LDR X8, [X20 + 0x30]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xCFE000
	008 Move W8, [X20+2838]
	009 Move V8, V2
	010 Move V9, V1
	011 Move V10, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA5E000
	018 Move X0, [X0+1816]
	019 Call 0x1C17CF4
	020 Move X0, 0xA5E000
	021 Move X0, [X0+1824]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2838], W8
	025 Move X0, [X19+16]
	026 Compare X0, 0
	027 JumpIfEqual {105}
	028 Move X20, 0xA5E000
	029 Move X20, [X20+1816]
	030 Move W10, [X0+28]
	031 Move X8, [X0+16]
	032 Move X9, [X20]
	033 Add W10, W10, 1
	034 Move [X0+28], W10
	035 Compare X8, 0
	036 JumpIfEqual {105}
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Move W11, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add W9, W10, 1
	041 Add X8, X8, X10
	042 Move [X0+24], W9
	043 Move [X8+32], S10
	044 Move X8, [X9+32]
	045 Move V0, V10
	046 Move X8, [X8+192]
	047 Move X1, [X8+112]
	048 Call List`1<Single>.AddWithResize, X0, V0
	049 Move X0, [X19+16]
	050 Compare X0, 0
	051 JumpIfEqual {105}
	052 Move W10, [X0+28]
	053 Move X8, [X0+16]
	054 Move X9, [X20]
	055 Add W10, W10, 1
	056 Move [X0+28], W10
	057 Compare X8, 0
	058 JumpIfEqual {105}
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Move W11, [X8+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add W9, W10, 1
	063 Add X8, X8, X10
	064 Move [X0+24], W9
	065 Move [X8+32], S9
	066 Move X8, [X9+32]
	067 Move V0, V9
	068 Move X8, [X8+192]
	069 Move X1, [X8+112]
	070 Call List`1<Single>.AddWithResize, X0, V0
	071 Move X0, [X19+16]
	072 Compare X0, 0
	073 JumpIfEqual {105}
	074 Move W10, [X0+28]
	075 Move X8, [X0+16]
	076 Move X9, [X20]
	077 Add W10, W10, 1
	078 Move [X0+28], W10
	079 Compare X8, 0
	080 JumpIfEqual {105}
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Move W11, [X8+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add W9, W10, 1
	085 Add X8, X8, X10
	086 Move [X0+24], W9
	087 Move [X8+32], S8
	088 Move X8, [X9+32]
	089 Move V0, V8
	090 Move X8, [X8+192]
	091 Move X1, [X8+112]
	092 Call List`1<Single>.AddWithResize, X0, V0
	093 Move X0, [X19+16]
	094 Compare X0, 0
	095 JumpIfEqual {105}
	096 Move W8, [X0+24]
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X30, [X31+24]
	100 Move D9, [X31+8]
	101 Move D8, [X31+16]
	102 Subtract W0, W8, 3
	103 Move V10, [X31+48]
	104 Return X0
	105 Call 0x1C17F20

Method: UnityEngine.Animations.Rigging.CacheIndex Add(UnityEngine.Vector4 v)

Disassembly:
	0x036E3968 LDP V1, V0, [X20 + 0x10]
	0x036E396C LDR V2, [X20]
	0x036E3970 MOV X2, X31
	0x036E3974 STR X8, [X31 + 0x1D0]
	0x036E3978 STP V1, V0, [X31 + 0x1B0]
	0x036E397C STR V2, [X31 + 0x1A]
	0x036E3980 BL 0x3BF85E4
	0x036E3984 LDR X9, [X19]
	0x036E3988 LDR X8, [X19 + 0x58]
	0x036E398C STP S1, S0, [X31 + 0x14]
	0x036E3990 STR S2, [X31 + 0x10]
	0x036E3994 ADD X9, X9, X22
	0x036E3998 LDR W10, [X9 + 0x8]
	0x036E399C LDR X9, [X9]
	0x036E39A0 ADD X8, X8, X22
	0x036E39A4 LDUR V8, [X8 + 0xC]
	0x036E39A8 LDR V14, [X8 + 0x14]
	0x036E39AC LDR V13, [X8]
	0x036E39B0 LDR V12, [X8 + 0x8]
	0x036E39B4 STR W10, [X31 + 0x178]
	0x036E39B8 STR X9, [X31 + 0x170]
	0x036E39BC LDR X8, [X20 + 0x30]
	0x036E39C0 LDP V1, V0, [X20 + 0x10]
	0x036E39C4 LDR V2, [X20]
	0x036E39C8 ADD X0, X31, 0x170
	0x036E39CC ADD X1, X31, 0x1A0
	0x036E39D0 MOV X2, X31
	0x036E39D4 STR X8, [X31 + 0x1D0]
	0x036E39D8 STP V1, V0, [X31 + 0x1B0]
	0x036E39DC STR V2, [X31 + 0x1A]
	0x036E39E0 BL 0x3BF871C
	0x036E39E4 LDR X8, [X19]
	0x036E39E8 MOV V9.16B, V0.16B
	0x036E39EC MOV V10.16B, V1.16B
	0x036E39F0 MOV V11.16B, V2.16B
	0x036E39F4 ADD X8, X8, X22
	0x036E39F8 LDR W9, [X8 + 0x8]
	0x036E39FC LDR X8, [X8]
	0x036E3A00 LDR X0, [X25]
	0x036E3A04 MOV V15.16B, V3.16B
	0x036E3A08 STR W9, [X31 + 0x178]
	0x036E3A0C STR X8, [X31 + 0x170]
	0x036E3A10 LDP V2, V0, [X20 + 0x10]
	0x036E3A14 LDR X8, [X20 + 0x30]
	0x036E3A18 LDR V1, [X20]
	0x036E3A1C STP V2, V0, [X31 + 0xF0]
	0x036E3A20 STR X8, [X31 + 0x110]
	0x036E3A24 STR V1, [X31 + 0xE]
	0x036E3A28 LDR W8, [X0 + 0xE0]
	0x036E3A2C CBNZ W8, 0x36E3A34
	0x036E3A30 BL 0x1C16DFC
	0x036E3A34 LDR V0, [X31 + 0x22C]
	0x036E3A38 LDP S2, S1, [X31 + 0x14]
	0x036E3A3C LDR V3, [X31 + 0x10]
	0x036E3A40 FSUB S5, S14, S12
	0x036E3A44 FSUB S0, S0, S1
	0x036E3A48 LDR V1, [X31 + 0x228]
	0x036E3A4C FSUB S1, S1, S2
	0x036E3A50 LDR V2, [X31 + 0x1C]
	0x036E3A54 FSUB S2, S2, S3
	0x036E3A58 FSUB V3.2S, V8.2S, V13.2S
	0x036E3A5C MOV S4, V3.S[1]
	0x036E3A60 BL 0x36E420C
	0x036E3A64 FMUL S4, S9, S3
	0x036E3A68 FMUL S5, S15, S0
	0x036E3A6C FMUL S6, S10, S3
	0x036E3A70 FMUL S7, S15, S1
	0x036E3A74 FADD S4, S4, S5
	0x036E3A78 FMUL S5, S11, S3
	0x036E3A7C FADD S6, S6, S7
	0x036E3A80 FMUL S7, S15, S2
	0x036E3A84 FMUL S3, S15, S3
	0x036E3A88 FADD S5, S5, S7
	0x036E3A8C FMUL S7, S9, S0
	0x036E3A90 FSUB S3, S3, S7
	0x036E3A94 FMUL S7, S11, S1
	0x036E3A98 FADD S4, S7, S4
	0x036E3A9C FMUL S7, S9, S2
	0x036E3AA0 FADD S6, S7, S6
	0x036E3AA4 FMUL S7, S10, S0
	0x036E3AA8 FADD S7, S7, S5
	0x036E3AAC FMUL S5, S10, S1
	0x036E3AB0 FSUB S3, S3, S5
	0x036E3AB4 FMUL S5, S10, S2
	0x036E3AB8 FMUL S0, S11, S0
	0x036E3ABC FSUB S4, S4, S5
	0x036E3AC0 FSUB S5, S6, S0
	0x036E3AC4 LDR V0, [X31 + 0xC]
	0x036E3AC8 FMUL S1, S9, S1
	0x036E3ACC FMUL S2, S11, S2
	0x036E3AD0 FSUB S6, S7, S1
	0x036E3AD4 FSUB S7, S3, S2
	0x036E3AD8 STR S0, [X31]
	0x036E3ADC MOV V0.16B, V9.16B
	0x036E3AE0 MOV V1.16B, V10.16B
	0x036E3AE4 MOV V2.16B, V11.16B
	0x036E3AE8 MOV V3.16B, V15.16B
	0x036E3AEC MOV X0, X31
	0x036E3AF0 BL 0x3C2A4A0
	0x036E3AF4 LDP V4, V5, [X31 + 0xE0]
	0x036E3AF8 LDR V6, [X31 + 0x10]
	0x036E3AFC LDR X8, [X31 + 0x110]
	0x036E3B00 ADD X0, X31, 0x170
	0x036E3B04 ADD X1, X31, 0x1A0
	0x036E3B08 MOV X2, X31
	0x036E3B0C STP V4, V5, [X31 + 0x1A0]
	0x036E3B10 STR V6, [X31 + 0x1C]
	0x036E3B14 STR X8, [X31 + 0x1D0]
	0x036E3B18 BL 0x3BF87A4
	0x036E3B1C ADD X22, X22, 0xC
	0x036E3B20 CMP X23, X22
	0x036E3B24 B.NE 0x36E38F8
	0x036E3B28 LDR X8, [X19]
	0x036E3B2C MOVZ W9, 0xC
	0x036E3B30 ADD X0, X31, 0x160
	0x036E3B34 ADD X1, X31, 0x1A0
	0x036E3B38 SMADDL X8, X24, X9, X8
	0x036E3B3C LDR W9, [X8 + 0x8]
	0x036E3B40 LDR X10, [X8]
	0x036E3B44 MOV X2, X31

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xCFE000
	009 Move W8, [X20+2839]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xA5E000
	020 Move X0, [X0+1816]
	021 Call 0x1C17CF4
	022 Move X0, 0xA5E000
	023 Move X0, [X0+1824]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+2839], W8
	027 Move X0, [X19+16]
	028 Compare X0, 0
	029 JumpIfEqual {130}
	030 Move X20, 0xA5E000
	031 Move X20, [X20+1816]
	032 Move W10, [X0+28]
	033 Move X8, [X0+16]
	034 Move X9, [X20]
	035 Add W10, W10, 1
	036 Move [X0+28], W10
	037 Compare X8, 0
	038 JumpIfEqual {130}
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Move W11, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add W9, W10, 1
	043 Add X8, X8, X10
	044 Move [X0+24], W9
	045 Move [X8+32], S11
	046 Move X8, [X9+32]
	047 Move V0, V11
	048 Move X8, [X8+192]
	049 Move X1, [X8+112]
	050 Call List`1<Single>.AddWithResize, X0, V0
	051 Move X0, [X19+16]
	052 Compare X0, 0
	053 JumpIfEqual {130}
	054 Move W10, [X0+28]
	055 Move X8, [X0+16]
	056 Move X9, [X20]
	057 Add W10, W10, 1
	058 Move [X0+28], W10
	059 Compare X8, 0
	060 JumpIfEqual {130}
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Move W11, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add W9, W10, 1
	065 Add X8, X8, X10
	066 Move [X0+24], W9
	067 Move [X8+32], S10
	068 Move X8, [X9+32]
	069 Move V0, V10
	070 Move X8, [X8+192]
	071 Move X1, [X8+112]
	072 Call List`1<Single>.AddWithResize, X0, V0
	073 Move X0, [X19+16]
	074 Compare X0, 0
	075 JumpIfEqual {130}
	076 Move W10, [X0+28]
	077 Move X8, [X0+16]
	078 Move X9, [X20]
	079 Add W10, W10, 1
	080 Move [X0+28], W10
	081 Compare X8, 0
	082 JumpIfEqual {130}
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Move W11, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add W9, W10, 1
	087 Add X8, X8, X10
	088 Move [X0+24], W9
	089 Move [X8+32], S9
	090 Move X8, [X9+32]
	091 Move V0, V9
	092 Move X8, [X8+192]
	093 Move X1, [X8+112]
	094 Call List`1<Single>.AddWithResize, X0, V0
	095 Move X0, [X19+16]
	096 Compare X0, 0
	097 JumpIfEqual {130}
	098 Move W10, [X0+28]
	099 Move X8, [X0+16]
	100 Move X9, [X20]
	101 Add W10, W10, 1
	102 Move [X0+28], W10
	103 Compare X8, 0
	104 JumpIfEqual {130}
	105 NotImplemented "Instruction LDRSW not yet implemented."
	106 Move W11, [X8+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add W9, W10, 1
	109 Add X8, X8, X10
	110 Move [X0+24], W9
	111 Move [X8+32], S8
	112 Move X8, [X9+32]
	113 Move V0, V8
	114 Move X8, [X8+192]
	115 Move X1, [X8+112]
	116 Call List`1<Single>.AddWithResize, X0, V0
	117 Move X0, [X19+16]
	118 Compare X0, 0
	119 JumpIfEqual {130}
	120 Move W8, [X0+24]
	121 Move X20, [X31+48]
	122 Move X19, [X31+56]
	123 Move X30, [X31+32]
	124 Move D9, [X31+16]
	125 Move D8, [X31+24]
	126 Subtract W0, W8, 4
	127 Move D11, [X31+64]
	128 Move D10, [X31+72]
	129 Return X0
	130 Call 0x1C17F20

Method: UnityEngine.Animations.Rigging.CacheIndex Add(UnityEngine.Quaternion v)

Disassembly:
	0x036E3B48 STR W9, [X31 + 0x178]
	0x036E3B4C STR X10, [X31 + 0x170]
	0x036E3B50 LDR X9, [X20 + 0x30]
	0x036E3B54 LDP V1, V0, [X20 + 0x10]
	0x036E3B58 LDR V2, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Call AnimationJobCacheBuilder.Add, X0, X1
	003 And X0, X0, 0
	004 Move X30, [X31+16]
	005 Return X0

Method: UnityEngine.Animations.Rigging.CacheIndex Add(UnityEngine.Animations.Rigging.AffineTransform tx)

Disassembly:
	0x036E3B5C STR X9, [X31 + 0x90]
	0x036E3B60 STP V1, V0, [X31 + 0x70]
	0x036E3B64 STR V2, [X31 + 0x6]
	0x036E3B68 LDR W9, [X8 + 0x8]
	0x036E3B6C LDR X8, [X8]
	0x036E3B70 STR W9, [X31 + 0x168]
	0x036E3B74 STR X8, [X31 + 0x160]
	0x036E3B78 LDR X8, [X20 + 0x30]
	0x036E3B7C LDP V1, V0, [X20 + 0x10]
	0x036E3B80 LDR V2, [X20]
	0x036E3B84 STR X8, [X31 + 0x1D0]
	0x036E3B88 STP V1, V0, [X31 + 0x1B0]
	0x036E3B8C STR V2, [X31 + 0x1A]
	0x036E3B90 BL 0x3BF871C
	0x036E3B94 MOV V9.16B, V0.16B
	0x036E3B98 MOV V10.16B, V1.16B
	0x036E3B9C MOV V11.16B, V2.16B
	0x036E3BA0 LDR X8, [X20 + 0x30]
	0x036E3BA4 LDP V1, V0, [X20 + 0x10]
	0x036E3BA8 LDR V2, [X20]
	0x036E3BAC ADD X1, X31, 0xA0
	0x036E3BB0 MOV X0, X21
	0x036E3BB4 MOV V12.16B, V3.16B
	0x036E3BB8 STR X8, [X31 + 0xD0]
	0x036E3BBC STP V1, V0, [X31 + 0xB0]
	0x036E3BC0 STR V2, [X31 + 0xA]
	0x036E3BC4 BL 0x36E34C4
	0x036E3BC8 LDP S4, S7, [X19 + 0x34]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCFE000
	006 Move W8, [X21+2840]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xA5E000
	014 Move X0, [X0+1824]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2840], W8
	018 Move S0, [X20]
	019 Move S1, [X20+4]
	020 Move V2, [X20+8]
	021 Move X0, X19
	022 Call AnimationJobCacheBuilder.Add, X0, X1
	023 Move S0, [X20+12]
	024 Move S1, [X20+16]
	025 Move S2, [X20+20]
	026 Move S3, [X20+24]
	027 Move X0, X19
	028 Call AnimationJobCacheBuilder.Add, X0, X1
	029 Move X8, [X19+16]
	030 Compare X8, 0
	031 JumpIfEqual {39}
	032 Move W8, [X8+24]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Subtract W0, W8, 7
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: UnityEngine.Animations.Rigging.CacheIndex AllocateChunk(System.Int32 size)

Disassembly:
	0x036E3BCC LDP S5, S6, [X19 + 0x3C]
	0x036E3BD0 LDR X8, [X20 + 0x30]
	0x036E3BD4 ADD X0, X19, 0x78
	0x036E3BD8 FMUL S17, S3, S4
	0x036E3BDC FMUL S18, S0, S6
	0x036E3BE0 FMUL S19, S1, S5
	0x036E3BE4 FMUL S20, S2, S7
	0x036E3BE8 FMUL S21, S3, S7
	0x036E3BEC FMUL S22, S1, S6
	0x036E3BF0 FMUL S23, S2, S4
	0x036E3BF4 FMUL S24, S0, S5
	0x036E3BF8 FMUL S25, S3, S5
	0x036E3BFC FMUL S26, S2, S6
	0x036E3C00 FMUL S3, S3, S6
	0x036E3C04 FMUL S6, S0, S7
	0x036E3C08 FMUL S0, S0, S4
	0x036E3C0C FMUL S4, S1, S4
	0x036E3C10 FMUL S1, S1, S7
	0x036E3C14 LDP V7, V16, [X20 + 0x10]
	0x036E3C18 FMUL S2, S2, S5
	0x036E3C1C LDR V5, [X20]
	0x036E3C20 FSUB S0, S3, S0
	0x036E3C24 STP V7, V16, [X31 + 0x1B0]
	0x036E3C28 FADD S16, S17, S18
	0x036E3C2C FADD S17, S21, S22
	0x036E3C30 FADD S18, S25, S26
	0x036E3C34 FADD S3, S19, S16
	0x036E3C38 FADD S16, S23, S17
	0x036E3C3C FADD S6, S6, S18
	0x036E3C40 FSUB S0, S0, S1
	0x036E3C44 ADD X1, X31, 0x1A0
	0x036E3C48 MOV X2, X31
	0x036E3C4C STR X8, [X31 + 0x1D0]
	0x036E3C50 FSUB S8, S3, S20
	0x036E3C54 FSUB S13, S16, S24
	0x036E3C58 FSUB S14, S6, S4
	0x036E3C5C FSUB S15, S0, S2
	0x036E3C60 STR V5, [X31 + 0x1A]
	0x036E3C64 BL 0x3BF9750
	0x036E3C68 LDR V1, [X31 + 0x8]
	0x036E3C6C MOV V2.16B, V11.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xCFE000
	007 Move X22, 0xA11000
	008 Move W8, [X21+2841]
	009 Move X22, [X22+1592]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xA5E000
	017 Move X0, [X0+1832]
	018 Call 0x1C17CF4
	019 Move X0, 0xA5E000
	020 Move X0, [X0+1824]
	021 Call 0x1C17CF4
	022 Move X0, 0xA11000
	023 Move X0, [X0+1592]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2841], W8
	027 Move X0, [X22]
	028 Move X21, [X20+16]
	029 Move W1, W19
	030 Call 0x1C17D6C
	031 Compare X21, 0
	032 JumpIfEqual {50}
	033 Move X8, 0xA5E000
	034 Move X8, [X8+1832]
	035 Move X1, X0
	036 Move X0, X21
	037 Move X2, [X8]
	038 Call List`1<Single>.AddRange, X0, X1
	039 Move X8, [X20+16]
	040 Compare X8, 0
	041 JumpIfEqual {50}
	042 Move W8, [X8+24]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Subtract W0, W8, W19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+48]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Void SetValue(UnityEngine.Animations.Rigging.CacheIndex index, System.Int32 offset, System.Single value)

Disassembly:
	0x036E3C70 MOV V3.16B, V12.16B
	0x036E3C74 MOV V4.16B, V8.16B
	0x036E3C78 FMUL S0, S1, S0
	0x036E3C7C STR S0, [X31]
	0x036E3C80 MOV V0.16B, V9.16B
	0x036E3C84 MOV V1.16B, V10.16B
	0x036E3C88 MOV V5.16B, V13.16B
	0x036E3C8C MOV V6.16B, V14.16B
	0x036E3C90 MOV V7.16B, V15.16B
	0x036E3C94 MOV X0, X31
	0x036E3C98 BL 0x3C2A4A0
	0x036E3C9C LDP V4, V5, [X31 + 0x60]
	0x036E3CA0 LDR V6, [X31 + 0x8]
	0x036E3CA4 LDR X8, [X31 + 0x90]
	0x036E3CA8 ADD X0, X31, 0x170
	0x036E3CAC ADD X1, X31, 0x1A0
	0x036E3CB0 MOV X2, X31
	0x036E3CB4 STP V4, V5, [X31 + 0x1A0]
	0x036E3CB8 STR V6, [X31 + 0x1C]
	0x036E3CBC STR X8, [X31 + 0x1D0]
	0x036E3CC0 BL 0x3BF87A4
	0x036E3CC4 B 0x36E3D28
	0x036E3CC8 CMP W8, 0x1
	0x036E3CCC B.LT 0x36E3D28
	0x036E3CD0 MOV X22, X31
	0x036E3CD4 MOV X23, X31
	0x036E3CD8 LDR X8, [X20 + 0x30]
	0x036E3CDC LDP V1, V0, [X20 + 0x10]
	0x036E3CE0 LDR V2, [X20]
	0x036E3CE4 ADD X0, X31, 0x20
	0x036E3CE8 STR X8, [X31 + 0x50]
	0x036E3CEC STP V1, V0, [X31 + 0x30]
	0x036E3CF0 STR V2, [X31 + 0x2]
	0x036E3CF4 LDR X8, [X19]
	0x036E3CF8 ADD X8, X8, X22
	0x036E3CFC LDR W9, [X8 + 0x8]
	0x036E3D00 LDR X1, [X8]
	0x036E3D04 AND X8, X21, 0x0
	0x036E3D08 ORR X21, X8, X9, 0x0
	0x036E3D0C MOV X2, X21

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xCFE000
	008 Move W8, [X22+2842]
	009 Move V8, V0
	010 Move W19, W2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA5E000
	018 Move X0, [X0+1824]
	019 Call 0x1C17CF4
	020 Move X0, 0xA5E000
	021 Move X0, [X0+1840]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2842], W8
	025 Move X0, [X21+16]
	026 Compare X0, 0
	027 JumpIfEqual {50}
	028 Move W8, [X0+24]
	029 Add W1, W20, W19
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X8, 0xA5E000
	032 Move X8, [X8+1840]
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+8]
	038 Move X2, [X8]
	039 Move V0, V8
	040 Move V8, [X31+48]
	041 Call List`1<Single>.set_Item, X0, X1, V0
	042 Return 
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+8]
	048 Move V8, [X31+48]
	049 Return 
	050 Call 0x1C17F20

Method: UnityEngine.Animations.Rigging.AnimationJobCache Build()

Disassembly:
	0x036E3D10 BL 0x36E3614
	0x036E3D14 LDRSW X8, [X19 + 0x8]
	0x036E3D18 ADD X23, X23, 0x1
	0x036E3D1C ADD X22, X22, 0xC
	0x036E3D20 CMP X23, X8
	0x036E3D24 B.LT 0x36E3CD8
	0x036E3D28 ADD X31, X31, 0x1E0
	0x036E3D2C LDP X20, X19, [X31 + 0x80]
	0x036E3D30 LDP X22, X21, [X31 + 0x70]
	0x036E3D34 LDP X24, X23, [X31 + 0x60]
	0x036E3D38 LDP X30, X25, [X31 + 0x50]
	0x036E3D3C LDR X29, [X31 + 0x40]
	0x036E3D40 LDP D9, D8, [X31 + 0x30]
	0x036E3D44 LDP D11, D10, [X31 + 0x20]
	0x036E3D48 LDP D13, D12, [X31 + 0x10]
	0x036E3D4C LDP D15, D14, [X31], #0x90
	0x036E3D50 RET
	0x036E3D54 SUB X31, X31, 0x100
	0x036E3D58 STR D14, [X31 + 0x60]
	0x036E3D5C STP D13, D12, [X31 + 0x70]
	0x036E3D60 STP D11, D10, [X31 + 0x80]
	0x036E3D64 STP D9, D8, [X31 + 0x90]
	0x036E3D68 STP X29, X30, [X31 + 0xA0]
	0x036E3D6C STP X28, X27, [X31 + 0xB0]
	0x036E3D70 STP X26, X25, [X31 + 0xC0]
	0x036E3D74 STP X24, X23, [X31 + 0xD0]
	0x036E3D78 STP X22, X21, [X31 + 0xE0]
	0x036E3D7C STP X20, X19, [X31 + 0xF0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0xCFE000
	006 Move W8, [X20+2843]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA3E000
	013 Move X0, [X0+1096]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2843], W8
	017 Move X0, [X19+16]
	018 Compare X0, 0
	019 JumpIfEqual {36}
	020 Move X8, 0xA3E000
	021 Move X8, [X8+1096]
	022 Move X1, [X8]
	023 Call List`1<Single>.ToArray, X0
	024 Move X1, X0
	025 Add X0, X31, 0
	026 Move [X31], X31
	027 Move [X31+8], X31
	028 Call AnimationJobCache..ctor, X0, X1
	029 Move X0, [X31]
	030 Move X1, [X31+8]
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Add X31, X31, 48
	035 Return X0
	036 Call 0x1C17F20

