Type: UnityEngine.Animations.Rigging.ConstraintsUtils

Method: UnityEngine.Transform[] ExtractChain(UnityEngine.Transform root, UnityEngine.Transform tip)

Disassembly:
	0x036FA984 ADRP X0, 0x9FB000
	0x036FA988 LDR X0, [X0 + 0x278]
	0x036FA98C BL 0x1C16CF4
	0x036FA990 ADRP X0, 0xA46000
	0x036FA994 LDR X0, [X0 + 0xCF8]
	0x036FA998 BL 0x1C16CF4
	0x036FA99C ADRP X0, 0xA46000
	0x036FA9A0 LDR X0, [X0 + 0xD00]
	0x036FA9A4 BL 0x1C16CF4
	0x036FA9A8 ADRP X0, 0xA46000
	0x036FA9AC LDR X0, [X0 + 0xD08]
	0x036FA9B0 BL 0x1C16CF4
	0x036FA9B4 MOVZ W8, 0x1
	0x036FA9B8 STRB W8, [X23 + 0xBF0]
	0x036FA9BC CBZ X20, 0x36FAC54
	0x036FA9C0 MOV X0, X20
	0x036FA9C4 MOV X1, X31
	0x036FA9C8 BL 0x33BE520
	0x036FA9CC CBZ X0, 0x36FAC50
	0x036FA9D0 LDR X8, [X0]
	0x036FA9D4 LDR X9, [X8 + 0x3C8]
	0x036FA9D8 LDR X1, [X8 + 0x3D0]
	0x036FA9DC BLR X9
	0x036FA9E0 TBNZ X0, 0x0, 0x36FAC9C
	0x036FA9E4 CBZ X19, 0x36FAC50
	0x036FA9E8 MOV X0, X19
	0x036FA9EC MOV X1, X31
	0x036FA9F0 BL 0x32CE414
	0x036FA9F4 TBZ X0, 0x0, 0x36FACC0
	0x036FA9F8 LDR X8, [X19]
	0x036FA9FC MOV X0, X19
	0x036FAA00 LDR X9, [X8 + 0x2D8]
	0x036FAA04 LDR X1, [X8 + 0x2E0]
	0x036FAA08 BLR X9
	0x036FAA0C TBNZ X0, 0x0, 0x36FACCC
	0x036FAA10 TBZ X22, 0x0, 0x36FAB08
	0x036FAA14 TBNZ X21, 0x0, 0x36FAB08
	0x036FAA18 MOV X0, X19
	0x036FAA1C MOV X1, X31
	0x036FAA20 BL 0x32D45B4
	0x036FAA24 ADRP X25, 0xA46000
	0x036FAA28 LDR X25, [X25 + 0xD00]
	0x036FAA2C MOV X22, X0
	0x036FAA30 LDR X8, [X25]
	0x036FAA34 LDR W9, [X8 + 0xE0]
	0x036FAA38 CBNZ W9, 0x36FAA48
	0x036FAA3C MOV X0, X8
	0x036FAA40 BL 0x1C16DFC
	0x036FAA44 LDR X8, [X25]
	0x036FAA48 LDR X9, [X8 + 0xB8]
	0x036FAA4C LDR X23, [X9 + 0x8]
	0x036FAA50 CBNZ X23, 0x36FAAA8
	0x036FAA54 LDR W9, [X8 + 0xE0]
	0x036FAA58 CBNZ W9, 0x36FAA68
	0x036FAA5C MOV X0, X8
	0x036FAA60 BL 0x1C16DFC
	0x036FAA64 LDR X8, [X25]
	0x036FAA68 ADRP X9, 0xA46000
	0x036FAA6C LDR X8, [X8 + 0xB8]
	0x036FAA70 LDR X9, [X9 + 0xCF0]
	0x036FAA74 LDR X24, [X8]
	0x036FAA78 LDR X0, [X9]
	0x036FAA7C BL 0x1C16F10
	0x036FAA80 ADRP X8, 0xA46000
	0x036FAA84 LDR X8, [X8 + 0xCF8]
	0x036FAA88 MOV X1, X24
	0x036FAA8C MOV X3, X31
	0x036FAA90 MOV X23, X0
	0x036FAA94 LDR X2, [X8]
	0x036FAA98 BL 0x2D2F428
	0x036FAA9C LDR X8, [X25]
	0x036FAAA0 LDR X8, [X8 + 0xB8]
	0x036FAAA4 STR X23, [X8 + 0x8]
	0x036FAAA8 ADRP X8, 0xA46000
	0x036FAAAC LDR X8, [X8 + 0xCE8]
	0x036FAAB0 MOV X0, X22
	0x036FAAB4 MOV X1, X23
	0x036FAAB8 LDR X2, [X8]
	0x036FAABC BL 0x21B1A10
	0x036FAAC0 TBZ X0, 0x0, 0x36FAB08
	0x036FAAC4 ADRP X8, 0xA46000
	0x036FAAC8 LDR X8, [X8 + 0xD08]
	0x036FAACC MOV X1, X19
	0x036FAAD0 MOV X2, X31
	0x036FAAD4 LDR X0, [X8]
	0x036FAAD8 BL 0x321EFD0
	0x036FAADC ADRP X8, 0x9F9000
	0x036FAAE0 LDR X8, [X8 + 0xA28]
	0x036FAAE4 MOV X22, X0
	0x036FAAE8 LDR X8, [X8]
	0x036FAAEC LDR W9, [X8 + 0xE0]
	0x036FAAF0 CBNZ W9, 0x36FAAFC
	0x036FAAF4 MOV X0, X8
	0x036FAAF8 BL 0x1C16DFC
	0x036FAAFC MOV X0, X22
	0x036FAB00 MOV X1, X31
	0x036FAB04 BL 0x3C06048
	0x036FAB08 ADRP X8, 0xA46000
	0x036FAB0C LDR X8, [X8 + 0xCE0]
	0x036FAB10 TBNZ X21, 0x0, 0x36FAB34
	0x036FAB14 ADRP X9, 0xA21000
	0x036FAB18 LDR X9, [X9 + 0x870]
	0x036FAB1C LDR X10, [X20]
	0x036FAB20 LDR X9, [X9]
	0x036FAB24 LDRB W12, [X10 + 0x130]
	0x036FAB28 LDRB W11, [X9 + 0x130]
	0x036FAB2C CMP W12, W11
	0x036FAB30 B.CS 0x36FAB3C
	0x036FAB34 MOV X22, X31
	0x036FAB38 B 0x36FAB50
	0x036FAB3C LDR X10, [X10 + 0xC8]
	0x036FAB40 ADD X10, X10, X11, 0x3, LSL
	0x036FAB44 LDUR X10, [X10 - 0x8]
	0x036FAB48 CMP X10, X9
	0x036FAB4C CSEL X22, X20, X31, EQ
	0x036FAB50 LDR X0, [X8]
	0x036FAB54 LDR W8, [X0 + 0xE0]
	0x036FAB58 CBNZ W8, 0x36FAB60
	0x036FAB5C BL 0x1C16DFC
	0x036FAB60 MOV X0, X19
	0x036FAB64 BL 0x36FAFA4
	0x036FAB68 TBZ X0, 0x0, 0x36FACD8
	0x036FAB6C ADRP X23, 0xA21000
	0x036FAB70 LDR X23, [X23 + 0x848]
	0x036FAB74 LDR X0, [X23]
	0x036FAB78 LDR W8, [X0 + 0xE0]
	0x036FAB7C CBNZ W8, 0x36FAB88
	0x036FAB80 BL 0x1C16DFC
	0x036FAB84 LDR X0, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xCE7000
	008 Move W8, [X21+3034]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0xA01000
	016 Move X0, [X0+2392]
	017 Call 0x1C17CF4
	018 Move X0, 0xA47000
	019 Move X0, [X0+3184]
	020 Call 0x1C17CF4
	021 Move X0, 0xA47000
	022 Move X0, [X0+2256]
	023 Call 0x1C17CF4
	024 Move X0, 0xA01000
	025 Move X0, [X0+2360]
	026 Call 0x1C17CF4
	027 Move X0, 0xA01000
	028 Move X0, [X0+2352]
	029 Call 0x1C17CF4
	030 Move X0, 0x9FA000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0xA01000
	034 Move X0, [X0+1800]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3034], W8
	038 Compare X20, 0
	039 JumpIfEqual {150}
	040 Move X0, X20
	041 Move X1, X19
	042 Move X2, X31
	043 Call Transform.IsChildOf, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {102}
	048 Move X8, 0xA01000
	049 Move X8, [X8+2352]
	050 Move X0, [X8]
	051 Call 0x1C17F10
	052 Move X8, 0xA01000
	053 Move X8, [X8+2360]
	054 Move X21, X0
	055 Move X1, [X8]
	056 Call List`1<Object>..ctor, X0
	057 Move X22, 0x9FA000
	058 Move X23, 0xA01000
	059 Move X22, [X22+1432]
	060 Move X23, [X23+2392]
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X20
	067 Move X1, X19
	068 Move X2, X31
	069 Call Object.op_Inequality, X0, X1
	070 Compare X21, 0
	071 JumpIfEqual {150}
	072 Move X8, [X23]
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {114}
	077 Move W10, [X21+28]
	078 Move X9, [X21+16]
	079 Add W10, W10, 1
	080 Move [X21+28], W10
	081 Compare X9, 0
	082 JumpIfEqual {150}
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Move W11, [X9+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add W8, W10, 1
	087 Add X9, X9, X10
	088 Move [X21+24], W8
	089 Move [X9+32], X20
	090 Move X8, [X8+32]
	091 Move X0, X21
	092 Move X1, X20
	093 Move X8, [X8+192]
	094 Move X2, [X8+112]
	095 Call List`1<Object>.AddWithResize, X0, X1
	096 Compare X20, 0
	097 JumpIfEqual {150}
	098 Move X0, X20
	099 Move X1, X31
	100 Call Transform.get_parent, X0
	101 Move X20, X0
	102 Move X8, 0xA01000
	103 Move X8, [X8+1800]
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move W1, W31
	109 Move X0, [X8]
	110 Move X30, [X31+48]
	111 Move X23, [X31+56]
	112 Call 0x1C17D6C
	113 Return X0
	114 Move W10, [X21+28]
	115 Move X9, [X21+16]
	116 Add W10, W10, 1
	117 Move [X21+28], W10
	118 Compare X9, 0
	119 JumpIfEqual {150}
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Move W11, [X9+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add W8, W10, 1
	124 Add X9, X9, X10
	125 Move [X21+24], W8
	126 Move [X9+32], X19
	127 Move X8, [X8+32]
	128 Move X0, X21
	129 Move X1, X19
	130 Move X8, [X8+192]
	131 Move X2, [X8+112]
	132 Call List`1<Object>.AddWithResize, X0, X1
	133 Move X8, 0xA47000
	134 Move X8, [X8+3184]
	135 Move X0, X21
	136 Move X1, [X8]
	137 Call List`1<Object>.Reverse, X0
	138 Move X8, 0xA47000
	139 Move X8, [X8+2256]
	140 Move X0, X21
	141 Move X20, [X31+32]
	142 Move X19, [X31+40]
	143 Move X22, [X31+16]
	144 Move X21, [X31+24]
	145 Move X1, [X8]
	146 Move X30, [X31+48]
	147 Move X23, [X31+56]
	148 Call List`1<Object>.ToArray, X0
	149 Return X0
	150 Call 0x1C17F20

Method: System.Single[] ExtractLengths(UnityEngine.Transform[] chain)

Disassembly:
	0x036FAB88 LDR X8, [X0 + 0xB8]
	0x036FAB8C LDR X8, [X8 + 0x8]
	0x036FAB90 CBZ X8, 0x36FAC50
	0x036FAB94 LDRB W8, [X8 + 0x10]
	0x036FAB98 CBZ W8, 0x36FABF4
	0x036FAB9C ADRP X23, 0xA46000
	0x036FABA0 LDR X23, [X23 + 0xCB8]
	0x036FABA4 LDR X0, [X23]
	0x036FABA8 LDR W8, [X0 + 0xE0]
	0x036FABAC CBNZ W8, 0x36FABB8
	0x036FABB0 BL 0x1C16DFC
	0x036FABB4 LDR X0, [X23]
	0x036FABB8 LDR X8, [X0 + 0xB8]
	0x036FABBC LDRB W8, [X8 + 0x8]
	0x036FABC0 CBZ W8, 0x36FABF4
	0x036FABC4 ADRP X8, 0x9FB000
	0x036FABC8 LDR X8, [X8 + 0x278]
	0x036FABCC MOV X0, X20
	0x036FABD0 MOV X2, X31
	0x036FABD4 LDR X8, [X8]
	0x036FABD8 LDR X8, [X8 + 0xB8]
	0x036FABDC LDR X1, [X8]
	0x036FABE0 BL 0x3C0062C
	0x036FABE4 MOV X1, X31
	0x036FABE8 BL 0x3C00670
	0x036FABEC CBNZ X0, 0x36FAC3C
	0x036FABF0 B 0x36FACE4
	0x036FABF4 TBZ X21, 0x0, 0x36FAC00
	0x036FABF8 MOV X0, X31
	0x036FABFC B 0x36FAC3C
	0x036FAC00 MOV X0, X22
	0x036FAC04 MOV X1, X31
	0x036FAC08 BL 0x32C0774
	0x036FAC0C ADRP X8, 0xA21000
	0x036FAC10 LDR X8, [X8 + 0x850]
	0x036FAC14 LDR X0, [X8]
	0x036FAC18 LDR W8, [X0 + 0xE0]
	0x036FAC1C CBNZ W8, 0x36FAC24
	0x036FAC20 BL 0x1C16DFC
	0x036FAC24 MOV X0, X22
	0x036FAC28 MOV X1, X31
	0x036FAC2C BL 0x32C1AB8
	0x036FAC30 MOV X1, X31
	0x036FAC34 BL 0x33C6948
	0x036FAC38 CBZ X0, 0x36FACE4
	0x036FAC3C LDP X20, X19, [X31 + 0x30]
	0x036FAC40 LDP X22, X21, [X31 + 0x20]
	0x036FAC44 LDP X24, X23, [X31 + 0x10]
	0x036FAC48 LDP X30, X25, [X31], #0x40
	0x036FAC4C RET
	0x036FAC50 BL 0x1C16F20
	0x036FAC54 ADRP X0, 0x9FE000
	0x036FAC58 LDR X0, [X0 + 0x528]
	0x036FAC5C BL 0x1C16D08
	0x036FAC60 BL 0x1C16F10
	0x036FAC64 MOV X19, X0
	0x036FAC68 ADRP X0, 0xA46000
	0x036FAC6C LDR X0, [X0 + 0xD10]
	0x036FAC70 BL 0x1C16D08
	0x036FAC74 MOV X1, X0
	0x036FAC78 MOV X0, X19
	0x036FAC7C MOV X2, X31
	0x036FAC80 BL 0x330E100
	0x036FAC84 ADRP X0, 0xA46000
	0x036FAC88 LDR X0, [X0 + 0xD18]
	0x036FAC8C BL 0x1C16D08
	0x036FAC90 MOV X1, X0
	0x036FAC94 MOV X0, X19
	0x036FAC98 BL 0x1C16DEC
	0x036FAC9C MOV X0, X20
	0x036FACA0 BL 0x19903C0
	0x036FACA4 MOV X0, X20
	0x036FACA8 MOV X1, X31
	0x036FACAC BL 0x33BE520
	0x036FACB0 MOV X19, X0
	0x036FACB4 ADRP X0, 0xA46000
	0x036FACB8 LDR X0, [X0 + 0xD20]
	0x036FACBC B 0x36FACEC
	0x036FACC0 ADRP X0, 0xA46000
	0x036FACC4 LDR X0, [X0 + 0xD28]
	0x036FACC8 B 0x36FACEC
	0x036FACCC ADRP X0, 0xA46000

ISIL:
	001 Move [X31-112], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0xCE7000
	015 Move W8, [X20+3035]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x9FA000
	022 Move X0, [X0+1592]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3035], W8
	026 Compare X19, 0
	027 JumpIfEqual {99}
	028 Move X8, 0x9FA000
	029 Move X8, [X8+1592]
	030 Move W1, [X19+24]
	031 Move X0, [X8]
	032 Call 0x1C17D6C
	033 Compare X0, 0
	034 JumpIfEqual {99}
	035 Move W8, [X0+24]
	036 Move X20, X0
	037 Compare W8, 0
	038 JumpIfEqual {98}
	039 Move [X20+32], W31
	040 Move W8, [X19+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X21, 0x9FA000
	043 Move X21, [X21+1448]
	044 Move X22, X31
	045 Add X23, X20, 36
	046 Add X24, X19, 40
	047 Move X25, 0xCDF000
	048 Move W26, 1
	049 Add X27, X22, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X24]
	052 Compare X0, 0
	053 JumpIfEqual {99}
	054 Move X1, X31
	055 Call Transform.get_localPosition, X0
	056 Move W8, [X25+1924]
	057 Move V8, V0
	058 Move V9, V1
	059 Move V10, V2
	060 Compare W8, 0
	061 JumpIfNotEqual {65}
	062 Move X0, X21
	063 Call 0x1C17CF4
	064 Move [X25+1924], W26
	065 Move X0, [X21]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move W8, [X20+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Multiply S0, S8, S8
	073 Multiply S1, S9, S9
	074 Add S0, S0, S1
	075 Multiply S1, S10, S10
	076 Add S0, S1, S0
	077 NotImplemented "Instruction FSQRT not yet implemented."
	078 Move [X23], S0
	079 Move W8, [X19+24]
	080 Add X22, X22, 1
	081 Add W9, W22, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X20
	084 Move X20, [X31+96]
	085 Move X19, [X31+104]
	086 Move X22, [X31+80]
	087 Move X21, [X31+88]
	088 Move X24, [X31+64]
	089 Move X23, [X31+72]
	090 Move X26, [X31+48]
	091 Move X25, [X31+56]
	092 Move X30, [X31+32]
	093 Move X27, [X31+40]
	094 Move D9, [X31+16]
	095 Move D8, [X31+24]
	096 Move V10, [X31+112]
	097 Return X0
	098 Call 0x1C17F28
	099 Call 0x1C17F20

Method: System.Single[] ExtractSteps(UnityEngine.Transform[] chain)

Disassembly:
	0x036FACD0 LDR X0, [X0 + 0xD30]
	0x036FACD4 B 0x36FACEC
	0x036FACD8 ADRP X0, 0xA46000
	0x036FACDC LDR X0, [X0 + 0xD38]
	0x036FACE0 B 0x36FACEC
	0x036FACE4 ADRP X0, 0xA46000
	0x036FACE8 LDR X0, [X0 + 0xD40]
	0x036FACEC BL 0x1C16D08
	0x036FACF0 MOV X1, X19
	0x036FACF4 MOV X2, X31
	0x036FACF8 BL 0x321EFD0
	0x036FACFC MOV X19, X0
	0x036FAD00 ADRP X0, 0x9F9000
	0x036FAD04 LDR X0, [X0 + 0x5B0]
	0x036FAD08 BL 0x1C16D08
	0x036FAD0C BL 0x1C16F10
	0x036FAD10 MOV X1, X19
	0x036FAD14 MOV X2, X31
	0x036FAD18 MOV X20, X0
	0x036FAD1C BL 0x337DF1C
	0x036FAD20 ADRP X0, 0xA46000
	0x036FAD24 LDR X0, [X0 + 0xD18]
	0x036FAD28 BL 0x1C16D08
	0x036FAD2C MOV X1, X0
	0x036FAD30 MOV X0, X20
	0x036FAD34 BL 0x1C16DEC
	0x036FAD38 STP X30, X19, [X31 - 0x10]!
	0x036FAD3C ADRP X0, 0xA02000
	0x036FAD40 LDR X0, [X0 + 0x758]
	0x036FAD44 BL 0x1C16D08
	0x036FAD48 BL 0x1C16F10
	0x036FAD4C MOV X1, X31
	0x036FAD50 MOV X19, X0
	0x036FAD54 BL 0x3380288
	0x036FAD58 ADRP X0, 0xA46000
	0x036FAD5C LDR X0, [X0 + 0xD48]
	0x036FAD60 BL 0x1C16D08
	0x036FAD64 MOV X1, X0
	0x036FAD68 MOV X0, X19
	0x036FAD6C BL 0x1C16DEC
	0x036FAD70 STP X30, X21, [X31 - 0x20]!
	0x036FAD74 STP X20, X19, [X31 + 0x10]
	0x036FAD78 MOV X20, X2
	0x036FAD7C MOV X21, X1
	0x036FAD80 MOV X1, X31
	0x036FAD84 MOV X2, X31
	0x036FAD88 MOV X19, X0
	0x036FAD8C BL 0x33BE5B0
	0x036FAD90 TBNZ X0, 0x0, 0x36FADCC
	0x036FAD94 MOV X0, X21
	0x036FAD98 MOV X1, X31
	0x036FAD9C MOV X2, X31
	0x036FADA0 BL 0x33BE5B0
	0x036FADA4 TBNZ X0, 0x0, 0x36FADEC
	0x036FADA8 MOV X0, X20
	0x036FADAC MOV X1, X31
	0x036FADB0 MOV X2, X31
	0x036FADB4 BL 0x33BE5B0
	0x036FADB8 TBNZ X0, 0x0, 0x36FAE0C
	0x036FADBC MOV X0, X19
	0x036FADC0 LDP X20, X19, [X31 + 0x10]
	0x036FADC4 LDP X30, X21, [X31], #0x20
	0x036FADC8 RET
	0x036FADCC ADRP X0, 0x9FE000
	0x036FADD0 LDR X0, [X0 + 0x528]
	0x036FADD4 BL 0x1C16D08
	0x036FADD8 BL 0x1C16F10
	0x036FADDC MOV X19, X0
	0x036FADE0 ADRP X0, 0xA46000
	0x036FADE4 LDR X0, [X0 + 0xD50]
	0x036FADE8 B 0x36FAE28
	0x036FADEC ADRP X0, 0x9FE000
	0x036FADF0 LDR X0, [X0 + 0x528]
	0x036FADF4 BL 0x1C16D08
	0x036FADF8 BL 0x1C16F10
	0x036FADFC MOV X19, X0
	0x036FAE00 ADRP X0, 0xA46000
	0x036FAE04 LDR X0, [X0 + 0xD58]
	0x036FAE08 B 0x36FAE28
	0x036FAE0C ADRP X0, 0x9FE000
	0x036FAE10 LDR X0, [X0 + 0x528]
	0x036FAE14 BL 0x1C16D08
	0x036FAE18 BL 0x1C16F10
	0x036FAE1C MOV X19, X0
	0x036FAE20 ADRP X0, 0xA46000
	0x036FAE24 LDR X0, [X0 + 0xD60]
	0x036FAE28 BL 0x1C16D08
	0x036FAE2C MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xCE7000
	007 Move X21, 0xA47000
	008 Move W8, [X19+3036]
	009 Move X21, [X21+3192]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x9FC000
	016 Move X0, [X0+1456]
	017 Call 0x1C17CF4
	018 Move X0, 0xA47000
	019 Move X0, [X0+3200]
	020 Call 0x1C17CF4
	021 Move X0, 0x9FA000
	022 Move X0, [X0+1592]
	023 Call 0x1C17CF4
	024 Move X0, 0xA47000
	025 Move X0, [X0+3208]
	026 Call 0x1C17CF4
	027 Move X0, 0xA47000
	028 Move X0, [X0+3192]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+3036], W8
	032 Move X0, [X21]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X19, X0
	036 Call Object..ctor, X0
	037 Move X0, X20
	038 Call ConstraintsUtils.ExtractLengths, X0
	039 Compare X19, 0
	040 JumpIfEqual {94}
	041 Move X8, 0x9FC000
	042 Move X8, [X8+1456]
	043 Move [X19+16], W31
	044 Move X20, X0
	045 Move X21, 0xA47000
	046 Move X0, [X8]
	047 Move X22, 0xA47000
	048 Move X21, [X21+3208]
	049 Move X22, [X22+3200]
	050 Call 0x1C17F10
	051 Move X2, [X21]
	052 Move X1, X19
	053 Move X3, X31
	054 Move X21, X0
	055 Call Action`1<Single>..ctor, X0, X1, X2
	056 Move X2, [X22]
	057 Move X0, X20
	058 Move X1, X21
	059 Call 0x22E8120, X0, X1
	060 Compare X20, 0
	061 JumpIfEqual {94}
	062 Move X8, 0x9FA000
	063 Move X8, [X8+1592]
	064 Move W1, [X20+24]
	065 Move X0, [X8]
	066 Call 0x1C17D6C
	067 Move X9, [X20+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 And X9, X9, 0
	070 Move X8, X31
	071 Add X10, X20, 32
	072 Add X11, X0, 32
	073 Move X12, W9
	074 Move S0, W31
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {94}
	078 Move W13, [X0+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move V1, [X10]
	081 Move V2, [X19+16]
	082 Add S0, S0, S1
	083 NotImplemented "Instruction FDIV not yet implemented."
	084 Move [X11], S1
	085 Add X8, X8, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Return X0
	093 Call 0x1C17F28
	094 Call 0x1C17F20

Method: System.String ConstructConstraintDataPropertyName(System.String property)

Disassembly:
	0x036EDF70 MOV X0, X20
	0x036EDF74 BL 0x1C16F18
	0x036EDF78 B 0x36EDF88
	0x036EDF7C B 0x36EDF88
	0x036EDF80 B 0x36EDF88
	0x036EDF84 B 0x36EDF88
	0x036EDF88 MOV X21, X0
	0x036EDF8C CMP W1, 0x1
	0x036EDF90 B.NE 0x36EDFB0
	0x036EDF94 MOV X0, X21
	0x036EDF98 BL 0x3EB1AD0
	0x036EDF9C LDR X20, [X0]
	0x036EDFA0 BL 0x3EB1AE0
	0x036EDFA4 MOVZ W21, 0x1
	0x036EDFA8 CBNZ X19, 0x36EDEE8
	0x036EDFAC B 0x36EDF50
	0x036EDFB0 MOV X20, X31
	0x036EDFB4 B 0x36EDFBC
	0x036EDFB8 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCF4000
	006 Move X21, 0xA54000
	007 Move W8, [X20+3037]
	008 Move X21, [X21+2000]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA54000
	015 Move X0, [X0+2000]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3037], W8
	019 Move X0, [X21]
	020 Move X1, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Call String.Concat, X0, X1
	027 Return X0

Method: System.String ConstructCustomPropertyName(UnityEngine.Component component, System.String property)

Disassembly:
	0x036F9EE0 RET
	0x036F9EE4 LDUR X8, [X0 + 0x44]
	0x036F9EE8 LDUR X1, [X0 + 0x4C]
	0x036F9EEC MOV X0, X8
	0x036F9EF0 RET
	0x036F9EF4 LDUR X8, [X0 + 0xA4]
	0x036F9EF8 LDUR X1, [X0 + 0xAC]
	0x036F9EFC MOV X0, X8
	0x036F9F00 RET
	0x036F9F04 LDP X8, X1, [X0 + 0x108]
	0x036F9F08 MOV X0, X8
	0x036F9F0C RET
	0x036F9F10 LDP X8, X1, [X0 + 0x58]
	0x036F9F14 MOV X0, X8
	0x036F9F18 RET
	0x036F9F1C LDP X8, X1, [X0 + 0x78]
	0x036F9F20 MOV X0, X8
	0x036F9F24 RET
	0x036F9F28 LDP X8, X1, [X0 + 0xA0]
	0x036F9F2C MOV X0, X8
	0x036F9F30 RET
	0x036F9F34 MOV X1, X31
	0x036F9F38 B 0x33A51F0
	0x036F9F3C MOV X1, X31
	0x036F9F40 B 0x33A51F0
	0x036F9F44 STP X30, X23, [X31 - 0x30]!
	0x036F9F48 STP X22, X21, [X31 + 0x10]
	0x036F9F4C STP X20, X19, [X31 + 0x20]
	0x036F9F50 ADRP X23, 0xCE7000
	0x036F9F54 ADRP X22, 0x9FA000
	0x036F9F58 ADRP X20, 0xA47000
	0x036F9F5C ADRP X21, 0xA47000
	0x036F9F60 MOV X19, X8
	0x036F9F64 LDRB W8, [X23 + 0xBE1]
	0x036F9F68 LDR X22, [X22 + 0x618]
	0x036F9F6C LDR X20, [X20 + 0xC90]
	0x036F9F70 LDR X21, [X21 + 0xC98]
	0x036F9F74 TBNZ X8, 0x0, 0x36F9FA4
	0x036F9F78 ADRP X0, 0x9FA000
	0x036F9F7C LDR X0, [X0 + 0x618]
	0x036F9F80 BL 0x1C16CF4
	0x036F9F84 ADRP X0, 0xA47000
	0x036F9F88 LDR X0, [X0 + 0xC98]
	0x036F9F8C BL 0x1C16CF4
	0x036F9F90 ADRP X0, 0xA47000
	0x036F9F94 LDR X0, [X0 + 0xC90]
	0x036F9F98 BL 0x1C16CF4
	0x036F9F9C MOVZ W8, 0x1
	0x036F9FA0 STRB W8, [X23 + 0xBE1]
	0x036F9FA4 LDR X0, [X22]
	0x036F9FA8 MOVZ W1, 0xDFC
	0x036F9FAC BL 0x1C16D6C
	0x036F9FB0 LDR X1, [X20]
	0x036F9FB4 MOV X2, X31
	0x036F9FB8 MOV X20, X0
	0x036F9FBC BL 0x32C5BD8
	0x036F9FC0 LDR X0, [X22]
	0x036F9FC4 MOVZ W1, 0xBFC
	0x036F9FC8 BL 0x1C16D6C
	0x036F9FCC LDR X1, [X21]
	0x036F9FD0 MOV X2, X31
	0x036F9FD4 MOV X21, X0
	0x036F9FD8 BL 0x32C5BD8
	0x036F9FDC ADRP X8, 0xFFFFFFFFFD3F5000
	0x036F9FE0 LDR V0, [X8 + 0x3A8]
	0x036F9FE4 STP X20, X21, [X19]
	0x036F9FE8 STRB W31, [X19 + 0x18]
	0x036F9FEC STUR W31, [X19 + 0x19]
	0x036F9FF0 STR D0, [X19 + 0x10]
	0x036F9FF4 STR W31, [X19 + 0x1C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xCE8000
	007 Move X22, 0x9FB000
	008 Move W8, [X20+3038]
	009 Move X22, [X22+2760]
	010 Move X19, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x9FB000
	017 Move X0, [X0+2760]
	018 Call 0x1C17CF4
	019 Move X0, 0x9FC000
	020 Move X0, [X0+3784]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3038], W8
	024 Move X0, [X22]
	025 Move W1, 5
	026 Call 0x1C17D6C
	027 Compare X21, 0
	028 JumpIfEqual {79}
	029 Move X20, X0
	030 Move X0, X21
	031 Move X1, X31
	032 Call Component.get_transform, X0
	033 Compare X0, 0
	034 JumpIfEqual {79}
	035 Move X1, X31
	036 Call Object.GetInstanceID, X0
	037 Move [X31+12], W0
	038 Add X0, X31, 12
	039 Move X1, X31
	040 Call Int32.ToString, X0
	041 Compare X20, 0
	042 JumpIfEqual {79}
	043 Move W8, [X20+24]
	044 Compare W8, 0
	045 JumpIfEqual {78}
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X20+32], X0
	048 Move X22, 0x9FC000
	049 Move X22, [X22+3784]
	050 Move X0, X21
	051 Move X1, X31
	052 Move X8, [X22]
	053 Move [X20+40], X8
	054 Call "il2cpp_vm_object_is_inst", X0
	055 Compare X0, 0
	056 JumpIfEqual {61}
	057 Move X8, [X0]
	058 Move X9, [X8+360]
	059 Move X1, [X8+368]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move W8, [X20+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X20+48], X0
	065 Move X9, [X22]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X20+56], X9
	068 Move X0, X20
	069 Move X1, X31
	070 Move [X20+64], X19
	071 Call String.Concat, X0
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return X0
	078 Call 0x1C17F28
	079 Call 0x1C17F20

