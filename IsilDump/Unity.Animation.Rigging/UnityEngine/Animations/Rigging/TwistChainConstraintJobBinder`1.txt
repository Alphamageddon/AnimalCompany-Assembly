Type: UnityEngine.Animations.Rigging.TwistChainConstraintJobBinder`1

Method: UnityEngine.Animations.Rigging.TwistChainConstraintJob Create(UnityEngine.Animator animator, ref T data, UnityEngine.Component component)

Disassembly:
	0x0270EF04 LDR X1, [X20]
	0x0270EF08 ADD X0, X19, 0x68
	0x0270EF0C LDP X20, X19, [X31 + 0x30]
	0x0270EF10 LDP X22, X21, [X31 + 0x20]
	0x0270EF14 LDP X24, X23, [X31 + 0x10]
	0x0270EF18 LDR X30, [X31], #0x40
	0x0270EF1C B 0x23E53EC
	0x0270EF20 LDR X8, [X1 + 0x20]
	0x0270EF24 LDR X8, [X8 + 0xC0]
	0x0270EF28 LDR X1, [X8 + 0x30]
	0x0270EF2C B 0x2B86254
	0x0270EF30 STP X29, X30, [X31 - 0x60]!
	0x0270EF34 STP X28, X27, [X31 + 0x10]
	0x0270EF38 STP X26, X25, [X31 + 0x20]
	0x0270EF3C STP X24, X23, [X31 + 0x30]
	0x0270EF40 STP X22, X21, [X31 + 0x40]
	0x0270EF44 STP X20, X19, [X31 + 0x50]
	0x0270EF48 ADD X29, X31, 0x0
	0x0270EF4C SUB X31, X31, 0x300
	0x0270EF50 ADD X19, X31, 0x0
	0x0270EF54 STR X3, [X19 + 0x18]
	0x0270EF58 MRS X25, 0xC000
	0x0270EF5C LDR X9, [X25 + 0x28]
	0x0270EF60 ADRP X20, 0x1CCC000
	0x0270EF64 MOV X24, X4
	0x0270EF68 MOV X23, X2
	0x0270EF6C STUR X9, [X29 - 0x18]
	0x0270EF70 LDRB W9, [X20 + 0x5EC]
	0x0270EF74 MOV X22, X1
	0x0270EF78 MOV X26, X8
	0x0270EF7C TBNZ X9, 0x0, 0x270EFAC
	0x0270EF80 ADRP X0, 0x1A0F000
	0x0270EF84 LDR X0, [X0 + 0x128]
	0x0270EF88 BL 0x1C16CF4
	0x0270EF8C ADRP X0, 0x1A0F000
	0x0270EF90 LDR X0, [X0 + 0x940]
	0x0270EF94 BL 0x1C16CF4
	0x0270EF98 ADRP X0, 0x1A0F000
	0x0270EF9C LDR X0, [X0 + 0x960]
	0x0270EFA0 BL 0x1C16CF4
	0x0270EFA4 MOVZ W8, 0x1
	0x0270EFA8 STRB W8, [X20 + 0x5EC]
	0x0270EFAC LDR X8, [X24 + 0x20]
	0x0270EFB0 LDR X21, [X8 + 0xC0]
	0x0270EFB4 LDR X8, [X21 + 0x8]
	0x0270EFB8 ADD X9, X8, 0x135
	0x0270EFBC LDRH W9, [X9]
	0x0270EFC0 TBNZ X9, 0x0, 0x270EFE4
	0x0270EFC4 MOV X0, X8
	0x0270EFC8 BL 0x1C5C684
	0x0270EFCC LDR X8, [X24 + 0x20]
	0x0270EFD0 LDR X21, [X8 + 0xC0]
	0x0270EFD4 LDR X8, [X21 + 0x8]
	0x0270EFD8 ADD X9, X8, 0x135
	0x0270EFDC LDRH W9, [X9]
	0x0270EFE0 B 0x270EFE8
	0x0270EFE4 MOV X0, X8
	0x0270EFE8 LDR W10, [X0 + 0xFC]
	0x0270EFEC ADD X11, X31, 0x0
	0x0270EFF0 ADD W10, W10, 0x10
	0x0270EFF4 ADD X10, X10, 0xF
	0x0270EFF8 AND X10, X10, 0x1FFFFFFFF
	0x0270EFFC SUB X20, X11, X10
	0x0270F000 ADD X31, X20, 0x0
	0x0270F004 TBNZ X9, 0x0, 0x270F028
	0x0270F008 MOV X0, X8
	0x0270F00C BL 0x1C5C684
	0x0270F010 LDR X8, [X24 + 0x20]
	0x0270F014 LDR X21, [X8 + 0xC0]
	0x0270F018 LDR X8, [X21 + 0x8]
	0x0270F01C ADD X9, X8, 0x135
	0x0270F020 LDRH W9, [X9]
	0x0270F024 B 0x270F02C
	0x0270F028 MOV X0, X8
	0x0270F02C LDR W10, [X0 + 0xFC]
	0x0270F030 ADD X11, X31, 0x0
	0x0270F034 ADD W10, W10, 0x10
	0x0270F038 ADD X10, X10, 0xF
	0x0270F03C AND X10, X10, 0x1FFFFFFFF
	0x0270F040 SUB X28, X11, X10
	0x0270F044 ADD X31, X28, 0x0
	0x0270F048 STP X26, X25, [X19 + 0x8]
	0x0270F04C TBNZ X9, 0x0, 0x270F070
	0x0270F050 MOV X0, X8
	0x0270F054 BL 0x1C5C684
	0x0270F058 LDR X8, [X24 + 0x20]
	0x0270F05C LDR X21, [X8 + 0xC0]
	0x0270F060 LDR X8, [X21 + 0x8]
	0x0270F064 ADD X9, X8, 0x135
	0x0270F068 LDRH W9, [X9]
	0x0270F06C B 0x270F074
	0x0270F070 MOV X0, X8
	0x0270F074 LDR W10, [X0 + 0xFC]
	0x0270F078 ADD X11, X31, 0x0
	0x0270F07C ADD W10, W10, 0x10
	0x0270F080 ADD X10, X10, 0xF
	0x0270F084 AND X10, X10, 0x1FFFFFFFF
	0x0270F088 SUB X27, X11, X10
	0x0270F08C ADD X31, X27, 0x0
	0x0270F090 TBNZ X9, 0x0, 0x270F0B4
	0x0270F094 MOV X0, X8
	0x0270F098 BL 0x1C5C684
	0x0270F09C LDR X8, [X24 + 0x20]
	0x0270F0A0 LDR X21, [X8 + 0xC0]
	0x0270F0A4 LDR X8, [X21 + 0x8]
	0x0270F0A8 ADD X9, X8, 0x135
	0x0270F0AC LDRH W9, [X9]
	0x0270F0B0 B 0x270F0B8
	0x0270F0B4 MOV X0, X8
	0x0270F0B8 LDR W10, [X0 + 0xFC]
	0x0270F0BC ADD X11, X31, 0x0
	0x0270F0C0 ADD W10, W10, 0x10
	0x0270F0C4 ADD X10, X10, 0xF
	0x0270F0C8 AND X10, X10, 0x1FFFFFFFF
	0x0270F0CC SUB X26, X11, X10
	0x0270F0D0 ADD X31, X26, 0x0
	0x0270F0D4 TBNZ X9, 0x0, 0x270F0EC
	0x0270F0D8 MOV X0, X8
	0x0270F0DC BL 0x1C5C684
	0x0270F0E0 LDR X8, [X24 + 0x20]
	0x0270F0E4 LDR X21, [X8 + 0xC0]
	0x0270F0E8 MOV X8, X0
	0x0270F0EC LDR W8, [X8 + 0xFC]
	0x0270F0F0 ADD X9, X31, 0x0
	0x0270F0F4 ADD W8, W8, 0x10
	0x0270F0F8 ADD X8, X8, 0xF
	0x0270F0FC AND X8, X8, 0x1FFFFFFFF
	0x0270F100 SUB X25, X9, X8
	0x0270F104 ADD X31, X25, 0x0
	0x0270F108 ADD X0, X19, 0x1D8
	0x0270F10C MOVZ W2, 0x88
	0x0270F110 MOV W1, W31
	0x0270F114 BL 0x3EB1B10
	0x0270F118 SUB X0, X29, 0xA0
	0x0270F11C MOVZ W2, 0x88
	0x0270F120 MOV W1, W31
	0x0270F124 BL 0x3EB1B10
	0x0270F128 LDR X0, [X21 + 0x8]
	0x0270F12C LDRB W8, [X0 + 0x135]
	0x0270F130 TBNZ X8, 0x0, 0x270F140
	0x0270F134 BL 0x1C5C684
	0x0270F138 LDR X8, [X24 + 0x20]
	0x0270F13C LDR X21, [X8 + 0xC0]
	0x0270F140 LDR X1, [X21 + 0x10]
	0x0270F144 ADD X5, X19, 0xC8
	0x0270F148 MOV X2, X20
	0x0270F14C MOV X3, X23
	0x0270F150 MOV X4, X31
	0x0270F154 BL 0x1C17728
	0x0270F158 LDR X1, [X19 + 0xC8]
	0x0270F15C ADD X8, X19, 0xC8
	0x0270F160 MOV X0, X22
	0x0270F164 MOV X2, X31
	0x0270F168 BL 0x36EB150
	0x0270F16C LDUR V0, [X19 + 0xC8]
	0x0270F170 LDR X8, [X19 + 0xD8]
	0x0270F174 STUR V0, [X29 - 0xA0]
	0x0270F178 STUR X8, [X29 - 0x90]
	0x0270F17C LDR X8, [X24 + 0x20]
	0x0270F180 LDR X8, [X8 + 0xC0]
	0x0270F184 LDR X0, [X8 + 0x8]
	0x0270F188 LDRB W9, [X0 + 0x135]
	0x0270F18C TBNZ X9, 0x0, 0x270F19C
	0x0270F190 BL 0x1C5C684
	0x0270F194 LDR X8, [X24 + 0x20]
	0x0270F198 LDR X8, [X8 + 0xC0]
	0x0270F19C LDR X1, [X8 + 0x10]
	0x0270F1A0 ADD X5, X19, 0xC8
	0x0270F1A4 MOV X2, X28
	0x0270F1A8 MOV X3, X23
	0x0270F1AC MOV X4, X31
	0x0270F1B0 BL 0x1C17728
	0x0270F1B4 LDR X0, [X19 + 0xC8]
	0x0270F1B8 CBZ X0, 0x270F424
	0x0270F1BC MOV X1, X31
	0x0270F1C0 BL 0x3C3F830
	0x0270F1C4 MOV X0, X31
	0x0270F1C8 BL 0x3C2A260
	0x0270F1CC STP S0, S1, [X29 - 0x88]
	0x0270F1D0 STP S2, S3, [X29 - 0x80]
	0x0270F1D4 LDR X8, [X24 + 0x20]
	0x0270F1D8 LDR X8, [X8 + 0xC0]
	0x0270F1DC LDR X0, [X8 + 0x8]
	0x0270F1E0 LDRB W9, [X0 + 0x135]
	0x0270F1E4 TBNZ X9, 0x0, 0x270F1F4
	0x0270F1E8 BL 0x1C5C684
	0x0270F1EC LDR X8, [X24 + 0x20]
	0x0270F1F0 LDR X8, [X8 + 0xC0]
	0x0270F1F4 LDR X1, [X8 + 0x18]
	0x0270F1F8 ADD X5, X19, 0xC8
	0x0270F1FC MOV X2, X27
	0x0270F200 MOV X3, X23
	0x0270F204 MOV X4, X31
	0x0270F208 BL 0x1C17728
	0x0270F20C LDR V0, [X19 + 0xC8]
	0x0270F210 LDR V1, [X19 + 0xD0]
	0x0270F214 STUR D0, [X29 - 0x78]
	0x0270F218 STUR S1, [X29 - 0x70]
	0x0270F21C LDR X8, [X24 + 0x20]
	0x0270F220 LDR X8, [X8 + 0xC0]
	0x0270F224 LDR X0, [X8 + 0x8]
	0x0270F228 LDRB W9, [X0 + 0x135]
	0x0270F22C TBNZ X9, 0x0, 0x270F23C
	0x0270F230 BL 0x1C5C684
	0x0270F234 LDR X8, [X24 + 0x20]
	0x0270F238 LDR X8, [X8 + 0xC0]
	0x0270F23C LDR X1, [X8 + 0x20]
	0x0270F240 ADRP X27, 0x1A0E000
	0x0270F244 LDR X27, [X27 + 0x960]
	0x0270F248 ADD X5, X19, 0x1D8
	0x0270F24C MOV X2, X26
	0x0270F250 MOV X3, X23
	0x0270F254 MOV X4, X31
	0x0270F258 BL 0x1C17728
	0x0270F25C ADD X0, X19, 0x150
	0x0270F260 ADD X1, X19, 0x1D8
	0x0270F264 MOVZ W2, 0x88
	0x0270F268 BL 0x3EB1AC0
	0x0270F26C LDR X1, [X19 + 0x18]
	0x0270F270 SUB X26, X29, 0xA0
	0x0270F274 ADD X3, X26, 0x38
	0x0270F278 ADD X2, X19, 0x150
	0x0270F27C MOV X0, X22
	0x0270F280 MOV X4, X31
	0x0270F284 BL 0x36ECBBC
	0x0270F288 ADD X0, X19, 0xC8
	0x0270F28C ADD X1, X19, 0x1D8
	0x0270F290 MOVZ W2, 0x88
	0x0270F294 BL 0x3EB1AC0
	0x0270F298 LDR X8, [X24 + 0x20]
	0x0270F29C LDR X8, [X8 + 0xC0]
	0x0270F2A0 LDR X0, [X8 + 0x8]
	0x0270F2A4 LDRB W9, [X0 + 0x135]
	0x0270F2A8 TBNZ X9, 0x0, 0x270F2B8
	0x0270F2AC BL 0x1C5C684
	0x0270F2B0 LDR X8, [X24 + 0x20]
	0x0270F2B4 LDR X8, [X8 + 0xC0]
	0x0270F2B8 LDR X1, [X8 + 0x28]
	0x0270F2BC ADRP X28, 0x1A0E000
	0x0270F2C0 ADRP X24, 0x1A0E000
	0x0270F2C4 LDR X28, [X28 + 0x128]
	0x0270F2C8 LDR X24, [X24 + 0x940]
	0x0270F2CC ADD X5, X19, 0x30
	0x0270F2D0 MOV X2, X25
	0x0270F2D4 MOV X3, X23
	0x0270F2D8 MOV X4, X31
	0x0270F2DC SUB X21, X29, 0xA0
	0x0270F2E0 BL 0x1C17728
	0x0270F2E4 LDR X20, [X19 + 0x30]
	0x0270F2E8 ADD X0, X19, 0x40
	0x0270F2EC ADD X1, X19, 0xC8
	0x0270F2F0 MOVZ W2, 0x88
	0x0270F2F4 ADD X23, X26, 0x48
	0x0270F2F8 BL 0x3EB1AC0
	0x0270F2FC LDR X1, [X19 + 0x18]
	0x0270F300 ADD X2, X19, 0x40
	0x0270F304 MOV X0, X22
	0x0270F308 MOV X3, X20
	0x0270F30C MOV X4, X23
	0x0270F310 MOV X5, X31
	0x0270F314 BL 0x36ECCCC
	0x0270F318 LDR X0, [X27]
	0x0270F31C LDR W8, [X0 + 0xE0]
	0x0270F320 CBNZ W8, 0x270F328
	0x0270F324 BL 0x1C16DFC
	0x0270F328 LDR W20, [X19 + 0x1D8]
	0x0270F32C LDR X4, [X28]
	0x0270F330 ADD X0, X19, 0x30
	0x0270F334 MOVZ W2, 0x4
	0x0270F338 MOV W1, W20
	0x0270F33C MOV W3, W31
	0x0270F340 STP X31, X31, [X19 + 0x30]
	0x0270F344 BL 0x23E51BC
	0x0270F348 LDR V0, [X19 + 0x3]
	0x0270F34C LDR X4, [X24]
	0x0270F350 ADD X0, X19, 0x20
	0x0270F354 MOVZ W2, 0x4
	0x0270F358 MOV W1, W20
	0x0270F35C MOV W3, W31
	0x0270F360 STUR V0, [X21 + 0x68]
	0x0270F364 STP X31, X31, [X19 + 0x20]
	0x0270F368 BL 0x23DFA34
	0x0270F36C LDR V0, [X19 + 0x2]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+192], D11
	003 Move [X31+200], D10
	004 Move [X31+208], D9
	005 Move [X31+216], D8
	006 Move [X31+224], X29
	007 Move [X31+232], X30
	008 Move [X31+240], X28
	009 Move [X31+248], X27
	010 Move [X31+256], X26
	011 Move [X31+264], X25
	012 Move [X31+272], X24
	013 Move [X31+280], X23
	014 Move [X31+288], X22
	015 Move [X31+296], X21
	016 Move [X31+304], X20
	017 Move [X31+312], X19
	018 NotImplemented "Instruction MRS not yet implemented."
	019 Move X9, [X21+40]
	020 Move X20, 0x1CCD000
	021 Move X25, X2
	022 Move X26, X1
	023 Move [X31+184], X9
	024 Move W9, [X20+1510]
	025 Move X19, X8
	026 Move TEMP, X9
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {41}
	030 Move X0, 0x1A10000
	031 Move X0, [X0+296]
	032 Call 0x1C17CF4
	033 Move X0, 0x1A10000
	034 Move X0, [X0+2368]
	035 Call 0x1C17CF4
	036 Move X0, 0x1A10000
	037 Move X0, [X0+2376]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+1510], W8
	041 Move X0, [X25]
	042 Move X1, [X25+8]
	043 Move X2, X31
	044 Call ConstraintsUtils.ExtractChain, X0, X1
	045 Move X1, X31
	046 Move X20, X0
	047 Call ConstraintsUtils.ExtractSteps, X0
	048 Move [X31+168], X31
	049 Move [X31+176], X31
	050 Compare X20, 0
	051 JumpIfEqual {317}
	052 Move [X31+80], X21
	053 Move X8, 0x1A10000
	054 Move X8, [X8+2376]
	055 Move [X31+152], X31
	056 Move [X31+160], X31
	057 Move W1, [X20+24]
	058 Move X22, 0x1A10000
	059 Move X4, [X8]
	060 Move X23, 0x1A10000
	061 Move X22, [X22+296]
	062 Move X23, [X23+2368]
	063 Move X27, X0
	064 Add X0, X31, 152
	065 Move W2, 4
	066 Move W3, W31
	067 Call NativeArray`1<ReadWriteTransformHandle>..ctor, X0, X1, X2, X3
	068 Move X8, [X31+152]
	069 Move [X31+136], X31
	070 Move [X31+144], X31
	071 Move W1, [X20+24]
	072 Move X4, [X22]
	073 Move [X31+96], X8
	074 Move X8, [X31+160]
	075 Add X0, X31, 136
	076 Move W2, 4
	077 Move W3, W31
	078 Move [X31+72], X8
	079 Call NativeArray`1<Single>..ctor, X0, X1, X2, X3
	080 Move [X31+120], X31
	081 Move [X31+128], X31
	082 Move X21, [X31+136]
	083 Move X8, [X31+144]
	084 Move W1, [X20+24]
	085 Move X4, [X22]
	086 Add X0, X31, 120
	087 Move W2, 4
	088 Move W3, W31
	089 Move [X31+64], X8
	090 Call NativeArray`1<Single>..ctor, X0, X1, X2, X3
	091 Move [X31+104], X31
	092 Move [X31+112], X31
	093 Move X22, [X31+120]
	094 Move X8, [X31+128]
	095 Move W1, [X20+24]
	096 Move X4, [X23]
	097 Add X0, X31, 104
	098 Move W2, 4
	099 Move W3, W31
	100 Move [X31+56], X8
	101 Call NativeArray`1<Quaternion>..ctor, X0, X1, X2, X3
	102 Move X8, [X31+104]
	103 Move X1, [X25+16]
	104 Move X0, X26
	105 Move X2, X31
	106 Move [X31+88], X8
	107 Move X8, [X31+112]
	108 Move [X31+48], X8
	109 Call ReadWriteTransformHandle.Bind, X0, X1
	110 Move X8, [X25+24]
	111 Move [X31+32], X1
	112 Move [X31+40], X0
	113 Move X0, X26
	114 Move X2, X31
	115 Move X1, X8
	116 Call ReadWriteTransformHandle.Bind, X0, X1
	117 Move X8, [X20+24]
	118 Move [X31+16], X1
	119 Move [X31+24], X0
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X9, [X31+96]
	122 Move X24, X31
	123 And X8, X8, 0
	124 Add X29, X20, 32
	125 Add X28, X9, 8
	126 Add X23, X27, 32
	127 Move S8, 1
	128 Move S9, W31
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X1, [X29]
	131 Move X0, X26
	132 Move X2, X31
	133 Call ReadWriteTransformHandle.Bind, X0, X1
	134 Move [X28-8], X0
	135 Move [X28], W1
	136 Compare X27, 0
	137 JumpIfEqual {317}
	138 Move W8, [X27+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move V0, [X23]
	141 Move [X21], S0
	142 Move X0, [X25+32]
	143 Compare X0, 0
	144 JumpIfEqual {317}
	145 Move V0, [X23]
	146 Move X1, X31
	147 Call AnimationCurve.Evaluate, X0, V0
	148 NotImplemented "Instruction FMIN not yet implemented."
	149 NotImplemented "Instruction FCMP not yet implemented."
	150 NotImplemented "Instruction FCSEL not yet implemented."
	151 Move [X22], S0
	152 Move W8, [X20+24]
	153 Add X24, X24, 1
	154 Add X28, X28, 12
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X23, 0x1CCA000
	157 Move W8, [X23+1939]
	158 Compare W8, 0
	159 JumpIfNotEqual {165}
	160 Move X0, 0x19E6000
	161 Move X0, [X0+1448]
	162 Call 0x1C17CF4
	163 Move W8, 1
	164 Move [X23+1939], W8
	165 Move X8, 0x19E6000
	166 Move X8, [X8+1448]
	167 Move X29, [X31+88]
	168 Move X25, INVALID
	169 Move X9, [X8]
	170 Move X9, [X9+184]
	171 Move V0, [X9]
	172 Move [X29], V0
	173 Move X8, [X8]
	174 Move X9, [X20+24]
	175 Move X8, [X8+184]
	176 Move V0, [X8]
	177 Add X8, X25, X9
	178 NotImplemented "Instruction SBFM not yet implemented."
	179 Move [X29], V0
	180 Move W8, [X20+24]
	181 Subtract W9, W8, 1
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X26, X31
	184 Add X27, X20, 40
	185 Add X24, X29, 28
	186 Add X28, X22, 4
	187 Compare W8, 0
	188 JumpIfEqual {318}
	189 Move X0, [X20+32]
	190 Compare X0, 0
	191 JumpIfEqual {317}
	192 Move X1, X31
	193 Call Transform.get_rotation, X0
	194 Move X8, [X20+24]
	195 Compare W8, 0
	196 JumpIfEqual {318}
	197 Add X8, X25, X8
	198 Add X8, X20, X8
	199 Move X0, [X8+32]
	200 Compare X0, 0
	201 JumpIfEqual {317}
	202 Move X1, X31
	203 Move V8, V0
	204 Move V9, V1
	205 Move V10, V2
	206 Move V11, V3
	207 Add X23, X26, 1
	208 Call Transform.get_rotation, X0
	209 Move V4, V0
	210 Move V0, [X28]
	211 Move V5, V1
	212 Move V6, V2
	213 Move V7, V3
	214 Move [X31], S0
	215 Move V0, V8
	216 Move V1, V9
	217 Move V2, V10
	218 Move V3, V11
	219 Move X0, X31
	220 Call Quaternion.Lerp, X0, X1, V0
	221 Move X0, X31
	222 Call Quaternion.Inverse, X0
	223 Move W8, [X20+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move X0, [X27]
	226 Compare X0, 0
	227 JumpIfEqual {317}
	228 Move X1, X31
	229 Move V10, V0
	230 Move V9, V1
	231 Move V8, V2
	232 Move V11, V3
	233 Call Transform.get_rotation, X0
	234 Multiply S4, S11, S0
	235 Multiply S5, S10, S3
	236 Multiply S16, S11, S1
	237 Multiply S17, S9, S3
	238 Multiply S21, S10, S0
	239 Multiply S22, S11, S2
	240 Multiply S23, S11, S3
	241 Multiply S3, S8, S3
	242 Multiply S6, S9, S2
	243 Multiply S7, S8, S1
	244 Multiply S18, S8, S0
	245 Multiply S20, S10, S1
	246 Multiply S1, S9, S1
	247 Add S4, S4, S5
	248 Add S5, S16, S17
	249 Add S3, S22, S3
	250 Subtract S16, S23, S21
	251 Multiply S19, S10, S2
	252 Multiply S0, S9, S0
	253 Multiply S2, S8, S2
	254 Add S4, S6, S4
	255 Add S5, S18, S5
	256 Add S3, S20, S3
	257 Subtract S1, S16, S1
	258 Subtract S4, S4, S7
	259 Subtract S5, S5, S19
	260 Subtract S0, S3, S0
	261 Subtract S1, S1, S2
	262 Move [X24-12], S4
	263 Move [X24-4], S5
	264 Move [X24-4], S0
	265 Move [X24+4], S1
	266 Move W8, [X20+24]
	267 Add X26, X26, 1
	268 Add W10, W26, 1
	269 Add X24, X24, 16
	270 Subtract W9, W8, 1
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X8, [X31+40]
	273 Move X9, [X31+96]
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 Move [X19], X8
	276 Move X8, [X31+32]
	277 Move [X19+88], V0
	278 Move [X19+8], W8
	279 Move X8, [X31+24]
	280 Move [X19+12], X8
	281 Move X8, [X31+16]
	282 Move [X19+20], W8
	283 Move X8, [X31+72]
	284 Move [X19+24], X9
	285 Move [X19+32], X8
	286 Move X8, [X31+64]
	287 Move [X19+40], X21
	288 Move [X19+48], X8
	289 Move X8, [X31+56]
	290 Move [X19+56], X22
	291 Move [X19+64], X8
	292 Move X8, [X31+48]
	293 Move [X19+72], X29
	294 Move [X19+80], X8
	295 Move X8, [X31+80]
	296 Move X8, [X8+40]
	297 Move X9, [X31+184]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move X20, [X31+304]
	300 Move X19, [X31+312]
	301 Move X22, [X31+288]
	302 Move X21, [X31+296]
	303 Move X24, [X31+272]
	304 Move X23, [X31+280]
	305 Move X26, [X31+256]
	306 Move X25, [X31+264]
	307 Move X28, [X31+240]
	308 Move X27, [X31+248]
	309 Move X29, [X31+224]
	310 Move X30, [X31+232]
	311 Move D9, [X31+208]
	312 Move D8, [X31+216]
	313 Move D11, [X31+192]
	314 Move D10, [X31+200]
	315 Add X31, X31, 320
	316 Return X0
	317 Call 0x1C17F20
	318 Call 0x1C17F28
	319 Call 0x3EB2B20

Method: System.Void Destroy(UnityEngine.Animations.Rigging.TwistChainConstraintJob job)

Disassembly:
	0x0270F370 MOV X22, X31
	0x0270F374 MOV X20, X31
	0x0270F378 STUR V0, [X21 + 0x58]
	0x0270F37C LDR X0, [X27]
	0x0270F380 LDR W8, [X0 + 0xE0]
	0x0270F384 CBNZ W8, 0x270F38C
	0x0270F388 BL 0x1C16DFC
	0x0270F38C LDRSW X8, [X19 + 0x1D8]
	0x0270F390 CMP X20, X8
	0x0270F394 B.GE 0x270F3E0
	0x0270F398 LDR X0, [X27]
	0x0270F39C LDR W8, [X0 + 0xE0]
	0x0270F3A0 CBNZ W8, 0x270F3A8
	0x0270F3A4 BL 0x1C16DFC
	0x0270F3A8 ADD X0, X19, 0x1D8
	0x0270F3AC MOV W1, W20
	0x0270F3B0 MOV X2, X31
	0x0270F3B4 BL 0x36ECB58
	0x0270F3B8 CBZ X0, 0x270F424
	0x0270F3BC MOV X1, X31
	0x0270F3C0 BL 0x3C3F830
	0x0270F3C4 LDUR X8, [X29 - 0x48]
	0x0270F3C8 ADD X20, X20, 0x1
	0x0270F3CC ADD X8, X8, X22
	0x0270F3D0 ADD X22, X22, 0x10
	0x0270F3D4 STP S0, S1, [X8]
	0x0270F3D8 STP S2, S3, [X8 + 0x8]
	0x0270F3DC B 0x270F37C
	0x0270F3E0 LDR X0, [X19 + 0x8]
	0x0270F3E4 SUB X1, X29, 0xA0
	0x0270F3E8 MOVZ W2, 0x88
	0x0270F3EC BL 0x3EB1AC0
	0x0270F3F0 LDR X8, [X19 + 0x10]
	0x0270F3F4 LDR X8, [X8 + 0x28]
	0x0270F3F8 LDUR X9, [X29 - 0x18]
	0x0270F3FC CMP X8, X9
	0x0270F400 B.NE 0x270F428
	0x0270F404 ADD X31, X29, 0x0
	0x0270F408 LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1CCC000
	008 Move X22, 0x1A0F000
	009 Move X21, 0x1A0F000
	010 Move X20, 0x1A0F000
	011 Move W8, [X23+1511]
	012 Move X22, [X22+2384]
	013 Move X21, [X21+344]
	014 Move X20, [X20+2392]
	015 Move X19, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x1A0F000
	021 Move X0, [X0+2392]
	022 Call 0x1C17CF4
	023 Move X0, 0x1A0F000
	024 Move X0, [X0+344]
	025 Call 0x1C17CF4
	026 Move X0, 0x1A0F000
	027 Move X0, [X0+2384]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1511], W8
	031 Move X1, [X22]
	032 Add X0, X19, 24
	033 Call NativeArray`1<ReadWriteTransformHandle>.Dispose, X0
	034 Move X1, [X21]
	035 Add X0, X19, 56
	036 Call NativeArray`1<Single>.Dispose, X0
	037 Move X1, [X21]
	038 Add X0, X19, 40
	039 Call NativeArray`1<Single>.Dispose, X0
	040 Move X1, [X20]
	041 Add X0, X19, 72
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Call NativeArray`1<Quaternion>.Dispose, X0
	049 Return 

Method: System.Void .ctor()

Disassembly:
	0x0270F40C LDP X22, X21, [X31 + 0x40]
	0x0270F410 LDP X24, X23, [X31 + 0x30]
	0x0270F414 LDP X26, X25, [X31 + 0x20]
	0x0270F418 LDP X28, X27, [X31 + 0x10]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+56]
	004 Call AnimationJobBinder`2<TwistChainConstraintJob, TwistChainConstraintData>..ctor, X0
	005 Return 

