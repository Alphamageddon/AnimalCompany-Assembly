Type: UnityEngine.Animations.Rigging.MultiParentConstraintJob

Method: UnityEngine.Animations.Rigging.FloatProperty get_jobWeight()

Disassembly:
	0x036E8B68 MOV V0.16B, V15.16B
	0x036E8B6C MOV V1.16B, V8.16B
	0x036E8B70 MOV V2.16B, V9.16B

ISIL:
	001 Move X8, [X0+128]
	002 Move X1, [X0+136]
	003 Move X0, X8
	004 Return X0

Method: System.Void set_jobWeight(UnityEngine.Animations.Rigging.FloatProperty value)

Disassembly:
	0x036E8B74 MOV V4.16B, V14.16B
	0x036E8B78 MOV V5.16B, V13.16B

ISIL:
	001 Move [X0+128], X1
	002 Move [X0+136], X2
	003 Return 

Method: System.Void ProcessRootMotion(UnityEngine.Animations.AnimationStream stream)

Disassembly:
	0x036E8B7C MOV V6.16B, V12.16B

ISIL:
	001 Return 

Method: System.Void ProcessAnimation(UnityEngine.Animations.AnimationStream stream)

Disassembly:
	0x036E8B80 MOV X0, X31
	0x036E8B84 BL 0x3C2A9FC
	0x036E8B88 LDR V3, [X31 + 0x18]
	0x036E8B8C LDP S5, S7, [X31 + 0x38]
	0x036E8B90 FMOV S4, W31
	0x036E8B94 LDR X8, [X20 + 0x30]
	0x036E8B98 FADD S0, S3, S0
	0x036E8B9C LDR V3, [X31 + 0x20]
	0x036E8BA0 FCMP S5, 0x0
	0x036E8BA4 FSUB S0, S0, S7
	0x036E8BA8 ADD X1, X31, 0x270
	0x036E8BAC FADD S1, S3, S1
	0x036E8BB0 LDR V3, [X31 + 0x1C]
	0x036E8BB4 FSUB S1, S1, S10
	0x036E8BB8 MOV X0, X19
	0x036E8BBC MOV X2, X31
	0x036E8BC0 FADD S2, S3, S2
	0x036E8BC4 FMOV S3, 1
	0x036E8BC8 FMIN S3, S5, S3
	0x036E8BCC LDP V5, V6, [X20]
	0x036E8BD0 FCSEL S3, S3, S4, PL
	0x036E8BD4 LDR V4, [X20 + 0x2]
	0x036E8BD8 FSUB S2, S2, S11
	0x036E8BDC FMUL S0, S3, S0
	0x036E8BE0 FMUL S1, S3, S1
	0x036E8BE4 FMUL S2, S3, S2
	0x036E8BE8 FADD S0, S7, S0
	0x036E8BEC FADD S1, S10, S1
	0x036E8BF0 FADD S2, S11, S2
	0x036E8BF4 STR X8, [X31 + 0x2A0]
	0x036E8BF8 STP V6, V4, [X31 + 0x280]
	0x036E8BFC STR V5, [X31 + 0x27]
	0x036E8C00 BL 0x3BF8670
	0x036E8C04 B 0x36E8820
	0x036E8C08 STR D10, [X31 - 0x30]!
	0x036E8C0C STP D9, D8, [X31 + 0x10]
	0x036E8C10 STP X30, X19, [X31 + 0x20]
	0x036E8C14 MOV V9.16B, V1.16B
	0x036E8C18 LDP S4, S1, [X0 + 0xC]
	0x036E8C1C MOV V8.16B, V2.16B
	0x036E8C20 LDP S2, S3, [X0 + 0x14]
	0x036E8C24 MOV X19, X0
	0x036E8C28 MOV V10.16B, V0.16B
	0x036E8C2C MOV V0.16B, V4.16B
	0x036E8C30 MOV X0, X31
	0x036E8C34 BL 0x3C2A260
	0x036E8C38 LDP S4, S5, [X19]
	0x036E8C3C LDR V6, [X19 + 0x8]
	0x036E8C40 LDP X30, X19, [X31 + 0x20]
	0x036E8C44 MOV X0, X31
	0x036E8C48 FSUB S5, S9, S5
	0x036E8C4C FSUB S6, S8, S6
	0x036E8C50 LDP D9, D8, [X31 + 0x10]
	0x036E8C54 FSUB S4, S10, S4
	0x036E8C58 LDR V10, [X31], #0x30
	0x036E8C5C B 0x3C2A9FC
	0x036E8C60 STP X30, X19, [X31 - 0x10]!
	0x036E8C64 MOV V5.16B, V1.16B
	0x036E8C68 LDP S4, S1, [X0 + 0xC]
	0x036E8C6C MOV V6.16B, V2.16B
	0x036E8C70 LDP S2, S3, [X0 + 0x14]
	0x036E8C74 MOV V7.16B, V0.16B
	0x036E8C78 MOV X19, X0
	0x036E8C7C MOV V0.16B, V4.16B
	0x036E8C80 MOV V4.16B, V7.16B
	0x036E8C84 MOV X0, X31
	0x036E8C88 BL 0x3C2A9FC
	0x036E8C8C LDP S3, S4, [X19]
	0x036E8C90 LDR V5, [X19 + 0x8]
	0x036E8C94 FADD S0, S0, S3
	0x036E8C98 FADD S1, S1, S4
	0x036E8C9C FADD S2, S2, S5
	0x036E8CA0 LDP X30, X19, [X31], #0x10
	0x036E8CA4 RET
	0x036E8CA8 LDUR X8, [X0 + 0x44]
	0x036E8CAC LDUR X1, [X0 + 0x4C]
	0x036E8CB0 MOV X0, X8
	0x036E8CB4 RET
	0x036E8CB8 STUR X1, [X0 + 0x44]
	0x036E8CBC STUR X2, [X0 + 0x4C]
	0x036E8CC0 RET
	0x036E8CC4 RET
	0x036E8CC8 STP D15, D14, [X31 - 0xA0]!
	0x036E8CCC STP D13, D12, [X31 + 0x10]
	0x036E8CD0 STP D11, D10, [X31 + 0x20]
	0x036E8CD4 STP D9, D8, [X31 + 0x30]
	0x036E8CD8 STP X29, X30, [X31 + 0x40]
	0x036E8CDC STP X28, X27, [X31 + 0x50]
	0x036E8CE0 STP X26, X25, [X31 + 0x60]
	0x036E8CE4 STP X24, X23, [X31 + 0x70]
	0x036E8CE8 STP X22, X21, [X31 + 0x80]
	0x036E8CEC STP X20, X19, [X31 + 0x90]
	0x036E8CF0 SUB X31, X31, 0x220
	0x036E8CF4 ADRP X21, 0xCF8000
	0x036E8CF8 LDRB W8, [X21 + 0xB2B]
	0x036E8CFC MOV X20, X1
	0x036E8D00 MOV X19, X0
	0x036E8D04 TBNZ X8, 0x0, 0x36E8D1C
	0x036E8D08 ADRP X0, 0xA34000
	0x036E8D0C LDR X0, [X0 + 0xE40]
	0x036E8D10 BL 0x1C16CF4
	0x036E8D14 MOVZ W8, 0x1
	0x036E8D18 STRB W8, [X21 + 0xB2B]
	0x036E8D1C MOV X0, X19
	0x036E8D20 MOV X1, X31
	0x036E8D24 STR W31, [X31 + 0x1C8]
	0x036E8D28 STP X31, X31, [X31 + 0x1B8]
	0x036E8D2C STR X31, [X31 + 0x1B0]
	0x036E8D30 STR W31, [X31 + 0x1A8]
	0x036E8D34 STR X31, [X31 + 0x1A0]
	0x036E8D38 STR W31, [X31 + 0x198]
	0x036E8D3C STR X31, [X31 + 0x190]
	0x036E8D40 STR W31, [X31 + 0x188]
	0x036E8D44 STP X31, X31, [X31 + 0x178]
	0x036E8D48 STR X31, [X31 + 0x170]
	0x036E8D4C BL 0x36F9EE4
	0x036E8D50 STP X0, X1, [X31 + 0x1D0]
	0x036E8D54 LDR X8, [X20 + 0x30]
	0x036E8D58 LDP V1, V0, [X20 + 0x10]
	0x036E8D5C LDR V2, [X20]
	0x036E8D60 ADD X0, X31, 0x1D0
	0x036E8D64 ADD X1, X31, 0x1E0
	0x036E8D68 MOV X2, X31
	0x036E8D6C STR X8, [X31 + 0x210]
	0x036E8D70 STP V1, V0, [X31 + 0x1F0]
	0x036E8D74 STR V2, [X31 + 0x1E]
	0x036E8D78 BL 0x3BF9750
	0x036E8D7C FCMP S0, 0x0
	0x036E8D80 B.LE 0x36E9084
	0x036E8D84 MOV V8.16B, V0.16B
	0x036E8D88 LDP V2, V0, [X20 + 0x10]
	0x036E8D8C LDR X8, [X20 + 0x30]
	0x036E8D90 LDR V1, [X20]
	0x036E8D94 ADRP X22, 0xA34000
	0x036E8D98 LDR X22, [X22 + 0xE40]
	0x036E8D9C ADD X1, X31, 0x1E0
	0x036E8DA0 MOV X0, X19
	0x036E8DA4 MOV X2, X31
	0x036E8DA8 STR X8, [X31 + 0x210]
	0x036E8DAC STP V2, V0, [X31 + 0x1F0]
	0x036E8DB0 STR V1, [X31 + 0x1E]
	0x036E8DB4 BL 0x3BF9930
	0x036E8DB8 LDR W8, [X19 + 0x40]
	0x036E8DBC MOV W21, W0
	0x036E8DC0 CMP W0, W8
	0x036E8DC4 B.EQ 0x36E8DD4
	0x036E8DC8 MOV X0, X19
	0x036E8DCC MOV W1, W21
	0x036E8DD0 BL 0x36E9118
	0x036E8DD4 LDR X8, [X19 + 0x10]
	0x036E8DD8 MOVZ W9, 0xC
	0x036E8DDC ADD X0, X31, 0x1A0
	0x036E8DE0 ADD X1, X31, 0x1E0
	0x036E8DE4 SMADDL X8, X21, X9, X8
	0x036E8DE8 LDR W9, [X8 + 0x8]
	0x036E8DEC LDR X8, [X8]
	0x036E8DF0 ADD X2, X31, 0x1C0
	0x036E8DF4 ADD X3, X31, 0x1B0
	0x036E8DF8 STR W9, [X31 + 0x1A8]
	0x036E8DFC STR X8, [X31 + 0x1A0]
	0x036E8E00 LDR X8, [X20 + 0x30]
	0x036E8E04 LDP V1, V0, [X20 + 0x10]
	0x036E8E08 LDR V2, [X20]
	0x036E8E0C MOV X4, X31
	0x036E8E10 STR X8, [X31 + 0x210]
	0x036E8E14 STP V1, V0, [X31 + 0x1F0]
	0x036E8E18 STR V2, [X31 + 0x1E]
	0x036E8E1C BL 0x3BF8E04
	0x036E8E20 LDR V0, [X31 + 0x1C0]
	0x036E8E24 LDR X0, [X22]
	0x036E8E28 STR D0, [X31 + 0x38]
	0x036E8E2C LDR V0, [X31 + 0x1C8]
	0x036E8E30 LDR W8, [X0 + 0xE0]
	0x036E8E34 STR S0, [X31 + 0x34]
	0x036E8E38 LDR V0, [X31 + 0x1B]
	0x036E8E3C STR V0, [X31 + 0x2]
	0x036E8E40 CBNZ W8, 0x36E8E48
	0x036E8E44 BL 0x1C16DFC
	0x036E8E48 LDR W8, [X19 + 0x18]
	0x036E8E4C SXTW X23, W21
	0x036E8E50 CMP W8, 0x1
	0x036E8E54 B.LT 0x36E904C
	0x036E8E58 FMOV S0, 1
	0x036E8E5C FCMP S8, 0x0
	0x036E8E60 FMOV S1, W31
	0x036E8E64 FMIN S0, S8, S0
	0x036E8E68 FCSEL S0, S0, S1, PL
	0x036E8E6C MOV X24, X31
	0x036E8E70 MOV X25, X31
	0x036E8E74 MOV W26, W31
	0x036E8E78 ADD X27, X31, 0x110
	0x036E8E7C MOV W21, W21
	0x036E8E80 UNIMPLEMENTED
	0x036E8E84 MOVZ W28, 0x1C
	0x036E8E88 STR V0, [X31 + 0x1]
	0x036E8E8C CMP X21, X25
	0x036E8E90 B.EQ 0x36E903C
	0x036E8E94 LDR X8, [X19 + 0x30]
	0x036E8E98 LDR X0, [X22]
	0x036E8E9C NOP
	0x036E8EA0 SMADDL X8, X26, X28, X8
	0x036E8EA4 LDUR V0, [X8 + 0xC]
	0x036E8EA8 LDR V1, [X8]
	0x036E8EAC STUR V0, [X27 + 0x4C]
	0x036E8EB0 STR V1, [X31 + 0x15]
	0x036E8EB4 LDR W8, [X0 + 0xE0]
	0x036E8EB8 CBNZ W8, 0x36E8EC0
	0x036E8EBC BL 0x1C16DFC
	0x036E8EC0 LDR V0, [X31 + 0x38]
	0x036E8EC4 LDR V2, [X31 + 0x34]
	0x036E8EC8 LDUR V1, [X27 + 0x4C]
	0x036E8ECC ADD X8, X31, 0x1E0
	0x036E8ED0 STR D0, [X31 + 0x130]
	0x036E8ED4 LDR V0, [X31 + 0x15]
	0x036E8ED8 STR S2, [X31 + 0x138]
	0x036E8EDC LDR V2, [X31 + 0x2]
	0x036E8EE0 ADD X0, X31, 0x130
	0x036E8EE4 ADD X1, X31, 0x110
	0x036E8EE8 STR V0, [X31 + 0x11]
	0x036E8EEC STUR V2, [X27 + 0x2C]
	0x036E8EF0 STUR V1, [X27 + 0xC]
	0x036E8EF4 BL 0x36E4E64
	0x036E8EF8 LDR X8, [X19 + 0x10]
	0x036E8EFC LDR V13, [X31 + 0x1E0]
	0x036E8F00 LDR V15, [X31 + 0x1E8]
	0x036E8F04 LDR V9, [X31 + 0x1EC]
	0x036E8F08 ADD X8, X8, X24
	0x036E8F0C LDR W9, [X8 + 0x8]
	0x036E8F10 LDR X8, [X8]
	0x036E8F14 LDR V10, [X31 + 0x1F0]
	0x036E8F18 LDR V11, [X31 + 0x1F4]
	0x036E8F1C STR W9, [X31 + 0x198]
	0x036E8F20 STR X8, [X31 + 0x190]
	0x036E8F24 LDP V2, V0, [X20 + 0x10]
	0x036E8F28 LDR X8, [X20 + 0x30]
	0x036E8F2C LDR V1, [X20]
	0x036E8F30 LDR V12, [X31 + 0x1F8]
	0x036E8F34 ADD X0, X31, 0x190
	0x036E8F38 ADD X1, X31, 0x1E0
	0x036E8F3C ADD X2, X31, 0x180
	0x036E8F40 ADD X3, X31, 0x170
	0x036E8F44 MOV X4, X31
	0x036E8F48 STR X8, [X31 + 0x210]
	0x036E8F4C STP V2, V0, [X31 + 0x1F0]
	0x036E8F50 STR V1, [X31 + 0x1E]
	0x036E8F54 BL 0x3BF8E04
	0x036E8F58 LDP V2, V3, [X20]
	0x036E8F5C LDR V4, [X31 + 0x180]
	0x036E8F60 LDR V0, [X20 + 0x2]
	0x036E8F64 LDR X8, [X20 + 0x30]
	0x036E8F68 LDR V5, [X31 + 0x188]
	0x036E8F6C STR V2, [X31 + 0xD]
	0x036E8F70 FSUB V2.2S, V13.2S, V4.2S
	0x00000000 INVALID
	0x036E8F78 LDR V6, [X31 + 0x1]
	0x036E8F7C FADD V2.2S, V4.2S, V2.2S
	0x036E8F80 STP V3, V0, [X31 + 0xE0]
	0x036E8F84 LDR V0, [X31 + 0x170]
	0x036E8F88 LDR V1, [X31 + 0x174]
	0x036E8F8C STR V2, [X31 + 0x4]
	0x036E8F90 LDR V2, [X31 + 0x178]
	0x036E8F94 LDR V3, [X31 + 0x17C]
	0x036E8F98 FSUB S4, S15, S5
	0x036E8F9C FMUL S4, S6, S4
	0x036E8FA0 FADD S13, S5, S4
	0x036E8FA4 MOV V4.16B, V9.16B
	0x036E8FA8 MOV V5.16B, V10.16B
	0x036E8FAC MOV V6.16B, V11.16B
	0x036E8FB0 MOV V7.16B, V12.16B
	0x036E8FB4 MOV X0, X31
	0x036E8FB8 STR X8, [X31 + 0x100]
	0x036E8FBC STR S8, [X31]
	0x036E8FC0 BL 0x3C2A4A0
	0x036E8FC4 MOV V4.16B, V0.16B
	0x036E8FC8 MOV V6.16B, V2.16B
	0x036E8FCC MOV V7.16B, V3.16B
	0x036E8FD0 LDR V0, [X31 + 0x4]
	0x036E8FD4 LDP V16, V2, [X31 + 0xD0]
	0x036E8FD8 LDR V3, [X31 + 0xF]
	0x036E8FDC LDR X8, [X31 + 0x100]
	0x036E8FE0 MOV V5.16B, V1.16B
	0x036E8FE4 MOV S1, V0.S[1]
	0x036E8FE8 STP V16, V2, [X31 + 0x1E0]
	0x036E8FEC STR V3, [X31 + 0x20]
	0x036E8FF0 ADD X0, X31, 0x190
	0x036E8FF4 ADD X1, X31, 0x1E0
	0x036E8FF8 MOV V2.16B, V13.16B
	0x036E8FFC MOV V3.16B, V4.16B
	0x036E9000 MOV V4.16B, V5.16B
	0x036E9004 MOV V5.16B, V6.16B
	0x036E9008 MOV V6.16B, V7.16B
	0x036E900C MOV W2, W31
	0x036E9010 MOV X3, X31
	0x036E9014 STR X8, [X31 + 0x210]
	0x036E9018 BL 0x3BF8EC0
	0x036E901C LDR X8, [X19 + 0x10]
	0x036E9020 LDR W9, [X31 + 0x198]
	0x036E9024 LDR X10, [X31 + 0x190]
	0x036E9028 ADD W26, W26, 0x1
	0x036E902C ADD X8, X8, X24
	0x036E9030 STR W9, [X8 + 0x8]
	0x036E9034 STR X10, [X8]
	0x036E9038 LDR W8, [X19 + 0x18]
	0x036E903C ADD X25, X25, 0x1
	0x036E9040 CMP X25, W8, SXTW
	0x036E9044 ADD X24, X24, 0xC
	0x036E9048 B.LT 0x36E8E8C
	0x036E904C LDR X8, [X20 + 0x30]
	0x036E9050 LDP V1, V0, [X20 + 0x10]
	0x036E9054 LDR V2, [X20]
	0x036E9058 MOVZ W9, 0xC
	0x036E905C STR X8, [X31 + 0xC0]
	0x036E9060 STP V1, V0, [X31 + 0xA0]
	0x036E9064 STR V2, [X31 + 0x9]
	0x036E9068 LDR X8, [X19 + 0x10]
	0x036E906C ADD X0, X31, 0x90
	0x036E9070 MADD X8, X23, X9, X8
	0x036E9074 LDR X1, [X8]
	0x036E9078 LDR W2, [X8 + 0x8]
	0x036E907C BL 0x36E3614
	0x036E9080 B 0x36E90E8
	0x036E9084 LDR W8, [X19 + 0x18]
	0x036E9088 CMP W8, 0x1
	0x036E908C B.LT 0x36E90E8
	0x036E9090 MOV X22, X31
	0x036E9094 MOV X23, X31
	0x036E9098 LDR X8, [X20 + 0x30]
	0x036E909C LDP V1, V0, [X20 + 0x10]
	0x036E90A0 LDR V2, [X20]
	0x036E90A4 ADD X0, X31, 0x50
	0x036E90A8 STR X8, [X31 + 0x80]
	0x036E90AC STP V1, V0, [X31 + 0x60]
	0x036E90B0 STR V2, [X31 + 0x5]
	0x036E90B4 LDR X8, [X19 + 0x10]
	0x036E90B8 ADD X8, X8, X22
	0x036E90BC LDR W9, [X8 + 0x8]
	0x036E90C0 LDR X1, [X8]
	0x036E90C4 AND X8, X21, 0x0
	0x036E90C8 ORR X21, X8, X9, 0x0
	0x036E90CC MOV X2, X21
	0x036E90D0 BL 0x36E3614
	0x036E90D4 LDRSW X8, [X19 + 0x18]
	0x036E90D8 ADD X23, X23, 0x1
	0x036E90DC ADD X22, X22, 0xC
	0x036E90E0 CMP X23, X8
	0x036E90E4 B.LT 0x36E9098
	0x036E90E8 ADD X31, X31, 0x220
	0x036E90EC LDP X20, X19, [X31 + 0x90]
	0x036E90F0 LDP X22, X21, [X31 + 0x80]
	0x036E90F4 LDP X24, X23, [X31 + 0x70]
	0x036E90F8 LDP X26, X25, [X31 + 0x60]
	0x036E90FC LDP X28, X27, [X31 + 0x50]
	0x036E9100 LDP X29, X30, [X31 + 0x40]
	0x036E9104 LDP D9, D8, [X31 + 0x30]
	0x036E9108 LDP D11, D10, [X31 + 0x20]
	0x036E910C LDP D13, D12, [X31 + 0x10]
	0x036E9110 LDP D15, D14, [X31], #0xA0
	0x036E9114 RET
	0x036E9118 SUB X31, X31, 0x140
	0x036E911C STR X29, [X31 + 0xE0]
	0x036E9120 STP X30, X27, [X31 + 0xF0]
	0x036E9124 STP X26, X25, [X31 + 0x100]
	0x036E9128 STP X24, X23, [X31 + 0x110]
	0x036E912C STP X22, X21, [X31 + 0x120]
	0x036E9130 STP X20, X19, [X31 + 0x130]
	0x036E9134 ADRP X23, 0xCF7000
	0x036E9138 ADRP X22, 0xA33000
	0x036E913C LDRB W8, [X23 + 0xB2C]
	0x036E9140 LDR X22, [X22 + 0xE40]
	0x036E9144 MOV W20, W1
	0x036E9148 MOV X19, X0
	0x036E914C ADD X21, X31, 0x80
	0x036E9150 TBNZ X8, 0x0, 0x36E9168
	0x036E9154 ADRP X0, 0xA33000
	0x036E9158 LDR X0, [X0 + 0xE40]
	0x036E915C BL 0x1C16CF4
	0x036E9160 MOVZ W8, 0x1
	0x036E9164 STRB W8, [X23 + 0xB2C]
	0x036E9168 STP X31, X31, [X31 + 0xC0]
	0x036E916C STR W31, [X31 + 0xD8]
	0x036E9170 STR X31, [X31 + 0xD0]
	0x036E9174 LDR W8, [X19 + 0x18]
	0x036E9178 LDR X9, [X19 + 0x20]
	0x036E917C MOVZ W10, 0x1C
	0x036E9180 LDR X0, [X22]
	0x036E9184 SUB W8, W8, 0x1
	0x036E9188 CMP W8, W20
	0x036E918C CSEL W8, W8, W20, LT
	0x036E9190 CMP W20, 0x0
	0x036E9194 CSEL W20, W31, W8, LT
	0x036E9198 SMADDL X8, X20, X10, X9
	0x036E919C LDUR V0, [X8 + 0xC]
	0x036E91A0 LDR V1, [X8]
	0x036E91A4 STUR V0, [X21 + 0x2C]
	0x036E91A8 STR V1, [X31 + 0xA]
	0x036E91AC LDR W8, [X0 + 0xE0]
	0x036E91B0 CBNZ W8, 0x36E91B8
	0x036E91B4 BL 0x1C16DFC
	0x036E91B8 ADD X8, X31, 0xC0
	0x036E91BC ADD X0, X31, 0xA0
	0x036E91C0 BL 0x36E92AC
	0x036E91C4 LDR W8, [X19 + 0x28]
	0x036E91C8 CMP W8, 0x1
	0x036E91CC B.LT 0x36E9288
	0x036E91D0 MOV X23, X31
	0x036E91D4 MOV X24, X31
	0x036E91D8 MOV W25, W31
	0x036E91DC MOV W26, W20
	0x036E91E0 MOVZ W27, 0x1C
	0x036E91E4 CMP X26, X24
	0x036E91E8 B.EQ 0x36E9278
	0x036E91EC LDR V0, [X31 + 0xC]
	0x036E91F0 LDUR V1, [X21 + 0x4C]
	0x036E91F4 LDR X0, [X22]
	0x036E91F8 STR V0, [X31 + 0x8]
	0x036E91FC STUR V1, [X21 + 0xC]
	0x036E9200 LDR X8, [X19 + 0x20]
	0x036E9204 ADD X8, X8, X23
	0x036E9208 LDUR V0, [X8 + 0xC]
	0x036E920C LDR V1, [X8]
	0x036E9210 STUR V0, [X31 + 0x6C]
	0x036E9214 STR V1, [X31 + 0x6]
	0x036E9218 LDR W8, [X0 + 0xE0]
	0x036E921C CBNZ W8, 0x36E9224
	0x036E9220 BL 0x1C16DFC
	0x036E9224 LDR V0, [X31 + 0x8]
	0x036E9228 LDUR V1, [X21 + 0xC]
	0x036E922C LDR V2, [X31 + 0x6]
	0x036E9230 LDUR V3, [X31 + 0x6C]
	0x036E9234 ADD X8, X31, 0x40
	0x036E9238 ADD X0, X31, 0x20
	0x036E923C ADD X1, X31, 0x0
	0x036E9240 STR V0, [X31 + 0x2]
	0x036E9244 STUR V1, [X31 + 0x2C]
	0x036E9248 STR V2, [X31]
	0x036E924C STUR V3, [X31 + 0xC]
	0x036E9250 BL 0x36E4E64
	0x036E9254 LDR X8, [X19 + 0x30]
	0x036E9258 LDUR V0, [X31 + 0x4C]
	0x036E925C LDR V1, [X31 + 0x4]
	0x036E9260 NOP
	0x036E9264 SMADDL X8, X25, X27, X8
	0x036E9268 STUR V0, [X8 + 0xC]
	0x036E926C STR V1, [X8]
	0x036E9270 LDR W8, [X19 + 0x28]
	0x036E9274 ADD W25, W25, 0x1
	0x036E9278 ADD X24, X24, 0x1
	0x036E927C CMP X24, W8, SXTW
	0x036E9280 ADD X23, X23, 0x1C
	0x036E9284 B.LT 0x36E91E4
	0x036E9288 STR W20, [X19 + 0x40]
	0x036E928C LDP X20, X19, [X31 + 0x130]
	0x036E9290 LDP X22, X21, [X31 + 0x120]
	0x036E9294 LDP X24, X23, [X31 + 0x110]
	0x036E9298 LDP X26, X25, [X31 + 0x100]
	0x036E929C LDP X30, X27, [X31 + 0xF0]
	0x036E92A0 LDR X29, [X31 + 0xE0]
	0x036E92A4 ADD X31, X31, 0x140
	0x036E92A8 RET
	0x036E92AC STP D11, D10, [X31 - 0x40]!
	0x036E92B0 STP D9, D8, [X31 + 0x10]
	0x036E92B4 STR X30, [X31 + 0x20]
	0x036E92B8 STP X20, X19, [X31 + 0x30]
	0x036E92BC LDP S0, S1, [X0 + 0xC]
	0x036E92C0 LDP S2, S3, [X0 + 0x14]
	0x036E92C4 MOV X19, X0
	0x036E92C8 MOV X0, X31
	0x036E92CC MOV X20, X8
	0x036E92D0 BL 0x3C2A260
	0x036E92D4 MOV V8.16B, V0.16B
	0x036E92D8 MOV V9.16B, V1.16B
	0x036E92DC MOV V10.16B, V2.16B
	0x036E92E0 LDP S0, S1, [X19]
	0x036E92E4 LDR V2, [X19 + 0x8]
	0x036E92E8 MOV X0, X31
	0x036E92EC MOV V11.16B, V3.16B
	0x036E92F0 FNEG S4, S0
	0x036E92F4 FNEG S5, S1
	0x036E92F8 FNEG S6, S2
	0x036E92FC MOV V0.16B, V8.16B
	0x036E9300 MOV V1.16B, V9.16B
	0x036E9304 MOV V2.16B, V10.16B
	0x036E9308 BL 0x3C2A9FC
	0x036E930C STP S0, S1, [X20]
	0x036E9310 STP S2, S8, [X20 + 0x8]
	0x036E9314 STP S9, S10, [X20 + 0x10]
	0x036E9318 STR S11, [X20 + 0x18]
	0x036E931C LDP X20, X19, [X31 + 0x30]
	0x036E9320 LDR X30, [X31 + 0x20]
	0x036E9324 LDP D9, D8, [X31 + 0x10]
	0x036E9328 LDP D11, D10, [X31], #0x40
	0x036E932C RET
	0x036E9330 LDUR X8, [X0 + 0xA4]
	0x036E9334 LDUR X1, [X0 + 0xAC]
	0x036E9338 MOV X0, X8
	0x036E933C RET
	0x036E9340 STUR X1, [X0 + 0xA4]
	0x036E9344 STUR X2, [X0 + 0xAC]
	0x036E9348 RET
	0x036E934C RET
	0x036E9350 STP D15, D14, [X31 - 0x80]!
	0x036E9354 STP D13, D12, [X31 + 0x10]
	0x036E9358 STP D11, D10, [X31 + 0x20]
	0x036E935C STP D9, D8, [X31 + 0x30]
	0x036E9360 STP X29, X30, [X31 + 0x40]
	0x036E9364 STP X24, X23, [X31 + 0x50]
	0x036E9368 STP X22, X21, [X31 + 0x60]
	0x036E936C STP X20, X19, [X31 + 0x70]
	0x036E9370 SUB X31, X31, 0x2A0
	0x036E9374 ADRP X21, 0xCF7000
	0x036E9378 LDRB W8, [X21 + 0xB2D]
	0x036E937C MOV X20, X1
	0x036E9380 MOV X19, X0
	0x036E9384 TBNZ X8, 0x0, 0x36E939C
	0x036E9388 ADRP X0, 0xA36000
	0x036E938C LDR X0, [X0 + 0x230]
	0x036E9390 BL 0x1C16CF4
	0x036E9394 MOVZ W8, 0x1
	0x036E9398 STRB W8, [X21 + 0xB2D]
	0x036E939C MOV X0, X19
	0x036E93A0 MOV X1, X31
	0x036E93A4 STR X31, [X31 + 0x238]
	0x036E93A8 STR X31, [X31 + 0x230]
	0x036E93AC STR X31, [X31 + 0x240]
	0x036E93B0 BL 0x36F9EF4
	0x036E93B4 STR X0, [X31 + 0x250]
	0x036E93B8 STR X1, [X31 + 0x258]
	0x036E93BC LDR X8, [X20 + 0x30]
	0x036E93C0 LDP V1, V0, [X20 + 0x10]
	0x036E93C4 LDR V2, [X20]
	0x036E93C8 ADD X0, X31, 0x250
	0x036E93CC ADD X1, X31, 0x260
	0x036E93D0 MOV X2, X31
	0x036E93D4 STR X8, [X31 + 0x290]
	0x036E93D8 STP V1, V0, [X31 + 0x270]
	0x036E93DC STR V2, [X31 + 0x26]
	0x036E93E0 BL 0x3BF9750
	0x036E93E4 FCMP S0, 0x0
	0x036E93E8 B.LE 0x36E9474
	0x036E93EC STR S0, [X31 + 0xC]
	0x036E93F0 LDR X8, [X20 + 0x30]
	0x036E93F4 LDP V1, V0, [X20 + 0x10]
	0x036E93F8 LDR V2, [X20]
	0x036E93FC ADD X0, X31, 0x1F0
	0x036E9400 STR X8, [X31 + 0x220]
	0x036E9404 STP V1, V0, [X31 + 0x200]
	0x036E9408 STR V2, [X31 + 0x1F]
	0x036E940C LDP X1, X2, [X19 + 0x68]
	0x036E9410 LDP X3, X4, [X19 + 0x88]
	0x036E9414 MOV X5, X31
	0x036E9418 BL 0x3BFAAD8
	0x036E941C LDR X9, [X19 + 0x90]
	0x036E9420 CMP W9, 0x1
	0x036E9424 B.LT 0x36E9454
	0x036E9428 LDR X8, [X19 + 0x88]
	0x036E942C AND X9, X9, 0x0
	0x036E9430 FMOV S0, W31
	0x036E9434 LDR V1, [X8], #0x4
	0x036E9438 SUBS X9, X9, 0x1
	0x036E943C FADD S0, S0, S1
	0x036E9440 B.NE 0x36E9434
	0x036E9444 ADRP X8, 0xFFFFFFFFFD401000
	0x036E9448 LDR V9, [X8 + 0x17C]
	0x036E944C FCMP S0, S9
	0x036E9450 B.PL 0x36E94C4
	0x036E9454 LDR X8, [X20 + 0x30]
	0x036E9458 LDP V1, V0, [X20 + 0x10]
	0x036E945C LDR V2, [X20]
	0x036E9460 ADD X0, X31, 0x1B0
	0x036E9464 STR X8, [X31 + 0x1E0]
	0x036E9468 STP V1, V0, [X31 + 0x1C0]
	0x036E946C STR V2, [X31 + 0x1B]
	0x036E9470 B 0x36E9490
	0x036E9474 LDR X8, [X20 + 0x30]
	0x036E9478 LDP V1, V0, [X20 + 0x10]
	0x036E947C LDR V2, [X20]
	0x036E9480 ADD X0, X31, 0x30
	0x036E9484 STR X8, [X31 + 0x60]
	0x036E9488 STP V1, V0, [X31 + 0x40]
	0x036E948C STR V2, [X31 + 0x3]
	0x036E9490 LDR X1, [X19]
	0x036E9494 LDR W2, [X19 + 0x8]
	0x036E9498 BL 0x36E3614
	0x036E949C ADD X31, X31, 0x2A0
	0x036E94A0 LDP X20, X19, [X31 + 0x70]
	0x036E94A4 LDP X22, X21, [X31 + 0x60]
	0x036E94A8 LDP X24, X23, [X31 + 0x50]
	0x036E94AC LDP X29, X30, [X31 + 0x40]
	0x036E94B0 LDP D9, D8, [X31 + 0x30]
	0x036E94B4 LDP D11, D10, [X31 + 0x20]
	0x036E94B8 LDP D13, D12, [X31 + 0x10]
	0x036E94BC LDP D15, D14, [X31], #0x80
	0x036E94C0 RET

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 1024
	022 Move X21, 0xCF9000
	023 Move W8, [X21+2857]
	024 Move X20, X1
	025 Move X19, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0xA35000
	031 Move X0, [X0+3648]
	032 Call 0x1C17CF4
	033 Move X0, 0xA38000
	034 Move X0, [X0+560]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+2857], W8
	038 Move X0, X19
	039 Move X1, X31
	040 Move [X31+936], W31
	041 Move [X31+928], X31
	042 Move [X31+920], X31
	043 Move [X31+912], X31
	044 Move [X31+888], X31
	045 Move [X31+880], X31
	046 Move [X31+904], W31
	047 Move [X31+896], X31
	048 Move [X31+856], X31
	049 Move [X31+848], X31
	050 Move [X31+864], X31
	051 Move [X31+840], W31
	052 Move [X31+832], X31
	053 Move [X31+824], X31
	054 Move [X31+816], X31
	055 Move [X31+808], W31
	056 Move [X31+800], X31
	057 Move [X31+792], X31
	058 Move [X31+784], X31
	059 Call 0x36FAEC8
	060 Move [X31+944], X0
	061 Move [X31+952], X1
	062 Move X8, [X20+48]
	063 Move V1, [X20+16]
	064 Move V0, [X20+32]
	065 Move V2, [X20]
	066 Add X0, X31, 944
	067 Add X1, X31, 960
	068 Move X2, X31
	069 Move [X31+1008], X8
	070 Move [X31+976], V1
	071 Move [X31+984], V0
	072 Move [X31+60], V2
	073 Call PropertyStreamHandle.GetFloat, X0, X1
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 Move V8, V0
	076 Move X8, [X20+48]
	077 Move V1, [X20+16]
	078 Move V0, [X20+32]
	079 Move V2, [X20]
	080 Add X0, X31, 720
	081 Move [X31+768], X8
	082 Move [X31+736], V1
	083 Move [X31+744], V0
	084 Move [X31+45], V2
	085 Move X1, [X19+56]
	086 Move X2, [X19+64]
	087 Move X3, [X19+88]
	088 Move X4, [X19+96]
	089 Move X5, X31
	090 Call AnimationStreamHandleUtility.ReadFloats, X0, X1, X2
	091 Move X9, [X19+96]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X8, [X19+88]
	094 Add X23, X31, 880
	095 Add X25, X31, 528
	096 Add X22, X31, 272
	097 And X9, X9, 0
	098 Move S0, W31
	099 Move V1, [X8+4]
	100 Subtract X9, X9, 1
	101 Add S0, S0, S1
	102 Move X8, -46125056
	103 Move V10, [X8+380]
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Move X8, [X20+48]
	106 Move V1, [X20+16]
	107 Move V0, [X20+32]
	108 Move V2, [X20]
	109 Add X0, X31, 656
	110 Move [X31+704], X8
	111 Move [X31+672], V1
	112 Move [X31+680], V0
	113 Move [X31+41], V2
	114 Move X8, [X20+48]
	115 Move V1, [X20+16]
	116 Move V0, [X20+32]
	117 Move V2, [X20]
	118 Add X0, X31, 112
	119 Move [X31+160], X8
	120 Move [X31+128], V1
	121 Move [X31+136], V0
	122 Move [X31+7], V2
	123 Move X1, [X19]
	124 Move W2, [X19+8]
	125 Call AnimationRuntimeUtils.PassThrough, X0, X1
	126 Add X31, X31, 1024
	127 Move X20, [X31+144]
	128 Move X19, [X31+152]
	129 Move X22, [X31+128]
	130 Move X21, [X31+136]
	131 Move X24, [X31+112]
	132 Move X23, [X31+120]
	133 Move X26, [X31+96]
	134 Move X25, [X31+104]
	135 Move X28, [X31+80]
	136 Move X27, [X31+88]
	137 Move X29, [X31+64]
	138 Move X30, [X31+72]
	139 Move D9, [X31+48]
	140 Move D8, [X31+56]
	141 Move D11, [X31+32]
	142 Move D10, [X31+40]
	143 Move D13, [X31+16]
	144 Move D12, [X31+24]
	145 Move D15, [X31+160]
	146 Move D14, [X31+168]
	147 Return 
	148 Move X21, 0xCF1000
	149 Move W8, [X21+1923]
	150 Move S1, 1
	151 NotImplemented "Instruction FDIV not yet implemented."
	152 NotImplemented "Instruction FCMP not yet implemented."
	153 NotImplemented "Instruction FCSEL not yet implemented."
	154 Move [X31+12], S8
	155 Compare W8, 0
	156 JumpIfNotEqual {162}
	157 Move X0, 0xA0C000
	158 Move X0, [X0+1440]
	159 Call 0x1C17CF4
	160 Move W8, 1
	161 Move [X21+1923], W8
	162 Move X8, 0xA0C000
	163 Move X8, [X8+1440]
	164 Move X21, 0xA38000
	165 Move X8, [X8]
	166 Move X21, [X21+560]
	167 Move X8, [X8+184]
	168 Move X0, [X21]
	169 Move V0, [X8]
	170 Move W9, [X0+224]
	171 Move V9, [X8+8]
	172 Move [X31+5], V0
	173 Compare W9, 0
	174 JumpIfNotEqual {177}
	175 Call 0x1C17DFC
	176 Move X0, [X21]
	177 Move X24, 0xA35000
	178 Move X8, [X0+184]
	179 Move X24, [X24+3648]
	180 Move S8, [X8]
	181 Move S15, [X8+4]
	182 Move X0, [X24]
	183 Move S12, [X8+8]
	184 Move S11, [X8+12]
	185 Move W9, [X0+224]
	186 Compare W9, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move W8, [X19+48]
	190 Move [X31+76], S8
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X26, X31
	193 Move X27, X31
	194 Move X28, X31
	195 Move S13, W31
	196 Move [X31+60], S10
	197 Move [X31+32], S14
	198 Move X9, [X19+40]
	199 Add X9, X9, X27
	200 Move X10, [X9+16]
	201 Move V0, [X9]
	202 Move [X31+864], X10
	203 Move [X31+53], V0
	204 Move X9, [X19+88]
	205 Move V0, [X9]
	206 Multiply S0, S14, S0
	207 NotImplemented "Instruction FCMP not yet implemented."
	208 Move [X31+6], V0
	209 Move X8, [X20+48]
	210 Move V1, [X20+16]
	211 Move V0, [X20+32]
	212 Move V2, [X20]
	213 Add X0, X31, 848
	214 Add X1, X31, 592
	215 Add X2, X31, 832
	216 Add X3, X31, 816
	217 Move V14, V15
	218 Move [X31+64], S12
	219 Move [X31+72], S11
	220 Move [X31+72], S13
	221 Move V8, V9
	222 Move [X31+640], X8
	223 Move [X31+608], V1
	224 Move [X31+616], V0
	225 Move [X31+37], V2
	226 Call ReadOnlyTransformHandle.GetGlobalTR, X0, X1, X2, X3
	227 Move X0, [X24]
	228 Move V15, [X31+832]
	229 Move V9, [X31+840]
	230 Move V2, [X31+51]
	231 Move W8, [X0+224]
	232 Compare W8, 0
	233 JumpIfNotEqual {237}
	234 Move [X31+1], V2
	235 Call 0x1C17DFC
	236 Move V2, [X31+1]
	237 Move X8, [X19+72]
	238 Add X0, X31, 560
	239 Add X1, X31, 528
	240 Add X8, X8, X26
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 Move V1, [X8]
	243 Add X8, X31, 960
	244 Move [X31+560], D15
	245 Move [X31+568], S9
	246 Move [X25+12], V0
	247 Move [X31+33], V1
	248 Move [X25+44], V2
	249 Call AffineTransform.op_Multiply, X0, X1
	250 Move X0, [X21]
	251 Move V9, [X31+960]
	252 Move V13, [X31+968]
	253 Move V12, [X31+972]
	254 Move V11, [X31+976]
	255 Move V15, [X31+980]
	256 Move W8, [X0+224]
	257 Move V10, [X31+984]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Move V2, [X31+80]
	262 Move V3, [X31+96]
	263 NotImplemented "Instruction INVALID not yet implemented."
	264 Add V2, V2, V0
	265 Multiply S1, S3, S13
	266 Multiply S4, S3, S12
	267 Multiply S5, S3, S11
	268 Multiply S6, S3, S15
	269 Move [X31+5], V2
	270 Multiply S7, S3, S10
	271 Move V0, [X31+76]
	272 Move S2, [X31+64]
	273 Move S3, [X31+68]
	274 Move V9, V8
	275 Add S9, S8, S1
	276 Move V1, V14
	277 Call QuaternionExt.Add, X0, X1
	278 Move X8, [X19+40]
	279 Move [X31+76], S0
	280 Move V0, [X31+53]
	281 Move X9, [X31+864]
	282 Add X8, X8, X27
	283 Move V13, [X31+72]
	284 Move [X8], V0
	285 Move [X8+16], X9
	286 Move V0, [X31+6]
	287 Move W8, [X19+48]
	288 Move V10, [X31+60]
	289 Move V14, [X31+32]
	290 Move V15, V1
	291 Move V12, V2
	292 Move V11, V3
	293 Add S13, S13, S0
	294 Add X28, X28, 1
	295 Add X27, X27, 24
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Add X26, X26, 28
	298 Move S13, W31
	299 Move X8, [X20+48]
	300 Move V1, [X20+16]
	301 Move V0, [X20+32]
	302 Move V2, [X20]
	303 Add X1, X31, 960
	304 Add X2, X31, 928
	305 Add X3, X31, 912
	306 Move X0, X19
	307 Move X4, X31
	308 Move [X31+1008], X8
	309 Move [X31+976], V1
	310 Move [X31+984], V0
	311 Move [X31+60], V2
	312 Call TransformStreamHandle.GetGlobalTR, X0, X1, X2, X3
	313 Move V2, [X31+928]
	314 Move V0, [X31+932]
	315 Move X0, [X24]
	316 Move V8, [X31+916]
	317 Move V14, [X31+920]
	318 Move [X31+64], S2
	319 Move [X31+72], S0
	320 Move V0, [X31+936]
	321 Move W8, [X0+224]
	322 Move V10, [X31+924]
	323 Move [X31+60], S0
	324 Move V0, [X31+912]
	325 Move [X31+72], S0
	326 Compare W8, 0
	327 JumpIfNotEqual {329}
	328 Call 0x1C17DFC
	329 Move X0, [X21]
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move V0, [X31+76]
	335 Move V1, V15
	336 Move V2, V12
	337 Move V3, V11
	338 Call QuaternionExt.NormalizeSafe, X0
	339 Move V12, V0
	340 Move S0, 1
	341 Move V11, V1
	342 Move V15, V2
	343 NotImplemented "Instruction FCMP not yet implemented."
	344 Move V7, V13
	345 Move V13, V3
	346 Move V4, [X31+928]
	347 Move V5, [X31+936]
	348 Subtract S6, S0, S7
	349 Move V0, [X31+912]
	350 NotImplemented "Instruction INVALID not yet implemented."
	351 Multiply S5, S6, S5
	352 Move V6, [X31+5]
	353 Move V1, [X31+916]
	354 Move V2, [X31+920]
	355 Move V3, [X31+924]
	356 Add V6, V6, V4
	357 Move [X31+5], V6
	358 Add S9, S9, S5
	359 Move [X31], S7
	360 Move V4, V12
	361 Move V5, V11
	362 Move V6, V15
	363 Move V7, V13
	364 Move X0, X31
	365 Call Quaternion.Lerp, X0, X1, V0
	366 Move V12, V0
	367 Move V11, V1
	368 Move V15, V2
	369 Move V13, V3
	370 Move X0, [X24]
	371 Move W8, [X0+224]
	372 Compare W8, 0
	373 JumpIfNotEqual {375}
	374 Call 0x1C17DFC
	375 Move X21, 0xCF2000
	376 Move W8, [X21+1576]
	377 Compare W8, 0
	378 JumpIfNotEqual {384}
	379 Move X0, 0xA34000
	380 Move X0, [X0+3648]
	381 Call 0x1C17CF4
	382 Move W8, 1
	383 Move [X21+1576], W8
	384 Move X0, [X24]
	385 Move [X31+96], S8
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {391}
	389 Call 0x1C17DFC
	390 Move X0, [X24]
	391 Move X8, [X0+184]
	392 Add X21, X19, 12
	393 Add X1, X31, 464
	394 Move X0, X21
	395 NotImplemented "Instruction LDUR not yet implemented."
	396 Move V1, [X8]
	397 Move [X23+12], V0
	398 Move [X31+55], V1
	399 Move V2, [X20+16]
	400 Move V0, [X20+32]
	401 Move X8, [X20+48]
	402 Move V1, [X20]
	403 Move [X31+480], V2
	404 Move [X31+488], V0
	405 Move [X31+512], X8
	406 Move [X31+29], V1
	407 Call ReadOnlyTransformHandle.IsValid, X0, X1
	408 Move TEMP, X0
	409 And TEMP, TEMP, 1
	410 Compare TEMP, 1
	411 JumpIfNotEqual {484}
	412 Move X8, [X20+48]
	413 Move V1, [X20+16]
	414 Move V0, [X20+32]
	415 Move V2, [X20]
	416 Add X1, X31, 400
	417 Add X2, X31, 800
	418 Add X3, X31, 784
	419 Move X0, X21
	420 Move [X31+76], S10
	421 Move V10, V9
	422 Move [X31+448], X8
	423 Move [X31+416], V1
	424 Move [X31+424], V0
	425 Move [X31+25], V2
	426 Call ReadOnlyTransformHandle.GetGlobalTR, X0, X1, X2, X3
	427 Move X0, [X24]
	428 Move V9, [X31+800]
	429 Move V8, [X31+808]
	430 Move V0, [X31+49]
	431 Move W8, [X0+224]
	432 Compare W8, 0
	433 JumpIfNotEqual {437}
	434 Move [X31+2], V0
	435 Call 0x1C17DFC
	436 Move V0, [X31+2]
	437 Move [X31+880], D9
	438 Move [X31+888], S8
	439 Move [X23+12], V0
	440 Move V0, [X31+5]
	441 Add X8, X31, 960
	442 Add X0, X31, 880
	443 Add X1, X31, 368
	444 Move [X31+368], D0
	445 Move [X31+376], S10
	446 Move [X31+380], S12
	447 Move [X31+384], S11
	448 Move [X31+388], S15
	449 Move [X31+392], S13
	450 Call AffineTransform.InverseMul, X0, X1
	451 Move V0, [X31+960]
	452 Move V9, [X31+968]
	453 Move V12, [X31+972]
	454 Move V11, [X31+976]
	455 Move [X31+5], V0
	456 Move V0, [X31+64]
	457 Move V15, [X31+980]
	458 Move V13, [X31+984]
	459 Add X8, X31, 960
	460 Move [X31+336], S0
	461 Move V0, [X31+68]
	462 Add X0, X31, 880
	463 Add X1, X31, 336
	464 Move [X31+356], S14
	465 Move [X31+340], S0
	466 Move V0, [X31+60]
	467 Move [X31+344], S0
	468 Move V0, [X31+72]
	469 Move [X31+348], S0
	470 Move V0, [X31+96]
	471 Move [X31+352], S0
	472 Move V0, [X31+76]
	473 Move [X31+360], S0
	474 Call AffineTransform.InverseMul, X0, X1
	475 Move V0, [X31+972]
	476 Move V7, [X31+960]
	477 Move V1, [X31+964]
	478 Move V2, [X31+968]
	479 Move [X31+72], S0
	480 Move V0, [X31+976]
	481 Move V14, [X31+980]
	482 Move V10, [X31+984]
	483 Move [X31+96], S0
	484 Move S7, [X31+64]
	485 Move S1, [X31+68]
	486 Move V2, [X31+60]
	487 Move S0, [X19+104]
	488 Move S6, [X19+108]
	489 Move V16, [X19+112]
	490 Move S8, 3
	491 Multiply S3, S0, S0
	492 Multiply S4, S6, S6
	493 Multiply S5, S16, S16
	494 Add S3, S3, S4
	495 Add S3, S5, S3
	496 NotImplemented "Instruction FCMP not yet implemented."
	497 Move V3, [X31+5]
	498 Move [X31], S0
	499 Move V0, V7
	500 Move V5, V9
	501 Move S4, V3.S[1]
	502 Move [X31+4], S6
	503 Move [X31+12], S16
	504 Call AnimationRuntimeUtils.Lerp, X0, X1, X2
	505 Move V9, V2
	506 Move V0.S[1], V1.S[0]
	507 Move [X31+5], V0
	508 Move S0, [X19+116]
	509 Move S1, [X19+120]
	510 Move V2, [X19+124]
	511 Multiply S0, S0, S0
	512 Multiply S1, S1, S1
	513 Add S0, S0, S1
	514 Multiply S1, S2, S2
	515 Add S0, S1, S0
	516 NotImplemented "Instruction FCMP not yet implemented."
	517 Move V0, [X31+72]
	518 Move V1, [X31+96]
	519 Move V2, V14
	520 Move V3, V10
	521 Move X0, X31
	522 Call Quaternion.Internal_ToEulerRad, X0
	523 Move X8, -46129152
	524 Move V8, [X8+1096]
	525 Move X0, X31
	526 Multiply S0, S0, S8
	527 Multiply S1, S1, S8
	528 Multiply S2, S2, S8
	529 Call Quaternion.Internal_MakePositive, X0
	530 Move V3, V15
	531 Move V14, V0
	532 Move V15, V1
	533 Move V10, V2
	534 Move V0, V12
	535 Move V1, V11
	536 Move V2, V3
	537 Move V3, V13
	538 Move X0, X31
	539 Call Quaternion.Internal_ToEulerRad, X0
	540 Multiply S0, S0, S8
	541 Multiply S1, S1, S8
	542 Multiply S2, S2, S8
	543 Move X0, X31
	544 Call Quaternion.Internal_MakePositive, X0
	545 Move V3, V0
	546 Move V0, [X19+124]
	547 NotImplemented "Instruction LDUR not yet implemented."
	548 Move V4, V1
	549 Move V5, V2
	550 Move [X31+8], S0
	551 Move V0, V14
	552 Move V1, V15
	553 Move V2, V10
	554 Move [X31], X8
	555 Call AnimationRuntimeUtils.Lerp, X0, X1, X2
	556 Move X8, -46129152
	557 Move V3, [X8+260]
	558 Move X0, X31
	559 Multiply S0, S0, S3
	560 Multiply S1, S1, S3
	561 Multiply S2, S2, S3
	562 Call Quaternion.Internal_FromEulerRad, X0
	563 Move V12, V0
	564 Move V11, V1
	565 Move V15, V2
	566 Move V13, V3
	567 Move V0, [X31+55]
	568 NotImplemented "Instruction LDUR not yet implemented."
	569 Move X0, [X24]
	570 Move V8, [X31+12]
	571 Move [X31+19], V0
	572 Move [X22+44], V1
	573 Move W8, [X0+224]
	574 Compare W8, 0
	575 JumpIfNotEqual {577}
	576 Call 0x1C17DFC
	577 Move V0, [X31+19]
	578 NotImplemented "Instruction LDUR not yet implemented."
	579 Move V2, [X31+5]
	580 Add X8, X31, 960
	581 Add X0, X31, 272
	582 Add X1, X31, 240
	583 Move [X31+240], D2
	584 Move [X31+248], S9
	585 Move [X31+256], S12
	586 Move [X31+256], S11
	587 Move [X31+260], S15
	588 Move [X31+17], V0
	589 Move [X22+12], V1
	590 Move [X31+264], S13
	591 Call AffineTransform.op_Multiply, X0, X1
	592 Move V2, [X31+960]
	593 Move V3, [X31+968]
	594 Move V18, [X31+928]
	595 Move V19, [X31+936]
	596 Move V16, [X20]
	597 Move V17, [X20+16]
	598 Move V0, [X20+2]
	599 Move S1, 1
	600 NotImplemented "Instruction FCMP not yet implemented."
	601 Move S20, W31
	602 NotImplemented "Instruction FMIN not yet implemented."
	603 NotImplemented "Instruction FCSEL not yet implemented."
	604 Subtract V2, V2, V18
	605 Subtract S3, S3, S19
	606 Move V4, [X31+972]
	607 Move V5, [X31+976]
	608 Move V6, [X31+980]
	609 Move V7, [X31+984]
	610 Move X8, [X20+48]
	611 Move [X31+192], V17
	612 Move [X31+200], V0
	613 Move V0, [X31+912]
	614 Move V1, [X31+916]
	615 Move [X31+11], V16
	616 NotImplemented "Instruction INVALID not yet implemented."
	617 Multiply S17, S20, S3
	618 Move V2, [X31+920]
	619 Move V3, [X31+924]
	620 Add V16, V18, V16
	621 Move X0, X31
	622 Move [X31+6], V16
	623 Add S9, S19, S17
	624 Move [X31+224], X8
	625 Move [X31], S8
	626 Call Quaternion.Lerp, X0, X1, V0
	627 Move V4, V0
	628 Move V6, V2
	629 Move V7, V3
	630 Move V0, [X31+6]
	631 Move V16, [X31+176]
	632 Move V2, [X31+192]
	633 Move V3, [X31+13]
	634 Move X8, [X31+224]
	635 Move V5, V1
	636 Move S1, V0.S[1]
	637 Move [X31+960], V16
	638 Move [X31+968], V2
	639 Move [X31+62], V3
	640 Add X1, X31, 960
	641 Move X0, X19
	642 Move V2, V9
	643 Move V3, V4
	644 Move V4, V5
	645 Move V5, V6
	646 Move V6, V7
	647 Move W2, W31
	648 Move X3, X31
	649 Move [X31+1008], X8
	650 Call TransformStreamHandle.SetGlobalTR, X0, X1, X2, X3, X4

