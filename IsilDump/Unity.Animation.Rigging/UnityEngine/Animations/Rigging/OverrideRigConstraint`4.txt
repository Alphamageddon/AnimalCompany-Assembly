Type: UnityEngine.Animations.Rigging.OverrideRigConstraint`4

Method: System.Void .ctor(TConstraint baseConstraint)

Disassembly:
	0x0249F964 STR V1, [X19 + 0x3]
	0x0249F968 STUR V5, [X19 + 0x98]
	0x0249F96C STUR V4, [X19 + 0x88]
	0x0249F970 STUR V3, [X19 + 0x78]
	0x0249F974 STUR V16, [X19 + 0xC8]
	0x0249F978 STUR V7, [X19 + 0xB8]
	0x0249F97C STUR V6, [X19 + 0xA8]
	0x0249F980 STR V17, [X9]
	0x0249F984 ADD X31, X31, 0x1D0
	0x0249F988 LDP X20, X19, [X31 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: UnityEngine.Animations.IAnimationJob CreateJob(UnityEngine.Animator animator)

Disassembly:
	0x0249F98C LDP X22, X21, [X31 + 0x80]
	0x0249F990 LDP X24, X23, [X31 + 0x70]
	0x0249F994 LDP X26, X25, [X31 + 0x60]
	0x0249F998 LDP X28, X27, [X31 + 0x50]
	0x0249F99C LDP X29, X30, [X31 + 0x40]
	0x0249F9A0 LDP D9, D8, [X31 + 0x30]
	0x0249F9A4 LDP D11, D10, [X31 + 0x20]
	0x0249F9A8 LDP D13, D12, [X31 + 0x10]
	0x0249F9AC LDP D15, D14, [X31], #0xA0
	0x0249F9B0 RET
	0x0249F9B4 BL 0x1C16F20
	0x0249F9B8 ADD X0, X1, 0xF8
	0x0249F9BC MOV X1, X31
	0x0249F9C0 B 0x36E2518
	0x0249F9C4 LDR W8, [X2 + 0x30]
	0x0249F9C8 MOV X0, X1
	0x0249F9CC MOV X2, X31
	0x0249F9D0 MOV W1, W8
	0x0249F9D4 B 0x36EA474
	0x0249F9D8 LDR X8, [X1 + 0x20]
	0x0249F9DC LDR X8, [X8 + 0xC0]
	0x0249F9E0 LDR X1, [X8 + 0x48]
	0x0249F9E4 B 0x2B85720
	0x0249F9E8 STP D15, D14, [X31 - 0xA0]!
	0x0249F9EC STP D13, D12, [X31 + 0x10]
	0x0249F9F0 STP D11, D10, [X31 + 0x20]
	0x0249F9F4 STP D9, D8, [X31 + 0x30]
	0x0249F9F8 STP X29, X30, [X31 + 0x40]
	0x0249F9FC STP X28, X27, [X31 + 0x50]
	0x0249FA00 STP X26, X25, [X31 + 0x60]
	0x0249FA04 STP X24, X23, [X31 + 0x70]
	0x0249FA08 STP X22, X21, [X31 + 0x80]
	0x0249FA0C STP X20, X19, [X31 + 0x90]
	0x0249FA10 ADD X29, X31, 0x40
	0x0249FA14 SUB X31, X31, 0x250
	0x0249FA18 ADD X19, X31, 0x0
	0x0249FA1C MRS X9, 0xC000
	0x0249FA20 STR X9, [X19 + 0x70]
	0x0249FA24 LDR X9, [X9 + 0x28]
	0x0249FA28 ADRP X21, 0x1F3A000
	0x0249FA2C MOV X24, X4
	0x0249FA30 MOV X26, X3
	0x0249FA34 STUR X9, [X29 - 0x58]
	0x0249FA38 LDRB W9, [X21 + 0xBAB]
	0x0249FA3C MOV X23, X2
	0x0249FA40 MOV X22, X1
	0x0249FA44 MOV X20, X8
	0x0249FA48 TBNZ X9, 0x0, 0x249FA78
	0x0249FA4C ADRP X0, 0x1C7D000
	0x0249FA50 LDR X0, [X0 + 0xE40]
	0x0249FA54 BL 0x1C16CF4
	0x0249FA58 ADRP X0, 0x1C7D000
	0x0249FA5C LDR X0, [X0 + 0xE38]
	0x0249FA60 BL 0x1C16CF4
	0x0249FA64 ADRP X0, 0x1C54000
	0x0249FA68 LDR X0, [X0 + 0x598]
	0x0249FA6C BL 0x1C16CF4
	0x0249FA70 MOVZ W8, 0x1
	0x0249FA74 STRB W8, [X21 + 0xBAB]
	0x0249FA78 LDR X8, [X24 + 0x20]!
	0x0249FA7C LDR X8, [X8 + 0xC0]
	0x0249FA80 LDR X8, [X8 + 0x8]
	0x0249FA84 ADD X9, X8, 0x135
	0x0249FA88 LDRH W9, [X9]
	0x0249FA8C TBNZ X9, 0x0, 0x249FAB0
	0x0249FA90 MOV X0, X8
	0x0249FA94 BL 0x1C5C684
	0x0249FA98 LDR X8, [X24]
	0x0249FA9C LDR X8, [X8 + 0xC0]
	0x0249FAA0 LDR X8, [X8 + 0x8]
	0x0249FAA4 ADD X9, X8, 0x135
	0x0249FAA8 LDRH W9, [X9]
	0x0249FAAC B 0x249FAB4
	0x0249FAB0 MOV X0, X8
	0x0249FAB4 LDR W10, [X0 + 0xFC]
	0x0249FAB8 ADD X11, X31, 0x0
	0x0249FABC ADD W10, W10, 0x10
	0x0249FAC0 ADD X10, X10, 0xF
	0x0249FAC4 AND X10, X10, 0x1FFFFFFFF
	0x0249FAC8 SUB X25, X11, X10
	0x0249FACC ADD X31, X25, 0x0
	0x0249FAD0 TBNZ X9, 0x0, 0x249FAF4
	0x0249FAD4 MOV X0, X8
	0x0249FAD8 BL 0x1C5C684
	0x0249FADC LDR X8, [X24]
	0x0249FAE0 LDR X8, [X8 + 0xC0]
	0x0249FAE4 LDR X8, [X8 + 0x8]
	0x0249FAE8 ADD X9, X8, 0x135
	0x0249FAEC LDRH W9, [X9]
	0x0249FAF0 B 0x249FAF8
	0x0249FAF4 MOV X0, X8
	0x0249FAF8 LDR W10, [X0 + 0xFC]
	0x0249FAFC ADD X11, X31, 0x0
	0x0249FB00 ADD W10, W10, 0x10
	0x0249FB04 ADD X10, X10, 0xF
	0x0249FB08 AND X10, X10, 0x1FFFFFFFF
	0x0249FB0C SUB X28, X11, X10
	0x0249FB10 ADD X31, X28, 0x0
	0x0249FB14 STR X26, [X19 + 0x88]
	0x0249FB18 TBNZ X9, 0x0, 0x249FB3C
	0x0249FB1C MOV X0, X8
	0x0249FB20 BL 0x1C5C684
	0x0249FB24 LDR X8, [X24]
	0x0249FB28 LDR X8, [X8 + 0xC0]
	0x0249FB2C LDR X8, [X8 + 0x8]
	0x0249FB30 ADD X9, X8, 0x135
	0x0249FB34 LDRH W9, [X9]
	0x0249FB38 B 0x249FB40
	0x0249FB3C MOV X0, X8
	0x0249FB40 LDR W10, [X0 + 0xFC]
	0x0249FB44 ADD X11, X31, 0x0
	0x0249FB48 ADD W10, W10, 0x10
	0x0249FB4C ADD X10, X10, 0xF
	0x0249FB50 AND X10, X10, 0x1FFFFFFFF
	0x0249FB54 SUB X26, X11, X10
	0x0249FB58 ADD X31, X26, 0x0
	0x0249FB5C TBNZ X9, 0x0, 0x249FB80
	0x0249FB60 MOV X0, X8
	0x0249FB64 BL 0x1C5C684
	0x0249FB68 LDR X8, [X24]
	0x0249FB6C LDR X8, [X8 + 0xC0]
	0x0249FB70 LDR X8, [X8 + 0x8]
	0x0249FB74 ADD X9, X8, 0x135
	0x0249FB78 LDRH W9, [X9]
	0x0249FB7C B 0x249FB84
	0x0249FB80 MOV X0, X8
	0x0249FB84 LDR W10, [X0 + 0xFC]
	0x0249FB88 ADD X11, X31, 0x0
	0x0249FB8C ADD W10, W10, 0x10
	0x0249FB90 ADD X10, X10, 0xF
	0x0249FB94 AND X10, X10, 0x1FFFFFFFF
	0x0249FB98 SUB X21, X11, X10
	0x0249FB9C ADD X31, X21, 0x0
	0x0249FBA0 TBNZ X9, 0x0, 0x249FBC4
	0x0249FBA4 MOV X0, X8
	0x0249FBA8 BL 0x1C5C684
	0x0249FBAC LDR X8, [X24]
	0x0249FBB0 LDR X8, [X8 + 0xC0]
	0x0249FBB4 LDR X8, [X8 + 0x8]
	0x0249FBB8 ADD X9, X8, 0x135
	0x0249FBBC LDRH W9, [X9]
	0x0249FBC0 B 0x249FBC8
	0x0249FBC4 MOV X0, X8
	0x0249FBC8 LDR W10, [X0 + 0xFC]
	0x0249FBCC ADD X11, X31, 0x0
	0x0249FBD0 ADD W10, W10, 0x10
	0x0249FBD4 ADD X10, X10, 0xF
	0x0249FBD8 AND X10, X10, 0x1FFFFFFFF
	0x0249FBDC SUB X10, X11, X10
	0x0249FBE0 ADD X31, X10, 0x0
	0x0249FBE4 STR X10, [X19 + 0x30]
	0x0249FBE8 TBNZ X9, 0x0, 0x249FC0C
	0x0249FBEC MOV X0, X8
	0x0249FBF0 BL 0x1C5C684
	0x0249FBF4 LDR X8, [X24]
	0x0249FBF8 LDR X8, [X8 + 0xC0]
	0x0249FBFC LDR X8, [X8 + 0x8]
	0x0249FC00 ADD X9, X8, 0x135
	0x0249FC04 LDRH W9, [X9]
	0x0249FC08 B 0x249FC10
	0x0249FC0C MOV X0, X8
	0x0249FC10 LDR W10, [X0 + 0xFC]
	0x0249FC14 ADD X11, X31, 0x0
	0x0249FC18 ADD W10, W10, 0x10
	0x0249FC1C ADD X10, X10, 0xF
	0x0249FC20 AND X10, X10, 0x1FFFFFFFF
	0x0249FC24 SUB X10, X11, X10
	0x0249FC28 ADD X31, X10, 0x0
	0x0249FC2C STR X10, [X19 + 0x28]
	0x0249FC30 TBNZ X9, 0x0, 0x249FC54
	0x0249FC34 MOV X0, X8
	0x0249FC38 BL 0x1C5C684
	0x0249FC3C LDR X8, [X24]
	0x0249FC40 LDR X8, [X8 + 0xC0]
	0x0249FC44 LDR X8, [X8 + 0x8]
	0x0249FC48 ADD X9, X8, 0x135
	0x0249FC4C LDRH W9, [X9]
	0x0249FC50 B 0x249FC58
	0x0249FC54 MOV X0, X8
	0x0249FC58 LDR W10, [X0 + 0xFC]
	0x0249FC5C ADD X11, X31, 0x0
	0x0249FC60 ADD W10, W10, 0x10
	0x0249FC64 ADD X10, X10, 0xF
	0x0249FC68 AND X10, X10, 0x1FFFFFFFF
	0x0249FC6C SUB X10, X11, X10
	0x0249FC70 ADD X31, X10, 0x0
	0x0249FC74 STR X10, [X19 + 0x20]
	0x0249FC78 TBNZ X9, 0x0, 0x249FC9C
	0x0249FC7C MOV X0, X8
	0x0249FC80 BL 0x1C5C684
	0x0249FC84 LDR X8, [X24]
	0x0249FC88 LDR X8, [X8 + 0xC0]
	0x0249FC8C LDR X8, [X8 + 0x8]
	0x0249FC90 ADD X9, X8, 0x135
	0x0249FC94 LDRH W9, [X9]
	0x0249FC98 B 0x249FCA0
	0x0249FC9C MOV X0, X8
	0x0249FCA0 LDR W10, [X0 + 0xFC]
	0x0249FCA4 ADD X11, X31, 0x0
	0x0249FCA8 ADD W10, W10, 0x10
	0x0249FCAC ADD X10, X10, 0xF
	0x0249FCB0 AND X10, X10, 0x1FFFFFFFF
	0x0249FCB4 SUB X10, X11, X10
	0x0249FCB8 ADD X31, X10, 0x0
	0x0249FCBC STR X10, [X19 + 0x18]
	0x0249FCC0 TBNZ X9, 0x0, 0x249FCE4
	0x0249FCC4 MOV X0, X8
	0x0249FCC8 BL 0x1C5C684
	0x0249FCCC LDR X8, [X24]
	0x0249FCD0 LDR X8, [X8 + 0xC0]
	0x0249FCD4 LDR X8, [X8 + 0x8]
	0x0249FCD8 ADD X9, X8, 0x135
	0x0249FCDC LDRH W9, [X9]
	0x0249FCE0 B 0x249FCE8

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 48
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move [X29-40], X8
	017 Move X8, [X8+40]
	018 Move X20, 0x1F3B000
	019 Move X19, X2
	020 Move X21, X1
	021 Move [X29-8], X8
	022 Move W8, [X20+2979]
	023 Move X25, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {39}
	028 Move X0, 0x1C7E000
	029 Move X0, [X0+3616]
	030 Call 0x1C17CF4
	031 Move X0, 0x1C7E000
	032 Move X0, [X0+3624]
	033 Call 0x1C17CF4
	034 Move X0, 0x1C7E000
	035 Move X0, [X0+3632]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+2979], W8
	039 Move X26, [X19+32]
	040 Move X8, [X26+192]
	041 Move X0, [X8+32]
	042 Move W8, [X0+309]
	043 Move W20, [X0+252]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Call 0x1C5D684
	049 Move W8, [X0+252]
	050 Move X26, [X19+32]
	051 Move W8, W20
	052 Add W8, W8, 16
	053 Add X8, X8, 15
	054 Add X9, X31, 0
	055 And X8, X8, 0x1FFFFFFFF
	056 Subtract X23, X9, X8
	057 Add X31, X23, 0
	058 Add X9, X20, 15
	059 Add X8, X31, 0
	060 And X9, X9, 0x1FFFFFFFF
	061 Subtract X22, X8, X9
	062 Add X31, X22, 0
	063 Add X8, X31, 0
	064 Subtract X24, X8, X9
	065 Add X31, X24, 0
	066 Move X0, X24
	067 Move W1, W31
	068 Move X2, X20
	069 Call 0x3EB2B10
	070 Move X8, [X26+192]
	071 Move X0, [X8+24]
	072 Move W8, [X0+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Call 0x1C5D684
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X8, [X19+32]
	083 Move X8, [X8+192]
	084 Move X0, [X8+24]
	085 Move W8, [X0+309]
	086 Move TEMP, X8
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfEqual {91}
	090 Call 0x1C5D684
	091 Move X27, [X25+16]
	092 Compare X27, 0
	093 JumpIfEqual {242}
	094 Move X10, 0x1C7E000
	095 Move X9, [X0+184]
	096 Move X8, [X27]
	097 Move X10, [X10+3632]
	098 Move X26, [X9]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Move X1, [X10]
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move W2, 4
	110 Move X0, X27
	111 Call 0x1C5D788
	112 Move W9, [X10]
	113 Add W9, W9, 4
	114 Add X8, X8, W9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X27
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X26, 0
	121 JumpIfEqual {242}
	122 Move X10, 0x1C7E000
	123 Move X8, [X26]
	124 Move X10, [X10+3624]
	125 Move X28, [X25+16]
	126 Move X27, X0
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Move X1, [X10]
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move X0, X26
	138 Move W2, W31
	139 Call 0x1C5D788
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Add X8, X8, X9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X4, [X0+8]
	145 Move X0, X26
	146 Move X1, X21
	147 Move X2, X27
	148 Move X3, X28
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X8, [X19+32]
	151 Move X26, X0
	152 Move X8, [X8+192]
	153 Move X1, [X8+32]
	154 Move W8, [X1+309]
	155 Move TEMP, X8
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfEqual {162}
	159 Move X0, X1
	160 Call 0x1C5D684
	161 Move X1, X0
	162 Compare X26, 0
	163 JumpIfEqual {242}
	164 Move X8, [X26]
	165 Move X9, [X1+64]
	166 Move X8, [X8+64]
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X27, 0x1C7E000
	169 Move X27, [X27+3616]
	170 Move X0, X26
	171 Call 0x1C17E08
	172 Move X1, X0
	173 Move X0, X24
	174 Move X2, X20
	175 Call 0x3EB2AC0
	176 Move X0, [X27]
	177 Move X25, [X25+16]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {183}
	181 Call 0x1C17DFC
	182 Move X0, [X27]
	183 Move X8, [X0+184]
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 Move X0, X25
	186 Move X2, X31
	187 Move X1, [X8]
	188 Call ConstraintsUtils.ConstructCustomPropertyName, X0, X1
	189 Move X1, X0
	190 Move X0, X21
	191 Move X2, X31
	192 Call FloatProperty.BindCustom, X0, X1
	193 Move X8, [X19+32]
	194 Move X21, X0
	195 Move X25, X1
	196 Move X8, [X8+192]
	197 Move X0, [X8+32]
	198 Move W9, [X0+309]
	199 Move TEMP, X9
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {206}
	203 Call 0x1C5D684
	204 Move X8, [X19+32]
	205 Move X8, [X8+192]
	206 Move X1, [X8+40]
	207 Subtract X8, X29, 24
	208 Subtract X4, X29, 32
	209 Subtract X5, X29, 24
	210 Move X2, X23
	211 Move X3, X24
	212 Move [X29-24], X21
	213 Move [X29-16], X25
	214 Move [X29-32], X8
	215 Call 0x1C18728
	216 Move X0, X22
	217 Move X1, X24
	218 Move X2, X20
	219 Call 0x3EB2AC0
	220 Move X8, [X19+32]
	221 Move X1, X22
	222 Move X8, [X8+192]
	223 Move X0, [X8+32]
	224 Call 0x1C17E04
	225 Move X8, [X26+40]
	226 NotImplemented "Instruction LDUR not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Add X31, X29, 0
	229 Move X20, [X31+80]
	230 Move X19, [X31+88]
	231 Move X22, [X31+64]
	232 Move X21, [X31+72]
	233 Move X24, [X31+48]
	234 Move X23, [X31+56]
	235 Move X26, [X31+32]
	236 Move X25, [X31+40]
	237 Move X28, [X31+16]
	238 Move X27, [X31+24]
	239 Move X29, [X31+96]
	240 Move X30, [X31+104]
	241 Return X0
	242 Call 0x1C17F20
	243 Move X0, X26
	244 Call 0x1C181E0
	245 Call 0x3EB2B20

Method: System.Void DestroyJob(UnityEngine.Animations.IAnimationJob job)

Disassembly:
	0x0249FCE4 MOV X0, X8
	0x0249FCE8 LDR W10, [X0 + 0xFC]
	0x0249FCEC ADD X11, X31, 0x0
	0x0249FCF0 ADD W10, W10, 0x10
	0x0249FCF4 ADD X10, X10, 0xF
	0x0249FCF8 AND X10, X10, 0x1FFFFFFFF
	0x0249FCFC SUB X10, X11, X10
	0x0249FD00 ADD X31, X10, 0x0
	0x0249FD04 STR X10, [X19 + 0x8]
	0x0249FD08 TBNZ X9, 0x0, 0x249FD2C
	0x0249FD0C MOV X0, X8
	0x0249FD10 BL 0x1C5C684
	0x0249FD14 LDR X8, [X24]
	0x0249FD18 LDR X8, [X8 + 0xC0]
	0x0249FD1C LDR X8, [X8 + 0x8]
	0x0249FD20 ADD X9, X8, 0x135
	0x0249FD24 LDRH W9, [X9]
	0x0249FD28 B 0x249FD30
	0x0249FD2C MOV X0, X8
	0x0249FD30 LDR W10, [X0 + 0xFC]
	0x0249FD34 ADD X11, X31, 0x0
	0x0249FD38 ADD W10, W10, 0x10
	0x0249FD3C ADD X10, X10, 0xF
	0x0249FD40 AND X10, X10, 0x1FFFFFFFF
	0x0249FD44 SUB X10, X11, X10
	0x0249FD48 ADD X31, X10, 0x0
	0x0249FD4C STR X10, [X19]
	0x0249FD50 TBNZ X9, 0x0, 0x249FD74
	0x0249FD54 MOV X0, X8
	0x0249FD58 BL 0x1C5C684
	0x0249FD5C LDR X8, [X24]
	0x0249FD60 LDR X8, [X8 + 0xC0]
	0x0249FD64 LDR X8, [X8 + 0x8]
	0x0249FD68 ADD X9, X8, 0x135
	0x0249FD6C LDRH W9, [X9]
	0x0249FD70 B 0x249FD78
	0x0249FD74 MOV X0, X8
	0x0249FD78 LDR W10, [X0 + 0xFC]
	0x0249FD7C ADD X11, X31, 0x0
	0x0249FD80 ADD W10, W10, 0x10
	0x0249FD84 ADD X10, X10, 0xF
	0x0249FD88 AND X10, X10, 0x1FFFFFFFF
	0x0249FD8C SUB X10, X11, X10
	0x0249FD90 STR X10, [X19 + 0x78]
	0x0249FD94 ADD X31, X10, 0x0
	0x0249FD98 TBNZ X9, 0x0, 0x249FDBC
	0x0249FD9C MOV X0, X8
	0x0249FDA0 BL 0x1C5C684
	0x0249FDA4 LDR X8, [X24]
	0x0249FDA8 LDR X8, [X8 + 0xC0]
	0x0249FDAC LDR X8, [X8 + 0x8]
	0x0249FDB0 ADD X9, X8, 0x135
	0x0249FDB4 LDRH W9, [X9]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X20, X2
	008 Move X19, X1
	009 Move X8, [X8+192]
	010 Move X0, [X8+24]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move W8, [X0+224]
	018 Compare W8, 0
	019 JumpIfNotEqual {21}
	020 Call 0x1C17DFC
	021 Move X8, [X20+32]
	022 Move X8, [X8+192]
	023 Move X0, [X8+24]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+184]
	031 Move X21, [X8]
	032 Compare X21, 0
	033 JumpIfEqual {68}
	034 Move X8, [X20+32]
	035 Move X8, [X8+192]
	036 Move X1, [X8+32]
	037 Move W8, [X1+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {45}
	042 Move X0, X1
	043 Call 0x1C5D684
	044 Move X1, X0
	045 Compare X19, 0
	046 JumpIfEqual {68}
	047 Move X8, [X19]
	048 Move X9, [X1+64]
	049 Move X0, X19
	050 Move X8, [X8+64]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Call 0x1C17E08
	053 Move X8, [X21]
	054 Move [X31+8], X0
	055 Move X4, X0
	056 Add X3, X31, 8
	057 Move X1, [X8+464]
	058 Move X2, X21
	059 Move X0, [X1+8]
	060 Move X8, [X1+16]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+16]
	065 Move X21, [X31+24]
	066 Add X31, X31, 48
	067 Return 
	068 Call 0x1C17F20
	069 Call 0x1C181E0

Method: System.Void UpdateJob(UnityEngine.Animations.IAnimationJob job)

Disassembly:
	0x0249FDB8 B 0x249FDC0
	0x0249FDBC MOV X0, X8
	0x0249FDC0 LDR W10, [X0 + 0xFC]
	0x0249FDC4 ADD X11, X31, 0x0
	0x0249FDC8 ADD W10, W10, 0x10
	0x0249FDCC ADD X10, X10, 0xF
	0x0249FDD0 AND X10, X10, 0x1FFFFFFFF
	0x0249FDD4 SUB X10, X11, X10
	0x0249FDD8 STR X10, [X19 + 0x38]
	0x0249FDDC ADD X31, X10, 0x0
	0x0249FDE0 TBNZ X9, 0x0, 0x249FE04
	0x0249FDE4 MOV X0, X8
	0x0249FDE8 BL 0x1C5C684
	0x0249FDEC LDR X8, [X24]
	0x0249FDF0 LDR X8, [X8 + 0xC0]
	0x0249FDF4 LDR X8, [X8 + 0x8]
	0x0249FDF8 ADD X9, X8, 0x135
	0x0249FDFC LDRH W9, [X9]
	0x0249FE00 B 0x249FE08
	0x0249FE04 MOV X0, X8
	0x0249FE08 LDR W10, [X0 + 0xFC]
	0x0249FE0C ADD X11, X31, 0x0
	0x0249FE10 ADD W10, W10, 0x10
	0x0249FE14 ADD X10, X10, 0xF
	0x0249FE18 AND X10, X10, 0x1FFFFFFFF
	0x0249FE1C SUB X10, X11, X10
	0x0249FE20 ADD X31, X10, 0x0
	0x0249FE24 STR X10, [X19 + 0x10]
	0x0249FE28 TBNZ X9, 0x0, 0x249FE4C
	0x0249FE2C MOV X0, X8
	0x0249FE30 BL 0x1C5C684
	0x0249FE34 LDR X8, [X24]
	0x0249FE38 LDR X8, [X8 + 0xC0]
	0x0249FE3C LDR X8, [X8 + 0x8]
	0x0249FE40 ADD X9, X8, 0x135
	0x0249FE44 LDRH W9, [X9]
	0x0249FE48 B 0x249FE50
	0x0249FE4C MOV X0, X8
	0x0249FE50 LDR W10, [X0 + 0xFC]
	0x0249FE54 ADD X11, X31, 0x0
	0x0249FE58 ADD W10, W10, 0x10
	0x0249FE5C ADD X10, X10, 0xF
	0x0249FE60 AND X10, X10, 0x1FFFFFFFF
	0x0249FE64 SUB X10, X11, X10
	0x0249FE68 STR X10, [X19 + 0x50]
	0x0249FE6C ADD X31, X10, 0x0
	0x0249FE70 TBNZ X9, 0x0, 0x249FE94
	0x0249FE74 MOV X0, X8
	0x0249FE78 BL 0x1C5C684
	0x0249FE7C LDR X8, [X24]
	0x0249FE80 LDR X8, [X8 + 0xC0]
	0x0249FE84 LDR X8, [X8 + 0x8]
	0x0249FE88 ADD X9, X8, 0x135
	0x0249FE8C LDRH W9, [X9]
	0x0249FE90 B 0x249FE98
	0x0249FE94 MOV X0, X8
	0x0249FE98 LDR W10, [X0 + 0xFC]
	0x0249FE9C ADD X11, X31, 0x0
	0x0249FEA0 ADD W10, W10, 0x10
	0x0249FEA4 ADD X10, X10, 0xF
	0x0249FEA8 AND X10, X10, 0x1FFFFFFFF
	0x0249FEAC SUB X10, X11, X10
	0x0249FEB0 STR X10, [X19 + 0x58]
	0x0249FEB4 ADD X31, X10, 0x0
	0x0249FEB8 TBNZ X9, 0x0, 0x249FEDC
	0x0249FEBC MOV X0, X8
	0x0249FEC0 BL 0x1C5C684
	0x0249FEC4 LDR X8, [X24]
	0x0249FEC8 LDR X8, [X8 + 0xC0]
	0x0249FECC LDR X8, [X8 + 0x8]
	0x0249FED0 ADD X9, X8, 0x135
	0x0249FED4 LDRH W9, [X9]
	0x0249FED8 B 0x249FEE0
	0x0249FEDC MOV X0, X8
	0x0249FEE0 LDR W10, [X0 + 0xFC]
	0x0249FEE4 ADRP X27, 0x1C7D000
	0x0249FEE8 LDR X27, [X27 + 0xE38]
	0x0249FEEC ADD X11, X31, 0x0
	0x0249FEF0 ADD W10, W10, 0x10
	0x0249FEF4 ADD X10, X10, 0xF
	0x0249FEF8 AND X10, X10, 0x1FFFFFFFF
	0x0249FEFC SUB X10, X11, X10
	0x0249FF00 STR X10, [X19 + 0x60]
	0x0249FF04 ADD X31, X10, 0x0
	0x0249FF08 TBNZ X9, 0x0, 0x249FF18
	0x0249FF0C MOV X0, X8
	0x0249FF10 BL 0x1C5C684
	0x0249FF14 MOV X8, X0
	0x0249FF18 LDR W8, [X8 + 0xFC]
	0x0249FF1C ADD X9, X31, 0x0
	0x0249FF20 ADD W8, W8, 0x10
	0x0249FF24 ADD X8, X8, 0xF
	0x0249FF28 AND X8, X8, 0x1FFFFFFFF
	0x0249FF2C SUB X8, X9, X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1F3B000
	007 Move W8, [X22+2980]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x1C7E000
	016 Move X0, [X0+3624]
	017 Call 0x1C17CF4
	018 Move X0, 0x1C7E000
	019 Move X0, [X0+3632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2980], W8
	023 Move X8, [X21+32]
	024 Move X8, [X8+192]
	025 Move X0, [X8+24]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X8, [X21+32]
	037 Move X8, [X8+192]
	038 Move X0, [X8+24]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X21, [X20+16]
	046 Compare X21, 0
	047 JumpIfEqual {108}
	048 Move X10, 0x1C7E000
	049 Move X9, [X0+184]
	050 Move X8, [X21]
	051 Move X10, [X10+3632]
	052 Move X20, [X9]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 4
	064 Move X0, X21
	065 Call 0x1C5D788
	066 Move W9, [X10]
	067 Add W9, W9, 4
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X21
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Compare X20, 0
	075 JumpIfEqual {108}
	076 Move X10, 0x1C7E000
	077 Move X8, [X20]
	078 Move X10, [X10+3624]
	079 Move X21, X0
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Move X1, [X10]
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move W2, 2
	091 Move X0, X20
	092 Call 0x1C5D788
	093 Move W9, [X10]
	094 Add W9, W9, 2
	095 Add X8, X8, W9
	096 Add X0, X8, 312
	097 Move X4, [X0]
	098 Move X3, [X0+8]
	099 Move X0, X20
	100 Move X1, X19
	101 Move X2, X21
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 CallNoReturn X4
	108 Call 0x1C17F20

Method: System.Boolean IsValid()

Disassembly:
	0x0249FF30 STR X8, [X19 + 0x68]
	0x0249FF34 ADD X31, X8, 0x0
	0x0249FF38 LDR X0, [X27]
	0x0249FF3C MOVI V0.2D, 0x0
	0x0249FF40 STP X31, X31, [X19 + 0x170]
	0x0249FF44 STR W31, [X19 + 0x188]
	0x0249FF48 STR X31, [X19 + 0x180]
	0x0249FF4C STP X31, X31, [X19 + 0x150]
	0x0249FF50 STR W31, [X19 + 0x168]
	0x0249FF54 STR X31, [X19 + 0x160]
	0x0249FF58 STP X31, X31, [X19 + 0x130]
	0x0249FF5C STR W31, [X19 + 0x148]
	0x0249FF60 STR X31, [X19 + 0x140]
	0x0249FF64 STP X31, X31, [X19 + 0x110]
	0x0249FF68 STR W31, [X19 + 0x128]
	0x0249FF6C STR X31, [X19 + 0x120]
	0x0249FF70 STP X31, X31, [X29 - 0x70]
	0x0249FF74 STUR X31, [X29 - 0x60]
	0x0249FF78 STP X31, X31, [X29 - 0x90]
	0x0249FF7C STUR W31, [X29 - 0x78]
	0x0249FF80 STUR X31, [X29 - 0x80]
	0x0249FF84 STP V0, V0, [X29 - 0xB0]
	0x0249FF88 STP V0, V0, [X29 - 0xD0]
	0x0249FF8C STP V0, V0, [X29 - 0xF0]
	0x0249FF90 STP X31, X31, [X29 - 0x100]
	0x0249FF94 BL 0x1C16F10
	0x0249FF98 MOV X1, X31
	0x0249FF9C MOV X27, X0
	0x0249FFA0 BL 0x36E2580
	0x0249FFA4 LDR X8, [X24]
	0x0249FFA8 LDR X8, [X8 + 0xC0]
	0x0249FFAC LDR X0, [X8 + 0x8]
	0x0249FFB0 LDRB W9, [X0 + 0x135]
	0x0249FFB4 TBNZ X9, 0x0, 0x249FFC4
	0x0249FFB8 BL 0x1C5C684
	0x0249FFBC LDR X8, [X24]
	0x0249FFC0 LDR X8, [X8 + 0xC0]
	0x0249FFC4 LDR X1, [X8 + 0x10]
	0x0249FFC8 ADD X5, X19, 0xA0
	0x0249FFCC MOV X2, X25

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1F3B000
	005 Move W8, [X20+2981]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1C7E000
	012 Move X0, [X0+3632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2981], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x1C7E000
	020 Move X8, [X19]
	021 Move X10, [X10+3632]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: UnityEngine.Animations.Rigging.IAnimationJobBinder UnityEngine.Animations.Rigging.IRigConstraint.get_binder()

Disassembly:
	0x0249FFD0 MOV X3, X23
	0x0249FFD4 MOV X4, X31
	0x0249FFD8 BL 0x1C17728
	0x0249FFDC LDR X1, [X19 + 0xA0]
	0x0249FFE0 MOV X0, X22
	0x0249FFE4 MOV X2, X31
	0x0249FFE8 BL 0x36EADF0
	0x0249FFEC LDR X8, [X24]
	0x0249FFF0 STP X1, X0, [X19 + 0x40]
	0x0249FFF4 LDR X8, [X8 + 0xC0]
	0x0249FFF8 LDR X0, [X8 + 0x8]
	0x0249FFFC LDRB W9, [X0 + 0x135]
	0x024A0000 TBNZ X9, 0x0, 0x24A0010
	0x024A0004 BL 0x1C5C684
	0x024A0008 LDR X8, [X24]
	0x024A000C LDR X8, [X8 + 0xC0]
	0x024A0010 LDR X1, [X8 + 0x18]
	0x024A0014 ADD X5, X19, 0xA0
	0x024A0018 MOV X2, X28
	0x024A001C MOV X3, X23
	0x024A0020 MOV X4, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X1
	005 Move X8, [X8+192]
	006 Move X0, [X8+24]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move W8, [X0+224]
	014 Compare W8, 0
	015 JumpIfNotEqual {17}
	016 Call 0x1C17DFC
	017 Move X8, [X19+32]
	018 Move X8, [X8+192]
	019 Move X0, [X8+24]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X0+184]
	027 Move X0, [X8]
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return X0

Method: UnityEngine.Animations.Rigging.IAnimationJobData UnityEngine.Animations.Rigging.IRigConstraint.get_data()

Disassembly:
	0x024A0024 BL 0x1C17728
	0x024A0028 ADRP X8, 0x1C53000
	0x024A002C LDR X8, [X8 + 0x598]
	0x024A0030 LDR X25, [X19 + 0xA0]
	0x024A0034 LDR X0, [X8]
	0x024A0038 LDR W8, [X0 + 0xE0]
	0x024A003C CBNZ W8, 0x24A0044
	0x024A0040 BL 0x1C16DFC
	0x024A0044 MOV X0, X25
	0x024A0048 MOV X1, X31
	0x024A004C MOV X2, X31
	0x024A0050 ADD X28, X19, 0x130
	0x024A0054 BL 0x3C354F8
	0x024A0058 FMOV S0, W31
	0x024A005C STR S0, [X19 + 0x84]
	0x024A0060 FMOV S0, W31
	0x024A0064 STR S0, [X19 + 0x9C]
	0x024A0068 FMOV S0, W31
	0x024A006C FMOV S8, W31
	0x024A0070 FMOV S9, W31
	0x024A0074 FMOV S10, W31
	0x024A0078 FMOV S11, W31
	0x024A007C FMOV S14, W31
	0x024A0080 FMOV S12, W31
	0x024A0084 FMOV S13, W31
	0x024A0088 STR S0, [X19 + 0x98]
	0x024A008C FMOV S0, W31
	0x024A0090 FMOV S15, W31
	0x024A0094 STR S0, [X19 + 0x94]
	0x024A0098 TBZ X0, 0x0, 0x24A0544
	0x024A009C LDR X8, [X24]
	0x024A00A0 LDR X8, [X8 + 0xC0]
	0x024A00A4 LDR X0, [X8 + 0x8]
	0x024A00A8 LDRB W9, [X0 + 0x135]
	0x024A00AC TBNZ X9, 0x0, 0x24A00BC
	0x024A00B0 BL 0x1C5C684
	0x024A00B4 LDR X8, [X24]
	0x024A00B8 LDR X8, [X8 + 0xC0]
	0x024A00BC LDR X1, [X8 + 0x18]
	0x024A00C0 ADD X5, X19, 0xA0
	0x024A00C4 MOV X2, X26

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1F3A000
	005 Move W8, [X20+2982]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1C7D000
	012 Move X0, [X0+3632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2982], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x1C7D000
	020 Move X8, [X19]
	021 Move X10, [X10+3632]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 4
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 4
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: UnityEngine.Component UnityEngine.Animations.Rigging.IRigConstraint.get_component()

Disassembly:
	0x024A00C8 MOV X3, X23
	0x024A00CC MOV X4, X31
	0x024A00D0 BL 0x1C17728
	0x024A00D4 LDR X1, [X19 + 0xA0]
	0x024A00D8 ADD X8, X19, 0xA0
	0x024A00DC MOV X0, X22
	0x024A00E0 MOV X2, X31
	0x024A00E4 BL 0x36EB150
	0x024A00E8 LDR V0, [X19 + 0xA]
	0x024A00EC LDR X8, [X19 + 0xB0]
	0x024A00F0 STUR V0, [X29 - 0x70]
	0x024A00F4 STUR X8, [X29 - 0x60]
	0x024A00F8 LDR X8, [X24]
	0x024A00FC LDR X8, [X8 + 0xC0]
	0x024A0100 LDR X0, [X8 + 0x8]
	0x024A0104 LDRB W9, [X0 + 0x135]
	0x024A0108 TBNZ X9, 0x0, 0x24A0118
	0x024A010C BL 0x1C5C684
	0x024A0110 LDR X8, [X24]
	0x024A0114 LDR X8, [X8 + 0xC0]
	0x024A0118 LDR X1, [X8 + 0x18]
	0x024A011C ADD X5, X19, 0xA0
	0x024A0120 MOV X2, X21
	0x024A0124 MOV X3, X23
	0x024A0128 MOV X4, X31
	0x024A012C BL 0x1C17728
	0x024A0130 LDR X0, [X19 + 0xA0]
	0x024A0134 CBZ X0, 0x24A08D0
	0x024A0138 MOV X1, X31
	0x024A013C BL 0x3C3EB78
	0x024A0140 LDR X8, [X24]
	0x024A0144 MOV V8.16B, V0.16B
	0x024A0148 MOV V9.16B, V1.16B
	0x024A014C MOV V10.16B, V2.16B
	0x024A0150 LDR X8, [X8 + 0xC0]
	0x024A0154 LDR X0, [X8 + 0x8]
	0x024A0158 LDRB W9, [X0 + 0x135]
	0x024A015C TBNZ X9, 0x0, 0x24A016C
	0x024A0160 BL 0x1C5C684
	0x024A0164 LDR X8, [X24]
	0x024A0168 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1F3A000
	005 Move W8, [X20+2983]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1C7D000
	012 Move X0, [X0+3632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2983], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x1C7D000
	020 Move X8, [X19]
	021 Move X10, [X10+3632]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 6
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 6
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Single get_weight()

Disassembly:
	0x024A016C LDR X2, [X19 + 0x30]
	0x024A0170 LDR X1, [X8 + 0x18]
	0x024A0174 ADD X5, X19, 0xA0
	0x024A0178 MOV X3, X23
	0x024A017C MOV X4, X31
	0x024A0180 BL 0x1C17728
	0x024A0184 LDR X0, [X19 + 0xA0]
	0x024A0188 CBZ X0, 0x24A08D0
	0x024A018C MOV X1, X31
	0x024A0190 BL 0x3C3F830
	0x024A0194 ADRP X25, 0x1C7C000
	0x024A0198 LDR X25, [X25 + 0xE40]
	0x024A019C MOV V11.16B, V0.16B
	0x024A01A0 MOV V12.16B, V1.16B
	0x024A01A4 MOV V13.16B, V2.16B
	0x024A01A8 LDR X0, [X25]
	0x024A01AC MOV V14.16B, V3.16B
	0x024A01B0 LDR W8, [X0 + 0xE0]
	0x024A01B4 CBNZ W8, 0x24A01BC
	0x024A01B8 BL 0x1C16DFC
	0x024A01BC ADD X0, X19, 0x170
	0x024A01C0 MOV V0.16B, V8.16B
	0x024A01C4 MOV V1.16B, V9.16B
	0x024A01C8 MOV V2.16B, V10.16B
	0x024A01CC MOV V3.16B, V11.16B
	0x024A01D0 MOV V4.16B, V12.16B
	0x024A01D4 MOV V5.16B, V13.16B
	0x024A01D8 MOV V6.16B, V14.16B
	0x024A01DC MOV X1, X31
	0x024A01E0 BL 0x36E4E50
	0x024A01E4 ADD X8, X19, 0xA0
	0x024A01E8 ADD X0, X19, 0x170
	0x024A01EC MOV X1, X31
	0x024A01F0 BL 0x36E92AC
	0x024A01F4 LDR V0, [X19 + 0xA]
	0x024A01F8 LDUR V1, [X19 + 0xAC]
	0x024A01FC STUR V0, [X29 - 0x90]
	0x024A0200 STUR V1, [X28 + 0xDC]
	0x024A0204 LDR X8, [X24]
	0x024A0208 LDR X8, [X8 + 0xC0]
	0x024A020C LDR X0, [X8 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1F3A000
	005 Move W8, [X20+2984]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1C7D000
	012 Move X0, [X0+3632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2984], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x1C7D000
	020 Move X8, [X19]
	021 Move X10, [X10+3632]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 7
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 7
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Void set_weight(System.Single value)

Disassembly:
	0x024A0210 LDRB W9, [X0 + 0x135]
	0x024A0214 TBNZ X9, 0x0, 0x24A0224
	0x024A0218 BL 0x1C5C684
	0x024A021C LDR X8, [X24]
	0x024A0220 LDR X8, [X8 + 0xC0]
	0x024A0224 LDR X2, [X19 + 0x28]
	0x024A0228 LDR X1, [X8 + 0x18]
	0x024A022C ADD X5, X19, 0xA0
	0x024A0230 MOV X3, X23
	0x024A0234 MOV X4, X31
	0x024A0238 BL 0x1C17728
	0x024A023C LDR X0, [X19 + 0xA0]
	0x024A0240 CBZ X0, 0x24A08D0
	0x024A0244 MOV X1, X31
	0x024A0248 BL 0x3C3F58C
	0x024A024C LDR X8, [X24]
	0x024A0250 MOV V8.16B, V0.16B
	0x024A0254 MOV V9.16B, V1.16B
	0x024A0258 MOV V10.16B, V2.16B
	0x024A025C LDR X8, [X8 + 0xC0]
	0x024A0260 LDR X0, [X8 + 0x8]
	0x024A0264 LDRB W9, [X0 + 0x135]
	0x024A0268 TBNZ X9, 0x0, 0x24A0278
	0x024A026C BL 0x1C5C684
	0x024A0270 LDR X8, [X24]
	0x024A0274 LDR X8, [X8 + 0xC0]
	0x024A0278 LDR X2, [X19 + 0x20]
	0x024A027C LDR X1, [X8 + 0x18]
	0x024A0280 ADD X5, X19, 0xA0
	0x024A0284 MOV X3, X23
	0x024A0288 MOV X4, X31
	0x024A028C BL 0x1C17728
	0x024A0290 LDR X0, [X19 + 0xA0]
	0x024A0294 CBZ X0, 0x24A08D0
	0x024A0298 MOV X1, X31
	0x024A029C BL 0x3C3DEB4
	0x024A02A0 MOV V4.16B, V0.16B
	0x024A02A4 MOV V5.16B, V1.16B
	0x024A02A8 MOV V6.16B, V2.16B
	0x024A02AC MOV V7.16B, V3.16B
	0x024A02B0 ADD X0, X19, 0x150
	0x024A02B4 MOV V0.16B, V8.16B
	0x024A02B8 MOV V1.16B, V9.16B
	0x024A02BC MOV V2.16B, V10.16B
	0x024A02C0 MOV V3.16B, V4.16B

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1F3A000
	006 Move W8, [X20+2985]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1C7D000
	014 Move X0, [X0+3632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2985], W8
	018 Move X19, [X19+16]
	019 Compare X19, 0
	020 JumpIfEqual {50}
	021 Move X10, 0x1C7D000
	022 Move X8, [X19]
	023 Move X10, [X10+3632]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 8
	035 Move X0, X19
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 8
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X2, [X0]
	042 Move X1, [X0+8]
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+8]
	047 Move V0, V8
	048 Move V8, [X31+32]
	049 CallNoReturn X2
	050 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x024A02C4 MOV V4.16B, V5.16B
	0x024A02C8 MOV V5.16B, V6.16B
	0x024A02CC MOV V6.16B, V7.16B
	0x024A02D0 MOV X1, X31
	0x024A02D4 BL 0x36E4E50
	0x024A02D8 LDR X8, [X24]
	0x024A02DC LDR X8, [X8 + 0xC0]
	0x024A02E0 LDR X0, [X8 + 0x8]
	0x024A02E4 LDRB W9, [X0 + 0x135]
	0x024A02E8 TBNZ X9, 0x0, 0x24A02F8
	0x024A02EC BL 0x1C5C684
	0x024A02F0 LDR X8, [X24]
	0x024A02F4 LDR X8, [X8 + 0xC0]
	0x024A02F8 LDR X2, [X19 + 0x18]
	0x024A02FC LDR X1, [X8 + 0x10]
	0x024A0300 ADD X5, X19, 0xA0
	0x024A0304 MOV X3, X23
	0x024A0308 MOV X4, X31
	0x024A030C BL 0x1C17728
	0x024A0310 LDR X0, [X19 + 0xA0]
	0x024A0314 CBZ X0, 0x24A08D0
	0x024A0318 MOV X1, X31
	0x024A031C BL 0x3C3F58C
	0x024A0320 LDR X8, [X24]
	0x024A0324 MOV V8.16B, V0.16B
	0x024A0328 MOV V9.16B, V1.16B
	0x024A032C MOV V10.16B, V2.16B
	0x024A0330 LDR X8, [X8 + 0xC0]
	0x024A0334 LDR X0, [X8 + 0x8]
	0x024A0338 LDRB W9, [X0 + 0x135]
	0x024A033C TBNZ X9, 0x0, 0x24A034C
	0x024A0340 BL 0x1C5C684
	0x024A0344 LDR X8, [X24]
	0x024A0348 LDR X8, [X8 + 0xC0]
	0x024A034C LDR X2, [X19 + 0x8]
	0x024A0350 LDR X1, [X8 + 0x10]
	0x024A0354 ADD X5, X19, 0xA0
	0x024A0358 MOV X3, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+64]
	014 Call Activator.CreateInstance
	015 Move X8, [X19+32]
	016 Move X20, X0
	017 Move W9, [X8+309]
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X8
	023 Call 0x1C5D684
	024 Move X8, X0
	025 Move X8, [X8+192]
	026 Move X0, [X8+24]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+184]
	034 Move [X8], X20
	035 Move X0, [X19+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+24]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {54}
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Call 0x1C5D684
	053 Return 
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Return 

