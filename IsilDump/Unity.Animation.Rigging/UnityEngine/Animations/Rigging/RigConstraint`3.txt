Type: UnityEngine.Animations.Rigging.RigConstraint`3

Method: System.Void Reset()

Disassembly:
	0x025CAF34 STRB W8, [X22 + 0xF40]
	0x025CAF38 ADD X0, X31, 0x118
	0x025CAF3C MOVZ W2, 0x118
	0x025CAF40 MOV W1, W31
	0x025CAF44 BL 0x3EB1B10
	0x025CAF48 LDR X8, [X19 + 0x20]
	0x025CAF4C LDR X8, [X8 + 0xC0]

ISIL:
	001 Move W8, 0x3F800000
	002 Move [X0+32], W8
	003 Move X8, [X1+32]
	004 Add X0, X0, 40
	005 Move X8, [X8+192]
	006 Move X1, [X8+16]
	007 Call BlendConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues, X0
	008 Return 

Method: System.Boolean IsValid()

Disassembly:
	0x025CAF50 LDR X0, [X8 + 0x30]
	0x025CAF54 LDRB W8, [X0 + 0x135]
	0x025CAF58 TBNZ X8, 0x0, 0x25CAF60
	0x025CAF5C BL 0x1C5C684
	0x025CAF60 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move X8, [X1+32]
	002 Add X0, X0, 40
	003 Move X8, [X8+192]
	004 Move X1, [X8+24]
	005 Call BlendConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid, X0
	006 Return X0

Method: System.Void OnValidate()

Disassembly:
	0x025CAF64 CBNZ W8, 0x25CAF6C
	0x025CAF68 BL 0x1C16DFC
	0x025CAF6C LDR X8, [X19 + 0x20]
	0x025CAF70 LDR X8, [X8 + 0xC0]
	0x025CAF74 LDR X0, [X8 + 0x30]
	0x025CAF78 LDRB W8, [X0 + 0x135]
	0x025CAF7C TBNZ X8, 0x0, 0x25CAF84
	0x025CAF80 BL 0x1C5C684

ISIL:
	001 Move V0, [X0+32]
	002 Move S1, 1
	003 NotImplemented "Instruction FMIN not yet implemented."
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 Move S0, W31
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 Move [X0+32], S0
	008 Return 

Method: TData get_data()

Disassembly:
	0x025CAF84 LDR X8, [X0 + 0xB8]
	0x025CAF88 LDR X0, [X8]

ISIL:
	001 Add X0, X0, 40
	002 Return X0

Method: System.Single get_weight()

Disassembly:
	0x025CAF8C CBZ X0, 0x25CB058
	0x025CAF90 LDR X8, [X0]

ISIL:
	001 Move V0, [X0+32]
	002 Return V0

Method: System.Void set_weight(System.Single value)

Disassembly:
	0x025CAF94 ADRP X22, 0x1B52000
	0x025CAF98 ADD X2, X21, 0x28
	0x025CAF9C MOV X1, X20
	0x025CAFA0 LDP X9, X4, [X8 + 0x1B8]
	0x025CAFA4 LDR X22, [X22 + 0xE20]
	0x025CAFA8 ADD X8, X31, 0x0
	0x025CAFAC MOV X3, X21

ISIL:
	001 Move S1, 1
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 NotImplemented "Instruction FMIN not yet implemented."
	004 Move S1, W31
	005 NotImplemented "Instruction FCSEL not yet implemented."
	006 Move [X0+32], S0
	007 Return 

Method: UnityEngine.Animations.IAnimationJob CreateJob(UnityEngine.Animator animator)

Disassembly:
	0x025CAFB0 BLR X9
	0x025CAFB4 ADD X0, X31, 0x118
	0x025CAFB8 ADD X1, X31, 0x0
	0x025CAFBC MOVZ W2, 0x118
	0x025CAFC0 BL 0x3EB1AC0
	0x025CAFC4 LDR X0, [X22]
	0x025CAFC8 LDR W8, [X0 + 0xE0]
	0x025CAFCC CBNZ W8, 0x25CAFD8
	0x025CAFD0 BL 0x1C16DFC
	0x025CAFD4 LDR X0, [X22]
	0x025CAFD8 LDR X8, [X0 + 0xB8]
	0x025CAFDC MOV X0, X21
	0x025CAFE0 MOV X2, X31
	0x025CAFE4 LDR X1, [X8]
	0x025CAFE8 BL 0x36F8EE0
	0x025CAFEC MOV X1, X0
	0x025CAFF0 MOV X0, X20
	0x025CAFF4 MOV X2, X31
	0x025CAFF8 BL 0x36E51BC
	0x025CAFFC LDR X8, [X19 + 0x20]
	0x025CB000 MOV X2, X0
	0x025CB004 MOV X4, X1
	0x025CB008 ADD X0, X31, 0x118
	0x025CB00C LDR X8, [X8 + 0xC0]
	0x025CB010 MOV X1, X2
	0x025CB014 MOV X2, X4
	0x025CB018 LDR X3, [X8 + 0x50]
	0x025CB01C BL 0x25D78C0
	0x025CB020 ADD X0, X31, 0x0
	0x025CB024 ADD X1, X31, 0x118
	0x025CB028 MOVZ W2, 0x118
	0x025CB02C BL 0x3EB1AC0
	0x025CB030 LDR X8, [X19 + 0x20]
	0x025CB034 ADD X1, X31, 0x0
	0x025CB038 LDR X8, [X8 + 0xC0]
	0x025CB03C LDR X0, [X8 + 0x48]
	0x025CB040 BL 0x1C16E04
	0x025CB044 ADD X31, X31, 0x230
	0x025CB048 LDP X20, X19, [X31 + 0x20]
	0x025CB04C LDP X22, X21, [X31 + 0x10]
	0x025CB050 LDP X29, X30, [X31], #0x30
	0x025CB054 RET
	0x025CB058 BL 0x1C16F20
	0x025CB05C STR X29, [X31 - 0x30]!
	0x025CB060 STP X30, X21, [X31 + 0x10]
	0x025CB064 STP X20, X19, [X31 + 0x20]
	0x025CB068 SUB X31, X31, 0x230
	0x025CB06C LDR X8, [X2 + 0x20]
	0x025CB070 MOV X21, X2
	0x025CB074 MOV X19, X1
	0x025CB078 LDR X8, [X8 + 0xC0]
	0x025CB07C LDR X0, [X8 + 0x30]
	0x025CB080 LDRB W8, [X0 + 0x135]
	0x025CB084 TBNZ X8, 0x0, 0x25CB08C
	0x025CB088 BL 0x1C5C684
	0x025CB08C LDR W8, [X0 + 0xE0]
	0x025CB090 CBNZ W8, 0x25CB098
	0x025CB094 BL 0x1C16DFC
	0x025CB098 LDR X8, [X21 + 0x20]
	0x025CB09C LDR X8, [X8 + 0xC0]
	0x025CB0A0 LDR X0, [X8 + 0x30]
	0x025CB0A4 LDRB W8, [X0 + 0x135]
	0x025CB0A8 TBNZ X8, 0x0, 0x25CB0B0
	0x025CB0AC BL 0x1C5C684
	0x025CB0B0 LDR X8, [X0 + 0xB8]
	0x025CB0B4 LDR X20, [X8]
	0x025CB0B8 CBZ X20, 0x25CB148
	0x025CB0BC LDR X8, [X21 + 0x20]
	0x025CB0C0 LDR X8, [X8 + 0xC0]
	0x025CB0C4 LDR X1, [X8 + 0x48]
	0x025CB0C8 LDRB W8, [X1 + 0x135]
	0x025CB0CC TBNZ X8, 0x0, 0x25CB0DC
	0x025CB0D0 MOV X0, X1
	0x025CB0D4 BL 0x1C5C684
	0x025CB0D8 MOV X1, X0
	0x025CB0DC CBZ X19, 0x25CB148
	0x025CB0E0 LDR X8, [X19]
	0x025CB0E4 LDR X9, [X1 + 0x40]
	0x025CB0E8 MOV X0, X19
	0x025CB0EC LDR X8, [X8 + 0x40]
	0x025CB0F0 CMP X8, X9
	0x025CB0F4 B.NE 0x25CB14C
	0x025CB0F8 BL 0x1C16E08
	0x025CB0FC MOV X1, X0
	0x025CB100 ADD X0, X31, 0x0
	0x025CB104 MOVZ W2, 0x118
	0x025CB108 BL 0x3EB1AC0
	0x025CB10C LDR X19, [X20]

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+400], X29
	003 Move [X31+408], X30
	004 Move [X31+416], X22
	005 Move [X31+424], X21
	006 Move [X31+432], X20
	007 Move [X31+440], X19
	008 Move X22, 0x1E10000
	009 Move W8, [X22+3901]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x1B53000
	018 Move X0, [X0+3616]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+3901], W8
	022 Add X0, X31, 200
	023 Move W2, 196
	024 Move W1, W31
	025 Call 0x3EB2B10
	026 Move X8, [X19+32]
	027 Move X8, [X8+192]
	028 Move X0, [X8+48]
	029 Move W8, [X0+309]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X8, [X19+32]
	040 Move X8, [X8+192]
	041 Move X0, [X8+48]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X8, [X0+184]
	049 Move X0, [X8]
	050 Compare X0, 0
	051 JumpIfEqual {107}
	052 Move X8, [X0]
	053 Move X22, 0x1B52000
	054 Add X2, X21, 40
	055 Move X1, X20
	056 Move X9, [X8+440]
	057 Move X4, [X8+448]
	058 Move X22, [X22+3616]
	059 Add X8, X31, 0
	060 Move X3, X21
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Add X0, X31, 200
	063 Add X1, X31, 0
	064 Move W2, 196
	065 Call 0x3EB2AC0
	066 Move X0, [X22]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X22]
	072 Move X8, [X0+184]
	073 Move X0, X21
	074 Move X2, X31
	075 Move X1, [X8]
	076 Call ConstraintsUtils.ConstructCustomPropertyName, X0, X1
	077 Move X1, X0
	078 Move X0, X20
	079 Move X2, X31
	080 Call FloatProperty.BindCustom, X0, X1
	081 Move X8, [X19+32]
	082 Move X2, X0
	083 Move X4, X1
	084 Add X0, X31, 200
	085 Move X8, [X8+192]
	086 Move X1, X2
	087 Move X2, X4
	088 Move X3, [X8+80]
	089 Call 0x25D88A0
	090 Add X0, X31, 0
	091 Add X1, X31, 200
	092 Move W2, 196
	093 Call 0x3EB2AC0
	094 Move X8, [X19+32]
	095 Add X1, X31, 0
	096 Move X8, [X8+192]
	097 Move X0, [X8+72]
	098 Call 0x1C17E04
	099 Move X20, [X31+432]
	100 Move X19, [X31+440]
	101 Move X22, [X31+416]
	102 Move X21, [X31+424]
	103 Move X29, [X31+400]
	104 Move X30, [X31+408]
	105 Add X31, X31, 448
	106 Return X0
	107 Call 0x1C17F20

Method: System.Void DestroyJob(UnityEngine.Animations.IAnimationJob job)

Disassembly:
	0x025CB110 ADD X0, X31, 0x118
	0x025CB114 ADD X1, X31, 0x0
	0x025CB118 MOVZ W2, 0x118
	0x025CB11C LDR X21, [X19 + 0x1C8]
	0x025CB120 BL 0x3EB1AC0
	0x025CB124 LDR X2, [X19 + 0x1D0]
	0x025CB128 ADD X1, X31, 0x118
	0x025CB12C MOV X0, X20
	0x025CB130 BLR X21
	0x025CB134 ADD X31, X31, 0x230
	0x025CB138 LDP X20, X19, [X31 + 0x20]
	0x025CB13C LDP X30, X21, [X31 + 0x10]
	0x025CB140 LDR X29, [X31], #0x30
	0x025CB144 RET
	0x025CB148 BL 0x1C16F20
	0x025CB14C BL 0x1C171E0
	0x025CB150 STP X29, X30, [X31 - 0x30]!
	0x025CB154 STP X22, X21, [X31 + 0x10]
	0x025CB158 STP X20, X19, [X31 + 0x20]
	0x025CB15C SUB X31, X31, 0x230
	0x025CB160 LDR X8, [X2 + 0x20]
	0x025CB164 MOV X22, X2
	0x025CB168 MOV X19, X1
	0x025CB16C MOV X20, X0
	0x025CB170 LDR X8, [X8 + 0xC0]
	0x025CB174 LDR X8, [X8 + 0x30]
	0x025CB178 LDRB W9, [X8 + 0x135]
	0x025CB17C TBNZ X9, 0x0, 0x25CB18C
	0x025CB180 MOV X0, X8
	0x025CB184 BL 0x1C5C684
	0x025CB188 MOV X8, X0
	0x025CB18C LDR W9, [X8 + 0xE0]
	0x025CB190 CBNZ W9, 0x25CB19C
	0x025CB194 MOV X0, X8
	0x025CB198 BL 0x1C16DFC
	0x025CB19C LDR X8, [X22 + 0x20]
	0x025CB1A0 LDR X8, [X8 + 0xC0]
	0x025CB1A4 LDR X0, [X8 + 0x30]
	0x025CB1A8 LDRB W8, [X0 + 0x135]
	0x025CB1AC TBNZ X8, 0x0, 0x25CB1B4
	0x025CB1B0 BL 0x1C5C684
	0x025CB1B4 LDR X8, [X0 + 0xB8]
	0x025CB1B8 LDR X21, [X8]
	0x025CB1BC CBZ X21, 0x25CB254
	0x025CB1C0 LDR X8, [X22 + 0x20]
	0x025CB1C4 LDR X8, [X8 + 0xC0]
	0x025CB1C8 LDR X1, [X8 + 0x48]
	0x025CB1CC LDRB W8, [X1 + 0x135]
	0x025CB1D0 TBNZ X8, 0x0, 0x25CB1E0
	0x025CB1D4 MOV X0, X1
	0x025CB1D8 BL 0x1C5C684
	0x025CB1DC MOV X1, X0
	0x025CB1E0 CBZ X19, 0x25CB254
	0x025CB1E4 LDR X8, [X19]
	0x025CB1E8 LDR X9, [X1 + 0x40]
	0x025CB1EC LDR X8, [X8 + 0x40]
	0x025CB1F0 CMP X8, X9
	0x025CB1F4 B.NE 0x25CB258
	0x025CB1F8 MOV X0, X19
	0x025CB1FC ADD X20, X20, 0x28
	0x025CB200 BL 0x1C16E08

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+400], X29
	003 Move [X31+416], X30
	004 Move [X31+424], X21
	005 Move [X31+432], X20
	006 Move [X31+440], X19
	007 Move X8, [X2+32]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X8, [X8+192]
	011 Move X0, [X8+48]
	012 Move W8, [X0+309]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {18}
	017 Call 0x1C5D684
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X8, [X21+32]
	023 Move X8, [X8+192]
	024 Move X0, [X8+48]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+184]
	032 Move X20, [X8]
	033 Compare X20, 0
	034 JumpIfEqual {75}
	035 Move X8, [X21+32]
	036 Move X8, [X8+192]
	037 Move X1, [X8+72]
	038 Move W8, [X1+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {46}
	043 Move X0, X1
	044 Call 0x1C5D684
	045 Move X1, X0
	046 Compare X19, 0
	047 JumpIfEqual {75}
	048 Move X8, [X19]
	049 Move X9, [X1+64]
	050 Move X0, X19
	051 Move X8, [X8+64]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Call 0x1C17E08
	054 Move X1, X0
	055 Add X0, X31, 0
	056 Move W2, 196
	057 Call 0x3EB2AC0
	058 Move X19, [X20]
	059 Add X0, X31, 200
	060 Add X1, X31, 0
	061 Move W2, 196
	062 Move X21, [X19+456]
	063 Call 0x3EB2AC0
	064 Move X2, [X19+464]
	065 Add X1, X31, 200
	066 Move X0, X20
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X20, [X31+432]
	069 Move X19, [X31+440]
	070 Move X30, [X31+416]
	071 Move X21, [X31+424]
	072 Move X29, [X31+400]
	073 Add X31, X31, 448
	074 Return 
	075 Call 0x1C17F20
	076 Call 0x1C181E0

Method: System.Void UpdateJob(UnityEngine.Animations.IAnimationJob job)

Disassembly:
	0x025CB204 MOV X1, X0
	0x025CB208 ADD X0, X31, 0x0
	0x025CB20C MOVZ W2, 0x118
	0x025CB210 BL 0x3EB1AC0
	0x025CB214 LDR X19, [X21]
	0x025CB218 ADD X0, X31, 0x118
	0x025CB21C ADD X1, X31, 0x0
	0x025CB220 MOVZ W2, 0x118
	0x025CB224 LDR X22, [X19 + 0x1D8]
	0x025CB228 BL 0x3EB1AC0
	0x025CB22C LDR X3, [X19 + 0x1E0]
	0x025CB230 ADD X1, X31, 0x118
	0x025CB234 MOV X0, X21
	0x025CB238 MOV X2, X20
	0x025CB23C BLR X22
	0x025CB240 ADD X31, X31, 0x230
	0x025CB244 LDP X20, X19, [X31 + 0x20]
	0x025CB248 LDP X22, X21, [X31 + 0x10]
	0x025CB24C LDP X29, X30, [X31], #0x30
	0x025CB250 RET
	0x025CB254 BL 0x1C16F20
	0x025CB258 MOV X0, X19
	0x025CB25C BL 0x1C171E0
	0x025CB260 STP X30, X19, [X31 - 0x10]!
	0x025CB264 LDR X8, [X1 + 0x20]
	0x025CB268 MOV X19, X1
	0x025CB26C LDR X8, [X8 + 0xC0]
	0x025CB270 LDR X0, [X8 + 0x30]
	0x025CB274 LDRB W8, [X0 + 0x135]
	0x025CB278 TBNZ X8, 0x0, 0x25CB280
	0x025CB27C BL 0x1C5C684
	0x025CB280 LDR W8, [X0 + 0xE0]
	0x025CB284 CBNZ W8, 0x25CB28C
	0x025CB288 BL 0x1C16DFC
	0x025CB28C LDR X8, [X19 + 0x20]
	0x025CB290 LDR X8, [X8 + 0xC0]
	0x025CB294 LDR X0, [X8 + 0x30]
	0x025CB298 LDRB W8, [X0 + 0x135]
	0x025CB29C TBNZ X8, 0x0, 0x25CB2A4
	0x025CB2A0 BL 0x1C5C684
	0x025CB2A4 LDR X8, [X0 + 0xB8]
	0x025CB2A8 LDR X0, [X8]
	0x025CB2AC LDP X30, X19, [X31], #0x10
	0x025CB2B0 RET
	0x025CB2B4 SUB X31, X31, 0xD0
	0x025CB2B8 STP X30, X19, [X31 + 0xC0]
	0x025CB2BC MOV X19, X1
	0x025CB2C0 ADD X1, X0, 0x28
	0x025CB2C4 ADD X0, X31, 0x0
	0x025CB2C8 MOVZ W2, 0xC0
	0x025CB2CC BL 0x3EB1AC0
	0x025CB2D0 LDR X8, [X19 + 0x20]
	0x025CB2D4 ADD X1, X31, 0x0
	0x025CB2D8 LDR X8, [X8 + 0xC0]
	0x025CB2DC LDR X0, [X8 + 0x8]
	0x025CB2E0 BL 0x1C16E04
	0x025CB2E4 LDP X30, X19, [X31 + 0xC0]
	0x025CB2E8 ADD X31, X31, 0xD0
	0x025CB2EC RET
	0x025CB2F0 RET
	0x025CB2F4 MOVZ W8, 0x3F800000
	0x025CB2F8 MOV X1, X31
	0x025CB2FC STR W8, [X0 + 0x20]
	0x025CB300 B 0x3C36C30
	0x025CB304 STR X30, [X31 - 0x20]!
	0x025CB308 STP X20, X19, [X31 + 0x10]
	0x025CB30C MOV X19, X0
	0x025CB310 LDR X0, [X0 + 0x20]

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+400], X29
	003 Move [X31+408], X30
	004 Move [X31+416], X22
	005 Move [X31+424], X21
	006 Move [X31+432], X20
	007 Move [X31+440], X19
	008 Move X8, [X2+32]
	009 Move X22, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move X8, [X8+192]
	013 Move X8, [X8+48]
	014 Move W9, [X8+309]
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {22}
	019 Move X0, X8
	020 Call 0x1C5D684
	021 Move X8, X0
	022 Move W9, [X8+224]
	023 Compare W9, 0
	024 JumpIfNotEqual {27}
	025 Move X0, X8
	026 Call 0x1C17DFC
	027 Move X8, [X22+32]
	028 Move X8, [X8+192]
	029 Move X0, [X8+48]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X8, [X0+184]
	037 Move X21, [X8]
	038 Compare X21, 0
	039 JumpIfEqual {83}
	040 Move X8, [X22+32]
	041 Move X8, [X8+192]
	042 Move X1, [X8+72]
	043 Move W8, [X1+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {51}
	048 Move X0, X1
	049 Call 0x1C5D684
	050 Move X1, X0
	051 Compare X19, 0
	052 JumpIfEqual {83}
	053 Move X8, [X19]
	054 Move X9, [X1+64]
	055 Move X8, [X8+64]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X19
	058 Add X20, X20, 40
	059 Call 0x1C17E08
	060 Move X1, X0
	061 Add X0, X31, 0
	062 Move W2, 196
	063 Call 0x3EB2AC0
	064 Move X19, [X21]
	065 Add X0, X31, 200
	066 Add X1, X31, 0
	067 Move W2, 196
	068 Move X22, [X19+472]
	069 Call 0x3EB2AC0
	070 Move X3, [X19+480]
	071 Add X1, X31, 200
	072 Move X0, X21
	073 Move X2, X20
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X20, [X31+432]
	076 Move X19, [X31+440]
	077 Move X22, [X31+416]
	078 Move X21, [X31+424]
	079 Move X29, [X31+400]
	080 Move X30, [X31+408]
	081 Add X31, X31, 448
	082 Return 
	083 Call 0x1C17F20
	084 Move X0, X19
	085 Call 0x1C181E0

Method: UnityEngine.Animations.Rigging.IAnimationJobBinder UnityEngine.Animations.Rigging.IRigConstraint.get_binder()

Disassembly:
	0x025CB314 LDRB W8, [X0 + 0x135]
	0x025CB318 TBNZ X8, 0x0, 0x25CB320
	0x025CB31C BL 0x1C5C684
	0x025CB320 LDR X8, [X0 + 0xC0]
	0x025CB324 LDR X0, [X8 + 0x68]
	0x025CB328 BL 0x2278924
	0x025CB32C LDR X8, [X19 + 0x20]
	0x025CB330 MOV X20, X0
	0x025CB334 LDRB W9, [X8 + 0x135]
	0x025CB338 TBNZ X9, 0x0, 0x25CB348
	0x025CB33C MOV X0, X8
	0x025CB340 BL 0x1C5C684
	0x025CB344 MOV X8, X0
	0x025CB348 LDR X8, [X8 + 0xC0]
	0x025CB34C LDR X0, [X8 + 0x30]
	0x025CB350 LDRB W8, [X0 + 0x135]
	0x025CB354 TBNZ X8, 0x0, 0x25CB35C
	0x025CB358 BL 0x1C5C684
	0x025CB35C LDR X8, [X0 + 0xB8]
	0x025CB360 STR X20, [X8]
	0x025CB364 LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X1
	005 Move X8, [X8+192]
	006 Move X0, [X8+48]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move W8, [X0+224]
	014 Compare W8, 0
	015 JumpIfNotEqual {17}
	016 Call 0x1C17DFC
	017 Move X8, [X19+32]
	018 Move X8, [X8+192]
	019 Move X0, [X8+48]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X8, [X0+184]
	027 Move X0, [X8]
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return X0

Method: UnityEngine.Animations.Rigging.IAnimationJobData UnityEngine.Animations.Rigging.IRigConstraint.get_data()

Disassembly:
	0x025CB368 LDRB W8, [X0 + 0x135]
	0x025CB36C TBNZ X8, 0x0, 0x25CB374
	0x025CB370 BL 0x1C5C684
	0x025CB374 LDR X8, [X0 + 0xC0]
	0x025CB378 LDR X0, [X8 + 0x30]
	0x025CB37C LDRB W8, [X0 + 0x135]
	0x025CB380 TBNZ X8, 0x0, 0x25CB390
	0x025CB384 LDP X20, X19, [X31 + 0x10]
	0x025CB388 LDR X30, [X31], #0x20
	0x025CB38C B 0x1C5C684
	0x025CB390 LDP X20, X19, [X31 + 0x10]
	0x025CB394 LDR X30, [X31], #0x20
	0x025CB398 RET
	0x025CB39C MOVZ W8, 0x3F800000
	0x025CB3A0 STR W8, [X0 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move X8, [X0+72]
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move [X31+32], X8
	007 Move [X31], V1
	008 Move [X31+8], V0
	009 Move X8, [X1+32]
	010 Add X1, X31, 0
	011 Move X8, [X8+192]
	012 Move X0, [X8+8]
	013 Call 0x1C17E04
	014 Move X30, [X31+48]
	015 Add X31, X31, 64
	016 Return X0

Method: UnityEngine.Component UnityEngine.Animations.Rigging.IRigConstraint.get_component()

Disassembly:
	0x025CB3A4 LDR X8, [X1 + 0x20]

ISIL:
	001 Return X0

Method: System.Void .ctor()

Disassembly:
	0x025CB3A8 ADD X0, X0, 0x28
	0x025CB3AC LDR X8, [X8 + 0xC0]
	0x025CB3B0 LDR X1, [X8 + 0x10]
	0x025CB3B4 B 0x36EE7DC

ISIL:
	001 Move W8, 0x3F800000
	002 Move X1, X31
	003 Move [X0+32], W8
	004 Call MonoBehaviour..ctor, X0
	005 Return 

Method: System.Void .cctor()

Disassembly:
	0x025CB3B8 LDR X8, [X1 + 0x20]
	0x025CB3BC ADD X0, X0, 0x28
	0x025CB3C0 LDR X8, [X8 + 0xC0]
	0x025CB3C4 LDR X1, [X8 + 0x18]
	0x025CB3C8 B 0x36EE4B8
	0x025CB3CC LDR V0, [X0 + 0x20]
	0x025CB3D0 FMOV S1, 1
	0x025CB3D4 FMIN S1, S0, S1
	0x025CB3D8 FCMP S0, 0x0
	0x025CB3DC FMOV S0, W31
	0x025CB3E0 FCSEL S0, S1, S0, PL
	0x025CB3E4 STR S0, [X0 + 0x20]
	0x025CB3E8 RET
	0x025CB3EC ADD X0, X0, 0x28
	0x025CB3F0 RET
	0x025CB3F4 LDR V0, [X0 + 0x20]
	0x025CB3F8 RET
	0x025CB3FC FMOV S1, 1
	0x025CB400 FCMP S0, 0x0
	0x025CB404 FMIN S0, S0, S1
	0x025CB408 FMOV S1, W31
	0x025CB40C FCSEL S0, S0, S1, PL
	0x025CB410 STR S0, [X0 + 0x20]
	0x025CB414 RET
	0x025CB418 SUB X31, X31, 0x150
	0x025CB41C STP X29, X30, [X31 + 0x120]
	0x025CB420 STP X22, X21, [X31 + 0x130]
	0x025CB424 STP X20, X19, [X31 + 0x140]
	0x025CB428 ADRP X22, 0x1E0E000
	0x025CB42C LDRB W8, [X22 + 0xF41]
	0x025CB430 MOV X19, X2
	0x025CB434 MOV X20, X1
	0x025CB438 MOV X21, X0
	0x025CB43C TBNZ X8, 0x0, 0x25CB454
	0x025CB440 ADRP X0, 0x1B51000
	0x025CB444 LDR X0, [X0 + 0xE20]
	0x025CB448 BL 0x1C16CF4
	0x025CB44C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+104]
	014 Call Activator.CreateInstance
	015 Move X8, [X19+32]
	016 Move X20, X0
	017 Move W9, [X8+309]
	018 Move TEMP, X9
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {25}
	022 Move X0, X8
	023 Call 0x1C5D684
	024 Move X8, X0
	025 Move X8, [X8+192]
	026 Move X0, [X8+48]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+184]
	034 Move [X8], X20
	035 Move X0, [X19+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+48]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {54}
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Call 0x1C5D684
	053 Return 
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Return 

