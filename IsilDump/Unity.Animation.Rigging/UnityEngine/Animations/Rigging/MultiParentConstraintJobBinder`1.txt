Type: UnityEngine.Animations.Rigging.MultiParentConstraintJobBinder`1

Method: UnityEngine.Animations.Rigging.MultiParentConstraintJob Create(UnityEngine.Animator animator, ref T data, UnityEngine.Component component)

Disassembly:
	0x031A3F84 LDR X2, [X19 + 0x60]
	0x031A3F88 ADD X5, X19, 0x250
	0x031A3F8C MOV X3, X26
	0x031A3F90 MOV X4, X31
	0x031A3F94 BL 0x1C17728
	0x031A3F98 LDRB W8, [X19 + 0x250]
	0x031A3F9C CBZ W8, 0x31A3FB0
	0x031A3FA0 LDR X8, [X19 + 0x2E0]
	0x031A3FA4 LDR W9, [X19 + 0x2E8]
	0x031A3FA8 STR X8, [X19 + 0x300]
	0x031A3FAC STR W9, [X19 + 0x308]
	0x031A3FB0 LDR X8, [X22]
	0x031A3FB4 LDR X8, [X8 + 0xC0]
	0x031A3FB8 LDR X0, [X8 + 0x8]
	0x031A3FBC LDRB W9, [X0 + 0x135]
	0x031A3FC0 TBNZ X9, 0x0, 0x31A3FD0
	0x031A3FC4 BL 0x1C5C684
	0x031A3FC8 LDR X8, [X22]
	0x031A3FCC LDR X8, [X8 + 0xC0]
	0x031A3FD0 LDR X1, [X8 + 0x30]
	0x031A3FD4 LDR X2, [X19 + 0x58]
	0x031A3FD8 ADD X5, X19, 0x250
	0x031A3FDC MOV X3, X26
	0x031A3FE0 MOV X4, X31
	0x031A3FE4 BL 0x1C17728
	0x031A3FE8 LDRB W8, [X19 + 0x250]
	0x031A3FEC CBZ W8, 0x31A4008
	0x031A3FF0 LDR V0, [X19 + 0x2E]
	0x031A3FF4 LDUR V1, [X27 + 0x9C]
	0x031A3FF8 STR V0, [X19 + 0x25]
	0x031A3FFC STUR V1, [X27 + 0xC]
	0x031A4000 LDR V0, [X21]
	0x031A4004 STR V0, [X28]
	0x031A4008 LDUR X8, [X29 - 0xA8]
	0x031A400C LDUR V0, [X27 + 0xBC]
	0x031A4010 LDR V1, [X19 + 0x30]
	0x031A4014 ADD X25, X25, 0x1
	0x031A4018 ADD X8, X8, X24
	0x031A401C ADD X24, X24, 0x1C
	0x031A4020 STUR V0, [X8 + 0xC]
	0x031A4024 STR V1, [X8]
	0x031A4028 B 0x31A3E28
	0x031A402C LDR X8, [X22]
	0x031A4030 LDR X8, [X8 + 0xC0]
	0x031A4034 LDR X0, [X8 + 0x8]
	0x031A4038 LDRB W9, [X0 + 0x135]
	0x031A403C TBNZ X9, 0x0, 0x31A404C
	0x031A4040 BL 0x1C5C684
	0x031A4044 LDR X8, [X22]
	0x031A4048 LDR X8, [X8 + 0xC0]
	0x031A404C ADRP X20, 0xF58000
	0x031A4050 LDP X21, X2, [X19 + 0x8]
	0x031A4054 LDR X23, [X19 + 0x38]
	0x031A4058 LDR X20, [X20 + 0x9E8]
	0x031A405C LDR X1, [X8 + 0x38]
	0x031A4060 ADD X5, X19, 0x250
	0x031A4064 MOV X3, X26
	0x031A4068 MOV X4, X31
	0x031A406C BL 0x1C17728
	0x031A4070 LDR X0, [X20]
	0x031A4074 LDRB W20, [X19 + 0x250]
	0x031A4078 LDR W8, [X0 + 0xE0]
	0x031A407C CBNZ W8, 0x31A4084
	0x031A4080 BL 0x1C16DFC
	0x031A4084 CMP W20, 0x0
	0x031A4088 CSET W0, NE
	0x031A408C MOV X1, X31
	0x031A4090 BL 0x33184A4
	0x031A4094 LDR X8, [X22]
	0x031A4098 MOV V8.16B, V0.16B
	0x031A409C LDR X8, [X8 + 0xC0]
	0x031A40A0 LDR X0, [X8 + 0x8]
	0x031A40A4 LDRB W9, [X0 + 0x135]
	0x031A40A8 TBNZ X9, 0x0, 0x31A40B8
	0x031A40AC BL 0x1C5C684
	0x031A40B0 LDR X8, [X22]
	0x031A40B4 LDR X8, [X8 + 0xC0]
	0x031A40B8 LDR X2, [X19 + 0x18]
	0x031A40BC LDR X1, [X8 + 0x40]
	0x031A40C0 LDR X20, [X19]
	0x031A40C4 ADD X5, X19, 0x250
	0x031A40C8 MOV X3, X26
	0x031A40CC MOV X4, X31
	0x031A40D0 BL 0x1C17728
	0x031A40D4 LDRB W0, [X19 + 0x250]
	0x031A40D8 MOV X1, X31
	0x031A40DC BL 0x33184A4
	0x031A40E0 LDR X8, [X22]
	0x031A40E4 MOV V9.16B, V0.16B
	0x031A40E8 LDR X8, [X8 + 0xC0]
	0x031A40EC LDR X0, [X8 + 0x8]
	0x031A40F0 LDRB W9, [X0 + 0x135]
	0x031A40F4 TBNZ X9, 0x0, 0x31A4104
	0x031A40F8 BL 0x1C5C684
	0x031A40FC LDR X8, [X22]
	0x031A4100 LDR X8, [X8 + 0xC0]
	0x031A4104 LDR X2, [X19 + 0x20]
	0x031A4108 LDR X1, [X8 + 0x48]
	0x031A410C ADD X5, X19, 0x250
	0x031A4110 MOV X3, X26
	0x031A4114 MOV X4, X31
	0x031A4118 BL 0x1C17728
	0x031A411C LDRB W0, [X19 + 0x250]
	0x031A4120 MOV X1, X31
	0x031A4124 BL 0x33184A4
	0x031A4128 STP S8, S9, [X29 - 0x88]
	0x031A412C STUR S0, [X29 - 0x80]
	0x031A4130 LDR X8, [X22]
	0x031A4134 LDR X8, [X8 + 0xC0]
	0x031A4138 LDR X0, [X8 + 0x8]
	0x031A413C LDRB W9, [X0 + 0x135]
	0x031A4140 TBNZ X9, 0x0, 0x31A4150
	0x031A4144 BL 0x1C5C684
	0x031A4148 LDR X8, [X22]
	0x031A414C LDR X8, [X8 + 0xC0]
	0x031A4150 LDR X2, [X19 + 0x28]
	0x031A4154 LDR X1, [X8 + 0x50]
	0x031A4158 ADD X5, X19, 0x250
	0x031A415C MOV X3, X26
	0x031A4160 MOV X4, X31
	0x031A4164 BL 0x1C17728
	0x031A4168 LDRB W0, [X19 + 0x250]
	0x031A416C MOV X1, X31
	0x031A4170 BL 0x33184A4
	0x031A4174 LDR X8, [X22]
	0x031A4178 MOV V8.16B, V0.16B
	0x031A417C LDR X8, [X8 + 0xC0]
	0x031A4180 LDR X0, [X8 + 0x8]
	0x031A4184 LDRB W9, [X0 + 0x135]
	0x031A4188 TBNZ X9, 0x0, 0x31A4198
	0x031A418C BL 0x1C5C684
	0x031A4190 LDR X8, [X22]
	0x031A4194 LDR X8, [X8 + 0xC0]
	0x031A4198 LDR X2, [X19 + 0x30]
	0x031A419C LDR X1, [X8 + 0x58]
	0x031A41A0 ADD X5, X19, 0x250
	0x031A41A4 MOV X3, X26
	0x031A41A8 MOV X4, X31
	0x031A41AC BL 0x1C17728
	0x031A41B0 LDRB W0, [X19 + 0x250]
	0x031A41B4 MOV X1, X31
	0x031A41B8 BL 0x33184A4
	0x031A41BC LDR X8, [X22]
	0x031A41C0 MOV V9.16B, V0.16B
	0x031A41C4 LDR X8, [X8 + 0xC0]
	0x031A41C8 LDR X0, [X8 + 0x8]
	0x031A41CC LDRB W9, [X0 + 0x135]
	0x031A41D0 TBNZ X9, 0x0, 0x31A41E0
	0x031A41D4 BL 0x1C5C684
	0x031A41D8 LDR X8, [X22]
	0x031A41DC LDR X8, [X8 + 0xC0]
	0x031A41E0 LDR X1, [X8 + 0x60]
	0x031A41E4 ADD X5, X19, 0x250
	0x031A41E8 MOV X2, X20
	0x031A41EC MOV X3, X26
	0x031A41F0 MOV X4, X31
	0x031A41F4 BL 0x1C17728
	0x031A41F8 LDRB W0, [X19 + 0x250]
	0x031A41FC MOV X1, X31
	0x031A4200 BL 0x33184A4
	0x031A4204 SUB X1, X29, 0xF0
	0x031A4208 MOVZ W2, 0x90
	0x031A420C MOV X0, X23
	0x031A4210 STP S8, S9, [X29 - 0x7C]
	0x031A4214 STUR S0, [X29 - 0x74]
	0x031A4218 BL 0x3EB1AC0
	0x031A421C LDR X8, [X21 + 0x28]
	0x031A4220 LDUR X9, [X29 - 0x58]
	0x031A4224 CMP X8, X9
	0x031A4228 B.NE 0x31A4260
	0x031A422C SUB X31, X29, 0x40
	0x031A4230 LDP X20, X19, [X31 + 0x90]
	0x031A4234 LDP X22, X21, [X31 + 0x80]
	0x031A4238 LDP X24, X23, [X31 + 0x70]
	0x031A423C LDP X26, X25, [X31 + 0x60]
	0x031A4240 LDP X28, X27, [X31 + 0x50]
	0x031A4244 LDP X29, X30, [X31 + 0x40]
	0x031A4248 LDP D9, D8, [X31 + 0x30]
	0x031A424C LDP D11, D10, [X31 + 0x20]
	0x031A4250 LDP D13, D12, [X31 + 0x10]
	0x031A4254 LDR V14, [X31], #0xA0
	0x031A4258 RET
	0x031A425C BL 0x1C16F20
	0x031A4260 BL 0x3EB1B20
	0x031A4264 STR X30, [X31 - 0x40]!
	0x031A4268 STP X24, X23, [X31 + 0x10]
	0x031A426C STP X22, X21, [X31 + 0x20]
	0x031A4270 STP X20, X19, [X31 + 0x30]
	0x031A4274 ADRP X24, 0x1237000
	0x031A4278 ADRP X23, 0xF7B000
	0x031A427C ADRP X22, 0xF79000
	0x031A4280 ADRP X21, 0xF7B000
	0x031A4284 ADRP X20, 0xF79000
	0x031A4288 LDRB W8, [X24 + 0xE1E]
	0x031A428C LDR X23, [X23 + 0x238]
	0x031A4290 LDR X22, [X22 + 0x150]
	0x031A4294 LDR X21, [X21 + 0x248]
	0x031A4298 LDR X20, [X20 + 0x158]
	0x031A429C MOV X19, X1
	0x031A42A0 TBNZ X8, 0x0, 0x31A42DC
	0x031A42A4 ADRP X0, 0xF79000
	0x031A42A8 LDR X0, [X0 + 0x150]
	0x031A42AC BL 0x1C16CF4
	0x031A42B0 ADRP X0, 0xF7B000
	0x031A42B4 LDR X0, [X0 + 0x238]
	0x031A42B8 BL 0x1C16CF4
	0x031A42BC ADRP X0, 0xF7B000
	0x031A42C0 LDR X0, [X0 + 0x248]
	0x031A42C4 BL 0x1C16CF4
	0x031A42C8 ADRP X0, 0xF79000
	0x031A42CC LDR X0, [X0 + 0x158]
	0x031A42D0 BL 0x1C16CF4
	0x031A42D4 MOVZ W8, 0x1
	0x031A42D8 STRB W8, [X24 + 0xE1E]
	0x031A42DC LDR X1, [X23]
	0x031A42E0 ADD X0, X19, 0x28
	0x031A42E4 BL 0x23E0B48
	0x031A42E8 LDR X1, [X22]
	0x031A42EC ADD X0, X19, 0x38
	0x031A42F0 BL 0x23DEE00
	0x031A42F4 LDR X1, [X21]
	0x031A42F8 ADD X0, X19, 0x48
	0x031A42FC BL 0x31A6A1C
	0x031A4300 LDR X1, [X20]
	0x031A4304 ADD X0, X19, 0x58
	0x031A4308 LDP X20, X19, [X31 + 0x30]
	0x031A430C LDP X22, X21, [X31 + 0x20]
	0x031A4310 LDP X24, X23, [X31 + 0x10]
	0x031A4314 LDR X30, [X31], #0x40
	0x031A4318 B 0x23E53EC
	0x031A431C LDR X8, [X1 + 0x20]
	0x031A4320 LDR X8, [X8 + 0xC0]
	0x031A4324 LDR X1, [X8 + 0x68]
	0x031A4328 LDR X2, [X1]
	0x031A432C BR X2
	0x031A4330 STR D10, [X31 - 0x80]!
	0x031A4334 STP D9, D8, [X31 + 0x10]
	0x031A4338 STP X29, X30, [X31 + 0x20]
	0x031A433C STP X28, X27, [X31 + 0x30]
	0x031A4340 STP X26, X25, [X31 + 0x40]
	0x031A4344 STP X24, X23, [X31 + 0x50]
	0x031A4348 STP X22, X21, [X31 + 0x60]
	0x031A434C STP X20, X19, [X31 + 0x70]
	0x031A4350 SUB X31, X31, 0x300
	0x031A4354 ADRP X24, 0x1237000
	0x031A4358 LDRB W9, [X24 + 0xE1F]
	0x031A435C MOV X21, X4
	0x031A4360 MOV X22, X3
	0x031A4364 MOV X20, X2
	0x031A4368 MOV X23, X1
	0x031A436C MOV X19, X8
	0x031A4370 TBNZ X9, 0x0, 0x31A43AC
	0x031A4374 ADRP X0, 0xF58000
	0x031A4378 LDR X0, [X0 + 0x9E8]
	0x031A437C BL 0x1C16CF4
	0x031A4380 ADRP X0, 0xF79000
	0x031A4384 LDR X0, [X0 + 0x128]
	0x031A4388 BL 0x1C16CF4
	0x031A438C ADRP X0, 0xF7A000
	0x031A4390 LDR X0, [X0 + 0x1F0]
	0x031A4394 BL 0x1C16CF4
	0x031A4398 ADRP X0, 0xF79000
	0x031A439C LDR X0, [X0 + 0x960]
	0x031A43A0 BL 0x1C16CF4
	0x031A43A4 MOVZ W8, 0x1
	0x031A43A8 STRB W8, [X24 + 0xE1F]
	0x031A43AC ADD X0, X31, 0x1C0
	0x031A43B0 MOVZ W2, 0x88
	0x031A43B4 MOV W1, W31
	0x031A43B8 BL 0x3EB1B10
	0x031A43BC ADD X0, X31, 0x248
	0x031A43C0 MOVZ W2, 0xB8
	0x031A43C4 MOV W1, W31
	0x031A43C8 ADD X25, X31, 0x248
	0x031A43CC BL 0x3EB1B10
	0x031A43D0 LDR X1, [X20]
	0x031A43D4 MOV X0, X23
	0x031A43D8 MOV X2, X31
	0x031A43DC BL 0x36EADF0
	0x031A43E0 STR X0, [X31 + 0x248]
	0x031A43E4 STR W1, [X31 + 0x250]
	0x031A43E8 LDR X0, [X20]
	0x031A43EC CBZ X0, 0x31A470C
	0x031A43F0 ADRP X26, 0xF79000
	0x031A43F4 ADRP X29, 0xF7A000
	0x031A43F8 ADRP X28, 0xF79000
	0x031A43FC LDR X26, [X26 + 0x960]
	0x031A4400 LDR X29, [X29 + 0x1F0]
	0x031A4404 LDR X28, [X28 + 0x128]
	0x031A4408 MOV X1, X31
	0x031A440C ADD X27, X31, 0x248
	0x031A4410 ADD X24, X31, 0xB0
	0x031A4414 BL 0x3C3F49C
	0x031A4418 MOV X1, X0
	0x031A441C ADD X8, X31, 0xB0
	0x031A4420 MOV X0, X23
	0x031A4424 MOV X2, X31
	0x031A4428 BL 0x36EB150
	0x031A442C LDR V0, [X24]
	0x031A4430 LDR X8, [X31 + 0xC0]
	0x031A4434 MOV X0, X20
	0x031A4438 STUR V0, [X27 + 0xC]
	0x031A443C STUR X8, [X27 + 0x1C]
	0x031A4440 LDR X8, [X21 + 0x20]
	0x031A4444 LDR X8, [X8 + 0xC0]
	0x031A4448 LDR X1, [X8 + 0x18]
	0x031A444C BL 0x36EEA04
	0x031A4450 MOV X2, X0
	0x031A4454 ADD X8, X31, 0xB0
	0x031A4458 MOV X0, X23
	0x031A445C MOV X1, X22
	0x031A4460 MOV X3, X31
	0x031A4464 BL 0x36E54DC
	0x031A4468 LDP V0, V1, [X24]
	0x031A446C LDR V2, [X24 + 0x2]
	0x031A4470 ADD X24, X20, 0x8
	0x031A4474 ADD X0, X31, 0x1C0
	0x031A4478 MOVZ W2, 0x88
	0x031A447C MOV X1, X24
	0x031A4480 STUR V0, [X27 + 0x24]
	0x031A4484 STUR V1, [X27 + 0x34]
	0x031A4488 STUR V2, [X27 + 0x44]
	0x031A448C BL 0x3EB1AC0
	0x031A4490 ADD X0, X31, 0x138
	0x031A4494 MOVZ W2, 0x88
	0x031A4498 MOV X1, X24
	0x031A449C BL 0x3EB1AC0
	0x031A44A0 ADD X3, X25, 0x58
	0x031A44A4 ADD X2, X31, 0x138
	0x031A44A8 MOV X0, X23
	0x031A44AC MOV X1, X22
	0x031A44B0 MOV X4, X31
	0x031A44B4 BL 0x36ECA3C
	0x031A44B8 ADD X0, X31, 0xB0
	0x031A44BC ADD X1, X31, 0x1C0
	0x031A44C0 MOVZ W2, 0x88
	0x031A44C4 BL 0x3EB1AC0
	0x031A44C8 LDR X8, [X21 + 0x20]
	0x031A44CC MOV X0, X20
	0x031A44D0 LDR X8, [X8 + 0xC0]
	0x031A44D4 LDR X1, [X8 + 0x28]
	0x031A44D8 BL 0x36EEA44
	0x031A44DC MOV X24, X0
	0x031A44E0 ADD X0, X31, 0x28
	0x031A44E4 ADD X1, X31, 0xB0
	0x031A44E8 MOVZ W2, 0x88
	0x031A44EC ADD X25, X25, 0x68
	0x031A44F0 BL 0x3EB1AC0
	0x031A44F4 ADD X2, X31, 0x28
	0x031A44F8 MOV X0, X23
	0x031A44FC MOV X1, X22
	0x031A4500 MOV X3, X24
	0x031A4504 MOV X4, X25
	0x031A4508 MOV X5, X31
	0x031A450C BL 0x36ECCCC
	0x031A4510 LDR X0, [X26]
	0x031A4514 LDR W8, [X0 + 0xE0]
	0x031A4518 CBNZ W8, 0x31A4520
	0x031A451C BL 0x1C16DFC
	0x031A4520 LDR W22, [X31 + 0x1C0]
	0x031A4524 LDR X4, [X29]
	0x031A4528 ADD X0, X31, 0x18
	0x031A452C MOVZ W2, 0x4
	0x031A4530 MOV W1, W22
	0x031A4534 MOV W3, W31
	0x031A4538 STP X31, X31, [X31 + 0x18]
	0x031A453C BL 0x23F0FB0

ISIL:
	001 Move [X31-160], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X29
	009 Move [X31+72], X30
	010 Move [X31+80], X28
	011 Move [X31+88], X27
	012 Move [X31+96], X26
	013 Move [X31+104], X25
	014 Move [X31+112], X24
	015 Move [X31+120], X23
	016 Move [X31+128], X22
	017 Move [X31+136], X21
	018 Move [X31+144], X20
	019 Move [X31+152], X19
	020 Subtract X31, X31, 912
	021 Move X19, 0x1239000
	022 Move W9, [X19+3611]
	023 Move X29, X4
	024 Move X22, X3
	025 Move X20, X2
	026 Move X23, X1
	027 Move X28, X8
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {49}
	032 Move X0, 0xF7A000
	033 Move X0, [X0+3648]
	034 Call 0x1C17CF4
	035 Move X0, 0xF5A000
	036 Move X0, [X0+2536]
	037 Call 0x1C17CF4
	038 Move X0, 0xF7B000
	039 Move X0, [X0+296]
	040 Call 0x1C17CF4
	041 Move X0, 0xF7D000
	042 Move X0, [X0+576]
	043 Call 0x1C17CF4
	044 Move X0, 0xF7A000
	045 Move X0, [X0+2400]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X19+3611], W8
	049 Add X0, X31, 632
	050 Move W2, 136
	051 Move W1, W31
	052 Call 0x3EB2B10
	053 Add X0, X31, 768
	054 Move W2, 144
	055 Move W1, W31
	056 Move [X31+608], X31
	057 Move [X31+600], X31
	058 Move [X31+624], W31
	059 Move [X31+616], X31
	060 Move [X31+576], X31
	061 Move [X31+568], X31
	062 Move [X31+592], W31
	063 Move [X31+584], X31
	064 Move [X31+536], X31
	065 Move [X31+528], X31
	066 Move [X31+552], W31
	067 Move [X31+544], X31
	068 Move [X31+496], X31
	069 Move [X31+504], X31
	070 Move [X31+520], W31
	071 Move [X31+512], X31
	072 Add X25, X31, 768
	073 Call 0x3EB2B10
	074 Move X1, [X20]
	075 Move X0, X23
	076 Move X2, X31
	077 Call ReadWriteTransformHandle.Bind, X0, X1
	078 Move [X31+768], X0
	079 Move [X31+776], W1
	080 Move X0, [X20]
	081 Compare X0, 0
	082 JumpIfEqual {403}
	083 Move X26, 0xF7A000
	084 Move X27, 0xF7C000
	085 Move X21, 0xF7A000
	086 Move X26, [X26+2400]
	087 Move X27, [X27+576]
	088 Move X21, [X21+296]
	089 Move X1, X31
	090 Add X19, X31, 768
	091 Call Transform.get_parent, X0
	092 Move X1, X0
	093 Add X8, X31, 224
	094 Move X0, X23
	095 Move X2, X31
	096 Call ReadOnlyTransformHandle.Bind, X0, X1
	097 Move V0, [X31+14]
	098 Move X8, [X31+240]
	099 Add X24, X20, 8
	100 Add X0, X31, 632
	101 Move W2, 136
	102 Move X1, X24
	103 Move [X19+12], V0
	104 Move [X19+28], X8
	105 Call 0x3EB2AC0
	106 Add X0, X31, 360
	107 Move W2, 136
	108 Move X1, X24
	109 Call 0x3EB2AC0
	110 Add X3, X25, 40
	111 Add X2, X31, 360
	112 Move X0, X23
	113 Move X1, X22
	114 Move X4, X31
	115 Call WeightedTransformArrayBinder.BindReadOnlyTransforms, X0, X1, X2, X3
	116 Add X0, X31, 224
	117 Add X1, X31, 632
	118 Move W2, 136
	119 Call 0x3EB2AC0
	120 Move X8, [X29+32]
	121 Move X0, X20
	122 Move X8, [X8+192]
	123 Move X1, [X8+32]
	124 Call MultiParentConstraintData.UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_sourceObjectsProperty, X0
	125 Move X24, X0
	126 Add X0, X31, 88
	127 Add X1, X31, 224
	128 Move W2, 136
	129 Add X25, X25, 56
	130 Call 0x3EB2AC0
	131 Add X2, X31, 88
	132 Move X0, X23
	133 Move X1, X22
	134 Move X3, X24
	135 Move X4, X25
	136 Move X5, X31
	137 Call WeightedTransformArrayBinder.BindWeights, X0, X1, X2, X3, X4
	138 Move X0, [X26]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move W22, [X31+632]
	144 Move X4, [X27]
	145 Add X0, X31, 72
	146 Move W2, 4
	147 Move W1, W22
	148 Move W3, W31
	149 Move [X31+72], X31
	150 Move [X31+80], X31
	151 Call 0x31A7760, X0, X1, X2, X3
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 Move X4, [X21]
	154 Add X0, X31, 56
	155 Move W2, 4
	156 Move W1, W22
	157 Move W3, W31
	158 Move [X19+72], V0
	159 Move [X31+56], X31
	160 Move [X31+64], X31
	161 Call NativeArray`1<Single>..ctor, X0, X1, X2, X3
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 Move [X19+88], V0
	164 Move X0, [X20]
	165 Compare X0, 0
	166 JumpIfEqual {403}
	167 Move X1, X31
	168 Call Transform.get_position, X0
	169 Move X0, [X20]
	170 Compare X0, 0
	171 JumpIfEqual {403}
	172 Move [X31+8], X29
	173 Move [X31+920], X28
	174 Move X22, 0xF79000
	175 Move X22, [X22+3648]
	176 Move X1, X31
	177 Move V8, V0
	178 Move V9, V1
	179 Move V10, V2
	180 Call Transform.get_rotation, X0
	181 Move X0, [X22]
	182 Move V11, V0
	183 Move V12, V1
	184 Move V13, V2
	185 Move W8, [X0+224]
	186 Move V14, V3
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Add X0, X31, 600
	191 Move V0, V8
	192 Move V1, V9
	193 Move V2, V10
	194 Move V3, V11
	195 Move V4, V12
	196 Move V5, V13
	197 Move V6, V14
	198 Move X1, X31
	199 Add X27, X31, 496
	200 Add X28, X31, 224
	201 Call AffineTransform..ctor, X0, X1, X2
	202 Add X8, X31, 224
	203 Add X9, X31, 528
	204 Move X29, X31
	205 Move X23, X31
	206 Move X19, 0x1237000
	207 Add X25, X8, 12
	208 Add X21, X9, 12
	209 Move X0, [X26]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 NotImplemented "Instruction LDRSW not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move X0, [X26]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Add X0, X31, 632
	222 Move W1, W23
	223 Move X2, X31
	224 Call WeightedTransformArray.get_Item, X0, X1
	225 Compare X0, 0
	226 JumpIfEqual {403}
	227 Move X1, X31
	228 Move X24, X0
	229 Call Transform.get_position, X0
	230 Move X0, X24
	231 Move X1, X31
	232 Move V8, V0
	233 Move V9, V1
	234 Move V10, V2
	235 Call Transform.get_rotation, X0
	236 Move X0, [X22]
	237 Move V11, V0
	238 Move V12, V1
	239 Move V13, V2
	240 Move W8, [X0+224]
	241 Move V14, V3
	242 Compare W8, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17DFC
	245 Add X0, X31, 568
	246 Move V0, V8
	247 Move V1, V9
	248 Move V2, V10
	249 Move V3, V11
	250 Move V4, V12
	251 Move V5, V13
	252 Move V6, V14
	253 Move X1, X31
	254 Call AffineTransform..ctor, X0, X1, X2
	255 Move W8, [X19+1576]
	256 Compare W8, 0
	257 JumpIfNotEqual {262}
	258 Move X0, X22
	259 Call 0x1C17CF4
	260 Move W8, 1
	261 Move [X19+1576], W8
	262 Move X0, [X22]
	263 Move W8, [X0+224]
	264 Compare W8, 0
	265 JumpIfNotEqual {268}
	266 Call 0x1C17DFC
	267 Move X0, [X22]
	268 Move X8, [X0+184]
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction LDUR not yet implemented."
	271 Add X0, X31, 568
	272 NotImplemented "Instruction LDUR not yet implemented."
	273 Move V2, [X8]
	274 Add X8, X31, 224
	275 Add X1, X31, 16
	276 Move X2, X31
	277 Move [X31+1], V0
	278 Move [X27+44], V1
	279 Move [X31+33], V2
	280 Move [X31+28], V3
	281 Call AffineTransform.InverseMul, X0, X1
	282 Move V0, [X31+14]
	283 NotImplemented "Instruction LDUR not yet implemented."
	284 Move [X31+31], V0
	285 Move [X27+12], V1
	286 Move W8, [X20+150]
	287 Compare W8, 0
	288 JumpIfEqual {293}
	289 Move X8, [X31+496]
	290 Move W9, [X31+504]
	291 Move [X31+528], X8
	292 Move [X31+536], W9
	293 Move W8, [X20+151]
	294 Compare W8, 0
	295 JumpIfEqual {302}
	296 Move V0, [X31+31]
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 Move [X31+14], V0
	299 Move [X28+12], V1
	300 Move V0, [X25]
	301 Move [X21], V0
	302 Move X8, [X31+840]
	303 NotImplemented "Instruction LDUR not yet implemented."
	304 Move V1, [X31+33]
	305 Add X23, X23, 1
	306 Add X8, X8, X29
	307 Add X29, X29, 28
	308 Move [X8+12], V0
	309 Move [X8], V1
	310 Move X19, [X31+8]
	311 Move X0, X20
	312 Move X8, [X19+32]
	313 Move X8, [X8+192]
	314 Move X1, [X8+56]
	315 Call MultiParentConstraintData.get_constrainedPositionXAxis, X0
	316 Move X8, 0xF59000
	317 Move X8, [X8+2536]
	318 Move W22, W0
	319 Move X8, [X8]
	320 Move W9, [X8+224]
	321 Compare W9, 0
	322 JumpIfNotEqual {325}
	323 Move X0, X8
	324 Call 0x1C17DFC
	325 And W0, W22, 1
	326 Move X1, X31
	327 Call Convert.ToSingle, X0
	328 Move X8, [X19+32]
	329 Move X0, X20
	330 Move V8, V0
	331 Move X8, [X8+192]
	332 Move X1, [X8+64]
	333 Call MultiParentConstraintData.get_constrainedPositionYAxis, X0
	334 And W0, W0, 1
	335 Move X1, X31
	336 Call Convert.ToSingle, X0
	337 Move X8, [X19+32]
	338 Move X0, X20
	339 Move V9, V0
	340 Move X8, [X8+192]
	341 Move X1, [X8+72]
	342 Call MultiParentConstraintData.get_constrainedPositionZAxis, X0
	343 And W0, W0, 1
	344 Move X1, X31
	345 Call Convert.ToSingle, X0
	346 Move [X31+872], S8
	347 Move [X31+876], S9
	348 Move [X31+880], S0
	349 Move X8, [X19+32]
	350 Move X0, X20
	351 Move X8, [X8+192]
	352 Move X1, [X8+80]
	353 Call MultiParentConstraintData.get_constrainedRotationXAxis, X0
	354 And W0, W0, 1
	355 Move X1, X31
	356 Call Convert.ToSingle, X0
	357 Move X8, [X19+32]
	358 Move X0, X20
	359 Move V8, V0
	360 Move X8, [X8+192]
	361 Move X1, [X8+88]
	362 Call MultiParentConstraintData.get_constrainedRotationYAxis, X0
	363 And W0, W0, 1
	364 Move X1, X31
	365 Call Convert.ToSingle, X0
	366 Move X8, [X19+32]
	367 Move X0, X20
	368 Move V9, V0
	369 Move X8, [X8+192]
	370 Move X1, [X8+96]
	371 Call MultiParentConstraintData.get_constrainedRotationZAxis, X0
	372 And W0, W0, 1
	373 Move X1, X31
	374 Call Convert.ToSingle, X0
	375 Move X0, [X31+920]
	376 Add X1, X31, 768
	377 Move W2, 144
	378 Move [X31+884], S8
	379 Move [X31+888], S9
	380 Move [X31+892], S0
	381 Call 0x3EB2AC0
	382 Add X31, X31, 912
	383 Move X20, [X31+144]
	384 Move X19, [X31+152]
	385 Move X22, [X31+128]
	386 Move X21, [X31+136]
	387 Move X24, [X31+112]
	388 Move X23, [X31+120]
	389 Move X26, [X31+96]
	390 Move X25, [X31+104]
	391 Move X28, [X31+80]
	392 Move X27, [X31+88]
	393 Move X29, [X31+64]
	394 Move X30, [X31+72]
	395 Move D9, [X31+48]
	396 Move D8, [X31+56]
	397 Move D11, [X31+32]
	398 Move D10, [X31+40]
	399 Move D13, [X31+16]
	400 Move D12, [X31+24]
	401 Move V14, [X31+160]
	402 Return X0
	403 Call 0x1C17F20

Method: System.Void Destroy(UnityEngine.Animations.Rigging.MultiParentConstraintJob job)

Disassembly:
	0x031A4540 LDUR V0, [X31 + 0x18]
	0x031A4544 LDR X4, [X28]
	0x031A4548 ADD X0, X31, 0x8
	0x031A454C MOVZ W2, 0x4
	0x031A4550 MOV W1, W22
	0x031A4554 MOV W3, W31
	0x031A4558 STUR V0, [X27 + 0x78]
	0x031A455C STP X31, X31, [X31 + 0x8]
	0x031A4560 BL 0x23E51BC
	0x031A4564 LDUR V0, [X31 + 0x8]
	0x031A4568 STUR V0, [X27 + 0x88]
	0x031A456C LDR X0, [X20]
	0x031A4570 CBZ X0, 0x31A470C
	0x031A4574 ADRP X24, 0xF58000
	0x031A4578 LDR X24, [X24 + 0x9E8]
	0x031A457C MOV X1, X31
	0x031A4580 BL 0x3C3F58C
	0x031A4584 ADRP X23, 0xF4F000
	0x031A4588 LDR X23, [X23 + 0x5A0]
	0x031A458C MOV V8.16B, V0.16B
	0x031A4590 MOV V9.16B, V1.16B
	0x031A4594 MOV V10.16B, V2.16B
	0x031A4598 MOV X25, X31
	0x031A459C MOV X22, X31
	0x031A45A0 ADRP X27, 0x1234000
	0x031A45A4 MOVZ W28, 0x1
	0x031A45A8 LDR X0, [X26]
	0x031A45AC LDR W8, [X0 + 0xE0]
	0x031A45B0 CBNZ W8, 0x31A45B8
	0x031A45B4 BL 0x1C16DFC
	0x031A45B8 LDRSW X8, [X31 + 0x1C0]
	0x031A45BC CMP X22, X8
	0x031A45C0 B.GE 0x31A4648
	0x031A45C4 LDRB W8, [X20 + 0x9F]
	0x031A45C8 CBZ W8, 0x31A4608
	0x031A45CC LDR X0, [X26]
	0x031A45D0 LDR W8, [X0 + 0xE0]
	0x031A45D4 CBNZ W8, 0x31A45DC
	0x031A45D8 BL 0x1C16DFC
	0x031A45DC ADD X0, X31, 0x1C0
	0x031A45E0 MOV W1, W22
	0x031A45E4 MOV X2, X31
	0x031A45E8 BL 0x36ECB58
	0x031A45EC CBZ X0, 0x31A470C
	0x031A45F0 MOV X1, X31
	0x031A45F4 BL 0x3C3F58C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1238000
	009 Move X23, 0xF7C000
	010 Move X22, 0xF7A000
	011 Move X21, 0xF7C000
	012 Move X20, 0xF7A000
	013 Move W8, [X24+3612]
	014 Move X23, [X23+568]
	015 Move X22, [X22+336]
	016 Move X21, [X21+584]
	017 Move X20, [X20+344]
	018 Move X19, X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xF7A000
	024 Move X0, [X0+336]
	025 Call 0x1C17CF4
	026 Move X0, 0xF7C000
	027 Move X0, [X0+568]
	028 Call 0x1C17CF4
	029 Move X0, 0xF7C000
	030 Move X0, [X0+584]
	031 Call 0x1C17CF4
	032 Move X0, 0xF7A000
	033 Move X0, [X0+344]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+3612], W8
	037 Move X1, [X23]
	038 Add X0, X19, 40
	039 Call NativeArray`1<ReadOnlyTransformHandle>.Dispose, X0
	040 Move X1, [X22]
	041 Add X0, X19, 56
	042 Call NativeArray`1<PropertyStreamHandle>.Dispose, X0
	043 Move X1, [X21]
	044 Add X0, X19, 72
	045 Call 0x31A7A1C, X0
	046 Move X1, [X20]
	047 Add X0, X19, 88
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move X30, [X31+64]
	055 Call NativeArray`1<Single>.Dispose, X0
	056 Return 

Method: System.Void .ctor()

Disassembly:
	0x031A45F8 FSUB S0, S8, S0
	0x031A45FC FSUB S1, S9, S1
	0x031A4600 FSUB S2, S10, S2
	0x031A4604 B 0x31A462C

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+104]
	004 Call AnimationJobBinder`2<MultiParentConstraintJob, MultiParentConstraintData>..ctor, X0
	005 Return 

