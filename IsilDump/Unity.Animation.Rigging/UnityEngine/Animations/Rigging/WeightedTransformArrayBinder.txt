Type: UnityEngine.Animations.Rigging.WeightedTransformArrayBinder

Method: System.Void BindReadOnlyTransforms(UnityEngine.Animator animator, UnityEngine.Component component, UnityEngine.Animations.Rigging.WeightedTransformArray weightedTransformArray, out Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadOnlyTransformHandle> transforms)

Disassembly:
	0x036EDA3C LDR W0, [X0 + 0xA4]
	0x036EDA40 B 0x36EDA44
	0x036EDA44 STP X30, X19, [X31 - 0x10]!
	0x036EDA48 CMP W0, 0x5
	0x036EDA4C B.HI 0x36EDAAC
	0x036EDA50 ADRP X9, 0xFFFFFFFFFD4AA000
	0x036EDA54 MOV W8, W0
	0x036EDA58 ADD X9, X9, 0x813
	0x036EDA5C ADR X10, 0x10
	0x036EDA60 LDRB W11, [X9, X8, LSL]
	0x036EDA64 ADD X10, X10, X11, 0x2, LSL
	0x036EDA68 BR X10
	0x036EDA6C ADRP X19, 0xCEB000
	0x036EDA70 LDRB W8, [X19 + 0xB70]
	0x036EDA74 CBNZ W8, 0x36EDA8C
	0x036EDA78 ADRP X0, 0xA06000
	0x036EDA7C LDR X0, [X0 + 0x5A0]
	0x036EDA80 BL 0x1C16CF4
	0x036EDA84 MOVZ W8, 0x1
	0x036EDA88 STRB W8, [X19 + 0xB70]
	0x036EDA8C ADRP X8, 0xA06000
	0x036EDA90 LDR X8, [X8 + 0x5A0]
	0x036EDA94 LDR X8, [X8]
	0x036EDA98 LDR X10, [X8 + 0xB8]
	0x036EDA9C ADD X8, X10, 0x3C
	0x036EDAA0 ADD X9, X10, 0x40
	0x036EDAA4 ADD X10, X10, 0x44
	0x036EDAA8 B 0x36EDBE8
	0x036EDAAC ADRP X19, 0xCEB000
	0x036EDAB0 LDRB W8, [X19 + 0x786]
	0x036EDAB4 CBNZ W8, 0x36EDACC
	0x036EDAB8 ADRP X0, 0xA06000
	0x036EDABC LDR X0, [X0 + 0x5A0]
	0x036EDAC0 BL 0x1C16CF4
	0x036EDAC4 MOVZ W8, 0x1
	0x036EDAC8 STRB W8, [X19 + 0x786]
	0x036EDACC ADRP X8, 0xA06000
	0x036EDAD0 LDR X8, [X8 + 0x5A0]
	0x036EDAD4 LDR X8, [X8]
	0x036EDAD8 LDR X10, [X8 + 0xB8]
	0x036EDADC ADD X8, X10, 0x18
	0x036EDAE0 ADD X9, X10, 0x1C
	0x036EDAE4 ADD X10, X10, 0x20
	0x036EDAE8 B 0x36EDBE8
	0x036EDAEC ADRP X19, 0xCEB000
	0x036EDAF0 LDRB W8, [X19 + 0xB6F]
	0x036EDAF4 CBNZ W8, 0x36EDB0C
	0x036EDAF8 ADRP X0, 0xA06000
	0x036EDAFC LDR X0, [X0 + 0x5A0]
	0x036EDB00 BL 0x1C16CF4
	0x036EDB04 MOVZ W8, 0x1
	0x036EDB08 STRB W8, [X19 + 0xB6F]
	0x036EDB0C ADRP X8, 0xA06000
	0x036EDB10 LDR X8, [X8 + 0x5A0]
	0x036EDB14 LDR X8, [X8]
	0x036EDB18 LDR X10, [X8 + 0xB8]
	0x036EDB1C ADD X8, X10, 0x30
	0x036EDB20 ADD X9, X10, 0x34
	0x036EDB24 ADD X10, X10, 0x38
	0x036EDB28 B 0x36EDBE8
	0x036EDB2C ADRP X19, 0xCEB000
	0x036EDB30 LDRB W8, [X19 + 0xABD]
	0x036EDB34 CBNZ W8, 0x36EDB4C
	0x036EDB38 ADRP X0, 0xA06000
	0x036EDB3C LDR X0, [X0 + 0x5A0]
	0x036EDB40 BL 0x1C16CF4
	0x036EDB44 MOVZ W8, 0x1
	0x036EDB48 STRB W8, [X19 + 0xABD]
	0x036EDB4C ADRP X8, 0xA06000
	0x036EDB50 LDR X8, [X8 + 0x5A0]
	0x036EDB54 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X22, 0xCF4000
	010 Move X23, 0xA31000
	011 Move W8, [X22+2870]
	012 Move X23, [X23+2400]
	013 Move X19, X3
	014 Move X20, X2
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xA54000
	021 Move X0, [X0+1968]
	022 Call 0x1C17CF4
	023 Move X0, 0xA31000
	024 Move X0, [X0+2400]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2870], W8
	028 Move X0, [X23]
	029 Move X22, 0xA54000
	030 Move W8, [X0+224]
	031 Move X22, [X22+1968]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W1, [X20]
	036 Move X4, [X22]
	037 Add X0, X31, 8
	038 Move W2, 4
	039 Move W3, W31
	040 Move [X31+8], X31
	041 Move [X31+16], X31
	042 Call NativeArray`1<ReadOnlyTransformHandle>..ctor, X0, X1, X2, X3
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move X24, X31
	045 Move X22, X31
	046 Move [X19], V0
	047 Move X0, [X23]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X23]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X20
	060 Move W1, W22
	061 Call WeightedTransformArray.get_Item, X0, X1
	062 Move X1, X0
	063 Add X8, X31, 8
	064 Move X0, X21
	065 Call ReadOnlyTransformHandle.Bind, X0, X1
	066 Move X8, [X19]
	067 Move X9, [X31+24]
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Add X22, X22, 1
	070 Add X8, X8, X24
	071 Add X24, X24, 24
	072 Move [X8+16], X9
	073 Move [X8], V0
	074 Move X20, [X31+80]
	075 Move X19, [X31+88]
	076 Move X22, [X31+64]
	077 Move X21, [X31+72]
	078 Move X24, [X31+48]
	079 Move X23, [X31+56]
	080 Move X30, [X31+32]
	081 Add X31, X31, 96
	082 Return 

Method: System.Void BindReadWriteTransforms(UnityEngine.Animator animator, UnityEngine.Component component, UnityEngine.Animations.Rigging.WeightedTransformArray weightedTransformArray, out Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadWriteTransformHandle> transforms)

Disassembly:
	0x036EDBBC LDR X0, [X0 + 0x5A0]
	0x036EDBC0 BL 0x1C16CF4
	0x036EDBC4 MOVZ W8, 0x1
	0x036EDBC8 STRB W8, [X19 + 0xDDE]
	0x036EDBCC ADRP X8, 0xA06000
	0x036EDBD0 LDR X8, [X8 + 0x5A0]
	0x036EDBD4 LDR X8, [X8]
	0x036EDBD8 LDR X10, [X8 + 0xB8]
	0x036EDBDC ADD X8, X10, 0x54
	0x036EDBE0 ADD X9, X10, 0x58
	0x036EDBE4 ADD X10, X10, 0x5C
	0x036EDBE8 LDR V2, [X10]
	0x036EDBEC LDR V1, [X9]
	0x036EDBF0 LDR V0, [X8]
	0x036EDBF4 LDP X30, X19, [X31], #0x10
	0x036EDBF8 RET
	0x036EDBFC LDR W0, [X0 + 0xA8]
	0x036EDC00 B 0x36EDA44
	0x036EDC04 LDR W0, [X0 + 0xAC]
	0x036EDC08 RET
	0x036EDC0C LDR W0, [X0 + 0xB8]
	0x036EDC10 B 0x36EDA44
	0x036EDC14 STR X30, [X31 - 0x20]!
	0x036EDC18 STP X20, X19, [X31 + 0x10]
	0x036EDC1C ADRP X19, 0xCF3000
	0x036EDC20 ADRP X20, 0xA53000
	0x036EDC24 LDRB W8, [X19 + 0xB4A]
	0x036EDC28 LDR X20, [X20 + 0x858]
	0x036EDC2C TBNZ X8, 0x0, 0x36EDC44
	0x036EDC30 ADRP X0, 0xA53000
	0x036EDC34 LDR X0, [X0 + 0x858]
	0x036EDC38 BL 0x1C16CF4
	0x036EDC3C MOVZ W8, 0x1
	0x036EDC40 STRB W8, [X19 + 0xB4A]
	0x036EDC44 LDR X0, [X20]
	0x036EDC48 LDP X20, X19, [X31 + 0x10]
	0x036EDC4C LDR X30, [X31], #0x20
	0x036EDC50 B 0x36ECF70
	0x036EDC54 STR X30, [X31 - 0x20]!
	0x036EDC58 STP X20, X19, [X31 + 0x10]
	0x036EDC5C ADRP X19, 0xCF3000
	0x036EDC60 ADRP X20, 0xA53000
	0x036EDC64 LDRB W8, [X19 + 0xB4B]
	0x036EDC68 LDR X20, [X20 + 0x860]
	0x036EDC6C TBNZ X8, 0x0, 0x36EDC84
	0x036EDC70 ADRP X0, 0xA53000
	0x036EDC74 LDR X0, [X0 + 0x860]
	0x036EDC78 BL 0x1C16CF4
	0x036EDC7C MOVZ W8, 0x1
	0x036EDC80 STRB W8, [X19 + 0xB4B]
	0x036EDC84 LDR X0, [X20]
	0x036EDC88 LDP X20, X19, [X31 + 0x10]
	0x036EDC8C LDR X30, [X31], #0x20
	0x036EDC90 B 0x36ECF70
	0x036EDC94 STR X30, [X31 - 0x20]!
	0x036EDC98 STP X20, X19, [X31 + 0x10]
	0x036EDC9C ADRP X19, 0xCF3000
	0x036EDCA0 ADRP X20, 0xA53000
	0x036EDCA4 LDRB W8, [X19 + 0xB4C]
	0x036EDCA8 LDR X20, [X20 + 0x868]
	0x036EDCAC TBNZ X8, 0x0, 0x36EDCC4
	0x036EDCB0 ADRP X0, 0xA53000
	0x036EDCB4 LDR X0, [X0 + 0x868]
	0x036EDCB8 BL 0x1C16CF4
	0x036EDCBC MOVZ W8, 0x1
	0x036EDCC0 STRB W8, [X19 + 0xB4C]
	0x036EDCC4 LDR X0, [X20]
	0x036EDCC8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0xCF4000
	010 Move X23, 0xA31000
	011 Move W8, [X22+2871]
	012 Move X23, [X23+2400]
	013 Move X19, X3
	014 Move X20, X2
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xA31000
	021 Move X0, [X0+2376]
	022 Call 0x1C17CF4
	023 Move X0, 0xA31000
	024 Move X0, [X0+2400]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2871], W8
	028 Move X0, [X23]
	029 Move X22, 0xA31000
	030 Move W8, [X0+224]
	031 Move X22, [X22+2376]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move W1, [X20]
	036 Move X4, [X22]
	037 Add X0, X31, 0
	038 Move W2, 4
	039 Move W3, W31
	040 Move [X31], X31
	041 Move [X31+8], X31
	042 Call NativeArray`1<ReadWriteTransformHandle>..ctor, X0, X1, X2, X3
	043 Move V0, [X31]
	044 Move X24, X31
	045 Move X22, X31
	046 Move [X19], V0
	047 Move X0, [X23]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X23]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X20
	060 Move W1, W22
	061 Call WeightedTransformArray.get_Item, X0, X1
	062 Move X1, X0
	063 Move X0, X21
	064 Call ReadWriteTransformHandle.Bind, X0, X1
	065 Move X8, [X19]
	066 Add X22, X22, 1
	067 Add X8, X8, X24
	068 Add X24, X24, 12
	069 Move [X8], X0
	070 Move [X8+8], W1
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X30, [X31+16]
	078 Add X31, X31, 80
	079 Return 

Method: System.Void BindWeights(UnityEngine.Animator animator, UnityEngine.Component component, UnityEngine.Animations.Rigging.WeightedTransformArray weightedTransformArray, System.String name, out Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> weights)

Disassembly:
	0x036EDCCC LDR X30, [X31], #0x20
	0x036EDCD0 B 0x36ECF70
	0x036EDCD4 STR X30, [X31 - 0x20]!
	0x036EDCD8 STP X20, X19, [X31 + 0x10]
	0x036EDCDC ADRP X19, 0xCF3000
	0x036EDCE0 ADRP X20, 0xA53000
	0x036EDCE4 LDRB W8, [X19 + 0xB4D]
	0x036EDCE8 LDR X20, [X20 + 0x870]
	0x036EDCEC TBNZ X8, 0x0, 0x36EDD04
	0x036EDCF0 ADRP X0, 0xA53000
	0x036EDCF4 LDR X0, [X0 + 0x870]
	0x036EDCF8 BL 0x1C16CF4
	0x036EDCFC MOVZ W8, 0x1
	0x036EDD00 STRB W8, [X19 + 0xB4D]
	0x036EDD04 LDR X0, [X20]
	0x036EDD08 LDP X20, X19, [X31 + 0x10]
	0x036EDD0C LDR X30, [X31], #0x20
	0x036EDD10 B 0x36ECF70
	0x036EDD14 STR X30, [X31 - 0x40]!
	0x036EDD18 STP X24, X23, [X31 + 0x10]
	0x036EDD1C STP X22, X21, [X31 + 0x20]
	0x036EDD20 STP X20, X19, [X31 + 0x30]
	0x036EDD24 ADRP X20, 0xCF3000
	0x036EDD28 ADRP X22, 0xA06000
	0x036EDD2C LDRB W8, [X20 + 0xB4E]
	0x036EDD30 LDR X22, [X22 + 0x598]
	0x036EDD34 MOV X19, X0
	0x036EDD38 TBNZ X8, 0x0, 0x36EDD80
	0x036EDD3C ADRP X0, 0xA06000
	0x036EDD40 LDR X0, [X0 + 0xE00]
	0x036EDD44 BL 0x1C16CF4
	0x036EDD48 ADRP X0, 0xA53000
	0x036EDD4C LDR X0, [X0 + 0x878]
	0x036EDD50 BL 0x1C16CF4
	0x036EDD54 ADRP X0, 0xA06000
	0x036EDD58 LDR X0, [X0 + 0xE18]
	0x036EDD5C BL 0x1C16CF4
	0x036EDD60 ADRP X0, 0xA06000
	0x036EDD64 LDR X0, [X0 + 0x598]
	0x036EDD68 BL 0x1C16CF4
	0x036EDD6C ADRP X0, 0xA30000
	0x036EDD70 LDR X0, [X0 + 0x960]
	0x036EDD74 BL 0x1C16CF4
	0x036EDD78 MOVZ W8, 0x1
	0x036EDD7C STRB W8, [X20 + 0xB4E]
	0x036EDD80 LDR X0, [X22]
	0x036EDD84 LDR X20, [X19]
	0x036EDD88 LDR W8, [X0 + 0xE0]
	0x036EDD8C CBNZ W8, 0x36EDD94
	0x036EDD90 BL 0x1C16DFC
	0x036EDD94 MOV X0, X20
	0x036EDD98 MOV X1, X31
	0x036EDD9C MOV X2, X31
	0x036EDDA0 BL 0x3C3883C
	0x036EDDA4 TBNZ X0, 0x0, 0x36EDF30
	0x036EDDA8 ADRP X20, 0xA30000
	0x036EDDAC LDR X20, [X20 + 0x960]
	0x036EDDB0 ADD X19, X19, 0x8
	0x036EDDB4 LDR X0, [X20]
	0x036EDDB8 LDR W8, [X0 + 0xE0]
	0x036EDDBC CBNZ W8, 0x36EDDC4
	0x036EDDC0 BL 0x1C16DFC
	0x036EDDC4 LDR W8, [X19]
	0x036EDDC8 CBZ W8, 0x36EDF30
	0x036EDDCC LDR X0, [X20]
	0x036EDDD0 LDR W8, [X0 + 0xE0]
	0x036EDDD4 CBNZ W8, 0x36EDDDC
	0x036EDDD8 BL 0x1C16DFC
	0x036EDDDC MOV X0, X19
	0x036EDDE0 BL 0x36EE038
	0x036EDDE4 MOV X19, X0
	0x036EDDE8 CBZ X0, 0x36EDF6C
	0x036EDDEC ADRP X23, 0xA06000
	0x036EDDF0 ADRP X24, 0xA53000
	0x036EDDF4 LDR X23, [X23 + 0xE18]
	0x036EDDF8 LDR X24, [X24 + 0x878]
	0x036EDDFC LDR X8, [X19]
	0x036EDE00 LDR X1, [X23]
	0x036EDE04 LDRH W9, [X8 + 0x12E]
	0x036EDE08 CBZ X9, 0x36EDE2C
	0x036EDE0C LDR X10, [X8 + 0xB0]
	0x036EDE10 ADD X10, X10, 0x8
	0x036EDE14 LDUR X11, [X10 - 0x8]
	0x036EDE18 CMP X11, X1
	0x036EDE1C B.EQ 0x36EDE3C
	0x036EDE20 SUBS X9, X9, 0x1
	0x036EDE24 ADD X10, X10, 0x10
	0x036EDE28 B.NE 0x36EDE14
	0x036EDE2C MOV X0, X19
	0x036EDE30 MOV W2, W31
	0x036EDE34 BL 0x1C5C788
	0x036EDE38 B 0x36EDE48
	0x036EDE3C LDRSW X9, [X10]
	0x036EDE40 ADD X8, X8, X9, 0x4, LSL
	0x036EDE44 ADD X0, X8, 0x138
	0x036EDE48 LDP X8, X1, [X0]
	0x036EDE4C MOV X0, X19
	0x036EDE50 BLR X8
	0x036EDE54 MOV W21, W0
	0x036EDE58 TBZ X0, 0x0, 0x36EDEDC
	0x036EDE5C LDR X8, [X19]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X24, 0xCF4000
	015 Move X26, 0xA31000
	016 Move W8, [X24+2872]
	017 Move X26, [X26+2400]
	018 Move X19, X4
	019 Move X20, X3
	020 Move X21, X2
	021 Move X22, X1
	022 Move X23, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0xA31000
	028 Move X0, [X0+304]
	029 Call 0x1C17CF4
	030 Move X0, 0xA31000
	031 Move X0, [X0+2400]
	032 Call 0x1C17CF4
	033 Move X0, 0xA54000
	034 Move X0, [X0+1976]
	035 Call 0x1C17CF4
	036 Move X0, 0xA54000
	037 Move X0, [X0+1984]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X24+2872], W8
	041 Move X0, [X26]
	042 Move [X31+28], W31
	043 Move X24, 0xA31000
	044 Move W8, [X0+224]
	045 Move X24, [X24+304]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X27, 0xA54000
	050 Move X27, [X27+1984]
	051 Move W1, [X21]
	052 Move X4, [X24]
	053 Move X28, 0xA54000
	054 Move X28, [X28+1976]
	055 Add X0, X31, 8
	056 Move W2, 4
	057 Move W3, W31
	058 Move [X31+8], X31
	059 Move [X31+16], X31
	060 Call NativeArray`1<PropertyStreamHandle>..ctor, X0, X1, X2, X3
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move W24, W31
	063 Move [X19], V0
	064 Move [X31+28], W31
	065 Move X0, [X26]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move W8, [X21]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Compare X22, 0
	073 JumpIfEqual {119}
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Move X0, X22
	076 Move X1, X31
	077 Call Component.get_transform, X0
	078 Move X24, X0
	079 Move X0, X22
	080 Move X1, X31
	081 Call "il2cpp_vm_object_is_inst", X0
	082 Move X25, X0
	083 Add X0, X31, 28
	084 Move X1, X31
	085 Call Int32.ToString, X0
	086 Move X1, [X27]
	087 Move X3, [X28]
	088 Move X2, X0
	089 Move X0, X20
	090 Move X4, X31
	091 Call String.Concat, X0, X1, X2, X3
	092 Move X3, X0
	093 Move X0, X23
	094 Move X1, X24
	095 Move X2, X25
	096 Move X4, X31
	097 Call AnimatorJobExtensions.BindStreamProperty, X0, X1, X2, X3
	098 Move X8, [X19]
	099 Add X8, X8, X29
	100 Move [X8], X0
	101 Move [X8+8], X1
	102 Move W8, [X31+28]
	103 Add W24, W8, 1
	104 Move [X31+28], W24
	105 Move X20, [X31+112]
	106 Move X19, [X31+120]
	107 Move X22, [X31+96]
	108 Move X21, [X31+104]
	109 Move X24, [X31+80]
	110 Move X23, [X31+88]
	111 Move X26, [X31+64]
	112 Move X25, [X31+72]
	113 Move X28, [X31+48]
	114 Move X27, [X31+56]
	115 Move X29, [X31+32]
	116 Move X30, [X31+40]
	117 Add X31, X31, 128
	118 Return 
	119 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x036EDE60 LDR X1, [X24]
	0x036EDE64 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

