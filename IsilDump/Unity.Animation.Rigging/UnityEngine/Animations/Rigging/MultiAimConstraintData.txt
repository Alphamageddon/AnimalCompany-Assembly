Type: UnityEngine.Animations.Rigging.MultiAimConstraintData

Method: UnityEngine.Transform get_constrainedObject()

Disassembly:
	0x036EE914 TBNZ X8, 0x0, 0x36EE938
	0x036EE918 ADRP X0, 0xA52000

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_constrainedObject(UnityEngine.Transform value)

Disassembly:
	0x036EE91C LDR X0, [X0 + 0x8B0]
	0x036EE920 BL 0x1C16CF4

ISIL:
	001 Move [X0], X1
	002 Return 

Method: UnityEngine.Animations.Rigging.WeightedTransformArray get_sourceObjects()

Disassembly:
	0x036EE924 ADRP X0, 0xA52000
	0x036EE928 LDR X0, [X0 + 0x8A8]
	0x036EE92C BL 0x1C16CF4
	0x036EE930 MOVZ W8, 0x1

ISIL:
	001 Add X1, X0, 8
	002 Move W2, 136
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void set_sourceObjects(UnityEngine.Animations.Rigging.WeightedTransformArray value)

Disassembly:
	0x036EE934 STRB W8, [X21 + 0xB56]
	0x036EE938 LDR X0, [X20]
	0x036EE93C ADRP X20, 0xA52000
	0x036EE940 LDR W8, [X0 + 0xE0]
	0x036EE944 LDR X20, [X20 + 0x8B0]
	0x036EE948 CBNZ W8, 0x36EE950

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 8
	003 Move W2, 136
	004 Call 0x3EB2B30
	005 Move X30, [X31+16]
	006 Return 

Method: System.Boolean get_maintainOffset()

Disassembly:
	0x036EE94C BL 0x1C16DFC
	0x036EE950 LDR X1, [X20]

ISIL:
	001 Move W0, [X0+188]
	002 Return X0

Method: System.Void set_maintainOffset(System.Boolean value)

Disassembly:
	0x036EE954 MOV X0, X19
	0x036EE958 LDP X20, X19, [X31 + 0x10]
	0x036EE95C LDP X30, X21, [X31], #0x20

ISIL:
	001 And W8, W1, 1
	002 Move [X0+188], W8
	003 Return 

Method: UnityEngine.Vector3 get_offset()

Disassembly:
	0x036EE960 B 0x25CB810
	0x036EE964 LDR X0, [X0]
	0x036EE968 RET

ISIL:
	001 Move S0, [X0+144]
	002 Move S1, [X0+148]
	003 Move V2, [X0+152]
	004 Return X0

Method: System.Void set_offset(UnityEngine.Vector3 value)

Disassembly:
	0x036EE96C STR X1, [X0]
	0x036EE970 RET
	0x036EE974 ADD X1, X0, 0x8

ISIL:
	001 Move [X0+144], S0
	002 Move [X0+152], S1
	003 Move [X0+152], S2
	004 Return 

Method: UnityEngine.Vector2 get_limits()

Disassembly:
	0x036EE978 MOVZ W2, 0x88
	0x036EE97C MOV X0, X8

ISIL:
	001 Move S0, [X0+156]
	002 Move S1, [X0+160]
	003 Return X0

Method: System.Void set_limits(UnityEngine.Vector2 value)

Disassembly:
	0x036EE980 B 0x3EB1AC0
	0x036EE984 STR X30, [X31 - 0x10]!
	0x036EE988 ADD X0, X0, 0x8
	0x036EE98C MOVZ W2, 0x88
	0x036EE990 BL 0x3EB1B30
	0x036EE994 LDR X30, [X31], #0x10
	0x036EE998 RET
	0x036EE99C LDRB W0, [X0 + 0x9F]
	0x036EE9A0 RET
	0x036EE9A4 AND W8, W1, 0x1
	0x036EE9A8 STRB W8, [X0 + 0x9F]
	0x036EE9AC RET

ISIL:
	001 Move W8, 0x43340000
	002 Move W9, 0xC3340000
	003 Move S2, W8
	004 Move S4, W9
	005 NotImplemented "Instruction FMIN not yet implemented."
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 NotImplemented "Instruction FMIN not yet implemented."
	008 NotImplemented "Instruction FCSEL not yet implemented."
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 NotImplemented "Instruction FCSEL not yet implemented."
	011 Move [X0+156], S2
	012 Move [X0+164], S0
	013 Return 

Method: UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis get_aimAxis()

Disassembly:
	0x036EE9B0 LDP S0, S1, [X0 + 0x90]
	0x036EE9B4 LDR V2, [X0 + 0x98]

ISIL:
	001 Move W0, [X0+164]
	002 Return X0

Method: System.Void set_aimAxis(UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis value)

Disassembly:
	0x036EE9B8 RET
	0x036EE9BC STP S0, S1, [X0 + 0x90]

ISIL:
	001 Move [X0+164], W1
	002 Return 

Method: UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis get_upAxis()

Disassembly:
	0x036EE9C0 STR S2, [X0 + 0x98]
	0x036EE9C4 RET

ISIL:
	001 Move W0, [X0+168]
	002 Return X0

Method: System.Void set_upAxis(UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis value)

Disassembly:
	0x036EE9C8 LDRB W0, [X0 + 0x9C]
	0x036EE9CC RET

ISIL:
	001 Move [X0+168], W1
	002 Return 

Method: UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType get_worldUpType()

Disassembly:
	0x036EE9D0 AND W8, W1, 0x1
	0x036EE9D4 STRB W8, [X0 + 0x9C]

ISIL:
	001 Move W0, [X0+172]
	002 Return X0

Method: System.Void set_worldUpType(UnityEngine.Animations.Rigging.MultiAimConstraintData/WorldUpType value)

Disassembly:
	0x036EE9D8 RET
	0x036EE9DC LDRB W0, [X0 + 0x9D]

ISIL:
	001 Move [X0+172], W1
	002 Return 

Method: UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis get_worldUpAxis()

Disassembly:
	0x036EE9E0 RET
	0x036EE9E4 AND W8, W1, 0x1

ISIL:
	001 Move W0, [X0+184]
	002 Return X0

Method: System.Void set_worldUpAxis(UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis value)

Disassembly:
	0x036EE9E8 STRB W8, [X0 + 0x9D]
	0x036EE9EC RET

ISIL:
	001 Move [X0+184], W1
	002 Return 

Method: UnityEngine.Transform get_worldUpObject()

Disassembly:
	0x036EE9F0 LDRB W0, [X0 + 0x9E]
	0x036EE9F4 RET

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_worldUpObject(UnityEngine.Transform value)

Disassembly:
	0x036EE9F8 AND W8, W1, 0x1
	0x036EE9FC STRB W8, [X0 + 0x9E]

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.Boolean get_constrainedXAxis()

Disassembly:
	0x036EEA00 RET
	0x036EEA04 STR X30, [X31 - 0x20]!

ISIL:
	001 Move W0, [X0+189]
	002 Return X0

Method: System.Void set_constrainedXAxis(System.Boolean value)

Disassembly:
	0x036EEA08 STP X20, X19, [X31 + 0x10]
	0x036EEA0C ADRP X19, 0xCF2000
	0x036EEA10 ADRP X20, 0xA52000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+189], W8
	003 Return 

Method: System.Boolean get_constrainedYAxis()

Disassembly:
	0x036EEA14 LDRB W8, [X19 + 0xB57]
	0x036EEA18 LDR X20, [X20 + 0x858]

ISIL:
	001 Move W0, [X0+190]
	002 Return X0

Method: System.Void set_constrainedYAxis(System.Boolean value)

Disassembly:
	0x036EEA1C TBNZ X8, 0x0, 0x36EEA34
	0x036EEA20 ADRP X0, 0xA52000
	0x036EEA24 LDR X0, [X0 + 0x858]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+190], W8
	003 Return 

Method: System.Boolean get_constrainedZAxis()

Disassembly:
	0x036EEA28 BL 0x1C16CF4
	0x036EEA2C MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+191]
	002 Return X0

Method: System.Void set_constrainedZAxis(System.Boolean value)

Disassembly:
	0x036EEA30 STRB W8, [X19 + 0xB57]
	0x036EEA34 LDR X0, [X20]
	0x036EEA38 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+191], W8
	003 Return 

Method: UnityEngine.Vector3 UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_aimAxis()

Disassembly:
	0x036EEA3C LDR X30, [X31], #0x20
	0x036EEA40 B 0x36ECF70

ISIL:
	001 Move W0, [X0+164]

Method: UnityEngine.Vector3 UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_upAxis()

Disassembly:
	0x036EEBFC MOV X0, X19
	0x036EEC00 MOV W2, W31

ISIL:
	001 Move W0, [X0+168]
	002 Call MultiAimConstraintData.Convert, X0
	003 Return X0

Method: System.Int32 UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_worldUpType()

Disassembly:
	0x036EEC04 BL 0x1C5C788
	0x036EEC08 B 0x36EEC18

ISIL:
	001 Move W0, [X0+172]
	002 Return X0

Method: UnityEngine.Vector3 UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_worldUpAxis()

Disassembly:
	0x036EEC0C LDRSW X9, [X10]
	0x036EEC10 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move W0, [X0+184]
	002 Call MultiAimConstraintData.Convert, X0
	003 Return X0

Method: System.String UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_offsetVector3Property()

Disassembly:
	0x036EEC14 ADD X0, X8, 0x138
	0x036EEC18 LDP X8, X1, [X0]
	0x036EEC1C MOV X0, X19
	0x036EEC20 BLR X8
	0x036EEC24 MOV X20, X0
	0x036EEC28 LDR X0, [X22]
	0x036EEC2C LDR W8, [X0 + 0xE0]
	0x036EEC30 CBNZ W8, 0x36EEC38
	0x036EEC34 BL 0x1C16DFC
	0x036EEC38 MOV X0, X20
	0x036EEC3C MOV X1, X31
	0x036EEC40 MOV X2, X31
	0x036EEC44 BL 0x3C3883C
	0x036EEC48 TBZ X0, 0x0, 0x36EEB6C
	0x036EEC4C MOV X20, X31
	0x036EEC50 EOR W21, W21, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCF3000
	005 Move X20, 0xA53000
	006 Move W8, [X19+2890]
	007 Move X20, [X20+2136]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA53000
	013 Move X0, [X0+2136]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2890], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	022 Return X0

Method: System.String UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_minLimitFloatProperty()

Disassembly:
	0x036EEC54 CBZ X19, 0x36EECC0
	0x036EEC58 ADRP X10, 0xA05000
	0x036EEC5C LDR X8, [X19]
	0x036EEC60 LDR X10, [X10 + 0xE00]
	0x036EEC64 LDRH W9, [X8 + 0x12E]
	0x036EEC68 LDR X1, [X10]
	0x036EEC6C CBZ X9, 0x36EEC90
	0x036EEC70 LDR X10, [X8 + 0xB0]
	0x036EEC74 ADD X10, X10, 0x8
	0x036EEC78 LDUR X11, [X10 - 0x8]
	0x036EEC7C CMP X11, X1
	0x036EEC80 B.EQ 0x36EECA8
	0x036EEC84 SUBS X9, X9, 0x1
	0x036EEC88 ADD X10, X10, 0x10
	0x036EEC8C B.NE 0x36EEC78
	0x036EEC90 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCF3000
	005 Move X20, 0xA53000
	006 Move W8, [X19+2891]
	007 Move X20, [X20+2144]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA53000
	013 Move X0, [X0+2144]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2891], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	022 Return X0

Method: System.String UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_maxLimitFloatProperty()

Disassembly:
	0x036EEC94 MOV W2, W31
	0x036EEC98 BL 0x1C5C788
	0x036EEC9C B 0x36EECB4
	0x036EECA0 MOV W21, W31
	0x036EECA4 B 0x36EECC4
	0x036EECA8 LDRSW X9, [X10]
	0x036EECAC ADD X8, X8, X9, 0x4, LSL
	0x036EECB0 ADD X0, X8, 0x138
	0x036EECB4 LDP X8, X1, [X0]
	0x036EECB8 MOV X0, X19
	0x036EECBC BLR X8
	0x036EECC0 CBNZ X20, 0x36EECE0
	0x036EECC4 AND W0, W21, 0x1
	0x036EECC8 LDP X20, X19, [X31 + 0x30]
	0x036EECCC LDP X22, X21, [X31 + 0x20]
	0x036EECD0 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCF3000
	005 Move X20, 0xA53000
	006 Move W8, [X19+2892]
	007 Move X20, [X20+2152]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA53000
	013 Move X0, [X0+2152]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2892], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	022 Return X0

Method: System.String UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_sourceObjectsProperty()

Disassembly:
	0x036EECD4 LDR X30, [X31], #0x40
	0x036EECD8 RET
	0x036EECDC BL 0x1C16F20
	0x036EECE0 MOV X0, X20
	0x036EECE4 BL 0x1C16F18
	0x036EECE8 B 0x36EECF8
	0x036EECEC B 0x36EECF8
	0x036EECF0 B 0x36EECF8
	0x036EECF4 B 0x36EECF8
	0x036EECF8 MOV X21, X0
	0x036EECFC CMP W1, 0x1
	0x036EED00 B.NE 0x36EED20
	0x036EED04 MOV X0, X21
	0x036EED08 BL 0x3EB1AD0
	0x036EED0C LDR X20, [X0]
	0x036EED10 BL 0x3EB1AE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCF3000
	005 Move X20, 0xA53000
	006 Move W8, [X19+2893]
	007 Move X20, [X20+2160]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA53000
	013 Move X0, [X0+2160]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2893], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	022 Return X0

Method: System.Boolean UnityEngine.Animations.Rigging.IAnimationJobData.IsValid()

Disassembly:
	0x036EED14 MOVZ W21, 0x1
	0x036EED18 CBNZ X19, 0x36EEC58
	0x036EED1C B 0x36EECC0
	0x036EED20 MOV X20, X31
	0x036EED24 B 0x36EED2C
	0x036EED28 MOV X21, X0
	0x036EED2C CBZ X19, 0x36EED90
	0x036EED30 ADRP X10, 0xA05000
	0x036EED34 LDR X8, [X19]
	0x036EED38 LDR X10, [X10 + 0xE00]
	0x036EED3C LDRH W9, [X8 + 0x12E]
	0x036EED40 LDR X1, [X10]
	0x036EED44 CBZ X9, 0x36EED68
	0x036EED48 LDR X10, [X8 + 0xB0]
	0x036EED4C ADD X10, X10, 0x8
	0x036EED50 LDUR X11, [X10 - 0x8]
	0x036EED54 CMP X11, X1
	0x036EED58 B.EQ 0x36EED78
	0x036EED5C SUBS X9, X9, 0x1
	0x036EED60 ADD X10, X10, 0x10
	0x036EED64 B.NE 0x36EED50
	0x036EED68 MOV X0, X19
	0x036EED6C MOV W2, W31
	0x036EED70 BL 0x1C5C788
	0x036EED74 B 0x36EED84
	0x036EED78 LDRSW X9, [X10]
	0x036EED7C ADD X8, X8, X9, 0x4, LSL
	0x036EED80 ADD X0, X8, 0x138
	0x036EED84 LDP X8, X1, [X0]
	0x036EED88 MOV X0, X19
	0x036EED8C BLR X8
	0x036EED90 CBNZ X20, 0x36EED9C
	0x036EED94 MOV X0, X21
	0x036EED98 BL 0x1D2C690
	0x036EED9C MOV X0, X20
	0x036EEDA0 BL 0x1C16F18
	0x036EEDA4 BL 0x1990590
	0x036EEDA8 STP X30, X21, [X31 - 0x20]!
	0x036EEDAC STP X20, X19, [X31 + 0x10]
	0x036EEDB0 ADRP X21, 0xCF2000
	0x036EEDB4 ADRP X20, 0xA2F000
	0x036EEDB8 LDRB W8, [X21 + 0xB5A]
	0x036EEDBC LDR X20, [X20 + 0x960]
	0x036EEDC0 MOV X19, X0
	0x036EEDC4 TBNZ X8, 0x0, 0x36EEDDC
	0x036EEDC8 ADRP X0, 0xA2F000
	0x036EEDCC LDR X0, [X0 + 0x960]
	0x036EEDD0 BL 0x1C16CF4
	0x036EEDD4 MOVZ W8, 0x1
	0x036EEDD8 STRB W8, [X21 + 0xB5A]
	0x036EEDDC MOVZ W8, 0x101
	0x036EEDE0 MOVZ W9, 0x1
	0x036EEDE4 STR X31, [X19]
	0x036EEDE8 STRH W8, [X19 + 0x9C]
	0x036EEDEC STRB W9, [X19 + 0x9E]
	0x036EEDF0 LDR X0, [X20]
	0x036EEDF4 LDR W8, [X0 + 0xE0]
	0x036EEDF8 CBNZ W8, 0x36EEE00
	0x036EEDFC BL 0x1C16DFC
	0x036EEE00 STR W31, [X19 + 0x8]
	0x036EEE04 STRB W31, [X19 + 0x9F]
	0x036EEE08 ADRP X20, 0xCEA000
	0x036EEE0C LDRB W8, [X20 + 0x783]
	0x036EEE10 CBNZ W8, 0x36EEE28
	0x036EEE14 ADRP X0, 0xA05000
	0x036EEE18 LDR X0, [X0 + 0x5A0]
	0x036EEE1C BL 0x1C16CF4
	0x036EEE20 MOVZ W8, 0x1
	0x036EEE24 STRB W8, [X20 + 0x783]
	0x036EEE28 ADRP X8, 0xA05000
	0x036EEE2C LDR X8, [X8 + 0x5A0]
	0x036EEE30 LDR X8, [X8]
	0x036EEE34 LDR X8, [X8 + 0xB8]
	0x036EEE38 LDR V0, [X8]
	0x036EEE3C LDR V1, [X8 + 0x8]
	0x036EEE40 STR D0, [X19 + 0x90]
	0x036EEE44 STR S1, [X19 + 0x98]
	0x036EEE48 LDP X20, X19, [X31 + 0x10]
	0x036EEE4C LDP X30, X21, [X31], #0x20
	0x036EEE50 RET
	0x036EEE54 SUB X31, X31, 0xC0
	0x036EEE58 STR X30, [X31 + 0x90]
	0x036EEE5C STP X22, X21, [X31 + 0xA0]
	0x036EEE60 STP X20, X19, [X31 + 0xB0]
	0x036EEE64 ADRP X21, 0xCF2000
	0x036EEE68 ADRP X22, 0xA52000
	0x036EEE6C ADRP X20, 0xA2F000
	0x036EEE70 LDRB W8, [X21 + 0xB5B]
	0x036EEE74 LDR X22, [X22 + 0x8B8]
	0x036EEE78 LDR X20, [X20 + 0x960]
	0x036EEE7C MOV X19, X0
	0x036EEE80 TBNZ X8, 0x0, 0x36EEEA4
	0x036EEE84 ADRP X0, 0xA52000
	0x036EEE88 LDR X0, [X0 + 0x8B8]
	0x036EEE8C BL 0x1C16CF4
	0x036EEE90 ADRP X0, 0xA2F000
	0x036EEE94 LDR X0, [X0 + 0x960]
	0x036EEE98 BL 0x1C16CF4
	0x036EEE9C MOVZ W8, 0x1
	0x036EEEA0 STRB W8, [X21 + 0xB5B]
	0x036EEEA4 LDR X1, [X22]
	0x036EEEA8 MOV X0, X19
	0x036EEEAC BL 0x25CB8E8
	0x036EEEB0 ADD X19, X19, 0x30
	0x036EEEB4 ADD X0, X31, 0x8
	0x036EEEB8 MOVZ W2, 0x88
	0x036EEEBC MOV X1, X19
	0x036EEEC0 BL 0x3EB1AC0
	0x036EEEC4 LDR X0, [X20]
	0x036EEEC8 LDR W8, [X0 + 0xE0]
	0x036EEECC CBNZ W8, 0x36EEED4
	0x036EEED0 BL 0x1C16DFC
	0x036EEED4 ADD X0, X31, 0x8
	0x036EEED8 FMOV S0, W31
	0x036EEEDC FMOV S1, 1
	0x036EEEE0 BL 0x36EE280
	0x036EEEE4 ADD X1, X31, 0x8
	0x036EEEE8 MOVZ W2, 0x88
	0x036EEEEC MOV X0, X19
	0x036EEEF0 BL 0x3EB1AC0
	0x036EEEF4 LDP X20, X19, [X31 + 0xB0]
	0x036EEEF8 LDP X22, X21, [X31 + 0xA0]
	0x036EEEFC LDR X30, [X31 + 0x90]
	0x036EEF00 ADD X31, X31, 0xC0
	0x036EEF04 RET
	0x036EEF08 STP X30, X21, [X31 - 0x20]!
	0x036EEF0C STP X20, X19, [X31 + 0x10]
	0x036EEF10 ADRP X21, 0xCF2000
	0x036EEF14 ADRP X20, 0xA52000
	0x036EEF18 LDRB W8, [X21 + 0xB5C]
	0x036EEF1C LDR X20, [X20 + 0x8C0]
	0x036EEF20 MOV X19, X0
	0x036EEF24 TBNZ X8, 0x0, 0x36EEF48
	0x036EEF28 ADRP X0, 0xA52000
	0x036EEF2C LDR X0, [X0 + 0x8C8]
	0x036EEF30 BL 0x1C16CF4
	0x036EEF34 ADRP X0, 0xA52000
	0x036EEF38 LDR X0, [X0 + 0x8C0]
	0x036EEF3C BL 0x1C16CF4
	0x036EEF40 MOVZ W8, 0x1
	0x036EEF44 STRB W8, [X21 + 0xB5C]
	0x036EEF48 LDR X0, [X20]
	0x036EEF4C ADRP X20, 0xA52000
	0x036EEF50 LDR W8, [X0 + 0xE0]
	0x036EEF54 LDR X20, [X20 + 0x8C8]
	0x036EEF58 CBNZ W8, 0x36EEF60
	0x036EEF5C BL 0x1C16DFC
	0x036EEF60 LDR X1, [X20]
	0x036EEF64 MOV X0, X19
	0x036EEF68 LDP X20, X19, [X31 + 0x10]
	0x036EEF6C LDP X30, X21, [X31], #0x20
	0x036EEF70 B 0x25CBD2C
	0x036EEF74 LDR W0, [X0]
	0x036EEF78 RET
	0x036EEF7C STP X30, X21, [X31 - 0x20]!
	0x036EEF80 STP X20, X19, [X31 + 0x10]
	0x036EEF84 ADRP X21, 0xCF2000
	0x036EEF88 LDRB W8, [X21 + 0xB5D]
	0x036EEF8C MOV W19, W1
	0x036EEF90 MOV X20, X0
	0x036EEF94 TBNZ X8, 0x0, 0x36EEFAC
	0x036EEF98 ADRP X0, 0xA0C000
	0x036EEF9C LDR X0, [X0 + 0x8B8]
	0x036EEFA0 BL 0x1C16CF4
	0x036EEFA4 MOVZ W8, 0x1
	0x036EEFA8 STRB W8, [X21 + 0xB5D]
	0x036EEFAC LDR X8, [X20 + 0x8]
	0x036EEFB0 CBZ X8, 0x36EEFDC
	0x036EEFB4 LDR W8, [X8 + 0x18]
	0x036EEFB8 SUB W8, W8, 0x1
	0x036EEFBC CMP W8, W19
	0x036EEFC0 CSEL W8, W8, W19, LT
	0x036EEFC4 CMP W19, 0x0
	0x036EEFC8 CSEL W8, W31, W8, LT
	0x036EEFCC STR W8, [X20]
	0x036EEFD0 LDP X20, X19, [X31 + 0x10]
	0x036EEFD4 LDP X30, X21, [X31], #0x20
	0x036EEFD8 RET
	0x036EEFDC BL 0x1C16F20
	0x036EEFE0 STR X30, [X31 - 0x20]!
	0x036EEFE4 STP X20, X19, [X31 + 0x10]
	0x036EEFE8 ADRP X20, 0xCF2000
	0x036EEFEC LDRB W8, [X20 + 0xB5E]
	0x036EEFF0 MOV X19, X0
	0x036EEFF4 TBNZ X8, 0x0, 0x36EF018
	0x036EEFF8 ADRP X0, 0xA0C000
	0x036EEFFC LDR X0, [X0 + 0x938]
	0x036EF000 BL 0x1C16CF4
	0x036EF004 ADRP X0, 0xA0B000
	0x036EF008 LDR X0, [X0 + 0x930]
	0x036EF00C BL 0x1C16CF4
	0x036EF010 MOVZ W8, 0x1
	0x036EF014 STRB W8, [X20 + 0xB5E]
	0x036EF018 LDR X20, [X19 + 0x8]
	0x036EF01C CBNZ X20, 0x36EF048
	0x036EF020 ADRP X8, 0xA0B000
	0x036EF024 LDR X8, [X8 + 0x930]
	0x036EF028 LDR X0, [X8]
	0x036EF02C BL 0x1C16F10
	0x036EF030 ADRP X8, 0xA0B000
	0x036EF034 LDR X8, [X8 + 0x938]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xCF3000
	009 Move X22, 0xA06000
	010 Move W8, [X20+2894]
	011 Move X22, [X22+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xA06000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0xA53000
	021 Move X0, [X0+2168]
	022 Call 0x1C17CF4
	023 Move X0, 0xA06000
	024 Move X0, [X0+3608]
	025 Call 0x1C17CF4
	026 Move X0, 0xA06000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0xA30000
	030 Move X0, [X0+2400]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2894], W8
	034 Move X0, [X22]
	035 Move X20, [X19]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {154}
	048 Move X20, 0xA30000
	049 Move X20, [X20+2400]
	050 Add X19, X19, 8
	051 Move X0, [X20]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move W8, [X19]
	057 Compare W8, 0
	058 JumpIfEqual {154}
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Call WeightedTransformArray.GetEnumerator, X0
	066 Move X19, X0
	067 Compare X0, 0
	068 JumpIfEqual {173}
	069 Move X23, 0xA06000
	070 Move X24, 0xA53000
	071 Move X23, [X23+3608]
	072 Move X24, [X24+2168]
	073 Move X8, [X19]
	074 Move X1, [X23]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X19
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X19
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move W21, W0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {134}
	099 Move X8, [X19]
	100 Move X1, [X24]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X19
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X19
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X20, X0
	121 Move X0, [X22]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X0, X20
	127 Move X1, X31
	128 Move X2, X31
	129 Call Object.op_Equality, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {73}
	134 Move X20, X31
	135 Xor W21, W21, 1
	136 Compare X19, 0
	137 JumpIfEqual {162}
	138 Move X10, 0xA06000
	139 Move X8, [X19]
	140 Move X10, [X10+3584]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Move X1, [X10]
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move X0, X19
	152 Move W2, W31
	153 Call 0x1C5D788
	154 Move W21, W31
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Add X8, X8, X9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X19
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Compare X20, 0
	163 JumpIfNotEqual {174}
	164 And W0, W21, 1
	165 Move X20, [X31+48]
	166 Move X19, [X31+56]
	167 Move X22, [X31+32]
	168 Move X21, [X31+40]
	169 Move X24, [X31+16]
	170 Move X23, [X31+24]
	171 Move X30, [X31+64]
	172 Return X0
	173 Call 0x1C17F20
	174 Move X0, X20
	175 Call 0x1C17F18
	176 Move X21, X0
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X21
	179 Call 0x3EB2AD0
	180 Move X20, [X0]
	181 Call 0x3EB2AE0
	182 Move W21, 1
	183 Compare X19, 0
	184 JumpIfNotEqual {138}
	185 Move X20, X31
	186 Move X21, X0
	187 Compare X19, 0
	188 JumpIfEqual {212}
	189 Move X10, 0xA06000
	190 Move X8, [X19]
	191 Move X10, [X10+3584]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Move X1, [X10]
	194 Compare X9, 0
	195 JumpIfEqual {202}
	196 Move X10, [X8+176]
	197 Add X10, X10, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X9, X9, 1
	201 Add X10, X10, 16
	202 Move X0, X19
	203 Move W2, W31
	204 Call 0x1C5D788
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Add X8, X8, X9
	207 Add X0, X8, 312
	208 Move X8, [X0]
	209 Move X1, [X0+8]
	210 Move X0, X19
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Compare X20, 0
	213 JumpIfNotEqual {216}
	214 Move X0, X21
	215 Call 0x1D2D690
	216 Move X0, X20
	217 Call 0x1C17F18
	218 Call 0x1991590

Method: System.Void UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues()

Disassembly:
	0x036EF0A4 CMP W9, 0x0
	0x036EF0A8 CSEL W8, W31, W8, LT
	0x036EF0AC STR W8, [X19]
	0x036EF0B0 LDP X20, X19, [X31 + 0x10]
	0x036EF0B4 LDP X30, X21, [X31], #0x20
	0x036EF0B8 RET
	0x036EF0BC BL 0x1C16F20
	0x036EF0C0 STR X30, [X31 - 0x20]!
	0x036EF0C4 STP X20, X19, [X31 + 0x10]
	0x036EF0C8 ADRP X20, 0xCF1000
	0x036EF0CC LDRB W8, [X20 + 0xB60]
	0x036EF0D0 MOV X19, X0
	0x036EF0D4 TBNZ X8, 0x0, 0x36EF0EC
	0x036EF0D8 ADRP X0, 0xA51000
	0x036EF0DC LDR X0, [X0 + 0x8D0]
	0x036EF0E0 BL 0x1C16CF4
	0x036EF0E4 MOVZ W8, 0x1
	0x036EF0E8 STRB W8, [X20 + 0xB60]
	0x036EF0EC LDR X0, [X19 + 0x8]
	0x036EF0F0 CBZ X0, 0x36EF10C
	0x036EF0F4 ADRP X8, 0xA51000
	0x036EF0F8 LDR X8, [X8 + 0x8D0]
	0x036EF0FC LDP X20, X19, [X31 + 0x10]
	0x036EF100 LDR X1, [X8]
	0x036EF104 LDR X30, [X31], #0x20
	0x036EF108 B 0x301DDC4
	0x036EF10C BL 0x1C16F20
	0x036EF110 LDR W0, [X0]
	0x036EF114 RET
	0x036EF118 STR X30, [X31 - 0x20]!
	0x036EF11C STP X20, X19, [X31 + 0x10]
	0x036EF120 ADRP X19, 0xCF1000
	0x036EF124 ADRP X20, 0xA51000
	0x036EF128 LDRB W8, [X19 + 0xB61]
	0x036EF12C LDR X20, [X20 + 0x8D8]
	0x036EF130 TBNZ X8, 0x0, 0x36EF148
	0x036EF134 ADRP X0, 0xA51000
	0x036EF138 LDR X0, [X0 + 0x8D8]
	0x036EF13C BL 0x1C16CF4
	0x036EF140 MOVZ W8, 0x1
	0x036EF144 STRB W8, [X19 + 0xB61]
	0x036EF148 LDR X0, [X20]
	0x036EF14C LDP X20, X19, [X31 + 0x10]
	0x036EF150 LDR X30, [X31], #0x20
	0x036EF154 B 0x36ECF70
	0x036EF158 SUB X31, X31, 0x40
	0x036EF15C STP X30, X21, [X31 + 0x20]
	0x036EF160 STP X20, X19, [X31 + 0x30]
	0x036EF164 ADRP X20, 0xCF1000
	0x036EF168 LDRB W8, [X20 + 0xB62]
	0x036EF16C MOV X19, X0
	0x036EF170 TBNZ X8, 0x0, 0x36EF1C4
	0x036EF174 ADRP X0, 0xA0B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCF2000
	006 Move X20, 0xA2F000
	007 Move W8, [X21+2895]
	008 Move X20, [X20+2400]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA2F000
	015 Move X0, [X0+2400]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2895], W8
	019 Move X8, -46141440
	020 Move V0, [X8+1472]
	021 Move W8, 2
	022 Move [X19], X31
	023 Move [X19+172], W31
	024 Move [X19+184], W8
	025 Move [X19+164], D0
	026 Move [X19+176], X31
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move [X19+8], W31
	033 Move [X19+188], W31
	034 Move X20, 0xCEA000
	035 Move W8, [X20+1923]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0xA05000
	039 Move X0, [X0+1440]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1923], W8
	043 Move X8, 0xA05000
	044 Move X8, [X8+1440]
	045 Move X11, -46141440
	046 Move V0, [X11+2624]
	047 Move W9, 257
	048 Move X8, [X8]
	049 Move W10, 1
	050 Move X8, [X8+184]
	051 Move V1, [X8]
	052 Move V2, [X8+8]
	053 NotImplemented "Instruction STURH not yet implemented."
	054 Move [X19+191], W10
	055 Move [X19+144], D1
	056 Move [X19+152], S2
	057 Move [X19+156], D0
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return 

Method: UnityEngine.Vector3 Convert(UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis axis)

Disassembly:
	0x036EEA44 STR X30, [X31 - 0x20]!
	0x036EEA48 STP X20, X19, [X31 + 0x10]
	0x036EEA4C ADRP X19, 0xCF2000
	0x036EEA50 ADRP X20, 0xA52000
	0x036EEA54 LDRB W8, [X19 + 0xB58]
	0x036EEA58 LDR X20, [X20 + 0x870]
	0x036EEA5C TBNZ X8, 0x0, 0x36EEA74
	0x036EEA60 ADRP X0, 0xA52000
	0x036EEA64 LDR X0, [X0 + 0x870]
	0x036EEA68 BL 0x1C16CF4
	0x036EEA6C MOVZ W8, 0x1
	0x036EEA70 STRB W8, [X19 + 0xB58]
	0x036EEA74 LDR X0, [X20]
	0x036EEA78 LDP X20, X19, [X31 + 0x10]
	0x036EEA7C LDR X30, [X31], #0x20
	0x036EEA80 B 0x36ECF70
	0x036EEA84 STR X30, [X31 - 0x40]!
	0x036EEA88 STP X24, X23, [X31 + 0x10]
	0x036EEA8C STP X22, X21, [X31 + 0x20]
	0x036EEA90 STP X20, X19, [X31 + 0x30]
	0x036EEA94 ADRP X20, 0xCF2000
	0x036EEA98 ADRP X22, 0xA05000
	0x036EEA9C LDRB W8, [X20 + 0xB59]
	0x036EEAA0 LDR X22, [X22 + 0x598]
	0x036EEAA4 MOV X19, X0
	0x036EEAA8 TBNZ X8, 0x0, 0x36EEAF0
	0x036EEAAC ADRP X0, 0xA05000
	0x036EEAB0 LDR X0, [X0 + 0xE00]
	0x036EEAB4 BL 0x1C16CF4
	0x036EEAB8 ADRP X0, 0xA52000
	0x036EEABC LDR X0, [X0 + 0x878]
	0x036EEAC0 BL 0x1C16CF4
	0x036EEAC4 ADRP X0, 0xA05000
	0x036EEAC8 LDR X0, [X0 + 0xE18]
	0x036EEACC BL 0x1C16CF4
	0x036EEAD0 ADRP X0, 0xA05000
	0x036EEAD4 LDR X0, [X0 + 0x598]
	0x036EEAD8 BL 0x1C16CF4
	0x036EEADC ADRP X0, 0xA2F000
	0x036EEAE0 LDR X0, [X0 + 0x960]
	0x036EEAE4 BL 0x1C16CF4
	0x036EEAE8 MOVZ W8, 0x1
	0x036EEAEC STRB W8, [X20 + 0xB59]
	0x036EEAF0 LDR X0, [X22]
	0x036EEAF4 LDR X20, [X19]
	0x036EEAF8 LDR W8, [X0 + 0xE0]
	0x036EEAFC CBNZ W8, 0x36EEB04
	0x036EEB00 BL 0x1C16DFC
	0x036EEB04 MOV X0, X20
	0x036EEB08 MOV X1, X31
	0x036EEB0C MOV X2, X31
	0x036EEB10 BL 0x3C3883C
	0x036EEB14 TBNZ X0, 0x0, 0x36EECA0
	0x036EEB18 ADRP X20, 0xA2F000
	0x036EEB1C LDR X20, [X20 + 0x960]
	0x036EEB20 ADD X19, X19, 0x8
	0x036EEB24 LDR X0, [X20]
	0x036EEB28 LDR W8, [X0 + 0xE0]
	0x036EEB2C CBNZ W8, 0x36EEB34
	0x036EEB30 BL 0x1C16DFC
	0x036EEB34 LDR W8, [X19]
	0x036EEB38 CBZ W8, 0x36EECA0
	0x036EEB3C LDR X0, [X20]
	0x036EEB40 LDR W8, [X0 + 0xE0]
	0x036EEB44 CBNZ W8, 0x36EEB4C
	0x036EEB48 BL 0x1C16DFC
	0x036EEB4C MOV X0, X19
	0x036EEB50 BL 0x36EE038
	0x036EEB54 MOV X19, X0
	0x036EEB58 CBZ X0, 0x36EECDC
	0x036EEB5C ADRP X23, 0xA05000
	0x036EEB60 ADRP X24, 0xA52000
	0x036EEB64 LDR X23, [X23 + 0xE18]
	0x036EEB68 LDR X24, [X24 + 0x878]
	0x036EEB6C LDR X8, [X19]
	0x036EEB70 LDR X1, [X23]
	0x036EEB74 LDRH W9, [X8 + 0x12E]
	0x036EEB78 CBZ X9, 0x36EEB9C
	0x036EEB7C LDR X10, [X8 + 0xB0]
	0x036EEB80 ADD X10, X10, 0x8
	0x036EEB84 LDUR X11, [X10 - 0x8]
	0x036EEB88 CMP X11, X1
	0x036EEB8C B.EQ 0x36EEBAC
	0x036EEB90 SUBS X9, X9, 0x1
	0x036EEB94 ADD X10, X10, 0x10
	0x036EEB98 B.NE 0x36EEB84
	0x036EEB9C MOV X0, X19
	0x036EEBA0 MOV W2, W31
	0x036EEBA4 BL 0x1C5C788
	0x036EEBA8 B 0x36EEBB8
	0x036EEBAC LDRSW X9, [X10]
	0x036EEBB0 ADD X8, X8, X9, 0x4, LSL
	0x036EEBB4 ADD X0, X8, 0x138
	0x036EEBB8 LDP X8, X1, [X0]
	0x036EEBBC MOV X0, X19
	0x036EEBC0 BLR X8
	0x036EEBC4 MOV W21, W0
	0x036EEBC8 TBZ X0, 0x0, 0x36EEC4C
	0x036EEBCC LDR X8, [X19]
	0x036EEBD0 LDR X1, [X24]
	0x036EEBD4 LDRH W9, [X8 + 0x12E]
	0x036EEBD8 CBZ X9, 0x36EEBFC
	0x036EEBDC LDR X10, [X8 + 0xB0]
	0x036EEBE0 ADD X10, X10, 0x8
	0x036EEBE4 LDUR X11, [X10 - 0x8]
	0x036EEBE8 CMP X11, X1
	0x036EEBEC B.EQ 0x36EEC0C
	0x036EEBF0 SUBS X9, X9, 0x1
	0x036EEBF4 ADD X10, X10, 0x10
	0x036EEBF8 B.NE 0x36EEBE4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X9, -45441024
	005 Move W8, W0
	006 Add X9, X9, 2067
	007 NotImplemented "Instruction ADR not yet implemented."
	008 Move W11, [X9]
	009 Add X10, X10, X11
	010 CallNoReturn X10
	011 Move X19, 0xCEB000
	012 Move W8, [X19+2928]
	013 Compare W8, 0
	014 JumpIfNotEqual {20}
	015 Move X0, 0xA06000
	016 Move X0, [X0+1440]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2928], W8
	020 Move X8, 0xA06000
	021 Move X8, [X8+1440]
	022 Move X8, [X8]
	023 Move X10, [X8+184]
	024 Add X8, X10, 60
	025 Add X9, X10, 64
	026 Add X10, X10, 68
	027 Move X19, 0xCEB000
	028 Move W8, [X19+1926]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0xA06000
	032 Move X0, [X0+1440]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+1926], W8
	036 Move X8, 0xA06000
	037 Move X8, [X8+1440]
	038 Move X8, [X8]
	039 Move X10, [X8+184]
	040 Add X8, X10, 24
	041 Add X9, X10, 28
	042 Add X10, X10, 32
	043 Move X19, 0xCEB000
	044 Move W8, [X19+2927]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0xA06000
	048 Move X0, [X0+1440]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X19+2927], W8
	052 Move X8, 0xA06000
	053 Move X8, [X8+1440]
	054 Move X8, [X8]
	055 Move X10, [X8+184]
	056 Add X8, X10, 48
	057 Add X9, X10, 52
	058 Add X10, X10, 56
	059 Move X19, 0xCEB000
	060 Move W8, [X19+2749]
	061 Compare W8, 0
	062 JumpIfNotEqual {68}
	063 Move X0, 0xA06000
	064 Move X0, [X0+1440]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X19+2749], W8
	068 Move X8, 0xA06000
	069 Move X8, [X8+1440]
	070 Move X8, [X8]
	071 Move X10, [X8+184]
	072 Add X8, X10, 36
	073 Add X9, X10, 40
	074 Add X10, X10, 44
	075 Move X19, 0xCEB000
	076 Move W8, [X19+2591]
	077 Compare W8, 0
	078 JumpIfNotEqual {84}
	079 Move X0, 0xA06000
	080 Move X0, [X0+1440]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X19+2591], W8
	084 Move X8, 0xA06000
	085 Move X8, [X8+1440]
	086 Move X8, [X8]
	087 Move X10, [X8+184]
	088 Add X8, X10, 72
	089 Add X9, X10, 76
	090 Add X10, X10, 80
	091 Move X19, 0xCEB000
	092 Move W8, [X19+3550]
	093 Compare W8, 0
	094 JumpIfNotEqual {100}
	095 Move X0, 0xA06000
	096 Move X0, [X0+1440]
	097 Call 0x1C17CF4
	098 Move W8, 1
	099 Move [X19+3550], W8
	100 Move X8, 0xA06000
	101 Move X8, [X8+1440]
	102 Move X8, [X8]
	103 Move X10, [X8+184]
	104 Add X8, X10, 84
	105 Add X9, X10, 88
	106 Add X10, X10, 92
	107 Move V2, [X10]
	108 Move V1, [X9]
	109 Move V0, [X8]
	110 Move X30, [X31+16]
	111 Move X19, [X31+24]
	112 Return X0

