Type: UnityEngine.Animations.Rigging.MultiPositionConstraintData

Method: UnityEngine.Transform get_constrainedObject()

Disassembly:
	0x036EF964 LDR X8, [X8]
	0x036EF968 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_constrainedObject(UnityEngine.Transform value)

Disassembly:
	0x036EF96C LDR V0, [X8]
	0x036EF970 LDR V1, [X8 + 0x8]

ISIL:
	001 Move [X0], X1
	002 Return 

Method: UnityEngine.Animations.Rigging.WeightedTransformArray get_sourceObjects()

Disassembly:
	0x036EF974 STR D0, [X19 + 0x90]
	0x036EF978 STR S1, [X19 + 0x98]
	0x036EF97C LDP X20, X19, [X31 + 0x10]
	0x036EF980 LDP X30, X21, [X31], #0x20

ISIL:
	001 Add X1, X0, 8
	002 Move W2, 136
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void set_sourceObjects(UnityEngine.Animations.Rigging.WeightedTransformArray value)

Disassembly:
	0x036EF984 RET
	0x036EF988 SUB X31, X31, 0xC0
	0x036EF98C STR X30, [X31 + 0x90]
	0x036EF990 STP X22, X21, [X31 + 0xA0]
	0x036EF994 STP X20, X19, [X31 + 0xB0]
	0x036EF998 ADRP X21, 0xCF1000

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 8
	003 Move W2, 136
	004 Call 0x3EB2B30
	005 Move X30, [X31+16]
	006 Return 

Method: System.Boolean get_maintainOffset()

Disassembly:
	0x036EF99C ADRP X22, 0xA51000
	0x036EF9A0 ADRP X20, 0xA2E000

ISIL:
	001 Move W0, [X0+159]
	002 Return X0

Method: System.Void set_maintainOffset(System.Boolean value)

Disassembly:
	0x036EF9A4 LDRB W8, [X21 + 0xB6B]
	0x036EF9A8 LDR X22, [X22 + 0x8F8]
	0x036EF9AC LDR X20, [X20 + 0x960]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+159], W8
	003 Return 

Method: UnityEngine.Vector3 get_offset()

Disassembly:
	0x036EF9B0 MOV X19, X0
	0x036EF9B4 TBNZ X8, 0x0, 0x36EF9D8
	0x036EF9B8 ADRP X0, 0xA51000

ISIL:
	001 Move S0, [X0+144]
	002 Move S1, [X0+148]
	003 Move V2, [X0+152]
	004 Return X0

Method: System.Void set_offset(UnityEngine.Vector3 value)

Disassembly:
	0x036EF9BC LDR X0, [X0 + 0x8F8]
	0x036EF9C0 BL 0x1C16CF4
	0x036EF9C4 ADRP X0, 0xA2E000

ISIL:
	001 Move [X0+144], S0
	002 Move [X0+152], S1
	003 Move [X0+152], S2
	004 Return 

Method: System.Boolean get_constrainedXAxis()

Disassembly:
	0x036EF9C8 LDR X0, [X0 + 0x960]
	0x036EF9CC BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+156]
	002 Return X0

Method: System.Void set_constrainedXAxis(System.Boolean value)

Disassembly:
	0x036EF9D0 MOVZ W8, 0x1
	0x036EF9D4 STRB W8, [X21 + 0xB6B]
	0x036EF9D8 LDR X1, [X22]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+156], W8
	003 Return 

Method: System.Boolean get_constrainedYAxis()

Disassembly:
	0x036EF9DC MOV X0, X19
	0x036EF9E0 BL 0x25CC314

ISIL:
	001 Move W0, [X0+157]
	002 Return X0

Method: System.Void set_constrainedYAxis(System.Boolean value)

Disassembly:
	0x036EF9E4 ADD X19, X19, 0x30
	0x036EF9E8 ADD X0, X31, 0x8
	0x036EF9EC MOVZ W2, 0x88

ISIL:
	001 And W8, W1, 1
	002 Move [X0+157], W8
	003 Return 

Method: System.Boolean get_constrainedZAxis()

Disassembly:
	0x036EF9F0 MOV X1, X19
	0x036EF9F4 BL 0x3EB1AC0

ISIL:
	001 Move W0, [X0+158]
	002 Return X0

Method: System.Void set_constrainedZAxis(System.Boolean value)

Disassembly:
	0x036EF9F8 LDR X0, [X20]
	0x036EF9FC LDR W8, [X0 + 0xE0]
	0x036EFA00 CBNZ W8, 0x36EFA08

ISIL:
	001 And W8, W1, 1
	002 Move [X0+158], W8
	003 Return 

Method: System.String UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_offsetVector3Property()

Disassembly:
	0x036EFA04 BL 0x1C16DFC
	0x036EFA08 ADD X0, X31, 0x8
	0x036EFA0C FMOV S0, W31
	0x036EFA10 FMOV S1, 1
	0x036EFA14 BL 0x36EE280
	0x036EFA18 ADD X1, X31, 0x8
	0x036EFA1C MOVZ W2, 0x88
	0x036EFA20 MOV X0, X19
	0x036EFA24 BL 0x3EB1AC0
	0x036EFA28 LDP X20, X19, [X31 + 0xB0]
	0x036EFA2C LDP X22, X21, [X31 + 0xA0]
	0x036EFA30 LDR X30, [X31 + 0x90]
	0x036EFA34 ADD X31, X31, 0xC0
	0x036EFA38 RET
	0x036EFA3C STP X30, X21, [X31 - 0x20]!
	0x036EFA40 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCF2000
	005 Move X20, 0xA52000
	006 Move W8, [X19+2903]
	007 Move X20, [X20+2136]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA52000
	013 Move X0, [X0+2136]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2903], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	022 Return X0

Method: System.String UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_sourceObjectsProperty()

Disassembly:
	0x036EFA44 ADRP X21, 0xCF1000
	0x036EFA48 ADRP X20, 0xA51000
	0x036EFA4C LDRB W8, [X21 + 0xB6C]
	0x036EFA50 LDR X20, [X20 + 0x900]
	0x036EFA54 MOV X19, X0
	0x036EFA58 TBNZ X8, 0x0, 0x36EFA7C
	0x036EFA5C ADRP X0, 0xA51000
	0x036EFA60 LDR X0, [X0 + 0x908]
	0x036EFA64 BL 0x1C16CF4
	0x036EFA68 ADRP X0, 0xA51000
	0x036EFA6C LDR X0, [X0 + 0x900]
	0x036EFA70 BL 0x1C16CF4
	0x036EFA74 MOVZ W8, 0x1
	0x036EFA78 STRB W8, [X21 + 0xB6C]
	0x036EFA7C LDR X0, [X20]
	0x036EFA80 ADRP X20, 0xA51000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCF2000
	005 Move X20, 0xA52000
	006 Move W8, [X19+2904]
	007 Move X20, [X20+2160]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA52000
	013 Move X0, [X0+2160]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2904], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	022 Return X0

Method: System.Boolean UnityEngine.Animations.Rigging.IAnimationJobData.IsValid()

Disassembly:
	0x036EFA84 LDR W8, [X0 + 0xE0]
	0x036EFA88 LDR X20, [X20 + 0x908]
	0x036EFA8C CBNZ W8, 0x36EFA94
	0x036EFA90 BL 0x1C16DFC
	0x036EFA94 LDR X1, [X20]
	0x036EFA98 MOV X0, X19
	0x036EFA9C LDP X20, X19, [X31 + 0x10]
	0x036EFAA0 LDP X30, X21, [X31], #0x20
	0x036EFAA4 B 0x25CC758
	0x036EFAA8 LDR X0, [X0]
	0x036EFAAC RET
	0x036EFAB0 STR X1, [X0]
	0x036EFAB4 RET
	0x036EFAB8 LDR X0, [X0 + 0x8]
	0x036EFABC RET
	0x036EFAC0 STR X1, [X0 + 0x8]
	0x036EFAC4 RET
	0x036EFAC8 LDR W0, [X0 + 0x30]
	0x036EFACC RET
	0x036EFAD0 STR W1, [X0 + 0x30]
	0x036EFAD4 RET
	0x036EFAD8 LDP S0, S1, [X0 + 0x10]
	0x036EFADC LDR V2, [X0 + 0x18]
	0x036EFAE0 RET
	0x036EFAE4 STP S0, S1, [X0 + 0x10]
	0x036EFAE8 STR S2, [X0 + 0x18]
	0x036EFAEC RET
	0x036EFAF0 LDP S0, S1, [X0 + 0x1C]
	0x036EFAF4 LDR V2, [X0 + 0x24]
	0x036EFAF8 RET
	0x036EFAFC STP S0, S1, [X0 + 0x1C]
	0x036EFB00 STR S2, [X0 + 0x24]
	0x036EFB04 RET
	0x036EFB08 LDR V0, [X0 + 0x28]
	0x036EFB0C RET
	0x036EFB10 FMOV S1, 1
	0x036EFB14 FCMP S0, 0x0
	0x036EFB18 FMIN S0, S0, S1
	0x036EFB1C FMOV S1, W31
	0x036EFB20 FCSEL S0, S0, S1, PL
	0x036EFB24 STR S0, [X0 + 0x28]
	0x036EFB28 RET
	0x036EFB2C LDR V0, [X0 + 0x2C]
	0x036EFB30 RET
	0x036EFB34 FMOV S1, 1
	0x036EFB38 FCMP S0, 0x0
	0x036EFB3C FMIN S0, S0, S1
	0x036EFB40 FMOV S1, W31
	0x036EFB44 FCSEL S0, S0, S1, PL
	0x036EFB48 STR S0, [X0 + 0x2C]
	0x036EFB4C RET
	0x036EFB50 LDR W0, [X0 + 0x30]
	0x036EFB54 RET
	0x036EFB58 STR X30, [X31 - 0x20]!
	0x036EFB5C STP X20, X19, [X31 + 0x10]
	0x036EFB60 ADRP X19, 0xCF1000
	0x036EFB64 ADRP X20, 0xA51000
	0x036EFB68 LDRB W8, [X19 + 0xB6D]
	0x036EFB6C LDR X20, [X20 + 0x7E0]
	0x036EFB70 TBNZ X8, 0x0, 0x36EFB88
	0x036EFB74 ADRP X0, 0xA51000
	0x036EFB78 LDR X0, [X0 + 0x7E0]
	0x036EFB7C BL 0x1C16CF4
	0x036EFB80 MOVZ W8, 0x1
	0x036EFB84 STRB W8, [X19 + 0xB6D]
	0x036EFB88 LDR X0, [X20]
	0x036EFB8C LDP X20, X19, [X31 + 0x10]
	0x036EFB90 LDR X30, [X31], #0x20
	0x036EFB94 B 0x36ECF70
	0x036EFB98 STR X30, [X31 - 0x20]!
	0x036EFB9C STP X20, X19, [X31 + 0x10]
	0x036EFBA0 ADRP X19, 0xCF1000
	0x036EFBA4 ADRP X20, 0xA51000
	0x036EFBA8 LDRB W8, [X19 + 0xB6E]
	0x036EFBAC LDR X20, [X20 + 0x7E8]
	0x036EFBB0 TBNZ X8, 0x0, 0x36EFBC8
	0x036EFBB4 ADRP X0, 0xA51000
	0x036EFBB8 LDR X0, [X0 + 0x7E8]
	0x036EFBBC BL 0x1C16CF4
	0x036EFBC0 MOVZ W8, 0x1
	0x036EFBC4 STRB W8, [X19 + 0xB6E]
	0x036EFBC8 LDR X0, [X20]
	0x036EFBCC LDP X20, X19, [X31 + 0x10]
	0x036EFBD0 LDR X30, [X31], #0x20
	0x036EFBD4 B 0x36ECF70
	0x036EFBD8 STR X30, [X31 - 0x20]!
	0x036EFBDC STP X20, X19, [X31 + 0x10]
	0x036EFBE0 ADRP X19, 0xCF1000
	0x036EFBE4 ADRP X20, 0xA51000
	0x036EFBE8 LDRB W8, [X19 + 0xB6F]
	0x036EFBEC LDR X20, [X20 + 0x910]
	0x036EFBF0 TBNZ X8, 0x0, 0x36EFC08
	0x036EFBF4 ADRP X0, 0xA51000
	0x036EFBF8 LDR X0, [X0 + 0x910]
	0x036EFBFC BL 0x1C16CF4
	0x036EFC00 MOVZ W8, 0x1
	0x036EFC04 STRB W8, [X19 + 0xB6F]
	0x036EFC08 LDR X0, [X20]
	0x036EFC0C LDP X20, X19, [X31 + 0x10]
	0x036EFC10 LDR X30, [X31], #0x20
	0x036EFC14 B 0x36ECF70
	0x036EFC18 STR X30, [X31 - 0x20]!
	0x036EFC1C STP X20, X19, [X31 + 0x10]
	0x036EFC20 ADRP X19, 0xCF1000
	0x036EFC24 ADRP X20, 0xA51000
	0x036EFC28 LDRB W8, [X19 + 0xB70]
	0x036EFC2C LDR X20, [X20 + 0x918]
	0x036EFC30 TBNZ X8, 0x0, 0x36EFC48
	0x036EFC34 ADRP X0, 0xA51000
	0x036EFC38 LDR X0, [X0 + 0x918]
	0x036EFC3C BL 0x1C16CF4
	0x036EFC40 MOVZ W8, 0x1
	0x036EFC44 STRB W8, [X19 + 0xB70]
	0x036EFC48 LDR X0, [X20]
	0x036EFC4C LDP X20, X19, [X31 + 0x10]
	0x036EFC50 LDR X30, [X31], #0x20
	0x036EFC54 B 0x36ECF70
	0x036EFC58 STP X30, X21, [X31 - 0x20]!
	0x036EFC5C STP X20, X19, [X31 + 0x10]
	0x036EFC60 ADRP X21, 0xCF1000
	0x036EFC64 ADRP X20, 0xA04000
	0x036EFC68 LDRB W8, [X21 + 0xB71]
	0x036EFC6C LDR X20, [X20 + 0x598]
	0x036EFC70 MOV X19, X0
	0x036EFC74 TBNZ X8, 0x0, 0x36EFC8C
	0x036EFC78 ADRP X0, 0xA04000
	0x036EFC7C LDR X0, [X0 + 0x598]
	0x036EFC80 BL 0x1C16CF4
	0x036EFC84 MOVZ W8, 0x1
	0x036EFC88 STRB W8, [X21 + 0xB71]
	0x036EFC8C LDR X0, [X20]
	0x036EFC90 LDR X19, [X19]
	0x036EFC94 LDR W8, [X0 + 0xE0]
	0x036EFC98 CBNZ W8, 0x36EFCA0
	0x036EFC9C BL 0x1C16DFC
	0x036EFCA0 MOV X0, X19
	0x036EFCA4 LDP X20, X19, [X31 + 0x10]
	0x036EFCA8 MOV X1, X31
	0x036EFCAC MOV X2, X31
	0x036EFCB0 LDP X30, X21, [X31], #0x20
	0x036EFCB4 B 0x3C354F8
	0x036EFCB8 STR X30, [X31 - 0x20]!
	0x036EFCBC STP X20, X19, [X31 + 0x10]
	0x036EFCC0 STP X31, X31, [X0]
	0x036EFCC4 ADRP X20, 0xCE9000
	0x036EFCC8 LDRB W8, [X20 + 0x783]
	0x036EFCCC MOV X19, X0
	0x036EFCD0 CBNZ W8, 0x36EFCE8
	0x036EFCD4 ADRP X0, 0xA04000
	0x036EFCD8 LDR X0, [X0 + 0x5A0]
	0x036EFCDC BL 0x1C16CF4
	0x036EFCE0 MOVZ W8, 0x1
	0x036EFCE4 STRB W8, [X20 + 0x783]
	0x036EFCE8 ADRP X8, 0xA04000
	0x036EFCEC LDR X8, [X8 + 0x5A0]
	0x036EFCF0 LDR X8, [X8]
	0x036EFCF4 LDR X9, [X8 + 0xB8]
	0x036EFCF8 LDR V0, [X9]
	0x036EFCFC LDR V1, [X9 + 0x8]
	0x036EFD00 MOVZ W9, 0x2
	0x036EFD04 STR D0, [X19 + 0x10]
	0x036EFD08 STR S1, [X19 + 0x18]
	0x036EFD0C LDR X8, [X8 + 0xB8]
	0x036EFD10 LDR V0, [X8]
	0x036EFD14 LDR V1, [X8 + 0x8]
	0x036EFD18 STR W9, [X19 + 0x30]
	0x036EFD1C STUR D0, [X19 + 0x1C]
	0x036EFD20 FMOV V0.2S, 0x0
	0x036EFD24 STR S1, [X19 + 0x24]
	0x036EFD28 STR D0, [X19 + 0x28]
	0x036EFD2C LDP X20, X19, [X31 + 0x10]
	0x036EFD30 LDR X30, [X31], #0x20
	0x036EFD34 RET
	0x036EFD38 STP X30, X21, [X31 - 0x20]!
	0x036EFD3C STP X20, X19, [X31 + 0x10]
	0x036EFD40 ADRP X20, 0xCF1000
	0x036EFD44 ADRP X21, 0xA51000
	0x036EFD48 LDRB W8, [X20 + 0xB72]
	0x036EFD4C LDR X21, [X21 + 0x920]
	0x036EFD50 MOV X19, X0
	0x036EFD54 TBNZ X8, 0x0, 0x36EFD6C
	0x036EFD58 ADRP X0, 0xA51000
	0x036EFD5C LDR X0, [X0 + 0x920]
	0x036EFD60 BL 0x1C16CF4
	0x036EFD64 MOVZ W8, 0x1
	0x036EFD68 STRB W8, [X20 + 0xB72]
	0x036EFD6C LDR X1, [X21]
	0x036EFD70 MOV X0, X19
	0x036EFD74 BL 0x25CC830
	0x036EFD78 LDP S0, S2, [X19 + 0x50]
	0x036EFD7C FMOV S1, 1
	0x036EFD80 FMOV S3, W31
	0x036EFD84 FMIN S4, S0, S1
	0x036EFD88 FCMP S0, 0x0
	0x036EFD8C FMIN S0, S2, S1
	0x036EFD90 FCSEL S1, S4, S3, PL
	0x036EFD94 FCMP S2, 0x0
	0x036EFD98 FCSEL S0, S0, S3, PL
	0x036EFD9C FMAX S1, S1, S3
	0x036EFDA0 FMAX S0, S0, S3
	0x036EFDA4 STP S1, S0, [X19 + 0x50]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xCF2000
	009 Move X22, 0xA05000
	010 Move W8, [X20+2905]
	011 Move X22, [X22+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xA05000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0xA52000
	021 Move X0, [X0+2168]
	022 Call 0x1C17CF4
	023 Move X0, 0xA05000
	024 Move X0, [X0+3608]
	025 Call 0x1C17CF4
	026 Move X0, 0xA05000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0xA2F000
	030 Move X0, [X0+2400]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2905], W8
	034 Move X0, [X22]
	035 Move X20, [X19]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X20
	041 Move X1, X31
	042 Move X2, X31
	043 Call Object.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {154}
	048 Move X20, 0xA2F000
	049 Move X20, [X20+2400]
	050 Add X19, X19, 8
	051 Move X0, [X20]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move W8, [X19]
	057 Compare W8, 0
	058 JumpIfEqual {154}
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Call WeightedTransformArray.GetEnumerator, X0
	066 Move X19, X0
	067 Compare X0, 0
	068 JumpIfEqual {173}
	069 Move X23, 0xA05000
	070 Move X24, 0xA52000
	071 Move X23, [X23+3608]
	072 Move X24, [X24+2168]
	073 Move X8, [X19]
	074 Move X1, [X23]
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X19
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X19
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move W21, W0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {134}
	099 Move X8, [X19]
	100 Move X1, [X24]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X19
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X19
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X20, X0
	121 Move X0, [X22]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {126}
	125 Call 0x1C17DFC
	126 Move X0, X20
	127 Move X1, X31
	128 Move X2, X31
	129 Call Object.op_Equality, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {73}
	134 Move X20, X31
	135 Xor W21, W21, 1
	136 Compare X19, 0
	137 JumpIfEqual {162}
	138 Move X10, 0xA05000
	139 Move X8, [X19]
	140 Move X10, [X10+3584]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Move X1, [X10]
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move X0, X19
	152 Move W2, W31
	153 Call 0x1C5D788
	154 Move W21, W31
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Add X8, X8, X9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X19
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Compare X20, 0
	163 JumpIfNotEqual {174}
	164 And W0, W21, 1
	165 Move X20, [X31+48]
	166 Move X19, [X31+56]
	167 Move X22, [X31+32]
	168 Move X21, [X31+40]
	169 Move X24, [X31+16]
	170 Move X23, [X31+24]
	171 Move X30, [X31+64]
	172 Return X0
	173 Call 0x1C17F20
	174 Move X0, X20
	175 Call 0x1C17F18
	176 Move X21, X0
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X21
	179 Call 0x3EB2AD0
	180 Move X20, [X0]
	181 Call 0x3EB2AE0
	182 Move W21, 1
	183 Compare X19, 0
	184 JumpIfNotEqual {138}
	185 Move X20, X31
	186 Move X21, X0
	187 Compare X19, 0
	188 JumpIfEqual {212}
	189 Move X10, 0xA05000
	190 Move X8, [X19]
	191 Move X10, [X10+3584]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Move X1, [X10]
	194 Compare X9, 0
	195 JumpIfEqual {202}
	196 Move X10, [X8+176]
	197 Add X10, X10, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X9, X9, 1
	201 Add X10, X10, 16
	202 Move X0, X19
	203 Move W2, W31
	204 Call 0x1C5D788
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Add X8, X8, X9
	207 Add X0, X8, 312
	208 Move X8, [X0]
	209 Move X1, [X0+8]
	210 Move X0, X19
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Compare X20, 0
	213 JumpIfNotEqual {216}
	214 Move X0, X21
	215 Call 0x1D2D690
	216 Move X0, X20
	217 Call 0x1C17F18
	218 Call 0x1991590

Method: System.Void UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues()

Disassembly:
	0x036EFDA8 LDP X20, X19, [X31 + 0x10]
	0x036EFDAC LDP X30, X21, [X31], #0x20
	0x036EFDB0 RET
	0x036EFDB4 STP X30, X21, [X31 - 0x20]!
	0x036EFDB8 STP X20, X19, [X31 + 0x10]
	0x036EFDBC ADRP X21, 0xCF1000
	0x036EFDC0 ADRP X20, 0xA51000
	0x036EFDC4 LDRB W8, [X21 + 0xB73]
	0x036EFDC8 LDR X20, [X20 + 0x928]
	0x036EFDCC MOV X19, X0
	0x036EFDD0 TBNZ X8, 0x0, 0x36EFDF4
	0x036EFDD4 ADRP X0, 0xA51000
	0x036EFDD8 LDR X0, [X0 + 0x930]
	0x036EFDDC BL 0x1C16CF4
	0x036EFDE0 ADRP X0, 0xA51000
	0x036EFDE4 LDR X0, [X0 + 0x928]
	0x036EFDE8 BL 0x1C16CF4
	0x036EFDEC MOVZ W8, 0x1
	0x036EFDF0 STRB W8, [X21 + 0xB73]
	0x036EFDF4 LDR X0, [X20]
	0x036EFDF8 ADRP X20, 0xA51000
	0x036EFDFC LDR W8, [X0 + 0xE0]
	0x036EFE00 LDR X20, [X20 + 0x930]
	0x036EFE04 CBNZ W8, 0x36EFE0C
	0x036EFE08 BL 0x1C16DFC
	0x036EFE0C LDR X1, [X20]
	0x036EFE10 MOV X0, X19
	0x036EFE14 LDP X20, X19, [X31 + 0x10]
	0x036EFE18 LDP X30, X21, [X31], #0x20
	0x036EFE1C B 0x25CCC7C
	0x036EFE20 LDR X0, [X0]
	0x036EFE24 RET
	0x036EFE28 STR X1, [X0]
	0x036EFE2C RET
	0x036EFE30 LDR X0, [X0 + 0x8]
	0x036EFE34 RET
	0x036EFE38 STR X1, [X0 + 0x8]
	0x036EFE3C RET
	0x036EFE40 LDR X0, [X0 + 0x10]
	0x036EFE44 RET
	0x036EFE48 STR X1, [X0 + 0x10]
	0x036EFE4C RET
	0x036EFE50 LDR X0, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCF2000
	006 Move X20, 0xA2F000
	007 Move W8, [X21+2906]
	008 Move X20, [X20+2400]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA2F000
	015 Move X0, [X0+2400]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2906], W8
	019 Move W8, 257
	020 Move W9, 1
	021 Move [X19], X31
	022 NotImplemented "Instruction STRH not yet implemented."
	023 Move [X19+158], W9
	024 Move X0, [X20]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move [X19+8], W31
	030 Move [X19+159], W31
	031 Move X20, 0xCEA000
	032 Move W8, [X20+1923]
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0xA05000
	036 Move X0, [X0+1440]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+1923], W8
	040 Move X8, 0xA05000
	041 Move X8, [X8+1440]
	042 Move X8, [X8]
	043 Move X8, [X8+184]
	044 Move V0, [X8]
	045 Move V1, [X8+8]
	046 Move [X19+144], D0
	047 Move [X19+152], S1
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 

