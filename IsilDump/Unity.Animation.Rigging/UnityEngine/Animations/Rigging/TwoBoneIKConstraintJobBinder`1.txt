Type: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJobBinder`1

Method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJob Create(UnityEngine.Animator animator, ref T data, UnityEngine.Component component)

Disassembly:
	0x027104F8 CMP W0, 0x2
	0x027104FC B.NE 0x2710508
	0x02710500 MOV W0, W31
	0x02710504 B 0x271057C
	0x02710508 LDR X20, [X19 + 0x20]
	0x0271050C CBZ X20, 0x2710588
	0x02710510 LDR X8, [X20]
	0x02710514 LDR X1, [X21]
	0x02710518 LDRH W9, [X8 + 0x12E]
	0x0271051C CBZ X9, 0x2710540
	0x02710520 LDR X10, [X8 + 0xB0]
	0x02710524 ADD X10, X10, 0x8
	0x02710528 LDUR X11, [X10 - 0x8]
	0x0271052C CMP X11, X1
	0x02710530 B.EQ 0x2710550
	0x02710534 SUBS X9, X9, 0x1
	0x02710538 ADD X10, X10, 0x10
	0x0271053C B.NE 0x2710528
	0x02710540 MOV X0, X20
	0x02710544 MOV W2, W31
	0x02710548 BL 0x1C5C788
	0x0271054C B 0x271055C
	0x02710550 LDRSW X9, [X10]
	0x02710554 ADD X8, X8, X9, 0x4, LSL
	0x02710558 ADD X0, X8, 0x138
	0x0271055C LDP X8, X1, [X0]
	0x02710560 MOV X0, X20
	0x02710564 BLR X8
	0x02710568 CMP W0, 0x1
	0x0271056C B.EQ 0x271057C
	0x02710570 LDR X8, [X19 + 0x18]
	0x02710574 CMP X8, 0x0
	0x02710578 CSET W0, NE
	0x0271057C LDP X20, X19, [X31 + 0x10]
	0x02710580 LDP X30, X21, [X31], #0x20
	0x02710584 RET
	0x02710588 BL 0x1C16F20
	0x0271058C STR X30, [X31 - 0x30]!
	0x02710590 STP X22, X21, [X31 + 0x10]
	0x02710594 STP X20, X19, [X31 + 0x20]
	0x02710598 ADRP X22, 0x1CCA000
	0x0271059C ADRP X21, 0x1A0C000
	0x027105A0 LDRB W8, [X22 + 0x5F1]
	0x027105A4 LDR X21, [X21 + 0x2C8]
	0x027105A8 MOV X20, X1
	0x027105AC MOV X19, X0
	0x027105B0 TBNZ X8, 0x0, 0x27105C8
	0x027105B4 ADRP X0, 0x1A0C000
	0x027105B8 LDR X0, [X0 + 0x2C8]
	0x027105BC BL 0x1C16CF4
	0x027105C0 MOVZ W8, 0x1
	0x027105C4 STRB W8, [X22 + 0x5F1]
	0x027105C8 MOV X0, X19
	0x027105CC MOV X1, X31
	0x027105D0 BL 0x33BDD8C
	0x027105D4 LDR X0, [X21]
	0x027105D8 LDR W8, [X0 + 0xE0]
	0x027105DC CBNZ W8, 0x27105E4
	0x027105E0 BL 0x1C16DFC
	0x027105E4 LDR X8, [X20 + 0x20]
	0x027105E8 LDR X8, [X8 + 0xC0]
	0x027105EC LDR X0, [X8 + 0x18]
	0x027105F0 BL 0x223B2FC
	0x027105F4 LDR X8, [X20 + 0x20]
	0x027105F8 MOV X21, X0
	0x027105FC LDR X8, [X8 + 0xC0]
	0x02710600 LDR X1, [X8 + 0x10]
	0x02710604 LDRB W8, [X1 + 0x135]
	0x02710608 TBNZ X8, 0x0, 0x2710618
	0x0271060C MOV X0, X1
	0x02710610 BL 0x1C5C684
	0x02710614 MOV X1, X0
	0x02710618 MOV X0, X21
	0x0271061C BL 0x1C16E00
	0x02710620 STR X0, [X19 + 0x20]
	0x02710624 LDR X8, [X20 + 0x20]
	0x02710628 LDR X8, [X8 + 0xC0]
	0x0271062C LDR X1, [X8 + 0x10]
	0x02710630 LDRB W8, [X1 + 0x135]
	0x02710634 TBNZ X8, 0x0, 0x2710644
	0x02710638 MOV X0, X1
	0x0271063C BL 0x1C5C684
	0x02710640 MOV X1, X0
	0x02710644 MOV X0, X21
	0x02710648 BL 0x1C16E00
	0x0271064C LDR X8, [X20 + 0x20]
	0x02710650 MOV X0, X19
	0x02710654 LDP X20, X19, [X31 + 0x20]
	0x02710658 LDP X22, X21, [X31 + 0x10]
	0x0271065C LDR X8, [X8 + 0xC0]
	0x02710660 LDR X1, [X8 + 0x28]
	0x02710664 LDR X30, [X31], #0x30
	0x02710668 B 0x271066C
	0x0271066C STR X30, [X31 - 0x30]!
	0x02710670 STP X22, X21, [X31 + 0x10]
	0x02710674 STP X20, X19, [X31 + 0x20]
	0x02710678 ADRP X21, 0x1CCA000
	0x0271067C ADRP X22, 0x19E3000
	0x02710680 LDRB W8, [X21 + 0x5F2]
	0x02710684 LDR X22, [X22 + 0x6C0]
	0x02710688 MOV X20, X1
	0x0271068C MOV X19, X0
	0x02710690 TBNZ X8, 0x0, 0x27106CC
	0x02710694 ADRP X0, 0x1A0D000
	0x02710698 LDR X0, [X0 + 0x970]
	0x0271069C BL 0x1C16CF4
	0x027106A0 ADRP X0, 0x1A0D000
	0x027106A4 LDR X0, [X0 + 0x978]
	0x027106A8 BL 0x1C16CF4
	0x027106AC ADRP X0, 0x1A0A000
	0x027106B0 LDR X0, [X0 + 0x2D8]
	0x027106B4 BL 0x1C16CF4
	0x027106B8 ADRP X0, 0x19E3000
	0x027106BC LDR X0, [X0 + 0x6C0]
	0x027106C0 BL 0x1C16CF4
	0x027106C4 MOVZ W8, 0x1
	0x027106C8 STRB W8, [X21 + 0x5F2]
	0x027106CC LDR X8, [X20 + 0x20]
	0x027106D0 LDR X0, [X22]
	0x027106D4 LDR X8, [X8 + 0xC0]
	0x027106D8 LDR W9, [X0 + 0xE0]
	0x027106DC LDR X21, [X8 + 0x30]
	0x027106E0 CBNZ W9, 0x27106E8
	0x027106E4 BL 0x1C16DFC
	0x027106E8 MOV X0, X21
	0x027106EC MOV X1, X31
	0x027106F0 BL 0x338C698
	0x027106F4 CBZ X0, 0x271089C
	0x027106F8 MOV X1, X31
	0x027106FC MOV X21, X0
	0x02710700 BL 0x33970C4
	0x02710704 TBZ X0, 0x0, 0x2710748
	0x02710708 LDR X8, [X20 + 0x20]
	0x0271070C LDR X8, [X8 + 0xC0]
	0x02710710 LDR X0, [X8 + 0x8]
	0x02710714 LDRB W8, [X0 + 0x135]
	0x02710718 TBNZ X8, 0x0, 0x2710720
	0x0271071C BL 0x1C5C684
	0x02710720 BL 0x1C16F10
	0x02710724 LDR X8, [X20 + 0x20]
	0x02710728 LDR X8, [X8 + 0xC0]
	0x0271072C LDR X2, [X8 + 0x38]
	0x02710730 LDR X3, [X8 + 0x40]
	0x02710734 MOV X1, X31
	0x02710738 MOV X20, X0
	0x0271073C BL 0x2D27278
	0x02710740 STR X20, [X19 + 0x18]
	0x02710744 B 0x2710758
	0x02710748 MOV X0, X21
	0x0271074C MOV X1, X31
	0x02710750 BL 0x339703C
	0x02710754 TBZ X0, 0x0, 0x2710768
	0x02710758 LDP X20, X19, [X31 + 0x20]
	0x0271075C LDP X22, X21, [X31 + 0x10]
	0x02710760 LDR X30, [X31], #0x30
	0x02710764 RET
	0x02710768 ADRP X8, 0x1A0A000
	0x0271076C LDR X0, [X22]
	0x02710770 LDR X8, [X8 + 0x2D8]
	0x02710774 LDR W9, [X0 + 0xE0]
	0x02710778 LDR X22, [X8]
	0x0271077C CBNZ W9, 0x2710784
	0x02710780 BL 0x1C16DFC
	0x02710784 MOV X0, X22
	0x02710788 MOV X1, X31
	0x0271078C BL 0x338C698
	0x02710790 CBZ X0, 0x271089C
	0x02710794 LDR X8, [X0]
	0x02710798 MOV X1, X21
	0x0271079C LDR X9, [X8 + 0x2A8]
	0x027107A0 LDR X2, [X8 + 0x2B0]
	0x027107A4 BLR X9
	0x027107A8 TBZ X0, 0x0, 0x27107D8
	0x027107AC LDR X8, [X20 + 0x20]
	0x027107B0 LDR X8, [X8 + 0xC0]
	0x027107B4 LDR X0, [X8 + 0x8]
	0x027107B8 LDRB W8, [X0 + 0x135]
	0x027107BC TBNZ X8, 0x0, 0x27107C4
	0x027107C0 BL 0x1C5C684
	0x027107C4 BL 0x1C16F10
	0x027107C8 LDR X8, [X20 + 0x20]
	0x027107CC LDR X8, [X8 + 0xC0]
	0x027107D0 LDR X2, [X8 + 0x48]
	0x027107D4 B 0x2710730
	0x027107D8 ADRP X8, 0x1A0D000
	0x027107DC LDR X8, [X8 + 0x970]
	0x027107E0 LDR X22, [X8]
	0x027107E4 LDR X8, [X22 + 0x38]
	0x027107E8 CBNZ X8, 0x27107F8
	0x027107EC MOV X0, X22
	0x027107F0 BL 0x1C5C6E0
	0x027107F4 LDR X8, [X22 + 0x38]
	0x027107F8 LDR X0, [X8 + 0x10]
	0x027107FC LDRB W8, [X0 + 0x135]
	0x02710800 TBNZ X8, 0x0, 0x2710808
	0x02710804 BL 0x1C5C684
	0x02710808 LDR W8, [X0 + 0xE0]
	0x0271080C CBNZ W8, 0x2710814
	0x02710810 BL 0x1C16DFC
	0x02710814 LDR X8, [X22 + 0x38]
	0x02710818 LDR X0, [X8 + 0x10]
	0x0271081C LDRB W8, [X0 + 0x135]
	0x02710820 TBNZ X8, 0x0, 0x2710828
	0x02710824 BL 0x1C5C684
	0x02710828 LDR X8, [X0 + 0xB8]
	0x0271082C MOV X0, X21
	0x02710830 MOV X2, X31
	0x02710834 LDR X1, [X8]
	0x02710838 BL 0x3397418
	0x0271083C ADRP X8, 0x1A0D000
	0x02710840 LDR X8, [X8 + 0x978]
	0x02710844 MOV X21, X0
	0x02710848 LDR X8, [X8]
	0x0271084C LDR W9, [X8 + 0xE0]
	0x02710850 CBNZ W9, 0x271085C
	0x02710854 MOV X0, X8
	0x02710858 BL 0x1C16DFC
	0x0271085C MOV X0, X31
	0x02710860 MOV X1, X21
	0x02710864 MOV X2, X31
	0x02710868 BL 0x32CC854
	0x0271086C TBZ X0, 0x0, 0x2710758
	0x02710870 LDR X8, [X20 + 0x20]
	0x02710874 LDR X8, [X8 + 0xC0]
	0x02710878 LDR X0, [X8 + 0x8]
	0x0271087C LDRB W8, [X0 + 0x135]
	0x02710880 TBNZ X8, 0x0, 0x2710888
	0x02710884 BL 0x1C5C684
	0x02710888 BL 0x1C16F10
	0x0271088C LDR X8, [X20 + 0x20]
	0x02710890 LDR X8, [X8 + 0xC0]
	0x02710894 LDR X2, [X8 + 0x50]
	0x02710898 B 0x2710730
	0x0271089C BL 0x1C16F20
	0x027108A0 STP X31, X31, [X8]
	0x027108A4 STR X31, [X8 + 0x10]
	0x027108A8 RET
	0x027108AC STP X30, X21, [X31 - 0x20]!
	0x027108B0 STP X20, X19, [X31 + 0x10]
	0x027108B4 ADRP X21, 0x1CCA000
	0x027108B8 LDRB W9, [X21 + 0x5F3]
	0x027108BC MOV X20, X0
	0x027108C0 MOV X19, X8
	0x027108C4 TBNZ X9, 0x0, 0x27108DC

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X29
	011 Move [X31+216], X30
	012 Move [X31+224], X28
	013 Move [X31+232], X27
	014 Move [X31+240], X26
	015 Move [X31+248], X25
	016 Move [X31+256], X24
	017 Move [X31+264], X23
	018 Move [X31+272], X22
	019 Move [X31+280], X21
	020 Move [X31+288], X20
	021 Move [X31+296], X19
	022 Move X25, 0x1CCB000
	023 Move X24, 0x19E4000
	024 Move X19, X8
	025 Move W8, [X25+1518]
	026 Move X24, [X24+1432]
	027 Move X23, X4
	028 Move X20, X3
	029 Move X22, X2
	030 Move X21, X1
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {43}
	035 Move X0, 0x1A0D000
	036 Move X0, [X0+3648]
	037 Call 0x1C17CF4
	038 Move X0, 0x19E4000
	039 Move X0, [X0+1432]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X25+1518], W8
	043 Move [X31+120], X31
	044 Move [X31+128], X31
	045 Move [X31+112], X31
	046 Move [X31+64], X31
	047 Move [X31+72], X31
	048 Move X1, [X22]
	049 Move X0, X21
	050 Move X2, X31
	051 Call ReadWriteTransformHandle.Bind, X0, X1
	052 Move X8, [X22+8]
	053 Move X26, X0
	054 Move X27, X1
	055 Move X0, X21
	056 Move X1, X8
	057 Move X2, X31
	058 Call ReadWriteTransformHandle.Bind, X0, X1
	059 Move X8, [X22+16]
	060 Move X29, X0
	061 Move [X31+32], X1
	062 Move X0, X21
	063 Move X1, X8
	064 Move X2, X31
	065 Call ReadWriteTransformHandle.Bind, X0, X1
	066 Move X9, [X22+24]
	067 Move [X31+16], X1
	068 Move [X31+24], X0
	069 Add X8, X31, 40
	070 Move X0, X21
	071 Move X1, X9
	072 Move X2, X31
	073 Call ReadOnlyTransformHandle.Bind, X0, X1
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 Move X8, [X31+56]
	076 Move X0, [X24]
	077 Move [X31+5], V0
	078 Move [X31+96], X8
	079 Move W8, [X0+224]
	080 Move X24, [X22+32]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X25, 0x1A0D000
	085 Move X25, [X25+3648]
	086 Move X0, X24
	087 Move X1, X31
	088 Move X2, X31
	089 Call Object.op_Inequality, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {103}
	094 Move X1, [X22+32]
	095 Add X8, X31, 40
	096 Move X0, X21
	097 Move X2, X31
	098 Call ReadOnlyTransformHandle.Bind, X0, X1
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 Move X8, [X31+56]
	101 Move [X31+7], V0
	102 Move [X31+128], X8
	103 Move X0, [X25]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X24, 0x1CCB000
	109 Move W8, [X24+1576]
	110 Compare W8, 0
	111 JumpIfNotEqual {117}
	112 Move X0, 0x1A0D000
	113 Move X0, [X0+3648]
	114 Call 0x1C17CF4
	115 Move W8, 1
	116 Move [X24+1576], W8
	117 Move X0, [X25]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {123}
	121 Call 0x1C17DFC
	122 Move X0, [X25]
	123 Move X8, [X0+184]
	124 Move W9, [X22+52]
	125 Move S13, [X8+12]
	126 Move S11, [X8+16]
	127 Move S15, [X8+20]
	128 Move S12, [X8+24]
	129 Compare W9, 0
	130 JumpIfEqual {148}
	131 Move X0, [X22+16]
	132 Compare X0, 0
	133 JumpIfEqual {294}
	134 Move X1, X31
	135 Call Transform.get_position, X0
	136 Move X0, [X22+24]
	137 Compare X0, 0
	138 JumpIfEqual {294}
	139 Move X1, X31
	140 Move V8, V0
	141 Move V9, V1
	142 Move V10, V2
	143 Move X28, X27
	144 Call Transform.get_position, X0
	145 Subtract S14, S8, S0
	146 Subtract S9, S9, S1
	147 Subtract S10, S10, S2
	148 Move S14, [X8]
	149 Move S9, [X8+4]
	150 Move V10, [X8+8]
	151 Move X28, X27
	152 Move W8, [X22+53]
	153 Move X27, X26
	154 Compare W8, 0
	155 JumpIfEqual {204}
	156 Move X0, [X22+24]
	157 Move [X31+8], S10
	158 Move [X31+16], S9
	159 Compare X0, 0
	160 JumpIfEqual {294}
	161 Move X1, X31
	162 Call Transform.get_rotation, X0
	163 Move X0, X31
	164 Call Quaternion.Inverse, X0
	165 Move X0, [X22+16]
	166 Compare X0, 0
	167 JumpIfEqual {294}
	168 Move X1, X31
	169 Move V10, V0
	170 Move V9, V1
	171 Move V8, V2
	172 Move V11, V3
	173 Call Transform.get_rotation, X0
	174 Multiply S4, S11, S0
	175 Multiply S5, S10, S3
	176 Multiply S6, S9, S2
	177 Multiply S7, S8, S1
	178 Multiply S16, S11, S1
	179 Multiply S17, S9, S3
	180 Multiply S18, S8, S0
	181 Multiply S19, S10, S2
	182 Multiply S20, S10, S1
	183 Multiply S21, S10, S0
	184 Multiply S0, S9, S0
	185 Multiply S1, S9, S1
	186 Multiply S22, S11, S2
	187 Multiply S23, S11, S3
	188 Multiply S3, S8, S3
	189 Move S10, [X31+8]
	190 Move S9, [X31+12]
	191 Add S4, S4, S5
	192 Add S5, S16, S17
	193 Add S3, S22, S3
	194 Subtract S16, S23, S21
	195 Multiply S2, S8, S2
	196 Add S4, S6, S4
	197 Add S5, S18, S5
	198 Add S3, S20, S3
	199 Subtract S1, S16, S1
	200 Subtract S13, S4, S7
	201 Subtract S11, S5, S19
	202 Subtract S15, S3, S0
	203 Subtract S12, S1, S2
	204 Move X8, [X23+32]
	205 Move X0, X22
	206 Move X8, [X8+192]
	207 Move X1, [X8+72]
	208 Call TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetPositionWeightFloatProperty, X0
	209 Move X2, X0
	210 Move X0, X21
	211 Move X1, X20
	212 Move X3, X31
	213 Call FloatProperty.Bind, X0, X1, X2
	214 Move X8, [X23+32]
	215 Move X24, X0
	216 Move X25, X1
	217 Move X0, X22
	218 Move X8, [X8+192]
	219 Move X8, [X8+80]
	220 Move X1, X8
	221 Call TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetRotationWeightFloatProperty, X0
	222 Move X2, X0
	223 Move X0, X21
	224 Move X1, X20
	225 Move X3, X31
	226 Call FloatProperty.Bind, X0, X1, X2
	227 Move X8, [X23+32]
	228 Move X26, X0
	229 Move X23, X1
	230 Move X0, X22
	231 Move X8, [X8+192]
	232 Move X8, [X8+88]
	233 Move X1, X8
	234 Call TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_hintWeightFloatProperty, X0
	235 Move X2, X0
	236 Move X0, X21
	237 Move X1, X20
	238 Move X3, X31
	239 Call FloatProperty.Bind, X0, X1, X2
	240 Move X8, [X31+32]
	241 Move V0, [X31+7]
	242 Move X9, [X31+96]
	243 Move V2, [X31+64]
	244 Move V1, [X31+80]
	245 Move [X19+20], W8
	246 Move X8, [X31+24]
	247 Move [X19], X27
	248 Move [X19+8], W28
	249 Move [X19+12], X29
	250 Move [X19+24], X8
	251 Move X8, [X31+16]
	252 Move [X19+84], S14
	253 Move [X19+92], S9
	254 Move [X19+92], S10
	255 Move [X19+100], S13
	256 Move [X19+100], S11
	257 Move [X19+108], S15
	258 Move [X19+32], W8
	259 Move X8, [X31+128]
	260 Move [X19+108], S12
	261 Move [X19+112], X24
	262 Move [X19+120], X25
	263 Move [X19+128], X26
	264 Move [X19+136], X23
	265 Move [X19+144], X0
	266 Move [X19+152], X1
	267 Move [X19+36], V0
	268 Move [X19+52], X8
	269 Move [X19+60], V1
	270 Move [X19+76], X9
	271 Move [X19+10], V2
	272 Move X20, [X31+288]
	273 Move X19, [X31+296]
	274 Move X22, [X31+272]
	275 Move X21, [X31+280]
	276 Move X24, [X31+256]
	277 Move X23, [X31+264]
	278 Move X26, [X31+240]
	279 Move X25, [X31+248]
	280 Move X28, [X31+224]
	281 Move X27, [X31+232]
	282 Move X29, [X31+208]
	283 Move X30, [X31+216]
	284 Move D9, [X31+192]
	285 Move D8, [X31+200]
	286 Move D11, [X31+176]
	287 Move D10, [X31+184]
	288 Move D13, [X31+160]
	289 Move D12, [X31+168]
	290 Move D15, [X31+144]
	291 Move D14, [X31+152]
	292 Add X31, X31, 304
	293 Return X0
	294 Call 0x1C17F20

Method: System.Void Destroy(UnityEngine.Animations.Rigging.TwoBoneIKConstraintJob job)

Disassembly:
	0x027108C8 ADRP X0, 0x19E3000

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x027108CC LDR X0, [X0 + 0x6C0]
	0x027108D0 BL 0x1C16CF4
	0x027108D4 MOVZ W8, 0x1
	0x027108D8 STRB W8, [X21 + 0x5F3]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+96]
	004 Call AnimationJobBinder`2<TwoBoneIKConstraintJob, TwoBoneIKConstraintData>..ctor, X0
	005 Return 

