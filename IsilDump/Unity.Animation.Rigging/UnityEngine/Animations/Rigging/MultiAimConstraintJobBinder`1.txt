Type: UnityEngine.Animations.Rigging.MultiAimConstraintJobBinder`1

Method: UnityEngine.Animations.Rigging.MultiAimConstraintJob Create(UnityEngine.Animator animator, ref T data, UnityEngine.Component component)

Disassembly:
	0x031A2908 ADD X0, X19, 0x1D0
	0x031A290C ADD X1, X19, 0x258
	0x031A2910 MOVZ W2, 0x88
	0x031A2914 BL 0x3EB1AC0
	0x031A2918 LDR X1, [X19 + 0x78]
	0x031A291C ADD X26, X19, 0x368
	0x031A2920 ADD X3, X26, 0x58
	0x031A2924 ADD X2, X19, 0x1D0
	0x031A2928 MOV X0, X28
	0x031A292C MOV X4, X31
	0x031A2930 BL 0x36ECA3C
	0x031A2934 ADD X0, X19, 0x148
	0x031A2938 ADD X1, X19, 0x2E0
	0x031A293C MOVZ W2, 0x88
	0x031A2940 BL 0x3EB1AC0
	0x031A2944 LDR X8, [X22]
	0x031A2948 LDR X8, [X8 + 0xC0]
	0x031A294C LDR X0, [X8 + 0x8]
	0x031A2950 LDRB W9, [X0 + 0x135]
	0x031A2954 TBNZ X9, 0x0, 0x31A2964
	0x031A2958 BL 0x1C5C684
	0x031A295C LDR X8, [X22]
	0x031A2960 LDR X8, [X8 + 0xC0]
	0x031A2964 LDR X2, [X19 + 0x98]
	0x031A2968 LDR X1, [X8 + 0x48]
	0x031A296C ADRP X27, 0xF7B000
	0x031A2970 ADRP X20, 0xF7B000
	0x031A2974 LDR X27, [X27 + 0x940]
	0x031A2978 LDR X20, [X20 + 0x128]
	0x031A297C ADD X5, X19, 0xB0
	0x031A2980 MOV X3, X21
	0x031A2984 MOV X4, X31
	0x031A2988 BL 0x1C17728
	0x031A298C LDR X23, [X19 + 0xB0]
	0x031A2990 ADD X0, X19, 0xC0
	0x031A2994 ADD X1, X19, 0x148
	0x031A2998 MOVZ W2, 0x88
	0x031A299C ADD X28, X26, 0x68
	0x031A29A0 BL 0x3EB1AC0
	0x031A29A4 LDP X0, X1, [X19 + 0x70]
	0x031A29A8 ADD X2, X19, 0xC0
	0x031A29AC MOV X3, X23
	0x031A29B0 MOV X4, X28
	0x031A29B4 MOV X5, X31
	0x031A29B8 BL 0x36ECCCC
	0x031A29BC LDR X0, [X24]
	0x031A29C0 LDR W8, [X0 + 0xE0]
	0x031A29C4 CBNZ W8, 0x31A29CC
	0x031A29C8 BL 0x1C16DFC
	0x031A29CC ADRP X26, 0xF7D000
	0x031A29D0 LDR X26, [X26 + 0x230]
	0x031A29D4 LDR W1, [X19 + 0x2E0]
	0x031A29D8 LDR X4, [X27]
	0x031A29DC ADD X0, X19, 0xB0
	0x031A29E0 MOVZ W2, 0x4
	0x031A29E4 MOV W3, W31
	0x031A29E8 STP X31, X31, [X19 + 0xB0]
	0x031A29EC BL 0x23DFA34
	0x031A29F0 LDR V0, [X19 + 0xB]
	0x031A29F4 LDR W1, [X19 + 0x2E0]
	0x031A29F8 LDR X4, [X20]
	0x031A29FC ADD X20, X19, 0x368
	0x031A2A00 ADD X0, X19, 0xA0
	0x031A2A04 MOVZ W2, 0x4
	0x031A2A08 MOV W3, W31
	0x031A2A0C STUR V0, [X20 + 0x78]
	0x031A2A10 STP X31, X31, [X19 + 0xA0]
	0x031A2A14 BL 0x23E51BC
	0x031A2A18 LDR V0, [X19 + 0xA]
	0x031A2A1C ADRP X28, 0xF52000
	0x031A2A20 LDR X28, [X28 + 0x5A8]
	0x031A2A24 MOV X27, X31
	0x031A2A28 MOV X23, X31
	0x031A2A2C STUR V0, [X20 + 0x88]
	0x031A2A30 LDR X0, [X24]
	0x031A2A34 LDR W8, [X0 + 0xE0]
	0x031A2A38 CBNZ W8, 0x31A2A40
	0x031A2A3C BL 0x1C16DFC
	0x031A2A40 LDR X8, [X22]
	0x031A2A44 LDRSW X20, [X19 + 0x2E0]
	0x031A2A48 LDR X8, [X8 + 0xC0]
	0x031A2A4C LDR X0, [X8 + 0x8]
	0x031A2A50 LDRB W9, [X0 + 0x135]
	0x031A2A54 TBNZ X9, 0x0, 0x31A2A64
	0x031A2A58 BL 0x1C5C684
	0x031A2A5C LDR X8, [X22]
	0x031A2A60 LDR X8, [X8 + 0xC0]
	0x031A2A64 CMP X23, X20
	0x031A2A68 B.GE 0x31A2C5C
	0x031A2A6C LDR X1, [X8 + 0x50]
	0x031A2A70 ADD X5, X19, 0x258
	0x031A2A74 MOV X2, X25
	0x031A2A78 MOV X3, X21
	0x031A2A7C MOV X4, X31
	0x031A2A80 BL 0x1C17728
	0x031A2A84 LDRB W8, [X19 + 0x258]
	0x031A2A88 CBZ W8, 0x31A2C10
	0x031A2A8C LDR X8, [X22]
	0x031A2A90 LDR X8, [X8 + 0xC0]
	0x031A2A94 LDR X0, [X8 + 0x8]
	0x031A2A98 LDRB W9, [X0 + 0x135]
	0x031A2A9C TBNZ X9, 0x0, 0x31A2AAC
	0x031A2AA0 BL 0x1C5C684
	0x031A2AA4 LDR X8, [X22]
	0x031A2AA8 LDR X8, [X8 + 0xC0]
	0x031A2AAC LDR X1, [X8 + 0x10]
	0x031A2AB0 LDR X2, [X19 + 0x90]
	0x031A2AB4 ADD X5, X19, 0x258
	0x031A2AB8 MOV X3, X21
	0x031A2ABC MOV X4, X31
	0x031A2AC0 BL 0x1C17728
	0x031A2AC4 LDR X0, [X19 + 0x258]
	0x031A2AC8 CBZ X0, 0x31A2EB0
	0x031A2ACC MOV X1, X31
	0x031A2AD0 BL 0x3C3DEB4
	0x031A2AD4 LDR X8, [X22]
	0x031A2AD8 MOV V8.16B, V0.16B
	0x031A2ADC MOV V9.16B, V1.16B
	0x031A2AE0 MOV V10.16B, V2.16B
	0x031A2AE4 LDR X8, [X8 + 0xC0]
	0x031A2AE8 MOV V11.16B, V3.16B
	0x031A2AEC LDR X0, [X8 + 0x8]
	0x031A2AF0 LDRB W9, [X0 + 0x135]
	0x031A2AF4 TBNZ X9, 0x0, 0x31A2B04
	0x031A2AF8 BL 0x1C5C684
	0x031A2AFC LDR X8, [X22]
	0x031A2B00 LDR X8, [X8 + 0xC0]
	0x031A2B04 LDR X1, [X8 + 0x18]
	0x031A2B08 LDR X2, [X19 + 0x88]
	0x031A2B0C ADD X5, X19, 0x258
	0x031A2B10 MOV X3, X21
	0x031A2B14 MOV X4, X31
	0x031A2B18 BL 0x1C17728
	0x031A2B1C LDR V4, [X19 + 0x258]
	0x031A2B20 LDR V5, [X19 + 0x25C]
	0x031A2B24 LDR V6, [X19 + 0x260]
	0x031A2B28 MOV V0.16B, V8.16B
	0x031A2B2C MOV V1.16B, V9.16B
	0x031A2B30 MOV V2.16B, V10.16B
	0x031A2B34 MOV V3.16B, V11.16B
	0x031A2B38 MOV X0, X31
	0x031A2B3C BL 0x3C2A9FC
	0x031A2B40 LDR X0, [X24]
	0x031A2B44 MOV V8.16B, V0.16B
	0x031A2B48 MOV V9.16B, V1.16B
	0x031A2B4C MOV V10.16B, V2.16B
	0x031A2B50 LDR W8, [X0 + 0xE0]
	0x031A2B54 CBNZ W8, 0x31A2B5C
	0x031A2B58 BL 0x1C16DFC
	0x031A2B5C ADD X0, X19, 0x2E0
	0x031A2B60 MOV W1, W23
	0x031A2B64 MOV X2, X31
	0x031A2B68 BL 0x36ECB58
	0x031A2B6C CBZ X0, 0x31A2EB0
	0x031A2B70 MOV X1, X31
	0x031A2B74 BL 0x3C3F58C
	0x031A2B78 LDR X8, [X22]
	0x031A2B7C MOV V12.16B, V1.16B
	0x031A2B80 MOV V13.16B, V2.16B
	0x031A2B84 STR S0, [X19 + 0x98]
	0x031A2B88 LDR X8, [X8 + 0xC0]
	0x031A2B8C LDR X0, [X8 + 0x8]
	0x031A2B90 LDRB W9, [X0 + 0x135]
	0x031A2B94 TBNZ X9, 0x0, 0x31A2BA4
	0x031A2B98 BL 0x1C5C684
	0x031A2B9C LDR X8, [X22]
	0x031A2BA0 LDR X8, [X8 + 0xC0]
	0x031A2BA4 LDR X1, [X8 + 0x10]
	0x031A2BA8 LDR X2, [X19 + 0x80]
	0x031A2BAC ADD X5, X19, 0x258
	0x031A2BB0 MOV X3, X21
	0x031A2BB4 MOV X4, X31
	0x031A2BB8 BL 0x1C17728
	0x031A2BBC LDR X0, [X19 + 0x258]
	0x031A2BC0 CBZ X0, 0x31A2EB0
	0x031A2BC4 MOV X1, X31
	0x031A2BC8 BL 0x3C3F58C
	0x031A2BCC LDR X0, [X26]
	0x031A2BD0 MOV V14.16B, V0.16B
	0x031A2BD4 MOV V15.16B, V1.16B
	0x031A2BD8 MOV V11.16B, V2.16B
	0x031A2BDC LDR W8, [X0 + 0xE0]
	0x031A2BE0 CBNZ W8, 0x31A2BE8
	0x031A2BE4 BL 0x1C16DFC
	0x031A2BE8 LDR V0, [X19 + 0x98]
	0x031A2BEC FSUB S1, S12, S15
	0x031A2BF0 FSUB S2, S13, S11
	0x031A2BF4 MOV V3.16B, V8.16B
	0x031A2BF8 FSUB S0, S0, S14
	0x031A2BFC MOV V4.16B, V9.16B
	0x031A2C00 MOV V5.16B, V10.16B
	0x031A2C04 MOV X0, X31
	0x031A2C08 BL 0x36E420C
	0x031A2C0C B 0x31A2C40
	0x031A2C10 ADRP X8, 0x1236000
	0x031A2C14 LDRB W8, [X8 + 0x793]
	0x031A2C18 CBNZ W8, 0x31A2C30
	0x031A2C1C MOV X0, X28
	0x031A2C20 BL 0x1C16CF4
	0x031A2C24 ADRP X8, 0x1236000
	0x031A2C28 MOVZ W9, 0x1
	0x031A2C2C STRB W9, [X8 + 0x793]
	0x031A2C30 LDR X8, [X28]
	0x031A2C34 LDR X8, [X8 + 0xB8]
	0x031A2C38 LDP S0, S1, [X8]
	0x031A2C3C LDP S2, S3, [X8 + 0x8]
	0x031A2C40 LDR X8, [X19 + 0x3E0]
	0x031A2C44 ADD X23, X23, 0x1
	0x031A2C48 ADD X8, X8, X27
	0x031A2C4C ADD X27, X27, 0x10
	0x031A2C50 STP S0, S1, [X8]
	0x031A2C54 STP S2, S3, [X8 + 0x8]
	0x031A2C58 B 0x31A2A30
	0x031A2C5C LDR X1, [X8 + 0x58]
	0x031A2C60 LDR X2, [X19 + 0x10]
	0x031A2C64 ADD X5, X19, 0x258
	0x031A2C68 MOV X3, X21
	0x031A2C6C MOV X4, X31
	0x031A2C70 BL 0x1C17728
	0x031A2C74 LDP X20, X1, [X19 + 0x70]
	0x031A2C78 LDR X2, [X19 + 0x258]
	0x031A2C7C MOV X3, X31
	0x031A2C80 MOV X0, X20
	0x031A2C84 BL 0x36E515C
	0x031A2C88 ADD X8, X19, 0x368
	0x031A2C8C STUR X0, [X8 + 0xE4]
	0x031A2C90 STUR X1, [X8 + 0xEC]
	0x031A2C94 LDR X8, [X22]
	0x031A2C98 LDR X8, [X8 + 0xC0]
	0x031A2C9C LDR X0, [X8 + 0x8]
	0x031A2CA0 LDRB W9, [X0 + 0x135]
	0x031A2CA4 TBNZ X9, 0x0, 0x31A2CB4
	0x031A2CA8 BL 0x1C5C684
	0x031A2CAC LDR X8, [X22]
	0x031A2CB0 LDR X8, [X8 + 0xC0]
	0x031A2CB4 LDR X1, [X8 + 0x60]
	0x031A2CB8 LDR X2, [X19 + 0x18]
	0x031A2CBC LDP X24, X23, [X19 + 0x38]
	0x031A2CC0 ADD X5, X19, 0x258
	0x031A2CC4 MOV X3, X21
	0x031A2CC8 MOV X4, X31
	0x031A2CCC BL 0x1C17728
	0x031A2CD0 LDR X2, [X19 + 0x258]
	0x031A2CD4 LDR X1, [X19 + 0x78]
	0x031A2CD8 MOV X0, X20
	0x031A2CDC MOV X3, X31
	0x031A2CE0 BL 0x36E515C
	0x031A2CE4 ADD X8, X19, 0x368
	0x031A2CE8 STUR X0, [X8 + 0xF4]
	0x031A2CEC STUR X1, [X8 + 0xFC]
	0x031A2CF0 LDR X8, [X22]
	0x031A2CF4 LDR X8, [X8 + 0xC0]
	0x031A2CF8 LDR X0, [X8 + 0x8]
	0x031A2CFC LDRB W9, [X0 + 0x135]
	0x031A2D00 TBNZ X9, 0x0, 0x31A2D10
	0x031A2D04 BL 0x1C5C684
	0x031A2D08 LDR X8, [X22]
	0x031A2D0C LDR X8, [X8 + 0xC0]
	0x031A2D10 LDR X1, [X8 + 0x68]
	0x031A2D14 LDR X2, [X19 + 0x20]
	0x031A2D18 ADD X5, X19, 0x258
	0x031A2D1C MOV X3, X21
	0x031A2D20 MOV X4, X31
	0x031A2D24 BL 0x1C17728
	0x031A2D28 LDR X2, [X19 + 0x258]
	0x031A2D2C LDR X1, [X19 + 0x78]
	0x031A2D30 ADD X8, X19, 0x258
	0x031A2D34 MOV X0, X20
	0x031A2D38 MOV X3, X31
	0x031A2D3C BL 0x36E54DC
	0x031A2D40 ADD X8, X19, 0x258
	0x031A2D44 LDP V0, V1, [X8]
	0x031A2D48 LDR V2, [X8 + 0x2]
	0x031A2D4C ADD X8, X19, 0x368
	0x031A2D50 STUR V0, [X8 + 0x24]
	0x031A2D54 STUR V1, [X8 + 0x34]
	0x031A2D58 STUR V2, [X8 + 0x44]
	0x031A2D5C LDR X8, [X22]
	0x031A2D60 LDR X8, [X8 + 0xC0]
	0x031A2D64 LDR X0, [X8 + 0x8]
	0x031A2D68 LDRB W9, [X0 + 0x135]
	0x031A2D6C TBNZ X9, 0x0, 0x31A2D7C
	0x031A2D70 BL 0x1C5C684
	0x031A2D74 LDR X8, [X22]
	0x031A2D78 LDR X8, [X8 + 0xC0]
	0x031A2D7C LDR X1, [X8 + 0x70]
	0x031A2D80 LDR X2, [X19 + 0x28]
	0x031A2D84 ADD X5, X19, 0x258
	0x031A2D88 MOV X3, X21
	0x031A2D8C MOV X4, X31
	0x031A2D90 BL 0x1C17728
	0x031A2D94 ADRP X8, 0xF5A000
	0x031A2D98 LDR X8, [X8 + 0x9E8]
	0x031A2D9C LDRB W20, [X19 + 0x258]
	0x031A2DA0 LDR X0, [X8]
	0x031A2DA4 LDR W8, [X0 + 0xE0]
	0x031A2DA8 CBNZ W8, 0x31A2DB0
	0x031A2DAC BL 0x1C16DFC
	0x031A2DB0 CMP W20, 0x0
	0x031A2DB4 CSET W0, NE
	0x031A2DB8 MOV X1, X31
	0x031A2DBC BL 0x33184A4
	0x031A2DC0 LDR X8, [X22]
	0x031A2DC4 MOV V8.16B, V0.16B
	0x031A2DC8 LDR X8, [X8 + 0xC0]
	0x031A2DCC LDR X0, [X8 + 0x8]
	0x031A2DD0 LDRB W9, [X0 + 0x135]
	0x031A2DD4 TBNZ X9, 0x0, 0x31A2DE4
	0x031A2DD8 BL 0x1C5C684
	0x031A2DDC LDR X8, [X22]
	0x031A2DE0 LDR X8, [X8 + 0xC0]
	0x031A2DE4 LDR X1, [X8 + 0x78]
	0x031A2DE8 LDR X2, [X19 + 0x30]
	0x031A2DEC LDR X20, [X19 + 0x8]
	0x031A2DF0 ADD X5, X19, 0x258
	0x031A2DF4 MOV X3, X21
	0x031A2DF8 MOV X4, X31
	0x031A2DFC BL 0x1C17728
	0x031A2E00 LDRB W0, [X19 + 0x258]
	0x031A2E04 MOV X1, X31
	0x031A2E08 BL 0x33184A4
	0x031A2E0C LDR X8, [X22]
	0x031A2E10 MOV V9.16B, V0.16B
	0x031A2E14 LDR X8, [X8 + 0xC0]
	0x031A2E18 LDR X0, [X8 + 0x8]
	0x031A2E1C LDRB W9, [X0 + 0x135]
	0x031A2E20 TBNZ X9, 0x0, 0x31A2E30
	0x031A2E24 BL 0x1C5C684
	0x031A2E28 LDR X8, [X22]
	0x031A2E2C LDR X8, [X8 + 0xC0]
	0x031A2E30 LDR X1, [X8 + 0x80]
	0x031A2E34 ADD X5, X19, 0x258
	0x031A2E38 MOV X2, X20
	0x031A2E3C MOV X3, X21
	0x031A2E40 MOV X4, X31
	0x031A2E44 BL 0x1C17728
	0x031A2E48 LDRB W0, [X19 + 0x258]
	0x031A2E4C MOV X1, X31
	0x031A2E50 BL 0x33184A4
	0x031A2E54 ADD X1, X19, 0x368
	0x031A2E58 MOVZ W2, 0x118
	0x031A2E5C MOV X0, X24
	0x031A2E60 STR S8, [X19 + 0x440]
	0x031A2E64 STR S9, [X19 + 0x444]
	0x031A2E68 STR S0, [X19 + 0x448]
	0x031A2E6C BL 0x3EB1AC0
	0x031A2E70 LDR X8, [X23 + 0x28]
	0x031A2E74 LDUR X9, [X29 - 0x50]
	0x031A2E78 CMP X8, X9
	0x031A2E7C B.NE 0x31A2EB4
	0x031A2E80 SUB X31, X29, 0x40
	0x031A2E84 LDP X20, X19, [X31 + 0x90]
	0x031A2E88 LDP X22, X21, [X31 + 0x80]
	0x031A2E8C LDP X24, X23, [X31 + 0x70]
	0x031A2E90 LDP X26, X25, [X31 + 0x60]
	0x031A2E94 LDP X28, X27, [X31 + 0x50]
	0x031A2E98 LDP X29, X30, [X31 + 0x40]
	0x031A2E9C LDP D9, D8, [X31 + 0x30]
	0x031A2EA0 LDP D11, D10, [X31 + 0x20]
	0x031A2EA4 LDP D13, D12, [X31 + 0x10]
	0x031A2EA8 LDP D15, D14, [X31], #0xA0
	0x031A2EAC RET
	0x031A2EB0 BL 0x1C16F20
	0x031A2EB4 BL 0x3EB1B20
	0x031A2EB8 STR X30, [X31 - 0x40]!
	0x031A2EBC STP X24, X23, [X31 + 0x10]
	0x031A2EC0 STP X22, X21, [X31 + 0x20]
	0x031A2EC4 STP X20, X19, [X31 + 0x30]
	0x031A2EC8 ADRP X24, 0x1239000
	0x031A2ECC ADRP X23, 0xF7D000
	0x031A2ED0 ADRP X22, 0xF7B000
	0x031A2ED4 ADRP X21, 0xF7B000
	0x031A2ED8 ADRP X20, 0xF7B000
	0x031A2EDC LDRB W8, [X24 + 0xE1A]

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 896
	022 Move X19, 0x123A000
	023 Move W9, [X19+3607]
	024 Move X21, X4
	025 Move X27, X3
	026 Move X20, X2
	027 Move X23, X1
	028 Move X22, X8
	029 Move TEMP, X9
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {53}
	033 Move X0, 0xF5B000
	034 Move X0, [X0+2536]
	035 Call 0x1C17CF4
	036 Move X0, 0xF7C000
	037 Move X0, [X0+296]
	038 Call 0x1C17CF4
	039 Move X0, 0xF7C000
	040 Move X0, [X0+2368]
	041 Call 0x1C17CF4
	042 Move X0, 0xF52000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0xF7E000
	046 Move X0, [X0+560]
	047 Call 0x1C17CF4
	048 Move X0, 0xF7C000
	049 Move X0, [X0+2400]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X19+3607], W8
	053 Add X0, X31, 480
	054 Move W2, 136
	055 Move W1, W31
	056 Call 0x3EB2B10
	057 Add X0, X31, 616
	058 Move W2, 280
	059 Move W1, W31
	060 Call 0x3EB2B10
	061 Move X1, [X20]
	062 Move X0, X23
	063 Move X2, X31
	064 Call ReadWriteTransformHandle.Bind, X0, X1
	065 Move [X31+616], X0
	066 Move [X31+624], W1
	067 Move X0, [X20]
	068 Compare X0, 0
	069 JumpIfEqual {416}
	070 Move X19, 0xF52000
	071 Move X19, [X19+1432]
	072 Move X1, X31
	073 Add X26, X31, 616
	074 Add X25, X31, 208
	075 Call Transform.get_parent, X0
	076 Move X1, X0
	077 Add X8, X31, 208
	078 Move X0, X23
	079 Move X2, X31
	080 Call ReadOnlyTransformHandle.Bind, X0, X1
	081 Move V0, [X25]
	082 Move X8, [X31+224]
	083 Move X0, X20
	084 Move [X26+12], V0
	085 Move [X26+28], X8
	086 Move X8, [X21+32]
	087 Move X8, [X8+192]
	088 Move X1, [X8+24]
	089 Call MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_aimAxis, X0
	090 Move [X31+768], S0
	091 Move [X31+772], S1
	092 Move [X31+776], S2
	093 Move X8, [X21+32]
	094 Move X0, X20
	095 Move X8, [X8+192]
	096 Move X1, [X8+32]
	097 Call MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_upAxis, X0
	098 Move [X31+780], S0
	099 Move [X31+784], S1
	100 Move [X31+788], S2
	101 Move X8, [X21+32]
	102 Move W9, [X20+172]
	103 Move X0, X20
	104 Move X8, [X8+192]
	105 Move [X31+792], W9
	106 Move X1, [X8+48]
	107 Call MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_worldUpAxis, X0
	108 Move X0, [X19]
	109 Move [X31+796], S0
	110 Move [X31+800], S1
	111 Move [X31+804], S2
	112 Move W8, [X0+224]
	113 Move X24, [X20+176]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move [X31+24], X22
	118 Move X28, 0xF7C000
	119 Move X28, [X28+2400]
	120 Move X0, X24
	121 Move X1, X31
	122 Move X2, X31
	123 Call Object.op_Inequality, X0, X1
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {138}
	128 Move X1, [X20+176]
	129 Add X8, X31, 208
	130 Move X0, X23
	131 Move X2, X31
	132 Call ReadOnlyTransformHandle.Bind, X0, X1
	133 Move V0, [X25]
	134 Move X8, [X31+224]
	135 Add X9, X31, 553
	136 Move [X9+255], V0
	137 Move [X31+824], X8
	138 Move X22, 0xF7C000
	139 Move X19, 0xF7C000
	140 Move X22, [X22+2368]
	141 Move X19, [X19+296]
	142 Add X24, X20, 8
	143 Add X0, X31, 480
	144 Move W2, 136
	145 Move X1, X24
	146 Call 0x3EB2AC0
	147 Add X0, X31, 344
	148 Move W2, 136
	149 Move X1, X24
	150 Call 0x3EB2AC0
	151 Add X25, X31, 616
	152 Add X3, X25, 88
	153 Add X2, X31, 344
	154 Move X0, X23
	155 Move X1, X27
	156 Move X4, X31
	157 Call WeightedTransformArrayBinder.BindReadOnlyTransforms, X0, X1, X2, X3
	158 Add X0, X31, 208
	159 Add X1, X31, 480
	160 Move W2, 136
	161 Call 0x3EB2AC0
	162 Move X8, [X21+32]
	163 Move X0, X20
	164 Move X8, [X8+192]
	165 Move X1, [X8+72]
	166 Call MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_sourceObjectsProperty, X0
	167 Move X24, X0
	168 Add X0, X31, 72
	169 Add X1, X31, 208
	170 Move W2, 136
	171 Add X25, X25, 104
	172 Call 0x3EB2AC0
	173 Add X2, X31, 72
	174 Move X0, X23
	175 Move X1, X27
	176 Move X3, X24
	177 Move X4, X25
	178 Move X5, X31
	179 Move [X31+16], X27
	180 Call WeightedTransformArrayBinder.BindWeights, X0, X1, X2, X3, X4
	181 Move X0, [X28]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X29, 0xF7E000
	187 Move X29, [X29+560]
	188 Move W24, [X31+480]
	189 Move X4, [X22]
	190 Add X0, X31, 56
	191 Move W2, 4
	192 Move W1, W24
	193 Move W3, W31
	194 Move [X31+56], X31
	195 Move [X31+64], X31
	196 Call NativeArray`1<Quaternion>..ctor, X0, X1, X2, X3
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 Move X4, [X19]
	199 Add X0, X31, 40
	200 Move W2, 4
	201 Move W1, W24
	202 Move W3, W31
	203 Move [X26+120], V0
	204 Move [X31+40], X31
	205 Move [X31+48], X31
	206 Call NativeArray`1<Single>..ctor, X0, X1, X2, X3
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 Move X25, 0xF53000
	209 Move X25, [X25+1448]
	210 Move X19, X31
	211 Move X24, X31
	212 Move X27, 0x1237000
	213 Move [X26+136], V0
	214 Move W22, 1
	215 Move X0, [X28]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move W8, [X20+188]
	223 Compare W8, 0
	224 JumpIfEqual {289}
	225 Move X0, [X20]
	226 Compare X0, 0
	227 JumpIfEqual {416}
	228 Move X1, X31
	229 Call Transform.get_rotation, X0
	230 Move X8, [X21+32]
	231 Move X0, X20
	232 Move V8, V0
	233 Move V9, V1
	234 Move X8, [X8+192]
	235 Move V10, V2
	236 Move V11, V3
	237 Move X1, [X8+24]
	238 Call MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_aimAxis, X0
	239 Move V4, V0
	240 Move V5, V1
	241 Move V6, V2
	242 Move V0, V8
	243 Move V1, V9
	244 Move V2, V10
	245 Move V3, V11
	246 Move X0, X31
	247 Call Quaternion.op_Multiply, X0, X1
	248 Move X0, [X28]
	249 Move V9, V0
	250 Move V10, V1
	251 Move V14, V2
	252 Move W8, [X0+224]
	253 Compare W8, 0
	254 JumpIfNotEqual {256}
	255 Call 0x1C17DFC
	256 Add X0, X31, 480
	257 Move W1, W24
	258 Move X2, X31
	259 Call WeightedTransformArray.get_Item, X0, X1
	260 Compare X0, 0
	261 JumpIfEqual {416}
	262 Move X1, X31
	263 Call Transform.get_position, X0
	264 Move X0, [X20]
	265 Compare X0, 0
	266 JumpIfEqual {416}
	267 Move X1, X31
	268 Move V11, V0
	269 Move V12, V1
	270 Move V13, V2
	271 Call Transform.get_position, X0
	272 Move X0, [X29]
	273 Move V15, V1
	274 Move V8, V2
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {281}
	278 Move [X31+36], S0
	279 Call 0x1C17DFC
	280 Move V0, [X31+36]
	281 Subtract S0, S11, S0
	282 Subtract S1, S12, S15
	283 Subtract S2, S13, S8
	284 Move V3, V9
	285 Move V4, V10
	286 Move V5, V14
	287 Move X0, X31
	288 Call QuaternionExt.FromToRotation, X0, X1
	289 Move W8, [X27+1939]
	290 Compare W8, 0
	291 JumpIfNotEqual {295}
	292 Move X0, X25
	293 Call 0x1C17CF4
	294 Move [X27+1939], W22
	295 Move X8, [X25]
	296 Move X8, [X8+184]
	297 Move S0, [X8]
	298 Move S1, [X8+4]
	299 Move S2, [X8+8]
	300 Move S3, [X8+12]
	301 Move X8, [X31+736]
	302 Add X24, X24, 1
	303 Add X8, X8, X19
	304 Add X19, X19, 16
	305 Move [X8], S0
	306 Move [X8+8], S1
	307 Move [X8+8], S2
	308 Move [X8+16], S3
	309 Move X8, [X21+32]
	310 Move X0, X20
	311 Move X8, [X8+192]
	312 Move X1, [X8+88]
	313 Call MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_minLimitFloatProperty, X0
	314 Move X19, [X31+16]
	315 Move X2, X0
	316 Move X0, X23
	317 Move X3, X31
	318 Move X1, X19
	319 Call FloatProperty.Bind, X0, X1, X2
	320 Move [X26+228], X0
	321 Move [X26+236], X1
	322 Move X8, [X21+32]
	323 Move X0, X20
	324 Move X8, [X8+192]
	325 Move X1, [X8+96]
	326 Call MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_maxLimitFloatProperty, X0
	327 Move X2, X0
	328 Move X0, X23
	329 Move X1, X19
	330 Move X3, X31
	331 Call FloatProperty.Bind, X0, X1, X2
	332 Move [X26+244], X0
	333 Move [X26+252], X1
	334 Move X8, [X21+32]
	335 Move X0, X20
	336 Move X8, [X8+192]
	337 Move X1, [X8+104]
	338 Call MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_offsetVector3Property, X0
	339 Move X2, X0
	340 Add X8, X31, 208
	341 Move X0, X23
	342 Move X1, X19
	343 Move X3, X31
	344 Call Vector3Property.Bind, X0, X1, X2
	345 Add X8, X31, 208
	346 Move V0, [X8]
	347 Move V1, [X8+16]
	348 Move V2, [X8+2]
	349 Move X0, X20
	350 Move [X26+36], V0
	351 Move [X26+52], V1
	352 Move [X26+68], V2
	353 Move X8, [X21+32]
	354 Move X8, [X8+192]
	355 Move X1, [X8+112]
	356 Call MultiAimConstraintData.get_constrainedXAxis, X0
	357 Move X8, 0xF5B000
	358 Move X8, [X8+2536]
	359 Move W22, W0
	360 Move X8, [X8]
	361 Move W9, [X8+224]
	362 Compare W9, 0
	363 JumpIfNotEqual {366}
	364 Move X0, X8
	365 Call 0x1C17DFC
	366 And W0, W22, 1
	367 Move X1, X31
	368 Call Convert.ToSingle, X0
	369 Move X8, [X21+32]
	370 Move X0, X20
	371 Move V8, V0
	372 Move X8, [X8+192]
	373 Move X1, [X8+120]
	374 Call MultiAimConstraintData.get_constrainedYAxis, X0
	375 And W0, W0, 1
	376 Move X1, X31
	377 Call Convert.ToSingle, X0
	378 Move X8, [X21+32]
	379 Move X0, X20
	380 Move V9, V0
	381 Move X8, [X8+192]
	382 Move X1, [X8+128]
	383 Call MultiAimConstraintData.get_constrainedZAxis, X0
	384 And W0, W0, 1
	385 Move X1, X31
	386 Call Convert.ToSingle, X0
	387 Move X0, [X31+24]
	388 Add X1, X31, 616
	389 Move W2, 280
	390 Move [X31+832], S8
	391 Move [X31+836], S9
	392 Move [X31+840], S0
	393 Call 0x3EB2AC0
	394 Add X31, X31, 896
	395 Move X20, [X31+144]
	396 Move X19, [X31+152]
	397 Move X22, [X31+128]
	398 Move X21, [X31+136]
	399 Move X24, [X31+112]
	400 Move X23, [X31+120]
	401 Move X26, [X31+96]
	402 Move X25, [X31+104]
	403 Move X28, [X31+80]
	404 Move X27, [X31+88]
	405 Move X29, [X31+64]
	406 Move X30, [X31+72]
	407 Move D9, [X31+48]
	408 Move D8, [X31+56]
	409 Move D11, [X31+32]
	410 Move D10, [X31+40]
	411 Move D13, [X31+16]
	412 Move D12, [X31+24]
	413 Move D15, [X31+160]
	414 Move D14, [X31+168]
	415 Return X0
	416 Call 0x1C17F20

Method: System.Void Destroy(UnityEngine.Animations.Rigging.MultiAimConstraintJob job)

Disassembly:
	0x031A2EE0 LDR X23, [X23 + 0x238]
	0x031A2EE4 LDR X22, [X22 + 0x150]
	0x031A2EE8 LDR X21, [X21 + 0x958]
	0x031A2EEC LDR X20, [X20 + 0x158]
	0x031A2EF0 MOV X19, X1
	0x031A2EF4 TBNZ X8, 0x0, 0x31A2F30
	0x031A2EF8 ADRP X0, 0xF7B000
	0x031A2EFC LDR X0, [X0 + 0x150]
	0x031A2F00 BL 0x1C16CF4
	0x031A2F04 ADRP X0, 0xF7B000
	0x031A2F08 LDR X0, [X0 + 0x958]
	0x031A2F0C BL 0x1C16CF4
	0x031A2F10 ADRP X0, 0xF7D000
	0x031A2F14 LDR X0, [X0 + 0x238]
	0x031A2F18 BL 0x1C16CF4
	0x031A2F1C ADRP X0, 0xF7B000
	0x031A2F20 LDR X0, [X0 + 0x158]
	0x031A2F24 BL 0x1C16CF4
	0x031A2F28 MOVZ W8, 0x1
	0x031A2F2C STRB W8, [X24 + 0xE1A]
	0x031A2F30 LDR X1, [X23]
	0x031A2F34 ADD X0, X19, 0x58
	0x031A2F38 BL 0x23E0B48
	0x031A2F3C LDR X1, [X22]
	0x031A2F40 ADD X0, X19, 0x68
	0x031A2F44 BL 0x23DEE00
	0x031A2F48 LDR X1, [X21]
	0x031A2F4C ADD X0, X19, 0x78
	0x031A2F50 BL 0x23DFC88
	0x031A2F54 LDR X1, [X20]
	0x031A2F58 ADD X0, X19, 0x88
	0x031A2F5C LDP X20, X19, [X31 + 0x30]
	0x031A2F60 LDP X22, X21, [X31 + 0x20]
	0x031A2F64 LDP X24, X23, [X31 + 0x10]
	0x031A2F68 LDR X30, [X31], #0x40
	0x031A2F6C B 0x23E53EC
	0x031A2F70 LDR X8, [X1 + 0x20]
	0x031A2F74 LDR X8, [X8 + 0xC0]
	0x031A2F78 LDR X1, [X8 + 0x88]
	0x031A2F7C LDR X2, [X1]
	0x031A2F80 BR X2
	0x031A2F84 STR D14, [X31 - 0xA0]!
	0x031A2F88 STP D13, D12, [X31 + 0x10]
	0x031A2F8C STP D11, D10, [X31 + 0x20]
	0x031A2F90 STP D9, D8, [X31 + 0x30]
	0x031A2F94 STP X29, X30, [X31 + 0x40]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x123A000
	009 Move X23, 0xF7E000
	010 Move X22, 0xF7C000
	011 Move X21, 0xF7C000
	012 Move X20, 0xF7C000
	013 Move W8, [X24+3608]
	014 Move X23, [X23+568]
	015 Move X22, [X22+336]
	016 Move X21, [X21+2392]
	017 Move X20, [X20+344]
	018 Move X19, X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0xF7C000
	024 Move X0, [X0+336]
	025 Call 0x1C17CF4
	026 Move X0, 0xF7C000
	027 Move X0, [X0+2392]
	028 Call 0x1C17CF4
	029 Move X0, 0xF7E000
	030 Move X0, [X0+568]
	031 Call 0x1C17CF4
	032 Move X0, 0xF7C000
	033 Move X0, [X0+344]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+3608], W8
	037 Move X1, [X23]
	038 Add X0, X19, 88
	039 Call NativeArray`1<ReadOnlyTransformHandle>.Dispose, X0
	040 Move X1, [X22]
	041 Add X0, X19, 104
	042 Call NativeArray`1<PropertyStreamHandle>.Dispose, X0
	043 Move X1, [X21]
	044 Add X0, X19, 120
	045 Call NativeArray`1<Quaternion>.Dispose, X0
	046 Move X1, [X20]
	047 Add X0, X19, 136
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move X30, [X31+64]
	055 Call NativeArray`1<Single>.Dispose, X0
	056 Return 

Method: System.Void .ctor()

Disassembly:
	0x031A2F98 STP X28, X27, [X31 + 0x50]
	0x031A2F9C STP X26, X25, [X31 + 0x60]
	0x031A2FA0 STP X24, X23, [X31 + 0x70]
	0x031A2FA4 STP X22, X21, [X31 + 0x80]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+136]
	004 Call AnimationJobBinder`2<MultiAimConstraintJob, MultiAimConstraintData>..ctor, X0
	005 Return 

