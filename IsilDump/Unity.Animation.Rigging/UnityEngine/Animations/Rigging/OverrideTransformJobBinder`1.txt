Type: UnityEngine.Animations.Rigging.OverrideTransformJobBinder`1

Method: UnityEngine.Animations.Rigging.OverrideTransformJob Create(UnityEngine.Animator animator, ref T data, UnityEngine.Component component)

Disassembly:
	0x024A035C MOV X4, X31
	0x024A0360 BL 0x1C17728
	0x024A0364 LDR X0, [X19 + 0xA0]
	0x024A0368 CBZ X0, 0x24A08D0
	0x024A036C MOV X1, X31
	0x024A0370 BL 0x3C3DEB4
	0x024A0374 MOV V4.16B, V0.16B
	0x024A0378 MOV V5.16B, V1.16B
	0x024A037C MOV V6.16B, V2.16B
	0x024A0380 MOV V7.16B, V3.16B
	0x024A0384 ADD X0, X19, 0x130
	0x024A0388 MOV V0.16B, V8.16B
	0x024A038C MOV V1.16B, V9.16B
	0x024A0390 MOV V2.16B, V10.16B
	0x024A0394 MOV V3.16B, V4.16B
	0x024A0398 MOV V4.16B, V5.16B
	0x024A039C MOV V5.16B, V6.16B
	0x024A03A0 MOV V6.16B, V7.16B
	0x024A03A4 MOV X1, X31
	0x024A03A8 BL 0x36E4E50
	0x024A03AC ADD X8, X19, 0xA0
	0x024A03B0 ADD X0, X19, 0x150
	0x024A03B4 MOV X1, X31
	0x024A03B8 BL 0x36E92AC
	0x024A03BC LDR V0, [X19 + 0x13]
	0x024A03C0 LDUR V1, [X28 + 0xC]
	0x024A03C4 LDP S2, S14, [X19 + 0xB4]
	0x024A03C8 LDP S13, S12, [X19 + 0xAC]
	0x024A03CC ADD X8, X19, 0xA0
	0x024A03D0 ADD X0, X19, 0x150
	0x024A03D4 ADD X1, X19, 0xF0
	0x024A03D8 MOV X2, X31
	0x024A03DC STR S2, [X19 + 0x84]
	0x024A03E0 STR V0, [X19 + 0xF]
	0x024A03E4 STUR V1, [X19 + 0xFC]
	0x024A03E8 BL 0x36E84C4
	0x024A03EC LDR X8, [X24]
	0x024A03F0 LDR V1, [X19 + 0xAC]
	0x024A03F4 LDR V0, [X19 + 0xB0]
	0x024A03F8 LDR X8, [X8 + 0xC0]
	0x024A03FC STP S0, S1, [X19 + 0x98]
	0x024A0400 LDP S0, S15, [X19 + 0xB4]
	0x024A0404 LDR X0, [X8 + 0x8]
	0x024A0408 STR S0, [X19 + 0x94]
	0x024A040C LDRB W9, [X0 + 0x135]
	0x024A0410 TBNZ X9, 0x0, 0x24A0420
	0x024A0414 BL 0x1C5C684
	0x024A0418 LDR X8, [X24]
	0x024A041C LDR X8, [X8 + 0xC0]
	0x024A0420 LDR X2, [X19]
	0x024A0424 LDR X1, [X8 + 0x10]
	0x024A0428 ADD X5, X19, 0xA0
	0x024A042C MOV X3, X23
	0x024A0430 MOV X4, X31
	0x024A0434 BL 0x1C17728
	0x024A0438 LDR X0, [X19 + 0xA0]
	0x024A043C CBZ X0, 0x24A08D0
	0x024A0440 MOV X1, X31
	0x024A0444 BL 0x3C3F49C
	0x024A0448 ADRP X8, 0x1C53000
	0x024A044C LDR X8, [X8 + 0x598]
	0x024A0450 MOV X21, X0
	0x024A0454 LDR X8, [X8]
	0x024A0458 LDR W9, [X8 + 0xE0]
	0x024A045C CBNZ W9, 0x24A0468
	0x024A0460 MOV X0, X8
	0x024A0464 BL 0x1C16DFC
	0x024A0468 MOV X0, X21
	0x024A046C MOV X1, X31
	0x024A0470 MOV X2, X31
	0x024A0474 BL 0x3C354F8
	0x024A0478 TBZ X0, 0x0, 0x24A0538
	0x024A047C STR S14, [X19 + 0x20]
	0x024A0480 STR S13, [X19 + 0x28]
	0x024A0484 STR S12, [X19 + 0x30]
	0x024A0488 CBZ X21, 0x24A08D0
	0x024A048C MOV X0, X21
	0x024A0490 MOV X1, X31
	0x024A0494 BL 0x3C3F58C
	0x024A0498 MOV X0, X21
	0x024A049C MOV X1, X31
	0x024A04A0 MOV V8.16B, V0.16B
	0x024A04A4 MOV V9.16B, V1.16B
	0x024A04A8 MOV V10.16B, V2.16B
	0x024A04AC BL 0x3C3DEB4
	0x024A04B0 LDR X0, [X25]
	0x024A04B4 MOV V11.16B, V0.16B
	0x024A04B8 MOV V12.16B, V1.16B
	0x024A04BC MOV V13.16B, V2.16B
	0x024A04C0 LDR W8, [X0 + 0xE0]
	0x024A04C4 MOV V14.16B, V3.16B
	0x024A04C8 CBNZ W8, 0x24A04D0
	0x024A04CC BL 0x1C16DFC
	0x024A04D0 ADD X0, X19, 0x110
	0x024A04D4 MOV V0.16B, V8.16B
	0x024A04D8 MOV V1.16B, V9.16B
	0x024A04DC MOV V2.16B, V10.16B
	0x024A04E0 MOV V3.16B, V11.16B
	0x024A04E4 MOV V4.16B, V12.16B
	0x024A04E8 MOV V5.16B, V13.16B
	0x024A04EC MOV V6.16B, V14.16B
	0x024A04F0 MOV X1, X31
	0x024A04F4 BL 0x36E4E50
	0x024A04F8 ADD X8, X19, 0x1D
	0x024A04FC LDR V0, [X19 + 0x11]
	0x024A0500 LDUR V1, [X8 + 0xFF]
	0x024A0504 ADD X8, X19, 0xA0
	0x024A0508 ADD X0, X19, 0x150
	0x024A050C ADD X1, X19, 0xD0
	0x024A0510 MOV X2, X31
	0x024A0514 STR V0, [X19 + 0xD]
	0x024A0518 STUR V1, [X19 + 0xDC]
	0x024A051C BL 0x36E84C4
	0x024A0520 LDP S11, S10, [X19 + 0xAC]
	0x024A0524 LDP S8, S9, [X19 + 0xB4]
	0x024A0528 LDR V12, [X19 + 0x30]
	0x024A052C LDR V13, [X19 + 0x28]
	0x024A0530 LDR V14, [X19 + 0x20]
	0x024A0534 B 0x24A0544
	0x024A0538 LDP S8, S10, [X19 + 0x94]
	0x024A053C LDR V11, [X19 + 0x9C]
	0x024A0540 MOV V9.16B, V15.16B
	0x024A0544 LDR X8, [X24]
	0x024A0548 LDR X8, [X8 + 0xC0]
	0x024A054C LDR X0, [X8 + 0x8]
	0x024A0550 LDRB W9, [X0 + 0x135]
	0x024A0554 TBNZ X9, 0x0, 0x24A0564
	0x024A0558 BL 0x1C5C684
	0x024A055C LDR X8, [X24]
	0x024A0560 LDR X8, [X8 + 0xC0]
	0x024A0564 LDR X1, [X8 + 0x20]
	0x024A0568 LDR X2, [X19 + 0x78]
	0x024A056C LDR X26, [X19 + 0x88]
	0x024A0570 ADD X5, X19, 0xA0
	0x024A0574 MOV X3, X23
	0x024A0578 MOV X4, X31
	0x024A057C BL 0x1C17728
	0x024A0580 CBZ X27, 0x24A08D0
	0x024A0584 LDR W8, [X19 + 0xA0]
	0x024A0588 MOV X0, X27
	0x024A058C MOV X1, X31
	0x024A0590 SCVTF S0, W8
	0x024A0594 BL 0x36E2600
	0x024A0598 LDR X8, [X24]
	0x024A059C STR X0, [X19 + 0x78]
	0x024A05A0 LDR X9, [X8 + 0xC0]
	0x024A05A4 LDR X8, [X9 + 0x8]
	0x024A05A8 LDRB W10, [X8 + 0x135]
	0x024A05AC TBNZ X10, 0x0, 0x24A05C4
	0x024A05B0 MOV X0, X8
	0x024A05B4 BL 0x1C5C684
	0x024A05B8 LDR X8, [X24]
	0x024A05BC LDR X9, [X8 + 0xC0]
	0x024A05C0 MOV X8, X0
	0x024A05C4 LDR X1, [X9 + 0x20]
	0x024A05C8 LDR X2, [X19 + 0x38]
	0x024A05CC ADD X5, X19, 0xA0
	0x024A05D0 MOV X0, X8
	0x024A05D4 MOV X3, X23
	0x024A05D8 MOV X4, X31
	0x024A05DC BL 0x1C17728
	0x024A05E0 LDR W8, [X19 + 0xA0]
	0x024A05E4 LDP S1, S0, [X19 + 0x98]
	0x024A05E8 LDR V2, [X19 + 0x94]
	0x024A05EC MOV V3.16B, V15.16B
	0x024A05F0 CMP W8, 0x2
	0x024A05F4 B.EQ 0x24A064C
	0x024A05F8 LDR X8, [X24]
	0x024A05FC LDR X8, [X8 + 0xC0]
	0x024A0600 LDR X0, [X8 + 0x8]
	0x024A0604 LDRB W9, [X0 + 0x135]
	0x024A0608 TBNZ X9, 0x0, 0x24A0618
	0x024A060C BL 0x1C5C684
	0x024A0610 LDR X8, [X24]
	0x024A0614 LDR X8, [X8 + 0xC0]
	0x024A0618 LDR X2, [X19 + 0x10]
	0x024A061C LDR X1, [X8 + 0x20]
	0x024A0620 ADD X5, X19, 0xA0
	0x024A0624 MOV X3, X23
	0x024A0628 MOV X4, X31
	0x024A062C BL 0x1C17728
	0x024A0630 LDR W8, [X19 + 0xA0]
	0x024A0634 LDR V2, [X19 + 0x84]
	0x024A0638 CMP W8, 0x1
	0x024A063C FCSEL S0, S11, S13, EQ
	0x024A0640 FCSEL S1, S10, S12, EQ
	0x024A0644 FCSEL S2, S8, S2, EQ
	0x024A0648 FCSEL S3, S9, S14, EQ
	0x024A064C MOV X0, X27
	0x024A0650 MOV X1, X31
	0x024A0654 BL 0x36E2B48
	0x024A0658 LDR X8, [X24]
	0x024A065C MOV X25, X0
	0x024A0660 LDR X9, [X8 + 0xC0]
	0x024A0664 LDR X8, [X9 + 0x8]
	0x024A0668 LDRB W10, [X8 + 0x135]
	0x024A066C TBNZ X10, 0x0, 0x24A0684
	0x024A0670 MOV X0, X8
	0x024A0674 BL 0x1C5C684
	0x024A0678 LDR X8, [X24]
	0x024A067C LDR X9, [X8 + 0xC0]
	0x024A0680 MOV X8, X0
	0x024A0684 LDR X1, [X9 + 0x28]
	0x024A0688 LDR X2, [X19 + 0x50]
	0x024A068C ADD X5, X19, 0xA0
	0x024A0690 MOV X0, X8
	0x024A0694 MOV X3, X23
	0x024A0698 MOV X4, X31
	0x024A069C BL 0x1C17728
	0x024A06A0 LDR X2, [X19 + 0xA0]
	0x024A06A4 ADD X8, X19, 0xA0
	0x024A06A8 MOV X0, X22
	0x024A06AC MOV X1, X26
	0x024A06B0 MOV X3, X31
	0x024A06B4 BL 0x36E54DC
	0x024A06B8 LDP V0, V1, [X19 + 0xA0]
	0x024A06BC LDR V2, [X19 + 0xC]
	0x024A06C0 STP V0, V1, [X29 - 0xC0]
	0x024A06C4 STUR V2, [X29 - 0xA0]
	0x024A06C8 LDR X8, [X24]
	0x024A06CC LDR X8, [X8 + 0xC0]
	0x024A06D0 LDR X0, [X8 + 0x8]
	0x024A06D4 LDRB W9, [X0 + 0x135]
	0x024A06D8 TBNZ X9, 0x0, 0x24A06E8
	0x024A06DC BL 0x1C5C684
	0x024A06E0 LDR X8, [X24]
	0x024A06E4 LDR X8, [X8 + 0xC0]
	0x024A06E8 LDR X1, [X8 + 0x30]
	0x024A06EC LDR X2, [X19 + 0x58]
	0x024A06F0 ADD X5, X19, 0xA0
	0x024A06F4 MOV X3, X23
	0x024A06F8 MOV X4, X31
	0x024A06FC MOV X21, X27
	0x024A0700 BL 0x1C17728
	0x024A0704 LDR X2, [X19 + 0xA0]
	0x024A0708 ADD X8, X19, 0xA0
	0x024A070C MOV X0, X22
	0x024A0710 MOV X1, X26
	0x024A0714 MOV X3, X31
	0x024A0718 BL 0x36E54DC
	0x024A071C LDP V0, V1, [X19 + 0xA0]
	0x024A0720 LDR V2, [X19 + 0xC]
	0x024A0724 STP V0, V1, [X29 - 0xF0]
	0x024A0728 STUR V2, [X29 - 0xD0]
	0x024A072C LDR X8, [X24]
	0x024A0730 LDR X8, [X8 + 0xC0]
	0x024A0734 LDR X0, [X8 + 0x8]
	0x024A0738 LDRB W9, [X0 + 0x135]
	0x024A073C TBNZ X9, 0x0, 0x24A0754
	0x024A0740 ADD X27, X19, 0x130
	0x024A0744 BL 0x1C5C684
	0x024A0748 LDR X8, [X24]
	0x024A074C LDR X8, [X8 + 0xC0]
	0x024A0750 B 0x24A0758
	0x024A0754 ADD X27, X19, 0x130
	0x024A0758 LDR X1, [X8 + 0x38]
	0x024A075C LDR X2, [X19 + 0x60]
	0x024A0760 ADD X5, X19, 0xA0
	0x024A0764 MOV X3, X23
	0x024A0768 MOV X4, X31
	0x024A076C BL 0x1C17728
	0x024A0770 LDR X2, [X19 + 0xA0]
	0x024A0774 MOV X0, X22
	0x024A0778 MOV X1, X26
	0x024A077C MOV X3, X31
	0x024A0780 BL 0x36E515C
	0x024A0784 LDR X8, [X24]
	0x024A0788 MOV X26, X0
	0x024A078C MOV X28, X1
	0x024A0790 LDR X8, [X8 + 0xC0]
	0x024A0794 LDR X0, [X8 + 0x8]
	0x024A0798 LDRB W9, [X0 + 0x135]
	0x024A079C TBNZ X9, 0x0, 0x24A07AC
	0x024A07A0 BL 0x1C5C684
	0x024A07A4 LDR X8, [X24]
	0x024A07A8 LDR X8, [X8 + 0xC0]
	0x024A07AC LDR X1, [X8 + 0x40]
	0x024A07B0 LDR X2, [X19 + 0x68]
	0x024A07B4 ADD X5, X19, 0xA0
	0x024A07B8 MOV X3, X23
	0x024A07BC MOV X4, X31
	0x024A07C0 BL 0x1C17728
	0x024A07C4 LDR X2, [X19 + 0xA0]
	0x024A07C8 LDR X1, [X19 + 0x88]
	0x024A07CC MOV X0, X22
	0x024A07D0 MOV X3, X31
	0x024A07D4 BL 0x36E515C
	0x024A07D8 MOV X22, X0
	0x024A07DC MOV X23, X1
	0x024A07E0 MOV X0, X21
	0x024A07E4 MOV X1, X31
	0x024A07E8 BL 0x36E2D10
	0x024A07EC LDR V3, [X19 + 0x84]
	0x024A07F0 LDR X8, [X19 + 0x48]
	0x024A07F4 LDR V4, [X19 + 0x9C]
	0x024A07F8 LDR X9, [X19 + 0x78]
	0x024A07FC STP S3, S14, [X20 + 0x48]
	0x024A0800 LDR V3, [X19 + 0x98]
	0x024A0804 STR X8, [X20]
	0x024A0808 LDR X8, [X19 + 0x40]
	0x024A080C LDUR V0, [X29 - 0x70]
	0x024A0810 STP S4, S3, [X20 + 0x60]
	0x024A0814 LDR V3, [X19 + 0x94]
	0x024A0818 STR W8, [X20 + 0x8]
	0x024A081C LDUR X8, [X29 - 0x60]
	0x024A0820 LDUR V1, [X27 + 0xDC]
	0x024A0824 LDUR V2, [X29 - 0x90]
	0x024A0828 STP S3, S15, [X20 + 0x68]
	0x024A082C LDP V3, V4, [X29 - 0xC0]
	0x024A0830 LDUR V5, [X29 - 0xA0]
	0x024A0834 LDP V6, V7, [X29 - 0xF0]
	0x024A0838 LDUR V16, [X29 - 0xD0]
	0x024A083C LDUR V17, [X29 - 0x100]
	0x024A0840 STUR X8, [X20 + 0x1C]
	0x024A0844 LDR X8, [X19 + 0x70]
	0x024A0848 STP W9, W25, [X20 + 0x70]
	0x024A084C ADD X9, X20, 0x108
	0x024A0850 STP S13, S12, [X20 + 0x40]
	0x024A0854 STP S11, S10, [X20 + 0x50]
	0x024A0858 STP S8, S9, [X20 + 0x58]
	0x024A085C STP X26, X28, [X20 + 0xD8]
	0x024A0860 STP X22, X23, [X20 + 0xE8]
	0x024A0864 STP X0, X1, [X20 + 0xF8]
	0x024A0868 STUR V0, [X20 + 0xC]
	0x024A086C STUR V2, [X20 + 0x24]
	0x024A0870 STR V1, [X20 + 0x3]
	0x024A0874 STUR V5, [X20 + 0x98]
	0x024A0878 STUR V4, [X20 + 0x88]
	0x024A087C STUR V3, [X20 + 0x78]
	0x024A0880 STUR V16, [X20 + 0xC8]
	0x024A0884 STUR V7, [X20 + 0xB8]
	0x024A0888 STUR V6, [X20 + 0xA8]
	0x024A088C STR V17, [X9]
	0x024A0890 LDR X8, [X8 + 0x28]
	0x024A0894 LDUR X9, [X29 - 0x58]
	0x024A0898 CMP X8, X9
	0x024A089C B.NE 0x24A08D4
	0x024A08A0 SUB X31, X29, 0x40
	0x024A08A4 LDP X20, X19, [X31 + 0x90]
	0x024A08A8 LDP X22, X21, [X31 + 0x80]
	0x024A08AC LDP X24, X23, [X31 + 0x70]
	0x024A08B0 LDP X26, X25, [X31 + 0x60]
	0x024A08B4 LDP X28, X27, [X31 + 0x50]
	0x024A08B8 LDP X29, X30, [X31 + 0x40]
	0x024A08BC LDP D9, D8, [X31 + 0x30]
	0x024A08C0 LDP D11, D10, [X31 + 0x20]
	0x024A08C4 LDP D13, D12, [X31 + 0x10]
	0x024A08C8 LDP D15, D14, [X31], #0xA0
	0x024A08CC RET
	0x024A08D0 BL 0x1C16F20
	0x024A08D4 BL 0x3EB1B20
	0x024A08D8 ADD X0, X1, 0xF8
	0x024A08DC MOV X1, X31
	0x024A08E0 B 0x36E2518
	0x024A08E4 STP X29, X30, [X31 - 0x40]!
	0x024A08E8 STR X23, [X31 + 0x10]
	0x024A08EC STP X22, X21, [X31 + 0x20]
	0x024A08F0 STP X20, X19, [X31 + 0x30]
	0x024A08F4 ADD X29, X31, 0x0
	0x024A08F8 SUB X31, X31, 0x10
	0x024A08FC MRS X23, 0xC000
	0x024A0900 LDR X8, [X23 + 0x28]
	0x024A0904 MOV X21, X3
	0x024A0908 MOV X19, X2
	0x024A090C MOV X20, X1
	0x024A0910 STUR X8, [X29 - 0x8]
	0x024A0914 LDR X8, [X3 + 0x20]
	0x024A0918 LDR X9, [X8 + 0xC0]
	0x024A091C LDR X8, [X9 + 0x8]
	0x024A0920 ADD X10, X8, 0x135
	0x024A0924 LDRH W10, [X10]
	0x024A0928 TBNZ X10, 0x0, 0x24A094C
	0x024A092C MOV X0, X8
	0x024A0930 BL 0x1C5C684
	0x024A0934 LDR X8, [X21 + 0x20]
	0x024A0938 LDR X9, [X8 + 0xC0]
	0x024A093C LDR X8, [X9 + 0x8]
	0x024A0940 ADD X10, X8, 0x135
	0x024A0944 LDRH W10, [X10]
	0x024A0948 B 0x24A0950
	0x024A094C MOV X0, X8
	0x024A0950 LDR W11, [X0 + 0xFC]
	0x024A0954 ADD X12, X31, 0x0
	0x024A0958 ADD W11, W11, 0x10
	0x024A095C ADD X11, X11, 0xF
	0x024A0960 AND X11, X11, 0x1FFFFFFFF
	0x024A0964 SUB X22, X12, X11
	0x024A0968 ADD X31, X22, 0x0
	0x024A096C TBNZ X10, 0x0, 0x24A0984
	0x024A0970 MOV X0, X8
	0x024A0974 BL 0x1C5C684
	0x024A0978 LDR X8, [X21 + 0x20]
	0x024A097C LDR X9, [X8 + 0xC0]
	0x024A0980 MOV X8, X0
	0x024A0984 LDR X1, [X9 + 0x20]
	0x024A0988 SUB X5, X29, 0xC
	0x024A098C MOV X0, X8
	0x024A0990 MOV X2, X22
	0x024A0994 MOV X3, X19
	0x024A0998 MOV X4, X31
	0x024A099C BL 0x1C17728
	0x024A09A0 LDUR W1, [X29 - 0xC]
	0x024A09A4 MOV X0, X20
	0x024A09A8 MOV X2, X31
	0x024A09AC BL 0x36EA474
	0x024A09B0 LDR X8, [X23 + 0x28]
	0x024A09B4 LDUR X9, [X29 - 0x8]

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 464
	022 Move X25, 0x1F3A000
	023 Move X24, 0x1C7D000
	024 Move X28, 0x1C54000
	025 Move X19, X8
	026 Move W8, [X25+2986]
	027 Move X24, [X24+3640]
	028 Move X28, [X28+1432]
	029 Move X23, X4
	030 Move X20, X3
	031 Move X22, X2
	032 Move X21, X1
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {48}
	037 Move X0, 0x1C7D000
	038 Move X0, [X0+3648]
	039 Call 0x1C17CF4
	040 Move X0, 0x1C7D000
	041 Move X0, [X0+3640]
	042 Call 0x1C17CF4
	043 Move X0, 0x1C54000
	044 Move X0, [X0+1432]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X25+2986], W8
	048 Move X0, [X24]
	049 NotImplemented "Instruction MOVI not yet implemented."
	050 Move [X31+256], X31
	051 Move [X31+264], X31
	052 Move [X31+280], W31
	053 Move [X31+272], X31
	054 Move [X31+224], X31
	055 Move [X31+232], X31
	056 Move [X31+248], W31
	057 Move [X31+240], X31
	058 Move [X31+192], X31
	059 Move [X31+200], X31
	060 Move [X31+216], W31
	061 Move [X31+208], X31
	062 Move [X31+160], X31
	063 Move [X31+168], X31
	064 Move [X31+184], W31
	065 Move [X31+176], X31
	066 Move [X31+432], X31
	067 Move [X31+440], X31
	068 Move [X31+448], X31
	069 Move [X31+400], X31
	070 Move [X31+408], X31
	071 Move [X31+424], W31
	072 Move [X31+416], X31
	073 Move [X31+368], V0
	074 Move [X31+376], V0
	075 Move [X31+336], V0
	076 Move [X31+344], V0
	077 Move [X31+304], V0
	078 Move [X31+312], V0
	079 Move [X31+288], X31
	080 Move [X31+296], X31
	081 Call 0x1C17F10
	082 Move X1, X31
	083 Move X24, X0
	084 Call AnimationJobCacheBuilder..ctor, X0
	085 Move X1, [X22]
	086 Move X0, X21
	087 Move X2, X31
	088 Call ReadWriteTransformHandle.Bind, X0, X1
	089 Move X25, X0
	090 Move X0, [X28]
	091 Move X27, [X22+8]
	092 Move X26, X1
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X27
	098 Move X1, X31
	099 Move X2, X31
	100 Call Object.op_Inequality, X0, X1
	101 Move S0, W31
	102 Move [X31+36], S0
	103 Move S0, W31
	104 Move [X31+32], S0
	105 Move S0, W31
	106 Move S11, W31
	107 Move S12, W31
	108 Move S13, W31
	109 Move S14, W31
	110 Move [X31+44], S0
	111 Move S0, W31
	112 Move S15, W31
	113 Move S8, W31
	114 Move S9, W31
	115 Move S10, W31
	116 Move [X31+40], S0
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {320}
	121 Move X1, [X22+8]
	122 Add X8, X31, 48
	123 Move X0, X21
	124 Move X2, X31
	125 Call ReadOnlyTransformHandle.Bind, X0, X1
	126 Move V0, [X31+3]
	127 Move X8, [X31+64]
	128 Move [X31+27], V0
	129 Move [X31+448], X8
	130 Move X0, [X22+8]
	131 Compare X0, 0
	132 JumpIfEqual {481}
	133 Move X1, X31
	134 Call Transform.get_localPosition, X0
	135 Move X0, [X22+8]
	136 Compare X0, 0
	137 JumpIfEqual {481}
	138 Move X1, X31
	139 Move V8, V0
	140 Move V9, V1
	141 Move V10, V2
	142 Call Transform.get_localRotation, X0
	143 Move X29, 0x1C7D000
	144 Move X29, [X29+3648]
	145 Move V11, V0
	146 Move V12, V1
	147 Move V13, V2
	148 Move X0, [X29]
	149 Move V14, V3
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Add X0, X31, 256
	155 Move V0, V8
	156 Move V1, V9
	157 Move V2, V10
	158 Move V3, V11
	159 Move V4, V12
	160 Move V5, V13
	161 Move V6, V14
	162 Move X1, X31
	163 Call AffineTransform..ctor, X0, X1, X2
	164 Add X8, X31, 48
	165 Add X0, X31, 256
	166 Move X1, X31
	167 Call AffineTransform.Inverse, X0
	168 Move V0, [X31+3]
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 Add X8, X31, 192
	171 Move [X31+25], V0
	172 Move [X8+220], V1
	173 Move X0, [X22+8]
	174 Compare X0, 0
	175 JumpIfEqual {481}
	176 Move X1, X31
	177 Call Transform.get_position, X0
	178 Move X0, [X22+8]
	179 Compare X0, 0
	180 JumpIfEqual {481}
	181 Move X1, X31
	182 Move V8, V0
	183 Move V9, V1
	184 Move V10, V2
	185 Call Transform.get_rotation, X0
	186 Move V4, V0
	187 Move V5, V1
	188 Move V6, V2
	189 Move V7, V3
	190 Add X0, X31, 224
	191 Move V0, V8
	192 Move V1, V9
	193 Move V2, V10
	194 Move V3, V4
	195 Move V4, V5
	196 Move V5, V6
	197 Move V6, V7
	198 Move X1, X31
	199 Call AffineTransform..ctor, X0, X1, X2
	200 Move X0, [X22]
	201 Compare X0, 0
	202 JumpIfEqual {481}
	203 Move X1, X31
	204 Call Transform.get_position, X0
	205 Move X0, [X22]
	206 Compare X0, 0
	207 JumpIfEqual {481}
	208 Move X1, X31
	209 Move V8, V0
	210 Move V9, V1
	211 Move V10, V2
	212 Call Transform.get_rotation, X0
	213 Move V4, V0
	214 Move V5, V1
	215 Move V6, V2
	216 Move V7, V3
	217 Add X0, X31, 192
	218 Move V0, V8
	219 Move V1, V9
	220 Move V2, V10
	221 Move V3, V4
	222 Move V4, V5
	223 Move V5, V6
	224 Move V6, V7
	225 Move X1, X31
	226 Call AffineTransform..ctor, X0, X1, X2
	227 Add X8, X31, 48
	228 Add X0, X31, 224
	229 Move X1, X31
	230 Call AffineTransform.Inverse, X0
	231 Move V0, [X31+60]
	232 Add X8, X31, 192
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 Add X8, X31, 48
	235 Move [X31+40], S0
	236 Move S0, [X31+64]
	237 Move S2, [X31+68]
	238 Add X0, X31, 224
	239 Add X1, X31, 128
	240 Move X2, X31
	241 Move [X31+44], S0
	242 Move V0, [X31+12]
	243 Move [X31+32], S2
	244 Move V2, [X31+72]
	245 Move [X31+8], V0
	246 Move [X31+140], V1
	247 Move [X31+36], S2
	248 Call AffineTransform.InverseMul, X0, X1
	249 Move X0, [X22]
	250 Compare X0, 0
	251 JumpIfEqual {481}
	252 Move S15, [X31+60]
	253 Move S8, [X31+64]
	254 Move S9, [X31+68]
	255 Move S10, [X31+72]
	256 Move X1, X31
	257 Call Transform.get_parent, X0
	258 Move X8, [X28]
	259 Move X27, X0
	260 Move W9, [X8+224]
	261 Compare W9, 0
	262 JumpIfNotEqual {265}
	263 Move X0, X8
	264 Call 0x1C17DFC
	265 Move X0, X27
	266 Move X1, X31
	267 Move X2, X31
	268 Call Object.op_Inequality, X0, X1
	269 Move TEMP, X0
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfNotEqual {316}
	273 Compare X27, 0
	274 JumpIfEqual {481}
	275 Move X0, X27
	276 Move X1, X31
	277 Call Transform.get_position, X0
	278 Move X0, X27
	279 Move X1, X31
	280 Move [X31+24], S1
	281 Move [X31+32], S0
	282 Move [X31+20], S2
	283 Call Transform.get_rotation, X0
	284 Move X0, [X29]
	285 Move V11, V0
	286 Move V12, V1
	287 Move V13, V2
	288 Move W8, [X0+224]
	289 Move V14, V3
	290 Compare W8, 0
	291 JumpIfNotEqual {293}
	292 Call 0x1C17DFC
	293 Move S1, [X31+24]
	294 Move S0, [X31+28]
	295 Move V2, [X31+20]
	296 Add X0, X31, 160
	297 Move V3, V11
	298 Move V4, V12
	299 Move V5, V13
	300 Move V6, V14
	301 Move X1, X31
	302 Call AffineTransform..ctor, X0, X1, X2
	303 Move V0, [X31+10]
	304 NotImplemented "Instruction LDUR not yet implemented."
	305 Add X8, X31, 48
	306 Add X0, X31, 224
	307 Add X1, X31, 96
	308 Move X2, X31
	309 Move [X31+6], V0
	310 Move [X31+108], V1
	311 Call AffineTransform.InverseMul, X0, X1
	312 Move S14, [X31+60]
	313 Move S13, [X31+64]
	314 Move S11, [X31+68]
	315 Move S12, [X31+72]
	316 Move V11, V9
	317 Move V12, V10
	318 Move V13, V8
	319 Move V14, V15
	320 Compare X24, 0
	321 JumpIfEqual {481}
	322 Move V0, [X22+48]
	323 Move X0, X24
	324 Move X1, X31
	325 NotImplemented "Instruction SCVTF not yet implemented."
	326 Call AnimationJobCacheBuilder.Add, X0, V0
	327 Move W8, [X22+48]
	328 Move X27, X0
	329 Move V0, V15
	330 Move V1, V8
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move V2, V9
	333 Move V3, V10
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Move V0, V14
	336 Move V1, V13
	337 Move V2, V11
	338 Move V3, V12
	339 Move S0, [X31+40]
	340 Move S1, [X31+44]
	341 Move S2, [X31+32]
	342 Move S3, [X31+36]
	343 Move X0, X24
	344 Move X1, X31
	345 Call AnimationJobCacheBuilder.Add, X0, X1
	346 Move X8, [X23+32]
	347 Move X28, X0
	348 Move X0, X22
	349 Move X8, [X8+192]
	350 Move X1, [X8+40]
	351 Call OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_positionVector3Property, X0
	352 Move X2, X0
	353 Add X8, X31, 48
	354 Move X0, X21
	355 Move X1, X20
	356 Move X3, X31
	357 Call Vector3Property.Bind, X0, X1, X2
	358 Move V0, [X31+48]
	359 Move V1, [X31+64]
	360 Move V2, [X31+5]
	361 Move X0, X22
	362 Move [X31+352], V0
	363 Move [X31+360], V1
	364 Move [X31+24], V2
	365 Move X8, [X23+32]
	366 Move X8, [X8+192]
	367 Move X1, [X8+48]
	368 Call OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_rotationVector3Property, X0
	369 Move X2, X0
	370 Add X8, X31, 48
	371 Move X0, X21
	372 Move X1, X20
	373 Move X3, X31
	374 Call Vector3Property.Bind, X0, X1, X2
	375 Move V0, [X31+48]
	376 Move V1, [X31+64]
	377 Move V2, [X31+5]
	378 Move X0, X22
	379 Move [X31+304], V0
	380 Move [X31+312], V1
	381 Move [X31+21], V2
	382 Move X8, [X23+32]
	383 Move X8, [X8+192]
	384 Move X1, [X8+56]
	385 Call OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_positionWeightFloatProperty, X0
	386 Move X2, X0
	387 Move X0, X21
	388 Move X1, X20
	389 Move X3, X31
	390 Call FloatProperty.Bind, X0, X1, X2
	391 Move X8, [X23+32]
	392 Move X29, X0
	393 Move X23, X1
	394 Move X0, X22
	395 Move X8, [X8+192]
	396 Move X8, [X8+64]
	397 Move X1, X8
	398 Call OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_rotationWeightFloatProperty, X0
	399 Move X2, X0
	400 Move X0, X21
	401 Move X1, X20
	402 Move X3, X31
	403 Call FloatProperty.Bind, X0, X1, X2
	404 Move X20, X0
	405 Move X21, X1
	406 Move X0, X24
	407 Move X1, X31
	408 Call AnimationJobCacheBuilder.Build, X0
	409 Move V4, [X31+40]
	410 Move V3, [X31+44]
	411 Add X9, X31, 192
	412 Move X8, [X31+448]
	413 Move V0, [X31+27]
	414 Move [X19+64], S4
	415 Move [X19+72], S3
	416 Move V4, [X31+32]
	417 Move V3, [X31+36]
	418 NotImplemented "Instruction LDUR not yet implemented."
	419 Move V2, [X31+25]
	420 Move V5, [X31+24]
	421 Move [X19+72], S4
	422 Move [X19+80], S3
	423 Move V3, [X31+352]
	424 Move V4, [X31+368]
	425 Move V6, [X31+304]
	426 Move V7, [X31+320]
	427 Move V16, [X31+21]
	428 Move V17, [X31+18]
	429 Add X9, X19, 264
	430 Move [X19], X25
	431 Move [X19+8], W26
	432 Move [X19+80], S14
	433 Move [X19+88], S13
	434 Move [X19+88], S11
	435 Move [X19+96], S12
	436 Move [X19+96], S15
	437 Move [X19+104], S8
	438 Move [X19+104], S9
	439 Move [X19+112], S10
	440 Move [X19+112], W27
	441 Move [X19+116], W28
	442 Move [X19+216], X29
	443 Move [X19+224], X23
	444 Move [X19+232], X20
	445 Move [X19+240], X21
	446 Move [X19+248], X0
	447 Move [X19+256], X1
	448 Move [X19+12], V0
	449 Move [X19+28], X8
	450 Move [X19+36], V2
	451 Move [X19+3], V1
	452 Move [X19+152], V5
	453 Move [X19+136], V4
	454 Move [X19+120], V3
	455 Move [X19+200], V16
	456 Move [X19+184], V7
	457 Move [X19+168], V6
	458 Move [X9], V17
	459 Add X31, X31, 464
	460 Move X20, [X31+144]
	461 Move X19, [X31+152]
	462 Move X22, [X31+128]
	463 Move X21, [X31+136]
	464 Move X24, [X31+112]
	465 Move X23, [X31+120]
	466 Move X26, [X31+96]
	467 Move X25, [X31+104]
	468 Move X28, [X31+80]
	469 Move X27, [X31+88]
	470 Move X29, [X31+64]
	471 Move X30, [X31+72]
	472 Move D9, [X31+48]
	473 Move D8, [X31+56]
	474 Move D11, [X31+32]
	475 Move D10, [X31+40]
	476 Move D13, [X31+16]
	477 Move D12, [X31+24]
	478 Move D15, [X31+160]
	479 Move D14, [X31+168]
	480 Return X0
	481 Call 0x1C17F20

Method: System.Void Destroy(UnityEngine.Animations.Rigging.OverrideTransformJob job)

Disassembly:
	0x024A09B8 CMP X8, X9
	0x024A09BC B.NE 0x24A09D8
	0x024A09C0 ADD X31, X29, 0x0

ISIL:
	001 Add X0, X1, 248
	002 Move X1, X31
	003 Call AnimationJobCache.Dispose, X0
	004 Return 

Method: System.Void Update(UnityEngine.Animations.Rigging.OverrideTransformJob job, ref T data)

Disassembly:
	0x024A09C4 LDP X20, X19, [X31 + 0x30]
	0x024A09C8 LDP X22, X21, [X31 + 0x20]
	0x024A09CC LDR X23, [X31 + 0x10]
	0x024A09D0 LDP X29, X30, [X31], #0x40
	0x024A09D4 RET

ISIL:
	001 Move W8, [X2+48]
	002 Move X0, X1
	003 Move X2, X31
	004 Move W1, W8
	005 Call OverrideTransformJob.UpdateSpace, X0, X1
	006 Return 

Method: System.Void .ctor()

Disassembly:
	0x024A09D8 BL 0x3EB1B20
	0x024A09DC LDR X8, [X1 + 0x20]
	0x024A09E0 LDR X8, [X8 + 0xC0]
	0x024A09E4 LDR X1, [X8 + 0x48]

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+72]
	004 Call AnimationJobBinder`2<OverrideTransformJob, OverrideTransformData>..ctor, X0
	005 Return 

