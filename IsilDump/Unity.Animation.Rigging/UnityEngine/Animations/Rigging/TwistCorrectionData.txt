Type: UnityEngine.Animations.Rigging.TwistCorrectionData

Method: UnityEngine.Transform get_sourceObject()

Disassembly:
	0x036F1020 LDR X1, [X8]
	0x036F1024 BL 0x301DDC4

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_sourceObject(UnityEngine.Transform value)

Disassembly:
	0x036F1028 MOV X21, X0
	0x036F102C STR X0, [X19 + 0x28]

ISIL:
	001 Move [X0], X1
	002 Return 

Method: UnityEngine.Animations.Rigging.WeightedTransformArray get_twistNodes()

Disassembly:
	0x036F1030 MOV X0, X19
	0x036F1034 BL 0x36F153C
	0x036F1038 ADRP X8, 0xA4F000
	0x036F103C LDR X8, [X8 + 0x9D0]

ISIL:
	001 Add X1, X0, 16
	002 Move W2, 136
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Void set_twistNodes(UnityEngine.Animations.Rigging.WeightedTransformArray value)

Disassembly:
	0x036F1040 MOV X22, X0
	0x036F1044 LDR X8, [X8]
	0x036F1048 LDR W9, [X8 + 0xE0]
	0x036F104C CBNZ W9, 0x36F1058
	0x036F1050 MOV X0, X8
	0x036F1054 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 16
	003 Move W2, 136
	004 Call 0x3EB2B30
	005 Move X30, [X31+16]
	006 Return 

Method: UnityEngine.Animations.Rigging.TwistCorrectionData/Axis get_twistAxis()

Disassembly:
	0x036F1058 MOV X0, X20
	0x036F105C MOV X1, X21

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Void set_twistAxis(UnityEngine.Animations.Rigging.TwistCorrectionData/Axis value)

Disassembly:
	0x036F1060 MOV X2, X22
	0x036F1064 BL 0x36F19F8

ISIL:
	001 Move [X0+8], W1
	002 Return 

Method: UnityEngine.Transform UnityEngine.Animations.Rigging.ITwistCorrectionData.get_source()

Disassembly:
	0x036F1068 STP X0, X1, [X19 + 0x48]
	0x036F106C STP X0, X1, [X31]

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: UnityEngine.Vector3 UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistAxis()

Disassembly:
	0x036F1070 ADD X0, X31, 0x0
	0x036F1074 MOV X1, X31

ISIL:
	001 Move W0, [X0+8]

Method: System.String UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodesProperty()

Disassembly:
	0x036F1158 RET
	0x036F115C SUB X31, X31, 0x40
	0x036F1160 STP X30, X23, [X31 + 0x10]
	0x036F1164 STP X22, X21, [X31 + 0x20]
	0x036F1168 STP X20, X19, [X31 + 0x30]
	0x036F116C ADRP X20, 0xCEF000
	0x036F1170 LDRB W8, [X20 + 0xB8C]
	0x036F1174 MOV X19, X0
	0x036F1178 TBNZ X8, 0x0, 0x36F1190
	0x036F117C ADRP X0, 0xA4F000
	0x036F1180 LDR X0, [X0 + 0x9D8]
	0x036F1184 BL 0x1C16CF4
	0x036F1188 MOVZ W8, 0x1
	0x036F118C STRB W8, [X20 + 0xB8C]
	0x036F1190 LDRB W8, [X19 + 0x40]
	0x036F1194 CBNZ W8, 0x36F1278

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xCF0000
	005 Move X20, 0xA50000
	006 Move W8, [X19+2934]
	007 Move X20, [X20+2376]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xA50000
	013 Move X0, [X0+2376]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2934], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Call ConstraintsUtils.ConstructConstraintDataPropertyName, X0
	022 Return X0

Method: UnityEngine.Vector3 Convert(UnityEngine.Animations.Rigging.TwistCorrectionData/Axis axis)

Disassembly:
	0x036F1078 BL 0x3C5DFF0
	0x036F107C TBZ X0, 0x0, 0x36F109C
	0x036F1080 LDUR V0, [X19 + 0x48]
	0x036F1084 ADD X0, X31, 0x0
	0x036F1088 MOV X1, X31
	0x036F108C STR V0, [X31]
	0x036F1090 BL 0x3C5E068
	0x036F1094 MOVZ W0, 0x1
	0x036F1098 B 0x36F10A0
	0x036F109C MOV W0, W31
	0x036F10A0 LDP X20, X19, [X31 + 0x30]
	0x036F10A4 LDP X22, X21, [X31 + 0x20]
	0x036F10A8 LDR X30, [X31 + 0x10]
	0x036F10AC ADD X31, X31, 0x40
	0x036F10B0 RET
	0x036F10B4 BL 0x1C16F20
	0x036F10B8 STP X30, X21, [X31 - 0x20]!
	0x036F10BC STP X20, X19, [X31 + 0x10]
	0x036F10C0 ADRP X20, 0xCEF000
	0x036F10C4 ADRP X21, 0xA02000
	0x036F10C8 LDRB W8, [X20 + 0xB88]
	0x036F10CC LDR X21, [X21 + 0x970]
	0x036F10D0 MOV X19, X0
	0x036F10D4 TBNZ X8, 0x0, 0x36F10F8
	0x036F10D8 ADRP X0, 0xA02000
	0x036F10DC LDR X0, [X0 + 0x970]
	0x036F10E0 BL 0x1C16CF4
	0x036F10E4 ADRP X0, 0xA4F000
	0x036F10E8 LDR X0, [X0 + 0x9B8]
	0x036F10EC BL 0x1C16CF4
	0x036F10F0 MOVZ W8, 0x1
	0x036F10F4 STRB W8, [X20 + 0xB88]
	0x036F10F8 LDR X0, [X21]
	0x036F10FC LDR W8, [X0 + 0xE0]
	0x036F1100 CBNZ W8, 0x36F1108
	0x036F1104 BL 0x1C16DFC
	0x036F1108 ADRP X20, 0xA4F000
	0x036F110C LDR X20, [X20 + 0x9B8]
	0x036F1110 MOV X0, X31
	0x036F1114 BL 0x3C018E4
	0x036F1118 TBZ X0, 0x0, 0x36F1124
	0x036F111C MOV X0, X19
	0x036F1120 BL 0x36F115C
	0x036F1124 LDR X8, [X20]
	0x036F1128 LDR X8, [X8 + 0xB8]
	0x036F112C LDR X8, [X8 + 0x8]
	0x036F1130 CBZ X8, 0x36F1150
	0x036F1134 LDR X3, [X8 + 0x18]
	0x036F1138 LDR X0, [X8 + 0x40]
	0x036F113C LDR X2, [X8 + 0x28]
	0x036F1140 MOV X1, X19
	0x036F1144 LDP X20, X19, [X31 + 0x10]
	0x036F1148 LDP X30, X21, [X31], #0x20
	0x036F114C BR X3
	0x036F1150 LDP X20, X19, [X31 + 0x10]
	0x036F1154 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Compare W0, 0
	005 JumpIfNotEqual {38}
	006 Move X19, 0xCE8000
	007 Move W8, [X19+2928]
	008 Compare W8, 0
	009 JumpIfNotEqual {15}
	010 Move X0, 0xA03000
	011 Move X0, [X0+1440]
	012 Call 0x1C17CF4
	013 Move W8, 1
	014 Move [X19+2928], W8
	015 Move X8, 0xA03000
	016 Move X8, [X8+1440]
	017 Move X8, [X8]
	018 Move X10, [X8+184]
	019 Add X8, X10, 60
	020 Add X9, X10, 64
	021 Add X10, X10, 68
	022 Move X19, 0xCE8000
	023 Move W8, [X19+1926]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0xA03000
	027 Move X0, [X0+1440]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+1926], W8
	031 Move X8, 0xA03000
	032 Move X8, [X8+1440]
	033 Move X8, [X8]
	034 Move X10, [X8+184]
	035 Add X8, X10, 24
	036 Add X9, X10, 28
	037 Add X10, X10, 32
	038 Move X19, 0xCE8000
	039 Move W8, [X19+2591]
	040 Compare W8, 0
	041 JumpIfNotEqual {47}
	042 Move X0, 0xA03000
	043 Move X0, [X0+1440]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X19+2591], W8
	047 Move X8, 0xA03000
	048 Move X8, [X8+1440]
	049 Move X8, [X8]
	050 Move X10, [X8+184]
	051 Add X8, X10, 72
	052 Add X9, X10, 76
	053 Add X10, X10, 80
	054 Move V2, [X10]
	055 Move V1, [X9]
	056 Move V0, [X8]
	057 Move X30, [X31+16]
	058 Move X19, [X31+24]
	059 Return X0

Method: System.Boolean UnityEngine.Animations.Rigging.IAnimationJobData.IsValid()

Disassembly:
	0x036F1198 LDUR V0, [X19 + 0x48]
	0x036F119C ADD X0, X31, 0x0
	0x036F11A0 MOV X1, X31
	0x036F11A4 STR V0, [X31]
	0x036F11A8 BL 0x3C5DFF0
	0x036F11AC TBZ X0, 0x0, 0x36F11C4
	0x036F11B0 LDUR V0, [X19 + 0x48]
	0x036F11B4 ADD X0, X31, 0x0
	0x036F11B8 MOV X1, X31
	0x036F11BC STR V0, [X31]
	0x036F11C0 BL 0x3C5DF78
	0x036F11C4 LDR X21, [X19 + 0x28]
	0x036F11C8 CBZ X21, 0x36F1268
	0x036F11CC LDR W8, [X21 + 0x18]
	0x036F11D0 CMP W8, 0x1
	0x036F11D4 B.LT 0x36F1264
	0x036F11D8 ADRP X23, 0xA4F000
	0x036F11DC LDR X23, [X23 + 0x9D8]
	0x036F11E0 MOV W22, W31
	0x036F11E4 CMP W22, W8
	0x036F11E8 B.CS 0x36F128C
	0x036F11EC ADD X8, X21, W22, 0x3, SXTW
	0x036F11F0 LDR X20, [X8 + 0x20]
	0x036F11F4 CBZ X20, 0x36F1290
	0x036F11F8 LDR X8, [X20]
	0x036F11FC LDR X1, [X23]
	0x036F1200 LDRH W9, [X8 + 0x12E]
	0x036F1204 CBZ X9, 0x36F1228
	0x036F1208 LDR X10, [X8 + 0xB0]
	0x036F120C ADD X10, X10, 0x8
	0x036F1210 LDUR X11, [X10 - 0x8]
	0x036F1214 CMP X11, X1
	0x036F1218 B.EQ 0x36F1238
	0x036F121C SUBS X9, X9, 0x1
	0x036F1220 ADD X10, X10, 0x10
	0x036F1224 B.NE 0x36F1210
	0x036F1228 MOVZ W2, 0x7
	0x036F122C MOV X0, X20
	0x036F1230 BL 0x1C5C788
	0x036F1234 B 0x36F1248
	0x036F1238 LDR W9, [X10]
	0x036F123C ADD W9, W9, 0x7
	0x036F1240 ADD X8, X8, W9, 0x4, SXTW
	0x036F1244 ADD X0, X8, 0x138
	0x036F1248 LDP X8, X1, [X0]
	0x036F124C MOV X0, X20
	0x036F1250 BLR X8
	0x036F1254 LDR W8, [X21 + 0x18]
	0x036F1258 ADD W22, W22, 0x1
	0x036F125C CMP W22, W8
	0x036F1260 B.LT 0x36F11E4
	0x036F1264 STR X31, [X19 + 0x28]
	0x036F1268 MOV X0, X19
	0x036F126C BL 0x36F153C
	0x036F1270 CBZ X0, 0x36F1290
	0x036F1274 BL 0x36F2068
	0x036F1278 LDP X20, X19, [X31 + 0x30]
	0x036F127C LDP X22, X21, [X31 + 0x20]
	0x036F1280 LDP X30, X23, [X31 + 0x10]
	0x036F1284 ADD X31, X31, 0x40
	0x036F1288 RET
	0x036F128C BL 0x1C16F28
	0x036F1290 BL 0x1C16F20
	0x036F1294 B 0x36F115C
	0x036F1298 SUB X31, X31, 0x30
	0x036F129C STR D8, [X31 + 0x10]
	0x036F12A0 STP X30, X19, [X31 + 0x20]
	0x036F12A4 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xCF0000
	009 Move X22, 0xA03000
	010 Move W8, [X20+2935]
	011 Move X22, [X22+1432]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xA03000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0xA2D000
	021 Move X0, [X0+2400]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2935], W8
	025 Move X0, [X22]
	026 Move X20, [X19]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {40}
	039 Move W0, W31
	040 Move X23, 0xA2D000
	041 Move X23, [X23+2400]
	042 Move W8, W31
	043 Add X19, X19, 16
	044 Move X0, [X23]
	045 Move W20, W8
	046 Move W9, [X0+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move W24, [X19]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X23]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X19
	058 Move W1, W20
	059 Call WeightedTransformArray.get_Item, X0, X1
	060 Move X8, [X22]
	061 Move X21, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X21
	068 Move X1, X31
	069 Move X2, X31
	070 Call Object.op_Equality, X0, X1
	071 Add W8, W20, 1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {44}
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move X30, [X31+64]
	085 Return X0

Method: System.Void UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues()

Disassembly:
	0x036F12A8 LDUR V0, [X0 + 0x48]
	0x036F12AC MOV X19, X0
	0x036F12B0 ADD X0, X31, 0x0
	0x036F12B4 MOV X1, X31
	0x036F12B8 STR V0, [X31]
	0x036F12BC BL 0x3C5DFF0
	0x036F12C0 TBZ X0, 0x0, 0x36F12E4
	0x036F12C4 MOV X0, X19
	0x036F12C8 BL 0x36F12F4
	0x036F12CC LDUR V0, [X19 + 0x48]
	0x036F12D0 ADD X0, X31, 0x0
	0x036F12D4 MOV X1, X31
	0x036F12D8 STR V0, [X31]
	0x036F12DC MOV V0.16B, V8.16B
	0x036F12E0 BL 0x3C5E0E0
	0x036F12E4 LDP X30, X19, [X31 + 0x20]
	0x036F12E8 LDR V8, [X31 + 0x10]
	0x036F12EC ADD X31, X31, 0x30
	0x036F12F0 RET
	0x036F12F4 STP X30, X23, [X31 - 0x30]!
	0x036F12F8 STP X22, X21, [X31 + 0x10]
	0x036F12FC STP X20, X19, [X31 + 0x20]
	0x036F1300 ADRP X20, 0xCEF000
	0x036F1304 LDRB W8, [X20 + 0xB89]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xCF0000
	006 Move X20, 0xA2D000
	007 Move W8, [X21+2936]
	008 Move X20, [X20+2400]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA2D000
	015 Move X0, [X0+2400]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2936], W8
	019 Move W8, 2
	020 Move [X19], X31
	021 Move [X19+8], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move [X19+16], W31
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

