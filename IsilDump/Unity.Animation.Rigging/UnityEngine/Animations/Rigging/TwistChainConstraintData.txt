Type: UnityEngine.Animations.Rigging.TwistChainConstraintData

Method: UnityEngine.Transform get_root()

Disassembly:
	0x036F0E20 ADRP X21, 0xA50000
	0x036F0E24 ADRP X20, 0xA50000

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void set_root(UnityEngine.Transform value)

Disassembly:
	0x036F0E28 LDRB W8, [X22 + 0xB86]
	0x036F0E2C LDR X21, [X21 + 0x9A8]

ISIL:
	001 Move [X0], X1
	002 Return 

Method: UnityEngine.Transform get_tip()

Disassembly:
	0x036F0E30 LDR X20, [X20 + 0x9B0]
	0x036F0E34 MOV X19, X0

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: System.Void set_tip(UnityEngine.Transform value)

Disassembly:
	0x036F0E38 TBNZ X8, 0x0, 0x36F0E5C
	0x036F0E3C ADRP X0, 0xA50000

ISIL:
	001 Move [X0+8], X1
	002 Return 

Method: UnityEngine.Transform get_rootTarget()

Disassembly:
	0x036F0E40 LDR X0, [X0 + 0x9B0]
	0x036F0E44 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_rootTarget(UnityEngine.Transform value)

Disassembly:
	0x036F0E48 ADRP X0, 0xA50000
	0x036F0E4C LDR X0, [X0 + 0x9A8]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: UnityEngine.Transform get_tipTarget()

Disassembly:
	0x036F0E50 BL 0x1C16CF4
	0x036F0E54 MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_tipTarget(UnityEngine.Transform value)

Disassembly:
	0x036F0E58 STRB W8, [X22 + 0xB86]
	0x036F0E5C MOVZ W8, 0x3F800000

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: UnityEngine.AnimationCurve get_curve()

Disassembly:
	0x036F0E60 STR W8, [X19 + 0x20]
	0x036F0E64 LDR X0, [X21]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_curve(UnityEngine.AnimationCurve value)

Disassembly:
	0x036F0E68 BL 0x1C16F10
	0x036F0E6C LDR X1, [X20]

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Boolean UnityEngine.Animations.Rigging.IAnimationJobData.IsValid()

Disassembly:
	0x036F0E70 MOV X20, X0
	0x036F0E74 BL 0x301B7C4
	0x036F0E78 STR X20, [X19 + 0x28]
	0x036F0E7C MOV X0, X19
	0x036F0E80 LDP X20, X19, [X31 + 0x20]
	0x036F0E84 LDP X22, X21, [X31 + 0x10]
	0x036F0E88 MOV X1, X31
	0x036F0E8C LDR X30, [X31], #0x30
	0x036F0E90 B 0x3C36C30
	0x036F0E94 STP X30, X21, [X31 - 0x20]!
	0x036F0E98 STP X20, X19, [X31 + 0x10]
	0x036F0E9C ADRP X20, 0xCF0000
	0x036F0EA0 ADRP X21, 0xA03000
	0x036F0EA4 LDRB W8, [X20 + 0xB87]
	0x036F0EA8 LDR X21, [X21 + 0x970]
	0x036F0EAC MOV X19, X0
	0x036F0EB0 TBNZ X8, 0x0, 0x36F0ED4
	0x036F0EB4 ADRP X0, 0xA03000
	0x036F0EB8 LDR X0, [X0 + 0x970]
	0x036F0EBC BL 0x1C16CF4
	0x036F0EC0 ADRP X0, 0xA50000
	0x036F0EC4 LDR X0, [X0 + 0x9B8]
	0x036F0EC8 BL 0x1C16CF4
	0x036F0ECC MOVZ W8, 0x1
	0x036F0ED0 STRB W8, [X20 + 0xB87]
	0x036F0ED4 LDR X0, [X21]
	0x036F0ED8 LDR W8, [X0 + 0xE0]
	0x036F0EDC CBNZ W8, 0x36F0EE4
	0x036F0EE0 BL 0x1C16DFC
	0x036F0EE4 ADRP X20, 0xA50000
	0x036F0EE8 LDR X20, [X20 + 0x9B8]
	0x036F0EEC MOV X0, X31
	0x036F0EF0 BL 0x3C018E4
	0x036F0EF4 TBZ X0, 0x0, 0x36F0F00
	0x036F0EF8 MOV X0, X19
	0x036F0EFC BL 0x36F0F38
	0x036F0F00 LDR X8, [X20]
	0x036F0F04 LDR X8, [X8 + 0xB8]
	0x036F0F08 LDR X8, [X8]
	0x036F0F0C CBZ X8, 0x36F0F2C
	0x036F0F10 LDR X3, [X8 + 0x18]
	0x036F0F14 LDR X0, [X8 + 0x40]
	0x036F0F18 LDR X2, [X8 + 0x28]
	0x036F0F1C MOV X1, X19
	0x036F0F20 LDP X20, X19, [X31 + 0x10]
	0x036F0F24 LDP X30, X21, [X31], #0x20
	0x036F0F28 BR X3
	0x036F0F2C LDP X20, X19, [X31 + 0x10]
	0x036F0F30 LDP X30, X21, [X31], #0x20
	0x036F0F34 RET
	0x036F0F38 SUB X31, X31, 0x40
	0x036F0F3C STR X30, [X31 + 0x10]
	0x036F0F40 STP X22, X21, [X31 + 0x20]
	0x036F0F44 STP X20, X19, [X31 + 0x30]
	0x036F0F48 ADRP X20, 0xCF0000
	0x036F0F4C LDRB W8, [X20 + 0xB8A]
	0x036F0F50 MOV X19, X0
	0x036F0F54 TBNZ X8, 0x0, 0x36F0F9C
	0x036F0F58 ADRP X0, 0xA0D000
	0x036F0F5C LDR X0, [X0 + 0x850]
	0x036F0F60 BL 0x1C16CF4
	0x036F0F64 ADRP X0, 0xA50000
	0x036F0F68 LDR X0, [X0 + 0x9C0]
	0x036F0F6C BL 0x1C16CF4
	0x036F0F70 ADRP X0, 0xA50000
	0x036F0F74 LDR X0, [X0 + 0x9C8]
	0x036F0F78 BL 0x1C16CF4
	0x036F0F7C ADRP X0, 0xA03000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xCF1000
	006 Move X21, 0xA04000
	007 Move W8, [X20+2932]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xA04000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2932], W8
	019 Move X0, [X21]
	020 Move X20, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {85}
	033 Move X0, [X21]
	034 Move X20, [X19+8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {85}
	047 Move X0, [X19+8]
	048 Compare X0, 0
	049 JumpIfEqual {94}
	050 Move X1, [X19]
	051 Move X2, X31
	052 Call Transform.IsChildOf, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {85}
	057 Move X0, [X21]
	058 Move X20, [X19+16]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X20
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {85}
	071 Move X0, [X21]
	072 Move X20, [X19+24]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X20
	078 Move X1, X31
	079 Move X2, X31
	080 Call Object.op_Equality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {91}
	085 Move W0, W31
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Return X0
	091 Move X8, [X19+32]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSET not yet implemented."
	094 Call 0x1C17F20

Method: System.Void UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues()

Disassembly:
	0x036F0F80 LDR X0, [X0 + 0x598]
	0x036F0F84 BL 0x1C16CF4
	0x036F0F88 ADRP X0, 0xA50000
	0x036F0F8C LDR X0, [X0 + 0x9D0]
	0x036F0F90 BL 0x1C16CF4
	0x036F0F94 MOVZ W8, 0x1
	0x036F0F98 STRB W8, [X20 + 0xB8A]
	0x036F0F9C STP X31, X31, [X31]
	0x036F0FA0 LDRB W8, [X19 + 0x40]
	0x036F0FA4 CBNZ W8, 0x36F109C
	0x036F0FA8 MOV X0, X19
	0x036F0FAC BL 0x36F115C
	0x036F0FB0 ADRP X8, 0xA0D000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction MOVI not yet implemented."
	004 Move X19, X0
	005 Move [X0], V0
	006 Move [X0+8], V0
	007 Move S0, W31
	008 Move S1, W31
	009 Move S2, 1
	010 Move S3, 1
	011 Move X0, X31
	012 Call AnimationCurve.Linear, V0, V1, V2, V3
	013 Move [X19+32], X0
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

