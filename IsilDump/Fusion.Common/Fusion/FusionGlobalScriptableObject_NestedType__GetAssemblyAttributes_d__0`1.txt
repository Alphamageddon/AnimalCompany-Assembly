Type: Fusion.FusionGlobalScriptableObject/<GetAssemblyAttributes>d__0`1

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x02398018 MOV X1, X31
	0x0239801C MOV X20, X0
	0x02398020 BL 0x3380310
	0x02398024 MOV X0, X20
	0x02398028 MOV X1, X19
	0x0239802C BL 0x1C16DEC
	0x02398030 LDR X0, [X0 + 0x18]
	0x02398034 RET
	0x02398038 STR X30, [X31 - 0x20]!
	0x0239803C STP X20, X19, [X31 + 0x10]
	0x02398040 MOV W19, W1
	0x02398044 MOV X1, X31
	0x02398048 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+32], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0239804C BL 0x33BDD8C
	0x02398050 STR W19, [X20 + 0x10]
	0x02398054 LDP X20, X19, [X31 + 0x10]
	0x02398058 LDR X30, [X31], #0x20
	0x0239805C RET
	0x02398060 RET
	0x02398064 SUB X31, X31, 0x30

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call 0x23983A8, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x02398068 STP X30, X21, [X31 + 0x10]
	0x0239806C STP X20, X19, [X31 + 0x20]
	0x02398070 LDR W8, [X0 + 0x10]
	0x02398074 MOV X19, X0
	0x02398078 CMP W8, 0x1
	0x0239807C B.EQ 0x2398110
	0x02398080 CBNZ W8, 0x2398108
	0x02398084 LDR X21, [X19 + 0x40]
	0x02398088 MOVN W8, 0x0
	0x0239808C STR W8, [X19 + 0x10]
	0x02398090 CBZ X21, 0x23981A8
	0x02398094 MOV X20, X1
	0x02398098 LDR X1, [X21 + 0x10]
	0x0239809C STP X31, X31, [X31]
	0x023980A0 LDR X8, [X20 + 0x20]
	0x023980A4 ADD X0, X31, 0x0
	0x023980A8 LDR X8, [X8 + 0xC0]
	0x023980AC LDR X2, [X8 + 0x20]
	0x023980B0 BL 0x28EB7F4
	0x023980B4 LDR V0, [X31]
	0x023980B8 STUR V0, [X19 + 0x48]
	0x023980BC LDR W8, [X19 + 0x50]
	0x023980C0 CMP W8, 0x1
	0x023980C4 B.LT 0x2398108
	0x023980C8 LDR X8, [X21]
	0x023980CC MOV X0, X21
	0x023980D0 MOV X1, X31
	0x023980D4 LDP X9, X2, [X8 + 0x1A8]
	0x023980D8 BLR X9
	0x023980DC CBZ X0, 0x23981A8
	0x023980E0 LDR X8, [X20 + 0x20]
	0x023980E4 LDR W2, [X19 + 0x50]
	0x023980E8 LDR X1, [X19 + 0x48]
	0x023980EC LDR X8, [X8 + 0xC0]
	0x023980F0 LDR X3, [X8 + 0x40]
	0x023980F4 BL 0x2BACD90
	0x023980F8 MOV W8, W31
	0x023980FC STR X0, [X19 + 0x58]
	0x02398100 STR W31, [X19 + 0x60]
	0x02398104 B 0x2398124
	0x02398108 MOV W0, W31
	0x0239810C B 0x2398198
	0x02398110 LDR W8, [X19 + 0x60]
	0x02398114 MOVN W9, 0x0
	0x02398118 STR W9, [X19 + 0x10]
	0x0239811C ADD W8, W8, 0x1
	0x02398120 STR W8, [X19 + 0x60]
	0x02398124 LDR W9, [X19 + 0x50]
	0x02398128 CMP W8, W9
	0x0239812C B.GE 0x2398190
	0x02398130 LDR X10, [X19 + 0x58]
	0x02398134 CBZ X10, 0x23981A8
	0x02398138 LDR W9, [X10 + 0x18]
	0x0239813C CMP W8, W9
	0x02398140 B.CS 0x23981AC
	0x02398144 LDR X9, [X19 + 0x48]
	0x02398148 CBZ X9, 0x23981A8
	0x0239814C ADD X8, X10, W8, 0x2, SXTW
	0x02398150 LDRSW X8, [X8 + 0x20]
	0x02398154 LDR W10, [X9 + 0x18]
	0x02398158 CMP W8, W10
	0x0239815C B.CS 0x23981AC
	0x02398160 MOVZ W10, 0x2C
	0x02398164 MADD X8, X8, X10, X9
	0x02398168 LDR X9, [X8 + 0x40]
	0x0239816C LDR W10, [X8 + 0x48]
	0x02398170 LDP V0, V1, [X8 + 0x20]
	0x02398174 MOVZ W0, 0x1
	0x02398178 STUR X9, [X19 + 0x34]
	0x0239817C STR W10, [X19 + 0x3C]
	0x02398180 STUR V1, [X19 + 0x24]
	0x02398184 STUR V0, [X19 + 0x14]
	0x02398188 STR W0, [X19 + 0x10]
	0x0239818C B 0x2398198
	0x02398190 MOV W0, W31
	0x02398194 STR X31, [X19 + 0x58]
	0x02398198 LDP X20, X19, [X31 + 0x20]
	0x0239819C LDP X30, X21, [X31 + 0x10]
	0x023981A0 ADD X31, X31, 0x30
	0x023981A4 RET
	0x023981A8 BL 0x1C16F20
	0x023981AC BL 0x1C16F28
	0x023981B0 LDR V0, [X0 + 0x3]
	0x023981B4 LDUR V1, [X0 + 0x24]
	0x023981B8 LDUR V2, [X0 + 0x14]
	0x023981BC STUR V0, [X8 + 0x1C]
	0x023981C0 STP V2, V1, [X8]
	0x023981C4 RET
	0x023981C8 STR X30, [X31 - 0x20]!
	0x023981CC STP X20, X19, [X31 + 0x10]
	0x023981D0 ADRP X0, 0x1D5B000
	0x023981D4 LDR X0, [X0 + 0xB40]
	0x023981D8 MOV X19, X1
	0x023981DC BL 0x1C16D08
	0x023981E0 BL 0x1C16F10
	0x023981E4 MOV X1, X31
	0x023981E8 MOV X20, X0
	0x023981EC BL 0x3380310
	0x023981F0 MOV X0, X20
	0x023981F4 MOV X1, X19
	0x023981F8 BL 0x1C16DEC
	0x023981FC SUB X31, X31, 0x40
	0x02398200 STR X30, [X31 + 0x30]
	0x02398204 LDR V0, [X0 + 0x3]
	0x02398208 LDUR V1, [X0 + 0x24]
	0x0239820C LDUR V2, [X0 + 0x14]
	0x02398210 STUR V0, [X31 + 0x1C]
	0x02398214 STP V2, V1, [X31]
	0x02398218 LDR X8, [X1 + 0x20]
	0x0239821C ADD X1, X31, 0x0
	0x02398220 LDR X8, [X8 + 0xC0]
	0x02398224 LDR X0, [X8 + 0x48]
	0x02398228 BL 0x1C16E04
	0x0239822C LDR X30, [X31 + 0x30]
	0x02398230 ADD X31, X31, 0x40
	0x02398234 RET
	0x02398238 STP X30, X21, [X31 - 0x20]!
	0x0239823C STP X20, X19, [X31 + 0x10]
	0x02398240 MOV W20, W1
	0x02398244 MOV X1, X31
	0x02398248 MOV X19, X2
	0x0239824C MOV X21, X0
	0x02398250 BL 0x33BDD8C
	0x02398254 LDR X8, [X19 + 0x20]
	0x02398258 MOVZ W1, 0x4
	0x0239825C LDR X8, [X8 + 0xC0]
	0x02398260 LDR X8, [X8]
	0x02398264 LDR X19, [X8 + 0x80]
	0x02398268 MOV X0, X19
	0x0239826C BL 0x1C16D14
	0x02398270 MOV X0, X21
	0x02398274 MOV X1, X19
	0x02398278 BL 0x1C16D18
	0x0239827C STR W20, [X0]
	0x02398280 LDP X20, X19, [X31 + 0x10]
	0x02398284 LDP X30, X21, [X31], #0x20
	0x02398288 RET
	0x0239828C RET
	0x02398290 STP X29, X30, [X31 - 0x60]!
	0x02398294 STR X27, [X31 + 0x10]
	0x02398298 STP X26, X25, [X31 + 0x20]
	0x0239829C STP X24, X23, [X31 + 0x30]
	0x023982A0 STP X22, X21, [X31 + 0x40]
	0x023982A4 STP X20, X19, [X31 + 0x50]
	0x023982A8 ADD X29, X31, 0x0
	0x023982AC SUB X31, X31, 0x20
	0x023982B0 MRS X25, 0xC000
	0x023982B4 LDR X8, [X25 + 0x28]
	0x023982B8 MOV X20, X1
	0x023982BC MOV X19, X0
	0x023982C0 STUR X8, [X29 - 0x8]
	0x023982C4 LDR X8, [X20 + 0x20]!
	0x023982C8 LDR X8, [X8 + 0xC0]
	0x023982CC LDR X9, [X8 + 0x48]
	0x023982D0 LDR W21, [X9 + 0xFC]
	0x023982D4 ADD X9, X31, 0x0
	0x023982D8 ADD X10, X21, 0xF
	0x023982DC AND X10, X10, 0x1FFFFFFFF
	0x023982E0 SUB X22, X9, X10
	0x023982E4 ADD X31, X22, 0x0
	0x023982E8 LDR X8, [X8]
	0x023982EC LDR X1, [X8 + 0x80]
	0x023982F0 BL 0x1C16D18
	0x023982F4 LDR X8, [X20]
	0x023982F8 LDR W23, [X0]
	0x023982FC MOV X0, X19
	0x02398300 LDR X8, [X8 + 0xC0]
	0x02398304 LDR X8, [X8]
	0x02398308 LDR X8, [X8 + 0x80]
	0x0239830C ADD X1, X8, 0x40
	0x02398310 BL 0x1C16D18
	0x02398314 CMP W23, 0x1
	0x02398318 B.EQ 0x23984B8
	0x0239831C CBNZ W23, 0x23984B0
	0x02398320 LDR X8, [X20]
	0x02398324 LDR X23, [X0]
	0x02398328 MOVZ W1, 0x4
	0x0239832C LDR X8, [X8 + 0xC0]
	0x02398330 LDR X8, [X8]
	0x02398334 LDR X24, [X8 + 0x80]
	0x02398338 MOV X0, X24
	0x0239833C BL 0x1C16D14
	0x02398340 MOV X0, X19
	0x02398344 MOV X1, X24
	0x02398348 BL 0x1C16D18
	0x0239834C MOVN W8, 0x0
	0x02398350 STR W8, [X0]
	0x02398354 CBZ X23, 0x23986E0
	0x02398358 LDR X1, [X23 + 0x10]
	0x0239835C STP X31, X31, [X29 - 0x18]
	0x02398360 LDR X8, [X20]
	0x02398364 SUB X0, X29, 0x18
	0x02398368 LDR X8, [X8 + 0xC0]
	0x0239836C LDR X2, [X8 + 0x20]
	0x02398370 BL 0x28EDFA8
	0x02398374 LDR X8, [X20]
	0x02398378 LDP X26, X27, [X29 - 0x18]
	0x0239837C MOVZ W1, 0x10
	0x02398380 LDR X8, [X8 + 0xC0]
	0x02398384 LDR X8, [X8]
	0x02398388 LDR X8, [X8 + 0x80]
	0x0239838C ADD X24, X8, 0x60
	0x02398390 MOV X0, X24
	0x02398394 BL 0x1C16D14
	0x02398398 MOV X0, X19
	0x0239839C MOV X1, X24
	0x023983A0 BL 0x1C16D18
	0x023983A4 STP X26, X27, [X0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X0
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X19, 0x2042000
	007 Move W8, [X19+2394]
	008 Move X20, X0
	009 Move [X31+24], X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1D5C000
	015 Move X0, [X0+3608]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2394], W8
	019 Add X8, X31, 40
	020 Add X9, X31, 24
	021 Move [X31+8], X8
	022 Move [X31+16], X9
	023 Move W8, [X20+16]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Compare W8, 0
	026 JumpIfNotEqual {48}
	027 Move TEMP, 0
	028 Not TEMP
	029 Move W8, TEMP
	030 Move [X20+16], W8
	031 Move X0, X31
	032 Call AppDomain.get_CurrentDomain
	033 Compare X0, 0
	034 JumpIfEqual {47}
	035 Move X1, X31
	036 Call AppDomain.GetAssemblies, X0
	037 Move X9, [X31+40]
	038 Move X8, X0
	039 Move W10, W31
	040 Move [X9+40], X0
	041 Move [X9+48], W31
	042 Move X19, [X20+56]
	043 Move TEMP, 2
	044 Not TEMP
	045 Move W8, TEMP
	046 Move [X20+16], W8
	047 Call 0x1C17F20
	048 Move W0, W31
	049 Compare X8, 0
	050 JumpIfEqual {188}
	051 Move W11, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X9, [X31+24]
	054 Add X8, X8, W10
	055 Move X0, [X8+32]
	056 Move X9, [X9+32]
	057 Move X9, [X9+192]
	058 Move X1, [X9+16]
	059 Call 0x21A9AAC, X0
	060 Move X19, X0
	061 Compare X0, 0
	062 JumpIfEqual {189}
	063 Move X8, [X31+24]
	064 Move X8, [X8+32]
	065 Move X8, [X8+192]
	066 Move X1, [X8+24]
	067 Move W8, [X1+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X1
	073 Call 0x1C5D684
	074 Move X1, X0
	075 Move X8, [X19]
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move X0, X19
	086 Move W2, W31
	087 Call 0x1C5D788
	088 NotImplemented "Instruction LDRSW not yet implemented."
	089 Add X8, X8, X9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X19
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X8, [X31+40]
	096 Move TEMP, 2
	097 Not TEMP
	098 Move W9, TEMP
	099 Move X19, X0
	100 Move [X8+56], X0
	101 Move [X8+16], W9
	102 Compare X19, 0
	103 JumpIfEqual {187}
	104 Move X10, 0x1D5C000
	105 Move X8, [X19]
	106 Move X10, [X10+3608]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move X1, [X10]
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X19
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X19
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move W8, W0
	128 Move X0, [X31+40]
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {142}
	133 Call 0x23983A8, X0
	134 Move X9, [X31+40]
	135 Move W10, [X9+48]
	136 Move X8, [X9+40]
	137 Move [X9+56], X31
	138 Add W10, W10, 1
	139 Move [X9+48], W10
	140 Move W0, W31
	141 Move [X9+40], X31
	142 Move X19, [X0+56]
	143 Compare X19, 0
	144 JumpIfEqual {191}
	145 Move X8, [X31+24]
	146 Move X8, [X8+32]
	147 Move X8, [X8+192]
	148 Move X1, [X8+40]
	149 Move W8, [X1+309]
	150 Move TEMP, X8
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {157}
	154 Move X0, X1
	155 Call 0x1C5D684
	156 Move X1, X0
	157 Move X8, [X19]
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move X0, X19
	168 Move W2, W31
	169 Call 0x1C5D788
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Add X8, X8, X9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X1, [X0+8]
	175 Move X0, X19
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X9, [X31+40]
	178 Move X8, X0
	179 Move W0, 1
	180 Move [X9+24], X8
	181 Move [X9+16], W0
	182 Move X20, [X31+48]
	183 Move X19, [X31+56]
	184 Move X30, [X31+32]
	185 Add X31, X31, 64
	186 Return X0
	187 Call 0x1C17F20
	188 Call 0x1C17F20
	189 Call 0x1C17F20
	190 Call 0x1C17F28
	191 Call 0x1C17F20
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Call 0x3EB2AD0
	194 Move X19, [X0]
	195 Move [X31], X19
	196 Call 0x3EB2AE0
	197 Compare X19, 0
	198 JumpIfEqual {48}
	199 Add X8, X31, 0
	200 Add X0, X8, 8
	201 Call 0x199EE60
	202 Move X0, X19
	203 Call 0x1C17F18
	204 Compare X19, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1D2D690
	207 Move X0, [X31+40]
	208 Move W8, [X0+16]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Add W31, W8, 3
	211 Call 0x23983A8, X0
	212 Move X0, X19
	213 Call 0x1C17F18
	214 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x023983A8 LDR X8, [X20]
	0x023983AC MOV X0, X19
	0x023983B0 LDR X8, [X8 + 0xC0]
	0x023983B4 LDR X8, [X8]
	0x023983B8 LDR X8, [X8 + 0x80]
	0x023983BC ADD X1, X8, 0x60
	0x023983C0 BL 0x1C16D18
	0x023983C4 LDR W8, [X0 + 0x8]
	0x023983C8 CMP W8, 0x1
	0x023983CC B.LT 0x23984B0
	0x023983D0 LDR X8, [X23]
	0x023983D4 MOV X0, X23
	0x023983D8 MOV X1, X31
	0x023983DC LDP X9, X2, [X8 + 0x1A8]
	0x023983E0 BLR X9
	0x023983E4 LDR X8, [X20]
	0x023983E8 MOV X23, X0
	0x023983EC MOV X0, X19
	0x023983F0 LDR X8, [X8 + 0xC0]
	0x023983F4 LDR X8, [X8]
	0x023983F8 LDR X8, [X8 + 0x80]
	0x023983FC ADD X1, X8, 0x60
	0x02398400 BL 0x1C16D18
	0x02398404 LDR X8, [X20]
	0x02398408 LDR X24, [X0]
	0x0239840C MOV X0, X19
	0x02398410 LDR X8, [X8 + 0xC0]
	0x02398414 LDR X8, [X8]
	0x02398418 LDR X8, [X8 + 0x80]
	0x0239841C ADD X1, X8, 0x60
	0x02398420 BL 0x1C16D18
	0x02398424 CBZ X23, 0x23986E0
	0x02398428 LDR X8, [X20]
	0x0239842C LDR W2, [X0 + 0x8]
	0x02398430 MOV X0, X23
	0x02398434 MOV X1, X24
	0x02398438 LDR X8, [X8 + 0xC0]
	0x0239843C LDR X3, [X8 + 0x40]
	0x02398440 LDR X8, [X3]
	0x02398444 BLR X8
	0x02398448 LDR X8, [X20]
	0x0239844C MOV X23, X0
	0x02398450 MOVZ W1, 0x8
	0x02398454 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x2042000
	005 Move W8, [X19+2395]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1D5C000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+2395], W8
	016 Move X19, [X20+56]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x1D5C000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: T System.Collections.Generic.IEnumerator<T>.get_Current()

Disassembly:
	0x02398458 LDR X8, [X8]
	0x0239845C LDR X8, [X8 + 0x80]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x02398460 ADD X24, X8, 0x80
	0x02398464 MOV X0, X24
	0x02398468 BL 0x1C16D14
	0x0239846C MOV X0, X19
	0x02398470 MOV X1, X24
	0x02398474 BL 0x1C16D18
	0x02398478 STR X23, [X0]
	0x0239847C LDR X8, [X20]
	0x02398480 MOVZ W1, 0x4
	0x02398484 LDR X8, [X8 + 0xC0]
	0x02398488 LDR X8, [X8]
	0x0239848C LDR X8, [X8 + 0x80]
	0x02398490 ADD X23, X8, 0xA0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1D5C000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x02398494 MOV X0, X23
	0x02398498 BL 0x1C16D14

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<T> System.Collections.Generic.IEnumerable<T>.GetEnumerator()

Disassembly:
	0x0239849C MOV X0, X19
	0x023984A0 MOV X1, X23
	0x023984A4 BL 0x1C16D18
	0x023984A8 MOV W24, W31
	0x023984AC B 0x2398538
	0x023984B0 MOV W0, W31
	0x023984B4 B 0x23986B0
	0x023984B8 LDR X8, [X20]
	0x023984BC MOVZ W1, 0x4
	0x023984C0 LDR X8, [X8 + 0xC0]
	0x023984C4 LDR X8, [X8]
	0x023984C8 LDR X23, [X8 + 0x80]
	0x023984CC MOV X0, X23
	0x023984D0 BL 0x1C16D14
	0x023984D4 MOV X0, X19
	0x023984D8 MOV X1, X23
	0x023984DC BL 0x1C16D18
	0x023984E0 MOVN W8, 0x0
	0x023984E4 STR W8, [X0]
	0x023984E8 LDR X8, [X20]
	0x023984EC MOV X0, X19
	0x023984F0 LDR X8, [X8 + 0xC0]
	0x023984F4 LDR X8, [X8]
	0x023984F8 LDR X8, [X8 + 0x80]
	0x023984FC ADD X1, X8, 0xA0
	0x02398500 BL 0x1C16D18
	0x02398504 LDR X8, [X20]
	0x02398508 LDR W9, [X0]
	0x0239850C MOVZ W1, 0x4
	0x02398510 LDR X8, [X8 + 0xC0]
	0x02398514 ADD W24, W9, 0x1
	0x02398518 LDR X8, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X20, X1
	007 Add W31, W8, 2
	008 Move W21, [X0+32]
	009 Move X19, X0
	010 Move X0, X31
	011 Call Environment.get_CurrentManagedThreadId
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X19+16], W31
	014 Move X8, [X20+32]
	015 Move X8, [X8+192]
	016 Move X0, [X8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Call 0x1C17F10
	024 Move X1, X31
	025 Move X19, X0
	026 Call Object..ctor, X0
	027 Move X0, X31
	028 Move [X19+16], W31
	029 Call Environment.get_CurrentManagedThreadId
	030 Move [X19+32], W0
	031 Move X0, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0239851C LDR X8, [X8 + 0x80]
	0x02398520 ADD X23, X8, 0xA0
	0x02398524 MOV X0, X23
	0x02398528 BL 0x1C16D14

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+80]
	004 Call 0x239849C, X0
	005 Return X0

