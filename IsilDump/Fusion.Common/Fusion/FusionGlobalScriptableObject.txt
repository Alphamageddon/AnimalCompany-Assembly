Type: Fusion.FusionGlobalScriptableObject

Method: System.Collections.Generic.IEnumerable`1<T> GetAssemblyAttributes()

Disassembly:
	0x021E5968 SUB X23, X8, X9
	0x021E596C ADD X31, X23, 0x0
	0x021E5970 MOV X0, X23
	0x021E5974 MOV W1, W31
	0x021E5978 MOV X2, X21
	0x021E597C BL 0x3EB1B10
	0x021E5980 LDR X1, [X25]
	0x021E5984 SUB X8, X29, 0xC
	0x021E5988 SUB X3, X29, 0x20
	0x021E598C MOV X2, X20
	0x021E5990 LDR X0, [X1]
	0x021E5994 STURB W31, [X29 - 0xC]
	0x021E5998 STP X8, X22, [X29 - 0x20]
	0x021E599C LDR X8, [X1 + 0x10]
	0x021E59A0 MOV X4, X22
	0x021E59A4 BLR X8
	0x021E59A8 MOV X0, X23
	0x021E59AC MOV X1, X22
	0x021E59B0 MOV X2, X21
	0x021E59B4 BL 0x3EB1AC0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call 0x1C5D6E0
	009 Move X8, [X19+56]
	010 Move X0, [X8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Call 0x1C17F10
	018 Move X8, [X19+56]
	019 Move TEMP, 1
	020 Not TEMP
	021 Move W1, TEMP
	022 Move X19, X0
	023 Move X2, [X8+8]
	024 Call 0x2398018, X0, X1
	025 Move X0, X19
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Return X0

Method: Fusion.FusionGlobalScriptableObjectSourceAttribute[] get_SourceAttributes()

Disassembly:
	0x01E35338 MOV W19, W0
	0x01E3533C TBNZ X8, 0x0, 0x1E35354
	0x01E35340 ADRP X0, 0x22C5000
	0x01E35344 LDR X0, [X0 + 0xC68]
	0x01E35348 BL 0x1C16CF4
	0x01E3534C MOVZ W8, 0x1
	0x01E35350 STRB W8, [X21 + 0xEC8]
	0x01E35354 LDR X0, [X20]
	0x01E35358 LDR W8, [X0 + 0xE0]
	0x01E3535C CBNZ W8, 0x1E35364
	0x01E35360 BL 0x1C16DFC
	0x01E35364 ADRP X21, 0x25A3000
	0x01E35368 LDRB W8, [X21 + 0xF14]
	0x01E3536C CBNZ W8, 0x1E35384
	0x01E35370 ADRP X0, 0x22C5000
	0x01E35374 LDR X0, [X0 + 0xC68]
	0x01E35378 BL 0x1C16CF4
	0x01E3537C MOVZ W8, 0x1
	0x01E35380 STRB W8, [X21 + 0xF14]
	0x01E35384 LDR X0, [X20]
	0x01E35388 LDR W8, [X0 + 0xE0]
	0x01E3538C CBNZ W8, 0x1E35398
	0x01E35390 BL 0x1C16DFC
	0x01E35394 LDR X0, [X20]
	0x01E35398 LDR X8, [X0 + 0xB8]
	0x01E3539C LDR X8, [X8]
	0x01E353A0 CBZ X8, 0x1E353E8
	0x01E353A4 MOV W9, W19
	0x01E353A8 MOV W9, W9
	0x01E353AC MOV W9, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x25A4000
	005 Move X19, 0x22C7000
	006 Move W8, [X20+3771]
	007 Move X19, [X19+1552]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x22C7000
	013 Move X0, [X0+1552]
	014 Call 0x1C17CF4
	015 Move X0, 0x22C7000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3771], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X0, [X8]
	028 Compare X0, 0
	029 JumpIfEqual {38}
	030 Move X8, 0x22C7000
	031 Move X8, [X8+1560]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X1, [X8]
	035 Move X30, [X31+32]
	036 Call 0x2EE9EE4, X0
	037 Return X0
	038 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x01E353B0 LDR W10, [X8 + 0x18]
	0x01E353B4 MOV W9, W9

ISIL:
	001 Move X1, X31
	002 Call ScriptableObject..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x01E353C0 MOVK W11, 0x7C40000
	0x01E353C4 MUL W9, W9, W11
	0x01E353C8 UBFM W9, W9, 0x1B, 0x1F
	0x01E353CC CMP W9, W10
	0x01E353D0 B.CS 0x1E353EC
	0x01E353D4 ADD X8, X8, W9, UXTW
	0x01E353D8 LDRB W0, [X8 + 0x20]
	0x01E353DC LDP X20, X19, [X31 + 0x10]
	0x01E353E0 LDP X30, X21, [X31], #0x20
	0x01E353E4 RET
	0x01E353E8 BL 0x1C16F20
	0x01E353EC BL 0x1C16F28
	0x01E353F0 STP X30, X21, [X31 - 0x20]!
	0x01E353F4 STP X20, X19, [X31 + 0x10]
	0x01E353F8 ADRP X21, 0x25A3000
	0x01E353FC ADRP X20, 0x22C5000
	0x01E35400 LDRB W8, [X21 + 0xEC9]
	0x01E35404 LDR X20, [X20 + 0xC68]
	0x01E35408 MOV W19, W0
	0x01E3540C TBNZ X8, 0x0, 0x1E35424
	0x01E35410 ADRP X0, 0x22C5000
	0x01E35414 LDR X0, [X0 + 0xC68]
	0x01E35418 BL 0x1C16CF4
	0x01E3541C MOVZ W8, 0x1
	0x01E35420 STRB W8, [X21 + 0xEC9]
	0x01E35424 LDR X0, [X20]
	0x01E35428 LDR W8, [X0 + 0xE0]
	0x01E3542C CBNZ W8, 0x1E35438
	0x01E35430 BL 0x1C16DFC
	0x01E35434 LDR X0, [X20]
	0x01E35438 LDR X8, [X0 + 0xB8]
	0x01E3543C LDR X8, [X8]
	0x01E35440 CBZ X8, 0x1E35488
	0x01E35444 MOV W9, W19
	0x01E35448 MOV W9, W9
	0x01E3544C MOV W9, W9
	0x01E35450 LDR W10, [X8 + 0x18]
	0x01E35454 MOV W9, W9
	0x01E35458 MOVZ W11, 0xACDD
	0x01E3545C MOV W9, W9
	0x01E35460 MOVK W11, 0x7C40000
	0x01E35464 MUL W9, W9, W11
	0x01E35468 UBFM W9, W9, 0x1B, 0x1F
	0x01E3546C CMP W9, W10
	0x01E35470 B.CS 0x1E3548C
	0x01E35474 ADD X8, X8, W9, UXTW
	0x01E35478 LDRB W0, [X8 + 0x20]
	0x01E3547C LDP X20, X19, [X31 + 0x10]
	0x01E35480 LDP X30, X21, [X31], #0x20
	0x01E35484 RET
	0x01E35488 BL 0x1C16F20
	0x01E3548C BL 0x1C16F28
	0x01E35490 STP X30, X21, [X31 - 0x20]!
	0x01E35494 STP X20, X19, [X31 + 0x10]
	0x01E35498 ADRP X21, 0x25A3000
	0x01E3549C ADRP X20, 0x22C5000
	0x01E354A0 LDRB W8, [X21 + 0xECA]
	0x01E354A4 LDR X20, [X20 + 0xC68]
	0x01E354A8 MOV X19, X0
	0x01E354AC TBNZ X8, 0x0, 0x1E354C4
	0x01E354B0 ADRP X0, 0x22C5000
	0x01E354B4 LDR X0, [X0 + 0xC68]
	0x01E354B8 BL 0x1C16CF4
	0x01E354BC MOVZ W8, 0x1
	0x01E354C0 STRB W8, [X21 + 0xECA]
	0x01E354C4 LDR X0, [X20]
	0x01E354C8 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x25A4000
	009 Move X19, 0x22C7000
	010 Move W8, [X20+3772]
	011 Move X19, [X19+1568]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x22C7000
	017 Move X0, [X0+1576]
	018 Call 0x1C17CF4
	019 Move X0, 0x22C7000
	020 Move X0, [X0+1552]
	021 Call 0x1C17CF4
	022 Move X0, 0x22C7000
	023 Move X0, [X0+1584]
	024 Call 0x1C17CF4
	025 Move X0, 0x22C7000
	026 Move X0, [X0+1592]
	027 Call 0x1C17CF4
	028 Move X0, 0x22C7000
	029 Move X0, [X0+1600]
	030 Call 0x1C17CF4
	031 Move X0, 0x22C7000
	032 Move X0, [X0+1568]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3772], W8
	036 Move X0, [X19]
	037 Move X24, 0x22C7000
	038 Move X20, 0x22C7000
	039 Move X23, 0x22C7000
	040 Move X22, 0x22C7000
	041 Move X21, 0x22C7000
	042 Move X24, [X24+1576]
	043 Move W8, [X0+224]
	044 Move X20, [X20+1600]
	045 Move X23, [X23+1592]
	046 Move X22, [X22+1584]
	047 Move X21, [X21+1552]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X19]
	052 Move X8, [X0+184]
	053 Move X0, [X24]
	054 Move X19, [X8]
	055 Call 0x1C17F10
	056 Move X2, [X20]
	057 Move X1, X19
	058 Move X3, X31
	059 Move X20, X0
	060 Call Func`1<Object>..ctor, X0, X1, X2
	061 Move X0, [X23]
	062 Call 0x1C17F10
	063 Move X2, [X22]
	064 Move X1, X20
	065 Move X19, X0
	066 Call 0x2EE97EC, X0, X1
	067 Move X8, [X21]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X8, [X8+184]
	073 Move [X8], X19
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X30, [X31+64]
	077 Return 

