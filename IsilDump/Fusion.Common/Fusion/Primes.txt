Type: Fusion.Primes

Method: System.Boolean IsPrime(System.Int32 value)

Disassembly:
	0x01E37FA0 BL 0x1C16CF4
	0x01E37FA4 MOVZ W8, 0x1
	0x01E37FA8 STRB W8, [X19 + 0xEE9]
	0x01E37FAC LDR X8, [X20]
	0x01E37FB0 LDP X20, X19, [X31 + 0x10]
	0x01E37FB4 LDR X8, [X8 + 0xB8]
	0x01E37FB8 LDR W9, [X8 + 0x4]
	0x01E37FBC ORR W9, W9, 0x2
	0x01E37FC0 STR W9, [X8 + 0x4]
	0x01E37FC4 LDR X30, [X31], #0x20
	0x01E37FC8 RET
	0x01E37FCC STR X30, [X31 - 0x20]!
	0x01E37FD0 STP X20, X19, [X31 + 0x10]
	0x01E37FD4 ADRP X19, 0x25A1000
	0x01E37FD8 ADRP X20, 0x22C4000
	0x01E37FDC LDRB W8, [X19 + 0xEEA]
	0x01E37FE0 LDR X20, [X20 + 0x710]
	0x01E37FE4 TBNZ X8, 0x0, 0x1E37FFC
	0x01E37FE8 ADRP X0, 0x22C4000
	0x01E37FEC LDR X0, [X0 + 0x710]
	0x01E37FF0 BL 0x1C16CF4
	0x01E37FF4 MOVZ W8, 0x1
	0x01E37FF8 STRB W8, [X19 + 0xEEA]
	0x01E37FFC LDR X8, [X20]
	0x01E38000 LDP X20, X19, [X31 + 0x10]
	0x01E38004 LDR X8, [X8 + 0xB8]
	0x01E38008 LDR W9, [X8 + 0x4]
	0x01E3800C ORR W9, W9, 0x4
	0x01E38010 STR W9, [X8 + 0x4]
	0x01E38014 LDR X30, [X31], #0x20
	0x01E38018 RET
	0x01E3801C STR X30, [X31 - 0x20]!
	0x01E38020 STP X20, X19, [X31 + 0x10]
	0x01E38024 ADRP X19, 0x25A0000
	0x01E38028 ADRP X20, 0x22C3000
	0x01E3802C LDRB W8, [X19 + 0xEEB]
	0x01E38030 LDR X20, [X20 + 0x710]
	0x01E38034 TBNZ X8, 0x0, 0x1E3804C
	0x01E38038 ADRP X0, 0x22C3000
	0x01E3803C LDR X0, [X0 + 0x710]
	0x01E38040 BL 0x1C16CF4
	0x01E38044 MOVZ W8, 0x1
	0x01E38048 STRB W8, [X19 + 0xEEB]
	0x01E3804C LDR X8, [X20]
	0x01E38050 LDP X20, X19, [X31 + 0x10]
	0x01E38054 LDR X8, [X8 + 0xB8]
	0x01E38058 LDRB W8, [X8 + 0x8]
	0x01E3805C UBFM W0, W8, 0x1, 0x1
	0x01E38060 LDR X30, [X31], #0x20
	0x01E38064 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25A2000
	007 Move X20, 0x22C5000
	008 Move W8, [X21+3793]
	009 Move X20, [X20+1760]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x22C5000
	016 Move X0, [X0+1760]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3793], W8
	020 Move X0, [X20]
	021 Move W8, W31
	022 Move W9, [X0+224]
	023 Move W21, W8
	024 Compare W9, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X8, [X8]
	030 Compare X8, 0
	031 JumpIfEqual {57}
	032 Move W22, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X20]
	039 Move X8, [X0+184]
	040 Move X8, [X8]
	041 Compare X8, 0
	042 JumpIfEqual {57}
	043 Move W9, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X8, X8, W21
	046 Move W8, [X8+32]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W8, W21, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move X30, [X31+48]
	056 Return X0
	057 Call 0x1C17F20
	058 Call 0x1C17F28

Method: System.Int32 GetNextPrime(System.Int32 value)

Disassembly:
	0x01E38068 STR X30, [X31 - 0x20]!
	0x01E3806C STP X20, X19, [X31 + 0x10]
	0x01E38070 ADRP X19, 0x25A0000
	0x01E38074 ADRP X20, 0x22C3000
	0x01E38078 LDRB W8, [X19 + 0xEEC]
	0x01E3807C LDR X20, [X20 + 0x710]
	0x01E38080 TBNZ X8, 0x0, 0x1E38098
	0x01E38084 ADRP X0, 0x22C3000
	0x01E38088 LDR X0, [X0 + 0x710]
	0x01E3808C BL 0x1C16CF4
	0x01E38090 MOVZ W8, 0x1
	0x01E38094 STRB W8, [X19 + 0xEEC]
	0x01E38098 LDR X8, [X20]
	0x01E3809C LDP X20, X19, [X31 + 0x10]
	0x01E380A0 LDR X8, [X8 + 0xB8]
	0x01E380A4 LDRB W8, [X8 + 0x8]
	0x01E380A8 UBFM W0, W8, 0x2, 0x2
	0x01E380AC LDR X30, [X31], #0x20
	0x01E380B0 RET
	0x01E380B4 STR X30, [X31 - 0x20]!
	0x01E380B8 STP X20, X19, [X31 + 0x10]
	0x01E380BC ADRP X19, 0x25A0000
	0x01E380C0 ADRP X20, 0x22C3000
	0x01E380C4 LDRB W8, [X19 + 0xEED]
	0x01E380C8 LDR X20, [X20 + 0x710]
	0x01E380CC TBNZ X8, 0x0, 0x1E380E4
	0x01E380D0 ADRP X0, 0x22C3000
	0x01E380D4 LDR X0, [X0 + 0x710]
	0x01E380D8 BL 0x1C16CF4
	0x01E380DC MOVZ W8, 0x1
	0x01E380E0 STRB W8, [X19 + 0xEED]
	0x01E380E4 LDR X8, [X20]
	0x01E380E8 LDP X20, X19, [X31 + 0x10]
	0x01E380EC LDR X8, [X8 + 0xB8]
	0x01E380F0 LDRB W8, [X8 + 0x8]
	0x01E380F4 UBFM W0, W8, 0x3, 0x3
	0x01E380F8 LDR X30, [X31], #0x20
	0x01E380FC RET
	0x01E38100 STR X30, [X31 - 0x20]!
	0x01E38104 STP X20, X19, [X31 + 0x10]
	0x01E38108 ADRP X19, 0x25A0000
	0x01E3810C ADRP X20, 0x22C3000
	0x01E38110 LDRB W8, [X19 + 0xEEE]
	0x01E38114 LDR X20, [X20 + 0x710]
	0x01E38118 TBNZ X8, 0x0, 0x1E38130
	0x01E3811C ADRP X0, 0x22C3000
	0x01E38120 LDR X0, [X0 + 0x710]
	0x01E38124 BL 0x1C16CF4
	0x01E38128 MOVZ W8, 0x1
	0x01E3812C STRB W8, [X19 + 0xEEE]
	0x01E38130 LDR X8, [X20]
	0x01E38134 LDP X20, X19, [X31 + 0x10]
	0x01E38138 LDR X8, [X8 + 0xB8]
	0x01E3813C LDR W9, [X8 + 0x8]
	0x01E38140 ORR W9, W9, 0x2
	0x01E38144 STR W9, [X8 + 0x8]
	0x01E38148 LDR X30, [X31], #0x20
	0x01E3814C RET
	0x01E38150 STR X30, [X31 - 0x20]!
	0x01E38154 STP X20, X19, [X31 + 0x10]
	0x01E38158 ADRP X19, 0x25A0000
	0x01E3815C ADRP X20, 0x22C3000
	0x01E38160 LDRB W8, [X19 + 0xEEF]
	0x01E38164 LDR X20, [X20 + 0x710]
	0x01E38168 TBNZ X8, 0x0, 0x1E38180
	0x01E3816C ADRP X0, 0x22C3000
	0x01E38170 LDR X0, [X0 + 0x710]
	0x01E38174 BL 0x1C16CF4
	0x01E38178 MOVZ W8, 0x1
	0x01E3817C STRB W8, [X19 + 0xEEF]
	0x01E38180 LDR X8, [X20]
	0x01E38184 LDP X20, X19, [X31 + 0x10]
	0x01E38188 LDR X8, [X8 + 0xB8]
	0x01E3818C LDR W9, [X8 + 0x8]
	0x01E38190 ORR W9, W9, 0x4
	0x01E38194 STR W9, [X8 + 0x8]
	0x01E38198 LDR X30, [X31], #0x20
	0x01E3819C RET
	0x01E381A0 STR X30, [X31 - 0x20]!
	0x01E381A4 STP X20, X19, [X31 + 0x10]
	0x01E381A8 ADRP X19, 0x25A0000
	0x01E381AC ADRP X20, 0x22C3000
	0x01E381B0 LDRB W8, [X19 + 0xEF0]
	0x01E381B4 LDR X20, [X20 + 0x710]
	0x01E381B8 TBNZ X8, 0x0, 0x1E381D0
	0x01E381BC ADRP X0, 0x22C3000
	0x01E381C0 LDR X0, [X0 + 0x710]
	0x01E381C4 BL 0x1C16CF4
	0x01E381C8 MOVZ W8, 0x1
	0x01E381CC STRB W8, [X19 + 0xEF0]
	0x01E381D0 LDR X8, [X20]
	0x01E381D4 LDP X20, X19, [X31 + 0x10]
	0x01E381D8 LDR X8, [X8 + 0xB8]
	0x01E381DC LDR W9, [X8 + 0x8]
	0x01E381E0 ORR W9, W9, 0x8
	0x01E381E4 STR W9, [X8 + 0x8]
	0x01E381E8 LDR X30, [X31], #0x20
	0x01E381EC RET
	0x01E381F0 STR X30, [X31 - 0x20]!
	0x01E381F4 STP X20, X19, [X31 + 0x10]
	0x01E381F8 ADRP X19, 0x25A0000
	0x01E381FC ADRP X20, 0x22C3000
	0x01E38200 LDRB W8, [X19 + 0xEF1]
	0x01E38204 LDR X20, [X20 + 0x710]
	0x01E38208 TBNZ X8, 0x0, 0x1E38220
	0x01E3820C ADRP X0, 0x22C3000
	0x01E38210 LDR X0, [X0 + 0x710]
	0x01E38214 BL 0x1C16CF4
	0x01E38218 MOVZ W8, 0x1
	0x01E3821C STRB W8, [X19 + 0xEF1]
	0x01E38220 LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25A1000
	007 Move X20, 0x22C4000
	008 Move W8, [X21+3794]
	009 Move X20, [X20+1760]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x22C4000
	016 Move X0, [X0+1760]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3794], W8
	020 Move X0, [X20]
	021 Move W21, W31
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Move X8, [X0+184]
	028 Move X8, [X8]
	029 Compare X8, 0
	030 JumpIfEqual {68}
	031 Move W8, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X8, [X8]
	040 Compare X8, 0
	041 JumpIfEqual {68}
	042 Move W9, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, W21
	045 Add X9, X8, X22
	046 Move W9, [X9+32]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W21, W21, 1
	049 Move W9, [X0+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {58}
	052 Call 0x1C17DFC
	053 Move X8, [X20]
	054 Move X8, [X8+184]
	055 Move X8, [X8]
	056 Compare X8, 0
	057 JumpIfEqual {68}
	058 Move W9, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X8, X8, X22
	061 Move W0, [X8+32]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 Call 0x1C17F20
	069 Move X19, 0x22C4000
	070 Move X19, [X19+1760]
	071 Move X0, X19
	072 Call 0x1C17D08
	073 Call 0x19913D0
	074 Move X0, X19
	075 Call 0x1C17D08
	076 Move X8, [X0+184]
	077 Move X0, X19
	078 Move X20, [X8]
	079 Call 0x1C17D08
	080 Move X8, [X0+184]
	081 Move X19, [X8]
	082 Move X0, X19
	083 Call 0x19913C0
	084 Move X0, X20
	085 Call 0x19913C0
	086 Move W8, [X19+24]
	087 Move X0, X20
	088 Subtract W8, W8, 1
	089 Move X1, W8
	090 Call 0x1992DF4
	091 Move [X31+12], W0
	092 Move X0, 0x22BC000
	093 Move X0, [X0+1880]
	094 Call 0x1C17D08
	095 Add X1, X31, 12
	096 Call 0x1C17E04
	097 Move X19, X0
	098 Move X0, 0x22C4000
	099 Move X0, [X0+1768]
	100 Call 0x1C17D08
	101 Move X1, X19
	102 Move X2, X31
	103 Call String.Format, X0, X1
	104 Move X19, X0
	105 Move X0, 0x22BC000
	106 Move X0, [X0+1456]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X1, X19
	110 Move X2, X31
	111 Move X20, X0
	112 Call InvalidOperationException..ctor, X0, X1
	113 Move X0, 0x22C4000
	114 Move X0, [X0+1776]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X20
	118 Call 0x1C17DEC
	119 Call 0x1C17F28

Method: System.UInt32 GetNextPrime(System.UInt32 value)

Disassembly:
	0x01E38224 LDP X20, X19, [X31 + 0x10]
	0x01E38228 LDR X8, [X8 + 0xB8]
	0x01E3822C STR X31, [X8]
	0x01E38230 STR W31, [X8 + 0x8]
	0x01E38234 LDR X30, [X31], #0x20
	0x01E38238 RET
	0x01E3823C STP X30, X21, [X31 - 0x20]!
	0x01E38240 STP X20, X19, [X31 + 0x10]
	0x01E38244 MOV X20, X1
	0x01E38248 MOV X1, X31
	0x01E3824C MOV W19, W2
	0x01E38250 MOV X21, X0
	0x01E38254 BL 0x32277A8
	0x01E38258 TBZ X0, 0x0, 0x1E3826C
	0x01E3825C LDP X20, X19, [X31 + 0x10]
	0x01E38260 MOV X0, X31
	0x01E38264 LDP X30, X21, [X31], #0x20
	0x01E38268 RET
	0x01E3826C CBZ X21, 0x1E38294
	0x01E38270 MOV X0, X31
	0x01E38274 BL 0x32C1424
	0x01E38278 LDR W1, [X21 + 0x10]
	0x01E3827C MOV X2, X20
	0x01E38280 MOV W3, W19
	0x01E38284 LDP X20, X19, [X31 + 0x10]
	0x01E38288 ADD X0, X21, W0, SXTW
	0x01E3828C LDP X30, X21, [X31], #0x20
	0x01E38290 B 0x1E38298
	0x01E38294 BL 0x1C16F20
	0x01E38298 SUB X31, X31, 0x70
	0x01E3829C STP X29, X30, [X31 + 0x10]
	0x01E382A0 STP X28, X27, [X31 + 0x20]
	0x01E382A4 STP X26, X25, [X31 + 0x30]
	0x01E382A8 STP X24, X23, [X31 + 0x40]
	0x01E382AC STP X22, X21, [X31 + 0x50]
	0x01E382B0 STP X20, X19, [X31 + 0x60]
	0x01E382B4 ADRP X23, 0x25A0000
	0x01E382B8 LDRB W8, [X23 + 0xEF2]
	0x01E382BC MOV W22, W3
	0x01E382C0 MOV X19, X2
	0x01E382C4 MOV W20, W1
	0x01E382C8 MOV X21, X0
	0x01E382CC TBNZ X8, 0x0, 0x1E382F0
	0x01E382D0 ADRP X0, 0x22BD000
	0x01E382D4 LDR X0, [X0 + 0x170]
	0x01E382D8 BL 0x1C16CF4
	0x01E382DC ADRP X0, 0x22C3000
	0x01E382E0 LDR X0, [X0 + 0x718]
	0x01E382E4 BL 0x1C16CF4
	0x01E382E8 MOVZ W8, 0x1
	0x01E382EC STRB W8, [X23 + 0xEF2]
	0x01E382F0 MOV X24, X31
	0x01E382F4 SUBS W8, W20, 0x1
	0x01E382F8 MOV W25, W31
	0x01E382FC STR W8, [X31 + 0x8]
	0x01E38300 B.LT 0x1E38400
	0x01E38304 CMP W22, 0x1
	0x01E38308 B.LT 0x1E38400
	0x01E3830C ADRP X23, 0x22BD000
	0x01E38310 LDR X23, [X23 + 0x170]
	0x01E38314 MOV X24, X31
	0x01E38318 MOV W25, W31
	0x01E3831C MOV W27, W22
	0x01E38320 MOVN W9, 0xD7FF
	0x01E38324 LDRH W22, [X21, W25, SXTW]
	0x01E38328 ADD W29, W22, W9
	0x01E3832C CMP W29, 0x7FF
	0x01E38330 B.HI 0x1E383AC
	0x01E38334 LDR X0, [X23]
	0x01E38338 LDR W8, [X0 + 0xE0]
	0x01E3833C CBNZ W8, 0x1E38344
	0x01E38340 BL 0x1C16DFC
	0x01E38344 MOV W0, W22
	0x01E38348 MOV X1, X31
	0x01E3834C BL 0x331BFEC
	0x01E38350 LDR W8, [X31 + 0x8]
	0x01E38354 CMP W25, W8
	0x01E38358 B.GE 0x1E383CC
	0x01E3835C TBZ X0, 0x0, 0x1E383CC
	0x01E38360 LDR X0, [X23]
	0x01E38364 ADD W28, W25, 0x1
	0x01E38368 MOV X26, X23
	0x01E3836C LDRH W23, [X21, W28, SXTW]
	0x01E38370 LDR W8, [X0 + 0xE0]
	0x01E38374 CBNZ W8, 0x1E3837C
	0x01E38378 BL 0x1C16DFC
	0x01E3837C MOV W0, W23
	0x01E38380 MOV X1, X31
	0x01E38384 BL 0x331C0FC
	0x01E38388 MOV X23, X26
	0x01E3838C MOVN W9, 0xD7FF
	0x01E38390 TBZ X0, 0x0, 0x1E383CC
	0x01E38394 SXTW X8, W28
	0x01E38398 LDRH W8, [X21, X8, LSL #1]
	0x01E3839C MOVZ W10, 0x2400
	0x01E383A0 MOV W25, W28
	0x01E383A4 ADD W8, W8, W29, 0xA, LSL
	0x01E383A8 ADD W22, W8, W10
	0x01E383AC ADD W25, W25, 0x1
	0x01E383B0 STR W22, [X19], #0x4
	0x01E383B4 CMP W25, W20
	0x01E383B8 ADD X24, X24, 0x1
	0x01E383BC B.GE 0x1E38400
	0x01E383C0 CMP X24, X27
	0x01E383C4 B.CC 0x1E38324
	0x01E383C8 B 0x1E38400
	0x01E383CC LDR X0, [X23]
	0x01E383D0 ADD X1, X31, 0xC
	0x01E383D4 STRH W22, [X31 + 0xC]
	0x01E383D8 BL 0x1C16E04
	0x01E383DC ADRP X8, 0x22C3000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25A1000
	007 Move X20, 0x22C4000
	008 Move W8, [X21+3795]
	009 Move X20, [X20+1760]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x22C4000
	016 Move X0, [X0+1760]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3795], W8
	020 Move X0, [X20]
	021 Move W21, W31
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X20]
	027 Move X8, [X0+184]
	028 Move X8, [X8]
	029 Compare X8, 0
	030 JumpIfEqual {68}
	031 Move W8, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move X8, [X8]
	040 Compare X8, 0
	041 JumpIfEqual {68}
	042 Move W9, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, W21
	045 Add X9, X8, X22
	046 Move W9, [X9+32]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W21, W21, 1
	049 Move W9, [X0+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {58}
	052 Call 0x1C17DFC
	053 Move X8, [X20]
	054 Move X8, [X8+184]
	055 Move X8, [X8]
	056 Compare X8, 0
	057 JumpIfEqual {68}
	058 Move W9, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X8, X8, X22
	061 Move W0, [X8+32]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 Call 0x1C17F20
	069 Move X19, 0x22C4000
	070 Move X19, [X19+1760]
	071 Move X0, X19
	072 Call 0x1C17D08
	073 Call 0x19913D0
	074 Move X0, X19
	075 Call 0x1C17D08
	076 Move X8, [X0+184]
	077 Move X0, X19
	078 Move X20, [X8]
	079 Call 0x1C17D08
	080 Move X8, [X0+184]
	081 Move X19, [X8]
	082 Move X0, X19
	083 Call 0x19913C0
	084 Move X0, X20
	085 Call 0x19913C0
	086 Move W8, [X19+24]
	087 Move X0, X20
	088 Subtract W8, W8, 1
	089 Move X1, W8
	090 Call 0x1992DF4
	091 Move [X31+12], W0
	092 Move X0, 0x22BC000
	093 Move X0, [X0+1880]
	094 Call 0x1C17D08
	095 Add X1, X31, 12
	096 Call 0x1C17E04
	097 Move X19, X0
	098 Move X0, 0x22C4000
	099 Move X0, [X0+1768]
	100 Call 0x1C17D08
	101 Move X1, X19
	102 Move X2, X31
	103 Call String.Format, X0, X1
	104 Move X19, X0
	105 Move X0, 0x22BC000
	106 Move X0, [X0+1456]
	107 Call 0x1C17D08
	108 Call 0x1C17F10
	109 Move X1, X19
	110 Move X2, X31
	111 Move X20, X0
	112 Call InvalidOperationException..ctor, X0, X1
	113 Move X0, 0x22C4000
	114 Move X0, [X0+1784]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X20
	118 Call 0x1C17DEC
	119 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x01E383E0 LDR X8, [X8 + 0x718]
	0x01E383E4 MOV X1, X0
	0x01E383E8 MOV X2, X31
	0x01E383EC LDR X8, [X8]
	0x01E383F0 MOV X0, X8
	0x01E383F4 BL 0x321EFD0
	0x01E383F8 MOV X1, X31
	0x01E383FC BL 0x1E3B98C
	0x01E38400 MOV W0, W25
	0x01E38404 BFM X0, X24, 0x20, 0x1F
	0x01E38408 LDP X20, X19, [X31 + 0x60]
	0x01E3840C LDP X22, X21, [X31 + 0x50]
	0x01E38410 LDP X24, X23, [X31 + 0x40]
	0x01E38414 LDP X26, X25, [X31 + 0x30]
	0x01E38418 LDP X28, X27, [X31 + 0x20]
	0x01E3841C LDP X29, X30, [X31 + 0x10]
	0x01E38420 ADD X31, X31, 0x70
	0x01E38424 RET
	0x01E38428 STP W2, W1, [X0]
	0x01E3842C RET
	0x01E38430 SUB X31, X31, 0x70
	0x01E38434 STP X29, X30, [X31 + 0x10]
	0x01E38438 STP X28, X27, [X31 + 0x20]
	0x01E3843C STP X26, X25, [X31 + 0x30]
	0x01E38440 STP X24, X23, [X31 + 0x40]
	0x01E38444 STP X22, X21, [X31 + 0x50]
	0x01E38448 STP X20, X19, [X31 + 0x60]
	0x01E3844C ADRP X24, 0x25A0000
	0x01E38450 LDRB W8, [X24 + 0xEF3]
	0x01E38454 MOV W23, W4
	0x01E38458 MOV W19, W3
	0x01E3845C MOV X21, X2
	0x01E38460 MOV W20, W1
	0x01E38464 MOV X22, X0
	0x01E38468 TBNZ X8, 0x0, 0x1E38498
	0x01E3846C ADRP X0, 0x22BB000
	0x01E38470 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25A1000
	007 Move X22, 0x22BD000
	008 Move X19, 0x22C4000
	009 Move X20, 0x22C4000
	010 Move W8, [X21+3796]
	011 Move X22, [X22+3672]
	012 Move X19, [X19+1792]
	013 Move X20, [X20+1760]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x22BD000
	019 Move X0, [X0+3672]
	020 Call 0x1C17CF4
	021 Move X0, 0x22C4000
	022 Move X0, [X0+1760]
	023 Call 0x1C17CF4
	024 Move X0, 0x22C4000
	025 Move X0, [X0+1792]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3796], W8
	029 Move X0, [X22]
	030 Move W1, 30
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

