Type: Fusion.Async.TaskManager/<>c__DisplayClass7_0/<<Run>b__0>d

Method: System.Void MoveNext()

Disassembly:
	0x01E3BB2C MOVZ W8, 0x1
	0x01E3BB30 STRB W8, [X21 + 0xF20]
	0x01E3BB34 LDR X0, [X20]
	0x01E3BB38 LDR W8, [X0 + 0xE0]
	0x01E3BB3C CBNZ W8, 0x1E3BB44
	0x01E3BB40 BL 0x1C16DFC
	0x01E3BB44 ADRP X21, 0x259D000
	0x01E3BB48 LDRB W8, [X21 + 0xFA7]
	0x01E3BB4C CBNZ W8, 0x1E3BB64
	0x01E3BB50 ADRP X0, 0x22C0000
	0x01E3BB54 LDR X0, [X0 + 0x958]
	0x01E3BB58 BL 0x1C16CF4
	0x01E3BB5C MOVZ W8, 0x1
	0x01E3BB60 STRB W8, [X21 + 0xFA7]
	0x01E3BB64 LDR X0, [X20]
	0x01E3BB68 LDR W8, [X0 + 0xE0]
	0x01E3BB6C CBNZ W8, 0x1E3BB78
	0x01E3BB70 BL 0x1C16DFC
	0x01E3BB74 LDR X0, [X20]
	0x01E3BB78 LDR X8, [X0 + 0xB8]
	0x01E3BB7C MOV X0, X19
	0x01E3BB80 LDP X20, X19, [X31 + 0x10]
	0x01E3BB84 MOV W2, W31
	0x01E3BB88 LDR X1, [X8]
	0x01E3BB8C LDP X30, X21, [X31], #0x20
	0x01E3BB90 B 0x1E3BB94
	0x01E3BB94 STP X30, X23, [X31 - 0x30]!
	0x01E3BB98 STP X22, X21, [X31 + 0x10]
	0x01E3BB9C STP X20, X19, [X31 + 0x20]
	0x01E3BBA0 ADRP X22, 0x259D000
	0x01E3BBA4 ADRP X23, 0x22B8000
	0x01E3BBA8 LDRB W8, [X22 + 0xFA5]
	0x01E3BBAC LDR X23, [X23 + 0x8F0]
	0x01E3BBB0 MOV W21, W2
	0x01E3BBB4 MOV X20, X1
	0x01E3BBB8 MOV X19, X0
	0x01E3BBBC TBNZ X8, 0x0, 0x1E3BBD4
	0x01E3BBC0 ADRP X0, 0x22B8000
	0x01E3BBC4 LDR X0, [X0 + 0x8F0]
	0x01E3BBC8 BL 0x1C16CF4
	0x01E3BBCC MOVZ W8, 0x1
	0x01E3BBD0 STRB W8, [X22 + 0xFA5]
	0x01E3BBD4 LDR X0, [X23]
	0x01E3BBD8 BL 0x1C16F10
	0x01E3BBDC MOV X1, X31
	0x01E3BBE0 MOV X22, X0
	0x01E3BBE4 BL 0x3231AC4
	0x01E3BBE8 MOV X0, X19
	0x01E3BBEC MOV X1, X31
	0x01E3BBF0 STR X22, [X19 + 0x10]
	0x01E3BBF4 BL 0x33BDD8C
	0x01E3BBF8 CBZ X20, 0x1E3BC18
	0x01E3BBFC AND W8, W21, 0x1
	0x01E3BC00 STR X20, [X19 + 0x18]
	0x01E3BC04 STRB W8, [X19 + 0x20]
	0x01E3BC08 LDP X20, X19, [X31 + 0x20]
	0x01E3BC0C LDP X22, X21, [X31 + 0x10]
	0x01E3BC10 LDP X30, X23, [X31], #0x30
	0x01E3BC14 RET
	0x01E3BC18 ADRP X0, 0x22BD000
	0x01E3BC1C LDR X0, [X0 + 0x528]
	0x01E3BC20 BL 0x1C16D08
	0x01E3BC24 BL 0x1C16F10
	0x01E3BC28 MOV X19, X0
	0x01E3BC2C ADRP X0, 0x22C0000
	0x01E3BC30 LDR X0, [X0 + 0x960]
	0x01E3BC34 BL 0x1C16D08
	0x01E3BC38 MOV X1, X0
	0x01E3BC3C MOV X0, X19
	0x01E3BC40 MOV X2, X31
	0x01E3BC44 BL 0x330E100
	0x01E3BC48 ADRP X0, 0x22C0000
	0x01E3BC4C LDR X0, [X0 + 0x968]
	0x01E3BC50 BL 0x1C16D08
	0x01E3BC54 MOV X1, X0
	0x01E3BC58 MOV X0, X19
	0x01E3BC5C BL 0x1C16DEC
	0x01E3BC60 STP X30, X23, [X31 - 0x30]!
	0x01E3BC64 STP X22, X21, [X31 + 0x10]
	0x01E3BC68 STP X20, X19, [X31 + 0x20]
	0x01E3BC6C ADRP X23, 0x259D000
	0x01E3BC70 LDRB W8, [X23 + 0xF21]
	0x01E3BC74 MOV X19, X3
	0x01E3BC78 MOV X20, X2
	0x01E3BC7C MOV W21, W1
	0x01E3BC80 MOV X22, X0
	0x01E3BC84 TBNZ X8, 0x0, 0x1E3BC9C
	0x01E3BC88 ADRP X0, 0x22C0000
	0x01E3BC8C LDR X0, [X0 + 0x958]
	0x01E3BC90 BL 0x1C16CF4
	0x01E3BC94 MOVZ W8, 0x1
	0x01E3BC98 STRB W8, [X23 + 0xF21]
	0x01E3BC9C ADRP X23, 0x22C0000
	0x01E3BCA0 LDR X23, [X23 + 0x958]
	0x01E3BCA4 AND W8, W21, 0xFF
	0x01E3BCA8 SUB W9, W8, 0x2
	0x01E3BCAC CMP W9, 0x3
	0x01E3BCB0 B.CS 0x1E3BCCC
	0x01E3BCB4 LDR X0, [X23]
	0x01E3BCB8 LDR W8, [X0 + 0xE0]
	0x01E3BCBC CBNZ W8, 0x1E3BCC4
	0x01E3BCC0 BL 0x1C16DFC
	0x01E3BCC4 MOVZ W0, 0x7
	0x01E3BCC8 B 0x1E3BD04
	0x01E3BCCC CBZ W8, 0x1E3BCF0
	0x01E3BCD0 CMP W8, 0x1
	0x01E3BCD4 B.NE 0x1E3BD0C
	0x01E3BCD8 LDR X0, [X23]
	0x01E3BCDC LDR W8, [X0 + 0xE0]
	0x01E3BCE0 CBNZ W8, 0x1E3BCE8
	0x01E3BCE4 BL 0x1C16DFC
	0x01E3BCE8 MOVZ W0, 0xE
	0x01E3BCEC B 0x1E3BD04
	0x01E3BCF0 LDR X0, [X23]
	0x01E3BCF4 LDR W8, [X0 + 0xE0]
	0x01E3BCF8 CBNZ W8, 0x1E3BD00
	0x01E3BCFC BL 0x1C16DFC
	0x01E3BD00 MOVZ W0, 0xC
	0x01E3BD04 MOV X1, X31
	0x01E3BD08 BL 0x33C34C4
	0x01E3BD0C MOV X0, X22
	0x01E3BD10 MOV W1, W21
	0x01E3BD14 MOV X2, X20
	0x01E3BD18 MOV X3, X19
	0x01E3BD1C BL 0x1E3BDBC
	0x01E3BD20 MOV X19, X31
	0x01E3BD24 LDR X0, [X23]
	0x01E3BD28 LDR W8, [X0 + 0xE0]
	0x01E3BD2C CBNZ W8, 0x1E3BD34
	0x01E3BD30 BL 0x1C16DFC
	0x01E3BD34 MOVZ W0, 0x7
	0x01E3BD38 MOV X1, X31
	0x01E3BD3C BL 0x33C34C4
	0x01E3BD40 CBNZ X19, 0x1E3BD54
	0x01E3BD44 LDP X20, X19, [X31 + 0x20]
	0x01E3BD48 LDP X22, X21, [X31 + 0x10]
	0x01E3BD4C LDP X30, X23, [X31], #0x30
	0x01E3BD50 RET
	0x01E3BD54 MOV X0, X19
	0x01E3BD58 BL 0x1C16F18
	0x01E3BD5C CMP W1, 0x1
	0x01E3BD60 MOV X20, X0
	0x01E3BD64 B.NE 0x1E3BD7C
	0x01E3BD68 MOV X0, X20
	0x01E3BD6C BL 0x3EB1AD0
	0x01E3BD70 LDR X19, [X0]
	0x01E3BD74 BL 0x3EB1AE0
	0x01E3BD78 B 0x1E3BD24
	0x01E3BD7C MOV X19, X31
	0x01E3BD80 B 0x1E3BD88
	0x01E3BD84 MOV X20, X0
	0x01E3BD88 LDR X0, [X23]
	0x01E3BD8C LDR W8, [X0 + 0xE0]
	0x01E3BD90 CBNZ W8, 0x1E3BD98
	0x01E3BD94 BL 0x1C16DFC
	0x01E3BD98 MOVZ W0, 0x7
	0x01E3BD9C MOV X1, X31
	0x01E3BDA0 BL 0x33C34C4
	0x01E3BDA4 CBNZ X19, 0x1E3BDB0
	0x01E3BDA8 MOV X0, X20
	0x01E3BDAC BL 0x1D2C690
	0x01E3BDB0 MOV X0, X19
	0x01E3BDB4 BL 0x1C16F18
	0x01E3BDB8 BL 0x1990590
	0x01E3BDBC STP X30, X23, [X31 - 0x30]!
	0x01E3BDC0 STP X22, X21, [X31 + 0x10]
	0x01E3BDC4 STP X20, X19, [X31 + 0x20]
	0x01E3BDC8 ADRP X23, 0x259D000
	0x01E3BDCC LDRB W8, [X23 + 0xFA6]
	0x01E3BDD0 MOV X21, X3
	0x01E3BDD4 MOV X20, X2
	0x01E3BDD8 MOV W22, W1
	0x01E3BDDC MOV X19, X0
	0x01E3BDE0 TBNZ X8, 0x0, 0x1E3BE10
	0x01E3BDE4 ADRP X0, 0x22BC000
	0x01E3BDE8 LDR X0, [X0 + 0x928]
	0x01E3BDEC BL 0x1C16CF4
	0x01E3BDF0 ADRP X0, 0x22C0000
	0x01E3BDF4 LDR X0, [X0 + 0x970]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x259E000
	007 Move W8, [X20+3852]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x22C1000
	014 Move X0, [X0+2240]
	015 Call 0x1C17CF4
	016 Move X0, 0x22BC000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move X0, 0x22C1000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3852], W8
	024 Move [X31+8], X31
	025 Move X22, 0x22BC000
	026 Move W8, [X19]
	027 Move X22, [X22+640]
	028 Compare W8, 0
	029 JumpIfEqual {78}
	030 Move X20, [X19+32]
	031 Compare X20, 0
	032 JumpIfEqual {106}
	033 Move X8, 0x22C1000
	034 Move X8, [X8+2008]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Add X0, X20, 16
	041 Move X1, X31
	042 Call CancellationToken.ThrowIfCancellationRequested, X0
	043 Move X8, [X20+24]
	044 Compare X8, 0
	045 JumpIfEqual {107}
	046 Move X1, [X20+16]
	047 Move X0, [X8+64]
	048 Move X9, [X8+24]
	049 Move X2, [X8+40]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Compare X0, 0
	052 JumpIfEqual {108}
	053 Move X1, X31
	054 Call Task.GetAwaiter, X0
	055 Move [X31+8], X0
	056 Add X0, X31, 8
	057 Move X1, X31
	058 Call TaskAwaiter.get_IsCompleted, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {85}
	063 Move [X19], W31
	064 Move X8, [X31+8]
	065 Move [X19+40], X8
	066 Move X0, [X22]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X8, 0x22C1000
	072 Move X8, [X8+2240]
	073 Add X0, X19, 8
	074 Move X3, [X8]
	075 Add X1, X31, 8
	076 Move X2, X19
	077 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	078 Move X8, [X19+40]
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W9, TEMP
	082 Move [X31+8], X8
	083 Move [X19+40], X31
	084 Move [X19], W9
	085 Add X0, X31, 8
	086 Move X1, X31
	087 Call TaskAwaiter.GetResult, X0
	088 Move TEMP, 1
	089 Not TEMP
	090 Move W8, TEMP
	091 Move [X19+8], W8
	092 Move X0, [X22]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X19
	098 Move X1, X31
	099 Call AsyncTaskMethodBuilder.SetResult, X0
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Return 
	106 Call 0x1C17F20
	107 Call 0x1C17F20
	108 Call 0x1C17F20
	109 Move X20, X0
	110 Move X20, X0
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, X20
	113 Call 0x3EB2AD0
	114 Move X20, X0
	115 Move X0, 0x22C1000
	116 Move X0, [X0+2216]
	117 Call 0x1C17D08
	118 Move X8, [X20]
	119 Move X1, [X8]
	120 Call 0x1C18270
	121 Move W21, W0
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {136}
	126 Move X0, 0x22B9000
	127 Move X0, [X0+2000]
	128 Call 0x1C17D08
	129 Move X8, [X20]
	130 Move X1, [X8]
	131 Call 0x1C18270
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {144}
	136 Move X20, [X20]
	137 Call 0x3EB2AE0
	138 Move TEMP, X21
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {88}
	142 Move X0, X20
	143 Call 0x1C17F18
	144 Move W0, 8
	145 Call 0x3EB2AF0
	146 Move X8, [X20]
	147 Move [X0], X8
	148 Move X1, 0x207A000
	149 Add X1, X1, 3672
	150 Move X2, X31
	151 Call 0x3EB2B00
	152 Move X20, X0
	153 Move X21, X1
	154 Move X20, X0
	155 Call 0x3EB2AE0
	156 Move W1, W21
	157 Move W8, 1
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X0, X20
	160 Call 0x3EB2AD0
	161 Move X20, X0
	162 Move X0, 0x22B9000
	163 Move X0, [X0+2000]
	164 Call 0x1C17D08
	165 Move X8, [X20]
	166 Move X1, [X8]
	167 Call 0x1C18270
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {189}
	172 Move X20, [X20]
	173 Call 0x3EB2AE0
	174 Move TEMP, 1
	175 Not TEMP
	176 Move W8, TEMP
	177 Move [X19+8], W8
	178 Move X0, 0x22BC000
	179 Move X0, [X0+640]
	180 Call 0x1C17D08
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X19
	186 Move X1, X20
	187 Move X2, X31
	188 Call AsyncTaskMethodBuilder.SetException, X0, X1
	189 Move W0, 8
	190 Call 0x3EB2AF0
	191 Move X8, [X20]
	192 Move [X0], X8
	193 Move X1, 0x207A000
	194 Add X1, X1, 3672
	195 Move X2, X31
	196 Call 0x3EB2B00
	197 Move X20, X0
	198 Call 0x3EB2AE0
	199 Move X0, X20
	200 Call 0x1D2D690
	201 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01E3BDF8 BL 0x1C16CF4
	0x01E3BDFC ADRP X0, 0x22C0000
	0x01E3BE00 LDR X0, [X0 + 0x978]
	0x01E3BE04 BL 0x1C16CF4
	0x01E3BE08 MOVZ W8, 0x1
	0x01E3BE0C STRB W8, [X23 + 0xFA6]
	0x01E3BE10 AND W8, W22, 0xFF
	0x01E3BE14 CMP W8, 0x4
	0x01E3BE18 B.EQ 0x1E3BE44
	0x01E3BE1C CMP W8, 0x3
	0x01E3BE20 B.NE 0x1E3BE60
	0x01E3BE24 LDR X0, [X19 + 0x10]
	0x01E3BE28 CBZ X0, 0x1E3BF30
	0x01E3BE2C ADRP X8, 0x22C0000
	0x01E3BE30 LDR X8, [X8 + 0x970]
	0x01E3BE34 LDR X1, [X8]
	0x01E3BE38 MOV X2, X31
	0x01E3BE3C BL 0x32333E0
	0x01E3BE40 B 0x1E3BE60
	0x01E3BE44 LDR X0, [X19 + 0x10]
	0x01E3BE48 CBZ X0, 0x1E3BF34
	0x01E3BE4C ADRP X8, 0x22C0000
	0x01E3BE50 LDR X8, [X8 + 0x978]
	0x01E3BE54 LDR X1, [X8]
	0x01E3BE58 MOV X2, X31
	0x01E3BE5C BL 0x32333E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x259E000
	007 Move X22, 0x22BC000
	008 Move W8, [X21+3853]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22BC000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3853], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

