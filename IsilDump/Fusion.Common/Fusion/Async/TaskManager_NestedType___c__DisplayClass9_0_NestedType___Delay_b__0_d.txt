Type: Fusion.Async.TaskManager/<>c__DisplayClass9_0/<<Delay>b__0>d

Method: System.Void MoveNext()

Disassembly:
	0x01E3C328 STRB W8, [X23 + 0xF24]
	0x01E3C32C LDR X0, [X22]
	0x01E3C330 AND W8, W19, 0xFF00
	0x01E3C334 BFM W8, W19, 0x10, 0x7
	0x01E3C338 BFM W8, W19, 0x10, 0x17
	0x01E3C33C ADD X1, X31, 0xC
	0x01E3C340 STR W8, [X31 + 0xC]
	0x01E3C344 BL 0x1C16E04
	0x01E3C348 LDR X8, [X21]
	0x01E3C34C MOV X1, X0
	0x01E3C350 MOV X2, X31
	0x01E3C354 MOV X0, X8
	0x01E3C358 BL 0x321EFD0
	0x01E3C35C LDR X8, [X20]
	0x01E3C360 MOV X19, X0
	0x01E3C364 LDR W9, [X8 + 0xE0]
	0x01E3C368 CBNZ W9, 0x1E3C378
	0x01E3C36C MOV X0, X8
	0x01E3C370 BL 0x1C16DFC
	0x01E3C374 LDR X8, [X20]
	0x01E3C378 LDR X8, [X8 + 0xB8]
	0x01E3C37C LDP X22, X21, [X31 + 0x20]
	0x01E3C380 LDP X30, X23, [X31 + 0x10]
	0x01E3C384 STR X19, [X8]
	0x01E3C388 LDP X20, X19, [X31 + 0x30]
	0x01E3C38C ADD X31, X31, 0x40
	0x01E3C390 RET
	0x01E3C394 STP X30, X21, [X31 - 0x20]!
	0x01E3C398 STP X20, X19, [X31 + 0x10]
	0x01E3C39C ADRP X20, 0x259C000
	0x01E3C3A0 ADRP X19, 0x22B7000
	0x01E3C3A4 LDRB W8, [X20 + 0xF25]
	0x01E3C3A8 LDR X19, [X19 + 0x970]
	0x01E3C3AC TBNZ X8, 0x0, 0x1E3C40C
	0x01E3C3B0 ADRP X0, 0x22B7000
	0x01E3C3B4 LDR X0, [X0 + 0x970]
	0x01E3C3B8 BL 0x1C16CF4
	0x01E3C3BC ADRP X0, 0x22B7000
	0x01E3C3C0 LDR X0, [X0 + 0xB58]
	0x01E3C3C4 BL 0x1C16CF4
	0x01E3C3C8 ADRP X0, 0x22BF000
	0x01E3C3CC LDR X0, [X0 + 0x990]
	0x01E3C3D0 BL 0x1C16CF4
	0x01E3C3D4 ADRP X0, 0x22BF000
	0x01E3C3D8 LDR X0, [X0 + 0x5C8]
	0x01E3C3DC BL 0x1C16CF4
	0x01E3C3E0 ADRP X0, 0x22B7000
	0x01E3C3E4 LDR X0, [X0 + 0x6C0]
	0x01E3C3E8 BL 0x1C16CF4
	0x01E3C3EC ADRP X0, 0x22BF000
	0x01E3C3F0 LDR X0, [X0 + 0x998]
	0x01E3C3F4 BL 0x1C16CF4
	0x01E3C3F8 ADRP X0, 0x22BF000
	0x01E3C3FC LDR X0, [X0 + 0x9A0]
	0x01E3C400 BL 0x1C16CF4
	0x01E3C404 MOVZ W8, 0x1
	0x01E3C408 STRB W8, [X20 + 0xF25]
	0x01E3C40C MOVZ W0, 0xAC73
	0x01E3C410 MOVK W0, 0xFFE50000
	0x01E3C414 BL 0x1E3C2C8
	0x01E3C418 LDR X0, [X19]
	0x01E3C41C LDR W8, [X0 + 0xE0]
	0x01E3C420 CBNZ W8, 0x1E3C428
	0x01E3C424 BL 0x1C16DFC
	0x01E3C428 MOV X0, X31
	0x01E3C42C BL 0x3C03278
	0x01E3C430 TBZ X0, 0x0, 0x1E3C4F8
	0x01E3C434 ADRP X8, 0x22B7000
	0x01E3C438 LDR X8, [X8 + 0x6C0]
	0x01E3C43C ADRP X21, 0x22BF000
	0x01E3C440 ADRP X20, 0x22BF000
	0x01E3C444 LDR X0, [X8]
	0x01E3C448 ADRP X8, 0x22BF000
	0x01E3C44C LDR X8, [X8 + 0x9A0]
	0x01E3C450 LDR W9, [X0 + 0xE0]
	0x01E3C454 LDR X19, [X8]
	0x01E3C458 LDR X21, [X21 + 0x5C8]
	0x01E3C45C LDR X20, [X20 + 0x990]
	0x01E3C460 CBNZ W9, 0x1E3C468
	0x01E3C464 BL 0x1C16DFC
	0x01E3C468 LDR X2, [X21]
	0x01E3C46C LDR X3, [X20]
	0x01E3C470 MOVZ W1, 0x1
	0x01E3C474 MOV X0, X19
	0x01E3C478 BL 0x1C170BC
	0x01E3C47C CBZ X0, 0x1E3C518
	0x01E3C480 ADRP X8, 0x22BF000
	0x01E3C484 LDR X8, [X8 + 0x998]
	0x01E3C488 MOVZ W2, 0x18
	0x01E3C48C MOV X3, X31
	0x01E3C490 LDR X1, [X8]
	0x01E3C494 BL 0x3397828
	0x01E3C498 MOV X1, X31
	0x01E3C49C MOV X2, X31
	0x01E3C4A0 MOV X20, X0
	0x01E3C4A4 BL 0x32CE31C
	0x01E3C4A8 ANDS W31, W0, 0x1
	0x01E3C4AC MOV W8, W0
	0x01E3C4B0 CSEL X0, X31, X20, NE
	0x01E3C4B4 TBNZ X8, 0x0, 0x1E3C51C
	0x01E3C4B8 CBZ X0, 0x1E3C518
	0x01E3C4BC MOV X1, X31
	0x01E3C4C0 MOV X2, X31
	0x01E3C4C4 BL 0x32CFB70
	0x01E3C4C8 CBZ X0, 0x1E3C518
	0x01E3C4CC ADRP X8, 0x22B7000
	0x01E3C4D0 LDR X8, [X8 + 0xB58]
	0x01E3C4D4 LDR X9, [X0]
	0x01E3C4D8 LDR X1, [X8]
	0x01E3C4DC LDR X8, [X9 + 0x40]
	0x01E3C4E0 LDR X9, [X1 + 0x40]
	0x01E3C4E4 CMP X8, X9
	0x01E3C4E8 B.NE 0x1E3C588
	0x01E3C4EC BL 0x1C16E08
	0x01E3C4F0 LDRB W8, [X0]
	0x01E3C4F4 CBZ W8, 0x1E3C504
	0x01E3C4F8 LDP X20, X19, [X31 + 0x10]
	0x01E3C4FC LDP X30, X21, [X31], #0x20
	0x01E3C500 RET
	0x01E3C504 LDP X20, X19, [X31 + 0x10]
	0x01E3C508 MOVZ W0, 0x4B12
	0x01E3C50C MOVK W0, 0xFF3C0000
	0x01E3C510 LDP X30, X21, [X31], #0x20
	0x01E3C514 B 0x1E3C2C8
	0x01E3C518 BL 0x1C16F20
	0x01E3C51C ADRP X0, 0x22BF000
	0x01E3C520 LDR X0, [X0 + 0x9A8]
	0x01E3C524 BL 0x1C16D08
	0x01E3C528 MOV X20, X0
	0x01E3C52C ADRP X0, 0x22BF000
	0x01E3C530 LDR X0, [X0 + 0x9B0]
	0x01E3C534 BL 0x1C16D08
	0x01E3C538 MOV X2, X0
	0x01E3C53C MOV X0, X20
	0x01E3C540 MOV X1, X19
	0x01E3C544 MOV X3, X31
	0x01E3C548 BL 0x32274B8
	0x01E3C54C MOV X19, X0
	0x01E3C550 ADRP X0, 0x22B7000
	0x01E3C554 LDR X0, [X0 + 0x7D0]
	0x01E3C558 BL 0x1C16D08
	0x01E3C55C BL 0x1C16F10
	0x01E3C560 MOV X1, X19
	0x01E3C564 MOV X2, X31
	0x01E3C568 MOV X20, X0
	0x01E3C56C BL 0x33B2C70
	0x01E3C570 ADRP X0, 0x22BF000
	0x01E3C574 LDR X0, [X0 + 0x990]
	0x01E3C578 BL 0x1C16D08
	0x01E3C57C MOV X1, X0
	0x01E3C580 MOV X0, X20
	0x01E3C584 BL 0x1C16DEC
	0x01E3C588 BL 0x1C171E0
	0x01E3C58C STP X30, X21, [X31 - 0x20]!
	0x01E3C590 STP X20, X19, [X31 + 0x10]
	0x01E3C594 ADRP X21, 0x259C000
	0x01E3C598 LDRB W8, [X21 + 0xF26]
	0x01E3C59C MOV X19, X1
	0x01E3C5A0 MOV W20, W0
	0x01E3C5A4 TBNZ X8, 0x0, 0x1E3C5EC
	0x01E3C5A8 ADRP X0, 0x22B7000
	0x01E3C5AC LDR X0, [X0 + 0xA28]
	0x01E3C5B0 BL 0x1C16CF4
	0x01E3C5B4 ADRP X0, 0x22BF000
	0x01E3C5B8 LDR X0, [X0 + 0x980]
	0x01E3C5BC BL 0x1C16CF4
	0x01E3C5C0 ADRP X0, 0x22BF000
	0x01E3C5C4 LDR X0, [X0 + 0x9B8]
	0x01E3C5C8 BL 0x1C16CF4
	0x01E3C5CC ADRP X0, 0x22BF000
	0x01E3C5D0 LDR X0, [X0 + 0x9C0]
	0x01E3C5D4 BL 0x1C16CF4
	0x01E3C5D8 ADRP X0, 0x22BF000
	0x01E3C5DC LDR X0, [X0 + 0x9C8]
	0x01E3C5E0 BL 0x1C16CF4
	0x01E3C5E4 MOVZ W8, 0x1
	0x01E3C5E8 STRB W8, [X21 + 0xF26]
	0x01E3C5EC TBZ X20, 0x0, 0x1E3C5FC
	0x01E3C5F0 LDP X20, X19, [X31 + 0x10]
	0x01E3C5F4 LDP X30, X21, [X31], #0x20
	0x01E3C5F8 RET
	0x01E3C5FC ADRP X20, 0x22B7000
	0x01E3C600 LDR X20, [X20 + 0xA28]
	0x01E3C604 LDR X0, [X20]
	0x01E3C608 LDR W8, [X0 + 0xE0]
	0x01E3C60C CBNZ W8, 0x1E3C614
	0x01E3C610 BL 0x1C16DFC
	0x01E3C614 ADRP X21, 0x259C000
	0x01E3C618 LDRB W8, [X21 + 0xFA8]
	0x01E3C61C CBNZ W8, 0x1E3C634
	0x01E3C620 ADRP X0, 0x22B7000
	0x01E3C624 LDR X0, [X0 + 0xA28]
	0x01E3C628 BL 0x1C16CF4
	0x01E3C62C MOVZ W8, 0x1
	0x01E3C630 STRB W8, [X21 + 0xFA8]
	0x01E3C634 LDR X0, [X20]
	0x01E3C638 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0x259D000
	008 Move W8, [X20+3858]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x22C0000
	015 Move X0, [X0+2272]
	016 Call 0x1C17CF4
	017 Move X0, 0x22BB000
	018 Move X0, [X0+640]
	019 Call 0x1C17CF4
	020 Move X0, 0x22C0000
	021 Move X0, [X0+2008]
	022 Call 0x1C17CF4
	023 Move X0, 0x22C0000
	024 Move X0, [X0+1800]
	025 Call 0x1C17CF4
	026 Move X0, 0x22B9000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move X0, 0x22B9000
	030 Move X0, [X0+2152]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3858], W8
	034 Move [X31+24], W31
	035 Move [X31+8], W31
	036 Move X20, 0x22C0000
	037 Move X21, 0x22B9000
	038 Move W8, [X19]
	039 Move X20, [X20+1800]
	040 Move X21, [X21+2152]
	041 Compare W8, 0
	042 JumpIfEqual {66}
	043 Move X0, [X20]
	044 Move X22, [X19+32]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X31
	050 Call Stopwatch.GetTimestamp
	051 Compare X22, 0
	052 JumpIfEqual {73}
	053 Move X8, [X20]
	054 Move V0, [X22+16]
	055 Move W9, 0x447A0000
	056 Move S2, W9
	057 Move X8, [X8+184]
	058 NotImplemented "Instruction SCVTF not yet implemented."
	059 NotImplemented "Instruction FDIV not yet implemented."
	060 NotImplemented "Instruction SCVTF not yet implemented."
	061 Move X8, [X8]
	062 NotImplemented "Instruction SCVTF not yet implemented."
	063 Multiply S0, S0, S3
	064 Add S0, S0, S1
	065 Move [X19+48], S0
	066 Move W8, [X19+52]
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W9, TEMP
	070 Move [X31+24], W8
	071 Move [X19+52], W31
	072 Move [X19], W9
	073 Call 0x1C17F20
	074 Move X8, 0x22B9000
	075 Move X8, [X8+1976]
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X31
	082 Call Task.Yield
	083 Move [X31+8], W0
	084 Add X0, X31, 8
	085 Move X1, X31
	086 Call YieldAwaitable.GetAwaiter, X0
	087 Move X8, X0
	088 Move X0, [X21]
	089 Move [X31+24], W8
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Add X0, X31, 24
	095 Move X1, X31
	096 Call YieldAwaiter.get_IsCompleted, X0
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {148}
	101 Move X0, [X21]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Add X0, X31, 24
	107 Move X1, X31
	108 Call YieldAwaiter.GetResult, X0
	109 Move X8, 0x22C0000
	110 Move X8, [X8+2008]
	111 Move X0, [X8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Add X0, X19, 40
	117 Move X1, X31
	118 Call CancellationToken.get_IsCancellationRequested, X0
	119 Move X22, 0x22BB000
	120 Move X22, [X22+640]
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {136}
	125 Move X0, [X20]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X31
	131 Call Stopwatch.GetTimestamp
	132 Move V0, [X19+48]
	133 NotImplemented "Instruction SCVTF not yet implemented."
	134 Subtract S0, S1, S0
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 Move TEMP, 1
	137 Not TEMP
	138 Move W8, TEMP
	139 Move [X19+8], W8
	140 Move X0, [X22]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X0, X19
	146 Move X1, X31
	147 Call AsyncTaskMethodBuilder.SetResult, X0
	148 Move [X19], W31
	149 Move W8, [X31+24]
	150 Move [X19+52], W8
	151 Move X0, [X22]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X8, 0x22C0000
	157 Move X8, [X8+2272]
	158 Add X0, X19, 8
	159 Move X3, [X8]
	160 Add X1, X31, 24
	161 Move X2, X19
	162 Call AsyncTaskMethodBuilder.AwaitUnsafeOnCompleted, X0, X1, X2
	163 Move X20, [X31+48]
	164 Move X19, [X31+56]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X30, [X31+16]
	168 Add X31, X31, 64
	169 Return 
	170 Move X20, X0
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X0, X20
	173 Call 0x3EB2AD0
	174 Move X20, X0
	175 Move X0, 0x22B8000
	176 Move X0, [X0+2000]
	177 Call 0x1C17D08
	178 Move X8, [X20]
	179 Move X1, [X8]
	180 Call 0x1C18270
	181 Move TEMP, X0
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfNotEqual {202}
	185 Move X20, [X20]
	186 Call 0x3EB2AE0
	187 Move TEMP, 1
	188 Not TEMP
	189 Move W8, TEMP
	190 Move [X19+8], W8
	191 Move X0, 0x22BB000
	192 Move X0, [X0+640]
	193 Call 0x1C17D08
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Move X0, X19
	199 Move X1, X20
	200 Move X2, X31
	201 Call AsyncTaskMethodBuilder.SetException, X0, X1
	202 Move W0, 8
	203 Call 0x3EB2AF0
	204 Move X8, [X20]
	205 Move [X0], X8
	206 Move X1, 0x2079000
	207 Add X1, X1, 3672
	208 Move X2, X31
	209 Call 0x3EB2B00
	210 Move X20, X0
	211 Call 0x3EB2AE0
	212 Move X0, X20
	213 Call 0x1D2D690
	214 Call 0x1991590

Method: System.Void SetStateMachine(System.Runtime.CompilerServices.IAsyncStateMachine stateMachine)

Disassembly:
	0x01E3C63C CBNZ W8, 0x1E3C648
	0x01E3C640 BL 0x1C16DFC
	0x01E3C644 LDR X0, [X20]
	0x01E3C648 ADRP X21, 0x22BF000
	0x01E3C64C LDR X21, [X21 + 0x980]
	0x01E3C650 LDR X9, [X0 + 0xB8]
	0x01E3C654 LDR X8, [X21]
	0x01E3C658 LDR X20, [X9 + 0x8]
	0x01E3C65C LDR W10, [X8 + 0xE0]
	0x01E3C660 CBNZ W10, 0x1E3C670
	0x01E3C664 MOV X0, X8
	0x01E3C668 BL 0x1C16DFC
	0x01E3C66C LDR X8, [X21]
	0x01E3C670 ADRP X9, 0x22BF000
	0x01E3C674 ADRP X10, 0x22BF000
	0x01E3C678 LDR X8, [X8 + 0xB8]
	0x01E3C67C LDR X9, [X9 + 0x9C8]
	0x01E3C680 LDR X10, [X10 + 0x9C0]
	0x01E3C684 MOV X3, X19
	0x01E3C688 LDR X1, [X8]
	0x01E3C68C LDR X0, [X9]
	0x01E3C690 LDR X2, [X10]
	0x01E3C694 MOV X4, X31
	0x01E3C698 BL 0x32277C4
	0x01E3C69C CBZ X20, 0x1E3C718
	0x01E3C6A0 ADRP X10, 0x22BF000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x259D000
	007 Move X22, 0x22BB000
	008 Move W8, [X21+3859]
	009 Move X22, [X22+640]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22BB000
	017 Move X0, [X0+640]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3859], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X20, 8
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call AsyncTaskMethodBuilder.SetStateMachine, X0, X1
	035 Return 

