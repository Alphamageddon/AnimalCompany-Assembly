Type: Fusion.Async.AsyncOperationHandler`1

Method: System.Threading.Tasks.Task`1<T> get_Task()

Disassembly:
	0x024DAC5C LDR X0, [X19 + 0x20]
	0x024DAC60 LDRB W8, [X0 + 0x135]
	0x024DAC64 TBNZ X8, 0x0, 0x24DAC6C
	0x024DAC68 BL 0x1C5C684
	0x024DAC6C LDR X8, [X0 + 0xC0]
	0x024DAC70 LDR X0, [X8 + 0x10]
	0x024DAC74 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+16]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void .ctor(System.Threading.CancellationToken externalCancellationToken = null, System.Single operationTimeout = 30, System.String customTimeoutMsg = null)

Disassembly:
	0x024DAC78 TBNZ X8, 0x0, 0x24DAC80
	0x024DAC7C BL 0x1C5C684
	0x024DAC80 LDR W8, [X0 + 0xE0]
	0x024DAC84 CBNZ W8, 0x24DAC8C
	0x024DAC88 BL 0x1C16DFC
	0x024DAC8C LDR X0, [X19 + 0x20]
	0x024DAC90 LDRB W8, [X0 + 0x135]
	0x024DAC94 TBNZ X8, 0x0, 0x24DAC9C
	0x024DAC98 BL 0x1C5C684
	0x024DAC9C LDR X8, [X0 + 0xC0]
	0x024DACA0 MOV X0, X21
	0x024DACA4 LDR X1, [X8 + 0x8]
	0x024DACA8 BL 0x24DA978
	0x024DACAC LDR X9, [X20]
	0x024DACB0 LDR X8, [X22]
	0x024DACB4 LDRB W11, [X9 + 0x130]
	0x024DACB8 LDRB W10, [X8 + 0x130]
	0x024DACBC CMP W11, W10
	0x024DACC0 B.CC 0x24DACD8
	0x024DACC4 LDR X9, [X9 + 0xC8]
	0x024DACC8 ADD X9, X9, X10, 0x3, LSL
	0x024DACCC LDUR X9, [X9 - 0x8]
	0x024DACD0 CMP X9, X8
	0x024DACD4 B.EQ 0x24DACFC
	0x024DACD8 CBZ X0, 0x24DAD90
	0x024DACDC MOV X1, X20
	0x024DACE0 MOV X2, X31
	0x024DACE4 BL 0x33EE46C
	0x024DACE8 TBZ X0, 0x0, 0x24DAD14
	0x024DACEC LDP X20, X19, [X31 + 0x20]
	0x024DACF0 LDP X22, X21, [X31 + 0x10]
	0x024DACF4 LDR X30, [X31], #0x30
	0x024DACF8 RET
	0x024DACFC CBZ X0, 0x24DAD90
	0x024DAD00 LDR X1, [X20 + 0x90]
	0x024DAD04 MOV X2, X20
	0x024DAD08 MOV X3, X31
	0x024DAD0C BL 0x33EDA6C
	0x024DAD10 TBNZ X0, 0x0, 0x24DACEC
	0x024DAD14 ADRP X0, 0x1C42000
	0x024DAD18 LDR X0, [X0 + 0xF08]
	0x024DAD1C BL 0x1C16D08
	0x024DAD20 MOV X1, X31
	0x024DAD24 BL 0x33BDD84
	0x024DAD28 MOV X20, X0
	0x024DAD2C ADRP X0, 0x1C19000
	0x024DAD30 LDR X0, [X0 + 0x5B0]
	0x024DAD34 BL 0x1C16D08
	0x024DAD38 BL 0x1C16F10
	0x024DAD3C MOV X1, X20
	0x024DAD40 MOV X2, X31
	0x024DAD44 MOV X21, X0
	0x024DAD48 BL 0x337DF1C
	0x024DAD4C MOV X0, X21
	0x024DAD50 B 0x24DAD88
	0x024DAD54 ADRP X0, 0x1C1E000
	0x024DAD58 LDR X0, [X0 + 0x528]
	0x024DAD5C BL 0x1C16D08
	0x024DAD60 BL 0x1C16F10
	0x024DAD64 MOV X20, X0
	0x024DAD68 ADRP X0, 0x1C42000
	0x024DAD6C LDR X0, [X0 + 0x778]
	0x024DAD70 BL 0x1C16D08
	0x024DAD74 MOV X1, X0
	0x024DAD78 MOV X0, X20
	0x024DAD7C MOV X2, X31
	0x024DAD80 BL 0x330E100
	0x024DAD84 MOV X0, X20
	0x024DAD88 MOV X1, X19
	0x024DAD8C BL 0x1C16DEC
	0x024DAD90 BL 0x1C16F20
	0x024DAD94 STP X30, X21, [X31 - 0x20]!
	0x024DAD98 STP X20, X19, [X31 + 0x10]
	0x024DAD9C ADRP X21, 0x1EFF000
	0x024DADA0 LDRB W8, [X21 + 0xBFC]
	0x024DADA4 MOV X19, X1
	0x024DADA8 MOV X20, X0
	0x024DADAC TBNZ X8, 0x0, 0x24DAEF0
	0x024DADB0 ADRP X0, 0x1C42000
	0x024DADB4 LDR X0, [X0 + 0xF10]
	0x024DADB8 BL 0x1C16CF4
	0x024DADBC ADRP X0, 0x1C42000
	0x024DADC0 LDR X0, [X0 + 0x248]
	0x024DADC4 BL 0x1C16CF4
	0x024DADC8 ADRP X0, 0x1C19000
	0x024DADCC LDR X0, [X0 + 0xB58]
	0x024DADD0 BL 0x1C16CF4
	0x024DADD4 ADRP X0, 0x1C40000
	0x024DADD8 LDR X0, [X0 + 0xD68]
	0x024DADDC BL 0x1C16CF4
	0x024DADE0 ADRP X0, 0x1C1A000
	0x024DADE4 LDR X0, [X0 + 0x9D8]
	0x024DADE8 BL 0x1C16CF4
	0x024DADEC ADRP X0, 0x1C40000
	0x024DADF0 LDR X0, [X0 + 0xD70]
	0x024DADF4 BL 0x1C16CF4
	0x024DADF8 ADRP X0, 0x1C1B000
	0x024DADFC LDR X0, [X0 + 0x170]
	0x024DAE00 BL 0x1C16CF4
	0x024DAE04 ADRP X0, 0x1C40000
	0x024DAE08 LDR X0, [X0 + 0xD78]
	0x024DAE0C BL 0x1C16CF4
	0x024DAE10 ADRP X0, 0x1C1D000
	0x024DAE14 LDR X0, [X0 + 0x628]
	0x024DAE18 BL 0x1C16CF4
	0x024DAE1C ADRP X0, 0x1C40000
	0x024DAE20 LDR X0, [X0 + 0xD80]
	0x024DAE24 BL 0x1C16CF4
	0x024DAE28 ADRP X0, 0x1C19000
	0x024DAE2C LDR X0, [X0 + 0x758]
	0x024DAE30 BL 0x1C16CF4
	0x024DAE34 ADRP X0, 0x1C40000
	0x024DAE38 LDR X0, [X0 + 0xD88]
	0x024DAE3C BL 0x1C16CF4
	0x024DAE40 ADRP X0, 0x1C1B000
	0x024DAE44 LDR X0, [X0 + 0xA60]
	0x024DAE48 BL 0x1C16CF4
	0x024DAE4C ADRP X0, 0x1C42000
	0x024DAE50 LDR X0, [X0 + 0xF18]
	0x024DAE54 BL 0x1C16CF4
	0x024DAE58 ADRP X0, 0x1C42000
	0x024DAE5C LDR X0, [X0 + 0xF20]
	0x024DAE60 BL 0x1C16CF4
	0x024DAE64 ADRP X0, 0x1C40000
	0x024DAE68 LDR X0, [X0 + 0xD90]
	0x024DAE6C BL 0x1C16CF4
	0x024DAE70 ADRP X0, 0x1C42000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], D8
	003 Move [X31+48], X30
	004 Move [X31+56], X25
	005 Move [X31+64], X24
	006 Move [X31+72], X23
	007 Move [X31+80], X22
	008 Move [X31+88], X21
	009 Move [X31+96], X20
	010 Move [X31+104], X19
	011 Move X23, 0x1F00000
	012 Move W8, [X23+3057]
	013 Move X20, X3
	014 Move X22, X2
	015 Move V8, V0
	016 Move X21, X1
	017 Move X19, X0
	018 Move [X31+40], X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x1C1B000
	024 Move X0, [X0+3696]
	025 Call 0x1C17CF4
	026 Move X0, 0x1C1C000
	027 Move X0, [X0+2640]
	028 Call 0x1C17CF4
	029 Move X0, 0x1C22000
	030 Move X0, [X0+2008]
	031 Call 0x1C17CF4
	032 Move X0, 0x1C1C000
	033 Move X0, [X0+1392]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3057], W8
	037 Move X24, 0x1C1C000
	038 Move X24, [X24+1392]
	039 Move X0, X19
	040 Move X1, X31
	041 Move [X31+24], X31
	042 Call Object..ctor, X0
	043 Move X8, [X20+32]
	044 Move X8, [X8+192]
	045 Move X0, [X8+8]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X25, 0x1C1C000
	053 Move X25, [X25+2640]
	054 Call 0x1C17F10
	055 Move X8, [X20+32]
	056 Move X23, X0
	057 Move X8, [X8+192]
	058 Move X1, [X8+32]
	059 Call TaskCompletionSource`1<Int32Enum>..ctor, X0
	060 Move [X19+16], X23
	061 Move [X19+32], X22
	062 Move X0, [X24]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 NotImplemented "Instruction FCVT not yet implemented."
	068 Move X0, X31
	069 Call TimeSpan.FromSeconds, V0
	070 Move X8, [X25]
	071 Move X23, X0
	072 Move X0, X8
	073 Call 0x1C17F10
	074 Move X1, X23
	075 Move X2, X31
	076 Move X22, X0
	077 Call CancellationTokenSource..ctor, X0, X1
	078 Move [X19+24], X22
	079 Compare X22, 0
	080 JumpIfEqual {148}
	081 Move X24, 0x1C1B000
	082 Move X23, 0x1C22000
	083 Move X24, [X24+3696]
	084 Move X23, [X23+2008]
	085 Move X0, X22
	086 Move X1, X31
	087 Call CancellationTokenSource.get_Token, X0
	088 Move X8, [X24]
	089 Move [X31+24], X0
	090 Move X0, X8
	091 Call 0x1C17F10
	092 Move X8, [X20+32]
	093 Move X1, X19
	094 Move X3, X31
	095 Move X22, X0
	096 Move X8, [X8+192]
	097 Move X2, [X8+40]
	098 Call Action..ctor, X0, X1, X2
	099 Move X0, [X23]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Add X8, X31, 0
	105 Add X0, X31, 24
	106 Move X1, X22
	107 Move X2, X31
	108 Call CancellationToken.Register, X0, X1
	109 Move X0, X21
	110 Move X1, X31
	111 Move X2, X31
	112 Move [X31+24], X31
	113 Call CancellationToken.op_Inequality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {137}
	118 Move X0, [X24]
	119 Call 0x1C17F10
	120 Move X8, [X20+32]
	121 Move X1, X19
	122 Move X3, X31
	123 Move X20, X0
	124 Move X8, [X8+192]
	125 Move X2, [X8+48]
	126 Call Action..ctor, X0, X1, X2
	127 Move X0, [X23]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Add X8, X31, 0
	133 Add X0, X31, 40
	134 Move X1, X20
	135 Move X2, X31
	136 Call CancellationToken.Register, X0, X1
	137 Move X20, [X31+96]
	138 Move X19, [X31+104]
	139 Move X22, [X31+80]
	140 Move X21, [X31+88]
	141 Move X24, [X31+64]
	142 Move X23, [X31+72]
	143 Move X30, [X31+48]
	144 Move X25, [X31+56]
	145 Move V8, [X31+32]
	146 Add X31, X31, 112
	147 Return 
	148 Call 0x1C17F20

Method: System.Void SetResult(T result)

Disassembly:
	0x024DAE74 LDR X0, [X0 + 0x6B0]
	0x024DAE78 BL 0x1C16CF4
	0x024DAE7C ADRP X0, 0x1C19000
	0x024DAE80 LDR X0, [X0 + 0x6C0]
	0x024DAE84 BL 0x1C16CF4
	0x024DAE88 ADRP X0, 0x1C40000
	0x024DAE8C LDR X0, [X0 + 0xD98]
	0x024DAE90 BL 0x1C16CF4
	0x024DAE94 ADRP X0, 0x1C1E000
	0x024DAE98 LDR X0, [X0 + 0x658]
	0x024DAE9C BL 0x1C16CF4
	0x024DAEA0 ADRP X0, 0x1C40000
	0x024DAEA4 LDR X0, [X0 + 0xDA0]
	0x024DAEA8 BL 0x1C16CF4
	0x024DAEAC ADRP X0, 0x1C21000
	0x024DAEB0 LDR X0, [X0 + 0x720]
	0x024DAEB4 BL 0x1C16CF4
	0x024DAEB8 ADRP X0, 0x1C40000
	0x024DAEBC LDR X0, [X0 + 0xDA8]
	0x024DAEC0 BL 0x1C16CF4
	0x024DAEC4 ADRP X0, 0x1C1A000
	0x024DAEC8 LDR X0, [X0 + 0x758]
	0x024DAECC BL 0x1C16CF4
	0x024DAED0 ADRP X0, 0x1C42000
	0x024DAED4 LDR X0, [X0 + 0xF28]
	0x024DAED8 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {40}
	007 Move X8, [X2+32]
	008 Move X8, [X8+192]
	009 Move X2, [X8+64]
	010 Call TaskCompletionSource`1<Int32Enum>.TrySetResult, X0, X1
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {37}
	015 Move X0, [X19+24]
	016 Compare X0, 0
	017 JumpIfEqual {40}
	018 Move X1, X31
	019 Call CancellationTokenSource.get_IsCancellationRequested, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, [X19+24]
	025 Compare X0, 0
	026 JumpIfEqual {40}
	027 Move X1, X31
	028 Call CancellationTokenSource.Cancel, X0
	029 Move X0, [X19+24]
	030 Compare X0, 0
	031 JumpIfEqual {40}
	032 Move X1, X31
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 Call CancellationTokenSource.Dispose, X0
	036 Return 
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 Return 
	040 Call 0x1C17F20

Method: System.Void SetException(System.Exception e)

Disassembly:
	0x024DAEDC ADRP X0, 0x1C42000
	0x024DAEE0 LDR X0, [X0 + 0xF30]
	0x024DAEE4 BL 0x1C16CF4
	0x024DAEE8 MOVZ W8, 0x1
	0x024DAEEC STRB W8, [X21 + 0xBFC]
	0x024DAEF0 LDR X0, [X19 + 0x20]
	0x024DAEF4 ADD X8, X0, 0x135
	0x024DAEF8 LDRH W8, [X8]
	0x024DAEFC TBNZ X20, 0x0, 0x24DAF58
	0x024DAF00 TBNZ X8, 0x0, 0x24DAF08
	0x024DAF04 BL 0x1C5C684
	0x024DAF08 LDR X8, [X0 + 0xC0]
	0x024DAF0C LDR X0, [X8 + 0x10]
	0x024DAF10 LDRB W8, [X0 + 0x135]
	0x024DAF14 TBNZ X8, 0x0, 0x24DAF1C
	0x024DAF18 BL 0x1C5C684
	0x024DAF1C LDR W8, [X0 + 0xE0]
	0x024DAF20 CBNZ W8, 0x24DAF28
	0x024DAF24 BL 0x1C16DFC
	0x024DAF28 LDR X0, [X19 + 0x20]
	0x024DAF2C LDRB W8, [X0 + 0x135]
	0x024DAF30 TBNZ X8, 0x0, 0x24DAF38
	0x024DAF34 BL 0x1C5C684
	0x024DAF38 LDR X8, [X0 + 0xC0]
	0x024DAF3C LDR X0, [X8 + 0x10]
	0x024DAF40 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {40}
	007 Move X8, [X2+32]
	008 Move X8, [X8+192]
	009 Move X2, [X8+72]
	010 Call TaskCompletionSource`1<Int32Enum>.TrySetException, X0, X1
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {37}
	015 Move X0, [X19+24]
	016 Compare X0, 0
	017 JumpIfEqual {40}
	018 Move X1, X31
	019 Call CancellationTokenSource.get_IsCancellationRequested, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, [X19+24]
	025 Compare X0, 0
	026 JumpIfEqual {40}
	027 Move X1, X31
	028 Call CancellationTokenSource.Cancel, X0
	029 Move X0, [X19+24]
	030 Compare X0, 0
	031 JumpIfEqual {40}
	032 Move X1, X31
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 Call CancellationTokenSource.Dispose, X0
	036 Return 
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 Return 
	040 Call 0x1C17F20

Method: System.Void Expire()

Disassembly:
	0x024DAF44 TBNZ X8, 0x0, 0x24DAF4C
	0x024DAF48 BL 0x1C5C684
	0x024DAF4C LDR X8, [X0 + 0xB8]
	0x024DAF50 LDR X19, [X8]
	0x024DAF54 B 0x24DAFA8
	0x024DAF58 TBNZ X8, 0x0, 0x24DAF60
	0x024DAF5C BL 0x1C5C684
	0x024DAF60 LDR X8, [X0 + 0xC0]
	0x024DAF64 LDR X0, [X8 + 0x18]
	0x024DAF68 LDRB W8, [X0 + 0x135]
	0x024DAF6C TBNZ X8, 0x0, 0x24DAF74
	0x024DAF70 BL 0x1C5C684
	0x024DAF74 BL 0x1C16F10
	0x024DAF78 LDR X8, [X19 + 0x20]
	0x024DAF7C MOV X19, X0
	0x024DAF80 LDRB W9, [X8 + 0x135]
	0x024DAF84 TBNZ X9, 0x0, 0x24DAF94
	0x024DAF88 MOV X0, X8
	0x024DAF8C BL 0x1C5C684
	0x024DAF90 MOV X8, X0
	0x024DAF94 LDR X8, [X8 + 0xC0]
	0x024DAF98 MOV X0, X19
	0x024DAF9C MOV X1, X20
	0x024DAFA0 LDR X2, [X8 + 0x58]
	0x024DAFA4 BL 0x26962D0
	0x024DAFA8 MOV X0, X19
	0x024DAFAC LDP X20, X19, [X31 + 0x10]
	0x024DAFB0 LDP X30, X21, [X31], #0x20
	0x024DAFB4 RET
	0x024DAFB8 STP X30, X21, [X31 - 0x20]!
	0x024DAFBC STP X20, X19, [X31 + 0x10]
	0x024DAFC0 ADRP X20, 0x1EFF000
	0x024DAFC4 ADRP X21, 0x1C42000
	0x024DAFC8 LDRB W8, [X20 + 0xBFD]
	0x024DAFCC LDR X21, [X21 + 0xF10]
	0x024DAFD0 MOV X19, X0
	0x024DAFD4 TBNZ X8, 0x0, 0x24DAFEC
	0x024DAFD8 ADRP X0, 0x1C42000
	0x024DAFDC LDR X0, [X0 + 0xF10]
	0x024DAFE0 BL 0x1C16CF4
	0x024DAFE4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1F00000
	008 Move X22, 0x1C43000
	009 Move X21, 0x1C26000
	010 Move W8, [X23+3058]
	011 Move X22, [X22+3840]
	012 Move X21, [X21+448]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x1C26000
	020 Move X0, [X0+448]
	021 Call 0x1C17CF4
	022 Move X0, 0x1C43000
	023 Move X0, [X0+3840]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3058], W8
	027 Move X1, [X19+32]
	028 Move X0, [X22]
	029 Move X2, X31
	030 Call String.Concat, X0, X1
	031 Move X8, [X21]
	032 Move X21, X0
	033 Move X0, X8
	034 Call 0x1C17F10
	035 Move X1, X21
	036 Move X2, X31
	037 Move X22, X0
	038 Call TimeoutException..ctor, X0, X1
	039 Move X8, [X20+32]
	040 Move X0, X19
	041 Move X1, X22
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X8, [X8+192]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X2, [X8+80]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call 0x24DAEDC, X0, X1
	051 Return 

Method: System.Void Cancel()

Disassembly:
	0x024DAFE8 STRB W8, [X20 + 0xBFD]
	0x024DAFEC LDR X0, [X21]
	0x024DAFF0 LDR W8, [X0 + 0xE0]
	0x024DAFF4 CBNZ W8, 0x24DAFFC
	0x024DAFF8 BL 0x1C16DFC
	0x024DAFFC LDR X0, [X19 + 0x20]
	0x024DB000 LDRB W8, [X0 + 0x135]
	0x024DB004 TBNZ X8, 0x0, 0x24DB00C
	0x024DB008 BL 0x1C5C684
	0x024DB00C LDR X8, [X0 + 0xC0]
	0x024DB010 MOV X0, X31
	0x024DB014 LDR X1, [X8 + 0x60]
	0x024DB018 BL 0x2184B90
	0x024DB01C LDR X8, [X19 + 0x20]
	0x024DB020 MOV X20, X0
	0x024DB024 LDRB W9, [X8 + 0x135]
	0x024DB028 TBNZ X9, 0x0, 0x24DB038
	0x024DB02C MOV X0, X8
	0x024DB030 BL 0x1C5C684
	0x024DB034 MOV X8, X0
	0x024DB038 LDR X8, [X8 + 0xC0]
	0x024DB03C LDR X0, [X8 + 0x10]
	0x024DB040 LDRB W8, [X0 + 0x135]
	0x024DB044 TBNZ X8, 0x0, 0x24DB04C
	0x024DB048 BL 0x1C5C684
	0x024DB04C LDR X8, [X0 + 0xB8]
	0x024DB050 STR X20, [X8]
	0x024DB054 LDR X0, [X19 + 0x20]
	0x024DB058 LDRB W8, [X0 + 0x135]
	0x024DB05C TBNZ X8, 0x0, 0x24DB064
	0x024DB060 BL 0x1C5C684
	0x024DB064 LDR X8, [X0 + 0xC0]
	0x024DB068 LDR X0, [X8 + 0x10]
	0x024DB06C LDRB W8, [X0 + 0x135]
	0x024DB070 TBNZ X8, 0x0, 0x24DB080

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1F00000
	008 Move X23, 0x1C22000
	009 Move X21, 0x1C23000
	010 Move W8, [X22+3059]
	011 Move X23, [X23+2216]
	012 Call 0x3EB27FC
	013 Return 
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x1C21000
	021 Move X0, [X0+2216]
	022 Call 0x1C17CF4
	023 Move X0, 0x1C22000
	024 Move X0, [X0+3472]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+3059], W8
	028 Move X0, [X23]
	029 Call 0x1C17F10
	030 Move X1, [X21]
	031 Move X2, X31
	032 Move X21, X0
	033 Call OperationCanceledException..ctor, X0, X1
	034 Move X8, [X20+32]
	035 Move X0, X19
	036 Move X1, X21
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X8, [X8+192]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X2, [X8+80]
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Call 0x24DAEDC, X0, X1
	046 Return 

