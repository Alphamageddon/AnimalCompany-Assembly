Type: Fusion.Async.TaskManager/<>c__DisplayClass8_0

Method: System.Void .ctor()

Disassembly:
	0x01E3B264 ADRP X22, 0x259D000
	0x01E3B268 ADRP X21, 0x22BB000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.Tasks.Task <ContinueWhenAll>b__0(System.Threading.Tasks.Task[] tasks)

Disassembly:
	0x01E3BE60 LDR X0, [X21]
	0x01E3BE64 MOV X1, X31
	0x01E3BE68 BL 0x32277A8
	0x01E3BE6C TBNZ X0, 0x0, 0x1E3BEA0
	0x01E3BE70 LDR X0, [X19 + 0x10]
	0x01E3BE74 CBZ X0, 0x1E3BF28
	0x01E3BE78 LDR X1, [X21]
	0x01E3BE7C MOV X2, X31
	0x01E3BE80 BL 0x32333E0
	0x01E3BE84 LDR X0, [X19 + 0x10]
	0x01E3BE88 CBZ X0, 0x1E3BF2C
	0x01E3BE8C ADRP X8, 0x22BC000
	0x01E3BE90 LDR X8, [X8 + 0x928]
	0x01E3BE94 LDR X1, [X8]
	0x01E3BE98 MOV X2, X31
	0x01E3BE9C BL 0x32333E0
	0x01E3BEA0 LDR X0, [X19 + 0x10]
	0x01E3BEA4 CBZ X0, 0x1E3BF1C
	0x01E3BEA8 MOV X1, X20
	0x01E3BEAC MOV X2, X31
	0x01E3BEB0 BL 0x3233F90
	0x01E3BEB4 LDR X0, [X19 + 0x10]
	0x01E3BEB8 CBZ X0, 0x1E3BF20
	0x01E3BEBC LDR X8, [X0]
	0x01E3BEC0 LDR X20, [X19 + 0x18]
	0x01E3BEC4 LDP X9, X1, [X8 + 0x168]
	0x01E3BEC8 BLR X9
	0x01E3BECC MOV X1, X0
	0x01E3BED0 CBZ X20, 0x1E3BF24
	0x01E3BED4 LDR X8, [X20]
	0x01E3BED8 LDR X9, [X8 + 0x278]
	0x01E3BEDC LDR X2, [X8 + 0x280]
	0x01E3BEE0 MOV X0, X20
	0x01E3BEE4 BLR X9
	0x01E3BEE8 MOV X21, X31
	0x01E3BEEC LDR X0, [X19 + 0x10]
	0x01E3BEF0 CBZ X0, 0x1E3BF10
	0x01E3BEF4 MOV X1, X31
	0x01E3BEF8 BL 0x3232AC0
	0x01E3BEFC CBNZ X21, 0x1E3BF14
	0x01E3BF00 LDP X20, X19, [X31 + 0x20]
	0x01E3BF04 LDP X22, X21, [X31 + 0x10]
	0x01E3BF08 LDP X30, X23, [X31], #0x30
	0x01E3BF0C RET
	0x01E3BF10 BL 0x1C16F20
	0x01E3BF14 MOV X0, X21
	0x01E3BF18 BL 0x1C16F18
	0x01E3BF1C BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+80], X30
	003 Move [X31+88], X21
	004 Move [X31+96], X20
	005 Move [X31+104], X19
	006 Move X21, 0x259E000
	007 Move X20, 0x22BC000
	008 Move W8, [X21+3854]
	009 Move X20, [X20+640]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x22C1000
	016 Move X0, [X0+2248]
	017 Call 0x1C17CF4
	018 Move X0, 0x22BC000
	019 Move X0, [X0+640]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3854], W8
	023 Move X0, [X20]
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move [X31+48], V0
	026 Move [X31+56], V0
	027 Move [X31+2], V0
	028 Move X20, 0x22C1000
	029 Move W8, [X0+224]
	030 Move X20, [X20+2248]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Add X8, X31, 8
	035 Move X0, X31
	036 Call AsyncTaskMethodBuilder.Create
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 Move X9, [X31+24]
	039 Move X2, [X20]
	040 Add X8, X31, 32
	041 Or X20, X8, 15
	042 Move TEMP, 0
	043 Not TEMP
	044 Move W10, TEMP
	045 Add X1, X31, 32
	046 Move X0, X20
	047 Move [X31+40], V0
	048 Move [X31+56], X9
	049 Move [X31+64], X19
	050 Move [X31+32], W10
	051 Call AsyncTaskMethodBuilder.Start, X0, X1
	052 Move X0, X20
	053 Move X1, X31
	054 Call AsyncTaskMethodBuilder.get_Task, X0
	055 Move X20, [X31+96]
	056 Move X19, [X31+104]
	057 Move X30, [X31+80]
	058 Move X21, [X31+88]
	059 Add X31, X31, 112
	060 Return X0

