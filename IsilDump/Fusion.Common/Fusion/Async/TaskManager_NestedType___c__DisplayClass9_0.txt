Type: Fusion.Async.TaskManager/<>c__DisplayClass9_0

Method: System.Void .ctor()

Disassembly:
	0x01E3B3C8 BL 0x1C16DFC
	0x01E3B3CC MOV X0, X31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Threading.Tasks.Task <Delay>b__0(System.Threading.CancellationToken cancelToken)

Disassembly:
	0x01E3C254 LDR X19, [X19 + 0x980]
	0x01E3C258 MOV V8.16B, V3.16B
	0x01E3C25C MOV V9.16B, V2.16B
	0x01E3C260 MOV V10.16B, V1.16B
	0x01E3C264 MOV V11.16B, V0.16B
	0x01E3C268 TBNZ X8, 0x0, 0x1E3C280
	0x01E3C26C ADRP X0, 0x22BF000
	0x01E3C270 LDR X0, [X0 + 0x980]
	0x01E3C274 BL 0x1C16CF4
	0x01E3C278 MOVZ W8, 0x1
	0x01E3C27C STRB W8, [X20 + 0xF23]
	0x01E3C280 MOV V0.16B, V11.16B
	0x01E3C284 MOV V1.16B, V10.16B
	0x01E3C288 MOV V2.16B, V9.16B
	0x01E3C28C MOV V3.16B, V8.16B
	0x01E3C290 MOV X0, X31
	0x01E3C294 BL 0x1E43664
	0x01E3C298 LDR X8, [X19]
	0x01E3C29C MOV X19, X0
	0x01E3C2A0 LDR W9, [X8 + 0xE0]
	0x01E3C2A4 CBNZ W9, 0x1E3C2B0
	0x01E3C2A8 MOV X0, X8
	0x01E3C2AC BL 0x1C16DFC
	0x01E3C2B0 AND X0, X19, 0x0
	0x01E3C2B4 LDP X20, X19, [X31 + 0x30]
	0x01E3C2B8 LDR X30, [X31 + 0x20]
	0x01E3C2BC LDP D9, D8, [X31 + 0x10]
	0x01E3C2C0 LDP D11, D10, [X31], #0x40
	0x01E3C2C4 B 0x1E3C2C8
	0x01E3C2C8 SUB X31, X31, 0x40
	0x01E3C2CC STP X30, X23, [X31 + 0x10]
	0x01E3C2D0 STP X22, X21, [X31 + 0x20]
	0x01E3C2D4 STP X20, X19, [X31 + 0x30]
	0x01E3C2D8 ADRP X23, 0x259C000
	0x01E3C2DC ADRP X22, 0x22B7000
	0x01E3C2E0 ADRP X21, 0x22BF000
	0x01E3C2E4 ADRP X20, 0x22BF000
	0x01E3C2E8 LDRB W8, [X23 + 0xF24]
	0x01E3C2EC LDR X22, [X22 + 0x758]
	0x01E3C2F0 LDR X21, [X21 + 0x988]
	0x01E3C2F4 LDR X20, [X20 + 0x980]
	0x01E3C2F8 MOV X19, X0
	0x01E3C2FC TBNZ X8, 0x0, 0x1E3C32C
	0x01E3C300 ADRP X0, 0x22BF000
	0x01E3C304 LDR X0, [X0 + 0x980]
	0x01E3C308 BL 0x1C16CF4
	0x01E3C30C ADRP X0, 0x22B7000
	0x01E3C310 LDR X0, [X0 + 0x758]
	0x01E3C314 BL 0x1C16CF4
	0x01E3C318 ADRP X0, 0x22BF000
	0x01E3C31C LDR X0, [X0 + 0x988]
	0x01E3C320 BL 0x1C16CF4
	0x01E3C324 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0x259D000
	008 Move X21, 0x22BB000
	009 Move W8, [X22+3857]
	010 Move X21, [X21+640]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x22C0000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move X0, 0x22BB000
	021 Move X0, [X0+640]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3857], W8
	025 Move X0, [X21]
	026 NotImplemented "Instruction MOVI not yet implemented."
	027 Move [X31+80], X31
	028 Move [X31+48], V0
	029 Move [X31+56], V0
	030 Move [X31+2], V0
	031 Move X21, 0x22C0000
	032 Move W8, [X0+224]
	033 Move X21, [X21+2264]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Add X8, X31, 8
	038 Move X0, X31
	039 Call AsyncTaskMethodBuilder.Create
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move X9, [X31+24]
	042 Move X2, [X21]
	043 Add X8, X31, 32
	044 Move [X31+64], X19
	045 Move [X31+72], X20
	046 Or X20, X8, 15
	047 Move TEMP, 0
	048 Not TEMP
	049 Move W10, TEMP
	050 Add X1, X31, 32
	051 Move X0, X20
	052 Move [X31+40], V0
	053 Move [X31+56], X9
	054 Move [X31+32], W10
	055 Call AsyncTaskMethodBuilder.Start, X0, X1
	056 Move X0, X20
	057 Move X1, X31
	058 Call AsyncTaskMethodBuilder.get_Task, X0
	059 Move X20, [X31+128]
	060 Move X19, [X31+136]
	061 Move X22, [X31+112]
	062 Move X21, [X31+120]
	063 Move X30, [X31+96]
	064 Add X31, X31, 144
	065 Return X0

