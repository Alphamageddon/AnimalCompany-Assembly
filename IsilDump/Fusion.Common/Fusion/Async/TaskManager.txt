Type: Fusion.Async.TaskManager

Method: System.Threading.Tasks.TaskFactory get_TaskFactory()

Disassembly:
	0x01E3A864 B 0x1E3A868
	0x01E3A868 MOV X20, X0
	0x01E3A86C MOVZ W23, 0x1
	0x01E3A870 B 0x1E3A964
	0x01E3A874 MOV X20, X0
	0x01E3A878 CMP W1, 0x1
	0x01E3A87C MOVZ W23, 0x1
	0x01E3A880 B.NE 0x1E3A964
	0x01E3A884 MOV X0, X20
	0x01E3A888 BL 0x3EB1AD0
	0x01E3A88C MOV X20, X0
	0x01E3A890 ADRP X0, 0x22C1000
	0x01E3A894 LDR X0, [X0 + 0x8A8]
	0x01E3A898 BL 0x1C16D08
	0x01E3A89C LDR X8, [X20]
	0x01E3A8A0 LDR X1, [X8]
	0x01E3A8A4 BL 0x1C17270
	0x01E3A8A8 TBZ X0, 0x0, 0x1E3A8B4
	0x01E3A8AC MOVZ W21, 0xB
	0x01E3A8B0 B 0x1E3A8D4
	0x01E3A8B4 ADRP X0, 0x22B9000
	0x01E3A8B8 LDR X0, [X0 + 0x7D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x259F000
	005 Move X19, 0x22C2000
	006 Move W8, [X20+3839]
	007 Move X19, [X19+2000]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C2000
	013 Move X0, [X0+2000]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3839], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_TaskFactory(System.Threading.Tasks.TaskFactory value)

Disassembly:
	0x01E3A8BC BL 0x1C16D08
	0x01E3A8C0 LDR X8, [X20]
	0x01E3A8C4 LDR X1, [X8]
	0x01E3A8C8 BL 0x1C17270
	0x01E3A8CC TBZ X0, 0x0, 0x1E3A91C
	0x01E3A8D0 MOVZ W21, 0xC
	0x01E3A8D4 LDR X20, [X20]
	0x01E3A8D8 BL 0x3EB1AE0
	0x01E3A8DC CMP W21, 0xC
	0x01E3A8E0 B.EQ 0x1E3A8F4
	0x01E3A8E4 CMP W21, 0xB
	0x01E3A8E8 B.NE 0x1E3A7F8
	0x01E3A8EC MOV X0, X20
	0x01E3A8F0 BL 0x1C16F18
	0x01E3A8F4 ADRP X0, 0x22C1000
	0x01E3A8F8 LDR X0, [X0 + 0x8B0]
	0x01E3A8FC BL 0x1C16D08
	0x01E3A900 LDR W8, [X0 + 0xE0]
	0x01E3A904 CBNZ W8, 0x1E3A90C
	0x01E3A908 BL 0x1C16DFC
	0x01E3A90C MOV X0, X20
	0x01E3A910 MOV X1, X31
	0x01E3A914 BL 0x1E3E4C8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x259F000
	006 Move X20, 0x22C2000
	007 Move W8, [X21+3840]
	008 Move X20, [X20+2000]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22C2000
	015 Move X0, [X0+2000]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3840], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8], X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void Setup()

Disassembly:
	0x01E3A918 B 0x1E3A758
	0x01E3A91C MOVZ W0, 0x8
	0x01E3A920 BL 0x3EB1AF0
	0x01E3A924 LDR X8, [X20]
	0x01E3A928 STR X8, [X0]
	0x01E3A92C ADRP X1, 0x207A000
	0x01E3A930 ADD X1, X1, 0xE58
	0x01E3A934 MOV X2, X31
	0x01E3A938 BL 0x3EB1B00
	0x01E3A93C B 0x1E3A9F0
	0x01E3A940 B 0x1E3A944
	0x01E3A944 MOV X20, X0
	0x01E3A948 B 0x1E3A964
	0x01E3A94C MOV X20, X0
	0x01E3A950 B 0x1E3A964
	0x01E3A954 MOV X21, X1
	0x01E3A958 MOV X20, X0
	0x01E3A95C BL 0x3EB1AE0
	0x01E3A960 MOV W1, W21
	0x01E3A964 CMP W1, W23
	0x01E3A968 B.NE 0x1E3A9F8
	0x01E3A96C MOV X0, X20
	0x01E3A970 BL 0x3EB1AD0
	0x01E3A974 MOV X20, X0
	0x01E3A978 ADRP X0, 0x22B9000
	0x01E3A97C LDR X0, [X0 + 0x7D0]
	0x01E3A980 BL 0x1C16D08
	0x01E3A984 LDR X8, [X20]
	0x01E3A988 LDR X1, [X8]
	0x01E3A98C BL 0x1C17270
	0x01E3A990 TBZ X0, 0x0, 0x1E3A9D0
	0x01E3A994 LDR X20, [X20]
	0x01E3A998 BL 0x3EB1AE0
	0x01E3A99C MOVN W8, 0x1
	0x01E3A9A0 STR W8, [X19], #0x8
	0x01E3A9A4 ADRP X0, 0x22BC000
	0x01E3A9A8 LDR X0, [X0 + 0x280]
	0x01E3A9AC BL 0x1C16D08
	0x01E3A9B0 LDR W8, [X0 + 0xE0]
	0x01E3A9B4 CBNZ W8, 0x1E3A9BC
	0x01E3A9B8 BL 0x1C16DFC
	0x01E3A9BC MOV X0, X19
	0x01E3A9C0 MOV X1, X20
	0x01E3A9C4 MOV X2, X31
	0x01E3A9C8 BL 0x32C4908
	0x01E3A9CC B 0x1E3A7F8
	0x01E3A9D0 MOVZ W0, 0x8
	0x01E3A9D4 BL 0x3EB1AF0
	0x01E3A9D8 LDR X8, [X20]
	0x01E3A9DC STR X8, [X0]
	0x01E3A9E0 ADRP X1, 0x207A000
	0x01E3A9E4 ADD X1, X1, 0xE58
	0x01E3A9E8 MOV X2, X31
	0x01E3A9EC BL 0x3EB1B00
	0x01E3A9F0 MOV X20, X0
	0x01E3A9F4 BL 0x3EB1AE0
	0x01E3A9F8 MOV X0, X20
	0x01E3A9FC BL 0x1D2C690
	0x01E3AA00 BL 0x1990590
	0x01E3AA04 STR X30, [X31 - 0x30]!
	0x01E3AA08 STP X22, X21, [X31 + 0x10]
	0x01E3AA0C STP X20, X19, [X31 + 0x20]
	0x01E3AA10 ADRP X21, 0x259E000
	0x01E3AA14 ADRP X22, 0x22BC000
	0x01E3AA18 LDRB W8, [X21 + 0xF0A]
	0x01E3AA1C LDR X22, [X22 + 0x280]
	0x01E3AA20 MOV X19, X1
	0x01E3AA24 MOV X20, X0
	0x01E3AA28 TBNZ X8, 0x0, 0x1E3AA40
	0x01E3AA2C ADRP X0, 0x22BC000
	0x01E3AA30 LDR X0, [X0 + 0x280]
	0x01E3AA34 BL 0x1C16CF4
	0x01E3AA38 MOVZ W8, 0x1
	0x01E3AA3C STRB W8, [X21 + 0xF0A]
	0x01E3AA40 LDR X0, [X22]
	0x01E3AA44 LDR W8, [X0 + 0xE0]
	0x01E3AA48 CBNZ W8, 0x1E3AA50
	0x01E3AA4C BL 0x1C16DFC
	0x01E3AA50 ADD X0, X20, 0x8
	0x01E3AA54 MOV X1, X19
	0x01E3AA58 LDP X20, X19, [X31 + 0x20]
	0x01E3AA5C LDP X22, X21, [X31 + 0x10]
	0x01E3AA60 MOV X2, X31
	0x01E3AA64 LDR X30, [X31], #0x30
	0x01E3AA68 B 0x32C477C
	0x01E3AA6C SUB X31, X31, 0x70
	0x01E3AA70 STP X30, X21, [X31 + 0x50]
	0x01E3AA74 STP X20, X19, [X31 + 0x60]
	0x01E3AA78 ADRP X21, 0x259E000
	0x01E3AA7C ADRP X20, 0x22BC000
	0x01E3AA80 LDRB W8, [X21 + 0xF0B]
	0x01E3AA84 LDR X20, [X20 + 0x280]
	0x01E3AA88 MOV X19, X0
	0x01E3AA8C TBNZ X8, 0x0, 0x1E3AAB0
	0x01E3AA90 ADRP X0, 0x22C1000
	0x01E3AA94 LDR X0, [X0 + 0x8B8]
	0x01E3AA98 BL 0x1C16CF4
	0x01E3AA9C ADRP X0, 0x22BC000
	0x01E3AAA0 LDR X0, [X0 + 0x280]
	0x01E3AAA4 BL 0x1C16CF4
	0x01E3AAA8 MOVZ W8, 0x1
	0x01E3AAAC STRB W8, [X21 + 0xF0B]
	0x01E3AAB0 LDR X0, [X20]
	0x01E3AAB4 MOVI V0.2D, 0x0
	0x01E3AAB8 STP V0, V0, [X31 + 0x30]
	0x01E3AABC STR V0, [X31 + 0x2]
	0x01E3AAC0 ADRP X20, 0x22C1000
	0x01E3AAC4 LDR W8, [X0 + 0xE0]
	0x01E3AAC8 LDR X20, [X20 + 0x8B8]
	0x01E3AACC CBNZ W8, 0x1E3AAD4
	0x01E3AAD0 BL 0x1C16DFC
	0x01E3AAD4 ADD X8, X31, 0x8
	0x01E3AAD8 MOV X0, X31
	0x01E3AADC BL 0x32C4770
	0x01E3AAE0 LDUR V0, [X31 + 0x8]
	0x01E3AAE4 LDR X9, [X31 + 0x18]
	0x01E3AAE8 LDR X2, [X20]
	0x01E3AAEC ADD X8, X31, 0x20
	0x01E3AAF0 ORR X20, X8, 0xF
	0x01E3AAF4 MOVN W10, 0x0
	0x01E3AAF8 ADD X1, X31, 0x20
	0x01E3AAFC MOV X0, X20
	0x01E3AB00 STUR V0, [X31 + 0x28]
	0x01E3AB04 STP X9, X19, [X31 + 0x38]
	0x01E3AB08 STR W10, [X31 + 0x20]
	0x01E3AB0C BL 0x2197CB8
	0x01E3AB10 MOV X0, X20
	0x01E3AB14 MOV X1, X31
	0x01E3AB18 BL 0x32C47F8
	0x01E3AB1C LDP X20, X19, [X31 + 0x60]
	0x01E3AB20 LDP X30, X21, [X31 + 0x50]
	0x01E3AB24 ADD X31, X31, 0x70
	0x01E3AB28 RET
	0x01E3AB2C STR X30, [X31 - 0x30]!
	0x01E3AB30 STP X22, X21, [X31 + 0x10]
	0x01E3AB34 STP X20, X19, [X31 + 0x20]
	0x01E3AB38 ADRP X20, 0x259E000
	0x01E3AB3C LDRB W8, [X20 + 0xF0C]
	0x01E3AB40 MOV X19, X0
	0x01E3AB44 TBNZ X8, 0x0, 0x1E3AB74
	0x01E3AB48 ADRP X0, 0x22C1000
	0x01E3AB4C LDR X0, [X0 + 0x8C0]
	0x01E3AB50 BL 0x1C16CF4
	0x01E3AB54 ADRP X0, 0x22BC000
	0x01E3AB58 LDR X0, [X0 + 0x280]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x259F000
	007 Move X22, 0x22C2000
	008 Move W8, [X19+3841]
	009 Move X22, [X22+2000]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x22C2000
	015 Move X0, [X0+2008]
	016 Call 0x1C17CF4
	017 Move X0, 0x22C2000
	018 Move X0, [X0+2016]
	019 Call 0x1C17CF4
	020 Move X0, 0x22C2000
	021 Move X0, [X0+2000]
	022 Call 0x1C17CF4
	023 Move X0, 0x22C2000
	024 Move X0, [X0+2024]
	025 Call 0x1C17CF4
	026 Move X0, 0x22BB000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+3841], W8
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X19, 0x259F000
	037 Move W8, [X19+3866]
	038 Compare W8, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0x22C2000
	041 Move X0, [X0+2000]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X19+3866], W8
	045 Move X0, [X22]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X22]
	051 Move X8, [X0+184]
	052 Move X8, [X8]
	053 Compare X8, 0
	054 JumpIfEqual {111}
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move W8, [X19+3866]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x22C2000
	063 Move X0, [X0+2000]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X19+3866], W8
	067 Move X0, [X22]
	068 Move X20, 0x22BB000
	069 Move W8, [X0+224]
	070 Move X20, [X20+1976]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X22]
	075 Move X8, [X20]
	076 Move X9, [X0+184]
	077 Move W10, [X8+224]
	078 Move X19, [X9]
	079 Compare W10, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X21, 0x259F000
	084 Move W8, [X21+3867]
	085 Compare W8, 0
	086 JumpIfNotEqual {92}
	087 Move X0, 0x22BB000
	088 Move X0, [X0+1976]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X21+3867], W8
	092 Move X0, [X20]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X20]
	098 Compare X19, 0
	099 JumpIfEqual {172}
	100 Move X8, [X0+184]
	101 Move X9, [X19]
	102 Move X0, X19
	103 Move X1, [X8+40]
	104 Move X8, [X9+312]
	105 Move X2, [X9+320]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {166}
	111 Move X8, 0x22C2000
	112 Move X8, [X8+2008]
	113 Move X20, 0x22C2000
	114 Move X0, [X8]
	115 Move W8, [X0+224]
	116 Move X20, [X20+2024]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X19, 0x22C2000
	121 Move X19, [X19+2016]
	122 Move X0, X31
	123 Call CancellationToken.get_None
	124 Move X8, [X20]
	125 Move X20, X0
	126 Move W9, [X8+224]
	127 Compare W9, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X8
	130 Call 0x1C17DFC
	131 Move X0, X31
	132 Call TaskScheduler.FromCurrentSynchronizationContext
	133 Move X8, [X19]
	134 Move X21, X0
	135 Move X0, X8
	136 Call 0x1C17F10
	137 Move W2, 8
	138 Or W3, W31, 0x80008
	139 Move X1, X20
	140 Move X4, X21
	141 Move X5, X31
	142 Move X19, X0
	143 Call TaskFactory..ctor, X0, X1, X2, X3, X4
	144 Move X0, [X22]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X20, 0x259F000
	150 Move W8, [X20+3868]
	151 Compare W8, 0
	152 JumpIfNotEqual {158}
	153 Move X0, 0x22C2000
	154 Move X0, [X0+2000]
	155 Call 0x1C17CF4
	156 Move W8, 1
	157 Move [X20+3868], W8
	158 Move X0, [X22]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {164}
	162 Call 0x1C17DFC
	163 Move X0, [X22]
	164 Move X8, [X0+184]
	165 Move [X8], X19
	166 Move X20, [X31+32]
	167 Move X19, [X31+40]
	168 Move X22, [X31+16]
	169 Move X21, [X31+24]
	170 Move X30, [X31+48]
	171 Return 
	172 Call 0x1C17F20

Method: System.Threading.Tasks.Task Service(System.Action recurringAction, System.Threading.CancellationToken cancellationToken, System.Int32 interval, System.String serviceName = null)

Disassembly:
	0x01E3AB5C BL 0x1C16CF4
	0x01E3AB60 ADRP X0, 0x22C1000
	0x01E3AB64 LDR X0, [X0 + 0x7D8]
	0x01E3AB68 BL 0x1C16CF4
	0x01E3AB6C MOVZ W8, 0x1
	0x01E3AB70 STRB W8, [X20 + 0xF0C]
	0x01E3AB74 STR X31, [X31 + 0x8]
	0x01E3AB78 ADRP X22, 0x22BC000
	0x01E3AB7C LDR W8, [X19]
	0x01E3AB80 LDR X22, [X22 + 0x280]
	0x01E3AB84 CBZ W8, 0x1E3AC2C
	0x01E3AB88 LDR X20, [X19 + 0x20]
	0x01E3AB8C CBZ X20, 0x1E3AC80
	0x01E3AB90 ADRP X8, 0x22C1000
	0x01E3AB94 LDR X8, [X8 + 0x7D8]
	0x01E3AB98 LDR X0, [X8]
	0x01E3AB9C LDR W8, [X0 + 0xE0]
	0x01E3ABA0 CBNZ W8, 0x1E3ABA8
	0x01E3ABA4 BL 0x1C16DFC
	0x01E3ABA8 ADD X0, X20, 0x10
	0x01E3ABAC MOV X1, X31
	0x01E3ABB0 BL 0x33DDC30
	0x01E3ABB4 LDR X8, [X20 + 0x18]
	0x01E3ABB8 CBZ X8, 0x1E3AC84
	0x01E3ABBC LDR X1, [X20 + 0x10]
	0x01E3ABC0 LDR X0, [X8 + 0x40]
	0x01E3ABC4 LDR X9, [X8 + 0x18]
	0x01E3ABC8 LDR X2, [X8 + 0x28]
	0x01E3ABCC BLR X9
	0x01E3ABD0 CBZ X0, 0x1E3AC88
	0x01E3ABD4 MOV X1, X31
	0x01E3ABD8 BL 0x33ED394
	0x01E3ABDC STR X0, [X31 + 0x8]
	0x01E3ABE0 ADD X0, X31, 0x8
	0x01E3ABE4 MOV X1, X31
	0x01E3ABE8 BL 0x32C3A80
	0x01E3ABEC TBNZ X0, 0x0, 0x1E3AC40
	0x01E3ABF0 STR W31, [X19]
	0x01E3ABF4 LDR X8, [X31 + 0x8]
	0x01E3ABF8 STR X8, [X19 + 0x28]
	0x01E3ABFC LDR X0, [X22]
	0x01E3AC00 LDR W8, [X0 + 0xE0]
	0x01E3AC04 CBNZ W8, 0x1E3AC0C
	0x01E3AC08 BL 0x1C16DFC
	0x01E3AC0C ADRP X8, 0x22C1000
	0x01E3AC10 LDR X8, [X8 + 0x8C0]
	0x01E3AC14 ADD X0, X19, 0x8
	0x01E3AC18 LDR X3, [X8]
	0x01E3AC1C ADD X1, X31, 0x8
	0x01E3AC20 MOV X2, X19
	0x01E3AC24 BL 0x218B834
	0x01E3AC28 B 0x1E3AC70
	0x01E3AC2C LDR X8, [X19 + 0x28]
	0x01E3AC30 MOVN W9, 0x0
	0x01E3AC34 STR X8, [X31 + 0x8]
	0x01E3AC38 STR X31, [X19 + 0x28]
	0x01E3AC3C STR W9, [X19]
	0x01E3AC40 ADD X0, X31, 0x8
	0x01E3AC44 MOV X1, X31
	0x01E3AC48 BL 0x32C3B4C
	0x01E3AC4C MOVN W8, 0x1
	0x01E3AC50 STR W8, [X19], #0x8
	0x01E3AC54 LDR X0, [X22]
	0x01E3AC58 LDR W8, [X0 + 0xE0]
	0x01E3AC5C CBNZ W8, 0x1E3AC64
	0x01E3AC60 BL 0x1C16DFC
	0x01E3AC64 MOV X0, X19
	0x01E3AC68 MOV X1, X31
	0x01E3AC6C BL 0x32C4864
	0x01E3AC70 LDP X20, X19, [X31 + 0x20]
	0x01E3AC74 LDP X22, X21, [X31 + 0x10]
	0x01E3AC78 LDR X30, [X31], #0x30
	0x01E3AC7C RET
	0x01E3AC80 BL 0x1C16F20
	0x01E3AC84 BL 0x1C16F20
	0x01E3AC88 BL 0x1C16F20
	0x01E3AC8C B 0x1E3ACAC
	0x01E3AC90 B 0x1E3ACAC
	0x01E3AC94 B 0x1E3ACAC
	0x01E3AC98 B 0x1E3ACAC
	0x01E3AC9C B 0x1E3ACAC
	0x01E3ACA0 B 0x1E3ACAC
	0x01E3ACA4 MOV X20, X0
	0x01E3ACA8 B 0x1E3ACB0
	0x01E3ACAC MOV X20, X0
	0x01E3ACB0 CMP W1, 0x1
	0x01E3ACB4 B.NE 0x1E3AD54
	0x01E3ACB8 MOV X0, X20
	0x01E3ACBC BL 0x3EB1AD0
	0x01E3ACC0 MOV X20, X0
	0x01E3ACC4 ADRP X0, 0x22C1000
	0x01E3ACC8 LDR X0, [X0 + 0x8A8]
	0x01E3ACCC BL 0x1C16D08
	0x01E3ACD0 LDR X8, [X20]
	0x01E3ACD4 LDR X1, [X8]
	0x01E3ACD8 BL 0x1C17270
	0x01E3ACDC MOV W21, W0
	0x01E3ACE0 TBNZ X0, 0x0, 0x1E3AD00
	0x01E3ACE4 ADRP X0, 0x22B9000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x259F000
	009 Move X23, 0x22C2000
	010 Move W8, [X22+3842]
	011 Move X23, [X23+2032]
	012 Move W19, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x22C2000
	020 Move X0, [X0+2040]
	021 Call 0x1C17CF4
	022 Move X0, 0x22C2000
	023 Move X0, [X0+2000]
	024 Call 0x1C17CF4
	025 Move X0, 0x22C2000
	026 Move X0, [X0+2048]
	027 Call 0x1C17CF4
	028 Move X0, 0x22BB000
	029 Move X0, [X0+1976]
	030 Call 0x1C17CF4
	031 Move X0, 0x22C2000
	032 Move X0, [X0+2056]
	033 Call 0x1C17CF4
	034 Move X0, 0x22C2000
	035 Move X0, [X0+2032]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+3842], W8
	039 Move X0, [X23]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X22, X0
	043 Call Object..ctor, X0
	044 Compare X22, 0
	045 JumpIfEqual {119}
	046 Move X23, 0x22BB000
	047 Move X23, [X23+1976]
	048 Move [X22+16], X21
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfEqual {91}
	053 Compare X21, 0
	054 JumpIfEqual {94}
	055 Move X8, 0x22C2000
	056 Move X8, [X8+2048]
	057 Move X21, 0x22C2000
	058 Move X23, 0x22C2000
	059 Move X24, 0x22C2000
	060 Move X1, [X8]
	061 Move X21, [X21+2040]
	062 Move X23, [X23+2056]
	063 Move X24, [X24+2000]
	064 Move W0, 1
	065 Call Task.FromResult, X0
	066 Move [X22+24], X0
	067 Move X0, [X21]
	068 Call 0x1C17F10
	069 Move X2, [X23]
	070 Move X1, X22
	071 Move X3, X31
	072 Move X21, X0
	073 Call Func`1<Object>..ctor, X0, X1, X2
	074 Move X0, [X24]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X21
	080 Move X1, X20
	081 Move W2, W19
	082 Move X20, [X31+48]
	083 Move X19, [X31+56]
	084 Move X22, [X31+32]
	085 Move X21, [X31+40]
	086 Move X24, [X31+16]
	087 Move X23, [X31+24]
	088 Move X30, [X31+64]
	089 Call TaskManager.Service, X0, X1, X2, X3
	090 Return X0
	091 Call 0x1C17DFC
	092 Compare X21, 0
	093 JumpIfNotEqual {55}
	094 Move X19, 0x259F000
	095 Move W8, [X19+3869]
	096 Compare W8, 0
	097 JumpIfNotEqual {103}
	098 Move X0, 0x22BB000
	099 Move X0, [X0+1976]
	100 Call 0x1C17CF4
	101 Move W8, 1
	102 Move [X19+3869], W8
	103 Move X0, [X23]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {109}
	107 Call 0x1C17DFC
	108 Move X0, [X23]
	109 Move X8, [X0+184]
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X22, [X31+32]
	113 Move X21, [X31+40]
	114 Move X24, [X31+16]
	115 Move X23, [X31+24]
	116 Move X0, [X8+48]
	117 Move X30, [X31+64]
	118 Return X0
	119 Call 0x1C17F20

Method: System.Threading.Tasks.Task Service(System.Func`1<System.Threading.Tasks.Task`1<System.Boolean>> recurringAction, System.Threading.CancellationToken cancellationToken, System.Int32 interval, System.String serviceName = null)

Disassembly:
	0x01E3ACF0 LDR X8, [X20]
	0x01E3ACF4 LDR X1, [X8]
	0x01E3ACF8 BL 0x1C17270
	0x01E3ACFC TBZ X0, 0x0, 0x1E3AD14
	0x01E3AD00 LDR X20, [X20]
	0x01E3AD04 BL 0x3EB1AE0
	0x01E3AD08 TBZ X21, 0x0, 0x1E3AC4C
	0x01E3AD0C MOV X0, X20
	0x01E3AD10 BL 0x1C16F18
	0x01E3AD14 MOVZ W0, 0x8
	0x01E3AD18 BL 0x3EB1AF0
	0x01E3AD1C LDR X8, [X20]
	0x01E3AD20 STR X8, [X0]
	0x01E3AD24 ADRP X1, 0x207A000
	0x01E3AD28 ADD X1, X1, 0xE58
	0x01E3AD2C MOV X2, X31
	0x01E3AD30 BL 0x3EB1B00
	0x01E3AD34 B 0x1E3ADE4
	0x01E3AD38 B 0x1E3AD3C
	0x01E3AD3C MOV X20, X0
	0x01E3AD40 B 0x1E3AD54
	0x01E3AD44 MOV X21, X1
	0x01E3AD48 MOV X20, X0
	0x01E3AD4C BL 0x3EB1AE0
	0x01E3AD50 MOV W1, W21
	0x01E3AD54 MOVZ W8, 0x1
	0x01E3AD58 CMP W1, W8
	0x01E3AD5C B.NE 0x1E3ADEC
	0x01E3AD60 MOV X0, X20
	0x01E3AD64 BL 0x3EB1AD0
	0x01E3AD68 MOV X20, X0
	0x01E3AD6C ADRP X0, 0x22B9000
	0x01E3AD70 LDR X0, [X0 + 0x7D0]
	0x01E3AD74 BL 0x1C16D08
	0x01E3AD78 LDR X8, [X20]
	0x01E3AD7C LDR X1, [X8]
	0x01E3AD80 BL 0x1C17270
	0x01E3AD84 TBZ X0, 0x0, 0x1E3ADC4
	0x01E3AD88 LDR X20, [X20]
	0x01E3AD8C BL 0x3EB1AE0
	0x01E3AD90 MOVN W8, 0x1
	0x01E3AD94 STR W8, [X19], #0x8
	0x01E3AD98 ADRP X0, 0x22BC000
	0x01E3AD9C LDR X0, [X0 + 0x280]
	0x01E3ADA0 BL 0x1C16D08
	0x01E3ADA4 LDR W8, [X0 + 0xE0]
	0x01E3ADA8 CBNZ W8, 0x1E3ADB0
	0x01E3ADAC BL 0x1C16DFC
	0x01E3ADB0 MOV X0, X19
	0x01E3ADB4 MOV X1, X20
	0x01E3ADB8 MOV X2, X31
	0x01E3ADBC BL 0x32C4908
	0x01E3ADC0 B 0x1E3AC70
	0x01E3ADC4 MOVZ W0, 0x8
	0x01E3ADC8 BL 0x3EB1AF0
	0x01E3ADCC LDR X8, [X20]
	0x01E3ADD0 STR X8, [X0]
	0x01E3ADD4 ADRP X1, 0x207A000
	0x01E3ADD8 ADD X1, X1, 0xE58
	0x01E3ADDC MOV X2, X31
	0x01E3ADE0 BL 0x3EB1B00
	0x01E3ADE4 MOV X20, X0
	0x01E3ADE8 BL 0x3EB1AE0
	0x01E3ADEC MOV X0, X20
	0x01E3ADF0 BL 0x1D2C690
	0x01E3ADF4 BL 0x1990590
	0x01E3ADF8 STR X30, [X31 - 0x30]!
	0x01E3ADFC STP X22, X21, [X31 + 0x10]
	0x01E3AE00 STP X20, X19, [X31 + 0x20]
	0x01E3AE04 ADRP X21, 0x259E000
	0x01E3AE08 ADRP X22, 0x22BC000
	0x01E3AE0C LDRB W8, [X21 + 0xF0D]
	0x01E3AE10 LDR X22, [X22 + 0x280]
	0x01E3AE14 MOV X19, X1
	0x01E3AE18 MOV X20, X0
	0x01E3AE1C TBNZ X8, 0x0, 0x1E3AE34
	0x01E3AE20 ADRP X0, 0x22BC000
	0x01E3AE24 LDR X0, [X0 + 0x280]
	0x01E3AE28 BL 0x1C16CF4
	0x01E3AE2C MOVZ W8, 0x1
	0x01E3AE30 STRB W8, [X21 + 0xF0D]
	0x01E3AE34 LDR X0, [X22]
	0x01E3AE38 LDR W8, [X0 + 0xE0]
	0x01E3AE3C CBNZ W8, 0x1E3AE44
	0x01E3AE40 BL 0x1C16DFC
	0x01E3AE44 ADD X0, X20, 0x8
	0x01E3AE48 MOV X1, X19
	0x01E3AE4C LDP X20, X19, [X31 + 0x20]
	0x01E3AE50 LDP X22, X21, [X31 + 0x10]
	0x01E3AE54 MOV X2, X31
	0x01E3AE58 LDR X30, [X31], #0x30
	0x01E3AE5C B 0x32C477C
	0x01E3AE60 SUB X31, X31, 0x70
	0x01E3AE64 STP X30, X21, [X31 + 0x50]
	0x01E3AE68 STP X20, X19, [X31 + 0x60]
	0x01E3AE6C ADRP X21, 0x259E000
	0x01E3AE70 ADRP X20, 0x22BC000
	0x01E3AE74 LDRB W8, [X21 + 0xF0E]
	0x01E3AE78 LDR X20, [X20 + 0x280]
	0x01E3AE7C MOV X19, X0
	0x01E3AE80 TBNZ X8, 0x0, 0x1E3AEA4
	0x01E3AE84 ADRP X0, 0x22C1000
	0x01E3AE88 LDR X0, [X0 + 0x8C8]
	0x01E3AE8C BL 0x1C16CF4
	0x01E3AE90 ADRP X0, 0x22BC000
	0x01E3AE94 LDR X0, [X0 + 0x280]
	0x01E3AE98 BL 0x1C16CF4
	0x01E3AE9C MOVZ W8, 0x1
	0x01E3AEA0 STRB W8, [X21 + 0xF0E]
	0x01E3AEA4 LDR X0, [X20]
	0x01E3AEA8 MOVI V0.2D, 0x0
	0x01E3AEAC STP V0, V0, [X31 + 0x30]
	0x01E3AEB0 STR V0, [X31 + 0x2]
	0x01E3AEB4 ADRP X20, 0x22C1000
	0x01E3AEB8 LDR W8, [X0 + 0xE0]
	0x01E3AEBC LDR X20, [X20 + 0x8C8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x259F000
	009 Move X22, 0x22C2000
	010 Move W8, [X19+3843]
	011 Move X22, [X22+2064]
	012 Move W20, W2
	013 Move X23, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x22C2000
	020 Move X0, [X0+2072]
	021 Call 0x1C17CF4
	022 Move X0, 0x22C2000
	023 Move X0, [X0+2080]
	024 Call 0x1C17CF4
	025 Move X0, 0x22C2000
	026 Move X0, [X0+2000]
	027 Call 0x1C17CF4
	028 Move X0, 0x22C2000
	029 Move X0, [X0+2088]
	030 Call 0x1C17CF4
	031 Move X0, 0x22C2000
	032 Move X0, [X0+2064]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+3843], W8
	036 Move X0, [X22]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X22, X0
	040 Call Object..ctor, X0
	041 Compare X22, 0
	042 JumpIfEqual {137}
	043 Move X19, 0x22C2000
	044 Move X19, [X19+2000]
	045 Move [X22+16], X23
	046 Move [X22+24], W20
	047 Move [X22+32], X21
	048 Move X0, [X19]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X23, 0x259F000
	054 Move W8, [X23+3866]
	055 Compare W8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, 0x22C2000
	058 Move X0, [X0+2000]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X23+3866], W8
	062 Move X0, [X19]
	063 Move X24, 0x22C2000
	064 Move X21, 0x22C2000
	065 Move W8, [X0+224]
	066 Move X24, [X24+2072]
	067 Move X21, [X21+2088]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X19]
	072 Move X8, [X0+184]
	073 Move X0, [X24]
	074 Move X20, [X8]
	075 Call 0x1C17F10
	076 Move X2, [X21]
	077 Move X1, X22
	078 Move X3, X31
	079 Move X21, X0
	080 Call Func`1<Object>..ctor, X0, X1, X2
	081 Move W8, [X23+3866]
	082 Move X22, [X22+16]
	083 Compare W8, 0
	084 JumpIfNotEqual {90}
	085 Move X0, 0x22C2000
	086 Move X0, [X0+2000]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X23+3866], W8
	090 Move X0, [X19]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X19]
	096 Move X8, [X0+184]
	097 Move X8, [X8]
	098 Compare X8, 0
	099 JumpIfEqual {137}
	100 Move W9, [X23+3866]
	101 Move W24, [X8+32]
	102 Compare W9, 0
	103 JumpIfNotEqual {109}
	104 Move X0, X19
	105 Call 0x1C17CF4
	106 Move X0, [X19]
	107 Move W8, 1
	108 Move [X23+3866], W8
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X19]
	114 Move X8, [X0+184]
	115 Move X8, [X8]
	116 Compare X8, 0
	117 JumpIfEqual {137}
	118 Compare X20, 0
	119 JumpIfEqual {137}
	120 Move X9, 0x22C2000
	121 Move X9, [X9+2080]
	122 Move X4, [X8+24]
	123 Or W3, W24, 2
	124 Move X0, X20
	125 Move X5, [X9]
	126 Move X1, X21
	127 Move X2, X22
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X22, [X31+32]
	131 Move X21, [X31+40]
	132 Move X24, [X31+16]
	133 Move X23, [X31+24]
	134 Move X30, [X31+64]
	135 Call 0x229C8B8, X0, X1, X2, X3, X4
	136 Return X0
	137 Call 0x1C17F20

Method: System.Threading.Tasks.Task Run(System.Func`2<System.Threading.CancellationToken, System.Threading.Tasks.Task> action, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions options = 0)

Disassembly:
	0x01E3AEC8 ADD X8, X31, 0x8
	0x01E3AECC MOV X0, X31
	0x01E3AED0 BL 0x32C4770
	0x01E3AED4 LDUR V0, [X31 + 0x8]
	0x01E3AED8 LDR X9, [X31 + 0x18]
	0x01E3AEDC LDR X2, [X20]
	0x01E3AEE0 ADD X8, X31, 0x20
	0x01E3AEE4 ORR X20, X8, 0xF
	0x01E3AEE8 MOVN W10, 0x0
	0x01E3AEEC ADD X1, X31, 0x20
	0x01E3AEF0 MOV X0, X20
	0x01E3AEF4 STUR V0, [X31 + 0x28]
	0x01E3AEF8 STP X9, X19, [X31 + 0x38]
	0x01E3AEFC STR W10, [X31 + 0x20]
	0x01E3AF00 BL 0x2197DB8
	0x01E3AF04 MOV X0, X20
	0x01E3AF08 MOV X1, X31
	0x01E3AF0C BL 0x32C47F8
	0x01E3AF10 LDP X20, X19, [X31 + 0x60]
	0x01E3AF14 LDP X30, X21, [X31 + 0x50]
	0x01E3AF18 ADD X31, X31, 0x70
	0x01E3AF1C RET
	0x01E3AF20 STR X30, [X31 - 0x30]!
	0x01E3AF24 STP X22, X21, [X31 + 0x10]
	0x01E3AF28 STP X20, X19, [X31 + 0x20]
	0x01E3AF2C ADRP X20, 0x259E000
	0x01E3AF30 LDRB W8, [X20 + 0xF0F]
	0x01E3AF34 MOV X19, X0
	0x01E3AF38 TBNZ X8, 0x0, 0x1E3AF68
	0x01E3AF3C ADRP X0, 0x22C1000
	0x01E3AF40 LDR X0, [X0 + 0x8D0]
	0x01E3AF44 BL 0x1C16CF4
	0x01E3AF48 ADRP X0, 0x22BC000
	0x01E3AF4C LDR X0, [X0 + 0x280]
	0x01E3AF50 BL 0x1C16CF4
	0x01E3AF54 ADRP X0, 0x22C1000
	0x01E3AF58 LDR X0, [X0 + 0x7D8]
	0x01E3AF5C BL 0x1C16CF4
	0x01E3AF60 MOVZ W8, 0x1
	0x01E3AF64 STRB W8, [X20 + 0xF0F]
	0x01E3AF68 STR X31, [X31 + 0x8]
	0x01E3AF6C ADRP X22, 0x22BC000
	0x01E3AF70 LDR W8, [X19]
	0x01E3AF74 LDR X22, [X22 + 0x280]
	0x01E3AF78 CBZ W8, 0x1E3B020
	0x01E3AF7C LDR X20, [X19 + 0x20]
	0x01E3AF80 CBZ X20, 0x1E3B074
	0x01E3AF84 ADRP X8, 0x22C1000
	0x01E3AF88 LDR X8, [X8 + 0x7D8]
	0x01E3AF8C LDR X0, [X8]
	0x01E3AF90 LDR W8, [X0 + 0xE0]
	0x01E3AF94 CBNZ W8, 0x1E3AF9C
	0x01E3AF98 BL 0x1C16DFC
	0x01E3AF9C ADD X0, X20, 0x10
	0x01E3AFA0 MOV X1, X31
	0x01E3AFA4 BL 0x33DDC30
	0x01E3AFA8 LDR X8, [X20 + 0x18]
	0x01E3AFAC CBZ X8, 0x1E3B078
	0x01E3AFB0 LDR X1, [X20 + 0x10]
	0x01E3AFB4 LDR X0, [X8 + 0x40]
	0x01E3AFB8 LDR X9, [X8 + 0x18]
	0x01E3AFBC LDR X2, [X8 + 0x28]
	0x01E3AFC0 BLR X9
	0x01E3AFC4 CBZ X0, 0x1E3B07C
	0x01E3AFC8 MOV X1, X31
	0x01E3AFCC BL 0x33ED394
	0x01E3AFD0 STR X0, [X31 + 0x8]
	0x01E3AFD4 ADD X0, X31, 0x8
	0x01E3AFD8 MOV X1, X31
	0x01E3AFDC BL 0x32C3A80
	0x01E3AFE0 TBNZ X0, 0x0, 0x1E3B034
	0x01E3AFE4 STR W31, [X19]
	0x01E3AFE8 LDR X8, [X31 + 0x8]
	0x01E3AFEC STR X8, [X19 + 0x28]
	0x01E3AFF0 LDR X0, [X22]
	0x01E3AFF4 LDR W8, [X0 + 0xE0]
	0x01E3AFF8 CBNZ W8, 0x1E3B000
	0x01E3AFFC BL 0x1C16DFC
	0x01E3B000 ADRP X8, 0x22C0000
	0x01E3B004 LDR X8, [X8 + 0x8D0]
	0x01E3B008 ADD X0, X19, 0x8
	0x01E3B00C LDR X3, [X8]
	0x01E3B010 ADD X1, X31, 0x8
	0x01E3B014 MOV X2, X19
	0x01E3B018 BL 0x218B8B0
	0x01E3B01C B 0x1E3B064
	0x01E3B020 LDR X8, [X19 + 0x28]
	0x01E3B024 MOVN W9, 0x0
	0x01E3B028 STR X8, [X31 + 0x8]
	0x01E3B02C STR X31, [X19 + 0x28]
	0x01E3B030 STR W9, [X19]
	0x01E3B034 ADD X0, X31, 0x8
	0x01E3B038 MOV X1, X31
	0x01E3B03C BL 0x32C3B4C
	0x01E3B040 MOVN W8, 0x1
	0x01E3B044 STR W8, [X19], #0x8
	0x01E3B048 LDR X0, [X22]
	0x01E3B04C LDR W8, [X0 + 0xE0]
	0x01E3B050 CBNZ W8, 0x1E3B058
	0x01E3B054 BL 0x1C16DFC
	0x01E3B058 MOV X0, X19
	0x01E3B05C MOV X1, X31
	0x01E3B060 BL 0x32C4864
	0x01E3B064 LDP X20, X19, [X31 + 0x20]
	0x01E3B068 LDP X22, X21, [X31 + 0x10]
	0x01E3B06C LDR X30, [X31], #0x30
	0x01E3B070 RET
	0x01E3B074 BL 0x1C16F20
	0x01E3B078 BL 0x1C16F20
	0x01E3B07C BL 0x1C16F20
	0x01E3B080 B 0x1E3B0A0
	0x01E3B084 B 0x1E3B0A0
	0x01E3B088 B 0x1E3B0A0
	0x01E3B08C B 0x1E3B0A0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x259F000
	010 Move X23, 0x22C2000
	011 Move W8, [X20+3844]
	012 Move X23, [X23+2096]
	013 Move W19, W2
	014 Move X22, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x22C2000
	021 Move X0, [X0+2072]
	022 Call 0x1C17CF4
	023 Move X0, 0x22C2000
	024 Move X0, [X0+2080]
	025 Call 0x1C17CF4
	026 Move X0, 0x22C2000
	027 Move X0, [X0+2000]
	028 Call 0x1C17CF4
	029 Move X0, 0x22C2000
	030 Move X0, [X0+2104]
	031 Call 0x1C17CF4
	032 Move X0, 0x22C2000
	033 Move X0, [X0+2096]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3844], W8
	037 Move X0, [X23]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X23, X0
	041 Call Object..ctor, X0
	042 Compare X23, 0
	043 JumpIfEqual {138}
	044 Move X20, 0x22C2000
	045 Move X20, [X20+2000]
	046 Move [X23+16], X22
	047 Move [X23+24], X21
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X24, 0x259F000
	054 Move W8, [X24+3866]
	055 Compare W8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, 0x22C2000
	058 Move X0, [X0+2000]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X24+3866], W8
	062 Move X0, [X20]
	063 Move X25, 0x22C2000
	064 Move X22, 0x22C2000
	065 Move W8, [X0+224]
	066 Move X25, [X25+2072]
	067 Move X22, [X22+2104]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X20]
	072 Move X8, [X0+184]
	073 Move X0, [X25]
	074 Move X21, [X8]
	075 Call 0x1C17F10
	076 Move X2, [X22]
	077 Move X1, X23
	078 Move X3, X31
	079 Move X22, X0
	080 Call Func`1<Object>..ctor, X0, X1, X2
	081 Move W8, [X24+3866]
	082 Move X23, [X23+16]
	083 Compare W8, 0
	084 JumpIfNotEqual {90}
	085 Move X0, 0x22C2000
	086 Move X0, [X0+2000]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X24+3866], W8
	090 Move X0, [X20]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X20]
	096 Move X8, [X0+184]
	097 Move X8, [X8]
	098 Compare X8, 0
	099 JumpIfEqual {138}
	100 Move W9, [X24+3866]
	101 Move W25, [X8+32]
	102 Compare W9, 0
	103 JumpIfNotEqual {109}
	104 Move X0, X20
	105 Call 0x1C17CF4
	106 Move X0, [X20]
	107 Move W8, 1
	108 Move [X24+3866], W8
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X20]
	114 Move X8, [X0+184]
	115 Move X8, [X8]
	116 Compare X8, 0
	117 JumpIfEqual {138}
	118 Compare X21, 0
	119 JumpIfEqual {138}
	120 Move X9, 0x22C1000
	121 Move X9, [X9+2080]
	122 Move X4, [X8+24]
	123 Or W3, W25, W19
	124 Move X0, X21
	125 Move X5, [X9]
	126 Move X1, X22
	127 Move X2, X23
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X22, [X31+32]
	131 Move X21, [X31+40]
	132 Move X24, [X31+16]
	133 Move X23, [X31+24]
	134 Move X30, [X31+64]
	135 Move X25, [X31+72]
	136 Call 0x229C8B8, X0, X1, X2, X3, X4
	137 Return X0
	138 Call 0x1C17F20

Method: System.Threading.Tasks.Task ContinueWhenAll(System.Threading.Tasks.Task[] precedingTasks, System.Func`2<System.Threading.CancellationToken, System.Threading.Tasks.Task> action, System.Threading.CancellationToken cancellationToken)

Disassembly:
	0x01E3B098 MOV X20, X0
	0x01E3B09C B 0x1E3B0A4
	0x01E3B0A0 MOV X20, X0
	0x01E3B0A4 CMP W1, 0x1
	0x01E3B0A8 B.NE 0x1E3B148
	0x01E3B0AC MOV X0, X20
	0x01E3B0B0 BL 0x3EB1AD0
	0x01E3B0B4 MOV X20, X0
	0x01E3B0B8 ADRP X0, 0x22C0000
	0x01E3B0BC LDR X0, [X0 + 0x8A8]
	0x01E3B0C0 BL 0x1C16D08
	0x01E3B0C4 LDR X8, [X20]
	0x01E3B0C8 LDR X1, [X8]
	0x01E3B0CC BL 0x1C17270
	0x01E3B0D0 MOV W21, W0
	0x01E3B0D4 TBNZ X0, 0x0, 0x1E3B0F4
	0x01E3B0D8 ADRP X0, 0x22B8000
	0x01E3B0DC LDR X0, [X0 + 0x7D0]
	0x01E3B0E0 BL 0x1C16D08
	0x01E3B0E4 LDR X8, [X20]
	0x01E3B0E8 LDR X1, [X8]
	0x01E3B0EC BL 0x1C17270
	0x01E3B0F0 TBZ X0, 0x0, 0x1E3B108
	0x01E3B0F4 LDR X20, [X20]
	0x01E3B0F8 BL 0x3EB1AE0
	0x01E3B0FC TBZ X21, 0x0, 0x1E3B040
	0x01E3B100 MOV X0, X20
	0x01E3B104 BL 0x1C16F18
	0x01E3B108 MOVZ W0, 0x8
	0x01E3B10C BL 0x3EB1AF0
	0x01E3B110 LDR X8, [X20]
	0x01E3B114 STR X8, [X0]
	0x01E3B118 ADRP X1, 0x2079000
	0x01E3B11C ADD X1, X1, 0xE58
	0x01E3B120 MOV X2, X31
	0x01E3B124 BL 0x3EB1B00
	0x01E3B128 B 0x1E3B1D8
	0x01E3B12C B 0x1E3B130
	0x01E3B130 MOV X20, X0
	0x01E3B134 B 0x1E3B148
	0x01E3B138 MOV X21, X1
	0x01E3B13C MOV X20, X0
	0x01E3B140 BL 0x3EB1AE0
	0x01E3B144 MOV W1, W21
	0x01E3B148 MOVZ W8, 0x1
	0x01E3B14C CMP W1, W8
	0x01E3B150 B.NE 0x1E3B1E0
	0x01E3B154 MOV X0, X20
	0x01E3B158 BL 0x3EB1AD0
	0x01E3B15C MOV X20, X0
	0x01E3B160 ADRP X0, 0x22B8000
	0x01E3B164 LDR X0, [X0 + 0x7D0]
	0x01E3B168 BL 0x1C16D08
	0x01E3B16C LDR X8, [X20]
	0x01E3B170 LDR X1, [X8]
	0x01E3B174 BL 0x1C17270
	0x01E3B178 TBZ X0, 0x0, 0x1E3B1B8
	0x01E3B17C LDR X20, [X20]
	0x01E3B180 BL 0x3EB1AE0
	0x01E3B184 MOVN W8, 0x1
	0x01E3B188 STR W8, [X19], #0x8
	0x01E3B18C ADRP X0, 0x22BB000
	0x01E3B190 LDR X0, [X0 + 0x280]
	0x01E3B194 BL 0x1C16D08
	0x01E3B198 LDR W8, [X0 + 0xE0]
	0x01E3B19C CBNZ W8, 0x1E3B1A4
	0x01E3B1A0 BL 0x1C16DFC
	0x01E3B1A4 MOV X0, X19
	0x01E3B1A8 MOV X1, X20
	0x01E3B1AC MOV X2, X31
	0x01E3B1B0 BL 0x32C4908
	0x01E3B1B4 B 0x1E3B064
	0x01E3B1B8 MOVZ W0, 0x8
	0x01E3B1BC BL 0x3EB1AF0
	0x01E3B1C0 LDR X8, [X20]
	0x01E3B1C4 STR X8, [X0]
	0x01E3B1C8 ADRP X1, 0x2079000
	0x01E3B1CC ADD X1, X1, 0xE58
	0x01E3B1D0 MOV X2, X31
	0x01E3B1D4 BL 0x3EB1B00
	0x01E3B1D8 MOV X20, X0
	0x01E3B1DC BL 0x3EB1AE0
	0x01E3B1E0 MOV X0, X20
	0x01E3B1E4 BL 0x1D2C690
	0x01E3B1E8 BL 0x1990590
	0x01E3B1EC STR X30, [X31 - 0x30]!
	0x01E3B1F0 STP X22, X21, [X31 + 0x10]
	0x01E3B1F4 STP X20, X19, [X31 + 0x20]
	0x01E3B1F8 ADRP X21, 0x259D000
	0x01E3B1FC ADRP X22, 0x22BB000
	0x01E3B200 LDRB W8, [X21 + 0xF10]
	0x01E3B204 LDR X22, [X22 + 0x280]
	0x01E3B208 MOV X19, X1
	0x01E3B20C MOV X20, X0
	0x01E3B210 TBNZ X8, 0x0, 0x1E3B228
	0x01E3B214 ADRP X0, 0x22BB000
	0x01E3B218 LDR X0, [X0 + 0x280]
	0x01E3B21C BL 0x1C16CF4
	0x01E3B220 MOVZ W8, 0x1
	0x01E3B224 STRB W8, [X21 + 0xF10]
	0x01E3B228 LDR X0, [X22]
	0x01E3B22C LDR W8, [X0 + 0xE0]
	0x01E3B230 CBNZ W8, 0x1E3B238
	0x01E3B234 BL 0x1C16DFC
	0x01E3B238 ADD X0, X20, 0x8
	0x01E3B23C MOV X1, X19
	0x01E3B240 LDP X20, X19, [X31 + 0x20]
	0x01E3B244 LDP X22, X21, [X31 + 0x10]
	0x01E3B248 MOV X2, X31
	0x01E3B24C LDR X30, [X31], #0x30
	0x01E3B250 B 0x32C477C
	0x01E3B254 SUB X31, X31, 0x90
	0x01E3B258 STR X30, [X31 + 0x60]
	0x01E3B25C STP X22, X21, [X31 + 0x70]
	0x01E3B260 STP X20, X19, [X31 + 0x80]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x259E000
	010 Move X23, 0x22C1000
	011 Move W8, [X20+3845]
	012 Move X23, [X23+2112]
	013 Move X22, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x22C1000
	021 Move X0, [X0+2120]
	022 Call 0x1C17CF4
	023 Move X0, 0x22C1000
	024 Move X0, [X0+2128]
	025 Call 0x1C17CF4
	026 Move X0, 0x22C1000
	027 Move X0, [X0+2000]
	028 Call 0x1C17CF4
	029 Move X0, 0x22C1000
	030 Move X0, [X0+2136]
	031 Call 0x1C17CF4
	032 Move X0, 0x22C1000
	033 Move X0, [X0+2112]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3845], W8
	037 Move X0, [X23]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X23, X0
	041 Call Object..ctor, X0
	042 Compare X23, 0
	043 JumpIfEqual {139}
	044 Move X20, 0x22C1000
	045 Move X20, [X20+2000]
	046 Move [X23+16], X22
	047 Move [X23+24], X21
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X25, 0x259E000
	054 Move W8, [X25+3866]
	055 Compare W8, 0
	056 JumpIfNotEqual {62}
	057 Move X0, 0x22C1000
	058 Move X0, [X0+2000]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X25+3866], W8
	062 Move X0, [X20]
	063 Move X24, 0x22C1000
	064 Move X22, 0x22C1000
	065 Move W8, [X0+224]
	066 Move X24, [X24+2120]
	067 Move X22, [X22+2136]
	068 Compare W8, 0
	069 JumpIfNotEqual {72}
	070 Call 0x1C17DFC
	071 Move X0, [X20]
	072 Move X8, [X0+184]
	073 Move X0, [X24]
	074 Move X21, [X8]
	075 Call 0x1C17F10
	076 Move X2, [X22]
	077 Move X1, X23
	078 Move X3, X31
	079 Move X22, X0
	080 Call Func`2<Object, Object>..ctor, X0, X1, X2
	081 Move W8, [X25+3866]
	082 Move X23, [X23+16]
	083 Compare W8, 0
	084 JumpIfNotEqual {90}
	085 Move X0, 0x22C1000
	086 Move X0, [X0+2000]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X25+3866], W8
	090 Move X0, [X20]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X20]
	096 Move X8, [X0+184]
	097 Move X8, [X8]
	098 Compare X8, 0
	099 JumpIfEqual {139}
	100 Move W9, [X25+3866]
	101 Move W24, [X8+36]
	102 Compare W9, 0
	103 JumpIfNotEqual {109}
	104 Move X0, X20
	105 Call 0x1C17CF4
	106 Move X0, [X20]
	107 Move W8, 1
	108 Move [X25+3866], W8
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {114}
	112 Call 0x1C17DFC
	113 Move X0, [X20]
	114 Move X8, [X0+184]
	115 Move X8, [X8]
	116 Compare X8, 0
	117 JumpIfEqual {139}
	118 Compare X21, 0
	119 JumpIfEqual {139}
	120 Move X9, 0x22C1000
	121 Move X9, [X9+2128]
	122 Move X5, [X8+24]
	123 Move X0, X21
	124 Move X1, X19
	125 Move X6, [X9]
	126 Move X2, X22
	127 Move X3, X23
	128 Move W4, W24
	129 Move X20, [X31+48]
	130 Move X19, [X31+56]
	131 Move X22, [X31+32]
	132 Move X21, [X31+40]
	133 Move X24, [X31+16]
	134 Move X23, [X31+24]
	135 Move X30, [X31+64]
	136 Move X25, [X31+72]
	137 Call 0x229BF24, X0, X1, X2, X3, X4, X5
	138 Return X0
	139 Call 0x1C17F20

Method: System.Threading.Tasks.Task Delay(System.Int32 delay, System.Threading.CancellationToken token = null)

Disassembly:
	0x01E3B26C LDRB W8, [X22 + 0xF11]
	0x01E3B270 LDR X21, [X21 + 0x280]
	0x01E3B274 MOV X20, X1
	0x01E3B278 MOV X19, X0
	0x01E3B27C TBNZ X8, 0x0, 0x1E3B2A0
	0x01E3B280 ADRP X0, 0x22C0000
	0x01E3B284 LDR X0, [X0 + 0x8D8]
	0x01E3B288 BL 0x1C16CF4
	0x01E3B28C ADRP X0, 0x22BB000
	0x01E3B290 LDR X0, [X0 + 0x280]
	0x01E3B294 BL 0x1C16CF4
	0x01E3B298 MOVZ W8, 0x1
	0x01E3B29C STRB W8, [X22 + 0xF11]
	0x01E3B2A0 LDR X0, [X21]
	0x01E3B2A4 MOVI V0.2D, 0x0
	0x01E3B2A8 STR X31, [X31 + 0x50]
	0x01E3B2AC STP V0, V0, [X31 + 0x30]
	0x01E3B2B0 STR V0, [X31 + 0x2]
	0x01E3B2B4 ADRP X21, 0x22C0000
	0x01E3B2B8 LDR W8, [X0 + 0xE0]
	0x01E3B2BC LDR X21, [X21 + 0x8D8]
	0x01E3B2C0 CBNZ W8, 0x1E3B2C8
	0x01E3B2C4 BL 0x1C16DFC
	0x01E3B2C8 ADD X8, X31, 0x8
	0x01E3B2CC MOV X0, X31
	0x01E3B2D0 BL 0x32C4770
	0x01E3B2D4 LDUR V0, [X31 + 0x8]
	0x01E3B2D8 LDR X9, [X31 + 0x18]
	0x01E3B2DC LDR X2, [X21]
	0x01E3B2E0 ADD X8, X31, 0x20
	0x01E3B2E4 STP X19, X20, [X31 + 0x40]
	0x01E3B2E8 ORR X20, X8, 0xF
	0x01E3B2EC MOVN W10, 0x0
	0x01E3B2F0 ADD X1, X31, 0x20
	0x01E3B2F4 MOV X0, X20
	0x01E3B2F8 STUR V0, [X31 + 0x28]
	0x01E3B2FC STR X9, [X31 + 0x38]
	0x01E3B300 STR W10, [X31 + 0x20]
	0x01E3B304 BL 0x2197EB8
	0x01E3B308 MOV X0, X20
	0x01E3B30C MOV X1, X31
	0x01E3B310 BL 0x32C47F8
	0x01E3B314 LDP X20, X19, [X31 + 0x80]
	0x01E3B318 LDP X22, X21, [X31 + 0x70]
	0x01E3B31C LDR X30, [X31 + 0x60]
	0x01E3B320 ADD X31, X31, 0x90
	0x01E3B324 RET
	0x01E3B328 SUB X31, X31, 0x40
	0x01E3B32C STR X30, [X31 + 0x10]
	0x01E3B330 STP X22, X21, [X31 + 0x20]
	0x01E3B334 STP X20, X19, [X31 + 0x30]
	0x01E3B338 ADRP X20, 0x259D000
	0x01E3B33C LDRB W8, [X20 + 0xF12]
	0x01E3B340 MOV X19, X0
	0x01E3B344 TBNZ X8, 0x0, 0x1E3B398
	0x01E3B348 ADRP X0, 0x22C0000
	0x01E3B34C LDR X0, [X0 + 0x8E0]
	0x01E3B350 BL 0x1C16CF4
	0x01E3B354 ADRP X0, 0x22BB000
	0x01E3B358 LDR X0, [X0 + 0x280]
	0x01E3B35C BL 0x1C16CF4
	0x01E3B360 ADRP X0, 0x22C0000
	0x01E3B364 LDR X0, [X0 + 0x7D8]
	0x01E3B368 BL 0x1C16CF4
	0x01E3B36C ADRP X0, 0x22C0000
	0x01E3B370 LDR X0, [X0 + 0x708]
	0x01E3B374 BL 0x1C16CF4
	0x01E3B378 ADRP X0, 0x22B9000
	0x01E3B37C LDR X0, [X0 + 0x7B8]
	0x01E3B380 BL 0x1C16CF4
	0x01E3B384 ADRP X0, 0x22B9000
	0x01E3B388 LDR X0, [X0 + 0x868]
	0x01E3B38C BL 0x1C16CF4
	0x01E3B390 MOVZ W8, 0x1
	0x01E3B394 STRB W8, [X20 + 0xF12]
	0x01E3B398 STRB W31, [X31 + 0x18]
	0x01E3B39C STRB W31, [X31 + 0x8]
	0x01E3B3A0 ADRP X20, 0x22C0000
	0x01E3B3A4 ADRP X21, 0x22B9000
	0x01E3B3A8 LDR W8, [X19]
	0x01E3B3AC LDR X20, [X20 + 0x708]
	0x01E3B3B0 LDR X21, [X21 + 0x868]
	0x01E3B3B4 CBZ W8, 0x1E3B410
	0x01E3B3B8 LDR X0, [X20]
	0x01E3B3BC LDR X22, [X19 + 0x20]
	0x01E3B3C0 LDR W8, [X0 + 0xE0]
	0x01E3B3C4 CBNZ W8, 0x1E3B3CC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x259E000
	007 Move X22, 0x22C1000
	008 Move W8, [X21+3846]
	009 Move X22, [X22+2144]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x22C1000
	017 Move X0, [X0+2152]
	018 Call 0x1C17CF4
	019 Move X0, 0x22C1000
	020 Move X0, [X0+2000]
	021 Call 0x1C17CF4
	022 Move X0, 0x22BA000
	023 Move X0, [X0+1976]
	024 Call 0x1C17CF4
	025 Move X0, 0x22C1000
	026 Move X0, [X0+2160]
	027 Call 0x1C17CF4
	028 Move X0, 0x22C1000
	029 Move X0, [X0+2144]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3846], W8
	033 Move X0, [X22]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X21, X0
	037 Call Object..ctor, X0
	038 Compare X21, 0
	039 JumpIfEqual {107}
	040 Move [X21+16], W20
	041 Move X20, 0x259E000
	042 Move X22, 0x22C1000
	043 Move W8, [X20+3803]
	044 Move X22, [X22+1808]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {54}
	049 Move X0, 0x22C1000
	050 Move X0, [X0+1808]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+3803], W8
	054 Move X8, [X22]
	055 Move X8, [X8+184]
	056 Move W8, [X8]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 2
	059 Compare TEMP, 2
	060 JumpIfEqual {79}
	061 Move X8, 0x22BA000
	062 Move X8, [X8+1976]
	063 Move W20, [X21+16]
	064 Move X0, [X8]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move W0, W20
	070 Move X1, X19
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X2, X31
	076 Move X30, [X31+48]
	077 Call Task.Delay, X0, X1
	078 Return X0
	079 Move X8, 0x22C1000
	080 Move X8, [X8+2152]
	081 Move X0, [X8]
	082 Call 0x1C17F10
	083 Move X8, 0x22C1000
	084 Move X8, [X8+2160]
	085 Move X1, X21
	086 Move X3, X31
	087 Move X20, X0
	088 Move X2, [X8]
	089 Call Func`2<CancellationToken, Object>..ctor, X0, X1, X2
	090 Move X8, 0x22C1000
	091 Move X8, [X8+2000]
	092 Move X0, [X8]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X20
	098 Move X1, X19
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move W2, W31
	104 Move X30, [X31+48]
	105 Call TaskManager.Run, X0, X1, X2
	106 Return X0
	107 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x01E3B3D0 BL 0x364BF5C
	0x01E3B3D4 CBZ X22, 0x1E3B428
	0x01E3B3D8 LDR X8, [X20]
	0x01E3B3DC LDR V0, [X22 + 0x10]
	0x01E3B3E0 MOVZ W9, 0x447A0000
	0x01E3B3E4 FMOV S2, W9
	0x01E3B3E8 LDR X8, [X8 + 0xB8]
	0x01E3B3EC SCVTF S0, S0
	0x01E3B3F0 FDIV S0, S0, S2
	0x01E3B3F4 SCVTF S1, X0
	0x01E3B3F8 LDR X8, [X8]
	0x01E3B3FC SCVTF S3, X8
	0x01E3B400 FMUL S0, S0, S3
	0x01E3B404 FADD S0, S0, S1
	0x01E3B408 STR S0, [X19 + 0x30]
	0x01E3B40C B 0x1E3B4AC
	0x01E3B410 LDRB W8, [X19 + 0x34]
	0x01E3B414 MOVN W9, 0x0
	0x01E3B418 STRB W8, [X31 + 0x18]
	0x01E3B41C STRB W31, [X19 + 0x34]
	0x01E3B420 STR W9, [X19]
	0x01E3B424 B 0x1E3B490
	0x01E3B428 BL 0x1C16F20
	0x01E3B42C B 0x1E3B598
	0x01E3B430 B 0x1E3B598
	0x01E3B434 B 0x1E3B598
	0x01E3B438 ADRP X8, 0x22B9000
	0x01E3B43C LDR X8, [X8 + 0x7B8]
	0x01E3B440 LDR X0, [X8]
	0x01E3B444 LDR W8, [X0 + 0xE0]
	0x01E3B448 CBNZ W8, 0x1E3B450
	0x01E3B44C BL 0x1C16DFC
	0x01E3B450 MOV X0, X31
	0x01E3B454 BL 0x33F2EBC
	0x01E3B458 STRB W0, [X31 + 0x8]
	0x01E3B45C ADD X0, X31, 0x8
	0x01E3B460 MOV X1, X31
	0x01E3B464 BL 0x32C55DC
	0x01E3B468 MOV X8, X0
	0x01E3B46C LDR X0, [X21]
	0x01E3B470 STRB W8, [X31 + 0x18]
	0x01E3B474 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x259E000
	005 Move X19, 0x22BA000
	006 Move W8, [X20+3847]
	007 Move X19, [X19+1976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x22C1000
	013 Move X0, [X0+2000]
	014 Call 0x1C17CF4
	015 Move X0, 0x22BA000
	016 Move X0, [X0+1976]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3847], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x259E000
	026 Move W8, [X20+3867]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x22BA000
	030 Move X0, [X0+1976]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+3867], W8
	034 Move X0, [X19]
	035 Move X20, 0x22C1000
	036 Move W8, [X0+224]
	037 Move X20, [X20+2000]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X19]
	042 Move X8, [X0+184]
	043 Move X9, [X20]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+40]
	047 Move X9, [X9+184]
	048 Move [X9], X8
	049 Move X30, [X31+32]
	050 Return 

