Type: Fusion.TimerDelta

Method: System.Boolean get_IsRunning()

Disassembly:
	0x01E388CC BL 0x1C16DFC
	0x01E388D0 MOV W0, W22
	0x01E388D4 MOV X1, X31
	0x01E388D8 BL 0x331AEAC

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Double Consume()

Disassembly:
	0x01E388DC MOV W22, W0
	0x01E388E0 MOV W0, W24
	0x01E388E4 MOV X1, X31
	0x01E388E8 BL 0x331AEAC
	0x01E388EC AND W8, W22, 0xFFFF
	0x01E388F0 SUBS W23, W8, W0, UXTH
	0x01E388F4 B.EQ 0x1E38914
	0x01E388F8 B 0x1E38980
	0x01E388FC MOV W22, W0
	0x01E38900 MOV W0, W8
	0x01E38904 BL 0x1E38668
	0x01E38908 CMP W22, W0
	0x01E3890C MOV W27, W24
	0x01E38910 B.NE 0x1E38980
	0x01E38914 ADD W27, W27, 0x1
	0x01E38918 CMP W25, W27
	0x01E3891C ADD X26, X26, 0x1
	0x01E38920 B.LE 0x1E38970
	0x01E38924 CMP X26, X19
	0x01E38928 ADD X21, X21, 0x4
	0x01E3892C B.CC 0x1E387FC
	0x01E38930 B 0x1E38970
	0x01E38934 MOV W26, W27
	0x01E38938 B 0x1E38974
	0x01E3893C LDR X0, [X20]
	0x01E38940 ADD X1, X31, 0xC
	0x01E38944 STRH W22, [X31 + 0xC]
	0x01E38948 BL 0x1C16E04
	0x01E3894C ADRP X8, 0x22C3000
	0x01E38950 LDR X8, [X8 + 0x718]
	0x01E38954 MOV X1, X0
	0x01E38958 MOV X2, X31
	0x01E3895C LDR X8, [X8]
	0x01E38960 MOV X0, X8
	0x01E38964 BL 0x321EFD0
	0x01E38968 MOV X1, X31
	0x01E3896C BL 0x1E3B98C
	0x01E38970 LDR W20, [X31 + 0x4]
	0x01E38974 SUB W8, W25, W20
	0x01E38978 SUB W8, W8, W27
	0x01E3897C ADD W23, W8, W26
	0x01E38980 MOV W0, W23
	0x01E38984 LDP X20, X19, [X31 + 0x60]
	0x01E38988 LDP X22, X21, [X31 + 0x50]
	0x01E3898C LDP X24, X23, [X31 + 0x40]
	0x01E38990 LDP X26, X25, [X31 + 0x30]
	0x01E38994 LDP X28, X27, [X31 + 0x20]
	0x01E38998 LDP X29, X30, [X31 + 0x10]
	0x01E3899C ADD X31, X31, 0x70
	0x01E389A0 RET
	0x01E389A4 ADRP X0, 0x22C0000
	0x01E389A8 LDR X0, [X0 + 0x528]
	0x01E389AC BL 0x1C16D08
	0x01E389B0 BL 0x1C16F10
	0x01E389B4 MOV X19, X0
	0x01E389B8 ADRP X0, 0x22C3000
	0x01E389BC LDR X0, [X0 + 0x728]
	0x01E389C0 BL 0x1C16D08
	0x01E389C4 MOV X1, X0
	0x01E389C8 MOV X0, X19
	0x01E389CC MOV X2, X31
	0x01E389D0 BL 0x330E100
	0x01E389D4 ADRP X0, 0x22C3000
	0x01E389D8 LDR X0, [X0 + 0x740]
	0x01E389DC BL 0x1C16D08
	0x01E389E0 MOV X1, X0
	0x01E389E4 MOV X0, X19
	0x01E389E8 BL 0x1C16DEC
	0x01E389EC STR X30, [X31 - 0x20]!
	0x01E389F0 STP X20, X19, [X31 + 0x10]
	0x01E389F4 ADRP X20, 0x25A0000

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x25A1000
	009 Move W8, [X20+3801]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x22BC000
	016 Move X0, [X0+1448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3801], W8
	020 Move X20, 0x25A1000
	021 Move W8, [X20+3864]
	022 Compare W8, 0
	023 JumpIfNotEqual {29}
	024 Move X0, 0x22C4000
	025 Move X0, [X0+1800]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3864], W8
	029 Move W8, [X19+16]
	030 Move X21, 0x22C4000
	031 Move X20, [X19+8]
	032 Move X21, [X21+1800]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X22, 0x25A1000
	035 Move W8, [X22+3863]
	036 Compare W8, 0
	037 JumpIfNotEqual {43}
	038 Move X0, 0x22C4000
	039 Move X0, [X0+1800]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+3863], W8
	043 Move X0, [X21]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X31
	049 Call Stopwatch.GetTimestamp
	050 Move X8, [X19]
	051 Add X9, X0, X20
	052 Subtract X20, X9, X8
	053 Move X0, [X21]
	054 Move X22, 0x22BC000
	055 Move W8, [X0+224]
	056 Move X22, [X22+1448]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X21]
	061 Move X8, [X0+184]
	062 Move X0, [X22]
	063 Move V9, [X19+24]
	064 NotImplemented "Instruction SCVTF not yet implemented."
	065 Move V0, [X8]
	066 Move W8, [X0+224]
	067 NotImplemented "Instruction SCVTF not yet implemented."
	068 NotImplemented "Instruction FDIV not yet implemented."
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Subtract D0, D8, D9
	073 Move D1, X31
	074 Move X0, X31
	075 Call Math.Max, V0, V1
	076 Move [X19+24], D8
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X30, [X31+16]
	082 Move D9, [X31+64]
	083 Move D8, [X31+72]
	084 Return V0

Method: System.Double Peek()

Disassembly:
	0x01E389F8 LDRB W8, [X20 + 0xEF8]
	0x01E389FC MOV W19, W0
	0x01E38A00 TBNZ X8, 0x0, 0x1E38A18
	0x01E38A04 ADRP X0, 0x22C3000
	0x01E38A08 LDR X0, [X0 + 0x748]
	0x01E38A0C BL 0x1C16CF4
	0x01E38A10 MOVZ W8, 0x1
	0x01E38A14 STRB W8, [X20 + 0xEF8]
	0x01E38A18 ADRP X8, 0x22C3000
	0x01E38A1C LDR X8, [X8 + 0x748]
	0x01E38A20 CMP W19, 0x10000
	0x01E38A24 B.CC 0x1E38A50
	0x01E38A28 LDR X3, [X8]
	0x01E38A2C MOVZ W9, 0x3FF0000
	0x01E38A30 MOVN W10, 0x27FF
	0x01E38A34 MOVN W2, 0x23FF
	0x01E38A38 ADD W8, W19, W9
	0x01E38A3C ADD W1, W10, W8, 0xA, LSR
	0x01E38A40 BFM W2, W19, 0x0, 0x9
	0x01E38A44 STR W31, [X31 + 0xC]
	0x01E38A48 ADD X0, X31, 0xC
	0x01E38A4C B 0x1E38A64
	0x01E38A50 LDR X3, [X8]
	0x01E38A54 ADD X0, X31, 0xC
	0x01E38A58 MOV W1, W19
	0x01E38A5C MOV W2, W31
	0x01E38A60 STR W31, [X31 + 0xC]
	0x01E38A64 BL 0x279CBAC
	0x01E38A68 LDR W0, [X31 + 0xC]
	0x01E38A6C LDP X20, X19, [X31 + 0x10]
	0x01E38A70 LDR X30, [X31], #0x20
	0x01E38A74 RET
	0x01E38A78 STR X30, [X31 - 0x30]!
	0x01E38A7C STP X22, X21, [X31 + 0x10]
	0x01E38A80 STP X20, X19, [X31 + 0x20]
	0x01E38A84 ADRP X22, 0x25A0000
	0x01E38A88 ADRP X21, 0x22BD000
	0x01E38A8C LDRB W8, [X22 + 0xEF9]
	0x01E38A90 LDR X21, [X21 + 0x170]
	0x01E38A94 MOV W19, W1
	0x01E38A98 MOV W20, W0
	0x01E38A9C TBNZ X8, 0x0, 0x1E38AB4
	0x01E38AA0 ADRP X0, 0x22BD000
	0x01E38AA4 LDR X0, [X0 + 0x170]
	0x01E38AA8 BL 0x1C16CF4
	0x01E38AAC MOVZ W8, 0x1
	0x01E38AB0 STRB W8, [X22 + 0xEF9]
	0x01E38AB4 LDR X0, [X21]
	0x01E38AB8 LDR W8, [X0 + 0xE0]
	0x01E38ABC CBNZ W8, 0x1E38AC4
	0x01E38AC0 BL 0x1C16DFC
	0x01E38AC4 MOV W0, W20
	0x01E38AC8 MOV X1, X31
	0x01E38ACC BL 0x331BFEC
	0x01E38AD0 AND W8, W20, 0xFFFF
	0x01E38AD4 UBFM W10, W8, 0x16, 0x15
	0x01E38AD8 MOVZ W9, 0x2400
	0x01E38ADC ADD W10, W10, W19, UXTH
	0x01E38AE0 LDP X20, X19, [X31 + 0x20]
	0x01E38AE4 LDP X22, X21, [X31 + 0x10]
	0x01E38AE8 MOVK W9, 0xFCA00000
	0x01E38AEC ADD W9, W10, W9
	0x01E38AF0 ANDS W31, W0, 0x1
	0x01E38AF4 CSEL W0, W9, W8, NE
	0x01E38AF8 LDR X30, [X31], #0x30
	0x01E38AFC RET
	0x01E38B00 SUBS W8, W1, W3
	0x01E38B04 B.GE 0x1E38B10
	0x01E38B08 MOV W0, W31

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x25A1000
	008 Move W8, [X20+3802]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x22BC000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3802], W8
	019 Move X20, 0x25A1000
	020 Move W8, [X20+3864]
	021 Compare W8, 0
	022 JumpIfNotEqual {28}
	023 Move X0, 0x22C4000
	024 Move X0, [X0+1800]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3864], W8
	028 Move W8, [X19+16]
	029 Move X21, 0x22C4000
	030 Move X20, [X19+8]
	031 Move X21, [X21+1800]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X22, 0x25A1000
	034 Move W8, [X22+3863]
	035 Compare W8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, 0x22C4000
	038 Move X0, [X0+1800]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+3863], W8
	042 Move X0, [X21]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X31
	048 Call Stopwatch.GetTimestamp
	049 Move X8, [X19]
	050 Add X9, X0, X20
	051 Subtract X20, X9, X8
	052 Move X0, [X21]
	053 Move X22, 0x22BC000
	054 Move W8, [X0+224]
	055 Move X22, [X22+1448]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X0+184]
	061 Move X0, [X22]
	062 Move V8, [X19+24]
	063 Move X21, [X8]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 NotImplemented "Instruction SCVTF not yet implemented."
	069 NotImplemented "Instruction SCVTF not yet implemented."
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+8]
	075 NotImplemented "Instruction FDIV not yet implemented."
	076 Subtract D0, D0, D8
	077 Move D1, X31
	078 Move X0, X31
	079 Move V8, [X31+48]
	080 Call Math.Max, V0, V1
	081 Return V0

Method: Fusion.TimerDelta StartNew()

Disassembly:
	0x01E38B0C RET
	0x01E38B10 STR X30, [X31 - 0x10]!
	0x01E38B14 ADD X0, X0, W8, 0x2, SXTW
	0x01E38B18 AND W4, W4, 0x1
	0x01E38B1C MOV W1, W3
	0x01E38B20 BL 0x1E38430
	0x01E38B24 CMP W0, 0x0
	0x01E38B28 CSET W0, EQ
	0x01E38B2C LDR X30, [X31], #0x10
	0x01E38B30 RET
	0x01E38B34 STR X30, [X31 - 0x30]!
	0x01E38B38 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X19, X8
	005 NotImplemented "Instruction MOVI not yet implemented."
	006 Add X8, X31, 0
	007 Move [X31], V0
	008 Move [X31+8], V0
	009 Call Timer.StartNew
	010 Move V1, [X31]
	011 Move V0, [X31+16]
	012 Move [X19], V1
	013 Move [X19+8], V0
	014 Move X30, [X31+32]
	015 Move X19, [X31+40]
	016 Add X31, X31, 48
	017 Return X0

