Type: Fusion.CRC64

Method: System.UInt64 Compute(System.Byte* data, System.Int32 length)

Disassembly:
	0x01E32F48 STRB W8, [X0 + 0x14]
	0x01E32F4C RET
	0x01E32F50 LDRB W0, [X0 + 0x15]
	0x01E32F54 RET
	0x01E32F58 AND W8, W1, 0x1
	0x01E32F5C STRB W8, [X0 + 0x15]
	0x01E32F60 RET
	0x01E32F64 LDRB W0, [X0 + 0x16]
	0x01E32F68 RET
	0x01E32F6C AND W8, W1, 0x1
	0x01E32F70 STRB W8, [X0 + 0x16]
	0x01E32F74 RET
	0x01E32F78 MOVZ W8, 0x1
	0x01E32F7C MOV X1, X31
	0x01E32F80 STRB W8, [X0 + 0x15]
	0x01E32F84 B 0x3C303D4
	0x01E32F88 STP X30, X21, [X31 - 0x20]!
	0x01E32F8C STP X20, X19, [X31 + 0x10]
	0x01E32F90 MOV X20, X1
	0x01E32F94 MOV X1, X31
	0x01E32F98 MOV X19, X2
	0x01E32F9C MOV X21, X0
	0x01E32FA0 BL 0x3C303D4
	0x01E32FA4 STR X20, [X21 + 0x18]
	0x01E32FA8 STR X19, [X21 + 0x28]
	0x01E32FAC LDP X20, X19, [X31 + 0x10]
	0x01E32FB0 MOVN W8, 0x270F

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25A7000
	007 Move X22, 0x22CA000
	008 Move W8, [X21+3739]
	009 Move X22, [X22+1376]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x22CA000
	017 Move X0, [X0+1376]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3739], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X1, X20
	027 Move W3, W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X0, X31
	033 Move W2, W31
	034 Move X30, [X31+48]

Method: System.UInt64 Compute(System.UInt64 crc, System.Byte* data, System.Int32 offset, System.Int32 length)

Disassembly:
	0x01E32FB4 STR W8, [X21 + 0x10]
	0x01E32FB8 LDP X30, X21, [X31], #0x20
	0x01E32FBC RET
	0x01E32FC0 STP X30, X19, [X31 - 0x10]!
	0x01E32FC4 MOV X1, X31
	0x01E32FC8 MOV X19, X0
	0x01E32FCC BL 0x3C303D4
	0x01E32FD0 MOVN W8, 0x2AF7
	0x01E32FD4 STR W8, [X19 + 0x10]
	0x01E32FD8 LDP X30, X19, [X31], #0x10
	0x01E32FDC RET
	0x01E32FE0 LDRB W0, [X0 + 0x14]
	0x01E32FE4 RET
	0x01E32FE8 AND W8, W1, 0x1
	0x01E32FEC STRB W8, [X0 + 0x14]
	0x01E32FF0 RET
	0x01E32FF4 STP X30, X19, [X31 - 0x10]!
	0x01E32FF8 MOVZ W8, 0x1
	0x01E32FFC MOV X1, X31
	0x01E33000 MOV X19, X0
	0x01E33004 STRB W8, [X0 + 0x14]
	0x01E33008 BL 0x3C303D4
	0x01E3300C MOVN W8, 0x2327
	0x01E33010 STR W8, [X19 + 0x10]
	0x01E33014 LDP X30, X19, [X31], #0x10
	0x01E33018 RET
	0x01E3301C MOV X1, X31
	0x01E33020 B 0x3C303D4
	0x01E33024 MOV X1, X31
	0x01E33028 B 0x3C303D4
	0x01E3302C STP X30, X21, [X31 - 0x20]!
	0x01E33030 STP X20, X19, [X31 + 0x10]
	0x01E33034 MOV W20, W1
	0x01E33038 MOV X1, X31
	0x01E3303C MOV X19, X2
	0x01E33040 MOV X21, X0
	0x01E33044 BL 0x3C303D4
	0x01E33048 STR W20, [X21 + 0x14]
	0x01E3304C STR X19, [X21 + 0x18]
	0x01E33050 LDP X20, X19, [X31 + 0x10]
	0x01E33054 LDP X30, X21, [X31], #0x20
	0x01E33058 RET
	0x01E3305C LDR W0, [X0 + 0x14]
	0x01E33060 RET
	0x01E33064 LDR X0, [X0 + 0x18]
	0x01E33068 RET
	0x01E3306C LDR V0, [X0 + 0x18]
	0x01E33070 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x25A7000
	008 Move W8, [X23+3740]
	009 Move W19, W3
	010 Move W21, W2
	011 Move X22, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x22CA000
	018 Move X0, [X0+1376]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+3740], W8
	022 Add W8, W19, W21
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X23, 0x22CA000
	025 Move X23, [X23+1376]
	026 Add X21, X22, W21
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X23]
	033 Move X8, [X0+184]
	034 Move X8, [X8]
	035 Compare X8, 0
	036 JumpIfEqual {55}
	037 Move W9, [X21]
	038 Move W10, [X8+24]
	039 And X11, X20, 255
	040 Xor X9, X11, X9
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X8, X8, X9
	043 Move X8, [X8+32]
	044 Subtract W19, W19, 1
	045 Add X21, X21, 1
	046 Xor X20, X8, X20
	047 Move X0, X20
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return X0
	055 Call 0x1C17F20
	056 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x01E33074 LDR V0, [X0 + 0x20]
	0x01E33078 RET
	0x01E3307C STP D9, D8, [X31 - 0x20]!
	0x01E33080 STP X30, X19, [X31 + 0x10]
	0x01E33084 MOVZ W8, 0x101
	0x01E33088 MOVZ W9, 0x1
	0x01E3308C MOV X1, X31
	0x01E33090 MOV V8.16B, V1.16B
	0x01E33094 MOV V9.16B, V0.16B
	0x01E33098 MOV X19, X0
	0x01E3309C STRH W8, [X0 + 0x28]
	0x01E330A0 STRB W9, [X0 + 0x2A]
	0x01E330A4 BL 0x3C303D4
	0x01E330A8 STP D8, D9, [X19 + 0x18]
	0x01E330AC LDP X30, X19, [X31 + 0x10]
	0x01E330B0 LDP D9, D8, [X31], #0x20
	0x01E330B4 RET
	0x01E330B8 LDRB W0, [X0 + 0x14]
	0x01E330BC RET
	0x01E330C0 AND W8, W1, 0x1
	0x01E330C4 STRB W8, [X0 + 0x14]
	0x01E330C8 RET
	0x01E330CC LDRB W0, [X0 + 0x15]
	0x01E330D0 RET
	0x01E330D4 AND W8, W1, 0x1
	0x01E330D8 STRB W8, [X0 + 0x15]
	0x01E330DC RET
	0x01E330E0 STP X30, X19, [X31 - 0x10]!
	0x01E330E4 MOVZ W8, 0x101
	0x01E330E8 MOV X1, X31
	0x01E330EC MOV X19, X0
	0x01E330F0 STRH W8, [X0 + 0x14]
	0x01E330F4 BL 0x3C303D4
	0x01E330F8 MOVN W8, 0x270F
	0x01E330FC STR W8, [X19 + 0x10]
	0x01E33100 LDP X30, X19, [X31], #0x10
	0x01E33104 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x25A6000
	007 Move X22, 0x22C9000
	008 Move X19, 0x22C9000
	009 Move X20, 0x22C9000
	010 Move W8, [X21+3741]
	011 Move X22, [X22+1384]
	012 Move X19, [X19+1392]
	013 Move X20, [X20+1376]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x22C9000
	019 Move X0, [X0+1376]
	020 Call 0x1C17CF4
	021 Move X0, 0x22C9000
	022 Move X0, [X0+1392]
	023 Call 0x1C17CF4
	024 Move X0, 0x22C9000
	025 Move X0, [X0+1384]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3741], W8
	029 Move X0, [X22]
	030 Move W1, 256
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

