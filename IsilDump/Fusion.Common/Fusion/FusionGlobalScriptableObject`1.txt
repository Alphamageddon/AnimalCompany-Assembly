Type: Fusion.FusionGlobalScriptableObject`1

Method: System.Boolean get_IsGlobal()

Disassembly:
	0x02D42884 LDR X0, [X8 + 0x20]
	0x02D42888 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_IsGlobal(System.Boolean value)

Disassembly:
	0x02D4288C LDR X23, [X23 + 0x598]
	0x02D42890 TBNZ X8, 0x0, 0x2D42898
	0x02D42894 BL 0x1C5C684

ISIL:
	001 And W8, W1, 1
	002 Move [X0+24], W8
	003 Return 

Method: System.Void OnLoadedAsGlobal()

Disassembly:
	0x02D42898 LDR X8, [X23]

ISIL:
	001 Return 

Method: System.Void OnUnloadedAsGlobal(System.Boolean destroyed)

Disassembly:
	0x02D4289C LDR X9, [X0 + 0xB8]

ISIL:
	001 Return 

Method: System.String get_LogPrefix()

Disassembly:
	0x02D428A0 LDR W10, [X8 + 0xE0]
	0x02D428A4 LDR X22, [X9]
	0x02D428A8 CBNZ W10, 0x2D428B4
	0x02D428AC MOV X0, X8
	0x02D428B0 BL 0x1C16DFC
	0x02D428B4 MOV X0, X22
	0x02D428B8 MOV X1, X31
	0x02D428BC BL 0x3C38948
	0x02D428C0 LDR X8, [X19 + 0x20]
	0x02D428C4 MOV W22, W0
	0x02D428C8 LDRB W9, [X8 + 0x135]
	0x02D428CC TBNZ X9, 0x0, 0x2D428DC
	0x02D428D0 MOV X0, X8
	0x02D428D4 BL 0x1C5C684
	0x02D428D8 MOV X8, X0
	0x02D428DC LDR X8, [X8 + 0xC0]
	0x02D428E0 TBNZ X22, 0x0, 0x2D42A54
	0x02D428E4 LDR X0, [X8 + 0x20]
	0x02D428E8 LDRB W8, [X0 + 0x135]
	0x02D428EC TBNZ X8, 0x0, 0x2D428F4
	0x02D428F0 BL 0x1C5C684
	0x02D428F4 LDR X0, [X23]
	0x02D428F8 LDR W8, [X0 + 0xE0]
	0x02D428FC CBNZ W8, 0x2D42904
	0x02D42900 BL 0x1C16DFC
	0x02D42904 MOV X0, X21
	0x02D42908 MOV X1, X31
	0x02D4290C BL 0x3C38948
	0x02D42910 TBZ X0, 0x0, 0x2D42A44
	0x02D42914 LDR X0, [X19 + 0x20]
	0x02D42918 LDRB W8, [X0 + 0x135]
	0x02D4291C TBNZ X8, 0x0, 0x2D42924
	0x02D42920 BL 0x1C5C684
	0x02D42924 LDR X8, [X0 + 0xC0]
	0x02D42928 LDR X0, [X8 + 0x20]
	0x02D4292C LDRB W8, [X0 + 0x135]
	0x02D42930 TBNZ X8, 0x0, 0x2D42938
	0x02D42934 BL 0x1C5C684
	0x02D42938 LDR X8, [X0 + 0xB8]
	0x02D4293C STR X21, [X8]
	0x02D42940 LDR X0, [X19 + 0x20]
	0x02D42944 LDRB W8, [X0 + 0x135]
	0x02D42948 TBNZ X8, 0x0, 0x2D42950
	0x02D4294C BL 0x1C5C684
	0x02D42950 LDR X8, [X0 + 0xC0]
	0x02D42954 LDR X0, [X8 + 0x20]
	0x02D42958 LDRB W8, [X0 + 0x135]
	0x02D4295C TBNZ X8, 0x0, 0x2D42964
	0x02D42960 BL 0x1C5C684
	0x02D42964 LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x169A000
	005 Move W8, [X20+2125]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x13B2000
	012 Move X0, [X0+1728]
	013 Call 0x1C17CF4
	014 Move X0, 0x13DD000
	015 Move X0, [X0+3664]
	016 Call 0x1C17CF4
	017 Move X0, 0x13DD000
	018 Move X0, [X0+3672]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2125], W8
	022 Move X0, [X19+32]
	023 Move X19, 0x13B2000
	024 Move W8, [X0+309]
	025 Move X19, [X19+1728]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X19]
	032 Move X9, [X0+192]
	033 Move W10, [X8+224]
	034 Move X19, [X9+8]
	035 Compare W10, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X1, X31
	041 Call Type.GetTypeFromHandle, X0
	042 Compare X0, 0
	043 JumpIfEqual {62}
	044 Move X8, [X0]
	045 Move X19, 0x13DD000
	046 Move X20, 0x13DD000
	047 Move X9, [X8+424]
	048 Move X1, [X8+432]
	049 Move X19, [X19+3672]
	050 Move X20, [X20+3664]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, [X19]
	053 Move X2, [X20]
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X1, X0
	057 Move X0, X8
	058 Move X3, X31
	059 Move X30, [X31+32]
	060 Call String.Concat, X0, X1, X2
	061 Return X0
	062 Call 0x1C17F20

Method: System.String AsId(Fusion.FusionGlobalScriptableObject`1<T> obj)

Disassembly:
	0x02D42968 LDRB W8, [X0 + 0x135]
	0x02D4296C TBNZ X8, 0x0, 0x2D42974
	0x02D42970 BL 0x1C5C684
	0x02D42974 LDR X8, [X0 + 0xC0]
	0x02D42978 LDR X0, [X8 + 0x20]
	0x02D4297C LDRB W8, [X0 + 0x135]
	0x02D42980 TBNZ X8, 0x0, 0x2D42988
	0x02D42984 BL 0x1C5C684
	0x02D42988 LDR X8, [X0 + 0xB8]
	0x02D4298C STR X20, [X8 + 0x8]
	0x02D42990 LDR X0, [X19 + 0x20]
	0x02D42994 LDRB W8, [X0 + 0x135]
	0x02D42998 TBNZ X8, 0x0, 0x2D429A0
	0x02D4299C BL 0x1C5C684
	0x02D429A0 LDR X8, [X0 + 0xC0]
	0x02D429A4 LDR X0, [X8 + 0x20]
	0x02D429A8 LDRB W8, [X0 + 0x135]
	0x02D429AC TBNZ X8, 0x0, 0x2D429B4
	0x02D429B0 BL 0x1C5C684
	0x02D429B4 LDR X0, [X19 + 0x20]
	0x02D429B8 LDRB W8, [X0 + 0x135]
	0x02D429BC TBNZ X8, 0x0, 0x2D429C4
	0x02D429C0 BL 0x1C5C684
	0x02D429C4 LDR X8, [X0 + 0xC0]
	0x02D429C8 LDR X0, [X8 + 0x20]
	0x02D429CC LDRB W8, [X0 + 0x135]
	0x02D429D0 TBNZ X8, 0x0, 0x2D429D8
	0x02D429D4 BL 0x1C5C684
	0x02D429D8 LDR X8, [X0 + 0xB8]
	0x02D429DC LDR X20, [X8]
	0x02D429E0 CBZ X20, 0x2D42AF0
	0x02D429E4 LDR X0, [X19 + 0x20]
	0x02D429E8 LDRB W8, [X0 + 0x135]
	0x02D429EC TBNZ X8, 0x0, 0x2D429F8
	0x02D429F0 BL 0x1C5C684
	0x02D429F4 LDR X0, [X19 + 0x20]
	0x02D429F8 MOVZ W8, 0x1
	0x02D429FC STRB W8, [X20 + 0x18]
	0x02D42A00 LDRB W8, [X0 + 0x135]
	0x02D42A04 TBNZ X8, 0x0, 0x2D42A0C
	0x02D42A08 BL 0x1C5C684
	0x02D42A0C LDR X8, [X0 + 0xC0]
	0x02D42A10 LDR X0, [X8 + 0x20]
	0x02D42A14 LDRB W8, [X0 + 0x135]
	0x02D42A18 TBNZ X8, 0x0, 0x2D42A20
	0x02D42A1C BL 0x1C5C684
	0x02D42A20 LDR X8, [X0 + 0xB8]
	0x02D42A24 LDR X0, [X8]
	0x02D42A28 CBZ X0, 0x2D42AF0
	0x02D42A2C LDR X8, [X0]
	0x02D42A30 LDP X20, X19, [X31 + 0x20]
	0x02D42A34 LDP X22, X21, [X31 + 0x10]
	0x02D42A38 LDP X2, X1, [X8 + 0x178]
	0x02D42A3C LDP X30, X23, [X31], #0x30
	0x02D42A40 BR X2
	0x02D42A44 LDP X20, X19, [X31 + 0x20]
	0x02D42A48 LDP X22, X21, [X31 + 0x10]
	0x02D42A4C LDP X30, X23, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x169A000
	007 Move X21, 0x13B2000
	008 Move W8, [X20+2126]
	009 Move X21, [X21+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x13B2000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0x13B2000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x13B2000
	022 Move X0, [X0+2096]
	023 Call 0x1C17CF4
	024 Move X0, 0x13DD000
	025 Move X0, [X0+3680]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2126], W8
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X1, X31
	036 Call Object.op_Implicit, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {60}
	041 Compare X19, 0
	042 JumpIfEqual {69}
	043 Move X0, X19
	044 Move X1, X31
	045 Call Object.GetInstanceID, X0
	046 Move X8, 0x13B2000
	047 Move X8, [X8+1880]
	048 Move [X31+12], W0
	049 Add X1, X31, 12
	050 Move X8, [X8]
	051 Move X0, X8
	052 Call 0x1C17E04
	053 Move X8, 0x13DD000
	054 Move X8, [X8+3680]
	055 Move X1, X0
	056 Move X2, X31
	057 Move X8, [X8]
	058 Move X0, X8
	059 Call String.Format, X0, X1
	060 Move X8, 0x13B2000
	061 Move X8, [X8+2096]
	062 Move X0, [X8]
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+16]
	066 Move X21, [X31+24]
	067 Add X31, X31, 48
	068 Return X0
	069 Call 0x1C17F20

Method: System.Void OnDisable()

Disassembly:
	0x02D42A50 RET
	0x02D42A54 ADRP X0, 0x13B1000
	0x02D42A58 LDR X20, [X8 + 0x8]
	0x02D42A5C LDR X0, [X0 + 0x6C0]
	0x02D42A60 BL 0x1C16D08
	0x02D42A64 BL 0x19903D0
	0x02D42A68 MOV X0, X20
	0x02D42A6C MOV X1, X31
	0x02D42A70 BL 0x338C698
	0x02D42A74 MOV X20, X0
	0x02D42A78 BL 0x19903C0
	0x02D42A7C LDR X8, [X20]
	0x02D42A80 MOV X0, X20
	0x02D42A84 LDP X9, X1, [X8 + 0x1A8]
	0x02D42A88 BLR X9
	0x02D42A8C MOV X20, X0
	0x02D42A90 ADRP X0, 0x13DC000
	0x02D42A94 LDR X0, [X0 + 0xEC8]
	0x02D42A98 BL 0x1C16D08
	0x02D42A9C MOV X21, X0
	0x02D42AA0 ADRP X0, 0x13DC000
	0x02D42AA4 LDR X0, [X0 + 0xED0]
	0x02D42AA8 BL 0x1C16D08
	0x02D42AAC MOV X2, X0
	0x02D42AB0 MOV X0, X21
	0x02D42AB4 MOV X1, X20
	0x02D42AB8 MOV X3, X31
	0x02D42ABC BL 0x32274B8
	0x02D42AC0 MOV X20, X0
	0x02D42AC4 ADRP X0, 0x13B1000
	0x02D42AC8 LDR X0, [X0 + 0x5B0]
	0x02D42ACC BL 0x1C16D08
	0x02D42AD0 BL 0x1C16F10
	0x02D42AD4 MOV X1, X20
	0x02D42AD8 MOV X2, X31
	0x02D42ADC MOV X21, X0
	0x02D42AE0 BL 0x337DF1C
	0x02D42AE4 MOV X0, X21
	0x02D42AE8 MOV X1, X19
	0x02D42AEC BL 0x1C16DEC
	0x02D42AF0 BL 0x1C16F20
	0x02D42AF4 STP X30, X21, [X31 - 0x20]!
	0x02D42AF8 STP X20, X19, [X31 + 0x10]
	0x02D42AFC ADRP X20, 0x1699000
	0x02D42B00 ADRP X21, 0x13B9000
	0x02D42B04 LDRB W8, [X20 + 0x856]
	0x02D42B08 LDR X21, [X21 + 0x610]
	0x02D42B0C MOV X19, X0
	0x02D42B10 TBNZ X8, 0x0, 0x2D42B28
	0x02D42B14 ADRP X0, 0x13B9000
	0x02D42B18 LDR X0, [X0 + 0x610]
	0x02D42B1C BL 0x1C16CF4
	0x02D42B20 MOVZ W8, 0x1
	0x02D42B24 STRB W8, [X20 + 0x856]
	0x02D42B28 LDR X0, [X21]
	0x02D42B2C LDR W8, [X0 + 0xE0]
	0x02D42B30 CBNZ W8, 0x2D42B38
	0x02D42B34 BL 0x1C16DFC
	0x02D42B38 MOV X0, X19
	0x02D42B3C LDP X20, X19, [X31 + 0x10]
	0x02D42B40 MOV X1, X31
	0x02D42B44 LDP X30, X21, [X31], #0x20
	0x02D42B48 B 0x1E343B0
	0x02D42B4C STP X30, X23, [X31 - 0x30]!
	0x02D42B50 STP X22, X21, [X31 + 0x10]
	0x02D42B54 STP X20, X19, [X31 + 0x20]
	0x02D42B58 ADRP X23, 0x1699000
	0x02D42B5C ADRP X22, 0x13DA000
	0x02D42B60 LDRB W8, [X23 + 0x857]
	0x02D42B64 LDR X22, [X22 + 0x820]
	0x02D42B68 MOV W21, W2
	0x02D42B6C MOV W20, W1
	0x02D42B70 MOV X19, X0
	0x02D42B74 TBNZ X8, 0x0, 0x2D42B8C
	0x02D42B78 ADRP X0, 0x13DA000
	0x02D42B7C LDR X0, [X0 + 0x820]
	0x02D42B80 BL 0x1C16CF4
	0x02D42B84 MOVZ W8, 0x1
	0x02D42B88 STRB W8, [X23 + 0x857]
	0x02D42B8C MOV X0, X19
	0x02D42B90 MOV X1, X31
	0x02D42B94 BL 0x33BDD8C
	0x02D42B98 MOVZ W8, 0x2
	0x02D42B9C STP W20, W8, [X19 + 0x18]
	0x02D42BA0 LDR X0, [X22]
	0x02D42BA4 LDR W8, [X0 + 0xE0]
	0x02D42BA8 CBNZ W8, 0x2D42BB0
	0x02D42BAC BL 0x1C16DFC
	0x02D42BB0 CMP W21, 0x0
	0x02D42BB4 CSET W2, EQ
	0x02D42BB8 MOVZ W1, 0x2
	0x02D42BBC MOV W0, W20
	0x02D42BC0 MOV X3, X31
	0x02D42BC4 BL 0x3D1F420
	0x02D42BC8 STR X0, [X19 + 0x10]
	0x02D42BCC LDP X20, X19, [X31 + 0x20]
	0x02D42BD0 LDP X22, X21, [X31 + 0x10]
	0x02D42BD4 LDP X30, X23, [X31], #0x30
	0x02D42BD8 RET
	0x02D42BDC STP X30, X21, [X31 - 0x20]!
	0x02D42BE0 STP X20, X19, [X31 + 0x10]
	0x02D42BE4 ADRP X21, 0x1699000
	0x02D42BE8 ADRP X20, 0x13DA000
	0x02D42BEC LDRB W8, [X21 + 0x858]
	0x02D42BF0 LDR X20, [X20 + 0x820]
	0x02D42BF4 MOV X19, X0
	0x02D42BF8 TBNZ X8, 0x0, 0x2D42C10
	0x02D42BFC ADRP X0, 0x13DA000
	0x02D42C00 LDR X0, [X0 + 0x820]
	0x02D42C04 BL 0x1C16CF4
	0x02D42C08 MOVZ W8, 0x1
	0x02D42C0C STRB W8, [X21 + 0x858]
	0x02D42C10 LDR X0, [X20]
	0x02D42C14 LDR X19, [X19 + 0x10]
	0x02D42C18 LDR W8, [X0 + 0xE0]
	0x02D42C1C CBNZ W8, 0x2D42C24
	0x02D42C20 BL 0x1C16DFC
	0x02D42C24 MOV X0, X19
	0x02D42C28 LDP X20, X19, [X31 + 0x10]
	0x02D42C2C MOV X1, X31
	0x02D42C30 LDP X30, X21, [X31], #0x20
	0x02D42C34 B 0x3D1F474
	0x02D42C38 SUB X31, X31, 0x60
	0x02D42C3C STP X30, X27, [X31 + 0x10]
	0x02D42C40 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x169A000
	008 Move W8, [X21+2127]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x13BA000
	016 Move X0, [X0+2224]
	017 Call 0x1C17CF4
	018 Move X0, 0x13DD000
	019 Move X0, [X0+3688]
	020 Call 0x1C17CF4
	021 Move X0, 0x13DD000
	022 Move X0, [X0+3696]
	023 Call 0x1C17CF4
	024 Move X0, 0x13DD000
	025 Move X0, [X0+3704]
	026 Call 0x1C17CF4
	027 Move X0, 0x13DD000
	028 Move X0, [X0+3712]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2127], W8
	032 Move X8, [X20+32]
	033 Move X22, 0x13DD000
	034 Move W9, [X19+24]
	035 Move X8, [X8+192]
	036 Move X22, [X22+3712]
	037 Compare W9, 0
	038 JumpIfEqual {61}
	039 Move X0, [X8+32]
	040 Move W9, [X0+309]
	041 Move TEMP, X9
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Call 0x1C5D684
	046 Move X8, [X20+32]
	047 Move X8, [X8+192]
	048 Move X9, [X0+184]
	049 Move X0, [X8+24]
	050 Move X23, [X9+8]
	051 Call 0x2D428A0
	052 Move X21, X0
	053 Move X0, X19
	054 Call 0x2D42968, X0
	055 Move X1, [X22]
	056 Move X2, X0
	057 Compare X23, 0
	058 JumpIfEqual {93}
	059 Move X8, 0x13DD000
	060 Move X8, [X8+3688]
	061 Move X0, [X8+24]
	062 Call 0x2D428A0
	063 Move X20, X0
	064 Move X0, X19
	065 Call 0x2D42968, X0
	066 Move X8, 0x13DD000
	067 Move X1, [X22]
	068 Move X8, [X8+3696]
	069 Move X2, X0
	070 Move X0, X20
	071 Move X4, X31
	072 Move X3, [X8]
	073 Call String.Concat, X0, X1, X2, X3
	074 Move X8, 0x13BA000
	075 Move X8, [X8+2224]
	076 Move X19, X0
	077 Move X8, [X8]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X1, X31
	089 Move X30, [X31+48]
	090 Move X23, [X31+56]
	091 Call Log.Trace, X0
	092 Return 
	093 Move X8, 0x13DD000
	094 Move X8, [X8+3704]
	095 Move X3, [X8]
	096 Move X0, X21
	097 Move X4, X31
	098 Call String.Concat, X0, X1, X2, X3
	099 Move X8, 0x13BA000
	100 Move X8, [X8+2224]
	101 Move X21, X0
	102 Move X8, [X8]
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X0, X21
	109 Move X1, X31
	110 Call Log.Trace, X0
	111 Move X8, [X20+32]
	112 Move X8, [X8+192]
	113 Move X0, [X8+32]
	114 Move W8, [X0+309]
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {120}
	119 Call 0x1C5D684
	120 Move X8, [X0+184]
	121 Move [X8], X31
	122 Move X8, [X20+32]
	123 Move X8, [X8+192]
	124 Move X0, [X8+32]
	125 Move W9, [X0+309]
	126 Move TEMP, X9
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {133}
	130 Call 0x1C5D684
	131 Move X8, [X20+32]
	132 Move X8, [X8+192]
	133 Move X9, [X0+184]
	134 Move [X9+8], X31
	135 Move X0, [X8+32]
	136 Move W8, [X0+309]
	137 Move TEMP, X8
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {142}
	141 Call 0x1C5D684
	142 Move X8, [X19]
	143 Move [X19+24], W31
	144 Move X0, X19
	145 Move X20, [X31+32]
	146 Move X19, [X31+40]
	147 Move X3, [X8+392]
	148 Move X2, [X8+400]
	149 Move X22, [X31+16]
	150 Move X21, [X31+24]
	151 Move W1, 1
	152 Move X30, [X31+48]
	153 Move X23, [X31+56]
	154 CallNoReturn X3

Method: T get_GlobalInternal()

Disassembly:
	0x02D42C44 STP X24, X23, [X31 + 0x30]
	0x02D42C48 STP X22, X21, [X31 + 0x40]
	0x02D42C4C STP X20, X19, [X31 + 0x50]
	0x02D42C50 ADRP X27, 0x1699000
	0x02D42C54 STP X1, X2, [X31]
	0x02D42C58 ADRP X26, 0x13DC000
	0x02D42C5C ADRP X25, 0x13DC000
	0x02D42C60 ADRP X24, 0x13DA000
	0x02D42C64 LDRB W8, [X27 + 0x859]
	0x02D42C68 LDR X26, [X26 + 0xED8]
	0x02D42C6C LDR X25, [X25 + 0xEE0]
	0x02D42C70 LDR X24, [X24 + 0x820]
	0x02D42C74 MOV W19, W4
	0x02D42C78 MOV W20, W3
	0x02D42C7C MOV X21, X2
	0x02D42C80 MOV X22, X1
	0x02D42C84 MOV X23, X0
	0x02D42C88 TBNZ X8, 0x0, 0x2D42CB8
	0x02D42C8C ADRP X0, 0x13DC000
	0x02D42C90 LDR X0, [X0 + 0xED8]
	0x02D42C94 BL 0x1C16CF4
	0x02D42C98 ADRP X0, 0x13DC000
	0x02D42C9C LDR X0, [X0 + 0xEE0]
	0x02D42CA0 BL 0x1C16CF4
	0x02D42CA4 ADRP X0, 0x13DA000
	0x02D42CA8 LDR X0, [X0 + 0x820]
	0x02D42CAC BL 0x1C16CF4
	0x02D42CB0 MOVZ W8, 0x1
	0x02D42CB4 STRB W8, [X27 + 0x859]
	0x02D42CB8 LDR X2, [X26]
	0x02D42CBC LDR X23, [X23 + 0x10]
	0x02D42CC0 MOV X0, X22
	0x02D42CC4 MOV X1, X21
	0x02D42CC8 BL 0x22232A4
	0x02D42CCC LDR X1, [X25]
	0x02D42CD0 MOV X21, X0
	0x02D42CD4 ADD X0, X31, 0x0
	0x02D42CD8 BL 0x2405704
	0x02D42CDC LDR X8, [X24]
	0x02D42CE0 MOV W22, W0
	0x02D42CE4 LDR W9, [X8 + 0xE0]
	0x02D42CE8 CBNZ W9, 0x2D42CF4
	0x02D42CEC MOV X0, X8
	0x02D42CF0 BL 0x1C16DFC
	0x02D42CF4 MOV X0, X23
	0x02D42CF8 MOV X1, X21
	0x02D42CFC MOV W2, W22
	0x02D42D00 MOV W3, W20
	0x02D42D04 MOV W4, W19
	0x02D42D08 MOV X5, X31
	0x02D42D0C BL 0x3D1F4B0
	0x02D42D10 LDP X20, X19, [X31 + 0x50]
	0x02D42D14 LDP X22, X21, [X31 + 0x40]
	0x02D42D18 LDP X24, X23, [X31 + 0x30]
	0x02D42D1C LDP X26, X25, [X31 + 0x20]
	0x02D42D20 LDP X30, X27, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+32]
	007 Move W8, [X0+309]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {13}
	012 Call 0x1C5D684
	013 Move X8, [X0+192]
	014 Move X0, [X8+72]
	015 Call 0x2D43210
	016 Compare X0, 0
	017 JumpIfEqual {23}
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return X0
	023 Move X0, [X19+32]
	024 Call 0x199C99C
	025 Move X8, [X0+192]
	026 Move X0, 0x13B2000
	027 Move X20, [X8+8]
	028 Move X0, [X0+1728]
	029 Call 0x1C17D08
	030 Call 0x19913D0
	031 Move X0, X20
	032 Move X1, X31
	033 Call Type.GetTypeFromHandle, X0
	034 Move X20, X0
	035 Call 0x19913C0
	036 Move X8, [X20]
	037 Move X0, X20
	038 Move X9, [X8+424]
	039 Move X1, [X8+432]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X20, X0
	042 Move X0, 0x13DD000
	043 Move X0, [X0+3720]
	044 Call 0x1C17D08
	045 Move X21, X0
	046 Move X0, 0x13DD000
	047 Move X0, [X0+3728]
	048 Call 0x1C17D08
	049 Move X2, X0
	050 Move X0, X21
	051 Move X1, X20
	052 Move X3, X31
	053 Call String.Concat, X0, X1, X2
	054 Move X20, X0
	055 Move X0, 0x13B2000
	056 Move X0, [X0+1456]
	057 Call 0x1C17D08
	058 Call 0x1C17F10
	059 Move X1, X20
	060 Move X2, X31
	061 Move X21, X0
	062 Call InvalidOperationException..ctor, X0, X1
	063 Move X0, X21
	064 Move X1, X19
	065 Call 0x1C17DEC

Method: System.Void set_GlobalInternal(T value)

Disassembly:
	0x02D42D24 ADD X31, X31, 0x60
	0x02D42D28 RET
	0x02D42D2C LDR W0, [X0 + 0x1C]
	0x02D42D30 RET
	0x02D42D34 LDR X0, [X0 + 0x10]
	0x02D42D38 RET
	0x02D42D3C STP X30, X23, [X31 - 0x30]!
	0x02D42D40 STP X22, X21, [X31 + 0x10]
	0x02D42D44 STP X20, X19, [X31 + 0x20]
	0x02D42D48 ADRP X23, 0x1699000
	0x02D42D4C ADRP X22, 0x13DA000
	0x02D42D50 LDRB W8, [X23 + 0x85A]
	0x02D42D54 LDR X22, [X22 + 0x820]
	0x02D42D58 MOV W21, W2
	0x02D42D5C MOV W20, W1
	0x02D42D60 MOV X19, X0
	0x02D42D64 TBNZ X8, 0x0, 0x2D42D7C
	0x02D42D68 ADRP X0, 0x13DA000
	0x02D42D6C LDR X0, [X0 + 0x820]
	0x02D42D70 BL 0x1C16CF4
	0x02D42D74 MOVZ W8, 0x1
	0x02D42D78 STRB W8, [X23 + 0x85A]
	0x02D42D7C MOV X0, X19
	0x02D42D80 MOV X1, X31
	0x02D42D84 BL 0x33BDD8C
	0x02D42D88 MOVZ W8, 0x40
	0x02D42D8C STP W20, W8, [X19 + 0x18]
	0x02D42D90 LDR X0, [X22]
	0x02D42D94 LDR W8, [X0 + 0xE0]
	0x02D42D98 CBNZ W8, 0x2D42DA0
	0x02D42D9C BL 0x1C16DFC
	0x02D42DA0 CMP W21, 0x0
	0x02D42DA4 CSET W2, EQ
	0x02D42DA8 MOVZ W1, 0x40
	0x02D42DAC MOV W0, W20
	0x02D42DB0 MOV X3, X31
	0x02D42DB4 BL 0x3D1F420
	0x02D42DB8 STR X0, [X19 + 0x10]
	0x02D42DBC LDP X20, X19, [X31 + 0x20]
	0x02D42DC0 LDP X22, X21, [X31 + 0x10]
	0x02D42DC4 LDP X30, X23, [X31], #0x30
	0x02D42DC8 RET
	0x02D42DCC STP X30, X21, [X31 - 0x20]!
	0x02D42DD0 STP X20, X19, [X31 + 0x10]
	0x02D42DD4 ADRP X21, 0x1699000
	0x02D42DD8 ADRP X20, 0x13DA000
	0x02D42DDC LDRB W8, [X21 + 0x85B]
	0x02D42DE0 LDR X20, [X20 + 0x820]
	0x02D42DE4 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x169A000
	006 Move W8, [X21+2128]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x13B2000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2128], W8
	018 Move X0, [X20+32]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X0+192]
	026 Move X21, 0x13B2000
	027 Move X0, [X8+32]
	028 Move W8, [X0+309]
	029 Move X21, [X21+1432]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X21]
	036 Move X9, [X0+184]
	037 Move W10, [X8+224]
	038 Move X21, [X9]
	039 Compare W10, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X1, X21
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {56}
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return 
	056 Move X0, [X20+32]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+192]
	064 Move X0, X19
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X1, X31
	068 Move X2, [X8+80]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Call 0x2D43834, X0, X1
	072 Return 

Method: System.Boolean get_IsGlobalLoadedInternal()

Disassembly:
	0x02D42DE8 TBNZ X8, 0x0, 0x2D42E00
	0x02D42DEC ADRP X0, 0x13DA000
	0x02D42DF0 LDR X0, [X0 + 0x820]
	0x02D42DF4 BL 0x1C16CF4
	0x02D42DF8 MOVZ W8, 0x1
	0x02D42DFC STRB W8, [X21 + 0x85B]
	0x02D42E00 LDR X0, [X20]
	0x02D42E04 LDR X19, [X19 + 0x10]
	0x02D42E08 LDR W8, [X0 + 0xE0]
	0x02D42E0C CBNZ W8, 0x2D42E14
	0x02D42E10 BL 0x1C16DFC
	0x02D42E14 MOV X0, X19
	0x02D42E18 LDP X20, X19, [X31 + 0x10]
	0x02D42E1C MOV X1, X31
	0x02D42E20 LDP X30, X21, [X31], #0x20
	0x02D42E24 B 0x3D1F474
	0x02D42E28 SUB X31, X31, 0x60
	0x02D42E2C STP X30, X27, [X31 + 0x10]
	0x02D42E30 STP X26, X25, [X31 + 0x20]
	0x02D42E34 STP X24, X23, [X31 + 0x30]
	0x02D42E38 STP X22, X21, [X31 + 0x40]
	0x02D42E3C STP X20, X19, [X31 + 0x50]
	0x02D42E40 ADRP X27, 0x1699000
	0x02D42E44 STP X1, X2, [X31]
	0x02D42E48 ADRP X26, 0x13DC000
	0x02D42E4C ADRP X25, 0x13DC000
	0x02D42E50 ADRP X24, 0x13DA000
	0x02D42E54 LDRB W8, [X27 + 0x85C]
	0x02D42E58 LDR X26, [X26 + 0xED8]
	0x02D42E5C LDR X25, [X25 + 0xEE0]
	0x02D42E60 LDR X24, [X24 + 0x820]
	0x02D42E64 MOV W19, W4
	0x02D42E68 MOV W20, W3
	0x02D42E6C MOV X21, X2
	0x02D42E70 MOV X22, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x169A000
	005 Move W8, [X20+2129]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x13B2000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2129], W8
	016 Move X0, [X19+32]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move X8, [X0+192]
	024 Move X19, 0x13B2000
	025 Move X0, [X8+32]
	026 Move W8, [X0+309]
	027 Move X19, [X19+1432]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X19]
	034 Move X9, [X0+184]
	035 Move W10, [X8+224]
	036 Move X19, [X9]
	037 Compare W10, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X1, X31
	045 Move X2, X31
	046 Move X30, [X31+32]
	047 Call Object.op_Inequality, X0, X1
	048 Return X0

Method: System.Boolean TryGetGlobalInternal(out T global)

Disassembly:
	0x02D42E74 MOV X23, X0
	0x02D42E78 TBNZ X8, 0x0, 0x2D42EA8
	0x02D42E7C ADRP X0, 0x13DC000
	0x02D42E80 LDR X0, [X0 + 0xED8]
	0x02D42E84 BL 0x1C16CF4
	0x02D42E88 ADRP X0, 0x13DC000
	0x02D42E8C LDR X0, [X0 + 0xEE0]
	0x02D42E90 BL 0x1C16CF4
	0x02D42E94 ADRP X0, 0x13DA000
	0x02D42E98 LDR X0, [X0 + 0x820]
	0x02D42E9C BL 0x1C16CF4
	0x02D42EA0 MOVZ W8, 0x1
	0x02D42EA4 STRB W8, [X27 + 0x85C]
	0x02D42EA8 LDR X2, [X26]
	0x02D42EAC LDR X23, [X23 + 0x10]
	0x02D42EB0 MOV X0, X22
	0x02D42EB4 MOV X1, X21
	0x02D42EB8 BL 0x22232A4
	0x02D42EBC LDR X1, [X25]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X1+32]
	004 Move X19, X0
	005 Move W9, [X8+309]
	006 Move TEMP, X9
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {13}
	010 Move X0, X8
	011 Call 0x1C5D684
	012 Move X8, X0
	013 Move X8, [X8+192]
	014 Move X0, [X8+72]
	015 Call 0x2D43210
	016 Compare X0, 0
	017 JumpIfEqual {19}
	018 Move [X19], X0
	019 Move [X19], X31
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CSET not yet implemented."
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Return X0

Method: System.Boolean UnloadGlobalInternal()

Disassembly:
	0x02D42EC0 MOV X21, X0
	0x02D42EC4 ADD X0, X31, 0x0
	0x02D42EC8 BL 0x2405704
	0x02D42ECC LDR X8, [X24]
	0x02D42ED0 MOV W22, W0
	0x02D42ED4 LDR W9, [X8 + 0xE0]
	0x02D42ED8 CBNZ W9, 0x2D42EE4
	0x02D42EDC MOV X0, X8
	0x02D42EE0 BL 0x1C16DFC
	0x02D42EE4 MOV X0, X23
	0x02D42EE8 MOV X1, X21
	0x02D42EEC MOV W2, W22
	0x02D42EF0 MOV W3, W20
	0x02D42EF4 MOV W4, W19
	0x02D42EF8 MOV X5, X31
	0x02D42EFC BL 0x3D1F4B0
	0x02D42F00 LDP X20, X19, [X31 + 0x50]
	0x02D42F04 LDP X22, X21, [X31 + 0x40]
	0x02D42F08 LDP X24, X23, [X31 + 0x30]
	0x02D42F0C LDP X26, X25, [X31 + 0x20]
	0x02D42F10 LDP X30, X27, [X31 + 0x10]
	0x02D42F14 ADD X31, X31, 0x60
	0x02D42F18 RET
	0x02D42F1C LDR W0, [X0 + 0x1C]
	0x02D42F20 RET
	0x02D42F24 LDR X0, [X0 + 0x10]
	0x02D42F28 RET
	0x02D42F2C STR X30, [X31 - 0x40]!
	0x02D42F30 STP X24, X23, [X31 + 0x10]
	0x02D42F34 STP X22, X21, [X31 + 0x20]
	0x02D42F38 STP X20, X19, [X31 + 0x30]
	0x02D42F3C ADRP X24, 0x1699000
	0x02D42F40 ADRP X23, 0x13DA000
	0x02D42F44 LDRB W8, [X24 + 0x85D]
	0x02D42F48 LDR X23, [X23 + 0x820]
	0x02D42F4C MOV X22, X3
	0x02D42F50 MOV W21, W2
	0x02D42F54 MOV W20, W1
	0x02D42F58 MOV X19, X0
	0x02D42F5C TBNZ X8, 0x0, 0x2D42F74
	0x02D42F60 ADRP X0, 0x13DA000
	0x02D42F64 LDR X0, [X0 + 0x820]
	0x02D42F68 BL 0x1C16CF4
	0x02D42F6C MOVZ W8, 0x1
	0x02D42F70 STRB W8, [X24 + 0x85D]
	0x02D42F74 MOV X0, X19
	0x02D42F78 MOV X1, X31
	0x02D42F7C BL 0x33BDD8C
	0x02D42F80 STR W20, [X19 + 0x18]
	0x02D42F84 LDR X8, [X22 + 0x20]
	0x02D42F88 LDR X8, [X8 + 0xC0]
	0x02D42F8C LDR X0, [X8 + 0x8]
	0x02D42F90 LDR X8, [X0]
	0x02D42F94 BLR X8
	0x02D42F98 STR W0, [X19 + 0x1C]
	0x02D42F9C MOV W22, W0
	0x02D42FA0 LDR X0, [X23]
	0x02D42FA4 LDR W8, [X0 + 0xE0]
	0x02D42FA8 CBNZ W8, 0x2D42FB0
	0x02D42FAC BL 0x1C16DFC
	0x02D42FB0 CMP W21, 0x0
	0x02D42FB4 CSET W2, EQ
	0x02D42FB8 MOV W0, W20
	0x02D42FBC MOV W1, W22
	0x02D42FC0 MOV X3, X31
	0x02D42FC4 BL 0x3D1F420
	0x02D42FC8 STR X0, [X19 + 0x10]
	0x02D42FCC LDP X20, X19, [X31 + 0x30]
	0x02D42FD0 LDP X22, X21, [X31 + 0x20]
	0x02D42FD4 LDP X24, X23, [X31 + 0x10]
	0x02D42FD8 LDR X30, [X31], #0x40
	0x02D42FDC RET
	0x02D42FE0 STP X30, X21, [X31 - 0x20]!
	0x02D42FE4 STP X20, X19, [X31 + 0x10]
	0x02D42FE8 ADRP X21, 0x1699000
	0x02D42FEC ADRP X20, 0x13DA000
	0x02D42FF0 LDRB W8, [X21 + 0x85E]
	0x02D42FF4 LDR X20, [X20 + 0x820]
	0x02D42FF8 MOV X19, X0
	0x02D42FFC TBNZ X8, 0x0, 0x2D43014
	0x02D43000 ADRP X0, 0x13D9000
	0x02D43004 LDR X0, [X0 + 0x820]
	0x02D43008 BL 0x1C16CF4
	0x02D4300C MOVZ W8, 0x1
	0x02D43010 STRB W8, [X21 + 0x85E]
	0x02D43014 LDR X0, [X20]
	0x02D43018 LDR X19, [X19 + 0x10]
	0x02D4301C LDR W8, [X0 + 0xE0]
	0x02D43020 CBNZ W8, 0x2D43028
	0x02D43024 BL 0x1C16DFC
	0x02D43028 MOV X0, X19
	0x02D4302C LDP X20, X19, [X31 + 0x10]
	0x02D43030 MOV X1, X31
	0x02D43034 LDP X30, X21, [X31], #0x20
	0x02D43038 B 0x3D1F474
	0x02D4303C SUB X31, X31, 0x60
	0x02D43040 STP X30, X27, [X31 + 0x10]
	0x02D43044 STP X26, X25, [X31 + 0x20]
	0x02D43048 STP X24, X23, [X31 + 0x30]
	0x02D4304C STP X22, X21, [X31 + 0x40]
	0x02D43050 STP X20, X19, [X31 + 0x50]
	0x02D43054 ADRP X27, 0x1698000
	0x02D43058 STP X1, X2, [X31]
	0x02D4305C ADRP X26, 0x13DB000
	0x02D43060 ADRP X25, 0x13DB000
	0x02D43064 ADRP X24, 0x13D9000
	0x02D43068 LDRB W8, [X27 + 0x85F]
	0x02D4306C LDR X26, [X26 + 0xED8]
	0x02D43070 LDR X25, [X25 + 0xEE0]
	0x02D43074 LDR X24, [X24 + 0x820]
	0x02D43078 MOV W19, W4
	0x02D4307C MOV W20, W3
	0x02D43080 MOV X21, X2
	0x02D43084 MOV X22, X1
	0x02D43088 MOV X23, X0
	0x02D4308C TBNZ X8, 0x0, 0x2D430BC
	0x02D43090 ADRP X0, 0x13DB000
	0x02D43094 LDR X0, [X0 + 0xED8]
	0x02D43098 BL 0x1C16CF4
	0x02D4309C ADRP X0, 0x13DB000
	0x02D430A0 LDR X0, [X0 + 0xEE0]
	0x02D430A4 BL 0x1C16CF4
	0x02D430A8 ADRP X0, 0x13D9000
	0x02D430AC LDR X0, [X0 + 0x820]
	0x02D430B0 BL 0x1C16CF4
	0x02D430B4 MOVZ W8, 0x1
	0x02D430B8 STRB W8, [X27 + 0x85F]
	0x02D430BC LDR X2, [X26]
	0x02D430C0 LDR X23, [X23 + 0x10]
	0x02D430C4 MOV X0, X22
	0x02D430C8 MOV X1, X21
	0x02D430CC BL 0x22232A4
	0x02D430D0 LDR X1, [X25]
	0x02D430D4 MOV X21, X0
	0x02D430D8 ADD X0, X31, 0x0
	0x02D430DC BL 0x2405704
	0x02D430E0 LDR X8, [X24]
	0x02D430E4 MOV W22, W0
	0x02D430E8 LDR W9, [X8 + 0xE0]
	0x02D430EC CBNZ W9, 0x2D430F8
	0x02D430F0 MOV X0, X8
	0x02D430F4 BL 0x1C16DFC
	0x02D430F8 MOV X0, X23
	0x02D430FC MOV X1, X21
	0x02D43100 MOV W2, W22
	0x02D43104 MOV W3, W20
	0x02D43108 MOV W4, W19
	0x02D4310C MOV X5, X31
	0x02D43110 BL 0x3D1F4B0
	0x02D43114 LDP X20, X19, [X31 + 0x50]
	0x02D43118 LDP X22, X21, [X31 + 0x40]
	0x02D4311C LDP X24, X23, [X31 + 0x30]
	0x02D43120 LDP X26, X25, [X31 + 0x20]
	0x02D43124 LDP X30, X27, [X31 + 0x10]
	0x02D43128 ADD X31, X31, 0x60
	0x02D4312C RET
	0x02D43130 LDR W0, [X0 + 0x1C]
	0x02D43134 RET
	0x02D43138 LDR X0, [X0 + 0x10]
	0x02D4313C RET
	0x02D43140 STR X30, [X31 - 0x30]!
	0x02D43144 STP X22, X21, [X31 + 0x10]
	0x02D43148 STP X20, X19, [X31 + 0x20]
	0x02D4314C MOV W21, W1
	0x02D43150 MOV X1, X31
	0x02D43154 MOV W19, W3
	0x02D43158 MOV W20, W2
	0x02D4315C MOV X22, X0
	0x02D43160 BL 0x33BDD8C
	0x02D43164 MOVZ W9, 0x4DD3
	0x02D43168 MUL W8, W20, W21
	0x02D4316C MOVK W9, 0x10620000
	0x02D43170 SMADDL X8, X8, X9, X31
	0x02D43174 UBFM X9, X8, 0x3F, 0x3F
	0x02D43178 SBFM X8, X8, 0x26, 0x3F
	0x02D4317C ADD W8, W8, W9
	0x02D43180 STP W19, W20, [X22 + 0x34]
	0x02D43184 STR W8, [X22 + 0x30]
	0x02D43188 LDP X20, X19, [X31 + 0x20]
	0x02D4318C LDP X22, X21, [X31 + 0x10]
	0x02D43190 LDR X30, [X31], #0x30
	0x02D43194 RET
	0x02D43198 STP X30, X25, [X31 - 0x40]!
	0x02D4319C STP X24, X23, [X31 + 0x10]
	0x02D431A0 STP X22, X21, [X31 + 0x20]
	0x02D431A4 STP X20, X19, [X31 + 0x30]
	0x02D431A8 ADRP X23, 0x1698000
	0x02D431AC LDRB W8, [X23 + 0x860]
	0x02D431B0 MOV X20, X3
	0x02D431B4 MOV X21, X2
	0x02D431B8 MOV X22, X1
	0x02D431BC MOV X19, X0
	0x02D431C0 TBNZ X8, 0x0, 0x2D431E4
	0x02D431C4 ADRP X0, 0x13DB000
	0x02D431C8 LDR X0, [X0 + 0xEE8]
	0x02D431CC BL 0x1C16CF4
	0x02D431D0 ADRP X0, 0x13DB000
	0x02D431D4 LDR X0, [X0 + 0xEF0]
	0x02D431D8 BL 0x1C16CF4
	0x02D431DC MOVZ W8, 0x1
	0x02D431E0 STRB W8, [X23 + 0x860]
	0x02D431E4 ADRP X24, 0x13DB000
	0x02D431E8 ADRP X23, 0x13DB000
	0x02D431EC LDR X0, [X19 + 0x10]
	0x02D431F0 LDR X24, [X24 + 0xEF0]
	0x02D431F4 LDR X23, [X23 + 0xEE8]
	0x02D431F8 CBZ X0, 0x2D43204
	0x02D431FC MOV X1, X31
	0x02D43200 BL 0x362F120
	0x02D43204 STP X22, X21, [X19 + 0x18]
	0x02D43208 LDR X0, [X24]
	0x02D4320C LDR W22, [X19 + 0x30]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X19, 0x169A000
	007 Move W8, [X19+2130]
	008 Move X20, X0
	009 Move [X31+40], X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x13BA000
	015 Move X0, [X0+2224]
	016 Call 0x1C17CF4
	017 Move X0, 0x13B2000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x13DD000
	021 Move X0, [X0+3736]
	022 Call 0x1C17CF4
	023 Move X0, 0x13DD000
	024 Move X0, [X0+3744]
	025 Call 0x1C17CF4
	026 Move X0, 0x13DD000
	027 Move X0, [X0+3752]
	028 Call 0x1C17CF4
	029 Move X0, 0x13DD000
	030 Move X0, [X0+3760]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+2130], W8
	034 Move [X31+32], X31
	035 Move X0, [X20+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X21, 0x13B2000
	044 Move X0, [X8+32]
	045 Move W8, [X0+309]
	046 Move X21, [X21+1432]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X8, [X0+184]
	053 Move X0, [X21]
	054 Move X19, [X8]
	055 Move [X31+32], X19
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X19
	061 Move X1, X31
	062 Call Object.op_Implicit, X0
	063 Move W19, W0
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {241}
	068 Add X8, X31, 40
	069 Add X9, X31, 32
	070 Move [X31+8], X31
	071 Move [X31+16], X8
	072 Move [X31+24], X9
	073 Move X0, [X20+32]
	074 Move W8, [X0+309]
	075 Move TEMP, X8
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfEqual {80}
	079 Call 0x1C5D684
	080 Move X8, [X0+192]
	081 Move X0, [X8+32]
	082 Move W8, [X0+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {88}
	087 Call 0x1C5D684
	088 Move X8, [X31+40]
	089 Move X9, [X0+184]
	090 Move X0, [X8+32]
	091 Move X9, [X9+8]
	092 Add X8, X0, 309
	093 NotImplemented "Instruction LDRH not yet implemented."
	094 Compare X9, 0
	095 JumpIfEqual {198}
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move X8, [X0+192]
	102 Move X0, [X8+24]
	103 Call 0x2D428A0
	104 Move X21, [X31+32]
	105 Move X8, [X31+40]
	106 Move X20, X0
	107 Move X0, [X8+32]
	108 Move W8, [X0+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {114}
	113 Call 0x1C5D684
	114 Move X0, X21
	115 Call 0x2D42968, X0
	116 Move X8, 0x13DC000
	117 Move X8, [X8+3760]
	118 Move X9, 0x13DC000
	119 Move X9, [X9+3744]
	120 Move X2, X0
	121 Move X1, [X8]
	122 Move X3, [X9]
	123 Move X0, X20
	124 Move X4, X31
	125 Call String.Concat, X0, X1, X2, X3
	126 Move X8, 0x13B9000
	127 Move X8, [X8+2224]
	128 Move X20, X0
	129 Move X0, [X8]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X20
	135 Move X1, X31
	136 Call Log.Trace, X0
	137 Move X8, [X31+40]
	138 Move X0, [X8+32]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Move X8, [X0+192]
	146 Move X0, [X8+32]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {153}
	152 Call 0x1C5D684
	153 Move X8, [X31+40]
	154 Move X9, [X0+184]
	155 Move X8, [X8+32]
	156 Move X20, [X9+8]
	157 Move W10, [X8+309]
	158 Move TEMP, X10
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {165}
	162 Move X0, X8
	163 Call 0x1C5D684
	164 Move X8, X0
	165 Move X8, [X8+192]
	166 Move X0, [X8+32]
	167 Move W8, [X0+309]
	168 Move TEMP, X8
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {173}
	172 Call 0x1C5D684
	173 Move X8, [X0+184]
	174 Move [X8+8], X31
	175 Move X8, [X31+40]
	176 Move X0, [X8+32]
	177 Move W8, [X0+309]
	178 Move TEMP, X8
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfEqual {183}
	182 Call 0x1C5D684
	183 Move X8, [X0+192]
	184 Move X0, [X8+32]
	185 Move W8, [X0+309]
	186 Move TEMP, X8
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfEqual {191}
	190 Call 0x1C5D684
	191 Compare X20, 0
	192 JumpIfEqual {248}
	193 Move X1, [X31+32]
	194 Move X0, [X20+64]
	195 Move X8, [X20+24]
	196 Move X2, [X20+40]
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move TEMP, X8
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {203}
	202 Call 0x1C5D684
	203 Move X8, [X0+192]
	204 Move X0, [X8+24]
	205 Call 0x2D428A0
	206 Move X21, [X31+32]
	207 Move X8, [X31+40]
	208 Move X20, X0
	209 Move X0, [X8+32]
	210 Move W8, [X0+309]
	211 Move TEMP, X8
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfEqual {216}
	215 Call 0x1C5D684
	216 Move X0, X21
	217 Call 0x2D42968, X0
	218 Move X8, 0x13DC000
	219 Move X8, [X8+3736]
	220 Move X9, 0x13DC000
	221 Move X9, [X9+3752]
	222 Move X2, X0
	223 Move X1, [X8]
	224 Move X3, [X9]
	225 Move X0, X20
	226 Move X4, X31
	227 Call String.Concat, X0, X1, X2, X3
	228 Move X8, 0x13B9000
	229 Move X8, [X8+2224]
	230 Move X20, X0
	231 Move X0, [X8]
	232 Move W8, [X0+224]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Move X0, X20
	237 Move X1, X31
	238 Call Log.Trace, X0
	239 Add X0, X31, 8
	240 Call 0x1A1935C
	241 And W0, W19, 1
	242 Move X20, [X31+64]
	243 Move X19, [X31+72]
	244 Move X30, [X31+48]
	245 Move X21, [X31+56]
	246 Add X31, X31, 80
	247 Return X0
	248 Call 0x1C17F20
	249 Move X20, X0
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move X0, X20
	252 Call 0x3EB2AD0
	253 Move X8, [X0]
	254 Move [X31+8], X8
	255 Call 0x3EB2AE0
	256 Move X20, X0
	257 Add X0, X31, 8
	258 Call 0x1A1935C
	259 Move X0, X20
	260 Call 0x1D2D690
	261 Call 0x1991590

Method: T GetOrLoadGlobalInstance()

Disassembly:
	0x02D43210 LDR W25, [X19 + 0x38]
	0x02D43214 BL 0x1C16F10
	0x02D43218 ADRP X8, 0xFFFFFFFFFDDAA000
	0x02D4321C LDR V0, [X8 + 0xB58]
	0x02D43220 SCVTF D1, W22
	0x02D43224 MOV X1, X31
	0x02D43228 MOV X21, X0
	0x02D4322C FMUL D0, D1, D0
	0x02D43230 SCVTF D1, W25
	0x02D43234 FDIV D0, D0, D1
	0x02D43238 BL 0x362E944
	0x02D4323C STR X21, [X19 + 0x10]
	0x02D43240 LDR X0, [X23]
	0x02D43244 BL 0x1C16F10
	0x02D43248 LDR X8, [X20 + 0x20]
	0x02D4324C MOV X1, X19
	0x02D43250 MOV X3, X31
	0x02D43254 MOV X20, X0
	0x02D43258 LDR X8, [X8 + 0xC0]
	0x02D4325C LDR X2, [X8 + 0x28]
	0x02D43260 BL 0x362E770
	0x02D43264 CBZ X21, 0x2D4329C
	0x02D43268 MOV X0, X21
	0x02D4326C MOV X1, X20
	0x02D43270 MOV X2, X31
	0x02D43274 BL 0x362EE80
	0x02D43278 LDR X0, [X19 + 0x10]
	0x02D4327C CBZ X0, 0x2D4329C
	0x02D43280 LDP X20, X19, [X31 + 0x30]
	0x02D43284 LDP X22, X21, [X31 + 0x20]
	0x02D43288 LDP X24, X23, [X31 + 0x10]
	0x02D4328C MOVZ W1, 0x1
	0x02D43290 MOV X2, X31
	0x02D43294 LDP X30, X25, [X31], #0x40
	0x02D43298 B 0x362EC88
	0x02D4329C BL 0x1C16F20
	0x02D432A0 STR X30, [X31 - 0x30]!
	0x02D432A4 STP X22, X21, [X31 + 0x10]
	0x02D432A8 STP X20, X19, [X31 + 0x20]
	0x02D432AC LDR X20, [X0 + 0x20]
	0x02D432B0 CBZ X20, 0x2D4338C
	0x02D432B4 LDR X8, [X3 + 0x20]
	0x02D432B8 LDP W21, W22, [X0 + 0x30]
	0x02D432BC MOV X19, X0
	0x02D432C0 LDR X8, [X8 + 0xC0]
	0x02D432C4 LDR X1, [X8 + 0x20]
	0x02D432C8 LDRB W8, [X1 + 0x135]
	0x02D432CC TBNZ X8, 0x0, 0x2D432DC
	0x02D432D0 MOV X0, X1
	0x02D432D4 BL 0x1C5C684
	0x02D432D8 MOV X1, X0
	0x02D432DC LDR X8, [X20]
	0x02D432E0 MUL W21, W22, W21
	0x02D432E4 LDRH W9, [X8 + 0x12E]
	0x02D432E8 CBZ X9, 0x2D4330C
	0x02D432EC LDR X10, [X8 + 0xB0]
	0x02D432F0 ADD X10, X10, 0x8
	0x02D432F4 LDUR X11, [X10 - 0x8]
	0x02D432F8 CMP X11, X1
	0x02D432FC B.EQ 0x2D4331C
	0x02D43300 SUBS X9, X9, 0x1
	0x02D43304 ADD X10, X10, 0x10
	0x02D43308 B.NE 0x2D432F4
	0x02D4330C MOVZ W2, 0x2
	0x02D43310 MOV X0, X20
	0x02D43314 BL 0x1C5C788
	0x02D43318 B 0x2D4332C
	0x02D4331C LDR W9, [X10]
	0x02D43320 ADD W9, W9, 0x2
	0x02D43324 ADD X8, X8, W9, 0x4, SXTW
	0x02D43328 ADD X0, X8, 0x138
	0x02D4332C LDP X8, X2, [X0]
	0x02D43330 MOV X0, X20
	0x02D43334 MOV W1, W21
	0x02D43338 BLR X8
	0x02D4333C LDR X8, [X19]
	0x02D43340 LDR X21, [X19 + 0x28]
	0x02D43344 MOV X20, X0
	0x02D43348 MOV X0, X19
	0x02D4334C LDP X9, X3, [X8 + 0x1C8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1699000
	007 Move W8, [X20+2131]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x13B1000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2131], W8
	018 Move X0, [X19+32]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X0+192]
	026 Move X21, 0x13B1000
	027 Move X0, [X8+32]
	028 Move W8, [X0+309]
	029 Move X21, [X21+1432]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {35}
	034 Call 0x1C5D684
	035 Move X8, [X21]
	036 Move X9, [X0+184]
	037 Move W10, [X8+224]
	038 Move X20, [X9]
	039 Compare W10, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X20
	044 Move X1, X31
	045 Call Object.op_Implicit, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {67}
	050 Move X0, [X19+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Move X0, [X8+32]
	059 Move W8, [X0+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+184]
	066 Move X20, [X8]
	067 Move [X31+8], X31
	068 Move X0, [X19+32]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X8, [X0+192]
	076 Add X0, X31, 8
	077 Move X1, [X8+96]
	078 Call 0x2D43350, X0
	079 Move X8, [X21]
	080 Move X20, X0
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X0, X20
	087 Move X1, X31
	088 Call Object.op_Implicit, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {106}
	093 Move X0, [X19+32]
	094 Move X19, [X31+8]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move X8, [X0+192]
	102 Move X0, X20
	103 Move X1, X19
	104 Move X2, [X8+80]
	105 Call 0x2D43834, X0, X1
	106 Move X0, X20
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X30, [X31+16]
	110 Move X21, [X31+24]
	111 Add X31, X31, 48
	112 Return X0

Method: T LoadPlayerInstance(out Fusion.FusionGlobalScriptableObjectUnloadDelegate unloadHandler)

Disassembly:
	0x02D43350 MOV X1, X20
	0x02D43354 MOV X2, X21
	0x02D43358 BLR X9
	0x02D4335C LDR X8, [X19 + 0x18]
	0x02D43360 ADD X9, X21, W0, SXTW
	0x02D43364 STR X9, [X19 + 0x28]
	0x02D43368 CBZ X8, 0x2D4338C
	0x02D4336C LDR X3, [X8 + 0x18]
	0x02D43370 LDR X0, [X8 + 0x40]
	0x02D43374 LDR X2, [X8 + 0x28]
	0x02D43378 MOV X1, X20
	0x02D4337C LDP X20, X19, [X31 + 0x20]
	0x02D43380 LDP X22, X21, [X31 + 0x10]
	0x02D43384 LDR X30, [X31], #0x30
	0x02D43388 BR X3
	0x02D4338C BL 0x1C16F20
	0x02D43390 LDR W0, [X0 + 0x34]
	0x02D43394 RET
	0x02D43398 LDR W0, [X0 + 0x38]
	0x02D4339C RET
	0x02D433A0 LDR X0, [X0 + 0x40]
	0x02D433A4 RET
	0x02D433A8 STR X1, [X0 + 0x40]
	0x02D433AC RET
	0x02D433B0 LDR X0, [X0 + 0x10]
	0x02D433B4 CBZ X0, 0x2D433C0
	0x02D433B8 MOV X1, X31
	0x02D433BC B 0x362F120
	0x02D433C0 RET
	0x02D433C4 STP X30, X23, [X31 - 0x30]!
	0x02D433C8 STP X22, X21, [X31 + 0x10]
	0x02D433CC STP X20, X19, [X31 + 0x20]
	0x02D433D0 MOV W22, W1
	0x02D433D4 MOV X1, X31
	0x02D433D8 MOV X19, X4
	0x02D433DC MOV W20, W3
	0x02D433E0 MOV W21, W2
	0x02D433E4 MOV X23, X0
	0x02D433E8 BL 0x33BDD8C
	0x02D433EC STP W20, W21, [X23 + 0x34]
	0x02D433F0 LDR X8, [X19 + 0x20]
	0x02D433F4 MOV X0, X23
	0x02D433F8 LDR X8, [X8 + 0xC0]
	0x02D433FC LDR X1, [X8 + 0x8]
	0x02D43400 LDR X8, [X1]
	0x02D43404 BLR X8
	0x02D43408 MOVZ W9, 0x4DD3
	0x02D4340C MUL W8, W0, W22
	0x02D43410 MOVK W9, 0x10620000
	0x02D43414 SMADDL X8, X8, X9, X31
	0x02D43418 LDP X20, X19, [X31 + 0x20]
	0x02D4341C LDP X22, X21, [X31 + 0x10]
	0x02D43420 UBFM X9, X8, 0x20, 0x3F
	0x02D43424 UBFM X8, X8, 0x3F, 0x3F
	0x02D43428 ADD W8, W8, W9, 0x6, ASR
	0x02D4342C STR W8, [X23 + 0x30]
	0x02D43430 LDP X30, X23, [X31], #0x30
	0x02D43434 RET
	0x02D43438 STP X30, X25, [X31 - 0x40]!
	0x02D4343C STP X24, X23, [X31 + 0x10]
	0x02D43440 STP X22, X21, [X31 + 0x20]
	0x02D43444 STP X20, X19, [X31 + 0x30]
	0x02D43448 ADRP X23, 0x1698000
	0x02D4344C LDRB W8, [X23 + 0x861]
	0x02D43450 MOV X20, X3
	0x02D43454 MOV X21, X2
	0x02D43458 MOV X22, X1
	0x02D4345C MOV X19, X0
	0x02D43460 TBNZ X8, 0x0, 0x2D43484
	0x02D43464 ADRP X0, 0x13DB000
	0x02D43468 LDR X0, [X0 + 0xEE8]
	0x02D4346C BL 0x1C16CF4
	0x02D43470 ADRP X0, 0x13DB000
	0x02D43474 LDR X0, [X0 + 0xEF0]
	0x02D43478 BL 0x1C16CF4
	0x02D4347C MOVZ W8, 0x1
	0x02D43480 STRB W8, [X23 + 0x861]
	0x02D43484 ADRP X24, 0x13DB000
	0x02D43488 ADRP X23, 0x13DB000
	0x02D4348C LDR X8, [X19 + 0x10]
	0x02D43490 LDR X24, [X24 + 0xEF0]
	0x02D43494 LDR X23, [X23 + 0xEE8]
	0x02D43498 CBZ X8, 0x2D434B4
	0x02D4349C LDR X8, [X20 + 0x20]
	0x02D434A0 MOV X0, X19
	0x02D434A4 LDR X8, [X8 + 0xC0]
	0x02D434A8 LDR X1, [X8 + 0x10]
	0x02D434AC LDR X8, [X1]
	0x02D434B0 BLR X8
	0x02D434B4 STP X22, X21, [X19 + 0x18]
	0x02D434B8 LDR X8, [X20 + 0x20]
	0x02D434BC LDR W25, [X19 + 0x30]
	0x02D434C0 MOV X0, X19
	0x02D434C4 LDR X8, [X8 + 0xC0]
	0x02D434C8 LDR X1, [X8 + 0x8]
	0x02D434CC LDR X8, [X1]
	0x02D434D0 BLR X8
	0x02D434D4 LDR X8, [X24]
	0x02D434D8 MOV W22, W0
	0x02D434DC MOV X0, X8
	0x02D434E0 BL 0x1C16F10
	0x02D434E4 ADRP X8, 0xFFFFFFFFFDDAA000
	0x02D434E8 LDR V0, [X8 + 0xB58]
	0x02D434EC SCVTF D1, W25
	0x02D434F0 MOV X1, X31
	0x02D434F4 MOV X21, X0
	0x02D434F8 FMUL D0, D1, D0
	0x02D434FC SCVTF D1, W22
	0x02D43500 FDIV D0, D0, D1
	0x02D43504 BL 0x362E944
	0x02D43508 STR X21, [X19 + 0x10]
	0x02D4350C LDR X0, [X23]
	0x02D43510 BL 0x1C16F10
	0x02D43514 LDR X8, [X20 + 0x20]
	0x02D43518 MOV X1, X19
	0x02D4351C MOV X3, X31
	0x02D43520 MOV X20, X0
	0x02D43524 LDR X8, [X8 + 0xC0]
	0x02D43528 LDR X2, [X8 + 0x28]
	0x02D4352C BL 0x362E770
	0x02D43530 CBZ X21, 0x2D43568
	0x02D43534 MOV X0, X21
	0x02D43538 MOV X1, X20
	0x02D4353C MOV X2, X31
	0x02D43540 BL 0x362EE80
	0x02D43544 LDR X0, [X19 + 0x10]
	0x02D43548 CBZ X0, 0x2D43568
	0x02D4354C LDP X20, X19, [X31 + 0x30]
	0x02D43550 LDP X22, X21, [X31 + 0x20]
	0x02D43554 LDP X24, X23, [X31 + 0x10]
	0x02D43558 MOVZ W1, 0x1
	0x02D4355C MOV X2, X31
	0x02D43560 LDP X30, X25, [X31], #0x40
	0x02D43564 B 0x362EC88
	0x02D43568 BL 0x1C16F20
	0x02D4356C SUB X31, X31, 0x50
	0x02D43570 STP X30, X23, [X31 + 0x20]
	0x02D43574 STP X22, X21, [X31 + 0x30]
	0x02D43578 STP X20, X19, [X31 + 0x40]
	0x02D4357C LDR X8, [X3 + 0x20]
	0x02D43580 LDR X21, [X0 + 0x20]
	0x02D43584 LDR W23, [X0 + 0x30]
	0x02D43588 MOV X19, X3
	0x02D4358C LDR X8, [X8 + 0xC0]
	0x02D43590 MOV X20, X0
	0x02D43594 LDR X1, [X8 + 0x30]
	0x02D43598 LDR X8, [X1]
	0x02D4359C BLR X8
	0x02D435A0 CBZ X21, 0x2D436A4
	0x02D435A4 LDR X8, [X19 + 0x20]
	0x02D435A8 MOV W22, W0
	0x02D435AC LDR X8, [X8 + 0xC0]
	0x02D435B0 LDR X1, [X8 + 0x20]
	0x02D435B4 LDRB W8, [X1 + 0x135]
	0x02D435B8 TBNZ X8, 0x0, 0x2D435C8
	0x02D435BC MOV X0, X1
	0x02D435C0 BL 0x1C5C684
	0x02D435C4 MOV X1, X0
	0x02D435C8 MUL W8, W22, W23
	0x02D435CC STR W8, [X31 + 0x1C]
	0x02D435D0 LDR X8, [X21]
	0x02D435D4 LDRH W9, [X8 + 0x12E]
	0x02D435D8 CBZ X9, 0x2D435FC
	0x02D435DC LDR X10, [X8 + 0xB0]
	0x02D435E0 ADD X10, X10, 0x8
	0x02D435E4 LDUR X11, [X10 - 0x8]
	0x02D435E8 CMP X11, X1
	0x02D435EC B.EQ 0x2D4360C
	0x02D435F0 SUBS X9, X9, 0x1
	0x02D435F4 ADD X10, X10, 0x10
	0x02D435F8 B.NE 0x2D435E4
	0x02D435FC MOVZ W2, 0x2
	0x02D43600 MOV X0, X21
	0x02D43604 BL 0x1C5C788
	0x02D43608 B 0x2D4361C
	0x02D4360C LDR W9, [X10]
	0x02D43610 ADD W9, W9, 0x2
	0x02D43614 ADD X8, X8, W9, 0x4, SXTW
	0x02D43618 ADD X0, X8, 0x138
	0x02D4361C ADD X8, X31, 0x1C
	0x02D43620 STR X8, [X31 + 0x8]
	0x02D43624 LDR X1, [X0 + 0x8]
	0x02D43628 ADD X3, X31, 0x8
	0x02D4362C ADD X4, X31, 0x10
	0x02D43630 MOV X2, X21
	0x02D43634 LDP X0, X8, [X1 + 0x8]
	0x02D43638 BLR X8
	0x02D4363C LDR X8, [X20]
	0x02D43640 LDR X21, [X31 + 0x10]
	0x02D43644 LDR X22, [X20 + 0x28]
	0x02D43648 MOV X0, X20
	0x02D4364C LDP X9, X3, [X8 + 0x1C8]
	0x02D43650 MOV X1, X21
	0x02D43654 MOV X2, X22
	0x02D43658 BLR X9
	0x02D4365C LDR X2, [X20 + 0x18]
	0x02D43660 ADD X8, X22, W0, SXTW
	0x02D43664 STR X8, [X20 + 0x28]
	0x02D43668 CBZ X2, 0x2D436A4
	0x02D4366C LDR X8, [X19 + 0x20]
	0x02D43670 ADD X3, X31, 0x8
	0x02D43674 MOV X4, X21
	0x02D43678 LDR X8, [X8 + 0xC0]
	0x02D4367C LDR X1, [X8 + 0x50]
	0x02D43680 LDR X0, [X1]
	0x02D43684 STR X21, [X31 + 0x8]
	0x02D43688 LDR X8, [X1 + 0x10]
	0x02D4368C BLR X8
	0x02D43690 LDP X20, X19, [X31 + 0x40]
	0x02D43694 LDP X22, X21, [X31 + 0x30]
	0x02D43698 LDP X30, X23, [X31 + 0x20]
	0x02D4369C ADD X31, X31, 0x50
	0x02D436A0 RET
	0x02D436A4 BL 0x1C16F20
	0x02D436A8 LDR W0, [X0 + 0x34]
	0x02D436AC RET
	0x02D436B0 LDR W0, [X0 + 0x38]
	0x02D436B4 RET
	0x02D436B8 LDR X0, [X0 + 0x40]
	0x02D436BC RET
	0x02D436C0 STR X1, [X0 + 0x40]
	0x02D436C4 RET
	0x02D436C8 LDR X0, [X0 + 0x10]
	0x02D436CC CBZ X0, 0x2D436D8
	0x02D436D0 MOV X1, X31
	0x02D436D4 B 0x362F120
	0x02D436D8 RET
	0x02D436DC STR X30, [X31 - 0x40]!
	0x02D436E0 STP X24, X23, [X31 + 0x10]
	0x02D436E4 STP X22, X21, [X31 + 0x20]
	0x02D436E8 STP X20, X19, [X31 + 0x30]
	0x02D436EC ADRP X24, 0x1698000
	0x02D436F0 LDRB W8, [X24 + 0x862]
	0x02D436F4 MOV X22, X4
	0x02D436F8 MOV W19, W3
	0x02D436FC MOV W20, W2
	0x02D43700 MOV X23, X1
	0x02D43704 MOV X21, X0
	0x02D43708 TBNZ X8, 0x0, 0x2D43720
	0x02D4370C ADRP X0, 0x13DB000
	0x02D43710 LDR X0, [X0 + 0xEF8]
	0x02D43714 BL 0x1C16CF4
	0x02D43718 MOVZ W8, 0x1
	0x02D4371C STRB W8, [X24 + 0x862]
	0x02D43720 MOV X0, X21
	0x02D43724 MOV X1, X31
	0x02D43728 BL 0x33BDD8C
	0x02D4372C CBNZ X23, 0x2D43820
	0x02D43730 LDR X8, [X22 + 0x20]
	0x02D43734 LDR X8, [X8 + 0xC0]
	0x02D43738 LDR X0, [X8 + 0x8]
	0x02D4373C LDRB W8, [X0 + 0x135]
	0x02D43740 TBNZ X8, 0x0, 0x2D43748
	0x02D43744 BL 0x1C5C684
	0x02D43748 LDR W8, [X0 + 0xE0]
	0x02D4374C CBNZ W8, 0x2D43754
	0x02D43750 BL 0x1C16DFC
	0x02D43754 LDR X8, [X22 + 0x20]
	0x02D43758 LDR X8, [X8 + 0xC0]
	0x02D4375C LDR X0, [X8 + 0x8]
	0x02D43760 LDRB W8, [X0 + 0x135]
	0x02D43764 TBNZ X8, 0x0, 0x2D4376C
	0x02D43768 BL 0x1C5C684
	0x02D4376C LDR X8, [X0 + 0xB8]
	0x02D43770 LDR X23, [X8 + 0x8]
	0x02D43774 CBNZ X23, 0x2D43820
	0x02D43778 LDR X8, [X22 + 0x20]
	0x02D4377C LDR X8, [X8 + 0xC0]
	0x02D43780 LDR X0, [X8 + 0x8]
	0x02D43784 LDRB W8, [X0 + 0x135]
	0x02D43788 TBNZ X8, 0x0, 0x2D43790
	0x02D4378C BL 0x1C5C684
	0x02D43790 LDR W8, [X0 + 0xE0]
	0x02D43794 CBNZ W8, 0x2D4379C
	0x02D43798 BL 0x1C16DFC
	0x02D4379C LDR X8, [X22 + 0x20]
	0x02D437A0 LDR X8, [X8 + 0xC0]
	0x02D437A4 LDR X0, [X8 + 0x8]
	0x02D437A8 LDRB W8, [X0 + 0x135]
	0x02D437AC TBNZ X8, 0x0, 0x2D437B4
	0x02D437B0 BL 0x1C5C684
	0x02D437B4 ADRP X9, 0x13DB000
	0x02D437B8 LDR X8, [X0 + 0xB8]
	0x02D437BC LDR X9, [X9 + 0xEF8]
	0x02D437C0 LDR X24, [X8]
	0x02D437C4 LDR X0, [X9]
	0x02D437C8 BL 0x1C16F10
	0x02D437CC LDR X8, [X22 + 0x20]
	0x02D437D0 MOV X1, X24
	0x02D437D4 MOV X3, X31
	0x02D437D8 MOV X23, X0
	0x02D437DC LDR X8, [X8 + 0xC0]
	0x02D437E0 LDR X2, [X8 + 0x10]
	0x02D437E4 BL 0x2D27548
	0x02D437E8 LDR X8, [X22 + 0x20]
	0x02D437EC LDR X8, [X8 + 0xC0]
	0x02D437F0 LDR X0, [X8 + 0x8]
	0x02D437F4 LDRB W9, [X0 + 0x135]
	0x02D437F8 TBNZ X9, 0x0, 0x2D43808
	0x02D437FC BL 0x1C5C684
	0x02D43800 LDR X8, [X22 + 0x20]
	0x02D43804 LDR X8, [X8 + 0xC0]
	0x02D43808 LDR X9, [X0 + 0xB8]
	0x02D4380C STR X23, [X9 + 0x8]
	0x02D43810 LDR X0, [X8 + 0x8]
	0x02D43814 LDRB W8, [X0 + 0x135]
	0x02D43818 TBNZ X8, 0x0, 0x2D43820
	0x02D4381C BL 0x1C5C684
	0x02D43820 CBZ X21, 0x2D43840
	0x02D43824 STR X23, [X21 + 0x28]
	0x02D43828 STP W19, W20, [X21 + 0x10]
	0x02D4382C LDP X20, X19, [X31 + 0x30]
	0x02D43830 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x1699000
	015 Move X22, 0x13B9000
	016 Move W8, [X21+2132]
	017 Move X22, [X22+1552]
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {53}
	024 Move X0, 0x13B1000
	025 Move X0, [X0+2416]
	026 Call 0x1C17CF4
	027 Move X0, 0x13B1000
	028 Move X0, [X0+2904]
	029 Call 0x1C17CF4
	030 Move X0, 0x13B9000
	031 Move X0, [X0+1552]
	032 Call 0x1C17CF4
	033 Move X0, 0x13B9000
	034 Move X0, [X0+2224]
	035 Call 0x1C17CF4
	036 Move X0, 0x13B1000
	037 Move X0, [X0+2512]
	038 Call 0x1C17CF4
	039 Move X0, 0x13B1000
	040 Move X0, [X0+1432]
	041 Call 0x1C17CF4
	042 Move X0, 0x13B1000
	043 Move X0, [X0+1728]
	044 Call 0x1C17CF4
	045 Move X0, 0x13DC000
	046 Move X0, [X0+3768]
	047 Call 0x1C17CF4
	048 Move X0, 0x13DC000
	049 Move X0, [X0+3776]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+2132], W8
	053 Move X0, [X22]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X31
	059 Call FusionGlobalScriptableObject.get_SourceAttributes
	060 Compare X0, 0
	061 JumpIfEqual {381}
	062 Move X8, [X0+24]
	063 Move X22, X0
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X27, 0x13B1000
	066 Move X28, 0x13B1000
	067 Move X29, 0x13B1000
	068 Move X27, [X27+2416]
	069 Move X28, [X28+1728]
	070 Move X29, [X29+1432]
	071 Move X25, X31
	072 And X8, X8, 0
	073 Add X26, X22, 32
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X27]
	076 Move X21, [X26]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X31
	082 Call Application.get_isEditor
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {98}
	087 Move X0, [X27]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X31
	093 Call Application.get_isPlaying
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {200}
	098 Compare X21, 0
	099 JumpIfEqual {381}
	100 Move X0, [X20+32]
	101 Move X23, [X21+16]
	102 Move W8, [X0+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {108}
	107 Call 0x1C5D684
	108 Move X8, [X28]
	109 Move X9, [X0+192]
	110 Move W10, [X8+224]
	111 Move X24, [X9+8]
	112 Compare W10, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X0, X24
	117 Move X1, X31
	118 Call Type.GetTypeFromHandle, X0
	119 Move X1, X0
	120 Move X0, X23
	121 Move X2, X31
	122 Call Type.op_Inequality, X0, X1
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {156}
	127 Move X0, [X20+32]
	128 Move W8, [X0+309]
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {134}
	133 Call 0x1C5D684
	134 Move X8, [X28]
	135 Move X9, [X0+192]
	136 Move W10, [X8+224]
	137 Move X23, [X9+8]
	138 Compare W10, 0
	139 JumpIfNotEqual {142}
	140 Move X0, X8
	141 Call 0x1C17DFC
	142 Move X0, X23
	143 Move X1, X31
	144 Call Type.GetTypeFromHandle, X0
	145 Compare X0, 0
	146 JumpIfEqual {381}
	147 Move X8, [X0]
	148 Move X1, [X21+16]
	149 Move X9, [X8+664]
	150 Move X2, [X8+672]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {197}
	156 Move X0, [X20+32]
	157 Move W8, [X0+309]
	158 Move TEMP, X8
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfEqual {163}
	162 Call 0x1C5D684
	163 Move X8, [X28]
	164 Move X9, [X0+192]
	165 Move W10, [X8+224]
	166 Move X23, [X9+8]
	167 Compare W10, 0
	168 JumpIfNotEqual {171}
	169 Move X0, X8
	170 Call 0x1C17DFC
	171 Move X0, X23
	172 Move X1, X31
	173 Call Type.GetTypeFromHandle, X0
	174 Move X8, [X21]
	175 Move X1, X0
	176 Move X0, X21
	177 Move X9, [X8+376]
	178 Move X2, [X8+384]
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move X24, X0
	181 Move X0, [X29]
	182 Move X23, X1
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Move X0, X24
	188 Move X1, X31
	189 Call Object.op_Implicit, X0
	190 Move TEMP, X0
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {249}
	194 Move W8, [X21+29]
	195 Compare W8, 0
	196 JumpIfEqual {205}
	197 Move W8, [X22+24]
	198 Add X25, X25, 1
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Compare X21, 0
	201 JumpIfEqual {381}
	202 Move W8, [X21+28]
	203 Compare W8, 0
	204 JumpIfNotEqual {100}
	205 Move X0, [X20+32]
	206 Move X20, 0x13DC000
	207 Move W8, [X0+309]
	208 Move X20, [X20+3776]
	209 Move TEMP, X8
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfEqual {214}
	213 Call 0x1C5D684
	214 Move X8, [X0+192]
	215 Move X0, [X8+24]
	216 Call 0x2D428A0
	217 Move X1, [X20]
	218 Move X2, X31
	219 Call String.Concat, X0, X1
	220 Move X8, 0x13B9000
	221 Move X8, [X8+2224]
	222 Move X20, X0
	223 Move X8, [X8]
	224 Move W9, [X8+224]
	225 Compare W9, 0
	226 JumpIfNotEqual {229}
	227 Move X0, X8
	228 Call 0x1C17DFC
	229 Move X0, X20
	230 Move X1, X31
	231 Call Log.Trace, X0
	232 Move X22, X31
	233 Move [X19], X31
	234 Move X0, X22
	235 Move X20, [X31+96]
	236 Move X19, [X31+104]
	237 Move X22, [X31+80]
	238 Move X21, [X31+88]
	239 Move X24, [X31+64]
	240 Move X23, [X31+72]
	241 Move X26, [X31+48]
	242 Move X25, [X31+56]
	243 Move X28, [X31+32]
	244 Move X27, [X31+40]
	245 Move X29, [X31+16]
	246 Move X30, [X31+24]
	247 Add X31, X31, 112
	248 Return X0
	249 Move X0, [X20+32]
	250 Move W8, [X0+309]
	251 Move TEMP, X8
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {256}
	255 Call 0x1C5D684
	256 Move X8, [X0+192]
	257 Move X25, [X8+48]
	258 Move W8, [X25+309]
	259 Move TEMP, X8
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {266}
	263 Move X0, X25
	264 Call 0x1C5D684
	265 Move X25, X0
	266 Compare X24, 0
	267 JumpIfEqual {277}
	268 Move X0, X24
	269 Move X1, X25
	270 Call 0x1C17E00
	271 Move X22, X0
	272 Compare X0, 0
	273 JumpIfNotEqual {278}
	274 Move X0, X24
	275 Move X1, X25
	276 Call 0x1C181E0
	277 Move X22, X31
	278 Move [X19], X23
	279 Move X8, 0x13B1000
	280 Move X8, [X8+2512]
	281 Move W1, 4
	282 Move X0, [X8]
	283 Call 0x1C17D6C
	284 Move X8, [X20+32]
	285 Move X23, X0
	286 Move W9, [X8+309]
	287 Move TEMP, X9
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfEqual {294}
	291 Move X0, X8
	292 Call 0x1C5D684
	293 Move X8, X0
	294 Move X8, [X8+192]
	295 Move X0, [X8+24]
	296 Call 0x2D428A0
	297 Compare X23, 0
	298 JumpIfEqual {381}
	299 Move X24, X0
	300 Compare X0, 0
	301 JumpIfEqual {308}
	302 Move X8, [X23]
	303 Move X0, X24
	304 Move X1, [X8+64]
	305 Call 0x1C17E00
	306 Compare X0, 0
	307 JumpIfEqual {383}
	308 Move W8, [X23+24]
	309 Compare W8, 0
	310 JumpIfEqual {382}
	311 Move X8, [X23]
	312 Move [X23+32], X24
	313 Move X0, X21
	314 Move X1, [X8+64]
	315 Call 0x1C17E00
	316 Compare X0, 0
	317 JumpIfEqual {383}
	318 Move W8, [X23+24]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move [X23+40], X21
	321 Move X0, [X20+32]
	322 Move W8, [X0+309]
	323 Move TEMP, X8
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfEqual {328}
	327 Call 0x1C5D684
	328 Move X0, X22
	329 Call 0x2D42968, X0
	330 Move X20, X0
	331 Compare X0, 0
	332 JumpIfEqual {339}
	333 Move X8, [X23]
	334 Move X0, X20
	335 Move X1, [X8+64]
	336 Call 0x1C17E00
	337 Compare X0, 0
	338 JumpIfEqual {383}
	339 Move W8, [X23+24]
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move [X23+48], X20
	342 Move X9, 0x13B1000
	343 Move X8, [X19]
	344 Move X9, [X9+2904]
	345 Add X1, X31, 12
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move X0, [X9]
	348 NotImplemented "Instruction CSET not yet implemented."
	349 Move [X31+12], W8
	350 Call 0x1C17E04
	351 Move X19, X0
	352 Compare X0, 0
	353 JumpIfEqual {360}
	354 Move X8, [X23]
	355 Move X0, X19
	356 Move X1, [X8+64]
	357 Call 0x1C17E00
	358 Compare X0, 0
	359 JumpIfEqual {383}
	360 Move W8, [X23+24]
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move [X23+56], X19
	363 Move X8, 0x13DC000
	364 Move X8, [X8+3768]
	365 Move X1, X23
	366 Move X2, X31
	367 Move X0, [X8]
	368 Call String.Format, X0, X1
	369 Move X8, 0x13B9000
	370 Move X8, [X8+2224]
	371 Move X19, X0
	372 Move X8, [X8]
	373 Move W9, [X8+224]
	374 Compare W9, 0
	375 JumpIfNotEqual {378}
	376 Move X0, X8
	377 Call 0x1C17DFC
	378 Move X0, X19
	379 Move X1, X31
	380 Call Log.Trace, X0
	381 Call 0x1C17F20
	382 Call 0x1C17F28
	383 Call 0x1C17F44
	384 Move X1, X31
	385 Call 0x1C17DEC

Method: System.Void SetGlobalInternal(T value, Fusion.FusionGlobalScriptableObjectUnloadDelegate unloadHandler)

Disassembly:
	0x02D43834 LDP X24, X23, [X31 + 0x10]
	0x02D43838 LDR X30, [X31], #0x40
	0x02D4383C RET
	0x02D43840 BL 0x1C16F20
	0x02D43844 LDR W0, [X0 + 0x10]
	0x02D43848 RET
	0x02D4384C LDR W0, [X0 + 0x14]
	0x02D43850 RET
	0x02D43854 LDR X0, [X0 + 0x18]
	0x02D43858 RET
	0x02D4385C STR X1, [X0 + 0x18]
	0x02D43860 RET
	0x02D43864 RET
	0x02D43868 STR D8, [X31 - 0x40]!
	0x02D4386C STR X30, [X31 + 0x8]
	0x02D43870 STP X24, X23, [X31 + 0x10]
	0x02D43874 STP X22, X21, [X31 + 0x20]
	0x02D43878 STP X20, X19, [X31 + 0x30]
	0x02D4387C ADRP X22, 0x1698000
	0x02D43880 LDRB W8, [X22 + 0x863]
	0x02D43884 MOV X21, X2
	0x02D43888 MOV X20, X1
	0x02D4388C MOV X19, X0
	0x02D43890 TBNZ X8, 0x0, 0x2D438A8
	0x02D43894 ADRP X0, 0x13B0000
	0x02D43898 LDR X0, [X0 + 0x5A8]
	0x02D4389C BL 0x1C16CF4
	0x02D438A0 MOVZ W8, 0x1
	0x02D438A4 STRB W8, [X22 + 0x863]
	0x02D438A8 CBZ X20, 0x2D439E0
	0x02D438AC LDR X8, [X21 + 0x20]
	0x02D438B0 MOV X0, X19
	0x02D438B4 LDR X8, [X8 + 0xC0]
	0x02D438B8 LDR X1, [X8 + 0x28]
	0x02D438BC LDR X8, [X1]
	0x02D438C0 BLR X8
	0x02D438C4 LDR X9, [X19 + 0x28]
	0x02D438C8 CBZ X9, 0x2D439E0
	0x02D438CC LDR W10, [X20 + 0x18]
	0x02D438D0 LDR X8, [X9 + 0x40]
	0x02D438D4 LDR X11, [X9 + 0x18]
	0x02D438D8 LDR X1, [X9 + 0x28]
	0x02D438DC ADRP X23, 0x13B0000
	0x02D438E0 LDR X23, [X23 + 0x5A8]
	0x02D438E4 SDIV W22, W10, W0
	0x02D438E8 MOV X0, X8
	0x02D438EC BLR X11
	0x02D438F0 LDR X8, [X21 + 0x20]
	0x02D438F4 MOV X0, X19
	0x02D438F8 MOV V8.16B, V0.16B
	0x02D438FC LDR X8, [X8 + 0xC0]
	0x02D43900 LDR X1, [X8 + 0x30]
	0x02D43904 LDR X8, [X1]
	0x02D43908 BLR X8
	0x02D4390C SCVTF D0, W0
	0x02D43910 LDR X0, [X23]
	0x02D43914 MOVZ X8, 0x7FF00000
	0x02D43918 FMOV D1, X8
	0x02D4391C LDR X8, [X19 + 0x20]
	0x02D43920 FMUL D0, D8, D0
	0x02D43924 LDR W10, [X0 + 0xE0]
	0x02D43928 FCVTZS X9, D0
	0x02D4392C FCMP D0, D1
	0x02D43930 MOVZ X11, 0x80000000
	0x02D43934 CSEL X23, X11, X9, EQ
	0x02D43938 SUB X24, X23, X8
	0x02D4393C CBNZ W10, 0x2D43944
	0x02D43940 BL 0x1C16DFC
	0x02D43944 LDR X8, [X21 + 0x20]
	0x02D43948 CMP X24, 0x0
	0x02D4394C MOV X0, X19
	0x02D43950 CSNEG X21, X24, X24, PL
	0x02D43954 LDR X8, [X8 + 0xC0]
	0x02D43958 LDR X1, [X8 + 0x30]
	0x02D4395C LDR X8, [X1]
	0x02D43960 BLR X8
	0x02D43964 ADD W8, W0, 0x3
	0x02D43968 CMP W0, 0x0
	0x02D4396C CSEL W8, W8, W0, LT
	0x02D43970 SBFM W8, W8, 0x2, 0x1F
	0x02D43974 CMP X21, W8, SXTW
	0x02D43978 SXTW X8, W22
	0x02D4397C B.LE 0x2D4398C
	0x02D43980 SUB X2, X23, X8
	0x02D43984 STR X2, [X19 + 0x20]
	0x02D43988 B 0x2D439A0
	0x02D4398C CMP X24, X8
	0x02D43990 B.GE 0x2D4399C
	0x02D43994 MOV W0, W31
	0x02D43998 B 0x2D439C8
	0x02D4399C LDR X2, [X19 + 0x20]
	0x02D439A0 LDR X8, [X19]
	0x02D439A4 MOV X0, X19
	0x02D439A8 MOV X1, X20
	0x02D439AC LDP X9, X3, [X8 + 0x1C8]
	0x02D439B0 BLR X9
	0x02D439B4 LDR X8, [X19 + 0x20]
	0x02D439B8 CMP W0, W22
	0x02D439BC ADD X8, X8, W0, SXTW
	0x02D439C0 CSET W0, EQ
	0x02D439C4 STR X8, [X19 + 0x20]
	0x02D439C8 LDP X20, X19, [X31 + 0x30]
	0x02D439CC LDP X22, X21, [X31 + 0x20]
	0x02D439D0 LDP X24, X23, [X31 + 0x10]
	0x02D439D4 LDR X30, [X31 + 0x8]
	0x02D439D8 LDR V8, [X31], #0x40
	0x02D439DC RET
	0x02D439E0 BL 0x1C16F20
	0x02D439E4 STR X30, [X31 - 0x10]!
	0x02D439E8 STRB W1, [X31 + 0x8]
	0x02D439EC LDR X8, [X3 + 0x20]
	0x02D439F0 AND X1, X2, 0xFF
	0x02D439F4 ADD X0, X31, 0x8
	0x02D439F8 LDR X8, [X8 + 0xC0]
	0x02D439FC LDR X8, [X8 + 0x10]
	0x02D43A00 MOV X2, X8
	0x02D43A04 BL 0x27945E8
	0x02D43A08 LDR X30, [X31], #0x10
	0x02D43A0C RET
	0x02D43A10 STP X30, X19, [X31 - 0x10]!
	0x02D43A14 LDR X8, [X2 + 0x20]
	0x02D43A18 MOV X19, X1
	0x02D43A1C LDR X8, [X8 + 0xC0]
	0x02D43A20 LDR X0, [X8 + 0x18]
	0x02D43A24 LDRB W8, [X0 + 0x135]
	0x02D43A28 TBNZ X8, 0x0, 0x2D43A30
	0x02D43A2C BL 0x1C5C684
	0x02D43A30 CBZ X19, 0x2D43A48
	0x02D43A34 LDR X8, [X19]
	0x02D43A38 LDRB W9, [X0 + 0x130]
	0x02D43A3C LDRB W10, [X8 + 0x130]
	0x02D43A40 CMP W10, W9
	0x02D43A44 B.CS 0x2D43A50
	0x02D43A48 MOV W0, W31
	0x02D43A4C B 0x2D43A64
	0x02D43A50 LDR X8, [X8 + 0xC8]
	0x02D43A54 ADD X8, X8, X9, 0x3, LSL
	0x02D43A58 LDUR X8, [X8 - 0x8]
	0x02D43A5C CMP X8, X0
	0x02D43A60 CSET W0, EQ
	0x02D43A64 LDP X30, X19, [X31], #0x10
	0x02D43A68 RET
	0x02D43A6C STR X30, [X31 - 0x10]!
	0x02D43A70 CBZ X0, 0x2D43AA0
	0x02D43A74 MOV X1, X31
	0x02D43A78 BL 0x33BE520
	0x02D43A7C CBZ X0, 0x2D43AA0
	0x02D43A80 LDR X8, [X0]
	0x02D43A84 LDP X9, X1, [X8 + 0x1A8]
	0x02D43A88 BLR X9
	0x02D43A8C CBZ X0, 0x2D43AA0
	0x02D43A90 LDR X8, [X0]
	0x02D43A94 LDP X2, X1, [X8 + 0x158]
	0x02D43A98 LDR X30, [X31], #0x10
	0x02D43A9C BR X2
	0x02D43AA0 BL 0x1C16F20
	0x02D43AA4 LDR X8, [X1 + 0x20]
	0x02D43AA8 LDR X8, [X8 + 0xC0]
	0x02D43AAC LDR X1, [X8 + 0x20]
	0x02D43AB0 B 0x290BB48
	0x02D43AB4 SUB X31, X31, 0x50
	0x02D43AB8 STR X30, [X31 + 0x40]
	0x02D43ABC LDR X8, [X2 + 0x10]
	0x02D43AC0 LDR V0, [X2]
	0x02D43AC4 MOV X0, X1
	0x02D43AC8 ADD X1, X31, 0x20
	0x02D43ACC STR X8, [X31 + 0x10]
	0x02D43AD0 STR V0, [X31]
	0x02D43AD4 LDR X9, [X3 + 0x20]
	0x02D43AD8 LDR X9, [X9 + 0xC0]
	0x02D43ADC LDR X2, [X9 + 0x10]
	0x02D43AE0 STR V0, [X31 + 0x2]
	0x02D43AE4 STR X8, [X31 + 0x30]
	0x02D43AE8 BL 0x2796DE8
	0x02D43AEC LDR X30, [X31 + 0x40]
	0x02D43AF0 ADD X31, X31, 0x50

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1699000
	008 Move W8, [X22+2133]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x13B1000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2133], W8
	021 Move X0, [X19+32]
	022 Move W8, [X0+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move X8, [X0+192]
	029 Move X23, 0x13B1000
	030 Move X0, [X8+32]
	031 Move W8, [X0+309]
	032 Move X23, [X23+1432]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X23]
	039 Move X9, [X0+184]
	040 Move W10, [X8+224]
	041 Move X22, [X9]
	042 Compare W10, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X0, X22
	047 Move X1, X31
	048 Call Object.op_Implicit, X0
	049 Move X8, [X19+32]
	050 Move W22, W0
	051 Move W9, [X8+309]
	052 Move TEMP, X9
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {59}
	056 Move X0, X8
	057 Call 0x1C5D684
	058 Move X8, X0
	059 Move X8, [X8+192]
	060 Move TEMP, X22
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {211}
	064 Move X0, [X8+32]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X0, [X23]
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X21
	077 Move X1, X31
	078 Call Object.op_Implicit, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {204}
	083 Move X0, [X19+32]
	084 Move W8, [X0+309]
	085 Move TEMP, X8
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {90}
	089 Call 0x1C5D684
	090 Move X8, [X0+192]
	091 Move X0, [X8+32]
	092 Move W8, [X0+309]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {98}
	097 Call 0x1C5D684
	098 Move X8, [X0+184]
	099 Move [X8], X21
	100 Move X0, [X19+32]
	101 Move W8, [X0+309]
	102 Move TEMP, X8
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {107}
	106 Call 0x1C5D684
	107 Move X8, [X0+192]
	108 Move X0, [X8+32]
	109 Move W8, [X0+309]
	110 Move TEMP, X8
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfEqual {115}
	114 Call 0x1C5D684
	115 Move X0, [X19+32]
	116 Move W8, [X0+309]
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {122}
	121 Call 0x1C5D684
	122 Move X8, [X0+192]
	123 Move X0, [X8+32]
	124 Move W8, [X0+309]
	125 Move TEMP, X8
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {130}
	129 Call 0x1C5D684
	130 Move X8, [X0+184]
	131 Move [X8+8], X20
	132 Move X0, [X19+32]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move X8, [X0+192]
	140 Move X0, [X8+32]
	141 Move W8, [X0+309]
	142 Move TEMP, X8
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfEqual {147}
	146 Call 0x1C5D684
	147 Move X0, [X19+32]
	148 Move W8, [X0+309]
	149 Move TEMP, X8
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {154}
	153 Call 0x1C5D684
	154 Move X8, [X0+192]
	155 Move X0, [X8+32]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Move X8, [X0+184]
	163 Move X20, [X8]
	164 Compare X20, 0
	165 JumpIfEqual {251}
	166 Move X0, [X19+32]
	167 Move W8, [X0+309]
	168 Move TEMP, X8
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {174}
	172 Call 0x1C5D684
	173 Move X0, [X19+32]
	174 Move W8, 1
	175 Move [X20+24], W8
	176 Move W8, [X0+309]
	177 Move TEMP, X8
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {182}
	181 Call 0x1C5D684
	182 Move X8, [X0+192]
	183 Move X0, [X8+32]
	184 Move W8, [X0+309]
	185 Move TEMP, X8
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfEqual {190}
	189 Call 0x1C5D684
	190 Move X8, [X0+184]
	191 Move X0, [X8]
	192 Compare X0, 0
	193 JumpIfEqual {251}
	194 Move X8, [X0]
	195 Move X20, [X31+32]
	196 Move X19, [X31+40]
	197 Move X22, [X31+16]
	198 Move X21, [X31+24]
	199 Move X2, [X8+376]
	200 Move X1, [X8+384]
	201 Move X30, [X31+48]
	202 Move X23, [X31+56]
	203 CallNoReturn X2
	204 Move X20, [X31+32]
	205 Move X19, [X31+40]
	206 Move X22, [X31+16]
	207 Move X21, [X31+24]
	208 Move X30, [X31+48]
	209 Move X23, [X31+56]
	210 Return 
	211 Move X0, 0x13B1000
	212 Move X20, [X8+8]
	213 Move X0, [X0+1728]
	214 Call 0x1C17D08
	215 Call 0x19913D0
	216 Move X0, X20
	217 Move X1, X31
	218 Call Type.GetTypeFromHandle, X0
	219 Move X20, X0
	220 Call 0x19913C0
	221 Move X8, [X20]
	222 Move X0, X20
	223 Move X9, [X8+424]
	224 Move X1, [X8+432]
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Move X20, X0
	227 Move X0, 0x13DC000
	228 Move X0, [X0+3784]
	229 Call 0x1C17D08
	230 Move X21, X0
	231 Move X0, 0x13DC000
	232 Move X0, [X0+3792]
	233 Call 0x1C17D08
	234 Move X2, X0
	235 Move X0, X21
	236 Move X1, X20
	237 Move X3, X31
	238 Call String.Concat, X0, X1, X2
	239 Move X20, X0
	240 Move X0, 0x13B1000
	241 Move X0, [X0+1456]
	242 Call 0x1C17D08
	243 Call 0x1C17F10
	244 Move X1, X20
	245 Move X2, X31
	246 Move X21, X0
	247 Call InvalidOperationException..ctor, X0, X1
	248 Move X0, X21
	249 Move X1, X19
	250 Call 0x1C17DEC
	251 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02D43AF4 RET
	0x02D43AF8 STP X30, X19, [X31 - 0x10]!
	0x02D43AFC LDR X8, [X2 + 0x20]
	0x02D43B00 MOV X19, X1
	0x02D43B04 LDR X8, [X8 + 0xC0]
	0x02D43B08 LDR X0, [X8 + 0x18]
	0x02D43B0C LDRB W8, [X0 + 0x135]
	0x02D43B10 TBNZ X8, 0x0, 0x2D43B18
	0x02D43B14 BL 0x1C5C684
	0x02D43B18 CBZ X19, 0x2D43B30
	0x02D43B1C LDR X8, [X19]
	0x02D43B20 LDRB W9, [X0 + 0x130]
	0x02D43B24 LDRB W10, [X8 + 0x130]
	0x02D43B28 CMP W10, W9
	0x02D43B2C B.CS 0x2D43B38
	0x02D43B30 MOV W0, W31
	0x02D43B34 B 0x2D43B4C
	0x02D43B38 LDR X8, [X8 + 0xC8]
	0x02D43B3C ADD X8, X8, X9, 0x3, LSL
	0x02D43B40 LDUR X8, [X8 - 0x8]
	0x02D43B44 CMP X8, X0
	0x02D43B48 CSET W0, EQ

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1699000
	006 Move X21, 0x13B9000
	007 Move W8, [X20+2134]
	008 Move X21, [X21+1552]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x13B9000
	015 Move X0, [X0+1552]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2134], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call FusionGlobalScriptableObject..ctor, X0
	031 Return 

