Type: Fusion.RuntimeUnityFlagsSetup

Method: System.Boolean get_IsUNITY_WEBGL()

Disassembly:
	0x01E38B3C STP X20, X19, [X31 + 0x20]
	0x01E38B40 CBZ X2, 0x1E38BBC
	0x01E38B44 MOV X21, X0
	0x01E38B48 MOV X0, X31
	0x01E38B4C MOV W20, W3
	0x01E38B50 MOV X19, X2
	0x01E38B54 MOV W22, W1
	0x01E38B58 BL 0x3242E20
	0x01E38B5C CBZ X0, 0x1E38C04
	0x01E38B60 LDR X8, [X0]
	0x01E38B64 MOV X1, X19
	0x01E38B68 LDP X9, X2, [X8 + 0x1F8]
	0x01E38B6C BLR X9
	0x01E38B70 ADD W8, W0, 0x3
	0x01E38B74 CMP W0, 0x0
	0x01E38B78 CSEL W8, W8, W0, LT
	0x01E38B7C SBFM W2, W8, 0x2, 0x1F
	0x01E38B80 CMP W2, W22
	0x01E38B84 B.LE 0x1E38B90

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3803]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3803], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W8, [X8]
	022 Move W0, W8
	023 ShiftRight W0, 1
	024 And W0, W0, 1
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Boolean get_IsUNITY_XBOXONE()

Disassembly:
	0x01E38B88 MOV W0, W31
	0x01E38B8C B 0x1E38BAC
	0x01E38B90 SUB W8, W22, W2
	0x01E38B94 ADD X1, X21, W8, 0x2, SXTW
	0x01E38B98 AND W3, W20, 0x1
	0x01E38B9C MOV X0, X19
	0x01E38BA0 BL 0x1E38760
	0x01E38BA4 CMP W0, 0x0
	0x01E38BA8 CSET W0, EQ
	0x01E38BAC LDP X20, X19, [X31 + 0x20]
	0x01E38BB0 LDP X22, X21, [X31 + 0x10]
	0x01E38BB4 LDR X30, [X31], #0x30
	0x01E38BB8 RET
	0x01E38BBC ADRP X0, 0x22C0000
	0x01E38BC0 LDR X0, [X0 + 0x528]
	0x01E38BC4 BL 0x1C16D08
	0x01E38BC8 BL 0x1C16F10
	0x01E38BCC MOV X19, X0
	0x01E38BD0 ADRP X0, 0x22C3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3804]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3804], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W8, [X8]
	022 Move W0, W8
	023 ShiftRight W0, 2
	024 And W0, W0, 3
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Boolean get_IsUNITY_GAMECORE()

Disassembly:
	0x01E38BD4 LDR X0, [X0 + 0x730]
	0x01E38BD8 BL 0x1C16D08
	0x01E38BDC MOV X1, X0
	0x01E38BE0 MOV X0, X19
	0x01E38BE4 MOV X2, X31
	0x01E38BE8 BL 0x330E100
	0x01E38BEC ADRP X0, 0x22C3000
	0x01E38BF0 LDR X0, [X0 + 0x750]
	0x01E38BF4 BL 0x1C16D08
	0x01E38BF8 MOV X1, X0
	0x01E38BFC MOV X0, X19
	0x01E38C00 BL 0x1C16DEC
	0x01E38C04 BL 0x1C16F20
	0x01E38C08 STR X30, [X31 - 0x30]!
	0x01E38C0C STP X22, X21, [X31 + 0x10]
	0x01E38C10 STP X20, X19, [X31 + 0x20]
	0x01E38C14 MOVZ W20, 0x1505
	0x01E38C18 CMP W1, 0x1
	0x01E38C1C MOVK W20, 0x15050000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3805]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3805], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W8, [X8]
	022 Move W0, W8
	023 ShiftRight W0, 3
	024 And W0, W0, 7
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Boolean get_IsUNITY_EDITOR()

Disassembly:
	0x01E38C20 B.LT 0x1E38C7C
	0x01E38C24 MOVZ W22, 0x1505
	0x01E38C28 MOV X19, X0
	0x01E38C2C MOV W21, W1
	0x01E38C30 MOVK W22, 0x15050000
	0x01E38C34 LDR W0, [X19], #0x4
	0x01E38C38 BL 0x1E389EC
	0x01E38C3C ADD W8, W22, W22, 0x5, LSL
	0x01E38C40 AND W9, W0, 0xFFFF
	0x01E38C44 ADD W10, W20, W20, 0x5, LSL
	0x01E38C48 UBFM X11, X0, 0x10, 0x1F
	0x01E38C4C EOR W8, W9, W8, 0x0
	0x01E38C50 EOR W9, W10, W0, 0x10
	0x01E38C54 CMP W11, 0x0
	0x01E38C58 CSEL W22, W20, W8, EQ
	0x01E38C5C CSEL W20, W8, W9, EQ
	0x01E38C60 SUBS X21, X21, 0x1
	0x01E38C64 B.NE 0x1E38C34
	0x01E38C68 MOVZ W8, 0x8B65

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3806]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3806], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W8, [X8]
	022 Move W0, W8
	023 ShiftRight W0, 4
	024 And W0, W0, 15
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Boolean get_IsUNITY_SWITCH()

Disassembly:
	0x01E38C6C MOVK W8, 0x5D580000
	0x01E38C70 MUL W8, W20, W8
	0x01E38C74 MOV W20, W22
	0x01E38C78 B 0x1E38C84
	0x01E38C7C MOVZ W8, 0x1F9
	0x01E38C80 MOVK W8, 0x18230000
	0x01E38C84 ADD W0, W8, W20
	0x01E38C88 LDP X20, X19, [X31 + 0x20]
	0x01E38C8C LDP X22, X21, [X31 + 0x10]
	0x01E38C90 LDR X30, [X31], #0x30
	0x01E38C94 RET
	0x01E38C98 CMP W3, W1
	0x01E38C9C B.LE 0x1E38CA8
	0x01E38CA0 MOV W0, W31
	0x01E38CA4 RET
	0x01E38CA8 STR X30, [X31 - 0x10]!
	0x01E38CAC AND W4, W4, 0x1
	0x01E38CB0 MOV W1, W3
	0x01E38CB4 BL 0x1E38430

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3807]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3807], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W8, [X8]
	022 Move W0, W8
	023 ShiftRight W0, 5
	024 And W0, W0, 31
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Boolean get_IsUNITY_2019_4_OR_NEWER()

Disassembly:
	0x01E38CB8 CMP W0, 0x0
	0x01E38CBC CSET W0, EQ
	0x01E38CC0 LDR X30, [X31], #0x10
	0x01E38CC4 RET
	0x01E38CC8 STR X30, [X31 - 0x30]!
	0x01E38CCC STP X22, X21, [X31 + 0x10]
	0x01E38CD0 STP X20, X19, [X31 + 0x20]
	0x01E38CD4 CBZ X2, 0x1E38D4C
	0x01E38CD8 MOV X21, X0
	0x01E38CDC MOV X0, X31
	0x01E38CE0 MOV W20, W3
	0x01E38CE4 MOV X19, X2
	0x01E38CE8 MOV W22, W1
	0x01E38CEC BL 0x3242E20
	0x01E38CF0 CBZ X0, 0x1E38D94
	0x01E38CF4 LDR X8, [X0]
	0x01E38CF8 MOV X1, X19
	0x01E38CFC LDP X9, X2, [X8 + 0x1F8]
	0x01E38D00 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3808]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3808], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W8, [X8]
	022 Move W0, W8
	023 ShiftRight W0, 6
	024 And W0, W0, 63
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Void Check_UNITY_WEBGL()

Disassembly:
	0x01E38D04 ADD W8, W0, 0x3
	0x01E38D08 CMP W0, 0x0
	0x01E38D0C CSEL W8, W8, W0, LT
	0x01E38D10 SBFM W2, W8, 0x2, 0x1F
	0x01E38D14 CMP W2, W22
	0x01E38D18 B.LE 0x1E38D24
	0x01E38D1C MOV W0, W31
	0x01E38D20 B 0x1E38D3C
	0x01E38D24 AND W3, W20, 0x1
	0x01E38D28 MOV X0, X19
	0x01E38D2C MOV X1, X21
	0x01E38D30 BL 0x1E38760
	0x01E38D34 CMP W0, 0x0
	0x01E38D38 CSET W0, EQ
	0x01E38D3C LDP X20, X19, [X31 + 0x20]
	0x01E38D40 LDP X22, X21, [X31 + 0x10]
	0x01E38D44 LDR X30, [X31], #0x30
	0x01E38D48 RET
	0x01E38D4C ADRP X0, 0x22C0000
	0x01E38D50 LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3809]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3809], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W9, [X8]
	022 Or W9, W9, 2
	023 Move [X8], W9
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void Check_UNITY_XBOXONE()

Disassembly:
	0x01E38D54 BL 0x1C16D08
	0x01E38D58 BL 0x1C16F10
	0x01E38D5C MOV X19, X0
	0x01E38D60 ADRP X0, 0x22C3000
	0x01E38D64 LDR X0, [X0 + 0x730]
	0x01E38D68 BL 0x1C16D08
	0x01E38D6C MOV X1, X0
	0x01E38D70 MOV X0, X19
	0x01E38D74 MOV X2, X31
	0x01E38D78 BL 0x330E100
	0x01E38D7C ADRP X0, 0x22C3000
	0x01E38D80 LDR X0, [X0 + 0x758]
	0x01E38D84 BL 0x1C16D08
	0x01E38D88 MOV X1, X0
	0x01E38D8C MOV X0, X19
	0x01E38D90 BL 0x1C16DEC
	0x01E38D94 BL 0x1C16F20
	0x01E38D98 STR X30, [X31 - 0x60]!
	0x01E38D9C STP X28, X27, [X31 + 0x10]
	0x01E38DA0 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3810]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3810], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W9, [X8]
	022 Or W9, W9, 4
	023 Move [X8], W9
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void Check_UNITY_GAMECORE()

Disassembly:
	0x01E38DA4 STP X24, X23, [X31 + 0x30]
	0x01E38DA8 STP X22, X21, [X31 + 0x40]
	0x01E38DAC STP X20, X19, [X31 + 0x50]
	0x01E38DB0 TBNZ X1, 0x1F, 0x1E38EA0
	0x01E38DB4 MOV X20, X0
	0x01E38DB8 CBZ X0, 0x1E38ED4
	0x01E38DBC MOV X23, X2
	0x01E38DC0 CBZ X2, 0x1E38EF4
	0x01E38DC4 MOV W19, W1
	0x01E38DC8 CBZ W1, 0x1E38E00
	0x01E38DCC MOV X0, X31
	0x01E38DD0 BL 0x3242E20
	0x01E38DD4 CBZ X0, 0x1E38F3C
	0x01E38DD8 LDR X8, [X0]
	0x01E38DDC MOV X1, X23
	0x01E38DE0 LDP X9, X2, [X8 + 0x1F8]
	0x01E38DE4 BLR X9
	0x01E38DE8 ADD W8, W0, 0x3
	0x01E38DEC CMP W0, 0x0
	0x01E38DF0 CSEL W8, W8, W0, LT

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3811]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3811], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W9, [X8]
	022 Or W9, W9, 8
	023 Move [X8], W9
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void Check_UNITY_EDITOR()

Disassembly:
	0x01E38DF4 SBFM W24, W8, 0x2, 0x1F
	0x01E38DF8 CMP W24, W19
	0x01E38DFC B.LE 0x1E38E24
	0x01E38E00 MOVN W21, 0x0
	0x01E38E04 MOV W0, W21
	0x01E38E08 LDP X20, X19, [X31 + 0x50]
	0x01E38E0C LDP X22, X21, [X31 + 0x40]
	0x01E38E10 LDP X24, X23, [X31 + 0x30]
	0x01E38E14 LDP X26, X25, [X31 + 0x20]
	0x01E38E18 LDP X28, X27, [X31 + 0x10]
	0x01E38E1C LDR X30, [X31], #0x60
	0x01E38E20 RET
	0x01E38E24 MOV W22, W0
	0x01E38E28 MOV X0, X31
	0x01E38E2C BL 0x32C1424
	0x01E38E30 LDRSW X8, [X23 + 0x10]
	0x01E38E34 ADD X25, X23, W0, SXTW
	0x01E38E38 MOV W21, W31
	0x01E38E3C MOV W26, W24
	0x01E38E40 ADD X23, X25, X8, 0x1, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3812]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3812], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W9, [X8]
	022 Or W9, W9, 16
	023 Move [X8], W9
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void Check_UNITY_SWITCH()

Disassembly:
	0x01E38E44 CMP W22, 0x4
	0x01E38E48 MOV W27, W31
	0x01E38E4C STR X25, [X31 + 0x8]
	0x01E38E50 B.LT 0x1E38E84
	0x01E38E54 MOV X28, X26
	0x01E38E58 ADD X0, X31, 0x8
	0x01E38E5C MOV X1, X23
	0x01E38E60 BL 0x1E38F40
	0x01E38E64 ADD W8, W21, W27
	0x01E38E68 LDR W8, [X20, W8, SXTW]
	0x01E38E6C CMP W8, W0
	0x01E38E70 B.NE 0x1E38E84
	0x01E38E74 SUBS X28, X28, 0x1
	0x01E38E78 ADD W27, W27, 0x1
	0x01E38E7C B.NE 0x1E38E58
	0x01E38E80 B 0x1E38E04
	0x01E38E84 CMP W27, W24
	0x01E38E88 B.EQ 0x1E38E04
	0x01E38E8C ADD W21, W21, 0x1
	0x01E38E90 ADD W8, W21, W24

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3813]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3813], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W9, [X8]
	022 Or W9, W9, 32
	023 Move [X8], W9
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void Check_UNITY_2019_4_OR_NEWER()

Disassembly:
	0x01E38E94 CMP W8, W19
	0x01E38E98 B.LE 0x1E38E44
	0x01E38E9C B 0x1E38E00
	0x01E38EA0 ADRP X0, 0x22C3000
	0x01E38EA4 LDR X0, [X0 + 0x760]
	0x01E38EA8 BL 0x1C16D08
	0x01E38EAC BL 0x1C16F10
	0x01E38EB0 MOV X19, X0
	0x01E38EB4 ADRP X0, 0x22C3000
	0x01E38EB8 LDR X0, [X0 + 0x768]
	0x01E38EBC BL 0x1C16D08
	0x01E38EC0 MOV X1, X0
	0x01E38EC4 MOV X0, X19
	0x01E38EC8 MOV X2, X31
	0x01E38ECC BL 0x3316014
	0x01E38ED0 B 0x1E38F24
	0x01E38ED4 ADRP X0, 0x22C0000
	0x01E38ED8 LDR X0, [X0 + 0x528]
	0x01E38EDC BL 0x1C16D08
	0x01E38EE0 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3814]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3814], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W9, [X8]
	022 Or W9, W9, 64
	023 Move [X8], W9
	024 Move X30, [X31+32]
	025 Return 

Method: System.Boolean get_IsENABLE_MONO()

Disassembly:
	0x01E38EE4 MOV X19, X0
	0x01E38EE8 ADRP X0, 0x22BD000
	0x01E38EEC LDR X0, [X0 + 0xC80]
	0x01E38EF0 B 0x1E38F10
	0x01E38EF4 ADRP X0, 0x22C0000
	0x01E38EF8 LDR X0, [X0 + 0x528]
	0x01E38EFC BL 0x1C16D08
	0x01E38F00 BL 0x1C16F10
	0x01E38F04 MOV X19, X0
	0x01E38F08 ADRP X0, 0x22C3000
	0x01E38F0C LDR X0, [X0 + 0x770]
	0x01E38F10 BL 0x1C16D08
	0x01E38F14 MOV X1, X0
	0x01E38F18 MOV X0, X19
	0x01E38F1C MOV X2, X31
	0x01E38F20 BL 0x330E100
	0x01E38F24 ADRP X0, 0x22C3000
	0x01E38F28 LDR X0, [X0 + 0x778]
	0x01E38F2C BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3815]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3815], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W8, [X8+4]
	022 Move W0, W8
	023 ShiftRight W0, 1
	024 And W0, W0, 1
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Boolean get_IsENABLE_IL2CPP()

Disassembly:
	0x01E38F30 MOV X1, X0
	0x01E38F34 MOV X0, X19
	0x01E38F38 BL 0x1C16DEC
	0x01E38F3C BL 0x1C16F20
	0x01E38F40 STR X30, [X31 - 0x30]!
	0x01E38F44 STP X22, X21, [X31 + 0x10]
	0x01E38F48 STP X20, X19, [X31 + 0x20]
	0x01E38F4C ADRP X22, 0x25A0000
	0x01E38F50 ADRP X21, 0x22BD000
	0x01E38F54 LDRB W8, [X22 + 0xEF5]
	0x01E38F58 LDR X21, [X21 + 0x170]
	0x01E38F5C MOV X20, X1
	0x01E38F60 MOV X19, X0
	0x01E38F64 TBNZ X8, 0x0, 0x1E38F88
	0x01E38F68 ADRP X0, 0x22BD000
	0x01E38F6C LDR X0, [X0 + 0x170]
	0x01E38F70 BL 0x1C16CF4
	0x01E38F74 ADRP X0, 0x22C3000
	0x01E38F78 LDR X0, [X0 + 0x780]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3816]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3816], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W8, [X8+4]
	022 Move W0, W8
	023 ShiftRight W0, 2
	024 And W0, W0, 3
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Void Check_ENABLE_MONO()

Disassembly:
	0x01E38F7C BL 0x1C16CF4
	0x01E38F80 MOVZ W8, 0x1
	0x01E38F84 STRB W8, [X22 + 0xEF5]
	0x01E38F88 LDR X8, [X19]
	0x01E38F8C ADD X9, X8, 0x2
	0x01E38F90 STR X9, [X19]
	0x01E38F94 LDR X0, [X21]
	0x01E38F98 LDRH W21, [X8]
	0x01E38F9C LDR W9, [X0 + 0xE0]
	0x01E38FA0 CBNZ W9, 0x1E38FA8
	0x01E38FA4 BL 0x1C16DFC
	0x01E38FA8 MOV W0, W21
	0x01E38FAC MOV X1, X31
	0x01E38FB0 BL 0x331BFEC
	0x01E38FB4 TBZ X0, 0x0, 0x1E38FF8
	0x01E38FB8 ADRP X9, 0x22C3000
	0x01E38FBC LDR X8, [X19]
	0x01E38FC0 LDR X9, [X9 + 0x780]
	0x01E38FC4 MOV X2, X31
	0x01E38FC8 CMP X8, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3817]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3817], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W9, [X8+4]
	022 Or W9, W9, 2
	023 Move [X8+4], W9
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void Check_ENABLE_IL2CPP()

Disassembly:
	0x01E38FCC LDR X1, [X9]
	0x01E38FD0 CSET W0, CC
	0x01E38FD4 BL 0x1E3BA60
	0x01E38FD8 LDR X8, [X19]
	0x01E38FDC ADD X9, X8, 0x2
	0x01E38FE0 STR X9, [X19]
	0x01E38FE4 LDRH W8, [X8]
	0x01E38FE8 MOVZ W9, 0x2400
	0x01E38FEC MOVK W9, 0xFCA00000
	0x01E38FF0 ADD W8, W8, W21, 0xA, LSL
	0x01E38FF4 ADD W21, W8, W9
	0x01E38FF8 MOV W0, W21
	0x01E38FFC LDP X20, X19, [X31 + 0x20]
	0x01E39000 LDP X22, X21, [X31 + 0x10]
	0x01E39004 LDR X30, [X31], #0x30
	0x01E39008 RET
	0x01E3900C STP X30, X19, [X31 - 0x10]!
	0x01E39010 TBNZ X1, 0x1F, 0x1E390A0
	0x01E39014 TBNZ X3, 0x1F, 0x1E390C0
	0x01E39018 MOV X8, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A1000
	005 Move X20, 0x22C4000
	006 Move W8, [X19+3818]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C4000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3818], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W9, [X8+4]
	022 Or W9, W9, 4
	023 Move [X8+4], W9
	024 Move X30, [X31+32]
	025 Return 

Method: System.Boolean get_IsNET_4_6()

Disassembly:
	0x01E3901C CBZ X0, 0x1E390F4
	0x01E39020 CBZ X2, 0x1E39114
	0x01E39024 MOVN W0, 0x0
	0x01E39028 CBZ W1, 0x1E39098
	0x01E3902C CMP W3, W1
	0x01E39030 B.GT 0x1E39098
	0x01E39034 MOV W0, W31
	0x01E39038 MOV W9, W3
	0x01E3903C CMP W3, 0x1
	0x01E39040 B.LT 0x1E39078
	0x01E39044 MOV W10, W31
	0x01E39048 MOV X11, X9
	0x01E3904C MOV X12, X2
	0x01E39050 ADD W13, W0, W10
	0x01E39054 LDR W13, [X8, W13, SXTW]
	0x01E39058 LDR W14, [X12]
	0x01E3905C CMP W13, W14
	0x01E39060 B.NE 0x1E3907C
	0x01E39064 ADD W10, W10, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A0000
	005 Move X20, 0x22C3000
	006 Move W8, [X19+3819]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C3000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3819], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W8, [X8+8]
	022 Move W0, W8
	023 ShiftRight W0, 1
	024 And W0, W0, 1
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Boolean get_IsNETFX_CORE()

Disassembly:
	0x01E39068 SUBS X11, X11, 0x1
	0x01E3906C ADD X12, X12, 0x4
	0x01E39070 B.NE 0x1E39050
	0x01E39074 B 0x1E39098
	0x01E39078 MOV W10, W31
	0x01E3907C CMP W10, W3
	0x01E39080 B.EQ 0x1E39098
	0x01E39084 ADD W0, W0, 0x1
	0x01E39088 ADD W10, W0, W3
	0x01E3908C CMP W10, W1
	0x01E39090 B.LE 0x1E3903C
	0x01E39094 MOVN W0, 0x0
	0x01E39098 LDP X30, X19, [X31], #0x10
	0x01E3909C RET
	0x01E390A0 ADRP X0, 0x22C2000
	0x01E390A4 LDR X0, [X0 + 0x760]
	0x01E390A8 BL 0x1C16D08
	0x01E390AC BL 0x1C16F10
	0x01E390B0 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A0000
	005 Move X20, 0x22C3000
	006 Move W8, [X19+3820]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C3000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3820], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W8, [X8+8]
	022 Move W0, W8
	023 ShiftRight W0, 2
	024 And W0, W0, 3
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Boolean get_IsNET_STANDARD_2_0()

Disassembly:
	0x01E390B4 ADRP X0, 0x22C2000
	0x01E390B8 LDR X0, [X0 + 0x768]
	0x01E390BC B 0x1E390DC
	0x01E390C0 ADRP X0, 0x22C2000
	0x01E390C4 LDR X0, [X0 + 0x760]
	0x01E390C8 BL 0x1C16D08
	0x01E390CC BL 0x1C16F10
	0x01E390D0 MOV X19, X0
	0x01E390D4 ADRP X0, 0x22C2000
	0x01E390D8 LDR X0, [X0 + 0x788]
	0x01E390DC BL 0x1C16D08
	0x01E390E0 MOV X1, X0
	0x01E390E4 MOV X0, X19
	0x01E390E8 MOV X2, X31
	0x01E390EC BL 0x3316014
	0x01E390F0 B 0x1E39144
	0x01E390F4 ADRP X0, 0x22BF000
	0x01E390F8 LDR X0, [X0 + 0x528]
	0x01E390FC BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A0000
	005 Move X20, 0x22C3000
	006 Move W8, [X19+3821]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C3000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3821], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W8, [X8+8]
	022 Move W0, W8
	023 ShiftRight W0, 3
	024 And W0, W0, 7
	025 Move X30, [X31+32]
	026 Return X0

Method: System.Void Check_NET_4_6()

Disassembly:
	0x01E39100 BL 0x1C16F10
	0x01E39104 MOV X19, X0
	0x01E39108 ADRP X0, 0x22BC000
	0x01E3910C LDR X0, [X0 + 0xC80]
	0x01E39110 B 0x1E39130
	0x01E39114 ADRP X0, 0x22BF000
	0x01E39118 LDR X0, [X0 + 0x528]
	0x01E3911C BL 0x1C16D08
	0x01E39120 BL 0x1C16F10
	0x01E39124 MOV X19, X0
	0x01E39128 ADRP X0, 0x22C2000
	0x01E3912C LDR X0, [X0 + 0x770]
	0x01E39130 BL 0x1C16D08
	0x01E39134 MOV X1, X0
	0x01E39138 MOV X0, X19
	0x01E3913C MOV X2, X31
	0x01E39140 BL 0x330E100
	0x01E39144 ADRP X0, 0x22C2000
	0x01E39148 LDR X0, [X0 + 0x790]
	0x01E3914C BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A0000
	005 Move X20, 0x22C3000
	006 Move W8, [X19+3822]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C3000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3822], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W9, [X8+8]
	022 Or W9, W9, 2
	023 Move [X8+8], W9
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void Check_NETFX_CORE()

Disassembly:
	0x01E39150 MOV X1, X0
	0x01E39154 MOV X0, X19
	0x01E39158 BL 0x1C16DEC
	0x01E3915C STP X30, X21, [X31 - 0x20]!
	0x01E39160 STP X20, X19, [X31 + 0x10]
	0x01E39164 CBZ X0, 0x1E391A0
	0x01E39168 MOV X19, X1
	0x01E3916C CBZ X1, 0x1E391C0
	0x01E39170 TBNZ X2, 0x1F, 0x1E391E0
	0x01E39174 CBZ W2, 0x1E39194
	0x01E39178 MOV X20, X0
	0x01E3917C MOV W21, W2
	0x01E39180 LDR W0, [X20], #0x4
	0x01E39184 BL 0x1E38668
	0x01E39188 SUBS X21, X21, 0x1
	0x01E3918C STR W0, [X19], #0x4
	0x01E39190 B.NE 0x1E39180
	0x01E39194 LDP X20, X19, [X31 + 0x10]
	0x01E39198 LDP X30, X21, [X31], #0x20
	0x01E3919C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A0000
	005 Move X20, 0x22C3000
	006 Move W8, [X19+3823]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C3000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3823], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W9, [X8+8]
	022 Or W9, W9, 4
	023 Move [X8+8], W9
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void Check_NET_STANDARD_2_0()

Disassembly:
	0x01E391A0 ADRP X0, 0x22BF000
	0x01E391A4 LDR X0, [X0 + 0x528]
	0x01E391A8 BL 0x1C16D08
	0x01E391AC BL 0x1C16F10
	0x01E391B0 MOV X19, X0
	0x01E391B4 ADRP X0, 0x22C2000
	0x01E391B8 LDR X0, [X0 + 0x798]
	0x01E391BC B 0x1E391FC
	0x01E391C0 ADRP X0, 0x22BF000
	0x01E391C4 LDR X0, [X0 + 0x528]
	0x01E391C8 BL 0x1C16D08
	0x01E391CC BL 0x1C16F10
	0x01E391D0 MOV X19, X0
	0x01E391D4 ADRP X0, 0x22C2000
	0x01E391D8 LDR X0, [X0 + 0x7A0]
	0x01E391DC B 0x1E391FC
	0x01E391E0 ADRP X0, 0x22BF000
	0x01E391E4 LDR X0, [X0 + 0x528]
	0x01E391E8 BL 0x1C16D08
	0x01E391EC BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A0000
	005 Move X20, 0x22C3000
	006 Move W8, [X19+3824]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C3000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3824], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W9, [X8+8]
	022 Or W9, W9, 8
	023 Move [X8+8], W9
	024 Move X30, [X31+32]
	025 Return 

Method: System.Void Reset()

Disassembly:
	0x01E391F0 MOV X19, X0
	0x01E391F4 ADRP X0, 0x22C2000
	0x01E391F8 LDR X0, [X0 + 0x768]
	0x01E391FC BL 0x1C16D08
	0x01E39200 MOV X1, X0
	0x01E39204 MOV X0, X19
	0x01E39208 MOV X2, X31
	0x01E3920C BL 0x330E100
	0x01E39210 ADRP X0, 0x22C2000
	0x01E39214 LDR X0, [X0 + 0x7A8]
	0x01E39218 BL 0x1C16D08
	0x01E3921C MOV X1, X0
	0x01E39220 MOV X0, X19
	0x01E39224 BL 0x1C16DEC
	0x01E39228 STP X30, X21, [X31 - 0x20]!
	0x01E3922C STP X20, X19, [X31 + 0x10]
	0x01E39230 CBZ X0, 0x1E3926C
	0x01E39234 MOV X19, X1
	0x01E39238 CBZ X1, 0x1E3928C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x25A0000
	005 Move X20, 0x22C3000
	006 Move W8, [X19+3825]
	007 Move X20, [X20+1808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x22C3000
	013 Move X0, [X0+1808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3825], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move [X8], X31
	022 Move [X8+8], W31
	023 Move X30, [X31+32]
	024 Return 

