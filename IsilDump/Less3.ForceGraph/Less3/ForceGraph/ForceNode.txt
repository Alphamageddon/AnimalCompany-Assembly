Type: Less3.ForceGraph.ForceNode

Method: Less3.ForceGraph.ForceGraph get_graph()

Disassembly:
	0x031CE6B0 LDR X23, [X23 + 0x5B8]
	0x031CE6B4 MOV X19, X0

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_graph(Less3.ForceGraph.ForceGraph value)

Disassembly:
	0x031CE6B8 TBNZ X8, 0x0, 0x31CE6F4
	0x031CE6BC ADRP X0, 0xF51000

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Boolean get_pinned()

Disassembly:
	0x031CE6C0 LDR X0, [X0 + 0x5B8]
	0x031CE6C4 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_pinned(System.Boolean value)

Disassembly:
	0x031CE6C8 ADRP X0, 0xF51000
	0x031CE6CC LDR X0, [X0 + 0xC08]
	0x031CE6D0 BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+40], W8
	003 Return 

Method: System.Void SetGraph(Less3.ForceGraph.ForceGraph graph)

Disassembly:
	0x031CE2E0 STR X30, [X31 - 0x40]!
	0x031CE2E4 STP X24, X23, [X31 + 0x10]
	0x031CE2E8 STP X22, X21, [X31 + 0x20]
	0x031CE2EC STP X20, X19, [X31 + 0x30]
	0x031CE2F0 ADRP X24, 0x120E000
	0x031CE2F4 ADRP X23, 0xF2B000
	0x031CE2F8 ADRP X20, 0xF2B000
	0x031CE2FC ADRP X22, 0xF51000
	0x031CE300 ADRP X21, 0xF51000
	0x031CE304 LDRB W8, [X24 + 0xF]
	0x031CE308 LDR X23, [X23 + 0x548]
	0x031CE30C LDR X20, [X20 + 0x550]
	0x031CE310 LDR X22, [X22 + 0xCA8]
	0x031CE314 LDR X21, [X21 + 0xCB0]
	0x031CE318 MOV X19, X0
	0x031CE31C TBNZ X8, 0x0, 0x31CE358
	0x031CE320 ADRP X0, 0xF51000
	0x031CE324 LDR X0, [X0 + 0xCB0]
	0x031CE328 BL 0x1C16CF4
	0x031CE32C ADRP X0, 0xF2B000
	0x031CE330 LDR X0, [X0 + 0x550]
	0x031CE334 BL 0x1C16CF4
	0x031CE338 ADRP X0, 0xF2B000
	0x031CE33C LDR X0, [X0 + 0x548]
	0x031CE340 BL 0x1C16CF4
	0x031CE344 ADRP X0, 0xF51000
	0x031CE348 LDR X0, [X0 + 0xCA8]
	0x031CE34C BL 0x1C16CF4
	0x031CE350 MOVZ W8, 0x1
	0x031CE354 STRB W8, [X24 + 0xF]
	0x031CE358 MOVZ W8, 0x999A
	0x031CE35C MOVK W8, 0x3E990000
	0x031CE360 STR W8, [X19 + 0x8C]
	0x031CE364 LDR X0, [X23]
	0x031CE368 BL 0x1C16F10
	0x031CE36C LDR X1, [X20]
	0x031CE370 MOV X20, X0
	0x031CE374 BL 0x301B7C4
	0x031CE378 STR X20, [X19 + 0xA0]
	0x031CE37C LDR X0, [X22]
	0x031CE380 BL 0x1C16F10
	0x031CE384 LDR X1, [X21]
	0x031CE388 MOV X20, X0
	0x031CE38C BL 0x301B7C4
	0x031CE390 STR X20, [X19 + 0xA8]
	0x031CE394 MOV X0, X19
	0x031CE398 LDP X20, X19, [X31 + 0x30]
	0x031CE39C LDP X22, X21, [X31 + 0x20]
	0x031CE3A0 LDP X24, X23, [X31 + 0x10]
	0x031CE3A4 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x120F000
	007 Move X21, 0xF26000
	008 Move W8, [X22+8]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xF26000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0xF26000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0xF52000
	023 Move X0, [X0+3032]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+8], W8
	027 Move X0, [X21]
	028 Move X21, [X20+32]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X21
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {59}
	041 Move X8, 0xF26000
	042 Move X8, [X8+2600]
	043 Move X19, 0xF52000
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Move X19, [X19+3032]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X19]
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X1, X31
	056 Move X30, [X31+48]
	057 Call Debug.LogError, X0
	058 Return 
	059 Move [X20+32], X19
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return 

Method: System.String ToString()

Disassembly:
	0x031CE6D4 ADRP X0, 0xF51000
	0x031CE6D8 LDR X0, [X0 + 0xC00]

ISIL:
	001 Move X1, X31
	002 Call Object.get_name, X0
	003 Return X0

Method: System.Void .ctor()

Disassembly:
	0x031CE6DC BL 0x1C16CF4
	0x031CE6E0 ADRP X0, 0xF29000

ISIL:
	001 Move X1, X31
	002 Call ScriptableObject..ctor, X0
	003 Return 

