Type: UnityEngine.UIElements.TextField

Method: UnityEngine.UIElements.TextField/TextInput get_textInput()

Disassembly:
	0x03D69018 LDR X10, [X8 + 0xB0]
	0x03D6901C ADD X10, X10, 0x8
	0x03D69020 LDUR X11, [X10 - 0x8]
	0x03D69024 CMP X11, X1
	0x03D69028 B.EQ 0x3D690E0
	0x03D6902C SUBS X9, X9, 0x1
	0x03D69030 ADD X10, X10, 0x10
	0x03D69034 B.NE 0x3D69020
	0x03D69038 MOV X0, X20
	0x03D6903C MOV W2, W31
	0x03D69040 BL 0x1C5C788
	0x03D69044 B 0x3D690EC
	0x03D69048 LDR X0, [X19 + 0x10]
	0x03D6904C CMP X0, 0x0
	0x03D69050 CSEL X22, X31, X19, EQ
	0x03D69054 CBZ X0, 0x3D6919C
	0x03D69058 MOV X1, X31
	0x03D6905C BL 0x3DF7724
	0x03D69060 ADRP X8, 0x38B000
	0x03D69064 LDR X8, [X8 + 0xE70]
	0x03D69068 MOV X20, X0
	0x03D6906C LDR X8, [X8]
	0x03D69070 MOV X0, X8
	0x03D69074 BL 0x1C16F10
	0x03D69078 ADRP X8, 0x3FD000
	0x03D6907C LDR X8, [X8 + 0xAD8]
	0x03D69080 MOV X1, X19
	0x03D69084 MOV X3, X31
	0x03D69088 MOV X21, X0
	0x03D6908C LDR X2, [X8]
	0x03D69090 BL 0x3314368
	0x03D69094 CBZ X20, 0x3D691A4
	0x03D69098 ADRP X10, 0x3B2000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x67F000
	005 Move W8, [X20+3276]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x3FE000
	012 Move X0, [X0+2544]
	013 Call 0x1C17CF4
	014 Move X0, 0x3FE000
	015 Move X0, [X0+2552]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3276], W8
	019 Move X0, [X19+1096]
	020 Compare X0, 0
	021 JumpIfEqual {33}
	022 Move X9, 0x3FE000
	023 Move X9, [X9+2552]
	024 Move X8, [X0]
	025 Move X1, [X9]
	026 Move W10, [X8+304]
	027 Move W9, [X1+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X8+200]
	030 Add X8, X8, X9
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0
	037 Call 0x1C181E0

Method: System.Void set_multiline(System.Boolean value)

Disassembly:
	0x03D6909C LDR X8, [X20]
	0x03D690A0 LDR X10, [X10 + 0x680]
	0x03D690A4 LDRH W9, [X8 + 0x12E]
	0x03D690A8 LDR X1, [X10]
	0x03D690AC CBZ X9, 0x3D690D0
	0x03D690B0 LDR X10, [X8 + 0xB0]
	0x03D690B4 ADD X10, X10, 0x8
	0x03D690B8 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W19, W1
	004 Call TextField.get_textInput, X0
	005 Compare X0, 0
	006 JumpIfEqual {10}
	007 And W1, W19, 1
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D692EC ADRP X25, 0x3B4000
	0x03D692F0 LDR X8, [X20]
	0x03D692F4 LDR X25, [X25 + 0x630]
	0x03D692F8 LDRH W9, [X8 + 0x12E]
	0x03D692FC LDR X1, [X25]
	0x03D69300 CBZ X9, 0x3D69324

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W2, TEMP
	004 Move W5, 42
	005 Move X1, X31
	006 Move W3, W31
	007 Move W4, W31
	008 Call TextField..ctor, X0, X1, X2, X3, X4, X5
	009 Return 

Method: System.Void .ctor(System.String label)

Disassembly:
	0x03D69304 LDR X10, [X8 + 0xB0]
	0x03D69308 ADD X10, X10, 0x8
	0x03D6930C LDUR X11, [X10 - 0x8]
	0x03D69310 CMP X11, X1
	0x03D69314 B.EQ 0x3D693D4

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W2, TEMP
	004 Move W5, 42
	005 Move W3, W31
	006 Move W4, W31

Method: System.Void .ctor(System.String label, System.Int32 maxLength, System.Boolean multiline, System.Boolean isPasswordField, System.Char maskChar)

Disassembly:
	0x03D69318 SUBS X9, X9, 0x1
	0x03D6931C ADD X10, X10, 0x10
	0x03D69320 B.NE 0x3D6930C
	0x03D69324 MOVZ W2, 0x1B
	0x03D69328 MOV X0, X20
	0x03D6932C BL 0x1C5C788
	0x03D69330 B 0x3D693E4
	0x03D69334 MOV X0, X22
	0x03D69338 MOV X1, X31
	0x03D6933C BL 0x3C3CF1C
	0x03D69340 LDR X8, [X19 + 0x18]
	0x03D69344 CBZ X8, 0x3D699E4
	0x03D69348 MOV X21, X0
	0x03D6934C MOV X0, X8
	0x03D69350 MOV X1, X31
	0x03D69354 BL 0x3C7B628
	0x03D69358 MOV X1, X21
	0x03D6935C MOV X2, X31
	0x03D69360 BL 0x3226EF8
	0x03D69364 TBZ X0, 0x0, 0x3D69620
	0x03D69368 CBZ X20, 0x3D699E4
	0x03D6936C ADRP X10, 0x3B4000
	0x03D69370 LDR X8, [X20]
	0x03D69374 LDR X10, [X10 + 0x630]
	0x03D69378 LDRH W9, [X8 + 0x12E]
	0x03D6937C LDR X1, [X10]
	0x03D69380 CBZ X9, 0x3D693A4
	0x03D69384 LDR X10, [X8 + 0xB0]
	0x03D69388 ADD X10, X10, 0x8
	0x03D6938C LDUR X11, [X10 - 0x8]
	0x03D69390 CMP X11, X1
	0x03D69394 B.EQ 0x3D695E8
	0x03D69398 SUBS X9, X9, 0x1
	0x03D6939C ADD X10, X10, 0x10
	0x03D693A0 B.NE 0x3D6938C
	0x03D693A4 MOVZ W2, 0x14
	0x03D693A8 MOV X0, X20
	0x03D693AC BL 0x1C5C788
	0x03D693B0 B 0x3D695F8
	0x03D693B4 LDR W9, [X10]
	0x03D693B8 ADD W9, W9, 0x9
	0x03D693BC ADD X8, X8, W9, 0x4, SXTW
	0x03D693C0 ADD X0, X8, 0x138
	0x03D693C4 LDP X8, X1, [X0]
	0x03D693C8 MOV X0, X20
	0x03D693CC BLR X8
	0x03D693D0 B 0x3D69620
	0x03D693D4 LDR W9, [X10]
	0x03D693D8 ADD W9, W9, 0x1B
	0x03D693DC ADD X8, X8, W9, 0x4, SXTW
	0x03D693E0 ADD X0, X8, 0x138
	0x03D693E4 LDP X8, X1, [X0]
	0x03D693E8 MOV X0, X20
	0x03D693EC BLR X8
	0x03D693F0 TBZ X0, 0x0, 0x3D695A8
	0x03D693F4 LDR X0, [X19 + 0x18]
	0x03D693F8 CBZ X0, 0x3D699E4
	0x03D693FC MOV X1, X31
	0x03D69400 BL 0x3C7B628
	0x03D69404 MOV X1, X21
	0x03D69408 MOV X2, X31
	0x03D6940C BL 0x3226EF8
	0x03D69410 TBZ X0, 0x0, 0x3D697AC
	0x03D69414 LDR X0, [X19 + 0x18]
	0x03D69418 CBZ X0, 0x3D699E4
	0x03D6941C ADRP X8, 0x38A000
	0x03D69420 LDR X8, [X8 + 0x988]
	0x03D69424 MOV X2, X31
	0x03D69428 LDR X1, [X8]
	0x03D6942C BL 0x3C7B630
	0x03D69430 CBZ X21, 0x3D699E4
	0x03D69434 LDR W8, [X21 + 0x10]
	0x03D69438 CMP W8, 0x1
	0x03D6943C B.LT 0x3D69560
	0x03D69440 ADRP X26, 0x38C000
	0x03D69444 LDR X26, [X26 + 0x170]
	0x03D69448 MOV W22, W31
	0x03D6944C MOV W23, W31
	0x03D69450 MOV X0, X21
	0x03D69454 MOV W1, W22
	0x03D69458 MOV X2, X31
	0x03D6945C BL 0x3222A1C
	0x03D69460 STRH W0, [X31 + 0xC]
	0x03D69464 LDR X8, [X20]
	0x03D69468 LDR X1, [X25]
	0x03D6946C LDRH W9, [X8 + 0x12E]
	0x03D69470 CBZ X9, 0x3D69494
	0x03D69474 LDR X10, [X8 + 0xB0]
	0x03D69478 ADD X10, X10, 0x8
	0x03D6947C LDUR X11, [X10 - 0x8]
	0x03D69480 CMP X11, X1
	0x03D69484 B.EQ 0x3D694A4
	0x03D69488 SUBS X9, X9, 0x1
	0x03D6948C ADD X10, X10, 0x10
	0x03D69490 B.NE 0x3D6947C
	0x03D69494 MOVZ W2, 0xA
	0x03D69498 MOV X0, X20
	0x03D6949C BL 0x1C5C788
	0x03D694A0 B 0x3D694B4
	0x03D694A4 LDR W9, [X10]
	0x03D694A8 ADD W9, W9, 0xA
	0x03D694AC ADD X8, X8, W9, 0x4, SXTW
	0x03D694B0 ADD X0, X8, 0x138
	0x03D694B4 LDP X8, X1, [X0]
	0x03D694B8 MOV X0, X20
	0x03D694BC BLR X8
	0x03D694C0 CBZ X0, 0x3D699E4
	0x03D694C4 LDR X8, [X0 + 0x40]
	0x03D694C8 LDR X9, [X0 + 0x18]
	0x03D694CC LDR X2, [X0 + 0x28]
	0x03D694D0 LDRH W1, [X31 + 0xC]
	0x03D694D4 MOV X0, X8
	0x03D694D8 BLR X9
	0x03D694DC TBZ X0, 0x0, 0x3D69794
	0x03D694E0 LDRH W8, [X31 + 0xC]
	0x03D694E4 CBZ W8, 0x3D69544
	0x03D694E8 LDR X23, [X19 + 0x18]
	0x03D694EC CBZ X23, 0x3D699E4
	0x03D694F0 MOV X0, X23
	0x03D694F4 MOV X1, X31

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0x67F000
	013 Move X25, 0x3FE000
	014 Move X27, 0x3B5000
	015 Move W8, [X26+3277]
	016 Move X25, [X25+2552]
	017 Move X27, [X27+1616]
	018 Move W22, W5
	019 Move W19, W4
	020 Move W21, W3
	021 Move W23, W2
	022 Move X24, X1
	023 Move X20, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {54}
	028 Move X0, 0x3FE000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0x3FE000
	032 Move X0, [X0+2608]
	033 Call 0x1C17CF4
	034 Move X0, 0x3B6000
	035 Move X0, [X0+392]
	036 Call 0x1C17CF4
	037 Move X0, 0x3FE000
	038 Move X0, [X0+2616]
	039 Call 0x1C17CF4
	040 Move X0, 0x3FE000
	041 Move X0, [X0+2624]
	042 Call 0x1C17CF4
	043 Move X0, 0x3B5000
	044 Move X0, [X0+1616]
	045 Call 0x1C17CF4
	046 Move X0, 0x3FE000
	047 Move X0, [X0+2552]
	048 Call 0x1C17CF4
	049 Move X0, 0x38B000
	050 Move X0, [X0+2440]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X26+3277], W8
	054 Move X0, [X25]
	055 Move X28, 0x3FE000
	056 Move X26, 0x3B6000
	057 Move X28, [X28+2616]
	058 Move X26, [X26+392]
	059 Call 0x1C17F10
	060 Move X25, X0
	061 Call TextInput..ctor, X0
	062 Move X0, [X27]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X5, [X28]
	068 Move X0, X20
	069 Move X1, X24
	070 Move W2, W23
	071 Move W3, W22
	072 Move X4, X25
	073 Call TextInputBaseField`1<Object>..ctor, X0, X1, X2, X3, X4
	074 Move X0, [X26]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X26]
	080 Move X8, [X0+184]
	081 Move X0, X20
	082 Move X2, X31
	083 Move X1, [X8]
	084 Call VisualElement.AddToClassList, X0, X1
	085 Move X0, [X20+1024]
	086 Compare X0, 0
	087 JumpIfEqual {138}
	088 Move X8, [X26]
	089 Move X22, 0x3FE000
	090 Move X2, X31
	091 Move X8, [X8+184]
	092 Move X1, [X8+8]
	093 Move X22, [X22+2608]
	094 Call VisualElement.AddToClassList, X0, X1
	095 Move X1, [X22]
	096 Move X0, X20
	097 Call BaseField`1<Object>.get_visualInput, X0
	098 Compare X0, 0
	099 JumpIfEqual {138}
	100 Move X8, [X26]
	101 Move X22, 0x38B000
	102 Move X23, 0x3FE000
	103 Move X2, X31
	104 Move X8, [X8+184]
	105 Move X1, [X8+16]
	106 Move X22, [X22+2440]
	107 Move X23, [X23+2624]
	108 Call VisualElement.AddToClassList, X0, X1
	109 Move W1, 1
	110 Move X0, X20
	111 Move X2, X31
	112 Call VisualElement.set_pickingMode, X0, X1
	113 Move X8, [X20]
	114 Move X1, [X22]
	115 Move X0, X20
	116 Move X9, [X8+2184]
	117 Move X2, [X8+2192]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 And W1, W21, 1
	120 Move X0, X20
	121 Call TextField.set_multiline, X0, X1
	122 Move X2, [X23]
	123 And W1, W19, 1
	124 Move X0, X20
	125 Move X20, [X31+80]
	126 Move X19, [X31+88]
	127 Move X22, [X31+64]
	128 Move X21, [X31+72]
	129 Move X24, [X31+48]
	130 Move X23, [X31+56]
	131 Move X26, [X31+32]
	132 Move X25, [X31+40]
	133 Move X28, [X31+16]
	134 Move X27, [X31+24]
	135 Move X30, [X31+96]
	136 Call TextInputBaseField`1<Object>.set_isPasswordField, X0, X1
	137 Return 
	138 Call 0x1C17F20

Method: System.String get_value()

Disassembly:
	0x03D69564 CBZ X0, 0x3D699E4
	0x03D69568 MOV X1, X31
	0x03D6956C BL 0x3C7B628
	0x03D69570 LDR X8, [X20]
	0x03D69574 LDR X1, [X25]
	0x03D69578 MOV X21, X0
	0x03D6957C LDRH W9, [X8 + 0x12E]
	0x03D69580 CBZ X9, 0x3D695D8
	0x03D69584 LDR X10, [X8 + 0xB0]
	0x03D69588 ADD X10, X10, 0x8
	0x03D6958C LDUR X11, [X10 - 0x8]
	0x03D69590 CMP X11, X1
	0x03D69594 B.EQ 0x3D697D0
	0x03D69598 SUBS X9, X9, 0x1
	0x03D6959C ADD X10, X10, 0x10
	0x03D695A0 B.NE 0x3D6958C
	0x03D695A4 B 0x3D695D8
	0x03D695A8 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x67F000
	006 Move X21, 0x3FE000
	007 Move W8, [X20+3278]
	008 Move X21, [X21+2648]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3FE000
	015 Move X0, [X0+2648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3278], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call BaseField`1<Object>.get_value, X0
	026 Return X0

Method: System.Void set_value(System.String value)

Disassembly:
	0x03D695AC LDR X1, [X25]
	0x03D695B0 LDRH W9, [X8 + 0x12E]
	0x03D695B4 CBZ X9, 0x3D695D8
	0x03D695B8 LDR X10, [X8 + 0xB0]
	0x03D695BC ADD X10, X10, 0x8
	0x03D695C0 LDUR X11, [X10 - 0x8]
	0x03D695C4 CMP X11, X1
	0x03D695C8 B.EQ 0x3D697D0
	0x03D695CC SUBS X9, X9, 0x1
	0x03D695D0 ADD X10, X10, 0x10
	0x03D695D4 B.NE 0x3D695C0
	0x03D695D8 MOVZ W2, 0x14
	0x03D695DC MOV X0, X20
	0x03D695E0 BL 0x1C5C788
	0x03D695E4 B 0x3D697E0
	0x03D695E8 LDR W9, [X10]
	0x03D695EC ADD W9, W9, 0x14
	0x03D695F0 ADD X8, X8, W9, 0x4, SXTW
	0x03D695F4 ADD X0, X8, 0x138
	0x03D695F8 LDP X8, X2, [X0]
	0x03D695FC MOV X0, X20
	0x03D69600 MOV X1, X21
	0x03D69604 BLR X8
	0x03D69608 LDR X8, [X19 + 0x10]
	0x03D6960C CBZ X8, 0x3D699E4
	0x03D69610 LDR X0, [X8 + 0x3D8]
	0x03D69614 CBZ X0, 0x3D699E4
	0x03D69618 MOV X1, X31
	0x03D6961C BL 0x3E0CCB0
	0x03D69620 MOV X0, X19
	0x03D69624 BL 0x3D699E8
	0x03D69628 CBZ X20, 0x3D699E4
	0x03D6962C ADRP X21, 0x3B4000
	0x03D69630 LDR X8, [X20]
	0x03D69634 LDR X21, [X21 + 0x630]
	0x03D69638 LDRH W9, [X8 + 0x12E]
	0x03D6963C LDR X1, [X21]
	0x03D69640 CBZ X9, 0x3D69664
	0x03D69644 LDR X10, [X8 + 0xB0]
	0x03D69648 ADD X10, X10, 0x8
	0x03D6964C LDUR X11, [X10 - 0x8]
	0x03D69650 CMP X11, X1
	0x03D69654 B.EQ 0x3D69674
	0x03D69658 SUBS X9, X9, 0x1
	0x03D6965C ADD X10, X10, 0x10
	0x03D69660 B.NE 0x3D6964C
	0x03D69664 MOVZ W2, 0x6
	0x03D69668 MOV X0, X20
	0x03D6966C BL 0x1C5C788
	0x03D69670 B 0x3D69684
	0x03D69674 LDR W9, [X10]
	0x03D69678 ADD W9, W9, 0x6
	0x03D6967C ADD X8, X8, W9, 0x4, SXTW
	0x03D69680 ADD X0, X8, 0x138
	0x03D69684 LDP X8, X1, [X0]
	0x03D69688 MOV X0, X20
	0x03D6968C BLR X8
	0x03D69690 TBNZ X0, 0x0, 0x3D69708
	0x03D69694 LDR X8, [X20]
	0x03D69698 LDR X1, [X21]
	0x03D6969C LDRH W9, [X8 + 0x12E]
	0x03D696A0 CBZ X9, 0x3D696C4
	0x03D696A4 LDR X10, [X8 + 0xB0]
	0x03D696A8 ADD X10, X10, 0x8
	0x03D696AC LDUR X11, [X10 - 0x8]
	0x03D696B0 CMP X11, X1
	0x03D696B4 B.EQ 0x3D696D4
	0x03D696B8 SUBS X9, X9, 0x1
	0x03D696BC ADD X10, X10, 0x10
	0x03D696C0 B.NE 0x3D696AC
	0x03D696C4 MOVZ W2, 0xE
	0x03D696C8 MOV X0, X20
	0x03D696CC BL 0x1C5C788

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x67F000
	009 Move X24, 0x3FE000
	010 Move X22, 0x3FE000
	011 Move X21, 0x3FE000
	012 Move W8, [X23+3279]
	013 Move X24, [X24+2656]
	014 Move X22, [X22+2664]
	015 Move X21, [X21+2672]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x3FE000
	023 Move X0, [X0+2672]
	024 Call 0x1C17CF4
	025 Move X0, 0x3FE000
	026 Move X0, [X0+2656]
	027 Call 0x1C17CF4
	028 Move X0, 0x3B5000
	029 Move X0, [X0+1584]
	030 Call 0x1C17CF4
	031 Move X0, 0x3FE000
	032 Move X0, [X0+2664]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+3279], W8
	036 Move X2, [X24]
	037 Move X0, X20
	038 Move X1, X19
	039 Call BaseField`1<Object>.set_value, X0, X1
	040 Move X1, [X22]
	041 Move X0, X20
	042 Call TextInputBaseField`1<Object>.get_textEdition, X0
	043 Move X1, [X21]
	044 Move X19, X0
	045 Move X0, X20
	046 Call BaseField`1<Object>.get_rawValue, X0
	047 Compare X19, 0
	048 JumpIfEqual {82}
	049 Move X10, 0x3B5000
	050 Move X8, [X19]
	051 Move X10, [X10+1584]
	052 Move X20, X0
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 20
	064 Move X0, X19
	065 Call 0x1C5D788
	066 Move W9, [X10]
	067 Add W9, W9, 20
	068 Add X8, X8, W9
	069 Add X0, X8, 312
	070 Move X3, [X0]
	071 Move X2, [X0+8]
	072 Move X0, X19
	073 Move X1, X20
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X24, [X31+16]
	079 Move X23, [X31+24]
	080 Move X30, [X31+64]
	081 CallNoReturn X3
	082 Call 0x1C17F20

Method: System.Void SetValueWithoutNotify(System.String newValue)

Disassembly:
	0x03D696D0 B 0x3D696E4
	0x03D696D4 LDR W9, [X10]
	0x03D696D8 ADD W9, W9, 0xE
	0x03D696DC ADD X8, X8, W9, 0x4, SXTW
	0x03D696E0 ADD X0, X8, 0x138
	0x03D696E4 LDP X8, X1, [X0]
	0x03D696E8 MOV X0, X20
	0x03D696EC BLR X8
	0x03D696F0 CBZ X0, 0x3D69708
	0x03D696F4 LDR X8, [X0 + 0x40]
	0x03D696F8 LDR X9, [X0 + 0x18]
	0x03D696FC LDR X1, [X0 + 0x28]
	0x03D69700 MOV X0, X8
	0x03D69704 BLR X9
	0x03D69708 LDR X8, [X20]
	0x03D6970C LDR X1, [X21]
	0x03D69710 LDRH W9, [X8 + 0x12E]
	0x03D69714 CBZ X9, 0x3D69738
	0x03D69718 LDR X10, [X8 + 0xB0]
	0x03D6971C ADD X10, X10, 0x8
	0x03D69720 LDUR X11, [X10 - 0x8]
	0x03D69724 CMP X11, X1
	0x03D69728 B.EQ 0x3D69748
	0x03D6972C SUBS X9, X9, 0x1
	0x03D69730 ADD X10, X10, 0x10
	0x03D69734 B.NE 0x3D69720
	0x03D69738 MOVZ W2, 0x10
	0x03D6973C MOV X0, X20
	0x03D69740 BL 0x1C5C788
	0x03D69744 B 0x3D69758
	0x03D69748 LDR W9, [X10]
	0x03D6974C ADD W9, W9, 0x10
	0x03D69750 ADD X8, X8, W9, 0x4, SXTW
	0x03D69754 ADD X0, X8, 0x138
	0x03D69758 LDP X8, X1, [X0]
	0x03D6975C MOV X0, X20
	0x03D69760 BLR X8
	0x03D69764 CBZ X0, 0x3D6977C
	0x03D69768 LDR X8, [X0 + 0x40]
	0x03D6976C LDR X9, [X0 + 0x18]
	0x03D69770 LDR X1, [X0 + 0x28]
	0x03D69774 MOV X0, X8
	0x03D69778 BLR X9
	0x03D6977C LDR X0, [X19 + 0x10]
	0x03D69780 CBZ X0, 0x3D699E4
	0x03D69784 LDR X8, [X0]
	0x03D69788 LDR X9, [X8 + 0x258]
	0x03D6978C LDR X1, [X8 + 0x260]
	0x03D69790 BLR X9
	0x03D69794 LDP X20, X19, [X31 + 0x40]
	0x03D69798 LDP X22, X21, [X31 + 0x30]
	0x03D6979C LDP X24, X23, [X31 + 0x20]
	0x03D697A0 LDP X26, X25, [X31 + 0x10]
	0x03D697A4 LDR X30, [X31], #0x50
	0x03D697A8 RET
	0x03D697AC LDRB W8, [X19 + 0x29]
	0x03D697B0 CBNZ W8, 0x3D69808
	0x03D697B4 MOV X0, X22
	0x03D697B8 MOV X1, X31
	0x03D697BC BL 0x3C3D0D8
	0x03D697C0 TBZ X0, 0x0, 0x3D69808
	0x03D697C4 MOV X0, X19
	0x03D697C8 BL 0x3D69ACC
	0x03D697CC B 0x3D69808
	0x03D697D0 LDR W9, [X10]
	0x03D697D4 ADD W9, W9, 0x14
	0x03D697D8 ADD X8, X8, W9, 0x4, SXTW
	0x03D697DC ADD X0, X8, 0x138
	0x03D697E0 LDP X8, X2, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x67F000
	007 Move X22, 0x3FE000
	008 Move W8, [X21+3280]
	009 Move X22, [X22+2680]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x3FE000
	017 Move X0, [X0+2680]
	018 Call 0x1C17CF4
	019 Move X0, 0x3FE000
	020 Move X0, [X0+2672]
	021 Call 0x1C17CF4
	022 Move X0, 0x3B5000
	023 Move X0, [X0+1808]
	024 Call 0x1C17CF4
	025 Move X0, 0x3FE000
	026 Move X0, [X0+2688]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3280], W8
	030 Move X2, [X22]
	031 Move X0, X20
	032 Move X1, X19
	033 Call BaseField`1<Object>.SetValueWithoutNotify, X0, X1
	034 Move X0, X20
	035 Call TextField.get_textInput, X0
	036 Compare X0, 0
	037 JumpIfEqual {77}
	038 Move X8, 0x3FE000
	039 Move X8, [X8+2672]
	040 Move X19, [X0+968]
	041 Move X0, X20
	042 Move X1, [X8]
	043 Call BaseField`1<Object>.get_rawValue, X0
	044 Compare X19, 0
	045 JumpIfEqual {77}
	046 Move X10, 0x3B5000
	047 Move X8, [X19]
	048 Move X10, [X10+1808]
	049 Move X20, X0
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X1, [X10]
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move W2, 2
	061 Move X0, X19
	062 Call 0x1C5D788
	063 Move W9, [X10]
	064 Add W9, W9, 2
	065 Add X8, X8, W9
	066 Add X0, X8, 312
	067 Move X3, [X0]
	068 Move X2, [X0+8]
	069 Move X0, X19
	070 Move X1, X20
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 CallNoReturn X3
	077 Call 0x1C17F20

Method: System.Void UpdateTextFromValue()

Disassembly:
	0x03D697E4 MOV X0, X20
	0x03D697E8 MOV X1, X21
	0x03D697EC BLR X8
	0x03D697F0 LDR X8, [X19 + 0x10]
	0x03D697F4 CBZ X8, 0x3D699E4
	0x03D697F8 LDR X0, [X8 + 0x3D8]
	0x03D697FC CBZ X0, 0x3D699E4
	0x03D69800 MOV X1, X31
	0x03D69804 BL 0x3E0CCB0
	0x03D69808 LDR X8, [X20]
	0x03D6980C LDR X1, [X25]
	0x03D69810 LDRH W9, [X8 + 0x12E]
	0x03D69814 CBZ X9, 0x3D69838
	0x03D69818 LDR X10, [X8 + 0xB0]
	0x03D6981C ADD X10, X10, 0x8
	0x03D69820 LDUR X11, [X10 - 0x8]
	0x03D69824 CMP X11, X1
	0x03D69828 B.EQ 0x3D69848
	0x03D6982C SUBS X9, X9, 0x1
	0x03D69830 ADD X10, X10, 0x10
	0x03D69834 B.NE 0x3D69820
	0x03D69838 MOVZ W2, 0x6
	0x03D6983C MOV X0, X20
	0x03D69840 BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x67F000
	006 Move X21, 0x3FE000
	007 Move W8, [X20+3281]
	008 Move X21, [X21+2672]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3FE000
	015 Move X0, [X0+2672]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3281], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call BaseField`1<Object>.get_rawValue, X0
	022 Move X8, [X19]
	023 Move X1, X0
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X3, [X8+2184]
	028 Move X2, [X8+2192]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 CallNoReturn X3

Method: System.Void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03D69844 B 0x3D69858
	0x03D69848 LDR W9, [X10]
	0x03D6984C ADD W9, W9, 0x6
	0x03D69850 ADD X8, X8, W9, 0x4, SXTW
	0x03D69854 ADD X0, X8, 0x138
	0x03D69858 LDP X8, X1, [X0]
	0x03D6985C MOV X0, X20
	0x03D69860 BLR X8
	0x03D69864 TBNZ X0, 0x0, 0x3D698DC
	0x03D69868 LDR X8, [X20]
	0x03D6986C LDR X1, [X25]
	0x03D69870 LDRH W9, [X8 + 0x12E]
	0x03D69874 CBZ X9, 0x3D69898
	0x03D69878 LDR X10, [X8 + 0xB0]
	0x03D6987C ADD X10, X10, 0x8
	0x03D69880 LDUR X11, [X10 - 0x8]
	0x03D69884 CMP X11, X1
	0x03D69888 B.EQ 0x3D698A8
	0x03D6988C SUBS X9, X9, 0x1
	0x03D69890 ADD X10, X10, 0x10
	0x03D69894 B.NE 0x3D69880
	0x03D69898 MOVZ W2, 0xE
	0x03D6989C MOV X0, X20
	0x03D698A0 BL 0x1C5C788
	0x03D698A4 B 0x3D698B8
	0x03D698A8 LDR W9, [X10]
	0x03D698AC ADD W9, W9, 0xE
	0x03D698B0 ADD X8, X8, W9, 0x4, SXTW
	0x03D698B4 ADD X0, X8, 0x138
	0x03D698B8 LDP X8, X1, [X0]
	0x03D698BC MOV X0, X20
	0x03D698C0 BLR X8
	0x03D698C4 CBZ X0, 0x3D698DC
	0x03D698C8 LDR X8, [X0 + 0x40]
	0x03D698CC LDR X9, [X0 + 0x18]
	0x03D698D0 LDR X1, [X0 + 0x28]
	0x03D698D4 MOV X0, X8
	0x03D698D8 BLR X9
	0x03D698DC LDR X8, [X20]
	0x03D698E0 LDR X1, [X25]
	0x03D698E4 LDRH W9, [X8 + 0x12E]
	0x03D698E8 CBZ X9, 0x3D6990C
	0x03D698EC LDR X10, [X8 + 0xB0]
	0x03D698F0 ADD X10, X10, 0x8
	0x03D698F4 LDUR X11, [X10 - 0x8]
	0x03D698F8 CMP X11, X1
	0x03D698FC B.EQ 0x3D6991C
	0x03D69900 SUBS X9, X9, 0x1
	0x03D69904 ADD X10, X10, 0x10
	0x03D69908 B.NE 0x3D698F4
	0x03D6990C MOVZ W2, 0x10
	0x03D69910 MOV X0, X20
	0x03D69914 BL 0x1C5C788
	0x03D69918 B 0x3D6992C
	0x03D6991C LDR W9, [X10]
	0x03D69920 ADD W9, W9, 0x10
	0x03D69924 ADD X8, X8, W9, 0x4, SXTW
	0x03D69928 ADD X0, X8, 0x138
	0x03D6992C LDP X8, X1, [X0]
	0x03D69930 MOV X0, X20
	0x03D69934 BLR X8
	0x03D69938 CBZ X0, 0x3D69950
	0x03D6993C LDR X8, [X0 + 0x40]
	0x03D69940 LDR X9, [X0 + 0x18]
	0x03D69944 LDR X1, [X0 + 0x28]
	0x03D69948 MOV X0, X8
	0x03D6994C BLR X9
	0x03D69950 LDR X0, [X19 + 0x10]
	0x03D69954 CBZ X0, 0x3D699E4
	0x03D69958 MOV X1, X31
	0x03D6995C BL 0x3E0AF0C
	0x03D69960 CBZ X0, 0x3D699E4
	0x03D69964 LDR X8, [X0]
	0x03D69968 LDR X1, [X25]
	0x03D6996C MOV X19, X0
	0x03D69970 LDRH W9, [X8 + 0x12E]
	0x03D69974 CBZ X9, 0x3D69998
	0x03D69978 LDR X10, [X8 + 0xB0]
	0x03D6997C ADD X10, X10, 0x8
	0x03D69980 LDUR X11, [X10 - 0x8]
	0x03D69984 CMP X11, X1
	0x03D69988 B.EQ 0x3D699A8
	0x03D6998C SUBS X9, X9, 0x1
	0x03D69990 ADD X10, X10, 0x10
	0x03D69994 B.NE 0x3D69980
	0x03D69998 MOVZ W2, 0xC
	0x03D6999C MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x67F000
	008 Move X21, 0x3FE000
	009 Move W8, [X22+3282]
	010 Move X21, [X21+2696]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x3B5000
	018 Move X0, [X0+1768]
	019 Call 0x1C17CF4
	020 Move X0, 0x3B5000
	021 Move X0, [X0+1784]
	022 Call 0x1C17CF4
	023 Move X0, 0x3C7000
	024 Move X0, [X0+2552]
	025 Call 0x1C17CF4
	026 Move X0, 0x3CF000
	027 Move X0, [X0+1848]
	028 Call 0x1C17CF4
	029 Move X0, 0x3B3000
	030 Move X0, [X0+3752]
	031 Call 0x1C17CF4
	032 Move X0, 0x3FE000
	033 Move X0, [X0+2696]
	034 Call 0x1C17CF4
	035 Move X0, 0x3FE000
	036 Move X0, [X0+2704]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+3282], W8
	040 Move X0, X19
	041 Move X1, X20
	042 Move X2, X31
	043 Call VisualElement.ExecuteDefaultAction, X0, X1
	044 Move X1, [X21]
	045 Move X0, X19
	046 Call TextInputBaseField`1<Object>.get_isDelayed, X0
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {94}
	051 Move X21, 0x3B5000
	052 Move X21, [X21+1784]
	053 Compare X20, 0
	054 JumpIfEqual {70}
	055 Move X8, [X20]
	056 Move X0, X20
	057 Move X9, [X8+392]
	058 Move X1, [X8+400]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, 0x3CF000
	061 Move X8, [X8+1848]
	062 Move X1, X0
	063 Add X0, X31, 0
	064 Move [X31], X31
	065 Move [X31+8], X31
	066 Move X2, [X8]
	067 Call Nullable`1<Int64>..ctor, X0, X1
	068 Move W20, [X31]
	069 Move X22, [X31+8]
	070 Move X22, X31
	071 Move X0, [X21]
	072 Move X21, 0x3B5000
	073 Move W8, [X0+224]
	074 Move X21, [X21+1768]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, [X21]
	079 Call 0x2D0E5C8
	080 Compare W20, 0
	081 JumpIfEqual {94}
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, 0x3FE000
	084 Move X8, [X8+2704]
	085 Move X0, X19
	086 Move X1, [X8]
	087 Call TextInputBaseField`1<Object>.get_text, X0
	088 Move X8, [X19]
	089 Move X1, X0
	090 Move X0, X19
	091 Move X9, [X8+2040]
	092 Move X2, [X8+2048]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X30, [X31+16]
	099 Add X31, X31, 64
	100 Return 

Method: System.Void OnViewDataReady()

Disassembly:
	0x03D699A0 BL 0x1C5C788
	0x03D699A4 B 0x3D699B8
	0x03D699A8 LDR W9, [X10]
	0x03D699AC ADD W9, W9, 0xC
	0x03D699B0 ADD X8, X8, W9, 0x4, SXTW
	0x03D699B4 ADD X0, X8, 0x138
	0x03D699B8 LDP X8, X1, [X0]
	0x03D699BC MOV X0, X19
	0x03D699C0 BLR X8
	0x03D699C4 CBZ X0, 0x3D69794
	0x03D699C8 LDR X8, [X0 + 0x40]
	0x03D699CC LDR X9, [X0 + 0x18]
	0x03D699D0 LDR X2, [X0 + 0x28]
	0x03D699D4 MOV W1, W31
	0x03D699D8 MOV X0, X8
	0x03D699DC BLR X9
	0x03D699E0 B 0x3D69794
	0x03D699E4 BL 0x1C16F20
	0x03D699E8 STR X30, [X31 - 0x20]!
	0x03D699EC STP X20, X19, [X31 + 0x10]
	0x03D699F0 ADRP X20, 0x67E000
	0x03D699F4 LDRB W8, [X20 + 0xCDF]
	0x03D699F8 MOV X19, X0
	0x03D699FC TBNZ X8, 0x0, 0x3D69A14
	0x03D69A00 ADRP X0, 0x3B5000
	0x03D69A04 LDR X0, [X0 + 0xAB8]
	0x03D69A08 BL 0x1C16CF4
	0x03D69A0C MOVZ W8, 0x1
	0x03D69A10 STRB W8, [X20 + 0xCDF]
	0x03D69A14 LDR X8, [X19 + 0x10]
	0x03D69A18 CBZ X8, 0x3D69AC8
	0x03D69A1C LDR X0, [X8 + 0x410]
	0x03D69A20 CBZ X0, 0x3D69A8C
	0x03D69A24 MOV W1, W31
	0x03D69A28 MOV X2, X31
	0x03D69A2C BL 0x3C3D014
	0x03D69A30 LDR X8, [X19 + 0x10]
	0x03D69A34 CBZ X8, 0x3D69AC8
	0x03D69A38 STR X31, [X8 + 0x410]
	0x03D69A3C LDR X19, [X19 + 0x20]
	0x03D69A40 CBZ X19, 0x3D69AB4
	0x03D69A44 ADRP X10, 0x3B5000
	0x03D69A48 LDR X8, [X19]
	0x03D69A4C LDR X10, [X10 + 0xAB8]
	0x03D69A50 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x67F000
	008 Move X23, 0x3FE000
	009 Move X21, 0x3FE000
	010 Move X20, 0x3FE000
	011 Move W8, [X22+3283]
	012 Move X23, [X23+2712]
	013 Move X21, [X21+2672]
	014 Move X20, [X20+2720]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x3FE000
	021 Move X0, [X0+2712]
	022 Call 0x1C17CF4
	023 Move X0, 0x3FE000
	024 Move X0, [X0+2672]
	025 Call 0x1C17CF4
	026 Move X0, 0x3FE000
	027 Move X0, [X0+2720]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+3283], W8
	031 Move X1, [X23]
	032 Move X0, X19
	033 Call BaseField`1<Object>.OnViewDataReady, X0
	034 Move X0, X19
	035 Move X1, X31
	036 Call VisualElement.GetFullHierarchicalViewDataKey, X0
	037 Move X2, X0
	038 Move X0, X19
	039 Move X1, X19
	040 Move X3, X31
	041 Call VisualElement.OverwriteFromViewData, X0, X1, X2
	042 Move X1, [X21]
	043 Move X0, X19
	044 Call BaseField`1<Object>.get_rawValue, X0
	045 Move X2, [X20]
	046 Move X1, X0
	047 Move X0, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Call TextInputBaseField`1<Object>.set_text, X0, X1
	055 Return 

Method: System.String ValueToString(System.String value)

Disassembly:
	0x03D69A54 LDR X1, [X10]
	0x03D69A58 CBZ X9, 0x3D69A7C

ISIL:
	001 Move X0, X1
	002 Return X0

Method: System.String StringToValue(System.String str)

Disassembly:
	0x03D69A5C LDR X10, [X8 + 0xB0]
	0x03D69A60 ADD X10, X10, 0x8

ISIL:
	001 Move X0, X1
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03D69A64 LDUR X11, [X10 - 0x8]
	0x03D69A68 CMP X11, X1
	0x03D69A6C B.EQ 0x3D69A98
	0x03D69A70 SUBS X9, X9, 0x1
	0x03D69A74 ADD X10, X10, 0x10
	0x03D69A78 B.NE 0x3D69A64
	0x03D69A7C MOVZ W2, 0x1
	0x03D69A80 MOV X0, X19
	0x03D69A84 BL 0x1C5C788
	0x03D69A88 B 0x3D69AA8
	0x03D69A8C LDP X20, X19, [X31 + 0x10]
	0x03D69A90 LDR X30, [X31], #0x20
	0x03D69A94 RET
	0x03D69A98 LDR W9, [X10]
	0x03D69A9C ADD W9, W9, 0x1
	0x03D69AA0 ADD X8, X8, W9, 0x4, SXTW
	0x03D69AA4 ADD X0, X8, 0x138
	0x03D69AA8 LDP X8, X1, [X0]
	0x03D69AAC MOV X0, X19
	0x03D69AB0 BLR X8
	0x03D69AB4 LDP X20, X19, [X31 + 0x10]
	0x03D69AB8 MOVZ W0, 0x1
	0x03D69ABC MOV X1, X31
	0x03D69AC0 LDR X30, [X31], #0x20
	0x03D69AC4 B 0x3C3CF9C
	0x03D69AC8 BL 0x1C16F20
	0x03D69ACC SUB X31, X31, 0x40
	0x03D69AD0 STP X30, X23, [X31 + 0x10]
	0x03D69AD4 STP X22, X21, [X31 + 0x20]
	0x03D69AD8 STP X20, X19, [X31 + 0x30]
	0x03D69ADC ADRP X19, 0x67E000
	0x03D69AE0 LDRB W8, [X19 + 0xCDE]
	0x03D69AE4 MOV X20, X0
	0x03D69AE8 TBNZ X8, 0x0, 0x3D69B00
	0x03D69AEC ADRP X0, 0x3B4000
	0x03D69AF0 LDR X0, [X0 + 0x628]
	0x03D69AF4 BL 0x1C16CF4
	0x03D69AF8 MOVZ W8, 0x1
	0x03D69AFC STRB W8, [X19 + 0xCDE]
	0x03D69B00 LDR X8, [X20 + 0x10]
	0x03D69B04 CBZ X8, 0x3D69D38
	0x03D69B08 LDR X0, [X8 + 0x410]
	0x03D69B0C CBZ X0, 0x3D69D24
	0x03D69B10 MOV X1, X31
	0x03D69B14 BL 0x3C3D150
	0x03D69B18 MOV X21, X0
	0x03D69B1C STR X0, [X31 + 0x8]
	0x03D69B20 ADD X0, X31, 0x8
	0x03D69B24 MOV X1, X31
	0x03D69B28 BL 0x3C36CC4
	0x03D69B2C LDR X8, [X20 + 0x10]
	0x03D69B30 CBZ X8, 0x3D69D38

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x67F000
	008 Move X22, 0x3B6000
	009 Move X19, 0x3B6000
	010 Move X21, 0x3B4000
	011 Move X20, 0x3B4000
	012 Move W8, [X23+3284]
	013 Move X22, [X22+400]
	014 Move X19, [X19+392]
	015 Move X21, [X21+3768]
	016 Move X20, [X20+3776]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x3B6000
	022 Move X0, [X0+392]
	023 Call 0x1C17CF4
	024 Move X0, 0x3B6000
	025 Move X0, [X0+400]
	026 Call 0x1C17CF4
	027 Move X0, 0x3B4000
	028 Move X0, [X0+3768]
	029 Call 0x1C17CF4
	030 Move X0, 0x3B4000
	031 Move X0, [X0+3776]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+3284], W8
	035 Move X8, [X19]
	036 Move X9, [X22]
	037 Move X2, X31
	038 Move X8, [X8+184]
	039 Move [X8], X9
	040 Move X8, [X19]
	041 Move X1, [X21]
	042 Move X8, [X8+184]
	043 Move X0, [X8]
	044 Call String.Concat, X0, X1
	045 Move X8, [X19]
	046 Move X2, X31
	047 Move X8, [X8+184]
	048 Move [X8+8], X0
	049 Move X0, [X8]
	050 Move X1, [X20]
	051 Call String.Concat, X0, X1
	052 Move X8, [X19]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X8, [X8+184]
	058 Move [X8+16], X0
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 

