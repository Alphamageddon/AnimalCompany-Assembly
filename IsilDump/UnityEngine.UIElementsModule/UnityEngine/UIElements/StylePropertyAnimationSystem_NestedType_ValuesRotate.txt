Type: UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesRotate

Method: System.Func`3<UnityEngine.UIElements.Rotate, UnityEngine.UIElements.Rotate, System.Boolean> get_SameFunc()

Disassembly:
	0x03E050E0 SUB X31, X31, 0x50
	0x03E050E4 STR X30, [X31 + 0x40]

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Boolean IsSame(UnityEngine.UIElements.Rotate a, UnityEngine.UIElements.Rotate b)

Disassembly:
	0x03E050E8 LDR W8, [X0 + 0x10]
	0x03E050EC LDR V0, [X0]
	0x03E050F0 ADD X0, X31, 0x20
	0x03E050F4 MOV X2, X31
	0x03E050F8 STR W8, [X31 + 0x30]
	0x03E050FC STR V0, [X31 + 0x2]
	0x03E05100 LDR W8, [X1 + 0x10]
	0x03E05104 LDR V0, [X1]
	0x03E05108 ADD X1, X31, 0x0
	0x03E0510C STR W8, [X31 + 0x10]
	0x03E05110 STR V0, [X31]
	0x03E05114 BL 0x3CE9A28
	0x03E05118 LDR X30, [X31 + 0x40]
	0x03E0511C AND W0, W0, 0x1
	0x03E05120 ADD X31, X31, 0x50
	0x03E05124 RET
	0x03E05128 CBZ X1, 0x3E05140

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move X8, [X0+16]
	004 Move V0, [X0]
	005 Add X0, X31, 32
	006 Move [X31+48], X8
	007 Move [X31+2], V0
	008 Move X8, [X1+16]
	009 Move V0, [X1]
	010 Add X1, X31, 0
	011 Move [X31+16], X8
	012 Move [X31], V0
	013 Call Rotate.op_Equality, X0, X1
	014 Move X30, [X31+64]
	015 And W0, W0, 1
	016 Add X31, X31, 80
	017 Return X0

Method: System.Void UpdateComputedStyle()

Disassembly:
	0x03E0512C MOV X0, X1
	0x03E05130 MOV X1, X3
	0x03E05134 MOV X2, X4
	0x03E05138 MOV X3, X31
	0x03E0513C B 0x3DEB774
	0x03E05140 STR X30, [X31 - 0x10]!
	0x03E05144 BL 0x1C16F20
	0x03E05148 SUB X31, X31, 0x50
	0x03E0514C STP X30, X23, [X31 + 0x20]
	0x03E05150 STP X22, X21, [X31 + 0x30]
	0x03E05154 STP X20, X19, [X31 + 0x40]
	0x03E05158 LDR W20, [X0 + 0x48]
	0x03E0515C CMP W20, 0x1
	0x03E05160 B.LT 0x3E05214
	0x03E05164 MOV X19, X0
	0x03E05168 MOV W21, W31
	0x03E0516C MOVZ W22, 0x50
	0x03E05170 LDR X8, [X19 + 0x28]
	0x03E05174 CBZ X8, 0x3E05228
	0x03E05178 LDR W9, [X8 + 0x18]
	0x03E0517C CMP W21, W9
	0x03E05180 B.CS 0x3E0522C
	0x03E05184 SXTW X23, W21
	0x03E05188 ADD X8, X8, X23, 0x3, LSL
	0x03E0518C LDR X0, [X8 + 0x20]
	0x03E05190 CBZ X0, 0x3E05228
	0x03E05194 MOV X1, X31
	0x03E05198 BL 0x3DE0F44
	0x03E0519C LDR X8, [X19 + 0x28]
	0x03E051A0 CBZ X8, 0x3E05228
	0x03E051A4 LDR W9, [X8 + 0x18]
	0x03E051A8 CMP W21, W9
	0x03E051AC B.CS 0x3E0522C
	0x03E051B0 LDR X9, [X19 + 0x30]
	0x03E051B4 CBZ X9, 0x3E05228
	0x03E051B8 LDR W10, [X9 + 0x18]
	0x03E051BC CMP W21, W10
	0x03E051C0 B.CS 0x3E0522C
	0x03E051C4 LDR X10, [X19 + 0x40]
	0x03E051C8 CBZ X10, 0x3E05228
	0x03E051CC LDR W11, [X10 + 0x18]
	0x03E051D0 CMP W21, W11
	0x03E051D4 B.CS 0x3E0522C
	0x03E051D8 ADD X8, X8, X23, 0x3, LSL
	0x03E051DC ADD X9, X9, X23, 0x2, LSL
	0x03E051E0 MADD X10, X23, X22, X10
	0x03E051E4 LDR X1, [X8 + 0x20]
	0x03E051E8 LDR W8, [X10 + 0x6C]
	0x03E051EC LDUR V0, [X10 + 0x5C]
	0x03E051F0 LDR W2, [X9 + 0x20]
	0x03E051F4 ADD X3, X31, 0x0
	0x03E051F8 MOV X4, X31
	0x03E051FC STR W8, [X31 + 0x10]
	0x03E05200 STR V0, [X31]
	0x03E05204 BL 0x3DCFB00
	0x03E05208 ADD W21, W21, 0x1
	0x03E0520C CMP W20, W21
	0x03E05210 B.NE 0x3E05170

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move W20, [X0+72]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X19, X0
	011 Move W21, W31
	012 Move W22, 96
	013 Move X8, [X19+40]
	014 Compare X8, 0
	015 JumpIfEqual {62}
	016 Move W9, [X8+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X23, W21
	019 Add X8, X8, X23
	020 Move X0, [X8+32]
	021 Compare X0, 0
	022 JumpIfEqual {62}
	023 Move X1, X31
	024 Call VisualElement.get_computedStyle, X0
	025 Move X8, [X19+40]
	026 Compare X8, 0
	027 JumpIfEqual {62}
	028 Move W9, [X8+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, [X19+48]
	031 Compare X9, 0
	032 JumpIfEqual {62}
	033 Move W10, [X9+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X10, [X19+64]
	036 Compare X10, 0
	037 JumpIfEqual {62}
	038 Move W11, [X10+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X8, X23
	041 Add X9, X9, X23
	042 NotImplemented "Instruction MADD not yet implemented."
	043 Move X1, [X8+32]
	044 Move X8, [X10+120]
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move W2, [X9+32]
	047 Add X3, X31, 0
	048 Move X4, X31
	049 Move [X31+16], X8
	050 Move [X31], V0
	051 Call ComputedStyle.ApplyPropertyAnimation, X0, X1, X2, X3
	052 Add W21, W21, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X20, [X31+64]
	055 Move X19, [X31+72]
	056 Move X22, [X31+48]
	057 Move X21, [X31+56]
	058 Move X30, [X31+32]
	059 Move X23, [X31+40]
	060 Add X31, X31, 80
	061 Return 
	062 Call 0x1C17F20
	063 Call 0x1C17F28

Method: System.Void UpdateComputedStyle(System.Int32 i)

Disassembly:
	0x03E05214 LDP X20, X19, [X31 + 0x40]
	0x03E05218 LDP X22, X21, [X31 + 0x30]
	0x03E0521C LDP X30, X23, [X31 + 0x20]
	0x03E05220 ADD X31, X31, 0x50
	0x03E05224 RET
	0x03E05228 BL 0x1C16F20
	0x03E0522C BL 0x1C16F28
	0x03E05230 SUB X31, X31, 0x40
	0x03E05234 STP X30, X21, [X31 + 0x20]
	0x03E05238 STP X20, X19, [X31 + 0x30]
	0x03E0523C LDR X8, [X0 + 0x28]
	0x03E05240 CBZ X8, 0x3E052F4
	0x03E05244 LDR W9, [X8 + 0x18]
	0x03E05248 MOV W19, W1
	0x03E0524C CMP W9, W1
	0x03E05250 B.LS 0x3E052F8
	0x03E05254 SXTW X21, W19
	0x03E05258 ADD X8, X8, X21, 0x3, LSL
	0x03E0525C MOV X20, X0
	0x03E05260 LDR X0, [X8 + 0x20]
	0x03E05264 CBZ X0, 0x3E052F4
	0x03E05268 MOV X1, X31
	0x03E0526C BL 0x3DE0F44
	0x03E05270 LDR X8, [X20 + 0x28]
	0x03E05274 CBZ X8, 0x3E052F4
	0x03E05278 LDR W9, [X8 + 0x18]
	0x03E0527C CMP W9, W19
	0x03E05280 B.LS 0x3E052F8
	0x03E05284 LDR X9, [X20 + 0x30]
	0x03E05288 CBZ X9, 0x3E052F4
	0x03E0528C LDR W10, [X9 + 0x18]
	0x03E05290 CMP W10, W19
	0x03E05294 B.LS 0x3E052F8
	0x03E05298 LDR X10, [X20 + 0x40]
	0x03E0529C CBZ X10, 0x3E052F4
	0x03E052A0 LDR W11, [X10 + 0x18]
	0x03E052A4 CMP W11, W19
	0x03E052A8 B.LS 0x3E052F8
	0x03E052AC ADD X8, X8, X21, 0x3, LSL
	0x03E052B0 MOVZ W11, 0x50
	0x03E052B4 ADD X9, X9, X21, 0x2, LSL
	0x03E052B8 LDR X1, [X8 + 0x20]
	0x03E052BC NOP
	0x03E052C0 MADD X8, X21, X11, X10
	0x03E052C4 LDR W10, [X8 + 0x6C]
	0x03E052C8 LDUR V0, [X8 + 0x5C]
	0x03E052CC LDR W2, [X9 + 0x20]
	0x03E052D0 ADD X3, X31, 0x0
	0x03E052D4 MOV X4, X31
	0x03E052D8 STR W10, [X31 + 0x10]
	0x03E052DC STR V0, [X31]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X8, [X0+40]
	007 Compare X8, 0
	008 JumpIfEqual {55}
	009 Move W9, [X8+24]
	010 Move W19, W1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X21, W19
	013 Add X8, X8, X21
	014 Move X20, X0
	015 Move X0, [X8+32]
	016 Compare X0, 0
	017 JumpIfEqual {55}
	018 Move X1, X31
	019 Call VisualElement.get_computedStyle, X0
	020 Move X8, [X20+40]
	021 Compare X8, 0
	022 JumpIfEqual {55}
	023 Move W9, [X8+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X9, [X20+48]
	026 Compare X9, 0
	027 JumpIfEqual {55}
	028 Move W10, [X9+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X10, [X20+64]
	031 Compare X10, 0
	032 JumpIfEqual {55}
	033 Move W11, [X10+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X8, X21
	036 Move W11, 96
	037 Add X9, X9, X21
	038 Move X1, [X8+32]
	039 NotImplemented "Instruction NOP not yet implemented."
	040 NotImplemented "Instruction MADD not yet implemented."
	041 Move X10, [X8+120]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move W2, [X9+32]
	044 Add X3, X31, 0
	045 Move X4, X31
	046 Move [X31+16], X10
	047 Move [X31], V0
	048 Call ComputedStyle.ApplyPropertyAnimation, X0, X1, X2, X3
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Add X31, X31, 64
	054 Return 
	055 Call 0x1C17F20
	056 Call 0x1C17F28

Method: UnityEngine.UIElements.Rotate Lerp(UnityEngine.UIElements.Rotate a, UnityEngine.UIElements.Rotate b, System.Single t)

Disassembly:
	0x03E052E0 BL 0x3DCFB00
	0x03E052E4 LDP X20, X19, [X31 + 0x30]
	0x03E052E8 LDP X30, X21, [X31 + 0x20]
	0x03E052EC ADD X31, X31, 0x40
	0x03E052F0 RET
	0x03E052F4 BL 0x1C16F20
	0x03E052F8 BL 0x1C16F28
	0x03E052FC STR D10, [X31 - 0x40]!
	0x03E05300 STP D9, D8, [X31 + 0x8]
	0x03E05304 STR X30, [X31 + 0x18]
	0x03E05308 STP X22, X21, [X31 + 0x20]
	0x03E0530C STP X20, X19, [X31 + 0x30]
	0x03E05310 MOV X19, X1
	0x03E05314 MOV X1, X31
	0x03E05318 MOV V8.16B, V0.16B
	0x03E0531C MOV X20, X0
	0x03E05320 MOV X21, X8
	0x03E05324 BL 0x3CE9C74
	0x03E05328 MOV X22, X0
	0x03E0532C MOV X0, X19
	0x03E05330 MOV X1, X31
	0x03E05334 BL 0x3CE9C74
	0x03E05338 FMOV S0, W22
	0x03E0533C FMOV S1, W0
	0x03E05340 MOVZ W8, 0x4B000000
	0x03E05344 FSUB S1, S1, S0
	0x03E05348 FMOV S9, W8
	0x03E0534C MOVZ W8, 0xCB000000
	0x03E05350 FMUL S1, S1, S8
	0x03E05354 FMOV S10, W8

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, X8
	006 Move X8, [X0]
	007 Move X19, X1
	008 Add X0, X31, 24
	009 Move X1, X31
	010 Move V8, V0
	011 Move [X31+16], X30
	012 Move [X31+24], X8
	013 Call Angle.ToDegrees, X0
	014 Move X8, [X19]
	015 Add X0, X31, 24
	016 Move X1, X31
	017 Move V9, V0
	018 Move [X31+24], X8
	019 Call Angle.ToDegrees, X0
	020 Subtract S0, S0, S9
	021 Multiply S0, S0, S8
	022 Add S0, S9, S0
	023 Move X0, X31
	024 Call Angle.op_Implicit, V0
	025 Move X1, X0
	026 Move X0, X20
	027 Move [X20+8], X31
	028 Move [X20+16], X31
	029 Move [X20], X31
	030 Call Rotate..ctor, X0, X1
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Move D9, [X31+48]
	035 Move D8, [X31+56]
	036 Return X0

Method: System.Void UpdateValues()

Disassembly:
	0x03E05358 FADD S0, S1, S0
	0x03E0535C FMIN S1, S0, S9
	0x03E05360 FCMP S0, S10
	0x03E05364 FCSEL S0, S1, S10, PL
	0x03E05368 AND X8, X0, 0x0
	0x03E0536C FMOV W9, S0
	0x03E05370 MOV X0, X20
	0x03E05374 MOV X1, X31
	0x03E05378 ORR X22, X8, X9, 0x0
	0x03E0537C BL 0x3CE9C88
	0x03E05380 MOV X20, X0
	0x03E05384 MOV X0, X19
	0x03E05388 MOV X1, X31
	0x03E0538C BL 0x3CE9C88
	0x03E05390 FMOV S0, W20
	0x03E05394 FMOV S1, W0
	0x03E05398 FSUB S1, S1, S0
	0x03E0539C FMUL S1, S1, S8
	0x03E053A0 FADD S0, S1, S0
	0x03E053A4 FMIN S1, S0, S9
	0x03E053A8 FCMP S0, S10
	0x03E053AC AND X8, X0, 0x0
	0x03E053B0 STP X31, X31, [X21]
	0x03E053B4 STR W31, [X21 + 0x10]
	0x03E053B8 MOV X0, X21
	0x03E053BC MOV X1, X22
	0x03E053C0 LDP X20, X19, [X31 + 0x30]
	0x03E053C4 LDP X22, X21, [X31 + 0x20]
	0x03E053C8 LDR X30, [X31 + 0x18]
	0x03E053CC LDP D9, D8, [X31 + 0x8]
	0x03E053D0 FCSEL S0, S1, S10, PL
	0x03E053D4 FMOV W9, S0
	0x03E053D8 ORR X2, X8, X9, 0x0
	0x03E053DC MOV X3, X31
	0x03E053E0 LDR V10, [X31], #0x40
	0x03E053E4 B 0x3CE9658
	0x03E053E8 SUB X31, X31, 0xF0
	0x03E053EC STR X30, [X31 + 0xB0]
	0x03E053F0 STP X24, X23, [X31 + 0xC0]
	0x03E053F4 STP X22, X21, [X31 + 0xD0]
	0x03E053F8 STP X20, X19, [X31 + 0xE0]
	0x03E053FC LDR W20, [X0 + 0x48]
	0x03E05400 CMP W20, 0x1
	0x03E05404 B.LT 0x3E054B4
	0x03E05408 MOV X19, X0
	0x03E0540C MOV X21, X31
	0x03E05410 MOVZ W22, 0x34
	0x03E05414 MOVZ W23, 0x38
	0x03E05418 LDR X8, [X19 + 0x38]
	0x03E0541C CBZ X8, 0x3E054CC
	0x03E05420 LDR W9, [X8 + 0x18]
	0x03E05424 CMP X21, X9
	0x03E05428 B.CS 0x3E054D0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+96], X24
	004 Move [X31+104], X23
	005 Move [X31+112], X22
	006 Move [X31+120], X21
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 Move W20, [X0+72]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X19, X0
	012 Move X21, X31
	013 Move W22, 56
	014 Move W23, 56
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfEqual {56}
	018 Move W9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X9, [X19+64]
	021 Compare X9, 0
	022 JumpIfEqual {56}
	023 Move W10, [X9+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X24, X9, X23
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Add X0, X31, 32
	029 Add X1, X31, 0
	030 Move [X31+48], X9
	031 Move [X31+2], V0
	032 Move X9, [X24+16]
	033 Move V0, [X24]
	034 Move [X31+16], X9
	035 Move [X31], V0
	036 Move V0, [X8]
	037 Add X8, X31, 56
	038 Call ValuesRotate.Lerp, X0, X1, V0
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Move X8, [X31+72]
	041 Add X21, X21, 1
	042 Add X23, X23, 96
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X22, X22, 40
	045 Move [X24+64], X8
	046 Move [X24+3], V0
	047 Move X20, [X31+128]
	048 Move X19, [X31+136]
	049 Move X22, [X31+112]
	050 Move X21, [X31+120]
	051 Move X24, [X31+96]
	052 Move X23, [X31+104]
	053 Move X30, [X31+80]
	054 Add X31, X31, 144
	055 Return 
	056 Call 0x1C17F20
	057 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03E0542C LDR X9, [X19 + 0x40]
	0x03E05430 CBZ X9, 0x3E054CC
	0x03E05434 LDR W10, [X9 + 0x18]
	0x03E05438 CMP X21, X10
	0x03E0543C B.CS 0x3E054D0
	0x03E05440 ADD X24, X9, X22
	0x03E05444 LDUR W9, [X24 - 0x4]
	0x03E05448 LDUR V1, [X24 - 0x14]
	0x03E0544C ADD X0, X31, 0x20
	0x03E05450 ADD X1, X31, 0x0
	0x03E05454 STR W9, [X31 + 0xA0]
	0x03E05458 STR V1, [X31 + 0x9]
	0x03E0545C LDR W10, [X24 + 0x10]
	0x03E05460 LDR V2, [X24]
	0x03E05464 STR W10, [X31 + 0x80]
	0x03E05468 STR V2, [X31 + 0x7]
	0x03E0546C LDR V0, [X8, X23, LSL]
	0x03E05470 ADD X8, X31, 0x38
	0x03E05474 STR W9, [X31 + 0x30]
	0x03E05478 STR V1, [X31 + 0x2]
	0x03E0547C STR W10, [X31 + 0x10]
	0x03E05480 STR V2, [X31]
	0x03E05484 BL 0x3E052FC
	0x03E05488 LDR W8, [X31 + 0x48]
	0x03E0548C LDUR V0, [X31 + 0x38]
	0x03E05490 ADD X21, X21, 0x1
	0x03E05494 ADD X22, X22, 0x50
	0x03E05498 CMP X20, X21
	0x03E0549C ADD X23, X23, 0x28
	0x03E054A0 STR W8, [X31 + 0x60]
	0x03E054A4 STR V0, [X31 + 0x5]
	0x03E054A8 STR W8, [X24 + 0x38]
	0x03E054AC STUR V0, [X24 + 0x28]
	0x03E054B0 B.NE 0x3E05418
	0x03E054B4 LDP X20, X19, [X31 + 0xE0]
	0x03E054B8 LDP X22, X21, [X31 + 0xD0]
	0x03E054BC LDP X24, X23, [X31 + 0xC0]
	0x03E054C0 LDR X30, [X31 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5E4000
	008 Move X23, 0x365000
	009 Move X20, 0x366000
	010 Move X21, 0x366000
	011 Move W8, [X22+772]
	012 Move X23, [X23+4088]
	013 Move X20, [X20]
	014 Move X21, [X21+8]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x365000
	021 Move X0, [X0+4088]
	022 Call 0x1C17CF4
	023 Move X0, 0x366000
	024 Move X0, [X0]
	025 Call 0x1C17CF4
	026 Move X0, 0x366000
	027 Move X0, [X0+8]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+772], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X31
	035 Move X3, X31
	036 Move X20, X0
	037 Call Func`3<Rotate, Rotate, Boolean>..ctor, X0, X1, X2
	038 Move [X19+136], X20
	039 Move X1, [X21]
	040 Move X0, X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Call Values`1<Rotate>..ctor, X0
	048 Return 

