Type: UnityEngine.UIElements.DefaultDragAndDropClient

Method: System.Object get_source()

Disassembly:
	0x03D92660 BL 0x1C16CF4
	0x03D92664 ADRP X0, 0x3D5000
	0x03D92668 LDR X0, [X0 + 0xB40]
	0x03D9266C BL 0x1C16CF4
	0x03D92670 ADRP X0, 0x38B000
	0x03D92674 LDR X0, [X0 + 0xD70]
	0x03D92678 BL 0x1C16CF4
	0x03D9267C ADRP X0, 0x3D0000
	0x03D92680 LDR X0, [X0 + 0xA00]
	0x03D92684 BL 0x1C16CF4
	0x03D92688 ADRP X0, 0x3D5000
	0x03D9268C LDR X0, [X0 + 0xB80]
	0x03D92690 BL 0x1C16CF4
	0x03D92694 ADRP X0, 0x38C000
	0x03D92698 LDR X0, [X0 + 0xA0]
	0x03D9269C BL 0x1C16CF4
	0x03D926A0 ADRP X0, 0x38B000
	0x03D926A4 LDR X0, [X0 + 0x780]
	0x03D926A8 BL 0x1C16CF4
	0x03D926AC ADRP X0, 0x38B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x656000
	006 Move X20, 0x3D6000
	007 Move W8, [X21+3674]
	008 Move X20, [X20+2856]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3D6000
	015 Move X0, [X0+2856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3674], W8
	019 Move X8, [X19]
	020 Move X1, [X20]
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X3, [X8+376]
	025 Move X2, [X8+384]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 CallNoReturn X3

Method: System.Object GetGenericData(System.String key)

Disassembly:
	0x03D926B0 LDR X0, [X0 + 0xD78]
	0x03D926B4 BL 0x1C16CF4
	0x03D926B8 ADRP X0, 0x3D0000
	0x03D926BC LDR X0, [X0 + 0xA08]
	0x03D926C0 BL 0x1C16CF4
	0x03D926C4 ADRP X0, 0x38B000
	0x03D926C8 LDR X0, [X0 + 0x788]
	0x03D926CC BL 0x1C16CF4
	0x03D926D0 MOVZ W8, 0x1
	0x03D926D4 STRB W8, [X21 + 0xE61]
	0x03D926D8 STRB W31, [X19 + 0x10]
	0x03D926DC LDR X0, [X23]
	0x03D926E0 LDR X21, [X19 + 0x28]
	0x03D926E4 BL 0x1C16F10
	0x03D926E8 LDR X2, [X22]
	0x03D926EC MOV X1, X19
	0x03D926F0 MOV X3, X31
	0x03D926F4 MOV X22, X0
	0x03D926F8 BL 0x2D0E824
	0x03D926FC CBZ X21, 0x3D92974
	0x03D92700 ADRP X8, 0x38B000
	0x03D92704 LDR X8, [X8 + 0x790]
	0x03D92708 ADRP X23, 0x38B000
	0x03D9270C ADRP X24, 0x3D5000
	0x03D92710 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+16]
	006 Compare X0, 0
	007 JumpIfEqual {33}
	008 Move X8, [X0]
	009 Move X19, X1
	010 Move X9, [X8+696]
	011 Move X2, [X8+704]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {28}
	017 Move X0, [X20+16]
	018 Compare X0, 0
	019 JumpIfEqual {33}
	020 Move X8, [X0]
	021 Move X1, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X3, [X8+728]
	025 Move X2, [X8+736]
	026 Move X30, [X31+32]
	027 CallNoReturn X3
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X31
	031 Move X30, [X31+32]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Void StartDrag(UnityEngine.UIElements.StartDragArgs args, UnityEngine.Vector3 pointerPosition)

Disassembly:
	0x03D92714 LDR X3, [X8]
	0x03D92718 LDR X23, [X23 + 0x788]
	0x03D9271C LDR X24, [X24 + 0xB78]
	0x03D92720 MOV X1, X22
	0x03D92724 MOV W2, W31
	0x03D92728 BL 0x21A18B4
	0x03D9272C LDR X0, [X23]
	0x03D92730 LDR X21, [X19 + 0x28]
	0x03D92734 BL 0x1C16F10
	0x03D92738 LDR X2, [X24]
	0x03D9273C MOV X1, X19
	0x03D92740 MOV X3, X31
	0x03D92744 MOV X22, X0
	0x03D92748 BL 0x2D0E824
	0x03D9274C CBZ X21, 0x3D92974
	0x03D92750 ADRP X8, 0x38B000
	0x03D92754 LDR X8, [X8 + 0x798]
	0x03D92758 ADRP X23, 0x3D5000
	0x03D9275C ADRP X24, 0x3D5000
	0x03D92760 MOVZ W2, 0x1
	0x03D92764 LDR X3, [X8]
	0x03D92768 LDR X23, [X23 + 0xB80]
	0x03D9276C LDR X24, [X24 + 0xB68]
	0x03D92770 MOV X0, X21
	0x03D92774 MOV X1, X22
	0x03D92778 BL 0x21A18B4
	0x03D9277C LDR X0, [X23]
	0x03D92780 LDR X21, [X19 + 0x28]
	0x03D92784 BL 0x1C16F10
	0x03D92788 LDR X2, [X24]
	0x03D9278C MOV X1, X19
	0x03D92790 MOV X3, X31
	0x03D92794 MOV X22, X0
	0x03D92798 BL 0x2D0E824
	0x03D9279C CBZ X21, 0x3D92974
	0x03D927A0 ADRP X8, 0x3D5000
	0x03D927A4 LDR X8, [X8 + 0xB88]
	0x03D927A8 ADRP X23, 0x38C000
	0x03D927AC ADRP X24, 0x3D5000
	0x03D927B0 MOV X0, X21
	0x03D927B4 LDR X3, [X8]
	0x03D927B8 LDR X23, [X23 + 0xA0]
	0x03D927BC LDR X24, [X24 + 0xB70]
	0x03D927C0 MOV X1, X22
	0x03D927C4 MOV W2, W31
	0x03D927C8 BL 0x21A18B4
	0x03D927CC LDR X0, [X23]
	0x03D927D0 LDR X21, [X19 + 0x28]
	0x03D927D4 BL 0x1C16F10
	0x03D927D8 LDR X2, [X24]
	0x03D927DC MOV X1, X19
	0x03D927E0 MOV X3, X31
	0x03D927E4 MOV X22, X0
	0x03D927E8 BL 0x2D0E824
	0x03D927EC CBZ X21, 0x3D92974
	0x03D927F0 ADRP X8, 0x38C000
	0x03D927F4 LDR X8, [X8 + 0xD28]
	0x03D927F8 ADRP X23, 0x3D0000
	0x03D927FC ADRP X24, 0x3D5000
	0x03D92800 MOV X0, X21
	0x03D92804 LDR X3, [X8]
	0x03D92808 LDR X23, [X23 + 0xA08]
	0x03D9280C LDR X24, [X24 + 0xB50]
	0x03D92810 MOV X1, X22
	0x03D92814 MOV W2, W31
	0x03D92818 BL 0x21A18B4
	0x03D9281C LDR X0, [X23]
	0x03D92820 LDR X21, [X19 + 0x28]
	0x03D92824 BL 0x1C16F10
	0x03D92828 LDR X2, [X24]
	0x03D9282C MOV X1, X19
	0x03D92830 MOV X3, X31
	0x03D92834 MOV X22, X0
	0x03D92838 BL 0x2D0E824
	0x03D9283C CBZ X21, 0x3D92974
	0x03D92840 ADRP X8, 0x3D0000
	0x03D92844 LDR X8, [X8 + 0xA30]
	0x03D92848 ADRP X23, 0x3D0000
	0x03D9284C ADRP X24, 0x3D5000
	0x03D92850 MOV X0, X21
	0x03D92854 LDR X3, [X8]
	0x03D92858 LDR X23, [X23 + 0xA00]
	0x03D9285C LDR X24, [X24 + 0xB58]
	0x03D92860 MOV X1, X22
	0x03D92864 MOV W2, W31
	0x03D92868 BL 0x21A18B4
	0x03D9286C LDR X0, [X23]
	0x03D92870 LDR X21, [X19 + 0x28]
	0x03D92874 BL 0x1C16F10
	0x03D92878 LDR X2, [X24]
	0x03D9287C MOV X1, X19
	0x03D92880 MOV X3, X31
	0x03D92884 MOV X22, X0
	0x03D92888 BL 0x2D0E824
	0x03D9288C CBZ X21, 0x3D92974
	0x03D92890 ADRP X8, 0x3D0000
	0x03D92894 LDR X8, [X8 + 0xA38]
	0x03D92898 MOV X0, X21
	0x03D9289C MOV X1, X22
	0x03D928A0 MOV W2, W31
	0x03D928A4 LDR X3, [X8]
	0x03D928A8 BL 0x21A18B4
	0x03D928AC TBZ X20, 0x0, 0x3D92960
	0x03D928B0 ADRP X8, 0x38B000
	0x03D928B4 LDR X20, [X19 + 0x28]
	0x03D928B8 LDR X8, [X8 + 0xD70]
	0x03D928BC LDR X0, [X8]
	0x03D928C0 BL 0x1C16F10
	0x03D928C4 ADRP X8, 0x3D5000
	0x03D928C8 LDR X8, [X8 + 0xB38]
	0x03D928CC MOV X1, X19
	0x03D928D0 MOV X3, X31
	0x03D928D4 MOV X21, X0
	0x03D928D8 LDR X2, [X8]
	0x03D928DC BL 0x2D0E824
	0x03D928E0 CBZ X20, 0x3D92974
	0x03D928E4 ADRP X8, 0x3D2000
	0x03D928E8 LDR X8, [X8 + 0xE8]
	0x03D928EC MOV X0, X20
	0x03D928F0 MOV X1, X21
	0x03D928F4 MOV W2, W31
	0x03D928F8 LDR X3, [X8]
	0x03D928FC BL 0x21A18B4
	0x03D92900 ADRP X8, 0x38B000
	0x03D92904 LDR X20, [X19 + 0x28]
	0x03D92908 LDR X8, [X8 + 0xD78]
	0x03D9290C LDR X0, [X8]
	0x03D92910 BL 0x1C16F10
	0x03D92914 ADRP X8, 0x3D5000
	0x03D92918 LDR X8, [X8 + 0xB40]
	0x03D9291C MOV X1, X19
	0x03D92920 MOV X3, X31
	0x03D92924 MOV X21, X0
	0x03D92928 LDR X2, [X8]
	0x03D9292C BL 0x2D0E824
	0x03D92930 CBZ X20, 0x3D92974
	0x03D92934 ADRP X8, 0x3D2000
	0x03D92938 LDR X8, [X8 + 0xF0]
	0x03D9293C MOV X0, X20
	0x03D92940 MOV X1, X21
	0x03D92944 LDP X20, X19, [X31 + 0x30]
	0x03D92948 LDR X3, [X8]
	0x03D9294C LDP X22, X21, [X31 + 0x20]
	0x03D92950 LDP X24, X23, [X31 + 0x10]
	0x03D92954 MOV W2, W31
	0x03D92958 LDR X30, [X31], #0x40
	0x03D9295C B 0x21A18B4
	0x03D92960 LDP X20, X19, [X31 + 0x30]
	0x03D92964 LDP X22, X21, [X31 + 0x20]
	0x03D92968 LDP X24, X23, [X31 + 0x10]
	0x03D9296C LDR X30, [X31], #0x40
	0x03D92970 RET
	0x03D92974 BL 0x1C16F20
	0x03D92978 STP X30, X21, [X31 - 0x20]!
	0x03D9297C STP X20, X19, [X31 + 0x10]
	0x03D92980 ADRP X21, 0x655000
	0x03D92984 LDRB W8, [X21 + 0xE62]
	0x03D92988 MOV X20, X1
	0x03D9298C MOV X19, X0
	0x03D92990 TBNZ X8, 0x0, 0x3D929C0
	0x03D92994 ADRP X0, 0x38C000
	0x03D92998 LDR X0, [X0 + 0xCE8]
	0x03D9299C BL 0x1C16CF4
	0x03D929A0 ADRP X0, 0x3D1000
	0x03D929A4 LDR X0, [X0 + 0xBA8]
	0x03D929A8 BL 0x1C16CF4
	0x03D929AC ADRP X0, 0x389000
	0x03D929B0 LDR X0, [X0 + 0x898]
	0x03D929B4 BL 0x1C16CF4
	0x03D929B8 MOVZ W8, 0x1
	0x03D929BC STRB W8, [X21 + 0xE62]
	0x03D929C0 CBZ X20, 0x3D92A5C
	0x03D929C4 LDR W8, [X20 + 0xAC]
	0x03D929C8 CBZ W8, 0x3D929D4
	0x03D929CC STR W31, [X19 + 0x14]
	0x03D929D0 B 0x3D92A44
	0x03D929D4 LDR X8, [X20 + 0x48]
	0x03D929D8 CBZ X8, 0x3D92A10
	0x03D929DC ADRP X9, 0x389000
	0x03D929E0 LDR X9, [X9 + 0x898]
	0x03D929E4 LDR X10, [X8]
	0x03D929E8 LDR X9, [X9]
	0x03D929EC LDRB W12, [X10 + 0x130]
	0x03D929F0 LDRB W11, [X9 + 0x130]
	0x03D929F4 CMP W12, W11
	0x03D929F8 B.CC 0x3D92A10
	0x03D929FC LDR X10, [X10 + 0xC8]
	0x03D92A00 ADD X10, X10, X11, 0x3, LSL
	0x03D92A04 LDUR X10, [X10 - 0x8]
	0x03D92A08 CMP X10, X9
	0x03D92A0C B.EQ 0x3D92A50
	0x03D92A10 LDR X8, [X19]
	0x03D92A14 LDP S0, S1, [X20 + 0xB4]
	0x03D92A18 LDR V2, [X20 + 0xBC]
	0x03D92A1C MOV X0, X19
	0x03D92A20 LDP X9, X1, [X8 + 0x198]
	0x03D92A24 BLR X9
	0x03D92A28 TBZ X0, 0x0, 0x3D92A44
	0x03D92A2C MOVZ W8, 0x1
	0x03D92A30 STR W8, [X19 + 0x14]
	0x03D92A34 LDUR V0, [X20 + 0xB4]
	0x03D92A38 LDR V1, [X20 + 0xBC]
	0x03D92A3C STR D0, [X19 + 0x18]
	0x03D92A40 STR S1, [X19 + 0x20]
	0x03D92A44 LDP X20, X19, [X31 + 0x10]
	0x03D92A48 LDP X30, X21, [X31], #0x20
	0x03D92A4C RET
	0x03D92A50 LDRB W8, [X8 + 0x10]
	0x03D92A54 CBNZ W8, 0x3D929CC
	0x03D92A58 B 0x3D92A10
	0x03D92A5C BL 0x1C16F20
	0x03D92A60 STP X30, X21, [X31 - 0x20]!
	0x03D92A64 STP X20, X19, [X31 + 0x10]
	0x03D92A68 ADRP X21, 0x655000
	0x03D92A6C LDRB W8, [X21 + 0xE63]
	0x03D92A70 MOV X20, X1
	0x03D92A74 MOV X19, X0
	0x03D92A78 TBNZ X8, 0x0, 0x3D92AA8
	0x03D92A7C ADRP X0, 0x3D5000
	0x03D92A80 LDR X0, [X0 + 0xB90]
	0x03D92A84 BL 0x1C16CF4
	0x03D92A88 ADRP X0, 0x38C000
	0x03D92A8C LDR X0, [X0 + 0xD20]
	0x03D92A90 BL 0x1C16CF4
	0x03D92A94 ADRP X0, 0x3D5000
	0x03D92A98 LDR X0, [X0 + 0xB98]
	0x03D92A9C BL 0x1C16CF4
	0x03D92AA0 MOVZ W8, 0x1
	0x03D92AA4 STRB W8, [X21 + 0xE63]
	0x03D92AA8 LDR X8, [X19]
	0x03D92AAC MOV X0, X19
	0x03D92AB0 LDP X9, X1, [X8 + 0x188]
	0x03D92AB4 BLR X9
	0x03D92AB8 TBZ X0, 0x0, 0x3D92AD0
	0x03D92ABC LDR X8, [X19]
	0x03D92AC0 MOV X0, X19
	0x03D92AC4 LDP X9, X1, [X8 + 0x178]
	0x03D92AC8 BLR X9
	0x03D92ACC TBNZ X0, 0x0, 0x3D92B4C
	0x03D92AD0 LDR W8, [X19 + 0x14]
	0x03D92AD4 CMP W8, 0x2
	0x03D92AD8 B.NE 0x3D92B4C
	0x03D92ADC CBZ X20, 0x3D92C00
	0x03D92AE0 LDP S0, S1, [X20 + 0xB4]
	0x03D92AE4 MOV X0, X19
	0x03D92AE8 BL 0x3D92C04
	0x03D92AEC CMP X0, 0x0
	0x03D92AF0 CSEL X21, X19, X0, EQ
	0x03D92AF4 CBZ X21, 0x3D92C00
	0x03D92AF8 LDR X8, [X21]
	0x03D92AFC LDP S1, S2, [X20 + 0xB8]
	0x03D92B00 LDR V0, [X20 + 0xB4]
	0x03D92B04 MOV X0, X21
	0x03D92B08 LDP X9, X1, [X8 + 0x1B8]
	0x03D92B0C BLR X9
	0x03D92B10 LDR X8, [X21]
	0x03D92B14 LDP S0, S1, [X20 + 0xB4]
	0x03D92B18 LDR V2, [X20 + 0xBC]
	0x03D92B1C MOV X0, X21
	0x03D92B20 LDP X9, X1, [X8 + 0x1C8]
	0x03D92B24 BLR X9
	0x03D92B28 LDR X8, [X21]
	0x03D92B2C MOV X0, X21
	0x03D92B30 MOV W1, W31
	0x03D92B34 LDP X9, X2, [X8 + 0x1D8]
	0x03D92B38 BLR X9
	0x03D92B3C MOV X0, X20
	0x03D92B40 MOV X1, X31
	0x03D92B44 BL 0x3D9D950
	0x03D92B48 B 0x3D92B50
	0x03D92B4C CBZ X20, 0x3D92C00
	0x03D92B50 LDR X0, [X19 + 0x28]
	0x03D92B54 LDR W1, [X20 + 0x9C]
	0x03D92B58 MOV X2, X31
	0x03D92B5C BL 0x3DBAE34
	0x03D92B60 LDR X8, [X19]
	0x03D92B64 LDR W9, [X19 + 0x14]
	0x03D92B68 MOV X0, X19
	0x03D92B6C LDP X10, X2, [X8 + 0x1D8]
	0x03D92B70 CMP W9, 0x2
	0x03D92B74 CSET W1, EQ
	0x03D92B78 BLR X10
	0x03D92B7C MOV X0, X19
	0x03D92B80 BL 0x3D91FFC
	0x03D92B84 CBZ X0, 0x3D92C00
	0x03D92B88 ADRP X10, 0x3D5000
	0x03D92B8C LDR X8, [X0]
	0x03D92B90 LDR X10, [X10 + 0xB90]
	0x03D92B94 MOV X20, X0
	0x03D92B98 LDRH W9, [X8 + 0x12E]
	0x03D92B9C LDR X1, [X10]
	0x03D92BA0 CBZ X9, 0x3D92BC4
	0x03D92BA4 LDR X10, [X8 + 0xB0]
	0x03D92BA8 ADD X10, X10, 0x8
	0x03D92BAC LDUR X11, [X10 - 0x8]
	0x03D92BB0 CMP X11, X1
	0x03D92BB4 B.EQ 0x3D92BD4
	0x03D92BB8 SUBS X9, X9, 0x1
	0x03D92BBC ADD X10, X10, 0x10
	0x03D92BC0 B.NE 0x3D92BAC
	0x03D92BC4 MOVZ W2, 0x3
	0x03D92BC8 MOV X0, X20
	0x03D92BCC BL 0x1C5C788
	0x03D92BD0 B 0x3D92BE4
	0x03D92BD4 LDR W9, [X10]
	0x03D92BD8 ADD W9, W9, 0x3
	0x03D92BDC ADD X8, X8, W9, 0x4, SXTW
	0x03D92BE0 ADD X0, X8, 0x138
	0x03D92BE4 LDP X8, X1, [X0]
	0x03D92BE8 MOV X0, X20
	0x03D92BEC BLR X8
	0x03D92BF0 STR W31, [X19 + 0x14]
	0x03D92BF4 LDP X20, X19, [X31 + 0x10]
	0x03D92BF8 LDP X30, X21, [X31], #0x20
	0x03D92BFC RET
	0x03D92C00 BL 0x1C16F20
	0x03D92C04 STP D9, D8, [X31 - 0x30]!
	0x03D92C08 STR X30, [X31 + 0x10]
	0x03D92C0C STP X20, X19, [X31 + 0x20]
	0x03D92C10 ADRP X20, 0x655000
	0x03D92C14 LDRB W8, [X20 + 0xE67]
	0x03D92C18 MOV V8.16B, V1.16B
	0x03D92C1C MOV V9.16B, V0.16B
	0x03D92C20 MOV X19, X0
	0x03D92C24 TBNZ X8, 0x0, 0x3D92C3C
	0x03D92C28 ADRP X0, 0x3D5000
	0x03D92C2C LDR X0, [X0 + 0xBA0]
	0x03D92C30 BL 0x1C16CF4
	0x03D92C34 MOVZ W8, 0x1
	0x03D92C38 STRB W8, [X20 + 0xE67]
	0x03D92C3C LDR X0, [X19 + 0x28]
	0x03D92C40 CBZ X0, 0x3D92CE8
	0x03D92C44 MOV X1, X31
	0x03D92C48 BL 0x3DEDC10
	0x03D92C4C FADD S3, S1, S3
	0x03D92C50 FCMP S8, S3
	0x03D92C54 B.PL 0x3D92C74
	0x03D92C58 FCMP S8, S1
	0x03D92C5C B.LT 0x3D92C74
	0x03D92C60 FCMP S9, S0
	0x03D92C64 B.LT 0x3D92C74
	0x03D92C68 FADD S0, S0, S2
	0x03D92C6C FCMP S9, S0
	0x03D92C70 B.MI 0x3D92CD4
	0x03D92C74 LDR X8, [X19]
	0x03D92C78 MOV X0, X19
	0x03D92C7C LDP X9, X1, [X8 + 0x178]
	0x03D92C80 BLR X9
	0x03D92C84 TBZ X0, 0x0, 0x3D92CD0
	0x03D92C88 LDR X8, [X19 + 0x28]
	0x03D92C8C CBZ X8, 0x3D92CE8
	0x03D92C90 LDR X0, [X8 + 0x3A0]
	0x03D92C94 CBZ X0, 0x3D92CE8
	0x03D92C98 LDR X8, [X0]
	0x03D92C9C MOV V0.16B, V9.16B
	0x03D92CA0 MOV V1.16B, V8.16B
	0x03D92CA4 LDR X9, [X8 + 0x418]
	0x03D92CA8 LDR X1, [X8 + 0x420]
	0x03D92CAC BLR X9
	0x03D92CB0 CBZ X0, 0x3D92CD0
	0x03D92CB4 ADRP X8, 0x3D5000
	0x03D92CB8 LDR X8, [X8 + 0xBA0]
	0x03D92CBC LDR X1, [X8]
	0x03D92CC0 BL 0x22A9DC8
	0x03D92CC4 CBZ X0, 0x3D92CD0
	0x03D92CC8 LDR X19, [X0 + 0x488]
	0x03D92CCC B 0x3D92CD4
	0x03D92CD0 MOV X19, X31
	0x03D92CD4 MOV X0, X19
	0x03D92CD8 LDP X20, X19, [X31 + 0x20]
	0x03D92CDC LDR X30, [X31 + 0x10]
	0x03D92CE0 LDP D9, D8, [X31], #0x30
	0x03D92CE4 RET
	0x03D92CE8 BL 0x1C16F20
	0x03D92CEC LDR X8, [X0]
	0x03D92CF0 MOV W1, W31
	0x03D92CF4 LDP X3, X2, [X8 + 0x1D8]
	0x03D92CF8 BR X3
	0x03D92CFC STP X30, X21, [X31 - 0x20]!
	0x03D92D00 STP X20, X19, [X31 + 0x10]
	0x03D92D04 ADRP X21, 0x655000
	0x03D92D08 LDRB W8, [X21 + 0xE64]
	0x03D92D0C MOV X20, X1
	0x03D92D10 MOV X19, X0
	0x03D92D14 TBNZ X8, 0x0, 0x3D92D38
	0x03D92D18 ADRP X0, 0x3D5000
	0x03D92D1C LDR X0, [X0 + 0xB90]
	0x03D92D20 BL 0x1C16CF4
	0x03D92D24 ADRP X0, 0x3D0000
	0x03D92D28 LDR X0, [X0 + 0xA68]
	0x03D92D2C BL 0x1C16CF4
	0x03D92D30 MOVZ W8, 0x1
	0x03D92D34 STRB W8, [X21 + 0xE64]
	0x03D92D38 LDR X8, [X19]
	0x03D92D3C MOV X0, X19
	0x03D92D40 LDP X9, X1, [X8 + 0x188]
	0x03D92D44 BLR X9
	0x03D92D48 TBZ X0, 0x0, 0x3D92D60
	0x03D92D4C LDR X8, [X19]
	0x03D92D50 MOV X0, X19
	0x03D92D54 LDP X9, X1, [X8 + 0x178]
	0x03D92D58 BLR X9
	0x03D92D5C TBNZ X0, 0x0, 0x3D92D74
	0x03D92D60 LDR X8, [X19]
	0x03D92D64 MOVZ W1, 0x1
	0x03D92D68 MOV X0, X19
	0x03D92D6C LDP X9, X2, [X8 + 0x1D8]
	0x03D92D70 BLR X9
	0x03D92D74 CBZ X20, 0x3D92E28
	0x03D92D78 LDR X0, [X19 + 0x28]
	0x03D92D7C LDR W1, [X20 + 0x9C]
	0x03D92D80 MOV X2, X31
	0x03D92D84 BL 0x3DBAE34
	0x03D92D88 LDR X8, [X19]
	0x03D92D8C LDR W9, [X19 + 0x14]
	0x03D92D90 MOV X0, X19
	0x03D92D94 LDP X10, X2, [X8 + 0x1D8]
	0x03D92D98 CMP W9, 0x2
	0x03D92D9C CSET W1, EQ
	0x03D92DA0 BLR X10
	0x03D92DA4 MOV X0, X19
	0x03D92DA8 BL 0x3D91FFC
	0x03D92DAC CBZ X0, 0x3D92E28
	0x03D92DB0 ADRP X10, 0x3D5000
	0x03D92DB4 LDR X8, [X0]
	0x03D92DB8 LDR X10, [X10 + 0xB90]
	0x03D92DBC MOV X20, X0
	0x03D92DC0 LDRH W9, [X8 + 0x12E]
	0x03D92DC4 LDR X1, [X10]
	0x03D92DC8 CBZ X9, 0x3D92DEC

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x656000
	012 Move W8, [X21+3675]
	013 Move V9, V1
	014 Move V8, V0
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {53}
	021 Move X0, 0x36A000
	022 Move X0, [X0+3856]
	023 Call 0x1C17CF4
	024 Move X0, 0x3C2000
	025 Move X0, [X0+3392]
	026 Call 0x1C17CF4
	027 Move X0, 0x362000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0x362000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move X0, 0x38B000
	034 Move X0, [X0+3712]
	035 Call 0x1C17CF4
	036 Move X0, 0x38B000
	037 Move X0, [X0+296]
	038 Call 0x1C17CF4
	039 Move X0, 0x38B000
	040 Move X0, [X0+304]
	041 Call 0x1C17CF4
	042 Move X0, 0x364000
	043 Move X0, [X0+632]
	044 Call 0x1C17CF4
	045 Move X0, 0x3D1000
	046 Move X0, [X0+2728]
	047 Call 0x1C17CF4
	048 Move X0, 0x38A000
	049 Move X0, [X0+2200]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X21+3675], W8
	053 Move X0, [X20+24]
	054 Compare X0, 0
	055 JumpIfEqual {61}
	056 Move X8, 0x3C2000
	057 Move X8, [X8+3392]
	058 Move X1, [X8]
	059 Call Enumerable.ToArray, X0
	060 Move [X19+40], X0
	061 Move W8, [X20+8]
	062 Move [X19+32], W8
	063 Move X0, [X20+16]
	064 Compare X0, 0
	065 JumpIfEqual {411}
	066 Move X8, [X0]
	067 Move X23, 0x362000
	068 Move X9, [X8+760]
	069 Move X1, [X8+768]
	070 Move X23, [X23+3584]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X21, X0
	073 Compare X0, 0
	074 JumpIfEqual {412}
	075 Move X22, 0x362000
	076 Move X24, 0x36A000
	077 Move X25, 0x364000
	078 Move X22, [X22+3608]
	079 Move X24, [X24+3856]
	080 Move X25, [X25+632]
	081 Move X8, [X21]
	082 Move X1, [X22]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move X0, X21
	093 Move W2, W31
	094 Call 0x1C5D788
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X8, X8, X9
	097 Add X0, X8, 312
	098 Move X8, [X0]
	099 Move X1, [X0+8]
	100 Move X0, X21
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {151}
	106 Move X8, [X21]
	107 Move X1, [X22]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move W2, 1
	118 Move X0, X21
	119 Call 0x1C5D788
	120 Move W9, [X10]
	121 Add W9, W9, 1
	122 Add X8, X8, W9
	123 Add X0, X8, 312
	124 Move X8, [X0]
	125 Move X1, [X0+8]
	126 Move X0, X21
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Compare X0, 0
	129 JumpIfEqual {406}
	130 Move X8, [X0]
	131 Move X1, [X24]
	132 Move X8, [X8+64]
	133 Move X9, [X1+64]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Call 0x1C17E08
	136 Move X8, X0
	137 Move X0, [X19+16]
	138 Compare X0, 0
	139 JumpIfEqual {407}
	140 Move X1, [X8]
	141 Move X2, [X8+8]
	142 Compare X1, 0
	143 JumpIfEqual {147}
	144 Move X8, [X25]
	145 Move X9, [X1]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X8, [X0]
	148 Move X9, [X8+744]
	149 Move X3, [X8+752]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X22, X31
	152 Move W24, 5
	153 Move X1, [X23]
	154 Move X0, X21
	155 Call 0x1C17E00
	156 Compare X0, 0
	157 JumpIfEqual {180}
	158 Move X8, [X0]
	159 Move X1, [X23]
	160 Move X21, X0
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 Compare X9, 0
	163 JumpIfEqual {170}
	164 Move X10, [X8+176]
	165 Add X10, X10, 8
	166 NotImplemented "Instruction LDUR not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Subtract X9, X9, 1
	169 Add X10, X10, 16
	170 Move X0, X21
	171 Move W2, W31
	172 Call 0x1C5D788
	173 NotImplemented "Instruction LDRSW not yet implemented."
	174 Add X8, X8, X9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X1, [X0+8]
	178 Move X0, X21
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Compare X22, 0
	181 JumpIfNotEqual {413}
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Compare W24, 0
	184 JumpIfNotEqual {210}
	185 Move X0, [X20]
	186 Move X1, X31
	187 Call String.IsNullOrWhiteSpace, X0
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfEqual {210}
	192 Move X8, [X19]
	193 Move X0, X19
	194 Move X9, [X8+392]
	195 Move X1, [X8+400]
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare X0, 0
	198 JumpIfEqual {210}
	199 Move X8, 0x38A000
	200 Move X8, [X8+2200]
	201 Move X9, [X0]
	202 Move X8, [X8]
	203 Move W11, [X9+304]
	204 Move W10, [X8+304]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X9, [X9+200]
	207 Add X9, X9, X10
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X20, [X31+64]
	211 Move X19, [X31+72]
	212 Move X22, [X31+48]
	213 Move X21, [X31+56]
	214 Move X24, [X31+32]
	215 Move X23, [X31+40]
	216 Move X30, [X31+16]
	217 Move X25, [X31+24]
	218 Move D9, [X31+80]
	219 Move D8, [X31+88]
	220 Return 
	221 Move X1, X31
	222 Call VisualElement.get_panel, X0
	223 Compare X0, 0
	224 JumpIfEqual {411}
	225 Move X10, 0x38B000
	226 Move X8, [X0]
	227 Move X10, [X10+3712]
	228 Move X21, X0
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Move X1, [X10]
	231 Compare X9, 0
	232 JumpIfEqual {239}
	233 Move X10, [X8+176]
	234 Add X10, X10, 8
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Subtract X9, X9, 1
	238 Add X10, X10, 16
	239 Move X0, X21
	240 Move W2, W31
	241 Call 0x1C5D788
	242 NotImplemented "Instruction LDRSW not yet implemented."
	243 Add X8, X8, X9
	244 Add X0, X8, 312
	245 Move X8, [X0]
	246 Move X1, [X0+8]
	247 Move X0, X21
	248 NotImplemented "Instruction BLR not yet implemented."
	249 Compare X0, 0
	250 JumpIfEqual {210}
	251 Move X22, [X19+24]
	252 Move X21, X0
	253 Compare X22, 0
	254 JumpIfNotEqual {306}
	255 Move X8, 0x38B000
	256 Move X8, [X8+304]
	257 Move X0, [X8]
	258 Call 0x1C17F10
	259 Move X1, X31
	260 Move X22, X0
	261 Call Label..ctor, X0
	262 Compare X22, 0
	263 JumpIfEqual {411}
	264 Move W1, 1
	265 Move X0, X22
	266 Move X2, X31
	267 Call VisualElement.set_pickingMode, X0, X1
	268 Move X0, X22
	269 Move X1, X31
	270 Call VisualElement.get_style, X0
	271 Move X8, 0x3D1000
	272 Move X8, [X8+2728]
	273 Move X23, X0
	274 Move W0, 1
	275 Move X1, [X8]
	276 Call 0x266FACC, X0
	277 Compare X23, 0
	278 JumpIfEqual {411}
	279 Move X10, 0x38B000
	280 Move X8, [X23]
	281 Move X10, [X10+296]
	282 Move X24, X0
	283 NotImplemented "Instruction LDRH not yet implemented."
	284 Move X1, [X10]
	285 Compare X9, 0
	286 JumpIfEqual {293}
	287 Move X10, [X8+176]
	288 Add X10, X10, 8
	289 NotImplemented "Instruction LDUR not yet implemented."
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Subtract X9, X9, 1
	292 Add X10, X10, 16
	293 Move W2, 40
	294 Move X0, X23
	295 Call 0x1C5D788
	296 Move W9, [X10]
	297 Add W9, W9, 40
	298 Add X8, X8, W9
	299 Add X0, X8, 312
	300 Move X8, [X0]
	301 Move X2, [X0+8]
	302 Move X0, X23
	303 Move X1, X24
	304 NotImplemented "Instruction BLR not yet implemented."
	305 Move [X19+24], X22
	306 Move X8, [X22]
	307 Move X1, [X20]
	308 Move X0, X22
	309 Move X9, [X8+2856]
	310 Move X2, [X8+2864]
	311 NotImplemented "Instruction BLR not yet implemented."
	312 Move X0, [X19+24]
	313 Compare X0, 0
	314 JumpIfEqual {411}
	315 Move X1, X31
	316 Call VisualElement.get_style, X0
	317 Move X20, X0
	318 Move V0, V9
	319 Move X0, X31
	320 Call StyleLength.op_Implicit, V0
	321 Compare X20, 0
	322 JumpIfEqual {411}
	323 Move X24, 0x38B000
	324 Move X9, [X20]
	325 Move X24, [X24+296]
	326 Move X8, X1
	327 Move X22, X0
	328 NotImplemented "Instruction LDRH not yet implemented."
	329 Move X1, [X24]
	330 And X23, X8, 0
	331 Compare X10, 0
	332 JumpIfEqual {339}
	333 Move X8, [X9+176]
	334 Add X8, X8, 8
	335 NotImplemented "Instruction LDUR not yet implemented."
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Subtract X10, X10, 1
	338 Add X8, X8, 16
	339 Move W2, 45
	340 Move X0, X20
	341 Call 0x1C5D788
	342 Move W8, [X8]
	343 Add W8, W8, 45
	344 Add X8, X9, W8
	345 Add X0, X8, 312
	346 Move X8, [X0]
	347 Move X3, [X0+8]
	348 Move X0, X20
	349 Move X1, X22
	350 Move X2, X23
	351 NotImplemented "Instruction BLR not yet implemented."
	352 Move X0, [X19+24]
	353 Compare X0, 0
	354 JumpIfEqual {411}
	355 Move X1, X31
	356 Call VisualElement.get_style, X0
	357 Move X20, X0
	358 Move V0, V8
	359 Move X0, X31
	360 Call StyleLength.op_Implicit, V0
	361 Compare X20, 0
	362 JumpIfEqual {411}
	363 Move X9, [X20]
	364 Move X8, X1
	365 Move X1, [X24]
	366 Move X22, X0
	367 NotImplemented "Instruction LDRH not yet implemented."
	368 And X23, X8, 0
	369 Compare X10, 0
	370 JumpIfEqual {377}
	371 Move X8, [X9+176]
	372 Add X8, X8, 8
	373 NotImplemented "Instruction LDUR not yet implemented."
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Subtract X10, X10, 1
	376 Add X8, X8, 16
	377 Move W2, 25
	378 Move X0, X20
	379 Call 0x1C5D788
	380 Move W8, [X8]
	381 Add W8, W8, 25
	382 Add X8, X9, W8
	383 Add X0, X8, 312
	384 Move X8, [X0]
	385 Move X3, [X0+8]
	386 Move X0, X20
	387 Move X1, X22
	388 Move X2, X23
	389 NotImplemented "Instruction BLR not yet implemented."
	390 Move X1, [X19+24]
	391 Move X0, X21
	392 Move X20, [X31+64]
	393 Move X19, [X31+72]
	394 Move X22, [X31+48]
	395 Move X21, [X31+56]
	396 Move X24, [X31+32]
	397 Move X23, [X31+40]
	398 Move X30, [X31+16]
	399 Move X25, [X31+24]
	400 Move X2, X31
	401 Move D9, [X31+80]
	402 Move D8, [X31+88]
	403 Call VisualElement.Add, X0, X1
	404 Return 
	405 Call 0x1C181E0
	406 Call 0x1C17F20
	407 Call 0x1C17F20
	408 Move X0, X1
	409 Move X1, X8
	410 Call 0x1C181E0
	411 Call 0x1C17F20
	412 Call 0x1C17F20
	413 Move X0, X22
	414 Call 0x1C17F18
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Call 0x3EB2AD0
	417 Move X22, [X0]
	418 Call 0x3EB2AE0
	419 Move W24, W31
	420 Move X19, X0
	421 Move X22, X31
	422 Move X19, X0
	423 Move X1, [X23]
	424 Move X0, X21
	425 Call 0x1C17E00
	426 Move X20, X0
	427 Compare X0, 0
	428 JumpIfEqual {450}
	429 Move X8, [X20]
	430 Move X1, [X23]
	431 NotImplemented "Instruction LDRH not yet implemented."
	432 Compare X9, 0
	433 JumpIfEqual {440}
	434 Move X10, [X8+176]
	435 Add X10, X10, 8
	436 NotImplemented "Instruction LDUR not yet implemented."
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Subtract X9, X9, 1
	439 Add X10, X10, 16
	440 Move X0, X20
	441 Move W2, W31
	442 Call 0x1C5D788
	443 NotImplemented "Instruction LDRSW not yet implemented."
	444 Add X8, X8, X9
	445 Add X0, X8, 312
	446 Move X8, [X0]
	447 Move X1, [X0+8]
	448 Move X0, X20
	449 NotImplemented "Instruction BLR not yet implemented."
	450 Compare X22, 0
	451 JumpIfNotEqual {454}
	452 Move X0, X19
	453 Call 0x1D2D690
	454 Move X0, X22
	455 Call 0x1C17F18
	456 Call 0x1991590

Method: System.Void UpdateDrag(UnityEngine.Vector3 pointerPosition)

Disassembly:
	0x03D92DCC LDR X10, [X8 + 0xB0]
	0x03D92DD0 ADD X10, X10, 0x8
	0x03D92DD4 LDUR X11, [X10 - 0x8]
	0x03D92DD8 CMP X11, X1
	0x03D92DDC B.EQ 0x3D92DFC
	0x03D92DE0 SUBS X9, X9, 0x1
	0x03D92DE4 ADD X10, X10, 0x10
	0x03D92DE8 B.NE 0x3D92DD4
	0x03D92DEC MOVZ W2, 0x3
	0x03D92DF0 MOV X0, X20
	0x03D92DF4 BL 0x1C5C788
	0x03D92DF8 B 0x3D92E0C
	0x03D92DFC LDR W9, [X10]
	0x03D92E00 ADD W9, W9, 0x3
	0x03D92E04 ADD X8, X8, W9, 0x4, SXTW
	0x03D92E08 ADD X0, X8, 0x138
	0x03D92E0C LDP X8, X1, [X0]
	0x03D92E10 MOV X0, X20
	0x03D92E14 BLR X8
	0x03D92E18 STR W31, [X19 + 0x14]
	0x03D92E1C LDP X20, X19, [X31 + 0x10]
	0x03D92E20 LDP X30, X21, [X31], #0x20
	0x03D92E24 RET
	0x03D92E28 BL 0x1C16F20
	0x03D92E2C STR X30, [X31 - 0x20]!
	0x03D92E30 STP X20, X19, [X31 + 0x10]
	0x03D92E34 ADRP X20, 0x655000
	0x03D92E38 LDRB W8, [X20 + 0xE65]
	0x03D92E3C MOV X19, X0
	0x03D92E40 TBNZ X8, 0x0, 0x3D92E58
	0x03D92E44 ADRP X0, 0x3D5000
	0x03D92E48 LDR X0, [X0 + 0xB90]
	0x03D92E4C BL 0x1C16CF4
	0x03D92E50 MOVZ W8, 0x1
	0x03D92E54 STRB W8, [X20 + 0xE65]
	0x03D92E58 LDR X8, [X19]
	0x03D92E5C MOV X0, X19
	0x03D92E60 LDP X9, X1, [X8 + 0x188]
	0x03D92E64 BLR X9
	0x03D92E68 TBZ X0, 0x0, 0x3D92E80
	0x03D92E6C LDR X8, [X19]
	0x03D92E70 MOV X0, X19
	0x03D92E74 LDP X9, X1, [X8 + 0x178]
	0x03D92E78 BLR X9
	0x03D92E7C TBNZ X0, 0x0, 0x3D92E94
	0x03D92E80 LDR X8, [X19]
	0x03D92E84 MOVZ W1, 0x1
	0x03D92E88 MOV X0, X19
	0x03D92E8C LDP X9, X2, [X8 + 0x1D8]
	0x03D92E90 BLR X9
	0x03D92E94 LDR X8, [X19]
	0x03D92E98 LDR W9, [X19 + 0x14]
	0x03D92E9C MOV X0, X19
	0x03D92EA0 LDP X10, X2, [X8 + 0x1D8]
	0x03D92EA4 CMP W9, 0x2
	0x03D92EA8 CSET W1, EQ
	0x03D92EAC BLR X10
	0x03D92EB0 MOV X0, X19
	0x03D92EB4 BL 0x3D91FFC
	0x03D92EB8 CBZ X0, 0x3D92F34
	0x03D92EBC ADRP X10, 0x3D5000
	0x03D92EC0 LDR X8, [X0]
	0x03D92EC4 LDR X10, [X10 + 0xB90]
	0x03D92EC8 MOV X20, X0
	0x03D92ECC LDRH W9, [X8 + 0x12E]
	0x03D92ED0 LDR X1, [X10]
	0x03D92ED4 CBZ X9, 0x3D92EF8
	0x03D92ED8 LDR X10, [X8 + 0xB0]
	0x03D92EDC ADD X10, X10, 0x8
	0x03D92EE0 LDUR X11, [X10 - 0x8]
	0x03D92EE4 CMP X11, X1
	0x03D92EE8 B.EQ 0x3D92F08
	0x03D92EEC SUBS X9, X9, 0x1
	0x03D92EF0 ADD X10, X10, 0x10
	0x03D92EF4 B.NE 0x3D92EE0
	0x03D92EF8 MOVZ W2, 0x3
	0x03D92EFC MOV X0, X20
	0x03D92F00 BL 0x1C5C788
	0x03D92F04 B 0x3D92F18
	0x03D92F08 LDR W9, [X10]
	0x03D92F0C ADD W9, W9, 0x3
	0x03D92F10 ADD X8, X8, W9, 0x4, SXTW
	0x03D92F14 ADD X0, X8, 0x138
	0x03D92F18 LDP X8, X1, [X0]
	0x03D92F1C MOV X0, X20
	0x03D92F20 BLR X8
	0x03D92F24 STR W31, [X19 + 0x14]
	0x03D92F28 LDP X20, X19, [X31 + 0x10]
	0x03D92F2C LDR X30, [X31], #0x20
	0x03D92F30 RET
	0x03D92F34 BL 0x1C16F20
	0x03D92F38 SUB X31, X31, 0xF0
	0x03D92F3C STR D10, [X31 + 0xA0]
	0x03D92F40 STP D9, D8, [X31 + 0xA8]
	0x03D92F44 STR X30, [X31 + 0xB8]
	0x03D92F48 STP X24, X23, [X31 + 0xC0]
	0x03D92F4C STP X22, X21, [X31 + 0xD0]
	0x03D92F50 STP X20, X19, [X31 + 0xE0]
	0x03D92F54 MRS X22, 0xC000
	0x03D92F58 LDR X8, [X22 + 0x28]
	0x03D92F5C ADRP X21, 0x655000

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x656000
	010 Move W8, [X20+3676]
	011 Move V9, V1
	012 Move V8, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x38B000
	019 Move X0, [X0+296]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3676], W8
	023 Move X0, [X19+24]
	024 Compare X0, 0
	025 JumpIfEqual {53}
	026 Move X1, X31
	027 Call VisualElement.get_style, X0
	028 Move X20, X0
	029 Move V0, V9
	030 Move X0, X31
	031 Call StyleLength.op_Implicit, V0
	032 Compare X20, 0
	033 JumpIfEqual {118}
	034 Move X23, 0x38B000
	035 Move X9, [X20]
	036 Move X23, [X23+296]
	037 Move X8, X1
	038 Move X21, X0
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X23]
	041 And X22, X8, 0
	042 Compare X10, 0
	043 JumpIfEqual {50}
	044 Move X8, [X9+176]
	045 Add X8, X8, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X10, X10, 1
	049 Add X8, X8, 16
	050 Move W2, 45
	051 Move X0, X20
	052 Call 0x1C5D788
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X30, [X31+16]
	058 Move X23, [X31+24]
	059 Move D9, [X31+64]
	060 Move D8, [X31+72]
	061 Return 
	062 Move W8, [X8]
	063 Add W8, W8, 45
	064 Add X8, X9, W8
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X3, [X0+8]
	068 Move X0, X20
	069 Move X1, X21
	070 Move X2, X22
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move X0, [X19+24]
	073 Compare X0, 0
	074 JumpIfEqual {118}
	075 Move X1, X31
	076 Call VisualElement.get_style, X0
	077 Move X19, X0
	078 Move V0, V8
	079 Move X0, X31
	080 Call StyleLength.op_Implicit, V0
	081 Compare X19, 0
	082 JumpIfEqual {118}
	083 Move X9, [X19]
	084 Move X8, X1
	085 Move X1, [X23]
	086 Move X20, X0
	087 NotImplemented "Instruction LDRH not yet implemented."
	088 And X21, X8, 0
	089 Compare X10, 0
	090 JumpIfEqual {97}
	091 Move X8, [X9+176]
	092 Add X8, X8, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X10, X10, 1
	096 Add X8, X8, 16
	097 Move W2, 25
	098 Move X0, X19
	099 Call 0x1C5D788
	100 Move W8, [X8]
	101 Add W8, W8, 25
	102 Add X8, X9, W8
	103 Add X0, X8, 312
	104 Move X4, [X0]
	105 Move X3, [X0+8]
	106 Move X0, X19
	107 Move X1, X20
	108 Move X2, X21
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X30, [X31+16]
	114 Move X23, [X31+24]
	115 Move D9, [X31+64]
	116 Move D8, [X31+72]
	117 CallNoReturn X4
	118 Call 0x1C17F20

Method: System.Void AcceptDrag()

Disassembly:
	0x03D92F60 MOV X19, X1

ISIL:
	001 Return 

Method: System.Void SetVisualMode(UnityEngine.UIElements.DragVisualMode mode)

Disassembly:
	0x03D92F64 MOV X20, X0
	0x03D92F68 STR X8, [X31 + 0x98]

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: System.Void DragCleanup()

Disassembly:
	0x03D92F6C LDRB W8, [X21 + 0xE66]
	0x03D92F70 TBNZ X8, 0x0, 0x3D92FA0
	0x03D92F74 ADRP X0, 0x3D5000
	0x03D92F78 LDR X0, [X0 + 0xB90]
	0x03D92F7C BL 0x1C16CF4
	0x03D92F80 ADRP X0, 0x38C000
	0x03D92F84 LDR X0, [X0 + 0x210]
	0x03D92F88 BL 0x1C16CF4
	0x03D92F8C ADRP X0, 0x3D1000
	0x03D92F90 LDR X0, [X0 + 0xBB0]
	0x03D92F94 BL 0x1C16CF4
	0x03D92F98 MOVZ W8, 0x1
	0x03D92F9C STRB W8, [X21 + 0xE66]
	0x03D92FA0 CBZ X19, 0x3D932D8
	0x03D92FA4 LDRB W8, [X19 + 0x106]
	0x03D92FA8 CBZ W8, 0x3D92FDC
	0x03D92FAC LDR X8, [X22 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Move [X19+40], X31
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X8, [X0]
	009 Move X9, [X8+648]
	010 Move X1, [X8+656]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X0, [X19+24]
	013 Move [X19+32], W31
	014 Compare X0, 0
	015 JumpIfEqual {21}
	016 Move X1, X31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call VisualElement.RemoveFromHierarchy, X0
	020 Return 
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return 

Method: UnityEngine.UIElements.DragAndDropData get_data()

Disassembly:
	0x03D92FB0 LDR X9, [X31 + 0x98]

ISIL:
	001 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03D92600 BL 0x1C16CF4
	0x03D92604 ADRP X0, 0x38B000
	0x03D92608 LDR X0, [X0 + 0x798]
	0x03D9260C BL 0x1C16CF4
	0x03D92610 ADRP X0, 0x3D5000
	0x03D92614 LDR X0, [X0 + 0xB50]
	0x03D92618 BL 0x1C16CF4
	0x03D9261C ADRP X0, 0x3D5000
	0x03D92620 LDR X0, [X0 + 0xB58]
	0x03D92624 BL 0x1C16CF4
	0x03D92628 ADRP X0, 0x3D5000
	0x03D9262C LDR X0, [X0 + 0xB60]
	0x03D92630 BL 0x1C16CF4
	0x03D92634 ADRP X0, 0x3D5000
	0x03D92638 LDR X0, [X0 + 0xB68]
	0x03D9263C BL 0x1C16CF4
	0x03D92640 ADRP X0, 0x3D5000
	0x03D92644 LDR X0, [X0 + 0xB70]
	0x03D92648 BL 0x1C16CF4
	0x03D9264C ADRP X0, 0x3D5000
	0x03D92650 LDR X0, [X0 + 0xB78]
	0x03D92654 BL 0x1C16CF4
	0x03D92658 ADRP X0, 0x3D5000
	0x03D9265C LDR X0, [X0 + 0xB38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x656000
	006 Move X21, 0x392000
	007 Move W8, [X20+3677]
	008 Move X21, [X21+3512]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x392000
	015 Move X0, [X0+3512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3677], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Hashtable..ctor, X0
	024 Move [X19+16], X20
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Object..ctor, X0
	032 Return 

