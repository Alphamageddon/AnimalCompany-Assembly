Type: UnityEngine.UIElements.BaseBoolField

Method: System.Void .ctor(System.String label)

Disassembly:
	0x03CFA5E4 LDR X1, [X19 + 0x440]
	0x03CFA5E8 MOV X2, X31
	0x03CFA5EC BL 0x3DF60E8
	0x03CFA5F0 B 0x3CFA61C
	0x03CFA5F4 CBZ X0, 0x3CFA61C
	0x03CFA5F8 MOV X1, X31
	0x03CFA5FC BL 0x3DF6948
	0x03CFA600 LDR X8, [X19 + 0x378]
	0x03CFA604 STR X31, [X19 + 0x4D8]
	0x03CFA608 ADD X0, X31, 0x8
	0x03CFA60C MOV X2, X31
	0x03CFA610 STR X8, [X31 + 0x8]
	0x03CFA614 LDR X1, [X19 + 0x440]
	0x03CFA618 BL 0x3DF891C
	0x03CFA61C MOV X0, X19
	0x03CFA620 BL 0x3CFA0F8
	0x03CFA624 MOV X0, X19
	0x03CFA628 BL 0x3CFA654
	0x03CFA62C LDR X8, [X19 + 0x4F0]
	0x03CFA630 CBZ X8, 0x3CFA640
	0x03CFA634 MOVZ W1, 0x1
	0x03CFA638 MOV X0, X19
	0x03CFA63C BL 0x3CFA8B8
	0x03CFA640 LDP X20, X19, [X31 + 0x20]
	0x03CFA644 LDP X22, X21, [X31 + 0x10]
	0x03CFA648 LDR X30, [X31], #0x30
	0x03CFA64C RET
	0x03CFA650 BL 0x1C16F20
	0x03CFA654 STR X30, [X31 - 0x30]!
	0x03CFA658 STP X22, X21, [X31 + 0x10]
	0x03CFA65C STP X20, X19, [X31 + 0x20]
	0x03CFA660 ADRP X20, 0x6ED000
	0x03CFA664 LDRB W8, [X20 + 0x7D6]
	0x03CFA668 MOV X19, X0
	0x03CFA66C TBNZ X8, 0x0, 0x3CFA69C
	0x03CFA670 ADRP X0, 0x468000
	0x03CFA674 LDR X0, [X0 + 0xA98]
	0x03CFA678 BL 0x1C16CF4
	0x03CFA67C ADRP X0, 0x400000
	0x03CFA680 LDR X0, [X0 + 0x2F0]
	0x03CFA684 BL 0x1C16CF4
	0x03CFA688 ADRP X0, 0x422000
	0x03CFA68C LDR X0, [X0 + 0x130]
	0x03CFA690 BL 0x1C16CF4
	0x03CFA694 MOVZ W8, 0x1
	0x03CFA698 STRB W8, [X20 + 0x7D6]
	0x03CFA69C LDR X8, [X19]
	0x03CFA6A0 MOV X0, X19
	0x03CFA6A4 LDR X9, [X8 + 0x808]
	0x03CFA6A8 LDR X1, [X8 + 0x810]
	0x03CFA6AC BLR X9
	0x03CFA6B0 TBZ X0, 0x0, 0x3CFA830
	0x03CFA6B4 MOV X0, X19
	0x03CFA6B8 MOV X1, X31
	0x03CFA6BC BL 0x3CFE9FC
	0x03CFA6C0 CBZ X0, 0x3CFA8A4
	0x03CFA6C4 ADRP X10, 0x400000
	0x03CFA6C8 LDR X8, [X0]
	0x03CFA6CC LDR X10, [X10 + 0x2F0]
	0x03CFA6D0 MOV X20, X0
	0x03CFA6D4 LDRH W9, [X8 + 0x12E]
	0x03CFA6D8 LDR X1, [X10]
	0x03CFA6DC CBZ X9, 0x3CFA700
	0x03CFA6E0 LDR X10, [X8 + 0xB0]
	0x03CFA6E4 ADD X10, X10, 0x8
	0x03CFA6E8 LDUR X11, [X10 - 0x8]
	0x03CFA6EC CMP X11, X1
	0x03CFA6F0 B.EQ 0x3CFA710
	0x03CFA6F4 SUBS X9, X9, 0x1
	0x03CFA6F8 ADD X10, X10, 0x10
	0x03CFA6FC B.NE 0x3CFA6E8
	0x03CFA700 MOVZ W2, 0x1
	0x03CFA704 MOV X0, X20
	0x03CFA708 BL 0x1C5C788
	0x03CFA70C B 0x3CFA720
	0x03CFA710 LDR W9, [X10]
	0x03CFA714 ADD W9, W9, 0x1
	0x03CFA718 ADD X8, X8, W9, 0x4, SXTW
	0x03CFA71C ADD X0, X8, 0x138
	0x03CFA720 LDP X8, X1, [X0]
	0x03CFA724 MOV X0, X20
	0x03CFA728 BLR X8
	0x03CFA72C LDRB W8, [X19 + 0x4E8]
	0x03CFA730 LDR X21, [X19 + 0x4D0]
	0x03CFA734 MOV W20, W0
	0x03CFA738 CBZ W8, 0x3CFA818
	0x03CFA73C CBNZ X21, 0x3CFA764
	0x03CFA740 ADRP X8, 0x422000
	0x03CFA744 LDR X8, [X8 + 0x130]
	0x03CFA748 LDR X0, [X8]
	0x03CFA74C BL 0x1C16F10
	0x03CFA750 MOV X1, X31
	0x03CFA754 MOV X21, X0
	0x03CFA758 BL 0x3D6B60C
	0x03CFA75C STR X21, [X19 + 0x4D0]
	0x03CFA760 CBZ X21, 0x3CFA8A4
	0x03CFA764 LDR X8, [X21]
	0x03CFA768 LDR X1, [X19 + 0x530]
	0x03CFA76C MOV X0, X21
	0x03CFA770 LDR X9, [X8 + 0xB28]
	0x03CFA774 LDR X2, [X8 + 0xB30]
	0x03CFA778 BLR X9
	0x03CFA77C LDR X8, [X19 + 0x440]
	0x03CFA780 CBZ X8, 0x3CFA8A4
	0x03CFA784 LDR X0, [X8 + 0x418]
	0x03CFA788 CBZ X0, 0x3CFA8A4
	0x03CFA78C LDR X1, [X19 + 0x4D0]
	0x03CFA790 MOV X2, X31
	0x03CFA794 BL 0x3DF60E8
	0x03CFA798 LDR X21, [X19 + 0x4D0]
	0x03CFA79C CBZ X21, 0x3CFA830
	0x03CFA7A0 ADRP X22, 0x468000
	0x03CFA7A4 LDR X22, [X22 + 0xA98]
	0x03CFA7A8 LDR X0, [X22]
	0x03CFA7AC LDR W8, [X0 + 0xE0]
	0x03CFA7B0 CBNZ W8, 0x3CFA7BC
	0x03CFA7B4 BL 0x1C16DFC
	0x03CFA7B8 LDR X0, [X22]
	0x03CFA7BC LDR X8, [X0 + 0xB8]
	0x03CFA7C0 CMP W20, 0x0
	0x03CFA7C4 CSET W2, EQ
	0x03CFA7C8 MOV X0, X21
	0x03CFA7CC LDR X1, [X8 + 0x18]
	0x03CFA7D0 MOV X3, X31
	0x03CFA7D4 BL 0x3DF1E80
	0x03CFA7D8 LDR X20, [X19 + 0x4D0]
	0x03CFA7DC CBZ X20, 0x3CFA830
	0x03CFA7E0 LDR X0, [X22]
	0x03CFA7E4 LDR W8, [X0 + 0xE0]
	0x03CFA7E8 CBNZ W8, 0x3CFA7F4
	0x03CFA7EC BL 0x1C16DFC
	0x03CFA7F0 LDR X0, [X22]
	0x03CFA7F4 LDR X8, [X0 + 0xB8]
	0x03CFA7F8 LDRB W2, [X19 + 0x4E8]
	0x03CFA7FC MOV X0, X20
	0x03CFA800 LDP X20, X19, [X31 + 0x20]
	0x03CFA804 LDR X1, [X8 + 0x20]
	0x03CFA808 LDP X22, X21, [X31 + 0x10]
	0x03CFA80C MOV X3, X31
	0x03CFA810 LDR X30, [X31], #0x30
	0x03CFA814 B 0x3DF1E80

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x6EE000
	010 Move X21, 0x469000
	011 Move W8, [X22+1994]
	012 Move X21, [X21+3408]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {54}
	019 Move X0, 0x469000
	020 Move X0, [X0+2376]
	021 Call 0x1C17CF4
	022 Move X0, 0x469000
	023 Move X0, [X0+3416]
	024 Call 0x1C17CF4
	025 Move X0, 0x469000
	026 Move X0, [X0+3424]
	027 Call 0x1C17CF4
	028 Move X0, 0x469000
	029 Move X0, [X0+3432]
	030 Call 0x1C17CF4
	031 Move X0, 0x469000
	032 Move X0, [X0+3200]
	033 Call 0x1C17CF4
	034 Move X0, 0x469000
	035 Move X0, [X0+3408]
	036 Call 0x1C17CF4
	037 Move X0, 0x425000
	038 Move X0, [X0+144]
	039 Call 0x1C17CF4
	040 Move X0, 0x469000
	041 Move X0, [X0+3440]
	042 Call 0x1C17CF4
	043 Move X0, 0x425000
	044 Move X0, [X0+168]
	045 Call 0x1C17CF4
	046 Move X0, 0x422000
	047 Move X0, [X0+2200]
	048 Call 0x1C17CF4
	049 Move X0, 0x469000
	050 Move X0, [X0+3448]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X22+1994], W8
	054 Move X0, [X21]
	055 Move X22, 0x469000
	056 Move X21, 0x422000
	057 Move W8, [X0+224]
	058 Move X22, [X22+3432]
	059 Move X21, [X21+2200]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X3, [X22]
	064 Move X0, X19
	065 Move X1, X20
	066 Move X2, X31
	067 Call 0x2774884, X0, X1, X2
	068 Move X0, [X21]
	069 Call 0x1C17F10
	070 Move X1, X31
	071 Move X20, X0
	072 Call VisualElement..ctor, X0
	073 Compare X20, 0
	074 JumpIfEqual {157}
	075 Move X8, 0x469000
	076 Move X8, [X8+3448]
	077 Move X21, 0x469000
	078 Move X0, X20
	079 Move X2, X31
	080 Move X1, [X8]
	081 Move X21, [X21+3200]
	082 Call VisualElement.set_name, X0, X1
	083 Move W1, 1
	084 Move X0, X20
	085 Move X2, X31
	086 Call VisualElement.set_pickingMode, X0, X1
	087 Move [X19+1096], X20
	088 Move X1, [X21]
	089 Move X0, X19
	090 Call 0x2773DDC, X0
	091 Compare X0, 0
	092 JumpIfEqual {157}
	093 Move X1, [X19+1096]
	094 Move X2, X31
	095 Call VisualElement.Add, X0, X1
	096 Move X1, [X21]
	097 Move X0, X19
	098 Call 0x2773DDC, X0
	099 Compare X0, 0
	100 JumpIfEqual {157}
	101 Move X20, 0x469000
	102 Move X21, 0x469000
	103 Move X22, 0x469000
	104 Move X23, 0x425000
	105 Move X24, 0x469000
	106 Move X25, 0x425000
	107 Move X20, [X20+2376]
	108 Move X21, [X21+3416]
	109 Move X22, [X22+3440]
	110 Move X23, [X23+168]
	111 Move X24, [X24+3424]
	112 Move X25, [X25+144]
	113 Move W1, W31
	114 Move X2, X31
	115 Call VisualElement.set_pickingMode, X0, X1
	116 Move X0, X19
	117 Move X1, X31
	118 Call BaseBoolField.set_text, X0, X1
	119 Move X0, [X20]
	120 Call 0x1C17F10
	121 Move X2, [X21]
	122 Move X1, X19
	123 Move X3, X31
	124 Move X20, X0
	125 Call Action`1<Object>..ctor, X0, X1, X2
	126 Move X0, [X22]
	127 Call 0x1C17F10
	128 Move X1, X20
	129 Move X21, X0
	130 Call Clickable..ctor, X0, X1
	131 Move X0, X19
	132 Move X1, X21
	133 Move X2, X31
	134 Move [X19+1104], X21
	135 Call VisualElementExtensions.AddManipulator, X0, X1
	136 Move X0, [X23]
	137 Call 0x1C17F10
	138 Move X2, [X24]
	139 Move X1, X19
	140 Move X3, X31
	141 Move X20, X0
	142 Call 0x2D0F824, X0, X1, X2
	143 Move X3, [X25]
	144 Move X0, X19
	145 Move X1, X20
	146 Move X20, [X31+48]
	147 Move X19, [X31+56]
	148 Move X22, [X31+32]
	149 Move X21, [X31+40]
	150 Move X24, [X31+16]
	151 Move X23, [X31+24]
	152 Move W2, W31
	153 Move X30, [X31+64]
	154 Move X25, [X31+72]
	155 Call 0x21A2534, X0, X1, X2
	156 Return 
	157 Call 0x1C17F20

Method: System.Void OnNavigationSubmit(UnityEngine.UIElements.NavigationSubmitEvent evt)

Disassembly:
	0x03CFA8A0 B 0x3CFA77C
	0x03CFA8A4 BL 0x1C16F20
	0x03CFA8A8 LDR X8, [X0 + 0x4F0]
	0x03CFA8AC CMP X8, 0x0
	0x03CFA8B0 CSET W0, NE
	0x03CFA8B4 RET
	0x03CFA8B8 STR X30, [X31 - 0x40]!
	0x03CFA8BC STP X24, X23, [X31 + 0x10]
	0x03CFA8C0 STP X22, X21, [X31 + 0x20]
	0x03CFA8C4 STP X20, X19, [X31 + 0x30]
	0x03CFA8C8 ADRP X21, 0x6ED000
	0x03CFA8CC ADRP X22, 0x468000
	0x03CFA8D0 LDRB W8, [X21 + 0x7D3]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X1
	005 Move X9, [X8+2216]
	006 Move X8, [X8+2224]
	007 Move X1, X8
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Compare X19, 0
	010 JumpIfEqual {17}
	011 Move X0, X19
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call EventBase.StopPropagation, X0
	016 Return 
	017 Call 0x1C17F20

Method: System.String get_text()

Disassembly:
	0x03CFA8D4 LDR X22, [X22 + 0xA98]
	0x03CFA8D8 MOV W20, W1
	0x03CFA8DC MOV X19, X0
	0x03CFA8E0 TBNZ X8, 0x0, 0x3CFA94C
	0x03CFA8E4 ADRP X0, 0x3FA000
	0x03CFA8E8 LDR X0, [X0 + 0xE70]
	0x03CFA8EC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+1088]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+2840]
	006 Move X1, [X8+2848]
	007 CallNoReturn X2
	008 Return X0

Method: System.Void set_text(System.String value)

Disassembly:
	0x03CFA818 CBZ W20, 0x3CFA840
	0x03CFA81C CBZ X21, 0x3CFA82C
	0x03CFA820 MOV X0, X21
	0x03CFA824 MOV X1, X31
	0x03CFA828 BL 0x3DF6948
	0x03CFA82C STR X31, [X19 + 0x4D0]
	0x03CFA830 LDP X20, X19, [X31 + 0x20]
	0x03CFA834 LDP X22, X21, [X31 + 0x10]
	0x03CFA838 LDR X30, [X31], #0x30
	0x03CFA83C RET
	0x03CFA840 CBNZ X21, 0x3CFA864
	0x03CFA844 ADRP X8, 0x422000
	0x03CFA848 LDR X8, [X8 + 0x130]
	0x03CFA84C LDR X0, [X8]
	0x03CFA850 BL 0x1C16F10
	0x03CFA854 MOV X1, X31
	0x03CFA858 MOV X21, X0
	0x03CFA85C BL 0x3D6B60C
	0x03CFA860 STR X21, [X19 + 0x4D0]
	0x03CFA864 ADRP X22, 0x468000
	0x03CFA868 LDR X22, [X22 + 0xA98]
	0x03CFA86C LDR X0, [X22]
	0x03CFA870 LDR W8, [X0 + 0xE0]
	0x03CFA874 CBNZ W8, 0x3CFA87C
	0x03CFA878 BL 0x1C16DFC
	0x03CFA87C CBZ X21, 0x3CFA8A4
	0x03CFA880 LDR X8, [X22]
	0x03CFA884 LDR X9, [X21]
	0x03CFA888 MOV X0, X21
	0x03CFA88C LDR X8, [X8 + 0xB8]
	0x03CFA890 LDR X10, [X9 + 0xB28]
	0x03CFA894 LDR X2, [X9 + 0xB30]
	0x03CFA898 LDR X1, [X8 + 0xA0]
	0x03CFA89C BLR X10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Move X0, X1
	007 Move X1, X31
	008 Call String.IsNullOrEmpty, X0
	009 Move X8, [X20+1088]
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {24}
	014 Compare X8, 0
	015 JumpIfEqual {20}
	016 Move X0, X8
	017 Move X1, X31
	018 Call VisualElement.RemoveFromHierarchy, X0
	019 Move [X20+1088], X31
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return 
	024 Compare X8, 0
	025 JumpIfNotEqual {32}
	026 Move X8, [X20]
	027 Move X0, X20
	028 Move X9, [X8+2200]
	029 Move X1, [X8+2208]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X20+1088]
	032 Compare X8, 0
	033 JumpIfEqual {43}
	034 Move X9, [X8]
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X0, X8
	039 Move X3, [X9+2856]
	040 Move X2, [X9+2864]
	041 Move X30, [X31+32]
	042 CallNoReturn X3
	043 Call 0x1C17F20

Method: System.Void InitLabel()

Disassembly:
	0x03CFA8F0 ADRP X0, 0x468000
	0x03CFA8F4 LDR X0, [X0 + 0xDE0]
	0x03CFA8F8 BL 0x1C16CF4
	0x03CFA8FC ADRP X0, 0x468000
	0x03CFA900 LDR X0, [X0 + 0xDE8]
	0x03CFA904 BL 0x1C16CF4
	0x03CFA908 ADRP X0, 0x468000
	0x03CFA90C LDR X0, [X0 + 0xA98]
	0x03CFA910 BL 0x1C16CF4
	0x03CFA914 ADRP X0, 0x468000
	0x03CFA918 LDR X0, [X0 + 0xDF0]
	0x03CFA91C BL 0x1C16CF4
	0x03CFA920 ADRP X0, 0x421000
	0x03CFA924 LDR X0, [X0 + 0x898]
	0x03CFA928 BL 0x1C16CF4
	0x03CFA92C ADRP X0, 0x3FE000
	0x03CFA930 LDR X0, [X0 + 0x3F8]
	0x03CFA934 BL 0x1C16CF4
	0x03CFA938 ADRP X0, 0x3FA000
	0x03CFA93C LDR X0, [X0 + 0x2A8]
	0x03CFA940 BL 0x1C16CF4
	0x03CFA944 MOVZ W8, 0x1
	0x03CFA948 STRB W8, [X21 + 0x7D3]
	0x03CFA94C LDR X0, [X22]
	0x03CFA950 STR X31, [X31 + 0x8]
	0x03CFA954 LDR W8, [X0 + 0xE0]
	0x03CFA958 CBNZ W8, 0x3CFA964
	0x03CFA95C BL 0x1C16DFC
	0x03CFA960 LDR X0, [X22]
	0x03CFA964 LDR X8, [X0 + 0xB8]
	0x03CFA968 AND W21, W20, 0x1
	0x03CFA96C MOV X0, X19
	0x03CFA970 MOV W2, W21
	0x03CFA974 LDR X1, [X8 + 0x80]
	0x03CFA978 MOV X3, X31
	0x03CFA97C BL 0x3DF1E80

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6EE000
	007 Move X22, 0x423000
	008 Move X21, 0x469000
	009 Move W8, [X20+1995]
	010 Move X22, [X22+304]
	011 Move X21, [X21+3200]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x469000
	018 Move X0, [X0+3200]
	019 Call 0x1C17CF4
	020 Move X0, 0x423000
	021 Move X0, [X0+304]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1995], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Label..ctor, X0
	030 Move [X19+1088], X20
	031 Move X1, [X21]
	032 Move X0, X19
	033 Call 0x2773DDC, X0
	034 Compare X0, 0
	035 JumpIfEqual {45}
	036 Move X1, [X19+1088]
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X2, X31
	042 Move X30, [X31+48]
	043 Call VisualElement.Add, X0, X1
	044 Return 
	045 Call 0x1C17F20

Method: System.Void SetValueWithoutNotify(System.Boolean newValue)

Disassembly:
	0x03CFA980 LDR X0, [X19 + 0x440]
	0x03CFA984 CBZ X0, 0x3CFAC0C
	0x03CFA988 LDR X8, [X22]
	0x03CFA98C MOV W2, W21
	0x03CFA990 MOV X3, X31
	0x03CFA994 LDR X8, [X8 + 0xB8]
	0x03CFA998 LDR X1, [X8 + 0x88]
	0x03CFA99C BL 0x3DF1E80
	0x03CFA9A0 LDR X21, [X19 + 0x4E0]
	0x03CFA9A4 CBZ X21, 0x3CFA9D4
	0x03CFA9A8 LDR X0, [X22]
	0x03CFA9AC LDR W8, [X0 + 0xE0]
	0x03CFA9B0 CBNZ W8, 0x3CFA9B8
	0x03CFA9B4 BL 0x1C16DFC
	0x03CFA9B8 LDR X8, [X22]
	0x03CFA9BC AND W2, W20, 0x1
	0x03CFA9C0 MOV X0, X21
	0x03CFA9C4 MOV X3, X31
	0x03CFA9C8 LDR X8, [X8 + 0xB8]
	0x03CFA9CC LDR X1, [X8 + 0x70]
	0x03CFA9D0 BL 0x3DF1E80
	0x03CFA9D4 TBZ X20, 0x0, 0x3CFABA0
	0x03CFA9D8 LDR X8, [X19 + 0x4F0]
	0x03CFA9DC CBNZ X8, 0x3CFAB74
	0x03CFA9E0 ADRP X8, 0x421000
	0x03CFA9E4 LDR X8, [X8 + 0x898]
	0x03CFA9E8 LDR X0, [X8]
	0x03CFA9EC BL 0x1C16F10
	0x03CFA9F0 MOV X1, X31
	0x03CFA9F4 MOV X20, X0
	0x03CFA9F8 BL 0x3DEF578
	0x03CFA9FC LDR X0, [X22]
	0x03CFAA00 LDR W8, [X0 + 0xE0]
	0x03CFAA04 CBNZ W8, 0x3CFAA0C
	0x03CFAA08 BL 0x1C16DFC
	0x03CFAA0C CBZ X20, 0x3CFAC0C
	0x03CFAA10 LDR X8, [X22]
	0x03CFAA14 MOV X0, X20
	0x03CFAA18 MOV X2, X31
	0x03CFAA1C LDR X8, [X8 + 0xB8]
	0x03CFAA20 LDR X1, [X8 + 0x50]
	0x03CFAA24 BL 0x3DEF278
	0x03CFAA28 STR X20, [X19 + 0x4F0]
	0x03CFAA2C LDR X8, [X22]
	0x03CFAA30 MOV X0, X20
	0x03CFAA34 MOV X2, X31
	0x03CFAA38 LDR X8, [X8 + 0xB8]
	0x03CFAA3C LDR X1, [X8 + 0x50]
	0x03CFAA40 BL 0x3DF1C70
	0x03CFAA44 ADRP X23, 0x3FA000
	0x03CFAA48 LDR X23, [X23 + 0xE70]
	0x03CFAA4C LDR X0, [X23]
	0x03CFAA50 BL 0x1C16F10
	0x03CFAA54 ADRP X8, 0x468000
	0x03CFAA58 LDR X8, [X8 + 0xDE8]
	0x03CFAA5C MOV X1, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6EE000
	007 Move X22, 0x469000
	008 Move W8, [X21+1996]
	009 Move X22, [X22+3200]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x469000
	017 Move X0, [X0+3456]
	018 Call 0x1C17CF4
	019 Move X0, 0x469000
	020 Move X0, [X0+3200]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1996], W8
	024 Move X1, [X22]
	025 Move X0, X19
	026 Call 0x2773DDC, X0
	027 Compare X0, 0
	028 JumpIfEqual {67}
	029 Move X22, 0x469000
	030 Move X22, [X22+3456]
	031 Move X1, X31
	032 Move X21, X0
	033 Call VisualElement.get_pseudoStates, X0
	034 Move TEMP, X20
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {46}
	038 Or W1, W0, 8
	039 Move X0, X21
	040 Move X2, X31
	041 Call VisualElement.set_pseudoStates, X0, X1
	042 Move X0, X19
	043 Move X1, X31
	044 Call VisualElement.get_pseudoStates, X0
	045 Or W1, W0, 8
	046 And W1, W0, 0xFFFFFFF7
	047 Move X0, X21
	048 Move X2, X31
	049 Call VisualElement.set_pseudoStates, X0, X1
	050 Move X0, X19
	051 Move X1, X31
	052 Call VisualElement.get_pseudoStates, X0
	053 And W1, W0, 0xFFFFFFF7
	054 Move X0, X19
	055 Move X2, X31
	056 Call VisualElement.set_pseudoStates, X0, X1
	057 Move X2, [X22]
	058 And W1, W20, 1
	059 Move X0, X19
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Call 0x2775860, X0, X1
	066 Return 
	067 Call 0x1C17F20

Method: System.Void OnClickEvent(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03CFAA60 MOV X3, X31
	0x03CFAA64 MOV X21, X0
	0x03CFAA68 LDR X2, [X8]
	0x03CFAA6C BL 0x3314368
	0x03CFAA70 ADRP X24, 0x468000
	0x03CFAA74 LDR X24, [X24 + 0xDF0]
	0x03CFAA78 LDR X0, [X24]
	0x03CFAA7C BL 0x1C16F10
	0x03CFAA80 MOV X1, X21
	0x03CFAA84 MOV X2, X31
	0x03CFAA88 MOV X20, X0
	0x03CFAA8C BL 0x3D06560
	0x03CFAA90 CBZ X20, 0x3CFAC0C
	0x03CFAA94 LDR X8, [X22]
	0x03CFAA98 MOV X0, X20
	0x03CFAA9C MOV X2, X31
	0x03CFAAA0 LDR X8, [X8 + 0xB8]
	0x03CFAAA4 LDR X1, [X8 + 0x98]
	0x03CFAAA8 BL 0x3DEF278
	0x03CFAAAC ADRP X9, 0x3FA000
	0x03CFAAB0 LDR X8, [X20]
	0x03CFAAB4 LDR X9, [X9 + 0x2A8]
	0x03CFAAB8 MOV X0, X20
	0x03CFAABC LDR X2, [X8 + 0xB30]
	0x03CFAAC0 LDR X1, [X9]
	0x03CFAAC4 LDR X9, [X8 + 0xB28]
	0x03CFAAC8 BLR X9
	0x03CFAACC LDR X0, [X19 + 0x4F0]
	0x03CFAAD0 STR X20, [X19 + 0x500]
	0x03CFAAD4 CBZ X0, 0x3CFAC0C
	0x03CFAAD8 MOV X1, X20
	0x03CFAADC MOV X2, X31
	0x03CFAAE0 BL 0x3DF60E8
	0x03CFAAE4 LDR X0, [X23]
	0x03CFAAE8 BL 0x1C16F10
	0x03CFAAEC ADRP X8, 0x468000
	0x03CFAAF0 LDR X8, [X8 + 0xDE0]
	0x03CFAAF4 MOV X1, X19
	0x03CFAAF8 MOV X3, X31
	0x03CFAAFC MOV X21, X0
	0x03CFAB00 LDR X2, [X8]
	0x03CFAB04 BL 0x3314368
	0x03CFAB08 LDR X0, [X24]
	0x03CFAB0C BL 0x1C16F10
	0x03CFAB10 MOV X1, X21
	0x03CFAB14 MOV X2, X31
	0x03CFAB18 MOV X20, X0
	0x03CFAB1C BL 0x3D06560
	0x03CFAB20 CBZ X20, 0x3CFAC0C
	0x03CFAB24 LDR X8, [X22]
	0x03CFAB28 MOV X0, X20
	0x03CFAB2C MOV X2, X31
	0x03CFAB30 LDR X8, [X8 + 0xB8]
	0x03CFAB34 LDR X1, [X8 + 0x90]
	0x03CFAB38 BL 0x3DEF278
	0x03CFAB3C ADRP X9, 0x3FE000
	0x03CFAB40 LDR X8, [X20]
	0x03CFAB44 LDR X9, [X9 + 0x3F8]
	0x03CFAB48 MOV X0, X20
	0x03CFAB4C LDR X2, [X8 + 0xB30]
	0x03CFAB50 LDR X1, [X9]
	0x03CFAB54 LDR X9, [X8 + 0xB28]
	0x03CFAB58 BLR X9
	0x03CFAB5C LDR X0, [X19 + 0x4F0]
	0x03CFAB60 STR X20, [X19 + 0x4F8]
	0x03CFAB64 CBZ X0, 0x3CFAC0C
	0x03CFAB68 MOV X1, X20
	0x03CFAB6C MOV X2, X31
	0x03CFAB70 BL 0x3DF60E8
	0x03CFAB74 LDR X0, [X19 + 0x4D8]
	0x03CFAB78 CBZ X0, 0x3CFABE0
	0x03CFAB7C LDR X8, [X0]
	0x03CFAB80 LDR X9, [X8 + 0x768]
	0x03CFAB84 LDR X1, [X8 + 0x770]
	0x03CFAB88 BLR X9
	0x03CFAB8C CBZ X0, 0x3CFAC0C
	0x03CFAB90 LDR X1, [X19 + 0x4F0]
	0x03CFAB94 MOV X2, X31
	0x03CFAB98 BL 0x3DF60E8
	0x03CFAB9C B 0x3CFABF8
	0x03CFABA0 LDR X0, [X19 + 0x500]
	0x03CFABA4 CBZ X0, 0x3CFABB0
	0x03CFABA8 MOV X1, X31
	0x03CFABAC BL 0x3DF6948
	0x03CFABB0 LDR X0, [X19 + 0x4F8]
	0x03CFABB4 CBZ X0, 0x3CFABC0
	0x03CFABB8 MOV X1, X31
	0x03CFABBC BL 0x3DF6948
	0x03CFABC0 LDR X0, [X19 + 0x4F0]
	0x03CFABC4 ADD X19, X19, 0x4F0
	0x03CFABC8 CBZ X0, 0x3CFABD4
	0x03CFABCC MOV X1, X31
	0x03CFABD0 BL 0x3DF6948
	0x03CFABD4 STP X31, X31, [X19]
	0x03CFABD8 STR X31, [X19 + 0x10]
	0x03CFABDC B 0x3CFABF8
	0x03CFABE0 LDR X8, [X19 + 0x378]
	0x03CFABE4 ADD X0, X31, 0x8
	0x03CFABE8 MOV X2, X31
	0x03CFABEC STR X8, [X31 + 0x8]
	0x03CFABF0 LDR X1, [X19 + 0x4F0]
	0x03CFABF4 BL 0x3DF891C
	0x03CFABF8 LDP X20, X19, [X31 + 0x30]
	0x03CFABFC LDP X22, X21, [X31 + 0x20]
	0x03CFAC00 LDP X24, X23, [X31 + 0x10]
	0x03CFAC04 LDR X30, [X31], #0x40
	0x03CFAC08 RET
	0x03CFAC0C BL 0x1C16F20
	0x03CFAC10 STR X30, [X31 - 0x20]!
	0x03CFAC14 STP X20, X19, [X31 + 0x10]
	0x03CFAC18 ADRP X20, 0x6ED000
	0x03CFAC1C LDRB W8, [X20 + 0x7D5]
	0x03CFAC20 MOV X19, X0
	0x03CFAC24 TBNZ X8, 0x0, 0x3CFAC3C
	0x03CFAC28 ADRP X0, 0x468000
	0x03CFAC2C LDR X0, [X0 + 0xDF8]
	0x03CFAC30 BL 0x1C16CF4
	0x03CFAC34 MOVZ W8, 0x1
	0x03CFAC38 STRB W8, [X20 + 0x7D5]
	0x03CFAC3C STR W31, [X31 + 0xC]
	0x03CFAC40 LDR X8, [X19]
	0x03CFAC44 MOV X0, X19
	0x03CFAC48 LDR X9, [X8 + 0x808]
	0x03CFAC4C LDR X1, [X8 + 0x810]
	0x03CFAC50 BLR X9
	0x03CFAC54 TBZ X0, 0x0, 0x3CFACC4
	0x03CFAC58 LDR X20, [X19 + 0x4E0]
	0x03CFAC5C CBZ X20, 0x3CFACC4
	0x03CFAC60 LDRB W8, [X20 + 0x408]
	0x03CFAC64 CBNZ W8, 0x3CFACA8
	0x03CFAC68 MOV X0, X19
	0x03CFAC6C BL 0x3CFAD24
	0x03CFAC70 CBZ X0, 0x3CFACD0
	0x03CFAC74 LDR X8, [X0]
	0x03CFAC78 LDP X9, X1, [X8 + 0x1D8]
	0x03CFAC7C BLR X9
	0x03CFAC80 STR W0, [X31 + 0xC]
	0x03CFAC84 ADD X0, X31, 0xC
	0x03CFAC88 MOV X1, X31
	0x03CFAC8C BL 0x337B6E0
	0x03CFAC90 LDR X8, [X20]
	0x03CFAC94 MOV X1, X0
	0x03CFAC98 MOV X0, X20
	0x03CFAC9C LDR X9, [X8 + 0x888]
	0x03CFACA0 LDR X2, [X8 + 0x890]
	0x03CFACA4 BLR X9
	0x03CFACA8 LDR X0, [X19 + 0x4F0]
	0x03CFACAC CBZ X0, 0x3CFACC4
	0x03CFACB0 LDRB W8, [X19 + 0x4E8]
	0x03CFACB4 MOV X2, X31
	0x03CFACB8 CMP W8, 0x0
	0x03CFACBC CSET W1, EQ
	0x03CFACC0 BL 0x3DEF834
	0x03CFACC4 LDP X20, X19, [X31 + 0x10]
	0x03CFACC8 LDR X30, [X31], #0x20
	0x03CFACCC RET
	0x03CFACD0 BL 0x1C16F20
	0x03CFACD4 MOV X8, X0
	0x03CFACD8 LDR X0, [X0 + 0x4D8]
	0x03CFACDC STR X1, [X8 + 0x4B0]
	0x03CFACE0 CBZ X0, 0x3CFACEC
	0x03CFACE4 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x6EE000
	008 Move W8, [X21+1997]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {41}
	015 Move X0, 0x469000
	016 Move X0, [X0+3464]
	017 Call 0x1C17CF4
	018 Move X0, 0x469000
	019 Move X0, [X0+3472]
	020 Call 0x1C17CF4
	021 Move X0, 0x422000
	022 Move X0, [X0+2368]
	023 Call 0x1C17CF4
	024 Move X0, 0x422000
	025 Move X0, [X0+2376]
	026 Call 0x1C17CF4
	027 Move X0, 0x469000
	028 Move X0, [X0+3480]
	029 Call 0x1C17CF4
	030 Move X0, 0x469000
	031 Move X0, [X0+3488]
	032 Call 0x1C17CF4
	033 Move X0, 0x425000
	034 Move X0, [X0+3376]
	035 Call 0x1C17CF4
	036 Move X0, 0x423000
	037 Move X0, [X0+3704]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+1997], W8
	041 Compare X20, 0
	042 JumpIfEqual {174}
	043 Move X8, [X20]
	044 Move X21, 0x469000
	045 Move X22, 0x469000
	046 Move X0, X20
	047 Move X9, [X8+392]
	048 Move X1, [X8+400]
	049 Move X21, [X21+3488]
	050 Move X22, [X22+3464]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, [X21]
	053 Move X21, X0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, [X22]
	060 Call 0x2D0E5C8
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X23, 0x425000
	063 Move X23, [X23+3376]
	064 Move X0, X20
	065 Move X22, [X23]
	066 Move X1, X22
	067 Call 0x1C17E00
	068 Compare X0, 0
	069 JumpIfEqual {175}
	070 Move X8, [X0]
	071 Move X1, [X23]
	072 Move X21, X0
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move W2, 5
	083 Move X8, [X20]
	084 Move X0, X20
	085 Move X9, [X8+392]
	086 Move X1, [X8+400]
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X8, 0x422000
	089 Move X8, [X8+2376]
	090 Move X21, X0
	091 Move X8, [X8]
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X8, 0x422000
	098 Move X8, [X8+2368]
	099 Move X0, [X8]
	100 Call 0x2D0E5C8
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, [X20]
	103 Move X0, X20
	104 Move X9, [X8+392]
	105 Move X1, [X8+400]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, 0x469000
	108 Move X8, [X8+3480]
	109 Move X21, X0
	110 Move X8, [X8]
	111 Move W9, [X8+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {116}
	114 Move X0, X8
	115 Call 0x1C17DFC
	116 Move X8, 0x469000
	117 Move X8, [X8+3472]
	118 Move X0, [X8]
	119 Call 0x2D0E5C8
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X23, 0x423000
	122 Move X23, [X23+3704]
	123 Move X0, X20
	124 Move X22, [X23]
	125 Move X1, X22
	126 Call 0x1C17E00
	127 Compare X0, 0
	128 JumpIfEqual {175}
	129 Move X8, [X0]
	130 Move X1, [X23]
	131 Move X21, X0
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 3
	142 Move X0, X21
	143 Call 0x1C5D788
	144 Move W9, [X10]
	145 Add W9, W9, 5
	146 Move W9, [X10]
	147 Add W9, W9, 3
	148 Add X8, X8, W9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X1, [X0+8]
	152 Move X0, X21
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Compare W0, 0
	155 JumpIfEqual {163}
	156 Move X20, [X31+32]
	157 Move X19, [X31+40]
	158 Move X22, [X31+16]
	159 Move X21, [X31+24]
	160 Move X30, [X31+48]
	161 Move X23, [X31+56]
	162 Return 
	163 Move X8, [X19]
	164 Move X0, X19
	165 Move X20, [X31+32]
	166 Move X19, [X31+40]
	167 Move X22, [X31+16]
	168 Move X21, [X31+24]
	169 Move X2, [X8+2216]
	170 Move X1, [X8+2224]
	171 Move X30, [X31+48]
	172 Move X23, [X31+56]
	173 CallNoReturn X2
	174 Call 0x1C17F20
	175 Move X0, X20
	176 Move X1, X22
	177 Call 0x1C181E0

Method: System.Void ToggleValue()

Disassembly:
	0x03CFACE8 B 0x3D0E5D8
	0x03CFACEC RET
	0x03CFACF0 AND W1, W1, 0x1
	0x03CFACF4 B 0x3CFA8B8
	0x03CFACF8 STP X30, X19, [X31 - 0x10]!
	0x03CFACFC MOV W19, W1
	0x03CFAD00 BL 0x3CFAD24
	0x03CFAD04 CBZ X0, 0x3CFAD20
	0x03CFAD08 LDR X8, [X0]
	0x03CFAD0C MOV W1, W19
	0x03CFAD10 LDR X3, [X8 + 0x2A8]
	0x03CFAD14 LDR X2, [X8 + 0x2B0]
	0x03CFAD18 LDP X30, X19, [X31], #0x10
	0x03CFAD1C BR X3

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+2024]
	006 Move X1, [X8+2032]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move X8, [X19]
	009 Move X3, [X8+2040]
	010 Move X2, [X8+2048]
	011 NotImplemented "Instruction ORN not yet implemented."
	012 And W1, W8, 1
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 CallNoReturn X3

Method: System.Void UpdateMixedValueContent()

Disassembly:
	0x03CFAD20 BL 0x1C16F20
	0x03CFAD24 STR X30, [X31 - 0x20]!
	0x03CFAD28 STP X20, X19, [X31 + 0x10]
	0x03CFAD2C ADRP X20, 0x6ED000
	0x03CFAD30 LDRB W8, [X20 + 0x7D9]
	0x03CFAD34 MOV X19, X0
	0x03CFAD38 TBNZ X8, 0x0, 0x3CFAD50
	0x03CFAD3C ADRP X0, 0x468000
	0x03CFAD40 LDR X0, [X0 + 0xE00]
	0x03CFAD44 BL 0x1C16CF4
	0x03CFAD48 MOVZ W8, 0x1
	0x03CFAD4C STRB W8, [X20 + 0x7D9]
	0x03CFAD50 LDR X8, [X19 + 0x448]
	0x03CFAD54 CBZ X8, 0x3CFAD78
	0x03CFAD58 ADRP X9, 0x468000
	0x03CFAD5C LDR X9, [X9 + 0xE00]
	0x03CFAD60 LDR X10, [X8]
	0x03CFAD64 LDR X9, [X9]
	0x03CFAD68 LDRB W12, [X10 + 0x130]
	0x03CFAD6C LDRB W11, [X9 + 0x130]
	0x03CFAD70 CMP W12, W11
	0x03CFAD74 B.CS 0x3CFAD80
	0x03CFAD78 MOV X0, X31
	0x03CFAD7C B 0x3CFAD94
	0x03CFAD80 LDR X10, [X10 + 0xC8]
	0x03CFAD84 ADD X10, X10, X11, 0x3, LSL
	0x03CFAD88 LDUR X10, [X10 - 0x8]
	0x03CFAD8C CMP X10, X9
	0x03CFAD90 CSEL X0, X8, X31, EQ
	0x03CFAD94 LDP X20, X19, [X31 + 0x10]
	0x03CFAD98 LDR X30, [X31], #0x20
	0x03CFAD9C RET
	0x03CFADA0 SUB X31, X31, 0x30
	0x03CFADA4 STP X30, X21, [X31 + 0x10]
	0x03CFADA8 STP X20, X19, [X31 + 0x20]
	0x03CFADAC ADRP X21, 0x6ED000
	0x03CFADB0 LDRB W8, [X21 + 0x7D4]
	0x03CFADB4 MOV X20, X1
	0x03CFADB8 MOV X19, X0
	0x03CFADBC TBNZ X8, 0x0, 0x3CFADF8
	0x03CFADC0 ADRP X0, 0x468000
	0x03CFADC4 LDR X0, [X0 + 0xDF8]
	0x03CFADC8 BL 0x1C16CF4
	0x03CFADCC ADRP X0, 0x468000
	0x03CFADD0 LDR X0, [X0 + 0xE08]
	0x03CFADD4 BL 0x1C16CF4
	0x03CFADD8 ADRP X0, 0x424000
	0x03CFADDC LDR X0, [X0 + 0x1A0]
	0x03CFADE0 BL 0x1C16CF4
	0x03CFADE4 ADRP X0, 0x424000
	0x03CFADE8 LDR X0, [X0 + 0x1A8]
	0x03CFADEC BL 0x1C16CF4
	0x03CFADF0 MOVZ W8, 0x1
	0x03CFADF4 STRB W8, [X21 + 0x7D4]
	0x03CFADF8 STR W31, [X31 + 0xC]
	0x03CFADFC LDR X8, [X19 + 0x4E0]
	0x03CFAE00 CBZ X8, 0x3CFAF64
	0x03CFAE04 LDRB W8, [X8 + 0x408]
	0x03CFAE08 CBZ W8, 0x3CFAE48
	0x03CFAE0C ADRP X21, 0x468000
	0x03CFAE10 LDR X21, [X21 + 0xE08]
	0x03CFAE14 LDR X0, [X21]
	0x03CFAE18 LDR W8, [X0 + 0xE0]
	0x03CFAE1C CBNZ W8, 0x3CFAE24
	0x03CFAE20 BL 0x1C16DFC
	0x03CFAE24 CBZ X20, 0x3CFAF64
	0x03CFAE28 LDR X8, [X21]
	0x03CFAE2C LDR X1, [X20 + 0x90]
	0x03CFAE30 MOV X2, X31
	0x03CFAE34 LDR X8, [X8 + 0xB8]
	0x03CFAE38 LDR X0, [X8 + 0x40]
	0x03CFAE3C BL 0x321BA08
	0x03CFAE40 TBZ X0, 0x0, 0x3CFAE4C
	0x03CFAE44 B 0x3CFAF2C
	0x03CFAE48 CBZ X20, 0x3CFAF64
	0x03CFAE4C LDR X0, [X20 + 0x90]
	0x03CFAE50 ADD X1, X31, 0xC
	0x03CFAE54 MOV X2, X31
	0x03CFAE58 BL 0x337BDF4
	0x03CFAE5C TBZ X0, 0x0, 0x3CFAEDC
	0x03CFAE60 LDR W8, [X31 + 0xC]
	0x03CFAE64 TBNZ X8, 0x1F, 0x3CFAEDC
	0x03CFAE68 MOV X0, X19
	0x03CFAE6C BL 0x3CFAD24
	0x03CFAE70 CBZ X0, 0x3CFAF64
	0x03CFAE74 LDR X8, [X0]
	0x03CFAE78 LDP X9, X1, [X8 + 0x1C8]
	0x03CFAE7C BLR X9
	0x03CFAE80 MOV W20, W0
	0x03CFAE84 CBNZ W0, 0x3CFAEAC
	0x03CFAE88 LDR W21, [X31 + 0xC]
	0x03CFAE8C MOV X0, X19
	0x03CFAE90 BL 0x3CFAD24
	0x03CFAE94 CBZ X0, 0x3CFAF64
	0x03CFAE98 LDR X8, [X0]
	0x03CFAE9C LDP X9, X1, [X8 + 0x1D8]
	0x03CFAEA0 BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6EE000
	007 Move W8, [X20+1998]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x469000
	014 Move X0, [X0+3496]
	015 Call 0x1C17CF4
	016 Move X0, 0x469000
	017 Move X0, [X0+3504]
	018 Call 0x1C17CF4
	019 Move X0, 0x469000
	020 Move X0, [X0+3200]
	021 Call 0x1C17CF4
	022 Move X0, 0x3FA000
	023 Move X0, [X0+2440]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+1998], W8
	027 Move X21, 0x469000
	028 Move X22, 0x469000
	029 Move W8, [X19+1032]
	030 Move X21, [X21+3200]
	031 Move X22, [X22+3496]
	032 Compare W8, 0
	033 JumpIfEqual {82}
	034 Move X1, [X21]
	035 Move X0, X19
	036 Call 0x2773DDC, X0
	037 Compare X0, 0
	038 JumpIfEqual {114}
	039 Move X1, X31
	040 Move X20, X0
	041 Call VisualElement.get_pseudoStates, X0
	042 And W1, W0, 0xFFFFFFF7
	043 Move X0, X20
	044 Move X2, X31
	045 Call VisualElement.set_pseudoStates, X0, X1
	046 Move X0, X19
	047 Move X1, X31
	048 Call VisualElement.get_pseudoStates, X0
	049 And W1, W0, 0xFFFFFFF7
	050 Move X0, X19
	051 Move X2, X31
	052 Call VisualElement.set_pseudoStates, X0, X1
	053 Move X0, [X19+1096]
	054 Compare X0, 0
	055 JumpIfEqual {114}
	056 Move X1, X31
	057 Call VisualElement.RemoveFromHierarchy, X0
	058 Move X1, [X21]
	059 Move X0, X19
	060 Call 0x2773DDC, X0
	061 Move X1, [X22]
	062 Move X20, X0
	063 Move X0, X19
	064 Call 0x27744C0, X0
	065 Compare X20, 0
	066 JumpIfEqual {114}
	067 Move X21, 0x3FA000
	068 Move X21, [X21+2440]
	069 Move X1, X0
	070 Move X0, X20
	071 Move X2, X31
	072 Call VisualElement.Add, X0, X1
	073 Move X0, [X19+1088]
	074 Compare X0, 0
	075 JumpIfEqual {80}
	076 Move X8, [X0]
	077 Move X9, [X8+2840]
	078 Move X1, [X8+2848]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move [X19+1112], X0
	081 Move X1, [X21]
	082 Move X1, [X22]
	083 Move X0, X19
	084 Call 0x27744C0, X0
	085 Compare X0, 0
	086 JumpIfEqual {114}
	087 Move X1, X31
	088 Call VisualElement.RemoveFromHierarchy, X0
	089 Move X1, [X21]
	090 Move X0, X19
	091 Call 0x2773DDC, X0
	092 Compare X0, 0
	093 JumpIfEqual {114}
	094 Move X1, [X19+1096]
	095 Move X2, X31
	096 Call VisualElement.Add, X0, X1
	097 Move X1, [X19+1112]
	098 Compare X1, 0
	099 JumpIfEqual {108}
	100 Move X0, X19
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Call BaseBoolField.set_text, X0, X1
	107 Return 
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X30, [X31+48]
	113 Return 
	114 Call 0x1C17F20

Method: System.Void RegisterEditingCallbacks()

Disassembly:
	0x03CFAEA4 CMP W21, W0
	0x03CFAEA8 B.EQ 0x3CFAF2C
	0x03CFAEAC LDR W8, [X31 + 0xC]
	0x03CFAEB0 CMP W8, W20
	0x03CFAEB4 B.LE 0x3CFAEFC
	0x03CFAEB8 MOV X0, X19
	0x03CFAEBC BL 0x3CFAD24
	0x03CFAEC0 CBZ X0, 0x3CFAF64
	0x03CFAEC4 LDR X8, [X0]
	0x03CFAEC8 LDR W9, [X31 + 0xC]
	0x03CFAECC LDR X10, [X8 + 0x2A8]
	0x03CFAED0 LDR X2, [X8 + 0x2B0]
	0x03CFAED4 SUB W1, W9, W20
	0x03CFAED8 B 0x3CFAF20
	0x03CFAEDC LDR X0, [X19 + 0x4E0]
	0x03CFAEE0 CBZ X0, 0x3CFAF64
	0x03CFAEE4 LDR X8, [X0]
	0x03CFAEE8 LDR X1, [X20 + 0x88]
	0x03CFAEEC LDR X9, [X8 + 0x888]
	0x03CFAEF0 LDR X2, [X8 + 0x890]
	0x03CFAEF4 BLR X9
	0x03CFAEF8 B 0x3CFAF2C
	0x03CFAEFC B.GE 0x3CFAF3C
	0x03CFAF00 MOV X0, X19
	0x03CFAF04 BL 0x3CFAD24
	0x03CFAF08 CBZ X0, 0x3CFAF64
	0x03CFAF0C LDR X8, [X0]
	0x03CFAF10 LDR W9, [X31 + 0xC]
	0x03CFAF14 LDR X10, [X8 + 0x2E8]
	0x03CFAF18 LDR X2, [X8 + 0x2F0]
	0x03CFAF1C SUB W1, W20, W9
	0x03CFAF20 BLR X10
	0x03CFAF24 MOV X0, X19
	0x03CFAF28 BL 0x3CFA654
	0x03CFAF2C LDP X20, X19, [X31 + 0x20]
	0x03CFAF30 LDP X30, X21, [X31 + 0x10]
	0x03CFAF34 ADD X31, X31, 0x30
	0x03CFAF38 RET
	0x03CFAF3C CBNZ W8, 0x3CFAF24
	0x03CFAF40 MOV X0, X19
	0x03CFAF44 BL 0x3CFAD24
	0x03CFAF48 CBZ X0, 0x3CFAF64
	0x03CFAF4C LDR X8, [X0]
	0x03CFAF50 LDR X9, [X8 + 0x2F8]
	0x03CFAF54 LDR X1, [X8 + 0x300]
	0x03CFAF58 BLR X9
	0x03CFAF5C STRB W31, [X19 + 0x4E8]
	0x03CFAF60 B 0x3CFAF24
	0x03CFAF64 BL 0x1C16F20
	0x03CFAF68 STP X30, X21, [X31 - 0x20]!
	0x03CFAF6C STP X20, X19, [X31 + 0x10]
	0x03CFAF70 ADRP X20, 0x6ED000
	0x03CFAF74 LDRB W8, [X20 + 0x7D7]
	0x03CFAF78 MOV X19, X0
	0x03CFAF7C TBNZ X8, 0x0, 0x3CFAFD0
	0x03CFAF80 ADRP X0, 0x3FA000
	0x03CFAF84 LDR X0, [X0 + 0xE70]
	0x03CFAF88 BL 0x1C16CF4
	0x03CFAF8C ADRP X0, 0x468000
	0x03CFAF90 LDR X0, [X0 + 0xE10]
	0x03CFAF94 BL 0x1C16CF4
	0x03CFAF98 ADRP X0, 0x468000
	0x03CFAF9C LDR X0, [X0 + 0xE18]
	0x03CFAFA0 BL 0x1C16CF4
	0x03CFAFA4 ADRP X0, 0x400000
	0x03CFAFA8 LDR X0, [X0 + 0x2F0]
	0x03CFAFAC BL 0x1C16CF4
	0x03CFAFB0 ADRP X0, 0x424000
	0x03CFAFB4 LDR X0, [X0 + 0xAB8]
	0x03CFAFB8 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x6EE000
	011 Move X26, 0x424000
	012 Move X20, 0x469000
	013 Move X24, 0x424000
	014 Move X23, 0x424000
	015 Move X22, 0x469000
	016 Move X21, 0x424000
	017 Move X26, [X26+1928]
	018 Move W8, [X25+1999]
	019 Move X20, [X20+3512]
	020 Move X24, [X24+1912]
	021 Move X23, [X23+3504]
	022 Move X22, [X22+3520]
	023 Move X21, [X21+3496]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x469000
	030 Move X0, [X0+3520]
	031 Call 0x1C17CF4
	032 Move X0, 0x469000
	033 Move X0, [X0+3512]
	034 Call 0x1C17CF4
	035 Move X0, 0x424000
	036 Move X0, [X0+3496]
	037 Call 0x1C17CF4
	038 Move X0, 0x424000
	039 Move X0, [X0+1912]
	040 Call 0x1C17CF4
	041 Move X0, 0x424000
	042 Move X0, [X0+3504]
	043 Call 0x1C17CF4
	044 Move X0, 0x424000
	045 Move X0, [X0+1928]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+1999], W8
	049 Move X0, [X26]
	050 Call 0x1C17F10
	051 Move X2, [X20]
	052 Move X1, X19
	053 Move X3, X31
	054 Move X20, X0
	055 Call 0x2D0F824, X0, X1, X2
	056 Move X3, [X24]
	057 Move X0, X19
	058 Move X1, X20
	059 Move W2, W31
	060 Call 0x21A2534, X0, X1, X2
	061 Move X0, [X23]
	062 Call 0x1C17F10
	063 Move X2, [X22]
	064 Move X1, X19
	065 Move X3, X31
	066 Move X20, X0
	067 Call 0x2D0F824, X0, X1, X2
	068 Move X3, [X21]
	069 Move X0, X19
	070 Move X1, X20
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move W2, W31
	080 Move X30, [X31+80]
	081 Call 0x21A2534, X0, X1, X2
	082 Return 

Method: System.Void UnregisterEditingCallbacks()

Disassembly:
	0x03CFAFBC ADRP X0, 0x421000
	0x03CFAFC0 LDR X0, [X0 + 0x680]
	0x03CFAFC4 BL 0x1C16CF4
	0x03CFAFC8 MOVZ W8, 0x1
	0x03CFAFCC STRB W8, [X20 + 0x7D7]
	0x03CFAFD0 MOVZ W1, 0x1
	0x03CFAFD4 MOV X0, X19
	0x03CFAFD8 BL 0x3CFACF8
	0x03CFAFDC LDR X8, [X19 + 0x3C8]
	0x03CFAFE0 CBZ X8, 0x3CFB070
	0x03CFAFE4 ADRP X20, 0x3FA000
	0x03CFAFE8 ADRP X21, 0x468000
	0x03CFAFEC LDR X20, [X20 + 0xE70]
	0x03CFAFF0 LDR X21, [X21 + 0xE18]
	0x03CFAFF4 MOV X0, X19
	0x03CFAFF8 MOV X1, X31
	0x03CFAFFC BL 0x3DF7724
	0x03CFB000 LDR X8, [X20]
	0x03CFB004 MOV X20, X0
	0x03CFB008 MOV X0, X8
	0x03CFB00C BL 0x1C16F10
	0x03CFB010 LDR X2, [X21]
	0x03CFB014 MOV X1, X19
	0x03CFB018 MOV X3, X31
	0x03CFB01C MOV X21, X0
	0x03CFB020 BL 0x3314368
	0x03CFB024 CBZ X20, 0x3CFB1E4
	0x03CFB028 ADRP X10, 0x420000
	0x03CFB02C LDR X8, [X20]
	0x03CFB030 LDR X10, [X10 + 0x680]
	0x03CFB034 LDRH W9, [X8 + 0x12E]
	0x03CFB038 LDR X1, [X10]
	0x03CFB03C CBZ X9, 0x3CFB060
	0x03CFB040 LDR X10, [X8 + 0xB0]
	0x03CFB044 ADD X10, X10, 0x8
	0x03CFB048 LDUR X11, [X10 - 0x8]
	0x03CFB04C CMP X11, X1
	0x03CFB050 B.EQ 0x3CFB0CC
	0x03CFB054 SUBS X9, X9, 0x1
	0x03CFB058 ADD X10, X10, 0x10
	0x03CFB05C B.NE 0x3CFB048
	0x03CFB060 MOVZ W2, 0x1
	0x03CFB064 MOV X0, X20
	0x03CFB068 BL 0x1C5C788
	0x03CFB06C B 0x3CFB0DC
	0x03CFB070 MOV X0, X19
	0x03CFB074 MOV X1, X31
	0x03CFB078 BL 0x3CFE9FC
	0x03CFB07C CBZ X0, 0x3CFB1E4
	0x03CFB080 ADRP X10, 0x3FF000
	0x03CFB084 LDR X8, [X0]
	0x03CFB088 LDR X10, [X10 + 0x2F0]
	0x03CFB08C MOV X20, X0
	0x03CFB090 LDRH W9, [X8 + 0x12E]
	0x03CFB094 LDR X1, [X10]
	0x03CFB098 CBZ X9, 0x3CFB0BC
	0x03CFB09C LDR X10, [X8 + 0xB0]
	0x03CFB0A0 ADD X10, X10, 0x8
	0x03CFB0A4 LDUR X11, [X10 - 0x8]
	0x03CFB0A8 CMP X11, X1
	0x03CFB0AC B.EQ 0x3CFB160
	0x03CFB0B0 SUBS X9, X9, 0x1
	0x03CFB0B4 ADD X10, X10, 0x10
	0x03CFB0B8 B.NE 0x3CFB0A4
	0x03CFB0BC MOVZ W2, 0x1
	0x03CFB0C0 MOV X0, X20
	0x03CFB0C4 BL 0x1C5C788
	0x03CFB0C8 B 0x3CFB170
	0x03CFB0CC LDR W9, [X10]
	0x03CFB0D0 ADD W9, W9, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x6EE000
	011 Move X26, 0x424000
	012 Move X20, 0x469000
	013 Move X24, 0x424000
	014 Move X23, 0x424000
	015 Move X22, 0x469000
	016 Move X21, 0x424000
	017 Move X26, [X26+1928]
	018 Move W8, [X25+2000]
	019 Move X20, [X20+3512]
	020 Move X24, [X24+1944]
	021 Move X23, [X23+3504]
	022 Move X22, [X22+3520]
	023 Move X21, [X21+3520]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x468000
	030 Move X0, [X0+3520]
	031 Call 0x1C17CF4
	032 Move X0, 0x468000
	033 Move X0, [X0+3512]
	034 Call 0x1C17CF4
	035 Move X0, 0x423000
	036 Move X0, [X0+3520]
	037 Call 0x1C17CF4
	038 Move X0, 0x423000
	039 Move X0, [X0+1944]
	040 Call 0x1C17CF4
	041 Move X0, 0x423000
	042 Move X0, [X0+3504]
	043 Call 0x1C17CF4
	044 Move X0, 0x423000
	045 Move X0, [X0+1928]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X25+2000], W8
	049 Move X0, [X26]
	050 Call 0x1C17F10
	051 Move X2, [X20]
	052 Move X1, X19
	053 Move X3, X31
	054 Move X20, X0
	055 Call 0x2D0F824, X0, X1, X2
	056 Move X3, [X24]
	057 Move X0, X19
	058 Move X1, X20
	059 Move W2, W31
	060 Call 0x21A28B4, X0, X1, X2
	061 Move X0, [X23]
	062 Call 0x1C17F10
	063 Move X2, [X22]
	064 Move X1, X19
	065 Move X3, X31
	066 Move X20, X0
	067 Call 0x2D0F824, X0, X1, X2
	068 Move X3, [X21]
	069 Move X0, X19
	070 Move X1, X20
	071 Move X20, [X31+64]
	072 Move X19, [X31+72]
	073 Move X22, [X31+48]
	074 Move X21, [X31+56]
	075 Move X24, [X31+32]
	076 Move X23, [X31+40]
	077 Move X26, [X31+16]
	078 Move X25, [X31+24]
	079 Move W2, W31
	080 Move X30, [X31+80]
	081 Call 0x21A28B4, X0, X1, X2
	082 Return 

