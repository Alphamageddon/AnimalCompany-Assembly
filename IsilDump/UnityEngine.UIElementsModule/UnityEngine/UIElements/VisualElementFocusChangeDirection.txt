Type: UnityEngine.UIElements.VisualElementFocusChangeDirection

Method: UnityEngine.UIElements.FocusChangeDirection get_left()

Disassembly:
	0x03D18638 MOV X1, X31
	0x03D1863C BL 0x3DAED8C
	0x03D18640 TBNZ X0, 0x0, 0x3D186B4
	0x03D18644 LDR X0, [X19 + 0x20]
	0x03D18648 CBZ X0, 0x3D18700
	0x03D1864C LDR W10, [X0 + 0x1C]
	0x03D18650 LDR X8, [X0 + 0x10]
	0x03D18654 LDR X9, [X24]
	0x03D18658 ADD W10, W10, 0x1
	0x03D1865C STR W10, [X0 + 0x1C]
	0x03D18660 CBZ X8, 0x3D186FC
	0x03D18664 LDRSW X10, [X0 + 0x18]
	0x03D18668 LDR W11, [X8 + 0x18]
	0x03D1866C CMP W10, W11
	0x03D18670 B.CS 0x3D186A0
	0x03D18674 ADD W9, W10, 0x1
	0x03D18678 ADD X8, X8, X10, 0x3, LSL
	0x03D1867C STR W9, [X0 + 0x18]
	0x03D18680 STR X20, [X8 + 0x20]
	0x03D18684 B 0x3D186B4
	0x03D18688 LDRB W8, [X20 + 0x20]
	0x03D1868C CBZ W8, 0x3D186C0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6D0000
	005 Move X19, 0x44C000
	006 Move W8, [X20+2311]
	007 Move X19, [X19+4080]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x44C000
	013 Move X0, [X0+4080]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2311], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.UIElements.FocusChangeDirection get_right()

Disassembly:
	0x03D18690 LDR X1, [X20 + 0x28]
	0x03D18694 MOV X0, X19
	0x03D18698 BL 0x3D184D0
	0x03D1869C B 0x3D186C0
	0x03D186A0 LDR X8, [X9 + 0x20]
	0x03D186A4 LDR X8, [X8 + 0xC0]
	0x03D186A8 LDR X2, [X8 + 0x70]
	0x03D186AC MOV X1, X20
	0x03D186B0 BL 0x301BF90
	0x03D186B4 LDR X1, [X20 + 0x28]
	0x03D186B8 MOV X0, X19
	0x03D186BC BL 0x3D184D0
	0x03D186C0 STR X31, [X20 + 0x28]
	0x03D186C4 B 0x3D185F4
	0x03D186C8 LDR X1, [X22]
	0x03D186CC ADD X0, X31, 0x20
	0x03D186D0 BL 0x2BC434C
	0x03D186D4 LDP X20, X19, [X31 + 0x80]
	0x03D186D8 LDP X22, X21, [X31 + 0x70]
	0x03D186DC LDP X24, X23, [X31 + 0x60]
	0x03D186E0 LDP X26, X25, [X31 + 0x50]
	0x03D186E4 LDR X30, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6D0000
	005 Move X19, 0x44C000
	006 Move W8, [X20+2312]
	007 Move X19, [X19+4080]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x44C000
	013 Move X0, [X0+4080]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2312], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void .ctor(System.Int32 value)

Disassembly:
	0x03D186E8 ADD X31, X31, 0x90
	0x03D186EC RET
	0x03D186F0 BL 0x1C16F20
	0x03D186F4 BL 0x1C16F20
	0x03D186F8 BL 0x1C16F20
	0x03D186FC BL 0x1C16F20
	0x03D18700 BL 0x1C16F20
	0x03D18704 B 0x3D18728
	0x03D18708 B 0x3D18728
	0x03D1870C B 0x3D18728
	0x03D18710 B 0x3D18728
	0x03D18714 B 0x3D18728
	0x03D18718 B 0x3D18728
	0x03D1871C B 0x3D18728
	0x03D18720 B 0x3D18728
	0x03D18724 B 0x3D18728
	0x03D18728 MOV X19, X0
	0x03D1872C CMP W1, 0x1
	0x03D18730 B.NE 0x3D1875C
	0x03D18734 MOV X0, X19
	0x03D18738 BL 0x3EB1AD0
	0x03D1873C LDR X20, [X0]
	0x03D18740 BL 0x3EB1AE0
	0x03D18744 LDR X1, [X22]
	0x03D18748 ADD X0, X31, 0x20
	0x03D1874C BL 0x2BC434C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6D0000
	007 Move X22, 0x407000
	008 Move W8, [X21+2313]
	009 Move X22, [X22+3504]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x407000
	017 Move X0, [X0+3504]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2313], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call FocusChangeDirection..ctor, X0, X1
	035 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D18750 CBZ X20, 0x3D186D4
	0x03D18754 MOV X0, X20
	0x03D18758 BL 0x1C16F18
	0x03D1875C MOV X20, X31
	0x03D18760 B 0x3D18768
	0x03D18764 MOV X19, X0
	0x03D18768 LDR X1, [X22]
	0x03D1876C ADD X0, X31, 0x20
	0x03D18770 BL 0x2BC434C
	0x03D18774 CBNZ X20, 0x3D18780
	0x03D18778 MOV X0, X19
	0x03D1877C BL 0x1D2C690
	0x03D18780 MOV X0, X20
	0x03D18784 BL 0x1C16F18
	0x03D18788 BL 0x1990590
	0x03D1878C MOV X1, X31
	0x03D18790 B 0x33BDD8C
	0x03D18794 STR X30, [X31 - 0x30]!
	0x03D18798 STP X22, X21, [X31 + 0x10]
	0x03D1879C STP X20, X19, [X31 + 0x20]
	0x03D187A0 ADRP X21, 0x6CF000
	0x03D187A4 LDRB W8, [X21 + 0x917]
	0x03D187A8 MOV X19, X1
	0x03D187AC MOV X20, X0
	0x03D187B0 TBNZ X8, 0x0, 0x3D187D4
	0x03D187B4 ADRP X0, 0x44C000
	0x03D187B8 LDR X0, [X0 + 0x98]
	0x03D187BC BL 0x1C16CF4
	0x03D187C0 ADRP X0, 0x44C000
	0x03D187C4 LDR X0, [X0 + 0xA0]
	0x03D187C8 BL 0x1C16CF4
	0x03D187CC MOVZ W8, 0x1
	0x03D187D0 STRB W8, [X21 + 0x917]
	0x03D187D4 CBZ X19, 0x3D18824
	0x03D187D8 LDR X0, [X20 + 0x20]
	0x03D187DC CBZ X0, 0x3D18820
	0x03D187E0 ADRP X22, 0x44C000
	0x03D187E4 LDR X22, [X22 + 0xA0]
	0x03D187E8 MOV W21, W31
	0x03D187EC LDR W8, [X0 + 0x18]
	0x03D187F0 CMP W21, W8
	0x03D187F4 B.GE 0x3D18824
	0x03D187F8 LDR X2, [X22]
	0x03D187FC MOV W1, W21
	0x03D18800 BL 0x301BCCC
	0x03D18804 CBZ X0, 0x3D18820
	0x03D18808 LDR X8, [X0 + 0x18]
	0x03D1880C CMP X19, X8
	0x03D18810 B.EQ 0x3D18828
	0x03D18814 LDR X0, [X20 + 0x20]
	0x03D18818 ADD W21, W21, 0x1
	0x03D1881C CBNZ X0, 0x3D187EC
	0x03D18820 BL 0x1C16F20
	0x03D18824 MOVN W21, 0x0
	0x03D18828 MOV W0, W21
	0x03D1882C LDP X20, X19, [X31 + 0x20]
	0x03D18830 LDP X22, X21, [X31 + 0x10]
	0x03D18834 LDR X30, [X31], #0x30
	0x03D18838 RET
	0x03D1883C SUB X31, X31, 0x40
	0x03D18840 STP X30, X23, [X31 + 0x10]
	0x03D18844 STP X22, X21, [X31 + 0x20]
	0x03D18848 STP X20, X19, [X31 + 0x30]
	0x03D1884C ADRP X22, 0x6CF000
	0x03D18850 LDRB W8, [X22 + 0x918]
	0x03D18854 MOV X19, X2
	0x03D18858 MOV X20, X1
	0x03D1885C MOV X21, X0
	0x03D18860 TBNZ X8, 0x0, 0x3D188E4
	0x03D18864 ADRP X0, 0x403000
	0x03D18868 LDR X0, [X0 + 0x938]
	0x03D1886C BL 0x1C16CF4
	0x03D18870 ADRP X0, 0x44C000
	0x03D18874 LDR X0, [X0 + 0xA8]
	0x03D18878 BL 0x1C16CF4
	0x03D1887C ADRP X0, 0x403000
	0x03D18880 LDR X0, [X0 + 0x950]
	0x03D18884 BL 0x1C16CF4
	0x03D18888 ADRP X0, 0x44C000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x6D0000
	008 Move X21, 0x407000
	009 Move W8, [X19+2314]
	010 Move X21, [X21+3504]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x407000
	016 Move X0, [X0+3504]
	017 Call 0x1C17CF4
	018 Move X0, 0x44C000
	019 Move X0, [X0+4080]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2314], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X23, 0x6D0000
	029 Move W8, [X23+2735]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x407000
	033 Move X0, [X0+3504]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2735], W8
	037 Move X0, [X21]
	038 Move X22, 0x44C000
	039 Move W8, [X0+224]
	040 Move X22, [X22+4080]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X21]
	045 Move X8, [X0+184]
	046 Move X1, X31
	047 Move X0, [X8+16]
	048 Call FocusChangeDirection.op_Implicit, X0
	049 Move X8, [X22]
	050 Move W19, W0
	051 Move X0, X8
	052 Call 0x1C17F10
	053 Add W1, W19, 1
	054 Move X20, X0
	055 Call VisualElementFocusChangeDirection..ctor, X0, X1
	056 Move X8, [X22]
	057 Move X8, [X8+184]
	058 Move [X8], X20
	059 Move W8, [X23+2735]
	060 Compare W8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, 0x407000
	063 Move X0, [X0+3504]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X23+2735], W8
	067 Move X0, [X21]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X21]
	073 Move X8, [X0+184]
	074 Move X1, X31
	075 Move X0, [X8+16]
	076 Call FocusChangeDirection.op_Implicit, X0
	077 Move X8, [X22]
	078 Move W19, W0
	079 Move X0, X8
	080 Call 0x1C17F10
	081 Add W1, W19, 2
	082 Move X20, X0
	083 Call VisualElementFocusChangeDirection..ctor, X0, X1
	084 Move X8, [X22]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X8, [X8+184]
	088 Move [X8+8], X20
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X30, [X31+48]
	092 Move X23, [X31+56]
	093 Return 

