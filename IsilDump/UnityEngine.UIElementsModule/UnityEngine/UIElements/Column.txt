Type: UnityEngine.UIElements.Column

Method: System.String get_name()

Disassembly:
	0x03D705AC MOV X8, X0
	0x03D705B0 CBZ X0, 0x3D705C4

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_name(System.String value)

Disassembly:
	0x03D705B4 LDR X1, [X22]
	0x03D705B8 LDR X9, [X8]
	0x03D705BC CMP X9, X1
	0x03D705C0 B.NE 0x3D705F0
	0x03D705C4 MOV X0, X20
	0x03D705C8 MOV X1, X8
	0x03D705CC MOV X2, X21
	0x03D705D0 BL 0x1C24138
	0x03D705D4 CMP X21, X0
	0x03D705D8 MOV X21, X0
	0x03D705DC B.NE 0x3D7059C
	0x03D705E0 LDP X20, X19, [X31 + 0x20]
	0x03D705E4 LDP X22, X21, [X31 + 0x10]
	0x03D705E8 LDR X30, [X31], #0x30
	0x03D705EC RET
	0x03D705F0 MOV X0, X8
	0x03D705F4 BL 0x1C171E0
	0x03D705F8 STP X30, X27, [X31 - 0x50]!
	0x03D705FC STP X26, X25, [X31 + 0x10]
	0x03D70600 STP X24, X23, [X31 + 0x20]
	0x03D70604 STP X22, X21, [X31 + 0x30]
	0x03D70608 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+16]
	006 Move X2, X31
	007 Move X20, X1
	008 Call String.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {26}
	013 Move X8, [X19+176]
	014 Move [X19+16], X20
	015 Compare X8, 0
	016 JumpIfEqual {26}
	017 Move X4, [X8+24]
	018 Move X0, [X8+64]
	019 Move X3, [X8+40]
	020 Move X1, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W2, W31
	024 Move X30, [X31+32]
	025 CallNoReturn X4
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.String get_title()

Disassembly:
	0x03D70634 LDR X0, [X0 + 0x650]
	0x03D70638 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_title(System.String value)

Disassembly:
	0x03D7063C ADRP X0, 0x3F6000
	0x03D70640 LDR X0, [X0 + 0x660]
	0x03D70644 BL 0x1C16CF4
	0x03D70648 ADRP X0, 0x3F6000
	0x03D7064C LDR X0, [X0 + 0x668]
	0x03D70650 BL 0x1C16CF4
	0x03D70654 ADRP X0, 0x3F6000
	0x03D70658 LDR X0, [X0 + 0xD80]
	0x03D7065C BL 0x1C16CF4
	0x03D70660 ADRP X0, 0x3F6000
	0x03D70664 LDR X0, [X0 + 0xD88]
	0x03D70668 BL 0x1C16CF4
	0x03D7066C ADRP X0, 0x3F6000
	0x03D70670 LDR X0, [X0 + 0xD90]
	0x03D70674 BL 0x1C16CF4
	0x03D70678 ADRP X0, 0x3F6000
	0x03D7067C LDR X0, [X0 + 0xD78]
	0x03D70680 BL 0x1C16CF4
	0x03D70684 ADRP X0, 0x3F6000
	0x03D70688 LDR X0, [X0 + 0xD68]
	0x03D7068C BL 0x1C16CF4
	0x03D70690 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+24]
	006 Move X2, X31
	007 Move X20, X1
	008 Call String.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {26}
	013 Move X8, [X19+176]
	014 Move [X19+24], X20
	015 Compare X8, 0
	016 JumpIfEqual {26}
	017 Move X4, [X8+24]
	018 Move X0, [X8+64]
	019 Move X3, [X8+40]
	020 Move X1, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W2, 1
	024 Move X30, [X31+32]
	025 CallNoReturn X4
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: UnityEngine.UIElements.Background get_icon()

Disassembly:
	0x03D70694 STRB W8, [X21 + 0xD27]
	0x03D70698 LDR X0, [X23]
	0x03D7069C BL 0x1C16F10

ISIL:
	001 Move V1, [X0+32]
	002 Move V0, [X0+48]
	003 Move [X8], V1
	004 Move [X8+8], V0
	005 Return X0

Method: System.Int32 get_index()

Disassembly:
	0x03D706A0 LDR X1, [X22]
	0x03D706A4 MOV X21, X0
	0x03D706A8 BL 0x301B7C4
	0x03D706AC STR X21, [X20 + 0x10]
	0x03D706B0 LDR X0, [X23]
	0x03D706B4 BL 0x1C16F10

ISIL:
	001 Move X1, X0
	002 Move X0, [X0+168]
	003 Compare X0, 0
	004 JumpIfEqual {5}
	005 Move TEMP, 0
	006 Not TEMP
	007 Move W0, TEMP
	008 Return X0

Method: System.Int32 get_displayIndex()

Disassembly:
	0x03D70764 MOV X1, X31
	0x03D70768 STR X21, [X20 + 0x78]
	0x03D7076C BL 0x33BDD8C
	0x03D70770 STR X19, [X20 + 0x30]
	0x03D70774 CBZ X19, 0x3D70874
	0x03D70778 ADRP X27, 0x3F6000
	0x03D7077C ADRP X26, 0x3F6000
	0x03D70780 ADRP X25, 0x3F6000
	0x03D70784 ADRP X24, 0x3F6000
	0x03D70788 ADRP X23, 0x3F6000
	0x03D7078C ADRP X22, 0x3F6000
	0x03D70790 LDR X27, [X27 + 0x660]
	0x03D70794 LDR X26, [X26 + 0xD80]
	0x03D70798 LDR X25, [X25 + 0x650]
	0x03D7079C LDR X24, [X24 + 0xD88]
	0x03D707A0 LDR X23, [X23 + 0x668]
	0x03D707A4 LDR X22, [X22 + 0xD90]
	0x03D707A8 MOV X0, X19
	0x03D707AC BL 0x3D70A04
	0x03D707B0 CMP W0, 0x1
	0x03D707B4 B.LT 0x3D707E8
	0x03D707B8 MOV W21, W31
	0x03D707BC MOV X0, X19
	0x03D707C0 MOV W1, W21
	0x03D707C4 BL 0x3D70878
	0x03D707C8 MOV X1, X0
	0x03D707CC MOV X0, X20
	0x03D707D0 BL 0x3D70920
	0x03D707D4 MOV X0, X19
	0x03D707D8 ADD W21, W21, 0x1
	0x03D707DC BL 0x3D70A04
	0x03D707E0 CMP W21, W0
	0x03D707E4 B.LT 0x3D707BC
	0x03D707E8 LDR X0, [X27]
	0x03D707EC BL 0x1C16F10
	0x03D707F0 LDR X2, [X26]
	0x03D707F4 MOV X1, X20
	0x03D707F8 MOV X3, X31
	0x03D707FC MOV X21, X0
	0x03D70800 BL 0x2A7689C
	0x03D70804 MOV X0, X19
	0x03D70808 MOV X1, X21
	0x03D7080C BL 0x3D70AA4
	0x03D70810 LDR X0, [X25]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x678000
	005 Move W8, [X20+3355]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x3F7000
	012 Move X0, [X0+3424]
	013 Call 0x1C17CF4
	014 Move X0, 0x3F7000
	015 Move X0, [X0+3432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3355], W8
	019 Move X20, [X19+168]
	020 Compare X20, 0
	021 JumpIfEqual {38}
	022 Move X0, X20
	023 Call Columns.InitOrderColumns, X0
	024 Move X0, [X20+24]
	025 Compare X0, 0
	026 JumpIfEqual {38}
	027 Move X8, 0x3F7000
	028 Move X8, [X8+3432]
	029 Move X9, [X0]
	030 Move X8, [X8]
	031 Move W11, [X9+304]
	032 Move W10, [X8+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W0, TEMP
	043 Move X30, [X31+32]
	044 Return X0
	045 Move X8, 0x3F7000
	046 Move X8, [X8+3424]
	047 Move X1, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X2, [X8]
	051 Move X30, [X31+32]
	052 Call List`1<Object>.IndexOf, X0, X1
	053 Return X0

Method: System.Int32 get_visibleIndex()

Disassembly:
	0x03D7082C MOV X0, X19
	0x03D70830 MOV X1, X21
	0x03D70834 BL 0x3D70B54
	0x03D70838 LDR X0, [X23]
	0x03D7083C BL 0x1C16F10
	0x03D70840 LDR X2, [X22]
	0x03D70844 MOV X1, X20
	0x03D70848 MOV X3, X31
	0x03D7084C MOV X21, X0
	0x03D70850 BL 0x2A782C0
	0x03D70854 MOV X0, X19
	0x03D70858 MOV X1, X21
	0x03D7085C LDP X20, X19, [X31 + 0x40]
	0x03D70860 LDP X22, X21, [X31 + 0x30]
	0x03D70864 LDP X24, X23, [X31 + 0x20]
	0x03D70868 LDP X26, X25, [X31 + 0x10]
	0x03D7086C LDP X30, X27, [X31], #0x50
	0x03D70870 B 0x3D70C04
	0x03D70874 BL 0x1C16F20
	0x03D70878 STP X30, X21, [X31 - 0x20]!
	0x03D7087C STP X20, X19, [X31 + 0x10]
	0x03D70880 ADRP X21, 0x677000
	0x03D70884 LDRB W8, [X21 + 0xD55]
	0x03D70888 MOV W19, W1
	0x03D7088C MOV X20, X0
	0x03D70890 TBNZ X8, 0x0, 0x3D708A8
	0x03D70894 ADRP X0, 0x3F6000
	0x03D70898 LDR X0, [X0 + 0xD58]
	0x03D7089C BL 0x1C16CF4
	0x03D708A0 MOVZ W8, 0x1
	0x03D708A4 STRB W8, [X21 + 0xD55]
	0x03D708A8 LDR X20, [X20 + 0x10]
	0x03D708AC CBZ X20, 0x3D7091C
	0x03D708B0 ADRP X10, 0x3F6000
	0x03D708B4 LDR X8, [X20]
	0x03D708B8 LDR X10, [X10 + 0xD58]
	0x03D708BC LDRH W9, [X8 + 0x12E]
	0x03D708C0 LDR X1, [X10]
	0x03D708C4 CBZ X9, 0x3D708E8
	0x03D708C8 LDR X10, [X8 + 0xB0]
	0x03D708CC ADD X10, X10, 0x8
	0x03D708D0 LDUR X11, [X10 - 0x8]
	0x03D708D4 CMP X11, X1
	0x03D708D8 B.EQ 0x3D708F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x678000
	005 Move W8, [X20+3356]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x3F7000
	012 Move X0, [X0+3424]
	013 Call 0x1C17CF4
	014 Move X0, 0x3F7000
	015 Move X0, [X0+3432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3356], W8
	019 Move X20, [X19+168]
	020 Compare X20, 0
	021 JumpIfEqual {38}
	022 Move X0, X20
	023 Call Columns.UpdateVisibleColumns, X0
	024 Move X0, [X20+32]
	025 Compare X0, 0
	026 JumpIfEqual {38}
	027 Move X8, 0x3F7000
	028 Move X8, [X8+3432]
	029 Move X9, [X0]
	030 Move X8, [X8]
	031 Move W11, [X9+304]
	032 Move W10, [X8+304]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X9+200]
	035 Add X9, X9, X10
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W0, TEMP
	043 Move X30, [X31+32]
	044 Return X0
	045 Move X8, 0x3F7000
	046 Move X8, [X8+3424]
	047 Move X1, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X2, [X8]
	051 Move X30, [X31+32]
	052 Call List`1<Object>.IndexOf, X0, X1
	053 Return X0

Method: System.Boolean get_visible()

Disassembly:
	0x03D708F4 B 0x3D70904
	0x03D708F8 LDRSW X9, [X10]

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_visible(System.Boolean value)

Disassembly:
	0x03D708FC ADD X8, X8, X9, 0x4, LSL
	0x03D70900 ADD X0, X8, 0x138
	0x03D70904 LDP X3, X2, [X0]
	0x03D70908 MOV X0, X20
	0x03D7090C MOV W1, W19
	0x03D70910 LDP X20, X19, [X31 + 0x10]
	0x03D70914 LDP X30, X21, [X31], #0x20
	0x03D70918 BR X3
	0x03D7091C BL 0x1C16F20
	0x03D70920 STP X30, X23, [X31 - 0x30]!
	0x03D70924 STP X22, X21, [X31 + 0x10]
	0x03D70928 STP X20, X19, [X31 + 0x20]
	0x03D7092C ADRP X22, 0x677000
	0x03D70930 ADRP X23, 0x3F6000
	0x03D70934 ADRP X21, 0x3F6000

ISIL:
	001 Move W10, [X0+64]
	002 And W9, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X10, [X0+176]
	005 Move X8, X0
	006 Move [X0+64], W9
	007 Compare X10, 0
	008 JumpIfEqual {15}
	009 Move X4, [X10+24]
	010 Move X0, [X10+64]
	011 Move X3, [X10+40]
	012 Move W2, 3
	013 Move X1, X8
	014 CallNoReturn X4
	015 Return 

Method: UnityEngine.UIElements.Length get_width()

Disassembly:
	0x03D70938 LDRB W8, [X22 + 0xD28]
	0x03D7093C LDR X23, [X23 + 0x658]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return X0

Method: System.Void set_width(UnityEngine.UIElements.Length value)

Disassembly:
	0x03D70940 LDR X21, [X21 + 0xD98]
	0x03D70944 MOV X20, X1
	0x03D70948 MOV X19, X0
	0x03D7094C TBNZ X8, 0x0, 0x3D70988
	0x03D70950 ADRP X0, 0x3F6000
	0x03D70954 LDR X0, [X0 + 0x650]
	0x03D70958 BL 0x1C16CF4
	0x03D7095C ADRP X0, 0x3F6000
	0x03D70960 LDR X0, [X0 + 0x658]
	0x03D70964 BL 0x1C16CF4
	0x03D70968 ADRP X0, 0x3F6000
	0x03D7096C LDR X0, [X0 + 0xD98]
	0x03D70970 BL 0x1C16CF4
	0x03D70974 ADRP X0, 0x3F6000
	0x03D70978 LDR X0, [X0 + 0xDA0]
	0x03D7097C BL 0x1C16CF4
	0x03D70980 MOVZ W8, 0x1
	0x03D70984 STRB W8, [X22 + 0xD28]
	0x03D70988 LDR X0, [X23]
	0x03D7098C BL 0x1C16F10
	0x03D70990 LDR X2, [X21]
	0x03D70994 MOV X1, X19
	0x03D70998 MOV X3, X31
	0x03D7099C MOV X21, X0
	0x03D709A0 BL 0x2A769B4
	0x03D709A4 CBZ X20, 0x3D70A00
	0x03D709A8 ADRP X22, 0x3F6000
	0x03D709AC ADRP X23, 0x3F6000
	0x03D709B0 LDR X22, [X22 + 0x650]
	0x03D709B4 LDR X23, [X23 + 0xDA0]
	0x03D709B8 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X2, X31
	007 Move X20, X1
	008 Call Length.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {36}
	013 Move X8, [X19+184]
	014 Move W9, 0x7FC00000
	015 Move [X19+68], X20
	016 Move [X19+92], W9
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move X9, [X8+24]
	020 Move X0, [X8+64]
	021 Move X2, [X8+40]
	022 Move X1, X19
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X8, [X19+176]
	025 Compare X8, 0
	026 JumpIfEqual {36}
	027 Move X4, [X8+24]
	028 Move X0, [X8+64]
	029 Move X3, [X8+40]
	030 Move X1, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move W2, 4
	034 Move X30, [X31+32]
	035 CallNoReturn X4
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return 

Method: UnityEngine.UIElements.Length get_minWidth()

Disassembly:
	0x03D709EC MOV X0, X19
	0x03D709F0 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return X0

Method: System.Void set_minWidth(UnityEngine.UIElements.Length value)

Disassembly:
	0x03D709F4 LDP X22, X21, [X31 + 0x10]
	0x03D709F8 LDP X30, X23, [X31], #0x30
	0x03D709FC B 0x3D70CB4
	0x03D70A00 BL 0x1C16F20
	0x03D70A04 STR X30, [X31 - 0x20]!
	0x03D70A08 STP X20, X19, [X31 + 0x10]
	0x03D70A0C ADRP X20, 0x677000
	0x03D70A10 LDRB W8, [X20 + 0xD51]
	0x03D70A14 MOV X19, X0
	0x03D70A18 TBNZ X8, 0x0, 0x3D70A30
	0x03D70A1C ADRP X0, 0x3F6000
	0x03D70A20 LDR X0, [X0 + 0xDA8]
	0x03D70A24 BL 0x1C16CF4
	0x03D70A28 MOVZ W8, 0x1
	0x03D70A2C STRB W8, [X20 + 0xD51]
	0x03D70A30 LDR X19, [X19 + 0x10]
	0x03D70A34 CBZ X19, 0x3D70AA0
	0x03D70A38 ADRP X10, 0x3F6000
	0x03D70A3C LDR X8, [X19]
	0x03D70A40 LDR X10, [X10 + 0xDA8]
	0x03D70A44 LDRH W9, [X8 + 0x12E]
	0x03D70A48 LDR X1, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X2, X31
	007 Move X20, X1
	008 Call Length.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {26}
	013 Move X8, [X19+176]
	014 Move [X19+76], X20
	015 Compare X8, 0
	016 JumpIfEqual {26}
	017 Move X4, [X8+24]
	018 Move X0, [X8+64]
	019 Move X3, [X8+40]
	020 Move X1, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W2, 6
	024 Move X30, [X31+32]
	025 CallNoReturn X4
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: UnityEngine.UIElements.Length get_maxWidth()

Disassembly:
	0x03D70A4C CBZ X9, 0x3D70A70
	0x03D70A50 LDR X10, [X8 + 0xB0]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return X0

Method: System.Void set_maxWidth(UnityEngine.UIElements.Length value)

Disassembly:
	0x03D70A54 ADD X10, X10, 0x8
	0x03D70A58 LDUR X11, [X10 - 0x8]
	0x03D70A5C CMP X11, X1
	0x03D70A60 B.EQ 0x3D70A80
	0x03D70A64 SUBS X9, X9, 0x1
	0x03D70A68 ADD X10, X10, 0x10
	0x03D70A6C B.NE 0x3D70A58
	0x03D70A70 MOV X0, X19
	0x03D70A74 MOV W2, W31
	0x03D70A78 BL 0x1C5C788
	0x03D70A7C B 0x3D70A8C
	0x03D70A80 LDRSW X9, [X10]
	0x03D70A84 ADD X8, X8, X9, 0x4, LSL
	0x03D70A88 ADD X0, X8, 0x138
	0x03D70A8C LDP X2, X1, [X0]
	0x03D70A90 MOV X0, X19
	0x03D70A94 LDP X20, X19, [X31 + 0x10]
	0x03D70A98 LDR X30, [X31], #0x20
	0x03D70A9C BR X2
	0x03D70AA0 BL 0x1C16F20
	0x03D70AA4 STR X30, [X31 - 0x40]!
	0x03D70AA8 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X2, X31
	007 Move X20, X1
	008 Call Length.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {26}
	013 Move X8, [X19+176]
	014 Move [X19+84], X20
	015 Compare X8, 0
	016 JumpIfEqual {26}
	017 Move X4, [X8+24]
	018 Move X0, [X8+64]
	019 Move X3, [X8+40]
	020 Move X1, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W2, 5
	024 Move X30, [X31+32]
	025 CallNoReturn X4
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Single get_desiredWidth()

Disassembly:
	0x03D70AAC STP X22, X21, [X31 + 0x20]
	0x03D70AB0 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move V0, [X0+92]
	002 Return V0

Method: System.Void set_desiredWidth(System.Single value)

Disassembly:
	0x03D709BC MOV X1, X21
	0x03D709C0 BL 0x3D6FCC4
	0x03D709C4 LDR X0, [X22]
	0x03D709C8 BL 0x1C16F10
	0x03D709CC LDR X2, [X23]
	0x03D709D0 MOV X1, X19
	0x03D709D4 MOV X3, X31
	0x03D709D8 MOV X21, X0
	0x03D709DC BL 0x2A6B948
	0x03D709E0 MOV X0, X20
	0x03D709E4 MOV X1, X21
	0x03D709E8 BL 0x3D6FE24

ISIL:
	001 Move V1, [X0+92]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move X8, [X0+184]
	004 Move X1, X0
	005 Move [X0+92], S0
	006 Compare X8, 0
	007 JumpIfEqual {12}
	008 Move X3, [X8+24]
	009 Move X0, [X8+64]
	010 Move X2, [X8+40]
	011 CallNoReturn X3
	012 Return 

Method: System.Boolean get_sortable()

Disassembly:
	0x03D70AB4 ADRP X21, 0x677000
	0x03D70AB8 LDRB W8, [X21 + 0xD40]

ISIL:
	001 Move W0, [X0+97]
	002 Return X0

Method: System.Void set_sortable(System.Boolean value)

Disassembly:
	0x03D70ABC MOV X19, X1
	0x03D70AC0 MOV X20, X0
	0x03D70AC4 TBNZ X8, 0x0, 0x3D70ADC
	0x03D70AC8 ADRP X0, 0x3F6000
	0x03D70ACC LDR X0, [X0 + 0x660]
	0x03D70AD0 BL 0x1C16CF4
	0x03D70AD4 MOVZ W8, 0x1
	0x03D70AD8 STRB W8, [X21 + 0xD40]
	0x03D70ADC ADRP X24, 0x3F6000
	0x03D70AE0 LDR X21, [X20 + 0x48]!
	0x03D70AE4 LDR X24, [X24 + 0x660]
	0x03D70AE8 MOV X0, X21
	0x03D70AEC MOV X1, X19
	0x03D70AF0 MOV X2, X31
	0x03D70AF4 BL 0x33C0DE4

ISIL:
	001 Move W10, [X0+97]
	002 And W9, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X10, [X0+176]
	005 Move X8, X0
	006 Move [X0+97], W9
	007 Compare X10, 0
	008 JumpIfEqual {15}
	009 Move X4, [X10+24]
	010 Move X0, [X10+64]
	011 Move X3, [X10+40]
	012 Move W2, 8
	013 Move X1, X8
	014 CallNoReturn X4
	015 Return 

Method: System.Boolean get_stretchable()

Disassembly:
	0x03D70AF8 CBZ X0, 0x3D70B18
	0x03D70AFC LDR X23, [X24]

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_stretchable(System.Boolean value)

Disassembly:
	0x03D70B00 MOV X22, X0
	0x03D70B04 MOV X1, X23
	0x03D70B08 BL 0x1C16E00
	0x03D70B0C MOV X1, X0
	0x03D70B10 CBNZ X0, 0x3D70B1C
	0x03D70B14 B 0x3D70B48
	0x03D70B18 MOV X1, X31
	0x03D70B1C MOV X0, X20
	0x03D70B20 MOV X2, X21
	0x03D70B24 BL 0x1C24138
	0x03D70B28 CMP X21, X0
	0x03D70B2C MOV X21, X0
	0x03D70B30 B.NE 0x3D70AE8
	0x03D70B34 LDP X20, X19, [X31 + 0x30]
	0x03D70B38 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move W10, [X0+96]
	002 And W9, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X10, [X0+176]
	005 Move X8, X0
	006 Move [X0+96], W9
	007 Compare X10, 0
	008 JumpIfEqual {15}
	009 Move X4, [X10+24]
	010 Move X0, [X10+64]
	011 Move X3, [X10+40]
	012 Move W2, 7
	013 Move X1, X8
	014 CallNoReturn X4
	015 Return 

Method: System.Boolean get_optional()

Disassembly:
	0x03D70B3C LDP X24, X23, [X31 + 0x10]
	0x03D70B40 LDR X30, [X31], #0x40

ISIL:
	001 Move W0, [X0+98]
	002 Return X0

Method: System.Void set_optional(System.Boolean value)

Disassembly:
	0x03D70B44 RET
	0x03D70B48 MOV X0, X22
	0x03D70B4C MOV X1, X23
	0x03D70B50 BL 0x1C171E0
	0x03D70B54 STR X30, [X31 - 0x40]!
	0x03D70B58 STP X24, X23, [X31 + 0x10]
	0x03D70B5C STP X22, X21, [X31 + 0x20]
	0x03D70B60 STP X20, X19, [X31 + 0x30]
	0x03D70B64 ADRP X21, 0x677000
	0x03D70B68 LDRB W8, [X21 + 0xD42]
	0x03D70B6C MOV X19, X1
	0x03D70B70 MOV X20, X0
	0x03D70B74 TBNZ X8, 0x0, 0x3D70B8C
	0x03D70B78 ADRP X0, 0x3F6000
	0x03D70B7C LDR X0, [X0 + 0x650]

ISIL:
	001 Move W10, [X0+98]
	002 And W9, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X10, [X0+176]
	005 Move X8, X0
	006 Move [X0+98], W9
	007 Compare X10, 0
	008 JumpIfEqual {15}
	009 Move X4, [X10+24]
	010 Move X0, [X10+64]
	011 Move X3, [X10+40]
	012 Move W2, 9
	013 Move X1, X8
	014 CallNoReturn X4
	015 Return 

Method: System.Boolean get_resizable()

Disassembly:
	0x03D70B80 BL 0x1C16CF4
	0x03D70B84 MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+99]
	002 Return X0

Method: System.Void set_resizable(System.Boolean value)

Disassembly:
	0x03D70B88 STRB W8, [X21 + 0xD42]
	0x03D70B8C ADRP X24, 0x3F6000
	0x03D70B90 LDR X21, [X20 + 0x50]!
	0x03D70B94 LDR X24, [X24 + 0x650]
	0x03D70B98 MOV X0, X21
	0x03D70B9C MOV X1, X19
	0x03D70BA0 MOV X2, X31
	0x03D70BA4 BL 0x33C0DE4
	0x03D70BA8 CBZ X0, 0x3D70BC8
	0x03D70BAC LDR X23, [X24]
	0x03D70BB0 MOV X22, X0
	0x03D70BB4 MOV X1, X23
	0x03D70BB8 BL 0x1C16E00
	0x03D70BBC MOV X1, X0
	0x03D70BC0 CBNZ X0, 0x3D70BCC

ISIL:
	001 Move W10, [X0+99]
	002 And W9, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X10, [X0+176]
	005 Move X8, X0
	006 Move [X0+99], W9
	007 Compare X10, 0
	008 JumpIfEqual {15}
	009 Move X4, [X10+24]
	010 Move X0, [X10+64]
	011 Move X3, [X10+40]
	012 Move W2, 10
	013 Move X1, X8
	014 CallNoReturn X4
	015 Return 

Method: System.Func`1<UnityEngine.UIElements.VisualElement> get_makeHeader()

Disassembly:
	0x03D70BC4 B 0x3D70BF8
	0x03D70BC8 MOV X1, X31

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_makeHeader(System.Func`1<UnityEngine.UIElements.VisualElement> value)

Disassembly:
	0x03D70BCC MOV X0, X20
	0x03D70BD0 MOV X2, X21
	0x03D70BD4 BL 0x1C24138
	0x03D70BD8 CMP X21, X0
	0x03D70BDC MOV X21, X0
	0x03D70BE0 B.NE 0x3D70B98
	0x03D70BE4 LDP X20, X19, [X31 + 0x30]
	0x03D70BE8 LDP X22, X21, [X31 + 0x20]
	0x03D70BEC LDP X24, X23, [X31 + 0x10]
	0x03D70BF0 LDR X30, [X31], #0x40
	0x03D70BF4 RET
	0x03D70BF8 MOV X0, X22
	0x03D70BFC MOV X1, X23
	0x03D70C00 BL 0x1C171E0
	0x03D70C04 STR X30, [X31 - 0x40]!
	0x03D70C08 STP X24, X23, [X31 + 0x10]
	0x03D70C0C STP X22, X21, [X31 + 0x20]
	0x03D70C10 STP X20, X19, [X31 + 0x30]
	0x03D70C14 ADRP X21, 0x677000
	0x03D70C18 LDRB W8, [X21 + 0xD48]
	0x03D70C1C MOV X19, X1
	0x03D70C20 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+104]
	006 Move X2, X31
	007 Move X20, X1
	008 Call Delegate.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {26}
	013 Move X8, [X19+176]
	014 Move [X19+104], X20
	015 Compare X8, 0
	016 JumpIfEqual {26}
	017 Move X4, [X8+24]
	018 Move X0, [X8+64]
	019 Move X3, [X8+40]
	020 Move X1, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W2, 11
	024 Move X30, [X31+32]
	025 CallNoReturn X4
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Action`1<UnityEngine.UIElements.VisualElement> get_bindHeader()

Disassembly:
	0x03D70C24 TBNZ X8, 0x0, 0x3D70C3C
	0x03D70C28 ADRP X0, 0x3F6000

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Action`1<UnityEngine.UIElements.VisualElement> get_unbindHeader()

Disassembly:
	0x03D70C2C LDR X0, [X0 + 0x668]
	0x03D70C30 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Action`1<UnityEngine.UIElements.VisualElement> get_destroyHeader()

Disassembly:
	0x03D70C34 MOVZ W8, 0x1
	0x03D70C38 STRB W8, [X21 + 0xD48]

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Func`1<UnityEngine.UIElements.VisualElement> get_makeCell()

Disassembly:
	0x03D70C3C ADRP X24, 0x3F6000
	0x03D70C40 LDR X21, [X20 + 0x68]!

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Void set_makeCell(System.Func`1<UnityEngine.UIElements.VisualElement> value)

Disassembly:
	0x03D70C44 LDR X24, [X24 + 0x668]
	0x03D70C48 MOV X0, X21
	0x03D70C4C MOV X1, X19
	0x03D70C50 MOV X2, X31
	0x03D70C54 BL 0x33C0DE4
	0x03D70C58 CBZ X0, 0x3D70C78
	0x03D70C5C LDR X23, [X24]
	0x03D70C60 MOV X22, X0
	0x03D70C64 MOV X1, X23
	0x03D70C68 BL 0x1C16E00
	0x03D70C6C MOV X1, X0
	0x03D70C70 CBNZ X0, 0x3D70C7C
	0x03D70C74 B 0x3D70CA8
	0x03D70C78 MOV X1, X31
	0x03D70C7C MOV X0, X20
	0x03D70C80 MOV X2, X21
	0x03D70C84 BL 0x1C24138
	0x03D70C88 CMP X21, X0
	0x03D70C8C MOV X21, X0
	0x03D70C90 B.NE 0x3D70C48
	0x03D70C94 LDP X20, X19, [X31 + 0x30]
	0x03D70C98 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+136]
	006 Move X2, X31
	007 Move X20, X1
	008 Call Delegate.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {26}
	013 Move X8, [X19+176]
	014 Move [X19+136], X20
	015 Compare X8, 0
	016 JumpIfEqual {26}
	017 Move X4, [X8+24]
	018 Move X0, [X8+64]
	019 Move X3, [X8+40]
	020 Move X1, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W2, 12
	024 Move X30, [X31+32]
	025 CallNoReturn X4
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Action`2<UnityEngine.UIElements.VisualElement, System.Int32> get_bindCell()

Disassembly:
	0x03D70C9C LDP X24, X23, [X31 + 0x10]
	0x03D70CA0 LDR X30, [X31], #0x40

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Action`2<UnityEngine.UIElements.VisualElement, System.Int32> get_unbindCell()

Disassembly:
	0x03D70CA4 RET
	0x03D70CA8 MOV X0, X22

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Action`1<UnityEngine.UIElements.VisualElement> get_destroyCell()

Disassembly:
	0x03D70CAC MOV X1, X23
	0x03D70CB0 BL 0x1C171E0

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: UnityEngine.UIElements.Columns get_collection()

Disassembly:
	0x03D70CB4 STP X30, X19, [X31 - 0x10]!
	0x03D70CB8 LDRB W8, [X0 + 0x48]

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: System.Void set_collection(UnityEngine.UIElements.Columns value)

Disassembly:
	0x03D70CBC CBZ W8, 0x3D70CC8
	0x03D70CC0 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X0+168], X1
	002 Return 

Method: System.Void add_changed(System.Action`2<UnityEngine.UIElements.Column, UnityEngine.UIElements.ColumnDataType> value)

Disassembly:
	0x03D70CC4 RET
	0x03D70CC8 MOVZ W8, 0x1
	0x03D70CCC MOV X19, X0
	0x03D70CD0 STRB W8, [X0 + 0x48]
	0x03D70CD4 BL 0x3D70CF4
	0x03D70CD8 LDR X8, [X19 + 0x88]
	0x03D70CDC CBZ X8, 0x3D70CC0
	0x03D70CE0 LDR X2, [X8 + 0x18]
	0x03D70CE4 LDR X0, [X8 + 0x40]
	0x03D70CE8 LDR X1, [X8 + 0x28]
	0x03D70CEC LDP X30, X19, [X31], #0x10
	0x03D70CF0 BR X2
	0x03D70CF4 STR X30, [X31 - 0x20]!
	0x03D70CF8 STP X20, X19, [X31 + 0x10]
	0x03D70CFC ADRP X20, 0x677000
	0x03D70D00 LDRB W8, [X20 + 0xD3D]
	0x03D70D04 MOV X19, X0
	0x03D70D08 TBNZ X8, 0x0, 0x3D70D20
	0x03D70D0C ADRP X0, 0x3F6000
	0x03D70D10 LDR X0, [X0 + 0xDB0]
	0x03D70D14 BL 0x1C16CF4
	0x03D70D18 MOVZ W8, 0x1
	0x03D70D1C STRB W8, [X20 + 0xD3D]
	0x03D70D20 LDR X8, [X19 + 0x10]
	0x03D70D24 CBZ X8, 0x3D70DBC
	0x03D70D28 LDP W2, W9, [X8 + 0x18]
	0x03D70D2C ADD W9, W9, 0x1
	0x03D70D30 CMP W2, 0x1
	0x03D70D34 STP W31, W9, [X8 + 0x18]
	0x03D70D38 B.LT 0x3D70D4C
	0x03D70D3C LDR X0, [X8 + 0x10]
	0x03D70D40 MOV W1, W31
	0x03D70D44 MOV X3, X31
	0x03D70D48 BL 0x339FA34
	0x03D70D4C LDR X8, [X19 + 0x20]
	0x03D70D50 CBZ X8, 0x3D70DBC
	0x03D70D54 LDP W2, W9, [X8 + 0x18]
	0x03D70D58 ADD W9, W9, 0x1
	0x03D70D5C CMP W2, 0x1
	0x03D70D60 STP W31, W9, [X8 + 0x18]
	0x03D70D64 B.LT 0x3D70D78
	0x03D70D68 LDR X0, [X8 + 0x10]
	0x03D70D6C MOV W1, W31
	0x03D70D70 MOV X3, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x678000
	009 Move W8, [X21+3357]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F7000
	017 Move X0, [X0+1624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3357], W8
	021 Move X24, 0x3F7000
	022 Add X20, X20, 176
	023 Move X21, [X20]
	024 Move X24, [X24+1624]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_changed(System.Action`2<UnityEngine.UIElements.Column, UnityEngine.UIElements.ColumnDataType> value)

Disassembly:
	0x03D70D74 BL 0x339FA34
	0x03D70D78 LDR X8, [X19 + 0x18]
	0x03D70D7C CBZ X8, 0x3D70DBC
	0x03D70D80 LDP W2, W9, [X8 + 0x18]
	0x03D70D84 ADD W9, W9, 0x1
	0x03D70D88 CMP W2, 0x1
	0x03D70D8C STP W31, W9, [X8 + 0x18]
	0x03D70D90 B.LT 0x3D70DA4
	0x03D70D94 LDR X0, [X8 + 0x10]
	0x03D70D98 MOV W1, W31
	0x03D70D9C MOV X3, X31
	0x03D70DA0 BL 0x339FA34
	0x03D70DA4 MOVZ W8, 0x1
	0x03D70DA8 STR X31, [X19 + 0x40]
	0x03D70DAC STRB W8, [X19 + 0x3C]
	0x03D70DB0 LDP X20, X19, [X31 + 0x10]
	0x03D70DB4 LDR X30, [X31], #0x20
	0x03D70DB8 RET
	0x03D70DBC BL 0x1C16F20
	0x03D70DC0 STP X30, X23, [X31 - 0x30]!
	0x03D70DC4 STP X22, X21, [X31 + 0x10]
	0x03D70DC8 STP X20, X19, [X31 + 0x20]
	0x03D70DCC ADRP X22, 0x677000
	0x03D70DD0 ADRP X23, 0x3F6000
	0x03D70DD4 ADRP X21, 0x3F6000
	0x03D70DD8 LDRB W8, [X22 + 0xD29]
	0x03D70DDC LDR X23, [X23 + 0x658]
	0x03D70DE0 LDR X21, [X21 + 0xD98]
	0x03D70DE4 MOV X20, X1
	0x03D70DE8 MOV X19, X0
	0x03D70DEC TBNZ X8, 0x0, 0x3D70E28
	0x03D70DF0 ADRP X0, 0x3F6000
	0x03D70DF4 LDR X0, [X0 + 0x650]
	0x03D70DF8 BL 0x1C16CF4
	0x03D70DFC ADRP X0, 0x3F6000
	0x03D70E00 LDR X0, [X0 + 0x658]
	0x03D70E04 BL 0x1C16CF4
	0x03D70E08 ADRP X0, 0x3F6000
	0x03D70E0C LDR X0, [X0 + 0xD98]
	0x03D70E10 BL 0x1C16CF4
	0x03D70E14 ADRP X0, 0x3F6000
	0x03D70E18 LDR X0, [X0 + 0xDA0]
	0x03D70E1C BL 0x1C16CF4
	0x03D70E20 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x678000
	009 Move W8, [X21+3358]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F7000
	017 Move X0, [X0+1624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3358], W8
	021 Move X24, 0x3F7000
	022 Add X20, X20, 176
	023 Move X21, [X20]
	024 Move X24, [X24+1624]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_resized(System.Action`1<UnityEngine.UIElements.Column> value)

Disassembly:
	0x03D70E24 STRB W8, [X22 + 0xD29]
	0x03D70E28 LDR X0, [X23]
	0x03D70E2C BL 0x1C16F10
	0x03D70E30 LDR X2, [X21]
	0x03D70E34 MOV X1, X19
	0x03D70E38 MOV X3, X31
	0x03D70E3C MOV X21, X0
	0x03D70E40 BL 0x2A769B4
	0x03D70E44 CBZ X20, 0x3D70EA0
	0x03D70E48 ADRP X22, 0x3F6000
	0x03D70E4C ADRP X23, 0x3F6000
	0x03D70E50 LDR X22, [X22 + 0x650]
	0x03D70E54 LDR X23, [X23 + 0xDA0]
	0x03D70E58 MOV X0, X20
	0x03D70E5C MOV X1, X21
	0x03D70E60 BL 0x3D6FD74
	0x03D70E64 LDR X0, [X22]
	0x03D70E68 BL 0x1C16F10
	0x03D70E6C LDR X2, [X23]
	0x03D70E70 MOV X1, X19
	0x03D70E74 MOV X3, X31
	0x03D70E78 MOV X21, X0
	0x03D70E7C BL 0x2A6B948
	0x03D70E80 MOV X0, X20
	0x03D70E84 MOV X1, X21
	0x03D70E88 BL 0x3D6FED4
	0x03D70E8C MOV X0, X19
	0x03D70E90 LDP X20, X19, [X31 + 0x20]
	0x03D70E94 LDP X22, X21, [X31 + 0x10]
	0x03D70E98 LDP X30, X23, [X31], #0x30
	0x03D70E9C B 0x3D70CB4
	0x03D70EA0 BL 0x1C16F20
	0x03D70EA4 B 0x3D70CB4
	0x03D70EA8 SUB W8, W1, 0x3
	0x03D70EAC CMP W8, 0x5
	0x03D70EB0 B.CC 0x3D70EC4
	0x03D70EB4 SUB W8, W1, 0xB
	0x03D70EB8 CMP W8, 0x2
	0x03D70EBC CSET W0, CC
	0x03D70EC0 RET
	0x03D70EC4 MOVZ W0, 0x1
	0x03D70EC8 RET
	0x03D70ECC LDRB W8, [X0 + 0x55]
	0x03D70ED0 CBZ W8, 0x3D70ED8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x678000
	009 Move W8, [X21+3359]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F7000
	017 Move X0, [X0+1616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3359], W8
	021 Move X24, 0x3F7000
	022 Add X20, X20, 184
	023 Move X21, [X20]
	024 Move X24, [X24+1616]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_resized(System.Action`1<UnityEngine.UIElements.Column> value)

Disassembly:
	0x03D70ED4 RET
	0x03D70ED8 CMP W2, 0xC
	0x03D70EDC B.HI 0x3D70ED4
	0x03D70EE0 MOVZ W8, 0x1
	0x03D70EE4 LSLV W8, W8, W2
	0x03D70EE8 MOVZ W9, 0x18F8
	0x03D70EEC ANDS W31, W8, W9, 0x0
	0x03D70EF0 B.EQ 0x3D70ED4
	0x03D70EF4 B 0x3D70CB4
	0x03D70EF8 MOVZ W8, 0x1
	0x03D70EFC STRB W8, [X0 + 0x3C]
	0x03D70F00 RET
	0x03D70F04 FCMP S0, S1
	0x03D70F08 CSET W8, GE
	0x03D70F0C FCMP S0, S2
	0x03D70F10 CSET W9, LS
	0x03D70F14 AND W0, W8, W9, 0x0
	0x03D70F18 RET
	0x03D70F1C SUB X31, X31, 0x140
	0x03D70F20 STP D13, D12, [X31 + 0xB0]
	0x03D70F24 STP D11, D10, [X31 + 0xC0]
	0x03D70F28 STP D9, D8, [X31 + 0xD0]
	0x03D70F2C STP X29, X30, [X31 + 0xE0]
	0x03D70F30 STP X28, X27, [X31 + 0xF0]
	0x03D70F34 STP X26, X25, [X31 + 0x100]
	0x03D70F38 STP X24, X23, [X31 + 0x110]
	0x03D70F3C STP X22, X21, [X31 + 0x120]
	0x03D70F40 STP X20, X19, [X31 + 0x130]
	0x03D70F44 ADRP X20, 0x677000
	0x03D70F48 LDRB W8, [X20 + 0xD2A]
	0x03D70F4C MOV V8.16B, V0.16B
	0x03D70F50 MOV X19, X0
	0x03D70F54 TBNZ X8, 0x0, 0x3D71050
	0x03D70F58 ADRP X0, 0x3F6000
	0x03D70F5C LDR X0, [X0 + 0xDB8]
	0x03D70F60 BL 0x1C16CF4
	0x03D70F64 ADRP X0, 0x3F6000
	0x03D70F68 LDR X0, [X0 + 0xDC0]
	0x03D70F6C BL 0x1C16CF4
	0x03D70F70 ADRP X0, 0x3F6000
	0x03D70F74 LDR X0, [X0 + 0xDC8]
	0x03D70F78 BL 0x1C16CF4
	0x03D70F7C ADRP X0, 0x3F6000
	0x03D70F80 LDR X0, [X0 + 0xDD0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x678000
	009 Move W8, [X21+3360]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F7000
	017 Move X0, [X0+1616]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3360], W8
	021 Move X24, 0x3F7000
	022 Add X20, X20, 184
	023 Move X21, [X20]
	024 Move X24, [X24+1616]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void NotifyChange(UnityEngine.UIElements.ColumnDataType type)

Disassembly:
	0x03D7060C ADRP X21, 0x677000
	0x03D70610 ADRP X23, 0x3F6000
	0x03D70614 ADRP X22, 0x3F6000
	0x03D70618 LDRB W8, [X21 + 0xD27]
	0x03D7061C LDR X23, [X23 + 0xD68]
	0x03D70620 LDR X22, [X22 + 0xD78]
	0x03D70624 MOV X19, X1
	0x03D70628 MOV X20, X0
	0x03D7062C TBNZ X8, 0x0, 0x3D70698
	0x03D70630 ADRP X0, 0x3F6000

ISIL:
	001 Move X9, [X0+176]
	002 Compare X9, 0
	003 JumpIfEqual {11}
	004 Move X8, X0
	005 Move X4, [X9+24]
	006 Move X0, [X9+64]
	007 Move X3, [X9+40]
	008 Move W2, W1
	009 Move X1, X8
	010 CallNoReturn X4
	011 Return 

Method: System.Single GetWidth(System.Single layoutWidth)

Disassembly:
	0x03D70F84 BL 0x1C16CF4
	0x03D70F88 ADRP X0, 0x3F6000
	0x03D70F8C LDR X0, [X0 + 0xDD8]
	0x03D70F90 BL 0x1C16CF4
	0x03D70F94 ADRP X0, 0x3AD000
	0x03D70F98 LDR X0, [X0 + 0xB80]
	0x03D70F9C BL 0x1C16CF4
	0x03D70FA0 ADRP X0, 0x3AD000
	0x03D70FA4 LDR X0, [X0 + 0xB88]

ISIL:
	001 Move W8, [X0+72]
	002 Move V1, [X0+68]
	003 Compare W8, 0
	004 JumpIfEqual {9}
	005 Move W8, 0x42C80000
	006 Multiply S0, S1, S0
	007 Move S1, W8
	008 NotImplemented "Instruction FDIV not yet implemented."
	009 Move V0, V1
	010 Return V0

Method: System.Single GetMaxWidth(System.Single layoutWidth)

Disassembly:
	0x03D70FA8 BL 0x1C16CF4
	0x03D70FAC ADRP X0, 0x3AD000
	0x03D70FB0 LDR X0, [X0 + 0xB90]
	0x03D70FB4 BL 0x1C16CF4
	0x03D70FB8 ADRP X0, 0x383000
	0x03D70FBC LDR X0, [X0 + 0xE00]
	0x03D70FC0 BL 0x1C16CF4
	0x03D70FC4 ADRP X0, 0x3AC000
	0x03D70FC8 LDR X0, [X0 + 0x118]

ISIL:
	001 Move W8, [X0+88]
	002 Move V1, [X0+84]
	003 Compare W8, 0
	004 JumpIfEqual {9}
	005 Move W8, 0x42C80000
	006 Multiply S0, S1, S0
	007 Move S1, W8
	008 NotImplemented "Instruction FDIV not yet implemented."
	009 Move V0, V1
	010 Return V0

Method: System.Single GetMinWidth(System.Single layoutWidth)

Disassembly:
	0x03D70FCC BL 0x1C16CF4
	0x03D70FD0 ADRP X0, 0x383000
	0x03D70FD4 LDR X0, [X0 + 0xE18]
	0x03D70FD8 BL 0x1C16CF4
	0x03D70FDC ADRP X0, 0x3F6000
	0x03D70FE0 LDR X0, [X0 + 0xDE0]
	0x03D70FE4 BL 0x1C16CF4
	0x03D70FE8 ADRP X0, 0x3F6000
	0x03D70FEC LDR X0, [X0 + 0xDE8]

ISIL:
	001 Move W8, [X0+80]
	002 Move V1, [X0+76]
	003 Compare W8, 0
	004 JumpIfEqual {9}
	005 Move W8, 0x42C80000
	006 Multiply S0, S1, S0
	007 Move S1, W8
	008 NotImplemented "Instruction FDIV not yet implemented."
	009 Move V0, V1
	010 Return V0

Method: System.Void .ctor()

Disassembly:
	0x03D70FF0 BL 0x1C16CF4
	0x03D70FF4 ADRP X0, 0x3AD000
	0x03D70FF8 LDR X0, [X0 + 0xB98]
	0x03D70FFC BL 0x1C16CF4
	0x03D71000 ADRP X0, 0x3F5000
	0x03D71004 LDR X0, [X0 + 0xDF0]
	0x03D71008 BL 0x1C16CF4
	0x03D7100C ADRP X0, 0x3F5000
	0x03D71010 LDR X0, [X0 + 0xD78]
	0x03D71014 BL 0x1C16CF4
	0x03D71018 ADRP X0, 0x3F5000
	0x03D7101C LDR X0, [X0 + 0xD70]
	0x03D71020 BL 0x1C16CF4
	0x03D71024 ADRP X0, 0x3F5000
	0x03D71028 LDR X0, [X0 + 0xD68]
	0x03D7102C BL 0x1C16CF4
	0x03D71030 ADRP X0, 0x382000
	0x03D71034 LDR X0, [X0 + 0x5A8]
	0x03D71038 BL 0x1C16CF4
	0x03D7103C ADRP X0, 0x3F5000
	0x03D71040 LDR X0, [X0 + 0xDF8]
	0x03D71044 BL 0x1C16CF4
	0x03D71048 MOVZ W8, 0x1
	0x03D7104C STRB W8, [X20 + 0xD2A]
	0x03D71050 STP X31, X31, [X31 + 0x90]
	0x03D71054 STR X31, [X31 + 0xA0]
	0x03D71058 STP X31, X31, [X31 + 0x70]
	0x03D7105C STR X31, [X31 + 0x80]
	0x03D71060 STR W31, [X31 + 0x6C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, 1
	005 Move X19, X0
	006 Move [X0+64], W20
	007 Move S0, W31
	008 Move X0, X31
	009 Call Length.op_Implicit, V0
	010 Move W8, 0x420C0000
	011 Move [X19+68], X0
	012 Move S0, W8
	013 Move X0, X31
	014 Call Length.op_Implicit, V0
	015 Move W8, 0x4B000000
	016 Move [X19+76], X0
	017 Move S0, W8
	018 Move X0, X31
	019 Call Length.op_Implicit, V0
	020 Move W8, 0x7FC00000
	021 Move W9, 257
	022 Move [X19+84], X0
	023 Move [X19+92], W8
	024 NotImplemented "Instruction STURH not yet implemented."
	025 Move [X19+99], W20
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, X31
	030 Move X30, [X31+32]
	031 Call Object..ctor, X0
	032 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D71064 STP X31, X31, [X31 + 0x58]
	0x03D71068 STP X31, X31, [X31 + 0x48]
	0x03D7106C STP X31, X31, [X31 + 0x38]
	0x03D71070 STP X31, X31, [X31 + 0x28]
	0x03D71074 STR X31, [X31 + 0x20]
	0x03D71078 LDRB W8, [X19 + 0x48]
	0x03D7107C STR S8, [X19 + 0x50]
	0x03D71080 CBZ W8, 0x3D7108C
	0x03D71084 MOV X0, X19
	0x03D71088 BL 0x3D71D14
	0x03D7108C ADRP X22, 0x3F5000
	0x03D71090 ADRP X20, 0x3F5000
	0x03D71094 LDR X22, [X22 + 0xD68]
	0x03D71098 LDR X20, [X20 + 0xD78]
	0x03D7109C MOV X0, X19
	0x03D710A0 BL 0x3D70454
	0x03D710A4 TBZ X0, 0x0, 0x3D710B0
	0x03D710A8 MOV X0, X19
	0x03D710AC BL 0x3D72260
	0x03D710B0 LDR X0, [X22]
	0x03D710B4 BL 0x1C16F10
	0x03D710B8 LDR X1, [X20]
	0x03D710BC MOV X21, X0
	0x03D710C0 BL 0x301B7C4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x677000
	006 Move X19, 0x3CD000
	007 Move X21, 0x3AC000
	008 Move W8, [X20+3361]
	009 Move X19, [X19+1448]
	010 Move X21, [X21+2920]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x3AC000
	016 Move X0, [X0+2920]
	017 Call 0x1C17CF4
	018 Move X0, 0x3CD000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3361], W8
	023 Move X8, [X21]
	024 Move X9, [X19]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X8, [X8+184]
	028 Move [X8], X9
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

