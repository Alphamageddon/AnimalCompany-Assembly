Type: UnityEngine.UIElements.FontDefinition

Method: UnityEngine.Font get_font()

Disassembly:
	0x03DE59FC ADD X0, X1, 0x2C0
	0x03DE5A00 MOV X1, X31

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: UnityEngine.TextCore.Text.FontAsset get_fontAsset()

Disassembly:
	0x03DE5A04 BL 0x3DC7064
	0x03DE5A08 CBZ X19, 0x3DE5A38

ISIL:
	001 Move X0, [X0+8]
	002 Return X0

Method: UnityEngine.UIElements.FontDefinition FromFont(UnityEngine.Font f)

Disassembly:
	0x03DE5A0C MOV W1, W0
	0x03DE5A10 MOV X0, X19

ISIL:
	001 Move X1, X31
	002 Return X0

Method: UnityEngine.UIElements.FontDefinition FromSDFFont(UnityEngine.TextCore.Text.FontAsset f)

Disassembly:
	0x03DE5A14 LDP X20, X19, [X31 + 0x20]
	0x03DE5A18 LDP X22, X21, [X31 + 0x10]
	0x03DE5A1C MOV X2, X31

ISIL:
	001 Move X1, X0
	002 Move X0, X31
	003 Return X0

Method: UnityEngine.UIElements.FontDefinition FromObject(System.Object obj)

Disassembly:
	0x03DE5A20 LDR X30, [X31], #0x30
	0x03DE5A24 B 0x3CE70C8
	0x03DE5A28 LDP X20, X19, [X31 + 0x20]
	0x03DE5A2C LDP X22, X21, [X31 + 0x10]
	0x03DE5A30 LDR X30, [X31], #0x30
	0x03DE5A34 RET
	0x03DE5A38 BL 0x1C16F20
	0x03DE5A3C STP X30, X19, [X31 - 0x10]!
	0x03DE5A40 MOV X8, X1
	0x03DE5A44 MOVZ W1, 0x9
	0x03DE5A48 AND X3, X2, 0x0
	0x03DE5A4C MOVK W1, 0x20000
	0x03DE5A50 MOV X2, X8
	0x03DE5A54 MOV X19, X0
	0x03DE5A58 BL 0x3DE5128
	0x03DE5A5C TBZ X0, 0x0, 0x3DE5ABC
	0x03DE5A60 LDR X1, [X19 + 0x20]
	0x03DE5A64 CBZ X1, 0x3DE5AC4
	0x03DE5A68 LDR X0, [X1 + 0x3A0]
	0x03DE5A6C CBZ X0, 0x3DE5A8C
	0x03DE5A70 LDR X8, [X0]
	0x03DE5A74 MOVZ W2, 0x28
	0x03DE5A78 LDR X9, [X8 + 0x338]
	0x03DE5A7C LDR X3, [X8 + 0x340]
	0x03DE5A80 BLR X9
	0x03DE5A84 LDR X1, [X19 + 0x20]
	0x03DE5A88 CBZ X1, 0x3DE5AC4
	0x03DE5A8C LDR X19, [X1 + 0x2B8]
	0x03DE5A90 ADD X0, X1, 0x2C0
	0x03DE5A94 MOV X1, X31
	0x03DE5A98 BL 0x3DC66B4
	0x03DE5A9C MOV X1, X31
	0x03DE5AA0 BL 0x3DFFF30
	0x03DE5AA4 CBZ X19, 0x3DE5AC4
	0x03DE5AA8 MOV X1, X0
	0x03DE5AAC MOV X0, X19
	0x03DE5AB0 MOV X2, X31
	0x03DE5AB4 LDP X30, X19, [X31], #0x10
	0x03DE5AB8 B 0x3CE7344
	0x03DE5ABC LDP X30, X19, [X31], #0x10
	0x03DE5AC0 RET
	0x03DE5AC4 BL 0x1C16F20
	0x03DE5AC8 STR X30, [X31 - 0x30]!
	0x03DE5ACC STP X22, X21, [X31 + 0x10]
	0x03DE5AD0 STP X20, X19, [X31 + 0x20]
	0x03DE5AD4 ADRP X21, 0x603000
	0x03DE5AD8 ADRP X22, 0x384000
	0x03DE5ADC LDRB W8, [X21 + 0x20B]
	0x03DE5AE0 LDR X22, [X22 + 0x840]
	0x03DE5AE4 MOV X20, X1
	0x03DE5AE8 MOV X19, X0
	0x03DE5AEC TBNZ X8, 0x0, 0x3DE5B04
	0x03DE5AF0 ADRP X0, 0x384000
	0x03DE5AF4 LDR X0, [X0 + 0x840]
	0x03DE5AF8 BL 0x1C16CF4
	0x03DE5AFC MOVZ W8, 0x1
	0x03DE5B00 STRB W8, [X21 + 0x20B]
	0x03DE5B04 LDR X3, [X22]
	0x03DE5B08 MOVZ W1, 0xA
	0x03DE5B0C MOVK W1, 0x20000
	0x03DE5B10 MOV X0, X19
	0x03DE5B14 MOV X2, X20
	0x03DE5B18 BL 0x21F582C
	0x03DE5B1C TBZ X0, 0x0, 0x3DE5B7C
	0x03DE5B20 LDR X1, [X19 + 0x20]
	0x03DE5B24 CBZ X1, 0x3DE5B8C
	0x03DE5B28 LDR X0, [X1 + 0x3A0]
	0x03DE5B2C CBZ X0, 0x3DE5B4C
	0x03DE5B30 LDR X8, [X0]
	0x03DE5B34 MOVZ W2, 0x28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x604000
	006 Move W8, [X20+516]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x37D000
	013 Move X0, [X0+600]
	014 Call 0x1C17CF4
	015 Move X0, 0x37D000
	016 Move X0, [X0+4072]
	017 Call 0x1C17CF4
	018 Move X0, 0x30F000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+516], W8
	023 Move X21, 0x30F000
	024 Move X21, [X21+1432]
	025 Compare X19, 0
	026 JumpIfEqual {33}
	027 Move X8, 0x37D000
	028 Move X8, [X8+4072]
	029 Move X9, [X19]
	030 Move X8, [X8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move X20, X31
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X20
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Inequality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {48}
	047 Move X1, X31
	048 Compare X19, 0
	049 JumpIfEqual {63}
	050 Move X8, 0x37D000
	051 Move X8, [X8+600]
	052 Move X9, [X19]
	053 Move X8, [X8]
	054 Move W11, [X9+304]
	055 Move W10, [X8+304]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X19, X31
	058 Move X9, [X9+200]
	059 Add X9, X9, X10
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X1, X31
	070 Move X2, X31
	071 Call Object.op_Inequality, X0, X1
	072 And W31, W0, 1
	073 Move X20, X31
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 Move X0, X20
	076 Move X20, [X31+16]
	077 Move X19, [X31+24]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 Return X0

Method: System.Boolean IsEmpty()

Disassembly:
	0x03DE5B38 LDR X9, [X8 + 0x338]
	0x03DE5B3C LDR X3, [X8 + 0x340]
	0x03DE5B40 BLR X9
	0x03DE5B44 LDR X1, [X19 + 0x20]
	0x03DE5B48 CBZ X1, 0x3DE5B8C
	0x03DE5B4C LDR X19, [X1 + 0x2B8]
	0x03DE5B50 ADD X0, X1, 0x2C0
	0x03DE5B54 MOV X1, X31
	0x03DE5B58 BL 0x3DC6ED4
	0x03DE5B5C CBZ X19, 0x3DE5B8C
	0x03DE5B60 MOV W1, W0
	0x03DE5B64 MOV X0, X19
	0x03DE5B68 LDP X20, X19, [X31 + 0x20]
	0x03DE5B6C LDP X22, X21, [X31 + 0x10]
	0x03DE5B70 MOV X2, X31
	0x03DE5B74 LDR X30, [X31], #0x30
	0x03DE5B78 B 0x3CE7040
	0x03DE5B7C LDP X20, X19, [X31 + 0x20]
	0x03DE5B80 LDP X22, X21, [X31 + 0x10]
	0x03DE5B84 LDR X30, [X31], #0x30
	0x03DE5B88 RET
	0x03DE5B8C BL 0x1C16F20
	0x03DE5B90 STP X30, X19, [X31 - 0x10]!
	0x03DE5B94 MOV X2, X1
	0x03DE5B98 MOVZ W1, 0xB
	0x03DE5B9C MOVK W1, 0x20000
	0x03DE5BA0 MOV X19, X0
	0x03DE5BA4 BL 0x3DE5364
	0x03DE5BA8 TBZ X0, 0x0, 0x3DE5BFC
	0x03DE5BAC LDR X1, [X19 + 0x20]
	0x03DE5BB0 CBZ X1, 0x3DE5C04
	0x03DE5BB4 LDR X0, [X1 + 0x3A0]
	0x03DE5BB8 CBZ X0, 0x3DE5BD8
	0x03DE5BBC LDR X8, [X0]
	0x03DE5BC0 MOVZ W2, 0x28
	0x03DE5BC4 LDR X9, [X8 + 0x338]
	0x03DE5BC8 LDR X3, [X8 + 0x340]
	0x03DE5BCC BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x604000
	006 Move X21, 0x30F000
	007 Move W8, [X20+517]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x30F000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+517], W8
	019 Move X0, [X21]
	020 Move X20, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {48}
	033 Move X0, [X21]
	034 Move X19, [X19+8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X1, X31
	043 Move X2, X31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call Object.op_Equality, X0, X1
	047 Return X0
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move W0, W31
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0

Method: System.String ToString()

Disassembly:
	0x03DE5BD0 LDR X1, [X19 + 0x20]
	0x03DE5BD4 CBZ X1, 0x3DE5C04
	0x03DE5BD8 LDR X19, [X1 + 0x2B8]
	0x03DE5BDC ADD X0, X1, 0x2C0
	0x03DE5BE0 MOV X1, X31
	0x03DE5BE4 BL 0x3DC6614
	0x03DE5BE8 CBZ X19, 0x3DE5C04
	0x03DE5BEC MOV X0, X19
	0x03DE5BF0 MOV X1, X31
	0x03DE5BF4 LDP X30, X19, [X31], #0x10
	0x03DE5BF8 B 0x3CE72AC
	0x03DE5BFC LDP X30, X19, [X31], #0x10
	0x03DE5C00 RET
	0x03DE5C04 BL 0x1C16F20
	0x03DE5C08 STP X30, X19, [X31 - 0x10]!
	0x03DE5C0C MOV X2, X1
	0x03DE5C10 MOVZ W1, 0xC
	0x03DE5C14 MOVK W1, 0x20000
	0x03DE5C18 MOV X19, X0
	0x03DE5C1C BL 0x3DE5364
	0x03DE5C20 TBZ X0, 0x0, 0x3DE5C74
	0x03DE5C24 LDR X1, [X19 + 0x20]
	0x03DE5C28 CBZ X1, 0x3DE5C7C
	0x03DE5C2C LDR X0, [X1 + 0x3A0]
	0x03DE5C30 CBZ X0, 0x3DE5C50
	0x03DE5C34 LDR X8, [X0]
	0x03DE5C38 MOVZ W2, 0x28
	0x03DE5C3C LDR X9, [X8 + 0x338]
	0x03DE5C40 LDR X3, [X8 + 0x340]
	0x03DE5C44 BLR X9
	0x03DE5C48 LDR X1, [X19 + 0x20]
	0x03DE5C4C CBZ X1, 0x3DE5C7C
	0x03DE5C50 LDR X19, [X1 + 0x2B8]
	0x03DE5C54 ADD X0, X1, 0x2C0
	0x03DE5C58 MOV X1, X31
	0x03DE5C5C BL 0x3DC6664

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x604000
	006 Move X20, 0x30F000
	007 Move W8, [X21+518]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x30F000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x313000
	018 Move X0, [X0+272]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+518], W8
	022 Move X0, [X20]
	023 Move X20, [X19]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {37}
	036 Move X1, [X19]
	037 Move X1, [X19+8]
	038 Move X8, 0x313000
	039 Move X8, [X8+272]
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X2, X31
	043 Move X0, [X8]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call String.Format, X0, X1
	047 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.FontDefinition other)

Disassembly:
	0x03DE5C60 CBZ X19, 0x3DE5C7C
	0x03DE5C64 MOV X0, X19
	0x03DE5C68 MOV X1, X31
	0x03DE5C6C LDP X30, X19, [X31], #0x10
	0x03DE5C70 B 0x3CE72F8
	0x03DE5C74 LDP X30, X19, [X31], #0x10
	0x03DE5C78 RET
	0x03DE5C7C BL 0x1C16F20
	0x03DE5C80 STP X30, X19, [X31 - 0x10]!
	0x03DE5C84 MOV X8, X1
	0x03DE5C88 AND X3, X2, 0x0
	0x03DE5C8C ORR W1, W31, 0x10001
	0x03DE5C90 MOV X2, X8
	0x03DE5C94 MOV X19, X0
	0x03DE5C98 BL 0x3DE5128
	0x03DE5C9C TBZ X0, 0x0, 0x3DE5CC8
	0x03DE5CA0 LDR X1, [X19 + 0x20]
	0x03DE5CA4 CBZ X1, 0x3DE5CD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0]
	006 Move X19, X2
	007 Move X2, X31
	008 Call Object.Equals, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {21}
	013 Move X0, [X20+8]
	014 Move X1, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X2, X31
	018 Move X30, [X31+32]
	019 Call Object.Equals, X0, X1
	020 Return X0
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move W0, W31
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03DE5CA8 LDR X0, [X1 + 0x3A0]
	0x03DE5CAC CBZ X0, 0x3DE5CC8
	0x03DE5CB0 LDR X8, [X0]
	0x03DE5CB4 MOVZ W2, 0x838
	0x03DE5CB8 LDR X4, [X8 + 0x338]
	0x03DE5CBC LDR X3, [X8 + 0x340]
	0x03DE5CC0 LDP X30, X19, [X31], #0x10
	0x03DE5CC4 BR X4
	0x03DE5CC8 LDP X30, X19, [X31], #0x10
	0x03DE5CCC RET
	0x03DE5CD0 BL 0x1C16F20
	0x03DE5CD4 STP X30, X19, [X31 - 0x10]!
	0x03DE5CD8 MOV X8, X1
	0x03DE5CDC MOVZ W1, 0xE
	0x03DE5CE0 AND X3, X2, 0x0
	0x03DE5CE4 MOVK W1, 0x20000
	0x03DE5CE8 MOV X2, X8
	0x03DE5CEC MOV X19, X0
	0x03DE5CF0 BL 0x3DE5128
	0x03DE5CF4 TBZ X0, 0x0, 0x3DE5D54
	0x03DE5CF8 LDR X1, [X19 + 0x20]
	0x03DE5CFC CBZ X1, 0x3DE5D5C
	0x03DE5D00 LDR X0, [X1 + 0x3A0]
	0x03DE5D04 CBZ X0, 0x3DE5D24
	0x03DE5D08 LDR X8, [X0]
	0x03DE5D0C MOVZ W2, 0x28
	0x03DE5D10 LDR X9, [X8 + 0x338]
	0x03DE5D14 LDR X3, [X8 + 0x340]
	0x03DE5D18 BLR X9
	0x03DE5D1C LDR X1, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x604000
	006 Move W8, [X21+519]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x33A000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+519], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x33A000
	021 Move X8, [X8+3584]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move X1, [X0]
	034 Move X2, [X0+8]
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call FontDefinition.Equals, X0, X1
	041 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03DE5D20 CBZ X1, 0x3DE5D5C
	0x03DE5D24 LDR X19, [X1 + 0x2B8]
	0x03DE5D28 ADD X0, X1, 0x2C0
	0x03DE5D2C MOV X1, X31
	0x03DE5D30 BL 0x3DC6C54
	0x03DE5D34 MOV X1, X31
	0x03DE5D38 BL 0x3DFFF30
	0x03DE5D3C CBZ X19, 0x3DE5D5C
	0x03DE5D40 MOV X1, X0
	0x03DE5D44 MOV X0, X19
	0x03DE5D48 MOV X2, X31
	0x03DE5D4C LDP X30, X19, [X31], #0x10
	0x03DE5D50 B 0x3CE74BC
	0x03DE5D54 LDP X30, X19, [X31], #0x10
	0x03DE5D58 RET
	0x03DE5D5C BL 0x1C16F20
	0x03DE5D60 STP X30, X19, [X31 - 0x10]!
	0x03DE5D64 MOV X8, X1
	0x03DE5D68 MOVZ W1, 0x10
	0x03DE5D6C AND X3, X2, 0x0
	0x03DE5D70 MOVK W1, 0x20000
	0x03DE5D74 MOV X2, X8
	0x03DE5D78 MOV X19, X0
	0x03DE5D7C BL 0x3DE5128
	0x03DE5D80 TBZ X0, 0x0, 0x3DE5DE0
	0x03DE5D84 LDR X1, [X19 + 0x20]
	0x03DE5D88 CBZ X1, 0x3DE5DE8
	0x03DE5D8C LDR X0, [X1 + 0x3A0]
	0x03DE5D90 CBZ X0, 0x3DE5DB0
	0x03DE5D94 LDR X8, [X0]
	0x03DE5D98 MOVZ W2, 0x28
	0x03DE5D9C LDR X9, [X8 + 0x338]
	0x03DE5DA0 LDR X3, [X8 + 0x340]
	0x03DE5DA4 BLR X9
	0x03DE5DA8 LDR X1, [X19 + 0x20]
	0x03DE5DAC CBZ X1, 0x3DE5DE8
	0x03DE5DB0 LDR X19, [X1 + 0x2B8]
	0x03DE5DB4 ADD X0, X1, 0x2C0
	0x03DE5DB8 MOV X1, X31
	0x03DE5DBC BL 0x3DC6704
	0x03DE5DC0 MOV X1, X31
	0x03DE5DC4 BL 0x3DFFF30
	0x03DE5DC8 CBZ X19, 0x3DE5DE8
	0x03DE5DCC MOV X1, X0
	0x03DE5DD0 MOV X0, X19
	0x03DE5DD4 MOV X2, X31
	0x03DE5DD8 LDP X30, X19, [X31], #0x10
	0x03DE5DDC B 0x3CE6620
	0x03DE5DE0 LDP X30, X19, [X31], #0x10
	0x03DE5DE4 RET
	0x03DE5DE8 BL 0x1C16F20
	0x03DE5DEC STP X30, X19, [X31 - 0x10]!
	0x03DE5DF0 MOV X8, X1
	0x03DE5DF4 MOVZ W1, 0x11
	0x03DE5DF8 AND X3, X2, 0x0
	0x03DE5DFC MOVK W1, 0x20000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x604000
	007 Move X21, 0x30F000
	008 Move W8, [X20+520]
	009 Move X21, [X21+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x30F000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+520], W8
	020 Move X0, [X21]
	021 Move X20, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Inequality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {43}
	034 Move X0, [X19]
	035 Compare X0, 0
	036 JumpIfEqual {73}
	037 Move X8, [X0]
	038 Move X9, [X8+344]
	039 Move X1, [X8+352]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move W8, 397
	042 Multiply W22, W0, W8
	043 Move W22, W31
	044 Move X0, [X21]
	045 Move X20, [X19+8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X31
	052 Move X2, X31
	053 Call Object.op_Inequality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {65}
	058 Move X0, [X19+8]
	059 Compare X0, 0
	060 JumpIfEqual {73}
	061 Move X8, [X0]
	062 Move X9, [X8+344]
	063 Move X1, [X8+352]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W0, W31
	066 Xor W0, W0, W22
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Return X0
	073 Call 0x1C17F20

Method: System.Boolean op_Equality(UnityEngine.UIElements.FontDefinition left, UnityEngine.UIElements.FontDefinition right)

Disassembly:
	0x03DE5E00 MOV X2, X8
	0x03DE5E04 MOV X19, X0
	0x03DE5E08 BL 0x3DE5128
	0x03DE5E0C TBZ X0, 0x0, 0x3DE5E6C
	0x03DE5E10 LDR X1, [X19 + 0x20]
	0x03DE5E14 CBZ X1, 0x3DE5E74
	0x03DE5E18 LDR X0, [X1 + 0x3A0]
	0x03DE5E1C CBZ X0, 0x3DE5E3C
	0x03DE5E20 LDR X8, [X0]
	0x03DE5E24 MOVZ W2, 0x28
	0x03DE5E28 LDR X9, [X8 + 0x338]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31], X0
	005 Add X0, X31, 0
	006 Move X1, X2
	007 Move X2, X3
	008 Call FontDefinition.Equals, X0, X1
	009 Move X30, [X31+16]
	010 And W0, W0, 1
	011 Add X31, X31, 32
	012 Return X0

Method: System.Boolean op_Inequality(UnityEngine.UIElements.FontDefinition left, UnityEngine.UIElements.FontDefinition right)

Disassembly:
	0x03DE5E2C LDR X3, [X8 + 0x340]
	0x03DE5E30 BLR X9
	0x03DE5E34 LDR X1, [X19 + 0x20]
	0x03DE5E38 CBZ X1, 0x3DE5E74
	0x03DE5E3C LDR X19, [X1 + 0x2B8]
	0x03DE5E40 ADD X0, X1, 0x2C0
	0x03DE5E44 MOV X1, X31
	0x03DE5E48 BL 0x3DC6934
	0x03DE5E4C MOV X1, X31
	0x03DE5E50 BL 0x3DFFF30
	0x03DE5E54 CBZ X19, 0x3DE5E74
	0x03DE5E58 MOV X1, X0

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X1
	003 Move [X31+16], X30
	004 Move [X31], X0
	005 Add X0, X31, 0
	006 Move X1, X2
	007 Move X2, X3
	008 Call FontDefinition.Equals, X0, X1
	009 Move X30, [X31+16]
	010 NotImplemented "Instruction ORN not yet implemented."
	011 And W0, W8, 1
	012 Add X31, X31, 32
	013 Return X0

