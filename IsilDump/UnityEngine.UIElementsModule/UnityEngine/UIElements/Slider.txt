Type: UnityEngine.UIElements.Slider

Method: System.Void .ctor()

Disassembly:
	0x03D85FD0 B 0x3D85FE8
	0x03D85FD4 FMOV D1, 0.5
	0x03D85FD8 FCMP D0, D1
	0x03D85FDC B.NE 0x3D86008
	0x03D85FE0 LDR V0, [X31 + 0x18]
	0x03D85FE4 FMOV D1, 1

ISIL:
	001 Move S0, W31
	002 Move S1, 10
	003 Move S2, W31
	004 Move X1, X31
	005 Move W2, W31

Method: System.Void .ctor(System.Single start, System.Single end, UnityEngine.UIElements.SliderDirection direction = 0, System.Single pageSize = 0)

Disassembly:
	0x03D85B4C RET
	0x03D85B50 BL 0x1C16F20
	0x03D85B54 MOV X0, X19

ISIL:
	001 Move W2, W1
	002 Move X1, X31
	003 Call Slider..ctor, X0, X1, V0, V1, X2, V2
	004 Return 

Method: System.Void .ctor(System.String label, System.Single start = 0, System.Single end = 10, UnityEngine.UIElements.SliderDirection direction = 0, System.Single pageSize = 0)

Disassembly:
	0x03D85FE8 FCVTZS X8, D0
	0x03D85FEC FADD D1, D0, D1
	0x03D85FF0 ANDS X31, X8, 0x1
	0x03D85FF4 FCSEL D0, D0, D1, EQ
	0x03D85FF8 B 0x3D86010
	0x03D85FFC FADD D0, D9, D1
	0x03D86000 FRINTP D0, D0
	0x03D86004 B 0x3D86010
	0x03D86008 FADD D0, D9, D1
	0x03D8600C FRINTM D0, D0
	0x03D86010 FCVTZS W8, D0
	0x03D86014 MOVZ X9, 0x7FF00000
	0x03D86018 LDR X1, [X20]
	0x03D8601C MOV X0, X19
	0x03D86020 LDP X20, X19, [X31 + 0x20]
	0x03D86024 LDR X30, [X31 + 0x10]
	0x03D86028 SCVTF S1, W8
	0x03D8602C FMOV D2, X9
	0x03D86030 MOVZ W8, 0xCF000000
	0x03D86034 FCMP D0, D2
	0x03D86038 FMOV S0, W8
	0x03D8603C FCSEL S0, S0, S1, EQ
	0x03D86040 LDP D9, D8, [X31], #0x30
	0x03D86044 B 0x28BB858
	0x03D86048 SUB X31, X31, 0x70
	0x03D8604C STP D11, D10, [X31 + 0x10]
	0x03D86050 STP D9, D8, [X31 + 0x20]
	0x03D86054 STP X30, X25, [X31 + 0x30]
	0x03D86058 STP X24, X23, [X31 + 0x40]
	0x03D8605C STP X22, X21, [X31 + 0x50]
	0x03D86060 STP X20, X19, [X31 + 0x60]
	0x03D86064 ADRP X24, 0x661000
	0x03D86068 ADRP X25, 0x3E1000
	0x03D8606C ADRP X22, 0x3E1000
	0x03D86070 ADRP X23, 0x36D000
	0x03D86074 LDRB W8, [X24 + 0xDF0]
	0x03D86078 LDR X25, [X25 + 0x678]
	0x03D8607C LDR X22, [X22 + 0x680]
	0x03D86080 LDR X23, [X23 + 0x5A8]
	0x03D86084 MOV W21, W2
	0x03D86088 MOV W20, W1
	0x03D8608C MOV V8.16B, V1.16B
	0x03D86090 MOV V9.16B, V0.16B
	0x03D86094 MOV X19, X0
	0x03D86098 TBNZ X8, 0x0, 0x3D860C8
	0x03D8609C ADRP X0, 0x3E1000
	0x03D860A0 LDR X0, [X0 + 0x680]
	0x03D860A4 BL 0x1C16CF4
	0x03D860A8 ADRP X0, 0x3E1000
	0x03D860AC LDR X0, [X0 + 0x678]
	0x03D860B0 BL 0x1C16CF4
	0x03D860B4 ADRP X0, 0x36D000
	0x03D860B8 LDR X0, [X0 + 0x5A8]
	0x03D860BC BL 0x1C16CF4
	0x03D860C0 MOVZ W8, 0x1
	0x03D860C4 STRB W8, [X24 + 0xDF0]
	0x03D860C8 LDR X1, [X25]
	0x03D860CC MOV X0, X19
	0x03D860D0 BL 0x28BB694
	0x03D860D4 LDR X1, [X22]
	0x03D860D8 MOV W22, W0
	0x03D860DC MOV X0, X19
	0x03D860E0 BL 0x28BB730
	0x03D860E4 SXTW X8, W21
	0x03D860E8 SXTW X1, W22
	0x03D860EC SXTW X2, W0
	0x03D860F0 MOV X0, X8
	0x03D860F4 MOV X3, X31
	0x03D860F8 BL 0x3C2F8F8
	0x03D860FC CMP W20, 0x0
	0x03D86100 SCVTF D11, X0
	0x03D86104 CSET W0, EQ
	0x03D86108 CMP W20, 0x2
	0x03D8610C CSET W1, EQ
	0x03D86110 MOV X2, X31
	0x03D86114 BL 0x3C2F590
	0x03D86118 LDR X8, [X19]
	0x03D8611C MOV X0, X19
	0x03D86120 MOV V10.16B, V0.16B
	0x03D86124 LDR X9, [X8 + 0x7E8]
	0x03D86128 LDR X1, [X8 + 0x7F0]
	0x03D8612C BLR X9
	0x03D86130 MOV W20, W0

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x663000
	011 Move X22, 0x3E2000
	012 Move W8, [X23+3556]
	013 Call 0x3EB277C
	014 Return 
	015 Move V8, V2
	016 Move W20, W2
	017 Move V9, V1
	018 Move V10, V0
	019 Move X21, X1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {42}
	025 Move X0, 0x3DE000
	026 Move X0, [X0+2688]
	027 Call 0x1C17CF4
	028 Move X0, 0x3DE000
	029 Move X0, [X0+2696]
	030 Call 0x1C17CF4
	031 Move X0, 0x3E2000
	032 Move X0, [X0+1536]
	033 Call 0x1C17CF4
	034 Move X0, 0x3E2000
	035 Move X0, [X0+1528]
	036 Call 0x1C17CF4
	037 Move X0, 0x3E2000
	038 Move X0, [X0+1424]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+3556], W8
	042 Move X0, [X22]
	043 Move X23, 0x3E2000
	044 Move X22, 0x3E2000
	045 Move W8, [X0+224]
	046 Move X23, [X23+1536]
	047 Move X22, [X22+1424]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X3, [X23]
	052 Move X0, X19
	053 Move X1, X21
	054 Move V0, V10
	055 Move V1, V9
	056 Move W2, W20
	057 Move V2, V8
	058 Call BaseSlider`1<Single>..ctor, X0, X1, V0, V1, X2, V2
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X22]
	065 Move X8, [X0+184]
	066 Move X0, X19
	067 Move X2, X31
	068 Move X1, [X8]
	069 Call VisualElement.AddToClassList, X0, X1
	070 Move X0, [X19+1024]
	071 Compare X0, 0
	072 JumpIfEqual {100}
	073 Move X8, [X22]
	074 Move X20, 0x3DE000
	075 Move X2, X31
	076 Move X8, [X8+184]
	077 Move X1, [X8+8]
	078 Move X20, [X20+2696]
	079 Call VisualElement.AddToClassList, X0, X1
	080 Move X1, [X20]
	081 Move X0, X19
	082 Call BaseField`1<Single>.get_visualInput, X0
	083 Compare X0, 0
	084 JumpIfEqual {100}
	085 Move X8, [X22]
	086 Move X20, [X31+64]
	087 Move X19, [X31+72]
	088 Move X22, [X31+48]
	089 Move X21, [X31+56]
	090 Move X30, [X31+32]
	091 Move X23, [X31+40]
	092 Move X8, [X8+184]
	093 Move D9, [X31+16]
	094 Move D8, [X31+24]
	095 Move X2, X31
	096 Move X1, [X8+16]
	097 Move V10, [X31+80]
	098 Call VisualElement.AddToClassList, X0, X1
	099 Return 
	100 Call 0x1C17F20

Method: System.Void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, System.Single startValue)

Disassembly:
	0x03D86134 MOV V0.16B, V9.16B
	0x03D86138 MOV V1.16B, V8.16B
	0x03D8613C MOV V2.16B, V10.16B
	0x03D86140 MOV X0, X31
	0x03D86144 BL 0x3C2F5B4
	0x03D86148 LDR X0, [X23]
	0x03D8614C MOV V8.16B, V0.16B
	0x03D86150 LDR W8, [X0 + 0xE0]
	0x03D86154 CBNZ W8, 0x3D8615C
	0x03D86158 BL 0x1C16DFC
	0x03D8615C FCVT S0, S8
	0x03D86160 FMUL D8, D11, D0
	0x03D86164 ADD X0, X31, 0x8
	0x03D86168 MOV V0.16B, V8.16B
	0x03D8616C BL 0x3EB1C00
	0x03D86170 FCMP D8, 0x0
	0x03D86174 B.GE 0x3D86190
	0x03D86178 FMOV D1, -0.5
	0x03D8617C FCMP D0, D1
	0x03D86180 B.NE 0x3D861B8
	0x03D86184 LDR V0, [X31 + 0x8]
	0x03D86188 FMOV D1, -1
	0x03D8618C B 0x3D861A4
	0x03D86190 FMOV D1, 0.5
	0x03D86194 FCMP D0, D1
	0x03D86198 B.NE 0x3D861C4
	0x03D8619C LDR V0, [X31 + 0x8]
	0x03D861A0 FMOV D1, 1
	0x03D861A4 FCVTZS X8, D0
	0x03D861A8 FADD D1, D0, D1
	0x03D861AC ANDS X31, X8, 0x1
	0x03D861B0 FCSEL D0, D0, D1, EQ
	0x03D861B4 B 0x3D861CC
	0x03D861B8 FADD D0, D8, D1
	0x03D861BC FRINTP D0, D0
	0x03D861C0 B 0x3D861CC
	0x03D861C4 FADD D0, D8, D1
	0x03D861C8 FRINTM D0, D0
	0x03D861CC LDR X8, [X19]
	0x03D861D0 MOVZ X9, 0x7FF00000
	0x03D861D4 FMOV D1, X9
	0x03D861D8 FCVTZS X10, D0
	0x03D861DC FCMP D0, D1
	0x03D861E0 LDR X3, [X8 + 0x7F8]
	0x03D861E4 LDR X2, [X8 + 0x800]
	0x03D861E8 CSEL W8, W31, W10, EQ
	0x03D861EC ADD W1, W8, W20
	0x03D861F0 MOV X0, X19
	0x03D861F4 LDP X20, X19, [X31 + 0x60]
	0x03D861F8 LDP X22, X21, [X31 + 0x50]
	0x03D861FC LDP X24, X23, [X31 + 0x40]
	0x03D86200 LDP X30, X25, [X31 + 0x30]
	0x03D86204 LDP D9, D8, [X31 + 0x20]
	0x03D86208 LDP D11, D10, [X31 + 0x10]
	0x03D8620C ADD X31, X31, 0x70
	0x03D86210 BR X3
	0x03D86214 SUB X31, X31, 0x30
	0x03D86218 STP D9, D8, [X31 + 0x10]
	0x03D8621C STP X30, X19, [X31 + 0x20]
	0x03D86220 ADRP X19, 0x653000
	0x03D86224 LDRB W8, [X19 + 0x5D7]
	0x03D86228 SCVTF S8, W1
	0x03D8622C SCVTF S1, W2
	0x03D86230 FSUB S1, S1, S8
	0x03D86234 FMUL S9, S1, S0
	0x03D86238 CBNZ W8, 0x3D86250
	0x03D8623C ADRP X0, 0x36D000
	0x03D86240 LDR X0, [X0 + 0x5A8]
	0x03D86244 BL 0x1C16CF4
	0x03D86248 MOVZ W8, 0x1
	0x03D8624C STRB W8, [X19 + 0x5D7]
	0x03D86250 ADRP X8, 0x36D000
	0x03D86254 LDR X8, [X8 + 0x5A8]

ISIL:
	001 Move [X31-96], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x662000
	013 Move X23, 0x3E2000
	014 Move X21, 0x3E2000
	015 Move W8, [X22+3557]
	016 Move X23, [X23+1320]
	017 Move X21, [X21+1336]
	018 Move V10, V3
	019 Move W20, W1
	020 Move V8, V1
	021 Move V9, V0
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x3E2000
	028 Move X0, [X0+1336]
	029 Call 0x1C17CF4
	030 Move X0, 0x3E2000
	031 Move X0, [X0+1320]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+3557], W8
	035 Move X1, [X23]
	036 Move X0, X19
	037 Call BaseSlider`1<Single>.get_lowValue, X0
	038 Move X1, [X21]
	039 Move X0, X19
	040 Move V11, V0
	041 Call BaseSlider`1<Single>.get_highValue, X0
	042 NotImplemented "Instruction FCVT not yet implemented."
	043 NotImplemented "Instruction FCVT not yet implemented."
	044 NotImplemented "Instruction FCVT not yet implemented."
	045 Move V0, V3
	046 Move X0, X31
	047 Call NumericFieldDraggerUtility.CalculateFloatDragSensitivity, V0, V1, V2
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSET not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move X2, X31
	053 Move V10, V0
	054 Call NumericFieldDraggerUtility.Acceleration, X0, X1
	055 Move X8, [X19]
	056 Move X0, X19
	057 Move V11, V0
	058 Move X9, [X8+2024]
	059 Move X1, [X8+2032]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 NotImplemented "Instruction FCVT not yet implemented."
	062 Move V0, V9
	063 Move V1, V8
	064 Move V2, V11
	065 Move X0, X31
	066 Call NumericFieldDraggerUtility.NiceDelta, X0, V0
	067 Move X8, [X19]
	068 NotImplemented "Instruction FCVT not yet implemented."
	069 Multiply D0, D10, D0
	070 Move X0, X19
	071 Move X2, [X8+2040]
	072 Move X1, [X8+2048]
	073 Move X20, [X31+80]
	074 Move X19, [X31+88]
	075 Move X22, [X31+64]
	076 Move X21, [X31+72]
	077 Move X30, [X31+48]
	078 Move X23, [X31+56]
	079 Move D9, [X31+32]
	080 Move D8, [X31+40]
	081 Move D11, [X31+16]
	082 Move D10, [X31+24]
	083 Add D0, D0, D12
	084 NotImplemented "Instruction INVALID not yet implemented."
	085 Move V12, [X31+96]
	086 CallNoReturn X2

Method: System.Single SliderLerpUnclamped(System.Single a, System.Single b, System.Single interpolant)

Disassembly:
	0x03D86258 FADD S9, S9, S8
	0x03D8625C LDR X0, [X8]
	0x03D86260 LDR W8, [X0 + 0xE0]
	0x03D86264 CBNZ W8, 0x3D8626C
	0x03D86268 BL 0x1C16DFC
	0x03D8626C FCVT S8, S9
	0x03D86270 ADD X0, X31, 0x8
	0x03D86274 MOV V0.16B, V8.16B
	0x03D86278 BL 0x3EB1C00
	0x03D8627C FCMP S9, 0x0
	0x03D86280 B.GE 0x3D8629C
	0x03D86284 FMOV D1, -0.5
	0x03D86288 FCMP D0, D1
	0x03D8628C B.NE 0x3D862C4
	0x03D86290 LDR V0, [X31 + 0x8]
	0x03D86294 FMOV D1, -1
	0x03D86298 B 0x3D862B0
	0x03D8629C FMOV D1, 0.5
	0x03D862A0 FCMP D0, D1
	0x03D862A4 B.NE 0x3D862D0
	0x03D862A8 LDR V0, [X31 + 0x8]
	0x03D862AC FMOV D1, 1
	0x03D862B0 FCVTZS X8, D0
	0x03D862B4 FADD D1, D0, D1
	0x03D862B8 ANDS X31, X8, 0x1
	0x03D862BC FCSEL D0, D0, D1, EQ
	0x03D862C0 B 0x3D862D8
	0x03D862C4 FADD D0, D8, D1
	0x03D862C8 FRINTP D0, D0
	0x03D862CC B 0x3D862D8
	0x03D862D0 FADD D0, D8, D1
	0x03D862D4 FRINTM D0, D0
	0x03D862D8 MOVZ X8, 0x7FF00000
	0x03D862DC LDP X30, X19, [X31 + 0x20]
	0x03D862E0 LDP D9, D8, [X31 + 0x10]
	0x03D862E4 FMOV D1, X8
	0x03D862E8 FCVTZS W9, D0
	0x03D862EC FCMP D0, D1
	0x03D862F0 MOVZ W8, 0x80000000
	0x03D862F4 CSEL W0, W8, W9, EQ
	0x03D862F8 ADD X31, X31, 0x30
	0x03D862FC RET
	0x03D86300 SCVTF S0, W1
	0x03D86304 SCVTF S1, W2
	0x03D86308 SCVTF S2, W3
	0x03D8630C FSUB S0, S0, S1
	0x03D86310 FSUB S1, S2, S1
	0x03D86314 FDIV S0, S0, S1
	0x03D86318 RET
	0x03D8631C STR X30, [X31 - 0x30]!
	0x03D86320 STP X22, X21, [X31 + 0x10]
	0x03D86324 STP X20, X19, [X31 + 0x20]
	0x03D86328 ADRP X22, 0x661000
	0x03D8632C ADRP X21, 0x3D9000
	0x03D86330 LDRB W8, [X22 + 0xDF1]
	0x03D86334 LDR X21, [X21 + 0x7A8]
	0x03D86338 MOV X19, X2
	0x03D8633C MOV X20, X1
	0x03D86340 TBNZ X8, 0x0, 0x3D86358
	0x03D86344 ADRP X0, 0x3D9000
	0x03D86348 LDR X0, [X0 + 0x7A8]
	0x03D8634C BL 0x1C16CF4
	0x03D86350 MOVZ W8, 0x1
	0x03D86354 STRB W8, [X22 + 0xDF1]
	0x03D86358 LDR X0, [X21]
	0x03D8635C STR W31, [X31 + 0xC]
	0x03D86360 LDR W8, [X0 + 0xE0]
	0x03D86364 CBNZ W8, 0x3D8636C
	0x03D86368 BL 0x1C16DFC
	0x03D8636C ADD X2, X31, 0xC
	0x03D86370 MOV X0, X19
	0x03D86374 MOV X1, X20
	0x03D86378 MOV X3, X31
	0x03D8637C BL 0x3C3D954
	0x03D86380 LDR W8, [X31 + 0xC]
	0x03D86384 LDP X20, X19, [X31 + 0x20]
	0x03D86388 LDP X22, X21, [X31 + 0x10]
	0x03D8638C ANDS W31, W0, 0x1
	0x03D86390 CSEL W0, W8, W31, NE
	0x03D86394 LDR X30, [X31], #0x30
	0x03D86398 RET
	0x03D8639C STR D12, [X31 - 0x60]!
	0x03D863A0 STP D11, D10, [X31 + 0x10]
	0x03D863A4 STP D9, D8, [X31 + 0x20]
	0x03D863A8 STP X30, X23, [X31 + 0x30]
	0x03D863AC STP X22, X21, [X31 + 0x40]
	0x03D863B0 STP X20, X19, [X31 + 0x50]
	0x03D863B4 ADRP X20, 0x661000
	0x03D863B8 LDRB W8, [X20 + 0xDF2]
	0x03D863BC MOV V8.16B, V3.16B
	0x03D863C0 MOV V9.16B, V2.16B
	0x03D863C4 MOV V10.16B, V1.16B
	0x03D863C8 MOV V11.16B, V0.16B
	0x03D863CC MOV X19, X0
	0x03D863D0 TBNZ X8, 0x0, 0x3D8643C
	0x03D863D4 ADRP X0, 0x3E1000
	0x03D863D8 LDR X0, [X0 + 0x688]
	0x03D863DC BL 0x1C16CF4
	0x03D863E0 ADRP X0, 0x3E1000
	0x03D863E4 LDR X0, [X0 + 0x690]
	0x03D863E8 BL 0x1C16CF4
	0x03D863EC ADRP X0, 0x3E1000
	0x03D863F0 LDR X0, [X0 + 0x698]
	0x03D863F4 BL 0x1C16CF4
	0x03D863F8 ADRP X0, 0x3E1000
	0x03D863FC LDR X0, [X0 + 0x680]
	0x03D86400 BL 0x1C16CF4
	0x03D86404 ADRP X0, 0x3E1000
	0x03D86408 LDR X0, [X0 + 0x6A0]
	0x03D8640C BL 0x1C16CF4
	0x03D86410 ADRP X0, 0x3E1000
	0x03D86414 LDR X0, [X0 + 0x678]
	0x03D86418 BL 0x1C16CF4
	0x03D8641C ADRP X0, 0x3E1000
	0x03D86420 LDR X0, [X0 + 0x6A8]
	0x03D86424 BL 0x1C16CF4
	0x03D86428 ADRP X0, 0x3E1000
	0x03D8642C LDR X0, [X0 + 0x6B0]
	0x03D86430 BL 0x1C16CF4
	0x03D86434 MOVZ W8, 0x1
	0x03D86438 STRB W8, [X20 + 0xDF2]
	0x03D8643C LDR X8, [X19]
	0x03D86440 MOV X0, X19
	0x03D86444 LDR X9, [X8 + 0x8E8]
	0x03D86448 LDR X1, [X8 + 0x8F0]
	0x03D8644C BLR X9
	0x03D86450 ADRP X20, 0x653000
	0x03D86454 LDRB W8, [X20 + 0x5AA]
	0x03D86458 MOV V12.16B, V0.16B
	0x03D8645C CBNZ W8, 0x3D86474
	0x03D86460 ADRP X0, 0x374000
	0x03D86464 LDR X0, [X0 + 0x4B8]
	0x03D86468 BL 0x1C16CF4
	0x03D8646C MOVZ W8, 0x1
	0x03D86470 STRB W8, [X20 + 0x5AA]
	0x03D86474 ADRP X8, 0x374000
	0x03D86478 LDR X8, [X8 + 0x4B8]
	0x03D8647C ADRP X9, 0xFFFFFFFFFCD64000
	0x03D86480 LDR V0, [X9 + 0x240]
	0x03D86484 FABS S1, S12
	0x03D86488 LDR X8, [X8]
	0x03D8648C FMOV S2, W31
	0x03D86490 FMAXNM S1, S1, S2
	0x03D86494 FMUL S0, S1, S0
	0x03D86498 LDR X8, [X8 + 0xB8]
	0x03D8649C FMOV S1, 8
	0x03D864A0 LDR V3, [X8]
	0x03D864A4 FMUL S1, S3, S1
	0x03D864A8 FCMP S0, S1
	0x03D864AC FCSEL S0, S0, S1, GT
	0x03D864B0 FABD S1, S2, S2
	0x03D864B4 FCMP S1, S0
	0x03D864B8 B.PL 0x3D864F8
	0x03D864BC ADRP X8, 0x3E1000
	0x03D864C0 LDR X8, [X8 + 0x688]
	0x03D864C4 MOV X0, X19
	0x03D864C8 MOV V0.16B, V11.16B
	0x03D864CC MOV V1.16B, V10.16B
	0x03D864D0 LDR X1, [X8]
	0x03D864D4 MOV V2.16B, V9.16B
	0x03D864D8 MOV V3.16B, V8.16B
	0x03D864DC LDP X20, X19, [X31 + 0x50]
	0x03D864E0 LDP X22, X21, [X31 + 0x40]
	0x03D864E4 LDP X30, X23, [X31 + 0x30]
	0x03D864E8 LDP D9, D8, [X31 + 0x20]
	0x03D864EC LDP D11, D10, [X31 + 0x10]
	0x03D864F0 LDR V12, [X31], #0x60
	0x03D864F4 B 0x28BD53C
	0x03D864F8 ADRP X8, 0xFFFFFFFFFCD63000
	0x03D864FC LDR V0, [X8 + 0xF9C]
	0x03D86500 FABD S1, S11, S11
	0x03D86504 FCMP S1, S0
	0x03D86508 B.MI 0x3D86670

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x662000
	013 Move X22, 0x3E2000
	014 Move X20, 0x3E2000
	015 Move W8, [X21+3558]
	016 Move X22, [X22+1336]
	017 Move X20, [X20+1320]
	018 Move V8, V2
	019 Move V10, V1
	020 Move V9, V0
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0x3E2000
	027 Move X0, [X0+1544]
	028 Call 0x1C17CF4
	029 Move X0, 0x3E2000
	030 Move X0, [X0+728]
	031 Call 0x1C17CF4
	032 Move X0, 0x3E2000
	033 Move X0, [X0+1336]
	034 Call 0x1C17CF4
	035 Move X0, 0x3E2000
	036 Move X0, [X0+1320]
	037 Call 0x1C17CF4
	038 Move X0, 0x397000
	039 Move X0, [X0+288]
	040 Call 0x1C17CF4
	041 Move X0, 0x36E000
	042 Move X0, [X0+1448]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+3558], W8
	046 Move X1, [X22]
	047 Move X0, X19
	048 Call BaseSlider`1<Single>.get_highValue, X0
	049 Move X1, [X20]
	050 Move X0, X19
	051 Move V11, V0
	052 Call BaseSlider`1<Single>.get_lowValue, X0
	053 Move X0, [X19+1088]
	054 Compare X0, 0
	055 JumpIfEqual {191}
	056 Move X1, X31
	057 Move V12, V0
	058 Call VisualElement.get_resolvedStyle, X0
	059 Compare X0, 0
	060 JumpIfEqual {191}
	061 Move X21, 0x397000
	062 Move X8, [X0]
	063 Move X21, [X21+288]
	064 Move X20, X0
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move X1, [X21]
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move W2, 44
	076 Move X0, X20
	077 Call 0x1C5D788
	078 Move W9, [X10]
	079 Add W9, W9, 44
	080 Add X8, X8, W9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X20
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X0, [X19+1096]
	087 Compare X0, 0
	088 JumpIfEqual {191}
	089 Move X1, X31
	090 Move V13, V0
	091 Call VisualElement.get_resolvedStyle, X0
	092 Compare X0, 0
	093 JumpIfEqual {191}
	094 Move X8, [X0]
	095 Move X1, [X21]
	096 Move X19, X0
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move W2, 44
	107 Move X0, X19
	108 Call 0x1C5D788
	109 Move W9, [X10]
	110 Add W9, W9, 44
	111 Add X8, X8, W9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X20, 0x36E000
	116 Move X20, [X20+1448]
	117 Move X0, X19
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Subtract S1, S11, S12
	120 Subtract S0, S13, S0
	121 NotImplemented "Instruction FDIV not yet implemented."
	122 NotImplemented "Instruction FABS not yet implemented."
	123 Call 0x3EB2C50
	124 NotImplemented "Instruction FCMP not yet implemented."
	125 Move V11, V0
	126 NotImplemented "Instruction FCVT not yet implemented."
	127 Move D1, 4.000000000232831
	128 Move X8, 0x7FF00000
	129 Subtract D0, D1, D0
	130 Move D1, X8
	131 NotImplemented "Instruction FCVTZS not yet implemented."
	132 NotImplemented "Instruction FCMP not yet implemented."
	133 Move W9, 0x80000000
	134 NotImplemented "Instruction CSEL not yet implemented."
	135 Move TEMP, X8
	136 And TEMP, TEMP, -2147483648
	137 Compare TEMP, -2147483648
	138 JumpIfEqual {164}
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move W9, 15
	141 NotImplemented "Instruction CSEL not yet implemented."
	142 Move X19, 0x653000
	143 Move W8, [X19+2595]
	144 Compare W8, 0
	145 JumpIfNotEqual {151}
	146 Move X0, 0x36E000
	147 Move X0, [X0+1448]
	148 Call 0x1C17CF4
	149 Move W8, 1
	150 Move [X19+2595], W8
	151 Move X0, [X20]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move W8, 0x7F800000
	157 NotImplemented "Instruction FRINTM not yet implemented."
	158 Move S1, W8
	159 NotImplemented "Instruction FCVTMS not yet implemented."
	160 NotImplemented "Instruction FCMP not yet implemented."
	161 Move W8, 0x80000000
	162 NotImplemented "Instruction CSEL not yet implemented."
	163 Subtract W8, W31, W8
	164 Move W19, W31
	165 Move X0, [X20]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Subtract S0, S10, S9
	171 Multiply S0, S0, S8
	172 Add S0, S0, S9
	173 NotImplemented "Instruction FCVT not yet implemented."
	174 Move W1, 1
	175 Move W0, W19
	176 Move X2, X31
	177 Call Math.Round, V0, X0, X1
	178 Move X20, [X31+80]
	179 Move X19, [X31+88]
	180 Move X22, [X31+64]
	181 Move X21, [X31+72]
	182 Move X30, [X31+48]
	183 Move D9, [X31+32]
	184 Move D8, [X31+40]
	185 Move D11, [X31+16]
	186 Move D10, [X31+24]
	187 NotImplemented "Instruction INVALID not yet implemented."
	188 Move D13, [X31+96]
	189 Move D12, [X31+104]
	190 Return V0
	191 Call 0x1C17F20

Method: System.Single SliderNormalizeValue(System.Single currentValue, System.Single lowerValue, System.Single higherValue)

Disassembly:
	0x03D85B7C ADRP X0, 0x3E2000
	0x03D85B80 LDR X0, [X0 + 0x5D0]
	0x03D85B84 BL 0x1C16CF4
	0x03D85B88 ADRP X0, 0x3E1000

ISIL:
	001 Subtract S0, S0, S1
	002 Subtract S1, S2, S1
	003 NotImplemented "Instruction FDIV not yet implemented."
	004 Return V0

Method: System.Single ParseStringToValue(System.String previousValue, System.String newValue)

Disassembly:
	0x03D8650C LDR X8, [X19]
	0x03D86510 MOV X0, X19
	0x03D86514 LDR X9, [X8 + 0x8E8]
	0x03D86518 LDR X1, [X8 + 0x8F0]
	0x03D8651C BLR X9
	0x03D86520 ADRP X22, 0x3E1000
	0x03D86524 LDR X22, [X22 + 0x678]
	0x03D86528 MOVZ W9, 0x7F800000
	0x03D8652C FMOV S1, W9
	0x03D86530 FCVTZS W8, S0
	0x03D86534 LDR X1, [X22]
	0x03D86538 FCMP S0, S1
	0x03D8653C MOVZ W9, 0x80000000
	0x03D86540 MOV X0, X19
	0x03D86544 CSEL W21, W9, W8, EQ
	0x03D86548 BL 0x28BB694
	0x03D8654C ADRP X23, 0x3E1000
	0x03D86550 LDR X23, [X23 + 0x680]
	0x03D86554 MOV W20, W0
	0x03D86558 MOV X0, X19
	0x03D8655C LDR X1, [X23]
	0x03D86560 BL 0x28BB730
	0x03D86564 CMP W20, W0
	0x03D86568 B.LE 0x3D86584
	0x03D8656C ADRP X8, 0x3E1000
	0x03D86570 LDR X8, [X8 + 0x6A0]
	0x03D86574 MOV X0, X19
	0x03D86578 LDR X1, [X8]
	0x03D8657C BL 0x28BBB60
	0x03D86580 TBZ X0, 0x0, 0x3D865F4
	0x03D86584 LDR X1, [X22]
	0x03D86588 MOV X0, X19
	0x03D8658C BL 0x28BB694

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x662000
	007 Move X21, 0x3DA000
	008 Move W8, [X22+3559]
	009 Move X21, [X21+1960]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3DA000
	017 Move X0, [X0+1960]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3559], W8
	021 Move X0, [X21]
	022 Move [X31+12], W31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X2, X31, 12
	028 Move X0, X19
	029 Move X1, X20
	030 Move X3, X31
	031 Call UINumericFieldsUtils.TryConvertStringToFloat, X0, X1, X2
	032 Move V0, [X31+12]
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 And W31, W0, 1
	038 Move S1, W31
	039 NotImplemented "Instruction FCSEL not yet implemented."
	040 Move X30, [X31+48]
	041 Return V0

Method: System.Void ComputeValueFromKey(UnityEngine.UIElements.BaseSlider`1/SliderKey<System.Single> sliderKey, System.Boolean isShift)

Disassembly:
	0x03D86590 LDR X1, [X23]
	0x03D86594 MOV W20, W0
	0x03D86598 MOV X0, X19
	0x03D8659C BL 0x28BB730
	0x03D865A0 CMP W20, W0
	0x03D865A4 B.GE 0x3D865C0
	0x03D865A8 ADRP X8, 0x3E1000
	0x03D865AC LDR X8, [X8 + 0x6A0]
	0x03D865B0 MOV X0, X19
	0x03D865B4 LDR X1, [X8]
	0x03D865B8 BL 0x28BBB60
	0x03D865BC TBNZ X0, 0x0, 0x3D865F4
	0x03D865C0 ADRP X8, 0x3E1000
	0x03D865C4 LDR X8, [X8 + 0x698]
	0x03D865C8 MOV X0, X19
	0x03D865CC LDR X1, [X8]
	0x03D865D0 BL 0x28BBA84
	0x03D865D4 CMP W0, 0x1
	0x03D865D8 B.NE 0x3D865F8
	0x03D865DC ADRP X8, 0x3E1000
	0x03D865E0 LDR X8, [X8 + 0x6A0]
	0x03D865E4 MOV X0, X19
	0x03D865E8 LDR X1, [X8]
	0x03D865EC BL 0x28BBB60
	0x03D865F0 TBNZ X0, 0x0, 0x3D865F8
	0x03D865F4 SUB W21, W31, W21
	0x03D865F8 ADRP X20, 0x3E1000
	0x03D865FC LDR X20, [X20 + 0x6A0]
	0x03D86600 FCMP S8, S9
	0x03D86604 FADD S0, S10, S9
	0x03D86608 CSET W22, MI
	0x03D8660C LDR X1, [X20]
	0x03D86610 FCMP S0, S8
	0x03D86614 MOV X0, X19
	0x03D86618 CSET W23, MI
	0x03D8661C BL 0x28BBB60
	0x03D86620 LDR X1, [X20]
	0x03D86624 ANDS W31, W0, 0x1
	0x03D86628 MOV X0, X19
	0x03D8662C CSEL W20, W23, W22, NE
	0x03D86630 BL 0x28BBB60
	0x03D86634 ANDS W31, W0, 0x1
	0x03D86638 CSEL W8, W22, W23, NE
	0x03D8663C CMP W20, 0x1
	0x03D86640 B.NE 0x3D86658
	0x03D86644 LDR X9, [X19 + 0x480]
	0x03D86648 CBZ X9, 0x3D86700
	0x03D8664C LDR W10, [X9 + 0x80]
	0x03D86650 CMP W10, 0x1
	0x03D86654 B.NE 0x3D8668C
	0x03D86658 CBZ W8, 0x3D86670
	0x03D8665C LDR X8, [X19 + 0x480]
	0x03D86660 CBZ X8, 0x3D86700
	0x03D86664 LDR W9, [X8 + 0x80]
	0x03D86668 CMP W9, 0x2
	0x03D8666C B.NE 0x3D866B4
	0x03D86670 LDP X20, X19, [X31 + 0x50]
	0x03D86674 LDP X22, X21, [X31 + 0x40]
	0x03D86678 LDP X30, X23, [X31 + 0x30]
	0x03D8667C LDP D9, D8, [X31 + 0x20]
	0x03D86680 LDP D11, D10, [X31 + 0x10]
	0x03D86684 LDR V12, [X31], #0x60
	0x03D86688 RET
	0x03D8668C MOVZ W8, 0x2
	0x03D86690 STR W8, [X9 + 0x80]
	0x03D86694 LDR X8, [X19]
	0x03D86698 MOV X0, X19
	0x03D8669C LDR X9, [X8 + 0x7E8]
	0x03D866A0 LDR X1, [X8 + 0x7F0]
	0x03D866A4 BLR X9
	0x03D866A8 LDR X8, [X19]
	0x03D866AC SUB W1, W0, W21
	0x03D866B0 B 0x3D866D8
	0x03D866B4 MOVZ W9, 0x1
	0x03D866B8 STR W9, [X8 + 0x80]
	0x03D866BC LDR X8, [X19]
	0x03D866C0 MOV X0, X19
	0x03D866C4 LDR X9, [X8 + 0x7E8]
	0x03D866C8 LDR X1, [X8 + 0x7F0]
	0x03D866CC BLR X9
	0x03D866D0 LDR X8, [X19]
	0x03D866D4 ADD W1, W0, W21
	0x03D866D8 LDR X3, [X8 + 0x7F8]
	0x03D866DC LDR X2, [X8 + 0x800]
	0x03D866E0 MOV X0, X19
	0x03D866E4 LDP X20, X19, [X31 + 0x50]
	0x03D866E8 LDP X22, X21, [X31 + 0x40]
	0x03D866EC LDP X30, X23, [X31 + 0x30]
	0x03D866F0 LDP D9, D8, [X31 + 0x20]
	0x03D866F4 LDP D11, D10, [X31 + 0x10]
	0x03D866F8 LDR V12, [X31], #0x60
	0x03D866FC BR X3
	0x03D86700 BL 0x1C16F20
	0x03D86704 SUB X31, X31, 0x50
	0x03D86708 STP D9, D8, [X31 + 0x10]
	0x03D8670C STP X30, X23, [X31 + 0x20]
	0x03D86710 STP X22, X21, [X31 + 0x30]
	0x03D86714 STP X20, X19, [X31 + 0x40]
	0x03D86718 ADRP X22, 0x661000
	0x03D8671C LDRB W8, [X22 + 0xDF3]
	0x03D86720 MOV W21, W2
	0x03D86724 MOV W20, W1
	0x03D86728 MOV X19, X0
	0x03D8672C TBNZ X8, 0x0, 0x3D86774
	0x03D86730 ADRP X0, 0x3E1000
	0x03D86734 LDR X0, [X0 + 0x6B8]
	0x03D86738 BL 0x1C16CF4
	0x03D8673C ADRP X0, 0x3E1000
	0x03D86740 LDR X0, [X0 + 0x6C0]
	0x03D86744 BL 0x1C16CF4
	0x03D86748 ADRP X0, 0x3E1000
	0x03D8674C LDR X0, [X0 + 0x680]
	0x03D86750 BL 0x1C16CF4
	0x03D86754 ADRP X0, 0x3E1000
	0x03D86758 LDR X0, [X0 + 0x678]
	0x03D8675C BL 0x1C16CF4
	0x03D86760 ADRP X0, 0x3E1000
	0x03D86764 LDR X0, [X0 + 0x650]
	0x03D86768 BL 0x1C16CF4
	0x03D8676C MOVZ W8, 0x1
	0x03D86770 STRB W8, [X22 + 0xDF3]
	0x03D86774 CBZ W20, 0x3D867A0
	0x03D86778 CMP W20, 0x6
	0x03D8677C B.EQ 0x3D867B8
	0x03D86780 CMP W20, 0x1
	0x03D86784 B.NE 0x3D867E0
	0x03D86788 ADRP X8, 0x3E1000
	0x03D8678C LDR X8, [X8 + 0x678]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x662000
	010 Move W8, [X22+3560]
	011 Move W21, W2
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x3E2000
	019 Move X0, [X0+1552]
	020 Call 0x1C17CF4
	021 Move X0, 0x3E2000
	022 Move X0, [X0+1560]
	023 Call 0x1C17CF4
	024 Move X0, 0x3E2000
	025 Move X0, [X0+1336]
	026 Call 0x1C17CF4
	027 Move X0, 0x3E2000
	028 Move X0, [X0+1320]
	029 Call 0x1C17CF4
	030 Move X0, 0x3E2000
	031 Move X0, [X0+1528]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+3560], W8
	035 Compare W20, 0
	036 JumpIfEqual {44}
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, 0x3E2000
	040 Move X8, [X8+1320]
	041 Move X0, X19
	042 Move X1, [X8]
	043 Call BaseSlider`1<Single>.get_lowValue, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X30, [X31+24]
	049 Move D9, [X31+8]
	050 Move D8, [X31+16]
	051 Move V10, [X31+64]
	052 Return 
	053 Move X8, 0x3E2000
	054 Move X8, [X8+1336]
	055 Move X0, X19
	056 Move X1, [X8]
	057 Call BaseSlider`1<Single>.get_highValue, X0
	058 Move X8, 0x3E2000
	059 Move X8, [X8+1336]
	060 Move X0, X19
	061 Move X1, [X8]
	062 Call BaseSlider`1<Single>.get_highValue, X0
	063 Move X8, 0x3E2000
	064 Move X8, [X8+1320]
	065 Move X0, X19
	066 Move V8, V0
	067 Move X1, [X8]
	068 Call BaseSlider`1<Single>.get_lowValue, X0
	069 Move X22, 0x3E2000
	070 Move X22, [X22+1528]
	071 Move X8, -53063680
	072 Move V1, [X8+816]
	073 Subtract S0, S8, S0
	074 Move X0, [X22]
	075 Multiply S0, S0, S1
	076 NotImplemented "Instruction FABS not yet implemented."
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, 0x3E2000
	082 Move X8, [X8+1552]
	083 Move V0, V8
	084 Move X0, [X8]
	085 Call BaseSlider`1<Single>.GetClosestPowerOfTen, V0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move V8, V0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X8, [X19]
	090 Move X0, X19
	091 Move X9, [X8+2280]
	092 Move X1, [X8+2288]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Multiply S9, S8, S0
	095 Move S0, 10
	096 Multiply S0, S8, S0
	097 And W31, W21, 1
	098 NotImplemented "Instruction FCSEL not yet implemented."
	099 Move X8, [X19]
	100 And W9, W20, 0xFFFFFFFE
	101 NotImplemented "Instruction FNEG not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X10, [X8+2024]
	104 Move X1, [X8+2032]
	105 Move X0, X19
	106 NotImplemented "Instruction FCSEL not yet implemented."
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X0, [X22]
	109 Move V8, V0
	110 NotImplemented "Instruction FABS not yet implemented."
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Move X8, -53063680
	116 Move V0, [X8+184]
	117 Move X8, 0x3E2000
	118 Move X8, [X8+1560]
	119 Move V1, V9
	120 Multiply S0, S10, S0
	121 Add S0, S0, S8
	122 Move X0, [X8]
	123 Call BaseSlider`1<Single>.RoundToMultipleOf, V0, V1
	124 Move X8, [X19]
	125 Move X0, X19
	126 Move X20, [X31+48]
	127 Move X19, [X31+56]
	128 Move X22, [X31+32]
	129 Move X21, [X31+40]
	130 Move X2, [X8+2040]
	131 Move X1, [X8+2048]
	132 Move X30, [X31+24]
	133 Move D9, [X31+8]
	134 Move D8, [X31+16]
	135 Move V10, [X31+64]
	136 CallNoReturn X2

Method: System.Void .cctor()

Disassembly:
	0x03D86790 MOV X0, X19
	0x03D86794 LDR X1, [X8]
	0x03D86798 BL 0x28BB694
	0x03D8679C B 0x3D867CC
	0x03D867A0 LDP X20, X19, [X31 + 0x40]
	0x03D867A4 LDP X22, X21, [X31 + 0x30]
	0x03D867A8 LDP X30, X23, [X31 + 0x20]
	0x03D867AC LDP D9, D8, [X31 + 0x10]
	0x03D867B0 ADD X31, X31, 0x50
	0x03D867B4 RET
	0x03D867B8 ADRP X8, 0x3E1000
	0x03D867BC LDR X8, [X8 + 0x680]
	0x03D867C0 MOV X0, X19
	0x03D867C4 LDR X1, [X8]
	0x03D867C8 BL 0x28BB730
	0x03D867CC LDR X8, [X19]
	0x03D867D0 MOV W1, W0
	0x03D867D4 LDR X3, [X8 + 0x7F8]
	0x03D867D8 LDR X2, [X8 + 0x800]
	0x03D867DC B 0x3D869C8
	0x03D867E0 ADRP X8, 0x3E1000
	0x03D867E4 LDR X8, [X8 + 0x680]
	0x03D867E8 MOV X0, X19
	0x03D867EC LDR X1, [X8]
	0x03D867F0 BL 0x28BB730
	0x03D867F4 ADRP X8, 0x3E1000
	0x03D867F8 LDR X8, [X8 + 0x678]
	0x03D867FC MOV W22, W0
	0x03D86800 MOV X0, X19
	0x03D86804 LDR X1, [X8]
	0x03D86808 BL 0x28BB694
	0x03D8680C ADRP X23, 0x3E1000
	0x03D86810 LDR X23, [X23 + 0x650]
	0x03D86814 MOV W8, W0
	0x03D86818 ADRP X9, 0xFFFFFFFFFCD64000
	0x03D8681C LDR V0, [X9 + 0x330]
	0x03D86820 LDR X0, [X23]
	0x03D86824 SUB W8, W22, W8
	0x03D86828 SCVTF S1, W8
	0x03D8682C FMUL S0, S1, S0
	0x03D86830 LDR W9, [X0 + 0xE0]
	0x03D86834 FABS S8, S0
	0x03D86838 CBNZ W9, 0x3D86840
	0x03D8683C BL 0x1C16DFC
	0x03D86840 ADRP X8, 0x3E1000
	0x03D86844 LDR X8, [X8 + 0x6B8]
	0x03D86848 MOV V0.16B, V8.16B
	0x03D8684C LDR X0, [X8]
	0x03D86850 BL 0x28BC278
	0x03D86854 FMOV S1, 1
	0x03D86858 CMP W20, 0x5
	0x03D8685C FMAX S8, S0, S1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x662000
	008 Move X22, 0x3E2000
	009 Move X19, 0x3E2000
	010 Move X21, 0x397000
	011 Move X20, 0x397000
	012 Move W8, [X23+3561]
	013 Move X22, [X22+1400]
	014 Move X19, [X19+1424]
	015 Move X21, [X21+3768]
	016 Move X20, [X20+3776]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x3E2000
	022 Move X0, [X0+1424]
	023 Call 0x1C17CF4
	024 Move X0, 0x397000
	025 Move X0, [X0+3768]
	026 Call 0x1C17CF4
	027 Move X0, 0x3E2000
	028 Move X0, [X0+1400]
	029 Call 0x1C17CF4
	030 Move X0, 0x397000
	031 Move X0, [X0+3776]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+3561], W8
	035 Move X8, [X19]
	036 Move X9, [X22]
	037 Move X2, X31
	038 Move X8, [X8+184]
	039 Move [X8], X9
	040 Move X8, [X19]
	041 Move X1, [X21]
	042 Move X8, [X8+184]
	043 Move X0, [X8]
	044 Call String.Concat, X0, X1
	045 Move X8, [X19]
	046 Move X2, X31
	047 Move X8, [X8+184]
	048 Move [X8+8], X0
	049 Move X0, [X8]
	050 Move X1, [X20]
	051 Call String.Concat, X0, X1
	052 Move X8, [X19]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X8, [X8+184]
	058 Move [X8+16], X0
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 

