Type: UnityEngine.UIElements.DefaultTreeViewController`1

Method: UnityEngine.UIElements.TreeDataController`1<T> get_treeDataController()

Disassembly:
	0x029B4788 CBZ X0, 0x29B47A0
	0x029B478C LDR X8, [X3 + 0x20]
	0x029B4790 LDR X8, [X8 + 0xC0]
	0x029B4794 LDR X3, [X8 + 0x68]
	0x029B4798 LDR X30, [X31], #0x10
	0x029B479C B 0x301C538
	0x029B47A0 BL 0x1C16F20
	0x029B47A4 SUB X31, X31, 0x50
	0x029B47A8 STP X30, X19, [X31 + 0x40]
	0x029B47AC LDR X0, [X0 + 0x10]
	0x029B47B0 CBZ X0, 0x29B4804
	0x029B47B4 LDR X8, [X1 + 0x20]
	0x029B47B8 MOV X19, X1
	0x029B47BC LDR X8, [X8 + 0xC0]
	0x029B47C0 LDR X1, [X8 + 0x70]
	0x029B47C4 ADD X8, X31, 0x0
	0x029B47C8 BL 0x301CB58
	0x029B47CC LDR X8, [X31 + 0x10]
	0x029B47D0 LDR V0, [X31]
	0x029B47D4 ADD X1, X31, 0x0
	0x029B47D8 STR X8, [X31 + 0x30]
	0x029B47DC STR V0, [X31 + 0x2]
	0x029B47E0 STR V0, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+88]
	006 Compare X21, 0
	007 JumpIfNotEqual {26}
	008 Move X8, [X1+32]
	009 Move X19, X0
	010 Move X20, X1
	011 Move X8, [X8+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X20+32]
	021 Move X21, X0
	022 Move X8, [X8+192]
	023 Move X1, [X8+16]
	024 Call 0x26FCBB8, X0
	025 Move [X19+88], X21
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X0, X21
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Collections.IList get_itemsSource()

Disassembly:
	0x029B47E4 STR X8, [X31 + 0x10]
	0x029B47E8 LDR X8, [X19 + 0x20]
	0x029B47EC LDR X8, [X8 + 0xC0]
	0x029B47F0 LDR X0, [X8 + 0x78]
	0x029B47F4 BL 0x1C16E04

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move X1, X31
	004 Call BaseTreeViewController.get_itemsSource, X0
	005 Return X0
	006 Move [X31-16], X30
	007 Call 0x1C17F20

Method: System.Void set_itemsSource(System.Collections.IList value)

Disassembly:
	0x029B47F8 LDP X30, X19, [X31 + 0x40]
	0x029B47FC ADD X31, X31, 0x50
	0x029B4800 RET
	0x029B4804 BL 0x1C16F20
	0x029B4808 STR X30, [X31 - 0x10]!
	0x029B480C LDR X0, [X0 + 0x10]
	0x029B4810 CBZ X0, 0x29B4828
	0x029B4814 LDR X8, [X3 + 0x20]
	0x029B4818 LDR X8, [X8 + 0xC0]
	0x029B481C LDR X3, [X8 + 0x88]
	0x029B4820 LDR X30, [X31], #0x10
	0x029B4824 B 0x301CEEC
	0x029B4828 BL 0x1C16F20
	0x029B482C STR X30, [X31 - 0x10]!
	0x029B4830 LDR X0, [X0 + 0x10]
	0x029B4834 CBZ X0, 0x29B484C
	0x029B4838 LDR X8, [X2 + 0x20]
	0x029B483C LDR X8, [X8 + 0xC0]
	0x029B4840 LDR X2, [X8 + 0x90]
	0x029B4844 LDR X30, [X31], #0x10
	0x029B4848 B 0x301D7A8
	0x029B484C BL 0x1C16F20
	0x029B4850 STR X30, [X31 - 0x10]!
	0x029B4854 LDR X0, [X0 + 0x10]
	0x029B4858 CBZ X0, 0x29B4870
	0x029B485C LDR X8, [X2 + 0x20]
	0x029B4860 LDR X8, [X8 + 0xC0]
	0x029B4864 LDR X2, [X8 + 0x98]
	0x029B4868 LDR X30, [X31], #0x10
	0x029B486C B 0x301DA48
	0x029B4870 BL 0x1C16F20
	0x029B4874 LDR X8, [X1 + 0x20]
	0x029B4878 LDR X8, [X8 + 0xC0]
	0x029B487C LDR X1, [X8 + 0xA0]
	0x029B4880 B 0x29B47A4
	0x029B4884 LDR X8, [X1 + 0x20]
	0x029B4888 LDR X8, [X8 + 0xC0]
	0x029B488C LDR X8, [X8 + 0xA8]
	0x029B4890 LDR X8, [X8 + 0x20]
	0x029B4894 LDR X8, [X8 + 0xC0]
	0x029B4898 LDR X1, [X8 + 0xA0]
	0x029B489C B 0x29B47A4
	0x029B48A0 LDR X0, [X0 + 0x10]
	0x029B48A4 RET
	0x029B48A8 STR X30, [X31 - 0x10]!
	0x029B48AC LDR X0, [X0 + 0x18]
	0x029B48B0 MOV X1, X31
	0x029B48B4 BL 0x32277A8
	0x029B48B8 ORN W8, W31, W0, 0x0
	0x029B48BC AND W0, W8, 0x1
	0x029B48C0 LDR X30, [X31], #0x10
	0x029B48C4 RET
	0x029B48C8 STR X30, [X31 - 0x10]!
	0x029B48CC LDR X0, [X0 + 0x20]
	0x029B48D0 MOV X1, X31
	0x029B48D4 BL 0x32277A8
	0x029B48D8 ORN W8, W31, W0, 0x0
	0x029B48DC AND W0, W8, 0x1
	0x029B48E0 LDR X30, [X31], #0x10
	0x029B48E4 RET
	0x029B48E8 LDR X0, [X0 + 0x18]
	0x029B48EC RET
	0x029B48F0 LDR X0, [X0 + 0x20]
	0x029B48F4 RET
	0x029B48F8 MOV X1, X31
	0x029B48FC B 0x33BDD8C
	0x029B4900 STR X30, [X31 - 0x10]!
	0x029B4904 LDR X0, [X0 + 0x10]
	0x029B4908 CBZ X0, 0x29B4924
	0x029B490C LDR X8, [X1 + 0x20]
	0x029B4910 LDR X8, [X8 + 0xC0]
	0x029B4914 LDR X1, [X8 + 0x10]
	0x029B4918 LDR X2, [X1]
	0x029B491C LDR X30, [X31], #0x10
	0x029B4920 BR X2
	0x029B4924 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1A27000
	007 Move W8, [X22+4036]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x1740000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x1740000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move X0, 0x176B000
	022 Move X0, [X0+1560]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+4036], W8
	026 Move X8, [X20+32]
	027 Move X8, [X8+192]
	028 Compare X21, 0
	029 JumpIfEqual {48}
	030 Move X1, [X8+32]
	031 Move W8, [X1+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X1
	037 Call 0x1C5D684
	038 Move X1, X0
	039 Move X0, X21
	040 Call 0x1C17E00
	041 Move X8, [X20+32]
	042 Move X8, [X8+192]
	043 Compare X0, 0
	044 JumpIfEqual {56}
	045 Move X2, [X8+24]
	046 Move X1, X0
	047 Move X0, X19
	048 Move X2, [X8+24]
	049 Move X0, X19
	050 Move X1, X31
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X9, 0x1740000
	057 Move X9, [X9+1728]
	058 Move X19, [X8+40]
	059 Move X0, [X9]
	060 Move W9, [X0+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X1, X31
	066 Call Type.GetTypeFromHandle, X0
	067 Move X8, 0x176B000
	068 Move X8, [X8+1560]
	069 Move X1, X0
	070 Move X2, X31
	071 Move X8, [X8]
	072 Move X0, X8
	073 Call String.Format, X0, X1
	074 Move X8, 0x1740000
	075 Move X8, [X8+2600]
	076 Move X19, X0
	077 Move X8, [X8]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X1, X31
	089 Move X30, [X31+48]
	090 Call Debug.LogError, X0
	091 Return 

Method: System.Void SetRootItems(System.Collections.Generic.IList`1<UnityEngine.UIElements.TreeViewItemData`1<T>> items)

Disassembly:
	0x029B4928 STP X30, X19, [X31 - 0x10]!
	0x029B492C LDR X19, [X0 + 0x10]
	0x029B4930 CBZ X19, 0x29B49B0
	0x029B4934 LDR X8, [X1 + 0x20]
	0x029B4938 LDR X8, [X8 + 0xC0]
	0x029B493C LDR X1, [X8 + 0x18]
	0x029B4940 LDRB W8, [X1 + 0x135]
	0x029B4944 TBNZ X8, 0x0, 0x29B4954
	0x029B4948 MOV X0, X1
	0x029B494C BL 0x1C5C684
	0x029B4950 MOV X1, X0
	0x029B4954 LDR X8, [X19]
	0x029B4958 LDRH W9, [X8 + 0x12E]
	0x029B495C CBZ X9, 0x29B4980
	0x029B4960 LDR X10, [X8 + 0xB0]
	0x029B4964 ADD X10, X10, 0x8
	0x029B4968 LDUR X11, [X10 - 0x8]
	0x029B496C CMP X11, X1
	0x029B4970 B.EQ 0x29B4990
	0x029B4974 SUBS X9, X9, 0x1
	0x029B4978 ADD X10, X10, 0x10
	0x029B497C B.NE 0x29B4968
	0x029B4980 MOVZ W2, 0x1
	0x029B4984 MOV X0, X19
	0x029B4988 BL 0x1C5C788
	0x029B498C B 0x29B49A0
	0x029B4990 LDR W9, [X10]
	0x029B4994 ADD W9, W9, 0x1
	0x029B4998 ADD X8, X8, W9, 0x4, SXTW
	0x029B499C ADD X0, X8, 0x138
	0x029B49A0 LDP X2, X1, [X0]
	0x029B49A4 MOV X0, X19
	0x029B49A8 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {41}
	007 Move X20, X1
	008 Move X1, X31
	009 Move X21, X2
	010 Move X19, X0
	011 Call BaseTreeViewController.get_itemsSource, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X21+32]
	014 Move X0, X19
	015 Move X8, [X8+192]
	016 Move X1, [X8+48]
	017 Call 0x29B4788, X0
	018 Compare X0, 0
	019 JumpIfEqual {41}
	020 Move X8, [X21+32]
	021 Move X1, X20
	022 Move X8, [X8+192]
	023 Move X2, [X8+56]
	024 Call 0x26FC914, X0, X1
	025 Move X0, X19
	026 Move X1, X31
	027 Call BaseTreeViewController.RebuildTree, X0
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X1, X31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call CollectionViewController.RaiseItemsSourceChanged, X0
	035 Return 
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Call 0x1C17F20

Method: System.Object GetItemForIndex(System.Int32 index)

Disassembly:
	0x029B49AC BR X2
	0x029B49B0 BL 0x1C16F20
	0x029B49B4 STP X29, X30, [X31 - 0x30]!
	0x029B49B8 STP X22, X21, [X31 + 0x10]
	0x029B49BC STP X20, X19, [X31 + 0x20]
	0x029B49C0 ADD X29, X31, 0x0
	0x029B49C4 SUB X31, X31, 0x20
	0x029B49C8 MRS X21, 0xC000
	0x029B49CC LDR X8, [X21 + 0x28]
	0x029B49D0 ADD X9, X31, 0x0
	0x029B49D4 STUR X8, [X29 - 0x8]
	0x029B49D8 STUR X1, [X29 - 0x20]
	0x029B49DC LDR X22, [X2 + 0x20]
	0x029B49E0 LDR X8, [X22 + 0xC0]
	0x029B49E4 LDR X8, [X8 + 0x28]
	0x029B49E8 LDR W2, [X8 + 0xFC]
	0x029B49EC ADD X10, X2, 0xF
	0x029B49F0 AND X10, X10, 0x1FFFFFFFF
	0x029B49F4 SUB X20, X9, X10
	0x029B49F8 ADD X31, X20, 0x0
	0x029B49FC LDR W8, [X8 + 0x28]
	0x029B4A00 LDR X19, [X0 + 0x10]
	0x029B4A04 MOV X0, X20
	0x029B4A08 CMP W8, 0x0
	0x029B4A0C SUB X8, X29, 0x20
	0x029B4A10 CSEL X1, X1, X8, LT
	0x029B4A14 BL 0x3EB1AC0
	0x029B4A18 CBZ X19, 0x29B4A74

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move W21, W1
	008 Move X19, X2
	009 Move X22, X0
	010 Move X8, [X8+192]
	011 Move X1, [X8+48]
	012 Call 0x29B4788, X0
	013 Compare X22, 0
	014 JumpIfEqual {36}
	015 Move X8, [X22]
	016 Move X20, X0
	017 Move X0, X22
	018 Move W1, W21
	019 Move X9, [X8+504]
	020 Move X2, [X8+512]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare X20, 0
	023 JumpIfEqual {36}
	024 Move X8, [X19+32]
	025 Move W1, W0
	026 Move X0, X20
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X8, [X8+192]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, [X8+64]
	033 Move X30, [X31+48]
	034 Call 0x26FC950, X0, X1
	035 Return X0
	036 Call 0x1C17F20

Method: System.Int32 GetParentId(System.Int32 id)

Disassembly:
	0x029B4A1C LDR X8, [X22 + 0xC0]
	0x029B4A20 LDP X9, X1, [X8 + 0x28]
	0x029B4A24 LDR W8, [X9 + 0x28]
	0x029B4A28 LDR X0, [X1]
	0x029B4A2C TBNZ X8, 0x1F, 0x29B4A34
	0x029B4A30 LDR X20, [X20]
	0x029B4A34 STUR X20, [X29 - 0x18]
	0x029B4A38 LDR X8, [X1 + 0x10]
	0x029B4A3C SUB X3, X29, 0x18
	0x029B4A40 SUB X4, X29, 0xC
	0x029B4A44 MOV X2, X19
	0x029B4A48 BLR X8
	0x029B4A4C LDUR W0, [X29 - 0xC]
	0x029B4A50 LDR X8, [X21 + 0x28]
	0x029B4A54 LDUR X9, [X29 - 0x8]
	0x029B4A58 CMP X8, X9
	0x029B4A5C B.NE 0x29B4A78

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move W19, W1
	006 Move X20, X2
	007 Move X8, [X8+192]
	008 Move X1, [X8+48]
	009 Call 0x29B4788, X0
	010 Compare X0, 0
	011 JumpIfEqual {21}
	012 Move X8, [X20+32]
	013 Move W1, W19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X2, [X8+80]
	018 Move X30, [X31+32]
	019 Call 0x26FC980, X0, X1
	020 Return X0
	021 Call 0x1C17F20

Method: System.Boolean HasChildren(System.Int32 id)

Disassembly:
	0x029B4A60 ADD X31, X29, 0x0
	0x029B4A64 LDP X20, X19, [X31 + 0x20]
	0x029B4A68 LDP X22, X21, [X31 + 0x10]
	0x029B4A6C LDP X29, X30, [X31], #0x30
	0x029B4A70 RET
	0x029B4A74 BL 0x1C16F20
	0x029B4A78 BL 0x3EB1B20
	0x029B4A7C STP X29, X30, [X31 - 0x30]!
	0x029B4A80 STP X22, X21, [X31 + 0x10]
	0x029B4A84 STP X20, X19, [X31 + 0x20]
	0x029B4A88 ADD X29, X31, 0x0
	0x029B4A8C SUB X31, X31, 0x20
	0x029B4A90 MRS X22, 0xC000
	0x029B4A94 LDR X8, [X22 + 0x28]
	0x029B4A98 MOV X19, X2
	0x029B4A9C STUR X8, [X29 - 0x8]
	0x029B4AA0 LDR X8, [X3 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move W19, W1
	006 Move X20, X2
	007 Move X8, [X8+192]
	008 Move X1, [X8+48]
	009 Call 0x29B4788, X0
	010 Compare X0, 0
	011 JumpIfEqual {21}
	012 Move X8, [X20+32]
	013 Move W1, W19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X2, [X8+88]
	018 Move X30, [X31+32]
	019 Call 0x26FC988, X0, X1
	020 Return X0
	021 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<System.Int32> GetChildrenIds(System.Int32 id)

Disassembly:
	0x029B4AA4 LDR X8, [X8 + 0xC0]
	0x029B4AA8 LDR X9, [X8 + 0x28]
	0x029B4AAC LDR W20, [X9 + 0xFC]
	0x029B4AB0 ADD X9, X31, 0x0
	0x029B4AB4 ADD X10, X20, 0xF
	0x029B4AB8 AND X10, X10, 0x1FFFFFFFF
	0x029B4ABC SUB X21, X9, X10
	0x029B4AC0 ADD X31, X21, 0x0
	0x029B4AC4 LDR X2, [X0 + 0x10]
	0x029B4AC8 CBZ X2, 0x29B4B28
	0x029B4ACC LDR X8, [X8 + 0x38]
	0x029B4AD0 SUB X9, X29, 0xC
	0x029B4AD4 SUB X3, X29, 0x20
	0x029B4AD8 MOV X4, X21
	0x029B4ADC LDR X0, [X8]
	0x029B4AE0 STUR W1, [X29 - 0xC]
	0x029B4AE4 STP X9, X21, [X29 - 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move W19, W1
	006 Move X20, X2
	007 Move X8, [X8+192]
	008 Move X1, [X8+48]
	009 Call 0x29B4788, X0
	010 Compare X0, 0
	011 JumpIfEqual {21}
	012 Move X8, [X20+32]
	013 Move W1, W19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X2, [X8+96]
	018 Move X30, [X31+32]
	019 Call 0x26FCA64, X0, X1
	020 Return X0
	021 Call 0x1C17F20

Method: System.Void Move(System.Int32 id, System.Int32 newParentId, System.Int32 childIndex = -1, System.Boolean rebuildTree = True)

Disassembly:
	0x029B4AE8 LDR X9, [X8 + 0x10]
	0x029B4AEC MOV X1, X8
	0x029B4AF0 BLR X9
	0x029B4AF4 MOV X0, X19
	0x029B4AF8 MOV X1, X21
	0x029B4AFC MOV X2, X20
	0x029B4B00 BL 0x3EB1AC0
	0x029B4B04 LDR X8, [X22 + 0x28]
	0x029B4B08 LDUR X9, [X29 - 0x8]
	0x029B4B0C CMP X8, X9
	0x029B4B10 B.NE 0x29B4B2C
	0x029B4B14 ADD X31, X29, 0x0
	0x029B4B18 LDP X20, X19, [X31 + 0x20]
	0x029B4B1C LDP X22, X21, [X31 + 0x10]
	0x029B4B20 LDP X29, X30, [X31], #0x30
	0x029B4B24 RET
	0x029B4B28 BL 0x1C16F20
	0x029B4B2C BL 0x3EB1B20
	0x029B4B30 STP X29, X30, [X31 - 0x40]!
	0x029B4B34 STR X23, [X31 + 0x10]
	0x029B4B38 STP X22, X21, [X31 + 0x20]
	0x029B4B3C STP X20, X19, [X31 + 0x30]
	0x029B4B40 ADD X29, X31, 0x0
	0x029B4B44 SUB X31, X31, 0x30
	0x029B4B48 MRS X22, 0xC000
	0x029B4B4C LDR X8, [X22 + 0x28]
	0x029B4B50 ADD X10, X31, 0x0
	0x029B4B54 MOV W19, W1
	0x029B4B58 STUR X8, [X29 - 0x8]
	0x029B4B5C STUR X2, [X29 - 0x28]
	0x029B4B60 LDR X23, [X3 + 0x20]
	0x029B4B64 LDR X8, [X23 + 0xC0]
	0x029B4B68 LDR X9, [X8 + 0x28]
	0x029B4B6C LDR W8, [X9 + 0xFC]
	0x029B4B70 ADD X11, X8, 0xF
	0x029B4B74 AND X11, X11, 0x1FFFFFFFF
	0x029B4B78 SUB X20, X10, X11
	0x029B4B7C ADD X31, X20, 0x0
	0x029B4B80 LDR W9, [X9 + 0x28]
	0x029B4B84 LDR X21, [X0 + 0x10]
	0x029B4B88 MOV X0, X20
	0x029B4B8C CMP W9, 0x0
	0x029B4B90 SUB X9, X29, 0x28
	0x029B4B94 CSEL X1, X2, X9, LT
	0x029B4B98 MOV X2, X8
	0x029B4B9C BL 0x3EB1AC0
	0x029B4BA0 CBZ X21, 0x29B4C08
	0x029B4BA4 LDR X8, [X23 + 0xC0]
	0x029B4BA8 LDR X9, [X8 + 0x28]
	0x029B4BAC LDR X1, [X8 + 0x40]
	0x029B4BB0 LDR W8, [X9 + 0x28]
	0x029B4BB4 LDR X0, [X1]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, [X5+32]
	010 Move W23, W3
	011 Move W20, W1
	012 Move W19, W2
	013 Move X8, [X8+192]
	014 Move W1, W2
	015 Move W2, W20
	016 Move X24, X5
	017 Move X3, [X8+104]
	018 Move W22, W4
	019 Move X21, X0
	020 Call 0x29B4BB8, X0, X1, X2
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {61}
	025 Move X8, [X24+32]
	026 Move X0, X21
	027 Move X8, [X8+192]
	028 Move X1, [X8+48]
	029 Call 0x29B4788, X0
	030 Compare X0, 0
	031 JumpIfEqual {69}
	032 Move X8, [X24+32]
	033 Move W1, W20
	034 Move W2, W19
	035 Move W3, W23
	036 Move X8, [X8+192]
	037 Move X4, [X8+112]
	038 Call 0x26FCAA4, X0, X1, X2, X3
	039 Move TEMP, X22
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {61}
	043 Compare X21, 0
	044 JumpIfEqual {69}
	045 Move X0, X21
	046 Move X1, X31
	047 Call BaseTreeViewController.RebuildTree, X0
	048 Move X0, X21
	049 Move W1, W20
	050 Move W2, W19
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 Move X3, X31
	058 Move X30, [X31+64]
	059 Call BaseTreeViewController.RaiseItemParentChanged, X0, X1, X2
	060 Return 
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 Return 
	069 Call 0x1C17F20

Method: System.Boolean IsChildOf(System.Int32 childId, System.Int32 id)

Disassembly:
	0x029B4BB8 TBNZ X8, 0x1F, 0x29B4BC0
	0x029B4BBC LDR X20, [X20]
	0x029B4BC0 SUB X8, X29, 0xC
	0x029B4BC4 STUR W19, [X29 - 0xC]
	0x029B4BC8 STP X8, X20, [X29 - 0x20]
	0x029B4BCC LDR X8, [X1 + 0x10]
	0x029B4BD0 SUB X3, X29, 0x20
	0x029B4BD4 MOV X2, X21
	0x029B4BD8 MOV X4, X20
	0x029B4BDC BLR X8
	0x029B4BE0 LDR X8, [X22 + 0x28]
	0x029B4BE4 LDUR X9, [X29 - 0x8]
	0x029B4BE8 CMP X8, X9
	0x029B4BEC B.NE 0x29B4C0C
	0x029B4BF0 ADD X31, X29, 0x0
	0x029B4BF4 LDP X20, X19, [X31 + 0x30]
	0x029B4BF8 LDP X22, X21, [X31 + 0x20]
	0x029B4BFC LDR X23, [X31 + 0x10]
	0x029B4C00 LDP X29, X30, [X31], #0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move W20, W1
	007 Move X21, X3
	008 Move W19, W2
	009 Move X8, [X8+192]
	010 Move X1, [X8+48]
	011 Call 0x29B4788, X0
	012 Compare X0, 0
	013 JumpIfEqual {25}
	014 Move X8, [X21+32]
	015 Move W1, W20
	016 Move W2, W19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X8, [X8+192]
	020 Move X3, [X8+120]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call 0x26FCB34, X0, X1, X2
	024 Return X0
	025 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<System.Int32> GetAllItemIds(System.Collections.Generic.IEnumerable`1<System.Int32> rootIds = null)

Disassembly:
	0x029B4C04 RET
	0x029B4C08 BL 0x1C16F20
	0x029B4C0C BL 0x3EB1B20
	0x029B4C10 STP X29, X30, [X31 - 0x30]!
	0x029B4C14 STP X22, X21, [X31 + 0x10]
	0x029B4C18 STP X20, X19, [X31 + 0x20]
	0x029B4C1C ADD X29, X31, 0x0
	0x029B4C20 SUB X31, X31, 0x20
	0x029B4C24 MRS X21, 0xC000
	0x029B4C28 LDR X8, [X21 + 0x28]
	0x029B4C2C ADD X9, X31, 0x0
	0x029B4C30 STUR X8, [X29 - 0x8]
	0x029B4C34 STUR X1, [X29 - 0x18]
	0x029B4C38 LDR X22, [X2 + 0x20]
	0x029B4C3C LDR X8, [X22 + 0xC0]
	0x029B4C40 LDR X8, [X8 + 0x28]
	0x029B4C44 LDR W2, [X8 + 0xFC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X2
	007 Move X8, [X8+192]
	008 Move X1, [X8+48]
	009 Call 0x29B4788, X0
	010 Compare X0, 0
	011 JumpIfEqual {21}
	012 Move X8, [X20+32]
	013 Move X1, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X2, [X8+128]
	018 Move X30, [X31+32]
	019 Call 0x26FCB48, X0, X1
	020 Return X0
	021 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x029B4C48 ADD X10, X2, 0xF
	0x029B4C4C AND X10, X10, 0x1FFFFFFFF

ISIL:
	001 Move X1, X31
	002 Call TreeViewController..ctor, X0
	003 Return 

