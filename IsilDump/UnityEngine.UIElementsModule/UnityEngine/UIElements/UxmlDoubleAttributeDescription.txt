Type: UnityEngine.UIElements.UxmlDoubleAttributeDescription

Method: System.Void .ctor()

Disassembly:
	0x03E1C9B8 LDR X0, [X0 + 0xA48]
	0x03E1C9BC BL 0x1C16CF4
	0x03E1C9C0 MOVZ W8, 0x1
	0x03E1C9C4 STRB W8, [X22 + 0x41D]
	0x03E1C9C8 LDP V1, V0, [X21]
	0x03E1C9CC LDR X0, [X23]
	0x03E1C9D0 STP V1, V0, [X31 + 0x40]
	0x03E1C9D4 LDR W8, [X0 + 0xE0]
	0x03E1C9D8 CBNZ W8, 0x3E1C9E4
	0x03E1C9DC BL 0x1C16DFC
	0x03E1C9E0 LDR X0, [X23]
	0x03E1C9E4 LDR X8, [X0 + 0xB8]
	0x03E1C9E8 LDR X21, [X8 + 0x8]
	0x03E1C9EC CBZ X21, 0x3E1C9F8
	0x03E1C9F0 LDP V0, V1, [X31 + 0x40]
	0x03E1C9F4 B 0x3E1CA54
	0x03E1C9F8 LDP V0, V1, [X31 + 0x40]
	0x03E1C9FC STP V0, V1, [X31]
	0x03E1CA00 LDR W8, [X0 + 0xE0]
	0x03E1CA04 CBNZ W8, 0x3E1CA10
	0x03E1CA08 BL 0x1C16DFC
	0x03E1CA0C LDR X0, [X23]
	0x03E1CA10 ADRP X9, 0x34E000
	0x03E1CA14 LDR X8, [X0 + 0xB8]
	0x03E1CA18 LDR X9, [X9 + 0xA30]
	0x03E1CA1C LDR X22, [X8]
	0x03E1CA20 LDR X0, [X9]
	0x03E1CA24 BL 0x1C16F10
	0x03E1CA28 ADRP X8, 0x34E000
	0x03E1CA2C LDR X8, [X8 + 0xA40]
	0x03E1CA30 MOV X1, X22
	0x03E1CA34 MOV X3, X31
	0x03E1CA38 MOV X21, X0
	0x03E1CA3C LDR X2, [X8]
	0x03E1CA40 BL 0x2D38F10
	0x03E1CA44 LDR X8, [X23]
	0x03E1CA48 LDR X8, [X8 + 0xB8]
	0x03E1CA4C STR X21, [X8 + 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5CD000
	008 Move X23, 0x34F000
	009 Move X21, 0x32B000
	010 Move X20, 0x302000
	011 Move W8, [X22+1035]
	012 Move X23, [X23+2304]
	013 Move X21, [X21+1536]
	014 Move X20, [X20+2752]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x34F000
	021 Move X0, [X0+2304]
	022 Call 0x1C17CF4
	023 Move X0, 0x34F000
	024 Move X0, [X0+2312]
	025 Call 0x1C17CF4
	026 Move X0, 0x32B000
	027 Move X0, [X0+1536]
	028 Call 0x1C17CF4
	029 Move X0, 0x302000
	030 Move X0, [X0+2752]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+1035], W8
	034 Move X1, [X23]
	035 Move X0, X19
	036 Call TypedUxmlAttributeDescription`1<Double>..ctor, X0
	037 Move X9, [X21]
	038 Move X8, [X20]
	039 Move [X19+64], X31
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move [X19+32], X9
	043 Move [X19+40], X8
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 

Method: System.Double GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)

Disassembly:
	0x03E1CA50 LDP V0, V1, [X31]
	0x03E1CA54 STP V0, V1, [X31 + 0x20]
	0x03E1CA58 CBZ X20, 0x3E1CAA0
	0x03E1CA5C ADRP X8, 0x34E000
	0x03E1CA60 LDR X8, [X8 + 0xA48]
	0x03E1CA64 LDRB W4, [X20 + 0x40]
	0x03E1CA68 LDP V0, V1, [X31 + 0x20]
	0x03E1CA6C ADD X2, X31, 0x40
	0x03E1CA70 LDR X5, [X8]
	0x03E1CA74 MOV X0, X20
	0x03E1CA78 MOV X1, X19
	0x03E1CA7C MOV X3, X21
	0x03E1CA80 STP V0, V1, [X31 + 0x40]
	0x03E1CA84 BL 0x22A8D00
	0x03E1CA88 LDP X20, X19, [X31 + 0x80]
	0x03E1CA8C LDP X22, X21, [X31 + 0x70]
	0x03E1CA90 LDP X30, X23, [X31 + 0x60]
	0x03E1CA94 AND W0, W0, 0x1
	0x03E1CA98 ADD X31, X31, 0x90
	0x03E1CA9C RET
	0x03E1CAA0 BL 0x1C16F20
	0x03E1CAA4 SUB X31, X31, 0x30
	0x03E1CAA8 STP X30, X21, [X31 + 0x10]
	0x03E1CAAC STP X20, X19, [X31 + 0x20]
	0x03E1CAB0 ADRP X21, 0x5CC000
	0x03E1CAB4 LDRB W8, [X21 + 0x41E]
	0x03E1CAB8 MOV W19, W1
	0x03E1CABC MOV X20, X0
	0x03E1CAC0 TBNZ X8, 0x0, 0x3E1CAD8
	0x03E1CAC4 ADRP X0, 0x2D7000
	0x03E1CAC8 LDR X0, [X0 + 0xB58]
	0x03E1CACC BL 0x1C16CF4
	0x03E1CAD0 MOVZ W8, 0x1
	0x03E1CAD4 STRB W8, [X21 + 0x41E]
	0x03E1CAD8 STRB W31, [X31 + 0xC]
	0x03E1CADC CBZ X20, 0x3E1CB18
	0x03E1CAE0 ADRP X8, 0x2D7000
	0x03E1CAE4 LDR X8, [X8 + 0xB58]
	0x03E1CAE8 LDR X0, [X8]
	0x03E1CAEC LDR W8, [X0 + 0xE0]
	0x03E1CAF0 CBNZ W8, 0x3E1CAF8
	0x03E1CAF4 BL 0x1C16DFC
	0x03E1CAF8 ADD X1, X31, 0xC
	0x03E1CAFC MOV X0, X20
	0x03E1CB00 MOV X2, X31
	0x03E1CB04 BL 0x3317DAC
	0x03E1CB08 TBZ X0, 0x0, 0x3E1CB18
	0x03E1CB0C LDRB W8, [X31 + 0xC]
	0x03E1CB10 CMP W8, 0x0
	0x03E1CB14 CSET W19, NE
	0x03E1CB18 AND W0, W19, 0x1
	0x03E1CB1C LDP X20, X19, [X31 + 0x20]
	0x03E1CB20 LDP X30, X21, [X31 + 0x10]
	0x03E1CB24 ADD X31, X31, 0x30
	0x03E1CB28 RET
	0x03E1CB2C STR X30, [X31 - 0x20]!
	0x03E1CB30 STP X20, X19, [X31 + 0x10]
	0x03E1CB34 ADRP X19, 0x5CC000
	0x03E1CB38 ADRP X20, 0x34E000
	0x03E1CB3C LDRB W8, [X19 + 0x41F]
	0x03E1CB40 LDR X20, [X20 + 0xA28]
	0x03E1CB44 TBNZ X8, 0x0, 0x3E1CB5C
	0x03E1CB48 ADRP X0, 0x34E000
	0x03E1CB4C LDR X0, [X0 + 0xA28]
	0x03E1CB50 BL 0x1C16CF4
	0x03E1CB54 MOVZ W8, 0x1
	0x03E1CB58 STRB W8, [X19 + 0x41F]
	0x03E1CB5C LDR X0, [X20]
	0x03E1CB60 BL 0x1C16F10
	0x03E1CB64 MOV X1, X31
	0x03E1CB68 MOV X19, X0
	0x03E1CB6C BL 0x33BDD8C
	0x03E1CB70 LDR X8, [X20]
	0x03E1CB74 LDR X8, [X8 + 0xB8]
	0x03E1CB78 STR X19, [X8]
	0x03E1CB7C LDP X20, X19, [X31 + 0x10]
	0x03E1CB80 LDR X30, [X31], #0x20
	0x03E1CB84 RET
	0x03E1CB88 MOV X1, X31
	0x03E1CB8C B 0x33BDD8C
	0x03E1CB90 AND W8, W2, 0x1
	0x03E1CB94 MOV X0, X1
	0x03E1CB98 MOV W1, W8

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X22, 0x5CD000
	009 Move X23, 0x34F000
	010 Move W8, [X22+1036]
	011 Move X23, [X23+2320]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x34F000
	020 Move X0, [X0+2328]
	021 Call 0x1C17CF4
	022 Move X0, 0x34F000
	023 Move X0, [X0+2336]
	024 Call 0x1C17CF4
	025 Move X0, 0x34F000
	026 Move X0, [X0+2344]
	027 Call 0x1C17CF4
	028 Move X0, 0x34F000
	029 Move X0, [X0+2320]
	030 Call 0x1C17CF4
	031 Move X0, 0x34F000
	032 Move X0, [X0+2352]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1036], W8
	036 Move V1, [X21]
	037 Move V0, [X21+16]
	038 Move X0, [X23]
	039 Move [X31+64], V1
	040 Move [X31+72], V0
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X23]
	046 Move X8, [X0+184]
	047 Move X21, [X8+8]
	048 Compare X21, 0
	049 JumpIfEqual {52}
	050 Move V0, [X31+64]
	051 Move V1, [X31+80]
	052 Move V0, [X31+64]
	053 Move V1, [X31+80]
	054 Move [X31], V0
	055 Move [X31+8], V1
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X23]
	061 Move X9, 0x34F000
	062 Move X8, [X0+184]
	063 Move X9, [X9+2328]
	064 Move X22, [X8]
	065 Move X0, [X9]
	066 Call 0x1C17F10
	067 Move X8, 0x34F000
	068 Move X8, [X8+2344]
	069 Move X1, X22
	070 Move X3, X31
	071 Move X21, X0
	072 Move X2, [X8]
	073 Call Func`3<Object, Double, Double>..ctor, X0, X1, X2
	074 Move X8, [X23]
	075 Move X8, [X8+184]
	076 Move [X8+8], X21
	077 Move V0, [X31]
	078 Move V1, [X31+16]
	079 Move [X31+32], V0
	080 Move [X31+40], V1
	081 Compare X20, 0
	082 JumpIfEqual {104}
	083 Move X8, 0x34F000
	084 Move X8, [X8+2352]
	085 Move V0, [X20+64]
	086 Move V1, [X31+32]
	087 Move V2, [X31+48]
	088 Add X2, X31, 64
	089 Move X4, [X8]
	090 Move X0, X20
	091 Move X1, X19
	092 Move X3, X21
	093 Move [X31+64], V1
	094 Move [X31+72], V2
	095 Call UxmlAttributeDescription.GetValueFromBag, X0, X1, X2, X3, V0
	096 Move X20, [X31+128]
	097 Move X19, [X31+136]
	098 Move X22, [X31+112]
	099 Move X21, [X31+120]
	100 Move X30, [X31+96]
	101 Move X23, [X31+104]
	102 Add X31, X31, 144
	103 Return V0
	104 Call 0x1C17F20

Method: System.Double ConvertValueToDouble(System.String v, System.Double defaultValue)

Disassembly:
	0x03E1CB9C B 0x3E1CAA4
	0x03E1CBA0 STP X30, X23, [X31 - 0x30]!
	0x03E1CBA4 STP X22, X21, [X31 + 0x10]
	0x03E1CBA8 STP X20, X19, [X31 + 0x20]
	0x03E1CBAC ADRP X22, 0x5CC000
	0x03E1CBB0 ADRP X23, 0x34E000
	0x03E1CBB4 ADRP X21, 0x301000
	0x03E1CBB8 ADRP X20, 0x301000
	0x03E1CBBC LDRB W8, [X22 + 0x420]
	0x03E1CBC0 LDR X23, [X23 + 0xA50]
	0x03E1CBC4 LDR X21, [X21 + 0xAB8]
	0x03E1CBC8 LDR X20, [X20 + 0xAC0]
	0x03E1CBCC MOV X19, X0
	0x03E1CBD0 TBNZ X8, 0x0, 0x3E1CC0C
	0x03E1CBD4 ADRP X0, 0x34E000
	0x03E1CBD8 LDR X0, [X0 + 0xA50]
	0x03E1CBDC BL 0x1C16CF4
	0x03E1CBE0 ADRP X0, 0x34E000
	0x03E1CBE4 LDR X0, [X0 + 0xA58]
	0x03E1CBE8 BL 0x1C16CF4
	0x03E1CBEC ADRP X0, 0x301000
	0x03E1CBF0 LDR X0, [X0 + 0xAB8]
	0x03E1CBF4 BL 0x1C16CF4
	0x03E1CBF8 ADRP X0, 0x301000
	0x03E1CBFC LDR X0, [X0 + 0xAC0]
	0x03E1CC00 BL 0x1C16CF4
	0x03E1CC04 MOVZ W8, 0x1
	0x03E1CC08 STRB W8, [X22 + 0x420]
	0x03E1CC0C LDR X1, [X23]
	0x03E1CC10 MOV X0, X19
	0x03E1CC14 BL 0x2723E40
	0x03E1CC18 LDR X9, [X21]
	0x03E1CC1C LDR X8, [X20]
	0x03E1CC20 STP X31, X31, [X19 + 0x40]
	0x03E1CC24 LDP X22, X21, [X31 + 0x10]
	0x03E1CC28 STP X9, X8, [X19 + 0x20]
	0x03E1CC2C LDP X20, X19, [X31 + 0x20]
	0x03E1CC30 LDP X30, X23, [X31], #0x30
	0x03E1CC34 RET

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5CD000
	007 Move W8, [X20+1037]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2DA000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1037], W8
	019 Move [X31+8], X31
	020 Compare X19, 0
	021 JumpIfEqual {40}
	022 Move X8, 0x2DA000
	023 Move X8, [X8+3144]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call CultureInfo.get_InvariantCulture
	031 Move X2, X0
	032 Add X3, X31, 8
	033 Move W1, 167
	034 Move X0, X19
	035 Move X4, X31
	036 Call Double.TryParse, X0, X1, X2, X3
	037 Move V0, [X31+8]
	038 And W31, W0, 1
	039 NotImplemented "Instruction FCSEL not yet implemented."
	040 Move V0, V8
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+24]
	044 Move V8, [X31+16]
	045 Add X31, X31, 48
	046 Return V0

