Type: UnityEngine.UIElements.StyleFont

Method: UnityEngine.Font get_value()

Disassembly:
	0x03DFF7B4 LDRB W8, [X0 + 0x14]
	0x03DFF7B8 LDRB W9, [X1 + 0x14]
	0x03DFF7BC EOR W8, W9, W8, 0x0
	0x03DFF7C0 ANDS W31, W8, 0x1
	0x03DFF7C4 CSET W8, EQ
	0x03DFF7C8 B 0x3DFF7D0

ISIL:
	001 Move W8, [X0+8]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Move X0, X31
	005 Return X0
	006 Move X0, [X0]
	007 Return X0

Method: UnityEngine.UIElements.StyleKeyword get_keyword()

Disassembly:
	0x03DFF7CC MOV W8, W31
	0x03DFF7D0 MOV W0, W8

ISIL:
	001 Move W0, [X0+8]
	002 Return X0

Method: System.Void .ctor(UnityEngine.Font v)

Disassembly:
	0x03DFF7D4 RET
	0x03DFF7D8 STP X31, X31, [X8]
	0x03DFF7DC STR X31, [X8 + 0x10]

ISIL:
	001 Move [X0+8], W31
	002 Move [X0], X1
	003 Return 

Method: System.Void .ctor(UnityEngine.Font v, UnityEngine.UIElements.StyleKeyword keyword)

Disassembly:
	0x03DFF7E0 STR W0, [X8 + 0x18]
	0x03DFF7E4 RET
	0x03DFF7E8 LDR X9, [X0 + 0x10]

ISIL:
	001 Move [X0+8], W2
	002 Move [X0], X1
	003 Return 

Method: System.Boolean op_Equality(UnityEngine.UIElements.StyleFont lhs, UnityEngine.UIElements.StyleFont rhs)

Disassembly:
	0x03DFF7EC LDR V0, [X0]
	0x03DFF7F0 STR W31, [X8 + 0x18]
	0x03DFF7F4 STR X9, [X8 + 0x10]
	0x03DFF7F8 STR V0, [X8]
	0x03DFF7FC RET
	0x03DFF800 SUB X31, X31, 0x50
	0x03DFF804 STR X30, [X31 + 0x40]
	0x03DFF808 LDUR V0, [X1 + 0xC]
	0x03DFF80C LDR V1, [X1]
	0x03DFF810 ADD X1, X31, 0x0
	0x03DFF814 STUR V0, [X31 + 0x2C]
	0x03DFF818 STR V1, [X31 + 0x2]
	0x03DFF81C LDUR V0, [X0 + 0xC]
	0x03DFF820 LDR V1, [X0]
	0x03DFF824 ADD X0, X31, 0x20
	0x03DFF828 STUR V0, [X31 + 0xC]
	0x03DFF82C STR V1, [X31]
	0x03DFF830 BL 0x3DFF744
	0x03DFF834 LDR X30, [X31 + 0x40]
	0x03DFF838 AND W0, W0, 0x1
	0x03DFF83C ADD X31, X31, 0x50
	0x03DFF840 RET
	0x03DFF844 SUB X31, X31, 0x60
	0x03DFF848 STP X30, X21, [X31 + 0x40]
	0x03DFF84C STP X20, X19, [X31 + 0x50]
	0x03DFF850 ADRP X21, 0x5E9000
	0x03DFF854 LDRB W8, [X21 + 0x2D3]
	0x03DFF858 MOV X20, X1
	0x03DFF85C MOV X19, X0
	0x03DFF860 TBNZ X8, 0x0, 0x3DFF878
	0x03DFF864 ADRP X0, 0x36A000
	0x03DFF868 LDR X0, [X0 + 0xDC8]
	0x03DFF86C BL 0x1C16CF4
	0x03DFF870 MOVZ W8, 0x1
	0x03DFF874 STRB W8, [X21 + 0x2D3]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x5EA000
	008 Move W8, [X23+710]
	009 Move X21, X3
	010 Move X19, X2
	011 Move X22, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2F5000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+710], W8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X8, 0x2F5000
	024 Move X8, [X8+1432]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X20
	031 Move X1, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X2, X31
	037 Move X30, [X31+48]
	038 Move X23, [X31+56]
	039 Call Object.op_Equality, X0, X1
	040 Return X0
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move W0, W31
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return X0

Method: UnityEngine.UIElements.StyleFont op_Implicit(UnityEngine.Font v)

Disassembly:
	0x03DFF878 CBZ X20, 0x3DFF894
	0x03DFF87C ADRP X8, 0x36A000

ISIL:
	001 Move X1, X31
	002 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.StyleFont other)

Disassembly:
	0x03DFF880 LDR X8, [X8 + 0xDC8]
	0x03DFF884 LDR X9, [X20]
	0x03DFF888 LDR X8, [X8]
	0x03DFF88C CMP X9, X8
	0x03DFF890 B.EQ 0x3DFF89C

ISIL:
	001 Move X8, X2
	002 Move X2, [X0]
	003 Move X3, [X0+8]
	004 Move X0, X1
	005 Move X1, X8
	006 Call StyleFont.op_Equality, X0, X1
	007 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03DFF894 MOV W0, W31
	0x03DFF898 B 0x3DFF8D0
	0x03DFF89C MOV X0, X20
	0x03DFF8A0 BL 0x1C16E08
	0x03DFF8A4 LDUR V0, [X0 + 0xC]
	0x03DFF8A8 LDR V1, [X0]
	0x03DFF8AC ADD X0, X31, 0x20
	0x03DFF8B0 ADD X1, X31, 0x0
	0x03DFF8B4 STUR V0, [X31 + 0x2C]
	0x03DFF8B8 STR V1, [X31 + 0x2]
	0x03DFF8BC LDUR V0, [X19 + 0xC]
	0x03DFF8C0 LDR V1, [X19]
	0x03DFF8C4 STUR V0, [X31 + 0xC]
	0x03DFF8C8 STR V1, [X31]
	0x03DFF8CC BL 0x3DFF744
	0x03DFF8D0 LDP X20, X19, [X31 + 0x50]
	0x03DFF8D4 LDP X30, X21, [X31 + 0x40]
	0x03DFF8D8 AND W0, W0, 0x1
	0x03DFF8DC ADD X31, X31, 0x60
	0x03DFF8E0 RET
	0x03DFF8E4 STP X30, X19, [X31 - 0x10]!
	0x03DFF8E8 MOV X19, X0
	0x03DFF8EC BL 0x3DFC254
	0x03DFF8F0 LDR W8, [X19 + 0x18]
	0x03DFF8F4 MOVZ W9, 0x18D
	0x03DFF8F8 MUL W9, W0, W9
	0x03DFF8FC EOR W0, W9, W8, 0x0
	0x03DFF900 LDP X30, X19, [X31], #0x10
	0x03DFF904 RET
	0x03DFF908 SUB X31, X31, 0x50
	0x03DFF90C STR X30, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5EA000
	006 Move W8, [X21+711]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x36B000
	014 Move X0, [X0+3416]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+711], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x36B000
	021 Move X8, [X8+3416]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move X8, [X0]
	034 Move X1, [X0+8]
	035 Move X2, [X19]
	036 Move X3, [X19+8]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X0, X8
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call StyleFont.op_Equality, X0, X1
	043 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03DFF910 STP X22, X21, [X31 + 0x30]
	0x03DFF914 STP X20, X19, [X31 + 0x40]
	0x03DFF918 ADRP X22, 0x5E9000
	0x03DFF91C ADRP X21, 0x36A000
	0x03DFF920 ADRP X20, 0x36A000
	0x03DFF924 LDRB W8, [X22 + 0x2D4]
	0x03DFF928 LDR X21, [X21 + 0xDC8]
	0x03DFF92C LDR X20, [X20 + 0xDD0]
	0x03DFF930 MOV X19, X0
	0x03DFF934 TBNZ X8, 0x0, 0x3DFF958
	0x03DFF938 ADRP X0, 0x36A000
	0x03DFF93C LDR X0, [X0 + 0xDC8]
	0x03DFF940 BL 0x1C16CF4
	0x03DFF944 ADRP X0, 0x36A000
	0x03DFF948 LDR X0, [X0 + 0xDD0]
	0x03DFF94C BL 0x1C16CF4
	0x03DFF950 MOVZ W8, 0x1
	0x03DFF954 STRB W8, [X22 + 0x2D4]
	0x03DFF958 LDUR V0, [X19 + 0xC]
	0x03DFF95C LDR V1, [X19]
	0x03DFF960 LDR X0, [X21]
	0x03DFF964 ADD X1, X31, 0x0
	0x03DFF968 STUR V0, [X31 + 0xC]
	0x03DFF96C STR V1, [X31]
	0x03DFF970 BL 0x1C16E04
	0x03DFF974 LDR X1, [X20]
	0x03DFF978 BL 0x229685C
	0x03DFF97C LDP X20, X19, [X31 + 0x40]
	0x03DFF980 LDP X22, X21, [X31 + 0x30]
	0x03DFF984 LDR X30, [X31 + 0x20]
	0x03DFF988 ADD X31, X31, 0x50
	0x03DFF98C RET
	0x03DFF990 SUB X31, X31, 0x20
	0x03DFF994 LDR W9, [X0]
	0x03DFF998 CBZ W9, 0x3DFF9AC
	0x03DFF99C STP X31, X31, [X31]
	0x03DFF9A0 STR W31, [X31 + 0x18]
	0x03DFF9A4 STR X31, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5EA000
	006 Move X20, 0x2F5000
	007 Move W8, [X21+712]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2F5000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+712], W8
	019 Move X0, [X20]
	020 Move X20, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Object.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {42}
	033 Move X0, [X19]
	034 Compare X0, 0
	035 JumpIfEqual {50}
	036 Move X8, [X0]
	037 Move X9, [X8+344]
	038 Move X1, [X8+352]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move W8, 397
	041 Multiply W8, W0, W8
	042 Move W8, W31
	043 Move W9, [X19+8]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Xor W0, W9, W8
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03DFF9A8 B 0x3DFF9BC
	0x03DFF9AC LDR V0, [X0 + 0x1]
	0x03DFF9B0 LDUR V1, [X0 + 0x4]
	0x03DFF9B4 STUR V0, [X31 + 0xC]
	0x03DFF9B8 STR V1, [X31]
	0x03DFF9BC LDUR V0, [X31 + 0xC]
	0x03DFF9C0 LDR V1, [X31]
	0x03DFF9C4 STUR V0, [X8 + 0xC]
	0x03DFF9C8 STR V1, [X8]
	0x03DFF9CC ADD X31, X31, 0x20
	0x03DFF9D0 RET
	0x03DFF9D4 LDR W0, [X0]
	0x03DFF9D8 RET
	0x03DFF9DC STR W1, [X0]
	0x03DFF9E0 STUR X31, [X0 + 0x4]
	0x03DFF9E4 STUR X31, [X0 + 0x14]
	0x03DFF9E8 STUR X31, [X0 + 0xC]
	0x03DFF9EC STR W31, [X0 + 0x1C]
	0x03DFF9F0 RET
	0x03DFF9F4 STR W2, [X0]
	0x03DFF9F8 LDR W8, [X1 + 0x18]
	0x03DFF9FC LDR X9, [X1 + 0x10]
	0x03DFFA00 LDR V0, [X1]
	0x03DFFA04 STR W8, [X0 + 0x1C]
	0x03DFFA08 STUR X9, [X0 + 0x14]
	0x03DFFA0C STUR V0, [X0 + 0x4]
	0x03DFFA10 RET
	0x03DFFA14 SUB X31, X31, 0x90
	0x03DFFA18 STR X30, [X31 + 0x80]
	0x03DFFA1C LDR W8, [X0]
	0x03DFFA20 LDR W9, [X1]
	0x03DFFA24 CMP W8, W9

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x5EA000
	008 Move X21, 0x36B000
	009 Move X20, 0x36B000
	010 Move W8, [X22+713]
	011 Move X21, [X21+3416]
	012 Move X20, [X20+3424]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x36B000
	019 Move X0, [X0+3416]
	020 Call 0x1C17CF4
	021 Move X0, 0x36B000
	022 Move X0, [X0+3424]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+713], W8
	026 Move V0, [X19]
	027 Move X0, [X21]
	028 Add X1, X31, 0
	029 Move [X31], V0
	030 Call 0x1C17E04
	031 Move X1, [X20]
	032 Call StyleValueExtensions.DebugString, X0
	033 Move X20, [X31+48]
	034 Move X19, [X31+56]
	035 Move X22, [X31+32]
	036 Move X21, [X31+40]
	037 Move X30, [X31+16]
	038 Add X31, X31, 64
	039 Return X0

