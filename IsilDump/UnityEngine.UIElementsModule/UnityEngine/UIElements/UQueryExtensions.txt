Type: UnityEngine.UIElements.UQueryExtensions

Method: T Q(UnityEngine.UIElements.VisualElement e, System.String name = null, System.String className = null)

Disassembly:
	0x022A27C4 STR W9, [X20 + 0x18]
	0x022A27C8 STR X22, [X8 + 0x20]
	0x022A27CC B 0x22A2750
	0x022A27D0 LDR X8, [X9 + 0x20]
	0x022A27D4 LDR X8, [X8 + 0xC0]
	0x022A27D8 LDR X2, [X8 + 0x70]
	0x022A27DC MOV X0, X20
	0x022A27E0 MOV X1, X22
	0x022A27E4 BL 0x301BF90
	0x022A27E8 B 0x22A2750
	0x022A27EC MOV X23, X31
	0x022A27F0 LDR X8, [X19 + 0x38]
	0x022A27F4 ADD X0, X31, 0x20
	0x022A27F8 LDR X1, [X8 + 0x50]
	0x022A27FC BL 0x2BC434C
	0x022A2800 CBNZ X23, 0x22A28D0
	0x022A2804 CBZ X20, 0x22A28CC
	0x022A2808 LDR X8, [X19 + 0x38]
	0x022A280C MOV X0, X20
	0x022A2810 LDR X1, [X8 + 0x18]
	0x022A2814 ADD X8, X31, 0x8
	0x022A2818 BL 0x301CB58
	0x022A281C LDUR V0, [X31 + 0x8]
	0x022A2820 LDR X8, [X31 + 0x18]
	0x022A2824 STR V0, [X31 + 0x2]
	0x022A2828 STR X8, [X31 + 0x30]
	0x022A282C LDR X8, [X19 + 0x38]
	0x022A2830 LDR X1, [X8 + 0x48]
	0x022A2834 ADD X0, X31, 0x20
	0x022A2838 BL 0x2BC4350
	0x022A283C TBZ X0, 0x0, 0x22A2858
	0x022A2840 LDR X8, [X19 + 0x38]
	0x022A2844 LDR X1, [X31 + 0x30]
	0x022A2848 LDR X2, [X8 + 0x58]
	0x022A284C MOV X0, X21
	0x022A2850 BL 0x301D7A8
	0x022A2854 B 0x22A282C
	0x022A2858 MOV X21, X31
	0x022A285C MOVZ W22, 0x7
	0x022A2860 LDR X8, [X19 + 0x38]
	0x022A2864 ADD X0, X31, 0x20
	0x022A2868 LDR X1, [X8 + 0x50]
	0x022A286C BL 0x2BC434C
	0x022A2870 CBNZ X21, 0x22A28D8
	0x022A2874 CMP W22, 0x7
	0x022A2878 B.EQ 0x22A2880
	0x022A287C CBNZ W22, 0x22A28B0
	0x022A2880 LDR X8, [X19 + 0x38]
	0x022A2884 LDR X0, [X8 + 0x8]
	0x022A2888 LDRB W8, [X0 + 0x135]
	0x022A288C TBNZ X8, 0x0, 0x22A2894
	0x022A2890 BL 0x1C5C684
	0x022A2894 LDR W8, [X0 + 0xE0]
	0x022A2898 CBNZ W8, 0x22A28A0
	0x022A289C BL 0x1C16DFC
	0x022A28A0 LDR X8, [X19 + 0x38]
	0x022A28A4 MOV X0, X20
	0x022A28A8 LDR X1, [X8 + 0x60]
	0x022A28AC BL 0x28F82F0
	0x022A28B0 LDP X20, X19, [X31 + 0x60]
	0x022A28B4 LDP X22, X21, [X31 + 0x50]
	0x022A28B8 LDP X30, X23, [X31 + 0x40]
	0x022A28BC ADD X31, X31, 0x70
	0x022A28C0 RET
	0x022A28C4 BL 0x1C16F20
	0x022A28C8 BL 0x1C16F20
	0x022A28CC BL 0x1C16F20
	0x022A28D0 MOV X0, X23
	0x022A28D4 BL 0x1C16F18
	0x022A28D8 MOV X0, X21
	0x022A28DC BL 0x1C16F18
	0x022A28E0 B 0x22A28F4
	0x022A28E4 B 0x22A28F4
	0x022A28E8 B 0x22A28F4
	0x022A28EC B 0x22A28F4
	0x022A28F0 B 0x22A293C
	0x022A28F4 MOV X22, X0
	0x022A28F8 CMP W1, 0x1
	0x022A28FC B.NE 0x22A2914
	0x022A2900 MOV X0, X22
	0x022A2904 BL 0x3EB1AD0
	0x022A2908 LDR X23, [X0]
	0x022A290C BL 0x3EB1AE0
	0x022A2910 B 0x22A27F0
	0x022A2914 MOV X23, X31
	0x022A2918 B 0x22A2920
	0x022A291C MOV X22, X0
	0x022A2920 LDR X8, [X19 + 0x38]
	0x022A2924 LDR X1, [X8 + 0x50]
	0x022A2928 ADD X0, X31, 0x20
	0x022A292C BL 0x2BC434C
	0x022A2930 CBZ X23, 0x22A2980
	0x022A2934 MOV X0, X23
	0x022A2938 BL 0x1C16F18
	0x022A293C MOV X22, X0
	0x022A2940 CMP W1, 0x1
	0x022A2944 B.NE 0x22A2960
	0x022A2948 MOV X0, X22
	0x022A294C BL 0x3EB1AD0
	0x022A2950 LDR X21, [X0]
	0x022A2954 BL 0x3EB1AE0
	0x022A2958 MOV W22, W31
	0x022A295C B 0x22A2860
	0x022A2960 MOV X21, X31
	0x022A2964 B 0x22A296C
	0x022A2968 MOV X22, X0
	0x022A296C LDR X8, [X19 + 0x38]
	0x022A2970 LDR X1, [X8 + 0x50]
	0x022A2974 ADD X0, X31, 0x20
	0x022A2978 BL 0x2BC434C
	0x022A297C CBNZ X21, 0x22A2988
	0x022A2980 MOV X0, X22
	0x022A2984 BL 0x1D2C690
	0x022A2988 MOV X0, X21
	0x022A298C BL 0x1C16F18
	0x022A2990 BL 0x1990590
	0x022A2994 STP X29, X30, [X31 - 0x50]!
	0x022A2998 STR X25, [X31 + 0x10]
	0x022A299C STP X24, X23, [X31 + 0x20]
	0x022A29A0 STP X22, X21, [X31 + 0x30]
	0x022A29A4 STP X20, X19, [X31 + 0x40]
	0x022A29A8 ADD X29, X31, 0x0
	0x022A29AC SUB X31, X31, 0x10
	0x022A29B0 MRS X23, 0xC000
	0x022A29B4 LDR X8, [X23 + 0x28]
	0x022A29B8 MOV X20, X3
	0x022A29BC MOV X19, X2
	0x022A29C0 STUR X8, [X29 - 0x8]
	0x022A29C4 STUR X2, [X29 - 0x10]
	0x022A29C8 LDR X25, [X3 + 0x38]
	0x022A29CC CBNZ X25, 0x22A29FC
	0x022A29D0 ADRP X0, 0x1E7A000
	0x022A29D4 LDR X0, [X0 + 0x860]
	0x022A29D8 BL 0x1C16CF4
	0x022A29DC ADRP X0, 0x1E7A000
	0x022A29E0 LDR X0, [X0 + 0x868]
	0x022A29E4 BL 0x1C16CF4
	0x022A29E8 LDR X25, [X20 + 0x38]
	0x022A29EC CBNZ X25, 0x22A29FC
	0x022A29F0 MOV X0, X20
	0x022A29F4 BL 0x1C5C6E0
	0x022A29F8 LDR X25, [X20 + 0x38]
	0x022A29FC LDR X8, [X25]
	0x022A2A00 ADD X9, X31, 0x0
	0x022A2A04 LDR W21, [X8 + 0xFC]
	0x022A2A08 ADD X10, X21, 0xF
	0x022A2A0C AND X10, X10, 0x1FFFFFFFF
	0x022A2A10 SUB X22, X9, X10
	0x022A2A14 ADD X31, X22, 0x0
	0x022A2A18 LDR W8, [X8 + 0x28]
	0x022A2A1C SUB X24, X29, 0x10
	0x022A2A20 MOV X0, X22
	0x022A2A24 MOV X2, X21
	0x022A2A28 CMP W8, 0x0
	0x022A2A2C CSEL X1, X19, X24, LT
	0x022A2A30 BL 0x3EB1AC0
	0x022A2A34 LDR X0, [X25]
	0x022A2A38 MOV X1, X22
	0x022A2A3C BL 0x1C16E04
	0x022A2A40 CBZ X0, 0x22A2A78
	0x022A2A44 ADRP X8, 0x1E7A000
	0x022A2A48 LDR X8, [X8 + 0x868]
	0x022A2A4C LDR X9, [X0]
	0x022A2A50 LDR X8, [X8]
	0x022A2A54 LDRB W11, [X9 + 0x130]
	0x022A2A58 LDRB W10, [X8 + 0x130]
	0x022A2A5C CMP W11, W10
	0x022A2A60 B.CC 0x22A2A78
	0x022A2A64 LDR X9, [X9 + 0xC8]
	0x022A2A68 ADD X9, X9, X10, 0x3, LSL
	0x022A2A6C LDUR X9, [X9 - 0x8]
	0x022A2A70 CMP X9, X8
	0x022A2A74 B.EQ 0x22A2AE8
	0x022A2A78 LDR X20, [X20 + 0x38]
	0x022A2A7C MOV X0, X22
	0x022A2A80 MOV X2, X21
	0x022A2A84 LDR X8, [X20]
	0x022A2A88 LDR W8, [X8 + 0x28]
	0x022A2A8C CMP W8, 0x0
	0x022A2A90 CSEL X1, X19, X24, LT
	0x022A2A94 BL 0x3EB1AC0
	0x022A2A98 LDR X0, [X20]
	0x022A2A9C MOV X1, X22
	0x022A2AA0 BL 0x1C16E04
	0x022A2AA4 CBZ X0, 0x22A2AEC
	0x022A2AA8 ADRP X8, 0x1E7A000
	0x022A2AAC LDR X8, [X8 + 0x860]
	0x022A2AB0 LDR X9, [X0]
	0x022A2AB4 LDR X8, [X8]
	0x022A2AB8 LDRB W11, [X9 + 0x130]
	0x022A2ABC LDRB W10, [X8 + 0x130]
	0x022A2AC0 CMP W11, W10
	0x022A2AC4 B.CS 0x22A2AD0
	0x022A2AC8 MOV W0, W31
	0x022A2ACC B 0x22A2AEC
	0x022A2AD0 LDR X9, [X9 + 0xC8]
	0x022A2AD4 ADD X9, X9, X10, 0x3, LSL
	0x022A2AD8 LDUR X9, [X9 - 0x8]
	0x022A2ADC CMP X9, X8
	0x022A2AE0 CSET W0, EQ
	0x022A2AE4 B 0x22A2AEC
	0x022A2AE8 MOVZ W0, 0x1
	0x022A2AEC LDR X8, [X23 + 0x28]
	0x022A2AF0 LDUR X9, [X29 - 0x8]
	0x022A2AF4 CMP X8, X9
	0x022A2AF8 B.NE 0x22A2B18
	0x022A2AFC ADD X31, X29, 0x0
	0x022A2B00 LDP X20, X19, [X31 + 0x40]
	0x022A2B04 LDP X22, X21, [X31 + 0x30]
	0x022A2B08 LDP X24, X23, [X31 + 0x20]
	0x022A2B0C LDR X25, [X31 + 0x10]
	0x022A2B10 LDP X29, X30, [X31], #0x50
	0x022A2B14 RET
	0x022A2B18 BL 0x3EB1B20
	0x022A2B1C SUB X31, X31, 0x170
	0x022A2B20 STP D9, D8, [X31 + 0x100]
	0x022A2B24 STP X29, X30, [X31 + 0x110]
	0x022A2B28 STP X28, X27, [X31 + 0x120]
	0x022A2B2C STP X26, X25, [X31 + 0x130]
	0x022A2B30 STP X24, X23, [X31 + 0x140]
	0x022A2B34 STP X22, X21, [X31 + 0x150]
	0x022A2B38 STP X20, X19, [X31 + 0x160]
	0x022A2B3C LDR X8, [X4 + 0x38]
	0x022A2B40 MOV X20, X4
	0x022A2B44 MOV X21, X3
	0x022A2B48 MOV X19, X2
	0x022A2B4C MOV X25, X1
	0x022A2B50 MOV X26, X0
	0x022A2B54 CBNZ X8, 0x22A2C34
	0x022A2B58 ADRP X0, 0x1E51000
	0x022A2B5C LDR X0, [X0 + 0xA28]
	0x022A2B60 BL 0x1C16CF4
	0x022A2B64 ADRP X0, 0x1E7A000
	0x022A2B68 LDR X0, [X0 + 0x870]
	0x022A2B6C BL 0x1C16CF4
	0x022A2B70 ADRP X0, 0x1E55000
	0x022A2B74 LDR X0, [X0 + 0x2C8]
	0x022A2B78 BL 0x1C16CF4
	0x022A2B7C ADRP X0, 0x1E7A000
	0x022A2B80 LDR X0, [X0 + 0x878]
	0x022A2B84 BL 0x1C16CF4
	0x022A2B88 ADRP X0, 0x1E7A000
	0x022A2B8C LDR X0, [X0 + 0x880]
	0x022A2B90 BL 0x1C16CF4
	0x022A2B94 ADRP X0, 0x1E7A000
	0x022A2B98 LDR X0, [X0 + 0x888]
	0x022A2B9C BL 0x1C16CF4
	0x022A2BA0 ADRP X0, 0x1E7A000
	0x022A2BA4 LDR X0, [X0 + 0x890]
	0x022A2BA8 BL 0x1C16CF4
	0x022A2BAC ADRP X0, 0x1E51000
	0x022A2BB0 LDR X0, [X0 + 0x5A8]
	0x022A2BB4 BL 0x1C16CF4
	0x022A2BB8 ADRP X0, 0x1E51000
	0x022A2BBC LDR X0, [X0 + 0x598]
	0x022A2BC0 BL 0x1C16CF4
	0x022A2BC4 ADRP X0, 0x1E7A000
	0x022A2BC8 LDR X0, [X0 + 0x898]
	0x022A2BCC BL 0x1C16CF4
	0x022A2BD0 ADRP X0, 0x1E7A000
	0x022A2BD4 LDR X0, [X0 + 0x8A0]
	0x022A2BD8 BL 0x1C16CF4
	0x022A2BDC ADRP X0, 0x1E7A000
	0x022A2BE0 LDR X0, [X0 + 0x860]
	0x022A2BE4 BL 0x1C16CF4
	0x022A2BE8 ADRP X0, 0x1E7A000
	0x022A2BEC LDR X0, [X0 + 0x868]
	0x022A2BF0 BL 0x1C16CF4
	0x022A2BF4 ADRP X0, 0x1E51000
	0x022A2BF8 LDR X0, [X0 + 0x6C0]
	0x022A2BFC BL 0x1C16CF4
	0x022A2C00 ADRP X0, 0x1E7A000
	0x022A2C04 LDR X0, [X0 + 0x8A8]
	0x022A2C08 BL 0x1C16CF4
	0x022A2C0C ADRP X0, 0x1E7A000
	0x022A2C10 LDR X0, [X0 + 0x8B0]
	0x022A2C14 BL 0x1C16CF4
	0x022A2C18 ADRP X0, 0x1E7A000
	0x022A2C1C LDR X0, [X0 + 0x8B8]
	0x022A2C20 BL 0x1C16CF4
	0x022A2C24 LDR X8, [X20 + 0x38]
	0x022A2C28 CBNZ X8, 0x22A2C34
	0x022A2C2C MOV X0, X20
	0x022A2C30 BL 0x1C5C6E0
	0x022A2C34 MOVI V0.2D, 0x0
	0x022A2C38 STR W31, [X31 + 0xF0]
	0x022A2C3C STP X31, X31, [X31 + 0xB0]
	0x022A2C40 STP X31, X31, [X31 + 0xA0]
	0x022A2C44 STP V0, V0, [X31 + 0xD0]
	0x022A2C48 STR V0, [X31 + 0xC]
	0x022A2C4C STRB W31, [X31 + 0x98]
	0x022A2C50 CBZ X21, 0x22A2C7C
	0x022A2C54 ADRP X9, 0x1E7A000
	0x022A2C58 LDR X9, [X9 + 0x868]
	0x022A2C5C LDR X8, [X21]
	0x022A2C60 LDR X10, [X9]
	0x022A2C64 LDRB W9, [X8 + 0x130]
	0x022A2C68 LDRB W11, [X10 + 0x130]
	0x022A2C6C CMP W9, W11
	0x022A2C70 B.CS 0x22A2C8C
	0x022A2C74 MOV X27, X31
	0x022A2C78 B 0x22A2CA0
	0x022A2C7C MOV X9, X31
	0x022A2C80 MOV X27, X31
	0x022A2C84 MOV X8, X31
	0x022A2C88 B 0x22A2CD8
	0x022A2C8C LDR X12, [X8 + 0xC8]
	0x022A2C90 ADD X11, X12, X11, 0x3, LSL
	0x022A2C94 LDUR X11, [X11 - 0x8]
	0x022A2C98 CMP X11, X10
	0x022A2C9C CSEL X27, X21, X31, EQ
	0x022A2CA0 ADRP X10, 0x1E7A000
	0x022A2CA4 LDR X10, [X10 + 0x860]
	0x022A2CA8 LDR X10, [X10]
	0x022A2CAC LDRB W11, [X10 + 0x130]
	0x022A2CB0 CMP W9, W11
	0x022A2CB4 B.CS 0x22A2CC0
	0x022A2CB8 MOV X8, X31
	0x022A2CBC B 0x22A2CD4
	0x022A2CC0 LDR X8, [X8 + 0xC8]
	0x022A2CC4 ADD X8, X8, X11, 0x3, LSL
	0x022A2CC8 LDUR X8, [X8 - 0x8]
	0x022A2CCC CMP X8, X10
	0x022A2CD0 CSEL X8, X21, X31, EQ
	0x022A2CD4 MOV X9, X27
	0x022A2CD8 ORR X10, X27, X8, 0x0
	0x022A2CDC CBNZ X10, 0x22A2D78
	0x022A2CE0 ADRP X8, 0x1E51000
	0x022A2CE4 LDR X8, [X8 + 0x6C0]
	0x022A2CE8 LDR X0, [X8]
	0x022A2CEC LDR X8, [X20 + 0x38]
	0x022A2CF0 LDR W9, [X0 + 0xE0]
	0x022A2CF4 LDR X19, [X8 + 0x8]
	0x022A2CF8 CBNZ W9, 0x22A2D00
	0x022A2CFC BL 0x1C16DFC
	0x022A2D00 MOV X0, X19
	0x022A2D04 MOV X1, X31
	0x022A2D08 BL 0x338C698
	0x022A2D0C CBZ X0, 0x22A33A4
	0x022A2D10 LDR X8, [X0]
	0x022A2D14 LDR X9, [X8 + 0x2E8]
	0x022A2D18 LDR X1, [X8 + 0x2F0]
	0x022A2D1C BLR X9
	0x022A2D20 ADRP X8, 0x1E7A000
	0x022A2D24 LDR X8, [X8 + 0x8B0]
	0x022A2D28 ADRP X9, 0x1E7A000
	0x022A2D2C LDR X9, [X9 + 0x8B8]
	0x022A2D30 MOV X1, X0
	0x022A2D34 LDR X8, [X8]
	0x022A2D38 MOV X3, X31
	0x022A2D3C LDR X2, [X9]
	0x022A2D40 MOV X0, X8
	0x022A2D44 BL 0x32274B8
	0x022A2D48 ADRP X8, 0x1E51000
	0x022A2D4C LDR X8, [X8 + 0xA28]
	0x022A2D50 MOV X19, X0
	0x022A2D54 LDR X8, [X8]
	0x022A2D58 LDR W9, [X8 + 0xE0]
	0x022A2D5C CBNZ W9, 0x22A2D68
	0x022A2D60 MOV X0, X8
	0x022A2D64 BL 0x1C16DFC
	0x022A2D68 MOV X0, X19
	0x022A2D6C MOV X1, X31
	0x022A2D70 BL 0x3C06A04
	0x022A2D74 B 0x22A3380
	0x022A2D78 CBZ X27, 0x22A2D8C
	0x022A2D7C ADD X9, X9, 0x1C
	0x022A2D80 MOV X8, X27
	0x022A2D84 CBNZ X19, 0x22A2D98
	0x022A2D88 B 0x22A33A4
	0x022A2D8C CBZ X8, 0x22A33A4
	0x022A2D90 ADD X9, X8, 0x1C
	0x022A2D94 CBZ X19, 0x22A33A4
	0x022A2D98 LDR W21, [X8 + 0x18]
	0x022A2D9C LDR X22, [X8 + 0x10]
	0x022A2DA0 LDR W23, [X8 + 0x20]
	0x022A2DA4 LDR W24, [X9]
	0x022A2DA8 MOV X0, X19
	0x022A2DAC MOV X1, X31
	0x022A2DB0 BL 0x3C040B4
	0x022A2DB4 CBZ X22, 0x22A33A4
	0x022A2DB8 MOV X20, X0
	0x022A2DBC ADD X8, X31, 0x60
	0x022A2DC0 MOV X0, X22
	0x022A2DC4 MOV X1, X31
	0x022A2DC8 STR W24, [X31 + 0x1C]
	0x022A2DCC BL 0x3C21334
	0x022A2DD0 LDP V0, V1, [X31 + 0x60]
	0x022A2DD4 LDR V2, [X31 + 0x8]
	0x022A2DD8 LDR W8, [X31 + 0x90]
	0x022A2DDC MOV X0, X22
	0x022A2DE0 STP V0, V1, [X31 + 0xC0]
	0x022A2DE4 STR V2, [X31 + 0xE]
	0x022A2DE8 STR W8, [X31 + 0xF0]
	0x022A2DEC LDR X8, [X22]
	0x022A2DF0 LDP X9, X1, [X8 + 0x1C8]
	0x022A2DF4 BLR X9
	0x022A2DF8 CMP W0, 0x4
	0x022A2DFC B.NE 0x22A2E10
	0x022A2E00 MOVI V0.2D, 0x0
	0x022A2E04 STR W31, [X31 + 0xF0]
	0x022A2E08 STP V0, V0, [X31 + 0xD0]
	0x022A2E0C STR V0, [X31 + 0xC]
	0x022A2E10 MOV X0, X22
	0x022A2E14 MOV X1, X31
	0x022A2E18 BL 0x3C20368
	0x022A2E1C MOV W1, W0
	0x022A2E20 ADD X0, X31, 0xC0
	0x022A2E24 MOV X2, X31
	0x022A2E28 BL 0x3C225D8
	0x022A2E2C MOVZ W8, 0x1
	0x022A2E30 STR W8, [X31 + 0xCC]
	0x022A2E34 ADD X8, X31, 0x60
	0x022A2E38 MOV X0, X22
	0x022A2E3C MOV X1, X31
	0x022A2E40 BL 0x3C21334
	0x022A2E44 LDR W8, [X31 + 0x68]
	0x022A2E48 MOVZ W9, 0x2
	0x022A2E4C STR W9, [X31 + 0xE0]
	0x022A2E50 MOV X0, X22
	0x022A2E54 STR W8, [X31 + 0xC8]
	0x022A2E58 LDR X8, [X22]
	0x022A2E5C LDP X9, X1, [X8 + 0x188]
	0x022A2E60 BLR X9
	0x022A2E64 ADRP X8, 0x1E51000
	0x022A2E68 LDR X8, [X8 + 0x5A8]
	0x022A2E6C MOV W24, W0
	0x022A2E70 LDR X8, [X8]
	0x022A2E74 LDR W9, [X8 + 0xE0]
	0x022A2E78 CBNZ W9, 0x22A2E84
	0x022A2E7C MOV X0, X8
	0x022A2E80 BL 0x1C16DFC
	0x022A2E84 SCVTF D8, W21
	0x022A2E88 FMOV D0, 2
	0x022A2E8C MOV V1.16B, V8.16B
	0x022A2E90 MOV X0, X31
	0x022A2E94 BL 0x337F438
	0x022A2E98 MOVZ X9, 0x7FF00000
	0x022A2E9C FMOV D9, X9
	0x022A2EA0 FCVTZS W8, D0
	0x022A2EA4 MOVZ W28, 0x80000000
	0x022A2EA8 FCMP D0, D9
	0x022A2EAC CSEL W8, W28, W8, EQ
	0x022A2EB0 SDIV W8, W24, W8
	0x022A2EB4 STR W8, [X31 + 0xC0]
	0x022A2EB8 LDR X8, [X22]
	0x022A2EBC MOV X0, X22
	0x022A2EC0 LDP X9, X1, [X8 + 0x1A8]
	0x022A2EC4 BLR X9
	0x022A2EC8 MOV W24, W0
	0x022A2ECC FMOV D0, 2
	0x022A2ED0 MOV V1.16B, V8.16B
	0x022A2ED4 MOV X0, X31
	0x022A2ED8 BL 0x337F438
	0x022A2EDC FCVTZS W8, D0
	0x022A2EE0 FCMP D0, D9
	0x022A2EE4 LDR V0, [X31 + 0xC0]
	0x022A2EE8 CSEL W8, W28, W8, EQ
	0x022A2EEC SDIV W8, W24, W8
	0x022A2EF0 MOVI V1.2S, 0x1
	0x022A2EF4 UNIMPLEMENTED
	0x022A2EF8 SMAX S0.2S, S0.2S, S1.2S
	0x022A2EFC STR D0, [X31 + 0xC0]
	0x022A2F00 LDR X8, [X22]
	0x022A2F04 MOV X0, X22
	0x022A2F08 LDP X9, X1, [X8 + 0x1C8]
	0x022A2F0C BLR X9
	0x022A2F10 CBNZ W21, 0x22A2F20
	0x022A2F14 CMP W0, 0x2
	0x022A2F18 MOV X24, X31
	0x022A2F1C B.EQ 0x22A2F48
	0x022A2F20 LDP V0, V1, [X31 + 0xC0]
	0x022A2F24 LDR V2, [X31 + 0xE]
	0x022A2F28 LDR W8, [X31 + 0xF0]
	0x022A2F2C ADD X0, X31, 0x20
	0x022A2F30 MOV X1, X31
	0x022A2F34 STP V0, V1, [X31 + 0x20]
	0x022A2F38 STR V2, [X31 + 0x4]
	0x022A2F3C STR W8, [X31 + 0x50]
	0x022A2F40 BL 0x3C22068
	0x022A2F44 MOV X24, X0
	0x022A2F48 ADRP X29, 0x1E51000
	0x022A2F4C LDR X29, [X29 + 0x598]
	0x022A2F50 LDR X0, [X29]
	0x022A2F54 LDR W8, [X0 + 0xE0]
	0x022A2F58 CBNZ W8, 0x22A2F60
	0x022A2F5C BL 0x1C16DFC
	0x022A2F60 MOV X0, X24
	0x022A2F64 MOV X1, X31
	0x022A2F68 BL 0x3C38948
	0x022A2F6C ANDS W31, W0, 0x1
	0x022A2F70 CSEL X1, X24, X22, NE
	0x022A2F74 MOV X0, X19
	0x022A2F78 MOV X2, X31
	0x022A2F7C BL 0x3C040F0
	0x022A2F80 ADRP X8, 0x1E7A000
	0x022A2F84 LDR X8, [X8 + 0x880]
	0x022A2F88 LDR X0, [X8]
	0x022A2F8C LDR W8, [X0 + 0xE0]
	0x022A2F90 CBNZ W8, 0x22A2F98
	0x022A2F94 BL 0x1C16DFC
	0x022A2F98 ADRP X8, 0x1E7A000
	0x022A2F9C LDR X8, [X8 + 0x878]
	0x022A2FA0 ADD X0, X31, 0xB8
	0x022A2FA4 LDR X1, [X8]
	0x022A2FA8 BL 0x2EF26F4
	0x022A2FAC MOV X8, X0
	0x022A2FB0 LDR X0, [X31 + 0xB8]
	0x022A2FB4 STP X8, X1, [X31 + 0xA8]
	0x022A2FB8 CBZ X0, 0x22A33A8
	0x022A2FBC ADRP X9, 0x1E7A000
	0x022A2FC0 LDR X9, [X9 + 0x888]
	0x022A2FC4 LDR W10, [X0 + 0x1C]
	0x022A2FC8 LDR X8, [X0 + 0x10]
	0x022A2FCC LDR X9, [X9]
	0x022A2FD0 ADD W10, W10, 0x1
	0x022A2FD4 STR W10, [X0 + 0x1C]
	0x022A2FD8 CBZ X8, 0x22A33AC
	0x022A2FDC LDRSW X10, [X0 + 0x18]
	0x022A2FE0 LDR W11, [X8 + 0x18]
	0x022A2FE4 CMP W10, W11
	0x022A2FE8 B.CS 0x22A3000

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+384], X29
	003 Move [X31+400], X30
	004 Move [X31+408], X23
	005 Move [X31+416], X22
	006 Move [X31+424], X21
	007 Move [X31+432], X20
	008 Move [X31+440], X19
	009 Move X8, [X3+56]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X21, X1
	013 Move X22, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {43}
	016 Move X0, 0x1E7B000
	017 Move X0, [X0+2088]
	018 Call 0x1C17CF4
	019 Move X0, 0x1E52000
	020 Move X0, [X0+1728]
	021 Call 0x1C17CF4
	022 Move X0, 0x1E7B000
	023 Move X0, [X0+2096]
	024 Call 0x1C17CF4
	025 Move X0, 0x1E7B000
	026 Move X0, [X0+2104]
	027 Call 0x1C17CF4
	028 Move X0, 0x1E7B000
	029 Move X0, [X0+2112]
	030 Call 0x1C17CF4
	031 Move X0, 0x1E7B000
	032 Move X0, [X0+2120]
	033 Call 0x1C17CF4
	034 Move X0, 0x1E7B000
	035 Move X0, [X0+2128]
	036 Call 0x1C17CF4
	037 Move X8, [X19+56]
	038 Compare X8, 0
	039 JumpIfNotEqual {43}
	040 Move X0, X19
	041 Call 0x1C5D6E0
	042 Move X8, [X19+56]
	043 Move X9, 0x1E52000
	044 Move X9, [X9+1728]
	045 Move [X31+368], X31
	046 Move [X31+376], X31
	047 Move X23, [X8]
	048 Move X0, [X9]
	049 Move W9, [X0+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X23
	054 Move X1, X31
	055 Call Type.GetTypeFromHandle, X0
	056 Move X8, 0x1E7B000
	057 Move X8, [X8+2128]
	058 Move X23, X0
	059 Move X1, X31
	060 Move X8, [X8]
	061 Move X0, X8
	062 Call Type.GetTypeFromHandle, X0
	063 Move X1, X0
	064 Move X0, X23
	065 Move X2, X31
	066 Call Type.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {83}
	071 Move X8, 0x1E7B000
	072 Move X8, [X8+2096]
	073 Move X0, [X8]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X22
	079 Move X1, X21
	080 Move X2, X20
	081 Move X3, X31
	082 Call UQueryExtensions.Q, X0, X1, X2
	083 Move X23, 0x1E7B000
	084 Move X23, [X23+2096]
	085 Move X0, [X23]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X8, 0x1E7B000
	091 Move X8, [X8+2120]
	092 Move X0, [X8]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X8, [X23]
	098 Move X9, 0x1E7B000
	099 Move X8, [X8+184]
	100 Move X9, [X9+2112]
	101 Compare X21, 0
	102 JumpIfEqual {264}
	103 Compare X20, 0
	104 JumpIfEqual {383}
	105 Move X2, [X9]
	106 Add X0, X8, 112
	107 Move X1, X22
	108 Call 0x272620C, X0, X1
	109 Move [X31+368], X0
	110 Move [X31+376], X1
	111 Compare X1, 0
	112 JumpIfEqual {624}
	113 Move X23, 0x1E7B000
	114 Move X23, [X23+2088]
	115 Move X0, X1
	116 Move W1, W31
	117 Move X2, [X23]
	118 Call List`1<RuleMatcher>.get_Item, X0, X1
	119 Compare X1, 0
	120 JumpIfEqual {624}
	121 Move X0, X1
	122 Move X1, X31
	123 Call StyleComplexSelector.get_selectors, X0
	124 Compare X0, 0
	125 JumpIfEqual {624}
	126 Move W8, [X0+24]
	127 Compare W8, 0
	128 JumpIfEqual {625}
	129 Move X0, [X0+32]
	130 Compare X0, 0
	131 JumpIfEqual {624}
	132 Move X1, X31
	133 Call StyleSelector.get_parts, X0
	134 Move X8, [X19+56]
	135 Move X22, X0
	136 Move X8, [X8+24]
	137 Move W9, [X8+309]
	138 Move TEMP, X9
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {145}
	142 Move X0, X8
	143 Call 0x1C5D684
	144 Move X8, X0
	145 Move W9, [X8+224]
	146 Compare W9, 0
	147 JumpIfNotEqual {150}
	148 Move X0, X8
	149 Call 0x1C17DFC
	150 Move X8, [X19+56]
	151 Move X0, [X8+24]
	152 Move W8, [X0+309]
	153 Move TEMP, X8
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfEqual {158}
	157 Call 0x1C5D684
	158 Move X8, [X0+184]
	159 Move X1, X31
	160 Move X0, [X8]
	161 Add X8, X31, 304
	162 Call StyleSelectorPart.CreatePredicate, X0
	163 Move V0, [X31+19]
	164 Move X8, [X31+320]
	165 Move [X31+21], V0
	166 Move [X31+352], X8
	167 Compare X22, 0
	168 JumpIfEqual {624}
	169 Move V0, [X31+21]
	170 Move X8, [X31+352]
	171 Move [X31+5], V0
	172 Move [X31+96], X8
	173 Move W8, [X22+24]
	174 Compare W8, 0
	175 JumpIfEqual {625}
	176 Move X8, [X31+96]
	177 Move V0, [X31+5]
	178 Move [X22+48], X8
	179 Move [X22+2], V0
	180 Move X0, [X31+376]
	181 Compare X0, 0
	182 JumpIfEqual {624}
	183 Move X2, [X23]
	184 Move W1, W31
	185 Call List`1<RuleMatcher>.get_Item, X0, X1
	186 Compare X1, 0
	187 JumpIfEqual {624}
	188 Move X0, X1
	189 Move X1, X31
	190 Call StyleComplexSelector.get_selectors, X0
	191 Compare X0, 0
	192 JumpIfEqual {624}
	193 Move W8, [X0+24]
	194 Compare W8, 0
	195 JumpIfEqual {625}
	196 Move X0, [X0+32]
	197 Compare X0, 0
	198 JumpIfEqual {624}
	199 Move X1, X31
	200 Call StyleSelector.get_parts, X0
	201 Move X22, X0
	202 Add X8, X31, 208
	203 Move X0, X21
	204 Move X1, X31
	205 Call StyleSelectorPart.CreateId, X0
	206 Move V0, [X31+13]
	207 Move X8, [X31+224]
	208 Move [X31+19], V0
	209 Move [X31+320], X8
	210 Compare X22, 0
	211 JumpIfEqual {624}
	212 Move V0, [X31+19]
	213 Move X8, [X31+320]
	214 Move [X31+3], V0
	215 Move [X31+64], X8
	216 Move W8, [X22+24]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X8, [X31+64]
	219 Move V0, [X31+3]
	220 Move [X22+72], X8
	221 Move [X22+56], V0
	222 Move X0, [X31+376]
	223 Compare X0, 0
	224 JumpIfEqual {624}
	225 Move X2, [X23]
	226 Move W1, W31
	227 Call List`1<RuleMatcher>.get_Item, X0, X1
	228 Compare X1, 0
	229 JumpIfEqual {624}
	230 Move X0, X1
	231 Move X1, X31
	232 Call StyleComplexSelector.get_selectors, X0
	233 Compare X0, 0
	234 JumpIfEqual {624}
	235 Move W8, [X0+24]
	236 Compare W8, 0
	237 JumpIfEqual {625}
	238 Move X0, [X0+32]
	239 Compare X0, 0
	240 JumpIfEqual {624}
	241 Move X1, X31
	242 Call StyleSelector.get_parts, X0
	243 Move X21, X0
	244 Add X8, X31, 24
	245 Move X0, X20
	246 Move X1, X31
	247 Call StyleSelectorPart.CreateClass, X0
	248 NotImplemented "Instruction LDUR not yet implemented."
	249 Move X8, [X31+40]
	250 Move [X31+13], V0
	251 Move [X31+224], X8
	252 Compare X21, 0
	253 JumpIfEqual {624}
	254 Move V0, [X31+13]
	255 Move X8, [X31+224]
	256 Move [X31], V0
	257 Move [X31+16], X8
	258 Move W8, [X21+24]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X8, [X31+16]
	261 Move V0, [X31]
	262 Move [X21+96], X8
	263 Move [X21+5], V0
	264 Compare X20, 0
	265 JumpIfEqual {500}
	266 Move X2, [X9]
	267 Add X0, X8, 96
	268 Move X1, X22
	269 Call 0x272620C, X0, X1
	270 Move [X31+368], X0
	271 Move [X31+376], X1
	272 Compare X1, 0
	273 JumpIfEqual {624}
	274 Move X22, 0x1E7B000
	275 Move X22, [X22+2088]
	276 Move X0, X1
	277 Move W1, W31
	278 Move X2, [X22]
	279 Call List`1<RuleMatcher>.get_Item, X0, X1
	280 Compare X1, 0
	281 JumpIfEqual {624}
	282 Move X0, X1
	283 Move X1, X31
	284 Call StyleComplexSelector.get_selectors, X0
	285 Compare X0, 0
	286 JumpIfEqual {624}
	287 Move W8, [X0+24]
	288 Compare W8, 0
	289 JumpIfEqual {625}
	290 Move X0, [X0+32]
	291 Compare X0, 0
	292 JumpIfEqual {624}
	293 Move X1, X31
	294 Call StyleSelector.get_parts, X0
	295 Move X8, [X19+56]
	296 Move X21, X0
	297 Move X8, [X8+24]
	298 Move W9, [X8+309]
	299 Move TEMP, X9
	300 And TEMP, TEMP, 1
	301 Compare TEMP, 1
	302 JumpIfEqual {306}
	303 Move X0, X8
	304 Call 0x1C5D684
	305 Move X8, X0
	306 Move W9, [X8+224]
	307 Compare W9, 0
	308 JumpIfNotEqual {311}
	309 Move X0, X8
	310 Call 0x1C17DFC
	311 Move X8, [X19+56]
	312 Move X0, [X8+24]
	313 Move W8, [X0+309]
	314 Move TEMP, X8
	315 And TEMP, TEMP, 1
	316 Compare TEMP, 1
	317 JumpIfEqual {319}
	318 Call 0x1C5D684
	319 Move X8, [X0+184]
	320 Move X1, X31
	321 Move X0, [X8]
	322 Add X8, X31, 304
	323 Call StyleSelectorPart.CreatePredicate, X0
	324 Move V0, [X31+19]
	325 Move X8, [X31+320]
	326 Move [X31+21], V0
	327 Move [X31+352], X8
	328 Compare X21, 0
	329 JumpIfEqual {624}
	330 Move V0, [X31+21]
	331 Move X8, [X31+352]
	332 Move [X31+15], V0
	333 Move [X31+256], X8
	334 Move W8, [X21+24]
	335 Compare W8, 0
	336 JumpIfEqual {625}
	337 Move X8, [X31+256]
	338 Move V0, [X31+15]
	339 Move [X21+48], X8
	340 Move [X21+2], V0
	341 Move X0, [X31+376]
	342 Compare X0, 0
	343 JumpIfEqual {624}
	344 Move X2, [X22]
	345 Move W1, W31
	346 Call List`1<RuleMatcher>.get_Item, X0, X1
	347 Compare X1, 0
	348 JumpIfEqual {624}
	349 Move X0, X1
	350 Move X1, X31
	351 Call StyleComplexSelector.get_selectors, X0
	352 Compare X0, 0
	353 JumpIfEqual {624}
	354 Move W8, [X0+24]
	355 Compare W8, 0
	356 JumpIfEqual {625}
	357 Move X0, [X0+32]
	358 Compare X0, 0
	359 JumpIfEqual {624}
	360 Move X1, X31
	361 Call StyleSelector.get_parts, X0
	362 Move X21, X0
	363 Add X8, X31, 208
	364 Move X0, X20
	365 Move X1, X31
	366 Call StyleSelectorPart.CreateClass, X0
	367 Move V0, [X31+13]
	368 Move X8, [X31+224]
	369 Move [X31+19], V0
	370 Move [X31+320], X8
	371 Compare X21, 0
	372 JumpIfEqual {624}
	373 Move V0, [X31+19]
	374 Move X8, [X31+320]
	375 Move [X31+11], V0
	376 Move [X31+192], X8
	377 Move W8, [X21+24]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Move X8, [X31+192]
	380 Move V0, [X31+11]
	381 Move [X21+72], X8
	382 Move [X21+56], V0
	383 Move X2, [X9]
	384 Add X0, X8, 80
	385 Move X1, X22
	386 Call 0x272620C, X0, X1
	387 Move [X31+368], X0
	388 Move [X31+376], X1
	389 Compare X1, 0
	390 JumpIfEqual {624}
	391 Move X22, 0x1E7B000
	392 Move X22, [X22+2088]
	393 Move X0, X1
	394 Move W1, W31
	395 Move X2, [X22]
	396 Call List`1<RuleMatcher>.get_Item, X0, X1
	397 Compare X1, 0
	398 JumpIfEqual {624}
	399 Move X0, X1
	400 Move X1, X31
	401 Call StyleComplexSelector.get_selectors, X0
	402 Compare X0, 0
	403 JumpIfEqual {624}
	404 Move W8, [X0+24]
	405 Compare W8, 0
	406 JumpIfEqual {625}
	407 Move X0, [X0+32]
	408 Compare X0, 0
	409 JumpIfEqual {624}
	410 Move X1, X31
	411 Call StyleSelector.get_parts, X0
	412 Move X8, [X19+56]
	413 Move X20, X0
	414 Move X8, [X8+24]
	415 Move W9, [X8+309]
	416 Move TEMP, X9
	417 And TEMP, TEMP, 1
	418 Compare TEMP, 1
	419 JumpIfEqual {423}
	420 Move X0, X8
	421 Call 0x1C5D684
	422 Move X8, X0
	423 Move W9, [X8+224]
	424 Compare W9, 0
	425 JumpIfNotEqual {428}
	426 Move X0, X8
	427 Call 0x1C17DFC
	428 Move X8, [X19+56]
	429 Move X0, [X8+24]
	430 Move W8, [X0+309]
	431 Move TEMP, X8
	432 And TEMP, TEMP, 1
	433 Compare TEMP, 1
	434 JumpIfEqual {436}
	435 Call 0x1C5D684
	436 Move X8, [X0+184]
	437 Move X1, X31
	438 Move X0, [X8]
	439 Add X8, X31, 304
	440 Call StyleSelectorPart.CreatePredicate, X0
	441 Move V0, [X31+19]
	442 Move X8, [X31+320]
	443 Move [X31+21], V0
	444 Move [X31+352], X8
	445 Compare X20, 0
	446 JumpIfEqual {624}
	447 Move V0, [X31+21]
	448 Move X8, [X31+352]
	449 Move [X31+9], V0
	450 Move [X31+160], X8
	451 Move W8, [X20+24]
	452 Compare W8, 0
	453 JumpIfEqual {625}
	454 Move X8, [X31+160]
	455 Move V0, [X31+9]
	456 Move [X20+48], X8
	457 Move [X20+2], V0
	458 Move X0, [X31+376]
	459 Compare X0, 0
	460 JumpIfEqual {624}
	461 Move X2, [X22]
	462 Move W1, W31
	463 Call List`1<RuleMatcher>.get_Item, X0, X1
	464 Compare X1, 0
	465 JumpIfEqual {624}
	466 Move X0, X1
	467 Move X1, X31
	468 Call StyleComplexSelector.get_selectors, X0
	469 Compare X0, 0
	470 JumpIfEqual {624}
	471 Move W8, [X0+24]
	472 Compare W8, 0
	473 JumpIfEqual {625}
	474 Move X0, [X0+32]
	475 Compare X0, 0
	476 JumpIfEqual {624}
	477 Move X1, X31
	478 Call StyleSelector.get_parts, X0
	479 Move X20, X0
	480 Add X8, X31, 208
	481 Move X0, X21
	482 Move X1, X31
	483 Call StyleSelectorPart.CreateId, X0
	484 Move V0, [X31+13]
	485 Move X8, [X31+224]
	486 Move [X31+19], V0
	487 Move [X31+320], X8
	488 Compare X20, 0
	489 JumpIfEqual {624}
	490 Move V0, [X31+19]
	491 Move X8, [X31+320]
	492 Move [X31+7], V0
	493 Move [X31+128], X8
	494 Move W8, [X20+24]
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move X8, [X31+128]
	497 Move V0, [X31+7]
	498 Move [X20+72], X8
	499 Move [X20+56], V0
	500 Move X2, [X9]
	501 Add X0, X8, 64
	502 Move X1, X22
	503 Call 0x272620C, X0, X1
	504 Move [X31+368], X0
	505 Move [X31+376], X1
	506 Compare X1, 0
	507 JumpIfEqual {624}
	508 Move X8, 0x1E7B000
	509 Move X8, [X8+2088]
	510 Move X0, X1
	511 Move W1, W31
	512 Move X2, [X8]
	513 Call List`1<RuleMatcher>.get_Item, X0, X1
	514 Compare X1, 0
	515 JumpIfEqual {624}
	516 Move X0, X1
	517 Move X1, X31
	518 Call StyleComplexSelector.get_selectors, X0
	519 Compare X0, 0
	520 JumpIfEqual {624}
	521 Move W8, [X0+24]
	522 Compare W8, 0
	523 JumpIfEqual {625}
	524 Move X0, [X0+32]
	525 Compare X0, 0
	526 JumpIfEqual {624}
	527 Move X1, X31
	528 Call StyleSelector.get_parts, X0
	529 Move X8, [X19+56]
	530 Move X20, X0
	531 Move X8, [X8+24]
	532 Move W9, [X8+309]
	533 Move TEMP, X9
	534 And TEMP, TEMP, 1
	535 Compare TEMP, 1
	536 JumpIfEqual {540}
	537 Move X0, X8
	538 Call 0x1C5D684
	539 Move X8, X0
	540 Move W9, [X8+224]
	541 Compare W9, 0
	542 JumpIfNotEqual {545}
	543 Move X0, X8
	544 Call 0x1C17DFC
	545 Move X8, [X19+56]
	546 Move X0, [X8+24]
	547 Move W8, [X0+309]
	548 Move TEMP, X8
	549 And TEMP, TEMP, 1
	550 Compare TEMP, 1
	551 JumpIfEqual {553}
	552 Call 0x1C5D684
	553 Move X8, [X0+184]
	554 Move X1, X31
	555 Move X0, [X8]
	556 Add X8, X31, 304
	557 Call StyleSelectorPart.CreatePredicate, X0
	558 Move V0, [X31+19]
	559 Move X8, [X31+320]
	560 Move [X31+21], V0
	561 Move [X31+352], X8
	562 Compare X20, 0
	563 JumpIfEqual {624}
	564 Move V0, [X31+21]
	565 Move X8, [X31+352]
	566 Move [X31+17], V0
	567 Move [X31+288], X8
	568 Move W8, [X20+24]
	569 Compare W8, 0
	570 JumpIfEqual {625}
	571 Move X8, [X31+288]
	572 Move V0, [X31+17]
	573 Move [X20+48], X8
	574 Move [X20+2], V0
	575 Move X8, 0x1E7B000
	576 Move X8, [X8+2104]
	577 Add X0, X31, 368
	578 Move X1, [X8]
	579 Call 0x2726340, X0
	580 Move X8, [X19+56]
	581 Move X20, X0
	582 Move X1, [X8+8]
	583 Move W8, [X1+309]
	584 Move TEMP, X8
	585 And TEMP, TEMP, 1
	586 Compare TEMP, 1
	587 JumpIfEqual {591}
	588 Move X0, X1
	589 Call 0x1C5D684
	590 Move X1, X0
	591 Move X0, X20
	592 Call 0x1C17E00
	593 Move X8, [X19+56]
	594 Move X20, X0
	595 Move X19, [X8+8]
	596 Move W8, [X19+309]
	597 Move TEMP, X8
	598 And TEMP, TEMP, 1
	599 Compare TEMP, 1
	600 JumpIfEqual {604}
	601 Move X0, X19
	602 Call 0x1C5D684
	603 Move X19, X0
	604 Compare X20, 0
	605 JumpIfEqual {614}
	606 Move X0, X20
	607 Move X1, X19
	608 Call 0x1C17E00
	609 Compare X0, 0
	610 JumpIfNotEqual {615}
	611 Move X0, X20
	612 Move X1, X19
	613 Call 0x1C181E0
	614 Move X0, X31
	615 Move X20, [X31+432]
	616 Move X19, [X31+440]
	617 Move X22, [X31+416]
	618 Move X21, [X31+424]
	619 Move X30, [X31+400]
	620 Move X23, [X31+408]
	621 Move X29, [X31+384]
	622 Add X31, X31, 448
	623 Return X0
	624 Call 0x1C17F20
	625 Call 0x1C17F28

Method: UnityEngine.UIElements.VisualElement Q(UnityEngine.UIElements.VisualElement e, System.String name = null, System.String className = null)

Disassembly:
	0x03E1AD90 STRB W8, [X20 + 0x3FF]
	0x03E1AD94 LDR X0, [X21]
	0x03E1AD98 BL 0x1C16F10
	0x03E1AD9C MOV X20, X0
	0x03E1ADA0 BL 0x3E0A2F4
	0x03E1ADA4 CBZ X20, 0x3E1ADE4
	0x03E1ADA8 ADRP X8, 0x350000
	0x03E1ADAC LDR X8, [X8 + 0x870]
	0x03E1ADB0 MOVZ W9, 0x3
	0x03E1ADB4 MOV X0, X19
	0x03E1ADB8 MOV X1, X31
	0x03E1ADBC LDR X8, [X8]
	0x03E1ADC0 STR W9, [X20 + 0x30]
	0x03E1ADC4 STR X8, [X20 + 0x10]
	0x03E1ADC8 STR X20, [X19 + 0x18]
	0x03E1ADCC BL 0x33BDD8C
	0x03E1ADD0 MOVZ W8, 0x1
	0x03E1ADD4 STRB W8, [X19 + 0x10]
	0x03E1ADD8 LDP X20, X19, [X31 + 0x10]
	0x03E1ADDC LDP X30, X21, [X31], #0x20
	0x03E1ADE0 RET
	0x03E1ADE4 BL 0x1C16F20
	0x03E1ADE8 LDR X0, [X0 + 0x80]
	0x03E1ADEC RET
	0x03E1ADF0 STP X30, X19, [X31 - 0x10]!
	0x03E1ADF4 MOV X1, X31
	0x03E1ADF8 MOV X19, X0
	0x03E1ADFC BL 0x33BDD8C
	0x03E1AE00 MOVZ W8, 0x1
	0x03E1AE04 STR W8, [X19 + 0x30]
	0x03E1AE08 STR X31, [X19 + 0x38]
	0x03E1AE0C LDP X30, X19, [X31], #0x10
	0x03E1AE10 RET
	0x03E1AE14 LDR X0, [X0 + 0x10]
	0x03E1AE18 RET
	0x03E1AE1C STR X1, [X0 + 0x10]
	0x03E1AE20 RET
	0x03E1AE24 STR X30, [X31 - 0x30]!
	0x03E1AE28 STP X22, X21, [X31 + 0x10]
	0x03E1AE2C STP X20, X19, [X31 + 0x20]
	0x03E1AE30 ADRP X21, 0x5CE000
	0x03E1AE34 ADRP X22, 0x2D9000
	0x03E1AE38 LDRB W8, [X21 + 0x401]
	0x03E1AE3C LDR X22, [X22 + 0xEB8]
	0x03E1AE40 MOV X20, X1
	0x03E1AE44 MOV X19, X0
	0x03E1AE48 TBNZ X8, 0x0, 0x3E1AE60
	0x03E1AE4C ADRP X0, 0x2D9000
	0x03E1AE50 LDR X0, [X0 + 0xEB8]
	0x03E1AE54 BL 0x1C16CF4
	0x03E1AE58 MOVZ W8, 0x1
	0x03E1AE5C STRB W8, [X21 + 0x401]
	0x03E1AE60 LDR X1, [X22]
	0x03E1AE64 MOV X0, X20
	0x03E1AE68 BL 0x21D577C
	0x03E1AE6C STR X0, [X19 + 0x18]
	0x03E1AE70 LDP X20, X19, [X31 + 0x20]
	0x03E1AE74 LDP X22, X21, [X31 + 0x10]
	0x03E1AE78 LDR X30, [X31], #0x30
	0x03E1AE7C RET
	0x03E1AE80 STR X1, [X0 + 0x20]
	0x03E1AE84 RET
	0x03E1AE88 STR X1, [X0 + 0x28]
	0x03E1AE8C RET
	0x03E1AE90 STR W1, [X0 + 0x30]
	0x03E1AE94 RET
	0x03E1AE98 STR X1, [X0 + 0x38]
	0x03E1AE9C RET
	0x03E1AEA0 SUB X31, X31, 0x70
	0x03E1AEA4 STP X30, X27, [X31 + 0x20]
	0x03E1AEA8 STP X26, X25, [X31 + 0x30]
	0x03E1AEAC STP X24, X23, [X31 + 0x40]
	0x03E1AEB0 STP X22, X21, [X31 + 0x50]
	0x03E1AEB4 STP X20, X19, [X31 + 0x60]
	0x03E1AEB8 ADRP X23, 0x5CE000
	0x03E1AEBC LDRB W8, [X23 + 0x402]
	0x03E1AEC0 MOV X19, X3
	0x03E1AEC4 MOV X20, X2
	0x03E1AEC8 MOV X21, X1
	0x03E1AECC MOV X22, X0
	0x03E1AED0 TBNZ X8, 0x0, 0x3E1AF3C
	0x03E1AED4 ADRP X0, 0x303000
	0x03E1AED8 LDR X0, [X0 + 0xB00]
	0x03E1AEDC BL 0x1C16CF4
	0x03E1AEE0 ADRP X0, 0x2D9000
	0x03E1AEE4 LDR X0, [X0 + 0xA28]
	0x03E1AEE8 BL 0x1C16CF4
	0x03E1AEEC ADRP X0, 0x350000
	0x03E1AEF0 LDR X0, [X0 + 0x878]
	0x03E1AEF4 BL 0x1C16CF4
	0x03E1AEF8 ADRP X0, 0x350000
	0x03E1AEFC LDR X0, [X0 + 0x880]
	0x03E1AF00 BL 0x1C16CF4
	0x03E1AF04 ADRP X0, 0x350000
	0x03E1AF08 LDR X0, [X0 + 0x888]
	0x03E1AF0C BL 0x1C16CF4
	0x03E1AF10 ADRP X0, 0x2D9000
	0x03E1AF14 LDR X0, [X0 + 0x598]
	0x03E1AF18 BL 0x1C16CF4
	0x03E1AF1C ADRP X0, 0x350000
	0x03E1AF20 LDR X0, [X0 + 0x890]
	0x03E1AF24 BL 0x1C16CF4
	0x03E1AF28 ADRP X0, 0x2E1000
	0x03E1AF2C LDR X0, [X0 + 0x588]
	0x03E1AF30 BL 0x1C16CF4
	0x03E1AF34 MOVZ W8, 0x1
	0x03E1AF38 STRB W8, [X23 + 0x402]
	0x03E1AF3C STR X31, [X31 + 0x18]
	0x03E1AF40 LDR X8, [X22 + 0x10]
	0x03E1AF44 CBZ X8, 0x3E1AFA0
	0x03E1AF48 CBZ X21, 0x3E1B334
	0x03E1AF4C ADRP X24, 0x350000
	0x03E1AF50 ADRP X10, 0x2E1000
	0x03E1AF54 LDR X8, [X21]
	0x03E1AF58 LDR X24, [X24 + 0x878]
	0x03E1AF5C LDR X10, [X10 + 0x588]
	0x03E1AF60 LDRH W9, [X8 + 0x12E]
	0x03E1AF64 LDR X1, [X24]
	0x03E1AF68 LDR X23, [X10]
	0x03E1AF6C CBZ X9, 0x3E1AF90
	0x03E1AF70 LDR X10, [X8 + 0xB0]
	0x03E1AF74 ADD X10, X10, 0x8
	0x03E1AF78 LDUR X11, [X10 - 0x8]
	0x03E1AF7C CMP X11, X1
	0x03E1AF80 B.EQ 0x3E1AFE0
	0x03E1AF84 SUBS X9, X9, 0x1
	0x03E1AF88 ADD X10, X10, 0x10
	0x03E1AF8C B.NE 0x3E1AF78
	0x03E1AF90 MOV X0, X21
	0x03E1AF94 MOV W2, W31
	0x03E1AF98 BL 0x1C5C788
	0x03E1AF9C B 0x3E1AFEC
	0x03E1AFA0 LDR X8, [X22 + 0x18]
	0x03E1AFA4 CBZ X8, 0x3E1AFB0
	0x03E1AFA8 LDR W8, [X8 + 0x18]
	0x03E1AFAC CBNZ W8, 0x3E1AF48
	0x03E1AFB0 ADRP X8, 0x2D9000
	0x03E1AFB4 LDR X8, [X8 + 0xA28]
	0x03E1AFB8 LDR X0, [X8]
	0x03E1AFBC LDR W8, [X0 + 0xE0]
	0x03E1AFC0 CBNZ W8, 0x3E1AFC8
	0x03E1AFC4 BL 0x1C16DFC
	0x03E1AFC8 ADRP X8, 0x350000
	0x03E1AFCC LDR X8, [X8 + 0x890]
	0x03E1AFD0 MOV X1, X31
	0x03E1AFD4 LDR X0, [X8]
	0x03E1AFD8 BL 0x3C0649C
	0x03E1AFDC B 0x3E1B338
	0x03E1AFE0 LDRSW X9, [X10]
	0x03E1AFE4 ADD X8, X8, X9, 0x4, LSL
	0x03E1AFE8 ADD X0, X8, 0x138
	0x03E1AFEC LDP X8, X3, [X0]
	0x03E1AFF0 ADD X2, X31, 0x18
	0x03E1AFF4 MOV X0, X21
	0x03E1AFF8 MOV X1, X23
	0x03E1AFFC BLR X8
	0x03E1B000 LDR X0, [X31 + 0x18]
	0x03E1B004 MOV X1, X31
	0x03E1B008 BL 0x32277A8
	0x03E1B00C TBNZ X0, 0x0, 0x3E1B160
	0x03E1B010 ADRP X25, 0x302000
	0x03E1B014 LDR X25, [X25 + 0xB00]
	0x03E1B018 LDR X0, [X25]
	0x03E1B01C LDR W8, [X0 + 0xE0]
	0x03E1B020 CBNZ W8, 0x3E1B028
	0x03E1B024 BL 0x1C16DFC
	0x03E1B028 LDR X8, [X20 + 0x18]
	0x03E1B02C CBZ X8, 0x3E1B160
	0x03E1B030 ADRP X26, 0x34F000
	0x03E1B034 LDR X26, [X26 + 0x888]
	0x03E1B038 MOV W23, W31
	0x03E1B03C LDR X0, [X25]
	0x03E1B040 LDR W8, [X0 + 0xE0]
	0x03E1B044 CBNZ W8, 0x3E1B04C
	0x03E1B048 BL 0x1C16DFC
	0x03E1B04C LDR X0, [X20 + 0x18]
	0x03E1B050 CBZ X0, 0x3E1B334
	0x03E1B054 LDR W8, [X0 + 0x18]
	0x03E1B058 CMP W23, W8
	0x03E1B05C B.GE 0x3E1B160
	0x03E1B060 LDR X8, [X25]
	0x03E1B064 LDR W9, [X8 + 0xE0]
	0x03E1B068 CBNZ W9, 0x3E1B07C
	0x03E1B06C MOV X0, X8
	0x03E1B070 BL 0x1C16DFC
	0x03E1B074 LDR X0, [X20 + 0x18]
	0x03E1B078 CBZ X0, 0x3E1B334
	0x03E1B07C LDR X2, [X26]
	0x03E1B080 ADD X8, X31, 0x0
	0x03E1B084 MOV W1, W23
	0x03E1B088 BL 0x3143690
	0x03E1B08C LDR X0, [X31]
	0x03E1B090 LDR X1, [X31 + 0x18]
	0x03E1B094 MOV X2, X31
	0x03E1B098 BL 0x3226EF8
	0x03E1B09C TBNZ X0, 0x0, 0x3E1B158
	0x03E1B0A0 LDR X0, [X25]
	0x03E1B0A4 LDR W8, [X0 + 0xE0]
	0x03E1B0A8 CBNZ W8, 0x3E1B0B0
	0x03E1B0AC BL 0x1C16DFC
	0x03E1B0B0 LDR X0, [X20 + 0x18]
	0x03E1B0B4 CBZ X0, 0x3E1B334
	0x03E1B0B8 LDR X2, [X26]
	0x03E1B0BC ADD X8, X31, 0x0
	0x03E1B0C0 MOV W1, W23
	0x03E1B0C4 BL 0x3143690
	0x03E1B0C8 LDR X0, [X31 + 0x8]
	0x03E1B0CC LDR X1, [X22 + 0x10]
	0x03E1B0D0 MOV X2, X31
	0x03E1B0D4 BL 0x3226EF8
	0x03E1B0D8 TBZ X0, 0x0, 0x3E1B244
	0x03E1B0DC LDR X8, [X22 + 0x18]
	0x03E1B0E0 CBZ X8, 0x3E1B158
	0x03E1B0E4 MOV X27, X31
	0x03E1B0E8 LDRSW X8, [X8 + 0x18]
	0x03E1B0EC CMP X27, X8
	0x03E1B0F0 B.GE 0x3E1B158
	0x03E1B0F4 LDR X0, [X25]
	0x03E1B0F8 LDR W8, [X0 + 0xE0]
	0x03E1B0FC CBNZ W8, 0x3E1B104
	0x03E1B100 BL 0x1C16DFC
	0x03E1B104 LDR X0, [X20 + 0x18]
	0x03E1B108 CBZ X0, 0x3E1B334
	0x03E1B10C LDR X2, [X26]
	0x03E1B110 ADD X8, X31, 0x0
	0x03E1B114 MOV W1, W23
	0x03E1B118 BL 0x3143690
	0x03E1B11C LDR X8, [X22 + 0x18]
	0x03E1B120 CBZ X8, 0x3E1B334
	0x03E1B124 LDR W9, [X8 + 0x18]
	0x03E1B128 CMP X27, X9
	0x03E1B12C B.CS 0x3E1B3A8
	0x03E1B130 ADD X8, X8, X27, 0x3, LSL
	0x03E1B134 LDR X0, [X31 + 0x8]
	0x03E1B138 LDR X1, [X8 + 0x20]
	0x03E1B13C MOV X2, X31
	0x03E1B140 BL 0x321BA08
	0x03E1B144 TBNZ X0, 0x0, 0x3E1B244
	0x03E1B148 LDR X8, [X22 + 0x18]
	0x03E1B14C ADD X27, X27, 0x1
	0x03E1B150 CBNZ X8, 0x3E1B0E8
	0x03E1B154 B 0x3E1B334
	0x03E1B158 ADD W23, W23, 0x1
	0x03E1B15C B 0x3E1B03C
	0x03E1B160 LDR X23, [X22 + 0x10]
	0x03E1B164 CBZ X23, 0x3E1B1A8
	0x03E1B168 LDR X8, [X21]
	0x03E1B16C LDR X1, [X24]
	0x03E1B170 LDRH W9, [X8 + 0x12E]
	0x03E1B174 CBZ X9, 0x3E1B198
	0x03E1B178 LDR X10, [X8 + 0xB0]
	0x03E1B17C ADD X10, X10, 0x8
	0x03E1B180 LDUR X11, [X10 - 0x8]
	0x03E1B184 CMP X11, X1
	0x03E1B188 B.EQ 0x3E1B278
	0x03E1B18C SUBS X9, X9, 0x1
	0x03E1B190 ADD X10, X10, 0x10
	0x03E1B194 B.NE 0x3E1B180
	0x03E1B198 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+240], X29
	003 Move [X31+256], X30
	004 Move [X31+264], X23
	005 Move [X31+272], X22
	006 Move [X31+280], X21
	007 Move [X31+288], X20
	008 Move [X31+296], X19
	009 Move X22, 0x5CF000
	010 Move W8, [X22+1006]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x303000
	019 Move X0, [X0+2088]
	020 Call 0x1C17CF4
	021 Move X0, 0x303000
	022 Move X0, [X0+2096]
	023 Call 0x1C17CF4
	024 Move X0, 0x303000
	025 Move X0, [X0+2104]
	026 Call 0x1C17CF4
	027 Move X0, 0x303000
	028 Move X0, [X0+2112]
	029 Call 0x1C17CF4
	030 Move X0, 0x303000
	031 Move X0, [X0+2120]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1006], W8
	035 Move [X31+224], X31
	036 Move [X31+232], X31
	037 Move [X31+208], X31
	038 Move [X31+216], X31
	039 Compare X21, 0
	040 JumpIfEqual {286}
	041 Move X22, 0x303000
	042 Move X22, [X22+2096]
	043 Move X23, 0x303000
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Move X23, [X23+2120]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X23]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X8, [X22]
	056 Move X0, [X8+184]
	057 Move X8, 0x303000
	058 Move X8, [X8+2112]
	059 Compare X20, 0
	060 JumpIfEqual {156}
	061 Compare X19, 0
	062 JumpIfEqual {209}
	063 Move X2, [X8]
	064 Add X0, X0, 48
	065 Move X1, X21
	066 Call 0x272620C, X0, X1
	067 Move [X31+224], X0
	068 Move [X31+232], X1
	069 Compare X1, 0
	070 JumpIfEqual {284}
	071 Move X22, 0x303000
	072 Move X22, [X22+2088]
	073 Move X0, X1
	074 Move W1, W31
	075 Move X2, [X22]
	076 Call List`1<RuleMatcher>.get_Item, X0, X1
	077 Compare X1, 0
	078 JumpIfEqual {284}
	079 Move X0, X1
	080 Move X1, X31
	081 Call StyleComplexSelector.get_selectors, X0
	082 Compare X0, 0
	083 JumpIfEqual {284}
	084 Move W8, [X0+24]
	085 Compare W8, 0
	086 JumpIfEqual {285}
	087 Move X0, [X0+32]
	088 Compare X0, 0
	089 JumpIfEqual {284}
	090 Move X1, X31
	091 Call StyleSelector.get_parts, X0
	092 Move X21, X0
	093 Add X8, X31, 144
	094 Move X0, X20
	095 Move X1, X31
	096 Call StyleSelectorPart.CreateId, X0
	097 Move V0, [X31+9]
	098 Move X8, [X31+160]
	099 Move [X31+11], V0
	100 Move [X31+192], X8
	101 Compare X21, 0
	102 JumpIfEqual {284}
	103 Move V0, [X31+11]
	104 Move X8, [X31+192]
	105 Move [X31+3], V0
	106 Move [X31+64], X8
	107 Move W8, [X21+24]
	108 Compare W8, 0
	109 JumpIfEqual {285}
	110 Move X8, [X31+64]
	111 Move V0, [X31+3]
	112 Move [X21+48], X8
	113 Move [X21+2], V0
	114 Move X0, [X31+232]
	115 Compare X0, 0
	116 JumpIfEqual {284}
	117 Move X2, [X22]
	118 Move W1, W31
	119 Call List`1<RuleMatcher>.get_Item, X0, X1
	120 Compare X1, 0
	121 JumpIfEqual {284}
	122 Move X0, X1
	123 Move X1, X31
	124 Call StyleComplexSelector.get_selectors, X0
	125 Compare X0, 0
	126 JumpIfEqual {284}
	127 Move W8, [X0+24]
	128 Compare W8, 0
	129 JumpIfEqual {285}
	130 Move X0, [X0+32]
	131 Compare X0, 0
	132 JumpIfEqual {284}
	133 Move X1, X31
	134 Call StyleSelector.get_parts, X0
	135 Move X20, X0
	136 Add X8, X31, 24
	137 Move X0, X19
	138 Move X1, X31
	139 Call StyleSelectorPart.CreateClass, X0
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 Move X8, [X31+40]
	142 Move [X31+9], V0
	143 Move [X31+160], X8
	144 Compare X20, 0
	145 JumpIfEqual {284}
	146 Move V0, [X31+9]
	147 Move X8, [X31+160]
	148 Move [X31], V0
	149 Move [X31+16], X8
	150 Move W8, [X20+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X8, [X31+16]
	153 Move V0, [X31]
	154 Move [X20+72], X8
	155 Move [X20+56], V0
	156 Compare X19, 0
	157 JumpIfEqual {274}
	158 Move X2, [X8]
	159 Add X0, X0, 32
	160 Move X1, X21
	161 Call 0x272620C, X0, X1
	162 Move [X31+224], X0
	163 Move [X31+232], X1
	164 Compare X1, 0
	165 JumpIfEqual {284}
	166 Move X8, 0x303000
	167 Move X8, [X8+2088]
	168 Move X0, X1
	169 Move W1, W31
	170 Move X2, [X8]
	171 Call List`1<RuleMatcher>.get_Item, X0, X1
	172 Compare X1, 0
	173 JumpIfEqual {284}
	174 Move X0, X1
	175 Move X1, X31
	176 Call StyleComplexSelector.get_selectors, X0
	177 Compare X0, 0
	178 JumpIfEqual {284}
	179 Move W8, [X0+24]
	180 Compare W8, 0
	181 JumpIfEqual {285}
	182 Move X0, [X0+32]
	183 Compare X0, 0
	184 JumpIfEqual {284}
	185 Move X1, X31
	186 Call StyleSelector.get_parts, X0
	187 Move X20, X0
	188 Add X8, X31, 144
	189 Move X0, X19
	190 Move X1, X31
	191 Call StyleSelectorPart.CreateClass, X0
	192 Move V0, [X31+9]
	193 Move X8, [X31+160]
	194 Move [X31+11], V0
	195 Move [X31+192], X8
	196 Compare X20, 0
	197 JumpIfEqual {284}
	198 Move V0, [X31+11]
	199 Move X8, [X31+192]
	200 Move [X31+7], V0
	201 Move [X31+128], X8
	202 Move W8, [X20+24]
	203 Compare W8, 0
	204 JumpIfEqual {285}
	205 Move X8, [X31+128]
	206 Move V0, [X31+7]
	207 Move [X20+48], X8
	208 Move [X20+2], V0
	209 Move X2, [X8]
	210 Add X0, X0, 16
	211 Move X1, X21
	212 Call 0x272620C, X0, X1
	213 Move [X31+224], X0
	214 Move [X31+232], X1
	215 Compare X1, 0
	216 JumpIfEqual {284}
	217 Move X8, 0x302000
	218 Move X8, [X8+2088]
	219 Move X0, X1
	220 Move W1, W31
	221 Move X2, [X8]
	222 Call List`1<RuleMatcher>.get_Item, X0, X1
	223 Compare X1, 0
	224 JumpIfEqual {284}
	225 Move X0, X1
	226 Move X1, X31
	227 Call StyleComplexSelector.get_selectors, X0
	228 Compare X0, 0
	229 JumpIfEqual {284}
	230 Move W8, [X0+24]
	231 Compare W8, 0
	232 JumpIfEqual {285}
	233 Move X0, [X0+32]
	234 Compare X0, 0
	235 JumpIfEqual {284}
	236 Move X1, X31
	237 Call StyleSelector.get_parts, X0
	238 Move X19, X0
	239 Add X8, X31, 144
	240 Move X0, X20
	241 Move X1, X31
	242 Call StyleSelectorPart.CreateId, X0
	243 Move V0, [X31+9]
	244 Move X8, [X31+160]
	245 Move [X31+11], V0
	246 Move [X31+192], X8
	247 Compare X19, 0
	248 JumpIfEqual {284}
	249 Move V0, [X31+11]
	250 Move X8, [X31+192]
	251 Move [X31+5], V0
	252 Move [X31+96], X8
	253 Move W8, [X19+24]
	254 Compare W8, 0
	255 JumpIfEqual {285}
	256 Move X8, [X31+96]
	257 Move V0, [X31+5]
	258 Move [X19+48], X8
	259 Move [X19+2], V0
	260 Move X8, 0x302000
	261 Move X8, [X8+2104]
	262 Add X0, X31, 224
	263 Move X1, [X8]
	264 Call 0x2726340, X0
	265 Move X20, [X31+288]
	266 Move X19, [X31+296]
	267 Move X22, [X31+272]
	268 Move X21, [X31+280]
	269 Move X30, [X31+256]
	270 Move X23, [X31+264]
	271 Move X29, [X31+240]
	272 Add X31, X31, 304
	273 Return X0
	274 Move X2, [X8]
	275 Move X1, X21
	276 Call 0x272620C, X0, X1
	277 Move X8, 0x302000
	278 Move X8, [X8+2104]
	279 Move [X31+208], X0
	280 Move [X31+216], X1
	281 Add X0, X31, 208
	282 Move X8, [X8]
	283 Move X1, X8
	284 Call 0x1C17F20
	285 Call 0x1C17F28
	286 Move X0, 0x2DE000
	287 Move X0, [X0+1320]
	288 Call 0x1C17D08
	289 Call 0x1C17F10
	290 Move X19, X0
	291 Move X0, 0x310000
	292 Move X0, [X0+416]
	293 Call 0x1C17D08
	294 Move X1, X0
	295 Move X0, X19
	296 Move X2, X31
	297 Call ArgumentNullException..ctor, X0, X1
	298 Move X0, 0x350000
	299 Move X0, [X0+2056]
	300 Call 0x1C17D08
	301 Move X1, X0
	302 Move X0, X19
	303 Call 0x1C17DEC

Method: System.Void .cctor()

Disassembly:
	0x03E1B19C MOV W2, W31
	0x03E1B1A0 BL 0x1C5C788
	0x03E1B1A4 B 0x3E1B284
	0x03E1B1A8 LDR X8, [X22 + 0x18]
	0x03E1B1AC CBZ X8, 0x3E1B334
	0x03E1B1B0 MOV X25, X31
	0x03E1B1B4 LDR W9, [X8 + 0x18]
	0x03E1B1B8 CMP X25, W9, SXTW
	0x03E1B1BC B.GE 0x3E1B338
	0x03E1B1C0 CMP X25, X9
	0x03E1B1C4 B.CS 0x3E1B3A8
	0x03E1B1C8 LDR X9, [X21]
	0x03E1B1CC ADD X8, X8, X25, 0x3, LSL
	0x03E1B1D0 LDR X23, [X8 + 0x20]
	0x03E1B1D4 LDR X1, [X24]
	0x03E1B1D8 LDRH W8, [X9 + 0x12E]
	0x03E1B1DC CBZ X8, 0x3E1B200
	0x03E1B1E0 LDR X10, [X9 + 0xB0]
	0x03E1B1E4 ADD X10, X10, 0x8
	0x03E1B1E8 LDUR X11, [X10 - 0x8]
	0x03E1B1EC CMP X11, X1
	0x03E1B1F0 B.EQ 0x3E1B210
	0x03E1B1F4 SUBS X8, X8, 0x1
	0x03E1B1F8 ADD X10, X10, 0x10
	0x03E1B1FC B.NE 0x3E1B1E8
	0x03E1B200 MOV X0, X21
	0x03E1B204 MOV W2, W31
	0x03E1B208 BL 0x1C5C788
	0x03E1B20C B 0x3E1B21C
	0x03E1B210 LDRSW X8, [X10]
	0x03E1B214 ADD X8, X9, X8, 0x4, LSL
	0x03E1B218 ADD X0, X8, 0x138
	0x03E1B21C LDP X8, X3, [X0]
	0x03E1B220 MOV X0, X21
	0x03E1B224 MOV X1, X23
	0x03E1B228 MOV X2, X19
	0x03E1B22C BLR X8
	0x03E1B230 TBNZ X0, 0x0, 0x3E1B344
	0x03E1B234 LDR X8, [X22 + 0x18]
	0x03E1B238 ADD X25, X25, 0x1
	0x03E1B23C CBNZ X8, 0x3E1B1B4
	0x03E1B240 B 0x3E1B334
	0x03E1B244 LDR X0, [X25]
	0x03E1B248 LDR W8, [X0 + 0xE0]
	0x03E1B24C CBNZ W8, 0x3E1B254
	0x03E1B250 BL 0x1C16DFC
	0x03E1B254 LDR X0, [X20 + 0x18]
	0x03E1B258 CBZ X0, 0x3E1B334
	0x03E1B25C LDR X2, [X26]
	0x03E1B260 ADD X8, X31, 0x0
	0x03E1B264 MOV W1, W23
	0x03E1B268 BL 0x3143690
	0x03E1B26C LDR X8, [X31 + 0x10]
	0x03E1B270 STR X8, [X19]
	0x03E1B274 B 0x3E1B388
	0x03E1B278 LDRSW X9, [X10]
	0x03E1B27C ADD X8, X8, X9, 0x4, LSL
	0x03E1B280 ADD X0, X8, 0x138
	0x03E1B284 LDP X8, X3, [X0]
	0x03E1B288 MOV X0, X21
	0x03E1B28C MOV X1, X23
	0x03E1B290 MOV X2, X19
	0x03E1B294 BLR X8
	0x03E1B298 TBNZ X0, 0x0, 0x3E1B388
	0x03E1B29C LDR X8, [X22 + 0x18]
	0x03E1B2A0 CBZ X8, 0x3E1B338
	0x03E1B2A4 MOV X25, X31
	0x03E1B2A8 LDR W9, [X8 + 0x18]
	0x03E1B2AC CMP X25, W9, SXTW
	0x03E1B2B0 B.GE 0x3E1B338
	0x03E1B2B4 CMP X25, X9
	0x03E1B2B8 B.CS 0x3E1B3A8
	0x03E1B2BC LDR X9, [X21]
	0x03E1B2C0 ADD X8, X8, X25, 0x3, LSL
	0x03E1B2C4 LDR X23, [X8 + 0x20]
	0x03E1B2C8 LDR X1, [X24]
	0x03E1B2CC LDRH W8, [X9 + 0x12E]
	0x03E1B2D0 CBZ X8, 0x3E1B2F4
	0x03E1B2D4 LDR X10, [X9 + 0xB0]
	0x03E1B2D8 ADD X10, X10, 0x8
	0x03E1B2DC LDUR X11, [X10 - 0x8]
	0x03E1B2E0 CMP X11, X1
	0x03E1B2E4 B.EQ 0x3E1B304
	0x03E1B2E8 SUBS X8, X8, 0x1
	0x03E1B2EC ADD X10, X10, 0x10
	0x03E1B2F0 B.NE 0x3E1B2DC
	0x03E1B2F4 MOV X0, X21
	0x03E1B2F8 MOV W2, W31
	0x03E1B2FC BL 0x1C5C788
	0x03E1B300 B 0x3E1B310
	0x03E1B304 LDRSW X8, [X10]
	0x03E1B308 ADD X8, X9, X8, 0x4, LSL
	0x03E1B30C ADD X0, X8, 0x138
	0x03E1B310 LDP X8, X3, [X0]
	0x03E1B314 MOV X0, X21
	0x03E1B318 MOV X1, X23
	0x03E1B31C MOV X2, X19
	0x03E1B320 BLR X8
	0x03E1B324 TBNZ X0, 0x0, 0x3E1B344
	0x03E1B328 LDR X8, [X22 + 0x18]
	0x03E1B32C ADD X25, X25, 0x1
	0x03E1B330 CBNZ X8, 0x3E1B2A8
	0x03E1B334 BL 0x1C16F20
	0x03E1B338 MOV W0, W31
	0x03E1B33C STR X31, [X19]
	0x03E1B340 B 0x3E1B38C
	0x03E1B344 ADRP X8, 0x302000
	0x03E1B348 LDR X8, [X8 + 0xB00]
	0x03E1B34C LDR X0, [X8]
	0x03E1B350 LDR W8, [X0 + 0xE0]
	0x03E1B354 CBNZ W8, 0x3E1B35C
	0x03E1B358 BL 0x1C16DFC
	0x03E1B35C ADRP X8, 0x2D8000
	0x03E1B360 LDR X8, [X8 + 0x598]
	0x03E1B364 LDR X19, [X20 + 0x8]
	0x03E1B368 LDR X0, [X8]
	0x03E1B36C LDR W8, [X0 + 0xE0]
	0x03E1B370 CBNZ W8, 0x3E1B378
	0x03E1B374 BL 0x1C16DFC
	0x03E1B378 MOV X0, X19
	0x03E1B37C MOV X1, X31
	0x03E1B380 MOV X2, X31
	0x03E1B384 BL 0x3C354F8
	0x03E1B388 MOVZ W0, 0x1
	0x03E1B38C LDP X20, X19, [X31 + 0x60]
	0x03E1B390 LDP X22, X21, [X31 + 0x50]
	0x03E1B394 LDP X24, X23, [X31 + 0x40]
	0x03E1B398 LDP X26, X25, [X31 + 0x30]
	0x03E1B39C LDP X30, X27, [X31 + 0x20]
	0x03E1B3A0 ADD X31, X31, 0x70
	0x03E1B3A4 RET
	0x03E1B3A8 BL 0x1C16F28
	0x03E1B3AC SUB X31, X31, 0x90
	0x03E1B3B0 STP X30, X23, [X31 + 0x60]
	0x03E1B3B4 STP X22, X21, [X31 + 0x70]
	0x03E1B3B8 STP X20, X19, [X31 + 0x80]
	0x03E1B3BC ADRP X22, 0x5CD000
	0x03E1B3C0 ADRP X23, 0x34F000
	0x03E1B3C4 LDRB W8, [X22 + 0x404]
	0x03E1B3C8 LDR X23, [X23 + 0x898]
	0x03E1B3CC MOV X21, X2
	0x03E1B3D0 MOV X19, X1
	0x03E1B3D4 MOV X20, X0
	0x03E1B3D8 TBNZ X8, 0x0, 0x3E1B420
	0x03E1B3DC ADRP X0, 0x34F000
	0x03E1B3E0 LDR X0, [X0 + 0x8A0]
	0x03E1B3E4 BL 0x1C16CF4
	0x03E1B3E8 ADRP X0, 0x34F000
	0x03E1B3EC LDR X0, [X0 + 0x8A8]
	0x03E1B3F0 BL 0x1C16CF4
	0x03E1B3F4 ADRP X0, 0x34F000
	0x03E1B3F8 LDR X0, [X0 + 0x8B0]
	0x03E1B3FC BL 0x1C16CF4
	0x03E1B400 ADRP X0, 0x34F000
	0x03E1B404 LDR X0, [X0 + 0x898]
	0x03E1B408 BL 0x1C16CF4
	0x03E1B40C ADRP X0, 0x34F000
	0x03E1B410 LDR X0, [X0 + 0x8B8]
	0x03E1B414 BL 0x1C16CF4
	0x03E1B418 MOVZ W8, 0x1
	0x03E1B41C STRB W8, [X22 + 0x404]
	0x03E1B420 LDP V1, V0, [X21]
	0x03E1B424 LDR X0, [X23]
	0x03E1B428 STP V1, V0, [X31 + 0x40]
	0x03E1B42C LDR W8, [X0 + 0xE0]
	0x03E1B430 CBNZ W8, 0x3E1B43C
	0x03E1B434 BL 0x1C16DFC
	0x03E1B438 LDR X0, [X23]
	0x03E1B43C LDR X8, [X0 + 0xB8]
	0x03E1B440 LDR X21, [X8 + 0x8]
	0x03E1B444 CBZ X21, 0x3E1B450
	0x03E1B448 LDP V0, V1, [X31 + 0x40]
	0x03E1B44C B 0x3E1B4AC
	0x03E1B450 LDP V0, V1, [X31 + 0x40]
	0x03E1B454 STP V0, V1, [X31]
	0x03E1B458 LDR W8, [X0 + 0xE0]
	0x03E1B45C CBNZ W8, 0x3E1B468
	0x03E1B460 BL 0x1C16DFC
	0x03E1B464 LDR X0, [X23]
	0x03E1B468 ADRP X9, 0x34F000
	0x03E1B46C LDR X8, [X0 + 0xB8]
	0x03E1B470 LDR X9, [X9 + 0x8A0]
	0x03E1B474 LDR X22, [X8]
	0x03E1B478 LDR X0, [X9]
	0x03E1B47C BL 0x1C16F10
	0x03E1B480 ADRP X8, 0x34F000
	0x03E1B484 LDR X8, [X8 + 0x8B0]
	0x03E1B488 MOV X1, X22
	0x03E1B48C MOV X3, X31
	0x03E1B490 MOV X21, X0
	0x03E1B494 LDR X2, [X8]
	0x03E1B498 BL 0x2D3B298
	0x03E1B49C LDR X8, [X23]
	0x03E1B4A0 LDR X8, [X8 + 0xB8]
	0x03E1B4A4 STR X21, [X8 + 0x8]
	0x03E1B4A8 LDP V0, V1, [X31]
	0x03E1B4AC STP V0, V1, [X31 + 0x20]
	0x03E1B4B0 CBZ X20, 0x3E1B4F4
	0x03E1B4B4 ADRP X8, 0x34F000
	0x03E1B4B8 LDR X8, [X8 + 0x8B8]
	0x03E1B4BC LDR X4, [X20 + 0x40]
	0x03E1B4C0 LDP V0, V1, [X31 + 0x20]
	0x03E1B4C4 ADD X2, X31, 0x40
	0x03E1B4C8 LDR X5, [X8]
	0x03E1B4CC MOV X0, X20
	0x03E1B4D0 MOV X1, X19
	0x03E1B4D4 MOV X3, X21
	0x03E1B4D8 STP V0, V1, [X31 + 0x40]
	0x03E1B4DC BL 0x22A9238
	0x03E1B4E0 LDP X20, X19, [X31 + 0x80]
	0x03E1B4E4 LDP X22, X21, [X31 + 0x70]
	0x03E1B4E8 LDP X30, X23, [X31 + 0x60]
	0x03E1B4EC ADD X31, X31, 0x90
	0x03E1B4F0 RET
	0x03E1B4F4 BL 0x1C16F20
	0x03E1B4F8 SUB X31, X31, 0xA0
	0x03E1B4FC STR X30, [X31 + 0x60]
	0x03E1B500 STP X24, X23, [X31 + 0x70]
	0x03E1B504 STP X22, X21, [X31 + 0x80]
	0x03E1B508 STP X20, X19, [X31 + 0x90]
	0x03E1B50C ADRP X23, 0x5CD000
	0x03E1B510 ADRP X24, 0x34F000
	0x03E1B514 LDRB W8, [X23 + 0x405]
	0x03E1B518 LDR X24, [X24 + 0x898]
	0x03E1B51C MOV X19, X3
	0x03E1B520 MOV X22, X2
	0x03E1B524 MOV X20, X1
	0x03E1B528 MOV X21, X0
	0x03E1B52C TBNZ X8, 0x0, 0x3E1B574
	0x03E1B530 ADRP X0, 0x34F000
	0x03E1B534 LDR X0, [X0 + 0x8A0]
	0x03E1B538 BL 0x1C16CF4
	0x03E1B53C ADRP X0, 0x34F000
	0x03E1B540 LDR X0, [X0 + 0x8A8]
	0x03E1B544 BL 0x1C16CF4
	0x03E1B548 ADRP X0, 0x34F000
	0x03E1B54C LDR X0, [X0 + 0x8C0]
	0x03E1B550 BL 0x1C16CF4
	0x03E1B554 ADRP X0, 0x34F000
	0x03E1B558 LDR X0, [X0 + 0x898]
	0x03E1B55C BL 0x1C16CF4
	0x03E1B560 ADRP X0, 0x34F000
	0x03E1B564 LDR X0, [X0 + 0x8C8]
	0x03E1B568 BL 0x1C16CF4
	0x03E1B56C MOVZ W8, 0x1
	0x03E1B570 STRB W8, [X23 + 0x405]
	0x03E1B574 LDP V1, V0, [X22]
	0x03E1B578 LDR X0, [X24]
	0x03E1B57C STP V1, V0, [X31 + 0x40]
	0x03E1B580 LDR W8, [X0 + 0xE0]
	0x03E1B584 CBNZ W8, 0x3E1B590
	0x03E1B588 BL 0x1C16DFC
	0x03E1B58C LDR X0, [X24]
	0x03E1B590 LDR X8, [X0 + 0xB8]
	0x03E1B594 LDR X22, [X8 + 0x10]
	0x03E1B598 CBZ X22, 0x3E1B5A4
	0x03E1B59C LDP V0, V1, [X31 + 0x40]
	0x03E1B5A0 B 0x3E1B600
	0x03E1B5A4 LDP V0, V1, [X31 + 0x40]
	0x03E1B5A8 STP V0, V1, [X31]
	0x03E1B5AC LDR W8, [X0 + 0xE0]
	0x03E1B5B0 CBNZ W8, 0x3E1B5BC
	0x03E1B5B4 BL 0x1C16DFC
	0x03E1B5B8 LDR X0, [X24]
	0x03E1B5BC ADRP X9, 0x34F000
	0x03E1B5C0 LDR X8, [X0 + 0xB8]
	0x03E1B5C4 LDR X9, [X9 + 0x8A0]
	0x03E1B5C8 LDR X23, [X8]
	0x03E1B5CC LDR X0, [X9]
	0x03E1B5D0 BL 0x1C16F10
	0x03E1B5D4 ADRP X8, 0x34F000
	0x03E1B5D8 LDR X8, [X8 + 0x8C0]
	0x03E1B5DC MOV X1, X23
	0x03E1B5E0 MOV X3, X31
	0x03E1B5E4 MOV X22, X0
	0x03E1B5E8 LDR X2, [X8]
	0x03E1B5EC BL 0x2D3B298
	0x03E1B5F0 LDR X8, [X24]
	0x03E1B5F4 LDR X8, [X8 + 0xB8]
	0x03E1B5F8 STR X22, [X8 + 0x10]
	0x03E1B5FC LDP V0, V1, [X31]
	0x03E1B600 STP V0, V1, [X31 + 0x20]
	0x03E1B604 CBZ X21, 0x3E1B654
	0x03E1B608 ADRP X8, 0x34F000
	0x03E1B60C LDR X8, [X8 + 0x8C8]
	0x03E1B610 LDR X4, [X21 + 0x40]
	0x03E1B614 LDP V0, V1, [X31 + 0x20]
	0x03E1B618 ADD X2, X31, 0x40
	0x03E1B61C LDR X6, [X8]
	0x03E1B620 MOV X0, X21
	0x03E1B624 MOV X1, X20
	0x03E1B628 MOV X3, X22
	0x03E1B62C MOV X5, X19
	0x03E1B630 STP V0, V1, [X31 + 0x40]
	0x03E1B634 BL 0x22A98F4
	0x03E1B638 LDP X20, X19, [X31 + 0x90]
	0x03E1B63C LDP X22, X21, [X31 + 0x80]
	0x03E1B640 LDP X24, X23, [X31 + 0x70]
	0x03E1B644 LDR X30, [X31 + 0x60]
	0x03E1B648 AND W0, W0, 0x1
	0x03E1B64C ADD X31, X31, 0xA0
	0x03E1B650 RET
	0x03E1B654 BL 0x1C16F20
	0x03E1B658 STR X30, [X31 - 0x20]!
	0x03E1B65C STP X20, X19, [X31 + 0x10]
	0x03E1B660 ADRP X19, 0x5CD000
	0x03E1B664 ADRP X20, 0x34F000
	0x03E1B668 LDRB W8, [X19 + 0x406]
	0x03E1B66C LDR X20, [X20 + 0x898]
	0x03E1B670 TBNZ X8, 0x0, 0x3E1B688

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Subtract X31, X31, 1008
	012 Move X26, 0x5CE000
	013 Move X25, 0x350000
	014 Move X20, 0x350000
	015 Move X19, 0x302000
	016 Move X22, 0x2DB000
	017 Move X23, 0x350000
	018 Move X21, 0x350000
	019 Move X24, 0x350000
	020 Move X25, [X25+2064]
	021 Move X20, [X20+2072]
	022 Move W8, [X26+1007]
	023 Move X19, [X19+2096]
	024 Move X22, [X22+632]
	025 Move X23, [X23+2080]
	026 Move X21, [X21+2088]
	027 Move X24, [X24+2096]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {55}
	032 Move X0, 0x2DB000
	033 Move X0, [X0+632]
	034 Call 0x1C17CF4
	035 Move X0, 0x350000
	036 Move X0, [X0+2072]
	037 Call 0x1C17CF4
	038 Move X0, 0x350000
	039 Move X0, [X0+2088]
	040 Call 0x1C17CF4
	041 Move X0, 0x350000
	042 Move X0, [X0+2080]
	043 Call 0x1C17CF4
	044 Move X0, 0x350000
	045 Move X0, [X0+2096]
	046 Call 0x1C17CF4
	047 Move X0, 0x350000
	048 Move X0, [X0+2064]
	049 Call 0x1C17CF4
	050 Move X0, 0x302000
	051 Move X0, [X0+2096]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X26+1007], W8
	055 Move X2, [X25]
	056 NotImplemented "Instruction MOVI not yet implemented."
	057 Add X0, X31, 912
	058 Move X1, X31
	059 Move [X31+976], V0
	060 Move [X31+984], V0
	061 Move [X31+944], V0
	062 Move [X31+952], V0
	063 Move [X31+912], V0
	064 Move [X31+920], V0
	065 Call 0x2725134, X0, X1
	066 Move V0, [X31+912]
	067 Move V1, [X31+928]
	068 Move V2, [X31+59]
	069 Move X1, [X20]
	070 Add X0, X31, 960
	071 Move [X31+960], V0
	072 Move [X31+968], V1
	073 Move [X31+62], V2
	074 Call 0x2725B5C, X0
	075 Move X8, [X19]
	076 NotImplemented "Instruction MOVI not yet implemented."
	077 Move X8, [X8+184]
	078 Move [X8], X0
	079 Move [X8+8], X1
	080 Move X2, [X25]
	081 Add X0, X31, 864
	082 Move X1, X31
	083 Move [X31+880], V0
	084 Move [X31+888], V0
	085 Move [X31+54], V0
	086 Call 0x2725134, X0, X1
	087 Move V0, [X31+864]
	088 Move V1, [X31+880]
	089 Move V2, [X31+56]
	090 Move X8, [X22]
	091 Move X2, [X23]
	092 Move [X31+960], V0
	093 Move [X31+968], V1
	094 Move [X31+62], V2
	095 Move X8, [X8+184]
	096 Add X0, X31, 960
	097 Move X1, [X8]
	098 Add X8, X31, 816
	099 Call 0x2725214, X0, X1
	100 Move V0, [X31+816]
	101 Move V1, [X31+832]
	102 Move V2, [X31+53]
	103 Move X1, [X20]
	104 Add X0, X31, 960
	105 Move [X31+960], V0
	106 Move [X31+968], V1
	107 Move [X31+62], V2
	108 Call 0x2725B5C, X0
	109 Move X8, [X19]
	110 NotImplemented "Instruction MOVI not yet implemented."
	111 Move X8, [X8+184]
	112 Move [X8+16], X0
	113 Move [X8+24], X1
	114 Move X2, [X25]
	115 Add X0, X31, 768
	116 Move X1, X31
	117 Move [X31+784], V0
	118 Move [X31+792], V0
	119 Move [X31+48], V0
	120 Call 0x2725134, X0, X1
	121 Move V0, [X31+768]
	122 Move V1, [X31+784]
	123 Move V2, [X31+50]
	124 Move X8, [X22]
	125 Move X2, [X21]
	126 Move [X31+960], V0
	127 Move [X31+968], V1
	128 Move [X31+62], V2
	129 Move X8, [X8+184]
	130 Add X0, X31, 960
	131 Move X1, [X8]
	132 Add X8, X31, 720
	133 Call 0x27251C0, X0, X1
	134 Move V0, [X31+720]
	135 Move V1, [X31+736]
	136 Move V2, [X31+47]
	137 Move X1, [X20]
	138 Add X0, X31, 960
	139 Move [X31+960], V0
	140 Move [X31+968], V1
	141 Move [X31+62], V2
	142 Call 0x2725B5C, X0
	143 Move X8, [X19]
	144 NotImplemented "Instruction MOVI not yet implemented."
	145 Move X8, [X8+184]
	146 Move [X8+32], X0
	147 Move [X8+40], X1
	148 Move X2, [X25]
	149 Add X0, X31, 672
	150 Move X1, X31
	151 Move [X31+688], V0
	152 Move [X31+696], V0
	153 Move [X31+42], V0
	154 Call 0x2725134, X0, X1
	155 Move V0, [X31+672]
	156 Move V1, [X31+688]
	157 Move V2, [X31+44]
	158 Move X8, [X22]
	159 Move X2, [X23]
	160 Move [X31+960], V0
	161 Move [X31+968], V1
	162 Move [X31+62], V2
	163 Move X8, [X8+184]
	164 Add X0, X31, 960
	165 Move X1, [X8]
	166 Add X8, X31, 624
	167 Call 0x2725214, X0, X1
	168 Move V0, [X31+624]
	169 Move V1, [X31+640]
	170 Move V2, [X31+41]
	171 Move X8, [X22]
	172 Move X2, [X21]
	173 Move [X31+960], V0
	174 Move [X31+968], V1
	175 Move [X31+62], V2
	176 Move X8, [X8+184]
	177 Add X0, X31, 960
	178 Move X1, [X8]
	179 Add X8, X31, 576
	180 Call 0x27251C0, X0, X1
	181 Move V0, [X31+576]
	182 Move V1, [X31+592]
	183 Move V2, [X31+38]
	184 Move X1, [X20]
	185 Add X0, X31, 960
	186 Move [X31+960], V0
	187 Move [X31+968], V1
	188 Move [X31+62], V2
	189 Call 0x2725B5C, X0
	190 Move X8, [X19]
	191 NotImplemented "Instruction MOVI not yet implemented."
	192 Move X8, [X8+184]
	193 Move [X8+48], X0
	194 Move [X8+56], X1
	195 Move X2, [X25]
	196 Add X0, X31, 528
	197 Move X1, X31
	198 Move [X31+544], V0
	199 Move [X31+552], V0
	200 Move [X31+33], V0
	201 Call 0x2725134, X0, X1
	202 Move V0, [X31+528]
	203 Move V1, [X31+544]
	204 Move V2, [X31+35]
	205 Move X1, [X24]
	206 Add X8, X31, 480
	207 Add X0, X31, 960
	208 Move [X31+960], V0
	209 Move [X31+968], V1
	210 Move [X31+62], V2
	211 Call 0x2725268, X0
	212 Move V0, [X31+480]
	213 Move V1, [X31+496]
	214 Move V2, [X31+32]
	215 Move X1, [X20]
	216 Add X0, X31, 960
	217 Move [X31+960], V0
	218 Move [X31+968], V1
	219 Move [X31+62], V2
	220 Call 0x2725B5C, X0
	221 Move X8, [X19]
	222 NotImplemented "Instruction MOVI not yet implemented."
	223 Move X8, [X8+184]
	224 Move [X8+64], X0
	225 Move [X8+72], X1
	226 Move X2, [X25]
	227 Add X0, X31, 432
	228 Move X1, X31
	229 Move [X31+448], V0
	230 Move [X31+456], V0
	231 Move [X31+27], V0
	232 Call 0x2725134, X0, X1
	233 Move V0, [X31+432]
	234 Move V1, [X31+448]
	235 Move V2, [X31+29]
	236 Move X1, [X24]
	237 Add X8, X31, 384
	238 Add X0, X31, 960
	239 Move [X31+960], V0
	240 Move [X31+968], V1
	241 Move [X31+62], V2
	242 Call 0x2725268, X0
	243 Move V0, [X31+384]
	244 Move V1, [X31+400]
	245 Move V2, [X31+26]
	246 Move X8, [X22]
	247 Move X2, [X23]
	248 Move [X31+960], V0
	249 Move [X31+968], V1
	250 Move [X31+62], V2
	251 Move X8, [X8+184]
	252 Add X0, X31, 960
	253 Move X1, [X8]
	254 Add X8, X31, 336
	255 Call 0x2725214, X0, X1
	256 Move V0, [X31+336]
	257 Move V1, [X31+352]
	258 Move V2, [X31+23]
	259 Move X1, [X20]
	260 Add X0, X31, 960
	261 Move [X31+960], V0
	262 Move [X31+968], V1
	263 Move [X31+62], V2
	264 Call 0x2725B5C, X0
	265 Move X8, [X19]
	266 NotImplemented "Instruction MOVI not yet implemented."
	267 Move X8, [X8+184]
	268 Move [X8+80], X0
	269 Move [X8+88], X1
	270 Move X2, [X25]
	271 Add X0, X31, 288
	272 Move X1, X31
	273 Move [X31+304], V0
	274 Move [X31+312], V0
	275 Move [X31+18], V0
	276 Call 0x2725134, X0, X1
	277 Move V0, [X31+288]
	278 Move V1, [X31+304]
	279 Move V2, [X31+20]
	280 Move X1, [X24]
	281 Add X8, X31, 240
	282 Add X0, X31, 960
	283 Move [X31+960], V0
	284 Move [X31+968], V1
	285 Move [X31+62], V2
	286 Call 0x2725268, X0
	287 Move V0, [X31+240]
	288 Move V1, [X31+256]
	289 Move V2, [X31+17]
	290 Move X8, [X22]
	291 Move X2, [X21]
	292 Move [X31+960], V0
	293 Move [X31+968], V1
	294 Move [X31+62], V2
	295 Move X8, [X8+184]
	296 Add X0, X31, 960
	297 Move X1, [X8]
	298 Add X8, X31, 192
	299 Call 0x27251C0, X0, X1
	300 Move V0, [X31+192]
	301 Move V1, [X31+208]
	302 Move V2, [X31+14]
	303 Move X1, [X20]
	304 Add X0, X31, 960
	305 Move [X31+960], V0
	306 Move [X31+968], V1
	307 Move [X31+62], V2
	308 Call 0x2725B5C, X0
	309 Move X8, [X19]
	310 NotImplemented "Instruction MOVI not yet implemented."
	311 Move X8, [X8+184]
	312 Move [X8+96], X0
	313 Move [X8+104], X1
	314 Move X2, [X25]
	315 Add X0, X31, 144
	316 Move X1, X31
	317 Move [X31+160], V0
	318 Move [X31+168], V0
	319 Move [X31+9], V0
	320 Call 0x2725134, X0, X1
	321 Move V0, [X31+144]
	322 Move V1, [X31+160]
	323 Move V2, [X31+11]
	324 Move X1, [X24]
	325 Add X8, X31, 96
	326 Add X0, X31, 960
	327 Move [X31+960], V0
	328 Move [X31+968], V1
	329 Move [X31+62], V2
	330 Call 0x2725268, X0
	331 Move V0, [X31+96]
	332 Move V1, [X31+112]
	333 Move V2, [X31+8]
	334 Move X8, [X22]
	335 Move X2, [X23]
	336 Move [X31+960], V0
	337 Move [X31+968], V1
	338 Move [X31+62], V2
	339 Move X8, [X8+184]
	340 Add X0, X31, 960
	341 Move X1, [X8]
	342 Add X8, X31, 48
	343 Call 0x2725214, X0, X1
	344 Move V0, [X31+48]
	345 Move V1, [X31+64]
	346 Move V2, [X31+5]
	347 Move X8, [X22]
	348 Move X2, [X21]
	349 Move [X31+960], V0
	350 Move [X31+968], V1
	351 Move [X31+62], V2
	352 Move X8, [X8+184]
	353 Add X0, X31, 960
	354 Move X1, [X8]
	355 Add X8, X31, 0
	356 Call 0x27251C0, X0, X1
	357 Move V0, [X31]
	358 Move V1, [X31+16]
	359 Move V2, [X31+2]
	360 Move X1, [X20]
	361 Add X0, X31, 960
	362 Move [X31+960], V0
	363 Move [X31+968], V1
	364 Move [X31+62], V2
	365 Call 0x2725B5C, X0
	366 Move X8, [X19]
	367 Move X8, [X8+184]
	368 Move [X8+112], X0
	369 Move [X8+120], X1
	370 Add X31, X31, 1008
	371 Move X20, [X31+64]
	372 Move X19, [X31+72]
	373 Move X22, [X31+48]
	374 Move X21, [X31+56]
	375 Move X24, [X31+32]
	376 Move X23, [X31+40]
	377 Move X26, [X31+16]
	378 Move X25, [X31+24]
	379 Move X29, [X31+80]
	380 Move X30, [X31+88]
	381 Return 

