Type: UnityEngine.UIElements.FixedHeightVirtualizationController`1

Method: System.Single get_resolvedItemHeight()

Disassembly:
	0x02D23490 LDR X0, [X20]
	0x02D23494 LDR W8, [X0 + 0xE0]
	0x02D23498 CBNZ W8, 0x2D234A4
	0x02D2349C BL 0x1C16DFC
	0x02D234A0 LDR X0, [X20]
	0x02D234A4 LDR X8, [X0 + 0xB8]
	0x02D234A8 LDR X8, [X8]
	0x02D234AC STP X8, X31, [X19 + 0x90]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move S0, -1
	006 Move X1, X31
	007 Move X30, [X31+16]
	008 Call BaseVerticalCollectionView.ResolveItemHeight, X0, V0
	009 Return V0
	010 Call 0x1C17F20

Method: System.Boolean VisibleItemPredicate(T i)

Disassembly:
	0x02D234B0 LDP X20, X19, [X31 + 0x10]
	0x02D234B4 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void .ctor(UnityEngine.UIElements.BaseVerticalCollectionView collectionView)

Disassembly:
	0x02D234B8 RET
	0x02D234BC BL 0x1C16F20
	0x02D234C0 STP X30, X25, [X31 - 0x40]!
	0x02D234C4 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move X8, [X2+32]
	002 Move X8, [X8+192]
	003 Move X2, [X8+8]
	004 Call 0x2843DA4, X0, X1
	005 Return 

Method: System.Int32 GetIndexFromPosition(UnityEngine.Vector2 position)

Disassembly:
	0x02D234C8 STP X22, X21, [X31 + 0x20]
	0x02D234CC STP X20, X19, [X31 + 0x30]
	0x02D234D0 LDR X8, [X5 + 0x20]
	0x02D234D4 MOV X21, X5
	0x02D234D8 MOV W19, W4
	0x02D234DC MOV X20, X3
	0x02D234E0 LDRB W9, [X8 + 0x135]
	0x02D234E4 MOV X22, X2
	0x02D234E8 MOV X23, X1
	0x02D234EC MOV X25, X0
	0x02D234F0 TBNZ X9, 0x0, 0x2D23500
	0x02D234F4 MOV X0, X8
	0x02D234F8 BL 0x1C5C684
	0x02D234FC MOV X8, X0

ISIL:
	001 Move [X31-16], D8
	002 Move [X31+8], X30
	003 Move V8, V1
	004 Call 0x2D23490, X0
	005 Move W8, 0x7F800000
	006 Move X30, [X31+8]
	007 NotImplemented "Instruction FDIV not yet implemented."
	008 Move S1, W8
	009 NotImplemented "Instruction FCVTZS not yet implemented."
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Move W8, 0x80000000
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move V8, [X31+16]
	014 Return X0

Method: System.Single GetExpectedItemHeight(System.Int32 index)

Disassembly:
	0x02D23500 LDR X8, [X8 + 0xC0]

ISIL:
	001 Call 0x2D23490, X0
	002 Return V0

Method: System.Single GetExpectedContentHeight()

Disassembly:
	0x02D23504 LDR X0, [X8 + 0x38]
	0x02D23508 LDRB W8, [X0 + 0x135]
	0x02D2350C TBNZ X8, 0x0, 0x2D23514
	0x02D23510 BL 0x1C5C684
	0x02D23514 LDR W8, [X0 + 0xE0]
	0x02D23518 CBNZ W8, 0x2D23520
	0x02D2351C BL 0x1C16DFC
	0x02D23520 LDR X0, [X21 + 0x20]
	0x02D23524 LDRB W8, [X0 + 0x135]
	0x02D23528 TBNZ X8, 0x0, 0x2D23530
	0x02D2352C BL 0x1C5C684
	0x02D23530 LDR X8, [X0 + 0xC0]
	0x02D23534 LDR X0, [X8 + 0x30]
	0x02D23538 BL 0x2D0D6C4
	0x02D2353C CBZ X0, 0x2D235BC
	0x02D23540 MOV X1, X25
	0x02D23544 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {20}
	006 Move X8, [X1+32]
	007 Move X19, X0
	008 Move X8, [X8+192]
	009 Move X1, [X8+32]
	010 Call 0x2843AE0, X0
	011 Move W20, W0
	012 Move X0, X19
	013 Call 0x2D23490, X0
	014 NotImplemented "Instruction SCVTF not yet implemented."
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Multiply S0, S0, S1
	018 Move X30, [X31+32]
	019 Return V0
	020 Call 0x1C17F20

Method: System.Void ScrollToItem(System.Int32 index)

Disassembly:
	0x02D23548 MOV X24, X0
	0x02D2354C BL 0x3D9C6C8
	0x02D23550 LDR X0, [X21 + 0x20]
	0x02D23554 LDRB W8, [X0 + 0x135]
	0x02D23558 TBNZ X8, 0x0, 0x2D23564
	0x02D2355C BL 0x1C5C684
	0x02D23560 LDR X0, [X21 + 0x20]
	0x02D23564 STR X23, [X24 + 0x88]
	0x02D23568 LDRB W8, [X0 + 0x135]
	0x02D2356C TBNZ X8, 0x0, 0x2D23578
	0x02D23570 BL 0x1C5C684
	0x02D23574 LDR X0, [X21 + 0x20]
	0x02D23578 STR X22, [X24 + 0x90]
	0x02D2357C LDRB W8, [X0 + 0x135]
	0x02D23580 TBNZ X8, 0x0, 0x2D2358C
	0x02D23584 BL 0x1C5C684
	0x02D23588 LDR X0, [X21 + 0x20]
	0x02D2358C STR X20, [X24 + 0x98]
	0x02D23590 LDRB W8, [X0 + 0x135]
	0x02D23594 TBNZ X8, 0x0, 0x2D2359C
	0x02D23598 BL 0x1C5C684
	0x02D2359C AND W8, W19, 0x1
	0x02D235A0 STRB W8, [X24 + 0xA0]
	0x02D235A4 MOV X0, X24
	0x02D235A8 LDP X20, X19, [X31 + 0x30]
	0x02D235AC LDP X22, X21, [X31 + 0x20]
	0x02D235B0 LDP X24, X23, [X31 + 0x10]
	0x02D235B4 LDP X30, X25, [X31], #0x40
	0x02D235B8 RET
	0x02D235BC BL 0x1C16F20
	0x02D235C0 STR X30, [X31 - 0x20]!
	0x02D235C4 STP X20, X19, [X31 + 0x10]
	0x02D235C8 LDR X8, [X1 + 0x20]
	0x02D235CC MOV X19, X1
	0x02D235D0 MOV X20, X0
	0x02D235D4 LDR X8, [X8 + 0xC0]
	0x02D235D8 LDR X8, [X8 + 0x38]
	0x02D235DC LDRB W9, [X8 + 0x135]
	0x02D235E0 TBNZ X9, 0x0, 0x2D235F0
	0x02D235E4 MOV X0, X8
	0x02D235E8 BL 0x1C5C684
	0x02D235EC MOV X8, X0
	0x02D235F0 LDR W9, [X8 + 0xE0]
	0x02D235F4 CBNZ W9, 0x2D23600
	0x02D235F8 MOV X0, X8
	0x02D235FC BL 0x1C16DFC
	0x02D23600 LDR X8, [X19 + 0x20]
	0x02D23604 MOV X0, X20
	0x02D23608 LDR X8, [X8 + 0xC0]
	0x02D2360C LDR X1, [X8 + 0x50]
	0x02D23610 BL 0x2D0D54C
	0x02D23614 LDR X8, [X19 + 0x20]
	0x02D23618 MOV X0, X20
	0x02D2361C LDP X20, X19, [X31 + 0x10]
	0x02D23620 LDR X8, [X8 + 0xC0]
	0x02D23624 LDR X1, [X8 + 0x10]
	0x02D23628 LDR X30, [X31], #0x20
	0x02D2362C B 0x2D2341C
	0x02D23630 STR X30, [X31 - 0x30]!
	0x02D23634 STP X22, X21, [X31 + 0x10]
	0x02D23638 STP X20, X19, [X31 + 0x20]
	0x02D2363C ADRP X20, 0x16B8000
	0x02D23640 LDRB W8, [X20 + 0x7E2]
	0x02D23644 MOV X19, X0
	0x02D23648 TBNZ X8, 0x0, 0x2D2366C
	0x02D2364C ADRP X0, 0x13F8000
	0x02D23650 LDR X0, [X0 + 0xB90]
	0x02D23654 BL 0x1C16CF4
	0x02D23658 ADRP X0, 0x13D0000
	0x02D2365C LDR X0, [X0 + 0x6C0]
	0x02D23660 BL 0x1C16CF4
	0x02D23664 MOVZ W8, 0x1
	0x02D23668 STRB W8, [X20 + 0x7E2]
	0x02D2366C LDR X0, [X19 + 0x20]
	0x02D23670 LDRB W8, [X0 + 0x135]
	0x02D23674 TBNZ X8, 0x0, 0x2D2367C
	0x02D23678 BL 0x1C5C684
	0x02D2367C LDR X8, [X0 + 0xC0]
	0x02D23680 LDR X0, [X8 + 0x8]
	0x02D23684 LDRB W8, [X0 + 0x135]
	0x02D23688 TBNZ X8, 0x0, 0x2D23690
	0x02D2368C BL 0x1C5C684
	0x02D23690 LDR W8, [X0 + 0xE0]
	0x02D23694 CBNZ W8, 0x2D2369C
	0x02D23698 BL 0x1C16DFC
	0x02D2369C LDR X0, [X19 + 0x20]
	0x02D236A0 LDRB W8, [X0 + 0x135]
	0x02D236A4 TBNZ X8, 0x0, 0x2D236AC
	0x02D236A8 BL 0x1C5C684
	0x02D236AC LDR X8, [X0 + 0xC0]
	0x02D236B0 ADRP X20, 0x13F8000
	0x02D236B4 LDR X0, [X8 + 0x8]
	0x02D236B8 LDRB W8, [X0 + 0x135]
	0x02D236BC LDR X20, [X20 + 0xB90]
	0x02D236C0 TBNZ X8, 0x0, 0x2D236C8
	0x02D236C4 BL 0x1C5C684
	0x02D236C8 LDR X0, [X0 + 0xB8]
	0x02D236CC LDR X1, [X20]
	0x02D236D0 BL 0x25E6504
	0x02D236D4 LDR X0, [X0]
	0x02D236D8 MOV X1, X31
	0x02D236DC MOV X2, X31
	0x02D236E0 BL 0x33BE5B0
	0x02D236E4 TBZ X0, 0x0, 0x2D23840
	0x02D236E8 LDR X0, [X19 + 0x20]
	0x02D236EC LDRB W8, [X0 + 0x135]
	0x02D236F0 TBNZ X8, 0x0, 0x2D236F8
	0x02D236F4 BL 0x1C5C684
	0x02D236F8 LDR X8, [X0 + 0xC0]
	0x02D236FC LDR X0, [X8 + 0x8]
	0x02D23700 LDRB W8, [X0 + 0x135]
	0x02D23704 TBNZ X8, 0x0, 0x2D2370C
	0x02D23708 BL 0x1C5C684
	0x02D2370C LDR W8, [X0 + 0xE0]
	0x02D23710 CBNZ W8, 0x2D23718
	0x02D23714 BL 0x1C16DFC
	0x02D23718 LDR X0, [X19 + 0x20]
	0x02D2371C LDRB W8, [X0 + 0x135]
	0x02D23720 TBNZ X8, 0x0, 0x2D23728
	0x02D23724 BL 0x1C5C684
	0x02D23728 LDR X8, [X0 + 0xC0]
	0x02D2372C LDR X0, [X8 + 0x8]
	0x02D23730 LDRB W8, [X0 + 0x135]
	0x02D23734 TBNZ X8, 0x0, 0x2D2373C
	0x02D23738 BL 0x1C5C684
	0x02D2373C LDR X0, [X0 + 0xB8]
	0x02D23740 LDR X1, [X20]
	0x02D23744 ADRP X21, 0x13D0000
	0x02D23748 LDR X21, [X21 + 0x6C0]
	0x02D2374C BL 0x25E6504
	0x02D23750 LDR X8, [X19 + 0x20]
	0x02D23754 MOV X20, X0
	0x02D23758 LDRB W9, [X8 + 0x135]
	0x02D2375C TBNZ X9, 0x0, 0x2D2376C

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X0, 0
	008 JumpIfEqual {144}
	009 Move X8, [X0]
	010 Move W20, W1
	011 Move X21, X2
	012 Move X19, X0
	013 Move X9, [X8+408]
	014 Move X1, [X8+416]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Add W31, W20, 1
	017 Compare W0, 0
	018 JumpIfEqual {48}
	019 Move X0, X19
	020 Call 0x2D23490, X0
	021 Add W31, W20, 1
	022 Move V8, V0
	023 Move X8, [X19]
	024 Move X0, X19
	025 Move X9, [X8+376]
	026 Move X1, [X8+384]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X21+32]
	030 Move X0, X19
	031 Move X8, [X8+192]
	032 Move X1, [X8+40]
	033 Call 0x2843D80, X0
	034 Move X8, [X19]
	035 Move W9, 0x7F800000
	036 Move S1, W9
	037 NotImplemented "Instruction FDIV not yet implemented."
	038 Move X9, [X8+376]
	039 Move X1, [X8+384]
	040 NotImplemented "Instruction FCVTZS not yet implemented."
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move W8, 0x80000000
	043 Move X0, X19
	044 NotImplemented "Instruction CSEL not yet implemented."
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Add W8, W0, W22
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+8]
	053 Move V8, [X31+48]
	054 Return 
	055 Move X8, [X21+32]
	056 Move X0, X19
	057 Move X8, [X8+192]
	058 Move X1, [X8+40]
	059 Call 0x2843D80, X0
	060 Move X8, [X21+32]
	061 Move W9, 0x7F800000
	062 NotImplemented "Instruction FDIV not yet implemented."
	063 Move S1, W9
	064 Move X8, [X8+192]
	065 NotImplemented "Instruction FCVTZS not yet implemented."
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 Move X0, X19
	068 Move X1, [X8+32]
	069 Move W8, 0x80000000
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 Call 0x2843AE0, X0
	072 Move X20, [X19+16]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare X20, 0
	075 JumpIfEqual {144}
	076 Move S0, W31
	077 Move S1, W31
	078 Move X21, 0x16B9000
	079 Move W8, [X21+2038]
	080 Move X19, [X19+16]
	081 Compare W8, 0
	082 JumpIfNotEqual {88}
	083 Move X0, 0x13D9000
	084 Move X0, [X0+3848]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X21+2038], W8
	088 Compare X19, 0
	089 JumpIfEqual {144}
	090 Move X8, 0x13D9000
	091 Move X8, [X8+3848]
	092 NotImplemented "Instruction SCVTF not yet implemented."
	093 Multiply S3, S8, S1
	094 Move X0, X19
	095 Move X8, [X8]
	096 Move X8, [X8+184]
	097 Move S2, [X8+16]
	098 Move S0, [X8+20]
	099 Multiply S1, S3, S0
	100 Multiply S0, S3, S2
	101 Move X8, [X21+32]
	102 Move X0, X19
	103 Move X8, [X8+192]
	104 Move X1, [X8+32]
	105 Call 0x2843AE0, X0
	106 Compare X20, 0
	107 JumpIfEqual {144}
	108 Add W8, W0, 1
	109 NotImplemented "Instruction SCVTF not yet implemented."
	110 Multiply S1, S8, S0
	111 Move S0, W31
	112 Move X0, X20
	113 Move X8, [X21+32]
	114 Move X0, X19
	115 Move X8, [X8+192]
	116 Move X1, [X8+40]
	117 Call 0x2843D80, X0
	118 Move X19, [X19+16]
	119 Compare X19, 0
	120 JumpIfEqual {144}
	121 Subtract W8, W20, W22
	122 NotImplemented "Instruction SCVTF not yet implemented."
	123 Add W8, W8, 1
	124 Multiply S1, S8, S1
	125 NotImplemented "Instruction SCVTF not yet implemented."
	126 Subtract S0, S0, S1
	127 Multiply S1, S8, S2
	128 Subtract S0, S8, S0
	129 Move X0, X19
	130 Move X1, X31
	131 Add S8, S1, S0
	132 Call ScrollView.get_scrollOffset, X0
	133 Move X0, X19
	134 Move V1, V8
	135 Move X20, [X31+32]
	136 Move X19, [X31+40]
	137 Move X22, [X31+16]
	138 Move X21, [X31+24]
	139 Move X30, [X31+8]
	140 Move X1, X31
	141 Move V8, [X31+48]
	142 Call ScrollView.set_scrollOffset, X0, X1
	143 Return 
	144 Call 0x1C17F20

Method: System.Void Resize(UnityEngine.Vector2 size)

Disassembly:
	0x02D23760 MOV X0, X8
	0x02D23764 BL 0x1C5C684
	0x02D23768 MOV X8, X0
	0x02D2376C LDR X0, [X21]
	0x02D23770 LDR X8, [X8 + 0xC0]
	0x02D23774 LDR W9, [X0 + 0xE0]
	0x02D23778 LDR X21, [X8 + 0x10]
	0x02D2377C CBNZ W9, 0x2D23784
	0x02D23780 BL 0x1C16DFC
	0x02D23784 MOV X0, X21
	0x02D23788 MOV X1, X31
	0x02D2378C BL 0x338C698
	0x02D23790 LDR X8, [X19 + 0x20]
	0x02D23794 MOV X21, X0
	0x02D23798 LDRB W9, [X8 + 0x135]
	0x02D2379C TBNZ X9, 0x0, 0x2D237AC
	0x02D237A0 MOV X0, X8
	0x02D237A4 BL 0x1C5C684
	0x02D237A8 MOV X8, X0
	0x02D237AC LDR X8, [X8 + 0xC0]
	0x02D237B0 LDR X0, [X8 + 0x20]
	0x02D237B4 LDRB W8, [X0 + 0x135]
	0x02D237B8 TBNZ X8, 0x0, 0x2D237C0
	0x02D237BC BL 0x1C5C684
	0x02D237C0 BL 0x1C16F10
	0x02D237C4 LDR X8, [X19 + 0x20]
	0x02D237C8 MOV X22, X0
	0x02D237CC ADD X9, X8, 0x135
	0x02D237D0 LDRH W9, [X9]
	0x02D237D4 TBNZ X9, 0x0, 0x2D237F0
	0x02D237D8 MOV X0, X8
	0x02D237DC BL 0x1C5C684
	0x02D237E0 LDR X8, [X19 + 0x20]
	0x02D237E4 ADD X9, X8, 0x135
	0x02D237E8 LDRH W9, [X9]
	0x02D237EC B 0x2D237F4
	0x02D237F0 MOV X0, X8
	0x02D237F4 LDR X10, [X0 + 0xC0]
	0x02D237F8 LDR X19, [X10 + 0x18]
	0x02D237FC TBNZ X9, 0x0, 0x2D2380C
	0x02D23800 MOV X0, X8
	0x02D23804 BL 0x1C5C684
	0x02D23808 MOV X8, X0
	0x02D2380C LDR X8, [X8 + 0xC0]
	0x02D23810 MOV X0, X22
	0x02D23814 MOV X1, X31
	0x02D23818 MOV X2, X19
	0x02D2381C LDR X3, [X8 + 0x28]
	0x02D23820 BL 0x2D0F744
	0x02D23824 MOV X0, X21
	0x02D23828 MOV X1, X22
	0x02D2382C MOV X2, X31
	0x02D23830 MOV X3, X31
	0x02D23834 MOV X4, X31
	0x02D23838 BL 0x3BFE3B0
	0x02D2383C STR X0, [X20]
	0x02D23840 LDP X20, X19, [X31 + 0x20]
	0x02D23844 LDP X22, X21, [X31 + 0x10]
	0x02D23848 LDR X30, [X31], #0x30
	0x02D2384C RET
	0x02D23850 STR X30, [X31 - 0x40]!
	0x02D23854 STP X24, X23, [X31 + 0x10]
	0x02D23858 STP X22, X21, [X31 + 0x20]
	0x02D2385C STP X20, X19, [X31 + 0x30]
	0x02D23860 MOV X21, X3
	0x02D23864 MOV X19, X5
	0x02D23868 MOV W20, W4
	0x02D2386C MOV X22, X0
	0x02D23870 ADD X2, X31, 0xC
	0x02D23874 ADD X3, X31, 0x8
	0x02D23878 MOV X0, X21
	0x02D2387C MOV W1, W4
	0x02D23880 STR X31, [X31 + 0x8]
	0x02D23884 MOV X4, X31
	0x02D23888 BL 0x3BFE0D8
	0x02D2388C TBZ X0, 0x0, 0x2D238E0
	0x02D23890 LDP W24, W23, [X31 + 0x8]
	0x02D23894 CMP W23, W24
	0x02D23898 B.GE 0x2D238CC
	0x02D2389C LDR X0, [X19 + 0x20]
	0x02D238A0 LDRB W8, [X0 + 0x135]
	0x02D238A4 TBNZ X8, 0x0, 0x2D238AC
	0x02D238A8 BL 0x1C5C684
	0x02D238AC LDR X8, [X0 + 0xC0]
	0x02D238B0 MOV X0, X22
	0x02D238B4 MOV W1, W23
	0x02D238B8 LDR X2, [X8 + 0x40]
	0x02D238BC BL 0x3A7A54C
	0x02D238C0 ADD W23, W23, 0x1
	0x02D238C4 CMP W24, W23
	0x02D238C8 B.NE 0x2D2389C
	0x02D238CC ADD X2, X31, 0xC
	0x02D238D0 ADD X3, X31, 0x8
	0x02D238D4 MOV X0, X21
	0x02D238D8 MOV W1, W20
	0x02D238DC B 0x2D23884
	0x02D238E0 LDP X20, X19, [X31 + 0x30]
	0x02D238E4 LDP X22, X21, [X31 + 0x20]
	0x02D238E8 LDP X24, X23, [X31 + 0x10]
	0x02D238EC LDR X30, [X31], #0x40
	0x02D238F0 RET
	0x02D238F4 STP X30, X19, [X31 - 0x10]!
	0x02D238F8 MOV X19, X0
	0x02D238FC LDR X0, [X0 + 0x20]
	0x02D23900 LDRB W8, [X0 + 0x135]
	0x02D23904 TBNZ X8, 0x0, 0x2D2390C
	0x02D23908 BL 0x1C5C684
	0x02D2390C LDR X8, [X0 + 0xC0]
	0x02D23910 MOV W0, W31
	0x02D23914 LDR X1, [X8 + 0x48]
	0x02D23918 BL 0x2135688
	0x02D2391C LDR X8, [X19 + 0x20]
	0x02D23920 MOV X19, X0
	0x02D23924 LDRB W9, [X8 + 0x135]
	0x02D23928 TBNZ X9, 0x0, 0x2D23938
	0x02D2392C MOV X0, X8
	0x02D23930 BL 0x1C5C684
	0x02D23934 MOV X8, X0
	0x02D23938 LDR X8, [X8 + 0xC0]
	0x02D2393C LDR X0, [X8 + 0x8]
	0x02D23940 LDRB W8, [X0 + 0x135]
	0x02D23944 TBNZ X8, 0x0, 0x2D2394C
	0x02D23948 BL 0x1C5C684
	0x02D2394C LDR X8, [X0 + 0xB8]
	0x02D23950 STR X19, [X8]
	0x02D23954 LDP X30, X19, [X31], #0x10
	0x02D23958 RET
	0x02D2395C STR X30, [X31 - 0x30]!
	0x02D23960 STP X22, X21, [X31 + 0x10]
	0x02D23964 STP X20, X19, [X31 + 0x20]
	0x02D23968 ADRP X20, 0x16B8000
	0x02D2396C LDRB W8, [X20 + 0x7E3]
	0x02D23970 MOV X19, X0
	0x02D23974 TBNZ X8, 0x0, 0x2D23998
	0x02D23978 ADRP X0, 0x13F8000
	0x02D2397C LDR X0, [X0 + 0xB90]
	0x02D23980 BL 0x1C16CF4
	0x02D23984 ADRP X0, 0x13D0000
	0x02D23988 LDR X0, [X0 + 0x6C0]
	0x02D2398C BL 0x1C16CF4
	0x02D23990 MOVZ W8, 0x1
	0x02D23994 STRB W8, [X20 + 0x7E3]
	0x02D23998 LDR X0, [X19 + 0x20]
	0x02D2399C LDRB W8, [X0 + 0x135]
	0x02D239A0 TBNZ X8, 0x0, 0x2D239A8
	0x02D239A4 BL 0x1C5C684
	0x02D239A8 LDR X8, [X0 + 0xC0]
	0x02D239AC LDR X0, [X8 + 0x8]
	0x02D239B0 LDRB W8, [X0 + 0x135]
	0x02D239B4 TBNZ X8, 0x0, 0x2D239BC
	0x02D239B8 BL 0x1C5C684
	0x02D239BC LDR W8, [X0 + 0xE0]
	0x02D239C0 CBNZ W8, 0x2D239C8
	0x02D239C4 BL 0x1C16DFC
	0x02D239C8 LDR X0, [X19 + 0x20]
	0x02D239CC LDRB W8, [X0 + 0x135]
	0x02D239D0 TBNZ X8, 0x0, 0x2D239D8
	0x02D239D4 BL 0x1C5C684
	0x02D239D8 LDR X8, [X0 + 0xC0]
	0x02D239DC ADRP X20, 0x13F8000
	0x02D239E0 LDR X0, [X8 + 0x8]
	0x02D239E4 LDRB W8, [X0 + 0x135]
	0x02D239E8 LDR X20, [X20 + 0xB90]
	0x02D239EC TBNZ X8, 0x0, 0x2D239F4
	0x02D239F0 BL 0x1C5C684
	0x02D239F4 LDR X0, [X0 + 0xB8]
	0x02D239F8 LDR X1, [X20]
	0x02D239FC BL 0x25E6504
	0x02D23A00 LDR X0, [X0]
	0x02D23A04 MOV X1, X31
	0x02D23A08 MOV X2, X31
	0x02D23A0C BL 0x33BE5B0
	0x02D23A10 TBZ X0, 0x0, 0x2D23B6C
	0x02D23A14 LDR X0, [X19 + 0x20]
	0x02D23A18 LDRB W8, [X0 + 0x135]
	0x02D23A1C TBNZ X8, 0x0, 0x2D23A24
	0x02D23A20 BL 0x1C5C684
	0x02D23A24 LDR X8, [X0 + 0xC0]
	0x02D23A28 LDR X0, [X8 + 0x8]
	0x02D23A2C LDRB W8, [X0 + 0x135]
	0x02D23A30 TBNZ X8, 0x0, 0x2D23A38
	0x02D23A34 BL 0x1C5C684
	0x02D23A38 LDR W8, [X0 + 0xE0]
	0x02D23A3C CBNZ W8, 0x2D23A44
	0x02D23A40 BL 0x1C16DFC
	0x02D23A44 LDR X0, [X19 + 0x20]
	0x02D23A48 LDRB W8, [X0 + 0x135]
	0x02D23A4C TBNZ X8, 0x0, 0x2D23A54
	0x02D23A50 BL 0x1C5C684
	0x02D23A54 LDR X8, [X0 + 0xC0]
	0x02D23A58 LDR X0, [X8 + 0x8]
	0x02D23A5C LDRB W8, [X0 + 0x135]
	0x02D23A60 TBNZ X8, 0x0, 0x2D23A68
	0x02D23A64 BL 0x1C5C684
	0x02D23A68 LDR X0, [X0 + 0xB8]
	0x02D23A6C LDR X1, [X20]
	0x02D23A70 ADRP X21, 0x13D0000
	0x02D23A74 LDR X21, [X21 + 0x6C0]
	0x02D23A78 BL 0x25E6504
	0x02D23A7C LDR X8, [X19 + 0x20]
	0x02D23A80 MOV X20, X0
	0x02D23A84 LDRB W9, [X8 + 0x135]
	0x02D23A88 TBNZ X9, 0x0, 0x2D23A98
	0x02D23A8C MOV X0, X8
	0x02D23A90 BL 0x1C5C684
	0x02D23A94 MOV X8, X0
	0x02D23A98 LDR X0, [X21]
	0x02D23A9C LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x16B9000
	012 Move W8, [X21+2013]
	013 Move X20, X1
	014 Move V8, V1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x13FC000
	021 Move X0, [X0+2728]
	022 Call 0x1C17CF4
	023 Move X0, 0x13FA000
	024 Move X0, [X0+296]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2013], W8
	028 Move X0, X19
	029 Call 0x2D23490, X0
	030 Compare X19, 0
	031 JumpIfEqual {238}
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move V9, V0
	035 Move X9, [X8+520]
	036 Move X1, [X8+528]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X0, [X19+16]
	039 Compare X0, 0
	040 JumpIfEqual {238}
	041 Move X8, [X0]
	042 Move V10, V0
	043 Move X9, [X8+1896]
	044 Move X1, [X8+1904]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Compare X0, 0
	047 JumpIfEqual {238}
	048 Move X1, X31
	049 Call VisualElement.get_style, X0
	050 Move X21, X0
	051 Move V0, V10
	052 Move X0, X31
	053 Call StyleLength.op_Implicit, V0
	054 Compare X21, 0
	055 JumpIfEqual {238}
	056 Move X11, 0x13FA000
	057 Move X9, [X21]
	058 Move X11, [X11+296]
	059 Move X8, X1
	060 Move X22, X0
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X11]
	063 And X23, X8, 0
	064 Compare X10, 0
	065 JumpIfEqual {72}
	066 Move X8, [X9+176]
	067 Add X8, X8, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X10, X10, 1
	071 Add X8, X8, 16
	072 Move W2, 24
	073 Move X0, X21
	074 Call 0x1C5D788
	075 Move W8, [X8]
	076 Add W8, W8, 24
	077 Add X8, X9, W8
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X3, [X0+8]
	081 Move X0, X21
	082 Move X1, X22
	083 Move X2, X23
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X8, [X19+16]
	086 Compare X8, 0
	087 JumpIfEqual {238}
	088 Move X0, [X8+1048]
	089 Compare X0, 0
	090 JumpIfEqual {238}
	091 Move X1, X31
	092 Call VisualElement.get_layout, X0
	093 Move X8, [X20+32]
	094 Move X0, X19
	095 Move V11, V3
	096 Move X8, [X8+192]
	097 Move X1, [X8+48]
	098 Call 0x2843CF4, X0
	099 Compare X0, 0
	100 JumpIfEqual {238}
	101 Move V1, [X0+20]
	102 Subtract S0, S10, S11
	103 Move X8, [X19+16]
	104 Move S2, W31
	105 NotImplemented "Instruction FMAX not yet implemented."
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 NotImplemented "Instruction FCSEL not yet implemented."
	108 Compare X8, 0
	109 JumpIfEqual {238}
	110 Move X8, [X8+1064]
	111 Compare X8, 0
	112 JumpIfEqual {238}
	113 Move X0, [X8+976]
	114 Compare X0, 0
	115 JumpIfEqual {238}
	116 Move X8, 0x13FC000
	117 Move X8, [X8+2728]
	118 Move X1, [X8]
	119 Call BaseSlider`1<Single>.SetHighValueWithoutNotify, X0, V0
	120 Move X8, [X19+16]
	121 Compare X8, 0
	122 JumpIfEqual {238}
	123 Move X8, [X8+1064]
	124 Compare X8, 0
	125 JumpIfEqual {238}
	126 Move X0, [X8+976]
	127 Compare X0, 0
	128 JumpIfEqual {238}
	129 Move X8, [X0]
	130 Move V0, V10
	131 Move X9, [X8+2184]
	132 Move X1, [X8+2192]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X0, [X19+32]
	135 Compare X0, 0
	136 JumpIfEqual {238}
	137 Move V0, V8
	138 Move X1, X31
	139 Call BaseVerticalCollectionView.ResolveItemHeight, X0, V0
	140 Move X8, [X20+32]
	141 Move W9, 0x7F800000
	142 NotImplemented "Instruction FDIV not yet implemented."
	143 Move S1, W9
	144 Move X8, [X8+192]
	145 NotImplemented "Instruction FCVTZS not yet implemented."
	146 NotImplemented "Instruction FCMP not yet implemented."
	147 Move W9, 0x80000000
	148 Move X1, [X8+32]
	149 NotImplemented "Instruction CSEL not yet implemented."
	150 Add W8, W9, 2
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X19
	153 NotImplemented "Instruction CSEL not yet implemented."
	154 Call 0x2843AE0, X0
	155 Move X8, [X19]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction CSEL not yet implemented."
	158 Move X0, X19
	159 Move X9, [X8+408]
	160 Move X1, [X8+416]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X8, [X19]
	164 Move X0, X19
	165 Move X9, [X8+408]
	166 Move X1, [X8+416]
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move X8, [X19]
	169 Move W21, W0
	170 Move X0, X19
	171 Move X9, [X8+408]
	172 Move X1, [X8+416]
	173 NotImplemented "Instruction BLR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract W20, W21, W22
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X8, [X19+40]
	178 Compare X8, 0
	179 JumpIfEqual {238}
	180 Move X9, [X19]
	181 Move W8, [X8+24]
	182 Move X0, X19
	183 Move X10, [X9+680]
	184 Move X2, [X9+688]
	185 Subtract W1, W8, 1
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Subtract W20, W20, 1
	188 Move X8, [X19]
	189 Move X0, X19
	190 Move X9, [X8+408]
	191 Move X1, [X8+416]
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Subtract W23, W22, W0
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X8, [X19]
	196 Move X0, X19
	197 Move X9, [X8+376]
	198 Move X1, [X8+384]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X8, [X19]
	201 Add W22, W0, W21
	202 Move TEMP, 0
	203 Not TEMP
	204 Move W1, TEMP
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W2, TEMP
	208 Move X9, [X8+664]
	209 Move X3, [X8+672]
	210 Move X0, X19
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move X8, [X20+32]
	213 Move X1, X0
	214 Move X0, X19
	215 Move W2, W22
	216 Move X8, [X8+192]
	217 Move X3, [X8+96]
	218 Call 0x28445B8, X0, X1, X2
	219 Subtract W23, W23, 1
	220 Add W21, W21, 1
	221 Move X8, [X19]
	222 Move X0, X19
	223 Move X20, [X31+64]
	224 Move X19, [X31+72]
	225 Move X22, [X31+48]
	226 Move X21, [X31+56]
	227 Move X2, [X8+472]
	228 Move X1, [X8+480]
	229 Move X30, [X31+32]
	230 Move X23, [X31+40]
	231 Move D9, [X31+16]
	232 Move D8, [X31+24]
	233 Move S0, W31
	234 Move V1, V10
	235 Move D11, [X31+80]
	236 Move D10, [X31+88]
	237 CallNoReturn X2
	238 Call 0x1C17F20

Method: System.Void OnScroll(UnityEngine.Vector2 scrollOffset)

Disassembly:
	0x02D23AA0 LDR W9, [X0 + 0xE0]
	0x02D23AA4 LDR X21, [X8 + 0x10]
	0x02D23AA8 CBNZ W9, 0x2D23AB0
	0x02D23AAC BL 0x1C16DFC
	0x02D23AB0 MOV X0, X21
	0x02D23AB4 MOV X1, X31
	0x02D23AB8 BL 0x338C698
	0x02D23ABC LDR X8, [X19 + 0x20]
	0x02D23AC0 MOV X21, X0
	0x02D23AC4 LDRB W9, [X8 + 0x135]
	0x02D23AC8 TBNZ X9, 0x0, 0x2D23AD8
	0x02D23ACC MOV X0, X8
	0x02D23AD0 BL 0x1C5C684
	0x02D23AD4 MOV X8, X0
	0x02D23AD8 LDR X8, [X8 + 0xC0]
	0x02D23ADC LDR X0, [X8 + 0x20]
	0x02D23AE0 LDRB W8, [X0 + 0x135]
	0x02D23AE4 TBNZ X8, 0x0, 0x2D23AEC
	0x02D23AE8 BL 0x1C5C684
	0x02D23AEC BL 0x1C16F10
	0x02D23AF0 LDR X8, [X19 + 0x20]
	0x02D23AF4 MOV X22, X0
	0x02D23AF8 ADD X9, X8, 0x135
	0x02D23AFC LDRH W9, [X9]
	0x02D23B00 TBNZ X9, 0x0, 0x2D23B1C
	0x02D23B04 MOV X0, X8
	0x02D23B08 BL 0x1C5C684
	0x02D23B0C LDR X8, [X19 + 0x20]
	0x02D23B10 ADD X9, X8, 0x135
	0x02D23B14 LDRH W9, [X9]
	0x02D23B18 B 0x2D23B20
	0x02D23B1C MOV X0, X8
	0x02D23B20 LDR X10, [X0 + 0xC0]
	0x02D23B24 LDR X19, [X10 + 0x18]
	0x02D23B28 TBNZ X9, 0x0, 0x2D23B38
	0x02D23B2C MOV X0, X8
	0x02D23B30 BL 0x1C5C684
	0x02D23B34 MOV X8, X0
	0x02D23B38 LDR X8, [X8 + 0xC0]
	0x02D23B3C MOV X0, X22
	0x02D23B40 MOV X1, X31
	0x02D23B44 MOV X2, X19
	0x02D23B48 LDR X3, [X8 + 0x28]
	0x02D23B4C BL 0x2D0FCE4
	0x02D23B50 MOV X0, X21
	0x02D23B54 MOV X1, X22
	0x02D23B58 MOV X2, X31
	0x02D23B5C MOV X3, X31
	0x02D23B60 MOV X4, X31
	0x02D23B64 BL 0x3BFE3B0
	0x02D23B68 STR X0, [X20]
	0x02D23B6C LDP X20, X19, [X31 + 0x20]
	0x02D23B70 LDP X22, X21, [X31 + 0x10]
	0x02D23B74 LDR X30, [X31], #0x30
	0x02D23B78 RET
	0x02D23B7C STR X30, [X31 - 0x40]!
	0x02D23B80 STP X24, X23, [X31 + 0x10]
	0x02D23B84 STP X22, X21, [X31 + 0x20]
	0x02D23B88 STP X20, X19, [X31 + 0x30]
	0x02D23B8C MOV X21, X3
	0x02D23B90 MOV X19, X5
	0x02D23B94 MOV W20, W4
	0x02D23B98 MOV X22, X0
	0x02D23B9C ADD X2, X31, 0xC
	0x02D23BA0 ADD X3, X31, 0x8
	0x02D23BA4 MOV X0, X21
	0x02D23BA8 MOV W1, W4
	0x02D23BAC STR X31, [X31 + 0x8]
	0x02D23BB0 MOV X4, X31
	0x02D23BB4 BL 0x3BFE0D8
	0x02D23BB8 TBZ X0, 0x0, 0x2D23C0C
	0x02D23BBC LDP W24, W23, [X31 + 0x8]
	0x02D23BC0 CMP W23, W24
	0x02D23BC4 B.GE 0x2D23BF8
	0x02D23BC8 LDR X0, [X19 + 0x20]
	0x02D23BCC LDRB W8, [X0 + 0x135]
	0x02D23BD0 TBNZ X8, 0x0, 0x2D23BD8
	0x02D23BD4 BL 0x1C5C684
	0x02D23BD8 LDR X8, [X0 + 0xC0]
	0x02D23BDC MOV X0, X22
	0x02D23BE0 MOV W1, W23
	0x02D23BE4 LDR X2, [X8 + 0x40]
	0x02D23BE8 BL 0x3A7AA34
	0x02D23BEC ADD W23, W23, 0x1
	0x02D23BF0 CMP W24, W23
	0x02D23BF4 B.NE 0x2D23BC8
	0x02D23BF8 ADD X2, X31, 0xC
	0x02D23BFC ADD X3, X31, 0x8
	0x02D23C00 MOV X0, X21
	0x02D23C04 MOV W1, W20
	0x02D23C08 B 0x2D23BB0
	0x02D23C0C LDP X20, X19, [X31 + 0x30]
	0x02D23C10 LDP X22, X21, [X31 + 0x20]
	0x02D23C14 LDP X24, X23, [X31 + 0x10]
	0x02D23C18 LDR X30, [X31], #0x40
	0x02D23C1C RET
	0x02D23C20 STP X30, X19, [X31 - 0x10]!
	0x02D23C24 MOV X19, X0
	0x02D23C28 LDR X0, [X0 + 0x20]
	0x02D23C2C LDRB W8, [X0 + 0x135]
	0x02D23C30 TBNZ X8, 0x0, 0x2D23C38
	0x02D23C34 BL 0x1C5C684
	0x02D23C38 LDR X8, [X0 + 0xC0]
	0x02D23C3C MOV W0, W31
	0x02D23C40 LDR X1, [X8 + 0x48]
	0x02D23C44 BL 0x213570C
	0x02D23C48 LDR X8, [X19 + 0x20]
	0x02D23C4C MOV X19, X0
	0x02D23C50 LDRB W9, [X8 + 0x135]
	0x02D23C54 TBNZ X9, 0x0, 0x2D23C64
	0x02D23C58 MOV X0, X8
	0x02D23C5C BL 0x1C5C684
	0x02D23C60 MOV X8, X0
	0x02D23C64 LDR X8, [X8 + 0xC0]
	0x02D23C68 LDR X0, [X8 + 0x8]
	0x02D23C6C LDRB W8, [X0 + 0x135]
	0x02D23C70 TBNZ X8, 0x0, 0x2D23C78
	0x02D23C74 BL 0x1C5C684
	0x02D23C78 LDR X8, [X0 + 0xB8]
	0x02D23C7C STR X19, [X8]
	0x02D23C80 LDP X30, X19, [X31], #0x10
	0x02D23C84 RET
	0x02D23C88 STR X30, [X31 - 0x30]!
	0x02D23C8C STP X22, X21, [X31 + 0x10]
	0x02D23C90 STP X20, X19, [X31 + 0x20]
	0x02D23C94 ADRP X20, 0x16B8000
	0x02D23C98 LDRB W8, [X20 + 0x7E4]
	0x02D23C9C MOV X19, X0
	0x02D23CA0 TBNZ X8, 0x0, 0x2D23CC4
	0x02D23CA4 ADRP X0, 0x13F8000
	0x02D23CA8 LDR X0, [X0 + 0xB90]
	0x02D23CAC BL 0x1C16CF4
	0x02D23CB0 ADRP X0, 0x13D0000
	0x02D23CB4 LDR X0, [X0 + 0x6C0]
	0x02D23CB8 BL 0x1C16CF4
	0x02D23CBC MOVZ W8, 0x1
	0x02D23CC0 STRB W8, [X20 + 0x7E4]
	0x02D23CC4 LDR X0, [X19 + 0x20]
	0x02D23CC8 LDRB W8, [X0 + 0x135]
	0x02D23CCC TBNZ X8, 0x0, 0x2D23CD4
	0x02D23CD0 BL 0x1C5C684
	0x02D23CD4 LDR X8, [X0 + 0xC0]
	0x02D23CD8 LDR X0, [X8 + 0x8]
	0x02D23CDC LDRB W8, [X0 + 0x135]
	0x02D23CE0 TBNZ X8, 0x0, 0x2D23CE8
	0x02D23CE4 BL 0x1C5C684
	0x02D23CE8 LDR W8, [X0 + 0xE0]
	0x02D23CEC CBNZ W8, 0x2D23CF4
	0x02D23CF0 BL 0x1C16DFC
	0x02D23CF4 LDR X0, [X19 + 0x20]
	0x02D23CF8 LDRB W8, [X0 + 0x135]
	0x02D23CFC TBNZ X8, 0x0, 0x2D23D04
	0x02D23D00 BL 0x1C5C684
	0x02D23D04 LDR X8, [X0 + 0xC0]
	0x02D23D08 ADRP X20, 0x13F8000
	0x02D23D0C LDR X0, [X8 + 0x8]
	0x02D23D10 LDRB W8, [X0 + 0x135]
	0x02D23D14 LDR X20, [X20 + 0xB90]
	0x02D23D18 TBNZ X8, 0x0, 0x2D23D20
	0x02D23D1C BL 0x1C5C684
	0x02D23D20 LDR X0, [X0 + 0xB8]
	0x02D23D24 LDR X1, [X20]
	0x02D23D28 BL 0x25E6504
	0x02D23D2C LDR X0, [X0]
	0x02D23D30 MOV X1, X31
	0x02D23D34 MOV X2, X31
	0x02D23D38 BL 0x33BE5B0
	0x02D23D3C TBZ X0, 0x0, 0x2D23E98
	0x02D23D40 LDR X0, [X19 + 0x20]
	0x02D23D44 LDRB W8, [X0 + 0x135]
	0x02D23D48 TBNZ X8, 0x0, 0x2D23D50
	0x02D23D4C BL 0x1C5C684
	0x02D23D50 LDR X8, [X0 + 0xC0]
	0x02D23D54 LDR X0, [X8 + 0x8]
	0x02D23D58 LDRB W8, [X0 + 0x135]
	0x02D23D5C TBNZ X8, 0x0, 0x2D23D64
	0x02D23D60 BL 0x1C5C684
	0x02D23D64 LDR W8, [X0 + 0xE0]
	0x02D23D68 CBNZ W8, 0x2D23D70
	0x02D23D6C BL 0x1C16DFC
	0x02D23D70 LDR X0, [X19 + 0x20]
	0x02D23D74 LDRB W8, [X0 + 0x135]
	0x02D23D78 TBNZ X8, 0x0, 0x2D23D80
	0x02D23D7C BL 0x1C5C684
	0x02D23D80 LDR X8, [X0 + 0xC0]
	0x02D23D84 LDR X0, [X8 + 0x8]
	0x02D23D88 LDRB W8, [X0 + 0x135]
	0x02D23D8C TBNZ X8, 0x0, 0x2D23D94
	0x02D23D90 BL 0x1C5C684
	0x02D23D94 LDR X0, [X0 + 0xB8]
	0x02D23D98 LDR X1, [X20]
	0x02D23D9C ADRP X21, 0x13D0000
	0x02D23DA0 LDR X21, [X21 + 0x6C0]
	0x02D23DA4 BL 0x25E6504
	0x02D23DA8 LDR X8, [X19 + 0x20]
	0x02D23DAC MOV X20, X0
	0x02D23DB0 LDRB W9, [X8 + 0x135]
	0x02D23DB4 TBNZ X9, 0x0, 0x2D23DC4
	0x02D23DB8 MOV X0, X8
	0x02D23DBC BL 0x1C5C684
	0x02D23DC0 MOV X8, X0
	0x02D23DC4 LDR X0, [X21]
	0x02D23DC8 LDR X8, [X8 + 0xC0]
	0x02D23DCC LDR W9, [X0 + 0xE0]
	0x02D23DD0 LDR X21, [X8 + 0x10]
	0x02D23DD4 CBNZ W9, 0x2D23DDC
	0x02D23DD8 BL 0x1C16DFC
	0x02D23DDC MOV X0, X21
	0x02D23DE0 MOV X1, X31
	0x02D23DE4 BL 0x338C698
	0x02D23DE8 LDR X8, [X19 + 0x20]
	0x02D23DEC MOV X21, X0
	0x02D23DF0 LDRB W9, [X8 + 0x135]
	0x02D23DF4 TBNZ X9, 0x0, 0x2D23E04
	0x02D23DF8 MOV X0, X8
	0x02D23DFC BL 0x1C5C684
	0x02D23E00 MOV X8, X0
	0x02D23E04 LDR X8, [X8 + 0xC0]
	0x02D23E08 LDR X0, [X8 + 0x20]
	0x02D23E0C LDRB W8, [X0 + 0x135]
	0x02D23E10 TBNZ X8, 0x0, 0x2D23E18
	0x02D23E14 BL 0x1C5C684
	0x02D23E18 BL 0x1C16F10
	0x02D23E1C LDR X8, [X19 + 0x20]
	0x02D23E20 MOV X22, X0
	0x02D23E24 ADD X9, X8, 0x135
	0x02D23E28 LDRH W9, [X9]
	0x02D23E2C TBNZ X9, 0x0, 0x2D23E48
	0x02D23E30 MOV X0, X8
	0x02D23E34 BL 0x1C5C684
	0x02D23E38 LDR X8, [X19 + 0x20]
	0x02D23E3C ADD X9, X8, 0x135
	0x02D23E40 LDRH W9, [X9]
	0x02D23E44 B 0x2D23E4C
	0x02D23E48 MOV X0, X8
	0x02D23E4C LDR X10, [X0 + 0xC0]
	0x02D23E50 LDR X19, [X10 + 0x18]
	0x02D23E54 TBNZ X9, 0x0, 0x2D23E64
	0x02D23E58 MOV X0, X8
	0x02D23E5C BL 0x1C5C684
	0x02D23E60 MOV X8, X0
	0x02D23E64 LDR X8, [X8 + 0xC0]
	0x02D23E68 MOV X0, X22
	0x02D23E6C MOV X1, X31
	0x02D23E70 MOV X2, X19
	0x02D23E74 LDR X3, [X8 + 0x28]
	0x02D23E78 BL 0x2D0FE4C
	0x02D23E7C MOV X0, X21
	0x02D23E80 MOV X1, X22
	0x02D23E84 MOV X2, X31
	0x02D23E88 MOV X3, X31
	0x02D23E8C MOV X4, X31
	0x02D23E90 BL 0x3BFE3B0
	0x02D23E94 STR X0, [X20]
	0x02D23E98 LDP X20, X19, [X31 + 0x20]
	0x02D23E9C LDP X22, X21, [X31 + 0x10]
	0x02D23EA0 LDR X30, [X31], #0x30
	0x02D23EA4 RET
	0x02D23EA8 STR X30, [X31 - 0x40]!
	0x02D23EAC STP X24, X23, [X31 + 0x10]
	0x02D23EB0 STP X22, X21, [X31 + 0x20]
	0x02D23EB4 STP X20, X19, [X31 + 0x30]
	0x02D23EB8 MOV X21, X3
	0x02D23EBC MOV X19, X5
	0x02D23EC0 MOV W20, W4
	0x02D23EC4 MOV X22, X0
	0x02D23EC8 ADD X2, X31, 0xC
	0x02D23ECC ADD X3, X31, 0x8
	0x02D23ED0 MOV X0, X21
	0x02D23ED4 MOV W1, W4
	0x02D23ED8 STR X31, [X31 + 0x8]
	0x02D23EDC MOV X4, X31
	0x02D23EE0 BL 0x3BFE0D8
	0x02D23EE4 TBZ X0, 0x0, 0x2D23F38
	0x02D23EE8 LDP W24, W23, [X31 + 0x8]
	0x02D23EEC CMP W23, W24
	0x02D23EF0 B.GE 0x2D23F24
	0x02D23EF4 LDR X0, [X19 + 0x20]
	0x02D23EF8 LDRB W8, [X0 + 0x135]
	0x02D23EFC TBNZ X8, 0x0, 0x2D23F04
	0x02D23F00 BL 0x1C5C684
	0x02D23F04 LDR X8, [X0 + 0xC0]
	0x02D23F08 MOV X0, X22
	0x02D23F0C MOV W1, W23
	0x02D23F10 LDR X2, [X8 + 0x40]
	0x02D23F14 BL 0x3A7AC20
	0x02D23F18 ADD W23, W23, 0x1
	0x02D23F1C CMP W24, W23
	0x02D23F20 B.NE 0x2D23EF4
	0x02D23F24 ADD X2, X31, 0xC
	0x02D23F28 ADD X3, X31, 0x8
	0x02D23F2C MOV X0, X21
	0x02D23F30 MOV W1, W20
	0x02D23F34 B 0x2D23EDC
	0x02D23F38 LDP X20, X19, [X31 + 0x30]
	0x02D23F3C LDP X22, X21, [X31 + 0x20]
	0x02D23F40 LDP X24, X23, [X31 + 0x10]
	0x02D23F44 LDR X30, [X31], #0x40
	0x02D23F48 RET
	0x02D23F4C STP X30, X19, [X31 - 0x10]!
	0x02D23F50 MOV X19, X0
	0x02D23F54 LDR X0, [X0 + 0x20]
	0x02D23F58 LDRB W8, [X0 + 0x135]
	0x02D23F5C TBNZ X8, 0x0, 0x2D23F64
	0x02D23F60 BL 0x1C5C684
	0x02D23F64 LDR X8, [X0 + 0xC0]
	0x02D23F68 MOV W0, W31
	0x02D23F6C LDR X1, [X8 + 0x48]
	0x02D23F70 BL 0x2135790
	0x02D23F74 LDR X8, [X19 + 0x20]
	0x02D23F78 MOV X19, X0
	0x02D23F7C LDRB W9, [X8 + 0x135]
	0x02D23F80 TBNZ X9, 0x0, 0x2D23F90
	0x02D23F84 MOV X0, X8
	0x02D23F88 BL 0x1C5C684
	0x02D23F8C MOV X8, X0
	0x02D23F90 LDR X8, [X8 + 0xC0]
	0x02D23F94 LDR X0, [X8 + 0x8]
	0x02D23F98 LDRB W8, [X0 + 0x135]
	0x02D23F9C TBNZ X8, 0x0, 0x2D23FA4
	0x02D23FA0 BL 0x1C5C684
	0x02D23FA4 LDR X8, [X0 + 0xB8]
	0x02D23FA8 STR X19, [X8]
	0x02D23FAC LDP X30, X19, [X31], #0x10
	0x02D23FB0 RET
	0x02D23FB4 STR X30, [X31 - 0x30]!
	0x02D23FB8 STP X22, X21, [X31 + 0x10]
	0x02D23FBC STP X20, X19, [X31 + 0x20]
	0x02D23FC0 ADRP X20, 0x16B8000
	0x02D23FC4 LDRB W8, [X20 + 0x7E5]
	0x02D23FC8 MOV X19, X0
	0x02D23FCC TBNZ X8, 0x0, 0x2D23FF0
	0x02D23FD0 ADRP X0, 0x13F8000
	0x02D23FD4 LDR X0, [X0 + 0xB90]
	0x02D23FD8 BL 0x1C16CF4
	0x02D23FDC ADRP X0, 0x13D0000
	0x02D23FE0 LDR X0, [X0 + 0x6C0]
	0x02D23FE4 BL 0x1C16CF4
	0x02D23FE8 MOVZ W8, 0x1
	0x02D23FEC STRB W8, [X20 + 0x7E5]
	0x02D23FF0 LDR X0, [X19 + 0x20]
	0x02D23FF4 LDRB W8, [X0 + 0x135]
	0x02D23FF8 TBNZ X8, 0x0, 0x2D24000
	0x02D23FFC BL 0x1C5C684
	0x02D24000 LDR X8, [X0 + 0xC0]
	0x02D24004 LDR X0, [X8 + 0x8]
	0x02D24008 LDRB W8, [X0 + 0x135]
	0x02D2400C TBNZ X8, 0x0, 0x2D24014
	0x02D24010 BL 0x1C5C684
	0x02D24014 LDR W8, [X0 + 0xE0]
	0x02D24018 CBNZ W8, 0x2D24020
	0x02D2401C BL 0x1C16DFC
	0x02D24020 LDR X0, [X19 + 0x20]
	0x02D24024 LDRB W8, [X0 + 0x135]
	0x02D24028 TBNZ X8, 0x0, 0x2D24030
	0x02D2402C BL 0x1C5C684
	0x02D24030 LDR X8, [X0 + 0xC0]
	0x02D24034 ADRP X20, 0x13F7000
	0x02D24038 LDR X0, [X8 + 0x8]
	0x02D2403C LDRB W8, [X0 + 0x135]
	0x02D24040 LDR X20, [X20 + 0xB90]
	0x02D24044 TBNZ X8, 0x0, 0x2D2404C
	0x02D24048 BL 0x1C5C684
	0x02D2404C LDR X0, [X0 + 0xB8]
	0x02D24050 LDR X1, [X20]
	0x02D24054 BL 0x25E6504
	0x02D24058 LDR X0, [X0]
	0x02D2405C MOV X1, X31
	0x02D24060 MOV X2, X31
	0x02D24064 BL 0x33BE5B0
	0x02D24068 TBZ X0, 0x0, 0x2D241C4
	0x02D2406C LDR X0, [X19 + 0x20]
	0x02D24070 LDRB W8, [X0 + 0x135]
	0x02D24074 TBNZ X8, 0x0, 0x2D2407C
	0x02D24078 BL 0x1C5C684
	0x02D2407C LDR X8, [X0 + 0xC0]
	0x02D24080 LDR X0, [X8 + 0x8]
	0x02D24084 LDRB W8, [X0 + 0x135]
	0x02D24088 TBNZ X8, 0x0, 0x2D24090
	0x02D2408C BL 0x1C5C684
	0x02D24090 LDR W8, [X0 + 0xE0]
	0x02D24094 CBNZ W8, 0x2D2409C
	0x02D24098 BL 0x1C16DFC
	0x02D2409C LDR X0, [X19 + 0x20]
	0x02D240A0 LDRB W8, [X0 + 0x135]
	0x02D240A4 TBNZ X8, 0x0, 0x2D240AC
	0x02D240A8 BL 0x1C5C684
	0x02D240AC LDR X8, [X0 + 0xC0]
	0x02D240B0 LDR X0, [X8 + 0x8]
	0x02D240B4 LDRB W8, [X0 + 0x135]
	0x02D240B8 TBNZ X8, 0x0, 0x2D240C0
	0x02D240BC BL 0x1C5C684
	0x02D240C0 LDR X0, [X0 + 0xB8]
	0x02D240C4 LDR X1, [X20]
	0x02D240C8 ADRP X21, 0x13CF000
	0x02D240CC LDR X21, [X21 + 0x6C0]
	0x02D240D0 BL 0x25E6504
	0x02D240D4 LDR X8, [X19 + 0x20]
	0x02D240D8 MOV X20, X0
	0x02D240DC LDRB W9, [X8 + 0x135]
	0x02D240E0 TBNZ X9, 0x0, 0x2D240F0
	0x02D240E4 MOV X0, X8

ISIL:
	001 Move [X31-96], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x16B9000
	013 Move W8, [X21+2014]
	014 Move X19, X1
	015 Move V8, V1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x13FA000
	022 Move X0, [X0+296]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2014], W8
	026 Move S0, W31
	027 Move X0, X20
	028 NotImplemented "Instruction FMAX not yet implemented."
	029 Call 0x2D23490, X0
	030 Move W8, 0x7F800000
	031 Move X0, [X20+16]
	032 Move V9, V0
	033 NotImplemented "Instruction FDIV not yet implemented."
	034 Move S1, W8
	035 NotImplemented "Instruction FCVTZS not yet implemented."
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Move W8, 0x80000000
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {435}
	041 Move X8, [X0]
	042 Move X9, [X8+1896]
	043 Move X1, [X8+1904]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare X0, 0
	046 JumpIfEqual {435}
	047 Move X1, X31
	048 Call VisualElement.get_style, X0
	049 NotImplemented "Instruction SCVTF not yet implemented."
	050 Move X22, X0
	051 Multiply S0, S9, S0
	052 Move X0, X31
	053 Call StyleLength.op_Implicit, V0
	054 Compare X22, 0
	055 JumpIfEqual {435}
	056 Move X25, 0x13FA000
	057 Move X9, [X22]
	058 Move X25, [X25+296]
	059 Move X8, X1
	060 Move X23, X0
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X25]
	063 And X24, X8, 0
	064 Compare X10, 0
	065 JumpIfEqual {72}
	066 Move X8, [X9+176]
	067 Add X8, X8, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X10, X10, 1
	071 Add X8, X8, 16
	072 Move W2, 39
	073 Move X0, X22
	074 Call 0x1C5D788
	075 Move W8, [X8]
	076 Add W8, W8, 39
	077 Add X8, X9, W8
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X3, [X0+8]
	081 Move X0, X22
	082 Move X1, X23
	083 Move X2, X24
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X0, [X20+16]
	086 Compare X0, 0
	087 JumpIfEqual {435}
	088 Move X8, [X0]
	089 Move X9, [X8+1896]
	090 Move X1, [X8+1904]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Compare X0, 0
	093 JumpIfEqual {435}
	094 Move X1, X31
	095 Call VisualElement.get_style, X0
	096 Move X8, [X19+32]
	097 Move X22, X0
	098 Move X0, X20
	099 Move X8, [X8+192]
	100 Move X1, [X8+32]
	101 Call 0x2843AE0, X0
	102 NotImplemented "Instruction SCVTF not yet implemented."
	103 Multiply S0, S9, S0
	104 Move X0, X31
	105 Call StyleLength.op_Implicit, V0
	106 Compare X22, 0
	107 JumpIfEqual {435}
	108 Move X9, [X22]
	109 Move X8, X1
	110 Move X1, [X25]
	111 Move X23, X0
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 And X24, X8, 0
	114 Compare X10, 0
	115 JumpIfEqual {122}
	116 Move X8, [X9+176]
	117 Add X8, X8, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X10, X10, 1
	121 Add X8, X8, 16
	122 Move W2, 24
	123 Move X0, X22
	124 Call 0x1C5D788
	125 Move W8, [X8]
	126 Add W8, W8, 24
	127 Add X8, X9, W8
	128 Add X0, X8, 312
	129 Move X8, [X0]
	130 Move X3, [X0+8]
	131 Move X0, X22
	132 Move X1, X23
	133 Move X2, X24
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X8, [X19+32]
	136 Move X0, X20
	137 Move X8, [X8+192]
	138 Move X1, [X8+48]
	139 Call 0x2843CF4, X0
	140 Compare X0, 0
	141 JumpIfEqual {435}
	142 Move [X0+20], S8
	143 Move X8, [X20]
	144 Move X0, X20
	145 Move X9, [X8+376]
	146 Move X1, [X8+384]
	147 NotImplemented "Instruction BLR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X8, [X20]
	150 Move X0, X20
	151 Move W1, W21
	152 Move X9, [X8+392]
	153 Move X2, [X8+400]
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X8, [X20+40]
	156 Compare X8, 0
	157 JumpIfEqual {435}
	158 Move W8, [X8+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X8, [X20]
	161 Move X0, X20
	162 Move X9, [X8+376]
	163 Move X1, [X8+384]
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X8, [X20+40]
	166 Compare X8, 0
	167 JumpIfEqual {435}
	168 Move X9, [X19+32]
	169 Move W21, W0
	170 Move X0, X8
	171 Move W1, W31
	172 Move X9, [X9+192]
	173 Move X2, [X9+104]
	174 Call List`1<Object>.get_Item, X0, X1
	175 Compare X0, 0
	176 JumpIfEqual {435}
	177 Move W8, [X0+32]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, [X20+40]
	180 Compare X0, 0
	181 JumpIfEqual {435}
	182 Move X8, [X19+32]
	183 Move W1, W31
	184 Move X8, [X8+192]
	185 Move X2, [X8+104]
	186 Call List`1<Object>.get_Item, X0, X1
	187 Compare X0, 0
	188 JumpIfEqual {435}
	189 Move X8, [X20]
	190 Move W21, [X0+32]
	191 Move X0, X20
	192 Move X9, [X8+376]
	193 Move X1, [X8+384]
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Move W8, W0
	196 Move X0, [X20+40]
	197 Subtract W23, W21, W8
	198 Move X21, [X20+80]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 NotImplemented "Instruction CSET not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move W24, W31
	203 Move TEMP, X8
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {435}
	207 Move W8, [X0+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X8, [X19+32]
	210 Move W9, [X0+24]
	211 Move X8, [X8+192]
	212 Subtract W1, W9, 1
	213 Move X2, [X8+104]
	214 Call List`1<Object>.get_Item, X0, X1
	215 Compare X21, 0
	216 JumpIfEqual {435}
	217 Move X8, [X19+32]
	218 Move W10, [X21+28]
	219 Move X9, [X8+192]
	220 Move X8, [X21+16]
	221 Add W10, W10, 1
	222 Move X9, [X9+112]
	223 Move [X21+28], W10
	224 Compare X8, 0
	225 JumpIfEqual {435}
	226 NotImplemented "Instruction LDRSW not yet implemented."
	227 Move W11, [X8+24]
	228 Move X22, X0
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Add W9, W10, 1
	231 Add X8, X8, X10
	232 Move [X21+24], W9
	233 Move [X8+32], X22
	234 Move X8, [X9+32]
	235 Move X0, X21
	236 Move X1, X22
	237 Move X8, [X8+192]
	238 Move X2, [X8+112]
	239 Call List`1<Object>.AddWithResize, X0, X1
	240 Move X0, [X20+40]
	241 Compare X0, 0
	242 JumpIfEqual {435}
	243 Move X8, [X19+32]
	244 Move W9, [X0+24]
	245 Move X8, [X8+192]
	246 Subtract W1, W9, 1
	247 Move X2, [X8+120]
	248 Call List`1<Object>.RemoveAt, X0, X1
	249 Compare X22, 0
	250 JumpIfEqual {435}
	251 Move X8, [X22]
	252 Move X0, X22
	253 Move X9, [X8+376]
	254 Move X1, [X8+384]
	255 NotImplemented "Instruction BLR not yet implemented."
	256 Compare X0, 0
	257 JumpIfEqual {435}
	258 Move X1, X31
	259 Call VisualElement.SendToBack, X0
	260 Move X0, [X20+40]
	261 Add W24, W24, 1
	262 NotImplemented "Instruction CMP not yet implemented."
	263 NotImplemented "Instruction CSET not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Compare W8, 0
	266 JumpIfNotEqual {435}
	267 Move X8, [X19+32]
	268 Move W1, W31
	269 Move X2, X21
	270 Move X8, [X8+192]
	271 Move X3, [X8+128]
	272 Call List`1<Object>.InsertRange, X0, X1, X2
	273 Move X8, [X20+80]
	274 Compare X8, 0
	275 JumpIfEqual {435}
	276 Move W2, [X8+24]
	277 Move W9, [X8+28]
	278 Add W9, W9, 1
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move [X8+24], W31
	281 Move [X8+28], W9
	282 Move X0, [X8+16]
	283 Move X8, [X20]
	284 Move X0, X20
	285 Move X9, [X8+376]
	286 Move X1, [X8+384]
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Move X8, [X20+40]
	289 Compare X8, 0
	290 JumpIfEqual {435}
	291 Move X9, [X19+32]
	292 Move W10, [X8+24]
	293 Move W21, W0
	294 Move X0, X8
	295 Move X9, [X9+192]
	296 Subtract W1, W10, 1
	297 Move X2, [X9+104]
	298 Call List`1<Object>.get_Item, X0, X1
	299 Compare X0, 0
	300 JumpIfEqual {435}
	301 Move W8, [X0+32]
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X8, [X20]
	304 Move X21, [X20+80]
	305 Move X0, X20
	306 Move X9, [X8+376]
	307 Move X1, [X8+384]
	308 NotImplemented "Instruction BLR not yet implemented."
	309 Move X8, [X20+40]
	310 Compare X8, 0
	311 JumpIfEqual {435}
	312 Move W23, W0
	313 Move W22, W31
	314 Move X9, [X19+32]
	315 Move X0, X8
	316 Move W1, W22
	317 Move X9, [X9+192]
	318 Move X2, [X9+104]
	319 Call List`1<Object>.get_Item, X0, X1
	320 Compare X0, 0
	321 JumpIfEqual {435}
	322 Move X8, X0
	323 Move X0, [X20+40]
	324 Compare X0, 0
	325 JumpIfEqual {435}
	326 Move X9, [X19+32]
	327 Move W10, [X8+32]
	328 Move X8, [X9+192]
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move X2, [X8+104]
	331 Move W1, W22
	332 Call List`1<Object>.get_Item, X0, X1
	333 Compare X21, 0
	334 JumpIfEqual {435}
	335 Move X8, [X19+32]
	336 Move W10, [X21+28]
	337 Move X9, [X8+192]
	338 Move X8, [X21+16]
	339 Add W10, W10, 1
	340 Move X9, [X9+112]
	341 Move [X21+28], W10
	342 Compare X8, 0
	343 JumpIfEqual {435}
	344 NotImplemented "Instruction LDRSW not yet implemented."
	345 Move W11, [X8+24]
	346 Move X23, X0
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Add W9, W10, 1
	349 Add X8, X8, X10
	350 Move [X21+24], W9
	351 Move [X8+32], X23
	352 Move X8, [X9+32]
	353 Move X0, X21
	354 Move X1, X23
	355 Move X8, [X8+192]
	356 Move X2, [X8+112]
	357 Call List`1<Object>.AddWithResize, X0, X1
	358 Compare X23, 0
	359 JumpIfEqual {435}
	360 Move X8, [X23]
	361 Move X0, X23
	362 Move X9, [X8+376]
	363 Move X1, [X8+384]
	364 NotImplemented "Instruction BLR not yet implemented."
	365 Compare X0, 0
	366 JumpIfEqual {435}
	367 Move X1, X31
	368 Add W22, W22, 1
	369 Call VisualElement.BringToFront, X0
	370 Move X8, [X20]
	371 Move X0, X20
	372 Move X9, [X8+376]
	373 Move X1, [X8+384]
	374 NotImplemented "Instruction BLR not yet implemented."
	375 Move X8, [X20+40]
	376 Move W23, W0
	377 Compare X8, 0
	378 JumpIfNotEqual {314}
	379 Move X3, [X8+152]
	380 Move W1, W31
	381 Move W2, W22
	382 Call List`1<Object>.RemoveRange, X0, X1, X2
	383 Move X0, [X20+40]
	384 Compare X0, 0
	385 JumpIfEqual {435}
	386 Move X8, [X19+32]
	387 Move X1, X21
	388 Move X8, [X8+192]
	389 Move X2, [X8+160]
	390 Call List`1<Object>.AddRange, X0, X1
	391 Compare X21, 0
	392 JumpIfEqual {435}
	393 Move W2, [X21+24]
	394 Move W8, [X21+28]
	395 Add W8, W8, 1
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move [X21+24], W31
	398 Move [X21+28], W8
	399 Move X0, [X21+16]
	400 Move W1, W31
	401 Move X3, X31
	402 Call Array.Clear, X0, X1, X2
	403 Move X8, [X20+40]
	404 Compare X8, 0
	405 JumpIfEqual {435}
	406 Move W21, W31
	407 Move W8, [X8+24]
	408 NotImplemented "Instruction CMP not yet implemented."
	409 Move X8, [X20]
	410 Move X0, X20
	411 Move X9, [X8+376]
	412 Move X1, [X8+384]
	413 NotImplemented "Instruction BLR not yet implemented."
	414 Move X8, [X20+40]
	415 Compare X8, 0
	416 JumpIfEqual {435}
	417 Move X9, [X19+32]
	418 Add W22, W0, W21
	419 Move X0, X8
	420 Move W1, W21
	421 Move X9, [X9+192]
	422 Move X2, [X9+104]
	423 Call List`1<Object>.get_Item, X0, X1
	424 Move X8, [X19+32]
	425 Move X1, X0
	426 Move X0, X20
	427 Move W2, W22
	428 Move X8, [X8+192]
	429 Move X3, [X8+96]
	430 Call 0x28445B8, X0, X1, X2
	431 Move X8, [X20+40]
	432 Add W21, W21, 1
	433 Compare X8, 0
	434 JumpIfNotEqual {407}
	435 Call 0x1C17F20
	436 Move X20, [X31+80]
	437 Move X19, [X31+88]
	438 Move X22, [X31+64]
	439 Move X21, [X31+72]
	440 Move X24, [X31+48]
	441 Move X23, [X31+56]
	442 Move X30, [X31+32]
	443 Move X25, [X31+40]
	444 Move D9, [X31+16]
	445 Move D8, [X31+24]
	446 Move V10, [X31+96]
	447 Return 

Method: T GetOrMakeItemAtIndex(System.Int32 activeItemIndex = -1, System.Int32 scrollViewIndex = -1)

Disassembly:
	0x02D240E8 BL 0x1C5C684
	0x02D240EC MOV X8, X0
	0x02D240F0 LDR X0, [X21]
	0x02D240F4 LDR X8, [X8 + 0xC0]
	0x02D240F8 LDR W9, [X0 + 0xE0]
	0x02D240FC LDR X21, [X8 + 0x10]
	0x02D24100 CBNZ W9, 0x2D24108
	0x02D24104 BL 0x1C16DFC
	0x02D24108 MOV X0, X21
	0x02D2410C MOV X1, X31
	0x02D24110 BL 0x338C698
	0x02D24114 LDR X8, [X19 + 0x20]
	0x02D24118 MOV X21, X0
	0x02D2411C LDRB W9, [X8 + 0x135]
	0x02D24120 TBNZ X9, 0x0, 0x2D24130
	0x02D24124 MOV X0, X8
	0x02D24128 BL 0x1C5C684
	0x02D2412C MOV X8, X0
	0x02D24130 LDR X8, [X8 + 0xC0]
	0x02D24134 LDR X0, [X8 + 0x20]
	0x02D24138 LDRB W8, [X0 + 0x135]
	0x02D2413C TBNZ X8, 0x0, 0x2D24144
	0x02D24140 BL 0x1C5C684
	0x02D24144 BL 0x1C16F10
	0x02D24148 LDR X8, [X19 + 0x20]
	0x02D2414C MOV X22, X0
	0x02D24150 ADD X9, X8, 0x135
	0x02D24154 LDRH W9, [X9]
	0x02D24158 TBNZ X9, 0x0, 0x2D24174
	0x02D2415C MOV X0, X8
	0x02D24160 BL 0x1C5C684
	0x02D24164 LDR X8, [X19 + 0x20]
	0x02D24168 ADD X9, X8, 0x135
	0x02D2416C LDRH W9, [X9]
	0x02D24170 B 0x2D24178
	0x02D24174 MOV X0, X8
	0x02D24178 LDR X10, [X0 + 0xC0]
	0x02D2417C LDR X19, [X10 + 0x18]
	0x02D24180 TBNZ X9, 0x0, 0x2D24190
	0x02D24184 MOV X0, X8
	0x02D24188 BL 0x1C5C684
	0x02D2418C MOV X8, X0
	0x02D24190 LDR X8, [X8 + 0xC0]
	0x02D24194 MOV X0, X22
	0x02D24198 MOV X1, X31
	0x02D2419C MOV X2, X19
	0x02D241A0 LDR X3, [X8 + 0x28]
	0x02D241A4 BL 0x2D0FF00
	0x02D241A8 MOV X0, X21
	0x02D241AC MOV X1, X22
	0x02D241B0 MOV X2, X31
	0x02D241B4 MOV X3, X31
	0x02D241B8 MOV X4, X31
	0x02D241BC BL 0x3BFE3B0
	0x02D241C0 STR X0, [X20]
	0x02D241C4 LDP X20, X19, [X31 + 0x20]
	0x02D241C8 LDP X22, X21, [X31 + 0x10]
	0x02D241CC LDR X30, [X31], #0x30
	0x02D241D0 RET
	0x02D241D4 SUB X31, X31, 0x50
	0x02D241D8 STP X30, X25, [X31 + 0x10]
	0x02D241DC STP X24, X23, [X31 + 0x20]
	0x02D241E0 STP X22, X21, [X31 + 0x30]
	0x02D241E4 STP X20, X19, [X31 + 0x40]
	0x02D241E8 ADRP X23, 0x16B7000
	0x02D241EC LDRB W8, [X23 + 0x7E6]
	0x02D241F0 MOV X19, X5
	0x02D241F4 MOV W20, W4
	0x02D241F8 MOV X21, X3
	0x02D241FC MOV X22, X0
	0x02D24200 TBNZ X8, 0x0, 0x2D24218
	0x02D24204 ADRP X0, 0x13FA000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x16B8000
	008 Move W8, [X23+2015]
	009 Move X22, X3
	010 Move W19, W2
	011 Move W20, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x13F9000
	018 Move X0, [X0+296]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2015], W8
	022 Compare X21, 0
	023 JumpIfEqual {85}
	024 Move X8, [X22+32]
	025 Move X0, X21
	026 Move W1, W20
	027 Move W2, W19
	028 Move X8, [X8+192]
	029 Move X3, [X8+80]
	030 Call 0x2845AB4, X0, X1, X2
	031 Compare X0, 0
	032 JumpIfEqual {85}
	033 Move X8, [X0]
	034 Move X19, X0
	035 Move X9, [X8+376]
	036 Move X1, [X8+384]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Compare X0, 0
	039 JumpIfEqual {85}
	040 Move X1, X31
	041 Call VisualElement.get_style, X0
	042 Move X20, X0
	043 Move X0, X21
	044 Call 0x2D23490, X0
	045 Move X0, X31
	046 Call StyleLength.op_Implicit, V0
	047 Compare X20, 0
	048 JumpIfEqual {85}
	049 Move X10, 0x13F9000
	050 Move X8, [X20]
	051 Move X10, [X10+296]
	052 Move X22, X1
	053 Move X21, X0
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move W2, 24
	065 Move X0, X20
	066 Call 0x1C5D788
	067 Move W9, [X10]
	068 Add W9, W9, 24
	069 Add X8, X8, W9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X3, [X0+8]
	073 And X2, X22, 0
	074 Move X0, X20
	075 Move X1, X21
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X0, X19
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Move X23, [X31+56]
	084 Return X0
	085 Call 0x1C17F20

Method: System.Void EndDrag(System.Int32 dropIndex)

Disassembly:
	0x02D24208 LDR X0, [X0 + 0xDB8]
	0x02D2420C BL 0x1C16CF4
	0x02D24210 MOVZ W8, 0x1
	0x02D24214 STRB W8, [X23 + 0x7E6]
	0x02D24218 ADD X2, X31, 0xC
	0x02D2421C ADD X3, X31, 0x8
	0x02D24220 MOV X0, X21
	0x02D24224 MOV W1, W20
	0x02D24228 MOV X4, X31
	0x02D2422C STR X31, [X31 + 0x8]
	0x02D24230 BL 0x3BFE0D8
	0x02D24234 TBZ X0, 0x0, 0x2D242A8
	0x02D24238 ADRP X24, 0x13FA000
	0x02D2423C LDR X24, [X24 + 0xDB8]
	0x02D24240 LDP W25, W23, [X31 + 0x8]
	0x02D24244 CMP W23, W25
	0x02D24248 B.GE 0x2D2428C
	0x02D2424C LDR X0, [X24]
	0x02D24250 LDR W8, [X0 + 0xE0]
	0x02D24254 CBNZ W8, 0x2D2425C
	0x02D24258 BL 0x1C16DFC
	0x02D2425C LDR X0, [X19 + 0x20]
	0x02D24260 LDRB W8, [X0 + 0x135]
	0x02D24264 TBNZ X8, 0x0, 0x2D2426C
	0x02D24268 BL 0x1C5C684
	0x02D2426C LDR X8, [X0 + 0xC0]
	0x02D24270 MOV X0, X22
	0x02D24274 MOV W1, W23
	0x02D24278 LDR X2, [X8 + 0x40]
	0x02D2427C BL 0x3A7AE58
	0x02D24280 ADD W23, W23, 0x1
	0x02D24284 CMP W25, W23
	0x02D24288 B.NE 0x2D2424C
	0x02D2428C ADD X2, X31, 0xC
	0x02D24290 ADD X3, X31, 0x8
	0x02D24294 MOV X0, X21
	0x02D24298 MOV W1, W20
	0x02D2429C MOV X4, X31
	0x02D242A0 BL 0x3BFE0D8
	0x02D242A4 TBNZ X0, 0x0, 0x2D24240
	0x02D242A8 LDP X20, X19, [X31 + 0x40]
	0x02D242AC LDP X22, X21, [X31 + 0x30]
	0x02D242B0 LDP X24, X23, [X31 + 0x20]
	0x02D242B4 LDP X30, X25, [X31 + 0x10]
	0x02D242B8 ADD X31, X31, 0x50
	0x02D242BC RET
	0x02D242C0 STP X30, X19, [X31 - 0x10]!
	0x02D242C4 MOV X19, X0
	0x02D242C8 LDR X0, [X0 + 0x20]
	0x02D242CC LDRB W8, [X0 + 0x135]
	0x02D242D0 TBNZ X8, 0x0, 0x2D242D8
	0x02D242D4 BL 0x1C5C684
	0x02D242D8 LDR X8, [X0 + 0xC0]
	0x02D242DC MOV W0, W31
	0x02D242E0 LDR X1, [X8 + 0x48]
	0x02D242E4 BL 0x2135814
	0x02D242E8 LDR X8, [X19 + 0x20]
	0x02D242EC MOV X19, X0
	0x02D242F0 LDRB W9, [X8 + 0x135]
	0x02D242F4 TBNZ X9, 0x0, 0x2D24304
	0x02D242F8 MOV X0, X8
	0x02D242FC BL 0x1C5C684
	0x02D24300 MOV X8, X0
	0x02D24304 LDR X8, [X8 + 0xC0]
	0x02D24308 LDR X0, [X8 + 0x8]
	0x02D2430C LDRB W8, [X0 + 0x135]
	0x02D24310 TBNZ X8, 0x0, 0x2D24318
	0x02D24314 BL 0x1C5C684
	0x02D24318 LDR X8, [X0 + 0xB8]
	0x02D2431C STR X19, [X8]
	0x02D24320 LDP X30, X19, [X31], #0x10
	0x02D24324 RET
	0x02D24328 STR X30, [X31 - 0x30]!
	0x02D2432C STP X22, X21, [X31 + 0x10]
	0x02D24330 STP X20, X19, [X31 + 0x20]
	0x02D24334 ADRP X20, 0x16B7000
	0x02D24338 LDRB W8, [X20 + 0x7E7]
	0x02D2433C MOV X19, X0
	0x02D24340 TBNZ X8, 0x0, 0x2D24364
	0x02D24344 ADRP X0, 0x13F7000
	0x02D24348 LDR X0, [X0 + 0xB90]
	0x02D2434C BL 0x1C16CF4
	0x02D24350 ADRP X0, 0x13CF000
	0x02D24354 LDR X0, [X0 + 0x6C0]
	0x02D24358 BL 0x1C16CF4
	0x02D2435C MOVZ W8, 0x1
	0x02D24360 STRB W8, [X20 + 0x7E7]
	0x02D24364 LDR X0, [X19 + 0x20]
	0x02D24368 LDRB W8, [X0 + 0x135]
	0x02D2436C TBNZ X8, 0x0, 0x2D24374
	0x02D24370 BL 0x1C5C684
	0x02D24374 LDR X8, [X0 + 0xC0]
	0x02D24378 LDR X0, [X8 + 0x8]
	0x02D2437C LDRB W8, [X0 + 0x135]
	0x02D24380 TBNZ X8, 0x0, 0x2D24388
	0x02D24384 BL 0x1C5C684
	0x02D24388 LDR W8, [X0 + 0xE0]
	0x02D2438C CBNZ W8, 0x2D24394
	0x02D24390 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x16B8000
	010 Move W8, [X22+2016]
	011 Move X20, X2
	012 Move W19, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x13F9000
	019 Move X0, [X0+296]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2016], W8
	023 Move X0, [X21+48]
	024 Compare X0, 0
	025 JumpIfEqual {117}
	026 Move X8, [X0]
	027 Move X9, [X8+376]
	028 Move X1, [X8+384]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Compare X0, 0
	031 JumpIfEqual {117}
	032 Move X1, X31
	033 Call VisualElement.get_style, X0
	034 Move X22, X0
	035 Move X0, X21
	036 Call 0x2D23490, X0
	037 Move X0, X31
	038 Call StyleLength.op_Implicit, V0
	039 Compare X22, 0
	040 JumpIfEqual {117}
	041 Move X11, 0x13F9000
	042 Move X9, [X22]
	043 Move X11, [X11+296]
	044 Move X8, X1
	045 Move X23, X0
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X11]
	048 And X24, X8, 0
	049 Compare X10, 0
	050 JumpIfEqual {57}
	051 Move X8, [X9+176]
	052 Add X8, X8, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X10, X10, 1
	056 Add X8, X8, 16
	057 Move W2, 24
	058 Move X0, X22
	059 Call 0x1C5D788
	060 Move W8, [X8]
	061 Add W8, W8, 24
	062 Add X8, X9, W8
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X3, [X0+8]
	066 Move X0, X22
	067 Move X1, X23
	068 Move X2, X24
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X21, 0
	071 JumpIfEqual {117}
	072 Move X8, [X21]
	073 Move X0, X21
	074 Move X9, [X8+376]
	075 Move X1, [X8+384]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move X8, [X21+48]
	078 Compare X8, 0
	079 JumpIfEqual {117}
	080 Move W8, [X8+32]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, [X21+16]
	083 Compare X8, 0
	084 JumpIfEqual {117}
	085 Move X9, [X20+32]
	086 Move X22, [X8+1064]
	087 Move X0, X21
	088 Move X9, [X9+192]
	089 Move X1, [X9+48]
	090 Call 0x2843CF4, X0
	091 Compare X0, 0
	092 JumpIfEqual {117}
	093 Move V8, [X0+20]
	094 Move X0, X21
	095 Call 0x2D23490, X0
	096 Compare X22, 0
	097 JumpIfEqual {117}
	098 Subtract S0, S8, S0
	099 Move X0, X22
	100 Move X1, X31
	101 Call Scroller.set_value, X0, V0
	102 Move X8, [X20+32]
	103 Move X0, X21
	104 Move W1, W19
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X8, [X8+192]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X30, [X31+8]
	113 Move X2, [X8+168]
	114 Move V8, [X31+64]
	115 Call 0x284577C, X0, X1
	116 Return 
	117 Call 0x1C17F20

