Type: UnityEngine.UIElements.BaseVerticalCollectionView

Method: System.Boolean HasCanStartDrag()

Disassembly:
	0x03CFF798 BL 0x3CE9F64
	0x03CFF79C LDR X8, [X21]
	0x03CFF7A0 MOV X0, X19
	0x03CFF7A4 MOV X2, X31

ISIL:
	001 Move X8, [X0+1032]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean RaiseCanStartDrag(UnityEngine.UIElements.ReusableCollectionItem item, System.Collections.Generic.IEnumerable`1<System.Int32> ids)

Disassembly:
	0x03CFF7A8 LDR X8, [X8 + 0xB8]
	0x03CFF7AC LDR X1, [X8 + 0x28]
	0x03CFF7B0 BL 0x3DF1C70
	0x03CFF7B4 MOVZ W1, 0x1
	0x03CFF7B8 MOV X0, X19
	0x03CFF7BC BL 0x3CFEAD4
	0x03CFF7C0 LDR X0, [X22]
	0x03CFF7C4 BL 0x1C16F10
	0x03CFF7C8 MOV X1, X31
	0x03CFF7CC MOV X20, X0
	0x03CFF7D0 BL 0x3D7F2FC
	0x03CFF7D4 STR X20, [X19 + 0x440]
	0x03CFF7D8 CBZ X20, 0x3CFFB24
	0x03CFF7DC LDR X8, [X21]
	0x03CFF7E0 MOV X0, X20
	0x03CFF7E4 MOV X2, X31
	0x03CFF7E8 LDR X8, [X8 + 0xB8]
	0x03CFF7EC LDR X1, [X8 + 0x68]
	0x03CFF7F0 BL 0x3DF1C70
	0x03CFF7F4 LDR X8, [X19 + 0x440]
	0x03CFF7F8 CBZ X8, 0x3CFFB24
	0x03CFF7FC ADRP X9, 0x3F6000
	0x03CFF800 LDR X9, [X9 + 0x5B0]
	0x03CFF804 ADRP X21, 0x464000
	0x03CFF808 LDR X20, [X8 + 0x428]
	0x03CFF80C LDR X0, [X9]
	0x03CFF810 LDR X21, [X21 + 0x50]
	0x03CFF814 BL 0x1C16F10
	0x03CFF818 LDR X2, [X21]
	0x03CFF81C MOV X1, X19
	0x03CFF820 MOV X3, X31
	0x03CFF824 MOV X21, X0
	0x03CFF828 BL 0x2A6DA40
	0x03CFF82C CBZ X20, 0x3CFFB24
	0x03CFF830 ADRP X22, 0x41E000
	0x03CFF834 ADRP X23, 0x464000
	0x03CFF838 LDR X22, [X22 + 0x660]
	0x03CFF83C LDR X23, [X23 + 0x48]
	0x03CFF840 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, [X0+1032]
	007 Compare X21, 0
	008 JumpIfEqual {20}
	009 Move X19, X2
	010 Move X20, X1
	011 Compare X1, 0
	012 JumpIfEqual {21}
	013 Move X8, [X20]
	014 Move X0, X20
	015 Move X9, [X8+376]
	016 Move X1, [X8+384]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move W2, [X20+36]
	019 Move X1, X0
	020 Move W0, 1
	021 Move X1, X31
	022 Move TEMP, 0
	023 Not TEMP
	024 Move W2, TEMP
	025 Add X0, X31, 8
	026 Move X3, X19
	027 Move X4, X31
	028 Move [X31+8], X31
	029 Move [X31+16], X31
	030 Move [X31+24], X31
	031 Call CanStartDragArgs..ctor, X0, X1, X2, X3
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 Move X8, [X31+24]
	034 Move X9, [X21+24]
	035 Move X0, [X21+64]
	036 Move [X31+2], V0
	037 Move [X31+48], X8
	038 Move X2, [X21+40]
	039 Add X1, X31, 32
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X20, [X31+80]
	042 Move X19, [X31+88]
	043 Move X30, [X31+64]
	044 Move X21, [X31+72]
	045 And W0, W0, 1
	046 Add X31, X31, 96
	047 Return X0

Method: UnityEngine.UIElements.StartDragArgs RaiseSetupDragAndDrop(UnityEngine.UIElements.ReusableCollectionItem item, System.Collections.Generic.IEnumerable`1<System.Int32> ids, UnityEngine.UIElements.StartDragArgs args)

Disassembly:
	0x03CFF844 MOV X1, X21
	0x03CFF848 MOV X2, X31
	0x03CFF84C BL 0x3D83D54
	0x03CFF850 LDR X0, [X22]
	0x03CFF854 LDR X20, [X19 + 0x440]
	0x03CFF858 BL 0x1C16F10
	0x03CFF85C LDR X2, [X23]
	0x03CFF860 MOV X1, X19
	0x03CFF864 MOV X3, X31
	0x03CFF868 MOV X21, X0
	0x03CFF86C BL 0x2D0E824
	0x03CFF870 CBZ X20, 0x3CFFB24
	0x03CFF874 ADRP X8, 0x41E000
	0x03CFF878 LDR X8, [X8 + 0x658]
	0x03CFF87C ADRP X22, 0x41E000
	0x03CFF880 ADRP X23, 0x464000
	0x03CFF884 ADRP X24, 0x41E000
	0x03CFF888 LDR X3, [X8]
	0x03CFF88C LDR X22, [X22 + 0x640]
	0x03CFF890 LDR X23, [X23 + 0x28]
	0x03CFF894 LDR X24, [X24 + 0x638]
	0x03CFF898 MOV X0, X20
	0x03CFF89C MOV X1, X21
	0x03CFF8A0 MOV W2, W31
	0x03CFF8A4 BL 0x21A1534
	0x03CFF8A8 LDR X0, [X22]
	0x03CFF8AC BL 0x1C16F10
	0x03CFF8B0 LDR X2, [X23]
	0x03CFF8B4 MOV X1, X19
	0x03CFF8B8 MOV X3, X31
	0x03CFF8BC MOV X20, X0
	0x03CFF8C0 BL 0x2D0E824
	0x03CFF8C4 LDR X3, [X24]
	0x03CFF8C8 MOV X0, X19
	0x03CFF8CC MOV X1, X20
	0x03CFF8D0 MOV W2, W31
	0x03CFF8D4 BL 0x21A1534
	0x03CFF8D8 LDR X0, [X19 + 0x440]
	0x03CFF8DC CBZ X0, 0x3CFFB24
	0x03CFF8E0 LDR X8, [X0]
	0x03CFF8E4 ADRP X20, 0x41E000
	0x03CFF8E8 ADRP X21, 0x464000
	0x03CFF8EC LDR X9, [X8 + 0x768]
	0x03CFF8F0 LDR X1, [X8 + 0x770]
	0x03CFF8F4 LDR X20, [X20 + 0xD70]
	0x03CFF8F8 LDR X21, [X21 + 0x20]
	0x03CFF8FC BLR X9
	0x03CFF900 LDR X8, [X20]
	0x03CFF904 MOV X20, X0
	0x03CFF908 MOV X0, X8
	0x03CFF90C BL 0x1C16F10
	0x03CFF910 LDR X2, [X21]

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+208], X30
	003 Move [X31+224], X22
	004 Move [X31+232], X21
	005 Move [X31+240], X20
	006 Move [X31+248], X19
	007 Move X22, [X0+1040]
	008 Move X21, X3
	009 Move X19, X8
	010 Compare X22, 0
	011 JumpIfEqual {57}
	012 Move X20, X2
	013 Compare X1, 0
	014 JumpIfEqual {22}
	015 Move X8, [X1]
	016 Move X0, X1
	017 Move X9, [X8+376]
	018 Move X8, [X8+384]
	019 Move X1, X8
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X1, X0
	022 Move V1, [X21]
	023 Move V0, [X21+16]
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Add X0, X31, 64
	026 Add X3, X31, 32
	027 Move X2, X20
	028 Move X4, X31
	029 Move [X31+80], V2
	030 Move [X31+88], V2
	031 Move [X31+32], V1
	032 Move [X31+40], V0
	033 Move [X31+4], V2
	034 Call SetupDragAndDropArgs..ctor, X0, X1, X2, X3
	035 Move V1, [X31+80]
	036 Move V0, [X31+96]
	037 Move V2, [X31+4]
	038 Add X8, X31, 0
	039 Add X1, X31, 160
	040 Move [X31+128], V1
	041 Move [X31+136], V0
	042 Move [X31+7], V2
	043 Move V0, [X31+112]
	044 Move V1, [X31+128]
	045 Move V2, [X31+9]
	046 Move X9, [X22+24]
	047 Move X0, [X22+64]
	048 Move [X31+160], V0
	049 Move [X31+168], V1
	050 Move [X31+12], V2
	051 Move X2, [X22+40]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move V0, [X31]
	054 Move V1, [X31+16]
	055 Move [X31+160], V0
	056 Move [X31+168], V1
	057 Move V1, [X21]
	058 Move V0, [X21+16]
	059 Move [X31+160], V1
	060 Move [X31+168], V0
	061 Move V1, [X31+160]
	062 Move V0, [X31+176]
	063 Move X22, [X31+224]
	064 Move X21, [X31+232]
	065 Move X30, [X31+208]
	066 Move [X19], V1
	067 Move [X19+8], V0
	068 Move X20, [X31+240]
	069 Move X19, [X31+248]
	070 Add X31, X31, 256
	071 Return X0

Method: UnityEngine.UIElements.DragVisualMode RaiseHandleDragAndDrop(UnityEngine.Vector2 pointerPosition, UnityEngine.UIElements.DragAndDropArgs dragAndDropArgs)

Disassembly:
	0x03CFF914 MOV X1, X19
	0x03CFF918 MOV X3, X31
	0x03CFF91C MOV X21, X0
	0x03CFF920 BL 0x2D0E824
	0x03CFF924 CBZ X20, 0x3CFFB24
	0x03CFF928 ADRP X8, 0x41E000
	0x03CFF92C LDR X8, [X8 + 0xD60]
	0x03CFF930 MOV X0, X20
	0x03CFF934 MOV X1, X21
	0x03CFF938 MOV W2, W31
	0x03CFF93C LDR X3, [X8]
	0x03CFF940 BL 0x21A1534
	0x03CFF944 LDR X0, [X19 + 0x440]
	0x03CFF948 CBZ X0, 0x3CFFB24
	0x03CFF94C LDR X8, [X0]
	0x03CFF950 ADRP X20, 0x41E000
	0x03CFF954 ADRP X21, 0x464000
	0x03CFF958 LDR X9, [X8 + 0x768]
	0x03CFF95C LDR X1, [X8 + 0x770]
	0x03CFF960 LDR X20, [X20 + 0xD78]
	0x03CFF964 LDR X21, [X21 + 0x30]
	0x03CFF968 BLR X9
	0x03CFF96C LDR X8, [X20]
	0x03CFF970 MOV X20, X0
	0x03CFF974 MOV X0, X8
	0x03CFF978 BL 0x1C16F10
	0x03CFF97C LDR X2, [X21]
	0x03CFF980 MOV X1, X19
	0x03CFF984 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+176], X30
	003 Move [X31+184], X19
	004 Move X19, [X0+1048]
	005 Compare X19, 0
	006 JumpIfEqual {33}
	007 Move V3, [X1]
	008 Move V2, [X1+16]
	009 NotImplemented "Instruction MOVI not yet implemented."
	010 Add X0, X31, 32
	011 Add X1, X31, 0
	012 Move X2, X31
	013 Move [X31+64], X31
	014 Move [X31], V3
	015 Move [X31+8], V2
	016 Move [X31+32], V4
	017 Move [X31+40], V4
	018 Call HandleDragAndDropArgs..ctor, X0, X1, X2
	019 Move X8, [X31+64]
	020 Move V1, [X31+32]
	021 Move V0, [X31+48]
	022 Add X1, X31, 128
	023 Move [X31+112], X8
	024 Move [X31+80], V1
	025 Move [X31+88], V0
	026 Move X9, [X19+24]
	027 Move X0, [X19+64]
	028 Move [X31+128], V1
	029 Move [X31+136], V0
	030 Move [X31+160], X8
	031 Move X2, [X19+40]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move W0, W31
	034 Move X30, [X31+176]
	035 Move X19, [X31+184]
	036 Add X31, X31, 192
	037 Return X0

Method: UnityEngine.UIElements.DragVisualMode RaiseDrop(UnityEngine.Vector2 pointerPosition, UnityEngine.UIElements.DragAndDropArgs dragAndDropArgs)

Disassembly:
	0x03CFF988 MOV X21, X0
	0x03CFF98C BL 0x2D0E824
	0x03CFF990 CBZ X20, 0x3CFFB24
	0x03CFF994 ADRP X8, 0x41E000
	0x03CFF998 LDR X8, [X8 + 0xD68]
	0x03CFF99C MOV X0, X20
	0x03CFF9A0 MOV X1, X21
	0x03CFF9A4 MOV W2, W31
	0x03CFF9A8 LDR X3, [X8]
	0x03CFF9AC BL 0x21A1534
	0x03CFF9B0 LDR X8, [X19 + 0x378]
	0x03CFF9B4 ADD X0, X31, 0x8
	0x03CFF9B8 MOV X2, X31
	0x03CFF9BC STR X8, [X31 + 0x8]
	0x03CFF9C0 LDR X1, [X19 + 0x440]
	0x03CFF9C4 BL 0x3DF891C
	0x03CFF9C8 LDR X0, [X19 + 0x440]
	0x03CFF9CC CBZ X0, 0x3CFFB24
	0x03CFF9D0 LDR X8, [X0]
	0x03CFF9D4 LDR X9, [X8 + 0x768]
	0x03CFF9D8 LDR X1, [X8 + 0x770]
	0x03CFF9DC BLR X9
	0x03CFF9E0 CBZ X0, 0x3CFFB24
	0x03CFF9E4 MOVZ W8, 0x1
	0x03CFF9E8 STRB W8, [X0 + 0x20]
	0x03CFF9EC LDR X0, [X19 + 0x440]
	0x03CFF9F0 CBZ X0, 0x3CFFB24
	0x03CFF9F4 LDR X8, [X0]
	0x03CFF9F8 LDR X9, [X8 + 0x768]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+176], X30
	003 Move [X31+184], X19
	004 Move X19, [X0+1056]
	005 Compare X19, 0
	006 JumpIfEqual {33}
	007 Move V3, [X1]
	008 Move V2, [X1+16]
	009 NotImplemented "Instruction MOVI not yet implemented."
	010 Add X0, X31, 32
	011 Add X1, X31, 0
	012 Move X2, X31
	013 Move [X31+64], X31
	014 Move [X31], V3
	015 Move [X31+8], V2
	016 Move [X31+32], V4
	017 Move [X31+40], V4
	018 Call HandleDragAndDropArgs..ctor, X0, X1, X2
	019 Move X8, [X31+64]
	020 Move V1, [X31+32]
	021 Move V0, [X31+48]
	022 Add X1, X31, 128
	023 Move [X31+112], X8
	024 Move [X31+80], V1
	025 Move [X31+88], V0
	026 Move X9, [X19+24]
	027 Move X0, [X19+64]
	028 Move [X31+128], V1
	029 Move [X31+136], V0
	030 Move [X31+160], X8
	031 Move X2, [X19+40]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move W0, W31
	034 Move X30, [X31+176]
	035 Move X19, [X31+184]
	036 Add X31, X31, 192
	037 Return X0

Method: System.Collections.IList get_itemsSource()

Disassembly:
	0x03CFF9FC LDR X1, [X8 + 0x770]
	0x03CFFA00 BLR X9
	0x03CFFA04 CBZ X0, 0x3CFFB24
	0x03CFFA08 MOV X1, X31
	0x03CFFA0C MOV X20, X0
	0x03CFFA10 BL 0x3DEC0D4

ISIL:
	001 Move X0, [X0+1096]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0]
	005 Move X2, [X8+392]
	006 Move X1, [X8+400]
	007 CallNoReturn X2
	008 Return X0

Method: System.Void set_itemsSource(System.Collections.IList value)

Disassembly:
	0x03CFFA14 AND W1, W0, 0xFFFFFFFD
	0x03CFFA18 MOV X0, X20
	0x03CFFA1C MOV X2, X31
	0x03CFFA20 BL 0x3DEC0FC
	0x03CFFA24 LDR X0, [X19 + 0x440]
	0x03CFFA28 CBZ X0, 0x3CFFB24
	0x03CFFA2C ADRP X8, 0x464000
	0x03CFFA30 LDR X8, [X8 + 0x60]
	0x03CFFA34 MOV X2, X31
	0x03CFFA38 LDR X1, [X8]
	0x03CFFA3C BL 0x3DEB98C
	0x03CFFA40 LDR X8, [X19 + 0x440]
	0x03CFFA44 CBZ X8, 0x3CFFB24
	0x03CFFA48 LDR X0, [X8 + 0x428]
	0x03CFFA4C CBZ X0, 0x3CFFB24
	0x03CFFA50 MOV X1, X31
	0x03CFFA54 MOV X2, X31
	0x03CFFA58 BL 0x3DEB98C
	0x03CFFA5C LDR X8, [X19 + 0x440]
	0x03CFFA60 CBZ X8, 0x3CFFB24
	0x03CFFA64 LDR X0, [X8 + 0x420]
	0x03CFFA68 CBZ X0, 0x3CFFB24
	0x03CFFA6C ADRP X20, 0x463000
	0x03CFFA70 ADRP X21, 0x464000
	0x03CFFA74 ADRP X22, 0x3F5000
	0x03CFFA78 ADRP X23, 0x464000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, [X0+1096]
	006 Move X19, X1
	007 Compare X0, 0
	008 JumpIfNotEqual {21}
	009 Move X8, [X20]
	010 Move X0, X20
	011 Move X9, [X8+1992]
	012 Move X1, [X8+2000]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move X8, [X20]
	015 Move X1, X0
	016 Move X0, X20
	017 Move X9, [X8+2008]
	018 Move X2, [X8+2016]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X0, [X20+1096]
	021 Compare X0, 0
	022 JumpIfEqual {31}
	023 Move X8, [X0]
	024 Move X1, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X3, [X8+408]
	028 Move X2, [X8+416]
	029 Move X30, [X31+32]
	030 CallNoReturn X3
	031 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement get_contentContainer()

Disassembly:
	0x03CFFAC4 BL 0x1C16F10
	0x03CFFAC8 LDR X2, [X21]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.UIElements.SelectionType get_selectionType()

Disassembly:
	0x03CFFACC MOV X1, X19
	0x03CFFAD0 MOV X3, X31

ISIL:
	001 Move W0, [X0+1064]
	002 Return X0

Method: System.Void set_selectionType(UnityEngine.UIElements.SelectionType value)

Disassembly:
	0x03CFFAD4 MOV X20, X0
	0x03CFFAD8 BL 0x2A75FD0
	0x03CFFADC STR X20, [X19 + 0x490]
	0x03CFFAE0 LDR X0, [X22]
	0x03CFFAE4 BL 0x1C16F10
	0x03CFFAE8 LDR X2, [X23]
	0x03CFFAEC MOV X1, X19
	0x03CFFAF0 MOV X3, X31
	0x03CFFAF4 MOV X20, X0
	0x03CFFAF8 BL 0x3314368
	0x03CFFAFC MOV X0, X19
	0x03CFFB00 MOV W1, W31
	0x03CFFB04 STR X20, [X19 + 0x498]
	0x03CFFB08 BL 0x3CFF44C
	0x03CFFB0C LDP X20, X19, [X31 + 0x40]
	0x03CFFB10 LDP X22, X21, [X31 + 0x30]
	0x03CFFB14 LDP X24, X23, [X31 + 0x20]
	0x03CFFB18 LDP X26, X25, [X31 + 0x10]
	0x03CFFB1C LDR X30, [X31], #0x50
	0x03CFFB20 RET
	0x03CFFB24 BL 0x1C16F20
	0x03CFFB28 STR X30, [X31 - 0x40]!
	0x03CFFB2C STP X24, X23, [X31 + 0x10]
	0x03CFFB30 STP X22, X21, [X31 + 0x20]
	0x03CFFB34 STP X20, X19, [X31 + 0x30]
	0x03CFFB38 ADRP X21, 0x6E8000
	0x03CFFB3C ADRP X22, 0x464000
	0x03CFFB40 LDRB W8, [X21 + 0x803]
	0x03CFFB44 LDR X22, [X22 + 0x68]
	0x03CFFB48 MOV W20, W1
	0x03CFFB4C MOV X19, X0
	0x03CFFB50 TBNZ X8, 0x0, 0x3CFFB8C
	0x03CFFB54 ADRP X0, 0x464000
	0x03CFFB58 LDR X0, [X0 + 0x70]
	0x03CFFB5C BL 0x1C16CF4
	0x03CFFB60 ADRP X0, 0x464000
	0x03CFFB64 LDR X0, [X0 + 0x78]
	0x03CFFB68 BL 0x1C16CF4
	0x03CFFB6C ADRP X0, 0x464000
	0x03CFFB70 LDR X0, [X0 + 0x80]
	0x03CFFB74 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6E9000
	006 Move W8, [X21+2039]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x44F000
	014 Move X0, [X0+2728]
	015 Call 0x1C17CF4
	016 Move X0, 0x3F6000
	017 Move X0, [X0+3624]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2039], W8
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19+1064], W20
	023 Compare W20, 0
	024 JumpIfNotEqual {47}
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Move X0, [X19+1136]
	031 Compare X0, 0
	032 JumpIfEqual {52}
	033 Move W8, [X0+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, 0x44F000
	036 Move X8, [X8+2728]
	037 Move X1, [X8]
	038 Call Enumerable.First, X0
	039 Move W1, W0
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call BaseVerticalCollectionView.SetSelection, X0, X1
	046 Return 
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Call 0x1C17F20

Method: System.Int32 get_selectedIndex()

Disassembly:
	0x03CFEC08 STR X30, [X31 - 0x20]!
	0x03CFEC0C STP X20, X19, [X31 + 0x10]
	0x03CFEC10 ADRP X20, 0x6E9000
	0x03CFEC14 LDRB W8, [X20 + 0x7F9]
	0x03CFEC18 MOV X19, X0
	0x03CFEC1C TBNZ X8, 0x0, 0x3CFEC34
	0x03CFEC20 ADRP X0, 0x41F000
	0x03CFEC24 LDR X0, [X0 + 0xF18]
	0x03CFEC28 BL 0x1C16CF4
	0x03CFEC2C MOVZ W8, 0x1
	0x03CFEC30 STRB W8, [X20 + 0x7F9]
	0x03CFEC34 LDR X0, [X19 + 0x450]
	0x03CFEC38 CBZ X0, 0x3CFEC50
	0x03CFEC3C LDR X8, [X0]
	0x03CFEC40 LDR X9, [X8 + 0x248]
	0x03CFEC44 LDR X1, [X8 + 0x250]
	0x03CFEC48 BLR X9
	0x03CFEC4C CBNZ X0, 0x3CFEC74
	0x03CFEC50 ADRP X19, 0x41F000
	0x03CFEC54 LDR X19, [X19 + 0xF18]
	0x03CFEC58 LDR X0, [X19]
	0x03CFEC5C LDR W8, [X0 + 0xE0]
	0x03CFEC60 CBNZ W8, 0x3CFEC6C
	0x03CFEC64 BL 0x1C16DFC
	0x03CFEC68 LDR X0, [X19]
	0x03CFEC6C LDR X8, [X0 + 0xB8]
	0x03CFEC70 LDR X0, [X8 + 0x10]
	0x03CFEC74 LDP X20, X19, [X31 + 0x10]
	0x03CFEC78 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6EA000
	005 Move W8, [X20+2040]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x450000
	012 Move X0, [X0+2728]
	013 Call 0x1C17CF4
	014 Move X0, 0x3F7000
	015 Move X0, [X0+3624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2040], W8
	019 Move X0, [X19+1136]
	020 Compare X0, 0
	021 JumpIfEqual {40}
	022 Move W8, [X0+24]
	023 Compare W8, 0
	024 JumpIfEqual {33}
	025 Move X8, 0x450000
	026 Move X8, [X8+2728]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X1, [X8]
	030 Move X30, [X31+32]
	031 Call Enumerable.First, X0
	032 Return X0
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move TEMP, 0
	036 Not TEMP
	037 Move W0, TEMP
	038 Move X30, [X31+32]
	039 Return X0
	040 Call 0x1C17F20

Method: System.Void set_selectedIndex(System.Int32 value)

Disassembly:
	0x03CFFBF4 MOV X1, X20

ISIL:
	001 Call BaseVerticalCollectionView.SetSelection, X0, X1
	002 Return 

Method: System.Collections.Generic.IEnumerable`1<System.Int32> get_selectedIndices()

Disassembly:
	0x03CFFBF8 BL 0x21C570C
	0x03CFFBFC CBZ X0, 0x3CFFC1C

ISIL:
	001 Move X0, [X0+1136]
	002 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.Int32> get_selectedIds()

Disassembly:
	0x03CFFC00 LDR X8, [X0]
	0x03CFFC04 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+1128]
	002 Return X0

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.ReusableCollectionItem> get_activeItems()

Disassembly:
	0x03CFFC08 LDP X22, X21, [X31 + 0x20]
	0x03CFFC0C LDP X24, X23, [X31 + 0x10]
	0x03CFFC10 LDP X2, X1, [X8 + 0x178]
	0x03CFFC14 LDR X30, [X31], #0x40
	0x03CFFC18 BR X2
	0x03CFFC1C LDP X20, X19, [X31 + 0x30]
	0x03CFFC20 LDP X22, X21, [X31 + 0x20]
	0x03CFFC24 LDP X24, X23, [X31 + 0x10]
	0x03CFFC28 LDR X30, [X31], #0x40
	0x03CFFC2C RET
	0x03CFFC30 BL 0x1C16F20
	0x03CFFC34 MOV X1, X31
	0x03CFFC38 B 0x33BDD8C
	0x03CFFC3C STR X30, [X31 - 0x10]!
	0x03CFFC40 LDR X0, [X0 + 0x448]
	0x03CFFC44 CBZ X0, 0x3CFFC5C
	0x03CFFC48 LDR X8, [X0]
	0x03CFFC4C LDP X9, X1, [X8 + 0x188]
	0x03CFFC50 BLR X9
	0x03CFFC54 CMP X0, 0x0
	0x03CFFC58 CSET W0, NE
	0x03CFFC5C LDR X30, [X31], #0x10
	0x03CFFC60 RET
	0x03CFFC64 STP X30, X19, [X31 - 0x10]!
	0x03CFFC68 LDR X8, [X0 + 0x3F0]
	0x03CFFC6C MOV X19, X0
	0x03CFFC70 CBZ X8, 0x3CFFC84
	0x03CFFC74 LDR X9, [X8 + 0x18]
	0x03CFFC78 LDR X0, [X8 + 0x40]
	0x03CFFC7C LDR X3, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6E9000
	005 Move W8, [X20+2041]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x41F000
	012 Move X0, [X0+3864]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2041], W8
	016 Move X0, [X19+1104]
	017 Compare X0, 0
	018 JumpIfEqual {25}
	019 Move X8, [X0]
	020 Move X9, [X8+584]
	021 Move X1, [X8+592]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfNotEqual {35}
	025 Move X19, 0x41F000
	026 Move X19, [X19+3864]
	027 Move X0, [X19]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X19]
	033 Move X8, [X0+184]
	034 Move X0, [X8+16]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0

Method: UnityEngine.UIElements.ScrollView get_scrollView()

Disassembly:
	0x03CFFC80 BLR X9
	0x03CFFC84 MOV X0, X19

ISIL:
	001 Move X0, [X0+1088]
	002 Return X0

Method: UnityEngine.UIElements.ListViewDragger get_dragger()

Disassembly:
	0x03CFFC88 LDP X30, X19, [X31], #0x10
	0x03CFFC8C B 0x3CFD108

ISIL:
	001 Move X0, [X0+1160]
	002 Return X0

Method: UnityEngine.UIElements.CollectionVirtualizationController get_virtualizationController()

Disassembly:
	0x03CFFC90 LDR X8, [X0 + 0x3F8]
	0x03CFFC94 CBZ X8, 0x3CFFCA8
	0x03CFFC98 LDR X2, [X8 + 0x18]
	0x03CFFC9C LDR X0, [X8 + 0x40]
	0x03CFFCA0 LDR X1, [X8 + 0x28]
	0x03CFFCA4 BR X2
	0x03CFFCA8 RET
	0x03CFFCAC SUB X31, X31, 0xD0
	0x03CFFCB0 STR X30, [X31 + 0x80]
	0x03CFFCB4 STP X26, X25, [X31 + 0x90]
	0x03CFFCB8 STP X24, X23, [X31 + 0xA0]
	0x03CFFCBC STP X22, X21, [X31 + 0xB0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+1104]
	005 Compare X0, 0
	006 JumpIfNotEqual {13}
	007 Move X8, [X19]
	008 Move X0, X19
	009 Move X9, [X8+1976]
	010 Move X1, [X8+1984]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X0, [X19+1104]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: UnityEngine.UIElements.CollectionViewController get_viewController()

Disassembly:
	0x03CFFCF0 LDR X0, [X0 + 0xB18]
	0x03CFFCF4 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+1096]
	002 Return X0

Method: System.Single ResolveItemHeight(System.Single height = -1)

Disassembly:
	0x03CFFCF8 ADRP X0, 0x41F000
	0x03CFFCFC LDR X0, [X0 + 0xB28]
	0x03CFFD00 BL 0x1C16CF4
	0x03CFFD04 ADRP X0, 0x41F000
	0x03CFFD08 LDR X0, [X0 + 0xB38]
	0x03CFFD0C BL 0x1C16CF4
	0x03CFFD10 ADRP X0, 0x3F5000
	0x03CFFD14 LDR X0, [X0 + 0xE10]
	0x03CFFD18 BL 0x1C16CF4
	0x03CFFD1C ADRP X0, 0x3FC000
	0x03CFFD20 LDR X0, [X0 + 0xF18]
	0x03CFFD24 BL 0x1C16CF4
	0x03CFFD28 ADRP X0, 0x3FC000
	0x03CFFD2C LDR X0, [X0 + 0xF20]
	0x03CFFD30 BL 0x1C16CF4
	0x03CFFD34 ADRP X0, 0x3FB000
	0x03CFFD38 LDR X0, [X0 + 0x858]
	0x03CFFD3C BL 0x1C16CF4
	0x03CFFD40 ADRP X0, 0x3F8000
	0x03CFFD44 LDR X0, [X0 + 0xB68]
	0x03CFFD48 BL 0x1C16CF4
	0x03CFFD4C ADRP X0, 0x41F000
	0x03CFFD50 LDR X0, [X0 + 0xB50]
	0x03CFFD54 BL 0x1C16CF4
	0x03CFFD58 ADRP X0, 0x3F5000
	0x03CFFD5C LDR X0, [X0 + 0xE28]
	0x03CFFD60 BL 0x1C16CF4
	0x03CFFD64 ADRP X0, 0x463000
	0x03CFFD68 LDR X0, [X0 + 0xAE8]
	0x03CFFD6C BL 0x1C16CF4
	0x03CFFD70 MOVZ W8, 0x1
	0x03CFFD74 STRB W8, [X20 + 0x806]
	0x03CFFD78 STP X31, X31, [X31 + 0x68]
	0x03CFFD7C STP X31, X31, [X31 + 0x58]
	0x03CFFD80 STR X31, [X31 + 0x88]
	0x03CFFD84 STP X31, X31, [X31 + 0x40]
	0x03CFFD88 STR X31, [X31 + 0x50]
	0x03CFFD8C STP X31, X31, [X31 + 0x20]
	0x03CFFD90 STR X31, [X31 + 0x30]
	0x03CFFD94 STP X19, X31, [X31 + 0x70]
	0x03CFFD98 STRB W31, [X31 + 0x68]
	0x03CFFD9C LDR X8, [X19 + 0x470]
	0x03CFFDA0 CBZ X8, 0x3D00150
	0x03CFFDA4 LDR W8, [X8 + 0x18]
	0x03CFFDA8 STR W8, [X31 + 0x78]
	0x03CFFDAC LDR X8, [X19 + 0x478]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X19
	006 Move X1, X31
	007 Move V9, V0
	008 Move X19, X0
	009 Call VisualElement.get_scaledPixelsPerPoint, X0
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Move V8, V0
	012 Move V9, [X19+1076]
	013 Multiply S9, S8, S9
	014 NotImplemented "Instruction FCVT not yet implemented."
	015 Add X0, X31, 8
	016 Call 0x3EB2C00
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move D1, -0.5
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Move V0, [X31+8]
	021 Move S1, -1
	022 Move D1, 0.5
	023 NotImplemented "Instruction FCMP not yet implemented."
	024 Move V0, [X31+8]
	025 Move S1, 1
	026 NotImplemented "Instruction FCVTZS not yet implemented."
	027 NotImplemented "Instruction INVALID not yet implemented."
	028 Add S1, S0, S1
	029 And X31, X8, 1
	030 NotImplemented "Instruction FCSEL not yet implemented."
	031 Move S0, -0.5
	032 Add S0, S9, S0
	033 NotImplemented "Instruction FRINTP not yet implemented."
	034 Move S0, 0.5
	035 Add S0, S9, S0
	036 NotImplemented "Instruction FRINTM not yet implemented."
	037 NotImplemented "Instruction FDIV not yet implemented."
	038 Move X30, [X31+32]
	039 Move X19, [X31+40]
	040 Move D9, [X31+16]
	041 Move D8, [X31+24]
	042 Add X31, X31, 48
	043 Return V0

Method: System.Void set_showBorder(System.Boolean value)

Disassembly:
	0x03CFFDB0 CBZ X8, 0x3D00150
	0x03CFFDB4 LDP W2, W9, [X8 + 0x18]
	0x03CFFDB8 ADD W9, W9, 0x1
	0x03CFFDBC CMP W2, 0x1
	0x03CFFDC0 STP W31, W9, [X8 + 0x18]
	0x03CFFDC4 B.LT 0x3CFFDD8
	0x03CFFDC8 LDR X0, [X8 + 0x10]
	0x03CFFDCC MOV W1, W31
	0x03CFFDD0 MOV X3, X31
	0x03CFFDD4 BL 0x339FA34
	0x03CFFDD8 LDR X0, [X19 + 0x448]
	0x03CFFDDC CBZ X0, 0x3CFFF30
	0x03CFFDE0 LDR X8, [X0]
	0x03CFFDE4 LDP X9, X1, [X8 + 0x188]
	0x03CFFDE8 BLR X9
	0x03CFFDEC CBZ X0, 0x3CFFF30
	0x03CFFDF0 LDR X8, [X19 + 0x468]
	0x03CFFDF4 CBZ X8, 0x3D00150
	0x03CFFDF8 LDR W8, [X8 + 0x18]
	0x03CFFDFC CMP W8, 0x1
	0x03CFFE00 B.LT 0x3CFFF44
	0x03CFFE04 ADRP X8, 0x41E000
	0x03CFFE08 LDR X8, [X8 + 0x8E0]
	0x03CFFE0C LDR X0, [X8]
	0x03CFFE10 LDR W8, [X0 + 0xE0]
	0x03CFFE14 CBNZ W8, 0x3CFFE1C
	0x03CFFE18 BL 0x1C16DFC
	0x03CFFE1C ADRP X8, 0x463000
	0x03CFFE20 LDR X8, [X8 + 0xAE0]
	0x03CFFE24 ADD X0, X31, 0x88
	0x03CFFE28 LDR X1, [X8]
	0x03CFFE2C BL 0x28F94E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6E9000
	007 Move X21, 0x41F000
	008 Move W8, [X22+2042]
	009 Move X21, [X21+3864]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x41F000
	017 Move X0, [X0+3864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2042], W8
	021 Move X0, [X21]
	022 Move X20, [X20+1088]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Compare X20, 0
	028 JumpIfEqual {42}
	029 Move X8, [X21]
	030 And W2, W19, 1
	031 Move X0, X20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X8, [X8+184]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X3, X31
	038 Move X1, [X8+48]
	039 Move X30, [X31+48]
	040 Call VisualElement.EnableInClassList, X0, X1, X2
	041 Return 
	042 Call 0x1C17F20

Method: System.Boolean get_reorderable()

Disassembly:
	0x03CFFE30 STP X0, X1, [X31 + 0x58]
	0x03CFFE34 LDR X0, [X19 + 0x468]
	0x03CFFE38 CBZ X0, 0x3D00154
	0x03CFFE3C ADRP X26, 0x41F000
	0x03CFFE40 LDR X26, [X26 + 0xB50]
	0x03CFFE44 LDR X1, [X26]
	0x03CFFE48 ADD X8, X31, 0x8
	0x03CFFE4C BL 0x2FDD2BC
	0x03CFFE50 LDUR V0, [X31 + 0x8]
	0x03CFFE54 LDR X8, [X31 + 0x18]
	0x03CFFE58 ADRP X23, 0x41F000
	0x03CFFE5C ADRP X21, 0x3F8000
	0x03CFFE60 LDR X23, [X23 + 0xB28]
	0x03CFFE64 LDR X21, [X21 + 0xB68]
	0x03CFFE68 STR V0, [X31 + 0x4]
	0x03CFFE6C STR X8, [X31 + 0x50]
	0x03CFFE70 ADRP X24, 0x3F5000
	0x03CFFE74 LDR X24, [X24 + 0xE10]
	0x03CFFE78 MOV W22, W31
	0x03CFFE7C LDR X1, [X23]
	0x03CFFE80 MOV W25, W22
	0x03CFFE84 ADD X0, X31, 0x40
	0x03CFFE88 BL 0x2BBDDA0
	0x03CFFE8C TBZ X0, 0x0, 0x3CFFF6C
	0x03CFFE90 LDR X0, [X19 + 0x448]
	0x03CFFE94 CBZ X0, 0x3D0011C
	0x03CFFE98 LDR X8, [X0]
	0x03CFFE9C LDR W1, [X31 + 0x50]
	0x03CFFEA0 LDP X9, X2, [X8 + 0x1E8]
	0x03CFFEA4 BLR X9
	0x03CFFEA8 MOV W20, W0
	0x03CFFEAC MOVZ W22, 0x1
	0x03CFFEB0 TBNZ X0, 0x1F, 0x3CFFE7C
	0x03CFFEB4 LDR X0, [X19 + 0x470]
	0x03CFFEB8 CBZ X0, 0x3D00140
	0x03CFFEBC LDR X2, [X21]
	0x03CFFEC0 MOV W1, W20
	0x03CFFEC4 BL 0x2FDCA84
	0x03CFFEC8 MOV W8, W0
	0x03CFFECC LDR X0, [X31 + 0x88]
	0x03CFFED0 ANDS W31, W8, 0x1
	0x03CFFED4 CSINC W22, W25, W31, NE
	0x03CFFED8 CBZ X0, 0x3D00138
	0x03CFFEDC LDR W10, [X0 + 0x1C]
	0x03CFFEE0 LDR X8, [X0 + 0x10]
	0x03CFFEE4 LDR X9, [X24]
	0x03CFFEE8 ADD W10, W10, 0x1
	0x03CFFEEC STR W10, [X0 + 0x1C]
	0x03CFFEF0 CBZ X8, 0x3D00148
	0x03CFFEF4 LDRSW X10, [X0 + 0x18]
	0x03CFFEF8 LDR W11, [X8 + 0x18]
	0x03CFFEFC CMP W10, W11
	0x03CFFF00 B.CS 0x3CFFF18
	0x03CFFF04 ADD W9, W10, 0x1
	0x03CFFF08 ADD X8, X8, X10, 0x2, LSL
	0x03CFFF0C STR W9, [X0 + 0x18]
	0x03CFFF10 STR W20, [X8 + 0x20]
	0x03CFFF14 B 0x3CFFE7C
	0x03CFFF18 LDR X8, [X9 + 0x20]
	0x03CFFF1C LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6E9000
	005 Move W8, [X20+2043]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x464000
	012 Move X0, [X0+4088]
	013 Call 0x1C17CF4
	014 Move X0, 0x3FF000
	015 Move X0, [X0+368]
	016 Call 0x1C17CF4
	017 Move X0, 0x3F9000
	018 Move X0, [X0+4056]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2043], W8
	022 Move X8, [X19+1160]
	023 Compare X8, 0
	024 JumpIfEqual {44}
	025 Move X19, [X8+112]
	026 Compare X19, 0
	027 JumpIfEqual {44}
	028 Move X10, 0x464000
	029 Move X8, [X19]
	030 Move X10, [X10+4088]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move X0, X19
	042 Move W2, W31
	043 Call 0x1C5D788
	044 Move W0, W31
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Add X8, X8, X9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, 0x3F9000
	053 Move X8, [X8+4056]
	054 And W1, W0, 1
	055 Add X0, X31, 12
	056 NotImplemented "Instruction STRH not yet implemented."
	057 Move X2, [X8]
	058 Call Nullable`1<Boolean>..ctor, X0, X1
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Return X0

Method: System.Void set_reorderable(System.Boolean value)

Disassembly:
	0x03CFFF20 LDR X2, [X8 + 0x70]
	0x03CFFF24 MOV W1, W20
	0x03CFFF28 BL 0x2FDC70C
	0x03CFFF2C B 0x3CFFE7C
	0x03CFFF30 LDR X8, [X19 + 0x470]
	0x03CFFF34 CBZ X8, 0x3D00150
	0x03CFFF38 LDR W9, [X8 + 0x1C]
	0x03CFFF3C ADD W9, W9, 0x1
	0x03CFFF40 STP W31, W9, [X8 + 0x18]
	0x03CFFF44 ADD X1, X31, 0x68
	0x03CFFF48 MOV X0, X19
	0x03CFFF4C BL 0x3D002F4
	0x03CFFF50 LDP X20, X19, [X31 + 0xC0]
	0x03CFFF54 LDP X22, X21, [X31 + 0xB0]
	0x03CFFF58 LDP X24, X23, [X31 + 0xA0]
	0x03CFFF5C LDP X26, X25, [X31 + 0x90]
	0x03CFFF60 LDR X30, [X31 + 0x80]
	0x03CFFF64 ADD X31, X31, 0xD0
	0x03CFFF68 RET
	0x03CFFF6C MOV X20, X31
	0x03CFFF70 STRB W25, [X31 + 0x68]
	0x03CFFF74 MOVZ W21, 0xB
	0x03CFFF78 ADRP X25, 0x41F000
	0x03CFFF7C LDR X25, [X25 + 0xB18]
	0x03CFFF80 LDR X1, [X25]
	0x03CFFF84 ADD X0, X31, 0x40
	0x03CFFF88 BL 0x2BBDD9C
	0x03CFFF8C CBNZ X20, 0x3D00158
	0x03CFFF90 CMP W21, 0xB
	0x03CFFF94 B.EQ 0x3CFFF9C
	0x03CFFF98 CBNZ W21, 0x3D00100
	0x03CFFF9C LDR X8, [X19 + 0x470]
	0x03CFFFA0 CBZ X8, 0x3D00160
	0x03CFFFA4 LDR W9, [X8 + 0x1C]
	0x03CFFFA8 ADD W9, W9, 0x1
	0x03CFFFAC STP W31, W9, [X8 + 0x18]
	0x03CFFFB0 LDR X0, [X31 + 0x88]
	0x03CFFFB4 CBZ X0, 0x3D00164
	0x03CFFFB8 LDR X1, [X26]
	0x03CFFFBC ADD X8, X31, 0x8
	0x03CFFFC0 BL 0x2FDD2BC
	0x03CFFFC4 LDUR V0, [X31 + 0x8]
	0x03CFFFC8 LDR X8, [X31 + 0x18]
	0x03CFFFCC ADRP X22, 0x3FC000
	0x03CFFFD0 STR V0, [X31 + 0x2]
	0x03CFFFD4 STR X8, [X31 + 0x30]
	0x03CFFFD8 LDR X22, [X22 + 0xF18]
	0x03CFFFDC LDR X1, [X23]
	0x03CFFFE0 ADD X0, X31, 0x20
	0x03CFFFE4 BL 0x2BBDDA0
	0x03CFFFE8 TBZ X0, 0x0, 0x3D000C4
	0x03CFFFEC LDR X0, [X19 + 0x470]
	0x03CFFFF0 CBZ X0, 0x3D00130
	0x03CFFFF4 LDR W10, [X0 + 0x1C]
	0x03CFFFF8 LDR W20, [X31 + 0x30]
	0x03CFFFFC LDR X8, [X0 + 0x10]
	0x03D00000 LDR X9, [X24]
	0x03D00004 ADD W10, W10, 0x1
	0x03D00008 STR W10, [X0 + 0x1C]
	0x03D0000C CBZ X8, 0x3D00134
	0x03D00010 LDRSW X10, [X0 + 0x18]
	0x03D00014 LDR W11, [X8 + 0x18]
	0x03D00018 CMP W10, W11
	0x03D0001C B.CS 0x3D00034
	0x03D00020 ADD W9, W10, 0x1
	0x03D00024 ADD X8, X8, X10, 0x2, LSL
	0x03D00028 STR W9, [X0 + 0x18]
	0x03D0002C STR W20, [X8 + 0x20]
	0x03D00030 B 0x3D00048
	0x03D00034 LDR X8, [X9 + 0x20]
	0x03D00038 LDR X8, [X8 + 0xC0]
	0x03D0003C LDR X2, [X8 + 0x70]
	0x03D00040 MOV W1, W20
	0x03D00044 BL 0x2FDC70C
	0x03D00048 LDR X0, [X19 + 0x448]
	0x03D0004C CBZ X0, 0x3D00128
	0x03D00050 LDR X8, [X0]
	0x03D00054 LDR X21, [X19 + 0x478]
	0x03D00058 LDR X9, [X8 + 0x208]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6E9000
	007 Move W8, [X21+2044]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x464000
	015 Move X0, [X0+4088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2044], W8
	019 Move X8, [X19+1160]
	020 Compare X8, 0
	021 JumpIfEqual {86}
	022 Move X21, [X8+112]
	023 Compare X21, 0
	024 JumpIfEqual {65}
	025 Move X22, 0x464000
	026 Move X8, [X21]
	027 Move X22, [X22+4088]
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Move X1, [X22]
	030 Compare X9, 0
	031 JumpIfEqual {38}
	032 Move X10, [X8+176]
	033 Add X10, X10, 8
	034 NotImplemented "Instruction LDUR not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X9, X9, 1
	037 Add X10, X10, 16
	038 Move X0, X21
	039 Move W2, W31
	040 Call 0x1C5D788
	041 NotImplemented "Instruction LDRSW not yet implemented."
	042 Add X8, X8, X9
	043 Add X0, X8, 312
	044 Move X8, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X21
	047 NotImplemented "Instruction BLR not yet implemented."
	048 And W8, W0, 1
	049 And W9, W20, 1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X21]
	052 Move X1, [X22]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move W2, 1
	063 Move X0, X21
	064 Call 0x1C5D788
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Move W9, [X10]
	072 Add W9, W9, 1
	073 Add X8, X8, W9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X2, [X0+8]
	077 And W1, W20, 1
	078 Move X0, X21
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X0, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Call 0x1C17F20

Method: System.Void set_horizontalScrollingEnabled(System.Boolean value)

Disassembly:
	0x03D001CC MOV X22, X0
	0x03D001D0 STRB W25, [X31 + 0x68]
	0x03D001D4 B 0x3D001E0
	0x03D001D8 MOV X21, X1
	0x03D001DC MOV X22, X0
	0x03D001E0 CMP W21, 0x1
	0x03D001E4 B.NE 0x3D00200
	0x03D001E8 MOV X0, X22
	0x03D001EC BL 0x3EB1AD0
	0x03D001F0 LDR X20, [X0]
	0x03D001F4 BL 0x3EB1AE0
	0x03D001F8 MOV W21, W31
	0x03D001FC B 0x3CFFF78
	0x03D00200 MOV X20, X31
	0x03D00204 ADRP X8, 0x41E000
	0x03D00208 LDR X8, [X8 + 0xB18]
	0x03D0020C LDR X1, [X8]
	0x03D00210 ADD X0, X31, 0x40
	0x03D00214 BL 0x2BBDD9C
	0x03D00218 CBZ X20, 0x3D00270
	0x03D0021C MOV X0, X20
	0x03D00220 BL 0x1C16F18
	0x03D00224 MOV X21, X1
	0x03D00228 MOV X22, X0
	0x03D0022C B 0x3D00204
	0x03D00230 B 0x3D00234
	0x03D00234 MOV X21, X1
	0x03D00238 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W9, [X0+1068]
	006 And W8, W1, 1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move X30, [X31+32]
	011 Move X21, [X31+40]
	012 Return 
	013 Move X20, X0
	014 Move X0, [X0+1088]
	015 Move [X20+1068], W8
	016 Compare X0, 0
	017 JumpIfEqual {36}
	018 And W31, W1, 1
	019 Move W21, 2
	020 Move W19, W1
	021 NotImplemented "Instruction CSEL not yet implemented."
	022 Move X2, X31
	023 Call ScrollView.set_horizontalScrollerVisibility, X0, X1
	024 Move X0, [X20+1088]
	025 Compare X0, 0
	026 JumpIfEqual {36}
	027 And W31, W19, 1
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move X2, X31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call ScrollView.set_mode, X0, X1
	035 Return 
	036 Call 0x1C17F20

Method: UnityEngine.UIElements.AlternatingRowBackground get_showAlternatingRowBackgrounds()

Disassembly:
	0x03D0023C CMP W21, 0x1
	0x03D00240 B.NE 0x3D0025C

ISIL:
	001 Move W0, [X0+1072]
	002 Return X0

Method: System.Void set_showAlternatingRowBackgrounds(UnityEngine.UIElements.AlternatingRowBackground value)

Disassembly:
	0x03D00244 MOV X0, X22
	0x03D00248 BL 0x3EB1AD0
	0x03D0024C LDR X20, [X0]
	0x03D00250 BL 0x3EB1AE0
	0x03D00254 MOV W21, W31
	0x03D00258 B 0x3D000CC

ISIL:
	001 Move W8, [X0+1072]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Return 
	004 Move [X0+1072], W1
	005 Call BaseVerticalCollectionView.RefreshItems, X0
	006 Return 

Method: UnityEngine.UIElements.CollectionVirtualizationMethod get_virtualizationMethod()

Disassembly:
	0x03D0025C MOV X20, X31
	0x03D00260 LDR X1, [X25]

ISIL:
	001 Move W0, [X0+1084]
	002 Return X0

Method: System.Void set_virtualizationMethod(UnityEngine.UIElements.CollectionVirtualizationMethod value)

Disassembly:
	0x03D00264 ADD X0, X31, 0x20
	0x03D00268 BL 0x2BBDD9C
	0x03D0026C CBNZ X20, 0x3D002B0
	0x03D00270 CMP W21, 0x1
	0x03D00274 B.NE 0x3D002A8
	0x03D00278 MOV X0, X22
	0x03D0027C BL 0x3EB1AD0
	0x03D00280 LDR X21, [X0]
	0x03D00284 BL 0x3EB1AE0
	0x03D00288 ADRP X8, 0x462000
	0x03D0028C LDR X8, [X8 + 0xAE8]
	0x03D00290 ADD X0, X31, 0x58
	0x03D00294 LDR X1, [X8]
	0x03D00298 BL 0x24A6D20
	0x03D0029C CBZ X21, 0x3CFFF44

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+1084]
	004 Move [X0+1084], W1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move X8, [X0]
	010 Move X19, X0
	011 Move X9, [X8+1976]
	012 Move X1, [X8+1984]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move X0, X19
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Call BaseVerticalCollectionView.Rebuild, X0
	018 Return 

Method: System.Single get_fixedItemHeight()

Disassembly:
	0x03D002A0 MOV X0, X21
	0x03D002A4 BL 0x1C16F18

ISIL:
	001 Move V0, [X0+1076]
	002 Return V0

Method: System.Void set_fixedItemHeight(System.Single value)

Disassembly:
	0x03D002A8 MOV X21, X31
	0x03D002AC B 0x3D002C8
	0x03D002B0 MOV X0, X20
	0x03D002B4 BL 0x1C16F18
	0x03D002B8 MOV X21, X1
	0x03D002BC MOV X22, X0
	0x03D002C0 B 0x3D00260
	0x03D002C4 MOV X22, X0
	0x03D002C8 ADRP X8, 0x462000
	0x03D002CC LDR X8, [X8 + 0xAE8]
	0x03D002D0 LDR X1, [X8]
	0x03D002D4 ADD X0, X31, 0x58
	0x03D002D8 BL 0x24A6D20
	0x03D002DC CBNZ X21, 0x3D002E8
	0x03D002E0 MOV X0, X22
	0x03D002E4 BL 0x1D2C690
	0x03D002E8 MOV X0, X21
	0x03D002EC BL 0x1C16F18
	0x03D002F0 BL 0x1990590
	0x03D002F4 STP X30, X21, [X31 - 0x20]!
	0x03D002F8 STP X20, X19, [X31 + 0x10]
	0x03D002FC ADRP X21, 0x6E7000
	0x03D00300 LDRB W8, [X21 + 0x820]
	0x03D00304 MOV X20, X1
	0x03D00308 MOV X19, X0
	0x03D0030C TBNZ X8, 0x0, 0x3D00324
	0x03D00310 ADRP X0, 0x3F4000
	0x03D00314 LDR X0, [X0 + 0xE28]
	0x03D00318 BL 0x1C16CF4
	0x03D0031C MOVZ W8, 0x1
	0x03D00320 STRB W8, [X21 + 0x820]
	0x03D00324 LDRB W8, [X20]
	0x03D00328 CBNZ W8, 0x3D00350
	0x03D0032C LDR X8, [X19 + 0x470]
	0x03D00330 CBZ X8, 0x3D00360
	0x03D00334 LDR W8, [X8 + 0x18]
	0x03D00338 LDR W9, [X20 + 0x10]
	0x03D0033C CMP W8, W9
	0x03D00340 B.NE 0x3D00350
	0x03D00344 LDP X20, X19, [X31 + 0x10]
	0x03D00348 LDP X30, X21, [X31], #0x20
	0x03D0034C RET
	0x03D00350 MOV X0, X19
	0x03D00354 LDP X20, X19, [X31 + 0x10]
	0x03D00358 LDP X30, X21, [X31], #0x20
	0x03D0035C B 0x3D034FC
	0x03D00360 BL 0x1C16F20
	0x03D00364 STP X30, X19, [X31 - 0x10]!
	0x03D00368 LDR X8, [X0]
	0x03D0036C MOV X19, X0
	0x03D00370 LDR X9, [X8 + 0x808]
	0x03D00374 LDR X1, [X8 + 0x810]
	0x03D00378 BLR X9
	0x03D0037C TBZ X0, 0x0, 0x3D003DC
	0x03D00380 LDR X0, [X19 + 0x440]
	0x03D00384 CBZ X0, 0x3D003E4
	0x03D00388 MOV X1, X31
	0x03D0038C BL 0x3DEC528
	0x03D00390 LDR X0, [X19 + 0x440]
	0x03D00394 STR S3, [X19 + 0x480]
	0x03D00398 CBZ X0, 0x3D003E4
	0x03D0039C MOV X1, X31

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6E8000
	007 Move W8, [X20+2045]
	008 Move V8, V0
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3F4000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2045], W8
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 Move X8, 0x3F4000
	021 Move X8, [X8+1448]
	022 Move W9, 1
	023 Move [X19+1080], W9
	024 Move V9, [X19+1076]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move W8, 1
	031 NotImplemented "Instruction FABD not yet implemented."
	032 Move S1, W8
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 Move [X19+1076], S8
	035 Move X0, X19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X30, [X31+16]
	039 Move D9, [X31+48]
	040 Move D8, [X31+56]
	041 Call BaseVerticalCollectionView.RefreshItems, X0
	042 Return 
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X30, [X31+16]
	046 Move D9, [X31+48]
	047 Move D8, [X31+56]
	048 Return 
	049 Move X0, 0x3FC000
	050 Move X0, [X0+1888]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x464000
	055 Move X0, [X0]
	056 Call 0x1C17D08
	057 Move X20, X0
	058 Move X0, 0x464000
	059 Move X0, [X0+8]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X19
	063 Move X1, X20
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0x464000
	067 Move X0, [X0+16]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC

Method: System.Single get_lastHeight()

Disassembly:
	0x03D003A0 BL 0x3DEC528
	0x03D003A4 FMOV W8, S3

ISIL:
	001 Move V0, [X0+1152]
	002 Return V0

Method: System.Void CreateVirtualizationController()

Disassembly:
	0x03D003A8 AND W8, W8, 0x7FFFFFFF
	0x03D003AC MOVZ W9, 0x7F800000
	0x03D003B0 CMP W8, W9
	0x03D003B4 B.HI 0x3D003DC
	0x03D003B8 LDR X0, [X19 + 0x440]
	0x03D003BC CBZ X0, 0x3D003E4
	0x03D003C0 MOV X1, X31
	0x03D003C4 BL 0x3DEC528
	0x03D003C8 MOV V0.16B, V2.16B
	0x03D003CC MOV V1.16B, V3.16B
	0x03D003D0 MOV X0, X19
	0x03D003D4 LDP X30, X19, [X31], #0x10
	0x03D003D8 B 0x3D003E8
	0x03D003DC LDP X30, X19, [X31], #0x10
	0x03D003E0 RET
	0x03D003E4 BL 0x1C16F20
	0x03D003E8 STP D9, D8, [X31 - 0x20]!
	0x03D003EC STP X30, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6E8000
	006 Move X21, 0x464000
	007 Move W8, [X20+2046]
	008 Move X21, [X21+24]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x464000
	015 Move X0, [X0+24]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2046], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x21A0CE8, X0
	026 Return 

Method: UnityEngine.UIElements.CollectionVirtualizationController GetOrCreateVirtualizationController()

Disassembly:
	0x03CFFCC0 STP X20, X19, [X31 + 0xC0]
	0x03CFFCC4 ADRP X20, 0x6E8000
	0x03CFFCC8 LDRB W8, [X20 + 0x806]
	0x03CFFCCC MOV X19, X0
	0x03CFFCD0 TBNZ X8, 0x0, 0x3CFFD78
	0x03CFFCD4 ADRP X0, 0x463000
	0x03CFFCD8 LDR X0, [X0 + 0xAE0]
	0x03CFFCDC BL 0x1C16CF4
	0x03CFFCE0 ADRP X0, 0x41E000
	0x03CFFCE4 LDR X0, [X0 + 0x8E0]
	0x03CFFCE8 BL 0x1C16CF4
	0x03CFFCEC ADRP X0, 0x41F000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+1104]
	005 Compare X0, 0
	006 JumpIfNotEqual {13}
	007 Move X8, [X19]
	008 Move X0, X19
	009 Move X9, [X8+1976]
	010 Move X1, [X8+1984]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X0, [X19+1104]
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: System.Void CreateVirtualizationController()

Disassembly:
	0x021A0CE8 LDR X8, [X19 + 0x38]
	0x021A0CEC LDR X0, [X8 + 0x8]
	0x021A0CF0 LDRB W8, [X0 + 0x135]
	0x021A0CF4 TBNZ X8, 0x0, 0x21A0CFC
	0x021A0CF8 BL 0x1C5C684
	0x021A0CFC LDR X8, [X0 + 0xB8]
	0x021A0D00 LDR X0, [X8]
	0x021A0D04 LDP X30, X19, [X31], #0x10
	0x021A0D08 RET
	0x021A0D0C STP X30, X19, [X31 - 0x10]!
	0x021A0D10 LDR X8, [X0 + 0x38]
	0x021A0D14 MOV X19, X0
	0x021A0D18 CBNZ X8, 0x21A0D28
	0x021A0D1C MOV X0, X19
	0x021A0D20 BL 0x1C5C6E0
	0x021A0D24 LDR X8, [X19 + 0x38]
	0x021A0D28 LDR X0, [X8 + 0x8]
	0x021A0D2C LDRB W8, [X0 + 0x135]
	0x021A0D30 TBNZ X8, 0x0, 0x21A0D38
	0x021A0D34 BL 0x1C5C684
	0x021A0D38 LDR W8, [X0 + 0xE0]
	0x021A0D3C CBNZ W8, 0x21A0D44
	0x021A0D40 BL 0x1C16DFC
	0x021A0D44 LDR X8, [X19 + 0x38]
	0x021A0D48 LDR X0, [X8 + 0x8]
	0x021A0D4C LDRB W8, [X0 + 0x135]
	0x021A0D50 TBNZ X8, 0x0, 0x21A0D58
	0x021A0D54 BL 0x1C5C684
	0x021A0D58 LDR X8, [X0 + 0xB8]
	0x021A0D5C LDR X0, [X8]
	0x021A0D60 LDP X30, X19, [X31], #0x10
	0x021A0D64 RET
	0x021A0D68 STP X30, X19, [X31 - 0x10]!
	0x021A0D6C LDR X8, [X0 + 0x38]
	0x021A0D70 MOV X19, X0
	0x021A0D74 CBNZ X8, 0x21A0D84
	0x021A0D78 MOV X0, X19
	0x021A0D7C BL 0x1C5C6E0
	0x021A0D80 LDR X8, [X19 + 0x38]
	0x021A0D84 LDR X0, [X8 + 0x8]
	0x021A0D88 LDRB W8, [X0 + 0x135]
	0x021A0D8C TBNZ X8, 0x0, 0x21A0D94
	0x021A0D90 BL 0x1C5C684
	0x021A0D94 LDR W8, [X0 + 0xE0]
	0x021A0D98 CBNZ W8, 0x21A0DA0
	0x021A0D9C BL 0x1C16DFC
	0x021A0DA0 LDR X8, [X19 + 0x38]
	0x021A0DA4 LDR X0, [X8 + 0x8]
	0x021A0DA8 LDRB W8, [X0 + 0x135]
	0x021A0DAC TBNZ X8, 0x0, 0x21A0DB4
	0x021A0DB0 BL 0x1C5C684
	0x021A0DB4 LDR X8, [X0 + 0xB8]
	0x021A0DB8 LDR X0, [X8]
	0x021A0DBC LDP X30, X19, [X31], #0x10
	0x021A0DC0 RET
	0x021A0DC4 STP X30, X19, [X31 - 0x10]!
	0x021A0DC8 LDR X8, [X0 + 0x38]
	0x021A0DCC MOV X19, X0
	0x021A0DD0 CBNZ X8, 0x21A0DE0
	0x021A0DD4 MOV X0, X19
	0x021A0DD8 BL 0x1C5C6E0
	0x021A0DDC LDR X8, [X19 + 0x38]
	0x021A0DE0 LDR X0, [X8 + 0x8]
	0x021A0DE4 LDRB W8, [X0 + 0x135]
	0x021A0DE8 TBNZ X8, 0x0, 0x21A0DF0
	0x021A0DEC BL 0x1C5C684
	0x021A0DF0 LDR W8, [X0 + 0xE0]
	0x021A0DF4 CBNZ W8, 0x21A0DFC
	0x021A0DF8 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X1+56]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X8, 0
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call 0x1C5D6E0
	013 Move W8, [X20+1084]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Compare W8, 0
	016 JumpIfNotEqual {52}
	017 Move X8, [X19+56]
	018 Move X0, [X8]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Call 0x1C17F10
	026 Move X8, [X19+56]
	027 Move X1, X20
	028 Move X19, X0
	029 Move X2, [X8+8]
	030 Call 0x2D234B8, X0, X1
	031 Move X8, [X19+56]
	032 Move X0, [X8+16]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X19+56]
	041 Move X1, X20
	042 Move X19, X0
	043 Move X2, [X8+24]
	044 Call 0x2B44528, X0, X1
	045 Move [X20+1104], X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return 
	052 Move [X31+12], W8
	053 Move X0, 0x1F7C000
	054 Move X0, [X0+2096]
	055 Call 0x1C17D08
	056 Add X1, X31, 12
	057 Call 0x1C17E04
	058 Move X20, X0
	059 Move X0, 0x1F5C000
	060 Move X0, [X0+1888]
	061 Call 0x1C17D08
	062 Call 0x1C17F10
	063 Move X21, X0
	064 Move X0, 0x1F7C000
	065 Move X0, [X0+2104]
	066 Call 0x1C17D08
	067 Move X22, X0
	068 Move X0, 0x1F7C000
	069 Move X0, [X0+2112]
	070 Call 0x1C17D08
	071 Move X3, X0
	072 Move X0, X21
	073 Move X1, X22
	074 Move X2, X20
	075 Move X4, X31
	076 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	077 Move X0, X21
	078 Move X1, X19
	079 Call 0x1C17DEC

Method: UnityEngine.UIElements.CollectionViewController GetOrCreateViewController()

Disassembly:
	0x03CFFA7C LDR X20, [X20 + 0xBF0]
	0x03CFFA80 LDR X21, [X21 + 0x38]
	0x03CFFA84 LDR X22, [X22 + 0xE70]
	0x03CFFA88 LDR X23, [X23 + 0x40]
	0x03CFFA8C MOV X1, X31
	0x03CFFA90 MOV X2, X31
	0x03CFFA94 BL 0x3DEB98C
	0x03CFFA98 MOVZ W8, 0x1
	0x03CFFA9C MOVZ W1, 0x1
	0x03CFFAA0 MOV X0, X19
	0x03CFFAA4 MOV X2, X31
	0x03CFFAA8 STRB W8, [X19 + 0x20]
	0x03CFFAAC BL 0x3DEB85C
	0x03CFFAB0 MOVZ W1, 0x1
	0x03CFFAB4 MOV X0, X19
	0x03CFFAB8 MOV X2, X31
	0x03CFFABC BL 0x3DAED80
	0x03CFFAC0 LDR X0, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+1096]
	005 Compare X0, 0
	006 JumpIfNotEqual {19}
	007 Move X8, [X19]
	008 Move X0, X19
	009 Move X9, [X8+1992]
	010 Move X1, [X8+2000]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X8, [X19]
	013 Move X1, X0
	014 Move X0, X19
	015 Move X9, [X8+2008]
	016 Move X2, [X8+2016]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X0, [X19+1096]
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return X0

Method: UnityEngine.UIElements.CollectionViewController CreateViewController()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void SetViewController(UnityEngine.UIElements.CollectionViewController controller)

Disassembly:
	0x03CFE060 LDP X8, X1, [X0]
	0x03CFE064 MOV X0, X21
	0x03CFE068 BLR X8
	0x03CFE06C MOV X21, X0
	0x03CFE070 CBZ X0, 0x3CFE1F8
	0x03CFE074 ADRP X22, 0x3F5000
	0x03CFE078 ADRP X23, 0x41D000
	0x03CFE07C LDR X22, [X22 + 0xE18]
	0x03CFE080 LDR X23, [X23 + 0x7C0]
	0x03CFE084 LDR X8, [X21]
	0x03CFE088 LDR X1, [X22]
	0x03CFE08C LDRH W9, [X8 + 0x12E]
	0x03CFE090 CBZ X9, 0x3CFE0B4
	0x03CFE094 LDR X10, [X8 + 0xB0]
	0x03CFE098 ADD X10, X10, 0x8
	0x03CFE09C LDUR X11, [X10 - 0x8]
	0x03CFE0A0 CMP X11, X1
	0x03CFE0A4 B.EQ 0x3CFE0C4
	0x03CFE0A8 SUBS X9, X9, 0x1
	0x03CFE0AC ADD X10, X10, 0x10
	0x03CFE0B0 B.NE 0x3CFE09C
	0x03CFE0B4 MOV X0, X21
	0x03CFE0B8 MOV W2, W31
	0x03CFE0BC BL 0x1C5C788
	0x03CFE0C0 B 0x3CFE0D0
	0x03CFE0C4 LDRSW X9, [X10]
	0x03CFE0C8 ADD X8, X8, X9, 0x4, LSL
	0x03CFE0CC ADD X0, X8, 0x138
	0x03CFE0D0 LDP X8, X1, [X0]
	0x03CFE0D4 MOV X0, X21
	0x03CFE0D8 BLR X8
	0x03CFE0DC TBZ X0, 0x0, 0x3CFE148
	0x03CFE0E0 LDR X8, [X21]
	0x03CFE0E4 LDR X1, [X23]
	0x03CFE0E8 LDRH W9, [X8 + 0x12E]
	0x03CFE0EC CBZ X9, 0x3CFE110
	0x03CFE0F0 LDR X10, [X8 + 0xB0]
	0x03CFE0F4 ADD X10, X10, 0x8
	0x03CFE0F8 LDUR X11, [X10 - 0x8]
	0x03CFE0FC CMP X11, X1
	0x03CFE100 B.EQ 0x3CFE120

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+1096]
	006 Move X20, X1
	007 Compare X0, 0
	008 JumpIfEqual {25}
	009 Move X1, [X19+1168]
	010 Move X2, X31
	011 Call CollectionViewController.remove_itemIndexChanged, X0, X1
	012 Move X0, [X19+1096]
	013 Compare X0, 0
	014 JumpIfEqual {52}
	015 Move X1, [X19+1176]
	016 Move X2, X31
	017 Call CollectionViewController.remove_itemsSourceChanged, X0, X1
	018 Move X0, [X19+1096]
	019 Compare X0, 0
	020 JumpIfEqual {52}
	021 Move X8, [X0]
	022 Move X9, [X8+440]
	023 Move X1, [X8+448]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move [X19+1096], X20
	026 Compare X20, 0
	027 JumpIfEqual {48}
	028 Move X0, X20
	029 Move X1, X19
	030 Move X2, X31
	031 Call CollectionViewController.SetView, X0, X1
	032 Move X0, [X19+1096]
	033 Compare X0, 0
	034 JumpIfEqual {52}
	035 Move X1, [X19+1168]
	036 Move X2, X31
	037 Call CollectionViewController.add_itemIndexChanged, X0, X1
	038 Move X0, [X19+1096]
	039 Compare X0, 0
	040 JumpIfEqual {52}
	041 Move X1, [X19+1176]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X2, X31
	045 Move X30, [X31+32]
	046 Call CollectionViewController.add_itemsSourceChanged, X0, X1
	047 Return 
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return 
	052 Call 0x1C17F20

Method: UnityEngine.UIElements.ListViewDragger CreateDragger()

Disassembly:
	0x03D003F0 MOV X19, X0
	0x03D003F4 LDR X0, [X0 + 0x450]
	0x03D003F8 MOV V8.16B, V1.16B
	0x03D003FC MOV V9.16B, V0.16B
	0x03D00400 CBNZ X0, 0x3D0041C
	0x03D00404 LDR X8, [X19]
	0x03D00408 MOV X0, X19
	0x03D0040C LDR X9, [X8 + 0x7B8]
	0x03D00410 LDR X1, [X8 + 0x7C0]
	0x03D00414 BLR X9
	0x03D00418 LDR X0, [X19 + 0x450]
	0x03D0041C CBZ X0, 0x3D00474
	0x03D00420 LDR X8, [X0]
	0x03D00424 MOV V0.16B, V9.16B
	0x03D00428 MOV V1.16B, V8.16B
	0x03D0042C LDP X9, X1, [X8 + 0x1C8]
	0x03D00430 BLR X9
	0x03D00434 LDR X0, [X19 + 0x450]
	0x03D00438 STR S8, [X19 + 0x480]
	0x03D0043C CBNZ X0, 0x3D00458
	0x03D00440 LDR X8, [X19]
	0x03D00444 MOV X0, X19
	0x03D00448 LDR X9, [X8 + 0x7B8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6E8000
	006 Move X21, 0x463000
	007 Move W8, [X20+2047]
	008 Move X21, [X21+3648]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x463000
	015 Move X0, [X0+3648]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2047], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X2, X31
	023 Move X20, X0
	024 Call ListViewDragger..ctor, X0, X1
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Void InitializeDragAndDropController(System.Boolean enableReordering)

Disassembly:
	0x03D0044C LDR X1, [X8 + 0x7C0]
	0x03D00450 BLR X9
	0x03D00454 LDR X0, [X19 + 0x450]
	0x03D00458 CBZ X0, 0x3D00474
	0x03D0045C LDR X8, [X0]
	0x03D00460 LDP X30, X19, [X31 + 0x10]
	0x03D00464 LDR X2, [X8 + 0x238]
	0x03D00468 LDR X1, [X8 + 0x240]
	0x03D0046C LDP D9, D8, [X31], #0x20
	0x03D00470 BR X2
	0x03D00474 BL 0x1C16F20
	0x03D00478 STP D9, D8, [X31 - 0x20]!
	0x03D0047C STP X30, X19, [X31 + 0x10]
	0x03D00480 LDR X8, [X0]
	0x03D00484 MOV V8.16B, V1.16B
	0x03D00488 MOV X19, X0
	0x03D0048C MOV V9.16B, V0.16B
	0x03D00490 LDR X9, [X8 + 0x808]
	0x03D00494 LDR X1, [X8 + 0x810]
	0x03D00498 BLR X9
	0x03D0049C TBZ X0, 0x0, 0x3D004E0
	0x03D004A0 LDR X0, [X19 + 0x450]
	0x03D004A4 CBNZ X0, 0x3D004C0
	0x03D004A8 LDR X8, [X19]
	0x03D004AC MOV X0, X19
	0x03D004B0 LDR X9, [X8 + 0x7B8]
	0x03D004B4 LDR X1, [X8 + 0x7C0]
	0x03D004B8 BLR X9
	0x03D004BC LDR X0, [X19 + 0x450]
	0x03D004C0 CBZ X0, 0x3D004EC
	0x03D004C4 LDR X8, [X0]
	0x03D004C8 LDP X30, X19, [X31 + 0x10]
	0x03D004CC MOV V0.16B, V9.16B
	0x03D004D0 MOV V1.16B, V8.16B
	0x03D004D4 LDP X2, X1, [X8 + 0x1D8]
	0x03D004D8 LDP D9, D8, [X31], #0x20
	0x03D004DC BR X2
	0x03D004E0 LDP X30, X19, [X31 + 0x10]
	0x03D004E4 LDP D9, D8, [X31], #0x20
	0x03D004E8 RET
	0x03D004EC BL 0x1C16F20
	0x03D004F0 STR X30, [X31 - 0x30]!
	0x03D004F4 STP X22, X21, [X31 + 0x10]
	0x03D004F8 STP X20, X19, [X31 + 0x20]
	0x03D004FC ADRP X21, 0x6E7000
	0x03D00500 LDRB W8, [X21 + 0x807]
	0x03D00504 MOV X20, X1
	0x03D00508 MOV X19, X0
	0x03D0050C TBNZ X8, 0x0, 0x3D005D8
	0x03D00510 ADRP X0, 0x463000
	0x03D00514 LDR X0, [X0 + 0x88]
	0x03D00518 BL 0x1C16CF4
	0x03D0051C ADRP X0, 0x463000
	0x03D00520 LDR X0, [X0 + 0x90]
	0x03D00524 BL 0x1C16CF4
	0x03D00528 ADRP X0, 0x463000
	0x03D0052C LDR X0, [X0 + 0x98]
	0x03D00530 BL 0x1C16CF4
	0x03D00534 ADRP X0, 0x463000
	0x03D00538 LDR X0, [X0 + 0xA0]
	0x03D0053C BL 0x1C16CF4
	0x03D00540 ADRP X0, 0x463000
	0x03D00544 LDR X0, [X0 + 0xA8]
	0x03D00548 BL 0x1C16CF4
	0x03D0054C ADRP X0, 0x463000
	0x03D00550 LDR X0, [X0 + 0xB0]
	0x03D00554 BL 0x1C16CF4
	0x03D00558 ADRP X0, 0x463000
	0x03D0055C LDR X0, [X0 + 0xB8]
	0x03D00560 BL 0x1C16CF4
	0x03D00564 ADRP X0, 0x41D000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6E8000
	006 Move W8, [X21+2048]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x463000
	014 Move X0, [X0+4088]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2048], W8
	018 Move X0, [X20+1160]
	019 Compare X0, 0
	020 JumpIfEqual {29}
	021 Move W1, 1
	022 Move X2, X31
	023 Call DragEventsProcessor.UnregisterCallbacksFromTarget, X0, X1
	024 Move X8, [X20+1160]
	025 Compare X8, 0
	026 JumpIfEqual {84}
	027 Move [X8+112], X31
	028 Move [X20+1160], X31
	029 Move X8, [X20]
	030 Move X0, X20
	031 Move X9, [X8+2024]
	032 Move X1, [X8+2032]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X8, [X20]
	035 Move [X20+1160], X0
	036 Move X21, X0
	037 Move X0, X20
	038 Move X9, [X8+2040]
	039 Move X1, [X8+2048]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X21, 0
	042 JumpIfEqual {84}
	043 Move [X21+112], X0
	044 Move X8, [X20+1160]
	045 Compare X8, 0
	046 JumpIfEqual {84}
	047 Move X20, [X8+112]
	048 Compare X20, 0
	049 JumpIfEqual {66}
	050 Move X10, 0x463000
	051 Move X8, [X20]
	052 Move X10, [X10+4088]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move W2, 1
	064 Move X0, X20
	065 Call 0x1C5D788
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return 
	071 Move W9, [X10]
	072 Add W9, W9, 1
	073 Add X8, X8, W9
	074 Add X0, X8, 312
	075 Move X3, [X0]
	076 Move X2, [X0+8]
	077 And W1, W19, 1
	078 Move X0, X20
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 CallNoReturn X3
	084 Call 0x1C17F20

Method: UnityEngine.UIElements.ICollectionDragAndDropController CreateDragAndDropController()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void .ctor()

Disassembly:
	0x03D00568 LDR X0, [X0 + 0x770]
	0x03D0056C BL 0x1C16CF4
	0x03D00570 ADRP X0, 0x41E000
	0x03D00574 LDR X0, [X0 + 0x98]
	0x03D00578 BL 0x1C16CF4
	0x03D0057C ADRP X0, 0x41D000
	0x03D00580 LDR X0, [X0 + 0x778]
	0x03D00584 BL 0x1C16CF4
	0x03D00588 ADRP X0, 0x41E000
	0x03D0058C LDR X0, [X0 + 0xA0]
	0x03D00590 BL 0x1C16CF4
	0x03D00594 ADRP X0, 0x41D000
	0x03D00598 LDR X0, [X0 + 0x780]
	0x03D0059C BL 0x1C16CF4
	0x03D005A0 ADRP X0, 0x462000
	0x03D005A4 LDR X0, [X0 + 0xA08]
	0x03D005A8 BL 0x1C16CF4
	0x03D005AC ADRP X0, 0x41D000
	0x03D005B0 LDR X0, [X0 + 0x788]
	0x03D005B4 BL 0x1C16CF4
	0x03D005B8 ADRP X0, 0x463000
	0x03D005BC LDR X0, [X0 + 0xC0]
	0x03D005C0 BL 0x1C16CF4
	0x03D005C4 ADRP X0, 0x41D000
	0x03D005C8 LDR X0, [X0 + 0xD80]
	0x03D005CC BL 0x1C16CF4
	0x03D005D0 MOVZ W8, 0x1
	0x03D005D4 STRB W8, [X21 + 0x807]
	0x03D005D8 CBZ X20, 0x3D00830
	0x03D005DC LDR X8, [X20 + 0x90]
	0x03D005E0 CBZ X8, 0x3D00820
	0x03D005E4 LDR X0, [X19 + 0x440]
	0x03D005E8 CBZ X0, 0x3D00830
	0x03D005EC LDR X8, [X0]
	0x03D005F0 ADRP X20, 0x463000
	0x03D005F4 ADRP X21, 0x463000
	0x03D005F8 ADRP X22, 0x463000
	0x03D005FC LDR X9, [X8 + 0x768]
	0x03D00600 LDR X1, [X8 + 0x770]
	0x03D00604 LDR X20, [X20 + 0x88]
	0x03D00608 LDR X21, [X21 + 0x90]
	0x03D0060C LDR X22, [X22 + 0xC0]
	0x03D00610 BLR X9
	0x03D00614 LDR X8, [X20]
	0x03D00618 MOV X20, X0
	0x03D0061C MOV X0, X8
	0x03D00620 BL 0x1C16F10
	0x03D00624 LDR X2, [X21]
	0x03D00628 MOV X1, X19
	0x03D0062C MOV X3, X31
	0x03D00630 MOV X21, X0
	0x03D00634 BL 0x2A762F4
	0x03D00638 LDR X0, [X22]
	0x03D0063C BL 0x1C16F10
	0x03D00640 MOV X1, X21
	0x03D00644 MOV X2, X31
	0x03D00648 MOV X22, X0
	0x03D0064C BL 0x3DB9C3C
	0x03D00650 MOV X0, X20
	0x03D00654 MOV X1, X22
	0x03D00658 MOV X2, X31
	0x03D0065C STR X22, [X19 + 0x458]
	0x03D00660 BL 0x3D16A80
	0x03D00664 LDR X0, [X19 + 0x440]
	0x03D00668 CBZ X0, 0x3D00830
	0x03D0066C LDR X8, [X0]
	0x03D00670 ADRP X20, 0x41E000
	0x03D00674 ADRP X21, 0x463000
	0x03D00678 LDR X9, [X8 + 0x768]
	0x03D0067C LDR X1, [X8 + 0x770]
	0x03D00680 LDR X20, [X20 + 0xA0]
	0x03D00684 LDR X21, [X21 + 0xA8]
	0x03D00688 BLR X9
	0x03D0068C LDR X8, [X20]
	0x03D00690 MOV X20, X0
	0x03D00694 MOV X0, X8
	0x03D00698 BL 0x1C16F10
	0x03D0069C LDR X2, [X21]
	0x03D006A0 MOV X1, X19
	0x03D006A4 MOV X3, X31
	0x03D006A8 MOV X21, X0
	0x03D006AC BL 0x2D0E824
	0x03D006B0 CBZ X20, 0x3D00830
	0x03D006B4 ADRP X8, 0x41E000
	0x03D006B8 LDR X8, [X8 + 0x98]
	0x03D006BC MOV X0, X20
	0x03D006C0 MOV X1, X21
	0x03D006C4 MOV W2, W31
	0x03D006C8 LDR X3, [X8]
	0x03D006CC BL 0x21A1534
	0x03D006D0 LDR X0, [X19 + 0x440]
	0x03D006D4 CBZ X0, 0x3D00830
	0x03D006D8 LDR X8, [X0]
	0x03D006DC ADRP X20, 0x41D000
	0x03D006E0 ADRP X21, 0x463000
	0x03D006E4 LDR X9, [X8 + 0x768]
	0x03D006E8 LDR X1, [X8 + 0x770]
	0x03D006EC LDR X20, [X20 + 0x780]
	0x03D006F0 LDR X21, [X21 + 0xA0]
	0x03D006F4 BLR X9
	0x03D006F8 LDR X8, [X20]
	0x03D006FC MOV X20, X0
	0x03D00700 MOV X0, X8
	0x03D00704 BL 0x1C16F10
	0x03D00708 LDR X2, [X21]
	0x03D0070C MOV X1, X19
	0x03D00710 MOV X3, X31
	0x03D00714 MOV X21, X0
	0x03D00718 BL 0x2D0E824
	0x03D0071C CBZ X20, 0x3D00830
	0x03D00720 ADRP X8, 0x41D000
	0x03D00724 LDR X8, [X8 + 0x770]
	0x03D00728 MOV X0, X20
	0x03D0072C MOV X1, X21
	0x03D00730 MOV W2, W31
	0x03D00734 LDR X3, [X8]
	0x03D00738 BL 0x21A1534
	0x03D0073C LDR X0, [X19 + 0x440]
	0x03D00740 CBZ X0, 0x3D00830
	0x03D00744 LDR X8, [X0]
	0x03D00748 ADRP X20, 0x462000
	0x03D0074C ADRP X21, 0x463000
	0x03D00750 LDR X9, [X8 + 0x768]
	0x03D00754 LDR X1, [X8 + 0x770]
	0x03D00758 LDR X20, [X20 + 0xA08]
	0x03D0075C LDR X21, [X21 + 0x98]
	0x03D00760 BLR X9
	0x03D00764 LDR X8, [X20]
	0x03D00768 MOV X20, X0
	0x03D0076C MOV X0, X8
	0x03D00770 BL 0x1C16F10
	0x03D00774 LDR X2, [X21]
	0x03D00778 MOV X1, X19
	0x03D0077C MOV X3, X31
	0x03D00780 MOV X21, X0
	0x03D00784 BL 0x2D0E824
	0x03D00788 CBZ X20, 0x3D00830
	0x03D0078C ADRP X8, 0x463000
	0x03D00790 LDR X8, [X8 + 0xB8]
	0x03D00794 MOV X0, X20
	0x03D00798 MOV X1, X21
	0x03D0079C MOV W2, W31
	0x03D007A0 LDR X3, [X8]
	0x03D007A4 BL 0x21A1534
	0x03D007A8 LDR X0, [X19 + 0x440]
	0x03D007AC CBZ X0, 0x3D00830
	0x03D007B0 LDR X8, [X0]
	0x03D007B4 ADRP X20, 0x41D000
	0x03D007B8 ADRP X21, 0x463000
	0x03D007BC LDR X9, [X8 + 0x768]
	0x03D007C0 LDR X1, [X8 + 0x770]
	0x03D007C4 LDR X20, [X20 + 0x788]
	0x03D007C8 LDR X21, [X21 + 0xB0]
	0x03D007CC BLR X9
	0x03D007D0 LDR X8, [X20]
	0x03D007D4 MOV X20, X0
	0x03D007D8 MOV X0, X8
	0x03D007DC BL 0x1C16F10
	0x03D007E0 LDR X2, [X21]
	0x03D007E4 MOV X1, X19
	0x03D007E8 MOV X3, X31
	0x03D007EC MOV X21, X0
	0x03D007F0 BL 0x2D0E824
	0x03D007F4 CBZ X20, 0x3D00830
	0x03D007F8 ADRP X8, 0x41D000
	0x03D007FC LDR X8, [X8 + 0x778]
	0x03D00800 MOV X0, X20
	0x03D00804 MOV X1, X21
	0x03D00808 LDP X20, X19, [X31 + 0x20]
	0x03D0080C LDR X3, [X8]
	0x03D00810 LDP X22, X21, [X31 + 0x10]
	0x03D00814 MOV W2, W31
	0x03D00818 LDR X30, [X31], #0x30
	0x03D0081C B 0x21A1534
	0x03D00820 LDP X20, X19, [X31 + 0x20]
	0x03D00824 LDP X22, X21, [X31 + 0x10]
	0x03D00828 LDR X30, [X31], #0x30
	0x03D0082C RET
	0x03D00830 BL 0x1C16F20
	0x03D00834 STP X30, X21, [X31 - 0x20]!
	0x03D00838 STP X20, X19, [X31 + 0x10]
	0x03D0083C ADRP X21, 0x6E7000
	0x03D00840 LDRB W8, [X21 + 0x808]
	0x03D00844 MOV X20, X1
	0x03D00848 MOV X19, X0
	0x03D0084C TBNZ X8, 0x0, 0x3D008F4
	0x03D00850 ADRP X0, 0x463000
	0x03D00854 LDR X0, [X0 + 0x98]
	0x03D00858 BL 0x1C16CF4
	0x03D0085C ADRP X0, 0x463000
	0x03D00860 LDR X0, [X0 + 0xA0]
	0x03D00864 BL 0x1C16CF4
	0x03D00868 ADRP X0, 0x463000
	0x03D0086C LDR X0, [X0 + 0xA8]
	0x03D00870 BL 0x1C16CF4
	0x03D00874 ADRP X0, 0x463000
	0x03D00878 LDR X0, [X0 + 0xB0]
	0x03D0087C BL 0x1C16CF4
	0x03D00880 ADRP X0, 0x462000
	0x03D00884 LDR X0, [X0 + 0xA30]
	0x03D00888 BL 0x1C16CF4
	0x03D0088C ADRP X0, 0x41D000
	0x03D00890 LDR X0, [X0 + 0x790]
	0x03D00894 BL 0x1C16CF4
	0x03D00898 ADRP X0, 0x41E000
	0x03D0089C LDR X0, [X0 + 0xD28]
	0x03D008A0 BL 0x1C16CF4
	0x03D008A4 ADRP X0, 0x41D000
	0x03D008A8 LDR X0, [X0 + 0x798]
	0x03D008AC BL 0x1C16CF4
	0x03D008B0 ADRP X0, 0x41E000
	0x03D008B4 LDR X0, [X0 + 0xA0]
	0x03D008B8 BL 0x1C16CF4
	0x03D008BC ADRP X0, 0x41D000
	0x03D008C0 LDR X0, [X0 + 0x780]
	0x03D008C4 BL 0x1C16CF4
	0x03D008C8 ADRP X0, 0x462000
	0x03D008CC LDR X0, [X0 + 0xA08]
	0x03D008D0 BL 0x1C16CF4
	0x03D008D4 ADRP X0, 0x41D000
	0x03D008D8 LDR X0, [X0 + 0x788]
	0x03D008DC BL 0x1C16CF4
	0x03D008E0 ADRP X0, 0x463000
	0x03D008E4 LDR X0, [X0 + 0xC8]
	0x03D008E8 BL 0x1C16CF4
	0x03D008EC MOVZ W8, 0x1
	0x03D008F0 STRB W8, [X21 + 0x808]
	0x03D008F4 CBZ X20, 0x3D00AE8
	0x03D008F8 LDR X8, [X20 + 0x88]
	0x03D008FC CBZ X8, 0x3D00ADC
	0x03D00900 LDR X0, [X19 + 0x440]
	0x03D00904 CBZ X0, 0x3D00AE8
	0x03D00908 LDR X8, [X0]
	0x03D0090C LDR X9, [X8 + 0x768]
	0x03D00910 LDR X1, [X8 + 0x770]
	0x03D00914 BLR X9
	0x03D00918 LDR X1, [X19 + 0x458]
	0x03D0091C MOV X2, X31
	0x03D00920 BL 0x3D16B2C
	0x03D00924 LDR X0, [X19 + 0x440]
	0x03D00928 CBZ X0, 0x3D00AE8
	0x03D0092C LDR X8, [X0]
	0x03D00930 ADRP X20, 0x41E000
	0x03D00934 ADRP X21, 0x463000
	0x03D00938 LDR X9, [X8 + 0x768]
	0x03D0093C LDR X1, [X8 + 0x770]
	0x03D00940 LDR X20, [X20 + 0xA0]
	0x03D00944 LDR X21, [X21 + 0xA8]
	0x03D00948 BLR X9
	0x03D0094C LDR X8, [X20]
	0x03D00950 MOV X20, X0
	0x03D00954 MOV X0, X8
	0x03D00958 BL 0x1C16F10
	0x03D0095C LDR X2, [X21]
	0x03D00960 MOV X1, X19
	0x03D00964 MOV X3, X31
	0x03D00968 MOV X21, X0
	0x03D0096C BL 0x2D0E824
	0x03D00970 CBZ X20, 0x3D00AE8
	0x03D00974 ADRP X8, 0x41E000
	0x03D00978 LDR X8, [X8 + 0xD28]
	0x03D0097C MOV X0, X20
	0x03D00980 MOV X1, X21
	0x03D00984 MOV W2, W31
	0x03D00988 LDR X3, [X8]
	0x03D0098C BL 0x21A18B4
	0x03D00990 LDR X0, [X19 + 0x440]
	0x03D00994 CBZ X0, 0x3D00AE8
	0x03D00998 LDR X8, [X0]
	0x03D0099C ADRP X20, 0x41D000
	0x03D009A0 ADRP X21, 0x463000
	0x03D009A4 LDR X9, [X8 + 0x768]
	0x03D009A8 LDR X1, [X8 + 0x770]
	0x03D009AC LDR X20, [X20 + 0x780]
	0x03D009B0 LDR X21, [X21 + 0xA0]
	0x03D009B4 BLR X9
	0x03D009B8 LDR X8, [X20]
	0x03D009BC MOV X20, X0
	0x03D009C0 MOV X0, X8
	0x03D009C4 BL 0x1C16F10
	0x03D009C8 LDR X2, [X21]
	0x03D009CC MOV X1, X19
	0x03D009D0 MOV X3, X31
	0x03D009D4 MOV X21, X0
	0x03D009D8 BL 0x2D0E824
	0x03D009DC CBZ X20, 0x3D00AE8
	0x03D009E0 ADRP X8, 0x41D000
	0x03D009E4 LDR X8, [X8 + 0x790]
	0x03D009E8 MOV X0, X20
	0x03D009EC MOV X1, X21
	0x03D009F0 MOV W2, W31
	0x03D009F4 LDR X3, [X8]
	0x03D009F8 BL 0x21A18B4
	0x03D009FC LDR X0, [X19 + 0x440]
	0x03D00A00 CBZ X0, 0x3D00AE8
	0x03D00A04 LDR X8, [X0]
	0x03D00A08 ADRP X20, 0x462000
	0x03D00A0C ADRP X21, 0x463000
	0x03D00A10 LDR X9, [X8 + 0x768]
	0x03D00A14 LDR X1, [X8 + 0x770]
	0x03D00A18 LDR X20, [X20 + 0xA08]
	0x03D00A1C LDR X21, [X21 + 0x98]
	0x03D00A20 BLR X9
	0x03D00A24 LDR X8, [X20]
	0x03D00A28 MOV X20, X0
	0x03D00A2C MOV X0, X8
	0x03D00A30 BL 0x1C16F10
	0x03D00A34 LDR X2, [X21]
	0x03D00A38 MOV X1, X19
	0x03D00A3C MOV X3, X31
	0x03D00A40 MOV X21, X0
	0x03D00A44 BL 0x2D0E824
	0x03D00A48 CBZ X20, 0x3D00AE8
	0x03D00A4C ADRP X8, 0x462000
	0x03D00A50 LDR X8, [X8 + 0xA30]
	0x03D00A54 MOV X0, X20
	0x03D00A58 MOV X1, X21
	0x03D00A5C MOV W2, W31
	0x03D00A60 LDR X3, [X8]
	0x03D00A64 BL 0x21A18B4
	0x03D00A68 LDR X0, [X19 + 0x440]
	0x03D00A6C CBZ X0, 0x3D00AE8
	0x03D00A70 LDR X8, [X0]
	0x03D00A74 ADRP X20, 0x41D000
	0x03D00A78 ADRP X21, 0x463000
	0x03D00A7C LDR X9, [X8 + 0x768]
	0x03D00A80 LDR X1, [X8 + 0x770]
	0x03D00A84 LDR X20, [X20 + 0x788]
	0x03D00A88 LDR X21, [X21 + 0xB0]
	0x03D00A8C BLR X9
	0x03D00A90 LDR X8, [X20]
	0x03D00A94 MOV X20, X0
	0x03D00A98 MOV X0, X8
	0x03D00A9C BL 0x1C16F10
	0x03D00AA0 LDR X2, [X21]
	0x03D00AA4 MOV X1, X19
	0x03D00AA8 MOV X3, X31
	0x03D00AAC MOV X21, X0
	0x03D00AB0 BL 0x2D0E824
	0x03D00AB4 CBZ X20, 0x3D00AE8
	0x03D00AB8 ADRP X8, 0x41D000
	0x03D00ABC LDR X8, [X8 + 0x798]
	0x03D00AC0 MOV X0, X20
	0x03D00AC4 LDP X20, X19, [X31 + 0x10]
	0x03D00AC8 MOV X1, X21
	0x03D00ACC LDR X3, [X8]
	0x03D00AD0 MOV W2, W31
	0x03D00AD4 LDP X30, X21, [X31], #0x20
	0x03D00AD8 B 0x21A18B4
	0x03D00ADC LDP X20, X19, [X31 + 0x10]
	0x03D00AE0 LDP X30, X21, [X31], #0x20
	0x03D00AE4 RET
	0x03D00AE8 BL 0x1C16F20
	0x03D00AEC SUB X31, X31, 0x50
	0x03D00AF0 STP X30, X23, [X31 + 0x20]
	0x03D00AF4 STP X22, X21, [X31 + 0x30]
	0x03D00AF8 STP X20, X19, [X31 + 0x40]
	0x03D00AFC ADRP X23, 0x6E7000
	0x03D00B00 LDRB W8, [X23 + 0x809]
	0x03D00B04 MOV W20, W3
	0x03D00B08 MOV W21, W1
	0x03D00B0C MOV X19, X0
	0x03D00B10 AND W22, W2, 0x1
	0x03D00B14 TBNZ X8, 0x0, 0x3D00B38
	0x03D00B18 ADRP X0, 0x3FA000
	0x03D00B1C LDR X0, [X0 + 0x2F0]
	0x03D00B20 BL 0x1C16CF4
	0x03D00B24 ADRP X0, 0x3F4000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x6E8000
	011 Move X21, 0x41E000
	012 Move W8, [X20+2049]
	013 Move X21, [X21+3864]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {99}
	019 Move X0, 0x3F6000
	020 Move X0, [X0+1456]
	021 Call 0x1C17CF4
	022 Move X0, 0x463000
	023 Move X0, [X0+3056]
	024 Call 0x1C17CF4
	025 Move X0, 0x3F5000
	026 Move X0, [X0+3696]
	027 Call 0x1C17CF4
	028 Move X0, 0x464000
	029 Move X0, [X0+32]
	030 Call 0x1C17CF4
	031 Move X0, 0x464000
	032 Move X0, [X0+40]
	033 Call 0x1C17CF4
	034 Move X0, 0x464000
	035 Move X0, [X0+48]
	036 Call 0x1C17CF4
	037 Move X0, 0x464000
	038 Move X0, [X0+56]
	039 Call 0x1C17CF4
	040 Move X0, 0x464000
	041 Move X0, [X0+64]
	042 Call 0x1C17CF4
	043 Move X0, 0x464000
	044 Move X0, [X0+72]
	045 Call 0x1C17CF4
	046 Move X0, 0x464000
	047 Move X0, [X0+80]
	048 Call 0x1C17CF4
	049 Move X0, 0x41E000
	050 Move X0, [X0+3864]
	051 Call 0x1C17CF4
	052 Move X0, 0x41E000
	053 Move X0, [X0+3424]
	054 Call 0x1C17CF4
	055 Move X0, 0x41E000
	056 Move X0, [X0+1592]
	057 Call 0x1C17CF4
	058 Move X0, 0x41E000
	059 Move X0, [X0+3432]
	060 Call 0x1C17CF4
	061 Move X0, 0x41E000
	062 Move X0, [X0+1624]
	063 Call 0x1C17CF4
	064 Move X0, 0x41E000
	065 Move X0, [X0+3440]
	066 Call 0x1C17CF4
	067 Move X0, 0x41E000
	068 Move X0, [X0+1632]
	069 Call 0x1C17CF4
	070 Move X0, 0x41E000
	071 Move X0, [X0+3448]
	072 Call 0x1C17CF4
	073 Move X0, 0x41E000
	074 Move X0, [X0+1600]
	075 Call 0x1C17CF4
	076 Move X0, 0x3F8000
	077 Move X0, [X0+2928]
	078 Call 0x1C17CF4
	079 Move X0, 0x3FC000
	080 Move X0, [X0+3888]
	081 Call 0x1C17CF4
	082 Move X0, 0x3F5000
	083 Move X0, [X0+3632]
	084 Call 0x1C17CF4
	085 Move X0, 0x3F9000
	086 Move X0, [X0+1856]
	087 Call 0x1C17CF4
	088 Move X0, 0x41E000
	089 Move X0, [X0+1656]
	090 Call 0x1C17CF4
	091 Move X0, 0x464000
	092 Move X0, [X0+88]
	093 Call 0x1C17CF4
	094 Move X0, 0x464000
	095 Move X0, [X0+96]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X20+2049], W8
	099 Move [X31+8], X31
	100 Move [X19+1072], W31
	101 Move X0, [X21]
	102 Move X20, 0x464000
	103 Move X26, 0x3F5000
	104 Move X25, 0x3F8000
	105 Move X24, 0x3F9000
	106 Move X23, 0x3FC000
	107 Move X22, 0x41E000
	108 Move X20, [X20+88]
	109 Move X26, [X26+3632]
	110 Move W8, [X0+224]
	111 Move X25, [X25+2928]
	112 Move X24, [X24+1856]
	113 Move X23, [X23+3888]
	114 Move X22, [X22+1656]
	115 Compare W8, 0
	116 JumpIfNotEqual {119}
	117 Call 0x1C17DFC
	118 Move X0, [X21]
	119 Move X8, [X0+184]
	120 Move V0, [X8+24]
	121 NotImplemented "Instruction SCVTF not yet implemented."
	122 Move [X19+1076], S0
	123 Move X0, [X20]
	124 Call 0x1C17F10
	125 Move X1, X31
	126 Move X20, X0
	127 Call Object..ctor, X0
	128 Move [X19+1120], X20
	129 Move X0, [X26]
	130 Call 0x1C17F10
	131 Move X1, [X25]
	132 Move X20, X0
	133 Call List`1<Int32>..ctor, X0
	134 Move [X19+1128], X20
	135 Move X0, [X26]
	136 Call 0x1C17F10
	137 Move X1, [X25]
	138 Move X20, X0
	139 Call List`1<Int32>..ctor, X0
	140 Move [X19+1136], X20
	141 Move X0, [X24]
	142 Call 0x1C17F10
	143 Move X1, [X23]
	144 Move X20, X0
	145 Call List`1<Object>..ctor, X0
	146 Move X0, X19
	147 Move X1, X31
	148 Move [X19+1144], X20
	149 Call BindableElement..ctor, X0
	150 Move X8, [X21]
	151 Move X0, X19
	152 Move X2, X31
	153 Move X8, [X8+184]
	154 Move X1, [X8+40]
	155 Call VisualElement.AddToClassList, X0, X1
	156 Move W1, 1
	157 Move X0, X19
	158 Call BaseVerticalCollectionView.set_selectionType, X0, X1
	159 Move X0, [X22]
	160 Call 0x1C17F10
	161 Move X1, X31
	162 Move X20, X0
	163 Call ScrollView..ctor, X0
	164 Move [X19+1088], X20
	165 Compare X20, 0
	166 JumpIfEqual {397}
	167 Move X8, [X21]
	168 Move X0, X20
	169 Move X2, X31
	170 Move X8, [X8+184]
	171 Move X1, [X8+104]
	172 Call VisualElement.AddToClassList, X0, X1
	173 Move X8, [X19+1088]
	174 Compare X8, 0
	175 JumpIfEqual {397}
	176 Move X9, 0x3F6000
	177 Move X9, [X9+1456]
	178 Move X21, 0x464000
	179 Move X20, [X8+1064]
	180 Move X0, [X9]
	181 Move X21, [X21+80]
	182 Call 0x1C17F10
	183 Move X2, [X21]
	184 Move X1, X19
	185 Move X3, X31
	186 Move X21, X0
	187 Call Action`1<Single>..ctor, X0, X1, X2
	188 Compare X20, 0
	189 JumpIfEqual {397}
	190 Move X22, 0x41E000
	191 Move X23, 0x464000
	192 Move X22, [X22+1632]
	193 Move X23, [X23+72]
	194 Move X0, X20
	195 Move X1, X21
	196 Move X2, X31
	197 Call Scroller.add_valueChanged, X0, X1
	198 Move X0, [X22]
	199 Move X20, [X19+1088]
	200 Call 0x1C17F10
	201 Move X2, [X23]
	202 Move X1, X19
	203 Move X3, X31
	204 Move X21, X0
	205 Call 0x2D0F824, X0, X1, X2
	206 Compare X20, 0
	207 JumpIfEqual {397}
	208 Move X8, 0x41E000
	209 Move X8, [X8+1624]
	210 Move X22, 0x41E000
	211 Move X23, 0x464000
	212 Move X24, 0x41E000
	213 Move X3, [X8]
	214 Move X22, [X22+1600]
	215 Move X23, [X23+40]
	216 Move X24, [X24+1592]
	217 Move X0, X20
	218 Move X1, X21
	219 Move W2, W31
	220 Call 0x21A2534, X0, X1, X2
	221 Move X0, [X22]
	222 Call 0x1C17F10
	223 Move X2, [X23]
	224 Move X1, X19
	225 Move X3, X31
	226 Move X20, X0
	227 Call 0x2D0F824, X0, X1, X2
	228 Move X3, [X24]
	229 Move X0, X19
	230 Move X1, X20
	231 Move W2, W31
	232 Call 0x21A2534, X0, X1, X2
	233 Move X0, [X19+1088]
	234 Compare X0, 0
	235 JumpIfEqual {397}
	236 Move X8, [X0]
	237 Move X20, 0x41E000
	238 Move X21, 0x464000
	239 Move X9, [X8+1896]
	240 Move X1, [X8+1904]
	241 Move X20, [X20+3440]
	242 Move X21, [X21+32]
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move X8, [X20]
	245 Move X20, X0
	246 Move X0, X8
	247 Call 0x1C17F10
	248 Move X2, [X21]
	249 Move X1, X19
	250 Move X3, X31
	251 Move X21, X0
	252 Call 0x2D0F824, X0, X1, X2
	253 Compare X20, 0
	254 JumpIfEqual {397}
	255 Move X8, 0x41E000
	256 Move X8, [X8+3424]
	257 Move X0, X20
	258 Move X1, X21
	259 Move W2, W31
	260 Move X3, [X8]
	261 Call 0x21A2534, X0, X1, X2
	262 Move X0, [X19+1088]
	263 Compare X0, 0
	264 JumpIfEqual {397}
	265 Move X8, [X0]
	266 Move X20, 0x41E000
	267 Move X21, 0x464000
	268 Move X9, [X8+1896]
	269 Move X1, [X8+1904]
	270 Move X20, [X20+3448]
	271 Move X21, [X21+48]
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Move X8, [X20]
	274 Move X20, X0
	275 Move X0, X8
	276 Call 0x1C17F10
	277 Move X2, [X21]
	278 Move X1, X19
	279 Move X3, X31
	280 Move X21, X0
	281 Call 0x2D0F824, X0, X1, X2
	282 Compare X20, 0
	283 JumpIfEqual {397}
	284 Move X8, 0x41E000
	285 Move X8, [X8+3432]
	286 Move X0, X20
	287 Move X1, X21
	288 Move W2, W31
	289 Move X3, [X8]
	290 Call 0x21A2534, X0, X1, X2
	291 Move X8, [X19+888]
	292 Add X0, X31, 8
	293 Move X2, X31
	294 Move [X31+8], X8
	295 Move X1, [X19+1088]
	296 Call Hierarchy.Add, X0, X1
	297 Move X0, [X19+1088]
	298 Compare X0, 0
	299 JumpIfEqual {397}
	300 Move X8, [X0]
	301 Move X9, [X8+1896]
	302 Move X1, [X8+1904]
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Compare X0, 0
	305 JumpIfEqual {397}
	306 Move W8, 1
	307 Move [X0+32], W8
	308 Move X0, [X19+1088]
	309 Compare X0, 0
	310 JumpIfEqual {397}
	311 Move X8, [X0]
	312 Move X9, [X8+1896]
	313 Move X1, [X8+1904]
	314 NotImplemented "Instruction BLR not yet implemented."
	315 Compare X0, 0
	316 JumpIfEqual {397}
	317 Move X1, X31
	318 Move X20, X0
	319 Call VisualElement.get_usageHints, X0
	320 And W1, W0, 0xFFFFFFFD
	321 Move X0, X20
	322 Move X2, X31
	323 Call VisualElement.set_usageHints, X0, X1
	324 Move X0, [X19+1088]
	325 Compare X0, 0
	326 JumpIfEqual {397}
	327 Move X8, 0x464000
	328 Move X8, [X8+96]
	329 Move X2, X31
	330 Move X1, [X8]
	331 Call VisualElement.set_viewDataKey, X0, X1
	332 Move X8, [X19+1088]
	333 Compare X8, 0
	334 JumpIfEqual {397}
	335 Move X0, [X8+1064]
	336 Compare X0, 0
	337 JumpIfEqual {397}
	338 Move X1, X31
	339 Move X2, X31
	340 Call VisualElement.set_viewDataKey, X0, X1
	341 Move X8, [X19+1088]
	342 Compare X8, 0
	343 JumpIfEqual {397}
	344 Move X0, [X8+1056]
	345 Compare X0, 0
	346 JumpIfEqual {397}
	347 Move X20, 0x463000
	348 Move X21, 0x464000
	349 Move X22, 0x3F5000
	350 Move X23, 0x464000
	351 Move X20, [X20+3056]
	352 Move X21, [X21+56]
	353 Move X22, [X22+3696]
	354 Move X23, [X23+64]
	355 Move X1, X31
	356 Move X2, X31
	357 Call VisualElement.set_viewDataKey, X0, X1
	358 Move W8, 1
	359 Move W1, 1
	360 Move X0, X19
	361 Move X2, X31
	362 Move [X19+32], W8
	363 Call VisualElement.set_isCompositeRoot, X0, X1
	364 Move W1, 1
	365 Move X0, X19
	366 Move X2, X31
	367 Call Focusable.set_delegatesFocus, X0, X1
	368 Move X0, [X20]
	369 Call 0x1C17F10
	370 Move X2, [X21]
	371 Move X1, X19
	372 Move X3, X31
	373 Move X20, X0
	374 Call Action`2<Int32, Int32>..ctor, X0, X1, X2
	375 Move [X19+1168], X20
	376 Move X0, [X22]
	377 Call 0x1C17F10
	378 Move X2, [X23]
	379 Move X1, X19
	380 Move X3, X31
	381 Move X20, X0
	382 Call Action..ctor, X0, X1, X2
	383 Move X0, X19
	384 Move W1, W31
	385 Move [X19+1176], X20
	386 Call BaseVerticalCollectionView.InitializeDragAndDropController, X0, X1
	387 Move X20, [X31+64]
	388 Move X19, [X31+72]
	389 Move X22, [X31+48]
	390 Move X21, [X31+56]
	391 Move X24, [X31+32]
	392 Move X23, [X31+40]
	393 Move X26, [X31+16]
	394 Move X25, [X31+24]
	395 Move X30, [X31+80]
	396 Return 
	397 Call 0x1C17F20

Method: System.Void .ctor(System.Collections.IList itemsSource, System.Single itemHeight = -1)

Disassembly:
	0x03CFE480 LDR X2, [X8 + 0x248]
	0x03CFE484 LDR X1, [X8 + 0x250]
	0x03CFE488 LDR X30, [X31], #0x10
	0x03CFE48C BR X2
	0x03CFE490 BL 0x1C16F20
	0x03CFE494 STR X30, [X31 - 0x50]!
	0x03CFE498 STP X26, X25, [X31 + 0x10]
	0x03CFE49C STP X24, X23, [X31 + 0x20]
	0x03CFE4A0 STP X22, X21, [X31 + 0x30]
	0x03CFE4A4 STP X20, X19, [X31 + 0x40]
	0x03CFE4A8 ADRP X26, 0x6E9000
	0x03CFE4AC ADRP X25, 0x464000
	0x03CFE4B0 ADRP X19, 0x464000
	0x03CFE4B4 ADRP X24, 0x464000
	0x03CFE4B8 ADRP X23, 0x464000
	0x03CFE4BC ADRP X22, 0x464000
	0x03CFE4C0 ADRP X21, 0x464000
	0x03CFE4C4 ADRP X20, 0x464000
	0x03CFE4C8 LDR X25, [X25 + 0xFC8]
	0x03CFE4CC LDR X19, [X19 + 0xB00]
	0x03CFE4D0 LDRB W8, [X26 + 0x7F4]
	0x03CFE4D4 LDR X24, [X24 + 0xE60]
	0x03CFE4D8 LDR X23, [X23 + 0xFD0]
	0x03CFE4DC LDR X22, [X22 + 0xFD8]
	0x03CFE4E0 LDR X21, [X21 + 0xFE0]
	0x03CFE4E4 LDR X20, [X20 + 0xFE8]
	0x03CFE4E8 TBNZ X8, 0x0, 0x3CFE548
	0x03CFE4EC ADRP X0, 0x464000
	0x03CFE4F0 LDR X0, [X0 + 0xB00]
	0x03CFE4F4 BL 0x1C16CF4
	0x03CFE4F8 ADRP X0, 0x464000
	0x03CFE4FC LDR X0, [X0 + 0xFE8]
	0x03CFE500 BL 0x1C16CF4
	0x03CFE504 ADRP X0, 0x464000
	0x03CFE508 LDR X0, [X0 + 0xFE0]
	0x03CFE50C BL 0x1C16CF4
	0x03CFE510 ADRP X0, 0x464000
	0x03CFE514 LDR X0, [X0 + 0xE60]
	0x03CFE518 BL 0x1C16CF4
	0x03CFE51C ADRP X0, 0x464000
	0x03CFE520 LDR X0, [X0 + 0xFD8]
	0x03CFE524 BL 0x1C16CF4
	0x03CFE528 ADRP X0, 0x464000
	0x03CFE52C LDR X0, [X0 + 0xFC8]
	0x03CFE530 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x6EA000
	008 Move X21, 0x3F6000
	009 Move W8, [X22+2050]
	010 Move X21, [X21+1448]
	011 Move V8, V0
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x3F6000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2050], W8
	023 Move X0, X20
	024 Call BaseVerticalCollectionView..ctor, X0
	025 Move X0, [X21]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move S0, 1
	031 Add S0, S8, S0
	032 Move W8, 1
	033 NotImplemented "Instruction FABS not yet implemented."
	034 Move S1, W8
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move [X20+1076], S8
	037 Move [X20+1080], W8
	038 Compare X19, 0
	039 JumpIfEqual {50}
	040 Move X0, X20
	041 Move X1, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+8]
	047 Move V8, [X31+48]
	048 Call BaseVerticalCollectionView.set_itemsSource, X0, X1
	049 Return 
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+8]
	055 Move V8, [X31+48]
	056 Return 

Method: UnityEngine.UIElements.VisualElement GetRootElementForId(System.Int32 id)

Disassembly:
	0x03D00B28 LDR X0, [X0 + 0xE28]
	0x03D00B2C BL 0x1C16CF4
	0x03D00B30 MOVZ W8, 0x1
	0x03D00B34 STRB W8, [X23 + 0x809]
	0x03D00B38 STP X19, X31, [X31 + 0x10]
	0x03D00B3C STRB W22, [X31 + 0x18]
	0x03D00B40 LDR W8, [X19 + 0x428]
	0x03D00B44 CBZ W8, 0x3D00DB8
	0x03D00B48 LDR X8, [X19]
	0x03D00B4C MOV X0, X19
	0x03D00B50 LDR X9, [X8 + 0x808]
	0x03D00B54 LDR X1, [X8 + 0x810]
	0x03D00B58 BLR X9
	0x03D00B5C TBZ X0, 0x0, 0x3D00DB8
	0x03D00B60 SUB W8, W21, 0x1
	0x03D00B64 CMP W8, 0xA
	0x03D00B68 B.HI 0x3D00F34
	0x03D00B6C ADRP X9, 0xFFFFFFFFFCE97000
	0x03D00B70 ADD X9, X9, 0xF79
	0x03D00B74 ADR X10, 0x10
	0x03D00B78 LDRB W11, [X9, X8, LSL]
	0x03D00B7C ADD X10, X10, X11, 0x2, LSL
	0x03D00B80 BR X10
	0x03D00B84 MOV X0, X19
	0x03D00B88 BL 0x3D00FA0
	0x03D00B8C B 0x3D00F14
	0x03D00B90 MOV X0, X19
	0x03D00B94 BL 0x3CFEB78
	0x03D00B98 B 0x3D00F14
	0x03D00B9C LDR X8, [X19 + 0x3D8]
	0x03D00BA0 CBZ X8, 0x3D00BB8
	0x03D00BA4 LDR X1, [X19 + 0x478]
	0x03D00BA8 LDR X9, [X8 + 0x18]
	0x03D00BAC LDR X0, [X8 + 0x40]
	0x03D00BB0 LDR X2, [X8 + 0x28]
	0x03D00BB4 BLR X9
	0x03D00BB8 MOV X0, X19
	0x03D00BBC BL 0x3CFDC08
	0x03D00BC0 MOV W1, W0
	0x03D00BC4 MOV X0, X19
	0x03D00BC8 BL 0x3CFDE14
	0x03D00BCC B 0x3D00F14
	0x03D00BD0 MOV X0, X19
	0x03D00BD4 BL 0x3CFDC08
	0x03D00BD8 CMP W0, 0x1
	0x03D00BDC B.LT 0x3D00DB8
	0x03D00BE0 MOV X0, X19
	0x03D00BE4 BL 0x3CFDC08
	0x03D00BE8 B 0x3D00DDC
	0x03D00BEC MOV X0, X19
	0x03D00BF0 BL 0x3CFDC08
	0x03D00BF4 LDR X8, [X19 + 0x448]
	0x03D00BF8 CBZ X8, 0x3D00F30
	0x03D00BFC LDR X9, [X8]
	0x03D00C00 MOV W20, W0
	0x03D00C04 MOV X0, X8
	0x03D00C08 LDP X10, X1, [X9 + 0x188]
	0x03D00C0C BLR X10
	0x03D00C10 CBZ X0, 0x3D00F30
	0x03D00C14 ADRP X10, 0x3FA000
	0x03D00C18 LDR X8, [X0]
	0x03D00C1C LDR X10, [X10 + 0x2F0]
	0x03D00C20 MOV X21, X0
	0x03D00C24 LDRH W9, [X8 + 0x12E]
	0x03D00C28 LDR X1, [X10]
	0x03D00C2C CBZ X9, 0x3D00C50
	0x03D00C30 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6E8000
	009 Move X22, 0x464000
	010 Move W8, [X21+2051]
	011 Move X22, [X22+104]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x464000
	019 Move X0, [X0+112]
	020 Call 0x1C17CF4
	021 Move X0, 0x464000
	022 Move X0, [X0+120]
	023 Call 0x1C17CF4
	024 Move X0, 0x464000
	025 Move X0, [X0+128]
	026 Call 0x1C17CF4
	027 Move X0, 0x464000
	028 Move X0, [X0+104]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2051], W8
	032 Move X0, [X22]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X21, X0
	036 Call Object..ctor, X0
	037 Compare X21, 0
	038 JumpIfEqual {82}
	039 Move X22, 0x464000
	040 Move X23, 0x464000
	041 Move X24, 0x464000
	042 Move X22, [X22+120]
	043 Move X23, [X23+128]
	044 Move X24, [X24+112]
	045 Move X0, X19
	046 Move [X21+16], W20
	047 Call BaseVerticalCollectionView.get_activeItems, X0
	048 Move X8, [X22]
	049 Move X19, X0
	050 Move X0, X8
	051 Call 0x1C17F10
	052 Move X2, [X23]
	053 Move X1, X21
	054 Move X3, X31
	055 Move X20, X0
	056 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	057 Move X2, [X24]
	058 Move X0, X19
	059 Move X1, X20
	060 Call 0x21C670C, X0, X1
	061 Compare X0, 0
	062 JumpIfEqual {74}
	063 Move X8, [X0]
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X22, [X31+32]
	067 Move X21, [X31+40]
	068 Move X24, [X31+16]
	069 Move X23, [X31+24]
	070 Move X2, [X8+376]
	071 Move X1, [X8+384]
	072 Move X30, [X31+64]
	073 CallNoReturn X2
	074 Move X20, [X31+48]
	075 Move X19, [X31+56]
	076 Move X22, [X31+32]
	077 Move X21, [X31+40]
	078 Move X24, [X31+16]
	079 Move X23, [X31+24]
	080 Move X30, [X31+64]
	081 Return X0
	082 Call 0x1C17F20

Method: System.Boolean HasValidDataAndBindings()

Disassembly:
	0x03D00C3C CMP X11, X1
	0x03D00C40 B.EQ 0x3D00D80
	0x03D00C44 SUBS X9, X9, 0x1
	0x03D00C48 ADD X10, X10, 0x10
	0x03D00C4C B.NE 0x3D00C38
	0x03D00C50 MOVZ W2, 0x1
	0x03D00C54 MOV X0, X21
	0x03D00C58 BL 0x1C5C788
	0x03D00C5C B 0x3D00D90
	0x03D00C60 LDR X8, [X19 + 0x470]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+1096]
	003 Compare X0, 0
	004 JumpIfEqual {11}
	005 Move X8, [X0]
	006 Move X9, [X8+392]
	007 Move X1, [X8+400]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move X30, [X31+16]
	012 Return X0

Method: System.Void OnItemIndexChanged(System.Int32 srcIndex, System.Int32 dstIndex)

Disassembly:
	0x03D00C64 CBZ X8, 0x3D00F30
	0x03D00C68 LDR W8, [X8 + 0x18]
	0x03D00C6C CMP W8, 0x1
	0x03D00C70 B.LT 0x3D00DB8
	0x03D00C74 LDR X8, [X19]
	0x03D00C78 AND W2, W20, 0x1
	0x03D00C7C MOVZ W1, 0x1
	0x03D00C80 MOV X0, X19
	0x03D00C84 B 0x3D00CAC
	0x03D00C88 LDR X8, [X19 + 0x470]
	0x03D00C8C CBZ X8, 0x3D00F30

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+1008]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfEqual {11}
	007 Move X9, [X8+24]
	008 Move X0, [X8+64]
	009 Move X3, [X8+40]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move X0, X19
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Call BaseVerticalCollectionView.RefreshItems, X0
	015 Return 

Method: System.Void OnItemsSourceChanged()

Disassembly:
	0x03D00C90 LDR W8, [X8 + 0x18]
	0x03D00C94 CMP W8, 0x1
	0x03D00C98 B.LT 0x3D00DB8
	0x03D00C9C LDR X8, [X19]
	0x03D00CA0 AND W2, W20, 0x1
	0x03D00CA4 MOV X0, X19
	0x03D00CA8 MOV W1, W31

ISIL:
	001 Move X8, [X0+1016]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Void RefreshItems()

Disassembly:
	0x03CFE108 ADD X10, X10, 0x10
	0x03CFE10C B.NE 0x3CFE0F8
	0x03CFE110 MOV X0, X21
	0x03CFE114 MOV W2, W31
	0x03CFE118 BL 0x1C5C788
	0x03CFE11C B 0x3CFE12C
	0x03CFE120 LDRSW X9, [X10]
	0x03CFE124 ADD X8, X8, X9, 0x4, LSL
	0x03CFE128 ADD X0, X8, 0x138
	0x03CFE12C LDP X8, X1, [X0]
	0x03CFE130 MOV X0, X21
	0x03CFE134 BLR X8
	0x03CFE138 MOV W1, W0
	0x03CFE13C MOV X0, X19
	0x03CFE140 BL 0x3D0355C
	0x03CFE144 B 0x3CFE084
	0x03CFE148 MOV X22, X31
	0x03CFE14C MOVZ W23, 0x9
	0x03CFE150 CBZ X21, 0x3CFE1B4
	0x03CFE154 ADRP X10, 0x3F5000
	0x03CFE158 LDR X8, [X21]
	0x03CFE15C LDR X10, [X10 + 0xE00]
	0x03CFE160 LDRH W9, [X8 + 0x12E]
	0x03CFE164 LDR X1, [X10]
	0x03CFE168 CBZ X9, 0x3CFE18C
	0x03CFE16C LDR X10, [X8 + 0xB0]
	0x03CFE170 ADD X10, X10, 0x8
	0x03CFE174 LDUR X11, [X10 - 0x8]
	0x03CFE178 CMP X11, X1
	0x03CFE17C B.EQ 0x3CFE19C
	0x03CFE180 SUBS X9, X9, 0x1
	0x03CFE184 ADD X10, X10, 0x10
	0x03CFE188 B.NE 0x3CFE174
	0x03CFE18C MOV X0, X21
	0x03CFE190 MOV W2, W31
	0x03CFE194 BL 0x1C5C788
	0x03CFE198 B 0x3CFE1A8
	0x03CFE19C LDRSW X9, [X10]
	0x03CFE1A0 ADD X8, X8, X9, 0x4, LSL
	0x03CFE1A4 ADD X0, X8, 0x138
	0x03CFE1A8 LDP X8, X1, [X0]
	0x03CFE1AC MOV X0, X21
	0x03CFE1B0 BLR X8
	0x03CFE1B4 CBNZ X22, 0x3CFE1FC
	0x03CFE1B8 CMP W23, 0x9
	0x03CFE1BC B.EQ 0x3CFE1C4
	0x03CFE1C0 CBNZ W23, 0x3CFE1E8
	0x03CFE1C4 TBZ X20, 0x0, 0x3CFE1D0
	0x03CFE1C8 MOV X0, X19
	0x03CFE1CC BL 0x3D034FC
	0x03CFE1D0 MOV X0, X19
	0x03CFE1D4 LDP X20, X19, [X31 + 0x20]
	0x03CFE1D8 LDP X22, X21, [X31 + 0x10]
	0x03CFE1DC MOV X1, X31
	0x03CFE1E0 LDP X30, X23, [X31], #0x30
	0x03CFE1E4 B 0x3DF276C
	0x03CFE1E8 LDP X20, X19, [X31 + 0x20]
	0x03CFE1EC LDP X22, X21, [X31 + 0x10]
	0x03CFE1F0 LDP X30, X23, [X31], #0x30
	0x03CFE1F4 RET
	0x03CFE1F8 BL 0x1C16F20
	0x03CFE1FC MOV X0, X22
	0x03CFE200 BL 0x1C16F18
	0x03CFE204 B 0x3CFE210
	0x03CFE208 B 0x3CFE210
	0x03CFE20C B 0x3CFE210
	0x03CFE210 MOV X23, X0
	0x03CFE214 CMP W1, 0x1
	0x03CFE218 B.NE 0x3CFE238
	0x03CFE21C MOV X0, X23
	0x03CFE220 BL 0x3EB1AD0
	0x03CFE224 LDR X22, [X0]
	0x03CFE228 BL 0x3EB1AE0
	0x03CFE22C MOV W23, W31
	0x03CFE230 CBNZ X21, 0x3CFE154
	0x03CFE234 B 0x3CFE1B4
	0x03CFE238 MOV X22, X31
	0x03CFE23C B 0x3CFE244
	0x03CFE240 MOV X23, X0
	0x03CFE244 CBZ X21, 0x3CFE2A8
	0x03CFE248 ADRP X10, 0x3F5000
	0x03CFE24C LDR X8, [X21]
	0x03CFE250 LDR X10, [X10 + 0xE00]
	0x03CFE254 LDRH W9, [X8 + 0x12E]
	0x03CFE258 LDR X1, [X10]
	0x03CFE25C CBZ X9, 0x3CFE280
	0x03CFE260 LDR X10, [X8 + 0xB0]
	0x03CFE264 ADD X10, X10, 0x8
	0x03CFE268 LDUR X11, [X10 - 0x8]
	0x03CFE26C CMP X11, X1
	0x03CFE270 B.EQ 0x3CFE290
	0x03CFE274 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6EA000
	006 Move X19, 0x420000
	007 Move W8, [X21+2052]
	008 Move X19, [X19+3864]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x420000
	015 Move X0, [X0+3864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2052], W8
	019 Move X0, [X19]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X19]
	025 Move X8, [X0+184]
	026 Move X1, X31
	027 Move X2, X31
	028 Move X19, [X8]
	029 Move X0, X19
	030 Call IntPtr.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {38}
	035 Move X0, X19
	036 Move X1, X31
	037 Call ProfilerUnsafeUtility.BeginSample, X0
	038 Move X8, [X20+1096]
	039 Compare X8, 0
	040 JumpIfEqual {64}
	041 Move X0, X20
	042 Call BaseVerticalCollectionView.RefreshSelection, X0
	043 Move X0, [X20+1104]
	044 Compare X0, 0
	045 JumpIfNotEqual {52}
	046 Move X8, [X20]
	047 Move X1, [X8+1984]
	048 Move X9, [X8+1976]
	049 Move X0, X20
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X0, [X20+1104]
	052 Compare X0, 0
	053 JumpIfEqual {85}
	054 Move X8, [X0]
	055 Move X9, [X8+424]
	056 Move X2, [X8+432]
	057 Move W1, W31
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X20]
	060 Move X1, [X8+2080]
	061 Move X9, [X8+2072]
	062 Move X0, X20
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X20, X31
	065 Move X0, X19
	066 Move X1, X31
	067 Move X2, X31
	068 Call IntPtr.op_Inequality, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {76}
	073 Move X0, X19
	074 Move X1, X31
	075 Call ProfilerUnsafeUtility.EndSample, X0
	076 Compare X20, 0
	077 JumpIfNotEqual {83}
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Return 
	083 Move X0, X20
	084 Call 0x1C17F18
	085 Call 0x1C17F20
	086 Move X21, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X21
	089 Call 0x3EB2AD0
	090 Move X20, [X0]
	091 Call 0x3EB2AE0
	092 Move X20, X31
	093 Move X21, X0
	094 Move X0, X19
	095 Move X1, X31
	096 Move X2, X31
	097 Call IntPtr.op_Inequality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {105}
	102 Move X0, X19
	103 Move X1, X31
	104 Call ProfilerUnsafeUtility.EndSample, X0
	105 Compare X20, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X21
	108 Call 0x1D2D690
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Call 0x1991590

Method: System.Void Rebuild()

Disassembly:
	0x03D0005C LDR X2, [X8 + 0x210]
	0x03D00060 MOV W1, W20
	0x03D00064 BLR X9
	0x03D00068 MOV X1, X0
	0x03D0006C CBZ X21, 0x3D0012C
	0x03D00070 LDR W10, [X21 + 0x1C]
	0x03D00074 LDR X8, [X21 + 0x10]
	0x03D00078 LDR X9, [X22]
	0x03D0007C ADD W10, W10, 0x1
	0x03D00080 STR W10, [X21 + 0x1C]
	0x03D00084 CBZ X8, 0x3D00124
	0x03D00088 LDRSW X10, [X21 + 0x18]
	0x03D0008C LDR W11, [X8 + 0x18]
	0x03D00090 CMP W10, W11
	0x03D00094 B.CS 0x3D000AC
	0x03D00098 ADD W9, W10, 0x1
	0x03D0009C ADD X8, X8, X10, 0x3, LSL
	0x03D000A0 STR W9, [X21 + 0x18]
	0x03D000A4 STR X1, [X8 + 0x20]
	0x03D000A8 B 0x3CFFFDC
	0x03D000AC LDR X8, [X9 + 0x20]
	0x03D000B0 LDR X8, [X8 + 0xC0]
	0x03D000B4 LDR X2, [X8 + 0x70]
	0x03D000B8 MOV X0, X21
	0x03D000BC BL 0x301BF90
	0x03D000C0 B 0x3CFFFDC
	0x03D000C4 MOV X20, X31
	0x03D000C8 MOVZ W21, 0xE
	0x03D000CC LDR X1, [X25]
	0x03D000D0 ADD X0, X31, 0x20
	0x03D000D4 BL 0x2BBDD9C
	0x03D000D8 CBNZ X20, 0x3D00168
	0x03D000DC CMP W21, 0xE
	0x03D000E0 B.EQ 0x3D000E8
	0x03D000E4 CBNZ W21, 0x3D00100
	0x03D000E8 ADRP X8, 0x462000
	0x03D000EC LDR X8, [X8 + 0xAE8]
	0x03D000F0 ADD X0, X31, 0x58
	0x03D000F4 LDR X1, [X8]
	0x03D000F8 BL 0x24A6D20
	0x03D000FC B 0x3CFFF44
	0x03D00100 ADRP X8, 0x462000
	0x03D00104 LDR X8, [X8 + 0xAE8]
	0x03D00108 ADD X0, X31, 0x58
	0x03D0010C LDR X1, [X8]
	0x03D00110 BL 0x24A6D20
	0x03D00114 CBNZ W21, 0x3CFFF50
	0x03D00118 B 0x3CFFF44
	0x03D0011C STRB W25, [X31 + 0x68]
	0x03D00120 BL 0x1C16F20
	0x03D00124 BL 0x1C16F20
	0x03D00128 BL 0x1C16F20
	0x03D0012C BL 0x1C16F20
	0x03D00130 BL 0x1C16F20
	0x03D00134 BL 0x1C16F20
	0x03D00138 STRB W22, [X31 + 0x68]
	0x03D0013C BL 0x1C16F20
	0x03D00140 STRB W25, [X31 + 0x68]
	0x03D00144 BL 0x1C16F20
	0x03D00148 STRB W22, [X31 + 0x68]
	0x03D0014C BL 0x1C16F20
	0x03D00150 BL 0x1C16F20
	0x03D00154 BL 0x1C16F20
	0x03D00158 MOV X0, X20
	0x03D0015C BL 0x1C16F18
	0x03D00160 BL 0x1C16F20
	0x03D00164 BL 0x1C16F20
	0x03D00168 MOV X0, X20
	0x03D0016C BL 0x1C16F18
	0x03D00170 B 0x3D00188
	0x03D00174 B 0x3D00188
	0x03D00178 B 0x3D00188
	0x03D0017C B 0x3D00188
	0x03D00180 B 0x3D00188
	0x03D00184 B 0x3D00188
	0x03D00188 MOV X21, X1
	0x03D0018C MOV X22, X0
	0x03D00190 B 0x3D00270
	0x03D00194 MOV W8, W22
	0x03D00198 MOV X21, X1
	0x03D0019C MOV X22, X0
	0x03D001A0 STRB W8, [X31 + 0x68]
	0x03D001A4 B 0x3D001E0
	0x03D001A8 B 0x3D00234
	0x03D001AC B 0x3D001D8
	0x03D001B0 B 0x3D001C8
	0x03D001B4 B 0x3D00234
	0x03D001B8 B 0x3D00234
	0x03D001BC B 0x3D00234
	0x03D001C0 B 0x3D001C8
	0x03D001C4 B 0x3D001D8
	0x03D001C8 MOV X21, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6E8000
	006 Move X19, 0x41E000
	007 Move W8, [X21+2053]
	008 Move X19, [X19+3864]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x41E000
	015 Move X0, [X0+3864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2053], W8
	019 Move X0, [X19]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X19]
	025 Move X8, [X0+184]
	026 Move X1, X31
	027 Move X2, X31
	028 Move X19, [X8+8]
	029 Move X0, X19
	030 Call IntPtr.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {38}
	035 Move X0, X19
	036 Move X1, X31
	037 Call ProfilerUnsafeUtility.BeginSample, X0
	038 Move X8, [X20+1096]
	039 Compare X8, 0
	040 JumpIfEqual {64}
	041 Move X0, X20
	042 Call BaseVerticalCollectionView.RefreshSelection, X0
	043 Move X0, [X20+1104]
	044 Compare X0, 0
	045 JumpIfNotEqual {52}
	046 Move X8, [X20]
	047 Move X1, [X8+1984]
	048 Move X9, [X8+1976]
	049 Move X0, X20
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X0, [X20+1104]
	052 Compare X0, 0
	053 JumpIfEqual {85}
	054 Move X8, [X0]
	055 Move X9, [X8+424]
	056 Move X2, [X8+432]
	057 Move W1, 1
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X20]
	060 Move X1, [X8+2080]
	061 Move X9, [X8+2072]
	062 Move X0, X20
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X20, X31
	065 Move X0, X19
	066 Move X1, X31
	067 Move X2, X31
	068 Call IntPtr.op_Inequality, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {76}
	073 Move X0, X19
	074 Move X1, X31
	075 Call ProfilerUnsafeUtility.EndSample, X0
	076 Compare X20, 0
	077 JumpIfNotEqual {83}
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Return 
	083 Move X0, X20
	084 Call 0x1C17F18
	085 Call 0x1C17F20
	086 Move X21, X0
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X21
	089 Call 0x3EB2AD0
	090 Move X20, [X0]
	091 Call 0x3EB2AE0
	092 Move X20, X31
	093 Move X21, X0
	094 Move X0, X19
	095 Move X1, X31
	096 Move X2, X31
	097 Call IntPtr.op_Inequality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {105}
	102 Move X0, X19
	103 Move X1, X31
	104 Call ProfilerUnsafeUtility.EndSample, X0
	105 Compare X20, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X21
	108 Call 0x1D2D690
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Call 0x1991590

Method: System.Void RefreshSelection()

Disassembly:
	0x03D00CAC LDR X9, [X8 + 0x828]
	0x03D00CB0 LDR X3, [X8 + 0x830]
	0x03D00CB4 BLR X9
	0x03D00CB8 B 0x3D00F18
	0x03D00CBC LDR X0, [X19 + 0x470]
	0x03D00CC0 CBZ X0, 0x3D00F30
	0x03D00CC4 LDR W8, [X0 + 0x18]
	0x03D00CC8 CMP W8, 0x1
	0x03D00CCC B.LT 0x3D00F14
	0x03D00CD0 LDRB W8, [X19 + 0x484]
	0x03D00CD4 CBZ W8, 0x3D00DE4
	0x03D00CD8 MOV X1, X31
	0x03D00CDC BL 0x35DF194
	0x03D00CE0 B 0x3D00DEC
	0x03D00CE4 LDR X0, [X19 + 0x470]
	0x03D00CE8 CBZ X0, 0x3D00F30
	0x03D00CEC LDR W8, [X0 + 0x18]
	0x03D00CF0 CMP W8, 0x1
	0x03D00CF4 B.LT 0x3D00F14
	0x03D00CF8 LDRB W8, [X19 + 0x484]
	0x03D00CFC CBZ W8, 0x3D00E30
	0x03D00D00 MOV X1, X31
	0x03D00D04 BL 0x35DF194
	0x03D00D08 B 0x3D00E38
	0x03D00D0C ADD X2, X31, 0x10
	0x03D00D10 MOV X0, X19
	0x03D00D14 MOV W1, W31
	0x03D00D18 B 0x3D00F10
	0x03D00D1C LDR X0, [X19 + 0x448]
	0x03D00D20 CBZ X0, 0x3D00F30
	0x03D00D24 LDR X8, [X0]
	0x03D00D28 LDP X9, X1, [X8 + 0x188]
	0x03D00D2C BLR X9
	0x03D00D30 CBZ X0, 0x3D00F30
	0x03D00D34 ADRP X10, 0x3FA000
	0x03D00D38 LDR X8, [X0]
	0x03D00D3C LDR X10, [X10 + 0x2F0]
	0x03D00D40 MOV X20, X0
	0x03D00D44 LDRH W9, [X8 + 0x12E]
	0x03D00D48 LDR X1, [X10]
	0x03D00D4C CBZ X9, 0x3D00D70
	0x03D00D50 LDR X10, [X8 + 0xB0]
	0x03D00D54 ADD X10, X10, 0x8
	0x03D00D58 LDUR X11, [X10 - 0x8]
	0x03D00D5C CMP X11, X1
	0x03D00D60 B.EQ 0x3D00DC0
	0x03D00D64 SUBS X9, X9, 0x1
	0x03D00D68 ADD X10, X10, 0x10
	0x03D00D6C B.NE 0x3D00D58
	0x03D00D70 MOVZ W2, 0x1
	0x03D00D74 MOV X0, X20
	0x03D00D78 BL 0x1C5C788
	0x03D00D7C B 0x3D00DD0
	0x03D00D80 LDR W9, [X10]
	0x03D00D84 ADD W9, W9, 0x1
	0x03D00D88 ADD X8, X8, W9, 0x4, SXTW
	0x03D00D8C ADD X0, X8, 0x138
	0x03D00D90 LDP X8, X1, [X0]
	0x03D00D94 MOV X0, X21
	0x03D00D98 BLR X8
	0x03D00D9C ADD W8, W20, 0x1
	0x03D00DA0 CMP W8, W0
	0x03D00DA4 B.GE 0x3D00DB8
	0x03D00DA8 MOV X0, X19
	0x03D00DAC BL 0x3CFDC08
	0x03D00DB0 ADD W1, W0, 0x1
	0x03D00DB4 B 0x3D00F08
	0x03D00DB8 MOV W0, W31
	0x03D00DBC B 0x3D00F18
	0x03D00DC0 LDR W9, [X10]
	0x03D00DC4 ADD W9, W9, 0x1
	0x03D00DC8 ADD X8, X8, W9, 0x4, SXTW
	0x03D00DCC ADD X0, X8, 0x138
	0x03D00DD0 LDP X8, X1, [X0]
	0x03D00DD4 MOV X0, X20
	0x03D00DD8 BLR X8
	0x03D00DDC SUB W1, W0, 0x1
	0x03D00DE0 B 0x3D00F08
	0x03D00DE4 MOV X1, X31
	0x03D00DE8 BL 0x35DF820
	0x03D00DEC MOV W20, W0
	0x03D00DF0 LDR X0, [X19 + 0x450]
	0x03D00DF4 CBNZ X0, 0x3D00E10
	0x03D00DF8 LDR X8, [X19]
	0x03D00DFC MOV X0, X19
	0x03D00E00 LDR X9, [X8 + 0x7B8]
	0x03D00E04 LDR X1, [X8 + 0x7C0]
	0x03D00E08 BLR X9
	0x03D00E0C LDR X0, [X19 + 0x450]
	0x03D00E10 CBZ X0, 0x3D00F30
	0x03D00E14 LDR X8, [X0]
	0x03D00E18 LDP X9, X1, [X8 + 0x198]
	0x03D00E1C BLR X9
	0x03D00E20 SUB W8, W20, W0
	0x03D00E24 ADD W8, W8, 0x1
	0x03D00E28 BIC W1, W8, W8, 0x1F
	0x03D00E2C B 0x3D00F08
	0x03D00E30 MOV X1, X31
	0x03D00E34 BL 0x35DF820
	0x03D00E38 MOV W20, W0
	0x03D00E3C LDR X0, [X19 + 0x448]
	0x03D00E40 CBZ X0, 0x3D00F30
	0x03D00E44 LDR X8, [X0]
	0x03D00E48 LDP X9, X1, [X8 + 0x188]
	0x03D00E4C BLR X9
	0x03D00E50 CBZ X0, 0x3D00F30
	0x03D00E54 ADRP X10, 0x3FA000
	0x03D00E58 LDR X8, [X0]
	0x03D00E5C LDR X10, [X10 + 0x2F0]
	0x03D00E60 MOV X21, X0
	0x03D00E64 LDRH W9, [X8 + 0x12E]
	0x03D00E68 LDR X1, [X10]
	0x03D00E6C CBZ X9, 0x3D00E90
	0x03D00E70 LDR X10, [X8 + 0xB0]
	0x03D00E74 ADD X10, X10, 0x8
	0x03D00E78 LDUR X11, [X10 - 0x8]
	0x03D00E7C CMP X11, X1
	0x03D00E80 B.EQ 0x3D00EA0
	0x03D00E84 SUBS X9, X9, 0x1
	0x03D00E88 ADD X10, X10, 0x10
	0x03D00E8C B.NE 0x3D00E78
	0x03D00E90 MOVZ W2, 0x1
	0x03D00E94 MOV X0, X21
	0x03D00E98 BL 0x1C5C788
	0x03D00E9C B 0x3D00EB0
	0x03D00EA0 LDR W9, [X10]
	0x03D00EA4 ADD W9, W9, 0x1
	0x03D00EA8 ADD X8, X8, W9, 0x4, SXTW
	0x03D00EAC ADD X0, X8, 0x138
	0x03D00EB0 LDP X8, X1, [X0]
	0x03D00EB4 MOV X0, X21
	0x03D00EB8 BLR X8
	0x03D00EBC LDR X8, [X19 + 0x450]
	0x03D00EC0 MOV W21, W0
	0x03D00EC4 CBNZ X8, 0x3D00EE0
	0x03D00EC8 LDR X8, [X19]
	0x03D00ECC MOV X0, X19
	0x03D00ED0 LDR X9, [X8 + 0x7B8]
	0x03D00ED4 LDR X1, [X8 + 0x7C0]
	0x03D00ED8 BLR X9
	0x03D00EDC LDR X8, [X19 + 0x450]
	0x03D00EE0 CBZ X8, 0x3D00F30
	0x03D00EE4 LDR X9, [X8]
	0x03D00EE8 MOV X0, X8
	0x03D00EEC LDP X10, X1, [X9 + 0x198]
	0x03D00EF0 BLR X10
	0x03D00EF4 ADD W9, W20, W0
	0x03D00EF8 SUB W8, W21, 0x1
	0x03D00EFC SUB W9, W9, 0x1
	0x03D00F00 CMP W8, W9
	0x03D00F04 CSEL W1, W8, W9, LT
	0x03D00F08 ADD X2, X31, 0x10
	0x03D00F0C MOV X0, X19
	0x03D00F10 BL 0x3D01574
	0x03D00F14 MOVZ W0, 0x1
	0x03D00F18 LDP X20, X19, [X31 + 0x40]
	0x03D00F1C LDP X22, X21, [X31 + 0x30]
	0x03D00F20 LDP X30, X23, [X31 + 0x20]
	0x03D00F24 AND W0, W0, 0x1
	0x03D00F28 ADD X31, X31, 0x50
	0x03D00F2C RET
	0x03D00F30 BL 0x1C16F20
	0x03D00F34 STR W21, [X31 + 0xC]
	0x03D00F38 ADRP X0, 0x463000
	0x03D00F3C LDR X0, [X0 + 0xD0]
	0x03D00F40 BL 0x1C16D08
	0x03D00F44 ADD X1, X31, 0xC
	0x03D00F48 BL 0x1C16E04
	0x03D00F4C MOV X19, X0
	0x03D00F50 ADRP X0, 0x3FB000
	0x03D00F54 LDR X0, [X0 + 0x760]
	0x03D00F58 BL 0x1C16D08
	0x03D00F5C BL 0x1C16F10
	0x03D00F60 MOV X20, X0
	0x03D00F64 ADRP X0, 0x3FE000
	0x03D00F68 LDR X0, [X0 + 0xCF8]
	0x03D00F6C BL 0x1C16D08
	0x03D00F70 MOV X1, X0
	0x03D00F74 MOV X0, X20
	0x03D00F78 MOV X2, X19
	0x03D00F7C MOV X3, X31
	0x03D00F80 MOV X4, X31
	0x03D00F84 BL 0x3312C8C
	0x03D00F88 ADRP X0, 0x463000
	0x03D00F8C LDR X0, [X0 + 0xD8]
	0x03D00F90 BL 0x1C16D08
	0x03D00F94 MOV X1, X0
	0x03D00F98 MOV X0, X20
	0x03D00F9C BL 0x1C16DEC
	0x03D00FA0 STP X29, X30, [X31 - 0x60]!
	0x03D00FA4 STP X28, X27, [X31 + 0x10]
	0x03D00FA8 STP X26, X25, [X31 + 0x20]
	0x03D00FAC STP X24, X23, [X31 + 0x30]
	0x03D00FB0 STP X22, X21, [X31 + 0x40]
	0x03D00FB4 STP X20, X19, [X31 + 0x50]
	0x03D00FB8 ADRP X20, 0x6E7000
	0x03D00FBC LDRB W8, [X20 + 0x813]
	0x03D00FC0 MOV X19, X0
	0x03D00FC4 TBNZ X8, 0x0, 0x3D01030
	0x03D00FC8 ADRP X0, 0x3FA000
	0x03D00FCC LDR X0, [X0 + 0x2F0]
	0x03D00FD0 BL 0x1C16CF4
	0x03D00FD4 ADRP X0, 0x3F3000
	0x03D00FD8 LDR X0, [X0 + 0xE00]
	0x03D00FDC BL 0x1C16CF4
	0x03D00FE0 ADRP X0, 0x41D000
	0x03D00FE4 LDR X0, [X0 + 0xF20]
	0x03D00FE8 BL 0x1C16CF4
	0x03D00FEC ADRP X0, 0x41D000
	0x03D00FF0 LDR X0, [X0 + 0xF28]
	0x03D00FF4 BL 0x1C16CF4
	0x03D00FF8 ADRP X0, 0x3F3000
	0x03D00FFC LDR X0, [X0 + 0xE18]
	0x03D01000 BL 0x1C16CF4
	0x03D01004 ADRP X0, 0x3F3000
	0x03D01008 LDR X0, [X0 + 0xE10]
	0x03D0100C BL 0x1C16CF4
	0x03D01010 ADRP X0, 0x3FA000
	0x03D01014 LDR X0, [X0 + 0xF18]
	0x03D01018 BL 0x1C16CF4
	0x03D0101C ADRP X0, 0x3F6000
	0x03D01020 LDR X0, [X0 + 0xB68]
	0x03D01024 BL 0x1C16CF4
	0x03D01028 MOVZ W8, 0x1
	0x03D0102C STRB W8, [X20 + 0x813]
	0x03D01030 LDR X8, [X19]
	0x03D01034 MOV X0, X19
	0x03D01038 LDR X9, [X8 + 0x808]
	0x03D0103C LDR X1, [X8 + 0x810]
	0x03D01040 BLR X9
	0x03D01044 TBZ X0, 0x0, 0x3D01494
	0x03D01048 LDR W8, [X19 + 0x428]
	0x03D0104C CMP W8, 0x2
	0x03D01050 B.NE 0x3D01494
	0x03D01054 LDR X0, [X19 + 0x448]
	0x03D01058 CBZ X0, 0x3D014DC
	0x03D0105C ADRP X26, 0x3F9000
	0x03D01060 ADRP X27, 0x41C000
	0x03D01064 ADRP X25, 0x3F2000
	0x03D01068 ADRP X28, 0x41C000
	0x03D0106C LDR X26, [X26 + 0x2F0]
	0x03D01070 LDR X27, [X27 + 0xF20]
	0x03D01074 LDR X25, [X25 + 0xE18]
	0x03D01078 LDR X28, [X28 + 0xF28]
	0x03D0107C MOV W20, W31
	0x03D01080 LDR X8, [X0]
	0x03D01084 LDP X9, X1, [X8 + 0x188]
	0x03D01088 BLR X9
	0x03D0108C CBZ X0, 0x3D014DC
	0x03D01090 LDR X8, [X0]
	0x03D01094 LDR X1, [X26]
	0x03D01098 MOV X21, X0
	0x03D0109C LDRH W9, [X8 + 0x12E]
	0x03D010A0 CBZ X9, 0x3D010C4
	0x03D010A4 LDR X10, [X8 + 0xB0]
	0x03D010A8 ADD X10, X10, 0x8
	0x03D010AC LDUR X11, [X10 - 0x8]
	0x03D010B0 CMP X11, X1
	0x03D010B4 B.EQ 0x3D010D4
	0x03D010B8 SUBS X9, X9, 0x1
	0x03D010BC ADD X10, X10, 0x10
	0x03D010C0 B.NE 0x3D010AC
	0x03D010C4 MOVZ W2, 0x1
	0x03D010C8 MOV X0, X21
	0x03D010CC BL 0x1C5C788
	0x03D010D0 B 0x3D010E4
	0x03D010D4 LDR W9, [X10]
	0x03D010D8 ADD W9, W9, 0x1
	0x03D010DC ADD X8, X8, W9, 0x4, SXTW
	0x03D010E0 ADD X0, X8, 0x138
	0x03D010E4 LDP X8, X1, [X0]
	0x03D010E8 MOV X0, X21
	0x03D010EC BLR X8
	0x03D010F0 CMP W20, W0
	0x03D010F4 B.GE 0x3D014B0
	0x03D010F8 LDR X0, [X19 + 0x448]
	0x03D010FC CBZ X0, 0x3D014DC
	0x03D01100 LDR X8, [X0]
	0x03D01104 MOV W1, W20
	0x03D01108 LDP X9, X2, [X8 + 0x1F8]
	0x03D0110C BLR X9
	0x03D01110 LDR X8, [X19 + 0x448]
	0x03D01114 CBZ X8, 0x3D014DC
	0x03D01118 LDR X9, [X8]
	0x03D0111C MOV W22, W0
	0x03D01120 MOV X0, X8
	0x03D01124 MOV W1, W20
	0x03D01128 LDR X10, [X9 + 0x208]
	0x03D0112C LDR X2, [X9 + 0x210]
	0x03D01130 BLR X10
	0x03D01134 MOV X21, X0
	0x03D01138 MOV X0, X19
	0x03D0113C BL 0x3CFEC08
	0x03D01140 CBZ X0, 0x3D014DC
	0x03D01144 LDR X8, [X0]
	0x03D01148 LDR X1, [X27]
	0x03D0114C MOV X23, X0
	0x03D01150 LDRH W9, [X8 + 0x12E]
	0x03D01154 CBZ X9, 0x3D01178
	0x03D01158 LDR X10, [X8 + 0xB0]
	0x03D0115C ADD X10, X10, 0x8
	0x03D01160 LDUR X11, [X10 - 0x8]
	0x03D01164 CMP X11, X1
	0x03D01168 B.EQ 0x3D01188
	0x03D0116C SUBS X9, X9, 0x1
	0x03D01170 ADD X10, X10, 0x10
	0x03D01174 B.NE 0x3D01160
	0x03D01178 MOV X0, X23
	0x03D0117C MOV W2, W31
	0x03D01180 BL 0x1C5C788
	0x03D01184 B 0x3D01194
	0x03D01188 LDRSW X9, [X10]
	0x03D0118C ADD X8, X8, X9, 0x4, LSL
	0x03D01190 ADD X0, X8, 0x138
	0x03D01194 LDP X8, X1, [X0]
	0x03D01198 MOV X0, X23
	0x03D0119C BLR X8
	0x03D011A0 MOV X23, X0
	0x03D011A4 CBZ X0, 0x3D0145C
	0x03D011A8 LDR X8, [X23]
	0x03D011AC LDR X1, [X25]
	0x03D011B0 LDRH W9, [X8 + 0x12E]
	0x03D011B4 CBZ X9, 0x3D011D8
	0x03D011B8 LDR X10, [X8 + 0xB0]
	0x03D011BC ADD X10, X10, 0x8
	0x03D011C0 LDUR X11, [X10 - 0x8]
	0x03D011C4 CMP X11, X1
	0x03D011C8 B.EQ 0x3D011E8
	0x03D011CC SUBS X9, X9, 0x1
	0x03D011D0 ADD X10, X10, 0x10
	0x03D011D4 B.NE 0x3D011C0
	0x03D011D8 MOV X0, X23
	0x03D011DC MOV W2, W31
	0x03D011E0 BL 0x1C5C788
	0x03D011E4 B 0x3D011F4
	0x03D011E8 LDRSW X9, [X10]
	0x03D011EC ADD X8, X8, X9, 0x4, LSL
	0x03D011F0 ADD X0, X8, 0x138
	0x03D011F4 LDP X8, X1, [X0]
	0x03D011F8 MOV X0, X23
	0x03D011FC BLR X8
	0x03D01200 TBZ X0, 0x0, 0x3D01288
	0x03D01204 LDR X8, [X23]
	0x03D01208 LDR X1, [X28]
	0x03D0120C LDRH W9, [X8 + 0x12E]
	0x03D01210 CBZ X9, 0x3D01234
	0x03D01214 LDR X10, [X8 + 0xB0]
	0x03D01218 ADD X10, X10, 0x8
	0x03D0121C LDUR X11, [X10 - 0x8]
	0x03D01220 CMP X11, X1
	0x03D01224 B.EQ 0x3D01244
	0x03D01228 SUBS X9, X9, 0x1
	0x03D0122C ADD X10, X10, 0x10
	0x03D01230 B.NE 0x3D0121C
	0x03D01234 MOV X0, X23
	0x03D01238 MOV W2, W31
	0x03D0123C BL 0x1C5C788
	0x03D01240 B 0x3D01250
	0x03D01244 LDRSW X9, [X10]
	0x03D01248 ADD X8, X8, X9, 0x4, LSL
	0x03D0124C ADD X0, X8, 0x138
	0x03D01250 LDP X8, X1, [X0]
	0x03D01254 MOV X0, X23
	0x03D01258 BLR X8
	0x03D0125C MOV X8, X0
	0x03D01260 CBZ X0, 0x3D01454
	0x03D01264 LDR W9, [X8 + 0x24]
	0x03D01268 CMP W9, W22
	0x03D0126C B.NE 0x3D011A8
	0x03D01270 LDR X9, [X8]
	0x03D01274 LDP X10, X2, [X9 + 0x1C8]
	0x03D01278 MOVZ W1, 0x1
	0x03D0127C MOV X0, X8
	0x03D01280 BLR X10
	0x03D01284 B 0x3D011A8
	0x03D01288 MOV X24, X31
	0x03D0128C MOVZ W29, 0x9
	0x03D01290 CBZ X23, 0x3D012F4
	0x03D01294 LDR X8, [X23]
	0x03D01298 ADRP X10, 0x3F2000
	0x03D0129C LDRH W9, [X8 + 0x12E]
	0x03D012A0 LDR X10, [X10 + 0xE00]
	0x03D012A4 LDR X1, [X10]
	0x03D012A8 CBZ X9, 0x3D012CC
	0x03D012AC LDR X10, [X8 + 0xB0]
	0x03D012B0 ADD X10, X10, 0x8
	0x03D012B4 LDUR X11, [X10 - 0x8]
	0x03D012B8 CMP X11, X1
	0x03D012BC B.EQ 0x3D012DC
	0x03D012C0 SUBS X9, X9, 0x1
	0x03D012C4 ADD X10, X10, 0x10
	0x03D012C8 B.NE 0x3D012B4
	0x03D012CC MOV X0, X23
	0x03D012D0 MOV W2, W31
	0x03D012D4 BL 0x1C5C788
	0x03D012D8 B 0x3D012E8
	0x03D012DC LDRSW X9, [X10]
	0x03D012E0 ADD X8, X8, X9, 0x4, LSL
	0x03D012E4 ADD X0, X8, 0x138
	0x03D012E8 LDP X8, X1, [X0]
	0x03D012EC MOV X0, X23
	0x03D012F0 BLR X8

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X20, 0x6E8000
	012 Move W8, [X20+2054]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {59}
	018 Move X0, 0x463000
	019 Move X0, [X0+2784]
	020 Call 0x1C17CF4
	021 Move X0, 0x41E000
	022 Move X0, [X0+2272]
	023 Call 0x1C17CF4
	024 Move X0, 0x41F000
	025 Move X0, [X0+2840]
	026 Call 0x1C17CF4
	027 Move X0, 0x41F000
	028 Move X0, [X0+2856]
	029 Call 0x1C17CF4
	030 Move X0, 0x41F000
	031 Move X0, [X0+2872]
	032 Call 0x1C17CF4
	033 Move X0, 0x3F5000
	034 Move X0, [X0+3600]
	035 Call 0x1C17CF4
	036 Move X0, 0x3FC000
	037 Move X0, [X0+3864]
	038 Call 0x1C17CF4
	039 Move X0, 0x3FC000
	040 Move X0, [X0+3872]
	041 Call 0x1C17CF4
	042 Move X0, 0x3FB000
	043 Move X0, [X0+2136]
	044 Call 0x1C17CF4
	045 Move X0, 0x3F8000
	046 Move X0, [X0+2920]
	047 Call 0x1C17CF4
	048 Move X0, 0x41F000
	049 Move X0, [X0+2896]
	050 Call 0x1C17CF4
	051 Move X0, 0x3F5000
	052 Move X0, [X0+3624]
	053 Call 0x1C17CF4
	054 Move X0, 0x463000
	055 Move X0, [X0+2792]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+2054], W8
	059 Move [X31+104], X31
	060 Move [X31+112], X31
	061 Move [X31+88], X31
	062 Move [X31+96], X31
	063 Move [X31+136], X31
	064 Move [X31+64], X31
	065 Move [X31+72], X31
	066 Move [X31+80], X31
	067 Move [X31+32], X31
	068 Move [X31+40], X31
	069 Move [X31+48], X31
	070 Move [X31+112], X19
	071 Move [X31+120], X31
	072 Move [X31+104], W31
	073 Move X8, [X19+1136]
	074 Compare X8, 0
	075 JumpIfEqual {340}
	076 Move W8, [X8+24]
	077 Move [X31+120], W8
	078 Move X8, [X19+1144]
	079 Compare X8, 0
	080 JumpIfEqual {340}
	081 Move W2, [X8+24]
	082 Move W9, [X8+28]
	083 Add W9, W9, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move [X8+24], W31
	086 Move [X8+28], W9
	087 Move X0, [X8+16]
	088 Move W1, W31
	089 Move X3, X31
	090 Call Array.Clear, X0, X1, X2
	091 Move X0, [X19+1096]
	092 Compare X0, 0
	093 JumpIfEqual {191}
	094 Move X8, [X0]
	095 Move X9, [X8+392]
	096 Move X1, [X8+400]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Compare X0, 0
	099 JumpIfEqual {191}
	100 Move X8, [X19+1128]
	101 Compare X8, 0
	102 JumpIfEqual {340}
	103 Move W8, [X8+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, 0x41E000
	106 Move X8, [X8+2272]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X8, 0x463000
	113 Move X8, [X8+2784]
	114 Add X0, X31, 136
	115 Move X1, [X8]
	116 Call CollectionPool`2<Object, Int32>.Get, X0
	117 Move [X31+88], X0
	118 Move [X31+96], X1
	119 Move X0, [X19+1128]
	120 Compare X0, 0
	121 JumpIfEqual {341}
	122 Move X26, 0x41F000
	123 Move X26, [X26+2896]
	124 Move X1, [X26]
	125 Add X8, X31, 8
	126 Call List`1<Int32>.GetEnumerator, X0
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 Move X8, [X31+24]
	129 Move X23, 0x41F000
	130 Move X21, 0x3F8000
	131 Move X23, [X23+2856]
	132 Move X21, [X21+2920]
	133 Move [X31+4], V0
	134 Move [X31+80], X8
	135 Move X24, 0x3F5000
	136 Move X24, [X24+3600]
	137 Move W22, W31
	138 Move X1, [X23]
	139 Move W25, W22
	140 Add X0, X31, 64
	141 Call Enumerator<Int32>.MoveNext, X0
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {212}
	146 Move X0, [X19+1096]
	147 Compare X0, 0
	148 JumpIfEqual {327}
	149 Move X8, [X0]
	150 Move W1, [X31+80]
	151 Move X9, [X8+488]
	152 Move X2, [X8+496]
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move W20, W0
	155 Move W22, 1
	156 Move TEMP, X0
	157 And TEMP, TEMP, -2147483648
	158 Compare TEMP, -2147483648
	159 JumpIfEqual {138}
	160 Move X0, [X19+1136]
	161 Compare X0, 0
	162 JumpIfEqual {336}
	163 Move X2, [X21]
	164 Move W1, W20
	165 Call List`1<Int32>.Contains, X0, X1
	166 Move W8, W0
	167 Move X0, [X31+136]
	168 And W31, W8, 1
	169 NotImplemented "Instruction CSINC not yet implemented."
	170 Compare X0, 0
	171 JumpIfEqual {334}
	172 Move W10, [X0+28]
	173 Move X8, [X0+16]
	174 Move X9, [X24]
	175 Add W10, W10, 1
	176 Move [X0+28], W10
	177 Compare X8, 0
	178 JumpIfEqual {338}
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Move W11, [X8+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Add W9, W10, 1
	183 Add X8, X8, X10
	184 Move [X0+24], W9
	185 Move [X8+32], W20
	186 Move X8, [X9+32]
	187 Move X8, [X8+192]
	188 Move X2, [X8+112]
	189 Move W1, W20
	190 Call List`1<Int32>.AddWithResize, X0, X1
	191 Move X8, [X19+1136]
	192 Compare X8, 0
	193 JumpIfEqual {340}
	194 Move W9, [X8+28]
	195 Add W9, W9, 1
	196 Move [X8+24], W31
	197 Move [X8+28], W9
	198 Add X1, X31, 104
	199 Move X0, X19
	200 Call BaseVerticalCollectionView.<RefreshSelection>g__NotifyIfChanged|170_0, X0, X1
	201 Move X20, [X31+192]
	202 Move X19, [X31+200]
	203 Move X22, [X31+176]
	204 Move X21, [X31+184]
	205 Move X24, [X31+160]
	206 Move X23, [X31+168]
	207 Move X26, [X31+144]
	208 Move X25, [X31+152]
	209 Move X30, [X31+128]
	210 Add X31, X31, 208
	211 Return 
	212 Move X20, X31
	213 Move [X31+104], W25
	214 Move W21, 11
	215 Move X25, 0x41F000
	216 Move X25, [X25+2840]
	217 Move X1, [X25]
	218 Add X0, X31, 64
	219 Call Enumerator<Int32>.Dispose, X0
	220 Compare X20, 0
	221 JumpIfNotEqual {342}
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Compare W21, 0
	224 JumpIfNotEqual {320}
	225 Move X8, [X19+1136]
	226 Compare X8, 0
	227 JumpIfEqual {344}
	228 Move W9, [X8+28]
	229 Add W9, W9, 1
	230 Move [X8+24], W31
	231 Move [X8+28], W9
	232 Move X0, [X31+136]
	233 Compare X0, 0
	234 JumpIfEqual {345}
	235 Move X1, [X26]
	236 Add X8, X31, 8
	237 Call List`1<Int32>.GetEnumerator, X0
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 Move X8, [X31+24]
	240 Move X22, 0x3FC000
	241 Move [X31+2], V0
	242 Move [X31+48], X8
	243 Move X22, [X22+3864]
	244 Move X1, [X23]
	245 Add X0, X31, 32
	246 Call Enumerator<Int32>.MoveNext, X0
	247 Move TEMP, X0
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfNotEqual {305}
	251 Move X0, [X19+1136]
	252 Compare X0, 0
	253 JumpIfEqual {332}
	254 Move W10, [X0+28]
	255 Move W20, [X31+48]
	256 Move X8, [X0+16]
	257 Move X9, [X24]
	258 Add W10, W10, 1
	259 Move [X0+28], W10
	260 Compare X8, 0
	261 JumpIfEqual {333}
	262 NotImplemented "Instruction LDRSW not yet implemented."
	263 Move W11, [X8+24]
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Add W9, W10, 1
	266 Add X8, X8, X10
	267 Move [X0+24], W9
	268 Move [X8+32], W20
	269 Move X8, [X9+32]
	270 Move X8, [X8+192]
	271 Move X2, [X8+112]
	272 Move W1, W20
	273 Call List`1<Int32>.AddWithResize, X0, X1
	274 Move X0, [X19+1096]
	275 Compare X0, 0
	276 JumpIfEqual {330}
	277 Move X8, [X0]
	278 Move X21, [X19+1144]
	279 Move X9, [X8+520]
	280 Move X2, [X8+528]
	281 Move W1, W20
	282 NotImplemented "Instruction BLR not yet implemented."
	283 Move X1, X0
	284 Compare X21, 0
	285 JumpIfEqual {331}
	286 Move W10, [X21+28]
	287 Move X8, [X21+16]
	288 Move X9, [X22]
	289 Add W10, W10, 1
	290 Move [X21+28], W10
	291 Compare X8, 0
	292 JumpIfEqual {329}
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Move W11, [X8+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Add W9, W10, 1
	297 Add X8, X8, X10
	298 Move [X21+24], W9
	299 Move [X8+32], X1
	300 Move X8, [X9+32]
	301 Move X8, [X8+192]
	302 Move X2, [X8+112]
	303 Move X0, X21
	304 Call List`1<Object>.AddWithResize, X0, X1
	305 Move X20, X31
	306 Move W21, 14
	307 Move X1, [X25]
	308 Add X0, X31, 32
	309 Call Enumerator<Int32>.Dispose, X0
	310 Compare X20, 0
	311 JumpIfNotEqual {346}
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Compare W21, 0
	314 JumpIfNotEqual {320}
	315 Move X8, 0x462000
	316 Move X8, [X8+2792]
	317 Add X0, X31, 88
	318 Move X1, [X8]
	319 Call 0x24A7D20, X0
	320 Move X8, 0x462000
	321 Move X8, [X8+2792]
	322 Add X0, X31, 88
	323 Move X1, [X8]
	324 Call 0x24A7D20, X0
	325 Compare W21, 0
	326 JumpIfNotEqual {201}
	327 Move [X31+104], W25
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Call 0x1C17F20
	331 Call 0x1C17F20
	332 Call 0x1C17F20
	333 Call 0x1C17F20
	334 Move [X31+104], W22
	335 Call 0x1C17F20
	336 Move [X31+104], W25
	337 Call 0x1C17F20
	338 Move [X31+104], W22
	339 Call 0x1C17F20
	340 Call 0x1C17F20
	341 Call 0x1C17F20
	342 Move X0, X20
	343 Call 0x1C17F18
	344 Call 0x1C17F20
	345 Call 0x1C17F20
	346 Move X0, X20
	347 Call 0x1C17F18
	348 Move X21, X1
	349 Move X22, X0
	350 Move W8, W22
	351 Move X21, X1
	352 Move X22, X0
	353 Move [X31+104], W8
	354 Move X21, X1
	355 Move X22, X0
	356 Move [X31+104], W25
	357 Move X21, X1
	358 Move X22, X0
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X0, X22
	361 Call 0x3EB2AD0
	362 Move X20, [X0]
	363 Call 0x3EB2AE0
	364 Move W21, W31
	365 Move X20, X31
	366 Move X8, 0x41E000
	367 Move X8, [X8+2840]
	368 Move X1, [X8]
	369 Add X0, X31, 64
	370 Call Enumerator<Int32>.Dispose, X0
	371 Compare X20, 0
	372 JumpIfEqual {391}
	373 Move X0, X20
	374 Call 0x1C17F18
	375 Move X21, X1
	376 Move X22, X0
	377 Move X21, X1
	378 Move X22, X0
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X0, X22
	381 Call 0x3EB2AD0
	382 Move X20, [X0]
	383 Call 0x3EB2AE0
	384 Move W21, W31
	385 Move X20, X31
	386 Move X1, [X25]
	387 Add X0, X31, 32
	388 Call Enumerator<Int32>.Dispose, X0
	389 Compare X20, 0
	390 JumpIfNotEqual {406}
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X0, X22
	393 Call 0x3EB2AD0
	394 Move X21, [X0]
	395 Call 0x3EB2AE0
	396 Move X8, 0x462000
	397 Move X8, [X8+2792]
	398 Add X0, X31, 88
	399 Move X1, [X8]
	400 Call 0x24A7D20, X0
	401 Compare X21, 0
	402 JumpIfEqual {198}
	403 Move X0, X21
	404 Call 0x1C17F18
	405 Move X21, X31
	406 Move X0, X20
	407 Call 0x1C17F18
	408 Move X21, X1
	409 Move X22, X0
	410 Move X22, X0
	411 Move X8, 0x462000
	412 Move X8, [X8+2792]
	413 Move X1, [X8]
	414 Add X0, X31, 88
	415 Call 0x24A7D20, X0
	416 Compare X21, 0
	417 JumpIfNotEqual {420}
	418 Move X0, X22
	419 Call 0x1D2D690
	420 Move X0, X21
	421 Call 0x1C17F18
	422 Call 0x1991590

Method: System.Void PostRefresh()

Disassembly:
	0x03D01364 STR W9, [X0 + 0x18]
	0x03D01368 STR W22, [X8 + 0x20]
	0x03D0136C B 0x3D01384
	0x03D01370 LDR X8, [X9 + 0x20]
	0x03D01374 MOV W1, W22
	0x03D01378 LDR X8, [X8 + 0xC0]
	0x03D0137C LDR X2, [X8 + 0x70]
	0x03D01380 BL 0x2FDC70C
	0x03D01384 LDR X0, [X19 + 0x470]
	0x03D01388 CBZ X0, 0x3D014DC
	0x03D0138C ADRP X9, 0x3F3000
	0x03D01390 LDR W10, [X0 + 0x1C]
	0x03D01394 LDR X8, [X0 + 0x10]
	0x03D01398 LDR X9, [X9 + 0xE10]
	0x03D0139C ADD W10, W10, 0x1
	0x03D013A0 LDR X9, [X9]
	0x03D013A4 STR W10, [X0 + 0x1C]
	0x03D013A8 CBZ X8, 0x3D014DC
	0x03D013AC LDRSW X10, [X0 + 0x18]
	0x03D013B0 LDR W11, [X8 + 0x18]
	0x03D013B4 CMP W10, W11
	0x03D013B8 B.CS 0x3D013D0
	0x03D013BC ADD W9, W10, 0x1
	0x03D013C0 ADD X8, X8, X10, 0x2, LSL
	0x03D013C4 STR W9, [X0 + 0x18]
	0x03D013C8 STR W20, [X8 + 0x20]
	0x03D013CC B 0x3D013E4
	0x03D013D0 LDR X8, [X9 + 0x20]
	0x03D013D4 MOV W1, W20
	0x03D013D8 LDR X8, [X8 + 0xC0]
	0x03D013DC LDR X2, [X8 + 0x70]
	0x03D013E0 BL 0x2FDC70C
	0x03D013E4 LDR X0, [X19 + 0x478]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+2056]
	006 Move X1, [X8+2064]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {37}
	012 Move X0, [X19+1088]
	013 Compare X0, 0
	014 JumpIfEqual {40}
	015 Move X1, X31
	016 Call VisualElement.get_layout, X0
	017 Move X0, [X19+1088]
	018 Move [X19+1152], S3
	019 Compare X0, 0
	020 JumpIfEqual {40}
	021 Move X1, X31
	022 Call VisualElement.get_layout, X0
	023 Move W8, S3
	024 And W8, W8, 0x7FFFFFFF
	025 Move W9, 0x7F800000
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, [X19+1088]
	028 Compare X0, 0
	029 JumpIfEqual {40}
	030 Move X1, X31
	031 Call VisualElement.get_layout, X0
	032 Move V0, V2
	033 Move V1, V3
	034 Move X0, X19
	035 Move X30, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 Return 
	040 Call 0x1C17F20

Method: System.Void ScrollToItem(System.Int32 index)

Disassembly:
	0x03CFEE14 LDR X8, [X8 + 0xB8]
	0x03CFEE18 LDP X22, X21, [X31 + 0x10]
	0x03CFEE1C MOV X3, X31
	0x03CFEE20 LDR X1, [X8 + 0x30]
	0x03CFEE24 LDR X30, [X31], #0x30
	0x03CFEE28 B 0x3DF1E80
	0x03CFEE2C BL 0x1C16F20
	0x03CFEE30 STR X30, [X31 - 0x20]!
	0x03CFEE34 STP X20, X19, [X31 + 0x10]
	0x03CFEE38 ADRP X20, 0x6E9000
	0x03CFEE3C LDRB W8, [X20 + 0x7FB]
	0x03CFEE40 MOV X19, X0
	0x03CFEE44 TBNZ X8, 0x0, 0x3CFEE74
	0x03CFEE48 ADRP X0, 0x464000
	0x03CFEE4C LDR X0, [X0 + 0xFF8]
	0x03CFEE50 BL 0x1C16CF4
	0x03CFEE54 ADRP X0, 0x3FF000
	0x03CFEE58 LDR X0, [X0 + 0x170]
	0x03CFEE5C BL 0x1C16CF4
	0x03CFEE60 ADRP X0, 0x3F9000
	0x03CFEE64 LDR X0, [X0 + 0xFD8]
	0x03CFEE68 BL 0x1C16CF4
	0x03CFEE6C MOVZ W8, 0x1
	0x03CFEE70 STRB W8, [X20 + 0x7FB]
	0x03CFEE74 LDR X8, [X19 + 0x488]
	0x03CFEE78 CBZ X8, 0x3CFEECC
	0x03CFEE7C LDR X19, [X8 + 0x70]
	0x03CFEE80 CBZ X19, 0x3CFEECC
	0x03CFEE84 ADRP X10, 0x464000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move W19, W1
	006 Move X20, X0
	007 Move X9, [X8+2056]
	008 Move X8, [X8+2064]
	009 Move X1, X8
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {34}
	015 Move X0, [X20+1104]
	016 Compare X0, 0
	017 JumpIfNotEqual {24}
	018 Move X8, [X20]
	019 Move X0, X20
	020 Move X9, [X8+1976]
	021 Move X1, [X8+1984]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, [X20+1104]
	024 Compare X0, 0
	025 JumpIfEqual {38}
	026 Move X8, [X0]
	027 Move W1, W19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X3, [X8+440]
	031 Move X2, [X8+448]
	032 Move X30, [X31+32]
	033 CallNoReturn X3
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Return 
	038 Call 0x1C17F20

Method: System.Void ScrollToItemById(System.Int32 id)

Disassembly:
	0x03CFECF8 SUB X31, X31, 0x30
	0x03CFECFC STP D9, D8, [X31 + 0x10]
	0x03CFED00 STP X30, X19, [X31 + 0x20]
	0x03CFED04 MOV X1, X31
	0x03CFED08 MOV V9.16B, V0.16B
	0x03CFED0C MOV X19, X0
	0x03CFED10 BL 0x3DEC4BC
	0x03CFED14 FCMP S9, 0x0
	0x03CFED18 MOV V8.16B, V0.16B
	0x03CFED1C B.PL 0x3CFED24
	0x03CFED20 LDR V9, [X19 + 0x434]
	0x03CFED24 FMUL S9, S8, S9
	0x03CFED28 FCVT S0, S9
	0x03CFED2C ADD X0, X31, 0x8
	0x03CFED30 BL 0x3EB1C00
	0x03CFED34 FCMP S9, 0x0
	0x03CFED38 B.GE 0x3CFED54
	0x03CFED3C FMOV D1, -0.5
	0x03CFED40 FCMP D0, D1
	0x03CFED44 B.NE 0x3CFED80
	0x03CFED48 LDR V0, [X31 + 0x8]
	0x03CFED4C FMOV S1, -1
	0x03CFED50 B 0x3CFED68
	0x03CFED54 FMOV D1, 0.5
	0x03CFED58 FCMP D0, D1
	0x03CFED5C B.NE 0x3CFED90
	0x03CFED60 LDR V0, [X31 + 0x8]
	0x03CFED64 FMOV S1, 1
	0x03CFED68 FCVTZS X8, D0
	0x00000000 INVALID
	0x03CFED70 FADD S1, S0, S1
	0x03CFED74 ANDS X31, X8, 0x1
	0x03CFED78 FCSEL S0, S0, S1, EQ
	0x03CFED7C B 0x3CFED9C
	0x03CFED80 FMOV S0, -0.5
	0x03CFED84 FADD S0, S9, S0
	0x03CFED88 FRINTP S0, S0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move W20, W1
	006 Move X19, X0
	007 Move X9, [X8+2056]
	008 Move X8, [X8+2064]
	009 Move X1, X8
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {44}
	015 Move X0, [X19+1096]
	016 Compare X0, 0
	017 JumpIfEqual {48}
	018 Move X8, [X0]
	019 Move W1, W20
	020 Move X9, [X8+488]
	021 Move X2, [X8+496]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X8, [X19+1104]
	024 Move W20, W0
	025 Compare X8, 0
	026 JumpIfNotEqual {33}
	027 Move X8, [X19]
	028 Move X0, X19
	029 Move X9, [X8+1976]
	030 Move X1, [X8+1984]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X19+1104]
	033 Compare X8, 0
	034 JumpIfEqual {48}
	035 Move X9, [X8]
	036 Move W1, W20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X0, X8
	040 Move X3, [X9+440]
	041 Move X2, [X9+448]
	042 Move X30, [X31+32]
	043 CallNoReturn X3
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void OnScroll(UnityEngine.Vector2 offset)

Disassembly:
	0x03D01478 B.NE 0x3D014E8
	0x03D0147C BL 0x3EB1AD0
	0x03D01480 LDR X24, [X0]
	0x03D01484 BL 0x3EB1AE0
	0x03D01488 MOV W29, W31
	0x03D0148C CBNZ X23, 0x3D01294
	0x03D01490 B 0x3D012F4
	0x03D01494 LDP X20, X19, [X31 + 0x50]
	0x03D01498 LDP X22, X21, [X31 + 0x40]
	0x03D0149C LDP X24, X23, [X31 + 0x30]
	0x03D014A0 LDP X26, X25, [X31 + 0x20]
	0x03D014A4 LDP X28, X27, [X31 + 0x10]
	0x03D014A8 LDP X29, X30, [X31], #0x60
	0x03D014AC RET
	0x03D014B0 MOV X0, X19
	0x03D014B4 BL 0x3D034FC
	0x03D014B8 MOV X0, X19
	0x03D014BC LDP X20, X19, [X31 + 0x50]
	0x03D014C0 LDP X22, X21, [X31 + 0x40]
	0x03D014C4 LDP X24, X23, [X31 + 0x30]
	0x03D014C8 LDP X26, X25, [X31 + 0x20]
	0x03D014CC LDP X28, X27, [X31 + 0x10]
	0x03D014D0 MOV X1, X31
	0x03D014D4 LDP X29, X30, [X31], #0x60
	0x03D014D8 B 0x3DF276C
	0x03D014DC BL 0x1C16F20
	0x03D014E0 MOV X0, X24
	0x03D014E4 BL 0x1C16F18
	0x03D014E8 MOV X19, X0
	0x03D014EC MOV X24, X31

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move V8, V1
	007 Move X19, X0
	008 Move V9, V0
	009 Move X9, [X8+2056]
	010 Move X1, [X8+2064]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {37}
	016 Move X0, [X19+1104]
	017 Compare X0, 0
	018 JumpIfNotEqual {25}
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+1976]
	022 Move X1, [X8+1984]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X0, [X19+1104]
	025 Compare X0, 0
	026 JumpIfEqual {42}
	027 Move X8, [X0]
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Move V0, V9
	031 Move V1, V8
	032 Move X2, [X8+472]
	033 Move X1, [X8+480]
	034 Move D9, [X31+32]
	035 Move D8, [X31+40]
	036 CallNoReturn X2
	037 Move X30, [X31+16]
	038 Move X19, [X31+24]
	039 Move D9, [X31+32]
	040 Move D8, [X31+40]
	041 Return 
	042 Call 0x1C17F20

Method: System.Void Resize(UnityEngine.Vector2 size)

Disassembly:
	0x03D013E8 CBZ X0, 0x3D014DC
	0x03D013EC ADRP X9, 0x3FA000
	0x03D013F0 LDR W10, [X0 + 0x1C]
	0x03D013F4 LDR X8, [X0 + 0x10]
	0x03D013F8 LDR X9, [X9 + 0xF18]
	0x03D013FC ADD W10, W10, 0x1
	0x03D01400 LDR X9, [X9]
	0x03D01404 STR W10, [X0 + 0x1C]
	0x03D01408 CBZ X8, 0x3D014DC
	0x03D0140C LDRSW X10, [X0 + 0x18]
	0x03D01410 LDR W11, [X8 + 0x18]
	0x03D01414 CMP W10, W11
	0x03D01418 B.CS 0x3D01430
	0x03D0141C ADD W9, W10, 0x1
	0x03D01420 ADD X8, X8, X10, 0x3, LSL
	0x03D01424 STR W9, [X0 + 0x18]
	0x03D01428 STR X21, [X8 + 0x20]
	0x03D0142C B 0x3D01444
	0x03D01430 LDR X8, [X9 + 0x20]
	0x03D01434 MOV X1, X21
	0x03D01438 LDR X8, [X8 + 0xC0]
	0x03D0143C LDR X2, [X8 + 0x70]
	0x03D01440 BL 0x301BF90
	0x03D01444 LDR X0, [X19 + 0x448]
	0x03D01448 ADD W20, W20, 0x1
	0x03D0144C CBNZ X0, 0x3D01080
	0x03D01450 B 0x3D014DC
	0x03D01454 BL 0x1C16F20
	0x03D01458 B 0x3D014F4
	0x03D0145C BL 0x1C16F20
	0x03D01460 B 0x3D014F4
	0x03D01464 B 0x3D01474
	0x03D01468 B 0x3D01474
	0x03D0146C B 0x3D01474
	0x03D01470 B 0x3D01474
	0x03D01474 CMP W1, 0x1

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X0+1104]
	007 Move V8, V1
	008 Move V9, V0
	009 Compare X0, 0
	010 JumpIfNotEqual {17}
	011 Move X8, [X19]
	012 Move X0, X19
	013 Move X9, [X8+1976]
	014 Move X1, [X8+1984]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X0, [X19+1104]
	017 Compare X0, 0
	018 JumpIfEqual {45}
	019 Move X8, [X0]
	020 Move V0, V9
	021 Move V1, V8
	022 Move X9, [X8+456]
	023 Move X1, [X8+464]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X19+1104]
	026 Move [X19+1152], S8
	027 Compare X0, 0
	028 JumpIfNotEqual {35}
	029 Move X8, [X19]
	030 Move X0, X19
	031 Move X9, [X8+1976]
	032 Move X1, [X8+1984]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X0, [X19+1104]
	035 Compare X0, 0
	036 JumpIfEqual {45}
	037 Move X8, [X0]
	038 Move X30, [X31+16]
	039 Move X19, [X31+24]
	040 Move X2, [X8+568]
	041 Move X1, [X8+576]
	042 Move D9, [X31+32]
	043 Move D8, [X31+40]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Void OnAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent evt)

Disassembly:
	0x03D014F0 B 0x3D014F8
	0x03D014F4 MOV X19, X0
	0x03D014F8 CBZ X23, 0x3D0155C
	0x03D014FC LDR X8, [X23]
	0x03D01500 ADRP X10, 0x3F2000
	0x03D01504 LDRH W9, [X8 + 0x12E]
	0x03D01508 LDR X10, [X10 + 0xE00]
	0x03D0150C LDR X1, [X10]
	0x03D01510 CBZ X9, 0x3D01534
	0x03D01514 LDR X10, [X8 + 0xB0]
	0x03D01518 ADD X10, X10, 0x8
	0x03D0151C LDUR X11, [X10 - 0x8]
	0x03D01520 CMP X11, X1
	0x03D01524 B.EQ 0x3D01544
	0x03D01528 SUBS X9, X9, 0x1
	0x03D0152C ADD X10, X10, 0x10
	0x03D01530 B.NE 0x3D0151C
	0x03D01534 MOV X0, X23
	0x03D01538 MOV W2, W31
	0x03D0153C BL 0x1C5C788
	0x03D01540 B 0x3D01550
	0x03D01544 LDRSW X9, [X10]
	0x03D01548 ADD X8, X8, X9, 0x4, LSL
	0x03D0154C ADD X0, X8, 0x138
	0x03D01550 LDP X8, X1, [X0]
	0x03D01554 MOV X0, X23
	0x03D01558 BLR X8
	0x03D0155C CBNZ X24, 0x3D01568
	0x03D01560 MOV X0, X19
	0x03D01564 BL 0x1D2C690
	0x03D01568 MOV X0, X24
	0x03D0156C BL 0x1C16F18
	0x03D01570 BL 0x1990590
	0x03D01574 STR X30, [X31 - 0x30]!
	0x03D01578 STP X22, X21, [X31 + 0x10]
	0x03D0157C STP X20, X19, [X31 + 0x20]
	0x03D01580 ADRP X22, 0x6E6000
	0x03D01584 LDRB W8, [X22 + 0x821]
	0x03D01588 MOV X21, X2
	0x03D0158C MOV W19, W1
	0x03D01590 MOV X20, X0
	0x03D01594 TBNZ X8, 0x0, 0x3D015B8
	0x03D01598 ADRP X0, 0x3F9000
	0x03D0159C LDR X0, [X0 + 0x2F0]
	0x03D015A0 BL 0x1C16CF4
	0x03D015A4 ADRP X0, 0x3F3000
	0x03D015A8 LDR X0, [X0 + 0xE28]
	0x03D015AC BL 0x1C16CF4
	0x03D015B0 MOVZ W8, 0x1
	0x03D015B4 STRB W8, [X22 + 0x821]
	0x03D015B8 TBNZ X19, 0x1F, 0x3D0167C
	0x03D015BC LDR X0, [X20 + 0x448]
	0x03D015C0 CBZ X0, 0x3D016B0
	0x03D015C4 LDR X8, [X0]
	0x03D015C8 LDP X9, X1, [X8 + 0x188]
	0x03D015CC BLR X9
	0x03D015D0 CBZ X0, 0x3D016B0
	0x03D015D4 ADRP X10, 0x3F9000
	0x03D015D8 LDR X8, [X0]
	0x03D015DC LDR X10, [X10 + 0x2F0]
	0x03D015E0 MOV X22, X0
	0x03D015E4 LDRH W9, [X8 + 0x12E]
	0x03D015E8 LDR X1, [X10]
	0x03D015EC CBZ X9, 0x3D01610
	0x03D015F0 LDR X10, [X8 + 0xB0]
	0x03D015F4 ADD X10, X10, 0x8
	0x03D015F8 LDUR X11, [X10 - 0x8]
	0x03D015FC CMP X11, X1
	0x03D01600 B.EQ 0x3D01620
	0x03D01604 SUBS X9, X9, 0x1
	0x03D01608 ADD X10, X10, 0x10
	0x03D0160C B.NE 0x3D015F8
	0x03D01610 MOVZ W2, 0x1
	0x03D01614 MOV X0, X22
	0x03D01618 BL 0x1C5C788
	0x03D0161C B 0x3D01630
	0x03D01620 LDR W9, [X10]
	0x03D01624 ADD W9, W9, 0x1
	0x03D01628 ADD X8, X8, W9, 0x4, SXTW
	0x03D0162C ADD X0, X8, 0x138
	0x03D01630 LDP X8, X1, [X0]
	0x03D01634 MOV X0, X22
	0x03D01638 BLR X8
	0x03D0163C CMP W0, W19
	0x03D01640 B.LE 0x3D0167C
	0x03D01644 LDR W8, [X20 + 0x428]
	0x03D01648 LDRB W9, [X21 + 0x8]
	0x03D0164C CMP W8, 0x2
	0x03D01650 CSET W8, EQ
	0x03D01654 ANDS W31, W8, W9, 0x0
	0x03D01658 B.EQ 0x3D0168C
	0x03D0165C LDR X8, [X20 + 0x470]
	0x03D01660 CBZ X8, 0x3D016B0
	0x03D01664 LDR W8, [X8 + 0x18]
	0x03D01668 CBZ W8, 0x3D0168C
	0x03D0166C MOV X0, X20
	0x03D01670 MOV W1, W19
	0x03D01674 BL 0x3D02C84
	0x03D01678 B 0x3D01698
	0x03D0167C LDP X20, X19, [X31 + 0x20]
	0x03D01680 LDP X22, X21, [X31 + 0x10]
	0x03D01684 LDR X30, [X31], #0x30
	0x03D01688 RET
	0x03D0168C MOV X0, X20
	0x03D01690 MOV W1, W19
	0x03D01694 BL 0x3CFDD8C
	0x03D01698 MOV X0, X20
	0x03D0169C MOV W1, W19
	0x03D016A0 LDP X20, X19, [X31 + 0x20]
	0x03D016A4 LDP X22, X21, [X31 + 0x10]
	0x03D016A8 LDR X30, [X31], #0x30
	0x03D016AC B 0x3CFDE14
	0x03D016B0 BL 0x1C16F20
	0x03D016B4 STR X30, [X31 - 0x40]!
	0x03D016B8 STP X24, X23, [X31 + 0x10]
	0x03D016BC STP X22, X21, [X31 + 0x20]
	0x03D016C0 STP X20, X19, [X31 + 0x30]
	0x03D016C4 ADRP X22, 0x6E6000
	0x03D016C8 LDRB W8, [X22 + 0x80A]
	0x03D016CC MOV X19, X2
	0x03D016D0 MOV W20, W1
	0x03D016D4 MOV X21, X0
	0x03D016D8 TBNZ X8, 0x0, 0x3D01714
	0x03D016DC ADRP X0, 0x462000
	0x03D016E0 LDR X0, [X0 + 0xE0]
	0x03D016E4 BL 0x1C16CF4
	0x03D016E8 ADRP X0, 0x462000
	0x03D016EC LDR X0, [X0 + 0xE8]
	0x03D016F0 BL 0x1C16CF4
	0x03D016F4 ADRP X0, 0x462000
	0x03D016F8 LDR X0, [X0 + 0xF0]
	0x03D016FC BL 0x1C16CF4
	0x03D01700 ADRP X0, 0x41D000
	0x03D01704 LDR X0, [X0 + 0x138]
	0x03D01708 BL 0x1C16CF4
	0x03D0170C MOVZ W8, 0x1
	0x03D01710 STRB W8, [X22 + 0x80A]
	0x03D01714 ADRP X23, 0x462000
	0x03D01718 ADRP X24, 0x462000
	0x03D0171C LDR X23, [X23 + 0xE8]
	0x03D01720 LDR X24, [X24 + 0xE0]
	0x03D01724 CBZ X19, 0x3D01774
	0x03D01728 LDR X9, [X19]
	0x03D0172C LDR X8, [X23]
	0x03D01730 LDRB W11, [X9 + 0x130]
	0x03D01734 LDRB W10, [X8 + 0x130]
	0x03D01738 CMP W11, W10
	0x03D0173C B.CC 0x3D01774
	0x03D01740 LDR X9, [X9 + 0xC8]
	0x03D01744 ADD X9, X9, X10, 0x3, LSL
	0x03D01748 LDUR X9, [X9 - 0x8]
	0x03D0174C CMP X9, X8
	0x03D01750 B.NE 0x3D01774
	0x03D01754 ADRP X8, 0x41D000
	0x03D01758 LDR X8, [X8 + 0x138]
	0x03D0175C MOV X0, X19
	0x03D01760 LDR X1, [X8]
	0x03D01764 BL 0x2EE6C18
	0x03D01768 TBZ X0, 0x0, 0x3D01774
	0x03D0176C MOVZ W22, 0x1
	0x03D01770 B 0x3D017F8
	0x03D01774 LDR X1, [X24]
	0x03D01778 MOV X0, X19
	0x03D0177C BL 0x1C16E00
	0x03D01780 CBZ X0, 0x3D017F0
	0x03D01784 LDR X8, [X0]
	0x03D01788 LDR X1, [X24]
	0x03D0178C MOV X22, X0
	0x03D01790 LDRH W9, [X8 + 0x12E]
	0x03D01794 CBZ X9, 0x3D017B8
	0x03D01798 LDR X10, [X8 + 0xB0]
	0x03D0179C ADD X10, X10, 0x8
	0x03D017A0 LDUR X11, [X10 - 0x8]
	0x03D017A4 CMP X11, X1
	0x03D017A8 B.EQ 0x3D017C8
	0x03D017AC SUBS X9, X9, 0x1
	0x03D017B0 ADD X10, X10, 0x10
	0x03D017B4 B.NE 0x3D017A0
	0x03D017B8 MOV X0, X22
	0x03D017BC MOV W2, W31
	0x03D017C0 BL 0x1C5C788
	0x03D017C4 B 0x3D017D4
	0x03D017C8 LDRSW X9, [X10]
	0x03D017CC ADD X8, X8, X9, 0x4, LSL
	0x03D017D0 ADD X0, X8, 0x138
	0x03D017D4 LDP X8, X1, [X0]
	0x03D017D8 MOV X0, X22
	0x03D017DC BLR X8
	0x03D017E0 TBZ X0, 0x0, 0x3D017F0
	0x03D017E4 MOVZ W22, 0x1
	0x03D017E8 CBNZ X19, 0x3D017F8
	0x03D017EC B 0x3D01858
	0x03D017F0 MOV W22, W31
	0x03D017F4 CBZ X19, 0x3D01858
	0x03D017F8 LDR X9, [X19]
	0x03D017FC LDR X8, [X23]
	0x03D01800 LDRB W11, [X9 + 0x130]
	0x03D01804 LDRB W10, [X8 + 0x130]
	0x03D01808 CMP W11, W10
	0x03D0180C B.CC 0x3D01858
	0x03D01810 LDR X9, [X9 + 0xC8]
	0x03D01814 ADD X9, X9, X10, 0x3, LSL
	0x03D01818 LDUR X9, [X9 - 0x8]
	0x03D0181C CMP X9, X8
	0x03D01820 B.NE 0x3D01858
	0x03D01824 ADRP X8, 0x462000
	0x03D01828 LDR X8, [X8 + 0xF0]
	0x03D0182C MOV X0, X19
	0x03D01830 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6E7000
	007 Move W8, [X21+2055]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {64}
	014 Move X0, 0x463000
	015 Move X0, [X0+136]
	016 Call 0x1C17CF4
	017 Move X0, 0x463000
	018 Move X0, [X0+144]
	019 Call 0x1C17CF4
	020 Move X0, 0x463000
	021 Move X0, [X0+152]
	022 Call 0x1C17CF4
	023 Move X0, 0x463000
	024 Move X0, [X0+160]
	025 Call 0x1C17CF4
	026 Move X0, 0x463000
	027 Move X0, [X0+168]
	028 Call 0x1C17CF4
	029 Move X0, 0x463000
	030 Move X0, [X0+176]
	031 Call 0x1C17CF4
	032 Move X0, 0x463000
	033 Move X0, [X0+184]
	034 Call 0x1C17CF4
	035 Move X0, 0x41D000
	036 Move X0, [X0+1904]
	037 Call 0x1C17CF4
	038 Move X0, 0x41E000
	039 Move X0, [X0+152]
	040 Call 0x1C17CF4
	041 Move X0, 0x41D000
	042 Move X0, [X0+1912]
	043 Call 0x1C17CF4
	044 Move X0, 0x41E000
	045 Move X0, [X0+160]
	046 Call 0x1C17CF4
	047 Move X0, 0x41D000
	048 Move X0, [X0+1920]
	049 Call 0x1C17CF4
	050 Move X0, 0x462000
	051 Move X0, [X0+2568]
	052 Call 0x1C17CF4
	053 Move X0, 0x41D000
	054 Move X0, [X0+1928]
	055 Call 0x1C17CF4
	056 Move X0, 0x463000
	057 Move X0, [X0+192]
	058 Call 0x1C17CF4
	059 Move X0, 0x41D000
	060 Move X0, [X0+3456]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X21+2055], W8
	064 Compare X20, 0
	065 JumpIfEqual {230}
	066 Move X8, [X20+144]
	067 Compare X8, 0
	068 JumpIfEqual {224}
	069 Move X0, [X19+1088]
	070 Compare X0, 0
	071 JumpIfEqual {230}
	072 Move X8, [X0]
	073 Move X20, 0x463000
	074 Move X21, 0x463000
	075 Move X22, 0x463000
	076 Move X9, [X8+1896]
	077 Move X1, [X8+1904]
	078 Move X20, [X20+136]
	079 Move X21, [X21+144]
	080 Move X22, [X22+192]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, [X20]
	083 Move X20, X0
	084 Move X0, X8
	085 Call 0x1C17F10
	086 Move X2, [X21]
	087 Move X1, X19
	088 Move X3, X31
	089 Move X21, X0
	090 Call Action`2<Int32Enum, Object>..ctor, X0, X1, X2
	091 Move X0, [X22]
	092 Call 0x1C17F10
	093 Move X1, X21
	094 Move X2, X31
	095 Move X22, X0
	096 Call KeyboardNavigationManipulator..ctor, X0, X1
	097 Move X0, X20
	098 Move X1, X22
	099 Move X2, X31
	100 Move [X19+1112], X22
	101 Call VisualElementExtensions.AddManipulator, X0, X1
	102 Move X0, [X19+1088]
	103 Compare X0, 0
	104 JumpIfEqual {230}
	105 Move X8, [X0]
	106 Move X20, 0x41E000
	107 Move X21, 0x463000
	108 Move X9, [X8+1896]
	109 Move X1, [X8+1904]
	110 Move X20, [X20+160]
	111 Move X21, [X21+168]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move X8, [X20]
	114 Move X20, X0
	115 Move X0, X8
	116 Call 0x1C17F10
	117 Move X2, [X21]
	118 Move X1, X19
	119 Move X3, X31
	120 Move X21, X0
	121 Call 0x2D0F824, X0, X1, X2
	122 Compare X20, 0
	123 JumpIfEqual {230}
	124 Move X8, 0x41E000
	125 Move X8, [X8+152]
	126 Move X0, X20
	127 Move X1, X21
	128 Move W2, W31
	129 Move X3, [X8]
	130 Call 0x21A2534, X0, X1, X2
	131 Move X0, [X19+1088]
	132 Compare X0, 0
	133 JumpIfEqual {230}
	134 Move X8, [X0]
	135 Move X20, 0x41D000
	136 Move X21, 0x463000
	137 Move X9, [X8+1896]
	138 Move X1, [X8+1904]
	139 Move X20, [X20+1920]
	140 Move X21, [X21+160]
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move X8, [X20]
	143 Move X20, X0
	144 Move X0, X8
	145 Call 0x1C17F10
	146 Move X2, [X21]
	147 Move X1, X19
	148 Move X3, X31
	149 Move X21, X0
	150 Call 0x2D0F824, X0, X1, X2
	151 Compare X20, 0
	152 JumpIfEqual {230}
	153 Move X8, 0x41D000
	154 Move X8, [X8+1904]
	155 Move X0, X20
	156 Move X1, X21
	157 Move W2, W31
	158 Move X3, [X8]
	159 Call 0x21A2534, X0, X1, X2
	160 Move X0, [X19+1088]
	161 Compare X0, 0
	162 JumpIfEqual {230}
	163 Move X8, [X0]
	164 Move X20, 0x462000
	165 Move X21, 0x463000
	166 Move X9, [X8+1896]
	167 Move X1, [X8+1904]
	168 Move X20, [X20+2568]
	169 Move X21, [X21+152]
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move X8, [X20]
	172 Move X20, X0
	173 Move X0, X8
	174 Call 0x1C17F10
	175 Move X2, [X21]
	176 Move X1, X19
	177 Move X3, X31
	178 Move X21, X0
	179 Call 0x2D0F824, X0, X1, X2
	180 Compare X20, 0
	181 JumpIfEqual {230}
	182 Move X8, 0x463000
	183 Move X8, [X8+184]
	184 Move X0, X20
	185 Move X1, X21
	186 Move W2, W31
	187 Move X3, [X8]
	188 Call 0x21A2534, X0, X1, X2
	189 Move X0, [X19+1088]
	190 Compare X0, 0
	191 JumpIfEqual {230}
	192 Move X8, [X0]
	193 Move X20, 0x41D000
	194 Move X21, 0x463000
	195 Move X9, [X8+1896]
	196 Move X1, [X8+1904]
	197 Move X20, [X20+1928]
	198 Move X21, [X21+176]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X8, [X20]
	201 Move X20, X0
	202 Move X0, X8
	203 Call 0x1C17F10
	204 Move X2, [X21]
	205 Move X1, X19
	206 Move X3, X31
	207 Move X21, X0
	208 Call 0x2D0F824, X0, X1, X2
	209 Compare X20, 0
	210 JumpIfEqual {230}
	211 Move X8, 0x41D000
	212 Move X8, [X8+1912]
	213 Move X0, X20
	214 Move X1, X21
	215 Move X20, [X31+32]
	216 Move X19, [X31+40]
	217 Move X3, [X8]
	218 Move X22, [X31+16]
	219 Move X21, [X31+24]
	220 Move W2, W31
	221 Move X30, [X31+48]
	222 Call 0x21A2534, X0, X1, X2
	223 Return 
	224 Move X20, [X31+32]
	225 Move X19, [X31+40]
	226 Move X22, [X31+16]
	227 Move X21, [X31+24]
	228 Move X30, [X31+48]
	229 Return 
	230 Call 0x1C17F20

Method: System.Void OnDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt)

Disassembly:
	0x03D01834 BL 0x2EE6C3C
	0x03D01838 TBZ X0, 0x0, 0x3D01858
	0x03D0183C MOVZ W3, 0x1
	0x03D01840 MOV X0, X21
	0x03D01844 MOV W1, W20
	0x03D01848 MOV W2, W22
	0x03D0184C BL 0x3D00AEC
	0x03D01850 TBNZ X0, 0x0, 0x3D018F0
	0x03D01854 B 0x3D01918
	0x03D01858 LDR X1, [X24]
	0x03D0185C MOV X0, X19
	0x03D01860 BL 0x1C16E00
	0x03D01864 CBZ X0, 0x3D018D4
	0x03D01868 LDR X8, [X0]
	0x03D0186C LDR X1, [X24]
	0x03D01870 MOV X23, X0
	0x03D01874 LDRH W9, [X8 + 0x12E]
	0x03D01878 CBZ X9, 0x3D0189C
	0x03D0187C LDR X10, [X8 + 0xB0]
	0x03D01880 ADD X10, X10, 0x8
	0x03D01884 LDUR X11, [X10 - 0x8]
	0x03D01888 CMP X11, X1
	0x03D0188C B.EQ 0x3D018AC
	0x03D01890 SUBS X9, X9, 0x1
	0x03D01894 ADD X10, X10, 0x10
	0x03D01898 B.NE 0x3D01884
	0x03D0189C MOVZ W2, 0x1
	0x03D018A0 MOV X0, X23
	0x03D018A4 BL 0x1C5C788
	0x03D018A8 B 0x3D018BC
	0x03D018AC LDR W9, [X10]
	0x03D018B0 ADD W9, W9, 0x1
	0x03D018B4 ADD X8, X8, W9, 0x4, SXTW
	0x03D018B8 ADD X0, X8, 0x138
	0x03D018BC LDP X8, X1, [X0]
	0x03D018C0 MOV X0, X23
	0x03D018C4 BLR X8
	0x03D018C8 TBZ X0, 0x0, 0x3D018D4
	0x03D018CC MOVZ W3, 0x1
	0x03D018D0 B 0x3D018D8
	0x03D018D4 MOV W3, W31
	0x03D018D8 MOV X0, X21
	0x03D018DC MOV W1, W20
	0x03D018E0 MOV W2, W22
	0x03D018E4 BL 0x3D00AEC
	0x03D018E8 TBZ X0, 0x0, 0x3D01918
	0x03D018EC CBZ X19, 0x3D0192C
	0x03D018F0 MOV X0, X19
	0x03D018F4 MOV X1, X31
	0x03D018F8 BL 0x3D9D950
	0x03D018FC MOV X0, X19
	0x03D01900 LDP X20, X19, [X31 + 0x30]
	0x03D01904 LDP X22, X21, [X31 + 0x20]
	0x03D01908 LDP X24, X23, [X31 + 0x10]
	0x03D0190C MOV X1, X31
	0x03D01910 LDR X30, [X31], #0x40
	0x03D01914 B 0x3D9D960
	0x03D01918 LDP X20, X19, [X31 + 0x30]
	0x03D0191C LDP X22, X21, [X31 + 0x20]
	0x03D01920 LDP X24, X23, [X31 + 0x10]
	0x03D01924 LDR X30, [X31], #0x40
	0x03D01928 RET
	0x03D0192C BL 0x1C16F20
	0x03D01930 MOV W0, W31
	0x03D01934 RET
	0x03D01938 STP X30, X21, [X31 - 0x20]!
	0x03D0193C STP X20, X19, [X31 + 0x10]
	0x03D01940 ADRP X21, 0x6E6000
	0x03D01944 LDRB W8, [X21 + 0x80B]
	0x03D01948 MOV X19, X1
	0x03D0194C MOV X20, X0
	0x03D01950 TBNZ X8, 0x0, 0x3D01974
	0x03D01954 ADRP X0, 0x41D000
	0x03D01958 LDR X0, [X0 + 0xB8]
	0x03D0195C BL 0x1C16CF4
	0x03D01960 ADRP X0, 0x41D000
	0x03D01964 LDR X0, [X0 + 0xC0]
	0x03D01968 BL 0x1C16CF4
	0x03D0196C MOVZ W8, 0x1
	0x03D01970 STRB W8, [X21 + 0x80B]
	0x03D01974 CBZ X19, 0x3D019BC
	0x03D01978 LDR W8, [X19 + 0xAC]
	0x03D0197C CBZ W8, 0x3D0198C
	0x03D01980 LDP X20, X19, [X31 + 0x10]
	0x03D01984 LDP X30, X21, [X31], #0x20
	0x03D01988 RET
	0x03D0198C LDRB W8, [X19 + 0xB0]
	0x03D01990 TBNZ X8, 0x0, 0x3D019A8
	0x03D01994 MOV X0, X20
	0x03D01998 MOV X1, X19
	0x03D0199C LDP X20, X19, [X31 + 0x10]
	0x03D019A0 LDP X30, X21, [X31], #0x20
	0x03D019A4 B 0x3D019C0
	0x03D019A8 MOV X0, X20
	0x03D019AC MOV X1, X19
	0x03D019B0 LDP X20, X19, [X31 + 0x10]
	0x03D019B4 LDP X30, X21, [X31], #0x20
	0x03D019B8 B 0x3D01F9C
	0x03D019BC BL 0x1C16F20
	0x03D019C0 STP D9, D8, [X31 - 0x40]!
	0x03D019C4 STP X30, X23, [X31 + 0x10]
	0x03D019C8 STP X22, X21, [X31 + 0x20]
	0x03D019CC STP X20, X19, [X31 + 0x30]
	0x03D019D0 ADRP X21, 0x6E6000
	0x03D019D4 LDRB W8, [X21 + 0x810]
	0x03D019D8 MOV X20, X1
	0x03D019DC MOV X19, X0
	0x03D019E0 TBNZ X8, 0x0, 0x3D01A1C
	0x03D019E4 ADRP X0, 0x41B000
	0x03D019E8 LDR X0, [X0 + 0xE78]
	0x03D019EC BL 0x1C16CF4
	0x03D019F0 ADRP X0, 0x3F6000
	0x03D019F4 LDR X0, [X0 + 0xB68]
	0x03D019F8 BL 0x1C16CF4
	0x03D019FC ADRP X0, 0x3F3000
	0x03D01A00 LDR X0, [X0 + 0xE28]
	0x03D01A04 BL 0x1C16CF4
	0x03D01A08 ADRP X0, 0x41B000
	0x03D01A0C LDR X0, [X0 + 0xE58]
	0x03D01A10 BL 0x1C16CF4
	0x03D01A14 MOVZ W8, 0x1
	0x03D01A18 STRB W8, [X21 + 0x810]
	0x03D01A1C LDR X8, [X19]
	0x03D01A20 MOV X0, X19
	0x03D01A24 LDR X9, [X8 + 0x808]
	0x03D01A28 LDR X1, [X8 + 0x810]
	0x03D01A2C BLR X9
	0x03D01A30 TBZ X0, 0x0, 0x3D01B00
	0x03D01A34 CBZ X20, 0x3D01F98
	0x03D01A38 ADRP X22, 0x41B000
	0x03D01A3C LDR X8, [X20]
	0x03D01A40 LDR X22, [X22 + 0xE78]
	0x03D01A44 LDRH W9, [X8 + 0x12E]
	0x03D01A48 LDR X1, [X22]
	0x03D01A4C CBZ X9, 0x3D01A70
	0x03D01A50 LDR X10, [X8 + 0xB0]
	0x03D01A54 ADD X10, X10, 0x8
	0x03D01A58 LDUR X11, [X10 - 0x8]
	0x03D01A5C CMP X11, X1
	0x03D01A60 B.EQ 0x3D01A80
	0x03D01A64 SUBS X9, X9, 0x1
	0x03D01A68 ADD X10, X10, 0x10
	0x03D01A6C B.NE 0x3D01A58
	0x03D01A70 MOVZ W2, 0x2
	0x03D01A74 MOV X0, X20
	0x03D01A78 BL 0x1C5C788
	0x03D01A7C B 0x3D01A90
	0x03D01A80 LDR W9, [X10]
	0x03D01A84 ADD W9, W9, 0x2
	0x03D01A88 ADD X8, X8, W9, 0x4, SXTW
	0x03D01A8C ADD X0, X8, 0x138
	0x03D01A90 LDP X8, X1, [X0]
	0x03D01A94 MOV X0, X20
	0x03D01A98 BLR X8
	0x03D01A9C TBZ X0, 0x0, 0x3D01B00
	0x03D01AA0 LDR X8, [X20]
	0x03D01AA4 LDR X1, [X22]
	0x03D01AA8 LDRH W9, [X8 + 0x12E]
	0x03D01AAC CBZ X9, 0x3D01AD0
	0x03D01AB0 LDR X10, [X8 + 0xB0]
	0x03D01AB4 ADD X10, X10, 0x8
	0x03D01AB8 LDUR X11, [X10 - 0x8]
	0x03D01ABC CMP X11, X1
	0x03D01AC0 B.EQ 0x3D01AE0
	0x03D01AC4 SUBS X9, X9, 0x1
	0x03D01AC8 ADD X10, X10, 0x10
	0x03D01ACC B.NE 0x3D01AB8
	0x03D01AD0 MOVZ W2, 0x3
	0x03D01AD4 MOV X0, X20
	0x03D01AD8 BL 0x1C5C788
	0x03D01ADC B 0x3D01AF0
	0x03D01AE0 LDR W9, [X10]
	0x03D01AE4 ADD W9, W9, 0x3
	0x03D01AE8 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6E7000
	006 Move W8, [X21+2056]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {54}
	013 Move X0, 0x463000
	014 Move X0, [X0+152]
	015 Call 0x1C17CF4
	016 Move X0, 0x463000
	017 Move X0, [X0+160]
	018 Call 0x1C17CF4
	019 Move X0, 0x463000
	020 Move X0, [X0+168]
	021 Call 0x1C17CF4
	022 Move X0, 0x463000
	023 Move X0, [X0+176]
	024 Call 0x1C17CF4
	025 Move X0, 0x462000
	026 Move X0, [X0+2608]
	027 Call 0x1C17CF4
	028 Move X0, 0x41D000
	029 Move X0, [X0+1936]
	030 Call 0x1C17CF4
	031 Move X0, 0x41E000
	032 Move X0, [X0+3368]
	033 Call 0x1C17CF4
	034 Move X0, 0x41D000
	035 Move X0, [X0+1944]
	036 Call 0x1C17CF4
	037 Move X0, 0x41E000
	038 Move X0, [X0+160]
	039 Call 0x1C17CF4
	040 Move X0, 0x41D000
	041 Move X0, [X0+1920]
	042 Call 0x1C17CF4
	043 Move X0, 0x462000
	044 Move X0, [X0+2568]
	045 Call 0x1C17CF4
	046 Move X0, 0x41D000
	047 Move X0, [X0+1928]
	048 Call 0x1C17CF4
	049 Move X0, 0x463000
	050 Move X0, [X0+200]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+2056], W8
	054 Compare X20, 0
	055 JumpIfEqual {195}
	056 Move X8, [X20+136]
	057 Compare X8, 0
	058 JumpIfEqual {190}
	059 Move X0, [X19+1088]
	060 Compare X0, 0
	061 JumpIfEqual {195}
	062 Move X8, [X0]
	063 Move X9, [X8+1896]
	064 Move X1, [X8+1904]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X1, [X19+1112]
	067 Move X2, X31
	068 Call VisualElementExtensions.RemoveManipulator, X0, X1
	069 Move X0, [X19+1088]
	070 Compare X0, 0
	071 JumpIfEqual {195}
	072 Move X8, [X0]
	073 Move X20, 0x41E000
	074 Move X21, 0x463000
	075 Move X9, [X8+1896]
	076 Move X1, [X8+1904]
	077 Move X20, [X20+160]
	078 Move X21, [X21+168]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X8, [X20]
	081 Move X20, X0
	082 Move X0, X8
	083 Call 0x1C17F10
	084 Move X2, [X21]
	085 Move X1, X19
	086 Move X3, X31
	087 Move X21, X0
	088 Call 0x2D0F824, X0, X1, X2
	089 Compare X20, 0
	090 JumpIfEqual {195}
	091 Move X8, 0x41E000
	092 Move X8, [X8+3368]
	093 Move X0, X20
	094 Move X1, X21
	095 Move W2, W31
	096 Move X3, [X8]
	097 Call 0x21A28B4, X0, X1, X2
	098 Move X0, [X19+1088]
	099 Compare X0, 0
	100 JumpIfEqual {195}
	101 Move X8, [X0]
	102 Move X20, 0x41D000
	103 Move X21, 0x463000
	104 Move X9, [X8+1896]
	105 Move X1, [X8+1904]
	106 Move X20, [X20+1920]
	107 Move X21, [X21+160]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X8, [X20]
	110 Move X20, X0
	111 Move X0, X8
	112 Call 0x1C17F10
	113 Move X2, [X21]
	114 Move X1, X19
	115 Move X3, X31
	116 Move X21, X0
	117 Call 0x2D0F824, X0, X1, X2
	118 Compare X20, 0
	119 JumpIfEqual {195}
	120 Move X8, 0x41D000
	121 Move X8, [X8+1936]
	122 Move X0, X20
	123 Move X1, X21
	124 Move W2, W31
	125 Move X3, [X8]
	126 Call 0x21A28B4, X0, X1, X2
	127 Move X0, [X19+1088]
	128 Compare X0, 0
	129 JumpIfEqual {195}
	130 Move X8, [X0]
	131 Move X20, 0x462000
	132 Move X21, 0x463000
	133 Move X9, [X8+1896]
	134 Move X1, [X8+1904]
	135 Move X20, [X20+2568]
	136 Move X21, [X21+152]
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X8, [X20]
	139 Move X20, X0
	140 Move X0, X8
	141 Call 0x1C17F10
	142 Move X2, [X21]
	143 Move X1, X19
	144 Move X3, X31
	145 Move X21, X0
	146 Call 0x2D0F824, X0, X1, X2
	147 Compare X20, 0
	148 JumpIfEqual {195}
	149 Move X8, 0x462000
	150 Move X8, [X8+2608]
	151 Move X0, X20
	152 Move X1, X21
	153 Move W2, W31
	154 Move X3, [X8]
	155 Call 0x21A28B4, X0, X1, X2
	156 Move X0, [X19+1088]
	157 Compare X0, 0
	158 JumpIfEqual {195}
	159 Move X8, [X0]
	160 Move X20, 0x41D000
	161 Move X21, 0x463000
	162 Move X9, [X8+1896]
	163 Move X1, [X8+1904]
	164 Move X20, [X20+1928]
	165 Move X21, [X21+176]
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X8, [X20]
	168 Move X20, X0
	169 Move X0, X8
	170 Call 0x1C17F10
	171 Move X2, [X21]
	172 Move X1, X19
	173 Move X3, X31
	174 Move X21, X0
	175 Call 0x2D0F824, X0, X1, X2
	176 Compare X20, 0
	177 JumpIfEqual {195}
	178 Move X8, 0x41D000
	179 Move X8, [X8+1944]
	180 Move X0, X20
	181 Move X20, [X31+16]
	182 Move X19, [X31+24]
	183 Move X1, X21
	184 Move X3, [X8]
	185 Move W2, W31
	186 Move X30, [X31+32]
	187 Move X21, [X31+40]
	188 Call 0x21A28B4, X0, X1, X2
	189 Return 
	190 Move X20, [X31+16]
	191 Move X19, [X31+24]
	192 Move X30, [X31+32]
	193 Move X21, [X31+40]
	194 Return 
	195 Call 0x1C17F20

Method: System.Boolean Apply(UnityEngine.UIElements.KeyboardNavigationOperation op, System.Boolean shiftKey, System.Boolean altKey)

Disassembly:
	0x03D01AEC ADD X0, X8, 0x138
	0x03D01AF0 LDP X8, X1, [X0]
	0x03D01AF4 MOV X0, X20
	0x03D01AF8 BLR X8
	0x03D01AFC CBZ W0, 0x3D01B14
	0x03D01B00 LDP X20, X19, [X31 + 0x30]
	0x03D01B04 LDP X22, X21, [X31 + 0x20]
	0x03D01B08 LDP X30, X23, [X31 + 0x10]
	0x03D01B0C LDP D9, D8, [X31], #0x40
	0x03D01B10 RET
	0x03D01B14 LDR X8, [X20]
	0x03D01B18 LDR X1, [X22]
	0x03D01B1C LDRH W9, [X8 + 0x12E]
	0x03D01B20 CBZ X9, 0x3D01B44
	0x03D01B24 LDR X10, [X8 + 0xB0]
	0x03D01B28 ADD X10, X10, 0x8
	0x03D01B2C LDUR X11, [X10 - 0x8]
	0x03D01B30 CMP X11, X1
	0x03D01B34 B.EQ 0x3D01B54
	0x03D01B38 SUBS X9, X9, 0x1
	0x03D01B3C ADD X10, X10, 0x10
	0x03D01B40 B.NE 0x3D01B2C
	0x03D01B44 MOVZ W2, 0x1
	0x03D01B48 MOV X0, X20
	0x03D01B4C BL 0x1C5C788
	0x03D01B50 B 0x3D01B64
	0x03D01B54 LDR W9, [X10]
	0x03D01B58 ADD W9, W9, 0x1
	0x03D01B5C ADD X8, X8, W9, 0x4, SXTW
	0x03D01B60 ADD X0, X8, 0x138
	0x03D01B64 LDP X8, X1, [X0]
	0x03D01B68 MOV X0, X20
	0x03D01B6C BLR X8
	0x03D01B70 ADRP X23, 0x41B000
	0x03D01B74 LDR X23, [X23 + 0xE58]
	0x03D01B78 MOV X21, X0
	0x03D01B7C LDR X8, [X23]
	0x03D01B80 LDR W9, [X8 + 0xE0]
	0x03D01B84 CBNZ W9, 0x3D01B94
	0x03D01B88 MOV X0, X8
	0x03D01B8C BL 0x1C16DFC
	0x03D01B90 LDR X8, [X23]
	0x03D01B94 LDR X8, [X8 + 0xB8]
	0x03D01B98 MOV X0, X21
	0x03D01B9C MOV X2, X31
	0x03D01BA0 LDR X1, [X8]
	0x03D01BA4 BL 0x3226EF8
	0x03D01BA8 TBZ X0, 0x0, 0x3D01BEC
	0x03D01BAC LDR X8, [X20]
	0x03D01BB0 LDR X1, [X22]
	0x03D01BB4 LDRH W9, [X8 + 0x12E]
	0x03D01BB8 CBZ X9, 0x3D01BDC
	0x03D01BBC LDR X10, [X8 + 0xB0]
	0x03D01BC0 ADD X10, X10, 0x8
	0x03D01BC4 LDUR X11, [X10 - 0x8]
	0x03D01BC8 CMP X11, X1
	0x03D01BCC B.EQ 0x3D01C4C
	0x03D01BD0 SUBS X9, X9, 0x1
	0x03D01BD4 ADD X10, X10, 0x10
	0x03D01BD8 B.NE 0x3D01BC4
	0x03D01BDC MOVZ W2, 0x5
	0x03D01BE0 MOV X0, X20
	0x03D01BE4 BL 0x1C5C788
	0x03D01BE8 B 0x3D01C5C
	0x03D01BEC LDR X21, [X19 + 0x450]
	0x03D01BF0 CBNZ X21, 0x3D01C0C
	0x03D01BF4 LDR X8, [X19]
	0x03D01BF8 MOV X0, X19
	0x03D01BFC LDR X9, [X8 + 0x7B8]
	0x03D01C00 LDR X1, [X8 + 0x7C0]
	0x03D01C04 BLR X9
	0x03D01C08 LDR X21, [X19 + 0x450]
	0x03D01C0C LDR X8, [X20]
	0x03D01C10 LDR X1, [X22]
	0x03D01C14 LDRH W9, [X8 + 0x12E]
	0x03D01C18 CBZ X9, 0x3D01C3C
	0x03D01C1C LDR X10, [X8 + 0xB0]
	0x03D01C20 ADD X10, X10, 0x8
	0x03D01C24 LDUR X11, [X10 - 0x8]
	0x03D01C28 CMP X11, X1
	0x03D01C2C B.EQ 0x3D01CE4
	0x03D01C30 SUBS X9, X9, 0x1
	0x03D01C34 ADD X10, X10, 0x10
	0x03D01C38 B.NE 0x3D01C24
	0x03D01C3C MOVZ W2, 0x6
	0x03D01C40 MOV X0, X20
	0x03D01C44 BL 0x1C5C788
	0x03D01C48 B 0x3D01CF4
	0x03D01C4C LDR W9, [X10]
	0x03D01C50 ADD W9, W9, 0x5
	0x03D01C54 ADD X8, X8, W9, 0x4, SXTW
	0x03D01C58 ADD X0, X8, 0x138
	0x03D01C5C LDP X8, X1, [X0]
	0x03D01C60 MOV X0, X20
	0x03D01C64 BLR X8
	0x03D01C68 LDR V3, [X19 + 0x4A0]
	0x03D01C6C LDR V4, [X19 + 0x4A4]
	0x03D01C70 LDR V5, [X19 + 0x4A8]
	0x03D01C74 MOVZ W8, 0x42C80000
	0x03D01C78 FSUB S0, S0, S3
	0x03D01C7C FSUB S1, S1, S4
	0x03D01C80 FSUB S2, S2, S5
	0x03D01C84 FMUL S0, S0, S0
	0x03D01C88 FMUL S1, S1, S1
	0x03D01C8C FMUL S2, S2, S2
	0x03D01C90 FADD S0, S0, S1
	0x03D01C94 FADD S0, S0, S2
	0x03D01C98 FMOV S1, W8
	0x03D01C9C FCMP S0, S1
	0x03D01CA0 B.HI 0x3D01B00
	0x03D01CA4 LDR X8, [X20]
	0x03D01CA8 LDR X1, [X22]
	0x03D01CAC LDRH W9, [X8 + 0x12E]
	0x03D01CB0 CBZ X9, 0x3D01CD4
	0x03D01CB4 LDR X10, [X8 + 0xB0]
	0x03D01CB8 ADD X10, X10, 0x8
	0x03D01CBC LDUR X11, [X10 - 0x8]
	0x03D01CC0 CMP X11, X1
	0x03D01CC4 B.EQ 0x3D01D64
	0x03D01CC8 SUBS X9, X9, 0x1
	0x03D01CCC ADD X10, X10, 0x10
	0x03D01CD0 B.NE 0x3D01CBC
	0x03D01CD4 MOVZ W2, 0x6
	0x03D01CD8 MOV X0, X20
	0x03D01CDC BL 0x1C5C788
	0x03D01CE0 B 0x3D01D74
	0x03D01CE4 LDR W9, [X10]
	0x03D01CE8 ADD W9, W9, 0x6
	0x03D01CEC ADD X8, X8, W9, 0x4, SXTW
	0x03D01CF0 ADD X0, X8, 0x138
	0x03D01CF4 LDP X8, X1, [X0]
	0x03D01CF8 MOV X0, X20
	0x03D01CFC BLR X8
	0x03D01D00 CBZ X21, 0x3D01F98
	0x03D01D04 LDR X8, [X21]
	0x03D01D08 MOV X0, X21
	0x03D01D0C LDP X9, X1, [X8 + 0x1E8]
	0x03D01D10 BLR X9
	0x03D01D14 LDR W8, [X19 + 0x428]
	0x03D01D18 CMP W8, 0x2
	0x03D01D1C B.NE 0x3D01B00
	0x03D01D20 LDR X8, [X20]
	0x03D01D24 LDR X1, [X22]
	0x03D01D28 MOV W21, W0
	0x03D01D2C LDRH W9, [X8 + 0x12E]
	0x03D01D30 CBZ X9, 0x3D01D54
	0x03D01D34 LDR X10, [X8 + 0xB0]
	0x03D01D38 ADD X10, X10, 0x8
	0x03D01D3C LDUR X11, [X10 - 0x8]
	0x03D01D40 CMP X11, X1
	0x03D01D44 B.EQ 0x3D01DC8
	0x03D01D48 SUBS X9, X9, 0x1
	0x03D01D4C ADD X10, X10, 0x10
	0x03D01D50 B.NE 0x3D01D3C
	0x03D01D54 MOVZ W2, 0x14
	0x03D01D58 MOV X0, X20
	0x03D01D5C BL 0x1C5C788
	0x03D01D60 B 0x3D01DD8
	0x03D01D64 LDR W9, [X10]
	0x03D01D68 ADD W9, W9, 0x6
	0x03D01D6C ADD X8, X8, W9, 0x4, SXTW
	0x03D01D70 ADD X0, X8, 0x138
	0x03D01D74 LDP X8, X1, [X0]
	0x03D01D78 MOV X0, X20
	0x03D01D7C BLR X8
	0x03D01D80 LDR X8, [X20]
	0x03D01D84 LDR X1, [X22]
	0x03D01D88 MOV V8.16B, V0.16B
	0x03D01D8C MOV V9.16B, V1.16B
	0x03D01D90 LDRH W9, [X8 + 0x12E]
	0x03D01D94 CBZ X9, 0x3D01DB8
	0x03D01D98 LDR X10, [X8 + 0xB0]
	0x03D01D9C ADD X10, X10, 0x8
	0x03D01DA0 LDUR X11, [X10 - 0x8]
	0x03D01DA4 CMP X11, X1
	0x03D01DA8 B.EQ 0x3D01E28
	0x03D01DAC SUBS X9, X9, 0x1
	0x03D01DB0 ADD X10, X10, 0x10
	0x03D01DB4 B.NE 0x3D01DA0
	0x03D01DB8 MOVZ W2, 0x9
	0x03D01DBC MOV X0, X20
	0x03D01DC0 BL 0x1C5C788
	0x03D01DC4 B 0x3D01E38
	0x03D01DC8 LDR W9, [X10]
	0x03D01DCC ADD W9, W9, 0x14
	0x03D01DD0 ADD X8, X8, W9, 0x4, SXTW
	0x03D01DD4 ADD X0, X8, 0x138
	0x03D01DD8 LDP X8, X1, [X0]
	0x03D01DDC MOV X0, X20
	0x03D01DE0 BLR X8
	0x03D01DE4 TBNZ X0, 0x0, 0x3D01B00
	0x03D01DE8 LDR X8, [X20]
	0x03D01DEC LDR X1, [X22]
	0x03D01DF0 LDRH W9, [X8 + 0x12E]
	0x03D01DF4 CBZ X9, 0x3D01E18
	0x03D01DF8 LDR X10, [X8 + 0xB0]
	0x03D01DFC ADD X10, X10, 0x8
	0x03D01E00 LDUR X11, [X10 - 0x8]
	0x03D01E04 CMP X11, X1
	0x03D01E08 B.EQ 0x3D01F30
	0x03D01E0C SUBS X9, X9, 0x1
	0x03D01E10 ADD X10, X10, 0x10
	0x03D01E14 B.NE 0x3D01E00
	0x03D01E18 MOVZ W2, 0x18
	0x03D01E1C MOV X0, X20
	0x03D01E20 BL 0x1C5C788
	0x03D01E24 B 0x3D01F40
	0x03D01E28 LDR W9, [X10]
	0x03D01E2C ADD W9, W9, 0x9
	0x03D01E30 ADD X8, X8, W9, 0x4, SXTW
	0x03D01E34 ADD X0, X8, 0x138
	0x03D01E38 LDP X8, X1, [X0]
	0x03D01E3C MOV X0, X20
	0x03D01E40 BLR X8
	0x03D01E44 LDR X8, [X20]
	0x03D01E48 LDR X1, [X22]
	0x03D01E4C MOV W21, W0
	0x03D01E50 LDRH W9, [X8 + 0x12E]
	0x03D01E54 CBZ X9, 0x3D01E78
	0x03D01E58 LDR X10, [X8 + 0xB0]
	0x03D01E5C ADD X10, X10, 0x8
	0x03D01E60 LDUR X11, [X10 - 0x8]
	0x03D01E64 CMP X11, X1
	0x03D01E68 B.EQ 0x3D01E88
	0x03D01E6C SUBS X9, X9, 0x1
	0x03D01E70 ADD X10, X10, 0x10
	0x03D01E74 B.NE 0x3D01E60
	0x03D01E78 MOVZ W2, 0x18
	0x03D01E7C MOV X0, X20
	0x03D01E80 BL 0x1C5C788
	0x03D01E84 B 0x3D01E98
	0x03D01E88 LDR W9, [X10]
	0x03D01E8C ADD W9, W9, 0x18
	0x03D01E90 ADD X8, X8, W9, 0x4, SXTW
	0x03D01E94 ADD X0, X8, 0x138
	0x03D01E98 LDP X8, X1, [X0]
	0x03D01E9C MOV X0, X20
	0x03D01EA0 BLR X8
	0x03D01EA4 LDR X8, [X20]
	0x03D01EA8 LDR X1, [X22]
	0x03D01EAC MOV W22, W0
	0x03D01EB0 LDRH W9, [X8 + 0x12E]
	0x03D01EB4 CBZ X9, 0x3D01ED8
	0x03D01EB8 LDR X10, [X8 + 0xB0]
	0x03D01EBC ADD X10, X10, 0x8
	0x03D01EC0 LDUR X11, [X10 - 0x8]
	0x03D01EC4 CMP X11, X1
	0x03D01EC8 B.EQ 0x3D01EE8
	0x03D01ECC SUBS X9, X9, 0x1
	0x03D01ED0 ADD X10, X10, 0x10
	0x03D01ED4 B.NE 0x3D01EC0
	0x03D01ED8 MOVZ W2, 0x14
	0x03D01EDC MOV X0, X20
	0x03D01EE0 BL 0x1C5C788
	0x03D01EE4 B 0x3D01EF8
	0x03D01EE8 LDR W9, [X10]
	0x03D01EEC ADD W9, W9, 0x14
	0x03D01EF0 ADD X8, X8, W9, 0x4, SXTW
	0x03D01EF4 ADD X0, X8, 0x138
	0x03D01EF8 LDP X8, X1, [X0]
	0x03D01EFC MOV X0, X20
	0x03D01F00 BLR X8
	0x03D01F04 AND W3, W0, 0x1
	0x03D01F08 AND W2, W22, 0x1
	0x03D01F0C MOV X0, X19
	0x03D01F10 MOV W1, W21
	0x03D01F14 LDP X20, X19, [X31 + 0x30]
	0x03D01F18 LDP X22, X21, [X31 + 0x20]
	0x03D01F1C LDP X30, X23, [X31 + 0x10]
	0x03D01F20 MOV V0.16B, V8.16B
	0x03D01F24 MOV V1.16B, V9.16B
	0x03D01F28 LDP D9, D8, [X31], #0x40
	0x03D01F2C B 0x3D02568
	0x03D01F30 LDR W9, [X10]
	0x03D01F34 ADD W9, W9, 0x18
	0x03D01F38 ADD X8, X8, W9, 0x4, SXTW
	0x03D01F3C ADD X0, X8, 0x138
	0x03D01F40 LDP X8, X1, [X0]
	0x03D01F44 MOV X0, X20
	0x03D01F48 BLR X8
	0x03D01F4C TBNZ X0, 0x0, 0x3D01B00
	0x03D01F50 LDR X0, [X19 + 0x470]
	0x03D01F54 CBZ X0, 0x3D01F98
	0x03D01F58 LDR W8, [X0 + 0x18]
	0x03D01F5C CMP W8, 0x2
	0x03D01F60 B.LT 0x3D01B00
	0x03D01F64 ADRP X8, 0x3F6000
	0x03D01F68 LDR X8, [X8 + 0xB68]
	0x03D01F6C MOV W1, W21
	0x03D01F70 LDR X2, [X8]
	0x03D01F74 BL 0x2FDCA84
	0x03D01F78 TBZ X0, 0x0, 0x3D01B00
	0x03D01F7C MOV X0, X19
	0x03D01F80 MOV W1, W21
	0x03D01F84 LDP X20, X19, [X31 + 0x30]
	0x03D01F88 LDP X22, X21, [X31 + 0x20]
	0x03D01F8C LDP X30, X23, [X31 + 0x10]
	0x03D01F90 LDP D9, D8, [X31], #0x40
	0x03D01F94 B 0x3CFDD8C
	0x03D01F98 BL 0x1C16F20
	0x03D01F9C STP D9, D8, [X31 - 0x40]!

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x6E7000
	009 Move W8, [X23+2057]
	010 Move W20, W3
	011 Move W21, W1
	012 Move X19, X0
	013 And W22, W2, 1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x3FA000
	019 Move X0, [X0+752]
	020 Call 0x1C17CF4
	021 Move X0, 0x3F4000
	022 Move X0, [X0+3624]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2057], W8
	026 Move [X31+16], X19
	027 Move [X31+24], X31
	028 Move [X31+24], W22
	029 Move W8, [X19+1064]
	030 Compare W8, 0
	031 JumpIfEqual {184}
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+2056]
	035 Move X1, [X8+2064]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {184}
	041 Subtract W8, W21, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X9, -51810304
	044 Add X9, X9, 3961
	045 NotImplemented "Instruction ADR not yet implemented."
	046 Move W11, [X9]
	047 Add X10, X10, X11
	048 CallNoReturn X10
	049 Move X0, X19
	050 Call BaseVerticalCollectionView.SelectAll, X0
	051 Move X0, X19
	052 Call BaseVerticalCollectionView.ClearSelection, X0
	053 Move X8, [X19+984]
	054 Compare X8, 0
	055 JumpIfEqual {61}
	056 Move X1, [X19+1144]
	057 Move X9, [X8+24]
	058 Move X0, [X8+64]
	059 Move X2, [X8+40]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X0, X19
	062 Call BaseVerticalCollectionView.get_selectedIndex, X0
	063 Move W1, W0
	064 Move X0, X19
	065 Call BaseVerticalCollectionView.ScrollToItem, X0, X1
	066 Move X0, X19
	067 Call BaseVerticalCollectionView.get_selectedIndex, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X19
	070 Call BaseVerticalCollectionView.get_selectedIndex, X0
	071 Move X0, X19
	072 Call BaseVerticalCollectionView.get_selectedIndex, X0
	073 Move X8, [X19+1096]
	074 Compare X8, 0
	075 JumpIfEqual {287}
	076 Move X9, [X8]
	077 Move W20, W0
	078 Move X0, X8
	079 Move X10, [X9+392]
	080 Move X1, [X9+400]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X0, 0
	083 JumpIfEqual {287}
	084 Move X10, 0x3FA000
	085 Move X8, [X0]
	086 Move X10, [X10+752]
	087 Move X21, X0
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Move X1, [X10]
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 1
	099 Move X0, X21
	100 Call 0x1C5D788
	101 Move X8, [X19+1136]
	102 Compare X8, 0
	103 JumpIfEqual {287}
	104 Move W8, [X8+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X8, [X19]
	107 And W2, W20, 1
	108 Move W1, 1
	109 Move X0, X19
	110 Move X8, [X19+1136]
	111 Compare X8, 0
	112 JumpIfEqual {287}
	113 Move W8, [X8+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X8, [X19]
	116 And W2, W20, 1
	117 Move X0, X19
	118 Move W1, W31
	119 Move X9, [X8+2088]
	120 Move X3, [X8+2096]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X0, [X19+1136]
	123 Compare X0, 0
	124 JumpIfEqual {287}
	125 Move W8, [X0+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move W8, [X19+1156]
	128 Compare W8, 0
	129 JumpIfEqual {194}
	130 Move X1, X31
	131 Call Enumerable.Min, X0
	132 Move X0, [X19+1136]
	133 Compare X0, 0
	134 JumpIfEqual {287}
	135 Move W8, [X0+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move W8, [X19+1156]
	138 Compare W8, 0
	139 JumpIfEqual {215}
	140 Move X1, X31
	141 Call Enumerable.Min, X0
	142 Add X2, X31, 16
	143 Move X0, X19
	144 Move W1, W31
	145 Move X0, [X19+1096]
	146 Compare X0, 0
	147 JumpIfEqual {287}
	148 Move X8, [X0]
	149 Move X9, [X8+392]
	150 Move X1, [X8+400]
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Compare X0, 0
	153 JumpIfEqual {287}
	154 Move X10, 0x3FA000
	155 Move X8, [X0]
	156 Move X10, [X10+752]
	157 Move X20, X0
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Move X1, [X10]
	160 Compare X9, 0
	161 JumpIfEqual {168}
	162 Move X10, [X8+176]
	163 Add X10, X10, 8
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Subtract X9, X9, 1
	167 Add X10, X10, 16
	168 Move W2, 1
	169 Move X0, X20
	170 Call 0x1C5D788
	171 Move W9, [X10]
	172 Add W9, W9, 1
	173 Add X8, X8, W9
	174 Add X0, X8, 312
	175 Move X8, [X0]
	176 Move X1, [X0+8]
	177 Move X0, X21
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Add W8, W20, 1
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X19
	182 Call BaseVerticalCollectionView.get_selectedIndex, X0
	183 Add W1, W0, 1
	184 Move W0, W31
	185 Move W9, [X10]
	186 Add W9, W9, 1
	187 Add X8, X8, W9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X20
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Subtract W1, W0, 1
	194 Move X1, X31
	195 Call Enumerable.Max, X0
	196 Move W20, W0
	197 Move X0, [X19+1104]
	198 Compare X0, 0
	199 JumpIfNotEqual {206}
	200 Move X8, [X19]
	201 Move X0, X19
	202 Move X9, [X8+1976]
	203 Move X1, [X8+1984]
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X0, [X19+1104]
	206 Compare X0, 0
	207 JumpIfEqual {287}
	208 Move X8, [X0]
	209 Move X9, [X8+408]
	210 Move X1, [X8+416]
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Subtract W8, W20, W0
	213 Add W8, W8, 1
	214 NotImplemented "Instruction BIC not yet implemented."
	215 Move X1, X31
	216 Call Enumerable.Max, X0
	217 Move W20, W0
	218 Move X0, [X19+1096]
	219 Compare X0, 0
	220 JumpIfEqual {287}
	221 Move X8, [X0]
	222 Move X9, [X8+392]
	223 Move X1, [X8+400]
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Compare X0, 0
	226 JumpIfEqual {287}
	227 Move X10, 0x3FA000
	228 Move X8, [X0]
	229 Move X10, [X10+752]
	230 Move X21, X0
	231 NotImplemented "Instruction LDRH not yet implemented."
	232 Move X1, [X10]
	233 Compare X9, 0
	234 JumpIfEqual {241}
	235 Move X10, [X8+176]
	236 Add X10, X10, 8
	237 NotImplemented "Instruction LDUR not yet implemented."
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Subtract X9, X9, 1
	240 Add X10, X10, 16
	241 Move W2, 1
	242 Move X0, X21
	243 Call 0x1C5D788
	244 Move W9, [X10]
	245 Add W9, W9, 1
	246 Add X8, X8, W9
	247 Add X0, X8, 312
	248 Move X8, [X0]
	249 Move X1, [X0+8]
	250 Move X0, X21
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Move X8, [X19+1104]
	253 Move W21, W0
	254 Compare X8, 0
	255 JumpIfNotEqual {262}
	256 Move X8, [X19]
	257 Move X0, X19
	258 Move X9, [X8+1976]
	259 Move X1, [X8+1984]
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Move X8, [X19+1104]
	262 Compare X8, 0
	263 JumpIfEqual {287}
	264 Move X9, [X8]
	265 Move X0, X8
	266 Move X10, [X9+408]
	267 Move X1, [X9+416]
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Add W9, W20, W0
	270 Subtract W8, W21, 1
	271 Subtract W9, W9, 1
	272 NotImplemented "Instruction CMP not yet implemented."
	273 NotImplemented "Instruction CSEL not yet implemented."
	274 Add X2, X31, 16
	275 Move X0, X19
	276 Call BaseVerticalCollectionView.<Apply>g__HandleSelectionAndScroll|181_0, X0, X1, X2
	277 Move W0, 1
	278 Move X20, [X31+64]
	279 Move X19, [X31+72]
	280 Move X22, [X31+48]
	281 Move X21, [X31+56]
	282 Move X30, [X31+32]
	283 Move X23, [X31+40]
	284 And W0, W0, 1
	285 Add X31, X31, 80
	286 Return X0
	287 Call 0x1C17F20
	288 Move [X31+12], W21
	289 Move X0, 0x463000
	290 Move X0, [X0+208]
	291 Call 0x1C17D08
	292 Add X1, X31, 12
	293 Call 0x1C17E04
	294 Move X19, X0
	295 Move X0, 0x3FB000
	296 Move X0, [X0+1888]
	297 Call 0x1C17D08
	298 Call 0x1C17F10
	299 Move X20, X0
	300 Move X0, 0x3FE000
	301 Move X0, [X0+3320]
	302 Call 0x1C17D08
	303 Move X1, X0
	304 Move X0, X20
	305 Move X2, X19
	306 Move X3, X31
	307 Move X4, X31
	308 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	309 Move X0, 0x463000
	310 Move X0, [X0+216]
	311 Call 0x1C17D08
	312 Move X1, X0
	313 Move X0, X20
	314 Call 0x1C17DEC

Method: System.Void Apply(UnityEngine.UIElements.KeyboardNavigationOperation op, UnityEngine.UIElements.EventBase sourceEvent)

Disassembly:
	0x03D026B4 CBZ X0, 0x3D02AE0
	0x03D026B8 ADRP X10, 0x3F8000
	0x03D026BC LDR X8, [X0]
	0x03D026C0 LDR X10, [X10 + 0x2F0]
	0x03D026C4 MOV X23, X0
	0x03D026C8 LDRH W9, [X8 + 0x12E]
	0x03D026CC LDR X1, [X10]
	0x03D026D0 CBZ X9, 0x3D026F4
	0x03D026D4 LDR X10, [X8 + 0xB0]
	0x03D026D8 ADD X10, X10, 0x8
	0x03D026DC LDUR X11, [X10 - 0x8]
	0x03D026E0 CMP X11, X1
	0x03D026E4 B.EQ 0x3D02704
	0x03D026E8 SUBS X9, X9, 0x1
	0x03D026EC ADD X10, X10, 0x10
	0x03D026F0 B.NE 0x3D026DC
	0x03D026F4 MOVZ W2, 0x1
	0x03D026F8 MOV X0, X23
	0x03D026FC BL 0x1C5C788
	0x03D02700 B 0x3D02714
	0x03D02704 LDR W9, [X10]
	0x03D02708 ADD W9, W9, 0x1
	0x03D0270C ADD X8, X8, W9, 0x4, SXTW
	0x03D02710 ADD X0, X8, 0x138
	0x03D02714 LDP X8, X1, [X0]
	0x03D02718 MOV X0, X23
	0x03D0271C BLR X8
	0x03D02720 SUB W8, W0, 0x1
	0x03D02724 CMP W20, W8
	0x03D02728 B.GT 0x3D02A64
	0x03D0272C LDR W8, [X19 + 0x428]
	0x03D02730 CBZ W8, 0x3D02A64
	0x03D02734 LDR X0, [X19 + 0x448]
	0x03D02738 CBZ X0, 0x3D02AE0
	0x03D0273C LDR X8, [X0]
	0x03D02740 MOV W1, W20
	0x03D02744 LDP X9, X2, [X8 + 0x1F8]
	0x03D02748 BLR X9
	0x03D0274C CMP W24, 0x2
	0x03D02750 B.EQ 0x3D027AC
	0x03D02754 CMP W24, 0x1
	0x03D02758 B.NE 0x3D02A64
	0x03D0275C LDR W8, [X19 + 0x428]
	0x03D02760 CMP W8, 0x2
	0x03D02764 B.NE 0x3D02804
	0x03D02768 TBZ X22, 0x0, 0x3D02804
	0x03D0276C MOV W1, W0
	0x03D02770 LDR X0, [X19 + 0x468]
	0x03D02774 CBZ X0, 0x3D02AE0
	0x03D02778 ADRP X8, 0x3F5000
	0x03D0277C LDR X8, [X8 + 0xB68]
	0x03D02780 LDR X2, [X8]
	0x03D02784 BL 0x2FDCA84
	0x03D02788 TBZ X0, 0x0, 0x3D02894
	0x03D0278C MOV X0, X19
	0x03D02790 MOV W1, W20
	0x03D02794 LDP X20, X19, [X31 + 0x40]
	0x03D02798 LDP X22, X21, [X31 + 0x30]
	0x03D0279C LDP X24, X23, [X31 + 0x20]
	0x03D027A0 LDR X30, [X31 + 0x10]
	0x03D027A4 LDP D9, D8, [X31], #0x50
	0x03D027A8 B 0x3D02BB0
	0x03D027AC LDR X8, [X19 + 0x3D8]
	0x03D027B0 CBZ X8, 0x3D02A64
	0x03D027B4 LDR X21, [X19 + 0x470]
	0x03D027B8 CBZ X21, 0x3D02AE0
	0x03D027BC ADRP X10, 0x419000
	0x03D027C0 LDR X8, [X21]
	0x03D027C4 LDR X10, [X10 + 0x7B8]
	0x03D027C8 LDRH W9, [X8 + 0x12E]
	0x03D027CC LDR X1, [X10]
	0x03D027D0 CBZ X9, 0x3D027F4
	0x03D027D4 LDR X10, [X8 + 0xB0]
	0x03D027D8 ADD X10, X10, 0x8
	0x03D027DC LDUR X11, [X10 - 0x8]
	0x03D027E0 CMP X11, X1
	0x03D027E4 B.EQ 0x3D028B4
	0x03D027E8 SUBS X9, X9, 0x1
	0x03D027EC ADD X10, X10, 0x10
	0x03D027F0 B.NE 0x3D027DC
	0x03D027F4 MOV X0, X21
	0x03D027F8 MOV W2, W31
	0x03D027FC BL 0x1C5C788
	0x03D02800 B 0x3D028C0
	0x03D02804 CMP W8, 0x2
	0x03D02808 B.NE 0x3D02840
	0x03D0280C TBZ X21, 0x0, 0x3D02840
	0x03D02810 LDR X8, [X19 + 0x470]
	0x03D02814 CBZ X8, 0x3D02AE0
	0x03D02818 LDR W8, [X8 + 0x18]
	0x03D0281C CBZ W8, 0x3D02AC0
	0x03D02820 MOV X0, X19
	0x03D02824 MOV W1, W20
	0x03D02828 LDP X20, X19, [X31 + 0x40]
	0x03D0282C LDP X22, X21, [X31 + 0x30]
	0x03D02830 LDP X24, X23, [X31 + 0x20]
	0x03D02834 LDR X30, [X31 + 0x10]
	0x03D02838 LDP D9, D8, [X31], #0x50
	0x03D0283C B 0x3D02C84
	0x03D02840 CMP W8, 0x2
	0x03D02844 B.NE 0x3D02A80
	0x03D02848 LDR X0, [X19 + 0x470]
	0x03D0284C CBZ X0, 0x3D02AE0
	0x03D02850 ADRP X8, 0x3F5000
	0x03D02854 LDR X8, [X8 + 0xB68]
	0x03D02858 MOV W1, W20
	0x03D0285C LDR X2, [X8]
	0x03D02860 BL 0x2FDCA84
	0x03D02864 TBZ X0, 0x0, 0x3D02A7C
	0x03D02868 LDR X8, [X19 + 0x400]
	0x03D0286C CBZ X8, 0x3D02A64
	0x03D02870 LDR X2, [X8 + 0x18]
	0x03D02874 LDR X0, [X8 + 0x40]
	0x03D02878 LDR X1, [X8 + 0x28]
	0x03D0287C LDP X20, X19, [X31 + 0x40]
	0x03D02880 LDP X22, X21, [X31 + 0x30]
	0x03D02884 LDP X24, X23, [X31 + 0x20]
	0x03D02888 LDR X30, [X31 + 0x10]
	0x03D0288C LDP D9, D8, [X31], #0x50
	0x03D02890 BR X2
	0x03D02894 MOV X0, X19
	0x03D02898 MOV W1, W20
	0x03D0289C LDP X20, X19, [X31 + 0x40]
	0x03D028A0 LDP X22, X21, [X31 + 0x30]
	0x03D028A4 LDP X24, X23, [X31 + 0x20]
	0x03D028A8 LDR X30, [X31 + 0x10]
	0x03D028AC LDP D9, D8, [X31], #0x50
	0x03D028B0 B 0x3D02C0C
	0x03D028B4 LDRSW X9, [X10]
	0x03D028B8 ADD X8, X8, X9, 0x4, LSL
	0x03D028BC ADD X0, X8, 0x138
	0x03D028C0 LDP X8, X1, [X0]
	0x03D028C4 MOV X0, X21
	0x03D028C8 BLR X8
	0x03D028CC MOV X21, X0
	0x03D028D0 CBZ X0, 0x3D02AE4
	0x03D028D4 ADRP X22, 0x3F1000
	0x03D028D8 ADRP X24, 0x419000
	0x03D028DC LDR X22, [X22 + 0xE18]
	0x03D028E0 LDR X24, [X24 + 0x7C0]
	0x03D028E4 LDR X8, [X21]
	0x03D028E8 LDR X1, [X22]
	0x03D028EC LDRH W9, [X8 + 0x12E]
	0x03D028F0 CBZ X9, 0x3D02914
	0x03D028F4 LDR X10, [X8 + 0xB0]
	0x03D028F8 ADD X10, X10, 0x8
	0x03D028FC LDUR X11, [X10 - 0x8]
	0x03D02900 CMP X11, X1
	0x03D02904 B.EQ 0x3D02924
	0x03D02908 SUBS X9, X9, 0x1
	0x03D0290C ADD X10, X10, 0x10
	0x03D02910 B.NE 0x3D028FC
	0x03D02914 MOV X0, X21
	0x03D02918 MOV W2, W31
	0x03D0291C BL 0x1C5C788
	0x03D02920 B 0x3D02930
	0x03D02924 LDRSW X9, [X10]
	0x03D02928 ADD X8, X8, X9, 0x4, LSL
	0x03D0292C ADD X0, X8, 0x138

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x6E6000
	009 Move W8, [X22+2058]
	010 Move X19, X2
	011 Move W20, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x462000
	018 Move X0, [X0+224]
	019 Call 0x1C17CF4
	020 Move X0, 0x462000
	021 Move X0, [X0+232]
	022 Call 0x1C17CF4
	023 Move X0, 0x462000
	024 Move X0, [X0+240]
	025 Call 0x1C17CF4
	026 Move X0, 0x41D000
	027 Move X0, [X0+312]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2058], W8
	031 Move X23, 0x462000
	032 Move X24, 0x462000
	033 Move X23, [X23+232]
	034 Move X24, [X24+224]
	035 Compare X19, 0
	036 JumpIfEqual {56}
	037 Move X9, [X19]
	038 Move X8, [X23]
	039 Move W11, [X9+304]
	040 Move W10, [X8+304]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X9, [X9+200]
	043 Add X9, X9, X10
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, 0x41D000
	047 Move X8, [X8+312]
	048 Move X0, X19
	049 Move X1, [X8]
	050 Call 0x2EE7C18, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {56}
	055 Move W22, 1
	056 Move X1, [X24]
	057 Move X0, X19
	058 Call 0x1C17E00
	059 Compare X0, 0
	060 JumpIfEqual {90}
	061 Move X8, [X0]
	062 Move X1, [X24]
	063 Move X22, X0
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move X0, X22
	074 Move W2, W31
	075 Call 0x1C5D788
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Add X8, X8, X9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X1, [X0+8]
	081 Move X0, X22
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {90}
	087 Move W22, 1
	088 Compare X19, 0
	089 JumpIfNotEqual {93}
	090 Move W22, W31
	091 Compare X19, 0
	092 JumpIfEqual {120}
	093 Move X9, [X19]
	094 Move X8, [X23]
	095 Move W11, [X9+304]
	096 Move W10, [X8+304]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X9, [X9+200]
	099 Add X9, X9, X10
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, 0x462000
	103 Move X8, [X8+240]
	104 Move X0, X19
	105 Move X1, [X8]
	106 Call 0x2EE7C3C, X0
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {120}
	111 Move W3, 1
	112 Move X0, X21
	113 Move W1, W20
	114 Move W2, W22
	115 Call BaseVerticalCollectionView.Apply, X0, X1, X2, X3
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {164}
	120 Move X1, [X24]
	121 Move X0, X19
	122 Call 0x1C17E00
	123 Compare X0, 0
	124 JumpIfEqual {153}
	125 Move X8, [X0]
	126 Move X1, [X24]
	127 Move X23, X0
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move W2, 1
	138 Move X0, X23
	139 Call 0x1C5D788
	140 Move W9, [X10]
	141 Add W9, W9, 1
	142 Add X8, X8, W9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X23
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {153}
	152 Move W3, 1
	153 Move W3, W31
	154 Move X0, X21
	155 Move W1, W20
	156 Move W2, W22
	157 Call BaseVerticalCollectionView.Apply, X0, X1, X2, X3
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {178}
	162 Compare X19, 0
	163 JumpIfEqual {186}
	164 Move X0, X19
	165 Move X1, X31
	166 Call EventBase.StopPropagation, X0
	167 Move X0, X19
	168 Move X20, [X31+48]
	169 Move X19, [X31+56]
	170 Move X22, [X31+32]
	171 Move X21, [X31+40]
	172 Move X24, [X31+16]
	173 Move X23, [X31+24]
	174 Move X1, X31
	175 Move X30, [X31+64]
	176 Call EventBase.PreventDefault, X0
	177 Return 
	178 Move X20, [X31+48]
	179 Move X19, [X31+56]
	180 Move X22, [X31+32]
	181 Move X21, [X31+40]
	182 Move X24, [X31+16]
	183 Move X23, [X31+24]
	184 Move X30, [X31+64]
	185 Return 
	186 Call 0x1C17F20

Method: System.Boolean HandleItemNavigation(System.Boolean moveIn, System.Boolean altKey)

Disassembly:
	0x03D02930 LDP X8, X1, [X0]
	0x03D02934 MOV X0, X21

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt)

Disassembly:
	0x03D02938 BLR X8
	0x03D0293C MOV W23, W0
	0x03D02940 TBZ X0, 0x0, 0x3D029A4
	0x03D02944 LDR X8, [X21]
	0x03D02948 LDR X1, [X24]
	0x03D0294C LDRH W9, [X8 + 0x12E]
	0x03D02950 CBZ X9, 0x3D02974
	0x03D02954 LDR X10, [X8 + 0xB0]
	0x03D02958 ADD X10, X10, 0x8
	0x03D0295C LDUR X11, [X10 - 0x8]
	0x03D02960 CMP X11, X1
	0x03D02964 B.EQ 0x3D02984
	0x03D02968 SUBS X9, X9, 0x1
	0x03D0296C ADD X10, X10, 0x10
	0x03D02970 B.NE 0x3D0295C
	0x03D02974 MOV X0, X21
	0x03D02978 MOV W2, W31
	0x03D0297C BL 0x1C5C788
	0x03D02980 B 0x3D02990
	0x03D02984 LDRSW X9, [X10]
	0x03D02988 ADD X8, X8, X9, 0x4, LSL
	0x03D0298C ADD X0, X8, 0x138
	0x03D02990 LDP X8, X1, [X0]
	0x03D02994 MOV X0, X21
	0x03D02998 BLR X8
	0x03D0299C CMP W20, W0
	0x03D029A0 B.NE 0x3D028E4
	0x03D029A4 MOV X22, X31
	0x03D029A8 AND W23, W23, 0x1
	0x03D029AC MOVZ W24, 0x23
	0x03D029B0 CBZ X21, 0x3D02A14
	0x03D029B4 ADRP X10, 0x3F1000
	0x03D029B8 LDR X8, [X21]
	0x03D029BC LDR X10, [X10 + 0xE00]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6E6000
	006 Move W8, [X21+2059]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x41D000
	014 Move X0, [X0+184]
	015 Call 0x1C17CF4
	016 Move X0, 0x41D000
	017 Move X0, [X0+192]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2059], W8
	021 Compare X19, 0
	022 JumpIfEqual {50}
	023 Move W8, [X19+172]
	024 Compare W8, 0
	025 JumpIfEqual {31}
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Move W8, [X19+176]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {42}
	036 Move X0, X20
	037 Move X1, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Move X0, X20
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call BaseVerticalCollectionView.ProcessPointerDown, X0, X1
	049 Return 
	050 Call 0x1C17F20

Method: System.Void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt)

Disassembly:
	0x03D0337C MOV W2, W31
	0x03D03380 BL 0x1C5C788
	0x03D03384 B 0x3D03394
	0x03D03388 LDRSW X9, [X10]
	0x03D0338C ADD X8, X8, X9, 0x4, LSL
	0x03D03390 ADD X0, X8, 0x138
	0x03D03394 LDP X8, X1, [X0]
	0x03D03398 MOV X0, X20
	0x03D0339C BLR X8
	0x03D033A0 MOV W1, W0
	0x03D033A4 MOV X0, X19
	0x03D033A8 BL 0x3D0355C
	0x03D033AC B 0x3D032EC
	0x03D033B0 MOV X21, X31
	0x03D033B4 CBZ X20, 0x3D03418
	0x03D033B8 ADRP X10, 0x3F0000
	0x03D033BC LDR X8, [X20]
	0x03D033C0 LDR X10, [X10 + 0xE00]
	0x03D033C4 LDRH W9, [X8 + 0x12E]
	0x03D033C8 LDR X1, [X10]
	0x03D033CC CBZ X9, 0x3D033F0
	0x03D033D0 LDR X10, [X8 + 0xB0]
	0x03D033D4 ADD X10, X10, 0x8
	0x03D033D8 LDUR X11, [X10 - 0x8]
	0x03D033DC CMP X11, X1
	0x03D033E0 B.EQ 0x3D03400
	0x03D033E4 SUBS X9, X9, 0x1
	0x03D033E8 ADD X10, X10, 0x10
	0x03D033EC B.NE 0x3D033D8
	0x03D033F0 MOV X0, X20
	0x03D033F4 MOV W2, W31
	0x03D033F8 BL 0x1C5C788
	0x03D033FC B 0x3D0340C
	0x03D03400 LDRSW X9, [X10]
	0x03D03404 ADD X8, X8, X9, 0x4, LSL
	0x03D03408 ADD X0, X8, 0x138
	0x03D0340C LDP X8, X1, [X0]
	0x03D03410 MOV X0, X20
	0x03D03414 BLR X8
	0x03D03418 CBNZ X21, 0x3D03440
	0x03D0341C MOV X0, X19
	0x03D03420 BL 0x3D034FC
	0x03D03424 MOV X0, X19
	0x03D03428 LDP X20, X19, [X31 + 0x20]
	0x03D0342C LDP X22, X21, [X31 + 0x10]
	0x03D03430 MOV X1, X31
	0x03D03434 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6E5000
	007 Move W8, [X21+2060]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x41C000
	015 Move X0, [X0+3320]
	016 Call 0x1C17CF4
	017 Move X0, 0x41C000
	018 Move X0, [X0+3328]
	019 Call 0x1C17CF4
	020 Move X0, 0x41A000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2060], W8
	025 Compare X19, 0
	026 JumpIfEqual {60}
	027 Move X22, 0x41A000
	028 Move X22, [X22+3672]
	029 Move X21, [X19+160]
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X22]
	036 Move X8, [X0+184]
	037 Move X0, X21
	038 Move X2, X31
	039 Move X1, [X8]
	040 Call String.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {48}
	045 Move X0, X20
	046 Move X1, X19
	047 Call BaseVerticalCollectionView.ProcessPointerDown, X0, X1
	048 Move X0, X20
	049 Move X1, X31
	050 Call VisualElement.get_panel, X0
	051 Move W1, [X19+156]
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X2, X31
	057 Move X30, [X31+48]
	058 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	059 Return 
	060 Call 0x1C17F20

Method: System.Void OnPointerCancel(UnityEngine.UIElements.PointerCancelEvent evt)

Disassembly:
	0x03D03438 B 0x3DF276C
	0x03D0343C BL 0x1C16F20
	0x03D03440 MOV X0, X21
	0x03D03444 BL 0x1C16F18
	0x03D03448 B 0x3D03454
	0x03D0344C B 0x3D03454
	0x03D03450 B 0x3D03454
	0x03D03454 MOV X22, X0
	0x03D03458 CMP W1, 0x1
	0x03D0345C B.NE 0x3D03474
	0x03D03460 MOV X0, X22
	0x03D03464 BL 0x3EB1AD0
	0x03D03468 LDR X21, [X0]
	0x03D0346C BL 0x3EB1AE0
	0x03D03470 B 0x3D033B4
	0x03D03474 MOV X21, X31
	0x03D03478 B 0x3D03480
	0x03D0347C MOV X22, X0
	0x03D03480 CBZ X20, 0x3D034E4
	0x03D03484 ADRP X10, 0x3F0000
	0x03D03488 LDR X8, [X20]
	0x03D0348C LDR X10, [X10 + 0xE00]
	0x03D03490 LDRH W9, [X8 + 0x12E]
	0x03D03494 LDR X1, [X10]
	0x03D03498 CBZ X9, 0x3D034BC
	0x03D0349C LDR X10, [X8 + 0xB0]
	0x03D034A0 ADD X10, X10, 0x8
	0x03D034A4 LDUR X11, [X10 - 0x8]
	0x03D034A8 CMP X11, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6E5000
	006 Move W8, [X21+2061]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x461000
	014 Move X0, [X0+248]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2061], W8
	018 Move X8, [X19]
	019 Move X0, X19
	020 Move X9, [X8+2056]
	021 Move X1, [X8+2064]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {39}
	027 Compare X20, 0
	028 JumpIfEqual {44}
	029 Move W8, [X20+168]
	030 Compare W8, 0
	031 JumpIfEqual {39}
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call BaseVerticalCollectionView.ClearSelection, X0
	038 Return 
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 
	044 Call 0x1C17F20

Method: System.Void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt)

Disassembly:
	0x03D034AC B.EQ 0x3D034CC
	0x03D034B0 SUBS X9, X9, 0x1
	0x03D034B4 ADD X10, X10, 0x10
	0x03D034B8 B.NE 0x3D034A4
	0x03D034BC MOV X0, X20
	0x03D034C0 MOV W2, W31
	0x03D034C4 BL 0x1C5C788
	0x03D034C8 B 0x3D034D8
	0x03D034CC LDRSW X9, [X10]
	0x03D034D0 ADD X8, X8, X9, 0x4, LSL
	0x03D034D4 ADD X0, X8, 0x138
	0x03D034D8 LDP X8, X1, [X0]
	0x03D034DC MOV X0, X20
	0x03D034E0 BLR X8
	0x03D034E4 CBNZ X21, 0x3D034F0
	0x03D034E8 MOV X0, X22
	0x03D034EC BL 0x1D2C690
	0x03D034F0 MOV X0, X21
	0x03D034F4 BL 0x1C16F18
	0x03D034F8 BL 0x1990590
	0x03D034FC STP X30, X19, [X31 - 0x10]!
	0x03D03500 LDR X8, [X0]
	0x03D03504 MOV X19, X0
	0x03D03508 LDR X9, [X8 + 0x808]
	0x03D0350C LDR X1, [X8 + 0x810]
	0x03D03510 BLR X9
	0x03D03514 TBZ X0, 0x0, 0x3D03554
	0x03D03518 LDR X8, [X19 + 0x3E0]
	0x03D0351C CBZ X8, 0x3D03534
	0x03D03520 LDR X1, [X19 + 0x478]
	0x03D03524 LDR X9, [X8 + 0x18]
	0x03D03528 LDR X0, [X8 + 0x40]
	0x03D0352C LDR X2, [X8 + 0x28]
	0x03D03530 BLR X9
	0x03D03534 LDR X8, [X19 + 0x3E8]
	0x03D03538 CBZ X8, 0x3D03554
	0x03D0353C LDR X1, [X19 + 0x470]
	0x03D03540 LDR X3, [X8 + 0x18]
	0x03D03544 LDR X0, [X8 + 0x40]
	0x03D03548 LDR X2, [X8 + 0x28]
	0x03D0354C LDP X30, X19, [X31], #0x10
	0x03D03550 BR X3
	0x03D03554 LDP X30, X19, [X31], #0x10
	0x03D03558 RET
	0x03D0355C STP X30, X25, [X31 - 0x40]!
	0x03D03560 STP X24, X23, [X31 + 0x10]
	0x03D03564 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6E5000
	007 Move W8, [X21+2062]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x41C000
	015 Move X0, [X0+3360]
	016 Call 0x1C17CF4
	017 Move X0, 0x461000
	018 Move X0, [X0+256]
	019 Call 0x1C17CF4
	020 Move X0, 0x41A000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2062], W8
	025 Compare X19, 0
	026 JumpIfEqual {60}
	027 Move X22, 0x41A000
	028 Move X22, [X22+3672]
	029 Move X21, [X19+160]
	030 Move X0, [X22]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X22]
	036 Move X8, [X0+184]
	037 Move X0, X21
	038 Move X2, X31
	039 Move X1, [X8]
	040 Call String.op_Inequality, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {48}
	045 Move X0, X20
	046 Move X1, X19
	047 Call BaseVerticalCollectionView.ProcessPointerUp, X0, X1
	048 Move X0, X20
	049 Move X1, X31
	050 Call VisualElement.get_panel, X0
	051 Move W1, [X19+156]
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X2, X31
	057 Move X30, [X31+48]
	058 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	059 Return 
	060 Call 0x1C17F20

Method: System.Void ProcessPointerDown(UnityEngine.UIElements.IPointerEvent evt)

Disassembly:
	0x03D02F9C B.EQ 0x3D02FBC
	0x03D02FA0 SUBS X9, X9, 0x1
	0x03D02FA4 ADD X10, X10, 0x10
	0x03D02FA8 B.NE 0x3D02F94
	0x03D02FAC MOV X0, X20
	0x03D02FB0 MOV W2, W31
	0x03D02FB4 BL 0x1C5C788
	0x03D02FB8 B 0x3D02FC8
	0x03D02FBC LDRSW X9, [X10]
	0x03D02FC0 ADD X8, X8, X9, 0x4, LSL
	0x03D02FC4 ADD X0, X8, 0x138
	0x03D02FC8 LDP X8, X1, [X0]
	0x03D02FCC MOV X0, X20
	0x03D02FD0 BLR X8
	0x03D02FD4 CBZ X0, 0x3D030C0
	0x03D02FD8 LDR X8, [X0]
	0x03D02FDC LDP X9, X2, [X8 + 0x1C8]
	0x03D02FE0 MOV W1, W31
	0x03D02FE4 BLR X9
	0x03D02FE8 B 0x3D02F20
	0x03D02FEC MOV X21, X31
	0x03D02FF0 CBZ X20, 0x3D0304C
	0x03D02FF4 LDR X8, [X20]
	0x03D02FF8 LDR X1, [X22]
	0x03D02FFC LDRH W9, [X8 + 0x12E]
	0x03D03000 CBZ X9, 0x3D03024
	0x03D03004 LDR X10, [X8 + 0xB0]
	0x03D03008 ADD X10, X10, 0x8
	0x03D0300C LDUR X11, [X10 - 0x8]
	0x03D03010 CMP X11, X1
	0x03D03014 B.EQ 0x3D03034
	0x03D03018 SUBS X9, X9, 0x1
	0x03D0301C ADD X10, X10, 0x10
	0x03D03020 B.NE 0x3D0300C
	0x03D03024 MOV X0, X20
	0x03D03028 MOV W2, W31
	0x03D0302C BL 0x1C5C788
	0x03D03030 B 0x3D03040
	0x03D03034 LDRSW X9, [X10]
	0x03D03038 ADD X8, X8, X9, 0x4, LSL
	0x03D0303C ADD X0, X8, 0x138
	0x03D03040 LDP X8, X1, [X0]
	0x03D03044 MOV X0, X20
	0x03D03048 BLR X8
	0x03D0304C CBNZ X21, 0x3D030CC
	0x03D03050 LDR X8, [X19 + 0x468]
	0x03D03054 CBZ X8, 0x3D030C4
	0x03D03058 LDR W9, [X8 + 0x1C]
	0x03D0305C ADD W9, W9, 0x1
	0x03D03060 STP W31, W9, [X8 + 0x18]
	0x03D03064 LDR X8, [X19 + 0x470]
	0x03D03068 CBZ X8, 0x3D030C4
	0x03D0306C LDR W9, [X8 + 0x1C]
	0x03D03070 ADD W9, W9, 0x1
	0x03D03074 STP W31, W9, [X8 + 0x18]
	0x03D03078 LDR X8, [X19 + 0x478]
	0x03D0307C CBZ X8, 0x3D030C4
	0x03D03080 LDP W2, W9, [X8 + 0x18]
	0x03D03084 ADD W9, W9, 0x1
	0x03D03088 CMP W2, 0x1
	0x03D0308C STP W31, W9, [X8 + 0x18]
	0x03D03090 B.LT 0x3D030B0
	0x03D03094 LDR X0, [X8 + 0x10]
	0x03D03098 LDP X20, X19, [X31 + 0x20]
	0x03D0309C LDP X22, X21, [X31 + 0x10]
	0x03D030A0 MOV W1, W31
	0x03D030A4 MOV X3, X31
	0x03D030A8 LDP X30, X23, [X31], #0x30
	0x03D030AC B 0x339FA34
	0x03D030B0 LDP X20, X19, [X31 + 0x20]
	0x03D030B4 LDP X22, X21, [X31 + 0x10]
	0x03D030B8 LDP X30, X23, [X31], #0x30
	0x03D030BC RET
	0x03D030C0 BL 0x1C16F20
	0x03D030C4 BL 0x1C16F20
	0x03D030C8 BL 0x1C16F20
	0x03D030CC MOV X0, X21
	0x03D030D0 BL 0x1C16F18
	0x03D030D4 B 0x3D030E4
	0x03D030D8 B 0x3D030E4
	0x03D030DC B 0x3D030E4
	0x03D030E0 B 0x3D030E4
	0x03D030E4 CMP W1, 0x1
	0x03D030E8 B.NE 0x3D030FC
	0x03D030EC BL 0x3EB1AD0
	0x03D030F0 LDR X21, [X0]
	0x03D030F4 BL 0x3EB1AE0
	0x03D030F8 B 0x3D02FF0
	0x03D030FC MOV X19, X0
	0x03D03100 MOV X21, X31
	0x03D03104 B 0x3D0310C
	0x03D03108 MOV X19, X0
	0x03D0310C CBZ X20, 0x3D03168
	0x03D03110 LDR X8, [X20]
	0x03D03114 LDR X1, [X22]
	0x03D03118 LDRH W9, [X8 + 0x12E]
	0x03D0311C CBZ X9, 0x3D03140
	0x03D03120 LDR X10, [X8 + 0xB0]
	0x03D03124 ADD X10, X10, 0x8
	0x03D03128 LDUR X11, [X10 - 0x8]
	0x03D0312C CMP X11, X1
	0x03D03130 B.EQ 0x3D03150
	0x03D03134 SUBS X9, X9, 0x1
	0x03D03138 ADD X10, X10, 0x10
	0x03D0313C B.NE 0x3D03128
	0x03D03140 MOV X0, X20
	0x03D03144 MOV W2, W31
	0x03D03148 BL 0x1C5C788
	0x03D0314C B 0x3D0315C
	0x03D03150 LDRSW X9, [X10]
	0x03D03154 ADD X8, X8, X9, 0x4, LSL
	0x03D03158 ADD X0, X8, 0x138
	0x03D0315C LDP X8, X1, [X0]
	0x03D03160 MOV X0, X20
	0x03D03164 BLR X8
	0x03D03168 CBNZ X21, 0x3D03174
	0x03D0316C MOV X0, X19
	0x03D03170 BL 0x1D2C690
	0x03D03174 MOV X0, X21
	0x03D03178 BL 0x1C16F18
	0x03D0317C BL 0x1990590
	0x03D03180 STR X30, [X31 - 0x30]!
	0x03D03184 STP X22, X21, [X31 + 0x10]
	0x03D03188 STP X20, X19, [X31 + 0x20]
	0x03D0318C ADRP X21, 0x6E4000
	0x03D03190 LDRB W8, [X21 + 0x815]
	0x03D03194 MOV X20, X1
	0x03D03198 MOV X19, X0
	0x03D0319C TBNZ X8, 0x0, 0x3D031E4
	0x03D031A0 ADRP X0, 0x418000
	0x03D031A4 LDR X0, [X0 + 0x7A0]
	0x03D031A8 BL 0x1C16CF4
	0x03D031AC ADRP X0, 0x3F0000
	0x03D031B0 LDR X0, [X0 + 0xE00]
	0x03D031B4 BL 0x1C16CF4
	0x03D031B8 ADRP X0, 0x418000
	0x03D031BC LDR X0, [X0 + 0x7B8]
	0x03D031C0 BL 0x1C16CF4
	0x03D031C4 ADRP X0, 0x418000
	0x03D031C8 LDR X0, [X0 + 0x7C0]
	0x03D031CC BL 0x1C16CF4
	0x03D031D0 ADRP X0, 0x3F0000
	0x03D031D4 LDR X0, [X0 + 0xE18]
	0x03D031D8 BL 0x1C16CF4
	0x03D031DC MOVZ W8, 0x1
	0x03D031E0 STRB W8, [X21 + 0x815]
	0x03D031E4 LDR X8, [X19]
	0x03D031E8 MOV X0, X19
	0x03D031EC LDR X9, [X8 + 0x808]
	0x03D031F0 LDR X1, [X8 + 0x810]
	0x03D031F4 BLR X9
	0x03D031F8 CBZ X20, 0x3D032AC
	0x03D031FC TBZ X0, 0x0, 0x3D032AC
	0x03D03200 ADRP X10, 0x418000
	0x03D03204 LDR X8, [X20]
	0x03D03208 LDR X10, [X10 + 0x7A0]
	0x03D0320C LDRH W9, [X8 + 0x12E]
	0x03D03210 LDR X1, [X10]
	0x03D03214 CBZ X9, 0x3D03238
	0x03D03218 LDR X10, [X8 + 0xB0]
	0x03D0321C ADD X10, X10, 0x8
	0x03D03220 LDUR X11, [X10 - 0x8]
	0x03D03224 CMP X11, X1
	0x03D03228 B.EQ 0x3D03248
	0x03D0322C SUBS X9, X9, 0x1
	0x03D03230 ADD X10, X10, 0x10
	0x03D03234 B.NE 0x3D03220
	0x03D03238 MOV X0, X20
	0x03D0323C MOV W2, W31
	0x03D03240 BL 0x1C5C788
	0x03D03244 B 0x3D03254
	0x03D03248 LDRSW X9, [X10]
	0x03D0324C ADD X8, X8, X9, 0x4, LSL
	0x03D03250 ADD X0, X8, 0x138
	0x03D03254 LDP X8, X1, [X0]
	0x03D03258 MOV X0, X20
	0x03D0325C BLR X8
	0x03D03260 CBZ W0, 0x3D032AC
	0x03D03264 ADRP X10, 0x418000
	0x03D03268 LDR X8, [X20]
	0x03D0326C LDR X10, [X10 + 0x7B8]
	0x03D03270 LDRH W9, [X8 + 0x12E]
	0x03D03274 LDR X1, [X10]
	0x03D03278 CBZ X9, 0x3D0329C
	0x03D0327C LDR X10, [X8 + 0xB0]
	0x03D03280 ADD X10, X10, 0x8
	0x03D03284 LDUR X11, [X10 - 0x8]
	0x03D03288 CMP X11, X1
	0x03D0328C B.EQ 0x3D032BC
	0x03D03290 SUBS X9, X9, 0x1
	0x03D03294 ADD X10, X10, 0x10
	0x03D03298 B.NE 0x3D03284
	0x03D0329C MOV X0, X20
	0x03D032A0 MOV W2, W31
	0x03D032A4 BL 0x1C5C788
	0x03D032A8 B 0x3D032C8
	0x03D032AC LDP X20, X19, [X31 + 0x20]
	0x03D032B0 LDP X22, X21, [X31 + 0x10]
	0x03D032B4 LDR X30, [X31], #0x30
	0x03D032B8 RET
	0x03D032BC LDRSW X9, [X10]
	0x03D032C0 ADD X8, X8, X9, 0x4, LSL
	0x03D032C4 ADD X0, X8, 0x138
	0x03D032C8 LDP X8, X1, [X0]
	0x03D032CC MOV X0, X20
	0x03D032D0 BLR X8
	0x03D032D4 MOV X20, X0
	0x03D032D8 CBZ X0, 0x3D0343C
	0x03D032DC ADRP X21, 0x3F0000
	0x03D032E0 ADRP X22, 0x418000
	0x03D032E4 LDR X21, [X21 + 0xE18]
	0x03D032E8 LDR X22, [X22 + 0x7C0]
	0x03D032EC LDR X8, [X20]
	0x03D032F0 LDR X1, [X21]
	0x03D032F4 LDRH W9, [X8 + 0x12E]
	0x03D032F8 CBZ X9, 0x3D0331C
	0x03D032FC LDR X10, [X8 + 0xB0]
	0x03D03300 ADD X10, X10, 0x8
	0x03D03304 LDUR X11, [X10 - 0x8]
	0x03D03308 CMP X11, X1
	0x03D0330C B.EQ 0x3D0332C
	0x03D03310 SUBS X9, X9, 0x1
	0x03D03314 ADD X10, X10, 0x10
	0x03D03318 B.NE 0x3D03304
	0x03D0331C MOV X0, X20
	0x03D03320 MOV W2, W31
	0x03D03324 BL 0x1C5C788
	0x03D03328 B 0x3D03338
	0x03D0332C LDRSW X9, [X10]
	0x03D03330 ADD X8, X8, X9, 0x4, LSL
	0x03D03334 ADD X0, X8, 0x138
	0x03D03338 LDP X8, X1, [X0]
	0x03D0333C MOV X0, X20
	0x03D03340 BLR X8
	0x03D03344 TBZ X0, 0x0, 0x3D033B0
	0x03D03348 LDR X8, [X20]
	0x03D0334C LDR X1, [X22]
	0x03D03350 LDRH W9, [X8 + 0x12E]
	0x03D03354 CBZ X9, 0x3D03378
	0x03D03358 LDR X10, [X8 + 0xB0]
	0x03D0335C ADD X10, X10, 0x8
	0x03D03360 LDUR X11, [X10 - 0x8]
	0x03D03364 CMP X11, X1
	0x03D03368 B.EQ 0x3D03388
	0x03D0336C SUBS X9, X9, 0x1
	0x03D03370 ADD X10, X10, 0x10
	0x03D03374 B.NE 0x3D03360
	0x03D03378 MOV X0, X20

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x6E6000
	010 Move W8, [X21+2063]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x41B000
	018 Move X0, [X0+3704]
	019 Call 0x1C17CF4
	020 Move X0, 0x41B000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2063], W8
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+2056]
	028 Move X1, [X8+2064]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {166}
	034 Compare X20, 0
	035 JumpIfEqual {269}
	036 Move X22, 0x41B000
	037 Move X8, [X20]
	038 Call 0x3EB29E4
	039 Return 
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X22]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move W2, 2
	051 Move X0, X20
	052 Call 0x1C5D788
	053 Move W9, [X10]
	054 Add W9, W9, 2
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X20
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {166}
	065 Move X8, [X20]
	066 Move X1, [X22]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move W2, 3
	077 Move X0, X20
	078 Call 0x1C5D788
	079 Move W9, [X10]
	080 Add W9, W9, 3
	081 Add X8, X8, W9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X1, [X0+8]
	085 Move X0, X20
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare W0, 0
	088 JumpIfNotEqual {166}
	089 Move X8, [X20]
	090 Move X1, [X22]
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move W2, 1
	101 Move X0, X20
	102 Call 0x1C5D788
	103 Move W9, [X10]
	104 Add W9, W9, 1
	105 Add X8, X8, W9
	106 Add X0, X8, 312
	107 Move X8, [X0]
	108 Move X1, [X0+8]
	109 Move X0, X20
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X23, 0x41A000
	112 Move X23, [X23+3672]
	113 Move X21, X0
	114 Move X8, [X23]
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {121}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move X8, [X23]
	121 Move X8, [X8+184]
	122 Move X0, X21
	123 Move X2, X31
	124 Move X1, [X8]
	125 Call String.op_Inequality, X0, X1
	126 Move X8, [X20]
	127 Move X1, [X22]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {144}
	133 Compare W9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 5
	142 Move X0, X20
	143 Call 0x1C5D788
	144 Compare W9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move W2, 6
	153 Move X0, X20
	154 Call 0x1C5D788
	155 Move W9, [X10]
	156 Add W9, W9, 5
	157 Add X8, X8, W9
	158 Add X0, X8, 312
	159 Move X8, [X0]
	160 Move X1, [X0+8]
	161 Move X0, X20
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move [X19+1184], S0
	164 Move [X19+1188], S1
	165 Move [X19+1192], S2
	166 Move X20, [X31+48]
	167 Move X19, [X31+56]
	168 Move X22, [X31+32]
	169 Move X21, [X31+40]
	170 Move X30, [X31+16]
	171 Move X23, [X31+24]
	172 Move D9, [X31+64]
	173 Move D8, [X31+72]
	174 Return 
	175 Move W9, [X10]
	176 Add W9, W9, 6
	177 Add X8, X8, W9
	178 Add X0, X8, 312
	179 Move X8, [X0]
	180 Move X1, [X0+8]
	181 Move X0, X20
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X8, [X20]
	184 Move X1, [X22]
	185 Move V8, V0
	186 Move V9, V1
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move W2, 9
	197 Move X0, X20
	198 Call 0x1C5D788
	199 Move W9, [X10]
	200 Add W9, W9, 9
	201 Add X8, X8, W9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X1, [X0+8]
	205 Move X0, X20
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move X8, [X20]
	208 Move X1, [X22]
	209 Move W21, W0
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 Compare X9, 0
	212 JumpIfEqual {219}
	213 Move X10, [X8+176]
	214 Add X10, X10, 8
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Subtract X9, X9, 1
	218 Add X10, X10, 16
	219 Move W2, 24
	220 Move X0, X20
	221 Call 0x1C5D788
	222 Move W9, [X10]
	223 Add W9, W9, 24
	224 Add X8, X8, W9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X1, [X0+8]
	228 Move X0, X20
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move X8, [X20]
	231 Move X1, [X22]
	232 Move W22, W0
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Compare X9, 0
	235 JumpIfEqual {242}
	236 Move X10, [X8+176]
	237 Add X10, X10, 8
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Subtract X9, X9, 1
	241 Add X10, X10, 16
	242 Move W2, 20
	243 Move X0, X20
	244 Call 0x1C5D788
	245 Move W9, [X10]
	246 Add W9, W9, 20
	247 Add X8, X8, W9
	248 Add X0, X8, 312
	249 Move X8, [X0]
	250 Move X1, [X0+8]
	251 Move X0, X20
	252 NotImplemented "Instruction BLR not yet implemented."
	253 And W3, W0, 1
	254 And W2, W22, 1
	255 Move X0, X19
	256 Move W1, W21
	257 Move X20, [X31+48]
	258 Move X19, [X31+56]
	259 Move X22, [X31+32]
	260 Move X21, [X31+40]
	261 Move X30, [X31+16]
	262 Move X23, [X31+24]
	263 Move V0, V8
	264 Move V1, V9
	265 Move D9, [X31+64]
	266 Move D8, [X31+72]
	267 Call BaseVerticalCollectionView.DoSelect, X0, X1, X2, X3, X4
	268 Return 
	269 Call 0x1C17F20

Method: System.Void ProcessPointerUp(UnityEngine.UIElements.IPointerEvent evt)

Disassembly:
	0x03D029C0 LDRH W9, [X8 + 0x12E]
	0x03D029C4 LDR X1, [X10]
	0x03D029C8 CBZ X9, 0x3D029EC
	0x03D029CC LDR X10, [X8 + 0xB0]
	0x03D029D0 ADD X10, X10, 0x8
	0x03D029D4 LDUR X11, [X10 - 0x8]
	0x03D029D8 CMP X11, X1
	0x03D029DC B.EQ 0x3D029FC
	0x03D029E0 SUBS X9, X9, 0x1
	0x03D029E4 ADD X10, X10, 0x10
	0x03D029E8 B.NE 0x3D029D4
	0x03D029EC MOV X0, X21
	0x03D029F0 MOV W2, W31
	0x03D029F4 BL 0x1C5C788
	0x03D029F8 B 0x3D02A08
	0x03D029FC LDRSW X9, [X10]
	0x03D02A00 ADD X8, X8, X9, 0x4, LSL
	0x03D02A04 ADD X0, X8, 0x138
	0x03D02A08 LDP X8, X1, [X0]
	0x03D02A0C MOV X0, X21
	0x03D02A10 BLR X8
	0x03D02A14 CBNZ X22, 0x3D02AE8
	0x03D02A18 CMP W24, 0x23
	0x03D02A1C B.EQ 0x3D02A24
	0x03D02A20 CBNZ W24, 0x3D02A64
	0x03D02A24 MOV X0, X19
	0x03D02A28 MOV W1, W20
	0x03D02A2C BL 0x3CFDD8C
	0x03D02A30 CBZ W23, 0x3D02A64
	0x03D02A34 LDR X8, [X19 + 0x3D8]
	0x03D02A38 CBZ X8, 0x3D02A64
	0x03D02A3C LDR X1, [X19 + 0x478]
	0x03D02A40 LDR X3, [X8 + 0x18]
	0x03D02A44 LDR X0, [X8 + 0x40]
	0x03D02A48 LDR X2, [X8 + 0x28]
	0x03D02A4C LDP X20, X19, [X31 + 0x40]
	0x03D02A50 LDP X22, X21, [X31 + 0x30]
	0x03D02A54 LDP X24, X23, [X31 + 0x20]
	0x03D02A58 LDR X30, [X31 + 0x10]
	0x03D02A5C LDP D9, D8, [X31], #0x50
	0x03D02A60 BR X3
	0x03D02A64 LDP X20, X19, [X31 + 0x40]
	0x03D02A68 LDP X22, X21, [X31 + 0x30]
	0x03D02A6C LDP X24, X23, [X31 + 0x20]
	0x03D02A70 LDR X30, [X31 + 0x10]
	0x03D02A74 LDP D9, D8, [X31], #0x50
	0x03D02A78 RET
	0x03D02A7C LDR W8, [X19 + 0x428]
	0x03D02A80 CMP W8, 0x1
	0x03D02A84 B.NE 0x3D02AC0
	0x03D02A88 LDR X0, [X19 + 0x470]
	0x03D02A8C CBZ X0, 0x3D02AE0
	0x03D02A90 ADRP X8, 0x3F5000
	0x03D02A94 LDR X8, [X8 + 0xB68]
	0x03D02A98 MOV W1, W20
	0x03D02A9C LDR X2, [X8]
	0x03D02AA0 BL 0x2FDCA84
	0x03D02AA4 TBZ X0, 0x0, 0x3D02AC0
	0x03D02AA8 LDR X8, [X19 + 0x400]
	0x03D02AAC CBZ X8, 0x3D02AC0
	0x03D02AB0 LDR X9, [X8 + 0x18]
	0x03D02AB4 LDR X0, [X8 + 0x40]
	0x03D02AB8 LDR X1, [X8 + 0x28]
	0x03D02ABC BLR X9
	0x03D02AC0 MOV X0, X19
	0x03D02AC4 MOV W1, W20
	0x03D02AC8 LDP X20, X19, [X31 + 0x40]
	0x03D02ACC LDP X22, X21, [X31 + 0x30]
	0x03D02AD0 LDP X24, X23, [X31 + 0x20]
	0x03D02AD4 LDR X30, [X31 + 0x10]
	0x03D02AD8 LDP D9, D8, [X31], #0x50
	0x03D02ADC B 0x3CFDD8C
	0x03D02AE0 BL 0x1C16F20
	0x03D02AE4 BL 0x1C16F20
	0x03D02AE8 MOV X0, X22
	0x03D02AEC BL 0x1C16F18
	0x03D02AF0 B 0x3D02AF8
	0x03D02AF4 B 0x3D02AF8
	0x03D02AF8 MOV X23, X0
	0x03D02AFC CMP W1, 0x1
	0x03D02B00 B.NE 0x3D02B24
	0x03D02B04 MOV X0, X23
	0x03D02B08 BL 0x3EB1AD0
	0x03D02B0C LDR X22, [X0]
	0x03D02B10 BL 0x3EB1AE0
	0x03D02B14 MOV W24, W31
	0x03D02B18 MOV W23, W31
	0x03D02B1C CBNZ X21, 0x3D029B4
	0x03D02B20 B 0x3D02A14
	0x03D02B24 MOV X22, X31
	0x03D02B28 B 0x3D02B30
	0x03D02B2C MOV X23, X0
	0x03D02B30 CBZ X21, 0x3D02B94
	0x03D02B34 ADRP X10, 0x3F1000
	0x03D02B38 LDR X8, [X21]
	0x03D02B3C LDR X10, [X10 + 0xE00]
	0x03D02B40 LDRH W9, [X8 + 0x12E]
	0x03D02B44 LDR X1, [X10]
	0x03D02B48 CBZ X9, 0x3D02B6C
	0x03D02B4C LDR X10, [X8 + 0xB0]
	0x03D02B50 ADD X10, X10, 0x8
	0x03D02B54 LDUR X11, [X10 - 0x8]
	0x03D02B58 CMP X11, X1
	0x03D02B5C B.EQ 0x3D02B7C
	0x03D02B60 SUBS X9, X9, 0x1
	0x03D02B64 ADD X10, X10, 0x10
	0x03D02B68 B.NE 0x3D02B54
	0x03D02B6C MOV X0, X21
	0x03D02B70 MOV W2, W31
	0x03D02B74 BL 0x1C5C788
	0x03D02B78 B 0x3D02B88
	0x03D02B7C LDRSW X9, [X10]
	0x03D02B80 ADD X8, X8, X9, 0x4, LSL
	0x03D02B84 ADD X0, X8, 0x138
	0x03D02B88 LDP X8, X1, [X0]
	0x03D02B8C MOV X0, X21
	0x03D02B90 BLR X8
	0x03D02B94 CBNZ X22, 0x3D02BA0
	0x03D02B98 MOV X0, X23
	0x03D02B9C BL 0x1D2C690
	0x03D02BA0 MOV X0, X22
	0x03D02BA4 BL 0x1C16F18
	0x03D02BA8 BL 0x1990590
	0x03D02BAC B 0x3CFDD8C
	0x03D02BB0 STR X30, [X31 - 0x20]!
	0x03D02BB4 STP X20, X19, [X31 + 0x10]
	0x03D02BB8 LDR X8, [X0]
	0x03D02BBC MOV W20, W1
	0x03D02BC0 MOV X19, X0
	0x03D02BC4 LDR X9, [X8 + 0x808]
	0x03D02BC8 LDR X8, [X8 + 0x810]
	0x03D02BCC MOV X1, X8
	0x03D02BD0 BLR X9
	0x03D02BD4 TBZ X0, 0x0, 0x3D02C00
	0x03D02BD8 MOV X0, X19
	0x03D02BDC MOV W1, W20
	0x03D02BE0 BL 0x3D03A2C
	0x03D02BE4 MOV X0, X19
	0x03D02BE8 BL 0x3D034FC
	0x03D02BEC MOV X0, X19
	0x03D02BF0 LDP X20, X19, [X31 + 0x10]
	0x03D02BF4 MOV X1, X31
	0x03D02BF8 LDR X30, [X31], #0x20
	0x03D02BFC B 0x3DF276C
	0x03D02C00 LDP X20, X19, [X31 + 0x10]
	0x03D02C04 LDR X30, [X31], #0x20
	0x03D02C08 RET
	0x03D02C0C STR X30, [X31 - 0x30]!
	0x03D02C10 STP X22, X21, [X31 + 0x10]
	0x03D02C14 STP X20, X19, [X31 + 0x20]
	0x03D02C18 ADRP X21, 0x6E5000
	0x03D02C1C ADRP X22, 0x3F2000
	0x03D02C20 LDRB W8, [X21 + 0x814]
	0x03D02C24 LDR X22, [X22 + 0xE58]
	0x03D02C28 MOV W20, W1
	0x03D02C2C MOV X19, X0
	0x03D02C30 TBNZ X8, 0x0, 0x3D02C48
	0x03D02C34 ADRP X0, 0x3F2000
	0x03D02C38 LDR X0, [X0 + 0xE58]
	0x03D02C3C BL 0x1C16CF4
	0x03D02C40 MOVZ W8, 0x1
	0x03D02C44 STRB W8, [X21 + 0x814]
	0x03D02C48 LDR X0, [X22]
	0x03D02C4C MOVZ W1, 0x1
	0x03D02C50 BL 0x1C16D6C
	0x03D02C54 CBZ X0, 0x3D02C7C
	0x03D02C58 LDR W8, [X0 + 0x18]
	0x03D02C5C MOV X1, X0
	0x03D02C60 CBZ W8, 0x3D02C80
	0x03D02C64 STR W20, [X1 + 0x20]
	0x03D02C68 MOV X0, X19
	0x03D02C6C LDP X20, X19, [X31 + 0x20]
	0x03D02C70 LDP X22, X21, [X31 + 0x10]
	0x03D02C74 LDR X30, [X31], #0x30
	0x03D02C78 B 0x3D03180
	0x03D02C7C BL 0x1C16F20
	0x03D02C80 BL 0x1C16F28
	0x03D02C84 STP X30, X23, [X31 - 0x30]!
	0x03D02C88 STP X22, X21, [X31 + 0x10]
	0x03D02C8C STP X20, X19, [X31 + 0x20]
	0x03D02C90 ADRP X21, 0x6E5000
	0x03D02C94 LDRB W8, [X21 + 0x812]
	0x03D02C98 MOV W19, W1
	0x03D02C9C MOV X20, X0
	0x03D02CA0 TBNZ X8, 0x0, 0x3D02CD0
	0x03D02CA4 ADRP X0, 0x3F2000
	0x03D02CA8 LDR X0, [X0 + 0xE10]
	0x03D02CAC BL 0x1C16CF4
	0x03D02CB0 ADRP X0, 0x3F5000
	0x03D02CB4 LDR X0, [X0 + 0xB70]
	0x03D02CB8 BL 0x1C16CF4
	0x03D02CBC ADRP X0, 0x3F2000
	0x03D02CC0 LDR X0, [X0 + 0xE30]
	0x03D02CC4 BL 0x1C16CF4
	0x03D02CC8 MOVZ W8, 0x1
	0x03D02CCC STRB W8, [X21 + 0x812]
	0x03D02CD0 ADRP X23, 0x3F2000
	0x03D02CD4 ADRP X22, 0x3F5000
	0x03D02CD8 LDRB W8, [X20 + 0x484]
	0x03D02CDC LDR X0, [X20 + 0x470]
	0x03D02CE0 LDR X23, [X23 + 0xE30]
	0x03D02CE4 LDR X22, [X22 + 0xB70]
	0x03D02CE8 MOV X1, X31
	0x03D02CEC CBZ W8, 0x3D02CF8
	0x03D02CF0 BL 0x35DF820
	0x03D02CF4 B 0x3D02CFC
	0x03D02CF8 BL 0x35DF194
	0x03D02CFC MOV W21, W0
	0x03D02D00 MOV X0, X20
	0x03D02D04 BL 0x3D02E24
	0x03D02D08 LDR X0, [X23]
	0x03D02D0C BL 0x1C16F10
	0x03D02D10 LDR X1, [X22]
	0x03D02D14 MOV X22, X0
	0x03D02D18 BL 0x2FDBF14
	0x03D02D1C CMP W21, W19
	0x03D02D20 CSET W8, GT
	0x03D02D24 STRB W8, [X20 + 0x484]
	0x03D02D28 B.LE 0x3D02D9C
	0x03D02D2C CBZ X22, 0x3D02E20
	0x03D02D30 ADRP X23, 0x3F2000
	0x03D02D34 LDR X23, [X23 + 0xE10]
	0x03D02D38 LDR W10, [X22 + 0x1C]
	0x03D02D3C LDR X8, [X22 + 0x10]
	0x03D02D40 LDR X9, [X23]
	0x03D02D44 ADD W10, W10, 0x1
	0x03D02D48 STR W10, [X22 + 0x1C]
	0x03D02D4C CBZ X8, 0x3D02E20
	0x03D02D50 LDRSW X10, [X22 + 0x18]
	0x03D02D54 LDR W11, [X8 + 0x18]
	0x03D02D58 CMP W10, W11
	0x03D02D5C B.CS 0x3D02D74
	0x03D02D60 ADD W9, W10, 0x1
	0x03D02D64 ADD X8, X8, X10, 0x2, LSL
	0x03D02D68 STR W9, [X22 + 0x18]
	0x03D02D6C STR W19, [X8 + 0x20]
	0x03D02D70 B 0x3D02D8C
	0x03D02D74 LDR X8, [X9 + 0x20]
	0x03D02D78 MOV X0, X22
	0x03D02D7C MOV W1, W19
	0x03D02D80 LDR X8, [X8 + 0xC0]
	0x03D02D84 LDR X2, [X8 + 0x70]
	0x03D02D88 BL 0x2FDC70C
	0x03D02D8C ADD W19, W19, 0x1
	0x03D02D90 CMP W19, W21
	0x03D02D94 B.LE 0x3D02D38
	0x03D02D98 B 0x3D02E08
	0x03D02D9C CBZ X22, 0x3D02E20
	0x03D02DA0 ADRP X23, 0x3F2000
	0x03D02DA4 LDR X23, [X23 + 0xE10]
	0x03D02DA8 LDR W10, [X22 + 0x1C]
	0x03D02DAC LDR X8, [X22 + 0x10]
	0x03D02DB0 LDR X9, [X23]
	0x03D02DB4 ADD W10, W10, 0x1
	0x03D02DB8 STR W10, [X22 + 0x1C]
	0x03D02DBC CBZ X8, 0x3D02E20
	0x03D02DC0 LDRSW X10, [X22 + 0x18]
	0x03D02DC4 LDR W11, [X8 + 0x18]
	0x03D02DC8 CMP W10, W11
	0x03D02DCC B.CS 0x3D02DE4
	0x03D02DD0 ADD W9, W10, 0x1
	0x03D02DD4 ADD X8, X8, X10, 0x2, LSL
	0x03D02DD8 STR W9, [X22 + 0x18]
	0x03D02DDC STR W19, [X8 + 0x20]
	0x03D02DE0 B 0x3D02DFC
	0x03D02DE4 LDR X8, [X9 + 0x20]
	0x03D02DE8 MOV X0, X22
	0x03D02DEC MOV W1, W19
	0x03D02DF0 LDR X8, [X8 + 0xC0]
	0x03D02DF4 LDR X2, [X8 + 0x70]
	0x03D02DF8 BL 0x2FDC70C
	0x03D02DFC SUB W19, W19, 0x1
	0x03D02E00 CMP W19, W21
	0x03D02E04 B.GE 0x3D02DA8
	0x03D02E08 MOV X0, X20
	0x03D02E0C MOV X1, X22
	0x03D02E10 LDP X20, X19, [X31 + 0x20]
	0x03D02E14 LDP X22, X21, [X31 + 0x10]
	0x03D02E18 LDP X30, X23, [X31], #0x30
	0x03D02E1C B 0x3D03180
	0x03D02E20 BL 0x1C16F20
	0x03D02E24 STP X30, X23, [X31 - 0x30]!
	0x03D02E28 STP X22, X21, [X31 + 0x10]
	0x03D02E2C STP X20, X19, [X31 + 0x20]
	0x03D02E30 ADRP X20, 0x6E5000
	0x03D02E34 LDRB W8, [X20 + 0x81C]
	0x03D02E38 MOV X19, X0
	0x03D02E3C TBNZ X8, 0x0, 0x3D02E90
	0x03D02E40 ADRP X0, 0x3F1000
	0x03D02E44 LDR X0, [X0 + 0xE00]
	0x03D02E48 BL 0x1C16CF4
	0x03D02E4C ADRP X0, 0x41B000
	0x03D02E50 LDR X0, [X0 + 0xF20]
	0x03D02E54 BL 0x1C16CF4
	0x03D02E58 ADRP X0, 0x41B000
	0x03D02E5C LDR X0, [X0 + 0xF28]
	0x03D02E60 BL 0x1C16CF4
	0x03D02E64 ADRP X0, 0x3F1000
	0x03D02E68 LDR X0, [X0 + 0xE18]
	0x03D02E6C BL 0x1C16CF4
	0x03D02E70 ADRP X0, 0x3F9000
	0x03D02E74 LDR X0, [X0 + 0xF20]
	0x03D02E78 BL 0x1C16CF4
	0x03D02E7C ADRP X0, 0x3F8000
	0x03D02E80 LDR X0, [X0 + 0x858]
	0x03D02E84 BL 0x1C16CF4
	0x03D02E88 MOVZ W8, 0x1
	0x03D02E8C STRB W8, [X20 + 0x81C]
	0x03D02E90 MOV X0, X19
	0x03D02E94 BL 0x3CFEC08
	0x03D02E98 CBZ X0, 0x3D030C4
	0x03D02E9C ADRP X10, 0x41B000
	0x03D02EA0 LDR X8, [X0]
	0x03D02EA4 LDR X10, [X10 + 0xF20]
	0x03D02EA8 MOV X20, X0
	0x03D02EAC LDRH W9, [X8 + 0x12E]
	0x03D02EB0 LDR X1, [X10]
	0x03D02EB4 CBZ X9, 0x3D02ED8
	0x03D02EB8 LDR X10, [X8 + 0xB0]
	0x03D02EBC ADD X10, X10, 0x8
	0x03D02EC0 LDUR X11, [X10 - 0x8]
	0x03D02EC4 CMP X11, X1
	0x03D02EC8 B.EQ 0x3D02EE8
	0x03D02ECC SUBS X9, X9, 0x1
	0x03D02ED0 ADD X10, X10, 0x10
	0x03D02ED4 B.NE 0x3D02EC0
	0x03D02ED8 MOV X0, X20
	0x03D02EDC MOV W2, W31
	0x03D02EE0 BL 0x1C5C788
	0x03D02EE4 B 0x3D02EF4
	0x03D02EE8 LDRSW X9, [X10]
	0x03D02EEC ADD X8, X8, X9, 0x4, LSL
	0x03D02EF0 ADD X0, X8, 0x138
	0x03D02EF4 LDP X8, X1, [X0]
	0x03D02EF8 ADRP X22, 0x3F1000
	0x03D02EFC LDR X22, [X22 + 0xE00]
	0x03D02F00 MOV X0, X20
	0x03D02F04 BLR X8
	0x03D02F08 MOV X20, X0
	0x03D02F0C CBZ X0, 0x3D030C8
	0x03D02F10 ADRP X21, 0x3F1000
	0x03D02F14 ADRP X23, 0x41B000
	0x03D02F18 LDR X21, [X21 + 0xE18]
	0x03D02F1C LDR X23, [X23 + 0xF28]
	0x03D02F20 LDR X8, [X20]
	0x03D02F24 LDR X1, [X21]
	0x03D02F28 LDRH W9, [X8 + 0x12E]
	0x03D02F2C CBZ X9, 0x3D02F50
	0x03D02F30 LDR X10, [X8 + 0xB0]
	0x03D02F34 ADD X10, X10, 0x8
	0x03D02F38 LDUR X11, [X10 - 0x8]
	0x03D02F3C CMP X11, X1
	0x03D02F40 B.EQ 0x3D02F60
	0x03D02F44 SUBS X9, X9, 0x1
	0x03D02F48 ADD X10, X10, 0x10
	0x03D02F4C B.NE 0x3D02F38
	0x03D02F50 MOV X0, X20
	0x03D02F54 MOV W2, W31
	0x03D02F58 BL 0x1C5C788
	0x03D02F5C B 0x3D02F6C
	0x03D02F60 LDRSW X9, [X10]
	0x03D02F64 ADD X8, X8, X9, 0x4, LSL
	0x03D02F68 ADD X0, X8, 0x138
	0x03D02F6C LDP X8, X1, [X0]
	0x03D02F70 MOV X0, X20
	0x03D02F74 BLR X8
	0x03D02F78 TBZ X0, 0x0, 0x3D02FEC
	0x03D02F7C LDR X8, [X20]
	0x03D02F80 LDR X1, [X23]
	0x03D02F84 LDRH W9, [X8 + 0x12E]
	0x03D02F88 CBZ X9, 0x3D02FAC
	0x03D02F8C LDR X10, [X8 + 0xB0]
	0x03D02F90 ADD X10, X10, 0x8
	0x03D02F94 LDUR X11, [X10 - 0x8]
	0x03D02F98 CMP X11, X1

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x6E6000
	010 Move W8, [X21+2064]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x41B000
	018 Move X0, [X0+3704]
	019 Call 0x1C17CF4
	020 Move X0, 0x3F6000
	021 Move X0, [X0+2920]
	022 Call 0x1C17CF4
	023 Move X0, 0x3F3000
	024 Move X0, [X0+3624]
	025 Call 0x1C17CF4
	026 Move X0, 0x41B000
	027 Move X0, [X0+3672]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2064], W8
	031 Move X8, [X19]
	032 Move X0, X19
	033 Move X9, [X8+2056]
	034 Move X1, [X8+2064]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {94}
	040 Compare X20, 0
	041 JumpIfEqual {407}
	042 Move X22, 0x41B000
	043 Move X8, [X20]
	044 Move X22, [X22+3704]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X22]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 2
	056 Move X0, X20
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 2
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X1, [X0+8]
	064 Move X0, X20
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {94}
	070 Move X8, [X20]
	071 Move X1, [X22]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move W2, 3
	082 Move X0, X20
	083 Call 0x1C5D788
	084 Move W9, [X10]
	085 Add W9, W9, 3
	086 Add X8, X8, W9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X20
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Compare W0, 0
	093 JumpIfEqual {103}
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X30, [X31+16]
	099 Move X23, [X31+24]
	100 Move D9, [X31+64]
	101 Move D8, [X31+72]
	102 Return 
	103 Move X8, [X20]
	104 Move X1, [X22]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move W2, 1
	115 Move X0, X20
	116 Call 0x1C5D788
	117 Move W9, [X10]
	118 Add W9, W9, 1
	119 Add X8, X8, W9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X1, [X0+8]
	123 Move X0, X20
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X23, 0x41B000
	126 Move X23, [X23+3672]
	127 Move X21, X0
	128 Move X8, [X23]
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {135}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X8, [X23]
	135 Move X8, [X8+184]
	136 Move X0, X21
	137 Move X2, X31
	138 Move X1, [X8]
	139 Call String.op_Inequality, X0, X1
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {158}
	144 Move X8, [X20]
	145 Move X1, [X22]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move W2, 5
	156 Move X0, X20
	157 Call 0x1C5D788
	158 Move X21, [X19+1104]
	159 Compare X21, 0
	160 JumpIfNotEqual {167}
	161 Move X8, [X19]
	162 Move X0, X19
	163 Move X9, [X8+1976]
	164 Move X1, [X8+1984]
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move X21, [X19+1104]
	167 Move X8, [X20]
	168 Move X1, [X22]
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Compare X9, 0
	171 JumpIfEqual {178}
	172 Move X10, [X8+176]
	173 Add X10, X10, 8
	174 NotImplemented "Instruction LDUR not yet implemented."
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Subtract X9, X9, 1
	177 Add X10, X10, 16
	178 Move W2, 6
	179 Move X0, X20
	180 Call 0x1C5D788
	181 Move W9, [X10]
	182 Add W9, W9, 5
	183 Add X8, X8, W9
	184 Add X0, X8, 312
	185 Move X8, [X0]
	186 Move X1, [X0+8]
	187 Move X0, X20
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move V3, [X19+1184]
	190 Move V4, [X19+1188]
	191 Move V5, [X19+1192]
	192 Move W8, 0x42C80000
	193 Subtract S0, S0, S3
	194 Subtract S1, S1, S4
	195 Subtract S2, S2, S5
	196 Multiply S0, S0, S0
	197 Multiply S1, S1, S1
	198 Multiply S2, S2, S2
	199 Add S0, S0, S1
	200 Add S0, S0, S2
	201 Move S1, W8
	202 NotImplemented "Instruction FCMP not yet implemented."
	203 Move X8, [X20]
	204 Move X1, [X22]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Compare X9, 0
	207 JumpIfEqual {214}
	208 Move X10, [X8+176]
	209 Add X10, X10, 8
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Subtract X9, X9, 1
	213 Add X10, X10, 16
	214 Move W2, 6
	215 Move X0, X20
	216 Call 0x1C5D788
	217 Move W9, [X10]
	218 Add W9, W9, 6
	219 Add X8, X8, W9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X1, [X0+8]
	223 Move X0, X20
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Compare X21, 0
	226 JumpIfEqual {407}
	227 Move X8, [X21]
	228 Move X0, X21
	229 Move X9, [X8+488]
	230 Move X1, [X8+496]
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move W8, [X19+1064]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X8, [X20]
	235 Move X1, [X22]
	236 Move W21, W0
	237 NotImplemented "Instruction LDRH not yet implemented."
	238 Compare X9, 0
	239 JumpIfEqual {246}
	240 Move X10, [X8+176]
	241 Add X10, X10, 8
	242 NotImplemented "Instruction LDUR not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Subtract X9, X9, 1
	245 Add X10, X10, 16
	246 Move W2, 20
	247 Move X0, X20
	248 Call 0x1C5D788
	249 Move W9, [X10]
	250 Add W9, W9, 6
	251 Add X8, X8, W9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X1, [X0+8]
	255 Move X0, X20
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move X8, [X20]
	258 Move X1, [X22]
	259 Move V8, V0
	260 Move V9, V1
	261 NotImplemented "Instruction LDRH not yet implemented."
	262 Compare X9, 0
	263 JumpIfEqual {270}
	264 Move X10, [X8+176]
	265 Add X10, X10, 8
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Subtract X9, X9, 1
	269 Add X10, X10, 16
	270 Move W2, 9
	271 Move X0, X20
	272 Call 0x1C5D788
	273 Move W9, [X10]
	274 Add W9, W9, 20
	275 Add X8, X8, W9
	276 Add X0, X8, 312
	277 Move X8, [X0]
	278 Move X1, [X0+8]
	279 Move X0, X20
	280 NotImplemented "Instruction BLR not yet implemented."
	281 Move TEMP, X0
	282 And TEMP, TEMP, 1
	283 Compare TEMP, 1
	284 JumpIfEqual {94}
	285 Move X8, [X20]
	286 Move X1, [X22]
	287 NotImplemented "Instruction LDRH not yet implemented."
	288 Compare X9, 0
	289 JumpIfEqual {296}
	290 Move X10, [X8+176]
	291 Add X10, X10, 8
	292 NotImplemented "Instruction LDUR not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Subtract X9, X9, 1
	295 Add X10, X10, 16
	296 Move W2, 24
	297 Move X0, X20
	298 Call 0x1C5D788
	299 Move W9, [X10]
	300 Add W9, W9, 9
	301 Add X8, X8, W9
	302 Add X0, X8, 312
	303 Move X8, [X0]
	304 Move X1, [X0+8]
	305 Move X0, X20
	306 NotImplemented "Instruction BLR not yet implemented."
	307 Move X8, [X20]
	308 Move X1, [X22]
	309 Move W21, W0
	310 NotImplemented "Instruction LDRH not yet implemented."
	311 Compare X9, 0
	312 JumpIfEqual {319}
	313 Move X10, [X8+176]
	314 Add X10, X10, 8
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Subtract X9, X9, 1
	318 Add X10, X10, 16
	319 Move W2, 24
	320 Move X0, X20
	321 Call 0x1C5D788
	322 Move W9, [X10]
	323 Add W9, W9, 24
	324 Add X8, X8, W9
	325 Add X0, X8, 312
	326 Move X8, [X0]
	327 Move X1, [X0+8]
	328 Move X0, X20
	329 NotImplemented "Instruction BLR not yet implemented."
	330 Move X8, [X20]
	331 Move X1, [X22]
	332 Move W22, W0
	333 NotImplemented "Instruction LDRH not yet implemented."
	334 Compare X9, 0
	335 JumpIfEqual {342}
	336 Move X10, [X8+176]
	337 Add X10, X10, 8
	338 NotImplemented "Instruction LDUR not yet implemented."
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Subtract X9, X9, 1
	341 Add X10, X10, 16
	342 Move W2, 20
	343 Move X0, X20
	344 Call 0x1C5D788
	345 Move W9, [X10]
	346 Add W9, W9, 20
	347 Add X8, X8, W9
	348 Add X0, X8, 312
	349 Move X8, [X0]
	350 Move X1, [X0+8]
	351 Move X0, X20
	352 NotImplemented "Instruction BLR not yet implemented."
	353 And W3, W0, 1
	354 And W2, W22, 1
	355 Move X0, X19
	356 Move W1, W21
	357 Move X20, [X31+48]
	358 Move X19, [X31+56]
	359 Move X22, [X31+32]
	360 Move X21, [X31+40]
	361 Move X30, [X31+16]
	362 Move X23, [X31+24]
	363 Move V0, V8
	364 Move V1, V9
	365 Move D9, [X31+64]
	366 Move D8, [X31+72]
	367 Call BaseVerticalCollectionView.DoSelect, X0, X1, X2, X3, X4
	368 Return 
	369 Move W9, [X10]
	370 Add W9, W9, 24
	371 Add X8, X8, W9
	372 Add X0, X8, 312
	373 Move X8, [X0]
	374 Move X1, [X0+8]
	375 Move X0, X20
	376 NotImplemented "Instruction BLR not yet implemented."
	377 Move TEMP, X0
	378 And TEMP, TEMP, 1
	379 Compare TEMP, 1
	380 JumpIfEqual {94}
	381 Move X0, [X19+1136]
	382 Compare X0, 0
	383 JumpIfEqual {407}
	384 Move W8, [X0+24]
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Move X8, 0x3F6000
	387 Move X8, [X8+2920]
	388 Move W1, W21
	389 Move X2, [X8]
	390 Call List`1<Int32>.Contains, X0, X1
	391 Move TEMP, X0
	392 And TEMP, TEMP, 1
	393 Compare TEMP, 1
	394 JumpIfNotEqual {94}
	395 Move X0, X19
	396 Move W1, W21
	397 Move X20, [X31+48]
	398 Move X19, [X31+56]
	399 Move X22, [X31+32]
	400 Move X21, [X31+40]
	401 Move X30, [X31+16]
	402 Move X23, [X31+24]
	403 Move D9, [X31+64]
	404 Move D8, [X31+72]
	405 Call BaseVerticalCollectionView.SetSelection, X0, X1
	406 Return 
	407 Call 0x1C17F20

Method: System.Void DoSelect(UnityEngine.Vector2 localPosition, System.Int32 clickCount, System.Boolean actionKey, System.Boolean shiftKey)

Disassembly:
	0x03D03568 STP X20, X19, [X31 + 0x30]
	0x03D0356C ADRP X21, 0x6E4000
	0x03D03570 LDRB W8, [X21 + 0x816]
	0x03D03574 MOV W20, W1
	0x03D03578 MOV X19, X0
	0x03D0357C TBNZ X8, 0x0, 0x3D035DC
	0x03D03580 ADRP X0, 0x3F0000
	0x03D03584 LDR X0, [X0 + 0xE00]
	0x03D03588 BL 0x1C16CF4
	0x03D0358C ADRP X0, 0x41A000
	0x03D03590 LDR X0, [X0 + 0xF20]
	0x03D03594 BL 0x1C16CF4
	0x03D03598 ADRP X0, 0x41A000
	0x03D0359C LDR X0, [X0 + 0xF28]
	0x03D035A0 BL 0x1C16CF4
	0x03D035A4 ADRP X0, 0x3F0000
	0x03D035A8 LDR X0, [X0 + 0xE18]
	0x03D035AC BL 0x1C16CF4
	0x03D035B0 ADRP X0, 0x3F1000
	0x03D035B4 LDR X0, [X0 + 0xE10]
	0x03D035B8 BL 0x1C16CF4
	0x03D035BC ADRP X0, 0x3F8000
	0x03D035C0 LDR X0, [X0 + 0xF18]
	0x03D035C4 BL 0x1C16CF4
	0x03D035C8 ADRP X0, 0x3F4000
	0x03D035CC LDR X0, [X0 + 0xB68]
	0x03D035D0 BL 0x1C16CF4
	0x03D035D4 MOVZ W8, 0x1
	0x03D035D8 STRB W8, [X21 + 0x816]
	0x03D035DC LDR X0, [X19 + 0x470]
	0x03D035E0 CBZ X0, 0x3D0395C
	0x03D035E4 ADRP X8, 0x3F4000
	0x03D035E8 LDR X8, [X8 + 0xB68]
	0x03D035EC MOV W1, W20
	0x03D035F0 LDR X2, [X8]
	0x03D035F4 BL 0x2FDCA84
	0x03D035F8 TBNZ X0, 0x0, 0x3D03920
	0x03D035FC LDR X0, [X19 + 0x448]
	0x03D03600 CBZ X0, 0x3D0395C
	0x03D03604 LDR X8, [X0]
	0x03D03608 MOV W1, W20
	0x03D0360C LDP X9, X2, [X8 + 0x1F8]
	0x03D03610 BLR X9
	0x03D03614 LDR X8, [X19 + 0x448]
	0x03D03618 CBZ X8, 0x3D0395C
	0x03D0361C LDR X9, [X8]
	0x03D03620 MOV W22, W0
	0x03D03624 MOV X0, X8
	0x03D03628 MOV W1, W20
	0x03D0362C LDR X10, [X9 + 0x208]
	0x03D03630 LDR X2, [X9 + 0x210]
	0x03D03634 BLR X10
	0x03D03638 MOV X21, X0
	0x03D0363C MOV X0, X19
	0x03D03640 BL 0x3CFEC08
	0x03D03644 CBZ X0, 0x3D0395C
	0x03D03648 ADRP X10, 0x41A000
	0x03D0364C LDR X8, [X0]
	0x03D03650 LDR X10, [X10 + 0xF20]
	0x03D03654 MOV X23, X0
	0x03D03658 LDRH W9, [X8 + 0x12E]
	0x03D0365C LDR X1, [X10]
	0x03D03660 CBZ X9, 0x3D03684
	0x03D03664 LDR X10, [X8 + 0xB0]
	0x03D03668 ADD X10, X10, 0x8
	0x03D0366C LDUR X11, [X10 - 0x8]
	0x03D03670 CMP X11, X1
	0x03D03674 B.EQ 0x3D03694
	0x03D03678 SUBS X9, X9, 0x1
	0x03D0367C ADD X10, X10, 0x10
	0x03D03680 B.NE 0x3D0366C
	0x03D03684 MOV X0, X23
	0x03D03688 MOV W2, W31
	0x03D0368C BL 0x1C5C788
	0x03D03690 B 0x3D036A0
	0x03D03694 LDRSW X9, [X10]
	0x03D03698 ADD X8, X8, X9, 0x4, LSL
	0x03D0369C ADD X0, X8, 0x138
	0x03D036A0 LDP X8, X1, [X0]
	0x03D036A4 MOV X0, X23
	0x03D036A8 BLR X8
	0x03D036AC MOV X23, X0
	0x03D036B0 CBZ X0, 0x3D03960
	0x03D036B4 ADRP X24, 0x3F0000
	0x03D036B8 ADRP X25, 0x41A000
	0x03D036BC LDR X24, [X24 + 0xE18]
	0x03D036C0 LDR X25, [X25 + 0xF28]
	0x03D036C4 LDR X8, [X23]
	0x03D036C8 LDR X1, [X24]
	0x03D036CC LDRH W9, [X8 + 0x12E]
	0x03D036D0 CBZ X9, 0x3D036F4
	0x03D036D4 LDR X10, [X8 + 0xB0]
	0x03D036D8 ADD X10, X10, 0x8
	0x03D036DC LDUR X11, [X10 - 0x8]
	0x03D036E0 CMP X11, X1
	0x03D036E4 B.EQ 0x3D03704
	0x03D036E8 SUBS X9, X9, 0x1
	0x03D036EC ADD X10, X10, 0x10
	0x03D036F0 B.NE 0x3D036DC
	0x03D036F4 MOV X0, X23
	0x03D036F8 MOV W2, W31
	0x03D036FC BL 0x1C5C788
	0x03D03700 B 0x3D03710
	0x03D03704 LDRSW X9, [X10]
	0x03D03708 ADD X8, X8, X9, 0x4, LSL
	0x03D0370C ADD X0, X8, 0x138
	0x03D03710 LDP X8, X1, [X0]
	0x03D03714 MOV X0, X23
	0x03D03718 BLR X8
	0x03D0371C TBZ X0, 0x0, 0x3D037A4
	0x03D03720 LDR X8, [X23]
	0x03D03724 LDR X1, [X25]
	0x03D03728 LDRH W9, [X8 + 0x12E]
	0x03D0372C CBZ X9, 0x3D03750
	0x03D03730 LDR X10, [X8 + 0xB0]
	0x03D03734 ADD X10, X10, 0x8
	0x03D03738 LDUR X11, [X10 - 0x8]
	0x03D0373C CMP X11, X1
	0x03D03740 B.EQ 0x3D03760
	0x03D03744 SUBS X9, X9, 0x1
	0x03D03748 ADD X10, X10, 0x10
	0x03D0374C B.NE 0x3D03738
	0x03D03750 MOV X0, X23
	0x03D03754 MOV W2, W31
	0x03D03758 BL 0x1C5C788
	0x03D0375C B 0x3D0376C
	0x03D03760 LDRSW X9, [X10]
	0x03D03764 ADD X8, X8, X9, 0x4, LSL
	0x03D03768 ADD X0, X8, 0x138
	0x03D0376C LDP X8, X1, [X0]
	0x03D03770 MOV X0, X23
	0x03D03774 BLR X8
	0x03D03778 MOV X8, X0
	0x03D0377C CBZ X0, 0x3D03958
	0x03D03780 LDR W9, [X8 + 0x24]
	0x03D03784 CMP W9, W22
	0x03D03788 B.NE 0x3D036C4
	0x03D0378C LDR X9, [X8]
	0x03D03790 LDP X10, X2, [X9 + 0x1C8]
	0x03D03794 MOVZ W1, 0x1
	0x03D03798 MOV X0, X8
	0x03D0379C BLR X10
	0x03D037A0 B 0x3D036C4
	0x03D037A4 MOV X24, X31
	0x03D037A8 MOVZ W25, 0x6
	0x03D037AC CBZ X23, 0x3D03810
	0x03D037B0 ADRP X10, 0x3F0000
	0x03D037B4 LDR X8, [X23]
	0x03D037B8 LDR X10, [X10 + 0xE00]
	0x03D037BC LDRH W9, [X8 + 0x12E]
	0x03D037C0 LDR X1, [X10]
	0x03D037C4 CBZ X9, 0x3D037E8
	0x03D037C8 LDR X10, [X8 + 0xB0]
	0x03D037CC ADD X10, X10, 0x8
	0x03D037D0 LDUR X11, [X10 - 0x8]
	0x03D037D4 CMP X11, X1
	0x03D037D8 B.EQ 0x3D037F8
	0x03D037DC SUBS X9, X9, 0x1
	0x03D037E0 ADD X10, X10, 0x10
	0x03D037E4 B.NE 0x3D037D0
	0x03D037E8 MOV X0, X23
	0x03D037EC MOV W2, W31
	0x03D037F0 BL 0x1C5C788
	0x03D037F4 B 0x3D03804
	0x03D037F8 LDRSW X9, [X10]
	0x03D037FC ADD X8, X8, X9, 0x4, LSL
	0x03D03800 ADD X0, X8, 0x138
	0x03D03804 LDP X8, X1, [X0]
	0x03D03808 MOV X0, X23
	0x03D0380C BLR X8
	0x03D03810 CBNZ X24, 0x3D03964
	0x03D03814 CMP W25, 0x6
	0x03D03818 B.EQ 0x3D03820
	0x03D0381C CBNZ W25, 0x3D03920
	0x03D03820 LDR X0, [X19 + 0x468]
	0x03D03824 CBZ X0, 0x3D0395C
	0x03D03828 ADRP X23, 0x3F1000
	0x03D0382C LDR X23, [X23 + 0xE10]
	0x03D03830 LDR W10, [X0 + 0x1C]
	0x03D03834 LDR X8, [X0 + 0x10]
	0x03D03838 LDR X9, [X23]
	0x03D0383C ADD W10, W10, 0x1
	0x03D03840 STR W10, [X0 + 0x1C]
	0x03D03844 CBZ X8, 0x3D0395C
	0x03D03848 LDRSW X10, [X0 + 0x18]
	0x03D0384C LDR W11, [X8 + 0x18]
	0x03D03850 CMP W10, W11
	0x03D03854 B.CS 0x3D0386C
	0x03D03858 ADD W9, W10, 0x1
	0x03D0385C ADD X8, X8, X10, 0x2, LSL
	0x03D03860 STR W9, [X0 + 0x18]
	0x03D03864 STR W22, [X8 + 0x20]
	0x03D03868 B 0x3D03880
	0x03D0386C LDR X8, [X9 + 0x20]
	0x03D03870 MOV W1, W22
	0x03D03874 LDR X8, [X8 + 0xC0]
	0x03D03878 LDR X2, [X8 + 0x70]
	0x03D0387C BL 0x2FDC70C
	0x03D03880 LDR X0, [X19 + 0x470]
	0x03D03884 CBZ X0, 0x3D0395C
	0x03D03888 LDR W10, [X0 + 0x1C]
	0x03D0388C LDR X8, [X0 + 0x10]
	0x03D03890 LDR X9, [X23]
	0x03D03894 ADD W10, W10, 0x1
	0x03D03898 STR W10, [X0 + 0x1C]
	0x03D0389C CBZ X8, 0x3D0395C
	0x03D038A0 LDRSW X10, [X0 + 0x18]
	0x03D038A4 LDR W11, [X8 + 0x18]
	0x03D038A8 CMP W10, W11
	0x03D038AC B.CS 0x3D038C4
	0x03D038B0 ADD W9, W10, 0x1
	0x03D038B4 ADD X8, X8, X10, 0x2, LSL
	0x03D038B8 STR W9, [X0 + 0x18]
	0x03D038BC STR W20, [X8 + 0x20]
	0x03D038C0 B 0x3D038D8
	0x03D038C4 LDR X8, [X9 + 0x20]
	0x03D038C8 MOV W1, W20
	0x03D038CC LDR X8, [X8 + 0xC0]
	0x03D038D0 LDR X2, [X8 + 0x70]
	0x03D038D4 BL 0x2FDC70C
	0x03D038D8 LDR X0, [X19 + 0x478]
	0x03D038DC CBZ X0, 0x3D0395C
	0x03D038E0 ADRP X9, 0x3F8000
	0x03D038E4 LDR X9, [X9 + 0xF18]
	0x03D038E8 LDR W10, [X0 + 0x1C]
	0x03D038EC LDR X8, [X0 + 0x10]
	0x03D038F0 LDR X9, [X9]
	0x03D038F4 ADD W10, W10, 0x1
	0x03D038F8 STR W10, [X0 + 0x1C]
	0x03D038FC CBZ X8, 0x3D0395C
	0x03D03900 LDRSW X10, [X0 + 0x18]
	0x03D03904 LDR W11, [X8 + 0x18]
	0x03D03908 CMP W10, W11
	0x03D0390C B.CS 0x3D03934
	0x03D03910 ADD W9, W10, 0x1
	0x03D03914 ADD X8, X8, X10, 0x3, LSL
	0x03D03918 STR W9, [X0 + 0x18]
	0x03D0391C STR X21, [X8 + 0x20]
	0x03D03920 LDP X20, X19, [X31 + 0x30]
	0x03D03924 LDP X22, X21, [X31 + 0x20]
	0x03D03928 LDP X24, X23, [X31 + 0x10]
	0x03D0392C LDP X30, X25, [X31], #0x40
	0x03D03930 RET
	0x03D03934 LDR X8, [X9 + 0x20]
	0x03D03938 MOV X1, X21
	0x03D0393C LDP X20, X19, [X31 + 0x30]
	0x03D03940 LDP X22, X21, [X31 + 0x20]
	0x03D03944 LDR X8, [X8 + 0xC0]
	0x03D03948 LDP X24, X23, [X31 + 0x10]
	0x03D0394C LDR X2, [X8 + 0x70]
	0x03D03950 LDP X30, X25, [X31], #0x40
	0x03D03954 B 0x301BF90
	0x03D03958 BL 0x1C16F20
	0x03D0395C BL 0x1C16F20
	0x03D03960 BL 0x1C16F20
	0x03D03964 MOV X0, X24
	0x03D03968 BL 0x1C16F18
	0x03D0396C B 0x3D0397C
	0x03D03970 B 0x3D0397C
	0x03D03974 B 0x3D0397C
	0x03D03978 B 0x3D0397C
	0x03D0397C MOV X25, X0
	0x03D03980 CMP W1, 0x1
	0x03D03984 B.NE 0x3D039A4
	0x03D03988 MOV X0, X25
	0x03D0398C BL 0x3EB1AD0
	0x03D03990 LDR X24, [X0]
	0x03D03994 BL 0x3EB1AE0
	0x03D03998 MOV W25, W31
	0x03D0399C CBNZ X23, 0x3D037B0
	0x03D039A0 B 0x3D03810
	0x03D039A4 MOV X24, X31
	0x03D039A8 B 0x3D039B0
	0x03D039AC MOV X25, X0
	0x03D039B0 CBZ X23, 0x3D03A14
	0x03D039B4 ADRP X10, 0x3F0000
	0x03D039B8 LDR X8, [X23]
	0x03D039BC LDR X10, [X10 + 0xE00]
	0x03D039C0 LDRH W9, [X8 + 0x12E]
	0x03D039C4 LDR X1, [X10]
	0x03D039C8 CBZ X9, 0x3D039EC
	0x03D039CC LDR X10, [X8 + 0xB0]
	0x03D039D0 ADD X10, X10, 0x8
	0x03D039D4 LDUR X11, [X10 - 0x8]
	0x03D039D8 CMP X11, X1
	0x03D039DC B.EQ 0x3D039FC
	0x03D039E0 SUBS X9, X9, 0x1
	0x03D039E4 ADD X10, X10, 0x10
	0x03D039E8 B.NE 0x3D039D4
	0x03D039EC MOV X0, X23
	0x03D039F0 MOV W2, W31
	0x03D039F4 BL 0x1C5C788
	0x03D039F8 B 0x3D03A08
	0x03D039FC LDRSW X9, [X10]
	0x03D03A00 ADD X8, X8, X9, 0x4, LSL
	0x03D03A04 ADD X0, X8, 0x138
	0x03D03A08 LDP X8, X1, [X0]
	0x03D03A0C MOV X0, X23
	0x03D03A10 BLR X8
	0x03D03A14 CBNZ X24, 0x3D03A20
	0x03D03A18 MOV X0, X25
	0x03D03A1C BL 0x1D2C690
	0x03D03A20 MOV X0, X24
	0x03D03A24 BL 0x1C16F18
	0x03D03A28 BL 0x1990590
	0x03D03A2C STP X30, X25, [X31 - 0x40]!
	0x03D03A30 STP X24, X23, [X31 + 0x10]
	0x03D03A34 STP X22, X21, [X31 + 0x20]
	0x03D03A38 STP X20, X19, [X31 + 0x30]
	0x03D03A3C ADRP X21, 0x6E4000
	0x03D03A40 LDRB W8, [X21 + 0x817]
	0x03D03A44 MOV W20, W1
	0x03D03A48 MOV X19, X0
	0x03D03A4C TBNZ X8, 0x0, 0x3D03AAC
	0x03D03A50 ADRP X0, 0x3F0000
	0x03D03A54 LDR X0, [X0 + 0xE00]
	0x03D03A58 BL 0x1C16CF4
	0x03D03A5C ADRP X0, 0x41A000
	0x03D03A60 LDR X0, [X0 + 0xF20]
	0x03D03A64 BL 0x1C16CF4
	0x03D03A68 ADRP X0, 0x41A000
	0x03D03A6C LDR X0, [X0 + 0xF28]
	0x03D03A70 BL 0x1C16CF4
	0x03D03A74 ADRP X0, 0x3F0000
	0x03D03A78 LDR X0, [X0 + 0xE18]
	0x03D03A7C BL 0x1C16CF4
	0x03D03A80 ADRP X0, 0x3F4000
	0x03D03A84 LDR X0, [X0 + 0xB68]
	0x03D03A88 BL 0x1C16CF4
	0x03D03A8C ADRP X0, 0x41A000
	0x03D03A90 LDR X0, [X0 + 0x8C0]
	0x03D03A94 BL 0x1C16CF4
	0x03D03A98 ADRP X0, 0x460000
	0x03D03A9C LDR X0, [X0 + 0x108]
	0x03D03AA0 BL 0x1C16CF4
	0x03D03AA4 MOVZ W8, 0x1
	0x03D03AA8 STRB W8, [X21 + 0x817]
	0x03D03AAC LDR X0, [X19 + 0x470]
	0x03D03AB0 CBZ X0, 0x3D03D64
	0x03D03AB4 ADRP X8, 0x3F4000
	0x03D03AB8 LDR X8, [X8 + 0xB68]
	0x03D03ABC MOV W1, W20
	0x03D03AC0 LDR X2, [X8]
	0x03D03AC4 BL 0x2FDCA84
	0x03D03AC8 TBZ X0, 0x0, 0x3D03D4C
	0x03D03ACC LDR X0, [X19 + 0x448]
	0x03D03AD0 CBZ X0, 0x3D03D64
	0x03D03AD4 LDR X8, [X0]
	0x03D03AD8 MOV W1, W20
	0x03D03ADC LDP X9, X2, [X8 + 0x1F8]
	0x03D03AE0 BLR X9
	0x03D03AE4 LDR X8, [X19 + 0x448]
	0x03D03AE8 CBZ X8, 0x3D03D64
	0x03D03AEC LDR X9, [X8]
	0x03D03AF0 MOV W22, W0
	0x03D03AF4 MOV X0, X8
	0x03D03AF8 MOV W1, W20
	0x03D03AFC LDR X10, [X9 + 0x208]
	0x03D03B00 LDR X2, [X9 + 0x210]
	0x03D03B04 BLR X10
	0x03D03B08 MOV X21, X0
	0x03D03B0C MOV X0, X19
	0x03D03B10 BL 0x3CFEC08
	0x03D03B14 CBZ X0, 0x3D03D64
	0x03D03B18 ADRP X10, 0x41A000
	0x03D03B1C LDR X8, [X0]
	0x03D03B20 LDR X10, [X10 + 0xF20]
	0x03D03B24 MOV X23, X0
	0x03D03B28 LDRH W9, [X8 + 0x12E]
	0x03D03B2C LDR X1, [X10]
	0x03D03B30 CBZ X9, 0x3D03B54
	0x03D03B34 LDR X10, [X8 + 0xB0]
	0x03D03B38 ADD X10, X10, 0x8
	0x03D03B3C LDUR X11, [X10 - 0x8]
	0x03D03B40 CMP X11, X1
	0x03D03B44 B.EQ 0x3D03B64
	0x03D03B48 SUBS X9, X9, 0x1
	0x03D03B4C ADD X10, X10, 0x10
	0x03D03B50 B.NE 0x3D03B3C
	0x03D03B54 MOV X0, X23
	0x03D03B58 MOV W2, W31
	0x03D03B5C BL 0x1C5C788
	0x03D03B60 B 0x3D03B70
	0x03D03B64 LDRSW X9, [X10]
	0x03D03B68 ADD X8, X8, X9, 0x4, LSL
	0x03D03B6C ADD X0, X8, 0x138
	0x03D03B70 LDP X8, X1, [X0]
	0x03D03B74 MOV X0, X23
	0x03D03B78 BLR X8
	0x03D03B7C MOV X23, X0
	0x03D03B80 CBZ X0, 0x3D03D68
	0x03D03B84 ADRP X24, 0x3F0000
	0x03D03B88 ADRP X25, 0x41A000
	0x03D03B8C LDR X24, [X24 + 0xE18]
	0x03D03B90 LDR X25, [X25 + 0xF28]
	0x03D03B94 LDR X8, [X23]
	0x03D03B98 LDR X1, [X24]
	0x03D03B9C LDRH W9, [X8 + 0x12E]
	0x03D03BA0 CBZ X9, 0x3D03BC4
	0x03D03BA4 LDR X10, [X8 + 0xB0]
	0x03D03BA8 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x6E5000
	011 Move W8, [X20+2065]
	012 Move W21, W3
	013 Move W22, W2
	014 Move W23, W1
	015 Move V8, V1
	016 Move V9, V0
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x41C000
	023 Move X0, [X0+2992]
	024 Call 0x1C17CF4
	025 Move X0, 0x44B000
	026 Move X0, [X0+2728]
	027 Call 0x1C17CF4
	028 Move X0, 0x3F8000
	029 Move X0, [X0+752]
	030 Call 0x1C17CF4
	031 Move X0, 0x3F1000
	032 Move X0, [X0+3584]
	033 Call 0x1C17CF4
	034 Move X0, 0x419000
	035 Move X0, [X0+1976]
	036 Call 0x1C17CF4
	037 Move X0, 0x419000
	038 Move X0, [X0+1984]
	039 Call 0x1C17CF4
	040 Move X0, 0x3F1000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move X0, 0x3F5000
	044 Move X0, [X0+2920]
	045 Call 0x1C17CF4
	046 Move X0, 0x3F2000
	047 Move X0, [X0+3624]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X20+2065], W8
	051 Move X0, [X19+1104]
	052 Compare X0, 0
	053 JumpIfNotEqual {60}
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move X9, [X8+1976]
	057 Move X1, [X8+1984]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X0, [X19+1104]
	060 Compare X0, 0
	061 JumpIfEqual {415}
	062 Move X8, [X0]
	063 Move X20, 0x41C000
	064 Move V0, V9
	065 Move V1, V8
	066 Move X9, [X8+488]
	067 Move X1, [X8+496]
	068 Move X20, [X20+2992]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X8, [X19+1136]
	071 Move X1, [X20]
	072 Move W20, W0
	073 Move X0, X8
	074 Call Enumerable.Count, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X8, 0x44B000
	077 Move X8, [X8+2728]
	078 Move X0, [X19+1136]
	079 Move X1, [X8]
	080 Call Enumerable.First, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W8, 2
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Move W24, 1
	086 Move X0, [X19+1096]
	087 Compare X0, 0
	088 JumpIfEqual {415}
	089 Move X8, [X0]
	090 Move X9, [X8+392]
	091 Move X1, [X8+400]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Compare X0, 0
	094 JumpIfEqual {415}
	095 Move X10, 0x3F8000
	096 Move X8, [X0]
	097 Move X10, [X10+752]
	098 Move X23, X0
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Move X1, [X10]
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move W2, 1
	110 Move X0, X23
	111 Call 0x1C5D788
	112 Move W9, [X10]
	113 Add W9, W9, 1
	114 Add X8, X8, W9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X23
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Subtract W8, W0, 1
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W8, [X19+1064]
	123 Compare W8, 0
	124 JumpIfEqual {371}
	125 Move X0, [X19+1096]
	126 Compare X0, 0
	127 JumpIfEqual {415}
	128 Move X8, [X0]
	129 Move W1, W20
	130 Move X9, [X8+504]
	131 Move X2, [X8+512]
	132 NotImplemented "Instruction BLR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W8, [X19+1064]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move TEMP, X22
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {188}
	141 Move W1, W0
	142 Move X0, [X19+1128]
	143 Compare X0, 0
	144 JumpIfEqual {415}
	145 Move X8, 0x3F5000
	146 Move X8, [X8+2920]
	147 Move X2, [X8]
	148 Call List`1<Int32>.Contains, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {241}
	153 Move X0, X19
	154 Move W1, W20
	155 Move X20, [X31+64]
	156 Move X19, [X31+72]
	157 Move X22, [X31+48]
	158 Move X21, [X31+56]
	159 Move X24, [X31+32]
	160 Move X23, [X31+40]
	161 Move X30, [X31+16]
	162 Move D9, [X31+80]
	163 Move D8, [X31+88]
	164 Call BaseVerticalCollectionView.RemoveFromSelection, X0, X1
	165 Return 
	166 Move X8, [X19+984]
	167 Compare X8, 0
	168 JumpIfEqual {371}
	169 Move X21, [X19+1136]
	170 Compare X21, 0
	171 JumpIfEqual {415}
	172 Move X10, 0x419000
	173 Move X8, [X21]
	174 Move X10, [X10+1976]
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Move X1, [X10]
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X21
	186 Move W2, W31
	187 Call 0x1C5D788
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move TEMP, X21
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfNotEqual {212}
	193 Move X8, [X19+1136]
	194 Compare X8, 0
	195 JumpIfEqual {415}
	196 Move W8, [X8+24]
	197 Compare W8, 0
	198 JumpIfEqual {402}
	199 Move X0, X19
	200 Move W1, W20
	201 Move X20, [X31+64]
	202 Move X19, [X31+72]
	203 Move X22, [X31+48]
	204 Move X21, [X31+56]
	205 Move X24, [X31+32]
	206 Move X23, [X31+40]
	207 Move X30, [X31+16]
	208 Move D9, [X31+80]
	209 Move D8, [X31+88]
	210 Call BaseVerticalCollectionView.DoRangeSelection, X0, X1
	211 Return 
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Move X0, [X19+1136]
	214 Compare X0, 0
	215 JumpIfEqual {415}
	216 Move X8, 0x3F5000
	217 Move X8, [X8+2920]
	218 Move W1, W20
	219 Move X2, [X8]
	220 Call List`1<Int32>.Contains, X0, X1
	221 Move TEMP, X0
	222 And TEMP, TEMP, 1
	223 Compare TEMP, 1
	224 JumpIfNotEqual {381}
	225 Move X8, [X19+1024]
	226 Compare X8, 0
	227 JumpIfEqual {371}
	228 Move X2, [X8+24]
	229 Move X0, [X8+64]
	230 Move X1, [X8+40]
	231 Move X20, [X31+64]
	232 Move X19, [X31+72]
	233 Move X22, [X31+48]
	234 Move X21, [X31+56]
	235 Move X24, [X31+32]
	236 Move X23, [X31+40]
	237 Move X30, [X31+16]
	238 Move D9, [X31+80]
	239 Move D8, [X31+88]
	240 CallNoReturn X2
	241 Move X0, X19
	242 Move W1, W20
	243 Move X20, [X31+64]
	244 Move X19, [X31+72]
	245 Move X22, [X31+48]
	246 Move X21, [X31+56]
	247 Move X24, [X31+32]
	248 Move X23, [X31+40]
	249 Move X30, [X31+16]
	250 Move D9, [X31+80]
	251 Move D8, [X31+88]
	252 Call BaseVerticalCollectionView.AddToSelection, X0, X1
	253 Return 
	254 NotImplemented "Instruction LDRSW not yet implemented."
	255 Add X8, X8, X9
	256 Add X0, X8, 312
	257 Move X8, [X0]
	258 Move X1, [X0+8]
	259 Move X0, X21
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Move X21, X0
	262 Compare X0, 0
	263 JumpIfEqual {416}
	264 Move X22, 0x3F1000
	265 Move X24, 0x419000
	266 Move X22, [X22+3608]
	267 Move X24, [X24+1984]
	268 Move X8, [X21]
	269 Move X1, [X22]
	270 NotImplemented "Instruction LDRH not yet implemented."
	271 Compare X9, 0
	272 JumpIfEqual {279}
	273 Move X10, [X8+176]
	274 Add X10, X10, 8
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Subtract X9, X9, 1
	278 Add X10, X10, 16
	279 Move X0, X21
	280 Move W2, W31
	281 Call 0x1C5D788
	282 NotImplemented "Instruction LDRSW not yet implemented."
	283 Add X8, X8, X9
	284 Add X0, X8, 312
	285 Move X8, [X0]
	286 Move X1, [X0+8]
	287 Move X0, X21
	288 NotImplemented "Instruction BLR not yet implemented."
	289 Move W23, W0
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfNotEqual {316}
	294 Move X8, [X21]
	295 Move X1, [X24]
	296 NotImplemented "Instruction LDRH not yet implemented."
	297 Compare X9, 0
	298 JumpIfEqual {305}
	299 Move X10, [X8+176]
	300 Add X10, X10, 8
	301 NotImplemented "Instruction LDUR not yet implemented."
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Subtract X9, X9, 1
	304 Add X10, X10, 16
	305 Move X0, X21
	306 Move W2, W31
	307 Call 0x1C5D788
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Add X8, X8, X9
	310 Add X0, X8, 312
	311 Move X8, [X0]
	312 Move X1, [X0+8]
	313 Move X0, X21
	314 NotImplemented "Instruction BLR not yet implemented."
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X22, X31
	317 And W23, W23, 1
	318 Move W24, 35
	319 Compare X21, 0
	320 JumpIfEqual {344}
	321 Move X10, 0x3F1000
	322 Move X8, [X21]
	323 Move X10, [X10+3584]
	324 NotImplemented "Instruction LDRH not yet implemented."
	325 Move X1, [X10]
	326 Compare X9, 0
	327 JumpIfEqual {334}
	328 Move X10, [X8+176]
	329 Add X10, X10, 8
	330 NotImplemented "Instruction LDUR not yet implemented."
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Subtract X9, X9, 1
	333 Add X10, X10, 16
	334 Move X0, X21
	335 Move W2, W31
	336 Call 0x1C5D788
	337 NotImplemented "Instruction LDRSW not yet implemented."
	338 Add X8, X8, X9
	339 Add X0, X8, 312
	340 Move X8, [X0]
	341 Move X1, [X0+8]
	342 Move X0, X21
	343 NotImplemented "Instruction BLR not yet implemented."
	344 Compare X22, 0
	345 JumpIfNotEqual {417}
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Compare W24, 0
	348 JumpIfNotEqual {371}
	349 Move X0, X19
	350 Move W1, W20
	351 Call BaseVerticalCollectionView.SetSelection, X0, X1
	352 Compare W23, 0
	353 JumpIfEqual {371}
	354 Move X8, [X19+984]
	355 Compare X8, 0
	356 JumpIfEqual {371}
	357 Move X1, [X19+1144]
	358 Move X3, [X8+24]
	359 Move X0, [X8+64]
	360 Move X2, [X8+40]
	361 Move X20, [X31+64]
	362 Move X19, [X31+72]
	363 Move X22, [X31+48]
	364 Move X21, [X31+56]
	365 Move X24, [X31+32]
	366 Move X23, [X31+40]
	367 Move X30, [X31+16]
	368 Move D9, [X31+80]
	369 Move D8, [X31+88]
	370 CallNoReturn X3
	371 Move X20, [X31+64]
	372 Move X19, [X31+72]
	373 Move X22, [X31+48]
	374 Move X21, [X31+56]
	375 Move X24, [X31+32]
	376 Move X23, [X31+40]
	377 Move X30, [X31+16]
	378 Move D9, [X31+80]
	379 Move D8, [X31+88]
	380 Return 
	381 Move W8, [X19+1064]
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move X0, [X19+1136]
	384 Compare X0, 0
	385 JumpIfEqual {415}
	386 Move X8, 0x3F5000
	387 Move X8, [X8+2920]
	388 Move W1, W20
	389 Move X2, [X8]
	390 Call List`1<Int32>.Contains, X0, X1
	391 Move TEMP, X0
	392 And TEMP, TEMP, 1
	393 Compare TEMP, 1
	394 JumpIfNotEqual {402}
	395 Move X8, [X19+1024]
	396 Compare X8, 0
	397 JumpIfEqual {402}
	398 Move X9, [X8+24]
	399 Move X0, [X8+64]
	400 Move X1, [X8+40]
	401 NotImplemented "Instruction BLR not yet implemented."
	402 Move X0, X19
	403 Move W1, W20
	404 Move X20, [X31+64]
	405 Move X19, [X31+72]
	406 Move X22, [X31+48]
	407 Move X21, [X31+56]
	408 Move X24, [X31+32]
	409 Move X23, [X31+40]
	410 Move X30, [X31+16]
	411 Move D9, [X31+80]
	412 Move D8, [X31+88]
	413 Call BaseVerticalCollectionView.SetSelection, X0, X1
	414 Return 
	415 Call 0x1C17F20
	416 Call 0x1C17F20
	417 Move X0, X22
	418 Call 0x1C17F18
	419 Move X23, X0
	420 NotImplemented "Instruction CMP not yet implemented."
	421 Move X0, X23
	422 Call 0x3EB2AD0
	423 Move X22, [X0]
	424 Call 0x3EB2AE0
	425 Move W24, W31
	426 Move W23, W31
	427 Compare X21, 0
	428 JumpIfNotEqual {321}
	429 Move X22, X31
	430 Move X23, X0
	431 Compare X21, 0
	432 JumpIfEqual {456}
	433 Move X10, 0x3F1000
	434 Move X8, [X21]
	435 Move X10, [X10+3584]
	436 NotImplemented "Instruction LDRH not yet implemented."
	437 Move X1, [X10]
	438 Compare X9, 0
	439 JumpIfEqual {446}
	440 Move X10, [X8+176]
	441 Add X10, X10, 8
	442 NotImplemented "Instruction LDUR not yet implemented."
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Subtract X9, X9, 1
	445 Add X10, X10, 16
	446 Move X0, X21
	447 Move W2, W31
	448 Call 0x1C5D788
	449 NotImplemented "Instruction LDRSW not yet implemented."
	450 Add X8, X8, X9
	451 Add X0, X8, 312
	452 Move X8, [X0]
	453 Move X1, [X0+8]
	454 Move X0, X21
	455 NotImplemented "Instruction BLR not yet implemented."
	456 Compare X22, 0
	457 JumpIfNotEqual {460}
	458 Move X0, X23
	459 Call 0x1D2D690
	460 Move X0, X22
	461 Call 0x1C17F18
	462 Call 0x1991590

Method: System.Void DoRangeSelection(System.Int32 rangeSelectionFinalIndex)

Disassembly:
	0x03D03C84 LDR X8, [X23]
	0x03D03C88 LDR X10, [X10 + 0xE00]
	0x03D03C8C LDRH W9, [X8 + 0x12E]
	0x03D03C90 LDR X1, [X10]
	0x03D03C94 CBZ X9, 0x3D03CB8
	0x03D03C98 LDR X10, [X8 + 0xB0]
	0x03D03C9C ADD X10, X10, 0x8
	0x03D03CA0 LDUR X11, [X10 - 0x8]
	0x03D03CA4 CMP X11, X1
	0x03D03CA8 B.EQ 0x3D03CC8
	0x03D03CAC SUBS X9, X9, 0x1
	0x03D03CB0 ADD X10, X10, 0x10
	0x03D03CB4 B.NE 0x3D03CA0
	0x03D03CB8 MOV X0, X23
	0x03D03CBC MOV W2, W31
	0x03D03CC0 BL 0x1C5C788
	0x03D03CC4 B 0x3D03CD4
	0x03D03CC8 LDRSW X9, [X10]
	0x03D03CCC ADD X8, X8, X9, 0x4, LSL
	0x03D03CD0 ADD X0, X8, 0x138
	0x03D03CD4 LDP X8, X1, [X0]
	0x03D03CD8 MOV X0, X23
	0x03D03CDC BLR X8
	0x03D03CE0 CBNZ X24, 0x3D03D6C
	0x03D03CE4 CMP W25, 0x6
	0x03D03CE8 B.EQ 0x3D03CF0
	0x03D03CEC CBNZ W25, 0x3D03D4C
	0x03D03CF0 LDR X0, [X19 + 0x468]
	0x03D03CF4 CBZ X0, 0x3D03D64
	0x03D03CF8 ADRP X23, 0x41A000
	0x03D03CFC LDR X23, [X23 + 0x8C0]
	0x03D03D00 MOV W1, W22
	0x03D03D04 LDR X2, [X23]
	0x03D03D08 BL 0x2FDDF0C
	0x03D03D0C LDR X0, [X19 + 0x470]
	0x03D03D10 CBZ X0, 0x3D03D64
	0x03D03D14 LDR X2, [X23]
	0x03D03D18 MOV W1, W20
	0x03D03D1C BL 0x2FDDF0C
	0x03D03D20 LDR X0, [X19 + 0x478]
	0x03D03D24 CBZ X0, 0x3D03D64
	0x03D03D28 ADRP X8, 0x460000
	0x03D03D2C LDR X8, [X8 + 0x108]
	0x03D03D30 MOV X1, X21
	0x03D03D34 LDP X20, X19, [X31 + 0x30]
	0x03D03D38 LDP X22, X21, [X31 + 0x20]
	0x03D03D3C LDR X2, [X8]
	0x03D03D40 LDP X24, X23, [X31 + 0x10]
	0x03D03D44 LDP X30, X25, [X31], #0x40
	0x03D03D48 B 0x301D7A8
	0x03D03D4C LDP X20, X19, [X31 + 0x30]
	0x03D03D50 LDP X22, X21, [X31 + 0x20]
	0x03D03D54 LDP X24, X23, [X31 + 0x10]
	0x03D03D58 LDP X30, X25, [X31], #0x40
	0x03D03D5C RET
	0x03D03D60 BL 0x1C16F20
	0x03D03D64 BL 0x1C16F20
	0x03D03D68 BL 0x1C16F20
	0x03D03D6C MOV X0, X24
	0x03D03D70 BL 0x1C16F18
	0x03D03D74 B 0x3D03D84
	0x03D03D78 B 0x3D03D84
	0x03D03D7C B 0x3D03D84
	0x03D03D80 B 0x3D03D84
	0x03D03D84 MOV X25, X0
	0x03D03D88 CMP W1, 0x1
	0x03D03D8C B.NE 0x3D03DAC
	0x03D03D90 MOV X0, X25
	0x03D03D94 BL 0x3EB1AD0
	0x03D03D98 LDR X24, [X0]
	0x03D03D9C BL 0x3EB1AE0
	0x03D03DA0 MOV W25, W31
	0x03D03DA4 CBNZ X23, 0x3D03C80
	0x03D03DA8 B 0x3D03CE0
	0x03D03DAC MOV X24, X31
	0x03D03DB0 B 0x3D03DB8
	0x03D03DB4 MOV X25, X0
	0x03D03DB8 CBZ X23, 0x3D03E1C
	0x03D03DBC ADRP X10, 0x3F0000
	0x03D03DC0 LDR X8, [X23]
	0x03D03DC4 LDR X10, [X10 + 0xE00]
	0x03D03DC8 LDRH W9, [X8 + 0x12E]
	0x03D03DCC LDR X1, [X10]
	0x03D03DD0 CBZ X9, 0x3D03DF4
	0x03D03DD4 LDR X10, [X8 + 0xB0]
	0x03D03DD8 ADD X10, X10, 0x8
	0x03D03DDC LDUR X11, [X10 - 0x8]
	0x03D03DE0 CMP X11, X1
	0x03D03DE4 B.EQ 0x3D03E04
	0x03D03DE8 SUBS X9, X9, 0x1
	0x03D03DEC ADD X10, X10, 0x10
	0x03D03DF0 B.NE 0x3D03DDC
	0x03D03DF4 MOV X0, X23
	0x03D03DF8 MOV W2, W31
	0x03D03DFC BL 0x1C5C788
	0x03D03E00 B 0x3D03E10
	0x03D03E04 LDRSW X9, [X10]
	0x03D03E08 ADD X8, X8, X9, 0x4, LSL
	0x03D03E0C ADD X0, X8, 0x138
	0x03D03E10 LDP X8, X1, [X0]
	0x03D03E14 MOV X0, X23
	0x03D03E18 BLR X8
	0x03D03E1C CBNZ X24, 0x3D03E28
	0x03D03E20 MOV X0, X25

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x6E5000
	008 Move W8, [X21+2066]
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x3F2000
	016 Move X0, [X0+3600]
	017 Call 0x1C17CF4
	018 Move X0, 0x3F5000
	019 Move X0, [X0+2928]
	020 Call 0x1C17CF4
	021 Move X0, 0x3F2000
	022 Move X0, [X0+3632]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2066], W8
	026 Move X23, 0x3F2000
	027 Move X22, 0x3F5000
	028 Move W8, [X20+1156]
	029 Move X0, [X20+1136]
	030 Move X23, [X23+3632]
	031 Move X22, [X22+2928]
	032 Move X1, X31
	033 Compare W8, 0
	034 JumpIfEqual {36}
	035 Call Enumerable.Max, X0
	036 Call Enumerable.Min, X0
	037 Move W21, W0
	038 Move X0, X20
	039 Call BaseVerticalCollectionView.ClearSelectionWithoutValidation, X0
	040 Move X0, [X23]
	041 Call 0x1C17F10
	042 Move X1, [X22]
	043 Move X22, X0
	044 Call List`1<Int32>..ctor, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Move [X20+1156], W8
	048 Compare X22, 0
	049 JumpIfEqual {110}
	050 Move X23, 0x3F2000
	051 Move X23, [X23+3600]
	052 Move W10, [X22+28]
	053 Move X8, [X22+16]
	054 Move X9, [X23]
	055 Add W10, W10, 1
	056 Move [X22+28], W10
	057 Compare X8, 0
	058 JumpIfEqual {110}
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Move W11, [X8+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add W9, W10, 1
	063 Add X8, X8, X10
	064 Move [X22+24], W9
	065 Move [X8+32], W19
	066 Move X8, [X9+32]
	067 Move X0, X22
	068 Move W1, W19
	069 Move X8, [X8+192]
	070 Move X2, [X8+112]
	071 Call List`1<Int32>.AddWithResize, X0, X1
	072 Add W19, W19, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare X22, 0
	075 JumpIfEqual {110}
	076 Move X23, 0x3F2000
	077 Move X23, [X23+3600]
	078 Move W10, [X22+28]
	079 Move X8, [X22+16]
	080 Move X9, [X23]
	081 Add W10, W10, 1
	082 Move [X22+28], W10
	083 Compare X8, 0
	084 JumpIfEqual {110}
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Move W11, [X8+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Add W9, W10, 1
	089 Add X8, X8, X10
	090 Move [X22+24], W9
	091 Move [X8+32], W19
	092 Move X8, [X9+32]
	093 Move X0, X22
	094 Move W1, W19
	095 Move X8, [X8+192]
	096 Move X2, [X8+112]
	097 Call List`1<Int32>.AddWithResize, X0, X1
	098 Subtract W19, W19, 1
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, X20
	101 Move X1, X22
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Call BaseVerticalCollectionView.AddToSelection, X0, X1
	109 Return 
	110 Call 0x1C17F20

Method: System.Void ProcessSingleClick(System.Int32 clickedIndex)

Disassembly:
	0x03D03BAC LDUR X11, [X10 - 0x8]

ISIL:
	001 Call BaseVerticalCollectionView.SetSelection, X0, X1
	002 Return 

Method: System.Void SelectAll()

Disassembly:
	0x03D01FA0 STP X30, X23, [X31 + 0x10]
	0x03D01FA4 STP X22, X21, [X31 + 0x20]
	0x03D01FA8 STP X20, X19, [X31 + 0x30]
	0x03D01FAC ADRP X21, 0x6E6000
	0x03D01FB0 LDRB W8, [X21 + 0x80F]
	0x03D01FB4 MOV X20, X1
	0x03D01FB8 MOV X19, X0
	0x03D01FBC TBNZ X8, 0x0, 0x3D01FE0
	0x03D01FC0 ADRP X0, 0x41B000
	0x03D01FC4 LDR X0, [X0 + 0xE78]
	0x03D01FC8 BL 0x1C16CF4
	0x03D01FCC ADRP X0, 0x41B000
	0x03D01FD0 LDR X0, [X0 + 0xE58]
	0x03D01FD4 BL 0x1C16CF4
	0x03D01FD8 MOVZ W8, 0x1
	0x03D01FDC STRB W8, [X21 + 0x80F]
	0x03D01FE0 LDR X8, [X19]
	0x03D01FE4 MOV X0, X19
	0x03D01FE8 LDR X9, [X8 + 0x808]
	0x03D01FEC LDR X1, [X8 + 0x810]
	0x03D01FF0 BLR X9
	0x03D01FF4 TBZ X0, 0x0, 0x3D021F8
	0x03D01FF8 CBZ X20, 0x3D02378
	0x03D01FFC ADRP X22, 0x41B000
	0x03D02000 LDR X8, [X20]
	0x03D02004 B 0x3EB19E4
	0x03D02008 LDRH W9, [X8 + 0x12E]
	0x03D0200C LDR X1, [X22]
	0x03D02010 CBZ X9, 0x3D02034
	0x03D02014 LDR X10, [X8 + 0xB0]
	0x03D02018 ADD X10, X10, 0x8
	0x03D0201C LDUR X11, [X10 - 0x8]
	0x03D02020 CMP X11, X1
	0x03D02024 B.EQ 0x3D02044
	0x03D02028 SUBS X9, X9, 0x1
	0x03D0202C ADD X10, X10, 0x10
	0x03D02030 B.NE 0x3D0201C
	0x03D02034 MOVZ W2, 0x2
	0x03D02038 MOV X0, X20
	0x03D0203C BL 0x1C5C788
	0x03D02040 B 0x3D02054
	0x03D02044 LDR W9, [X10]
	0x03D02048 ADD W9, W9, 0x2
	0x03D0204C ADD X8, X8, W9, 0x4, SXTW
	0x03D02050 ADD X0, X8, 0x138
	0x03D02054 LDP X8, X1, [X0]
	0x03D02058 MOV X0, X20
	0x03D0205C BLR X8
	0x03D02060 TBZ X0, 0x0, 0x3D021F8
	0x03D02064 LDR X8, [X20]
	0x03D02068 LDR X1, [X22]
	0x03D0206C LDRH W9, [X8 + 0x12E]
	0x03D02070 CBZ X9, 0x3D02094
	0x03D02074 LDR X10, [X8 + 0xB0]
	0x03D02078 ADD X10, X10, 0x8
	0x03D0207C LDUR X11, [X10 - 0x8]
	0x03D02080 CMP X11, X1
	0x03D02084 B.EQ 0x3D020A4
	0x03D02088 SUBS X9, X9, 0x1
	0x03D0208C ADD X10, X10, 0x10
	0x03D02090 B.NE 0x3D0207C
	0x03D02094 MOVZ W2, 0x3
	0x03D02098 MOV X0, X20
	0x03D0209C BL 0x1C5C788
	0x03D020A0 B 0x3D020B4
	0x03D020A4 LDR W9, [X10]
	0x03D020A8 ADD W9, W9, 0x3
	0x03D020AC ADD X8, X8, W9, 0x4, SXTW
	0x03D020B0 ADD X0, X8, 0x138
	0x03D020B4 LDP X8, X1, [X0]
	0x03D020B8 MOV X0, X20
	0x03D020BC BLR X8
	0x03D020C0 CBNZ W0, 0x3D021F8
	0x03D020C4 LDR X8, [X20]
	0x03D020C8 LDR X1, [X22]
	0x03D020CC LDRH W9, [X8 + 0x12E]
	0x03D020D0 CBZ X9, 0x3D020F4
	0x03D020D4 LDR X10, [X8 + 0xB0]
	0x03D020D8 ADD X10, X10, 0x8
	0x03D020DC LDUR X11, [X10 - 0x8]
	0x03D020E0 CMP X11, X1
	0x03D020E4 B.EQ 0x3D02104
	0x03D020E8 SUBS X9, X9, 0x1
	0x03D020EC ADD X10, X10, 0x10
	0x03D020F0 B.NE 0x3D020DC
	0x03D020F4 MOVZ W2, 0x1
	0x03D020F8 MOV X0, X20
	0x03D020FC BL 0x1C5C788
	0x03D02100 B 0x3D02114
	0x03D02104 LDR W9, [X10]
	0x03D02108 ADD W9, W9, 0x1
	0x03D0210C ADD X8, X8, W9, 0x4, SXTW
	0x03D02110 ADD X0, X8, 0x138
	0x03D02114 LDP X8, X1, [X0]
	0x03D02118 MOV X0, X20
	0x03D0211C BLR X8
	0x03D02120 ADRP X23, 0x41A000
	0x03D02124 LDR X23, [X23 + 0xE58]
	0x03D02128 MOV X21, X0
	0x03D0212C LDR X8, [X23]
	0x03D02130 LDR W9, [X8 + 0xE0]
	0x03D02134 CBNZ W9, 0x3D02144
	0x03D02138 MOV X0, X8
	0x03D0213C BL 0x1C16DFC
	0x03D02140 LDR X8, [X23]
	0x03D02144 LDR X8, [X8 + 0xB8]
	0x03D02148 MOV X0, X21
	0x03D0214C MOV X2, X31
	0x03D02150 LDR X1, [X8]
	0x03D02154 BL 0x3226EF8
	0x03D02158 LDR X8, [X20]
	0x03D0215C LDR X1, [X22]
	0x03D02160 LDRH W9, [X8 + 0x12E]
	0x03D02164 TBZ X0, 0x0, 0x3D0219C
	0x03D02168 CBZ W9, 0x3D0218C
	0x03D0216C LDR X10, [X8 + 0xB0]
	0x03D02170 ADD X10, X10, 0x8
	0x03D02174 LDUR X11, [X10 - 0x8]
	0x03D02178 CMP X11, X1
	0x03D0217C B.EQ 0x3D021D0
	0x03D02180 SUBS X9, X9, 0x1
	0x03D02184 ADD X10, X10, 0x10
	0x03D02188 B.NE 0x3D02174
	0x03D0218C MOVZ W2, 0x5
	0x03D02190 MOV X0, X20
	0x03D02194 BL 0x1C5C788
	0x03D02198 B 0x3D021E0
	0x03D0219C CBZ W9, 0x3D021C0
	0x03D021A0 LDR X10, [X8 + 0xB0]
	0x03D021A4 ADD X10, X10, 0x8
	0x03D021A8 LDUR X11, [X10 - 0x8]
	0x03D021AC CMP X11, X1
	0x03D021B0 B.EQ 0x3D0220C
	0x03D021B4 SUBS X9, X9, 0x1
	0x03D021B8 ADD X10, X10, 0x10
	0x03D021BC B.NE 0x3D021A8
	0x03D021C0 MOVZ W2, 0x6
	0x03D021C4 MOV X0, X20
	0x03D021C8 BL 0x1C5C788
	0x03D021CC B 0x3D0221C
	0x03D021D0 LDR W9, [X10]
	0x03D021D4 ADD W9, W9, 0x5
	0x03D021D8 ADD X8, X8, W9, 0x4, SXTW
	0x03D021DC ADD X0, X8, 0x138
	0x03D021E0 LDP X8, X1, [X0]
	0x03D021E4 MOV X0, X20
	0x03D021E8 BLR X8
	0x03D021EC STR S0, [X19 + 0x4A0]
	0x03D021F0 STR S1, [X19 + 0x4A4]
	0x03D021F4 STR S2, [X19 + 0x4A8]
	0x03D021F8 LDP X20, X19, [X31 + 0x30]
	0x03D021FC LDP X22, X21, [X31 + 0x20]
	0x03D02200 LDP X30, X23, [X31 + 0x10]
	0x03D02204 LDP D9, D8, [X31], #0x40
	0x03D02208 RET
	0x03D0220C LDR W9, [X10]
	0x03D02210 ADD W9, W9, 0x6
	0x03D02214 ADD X8, X8, W9, 0x4, SXTW
	0x03D02218 ADD X0, X8, 0x138
	0x03D0221C LDP X8, X1, [X0]
	0x03D02220 MOV X0, X20
	0x03D02224 BLR X8
	0x03D02228 LDR X8, [X20]
	0x03D0222C LDR X1, [X22]
	0x03D02230 MOV V8.16B, V0.16B
	0x03D02234 MOV V9.16B, V1.16B
	0x03D02238 LDRH W9, [X8 + 0x12E]
	0x03D0223C CBZ X9, 0x3D02260
	0x03D02240 LDR X10, [X8 + 0xB0]
	0x03D02244 ADD X10, X10, 0x8
	0x03D02248 LDUR X11, [X10 - 0x8]
	0x03D0224C CMP X11, X1
	0x03D02250 B.EQ 0x3D02270
	0x03D02254 SUBS X9, X9, 0x1
	0x03D02258 ADD X10, X10, 0x10
	0x03D0225C B.NE 0x3D02248
	0x03D02260 MOVZ W2, 0x9
	0x03D02264 MOV X0, X20
	0x03D02268 BL 0x1C5C788
	0x03D0226C B 0x3D02280
	0x03D02270 LDR W9, [X10]
	0x03D02274 ADD W9, W9, 0x9
	0x03D02278 ADD X8, X8, W9, 0x4, SXTW
	0x03D0227C ADD X0, X8, 0x138
	0x03D02280 LDP X8, X1, [X0]
	0x03D02284 MOV X0, X20
	0x03D02288 BLR X8
	0x03D0228C LDR X8, [X20]
	0x03D02290 LDR X1, [X22]
	0x03D02294 MOV W21, W0
	0x03D02298 LDRH W9, [X8 + 0x12E]
	0x03D0229C CBZ X9, 0x3D022C0
	0x03D022A0 LDR X10, [X8 + 0xB0]
	0x03D022A4 ADD X10, X10, 0x8
	0x03D022A8 LDUR X11, [X10 - 0x8]
	0x03D022AC CMP X11, X1
	0x03D022B0 B.EQ 0x3D022D0
	0x03D022B4 SUBS X9, X9, 0x1
	0x03D022B8 ADD X10, X10, 0x10
	0x03D022BC B.NE 0x3D022A8
	0x03D022C0 MOVZ W2, 0x18
	0x03D022C4 MOV X0, X20
	0x03D022C8 BL 0x1C5C788
	0x03D022CC B 0x3D022E0
	0x03D022D0 LDR W9, [X10]
	0x03D022D4 ADD W9, W9, 0x18
	0x03D022D8 ADD X8, X8, W9, 0x4, SXTW
	0x03D022DC ADD X0, X8, 0x138
	0x03D022E0 LDP X8, X1, [X0]
	0x03D022E4 MOV X0, X20
	0x03D022E8 BLR X8
	0x03D022EC LDR X8, [X20]
	0x03D022F0 LDR X1, [X22]
	0x03D022F4 MOV W22, W0
	0x03D022F8 LDRH W9, [X8 + 0x12E]
	0x03D022FC CBZ X9, 0x3D02320
	0x03D02300 LDR X10, [X8 + 0xB0]
	0x03D02304 ADD X10, X10, 0x8
	0x03D02308 LDUR X11, [X10 - 0x8]
	0x03D0230C CMP X11, X1
	0x03D02310 B.EQ 0x3D02330
	0x03D02314 SUBS X9, X9, 0x1
	0x03D02318 ADD X10, X10, 0x10
	0x03D0231C B.NE 0x3D02308
	0x03D02320 MOVZ W2, 0x14
	0x03D02324 MOV X0, X20
	0x03D02328 BL 0x1C5C788
	0x03D0232C B 0x3D02340
	0x03D02330 LDR W9, [X10]
	0x03D02334 ADD W9, W9, 0x14
	0x03D02338 ADD X8, X8, W9, 0x4, SXTW
	0x03D0233C ADD X0, X8, 0x138
	0x03D02340 LDP X8, X1, [X0]
	0x03D02344 MOV X0, X20
	0x03D02348 BLR X8
	0x03D0234C AND W3, W0, 0x1
	0x03D02350 AND W2, W22, 0x1
	0x03D02354 MOV X0, X19
	0x03D02358 MOV W1, W21
	0x03D0235C LDP X20, X19, [X31 + 0x30]
	0x03D02360 LDP X22, X21, [X31 + 0x20]
	0x03D02364 LDP X30, X23, [X31 + 0x10]
	0x03D02368 MOV V0.16B, V8.16B
	0x03D0236C MOV V1.16B, V9.16B
	0x03D02370 LDP D9, D8, [X31], #0x40
	0x03D02374 B 0x3D02568
	0x03D02378 BL 0x1C16F20
	0x03D0237C STR X30, [X31 - 0x30]!
	0x03D02380 STP X22, X21, [X31 + 0x10]
	0x03D02384 STP X20, X19, [X31 + 0x20]
	0x03D02388 ADRP X21, 0x6E5000
	0x03D0238C LDRB W8, [X21 + 0x80C]
	0x03D02390 MOV X19, X1
	0x03D02394 MOV X20, X0
	0x03D02398 TBNZ X8, 0x0, 0x3D023C8
	0x03D0239C ADRP X0, 0x41C000
	0x03D023A0 LDR X0, [X0 + 0xCF8]
	0x03D023A4 BL 0x1C16CF4
	0x03D023A8 ADRP X0, 0x41C000
	0x03D023AC LDR X0, [X0 + 0xD00]
	0x03D023B0 BL 0x1C16CF4
	0x03D023B4 ADRP X0, 0x41A000
	0x03D023B8 LDR X0, [X0 + 0xE58]
	0x03D023BC BL 0x1C16CF4
	0x03D023C0 MOVZ W8, 0x1
	0x03D023C4 STRB W8, [X21 + 0x80C]
	0x03D023C8 CBZ X19, 0x3D02434
	0x03D023CC ADRP X22, 0x41A000
	0x03D023D0 LDR X22, [X22 + 0xE58]
	0x03D023D4 LDR X21, [X19 + 0xA0]
	0x03D023D8 LDR X0, [X22]
	0x03D023DC LDR W8, [X0 + 0xE0]
	0x03D023E0 CBNZ W8, 0x3D023EC
	0x03D023E4 BL 0x1C16DFC
	0x03D023E8 LDR X0, [X22]
	0x03D023EC LDR X8, [X0 + 0xB8]
	0x03D023F0 MOV X0, X21
	0x03D023F4 MOV X2, X31
	0x03D023F8 LDR X1, [X8]
	0x03D023FC BL 0x3226EF8
	0x03D02400 TBZ X0, 0x0, 0x3D02410
	0x03D02404 MOV X0, X20
	0x03D02408 MOV X1, X19
	0x03D0240C BL 0x3D01F9C
	0x03D02410 MOV X0, X20
	0x03D02414 MOV X1, X31
	0x03D02418 BL 0x3DEC0CC
	0x03D0241C LDR W1, [X19 + 0x9C]
	0x03D02420 LDP X20, X19, [X31 + 0x20]
	0x03D02424 LDP X22, X21, [X31 + 0x10]
	0x03D02428 MOV X2, X31
	0x03D0242C LDR X30, [X31], #0x30
	0x03D02430 B 0x3DBF888
	0x03D02434 BL 0x1C16F20
	0x03D02438 STP X30, X21, [X31 - 0x20]!
	0x03D0243C STP X20, X19, [X31 + 0x10]
	0x03D02440 ADRP X21, 0x6E5000
	0x03D02444 LDRB W8, [X21 + 0x80D]
	0x03D02448 MOV X20, X1
	0x03D0244C MOV X19, X0
	0x03D02450 TBNZ X8, 0x0, 0x3D02468
	0x03D02454 ADRP X0, 0x461000
	0x03D02458 LDR X0, [X0 + 0xF8]
	0x03D0245C BL 0x1C16CF4
	0x03D02460 MOVZ W8, 0x1
	0x03D02464 STRB W8, [X21 + 0x80D]
	0x03D02468 LDR X8, [X19]
	0x03D0246C MOV X0, X19
	0x03D02470 LDR X9, [X8 + 0x808]
	0x03D02474 LDR X1, [X8 + 0x810]
	0x03D02478 BLR X9
	0x03D0247C TBZ X0, 0x0, 0x3D0249C
	0x03D02480 CBZ X20, 0x3D024A8
	0x03D02484 LDRB W8, [X20 + 0xA8]
	0x03D02488 CBZ W8, 0x3D0249C
	0x03D0248C MOV X0, X19
	0x03D02490 LDP X20, X19, [X31 + 0x10]
	0x03D02494 LDP X30, X21, [X31], #0x20
	0x03D02498 B 0x3CFEB78
	0x03D0249C LDP X20, X19, [X31 + 0x10]
	0x03D024A0 LDP X30, X21, [X31], #0x20
	0x03D024A4 RET
	0x03D024A8 BL 0x1C16F20
	0x03D024AC STR X30, [X31 - 0x30]!
	0x03D024B0 STP X22, X21, [X31 + 0x10]
	0x03D024B4 STP X20, X19, [X31 + 0x20]
	0x03D024B8 ADRP X21, 0x6E5000
	0x03D024BC LDRB W8, [X21 + 0x80E]
	0x03D024C0 MOV X19, X1
	0x03D024C4 MOV X20, X0
	0x03D024C8 TBNZ X8, 0x0, 0x3D024F8
	0x03D024CC ADRP X0, 0x41C000
	0x03D024D0 LDR X0, [X0 + 0xD20]
	0x03D024D4 BL 0x1C16CF4
	0x03D024D8 ADRP X0, 0x461000
	0x03D024DC LDR X0, [X0 + 0x100]
	0x03D024E0 BL 0x1C16CF4
	0x03D024E4 ADRP X0, 0x41A000
	0x03D024E8 LDR X0, [X0 + 0xE58]
	0x03D024EC BL 0x1C16CF4
	0x03D024F0 MOVZ W8, 0x1
	0x03D024F4 STRB W8, [X21 + 0x80E]
	0x03D024F8 CBZ X19, 0x3D02564
	0x03D024FC ADRP X22, 0x41A000
	0x03D02500 LDR X22, [X22 + 0xE58]
	0x03D02504 LDR X21, [X19 + 0xA0]
	0x03D02508 LDR X0, [X22]
	0x03D0250C LDR W8, [X0 + 0xE0]
	0x03D02510 CBNZ W8, 0x3D0251C
	0x03D02514 BL 0x1C16DFC
	0x03D02518 LDR X0, [X22]
	0x03D0251C LDR X8, [X0 + 0xB8]
	0x03D02520 MOV X0, X21
	0x03D02524 MOV X2, X31
	0x03D02528 LDR X1, [X8]
	0x03D0252C BL 0x3226EF8
	0x03D02530 TBZ X0, 0x0, 0x3D02540
	0x03D02534 MOV X0, X20
	0x03D02538 MOV X1, X19
	0x03D0253C BL 0x3D019C0
	0x03D02540 MOV X0, X20
	0x03D02544 MOV X1, X31
	0x03D02548 BL 0x3DEC0CC
	0x03D0254C LDR W1, [X19 + 0x9C]
	0x03D02550 LDP X20, X19, [X31 + 0x20]
	0x03D02554 LDP X22, X21, [X31 + 0x10]
	0x03D02558 MOV X2, X31
	0x03D0255C LDR X30, [X31], #0x30
	0x03D02560 B 0x3DBF888
	0x03D02564 BL 0x1C16F20
	0x03D02568 STP D9, D8, [X31 - 0x50]!
	0x03D0256C STR X30, [X31 + 0x10]
	0x03D02570 STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x6E7000
	014 Move W8, [X20+2067]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0x3FA000
	021 Move X0, [X0+752]
	022 Call 0x1C17CF4
	023 Move X0, 0x3F3000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0x41D000
	027 Move X0, [X0+3872]
	028 Call 0x1C17CF4
	029 Move X0, 0x41D000
	030 Move X0, [X0+3880]
	031 Call 0x1C17CF4
	032 Move X0, 0x3F3000
	033 Move X0, [X0+3608]
	034 Call 0x1C17CF4
	035 Move X0, 0x3F3000
	036 Move X0, [X0+3600]
	037 Call 0x1C17CF4
	038 Move X0, 0x3FA000
	039 Move X0, [X0+3864]
	040 Call 0x1C17CF4
	041 Move X0, 0x3F6000
	042 Move X0, [X0+2920]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+2067], W8
	046 Move X8, [X19]
	047 Move X0, X19
	048 Move X9, [X8+2056]
	049 Move X1, [X8+2064]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {333}
	055 Move W8, [X19+1064]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, [X19+1096]
	058 Compare X0, 0
	059 JumpIfEqual {364}
	060 Move X26, 0x3F9000
	061 Move X27, 0x41C000
	062 Move X25, 0x3F2000
	063 Move X28, 0x41C000
	064 Move X26, [X26+752]
	065 Move X27, [X27+3872]
	066 Move X25, [X25+3608]
	067 Move X28, [X28+3880]
	068 Move W20, W31
	069 Move X8, [X0]
	070 Move X9, [X8+392]
	071 Move X1, [X8+400]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare X0, 0
	074 JumpIfEqual {364}
	075 Move X8, [X0]
	076 Move X1, [X26]
	077 Move X21, X0
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move W2, 1
	088 Move X0, X21
	089 Call 0x1C5D788
	090 Move W9, [X10]
	091 Add W9, W9, 1
	092 Add X8, X8, W9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X0, X21
	097 NotImplemented "Instruction BLR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, [X19+1096]
	100 Compare X0, 0
	101 JumpIfEqual {364}
	102 Move X8, [X0]
	103 Move W1, W20
	104 Move X9, [X8+504]
	105 Move X2, [X8+512]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X19+1096]
	108 Compare X8, 0
	109 JumpIfEqual {364}
	110 Move X9, [X8]
	111 Move W22, W0
	112 Move X0, X8
	113 Move W1, W20
	114 Move X10, [X9+520]
	115 Move X2, [X9+528]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X21, X0
	118 Move X0, X19
	119 Call BaseVerticalCollectionView.get_activeItems, X0
	120 Compare X0, 0
	121 JumpIfEqual {364}
	122 Move X8, [X0]
	123 Move X1, [X27]
	124 Move X23, X0
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Compare X9, 0
	127 JumpIfEqual {134}
	128 Move X10, [X8+176]
	129 Add X10, X10, 8
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Subtract X9, X9, 1
	133 Add X10, X10, 16
	134 Move X0, X23
	135 Move W2, W31
	136 Call 0x1C5D788
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Add X8, X8, X9
	139 Add X0, X8, 312
	140 Move X8, [X0]
	141 Move X1, [X0+8]
	142 Move X0, X23
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move X23, X0
	145 Compare X0, 0
	146 JumpIfEqual {325}
	147 Move X8, [X23]
	148 Move X1, [X25]
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X23
	159 Move W2, W31
	160 Call 0x1C5D788
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Add X8, X8, X9
	163 Add X0, X8, 312
	164 Move X8, [X0]
	165 Move X1, [X0+8]
	166 Move X0, X23
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {204}
	172 Move X8, [X23]
	173 Move X1, [X28]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move X0, X23
	184 Move W2, W31
	185 Call 0x1C5D788
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X23
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Move X8, X0
	194 Compare X0, 0
	195 JumpIfEqual {324}
	196 Move W9, [X8+36]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X9, [X8]
	199 Move X10, [X9+456]
	200 Move X2, [X9+464]
	201 Move W1, 1
	202 Move X0, X8
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move X24, X31
	205 Move W29, 9
	206 Compare X23, 0
	207 JumpIfEqual {231}
	208 Move X8, [X23]
	209 Move X10, 0x3F2000
	210 NotImplemented "Instruction LDRH not yet implemented."
	211 Move X10, [X10+3584]
	212 Move X1, [X10]
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move X0, X23
	222 Move W2, W31
	223 Call 0x1C5D788
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Add X8, X8, X9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X1, [X0+8]
	229 Move X0, X23
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Compare X24, 0
	232 JumpIfNotEqual {365}
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Compare W29, 0
	235 JumpIfNotEqual {333}
	236 Move X0, [X19+1128]
	237 Compare X0, 0
	238 JumpIfEqual {364}
	239 Move X8, 0x3F6000
	240 Move X8, [X8+2920]
	241 Move W1, W22
	242 Move X2, [X8]
	243 Call List`1<Int32>.Contains, X0, X1
	244 Move TEMP, X0
	245 And TEMP, TEMP, 1
	246 Compare TEMP, 1
	247 JumpIfEqual {320}
	248 Move X0, [X19+1128]
	249 Compare X0, 0
	250 JumpIfEqual {364}
	251 Move X9, 0x3F3000
	252 Move W10, [X0+28]
	253 Move X8, [X0+16]
	254 Move X9, [X9+3600]
	255 Add W10, W10, 1
	256 Move X9, [X9]
	257 Move [X0+28], W10
	258 Compare X8, 0
	259 JumpIfEqual {364}
	260 NotImplemented "Instruction LDRSW not yet implemented."
	261 Move W11, [X8+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add W9, W10, 1
	264 Add X8, X8, X10
	265 Move [X0+24], W9
	266 Move [X8+32], W22
	267 Move X8, [X9+32]
	268 Move W1, W22
	269 Move X8, [X8+192]
	270 Move X2, [X8+112]
	271 Call List`1<Int32>.AddWithResize, X0, X1
	272 Move X0, [X19+1136]
	273 Compare X0, 0
	274 JumpIfEqual {364}
	275 Move X9, 0x3F3000
	276 Move W10, [X0+28]
	277 Move X8, [X0+16]
	278 Move X9, [X9+3600]
	279 Add W10, W10, 1
	280 Move X9, [X9]
	281 Move [X0+28], W10
	282 Compare X8, 0
	283 JumpIfEqual {364}
	284 NotImplemented "Instruction LDRSW not yet implemented."
	285 Move W11, [X8+24]
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Add W9, W10, 1
	288 Add X8, X8, X10
	289 Move [X0+24], W9
	290 Move [X8+32], W20
	291 Move X8, [X9+32]
	292 Move W1, W20
	293 Move X8, [X8+192]
	294 Move X2, [X8+112]
	295 Call List`1<Int32>.AddWithResize, X0, X1
	296 Move X0, [X19+1144]
	297 Compare X0, 0
	298 JumpIfEqual {364}
	299 Move X9, 0x3FA000
	300 Move W10, [X0+28]
	301 Move X8, [X0+16]
	302 Move X9, [X9+3864]
	303 Add W10, W10, 1
	304 Move X9, [X9]
	305 Move [X0+28], W10
	306 Compare X8, 0
	307 JumpIfEqual {364}
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Move W11, [X8+24]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Add W9, W10, 1
	312 Add X8, X8, X10
	313 Move [X0+24], W9
	314 Move [X8+32], X21
	315 Move X8, [X9+32]
	316 Move X1, X21
	317 Move X8, [X8+192]
	318 Move X2, [X8+112]
	319 Call List`1<Object>.AddWithResize, X0, X1
	320 Move X0, [X19+1096]
	321 Add W20, W20, 1
	322 Compare X0, 0
	323 JumpIfNotEqual {69}
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Call 0x3EB2AD0
	328 Move X24, [X0]
	329 Call 0x3EB2AE0
	330 Move W29, W31
	331 Compare X23, 0
	332 JumpIfNotEqual {208}
	333 Move X20, [X31+80]
	334 Move X19, [X31+88]
	335 Move X22, [X31+64]
	336 Move X21, [X31+72]
	337 Move X24, [X31+48]
	338 Move X23, [X31+56]
	339 Move X26, [X31+32]
	340 Move X25, [X31+40]
	341 Move X28, [X31+16]
	342 Move X27, [X31+24]
	343 Move X29, [X31+96]
	344 Move X30, [X31+104]
	345 Return 
	346 Move X0, X19
	347 Call BaseVerticalCollectionView.NotifyOfSelectionChange, X0
	348 Move X0, X19
	349 Move X20, [X31+80]
	350 Move X19, [X31+88]
	351 Move X22, [X31+64]
	352 Move X21, [X31+72]
	353 Move X24, [X31+48]
	354 Move X23, [X31+56]
	355 Move X26, [X31+32]
	356 Move X25, [X31+40]
	357 Move X28, [X31+16]
	358 Move X27, [X31+24]
	359 Move X1, X31
	360 Move X29, [X31+96]
	361 Move X30, [X31+104]
	362 Call VisualElement.SaveViewData, X0
	363 Return 
	364 Call 0x1C17F20
	365 Move X0, X24
	366 Call 0x1C17F18
	367 Move X19, X0
	368 Move X24, X31
	369 Move X19, X0
	370 Compare X23, 0
	371 JumpIfEqual {395}
	372 Move X8, [X23]
	373 Move X10, 0x3F2000
	374 NotImplemented "Instruction LDRH not yet implemented."
	375 Move X10, [X10+3584]
	376 Move X1, [X10]
	377 Compare X9, 0
	378 JumpIfEqual {385}
	379 Move X10, [X8+176]
	380 Add X10, X10, 8
	381 NotImplemented "Instruction LDUR not yet implemented."
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Subtract X9, X9, 1
	384 Add X10, X10, 16
	385 Move X0, X23
	386 Move W2, W31
	387 Call 0x1C5D788
	388 NotImplemented "Instruction LDRSW not yet implemented."
	389 Add X8, X8, X9
	390 Add X0, X8, 312
	391 Move X8, [X0]
	392 Move X1, [X0+8]
	393 Move X0, X23
	394 NotImplemented "Instruction BLR not yet implemented."
	395 Compare X24, 0
	396 JumpIfNotEqual {399}
	397 Move X0, X19
	398 Call 0x1D2D690
	399 Move X0, X24
	400 Call 0x1C17F18
	401 Call 0x1991590

Method: System.Void AddToSelection(System.Int32 index)

Disassembly:
	0x03D03C0C CMP X11, X1
	0x03D03C10 B.EQ 0x3D03C30
	0x03D03C14 SUBS X9, X9, 0x1
	0x03D03C18 ADD X10, X10, 0x10
	0x03D03C1C B.NE 0x3D03C08
	0x03D03C20 MOV X0, X23
	0x03D03C24 MOV W2, W31
	0x03D03C28 BL 0x1C5C788
	0x03D03C2C B 0x3D03C3C
	0x03D03C30 LDRSW X9, [X10]
	0x03D03C34 ADD X8, X8, X9, 0x4, LSL
	0x03D03C38 ADD X0, X8, 0x138
	0x03D03C3C LDP X8, X1, [X0]
	0x03D03C40 MOV X0, X23
	0x03D03C44 BLR X8
	0x03D03C48 MOV X8, X0
	0x03D03C4C CBZ X0, 0x3D03D60
	0x03D03C50 LDR W9, [X8 + 0x24]
	0x03D03C54 CMP W9, W22
	0x03D03C58 B.NE 0x3D03B94
	0x03D03C5C LDR X9, [X8]
	0x03D03C60 LDP X10, X2, [X9 + 0x1C8]
	0x03D03C64 MOV X0, X8
	0x03D03C68 MOV W1, W31
	0x03D03C6C BLR X10
	0x03D03C70 B 0x3D03B94
	0x03D03C74 MOV X24, X31
	0x03D03C78 MOVZ W25, 0x6
	0x03D03C7C CBZ X23, 0x3D03CE0
	0x03D03C80 ADRP X10, 0x3F0000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6E5000
	007 Move X22, 0x3F2000
	008 Move W8, [X21+2068]
	009 Move X22, [X22+3672]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3F2000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2068], W8
	021 Move X0, [X22]
	022 Move W1, 1
	023 Call 0x1C17D6C
	024 Compare X0, 0
	025 JumpIfEqual {39}
	026 Move W8, [X0+24]
	027 Move X1, X0
	028 Compare W8, 0
	029 JumpIfEqual {40}
	030 Move [X1+32], W20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Call BaseVerticalCollectionView.AddToSelection, X0, X1
	038 Return 
	039 Call 0x1C17F20
	040 Call 0x1C17F28

Method: System.Void AddToSelection(System.Collections.Generic.IList`1<System.Int32> indexes)

Disassembly:
	0x03D04180 LDR X1, [X8]
	0x03D04184 LDR X8, [X19]
	0x03D04188 CMP X8, X1
	0x03D0418C B.NE 0x3D043E8
	0x03D04190 MOV X1, X19
	0x03D04194 LDP X20, X19, [X31 + 0x20]
	0x03D04198 LDP X22, X21, [X31 + 0x10]
	0x03D0419C MOV X2, X31
	0x03D041A0 LDR X30, [X31], #0x30
	0x03D041A4 B 0x3D92A60
	0x03D041A8 LDR X8, [X19]
	0x03D041AC MOV X0, X19
	0x03D041B0 LDP X9, X1, [X8 + 0x188]
	0x03D041B4 BLR X9
	0x03D041B8 ADRP X8, 0x419000
	0x03D041BC LDR X8, [X8 + 0x700]
	0x03D041C0 MOV X21, X0
	0x03D041C4 LDR X8, [X8]
	0x03D041C8 LDR W9, [X8 + 0xE0]
	0x03D041CC CBNZ W9, 0x3D041D8
	0x03D041D0 MOV X0, X8
	0x03D041D4 BL 0x1C16DFC
	0x03D041D8 ADRP X8, 0x419000
	0x03D041DC LDR X8, [X8 + 0x6D0]
	0x03D041E0 LDR X0, [X8]
	0x03D041E4 BL 0x2D0D5C8
	0x03D041E8 CMP X21, X0
	0x03D041EC B.NE 0x3D04228
	0x03D041F0 LDR X0, [X20 + 0x450]
	0x03D041F4 CBZ X0, 0x3D0438C
	0x03D041F8 LDR X8, [X19 + 0x48]
	0x03D041FC CBZ X8, 0x3D04220
	0x03D04200 ADRP X9, 0x417000
	0x03D04204 LDR X9, [X9 + 0x898]
	0x03D04208 LDR X10, [X8]
	0x03D0420C LDR X9, [X9]
	0x03D04210 LDRB W12, [X10 + 0x130]
	0x03D04214 LDRB W11, [X9 + 0x130]
	0x03D04218 CMP W12, W11
	0x03D0421C B.CS 0x3D0439C
	0x03D04220 MOV X1, X31
	0x03D04224 B 0x3D043B0
	0x03D04228 LDR X8, [X19]
	0x03D0422C MOV X0, X19
	0x03D04230 LDP X9, X1, [X8 + 0x188]
	0x03D04234 BLR X9
	0x03D04238 ADRP X8, 0x419000
	0x03D0423C LDR X8, [X8 + 0x6F8]
	0x03D04240 MOV X21, X0
	0x03D04244 LDR X8, [X8]
	0x03D04248 LDR W9, [X8 + 0xE0]
	0x03D0424C CBNZ W9, 0x3D04258
	0x03D04250 MOV X0, X8
	0x03D04254 BL 0x1C16DFC
	0x03D04258 ADRP X8, 0x419000
	0x03D0425C LDR X8, [X8 + 0x6E8]
	0x03D04260 LDR X0, [X8]
	0x03D04264 BL 0x2D0D5C8
	0x03D04268 CMP X21, X0
	0x03D0426C B.NE 0x3D0429C
	0x03D04270 ADRP X8, 0x45F000
	0x03D04274 LDR X8, [X8 + 0x110]
	0x03D04278 LDR X9, [X19]
	0x03D0427C LDR X8, [X8]
	0x03D04280 LDRB W11, [X9 + 0x130]
	0x03D04284 LDRB W10, [X8 + 0x130]
	0x03D04288 CMP W11, W10
	0x03D0428C B.CS 0x3D04330
	0x03D04290 LDR X0, [X20 + 0x450]
	0x03D04294 CBNZ X0, 0x3D04378
	0x03D04298 B 0x3D0438C
	0x03D0429C LDR X8, [X19]
	0x03D042A0 MOV X0, X19
	0x03D042A4 LDP X9, X1, [X8 + 0x188]
	0x03D042A8 BLR X9
	0x03D042AC ADRP X8, 0x419000
	0x03D042B0 LDR X8, [X8 + 0x708]
	0x03D042B4 MOV X21, X0
	0x03D042B8 LDR X8, [X8]
	0x03D042BC LDR W9, [X8 + 0xE0]
	0x03D042C0 CBNZ W9, 0x3D042CC
	0x03D042C4 MOV X0, X8
	0x03D042C8 BL 0x1C16DFC
	0x03D042CC ADRP X8, 0x419000
	0x03D042D0 LDR X8, [X8 + 0x6D8]
	0x03D042D4 LDR X0, [X8]
	0x03D042D8 BL 0x2D0D5C8
	0x03D042DC CMP X21, X0
	0x03D042E0 B.NE 0x3D0438C
	0x03D042E4 MOV X0, X19
	0x03D042E8 MOV X1, X31
	0x03D042EC BL 0x3D9C848
	0x03D042F0 CMP X0, X20
	0x03D042F4 B.NE 0x3D0438C
	0x03D042F8 LDR X0, [X20 + 0x440]
	0x03D042FC CBZ X0, 0x3D043E4
	0x03D04300 LDR X8, [X0]
	0x03D04304 LDR X9, [X8 + 0x768]
	0x03D04308 LDR X1, [X8 + 0x770]
	0x03D0430C BLR X9
	0x03D04310 CBZ X0, 0x3D043E4
	0x03D04314 LDR X8, [X0]
	0x03D04318 LDP X20, X19, [X31 + 0x20]
	0x03D0431C LDP X22, X21, [X31 + 0x10]
	0x03D04320 LDR X2, [X8 + 0x248]
	0x03D04324 LDR X1, [X8 + 0x250]
	0x03D04328 LDR X30, [X31], #0x30
	0x03D0432C BR X2
	0x03D04330 LDR X9, [X9 + 0xC8]
	0x03D04334 LDR X0, [X20 + 0x450]
	0x03D04338 ADD X9, X9, X10, 0x3, LSL
	0x03D0433C LDUR X9, [X9 - 0x8]
	0x03D04340 CMP X9, X8
	0x03D04344 CSEL X8, X19, X31, EQ
	0x03D04348 CBZ X0, 0x3D0438C
	0x03D0434C CBZ X8, 0x3D04378
	0x03D04350 LDR X8, [X8 + 0x88]
	0x03D04354 CBZ X8, 0x3D04378
	0x03D04358 ADRP X9, 0x417000
	0x03D0435C LDR X9, [X9 + 0x898]
	0x03D04360 LDR X10, [X8]
	0x03D04364 LDR X9, [X9]
	0x03D04368 LDRB W12, [X10 + 0x130]
	0x03D0436C LDRB W11, [X9 + 0x130]
	0x03D04370 CMP W12, W11
	0x03D04374 B.CS 0x3D043CC
	0x03D04378 MOV X1, X31
	0x03D0437C LDR X8, [X0]
	0x03D04380 LDR X3, [X8 + 0x228]
	0x03D04384 LDR X2, [X8 + 0x230]
	0x03D04388 B 0x3D043BC
	0x03D0438C LDP X20, X19, [X31 + 0x20]
	0x03D04390 LDP X22, X21, [X31 + 0x10]
	0x03D04394 LDR X30, [X31], #0x30
	0x03D04398 RET
	0x03D0439C LDR X10, [X10 + 0xC8]
	0x03D043A0 ADD X10, X10, X11, 0x3, LSL
	0x03D043A4 LDUR X10, [X10 - 0x8]
	0x03D043A8 CMP X10, X9
	0x03D043AC CSEL X1, X8, X31, EQ
	0x03D043B0 LDR X8, [X0]
	0x03D043B4 LDR X3, [X8 + 0x218]
	0x03D043B8 LDR X2, [X8 + 0x220]
	0x03D043BC LDP X20, X19, [X31 + 0x20]
	0x03D043C0 LDP X22, X21, [X31 + 0x10]
	0x03D043C4 LDR X30, [X31], #0x30
	0x03D043C8 BR X3
	0x03D043CC LDR X10, [X10 + 0xC8]
	0x03D043D0 ADD X10, X10, X11, 0x3, LSL
	0x03D043D4 LDUR X10, [X10 - 0x8]
	0x03D043D8 CMP X10, X9
	0x03D043DC CSEL X1, X8, X31, EQ
	0x03D043E0 B 0x3D0437C
	0x03D043E4 BL 0x1C16F20
	0x03D043E8 MOV X0, X19
	0x03D043EC BL 0x1C171E0
	0x03D043F0 STP D9, D8, [X31 - 0x30]!
	0x03D043F4 STP X30, X21, [X31 + 0x10]
	0x03D043F8 STP X20, X19, [X31 + 0x20]
	0x03D043FC LDR X8, [X0]
	0x03D04400 MOV X20, X1
	0x03D04404 MOV X19, X0
	0x03D04408 LDR X9, [X8 + 0x808]
	0x03D0440C LDR X8, [X8 + 0x810]
	0x03D04410 MOV X1, X8
	0x03D04414 BLR X9
	0x03D04418 TBZ X0, 0x0, 0x3D044DC
	0x03D0441C CBZ X20, 0x3D044EC
	0x03D04420 ADRP X21, 0x6D5000
	0x03D04424 LDR V8, [X20 + 0x9C]
	0x03D04428 LDRB W8, [X21 + 0x5AA]
	0x03D0442C LDR V9, [X20 + 0x8C]
	0x03D04430 CBNZ W8, 0x3D04448
	0x03D04434 ADRP X0, 0x3F6000
	0x03D04438 LDR X0, [X0 + 0x4B8]
	0x03D0443C BL 0x1C16CF4
	0x03D04440 MOVZ W8, 0x1
	0x03D04444 STRB W8, [X21 + 0x5AA]
	0x03D04448 ADRP X8, 0x3F6000
	0x03D0444C LDR X8, [X8 + 0x4B8]
	0x03D04450 ADRP X9, 0xFFFFFFFFFCDE6000
	0x03D04454 LDR V0, [X9 + 0x240]
	0x03D04458 FABS S1, S8
	0x03D0445C LDR X8, [X8]
	0x03D04460 FABS S2, S9
	0x03D04464 FCMP S1, S2
	0x03D04468 FCSEL S1, S1, S2, GT
	0x03D0446C LDR X8, [X8 + 0xB8]
	0x03D04470 FMOV S2, 8
	0x03D04474 FMUL S4, S1, S0
	0x03D04478 LDR V3, [X8]
	0x03D0447C FMUL S1, S3, S2
	0x03D04480 FCMP S4, S1
	0x03D04484 FCSEL S2, S4, S1, GT
	0x03D04488 FABD S3, S9, S9
	0x03D0448C FCMP S3, S2
	0x03D04490 B.PL 0x3D044C4
	0x03D04494 LDR V2, [X20 + 0xA0]
	0x03D04498 LDR V3, [X20 + 0x90]
	0x03D0449C FABS S4, S2
	0x03D044A0 FABS S5, S3
	0x03D044A4 FCMP S4, S5
	0x03D044A8 FCSEL S4, S4, S5, GT
	0x03D044AC FMUL S0, S4, S0
	0x03D044B0 FCMP S0, S1
	0x03D044B4 FCSEL S0, S0, S1, GT
	0x03D044B8 FABD S1, S3, S3
	0x03D044BC FCMP S1, S0
	0x03D044C0 B.MI 0x3D044DC
	0x03D044C4 LDP S0, S1, [X20 + 0x9C]
	0x03D044C8 MOV X0, X19
	0x03D044CC LDP X20, X19, [X31 + 0x20]
	0x03D044D0 LDP X30, X21, [X31 + 0x10]
	0x03D044D4 LDP D9, D8, [X31], #0x30
	0x03D044D8 B 0x3D003E8
	0x03D044DC LDP X20, X19, [X31 + 0x20]
	0x03D044E0 LDP X30, X21, [X31 + 0x10]
	0x03D044E4 LDP D9, D8, [X31], #0x30
	0x03D044E8 RET
	0x03D044EC BL 0x1C16F20
	0x03D044F0 STR D8, [X31 - 0x30]!
	0x03D044F4 STP X30, X21, [X31 + 0x10]
	0x03D044F8 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6E4000
	007 Move W8, [X21+2069]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x418000
	015 Move X0, [X0+1952]
	016 Call 0x1C17CF4
	017 Move X0, 0x3F0000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x418000
	021 Move X0, [X0+1976]
	022 Call 0x1C17CF4
	023 Move X0, 0x418000
	024 Move X0, [X0+1984]
	025 Call 0x1C17CF4
	026 Move X0, 0x3F0000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2069], W8
	031 Move X8, [X19]
	032 Move X0, X19
	033 Move X9, [X8+2056]
	034 Move X1, [X8+2064]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X20, 0
	037 JumpIfEqual {83}
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {83}
	042 Move X10, 0x418000
	043 Move X8, [X20]
	044 Move X10, [X10+1952]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move X0, X20
	056 Move W2, W31
	057 Call 0x1C5D788
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Add X8, X8, X9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X1, [X0+8]
	063 Move X0, X20
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Compare W0, 0
	066 JumpIfEqual {83}
	067 Move X10, 0x418000
	068 Move X8, [X20]
	069 Move X10, [X10+1976]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X1, [X10]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move X0, X20
	081 Move W2, W31
	082 Call 0x1C5D788
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Return 
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add X8, X8, X9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X20
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X20, X0
	097 Compare X0, 0
	098 JumpIfEqual {191}
	099 Move X21, 0x3F0000
	100 Move X22, 0x418000
	101 Move X21, [X21+3608]
	102 Move X22, [X22+1984]
	103 Move X8, [X20]
	104 Move X1, [X21]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X20
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X20
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {152}
	128 Move X8, [X20]
	129 Move X1, [X22]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move X0, X20
	140 Move W2, W31
	141 Call 0x1C5D788
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Add X8, X8, X9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X20
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move W1, W0
	150 Move X0, X19
	151 Call BaseVerticalCollectionView.AddToSelectionWithoutValidation, X0, X1
	152 Move X21, X31
	153 Compare X20, 0
	154 JumpIfEqual {178}
	155 Move X10, 0x3F0000
	156 Move X8, [X20]
	157 Move X10, [X10+3584]
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Move X1, [X10]
	160 Compare X9, 0
	161 JumpIfEqual {168}
	162 Move X10, [X8+176]
	163 Add X10, X10, 8
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Subtract X9, X9, 1
	167 Add X10, X10, 16
	168 Move X0, X20
	169 Move W2, W31
	170 Call 0x1C5D788
	171 NotImplemented "Instruction LDRSW not yet implemented."
	172 Add X8, X8, X9
	173 Add X0, X8, 312
	174 Move X8, [X0]
	175 Move X1, [X0+8]
	176 Move X0, X20
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Compare X21, 0
	179 JumpIfNotEqual {192}
	180 Move X0, X19
	181 Call BaseVerticalCollectionView.NotifyOfSelectionChange, X0
	182 Move X0, X19
	183 Move X20, [X31+32]
	184 Move X19, [X31+40]
	185 Move X22, [X31+16]
	186 Move X21, [X31+24]
	187 Move X1, X31
	188 Move X30, [X31+48]
	189 Call VisualElement.SaveViewData, X0
	190 Return 
	191 Call 0x1C17F20
	192 Move X0, X21
	193 Call 0x1C17F18
	194 Move X22, X0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X22
	197 Call 0x3EB2AD0
	198 Move X21, [X0]
	199 Call 0x3EB2AE0
	200 Move X21, X31
	201 Move X22, X0
	202 Compare X20, 0
	203 JumpIfEqual {227}
	204 Move X10, 0x3F0000
	205 Move X8, [X20]
	206 Move X10, [X10+3584]
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Move X1, [X10]
	209 Compare X9, 0
	210 JumpIfEqual {217}
	211 Move X10, [X8+176]
	212 Add X10, X10, 8
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Subtract X9, X9, 1
	216 Add X10, X10, 16
	217 Move X0, X20
	218 Move W2, W31
	219 Call 0x1C5D788
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Add X8, X8, X9
	222 Add X0, X8, 312
	223 Move X8, [X0]
	224 Move X1, [X0+8]
	225 Move X0, X20
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Compare X21, 0
	228 JumpIfNotEqual {231}
	229 Move X0, X22
	230 Call 0x1D2D690
	231 Move X0, X21
	232 Call 0x1C17F18
	233 Call 0x1991590

Method: System.Void AddToSelectionWithoutValidation(System.Int32 index)

Disassembly:
	0x03D0455C LDR X21, [X21 + 0xF18]
	0x03D04560 MOV X20, X0
	0x03D04564 LDR X8, [X21]
	0x03D04568 LDR W9, [X8 + 0xE0]
	0x03D0456C CBNZ W9, 0x3D04578
	0x03D04570 MOV X0, X8
	0x03D04574 BL 0x1C16DFC
	0x03D04578 CBZ X20, 0x3D04654
	0x03D0457C LDR X9, [X21]
	0x03D04580 ADRP X11, 0x419000
	0x03D04584 LDR X8, [X20]
	0x03D04588 LDR X10, [X9 + 0xB8]
	0x03D0458C LDR X11, [X11 + 0x680]
	0x03D04590 LDRH W9, [X8 + 0x12E]
	0x03D04594 LDR X21, [X10 + 0x20]
	0x03D04598 LDR X1, [X11]
	0x03D0459C CBZ X9, 0x3D045C0
	0x03D045A0 LDR X10, [X8 + 0xB0]
	0x03D045A4 ADD X10, X10, 0x8
	0x03D045A8 LDUR X11, [X10 - 0x8]
	0x03D045AC CMP X11, X1
	0x03D045B0 B.EQ 0x3D045D0
	0x03D045B4 SUBS X9, X9, 0x1
	0x03D045B8 ADD X10, X10, 0x10
	0x03D045BC B.NE 0x3D045A8
	0x03D045C0 MOVZ W2, 0x1
	0x03D045C4 MOV X0, X20
	0x03D045C8 BL 0x1C5C788
	0x03D045CC B 0x3D045E0
	0x03D045D0 LDR W9, [X10]
	0x03D045D4 ADD W9, W9, 0x1
	0x03D045D8 ADD X8, X8, W9, 0x4, SXTW
	0x03D045DC ADD X0, X8, 0x138
	0x03D045E0 LDP X8, X3, [X0]
	0x03D045E4 ADD X2, X31, 0xC
	0x03D045E8 MOV X0, X20
	0x03D045EC MOV X1, X21
	0x03D045F0 BLR X8
	0x03D045F4 TBZ X0, 0x0, 0x3D04644
	0x03D045F8 ADRP X8, 0x3EF000
	0x03D045FC LDR X8, [X8 + 0x5A8]
	0x03D04600 LDR V8, [X19 + 0x434]
	0x03D04604 LDR W20, [X31 + 0xC]
	0x03D04608 LDR X0, [X8]
	0x03D0460C LDR W8, [X0 + 0xE0]
	0x03D04610 CBNZ W8, 0x3D04618
	0x03D04614 BL 0x1C16DFC
	0x03D04618 SCVTF S0, W20
	0x03D0461C MOVZ W8, 0x1
	0x03D04620 FABD S0, S8, S8
	0x03D04624 FMOV S1, W8
	0x03D04628 FCMP S0, S1
	0x03D0462C B.LE 0x3D04644
	0x03D04630 LDR V0, [X31 + 0xC]
	0x03D04634 MOV X0, X19
	0x03D04638 SCVTF S0, S0
	0x03D0463C STR S0, [X19 + 0x434]
	0x03D04640 BL 0x3CFD108
	0x03D04644 LDP X20, X19, [X31 + 0x20]
	0x03D04648 LDP X30, X21, [X31 + 0x10]
	0x03D0464C LDR V8, [X31], #0x30
	0x03D04650 RET
	0x03D04654 BL 0x1C16F20
	0x03D04658 RET
	0x03D0465C B 0x3CFD108
	0x03D04660 SUB X31, X31, 0x70
	0x03D04664 STP X29, X30, [X31 + 0x10]
	0x03D04668 STP X28, X27, [X31 + 0x20]
	0x03D0466C STP X26, X25, [X31 + 0x30]
	0x03D04670 STP X24, X23, [X31 + 0x40]
	0x03D04674 STP X22, X21, [X31 + 0x50]
	0x03D04678 STP X20, X19, [X31 + 0x60]
	0x03D0467C ADRP X26, 0x6E3000
	0x03D04680 ADRP X27, 0x45F000
	0x03D04684 ADRP X20, 0x419000
	0x03D04688 ADRP X25, 0x45F000
	0x03D0468C ADRP X24, 0x45F000
	0x03D04690 ADRP X19, 0x45F000
	0x03D04694 ADRP X22, 0x45F000
	0x03D04698 ADRP X23, 0x45F000
	0x03D0469C ADRP X21, 0x45F000
	0x03D046A0 ADRP X29, 0x45F000
	0x03D046A4 ADRP X28, 0x45E000
	0x03D046A8 LDR X27, [X27 + 0x120]
	0x03D046AC LDR X20, [X20 + 0xF18]
	0x03D046B0 LDR X25, [X25 + 0x128]
	0x03D046B4 LDR X24, [X24 + 0x130]
	0x03D046B8 LDR X19, [X19 + 0x138]
	0x03D046BC LDR X22, [X22 + 0x140]
	0x03D046C0 LDR X23, [X23 + 0x148]
	0x03D046C4 LDR X21, [X21 + 0x150]
	0x03D046C8 LDR X29, [X29 + 0x158]
	0x03D046CC LDR X28, [X28 + 0xE60]
	0x03D046D0 LDRB W8, [X26 + 0x81F]
	0x03D046D4 TBNZ X8, 0x0, 0x3D047AC
	0x03D046D8 ADRP X0, 0x419000
	0x03D046DC LDR X0, [X0 + 0xF18]
	0x03D046E0 BL 0x1C16CF4
	0x03D046E4 ADRP X0, 0x45F000
	0x03D046E8 LDR X0, [X0 + 0x148]
	0x03D046EC BL 0x1C16CF4
	0x03D046F0 ADRP X0, 0x45F000
	0x03D046F4 LDR X0, [X0 + 0x138]
	0x03D046F8 BL 0x1C16CF4
	0x03D046FC ADRP X0, 0x45F000
	0x03D04700 LDR X0, [X0 + 0x130]
	0x03D04704 BL 0x1C16CF4
	0x03D04708 ADRP X0, 0x45F000
	0x03D0470C LDR X0, [X0 + 0x150]
	0x03D04710 BL 0x1C16CF4
	0x03D04714 ADRP X0, 0x45F000
	0x03D04718 LDR X0, [X0 + 0x128]
	0x03D0471C BL 0x1C16CF4
	0x03D04720 ADRP X0, 0x45F000
	0x03D04724 LDR X0, [X0 + 0x160]
	0x03D04728 BL 0x1C16CF4
	0x03D0472C ADRP X0, 0x45E000
	0x03D04730 LDR X0, [X0 + 0xE60]
	0x03D04734 BL 0x1C16CF4
	0x03D04738 ADRP X0, 0x45F000
	0x03D0473C LDR X0, [X0 + 0x158]
	0x03D04740 BL 0x1C16CF4
	0x03D04744 ADRP X0, 0x45F000
	0x03D04748 LDR X0, [X0 + 0x140]
	0x03D0474C BL 0x1C16CF4
	0x03D04750 ADRP X0, 0x45F000
	0x03D04754 LDR X0, [X0 + 0x168]
	0x03D04758 BL 0x1C16CF4
	0x03D0475C ADRP X0, 0x45F000
	0x03D04760 LDR X0, [X0 + 0x170]
	0x03D04764 BL 0x1C16CF4
	0x03D04768 ADRP X0, 0x45F000
	0x03D0476C LDR X0, [X0 + 0x178]
	0x03D04770 BL 0x1C16CF4
	0x03D04774 ADRP X0, 0x45F000
	0x03D04778 LDR X0, [X0 + 0x180]
	0x03D0477C BL 0x1C16CF4
	0x03D04780 ADRP X0, 0x45F000
	0x03D04784 LDR X0, [X0 + 0x188]
	0x03D04788 BL 0x1C16CF4
	0x03D0478C ADRP X0, 0x45F000
	0x03D04790 LDR X0, [X0 + 0x120]
	0x03D04794 BL 0x1C16CF4
	0x03D04798 ADRP X0, 0x45F000
	0x03D0479C LDR X0, [X0 + 0x190]
	0x03D047A0 BL 0x1C16CF4
	0x03D047A4 MOVZ W8, 0x1
	0x03D047A8 STRB W8, [X26 + 0x81F]
	0x03D047AC LDR X0, [X27]
	0x03D047B0 MOVZ W1, 0x1
	0x03D047B4 MOV W2, W31
	0x03D047B8 MOV W3, W31
	0x03D047BC MOV X4, X31
	0x03D047C0 BL 0x3BFE7FC
	0x03D047C4 LDR X8, [X20]
	0x03D047C8 MOVZ W1, 0x1
	0x03D047CC MOV W2, W31
	0x03D047D0 MOV W3, W31
	0x03D047D4 LDR X8, [X8 + 0xB8]
	0x03D047D8 MOV X4, X31
	0x03D047DC STR X0, [X8]
	0x03D047E0 LDR X0, [X25]
	0x03D047E4 BL 0x3BFE7FC
	0x03D047E8 LDR X8, [X20]
	0x03D047EC LDR X8, [X8 + 0xB8]
	0x03D047F0 STR X0, [X8 + 0x8]
	0x03D047F4 LDR X0, [X24]
	0x03D047F8 BL 0x1C16F10
	0x03D047FC LDR X1, [X19]
	0x03D04800 MOV X19, X0
	0x03D04804 BL 0x301B7C4
	0x03D04808 LDR X8, [X20]
	0x03D0480C MOVZ W9, 0x16
	0x03D04810 ADD X0, X31, 0x8
	0x03D04814 LDR X8, [X8 + 0xB8]
	0x03D04818 STR X19, [X8 + 0x10]
	0x03D0481C STR W9, [X8 + 0x18]
	0x03D04820 LDR X1, [X22]
	0x03D04824 LDR X2, [X23]
	0x03D04828 STR X31, [X31 + 0x8]
	0x03D0482C BL 0x29AA554
	0x03D04830 LDR X8, [X20]
	0x03D04834 LDR X9, [X31 + 0x8]
	0x03D04838 MOV X2, X31
	0x03D0483C LDR X10, [X8 + 0xB8]
	0x03D04840 STR X9, [X10 + 0x20]
	0x03D04844 LDR X8, [X8 + 0xB8]
	0x03D04848 LDR X0, [X21]
	0x03D0484C STR X0, [X8 + 0x28]
	0x03D04850 LDR X1, [X29]
	0x03D04854 BL 0x321B938
	0x03D04858 LDR X8, [X20]
	0x03D0485C MOV X2, X31
	0x03D04860 LDR X8, [X8 + 0xB8]
	0x03D04864 STR X0, [X8 + 0x30]
	0x03D04868 LDR X0, [X8 + 0x28]
	0x03D0486C LDR X1, [X28]
	0x03D04870 BL 0x321B938
	0x03D04874 LDR X8, [X20]
	0x03D04878 MOV X2, X31
	0x03D0487C LDR X8, [X8 + 0xB8]
	0x03D04880 STR X0, [X8 + 0x38]
	0x03D04884 LDR X0, [X8 + 0x28]
	0x03D04888 ADRP X8, 0x45F000
	0x03D0488C LDR X8, [X8 + 0x190]
	0x03D04890 LDR X1, [X8]
	0x03D04894 BL 0x321B938
	0x03D04898 LDR X8, [X20]
	0x03D0489C MOV X2, X31
	0x03D048A0 LDR X8, [X8 + 0xB8]
	0x03D048A4 STR X0, [X8 + 0x40]
	0x03D048A8 LDR X0, [X8 + 0x28]
	0x03D048AC ADRP X8, 0x45F000
	0x03D048B0 LDR X8, [X8 + 0x168]
	0x03D048B4 LDR X1, [X8]
	0x03D048B8 BL 0x321B938
	0x03D048BC LDR X8, [X20]
	0x03D048C0 MOV X2, X31
	0x03D048C4 LDR X8, [X8 + 0xB8]
	0x03D048C8 STR X0, [X8 + 0x48]
	0x03D048CC LDR X0, [X8 + 0x38]
	0x03D048D0 ADRP X8, 0x45F000
	0x03D048D4 LDR X8, [X8 + 0x188]
	0x03D048D8 LDR X1, [X8]
	0x03D048DC BL 0x321B938
	0x03D048E0 LDR X8, [X20]
	0x03D048E4 MOV X2, X31
	0x03D048E8 LDR X8, [X8 + 0xB8]
	0x03D048EC STR X0, [X8 + 0x50]
	0x03D048F0 LDR X0, [X8 + 0x38]
	0x03D048F4 ADRP X8, 0x45F000
	0x03D048F8 LDR X8, [X8 + 0x170]
	0x03D048FC LDR X1, [X8]
	0x03D04900 BL 0x321B938
	0x03D04904 LDR X8, [X20]
	0x03D04908 MOV X2, X31
	0x03D0490C LDR X8, [X8 + 0xB8]
	0x03D04910 STR X0, [X8 + 0x58]
	0x03D04914 LDR X0, [X8 + 0x38]
	0x03D04918 ADRP X8, 0x45F000
	0x03D0491C LDR X8, [X8 + 0x178]
	0x03D04920 LDR X1, [X8]
	0x03D04924 BL 0x321B938
	0x03D04928 LDR X8, [X20]
	0x03D0492C MOV X2, X31
	0x03D04930 LDR X8, [X8 + 0xB8]
	0x03D04934 STR X0, [X8 + 0x60]
	0x03D04938 LDR X0, [X8 + 0x28]
	0x03D0493C ADRP X8, 0x45F000
	0x03D04940 LDR X8, [X8 + 0x160]
	0x03D04944 LDR X1, [X8]
	0x03D04948 BL 0x321B938
	0x03D0494C LDR X8, [X20]
	0x03D04950 MOV X2, X31
	0x03D04954 LDR X8, [X8 + 0xB8]
	0x03D04958 STR X0, [X8 + 0x68]
	0x03D0495C LDR X0, [X8 + 0x28]
	0x03D04960 ADRP X8, 0x45F000
	0x03D04964 LDR X8, [X8 + 0x180]
	0x03D04968 LDR X1, [X8]
	0x03D0496C BL 0x321B938
	0x03D04970 LDR X8, [X20]
	0x03D04974 LDP X20, X19, [X31 + 0x60]
	0x03D04978 LDP X22, X21, [X31 + 0x50]
	0x03D0497C LDP X24, X23, [X31 + 0x40]
	0x03D04980 LDR X8, [X8 + 0xB8]
	0x03D04984 LDP X26, X25, [X31 + 0x30]
	0x03D04988 LDP X28, X27, [X31 + 0x20]
	0x03D0498C LDP X29, X30, [X31 + 0x10]
	0x03D04990 STR X0, [X8 + 0x70]
	0x03D04994 ADD X31, X31, 0x70
	0x03D04998 RET
	0x03D0499C MOV V1.16B, V0.16B
	0x03D049A0 FMOV S0, W31
	0x03D049A4 B 0x3D00478
	0x03D049A8 STR X30, [X31 - 0x10]!
	0x03D049AC CBZ X1, 0x3D049C8
	0x03D049B0 LDR W8, [X1 + 0x24]
	0x03D049B4 LDR W9, [X0 + 0x10]
	0x03D049B8 CMP W8, W9
	0x03D049BC CSET W0, EQ
	0x03D049C0 LDR X30, [X31], #0x10
	0x03D049C4 RET
	0x03D049C8 BL 0x1C16F20
	0x03D049CC MOV X1, X31
	0x03D049D0 B 0x3D049D4
	0x03D049D4 STR X30, [X31 - 0x50]!
	0x03D049D8 STP X26, X25, [X31 + 0x10]
	0x03D049DC STP X24, X23, [X31 + 0x20]
	0x03D049E0 STP X22, X21, [X31 + 0x30]
	0x03D049E4 STP X20, X19, [X31 + 0x40]
	0x03D049E8 ADRP X22, 0x6E3000
	0x03D049EC ADRP X21, 0x45F000
	0x03D049F0 LDRB W8, [X22 + 0x824]
	0x03D049F4 LDR X21, [X21 + 0x198]
	0x03D049F8 MOV X20, X1
	0x03D049FC MOV X19, X0
	0x03D04A00 TBNZ X8, 0x0, 0x3D04AB4
	0x03D04A04 ADRP X0, 0x45F000
	0x03D04A08 LDR X0, [X0 + 0x1A0]
	0x03D04A0C BL 0x1C16CF4
	0x03D04A10 ADRP X0, 0x45F000
	0x03D04A14 LDR X0, [X0 + 0x1A8]
	0x03D04A18 BL 0x1C16CF4
	0x03D04A1C ADRP X0, 0x45F000
	0x03D04A20 LDR X0, [X0 + 0x1B0]
	0x03D04A24 BL 0x1C16CF4
	0x03D04A28 ADRP X0, 0x45F000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x6E4000
	010 Move W8, [X21+2070]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x3F0000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x41A000
	021 Move X0, [X0+3872]
	022 Call 0x1C17CF4
	023 Move X0, 0x41A000
	024 Move X0, [X0+3880]
	025 Call 0x1C17CF4
	026 Move X0, 0x3F0000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move X0, 0x3F1000
	030 Move X0, [X0+3600]
	031 Call 0x1C17CF4
	032 Move X0, 0x3F8000
	033 Move X0, [X0+3864]
	034 Call 0x1C17CF4
	035 Move X0, 0x3F4000
	036 Move X0, [X0+2920]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+2070], W8
	040 Move X0, [X19+1136]
	041 Compare X0, 0
	042 JumpIfEqual {284}
	043 Move X8, 0x3F4000
	044 Move X8, [X8+2920]
	045 Move W1, W20
	046 Move X2, [X8]
	047 Call List`1<Int32>.Contains, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {260}
	052 Move X0, [X19+1096]
	053 Compare X0, 0
	054 JumpIfEqual {284}
	055 Move X8, [X0]
	056 Move W1, W20
	057 Move X9, [X8+504]
	058 Move X2, [X8+512]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X19+1096]
	061 Compare X8, 0
	062 JumpIfEqual {284}
	063 Move X9, [X8]
	064 Move W22, W0
	065 Move X0, X8
	066 Move W1, W20
	067 Move X10, [X9+520]
	068 Move X2, [X9+528]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X21, X0
	071 Move X0, X19
	072 Call BaseVerticalCollectionView.get_activeItems, X0
	073 Compare X0, 0
	074 JumpIfEqual {284}
	075 Move X10, 0x41A000
	076 Move X8, [X0]
	077 Move X10, [X10+3872]
	078 Move X23, X0
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move X1, [X10]
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move X0, X23
	090 Move W2, W31
	091 Call 0x1C5D788
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Add X8, X8, X9
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X1, [X0+8]
	097 Move X0, X23
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X23, X0
	100 Compare X0, 0
	101 JumpIfEqual {285}
	102 Move X24, 0x3F0000
	103 Move X25, 0x41A000
	104 Move X24, [X24+3608]
	105 Move X25, [X25+3880]
	106 Move X8, [X23]
	107 Move X1, [X24]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X23
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X23
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {163}
	131 Move X8, [X23]
	132 Move X1, [X25]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move X0, X23
	143 Move W2, W31
	144 Call 0x1C5D788
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X23
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X8, X0
	153 Compare X0, 0
	154 JumpIfEqual {283}
	155 Move W9, [X8+36]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X9, [X8]
	158 Move X10, [X9+456]
	159 Move X2, [X9+464]
	160 Move W1, 1
	161 Move X0, X8
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X24, X31
	164 Move W25, 6
	165 Compare X23, 0
	166 JumpIfEqual {190}
	167 Move X10, 0x3F0000
	168 Move X8, [X23]
	169 Move X10, [X10+3584]
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Move X1, [X10]
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X23
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X23
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Compare X24, 0
	191 JumpIfNotEqual {286}
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Compare W25, 0
	194 JumpIfNotEqual {260}
	195 Move X0, [X19+1128]
	196 Compare X0, 0
	197 JumpIfEqual {284}
	198 Move X23, 0x3F1000
	199 Move X23, [X23+3600]
	200 Move W10, [X0+28]
	201 Move X8, [X0+16]
	202 Move X9, [X23]
	203 Add W10, W10, 1
	204 Move [X0+28], W10
	205 Compare X8, 0
	206 JumpIfEqual {284}
	207 NotImplemented "Instruction LDRSW not yet implemented."
	208 Move W11, [X8+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Add W9, W10, 1
	211 Add X8, X8, X10
	212 Move [X0+24], W9
	213 Move [X8+32], W22
	214 Move X8, [X9+32]
	215 Move W1, W22
	216 Move X8, [X8+192]
	217 Move X2, [X8+112]
	218 Call List`1<Int32>.AddWithResize, X0, X1
	219 Move X0, [X19+1136]
	220 Compare X0, 0
	221 JumpIfEqual {284}
	222 Move W10, [X0+28]
	223 Move X8, [X0+16]
	224 Move X9, [X23]
	225 Add W10, W10, 1
	226 Move [X0+28], W10
	227 Compare X8, 0
	228 JumpIfEqual {284}
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Move W11, [X8+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add W9, W10, 1
	233 Add X8, X8, X10
	234 Move [X0+24], W9
	235 Move [X8+32], W20
	236 Move X8, [X9+32]
	237 Move W1, W20
	238 Move X8, [X8+192]
	239 Move X2, [X8+112]
	240 Call List`1<Int32>.AddWithResize, X0, X1
	241 Move X0, [X19+1144]
	242 Compare X0, 0
	243 JumpIfEqual {284}
	244 Move X9, 0x3F8000
	245 Move X9, [X9+3864]
	246 Move W10, [X0+28]
	247 Move X8, [X0+16]
	248 Move X9, [X9]
	249 Add W10, W10, 1
	250 Move [X0+28], W10
	251 Compare X8, 0
	252 JumpIfEqual {284}
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Move W11, [X8+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Add W9, W10, 1
	257 Add X8, X8, X10
	258 Move [X0+24], W9
	259 Move [X8+32], X21
	260 Move X20, [X31+48]
	261 Move X19, [X31+56]
	262 Move X22, [X31+32]
	263 Move X21, [X31+40]
	264 Move X24, [X31+16]
	265 Move X23, [X31+24]
	266 Move X30, [X31+64]
	267 Move X25, [X31+72]
	268 Return 
	269 Move X8, [X9+32]
	270 Move X1, X21
	271 Move X20, [X31+48]
	272 Move X19, [X31+56]
	273 Move X22, [X31+32]
	274 Move X21, [X31+40]
	275 Move X8, [X8+192]
	276 Move X24, [X31+16]
	277 Move X23, [X31+24]
	278 Move X2, [X8+112]
	279 Move X30, [X31+64]
	280 Move X25, [X31+72]
	281 Call List`1<Object>.AddWithResize, X0, X1
	282 Return 
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Call 0x1C17F20
	286 Move X0, X24
	287 Call 0x1C17F18
	288 Move X25, X0
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move X0, X25
	291 Call 0x3EB2AD0
	292 Move X24, [X0]
	293 Call 0x3EB2AE0
	294 Move W25, W31
	295 Compare X23, 0
	296 JumpIfNotEqual {167}
	297 Move X24, X31
	298 Move X25, X0
	299 Compare X23, 0
	300 JumpIfEqual {324}
	301 Move X10, 0x3F0000
	302 Move X8, [X23]
	303 Move X10, [X10+3584]
	304 NotImplemented "Instruction LDRH not yet implemented."
	305 Move X1, [X10]
	306 Compare X9, 0
	307 JumpIfEqual {314}
	308 Move X10, [X8+176]
	309 Add X10, X10, 8
	310 NotImplemented "Instruction LDUR not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Subtract X9, X9, 1
	313 Add X10, X10, 16
	314 Move X0, X23
	315 Move W2, W31
	316 Call 0x1C5D788
	317 NotImplemented "Instruction LDRSW not yet implemented."
	318 Add X8, X8, X9
	319 Add X0, X8, 312
	320 Move X8, [X0]
	321 Move X1, [X0+8]
	322 Move X0, X23
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Compare X24, 0
	325 JumpIfNotEqual {328}
	326 Move X0, X25
	327 Call 0x1D2D690
	328 Move X0, X24
	329 Call 0x1C17F18
	330 Call 0x1991590

Method: System.Void RemoveFromSelection(System.Int32 index)

Disassembly:
	0x03D03BB0 CMP X11, X1
	0x03D03BB4 B.EQ 0x3D03BD4
	0x03D03BB8 SUBS X9, X9, 0x1
	0x03D03BBC ADD X10, X10, 0x10
	0x03D03BC0 B.NE 0x3D03BAC
	0x03D03BC4 MOV X0, X23
	0x03D03BC8 MOV W2, W31
	0x03D03BCC BL 0x1C5C788
	0x03D03BD0 B 0x3D03BE0
	0x03D03BD4 LDRSW X9, [X10]
	0x03D03BD8 ADD X8, X8, X9, 0x4, LSL
	0x03D03BDC ADD X0, X8, 0x138
	0x03D03BE0 LDP X8, X1, [X0]
	0x03D03BE4 MOV X0, X23
	0x03D03BE8 BLR X8
	0x03D03BEC TBZ X0, 0x0, 0x3D03C74
	0x03D03BF0 LDR X8, [X23]
	0x03D03BF4 LDR X1, [X25]
	0x03D03BF8 LDRH W9, [X8 + 0x12E]
	0x03D03BFC CBZ X9, 0x3D03C20
	0x03D03C00 LDR X10, [X8 + 0xB0]
	0x03D03C04 ADD X10, X10, 0x8
	0x03D03C08 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move W20, W1
	006 Move X19, X0
	007 Move X9, [X8+2056]
	008 Move X8, [X8+2064]
	009 Move X1, X8
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move TEMP, X0
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {27}
	015 Move X0, X19
	016 Move W1, W20
	017 Call BaseVerticalCollectionView.RemoveFromSelectionWithoutValidation, X0, X1
	018 Move X0, X19
	019 Call BaseVerticalCollectionView.NotifyOfSelectionChange, X0
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, X31
	024 Move X30, [X31+32]
	025 Call VisualElement.SaveViewData, X0
	026 Return 
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return 

Method: System.Void RemoveFromSelectionWithoutValidation(System.Int32 index)

Disassembly:
	0x03D04A2C LDR X0, [X0 + 0x198]
	0x03D04A30 BL 0x1C16CF4
	0x03D04A34 ADRP X0, 0x45F000
	0x03D04A38 LDR X0, [X0 + 0x1B8]
	0x03D04A3C BL 0x1C16CF4
	0x03D04A40 ADRP X0, 0x45F000
	0x03D04A44 LDR X0, [X0 + 0x1C0]
	0x03D04A48 BL 0x1C16CF4
	0x03D04A4C ADRP X0, 0x45F000
	0x03D04A50 LDR X0, [X0 + 0x1C8]
	0x03D04A54 BL 0x1C16CF4
	0x03D04A58 ADRP X0, 0x45F000
	0x03D04A5C LDR X0, [X0 + 0x1D0]
	0x03D04A60 BL 0x1C16CF4
	0x03D04A64 ADRP X0, 0x45F000
	0x03D04A68 LDR X0, [X0 + 0x1D8]
	0x03D04A6C BL 0x1C16CF4
	0x03D04A70 ADRP X0, 0x45F000
	0x03D04A74 LDR X0, [X0 + 0x1E0]
	0x03D04A78 BL 0x1C16CF4
	0x03D04A7C ADRP X0, 0x45F000
	0x03D04A80 LDR X0, [X0 + 0x1E8]
	0x03D04A84 BL 0x1C16CF4
	0x03D04A88 ADRP X0, 0x457000
	0x03D04A8C LDR X0, [X0 + 0x198]
	0x03D04A90 BL 0x1C16CF4
	0x03D04A94 ADRP X0, 0x45F000
	0x03D04A98 LDR X0, [X0 + 0x1F0]
	0x03D04A9C BL 0x1C16CF4
	0x03D04AA0 ADRP X0, 0x45F000
	0x03D04AA4 LDR X0, [X0 + 0x1F8]
	0x03D04AA8 BL 0x1C16CF4
	0x03D04AAC MOVZ W8, 0x1
	0x03D04AB0 STRB W8, [X22 + 0x824]
	0x03D04AB4 LDR X0, [X21]
	0x03D04AB8 STR X31, [X31 + 0x8]
	0x03D04ABC ADRP X21, 0x45F000
	0x03D04AC0 ADRP X22, 0x45F000
	0x03D04AC4 LDR W8, [X0 + 0xE0]
	0x03D04AC8 LDR X21, [X21 + 0x1A0]
	0x03D04ACC LDR X22, [X22 + 0x1B0]
	0x03D04AD0 CBNZ W8, 0x3D04AD8
	0x03D04AD4 BL 0x1C16DFC
	0x03D04AD8 LDR X3, [X21]
	0x03D04ADC MOV X0, X19
	0x03D04AE0 MOV X1, X20
	0x03D04AE4 MOV X2, X31
	0x03D04AE8 BL 0x2775EE8
	0x03D04AEC MOV X0, X19
	0x03D04AF0 MOV W1, W31
	0x03D04AF4 MOV X2, X31
	0x03D04AF8 BL 0x3DAED80
	0x03D04AFC LDR X1, [X22]
	0x03D04B00 MOV X0, X19
	0x03D04B04 BL 0x2775398
	0x03D04B08 CBZ X0, 0x3D04D48
	0x03D04B0C ADRP X23, 0x45F000
	0x03D04B10 LDR X23, [X23 + 0x1C8]
	0x03D04B14 STRB W31, [X0 + 0x20]
	0x03D04B18 LDR X0, [X23]
	0x03D04B1C LDR W8, [X0 + 0xE0]
	0x03D04B20 CBNZ W8, 0x3D04B2C
	0x03D04B24 BL 0x1C16DFC
	0x03D04B28 LDR X0, [X23]
	0x03D04B2C LDR X8, [X0 + 0xB8]
	0x03D04B30 MOV X0, X19
	0x03D04B34 MOV X2, X31
	0x03D04B38 LDR X1, [X8]
	0x03D04B3C BL 0x3DF1C70
	0x03D04B40 LDR X1, [X22]
	0x03D04B44 MOV X0, X19
	0x03D04B48 BL 0x2775398
	0x03D04B4C CBZ X0, 0x3D04D48
	0x03D04B50 LDR X8, [X23]
	0x03D04B54 MOV X2, X31
	0x03D04B58 LDR X8, [X8 + 0xB8]
	0x03D04B5C LDR X1, [X8 + 0x10]
	0x03D04B60 BL 0x3DF1C70
	0x03D04B64 LDR X0, [X19 + 0x410]
	0x03D04B68 CBZ X0, 0x3D04D48
	0x03D04B6C LDR X8, [X23]
	0x03D04B70 ADRP X25, 0x45F000
	0x03D04B74 ADRP X20, 0x457000
	0x03D04B78 MOV X2, X31
	0x03D04B7C LDR X8, [X8 + 0xB8]
	0x03D04B80 LDR X1, [X8 + 0x8]
	0x03D04B84 LDR X25, [X25 + 0x1E0]
	0x03D04B88 LDR X20, [X20 + 0x198]
	0x03D04B8C BL 0x3DF1C70
	0x03D04B90 LDR X0, [X25]
	0x03D04B94 BL 0x1C16F10
	0x03D04B98 LDR X1, [X20]
	0x03D04B9C MOV X20, X0
	0x03D04BA0 BL 0x3D04D4C
	0x03D04BA4 STR X20, [X19 + 0x450]
	0x03D04BA8 CBZ X20, 0x3D04D48
	0x03D04BAC ADRP X8, 0x45F000
	0x03D04BB0 LDR X8, [X8 + 0x1E8]
	0x03D04BB4 MOV X0, X20
	0x03D04BB8 MOV X2, X31
	0x03D04BBC LDR X1, [X8]
	0x03D04BC0 BL 0x3DEF278
	0x03D04BC4 LDR X0, [X19 + 0x450]
	0x03D04BC8 CBZ X0, 0x3D04D48
	0x03D04BCC MOVZ W1, 0x1
	0x03D04BD0 MOV X2, X31
	0x03D04BD4 BL 0x3DAED80
	0x03D04BD8 LDR X0, [X19 + 0x450]
	0x03D04BDC CBZ X0, 0x3D04D48
	0x03D04BE0 LDR X8, [X23]
	0x03D04BE4 ADRP X26, 0x45F000
	0x03D04BE8 ADRP X21, 0x45F000
	0x03D04BEC ADRP X24, 0x45F000
	0x03D04BF0 LDR X8, [X8 + 0xB8]
	0x03D04BF4 MOV X2, X31
	0x03D04BF8 LDR X1, [X8 + 0x18]
	0x03D04BFC LDR X26, [X26 + 0x1D0]
	0x03D04C00 LDR X21, [X21 + 0x1B8]
	0x03D04C04 LDR X24, [X24 + 0x1D8]
	0x03D04C08 BL 0x3DF1C70
	0x03D04C0C LDR X0, [X26]
	0x03D04C10 LDR X20, [X19 + 0x450]
	0x03D04C14 BL 0x1C16F10
	0x03D04C18 LDR X2, [X21]
	0x03D04C1C MOV X1, X19
	0x03D04C20 MOV X3, X31
	0x03D04C24 MOV X21, X0
	0x03D04C28 BL 0x2D0E824
	0x03D04C2C LDR X2, [X24]
	0x03D04C30 MOV X0, X20
	0x03D04C34 MOV X1, X21
	0x03D04C38 BL 0x21EF3C0
	0x03D04C3C LDR X1, [X22]
	0x03D04C40 MOV X0, X19
	0x03D04C44 BL 0x2775398
	0x03D04C48 CBZ X0, 0x3D04D48
	0x03D04C4C LDR X8, [X0 + 0x378]
	0x03D04C50 ADRP X20, 0x45F000
	0x03D04C54 ADD X0, X31, 0x8
	0x03D04C58 MOV X2, X31
	0x03D04C5C STR X8, [X31 + 0x8]
	0x03D04C60 LDR X1, [X19 + 0x450]
	0x03D04C64 LDR X20, [X20 + 0x1F8]
	0x03D04C68 BL 0x3DF891C
	0x03D04C6C LDR X0, [X25]
	0x03D04C70 BL 0x1C16F10
	0x03D04C74 LDR X1, [X20]
	0x03D04C78 MOV X20, X0
	0x03D04C7C BL 0x3D04D4C
	0x03D04C80 STR X20, [X19 + 0x458]
	0x03D04C84 CBZ X20, 0x3D04D48
	0x03D04C88 ADRP X8, 0x45F000
	0x03D04C8C LDR X8, [X8 + 0x1F0]
	0x03D04C90 MOV X0, X20
	0x03D04C94 MOV X2, X31
	0x03D04C98 LDR X1, [X8]
	0x03D04C9C BL 0x3DEF278
	0x03D04CA0 LDR X0, [X19 + 0x458]
	0x03D04CA4 CBZ X0, 0x3D04D48
	0x03D04CA8 MOVZ W1, 0x1
	0x03D04CAC MOV X2, X31
	0x03D04CB0 BL 0x3DAED80
	0x03D04CB4 LDR X0, [X19 + 0x458]
	0x03D04CB8 CBZ X0, 0x3D04D48
	0x03D04CBC LDR X8, [X23]
	0x03D04CC0 ADRP X21, 0x45F000
	0x03D04CC4 MOV X2, X31
	0x03D04CC8 LDR X8, [X8 + 0xB8]
	0x03D04CCC LDR X1, [X8 + 0x20]
	0x03D04CD0 LDR X21, [X21 + 0x1C0]
	0x03D04CD4 BL 0x3DF1C70
	0x03D04CD8 LDR X0, [X26]
	0x03D04CDC LDR X20, [X19 + 0x458]
	0x03D04CE0 BL 0x1C16F10
	0x03D04CE4 LDR X2, [X21]
	0x03D04CE8 MOV X1, X19
	0x03D04CEC MOV X3, X31
	0x03D04CF0 MOV X21, X0
	0x03D04CF4 BL 0x2D0E824
	0x03D04CF8 LDR X2, [X24]
	0x03D04CFC MOV X0, X20
	0x03D04D00 MOV X1, X21
	0x03D04D04 BL 0x21EF3C0
	0x03D04D08 LDR X1, [X22]
	0x03D04D0C MOV X0, X19
	0x03D04D10 BL 0x2775398
	0x03D04D14 CBZ X0, 0x3D04D48
	0x03D04D18 LDR X8, [X0 + 0x378]
	0x03D04D1C ADD X0, X31, 0x8
	0x03D04D20 MOV X2, X31
	0x03D04D24 STR X8, [X31 + 0x8]
	0x03D04D28 LDR X1, [X19 + 0x458]
	0x03D04D2C BL 0x3DF891C
	0x03D04D30 LDP X20, X19, [X31 + 0x40]
	0x03D04D34 LDP X22, X21, [X31 + 0x30]
	0x03D04D38 LDP X24, X23, [X31 + 0x20]
	0x03D04D3C LDP X26, X25, [X31 + 0x10]
	0x03D04D40 LDR X30, [X31], #0x50
	0x03D04D44 RET
	0x03D04D48 BL 0x1C16F20
	0x03D04D4C STR X30, [X31 - 0x30]!
	0x03D04D50 STP X22, X21, [X31 + 0x10]
	0x03D04D54 STP X20, X19, [X31 + 0x20]
	0x03D04D58 ADRP X22, 0x6E3000
	0x03D04D5C ADRP X21, 0x45F000
	0x03D04D60 LDRB W8, [X22 + 0x859]
	0x03D04D64 LDR X21, [X21 + 0x200]
	0x03D04D68 MOV X20, X1
	0x03D04D6C MOV X19, X0
	0x03D04D70 TBNZ X8, 0x0, 0x3D04DB8
	0x03D04D74 ADRP X0, 0x45F000
	0x03D04D78 LDR X0, [X0 + 0x208]
	0x03D04D7C BL 0x1C16CF4
	0x03D04D80 ADRP X0, 0x45F000
	0x03D04D84 LDR X0, [X0 + 0x200]
	0x03D04D88 BL 0x1C16CF4
	0x03D04D8C ADRP X0, 0x45F000
	0x03D04D90 LDR X0, [X0 + 0x210]
	0x03D04D94 BL 0x1C16CF4
	0x03D04D98 ADRP X0, 0x45F000
	0x03D04D9C LDR X0, [X0 + 0x218]
	0x03D04DA0 BL 0x1C16CF4
	0x03D04DA4 ADRP X0, 0x45F000
	0x03D04DA8 LDR X0, [X0 + 0x1E0]
	0x03D04DAC BL 0x1C16CF4
	0x03D04DB0 MOVZ W8, 0x1
	0x03D04DB4 STRB W8, [X22 + 0x859]
	0x03D04DB8 LDR X0, [X21]
	0x03D04DBC ADRP X22, 0x45F000
	0x03D04DC0 ADRP X21, 0x45F000
	0x03D04DC4 LDR W8, [X0 + 0xE0]
	0x03D04DC8 LDR X22, [X22 + 0x208]
	0x03D04DCC LDR X21, [X21 + 0x1E0]
	0x03D04DD0 CBNZ W8, 0x3D04DD8
	0x03D04DD4 BL 0x1C16DFC
	0x03D04DD8 LDR X3, [X22]
	0x03D04DDC MOVZ W2, 0x3
	0x03D04DE0 MOV X0, X19
	0x03D04DE4 MOV X1, X20
	0x03D04DE8 BL 0x276CF28
	0x03D04DEC LDR X0, [X21]
	0x03D04DF0 LDR W8, [X0 + 0xE0]
	0x03D04DF4 CBNZ W8, 0x3D04E00
	0x03D04DF8 BL 0x1C16DFC
	0x03D04DFC LDR X0, [X21]
	0x03D04E00 LDR X8, [X0 + 0xB8]
	0x03D04E04 MOV X0, X19
	0x03D04E08 MOV X2, X31
	0x03D04E0C LDR X1, [X8]
	0x03D04E10 BL 0x3DF1C70
	0x03D04E14 LDR X0, [X19 + 0x408]
	0x03D04E18 CBZ X0, 0x3D04E68
	0x03D04E1C LDR X8, [X21]
	0x03D04E20 ADRP X20, 0x45F000
	0x03D04E24 MOV X2, X31
	0x03D04E28 LDR X8, [X8 + 0xB8]
	0x03D04E2C LDR X1, [X8 + 0x8]
	0x03D04E30 LDR X20, [X20 + 0x218]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x6E4000
	010 Move W8, [X21+2071]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x3F0000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x41A000
	021 Move X0, [X0+3872]
	022 Call 0x1C17CF4
	023 Move X0, 0x41A000
	024 Move X0, [X0+3880]
	025 Call 0x1C17CF4
	026 Move X0, 0x3F0000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move X0, 0x3F4000
	030 Move X0, [X0+2920]
	031 Call 0x1C17CF4
	032 Move X0, 0x41A000
	033 Move X0, [X0+2240]
	034 Call 0x1C17CF4
	035 Move X0, 0x460000
	036 Move X0, [X0+264]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+2071], W8
	040 Move X0, [X19+1136]
	041 Compare X0, 0
	042 JumpIfEqual {236}
	043 Move X8, 0x3F4000
	044 Move X8, [X8+2920]
	045 Move W1, W20
	046 Move X2, [X8]
	047 Call List`1<Int32>.Contains, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {226}
	052 Move X0, [X19+1096]
	053 Compare X0, 0
	054 JumpIfEqual {236}
	055 Move X8, [X0]
	056 Move W1, W20
	057 Move X9, [X8+504]
	058 Move X2, [X8+512]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X19+1096]
	061 Compare X8, 0
	062 JumpIfEqual {236}
	063 Move X9, [X8]
	064 Move W22, W0
	065 Move X0, X8
	066 Move W1, W20
	067 Move X10, [X9+520]
	068 Move X2, [X9+528]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X21, X0
	071 Move X0, X19
	072 Call BaseVerticalCollectionView.get_activeItems, X0
	073 Compare X0, 0
	074 JumpIfEqual {236}
	075 Move X10, 0x41A000
	076 Move X8, [X0]
	077 Move X10, [X10+3872]
	078 Move X23, X0
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Move X1, [X10]
	081 Compare X9, 0
	082 JumpIfEqual {89}
	083 Move X10, [X8+176]
	084 Add X10, X10, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X9, X9, 1
	088 Add X10, X10, 16
	089 Move X0, X23
	090 Move W2, W31
	091 Call 0x1C5D788
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Add X8, X8, X9
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X1, [X0+8]
	097 Move X0, X23
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X23, X0
	100 Compare X0, 0
	101 JumpIfEqual {237}
	102 Move X24, 0x3F0000
	103 Move X25, 0x41A000
	104 Move X24, [X24+3608]
	105 Move X25, [X25+3880]
	106 Move X8, [X23]
	107 Move X1, [X24]
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Compare X9, 0
	110 JumpIfEqual {117}
	111 Move X10, [X8+176]
	112 Add X10, X10, 8
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Subtract X9, X9, 1
	116 Add X10, X10, 16
	117 Move X0, X23
	118 Move W2, W31
	119 Call 0x1C5D788
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Add X8, X8, X9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X1, [X0+8]
	125 Move X0, X23
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {163}
	131 Move X8, [X23]
	132 Move X1, [X25]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Compare X9, 0
	135 JumpIfEqual {142}
	136 Move X10, [X8+176]
	137 Add X10, X10, 8
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Subtract X9, X9, 1
	141 Add X10, X10, 16
	142 Move X0, X23
	143 Move W2, W31
	144 Call 0x1C5D788
	145 NotImplemented "Instruction LDRSW not yet implemented."
	146 Add X8, X8, X9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X23
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Move X8, X0
	153 Compare X0, 0
	154 JumpIfEqual {235}
	155 Move W9, [X8+36]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X9, [X8]
	158 Move X10, [X9+456]
	159 Move X2, [X9+464]
	160 Move X0, X8
	161 Move W1, W31
	162 NotImplemented "Instruction BLR not yet implemented."
	163 Move X24, X31
	164 Move W25, 6
	165 Compare X23, 0
	166 JumpIfEqual {190}
	167 Move X10, 0x3F0000
	168 Move X8, [X23]
	169 Move X10, [X10+3584]
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Move X1, [X10]
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move X0, X23
	181 Move W2, W31
	182 Call 0x1C5D788
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Add X8, X8, X9
	185 Add X0, X8, 312
	186 Move X8, [X0]
	187 Move X1, [X0+8]
	188 Move X0, X23
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Compare X24, 0
	191 JumpIfNotEqual {238}
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Compare W25, 0
	194 JumpIfNotEqual {226}
	195 Move X0, [X19+1128]
	196 Compare X0, 0
	197 JumpIfEqual {236}
	198 Move X23, 0x41A000
	199 Move X23, [X23+2240]
	200 Move W1, W22
	201 Move X2, [X23]
	202 Call List`1<Int32>.Remove, X0, X1
	203 Move X0, [X19+1136]
	204 Compare X0, 0
	205 JumpIfEqual {236}
	206 Move X2, [X23]
	207 Move W1, W20
	208 Call List`1<Int32>.Remove, X0, X1
	209 Move X0, [X19+1144]
	210 Compare X0, 0
	211 JumpIfEqual {236}
	212 Move X8, 0x460000
	213 Move X8, [X8+264]
	214 Move X1, X21
	215 Move X20, [X31+48]
	216 Move X19, [X31+56]
	217 Move X22, [X31+32]
	218 Move X21, [X31+40]
	219 Move X2, [X8]
	220 Move X24, [X31+16]
	221 Move X23, [X31+24]
	222 Move X30, [X31+64]
	223 Move X25, [X31+72]
	224 Call List`1<Object>.Remove, X0, X1
	225 Return 
	226 Move X20, [X31+48]
	227 Move X19, [X31+56]
	228 Move X22, [X31+32]
	229 Move X21, [X31+40]
	230 Move X24, [X31+16]
	231 Move X23, [X31+24]
	232 Move X30, [X31+64]
	233 Move X25, [X31+72]
	234 Return 
	235 Call 0x1C17F20
	236 Call 0x1C17F20
	237 Call 0x1C17F20
	238 Move X0, X24
	239 Call 0x1C17F18
	240 Move X25, X0
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X0, X25
	243 Call 0x3EB2AD0
	244 Move X24, [X0]
	245 Call 0x3EB2AE0
	246 Move W25, W31
	247 Compare X23, 0
	248 JumpIfNotEqual {167}
	249 Move X24, X31
	250 Move X25, X0
	251 Compare X23, 0
	252 JumpIfEqual {276}
	253 Move X10, 0x3F0000
	254 Move X8, [X23]
	255 Move X10, [X10+3584]
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Move X1, [X10]
	258 Compare X9, 0
	259 JumpIfEqual {266}
	260 Move X10, [X8+176]
	261 Add X10, X10, 8
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Subtract X9, X9, 1
	265 Add X10, X10, 16
	266 Move X0, X23
	267 Move W2, W31
	268 Call 0x1C5D788
	269 NotImplemented "Instruction LDRSW not yet implemented."
	270 Add X8, X8, X9
	271 Add X0, X8, 312
	272 Move X8, [X0]
	273 Move X1, [X0+8]
	274 Move X0, X23
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Compare X24, 0
	277 JumpIfNotEqual {280}
	278 Move X0, X25
	279 Call 0x1D2D690
	280 Move X0, X24
	281 Call 0x1C17F18
	282 Call 0x1991590

Method: System.Void SetSelection(System.Int32 index)

Disassembly:
	0x03CFED8C B 0x3CFED9C
	0x03CFED90 FMOV S0, 0.5
	0x03CFED94 FADD S0, S9, S0
	0x03CFED98 FRINTM S0, S0
	0x03CFED9C FDIV S0, S0, S8
	0x03CFEDA0 LDP X30, X19, [X31 + 0x20]
	0x03CFEDA4 LDP D9, D8, [X31 + 0x10]
	0x03CFEDA8 ADD X31, X31, 0x30
	0x03CFEDAC RET
	0x03CFEDB0 STR X30, [X31 - 0x30]!
	0x03CFEDB4 STP X22, X21, [X31 + 0x10]
	0x03CFEDB8 STP X20, X19, [X31 + 0x20]
	0x03CFEDBC ADRP X22, 0x6E9000
	0x03CFEDC0 ADRP X21, 0x41F000
	0x03CFEDC4 LDRB W8, [X22 + 0x7FA]
	0x03CFEDC8 LDR X21, [X21 + 0xF18]
	0x03CFEDCC MOV W19, W1
	0x03CFEDD0 MOV X20, X0
	0x03CFEDD4 TBNZ X8, 0x0, 0x3CFEDEC
	0x03CFEDD8 ADRP X0, 0x41F000
	0x03CFEDDC LDR X0, [X0 + 0xF18]
	0x03CFEDE0 BL 0x1C16CF4
	0x03CFEDE4 MOVZ W8, 0x1
	0x03CFEDE8 STRB W8, [X22 + 0x7FA]
	0x03CFEDEC LDR X0, [X21]
	0x03CFEDF0 LDR X20, [X20 + 0x440]
	0x03CFEDF4 LDR W8, [X0 + 0xE0]
	0x03CFEDF8 CBNZ W8, 0x3CFEE00
	0x03CFEDFC BL 0x1C16DFC
	0x03CFEE00 CBZ X20, 0x3CFEE2C
	0x03CFEE04 LDR X8, [X21]
	0x03CFEE08 AND W2, W19, 0x1
	0x03CFEE0C MOV X0, X20
	0x03CFEE10 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6EA000
	006 Move W8, [X21+2072]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3F7000
	014 Move X0, [X0+3672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2072], W8
	018 Move TEMP, X19
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {42}
	022 Move X8, 0x3F7000
	023 Move X8, [X8+3672]
	024 Move W1, 1
	025 Move X0, [X8]
	026 Call 0x1C17D6C
	027 Compare X0, 0
	028 JumpIfEqual {49}
	029 Move W8, [X0+24]
	030 Move X1, X0
	031 Compare W8, 0
	032 JumpIfEqual {50}
	033 Move [X1+32], W19
	034 Move X0, X20
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move W2, 1
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call BaseVerticalCollectionView.SetSelectionInternal, X0, X1, X2
	041 Return 
	042 Move X0, X20
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call BaseVerticalCollectionView.ClearSelection, X0
	048 Return 
	049 Call 0x1C17F20
	050 Call 0x1C17F28

Method: System.Void SetSelection(System.Collections.Generic.IEnumerable`1<System.Int32> indices)

Disassembly:
	0x03D04E34 BL 0x3DF1C70
	0x03D04E38 LDR X1, [X20]

ISIL:
	001 Move W2, 1
	002 Call BaseVerticalCollectionView.SetSelectionInternal, X0, X1, X2
	003 Return 

Method: System.Void SetSelectionWithoutNotify(System.Collections.Generic.IEnumerable`1<System.Int32> indices)

Disassembly:
	0x03D04E3C MOV X0, X19
	0x03D04E40 BL 0x28ACBF4

ISIL:
	001 Move W2, W31
	002 Call BaseVerticalCollectionView.SetSelectionInternal, X0, X1, X2
	003 Return 

Method: System.Void SetSelectionInternal(System.Collections.Generic.IEnumerable`1<System.Int32> indices, System.Boolean sendNotification)

Disassembly:
	0x03CFEF7C LDR X10, [X8 + 0xB0]
	0x03CFEF80 ADD X10, X10, 0x8
	0x03CFEF84 LDUR X11, [X10 - 0x8]
	0x03CFEF88 CMP X11, X1
	0x03CFEF8C B.EQ 0x3CFEFAC
	0x03CFEF90 SUBS X9, X9, 0x1
	0x03CFEF94 ADD X10, X10, 0x10
	0x03CFEF98 B.NE 0x3CFEF84
	0x03CFEF9C MOV X0, X21
	0x03CFEFA0 MOV W2, W31
	0x03CFEFA4 BL 0x1C5C788
	0x03CFEFA8 B 0x3CFEFB8
	0x03CFEFAC LDRSW X9, [X10]
	0x03CFEFB0 ADD X8, X8, X9, 0x4, LSL
	0x03CFEFB4 ADD X0, X8, 0x138
	0x03CFEFB8 LDP X8, X1, [X0]
	0x03CFEFBC MOV X0, X21
	0x03CFEFC0 BLR X8
	0x03CFEFC4 AND W8, W0, 0x1
	0x03CFEFC8 AND W9, W20, 0x1
	0x03CFEFCC CMP W8, W9
	0x03CFEFD0 B.EQ 0x3CFF014
	0x03CFEFD4 LDR X8, [X21]
	0x03CFEFD8 LDR X1, [X22]
	0x03CFEFDC LDRH W9, [X8 + 0x12E]
	0x03CFEFE0 CBZ X9, 0x3CFF004
	0x03CFEFE4 LDR X10, [X8 + 0xB0]
	0x03CFEFE8 ADD X10, X10, 0x8
	0x03CFEFEC LDUR X11, [X10 - 0x8]
	0x03CFEFF0 CMP X11, X1
	0x03CFEFF4 B.EQ 0x3CFF024
	0x03CFEFF8 SUBS X9, X9, 0x1
	0x03CFEFFC ADD X10, X10, 0x10
	0x03CFF000 B.NE 0x3CFEFEC
	0x03CFF004 MOVZ W2, 0x1
	0x03CFF008 MOV X0, X21
	0x03CFF00C BL 0x1C5C788
	0x03CFF010 B 0x3CFF034
	0x03CFF014 LDP X20, X19, [X31 + 0x20]
	0x03CFF018 LDP X22, X21, [X31 + 0x10]
	0x03CFF01C LDR X30, [X31], #0x30
	0x03CFF020 RET
	0x03CFF024 LDR W9, [X10]
	0x03CFF028 ADD W9, W9, 0x1
	0x03CFF02C ADD X8, X8, W9, 0x4, SXTW
	0x03CFF030 ADD X0, X8, 0x138
	0x03CFF034 LDP X8, X2, [X0]
	0x03CFF038 AND W1, W20, 0x1
	0x03CFF03C MOV X0, X21
	0x03CFF040 BLR X8
	0x03CFF044 MOV X0, X19
	0x03CFF048 LDP X20, X19, [X31 + 0x20]
	0x03CFF04C LDP X22, X21, [X31 + 0x10]
	0x03CFF050 LDR X30, [X31], #0x30
	0x03CFF054 B 0x3CFF05C
	0x03CFF058 BL 0x1C16F20
	0x03CFF05C STP X30, X21, [X31 - 0x20]!
	0x03CFF060 STP X20, X19, [X31 + 0x10]
	0x03CFF064 ADRP X21, 0x6E8000
	0x03CFF068 ADRP X19, 0x41E000
	0x03CFF06C LDRB W8, [X21 + 0x805]
	0x03CFF070 LDR X19, [X19 + 0xF18]
	0x03CFF074 MOV X20, X0
	0x03CFF078 TBNZ X8, 0x0, 0x3CFF090
	0x03CFF07C ADRP X0, 0x41E000
	0x03CFF080 LDR X0, [X0 + 0xF18]
	0x03CFF084 BL 0x1C16CF4
	0x03CFF088 MOVZ W8, 0x1
	0x03CFF08C STRB W8, [X21 + 0x805]
	0x03CFF090 LDR X0, [X19]
	0x03CFF094 LDR W8, [X0 + 0xE0]
	0x03CFF098 CBNZ W8, 0x3CFF0A4
	0x03CFF09C BL 0x1C16DFC
	0x03CFF0A0 LDR X0, [X19]
	0x03CFF0A4 LDR X8, [X0 + 0xB8]
	0x03CFF0A8 MOV X1, X31
	0x03CFF0AC MOV X2, X31
	0x03CFF0B0 LDR X19, [X8 + 0x8]
	0x03CFF0B4 MOV X0, X19
	0x03CFF0B8 BL 0x33C5D2C
	0x03CFF0BC TBZ X0, 0x0, 0x3CFF0CC
	0x03CFF0C0 MOV X0, X19
	0x03CFF0C4 MOV X1, X31
	0x03CFF0C8 BL 0x3BFE970
	0x03CFF0CC LDR X8, [X20 + 0x448]
	0x03CFF0D0 CBZ X8, 0x3CFF124
	0x03CFF0D4 MOV X0, X20
	0x03CFF0D8 BL 0x3CFFCAC
	0x03CFF0DC LDR X0, [X20 + 0x450]
	0x03CFF0E0 CBNZ X0, 0x3CFF0FC
	0x03CFF0E4 LDR X8, [X20]
	0x03CFF0E8 LDR X1, [X8 + 0x7C0]
	0x03CFF0EC LDR X9, [X8 + 0x7B8]
	0x03CFF0F0 MOV X0, X20
	0x03CFF0F4 BLR X9
	0x03CFF0F8 LDR X0, [X20 + 0x450]
	0x03CFF0FC CBZ X0, 0x3CFF160
	0x03CFF100 LDR X8, [X0]
	0x03CFF104 LDP X9, X2, [X8 + 0x1A8]
	0x03CFF108 MOVZ W1, 0x1
	0x03CFF10C BLR X9
	0x03CFF110 LDR X8, [X20]
	0x03CFF114 LDR X1, [X8 + 0x820]
	0x03CFF118 LDR X9, [X8 + 0x818]
	0x03CFF11C MOV X0, X20
	0x03CFF120 BLR X9
	0x03CFF124 MOV X20, X31
	0x03CFF128 MOV X0, X19
	0x03CFF12C MOV X1, X31
	0x03CFF130 MOV X2, X31
	0x03CFF134 BL 0x33C5D2C
	0x03CFF138 TBZ X0, 0x0, 0x3CFF148
	0x03CFF13C MOV X0, X19
	0x03CFF140 MOV X1, X31
	0x03CFF144 BL 0x3BFEA0C
	0x03CFF148 CBNZ X20, 0x3CFF158
	0x03CFF14C LDP X20, X19, [X31 + 0x10]
	0x03CFF150 LDP X30, X21, [X31], #0x20
	0x03CFF154 RET
	0x03CFF158 MOV X0, X20
	0x03CFF15C BL 0x1C16F18
	0x03CFF160 BL 0x1C16F20
	0x03CFF164 B 0x3CFF168
	0x03CFF168 MOV X21, X0
	0x03CFF16C CMP W1, 0x1
	0x03CFF170 B.NE 0x3CFF188
	0x03CFF174 MOV X0, X21
	0x03CFF178 BL 0x3EB1AD0
	0x03CFF17C LDR X20, [X0]
	0x03CFF180 BL 0x3EB1AE0
	0x03CFF184 B 0x3CFF128
	0x03CFF188 MOV X20, X31
	0x03CFF18C B 0x3CFF194
	0x03CFF190 MOV X21, X0
	0x03CFF194 MOV X0, X19
	0x03CFF198 MOV X1, X31
	0x03CFF19C MOV X2, X31
	0x03CFF1A0 BL 0x33C5D2C
	0x03CFF1A4 TBZ X0, 0x0, 0x3CFF1B4
	0x03CFF1A8 MOV X0, X19
	0x03CFF1AC MOV X1, X31
	0x03CFF1B0 BL 0x3BFEA0C
	0x03CFF1B4 CBNZ X20, 0x3CFF1C0
	0x03CFF1B8 MOV X0, X21
	0x03CFF1BC BL 0x1D2C690
	0x03CFF1C0 MOV X0, X20
	0x03CFF1C4 BL 0x1C16F18
	0x03CFF1C8 BL 0x1990590
	0x03CFF1CC STP X30, X21, [X31 - 0x20]!
	0x03CFF1D0 STP X20, X19, [X31 + 0x10]
	0x03CFF1D4 LDRB W9, [X0 + 0x42C]
	0x03CFF1D8 AND W8, W1, 0x1
	0x03CFF1DC CMP W9, W8
	0x03CFF1E0 B.NE 0x3CFF1F0
	0x03CFF1E4 LDP X20, X19, [X31 + 0x10]
	0x03CFF1E8 LDP X30, X21, [X31], #0x20
	0x03CFF1EC RET
	0x03CFF1F0 MOV X20, X0
	0x03CFF1F4 LDR X0, [X0 + 0x440]
	0x03CFF1F8 STRB W8, [X20 + 0x42C]
	0x03CFF1FC CBZ X0, 0x3CFF238
	0x03CFF200 ANDS W31, W1, 0x1
	0x03CFF204 MOVZ W21, 0x2
	0x03CFF208 MOV W19, W1
	0x03CFF20C CSEL W1, W31, W21, NE
	0x03CFF210 MOV X2, X31
	0x03CFF214 BL 0x3D7D940
	0x03CFF218 LDR X0, [X20 + 0x440]
	0x03CFF21C CBZ X0, 0x3CFF238
	0x03CFF220 ANDS W31, W19, 0x1
	0x03CFF224 LDP X20, X19, [X31 + 0x10]
	0x03CFF228 CSEL W1, W21, W31, NE
	0x03CFF22C MOV X2, X31
	0x03CFF230 LDP X30, X21, [X31], #0x20
	0x03CFF234 B 0x3D801F4
	0x03CFF238 BL 0x1C16F20
	0x03CFF23C LDR W0, [X0 + 0x430]
	0x03CFF240 RET
	0x03CFF244 LDR W8, [X0 + 0x430]
	0x03CFF248 CMP W8, W1
	0x03CFF24C B.NE 0x3CFF254
	0x03CFF250 RET
	0x03CFF254 STR W1, [X0 + 0x430]
	0x03CFF258 B 0x3CFD108
	0x03CFF25C LDR W0, [X0 + 0x43C]
	0x03CFF260 RET
	0x03CFF264 STP X30, X19, [X31 - 0x10]!
	0x03CFF268 LDR W8, [X0 + 0x43C]
	0x03CFF26C STR W1, [X0 + 0x43C]
	0x03CFF270 CMP W8, W1
	0x03CFF274 B.NE 0x3CFF280
	0x03CFF278 LDP X30, X19, [X31], #0x10
	0x03CFF27C RET
	0x03CFF280 LDR X8, [X0]
	0x03CFF284 MOV X19, X0
	0x03CFF288 LDR X9, [X8 + 0x7B8]
	0x03CFF28C LDR X1, [X8 + 0x7C0]
	0x03CFF290 BLR X9
	0x03CFF294 MOV X0, X19
	0x03CFF298 LDP X30, X19, [X31], #0x10
	0x03CFF29C B 0x3CFF05C
	0x03CFF2A0 LDR V0, [X0 + 0x434]
	0x03CFF2A4 RET
	0x03CFF2A8 STP D9, D8, [X31 - 0x30]!
	0x03CFF2AC STR X30, [X31 + 0x10]
	0x03CFF2B0 STP X20, X19, [X31 + 0x20]
	0x03CFF2B4 ADRP X20, 0x6E8000
	0x03CFF2B8 LDRB W8, [X20 + 0x7FD]
	0x03CFF2BC MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x6EA000
	008 Move W8, [X22+2073]
	009 Move W20, W2
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x3F6000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x41E000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move X0, 0x41E000
	023 Move X0, [X0+1984]
	024 Call 0x1C17CF4
	025 Move X0, 0x3F6000
	026 Move X0, [X0+3608]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2073], W8
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X9, [X8+2056]
	033 Move X1, [X8+2064]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Compare X21, 0
	036 JumpIfEqual {177}
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {177}
	041 Move X0, X19
	042 Move X1, X21
	043 Call BaseVerticalCollectionView.MatchesExistingSelection, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {177}
	048 Move X0, X19
	049 Call BaseVerticalCollectionView.ClearSelectionWithoutValidation, X0
	050 Move X10, 0x41D000
	051 Move X8, [X21]
	052 Move X10, [X10+1976]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X21
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X21
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X21, X0
	074 Compare X0, 0
	075 JumpIfEqual {184}
	076 Move X22, 0x3F5000
	077 Move X23, 0x41D000
	078 Move X22, [X22+3608]
	079 Move X23, [X23+1984]
	080 Move X8, [X21]
	081 Move X1, [X22]
	082 NotImplemented "Instruction LDRH not yet implemented."
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X21
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X1, [X0+8]
	099 Move X0, X21
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {129}
	105 Move X8, [X21]
	106 Move X1, [X23]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X21
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X0, X21
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move W1, W0
	127 Move X0, X19
	128 Call BaseVerticalCollectionView.AddToSelectionWithoutValidation, X0, X1
	129 Move X22, X31
	130 Move W23, 9
	131 Compare X21, 0
	132 JumpIfEqual {156}
	133 Move X10, 0x3F5000
	134 Move X8, [X21]
	135 Move X10, [X10+3584]
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Move X1, [X10]
	138 Compare X9, 0
	139 JumpIfEqual {146}
	140 Move X10, [X8+176]
	141 Add X10, X10, 8
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract X9, X9, 1
	145 Add X10, X10, 16
	146 Move X0, X21
	147 Move W2, W31
	148 Call 0x1C5D788
	149 NotImplemented "Instruction LDRSW not yet implemented."
	150 Add X8, X8, X9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X1, [X0+8]
	154 Move X0, X21
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Compare X22, 0
	157 JumpIfNotEqual {185}
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Compare W23, 0
	160 JumpIfNotEqual {177}
	161 Move TEMP, X20
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {167}
	165 Move X0, X19
	166 Call BaseVerticalCollectionView.NotifyOfSelectionChange, X0
	167 Move X0, X19
	168 Move X20, [X31+32]
	169 Move X19, [X31+40]
	170 Move X22, [X31+16]
	171 Move X21, [X31+24]
	172 Move X1, X31
	173 Move X30, [X31+48]
	174 Move X23, [X31+56]
	175 Call VisualElement.SaveViewData, X0
	176 Return 
	177 Move X20, [X31+32]
	178 Move X19, [X31+40]
	179 Move X22, [X31+16]
	180 Move X21, [X31+24]
	181 Move X30, [X31+48]
	182 Move X23, [X31+56]
	183 Return 
	184 Call 0x1C17F20
	185 Move X0, X22
	186 Call 0x1C17F18
	187 Move X23, X0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, X23
	190 Call 0x3EB2AD0
	191 Move X22, [X0]
	192 Call 0x3EB2AE0
	193 Move W23, W31
	194 Compare X21, 0
	195 JumpIfNotEqual {133}
	196 Move X22, X31
	197 Move X23, X0
	198 Compare X21, 0
	199 JumpIfEqual {223}
	200 Move X10, 0x3F5000
	201 Move X8, [X21]
	202 Move X10, [X10+3584]
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Move X1, [X10]
	205 Compare X9, 0
	206 JumpIfEqual {213}
	207 Move X10, [X8+176]
	208 Add X10, X10, 8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract X9, X9, 1
	212 Add X10, X10, 16
	213 Move X0, X21
	214 Move W2, W31
	215 Call 0x1C5D788
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Add X8, X8, X9
	218 Add X0, X8, 312
	219 Move X8, [X0]
	220 Move X1, [X0+8]
	221 Move X0, X21
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Compare X22, 0
	224 JumpIfNotEqual {227}
	225 Move X0, X23
	226 Call 0x1D2D690
	227 Move X0, X22
	228 Call 0x1C17F18
	229 Call 0x1991590

Method: System.Boolean MatchesExistingSelection(System.Collections.Generic.IEnumerable`1<System.Int32> indices)

Disassembly:
	0x03D04E44 CBZ X0, 0x3D04E68
	0x03D04E48 LDR X8, [X21]
	0x03D04E4C LDP X20, X19, [X31 + 0x20]
	0x03D04E50 LDP X22, X21, [X31 + 0x10]
	0x03D04E54 MOV X2, X31
	0x03D04E58 LDR X8, [X8 + 0xB8]
	0x03D04E5C LDR X1, [X8 + 0x10]
	0x03D04E60 LDR X30, [X31], #0x30
	0x03D04E64 B 0x3DF1C70
	0x03D04E68 BL 0x1C16F20
	0x03D04E6C SUB X31, X31, 0x70
	0x03D04E70 STP X30, X23, [X31 + 0x40]
	0x03D04E74 STP X22, X21, [X31 + 0x50]
	0x03D04E78 STP X20, X19, [X31 + 0x60]
	0x03D04E7C ADRP X23, 0x6E3000
	0x03D04E80 ADRP X22, 0x45F000
	0x03D04E84 ADRP X21, 0x45F000
	0x03D04E88 LDRB W8, [X23 + 0x825]
	0x03D04E8C LDR X22, [X22 + 0x220]
	0x03D04E90 LDR X21, [X21 + 0x228]
	0x03D04E94 MOV X20, X1
	0x03D04E98 MOV X19, X0
	0x03D04E9C TBNZ X8, 0x0, 0x3D04EC0
	0x03D04EA0 ADRP X0, 0x45F000
	0x03D04EA4 LDR X0, [X0 + 0x220]
	0x03D04EA8 BL 0x1C16CF4
	0x03D04EAC ADRP X0, 0x45F000
	0x03D04EB0 LDR X0, [X0 + 0x228]
	0x03D04EB4 BL 0x1C16CF4
	0x03D04EB8 MOVZ W8, 0x1
	0x03D04EBC STRB W8, [X23 + 0x825]
	0x03D04EC0 LDR X8, [X20 + 0x10]
	0x03D04EC4 LDR V0, [X20]
	0x03D04EC8 LDR X2, [X22]
	0x03D04ECC ADD X1, X31, 0x20
	0x03D04ED0 MOV X0, X19
	0x03D04ED4 STR X8, [X31 + 0x10]
	0x03D04ED8 STR V0, [X31]
	0x03D04EDC STR V0, [X31 + 0x2]
	0x03D04EE0 STR X8, [X31 + 0x30]
	0x03D04EE4 BL 0x2776F78
	0x03D04EE8 LDR X1, [X21]
	0x03D04EEC LDR X20, [X19 + 0x450]
	0x03D04EF0 ADD X8, X31, 0x20
	0x03D04EF4 MOV X0, X19
	0x03D04EF8 BL 0x27754B4
	0x03D04EFC CBZ X20, 0x3D04F64
	0x03D04F00 LDR X8, [X20]
	0x03D04F04 LDP S0, S1, [X31 + 0x20]
	0x03D04F08 LDR V2, [X31 + 0x28]
	0x03D04F0C MOV X0, X20
	0x03D04F10 LDR X9, [X8 + 0x888]
	0x03D04F14 LDR X1, [X8 + 0x890]
	0x03D04F18 BLR X9
	0x03D04F1C LDR X1, [X21]
	0x03D04F20 LDR X20, [X19 + 0x458]
	0x03D04F24 ADD X8, X31, 0x20
	0x03D04F28 MOV X0, X19
	0x03D04F2C BL 0x27754B4
	0x03D04F30 CBZ X20, 0x3D04F64
	0x03D04F34 LDR X8, [X20]
	0x03D04F38 LDP S0, S1, [X31 + 0x2C]
	0x03D04F3C LDR V2, [X31 + 0x34]
	0x03D04F40 MOV X0, X20
	0x03D04F44 LDR X9, [X8 + 0x888]
	0x03D04F48 LDR X1, [X8 + 0x890]
	0x03D04F4C BLR X9
	0x03D04F50 LDP X20, X19, [X31 + 0x60]
	0x03D04F54 LDP X22, X21, [X31 + 0x50]
	0x03D04F58 LDP X30, X23, [X31 + 0x40]
	0x03D04F5C ADD X31, X31, 0x70
	0x03D04F60 RET
	0x03D04F64 BL 0x1C16F20
	0x03D04F68 STR X30, [X31 - 0x20]!
	0x03D04F6C STP X20, X19, [X31 + 0x10]
	0x03D04F70 ADRP X20, 0x6E3000
	0x03D04F74 LDRB W8, [X20 + 0x826]
	0x03D04F78 MOV X19, X0
	0x03D04F7C TBNZ X8, 0x0, 0x3D04FA0
	0x03D04F80 ADRP X0, 0x45F000
	0x03D04F84 LDR X0, [X0 + 0x230]
	0x03D04F88 BL 0x1C16CF4
	0x03D04F8C ADRP X0, 0x45F000
	0x03D04F90 LDR X0, [X0 + 0x238]
	0x03D04F94 BL 0x1C16CF4
	0x03D04F98 MOVZ W8, 0x1
	0x03D04F9C STRB W8, [X20 + 0x826]
	0x03D04FA0 LDR X0, [X19 + 0x450]
	0x03D04FA4 CBZ X0, 0x3D04FD8
	0x03D04FA8 ADRP X20, 0x45F000
	0x03D04FAC LDR X20, [X20 + 0x238]
	0x03D04FB0 LDRB W1, [X19 + 0x418]
	0x03D04FB4 LDR X2, [X20]
	0x03D04FB8 BL 0x28AD320
	0x03D04FBC LDR X0, [X19 + 0x458]
	0x03D04FC0 CBZ X0, 0x3D04FD8
	0x03D04FC4 LDRB W1, [X19 + 0x418]
	0x03D04FC8 LDR X2, [X20]
	0x03D04FCC LDP X20, X19, [X31 + 0x10]
	0x03D04FD0 LDR X30, [X31], #0x20
	0x03D04FD4 B 0x28AD320
	0x03D04FD8 BL 0x1C16F20
	0x03D04FDC STP X30, X25, [X31 - 0x40]!
	0x03D04FE0 STP X24, X23, [X31 + 0x10]
	0x03D04FE4 STP X22, X21, [X31 + 0x20]
	0x03D04FE8 STP X20, X19, [X31 + 0x30]
	0x03D04FEC ADRP X25, 0x6E3000
	0x03D04FF0 ADRP X24, 0x45F000
	0x03D04FF4 ADRP X19, 0x45F000
	0x03D04FF8 ADRP X23, 0x418000
	0x03D04FFC ADRP X22, 0x418000
	0x03D05000 ADRP X21, 0x45E000
	0x03D05004 ADRP X20, 0x45E000
	0x03D05008 LDR X24, [X24 + 0x240]
	0x03D0500C LDRB W8, [X25 + 0x827]
	0x03D05010 LDR X19, [X19 + 0x1C8]
	0x03D05014 LDR X23, [X23 + 0xEB8]
	0x03D05018 LDR X22, [X22 + 0xEC0]
	0x03D0501C LDR X21, [X21 + 0x248]
	0x03D05020 LDR X20, [X20 + 0x250]
	0x03D05024 TBNZ X8, 0x0, 0x3D05078
	0x03D05028 ADRP X0, 0x45E000
	0x03D0502C LDR X0, [X0 + 0x1C8]
	0x03D05030 BL 0x1C16CF4
	0x03D05034 ADRP X0, 0x45E000
	0x03D05038 LDR X0, [X0 + 0x240]
	0x03D0503C BL 0x1C16CF4
	0x03D05040 ADRP X0, 0x45E000
	0x03D05044 LDR X0, [X0 + 0x248]
	0x03D05048 BL 0x1C16CF4
	0x03D0504C ADRP X0, 0x45E000
	0x03D05050 LDR X0, [X0 + 0x250]
	0x03D05054 BL 0x1C16CF4
	0x03D05058 ADRP X0, 0x417000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X19, 0x6E4000
	012 Move X23, 0x41A000
	013 Move W8, [X19+2074]
	014 Move X23, [X23+2272]
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {41}
	021 Move X0, 0x41A000
	022 Move X0, [X0+2264]
	023 Call 0x1C17CF4
	024 Move X0, 0x41B000
	025 Move X0, [X0+2824]
	026 Call 0x1C17CF4
	027 Move X0, 0x41A000
	028 Move X0, [X0+2272]
	029 Call 0x1C17CF4
	030 Move X0, 0x44B000
	031 Move X0, [X0+1672]
	032 Call 0x1C17CF4
	033 Move X0, 0x3F1000
	034 Move X0, [X0+3624]
	035 Call 0x1C17CF4
	036 Move X0, 0x41A000
	037 Move X0, [X0+3896]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X19+2074], W8
	041 Move X0, [X23]
	042 Move X19, 0x41A000
	043 Move W8, [X0+224]
	044 Move X19, [X19+2264]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, [X19]
	049 Move X24, 0x41B000
	050 Move X24, [X24+2824]
	051 Call CollectionPool`2<Object, Int32>.Get
	052 Move X19, X0
	053 Compare X0, 0
	054 JumpIfEqual {117}
	055 Move X8, 0x44B000
	056 Move X8, [X8+1672]
	057 Move X2, [X8]
	058 Move X0, X19
	059 Move X1, X21
	060 Call List`1<Int32>.AddRange, X0, X1
	061 Move X9, [X20+1136]
	062 Compare X9, 0
	063 JumpIfEqual {120}
	064 Move W8, [X19+24]
	065 Move W9, [X9+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X27, 0x41A000
	071 Move X27, [X27+3896]
	072 Move W26, 1
	073 Move X2, [X27]
	074 Subtract W22, W26, 1
	075 Move X0, X19
	076 Move W1, W22
	077 Call List`1<Int32>.get_Item, X0, X1
	078 Move W21, W0
	079 Move X0, [X20+1136]
	080 Compare X0, 0
	081 JumpIfEqual {116}
	082 Move X2, [X27]
	083 Move W1, W22
	084 Call List`1<Int32>.get_Item, X0, X1
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W8, [X19+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 NotImplemented "Instruction CSET not yet implemented."
	089 Add W26, W26, 1
	090 Move X20, X31
	091 Xor W21, W25, 1
	092 Move X20, X31
	093 Move W21, W31
	094 Move X0, [X23]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X1, [X24]
	100 Move X0, X19
	101 Call CollectionPool`2<Object, Int32>.Release, X0
	102 Compare X20, 0
	103 JumpIfNotEqual {118}
	104 And W0, W21, 1
	105 Move X20, [X31+64]
	106 Move X19, [X31+72]
	107 Move X22, [X31+48]
	108 Move X21, [X31+56]
	109 Move X24, [X31+32]
	110 Move X23, [X31+40]
	111 Move X26, [X31+16]
	112 Move X25, [X31+24]
	113 Move X30, [X31+80]
	114 Move X27, [X31+88]
	115 Return X0
	116 Call 0x1C17F20
	117 Call 0x1C17F20
	118 Move X0, X20
	119 Call 0x1C17F18
	120 Call 0x1C17F20
	121 Move X21, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X21
	124 Call 0x3EB2AD0
	125 Move X20, [X0]
	126 Call 0x3EB2AE0
	127 Move X20, X31
	128 Move X21, X0
	129 Move X0, [X23]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X1, [X24]
	135 Move X0, X19
	136 Call CollectionPool`2<Object, Int32>.Release, X0
	137 Compare X20, 0
	138 JumpIfNotEqual {141}
	139 Move X0, X21
	140 Call 0x1D2D690
	141 Move X0, X20
	142 Call 0x1C17F18
	143 Call 0x1991590

Method: System.Void NotifyOfSelectionChange()

Disassembly:
	0x03D044FC ADRP X21, 0x6E3000
	0x03D04500 LDRB W8, [X21 + 0x81E]
	0x03D04504 MOV X20, X1
	0x03D04508 MOV X19, X0
	0x03D0450C TBNZ X8, 0x0, 0x3D0453C
	0x03D04510 ADRP X0, 0x419000
	0x03D04514 LDR X0, [X0 + 0xF18]
	0x03D04518 BL 0x1C16CF4
	0x03D0451C ADRP X0, 0x419000
	0x03D04520 LDR X0, [X0 + 0x680]
	0x03D04524 BL 0x1C16CF4
	0x03D04528 ADRP X0, 0x3EF000
	0x03D0452C LDR X0, [X0 + 0x5A8]
	0x03D04530 BL 0x1C16CF4
	0x03D04534 MOVZ W8, 0x1
	0x03D04538 STRB W8, [X21 + 0x81E]
	0x03D0453C STR W31, [X31 + 0xC]
	0x03D04540 LDRB W8, [X19 + 0x438]
	0x03D04544 CBNZ W8, 0x3D04644
	0x03D04548 CBZ X20, 0x3D04654
	0x03D0454C MOV X0, X20
	0x03D04550 MOV X1, X31
	0x03D04554 BL 0x3DADB00
	0x03D04558 ADRP X21, 0x419000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+2056]
	006 Move X1, [X8+2064]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move TEMP, X0
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {30}
	012 Move X8, [X19+992]
	013 Compare X8, 0
	014 JumpIfEqual {20}
	015 Move X1, [X19+1144]
	016 Move X9, [X8+24]
	017 Move X0, [X8+64]
	018 Move X2, [X8+40]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X8, [X19+1000]
	021 Compare X8, 0
	022 JumpIfEqual {30}
	023 Move X1, [X19+1136]
	024 Move X3, [X8+24]
	025 Move X0, [X8+64]
	026 Move X2, [X8+40]
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 CallNoReturn X3
	030 Move X30, [X31+16]
	031 Move X19, [X31+24]
	032 Return 

Method: System.Void ClearSelection()

Disassembly:
	0x03CFFB78 ADRP X0, 0x464000
	0x03CFFB7C LDR X0, [X0 + 0x68]
	0x03CFFB80 BL 0x1C16CF4
	0x03CFFB84 MOVZ W8, 0x1
	0x03CFFB88 STRB W8, [X21 + 0x803]
	0x03CFFB8C LDR X0, [X22]
	0x03CFFB90 BL 0x1C16F10
	0x03CFFB94 MOV X1, X31
	0x03CFFB98 MOV X21, X0
	0x03CFFB9C BL 0x33BDD8C
	0x03CFFBA0 CBZ X21, 0x3CFFC30
	0x03CFFBA4 ADRP X22, 0x464000
	0x03CFFBA8 ADRP X23, 0x464000
	0x03CFFBAC ADRP X24, 0x464000
	0x03CFFBB0 LDR X22, [X22 + 0x78]
	0x03CFFBB4 LDR X23, [X23 + 0x80]
	0x03CFFBB8 LDR X24, [X24 + 0x70]
	0x03CFFBBC MOV X0, X19
	0x03CFFBC0 STR W20, [X21 + 0x10]
	0x03CFFBC4 BL 0x3CFEC08
	0x03CFFBC8 LDR X8, [X22]
	0x03CFFBCC MOV X19, X0
	0x03CFFBD0 MOV X0, X8
	0x03CFFBD4 BL 0x1C16F10
	0x03CFFBD8 LDR X2, [X23]
	0x03CFFBDC MOV X1, X21
	0x03CFFBE0 MOV X3, X31
	0x03CFFBE4 MOV X20, X0
	0x03CFFBE8 BL 0x2D2F428
	0x03CFFBEC LDR X2, [X24]
	0x03CFFBF0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6E9000
	005 Move W8, [X20+2075]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3F6000
	012 Move X0, [X0+3624]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2075], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+2056]
	019 Move X1, [X8+2064]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {39}
	025 Move X8, [X19+1128]
	026 Compare X8, 0
	027 JumpIfEqual {43}
	028 Move W8, [X8+24]
	029 Compare W8, 0
	030 JumpIfEqual {39}
	031 Move X0, X19
	032 Call BaseVerticalCollectionView.ClearSelectionWithoutValidation, X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Call BaseVerticalCollectionView.NotifyOfSelectionChange, X0
	038 Return 
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 Call 0x1C17F20

Method: System.Void ClearSelectionWithoutValidation()

Disassembly:
	0x03D03E24 BL 0x1D2C690
	0x03D03E28 MOV X0, X24
	0x03D03E2C BL 0x1C16F18
	0x03D03E30 BL 0x1990590
	0x03D03E34 MOVZ W2, 0x1
	0x03D03E38 B 0x3CFDF7C
	0x03D03E3C MOV W2, W31
	0x03D03E40 B 0x3CFDF7C
	0x03D03E44 STP X30, X27, [X31 - 0x50]!
	0x03D03E48 STP X26, X25, [X31 + 0x10]
	0x03D03E4C STP X24, X23, [X31 + 0x20]
	0x03D03E50 STP X22, X21, [X31 + 0x30]
	0x03D03E54 STP X20, X19, [X31 + 0x40]
	0x03D03E58 ADRP X19, 0x6E4000
	0x03D03E5C ADRP X23, 0x41A000
	0x03D03E60 LDRB W8, [X19 + 0x81A]
	0x03D03E64 LDR X23, [X23 + 0x8E0]
	0x03D03E68 MOV X21, X1
	0x03D03E6C MOV X20, X0
	0x03D03E70 TBNZ X8, 0x0, 0x3D03EC4
	0x03D03E74 ADRP X0, 0x41A000
	0x03D03E78 LDR X0, [X0 + 0x8D8]
	0x03D03E7C BL 0x1C16CF4
	0x03D03E80 ADRP X0, 0x41B000
	0x03D03E84 LDR X0, [X0 + 0xB08]
	0x03D03E88 BL 0x1C16CF4
	0x03D03E8C ADRP X0, 0x41A000
	0x03D03E90 LDR X0, [X0 + 0x8E0]
	0x03D03E94 BL 0x1C16CF4
	0x03D03E98 ADRP X0, 0x44B000
	0x03D03E9C LDR X0, [X0 + 0x688]
	0x03D03EA0 BL 0x1C16CF4
	0x03D03EA4 ADRP X0, 0x3F1000
	0x03D03EA8 LDR X0, [X0 + 0xE28]
	0x03D03EAC BL 0x1C16CF4
	0x03D03EB0 ADRP X0, 0x41A000
	0x03D03EB4 LDR X0, [X0 + 0xF38]
	0x03D03EB8 BL 0x1C16CF4
	0x03D03EBC MOVZ W8, 0x1
	0x03D03EC0 STRB W8, [X19 + 0x81A]
	0x03D03EC4 LDR X0, [X23]
	0x03D03EC8 ADRP X19, 0x41A000
	0x03D03ECC LDR W8, [X0 + 0xE0]
	0x03D03ED0 LDR X19, [X19 + 0x8D8]
	0x03D03ED4 CBNZ W8, 0x3D03EDC
	0x03D03ED8 BL 0x1C16DFC
	0x03D03EDC LDR X0, [X19]
	0x03D03EE0 ADRP X24, 0x41B000
	0x03D03EE4 LDR X24, [X24 + 0xB08]
	0x03D03EE8 BL 0x28F9448
	0x03D03EEC MOV X19, X0
	0x03D03EF0 CBZ X0, 0x3D03FDC
	0x03D03EF4 ADRP X8, 0x44B000
	0x03D03EF8 LDR X8, [X8 + 0x688]
	0x03D03EFC LDR X2, [X8]
	0x03D03F00 MOV X0, X19
	0x03D03F04 MOV X1, X21
	0x03D03F08 BL 0x2FDC918
	0x03D03F0C LDR X9, [X20 + 0x470]
	0x03D03F10 CBZ X9, 0x3D03FE8
	0x03D03F14 LDR W8, [X19 + 0x18]
	0x03D03F18 LDR W9, [X9 + 0x18]
	0x03D03F1C CMP W8, W9
	0x03D03F20 B.NE 0x3D03F94
	0x03D03F24 CMP W8, 0x0
	0x03D03F28 CSET W25, GT
	0x03D03F2C CMP W8, 0x1
	0x03D03F30 B.LT 0x3D03F88
	0x03D03F34 ADRP X27, 0x41A000
	0x03D03F38 LDR X27, [X27 + 0xF38]
	0x03D03F3C MOVZ W26, 0x1
	0x03D03F40 LDR X2, [X27]
	0x03D03F44 SUB W22, W26, 0x1
	0x03D03F48 MOV X0, X19
	0x03D03F4C MOV W1, W22
	0x03D03F50 BL 0x2FDC41C
	0x03D03F54 MOV W21, W0
	0x03D03F58 LDR X0, [X20 + 0x470]
	0x03D03F5C CBZ X0, 0x3D03FD8
	0x03D03F60 LDR X2, [X27]
	0x03D03F64 MOV W1, W22
	0x03D03F68 BL 0x2FDC41C
	0x03D03F6C CMP W21, W0
	0x03D03F70 B.NE 0x3D03F88
	0x03D03F74 LDR W8, [X19 + 0x18]
	0x03D03F78 CMP W26, W8
	0x03D03F7C CSET W25, LT
	0x03D03F80 ADD W26, W26, 0x1
	0x03D03F84 B.LT 0x3D03F40
	0x03D03F88 MOV X20, X31
	0x03D03F8C EOR W21, W25, 0x1
	0x03D03F90 B 0x3D03F9C
	0x03D03F94 MOV X20, X31
	0x03D03F98 MOV W21, W31
	0x03D03F9C LDR X0, [X23]
	0x03D03FA0 LDR W8, [X0 + 0xE0]
	0x03D03FA4 CBNZ W8, 0x3D03FAC
	0x03D03FA8 BL 0x1C16DFC
	0x03D03FAC LDR X1, [X24]
	0x03D03FB0 MOV X0, X19
	0x03D03FB4 BL 0x28F9588
	0x03D03FB8 CBNZ X20, 0x3D03FE0
	0x03D03FBC AND W0, W21, 0x1
	0x03D03FC0 LDP X20, X19, [X31 + 0x40]
	0x03D03FC4 LDP X22, X21, [X31 + 0x30]
	0x03D03FC8 LDP X24, X23, [X31 + 0x20]
	0x03D03FCC LDP X26, X25, [X31 + 0x10]
	0x03D03FD0 LDP X30, X27, [X31], #0x50
	0x03D03FD4 RET
	0x03D03FD8 BL 0x1C16F20
	0x03D03FDC BL 0x1C16F20
	0x03D03FE0 MOV X0, X20
	0x03D03FE4 BL 0x1C16F18
	0x03D03FE8 BL 0x1C16F20
	0x03D03FEC B 0x3D03FFC
	0x03D03FF0 B 0x3D03FFC
	0x03D03FF4 B 0x3D03FFC
	0x03D03FF8 B 0x3D03FFC
	0x03D03FFC MOV X21, X0
	0x03D04000 CMP W1, 0x1
	0x03D04004 B.NE 0x3D0401C
	0x03D04008 MOV X0, X21
	0x03D0400C BL 0x3EB1AD0
	0x03D04010 LDR X20, [X0]
	0x03D04014 BL 0x3EB1AE0
	0x03D04018 B 0x3D03F98
	0x03D0401C MOV X20, X31
	0x03D04020 B 0x3D04028
	0x03D04024 MOV X21, X0
	0x03D04028 LDR X0, [X23]
	0x03D0402C LDR W8, [X0 + 0xE0]
	0x03D04030 CBNZ W8, 0x3D04038
	0x03D04034 BL 0x1C16DFC
	0x03D04038 LDR X1, [X24]
	0x03D0403C MOV X0, X19
	0x03D04040 BL 0x28F9588
	0x03D04044 CBNZ X20, 0x3D04050
	0x03D04048 MOV X0, X21
	0x03D0404C BL 0x1D2C690
	0x03D04050 MOV X0, X20
	0x03D04054 BL 0x1C16F18
	0x03D04058 BL 0x1990590
	0x03D0405C STR X30, [X31 - 0x30]!
	0x03D04060 STP X22, X21, [X31 + 0x10]
	0x03D04064 STP X20, X19, [X31 + 0x20]
	0x03D04068 ADRP X21, 0x6E3000
	0x03D0406C LDRB W8, [X21 + 0x81D]
	0x03D04070 MOV X19, X1
	0x03D04074 MOV X20, X0
	0x03D04078 TBNZ X8, 0x0, 0x3D04114
	0x03D0407C ADRP X0, 0x45F000
	0x03D04080 LDR X0, [X0 + 0x110]
	0x03D04084 BL 0x1C16CF4
	0x03D04088 ADRP X0, 0x419000
	0x03D0408C LDR X0, [X0 + 0x6D0]
	0x03D04090 BL 0x1C16CF4
	0x03D04094 ADRP X0, 0x417000
	0x03D04098 LDR X0, [X0 + 0x940]
	0x03D0409C BL 0x1C16CF4
	0x03D040A0 ADRP X0, 0x419000
	0x03D040A4 LDR X0, [X0 + 0x6D8]
	0x03D040A8 BL 0x1C16CF4
	0x03D040AC ADRP X0, 0x419000
	0x03D040B0 LDR X0, [X0 + 0x6E8]
	0x03D040B4 BL 0x1C16CF4
	0x03D040B8 ADRP X0, 0x417000
	0x03D040BC LDR X0, [X0 + 0x948]
	0x03D040C0 BL 0x1C16CF4
	0x03D040C4 ADRP X0, 0x419000
	0x03D040C8 LDR X0, [X0 + 0x6F8]
	0x03D040CC BL 0x1C16CF4
	0x03D040D0 ADRP X0, 0x419000
	0x03D040D4 LDR X0, [X0 + 0x700]
	0x03D040D8 BL 0x1C16CF4
	0x03D040DC ADRP X0, 0x419000
	0x03D040E0 LDR X0, [X0 + 0x708]
	0x03D040E4 BL 0x1C16CF4
	0x03D040E8 ADRP X0, 0x45F000
	0x03D040EC LDR X0, [X0 + 0x118]
	0x03D040F0 BL 0x1C16CF4
	0x03D040F4 ADRP X0, 0x417000
	0x03D040F8 LDR X0, [X0 + 0x968]
	0x03D040FC BL 0x1C16CF4
	0x03D04100 ADRP X0, 0x417000
	0x03D04104 LDR X0, [X0 + 0x898]
	0x03D04108 BL 0x1C16CF4
	0x03D0410C MOVZ W8, 0x1
	0x03D04110 STRB W8, [X21 + 0x81D]
	0x03D04114 MOV X0, X20
	0x03D04118 MOV X1, X19
	0x03D0411C MOV X2, X31
	0x03D04120 BL 0x3DEF858
	0x03D04124 CBZ X19, 0x3D043E4
	0x03D04128 LDR X8, [X19]
	0x03D0412C ADRP X21, 0x417000
	0x03D04130 ADRP X22, 0x417000
	0x03D04134 MOV X0, X19
	0x03D04138 LDP X9, X1, [X8 + 0x188]
	0x03D0413C LDR X21, [X21 + 0x948]
	0x03D04140 LDR X22, [X22 + 0x940]
	0x03D04144 BLR X9
	0x03D04148 LDR X8, [X21]
	0x03D0414C MOV X21, X0
	0x03D04150 LDR W9, [X8 + 0xE0]
	0x03D04154 CBNZ W9, 0x3D04160
	0x03D04158 MOV X0, X8
	0x03D0415C BL 0x1C16DFC
	0x03D04160 LDR X0, [X22]
	0x03D04164 BL 0x2D0D5C8
	0x03D04168 CMP X21, X0
	0x03D0416C B.NE 0x3D041A8
	0x03D04170 LDR X0, [X20 + 0x488]
	0x03D04174 CBZ X0, 0x3D0438C
	0x03D04178 ADRP X8, 0x417000
	0x03D0417C LDR X8, [X8 + 0x968]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x6E5000
	008 Move W8, [X20+2076]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x3F1000
	015 Move X0, [X0+3584]
	016 Call 0x1C17CF4
	017 Move X0, 0x41B000
	018 Move X0, [X0+3872]
	019 Call 0x1C17CF4
	020 Move X0, 0x41B000
	021 Move X0, [X0+3880]
	022 Call 0x1C17CF4
	023 Move X0, 0x3F1000
	024 Move X0, [X0+3608]
	025 Call 0x1C17CF4
	026 Move X0, 0x3F9000
	027 Move X0, [X0+3872]
	028 Call 0x1C17CF4
	029 Move X0, 0x3F8000
	030 Move X0, [X0+2136]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2076], W8
	034 Move X0, X19
	035 Call BaseVerticalCollectionView.get_activeItems, X0
	036 Compare X0, 0
	037 JumpIfEqual {192}
	038 Move X10, 0x41B000
	039 Move X8, [X0]
	040 Move X10, [X10+3872]
	041 Move X20, X0
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move X1, [X10]
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move X0, X20
	053 Move W2, W31
	054 Call 0x1C5D788
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add X8, X8, X9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X1, [X0+8]
	060 Move X22, 0x3F1000
	061 Move X22, [X22+3584]
	062 Move X0, X20
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X20, X0
	065 Compare X0, 0
	066 JumpIfEqual {193}
	067 Move X21, 0x3F1000
	068 Move X23, 0x41B000
	069 Move X21, [X21+3608]
	070 Move X23, [X23+3880]
	071 Move X8, [X20]
	072 Move X1, [X21]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X20
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X0, X20
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {124}
	096 Move X8, [X20]
	097 Move X1, [X23]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X20
	108 Move W2, W31
	109 Call 0x1C5D788
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Add X8, X8, X9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X20
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Compare X0, 0
	118 JumpIfEqual {191}
	119 Move X8, [X0]
	120 Move X9, [X8+456]
	121 Move X2, [X8+464]
	122 Move W1, W31
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X21, X31
	125 Compare X20, 0
	126 JumpIfEqual {148}
	127 Move X8, [X20]
	128 Move X1, [X22]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X20
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X20
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Compare X21, 0
	149 JumpIfNotEqual {194}
	150 Move X8, [X19+1128]
	151 Compare X8, 0
	152 JumpIfEqual {192}
	153 Move W9, [X8+28]
	154 Add W9, W9, 1
	155 Move [X8+24], W31
	156 Move [X8+28], W9
	157 Move X8, [X19+1136]
	158 Compare X8, 0
	159 JumpIfEqual {192}
	160 Move W9, [X8+28]
	161 Add W9, W9, 1
	162 Move [X8+24], W31
	163 Move [X8+28], W9
	164 Move X8, [X19+1144]
	165 Compare X8, 0
	166 JumpIfEqual {192}
	167 Move W2, [X8+24]
	168 Move W9, [X8+28]
	169 Add W9, W9, 1
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move [X8+24], W31
	172 Move [X8+28], W9
	173 Move X0, [X8+16]
	174 Move X20, [X31+32]
	175 Move X19, [X31+40]
	176 Move X22, [X31+16]
	177 Move X21, [X31+24]
	178 Move W1, W31
	179 Move X3, X31
	180 Move X30, [X31+48]
	181 Move X23, [X31+56]
	182 Call Array.Clear, X0, X1, X2
	183 Return 
	184 Move X20, [X31+32]
	185 Move X19, [X31+40]
	186 Move X22, [X31+16]
	187 Move X21, [X31+24]
	188 Move X30, [X31+48]
	189 Move X23, [X31+56]
	190 Return 
	191 Call 0x1C17F20
	192 Call 0x1C17F20
	193 Call 0x1C17F20
	194 Move X0, X21
	195 Call 0x1C17F18
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Call 0x3EB2AD0
	198 Move X21, [X0]
	199 Call 0x3EB2AE0
	200 Move X19, X0
	201 Move X21, X31
	202 Move X19, X0
	203 Compare X20, 0
	204 JumpIfEqual {226}
	205 Move X8, [X20]
	206 Move X1, [X22]
	207 NotImplemented "Instruction LDRH not yet implemented."
	208 Compare X9, 0
	209 JumpIfEqual {216}
	210 Move X10, [X8+176]
	211 Add X10, X10, 8
	212 NotImplemented "Instruction LDUR not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Subtract X9, X9, 1
	215 Add X10, X10, 16
	216 Move X0, X20
	217 Move W2, W31
	218 Call 0x1C5D788
	219 NotImplemented "Instruction LDRSW not yet implemented."
	220 Add X8, X8, X9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X1, [X0+8]
	224 Move X0, X20
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Compare X21, 0
	227 JumpIfNotEqual {230}
	228 Move X0, X19
	229 Call 0x1D2D690
	230 Move X0, X21
	231 Call 0x1C17F18
	232 Call 0x1991590

Method: System.Void OnViewDataReady()

Disassembly:
	0x03CFE578 LDR X8, [X8 + 0xB8]
	0x03CFE57C STR X0, [X8 + 0x8]
	0x03CFE580 LDR X0, [X8]
	0x03CFE584 LDR X1, [X23]
	0x03CFE588 BL 0x321B938
	0x03CFE58C LDR X8, [X19]
	0x03CFE590 MOV X2, X31
	0x03CFE594 LDR X8, [X8 + 0xB8]
	0x03CFE598 STR X0, [X8 + 0x10]
	0x03CFE59C LDR X0, [X8]
	0x03CFE5A0 LDR X1, [X22]
	0x03CFE5A4 BL 0x321B938
	0x03CFE5A8 LDR X8, [X19]
	0x03CFE5AC MOV X2, X31
	0x03CFE5B0 LDR X8, [X8 + 0xB8]
	0x03CFE5B4 STR X0, [X8 + 0x18]
	0x03CFE5B8 LDR X0, [X8]
	0x03CFE5BC LDR X1, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call VisualElement.OnViewDataReady, X0
	006 Move X0, X19
	007 Move X1, X31
	008 Call VisualElement.GetFullHierarchicalViewDataKey, X0
	009 Move X2, X0
	010 Move X0, X19
	011 Move X1, X19
	012 Move X3, X31
	013 Call VisualElement.OverwriteFromViewData, X0, X1, X2
	014 Move X0, [X19+1088]
	015 Compare X0, 0
	016 JumpIfEqual {22}
	017 Move X1, X31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Call ScrollView.UpdateContentViewTransform, X0
	021 Return 
	022 Call 0x1C17F20

Method: System.Void ExecuteDefaultAction(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03D0505C LDR X0, [X0 + 0xEB8]
	0x03D05060 BL 0x1C16CF4
	0x03D05064 ADRP X0, 0x417000
	0x03D05068 LDR X0, [X0 + 0xEC0]
	0x03D0506C BL 0x1C16CF4
	0x03D05070 MOVZ W8, 0x1
	0x03D05074 STRB W8, [X25 + 0x827]
	0x03D05078 LDR X8, [X19]
	0x03D0507C LDR X9, [X24]
	0x03D05080 MOV X2, X31
	0x03D05084 LDR X8, [X8 + 0xB8]
	0x03D05088 STR X9, [X8]
	0x03D0508C LDR X8, [X19]
	0x03D05090 LDR X1, [X23]
	0x03D05094 LDR X8, [X8 + 0xB8]
	0x03D05098 LDR X0, [X8]
	0x03D0509C BL 0x321B938
	0x03D050A0 LDR X8, [X19]
	0x03D050A4 MOV X2, X31
	0x03D050A8 LDR X8, [X8 + 0xB8]
	0x03D050AC STR X0, [X8 + 0x8]
	0x03D050B0 LDR X0, [X8]
	0x03D050B4 LDR X1, [X22]
	0x03D050B8 BL 0x321B938
	0x03D050BC LDR X8, [X19]
	0x03D050C0 MOV X2, X31
	0x03D050C4 LDR X8, [X8 + 0xB8]
	0x03D050C8 STR X0, [X8 + 0x10]
	0x03D050CC LDR X0, [X8]
	0x03D050D0 LDR X1, [X21]
	0x03D050D4 BL 0x321B938
	0x03D050D8 LDR X8, [X19]
	0x03D050DC MOV X2, X31
	0x03D050E0 LDR X8, [X8 + 0xB8]
	0x03D050E4 STR X0, [X8 + 0x18]
	0x03D050E8 LDR X0, [X8]
	0x03D050EC LDR X1, [X20]
	0x03D050F0 BL 0x321B938
	0x03D050F4 LDR X8, [X19]
	0x03D050F8 LDP X20, X19, [X31 + 0x30]
	0x03D050FC LDP X22, X21, [X31 + 0x20]
	0x03D05100 LDP X24, X23, [X31 + 0x10]
	0x03D05104 LDR X8, [X8 + 0xB8]
	0x03D05108 STR X0, [X8 + 0x20]
	0x03D0510C LDP X30, X25, [X31], #0x40
	0x03D05110 RET
	0x03D05114 SUB X31, X31, 0x50
	0x03D05118 STP X30, X21, [X31 + 0x30]
	0x03D0511C STP X20, X19, [X31 + 0x40]
	0x03D05120 ADRP X21, 0x6E2000
	0x03D05124 LDRB W8, [X21 + 0x828]
	0x03D05128 MOV X20, X1
	0x03D0512C MOV X19, X0
	0x03D05130 TBNZ X8, 0x0, 0x3D05148
	0x03D05134 ADRP X0, 0x45E000
	0x03D05138 LDR X0, [X0 + 0x258]
	0x03D0513C BL 0x1C16CF4
	0x03D05140 MOVZ W8, 0x1
	0x03D05144 STRB W8, [X21 + 0x828]
	0x03D05148 LDR X8, [X19]
	0x03D0514C MOV X0, X19
	0x03D05150 LDR X9, [X8 + 0x7E8]
	0x03D05154 LDR X1, [X8 + 0x7F0]
	0x03D05158 ADD X8, X31, 0x18
	0x03D0515C BLR X9
	0x03D05160 LDUR X8, [X31 + 0x24]
	0x03D05164 LDR W9, [X31 + 0x2C]
	0x03D05168 STR X8, [X31 + 0x8]
	0x03D0516C STR W9, [X31 + 0x10]
	0x03D05170 CBZ X20, 0x3D051BC
	0x03D05174 LDR V0, [X20 + 0x90]
	0x03D05178 LDR X8, [X19]
	0x03D0517C LDR V1, [X20 + 0x98]
	0x03D05180 LDR X9, [X31 + 0x8]
	0x03D05184 LDR W10, [X31 + 0x10]
	0x03D05188 LDR X11, [X8 + 0x7F8]
	0x03D0518C STR D0, [X31 + 0x18]
	0x03D05190 STR S1, [X31 + 0x20]
	0x03D05194 STUR X9, [X31 + 0x24]
	0x03D05198 STR W10, [X31 + 0x2C]
	0x03D0519C LDR X2, [X8 + 0x800]
	0x03D051A0 ADD X1, X31, 0x18
	0x03D051A4 MOV X0, X19
	0x03D051A8 BLR X11
	0x03D051AC LDP X20, X19, [X31 + 0x40]
	0x03D051B0 LDP X30, X21, [X31 + 0x30]
	0x03D051B4 ADD X31, X31, 0x50
	0x03D051B8 RET
	0x03D051BC BL 0x1C16F20
	0x03D051C0 SUB X31, X31, 0x50
	0x03D051C4 STP X30, X21, [X31 + 0x30]
	0x03D051C8 STP X20, X19, [X31 + 0x40]
	0x03D051CC ADRP X21, 0x6E2000
	0x03D051D0 LDRB W8, [X21 + 0x829]
	0x03D051D4 MOV X20, X1
	0x03D051D8 MOV X19, X0
	0x03D051DC TBNZ X8, 0x0, 0x3D051F4
	0x03D051E0 ADRP X0, 0x45E000
	0x03D051E4 LDR X0, [X0 + 0x258]
	0x03D051E8 BL 0x1C16CF4
	0x03D051EC MOVZ W8, 0x1
	0x03D051F0 STRB W8, [X21 + 0x829]
	0x03D051F4 LDR X8, [X19]
	0x03D051F8 MOV X0, X19
	0x03D051FC LDR X9, [X8 + 0x7E8]
	0x03D05200 LDR X1, [X8 + 0x7F0]
	0x03D05204 ADD X8, X31, 0x18
	0x03D05208 BLR X9
	0x03D0520C LDR X8, [X31 + 0x18]
	0x03D05210 LDR W9, [X31 + 0x20]
	0x03D05214 STR X8, [X31 + 0x8]
	0x03D05218 STR W9, [X31 + 0x10]
	0x03D0521C CBZ X20, 0x3D05268
	0x03D05220 LDR V0, [X20 + 0x90]
	0x03D05224 LDR X8, [X19]
	0x03D05228 LDR X9, [X31 + 0x8]
	0x03D0522C LDR W10, [X31 + 0x10]
	0x03D05230 LDR V1, [X20 + 0x98]
	0x03D05234 LDR X11, [X8 + 0x7F8]
	0x03D05238 STR X9, [X31 + 0x18]
	0x03D0523C STR W10, [X31 + 0x20]
	0x03D05240 STUR D0, [X31 + 0x24]
	0x03D05244 STR S1, [X31 + 0x2C]
	0x03D05248 LDR X2, [X8 + 0x800]
	0x03D0524C ADD X1, X31, 0x18
	0x03D05250 MOV X0, X19
	0x03D05254 BLR X11
	0x03D05258 LDP X20, X19, [X31 + 0x40]
	0x03D0525C LDP X30, X21, [X31 + 0x30]
	0x03D05260 ADD X31, X31, 0x50
	0x03D05264 RET
	0x03D05268 BL 0x1C16F20
	0x03D0526C STP X30, X21, [X31 - 0x20]!
	0x03D05270 STP X20, X19, [X31 + 0x10]
	0x03D05274 ADRP X20, 0x6E2000
	0x03D05278 ADRP X21, 0x45E000
	0x03D0527C LDRB W8, [X20 + 0x82A]
	0x03D05280 LDR X21, [X21 + 0x260]
	0x03D05284 MOV X19, X0
	0x03D05288 TBNZ X8, 0x0, 0x3D052A0
	0x03D0528C ADRP X0, 0x45E000
	0x03D05290 LDR X0, [X0 + 0x260]
	0x03D05294 BL 0x1C16CF4
	0x03D05298 MOVZ W8, 0x1
	0x03D0529C STRB W8, [X20 + 0x82A]
	0x03D052A0 LDR X1, [X21]
	0x03D052A4 MOV X0, X19
	0x03D052A8 LDP X20, X19, [X31 + 0x10]
	0x03D052AC LDP X30, X21, [X31], #0x20
	0x03D052B0 B 0x2736468
	0x03D052B4 SUB X31, X31, 0x170
	0x03D052B8 STR D12, [X31 + 0x100]
	0x03D052BC STP D11, D10, [X31 + 0x110]
	0x03D052C0 STP D9, D8, [X31 + 0x120]
	0x03D052C4 STP X29, X30, [X31 + 0x130]
	0x03D052C8 STP X24, X23, [X31 + 0x140]
	0x03D052CC STP X22, X21, [X31 + 0x150]
	0x03D052D0 STP X20, X19, [X31 + 0x160]
	0x03D052D4 ADRP X24, 0x6E2000
	0x03D052D8 ADRP X23, 0x45E000
	0x03D052DC LDRB W8, [X24 + 0x82B]
	0x03D052E0 LDR X23, [X23 + 0x268]
	0x03D052E4 MOV X21, X3
	0x03D052E8 MOV X20, X2
	0x03D052EC MOV X19, X1
	0x03D052F0 MOV X22, X0
	0x03D052F4 TBNZ X8, 0x0, 0x3D05318
	0x03D052F8 ADRP X0, 0x45E000
	0x03D052FC LDR X0, [X0 + 0x1C8]
	0x03D05300 BL 0x1C16CF4
	0x03D05304 ADRP X0, 0x45E000
	0x03D05308 LDR X0, [X0 + 0x268]
	0x03D0530C BL 0x1C16CF4
	0x03D05310 MOVZ W8, 0x1
	0x03D05314 STRB W8, [X24 + 0x82B]
	0x03D05318 LDP V1, V0, [X21]
	0x03D0531C LDR X4, [X23]
	0x03D05320 ADD X3, X31, 0xE0
	0x03D05324 MOV X0, X22
	0x03D05328 MOV X1, X19
	0x03D0532C MOV X2, X20
	0x03D05330 STP V1, V0, [X31 + 0xC0]
	0x03D05334 STP V1, V0, [X31 + 0xE0]
	0x03D05338 BL 0x2738C00
	0x03D0533C CBZ X19, 0x3D05374
	0x03D05340 ADRP X9, 0x45E000
	0x03D05344 LDR X9, [X9 + 0x1C8]
	0x03D05348 LDR X8, [X19]
	0x03D0534C LDR X1, [X9]
	0x03D05350 LDRB W10, [X8 + 0x130]
	0x03D05354 LDRB W9, [X1 + 0x130]
	0x03D05358 CMP W10, W9
	0x03D0535C B.CC 0x3D05508
	0x03D05360 LDR X8, [X8 + 0xC8]
	0x03D05364 ADD X8, X8, X9, 0x3, LSL
	0x03D05368 LDUR X8, [X8 - 0x8]
	0x03D0536C CMP X8, X1
	0x03D05370 B.NE 0x3D05508
	0x03D05374 LDP V0, V1, [X21]
	0x03D05378 LDR X0, [X22 + 0x80]
	0x03D0537C STP V0, V1, [X31 + 0xA0]
	0x03D05380 CBZ X0, 0x3D05504
	0x03D05384 LDR X8, [X0]
	0x03D05388 LDP V0, V1, [X31 + 0xA0]
	0x03D0538C ADD X2, X31, 0xE0
	0x03D05390 MOV X1, X20
	0x03D05394 LDR X9, [X8 + 0x178]
	0x03D05398 STP V0, V1, [X31 + 0xE0]
	0x03D0539C LDR X3, [X8 + 0x180]
	0x03D053A0 BLR X9
	0x03D053A4 MOV V8.16B, V0.16B
	0x03D053A8 LDP V0, V1, [X21]
	0x03D053AC LDR X0, [X22 + 0x88]
	0x03D053B0 STP V0, V1, [X31 + 0x80]
	0x03D053B4 CBZ X0, 0x3D05504
	0x03D053B8 LDR X8, [X0]
	0x03D053BC LDP V0, V1, [X31 + 0x80]
	0x03D053C0 ADD X2, X31, 0xE0
	0x03D053C4 MOV X1, X20
	0x03D053C8 LDR X9, [X8 + 0x178]
	0x03D053CC STP V0, V1, [X31 + 0xE0]
	0x03D053D0 LDR X3, [X8 + 0x180]
	0x03D053D4 BLR X9
	0x03D053D8 MOV V9.16B, V0.16B
	0x03D053DC LDP V0, V1, [X21]
	0x03D053E0 LDR X0, [X22 + 0x90]
	0x03D053E4 STP V0, V1, [X31 + 0x60]
	0x03D053E8 CBZ X0, 0x3D05504
	0x03D053EC LDR X8, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6E3000
	007 Move W8, [X21+2077]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {52}
	014 Move X0, 0x45F000
	015 Move X0, [X0+272]
	016 Call 0x1C17CF4
	017 Move X0, 0x419000
	018 Move X0, [X0+1744]
	019 Call 0x1C17CF4
	020 Move X0, 0x417000
	021 Move X0, [X0+2368]
	022 Call 0x1C17CF4
	023 Move X0, 0x419000
	024 Move X0, [X0+1752]
	025 Call 0x1C17CF4
	026 Move X0, 0x419000
	027 Move X0, [X0+1768]
	028 Call 0x1C17CF4
	029 Move X0, 0x417000
	030 Move X0, [X0+2376]
	031 Call 0x1C17CF4
	032 Move X0, 0x419000
	033 Move X0, [X0+1784]
	034 Call 0x1C17CF4
	035 Move X0, 0x419000
	036 Move X0, [X0+1792]
	037 Call 0x1C17CF4
	038 Move X0, 0x419000
	039 Move X0, [X0+1800]
	040 Call 0x1C17CF4
	041 Move X0, 0x45F000
	042 Move X0, [X0+280]
	043 Call 0x1C17CF4
	044 Move X0, 0x417000
	045 Move X0, [X0+2408]
	046 Call 0x1C17CF4
	047 Move X0, 0x417000
	048 Move X0, [X0+2200]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+2077], W8
	052 Move X0, X20
	053 Move X1, X19
	054 Move X2, X31
	055 Call VisualElement.ExecuteDefaultAction, X0, X1
	056 Compare X19, 0
	057 JumpIfEqual {246}
	058 Move X8, [X19]
	059 Move X21, 0x417000
	060 Move X22, 0x417000
	061 Move X0, X19
	062 Move X9, [X8+392]
	063 Move X1, [X8+400]
	064 Move X21, [X21+2376]
	065 Move X22, [X22+2368]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X21]
	068 Move X21, X0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X0, [X22]
	075 Call 0x2D0E5C8
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, [X20+1160]
	078 Compare X0, 0
	079 JumpIfEqual {221}
	080 Move X8, 0x417000
	081 Move X8, [X8+2408]
	082 Move X1, [X8]
	083 Move X8, [X19]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X1, X19
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X2, X31
	091 Move X30, [X31+48]
	092 Call DragEventsProcessor.OnPointerUpEvent, X0, X1
	093 Return 
	094 Move X8, [X19]
	095 Move X0, X19
	096 Move X9, [X8+392]
	097 Move X1, [X8+400]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X8, 0x419000
	100 Move X8, [X8+1792]
	101 Move X21, X0
	102 Move X8, [X8]
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X8, 0x419000
	109 Move X8, [X8+1744]
	110 Move X0, [X8]
	111 Call 0x2D0E5C8
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, [X20+1104]
	114 Compare X0, 0
	115 JumpIfEqual {221}
	116 Move X8, [X19+72]
	117 Compare X8, 0
	118 JumpIfEqual {126}
	119 Move X9, 0x417000
	120 Move X9, [X9+2200]
	121 Move X10, [X8]
	122 Move X9, [X9]
	123 Move W12, [X10+304]
	124 Move W11, [X9+304]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X1, X31
	127 Move X8, [X19]
	128 Move X0, X19
	129 Move X9, [X8+392]
	130 Move X1, [X8+400]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, 0x419000
	133 Move X8, [X8+1784]
	134 Move X21, X0
	135 Move X8, [X8]
	136 Move W9, [X8+224]
	137 Compare W9, 0
	138 JumpIfNotEqual {141}
	139 Move X0, X8
	140 Call 0x1C17DFC
	141 Move X8, 0x419000
	142 Move X8, [X8+1768]
	143 Move X0, [X8]
	144 Call 0x2D0E5C8
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X8, 0x45F000
	147 Move X8, [X8+272]
	148 Move X9, [X19]
	149 Move X8, [X8]
	150 Move W11, [X9+304]
	151 Move W10, [X8+304]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, [X20+1104]
	154 Compare X0, 0
	155 JumpIfNotEqual {217}
	156 Move X8, [X19]
	157 Move X0, X19
	158 Move X9, [X8+392]
	159 Move X1, [X8+400]
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move X8, 0x419000
	162 Move X8, [X8+1800]
	163 Move X21, X0
	164 Move X8, [X8]
	165 Move W9, [X8+224]
	166 Compare W9, 0
	167 JumpIfNotEqual {170}
	168 Move X0, X8
	169 Call 0x1C17DFC
	170 Move X8, 0x419000
	171 Move X8, [X8+1752]
	172 Move X0, [X8]
	173 Call 0x2D0E5C8
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, X19
	176 Move X1, X31
	177 Call EventBase.get_target, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, [X20+1088]
	180 Compare X0, 0
	181 JumpIfEqual {246}
	182 Move X8, [X0]
	183 Move X9, [X8+1896]
	184 Move X1, [X8+1904]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Compare X0, 0
	187 JumpIfEqual {246}
	188 Move X8, [X0]
	189 Move X20, [X31+32]
	190 Move X19, [X31+40]
	191 Move X22, [X31+16]
	192 Move X21, [X31+24]
	193 Move X2, [X8+584]
	194 Move X1, [X8+592]
	195 Move X30, [X31+48]
	196 CallNoReturn X2
	197 Move X9, [X9+200]
	198 Move X0, [X20+1104]
	199 Add X9, X9, X10
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 NotImplemented "Instruction CSEL not yet implemented."
	203 Compare X0, 0
	204 JumpIfEqual {221}
	205 Compare X8, 0
	206 JumpIfEqual {217}
	207 Move X8, [X8+136]
	208 Compare X8, 0
	209 JumpIfEqual {217}
	210 Move X9, 0x417000
	211 Move X9, [X9+2200]
	212 Move X10, [X8]
	213 Move X9, [X9]
	214 Move W12, [X10+304]
	215 Move W11, [X9+304]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X1, X31
	218 Move X8, [X0]
	219 Move X3, [X8+552]
	220 Move X2, [X8+560]
	221 Move X20, [X31+32]
	222 Move X19, [X31+40]
	223 Move X22, [X31+16]
	224 Move X21, [X31+24]
	225 Move X30, [X31+48]
	226 Return 
	227 Move X10, [X10+200]
	228 Add X10, X10, X11
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CSEL not yet implemented."
	232 Move X8, [X0]
	233 Move X3, [X8+536]
	234 Move X2, [X8+544]
	235 Move X20, [X31+32]
	236 Move X19, [X31+40]
	237 Move X22, [X31+16]
	238 Move X21, [X31+24]
	239 Move X30, [X31+48]
	240 CallNoReturn X3
	241 Move X10, [X10+200]
	242 Add X10, X10, X11
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 NotImplemented "Instruction CSEL not yet implemented."
	246 Call 0x1C17F20
	247 Move X0, X19
	248 Call 0x1C181E0

Method: System.Void OnSizeChanged(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03D053F0 LDP V0, V1, [X31 + 0x60]
	0x03D053F4 ADD X2, X31, 0xE0
	0x03D053F8 MOV X1, X20
	0x03D053FC LDR X9, [X8 + 0x178]
	0x03D05400 STP V0, V1, [X31 + 0xE0]
	0x03D05404 LDR X3, [X8 + 0x180]
	0x03D05408 BLR X9
	0x03D0540C MOV V10.16B, V0.16B
	0x03D05410 LDP V0, V1, [X21]
	0x03D05414 LDR X0, [X22 + 0x98]
	0x03D05418 STP V0, V1, [X31 + 0x40]
	0x03D0541C CBZ X0, 0x3D05504
	0x03D05420 LDR X8, [X0]
	0x03D05424 LDP V0, V1, [X31 + 0x40]
	0x03D05428 ADD X2, X31, 0xE0
	0x03D0542C MOV X1, X20
	0x03D05430 LDR X9, [X8 + 0x178]
	0x03D05434 STP V0, V1, [X31 + 0xE0]
	0x03D05438 LDR X3, [X8 + 0x180]
	0x03D0543C BLR X9
	0x03D05440 MOV V11.16B, V0.16B
	0x03D05444 LDP V0, V1, [X21]
	0x03D05448 LDR X0, [X22 + 0xA0]
	0x03D0544C STP V0, V1, [X31 + 0x20]
	0x03D05450 CBZ X0, 0x3D05504
	0x03D05454 LDR X8, [X0]
	0x03D05458 LDP V0, V1, [X31 + 0x20]
	0x03D0545C ADD X2, X31, 0xE0
	0x03D05460 MOV X1, X20
	0x03D05464 LDR X9, [X8 + 0x178]
	0x03D05468 STP V0, V1, [X31 + 0xE0]
	0x03D0546C LDR X3, [X8 + 0x180]
	0x03D05470 BLR X9
	0x03D05474 MOV V12.16B, V0.16B
	0x03D05478 LDP V0, V1, [X21]
	0x03D0547C LDR X0, [X22 + 0xA8]
	0x03D05480 STP V0, V1, [X31]
	0x03D05484 CBZ X0, 0x3D05504
	0x03D05488 LDR X8, [X0]
	0x03D0548C LDP V0, V1, [X31]
	0x03D05490 ADD X2, X31, 0xE0
	0x03D05494 MOV X1, X20
	0x03D05498 LDR X9, [X8 + 0x178]
	0x03D0549C STP V0, V1, [X31 + 0xE0]
	0x03D054A0 LDR X3, [X8 + 0x180]
	0x03D054A4 BLR X9
	0x03D054A8 CBZ X19, 0x3D05504
	0x03D054AC LDR X8, [X19]
	0x03D054B0 FMOV S1, 0.5
	0x03D054B4 FMUL S0, S0, S1
	0x03D054B8 FMUL S2, S12, S1
	0x03D054BC FMUL S1, S11, S1
	0x03D054C0 LDR X9, [X8 + 0x888]
	0x03D054C4 STP S8, S9, [X31 + 0xE0]
	0x03D054C8 STP S10, S1, [X31 + 0xE8]
	0x03D054CC STP S2, S0, [X31 + 0xF0]
	0x03D054D0 LDR X2, [X8 + 0x890]
	0x03D054D4 ADD X1, X31, 0xE0
	0x03D054D8 MOV X0, X19
	0x03D054DC BLR X9
	0x03D054E0 LDP X20, X19, [X31 + 0x160]
	0x03D054E4 LDP X22, X21, [X31 + 0x150]
	0x03D054E8 LDP X24, X23, [X31 + 0x140]
	0x03D054EC LDP X29, X30, [X31 + 0x130]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0]
	008 Move X20, X1
	009 Move X19, X0
	010 Move X9, [X8+2056]
	011 Move X8, [X8+2064]
	012 Move X1, X8
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {71}
	018 Compare X20, 0
	019 JumpIfEqual {78}
	020 Move X21, 0x6D5000
	021 Move V8, [X20+156]
	022 Move W8, [X21+1450]
	023 Move V9, [X20+140]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x3F6000
	027 Move X0, [X0+1208]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+1450], W8
	031 Move X8, 0x3F6000
	032 Move X8, [X8+1208]
	033 Move X9, -52535296
	034 Move V0, [X9+576]
	035 NotImplemented "Instruction FABS not yet implemented."
	036 Move X8, [X8]
	037 NotImplemented "Instruction FABS not yet implemented."
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 NotImplemented "Instruction FCSEL not yet implemented."
	040 Move X8, [X8+184]
	041 Move S2, 8
	042 Multiply S4, S1, S0
	043 Move V3, [X8]
	044 Multiply S1, S3, S2
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 NotImplemented "Instruction FCSEL not yet implemented."
	047 NotImplemented "Instruction FABD not yet implemented."
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 Move V2, [X20+160]
	050 Move V3, [X20+144]
	051 NotImplemented "Instruction FABS not yet implemented."
	052 NotImplemented "Instruction FABS not yet implemented."
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 NotImplemented "Instruction FCSEL not yet implemented."
	055 Multiply S0, S4, S0
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 NotImplemented "Instruction FCSEL not yet implemented."
	058 NotImplemented "Instruction FABD not yet implemented."
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move S0, [X20+156]
	061 Move S1, [X20+160]
	062 Move X0, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X30, [X31+16]
	066 Move X21, [X31+24]
	067 Move D9, [X31+48]
	068 Move D8, [X31+56]
	069 Call BaseVerticalCollectionView.Resize, X0, X1
	070 Return 
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X30, [X31+16]
	074 Move X21, [X31+24]
	075 Move D9, [X31+48]
	076 Move D8, [X31+56]
	077 Return 
	078 Call 0x1C17F20

Method: System.Void OnCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent e)

Disassembly:
	0x03D054F0 LDP D9, D8, [X31 + 0x120]
	0x03D054F4 LDP D11, D10, [X31 + 0x110]
	0x03D054F8 LDR V12, [X31 + 0x100]
	0x03D054FC ADD X31, X31, 0x170
	0x03D05500 RET
	0x03D05504 BL 0x1C16F20
	0x03D05508 MOV X0, X19
	0x03D0550C BL 0x1C171E0
	0x03D05510 STP X30, X21, [X31 - 0x20]!
	0x03D05514 STP X20, X19, [X31 + 0x10]
	0x03D05518 ADRP X20, 0x6E2000
	0x03D0551C ADRP X21, 0x45E000
	0x03D05520 LDRB W8, [X20 + 0x82C]
	0x03D05524 LDR X21, [X21 + 0x270]
	0x03D05528 MOV X19, X0
	0x03D0552C TBNZ X8, 0x0, 0x3D05598
	0x03D05530 ADRP X0, 0x45E000
	0x03D05534 LDR X0, [X0 + 0x270]
	0x03D05538 BL 0x1C16CF4
	0x03D0553C ADRP X0, 0x45E000
	0x03D05540 LDR X0, [X0 + 0x278]
	0x03D05544 BL 0x1C16CF4
	0x03D05548 ADRP X0, 0x424000
	0x03D0554C LDR X0, [X0 + 0xC18]
	0x03D05550 BL 0x1C16CF4
	0x03D05554 ADRP X0, 0x45E000
	0x03D05558 LDR X0, [X0 + 0x280]
	0x03D0555C BL 0x1C16CF4
	0x03D05560 ADRP X0, 0x45E000
	0x03D05564 LDR X0, [X0 + 0x288]
	0x03D05568 BL 0x1C16CF4
	0x03D0556C ADRP X0, 0x45E000
	0x03D05570 LDR X0, [X0 + 0x290]
	0x03D05574 BL 0x1C16CF4
	0x03D05578 ADRP X0, 0x45E000
	0x03D0557C LDR X0, [X0 + 0x298]
	0x03D05580 BL 0x1C16CF4
	0x03D05584 ADRP X0, 0x45E000
	0x03D05588 LDR X0, [X0 + 0x2A0]
	0x03D0558C BL 0x1C16CF4
	0x03D05590 MOVZ W8, 0x1
	0x03D05594 STRB W8, [X20 + 0x82C]
	0x03D05598 LDR X0, [X21]
	0x03D0559C BL 0x1C16F10
	0x03D055A0 MOV X1, X31
	0x03D055A4 MOV X20, X0
	0x03D055A8 BL 0x3E1B6CC
	0x03D055AC CBZ X20, 0x3D056BC
	0x03D055B0 ADRP X8, 0x45E000
	0x03D055B4 LDR X8, [X8 + 0x280]
	0x03D055B8 LDR X8, [X8]
	0x03D055BC STR X8, [X20 + 0x10]
	0x03D055C0 STR X20, [X19 + 0x80]
	0x03D055C4 LDR X0, [X21]
	0x03D055C8 BL 0x1C16F10
	0x03D055CC MOV X1, X31
	0x03D055D0 MOV X20, X0
	0x03D055D4 BL 0x3E1B6CC
	0x03D055D8 CBZ X20, 0x3D056BC
	0x03D055DC ADRP X8, 0x424000
	0x03D055E0 LDR X8, [X8 + 0xC18]
	0x03D055E4 LDR X8, [X8]
	0x03D055E8 STR X8, [X20 + 0x10]
	0x03D055EC STR X20, [X19 + 0x88]
	0x03D055F0 LDR X0, [X21]
	0x03D055F4 BL 0x1C16F10
	0x03D055F8 MOV X1, X31
	0x03D055FC MOV X20, X0
	0x03D05600 BL 0x3E1B6CC
	0x03D05604 CBZ X20, 0x3D056BC
	0x03D05608 ADRP X8, 0x45E000
	0x03D0560C LDR X8, [X8 + 0x288]
	0x03D05610 LDR X8, [X8]
	0x03D05614 STR X8, [X20 + 0x10]
	0x03D05618 STR X20, [X19 + 0x90]
	0x03D0561C LDR X0, [X21]
	0x03D05620 BL 0x1C16F10
	0x03D05624 MOV X1, X31
	0x03D05628 MOV X20, X0
	0x03D0562C BL 0x3E1B6CC
	0x03D05630 CBZ X20, 0x3D056BC
	0x03D05634 ADRP X8, 0x45E000
	0x03D05638 LDR X8, [X8 + 0x290]
	0x03D0563C LDR X8, [X8]
	0x03D05640 STR X8, [X20 + 0x10]
	0x03D05644 STR X20, [X19 + 0x98]
	0x03D05648 LDR X0, [X21]
	0x03D0564C BL 0x1C16F10
	0x03D05650 MOV X1, X31
	0x03D05654 MOV X20, X0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6E3000
	007 Move W8, [X21+2078]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x419000
	015 Move X0, [X0+3864]
	016 Call 0x1C17CF4
	017 Move X0, 0x419000
	018 Move X0, [X0+1664]
	019 Call 0x1C17CF4
	020 Move X0, 0x3EF000
	021 Move X0, [X0+1448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2078], W8
	025 Move [X31+12], W31
	026 Move W8, [X19+1080]
	027 Compare W8, 0
	028 JumpIfNotEqual {97}
	029 Compare X20, 0
	030 JumpIfEqual {103}
	031 Move X0, X20
	032 Move X1, X31
	033 Call CustomStyleResolvedEvent.get_customStyle, X0
	034 Move X21, 0x419000
	035 Move X21, [X21+3864]
	036 Move X20, X0
	037 Move X8, [X21]
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Compare X20, 0
	044 JumpIfEqual {103}
	045 Move X9, [X21]
	046 Move X11, 0x419000
	047 Move X8, [X20]
	048 Move X10, [X9+184]
	049 Move X11, [X11+1664]
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X21, [X10+32]
	052 Move X1, [X11]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 1
	062 Move X0, X20
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 1
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X3, [X0+8]
	070 Add X2, X31, 12
	071 Move X0, X20
	072 Move X1, X21
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {97}
	078 Move X8, 0x3EF000
	079 Move X8, [X8+1448]
	080 Move V8, [X19+1076]
	081 Move W20, [X31+12]
	082 Move X0, [X8]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 NotImplemented "Instruction SCVTF not yet implemented."
	088 Move W8, 1
	089 NotImplemented "Instruction FABD not yet implemented."
	090 Move S1, W8
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 Move V0, [X31+12]
	093 Move X0, X19
	094 NotImplemented "Instruction SCVTF not yet implemented."
	095 Move [X19+1076], S0
	096 Call BaseVerticalCollectionView.RefreshItems, X0
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X30, [X31+16]
	100 Move X21, [X31+24]
	101 Move V8, [X31+48]
	102 Return 
	103 Call 0x1C17F20

Method: System.Void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()

Disassembly:
	0x03D05658 BL 0x3E1B6CC

ISIL:
	001 Return 

Method: System.Void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()

Disassembly:
	0x03D0565C CBZ X20, 0x3D056BC

ISIL:
	001 Call BaseVerticalCollectionView.RefreshItems, X0
	002 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D05660 ADRP X8, 0x45E000
	0x03D05664 LDR X8, [X8 + 0x298]
	0x03D05668 LDR X8, [X8]
	0x03D0566C STR X8, [X20 + 0x10]
	0x03D05670 STR X20, [X19 + 0xA0]
	0x03D05674 LDR X0, [X21]
	0x03D05678 BL 0x1C16F10
	0x03D0567C MOV X1, X31
	0x03D05680 MOV X20, X0
	0x03D05684 BL 0x3E1B6CC
	0x03D05688 CBZ X20, 0x3D056BC
	0x03D0568C ADRP X8, 0x45E000
	0x03D05690 LDR X8, [X8 + 0x2A0]
	0x03D05694 ADRP X9, 0x45E000
	0x03D05698 MOV X0, X19
	0x03D0569C LDR X8, [X8]
	0x03D056A0 LDR X9, [X9 + 0x278]
	0x03D056A4 STR X8, [X20 + 0x10]
	0x03D056A8 STR X20, [X19 + 0xA8]
	0x03D056AC LDR X1, [X9]
	0x03D056B0 LDP X20, X19, [X31 + 0x10]
	0x03D056B4 LDP X30, X21, [X31], #0x20
	0x03D056B8 B 0x2738B44
	0x03D056BC BL 0x1C16F20
	0x03D056C0 MOV X1, X31
	0x03D056C4 B 0x3D056C8
	0x03D056C8 STR X30, [X31 - 0x50]!
	0x03D056CC STP X26, X25, [X31 + 0x10]
	0x03D056D0 STP X24, X23, [X31 + 0x20]
	0x03D056D4 STP X22, X21, [X31 + 0x30]
	0x03D056D8 STP X20, X19, [X31 + 0x40]
	0x03D056DC ADRP X22, 0x6E2000
	0x03D056E0 ADRP X21, 0x45E000
	0x03D056E4 LDRB W8, [X22 + 0x82D]
	0x03D056E8 LDR X21, [X21 + 0x2A8]
	0x03D056EC MOV X20, X1
	0x03D056F0 MOV X19, X0
	0x03D056F4 TBNZ X8, 0x0, 0x3D057A8
	0x03D056F8 ADRP X0, 0x45E000
	0x03D056FC LDR X0, [X0 + 0x2B0]
	0x03D05700 BL 0x1C16CF4
	0x03D05704 ADRP X0, 0x45E000
	0x03D05708 LDR X0, [X0 + 0x2B8]
	0x03D0570C BL 0x1C16CF4
	0x03D05710 ADRP X0, 0x45E000
	0x03D05714 LDR X0, [X0 + 0x2C0]
	0x03D05718 BL 0x1C16CF4
	0x03D0571C ADRP X0, 0x45E000
	0x03D05720 LDR X0, [X0 + 0x2A8]
	0x03D05724 BL 0x1C16CF4
	0x03D05728 ADRP X0, 0x45E000
	0x03D0572C LDR X0, [X0 + 0x2C8]
	0x03D05730 BL 0x1C16CF4
	0x03D05734 ADRP X0, 0x45E000
	0x03D05738 LDR X0, [X0 + 0x2D0]
	0x03D0573C BL 0x1C16CF4
	0x03D05740 ADRP X0, 0x45E000
	0x03D05744 LDR X0, [X0 + 0x2D8]
	0x03D05748 BL 0x1C16CF4
	0x03D0574C ADRP X0, 0x45E000
	0x03D05750 LDR X0, [X0 + 0x2E0]
	0x03D05754 BL 0x1C16CF4
	0x03D05758 ADRP X0, 0x45E000
	0x03D0575C LDR X0, [X0 + 0x2E8]
	0x03D05760 BL 0x1C16CF4
	0x03D05764 ADRP X0, 0x45E000
	0x03D05768 LDR X0, [X0 + 0x2F0]
	0x03D0576C BL 0x1C16CF4
	0x03D05770 ADRP X0, 0x45E000
	0x03D05774 LDR X0, [X0 + 0x2F8]
	0x03D05778 BL 0x1C16CF4
	0x03D0577C ADRP X0, 0x3F2000
	0x03D05780 LDR X0, [X0 + 0x468]
	0x03D05784 BL 0x1C16CF4
	0x03D05788 ADRP X0, 0x45E000
	0x03D0578C LDR X0, [X0 + 0x300]
	0x03D05790 BL 0x1C16CF4
	0x03D05794 ADRP X0, 0x3FB000
	0x03D05798 LDR X0, [X0 + 0x840]
	0x03D0579C BL 0x1C16CF4
	0x03D057A0 MOVZ W8, 0x1
	0x03D057A4 STRB W8, [X22 + 0x82D]
	0x03D057A8 LDR X0, [X21]
	0x03D057AC STR X31, [X31 + 0x8]
	0x03D057B0 ADRP X21, 0x45E000
	0x03D057B4 ADRP X22, 0x45E000
	0x03D057B8 LDR W8, [X0 + 0xE0]
	0x03D057BC LDR X21, [X21 + 0x2B0]
	0x03D057C0 LDR X22, [X22 + 0x2C0]
	0x03D057C4 CBNZ W8, 0x3D057CC
	0x03D057C8 BL 0x1C16DFC
	0x03D057CC LDR X3, [X21]
	0x03D057D0 MOV X0, X19
	0x03D057D4 MOV X1, X20
	0x03D057D8 MOV X2, X31
	0x03D057DC BL 0x27786D0
	0x03D057E0 MOV X0, X19
	0x03D057E4 MOV W1, W31
	0x03D057E8 MOV X2, X31
	0x03D057EC BL 0x3DAED80
	0x03D057F0 LDR X1, [X22]
	0x03D057F4 MOV X0, X19
	0x03D057F8 BL 0x2777B80
	0x03D057FC CBZ X0, 0x3D05A3C
	0x03D05800 ADRP X23, 0x45E000
	0x03D05804 LDR X23, [X23 + 0x2D8]
	0x03D05808 STRB W31, [X0 + 0x20]
	0x03D0580C LDR X0, [X23]
	0x03D05810 LDR W8, [X0 + 0xE0]
	0x03D05814 CBNZ W8, 0x3D05820
	0x03D05818 BL 0x1C16DFC
	0x03D0581C LDR X0, [X23]
	0x03D05820 LDR X8, [X0 + 0xB8]
	0x03D05824 MOV X0, X19
	0x03D05828 MOV X2, X31
	0x03D0582C LDR X1, [X8]
	0x03D05830 BL 0x3DF1C70
	0x03D05834 LDR X1, [X22]
	0x03D05838 MOV X0, X19
	0x03D0583C BL 0x2777B80
	0x03D05840 CBZ X0, 0x3D05A3C
	0x03D05844 LDR X8, [X23]
	0x03D05848 MOV X2, X31
	0x03D0584C LDR X8, [X8 + 0xB8]
	0x03D05850 LDR X1, [X8 + 0x10]
	0x03D05854 BL 0x3DF1C70
	0x03D05858 LDR X0, [X19 + 0x410]
	0x03D0585C CBZ X0, 0x3D05A3C
	0x03D05860 LDR X8, [X23]
	0x03D05864 ADRP X25, 0x45E000
	0x03D05868 ADRP X20, 0x3F2000
	0x03D0586C MOV X2, X31
	0x03D05870 LDR X8, [X8 + 0xB8]
	0x03D05874 LDR X1, [X8 + 0x8]
	0x03D05878 LDR X25, [X25 + 0x2F0]
	0x03D0587C LDR X20, [X20 + 0x468]
	0x03D05880 BL 0x3DF1C70
	0x03D05884 LDR X0, [X25]
	0x03D05888 BL 0x1C16F10
	0x03D0588C LDR X1, [X20]
	0x03D05890 MOV X20, X0
	0x03D05894 BL 0x3D05A40
	0x03D05898 STR X20, [X19 + 0x450]
	0x03D0589C CBZ X20, 0x3D05A3C
	0x03D058A0 ADRP X8, 0x45E000
	0x03D058A4 LDR X8, [X8 + 0x2F8]
	0x03D058A8 MOV X0, X20
	0x03D058AC MOV X2, X31
	0x03D058B0 LDR X1, [X8]
	0x03D058B4 BL 0x3DEF278
	0x03D058B8 LDR X0, [X19 + 0x450]
	0x03D058BC CBZ X0, 0x3D05A3C
	0x03D058C0 MOVZ W1, 0x1
	0x03D058C4 MOV X2, X31
	0x03D058C8 BL 0x3DAED80
	0x03D058CC LDR X0, [X19 + 0x450]
	0x03D058D0 CBZ X0, 0x3D05A3C
	0x03D058D4 LDR X8, [X23]
	0x03D058D8 ADRP X26, 0x45E000
	0x03D058DC ADRP X21, 0x45E000
	0x03D058E0 ADRP X24, 0x45E000
	0x03D058E4 LDR X8, [X8 + 0xB8]
	0x03D058E8 MOV X2, X31
	0x03D058EC LDR X1, [X8 + 0x18]
	0x03D058F0 LDR X26, [X26 + 0x2E0]
	0x03D058F4 LDR X21, [X21 + 0x2C8]
	0x03D058F8 LDR X24, [X24 + 0x2E8]
	0x03D058FC BL 0x3DF1C70
	0x03D05900 LDR X0, [X26]
	0x03D05904 LDR X20, [X19 + 0x450]
	0x03D05908 BL 0x1C16F10
	0x03D0590C LDR X2, [X21]
	0x03D05910 MOV X1, X19
	0x03D05914 MOV X3, X31
	0x03D05918 MOV X21, X0
	0x03D0591C BL 0x2D0E824
	0x03D05920 LDR X2, [X24]
	0x03D05924 MOV X0, X20
	0x03D05928 MOV X1, X21
	0x03D0592C BL 0x21EF46C
	0x03D05930 LDR X1, [X22]
	0x03D05934 MOV X0, X19
	0x03D05938 BL 0x2777B80
	0x03D0593C CBZ X0, 0x3D05A3C
	0x03D05940 LDR X8, [X0 + 0x378]
	0x03D05944 ADRP X20, 0x3FB000
	0x03D05948 ADD X0, X31, 0x8
	0x03D0594C MOV X2, X31
	0x03D05950 STR X8, [X31 + 0x8]
	0x03D05954 LDR X1, [X19 + 0x450]
	0x03D05958 LDR X20, [X20 + 0x840]
	0x03D0595C BL 0x3DF891C
	0x03D05960 LDR X0, [X25]
	0x03D05964 BL 0x1C16F10
	0x03D05968 LDR X1, [X20]
	0x03D0596C MOV X20, X0
	0x03D05970 BL 0x3D05A40
	0x03D05974 STR X20, [X19 + 0x458]
	0x03D05978 CBZ X20, 0x3D05A3C
	0x03D0597C ADRP X8, 0x45E000
	0x03D05980 LDR X8, [X8 + 0x300]
	0x03D05984 MOV X0, X20
	0x03D05988 MOV X2, X31
	0x03D0598C LDR X1, [X8]
	0x03D05990 BL 0x3DEF278
	0x03D05994 LDR X0, [X19 + 0x458]
	0x03D05998 CBZ X0, 0x3D05A3C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X26, 0x6E3000
	015 Move X27, 0x45F000
	016 Move X20, 0x419000
	017 Move X25, 0x45F000
	018 Move X24, 0x45F000
	019 Move X19, 0x45F000
	020 Move X22, 0x45F000
	021 Move X23, 0x45F000
	022 Move X21, 0x45F000
	023 Move X29, 0x45F000
	024 Move X28, 0x45E000
	025 Move X27, [X27+288]
	026 Move X20, [X20+3864]
	027 Move X25, [X25+296]
	028 Move X24, [X24+304]
	029 Move X19, [X19+312]
	030 Move X22, [X22+320]
	031 Move X23, [X23+328]
	032 Move X21, [X21+336]
	033 Move X29, [X29+344]
	034 Move X28, [X28+3680]
	035 Move W8, [X26+2079]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {93}
	040 Move X0, 0x419000
	041 Move X0, [X0+3864]
	042 Call 0x1C17CF4
	043 Move X0, 0x45F000
	044 Move X0, [X0+328]
	045 Call 0x1C17CF4
	046 Move X0, 0x45F000
	047 Move X0, [X0+312]
	048 Call 0x1C17CF4
	049 Move X0, 0x45F000
	050 Move X0, [X0+304]
	051 Call 0x1C17CF4
	052 Move X0, 0x45F000
	053 Move X0, [X0+336]
	054 Call 0x1C17CF4
	055 Move X0, 0x45F000
	056 Move X0, [X0+296]
	057 Call 0x1C17CF4
	058 Move X0, 0x45F000
	059 Move X0, [X0+352]
	060 Call 0x1C17CF4
	061 Move X0, 0x45E000
	062 Move X0, [X0+3680]
	063 Call 0x1C17CF4
	064 Move X0, 0x45F000
	065 Move X0, [X0+344]
	066 Call 0x1C17CF4
	067 Move X0, 0x45F000
	068 Move X0, [X0+320]
	069 Call 0x1C17CF4
	070 Move X0, 0x45F000
	071 Move X0, [X0+360]
	072 Call 0x1C17CF4
	073 Move X0, 0x45F000
	074 Move X0, [X0+368]
	075 Call 0x1C17CF4
	076 Move X0, 0x45F000
	077 Move X0, [X0+376]
	078 Call 0x1C17CF4
	079 Move X0, 0x45F000
	080 Move X0, [X0+384]
	081 Call 0x1C17CF4
	082 Move X0, 0x45F000
	083 Move X0, [X0+392]
	084 Call 0x1C17CF4
	085 Move X0, 0x45F000
	086 Move X0, [X0+288]
	087 Call 0x1C17CF4
	088 Move X0, 0x45F000
	089 Move X0, [X0+400]
	090 Call 0x1C17CF4
	091 Move W8, 1
	092 Move [X26+2079], W8
	093 Move X0, [X27]
	094 Move W1, 1
	095 Move W2, W31
	096 Move W3, W31
	097 Move X4, X31
	098 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	099 Move X8, [X20]
	100 Move W1, 1
	101 Move W2, W31
	102 Move W3, W31
	103 Move X8, [X8+184]
	104 Move X4, X31
	105 Move [X8], X0
	106 Move X0, [X25]
	107 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	108 Move X8, [X20]
	109 Move X8, [X8+184]
	110 Move [X8+8], X0
	111 Move X0, [X24]
	112 Call 0x1C17F10
	113 Move X1, [X19]
	114 Move X19, X0
	115 Call List`1<Object>..ctor, X0
	116 Move X8, [X20]
	117 Move W9, 22
	118 Add X0, X31, 8
	119 Move X8, [X8+184]
	120 Move [X8+16], X19
	121 Move [X8+24], W9
	122 Move X1, [X22]
	123 Move X2, [X23]
	124 Move [X31+8], X31
	125 Call CustomStyleProperty`1<Int32>..ctor, X0, X1
	126 Move X8, [X20]
	127 Move X9, [X31+8]
	128 Move X2, X31
	129 Move X10, [X8+184]
	130 Move [X10+32], X9
	131 Move X8, [X8+184]
	132 Move X0, [X21]
	133 Move [X8+40], X0
	134 Move X1, [X29]
	135 Call String.Concat, X0, X1
	136 Move X8, [X20]
	137 Move X2, X31
	138 Move X8, [X8+184]
	139 Move [X8+48], X0
	140 Move X0, [X8+40]
	141 Move X1, [X28]
	142 Call String.Concat, X0, X1
	143 Move X8, [X20]
	144 Move X2, X31
	145 Move X8, [X8+184]
	146 Move [X8+56], X0
	147 Move X0, [X8+40]
	148 Move X8, 0x45F000
	149 Move X8, [X8+400]
	150 Move X1, [X8]
	151 Call String.Concat, X0, X1
	152 Move X8, [X20]
	153 Move X2, X31
	154 Move X8, [X8+184]
	155 Move [X8+64], X0
	156 Move X0, [X8+40]
	157 Move X8, 0x45F000
	158 Move X8, [X8+360]
	159 Move X1, [X8]
	160 Call String.Concat, X0, X1
	161 Move X8, [X20]
	162 Move X2, X31
	163 Move X8, [X8+184]
	164 Move [X8+72], X0
	165 Move X0, [X8+56]
	166 Move X8, 0x45F000
	167 Move X8, [X8+392]
	168 Move X1, [X8]
	169 Call String.Concat, X0, X1
	170 Move X8, [X20]
	171 Move X2, X31
	172 Move X8, [X8+184]
	173 Move [X8+80], X0
	174 Move X0, [X8+56]
	175 Move X8, 0x45F000
	176 Move X8, [X8+368]
	177 Move X1, [X8]
	178 Call String.Concat, X0, X1
	179 Move X8, [X20]
	180 Move X2, X31
	181 Move X8, [X8+184]
	182 Move [X8+88], X0
	183 Move X0, [X8+56]
	184 Move X8, 0x45F000
	185 Move X8, [X8+376]
	186 Move X1, [X8]
	187 Call String.Concat, X0, X1
	188 Move X8, [X20]
	189 Move X2, X31
	190 Move X8, [X8+184]
	191 Move [X8+96], X0
	192 Move X0, [X8+40]
	193 Move X8, 0x45F000
	194 Move X8, [X8+352]
	195 Move X1, [X8]
	196 Call String.Concat, X0, X1
	197 Move X8, [X20]
	198 Move X2, X31
	199 Move X8, [X8+184]
	200 Move [X8+104], X0
	201 Move X0, [X8+40]
	202 Move X8, 0x45F000
	203 Move X8, [X8+384]
	204 Move X1, [X8]
	205 Call String.Concat, X0, X1
	206 Move X8, [X20]
	207 Move X20, [X31+96]
	208 Move X19, [X31+104]
	209 Move X22, [X31+80]
	210 Move X21, [X31+88]
	211 Move X24, [X31+64]
	212 Move X23, [X31+72]
	213 Move X8, [X8+184]
	214 Move X26, [X31+48]
	215 Move X25, [X31+56]
	216 Move X28, [X31+32]
	217 Move X27, [X31+40]
	218 Move X29, [X31+16]
	219 Move X30, [X31+24]
	220 Move [X8+112], X0
	221 Add X31, X31, 112
	222 Return 

Method: System.Void <.ctor>b__158_0(System.Single v)

Disassembly:
	0x03D0599C MOVZ W1, 0x1
	0x03D059A0 MOV X2, X31
	0x03D059A4 BL 0x3DAED80

ISIL:
	001 Move V1, V0
	002 Move S0, W31
	003 Call BaseVerticalCollectionView.OnScroll, X0, X1
	004 Return 

Method: System.Void <RefreshSelection>g__NotifyIfChanged|170_0(ref UnityEngine.UIElements.BaseVerticalCollectionView/<>c__DisplayClass170_0 param_0)

Disassembly:
	0x03D012F4 CBNZ X24, 0x3D014E0
	0x03D012F8 CMP W29, 0x9
	0x03D012FC B.EQ 0x3D01304
	0x03D01300 CBNZ W29, 0x3D01494
	0x03D01304 LDR X0, [X19 + 0x468]
	0x03D01308 CBZ X0, 0x3D014DC
	0x03D0130C ADRP X8, 0x3F6000
	0x03D01310 LDR X8, [X8 + 0xB68]
	0x03D01314 MOV W1, W22
	0x03D01318 LDR X2, [X8]
	0x03D0131C BL 0x2FDCA84
	0x03D01320 TBNZ X0, 0x0, 0x3D01444
	0x03D01324 LDR X0, [X19 + 0x468]
	0x03D01328 CBZ X0, 0x3D014DC
	0x03D0132C ADRP X9, 0x3F3000
	0x03D01330 LDR W10, [X0 + 0x1C]
	0x03D01334 LDR X8, [X0 + 0x10]
	0x03D01338 LDR X9, [X9 + 0xE10]
	0x03D0133C ADD W10, W10, 0x1
	0x03D01340 LDR X9, [X9]
	0x03D01344 STR W10, [X0 + 0x1C]
	0x03D01348 CBZ X8, 0x3D014DC
	0x03D0134C LDRSW X10, [X0 + 0x18]
	0x03D01350 LDR W11, [X8 + 0x18]
	0x03D01354 CMP W10, W11
	0x03D01358 B.CS 0x3D01370
	0x03D0135C ADD W9, W10, 0x1
	0x03D01360 ADD X8, X8, X10, 0x2, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6E7000
	006 Move W8, [X21+2080]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3F4000
	014 Move X0, [X0+3624]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2080], W8
	018 Move W8, [X20]
	019 Compare W8, 0
	020 JumpIfNotEqual {32}
	021 Move X8, [X19+1136]
	022 Compare X8, 0
	023 JumpIfEqual {39}
	024 Move W8, [X8+24]
	025 Move W9, [X20+16]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call BaseVerticalCollectionView.NotifyOfSelectionChange, X0
	038 Return 
	039 Call 0x1C17F20

Method: System.Void <Apply>g__HandleSelectionAndScroll|181_0(System.Int32 index, ref UnityEngine.UIElements.BaseVerticalCollectionView/<>c__DisplayClass181_0 param_1)

Disassembly:
	0x03D02574 STP X22, X21, [X31 + 0x30]
	0x03D02578 STP X20, X19, [X31 + 0x40]
	0x03D0257C ADRP X20, 0x6E5000
	0x03D02580 LDRB W8, [X20 + 0x811]
	0x03D02584 MOV W21, W3
	0x03D02588 MOV W22, W2
	0x03D0258C MOV W23, W1
	0x03D02590 MOV V8.16B, V1.16B
	0x03D02594 MOV V9.16B, V0.16B
	0x03D02598 MOV X19, X0
	0x03D0259C TBNZ X8, 0x0, 0x3D02614
	0x03D025A0 ADRP X0, 0x41C000
	0x03D025A4 LDR X0, [X0 + 0xBB0]
	0x03D025A8 BL 0x1C16CF4
	0x03D025AC ADRP X0, 0x44B000
	0x03D025B0 LDR X0, [X0 + 0xAA8]
	0x03D025B4 BL 0x1C16CF4
	0x03D025B8 ADRP X0, 0x3F8000
	0x03D025BC LDR X0, [X0 + 0x2F0]
	0x03D025C0 BL 0x1C16CF4
	0x03D025C4 ADRP X0, 0x3F1000
	0x03D025C8 LDR X0, [X0 + 0xE00]
	0x03D025CC BL 0x1C16CF4
	0x03D025D0 ADRP X0, 0x419000
	0x03D025D4 LDR X0, [X0 + 0x7B8]
	0x03D025D8 BL 0x1C16CF4
	0x03D025DC ADRP X0, 0x419000
	0x03D025E0 LDR X0, [X0 + 0x7C0]
	0x03D025E4 BL 0x1C16CF4
	0x03D025E8 ADRP X0, 0x3F1000
	0x03D025EC LDR X0, [X0 + 0xE18]
	0x03D025F0 BL 0x1C16CF4
	0x03D025F4 ADRP X0, 0x3F5000
	0x03D025F8 LDR X0, [X0 + 0xB68]
	0x03D025FC BL 0x1C16CF4
	0x03D02600 ADRP X0, 0x3F2000
	0x03D02604 LDR X0, [X0 + 0xE28]
	0x03D02608 BL 0x1C16CF4
	0x03D0260C MOVZ W8, 0x1
	0x03D02610 STRB W8, [X20 + 0x811]
	0x03D02614 LDR X0, [X19 + 0x450]
	0x03D02618 CBNZ X0, 0x3D02634
	0x03D0261C LDR X8, [X19]
	0x03D02620 MOV X0, X19
	0x03D02624 LDR X9, [X8 + 0x7B8]
	0x03D02628 LDR X1, [X8 + 0x7C0]
	0x03D0262C BLR X9
	0x03D02630 LDR X0, [X19 + 0x450]
	0x03D02634 CBZ X0, 0x3D02AE0
	0x03D02638 LDR X8, [X0]
	0x03D0263C ADRP X20, 0x41C000
	0x03D02640 MOV V0.16B, V9.16B
	0x03D02644 MOV V1.16B, V8.16B
	0x03D02648 LDP X9, X1, [X8 + 0x1E8]
	0x03D0264C LDR X20, [X20 + 0xBB0]
	0x03D02650 BLR X9
	0x03D02654 LDR X8, [X19 + 0x470]
	0x03D02658 LDR X1, [X20]
	0x03D0265C MOV W20, W0
	0x03D02660 MOV X0, X8
	0x03D02664 BL 0x21BCD2C
	0x03D02668 CMP W0, 0x1
	0x03D0266C B.LT 0x3D0268C
	0x03D02670 ADRP X8, 0x44B000
	0x03D02674 LDR X8, [X8 + 0xAA8]
	0x03D02678 LDR X0, [X19 + 0x470]
	0x03D0267C LDR X1, [X8]
	0x03D02680 BL 0x21C2B84
	0x03D02684 CMP W0, W20
	0x03D02688 B.NE 0x3D0269C
	0x03D0268C CMP W23, 0x2
	0x03D02690 MOVZ W8, 0x2
	0x03D02694 CSEL W24, W23, W8, LT
	0x03D02698 B 0x3D026A0
	0x03D0269C MOVZ W24, 0x1
	0x03D026A0 LDR X0, [X19 + 0x448]
	0x03D026A4 CBZ X0, 0x3D02AE0
	0x03D026A8 LDR X8, [X0]
	0x03D026AC LDP X9, X1, [X8 + 0x188]
	0x03D026B0 BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6E6000
	007 Move W8, [X22+2081]
	008 Move X21, X2
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x3F9000
	016 Move X0, [X0+752]
	017 Call 0x1C17CF4
	018 Move X0, 0x3F3000
	019 Move X0, [X0+3624]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2081], W8
	023 Move TEMP, X19
	024 And TEMP, TEMP, -2147483648
	025 Compare TEMP, -2147483648
	026 JumpIfEqual {76}
	027 Move X0, [X20+1096]
	028 Compare X0, 0
	029 JumpIfEqual {94}
	030 Move X8, [X0]
	031 Move X9, [X8+392]
	032 Move X1, [X8+400]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Compare X0, 0
	035 JumpIfEqual {94}
	036 Move X10, 0x3F9000
	037 Move X8, [X0]
	038 Move X10, [X10+752]
	039 Move X22, X0
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move W2, 1
	051 Move X0, X22
	052 Call 0x1C5D788
	053 Move W9, [X10]
	054 Add W9, W9, 1
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X22
	060 NotImplemented "Instruction BLR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W8, [X20+1064]
	063 Move W9, [X21+8]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 And W31, W8, W9
	067 Move X8, [X20+1136]
	068 Compare X8, 0
	069 JumpIfEqual {94}
	070 Move W8, [X8+24]
	071 Compare W8, 0
	072 JumpIfEqual {82}
	073 Move X0, X20
	074 Move W1, W19
	075 Call BaseVerticalCollectionView.DoRangeSelection, X0, X1
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X30, [X31+48]
	081 Return 
	082 Move X0, X20
	083 Move W1, W19
	084 Call BaseVerticalCollectionView.SetSelection, X0, X1
	085 Move X0, X20
	086 Move W1, W19
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Call BaseVerticalCollectionView.ScrollToItem, X0, X1
	093 Return 
	094 Call 0x1C17F20

