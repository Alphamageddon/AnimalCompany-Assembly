Type: UnityEngine.UIElements.BackgroundPosition

Method: System.Void .ctor(UnityEngine.UIElements.BackgroundPositionKeyword keyword)

Disassembly:
	0x03CEA22C LDP X20, X19, [X31 + 0x10]
	0x03CEA230 LDR X0, [X8 + 0x10]
	0x03CEA234 LDR X30, [X31], #0x20
	0x03CEA238 RET
	0x03CEA23C STR X30, [X31 - 0x20]!
	0x03CEA240 STP X20, X19, [X31 + 0x10]
	0x03CEA244 ADRP X20, 0x6FD000
	0x03CEA248 ADRP X19, 0x478000
	0x03CEA24C LDRB W8, [X20 + 0x732]
	0x03CEA250 LDR X19, [X19 + 0x7B8]
	0x03CEA254 TBNZ X8, 0x0, 0x3CEA26C
	0x03CEA258 ADRP X0, 0x478000
	0x03CEA25C LDR X0, [X0 + 0x7B8]
	0x03CEA260 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move [X0], W1
	006 Add X0, X31, 8
	007 Move S0, W31
	008 Move X1, X31
	009 Move [X31+8], X31
	010 Call Length..ctor, X0, V0
	011 Move X8, [X31+8]
	012 Move [X19+4], X8
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Add X31, X31, 32
	016 Return 

Method: System.Void .ctor(UnityEngine.UIElements.BackgroundPositionKeyword keyword, UnityEngine.UIElements.Length offset)

Disassembly:
	0x03CEA264 MOVZ W8, 0x1
	0x03CEA268 STRB W8, [X20 + 0x732]
	0x03CEA26C LDR X0, [X19]

ISIL:
	001 Move [X0], W1
	002 Move [X0+4], X2
	003 Return 

Method: UnityEngine.UIElements.BackgroundPosition Initial()

Disassembly:
	0x03CEA270 LDR W8, [X0 + 0xE0]
	0x03CEA274 CBNZ W8, 0x3CEA280
	0x03CEA278 BL 0x1C16DFC
	0x03CEA27C LDR X0, [X19]
	0x03CEA280 LDR X8, [X0 + 0xB8]
	0x03CEA284 LDP X20, X19, [X31 + 0x10]
	0x03CEA288 LDRB W0, [X8 + 0x30]
	0x03CEA28C LDR X30, [X31], #0x20
	0x03CEA290 RET
	0x03CEA294 STP X30, X21, [X31 - 0x20]!
	0x03CEA298 STP X20, X19, [X31 + 0x10]
	0x03CEA29C ADRP X19, 0x6FD000
	0x03CEA2A0 ADRP X21, 0x478000

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X31
	004 Add X0, X31, 24
	005 Move S0, W31
	006 Move X1, X31
	007 Move [X31+8], W31
	008 Move [X31], X31
	009 Call Length..ctor, X0, V0
	010 Move X30, [X31+16]
	011 Move X8, [X31+24]
	012 Move [X31+4], X8
	013 Move X0, [X31+32]
	014 Move X1, X8
	015 ShiftRight X1, 32
	016 And X1, X1, 0x7FFFFFFF
	017 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03CEA2D8 MOV X0, X20
	0x03CEA2DC BL 0x1C16E00
	0x03CEA2E0 CBZ X0, 0x3CEA384
	0x03CEA2E4 LDR X8, [X0]
	0x03CEA2E8 LDR X1, [X21]
	0x03CEA2EC MOV X19, X0
	0x03CEA2F0 LDRH W9, [X8 + 0x12E]
	0x03CEA2F4 CBZ X9, 0x3CEA318
	0x03CEA2F8 LDR X10, [X8 + 0xB0]
	0x03CEA2FC ADD X10, X10, 0x8
	0x03CEA300 LDUR X11, [X10 - 0x8]
	0x03CEA304 CMP X11, X1
	0x03CEA308 B.EQ 0x3CEA328
	0x03CEA30C SUBS X9, X9, 0x1
	0x03CEA310 ADD X10, X10, 0x10
	0x03CEA314 B.NE 0x3CEA300
	0x03CEA318 MOV X0, X19
	0x03CEA31C MOV W2, W31
	0x03CEA320 BL 0x1C5C788
	0x03CEA324 B 0x3CEA334
	0x03CEA328 LDRSW X9, [X10]
	0x03CEA32C ADD X8, X8, X9, 0x4, LSL
	0x03CEA330 ADD X0, X8, 0x138
	0x03CEA334 LDP X8, X1, [X0]
	0x03CEA338 MOV X0, X19
	0x03CEA33C BLR X8
	0x03CEA340 CBZ X0, 0x3CEA384
	0x03CEA344 LDR X8, [X19]
	0x03CEA348 LDR X1, [X21]
	0x03CEA34C LDRH W9, [X8 + 0x12E]
	0x03CEA350 CBZ X9, 0x3CEA374

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6FE000
	006 Move W8, [X21+1831]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x435000
	014 Move X0, [X0+3552]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1831], W8
	018 Compare X20, 0
	019 JumpIfEqual {25}
	020 Move X8, 0x435000
	021 Move X8, [X8+3552]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W0, W31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Move X0, X20
	032 Call 0x1C17E08
	033 Move X1, [X0]
	034 Move W2, [X0+8]
	035 Move X0, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]

Method: System.Boolean Equals(UnityEngine.UIElements.BackgroundPosition other)

Disassembly:
	0x03CEA354 LDR X10, [X8 + 0xB0]
	0x03CEA358 ADD X10, X10, 0x8
	0x03CEA35C LDUR X11, [X10 - 0x8]
	0x03CEA360 CMP X11, X1
	0x03CEA364 B.EQ 0x3CEA3AC
	0x03CEA368 SUBS X9, X9, 0x1
	0x03CEA36C ADD X10, X10, 0x10
	0x03CEA370 B.NE 0x3CEA35C
	0x03CEA374 MOV X0, X19
	0x03CEA378 MOV W2, W31
	0x03CEA37C BL 0x1C5C788
	0x03CEA380 B 0x3CEA3B8
	0x03CEA384 ADRP X8, 0x478000
	0x03CEA388 LDR X8, [X8 + 0x7B8]
	0x03CEA38C LDR X0, [X8]
	0x03CEA390 LDR W8, [X0 + 0xE0]
	0x03CEA394 CBNZ W8, 0x3CEA39C
	0x03CEA398 BL 0x1C16DFC
	0x03CEA39C MOV X0, X20
	0x03CEA3A0 LDP X20, X19, [X31 + 0x10]
	0x03CEA3A4 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, X0
	006 Move [X31], X1
	007 Move [X31+8], W2
	008 Move X19, X1
	009 NotImplemented "Instruction LDUR not yet implemented."
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 Move X2, X31
	012 Call Length.op_Equality, X0, X1
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {20}
	017 Move W8, [X20]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CSET not yet implemented."
	020 Move W0, W31
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X30, [X31+16]
	024 Add X31, X31, 48
	025 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03CEA3A8 B 0x3CEA3CC
	0x03CEA3AC LDRSW X9, [X10]
	0x03CEA3B0 ADD X8, X8, X9, 0x4, LSL
	0x03CEA3B4 ADD X0, X8, 0x138
	0x03CEA3B8 LDP X2, X1, [X0]
	0x03CEA3BC MOV X0, X19
	0x03CEA3C0 LDP X20, X19, [X31 + 0x10]
	0x03CEA3C4 LDP X30, X21, [X31], #0x20
	0x03CEA3C8 BR X2
	0x03CEA3CC STP X30, X21, [X31 - 0x20]!
	0x03CEA3D0 STP X20, X19, [X31 + 0x10]
	0x03CEA3D4 ADRP X21, 0x6FD000
	0x03CEA3D8 ADRP X20, 0x478000
	0x03CEA3DC LDRB W8, [X21 + 0x736]
	0x03CEA3E0 LDR X20, [X20 + 0x7B8]
	0x03CEA3E4 MOV X19, X0
	0x03CEA3E8 TBNZ X8, 0x0, 0x3CEA40C
	0x03CEA3EC ADRP X0, 0x478000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X1, X31
	005 Move X19, X0
	006 Call Int32.GetHashCode, X0
	007 Move W20, W0
	008 Add X0, X19, 4
	009 Move X1, X31
	010 Call Length.GetHashCode, X0
	011 Move W8, 0x5529
	012 NotImplemented "Instruction MOVK not yet implemented."
	013 NotImplemented "Instruction MADD not yet implemented."
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move W9, 0xA091
	017 NotImplemented "Instruction MOVK not yet implemented."
	018 Add W0, W8, W9
	019 Move X30, [X31+32]
	020 Return X0

Method: System.Boolean op_Equality(UnityEngine.UIElements.BackgroundPosition style1, UnityEngine.UIElements.BackgroundPosition style2)

Disassembly:
	0x03CEA3F0 LDR X0, [X0 + 0x7C0]
	0x03CEA3F4 BL 0x1C16CF4
	0x03CEA3F8 ADRP X0, 0x478000
	0x03CEA3FC LDR X0, [X0 + 0x7B8]
	0x03CEA400 BL 0x1C16CF4
	0x03CEA404 MOVZ W8, 0x1
	0x03CEA408 STRB W8, [X21 + 0x736]
	0x03CEA40C LDR X0, [X20]
	0x03CEA410 LDR W8, [X0 + 0xE0]
	0x03CEA414 CBNZ W8, 0x3CEA41C
	0x03CEA418 BL 0x1C16DFC
	0x03CEA41C CBZ X19, 0x3CEA450
	0x03CEA420 LDR X8, [X20]
	0x03CEA424 ADRP X20, 0x478000
	0x03CEA428 MOV X0, X19
	0x03CEA42C MOV X2, X31
	0x03CEA430 LDR X8, [X8 + 0xB8]
	0x03CEA434 LDR W1, [X8 + 0x4]
	0x03CEA438 LDR X20, [X20 + 0x7C0]
	0x03CEA43C BL 0x3DF3018

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move [X31], X0
	006 Move [X31+8], W1
	007 Move [X31+16], X2
	008 Move [X31+24], W3
	009 Move X20, X0
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 Move X19, X2
	013 Move X2, X31
	014 Call Length.op_Equality, X0, X1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X20, [X31+48]
	017 Move X19, [X31+56]
	018 Move X30, [X31+32]
	019 NotImplemented "Instruction CSET not yet implemented."
	020 And W0, W0, W8
	021 Add X31, X31, 64
	022 Return X0

Method: System.Boolean op_Inequality(UnityEngine.UIElements.BackgroundPosition style1, UnityEngine.UIElements.BackgroundPosition style2)

Disassembly:
	0x03CEA440 LDR X1, [X20]
	0x03CEA444 LDP X20, X19, [X31 + 0x10]
	0x03CEA448 LDP X30, X21, [X31], #0x20
	0x03CEA44C B 0x1C16E00
	0x03CEA450 BL 0x1C16F20
	0x03CEA454 STP X30, X21, [X31 - 0x20]!
	0x03CEA458 STP X20, X19, [X31 + 0x10]
	0x03CEA45C ADRP X21, 0x6FD000
	0x03CEA460 LDRB W8, [X21 + 0x734]
	0x03CEA464 MOV X19, X1
	0x03CEA468 MOV X20, X0
	0x03CEA46C TBNZ X8, 0x0, 0x3CEA490
	0x03CEA470 ADRP X0, 0x478000
	0x03CEA474 LDR X0, [X0 + 0x7C8]
	0x03CEA478 BL 0x1C16CF4
	0x03CEA47C ADRP X0, 0x478000
	0x03CEA480 LDR X0, [X0 + 0x7D0]
	0x03CEA484 BL 0x1C16CF4
	0x03CEA488 MOVZ W8, 0x1
	0x03CEA48C STRB W8, [X21 + 0x734]
	0x03CEA490 LDR X0, [X20 + 0x40]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move [X31], X0
	006 Move [X31+8], W1
	007 Move [X31+16], X2
	008 Move [X31+24], W3
	009 Move X20, X0
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 Move X19, X2
	013 Move X2, X31
	014 Call Length.op_Equality, X0, X1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X20, [X31+48]
	017 Move X19, [X31+56]
	018 Move X30, [X31+32]
	019 NotImplemented "Instruction CSET not yet implemented."
	020 NotImplemented "Instruction ORN not yet implemented."
	021 And W0, W8, 1
	022 Add X31, X31, 64
	023 Return X0

Method: System.String ToString()

Disassembly:
	0x03CEA494 CBZ X0, 0x3CEA4D0
	0x03CEA498 ADRP X8, 0x478000
	0x03CEA49C LDR X8, [X8 + 0x7C8]
	0x03CEA4A0 MOV X1, X19
	0x03CEA4A4 LDR X2, [X8]
	0x03CEA4A8 BL 0x2DBEF30
	0x03CEA4AC LDR X0, [X20 + 0x48]
	0x03CEA4B0 CBZ X0, 0x3CEA4D0
	0x03CEA4B4 ADRP X8, 0x478000
	0x03CEA4B8 LDR X8, [X8 + 0x7D0]
	0x03CEA4BC MOV X1, X19
	0x03CEA4C0 LDP X20, X19, [X31 + 0x10]
	0x03CEA4C4 LDR X2, [X8]
	0x03CEA4C8 LDP X30, X21, [X31], #0x20
	0x03CEA4CC B 0x2DBE67C
	0x03CEA4D0 BL 0x1C16F20
	0x03CEA4D4 STP X30, X21, [X31 - 0x20]!
	0x03CEA4D8 STP X20, X19, [X31 + 0x10]
	0x03CEA4DC ADRP X21, 0x6FD000
	0x03CEA4E0 LDRB W8, [X21 + 0x735]
	0x03CEA4E4 MOV X19, X1
	0x03CEA4E8 MOV X20, X0
	0x03CEA4EC TBNZ X8, 0x0, 0x3CEA510
	0x03CEA4F0 ADRP X0, 0x478000
	0x03CEA4F4 LDR X0, [X0 + 0x7C8]
	0x03CEA4F8 BL 0x1C16CF4
	0x03CEA4FC ADRP X0, 0x478000
	0x03CEA500 LDR X0, [X0 + 0x7D0]
	0x03CEA504 BL 0x1C16CF4
	0x03CEA508 MOVZ W8, 0x1
	0x03CEA50C STRB W8, [X21 + 0x735]
	0x03CEA510 LDR X0, [X20 + 0x48]
	0x03CEA514 CBZ X0, 0x3CEA550
	0x03CEA518 ADRP X8, 0x478000
	0x03CEA51C LDR X8, [X8 + 0x7C8]
	0x03CEA520 MOV X1, X19
	0x03CEA524 LDR X2, [X8]
	0x03CEA528 BL 0x2DBEF30
	0x03CEA52C LDR X0, [X20 + 0x40]
	0x03CEA530 CBZ X0, 0x3CEA550
	0x03CEA534 ADRP X8, 0x478000
	0x03CEA538 LDR X8, [X8 + 0x7D0]
	0x03CEA53C MOV X1, X19
	0x03CEA540 LDP X20, X19, [X31 + 0x10]
	0x03CEA544 LDR X2, [X8]
	0x03CEA548 LDP X30, X21, [X31], #0x20
	0x03CEA54C B 0x2DBE67C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x6FE000
	009 Move X20, 0x479000
	010 Move X22, 0x435000
	011 Move X21, 0x479000
	012 Move W8, [X23+1832]
	013 Move X20, [X20+1904]
	014 Move X22, [X22+3592]
	015 Move X21, [X21+1912]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x479000
	022 Move X0, [X0+1904]
	023 Call 0x1C17CF4
	024 Move X0, 0x435000
	025 Move X0, [X0+3592]
	026 Call 0x1C17CF4
	027 Move X0, 0x479000
	028 Move X0, [X0+1912]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+1832], W8
	032 Move W8, [X19]
	033 Move X0, [X20]
	034 Add X1, X31, 12
	035 Move [X31+12], W8
	036 Call 0x1C17E04
	037 Move X20, X0
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 Move X0, [X22]
	040 Add X1, X31, 0
	041 Move [X31], X8
	042 Call 0x1C17E04
	043 Move X8, [X21]
	044 Move X2, X0
	045 Move X1, X20
	046 Move X3, X31
	047 Move X0, X8
	048 Call String.Format, X0, X1, X2
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X30, [X31+16]
	054 Move X23, [X31+24]
	055 Add X31, X31, 64
	056 Return X0

