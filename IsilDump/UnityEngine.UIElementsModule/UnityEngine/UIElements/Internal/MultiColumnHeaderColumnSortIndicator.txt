Type: UnityEngine.UIElements.Internal.MultiColumnHeaderColumnSortIndicator

Method: System.Void set_sortOrderLabel(System.String value)

Disassembly:
	0x03D65E94 STP X20, X19, [X31 + 0x20]
	0x03D65E98 ADRP X19, 0x682000
	0x03D65E9C ADRP X20, 0x3B6000
	0x03D65EA0 LDRB W8, [X19 + 0xCBA]
	0x03D65EA4 LDR X20, [X20 + 0x898]
	0x03D65EA8 TBNZ X8, 0x0, 0x3D65EE4
	0x03D65EAC ADRP X0, 0x3B7000
	0x03D65EB0 LDR X0, [X0 + 0x130]
	0x03D65EB4 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+968]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X3, [X8+2856]
	007 Move X2, [X8+2864]
	008 Move X30, [X31+16]
	009 CallNoReturn X3
	010 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D65EB8 ADRP X0, 0x401000
	0x03D65EBC LDR X0, [X0 + 0x880]
	0x03D65EC0 BL 0x1C16CF4
	0x03D65EC4 ADRP X0, 0x401000
	0x03D65EC8 LDR X0, [X0 + 0x4D0]
	0x03D65ECC BL 0x1C16CF4
	0x03D65ED0 ADRP X0, 0x3B6000
	0x03D65ED4 LDR X0, [X0 + 0x898]
	0x03D65ED8 BL 0x1C16CF4
	0x03D65EDC MOVZ W8, 0x1
	0x03D65EE0 STRB W8, [X19 + 0xCBA]
	0x03D65EE4 LDR X0, [X20]
	0x03D65EE8 BL 0x1C16F10
	0x03D65EEC MOV X1, X31
	0x03D65EF0 MOV X19, X0
	0x03D65EF4 BL 0x3DEF578
	0x03D65EF8 CBZ X19, 0x3D66014
	0x03D65EFC ADRP X22, 0x401000
	0x03D65F00 ADRP X20, 0x401000
	0x03D65F04 LDR X22, [X22 + 0x4D0]
	0x03D65F08 LDR X20, [X20 + 0x880]
	0x03D65F0C MOVZ W1, 0x1
	0x03D65F10 MOV X0, X19
	0x03D65F14 MOV X2, X31
	0x03D65F18 BL 0x3DEF238
	0x03D65F1C LDR X0, [X22]
	0x03D65F20 LDR W8, [X0 + 0xE0]
	0x03D65F24 CBNZ W8, 0x3D65F30
	0x03D65F28 BL 0x1C16DFC
	0x03D65F2C LDR X0, [X22]
	0x03D65F30 LDR X8, [X0 + 0xB8]
	0x03D65F34 MOV X0, X19
	0x03D65F38 MOV X2, X31
	0x03D65F3C LDR X1, [X8 + 0x38]
	0x03D65F40 BL 0x3DF1C70
	0x03D65F44 LDR X0, [X20]
	0x03D65F48 BL 0x1C16F10
	0x03D65F4C MOV X20, X0
	0x03D65F50 BL 0x3D6513C
	0x03D65F54 CBZ X20, 0x3D66014
	0x03D65F58 LDR X8, [X22]
	0x03D65F5C ADRP X21, 0x3B7000
	0x03D65F60 MOV X0, X20
	0x03D65F64 MOV X2, X31
	0x03D65F68 LDR X8, [X8 + 0xB8]
	0x03D65F6C LDR X1, [X8 + 0x58]
	0x03D65F70 LDR X21, [X21 + 0x130]
	0x03D65F74 BL 0x3DEF278
	0x03D65F78 MOVZ W1, 0x1
	0x03D65F7C MOV X0, X20
	0x03D65F80 MOV X2, X31
	0x03D65F84 BL 0x3DEF238
	0x03D65F88 LDR X0, [X21]
	0x03D65F8C BL 0x1C16F10
	0x03D65F90 MOV X1, X31
	0x03D65F94 MOV X21, X0
	0x03D65F98 BL 0x3D6B60C
	0x03D65F9C CBZ X21, 0x3D66014
	0x03D65FA0 LDR X8, [X22]
	0x03D65FA4 MOV X0, X21
	0x03D65FA8 MOV X2, X31
	0x03D65FAC LDR X8, [X8 + 0xB8]
	0x03D65FB0 LDR X1, [X8 + 0x60]
	0x03D65FB4 BL 0x3DEF278
	0x03D65FB8 MOVZ W1, 0x1
	0x03D65FBC MOV X0, X21
	0x03D65FC0 MOV X2, X31
	0x03D65FC4 BL 0x3DEF238
	0x03D65FC8 LDR X8, [X22]
	0x03D65FCC MOV X0, X21
	0x03D65FD0 MOV X2, X31
	0x03D65FD4 LDR X8, [X8 + 0xB8]
	0x03D65FD8 LDR X1, [X8 + 0x50]
	0x03D65FDC BL 0x3DF1C70
	0x03D65FE0 MOV X0, X19
	0x03D65FE4 MOV X1, X20
	0x03D65FE8 MOV X2, X31
	0x03D65FEC BL 0x3DF60E8
	0x03D65FF0 MOV X0, X19
	0x03D65FF4 MOV X1, X21
	0x03D65FF8 MOV X2, X31
	0x03D65FFC BL 0x3DF60E8
	0x03D66000 MOV X0, X19
	0x03D66004 LDP X20, X19, [X31 + 0x20]
	0x03D66008 LDP X22, X21, [X31 + 0x10]
	0x03D6600C LDR X30, [X31], #0x30
	0x03D66010 RET
	0x03D66014 BL 0x1C16F20
	0x03D66018 SUB X31, X31, 0x60
	0x03D6601C STR X30, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x683000
	007 Move X20, 0x3B7000
	008 Move W8, [X21+3245]
	009 Move X20, [X20+2200]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x3B8000
	016 Move X0, [X0+304]
	017 Call 0x1C17CF4
	018 Move X0, 0x402000
	019 Move X0, [X0+1800]
	020 Call 0x1C17CF4
	021 Move X0, 0x3B7000
	022 Move X0, [X0+2200]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3245], W8
	026 Move X0, [X20]
	027 Move X21, 0x402000
	028 Move W8, [X0+224]
	029 Move X21, [X21+1800]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X19
	034 Move X1, X31
	035 Call VisualElement..ctor, X0
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X21]
	042 Move X8, [X0+184]
	043 Move X0, X19
	044 Move X2, X31
	045 Move X1, [X8]
	046 Call VisualElement.AddToClassList, X0, X1
	047 Move W1, 1
	048 Move X0, X19
	049 Move X2, X31
	050 Call VisualElement.set_pickingMode, X0, X1
	051 Move X0, [X20]
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X20, X0
	055 Call VisualElement..ctor, X0
	056 Compare X20, 0
	057 JumpIfEqual {102}
	058 Move X22, 0x3B8000
	059 Move X22, [X22+304]
	060 Move W1, 1
	061 Move X0, X20
	062 Move X2, X31
	063 Call VisualElement.set_pickingMode, X0, X1
	064 Move X8, [X21]
	065 Move X0, X20
	066 Move X2, X31
	067 Move X8, [X8+184]
	068 Move X1, [X8+8]
	069 Call VisualElement.AddToClassList, X0, X1
	070 Move X0, X19
	071 Move X1, X20
	072 Move X2, X31
	073 Call VisualElement.Add, X0, X1
	074 Move X0, [X22]
	075 Call 0x1C17F10
	076 Move X1, X31
	077 Move X20, X0
	078 Call Label..ctor, X0
	079 Compare X20, 0
	080 JumpIfEqual {102}
	081 Move W1, 1
	082 Move X0, X20
	083 Move X2, X31
	084 Call VisualElement.set_pickingMode, X0, X1
	085 Move [X19+968], X20
	086 Move X8, [X21]
	087 Move X0, X20
	088 Move X2, X31
	089 Move X8, [X8+184]
	090 Move X1, [X8+16]
	091 Call VisualElement.AddToClassList, X0, X1
	092 Move X1, [X19+968]
	093 Move X0, X19
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X22, [X31+16]
	097 Move X21, [X31+24]
	098 Move X2, X31
	099 Move X30, [X31+48]
	100 Call VisualElement.Add, X0, X1
	101 Return 
	102 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D66020 STP X24, X23, [X31 + 0x30]
	0x03D66024 STP X22, X21, [X31 + 0x40]
	0x03D66028 STP X20, X19, [X31 + 0x50]
	0x03D6602C ADRP X20, 0x681000
	0x03D66030 ADRP X23, 0x400000
	0x03D66034 LDRB W8, [X20 + 0xCBB]
	0x03D66038 LDR X23, [X23 + 0x4D0]
	0x03D6603C MOV X21, X1
	0x03D66040 MOV X19, X0
	0x03D66044 TBNZ X8, 0x0, 0x3D6608C
	0x03D66048 ADRP X0, 0x400000
	0x03D6604C LDR X0, [X0 + 0x4D0]
	0x03D66050 BL 0x1C16CF4
	0x03D66054 ADRP X0, 0x38D000
	0x03D66058 LDR X0, [X0 + 0x598]
	0x03D6605C BL 0x1C16CF4
	0x03D66060 ADRP X0, 0x400000
	0x03D66064 LDR X0, [X0 + 0x8B0]
	0x03D66068 BL 0x1C16CF4
	0x03D6606C ADRP X0, 0x400000
	0x03D66070 LDR X0, [X0 + 0x8B8]
	0x03D66074 BL 0x1C16CF4
	0x03D66078 ADRP X0, 0x3B6000
	0x03D6607C LDR X0, [X0 + 0x830]
	0x03D66080 BL 0x1C16CF4
	0x03D66084 MOVZ W8, 0x1
	0x03D66088 STRB W8, [X20 + 0xCBB]
	0x03D6608C LDR X0, [X23]
	0x03D66090 MOVI V0.2D, 0x0
	0x03D66094 STP V0, V0, [X31]
	0x03D66098 ADRP X20, 0x3B6000
	0x03D6609C LDR W8, [X0 + 0xE0]
	0x03D660A0 LDR X20, [X20 + 0x830]
	0x03D660A4 CBNZ W8, 0x3D660B0
	0x03D660A8 BL 0x1C16DFC
	0x03D660AC LDR X0, [X23]
	0x03D660B0 LDR X8, [X20]
	0x03D660B4 LDR X9, [X0 + 0xB8]
	0x03D660B8 ADRP X24, 0x400000
	0x03D660BC ADRP X22, 0x400000
	0x03D660C0 LDR W10, [X8 + 0xE0]
	0x03D660C4 LDR X20, [X9 + 0x60]
	0x03D660C8 LDR X24, [X24 + 0x8B0]
	0x03D660CC LDR X22, [X22 + 0x8B8]
	0x03D660D0 CBNZ W10, 0x3D660DC
	0x03D660D4 MOV X0, X8
	0x03D660D8 BL 0x1C16DFC
	0x03D660DC LDR X3, [X24]
	0x03D660E0 MOV X0, X21
	0x03D660E4 MOV X1, X20
	0x03D660E8 MOV X2, X31
	0x03D660EC BL 0x22A17C4
	0x03D660F0 LDR X3, [X22]
	0x03D660F4 MOV X22, X0
	0x03D660F8 MOV X0, X21
	0x03D660FC MOV X1, X31
	0x03D66100 MOV X2, X31
	0x03D66104 BL 0x22A17C4
	0x03D66108 CBZ X21, 0x3D66358
	0x03D6610C LDR X8, [X23]
	0x03D66110 MOV X20, X0
	0x03D66114 MOV X0, X21
	0x03D66118 MOV X2, X31
	0x03D6611C LDR X8, [X8 + 0xB8]
	0x03D66120 LDR X1, [X8 + 0x48]
	0x03D66124 BL 0x3DF1B54

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x682000
	008 Move X20, 0x401000
	009 Move W8, [X19+3246]
	010 Move X20, [X20+1232]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x401000
	016 Move X0, [X0+1800]
	017 Call 0x1C17CF4
	018 Move X0, 0x401000
	019 Move X0, [X0+1232]
	020 Call 0x1C17CF4
	021 Move X0, 0x401000
	022 Move X0, [X0+2152]
	023 Call 0x1C17CF4
	024 Move X0, 0x401000
	025 Move X0, [X0+2160]
	026 Call 0x1C17CF4
	027 Move X0, 0x3B9000
	028 Move X0, [X0+224]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+3246], W8
	032 Move X0, [X20]
	033 Move X23, 0x401000
	034 Move X19, 0x401000
	035 Move X22, 0x3B9000
	036 Move X21, 0x401000
	037 Move W8, [X0+224]
	038 Move X23, [X23+2152]
	039 Move X19, [X19+1800]
	040 Move X22, [X22+224]
	041 Move X21, [X21+2160]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X20]
	046 Move X8, [X0+184]
	047 Move X1, [X23]
	048 Move X2, X31
	049 Move X0, [X8]
	050 Call String.Concat, X0, X1
	051 Move X8, [X19]
	052 Move X2, X31
	053 Move X8, [X8+184]
	054 Move [X8], X0
	055 Move X8, [X19]
	056 Move X1, [X22]
	057 Move X8, [X8+184]
	058 Move X0, [X8]
	059 Call String.Concat, X0, X1
	060 Move X8, [X19]
	061 Move X2, X31
	062 Move X8, [X8+184]
	063 Move [X8+8], X0
	064 Move X0, [X8]
	065 Move X1, [X21]
	066 Call String.Concat, X0, X1
	067 Move X8, [X19]
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X8, [X8+184]
	073 Move [X8+16], X0
	074 Move X30, [X31+48]
	075 Move X23, [X31+56]
	076 Return 

