Type: UnityEngine.UIElements.Internal.ColumnMover

Method: UnityEngine.UIElements.ColumnLayout get_columnLayout()

Disassembly:
	0x03D5C570 BL 0x3DB9E70
	0x03D5C574 MOV W1, W21

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Void set_columnLayout(UnityEngine.UIElements.ColumnLayout value)

Disassembly:
	0x03D5C578 MOV X2, X31
	0x03D5C57C BL 0x3DBAC60

ISIL:
	001 Move [X0+120], X1
	002 Return 

Method: System.Boolean get_active()

Disassembly:
	0x03D5C580 ADRP X8, 0x3C0000
	0x03D5C584 LDR X8, [X8 + 0xE78]

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_active(System.Boolean value)

Disassembly:
	0x03D5C588 MOV X0, X19
	0x03D5C58C LDR X1, [X8]
	0x03D5C590 BL 0x1C16E00
	0x03D5C594 CBNZ X0, 0x3D5C5BC
	0x03D5C598 MOV X0, X20
	0x03D5C59C MOV X1, X31
	0x03D5C5A0 BL 0x3DB9E70
	0x03D5C5A4 CBZ X0, 0x3D5C6C8
	0x03D5C5A8 MOV X1, X31
	0x03D5C5AC BL 0x3DEC0CC
	0x03D5C5B0 MOV W1, W21
	0x03D5C5B4 MOV X2, X31
	0x03D5C5B8 BL 0x3DBAC98
	0x03D5C5BC CBZ X19, 0x3D5C6C8

ISIL:
	001 Move W10, [X0+56]
	002 And W9, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X10, [X0+128]
	005 Move X8, X0
	006 Move [X0+56], W9
	007 Compare X10, 0
	008 JumpIfEqual {14}
	009 Move X3, [X10+24]
	010 Move X0, [X10+64]
	011 Move X2, [X10+40]
	012 Move X1, X8
	013 CallNoReturn X3
	014 Return 

Method: System.Boolean get_moving()

Disassembly:
	0x03D5C5C0 LDR X8, [X19]
	0x03D5C5C4 MOV X0, X19

ISIL:
	001 Move W0, [X0+57]
	002 Return X0

Method: System.Void set_moving(System.Boolean value)

Disassembly:
	0x03D5C5C8 LDP X9, X1, [X8 + 0x1D8]
	0x03D5C5CC BLR X9
	0x03D5C5D0 CBZ X0, 0x3D5C6C8
	0x03D5C5D4 ADRP X8, 0x3BF000
	0x03D5C5D8 LDR X8, [X8 + 0x898]
	0x03D5C5DC LDR X9, [X0]
	0x03D5C5E0 MOV X21, X0
	0x03D5C5E4 LDR X8, [X8]
	0x03D5C5E8 LDRB W11, [X9 + 0x130]
	0x03D5C5EC LDRB W10, [X8 + 0x130]
	0x03D5C5F0 CMP W11, W10
	0x03D5C5F4 B.CC 0x3D5C6C8
	0x03D5C5F8 LDR X9, [X9 + 0xC8]
	0x03D5C5FC ADD X9, X9, X10, 0x3, LSL

ISIL:
	001 Move W10, [X0+57]
	002 And W9, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X10, [X0+136]
	005 Move X8, X0
	006 Move [X0+57], W9
	007 Compare X10, 0
	008 JumpIfEqual {14}
	009 Move X3, [X10+24]
	010 Move X0, [X10+64]
	011 Move X2, [X10+40]
	012 Move X1, X8
	013 CallNoReturn X3
	014 Return 

Method: System.Void add_activeChanged(System.Action`1<UnityEngine.UIElements.Internal.ColumnMover> value)

Disassembly:
	0x03D5C600 LDUR X9, [X9 - 0x8]
	0x03D5C604 CMP X9, X8
	0x03D5C608 B.NE 0x3D5C6C8
	0x03D5C60C ADRP X8, 0x40A000
	0x03D5C610 LDR X8, [X8 + 0x568]
	0x03D5C614 MOV X0, X21
	0x03D5C618 LDR X1, [X8]
	0x03D5C61C BL 0x22A9CF4
	0x03D5C620 CBZ X0, 0x3D5C6C8
	0x03D5C624 LDR X8, [X0 + 0x420]
	0x03D5C628 MOV X1, X0
	0x03D5C62C CBZ X8, 0x3D5C6C8
	0x03D5C630 LDRB W8, [X8 + 0x30]
	0x03D5C634 CBZ W8, 0x3D5C6B4
	0x03D5C638 MOV X0, X21
	0x03D5C63C MOV V0.16B, V9.16B
	0x03D5C640 MOV V1.16B, V8.16B
	0x03D5C644 MOV X2, X31
	0x03D5C648 STR X1, [X20 + 0x40]
	0x03D5C64C BL 0x3D16E8C
	0x03D5C650 LDR X8, [X20 + 0x40]
	0x03D5C654 CBZ X8, 0x3D5C6C8
	0x03D5C658 LDRB W9, [X20 + 0x38]
	0x03D5C65C LDR X8, [X8 + 0x408]
	0x03D5C660 STRB W31, [X20 + 0x3A]
	0x03D5C664 STR S0, [X20 + 0x30]
	0x03D5C668 CMP W9, 0x1
	0x03D5C66C STR X8, [X20 + 0x78]
	0x03D5C670 B.EQ 0x3D5C698
	0x03D5C674 LDR X8, [X20 + 0x80]
	0x03D5C678 MOVZ W9, 0x1
	0x03D5C67C STRB W9, [X20 + 0x38]
	0x03D5C680 CBZ X8, 0x3D5C698
	0x03D5C684 LDR X9, [X8 + 0x18]
	0x03D5C688 LDR X0, [X8 + 0x40]
	0x03D5C68C LDR X2, [X8 + 0x28]
	0x03D5C690 MOV X1, X20
	0x03D5C694 BLR X9
	0x03D5C698 MOV X0, X19
	0x03D5C69C LDP X20, X19, [X31 + 0x30]
	0x03D5C6A0 LDP X22, X21, [X31 + 0x20]
	0x03D5C6A4 LDR X30, [X31 + 0x10]
	0x03D5C6A8 MOV X1, X31
	0x03D5C6AC LDP D9, D8, [X31], #0x40

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x68C000
	009 Move W8, [X21+3179]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x40B000
	017 Move X0, [X0+1272]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3179], W8
	021 Move X24, 0x40B000
	022 Add X20, X20, 128
	023 Move X21, [X20]
	024 Move X24, [X24+1272]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_activeChanged(System.Action`1<UnityEngine.UIElements.Internal.ColumnMover> value)

Disassembly:
	0x03D5C6B0 B 0x3D9D950
	0x03D5C6B4 LDP X20, X19, [X31 + 0x30]
	0x03D5C6B8 LDP X22, X21, [X31 + 0x20]
	0x03D5C6BC LDR X30, [X31 + 0x10]
	0x03D5C6C0 LDP D9, D8, [X31], #0x40
	0x03D5C6C4 RET
	0x03D5C6C8 BL 0x1C16F20
	0x03D5C6CC STP X30, X21, [X31 - 0x20]!
	0x03D5C6D0 STP X20, X19, [X31 + 0x10]
	0x03D5C6D4 ADRP X21, 0x68B000
	0x03D5C6D8 LDRB W8, [X21 + 0xC73]
	0x03D5C6DC MOV X19, X1
	0x03D5C6E0 MOV X20, X0
	0x03D5C6E4 TBNZ X8, 0x0, 0x3D5C6FC
	0x03D5C6E8 ADRP X0, 0x406000
	0x03D5C6EC LDR X0, [X0 + 0xA48]
	0x03D5C6F0 BL 0x1C16CF4
	0x03D5C6F4 MOVZ W8, 0x1
	0x03D5C6F8 STRB W8, [X21 + 0xC73]
	0x03D5C6FC LDRB W8, [X20 + 0x38]
	0x03D5C700 CBZ W8, 0x3D5C720
	0x03D5C704 CBZ X19, 0x3D5C72C
	0x03D5C708 LDP S0, S1, [X19 + 0x90]
	0x03D5C70C MOV X0, X20
	0x03D5C710 MOV X1, X19
	0x03D5C714 LDP X20, X19, [X31 + 0x10]
	0x03D5C718 LDP X30, X21, [X31], #0x20
	0x03D5C71C B 0x3D5C730
	0x03D5C720 LDP X20, X19, [X31 + 0x10]
	0x03D5C724 LDP X30, X21, [X31], #0x20
	0x03D5C728 RET
	0x03D5C72C BL 0x1C16F20
	0x03D5C730 STP D9, D8, [X31 - 0x30]!
	0x03D5C734 STP X30, X21, [X31 + 0x10]
	0x03D5C738 STP X20, X19, [X31 + 0x20]
	0x03D5C73C ADRP X21, 0x68B000
	0x03D5C740 LDRB W8, [X21 + 0xC7F]
	0x03D5C744 MOV V8.16B, V1.16B
	0x03D5C748 MOV V9.16B, V0.16B
	0x03D5C74C MOV X19, X1
	0x03D5C750 MOV X20, X0
	0x03D5C754 TBNZ X8, 0x0, 0x3D5C76C
	0x03D5C758 ADRP X0, 0x3BF000
	0x03D5C75C LDR X0, [X0 + 0x898]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x68C000
	009 Move W8, [X21+3180]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x40B000
	017 Move X0, [X0+1272]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3180], W8
	021 Move X24, 0x40B000
	022 Add X20, X20, 128
	023 Move X21, [X20]
	024 Move X24, [X24+1272]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_movingChanged(System.Action`1<UnityEngine.UIElements.Internal.ColumnMover> value)

Disassembly:
	0x03D5C760 BL 0x1C16CF4
	0x03D5C764 MOVZ W8, 0x1
	0x03D5C768 STRB W8, [X21 + 0xC7F]
	0x03D5C76C LDRB W8, [X20 + 0x3A]
	0x03D5C770 CBZ W8, 0x3D5C784
	0x03D5C774 LDP X20, X19, [X31 + 0x20]
	0x03D5C778 LDP X30, X21, [X31 + 0x10]
	0x03D5C77C LDP D9, D8, [X31], #0x30
	0x03D5C780 RET
	0x03D5C784 CBZ X19, 0x3D5C844
	0x03D5C788 LDR X8, [X19]
	0x03D5C78C MOV X0, X19
	0x03D5C790 LDP X9, X1, [X8 + 0x1D8]
	0x03D5C794 BLR X9
	0x03D5C798 CBZ X0, 0x3D5C7D8
	0x03D5C79C ADRP X8, 0x3BF000
	0x03D5C7A0 LDR X8, [X8 + 0x898]
	0x03D5C7A4 LDR X9, [X0]
	0x03D5C7A8 LDR X8, [X8]
	0x03D5C7AC LDRB W11, [X9 + 0x130]
	0x03D5C7B0 LDRB W10, [X8 + 0x130]
	0x03D5C7B4 CMP W11, W10
	0x03D5C7B8 B.CS 0x3D5C7C4
	0x03D5C7BC MOV X0, X31
	0x03D5C7C0 B 0x3D5C7D8
	0x03D5C7C4 LDR X9, [X9 + 0xC8]
	0x03D5C7C8 ADD X9, X9, X10, 0x3, LSL
	0x03D5C7CC LDUR X9, [X9 - 0x8]
	0x03D5C7D0 CMP X9, X8
	0x03D5C7D4 CSEL X0, X0, X31, EQ
	0x03D5C7D8 LDR X1, [X20 + 0x40]
	0x03D5C7DC MOV V0.16B, V9.16B
	0x03D5C7E0 MOV V1.16B, V8.16B
	0x03D5C7E4 MOV X2, X31
	0x03D5C7E8 BL 0x3D16E8C
	0x03D5C7EC LDRB W8, [X20 + 0x39]
	0x03D5C7F0 MOV V8.16B, V0.16B
	0x03D5C7F4 CBZ W8, 0x3D5C808
	0x03D5C7F8 MOV X0, X20
	0x03D5C7FC STR S8, [X20 + 0x34]
	0x03D5C800 BL 0x3D5D638
	0x03D5C804 B 0x3D5C82C
	0x03D5C808 LDR V0, [X20 + 0x30]
	0x03D5C80C FMOV S2, 5

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x68C000
	009 Move W8, [X21+3181]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x40B000
	017 Move X0, [X0+1272]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3181], W8
	021 Move X24, 0x40B000
	022 Add X20, X20, 136
	023 Move X21, [X20]
	024 Move X24, [X24+1272]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_movingChanged(System.Action`1<UnityEngine.UIElements.Internal.ColumnMover> value)

Disassembly:
	0x03D5C810 FABD S1, S0, S0
	0x03D5C814 FCMP S1, S2
	0x03D5C818 B.LE 0x3D5C82C
	0x03D5C81C MOV X0, X20
	0x03D5C820 BL 0x3D5D1BC
	0x03D5C824 LDRB W8, [X20 + 0x39]
	0x03D5C828 CBNZ W8, 0x3D5C7F8
	0x03D5C82C MOV X0, X19
	0x03D5C830 LDP X20, X19, [X31 + 0x20]
	0x03D5C834 LDP X30, X21, [X31 + 0x10]
	0x03D5C838 MOV X1, X31
	0x03D5C83C LDP D9, D8, [X31], #0x30
	0x03D5C840 B 0x3D9D950
	0x03D5C844 BL 0x1C16F20
	0x03D5C848 STP X30, X21, [X31 - 0x20]!
	0x03D5C84C STP X20, X19, [X31 + 0x10]
	0x03D5C850 ADRP X21, 0x68B000
	0x03D5C854 LDRB W8, [X21 + 0xC74]
	0x03D5C858 MOV X19, X1
	0x03D5C85C MOV X20, X0
	0x03D5C860 TBNZ X8, 0x0, 0x3D5C884
	0x03D5C864 ADRP X0, 0x406000
	0x03D5C868 LDR X0, [X0 + 0xA50]
	0x03D5C86C BL 0x1C16CF4
	0x03D5C870 ADRP X0, 0x3C0000
	0x03D5C874 LDR X0, [X0 + 0xE50]
	0x03D5C878 BL 0x1C16CF4
	0x03D5C87C MOVZ W8, 0x1
	0x03D5C880 STRB W8, [X21 + 0xC74]
	0x03D5C884 LDRB W8, [X20 + 0x38]
	0x03D5C888 CBZ W8, 0x3D5C8DC
	0x03D5C88C MOV X0, X20
	0x03D5C890 MOV X1, X19
	0x03D5C894 MOV X2, X31
	0x03D5C898 BL 0x3DBB070
	0x03D5C89C TBZ X0, 0x0, 0x3D5C8DC
	0x03D5C8A0 CBZ X19, 0x3D5C8E8
	0x03D5C8A4 ADRP X21, 0x3C0000
	0x03D5C8A8 LDR X21, [X21 + 0xE50]
	0x03D5C8AC LDR X0, [X21]
	0x03D5C8B0 LDR W8, [X0 + 0xE0]
	0x03D5C8B4 CBNZ W8, 0x3D5C8C0
	0x03D5C8B8 BL 0x1C16DFC
	0x03D5C8BC LDR X0, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x68C000
	009 Move W8, [X21+3182]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x40B000
	017 Move X0, [X0+1272]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3182], W8
	021 Move X24, 0x40B000
	022 Add X20, X20, 136
	023 Move X21, [X20]
	024 Move X24, [X24+1272]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x03D5C8C0 LDR X8, [X0 + 0xB8]
	0x03D5C8C4 MOV X0, X20
	0x03D5C8C8 MOV X1, X19
	0x03D5C8CC LDP X20, X19, [X31 + 0x10]
	0x03D5C8D0 LDR W2, [X8 + 0x8]
	0x03D5C8D4 LDP X30, X21, [X31], #0x20
	0x03D5C8D8 B 0x3D5C8EC
	0x03D5C8DC LDP X20, X19, [X31 + 0x10]
	0x03D5C8E0 LDP X30, X21, [X31], #0x20
	0x03D5C8E4 RET
	0x03D5C8E8 BL 0x1C16F20
	0x03D5C8EC STR X30, [X31 - 0x30]!
	0x03D5C8F0 STP X22, X21, [X31 + 0x10]
	0x03D5C8F4 STP X20, X19, [X31 + 0x20]
	0x03D5C8F8 ADRP X22, 0x68B000
	0x03D5C8FC LDRB W8, [X22 + 0xC80]
	0x03D5C900 MOV W21, W2
	0x03D5C904 MOV X19, X1
	0x03D5C908 MOV X20, X0
	0x03D5C90C TBNZ X8, 0x0, 0x3D5C924
	0x03D5C910 ADRP X0, 0x3C0000
	0x03D5C914 LDR X0, [X0 + 0xE78]
	0x03D5C918 BL 0x1C16CF4
	0x03D5C91C MOVZ W8, 0x1
	0x03D5C920 STRB W8, [X22 + 0xC80]
	0x03D5C924 ADRP X22, 0x3C0000
	0x03D5C928 LDRB W8, [X20 + 0x38]
	0x03D5C92C LDR X22, [X22 + 0xE78]
	0x03D5C930 CBZ W8, 0x3D5C954
	0x03D5C934 LDR X8, [X20 + 0x80]
	0x03D5C938 STRB W31, [X20 + 0x38]
	0x03D5C93C CBZ X8, 0x3D5C954
	0x03D5C940 LDR X9, [X8 + 0x18]
	0x03D5C944 LDR X0, [X8 + 0x40]
	0x03D5C948 LDR X2, [X8 + 0x28]
	0x03D5C94C MOV X1, X20
	0x03D5C950 BLR X9
	0x03D5C954 MOV X0, X20
	0x03D5C958 MOV X1, X31
	0x03D5C95C BL 0x3DB9E70
	0x03D5C960 MOV W1, W21
	0x03D5C964 MOV X2, X31
	0x03D5C968 BL 0x3DBAE34
	0x03D5C96C LDR X1, [X22]
	0x03D5C970 MOV X0, X19
	0x03D5C974 BL 0x1C16E00

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x68C000
	005 Move W8, [X20+3183]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x407000
	012 Move X0, [X0+2384]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3183], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call PointerManipulator..ctor, X0
	019 Move X0, [X19+24]
	020 Compare X0, 0
	021 JumpIfEqual {54}
	022 Move X9, 0x407000
	023 Move X9, [X9+2384]
	024 Move W10, [X0+28]
	025 Move X8, [X0+16]
	026 Move X9, [X9]
	027 Add W10, W10, 1
	028 Move [X0+28], W10
	029 Compare X8, 0
	030 JumpIfEqual {54}
	031 NotImplemented "Instruction LDRSW not yet implemented."
	032 Move W11, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move W11, 12
	037 Add W9, W10, 1
	038 NotImplemented "Instruction MADD not yet implemented."
	039 Move [X0+24], W9
	040 Move [X8+32], X31
	041 Move [X8+40], W31
	042 Move X30, [X31+32]
	043 Return 
	044 Move X8, [X9+32]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X1, X31
	048 Move X2, X31
	049 Move X8, [X8+192]
	050 Move X3, [X8+112]
	051 Move X30, [X31+32]
	052 Call List`1<ManipulatorActivationFilter>.AddWithResize, X0, X1
	053 Return 
	054 Call 0x1C17F20

Method: System.Void RegisterCallbacksOnTarget()

Disassembly:
	0x03D5C978 CBNZ X0, 0x3D5C9A0
	0x03D5C97C MOV X0, X20
	0x03D5C980 MOV X1, X31
	0x03D5C984 BL 0x3DB9E70
	0x03D5C988 CBZ X0, 0x3D5CA04
	0x03D5C98C MOV X1, X31
	0x03D5C990 BL 0x3DEC0CC
	0x03D5C994 MOV W1, W21
	0x03D5C998 MOV X2, X31
	0x03D5C99C BL 0x3DBAC98
	0x03D5C9A0 LDRB W8, [X20 + 0x39]
	0x03D5C9A4 CBZ W8, 0x3D5C9BC
	0x03D5C9A8 MOV X0, X20
	0x03D5C9AC MOV W1, W31
	0x03D5C9B0 BL 0x3D5D030
	0x03D5C9B4 CBNZ X19, 0x3D5C9D4
	0x03D5C9B8 B 0x3D5CA04
	0x03D5C9BC LDRB W21, [X20 + 0x3A]
	0x03D5C9C0 MOV X0, X20
	0x03D5C9C4 MOV W1, W31
	0x03D5C9C8 BL 0x3D5D030
	0x03D5C9CC CBZ X19, 0x3D5CA04
	0x03D5C9D0 CBZ W21, 0x3D5C9EC
	0x03D5C9D4 MOV X0, X19
	0x03D5C9D8 LDP X20, X19, [X31 + 0x20]
	0x03D5C9DC LDP X22, X21, [X31 + 0x10]
	0x03D5C9E0 MOV X1, X31
	0x03D5C9E4 LDR X30, [X31], #0x30
	0x03D5C9E8 B 0x3DA02EC
	0x03D5C9EC MOV X0, X19
	0x03D5C9F0 LDP X20, X19, [X31 + 0x20]
	0x03D5C9F4 LDP X22, X21, [X31 + 0x10]
	0x03D5C9F8 MOV X1, X31
	0x03D5C9FC LDR X30, [X31], #0x30
	0x03D5CA00 B 0x3D9D950
	0x03D5CA04 BL 0x1C16F20
	0x03D5CA08 STP X30, X21, [X31 - 0x20]!
	0x03D5CA0C STP X20, X19, [X31 + 0x10]
	0x03D5CA10 ADRP X21, 0x68B000
	0x03D5CA14 LDRB W8, [X21 + 0xC75]
	0x03D5CA18 MOV X19, X1
	0x03D5CA1C MOV X20, X0
	0x03D5CA20 TBNZ X8, 0x0, 0x3D5CA38
	0x03D5CA24 ADRP X0, 0x3C0000
	0x03D5CA28 LDR X0, [X0 + 0xE50]
	0x03D5CA2C BL 0x1C16CF4
	0x03D5CA30 MOVZ W8, 0x1
	0x03D5CA34 STRB W8, [X21 + 0xC75]
	0x03D5CA38 LDRB W8, [X20 + 0x38]
	0x03D5CA3C CBZ W8, 0x3D5CA78
	0x03D5CA40 ADRP X21, 0x3C0000
	0x03D5CA44 LDR X21, [X21 + 0xE50]
	0x03D5CA48 LDR X0, [X21]
	0x03D5CA4C LDR W8, [X0 + 0xE0]
	0x03D5CA50 CBNZ W8, 0x3D5CA5C
	0x03D5CA54 BL 0x1C16DFC
	0x03D5CA58 LDR X0, [X21]
	0x03D5CA5C LDR X8, [X0 + 0xB8]
	0x03D5CA60 MOV X0, X20
	0x03D5CA64 MOV X1, X19
	0x03D5CA68 LDP X20, X19, [X31 + 0x10]
	0x03D5CA6C LDR W2, [X8 + 0x8]
	0x03D5CA70 LDP X30, X21, [X31], #0x20
	0x03D5CA74 B 0x3D5CA84
	0x03D5CA78 LDP X20, X19, [X31 + 0x10]
	0x03D5CA7C LDP X30, X21, [X31], #0x20
	0x03D5CA80 RET
	0x03D5CA84 STR X30, [X31 - 0x30]!
	0x03D5CA88 STP X22, X21, [X31 + 0x10]
	0x03D5CA8C STP X20, X19, [X31 + 0x20]
	0x03D5CA90 ADRP X22, 0x68B000
	0x03D5CA94 LDRB W8, [X22 + 0xC7C]
	0x03D5CA98 MOV W21, W2
	0x03D5CA9C MOV X19, X1
	0x03D5CAA0 MOV X20, X0
	0x03D5CAA4 TBNZ X8, 0x0, 0x3D5CABC
	0x03D5CAA8 ADRP X0, 0x3C0000
	0x03D5CAAC LDR X0, [X0 + 0xE78]
	0x03D5CAB0 BL 0x1C16CF4
	0x03D5CAB4 MOVZ W8, 0x1
	0x03D5CAB8 STRB W8, [X22 + 0xC7C]
	0x03D5CABC ADRP X22, 0x3C0000
	0x03D5CAC0 LDRB W8, [X20 + 0x38]
	0x03D5CAC4 LDR X22, [X22 + 0xE78]
	0x03D5CAC8 CBZ W8, 0x3D5CAEC
	0x03D5CACC LDR X8, [X20 + 0x80]
	0x03D5CAD0 STRB W31, [X20 + 0x38]
	0x03D5CAD4 CBZ X8, 0x3D5CAEC
	0x03D5CAD8 LDR X9, [X8 + 0x18]
	0x03D5CADC LDR X0, [X8 + 0x40]
	0x03D5CAE0 LDR X2, [X8 + 0x28]
	0x03D5CAE4 MOV X1, X20
	0x03D5CAE8 BLR X9
	0x03D5CAEC MOV X0, X20
	0x03D5CAF0 MOV X1, X31
	0x03D5CAF4 BL 0x3DB9E70
	0x03D5CAF8 MOV W1, W21
	0x03D5CAFC MOV X2, X31
	0x03D5CB00 BL 0x3DBAE34
	0x03D5CB04 LDR X1, [X22]
	0x03D5CB08 MOV X0, X19
	0x03D5CB0C BL 0x1C16E00
	0x03D5CB10 CBNZ X0, 0x3D5CB38
	0x03D5CB14 MOV X0, X20
	0x03D5CB18 MOV X1, X31
	0x03D5CB1C BL 0x3DB9E70
	0x03D5CB20 CBZ X0, 0x3D5CB68
	0x03D5CB24 MOV X1, X31
	0x03D5CB28 BL 0x3DEC0CC
	0x03D5CB2C MOV W1, W21
	0x03D5CB30 MOV X2, X31
	0x03D5CB34 BL 0x3DBAC98
	0x03D5CB38 LDRB W8, [X20 + 0x39]
	0x03D5CB3C CBZ W8, 0x3D5CB4C
	0x03D5CB40 MOVZ W1, 0x1
	0x03D5CB44 MOV X0, X20
	0x03D5CB48 BL 0x3D5D030
	0x03D5CB4C CBZ X19, 0x3D5CB68
	0x03D5CB50 MOV X0, X19
	0x03D5CB54 LDP X20, X19, [X31 + 0x20]
	0x03D5CB58 LDP X22, X21, [X31 + 0x10]
	0x03D5CB5C MOV X1, X31
	0x03D5CB60 LDR X30, [X31], #0x30
	0x03D5CB64 B 0x3D9D950
	0x03D5CB68 BL 0x1C16F20
	0x03D5CB6C STR X30, [X31 - 0x30]!
	0x03D5CB70 STP X22, X21, [X31 + 0x10]
	0x03D5CB74 STP X20, X19, [X31 + 0x20]
	0x03D5CB78 ADRP X21, 0x68B000
	0x03D5CB7C LDRB W8, [X21 + 0xC76]
	0x03D5CB80 MOV X19, X1
	0x03D5CB84 MOV X20, X0
	0x03D5CB88 TBNZ X8, 0x0, 0x3D5CBB8
	0x03D5CB8C ADRP X0, 0x3C2000
	0x03D5CB90 LDR X0, [X0 + 0xCF0]
	0x03D5CB94 BL 0x1C16CF4
	0x03D5CB98 ADRP X0, 0x3C2000
	0x03D5CB9C LDR X0, [X0 + 0xCF8]
	0x03D5CBA0 BL 0x1C16CF4
	0x03D5CBA4 ADRP X0, 0x3C0000
	0x03D5CBA8 LDR X0, [X0 + 0xE50]
	0x03D5CBAC BL 0x1C16CF4
	0x03D5CBB0 MOVZ W8, 0x1
	0x03D5CBB4 STRB W8, [X21 + 0xC76]
	0x03D5CBB8 MOV X0, X20
	0x03D5CBBC MOV X1, X19
	0x03D5CBC0 MOV X2, X31
	0x03D5CBC4 BL 0x3DC06D4
	0x03D5CBC8 TBZ X0, 0x0, 0x3D5CC3C
	0x03D5CBCC CBZ X19, 0x3D5CC90
	0x03D5CBD0 ADRP X22, 0x3C0000
	0x03D5CBD4 LDR X22, [X22 + 0xE50]
	0x03D5CBD8 LDR W21, [X19 + 0x9C]
	0x03D5CBDC LDR X0, [X22]
	0x03D5CBE0 LDR W8, [X0 + 0xE0]
	0x03D5CBE4 CBNZ W8, 0x3D5CBF0
	0x03D5CBE8 BL 0x1C16DFC
	0x03D5CBEC LDR X0, [X22]
	0x03D5CBF0 LDR X8, [X0 + 0xB8]
	0x03D5CBF4 LDR W8, [X8 + 0x8]
	0x03D5CBF8 CMP W21, W8
	0x03D5CBFC B.NE 0x3D5CC4C
	0x03D5CC00 MOV X0, X20
	0x03D5CC04 MOV X1, X31
	0x03D5CC08 BL 0x3DB9E70
	0x03D5CC0C CBZ X0, 0x3D5CC90
	0x03D5CC10 MOV X1, X31
	0x03D5CC14 BL 0x3DEC0CC
	0x03D5CC18 LDR W1, [X19 + 0x9C]
	0x03D5CC1C MOV X2, X31
	0x03D5CC20 BL 0x3DBF888
	0x03D5CC24 MOV X0, X19
	0x03D5CC28 LDP X20, X19, [X31 + 0x20]
	0x03D5CC2C LDP X22, X21, [X31 + 0x10]
	0x03D5CC30 MOV X1, X31
	0x03D5CC34 LDR X30, [X31], #0x30
	0x03D5CC38 B 0x3DA02EC
	0x03D5CC3C LDP X20, X19, [X31 + 0x20]
	0x03D5CC40 LDP X22, X21, [X31 + 0x10]
	0x03D5CC44 LDR X30, [X31], #0x30
	0x03D5CC48 RET
	0x03D5CC4C LDP S0, S1, [X19 + 0xC0]
	0x03D5CC50 LDR W2, [X19 + 0x9C]
	0x03D5CC54 MOV X0, X20
	0x03D5CC58 MOV X1, X19
	0x03D5CC5C BL 0x3D5C4E4
	0x03D5CC60 MOV X0, X20
	0x03D5CC64 MOV X1, X31
	0x03D5CC68 BL 0x3DB9E70
	0x03D5CC6C CBZ X0, 0x3D5CC90
	0x03D5CC70 MOV X1, X31
	0x03D5CC74 BL 0x3DEC0CC
	0x03D5CC78 LDR W1, [X19 + 0x9C]
	0x03D5CC7C LDP X20, X19, [X31 + 0x20]
	0x03D5CC80 LDP X22, X21, [X31 + 0x10]
	0x03D5CC84 MOV X2, X31
	0x03D5CC88 LDR X30, [X31], #0x30
	0x03D5CC8C B 0x3DBF888
	0x03D5CC90 BL 0x1C16F20
	0x03D5CC94 STR X30, [X31 - 0x30]!
	0x03D5CC98 STP X22, X21, [X31 + 0x10]
	0x03D5CC9C STP X20, X19, [X31 + 0x20]
	0x03D5CCA0 ADRP X21, 0x68B000
	0x03D5CCA4 LDRB W8, [X21 + 0xC77]
	0x03D5CCA8 MOV X19, X1
	0x03D5CCAC MOV X20, X0
	0x03D5CCB0 TBNZ X8, 0x0, 0x3D5CCE0
	0x03D5CCB4 ADRP X0, 0x406000
	0x03D5CCB8 LDR X0, [X0 + 0xA58]
	0x03D5CCBC BL 0x1C16CF4
	0x03D5CCC0 ADRP X0, 0x3C2000
	0x03D5CCC4 LDR X0, [X0 + 0x210]
	0x03D5CCC8 BL 0x1C16CF4
	0x03D5CCCC ADRP X0, 0x3C0000
	0x03D5CCD0 LDR X0, [X0 + 0xE50]
	0x03D5CCD4 BL 0x1C16CF4
	0x03D5CCD8 MOVZ W8, 0x1
	0x03D5CCDC STRB W8, [X21 + 0xC77]
	0x03D5CCE0 LDRB W8, [X20 + 0x38]
	0x03D5CCE4 CBZ W8, 0x3D5CD58
	0x03D5CCE8 CBZ X19, 0x3D5CDA8
	0x03D5CCEC ADRP X22, 0x3C0000
	0x03D5CCF0 LDR X22, [X22 + 0xE50]
	0x03D5CCF4 LDR W21, [X19 + 0x9C]
	0x03D5CCF8 LDR X0, [X22]
	0x03D5CCFC LDR W8, [X0 + 0xE0]
	0x03D5CD00 CBNZ W8, 0x3D5CD0C
	0x03D5CD04 BL 0x1C16DFC
	0x03D5CD08 LDR X0, [X22]
	0x03D5CD0C LDR X8, [X0 + 0xB8]
	0x03D5CD10 LDR W8, [X8 + 0x8]
	0x03D5CD14 CMP W21, W8
	0x03D5CD18 B.NE 0x3D5CD68
	0x03D5CD1C MOV X0, X20
	0x03D5CD20 MOV X1, X31
	0x03D5CD24 BL 0x3DB9E70
	0x03D5CD28 CBZ X0, 0x3D5CDA8
	0x03D5CD2C MOV X1, X31
	0x03D5CD30 BL 0x3DEC0CC
	0x03D5CD34 LDR W1, [X19 + 0x9C]
	0x03D5CD38 MOV X2, X31
	0x03D5CD3C BL 0x3DBF888
	0x03D5CD40 MOV X0, X19
	0x03D5CD44 LDP X20, X19, [X31 + 0x20]
	0x03D5CD48 LDP X22, X21, [X31 + 0x10]
	0x03D5CD4C MOV X1, X31
	0x03D5CD50 LDR X30, [X31], #0x30
	0x03D5CD54 B 0x3D9D950
	0x03D5CD58 LDP X20, X19, [X31 + 0x20]
	0x03D5CD5C LDP X22, X21, [X31 + 0x10]
	0x03D5CD60 LDR X30, [X31], #0x30
	0x03D5CD64 RET
	0x03D5CD68 LDP S0, S1, [X19 + 0xC0]
	0x03D5CD6C MOV X0, X20
	0x03D5CD70 MOV X1, X19
	0x03D5CD74 BL 0x3D5C730
	0x03D5CD78 MOV X0, X20
	0x03D5CD7C MOV X1, X31
	0x03D5CD80 BL 0x3DB9E70
	0x03D5CD84 CBZ X0, 0x3D5CDA8
	0x03D5CD88 MOV X1, X31
	0x03D5CD8C BL 0x3DEC0CC
	0x03D5CD90 LDR W1, [X19 + 0x9C]
	0x03D5CD94 LDP X20, X19, [X31 + 0x20]
	0x03D5CD98 LDP X22, X21, [X31 + 0x10]
	0x03D5CD9C MOV X2, X31
	0x03D5CDA0 LDR X30, [X31], #0x30
	0x03D5CDA4 B 0x3DBF888
	0x03D5CDA8 BL 0x1C16F20
	0x03D5CDAC STR X30, [X31 - 0x30]!
	0x03D5CDB0 STP X22, X21, [X31 + 0x10]
	0x03D5CDB4 STP X20, X19, [X31 + 0x20]
	0x03D5CDB8 ADRP X21, 0x68B000
	0x03D5CDBC LDRB W8, [X21 + 0xC78]
	0x03D5CDC0 MOV X19, X1
	0x03D5CDC4 MOV X20, X0
	0x03D5CDC8 TBNZ X8, 0x0, 0x3D5CDF8
	0x03D5CDCC ADRP X0, 0x406000
	0x03D5CDD0 LDR X0, [X0 + 0xA60]
	0x03D5CDD4 BL 0x1C16CF4
	0x03D5CDD8 ADRP X0, 0x3C2000
	0x03D5CDDC LDR X0, [X0 + 0xD20]
	0x03D5CDE0 BL 0x1C16CF4
	0x03D5CDE4 ADRP X0, 0x3C0000
	0x03D5CDE8 LDR X0, [X0 + 0xE50]
	0x03D5CDEC BL 0x1C16CF4
	0x03D5CDF0 MOVZ W8, 0x1
	0x03D5CDF4 STRB W8, [X21 + 0xC78]
	0x03D5CDF8 LDRB W8, [X20 + 0x38]
	0x03D5CDFC CBZ W8, 0x3D5CE84
	0x03D5CE00 MOV X0, X20
	0x03D5CE04 MOV X1, X19
	0x03D5CE08 MOV X2, X31
	0x03D5CE0C BL 0x3DC08B8
	0x03D5CE10 TBZ X0, 0x0, 0x3D5CE84
	0x03D5CE14 CBZ X19, 0x3D5CED4
	0x03D5CE18 ADRP X22, 0x3C0000
	0x03D5CE1C LDR X22, [X22 + 0xE50]
	0x03D5CE20 LDR W21, [X19 + 0x9C]
	0x03D5CE24 LDR X0, [X22]
	0x03D5CE28 LDR W8, [X0 + 0xE0]
	0x03D5CE2C CBNZ W8, 0x3D5CE38
	0x03D5CE30 BL 0x1C16DFC
	0x03D5CE34 LDR X0, [X22]
	0x03D5CE38 LDR X8, [X0 + 0xB8]
	0x03D5CE3C LDR W8, [X8 + 0x8]
	0x03D5CE40 CMP W21, W8
	0x03D5CE44 B.NE 0x3D5CE94
	0x03D5CE48 MOV X0, X20
	0x03D5CE4C MOV X1, X31
	0x03D5CE50 BL 0x3DB9E70
	0x03D5CE54 CBZ X0, 0x3D5CED4
	0x03D5CE58 MOV X1, X31
	0x03D5CE5C BL 0x3DEC0CC
	0x03D5CE60 LDR W1, [X19 + 0x9C]
	0x03D5CE64 MOV X2, X31
	0x03D5CE68 BL 0x3DBF888
	0x03D5CE6C MOV X0, X19
	0x03D5CE70 LDP X20, X19, [X31 + 0x20]
	0x03D5CE74 LDP X22, X21, [X31 + 0x10]
	0x03D5CE78 MOV X1, X31
	0x03D5CE7C LDR X30, [X31], #0x30
	0x03D5CE80 B 0x3D9D950
	0x03D5CE84 LDP X20, X19, [X31 + 0x20]
	0x03D5CE88 LDP X22, X21, [X31 + 0x10]
	0x03D5CE8C LDR X30, [X31], #0x30
	0x03D5CE90 RET
	0x03D5CE94 LDR W2, [X19 + 0x9C]
	0x03D5CE98 MOV X0, X20
	0x03D5CE9C MOV X1, X19
	0x03D5CEA0 BL 0x3D5C8EC
	0x03D5CEA4 MOV X0, X20
	0x03D5CEA8 MOV X1, X31
	0x03D5CEAC BL 0x3DB9E70
	0x03D5CEB0 CBZ X0, 0x3D5CED4
	0x03D5CEB4 MOV X1, X31
	0x03D5CEB8 BL 0x3DEC0CC
	0x03D5CEBC LDR W1, [X19 + 0x9C]
	0x03D5CEC0 LDP X20, X19, [X31 + 0x20]
	0x03D5CEC4 LDP X22, X21, [X31 + 0x10]
	0x03D5CEC8 MOV X2, X31
	0x03D5CECC LDR X30, [X31], #0x30
	0x03D5CED0 B 0x3DBF888

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x68C000
	008 Move X20, 0x3C3000
	009 Move X21, 0x40B000
	010 Move W8, [X22+3184]
	011 Move X20, [X20+176]
	012 Move X21, [X21+1280]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {110}
	018 Move X0, 0x3C3000
	019 Move X0, [X0+240]
	020 Call 0x1C17CF4
	021 Move X0, 0x40B000
	022 Move X0, [X0+1288]
	023 Call 0x1C17CF4
	024 Move X0, 0x3C3000
	025 Move X0, [X0+136]
	026 Call 0x1C17CF4
	027 Move X0, 0x40B000
	028 Move X0, [X0+1296]
	029 Call 0x1C17CF4
	030 Move X0, 0x407000
	031 Move X0, [X0+3320]
	032 Call 0x1C17CF4
	033 Move X0, 0x408000
	034 Move X0, [X0+184]
	035 Call 0x1C17CF4
	036 Move X0, 0x40B000
	037 Move X0, [X0+1304]
	038 Call 0x1C17CF4
	039 Move X0, 0x3C2000
	040 Move X0, [X0+1904]
	041 Call 0x1C17CF4
	042 Move X0, 0x3C3000
	043 Move X0, [X0+152]
	044 Call 0x1C17CF4
	045 Move X0, 0x3C2000
	046 Move X0, [X0+1912]
	047 Call 0x1C17CF4
	048 Move X0, 0x40B000
	049 Move X0, [X0+1312]
	050 Call 0x1C17CF4
	051 Move X0, 0x40B000
	052 Move X0, [X0+1320]
	053 Call 0x1C17CF4
	054 Move X0, 0x40B000
	055 Move X0, [X0+1280]
	056 Call 0x1C17CF4
	057 Move X0, 0x40B000
	058 Move X0, [X0+1328]
	059 Call 0x1C17CF4
	060 Move X0, 0x40B000
	061 Move X0, [X0+1336]
	062 Call 0x1C17CF4
	063 Move X0, 0x40B000
	064 Move X0, [X0+1344]
	065 Call 0x1C17CF4
	066 Move X0, 0x40B000
	067 Move X0, [X0+1352]
	068 Call 0x1C17CF4
	069 Move X0, 0x40B000
	070 Move X0, [X0+1360]
	071 Call 0x1C17CF4
	072 Move X0, 0x40B000
	073 Move X0, [X0+1368]
	074 Call 0x1C17CF4
	075 Move X0, 0x40B000
	076 Move X0, [X0+1376]
	077 Call 0x1C17CF4
	078 Move X0, 0x407000
	079 Move X0, [X0+2536]
	080 Call 0x1C17CF4
	081 Move X0, 0x407000
	082 Move X0, [X0+2544]
	083 Call 0x1C17CF4
	084 Move X0, 0x407000
	085 Move X0, [X0+2552]
	086 Call 0x1C17CF4
	087 Move X0, 0x407000
	088 Move X0, [X0+2560]
	089 Call 0x1C17CF4
	090 Move X0, 0x3C3000
	091 Move X0, [X0+160]
	092 Call 0x1C17CF4
	093 Move X0, 0x3C2000
	094 Move X0, [X0+1920]
	095 Call 0x1C17CF4
	096 Move X0, 0x407000
	097 Move X0, [X0+2568]
	098 Call 0x1C17CF4
	099 Move X0, 0x3C2000
	100 Move X0, [X0+1928]
	101 Call 0x1C17CF4
	102 Move X0, 0x3C3000
	103 Move X0, [X0+176]
	104 Call 0x1C17CF4
	105 Move X0, 0x3C3000
	106 Move X0, [X0+256]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X22+3184], W8
	110 Move X0, X19
	111 Move X1, X31
	112 Call Manipulator.get_target, X0
	113 Move X8, [X20]
	114 Move X20, X0
	115 Move X0, X8
	116 Call 0x1C17F10
	117 Move X2, [X21]
	118 Move X1, X19
	119 Move X3, X31
	120 Move X21, X0
	121 Call 0x2D0F824, X0, X1, X2
	122 Compare X20, 0
	123 JumpIfEqual {363}
	124 Move X8, 0x3C3000
	125 Move X8, [X8+136]
	126 Move X22, 0x407000
	127 Move X23, 0x40B000
	128 Move X0, X20
	129 Move X3, [X8]
	130 Move X22, [X22+2536]
	131 Move X23, [X23+1328]
	132 Move X1, X21
	133 Move W2, W31
	134 Call 0x21A2534, X0, X1, X2
	135 Move X0, X19
	136 Move X1, X31
	137 Call Manipulator.get_target, X0
	138 Move X8, [X22]
	139 Move X20, X0
	140 Move X0, X8
	141 Call 0x1C17F10
	142 Move X2, [X23]
	143 Move X1, X19
	144 Move X3, X31
	145 Move X21, X0
	146 Call 0x2D0F824, X0, X1, X2
	147 Compare X20, 0
	148 JumpIfEqual {363}
	149 Move X8, 0x40B000
	150 Move X8, [X8+1296]
	151 Move X22, 0x407000
	152 Move X23, 0x40B000
	153 Move X0, X20
	154 Move X3, [X8]
	155 Move X22, [X22+2544]
	156 Move X23, [X23+1336]
	157 Move X1, X21
	158 Move W2, W31
	159 Call 0x21A2534, X0, X1, X2
	160 Move X0, X19
	161 Move X1, X31
	162 Call Manipulator.get_target, X0
	163 Move X8, [X22]
	164 Move X20, X0
	165 Move X0, X8
	166 Call 0x1C17F10
	167 Move X2, [X23]
	168 Move X1, X19
	169 Move X3, X31
	170 Move X21, X0
	171 Call 0x2D0F824, X0, X1, X2
	172 Compare X20, 0
	173 JumpIfEqual {363}
	174 Move X8, 0x407000
	175 Move X8, [X8+3320]
	176 Move X22, 0x407000
	177 Move X23, 0x40B000
	178 Move X0, X20
	179 Move X3, [X8]
	180 Move X22, [X22+2552]
	181 Move X23, [X23+1320]
	182 Move X1, X21
	183 Move W2, W31
	184 Call 0x21A2534, X0, X1, X2
	185 Move X0, X19
	186 Move X1, X31
	187 Call Manipulator.get_target, X0
	188 Move X8, [X22]
	189 Move X20, X0
	190 Move X0, X8
	191 Call 0x1C17F10
	192 Move X2, [X23]
	193 Move X1, X19
	194 Move X3, X31
	195 Move X21, X0
	196 Call 0x2D0F824, X0, X1, X2
	197 Compare X20, 0
	198 JumpIfEqual {363}
	199 Move X8, 0x40B000
	200 Move X8, [X8+1288]
	201 Move X22, 0x3C2000
	202 Move X23, 0x40B000
	203 Move X0, X20
	204 Move X3, [X8]
	205 Move X22, [X22+1920]
	206 Move X23, [X23+1360]
	207 Move X1, X21
	208 Move W2, W31
	209 Call 0x21A2534, X0, X1, X2
	210 Move X0, X19
	211 Move X1, X31
	212 Call Manipulator.get_target, X0
	213 Move X8, [X22]
	214 Move X20, X0
	215 Move X0, X8
	216 Call 0x1C17F10
	217 Move X2, [X23]
	218 Move X1, X19
	219 Move X3, X31
	220 Move X21, X0
	221 Call 0x2D0F824, X0, X1, X2
	222 Compare X20, 0
	223 JumpIfEqual {363}
	224 Move X8, 0x3C2000
	225 Move X8, [X8+1904]
	226 Move X22, 0x3C3000
	227 Move X23, 0x40B000
	228 Move X0, X20
	229 Move X3, [X8]
	230 Move X22, [X22+160]
	231 Move X23, [X23+1368]
	232 Move X1, X21
	233 Move W2, W31
	234 Call 0x21A2534, X0, X1, X2
	235 Move X0, X19
	236 Move X1, X31
	237 Call Manipulator.get_target, X0
	238 Move X8, [X22]
	239 Move X20, X0
	240 Move X0, X8
	241 Call 0x1C17F10
	242 Move X2, [X23]
	243 Move X1, X19
	244 Move X3, X31
	245 Move X21, X0
	246 Call 0x2D0F824, X0, X1, X2
	247 Compare X20, 0
	248 JumpIfEqual {363}
	249 Move X8, 0x3C3000
	250 Move X8, [X8+152]
	251 Move X22, 0x3C2000
	252 Move X23, 0x40B000
	253 Move X0, X20
	254 Move X3, [X8]
	255 Move X22, [X22+1928]
	256 Move X23, [X23+1376]
	257 Move X1, X21
	258 Move W2, W31
	259 Call 0x21A2534, X0, X1, X2
	260 Move X0, X19
	261 Move X1, X31
	262 Call Manipulator.get_target, X0
	263 Move X8, [X22]
	264 Move X20, X0
	265 Move X0, X8
	266 Call 0x1C17F10
	267 Move X2, [X23]
	268 Move X1, X19
	269 Move X3, X31
	270 Move X21, X0
	271 Call 0x2D0F824, X0, X1, X2
	272 Compare X20, 0
	273 JumpIfEqual {363}
	274 Move X8, 0x3C2000
	275 Move X8, [X8+1912]
	276 Move X22, 0x407000
	277 Move X23, 0x40B000
	278 Move X0, X20
	279 Move X3, [X8]
	280 Move X22, [X22+2568]
	281 Move X23, [X23+1344]
	282 Move X1, X21
	283 Move W2, W31
	284 Call 0x21A2534, X0, X1, X2
	285 Move X0, X19
	286 Move X1, X31
	287 Call Manipulator.get_target, X0
	288 Move X8, [X22]
	289 Move X20, X0
	290 Move X0, X8
	291 Call 0x1C17F10
	292 Move X2, [X23]
	293 Move X1, X19
	294 Move X3, X31
	295 Move X21, X0
	296 Call 0x2D0F824, X0, X1, X2
	297 Compare X20, 0
	298 JumpIfEqual {363}
	299 Move X8, 0x408000
	300 Move X8, [X8+184]
	301 Move X22, 0x407000
	302 Move X23, 0x40B000
	303 Move X0, X20
	304 Move X3, [X8]
	305 Move X22, [X22+2560]
	306 Move X23, [X23+1352]
	307 Move X1, X21
	308 Move W2, W31
	309 Call 0x21A2534, X0, X1, X2
	310 Move X0, X19
	311 Move X1, X31
	312 Call Manipulator.get_target, X0
	313 Move X8, [X22]
	314 Move X20, X0
	315 Move X0, X8
	316 Call 0x1C17F10
	317 Move X2, [X23]
	318 Move X1, X19
	319 Move X3, X31
	320 Move X21, X0
	321 Call 0x2D0F824, X0, X1, X2
	322 Compare X20, 0
	323 JumpIfEqual {363}
	324 Move X8, 0x40B000
	325 Move X8, [X8+1304]
	326 Move X22, 0x3C3000
	327 Move X23, 0x40B000
	328 Move X0, X20
	329 Move X3, [X8]
	330 Move X22, [X22+256]
	331 Move X23, [X23+1312]
	332 Move X1, X21
	333 Move W2, W31
	334 Call 0x21A2534, X0, X1, X2
	335 Move X0, X19
	336 Move X1, X31
	337 Call Manipulator.get_target, X0
	338 Move X8, [X22]
	339 Move X20, X0
	340 Move X0, X8
	341 Call 0x1C17F10
	342 Move X2, [X23]
	343 Move X1, X19
	344 Move X3, X31
	345 Move X21, X0
	346 Call 0x2D0F824, X0, X1, X2
	347 Compare X20, 0
	348 JumpIfEqual {363}
	349 Move X8, 0x3C3000
	350 Move X8, [X8+240]
	351 Move X0, X20
	352 Move X1, X21
	353 Move X20, [X31+32]
	354 Move X19, [X31+40]
	355 Move X3, [X8]
	356 Move X22, [X31+16]
	357 Move X21, [X31+24]
	358 Move W2, W31
	359 Move X30, [X31+48]
	360 Move X23, [X31+56]
	361 Call 0x21A2534, X0, X1, X2
	362 Return 
	363 Call 0x1C17F20

Method: System.Void UnregisterCallbacksFromTarget()

Disassembly:
	0x03D5CED4 BL 0x1C16F20
	0x03D5CED8 STP X30, X21, [X31 - 0x20]!
	0x03D5CEDC STP X20, X19, [X31 + 0x10]
	0x03D5CEE0 ADRP X21, 0x68B000
	0x03D5CEE4 LDRB W8, [X21 + 0xC79]
	0x03D5CEE8 MOV X19, X1
	0x03D5CEEC MOV X20, X0
	0x03D5CEF0 TBNZ X8, 0x0, 0x3D5CF08
	0x03D5CEF4 ADRP X0, 0x406000
	0x03D5CEF8 LDR X0, [X0 + 0xA68]
	0x03D5CEFC BL 0x1C16CF4
	0x03D5CF00 MOVZ W8, 0x1
	0x03D5CF04 STRB W8, [X21 + 0xC79]
	0x03D5CF08 LDRB W8, [X20 + 0x38]
	0x03D5CF0C CBZ W8, 0x3D5CF4C
	0x03D5CF10 MOV X0, X20
	0x03D5CF14 MOV X1, X19
	0x03D5CF18 MOV X2, X31
	0x03D5CF1C BL 0x3DC08B8
	0x03D5CF20 TBZ X0, 0x0, 0x3D5CF4C
	0x03D5CF24 CBZ X19, 0x3D5CF58
	0x03D5CF28 LDR W0, [X19 + 0x9C]
	0x03D5CF2C BL 0x3D5CF5C
	0x03D5CF30 TBZ X0, 0x0, 0x3D5CF4C
	0x03D5CF34 LDR W2, [X19 + 0x9C]
	0x03D5CF38 MOV X0, X20
	0x03D5CF3C MOV X1, X19
	0x03D5CF40 LDP X20, X19, [X31 + 0x10]
	0x03D5CF44 LDP X30, X21, [X31], #0x20
	0x03D5CF48 B 0x3D5CA84
	0x03D5CF4C LDP X20, X19, [X31 + 0x10]
	0x03D5CF50 LDP X30, X21, [X31], #0x20
	0x03D5CF54 RET
	0x03D5CF58 BL 0x1C16F20
	0x03D5CF5C STP X30, X21, [X31 - 0x20]!
	0x03D5CF60 STP X20, X19, [X31 + 0x10]
	0x03D5CF64 ADRP X21, 0x68B000
	0x03D5CF68 ADRP X20, 0x3C0000
	0x03D5CF6C LDRB W8, [X21 + 0xC7B]
	0x03D5CF70 LDR X20, [X20 + 0xE50]
	0x03D5CF74 MOV W19, W0
	0x03D5CF78 TBNZ X8, 0x0, 0x3D5CF90
	0x03D5CF7C ADRP X0, 0x3C0000
	0x03D5CF80 LDR X0, [X0 + 0xE50]
	0x03D5CF84 BL 0x1C16CF4
	0x03D5CF88 MOVZ W8, 0x1
	0x03D5CF8C STRB W8, [X21 + 0xC7B]
	0x03D5CF90 LDR X0, [X20]
	0x03D5CF94 LDR W8, [X0 + 0xE0]
	0x03D5CF98 CBNZ W8, 0x3D5CFA4
	0x03D5CF9C BL 0x1C16DFC
	0x03D5CFA0 LDR X0, [X20]
	0x03D5CFA4 LDR X8, [X0 + 0xB8]
	0x03D5CFA8 LDR W8, [X8 + 0x8]
	0x03D5CFAC CMP W8, W19
	0x03D5CFB0 LDP X20, X19, [X31 + 0x10]
	0x03D5CFB4 CSET W0, NE
	0x03D5CFB8 LDP X30, X21, [X31], #0x20
	0x03D5CFBC RET
	0x03D5CFC0 STP X30, X21, [X31 - 0x20]!
	0x03D5CFC4 STP X20, X19, [X31 + 0x10]
	0x03D5CFC8 ADRP X21, 0x68B000
	0x03D5CFCC LDRB W8, [X21 + 0xC7A]
	0x03D5CFD0 MOV X19, X1
	0x03D5CFD4 MOV X20, X0
	0x03D5CFD8 TBNZ X8, 0x0, 0x3D5CFF0
	0x03D5CFDC ADRP X0, 0x406000
	0x03D5CFE0 LDR X0, [X0 + 0xA70]
	0x03D5CFE4 BL 0x1C16CF4
	0x03D5CFE8 MOVZ W8, 0x1
	0x03D5CFEC STRB W8, [X21 + 0xC7A]
	0x03D5CFF0 LDRB W8, [X20 + 0x38]
	0x03D5CFF4 CBZ W8, 0x3D5D020
	0x03D5CFF8 CBZ X19, 0x3D5D02C
	0x03D5CFFC LDR W0, [X19 + 0x90]
	0x03D5D000 BL 0x3D5CF5C
	0x03D5D004 TBZ X0, 0x0, 0x3D5D020
	0x03D5D008 LDR W2, [X19 + 0x90]
	0x03D5D00C MOV X0, X20
	0x03D5D010 MOV X1, X19
	0x03D5D014 LDP X20, X19, [X31 + 0x10]
	0x03D5D018 LDP X30, X21, [X31], #0x20
	0x03D5D01C B 0x3D5CA84
	0x03D5D020 LDP X20, X19, [X31 + 0x10]
	0x03D5D024 LDP X30, X21, [X31], #0x20
	0x03D5D028 RET
	0x03D5D02C BL 0x1C16F20
	0x03D5D030 STP X30, X21, [X31 - 0x20]!
	0x03D5D034 STP X20, X19, [X31 + 0x10]
	0x03D5D038 LDRB W8, [X0 + 0x39]
	0x03D5D03C CBZ W8, 0x3D5D04C
	0x03D5D040 LDRB W8, [X0 + 0x3A]
	0x03D5D044 MOV X19, X0
	0x03D5D048 CBZ W8, 0x3D5D058
	0x03D5D04C LDP X20, X19, [X31 + 0x10]
	0x03D5D050 LDP X30, X21, [X31], #0x20
	0x03D5D054 RET
	0x03D5D058 AND W8, W1, 0x1
	0x03D5D05C STRB W8, [X19 + 0x3A]
	0x03D5D060 TBNZ X1, 0x0, 0x3D5D0F0
	0x03D5D064 LDR X0, [X19 + 0x68]
	0x03D5D068 CBZ X0, 0x3D5D14C
	0x03D5D06C MOV X1, X31
	0x03D5D070 BL 0x3D6F764
	0x03D5D074 LDR X8, [X19 + 0x58]
	0x03D5D078 CBZ X8, 0x3D5D14C
	0x03D5D07C LDRB W9, [X19 + 0x70]
	0x03D5D080 MOV X1, X31
	0x03D5D084 EOR W9, W9, 0x1
	0x03D5D088 ADD W20, W0, W9
	0x03D5D08C MOV X0, X8
	0x03D5D090 BL 0x3D6F764
	0x03D5D094 LDR X8, [X19 + 0x58]
	0x03D5D098 CMP W0, W20
	0x03D5D09C CSET W9, LT
	0x03D5D0A0 CBZ X8, 0x3D5D14C
	0x03D5D0A4 MOV X0, X8
	0x03D5D0A8 MOV X1, X31
	0x03D5D0AC SUB W20, W20, W9
	0x03D5D0B0 BL 0x3D6F764
	0x03D5D0B4 CMP W0, W20
	0x03D5D0B8 B.EQ 0x3D5D0F0
	0x03D5D0BC LDR X8, [X19 + 0x78]
	0x03D5D0C0 CBZ X8, 0x3D5D14C
	0x03D5D0C4 LDR X0, [X19 + 0x58]
	0x03D5D0C8 CBZ X0, 0x3D5D14C
	0x03D5D0CC LDR X21, [X8 + 0x30]
	0x03D5D0D0 MOV X1, X31
	0x03D5D0D4 BL 0x3D6F764
	0x03D5D0D8 CBZ X21, 0x3D5D14C
	0x03D5D0DC MOV W1, W0
	0x03D5D0E0 MOV X0, X21
	0x03D5D0E4 MOV W2, W20
	0x03D5D0E8 MOV X3, X31
	0x03D5D0EC BL 0x3D75FC8
	0x03D5D0F0 LDR X0, [X19 + 0x48]
	0x03D5D0F4 CBZ X0, 0x3D5D100
	0x03D5D0F8 MOV X1, X31
	0x03D5D0FC BL 0x3DF6948
	0x03D5D100 MOV X20, X19
	0x03D5D104 LDR X0, [X20 + 0x50]!
	0x03D5D108 STUR X31, [X20 - 0x8]
	0x03D5D10C CBZ X0, 0x3D5D118
	0x03D5D110 MOV X1, X31
	0x03D5D114 BL 0x3DF6948
	0x03D5D118 STP X31, X31, [X20]
	0x03D5D11C LDRB W8, [X19 + 0x39]
	0x03D5D120 CBZ W8, 0x3D5D04C
	0x03D5D124 LDR X8, [X19 + 0x88]
	0x03D5D128 STRB W31, [X19 + 0x39]
	0x03D5D12C CBZ X8, 0x3D5D04C
	0x03D5D130 LDR X3, [X8 + 0x18]
	0x03D5D134 LDR X0, [X8 + 0x40]
	0x03D5D138 LDR X2, [X8 + 0x28]
	0x03D5D13C MOV X1, X19
	0x03D5D140 LDP X20, X19, [X31 + 0x10]
	0x03D5D144 LDP X30, X21, [X31], #0x20
	0x03D5D148 BR X3
	0x03D5D14C BL 0x1C16F20
	0x03D5D150 STP X30, X21, [X31 - 0x20]!
	0x03D5D154 STP X20, X19, [X31 + 0x10]
	0x03D5D158 ADRP X21, 0x68A000
	0x03D5D15C LDRB W8, [X21 + 0xC7D]
	0x03D5D160 MOV X20, X1
	0x03D5D164 MOV X19, X0
	0x03D5D168 TBNZ X8, 0x0, 0x3D5D180
	0x03D5D16C ADRP X0, 0x3C1000
	0x03D5D170 LDR X0, [X0 + 0x130]
	0x03D5D174 BL 0x1C16CF4
	0x03D5D178 MOVZ W8, 0x1
	0x03D5D17C STRB W8, [X21 + 0xC7D]
	0x03D5D180 CBZ X20, 0x3D5D1B8
	0x03D5D184 LDR W8, [X20 + 0x8C]
	0x03D5D188 CMP W8, 0x1B
	0x03D5D18C B.NE 0x3D5D1AC
	0x03D5D190 LDRB W8, [X19 + 0x39]
	0x03D5D194 CBZ W8, 0x3D5D1AC
	0x03D5D198 MOV X0, X19
	0x03D5D19C LDP X20, X19, [X31 + 0x10]
	0x03D5D1A0 MOVZ W1, 0x1
	0x03D5D1A4 LDP X30, X21, [X31], #0x20
	0x03D5D1A8 B 0x3D5D030
	0x03D5D1AC LDP X20, X19, [X31 + 0x10]
	0x03D5D1B0 LDP X30, X21, [X31], #0x20
	0x03D5D1B4 RET
	0x03D5D1B8 BL 0x1C16F20
	0x03D5D1BC STP D9, D8, [X31 - 0x50]!
	0x03D5D1C0 STR X30, [X31 + 0x10]
	0x03D5D1C4 STP X24, X23, [X31 + 0x20]
	0x03D5D1C8 STP X22, X21, [X31 + 0x30]
	0x03D5D1CC STP X20, X19, [X31 + 0x40]
	0x03D5D1D0 ADRP X20, 0x68A000
	0x03D5D1D4 LDRB W8, [X20 + 0xC81]
	0x03D5D1D8 MOV V8.16B, V0.16B
	0x03D5D1DC MOV X19, X0
	0x03D5D1E0 TBNZ X8, 0x0, 0x3D5D240
	0x03D5D1E4 ADRP X0, 0x396000
	0x03D5D1E8 LDR X0, [X0 + 0xE00]
	0x03D5D1EC BL 0x1C16CF4
	0x03D5D1F0 ADRP X0, 0x3BF000
	0x03D5D1F4 LDR X0, [X0 + 0x110]
	0x03D5D1F8 BL 0x1C16CF4
	0x03D5D1FC ADRP X0, 0x3BF000
	0x03D5D200 LDR X0, [X0 + 0x118]
	0x03D5D204 BL 0x1C16CF4
	0x03D5D208 ADRP X0, 0x396000
	0x03D5D20C LDR X0, [X0 + 0xE18]
	0x03D5D210 BL 0x1C16CF4
	0x03D5D214 ADRP X0, 0x409000
	0x03D5D218 LDR X0, [X0 + 0x4E0]
	0x03D5D21C BL 0x1C16CF4
	0x03D5D220 ADRP X0, 0x409000
	0x03D5D224 LDR X0, [X0 + 0x4C8]
	0x03D5D228 BL 0x1C16CF4
	0x03D5D22C ADRP X0, 0x409000
	0x03D5D230 LDR X0, [X0 + 0x570]
	0x03D5D234 BL 0x1C16CF4
	0x03D5D238 MOVZ W8, 0x1
	0x03D5D23C STRB W8, [X20 + 0xC81]
	0x03D5D240 STR X31, [X31 + 0x18]
	0x03D5D244 LDR X8, [X19 + 0x78]
	0x03D5D248 CBZ X8, 0x3D5D56C
	0x03D5D24C LDR X0, [X8 + 0x30]
	0x03D5D250 CBZ X0, 0x3D5D56C
	0x03D5D254 MOV X1, X31
	0x03D5D258 BL 0x3D6F8DC
	0x03D5D25C CBZ X0, 0x3D5D56C
	0x03D5D260 ADRP X10, 0x3BF000
	0x03D5D264 LDR X8, [X0]
	0x03D5D268 LDR X10, [X10 + 0x110]
	0x03D5D26C MOV X20, X0
	0x03D5D270 LDRH W9, [X8 + 0x12E]
	0x03D5D274 LDR X1, [X10]
	0x03D5D278 CBZ X9, 0x3D5D29C
	0x03D5D27C LDR X10, [X8 + 0xB0]
	0x03D5D280 ADD X10, X10, 0x8
	0x03D5D284 LDUR X11, [X10 - 0x8]
	0x03D5D288 CMP X11, X1
	0x03D5D28C B.EQ 0x3D5D2AC
	0x03D5D290 SUBS X9, X9, 0x1
	0x03D5D294 ADD X10, X10, 0x10
	0x03D5D298 B.NE 0x3D5D284
	0x03D5D29C MOV X0, X20
	0x03D5D2A0 MOV W2, W31
	0x03D5D2A4 BL 0x1C5C788
	0x03D5D2A8 B 0x3D5D2B8
	0x03D5D2AC LDRSW X9, [X10]
	0x03D5D2B0 ADD X8, X8, X9, 0x4, LSL
	0x03D5D2B4 ADD X0, X8, 0x138
	0x03D5D2B8 LDP X8, X1, [X0]
	0x03D5D2BC ADRP X22, 0x396000
	0x03D5D2C0 LDR X22, [X22 + 0xE00]
	0x03D5D2C4 MOV X0, X20
	0x03D5D2C8 BLR X8
	0x03D5D2CC MOV X20, X0
	0x03D5D2D0 CBZ X0, 0x3D5D570
	0x03D5D2D4 ADRP X23, 0x396000
	0x03D5D2D8 ADRP X24, 0x3BF000
	0x03D5D2DC LDR X23, [X23 + 0xE18]
	0x03D5D2E0 LDR X24, [X24 + 0x118]
	0x03D5D2E4 FMOV S9, W31
	0x03D5D2E8 LDR X8, [X20]
	0x03D5D2EC LDR X1, [X23]
	0x03D5D2F0 LDRH W9, [X8 + 0x12E]
	0x03D5D2F4 CBZ X9, 0x3D5D318
	0x03D5D2F8 LDR X10, [X8 + 0xB0]
	0x03D5D2FC ADD X10, X10, 0x8
	0x03D5D300 LDUR X11, [X10 - 0x8]
	0x03D5D304 CMP X11, X1
	0x03D5D308 B.EQ 0x3D5D328
	0x03D5D30C SUBS X9, X9, 0x1
	0x03D5D310 ADD X10, X10, 0x10
	0x03D5D314 B.NE 0x3D5D300
	0x03D5D318 MOV X0, X20
	0x03D5D31C MOV W2, W31
	0x03D5D320 BL 0x1C5C788
	0x03D5D324 B 0x3D5D334
	0x03D5D328 LDRSW X9, [X10]
	0x03D5D32C ADD X8, X8, X9, 0x4, LSL
	0x03D5D330 ADD X0, X8, 0x138
	0x03D5D334 LDP X8, X1, [X0]
	0x03D5D338 MOV X0, X20
	0x03D5D33C BLR X8
	0x03D5D340 TBZ X0, 0x0, 0x3D5D3D0
	0x03D5D344 LDR X8, [X20]
	0x03D5D348 LDR X1, [X24]
	0x03D5D34C LDRH W9, [X8 + 0x12E]
	0x03D5D350 CBZ X9, 0x3D5D374
	0x03D5D354 LDR X10, [X8 + 0xB0]
	0x03D5D358 ADD X10, X10, 0x8
	0x03D5D35C LDUR X11, [X10 - 0x8]
	0x03D5D360 CMP X11, X1
	0x03D5D364 B.EQ 0x3D5D384
	0x03D5D368 SUBS X9, X9, 0x1
	0x03D5D36C ADD X10, X10, 0x10
	0x03D5D370 B.NE 0x3D5D35C
	0x03D5D374 MOV X0, X20
	0x03D5D378 MOV W2, W31
	0x03D5D37C BL 0x1C5C788
	0x03D5D380 B 0x3D5D390
	0x03D5D384 LDRSW X9, [X10]
	0x03D5D388 ADD X8, X8, X9, 0x4, LSL
	0x03D5D38C ADD X0, X8, 0x138
	0x03D5D390 LDP X8, X1, [X0]
	0x03D5D394 MOV X0, X20
	0x03D5D398 BLR X8
	0x03D5D39C MOV X21, X0
	0x03D5D3A0 LDR X0, [X19 + 0x78]
	0x03D5D3A4 CBZ X0, 0x3D5D568
	0x03D5D3A8 MOV X1, X21
	0x03D5D3AC MOV X2, X31
	0x03D5D3B0 BL 0x3D72634
	0x03D5D3B4 FADD S9, S9, S0
	0x03D5D3B8 FCMP S9, S8
	0x03D5D3BC B.LE 0x3D5D2E8
	0x03D5D3C0 LDR X8, [X19 + 0x58]
	0x03D5D3C4 CBNZ X8, 0x3D5D2E8
	0x03D5D3C8 STR X21, [X19 + 0x58]
	0x03D5D3CC B 0x3D5D2E8
	0x03D5D3D0 MOV X21, X31
	0x03D5D3D4 MOVZ W23, 0x6
	0x03D5D3D8 CBZ X20, 0x3D5D434
	0x03D5D3DC LDR X8, [X20]
	0x03D5D3E0 LDR X1, [X22]
	0x03D5D3E4 LDRH W9, [X8 + 0x12E]
	0x03D5D3E8 CBZ X9, 0x3D5D40C
	0x03D5D3EC LDR X10, [X8 + 0xB0]
	0x03D5D3F0 ADD X10, X10, 0x8
	0x03D5D3F4 LDUR X11, [X10 - 0x8]
	0x03D5D3F8 CMP X11, X1
	0x03D5D3FC B.EQ 0x3D5D41C
	0x03D5D400 SUBS X9, X9, 0x1
	0x03D5D404 ADD X10, X10, 0x10
	0x03D5D408 B.NE 0x3D5D3F4
	0x03D5D40C MOV X0, X20
	0x03D5D410 MOV W2, W31
	0x03D5D414 BL 0x1C5C788
	0x03D5D418 B 0x3D5D428
	0x03D5D41C LDRSW X9, [X10]
	0x03D5D420 ADD X8, X8, X9, 0x4, LSL
	0x03D5D424 ADD X0, X8, 0x138
	0x03D5D428 LDP X8, X1, [X0]
	0x03D5D42C MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x68C000
	008 Move X20, 0x3C3000
	009 Move X21, 0x40B000
	010 Move W8, [X22+3185]
	011 Move X20, [X20+176]
	012 Move X21, [X21+1280]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {110}
	018 Move X0, 0x3C3000
	019 Move X0, [X0+3296]
	020 Call 0x1C17CF4
	021 Move X0, 0x407000
	022 Move X0, [X0+2576]
	023 Call 0x1C17CF4
	024 Move X0, 0x407000
	025 Move X0, [X0+2584]
	026 Call 0x1C17CF4
	027 Move X0, 0x407000
	028 Move X0, [X0+2592]
	029 Call 0x1C17CF4
	030 Move X0, 0x407000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x407000
	034 Move X0, [X0+2608]
	035 Call 0x1C17CF4
	036 Move X0, 0x407000
	037 Move X0, [X0+2616]
	038 Call 0x1C17CF4
	039 Move X0, 0x3C2000
	040 Move X0, [X0+1936]
	041 Call 0x1C17CF4
	042 Move X0, 0x3C3000
	043 Move X0, [X0+3368]
	044 Call 0x1C17CF4
	045 Move X0, 0x3C2000
	046 Move X0, [X0+1944]
	047 Call 0x1C17CF4
	048 Move X0, 0x40B000
	049 Move X0, [X0+1312]
	050 Call 0x1C17CF4
	051 Move X0, 0x40B000
	052 Move X0, [X0+1320]
	053 Call 0x1C17CF4
	054 Move X0, 0x40B000
	055 Move X0, [X0+1280]
	056 Call 0x1C17CF4
	057 Move X0, 0x40B000
	058 Move X0, [X0+1328]
	059 Call 0x1C17CF4
	060 Move X0, 0x40B000
	061 Move X0, [X0+1336]
	062 Call 0x1C17CF4
	063 Move X0, 0x40B000
	064 Move X0, [X0+1344]
	065 Call 0x1C17CF4
	066 Move X0, 0x40B000
	067 Move X0, [X0+1352]
	068 Call 0x1C17CF4
	069 Move X0, 0x40B000
	070 Move X0, [X0+1360]
	071 Call 0x1C17CF4
	072 Move X0, 0x40B000
	073 Move X0, [X0+1368]
	074 Call 0x1C17CF4
	075 Move X0, 0x40B000
	076 Move X0, [X0+1376]
	077 Call 0x1C17CF4
	078 Move X0, 0x407000
	079 Move X0, [X0+2536]
	080 Call 0x1C17CF4
	081 Move X0, 0x407000
	082 Move X0, [X0+2544]
	083 Call 0x1C17CF4
	084 Move X0, 0x406000
	085 Move X0, [X0+2552]
	086 Call 0x1C17CF4
	087 Move X0, 0x406000
	088 Move X0, [X0+2560]
	089 Call 0x1C17CF4
	090 Move X0, 0x3C2000
	091 Move X0, [X0+160]
	092 Call 0x1C17CF4
	093 Move X0, 0x3C1000
	094 Move X0, [X0+1920]
	095 Call 0x1C17CF4
	096 Move X0, 0x406000
	097 Move X0, [X0+2568]
	098 Call 0x1C17CF4
	099 Move X0, 0x3C1000
	100 Move X0, [X0+1928]
	101 Call 0x1C17CF4
	102 Move X0, 0x3C2000
	103 Move X0, [X0+176]
	104 Call 0x1C17CF4
	105 Move X0, 0x3C2000
	106 Move X0, [X0+256]
	107 Call 0x1C17CF4
	108 Move W8, 1
	109 Move [X22+3185], W8
	110 Move X0, X19
	111 Move X1, X31
	112 Call Manipulator.get_target, X0
	113 Move X8, [X20]
	114 Move X20, X0
	115 Move X0, X8
	116 Call 0x1C17F10
	117 Move X2, [X21]
	118 Move X1, X19
	119 Move X3, X31
	120 Move X21, X0
	121 Call 0x2D0F824, X0, X1, X2
	122 Compare X20, 0
	123 JumpIfEqual {363}
	124 Move X8, 0x406000
	125 Move X8, [X8+2584]
	126 Move X22, 0x406000
	127 Move X23, 0x40A000
	128 Move X0, X20
	129 Move X3, [X8]
	130 Move X22, [X22+2536]
	131 Move X23, [X23+1328]
	132 Move X1, X21
	133 Move W2, W31
	134 Call 0x21A28B4, X0, X1, X2
	135 Move X0, X19
	136 Move X1, X31
	137 Call Manipulator.get_target, X0
	138 Move X8, [X22]
	139 Move X20, X0
	140 Move X0, X8
	141 Call 0x1C17F10
	142 Move X2, [X23]
	143 Move X1, X19
	144 Move X3, X31
	145 Move X21, X0
	146 Call 0x2D0F824, X0, X1, X2
	147 Compare X20, 0
	148 JumpIfEqual {363}
	149 Move X8, 0x406000
	150 Move X8, [X8+2592]
	151 Move X22, 0x406000
	152 Move X23, 0x40A000
	153 Move X0, X20
	154 Move X3, [X8]
	155 Move X22, [X22+2544]
	156 Move X23, [X23+1336]
	157 Move X1, X21
	158 Move W2, W31
	159 Call 0x21A28B4, X0, X1, X2
	160 Move X0, X19
	161 Move X1, X31
	162 Call Manipulator.get_target, X0
	163 Move X8, [X22]
	164 Move X20, X0
	165 Move X0, X8
	166 Call 0x1C17F10
	167 Move X2, [X23]
	168 Move X1, X19
	169 Move X3, X31
	170 Move X21, X0
	171 Call 0x2D0F824, X0, X1, X2
	172 Compare X20, 0
	173 JumpIfEqual {363}
	174 Move X8, 0x406000
	175 Move X8, [X8+2600]
	176 Move X22, 0x406000
	177 Move X23, 0x40A000
	178 Move X0, X20
	179 Move X3, [X8]
	180 Move X22, [X22+2552]
	181 Move X23, [X23+1320]
	182 Move X1, X21
	183 Move W2, W31
	184 Call 0x21A28B4, X0, X1, X2
	185 Move X0, X19
	186 Move X1, X31
	187 Call Manipulator.get_target, X0
	188 Move X8, [X22]
	189 Move X20, X0
	190 Move X0, X8
	191 Call 0x1C17F10
	192 Move X2, [X23]
	193 Move X1, X19
	194 Move X3, X31
	195 Move X21, X0
	196 Call 0x2D0F824, X0, X1, X2
	197 Compare X20, 0
	198 JumpIfEqual {363}
	199 Move X8, 0x406000
	200 Move X8, [X8+2576]
	201 Move X22, 0x3C1000
	202 Move X23, 0x40A000
	203 Move X0, X20
	204 Move X3, [X8]
	205 Move X22, [X22+1920]
	206 Move X23, [X23+1360]
	207 Move X1, X21
	208 Move W2, W31
	209 Call 0x21A28B4, X0, X1, X2
	210 Move X0, X19
	211 Move X1, X31
	212 Call Manipulator.get_target, X0
	213 Move X8, [X22]
	214 Move X20, X0
	215 Move X0, X8
	216 Call 0x1C17F10
	217 Move X2, [X23]
	218 Move X1, X19
	219 Move X3, X31
	220 Move X21, X0
	221 Call 0x2D0F824, X0, X1, X2
	222 Compare X20, 0
	223 JumpIfEqual {363}
	224 Move X8, 0x3C1000
	225 Move X8, [X8+1936]
	226 Move X22, 0x3C2000
	227 Move X23, 0x40A000
	228 Move X0, X20
	229 Move X3, [X8]
	230 Move X22, [X22+160]
	231 Move X23, [X23+1368]
	232 Move X1, X21
	233 Move W2, W31
	234 Call 0x21A28B4, X0, X1, X2
	235 Move X0, X19
	236 Move X1, X31
	237 Call Manipulator.get_target, X0
	238 Move X8, [X22]
	239 Move X20, X0
	240 Move X0, X8
	241 Call 0x1C17F10
	242 Move X2, [X23]
	243 Move X1, X19
	244 Move X3, X31
	245 Move X21, X0
	246 Call 0x2D0F824, X0, X1, X2
	247 Compare X20, 0
	248 JumpIfEqual {363}
	249 Move X8, 0x3C2000
	250 Move X8, [X8+3368]
	251 Move X22, 0x3C1000
	252 Move X23, 0x40A000
	253 Move X0, X20
	254 Move X3, [X8]
	255 Move X22, [X22+1928]
	256 Move X23, [X23+1376]
	257 Move X1, X21
	258 Move W2, W31
	259 Call 0x21A28B4, X0, X1, X2
	260 Move X0, X19
	261 Move X1, X31
	262 Call Manipulator.get_target, X0
	263 Move X8, [X22]
	264 Move X20, X0
	265 Move X0, X8
	266 Call 0x1C17F10
	267 Move X2, [X23]
	268 Move X1, X19
	269 Move X3, X31
	270 Move X21, X0
	271 Call 0x2D0F824, X0, X1, X2
	272 Compare X20, 0
	273 JumpIfEqual {363}
	274 Move X8, 0x3C1000
	275 Move X8, [X8+1944]
	276 Move X22, 0x406000
	277 Move X23, 0x40A000
	278 Move X0, X20
	279 Move X3, [X8]
	280 Move X22, [X22+2568]
	281 Move X23, [X23+1344]
	282 Move X1, X21
	283 Move W2, W31
	284 Call 0x21A28B4, X0, X1, X2
	285 Move X0, X19
	286 Move X1, X31
	287 Call Manipulator.get_target, X0
	288 Move X8, [X22]
	289 Move X20, X0
	290 Move X0, X8
	291 Call 0x1C17F10
	292 Move X2, [X23]
	293 Move X1, X19
	294 Move X3, X31
	295 Move X21, X0
	296 Call 0x2D0F824, X0, X1, X2
	297 Compare X20, 0
	298 JumpIfEqual {363}
	299 Move X8, 0x406000
	300 Move X8, [X8+2608]
	301 Move X22, 0x406000
	302 Move X23, 0x40A000
	303 Move X0, X20
	304 Move X3, [X8]
	305 Move X22, [X22+2560]
	306 Move X23, [X23+1352]
	307 Move X1, X21
	308 Move W2, W31
	309 Call 0x21A28B4, X0, X1, X2
	310 Move X0, X19
	311 Move X1, X31
	312 Call Manipulator.get_target, X0
	313 Move X8, [X22]
	314 Move X20, X0
	315 Move X0, X8
	316 Call 0x1C17F10
	317 Move X2, [X23]
	318 Move X1, X19
	319 Move X3, X31
	320 Move X21, X0
	321 Call 0x2D0F824, X0, X1, X2
	322 Compare X20, 0
	323 JumpIfEqual {363}
	324 Move X8, 0x406000
	325 Move X8, [X8+2616]
	326 Move X22, 0x3C2000
	327 Move X23, 0x40A000
	328 Move X0, X20
	329 Move X3, [X8]
	330 Move X22, [X22+256]
	331 Move X23, [X23+1312]
	332 Move X1, X21
	333 Move W2, W31
	334 Call 0x21A28B4, X0, X1, X2
	335 Move X0, X19
	336 Move X1, X31
	337 Call Manipulator.get_target, X0
	338 Move X8, [X22]
	339 Move X20, X0
	340 Move X0, X8
	341 Call 0x1C17F10
	342 Move X2, [X23]
	343 Move X1, X19
	344 Move X3, X31
	345 Move X21, X0
	346 Call 0x2D0F824, X0, X1, X2
	347 Compare X20, 0
	348 JumpIfEqual {363}
	349 Move X8, 0x3C2000
	350 Move X8, [X8+3296]
	351 Move X0, X20
	352 Move X1, X21
	353 Move X20, [X31+32]
	354 Move X19, [X31+40]
	355 Move X3, [X8]
	356 Move X22, [X31+16]
	357 Move X21, [X31+24]
	358 Move W2, W31
	359 Move X30, [X31+48]
	360 Move X23, [X31+56]
	361 Call 0x21A28B4, X0, X1, X2
	362 Return 
	363 Call 0x1C17F20

Method: System.Void OnMouseDown(UnityEngine.UIElements.MouseDownEvent evt)

Disassembly:
	0x03D5D430 BLR X8
	0x03D5D434 CBNZ X21, 0x3D5D574
	0x03D5D438 CMP W23, 0x6
	0x03D5D43C B.EQ 0x3D5D444
	0x03D5D440 CBNZ W23, 0x3D5D550
	0x03D5D444 LDRB W8, [X19 + 0x39]
	0x03D5D448 ADRP X20, 0x409000
	0x03D5D44C ADRP X21, 0x409000
	0x03D5D450 LDR X20, [X20 + 0x4C8]
	0x03D5D454 LDR X21, [X21 + 0x4E0]
	0x03D5D458 CMP W8, 0x1
	0x03D5D45C B.EQ 0x3D5D484
	0x03D5D460 LDR X8, [X19 + 0x88]
	0x03D5D464 MOVZ W9, 0x1
	0x03D5D468 STRB W9, [X19 + 0x39]
	0x03D5D46C CBZ X8, 0x3D5D484
	0x03D5D470 LDR X9, [X8 + 0x18]
	0x03D5D474 LDR X0, [X8 + 0x40]
	0x03D5D478 LDR X2, [X8 + 0x28]
	0x03D5D47C MOV X1, X19
	0x03D5D480 BLR X9
	0x03D5D484 STR S8, [X19 + 0x34]
	0x03D5D488 LDR X0, [X20]
	0x03D5D48C BL 0x1C16F10
	0x03D5D490 MOV X20, X0
	0x03D5D494 BL 0x3D5B264
	0x03D5D498 STR X20, [X19 + 0x48]
	0x03D5D49C LDR X0, [X21]
	0x03D5D4A0 BL 0x1C16F10
	0x03D5D4A4 MOV X20, X0
	0x03D5D4A8 BL 0x3D5B3A0
	0x03D5D4AC LDR X8, [X19 + 0x40]
	0x03D5D4B0 STR X20, [X19 + 0x50]
	0x03D5D4B4 CBZ X8, 0x3D5D56C
	0x03D5D4B8 LDR X8, [X8 + 0x378]
	0x03D5D4BC ADD X0, X31, 0x18
	0x03D5D4C0 MOV X2, X31
	0x03D5D4C4 STR X8, [X31 + 0x18]
	0x03D5D4C8 LDR X1, [X19 + 0x48]
	0x03D5D4CC BL 0x3DF891C
	0x03D5D4D0 LDR X0, [X19 + 0x40]
	0x03D5D4D4 CBZ X0, 0x3D5D56C
	0x03D5D4D8 ADRP X8, 0x409000
	0x03D5D4DC LDR X8, [X8 + 0x570]
	0x03D5D4E0 LDR X1, [X8]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x68B000
	008 Move W8, [X21+3186]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x406000
	016 Move X0, [X0+2624]
	017 Call 0x1C17CF4
	018 Move X0, 0x3C0000
	019 Move X0, [X0+3664]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+3186], W8
	023 Move X0, X20
	024 Move X1, X19
	025 Move X2, X31
	026 Call MouseManipulator.CanStartManipulation, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {55}
	031 Compare X19, 0
	032 JumpIfEqual {62}
	033 Move X21, 0x3C0000
	034 Move X21, [X21+3664]
	035 Move S9, [X19+144]
	036 Move S8, [X19+148]
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move X0, X20
	045 Move X1, X19
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move W2, [X8+8]
	049 Move X30, [X31+16]
	050 Move X21, [X31+24]
	051 Move V0, V9
	052 Move V1, V8
	053 Move D9, [X31+48]
	054 Move D8, [X31+56]
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 Move D9, [X31+48]
	060 Move D8, [X31+56]
	061 Return 
	062 Call 0x1C17F20

Method: System.Void OnMouseMove(UnityEngine.UIElements.MouseMoveEvent evt)

Disassembly:
	0x03D5D6CC CBZ X9, 0x3D5D6F0
	0x03D5D6D0 LDR X10, [X8 + 0xB0]
	0x03D5D6D4 ADD X10, X10, 0x8
	0x03D5D6D8 LDUR X11, [X10 - 0x8]
	0x03D5D6DC CMP X11, X1
	0x03D5D6E0 B.EQ 0x3D5D700
	0x03D5D6E4 SUBS X9, X9, 0x1
	0x03D5D6E8 ADD X10, X10, 0x10
	0x03D5D6EC B.NE 0x3D5D6D8
	0x03D5D6F0 MOV X0, X20
	0x03D5D6F4 MOV W2, W31
	0x03D5D6F8 BL 0x1C5C788
	0x03D5D6FC B 0x3D5D70C
	0x03D5D700 LDRSW X9, [X10]
	0x03D5D704 ADD X8, X8, X9, 0x4, LSL
	0x03D5D708 ADD X0, X8, 0x138
	0x03D5D70C LDP X8, X1, [X0]
	0x03D5D710 ADRP X23, 0x396000
	0x03D5D714 LDR X23, [X23 + 0xE00]
	0x03D5D718 MOV X0, X20
	0x03D5D71C BLR X8
	0x03D5D720 MOV X20, X0
	0x03D5D724 CBZ X0, 0x3D5D8E4
	0x03D5D728 ADRP X21, 0x396000
	0x03D5D72C ADRP X22, 0x3BF000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x68B000
	006 Move W8, [X21+3187]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x406000
	014 Move X0, [X0+2632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3187], W8
	018 Move W8, [X20+56]
	019 Compare W8, 0
	020 JumpIfEqual {31}
	021 Compare X19, 0
	022 JumpIfEqual {36}
	023 Move S0, [X19+144]
	024 Move S1, [X19+148]
	025 Move X0, X20
	026 Move X1, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Call 0x1C17F20

Method: System.Void OnMouseUp(UnityEngine.UIElements.MouseUpEvent evt)

Disassembly:
	0x03D5D848 LDR X8, [X20]
	0x03D5D84C LDR X1, [X23]
	0x03D5D850 LDRH W9, [X8 + 0x12E]
	0x03D5D854 CBZ X9, 0x3D5D878
	0x03D5D858 LDR X10, [X8 + 0xB0]
	0x03D5D85C ADD X10, X10, 0x8
	0x03D5D860 LDUR X11, [X10 - 0x8]
	0x03D5D864 CMP X11, X1
	0x03D5D868 B.EQ 0x3D5D888
	0x03D5D86C SUBS X9, X9, 0x1
	0x03D5D870 ADD X10, X10, 0x10
	0x03D5D874 B.NE 0x3D5D860
	0x03D5D878 MOV X0, X20
	0x03D5D87C MOV W2, W31
	0x03D5D880 BL 0x1C5C788
	0x03D5D884 B 0x3D5D894
	0x03D5D888 LDRSW X9, [X10]
	0x03D5D88C ADD X8, X8, X9, 0x4, LSL
	0x03D5D890 ADD X0, X8, 0x138
	0x03D5D894 LDP X8, X1, [X0]
	0x03D5D898 MOV X0, X20
	0x03D5D89C BLR X8
	0x03D5D8A0 CBNZ X21, 0x3D5D8E8
	0x03D5D8A4 CMP W22, 0x6
	0x03D5D8A8 B.EQ 0x3D5D8B0
	0x03D5D8AC CBNZ W22, 0x3D5D8C8
	0x03D5D8B0 MOV X0, X19
	0x03D5D8B4 LDP X20, X19, [X31 + 0x30]
	0x03D5D8B8 LDP X22, X21, [X31 + 0x20]
	0x03D5D8BC LDP X30, X23, [X31 + 0x10]
	0x03D5D8C0 LDR V8, [X31], #0x40
	0x03D5D8C4 B 0x3D5D9A8
	0x03D5D8C8 LDP X20, X19, [X31 + 0x30]
	0x03D5D8CC LDP X22, X21, [X31 + 0x20]
	0x03D5D8D0 LDP X30, X23, [X31 + 0x10]
	0x03D5D8D4 LDR V8, [X31], #0x40
	0x03D5D8D8 RET
	0x03D5D8DC BL 0x1C16F20
	0x03D5D8E0 BL 0x1C16F20
	0x03D5D8E4 BL 0x1C16F20
	0x03D5D8E8 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x68B000
	006 Move W8, [X21+3188]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x406000
	014 Move X0, [X0+2640]
	015 Call 0x1C17CF4
	016 Move X0, 0x3C0000
	017 Move X0, [X0+3664]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3188], W8
	021 Move W8, [X20+56]
	022 Compare W8, 0
	023 JumpIfEqual {50}
	024 Move X0, X20
	025 Move X1, X19
	026 Move X2, X31
	027 Call MouseManipulator.CanStopManipulation, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {50}
	032 Compare X19, 0
	033 JumpIfEqual {55}
	034 Move X21, 0x3C0000
	035 Move X21, [X21+3664]
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X21]
	042 Move X8, [X0+184]
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move W2, [X8+8]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Call 0x1C17F20

Method: System.Void OnMouseCaptureOut(UnityEngine.UIElements.MouseCaptureOutEvent evt)

Disassembly:
	0x03D5DA08 CBZ X20, 0x3D5DC14
	0x03D5DA0C ADRP X23, 0x3BF000
	0x03D5DA10 LDR X9, [X20]
	0x03D5DA14 LDR X23, [X23 + 0x128]
	0x03D5DA18 MOV X8, X1
	0x03D5DA1C MOV X21, X0
	0x03D5DA20 LDRH W10, [X9 + 0x12E]
	0x03D5DA24 LDR X1, [X23]
	0x03D5DA28 AND X22, X8, 0x0
	0x03D5DA2C CBZ X10, 0x3D5DA50
	0x03D5DA30 LDR X8, [X9 + 0xB0]
	0x03D5DA34 ADD X8, X8, 0x8
	0x03D5DA38 LDUR X11, [X8 - 0x8]
	0x03D5DA3C CMP X11, X1
	0x03D5DA40 B.EQ 0x3D5DA60
	0x03D5DA44 SUBS X10, X10, 0x1
	0x03D5DA48 ADD X8, X8, 0x10
	0x03D5DA4C B.NE 0x3D5DA38
	0x03D5DA50 MOVZ W2, 0x19
	0x03D5DA54 MOV X0, X20
	0x03D5DA58 BL 0x1C5C788
	0x03D5DA5C B 0x3D5DA70
	0x03D5DA60 LDR W8, [X8]
	0x03D5DA64 ADD W8, W8, 0x19
	0x03D5DA68 ADD X8, X9, W8, 0x4, SXTW
	0x03D5DA6C ADD X0, X8, 0x138
	0x03D5DA70 LDP X8, X3, [X0]
	0x03D5DA74 MOV X0, X20
	0x03D5DA78 MOV X1, X21
	0x03D5DA7C MOV X2, X22
	0x03D5DA80 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x68B000
	006 Move W8, [X21+3189]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3C0000
	014 Move X0, [X0+3664]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3189], W8
	018 Move W8, [X20+56]
	019 Compare W8, 0
	020 JumpIfEqual {37}
	021 Move X21, 0x3C0000
	022 Move X21, [X21+3664]
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X0, X20
	031 Move X1, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move W2, [X8+8]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 

Method: System.Void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt)

Disassembly:
	0x03D5DB6C BL 0x3D72634
	0x03D5DB70 FADD S0, S8, S0
	0x03D5DB74 MOV X0, X31
	0x03D5DB78 BL 0x3DFED98
	0x03D5DB7C CBZ X20, 0x3D5DC14
	0x03D5DB80 LDR X9, [X20]
	0x03D5DB84 MOV X8, X1
	0x03D5DB88 LDR X1, [X23]
	0x03D5DB8C MOV X19, X0
	0x03D5DB90 LDRH W10, [X9 + 0x12E]
	0x03D5DB94 AND X21, X8, 0x0
	0x03D5DB98 CBZ X10, 0x3D5DBBC
	0x03D5DB9C LDR X8, [X9 + 0xB0]
	0x03D5DBA0 ADD X8, X8, 0x8
	0x03D5DBA4 LDUR X11, [X8 - 0x8]
	0x03D5DBA8 CMP X11, X1
	0x03D5DBAC B.EQ 0x3D5DBE0
	0x03D5DBB0 SUBS X10, X10, 0x1
	0x03D5DBB4 ADD X8, X8, 0x10
	0x03D5DBB8 B.NE 0x3D5DBA4
	0x03D5DBBC MOVZ W2, 0x19
	0x03D5DBC0 MOV X0, X20
	0x03D5DBC4 BL 0x1C5C788
	0x03D5DBC8 B 0x3D5DBF0
	0x03D5DBCC LDP X20, X19, [X31 + 0x30]
	0x03D5DBD0 LDP X22, X21, [X31 + 0x20]
	0x03D5DBD4 LDP X30, X23, [X31 + 0x10]
	0x03D5DBD8 LDR V8, [X31], #0x40
	0x03D5DBDC RET
	0x03D5DBE0 LDR W8, [X8]
	0x03D5DBE4 ADD W8, W8, 0x19
	0x03D5DBE8 ADD X8, X9, W8, 0x4, SXTW
	0x03D5DBEC ADD X0, X8, 0x138
	0x03D5DBF0 LDP X4, X3, [X0]
	0x03D5DBF4 MOV X0, X20
	0x03D5DBF8 MOV X1, X19
	0x03D5DBFC MOV X2, X21
	0x03D5DC00 LDP X20, X19, [X31 + 0x30]
	0x03D5DC04 LDP X22, X21, [X31 + 0x20]
	0x03D5DC08 LDP X30, X23, [X31 + 0x10]
	0x03D5DC0C LDR V8, [X31], #0x40
	0x03D5DC10 BR X4
	0x03D5DC14 BL 0x1C16F20
	0x03D5DC18 STP X30, X21, [X31 - 0x20]!
	0x03D5DC1C STP X20, X19, [X31 + 0x10]
	0x03D5DC20 ADRP X21, 0x68A000
	0x03D5DC24 ADRP X20, 0x3BE000
	0x03D5DC28 LDRB W8, [X21 + 0xC84]
	0x03D5DC2C LDR X20, [X20 + 0x898]
	0x03D5DC30 MOV X19, X0
	0x03D5DC34 TBNZ X8, 0x0, 0x3D5DC58
	0x03D5DC38 ADRP X0, 0x409000
	0x03D5DC3C LDR X0, [X0 + 0x578]
	0x03D5DC40 BL 0x1C16CF4
	0x03D5DC44 ADRP X0, 0x3BE000
	0x03D5DC48 LDR X0, [X0 + 0x898]
	0x03D5DC4C BL 0x1C16CF4
	0x03D5DC50 MOVZ W8, 0x1
	0x03D5DC54 STRB W8, [X21 + 0xC84]
	0x03D5DC58 LDR X0, [X20]
	0x03D5DC5C ADRP X21, 0x409000
	0x03D5DC60 LDR W8, [X0 + 0xE0]
	0x03D5DC64 LDR X21, [X21 + 0x578]
	0x03D5DC68 CBNZ W8, 0x3D5DC70
	0x03D5DC6C BL 0x1C16DFC
	0x03D5DC70 MOV X0, X19
	0x03D5DC74 MOV X1, X31
	0x03D5DC78 BL 0x3DEF578
	0x03D5DC7C LDR X0, [X21]
	0x03D5DC80 LDR W8, [X0 + 0xE0]
	0x03D5DC84 CBNZ W8, 0x3D5DC90
	0x03D5DC88 BL 0x1C16DFC
	0x03D5DC8C LDR X0, [X21]
	0x03D5DC90 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x68B000
	007 Move W8, [X21+3190]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x3C2000
	015 Move X0, [X0+3312]
	016 Call 0x1C17CF4
	017 Move X0, 0x3C2000
	018 Move X0, [X0+3320]
	019 Call 0x1C17CF4
	020 Move X0, 0x3C0000
	021 Move X0, [X0+3664]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3190], W8
	025 Move X0, X20
	026 Move X1, X19
	027 Move X2, X31
	028 Call PointerManipulator.CanStartManipulation, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {66}
	033 Compare X19, 0
	034 JumpIfEqual {94}
	035 Move X22, 0x3C0000
	036 Move X22, [X22+3664]
	037 Move W21, [X19+156]
	038 Move X0, [X22]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X22]
	044 Move X8, [X0+184]
	045 Move W8, [X8+8]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X20
	048 Move X1, X31
	049 Call Manipulator.get_target, X0
	050 Compare X0, 0
	051 JumpIfEqual {94}
	052 Move X1, X31
	053 Call VisualElement.get_panel, X0
	054 Move W1, [X19+156]
	055 Move X2, X31
	056 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	057 Move X0, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+48]
	064 Call EventBase.StopImmediatePropagation, X0
	065 Return 
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return 
	072 Move S0, [X19+192]
	073 Move S1, [X19+196]
	074 Move W2, [X19+156]
	075 Move X0, X20
	076 Move X1, X19
	077 Call ColumnMover.ProcessDownEvent, X0, X1, X2, X3
	078 Move X0, X20
	079 Move X1, X31
	080 Call Manipulator.get_target, X0
	081 Compare X0, 0
	082 JumpIfEqual {94}
	083 Move X1, X31
	084 Call VisualElement.get_panel, X0
	085 Move W1, [X19+156]
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X2, X31
	091 Move X30, [X31+48]
	092 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	093 Return 
	094 Call 0x1C17F20

Method: System.Void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt)

Disassembly:
	0x03D5DC94 MOV X0, X19
	0x03D5DC98 MOV X2, X31
	0x03D5DC9C LDR X1, [X8]
	0x03D5DCA0 BL 0x3DF1C70
	0x03D5DCA4 MOVZ W1, 0x1
	0x03D5DCA8 MOV X0, X19
	0x03D5DCAC MOV X2, X31
	0x03D5DCB0 BL 0x3DEF238
	0x03D5DCB4 LDR X0, [X20]
	0x03D5DCB8 BL 0x1C16F10
	0x03D5DCBC MOV X1, X31
	0x03D5DCC0 MOV X20, X0
	0x03D5DCC4 BL 0x3DEF578
	0x03D5DCC8 CBZ X20, 0x3D5DD0C
	0x03D5DCCC MOVZ W1, 0x1
	0x03D5DCD0 MOV X0, X20
	0x03D5DCD4 MOV X2, X31
	0x03D5DCD8 BL 0x3DEF238
	0x03D5DCDC LDR X8, [X21]
	0x03D5DCE0 MOV X0, X20
	0x03D5DCE4 MOV X2, X31
	0x03D5DCE8 LDR X8, [X8 + 0xB8]
	0x03D5DCEC LDR X1, [X8 + 0x8]
	0x03D5DCF0 BL 0x3DF1C70
	0x03D5DCF4 MOV X0, X19
	0x03D5DCF8 MOV X1, X20
	0x03D5DCFC LDP X20, X19, [X31 + 0x10]
	0x03D5DD00 MOV X2, X31
	0x03D5DD04 LDP X30, X21, [X31], #0x20
	0x03D5DD08 B 0x3DF60E8
	0x03D5DD0C BL 0x1C16F20
	0x03D5DD10 STR X30, [X31 - 0x30]!
	0x03D5DD14 STP X22, X21, [X31 + 0x10]
	0x03D5DD18 STP X20, X19, [X31 + 0x20]
	0x03D5DD1C ADRP X20, 0x68A000
	0x03D5DD20 ADRP X19, 0x409000
	0x03D5DD24 LDRB W8, [X20 + 0xC85]
	0x03D5DD28 LDR X19, [X19 + 0x4D0]
	0x03D5DD2C TBNZ X8, 0x0, 0x3D5DD68
	0x03D5DD30 ADRP X0, 0x409000
	0x03D5DD34 LDR X0, [X0 + 0x578]
	0x03D5DD38 BL 0x1C16CF4
	0x03D5DD3C ADRP X0, 0x409000
	0x03D5DD40 LDR X0, [X0 + 0x4D0]
	0x03D5DD44 BL 0x1C16CF4
	0x03D5DD48 ADRP X0, 0x409000
	0x03D5DD4C LDR X0, [X0 + 0x4F0]
	0x03D5DD50 BL 0x1C16CF4
	0x03D5DD54 ADRP X0, 0x409000
	0x03D5DD58 LDR X0, [X0 + 0x580]
	0x03D5DD5C BL 0x1C16CF4
	0x03D5DD60 MOVZ W8, 0x1
	0x03D5DD64 STRB W8, [X20 + 0xC85]
	0x03D5DD68 LDR X0, [X19]
	0x03D5DD6C ADRP X22, 0x409000
	0x03D5DD70 ADRP X20, 0x409000
	0x03D5DD74 ADRP X21, 0x409000
	0x03D5DD78 LDR W8, [X0 + 0xE0]
	0x03D5DD7C LDR X22, [X22 + 0x580]
	0x03D5DD80 LDR X20, [X20 + 0x578]
	0x03D5DD84 LDR X21, [X21 + 0x4F0]
	0x03D5DD88 CBNZ W8, 0x3D5DD94
	0x03D5DD8C BL 0x1C16DFC
	0x03D5DD90 LDR X0, [X19]
	0x03D5DD94 LDR X8, [X0 + 0xB8]
	0x03D5DD98 LDR X1, [X22]
	0x03D5DD9C MOV X2, X31
	0x03D5DDA0 LDR X0, [X8]
	0x03D5DDA4 BL 0x321B938
	0x03D5DDA8 LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x68B000
	007 Move W8, [X21+3191]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x406000
	015 Move X0, [X0+2648]
	016 Call 0x1C17CF4
	017 Move X0, 0x3C2000
	018 Move X0, [X0+528]
	019 Call 0x1C17CF4
	020 Move X0, 0x3C0000
	021 Move X0, [X0+3664]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3191], W8
	025 Move W8, [X20+56]
	026 Compare W8, 0
	027 JumpIfEqual {61}
	028 Compare X19, 0
	029 JumpIfEqual {88}
	030 Move X22, 0x3C0000
	031 Move X22, [X22+3664]
	032 Move W21, [X19+156]
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move W8, [X8+8]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X20
	043 Move X1, X31
	044 Call Manipulator.get_target, X0
	045 Compare X0, 0
	046 JumpIfEqual {88}
	047 Move X1, X31
	048 Call VisualElement.get_panel, X0
	049 Move W1, [X19+156]
	050 Move X2, X31
	051 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	052 Move X0, X19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X1, X31
	058 Move X30, [X31+48]
	059 Call EventBase.StopPropagation, X0
	060 Return 
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return 
	067 Move S0, [X19+192]
	068 Move S1, [X19+196]
	069 Move X0, X20
	070 Move X1, X19
	071 Call ColumnMover.ProcessMoveEvent, X0, X1, X2
	072 Move X0, X20
	073 Move X1, X31
	074 Call Manipulator.get_target, X0
	075 Compare X0, 0
	076 JumpIfEqual {88}
	077 Move X1, X31
	078 Call VisualElement.get_panel, X0
	079 Move W1, [X19+156]
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X22, [X31+16]
	083 Move X21, [X31+24]
	084 Move X2, X31
	085 Move X30, [X31+48]
	086 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	087 Return 
	088 Call 0x1C17F20

Method: System.Void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt)

Disassembly:
	0x03D5DDAC MOV X2, X31
	0x03D5DDB0 LDR X8, [X8 + 0xB8]
	0x03D5DDB4 STR X0, [X8]
	0x03D5DDB8 LDR X8, [X20]
	0x03D5DDBC LDR X1, [X21]
	0x03D5DDC0 LDR X8, [X8 + 0xB8]
	0x03D5DDC4 LDR X0, [X8]
	0x03D5DDC8 BL 0x321B938
	0x03D5DDCC LDR X8, [X20]
	0x03D5DDD0 LDP X20, X19, [X31 + 0x20]
	0x03D5DDD4 LDP X22, X21, [X31 + 0x10]
	0x03D5DDD8 LDR X8, [X8 + 0xB8]
	0x03D5DDDC STR X0, [X8 + 0x8]
	0x03D5DDE0 LDR X30, [X31], #0x30
	0x03D5DDE4 RET
	0x03D5DDE8 LDR X0, [X0 + 0x58]
	0x03D5DDEC RET
	0x03D5DDF0 STR X1, [X0 + 0x58]
	0x03D5DDF4 RET
	0x03D5DDF8 LDRB W0, [X0 + 0x60]
	0x03D5DDFC RET
	0x03D5DE00 AND W8, W1, 0x1
	0x03D5DE04 STRB W8, [X0 + 0x60]
	0x03D5DE08 RET
	0x03D5DE0C STP X30, X21, [X31 - 0x20]!
	0x03D5DE10 STP X20, X19, [X31 + 0x10]
	0x03D5DE14 ADRP X21, 0x68A000
	0x03D5DE18 LDRB W8, [X21 + 0xC86]
	0x03D5DE1C MOV X20, X1
	0x03D5DE20 MOV X19, X0
	0x03D5DE24 TBNZ X8, 0x0, 0x3D5DE3C
	0x03D5DE28 ADRP X0, 0x405000
	0x03D5DE2C LDR X0, [X0 + 0x950]
	0x03D5DE30 BL 0x1C16CF4
	0x03D5DE34 MOVZ W8, 0x1
	0x03D5DE38 STRB W8, [X21 + 0xC86]
	0x03D5DE3C MOV X0, X19
	0x03D5DE40 MOV X1, X31
	0x03D5DE44 BL 0x3DC096C
	0x03D5DE48 LDR X0, [X19 + 0x18]
	0x03D5DE4C STR X20, [X19 + 0x48]
	0x03D5DE50 CBZ X0, 0x3D5DEC8
	0x03D5DE54 ADRP X9, 0x405000
	0x03D5DE58 LDR X9, [X9 + 0x950]
	0x03D5DE5C LDR W10, [X0 + 0x1C]
	0x03D5DE60 LDR X8, [X0 + 0x10]
	0x03D5DE64 LDR X9, [X9]
	0x03D5DE68 ADD W10, W10, 0x1
	0x03D5DE6C STR W10, [X0 + 0x1C]
	0x03D5DE70 CBZ X8, 0x3D5DEC8
	0x03D5DE74 LDRSW X10, [X0 + 0x18]
	0x03D5DE78 LDR W11, [X8 + 0x18]
	0x03D5DE7C CMP W10, W11
	0x03D5DE80 B.CS 0x3D5DEA0
	0x03D5DE84 MOVZ W11, 0xC
	0x03D5DE88 ADD W9, W10, 0x1
	0x03D5DE8C MADD X8, X10, X11, X8
	0x03D5DE90 STR W9, [X0 + 0x18]
	0x03D5DE94 STR X31, [X8 + 0x20]
	0x03D5DE98 STR W31, [X8 + 0x28]
	0x03D5DE9C B 0x3D5DEB8
	0x03D5DEA0 LDR X8, [X9 + 0x20]
	0x03D5DEA4 MOV X1, X31
	0x03D5DEA8 MOV X2, X31
	0x03D5DEAC LDR X8, [X8 + 0xC0]
	0x03D5DEB0 LDR X3, [X8 + 0x70]
	0x03D5DEB4 BL 0x2FF57C0
	0x03D5DEB8 STRB W31, [X19 + 0x38]
	0x03D5DEBC LDP X20, X19, [X31 + 0x10]
	0x03D5DEC0 LDP X30, X21, [X31], #0x20
	0x03D5DEC4 RET
	0x03D5DEC8 BL 0x1C16F20
	0x03D5DECC STP X30, X23, [X31 - 0x30]!
	0x03D5DED0 STP X22, X21, [X31 + 0x10]
	0x03D5DED4 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x68B000
	007 Move W8, [X21+3192]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x406000
	015 Move X0, [X0+2656]
	016 Call 0x1C17CF4
	017 Move X0, 0x3C2000
	018 Move X0, [X0+3360]
	019 Call 0x1C17CF4
	020 Move X0, 0x3C0000
	021 Move X0, [X0+3664]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3192], W8
	025 Move W8, [X20+56]
	026 Compare W8, 0
	027 JumpIfEqual {69}
	028 Move X0, X20
	029 Move X1, X19
	030 Move X2, X31
	031 Call PointerManipulator.CanStopManipulation, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {69}
	036 Compare X19, 0
	037 JumpIfEqual {95}
	038 Move X22, 0x3C0000
	039 Move X22, [X22+3664]
	040 Move W21, [X19+156]
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X22]
	047 Move X8, [X0+184]
	048 Move W8, [X8+8]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X20
	051 Move X1, X31
	052 Call Manipulator.get_target, X0
	053 Compare X0, 0
	054 JumpIfEqual {95}
	055 Move X1, X31
	056 Call VisualElement.get_panel, X0
	057 Move W1, [X19+156]
	058 Move X2, X31
	059 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	060 Move X0, X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X1, X31
	066 Move X30, [X31+48]
	067 Call EventBase.StopPropagation, X0
	068 Return 
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Move W2, [X19+156]
	076 Move X0, X20
	077 Move X1, X19
	078 Call ColumnMover.ProcessUpEvent, X0, X1, X2, X3
	079 Move X0, X20
	080 Move X1, X31
	081 Call Manipulator.get_target, X0
	082 Compare X0, 0
	083 JumpIfEqual {95}
	084 Move X1, X31
	085 Call VisualElement.get_panel, X0
	086 Move W1, [X19+156]
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X2, X31
	092 Move X30, [X31+48]
	093 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	094 Return 
	095 Call 0x1C17F20

Method: System.Void OnPointerCancel(UnityEngine.UIElements.PointerCancelEvent evt)

Disassembly:
	0x03D5DED8 ADRP X22, 0x68A000
	0x03D5DEDC ADRP X20, 0x3C0000
	0x03D5DEE0 ADRP X21, 0x409000
	0x03D5DEE4 LDRB W8, [X22 + 0xC87]
	0x03D5DEE8 LDR X20, [X20 + 0x780]
	0x03D5DEEC LDR X21, [X21 + 0x588]
	0x03D5DEF0 MOV X19, X0
	0x03D5DEF4 TBNZ X8, 0x0, 0x3D5DF90
	0x03D5DEF8 ADRP X0, 0x3C1000
	0x03D5DEFC LDR X0, [X0 + 0xF0]
	0x03D5DF00 BL 0x1C16CF4
	0x03D5DF04 ADRP X0, 0x3C0000
	0x03D5DF08 LDR X0, [X0 + 0x770]
	0x03D5DF0C BL 0x1C16CF4
	0x03D5DF10 ADRP X0, 0x3C1000
	0x03D5DF14 LDR X0, [X0 + 0x98]
	0x03D5DF18 BL 0x1C16CF4
	0x03D5DF1C ADRP X0, 0x3C0000
	0x03D5DF20 LDR X0, [X0 + 0x778]
	0x03D5DF24 BL 0x1C16CF4
	0x03D5DF28 ADRP X0, 0x409000
	0x03D5DF2C LDR X0, [X0 + 0x590]
	0x03D5DF30 BL 0x1C16CF4
	0x03D5DF34 ADRP X0, 0x409000
	0x03D5DF38 LDR X0, [X0 + 0x588]
	0x03D5DF3C BL 0x1C16CF4
	0x03D5DF40 ADRP X0, 0x409000
	0x03D5DF44 LDR X0, [X0 + 0x598]
	0x03D5DF48 BL 0x1C16CF4
	0x03D5DF4C ADRP X0, 0x409000
	0x03D5DF50 LDR X0, [X0 + 0x5A0]
	0x03D5DF54 BL 0x1C16CF4
	0x03D5DF58 ADRP X0, 0x3C1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x68B000
	006 Move W8, [X21+3193]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x406000
	014 Move X0, [X0+2664]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3193], W8
	018 Move W8, [X20+56]
	019 Compare W8, 0
	020 JumpIfEqual {46}
	021 Move X0, X20
	022 Move X1, X19
	023 Move X2, X31
	024 Call PointerManipulator.CanStopManipulation, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {46}
	029 Compare X19, 0
	030 JumpIfEqual {51}
	031 Move W0, [X19+156]
	032 Call ColumnMover.IsNotMouseEvent, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {46}
	037 Move W2, [X19+156]
	038 Move X0, X20
	039 Move X1, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call ColumnMover.ProcessCancelEvent, X0, X1, X2
	045 Return 
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 
	051 Call 0x1C17F20

Method: System.Void OnPointerCaptureOut(UnityEngine.UIElements.PointerCaptureOutEvent evt)

Disassembly:
	0x03D5DFC0 CBZ X20, 0x3D5E10C
	0x03D5DFC4 ADRP X8, 0x3C0000
	0x03D5DFC8 LDR X8, [X8 + 0x770]
	0x03D5DFCC ADRP X22, 0x3C1000
	0x03D5DFD0 ADRP X23, 0x409000
	0x03D5DFD4 MOV X0, X20
	0x03D5DFD8 LDR X3, [X8]
	0x03D5DFDC LDR X22, [X22 + 0xA0]
	0x03D5DFE0 LDR X23, [X23 + 0x598]
	0x03D5DFE4 MOV X1, X21
	0x03D5DFE8 MOV W2, W31
	0x03D5DFEC BL 0x21A1534
	0x03D5DFF0 MOV X0, X19
	0x03D5DFF4 MOV X1, X31
	0x03D5DFF8 BL 0x3DB9E70
	0x03D5DFFC LDR X8, [X22]
	0x03D5E000 MOV X20, X0
	0x03D5E004 MOV X0, X8
	0x03D5E008 BL 0x1C16F10
	0x03D5E00C LDR X2, [X23]
	0x03D5E010 MOV X1, X19
	0x03D5E014 MOV X3, X31
	0x03D5E018 MOV X21, X0
	0x03D5E01C BL 0x2D0E824
	0x03D5E020 CBZ X20, 0x3D5E10C
	0x03D5E024 ADRP X8, 0x3C0000
	0x03D5E028 LDR X8, [X8 + 0x98]
	0x03D5E02C ADRP X22, 0x3BF000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x68B000
	006 Move W8, [X21+3194]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x406000
	014 Move X0, [X0+2672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3194], W8
	018 Move W8, [X20+56]
	019 Compare W8, 0
	020 JumpIfEqual {38}
	021 Compare X19, 0
	022 JumpIfEqual {43}
	023 Move W0, [X19+144]
	024 Call ColumnMover.IsNotMouseEvent, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {38}
	029 Move W2, [X19+144]
	030 Move X0, X20
	031 Move X1, X19
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call ColumnMover.ProcessCancelEvent, X0, X1, X2
	037 Return 
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Call 0x1C17F20

Method: System.Boolean IsNotMouseEvent(System.Int32 pointerId)

Disassembly:
	0x03D5DF5C LDR X0, [X0 + 0xA0]
	0x03D5DF60 BL 0x1C16CF4
	0x03D5DF64 ADRP X0, 0x3C0000
	0x03D5DF68 LDR X0, [X0 + 0x780]
	0x03D5DF6C BL 0x1C16CF4
	0x03D5DF70 ADRP X0, 0x3C0000
	0x03D5DF74 LDR X0, [X0 + 0x788]
	0x03D5DF78 BL 0x1C16CF4
	0x03D5DF7C ADRP X0, 0x3C1000
	0x03D5DF80 LDR X0, [X0 + 0x100]
	0x03D5DF84 BL 0x1C16CF4
	0x03D5DF88 MOVZ W8, 0x1
	0x03D5DF8C STRB W8, [X22 + 0xC87]
	0x03D5DF90 MOV X0, X19
	0x03D5DF94 MOV X1, X31
	0x03D5DF98 BL 0x3DB9E70
	0x03D5DF9C LDR X8, [X20]
	0x03D5DFA0 MOV X20, X0
	0x03D5DFA4 MOV X0, X8
	0x03D5DFA8 BL 0x1C16F10
	0x03D5DFAC LDR X2, [X21]
	0x03D5DFB0 MOV X1, X19
	0x03D5DFB4 MOV X3, X31
	0x03D5DFB8 MOV X21, X0
	0x03D5DFBC BL 0x2D0E824

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x68B000
	006 Move X20, 0x3C0000
	007 Move W8, [X21+3195]
	008 Move X20, [X20+3664]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3C0000
	015 Move X0, [X0+3664]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3195], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W8, [X8+8]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Void ProcessCancelEvent(UnityEngine.UIElements.EventBase evt, System.Int32 pointerId)

Disassembly:
	0x03D5DA84 LDR X0, [X19 + 0x48]
	0x03D5DA88 CBZ X0, 0x3D5DC14
	0x03D5DA8C MOV X1, X31
	0x03D5DA90 BL 0x3DE7EEC
	0x03D5DA94 LDR V0, [X19 + 0x64]
	0x03D5DA98 MOV X20, X0
	0x03D5DA9C MOV X0, X31
	0x03D5DAA0 BL 0x3DFED98
	0x03D5DAA4 CBZ X20, 0x3D5DC14
	0x03D5DAA8 LDR X9, [X20]
	0x03D5DAAC MOV X8, X1
	0x03D5DAB0 LDR X1, [X23]
	0x03D5DAB4 MOV X21, X0
	0x03D5DAB8 LDRH W10, [X9 + 0x12E]
	0x03D5DABC AND X22, X8, 0x0
	0x03D5DAC0 CBZ X10, 0x3D5DAE4
	0x03D5DAC4 LDR X8, [X9 + 0xB0]
	0x03D5DAC8 ADD X8, X8, 0x8
	0x03D5DACC LDUR X11, [X8 - 0x8]
	0x03D5DAD0 CMP X11, X1
	0x03D5DAD4 B.EQ 0x3D5DAF4
	0x03D5DAD8 SUBS X10, X10, 0x1
	0x03D5DADC ADD X8, X8, 0x10
	0x03D5DAE0 B.NE 0x3D5DACC
	0x03D5DAE4 MOVZ W2, 0x36
	0x03D5DAE8 MOV X0, X20
	0x03D5DAEC BL 0x1C5C788
	0x03D5DAF0 B 0x3D5DB04
	0x03D5DAF4 LDR W8, [X8]
	0x03D5DAF8 ADD W8, W8, 0x36
	0x03D5DAFC ADD X8, X9, W8, 0x4, SXTW
	0x03D5DB00 ADD X0, X8, 0x138
	0x03D5DB04 LDP X8, X3, [X0]
	0x03D5DB08 MOV X0, X20
	0x03D5DB0C MOV X1, X21
	0x03D5DB10 MOV X2, X22
	0x03D5DB14 BLR X8
	0x03D5DB18 LDR X8, [X19 + 0x68]
	0x03D5DB1C CBZ X8, 0x3D5DBCC
	0x03D5DB20 LDR X0, [X19 + 0x50]
	0x03D5DB24 CBZ X0, 0x3D5DC14
	0x03D5DB28 MOV X1, X31
	0x03D5DB2C BL 0x3DE7EEC
	0x03D5DB30 LDR X8, [X19 + 0x78]
	0x03D5DB34 CBZ X8, 0x3D5DC14
	0x03D5DB38 LDR X1, [X19 + 0x68]
	0x03D5DB3C MOV X20, X0
	0x03D5DB40 MOV X0, X8
	0x03D5DB44 MOV X2, X31
	0x03D5DB48 BL 0x3D73D84
	0x03D5DB4C LDRB W8, [X19 + 0x70]
	0x03D5DB50 MOV V8.16B, V0.16B
	0x03D5DB54 FMOV S0, W31
	0x03D5DB58 CBNZ W8, 0x3D5DB70
	0x03D5DB5C LDR X0, [X19 + 0x78]
	0x03D5DB60 CBZ X0, 0x3D5DC14
	0x03D5DB64 LDR X1, [X19 + 0x68]
	0x03D5DB68 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x68B000
	007 Move W8, [X22+3196]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x3C0000
	016 Move X0, [X0+3704]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3196], W8
	020 Move X22, 0x3C0000
	021 Move W8, [X20+56]
	022 Move X22, [X22+3704]
	023 Compare W8, 0
	024 JumpIfEqual {34}
	025 Move X8, [X20+128]
	026 Move [X20+56], W31
	027 Compare X8, 0
	028 JumpIfEqual {34}
	029 Move X9, [X8+24]
	030 Move X0, [X8+64]
	031 Move X2, [X8+40]
	032 Move X1, X20
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X0, X20
	035 Move X1, X31
	036 Call Manipulator.get_target, X0
	037 Move W1, W21
	038 Move X2, X31
	039 Call PointerCaptureHelper.ReleasePointer, X0, X1
	040 Move X1, [X22]
	041 Move X0, X19
	042 Call 0x1C17E00
	043 Compare X0, 0
	044 JumpIfNotEqual {55}
	045 Move X0, X20
	046 Move X1, X31
	047 Call Manipulator.get_target, X0
	048 Compare X0, 0
	049 JumpIfEqual {72}
	050 Move X1, X31
	051 Call VisualElement.get_panel, X0
	052 Move W1, W21
	053 Move X2, X31
	054 Call PointerCaptureHelper.ProcessPointerCapture, X0, X1
	055 Move W8, [X20+57]
	056 Compare W8, 0
	057 JumpIfEqual {61}
	058 Move W1, 1
	059 Move X0, X20
	060 Call ColumnMover.EndDragMove, X0, X1
	061 Compare X19, 0
	062 JumpIfEqual {72}
	063 Move X0, X19
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X1, X31
	069 Move X30, [X31+48]
	070 Call EventBase.StopPropagation, X0
	071 Return 
	072 Call 0x1C17F20

Method: System.Void OnKeyDown(UnityEngine.UIElements.KeyDownEvent e)

Disassembly:
	0x03D5E150 BL 0x1C16CF4
	0x03D5E154 ADRP X0, 0x3C0000
	0x03D5E158 LDR X0, [X0 + 0xD28]
	0x03D5E15C BL 0x1C16CF4
	0x03D5E160 ADRP X0, 0x3BF000
	0x03D5E164 LDR X0, [X0 + 0x798]
	0x03D5E168 BL 0x1C16CF4
	0x03D5E16C ADRP X0, 0x408000
	0x03D5E170 LDR X0, [X0 + 0x590]
	0x03D5E174 BL 0x1C16CF4
	0x03D5E178 ADRP X0, 0x408000
	0x03D5E17C LDR X0, [X0 + 0x588]
	0x03D5E180 BL 0x1C16CF4
	0x03D5E184 ADRP X0, 0x408000
	0x03D5E188 LDR X0, [X0 + 0x598]
	0x03D5E18C BL 0x1C16CF4
	0x03D5E190 ADRP X0, 0x408000
	0x03D5E194 LDR X0, [X0 + 0x5A0]
	0x03D5E198 BL 0x1C16CF4
	0x03D5E19C ADRP X0, 0x3C0000
	0x03D5E1A0 LDR X0, [X0 + 0xA0]
	0x03D5E1A4 BL 0x1C16CF4
	0x03D5E1A8 ADRP X0, 0x3BF000
	0x03D5E1AC LDR X0, [X0 + 0x780]
	0x03D5E1B0 BL 0x1C16CF4
	0x03D5E1B4 ADRP X0, 0x3BF000
	0x03D5E1B8 LDR X0, [X0 + 0x788]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x68A000
	006 Move W8, [X21+3197]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3C1000
	014 Move X0, [X0+304]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3197], W8
	018 Compare X20, 0
	019 JumpIfEqual {38}
	020 Move W8, [X20+140]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W8, [X19+57]
	023 Compare W8, 0
	024 JumpIfEqual {33}
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W1, 1
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call ColumnMover.EndDragMove, X0, X1
	032 Return 
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 
	038 Call 0x1C17F20

Method: System.Void ProcessDownEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, System.Int32 pointerId)

Disassembly:
	0x03D5D4E4 BL 0x22A9CF4
	0x03D5D4E8 CBZ X0, 0x3D5D4F8
	0x03D5D4EC MOV X1, X31
	0x03D5D4F0 BL 0x3DEBF58
	0x03D5D4F4 CBNZ X0, 0x3D5D500
	0x03D5D4F8 LDR X0, [X19 + 0x40]
	0x03D5D4FC CBZ X0, 0x3D5D56C
	0x03D5D500 LDR X8, [X0 + 0x378]
	0x03D5D504 ADD X0, X31, 0x18
	0x03D5D508 MOV X2, X31
	0x03D5D50C STR X8, [X31 + 0x18]
	0x03D5D510 LDR X1, [X19 + 0x50]
	0x03D5D514 BL 0x3DF891C
	0x03D5D518 LDR X0, [X19 + 0x78]
	0x03D5D51C CBZ X0, 0x3D5D56C
	0x03D5D520 LDR X1, [X19 + 0x58]
	0x03D5D524 MOV X2, X31
	0x03D5D528 BL 0x3D73D84
	0x03D5D52C LDR X0, [X19 + 0x78]
	0x03D5D530 STR S0, [X19 + 0x60]
	0x03D5D534 CBZ X0, 0x3D5D56C
	0x03D5D538 LDR X1, [X19 + 0x58]
	0x03D5D53C MOV X2, X31
	0x03D5D540 BL 0x3D72634
	0x03D5D544 MOV X0, X19
	0x03D5D548 STR S0, [X19 + 0x64]
	0x03D5D54C BL 0x3D5D638
	0x03D5D550 LDP X20, X19, [X31 + 0x40]
	0x03D5D554 LDP X22, X21, [X31 + 0x30]
	0x03D5D558 LDP X24, X23, [X31 + 0x20]
	0x03D5D55C LDR X30, [X31 + 0x10]
	0x03D5D560 LDP D9, D8, [X31], #0x50
	0x03D5D564 RET
	0x03D5D568 BL 0x1C16F20
	0x03D5D56C BL 0x1C16F20
	0x03D5D570 BL 0x1C16F20
	0x03D5D574 MOV X0, X21
	0x03D5D578 BL 0x1C16F18
	0x03D5D57C B 0x3D5D58C
	0x03D5D580 B 0x3D5D58C
	0x03D5D584 B 0x3D5D58C
	0x03D5D588 B 0x3D5D58C
	0x03D5D58C CMP W1, 0x1
	0x03D5D590 B.NE 0x3D5D5AC
	0x03D5D594 BL 0x3EB1AD0
	0x03D5D598 LDR X21, [X0]
	0x03D5D59C BL 0x3EB1AE0
	0x03D5D5A0 MOV W23, W31
	0x03D5D5A4 CBNZ X20, 0x3D5D3DC
	0x03D5D5A8 B 0x3D5D434
	0x03D5D5AC MOV X19, X0
	0x03D5D5B0 MOV X21, X31
	0x03D5D5B4 B 0x3D5D5BC
	0x03D5D5B8 MOV X19, X0
	0x03D5D5BC CBZ X20, 0x3D5D618
	0x03D5D5C0 LDR X8, [X20]
	0x03D5D5C4 LDR X1, [X22]
	0x03D5D5C8 LDRH W9, [X8 + 0x12E]
	0x03D5D5CC CBZ X9, 0x3D5D5F0
	0x03D5D5D0 LDR X10, [X8 + 0xB0]
	0x03D5D5D4 ADD X10, X10, 0x8
	0x03D5D5D8 LDUR X11, [X10 - 0x8]
	0x03D5D5DC CMP X11, X1
	0x03D5D5E0 B.EQ 0x3D5D600
	0x03D5D5E4 SUBS X9, X9, 0x1
	0x03D5D5E8 ADD X10, X10, 0x10
	0x03D5D5EC B.NE 0x3D5D5D8
	0x03D5D5F0 MOV X0, X20
	0x03D5D5F4 MOV W2, W31
	0x03D5D5F8 BL 0x1C5C788
	0x03D5D5FC B 0x3D5D60C
	0x03D5D600 LDRSW X9, [X10]
	0x03D5D604 ADD X8, X8, X9, 0x4, LSL
	0x03D5D608 ADD X0, X8, 0x138
	0x03D5D60C LDP X8, X1, [X0]
	0x03D5D610 MOV X0, X20
	0x03D5D614 BLR X8
	0x03D5D618 CBNZ X21, 0x3D5D624
	0x03D5D61C MOV X0, X19
	0x03D5D620 BL 0x1D2C690
	0x03D5D624 MOV X0, X21
	0x03D5D628 BL 0x1C16F18
	0x03D5D62C BL 0x1990590
	0x03D5D630 STR S0, [X0 + 0x34]
	0x03D5D634 B 0x3D5D638
	0x03D5D638 STR D8, [X31 - 0x40]!
	0x03D5D63C STP X30, X23, [X31 + 0x10]
	0x03D5D640 STP X22, X21, [X31 + 0x20]
	0x03D5D644 STP X20, X19, [X31 + 0x30]
	0x03D5D648 ADRP X20, 0x68A000
	0x03D5D64C LDRB W8, [X20 + 0xC83]
	0x03D5D650 MOV X19, X0
	0x03D5D654 TBNZ X8, 0x0, 0x3D5D690
	0x03D5D658 ADRP X0, 0x396000
	0x03D5D65C LDR X0, [X0 + 0xE00]
	0x03D5D660 BL 0x1C16CF4
	0x03D5D664 ADRP X0, 0x3BF000
	0x03D5D668 LDR X0, [X0 + 0x110]
	0x03D5D66C BL 0x1C16CF4
	0x03D5D670 ADRP X0, 0x3BF000
	0x03D5D674 LDR X0, [X0 + 0x118]
	0x03D5D678 BL 0x1C16CF4
	0x03D5D67C ADRP X0, 0x396000
	0x03D5D680 LDR X0, [X0 + 0xE18]
	0x03D5D684 BL 0x1C16CF4
	0x03D5D688 MOVZ W8, 0x1
	0x03D5D68C STRB W8, [X20 + 0xC83]
	0x03D5D690 LDR X8, [X19 + 0x78]
	0x03D5D694 STR X31, [X19 + 0x68]
	0x03D5D698 STRB W31, [X19 + 0x70]
	0x03D5D69C CBZ X8, 0x3D5D8E0
	0x03D5D6A0 LDR X0, [X8 + 0x30]
	0x03D5D6A4 CBZ X0, 0x3D5D8E0
	0x03D5D6A8 MOV X1, X31
	0x03D5D6AC BL 0x3D6F8DC
	0x03D5D6B0 CBZ X0, 0x3D5D8E0
	0x03D5D6B4 ADRP X10, 0x3BF000
	0x03D5D6B8 LDR X8, [X0]
	0x03D5D6BC LDR X10, [X10 + 0x110]
	0x03D5D6C0 MOV X20, X0
	0x03D5D6C4 LDRH W9, [X8 + 0x12E]
	0x03D5D6C8 LDR X1, [X10]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x68B000
	009 Move W8, [X22+3198]
	010 Move W21, W2
	011 Move V8, V1
	012 Move V9, V0
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x3C0000
	020 Move X0, [X0+3704]
	021 Call 0x1C17CF4
	022 Move X0, 0x40A000
	023 Move X0, [X0+1384]
	024 Call 0x1C17CF4
	025 Move X0, 0x3BF000
	026 Move X0, [X0+2200]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3198], W8
	030 Move W8, [X20+56]
	031 Compare W8, 0
	032 JumpIfEqual {46}
	033 Compare X19, 0
	034 JumpIfEqual {148}
	035 Move X0, X19
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X30, [X31+16]
	041 Move X1, X31
	042 Move D9, [X31+64]
	043 Move D8, [X31+72]
	044 Call EventBase.StopImmediatePropagation, X0
	045 Return 
	046 Move X0, X20
	047 Move X1, X31
	048 Call Manipulator.get_target, X0
	049 Move W1, W21
	050 Move X2, X31
	051 Call PointerCaptureHelper.CapturePointer, X0, X1
	052 Move X8, 0x3C0000
	053 Move X8, [X8+3704]
	054 Move X0, X19
	055 Move X1, [X8]
	056 Call 0x1C17E00
	057 Compare X0, 0
	058 JumpIfNotEqual {69}
	059 Move X0, X20
	060 Move X1, X31
	061 Call Manipulator.get_target, X0
	062 Compare X0, 0
	063 JumpIfEqual {148}
	064 Move X1, X31
	065 Call VisualElement.get_panel, X0
	066 Move W1, W21
	067 Move X2, X31
	068 Call PointerCaptureHelper.ProcessPointerCapture, X0, X1
	069 Compare X19, 0
	070 JumpIfEqual {148}
	071 Move X8, [X19]
	072 Move X0, X19
	073 Move X9, [X8+472]
	074 Move X1, [X8+480]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare X0, 0
	077 JumpIfEqual {148}
	078 Move X8, 0x3BF000
	079 Move X8, [X8+2200]
	080 Move X9, [X0]
	081 Move X21, X0
	082 Move X8, [X8]
	083 Move W11, [X9+304]
	084 Move W10, [X8+304]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X9, [X9+200]
	087 Add X9, X9, X10
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, 0x40A000
	091 Move X8, [X8+1384]
	092 Move X0, X21
	093 Move X1, [X8]
	094 Call 0x22AACF4, X0
	095 Compare X0, 0
	096 JumpIfEqual {148}
	097 Move X8, [X0+1056]
	098 Move X1, X0
	099 Compare X8, 0
	100 JumpIfEqual {148}
	101 Move W8, [X8+48]
	102 Compare W8, 0
	103 JumpIfEqual {140}
	104 Move X0, X21
	105 Move V0, V9
	106 Move V1, V8
	107 Move X2, X31
	108 Move [X20+64], X1
	109 Call VisualElementExtensions.ChangeCoordinatesTo, X0, X1, X2
	110 Move X8, [X20+64]
	111 Compare X8, 0
	112 JumpIfEqual {148}
	113 Move W9, [X20+56]
	114 Move X8, [X8+1032]
	115 Move [X20+58], W31
	116 Move [X20+48], S0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X20+120], X8
	119 Move X8, [X20+128]
	120 Move W9, 1
	121 Move [X20+56], W9
	122 Compare X8, 0
	123 JumpIfEqual {129}
	124 Move X9, [X8+24]
	125 Move X0, [X8+64]
	126 Move X2, [X8+40]
	127 Move X1, X20
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X0, X19
	130 Move X20, [X31+48]
	131 Move X19, [X31+56]
	132 Move X22, [X31+32]
	133 Move X21, [X31+40]
	134 Move X30, [X31+16]
	135 Move X1, X31
	136 Move D9, [X31+64]
	137 Move D8, [X31+72]
	138 Call EventBase.StopPropagation, X0
	139 Return 
	140 Move X20, [X31+48]
	141 Move X19, [X31+56]
	142 Move X22, [X31+32]
	143 Move X21, [X31+40]
	144 Move X30, [X31+16]
	145 Move D9, [X31+64]
	146 Move D8, [X31+72]
	147 Return 
	148 Call 0x1C17F20

Method: System.Void ProcessMoveEvent(UnityEngine.UIElements.EventBase e, UnityEngine.Vector2 localPosition)

Disassembly:
	0x03D5D730 LDR X21, [X21 + 0xE18]
	0x03D5D734 LDR X22, [X22 + 0x118]
	0x03D5D738 FMOV S1, W31
	0x03D5D73C LDR X8, [X20]
	0x03D5D740 LDR X1, [X21]
	0x03D5D744 MOV V8.16B, V1.16B
	0x03D5D748 LDRH W9, [X8 + 0x12E]
	0x03D5D74C CBZ X9, 0x3D5D770
	0x03D5D750 LDR X10, [X8 + 0xB0]
	0x03D5D754 ADD X10, X10, 0x8
	0x03D5D758 LDUR X11, [X10 - 0x8]
	0x03D5D75C CMP X11, X1
	0x03D5D760 B.EQ 0x3D5D780
	0x03D5D764 SUBS X9, X9, 0x1
	0x03D5D768 ADD X10, X10, 0x10
	0x03D5D76C B.NE 0x3D5D758
	0x03D5D770 MOV X0, X20
	0x03D5D774 MOV W2, W31
	0x03D5D778 BL 0x1C5C788
	0x03D5D77C B 0x3D5D78C
	0x03D5D780 LDRSW X9, [X10]
	0x03D5D784 ADD X8, X8, X9, 0x4, LSL
	0x03D5D788 ADD X0, X8, 0x138
	0x03D5D78C LDP X8, X1, [X0]
	0x03D5D790 MOV X0, X20
	0x03D5D794 BLR X8
	0x03D5D798 TBZ X0, 0x0, 0x3D5D83C
	0x03D5D79C LDR X8, [X20]
	0x03D5D7A0 LDR X1, [X22]
	0x03D5D7A4 LDRH W9, [X8 + 0x12E]
	0x03D5D7A8 CBZ X9, 0x3D5D7CC
	0x03D5D7AC LDR X10, [X8 + 0xB0]
	0x03D5D7B0 ADD X10, X10, 0x8
	0x03D5D7B4 LDUR X11, [X10 - 0x8]
	0x03D5D7B8 CMP X11, X1
	0x03D5D7BC B.EQ 0x3D5D7DC
	0x03D5D7C0 SUBS X9, X9, 0x1
	0x03D5D7C4 ADD X10, X10, 0x10
	0x03D5D7C8 B.NE 0x3D5D7B4
	0x03D5D7CC MOV X0, X20
	0x03D5D7D0 MOV W2, W31
	0x03D5D7D4 BL 0x1C5C788
	0x03D5D7D8 B 0x3D5D7E8
	0x03D5D7DC LDRSW X9, [X10]
	0x03D5D7E0 ADD X8, X8, X9, 0x4, LSL
	0x03D5D7E4 ADD X0, X8, 0x138
	0x03D5D7E8 LDP X8, X1, [X0]
	0x03D5D7EC MOV X0, X20
	0x03D5D7F0 BLR X8
	0x03D5D7F4 MOV X1, X0
	0x03D5D7F8 LDR X0, [X19 + 0x78]
	0x03D5D7FC STR X1, [X19 + 0x68]
	0x03D5D800 CBZ X0, 0x3D5D8DC
	0x03D5D804 MOV X2, X31
	0x03D5D808 BL 0x3D72634
	0x03D5D80C LDR V2, [X19 + 0x34]
	0x03D5D810 FADD S1, S8, S0
	0x03D5D814 FCMP S1, S2
	0x03D5D818 B.LE 0x3D5D73C
	0x03D5D81C FMOV S1, 0.5
	0x03D5D820 FMUL S0, S0, S1
	0x03D5D824 FADD S0, S8, S0
	0x03D5D828 FCMP S2, S0
	0x03D5D82C CSET W8, MI
	0x03D5D830 MOV X21, X31
	0x03D5D834 STRB W8, [X19 + 0x70]
	0x03D5D838 B 0x3D5D840
	0x03D5D83C MOV X21, X31
	0x03D5D840 MOVZ W22, 0x6
	0x03D5D844 CBZ X20, 0x3D5D8A0

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x68B000
	008 Move W8, [X21+3199]
	009 Move V8, V1
	010 Move V9, V0
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x3BF000
	018 Move X0, [X0+2200]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3199], W8
	022 Move W8, [X20+58]
	023 Compare W8, 0
	024 JumpIfEqual {32}
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Move D9, [X31+48]
	030 Move D8, [X31+56]
	031 Return 
	032 Compare X19, 0
	033 JumpIfEqual {85}
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X9, [X8+472]
	037 Move X1, [X8+480]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {54}
	041 Move X8, 0x3BF000
	042 Move X8, [X8+2200]
	043 Move X9, [X0]
	044 Move X8, [X8]
	045 Move W11, [X9+304]
	046 Move W10, [X8+304]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X0, X31
	049 Move X9, [X9+200]
	050 Add X9, X9, X10
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Move X1, [X20+64]
	055 Move V0, V9
	056 Move V1, V8
	057 Move X2, X31
	058 Call VisualElementExtensions.ChangeCoordinatesTo, X0, X1, X2
	059 Move W8, [X20+57]
	060 Move V8, V0
	061 Compare W8, 0
	062 JumpIfEqual {66}
	063 Move X0, X20
	064 Move [X20+52], S8
	065 Call ColumnMover.UpdateMoveLocation, X0
	066 Move V0, [X20+48]
	067 Move S2, 5
	068 NotImplemented "Instruction FABD not yet implemented."
	069 NotImplemented "Instruction FCMP not yet implemented."
	070 Move X0, X20
	071 Call ColumnMover.BeginDragMove, X0, V0
	072 Move W8, [X20+57]
	073 Compare W8, 0
	074 JumpIfNotEqual {63}
	075 Move X0, X19
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X30, [X31+16]
	079 Move X21, [X31+24]
	080 Move X1, X31
	081 Move D9, [X31+48]
	082 Move D8, [X31+56]
	083 Call EventBase.StopPropagation, X0
	084 Return 
	085 Call 0x1C17F20

Method: System.Void ProcessUpEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, System.Int32 pointerId)

Disassembly:
	0x03D5D8EC BL 0x1C16F18
	0x03D5D8F0 B 0x3D5D900
	0x03D5D8F4 B 0x3D5D900
	0x03D5D8F8 B 0x3D5D900
	0x03D5D8FC B 0x3D5D900
	0x03D5D900 MOV X22, X0
	0x03D5D904 CMP W1, 0x1
	0x03D5D908 B.NE 0x3D5D928
	0x03D5D90C MOV X0, X22
	0x03D5D910 BL 0x3EB1AD0
	0x03D5D914 LDR X21, [X0]
	0x03D5D918 BL 0x3EB1AE0
	0x03D5D91C MOV W22, W31
	0x03D5D920 CBNZ X20, 0x3D5D848
	0x03D5D924 B 0x3D5D8A0
	0x03D5D928 MOV X21, X31
	0x03D5D92C B 0x3D5D934
	0x03D5D930 MOV X22, X0
	0x03D5D934 CBZ X20, 0x3D5D990
	0x03D5D938 LDR X8, [X20]
	0x03D5D93C LDR X1, [X23]
	0x03D5D940 LDRH W9, [X8 + 0x12E]
	0x03D5D944 CBZ X9, 0x3D5D968
	0x03D5D948 LDR X10, [X8 + 0xB0]
	0x03D5D94C ADD X10, X10, 0x8
	0x03D5D950 LDUR X11, [X10 - 0x8]
	0x03D5D954 CMP X11, X1
	0x03D5D958 B.EQ 0x3D5D978
	0x03D5D95C SUBS X9, X9, 0x1
	0x03D5D960 ADD X10, X10, 0x10
	0x03D5D964 B.NE 0x3D5D950
	0x03D5D968 MOV X0, X20
	0x03D5D96C MOV W2, W31
	0x03D5D970 BL 0x1C5C788
	0x03D5D974 B 0x3D5D984
	0x03D5D978 LDRSW X9, [X10]
	0x03D5D97C ADD X8, X8, X9, 0x4, LSL
	0x03D5D980 ADD X0, X8, 0x138
	0x03D5D984 LDP X8, X1, [X0]
	0x03D5D988 MOV X0, X20
	0x03D5D98C BLR X8
	0x03D5D990 CBNZ X21, 0x3D5D99C
	0x03D5D994 MOV X0, X22
	0x03D5D998 BL 0x1D2C690
	0x03D5D99C MOV X0, X21
	0x03D5D9A0 BL 0x1C16F18
	0x03D5D9A4 BL 0x1990590
	0x03D5D9A8 STR D8, [X31 - 0x40]!
	0x03D5D9AC STP X30, X23, [X31 + 0x10]
	0x03D5D9B0 STP X22, X21, [X31 + 0x20]
	0x03D5D9B4 STP X20, X19, [X31 + 0x30]
	0x03D5D9B8 ADRP X20, 0x68A000
	0x03D5D9BC LDRB W8, [X20 + 0xC82]
	0x03D5D9C0 MOV X19, X0
	0x03D5D9C4 TBNZ X8, 0x0, 0x3D5D9DC
	0x03D5D9C8 ADRP X0, 0x3BF000
	0x03D5D9CC LDR X0, [X0 + 0x128]
	0x03D5D9D0 BL 0x1C16CF4
	0x03D5D9D4 MOVZ W8, 0x1
	0x03D5D9D8 STRB W8, [X20 + 0xC82]
	0x03D5D9DC LDR X0, [X19 + 0x48]
	0x03D5D9E0 CBZ X0, 0x3D5DC14
	0x03D5D9E4 MOV X1, X31
	0x03D5D9E8 BL 0x3DE7EEC
	0x03D5D9EC LDR V0, [X19 + 0x60]
	0x03D5D9F0 LDP S2, S1, [X19 + 0x30]
	0x03D5D9F4 MOV X20, X0
	0x03D5D9F8 MOV X0, X31
	0x03D5D9FC FADD S0, S0, S1
	0x03D5DA00 FSUB S0, S0, S2
	0x03D5DA04 BL 0x3DFED98

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x68B000
	007 Move W8, [X22+3200]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x3C0000
	016 Move X0, [X0+3704]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3200], W8
	020 Move X22, 0x3C0000
	021 Move W8, [X20+56]
	022 Move X22, [X22+3704]
	023 Compare W8, 0
	024 JumpIfEqual {34}
	025 Move X8, [X20+128]
	026 Move [X20+56], W31
	027 Compare X8, 0
	028 JumpIfEqual {34}
	029 Move X9, [X8+24]
	030 Move X0, [X8+64]
	031 Move X2, [X8+40]
	032 Move X1, X20
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X0, X20
	035 Move X1, X31
	036 Call Manipulator.get_target, X0
	037 Move W1, W21
	038 Move X2, X31
	039 Call PointerCaptureHelper.ReleasePointer, X0, X1
	040 Move X1, [X22]
	041 Move X0, X19
	042 Call 0x1C17E00
	043 Compare X0, 0
	044 JumpIfNotEqual {55}
	045 Move X0, X20
	046 Move X1, X31
	047 Call Manipulator.get_target, X0
	048 Compare X0, 0
	049 JumpIfEqual {89}
	050 Move X1, X31
	051 Call VisualElement.get_panel, X0
	052 Move W1, W21
	053 Move X2, X31
	054 Call PointerCaptureHelper.ProcessPointerCapture, X0, X1
	055 Move W8, [X20+57]
	056 Compare W8, 0
	057 JumpIfEqual {63}
	058 Move X0, X20
	059 Move W1, W31
	060 Call ColumnMover.EndDragMove, X0, X1
	061 Compare X19, 0
	062 JumpIfNotEqual {71}
	063 Move W21, [X20+58]
	064 Move X0, X20
	065 Move W1, W31
	066 Call ColumnMover.EndDragMove, X0, X1
	067 Compare X19, 0
	068 JumpIfEqual {89}
	069 Compare W21, 0
	070 JumpIfEqual {80}
	071 Move X0, X19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X1, X31
	077 Move X30, [X31+48]
	078 Call EventBase.StopImmediatePropagation, X0
	079 Return 
	080 Move X0, X19
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X1, X31
	086 Move X30, [X31+48]
	087 Call EventBase.StopPropagation, X0
	088 Return 
	089 Call 0x1C17F20

Method: System.Void BeginDragMove(System.Single pos)

Disassembly:
	0x03D5E1BC BL 0x1C16CF4
	0x03D5E1C0 ADRP X0, 0x3C0000
	0x03D5E1C4 LDR X0, [X0 + 0x100]
	0x03D5E1C8 BL 0x1C16CF4
	0x03D5E1CC MOVZ W8, 0x1
	0x03D5E1D0 STRB W8, [X22 + 0xC88]
	0x03D5E1D4 MOV X0, X19
	0x03D5E1D8 MOV X1, X31
	0x03D5E1DC BL 0x3DB9E70
	0x03D5E1E0 LDR X8, [X20]
	0x03D5E1E4 MOV X20, X0
	0x03D5E1E8 MOV X0, X8
	0x03D5E1EC BL 0x1C16F10
	0x03D5E1F0 LDR X2, [X21]
	0x03D5E1F4 MOV X1, X19
	0x03D5E1F8 MOV X3, X31
	0x03D5E1FC MOV X21, X0
	0x03D5E200 BL 0x2D0E824
	0x03D5E204 CBZ X20, 0x3D5E350
	0x03D5E208 ADRP X8, 0x3C0000
	0x03D5E20C LDR X8, [X8 + 0xCE0]
	0x03D5E210 ADRP X22, 0x3BF000
	0x03D5E214 ADRP X23, 0x408000
	0x03D5E218 MOV X0, X20
	0x03D5E21C LDR X3, [X8]
	0x03D5E220 LDR X22, [X22 + 0x780]
	0x03D5E224 LDR X23, [X23 + 0x588]
	0x03D5E228 MOV X1, X21
	0x03D5E22C MOV W2, W31
	0x03D5E230 BL 0x21A18B4
	0x03D5E234 MOV X0, X19
	0x03D5E238 MOV X1, X31
	0x03D5E23C BL 0x3DB9E70
	0x03D5E240 LDR X8, [X22]
	0x03D5E244 MOV X20, X0
	0x03D5E248 MOV X0, X8
	0x03D5E24C BL 0x1C16F10
	0x03D5E250 LDR X2, [X23]
	0x03D5E254 MOV X1, X19
	0x03D5E258 MOV X3, X31
	0x03D5E25C MOV X21, X0
	0x03D5E260 BL 0x2D0E824
	0x03D5E264 CBZ X20, 0x3D5E350
	0x03D5E268 ADRP X8, 0x3BF000
	0x03D5E26C LDR X8, [X8 + 0x790]
	0x03D5E270 ADRP X22, 0x3C0000
	0x03D5E274 ADRP X23, 0x408000
	0x03D5E278 MOV X0, X20
	0x03D5E27C LDR X3, [X8]
	0x03D5E280 LDR X22, [X22 + 0xA0]
	0x03D5E284 LDR X23, [X23 + 0x598]
	0x03D5E288 MOV X1, X21
	0x03D5E28C MOV W2, W31
	0x03D5E290 BL 0x21A18B4
	0x03D5E294 MOV X0, X19
	0x03D5E298 MOV X1, X31
	0x03D5E29C BL 0x3DB9E70
	0x03D5E2A0 LDR X8, [X22]
	0x03D5E2A4 MOV X20, X0
	0x03D5E2A8 MOV X0, X8
	0x03D5E2AC BL 0x1C16F10
	0x03D5E2B0 LDR X2, [X23]
	0x03D5E2B4 MOV X1, X19
	0x03D5E2B8 MOV X3, X31
	0x03D5E2BC MOV X21, X0
	0x03D5E2C0 BL 0x2D0E824
	0x03D5E2C4 CBZ X20, 0x3D5E350
	0x03D5E2C8 ADRP X8, 0x3C0000
	0x03D5E2CC LDR X8, [X8 + 0xD28]
	0x03D5E2D0 ADRP X22, 0x3BF000
	0x03D5E2D4 ADRP X23, 0x408000
	0x03D5E2D8 MOV X0, X20
	0x03D5E2DC LDR X3, [X8]
	0x03D5E2E0 LDR X22, [X22 + 0x788]
	0x03D5E2E4 LDR X23, [X23 + 0x5A0]
	0x03D5E2E8 MOV X1, X21
	0x03D5E2EC MOV W2, W31
	0x03D5E2F0 BL 0x21A18B4
	0x03D5E2F4 MOV X0, X19
	0x03D5E2F8 MOV X1, X31
	0x03D5E2FC BL 0x3DB9E70
	0x03D5E300 LDR X8, [X22]
	0x03D5E304 MOV X20, X0
	0x03D5E308 MOV X0, X8
	0x03D5E30C BL 0x1C16F10
	0x03D5E310 LDR X2, [X23]
	0x03D5E314 MOV X1, X19
	0x03D5E318 MOV X3, X31
	0x03D5E31C MOV X21, X0
	0x03D5E320 BL 0x2D0E824
	0x03D5E324 CBZ X20, 0x3D5E350
	0x03D5E328 ADRP X8, 0x3BF000
	0x03D5E32C LDR X8, [X8 + 0x798]
	0x03D5E330 MOV X0, X20
	0x03D5E334 MOV X1, X21
	0x03D5E338 LDP X20, X19, [X31 + 0x20]
	0x03D5E33C LDR X3, [X8]
	0x03D5E340 LDP X22, X21, [X31 + 0x10]
	0x03D5E344 MOV W2, W31
	0x03D5E348 LDP X30, X23, [X31], #0x30
	0x03D5E34C B 0x21A18B4
	0x03D5E350 BL 0x1C16F20
	0x03D5E354 STP X30, X21, [X31 - 0x20]!
	0x03D5E358 STP X20, X19, [X31 + 0x10]
	0x03D5E35C ADRP X21, 0x689000
	0x03D5E360 LDRB W8, [X21 + 0xC89]
	0x03D5E364 MOV X20, X1
	0x03D5E368 MOV X19, X0
	0x03D5E36C TBNZ X8, 0x0, 0x3D5E384
	0x03D5E370 ADRP X0, 0x3C0000
	0x03D5E374 LDR X0, [X0 + 0x130]
	0x03D5E378 BL 0x1C16CF4
	0x03D5E37C MOVZ W8, 0x1
	0x03D5E380 STRB W8, [X21 + 0xC89]
	0x03D5E384 CBZ X20, 0x3D5E3C4
	0x03D5E388 LDR W8, [X20 + 0x8C]
	0x03D5E38C CMP W8, 0x1B
	0x03D5E390 B.NE 0x3D5E3B8
	0x03D5E394 LDRB W8, [X19 + 0x39]
	0x03D5E398 CBZ W8, 0x3D5E3B8
	0x03D5E39C LDRB W8, [X19 + 0x60]
	0x03D5E3A0 CBZ W8, 0x3D5E3B8
	0x03D5E3A4 MOV X0, X19
	0x03D5E3A8 LDP X20, X19, [X31 + 0x10]
	0x03D5E3AC MOVZ W1, 0x1
	0x03D5E3B0 LDP X30, X21, [X31], #0x20
	0x03D5E3B4 B 0x3D5E3C8
	0x03D5E3B8 LDP X20, X19, [X31 + 0x10]
	0x03D5E3BC LDP X30, X21, [X31], #0x20
	0x03D5E3C0 RET
	0x03D5E3C4 BL 0x1C16F20
	0x03D5E3C8 STR X30, [X31 - 0x20]!
	0x03D5E3CC STP X20, X19, [X31 + 0x10]
	0x03D5E3D0 LDRB W8, [X0 + 0x39]
	0x03D5E3D4 CBZ W8, 0x3D5E418
	0x03D5E3D8 LDRB W8, [X0 + 0x60]
	0x03D5E3DC MOV X19, X0
	0x03D5E3E0 MOV W20, W1
	0x03D5E3E4 CBZ W8, 0x3D5E3FC
	0x03D5E3E8 LDR X0, [X19 + 0x50]
	0x03D5E3EC CBZ X0, 0x3D5E3F8
	0x03D5E3F0 MOV X1, X31
	0x03D5E3F4 BL 0x3DF6948
	0x03D5E3F8 STR X31, [X19 + 0x50]
	0x03D5E3FC LDR X0, [X19 + 0x58]
	0x03D5E400 CBZ X0, 0x3D5E414
	0x03D5E404 LDR X1, [X19 + 0x48]
	0x03D5E408 AND W2, W20, 0x1
	0x03D5E40C MOV X3, X31
	0x03D5E410 BL 0x3D740F4
	0x03D5E414 STRB W31, [X19 + 0x39]
	0x03D5E418 LDP X20, X19, [X31 + 0x10]
	0x03D5E41C LDR X30, [X31], #0x20
	0x03D5E420 RET
	0x03D5E424 STR X30, [X31 - 0x30]!
	0x03D5E428 STP X22, X21, [X31 + 0x10]
	0x03D5E42C STP X20, X19, [X31 + 0x20]
	0x03D5E430 ADRP X21, 0x689000
	0x03D5E434 LDRB W8, [X21 + 0xC8A]
	0x03D5E438 MOV X19, X1
	0x03D5E43C MOV X20, X0
	0x03D5E440 TBNZ X8, 0x0, 0x3D5E488
	0x03D5E444 ADRP X0, 0x408000
	0x03D5E448 LDR X0, [X0 + 0x578]
	0x03D5E44C BL 0x1C16CF4
	0x03D5E450 ADRP X0, 0x3C0000
	0x03D5E454 LDR X0, [X0 + 0xCF0]
	0x03D5E458 BL 0x1C16CF4
	0x03D5E45C ADRP X0, 0x408000
	0x03D5E460 LDR X0, [X0 + 0x568]
	0x03D5E464 BL 0x1C16CF4
	0x03D5E468 ADRP X0, 0x408000
	0x03D5E46C LDR X0, [X0 + 0x570]
	0x03D5E470 BL 0x1C16CF4
	0x03D5E474 ADRP X0, 0x3BD000
	0x03D5E478 LDR X0, [X0 + 0x898]
	0x03D5E47C BL 0x1C16CF4
	0x03D5E480 MOVZ W8, 0x1
	0x03D5E484 STRB W8, [X21 + 0xC8A]
	0x03D5E488 STR X31, [X31 + 0x8]
	0x03D5E48C LDRB W8, [X20 + 0x38]
	0x03D5E490 CBZ W8, 0x3D5E4A8
	0x03D5E494 CBZ X19, 0x3D5E628
	0x03D5E498 MOV X0, X19
	0x03D5E49C MOV X1, X31
	0x03D5E4A0 BL 0x3DA02EC
	0x03D5E4A4 B 0x3D5E618
	0x03D5E4A8 MOV X0, X20
	0x03D5E4AC MOV X1, X19
	0x03D5E4B0 MOV X2, X31
	0x03D5E4B4 BL 0x3DC06D4
	0x03D5E4B8 TBZ X0, 0x0, 0x3D5E618
	0x03D5E4BC CBZ X19, 0x3D5E628
	0x03D5E4C0 LDR X8, [X19]
	0x03D5E4C4 MOV X0, X19
	0x03D5E4C8 LDP X9, X1, [X8 + 0x1D8]
	0x03D5E4CC BLR X9
	0x03D5E4D0 CBZ X0, 0x3D5E628
	0x03D5E4D4 ADRP X8, 0x3BD000
	0x03D5E4D8 LDR X8, [X8 + 0x898]
	0x03D5E4DC LDR X9, [X0]
	0x03D5E4E0 MOV X21, X0
	0x03D5E4E4 LDR X8, [X8]
	0x03D5E4E8 LDRB W11, [X9 + 0x130]
	0x03D5E4EC LDRB W10, [X8 + 0x130]
	0x03D5E4F0 CMP W11, W10
	0x03D5E4F4 B.CC 0x3D5E628
	0x03D5E4F8 LDR X9, [X9 + 0xC8]
	0x03D5E4FC ADD X9, X9, X10, 0x3, LSL
	0x03D5E500 LDUR X9, [X9 - 0x8]
	0x03D5E504 CMP X9, X8
	0x03D5E508 B.NE 0x3D5E628
	0x03D5E50C ADRP X8, 0x408000
	0x03D5E510 LDR X8, [X8 + 0x568]
	0x03D5E514 MOV X0, X21
	0x03D5E518 LDR X1, [X8]
	0x03D5E51C BL 0x22A9CF4
	0x03D5E520 LDR X9, [X20 + 0x48]
	0x03D5E524 STR X0, [X20 + 0x40]
	0x03D5E528 CBZ X9, 0x3D5E628
	0x03D5E52C LDR X9, [X9 + 0xA8]
	0x03D5E530 CBZ X9, 0x3D5E628
	0x03D5E534 LDRB W9, [X9 + 0x32]
	0x03D5E538 MOV X8, X0
	0x03D5E53C STRB W9, [X20 + 0x60]
	0x03D5E540 CBZ W9, 0x3D5E5C4
	0x03D5E544 LDR X9, [X20 + 0x50]
	0x03D5E548 CBNZ X9, 0x3D5E56C
	0x03D5E54C ADRP X8, 0x408000
	0x03D5E550 LDR X8, [X8 + 0x578]
	0x03D5E554 LDR X0, [X8]
	0x03D5E558 BL 0x1C16F10
	0x03D5E55C MOV X22, X0
	0x03D5E560 BL 0x3D5DC18
	0x03D5E564 LDR X8, [X20 + 0x40]
	0x03D5E568 STR X22, [X20 + 0x50]
	0x03D5E56C CBZ X8, 0x3D5E628
	0x03D5E570 ADRP X9, 0x408000
	0x03D5E574 LDR X9, [X9 + 0x570]
	0x03D5E578 MOV X0, X8
	0x03D5E57C LDR X1, [X9]
	0x03D5E580 BL 0x22A9CF4
	0x03D5E584 CBZ X0, 0x3D5E594
	0x03D5E588 MOV X1, X31
	0x03D5E58C BL 0x3DEBF58
	0x03D5E590 CBNZ X0, 0x3D5E5A8
	0x03D5E594 LDR X0, [X20 + 0x40]
	0x03D5E598 CBZ X0, 0x3D5E628
	0x03D5E59C MOV X1, X31
	0x03D5E5A0 BL 0x3DEBF58
	0x03D5E5A4 CBZ X0, 0x3D5E628
	0x03D5E5A8 LDR X8, [X0 + 0x378]
	0x03D5E5AC ADD X0, X31, 0x8
	0x03D5E5B0 MOV X2, X31
	0x03D5E5B4 STR X8, [X31 + 0x8]
	0x03D5E5B8 LDR X1, [X20 + 0x50]
	0x03D5E5BC BL 0x3DF891C
	0x03D5E5C0 LDR X8, [X20 + 0x40]
	0x03D5E5C4 CBZ X8, 0x3D5E628
	0x03D5E5C8 LDR X9, [X8 + 0x408]
	0x03D5E5CC MOV X0, X21
	0x03D5E5D0 MOV X1, X8
	0x03D5E5D4 MOV X2, X31
	0x03D5E5D8 STR X9, [X20 + 0x58]
	0x03D5E5DC LDP S0, S1, [X19 + 0xC0]
	0x03D5E5E0 BL 0x3D16E8C
	0x03D5E5E4 MOV X0, X20
	0x03D5E5E8 STP S0, S1, [X20 + 0x30]
	0x03D5E5EC BL 0x3D5E62C
	0x03D5E5F0 MOVZ W8, 0x1
	0x03D5E5F4 MOV X0, X20
	0x03D5E5F8 MOV X1, X31
	0x03D5E5FC STRB W8, [X20 + 0x38]
	0x03D5E600 BL 0x3DB9E70
	0x03D5E604 MOV X1, X31
	0x03D5E608 BL 0x3DBAB88
	0x03D5E60C MOV X0, X19
	0x03D5E610 MOV X1, X31
	0x03D5E614 BL 0x3D9D950
	0x03D5E618 LDP X20, X19, [X31 + 0x20]
	0x03D5E61C LDP X22, X21, [X31 + 0x10]
	0x03D5E620 LDR X30, [X31], #0x30
	0x03D5E624 RET
	0x03D5E628 BL 0x1C16F20
	0x03D5E62C STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x68A000
	011 Move W8, [X20+3201]
	012 Move V8, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x396000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0x3BF000
	022 Move X0, [X0+272]
	023 Call 0x1C17CF4
	024 Move X0, 0x3BF000
	025 Move X0, [X0+280]
	026 Call 0x1C17CF4
	027 Move X0, 0x396000
	028 Move X0, [X0+3608]
	029 Call 0x1C17CF4
	030 Move X0, 0x409000
	031 Move X0, [X0+1248]
	032 Call 0x1C17CF4
	033 Move X0, 0x409000
	034 Move X0, [X0+1224]
	035 Call 0x1C17CF4
	036 Move X0, 0x409000
	037 Move X0, [X0+1392]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+3201], W8
	041 Move [X31+24], X31
	042 Move X8, [X19+120]
	043 Compare X8, 0
	044 JumpIfEqual {260}
	045 Move X0, [X8+48]
	046 Compare X0, 0
	047 JumpIfEqual {260}
	048 Move X1, X31
	049 Call Columns.get_visibleList, X0
	050 Compare X0, 0
	051 JumpIfEqual {260}
	052 Move X10, 0x3BF000
	053 Move X8, [X0]
	054 Move X10, [X10+272]
	055 Move X20, X0
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X10]
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move X0, X20
	067 Move W2, W31
	068 Call 0x1C5D788
	069 NotImplemented "Instruction LDRSW not yet implemented."
	070 Add X8, X8, X9
	071 Add X0, X8, 312
	072 Move X8, [X0]
	073 Move X1, [X0+8]
	074 Move X22, 0x396000
	075 Move X22, [X22+3584]
	076 Move X0, X20
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X20, X0
	079 Compare X0, 0
	080 JumpIfEqual {261}
	081 Move X23, 0x396000
	082 Move X24, 0x3BF000
	083 Move X23, [X23+3608]
	084 Move X24, [X24+280]
	085 Move S9, W31
	086 Move X8, [X20]
	087 Move X1, [X23]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move X0, X20
	098 Move W2, W31
	099 Call 0x1C5D788
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Add X8, X8, X9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X1, [X0+8]
	105 Move X0, X20
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {145}
	111 Move X8, [X20]
	112 Move X1, [X24]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move X0, X20
	123 Move W2, W31
	124 Call 0x1C5D788
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Add X8, X8, X9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X1, [X0+8]
	130 Move X0, X20
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X21, X0
	133 Move X0, [X19+120]
	134 Compare X0, 0
	135 JumpIfEqual {259}
	136 Move X1, X21
	137 Move X2, X31
	138 Call ColumnLayout.GetDesiredWidth, X0, X1
	139 Add S9, S9, S0
	140 NotImplemented "Instruction FCMP not yet implemented."
	141 Move X8, [X19+88]
	142 Compare X8, 0
	143 JumpIfNotEqual {86}
	144 Move [X19+88], X21
	145 Move X21, X31
	146 Move W23, 6
	147 Compare X20, 0
	148 JumpIfEqual {170}
	149 Move X8, [X20]
	150 Move X1, [X22]
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Compare X9, 0
	153 JumpIfEqual {160}
	154 Move X10, [X8+176]
	155 Add X10, X10, 8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Subtract X9, X9, 1
	159 Add X10, X10, 16
	160 Move X0, X20
	161 Move W2, W31
	162 Call 0x1C5D788
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Add X8, X8, X9
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X1, [X0+8]
	168 Move X0, X20
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Compare X21, 0
	171 JumpIfNotEqual {262}
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Compare W23, 0
	174 JumpIfNotEqual {249}
	175 Move W8, [X19+57]
	176 Move X20, 0x409000
	177 Move X21, 0x409000
	178 Move X20, [X20+1224]
	179 Move X21, [X21+1248]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X8, [X19+136]
	182 Move W9, 1
	183 Move [X19+57], W9
	184 Compare X8, 0
	185 JumpIfEqual {191}
	186 Move X9, [X8+24]
	187 Move X0, [X8+64]
	188 Move X2, [X8+40]
	189 Move X1, X19
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Move [X19+52], S8
	192 Move X0, [X20]
	193 Call 0x1C17F10
	194 Move X20, X0
	195 Call MultiColumnHeaderColumnMovePreview..ctor, X0
	196 Move [X19+72], X20
	197 Move X0, [X21]
	198 Call 0x1C17F10
	199 Move X20, X0
	200 Call MultiColumnHeaderColumnMoveLocationPreview..ctor, X0
	201 Move X8, [X19+64]
	202 Move [X19+80], X20
	203 Compare X8, 0
	204 JumpIfEqual {260}
	205 Move X8, [X8+888]
	206 Add X0, X31, 24
	207 Move X2, X31
	208 Move [X31+24], X8
	209 Move X1, [X19+72]
	210 Call Hierarchy.Add, X0, X1
	211 Move X0, [X19+64]
	212 Compare X0, 0
	213 JumpIfEqual {260}
	214 Move X8, 0x409000
	215 Move X8, [X8+1392]
	216 Move X1, [X8]
	217 Call 0x22AACF4, X0
	218 Compare X0, 0
	219 JumpIfEqual {224}
	220 Move X1, X31
	221 Call VisualElement.get_parent, X0
	222 Compare X0, 0
	223 JumpIfNotEqual {227}
	224 Move X0, [X19+64]
	225 Compare X0, 0
	226 JumpIfEqual {260}
	227 Move X8, [X0+888]
	228 Add X0, X31, 24
	229 Move X2, X31
	230 Move [X31+24], X8
	231 Move X1, [X19+80]
	232 Call Hierarchy.Add, X0, X1
	233 Move X0, [X19+120]
	234 Compare X0, 0
	235 JumpIfEqual {260}
	236 Move X1, [X19+88]
	237 Move X2, X31
	238 Call ColumnLayout.GetDesiredPosition, X0, X1
	239 Move X0, [X19+120]
	240 Move [X19+96], S0
	241 Compare X0, 0
	242 JumpIfEqual {260}
	243 Move X1, [X19+88]
	244 Move X2, X31
	245 Call ColumnLayout.GetDesiredWidth, X0, X1
	246 Move X0, X19
	247 Move [X19+100], S0
	248 Call ColumnMover.UpdateMoveLocation, X0
	249 Move X20, [X31+64]
	250 Move X19, [X31+72]
	251 Move X22, [X31+48]
	252 Move X21, [X31+56]
	253 Move X24, [X31+32]
	254 Move X23, [X31+40]
	255 Move X30, [X31+16]
	256 Move D9, [X31+80]
	257 Move D8, [X31+88]
	258 Return 
	259 Call 0x1C17F20
	260 Call 0x1C17F20
	261 Call 0x1C17F20
	262 Move X0, X21
	263 Call 0x1C17F18
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Call 0x3EB2AD0
	266 Move X21, [X0]
	267 Call 0x3EB2AE0
	268 Move W23, W31
	269 Compare X20, 0
	270 JumpIfNotEqual {149}
	271 Move X19, X0
	272 Move X21, X31
	273 Move X19, X0
	274 Compare X20, 0
	275 JumpIfEqual {297}
	276 Move X8, [X20]
	277 Move X1, [X22]
	278 NotImplemented "Instruction LDRH not yet implemented."
	279 Compare X9, 0
	280 JumpIfEqual {287}
	281 Move X10, [X8+176]
	282 Add X10, X10, 8
	283 NotImplemented "Instruction LDUR not yet implemented."
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Subtract X9, X9, 1
	286 Add X10, X10, 16
	287 Move X0, X20
	288 Move W2, W31
	289 Call 0x1C5D788
	290 NotImplemented "Instruction LDRSW not yet implemented."
	291 Add X8, X8, X9
	292 Add X0, X8, 312
	293 Move X8, [X0]
	294 Move X1, [X0+8]
	295 Move X0, X20
	296 NotImplemented "Instruction BLR not yet implemented."
	297 Compare X21, 0
	298 JumpIfNotEqual {301}
	299 Move X0, X19
	300 Call 0x1D2D690
	301 Move X0, X21
	302 Call 0x1C17F18
	303 Call 0x1991590

Method: System.Void DragMove(System.Single pos)

Disassembly:
	0x03D5E630 MOV X19, X0
	0x03D5E634 LDR X0, [X0 + 0x58]

ISIL:
	001 Move [X0+52], S0

Method: System.Void UpdatePreviewPosition()

Disassembly:
	0x03D5E9A8 MOV X0, X19
	0x03D5E9AC BL 0x1C5C788
	0x03D5E9B0 B 0x3D5E9C4
	0x03D5E9B4 LDR W9, [X10]
	0x03D5E9B8 ADD W9, W9, 0x19
	0x03D5E9BC ADD X8, X8, W9, 0x4, SXTW
	0x03D5E9C0 ADD X0, X8, 0x138
	0x03D5E9C4 LDP X4, X3, [X0]
	0x03D5E9C8 AND X2, X21, 0x0
	0x03D5E9CC MOV X0, X19
	0x03D5E9D0 MOV X1, X20
	0x03D5E9D4 LDP X20, X19, [X31 + 0x20]
	0x03D5E9D8 LDP X30, X21, [X31 + 0x10]
	0x03D5E9DC LDR V8, [X31], #0x30
	0x03D5E9E0 BR X4
	0x03D5E9E4 BL 0x1C16F20
	0x03D5E9E8 LDRB W0, [X0 + 0x3F8]
	0x03D5E9EC RET
	0x03D5E9F0 LDR X0, [X0 + 0x400]
	0x03D5E9F4 RET
	0x03D5E9F8 LDR X0, [X0 + 0x408]
	0x03D5E9FC RET
	0x03D5EA00 LDR X0, [X0 + 0x410]
	0x03D5EA04 RET
	0x03D5EA08 LDR X0, [X0 + 0x418]
	0x03D5EA0C RET
	0x03D5EA10 LDR X0, [X0 + 0x3D0]
	0x03D5EA14 RET
	0x03D5EA18 LDR X0, [X0 + 0x3D8]
	0x03D5EA1C RET
	0x03D5EA20 STP X30, X23, [X31 - 0x30]!
	0x03D5EA24 STP X22, X21, [X31 + 0x10]
	0x03D5EA28 STP X20, X19, [X31 + 0x20]
	0x03D5EA2C ADRP X23, 0x689000
	0x03D5EA30 ADRP X22, 0x396000
	0x03D5EA34 ADRP X21, 0x408000
	0x03D5EA38 LDRB W8, [X23 + 0xC8E]
	0x03D5EA3C LDR X22, [X22 + 0xE70]
	0x03D5EA40 LDR X21, [X21 + 0x5A8]
	0x03D5EA44 MOV X20, X1
	0x03D5EA48 MOV X19, X0
	0x03D5EA4C TBNZ X8, 0x0, 0x3D5EA70
	0x03D5EA50 ADRP X0, 0x396000
	0x03D5EA54 LDR X0, [X0 + 0xE70]
	0x03D5EA58 BL 0x1C16CF4
	0x03D5EA5C ADRP X0, 0x408000
	0x03D5EA60 LDR X0, [X0 + 0x5A8]
	0x03D5EA64 BL 0x1C16CF4
	0x03D5EA68 MOVZ W8, 0x1
	0x03D5EA6C STRB W8, [X23 + 0xC8E]
	0x03D5EA70 STR X20, [X19 + 0x3D8]
	0x03D5EA74 LDR X0, [X22]
	0x03D5EA78 BL 0x1C16F10
	0x03D5EA7C LDR X2, [X21]
	0x03D5EA80 MOV X1, X19
	0x03D5EA84 MOV X3, X31
	0x03D5EA88 MOV X21, X0
	0x03D5EA8C BL 0x3314368
	0x03D5EA90 CBZ X20, 0x3D5EAB8
	0x03D5EA94 MOV X0, X20
	0x03D5EA98 MOV X1, X21
	0x03D5EA9C MOV X2, X31
	0x03D5EAA0 BL 0x3D7A070
	0x03D5EAA4 MOV X0, X19
	0x03D5EAA8 LDP X20, X19, [X31 + 0x20]
	0x03D5EAAC LDP X22, X21, [X31 + 0x10]
	0x03D5EAB0 LDP X30, X23, [X31], #0x30
	0x03D5EAB4 B 0x3D5EABC
	0x03D5EAB8 BL 0x1C16F20
	0x03D5EABC SUB X31, X31, 0x90
	0x03D5EAC0 STR X30, [X31 + 0x50]
	0x03D5EAC4 STP X24, X23, [X31 + 0x60]
	0x03D5EAC8 STP X22, X21, [X31 + 0x70]
	0x03D5EACC STP X20, X19, [X31 + 0x80]
	0x03D5EAD0 ADRP X20, 0x689000
	0x03D5EAD4 LDRB W8, [X20 + 0xC99]
	0x03D5EAD8 MOV X19, X0
	0x03D5EADC TBNZ X8, 0x0, 0x3D5EB9C
	0x03D5EAE0 ADRP X0, 0x408000
	0x03D5EAE4 LDR X0, [X0 + 0x5B0]
	0x03D5EAE8 BL 0x1C16CF4
	0x03D5EAEC ADRP X0, 0x408000
	0x03D5EAF0 LDR X0, [X0 + 0x5B8]
	0x03D5EAF4 BL 0x1C16CF4
	0x03D5EAF8 ADRP X0, 0x408000
	0x03D5EAFC LDR X0, [X0 + 0x5C0]
	0x03D5EB00 BL 0x1C16CF4
	0x03D5EB04 ADRP X0, 0x408000
	0x03D5EB08 LDR X0, [X0 + 0x5C8]
	0x03D5EB0C BL 0x1C16CF4
	0x03D5EB10 ADRP X0, 0x408000
	0x03D5EB14 LDR X0, [X0 + 0x5D0]
	0x03D5EB18 BL 0x1C16CF4
	0x03D5EB1C ADRP X0, 0x408000
	0x03D5EB20 LDR X0, [X0 + 0x5D8]
	0x03D5EB24 BL 0x1C16CF4
	0x03D5EB28 ADRP X0, 0x395000
	0x03D5EB2C LDR X0, [X0 + 0xE00]
	0x03D5EB30 BL 0x1C16CF4
	0x03D5EB34 ADRP X0, 0x408000
	0x03D5EB38 LDR X0, [X0 + 0x5E0]
	0x03D5EB3C BL 0x1C16CF4
	0x03D5EB40 ADRP X0, 0x395000
	0x03D5EB44 LDR X0, [X0 + 0xE18]
	0x03D5EB48 BL 0x1C16CF4
	0x03D5EB4C ADRP X0, 0x408000
	0x03D5EB50 LDR X0, [X0 + 0x5E8]
	0x03D5EB54 BL 0x1C16CF4
	0x03D5EB58 ADRP X0, 0x408000
	0x03D5EB5C LDR X0, [X0 + 0x5F0]
	0x03D5EB60 BL 0x1C16CF4
	0x03D5EB64 ADRP X0, 0x408000
	0x03D5EB68 LDR X0, [X0 + 0x5F8]
	0x03D5EB6C BL 0x1C16CF4
	0x03D5EB70 ADRP X0, 0x408000
	0x03D5EB74 LDR X0, [X0 + 0x600]
	0x03D5EB78 BL 0x1C16CF4
	0x03D5EB7C ADRP X0, 0x408000
	0x03D5EB80 LDR X0, [X0 + 0x608]
	0x03D5EB84 BL 0x1C16CF4
	0x03D5EB88 ADRP X0, 0x408000
	0x03D5EB8C LDR X0, [X0 + 0x610]
	0x03D5EB90 BL 0x1C16CF4
	0x03D5EB94 MOVZ W8, 0x1
	0x03D5EB98 STRB W8, [X20 + 0xC99]
	0x03D5EB9C MOVI V0.2D, 0x0
	0x03D5EBA0 STR X31, [X31 + 0x58]
	0x03D5EBA4 STP X31, X31, [X31 + 0x40]
	0x03D5EBA8 STP V0, V0, [X31 + 0x20]
	0x03D5EBAC LDRB W8, [X19 + 0x3E8]
	0x03D5EBB0 CBNZ W8, 0x3D5EFA0
	0x03D5EBB4 ADRP X8, 0x408000
	0x03D5EBB8 LDR X8, [X8 + 0x5B8]
	0x03D5EBBC LDR X0, [X8]
	0x03D5EBC0 LDR W8, [X0 + 0xE0]
	0x03D5EBC4 CBNZ W8, 0x3D5EBCC
	0x03D5EBC8 BL 0x1C16DFC
	0x03D5EBCC ADRP X8, 0x408000
	0x03D5EBD0 LDR X8, [X8 + 0x5B0]
	0x03D5EBD4 ADD X0, X31, 0x58
	0x03D5EBD8 LDR X1, [X8]
	0x03D5EBDC BL 0x28FB4B4
	0x03D5EBE0 STP X0, X1, [X31 + 0x40]
	0x03D5EBE4 LDRB W8, [X19 + 0x3C8]
	0x03D5EBE8 CBZ W8, 0x3D5EE14
	0x03D5EBEC LDR X0, [X19 + 0x3D8]
	0x03D5EBF0 CBZ X0, 0x3D5EFD4
	0x03D5EBF4 MOV X1, X31
	0x03D5EBF8 BL 0x3D7A1A8
	0x03D5EBFC MOV X20, X0
	0x03D5EC00 CBZ X0, 0x3D5EFD8
	0x03D5EC04 ADRP X22, 0x395000
	0x03D5EC08 ADRP X23, 0x408000
	0x03D5EC0C ADRP X24, 0x408000
	0x03D5EC10 LDR X22, [X22 + 0xE18]
	0x03D5EC14 LDR X23, [X23 + 0x5E0]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x68A000
	009 Move W8, [X20+3202]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x3BF000
	016 Move X0, [X0+296]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3202], W8
	020 Move X0, [X19+72]
	021 Compare X0, 0
	022 JumpIfEqual {176}
	023 Move X1, X31
	024 Call VisualElement.get_style, X0
	025 Move V0, [X19+96]
	026 Move S2, [X19+48]
	027 Move S1, [X19+52]
	028 Move X20, X0
	029 Move X0, X31
	030 Add S0, S0, S1
	031 Subtract S0, S0, S2
	032 Call StyleLength.op_Implicit, V0
	033 Compare X20, 0
	034 JumpIfEqual {176}
	035 Move X23, 0x3BF000
	036 Move X9, [X20]
	037 Move X23, [X23+296]
	038 Move X8, X1
	039 Move X21, X0
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X23]
	042 And X22, X8, 0
	043 Compare X10, 0
	044 JumpIfEqual {51}
	045 Move X8, [X9+176]
	046 Add X8, X8, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X10, X10, 1
	050 Add X8, X8, 16
	051 Move W2, 25
	052 Move X0, X20
	053 Call 0x1C5D788
	054 Move W8, [X8]
	055 Add W8, W8, 25
	056 Add X8, X9, W8
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X3, [X0+8]
	060 Move X0, X20
	061 Move X1, X21
	062 Move X2, X22
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X0, [X19+72]
	065 Compare X0, 0
	066 JumpIfEqual {176}
	067 Move X1, X31
	068 Call VisualElement.get_style, X0
	069 Move V0, [X19+100]
	070 Move X20, X0
	071 Move X0, X31
	072 Call StyleLength.op_Implicit, V0
	073 Compare X20, 0
	074 JumpIfEqual {176}
	075 Move X9, [X20]
	076 Move X8, X1
	077 Move X1, [X23]
	078 Move X21, X0
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 And X22, X8, 0
	081 Compare X10, 0
	082 JumpIfEqual {89}
	083 Move X8, [X9+176]
	084 Add X8, X8, 8
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Subtract X10, X10, 1
	088 Add X8, X8, 16
	089 Move W2, 54
	090 Move X0, X20
	091 Call 0x1C5D788
	092 Move W8, [X8]
	093 Add W8, W8, 54
	094 Add X8, X9, W8
	095 Add X0, X8, 312
	096 Move X8, [X0]
	097 Move X3, [X0+8]
	098 Move X0, X20
	099 Move X1, X21
	100 Move X2, X22
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X8, [X19+104]
	103 Compare X8, 0
	104 JumpIfEqual {151}
	105 Move X0, [X19+80]
	106 Compare X0, 0
	107 JumpIfEqual {176}
	108 Move X1, X31
	109 Call VisualElement.get_style, X0
	110 Move X8, [X19+120]
	111 Compare X8, 0
	112 JumpIfEqual {176}
	113 Move X1, [X19+104]
	114 Move X20, X0
	115 Move X0, X8
	116 Move X2, X31
	117 Call ColumnLayout.GetDesiredPosition, X0, X1
	118 Move W8, [X19+112]
	119 Move V8, V0
	120 Move S0, W31
	121 Compare W8, 0
	122 JumpIfNotEqual {129}
	123 Move X0, [X19+120]
	124 Compare X0, 0
	125 JumpIfEqual {176}
	126 Move X1, [X19+104]
	127 Move X2, X31
	128 Call ColumnLayout.GetDesiredWidth, X0, X1
	129 Add S0, S8, S0
	130 Move X0, X31
	131 Call StyleLength.op_Implicit, V0
	132 Compare X20, 0
	133 JumpIfEqual {176}
	134 Move X9, [X20]
	135 Move X8, X1
	136 Move X1, [X23]
	137 Move X19, X0
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 And X21, X8, 0
	140 Compare X10, 0
	141 JumpIfEqual {148}
	142 Move X8, [X9+176]
	143 Add X8, X8, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X10, X10, 1
	147 Add X8, X8, 16
	148 Move W2, 25
	149 Move X0, X20
	150 Call 0x1C5D788
	151 Move X20, [X31+48]
	152 Move X19, [X31+56]
	153 Move X22, [X31+32]
	154 Move X21, [X31+40]
	155 Move X30, [X31+16]
	156 Move X23, [X31+24]
	157 Move V8, [X31+64]
	158 Return 
	159 Move W8, [X8]
	160 Add W8, W8, 25
	161 Add X8, X9, W8
	162 Add X0, X8, 312
	163 Move X4, [X0]
	164 Move X3, [X0+8]
	165 Move X0, X20
	166 Move X1, X19
	167 Move X2, X21
	168 Move X20, [X31+48]
	169 Move X19, [X31+56]
	170 Move X22, [X31+32]
	171 Move X21, [X31+40]
	172 Move X30, [X31+16]
	173 Move X23, [X31+24]
	174 Move V8, [X31+64]
	175 CallNoReturn X4
	176 Call 0x1C17F20

Method: System.Void UpdateMoveLocation()

Disassembly:
	0x03D5E638 MOVZ W8, 0x1
	0x03D5E63C STRB W8, [X19 + 0x39]
	0x03D5E640 CBZ X0, 0x3D5E658
	0x03D5E644 LDR X1, [X19 + 0x48]
	0x03D5E648 LDR V0, [X19 + 0x30]
	0x03D5E64C LDRB W2, [X19 + 0x60]
	0x03D5E650 MOV X3, X31
	0x03D5E654 BL 0x3D73A5C
	0x03D5E658 LDRB W8, [X19 + 0x60]
	0x03D5E65C CBZ W8, 0x3D5E66C
	0x03D5E660 MOV X0, X19
	0x03D5E664 LDP X30, X19, [X31], #0x10
	0x03D5E668 B 0x3D5E8E0
	0x03D5E66C LDP X30, X19, [X31], #0x10
	0x03D5E670 RET
	0x03D5E674 STP X30, X21, [X31 - 0x20]!
	0x03D5E678 STP X20, X19, [X31 + 0x10]
	0x03D5E67C ADRP X21, 0x689000
	0x03D5E680 LDRB W8, [X21 + 0xC8B]
	0x03D5E684 MOV X19, X1
	0x03D5E688 MOV X20, X0
	0x03D5E68C TBNZ X8, 0x0, 0x3D5E6BC
	0x03D5E690 ADRP X0, 0x404000
	0x03D5E694 LDR X0, [X0 + 0xA58]
	0x03D5E698 BL 0x1C16CF4
	0x03D5E69C ADRP X0, 0x3C0000
	0x03D5E6A0 LDR X0, [X0 + 0x210]
	0x03D5E6A4 BL 0x1C16CF4
	0x03D5E6A8 ADRP X0, 0x3BD000
	0x03D5E6AC LDR X0, [X0 + 0x898]
	0x03D5E6B0 BL 0x1C16CF4
	0x03D5E6B4 MOVZ W8, 0x1
	0x03D5E6B8 STRB W8, [X21 + 0xC8B]
	0x03D5E6BC LDRB W8, [X20 + 0x38]
	0x03D5E6C0 CBZ W8, 0x3D5E720
	0x03D5E6C4 MOV X0, X20
	0x03D5E6C8 MOV X1, X31
	0x03D5E6CC BL 0x3DB9E70
	0x03D5E6D0 CBZ X19, 0x3D5E76C
	0x03D5E6D4 LDR W1, [X19 + 0x9C]
	0x03D5E6D8 MOV X2, X31
	0x03D5E6DC BL 0x3DBAB50
	0x03D5E6E0 TBZ X0, 0x0, 0x3D5E720
	0x03D5E6E4 LDR X8, [X19]
	0x03D5E6E8 MOV X0, X19
	0x03D5E6EC LDP X9, X1, [X8 + 0x1D8]
	0x03D5E6F0 BLR X9
	0x03D5E6F4 CBZ X0, 0x3D5E740
	0x03D5E6F8 ADRP X8, 0x3BD000
	0x03D5E6FC LDR X8, [X8 + 0x898]
	0x03D5E700 LDR X9, [X0]
	0x03D5E704 LDR X8, [X8]
	0x03D5E708 LDRB W11, [X9 + 0x130]
	0x03D5E70C LDRB W10, [X8 + 0x130]
	0x03D5E710 CMP W11, W10
	0x03D5E714 B.CS 0x3D5E72C
	0x03D5E718 MOV X0, X31
	0x03D5E71C B 0x3D5E740
	0x03D5E720 LDP X20, X19, [X31 + 0x10]
	0x03D5E724 LDP X30, X21, [X31], #0x20
	0x03D5E728 RET
	0x03D5E72C LDR X9, [X9 + 0xC8]
	0x03D5E730 ADD X9, X9, X10, 0x3, LSL
	0x03D5E734 LDUR X9, [X9 - 0x8]
	0x03D5E738 CMP X9, X8
	0x03D5E73C CSEL X0, X0, X31, EQ
	0x03D5E740 LDR X1, [X20 + 0x40]
	0x03D5E744 LDP S0, S1, [X19 + 0xC0]
	0x03D5E748 MOV X2, X31
	0x03D5E74C BL 0x3D16E8C
	0x03D5E750 MOV X0, X20
	0x03D5E754 BL 0x3D5E770
	0x03D5E758 MOV X0, X19
	0x03D5E75C LDP X20, X19, [X31 + 0x10]
	0x03D5E760 MOV X1, X31
	0x03D5E764 LDP X30, X21, [X31], #0x20
	0x03D5E768 B 0x3D9D950
	0x03D5E76C BL 0x1C16F20
	0x03D5E770 STP X30, X19, [X31 - 0x10]!
	0x03D5E774 LDRB W8, [X0 + 0x39]
	0x03D5E778 CBZ W8, 0x3D5E7A8
	0x03D5E77C MOV X19, X0
	0x03D5E780 LDR X0, [X0 + 0x58]
	0x03D5E784 CBZ X0, 0x3D5E794
	0x03D5E788 LDR X1, [X19 + 0x48]
	0x03D5E78C MOV X2, X31
	0x03D5E790 BL 0x3D73E78
	0x03D5E794 LDRB W8, [X19 + 0x60]
	0x03D5E798 CBZ W8, 0x3D5E7A8
	0x03D5E79C MOV X0, X19
	0x03D5E7A0 LDP X30, X19, [X31], #0x10
	0x03D5E7A4 B 0x3D5E8E0
	0x03D5E7A8 LDP X30, X19, [X31], #0x10
	0x03D5E7AC RET
	0x03D5E7B0 STP X30, X21, [X31 - 0x20]!
	0x03D5E7B4 STP X20, X19, [X31 + 0x10]
	0x03D5E7B8 ADRP X21, 0x689000
	0x03D5E7BC LDRB W8, [X21 + 0xC8C]
	0x03D5E7C0 MOV X19, X1
	0x03D5E7C4 MOV X20, X0
	0x03D5E7C8 TBNZ X8, 0x0, 0x3D5E7F8
	0x03D5E7CC ADRP X0, 0x404000
	0x03D5E7D0 LDR X0, [X0 + 0xA60]
	0x03D5E7D4 BL 0x1C16CF4
	0x03D5E7D8 ADRP X0, 0x3C0000
	0x03D5E7DC LDR X0, [X0 + 0xD20]
	0x03D5E7E0 BL 0x1C16CF4
	0x03D5E7E4 ADRP X0, 0x3BD000
	0x03D5E7E8 LDR X0, [X0 + 0x898]
	0x03D5E7EC BL 0x1C16CF4
	0x03D5E7F0 MOVZ W8, 0x1
	0x03D5E7F4 STRB W8, [X21 + 0xC8C]
	0x03D5E7F8 LDRB W8, [X20 + 0x38]
	0x03D5E7FC CBZ W8, 0x3D5E870
	0x03D5E800 MOV X0, X20
	0x03D5E804 MOV X1, X31
	0x03D5E808 BL 0x3DB9E70
	0x03D5E80C CBZ X19, 0x3D5E8DC
	0x03D5E810 LDR W1, [X19 + 0x9C]
	0x03D5E814 MOV X2, X31
	0x03D5E818 BL 0x3DBAB50
	0x03D5E81C TBZ X0, 0x0, 0x3D5E870
	0x03D5E820 MOV X0, X20
	0x03D5E824 MOV X1, X19
	0x03D5E828 MOV X2, X31
	0x03D5E82C BL 0x3DC08B8
	0x03D5E830 TBZ X0, 0x0, 0x3D5E870
	0x03D5E834 LDR X8, [X19]
	0x03D5E838 MOV X0, X19
	0x03D5E83C LDP X9, X1, [X8 + 0x1D8]
	0x03D5E840 BLR X9
	0x03D5E844 CBZ X0, 0x3D5E890
	0x03D5E848 ADRP X8, 0x3BD000
	0x03D5E84C LDR X8, [X8 + 0x898]
	0x03D5E850 LDR X9, [X0]
	0x03D5E854 LDR X8, [X8]
	0x03D5E858 LDRB W11, [X9 + 0x130]
	0x03D5E85C LDRB W10, [X8 + 0x130]
	0x03D5E860 CMP W11, W10
	0x03D5E864 B.CS 0x3D5E87C
	0x03D5E868 MOV X0, X31
	0x03D5E86C B 0x3D5E890
	0x03D5E870 LDP X20, X19, [X31 + 0x10]
	0x03D5E874 LDP X30, X21, [X31], #0x20
	0x03D5E878 RET
	0x03D5E87C LDR X9, [X9 + 0xC8]
	0x03D5E880 ADD X9, X9, X10, 0x3, LSL
	0x03D5E884 LDUR X9, [X9 - 0x8]
	0x03D5E888 CMP X9, X8
	0x03D5E88C CSEL X0, X0, X31, EQ
	0x03D5E890 LDR X1, [X20 + 0x40]
	0x03D5E894 LDP S0, S1, [X19 + 0xC0]
	0x03D5E898 MOV X2, X31
	0x03D5E89C BL 0x3D16E8C
	0x03D5E8A0 MOV X0, X20
	0x03D5E8A4 MOV W1, W31
	0x03D5E8A8 BL 0x3D5E3C8
	0x03D5E8AC MOV X0, X20
	0x03D5E8B0 MOV X1, X31
	0x03D5E8B4 STRB W31, [X20 + 0x38]
	0x03D5E8B8 BL 0x3DB9E70
	0x03D5E8BC LDR W1, [X19 + 0x9C]
	0x03D5E8C0 MOV X2, X31
	0x03D5E8C4 BL 0x3DBAE34
	0x03D5E8C8 MOV X0, X19
	0x03D5E8CC LDP X20, X19, [X31 + 0x10]
	0x03D5E8D0 MOV X1, X31
	0x03D5E8D4 LDP X30, X21, [X31], #0x20
	0x03D5E8D8 B 0x3D9D950
	0x03D5E8DC BL 0x1C16F20
	0x03D5E8E0 STR D8, [X31 - 0x30]!
	0x03D5E8E4 STP X30, X21, [X31 + 0x10]
	0x03D5E8E8 STP X20, X19, [X31 + 0x20]
	0x03D5E8EC ADRP X19, 0x689000
	0x03D5E8F0 LDRB W8, [X19 + 0xC8D]
	0x03D5E8F4 MOV X20, X0
	0x03D5E8F8 TBNZ X8, 0x0, 0x3D5E910
	0x03D5E8FC ADRP X0, 0x3BE000
	0x03D5E900 LDR X0, [X0 + 0x128]
	0x03D5E904 BL 0x1C16CF4
	0x03D5E908 MOVZ W8, 0x1
	0x03D5E90C STRB W8, [X19 + 0xC8D]
	0x03D5E910 LDR X0, [X20 + 0x50]
	0x03D5E914 CBZ X0, 0x3D5E9E4
	0x03D5E918 MOV X1, X31
	0x03D5E91C BL 0x3DE7EEC
	0x03D5E920 LDR X8, [X20 + 0x58]
	0x03D5E924 CBZ X8, 0x3D5E9E4
	0x03D5E928 LDR X1, [X20 + 0x48]
	0x03D5E92C MOV X19, X0
	0x03D5E930 MOV X0, X8
	0x03D5E934 MOV X2, X31
	0x03D5E938 BL 0x3D73D84
	0x03D5E93C LDR X0, [X20 + 0x58]
	0x03D5E940 CBZ X0, 0x3D5E9E4
	0x03D5E944 LDR X1, [X20 + 0x48]
	0x03D5E948 MOV X2, X31
	0x03D5E94C MOV V8.16B, V0.16B
	0x03D5E950 BL 0x3D72634
	0x03D5E954 FADD S0, S8, S0
	0x03D5E958 MOV X0, X31
	0x03D5E95C BL 0x3DFED98
	0x03D5E960 CBZ X19, 0x3D5E9E4
	0x03D5E964 ADRP X10, 0x3BE000
	0x03D5E968 LDR X8, [X19]
	0x03D5E96C LDR X10, [X10 + 0x128]
	0x03D5E970 MOV X21, X1
	0x03D5E974 MOV X20, X0
	0x03D5E978 LDRH W9, [X8 + 0x12E]
	0x03D5E97C LDR X1, [X10]
	0x03D5E980 CBZ X9, 0x3D5E9A4
	0x03D5E984 LDR X10, [X8 + 0xB0]
	0x03D5E988 ADD X10, X10, 0x8
	0x03D5E98C LDUR X11, [X10 - 0x8]
	0x03D5E990 CMP X11, X1
	0x03D5E994 B.EQ 0x3D5E9B4
	0x03D5E998 SUBS X9, X9, 0x1
	0x03D5E99C ADD X10, X10, 0x10
	0x03D5E9A0 B.NE 0x3D5E98C
	0x03D5E9A4 MOVZ W2, 0x19

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x68A000
	009 Move W8, [X20+3203]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x396000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0x3BF000
	019 Move X0, [X0+272]
	020 Call 0x1C17CF4
	021 Move X0, 0x3BF000
	022 Move X0, [X0+280]
	023 Call 0x1C17CF4
	024 Move X0, 0x396000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3203], W8
	029 Move X8, [X19+120]
	030 Move [X19+104], X31
	031 Move [X19+112], W31
	032 Compare X8, 0
	033 JumpIfEqual {186}
	034 Move X0, [X8+48]
	035 Compare X0, 0
	036 JumpIfEqual {186}
	037 Move X1, X31
	038 Call Columns.get_visibleList, X0
	039 Compare X0, 0
	040 JumpIfEqual {186}
	041 Move X10, 0x3BF000
	042 Move X8, [X0]
	043 Move X10, [X10+272]
	044 Move X20, X0
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move X0, X20
	056 Move W2, W31
	057 Call 0x1C5D788
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Add X8, X8, X9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X1, [X0+8]
	063 Move X23, 0x396000
	064 Move X23, [X23+3584]
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X20, X0
	068 Compare X0, 0
	069 JumpIfEqual {187}
	070 Move X21, 0x396000
	071 Move X22, 0x3BF000
	072 Move X21, [X21+3608]
	073 Move X22, [X22+280]
	074 Move S1, W31
	075 Move X8, [X20]
	076 Move X1, [X21]
	077 Move V8, V1
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X20
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X20
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {139}
	101 Move X8, [X20]
	102 Move X1, [X22]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X20
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X1, [X0+8]
	120 Move X0, X20
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X1, X0
	123 Move X0, [X19+120]
	124 Move [X19+104], X1
	125 Compare X0, 0
	126 JumpIfEqual {185}
	127 Move X2, X31
	128 Call ColumnLayout.GetDesiredWidth, X0, X1
	129 Move V2, [X19+52]
	130 Add S1, S8, S0
	131 NotImplemented "Instruction FCMP not yet implemented."
	132 Move S1, 0.5
	133 Multiply S0, S0, S1
	134 Add S0, S8, S0
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 NotImplemented "Instruction CSET not yet implemented."
	137 Move X21, X31
	138 Move [X19+112], W8
	139 Move X21, X31
	140 Move W22, 6
	141 Compare X20, 0
	142 JumpIfEqual {164}
	143 Move X8, [X20]
	144 Move X1, [X23]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move X0, X20
	155 Move W2, W31
	156 Call 0x1C5D788
	157 NotImplemented "Instruction LDRSW not yet implemented."
	158 Add X8, X8, X9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X1, [X0+8]
	162 Move X0, X20
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Compare X21, 0
	165 JumpIfNotEqual {188}
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Compare W22, 0
	168 JumpIfNotEqual {177}
	169 Move X0, X19
	170 Move X20, [X31+48]
	171 Move X19, [X31+56]
	172 Move X22, [X31+32]
	173 Move X21, [X31+40]
	174 Move X30, [X31+16]
	175 Move X23, [X31+24]
	176 Move V8, [X31+64]
	177 Move X20, [X31+48]
	178 Move X19, [X31+56]
	179 Move X22, [X31+32]
	180 Move X21, [X31+40]
	181 Move X30, [X31+16]
	182 Move X23, [X31+24]
	183 Move V8, [X31+64]
	184 Return 
	185 Call 0x1C17F20
	186 Call 0x1C17F20
	187 Call 0x1C17F20
	188 Move X0, X21
	189 Call 0x1C17F18
	190 Move X22, X0
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X0, X22
	193 Call 0x3EB2AD0
	194 Move X21, [X0]
	195 Call 0x3EB2AE0
	196 Move W22, W31
	197 Compare X20, 0
	198 JumpIfNotEqual {143}
	199 Move X21, X31
	200 Move X22, X0
	201 Compare X20, 0
	202 JumpIfEqual {224}
	203 Move X8, [X20]
	204 Move X1, [X23]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Compare X9, 0
	207 JumpIfEqual {214}
	208 Move X10, [X8+176]
	209 Add X10, X10, 8
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Subtract X9, X9, 1
	213 Add X10, X10, 16
	214 Move X0, X20
	215 Move W2, W31
	216 Call 0x1C5D788
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Add X8, X8, X9
	219 Add X0, X8, 312
	220 Move X8, [X0]
	221 Move X1, [X0+8]
	222 Move X0, X20
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Compare X21, 0
	225 JumpIfNotEqual {228}
	226 Move X0, X22
	227 Call 0x1D2D690
	228 Move X0, X21
	229 Call 0x1C17F18
	230 Call 0x1991590

Method: System.Void EndDragMove(System.Boolean cancelled)

Disassembly:
	0x03D5E030 ADRP X23, 0x408000
	0x03D5E034 MOV X0, X20
	0x03D5E038 LDR X3, [X8]
	0x03D5E03C LDR X22, [X22 + 0x788]
	0x03D5E040 LDR X23, [X23 + 0x5A0]
	0x03D5E044 MOV X1, X21
	0x03D5E048 MOV W2, W31
	0x03D5E04C BL 0x21A1534
	0x03D5E050 MOV X0, X19
	0x03D5E054 MOV X1, X31
	0x03D5E058 BL 0x3DB9E70
	0x03D5E05C LDR X8, [X22]
	0x03D5E060 MOV X20, X0
	0x03D5E064 MOV X0, X8
	0x03D5E068 BL 0x1C16F10
	0x03D5E06C LDR X2, [X23]
	0x03D5E070 MOV X1, X19
	0x03D5E074 MOV X3, X31
	0x03D5E078 MOV X21, X0
	0x03D5E07C BL 0x2D0E824
	0x03D5E080 CBZ X20, 0x3D5E10C
	0x03D5E084 ADRP X8, 0x3BF000
	0x03D5E088 LDR X8, [X8 + 0x778]
	0x03D5E08C ADRP X22, 0x3C0000
	0x03D5E090 ADRP X23, 0x408000
	0x03D5E094 MOV X0, X20
	0x03D5E098 LDR X3, [X8]
	0x03D5E09C LDR X22, [X22 + 0x100]
	0x03D5E0A0 LDR X23, [X23 + 0x590]
	0x03D5E0A4 MOV X1, X21
	0x03D5E0A8 MOV W2, W31
	0x03D5E0AC BL 0x21A1534
	0x03D5E0B0 MOV X0, X19
	0x03D5E0B4 MOV X1, X31
	0x03D5E0B8 BL 0x3DB9E70
	0x03D5E0BC LDR X8, [X22]
	0x03D5E0C0 MOV X20, X0
	0x03D5E0C4 MOV X0, X8
	0x03D5E0C8 BL 0x1C16F10
	0x03D5E0CC LDR X2, [X23]
	0x03D5E0D0 MOV X1, X19
	0x03D5E0D4 MOV X3, X31
	0x03D5E0D8 MOV X21, X0
	0x03D5E0DC BL 0x2D0E824
	0x03D5E0E0 CBZ X20, 0x3D5E10C
	0x03D5E0E4 ADRP X8, 0x3C0000
	0x03D5E0E8 LDR X8, [X8 + 0xF0]
	0x03D5E0EC MOV X0, X20
	0x03D5E0F0 MOV X1, X21
	0x03D5E0F4 LDP X20, X19, [X31 + 0x20]
	0x03D5E0F8 LDR X3, [X8]
	0x03D5E0FC LDP X22, X21, [X31 + 0x10]
	0x03D5E100 MOV W2, W31
	0x03D5E104 LDP X30, X23, [X31], #0x30
	0x03D5E108 B 0x21A1534
	0x03D5E10C BL 0x1C16F20
	0x03D5E110 STP X30, X23, [X31 - 0x30]!
	0x03D5E114 STP X22, X21, [X31 + 0x10]
	0x03D5E118 STP X20, X19, [X31 + 0x20]
	0x03D5E11C ADRP X22, 0x689000
	0x03D5E120 ADRP X20, 0x3C0000
	0x03D5E124 ADRP X21, 0x408000
	0x03D5E128 LDRB W8, [X22 + 0xC88]
	0x03D5E12C LDR X20, [X20 + 0x100]
	0x03D5E130 LDR X21, [X21 + 0x590]
	0x03D5E134 MOV X19, X0
	0x03D5E138 TBNZ X8, 0x0, 0x3D5E1D4
	0x03D5E13C ADRP X0, 0x3C0000
	0x03D5E140 LDR X0, [X0 + 0xCE0]
	0x03D5E144 BL 0x1C16CF4
	0x03D5E148 ADRP X0, 0x3BF000
	0x03D5E14C LDR X0, [X0 + 0x790]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+57]
	006 Compare W8, 0
	007 JumpIfEqual {12}
	008 Move W8, [X0+58]
	009 Move X19, X0
	010 Compare W8, 0
	011 JumpIfEqual {17}
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 
	017 And W8, W1, 1
	018 Move [X19+58], W8
	019 Move TEMP, X1
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {63}
	023 Move X0, [X19+104]
	024 Compare X0, 0
	025 JumpIfEqual {94}
	026 Move X1, X31
	027 Call Column.get_displayIndex, X0
	028 Move X8, [X19+88]
	029 Compare X8, 0
	030 JumpIfEqual {94}
	031 Move W9, [X19+112]
	032 Move X1, X31
	033 Xor W9, W9, 1
	034 Add W20, W0, W9
	035 Move X0, X8
	036 Call Column.get_displayIndex, X0
	037 Move X8, [X19+88]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 Compare X8, 0
	041 JumpIfEqual {94}
	042 Move X0, X8
	043 Move X1, X31
	044 Subtract W20, W20, W9
	045 Call Column.get_displayIndex, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X19+120]
	048 Compare X8, 0
	049 JumpIfEqual {94}
	050 Move X0, [X19+88]
	051 Compare X0, 0
	052 JumpIfEqual {94}
	053 Move X21, [X8+48]
	054 Move X1, X31
	055 Call Column.get_displayIndex, X0
	056 Compare X21, 0
	057 JumpIfEqual {94}
	058 Move W1, W0
	059 Move X0, X21
	060 Move W2, W20
	061 Move X3, X31
	062 Call Columns.ReorderDisplay, X0, X1, X2
	063 Move X0, [X19+72]
	064 Compare X0, 0
	065 JumpIfEqual {68}
	066 Move X1, X31
	067 Call VisualElement.RemoveFromHierarchy, X0
	068 Move X20, X19
	069 Add X20, X20, 80
	070 Move X0, [X20]
	071 Move [X20-8], X31
	072 Compare X0, 0
	073 JumpIfEqual {76}
	074 Move X1, X31
	075 Call VisualElement.RemoveFromHierarchy, X0
	076 Move [X20], X31
	077 Move [X20+8], X31
	078 Move W8, [X19+57]
	079 Compare W8, 0
	080 JumpIfEqual {12}
	081 Move X8, [X19+136]
	082 Move [X19+57], W31
	083 Compare X8, 0
	084 JumpIfEqual {12}
	085 Move X3, [X8+24]
	086 Move X0, [X8+64]
	087 Move X2, [X8+40]
	088 Move X1, X19
	089 Move X20, [X31+16]
	090 Move X19, [X31+24]
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 CallNoReturn X3
	094 Call 0x1C17F20

