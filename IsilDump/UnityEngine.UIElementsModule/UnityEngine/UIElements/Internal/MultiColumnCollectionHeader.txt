Type: UnityEngine.UIElements.Internal.MultiColumnCollectionHeader

Method: System.Boolean get_isApplyingViewState()

Disassembly:
	0x03D5F9E8 MOV X19, X1
	0x03D5F9EC MOV X20, X0

ISIL:
	001 Move W0, [X0+1016]
	002 Return X0

Method: System.Collections.Generic.Dictionary`2<UnityEngine.UIElements.Column, UnityEngine.UIElements.Internal.MultiColumnCollectionHeader/ColumnData> get_columnDataMap()

Disassembly:
	0x03D5F9F0 TBNZ X8, 0x0, 0x3D5FA08
	0x03D5F9F4 ADRP X0, 0x395000

ISIL:
	001 Move X0, [X0+1024]
	002 Return X0

Method: UnityEngine.UIElements.ColumnLayout get_columnLayout()

Disassembly:
	0x03D5F9F8 LDR X0, [X0 + 0xE70]
	0x03D5F9FC BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+1032]
	002 Return X0

Method: UnityEngine.UIElements.VisualElement get_columnContainer()

Disassembly:
	0x03D5FA00 MOVZ W8, 0x1
	0x03D5FA04 STRB W8, [X21 + 0xC91]

ISIL:
	001 Move X0, [X0+1040]
	002 Return X0

Method: UnityEngine.UIElements.VisualElement get_resizeHandleContainer()

Disassembly:
	0x03D5FA08 ADRP X22, 0x395000
	0x03D5FA0C LDR X21, [X20 + 0x430]

ISIL:
	001 Move X0, [X0+1048]
	002 Return X0

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.SortColumnDescription> get_sortedColumns()

Disassembly:
	0x03D5FA10 LDR X22, [X22 + 0xE70]
	0x03D5FA14 ADD X20, X20, 0x430

ISIL:
	001 Move X0, [X0+976]
	002 Return X0

Method: UnityEngine.UIElements.SortColumnDescriptions get_sortDescriptions()

Disassembly:
	0x03D5FA18 MOV X0, X21
	0x03D5FA1C MOV X1, X19

ISIL:
	001 Move X0, [X0+984]
	002 Return X0

Method: System.Void set_sortDescriptions(UnityEngine.UIElements.SortColumnDescriptions value)

Disassembly:
	0x03D5FA20 MOV X2, X31
	0x03D5FA24 BL 0x33C0DE4
	0x03D5FA28 MOV X8, X0
	0x03D5FA2C CBZ X0, 0x3D5FA40
	0x03D5FA30 LDR X1, [X22]
	0x03D5FA34 LDR X9, [X8]
	0x03D5FA38 CMP X9, X1
	0x03D5FA3C B.NE 0x3D5FA6C
	0x03D5FA40 MOV X0, X20
	0x03D5FA44 MOV X1, X8
	0x03D5FA48 MOV X2, X21
	0x03D5FA4C BL 0x1C24138
	0x03D5FA50 CMP X21, X0
	0x03D5FA54 MOV X21, X0
	0x03D5FA58 B.NE 0x3D5FA18
	0x03D5FA5C LDP X20, X19, [X31 + 0x20]
	0x03D5FA60 LDP X22, X21, [X31 + 0x10]
	0x03D5FA64 LDR X30, [X31], #0x30
	0x03D5FA68 RET
	0x03D5FA6C MOV X0, X8
	0x03D5FA70 BL 0x1C171E0
	0x03D5FA74 STR X30, [X31 - 0x30]!
	0x03D5FA78 STP X22, X21, [X31 + 0x10]
	0x03D5FA7C STP X20, X19, [X31 + 0x20]
	0x03D5FA80 ADRP X21, 0x688000
	0x03D5FA84 LDRB W8, [X21 + 0xC92]
	0x03D5FA88 MOV X19, X1
	0x03D5FA8C MOV X20, X0
	0x03D5FA90 TBNZ X8, 0x0, 0x3D5FAA8
	0x03D5FA94 ADRP X0, 0x395000
	0x03D5FA98 LDR X0, [X0 + 0xE70]
	0x03D5FA9C BL 0x1C16CF4
	0x03D5FAA0 MOVZ W8, 0x1
	0x03D5FAA4 STRB W8, [X21 + 0xC92]
	0x03D5FAA8 ADRP X22, 0x395000
	0x03D5FAAC LDR X21, [X20 + 0x430]
	0x03D5FAB0 LDR X22, [X22 + 0xE70]
	0x03D5FAB4 ADD X20, X20, 0x430
	0x03D5FAB8 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x689000
	008 Move X22, 0x396000
	009 Move X21, 0x408000
	010 Move W8, [X23+3214]
	011 Move X22, [X22+3696]
	012 Move X21, [X21+1448]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x396000
	020 Move X0, [X0+3696]
	021 Call 0x1C17CF4
	022 Move X0, 0x408000
	023 Move X0, [X0+1448]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3214], W8
	027 Move [X19+984], X20
	028 Move X0, [X22]
	029 Call 0x1C17F10
	030 Move X2, [X21]
	031 Move X1, X19
	032 Move X3, X31
	033 Move X21, X0
	034 Call Action..ctor, X0, X1, X2
	035 Compare X20, 0
	036 JumpIfEqual {48}
	037 Move X0, X20
	038 Move X1, X21
	039 Move X2, X31
	040 Call SortColumnDescriptions.add_changed, X0, X1
	041 Move X0, X19
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Call 0x1C17F20

Method: UnityEngine.UIElements.Columns get_columns()

Disassembly:
	0x03D601C8 LDUR X11, [X10 - 0x8]
	0x03D601CC CMP X11, X1

ISIL:
	001 Move X0, [X0+1056]
	002 Return X0

Method: System.Boolean get_sortingEnabled()

Disassembly:
	0x03D601D0 B.EQ 0x3D601F0
	0x03D601D4 SUBS X9, X9, 0x1

ISIL:
	001 Move W0, [X0+968]
	002 Return X0

Method: System.Void set_sortingEnabled(System.Boolean value)

Disassembly:
	0x03D601D8 ADD X10, X10, 0x10
	0x03D601DC B.NE 0x3D601C8
	0x03D601E0 MOV X0, X20
	0x03D601E4 MOV W2, W31
	0x03D601E8 BL 0x1C5C788
	0x03D601EC B 0x3D601FC
	0x03D601F0 LDRSW X9, [X10]
	0x03D601F4 ADD X8, X8, X9, 0x4, LSL
	0x03D601F8 ADD X0, X8, 0x138
	0x03D601FC LDP X8, X1, [X0]
	0x03D60200 MOV X0, X20
	0x03D60204 BLR X8
	0x03D60208 TBZ X0, 0x0, 0x3D60274

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W9, [X0+968]
	004 And W8, W1, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move X19, X0
	010 Move [X0+968], W8
	011 Call MultiColumnCollectionHeader.UpdateSortingStatus, X0
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call MultiColumnCollectionHeader.UpdateSortedColumns, X0
	016 Return 

Method: System.Void add_columnResized(System.Action`2<System.Int32, System.Single> value)

Disassembly:
	0x03D6086C MOV X3, X31
	0x03D60870 BL 0x3DF6198
	0x03D60874 B 0x3D60884
	0x03D60878 MOV X0, X19
	0x03D6087C MOV X1, X20
	0x03D60880 BL 0x3D61A94
	0x03D60884 MOV X0, X19
	0x03D60888 BL 0x3D60A60
	0x03D6088C MOV X0, X19
	0x03D60890 LDP X20, X19, [X31 + 0x30]
	0x03D60894 LDP X22, X21, [X31 + 0x20]
	0x03D60898 LDP X24, X23, [X31 + 0x10]
	0x03D6089C LDR X30, [X31], #0x40
	0x03D608A0 B 0x3D609F0
	0x03D608A4 BL 0x1C16F20
	0x03D608A8 STP X30, X21, [X31 - 0x20]!
	0x03D608AC STP X20, X19, [X31 + 0x10]
	0x03D608B0 ADRP X20, 0x687000
	0x03D608B4 LDRB W8, [X20 + 0xC98]
	0x03D608B8 MOV X19, X0
	0x03D608BC TBNZ X8, 0x0, 0x3D608EC
	0x03D608C0 ADRP X0, 0x394000
	0x03D608C4 LDR X0, [X0 + 0xE70]
	0x03D608C8 BL 0x1C16CF4
	0x03D608CC ADRP X0, 0x3BB000
	0x03D608D0 LDR X0, [X0 + 0x680]
	0x03D608D4 BL 0x1C16CF4
	0x03D608D8 ADRP X0, 0x406000
	0x03D608DC LDR X0, [X0 + 0x700]
	0x03D608E0 BL 0x1C16CF4
	0x03D608E4 MOVZ W8, 0x1
	0x03D608E8 STRB W8, [X20 + 0xC98]
	0x03D608EC LDRB W8, [X19 + 0x3F9]
	0x03D608F0 CBNZ W8, 0x3D609A8
	0x03D608F4 MOV X0, X19
	0x03D608F8 MOV X1, X31
	0x03D608FC BL 0x3DF7724
	0x03D60900 ADRP X8, 0x394000
	0x03D60904 LDR X8, [X8 + 0xE70]
	0x03D60908 MOV X20, X0
	0x03D6090C LDR X8, [X8]
	0x03D60910 MOV X0, X8
	0x03D60914 BL 0x1C16F10
	0x03D60918 ADRP X8, 0x406000
	0x03D6091C LDR X8, [X8 + 0x700]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x688000
	009 Move W8, [X21+3215]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x407000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3215], W8
	021 Move X24, 0x407000
	022 Move X21, [X20+1064]
	023 Move X24, [X24+1560]
	024 Add X20, X20, 1064
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_columnResized(System.Action`2<System.Int32, System.Single> value)

Disassembly:
	0x03D60920 MOV X1, X19
	0x03D60924 MOV X3, X31
	0x03D60928 MOV X21, X0
	0x03D6092C LDR X2, [X8]
	0x03D60930 BL 0x3314368
	0x03D60934 CBZ X20, 0x3D609B4
	0x03D60938 ADRP X10, 0x3BB000
	0x03D6093C LDR X8, [X20]
	0x03D60940 LDR X10, [X10 + 0x680]
	0x03D60944 LDRH W9, [X8 + 0x12E]
	0x03D60948 LDR X1, [X10]
	0x03D6094C CBZ X9, 0x3D60970
	0x03D60950 LDR X10, [X8 + 0xB0]
	0x03D60954 ADD X10, X10, 0x8
	0x03D60958 LDUR X11, [X10 - 0x8]
	0x03D6095C CMP X11, X1
	0x03D60960 B.EQ 0x3D60980
	0x03D60964 SUBS X9, X9, 0x1
	0x03D60968 ADD X10, X10, 0x10
	0x03D6096C B.NE 0x3D60958
	0x03D60970 MOVZ W2, 0x1
	0x03D60974 MOV X0, X20
	0x03D60978 BL 0x1C5C788
	0x03D6097C B 0x3D60990
	0x03D60980 LDR W9, [X10]
	0x03D60984 ADD W9, W9, 0x1
	0x03D60988 ADD X8, X8, W9, 0x4, SXTW
	0x03D6098C ADD X0, X8, 0x138
	0x03D60990 LDP X8, X2, [X0]
	0x03D60994 MOV X0, X20
	0x03D60998 MOV X1, X21
	0x03D6099C BLR X8
	0x03D609A0 MOVZ W8, 0x1
	0x03D609A4 STRB W8, [X19 + 0x3F9]
	0x03D609A8 LDP X20, X19, [X31 + 0x10]
	0x03D609AC LDP X30, X21, [X31], #0x20
	0x03D609B0 RET
	0x03D609B4 BL 0x1C16F20
	0x03D609B8 STP X30, X19, [X31 - 0x10]!
	0x03D609BC LDR X19, [X0 + 0x408]
	0x03D609C0 MOV X1, X31
	0x03D609C4 BL 0x3DEC528
	0x03D609C8 CBZ X19, 0x3D609E0
	0x03D609CC MOV X0, X19
	0x03D609D0 MOV V0.16B, V2.16B

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x688000
	009 Move W8, [X21+3216]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x407000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3216], W8
	021 Move X24, 0x407000
	022 Move X21, [X20+1064]
	023 Move X24, [X24+1560]
	024 Add X20, X20, 1064
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_columnSortingChanged(System.Action value)

Disassembly:
	0x03D609D4 MOV X1, X31
	0x03D609D8 LDP X30, X19, [X31], #0x10
	0x03D609DC B 0x3D73740
	0x03D609E0 BL 0x1C16F20
	0x03D609E4 STR X1, [X0]
	0x03D609E8 STR W2, [X0 + 0x8]
	0x03D609EC RET
	0x03D609F0 STP X30, X19, [X31 - 0x10]!
	0x03D609F4 LDRB W8, [X0 + 0x3F8]
	0x03D609F8 CBZ W8, 0x3D60A04
	0x03D609FC LDP X30, X19, [X31], #0x10
	0x03D60A00 RET
	0x03D60A04 MOV X19, X0
	0x03D60A08 LDR X0, [X0 + 0x3F0]
	0x03D60A0C CBZ X0, 0x3D60A18
	0x03D60A10 MOV X1, X19
	0x03D60A14 BL 0x3D63F9C
	0x03D60A18 MOV X0, X19
	0x03D60A1C MOV X1, X31
	0x03D60A20 LDP X30, X19, [X31], #0x10
	0x03D60A24 B 0x3DF276C
	0x03D60A28 STP X30, X19, [X31 - 0x10]!
	0x03D60A2C MOV X19, X0
	0x03D60A30 BL 0x3D61D24
	0x03D60A34 LDRB W8, [X19 + 0x3F8]
	0x03D60A38 CBZ W8, 0x3D60A44
	0x03D60A3C LDP X30, X19, [X31], #0x10
	0x03D60A40 RET
	0x03D60A44 LDR X8, [X19 + 0x430]
	0x03D60A48 CBZ X8, 0x3D60A3C
	0x03D60A4C LDR X2, [X8 + 0x18]
	0x03D60A50 LDR X0, [X8 + 0x40]
	0x03D60A54 LDR X1, [X8 + 0x28]
	0x03D60A58 LDP X30, X19, [X31], #0x10
	0x03D60A5C BR X2
	0x03D60A60 SUB X31, X31, 0x70
	0x03D60A64 STP X29, X30, [X31 + 0x10]
	0x03D60A68 STP X28, X27, [X31 + 0x20]
	0x03D60A6C STP X26, X25, [X31 + 0x30]
	0x03D60A70 STP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x688000
	007 Move W8, [X21+3217]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x395000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3217], W8
	019 Move X22, 0x395000
	020 Move X21, [X20+1072]
	021 Move X22, [X22+3696]
	022 Add X20, X20, 1072
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_columnSortingChanged(System.Action value)

Disassembly:
	0x03D60A74 STP X22, X21, [X31 + 0x50]
	0x03D60A78 STP X20, X19, [X31 + 0x60]
	0x03D60A7C ADRP X20, 0x687000
	0x03D60A80 LDRB W8, [X20 + 0xC9A]
	0x03D60A84 MOV X19, X0
	0x03D60A88 TBNZ X8, 0x0, 0x3D60AE8
	0x03D60A8C ADRP X0, 0x3BC000
	0x03D60A90 LDR X0, [X0 + 0x108]
	0x03D60A94 BL 0x1C16CF4
	0x03D60A98 ADRP X0, 0x393000
	0x03D60A9C LDR X0, [X0 + 0xE00]
	0x03D60AA0 BL 0x1C16CF4
	0x03D60AA4 ADRP X0, 0x3BC000
	0x03D60AA8 LDR X0, [X0 + 0x110]
	0x03D60AAC BL 0x1C16CF4
	0x03D60AB0 ADRP X0, 0x3BC000
	0x03D60AB4 LDR X0, [X0 + 0x118]
	0x03D60AB8 BL 0x1C16CF4
	0x03D60ABC ADRP X0, 0x393000
	0x03D60AC0 LDR X0, [X0 + 0xE18]
	0x03D60AC4 BL 0x1C16CF4
	0x03D60AC8 ADRP X0, 0x3BC000
	0x03D60ACC LDR X0, [X0 + 0x128]
	0x03D60AD0 BL 0x1C16CF4
	0x03D60AD4 ADRP X0, 0x3BD000
	0x03D60AD8 LDR X0, [X0 + 0xF10]
	0x03D60ADC BL 0x1C16CF4
	0x03D60AE0 MOVZ W8, 0x1
	0x03D60AE4 STRB W8, [X20 + 0xC9A]
	0x03D60AE8 STP X31, X31, [X31]
	0x03D60AEC LDR X0, [X19 + 0x420]
	0x03D60AF0 CBZ X0, 0x3D610E4
	0x03D60AF4 MOV X1, X31
	0x03D60AF8 BL 0x3D6F8DC
	0x03D60AFC CBZ X0, 0x3D610E4
	0x03D60B00 ADRP X10, 0x3BC000
	0x03D60B04 LDR X8, [X0]
	0x03D60B08 LDR X10, [X10 + 0x110]
	0x03D60B0C MOV X20, X0
	0x03D60B10 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x688000
	007 Move W8, [X21+3218]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x395000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3218], W8
	019 Move X22, 0x395000
	020 Move X21, [X20+1072]
	021 Move X22, [X22+3696]
	022 Add X20, X20, 1072
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void add_contextMenuPopulateEvent(System.Action`2<UnityEngine.UIElements.ContextualMenuPopulateEvent, UnityEngine.UIElements.Column> value)

Disassembly:
	0x03D60B14 LDR X1, [X10]
	0x03D60B18 CBZ X9, 0x3D60B3C
	0x03D60B1C LDR X10, [X8 + 0xB0]
	0x03D60B20 ADD X10, X10, 0x8
	0x03D60B24 LDUR X11, [X10 - 0x8]
	0x03D60B28 CMP X11, X1
	0x03D60B2C B.EQ 0x3D60B4C
	0x03D60B30 SUBS X9, X9, 0x1
	0x03D60B34 ADD X10, X10, 0x10
	0x03D60B38 B.NE 0x3D60B24
	0x03D60B3C MOV X0, X20
	0x03D60B40 MOV W2, W31
	0x03D60B44 BL 0x1C5C788
	0x03D60B48 B 0x3D60B58
	0x03D60B4C LDRSW X9, [X10]
	0x03D60B50 ADD X8, X8, X9, 0x4, LSL
	0x03D60B54 ADD X0, X8, 0x138
	0x03D60B58 LDP X8, X1, [X0]
	0x03D60B5C ADRP X26, 0x3BC000
	0x03D60B60 LDR X26, [X26 + 0x128]
	0x03D60B64 MOV X0, X20
	0x03D60B68 BLR X8
	0x03D60B6C MOV X20, X0
	0x03D60B70 CBZ X0, 0x3D610E8
	0x03D60B74 ADRP X27, 0x393000
	0x03D60B78 ADRP X28, 0x3BC000
	0x03D60B7C LDR X27, [X27 + 0xE18]
	0x03D60B80 LDR X28, [X28 + 0x118]
	0x03D60B84 MOV W29, W31
	0x03D60B88 MOV X22, X31
	0x03D60B8C LDR X8, [X20]
	0x03D60B90 LDR X1, [X27]
	0x03D60B94 MOV X21, X22
	0x03D60B98 LDRH W9, [X8 + 0x12E]
	0x03D60B9C CBZ X9, 0x3D60BC0
	0x03D60BA0 LDR X10, [X8 + 0xB0]
	0x03D60BA4 ADD X10, X10, 0x8
	0x03D60BA8 LDUR X11, [X10 - 0x8]
	0x03D60BAC CMP X11, X1
	0x03D60BB0 B.EQ 0x3D60BD0
	0x03D60BB4 SUBS X9, X9, 0x1
	0x03D60BB8 ADD X10, X10, 0x10
	0x03D60BBC B.NE 0x3D60BA8
	0x03D60BC0 MOV X0, X20
	0x03D60BC4 MOV W2, W31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x688000
	009 Move W8, [X21+3219]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x407000
	017 Move X0, [X0+1568]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3219], W8
	021 Move X24, 0x407000
	022 Move X21, [X20+1080]
	023 Move X24, [X24+1568]
	024 Add X20, X20, 1080
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_contextMenuPopulateEvent(System.Action`2<UnityEngine.UIElements.ContextualMenuPopulateEvent, UnityEngine.UIElements.Column> value)

Disassembly:
	0x03D60BC8 BL 0x1C5C788
	0x03D60BCC B 0x3D60BDC
	0x03D60BD0 LDRSW X9, [X10]
	0x03D60BD4 ADD X8, X8, X9, 0x4, LSL
	0x03D60BD8 ADD X0, X8, 0x138
	0x03D60BDC LDP X8, X1, [X0]
	0x03D60BE0 MOV X0, X20
	0x03D60BE4 BLR X8
	0x03D60BE8 TBZ X0, 0x0, 0x3D60E6C
	0x03D60BEC LDR X8, [X20]
	0x03D60BF0 LDR X1, [X28]
	0x03D60BF4 LDRH W9, [X8 + 0x12E]
	0x03D60BF8 CBZ X9, 0x3D60C1C
	0x03D60BFC LDR X10, [X8 + 0xB0]
	0x03D60C00 ADD X10, X10, 0x8
	0x03D60C04 LDUR X11, [X10 - 0x8]
	0x03D60C08 CMP X11, X1
	0x03D60C0C B.EQ 0x3D60C2C
	0x03D60C10 SUBS X9, X9, 0x1
	0x03D60C14 ADD X10, X10, 0x10
	0x03D60C18 B.NE 0x3D60C04
	0x03D60C1C MOV X0, X20
	0x03D60C20 MOV W2, W31
	0x03D60C24 BL 0x1C5C788
	0x03D60C28 B 0x3D60C38
	0x03D60C2C LDRSW X9, [X10]
	0x03D60C30 ADD X8, X8, X9, 0x4, LSL
	0x03D60C34 ADD X0, X8, 0x138
	0x03D60C38 LDP X8, X1, [X0]
	0x03D60C3C MOV X0, X20
	0x03D60C40 BLR X8
	0x03D60C44 MOV X22, X0
	0x03D60C48 CBZ X0, 0x3D610B4
	0x03D60C4C LDRB W8, [X22 + 0x60]
	0x03D60C50 STR X31, [X31 + 0x8]
	0x03D60C54 LDR X0, [X19 + 0x400]
	0x03D60C58 CMP W8, 0x0
	0x03D60C5C CSET W8, NE
	0x03D60C60 ORR W29, W29, W8, 0x0
	0x03D60C64 CBZ X0, 0x3D610B8
	0x03D60C68 ADRP X8, 0x3BC000
	0x03D60C6C LDR X8, [X8 + 0x108]
	0x03D60C70 LDR X3, [X8]
	0x03D60C74 ADD X2, X31, 0x8
	0x03D60C78 MOV X1, X22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x688000
	009 Move W8, [X21+3220]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x407000
	017 Move X0, [X0+1568]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3220], W8
	021 Move X24, 0x407000
	022 Move X21, [X20+1080]
	023 Move X24, [X24+1568]
	024 Add X20, X20, 1080
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_viewDataRestored(System.Action value)

Disassembly:
	0x03D60C7C BL 0x2AA6B2C
	0x03D60C80 TBZ X0, 0x0, 0x3D60B8C
	0x03D60C84 LDR X8, [X31 + 0x8]
	0x03D60C88 CBZ X8, 0x3D610C0
	0x03D60C8C LDR X0, [X8 + 0x10]
	0x03D60C90 CBZ X0, 0x3D610D0
	0x03D60C94 MOV X1, X31
	0x03D60C98 BL 0x3DE7EEC
	0x03D60C9C MOV X23, X0
	0x03D60CA0 LDUR X0, [X22 + 0x4C]
	0x03D60CA4 MOV X1, X31
	0x03D60CA8 BL 0x3DFEDC0
	0x03D60CAC CBZ X23, 0x3D610D8
	0x03D60CB0 LDR X8, [X23]
	0x03D60CB4 MOV X25, X1
	0x03D60CB8 LDR X1, [X26]
	0x03D60CBC MOV X24, X0
	0x03D60CC0 LDRH W9, [X8 + 0x12E]
	0x03D60CC4 CBZ X9, 0x3D60CE8
	0x03D60CC8 LDR X10, [X8 + 0xB0]
	0x03D60CCC ADD X10, X10, 0x8
	0x03D60CD0 LDUR X11, [X10 - 0x8]
	0x03D60CD4 CMP X11, X1
	0x03D60CD8 B.EQ 0x3D60CF8
	0x03D60CDC SUBS X9, X9, 0x1
	0x03D60CE0 ADD X10, X10, 0x10
	0x03D60CE4 B.NE 0x3D60CD0
	0x03D60CE8 MOVZ W2, 0x20
	0x03D60CEC MOV X0, X23
	0x03D60CF0 BL 0x1C5C788
	0x03D60CF4 B 0x3D60D08
	0x03D60CF8 LDR W9, [X10]
	0x03D60CFC ADD W9, W9, 0x20
	0x03D60D00 ADD X8, X8, W9, 0x4, SXTW
	0x03D60D04 ADD X0, X8, 0x138
	0x03D60D08 LDP X8, X3, [X0]
	0x03D60D0C AND X2, X25, 0x0
	0x03D60D10 MOV X0, X23
	0x03D60D14 MOV X1, X24
	0x03D60D18 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x688000
	007 Move W8, [X21+3221]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x395000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3221], W8
	019 Move X22, 0x395000
	020 Move X21, [X20+1088]
	021 Move X22, [X22+3696]
	022 Add X20, X20, 1088
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_viewDataRestored(System.Action value)

Disassembly:
	0x03D60D1C LDR X8, [X31 + 0x8]
	0x03D60D20 CBZ X8, 0x3D610CC
	0x03D60D24 LDR X0, [X8 + 0x10]
	0x03D60D28 CBZ X0, 0x3D610E0
	0x03D60D2C MOV X1, X31
	0x03D60D30 BL 0x3DE7EEC
	0x03D60D34 MOV X23, X0
	0x03D60D38 LDUR X0, [X22 + 0x54]
	0x03D60D3C MOV X1, X31
	0x03D60D40 BL 0x3DFEDC0
	0x03D60D44 CBZ X23, 0x3D610C8
	0x03D60D48 LDR X8, [X23]
	0x03D60D4C MOV X25, X1
	0x03D60D50 LDR X1, [X26]
	0x03D60D54 MOV X24, X0
	0x03D60D58 LDRH W9, [X8 + 0x12E]
	0x03D60D5C CBZ X9, 0x3D60D80
	0x03D60D60 LDR X10, [X8 + 0xB0]
	0x03D60D64 ADD X10, X10, 0x8
	0x03D60D68 LDUR X11, [X10 - 0x8]
	0x03D60D6C CMP X11, X1
	0x03D60D70 B.EQ 0x3D60D90
	0x03D60D74 SUBS X9, X9, 0x1
	0x03D60D78 ADD X10, X10, 0x10
	0x03D60D7C B.NE 0x3D60D68
	0x03D60D80 MOVZ W2, 0x1F
	0x03D60D84 MOV X0, X23
	0x03D60D88 BL 0x1C5C788
	0x03D60D8C B 0x3D60DA0
	0x03D60D90 LDR W9, [X10]
	0x03D60D94 ADD W9, W9, 0x1F
	0x03D60D98 ADD X8, X8, W9, 0x4, SXTW
	0x03D60D9C ADD X0, X8, 0x138
	0x03D60DA0 LDP X8, X3, [X0]
	0x03D60DA4 AND X2, X25, 0x0
	0x03D60DA8 MOV X0, X23
	0x03D60DAC MOV X1, X24
	0x03D60DB0 BLR X8
	0x03D60DB4 LDR X8, [X31 + 0x8]
	0x03D60DB8 CBZ X8, 0x3D610DC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x688000
	007 Move W8, [X21+3222]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x395000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3222], W8
	019 Move X22, 0x395000
	020 Move X21, [X20+1088]
	021 Move X22, [X22+3696]
	022 Add X20, X20, 1088
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void .ctor(UnityEngine.UIElements.Columns columns, UnityEngine.UIElements.SortColumnDescriptions sortDescriptions, System.Collections.Generic.List`1<UnityEngine.UIElements.SortColumnDescription> sortedColumns)

Disassembly:
	0x03D60DBC LDR X0, [X8 + 0x18]
	0x03D60DC0 CBZ X0, 0x3D610BC
	0x03D60DC4 MOV X1, X31
	0x03D60DC8 BL 0x3DE7EEC
	0x03D60DCC LDR X8, [X19 + 0x420]
	0x03D60DD0 CBZ X8, 0x3D610C4
	0x03D60DD4 LDRB W8, [X8 + 0x31]
	0x03D60DD8 MOV X23, X0
	0x03D60DDC CBZ W8, 0x3D60DEC
	0x03D60DE0 LDRB W8, [X22 + 0x63]
	0x03D60DE4 EOR W0, W8, 0x1
	0x03D60DE8 B 0x3D60DF0
	0x03D60DEC MOVZ W0, 0x1
	0x03D60DF0 ADRP X8, 0x3BD000
	0x03D60DF4 LDR X8, [X8 + 0xF10]
	0x03D60DF8 LDR X1, [X8]
	0x03D60DFC BL 0x266EACC
	0x03D60E00 CBZ X23, 0x3D610D4
	0x03D60E04 LDR X8, [X23]
	0x03D60E08 LDR X1, [X26]
	0x03D60E0C MOV X24, X0
	0x03D60E10 LDRH W9, [X8 + 0x12E]
	0x03D60E14 CBZ X9, 0x3D60E38
	0x03D60E18 LDR X10, [X8 + 0xB0]
	0x03D60E1C ADD X10, X10, 0x8
	0x03D60E20 LDUR X11, [X10 - 0x8]
	0x03D60E24 CMP X11, X1
	0x03D60E28 B.EQ 0x3D60E48
	0x03D60E2C SUBS X9, X9, 0x1
	0x03D60E30 ADD X10, X10, 0x10
	0x03D60E34 B.NE 0x3D60E20
	0x03D60E38 MOVZ W2, 0x12
	0x03D60E3C MOV X0, X23
	0x03D60E40 BL 0x1C5C788
	0x03D60E44 B 0x3D60E58
	0x03D60E48 LDR W9, [X10]
	0x03D60E4C ADD W9, W9, 0x12
	0x03D60E50 ADD X8, X8, W9, 0x4, SXTW
	0x03D60E54 ADD X0, X8, 0x138
	0x03D60E58 LDP X8, X2, [X0]
	0x03D60E5C MOV X0, X23
	0x03D60E60 MOV X1, X24
	0x03D60E64 BLR X8
	0x03D60E68 B 0x3D60B8C
	0x03D60E6C MOV X23, X31
	0x03D60E70 CBZ X20, 0x3D60ED4
	0x03D60E74 LDR X8, [X20]
	0x03D60E78 ADRP X10, 0x393000
	0x03D60E7C LDRH W9, [X8 + 0x12E]
	0x03D60E80 LDR X10, [X10 + 0xE00]
	0x03D60E84 LDR X1, [X10]
	0x03D60E88 CBZ X9, 0x3D60EAC
	0x03D60E8C LDR X10, [X8 + 0xB0]
	0x03D60E90 ADD X10, X10, 0x8
	0x03D60E94 LDUR X11, [X10 - 0x8]
	0x03D60E98 CMP X11, X1
	0x03D60E9C B.EQ 0x3D60EBC
	0x03D60EA0 SUBS X9, X9, 0x1
	0x03D60EA4 ADD X10, X10, 0x10
	0x03D60EA8 B.NE 0x3D60E94
	0x03D60EAC MOV X0, X20
	0x03D60EB0 MOV W2, W31
	0x03D60EB4 BL 0x1C5C788
	0x03D60EB8 B 0x3D60EC8
	0x03D60EBC LDRSW X9, [X10]
	0x03D60EC0 ADD X8, X8, X9, 0x4, LSL
	0x03D60EC4 ADD X0, X8, 0x138
	0x03D60EC8 LDP X8, X1, [X0]
	0x03D60ECC MOV X0, X20
	0x03D60ED0 BLR X8
	0x03D60ED4 CBNZ X23, 0x3D610EC
	0x03D60ED8 LDR X0, [X19 + 0x410]
	0x03D60EDC CBZ X0, 0x3D610E4
	0x03D60EE0 MOV X1, X31
	0x03D60EE4 BL 0x3DE7EEC
	0x03D60EE8 MOV X20, X0
	0x03D60EEC TBZ X29, 0x0, 0x3D60F44
	0x03D60EF0 FMOV S0, 1
	0x03D60EF4 MOV X0, X31
	0x03D60EF8 BL 0x3DFE658
	0x03D60EFC CBZ X20, 0x3D610E4
	0x03D60F00 LDR X8, [X20]
	0x03D60F04 LDR X1, [X26]
	0x03D60F08 MOV X22, X0
	0x03D60F0C LDRH W9, [X8 + 0x12E]
	0x03D60F10 CBZ X9, 0x3D60F34
	0x03D60F14 LDR X10, [X8 + 0xB0]
	0x03D60F18 ADD X10, X10, 0x8
	0x03D60F1C LDUR X11, [X10 - 0x8]
	0x03D60F20 CMP X11, X1
	0x03D60F24 B.EQ 0x3D60F98
	0x03D60F28 SUBS X9, X9, 0x1
	0x03D60F2C ADD X10, X10, 0x10
	0x03D60F30 B.NE 0x3D60F1C
	0x03D60F34 MOVZ W2, 0x15
	0x03D60F38 MOV X0, X20
	0x03D60F3C BL 0x1C5C788
	0x03D60F40 B 0x3D60FA8
	0x03D60F44 FMOV S0, W31
	0x03D60F48 MOV X0, X31
	0x03D60F4C BL 0x3DFE658
	0x03D60F50 CBZ X20, 0x3D610E4
	0x03D60F54 LDR X8, [X20]
	0x03D60F58 LDR X1, [X26]
	0x03D60F5C MOV X21, X0
	0x03D60F60 LDRH W9, [X8 + 0x12E]
	0x03D60F64 CBZ X9, 0x3D60F88
	0x03D60F68 LDR X10, [X8 + 0xB0]
	0x03D60F6C ADD X10, X10, 0x8
	0x03D60F70 LDUR X11, [X10 - 0x8]
	0x03D60F74 CMP X11, X1
	0x03D60F78 B.EQ 0x3D61060
	0x03D60F7C SUBS X9, X9, 0x1
	0x03D60F80 ADD X10, X10, 0x10
	0x03D60F84 B.NE 0x3D60F70
	0x03D60F88 MOVZ W2, 0x15
	0x03D60F8C MOV X0, X20
	0x03D60F90 BL 0x1C5C788
	0x03D60F94 B 0x3D61070
	0x03D60F98 LDR W9, [X10]
	0x03D60F9C ADD W9, W9, 0x15
	0x03D60FA0 ADD X8, X8, W9, 0x4, SXTW
	0x03D60FA4 ADD X0, X8, 0x138
	0x03D60FA8 LDP X8, X2, [X0]
	0x03D60FAC MOV X0, X20
	0x03D60FB0 MOV X1, X22
	0x03D60FB4 BLR X8
	0x03D60FB8 LDR X8, [X19 + 0x420]
	0x03D60FBC CBZ X8, 0x3D610E4
	0x03D60FC0 LDR W8, [X8 + 0x2C]
	0x03D60FC4 CMP W8, 0x1
	0x03D60FC8 B.NE 0x3D61080
	0x03D60FCC LDR X0, [X19 + 0x400]
	0x03D60FD0 CBZ X0, 0x3D610E4
	0x03D60FD4 ADRP X8, 0x3BC000
	0x03D60FD8 LDR X8, [X8 + 0x108]
	0x03D60FDC ADD X2, X31, 0x0
	0x03D60FE0 MOV X1, X21
	0x03D60FE4 LDR X3, [X8]
	0x03D60FE8 BL 0x2AA6B2C
	0x03D60FEC TBZ X0, 0x0, 0x3D61080
	0x03D60FF0 LDR X8, [X31]
	0x03D60FF4 CBZ X8, 0x3D610E4
	0x03D60FF8 LDR X0, [X8 + 0x18]
	0x03D60FFC CBZ X0, 0x3D610E4
	0x03D61000 MOV X1, X31
	0x03D61004 BL 0x3DE7EEC
	0x03D61008 ADRP X8, 0x3BC000
	0x03D6100C LDR X8, [X8 + 0xF10]
	0x03D61010 MOV X20, X0
	0x03D61014 MOVZ W0, 0x1
	0x03D61018 LDR X1, [X8]
	0x03D6101C BL 0x266EACC
	0x03D61020 CBZ X20, 0x3D610E4
	0x03D61024 LDR X8, [X20]
	0x03D61028 LDR X1, [X26]
	0x03D6102C MOV X21, X0
	0x03D61030 LDRH W9, [X8 + 0x12E]
	0x03D61034 CBZ X9, 0x3D61058
	0x03D61038 LDR X10, [X8 + 0xB0]
	0x03D6103C ADD X10, X10, 0x8
	0x03D61040 LDUR X11, [X10 - 0x8]
	0x03D61044 CMP X11, X1
	0x03D61048 B.EQ 0x3D610A8
	0x03D6104C SUBS X9, X9, 0x1
	0x03D61050 ADD X10, X10, 0x10
	0x03D61054 B.NE 0x3D61040
	0x03D61058 MOVZ W2, 0x12
	0x03D6105C B 0x3D60F8C
	0x03D61060 LDR W9, [X10]
	0x03D61064 ADD W9, W9, 0x15
	0x03D61068 ADD X8, X8, W9, 0x4, SXTW
	0x03D6106C ADD X0, X8, 0x138
	0x03D61070 LDP X8, X2, [X0]
	0x03D61074 MOV X0, X20
	0x03D61078 MOV X1, X21
	0x03D6107C BLR X8
	0x03D61080 MOV X0, X19
	0x03D61084 BL 0x3D5F20C
	0x03D61088 LDP X20, X19, [X31 + 0x60]
	0x03D6108C LDP X22, X21, [X31 + 0x50]
	0x03D61090 LDP X24, X23, [X31 + 0x40]
	0x03D61094 LDP X26, X25, [X31 + 0x30]
	0x03D61098 LDP X28, X27, [X31 + 0x20]
	0x03D6109C LDP X29, X30, [X31 + 0x10]
	0x03D610A0 ADD X31, X31, 0x70
	0x03D610A4 RET
	0x03D610A8 LDR W9, [X10]
	0x03D610AC ADD W9, W9, 0x12
	0x03D610B0 B 0x3D61068
	0x03D610B4 BL 0x1C16F20
	0x03D610B8 BL 0x1C16F20
	0x03D610BC BL 0x1C16F20
	0x03D610C0 BL 0x1C16F20
	0x03D610C4 BL 0x1C16F20
	0x03D610C8 BL 0x1C16F20
	0x03D610CC BL 0x1C16F20
	0x03D610D0 BL 0x1C16F20
	0x03D610D4 BL 0x1C16F20
	0x03D610D8 BL 0x1C16F20
	0x03D610DC BL 0x1C16F20
	0x03D610E0 BL 0x1C16F20
	0x03D610E4 BL 0x1C16F20
	0x03D610E8 BL 0x1C16F20
	0x03D610EC MOV X0, X23
	0x03D610F0 BL 0x1C16F18
	0x03D610F4 MOV X22, X0
	0x03D610F8 MOV X21, X31
	0x03D610FC MOV W29, W31
	0x03D61100 B 0x3D61164
	0x03D61104 B 0x3D61160
	0x03D61108 B 0x3D61160
	0x03D6110C B 0x3D61160
	0x03D61110 B 0x3D61160
	0x03D61114 B 0x3D61160
	0x03D61118 B 0x3D61160
	0x03D6111C B 0x3D61160
	0x03D61120 B 0x3D61160
	0x03D61124 B 0x3D61160
	0x03D61128 B 0x3D61160
	0x03D6112C B 0x3D61160
	0x03D61130 B 0x3D61160
	0x03D61134 B 0x3D61160
	0x03D61138 B 0x3D61160
	0x03D6113C B 0x3D61160
	0x03D61140 B 0x3D61160
	0x03D61144 B 0x3D61160
	0x03D61148 B 0x3D61160
	0x03D6114C B 0x3D61160
	0x03D61150 B 0x3D61160
	0x03D61154 B 0x3D61160
	0x03D61158 B 0x3D61160
	0x03D6115C B 0x3D61160
	0x03D61160 MOV X22, X0
	0x03D61164 CMP W1, 0x1
	0x03D61168 B.NE 0x3D61180
	0x03D6116C MOV X0, X22
	0x03D61170 BL 0x3EB1AD0
	0x03D61174 LDR X23, [X0]
	0x03D61178 BL 0x3EB1AE0
	0x03D6117C B 0x3D60E70
	0x03D61180 MOV X23, X31
	0x03D61184 B 0x3D6118C
	0x03D61188 MOV X22, X0
	0x03D6118C CBZ X20, 0x3D611F0
	0x03D61190 LDR X8, [X20]
	0x03D61194 ADRP X10, 0x392000
	0x03D61198 LDRH W9, [X8 + 0x12E]
	0x03D6119C LDR X10, [X10 + 0xE00]
	0x03D611A0 LDR X1, [X10]
	0x03D611A4 CBZ X9, 0x3D611C8
	0x03D611A8 LDR X10, [X8 + 0xB0]
	0x03D611AC ADD X10, X10, 0x8
	0x03D611B0 LDUR X11, [X10 - 0x8]
	0x03D611B4 CMP X11, X1
	0x03D611B8 B.EQ 0x3D611D8
	0x03D611BC SUBS X9, X9, 0x1
	0x03D611C0 ADD X10, X10, 0x10
	0x03D611C4 B.NE 0x3D611B0
	0x03D611C8 MOV X0, X20
	0x03D611CC MOV W2, W31
	0x03D611D0 BL 0x1C5C788
	0x03D611D4 B 0x3D611E4
	0x03D611D8 LDRSW X9, [X10]
	0x03D611DC ADD X8, X8, X9, 0x4, LSL
	0x03D611E0 ADD X0, X8, 0x138
	0x03D611E4 LDP X8, X1, [X0]
	0x03D611E8 MOV X0, X20
	0x03D611EC BLR X8
	0x03D611F0 CBNZ X23, 0x3D611FC
	0x03D611F4 MOV X0, X22
	0x03D611F8 BL 0x1D2C690
	0x03D611FC MOV X0, X23
	0x03D61200 BL 0x1C16F18
	0x03D61204 BL 0x1990590
	0x03D61208 B 0x3D6059C
	0x03D6120C STR X30, [X31 - 0x50]!
	0x03D61210 STP X26, X25, [X31 + 0x10]
	0x03D61214 STP X24, X23, [X31 + 0x20]
	0x03D61218 STP X22, X21, [X31 + 0x30]
	0x03D6121C STP X20, X19, [X31 + 0x40]
	0x03D61220 ADRP X21, 0x686000
	0x03D61224 ADRP X24, 0x3BA000
	0x03D61228 LDRB W8, [X21 + 0xCB5]
	0x03D6122C LDR X24, [X24 + 0x898]
	0x03D61230 MOV X20, X1
	0x03D61234 MOV X19, X0
	0x03D61238 TBNZ X8, 0x0, 0x3D612A4
	0x03D6123C ADRP X0, 0x405000
	0x03D61240 LDR X0, [X0 + 0x650]
	0x03D61244 BL 0x1C16CF4
	0x03D61248 ADRP X0, 0x405000
	0x03D6124C LDR X0, [X0 + 0x658]
	0x03D61250 BL 0x1C16CF4
	0x03D61254 ADRP X0, 0x3BB000
	0x03D61258 LDR X0, [X0 + 0x128]
	0x03D6125C BL 0x1C16CF4
	0x03D61260 ADRP X0, 0x405000
	0x03D61264 LDR X0, [X0 + 0x708]
	0x03D61268 BL 0x1C16CF4
	0x03D6126C ADRP X0, 0x405000
	0x03D61270 LDR X0, [X0 + 0x710]
	0x03D61274 BL 0x1C16CF4
	0x03D61278 ADRP X0, 0x405000
	0x03D6127C LDR X0, [X0 + 0x718]
	0x03D61280 BL 0x1C16CF4
	0x03D61284 ADRP X0, 0x405000
	0x03D61288 LDR X0, [X0 + 0x4D0]
	0x03D6128C BL 0x1C16CF4
	0x03D61290 ADRP X0, 0x3BA000
	0x03D61294 LDR X0, [X0 + 0x898]
	0x03D61298 BL 0x1C16CF4
	0x03D6129C MOVZ W8, 0x1
	0x03D612A0 STRB W8, [X21 + 0xCB5]
	0x03D612A4 LDR X0, [X24]
	0x03D612A8 ADRP X22, 0x405000
	0x03D612AC ADRP X21, 0x405000
	0x03D612B0 LDR W8, [X0 + 0xE0]
	0x03D612B4 LDR X22, [X22 + 0x658]
	0x03D612B8 LDR X21, [X21 + 0x710]
	0x03D612BC CBNZ W8, 0x3D612C4
	0x03D612C0 BL 0x1C16DFC
	0x03D612C4 MOV X0, X19
	0x03D612C8 MOV X1, X31
	0x03D612CC BL 0x3DEF578
	0x03D612D0 STR X20, [X19 + 0x3F8]
	0x03D612D4 LDR X0, [X22]
	0x03D612D8 BL 0x1C16F10
	0x03D612DC LDR X2, [X21]
	0x03D612E0 MOV X1, X19
	0x03D612E4 MOV X3, X31
	0x03D612E8 MOV X21, X0
	0x03D612EC BL 0x2A769B4
	0x03D612F0 CBZ X20, 0x3D619A4
	0x03D612F4 ADRP X22, 0x405000
	0x03D612F8 ADRP X25, 0x405000
	0x03D612FC ADRP X23, 0x405000
	0x03D61300 LDR X22, [X22 + 0x650]
	0x03D61304 LDR X25, [X25 + 0x718]
	0x03D61308 LDR X23, [X23 + 0x4D0]
	0x03D6130C MOV X0, X20
	0x03D61310 MOV X1, X21
	0x03D61314 MOV X2, X31
	0x03D61318 BL 0x3D6FCC4
	0x03D6131C LDR X0, [X22]
	0x03D61320 BL 0x1C16F10
	0x03D61324 LDR X2, [X25]
	0x03D61328 MOV X1, X19
	0x03D6132C MOV X3, X31
	0x03D61330 MOV X21, X0
	0x03D61334 BL 0x2A6B948
	0x03D61338 MOV X0, X20
	0x03D6133C MOV X1, X21
	0x03D61340 MOV X2, X31
	0x03D61344 BL 0x3D6FE24
	0x03D61348 LDR X0, [X23]
	0x03D6134C LDR W8, [X0 + 0xE0]
	0x03D61350 CBNZ W8, 0x3D6135C
	0x03D61354 BL 0x1C16DFC
	0x03D61358 LDR X0, [X23]
	0x03D6135C LDR X8, [X0 + 0xB8]
	0x03D61360 MOV X0, X19
	0x03D61364 MOV X2, X31
	0x03D61368 LDR X1, [X8]
	0x03D6136C BL 0x3DF1C70
	0x03D61370 MOV X0, X19
	0x03D61374 MOV X1, X31
	0x03D61378 BL 0x3DE7EEC
	0x03D6137C MOV X20, X0
	0x03D61380 FMOV S0, W31
	0x03D61384 MOV X0, X31
	0x03D61388 BL 0x3DFED98
	0x03D6138C CBZ X20, 0x3D619A4
	0x03D61390 ADRP X25, 0x3BB000
	0x03D61394 LDR X9, [X20]
	0x03D61398 LDR X25, [X25 + 0x128]
	0x03D6139C MOV X8, X1
	0x03D613A0 MOV X21, X0
	0x03D613A4 LDRH W10, [X9 + 0x12E]
	0x03D613A8 LDR X1, [X25]
	0x03D613AC AND X22, X8, 0x0
	0x03D613B0 CBZ X10, 0x3D613D4
	0x03D613B4 LDR X8, [X9 + 0xB0]
	0x03D613B8 ADD X8, X8, 0x8
	0x03D613BC LDUR X11, [X8 - 0x8]
	0x03D613C0 CMP X11, X1
	0x03D613C4 B.EQ 0x3D613E4
	0x03D613C8 SUBS X10, X10, 0x1
	0x03D613CC ADD X8, X8, 0x10
	0x03D613D0 B.NE 0x3D613BC
	0x03D613D4 MOVZ W2, 0x1B
	0x03D613D8 MOV X0, X20
	0x03D613DC BL 0x1C5C788
	0x03D613E0 B 0x3D613F4
	0x03D613E4 LDR W8, [X8]
	0x03D613E8 ADD W8, W8, 0x1B
	0x03D613EC ADD X8, X9, W8, 0x4, SXTW
	0x03D613F0 ADD X0, X8, 0x138
	0x03D613F4 LDP X8, X3, [X0]
	0x03D613F8 MOV X0, X20
	0x03D613FC MOV X1, X21
	0x03D61400 MOV X2, X22
	0x03D61404 BLR X8
	0x03D61408 MOV X0, X19
	0x03D6140C MOV X1, X31
	0x03D61410 BL 0x3DE7EEC
	0x03D61414 MOV X20, X0
	0x03D61418 FMOV S0, W31
	0x03D6141C MOV X0, X31
	0x03D61420 BL 0x3DFED98
	0x03D61424 CBZ X20, 0x3D619A4
	0x03D61428 LDR X9, [X20]
	0x03D6142C MOV X8, X1
	0x03D61430 LDR X1, [X25]
	0x03D61434 MOV X21, X0
	0x03D61438 LDRH W10, [X9 + 0x12E]
	0x03D6143C AND X22, X8, 0x0
	0x03D61440 CBZ X10, 0x3D61464
	0x03D61444 LDR X8, [X9 + 0xB0]
	0x03D61448 ADD X8, X8, 0x8
	0x03D6144C LDUR X11, [X8 - 0x8]
	0x03D61450 CMP X11, X1
	0x03D61454 B.EQ 0x3D61474
	0x03D61458 SUBS X10, X10, 0x1
	0x03D6145C ADD X8, X8, 0x10
	0x03D61460 B.NE 0x3D6144C
	0x03D61464 MOVZ W2, 0x1D
	0x03D61468 MOV X0, X20
	0x03D6146C BL 0x1C5C788
	0x03D61470 B 0x3D61484
	0x03D61474 LDR W8, [X8]
	0x03D61478 ADD W8, W8, 0x1D
	0x03D6147C ADD X8, X9, W8, 0x4, SXTW
	0x03D61480 ADD X0, X8, 0x138
	0x03D61484 LDP X8, X3, [X0]
	0x03D61488 MOV X0, X20
	0x03D6148C MOV X1, X21
	0x03D61490 MOV X2, X22
	0x03D61494 BLR X8
	0x03D61498 MOV X0, X19
	0x03D6149C MOV X1, X31
	0x03D614A0 BL 0x3DE7EEC
	0x03D614A4 MOV X20, X0
	0x03D614A8 FMOV S0, W31
	0x03D614AC MOV X0, X31
	0x03D614B0 BL 0x3DFED98
	0x03D614B4 CBZ X20, 0x3D619A4
	0x03D614B8 LDR X9, [X20]
	0x03D614BC MOV X8, X1
	0x03D614C0 LDR X1, [X25]
	0x03D614C4 MOV X21, X0
	0x03D614C8 LDRH W10, [X9 + 0x12E]
	0x03D614CC AND X22, X8, 0x0
	0x03D614D0 CBZ X10, 0x3D614F4
	0x03D614D4 LDR X8, [X9 + 0xB0]
	0x03D614D8 ADD X8, X8, 0x8
	0x03D614DC LDUR X11, [X8 - 0x8]
	0x03D614E0 CMP X11, X1
	0x03D614E4 B.EQ 0x3D61504
	0x03D614E8 SUBS X10, X10, 0x1
	0x03D614EC ADD X8, X8, 0x10
	0x03D614F0 B.NE 0x3D614DC
	0x03D614F4 MOVZ W2, 0x1C
	0x03D614F8 MOV X0, X20
	0x03D614FC BL 0x1C5C788
	0x03D61500 B 0x3D61514
	0x03D61504 LDR W8, [X8]
	0x03D61508 ADD W8, W8, 0x1C
	0x03D6150C ADD X8, X9, W8, 0x4, SXTW
	0x03D61510 ADD X0, X8, 0x138
	0x03D61514 LDP X8, X3, [X0]
	0x03D61518 MOV X0, X20
	0x03D6151C MOV X1, X21
	0x03D61520 MOV X2, X22
	0x03D61524 BLR X8
	0x03D61528 MOV X0, X19
	0x03D6152C MOV X1, X31
	0x03D61530 BL 0x3DE7EEC
	0x03D61534 MOV X20, X0
	0x03D61538 FMOV S0, W31
	0x03D6153C MOV X0, X31
	0x03D61540 BL 0x3DFED98
	0x03D61544 CBZ X20, 0x3D619A4
	0x03D61548 LDR X9, [X20]
	0x03D6154C MOV X8, X1
	0x03D61550 LDR X1, [X25]
	0x03D61554 MOV X21, X0
	0x03D61558 LDRH W10, [X9 + 0x12E]
	0x03D6155C AND X22, X8, 0x0
	0x03D61560 CBZ X10, 0x3D61584
	0x03D61564 LDR X8, [X9 + 0xB0]
	0x03D61568 ADD X8, X8, 0x8
	0x03D6156C LDUR X11, [X8 - 0x8]
	0x03D61570 CMP X11, X1
	0x03D61574 B.EQ 0x3D61594
	0x03D61578 SUBS X10, X10, 0x1
	0x03D6157C ADD X8, X8, 0x10
	0x03D61580 B.NE 0x3D6156C
	0x03D61584 MOVZ W2, 0x1A
	0x03D61588 MOV X0, X20
	0x03D6158C BL 0x1C5C788
	0x03D61590 B 0x3D615A4
	0x03D61594 LDR W8, [X8]
	0x03D61598 ADD W8, W8, 0x1A

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x688000
	013 Move X27, 0x407000
	014 Move X23, 0x407000
	015 Move X26, 0x407000
	016 Move X25, 0x407000
	017 Move X24, 0x3BC000
	018 Move W8, [X28+3223]
	019 Move X27, [X27+1576]
	020 Move X23, [X23+1584]
	021 Move X26, [X26+1592]
	022 Move X25, [X25+1600]
	023 Move X24, [X24+2200]
	024 Move X22, X3
	025 Move X21, X2
	026 Move X20, X1
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {118}
	032 Move X0, 0x407000
	033 Move X0, [X0+1608]
	034 Call 0x1C17CF4
	035 Move X0, 0x407000
	036 Move X0, [X0+1616]
	037 Call 0x1C17CF4
	038 Move X0, 0x407000
	039 Move X0, [X0+1624]
	040 Call 0x1C17CF4
	041 Move X0, 0x407000
	042 Move X0, [X0+1632]
	043 Call 0x1C17CF4
	044 Move X0, 0x407000
	045 Move X0, [X0+1640]
	046 Call 0x1C17CF4
	047 Move X0, 0x395000
	048 Move X0, [X0+3696]
	049 Call 0x1C17CF4
	050 Move X0, 0x3BE000
	051 Move X0, [X0+1624]
	052 Call 0x1C17CF4
	053 Move X0, 0x407000
	054 Move X0, [X0+1648]
	055 Call 0x1C17CF4
	056 Move X0, 0x407000
	057 Move X0, [X0+1656]
	058 Call 0x1C17CF4
	059 Move X0, 0x407000
	060 Move X0, [X0+1600]
	061 Call 0x1C17CF4
	062 Move X0, 0x407000
	063 Move X0, [X0+1592]
	064 Call 0x1C17CF4
	065 Move X0, 0x3BE000
	066 Move X0, [X0+1632]
	067 Call 0x1C17CF4
	068 Move X0, 0x394000
	069 Move X0, [X0+3584]
	070 Call 0x1C17CF4
	071 Move X0, 0x3BD000
	072 Move X0, [X0+272]
	073 Call 0x1C17CF4
	074 Move X0, 0x3BD000
	075 Move X0, [X0+280]
	076 Call 0x1C17CF4
	077 Move X0, 0x394000
	078 Move X0, [X0+3608]
	079 Call 0x1C17CF4
	080 Move X0, 0x407000
	081 Move X0, [X0+1584]
	082 Call 0x1C17CF4
	083 Move X0, 0x407000
	084 Move X0, [X0+1576]
	085 Call 0x1C17CF4
	086 Move X0, 0x407000
	087 Move X0, [X0+1664]
	088 Call 0x1C17CF4
	089 Move X0, 0x407000
	090 Move X0, [X0+1672]
	091 Call 0x1C17CF4
	092 Move X0, 0x407000
	093 Move X0, [X0+1680]
	094 Call 0x1C17CF4
	095 Move X0, 0x407000
	096 Move X0, [X0+1688]
	097 Call 0x1C17CF4
	098 Move X0, 0x407000
	099 Move X0, [X0+1696]
	100 Call 0x1C17CF4
	101 Move X0, 0x407000
	102 Move X0, [X0+1704]
	103 Call 0x1C17CF4
	104 Move X0, 0x407000
	105 Move X0, [X0+1712]
	106 Call 0x1C17CF4
	107 Move X0, 0x407000
	108 Move X0, [X0+1720]
	109 Call 0x1C17CF4
	110 Move X0, 0x403000
	111 Move X0, [X0+3152]
	112 Call 0x1C17CF4
	113 Move X0, 0x3BC000
	114 Move X0, [X0+2200]
	115 Call 0x1C17CF4
	116 Move W8, 1
	117 Move [X28+3223], W8
	118 Move X0, [X27]
	119 Move X27, 0x403000
	120 Move X27, [X27+3152]
	121 Call 0x1C17F10
	122 Move X1, [X23]
	123 Move X23, X0
	124 Call List`1<SortedColumnState>..ctor, X0
	125 Move [X19+992], X23
	126 Move X0, [X26]
	127 Call 0x1C17F10
	128 Move X1, [X25]
	129 Move X23, X0
	130 Call Dictionary`2<Object, Object>..ctor, X0
	131 Move [X19+1024], X23
	132 Move X0, [X24]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, X19
	138 Move X1, X31
	139 Call VisualElement..ctor, X0
	140 Move X0, [X27]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {146}
	144 Call 0x1C17DFC
	145 Move X0, [X27]
	146 Move X8, [X0+184]
	147 Move X0, X19
	148 Move X2, X31
	149 Move X1, [X8]
	150 Call VisualElement.AddToClassList, X0, X1
	151 Move X0, X19
	152 Move X1, X21
	153 Move [X19+1056], X20
	154 Move [X19+976], X22
	155 Call MultiColumnCollectionHeader.set_sortDescriptions, X0, X1
	156 Move X0, [X24]
	157 Call 0x1C17F10
	158 Move X1, X31
	159 Move X21, X0
	160 Call VisualElement..ctor, X0
	161 Compare X21, 0
	162 JumpIfEqual {485}
	163 Move W1, 1
	164 Move X0, X21
	165 Move X2, X31
	166 Call VisualElement.set_pickingMode, X0, X1
	167 Move [X19+1040], X21
	168 Move X8, [X27]
	169 Move X0, X21
	170 Move X2, X31
	171 Move X8, [X8+184]
	172 Move X1, [X8+8]
	173 Call VisualElement.AddToClassList, X0, X1
	174 Move X1, [X19+1040]
	175 Move X0, X19
	176 Move X2, X31
	177 Call VisualElement.Add, X0, X1
	178 Move X0, [X24]
	179 Call 0x1C17F10
	180 Move X1, X31
	181 Move X21, X0
	182 Call VisualElement..ctor, X0
	183 Compare X21, 0
	184 JumpIfEqual {485}
	185 Move X22, 0x406000
	186 Move X23, 0x394000
	187 Move X24, 0x406000
	188 Move X22, [X22+1648]
	189 Move X23, [X23+3696]
	190 Move X24, [X24+1720]
	191 Move W1, 1
	192 Move X0, X21
	193 Move X2, X31
	194 Call VisualElement.set_pickingMode, X0, X1
	195 Move [X19+1048], X21
	196 Move X8, [X27]
	197 Move X0, X21
	198 Move X2, X31
	199 Move X8, [X8+184]
	200 Move X1, [X8+16]
	201 Call VisualElement.AddToClassList, X0, X1
	202 Move X0, [X19+1048]
	203 Move X1, X31
	204 Call VisualElementExtensions.StretchToParentSize, X0
	205 Move X1, [X19+1048]
	206 Move X0, X19
	207 Move X2, X31
	208 Call VisualElement.Add, X0, X1
	209 Move X0, [X22]
	210 Call 0x1C17F10
	211 Move X1, X20
	212 Move X2, X31
	213 Move X21, X0
	214 Call ColumnLayout..ctor, X0, X1
	215 Move [X19+1032], X21
	216 Move X0, [X23]
	217 Call 0x1C17F10
	218 Move X2, [X24]
	219 Move X1, X19
	220 Move X3, X31
	221 Move X22, X0
	222 Call Action..ctor, X0, X1, X2
	223 Compare X21, 0
	224 JumpIfEqual {485}
	225 Move X0, X21
	226 Move X1, X22
	227 Move X2, X31
	228 Call ColumnLayout.add_layoutRequested, X0, X1
	229 Compare X20, 0
	230 JumpIfEqual {485}
	231 Move X0, X20
	232 Move X1, X31
	233 Call Columns.get_visibleList, X0
	234 Compare X0, 0
	235 JumpIfEqual {485}
	236 Move X10, 0x3BC000
	237 Move X8, [X0]
	238 Move X10, [X10+272]
	239 Move X20, X0
	240 NotImplemented "Instruction LDRH not yet implemented."
	241 Move X1, [X10]
	242 Compare X9, 0
	243 JumpIfEqual {250}
	244 Move X10, [X8+176]
	245 Add X10, X10, 8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X9, X9, 1
	249 Add X10, X10, 16
	250 Move X0, X20
	251 Move W2, W31
	252 Call 0x1C5D788
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Add X8, X8, X9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X1, [X0+8]
	258 Move X23, 0x393000
	259 Move X23, [X23+3584]
	260 Move X0, X20
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Move X20, X0
	263 Compare X0, 0
	264 JumpIfEqual {486}
	265 Move X21, 0x393000
	266 Move X22, 0x3BC000
	267 Move X21, [X21+3608]
	268 Move X22, [X22+280]
	269 Move X8, [X20]
	270 Move X1, [X21]
	271 NotImplemented "Instruction LDRH not yet implemented."
	272 Compare X9, 0
	273 JumpIfEqual {280}
	274 Move X10, [X8+176]
	275 Add X10, X10, 8
	276 NotImplemented "Instruction LDUR not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Subtract X9, X9, 1
	279 Add X10, X10, 16
	280 Move X0, X20
	281 Move W2, W31
	282 Call 0x1C5D788
	283 NotImplemented "Instruction LDRSW not yet implemented."
	284 Add X8, X8, X9
	285 Add X0, X8, 312
	286 Move X8, [X0]
	287 Move X1, [X0+8]
	288 Move X0, X20
	289 NotImplemented "Instruction BLR not yet implemented."
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfNotEqual {318}
	294 Move X8, [X20]
	295 Move X1, [X22]
	296 NotImplemented "Instruction LDRH not yet implemented."
	297 Compare X9, 0
	298 JumpIfEqual {305}
	299 Move X10, [X8+176]
	300 Add X10, X10, 8
	301 NotImplemented "Instruction LDUR not yet implemented."
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Subtract X9, X9, 1
	304 Add X10, X10, 16
	305 Move X0, X20
	306 Move W2, W31
	307 Call 0x1C5D788
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Add X8, X8, X9
	310 Add X0, X8, 312
	311 Move X8, [X0]
	312 Move X1, [X0+8]
	313 Move X0, X20
	314 NotImplemented "Instruction BLR not yet implemented."
	315 Move X1, X0
	316 Move X0, X19
	317 Call MultiColumnCollectionHeader.OnColumnAdded, X0, X1
	318 Move X21, X31
	319 Compare X20, 0
	320 JumpIfEqual {342}
	321 Move X8, [X20]
	322 Move X1, [X23]
	323 NotImplemented "Instruction LDRH not yet implemented."
	324 Compare X9, 0
	325 JumpIfEqual {332}
	326 Move X10, [X8+176]
	327 Add X10, X10, 8
	328 NotImplemented "Instruction LDUR not yet implemented."
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Subtract X9, X9, 1
	331 Add X10, X10, 16
	332 Move X0, X20
	333 Move W2, W31
	334 Call 0x1C5D788
	335 NotImplemented "Instruction LDRSW not yet implemented."
	336 Add X8, X8, X9
	337 Add X0, X8, 312
	338 Move X8, [X0]
	339 Move X1, [X0+8]
	340 Move X0, X20
	341 NotImplemented "Instruction BLR not yet implemented."
	342 Compare X21, 0
	343 JumpIfNotEqual {487}
	344 Move X8, 0x406000
	345 Move X8, [X8+1632]
	346 Move X21, 0x406000
	347 Move X20, [X19+1056]
	348 Move X0, [X8]
	349 Move X21, [X21+1664]
	350 Call 0x1C17F10
	351 Move X2, [X21]
	352 Move X1, X19
	353 Move X3, X31
	354 Move X21, X0
	355 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	356 Compare X20, 0
	357 JumpIfEqual {485}
	358 Move X22, 0x406000
	359 Move X23, 0x406000
	360 Move X22, [X22+1616]
	361 Move X23, [X23+1680]
	362 Move X0, X20
	363 Move X1, X21
	364 Move X2, X31
	365 Call Columns.add_columnAdded, X0, X1
	366 Move X0, [X22]
	367 Move X20, [X19+1056]
	368 Call 0x1C17F10
	369 Move X2, [X23]
	370 Move X1, X19
	371 Move X3, X31
	372 Move X21, X0
	373 Call Action`1<Object>..ctor, X0, X1, X2
	374 Compare X20, 0
	375 JumpIfEqual {485}
	376 Move X23, 0x406000
	377 Move X24, 0x406000
	378 Move X23, [X23+1624]
	379 Move X24, [X24+1672]
	380 Move X0, X20
	381 Move X1, X21
	382 Move X2, X31
	383 Call Columns.add_columnRemoved, X0, X1
	384 Move X0, [X23]
	385 Move X20, [X19+1056]
	386 Call 0x1C17F10
	387 Move X2, [X24]
	388 Move X1, X19
	389 Move X3, X31
	390 Move X21, X0
	391 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	392 Compare X20, 0
	393 JumpIfEqual {485}
	394 Move X23, 0x406000
	395 Move X24, 0x406000
	396 Move X23, [X23+1640]
	397 Move X24, [X24+1688]
	398 Move X0, X20
	399 Move X1, X21
	400 Move X2, X31
	401 Call Columns.add_columnChanged, X0, X1
	402 Move X0, [X23]
	403 Move X20, [X19+1056]
	404 Call 0x1C17F10
	405 Move X2, [X24]
	406 Move X1, X19
	407 Move X3, X31
	408 Move X21, X0
	409 Call Action`3<Object, Int32, Int32>..ctor, X0, X1, X2
	410 Compare X20, 0
	411 JumpIfEqual {485}
	412 Move X23, 0x406000
	413 Move X23, [X23+1696]
	414 Move X0, X20
	415 Move X1, X21
	416 Move X2, X31
	417 Call Columns.add_columnReordered, X0, X1
	418 Move X0, [X22]
	419 Move X20, [X19+1056]
	420 Call 0x1C17F10
	421 Move X2, [X23]
	422 Move X1, X19
	423 Move X3, X31
	424 Move X21, X0
	425 Call Action`1<Object>..ctor, X0, X1, X2
	426 Compare X20, 0
	427 JumpIfEqual {485}
	428 Move X22, 0x406000
	429 Move X23, 0x406000
	430 Move X24, 0x406000
	431 Move X25, 0x3BD000
	432 Move X26, 0x406000
	433 Move X27, 0x3BD000
	434 Move X22, [X22+1608]
	435 Move X23, [X23+1704]
	436 Move X24, [X24+1656]
	437 Move X25, [X25+1632]
	438 Move X26, [X26+1712]
	439 Move X27, [X27+1624]
	440 Move X0, X20
	441 Move X1, X21
	442 Move X2, X31
	443 Call Columns.add_columnResized, X0, X1
	444 Move X0, [X22]
	445 Call 0x1C17F10
	446 Move X2, [X23]
	447 Move X1, X19
	448 Move X3, X31
	449 Move X20, X0
	450 Call Action`1<Object>..ctor, X0, X1, X2
	451 Move X0, [X24]
	452 Call 0x1C17F10
	453 Move X1, X20
	454 Move X2, X31
	455 Move X21, X0
	456 Call ContextualMenuManipulator..ctor, X0, X1
	457 Move X0, X19
	458 Move X1, X21
	459 Move X2, X31
	460 Call VisualElementExtensions.AddManipulator, X0, X1
	461 Move X0, [X25]
	462 Call 0x1C17F10
	463 Move X2, [X26]
	464 Move X1, X19
	465 Move X3, X31
	466 Move X20, X0
	467 Call 0x2D0F824, X0, X1, X2
	468 Move X3, [X27]
	469 Move X0, X19
	470 Move X1, X20
	471 Move X20, [X31+80]
	472 Move X19, [X31+88]
	473 Move X22, [X31+64]
	474 Move X21, [X31+72]
	475 Move X24, [X31+48]
	476 Move X23, [X31+56]
	477 Move X26, [X31+32]
	478 Move X25, [X31+40]
	479 Move X28, [X31+16]
	480 Move X27, [X31+24]
	481 Move W2, W31
	482 Move X30, [X31+96]
	483 Call 0x21A2534, X0, X1, X2
	484 Return 
	485 Call 0x1C17F20
	486 Call 0x1C17F20
	487 Move X0, X21
	488 Call 0x1C17F18
	489 Move X22, X0
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move X0, X22
	492 Call 0x3EB2AD0
	493 Move X21, [X0]
	494 Call 0x3EB2AE0
	495 Move X21, X31
	496 Move X22, X0
	497 Compare X20, 0
	498 JumpIfEqual {520}
	499 Move X8, [X20]
	500 Move X1, [X23]
	501 NotImplemented "Instruction LDRH not yet implemented."
	502 Compare X9, 0
	503 JumpIfEqual {510}
	504 Move X10, [X8+176]
	505 Add X10, X10, 8
	506 NotImplemented "Instruction LDUR not yet implemented."
	507 NotImplemented "Instruction CMP not yet implemented."
	508 Subtract X9, X9, 1
	509 Add X10, X10, 16
	510 Move X0, X20
	511 Move W2, W31
	512 Call 0x1C5D788
	513 NotImplemented "Instruction LDRSW not yet implemented."
	514 Add X8, X8, X9
	515 Add X0, X8, 312
	516 Move X8, [X0]
	517 Move X1, [X0+8]
	518 Move X0, X20
	519 NotImplemented "Instruction BLR not yet implemented."
	520 Compare X21, 0
	521 JumpIfNotEqual {524}
	522 Move X0, X22
	523 Call 0x1D2D690
	524 Move X0, X21
	525 Call 0x1C17F18
	526 Call 0x1991590

Method: System.Void ScheduleDoLayout()

Disassembly:
	0x03D618A8 ADD W9, W9, 0x15
	0x03D618AC ADD X8, X8, W9, 0x4, SXTW
	0x03D618B0 ADD X0, X8, 0x138
	0x03D618B4 LDP X8, X2, [X0]
	0x03D618B8 MOV X0, X20
	0x03D618BC MOV X1, X21
	0x03D618C0 BLR X8
	0x03D618C4 LDR X0, [X19 + 0x3C8]
	0x03D618C8 CBZ X0, 0x3D619A4
	0x03D618CC MOV X1, X31
	0x03D618D0 BL 0x3DE7EEC
	0x03D618D4 MOV X20, X0
	0x03D618D8 FMOV S0, 1
	0x03D618DC MOV X0, X31
	0x03D618E0 BL 0x3DFE658
	0x03D618E4 CBZ X20, 0x3D619A4
	0x03D618E8 LDR X8, [X20]
	0x03D618EC LDR X1, [X25]
	0x03D618F0 MOV X21, X0
	0x03D618F4 LDRH W9, [X8 + 0x12E]
	0x03D618F8 CBZ X9, 0x3D6191C
	0x03D618FC LDR X10, [X8 + 0xB0]
	0x03D61900 ADD X10, X10, 0x8
	0x03D61904 LDUR X11, [X10 - 0x8]
	0x03D61908 CMP X11, X1
	0x03D6190C B.EQ 0x3D6192C
	0x03D61910 SUBS X9, X9, 0x1
	0x03D61914 ADD X10, X10, 0x10
	0x03D61918 B.NE 0x3D61904
	0x03D6191C MOVZ W2, 0x16
	0x03D61920 MOV X0, X20
	0x03D61924 BL 0x1C5C788
	0x03D61928 B 0x3D6193C
	0x03D6192C LDR W9, [X10]
	0x03D61930 ADD W9, W9, 0x16
	0x03D61934 ADD X8, X8, W9, 0x4, SXTW
	0x03D61938 ADD X0, X8, 0x138
	0x03D6193C LDP X8, X2, [X0]
	0x03D61940 MOV X0, X20
	0x03D61944 MOV X1, X21
	0x03D61948 BLR X8
	0x03D6194C LDR X0, [X19 + 0x3C8]
	0x03D61950 CBZ X0, 0x3D619A4
	0x03D61954 LDR X8, [X23]
	0x03D61958 MOV X2, X31
	0x03D6195C LDR X8, [X8 + 0xB8]
	0x03D61960 LDR X1, [X8 + 0x28]
	0x03D61964 BL 0x3DF1C70
	0x03D61968 LDR X1, [X19 + 0x3C8]
	0x03D6196C MOV X0, X19
	0x03D61970 MOV X2, X31
	0x03D61974 BL 0x3DF60E8
	0x03D61978 MOV X0, X19
	0x03D6197C BL 0x3D65798
	0x03D61980 MOV X0, X19
	0x03D61984 BL 0x3D6596C
	0x03D61988 MOV X0, X19
	0x03D6198C LDP X20, X19, [X31 + 0x40]
	0x03D61990 LDP X22, X21, [X31 + 0x30]
	0x03D61994 LDP X24, X23, [X31 + 0x20]
	0x03D61998 LDP X26, X25, [X31 + 0x10]
	0x03D6199C LDR X30, [X31], #0x50
	0x03D619A0 B 0x3D65A6C
	0x03D619A4 BL 0x1C16F20
	0x03D619A8 STP X30, X21, [X31 - 0x20]!
	0x03D619AC STP X20, X19, [X31 + 0x10]
	0x03D619B0 ADRP X21, 0x686000
	0x03D619B4 ADRP X20, 0x3BA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x687000
	006 Move W8, [X20+3224]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x394000
	013 Move X0, [X0+3696]
	014 Call 0x1C17CF4
	015 Move X0, 0x3BB000
	016 Move X0, [X0+1664]
	017 Call 0x1C17CF4
	018 Move X0, 0x406000
	019 Move X0, [X0+1792]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3224], W8
	023 Move W8, [X19+1017]
	024 Compare W8, 0
	025 JumpIfNotEqual {71}
	026 Move X0, X19
	027 Move X1, X31
	028 Call VisualElement.get_schedule, X0
	029 Move X8, 0x394000
	030 Move X8, [X8+3696]
	031 Move X20, X0
	032 Move X8, [X8]
	033 Move X0, X8
	034 Call 0x1C17F10
	035 Move X8, 0x406000
	036 Move X8, [X8+1792]
	037 Move X1, X19
	038 Move X3, X31
	039 Move X21, X0
	040 Move X2, [X8]
	041 Call Action..ctor, X0, X1, X2
	042 Compare X20, 0
	043 JumpIfEqual {76}
	044 Move X10, 0x3BB000
	045 Move X8, [X20]
	046 Move X10, [X10+1664]
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 1
	058 Move X0, X20
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 1
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X2, [X0+8]
	066 Move X0, X20
	067 Move X1, X21
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move W8, 1
	070 Move [X19+1017], W8
	071 Move X20, [X31+16]
	072 Move X19, [X31+24]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Return 
	076 Call 0x1C17F20

Method: System.Void ResizeToFit()

Disassembly:
	0x03D619B8 LDRB W8, [X21 + 0xCC1]
	0x03D619BC LDR X20, [X20 + 0x898]
	0x03D619C0 MOV X19, X0
	0x03D619C4 TBNZ X8, 0x0, 0x3D619E8
	0x03D619C8 ADRP X0, 0x405000
	0x03D619CC LDR X0, [X0 + 0x6F8]
	0x03D619D0 BL 0x1C16CF4
	0x03D619D4 ADRP X0, 0x3BA000
	0x03D619D8 LDR X0, [X0 + 0x898]
	0x03D619DC BL 0x1C16CF4
	0x03D619E0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+1032]
	004 Move X1, X31
	005 Call VisualElement.get_layout, X0
	006 Compare X19, 0
	007 JumpIfEqual {15}
	008 Move X0, X19
	009 Move V0, V2
	010 Move X1, X31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call ColumnLayout.ResizeToFit, X0, V0
	014 Return 
	015 Call 0x1C17F20

Method: System.Void UpdateSortedColumns()

Disassembly:
	0x03D5FABC MOV X1, X19
	0x03D5FAC0 MOV X2, X31
	0x03D5FAC4 BL 0x33C0FDC
	0x03D5FAC8 MOV X8, X0
	0x03D5FACC CBZ X0, 0x3D5FAE0
	0x03D5FAD0 LDR X1, [X22]
	0x03D5FAD4 LDR X9, [X8]
	0x03D5FAD8 CMP X9, X1
	0x03D5FADC B.NE 0x3D5FB0C
	0x03D5FAE0 MOV X0, X20
	0x03D5FAE4 MOV X1, X8
	0x03D5FAE8 MOV X2, X21
	0x03D5FAEC BL 0x1C24138
	0x03D5FAF0 CMP X21, X0
	0x03D5FAF4 MOV X21, X0
	0x03D5FAF8 B.NE 0x3D5FAB8
	0x03D5FAFC LDP X20, X19, [X31 + 0x20]
	0x03D5FB00 LDP X22, X21, [X31 + 0x10]
	0x03D5FB04 LDR X30, [X31], #0x30
	0x03D5FB08 RET
	0x03D5FB0C MOV X0, X8
	0x03D5FB10 BL 0x1C171E0
	0x03D5FB14 STR X30, [X31 - 0x40]!
	0x03D5FB18 STP X24, X23, [X31 + 0x10]
	0x03D5FB1C STP X22, X21, [X31 + 0x20]
	0x03D5FB20 STP X20, X19, [X31 + 0x30]
	0x03D5FB24 ADRP X21, 0x688000
	0x03D5FB28 LDRB W8, [X21 + 0xC93]
	0x03D5FB2C MOV X19, X1
	0x03D5FB30 MOV X20, X0
	0x03D5FB34 TBNZ X8, 0x0, 0x3D5FB4C
	0x03D5FB38 ADRP X0, 0x407000
	0x03D5FB3C LDR X0, [X0 + 0x620]
	0x03D5FB40 BL 0x1C16CF4
	0x03D5FB44 MOVZ W8, 0x1
	0x03D5FB48 STRB W8, [X21 + 0xC93]
	0x03D5FB4C ADRP X24, 0x407000
	0x03D5FB50 LDR X21, [X20 + 0x438]
	0x03D5FB54 LDR X24, [X24 + 0x620]
	0x03D5FB58 ADD X20, X20, 0x438
	0x03D5FB5C MOV X0, X21
	0x03D5FB60 MOV X1, X19
	0x03D5FB64 MOV X2, X31
	0x03D5FB68 BL 0x33C0DE4
	0x03D5FB6C CBZ X0, 0x3D5FB8C
	0x03D5FB70 LDR X23, [X24]
	0x03D5FB74 MOV X22, X0
	0x03D5FB78 MOV X1, X23
	0x03D5FB7C BL 0x1C16E00
	0x03D5FB80 MOV X1, X0
	0x03D5FB84 CBNZ X0, 0x3D5FB90
	0x03D5FB88 B 0x3D5FBBC
	0x03D5FB8C MOV X1, X31
	0x03D5FB90 MOV X0, X20
	0x03D5FB94 MOV X2, X21
	0x03D5FB98 BL 0x1C24138
	0x03D5FB9C CMP X21, X0
	0x03D5FBA0 MOV X21, X0
	0x03D5FBA4 B.NE 0x3D5FB5C
	0x03D5FBA8 LDP X20, X19, [X31 + 0x30]
	0x03D5FBAC LDP X22, X21, [X31 + 0x20]
	0x03D5FBB0 LDP X24, X23, [X31 + 0x10]
	0x03D5FBB4 LDR X30, [X31], #0x40
	0x03D5FBB8 RET
	0x03D5FBBC MOV X0, X22
	0x03D5FBC0 MOV X1, X23
	0x03D5FBC4 BL 0x1C171E0
	0x03D5FBC8 STR X30, [X31 - 0x40]!
	0x03D5FBCC STP X24, X23, [X31 + 0x10]
	0x03D5FBD0 STP X22, X21, [X31 + 0x20]
	0x03D5FBD4 STP X20, X19, [X31 + 0x30]
	0x03D5FBD8 ADRP X21, 0x688000
	0x03D5FBDC LDRB W8, [X21 + 0xC94]
	0x03D5FBE0 MOV X19, X1
	0x03D5FBE4 MOV X20, X0
	0x03D5FBE8 TBNZ X8, 0x0, 0x3D5FC00
	0x03D5FBEC ADRP X0, 0x407000
	0x03D5FBF0 LDR X0, [X0 + 0x620]
	0x03D5FBF4 BL 0x1C16CF4
	0x03D5FBF8 MOVZ W8, 0x1
	0x03D5FBFC STRB W8, [X21 + 0xC94]
	0x03D5FC00 ADRP X24, 0x407000
	0x03D5FC04 LDR X21, [X20 + 0x438]
	0x03D5FC08 LDR X24, [X24 + 0x620]
	0x03D5FC0C ADD X20, X20, 0x438
	0x03D5FC10 MOV X0, X21
	0x03D5FC14 MOV X1, X19
	0x03D5FC18 MOV X2, X31
	0x03D5FC1C BL 0x33C0FDC
	0x03D5FC20 CBZ X0, 0x3D5FC40
	0x03D5FC24 LDR X23, [X24]
	0x03D5FC28 MOV X22, X0
	0x03D5FC2C MOV X1, X23
	0x03D5FC30 BL 0x1C16E00
	0x03D5FC34 MOV X1, X0
	0x03D5FC38 CBNZ X0, 0x3D5FC44
	0x03D5FC3C B 0x3D5FC70
	0x03D5FC40 MOV X1, X31
	0x03D5FC44 MOV X0, X20
	0x03D5FC48 MOV X2, X21
	0x03D5FC4C BL 0x1C24138
	0x03D5FC50 CMP X21, X0
	0x03D5FC54 MOV X21, X0
	0x03D5FC58 B.NE 0x3D5FC10
	0x03D5FC5C LDP X20, X19, [X31 + 0x30]
	0x03D5FC60 LDP X22, X21, [X31 + 0x20]
	0x03D5FC64 LDP X24, X23, [X31 + 0x10]
	0x03D5FC68 LDR X30, [X31], #0x40
	0x03D5FC6C RET
	0x03D5FC70 MOV X0, X22
	0x03D5FC74 MOV X1, X23
	0x03D5FC78 BL 0x1C171E0
	0x03D5FC7C STR X30, [X31 - 0x30]!
	0x03D5FC80 STP X22, X21, [X31 + 0x10]
	0x03D5FC84 STP X20, X19, [X31 + 0x20]
	0x03D5FC88 ADRP X21, 0x688000
	0x03D5FC8C LDRB W8, [X21 + 0xC95]
	0x03D5FC90 MOV X19, X1
	0x03D5FC94 MOV X20, X0
	0x03D5FC98 TBNZ X8, 0x0, 0x3D5FCB0
	0x03D5FC9C ADRP X0, 0x395000
	0x03D5FCA0 LDR X0, [X0 + 0xE70]
	0x03D5FCA4 BL 0x1C16CF4
	0x03D5FCA8 MOVZ W8, 0x1
	0x03D5FCAC STRB W8, [X21 + 0xC95]
	0x03D5FCB0 ADRP X22, 0x395000
	0x03D5FCB4 LDR X21, [X20 + 0x440]
	0x03D5FCB8 LDR X22, [X22 + 0xE70]
	0x03D5FCBC ADD X20, X20, 0x440
	0x03D5FCC0 MOV X0, X21
	0x03D5FCC4 MOV X1, X19
	0x03D5FCC8 MOV X2, X31
	0x03D5FCCC BL 0x33C0DE4
	0x03D5FCD0 MOV X8, X0
	0x03D5FCD4 CBZ X0, 0x3D5FCE8
	0x03D5FCD8 LDR X1, [X22]
	0x03D5FCDC LDR X9, [X8]
	0x03D5FCE0 CMP X9, X1
	0x03D5FCE4 B.NE 0x3D5FD14
	0x03D5FCE8 MOV X0, X20
	0x03D5FCEC MOV X1, X8
	0x03D5FCF0 MOV X2, X21
	0x03D5FCF4 BL 0x1C24138
	0x03D5FCF8 CMP X21, X0
	0x03D5FCFC MOV X21, X0
	0x03D5FD00 B.NE 0x3D5FCC0
	0x03D5FD04 LDP X20, X19, [X31 + 0x20]
	0x03D5FD08 LDP X22, X21, [X31 + 0x10]
	0x03D5FD0C LDR X30, [X31], #0x30
	0x03D5FD10 RET
	0x03D5FD14 MOV X0, X8
	0x03D5FD18 BL 0x1C171E0
	0x03D5FD1C STR X30, [X31 - 0x30]!
	0x03D5FD20 STP X22, X21, [X31 + 0x10]
	0x03D5FD24 STP X20, X19, [X31 + 0x20]
	0x03D5FD28 ADRP X21, 0x688000
	0x03D5FD2C LDRB W8, [X21 + 0xC96]
	0x03D5FD30 MOV X19, X1
	0x03D5FD34 MOV X20, X0
	0x03D5FD38 TBNZ X8, 0x0, 0x3D5FD50
	0x03D5FD3C ADRP X0, 0x395000
	0x03D5FD40 LDR X0, [X0 + 0xE70]
	0x03D5FD44 BL 0x1C16CF4
	0x03D5FD48 MOVZ W8, 0x1
	0x03D5FD4C STRB W8, [X21 + 0xC96]
	0x03D5FD50 ADRP X22, 0x395000
	0x03D5FD54 LDR X21, [X20 + 0x440]
	0x03D5FD58 LDR X22, [X22 + 0xE70]
	0x03D5FD5C ADD X20, X20, 0x440
	0x03D5FD60 MOV X0, X21
	0x03D5FD64 MOV X1, X19
	0x03D5FD68 MOV X2, X31
	0x03D5FD6C BL 0x33C0FDC
	0x03D5FD70 MOV X8, X0
	0x03D5FD74 CBZ X0, 0x3D5FD88
	0x03D5FD78 LDR X1, [X22]
	0x03D5FD7C LDR X9, [X8]
	0x03D5FD80 CMP X9, X1
	0x03D5FD84 B.NE 0x3D5FDB4
	0x03D5FD88 MOV X0, X20
	0x03D5FD8C MOV X1, X8
	0x03D5FD90 MOV X2, X21
	0x03D5FD94 BL 0x1C24138
	0x03D5FD98 CMP X21, X0
	0x03D5FD9C MOV X21, X0
	0x03D5FDA0 B.NE 0x3D5FD60
	0x03D5FDA4 LDP X20, X19, [X31 + 0x20]
	0x03D5FDA8 LDP X22, X21, [X31 + 0x10]
	0x03D5FDAC LDR X30, [X31], #0x30
	0x03D5FDB0 RET
	0x03D5FDB4 MOV X0, X8
	0x03D5FDB8 BL 0x1C171E0
	0x03D5FDBC STR X30, [X31 - 0x60]!
	0x03D5FDC0 STP X28, X27, [X31 + 0x10]
	0x03D5FDC4 STP X26, X25, [X31 + 0x20]
	0x03D5FDC8 STP X24, X23, [X31 + 0x30]
	0x03D5FDCC STP X22, X21, [X31 + 0x40]
	0x03D5FDD0 STP X20, X19, [X31 + 0x50]
	0x03D5FDD4 ADRP X28, 0x688000
	0x03D5FDD8 ADRP X27, 0x407000
	0x03D5FDDC ADRP X23, 0x407000
	0x03D5FDE0 ADRP X26, 0x407000
	0x03D5FDE4 ADRP X25, 0x407000
	0x03D5FDE8 ADRP X24, 0x3BC000
	0x03D5FDEC LDRB W8, [X28 + 0xC97]
	0x03D5FDF0 LDR X27, [X27 + 0x628]
	0x03D5FDF4 LDR X23, [X23 + 0x630]
	0x03D5FDF8 LDR X26, [X26 + 0x638]
	0x03D5FDFC LDR X25, [X25 + 0x640]
	0x03D5FE00 LDR X24, [X24 + 0x898]
	0x03D5FE04 MOV X22, X3
	0x03D5FE08 MOV X21, X2
	0x03D5FE0C MOV X20, X1
	0x03D5FE10 MOV X19, X0
	0x03D5FE14 TBNZ X8, 0x0, 0x3D5FF70
	0x03D5FE18 ADRP X0, 0x407000
	0x03D5FE1C LDR X0, [X0 + 0x648]
	0x03D5FE20 BL 0x1C16CF4
	0x03D5FE24 ADRP X0, 0x407000
	0x03D5FE28 LDR X0, [X0 + 0x650]
	0x03D5FE2C BL 0x1C16CF4
	0x03D5FE30 ADRP X0, 0x407000
	0x03D5FE34 LDR X0, [X0 + 0x658]
	0x03D5FE38 BL 0x1C16CF4
	0x03D5FE3C ADRP X0, 0x407000
	0x03D5FE40 LDR X0, [X0 + 0x660]
	0x03D5FE44 BL 0x1C16CF4
	0x03D5FE48 ADRP X0, 0x407000
	0x03D5FE4C LDR X0, [X0 + 0x668]
	0x03D5FE50 BL 0x1C16CF4
	0x03D5FE54 ADRP X0, 0x395000
	0x03D5FE58 LDR X0, [X0 + 0xE70]
	0x03D5FE5C BL 0x1C16CF4
	0x03D5FE60 ADRP X0, 0x3BE000
	0x03D5FE64 LDR X0, [X0 + 0x658]
	0x03D5FE68 BL 0x1C16CF4
	0x03D5FE6C ADRP X0, 0x407000
	0x03D5FE70 LDR X0, [X0 + 0x670]
	0x03D5FE74 BL 0x1C16CF4
	0x03D5FE78 ADRP X0, 0x407000
	0x03D5FE7C LDR X0, [X0 + 0x678]
	0x03D5FE80 BL 0x1C16CF4
	0x03D5FE84 ADRP X0, 0x407000
	0x03D5FE88 LDR X0, [X0 + 0x640]
	0x03D5FE8C BL 0x1C16CF4
	0x03D5FE90 ADRP X0, 0x407000
	0x03D5FE94 LDR X0, [X0 + 0x638]
	0x03D5FE98 BL 0x1C16CF4
	0x03D5FE9C ADRP X0, 0x3BE000
	0x03D5FEA0 LDR X0, [X0 + 0x660]
	0x03D5FEA4 BL 0x1C16CF4
	0x03D5FEA8 ADRP X0, 0x394000
	0x03D5FEAC LDR X0, [X0 + 0xE00]
	0x03D5FEB0 BL 0x1C16CF4
	0x03D5FEB4 ADRP X0, 0x3BD000
	0x03D5FEB8 LDR X0, [X0 + 0x110]
	0x03D5FEBC BL 0x1C16CF4
	0x03D5FEC0 ADRP X0, 0x3BD000
	0x03D5FEC4 LDR X0, [X0 + 0x118]
	0x03D5FEC8 BL 0x1C16CF4
	0x03D5FECC ADRP X0, 0x394000
	0x03D5FED0 LDR X0, [X0 + 0xE18]
	0x03D5FED4 BL 0x1C16CF4
	0x03D5FED8 ADRP X0, 0x407000
	0x03D5FEDC LDR X0, [X0 + 0x630]
	0x03D5FEE0 BL 0x1C16CF4
	0x03D5FEE4 ADRP X0, 0x407000
	0x03D5FEE8 LDR X0, [X0 + 0x628]
	0x03D5FEEC BL 0x1C16CF4
	0x03D5FEF0 ADRP X0, 0x407000
	0x03D5FEF4 LDR X0, [X0 + 0x680]
	0x03D5FEF8 BL 0x1C16CF4
	0x03D5FEFC ADRP X0, 0x407000
	0x03D5FF00 LDR X0, [X0 + 0x688]
	0x03D5FF04 BL 0x1C16CF4
	0x03D5FF08 ADRP X0, 0x407000
	0x03D5FF0C LDR X0, [X0 + 0x690]
	0x03D5FF10 BL 0x1C16CF4
	0x03D5FF14 ADRP X0, 0x407000
	0x03D5FF18 LDR X0, [X0 + 0x698]
	0x03D5FF1C BL 0x1C16CF4
	0x03D5FF20 ADRP X0, 0x407000
	0x03D5FF24 LDR X0, [X0 + 0x6A0]
	0x03D5FF28 BL 0x1C16CF4
	0x03D5FF2C ADRP X0, 0x407000
	0x03D5FF30 LDR X0, [X0 + 0x6A8]
	0x03D5FF34 BL 0x1C16CF4
	0x03D5FF38 ADRP X0, 0x407000
	0x03D5FF3C LDR X0, [X0 + 0x6B0]
	0x03D5FF40 BL 0x1C16CF4
	0x03D5FF44 ADRP X0, 0x407000
	0x03D5FF48 LDR X0, [X0 + 0x6B8]
	0x03D5FF4C BL 0x1C16CF4
	0x03D5FF50 ADRP X0, 0x403000
	0x03D5FF54 LDR X0, [X0 + 0xC50]
	0x03D5FF58 BL 0x1C16CF4
	0x03D5FF5C ADRP X0, 0x3BC000
	0x03D5FF60 LDR X0, [X0 + 0x898]
	0x03D5FF64 BL 0x1C16CF4
	0x03D5FF68 MOVZ W8, 0x1
	0x03D5FF6C STRB W8, [X28 + 0xC97]
	0x03D5FF70 LDR X0, [X27]
	0x03D5FF74 ADRP X27, 0x403000
	0x03D5FF78 LDR X27, [X27 + 0xC50]
	0x03D5FF7C BL 0x1C16F10
	0x03D5FF80 LDR X1, [X23]
	0x03D5FF84 MOV X23, X0
	0x03D5FF88 BL 0x3110C58
	0x03D5FF8C STR X23, [X19 + 0x3E0]
	0x03D5FF90 LDR X0, [X26]
	0x03D5FF94 BL 0x1C16F10
	0x03D5FF98 LDR X1, [X25]
	0x03D5FF9C MOV X23, X0
	0x03D5FFA0 BL 0x2AA4804
	0x03D5FFA4 STR X23, [X19 + 0x400]
	0x03D5FFA8 LDR X0, [X24]
	0x03D5FFAC LDR W8, [X0 + 0xE0]
	0x03D5FFB0 CBNZ W8, 0x3D5FFB8
	0x03D5FFB4 BL 0x1C16DFC
	0x03D5FFB8 MOV X0, X19
	0x03D5FFBC MOV X1, X31
	0x03D5FFC0 BL 0x3DEF578
	0x03D5FFC4 LDR X0, [X27]
	0x03D5FFC8 LDR W8, [X0 + 0xE0]
	0x03D5FFCC CBNZ W8, 0x3D5FFD8
	0x03D5FFD0 BL 0x1C16DFC
	0x03D5FFD4 LDR X0, [X27]
	0x03D5FFD8 LDR X8, [X0 + 0xB8]
	0x03D5FFDC MOV X0, X19
	0x03D5FFE0 MOV X2, X31
	0x03D5FFE4 LDR X1, [X8]
	0x03D5FFE8 BL 0x3DF1C70
	0x03D5FFEC MOV X0, X19
	0x03D5FFF0 MOV X1, X21
	0x03D5FFF4 STR X20, [X19 + 0x420]
	0x03D5FFF8 STR X22, [X19 + 0x3D0]
	0x03D5FFFC BL 0x3D5EA20
	0x03D60000 LDR X0, [X24]
	0x03D60004 BL 0x1C16F10
	0x03D60008 MOV X1, X31
	0x03D6000C MOV X21, X0
	0x03D60010 BL 0x3DEF578
	0x03D60014 CBZ X21, 0x3D604E0
	0x03D60018 MOVZ W1, 0x1
	0x03D6001C MOV X0, X21
	0x03D60020 MOV X2, X31
	0x03D60024 BL 0x3DEF238
	0x03D60028 STR X21, [X19 + 0x410]
	0x03D6002C LDR X8, [X27]
	0x03D60030 MOV X0, X21
	0x03D60034 MOV X2, X31
	0x03D60038 LDR X8, [X8 + 0xB8]
	0x03D6003C LDR X1, [X8 + 0x8]
	0x03D60040 BL 0x3DF1C70
	0x03D60044 LDR X1, [X19 + 0x410]
	0x03D60048 MOV X0, X19
	0x03D6004C MOV X2, X31
	0x03D60050 BL 0x3DF60E8
	0x03D60054 LDR X0, [X24]
	0x03D60058 BL 0x1C16F10
	0x03D6005C MOV X1, X31
	0x03D60060 MOV X21, X0
	0x03D60064 BL 0x3DEF578
	0x03D60068 CBZ X21, 0x3D604E0
	0x03D6006C ADRP X22, 0x406000
	0x03D60070 ADRP X23, 0x394000
	0x03D60074 ADRP X24, 0x406000
	0x03D60078 LDR X22, [X22 + 0x670]
	0x03D6007C LDR X23, [X23 + 0xE70]
	0x03D60080 LDR X24, [X24 + 0x6B8]
	0x03D60084 MOVZ W1, 0x1
	0x03D60088 MOV X0, X21
	0x03D6008C MOV X2, X31
	0x03D60090 BL 0x3DEF238
	0x03D60094 STR X21, [X19 + 0x418]
	0x03D60098 LDR X8, [X27]
	0x03D6009C MOV X0, X21
	0x03D600A0 MOV X2, X31
	0x03D600A4 LDR X8, [X8 + 0xB8]
	0x03D600A8 LDR X1, [X8 + 0x10]
	0x03D600AC BL 0x3DF1C70
	0x03D600B0 LDR X0, [X19 + 0x418]
	0x03D600B4 MOV X1, X31
	0x03D600B8 BL 0x3D16764
	0x03D600BC LDR X1, [X19 + 0x418]
	0x03D600C0 MOV X0, X19
	0x03D600C4 MOV X2, X31
	0x03D600C8 BL 0x3DF60E8
	0x03D600CC LDR X0, [X22]
	0x03D600D0 BL 0x1C16F10
	0x03D600D4 MOV X1, X20
	0x03D600D8 MOV X2, X31
	0x03D600DC MOV X21, X0
	0x03D600E0 BL 0x3D705F8
	0x03D600E4 STR X21, [X19 + 0x408]
	0x03D600E8 LDR X0, [X23]
	0x03D600EC BL 0x1C16F10
	0x03D600F0 LDR X2, [X24]
	0x03D600F4 MOV X1, X19
	0x03D600F8 MOV X3, X31
	0x03D600FC MOV X22, X0
	0x03D60100 BL 0x3314368
	0x03D60104 CBZ X21, 0x3D604E0
	0x03D60108 MOV X0, X21
	0x03D6010C MOV X1, X22
	0x03D60110 MOV X2, X31
	0x03D60114 BL 0x3D704C0
	0x03D60118 CBZ X20, 0x3D604E0
	0x03D6011C MOV X0, X20
	0x03D60120 MOV X1, X31
	0x03D60124 BL 0x3D6F8DC
	0x03D60128 CBZ X0, 0x3D604E0
	0x03D6012C ADRP X10, 0x3BC000
	0x03D60130 LDR X8, [X0]
	0x03D60134 LDR X10, [X10 + 0x110]
	0x03D60138 MOV X20, X0
	0x03D6013C LDRH W9, [X8 + 0x12E]
	0x03D60140 LDR X1, [X10]
	0x03D60144 CBZ X9, 0x3D60168
	0x03D60148 LDR X10, [X8 + 0xB0]
	0x03D6014C ADD X10, X10, 0x8
	0x03D60150 LDUR X11, [X10 - 0x8]
	0x03D60154 CMP X11, X1
	0x03D60158 B.EQ 0x3D60178
	0x03D6015C SUBS X9, X9, 0x1
	0x03D60160 ADD X10, X10, 0x10
	0x03D60164 B.NE 0x3D60150
	0x03D60168 MOV X0, X20
	0x03D6016C MOV W2, W31
	0x03D60170 BL 0x1C5C788
	0x03D60174 B 0x3D60184
	0x03D60178 LDRSW X9, [X10]
	0x03D6017C ADD X8, X8, X9, 0x4, LSL
	0x03D60180 ADD X0, X8, 0x138
	0x03D60184 LDP X8, X1, [X0]
	0x03D60188 ADRP X23, 0x393000
	0x03D6018C LDR X23, [X23 + 0xE00]
	0x03D60190 MOV X0, X20
	0x03D60194 BLR X8
	0x03D60198 MOV X20, X0
	0x03D6019C CBZ X0, 0x3D604E4
	0x03D601A0 ADRP X21, 0x393000
	0x03D601A4 ADRP X22, 0x3BC000
	0x03D601A8 LDR X21, [X21 + 0xE18]
	0x03D601AC LDR X22, [X22 + 0x118]
	0x03D601B0 LDR X8, [X20]
	0x03D601B4 LDR X1, [X21]
	0x03D601B8 LDRH W9, [X8 + 0x12E]
	0x03D601BC CBZ X9, 0x3D601E0
	0x03D601C0 LDR X10, [X8 + 0xB0]
	0x03D601C4 ADD X10, X10, 0x8

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+96], X24
	004 Move [X31+104], X23
	005 Move [X31+112], X22
	006 Move [X31+120], X21
	007 Move [X31+128], X20
	008 Move [X31+136], X19
	009 Move X20, 0x689000
	010 Move W8, [X20+3225]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {63}
	016 Move X0, 0x408000
	017 Move X0, [X0+1456]
	018 Call 0x1C17CF4
	019 Move X0, 0x408000
	020 Move X0, [X0+1464]
	021 Call 0x1C17CF4
	022 Move X0, 0x408000
	023 Move X0, [X0+1472]
	024 Call 0x1C17CF4
	025 Move X0, 0x408000
	026 Move X0, [X0+1480]
	027 Call 0x1C17CF4
	028 Move X0, 0x408000
	029 Move X0, [X0+1488]
	030 Call 0x1C17CF4
	031 Move X0, 0x408000
	032 Move X0, [X0+1496]
	033 Call 0x1C17CF4
	034 Move X0, 0x395000
	035 Move X0, [X0+3584]
	036 Call 0x1C17CF4
	037 Move X0, 0x408000
	038 Move X0, [X0+1504]
	039 Call 0x1C17CF4
	040 Move X0, 0x395000
	041 Move X0, [X0+3608]
	042 Call 0x1C17CF4
	043 Move X0, 0x408000
	044 Move X0, [X0+1512]
	045 Call 0x1C17CF4
	046 Move X0, 0x408000
	047 Move X0, [X0+1520]
	048 Call 0x1C17CF4
	049 Move X0, 0x408000
	050 Move X0, [X0+1528]
	051 Call 0x1C17CF4
	052 Move X0, 0x408000
	053 Move X0, [X0+1536]
	054 Call 0x1C17CF4
	055 Move X0, 0x408000
	056 Move X0, [X0+1544]
	057 Call 0x1C17CF4
	058 Move X0, 0x408000
	059 Move X0, [X0+1552]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X20+3225], W8
	063 NotImplemented "Instruction MOVI not yet implemented."
	064 Move [X31+88], X31
	065 Move [X31+64], X31
	066 Move [X31+72], X31
	067 Move [X31+32], V0
	068 Move [X31+40], V0
	069 Move W8, [X19+1000]
	070 Compare W8, 0
	071 JumpIfNotEqual {344}
	072 Move X8, 0x408000
	073 Move X8, [X8+1464]
	074 Move X0, [X8]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X8, 0x408000
	080 Move X8, [X8+1456]
	081 Add X0, X31, 88
	082 Move X1, [X8]
	083 Call CollectionPool`2<Object, SortedColumnState>.Get, X0
	084 Move [X31+64], X0
	085 Move [X31+72], X1
	086 Move W8, [X19+968]
	087 Compare W8, 0
	088 JumpIfEqual {236}
	089 Move X0, [X19+984]
	090 Compare X0, 0
	091 JumpIfEqual {360}
	092 Move X1, X31
	093 Call SortColumnDescriptions.GetEnumerator, X0
	094 Move X20, X0
	095 Compare X0, 0
	096 JumpIfEqual {361}
	097 Move X22, 0x395000
	098 Move X23, 0x408000
	099 Move X24, 0x408000
	100 Move X22, [X22+3608]
	101 Move X23, [X23+1504]
	102 Move X24, [X24+1520]
	103 Move X8, [X20]
	104 Move X1, [X22]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Compare X9, 0
	107 JumpIfEqual {114}
	108 Move X10, [X8+176]
	109 Add X10, X10, 8
	110 NotImplemented "Instruction LDUR not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Subtract X9, X9, 1
	113 Add X10, X10, 16
	114 Move X0, X20
	115 Move W2, W31
	116 Call 0x1C5D788
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 Add X8, X8, X9
	119 Add X0, X8, 312
	120 Move X8, [X0]
	121 Move X1, [X0+8]
	122 Move X0, X20
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {204}
	128 Move X8, [X20]
	129 Move X1, [X23]
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move X0, X20
	140 Move W2, W31
	141 Call 0x1C5D788
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Add X8, X8, X9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X20
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X21, X0
	150 Compare X0, 0
	151 JumpIfEqual {353}
	152 Move W1, [X21+16]
	153 Add W31, W1, 1
	154 Move X0, [X19+1056]
	155 Compare X0, 0
	156 JumpIfEqual {356}
	157 Move X2, X31
	158 Call Columns.get_Item, X0, X1
	159 Move X0, [X21+24]
	160 Move X1, X31
	161 Call String.IsNullOrEmpty, X0
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {198}
	166 Move X0, [X19+1056]
	167 Compare X0, 0
	168 JumpIfEqual {359}
	169 Move X1, [X21+24]
	170 Move X2, X31
	171 Call Columns.get_Item, X0, X1
	172 Move X8, X0
	173 Compare X0, 0
	174 JumpIfEqual {198}
	175 Move W9, [X8+97]
	176 Compare W9, 0
	177 JumpIfEqual {198}
	178 Move [X21+40], X8
	179 Move X0, [X31+88]
	180 Compare X0, 0
	181 JumpIfEqual {358}
	182 Move W10, [X0+28]
	183 Move W2, [X21+32]
	184 Move X8, [X0+16]
	185 Move X9, [X24]
	186 Add W10, W10, 1
	187 Move [X0+28], W10
	188 Compare X8, 0
	189 JumpIfEqual {357}
	190 NotImplemented "Instruction LDRSW not yet implemented."
	191 Move W11, [X8+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Add W9, W10, 1
	194 Add X8, X8, X10
	195 Move [X0+24], W9
	196 Move [X8+32], X21
	197 Move [X8+40], X2
	198 Move [X21+40], X31
	199 Move X8, [X9+32]
	200 Move X8, [X8+192]
	201 Move X3, [X8+112]
	202 Move X1, X21
	203 Call List`1<SortedColumnState>.AddWithResize, X0, X1
	204 Move X21, X31
	205 Move W22, 13
	206 Compare X20, 0
	207 JumpIfEqual {231}
	208 Move X10, 0x395000
	209 Move X8, [X20]
	210 Move X10, [X10+3584]
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Move X1, [X10]
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move X0, X20
	222 Move W2, W31
	223 Call 0x1C5D788
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Add X8, X8, X9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X1, [X0+8]
	229 Move X0, X20
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Compare X21, 0
	232 JumpIfNotEqual {362}
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Compare W22, 0
	235 JumpIfNotEqual {332}
	236 Move X8, 0x408000
	237 Move X0, [X19+992]
	238 Move X1, [X31+88]
	239 Move X8, [X8+1472]
	240 Move X2, [X8]
	241 Call Enumerable.SequenceEqual, X0, X1
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfNotEqual {251}
	246 Move X8, 0x408000
	247 Move X8, [X8+1544]
	248 Add X0, X31, 64
	249 Move X1, [X8]
	250 Call 0x24A7D20, X0
	251 Move X8, [X19+976]
	252 Compare X8, 0
	253 JumpIfEqual {364}
	254 Move W2, [X8+24]
	255 Move W9, [X8+28]
	256 Add W9, W9, 1
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move [X8+24], W31
	259 Move [X8+28], W9
	260 Move X0, [X8+16]
	261 Move W1, W31
	262 Move X3, X31
	263 Call Array.Clear, X0, X1, X2
	264 Move X0, [X31+88]
	265 Compare X0, 0
	266 JumpIfEqual {365}
	267 Move X8, 0x408000
	268 Move X8, [X8+1536]
	269 Move X1, [X8]
	270 Add X8, X31, 0
	271 Call List`1<SortedColumnState>.GetEnumerator, X0
	272 Move V0, [X31]
	273 Move V1, [X31+16]
	274 Move X20, 0x408000
	275 Move X20, [X20+1488]
	276 Move X21, 0x408000
	277 Move [X31+32], V0
	278 Move [X31+40], V1
	279 Move X21, [X21+1512]
	280 Move X1, [X20]
	281 Add X0, X31, 32
	282 Call Enumerator<SortedColumnState>.MoveNext, X0
	283 Move TEMP, X0
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfNotEqual {309}
	287 Move X0, [X19+976]
	288 Compare X0, 0
	289 JumpIfEqual {354}
	290 Move W10, [X0+28]
	291 Move X1, [X31+48]
	292 Move X8, [X0+16]
	293 Move X9, [X21]
	294 Add W10, W10, 1
	295 Move [X0+28], W10
	296 Compare X8, 0
	297 JumpIfEqual {355}
	298 NotImplemented "Instruction LDRSW not yet implemented."
	299 Move W11, [X8+24]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Add W9, W10, 1
	302 Add X8, X8, X10
	303 Move [X0+24], W9
	304 Move [X8+32], X1
	305 Move X8, [X9+32]
	306 Move X8, [X8+192]
	307 Move X2, [X8+112]
	308 Call List`1<Object>.AddWithResize, X0, X1
	309 Move X20, X31
	310 Move W22, 17
	311 Move X8, 0x408000
	312 Move X8, [X8+1480]
	313 Move X1, [X8]
	314 Add X0, X31, 32
	315 Call Enumerator<SortedColumnState>.Dispose, X0
	316 Compare X20, 0
	317 JumpIfNotEqual {366}
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Compare W22, 0
	320 JumpIfNotEqual {332}
	321 Move X8, 0x408000
	322 Move X0, [X19+992]
	323 Move X1, [X31+88]
	324 Move X8, [X8+1552]
	325 Move X2, [X8]
	326 Call StyleValueExtensions.CopyFrom, X0, X1
	327 Move X8, 0x408000
	328 Move X8, [X8+1544]
	329 Add X0, X31, 64
	330 Move X1, [X8]
	331 Call 0x24A7D20, X0
	332 Move X8, 0x408000
	333 Move X8, [X8+1544]
	334 Add X0, X31, 64
	335 Move X1, [X8]
	336 Call 0x24A7D20, X0
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Compare W22, 0
	339 JumpIfNotEqual {344}
	340 Move X0, X19
	341 Call MultiColumnCollectionHeader.SaveViewState, X0
	342 Move X0, X19
	343 Call MultiColumnCollectionHeader.RaiseColumnSortingChanged, X0
	344 Move X20, [X31+128]
	345 Move X19, [X31+136]
	346 Move X22, [X31+112]
	347 Move X21, [X31+120]
	348 Move X24, [X31+96]
	349 Move X23, [X31+104]
	350 Move X30, [X31+80]
	351 Add X31, X31, 144
	352 Return 
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X0, X21
	363 Call 0x1C17F18
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Move X0, X20
	367 Call 0x1C17F18
	368 Move X22, X1
	369 Move X23, X0
	370 Move X22, X1
	371 Move X23, X0
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Move X0, X23
	374 Call 0x3EB2AD0
	375 Move X20, [X0]
	376 Call 0x3EB2AE0
	377 Move W22, W31
	378 Move X20, X31
	379 Move X8, 0x407000
	380 Move X8, [X8+1480]
	381 Move X1, [X8]
	382 Add X0, X31, 32
	383 Call Enumerator<SortedColumnState>.Dispose, X0
	384 Compare X20, 0
	385 JumpIfEqual {428}
	386 Move X0, X20
	387 Call 0x1C17F18
	388 Move X22, X1
	389 Move X23, X0
	390 Move X22, X1
	391 Move X23, X0
	392 NotImplemented "Instruction CMP not yet implemented."
	393 Move X0, X23
	394 Call 0x3EB2AD0
	395 Move X21, [X0]
	396 Call 0x3EB2AE0
	397 Move W22, W31
	398 Compare X20, 0
	399 JumpIfNotEqual {208}
	400 Move X21, X31
	401 Compare X20, 0
	402 JumpIfEqual {426}
	403 Move X10, 0x394000
	404 Move X8, [X20]
	405 Move X10, [X10+3584]
	406 NotImplemented "Instruction LDRH not yet implemented."
	407 Move X1, [X10]
	408 Compare X9, 0
	409 JumpIfEqual {416}
	410 Move X10, [X8+176]
	411 Add X10, X10, 8
	412 NotImplemented "Instruction LDUR not yet implemented."
	413 NotImplemented "Instruction CMP not yet implemented."
	414 Subtract X9, X9, 1
	415 Add X10, X10, 16
	416 Move X0, X20
	417 Move W2, W31
	418 Call 0x1C5D788
	419 NotImplemented "Instruction LDRSW not yet implemented."
	420 Add X8, X8, X9
	421 Add X0, X8, 312
	422 Move X8, [X0]
	423 Move X1, [X0+8]
	424 Move X0, X20
	425 NotImplemented "Instruction BLR not yet implemented."
	426 Compare X21, 0
	427 JumpIfNotEqual {443}
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Move X0, X23
	430 Call 0x3EB2AD0
	431 Move X20, [X0]
	432 Call 0x3EB2AE0
	433 Move X8, 0x407000
	434 Move X8, [X8+1544]
	435 Add X0, X31, 64
	436 Move X1, [X8]
	437 Call 0x24A7D20, X0
	438 Compare X20, 0
	439 JumpIfEqual {340}
	440 Move X0, X20
	441 Call 0x1C17F18
	442 Move X20, X31
	443 Move X0, X21
	444 Call 0x1C17F18
	445 Move X22, X1
	446 Move X23, X0
	447 Compare X20, 0
	448 JumpIfNotEqual {403}
	449 Move X23, X0
	450 Move X8, 0x407000
	451 Move X8, [X8+1544]
	452 Move X1, [X8]
	453 Add X0, X31, 64
	454 Call 0x24A7D20, X0
	455 Compare X20, 0
	456 JumpIfNotEqual {459}
	457 Move X0, X23
	458 Call 0x1D2D690
	459 Move X0, X20
	460 Call 0x1C17F18
	461 Call 0x1991590

Method: System.Void UpdateColumnControls()

Disassembly:
	0x03D61A60 MOV X2, X31
	0x03D61A64 LDR X8, [X8 + 0xB8]
	0x03D61A68 LDR X1, [X8 + 0x8]
	0x03D61A6C BL 0x3DF1C70
	0x03D61A70 LDR X1, [X19 + 0x3C8]
	0x03D61A74 MOV X0, X19
	0x03D61A78 LDP X20, X19, [X31 + 0x10]
	0x03D61A7C MOV X2, X31
	0x03D61A80 LDP X30, X21, [X31], #0x20
	0x03D61A84 B 0x3DF60E8
	0x03D61A88 BL 0x1C16F20
	0x03D61A8C MOV X1, X31
	0x03D61A90 B 0x33BDD8C
	0x03D61A94 STP X30, X23, [X31 - 0x30]!
	0x03D61A98 STP X22, X21, [X31 + 0x10]
	0x03D61A9C STP X20, X19, [X31 + 0x20]
	0x03D61AA0 ADRP X21, 0x686000
	0x03D61AA4 LDRB W8, [X21 + 0xC9C]
	0x03D61AA8 MOV X20, X1
	0x03D61AAC MOV X19, X0
	0x03D61AB0 TBNZ X8, 0x0, 0x3D61B34
	0x03D61AB4 ADRP X0, 0x401000
	0x03D61AB8 LDR X0, [X0 + 0x948]
	0x03D61ABC BL 0x1C16CF4
	0x03D61AC0 ADRP X0, 0x405000
	0x03D61AC4 LDR X0, [X0 + 0x4F8]
	0x03D61AC8 BL 0x1C16CF4
	0x03D61ACC ADRP X0, 0x3BC000
	0x03D61AD0 LDR X0, [X0 + 0x698]
	0x03D61AD4 BL 0x1C16CF4
	0x03D61AD8 ADRP X0, 0x405000
	0x03D61ADC LDR X0, [X0 + 0x6D0]
	0x03D61AE0 BL 0x1C16CF4
	0x03D61AE4 ADRP X0, 0x405000
	0x03D61AE8 LDR X0, [X0 + 0x720]
	0x03D61AEC BL 0x1C16CF4
	0x03D61AF0 ADRP X0, 0x405000
	0x03D61AF4 LDR X0, [X0 + 0x728]
	0x03D61AF8 BL 0x1C16CF4
	0x03D61AFC ADRP X0, 0x3BC000
	0x03D61B00 LDR X0, [X0 + 0x660]
	0x03D61B04 BL 0x1C16CF4
	0x03D61B08 ADRP X0, 0x405000
	0x03D61B0C LDR X0, [X0 + 0x6E0]
	0x03D61B10 BL 0x1C16CF4
	0x03D61B14 ADRP X0, 0x405000
	0x03D61B18 LDR X0, [X0 + 0x6E8]
	0x03D61B1C BL 0x1C16CF4
	0x03D61B20 ADRP X0, 0x405000
	0x03D61B24 LDR X0, [X0 + 0x6F0]
	0x03D61B28 BL 0x1C16CF4
	0x03D61B2C MOVZ W8, 0x1
	0x03D61B30 STRB W8, [X21 + 0xC9C]
	0x03D61B34 LDR X0, [X19 + 0x400]
	0x03D61B38 CBZ X0, 0x3D61CC4
	0x03D61B3C ADRP X8, 0x405000
	0x03D61B40 LDR X8, [X8 + 0x6D0]
	0x03D61B44 MOV X1, X20
	0x03D61B48 LDR X2, [X8]
	0x03D61B4C BL 0x2AA528C
	0x03D61B50 TBZ X0, 0x0, 0x3D61CB4
	0x03D61B54 LDR X0, [X19 + 0x400]
	0x03D61B58 CBZ X0, 0x3D61CC4
	0x03D61B5C ADRP X8, 0x405000
	0x03D61B60 LDR X8, [X8 + 0x728]
	0x03D61B64 MOV X1, X20
	0x03D61B68 LDR X2, [X8]
	0x03D61B6C BL 0x2AA5018
	0x03D61B70 CBZ X0, 0x3D61CC4
	0x03D61B74 ADRP X8, 0x3BC000
	0x03D61B78 LDR X22, [X0 + 0x10]
	0x03D61B7C LDR X8, [X8 + 0x660]
	0x03D61B80 MOV X21, X0
	0x03D61B84 LDR X0, [X8]
	0x03D61B88 BL 0x1C16F10
	0x03D61B8C ADRP X8, 0x405000
	0x03D61B90 LDR X8, [X8 + 0x6E8]
	0x03D61B94 MOV X1, X19
	0x03D61B98 MOV X3, X31
	0x03D61B9C MOV X23, X0
	0x03D61BA0 LDR X2, [X8]
	0x03D61BA4 BL 0x2D0E824
	0x03D61BA8 CBZ X22, 0x3D61CC4
	0x03D61BAC ADRP X8, 0x3BC000
	0x03D61BB0 LDR X8, [X8 + 0x698]
	0x03D61BB4 MOV X0, X22
	0x03D61BB8 MOV X1, X23
	0x03D61BBC MOV W2, W31
	0x03D61BC0 LDR X3, [X8]
	0x03D61BC4 BL 0x21A18B4
	0x03D61BC8 LDR X8, [X21 + 0x10]
	0x03D61BCC CBZ X8, 0x3D61CC4
	0x03D61BD0 LDR X22, [X8 + 0x3E8]
	0x03D61BD4 ADRP X8, 0x401000
	0x03D61BD8 LDR X8, [X8 + 0x948]
	0x03D61BDC LDR X0, [X8]
	0x03D61BE0 BL 0x1C16F10
	0x03D61BE4 ADRP X8, 0x405000
	0x03D61BE8 LDR X8, [X8 + 0x6E0]
	0x03D61BEC MOV X1, X19
	0x03D61BF0 MOV X3, X31
	0x03D61BF4 MOV X23, X0
	0x03D61BF8 LDR X2, [X8]
	0x03D61BFC BL 0x2A6B948
	0x03D61C00 CBZ X22, 0x3D61CC4
	0x03D61C04 MOV X0, X22
	0x03D61C08 MOV X1, X23
	0x03D61C0C MOV X2, X31
	0x03D61C10 BL 0x3CECD08
	0x03D61C14 LDR X8, [X21 + 0x10]
	0x03D61C18 CBZ X8, 0x3D61CC4
	0x03D61C1C LDR X22, [X8 + 0x3F0]
	0x03D61C20 ADRP X8, 0x405000
	0x03D61C24 LDR X8, [X8 + 0x4F8]
	0x03D61C28 LDR X0, [X8]
	0x03D61C2C BL 0x1C16F10
	0x03D61C30 ADRP X8, 0x405000
	0x03D61C34 LDR X8, [X8 + 0x6F0]
	0x03D61C38 MOV X1, X19
	0x03D61C3C MOV X3, X31
	0x03D61C40 MOV X23, X0
	0x03D61C44 LDR X2, [X8]
	0x03D61C48 BL 0x2A6B948
	0x03D61C4C CBZ X22, 0x3D61CC4
	0x03D61C50 MOV X0, X22
	0x03D61C54 MOV X1, X23
	0x03D61C58 BL 0x3D5B6B0
	0x03D61C5C LDR X0, [X21 + 0x10]
	0x03D61C60 CBZ X0, 0x3D61CC4
	0x03D61C64 MOV X1, X31
	0x03D61C68 BL 0x3DF6948
	0x03D61C6C LDR X0, [X21 + 0x18]
	0x03D61C70 CBZ X0, 0x3D61CC4
	0x03D61C74 MOV X1, X31
	0x03D61C78 BL 0x3DF6948
	0x03D61C7C LDR X0, [X19 + 0x400]
	0x03D61C80 CBZ X0, 0x3D61CC4
	0x03D61C84 ADRP X8, 0x405000
	0x03D61C88 LDR X8, [X8 + 0x720]
	0x03D61C8C MOV X1, X20
	0x03D61C90 LDR X2, [X8]
	0x03D61C94 BL 0x2AA64F8
	0x03D61C98 MOV X0, X19
	0x03D61C9C BL 0x3D60A60
	0x03D61CA0 MOV X0, X19
	0x03D61CA4 LDP X20, X19, [X31 + 0x20]
	0x03D61CA8 LDP X22, X21, [X31 + 0x10]
	0x03D61CAC LDP X30, X23, [X31], #0x30
	0x03D61CB0 B 0x3D609F0
	0x03D61CB4 LDP X20, X19, [X31 + 0x20]
	0x03D61CB8 LDP X22, X21, [X31 + 0x10]
	0x03D61CBC LDP X30, X23, [X31], #0x30
	0x03D61CC0 RET
	0x03D61CC4 BL 0x1C16F20
	0x03D61CC8 STP X30, X19, [X31 - 0x10]!
	0x03D61CCC CMP W2, 0x3
	0x03D61CD0 MOV X19, X0
	0x03D61CD4 B.NE 0x3D61CF0
	0x03D61CD8 CBZ X1, 0x3D61D20
	0x03D61CDC LDRB W8, [X1 + 0x40]
	0x03D61CE0 CBZ W8, 0x3D61CFC
	0x03D61CE4 MOV X0, X19
	0x03D61CE8 BL 0x3D6059C
	0x03D61CEC B 0x3D61D04
	0x03D61CF0 MOV X0, X19
	0x03D61CF4 LDP X30, X19, [X31], #0x10
	0x03D61CF8 B 0x3D60A60
	0x03D61CFC MOV X0, X19
	0x03D61D00 BL 0x3D61A94
	0x03D61D04 MOV X0, X19
	0x03D61D08 BL 0x3D61D24
	0x03D61D0C MOV X0, X19
	0x03D61D10 BL 0x3D60A60
	0x03D61D14 MOV X0, X19
	0x03D61D18 LDP X30, X19, [X31], #0x10
	0x03D61D1C B 0x3D609F0
	0x03D61D20 BL 0x1C16F20
	0x03D61D24 SUB X31, X31, 0x80
	0x03D61D28 STR X30, [X31 + 0x20]
	0x03D61D2C STP X28, X27, [X31 + 0x30]
	0x03D61D30 STP X26, X25, [X31 + 0x40]
	0x03D61D34 STP X24, X23, [X31 + 0x50]
	0x03D61D38 STP X22, X21, [X31 + 0x60]
	0x03D61D3C STP X20, X19, [X31 + 0x70]
	0x03D61D40 ADRP X20, 0x686000
	0x03D61D44 LDRB W8, [X20 + 0xCA5]
	0x03D61D48 MOV X19, X0
	0x03D61D4C TBNZ X8, 0x0, 0x3D61E00
	0x03D61D50 ADRP X0, 0x3BB000
	0x03D61D54 LDR X0, [X0 + 0x108]
	0x03D61D58 BL 0x1C16CF4
	0x03D61D5C ADRP X0, 0x392000
	0x03D61D60 LDR X0, [X0 + 0xE00]
	0x03D61D64 BL 0x1C16CF4
	0x03D61D68 ADRP X0, 0x405000
	0x03D61D6C LDR X0, [X0 + 0x730]
	0x03D61D70 BL 0x1C16CF4
	0x03D61D74 ADRP X0, 0x3BB000
	0x03D61D78 LDR X0, [X0 + 0x110]
	0x03D61D7C BL 0x1C16CF4
	0x03D61D80 ADRP X0, 0x405000
	0x03D61D84 LDR X0, [X0 + 0x5E0]
	0x03D61D88 BL 0x1C16CF4
	0x03D61D8C ADRP X0, 0x3BB000
	0x03D61D90 LDR X0, [X0 + 0x118]
	0x03D61D94 BL 0x1C16CF4
	0x03D61D98 ADRP X0, 0x392000
	0x03D61D9C LDR X0, [X0 + 0xE18]
	0x03D61DA0 BL 0x1C16CF4
	0x03D61DA4 ADRP X0, 0x405000
	0x03D61DA8 LDR X0, [X0 + 0x738]
	0x03D61DAC BL 0x1C16CF4
	0x03D61DB0 ADRP X0, 0x405000
	0x03D61DB4 LDR X0, [X0 + 0x740]
	0x03D61DB8 BL 0x1C16CF4
	0x03D61DBC ADRP X0, 0x405000
	0x03D61DC0 LDR X0, [X0 + 0x748]
	0x03D61DC4 BL 0x1C16CF4
	0x03D61DC8 ADRP X0, 0x405000
	0x03D61DCC LDR X0, [X0 + 0x750]
	0x03D61DD0 BL 0x1C16CF4
	0x03D61DD4 ADRP X0, 0x405000
	0x03D61DD8 LDR X0, [X0 + 0x758]
	0x03D61DDC BL 0x1C16CF4
	0x03D61DE0 ADRP X0, 0x405000
	0x03D61DE4 LDR X0, [X0 + 0x4D0]
	0x03D61DE8 BL 0x1C16CF4
	0x03D61DEC ADRP X0, 0x392000
	0x03D61DF0 LDR X0, [X0 + 0x988]
	0x03D61DF4 BL 0x1C16CF4
	0x03D61DF8 MOVZ W8, 0x1
	0x03D61DFC STRB W8, [X20 + 0xCA5]
	0x03D61E00 STR X31, [X31 + 0x28]
	0x03D61E04 STR X31, [X31 + 0x18]
	0x03D61E08 STR W31, [X31 + 0x14]
	0x03D61E0C LDR X0, [X19 + 0x420]
	0x03D61E10 CBZ X0, 0x3D623E4
	0x03D61E14 MOV X1, X31
	0x03D61E18 BL 0x3D6F8DC
	0x03D61E1C CBZ X0, 0x3D623E4
	0x03D61E20 ADRP X10, 0x3BB000
	0x03D61E24 LDR X8, [X0]
	0x03D61E28 LDR X10, [X10 + 0x110]
	0x03D61E2C MOV X20, X0
	0x03D61E30 LDRH W9, [X8 + 0x12E]
	0x03D61E34 LDR X1, [X10]
	0x03D61E38 CBZ X9, 0x3D61E5C
	0x03D61E3C LDR X10, [X8 + 0xB0]
	0x03D61E40 ADD X10, X10, 0x8
	0x03D61E44 LDUR X11, [X10 - 0x8]
	0x03D61E48 CMP X11, X1
	0x03D61E4C B.EQ 0x3D61E6C
	0x03D61E50 SUBS X9, X9, 0x1
	0x03D61E54 ADD X10, X10, 0x10
	0x03D61E58 B.NE 0x3D61E44
	0x03D61E5C MOV X0, X20
	0x03D61E60 MOV W2, W31
	0x03D61E64 BL 0x1C5C788
	0x03D61E68 B 0x3D61E78
	0x03D61E6C LDRSW X9, [X10]
	0x03D61E70 ADD X8, X8, X9, 0x4, LSL
	0x03D61E74 ADD X0, X8, 0x138
	0x03D61E78 LDP X8, X1, [X0]
	0x03D61E7C ADRP X23, 0x392000
	0x03D61E80 LDR X23, [X23 + 0xE00]
	0x03D61E84 MOV X0, X20
	0x03D61E88 BLR X8
	0x03D61E8C MOV X20, X0
	0x03D61E90 CBZ X0, 0x3D62418
	0x03D61E94 ADRP X22, 0x392000
	0x03D61E98 ADRP X24, 0x3BB000
	0x03D61E9C ADRP X25, 0x3BB000
	0x03D61EA0 ADRP X26, 0x392000
	0x03D61EA4 ADRP X27, 0x405000
	0x03D61EA8 LDR X22, [X22 + 0xE18]
	0x03D61EAC LDR X24, [X24 + 0x118]
	0x03D61EB0 LDR X25, [X25 + 0x108]
	0x03D61EB4 LDR X26, [X26 + 0x988]
	0x03D61EB8 LDR X27, [X27 + 0x4D0]
	0x03D61EBC LDR X8, [X20]
	0x03D61EC0 LDR X1, [X22]
	0x03D61EC4 LDRH W9, [X8 + 0x12E]
	0x03D61EC8 CBZ X9, 0x3D61EEC
	0x03D61ECC LDR X10, [X8 + 0xB0]
	0x03D61ED0 ADD X10, X10, 0x8
	0x03D61ED4 LDUR X11, [X10 - 0x8]
	0x03D61ED8 CMP X11, X1
	0x03D61EDC B.EQ 0x3D61EFC
	0x03D61EE0 SUBS X9, X9, 0x1
	0x03D61EE4 ADD X10, X10, 0x10
	0x03D61EE8 B.NE 0x3D61ED4
	0x03D61EEC MOV X0, X20
	0x03D61EF0 MOV W2, W31
	0x03D61EF4 BL 0x1C5C788
	0x03D61EF8 B 0x3D61F08
	0x03D61EFC LDRSW X9, [X10]
	0x03D61F00 ADD X8, X8, X9, 0x4, LSL
	0x03D61F04 ADD X0, X8, 0x138
	0x03D61F08 LDP X8, X1, [X0]
	0x03D61F0C MOV X0, X20
	0x03D61F10 BLR X8
	0x03D61F14 TBZ X0, 0x0, 0x3D62004
	0x03D61F18 LDR X8, [X20]
	0x03D61F1C LDR X1, [X24]
	0x03D61F20 LDRH W9, [X8 + 0x12E]
	0x03D61F24 CBZ X9, 0x3D61F48
	0x03D61F28 LDR X10, [X8 + 0xB0]
	0x03D61F2C ADD X10, X10, 0x8
	0x03D61F30 LDUR X11, [X10 - 0x8]
	0x03D61F34 CMP X11, X1
	0x03D61F38 B.EQ 0x3D61F58
	0x03D61F3C SUBS X9, X9, 0x1
	0x03D61F40 ADD X10, X10, 0x10
	0x03D61F44 B.NE 0x3D61F30
	0x03D61F48 MOV X0, X20
	0x03D61F4C MOV W2, W31
	0x03D61F50 BL 0x1C5C788
	0x03D61F54 B 0x3D61F64
	0x03D61F58 LDRSW X9, [X10]
	0x03D61F5C ADD X8, X8, X9, 0x4, LSL
	0x03D61F60 ADD X0, X8, 0x138
	0x03D61F64 LDP X8, X1, [X0]
	0x03D61F68 MOV X0, X20
	0x03D61F6C BLR X8
	0x03D61F70 MOV X1, X0
	0x03D61F74 LDR X0, [X19 + 0x400]
	0x03D61F78 CBZ X0, 0x3D623D8
	0x03D61F7C LDR X3, [X25]
	0x03D61F80 ADD X2, X31, 0x28
	0x03D61F84 BL 0x2AA6B2C
	0x03D61F88 TBZ X0, 0x0, 0x3D61EBC
	0x03D61F8C LDR X8, [X31 + 0x28]
	0x03D61F90 CBZ X8, 0x3D623EC
	0x03D61F94 LDR X0, [X8 + 0x10]
	0x03D61F98 CBZ X0, 0x3D623F0
	0x03D61F9C LDR X1, [X26]
	0x03D61FA0 BL 0x3D63B20
	0x03D61FA4 LDR X8, [X31 + 0x28]
	0x03D61FA8 CBZ X8, 0x3D623E8
	0x03D61FAC LDR X0, [X27]
	0x03D61FB0 LDR X21, [X8 + 0x10]
	0x03D61FB4 LDR W9, [X0 + 0xE0]
	0x03D61FB8 CBNZ W9, 0x3D61FC0
	0x03D61FBC BL 0x1C16DFC
	0x03D61FC0 CBZ X21, 0x3D623F8
	0x03D61FC4 LDR X8, [X27]
	0x03D61FC8 LDR X8, [X8 + 0xB8]
	0x03D61FCC LDR X1, [X8 + 0x10]
	0x03D61FD0 MOV X0, X21
	0x03D61FD4 MOV X2, X31
	0x03D61FD8 BL 0x3DF1B54
	0x03D61FDC LDR X8, [X31 + 0x28]
	0x03D61FE0 CBZ X8, 0x3D623FC
	0x03D61FE4 LDR X0, [X8 + 0x10]
	0x03D61FE8 CBZ X0, 0x3D623F4
	0x03D61FEC LDR X8, [X27]
	0x03D61FF0 LDR X8, [X8 + 0xB8]
	0x03D61FF4 LDR X1, [X8 + 0x18]
	0x03D61FF8 MOV X2, X31
	0x03D61FFC BL 0x3DF1B54
	0x03D62000 B 0x3D61EBC
	0x03D62004 MOV X21, X31
	0x03D62008 MOVZ W22, 0x5
	0x03D6200C CBZ X20, 0x3D62068
	0x03D62010 LDR X8, [X20]
	0x03D62014 LDR X1, [X23]
	0x03D62018 LDRH W9, [X8 + 0x12E]
	0x03D6201C CBZ X9, 0x3D62040
	0x03D62020 LDR X10, [X8 + 0xB0]
	0x03D62024 ADD X10, X10, 0x8
	0x03D62028 LDUR X11, [X10 - 0x8]
	0x03D6202C CMP X11, X1
	0x03D62030 B.EQ 0x3D62050
	0x03D62034 SUBS X9, X9, 0x1
	0x03D62038 ADD X10, X10, 0x10
	0x03D6203C B.NE 0x3D62028
	0x03D62040 MOV X0, X20
	0x03D62044 MOV W2, W31
	0x03D62048 BL 0x1C5C788
	0x03D6204C B 0x3D6205C
	0x03D62050 LDRSW X9, [X10]
	0x03D62054 ADD X8, X8, X9, 0x4, LSL
	0x03D62058 ADD X0, X8, 0x138
	0x03D6205C LDP X8, X1, [X0]
	0x03D62060 MOV X0, X20
	0x03D62064 BLR X8
	0x03D62068 CBNZ X21, 0x3D6241C
	0x03D6206C CMP W22, 0x5
	0x03D62070 B.EQ 0x3D62078
	0x03D62074 CBNZ W22, 0x3D623B8
	0x03D62078 ADRP X8, 0x404000
	0x03D6207C LDR X8, [X8 + 0x758]
	0x03D62080 ADRP X20, 0x404000
	0x03D62084 LDR X0, [X8]
	0x03D62088 LDR X20, [X20 + 0x740]
	0x03D6208C BL 0x1C16F10
	0x03D62090 LDR X1, [X20]
	0x03D62094 MOV X20, X0
	0x03D62098 BL 0x301B7C4
	0x03D6209C LDR X21, [X19 + 0x3D0]
	0x03D620A0 CBZ X21, 0x3D623E4
	0x03D620A4 ADRP X10, 0x404000
	0x03D620A8 LDR X8, [X21]
	0x03D620AC LDR X10, [X10 + 0x730]
	0x03D620B0 LDRH W9, [X8 + 0x12E]
	0x03D620B4 LDR X1, [X10]
	0x03D620B8 CBZ X9, 0x3D620DC
	0x03D620BC LDR X10, [X8 + 0xB0]
	0x03D620C0 ADD X10, X10, 0x8
	0x03D620C4 LDUR X11, [X10 - 0x8]
	0x03D620C8 CMP X11, X1
	0x03D620CC B.EQ 0x3D620EC
	0x03D620D0 SUBS X9, X9, 0x1
	0x03D620D4 ADD X10, X10, 0x10
	0x03D620D8 B.NE 0x3D620C4
	0x03D620DC MOV X0, X21
	0x03D620E0 MOV W2, W31
	0x03D620E4 BL 0x1C5C788
	0x03D620E8 B 0x3D620F8
	0x03D620EC LDRSW X9, [X10]
	0x03D620F0 ADD X8, X8, X9, 0x4, LSL
	0x03D620F4 ADD X0, X8, 0x138
	0x03D620F8 LDP X8, X1, [X0]
	0x03D620FC MOV X0, X21
	0x03D62100 BLR X8
	0x03D62104 MOV X21, X0
	0x03D62108 CBZ X0, 0x3D62424
	0x03D6210C ADRP X24, 0x391000
	0x03D62110 ADRP X25, 0x404000
	0x03D62114 ADRP X26, 0x3BA000
	0x03D62118 ADRP X27, 0x404000
	0x03D6211C ADRP X28, 0x404000
	0x03D62120 LDR X24, [X24 + 0xE18]
	0x03D62124 LDR X25, [X25 + 0x5E0]
	0x03D62128 LDR X26, [X26 + 0x108]
	0x03D6212C LDR X27, [X27 + 0x738]
	0x03D62130 LDR X28, [X28 + 0x4D0]
	0x03D62134 LDR X8, [X21]
	0x03D62138 LDR X1, [X24]
	0x03D6213C LDRH W9, [X8 + 0x12E]
	0x03D62140 CBZ X9, 0x3D62164
	0x03D62144 LDR X10, [X8 + 0xB0]
	0x03D62148 ADD X10, X10, 0x8
	0x03D6214C LDUR X11, [X10 - 0x8]
	0x03D62150 CMP X11, X1
	0x03D62154 B.EQ 0x3D62174
	0x03D62158 SUBS X9, X9, 0x1
	0x03D6215C ADD X10, X10, 0x10
	0x03D62160 B.NE 0x3D6214C
	0x03D62164 MOV X0, X21
	0x03D62168 MOV W2, W31
	0x03D6216C BL 0x1C5C788
	0x03D62170 B 0x3D62180
	0x03D62174 LDRSW X9, [X10]
	0x03D62178 ADD X8, X8, X9, 0x4, LSL
	0x03D6217C ADD X0, X8, 0x138
	0x03D62180 LDP X8, X1, [X0]
	0x03D62184 MOV X0, X21
	0x03D62188 BLR X8
	0x03D6218C TBZ X0, 0x0, 0x3D622E0
	0x03D62190 LDR X8, [X21]
	0x03D62194 LDR X1, [X25]
	0x03D62198 LDRH W9, [X8 + 0x12E]
	0x03D6219C CBZ X9, 0x3D621C0
	0x03D621A0 LDR X10, [X8 + 0xB0]
	0x03D621A4 ADD X10, X10, 0x8
	0x03D621A8 LDUR X11, [X10 - 0x8]
	0x03D621AC CMP X11, X1
	0x03D621B0 B.EQ 0x3D621D0
	0x03D621B4 SUBS X9, X9, 0x1
	0x03D621B8 ADD X10, X10, 0x10
	0x03D621BC B.NE 0x3D621A8
	0x03D621C0 MOV X0, X21
	0x03D621C4 MOV W2, W31
	0x03D621C8 BL 0x1C5C788
	0x03D621CC B 0x3D621DC
	0x03D621D0 LDRSW X9, [X10]
	0x03D621D4 ADD X8, X8, X9, 0x4, LSL
	0x03D621D8 ADD X0, X8, 0x138
	0x03D621DC LDP X8, X1, [X0]
	0x03D621E0 MOV X0, X21
	0x03D621E4 BLR X8
	0x03D621E8 MOV X22, X0
	0x03D621EC CBZ X0, 0x3D623DC
	0x03D621F0 LDR X0, [X19 + 0x400]
	0x03D621F4 CBZ X0, 0x3D623E0
	0x03D621F8 LDR X1, [X22 + 0x28]
	0x03D621FC LDR X3, [X26]
	0x03D62200 ADD X2, X31, 0x18
	0x03D62204 BL 0x2AA6B2C

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x687000
	015 Move W8, [X20+3226]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0x3BC000
	022 Move X0, [X0+264]
	023 Call 0x1C17CF4
	024 Move X0, 0x393000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x3BC000
	028 Move X0, [X0+272]
	029 Call 0x1C17CF4
	030 Move X0, 0x3BC000
	031 Move X0, [X0+280]
	032 Call 0x1C17CF4
	033 Move X0, 0x393000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0x3BC000
	037 Move X0, [X0+296]
	038 Call 0x1C17CF4
	039 Move X0, 0x3BD000
	040 Move X0, [X0+3856]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+3226], W8
	044 Move [X31], X31
	045 Move [X31+8], X31
	046 Move X0, [X19+1056]
	047 Compare X0, 0
	048 JumpIfEqual {457}
	049 Move X1, X31
	050 Call Columns.get_visibleList, X0
	051 Compare X0, 0
	052 JumpIfEqual {457}
	053 Move X10, 0x3BC000
	054 Move X8, [X0]
	055 Move X10, [X10+272]
	056 Move X20, X0
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move X1, [X10]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move X0, X20
	068 Move W2, W31
	069 Call 0x1C5D788
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Add X8, X8, X9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X1, [X0+8]
	075 Move X26, 0x3BC000
	076 Move X26, [X26+296]
	077 Move X0, X20
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X20, X0
	080 Compare X0, 0
	081 JumpIfEqual {458}
	082 Move X27, 0x393000
	083 Move X28, 0x3BC000
	084 Move X27, [X27+3608]
	085 Move X28, [X28+280]
	086 Move W29, W31
	087 Move X22, X31
	088 Move X8, [X20]
	089 Move X1, [X27]
	090 Move X21, X22
	091 NotImplemented "Instruction LDRH not yet implemented."
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X20
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {284}
	114 Move X8, [X20]
	115 Move X1, [X28]
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, X20
	126 Move W2, W31
	127 Call 0x1C5D788
	128 NotImplemented "Instruction LDRSW not yet implemented."
	129 Add X8, X8, X9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X1, [X0+8]
	133 Move X0, X20
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X22, X0
	136 Compare X0, 0
	137 JumpIfEqual {445}
	138 Move W8, [X22+96]
	139 Move [X31+8], X31
	140 Move X0, [X19+1024]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CSET not yet implemented."
	143 Or W29, W29, W8
	144 Compare X0, 0
	145 JumpIfEqual {446}
	146 Move X8, 0x3BC000
	147 Move X8, [X8+264]
	148 Move X3, [X8]
	149 Add X2, X31, 8
	150 Move X1, X22
	151 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {88}
	156 Move X8, [X31+8]
	157 Compare X8, 0
	158 JumpIfEqual {448}
	159 Move X0, [X8+16]
	160 Compare X0, 0
	161 JumpIfEqual {452}
	162 Move X1, X31
	163 Call VisualElement.get_style, X0
	164 Move X23, X0
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Move X1, X31
	167 Call StyleLength.op_Implicit, X0
	168 Compare X23, 0
	169 JumpIfEqual {454}
	170 Move X8, [X23]
	171 Move X25, X1
	172 Move X1, [X26]
	173 Move X24, X0
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 32
	184 Move X0, X23
	185 Call 0x1C5D788
	186 Move W9, [X10]
	187 Add W9, W9, 32
	188 Add X8, X8, W9
	189 Add X0, X8, 312
	190 Move X8, [X0]
	191 Move X3, [X0+8]
	192 And X2, X25, 0
	193 Move X0, X23
	194 Move X1, X24
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move X8, [X31+8]
	197 Compare X8, 0
	198 JumpIfEqual {451}
	199 Move X0, [X8+16]
	200 Compare X0, 0
	201 JumpIfEqual {456}
	202 Move X1, X31
	203 Call VisualElement.get_style, X0
	204 Move X23, X0
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 Move X1, X31
	207 Call StyleLength.op_Implicit, X0
	208 Compare X23, 0
	209 JumpIfEqual {450}
	210 Move X8, [X23]
	211 Move X25, X1
	212 Move X1, [X26]
	213 Move X24, X0
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move W2, 31
	224 Move X0, X23
	225 Call 0x1C5D788
	226 Move W9, [X10]
	227 Add W9, W9, 31
	228 Add X8, X8, W9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X3, [X0+8]
	232 And X2, X25, 0
	233 Move X0, X23
	234 Move X1, X24
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move X8, [X31+8]
	237 Compare X8, 0
	238 JumpIfEqual {455}
	239 Move X0, [X8+24]
	240 Compare X0, 0
	241 JumpIfEqual {447}
	242 Move X1, X31
	243 Call VisualElement.get_style, X0
	244 Move X8, [X19+1056]
	245 Compare X8, 0
	246 JumpIfEqual {449}
	247 Move W8, [X8+49]
	248 Move X23, X0
	249 Compare W8, 0
	250 JumpIfEqual {253}
	251 Move W8, [X22+99]
	252 Xor W0, W8, 1
	253 Move W0, 1
	254 Move X8, 0x3BD000
	255 Move X8, [X8+3856]
	256 Move X1, [X8]
	257 Call 0x266FACC, X0
	258 Compare X23, 0
	259 JumpIfEqual {453}
	260 Move X8, [X23]
	261 Move X1, [X26]
	262 Move X24, X0
	263 NotImplemented "Instruction LDRH not yet implemented."
	264 Compare X9, 0
	265 JumpIfEqual {272}
	266 Move X10, [X8+176]
	267 Add X10, X10, 8
	268 NotImplemented "Instruction LDUR not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Subtract X9, X9, 1
	271 Add X10, X10, 16
	272 Move W2, 18
	273 Move X0, X23
	274 Call 0x1C5D788
	275 Move W9, [X10]
	276 Add W9, W9, 18
	277 Add X8, X8, W9
	278 Add X0, X8, 312
	279 Move X8, [X0]
	280 Move X2, [X0+8]
	281 Move X0, X23
	282 Move X1, X24
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Move X23, X31
	285 Compare X20, 0
	286 JumpIfEqual {310}
	287 Move X8, [X20]
	288 Move X10, 0x393000
	289 NotImplemented "Instruction LDRH not yet implemented."
	290 Move X10, [X10+3584]
	291 Move X1, [X10]
	292 Compare X9, 0
	293 JumpIfEqual {300}
	294 Move X10, [X8+176]
	295 Add X10, X10, 8
	296 NotImplemented "Instruction LDUR not yet implemented."
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Subtract X9, X9, 1
	299 Add X10, X10, 16
	300 Move X0, X20
	301 Move W2, W31
	302 Call 0x1C5D788
	303 NotImplemented "Instruction LDRSW not yet implemented."
	304 Add X8, X8, X9
	305 Add X0, X8, 312
	306 Move X8, [X0]
	307 Move X1, [X0+8]
	308 Move X0, X20
	309 NotImplemented "Instruction BLR not yet implemented."
	310 Compare X23, 0
	311 JumpIfNotEqual {459}
	312 Move X0, [X19+1040]
	313 Compare X0, 0
	314 JumpIfEqual {457}
	315 Move X1, X31
	316 Call VisualElement.get_style, X0
	317 Move X20, X0
	318 Move TEMP, X29
	319 And TEMP, TEMP, 1
	320 Compare TEMP, 1
	321 JumpIfNotEqual {342}
	322 Move S0, 1
	323 Move X0, X31
	324 Call StyleFloat.op_Implicit, V0
	325 Compare X20, 0
	326 JumpIfEqual {457}
	327 Move X8, [X20]
	328 Move X1, [X26]
	329 Move X22, X0
	330 NotImplemented "Instruction LDRH not yet implemented."
	331 Compare X9, 0
	332 JumpIfEqual {339}
	333 Move X10, [X8+176]
	334 Add X10, X10, 8
	335 NotImplemented "Instruction LDUR not yet implemented."
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Subtract X9, X9, 1
	338 Add X10, X10, 16
	339 Move W2, 21
	340 Move X0, X20
	341 Call 0x1C5D788
	342 Move S0, W31
	343 Move X0, X31
	344 Call StyleFloat.op_Implicit, V0
	345 Compare X20, 0
	346 JumpIfEqual {457}
	347 Move X8, [X20]
	348 Move X1, [X26]
	349 Move X21, X0
	350 NotImplemented "Instruction LDRH not yet implemented."
	351 Compare X9, 0
	352 JumpIfEqual {359}
	353 Move X10, [X8+176]
	354 Add X10, X10, 8
	355 NotImplemented "Instruction LDUR not yet implemented."
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Subtract X9, X9, 1
	358 Add X10, X10, 16
	359 Move W2, 21
	360 Move X0, X20
	361 Call 0x1C5D788
	362 Move W9, [X10]
	363 Add W9, W9, 21
	364 Add X8, X8, W9
	365 Add X0, X8, 312
	366 Move X8, [X0]
	367 Move X2, [X0+8]
	368 Move X0, X20
	369 Move X1, X22
	370 NotImplemented "Instruction BLR not yet implemented."
	371 Move X8, [X19+1056]
	372 Compare X8, 0
	373 JumpIfEqual {457}
	374 Move W8, [X8+44]
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Move X0, [X19+1024]
	377 Compare X0, 0
	378 JumpIfEqual {457}
	379 Move X8, 0x3BC000
	380 Move X8, [X8+264]
	381 Add X2, X31, 0
	382 Move X1, X21
	383 Move X3, [X8]
	384 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	385 Move TEMP, X0
	386 And TEMP, TEMP, 1
	387 Compare TEMP, 1
	388 JumpIfNotEqual {427}
	389 Move X8, [X31]
	390 Compare X8, 0
	391 JumpIfEqual {457}
	392 Move X0, [X8+24]
	393 Compare X0, 0
	394 JumpIfEqual {457}
	395 Move X1, X31
	396 Call VisualElement.get_style, X0
	397 Move X8, 0x3BC000
	398 Move X8, [X8+3856]
	399 Move X20, X0
	400 Move W0, 1
	401 Move X1, [X8]
	402 Call 0x266FACC, X0
	403 Compare X20, 0
	404 JumpIfEqual {457}
	405 Move X8, [X20]
	406 Move X1, [X26]
	407 Move X21, X0
	408 NotImplemented "Instruction LDRH not yet implemented."
	409 Compare X9, 0
	410 JumpIfEqual {417}
	411 Move X10, [X8+176]
	412 Add X10, X10, 8
	413 NotImplemented "Instruction LDUR not yet implemented."
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Subtract X9, X9, 1
	416 Add X10, X10, 16
	417 Move W2, 18
	418 Move W9, [X10]
	419 Add W9, W9, 21
	420 Add X8, X8, W9
	421 Add X0, X8, 312
	422 Move X8, [X0]
	423 Move X2, [X0+8]
	424 Move X0, X20
	425 Move X1, X21
	426 NotImplemented "Instruction BLR not yet implemented."
	427 Move X0, X19
	428 Call MultiColumnCollectionHeader.UpdateSortingStatus, X0
	429 Move X20, [X31+96]
	430 Move X19, [X31+104]
	431 Move X22, [X31+80]
	432 Move X21, [X31+88]
	433 Move X24, [X31+64]
	434 Move X23, [X31+72]
	435 Move X26, [X31+48]
	436 Move X25, [X31+56]
	437 Move X28, [X31+32]
	438 Move X27, [X31+40]
	439 Move X29, [X31+16]
	440 Move X30, [X31+24]
	441 Add X31, X31, 112
	442 Return 
	443 Move W9, [X10]
	444 Add W9, W9, 18
	445 Call 0x1C17F20
	446 Call 0x1C17F20
	447 Call 0x1C17F20
	448 Call 0x1C17F20
	449 Call 0x1C17F20
	450 Call 0x1C17F20
	451 Call 0x1C17F20
	452 Call 0x1C17F20
	453 Call 0x1C17F20
	454 Call 0x1C17F20
	455 Call 0x1C17F20
	456 Call 0x1C17F20
	457 Call 0x1C17F20
	458 Call 0x1C17F20
	459 Move X0, X23
	460 Call 0x1C17F18
	461 Move X22, X0
	462 Move X21, X31
	463 Move W29, W31
	464 Move X22, X0
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move X0, X22
	467 Call 0x3EB2AD0
	468 Move X23, [X0]
	469 Call 0x3EB2AE0
	470 Move X23, X31
	471 Move X22, X0
	472 Compare X20, 0
	473 JumpIfEqual {497}
	474 Move X8, [X20]
	475 Move X10, 0x392000
	476 NotImplemented "Instruction LDRH not yet implemented."
	477 Move X10, [X10+3584]
	478 Move X1, [X10]
	479 Compare X9, 0
	480 JumpIfEqual {487}
	481 Move X10, [X8+176]
	482 Add X10, X10, 8
	483 NotImplemented "Instruction LDUR not yet implemented."
	484 NotImplemented "Instruction CMP not yet implemented."
	485 Subtract X9, X9, 1
	486 Add X10, X10, 16
	487 Move X0, X20
	488 Move W2, W31
	489 Call 0x1C5D788
	490 NotImplemented "Instruction LDRSW not yet implemented."
	491 Add X8, X8, X9
	492 Add X0, X8, 312
	493 Move X8, [X0]
	494 Move X1, [X0+8]
	495 Move X0, X20
	496 NotImplemented "Instruction BLR not yet implemented."
	497 Compare X23, 0
	498 JumpIfNotEqual {501}
	499 Move X0, X22
	500 Call 0x1D2D690
	501 Move X0, X23
	502 Call 0x1C17F18
	503 Call 0x1991590

Method: System.Void OnColumnAdded(UnityEngine.UIElements.Column column, System.Int32 index)

Disassembly:
	0x03D62208 TBZ X0, 0x0, 0x3D62134

ISIL:
	001 Call MultiColumnCollectionHeader.OnColumnAdded, X0, X1
	002 Return 

Method: System.Void OnColumnAdded(UnityEngine.UIElements.Column column)

Disassembly:
	0x03D6159C ADD X8, X9, W8, 0x4, SXTW
	0x03D615A0 ADD X0, X8, 0x138
	0x03D615A4 LDP X8, X3, [X0]
	0x03D615A8 MOV X0, X20
	0x03D615AC MOV X1, X21
	0x03D615B0 MOV X2, X22
	0x03D615B4 BLR X8
	0x03D615B8 MOV X0, X19
	0x03D615BC MOV X1, X31
	0x03D615C0 BL 0x3DE7EEC
	0x03D615C4 MOV X20, X0
	0x03D615C8 FMOV S0, W31
	0x03D615CC MOV X0, X31
	0x03D615D0 BL 0x3DFED98
	0x03D615D4 CBZ X20, 0x3D619A4
	0x03D615D8 LDR X9, [X20]
	0x03D615DC MOV X8, X1
	0x03D615E0 LDR X1, [X25]
	0x03D615E4 MOV X21, X0
	0x03D615E8 LDRH W10, [X9 + 0x12E]
	0x03D615EC AND X22, X8, 0x0
	0x03D615F0 CBZ X10, 0x3D61614
	0x03D615F4 LDR X8, [X9 + 0xB0]
	0x03D615F8 ADD X8, X8, 0x8
	0x03D615FC LDUR X11, [X8 - 0x8]
	0x03D61600 CMP X11, X1
	0x03D61604 B.EQ 0x3D61624
	0x03D61608 SUBS X10, X10, 0x1
	0x03D6160C ADD X8, X8, 0x10
	0x03D61610 B.NE 0x3D615FC
	0x03D61614 MOVZ W2, 0x24
	0x03D61618 MOV X0, X20
	0x03D6161C BL 0x1C5C788
	0x03D61620 B 0x3D61634
	0x03D61624 LDR W8, [X8]
	0x03D61628 ADD W8, W8, 0x24
	0x03D6162C ADD X8, X9, W8, 0x4, SXTW
	0x03D61630 ADD X0, X8, 0x138
	0x03D61634 LDP X8, X3, [X0]
	0x03D61638 MOV X0, X20
	0x03D6163C MOV X1, X21
	0x03D61640 MOV X2, X22
	0x03D61644 BLR X8
	0x03D61648 MOV X0, X19
	0x03D6164C MOV X1, X31
	0x03D61650 BL 0x3DE7EEC
	0x03D61654 MOV X20, X0
	0x03D61658 FMOV S0, W31
	0x03D6165C MOV X0, X31
	0x03D61660 BL 0x3DFED98
	0x03D61664 CBZ X20, 0x3D619A4
	0x03D61668 LDR X9, [X20]
	0x03D6166C MOV X8, X1
	0x03D61670 LDR X1, [X25]
	0x03D61674 MOV X21, X0
	0x03D61678 LDRH W10, [X9 + 0x12E]
	0x03D6167C AND X22, X8, 0x0
	0x03D61680 CBZ X10, 0x3D616A4
	0x03D61684 LDR X8, [X9 + 0xB0]
	0x03D61688 ADD X8, X8, 0x8
	0x03D6168C LDUR X11, [X8 - 0x8]
	0x03D61690 CMP X11, X1
	0x03D61694 B.EQ 0x3D616B4
	0x03D61698 SUBS X10, X10, 0x1
	0x03D6169C ADD X8, X8, 0x10
	0x03D616A0 B.NE 0x3D6168C
	0x03D616A4 MOVZ W2, 0x27
	0x03D616A8 MOV X0, X20
	0x03D616AC BL 0x1C5C788
	0x03D616B0 B 0x3D616C4
	0x03D616B4 LDR W8, [X8]
	0x03D616B8 ADD W8, W8, 0x27
	0x03D616BC ADD X8, X9, W8, 0x4, SXTW
	0x03D616C0 ADD X0, X8, 0x138
	0x03D616C4 LDP X8, X3, [X0]
	0x03D616C8 MOV X0, X20
	0x03D616CC MOV X1, X21
	0x03D616D0 MOV X2, X22
	0x03D616D4 BLR X8
	0x03D616D8 MOV X0, X19
	0x03D616DC MOV X1, X31
	0x03D616E0 BL 0x3DE7EEC
	0x03D616E4 MOV X20, X0
	0x03D616E8 FMOV S0, W31
	0x03D616EC MOV X0, X31
	0x03D616F0 BL 0x3DFED98
	0x03D616F4 CBZ X20, 0x3D619A4
	0x03D616F8 LDR X9, [X20]
	0x03D616FC MOV X8, X1
	0x03D61700 LDR X1, [X25]
	0x03D61704 MOV X21, X0
	0x03D61708 LDRH W10, [X9 + 0x12E]
	0x03D6170C AND X22, X8, 0x0
	0x03D61710 CBZ X10, 0x3D61734
	0x03D61714 LDR X8, [X9 + 0xB0]
	0x03D61718 ADD X8, X8, 0x8
	0x03D6171C LDUR X11, [X8 - 0x8]
	0x03D61720 CMP X11, X1
	0x03D61724 B.EQ 0x3D61744
	0x03D61728 SUBS X10, X10, 0x1
	0x03D6172C ADD X8, X8, 0x10
	0x03D61730 B.NE 0x3D6171C
	0x03D61734 MOVZ W2, 0x25
	0x03D61738 MOV X0, X20
	0x03D6173C BL 0x1C5C788
	0x03D61740 B 0x3D61754
	0x03D61744 LDR W8, [X8]
	0x03D61748 ADD W8, W8, 0x25
	0x03D6174C ADD X8, X9, W8, 0x4, SXTW
	0x03D61750 ADD X0, X8, 0x138
	0x03D61754 LDP X8, X3, [X0]
	0x03D61758 MOV X0, X20
	0x03D6175C MOV X1, X21
	0x03D61760 MOV X2, X22
	0x03D61764 BLR X8
	0x03D61768 MOV X0, X19
	0x03D6176C MOV X1, X31
	0x03D61770 BL 0x3DE7EEC
	0x03D61774 MOV X20, X0
	0x03D61778 FMOV S0, W31
	0x03D6177C MOV X0, X31
	0x03D61780 BL 0x3DFED98
	0x03D61784 CBZ X20, 0x3D619A4
	0x03D61788 LDR X9, [X20]
	0x03D6178C ADRP X26, 0x405000
	0x03D61790 MOV X8, X1
	0x03D61794 LDR X1, [X25]
	0x03D61798 LDRH W10, [X9 + 0x12E]
	0x03D6179C LDR X26, [X26 + 0x708]
	0x03D617A0 MOV X21, X0
	0x03D617A4 AND X22, X8, 0x0
	0x03D617A8 CBZ X10, 0x3D617CC
	0x03D617AC LDR X8, [X9 + 0xB0]
	0x03D617B0 ADD X8, X8, 0x8
	0x03D617B4 LDUR X11, [X8 - 0x8]
	0x03D617B8 CMP X11, X1
	0x03D617BC B.EQ 0x3D617DC
	0x03D617C0 SUBS X10, X10, 0x1
	0x03D617C4 ADD X8, X8, 0x10
	0x03D617C8 B.NE 0x3D617B4
	0x03D617CC MOVZ W2, 0x23
	0x03D617D0 MOV X0, X20
	0x03D617D4 BL 0x1C5C788
	0x03D617D8 B 0x3D617EC
	0x03D617DC LDR W8, [X8]
	0x03D617E0 ADD W8, W8, 0x23
	0x03D617E4 ADD X8, X9, W8, 0x4, SXTW
	0x03D617E8 ADD X0, X8, 0x138
	0x03D617EC LDP X8, X3, [X0]
	0x03D617F0 MOV X0, X20
	0x03D617F4 MOV X1, X21
	0x03D617F8 MOV X2, X22
	0x03D617FC BLR X8
	0x03D61800 LDR X0, [X26]
	0x03D61804 BL 0x1C16F10
	0x03D61808 MOV X20, X0
	0x03D6180C BL 0x3D64EB8
	0x03D61810 MOV X0, X19
	0x03D61814 MOV X1, X20
	0x03D61818 MOV X2, X31
	0x03D6181C STR X20, [X19 + 0x3D8]
	0x03D61820 BL 0x3DF60E8
	0x03D61824 LDR X0, [X24]
	0x03D61828 BL 0x1C16F10
	0x03D6182C MOV X1, X31
	0x03D61830 MOV X20, X0
	0x03D61834 BL 0x3DEF578
	0x03D61838 STR X20, [X19 + 0x3C8]
	0x03D6183C CBZ X20, 0x3D619A4
	0x03D61840 MOV X0, X20
	0x03D61844 MOV X1, X31
	0x03D61848 BL 0x3DE7EEC
	0x03D6184C MOV X20, X0
	0x03D61850 FMOV S0, 1
	0x03D61854 MOV X0, X31
	0x03D61858 BL 0x3DFE658
	0x03D6185C CBZ X20, 0x3D619A4
	0x03D61860 LDR X8, [X20]
	0x03D61864 LDR X1, [X25]
	0x03D61868 MOV X21, X0
	0x03D6186C LDRH W9, [X8 + 0x12E]
	0x03D61870 CBZ X9, 0x3D61894
	0x03D61874 LDR X10, [X8 + 0xB0]
	0x03D61878 ADD X10, X10, 0x8
	0x03D6187C LDUR X11, [X10 - 0x8]
	0x03D61880 CMP X11, X1
	0x03D61884 B.EQ 0x3D618A4
	0x03D61888 SUBS X9, X9, 0x1
	0x03D6188C ADD X10, X10, 0x10
	0x03D61890 B.NE 0x3D6187C
	0x03D61894 MOVZ W2, 0x15
	0x03D61898 MOV X0, X20
	0x03D6189C BL 0x1C5C788
	0x03D618A0 B 0x3D618B4
	0x03D618A4 LDR W9, [X10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x687000
	009 Move W8, [X21+3227]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {57}
	016 Move X0, 0x402000
	017 Move X0, [X0+2376]
	018 Call 0x1C17CF4
	019 Move X0, 0x406000
	020 Move X0, [X0+1272]
	021 Call 0x1C17CF4
	022 Move X0, 0x3BD000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move X0, 0x406000
	026 Move X0, [X0+1728]
	027 Call 0x1C17CF4
	028 Move X0, 0x406000
	029 Move X0, [X0+1736]
	030 Call 0x1C17CF4
	031 Move X0, 0x406000
	032 Move X0, [X0+1744]
	033 Call 0x1C17CF4
	034 Move X0, 0x406000
	035 Move X0, [X0+1752]
	036 Call 0x1C17CF4
	037 Move X0, 0x3BD000
	038 Move X0, [X0+1632]
	039 Call 0x1C17CF4
	040 Move X0, 0x406000
	041 Move X0, [X0+1760]
	042 Call 0x1C17CF4
	043 Move X0, 0x406000
	044 Move X0, [X0+1768]
	045 Call 0x1C17CF4
	046 Move X0, 0x406000
	047 Move X0, [X0+1776]
	048 Call 0x1C17CF4
	049 Move X0, 0x406000
	050 Move X0, [X0+1784]
	051 Call 0x1C17CF4
	052 Move X0, 0x406000
	053 Move X0, [X0+1232]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+3227], W8
	057 Move X0, [X19+1024]
	058 Compare X0, 0
	059 JumpIfEqual {222}
	060 Move X8, 0x406000
	061 Move X8, [X8+1744]
	062 Move X1, X20
	063 Move X2, [X8]
	064 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {77}
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move X30, [X31+64]
	076 Return 
	077 Move X8, 0x406000
	078 Move X8, [X8+1232]
	079 Move X0, [X8]
	080 Call 0x1C17F10
	081 Move X1, X20
	082 Move X22, X0
	083 Call MultiColumnHeaderColumn..ctor, X0, X1
	084 Move X8, 0x406000
	085 Move X8, [X8+1784]
	086 Move X0, [X8]
	087 Call 0x1C17F10
	088 Move X21, X0
	089 Call MultiColumnHeaderColumnResizeHandle..ctor, X0
	090 Move X8, 0x3BD000
	091 Move X8, [X8+1632]
	092 Move X0, [X8]
	093 Call 0x1C17F10
	094 Move X8, 0x406000
	095 Move X8, [X8+1768]
	096 Move X1, X19
	097 Move X3, X31
	098 Move X23, X0
	099 Move X2, [X8]
	100 Call 0x2D0F824, X0, X1, X2
	101 Compare X22, 0
	102 JumpIfEqual {222}
	103 Move X8, 0x3BD000
	104 Move X8, [X8+1624]
	105 Move X0, X22
	106 Move X1, X23
	107 Move W2, W31
	108 Move X3, [X8]
	109 Call 0x21A2534, X0, X1, X2
	110 Move X8, 0x402000
	111 Move X23, [X22+1000]
	112 Move X8, [X8+2376]
	113 Move X0, [X8]
	114 Call 0x1C17F10
	115 Move X8, 0x406000
	116 Move X8, [X8+1760]
	117 Move X1, X19
	118 Move X3, X31
	119 Move X24, X0
	120 Move X2, [X8]
	121 Call Action`1<Object>..ctor, X0, X1, X2
	122 Compare X23, 0
	123 JumpIfEqual {222}
	124 Move X0, X23
	125 Move X1, X24
	126 Move X2, X31
	127 Call Clickable.add_clickedWithEventInfo, X0, X1
	128 Move X8, 0x406000
	129 Move X23, [X22+1008]
	130 Move X8, [X8+1272]
	131 Move X0, [X8]
	132 Call 0x1C17F10
	133 Move X8, 0x406000
	134 Move X8, [X8+1776]
	135 Move X1, X19
	136 Move X3, X31
	137 Move X24, X0
	138 Move X2, [X8]
	139 Call Action`1<Object>..ctor, X0, X1, X2
	140 Compare X23, 0
	141 JumpIfEqual {222}
	142 Move X0, X23
	143 Move X1, X24
	144 Call ColumnMover.add_activeChanged, X0, X1
	145 Compare X21, 0
	146 JumpIfEqual {222}
	147 Move X8, 0x406000
	148 Move X23, [X21+968]
	149 Move X8, [X8+1736]
	150 Move X0, [X8]
	151 Call 0x1C17F10
	152 Move X1, X20
	153 Move X24, X0
	154 Call ColumnResizer..ctor, X0, X1
	155 Move X0, X23
	156 Move X1, X24
	157 Move X2, X31
	158 Call VisualElementExtensions.AddManipulator, X0, X1
	159 Move X8, 0x406000
	160 Move X23, [X19+1024]
	161 Move X8, [X8+1728]
	162 Move X0, [X8]
	163 Call 0x1C17F10
	164 Move X1, X31
	165 Move X24, X0
	166 Call Object..ctor, X0
	167 Compare X24, 0
	168 JumpIfEqual {222}
	169 Move [X24+16], X22
	170 Move [X24+24], X21
	171 Compare X23, 0
	172 JumpIfEqual {222}
	173 Move X8, 0x406000
	174 Move X8, [X8+1752]
	175 Move X0, X23
	176 Move X1, X20
	177 Move X2, X24
	178 Move X3, [X8]
	179 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	180 Compare X20, 0
	181 JumpIfEqual {222}
	182 Move W8, [X20+64]
	183 Compare W8, 0
	184 JumpIfEqual {207}
	185 Move X23, [X19+1040]
	186 Move X0, X20
	187 Move X1, X31
	188 Call Column.get_visibleIndex, X0
	189 Compare X23, 0
	190 JumpIfEqual {222}
	191 Move W1, W0
	192 Move X0, X23
	193 Move X2, X22
	194 Move X3, X31
	195 Call VisualElement.Insert, X0, X1, X2
	196 Move X22, [X19+1048]
	197 Move X0, X20
	198 Move X1, X31
	199 Call Column.get_visibleIndex, X0
	200 Compare X22, 0
	201 JumpIfEqual {222}
	202 Move W1, W0
	203 Move X0, X22
	204 Move X2, X21
	205 Move X3, X31
	206 Call VisualElement.Insert, X0, X1, X2
	207 Move X0, X19
	208 Move X1, X20
	209 Call MultiColumnCollectionHeader.OnColumnRemoved, X0, X1
	210 Move X0, X19
	211 Call MultiColumnCollectionHeader.UpdateColumnControls, X0
	212 Move X0, X19
	213 Move X20, [X31+48]
	214 Move X19, [X31+56]
	215 Move X22, [X31+32]
	216 Move X21, [X31+40]
	217 Move X24, [X31+16]
	218 Move X23, [X31+24]
	219 Move X30, [X31+64]
	220 Call MultiColumnCollectionHeader.SaveViewState, X0
	221 Return 
	222 Call 0x1C17F20

Method: System.Void OnColumnRemoved(UnityEngine.UIElements.Column column)

Disassembly:
	0x03D62A94 CMP X11, X1
	0x03D62A98 B.EQ 0x3D62AB8
	0x03D62A9C SUBS X9, X9, 0x1
	0x03D62AA0 ADD X10, X10, 0x10
	0x03D62AA4 B.NE 0x3D62A90
	0x03D62AA8 MOV X0, X22
	0x03D62AAC MOV W2, W31
	0x03D62AB0 BL 0x1C5C788
	0x03D62AB4 B 0x3D62AC4
	0x03D62AB8 LDRSW X9, [X10]
	0x03D62ABC ADD X8, X8, X9, 0x4, LSL
	0x03D62AC0 ADD X0, X8, 0x138
	0x03D62AC4 LDP X8, X1, [X0]
	0x03D62AC8 MOV X0, X22
	0x03D62ACC BLR X8
	0x03D62AD0 CBNZ X23, 0x3D62E24
	0x03D62AD4 CMP W19, 0xA
	0x03D62AD8 B.EQ 0x3D62AE0
	0x03D62ADC CBNZ W19, 0x3D62DE4
	0x03D62AE0 CBZ X25, 0x3D62E20
	0x03D62AE4 ADRP X8, 0x404000
	0x03D62AE8 LDR X8, [X8 + 0x768]
	0x03D62AEC ADRP X19, 0x404000
	0x03D62AF0 LDR X22, [X25 + 0xB8]
	0x03D62AF4 LDR X0, [X8]
	0x03D62AF8 LDR X19, [X19 + 0x780]
	0x03D62AFC BL 0x1C16F10
	0x03D62B00 LDR X2, [X19]
	0x03D62B04 MOV X1, X20
	0x03D62B08 MOV X3, X31
	0x03D62B0C MOV X23, X0
	0x03D62B10 BL 0x2A6B948
	0x03D62B14 CBZ X22, 0x3D62E20
	0x03D62B18 ADRP X8, 0x404000
	0x03D62B1C LDR X8, [X8 + 0x7A8]
	0x03D62B20 ANDS W31, W24, 0x1
	0x03D62B24 MOV X0, X22
	0x03D62B28 MOV X2, X23
	0x03D62B2C LDR X1, [X8]
	0x03D62B30 MOVZ W8, 0x1
	0x03D62B34 CINC W3, W8, EQ
	0x03D62B38 MOV X4, X31
	0x03D62B3C BL 0x3D9AAA0
	0x03D62B40 LDR X0, [X25 + 0xB8]
	0x03D62B44 CBZ X0, 0x3D62E20
	0x03D62B48 MOV X1, X31
	0x03D62B4C MOV X2, X31
	0x03D62B50 STR X21, [X31 + 0x8]
	0x03D62B54 BL 0x3D9ABD8
	0x03D62B58 LDR X0, [X20 + 0x420]
	0x03D62B5C CBZ X0, 0x3D62E20
	0x03D62B60 MOV X1, X31
	0x03D62B64 MOV X28, X27
	0x03D62B68 MOV X21, X25
	0x03D62B6C BL 0x3D72594
	0x03D62B70 MOV X22, X0
	0x03D62B74 CBZ X0, 0x3D62E34
	0x03D62B78 ADRP X19, 0x404000
	0x03D62B7C LDR X19, [X19 + 0x790]
	0x03D62B80 LDR X8, [X22]
	0x03D62B84 LDR X1, [X28]
	0x03D62B88 LDRH W9, [X8 + 0x12E]
	0x03D62B8C CBZ X9, 0x3D62BB0
	0x03D62B90 LDR X10, [X8 + 0xB0]
	0x03D62B94 ADD X10, X10, 0x8
	0x03D62B98 LDUR X11, [X10 - 0x8]
	0x03D62B9C CMP X11, X1
	0x03D62BA0 B.EQ 0x3D62BC0
	0x03D62BA4 SUBS X9, X9, 0x1
	0x03D62BA8 ADD X10, X10, 0x10
	0x03D62BAC B.NE 0x3D62B98
	0x03D62BB0 MOV X0, X22
	0x03D62BB4 MOV W2, W31
	0x03D62BB8 BL 0x1C5C788
	0x03D62BBC B 0x3D62BCC
	0x03D62BC0 LDRSW X9, [X10]
	0x03D62BC4 ADD X8, X8, X9, 0x4, LSL
	0x03D62BC8 ADD X0, X8, 0x138
	0x03D62BCC LDP X8, X1, [X0]
	0x03D62BD0 MOV X0, X22
	0x03D62BD4 BLR X8
	0x03D62BD8 TBZ X0, 0x0, 0x3D62D44
	0x03D62BDC ADRP X8, 0x404000
	0x03D62BE0 LDR X8, [X8 + 0x798]
	0x03D62BE4 LDR X0, [X8]
	0x03D62BE8 BL 0x1C16F10
	0x03D62BEC MOV X23, X0
	0x03D62BF0 MOV X1, X31
	0x03D62BF4 BL 0x33BDD8C
	0x03D62BF8 CBZ X23, 0x3D62E0C
	0x03D62BFC STR X20, [X23 + 0x18]
	0x03D62C00 LDR X8, [X22]
	0x03D62C04 LDR X1, [X29]
	0x03D62C08 LDRH W9, [X8 + 0x12E]
	0x03D62C0C CBZ X9, 0x3D62C30
	0x03D62C10 LDR X10, [X8 + 0xB0]
	0x03D62C14 ADD X10, X10, 0x8
	0x03D62C18 LDUR X11, [X10 - 0x8]
	0x03D62C1C CMP X11, X1
	0x03D62C20 B.EQ 0x3D62C40
	0x03D62C24 SUBS X9, X9, 0x1
	0x03D62C28 ADD X10, X10, 0x10
	0x03D62C2C B.NE 0x3D62C18
	0x03D62C30 MOV X0, X22
	0x03D62C34 MOV W2, W31
	0x03D62C38 BL 0x1C5C788
	0x03D62C3C B 0x3D62C4C
	0x03D62C40 LDRSW X9, [X10]
	0x03D62C44 ADD X8, X8, X9, 0x4, LSL
	0x03D62C48 ADD X0, X8, 0x138
	0x03D62C4C LDP X8, X1, [X0]
	0x03D62C50 MOV X0, X22
	0x03D62C54 BLR X8
	0x03D62C58 STR X0, [X23 + 0x10]
	0x03D62C5C CBZ X0, 0x3D62E10
	0x03D62C60 LDR X24, [X0 + 0x18]
	0x03D62C64 MOV X0, X24
	0x03D62C68 MOV X1, X31
	0x03D62C6C BL 0x32277A8
	0x03D62C70 TBZ X0, 0x0, 0x3D62C80
	0x03D62C74 LDR X8, [X23 + 0x10]
	0x03D62C78 CBZ X8, 0x3D62E18
	0x03D62C7C LDR X24, [X8 + 0x10]
	0x03D62C80 MOV X0, X24
	0x03D62C84 MOV X1, X31
	0x03D62C88 BL 0x32277A8
	0x03D62C8C TBZ X0, 0x0, 0x3D62CCC
	0x03D62C90 LDR X0, [X23 + 0x10]
	0x03D62C94 CBZ X0, 0x3D62E1C
	0x03D62C98 MOV X1, X31
	0x03D62C9C BL 0x3D6F6A0
	0x03D62CA0 STR W0, [X31 + 0x14]
	0x03D62CA4 ADD X0, X31, 0x14
	0x03D62CA8 MOV X1, X31
	0x03D62CAC BL 0x337B6E0
	0x03D62CB0 MOV X1, X0
	0x03D62CB4 ADRP X8, 0x404000
	0x03D62CB8 LDR X8, [X8 + 0x7A0]
	0x03D62CBC LDR X0, [X8]
	0x03D62CC0 MOV X2, X31
	0x03D62CC4 BL 0x321B938

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x686000
	008 Move W8, [X21+3228]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {47}
	015 Move X0, 0x401000
	016 Move X0, [X0+2376]
	017 Call 0x1C17CF4
	018 Move X0, 0x405000
	019 Move X0, [X0+1272]
	020 Call 0x1C17CF4
	021 Move X0, 0x3BC000
	022 Move X0, [X0+1688]
	023 Call 0x1C17CF4
	024 Move X0, 0x405000
	025 Move X0, [X0+1744]
	026 Call 0x1C17CF4
	027 Move X0, 0x405000
	028 Move X0, [X0+1824]
	029 Call 0x1C17CF4
	030 Move X0, 0x405000
	031 Move X0, [X0+1832]
	032 Call 0x1C17CF4
	033 Move X0, 0x3BC000
	034 Move X0, [X0+1632]
	035 Call 0x1C17CF4
	036 Move X0, 0x405000
	037 Move X0, [X0+1760]
	038 Call 0x1C17CF4
	039 Move X0, 0x405000
	040 Move X0, [X0+1768]
	041 Call 0x1C17CF4
	042 Move X0, 0x405000
	043 Move X0, [X0+1776]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+3228], W8
	047 Move X0, [X19+1024]
	048 Compare X0, 0
	049 JumpIfEqual {168}
	050 Move X8, 0x405000
	051 Move X8, [X8+1744]
	052 Move X1, X20
	053 Move X2, [X8]
	054 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {161}
	059 Move X0, [X19+1024]
	060 Compare X0, 0
	061 JumpIfEqual {168}
	062 Move X8, 0x405000
	063 Move X8, [X8+1832]
	064 Move X1, X20
	065 Move X2, [X8]
	066 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	067 Compare X0, 0
	068 JumpIfEqual {168}
	069 Move X8, 0x3BC000
	070 Move X22, [X0+16]
	071 Move X8, [X8+1632]
	072 Move X21, X0
	073 Move X0, [X8]
	074 Call 0x1C17F10
	075 Move X8, 0x405000
	076 Move X8, [X8+1768]
	077 Move X1, X19
	078 Move X3, X31
	079 Move X23, X0
	080 Move X2, [X8]
	081 Call 0x2D0F824, X0, X1, X2
	082 Compare X22, 0
	083 JumpIfEqual {168}
	084 Move X8, 0x3BC000
	085 Move X8, [X8+1688]
	086 Move X0, X22
	087 Move X1, X23
	088 Move W2, W31
	089 Move X3, [X8]
	090 Call 0x21A28B4, X0, X1, X2
	091 Move X8, [X21+16]
	092 Compare X8, 0
	093 JumpIfEqual {168}
	094 Move X22, [X8+1000]
	095 Move X8, 0x401000
	096 Move X8, [X8+2376]
	097 Move X0, [X8]
	098 Call 0x1C17F10
	099 Move X8, 0x405000
	100 Move X8, [X8+1760]
	101 Move X1, X19
	102 Move X3, X31
	103 Move X23, X0
	104 Move X2, [X8]
	105 Call Action`1<Object>..ctor, X0, X1, X2
	106 Compare X22, 0
	107 JumpIfEqual {168}
	108 Move X0, X22
	109 Move X1, X23
	110 Move X2, X31
	111 Call Clickable.remove_clickedWithEventInfo, X0, X1
	112 Move X8, [X21+16]
	113 Compare X8, 0
	114 JumpIfEqual {168}
	115 Move X22, [X8+1008]
	116 Move X8, 0x405000
	117 Move X8, [X8+1272]
	118 Move X0, [X8]
	119 Call 0x1C17F10
	120 Move X8, 0x405000
	121 Move X8, [X8+1776]
	122 Move X1, X19
	123 Move X3, X31
	124 Move X23, X0
	125 Move X2, [X8]
	126 Call Action`1<Object>..ctor, X0, X1, X2
	127 Compare X22, 0
	128 JumpIfEqual {168}
	129 Move X0, X22
	130 Move X1, X23
	131 Call ColumnMover.remove_activeChanged, X0, X1
	132 Move X0, [X21+16]
	133 Compare X0, 0
	134 JumpIfEqual {168}
	135 Move X1, X31
	136 Call VisualElement.RemoveFromHierarchy, X0
	137 Move X0, [X21+24]
	138 Compare X0, 0
	139 JumpIfEqual {168}
	140 Move X1, X31
	141 Call VisualElement.RemoveFromHierarchy, X0
	142 Move X0, [X19+1024]
	143 Compare X0, 0
	144 JumpIfEqual {168}
	145 Move X8, 0x405000
	146 Move X8, [X8+1824]
	147 Move X1, X20
	148 Move X2, [X8]
	149 Call Dictionary`2<Object, Object>.Remove, X0, X1
	150 Move X0, X19
	151 Call MultiColumnCollectionHeader.UpdateColumnControls, X0
	152 Move X0, X19
	153 Move X20, [X31+32]
	154 Move X19, [X31+40]
	155 Move X22, [X31+16]
	156 Move X21, [X31+24]
	157 Move X30, [X31+48]
	158 Move X23, [X31+56]
	159 Call MultiColumnCollectionHeader.SaveViewState, X0
	160 Return 
	161 Move X20, [X31+32]
	162 Move X19, [X31+40]
	163 Move X22, [X31+16]
	164 Move X21, [X31+24]
	165 Move X30, [X31+48]
	166 Move X23, [X31+56]
	167 Return 
	168 Call 0x1C17F20

Method: System.Void OnColumnChanged(UnityEngine.UIElements.Column column, UnityEngine.UIElements.ColumnDataType type)

Disassembly:
	0x03D62CC8 MOV X24, X0
	0x03D62CCC ADRP X8, 0x404000
	0x03D62CD0 LDR X25, [X21 + 0xB8]
	0x03D62CD4 LDR X8, [X8 + 0x768]
	0x03D62CD8 LDR X0, [X8]
	0x03D62CDC BL 0x1C16F10
	0x03D62CE0 ADRP X8, 0x404000
	0x03D62CE4 LDR X8, [X8 + 0x788]
	0x03D62CE8 MOV X26, X0
	0x03D62CEC LDR X2, [X8]
	0x03D62CF0 MOV X1, X23
	0x03D62CF4 MOV X3, X31
	0x03D62CF8 BL 0x2A6B948
	0x03D62CFC ADRP X8, 0x404000
	0x03D62D00 LDR X8, [X8 + 0x770]
	0x03D62D04 LDR X0, [X8]
	0x03D62D08 BL 0x1C16F10
	0x03D62D0C LDR X2, [X19]
	0x03D62D10 MOV X27, X0
	0x03D62D14 MOV X1, X23
	0x03D62D18 MOV X3, X31
	0x03D62D1C BL 0x2D3023C
	0x03D62D20 CBZ X25, 0x3D62E08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X19, X0
	005 Compare X1, 0
	006 JumpIfEqual {28}
	007 Move W8, [X1+64]
	008 Compare W8, 0
	009 JumpIfEqual {17}
	010 Move X0, X19
	011 Call MultiColumnCollectionHeader.OnColumnAdded, X0, X1
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call MultiColumnCollectionHeader.UpdateColumnControls, X0
	016 Return 
	017 Move X0, X19
	018 Call MultiColumnCollectionHeader.OnColumnRemoved, X0, X1
	019 Move X0, X19
	020 Call MultiColumnCollectionHeader.ApplyColumnSorting, X0
	021 Move X0, X19
	022 Call MultiColumnCollectionHeader.UpdateColumnControls, X0
	023 Move X0, X19
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Call MultiColumnCollectionHeader.SaveViewState, X0
	027 Return 
	028 Call 0x1C17F20

Method: System.Void OnColumnReordered(UnityEngine.UIElements.Column column, System.Int32 from, System.Int32 to)

Disassembly:
	0x03D635E0 CMP X11, X1
	0x03D635E4 B.EQ 0x3D63660
	0x03D635E8 SUBS X9, X9, 0x1
	0x03D635EC ADD X10, X10, 0x10
	0x03D635F0 B.NE 0x3D635DC
	0x03D635F4 MOVZ W2, 0x13
	0x03D635F8 MOV X0, X22
	0x03D635FC BL 0x1C5C788
	0x03D63600 B 0x3D63670
	0x03D63604 ADRP X22, 0x3BB000
	0x03D63608 LDR X22, [X22 + 0xD30]
	0x03D6360C MOV X0, X21
	0x03D63610 LDR X1, [X22]
	0x03D63614 BL 0x1C16E00
	0x03D63618 CBZ X0, 0x3D63588
	0x03D6361C LDR X8, [X0]
	0x03D63620 LDR X1, [X22]
	0x03D63624 MOV X21, X0
	0x03D63628 LDRH W9, [X8 + 0x12E]
	0x03D6362C CBZ X9, 0x3D63650
	0x03D63630 LDR X10, [X8 + 0xB0]
	0x03D63634 ADD X10, X10, 0x8
	0x03D63638 LDUR X11, [X10 - 0x8]
	0x03D6363C CMP X11, X1
	0x03D63640 B.EQ 0x3D6367C
	0x03D63644 SUBS X9, X9, 0x1
	0x03D63648 ADD X10, X10, 0x10
	0x03D6364C B.NE 0x3D63638
	0x03D63650 MOV X0, X21
	0x03D63654 MOV W2, W31
	0x03D63658 BL 0x1C5C788
	0x03D6365C B 0x3D63688
	0x03D63660 LDR W9, [X10]
	0x03D63664 ADD W9, W9, 0x13
	0x03D63668 ADD X8, X8, W9, 0x4, SXTW
	0x03D6366C ADD X0, X8, 0x138
	0x03D63670 LDP X8, X1, [X0]
	0x03D63674 MOV X0, X22
	0x03D63678 B 0x3D63690
	0x03D6367C LDRSW X9, [X10]
	0x03D63680 ADD X8, X8, X9, 0x4, LSL
	0x03D63684 ADD X0, X8, 0x138
	0x03D63688 LDP X8, X1, [X0]
	0x03D6368C MOV X0, X21
	0x03D63690 BLR X8
	0x03D63694 MOVZ W8, 0x1
	0x03D63698 STRB W8, [X19 + 0x3E8]
	0x03D6369C LDR X1, [X20 + 0x3F8]
	0x03D636A0 MOV W2, W0
	0x03D636A4 MOV X0, X19
	0x03D636A8 BL 0x3D6370C
	0x03D636AC STRB W31, [X19 + 0x3E8]
	0x03D636B0 MOV X0, X19
	0x03D636B4 LDP X20, X19, [X31 + 0x20]
	0x03D636B8 LDP X22, X21, [X31 + 0x10]
	0x03D636BC LDP X30, X23, [X31], #0x30
	0x03D636C0 B 0x3D5EABC
	0x03D636C4 BL 0x1C16F20
	0x03D636C8 CMP W1, 0x1
	0x03D636CC B.NE 0x3D636EC
	0x03D636D0 BL 0x3EB1AD0
	0x03D636D4 LDR X20, [X0]
	0x03D636D8 BL 0x3EB1AE0
	0x03D636DC STRB W31, [X19 + 0x3E8]
	0x03D636E0 CBZ X20, 0x3D636B0
	0x03D636E4 MOV X0, X20
	0x03D636E8 BL 0x1C16F18
	0x03D636EC STRB W31, [X19 + 0x3E8]
	0x03D636F0 B 0x3D636FC
	0x03D636F4 STRB W31, [X19 + 0x3E8]
	0x03D636F8 CBNZ X20, 0x3D63700
	0x03D636FC BL 0x1D2C690
	0x03D63700 MOV X0, X20
	0x03D63704 BL 0x1C16F18
	0x03D63708 BL 0x1990590
	0x03D6370C STR X30, [X31 - 0x40]!
	0x03D63710 STP X24, X23, [X31 + 0x10]
	0x03D63714 STP X22, X21, [X31 + 0x20]
	0x03D63718 STP X20, X19, [X31 + 0x30]
	0x03D6371C ADRP X22, 0x684000
	0x03D63720 ADRP X23, 0x403000
	0x03D63724 LDRB W8, [X22 + 0xCA2]
	0x03D63728 LDR X23, [X23 + 0x7B0]
	0x03D6372C MOV W20, W2
	0x03D63730 MOV X21, X1
	0x03D63734 MOV X19, X0
	0x03D63738 TBNZ X8, 0x0, 0x3D6378C
	0x03D6373C ADRP X0, 0x390000
	0x03D63740 LDR X0, [X0 + 0x970]
	0x03D63744 BL 0x1C16CF4
	0x03D63748 ADRP X0, 0x403000
	0x03D6374C LDR X0, [X0 + 0x7B8]
	0x03D63750 BL 0x1C16CF4
	0x03D63754 ADRP X0, 0x403000
	0x03D63758 LDR X0, [X0 + 0x7C0]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x685000
	009 Move W8, [X23+3229]
	010 Move W20, W3
	011 Move W21, W2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x3BA000
	019 Move X0, [X0+264]
	020 Call 0x1C17CF4
	021 Move X0, 0x404000
	022 Move X0, [X0+1888]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+3229], W8
	026 Move [X31+8], X31
	027 Compare X22, 0
	028 JumpIfEqual {116}
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, [X22+64]
	031 Compare W8, 0
	032 JumpIfEqual {108}
	033 Move X0, [X19+1024]
	034 Compare X0, 0
	035 JumpIfEqual {116}
	036 Move X8, 0x3BA000
	037 Move X8, [X8+264]
	038 Add X2, X31, 8
	039 Move X1, X22
	040 Move X3, [X8]
	041 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {104}
	046 Move X0, X22
	047 Move X1, X31
	048 Call Column.get_visibleIndex, X0
	049 Move X8, [X19+1056]
	050 Compare X8, 0
	051 JumpIfEqual {116}
	052 Move W22, W0
	053 Move X0, X8
	054 Move X1, X31
	055 Call Columns.get_visibleList, X0
	056 Move X8, 0x404000
	057 Move X8, [X8+1888]
	058 Move X1, [X8]
	059 Call Enumerable.Count, X0
	060 Subtract W8, W0, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X31+8]
	063 Compare X8, 0
	064 JumpIfEqual {116}
	065 Move X0, [X8+16]
	066 Compare X0, 0
	067 JumpIfEqual {116}
	068 Move X1, X31
	069 Call VisualElement.BringToFront, X0
	070 Move X8, [X31+8]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CINC not yet implemented."
	073 Compare X8, 0
	074 JumpIfEqual {116}
	075 Move X0, [X19+1040]
	076 Compare X0, 0
	077 JumpIfEqual {116}
	078 Move X21, [X8+16]
	079 Move W1, W20
	080 Move X2, X31
	081 Call VisualElement.get_Item, X0, X1
	082 Compare X21, 0
	083 JumpIfEqual {116}
	084 Move X1, X0
	085 Move X0, X21
	086 Move X2, X31
	087 Call VisualElement.PlaceBehind, X0, X1
	088 Move X8, [X31+8]
	089 Compare X8, 0
	090 JumpIfEqual {116}
	091 Move X0, [X19+1048]
	092 Compare X0, 0
	093 JumpIfEqual {116}
	094 Move X21, [X8+24]
	095 Move W1, W20
	096 Move X2, X31
	097 Call VisualElement.get_Item, X0, X1
	098 Compare X21, 0
	099 JumpIfEqual {116}
	100 Move X1, X0
	101 Move X0, X21
	102 Move X2, X31
	103 Call VisualElement.PlaceBehind, X0, X1
	104 Move X0, X19
	105 Call MultiColumnCollectionHeader.UpdateColumnControls, X0
	106 Move X0, X19
	107 Call MultiColumnCollectionHeader.SaveViewState, X0
	108 Move X20, [X31+48]
	109 Move X19, [X31+56]
	110 Move X22, [X31+32]
	111 Move X21, [X31+40]
	112 Move X30, [X31+16]
	113 Move X23, [X31+24]
	114 Add X31, X31, 64
	115 Return 
	116 Call 0x1C17F20

Method: System.Void OnColumnResized(UnityEngine.UIElements.Column column)

Disassembly:
	0x03D6375C BL 0x1C16CF4

ISIL:
	001 Call MultiColumnCollectionHeader.SaveViewState, X0
	002 Return 

Method: System.Void OnContextualMenuManipulator(UnityEngine.UIElements.ContextualMenuPopulateEvent evt)

Disassembly:
	0x03D63760 ADRP X0, 0x403000
	0x03D63764 LDR X0, [X0 + 0x7C8]
	0x03D63768 BL 0x1C16CF4
	0x03D6376C ADRP X0, 0x403000
	0x03D63770 LDR X0, [X0 + 0x7D0]
	0x03D63774 BL 0x1C16CF4
	0x03D63778 ADRP X0, 0x403000
	0x03D6377C LDR X0, [X0 + 0x7B0]
	0x03D63780 BL 0x1C16CF4
	0x03D63784 MOVZ W8, 0x1
	0x03D63788 STRB W8, [X22 + 0xCA2]
	0x03D6378C LDR X0, [X23]
	0x03D63790 BL 0x1C16F10
	0x03D63794 MOV X1, X31
	0x03D63798 MOV X22, X0
	0x03D6379C BL 0x33BDD8C
	0x03D637A0 CBZ X22, 0x3D6395C
	0x03D637A4 ADRP X8, 0x403000
	0x03D637A8 LDR X8, [X8 + 0x7C0]
	0x03D637AC STR X21, [X22 + 0x10]
	0x03D637B0 ADRP X23, 0x403000
	0x03D637B4 ADRP X24, 0x403000
	0x03D637B8 LDR X0, [X8]
	0x03D637BC LDR X21, [X19 + 0x3D8]
	0x03D637C0 LDR X23, [X23 + 0x7D0]
	0x03D637C4 LDR X24, [X24 + 0x7B8]
	0x03D637C8 BL 0x1C16F10
	0x03D637CC LDR X2, [X23]
	0x03D637D0 MOV X1, X22
	0x03D637D4 MOV X3, X31
	0x03D637D8 MOV X23, X0
	0x03D637DC BL 0x2D2F428
	0x03D637E0 LDR X2, [X24]
	0x03D637E4 MOV X0, X21
	0x03D637E8 MOV X1, X23
	0x03D637EC BL 0x21C570C
	0x03D637F0 CBZ X0, 0x3D63824
	0x03D637F4 MOV X21, X0
	0x03D637F8 CMP W20, 0x1
	0x03D637FC B.NE 0x3D63880
	0x03D63800 LDR X0, [X19 + 0x3D8]
	0x03D63804 CBZ X0, 0x3D6395C
	0x03D63808 MOV X1, X21
	0x03D6380C LDP X20, X19, [X31 + 0x30]
	0x03D63810 LDP X22, X21, [X31 + 0x20]
	0x03D63814 LDP X24, X23, [X31 + 0x10]
	0x03D63818 MOV X2, X31
	0x03D6381C LDR X30, [X31], #0x40
	0x03D63820 B 0x3D7A4BC
	0x03D63824 LDR X8, [X22 + 0x10]
	0x03D63828 CBZ X8, 0x3D6395C
	0x03D6382C LDR X0, [X8 + 0x10]
	0x03D63830 MOV X1, X31
	0x03D63834 BL 0x32277A8
	0x03D63838 LDR X8, [X22 + 0x10]
	0x03D6383C CBZ X8, 0x3D6395C
	0x03D63840 TBZ X0, 0x0, 0x3D6389C
	0x03D63844 MOV X0, X8
	0x03D63848 MOV X1, X31
	0x03D6384C BL 0x3D6F6A0
	0x03D63850 ADRP X8, 0x403000
	0x03D63854 LDR X8, [X8 + 0x7C8]
	0x03D63858 MOV W22, W0
	0x03D6385C LDR X8, [X8]
	0x03D63860 MOV X0, X8
	0x03D63864 BL 0x1C16F10
	0x03D63868 MOV W1, W22
	0x03D6386C MOV W2, W31
	0x03D63870 MOV X3, X31
	0x03D63874 MOV X21, X0
	0x03D63878 BL 0x3D79F70
	0x03D6387C B 0x3D638C4
	0x03D63880 LDR W8, [X21 + 0x20]
	0x03D63884 MOV X0, X21
	0x03D63888 MOV X2, X31
	0x03D6388C CMP W8, 0x0
	0x03D63890 CSET W1, EQ
	0x03D63894 BL 0x3D79DCC
	0x03D63898 B 0x3D638C4
	0x03D6389C LDR X22, [X8 + 0x10]
	0x03D638A0 ADRP X8, 0x403000
	0x03D638A4 LDR X8, [X8 + 0x7C8]
	0x03D638A8 LDR X0, [X8]
	0x03D638AC BL 0x1C16F10
	0x03D638B0 MOV X1, X22
	0x03D638B4 MOV W2, W31
	0x03D638B8 MOV X3, X31
	0x03D638BC MOV X21, X0
	0x03D638C0 BL 0x3D7A000
	0x03D638C4 ADRP X8, 0x390000
	0x03D638C8 LDR X8, [X8 + 0x970]
	0x03D638CC LDR X0, [X8]
	0x03D638D0 LDR W8, [X0 + 0xE0]
	0x03D638D4 CBNZ W8, 0x3D638DC
	0x03D638D8 BL 0x1C16DFC
	0x03D638DC MOV X0, X31
	0x03D638E0 BL 0x3C01AB0
	0x03D638E4 CMP W0, 0x2
	0x03D638E8 MOVZ W8, 0x2
	0x03D638EC MOVZ W9, 0x8
	0x03D638F0 CSEL W8, W9, W8, CC
	0x03D638F4 CMP W8, W20
	0x03D638F8 B.EQ 0x3D6390C
	0x03D638FC LDR X0, [X19 + 0x3D8]
	0x03D63900 CBZ X0, 0x3D6395C
	0x03D63904 MOV X1, X31
	0x03D63908 BL 0x3D78AB4
	0x03D6390C LDR X0, [X19 + 0x3D8]
	0x03D63910 CBZ X0, 0x3D6395C
	0x03D63914 MOV X1, X21
	0x03D63918 MOV X2, X31
	0x03D6391C BL 0x3D7A634
	0x03D63920 TBZ X0, 0x0, 0x3D63938
	0x03D63924 LDP X20, X19, [X31 + 0x30]
	0x03D63928 LDP X22, X21, [X31 + 0x20]
	0x03D6392C LDP X24, X23, [X31 + 0x10]
	0x03D63930 LDR X30, [X31], #0x40
	0x03D63934 RET
	0x03D63938 LDR X0, [X19 + 0x3D8]
	0x03D6393C CBZ X0, 0x3D6395C
	0x03D63940 MOV X1, X21
	0x03D63944 LDP X20, X19, [X31 + 0x30]
	0x03D63948 LDP X22, X21, [X31 + 0x20]
	0x03D6394C LDP X24, X23, [X31 + 0x10]
	0x03D63950 MOV X2, X31
	0x03D63954 LDR X30, [X31], #0x40
	0x03D63958 B 0x3D7A24C
	0x03D6395C BL 0x1C16F20
	0x03D63960 MOV X1, X31
	0x03D63964 B 0x33BDD8C
	0x03D63968 STR D10, [X31 - 0x40]!
	0x03D6396C STP D9, D8, [X31 + 0x8]
	0x03D63970 STR X30, [X31 + 0x18]
	0x03D63974 STP X22, X21, [X31 + 0x20]
	0x03D63978 STP X20, X19, [X31 + 0x30]
	0x03D6397C ADRP X19, 0x684000
	0x03D63980 LDRB W8, [X19 + 0xCA3]
	0x03D63984 MOV V8.16B, V0.16B
	0x03D63988 MOV X20, X0
	0x03D6398C TBNZ X8, 0x0, 0x3D639A4
	0x03D63990 ADRP X0, 0x3BA000
	0x03D63994 LDR X0, [X0 + 0x688]
	0x03D63998 BL 0x1C16CF4
	0x03D6399C MOVZ W8, 0x1
	0x03D639A0 STRB W8, [X19 + 0xCA3]
	0x03D639A4 MOV X0, X20
	0x03D639A8 MOV X1, X31
	0x03D639AC BL 0x3DEC1BC
	0x03D639B0 MOV X19, X0
	0x03D639B4 MOV X0, X20
	0x03D639B8 MOV X1, X31
	0x03D639BC BL 0x3DEC1BC
	0x03D639C0 CBZ X0, 0x3D63B1C
	0x03D639C4 ADRP X22, 0x3BA000
	0x03D639C8 LDR X8, [X0]
	0x03D639CC LDR X22, [X22 + 0x688]
	0x03D639D0 MOV X21, X0
	0x03D639D4 LDRH W9, [X8 + 0x12E]
	0x03D639D8 LDR X1, [X22]
	0x03D639DC CBZ X9, 0x3D63A00
	0x03D639E0 LDR X10, [X8 + 0xB0]
	0x03D639E4 ADD X10, X10, 0x8
	0x03D639E8 LDUR X11, [X10 - 0x8]
	0x03D639EC CMP X11, X1
	0x03D639F0 B.EQ 0x3D63A10
	0x03D639F4 SUBS X9, X9, 0x1
	0x03D639F8 ADD X10, X10, 0x10
	0x03D639FC B.NE 0x3D639E8
	0x03D63A00 MOV X0, X21
	0x03D63A04 MOV W2, W31
	0x03D63A08 BL 0x1C5C788
	0x03D63A0C B 0x3D63A1C
	0x03D63A10 LDRSW X9, [X10]
	0x03D63A14 ADD X8, X8, X9, 0x4, LSL
	0x03D63A18 ADD X0, X8, 0x138
	0x03D63A1C LDP X8, X1, [X0]
	0x03D63A20 MOV X0, X21
	0x03D63A24 BLR X8
	0x03D63A28 MOV X0, X20
	0x03D63A2C MOV X1, X31
	0x03D63A30 MOV V9.16B, V1.16B
	0x03D63A34 BL 0x3DEC1BC
	0x03D63A38 CBZ X0, 0x3D63B1C
	0x03D63A3C LDR X8, [X0]
	0x03D63A40 LDR X1, [X22]
	0x03D63A44 MOV X20, X0
	0x03D63A48 LDRH W9, [X8 + 0x12E]
	0x03D63A4C CBZ X9, 0x3D63A70
	0x03D63A50 LDR X10, [X8 + 0xB0]
	0x03D63A54 ADD X10, X10, 0x8
	0x03D63A58 LDUR X11, [X10 - 0x8]
	0x03D63A5C CMP X11, X1
	0x03D63A60 B.EQ 0x3D63A80
	0x03D63A64 SUBS X9, X9, 0x1
	0x03D63A68 ADD X10, X10, 0x10
	0x03D63A6C B.NE 0x3D63A58
	0x03D63A70 MOV X0, X20
	0x03D63A74 MOV W2, W31
	0x03D63A78 BL 0x1C5C788
	0x03D63A7C B 0x3D63A8C
	0x03D63A80 LDRSW X9, [X10]
	0x03D63A84 ADD X8, X8, X9, 0x4, LSL
	0x03D63A88 ADD X0, X8, 0x138
	0x03D63A8C LDP X8, X1, [X0]
	0x03D63A90 MOV X0, X20
	0x03D63A94 BLR X8
	0x03D63A98 CBZ X19, 0x3D63B1C
	0x03D63A9C LDR X8, [X19]
	0x03D63AA0 LDR X1, [X22]
	0x03D63AA4 MOV V10.16B, V2.16B
	0x03D63AA8 LDRH W9, [X8 + 0x12E]
	0x03D63AAC CBZ X9, 0x3D63AD0
	0x03D63AB0 LDR X10, [X8 + 0xB0]
	0x03D63AB4 ADD X10, X10, 0x8
	0x03D63AB8 LDUR X11, [X10 - 0x8]
	0x03D63ABC CMP X11, X1
	0x03D63AC0 B.EQ 0x3D63AE0
	0x03D63AC4 SUBS X9, X9, 0x1
	0x03D63AC8 ADD X10, X10, 0x10
	0x03D63ACC B.NE 0x3D63AB8
	0x03D63AD0 MOVZ W2, 0x1
	0x03D63AD4 MOV X0, X19
	0x03D63AD8 BL 0x1C5C788
	0x03D63ADC B 0x3D63AF0
	0x03D63AE0 LDR W9, [X10]
	0x03D63AE4 ADD W9, W9, 0x1
	0x03D63AE8 ADD X8, X8, W9, 0x4, SXTW
	0x03D63AEC ADD X0, X8, 0x138
	0x03D63AF0 LDP X2, X1, [X0]
	0x03D63AF4 FNEG S0, S8
	0x03D63AF8 MOV X0, X19
	0x03D63AFC MOV V1.16B, V9.16B
	0x03D63B00 LDP X20, X19, [X31 + 0x30]
	0x03D63B04 LDP X22, X21, [X31 + 0x20]
	0x03D63B08 LDR X30, [X31 + 0x18]
	0x03D63B0C LDP D9, D8, [X31 + 0x8]
	0x03D63B10 MOV V2.16B, V10.16B
	0x03D63B14 LDR V10, [X31], #0x40
	0x03D63B18 BR X2
	0x03D63B1C BL 0x1C16F20
	0x03D63B20 STR X30, [X31 - 0x10]!
	0x03D63B24 LDR X8, [X0 + 0x3D8]
	0x03D63B28 CBZ X8, 0x3D63B48
	0x03D63B2C LDR X0, [X8 + 0x3C8]
	0x03D63B30 CBZ X0, 0x3D63B48
	0x03D63B34 LDR X8, [X0]
	0x03D63B38 LDR X3, [X8 + 0xB28]
	0x03D63B3C LDR X2, [X8 + 0xB30]
	0x03D63B40 LDR X30, [X31], #0x10
	0x03D63B44 BR X3
	0x03D63B48 BL 0x1C16F20
	0x03D63B4C STR X30, [X31 - 0x20]!
	0x03D63B50 STP X20, X19, [X31 + 0x10]
	0x03D63B54 ADRP X20, 0x684000
	0x03D63B58 LDRB W8, [X20 + 0xCA7]
	0x03D63B5C MOV X19, X0
	0x03D63B60 TBNZ X8, 0x0, 0x3D63B78
	0x03D63B64 ADRP X0, 0x403000
	0x03D63B68 LDR X0, [X0 + 0x7D8]
	0x03D63B6C BL 0x1C16CF4
	0x03D63B70 MOVZ W8, 0x1
	0x03D63B74 STRB W8, [X20 + 0xCA7]
	0x03D63B78 MOVZ W8, 0x1
	0x03D63B7C STRB W8, [X19 + 0x3F8]
	0x03D63B80 MOV X0, X19
	0x03D63B84 MOV X1, X31
	0x03D63B88 BL 0x3DF28A0
	0x03D63B8C MOV X0, X19
	0x03D63B90 MOV X1, X31
	0x03D63B94 BL 0x3DF23E8
	0x03D63B98 ADRP X8, 0x403000
	0x03D63B9C LDR X8, [X8 + 0x7D8]
	0x03D63BA0 LDR X1, [X19 + 0x3F0]
	0x03D63BA4 MOV X2, X0
	0x03D63BA8 LDR X3, [X8]
	0x03D63BAC MOV X0, X19
	0x03D63BB0 BL 0x22A9E7C
	0x03D63BB4 STR X0, [X19 + 0x3F0]
	0x03D63BB8 CBZ X0, 0x3D63BEC
	0x03D63BBC MOV X1, X19
	0x03D63BC0 BL 0x3D63C40
	0x03D63BC4 LDR X8, [X19 + 0x440]
	0x03D63BC8 CBZ X8, 0x3D63BDC
	0x03D63BCC LDR X0, [X8 + 0x40]
	0x03D63BD0 LDR X1, [X8 + 0x28]
	0x03D63BD4 LDR X9, [X8 + 0x18]
	0x03D63BD8 BLR X9
	0x03D63BDC STRB W31, [X19 + 0x3F8]
	0x03D63BE0 LDP X20, X19, [X31 + 0x10]
	0x03D63BE4 LDR X30, [X31], #0x20
	0x03D63BE8 RET
	0x03D63BEC BL 0x1C16F20
	0x03D63BF0 B 0x3D63BFC
	0x03D63BF4 B 0x3D63BFC
	0x03D63BF8 B 0x3D63BFC
	0x03D63BFC CMP W1, 0x1
	0x03D63C00 B.NE 0x3D63C20
	0x03D63C04 BL 0x3EB1AD0
	0x03D63C08 LDR X20, [X0]
	0x03D63C0C BL 0x3EB1AE0
	0x03D63C10 STRB W31, [X19 + 0x3F8]
	0x03D63C14 CBZ X20, 0x3D63BE0
	0x03D63C18 MOV X0, X20
	0x03D63C1C BL 0x1C16F18
	0x03D63C20 STRB W31, [X19 + 0x3F8]
	0x03D63C24 B 0x3D63C30
	0x03D63C28 STRB W31, [X19 + 0x3F8]
	0x03D63C2C CBNZ X20, 0x3D63C34
	0x03D63C30 BL 0x1D2C690
	0x03D63C34 MOV X0, X20
	0x03D63C38 BL 0x1C16F18
	0x03D63C3C BL 0x1990590
	0x03D63C40 SUB X31, X31, 0xB0
	0x03D63C44 STR D8, [X31 + 0x40]
	0x03D63C48 STP X29, X30, [X31 + 0x50]
	0x03D63C4C STP X28, X27, [X31 + 0x60]
	0x03D63C50 STP X26, X25, [X31 + 0x70]
	0x03D63C54 STP X24, X23, [X31 + 0x80]
	0x03D63C58 STP X22, X21, [X31 + 0x90]
	0x03D63C5C STP X20, X19, [X31 + 0xA0]
	0x03D63C60 ADRP X21, 0x684000
	0x03D63C64 LDRB W8, [X21 + 0xCAB]
	0x03D63C68 MOV X19, X1
	0x03D63C6C MOV X20, X0
	0x03D63C70 TBNZ X8, 0x0, 0x3D63CD0
	0x03D63C74 ADRP X0, 0x3BA000
	0x03D63C78 LDR X0, [X0 + 0xC28]
	0x03D63C7C BL 0x1C16CF4
	0x03D63C80 ADRP X0, 0x3BA000
	0x03D63C84 LDR X0, [X0 + 0xC30]
	0x03D63C88 BL 0x1C16CF4
	0x03D63C8C ADRP X0, 0x3BA000
	0x03D63C90 LDR X0, [X0 + 0xC38]
	0x03D63C94 BL 0x1C16CF4
	0x03D63C98 ADRP X0, 0x3BA000
	0x03D63C9C LDR X0, [X0 + 0xC40]
	0x03D63CA0 BL 0x1C16CF4
	0x03D63CA4 ADRP X0, 0x403000
	0x03D63CA8 LDR X0, [X0 + 0x7E0]
	0x03D63CAC BL 0x1C16CF4
	0x03D63CB0 ADRP X0, 0x403000
	0x03D63CB4 LDR X0, [X0 + 0x7E8]
	0x03D63CB8 BL 0x1C16CF4
	0x03D63CBC ADRP X0, 0x390000
	0x03D63CC0 LDR X0, [X0 + 0x5A8]
	0x03D63CC4 BL 0x1C16CF4
	0x03D63CC8 MOVZ W8, 0x1
	0x03D63CCC STRB W8, [X21 + 0xCAB]
	0x03D63CD0 STP X31, X31, [X31 + 0x28]
	0x03D63CD4 STR X31, [X31 + 0x38]
	0x03D63CD8 LDRB W8, [X20 + 0x10]
	0x03D63CDC CBZ W8, 0x3D63EF8
	0x03D63CE0 LDR X8, [X20 + 0x20]
	0x03D63CE4 CBZ X8, 0x3D63E84
	0x03D63CE8 CBZ X19, 0x3D63E84
	0x03D63CEC LDR X0, [X19 + 0x420]
	0x03D63CF0 CBZ X0, 0x3D63E84
	0x03D63CF4 ADRP X22, 0x390000
	0x03D63CF8 LDR W21, [X8 + 0x18]
	0x03D63CFC LDR X22, [X22 + 0x5A8]
	0x03D63D00 MOV X1, X31
	0x03D63D04 BL 0x3D70A04
	0x03D63D08 LDR X8, [X22]
	0x03D63D0C MOV W22, W0
	0x03D63D10 LDR W9, [X8 + 0xE0]
	0x03D63D14 CBNZ W9, 0x3D63D20
	0x03D63D18 MOV X0, X8
	0x03D63D1C BL 0x1C16DFC
	0x03D63D20 MOV W0, W21
	0x03D63D24 MOV W1, W22
	0x03D63D28 MOV X2, X31
	0x03D63D2C BL 0x337EE94
	0x03D63D30 LDR X9, [X20 + 0x20]
	0x03D63D34 CBZ X9, 0x3D63E84
	0x03D63D38 ADRP X27, 0x403000
	0x03D63D3C LDR X27, [X27 + 0x7E8]
	0x03D63D40 MOV W21, W0
	0x03D63D44 MOV W28, W31
	0x03D63D48 MOV W22, W31
	0x03D63D4C CMP W28, W21
	0x03D63D50 B.GE 0x3D63E88
	0x03D63D54 LDR W8, [X9 + 0x18]
	0x03D63D58 CMP W22, W8
	0x03D63D5C B.GE 0x3D63E88
	0x03D63D60 LDR X2, [X27]
	0x03D63D64 ADD X8, X31, 0x8
	0x03D63D68 MOV X0, X9
	0x03D63D6C MOV W1, W22
	0x03D63D70 BL 0x318A604
	0x03D63D74 LDR X26, [X31 + 0x10]
	0x03D63D78 LDR W25, [X31 + 0x8]
	0x03D63D7C LDR V8, [X31 + 0x18]
	0x03D63D80 LDUR X24, [X31 + 0x1C]
	0x03D63D84 LDR W29, [X31 + 0x24]
	0x03D63D88 MOV X0, X26
	0x03D63D8C MOV X1, X31
	0x03D63D90 BL 0x32277A8
	0x03D63D94 LDR X8, [X19 + 0x420]
	0x03D63D98 CBZ X8, 0x3D63E84
	0x03D63D9C TBZ X0, 0x0, 0x3D63DE8
	0x03D63DA0 MOV X0, X8
	0x03D63DA4 MOV X1, X31
	0x03D63DA8 BL 0x3D70A04
	0x03D63DAC SUB W8, W0, 0x1
	0x03D63DB0 CMP W8, W25
	0x03D63DB4 B.LT 0x3D63E78
	0x03D63DB8 LDR X0, [X19 + 0x420]
	0x03D63DBC CBZ X0, 0x3D63E84
	0x03D63DC0 MOV W1, W25
	0x03D63DC4 MOV X2, X31
	0x03D63DC8 BL 0x3D70878
	0x03D63DCC CBZ X0, 0x3D63E84
	0x03D63DD0 MOV X25, X0
	0x03D63DD4 LDR X0, [X0 + 0x10]
	0x03D63DD8 MOV X1, X31
	0x03D63DDC BL 0x32277A8
	0x03D63DE0 TBNZ X0, 0x0, 0x3D63E18
	0x03D63DE4 B 0x3D63E78
	0x03D63DE8 MOV X0, X8
	0x03D63DEC MOV X1, X26
	0x03D63DF0 MOV X2, X31
	0x03D63DF4 BL 0x3D75730
	0x03D63DF8 TBZ X0, 0x0, 0x3D63E78
	0x03D63DFC LDR X0, [X19 + 0x420]
	0x03D63E00 CBZ X0, 0x3D63E84
	0x03D63E04 MOV X1, X26
	0x03D63E08 MOV X2, X31
	0x03D63E0C BL 0x3D75CA0
	0x03D63E10 MOV X25, X0
	0x03D63E14 CBZ X0, 0x3D63E78
	0x03D63E18 LDR X26, [X19 + 0x420]
	0x03D63E1C MOV X0, X25
	0x03D63E20 MOV X1, X31
	0x03D63E24 BL 0x3D6F764
	0x03D63E28 CBZ X26, 0x3D63E84
	0x03D63E2C MOV W1, W0
	0x03D63E30 MOV X0, X26
	0x03D63E34 MOV W2, W28
	0x03D63E38 MOV X3, X31
	0x03D63E3C ADD W23, W28, 0x1
	0x03D63E40 BL 0x3D75FC8
	0x03D63E44 AND W1, W29, 0x1
	0x03D63E48 MOV X0, X25
	0x03D63E4C MOV X2, X31
	0x03D63E50 BL 0x3D6F8FC
	0x03D63E54 MOV X0, X25
	0x03D63E58 MOV X1, X24
	0x03D63E5C MOV X2, X31
	0x03D63E60 BL 0x3D6F940
	0x03D63E64 MOV X0, X25
	0x03D63E68 MOV V0.16B, V8.16B
	0x03D63E6C MOV X1, X31
	0x03D63E70 BL 0x3D6F9BC
	0x03D63E74 MOV W28, W23
	0x03D63E78 LDR X9, [X20 + 0x20]
	0x03D63E7C ADD W22, W22, 0x1
	0x03D63E80 CBNZ X9, 0x3D63D4C
	0x03D63E84 BL 0x1C16F20
	0x03D63E88 LDR X0, [X19 + 0x3D8]
	0x03D63E8C CBZ X0, 0x3D63E84
	0x03D63E90 MOV X1, X31
	0x03D63E94 BL 0x3D78AB4
	0x03D63E98 LDR X0, [X20 + 0x18]
	0x03D63E9C CBZ X0, 0x3D63E84
	0x03D63EA0 ADRP X8, 0x3BA000
	0x03D63EA4 LDR X8, [X8 + 0xC40]
	0x03D63EA8 LDR X1, [X8]
	0x03D63EAC ADD X8, X31, 0x28
	0x03D63EB0 BL 0x301CB58
	0x03D63EB4 ADRP X20, 0x3BA000
	0x03D63EB8 LDR X20, [X20 + 0xC30]
	0x03D63EBC LDR X1, [X20]
	0x03D63EC0 ADD X0, X31, 0x28
	0x03D63EC4 BL 0x2BC4350
	0x03D63EC8 TBZ X0, 0x0, 0x3D63EE4
	0x03D63ECC LDR X0, [X19 + 0x3D8]
	0x03D63ED0 CBZ X0, 0x3D63F1C
	0x03D63ED4 LDR X1, [X31 + 0x38]
	0x03D63ED8 MOV X2, X31
	0x03D63EDC BL 0x3D7A24C
	0x03D63EE0 B 0x3D63EBC
	0x03D63EE4 ADRP X8, 0x3BA000
	0x03D63EE8 LDR X8, [X8 + 0xC28]
	0x03D63EEC ADD X0, X31, 0x28
	0x03D63EF0 LDR X1, [X8]
	0x03D63EF4 BL 0x2BC434C
	0x03D63EF8 LDP X20, X19, [X31 + 0xA0]
	0x03D63EFC LDP X22, X21, [X31 + 0x90]
	0x03D63F00 LDP X24, X23, [X31 + 0x80]
	0x03D63F04 LDP X26, X25, [X31 + 0x70]
	0x03D63F08 LDP X28, X27, [X31 + 0x60]
	0x03D63F0C LDP X29, X30, [X31 + 0x50]
	0x03D63F10 LDR V8, [X31 + 0x40]
	0x03D63F14 ADD X31, X31, 0xB0
	0x03D63F18 RET
	0x03D63F1C BL 0x1C16F20
	0x03D63F20 B 0x3D63F28
	0x03D63F24 B 0x3D63F28
	0x03D63F28 MOV X19, X0
	0x03D63F2C CMP W1, 0x1
	0x03D63F30 B.NE 0x3D63F64
	0x03D63F34 MOV X0, X19
	0x03D63F38 BL 0x3EB1AD0
	0x03D63F3C LDR X20, [X0]
	0x03D63F40 BL 0x3EB1AE0
	0x03D63F44 ADRP X8, 0x3BA000
	0x03D63F48 LDR X8, [X8 + 0xC28]
	0x03D63F4C ADD X0, X31, 0x28
	0x03D63F50 LDR X1, [X8]
	0x03D63F54 BL 0x2BC434C
	0x03D63F58 CBZ X20, 0x3D63EF8
	0x03D63F5C MOV X0, X20
	0x03D63F60 BL 0x1C16F18
	0x03D63F64 MOV X20, X31
	0x03D63F68 B 0x3D63F70
	0x03D63F6C MOV X19, X0
	0x03D63F70 ADRP X8, 0x3BA000
	0x03D63F74 LDR X8, [X8 + 0xC28]
	0x03D63F78 LDR X1, [X8]
	0x03D63F7C ADD X0, X31, 0x28
	0x03D63F80 BL 0x2BC434C
	0x03D63F84 CBNZ X20, 0x3D63F90
	0x03D63F88 MOV X0, X19
	0x03D63F8C BL 0x1D2C690
	0x03D63F90 MOV X0, X20
	0x03D63F94 BL 0x1C16F18
	0x03D63F98 BL 0x1990590
	0x03D63F9C SUB X31, X31, 0x80
	0x03D63FA0 STR X30, [X31 + 0x30]
	0x03D63FA4 STP X26, X25, [X31 + 0x40]
	0x03D63FA8 STP X24, X23, [X31 + 0x50]
	0x03D63FAC STP X22, X21, [X31 + 0x60]
	0x03D63FB0 STP X20, X19, [X31 + 0x70]
	0x03D63FB4 ADRP X21, 0x684000
	0x03D63FB8 LDRB W8, [X21 + 0xCAA]
	0x03D63FBC MOV X20, X1
	0x03D63FC0 MOV X19, X0
	0x03D63FC4 TBNZ X8, 0x0, 0x3D6403C
	0x03D63FC8 ADRP X0, 0x390000
	0x03D63FCC LDR X0, [X0 + 0xE00]
	0x03D63FD0 BL 0x1C16CF4
	0x03D63FD4 ADRP X0, 0x3B9000
	0x03D63FD8 LDR X0, [X0 + 0x110]
	0x03D63FDC BL 0x1C16CF4
	0x03D63FE0 ADRP X0, 0x403000
	0x03D63FE4 LDR X0, [X0 + 0x5E0]
	0x03D63FE8 BL 0x1C16CF4
	0x03D63FEC ADRP X0, 0x3B9000
	0x03D63FF0 LDR X0, [X0 + 0x118]
	0x03D63FF4 BL 0x1C16CF4
	0x03D63FF8 ADRP X0, 0x390000
	0x03D63FFC LDR X0, [X0 + 0xE18]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x685000
	015 Move W8, [X19+3230]
	016 Move X25, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {69}
	022 Move X0, 0x404000
	023 Move X0, [X0+1896]
	024 Call 0x1C17CF4
	025 Move X0, 0x3BA000
	026 Move X0, [X0+264]
	027 Call 0x1C17CF4
	028 Move X0, 0x404000
	029 Move X0, [X0+1888]
	030 Call 0x1C17CF4
	031 Move X0, 0x404000
	032 Move X0, [X0+1904]
	033 Call 0x1C17CF4
	034 Move X0, 0x391000
	035 Move X0, [X0+3584]
	036 Call 0x1C17CF4
	037 Move X0, 0x3BA000
	038 Move X0, [X0+272]
	039 Call 0x1C17CF4
	040 Move X0, 0x3BA000
	041 Move X0, [X0+280]
	042 Call 0x1C17CF4
	043 Move X0, 0x391000
	044 Move X0, [X0+3608]
	045 Call 0x1C17CF4
	046 Move X0, 0x404000
	047 Move X0, [X0+1912]
	048 Call 0x1C17CF4
	049 Move X0, 0x404000
	050 Move X0, [X0+1920]
	051 Call 0x1C17CF4
	052 Move X0, 0x404000
	053 Move X0, [X0+1928]
	054 Call 0x1C17CF4
	055 Move X0, 0x404000
	056 Move X0, [X0+1936]
	057 Call 0x1C17CF4
	058 Move X0, 0x404000
	059 Move X0, [X0+1944]
	060 Call 0x1C17CF4
	061 Move X0, 0x404000
	062 Move X0, [X0+1952]
	063 Call 0x1C17CF4
	064 Move X0, 0x404000
	065 Move X0, [X0+1960]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X19+3230], W8
	069 Move [X31+24], X31
	070 Move [X31+20], W31
	071 Move X0, [X20+1056]
	072 Compare X0, 0
	073 JumpIfEqual {485}
	074 Move X19, 0x404000
	075 Move X19, [X19+1888]
	076 Move X1, X31
	077 Call Columns.get_visibleList, X0
	078 Move X1, [X19]
	079 Call Enumerable.Count, X0
	080 Move X8, [X20+1056]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CSET not yet implemented."
	083 Compare X8, 0
	084 JumpIfEqual {485}
	085 Move X0, X8
	086 Move X1, X31
	087 Call Columns.get_visibleList, X0
	088 Compare X0, 0
	089 JumpIfEqual {485}
	090 Move X10, 0x3BA000
	091 Move X8, [X0]
	092 Move X10, [X10+272]
	093 Move X21, X0
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Move X1, [X10]
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move X0, X21
	105 Move W2, W31
	106 Call 0x1C5D788
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Add X8, X8, X9
	109 Add X0, X8, 312
	110 Move X8, [X0]
	111 Move X1, [X0+8]
	112 Move X27, 0x391000
	113 Move X29, 0x3BA000
	114 Move X26, 0x391000
	115 Move X27, [X27+3608]
	116 Move X29, [X29+280]
	117 Move X26, [X26+3584]
	118 Move X0, X21
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move X22, X0
	121 Compare X0, 0
	122 JumpIfEqual {488}
	123 Move X19, 0x3BA000
	124 Move X19, [X19+264]
	125 Move X21, X31
	126 Move X8, [X22]
	127 Move X1, [X27]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move X0, X22
	138 Move W2, W31
	139 Call 0x1C5D788
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Add X8, X8, X9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X1, [X0+8]
	145 Move X0, X22
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {223}
	151 Move X8, [X22]
	152 Move X1, [X29]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X22
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X22
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X8, [X20+1056]
	173 Compare X8, 0
	174 JumpIfEqual {478}
	175 Move W8, [X8+44]
	176 Move X23, X0
	177 NotImplemented "Instruction CMP not yet implemented."
	178 NotImplemented "Instruction CSET not yet implemented."
	179 And W8, W24, W8
	180 Move TEMP, X8
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {190}
	184 Compare X23, 0
	185 JumpIfEqual {482}
	186 Move W8, [X23+96]
	187 Compare W8, 0
	188 JumpIfEqual {190}
	189 Move W24, W31
	190 Compare X21, 0
	191 JumpIfNotEqual {126}
	192 Move X0, [X20+1024]
	193 Compare X0, 0
	194 JumpIfEqual {489}
	195 Move X3, [X19]
	196 Add X2, X31, 24
	197 Move X1, X23
	198 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	199 Move X21, X31
	200 Move TEMP, X0
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfNotEqual {126}
	204 Move X8, [X31+24]
	205 Compare X8, 0
	206 JumpIfEqual {491}
	207 Move X0, [X8+16]
	208 Compare X0, 0
	209 JumpIfEqual {493}
	210 Move X1, X31
	211 Call VisualElement.get_layout, X0
	212 Compare X25, 0
	213 JumpIfEqual {492}
	214 Move S5, [X25+144]
	215 Move S4, [X25+148]
	216 Add S2, S0, S2
	217 NotImplemented "Instruction FCMP not yet implemented."
	218 NotImplemented "Instruction FCCMP not yet implemented."
	219 NotImplemented "Instruction FCCMP not yet implemented."
	220 Add S0, S1, S3
	221 NotImplemented "Instruction FCCMP not yet implemented."
	222 NotImplemented "Instruction CSEL not yet implemented."
	223 Move X23, X31
	224 Move W19, 10
	225 Compare X22, 0
	226 JumpIfEqual {248}
	227 Move X8, [X22]
	228 Move X1, [X26]
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Compare X9, 0
	231 JumpIfEqual {238}
	232 Move X10, [X8+176]
	233 Add X10, X10, 8
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Subtract X9, X9, 1
	237 Add X10, X10, 16
	238 Move X0, X22
	239 Move W2, W31
	240 Call 0x1C5D788
	241 NotImplemented "Instruction LDRSW not yet implemented."
	242 Add X8, X8, X9
	243 Add X0, X8, 312
	244 Move X8, [X0]
	245 Move X1, [X0+8]
	246 Move X0, X22
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Compare X23, 0
	249 JumpIfNotEqual {486}
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Compare W19, 0
	252 JumpIfNotEqual {464}
	253 Compare X25, 0
	254 JumpIfEqual {485}
	255 Move X8, 0x404000
	256 Move X8, [X8+1896]
	257 Move X19, 0x404000
	258 Move X22, [X25+184]
	259 Move X0, [X8]
	260 Move X19, [X19+1920]
	261 Call 0x1C17F10
	262 Move X2, [X19]
	263 Move X1, X20
	264 Move X3, X31
	265 Move X23, X0
	266 Call Action`1<Object>..ctor, X0, X1, X2
	267 Compare X22, 0
	268 JumpIfEqual {485}
	269 Move X8, 0x404000
	270 Move X8, [X8+1960]
	271 And W31, W24, 1
	272 Move X0, X22
	273 Move X2, X23
	274 Move X1, [X8]
	275 Move W8, 1
	276 NotImplemented "Instruction CINC not yet implemented."
	277 Move X4, X31
	278 Call DropdownMenu.AppendAction, X0, X1, X2, X3
	279 Move X0, [X25+184]
	280 Compare X0, 0
	281 JumpIfEqual {485}
	282 Move X1, X31
	283 Move X2, X31
	284 Move [X31+8], X21
	285 Call DropdownMenu.AppendSeparator, X0, X1
	286 Move X0, [X20+1056]
	287 Compare X0, 0
	288 JumpIfEqual {485}
	289 Move X1, X31
	290 Move X28, X27
	291 Move X21, X25
	292 Call Columns.GetEnumerator, X0
	293 Move X22, X0
	294 Compare X0, 0
	295 JumpIfEqual {490}
	296 Move X19, 0x404000
	297 Move X19, [X19+1936]
	298 Move X8, [X22]
	299 Move X1, [X28]
	300 NotImplemented "Instruction LDRH not yet implemented."
	301 Compare X9, 0
	302 JumpIfEqual {309}
	303 Move X10, [X8+176]
	304 Add X10, X10, 8
	305 NotImplemented "Instruction LDUR not yet implemented."
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Subtract X9, X9, 1
	308 Add X10, X10, 16
	309 Move X0, X22
	310 Move W2, W31
	311 Call 0x1C5D788
	312 NotImplemented "Instruction LDRSW not yet implemented."
	313 Add X8, X8, X9
	314 Add X0, X8, 312
	315 Move X8, [X0]
	316 Move X1, [X0+8]
	317 Move X0, X22
	318 NotImplemented "Instruction BLR not yet implemented."
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfNotEqual {422}
	323 Move X8, 0x404000
	324 Move X8, [X8+1944]
	325 Move X0, [X8]
	326 Call 0x1C17F10
	327 Move X23, X0
	328 Move X1, X31
	329 Call Object..ctor, X0
	330 Compare X23, 0
	331 JumpIfEqual {480}
	332 Move [X23+24], X20
	333 Move X8, [X22]
	334 Move X1, [X29]
	335 NotImplemented "Instruction LDRH not yet implemented."
	336 Compare X9, 0
	337 JumpIfEqual {344}
	338 Move X10, [X8+176]
	339 Add X10, X10, 8
	340 NotImplemented "Instruction LDUR not yet implemented."
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Subtract X9, X9, 1
	343 Add X10, X10, 16
	344 Move X0, X22
	345 Move W2, W31
	346 Call 0x1C5D788
	347 NotImplemented "Instruction LDRSW not yet implemented."
	348 Add X8, X8, X9
	349 Add X0, X8, 312
	350 Move X8, [X0]
	351 Move X1, [X0+8]
	352 Move X0, X22
	353 NotImplemented "Instruction BLR not yet implemented."
	354 Move [X23+16], X0
	355 Compare X0, 0
	356 JumpIfEqual {481}
	357 Move X24, [X0+24]
	358 Move X0, X24
	359 Move X1, X31
	360 Call String.IsNullOrEmpty, X0
	361 Move TEMP, X0
	362 And TEMP, TEMP, 1
	363 Compare TEMP, 1
	364 JumpIfNotEqual {369}
	365 Move X8, [X23+16]
	366 Compare X8, 0
	367 JumpIfEqual {483}
	368 Move X24, [X8+16]
	369 Move X0, X24
	370 Move X1, X31
	371 Call String.IsNullOrEmpty, X0
	372 Move TEMP, X0
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfNotEqual {392}
	376 Move X0, [X23+16]
	377 Compare X0, 0
	378 JumpIfEqual {484}
	379 Move X1, X31
	380 Call Column.get_index, X0
	381 Move [X31+20], W0
	382 Add X0, X31, 20
	383 Move X1, X31
	384 Call Int32.ToString, X0
	385 Move X1, X0
	386 Move X8, 0x404000
	387 Move X8, [X8+1952]
	388 Move X0, [X8]
	389 Move X2, X31
	390 Call String.Concat, X0, X1
	391 Move X24, X0
	392 Move X8, 0x404000
	393 Move X25, [X21+184]
	394 Move X8, [X8+1896]
	395 Move X0, [X8]
	396 Call 0x1C17F10
	397 Move X8, 0x404000
	398 Move X8, [X8+1928]
	399 Move X26, X0
	400 Move X2, [X8]
	401 Move X1, X23
	402 Move X3, X31
	403 Call Action`1<Object>..ctor, X0, X1, X2
	404 Move X8, 0x404000
	405 Move X8, [X8+1904]
	406 Move X0, [X8]
	407 Call 0x1C17F10
	408 Move X2, [X19]
	409 Move X27, X0
	410 Move X1, X23
	411 Move X3, X31
	412 Call Func`2<Object, Int32Enum>..ctor, X0, X1, X2
	413 Compare X25, 0
	414 JumpIfEqual {479}
	415 Move X0, X25
	416 Move X1, X24
	417 Move X2, X26
	418 Move X3, X27
	419 Move X4, X31
	420 Move X5, X31
	421 Call DropdownMenu.AppendAction, X0, X1, X2, X3, X4
	422 Move X24, X21
	423 Move X21, 0x391000
	424 Move X21, [X21+3584]
	425 Move X23, X31
	426 Move W19, 17
	427 Compare X22, 0
	428 JumpIfEqual {450}
	429 Move X8, [X22]
	430 Move X1, [X21]
	431 NotImplemented "Instruction LDRH not yet implemented."
	432 Compare X9, 0
	433 JumpIfEqual {440}
	434 Move X10, [X8+176]
	435 Add X10, X10, 8
	436 NotImplemented "Instruction LDUR not yet implemented."
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Subtract X9, X9, 1
	439 Add X10, X10, 16
	440 Move X0, X22
	441 Move W2, W31
	442 Call 0x1C5D788
	443 NotImplemented "Instruction LDRSW not yet implemented."
	444 Add X8, X8, X9
	445 Add X0, X8, 312
	446 Move X8, [X0]
	447 Move X1, [X0+8]
	448 Move X0, X22
	449 NotImplemented "Instruction BLR not yet implemented."
	450 Compare X23, 0
	451 JumpIfNotEqual {486}
	452 Move X2, [X31+8]
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Compare W19, 0
	455 JumpIfNotEqual {464}
	456 Move X8, [X20+1080]
	457 Compare X8, 0
	458 JumpIfEqual {464}
	459 Move X9, [X8+24]
	460 Move X0, [X8+64]
	461 Move X3, [X8+40]
	462 Move X1, X24
	463 NotImplemented "Instruction BLR not yet implemented."
	464 Move X20, [X31+112]
	465 Move X19, [X31+120]
	466 Move X22, [X31+96]
	467 Move X21, [X31+104]
	468 Move X24, [X31+80]
	469 Move X23, [X31+88]
	470 Move X26, [X31+64]
	471 Move X25, [X31+72]
	472 Move X28, [X31+48]
	473 Move X27, [X31+56]
	474 Move X29, [X31+32]
	475 Move X30, [X31+40]
	476 Add X31, X31, 128
	477 Return 
	478 Call 0x1C17F20
	479 Call 0x1C17F20
	480 Call 0x1C17F20
	481 Call 0x1C17F20
	482 Call 0x1C17F20
	483 Call 0x1C17F20
	484 Call 0x1C17F20
	485 Call 0x1C17F20
	486 Move X0, X23
	487 Call 0x1C17F18
	488 Call 0x1C17F20
	489 Call 0x1C17F20
	490 Call 0x1C17F20
	491 Call 0x1C17F20
	492 Call 0x1C17F20
	493 Call 0x1C17F20
	494 Move X21, X31
	495 Move W24, 1
	496 NotImplemented "Instruction CMP not yet implemented."
	497 Call 0x3EB2AD0
	498 Move X23, [X0]
	499 Call 0x3EB2AE0
	500 Move W19, W31
	501 Compare X22, 0
	502 JumpIfNotEqual {227}
	503 Move X19, X0
	504 Move X23, X31
	505 Move X19, X0
	506 Compare X22, 0
	507 JumpIfEqual {529}
	508 Move X8, [X22]
	509 Move X1, [X26]
	510 NotImplemented "Instruction LDRH not yet implemented."
	511 Compare X9, 0
	512 JumpIfEqual {519}
	513 Move X10, [X8+176]
	514 Add X10, X10, 8
	515 NotImplemented "Instruction LDUR not yet implemented."
	516 NotImplemented "Instruction CMP not yet implemented."
	517 Subtract X9, X9, 1
	518 Add X10, X10, 16
	519 Move X0, X22
	520 Move W2, W31
	521 Call 0x1C5D788
	522 NotImplemented "Instruction LDRSW not yet implemented."
	523 Add X8, X8, X9
	524 Add X0, X8, 312
	525 Move X8, [X0]
	526 Move X1, [X0+8]
	527 Move X0, X22
	528 NotImplemented "Instruction BLR not yet implemented."
	529 Compare X23, 0
	530 JumpIfEqual {573}
	531 Move X0, X23
	532 Call 0x1C17F18
	533 Move X24, X21
	534 Move X21, 0x391000
	535 Move X21, [X21+3584]
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Call 0x3EB2AD0
	538 Move X23, [X0]
	539 Call 0x3EB2AE0
	540 Move W19, W31
	541 Compare X22, 0
	542 JumpIfNotEqual {429}
	543 Move X19, X0
	544 Move X23, X31
	545 Move X19, X0
	546 Compare X22, 0
	547 JumpIfEqual {571}
	548 Move X8, [X22]
	549 Move X10, 0x391000
	550 NotImplemented "Instruction LDRH not yet implemented."
	551 Move X10, [X10+3584]
	552 Move X1, [X10]
	553 Compare X9, 0
	554 JumpIfEqual {561}
	555 Move X10, [X8+176]
	556 Add X10, X10, 8
	557 NotImplemented "Instruction LDUR not yet implemented."
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Subtract X9, X9, 1
	560 Add X10, X10, 16
	561 Move X0, X22
	562 Move W2, W31
	563 Call 0x1C5D788
	564 NotImplemented "Instruction LDRSW not yet implemented."
	565 Add X8, X8, X9
	566 Add X0, X8, 312
	567 Move X8, [X0]
	568 Move X1, [X0+8]
	569 Move X0, X22
	570 NotImplemented "Instruction BLR not yet implemented."
	571 Compare X23, 0
	572 JumpIfNotEqual {575}
	573 Move X0, X19
	574 Call 0x1D2D690
	575 Move X0, X23
	576 Call 0x1C17F18
	577 Call 0x1991590

Method: System.Void OnMoveManipulatorActivated(UnityEngine.UIElements.Internal.ColumnMover mover)

Disassembly:
	0x03D64008 LDR X0, [X0 + 0x5E8]
	0x03D6400C BL 0x1C16CF4
	0x03D64010 ADRP X0, 0x402000
	0x03D64014 LDR X0, [X0 + 0x7F0]
	0x03D64018 BL 0x1C16CF4
	0x03D6401C ADRP X0, 0x402000
	0x03D64020 LDR X0, [X0 + 0x5F8]
	0x03D64024 BL 0x1C16CF4
	0x03D64028 ADRP X0, 0x402000
	0x03D6402C LDR X0, [X0 + 0x7F8]
	0x03D64030 BL 0x1C16CF4
	0x03D64034 MOVZ W8, 0x1
	0x03D64038 STRB W8, [X21 + 0xCAA]
	0x03D6403C STRB W31, [X31 + 0x3A]
	0x03D64040 STRH W31, [X31 + 0x38]
	0x03D64044 LDR X8, [X19 + 0x18]
	0x03D64048 CBZ X8, 0x3D64534
	0x03D6404C LDP W2, W9, [X8 + 0x18]
	0x03D64050 ADD W9, W9, 0x1
	0x03D64054 CMP W2, 0x1
	0x03D64058 STP W31, W9, [X8 + 0x18]
	0x03D6405C B.LT 0x3D64070
	0x03D64060 LDR X0, [X8 + 0x10]
	0x03D64064 MOV W1, W31
	0x03D64068 MOV X3, X31
	0x03D6406C BL 0x339FA34
	0x03D64070 LDR X8, [X19 + 0x20]
	0x03D64074 CBZ X8, 0x3D64534
	0x03D64078 LDP W2, W9, [X8 + 0x18]
	0x03D6407C ADD W9, W9, 0x1
	0x03D64080 CMP W2, 0x1
	0x03D64084 STP W31, W9, [X8 + 0x18]
	0x03D64088 B.LT 0x3D6409C
	0x03D6408C LDR X0, [X8 + 0x10]
	0x03D64090 MOV W1, W31
	0x03D64094 MOV X3, X31
	0x03D64098 BL 0x339FA34
	0x03D6409C CBZ X20, 0x3D64534
	0x03D640A0 LDR X0, [X20 + 0x3D8]
	0x03D640A4 CBZ X0, 0x3D64534
	0x03D640A8 ADRP X23, 0x38F000
	0x03D640AC ADRP X24, 0x38F000
	0x03D640B0 LDR X23, [X23 + 0xE00]
	0x03D640B4 LDR X24, [X24 + 0xE18]
	0x03D640B8 MOV X1, X31
	0x03D640BC BL 0x3D7A1A8
	0x03D640C0 MOV X21, X0
	0x03D640C4 CBZ X0, 0x3D64538
	0x03D640C8 ADRP X22, 0x402000
	0x03D640CC ADRP X25, 0x402000
	0x03D640D0 LDR X22, [X22 + 0x5E0]
	0x03D640D4 LDR X25, [X25 + 0x5E8]
	0x03D640D8 LDR X8, [X21]
	0x03D640DC LDR X1, [X24]
	0x03D640E0 LDRH W9, [X8 + 0x12E]
	0x03D640E4 CBZ X9, 0x3D64108
	0x03D640E8 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x684000
	006 Move W8, [X21+3231]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x3B9000
	014 Move X0, [X0+296]
	015 Call 0x1C17CF4
	016 Move X0, 0x3BA000
	017 Move X0, [X0+3856]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3231], W8
	021 Move X0, [X19+1048]
	022 Compare X0, 0
	023 JumpIfEqual {66}
	024 Move X1, X31
	025 Call VisualElement.get_style, X0
	026 Compare X20, 0
	027 JumpIfEqual {66}
	028 Move X8, 0x3BA000
	029 Move X8, [X8+3856]
	030 Move X19, X0
	031 Move W0, [X20+56]
	032 Move X1, [X8]
	033 Call 0x266FACC, X0
	034 Compare X19, 0
	035 JumpIfEqual {66}
	036 Move X10, 0x3B9000
	037 Move X8, [X19]
	038 Move X10, [X10+296]
	039 Move X20, X0
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move W2, 18
	051 Move X0, X19
	052 Call 0x1C5D788
	053 Move W9, [X10]
	054 Add W9, W9, 18
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X3, [X0]
	058 Move X2, [X0+8]
	059 Move X0, X19
	060 Move X1, X20
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X30, [X31+32]
	064 Move X21, [X31+40]
	065 CallNoReturn X3
	066 Call 0x1C17F20

Method: System.Void OnGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent e)

Disassembly:
	0x03D640EC ADD X10, X10, 0x8
	0x03D640F0 LDUR X11, [X10 - 0x8]
	0x03D640F4 CMP X11, X1
	0x03D640F8 B.EQ 0x3D64118
	0x03D640FC SUBS X9, X9, 0x1
	0x03D64100 ADD X10, X10, 0x10
	0x03D64104 B.NE 0x3D640F0
	0x03D64108 MOV X0, X21
	0x03D6410C MOV W2, W31
	0x03D64110 BL 0x1C5C788
	0x03D64114 B 0x3D64124
	0x03D64118 LDRSW X9, [X10]
	0x03D6411C ADD X8, X8, X9, 0x4, LSL
	0x03D64120 ADD X0, X8, 0x138
	0x03D64124 LDP X8, X1, [X0]
	0x03D64128 MOV X0, X21
	0x03D6412C BLR X8
	0x03D64130 TBZ X0, 0x0, 0x3D641E8
	0x03D64134 LDR X8, [X21]
	0x03D64138 LDR X1, [X22]
	0x03D6413C LDRH W9, [X8 + 0x12E]
	0x03D64140 CBZ X9, 0x3D64164
	0x03D64144 LDR X10, [X8 + 0xB0]
	0x03D64148 ADD X10, X10, 0x8
	0x03D6414C LDUR X11, [X10 - 0x8]
	0x03D64150 CMP X11, X1
	0x03D64154 B.EQ 0x3D64174
	0x03D64158 SUBS X9, X9, 0x1
	0x03D6415C ADD X10, X10, 0x10
	0x03D64160 B.NE 0x3D6414C
	0x03D64164 MOV X0, X21
	0x03D64168 MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {35}
	006 Move W8, [X1+156]
	007 Move X20, X1
	008 And W9, W8, 0x7FFFFFFF
	009 Move W8, 0x7F800000
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W9, [X20+160]
	012 And W9, W9, 0x7FFFFFFF
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X19, X0
	015 Move X0, [X0+1032]
	016 Compare X0, 0
	017 JumpIfEqual {35}
	018 Move X1, X31
	019 Call ColumnLayout.Dirty, X0
	020 Move W8, [X20+164]
	021 Move X0, X19
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Call MultiColumnCollectionHeader.ScheduleDoLayout, X0
	027 Return 
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return 
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call 0x1C17F20

Method: System.Void DoLayout()

Disassembly:
	0x03D6416C BL 0x1C5C788
	0x03D64170 B 0x3D64180
	0x03D64174 LDRSW X9, [X10]
	0x03D64178 ADD X8, X8, X9, 0x4, LSL
	0x03D6417C ADD X0, X8, 0x138
	0x03D64180 LDP X8, X1, [X0]
	0x03D64184 MOV X0, X21
	0x03D64188 BLR X8
	0x03D6418C MOV X1, X0
	0x03D64190 LDR X0, [X19 + 0x18]
	0x03D64194 CBZ X0, 0x3D64520
	0x03D64198 LDR W10, [X0 + 0x1C]
	0x03D6419C LDR X8, [X0 + 0x10]
	0x03D641A0 LDR X9, [X25]
	0x03D641A4 ADD W10, W10, 0x1
	0x03D641A8 STR W10, [X0 + 0x1C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+1032]
	005 Move X1, X31
	006 Move X19, X0
	007 Call VisualElement.get_layout, X0
	008 Compare X20, 0
	009 JumpIfEqual {19}
	010 Move X0, X20
	011 Move V0, V2
	012 Move X1, X31
	013 Call ColumnLayout.DoLayout, X0, V0
	014 Move [X19+1017], W31
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return 
	019 Call 0x1C17F20

Method: System.Void OnColumnControlGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03D641AC CBZ X8, 0x3D64524
	0x03D641B0 LDRSW X10, [X0 + 0x18]
	0x03D641B4 LDR W11, [X8 + 0x18]
	0x03D641B8 CMP W10, W11
	0x03D641BC B.CS 0x3D641D4
	0x03D641C0 ADD W9, W10, 0x1
	0x03D641C4 ADD X8, X8, X10, 0x3, LSL
	0x03D641C8 STR W9, [X0 + 0x18]
	0x03D641CC STR X1, [X8 + 0x20]
	0x03D641D0 B 0x3D640D8
	0x03D641D4 LDR X8, [X9 + 0x20]
	0x03D641D8 LDR X8, [X8 + 0xC0]
	0x03D641DC LDR X2, [X8 + 0x70]
	0x03D641E0 BL 0x301BF90
	0x03D641E4 B 0x3D640D8
	0x03D641E8 MOV X22, X31
	0x03D641EC CBZ X21, 0x3D64248
	0x03D641F0 LDR X8, [X21]
	0x03D641F4 LDR X1, [X23]
	0x03D641F8 LDRH W9, [X8 + 0x12E]
	0x03D641FC CBZ X9, 0x3D64220
	0x03D64200 LDR X10, [X8 + 0xB0]
	0x03D64204 ADD X10, X10, 0x8
	0x03D64208 LDUR X11, [X10 - 0x8]
	0x03D6420C CMP X11, X1
	0x03D64210 B.EQ 0x3D64230
	0x03D64214 SUBS X9, X9, 0x1
	0x03D64218 ADD X10, X10, 0x10
	0x03D6421C B.NE 0x3D64208
	0x03D64220 MOV X0, X21
	0x03D64224 MOV W2, W31
	0x03D64228 BL 0x1C5C788
	0x03D6422C B 0x3D6423C
	0x03D64230 LDRSW X9, [X10]
	0x03D64234 ADD X8, X8, X9, 0x4, LSL
	0x03D64238 ADD X0, X8, 0x138
	0x03D6423C LDP X8, X1, [X0]
	0x03D64240 MOV X0, X21
	0x03D64244 BLR X8
	0x03D64248 CBNZ X22, 0x3D6453C
	0x03D6424C LDR X0, [X20 + 0x420]
	0x03D64250 CBZ X0, 0x3D64534
	0x03D64254 MOV X1, X31
	0x03D64258 BL 0x3D6F814
	0x03D6425C CBZ X0, 0x3D64534
	0x03D64260 ADRP X10, 0x3B8000
	0x03D64264 LDR X8, [X0]
	0x03D64268 LDR X10, [X10 + 0x110]
	0x03D6426C MOV X20, X0
	0x03D64270 LDRH W9, [X8 + 0x12E]
	0x03D64274 LDR X1, [X10]
	0x03D64278 CBZ X9, 0x3D6429C
	0x03D6427C LDR X10, [X8 + 0xB0]
	0x03D64280 ADD X10, X10, 0x8
	0x03D64284 LDUR X11, [X10 - 0x8]
	0x03D64288 CMP X11, X1
	0x03D6428C B.EQ 0x3D642AC
	0x03D64290 SUBS X9, X9, 0x1
	0x03D64294 ADD X10, X10, 0x10
	0x03D64298 B.NE 0x3D64284
	0x03D6429C MOV X0, X20
	0x03D642A0 MOV W2, W31
	0x03D642A4 BL 0x1C5C788
	0x03D642A8 B 0x3D642B8
	0x03D642AC LDRSW X9, [X10]
	0x03D642B0 ADD X8, X8, X9, 0x4, LSL
	0x03D642B4 ADD X0, X8, 0x138
	0x03D642B8 LDP X8, X1, [X0]
	0x03D642BC MOV X0, X20
	0x03D642C0 BLR X8
	0x03D642C4 MOV X20, X0
	0x03D642C8 CBZ X0, 0x3D64544
	0x03D642CC ADRP X22, 0x3B8000
	0x03D642D0 ADRP X25, 0x402000
	0x03D642D4 LDR X22, [X22 + 0x118]
	0x03D642D8 LDR X25, [X25 + 0x7F0]
	0x03D642DC ADD X8, X31, 0x10
	0x03D642E0 ADD X26, X8, 0x1D
	0x03D642E4 LDR X8, [X20]
	0x03D642E8 LDR X1, [X24]
	0x03D642EC LDRH W9, [X8 + 0x12E]
	0x03D642F0 CBZ X9, 0x3D64314
	0x03D642F4 LDR X10, [X8 + 0xB0]
	0x03D642F8 ADD X10, X10, 0x8
	0x03D642FC LDUR X11, [X10 - 0x8]
	0x03D64300 CMP X11, X1
	0x03D64304 B.EQ 0x3D64324
	0x03D64308 SUBS X9, X9, 0x1
	0x03D6430C ADD X10, X10, 0x10
	0x03D64310 B.NE 0x3D642FC
	0x03D64314 MOV X0, X20
	0x03D64318 MOV W2, W31
	0x03D6431C BL 0x1C5C788
	0x03D64320 B 0x3D64330
	0x03D64324 LDRSW X9, [X10]
	0x03D64328 ADD X8, X8, X9, 0x4, LSL
	0x03D6432C ADD X0, X8, 0x138
	0x03D64330 LDP X8, X1, [X0]
	0x03D64334 MOV X0, X20
	0x03D64338 BLR X8
	0x03D6433C TBZ X0, 0x0, 0x3D64488
	0x03D64340 LDR X8, [X20]
	0x03D64344 LDR X1, [X22]
	0x03D64348 LDRH W9, [X8 + 0x12E]
	0x03D6434C CBZ X9, 0x3D64370
	0x03D64350 LDR X10, [X8 + 0xB0]
	0x03D64354 ADD X10, X10, 0x8
	0x03D64358 LDUR X11, [X10 - 0x8]
	0x03D6435C CMP X11, X1
	0x03D64360 B.EQ 0x3D64380
	0x03D64364 SUBS X9, X9, 0x1
	0x03D64368 ADD X10, X10, 0x10
	0x03D6436C B.NE 0x3D64358
	0x03D64370 MOV X0, X20
	0x03D64374 MOV W2, W31
	0x03D64378 BL 0x1C5C788
	0x03D6437C B 0x3D6438C
	0x03D64380 LDRSW X9, [X10]
	0x03D64384 ADD X8, X8, X9, 0x4, LSL
	0x03D64388 ADD X0, X8, 0x138
	0x03D6438C LDP X8, X1, [X0]
	0x03D64390 MOV X0, X20
	0x03D64394 BLR X8
	0x03D64398 MOV X21, X0
	0x03D6439C STRB W31, [X31 + 0x3A]
	0x03D643A0 STRH W31, [X31 + 0x38]
	0x03D643A4 CBZ X0, 0x3D6452C
	0x03D643A8 MOV X0, X21
	0x03D643AC MOV X1, X31
	0x03D643B0 BL 0x3D6F6A0
	0x03D643B4 LDR X10, [X21 + 0x10]
	0x03D643B8 LDR V0, [X21 + 0x5C]
	0x03D643BC LDUR X9, [X21 + 0x44]
	0x03D643C0 LDR X8, [X19 + 0x20]
	0x03D643C4 LDRH W12, [X31 + 0x38]
	0x03D643C8 LDRB W13, [X31 + 0x3A]
	0x03D643CC LDRB W11, [X21 + 0x40]
	0x03D643D0 STRH W12, [X31 + 0xC]
	0x03D643D4 STRB W13, [X31 + 0xE]
	0x03D643D8 CBZ X8, 0x3D64530
	0x03D643DC LDRH W12, [X31 + 0xC]
	0x03D643E0 LDRB W13, [X31 + 0xE]
	0x03D643E4 STRH W12, [X31 + 0x3C]
	0x03D643E8 STRB W13, [X31 + 0x3E]
	0x03D643EC LDR W14, [X8 + 0x1C]
	0x03D643F0 LDR X12, [X8 + 0x10]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x684000
	010 Move W8, [X21+3232]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x403000
	018 Move X0, [X0+1832]
	019 Call 0x1C17CF4
	020 Move X0, 0x3B9000
	021 Move X0, [X0+296]
	022 Call 0x1C17CF4
	023 Move X0, 0x390000
	024 Move X0, [X0+1448]
	025 Call 0x1C17CF4
	026 Move X0, 0x403000
	027 Move X0, [X0+1232]
	028 Call 0x1C17CF4
	029 Move X0, 0x3B8000
	030 Move X0, [X0+2200]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+3232], W8
	034 Compare X20, 0
	035 JumpIfEqual {164}
	036 Move X0, X20
	037 Move X1, X31
	038 Call EventBase.get_target, X0
	039 Compare X0, 0
	040 JumpIfEqual {137}
	041 Move X8, 0x403000
	042 Move X8, [X8+1232]
	043 Move X9, [X0]
	044 Move X8, [X8]
	045 Move W11, [X9+304]
	046 Move W10, [X8+304]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X9, [X9+200]
	049 Add X9, X9, X10
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Compare X22, 0
	054 JumpIfEqual {164}
	055 Move X0, [X19+1024]
	056 Compare X0, 0
	057 JumpIfEqual {164}
	058 Move X8, 0x403000
	059 Move X1, [X22+1016]
	060 Move X8, [X8+1832]
	061 Move X2, [X8]
	062 Call Dictionary`2<Object, Object>.get_Item, X0, X1
	063 Compare X0, 0
	064 JumpIfEqual {164}
	065 Move X0, [X0+24]
	066 Compare X0, 0
	067 JumpIfEqual {164}
	068 Move X1, X31
	069 Call VisualElement.get_style, X0
	070 Move X21, X0
	071 Move X0, X22
	072 Move X1, X31
	073 Call VisualElement.get_layout, X0
	074 Add S0, S2, S0
	075 Move X0, X31
	076 Call StyleLength.op_Implicit, V0
	077 Compare X21, 0
	078 JumpIfEqual {164}
	079 Move X11, 0x3B9000
	080 Move X9, [X21]
	081 Move X11, [X11+296]
	082 Move X8, X1
	083 Move X22, X0
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Move X1, [X11]
	086 And X23, X8, 0
	087 Compare X10, 0
	088 JumpIfEqual {95}
	089 Move X8, [X9+176]
	090 Add X8, X8, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X10, X10, 1
	094 Add X8, X8, 16
	095 Move W2, 25
	096 Move X0, X21
	097 Call 0x1C5D788
	098 Move W8, [X8]
	099 Add W8, W8, 25
	100 Add X8, X9, W8
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X3, [X0+8]
	104 Move X0, X21
	105 Move X1, X22
	106 Move X2, X23
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X8, 0x390000
	109 Move X8, [X8+1448]
	110 Move V8, [X20+156]
	111 Move V9, [X20+140]
	112 Move X0, [X8]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move W8, 1
	118 NotImplemented "Instruction FABD not yet implemented."
	119 Move S1, W8
	120 NotImplemented "Instruction FCMP not yet implemented."
	121 Move X21, [X19+1040]
	122 Move X0, X20
	123 Move X1, X31
	124 Call EventBase.get_target, X0
	125 Compare X21, 0
	126 JumpIfEqual {164}
	127 Compare X0, 0
	128 JumpIfEqual {136}
	129 Move X8, 0x3B8000
	130 Move X8, [X8+2200]
	131 Move X9, [X0]
	132 Move X8, [X8]
	133 Move W11, [X9+304]
	134 Move W10, [X8+304]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X1, X31
	137 Move X20, [X31+48]
	138 Move X19, [X31+56]
	139 Move X22, [X31+32]
	140 Move X21, [X31+40]
	141 Move X30, [X31+16]
	142 Move X23, [X31+24]
	143 Move D9, [X31+64]
	144 Move D8, [X31+72]
	145 Return 
	146 Move X9, [X9+200]
	147 Add X9, X9, X10
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CSEL not yet implemented."
	151 Move X0, X21
	152 Move X2, X31
	153 Call VisualElement.IndexOf, X0, X1
	154 Move W1, W0
	155 Move X0, X19
	156 Move X20, [X31+48]
	157 Move X19, [X31+56]
	158 Move X22, [X31+32]
	159 Move X21, [X31+40]
	160 Move X30, [X31+16]
	161 Move X23, [X31+24]
	162 Move D9, [X31+64]
	163 Move D8, [X31+72]
	164 Call 0x1C17F20

Method: System.Void OnColumnClicked(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03D644E4 MOV X0, X20
	0x03D644E8 BLR X8
	0x03D644EC CBNZ X21, 0x3D64548
	0x03D644F0 CMP W22, 0x7
	0x03D644F4 B.EQ 0x3D644FC
	0x03D644F8 CBNZ W22, 0x3D64504
	0x03D644FC MOVZ W8, 0x1
	0x03D64500 STRB W8, [X19 + 0x10]
	0x03D64504 LDP X20, X19, [X31 + 0x70]
	0x03D64508 LDP X22, X21, [X31 + 0x60]
	0x03D6450C LDP X24, X23, [X31 + 0x50]
	0x03D64510 LDP X26, X25, [X31 + 0x40]
	0x03D64514 LDR X30, [X31 + 0x30]
	0x03D64518 ADD X31, X31, 0x80
	0x03D6451C RET
	0x03D64520 BL 0x1C16F20
	0x03D64524 BL 0x1C16F20
	0x03D64528 BL 0x1C16F20
	0x03D6452C BL 0x1C16F20
	0x03D64530 BL 0x1C16F20
	0x03D64534 BL 0x1C16F20
	0x03D64538 BL 0x1C16F20
	0x03D6453C MOV X0, X22
	0x03D64540 BL 0x1C16F18
	0x03D64544 BL 0x1C16F20
	0x03D64548 MOV X0, X21
	0x03D6454C BL 0x1C16F18
	0x03D64550 B 0x3D64578
	0x03D64554 B 0x3D64610
	0x03D64558 B 0x3D64578
	0x03D6455C B 0x3D64610
	0x03D64560 B 0x3D64578
	0x03D64564 B 0x3D64578
	0x03D64568 B 0x3D64578
	0x03D6456C B 0x3D64610
	0x03D64570 B 0x3D64578
	0x03D64574 B 0x3D64610
	0x03D64578 CMP W1, 0x1
	0x03D6457C B.NE 0x3D64598
	0x03D64580 BL 0x3EB1AD0
	0x03D64584 LDR X21, [X0]
	0x03D64588 BL 0x3EB1AE0
	0x03D6458C MOV W22, W31
	0x03D64590 CBNZ X20, 0x3D64494
	0x03D64594 B 0x3D644EC
	0x03D64598 MOV X19, X0
	0x03D6459C MOV X21, X31
	0x03D645A0 B 0x3D645A8
	0x03D645A4 MOV X19, X0
	0x03D645A8 CBZ X20, 0x3D64604
	0x03D645AC LDR X8, [X20]
	0x03D645B0 LDR X1, [X23]
	0x03D645B4 LDRH W9, [X8 + 0x12E]
	0x03D645B8 CBZ X9, 0x3D645DC
	0x03D645BC LDR X10, [X8 + 0xB0]
	0x03D645C0 ADD X10, X10, 0x8
	0x03D645C4 LDUR X11, [X10 - 0x8]
	0x03D645C8 CMP X11, X1
	0x03D645CC B.EQ 0x3D645EC
	0x03D645D0 SUBS X9, X9, 0x1
	0x03D645D4 ADD X10, X10, 0x10
	0x03D645D8 B.NE 0x3D645C4
	0x03D645DC MOV X0, X20
	0x03D645E0 MOV W2, W31
	0x03D645E4 BL 0x1C5C788
	0x03D645E8 B 0x3D645F8
	0x03D645EC LDRSW X9, [X10]
	0x03D645F0 ADD X8, X8, X9, 0x4, LSL
	0x03D645F4 ADD X0, X8, 0x138
	0x03D645F8 LDP X8, X1, [X0]
	0x03D645FC MOV X0, X20
	0x03D64600 BLR X8
	0x03D64604 CBZ X21, 0x3D64698
	0x03D64608 MOV X0, X21
	0x03D6460C BL 0x1C16F18
	0x03D64610 CMP W1, 0x1
	0x03D64614 B.NE 0x3D64628
	0x03D64618 BL 0x3EB1AD0
	0x03D6461C LDR X22, [X0]
	0x03D64620 BL 0x3EB1AE0
	0x03D64624 B 0x3D641EC
	0x03D64628 MOV X19, X0
	0x03D6462C MOV X22, X31
	0x03D64630 B 0x3D64638
	0x03D64634 MOV X19, X0
	0x03D64638 CBZ X21, 0x3D64694
	0x03D6463C LDR X8, [X21]
	0x03D64640 LDR X1, [X23]
	0x03D64644 LDRH W9, [X8 + 0x12E]
	0x03D64648 CBZ X9, 0x3D6466C
	0x03D6464C LDR X10, [X8 + 0xB0]
	0x03D64650 ADD X10, X10, 0x8
	0x03D64654 LDUR X11, [X10 - 0x8]
	0x03D64658 CMP X11, X1
	0x03D6465C B.EQ 0x3D6467C
	0x03D64660 SUBS X9, X9, 0x1
	0x03D64664 ADD X10, X10, 0x10
	0x03D64668 B.NE 0x3D64654
	0x03D6466C MOV X0, X21
	0x03D64670 MOV W2, W31
	0x03D64674 BL 0x1C5C788
	0x03D64678 B 0x3D64688
	0x03D6467C LDRSW X9, [X10]
	0x03D64680 ADD X8, X8, X9, 0x4, LSL
	0x03D64684 ADD X0, X8, 0x138
	0x03D64688 LDP X8, X1, [X0]
	0x03D6468C MOV X0, X21
	0x03D64690 BLR X8
	0x03D64694 CBNZ X22, 0x3D646A0
	0x03D64698 MOV X0, X19
	0x03D6469C BL 0x1D2C690
	0x03D646A0 MOV X0, X22
	0x03D646A4 BL 0x1C16F18
	0x03D646A8 BL 0x1990590
	0x03D646AC SUB X31, X31, 0xA0
	0x03D646B0 STR X30, [X31 + 0x40]
	0x03D646B4 STP X28, X27, [X31 + 0x50]
	0x03D646B8 STP X26, X25, [X31 + 0x60]
	0x03D646BC STP X24, X23, [X31 + 0x70]
	0x03D646C0 STP X22, X21, [X31 + 0x80]
	0x03D646C4 STP X20, X19, [X31 + 0x90]
	0x03D646C8 ADRP X20, 0x683000
	0x03D646CC ADRP X22, 0x390000
	0x03D646D0 ADRP X21, 0x402000
	0x03D646D4 LDRB W8, [X20 + 0xCA8]
	0x03D646D8 LDR X22, [X22 + 0xE70]
	0x03D646DC LDR X21, [X21 + 0x5A8]
	0x03D646E0 MOV X19, X0
	0x03D646E4 TBNZ X8, 0x0, 0x3D647EC
	0x03D646E8 ADRP X0, 0x402000
	0x03D646EC LDR X0, [X0 + 0x650]
	0x03D646F0 BL 0x1C16CF4
	0x03D646F4 ADRP X0, 0x3FE000
	0x03D646F8 LDR X0, [X0 + 0x948]
	0x03D646FC BL 0x1C16CF4
	0x03D64700 ADRP X0, 0x402000
	0x03D64704 LDR X0, [X0 + 0x4F8]
	0x03D64708 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x684000
	008 Move W8, [X20+3233]
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x3BB000
	016 Move X0, [X0+3376]
	017 Call 0x1C17CF4
	018 Move X0, 0x3B9000
	019 Move X0, [X0+3704]
	020 Call 0x1C17CF4
	021 Move X0, 0x403000
	022 Move X0, [X0+1232]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3233], W8
	026 Move W8, [X19+968]
	027 Compare W8, 0
	028 JumpIfEqual {50}
	029 Compare X21, 0
	030 JumpIfEqual {137}
	031 Move X8, [X21]
	032 Move X0, X21
	033 Move X9, [X8+472]
	034 Move X1, [X8+480]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {50}
	038 Move X8, 0x403000
	039 Move X8, [X8+1232]
	040 Move X9, [X0]
	041 Move X20, X0
	042 Move X8, [X8]
	043 Move W11, [X9+304]
	044 Move W10, [X8+304]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, [X9+200]
	047 Add X9, X9, X10
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Return 
	057 Move X8, [X20+1016]
	058 Compare X8, 0
	059 JumpIfEqual {137}
	060 Move W8, [X8+97]
	061 Compare W8, 0
	062 JumpIfEqual {50}
	063 Move X23, 0x3B9000
	064 Move X23, [X23+3704]
	065 Move X0, X21
	066 Move X1, [X23]
	067 Call 0x1C17E00
	068 Compare X0, 0
	069 JumpIfEqual {85}
	070 Move X8, [X0]
	071 Move X1, [X23]
	072 Move X22, X0
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move W2, 19
	083 Move X0, X22
	084 Call 0x1C5D788
	085 Move X22, 0x3BB000
	086 Move X22, [X22+3376]
	087 Move X0, X21
	088 Move X1, [X22]
	089 Call 0x1C17E00
	090 Compare X0, 0
	091 JumpIfEqual {50}
	092 Move X8, [X0]
	093 Move X1, [X22]
	094 Move X21, X0
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move X0, X21
	105 Move W2, W31
	106 Call 0x1C5D788
	107 Move W9, [X10]
	108 Add W9, W9, 19
	109 Add X8, X8, W9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X1, [X0+8]
	113 Move X0, X22
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 Add X8, X8, X9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X21
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move W8, 1
	122 Move [X19+1000], W8
	123 Move X1, [X20+1016]
	124 Move W2, W0
	125 Move X0, X19
	126 Call MultiColumnCollectionHeader.UpdateSortColumnDescriptionsOnClick, X0, X1, X2
	127 Move [X19+1000], W31
	128 Move X0, X19
	129 Move X20, [X31+32]
	130 Move X19, [X31+40]
	131 Move X22, [X31+16]
	132 Move X21, [X31+24]
	133 Move X30, [X31+48]
	134 Move X23, [X31+56]
	135 Call MultiColumnCollectionHeader.UpdateSortedColumns, X0
	136 Return 
	137 Call 0x1C17F20
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Call 0x3EB2AD0
	140 Move X20, [X0]
	141 Call 0x3EB2AE0
	142 Move [X19+1000], W31
	143 Compare X20, 0
	144 JumpIfEqual {128}
	145 Move X0, X20
	146 Call 0x1C17F18
	147 Move [X19+1000], W31
	148 Move [X19+1000], W31
	149 Compare X20, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1D2D690
	152 Move X0, X20
	153 Call 0x1C17F18
	154 Call 0x1991590

Method: System.Void UpdateSortColumnDescriptionsOnClick(UnityEngine.UIElements.Column column, UnityEngine.EventModifiers modifiers)

Disassembly:
	0x03D6470C ADRP X0, 0x402000
	0x03D64710 LDR X0, [X0 + 0x658]
	0x03D64714 BL 0x1C16CF4
	0x03D64718 ADRP X0, 0x402000
	0x03D6471C LDR X0, [X0 + 0x660]
	0x03D64720 BL 0x1C16CF4
	0x03D64724 ADRP X0, 0x402000
	0x03D64728 LDR X0, [X0 + 0x668]
	0x03D6472C BL 0x1C16CF4
	0x03D64730 ADRP X0, 0x390000
	0x03D64734 LDR X0, [X0 + 0xE70]
	0x03D64738 BL 0x1C16CF4
	0x03D6473C ADRP X0, 0x402000
	0x03D64740 LDR X0, [X0 + 0x800]
	0x03D64744 BL 0x1C16CF4
	0x03D64748 ADRP X0, 0x402000
	0x03D6474C LDR X0, [X0 + 0x808]
	0x03D64750 BL 0x1C16CF4
	0x03D64754 ADRP X0, 0x402000
	0x03D64758 LDR X0, [X0 + 0x810]
	0x03D6475C BL 0x1C16CF4
	0x03D64760 ADRP X0, 0x402000
	0x03D64764 LDR X0, [X0 + 0x818]
	0x03D64768 BL 0x1C16CF4
	0x03D6476C ADRP X0, 0x402000
	0x03D64770 LDR X0, [X0 + 0x680]
	0x03D64774 BL 0x1C16CF4
	0x03D64778 ADRP X0, 0x402000
	0x03D6477C LDR X0, [X0 + 0x688]
	0x03D64780 BL 0x1C16CF4
	0x03D64784 ADRP X0, 0x402000
	0x03D64788 LDR X0, [X0 + 0x6E0]
	0x03D6478C BL 0x1C16CF4
	0x03D64790 ADRP X0, 0x402000
	0x03D64794 LDR X0, [X0 + 0x690]
	0x03D64798 BL 0x1C16CF4
	0x03D6479C ADRP X0, 0x402000
	0x03D647A0 LDR X0, [X0 + 0x698]
	0x03D647A4 BL 0x1C16CF4
	0x03D647A8 ADRP X0, 0x402000
	0x03D647AC LDR X0, [X0 + 0x6A0]
	0x03D647B0 BL 0x1C16CF4
	0x03D647B4 ADRP X0, 0x402000
	0x03D647B8 LDR X0, [X0 + 0x6F0]
	0x03D647BC BL 0x1C16CF4
	0x03D647C0 ADRP X0, 0x402000
	0x03D647C4 LDR X0, [X0 + 0x6B8]
	0x03D647C8 BL 0x1C16CF4
	0x03D647CC ADRP X0, 0x402000
	0x03D647D0 LDR X0, [X0 + 0x5A8]
	0x03D647D4 BL 0x1C16CF4
	0x03D647D8 ADRP X0, 0x402000
	0x03D647DC LDR X0, [X0 + 0x820]
	0x03D647E0 BL 0x1C16CF4
	0x03D647E4 MOVZ W8, 0x1
	0x03D647E8 STRB W8, [X20 + 0xCA8]
	0x03D647EC STP X31, X31, [X31 + 0x20]
	0x03D647F0 STR X31, [X31 + 0x30]
	0x03D647F4 LDR X0, [X22]
	0x03D647F8 LDR X20, [X19 + 0x3D8]
	0x03D647FC BL 0x1C16F10
	0x03D64800 LDR X2, [X21]
	0x03D64804 MOV X1, X19
	0x03D64808 MOV X3, X31
	0x03D6480C MOV X21, X0
	0x03D64810 BL 0x3314368
	0x03D64814 CBZ X20, 0x3D64AF0
	0x03D64818 ADRP X23, 0x402000
	0x03D6481C LDR X23, [X23 + 0x6B8]
	0x03D64820 MOV X0, X20
	0x03D64824 MOV X1, X21
	0x03D64828 MOV X2, X31
	0x03D6482C BL 0x3D7A10C
	0x03D64830 LDR X0, [X22]
	0x03D64834 LDR X20, [X19 + 0x408]
	0x03D64838 BL 0x1C16F10
	0x03D6483C LDR X2, [X23]
	0x03D64840 MOV X1, X19
	0x03D64844 MOV X3, X31
	0x03D64848 MOV X21, X0
	0x03D6484C BL 0x3314368
	0x03D64850 CBZ X20, 0x3D64AF0
	0x03D64854 ADRP X22, 0x402000
	0x03D64858 ADRP X23, 0x402000
	0x03D6485C LDR X22, [X22 + 0x660]
	0x03D64860 LDR X23, [X23 + 0x680]
	0x03D64864 MOV X0, X20
	0x03D64868 MOV X1, X21
	0x03D6486C MOV X2, X31
	0x03D64870 BL 0x3D7055C
	0x03D64874 LDR X0, [X22]
	0x03D64878 LDR X20, [X19 + 0x420]
	0x03D6487C BL 0x1C16F10
	0x03D64880 LDR X2, [X23]
	0x03D64884 MOV X1, X19
	0x03D64888 MOV X3, X31
	0x03D6488C MOV X21, X0
	0x03D64890 BL 0x2A7689C
	0x03D64894 CBZ X20, 0x3D64AF0
	0x03D64898 ADRP X22, 0x402000
	0x03D6489C ADRP X23, 0x402000
	0x03D648A0 LDR X22, [X22 + 0x650]
	0x03D648A4 LDR X23, [X23 + 0x690]
	0x03D648A8 MOV X0, X20
	0x03D648AC MOV X1, X21
	0x03D648B0 MOV X2, X31
	0x03D648B4 BL 0x3D74A88
	0x03D648B8 LDR X0, [X22]
	0x03D648BC LDR X20, [X19 + 0x420]
	0x03D648C0 BL 0x1C16F10
	0x03D648C4 LDR X2, [X23]
	0x03D648C8 MOV X1, X19
	0x03D648CC MOV X3, X31
	0x03D648D0 MOV X21, X0
	0x03D648D4 BL 0x2A6B948
	0x03D648D8 CBZ X20, 0x3D64AF0
	0x03D648DC ADRP X23, 0x402000
	0x03D648E0 ADRP X24, 0x402000
	0x03D648E4 LDR X23, [X23 + 0x658]
	0x03D648E8 LDR X24, [X24 + 0x688]
	0x03D648EC MOV X0, X20
	0x03D648F0 MOV X1, X21
	0x03D648F4 MOV X2, X31
	0x03D648F8 BL 0x3D74B38
	0x03D648FC LDR X0, [X23]
	0x03D64900 LDR X20, [X19 + 0x420]
	0x03D64904 BL 0x1C16F10
	0x03D64908 LDR X2, [X24]
	0x03D6490C MOV X1, X19
	0x03D64910 MOV X3, X31
	0x03D64914 MOV X21, X0
	0x03D64918 BL 0x2A769B4
	0x03D6491C CBZ X20, 0x3D64AF0
	0x03D64920 ADRP X23, 0x402000
	0x03D64924 ADRP X24, 0x402000
	0x03D64928 LDR X23, [X23 + 0x668]
	0x03D6492C LDR X24, [X24 + 0x698]
	0x03D64930 MOV X0, X20
	0x03D64934 MOV X1, X21
	0x03D64938 MOV X2, X31
	0x03D6493C BL 0x3D74C98
	0x03D64940 LDR X0, [X23]
	0x03D64944 LDR X20, [X19 + 0x420]
	0x03D64948 BL 0x1C16F10
	0x03D6494C LDR X2, [X24]
	0x03D64950 MOV X1, X19
	0x03D64954 MOV X3, X31
	0x03D64958 MOV X21, X0
	0x03D6495C BL 0x2A782C0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x684000
	009 Move X23, 0x403000
	010 Move W8, [X22+3234]
	011 Move X23, [X23+1968]
	012 Move W20, W2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x390000
	020 Move X0, [X0+2416]
	021 Call 0x1C17CF4
	022 Move X0, 0x403000
	023 Move X0, [X0+1976]
	024 Call 0x1C17CF4
	025 Move X0, 0x403000
	026 Move X0, [X0+1984]
	027 Call 0x1C17CF4
	028 Move X0, 0x403000
	029 Move X0, [X0+1992]
	030 Call 0x1C17CF4
	031 Move X0, 0x403000
	032 Move X0, [X0+2000]
	033 Call 0x1C17CF4
	034 Move X0, 0x403000
	035 Move X0, [X0+1968]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+3234], W8
	039 Move X0, [X23]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X22, X0
	043 Call Object..ctor, X0
	044 Compare X22, 0
	045 JumpIfEqual {177}
	046 Move X8, 0x403000
	047 Move X8, [X8+1984]
	048 Move [X22+16], X21
	049 Move X23, 0x403000
	050 Move X24, 0x403000
	051 Move X0, [X8]
	052 Move X21, [X19+984]
	053 Move X23, [X23+2000]
	054 Move X24, [X24+1976]
	055 Call 0x1C17F10
	056 Move X2, [X23]
	057 Move X1, X22
	058 Move X3, X31
	059 Move X23, X0
	060 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	061 Move X2, [X24]
	062 Move X0, X21
	063 Move X1, X23
	064 Call 0x21C670C, X0, X1
	065 Compare X0, 0
	066 JumpIfEqual {83}
	067 Move X21, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, [X19+984]
	070 Compare X0, 0
	071 JumpIfEqual {177}
	072 Move X1, X21
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X2, X31
	080 Move X30, [X31+64]
	081 Call SortColumnDescriptions.Remove, X0, X1
	082 Return 
	083 Move X8, [X22+16]
	084 Compare X8, 0
	085 JumpIfEqual {177}
	086 Move X0, [X8+16]
	087 Move X1, X31
	088 Call String.IsNullOrEmpty, X0
	089 Move X8, [X22+16]
	090 Compare X8, 0
	091 JumpIfEqual {177}
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {116}
	096 Move X0, X8
	097 Move X1, X31
	098 Call Column.get_index, X0
	099 Move X8, 0x403000
	100 Move X8, [X8+1992]
	101 Move W22, W0
	102 Move X8, [X8]
	103 Move X0, X8
	104 Call 0x1C17F10
	105 Move W1, W22
	106 Move W2, W31
	107 Move X3, X31
	108 Move X21, X0
	109 Call SortColumnDescription..ctor, X0, X1, X2
	110 Move W8, [X21+32]
	111 Move X0, X21
	112 Move X2, X31
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CSET not yet implemented."
	115 Call SortColumnDescription.set_direction, X0, X1
	116 Move X22, [X8+16]
	117 Move X8, 0x403000
	118 Move X8, [X8+1992]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X1, X22
	122 Move W2, W31
	123 Move X3, X31
	124 Move X21, X0
	125 Call SortColumnDescription..ctor, X0, X1, X2
	126 Move X8, 0x390000
	127 Move X8, [X8+2416]
	128 Move X0, [X8]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X31
	134 Call Application.get_platform
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move W8, 2
	137 Move W9, 8
	138 NotImplemented "Instruction CSEL not yet implemented."
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X0, [X19+984]
	141 Compare X0, 0
	142 JumpIfEqual {177}
	143 Move X1, X31
	144 Call SortColumnDescriptions.Clear, X0
	145 Move X0, [X19+984]
	146 Compare X0, 0
	147 JumpIfEqual {177}
	148 Move X1, X21
	149 Move X2, X31
	150 Call SortColumnDescriptions.Contains, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {163}
	155 Move X20, [X31+48]
	156 Move X19, [X31+56]
	157 Move X22, [X31+32]
	158 Move X21, [X31+40]
	159 Move X24, [X31+16]
	160 Move X23, [X31+24]
	161 Move X30, [X31+64]
	162 Return 
	163 Move X0, [X19+984]
	164 Compare X0, 0
	165 JumpIfEqual {177}
	166 Move X1, X21
	167 Move X20, [X31+48]
	168 Move X19, [X31+56]
	169 Move X22, [X31+32]
	170 Move X21, [X31+40]
	171 Move X24, [X31+16]
	172 Move X23, [X31+24]
	173 Move X2, X31
	174 Move X30, [X31+64]
	175 Call SortColumnDescriptions.Add, X0, X1
	176 Return 
	177 Call 0x1C17F20

Method: System.Void ScrollHorizontally(System.Single horizontalOffset)

Disassembly:
	0x03D64968 LDR X23, [X23 + 0x6A0]
	0x03D6496C MOV X0, X20
	0x03D64970 MOV X1, X21
	0x03D64974 MOV X2, X31
	0x03D64978 BL 0x3D74EA8
	0x03D6497C LDR X0, [X22]
	0x03D64980 LDR X20, [X19 + 0x420]
	0x03D64984 BL 0x1C16F10
	0x03D64988 LDR X2, [X23]
	0x03D6498C MOV X1, X19
	0x03D64990 MOV X3, X31
	0x03D64994 MOV X21, X0
	0x03D64998 BL 0x2A6B948
	0x03D6499C CBZ X20, 0x3D64AF0
	0x03D649A0 MOV X0, X20
	0x03D649A4 MOV X1, X21
	0x03D649A8 MOV X2, X31
	0x03D649AC BL 0x3D74DF8
	0x03D649B0 LDR X0, [X19 + 0x400]
	0x03D649B4 CBZ X0, 0x3D64AF0
	0x03D649B8 ADRP X8, 0x402000
	0x03D649BC LDR X8, [X8 + 0x800]
	0x03D649C0 LDR X1, [X8]
	0x03D649C4 BL 0x2AA4F58
	0x03D649C8 CBZ X0, 0x3D64AF0
	0x03D649CC ADRP X8, 0x402000
	0x03D649D0 LDR X8, [X8 + 0x820]
	0x03D649D4 ADRP X23, 0x402000
	0x03D649D8 ADRP X24, 0x3FE000
	0x03D649DC ADRP X25, 0x402000
	0x03D649E0 LDR X23, [X23 + 0x810]
	0x03D649E4 LDR X24, [X24 + 0x948]
	0x03D649E8 LDR X25, [X25 + 0x6E0]
	0x03D649EC LDR X1, [X8]
	0x03D649F0 ADRP X26, 0x402000
	0x03D649F4 ADRP X27, 0x402000
	0x03D649F8 ADRP X22, 0x402000
	0x03D649FC LDR X26, [X26 + 0x4F8]
	0x03D64A00 LDR X27, [X27 + 0x6F0]
	0x03D64A04 LDR X22, [X22 + 0x808]
	0x03D64A08 ADD X8, X31, 0x8
	0x03D64A0C BL 0x275A7AC
	0x03D64A10 LDUR V0, [X31 + 0x8]
	0x03D64A14 LDR X8, [X31 + 0x18]
	0x03D64A18 STR V0, [X31 + 0x2]
	0x03D64A1C STR X8, [X31 + 0x30]
	0x03D64A20 LDR X1, [X23]
	0x03D64A24 ADD X0, X31, 0x20
	0x03D64A28 BL 0x2C0B1F0
	0x03D64A2C TBZ X0, 0x0, 0x3D64AB0
	0x03D64A30 LDR X28, [X31 + 0x30]
	0x03D64A34 CBZ X28, 0x3D64AE8
	0x03D64A38 LDR X8, [X28 + 0x10]
	0x03D64A3C CBZ X8, 0x3D64AEC
	0x03D64A40 LDR X20, [X8 + 0x3E8]
	0x03D64A44 LDR X0, [X24]
	0x03D64A48 BL 0x1C16F10
	0x03D64A4C LDR X2, [X25]
	0x03D64A50 MOV X21, X0
	0x03D64A54 MOV X1, X19
	0x03D64A58 MOV X3, X31
	0x03D64A5C BL 0x2A6B948
	0x03D64A60 CBZ X20, 0x3D64AE0
	0x03D64A64 MOV X0, X20
	0x03D64A68 MOV X1, X21
	0x03D64A6C MOV X2, X31
	0x03D64A70 BL 0x3CECD08
	0x03D64A74 LDR X8, [X28 + 0x10]
	0x03D64A78 CBZ X8, 0x3D64AE4
	0x03D64A7C LDR X20, [X8 + 0x3F0]
	0x03D64A80 LDR X0, [X26]
	0x03D64A84 BL 0x1C16F10
	0x03D64A88 LDR X2, [X27]
	0x03D64A8C MOV X21, X0
	0x03D64A90 MOV X1, X19
	0x03D64A94 MOV X3, X31
	0x03D64A98 BL 0x2A6B948
	0x03D64A9C CBZ X20, 0x3D64ADC
	0x03D64AA0 MOV X0, X20
	0x03D64AA4 MOV X1, X21
	0x03D64AA8 BL 0x3D5B6B0
	0x03D64AAC B 0x3D64A20
	0x03D64AB0 LDR X1, [X22]
	0x03D64AB4 ADD X0, X31, 0x20
	0x03D64AB8 BL 0x2C0B1EC
	0x03D64ABC LDP X20, X19, [X31 + 0x90]
	0x03D64AC0 LDP X22, X21, [X31 + 0x80]
	0x03D64AC4 LDP X24, X23, [X31 + 0x70]
	0x03D64AC8 LDP X26, X25, [X31 + 0x60]
	0x03D64ACC LDP X28, X27, [X31 + 0x50]
	0x03D64AD0 LDR X30, [X31 + 0x40]
	0x03D64AD4 ADD X31, X31, 0xA0
	0x03D64AD8 RET
	0x03D64ADC BL 0x1C16F20
	0x03D64AE0 BL 0x1C16F20
	0x03D64AE4 BL 0x1C16F20
	0x03D64AE8 BL 0x1C16F20
	0x03D64AEC BL 0x1C16F20
	0x03D64AF0 BL 0x1C16F20
	0x03D64AF4 B 0x3D64B10
	0x03D64AF8 B 0x3D64B10
	0x03D64AFC B 0x3D64B10
	0x03D64B00 B 0x3D64B10
	0x03D64B04 B 0x3D64B10
	0x03D64B08 B 0x3D64B10
	0x03D64B0C B 0x3D64B10
	0x03D64B10 MOV X19, X0
	0x03D64B14 CMP W1, 0x1
	0x03D64B18 B.NE 0x3D64B44
	0x03D64B1C MOV X0, X19

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x684000
	010 Move W8, [X19+3235]
	011 Move V8, V0
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x3BA000
	018 Move X0, [X0+1672]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+3235], W8
	022 Move X0, X20
	023 Move X1, X31
	024 Call VisualElement.get_transform, X0
	025 Move X19, X0
	026 Move X0, X20
	027 Move X1, X31
	028 Call VisualElement.get_transform, X0
	029 Compare X0, 0
	030 JumpIfEqual {119}
	031 Move X22, 0x3BA000
	032 Move X8, [X0]
	033 Move X22, [X22+1672]
	034 Move X21, X0
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Move X1, [X22]
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move X0, X21
	046 Move W2, W31
	047 Call 0x1C5D788
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X21
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X0, X20
	056 Move X1, X31
	057 Move V9, V1
	058 Call VisualElement.get_transform, X0
	059 Compare X0, 0
	060 JumpIfEqual {119}
	061 Move X8, [X0]
	062 Move X1, [X22]
	063 Move X20, X0
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move X0, X20
	074 Move W2, W31
	075 Call 0x1C5D788
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Add X8, X8, X9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X1, [X0+8]
	081 Move X0, X20
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Compare X19, 0
	084 JumpIfEqual {119}
	085 Move X8, [X19]
	086 Move X1, [X22]
	087 Move V10, V2
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move W2, 1
	098 Move X0, X19
	099 Call 0x1C5D788
	100 Move W9, [X10]
	101 Add W9, W9, 1
	102 Add X8, X8, W9
	103 Add X0, X8, 312
	104 Move X2, [X0]
	105 Move X1, [X0+8]
	106 NotImplemented "Instruction FNEG not yet implemented."
	107 Move X0, X19
	108 Move V1, V9
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X30, [X31+24]
	114 Move D9, [X31+8]
	115 Move D8, [X31+16]
	116 Move V2, V10
	117 Move V10, [X31+64]
	118 CallNoReturn X2
	119 Call 0x1C17F20

Method: System.Void RaiseColumnResized(System.Int32 columnIndex)

Disassembly:
	0x03D643F4 LDR X13, [X25]
	0x03D643F8 ADD W14, W14, 0x1
	0x03D643FC STR W14, [X8 + 0x1C]
	0x03D64400 CBZ X12, 0x3D64528
	0x03D64404 LDRSW X14, [X8 + 0x18]
	0x03D64408 LDR W15, [X12 + 0x18]
	0x03D6440C CMP W14, W15
	0x03D64410 B.CS 0x3D64448
	0x03D64414 ADD W13, W14, 0x1
	0x03D64418 ADD X12, X12, X14, 0x5, LSL
	0x03D6441C STR W13, [X8 + 0x18]
	0x03D64420 STP W0, W31, [X12 + 0x20]
	0x03D64424 STR X10, [X12 + 0x28]
	0x03D64428 STR S0, [X12 + 0x30]
	0x03D6442C STUR X9, [X12 + 0x34]
	0x03D64430 STRB W11, [X12 + 0x3C]
	0x03D64434 LDRB W8, [X31 + 0x3E]
	0x03D64438 LDRH W9, [X31 + 0x3C]
	0x03D6443C STRB W8, [X12 + 0x3F]
	0x03D64440 STURH W9, [X12 + 0x3D]
	0x03D64444 B 0x3D642E4
	0x03D64448 LDR X12, [X13 + 0x20]
	0x03D6444C LDRH W13, [X31 + 0x3C]
	0x03D64450 LDRB W14, [X31 + 0x3E]
	0x03D64454 LDR X12, [X12 + 0xC0]
	0x03D64458 LDR X2, [X12 + 0x70]
	0x03D6445C STP W0, W31, [X31 + 0x10]
	0x03D64460 STR X10, [X31 + 0x18]
	0x03D64464 STR S0, [X31 + 0x20]
	0x03D64468 STUR X9, [X31 + 0x24]
	0x03D6446C STRB W11, [X31 + 0x2C]
	0x03D64470 STRB W14, [X26 + 0x2]
	0x03D64474 STRH W13, [X26]
	0x03D64478 ADD X1, X31, 0x10
	0x03D6447C MOV X0, X8
	0x03D64480 BL 0x318A958
	0x03D64484 B 0x3D642E4
	0x03D64488 MOV X21, X31
	0x03D6448C MOVZ W22, 0x7
	0x03D64490 CBZ X20, 0x3D644EC
	0x03D64494 LDR X8, [X20]
	0x03D64498 LDR X1, [X23]
	0x03D6449C LDRH W9, [X8 + 0x12E]
	0x03D644A0 CBZ X9, 0x3D644C4
	0x03D644A4 LDR X10, [X8 + 0xB0]
	0x03D644A8 ADD X10, X10, 0x8
	0x03D644AC LDUR X11, [X10 - 0x8]
	0x03D644B0 CMP X11, X1
	0x03D644B4 B.EQ 0x3D644D4
	0x03D644B8 SUBS X9, X9, 0x1
	0x03D644BC ADD X10, X10, 0x10
	0x03D644C0 B.NE 0x3D644AC
	0x03D644C4 MOV X0, X20
	0x03D644C8 MOV W2, W31
	0x03D644CC BL 0x1C5C788
	0x03D644D0 B 0x3D644E0
	0x03D644D4 LDRSW X9, [X10]
	0x03D644D8 ADD X8, X8, X9, 0x4, LSL
	0x03D644DC ADD X0, X8, 0x138
	0x03D644E0 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x684000
	006 Move W8, [X21+3236]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3B9000
	014 Move X0, [X0+288]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3236], W8
	018 Move X21, [X20+1064]
	019 Compare X21, 0
	020 JumpIfEqual {50}
	021 Move X0, [X20+1040]
	022 Compare X0, 0
	023 JumpIfEqual {72}
	024 Move W1, W19
	025 Move X2, X31
	026 Call VisualElement.get_Item, X0, X1
	027 Compare X0, 0
	028 JumpIfEqual {72}
	029 Move X1, X31
	030 Call VisualElement.get_resolvedStyle, X0
	031 Compare X0, 0
	032 JumpIfEqual {72}
	033 Move X10, 0x3B9000
	034 Move X8, [X0]
	035 Move X10, [X10+288]
	036 Move X20, X0
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move W2, 44
	048 Move X0, X20
	049 Call 0x1C5D788
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Move W9, [X10]
	056 Add W9, W9, 44
	057 Add X8, X8, W9
	058 Add X0, X8, 312
	059 Move X8, [X0]
	060 Move X1, [X0+8]
	061 Move X0, X20
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X3, [X21+24]
	064 Move X0, [X21+64]
	065 Move X2, [X21+40]
	066 Move W1, W19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 CallNoReturn X3
	072 Call 0x1C17F20

Method: System.Void RaiseColumnSortingChanged()

Disassembly:
	0x03D61A28 MOV X2, X31
	0x03D61A2C LDR X1, [X8]
	0x03D61A30 BL 0x3DF1C70
	0x03D61A34 LDR X0, [X20]
	0x03D61A38 BL 0x1C16F10
	0x03D61A3C MOV X1, X31
	0x03D61A40 MOV X20, X0
	0x03D61A44 BL 0x3DEF578
	0x03D61A48 CBZ X20, 0x3D61A88
	0x03D61A4C MOVZ W8, 0x1
	0x03D61A50 STRB W8, [X20 + 0x20]
	0x03D61A54 STR X20, [X19 + 0x3C8]
	0x03D61A58 LDR X8, [X21]
	0x03D61A5C MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MultiColumnCollectionHeader.ApplyColumnSorting, X0
	005 Move W8, [X19+1016]
	006 Compare W8, 0
	007 JumpIfEqual {11}
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X8, [X19+1072]
	012 Compare X8, 0
	013 JumpIfEqual {8}
	014 Move X2, [X8+24]
	015 Move X0, [X8+64]
	016 Move X1, [X8+40]
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 CallNoReturn X2

Method: System.Void ApplyColumnSorting()

Disassembly:
	0x03D62D24 MOV X0, X25
	0x03D62D28 MOV X1, X24
	0x03D62D2C MOV X2, X26
	0x03D62D30 MOV X3, X27
	0x03D62D34 MOV X4, X31
	0x03D62D38 MOV X5, X31
	0x03D62D3C BL 0x3D9A9A4
	0x03D62D40 B 0x3D62B80
	0x03D62D44 MOV X24, X21
	0x03D62D48 ADRP X21, 0x391000
	0x03D62D4C LDR X21, [X21 + 0xE00]
	0x03D62D50 MOV X23, X31
	0x03D62D54 MOVZ W19, 0x11
	0x03D62D58 CBZ X22, 0x3D62DB4
	0x03D62D5C LDR X8, [X22]
	0x03D62D60 LDR X1, [X21]
	0x03D62D64 LDRH W9, [X8 + 0x12E]
	0x03D62D68 CBZ X9, 0x3D62D8C
	0x03D62D6C LDR X10, [X8 + 0xB0]
	0x03D62D70 ADD X10, X10, 0x8
	0x03D62D74 LDUR X11, [X10 - 0x8]
	0x03D62D78 CMP X11, X1
	0x03D62D7C B.EQ 0x3D62D9C
	0x03D62D80 SUBS X9, X9, 0x1
	0x03D62D84 ADD X10, X10, 0x10
	0x03D62D88 B.NE 0x3D62D74
	0x03D62D8C MOV X0, X22
	0x03D62D90 MOV W2, W31
	0x03D62D94 BL 0x1C5C788
	0x03D62D98 B 0x3D62DA8
	0x03D62D9C LDRSW X9, [X10]
	0x03D62DA0 ADD X8, X8, X9, 0x4, LSL
	0x03D62DA4 ADD X0, X8, 0x138
	0x03D62DA8 LDP X8, X1, [X0]
	0x03D62DAC MOV X0, X22
	0x03D62DB0 BLR X8
	0x03D62DB4 CBNZ X23, 0x3D62E24
	0x03D62DB8 LDR X2, [X31 + 0x8]
	0x03D62DBC CMP W19, 0x11
	0x03D62DC0 B.EQ 0x3D62DC8
	0x03D62DC4 CBNZ W19, 0x3D62DE4
	0x03D62DC8 LDR X8, [X20 + 0x438]
	0x03D62DCC CBZ X8, 0x3D62DE4
	0x03D62DD0 LDR X9, [X8 + 0x18]
	0x03D62DD4 LDR X0, [X8 + 0x40]
	0x03D62DD8 LDR X3, [X8 + 0x28]
	0x03D62DDC MOV X1, X24
	0x03D62DE0 BLR X9
	0x03D62DE4 LDP X20, X19, [X31 + 0x70]
	0x03D62DE8 LDP X22, X21, [X31 + 0x60]
	0x03D62DEC LDP X24, X23, [X31 + 0x50]
	0x03D62DF0 LDP X26, X25, [X31 + 0x40]
	0x03D62DF4 LDP X28, X27, [X31 + 0x30]
	0x03D62DF8 LDP X29, X30, [X31 + 0x20]
	0x03D62DFC ADD X31, X31, 0x80
	0x03D62E00 RET
	0x03D62E04 BL 0x1C16F20
	0x03D62E08 BL 0x1C16F20
	0x03D62E0C BL 0x1C16F20
	0x03D62E10 BL 0x1C16F20
	0x03D62E14 BL 0x1C16F20
	0x03D62E18 BL 0x1C16F20
	0x03D62E1C BL 0x1C16F20
	0x03D62E20 BL 0x1C16F20
	0x03D62E24 MOV X0, X23
	0x03D62E28 BL 0x1C16F18
	0x03D62E2C BL 0x1C16F20
	0x03D62E30 BL 0x1C16F20
	0x03D62E34 BL 0x1C16F20
	0x03D62E38 BL 0x1C16F20
	0x03D62E3C BL 0x1C16F20
	0x03D62E40 BL 0x1C16F20
	0x03D62E44 B 0x3D62E60
	0x03D62E48 B 0x3D62E60
	0x03D62E4C B 0x3D62E60
	0x03D62E50 B 0x3D62E60
	0x03D62E54 B 0x3D62F48
	0x03D62E58 B 0x3D62E60
	0x03D62E5C B 0x3D62E60
	0x03D62E60 MOV X21, X31
	0x03D62E64 B 0x3D62EB0
	0x03D62E68 B 0x3D62F48
	0x03D62E6C B 0x3D62F48
	0x03D62E70 B 0x3D62F48
	0x03D62E74 B 0x3D62F48
	0x03D62E78 B 0x3D62F48
	0x03D62E7C MOVZ W24, 0x1
	0x03D62E80 B 0x3D62EB0
	0x03D62E84 B 0x3D62F48
	0x03D62E88 B 0x3D62F48
	0x03D62E8C B 0x3D62F48
	0x03D62E90 B 0x3D62F48
	0x03D62E94 B 0x3D62F48
	0x03D62E98 B 0x3D62EB0
	0x03D62E9C B 0x3D62F48
	0x03D62EA0 B 0x3D62F48
	0x03D62EA4 B 0x3D62F48
	0x03D62EA8 B 0x3D62F48
	0x03D62EAC B 0x3D62EB0
	0x03D62EB0 CMP W1, 0x1
	0x03D62EB4 B.NE 0x3D62ED0
	0x03D62EB8 BL 0x3EB1AD0
	0x03D62EBC LDR X23, [X0]
	0x03D62EC0 BL 0x3EB1AE0
	0x03D62EC4 MOV W19, W31
	0x03D62EC8 CBNZ X22, 0x3D62A78
	0x03D62ECC B 0x3D62AD0
	0x03D62ED0 MOV X19, X0
	0x03D62ED4 MOV X23, X31
	0x03D62ED8 B 0x3D62EE0
	0x03D62EDC MOV X19, X0
	0x03D62EE0 CBZ X22, 0x3D62F3C
	0x03D62EE4 LDR X8, [X22]
	0x03D62EE8 LDR X1, [X26]
	0x03D62EEC LDRH W9, [X8 + 0x12E]
	0x03D62EF0 CBZ X9, 0x3D62F14
	0x03D62EF4 LDR X10, [X8 + 0xB0]
	0x03D62EF8 ADD X10, X10, 0x8
	0x03D62EFC LDUR X11, [X10 - 0x8]
	0x03D62F00 CMP X11, X1
	0x03D62F04 B.EQ 0x3D62F24
	0x03D62F08 SUBS X9, X9, 0x1
	0x03D62F0C ADD X10, X10, 0x10
	0x03D62F10 B.NE 0x3D62EFC
	0x03D62F14 MOV X0, X22
	0x03D62F18 MOV W2, W31
	0x03D62F1C BL 0x1C5C788
	0x03D62F20 B 0x3D62F30
	0x03D62F24 LDRSW X9, [X10]
	0x03D62F28 ADD X8, X8, X9, 0x4, LSL
	0x03D62F2C ADD X0, X8, 0x138
	0x03D62F30 LDP X8, X1, [X0]
	0x03D62F34 MOV X0, X22
	0x03D62F38 BLR X8
	0x03D62F3C CBZ X23, 0x3D62FEC
	0x03D62F40 MOV X0, X23
	0x03D62F44 BL 0x1C16F18
	0x03D62F48 MOV X24, X21
	0x03D62F4C ADRP X21, 0x391000
	0x03D62F50 LDR X21, [X21 + 0xE00]
	0x03D62F54 CMP W1, 0x1
	0x03D62F58 B.NE 0x3D62F74
	0x03D62F5C BL 0x3EB1AD0
	0x03D62F60 LDR X23, [X0]
	0x03D62F64 BL 0x3EB1AE0
	0x03D62F68 MOV W19, W31
	0x03D62F6C CBNZ X22, 0x3D62D5C
	0x03D62F70 B 0x3D62DB4
	0x03D62F74 MOV X19, X0
	0x03D62F78 MOV X23, X31
	0x03D62F7C B 0x3D62F84
	0x03D62F80 MOV X19, X0
	0x03D62F84 CBZ X22, 0x3D62FE8
	0x03D62F88 LDR X8, [X22]
	0x03D62F8C ADRP X10, 0x391000
	0x03D62F90 LDRH W9, [X8 + 0x12E]
	0x03D62F94 LDR X10, [X10 + 0xE00]
	0x03D62F98 LDR X1, [X10]
	0x03D62F9C CBZ X9, 0x3D62FC0
	0x03D62FA0 LDR X10, [X8 + 0xB0]
	0x03D62FA4 ADD X10, X10, 0x8
	0x03D62FA8 LDUR X11, [X10 - 0x8]
	0x03D62FAC CMP X11, X1
	0x03D62FB0 B.EQ 0x3D62FD0
	0x03D62FB4 SUBS X9, X9, 0x1
	0x03D62FB8 ADD X10, X10, 0x10
	0x03D62FBC B.NE 0x3D62FA8
	0x03D62FC0 MOV X0, X22
	0x03D62FC4 MOV W2, W31
	0x03D62FC8 BL 0x1C5C788
	0x03D62FCC B 0x3D62FDC
	0x03D62FD0 LDRSW X9, [X10]
	0x03D62FD4 ADD X8, X8, X9, 0x4, LSL
	0x03D62FD8 ADD X0, X8, 0x138
	0x03D62FDC LDP X8, X1, [X0]
	0x03D62FE0 MOV X0, X22
	0x03D62FE4 BLR X8
	0x03D62FE8 CBNZ X23, 0x3D62FF4
	0x03D62FEC MOV X0, X19
	0x03D62FF0 BL 0x1D2C690
	0x03D62FF4 MOV X0, X23
	0x03D62FF8 BL 0x1C16F18
	0x03D62FFC BL 0x1990590
	0x03D63000 MOV X1, X31
	0x03D63004 B 0x33BDD8C
	0x03D63008 STP X30, X21, [X31 - 0x20]!
	0x03D6300C STP X20, X19, [X31 + 0x10]
	0x03D63010 ADRP X21, 0x684000
	0x03D63014 LDRB W8, [X21 + 0xC9F]
	0x03D63018 MOV X20, X1
	0x03D6301C MOV X19, X0
	0x03D63020 TBNZ X8, 0x0, 0x3D63044
	0x03D63024 ADRP X0, 0x3B9000
	0x03D63028 LDR X0, [X0 + 0x128]
	0x03D6302C BL 0x1C16CF4
	0x03D63030 ADRP X0, 0x3BA000
	0x03D63034 LDR X0, [X0 + 0xF10]
	0x03D63038 BL 0x1C16CF4
	0x03D6303C MOVZ W8, 0x1
	0x03D63040 STRB W8, [X21 + 0xC9F]
	0x03D63044 LDR X0, [X19 + 0x418]
	0x03D63048 CBZ X0, 0x3D630E8
	0x03D6304C MOV X1, X31
	0x03D63050 BL 0x3DE7EEC
	0x03D63054 CBZ X20, 0x3D630E8
	0x03D63058 ADRP X8, 0x3BA000
	0x03D6305C LDR X8, [X8 + 0xF10]
	0x03D63060 MOV X19, X0
	0x03D63064 LDRB W0, [X20 + 0x38]
	0x03D63068 LDR X1, [X8]
	0x03D6306C BL 0x266EACC
	0x03D63070 CBZ X19, 0x3D630E8
	0x03D63074 ADRP X10, 0x3B9000
	0x03D63078 LDR X8, [X19]
	0x03D6307C LDR X10, [X10 + 0x128]
	0x03D63080 MOV X20, X0
	0x03D63084 LDRH W9, [X8 + 0x12E]
	0x03D63088 LDR X1, [X10]
	0x03D6308C CBZ X9, 0x3D630B0
	0x03D63090 LDR X10, [X8 + 0xB0]
	0x03D63094 ADD X10, X10, 0x8
	0x03D63098 LDUR X11, [X10 - 0x8]
	0x03D6309C CMP X11, X1
	0x03D630A0 B.EQ 0x3D630C0
	0x03D630A4 SUBS X9, X9, 0x1
	0x03D630A8 ADD X10, X10, 0x10
	0x03D630AC B.NE 0x3D63098
	0x03D630B0 MOVZ W2, 0x12
	0x03D630B4 MOV X0, X19
	0x03D630B8 BL 0x1C5C788
	0x03D630BC B 0x3D630D0
	0x03D630C0 LDR W9, [X10]
	0x03D630C4 ADD W9, W9, 0x12
	0x03D630C8 ADD X8, X8, W9, 0x4, SXTW
	0x03D630CC ADD X0, X8, 0x138
	0x03D630D0 LDP X3, X2, [X0]
	0x03D630D4 MOV X0, X19
	0x03D630D8 MOV X1, X20
	0x03D630DC LDP X20, X19, [X31 + 0x10]
	0x03D630E0 LDP X30, X21, [X31], #0x20
	0x03D630E4 BR X3
	0x03D630E8 BL 0x1C16F20
	0x03D630EC STR X30, [X31 - 0x20]!
	0x03D630F0 STP X20, X19, [X31 + 0x10]
	0x03D630F4 CBZ X1, 0x3D63168
	0x03D630F8 LDR W8, [X1 + 0x9C]
	0x03D630FC MOV X20, X1
	0x03D63100 AND W9, W8, 0x7FFFFFFF
	0x03D63104 MOVZ W8, 0x7F800000
	0x03D63108 CMP W9, W8
	0x03D6310C B.HI 0x3D63150
	0x03D63110 LDR W9, [X20 + 0xA0]
	0x03D63114 AND W9, W9, 0x7FFFFFFF
	0x03D63118 CMP W9, W8
	0x03D6311C B.HI 0x3D63150
	0x03D63120 MOV X19, X0
	0x03D63124 LDR X0, [X0 + 0x408]
	0x03D63128 CBZ X0, 0x3D63168
	0x03D6312C MOV X1, X31
	0x03D63130 BL 0x3D70CB4
	0x03D63134 LDR W8, [X20 + 0xA4]
	0x03D63138 MOV X0, X19
	0x03D6313C CMP W8, 0x3
	0x03D63140 B.LT 0x3D6315C
	0x03D63144 LDP X20, X19, [X31 + 0x10]
	0x03D63148 LDR X30, [X31], #0x20
	0x03D6314C B 0x3D608A8
	0x03D63150 LDP X20, X19, [X31 + 0x10]
	0x03D63154 LDR X30, [X31], #0x20
	0x03D63158 RET
	0x03D6315C LDP X20, X19, [X31 + 0x10]
	0x03D63160 LDR X30, [X31], #0x20
	0x03D63164 B 0x3D6316C
	0x03D63168 BL 0x1C16F20
	0x03D6316C STR X30, [X31 - 0x20]!
	0x03D63170 STP X20, X19, [X31 + 0x10]
	0x03D63174 LDR X20, [X0 + 0x408]
	0x03D63178 MOV X1, X31
	0x03D6317C MOV X19, X0
	0x03D63180 BL 0x3DEC528
	0x03D63184 CBZ X20, 0x3D631A8
	0x03D63188 MOV X0, X20
	0x03D6318C MOV V0.16B, V2.16B
	0x03D63190 MOV X1, X31
	0x03D63194 BL 0x3D70F1C
	0x03D63198 STRB W31, [X19 + 0x3F9]
	0x03D6319C LDP X20, X19, [X31 + 0x10]
	0x03D631A0 LDR X30, [X31], #0x20
	0x03D631A4 RET
	0x03D631A8 BL 0x1C16F20
	0x03D631AC STP D9, D8, [X31 - 0x40]!
	0x03D631B0 STP X30, X23, [X31 + 0x10]
	0x03D631B4 STP X22, X21, [X31 + 0x20]
	0x03D631B8 STP X20, X19, [X31 + 0x30]
	0x03D631BC ADRP X21, 0x684000
	0x03D631C0 LDRB W8, [X21 + 0xCA0]
	0x03D631C4 MOV X20, X1
	0x03D631C8 MOV X19, X0
	0x03D631CC TBNZ X8, 0x0, 0x3D63214
	0x03D631D0 ADRP X0, 0x403000
	0x03D631D4 LDR X0, [X0 + 0x728]
	0x03D631D8 BL 0x1C16CF4
	0x03D631DC ADRP X0, 0x3B9000
	0x03D631E0 LDR X0, [X0 + 0x128]
	0x03D631E4 BL 0x1C16CF4
	0x03D631E8 ADRP X0, 0x390000
	0x03D631EC LDR X0, [X0 + 0x5A8]
	0x03D631F0 BL 0x1C16CF4
	0x03D631F4 ADRP X0, 0x403000
	0x03D631F8 LDR X0, [X0 + 0x4D0]
	0x03D631FC BL 0x1C16CF4
	0x03D63200 ADRP X0, 0x3B8000
	0x03D63204 LDR X0, [X0 + 0x898]
	0x03D63208 BL 0x1C16CF4
	0x03D6320C MOVZ W8, 0x1
	0x03D63210 STRB W8, [X21 + 0xCA0]
	0x03D63214 CBZ X20, 0x3D633F0
	0x03D63218 MOV X0, X20
	0x03D6321C MOV X1, X31
	0x03D63220 BL 0x3D9C848
	0x03D63224 CBZ X0, 0x3D633A0
	0x03D63228 ADRP X8, 0x403000
	0x03D6322C LDR X8, [X8 + 0x4D0]
	0x03D63230 LDR X9, [X0]
	0x03D63234 LDR X8, [X8]
	0x03D63238 LDRB W11, [X9 + 0x130]
	0x03D6323C LDRB W10, [X8 + 0x130]
	0x03D63240 CMP W11, W10
	0x03D63244 B.CC 0x3D633A0
	0x03D63248 LDR X9, [X9 + 0xC8]
	0x03D6324C ADD X9, X9, X10, 0x3, LSL
	0x03D63250 LDUR X9, [X9 - 0x8]
	0x03D63254 CMP X9, X8
	0x03D63258 CSEL X22, X0, X31, EQ
	0x03D6325C B.NE 0x3D633A0
	0x03D63260 CBZ X22, 0x3D633F0
	0x03D63264 LDR X0, [X19 + 0x400]
	0x03D63268 CBZ X0, 0x3D633F0
	0x03D6326C ADRP X8, 0x403000
	0x03D63270 LDR X1, [X22 + 0x3F8]
	0x03D63274 LDR X8, [X8 + 0x728]
	0x03D63278 LDR X2, [X8]
	0x03D6327C BL 0x2AA5018
	0x03D63280 CBZ X0, 0x3D633F0
	0x03D63284 LDR X0, [X0 + 0x18]
	0x03D63288 CBZ X0, 0x3D633F0
	0x03D6328C MOV X1, X31
	0x03D63290 BL 0x3DE7EEC
	0x03D63294 MOV X21, X0
	0x03D63298 MOV X0, X22
	0x03D6329C MOV X1, X31
	0x03D632A0 BL 0x3DEC528
	0x03D632A4 FADD S0, S2, S0
	0x03D632A8 MOV X0, X31
	0x03D632AC BL 0x3DFED98
	0x03D632B0 CBZ X21, 0x3D633F0
	0x03D632B4 ADRP X11, 0x3B9000
	0x03D632B8 LDR X9, [X21]
	0x03D632BC LDR X11, [X11 + 0x128]
	0x03D632C0 MOV X8, X1
	0x03D632C4 MOV X22, X0
	0x03D632C8 LDRH W10, [X9 + 0x12E]
	0x03D632CC LDR X1, [X11]
	0x03D632D0 AND X23, X8, 0x0
	0x03D632D4 CBZ X10, 0x3D632F8
	0x03D632D8 LDR X8, [X9 + 0xB0]
	0x03D632DC ADD X8, X8, 0x8
	0x03D632E0 LDUR X11, [X8 - 0x8]
	0x03D632E4 CMP X11, X1
	0x03D632E8 B.EQ 0x3D63308
	0x03D632EC SUBS X10, X10, 0x1
	0x03D632F0 ADD X8, X8, 0x10
	0x03D632F4 B.NE 0x3D632E0
	0x03D632F8 MOVZ W2, 0x19
	0x03D632FC MOV X0, X21
	0x03D63300 BL 0x1C5C788
	0x03D63304 B 0x3D63318
	0x03D63308 LDR W8, [X8]
	0x03D6330C ADD W8, W8, 0x19
	0x03D63310 ADD X8, X9, W8, 0x4, SXTW
	0x03D63314 ADD X0, X8, 0x138
	0x03D63318 LDP X8, X3, [X0]
	0x03D6331C MOV X0, X21
	0x03D63320 MOV X1, X22
	0x03D63324 MOV X2, X23
	0x03D63328 BLR X8
	0x03D6332C ADRP X8, 0x390000
	0x03D63330 LDR X8, [X8 + 0x5A8]
	0x03D63334 LDR V8, [X20 + 0x9C]
	0x03D63338 LDR V9, [X20 + 0x8C]
	0x03D6333C LDR X0, [X8]
	0x03D63340 LDR W8, [X0 + 0xE0]
	0x03D63344 CBNZ W8, 0x3D6334C
	0x03D63348 BL 0x1C16DFC
	0x03D6334C MOVZ W8, 0x1
	0x03D63350 FABD S0, S8, S8
	0x03D63354 FMOV S1, W8
	0x03D63358 FCMP S0, S1
	0x03D6335C B.MI 0x3D633A0
	0x03D63360 LDR X21, [X19 + 0x410]
	0x03D63364 MOV X0, X20
	0x03D63368 MOV X1, X31
	0x03D6336C BL 0x3D9C848
	0x03D63370 CBZ X21, 0x3D633F0
	0x03D63374 CBZ X0, 0x3D63398
	0x03D63378 ADRP X8, 0x3B8000
	0x03D6337C LDR X8, [X8 + 0x898]
	0x03D63380 LDR X9, [X0]
	0x03D63384 LDR X8, [X8]
	0x03D63388 LDRB W11, [X9 + 0x130]
	0x03D6338C LDRB W10, [X8 + 0x130]
	0x03D63390 CMP W11, W10
	0x03D63394 B.CS 0x3D633B4
	0x03D63398 MOV X1, X31
	0x03D6339C B 0x3D633C8
	0x03D633A0 LDP X20, X19, [X31 + 0x30]
	0x03D633A4 LDP X22, X21, [X31 + 0x20]
	0x03D633A8 LDP X30, X23, [X31 + 0x10]
	0x03D633AC LDP D9, D8, [X31], #0x40
	0x03D633B0 RET
	0x03D633B4 LDR X9, [X9 + 0xC8]
	0x03D633B8 ADD X9, X9, X10, 0x3, LSL
	0x03D633BC LDUR X9, [X9 - 0x8]
	0x03D633C0 CMP X9, X8
	0x03D633C4 CSEL X1, X0, X31, EQ
	0x03D633C8 MOV X0, X21
	0x03D633CC MOV X2, X31
	0x03D633D0 BL 0x3DF6374
	0x03D633D4 MOV W1, W0
	0x03D633D8 MOV X0, X19
	0x03D633DC LDP X20, X19, [X31 + 0x30]
	0x03D633E0 LDP X22, X21, [X31 + 0x20]
	0x03D633E4 LDP X30, X23, [X31 + 0x10]
	0x03D633E8 LDP D9, D8, [X31], #0x40
	0x03D633EC B 0x3D633F4
	0x03D633F0 BL 0x1C16F20
	0x03D633F4 STP X30, X21, [X31 - 0x20]!
	0x03D633F8 STP X20, X19, [X31 + 0x10]
	0x03D633FC ADRP X21, 0x684000
	0x03D63400 LDRB W8, [X21 + 0xCA4]
	0x03D63404 MOV W19, W1
	0x03D63408 MOV X20, X0
	0x03D6340C TBNZ X8, 0x0, 0x3D63424
	0x03D63410 ADRP X0, 0x3B9000
	0x03D63414 LDR X0, [X0 + 0x120]
	0x03D63418 BL 0x1C16CF4
	0x03D6341C MOVZ W8, 0x1
	0x03D63420 STRB W8, [X21 + 0xCA4]
	0x03D63424 LDR X21, [X20 + 0x428]
	0x03D63428 CBZ X21, 0x3D6349C
	0x03D6342C LDR X0, [X20 + 0x410]
	0x03D63430 CBZ X0, 0x3D634E0
	0x03D63434 MOV W1, W19
	0x03D63438 MOV X2, X31
	0x03D6343C BL 0x3DF6294
	0x03D63440 CBZ X0, 0x3D634E0
	0x03D63444 MOV X1, X31
	0x03D63448 BL 0x3DE0EB8
	0x03D6344C CBZ X0, 0x3D634E0
	0x03D63450 ADRP X10, 0x3B9000
	0x03D63454 LDR X8, [X0]
	0x03D63458 LDR X10, [X10 + 0x120]
	0x03D6345C MOV X20, X0
	0x03D63460 LDRH W9, [X8 + 0x12E]
	0x03D63464 LDR X1, [X10]
	0x03D63468 CBZ X9, 0x3D6348C
	0x03D6346C LDR X10, [X8 + 0xB0]
	0x03D63470 ADD X10, X10, 0x8
	0x03D63474 LDUR X11, [X10 - 0x8]
	0x03D63478 CMP X11, X1
	0x03D6347C B.EQ 0x3D634A8
	0x03D63480 SUBS X9, X9, 0x1
	0x03D63484 ADD X10, X10, 0x10
	0x03D63488 B.NE 0x3D63474
	0x03D6348C MOVZ W2, 0x2C
	0x03D63490 MOV X0, X20
	0x03D63494 BL 0x1C5C788
	0x03D63498 B 0x3D634B8
	0x03D6349C LDP X20, X19, [X31 + 0x10]
	0x03D634A0 LDP X30, X21, [X31], #0x20
	0x03D634A4 RET
	0x03D634A8 LDR W9, [X10]
	0x03D634AC ADD W9, W9, 0x2C
	0x03D634B0 ADD X8, X8, W9, 0x4, SXTW
	0x03D634B4 ADD X0, X8, 0x138
	0x03D634B8 LDP X8, X1, [X0]
	0x03D634BC MOV X0, X20
	0x03D634C0 BLR X8
	0x03D634C4 LDR X3, [X21 + 0x18]
	0x03D634C8 LDR X0, [X21 + 0x40]
	0x03D634CC LDR X2, [X21 + 0x28]
	0x03D634D0 MOV W1, W19
	0x03D634D4 LDP X20, X19, [X31 + 0x10]
	0x03D634D8 LDP X30, X21, [X31], #0x20
	0x03D634DC BR X3
	0x03D634E0 BL 0x1C16F20
	0x03D634E4 STP X30, X23, [X31 - 0x30]!
	0x03D634E8 STP X22, X21, [X31 + 0x10]
	0x03D634EC STP X20, X19, [X31 + 0x20]
	0x03D634F0 ADRP X20, 0x684000
	0x03D634F4 LDRB W8, [X20 + 0xCA1]
	0x03D634F8 MOV X21, X1
	0x03D634FC MOV X19, X0
	0x03D63500 TBNZ X8, 0x0, 0x3D63530
	0x03D63504 ADRP X0, 0x3BB000
	0x03D63508 LDR X0, [X0 + 0xD30]
	0x03D6350C BL 0x1C16CF4
	0x03D63510 ADRP X0, 0x3B9000
	0x03D63514 LDR X0, [X0 + 0xE78]
	0x03D63518 BL 0x1C16CF4
	0x03D6351C ADRP X0, 0x403000
	0x03D63520 LDR X0, [X0 + 0x4D0]
	0x03D63524 BL 0x1C16CF4
	0x03D63528 MOVZ W8, 0x1
	0x03D6352C STRB W8, [X20 + 0xCA1]
	0x03D63530 LDRB W8, [X19 + 0x3C8]
	0x03D63534 CBZ W8, 0x3D63588
	0x03D63538 CBZ X21, 0x3D636C4
	0x03D6353C LDR X8, [X21]
	0x03D63540 MOV X0, X21
	0x03D63544 LDP X9, X1, [X8 + 0x1D8]
	0x03D63548 BLR X9
	0x03D6354C CBZ X0, 0x3D63588
	0x03D63550 ADRP X8, 0x403000
	0x03D63554 LDR X8, [X8 + 0x4D0]
	0x03D63558 LDR X9, [X0]
	0x03D6355C MOV X20, X0
	0x03D63560 LDR X8, [X8]
	0x03D63564 LDRB W11, [X9 + 0x130]
	0x03D63568 LDRB W10, [X8 + 0x130]
	0x03D6356C CMP W11, W10
	0x03D63570 B.CC 0x3D63588
	0x03D63574 LDR X9, [X9 + 0xC8]
	0x03D63578 ADD X9, X9, X10, 0x3, LSL
	0x03D6357C LDUR X9, [X9 - 0x8]
	0x03D63580 CMP X9, X8
	0x03D63584 B.EQ 0x3D63598
	0x03D63588 LDP X20, X19, [X31 + 0x20]
	0x03D6358C LDP X22, X21, [X31 + 0x10]
	0x03D63590 LDP X30, X23, [X31], #0x30
	0x03D63594 RET
	0x03D63598 LDR X8, [X20 + 0x3F8]
	0x03D6359C CBZ X8, 0x3D636C4
	0x03D635A0 LDRB W8, [X8 + 0x61]
	0x03D635A4 CBZ W8, 0x3D63588
	0x03D635A8 ADRP X23, 0x3B9000
	0x03D635AC LDR X23, [X23 + 0xE78]
	0x03D635B0 MOV X0, X21
	0x03D635B4 LDR X1, [X23]
	0x03D635B8 BL 0x1C16E00
	0x03D635BC CBZ X0, 0x3D63604
	0x03D635C0 LDR X8, [X0]
	0x03D635C4 LDR X1, [X23]
	0x03D635C8 MOV X22, X0
	0x03D635CC LDRH W9, [X8 + 0x12E]
	0x03D635D0 CBZ X9, 0x3D635F4
	0x03D635D4 LDR X10, [X8 + 0xB0]
	0x03D635D8 ADD X10, X10, 0x8
	0x03D635DC LDUR X11, [X10 - 0x8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X20, 0x686000
	014 Move W8, [X20+3237]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {64}
	020 Move X0, 0x3BB000
	021 Move X0, [X0+264]
	022 Call 0x1C17CF4
	023 Move X0, 0x392000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0x405000
	027 Move X0, [X0+1840]
	028 Call 0x1C17CF4
	029 Move X0, 0x3BB000
	030 Move X0, [X0+272]
	031 Call 0x1C17CF4
	032 Move X0, 0x405000
	033 Move X0, [X0+1504]
	034 Call 0x1C17CF4
	035 Move X0, 0x3BB000
	036 Move X0, [X0+280]
	037 Call 0x1C17CF4
	038 Move X0, 0x392000
	039 Move X0, [X0+3608]
	040 Call 0x1C17CF4
	041 Move X0, 0x405000
	042 Move X0, [X0+1848]
	043 Call 0x1C17CF4
	044 Move X0, 0x405000
	045 Move X0, [X0+1856]
	046 Call 0x1C17CF4
	047 Move X0, 0x405000
	048 Move X0, [X0+1864]
	049 Call 0x1C17CF4
	050 Move X0, 0x405000
	051 Move X0, [X0+1872]
	052 Call 0x1C17CF4
	053 Move X0, 0x405000
	054 Move X0, [X0+1880]
	055 Call 0x1C17CF4
	056 Move X0, 0x405000
	057 Move X0, [X0+1232]
	058 Call 0x1C17CF4
	059 Move X0, 0x392000
	060 Move X0, [X0+2440]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+3237], W8
	064 Move [X31+40], X31
	065 Move [X31+24], X31
	066 Move [X31+20], W31
	067 Move X0, [X19+1056]
	068 Compare X0, 0
	069 JumpIfEqual {474}
	070 Move X1, X31
	071 Call Columns.get_visibleList, X0
	072 Compare X0, 0
	073 JumpIfEqual {474}
	074 Move X10, 0x3BB000
	075 Move X8, [X0]
	076 Move X10, [X10+272]
	077 Move X20, X0
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X1, [X10]
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X20
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X23, 0x392000
	097 Move X23, [X23+3584]
	098 Move X0, X20
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X20, X0
	101 Compare X0, 0
	102 JumpIfEqual {487}
	103 Move X22, 0x392000
	104 Move X24, 0x3BB000
	105 Move X25, 0x3BB000
	106 Move X26, 0x392000
	107 Move X27, 0x405000
	108 Move X22, [X22+3608]
	109 Move X24, [X24+280]
	110 Move X25, [X25+264]
	111 Move X26, [X26+2440]
	112 Move X27, [X27+1232]
	113 Move X8, [X20]
	114 Move X1, [X22]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move X0, X20
	125 Move W2, W31
	126 Call 0x1C5D788
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X1, [X0+8]
	132 Move X0, X20
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {206}
	138 Move X8, [X20]
	139 Move X1, [X24]
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Compare X9, 0
	142 JumpIfEqual {149}
	143 Move X10, [X8+176]
	144 Add X10, X10, 8
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Subtract X9, X9, 1
	148 Add X10, X10, 16
	149 Move X0, X20
	150 Move W2, W31
	151 Call 0x1C5D788
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Add X8, X8, X9
	154 Add X0, X8, 312
	155 Move X8, [X0]
	156 Move X1, [X0+8]
	157 Move X0, X20
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X1, X0
	160 Move X0, [X19+1024]
	161 Compare X0, 0
	162 JumpIfEqual {471}
	163 Move X3, [X25]
	164 Add X2, X31, 40
	165 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {113}
	170 Move X8, [X31+40]
	171 Compare X8, 0
	172 JumpIfEqual {476}
	173 Move X0, [X8+16]
	174 Compare X0, 0
	175 JumpIfEqual {477}
	176 Move X1, [X26]
	177 Call MultiColumnHeaderColumn.set_sortOrderLabel, X0, X1
	178 Move X8, [X31+40]
	179 Compare X8, 0
	180 JumpIfEqual {475}
	181 Move X0, [X27]
	182 Move X21, [X8+16]
	183 Move W9, [X0+224]
	184 Compare W9, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Compare X21, 0
	188 JumpIfEqual {479}
	189 Move X8, [X27]
	190 Move X8, [X8+184]
	191 Move X1, [X8+16]
	192 Move X0, X21
	193 Move X2, X31
	194 Call VisualElement.RemoveFromClassList, X0, X1
	195 Move X8, [X31+40]
	196 Compare X8, 0
	197 JumpIfEqual {480}
	198 Move X0, [X8+16]
	199 Compare X0, 0
	200 JumpIfEqual {478}
	201 Move X8, [X27]
	202 Move X8, [X8+184]
	203 Move X1, [X8+24]
	204 Move X2, X31
	205 Call VisualElement.RemoveFromClassList, X0, X1
	206 Move X21, X31
	207 Move W22, 5
	208 Compare X20, 0
	209 JumpIfEqual {231}
	210 Move X8, [X20]
	211 Move X1, [X23]
	212 NotImplemented "Instruction LDRH not yet implemented."
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move X0, X20
	222 Move W2, W31
	223 Call 0x1C5D788
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Add X8, X8, X9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X1, [X0+8]
	229 Move X0, X20
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Compare X21, 0
	232 JumpIfNotEqual {488}
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Compare W22, 0
	235 JumpIfNotEqual {458}
	236 Move X8, 0x404000
	237 Move X8, [X8+1880]
	238 Move X20, 0x404000
	239 Move X0, [X8]
	240 Move X20, [X20+1856]
	241 Call 0x1C17F10
	242 Move X1, [X20]
	243 Move X20, X0
	244 Call List`1<Object>..ctor, X0
	245 Move X21, [X19+976]
	246 Compare X21, 0
	247 JumpIfEqual {474}
	248 Move X10, 0x404000
	249 Move X8, [X21]
	250 Move X10, [X10+1840]
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Move X1, [X10]
	253 Compare X9, 0
	254 JumpIfEqual {261}
	255 Move X10, [X8+176]
	256 Add X10, X10, 8
	257 NotImplemented "Instruction LDUR not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Subtract X9, X9, 1
	260 Add X10, X10, 16
	261 Move X0, X21
	262 Move W2, W31
	263 Call 0x1C5D788
	264 NotImplemented "Instruction LDRSW not yet implemented."
	265 Add X8, X8, X9
	266 Add X0, X8, 312
	267 Move X8, [X0]
	268 Move X1, [X0+8]
	269 Move X0, X21
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Move X21, X0
	272 Compare X0, 0
	273 JumpIfEqual {490}
	274 Move X24, 0x391000
	275 Move X25, 0x404000
	276 Move X26, 0x3BA000
	277 Move X27, 0x404000
	278 Move X28, 0x404000
	279 Move X24, [X24+3608]
	280 Move X25, [X25+1504]
	281 Move X26, [X26+264]
	282 Move X27, [X27+1848]
	283 Move X28, [X28+1232]
	284 Move X8, [X21]
	285 Move X1, [X24]
	286 NotImplemented "Instruction LDRH not yet implemented."
	287 Compare X9, 0
	288 JumpIfEqual {295}
	289 Move X10, [X8+176]
	290 Add X10, X10, 8
	291 NotImplemented "Instruction LDUR not yet implemented."
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Subtract X9, X9, 1
	294 Add X10, X10, 16
	295 Move X0, X21
	296 Move W2, W31
	297 Call 0x1C5D788
	298 NotImplemented "Instruction LDRSW not yet implemented."
	299 Add X8, X8, X9
	300 Add X0, X8, 312
	301 Move X8, [X0]
	302 Move X1, [X0+8]
	303 Move X0, X21
	304 NotImplemented "Instruction BLR not yet implemented."
	305 Move TEMP, X0
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {402}
	309 Move X8, [X21]
	310 Move X1, [X25]
	311 NotImplemented "Instruction LDRH not yet implemented."
	312 Compare X9, 0
	313 JumpIfEqual {320}
	314 Move X10, [X8+176]
	315 Add X10, X10, 8
	316 NotImplemented "Instruction LDUR not yet implemented."
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Subtract X9, X9, 1
	319 Add X10, X10, 16
	320 Move X0, X21
	321 Move W2, W31
	322 Call 0x1C5D788
	323 NotImplemented "Instruction LDRSW not yet implemented."
	324 Add X8, X8, X9
	325 Add X0, X8, 312
	326 Move X8, [X0]
	327 Move X1, [X0+8]
	328 Move X0, X21
	329 NotImplemented "Instruction BLR not yet implemented."
	330 Move X22, X0
	331 Compare X0, 0
	332 JumpIfEqual {472}
	333 Move X0, [X19+1024]
	334 Compare X0, 0
	335 JumpIfEqual {473}
	336 Move X1, [X22+40]
	337 Move X3, [X26]
	338 Add X2, X31, 24
	339 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {284}
	344 Compare X20, 0
	345 JumpIfEqual {481}
	346 Move W10, [X20+28]
	347 Move X1, [X31+24]
	348 Move X8, [X20+16]
	349 Move X9, [X27]
	350 Add W10, W10, 1
	351 Move [X20+28], W10
	352 Compare X8, 0
	353 JumpIfEqual {482}
	354 NotImplemented "Instruction LDRSW not yet implemented."
	355 Move W11, [X8+24]
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Add W9, W10, 1
	358 Add X8, X8, X10
	359 Move [X20+24], W9
	360 Move [X8+32], X1
	361 Move X8, [X9+32]
	362 Move X8, [X8+192]
	363 Move X2, [X8+112]
	364 Move X0, X20
	365 Call List`1<Object>.AddWithResize, X0, X1
	366 Move W9, [X22+32]
	367 Move X8, [X31+24]
	368 Compare W9, 0
	369 JumpIfEqual {386}
	370 Compare X8, 0
	371 JumpIfEqual {483}
	372 Move X0, [X28]
	373 Move X22, [X8+16]
	374 Move W9, [X0+224]
	375 Compare W9, 0
	376 JumpIfNotEqual {378}
	377 Call 0x1C17DFC
	378 Compare X22, 0
	379 JumpIfEqual {484}
	380 Move X8, [X28]
	381 Move X8, [X8+184]
	382 Move X1, [X8+24]
	383 Move X0, X22
	384 Move X2, X31
	385 Call VisualElement.AddToClassList, X0, X1
	386 Compare X8, 0
	387 JumpIfEqual {485}
	388 Move X0, [X28]
	389 Move X22, [X8+16]
	390 Move W9, [X0+224]
	391 Compare W9, 0
	392 JumpIfNotEqual {394}
	393 Call 0x1C17DFC
	394 Compare X22, 0
	395 JumpIfEqual {486}
	396 Move X8, [X28]
	397 Move X8, [X8+184]
	398 Move X1, [X8+16]
	399 Move X0, X22
	400 Move X2, X31
	401 Call VisualElement.AddToClassList, X0, X1
	402 Move X19, X31
	403 Move W22, 11
	404 Compare X21, 0
	405 JumpIfEqual {427}
	406 Move X8, [X21]
	407 Move X1, [X23]
	408 NotImplemented "Instruction LDRH not yet implemented."
	409 Compare X9, 0
	410 JumpIfEqual {417}
	411 Move X10, [X8+176]
	412 Add X10, X10, 8
	413 NotImplemented "Instruction LDUR not yet implemented."
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Subtract X9, X9, 1
	416 Add X10, X10, 16
	417 Move X0, X21
	418 Move W2, W31
	419 Call 0x1C5D788
	420 NotImplemented "Instruction LDRSW not yet implemented."
	421 Add X8, X8, X9
	422 Add X0, X8, 312
	423 Move X8, [X0]
	424 Move X1, [X0+8]
	425 Move X0, X21
	426 NotImplemented "Instruction BLR not yet implemented."
	427 Compare X19, 0
	428 JumpIfNotEqual {491}
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Compare W22, 0
	431 JumpIfNotEqual {458}
	432 Compare X20, 0
	433 JumpIfEqual {474}
	434 Move W8, [X20+24]
	435 NotImplemented "Instruction CMP not yet implemented."
	436 Move X22, 0x404000
	437 Move X22, [X22+1872]
	438 Move W19, W31
	439 Move X2, [X22]
	440 Move X0, X20
	441 Move W1, W19
	442 Call List`1<Object>.get_Item, X0, X1
	443 Compare X0, 0
	444 JumpIfEqual {474}
	445 Move X21, [X0+16]
	446 Add W19, W19, 1
	447 Add X0, X31, 20
	448 Move X1, X31
	449 Move [X31+20], W19
	450 Call Int32.ToString, X0
	451 Compare X21, 0
	452 JumpIfEqual {474}
	453 Move X1, X0
	454 Move X0, X21
	455 Call MultiColumnHeaderColumn.set_sortOrderLabel, X0, X1
	456 Move W8, [X20+24]
	457 NotImplemented "Instruction CMP not yet implemented."
	458 Move X20, [X31+112]
	459 Move X19, [X31+120]
	460 Move X22, [X31+96]
	461 Move X21, [X31+104]
	462 Move X24, [X31+80]
	463 Move X23, [X31+88]
	464 Move X26, [X31+64]
	465 Move X25, [X31+72]
	466 Move X28, [X31+48]
	467 Move X27, [X31+56]
	468 Move X30, [X31+32]
	469 Add X31, X31, 128
	470 Return 
	471 Call 0x1C17F20
	472 Call 0x1C17F20
	473 Call 0x1C17F20
	474 Call 0x1C17F20
	475 Call 0x1C17F20
	476 Call 0x1C17F20
	477 Call 0x1C17F20
	478 Call 0x1C17F20
	479 Call 0x1C17F20
	480 Call 0x1C17F20
	481 Call 0x1C17F20
	482 Call 0x1C17F20
	483 Call 0x1C17F20
	484 Call 0x1C17F20
	485 Call 0x1C17F20
	486 Call 0x1C17F20
	487 Call 0x1C17F20
	488 Move X0, X21
	489 Call 0x1C17F18
	490 Call 0x1C17F20
	491 Move X0, X19
	492 Call 0x1C17F18
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Call 0x3EB2AD0
	495 Move X19, [X0]
	496 Call 0x3EB2AE0
	497 Move W22, W31
	498 Compare X21, 0
	499 JumpIfNotEqual {406}
	500 Move [X31+8], X0
	501 Move X19, X31
	502 Move [X31+8], X0
	503 Compare X21, 0
	504 JumpIfEqual {526}
	505 Move X8, [X21]
	506 Move X1, [X23]
	507 NotImplemented "Instruction LDRH not yet implemented."
	508 Compare X9, 0
	509 JumpIfEqual {516}
	510 Move X10, [X8+176]
	511 Add X10, X10, 8
	512 NotImplemented "Instruction LDUR not yet implemented."
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Subtract X9, X9, 1
	515 Add X10, X10, 16
	516 Move X0, X21
	517 Move W2, W31
	518 Call 0x1C5D788
	519 NotImplemented "Instruction LDRSW not yet implemented."
	520 Add X8, X8, X9
	521 Add X0, X8, 312
	522 Move X8, [X0]
	523 Move X1, [X0+8]
	524 Move X0, X21
	525 NotImplemented "Instruction BLR not yet implemented."
	526 Compare X19, 0
	527 JumpIfEqual {565}
	528 Move X0, X19
	529 Call 0x1C17F18
	530 NotImplemented "Instruction CMP not yet implemented."
	531 Call 0x3EB2AD0
	532 Move X21, [X0]
	533 Call 0x3EB2AE0
	534 Move W22, W31
	535 Compare X20, 0
	536 JumpIfNotEqual {210}
	537 Move [X31+8], X0
	538 Move X21, X31
	539 Move [X31+8], X0
	540 Compare X20, 0
	541 JumpIfEqual {563}
	542 Move X8, [X20]
	543 Move X1, [X23]
	544 NotImplemented "Instruction LDRH not yet implemented."
	545 Compare X9, 0
	546 JumpIfEqual {553}
	547 Move X10, [X8+176]
	548 Add X10, X10, 8
	549 NotImplemented "Instruction LDUR not yet implemented."
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Subtract X9, X9, 1
	552 Add X10, X10, 16
	553 Move X0, X20
	554 Move W2, W31
	555 Call 0x1C5D788
	556 NotImplemented "Instruction LDRSW not yet implemented."
	557 Add X8, X8, X9
	558 Add X0, X8, 312
	559 Move X8, [X0]
	560 Move X1, [X0+8]
	561 Move X0, X20
	562 NotImplemented "Instruction BLR not yet implemented."
	563 Compare X21, 0
	564 JumpIfNotEqual {567}
	565 Move X0, [X31+8]
	566 Call 0x1D2D690
	567 Move X0, X21
	568 Call 0x1C17F18
	569 Call 0x1991590

Method: System.Void UpdateSortingStatus()

Disassembly:
	0x03D6020C LDR X8, [X20]
	0x03D60210 LDR X1, [X22]
	0x03D60214 LDRH W9, [X8 + 0x12E]
	0x03D60218 CBZ X9, 0x3D6023C
	0x03D6021C LDR X10, [X8 + 0xB0]
	0x03D60220 ADD X10, X10, 0x8
	0x03D60224 LDUR X11, [X10 - 0x8]
	0x03D60228 CMP X11, X1
	0x03D6022C B.EQ 0x3D6024C
	0x03D60230 SUBS X9, X9, 0x1
	0x03D60234 ADD X10, X10, 0x10
	0x03D60238 B.NE 0x3D60224
	0x03D6023C MOV X0, X20
	0x03D60240 MOV W2, W31
	0x03D60244 BL 0x1C5C788
	0x03D60248 B 0x3D60258
	0x03D6024C LDRSW X9, [X10]
	0x03D60250 ADD X8, X8, X9, 0x4, LSL
	0x03D60254 ADD X0, X8, 0x138
	0x03D60258 LDP X8, X1, [X0]
	0x03D6025C MOV X0, X20
	0x03D60260 BLR X8
	0x03D60264 MOV X1, X0
	0x03D60268 MOV X0, X19
	0x03D6026C BL 0x3D6059C
	0x03D60270 B 0x3D601B0
	0x03D60274 MOV X21, X31
	0x03D60278 CBZ X20, 0x3D602D4
	0x03D6027C LDR X8, [X20]
	0x03D60280 LDR X1, [X23]
	0x03D60284 LDRH W9, [X8 + 0x12E]
	0x03D60288 CBZ X9, 0x3D602AC
	0x03D6028C LDR X10, [X8 + 0xB0]
	0x03D60290 ADD X10, X10, 0x8
	0x03D60294 LDUR X11, [X10 - 0x8]
	0x03D60298 CMP X11, X1
	0x03D6029C B.EQ 0x3D602BC
	0x03D602A0 SUBS X9, X9, 0x1
	0x03D602A4 ADD X10, X10, 0x10
	0x03D602A8 B.NE 0x3D60294
	0x03D602AC MOV X0, X20
	0x03D602B0 MOV W2, W31
	0x03D602B4 BL 0x1C5C788
	0x03D602B8 B 0x3D602C8
	0x03D602BC LDRSW X9, [X10]
	0x03D602C0 ADD X8, X8, X9, 0x4, LSL
	0x03D602C4 ADD X0, X8, 0x138
	0x03D602C8 LDP X8, X1, [X0]
	0x03D602CC MOV X0, X20
	0x03D602D0 BLR X8
	0x03D602D4 CBNZ X21, 0x3D604E8
	0x03D602D8 ADRP X8, 0x406000
	0x03D602DC LDR X8, [X8 + 0x660]
	0x03D602E0 ADRP X21, 0x406000
	0x03D602E4 LDR X20, [X19 + 0x420]
	0x03D602E8 LDR X0, [X8]
	0x03D602EC LDR X21, [X21 + 0x680]
	0x03D602F0 BL 0x1C16F10
	0x03D602F4 LDR X2, [X21]
	0x03D602F8 MOV X1, X19
	0x03D602FC MOV X3, X31
	0x03D60300 MOV X21, X0
	0x03D60304 BL 0x2A7689C
	0x03D60308 CBZ X20, 0x3D604E0
	0x03D6030C ADRP X22, 0x406000
	0x03D60310 ADRP X23, 0x406000
	0x03D60314 LDR X22, [X22 + 0x650]
	0x03D60318 LDR X23, [X23 + 0x690]
	0x03D6031C MOV X0, X20
	0x03D60320 MOV X1, X21
	0x03D60324 MOV X2, X31
	0x03D60328 BL 0x3D70AA4
	0x03D6032C LDR X0, [X22]
	0x03D60330 LDR X20, [X19 + 0x420]
	0x03D60334 BL 0x1C16F10
	0x03D60338 LDR X2, [X23]
	0x03D6033C MOV X1, X19
	0x03D60340 MOV X3, X31
	0x03D60344 MOV X21, X0
	0x03D60348 BL 0x2A6B948
	0x03D6034C CBZ X20, 0x3D604E0
	0x03D60350 ADRP X23, 0x406000
	0x03D60354 ADRP X24, 0x406000
	0x03D60358 LDR X23, [X23 + 0x658]
	0x03D6035C LDR X24, [X24 + 0x688]
	0x03D60360 MOV X0, X20
	0x03D60364 MOV X1, X21
	0x03D60368 MOV X2, X31
	0x03D6036C BL 0x3D70B54
	0x03D60370 LDR X0, [X23]
	0x03D60374 LDR X20, [X19 + 0x420]
	0x03D60378 BL 0x1C16F10
	0x03D6037C LDR X2, [X24]
	0x03D60380 MOV X1, X19
	0x03D60384 MOV X3, X31
	0x03D60388 MOV X21, X0
	0x03D6038C BL 0x2A769B4
	0x03D60390 CBZ X20, 0x3D604E0
	0x03D60394 ADRP X23, 0x406000
	0x03D60398 ADRP X24, 0x406000
	0x03D6039C LDR X23, [X23 + 0x668]
	0x03D603A0 LDR X24, [X24 + 0x698]
	0x03D603A4 MOV X0, X20
	0x03D603A8 MOV X1, X21
	0x03D603AC MOV X2, X31
	0x03D603B0 BL 0x3D74BE8
	0x03D603B4 LDR X0, [X23]
	0x03D603B8 LDR X20, [X19 + 0x420]
	0x03D603BC BL 0x1C16F10
	0x03D603C0 LDR X2, [X24]
	0x03D603C4 MOV X1, X19
	0x03D603C8 MOV X3, X31
	0x03D603CC MOV X21, X0
	0x03D603D0 BL 0x2A782C0
	0x03D603D4 CBZ X20, 0x3D604E0
	0x03D603D8 ADRP X23, 0x406000
	0x03D603DC LDR X23, [X23 + 0x6A0]
	0x03D603E0 MOV X0, X20
	0x03D603E4 MOV X1, X21
	0x03D603E8 MOV X2, X31
	0x03D603EC BL 0x3D70C04
	0x03D603F0 LDR X0, [X22]
	0x03D603F4 LDR X20, [X19 + 0x420]
	0x03D603F8 BL 0x1C16F10
	0x03D603FC LDR X2, [X23]
	0x03D60400 MOV X1, X19
	0x03D60404 MOV X3, X31
	0x03D60408 MOV X21, X0
	0x03D6040C BL 0x2A6B948
	0x03D60410 CBZ X20, 0x3D604E0
	0x03D60414 ADRP X22, 0x406000
	0x03D60418 ADRP X23, 0x406000
	0x03D6041C ADRP X24, 0x406000
	0x03D60420 ADRP X25, 0x3BD000
	0x03D60424 ADRP X26, 0x406000
	0x03D60428 ADRP X27, 0x3BD000
	0x03D6042C LDR X22, [X22 + 0x648]
	0x03D60430 LDR X23, [X23 + 0x6A8]
	0x03D60434 LDR X24, [X24 + 0x678]
	0x03D60438 LDR X25, [X25 + 0x660]
	0x03D6043C LDR X26, [X26 + 0x6B0]
	0x03D60440 LDR X27, [X27 + 0x658]
	0x03D60444 MOV X0, X20
	0x03D60448 MOV X1, X21
	0x03D6044C MOV X2, X31
	0x03D60450 BL 0x3D74D48
	0x03D60454 LDR X0, [X22]
	0x03D60458 BL 0x1C16F10
	0x03D6045C LDR X2, [X23]
	0x03D60460 MOV X1, X19
	0x03D60464 MOV X3, X31
	0x03D60468 MOV X20, X0
	0x03D6046C BL 0x2A6B948
	0x03D60470 LDR X0, [X24]
	0x03D60474 BL 0x1C16F10
	0x03D60478 MOV X1, X20
	0x03D6047C MOV X2, X31
	0x03D60480 MOV X21, X0
	0x03D60484 BL 0x3CF8C1C
	0x03D60488 MOV X0, X19
	0x03D6048C MOV X1, X21
	0x03D60490 MOV X2, X31
	0x03D60494 BL 0x3D16A80
	0x03D60498 LDR X0, [X25]
	0x03D6049C BL 0x1C16F10
	0x03D604A0 LDR X2, [X26]
	0x03D604A4 MOV X1, X19
	0x03D604A8 MOV X3, X31
	0x03D604AC MOV X20, X0
	0x03D604B0 BL 0x2D0E824
	0x03D604B4 LDR X3, [X27]
	0x03D604B8 MOV X0, X19
	0x03D604BC MOV X1, X20
	0x03D604C0 LDP X20, X19, [X31 + 0x50]
	0x03D604C4 LDP X22, X21, [X31 + 0x40]
	0x03D604C8 LDP X24, X23, [X31 + 0x30]
	0x03D604CC LDP X26, X25, [X31 + 0x20]
	0x03D604D0 LDP X28, X27, [X31 + 0x10]
	0x03D604D4 MOV W2, W31
	0x03D604D8 LDR X30, [X31], #0x60
	0x03D604DC B 0x21A1534
	0x03D604E0 BL 0x1C16F20
	0x03D604E4 BL 0x1C16F20
	0x03D604E8 MOV X0, X21
	0x03D604EC BL 0x1C16F18
	0x03D604F0 B 0x3D604FC
	0x03D604F4 B 0x3D604FC
	0x03D604F8 B 0x3D604FC
	0x03D604FC MOV X22, X0
	0x03D60500 CMP W1, 0x1
	0x03D60504 B.NE 0x3D6051C
	0x03D60508 MOV X0, X22
	0x03D6050C BL 0x3EB1AD0
	0x03D60510 LDR X21, [X0]
	0x03D60514 BL 0x3EB1AE0
	0x03D60518 B 0x3D60278
	0x03D6051C MOV X21, X31
	0x03D60520 B 0x3D60528
	0x03D60524 MOV X22, X0
	0x03D60528 CBZ X20, 0x3D60584
	0x03D6052C LDR X8, [X20]
	0x03D60530 LDR X1, [X23]
	0x03D60534 LDRH W9, [X8 + 0x12E]
	0x03D60538 CBZ X9, 0x3D6055C
	0x03D6053C LDR X10, [X8 + 0xB0]
	0x03D60540 ADD X10, X10, 0x8
	0x03D60544 LDUR X11, [X10 - 0x8]
	0x03D60548 CMP X11, X1
	0x03D6054C B.EQ 0x3D6056C
	0x03D60550 SUBS X9, X9, 0x1
	0x03D60554 ADD X10, X10, 0x10
	0x03D60558 B.NE 0x3D60544
	0x03D6055C MOV X0, X20
	0x03D60560 MOV W2, W31
	0x03D60564 BL 0x1C5C788
	0x03D60568 B 0x3D60578
	0x03D6056C LDRSW X9, [X10]
	0x03D60570 ADD X8, X8, X9, 0x4, LSL
	0x03D60574 ADD X0, X8, 0x138
	0x03D60578 LDP X8, X1, [X0]
	0x03D6057C MOV X0, X20
	0x03D60580 BLR X8
	0x03D60584 CBNZ X21, 0x3D60590
	0x03D60588 MOV X0, X22
	0x03D6058C BL 0x1D2C690
	0x03D60590 MOV X0, X21
	0x03D60594 BL 0x1C16F18
	0x03D60598 BL 0x1990590
	0x03D6059C STR X30, [X31 - 0x40]!
	0x03D605A0 STP X24, X23, [X31 + 0x10]
	0x03D605A4 STP X22, X21, [X31 + 0x20]
	0x03D605A8 STP X20, X19, [X31 + 0x30]
	0x03D605AC ADRP X21, 0x687000
	0x03D605B0 LDRB W8, [X21 + 0xC9B]
	0x03D605B4 MOV X20, X1
	0x03D605B8 MOV X19, X0
	0x03D605BC TBNZ X8, 0x0, 0x3D60664
	0x03D605C0 ADRP X0, 0x402000
	0x03D605C4 LDR X0, [X0 + 0x948]
	0x03D605C8 BL 0x1C16CF4
	0x03D605CC ADRP X0, 0x406000
	0x03D605D0 LDR X0, [X0 + 0x4F8]
	0x03D605D4 BL 0x1C16CF4
	0x03D605D8 ADRP X0, 0x3BD000
	0x03D605DC LDR X0, [X0 + 0x658]
	0x03D605E0 BL 0x1C16CF4
	0x03D605E4 ADRP X0, 0x406000
	0x03D605E8 LDR X0, [X0 + 0x6C0]
	0x03D605EC BL 0x1C16CF4
	0x03D605F0 ADRP X0, 0x406000
	0x03D605F4 LDR X0, [X0 + 0x6C8]
	0x03D605F8 BL 0x1C16CF4
	0x03D605FC ADRP X0, 0x406000
	0x03D60600 LDR X0, [X0 + 0x6D0]
	0x03D60604 BL 0x1C16CF4
	0x03D60608 ADRP X0, 0x406000
	0x03D6060C LDR X0, [X0 + 0x6D8]
	0x03D60610 BL 0x1C16CF4
	0x03D60614 ADRP X0, 0x3BD000
	0x03D60618 LDR X0, [X0 + 0x660]
	0x03D6061C BL 0x1C16CF4
	0x03D60620 ADRP X0, 0x406000
	0x03D60624 LDR X0, [X0 + 0x6E0]
	0x03D60628 BL 0x1C16CF4
	0x03D6062C ADRP X0, 0x406000
	0x03D60630 LDR X0, [X0 + 0x6E8]
	0x03D60634 BL 0x1C16CF4
	0x03D60638 ADRP X0, 0x406000
	0x03D6063C LDR X0, [X0 + 0x6F0]
	0x03D60640 BL 0x1C16CF4
	0x03D60644 ADRP X0, 0x406000
	0x03D60648 LDR X0, [X0 + 0x6F8]
	0x03D6064C BL 0x1C16CF4
	0x03D60650 ADRP X0, 0x406000
	0x03D60654 LDR X0, [X0 + 0x4D0]
	0x03D60658 BL 0x1C16CF4
	0x03D6065C MOVZ W8, 0x1
	0x03D60660 STRB W8, [X21 + 0xC9B]
	0x03D60664 LDR X0, [X19 + 0x400]
	0x03D60668 CBZ X0, 0x3D608A4
	0x03D6066C ADRP X8, 0x406000
	0x03D60670 LDR X8, [X8 + 0x6D0]
	0x03D60674 MOV X1, X20
	0x03D60678 LDR X2, [X8]
	0x03D6067C BL 0x2AA528C
	0x03D60680 TBZ X0, 0x0, 0x3D60698
	0x03D60684 LDP X20, X19, [X31 + 0x30]
	0x03D60688 LDP X22, X21, [X31 + 0x20]
	0x03D6068C LDP X24, X23, [X31 + 0x10]
	0x03D60690 LDR X30, [X31], #0x40
	0x03D60694 RET
	0x03D60698 ADRP X8, 0x406000
	0x03D6069C LDR X8, [X8 + 0x4D0]
	0x03D606A0 LDR X0, [X8]
	0x03D606A4 BL 0x1C16F10
	0x03D606A8 MOV X1, X20
	0x03D606AC MOV X22, X0
	0x03D606B0 BL 0x3D6120C
	0x03D606B4 ADRP X8, 0x406000
	0x03D606B8 LDR X8, [X8 + 0x6F8]
	0x03D606BC LDR X0, [X8]
	0x03D606C0 BL 0x1C16F10
	0x03D606C4 MOV X21, X0
	0x03D606C8 BL 0x3D619A8
	0x03D606CC ADRP X8, 0x3BD000
	0x03D606D0 LDR X8, [X8 + 0x660]
	0x03D606D4 LDR X0, [X8]
	0x03D606D8 BL 0x1C16F10
	0x03D606DC ADRP X8, 0x406000
	0x03D606E0 LDR X8, [X8 + 0x6E8]
	0x03D606E4 MOV X1, X19
	0x03D606E8 MOV X3, X31
	0x03D606EC MOV X23, X0
	0x03D606F0 LDR X2, [X8]
	0x03D606F4 BL 0x2D0E824
	0x03D606F8 CBZ X22, 0x3D608A4
	0x03D606FC ADRP X8, 0x3BD000
	0x03D60700 LDR X8, [X8 + 0x658]
	0x03D60704 MOV X0, X22
	0x03D60708 MOV X1, X23
	0x03D6070C MOV W2, W31
	0x03D60710 LDR X3, [X8]
	0x03D60714 BL 0x21A1534
	0x03D60718 ADRP X8, 0x402000
	0x03D6071C LDR X23, [X22 + 0x3E8]
	0x03D60720 LDR X8, [X8 + 0x948]
	0x03D60724 LDR X0, [X8]
	0x03D60728 BL 0x1C16F10
	0x03D6072C ADRP X8, 0x406000
	0x03D60730 LDR X8, [X8 + 0x6E0]
	0x03D60734 MOV X1, X19
	0x03D60738 MOV X3, X31
	0x03D6073C MOV X24, X0
	0x03D60740 LDR X2, [X8]
	0x03D60744 BL 0x2A6B948
	0x03D60748 CBZ X23, 0x3D608A4
	0x03D6074C MOV X0, X23
	0x03D60750 MOV X1, X24
	0x03D60754 MOV X2, X31
	0x03D60758 BL 0x3CECC58
	0x03D6075C ADRP X8, 0x406000
	0x03D60760 LDR X23, [X22 + 0x3F0]
	0x03D60764 LDR X8, [X8 + 0x4F8]
	0x03D60768 LDR X0, [X8]
	0x03D6076C BL 0x1C16F10
	0x03D60770 ADRP X8, 0x406000
	0x03D60774 LDR X8, [X8 + 0x6F0]
	0x03D60778 MOV X1, X19
	0x03D6077C MOV X3, X31
	0x03D60780 MOV X24, X0
	0x03D60784 LDR X2, [X8]
	0x03D60788 BL 0x2A6B948
	0x03D6078C CBZ X23, 0x3D608A4
	0x03D60790 MOV X0, X23
	0x03D60794 MOV X1, X24
	0x03D60798 BL 0x3D5B600
	0x03D6079C CBZ X21, 0x3D608A4
	0x03D607A0 ADRP X8, 0x406000
	0x03D607A4 LDR X23, [X21 + 0x3C8]
	0x03D607A8 LDR X8, [X8 + 0x6C8]
	0x03D607AC LDR X0, [X8]
	0x03D607B0 BL 0x1C16F10
	0x03D607B4 MOV X1, X20
	0x03D607B8 MOV X24, X0
	0x03D607BC BL 0x3D5DE0C
	0x03D607C0 MOV X0, X23
	0x03D607C4 MOV X1, X24
	0x03D607C8 MOV X2, X31
	0x03D607CC BL 0x3D16A80
	0x03D607D0 ADRP X8, 0x406000
	0x03D607D4 LDR X23, [X19 + 0x400]
	0x03D607D8 LDR X8, [X8 + 0x6C0]
	0x03D607DC LDR X0, [X8]
	0x03D607E0 BL 0x1C16F10
	0x03D607E4 MOV X1, X31
	0x03D607E8 MOV X24, X0
	0x03D607EC BL 0x33BDD8C
	0x03D607F0 CBZ X24, 0x3D608A4
	0x03D607F4 STP X22, X21, [X24 + 0x10]
	0x03D607F8 CBZ X23, 0x3D608A4
	0x03D607FC ADRP X8, 0x406000
	0x03D60800 LDR X8, [X8 + 0x6D8]
	0x03D60804 MOV X0, X23
	0x03D60808 MOV X1, X20
	0x03D6080C MOV X2, X24
	0x03D60810 LDR X3, [X8]
	0x03D60814 BL 0x2AA5084
	0x03D60818 CBZ X20, 0x3D608A4
	0x03D6081C LDRB W8, [X20 + 0x40]
	0x03D60820 CBZ W8, 0x3D60878
	0x03D60824 LDR X23, [X19 + 0x410]
	0x03D60828 MOV X0, X20
	0x03D6082C MOV X1, X31
	0x03D60830 BL 0x3D6F82C
	0x03D60834 CBZ X23, 0x3D608A4
	0x03D60838 MOV W1, W0
	0x03D6083C MOV X0, X23
	0x03D60840 MOV X2, X22
	0x03D60844 MOV X3, X31
	0x03D60848 BL 0x3DF6198
	0x03D6084C LDR X22, [X19 + 0x418]
	0x03D60850 MOV X0, X20
	0x03D60854 MOV X1, X31
	0x03D60858 BL 0x3D6F82C
	0x03D6085C CBZ X22, 0x3D608A4
	0x03D60860 MOV W1, W0
	0x03D60864 MOV X0, X22
	0x03D60868 MOV X2, X21

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x688000
	013 Move W8, [X20+3238]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x3BD000
	020 Move X0, [X0+264]
	021 Call 0x1C17CF4
	022 Move X0, 0x394000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x3BD000
	026 Move X0, [X0+272]
	027 Call 0x1C17CF4
	028 Move X0, 0x3BD000
	029 Move X0, [X0+280]
	030 Call 0x1C17CF4
	031 Move X0, 0x394000
	032 Move X0, [X0+3608]
	033 Call 0x1C17CF4
	034 Move X0, 0x407000
	035 Move X0, [X0+1232]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+3238], W8
	039 Move [X31], X31
	040 Move [X31+8], X31
	041 Move X0, [X19+1056]
	042 Compare X0, 0
	043 JumpIfEqual {351}
	044 Move X1, X31
	045 Call Columns.get_visibleList, X0
	046 Compare X0, 0
	047 JumpIfEqual {351}
	048 Move X27, 0x3BD000
	049 Move X8, [X0]
	050 Move X27, [X27+272]
	051 Move X20, X0
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X27]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move X0, X20
	063 Move W2, W31
	064 Call 0x1C5D788
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X23, 0x394000
	069 Move X23, [X23+3608]
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X24, 0x3BD000
	073 Move X25, 0x3BD000
	074 Move X22, 0x394000
	075 Move X24, [X24+280]
	076 Move X25, [X25+264]
	077 Move X22, [X22+3584]
	078 Move X0, X20
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X20, X0
	081 Move W26, W31
	082 Compare X20, 0
	083 JumpIfEqual {343}
	084 Move X8, [X20]
	085 Move X1, [X23]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X20
	096 Move W2, W31
	097 Call 0x1C5D788
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Add X8, X8, X9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X1, [X0+8]
	103 Move X0, X20
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {151}
	109 Move X8, [X20]
	110 Move X1, [X24]
	111 NotImplemented "Instruction LDRH not yet implemented."
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move X0, X20
	121 Move W2, W31
	122 Call 0x1C5D788
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X20
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X21, X0
	131 Move X0, [X19+1024]
	132 Compare X0, 0
	133 JumpIfEqual {344}
	134 Move X3, [X25]
	135 Add X2, X31, 8
	136 Move X1, X21
	137 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {82}
	142 Move W8, [X19+968]
	143 Compare W8, 0
	144 JumpIfEqual {82}
	145 Compare X21, 0
	146 JumpIfEqual {346}
	147 Move W8, [X21+97]
	148 Compare W8, 0
	149 JumpIfEqual {82}
	150 Move W26, 1
	151 Move X21, X31
	152 Compare X20, 0
	153 JumpIfEqual {175}
	154 Move X8, [X20]
	155 Move X1, [X22]
	156 NotImplemented "Instruction LDRH not yet implemented."
	157 Compare X9, 0
	158 JumpIfEqual {165}
	159 Move X10, [X8+176]
	160 Add X10, X10, 8
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Subtract X9, X9, 1
	164 Add X10, X10, 16
	165 Move X0, X20
	166 Move W2, W31
	167 Call 0x1C5D788
	168 NotImplemented "Instruction LDRSW not yet implemented."
	169 Add X8, X8, X9
	170 Add X0, X8, 312
	171 Move X8, [X0]
	172 Move X1, [X0+8]
	173 Move X0, X20
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Compare X21, 0
	176 JumpIfNotEqual {352}
	177 Move X0, [X19+1056]
	178 Compare X0, 0
	179 JumpIfEqual {351}
	180 Move X1, X31
	181 Call Columns.get_visibleList, X0
	182 Compare X0, 0
	183 JumpIfEqual {351}
	184 Move X8, [X0]
	185 Move X1, [X27]
	186 Move X20, X0
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move X0, X20
	197 Move W2, W31
	198 Call 0x1C5D788
	199 NotImplemented "Instruction LDRSW not yet implemented."
	200 Add X8, X8, X9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X20
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X20, X0
	207 Compare X0, 0
	208 JumpIfEqual {354}
	209 Move X27, 0x407000
	210 Move X27, [X27+1232]
	211 Move X8, [X20]
	212 Move X1, [X23]
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Compare X9, 0
	215 JumpIfEqual {222}
	216 Move X10, [X8+176]
	217 Add X10, X10, 8
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Subtract X9, X9, 1
	221 Add X10, X10, 16
	222 Move X0, X20
	223 Move W2, W31
	224 Call 0x1C5D788
	225 NotImplemented "Instruction LDRSW not yet implemented."
	226 Add X8, X8, X9
	227 Add X0, X8, 312
	228 Move X8, [X0]
	229 Move X1, [X0+8]
	230 Move X0, X20
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move TEMP, X0
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {305}
	236 Move X8, [X20]
	237 Move X1, [X24]
	238 NotImplemented "Instruction LDRH not yet implemented."
	239 Compare X9, 0
	240 JumpIfEqual {247}
	241 Move X10, [X8+176]
	242 Add X10, X10, 8
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X9, X9, 1
	246 Add X10, X10, 16
	247 Move X0, X20
	248 Move W2, W31
	249 Call 0x1C5D788
	250 NotImplemented "Instruction LDRSW not yet implemented."
	251 Add X8, X8, X9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X1, [X0+8]
	255 Move X0, X20
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move X1, X0
	258 Move X0, [X19+1024]
	259 Compare X0, 0
	260 JumpIfEqual {345}
	261 Move X3, [X25]
	262 Add X2, X31, 0
	263 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	264 Move TEMP, X0
	265 And TEMP, TEMP, 1
	266 Compare TEMP, 1
	267 JumpIfNotEqual {211}
	268 Move X8, [X31]
	269 Move TEMP, X26
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfNotEqual {289}
	273 Compare X8, 0
	274 JumpIfEqual {347}
	275 Move X0, [X27]
	276 Move X21, [X8+16]
	277 Move W9, [X0+224]
	278 Compare W9, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Compare X21, 0
	282 JumpIfEqual {349}
	283 Move X8, [X27]
	284 Move X8, [X8+184]
	285 Move X1, [X8+8]
	286 Move X0, X21
	287 Move X2, X31
	288 Call VisualElement.AddToClassList, X0, X1
	289 Compare X8, 0
	290 JumpIfEqual {348}
	291 Move X0, [X27]
	292 Move X21, [X8+16]
	293 Move W9, [X0+224]
	294 Compare W9, 0
	295 JumpIfNotEqual {297}
	296 Call 0x1C17DFC
	297 Compare X21, 0
	298 JumpIfEqual {350}
	299 Move X8, [X27]
	300 Move X8, [X8+184]
	301 Move X1, [X8+8]
	302 Move X0, X21
	303 Move X2, X31
	304 Call VisualElement.RemoveFromClassList, X0, X1
	305 Move X21, X31
	306 Compare X20, 0
	307 JumpIfEqual {329}
	308 Move X8, [X20]
	309 Move X1, [X22]
	310 NotImplemented "Instruction LDRH not yet implemented."
	311 Compare X9, 0
	312 JumpIfEqual {319}
	313 Move X10, [X8+176]
	314 Add X10, X10, 8
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Subtract X9, X9, 1
	318 Add X10, X10, 16
	319 Move X0, X20
	320 Move W2, W31
	321 Call 0x1C5D788
	322 NotImplemented "Instruction LDRSW not yet implemented."
	323 Add X8, X8, X9
	324 Add X0, X8, 312
	325 Move X8, [X0]
	326 Move X1, [X0+8]
	327 Move X0, X20
	328 NotImplemented "Instruction BLR not yet implemented."
	329 Compare X21, 0
	330 JumpIfNotEqual {352}
	331 Move X20, [X31+80]
	332 Move X19, [X31+88]
	333 Move X22, [X31+64]
	334 Move X21, [X31+72]
	335 Move X24, [X31+48]
	336 Move X23, [X31+56]
	337 Move X26, [X31+32]
	338 Move X25, [X31+40]
	339 Move X30, [X31+16]
	340 Move X27, [X31+24]
	341 Add X31, X31, 96
	342 Return 
	343 Call 0x1C17F20
	344 Call 0x1C17F20
	345 Call 0x1C17F20
	346 Call 0x1C17F20
	347 Call 0x1C17F20
	348 Call 0x1C17F20
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Move X0, X21
	353 Call 0x1C17F18
	354 Call 0x1C17F20
	355 Move W26, W31
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Call 0x3EB2AD0
	358 Move X21, [X0]
	359 Call 0x3EB2AE0
	360 Move X19, X0
	361 Move X21, X31
	362 Move X19, X0
	363 Compare X20, 0
	364 JumpIfEqual {386}
	365 Move X8, [X20]
	366 Move X1, [X22]
	367 NotImplemented "Instruction LDRH not yet implemented."
	368 Compare X9, 0
	369 JumpIfEqual {376}
	370 Move X10, [X8+176]
	371 Add X10, X10, 8
	372 NotImplemented "Instruction LDUR not yet implemented."
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Subtract X9, X9, 1
	375 Add X10, X10, 16
	376 Move X0, X20
	377 Move W2, W31
	378 Call 0x1C5D788
	379 NotImplemented "Instruction LDRSW not yet implemented."
	380 Add X8, X8, X9
	381 Add X0, X8, 312
	382 Move X8, [X0]
	383 Move X1, [X0+8]
	384 Move X0, X20
	385 NotImplemented "Instruction BLR not yet implemented."
	386 Compare X21, 0
	387 JumpIfEqual {422}
	388 Move X0, X21
	389 Call 0x1C17F18
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Call 0x3EB2AD0
	392 Move X21, [X0]
	393 Call 0x3EB2AE0
	394 Move X19, X0
	395 Move X21, X31
	396 Move X19, X0
	397 Compare X20, 0
	398 JumpIfEqual {420}
	399 Move X8, [X20]
	400 Move X1, [X22]
	401 NotImplemented "Instruction LDRH not yet implemented."
	402 Compare X9, 0
	403 JumpIfEqual {410}
	404 Move X10, [X8+176]
	405 Add X10, X10, 8
	406 NotImplemented "Instruction LDUR not yet implemented."
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Subtract X9, X9, 1
	409 Add X10, X10, 16
	410 Move X0, X20
	411 Move W2, W31
	412 Call 0x1C5D788
	413 NotImplemented "Instruction LDRSW not yet implemented."
	414 Add X8, X8, X9
	415 Add X0, X8, 312
	416 Move X8, [X0]
	417 Move X1, [X0+8]
	418 Move X0, X20
	419 NotImplemented "Instruction BLR not yet implemented."
	420 Compare X21, 0
	421 JumpIfNotEqual {424}
	422 Move X0, X19
	423 Call 0x1D2D690
	424 Move X0, X21
	425 Call 0x1C17F18
	426 Call 0x1991590

Method: System.Void OnViewDataReady()

Disassembly:
	0x03D64B4C MOV X19, X0
	0x03D64B50 LDR X1, [X22]
	0x03D64B54 ADD X0, X31, 0x20
	0x03D64B58 BL 0x2C0B1EC
	0x03D64B5C CBNZ X20, 0x3D64B68
	0x03D64B60 MOV X0, X19
	0x03D64B64 BL 0x1D2C690
	0x03D64B68 MOV X0, X20
	0x03D64B6C BL 0x1C16F18
	0x03D64B70 BL 0x1990590
	0x03D64B74 STR X30, [X31 - 0x40]!
	0x03D64B78 STP X24, X23, [X31 + 0x10]
	0x03D64B7C STP X22, X21, [X31 + 0x20]
	0x03D64B80 STP X20, X19, [X31 + 0x30]
	0x03D64B84 ADRP X24, 0x683000
	0x03D64B88 ADRP X23, 0x402000
	0x03D64B8C ADRP X19, 0x3FE000
	0x03D64B90 ADRP X22, 0x402000
	0x03D64B94 ADRP X21, 0x402000
	0x03D64B98 ADRP X20, 0x402000
	0x03D64B9C LDRB W8, [X24 + 0xCA9]
	0x03D64BA0 LDR X23, [X23 + 0x828]
	0x03D64BA4 LDR X19, [X19 + 0xC50]
	0x03D64BA8 LDR X22, [X22 + 0x830]
	0x03D64BAC LDR X21, [X21 + 0x838]
	0x03D64BB0 LDR X20, [X20 + 0x840]
	0x03D64BB4 TBNZ X8, 0x0, 0x3D64BFC
	0x03D64BB8 ADRP X0, 0x3FE000
	0x03D64BBC LDR X0, [X0 + 0xC50]
	0x03D64BC0 BL 0x1C16CF4
	0x03D64BC4 ADRP X0, 0x402000
	0x03D64BC8 LDR X0, [X0 + 0x840]
	0x03D64BCC BL 0x1C16CF4
	0x03D64BD0 ADRP X0, 0x402000
	0x03D64BD4 LDR X0, [X0 + 0x828]
	0x03D64BD8 BL 0x1C16CF4
	0x03D64BDC ADRP X0, 0x402000
	0x03D64BE0 LDR X0, [X0 + 0x830]
	0x03D64BE4 BL 0x1C16CF4
	0x03D64BE8 ADRP X0, 0x402000
	0x03D64BEC LDR X0, [X0 + 0x838]
	0x03D64BF0 BL 0x1C16CF4
	0x03D64BF4 MOVZ W8, 0x1
	0x03D64BF8 STRB W8, [X24 + 0xCA9]
	0x03D64BFC LDR X8, [X19]
	0x03D64C00 LDR X9, [X23]
	0x03D64C04 MOV X2, X31
	0x03D64C08 LDR X8, [X8 + 0xB8]
	0x03D64C0C STR X9, [X8]
	0x03D64C10 LDR X8, [X19]
	0x03D64C14 LDR X1, [X22]
	0x03D64C18 LDR X8, [X8 + 0xB8]
	0x03D64C1C LDR X0, [X8]
	0x03D64C20 BL 0x321B938
	0x03D64C24 LDR X8, [X19]
	0x03D64C28 MOV X2, X31
	0x03D64C2C LDR X8, [X8 + 0xB8]
	0x03D64C30 STR X0, [X8 + 0x8]
	0x03D64C34 LDR X0, [X8]
	0x03D64C38 LDR X1, [X21]
	0x03D64C3C BL 0x321B938

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x684000
	005 Move W8, [X20+3239]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x403000
	012 Move X0, [X0+2008]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3239], W8
	016 Move W8, 1
	017 Move [X19+1016], W8
	018 Move X0, X19
	019 Move X1, X31
	020 Call VisualElement.OnViewDataReady, X0
	021 Move X0, X19
	022 Move X1, X31
	023 Call VisualElement.GetFullHierarchicalViewDataKey, X0
	024 Move X8, 0x403000
	025 Move X8, [X8+2008]
	026 Move X1, [X19+1008]
	027 Move X2, X0
	028 Move X3, [X8]
	029 Move X0, X19
	030 Call 0x22AAE7C, X0, X1, X2
	031 Move [X19+1008], X0
	032 Compare X0, 0
	033 JumpIfEqual {48}
	034 Move X1, X19
	035 Call ViewState.Apply, X0, X1
	036 Move X8, [X19+1088]
	037 Compare X8, 0
	038 JumpIfEqual {43}
	039 Move X0, [X8+64]
	040 Move X1, [X8+40]
	041 Move X9, [X8+24]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move [X19+1016], W31
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return 
	048 Call 0x1C17F20
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Call 0x3EB2AD0
	051 Move X20, [X0]
	052 Call 0x3EB2AE0
	053 Move [X19+1016], W31
	054 Compare X20, 0
	055 JumpIfEqual {44}
	056 Move X0, X20
	057 Call 0x1C17F18
	058 Move [X19+1016], W31
	059 Move [X19+1016], W31
	060 Compare X20, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1D2D690
	063 Move X0, X20
	064 Call 0x1C17F18
	065 Call 0x1991590

Method: System.Void SaveViewState()

Disassembly:
	0x03D619F0 LDR W8, [X0 + 0xE0]
	0x03D619F4 LDR X21, [X21 + 0x6F8]
	0x03D619F8 CBNZ W8, 0x3D61A00
	0x03D619FC BL 0x1C16DFC
	0x03D61A00 MOV X0, X19
	0x03D61A04 MOV X1, X31
	0x03D61A08 BL 0x3DEF578
	0x03D61A0C LDR X0, [X21]
	0x03D61A10 LDR W8, [X0 + 0xE0]
	0x03D61A14 CBNZ W8, 0x3D61A20
	0x03D61A18 BL 0x1C16DFC
	0x03D61A1C LDR X0, [X21]
	0x03D61A20 LDR X8, [X0 + 0xB8]
	0x03D61A24 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+1016]
	004 Compare W8, 0
	005 JumpIfEqual {9}
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move X19, X0
	010 Move X0, [X0+1008]
	011 Compare X0, 0
	012 JumpIfEqual {15}
	013 Move X1, X19
	014 Call ViewState.Save, X0, X1
	015 Move X0, X19
	016 Move X1, X31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call VisualElement.SaveViewData, X0
	020 Return 

Method: System.Void Dispose()

Disassembly:
	0x03D656AC BL 0x1C16E08
	0x03D656B0 LDRB W8, [X0]
	0x03D656B4 CMP W8, 0x0
	0x03D656B8 CSET W0, NE
	0x03D656BC B 0x3D656C4
	0x03D656C0 MOV W0, W31
	0x03D656C4 LDP X20, X19, [X31 + 0x10]
	0x03D656C8 LDR X30, [X31], #0x20
	0x03D656CC RET
	0x03D656D0 BL 0x1C16F20
	0x03D656D4 BL 0x1C171E0
	0x03D656D8 SUB X31, X31, 0x40
	0x03D656DC STP X30, X23, [X31 + 0x10]
	0x03D656E0 STP X22, X21, [X31 + 0x20]
	0x03D656E4 STP X20, X19, [X31 + 0x30]
	0x03D656E8 ADRP X21, 0x682000
	0x03D656EC LDRB W8, [X21 + 0xCB4]
	0x03D656F0 MOV W20, W1
	0x03D656F4 MOV X19, X0
	0x03D656F8 TBNZ X8, 0x0, 0x3D6571C
	0x03D656FC ADRP X0, 0x38E000
	0x03D65700 LDR X0, [X0 + 0xB58]
	0x03D65704 BL 0x1C16CF4
	0x03D65708 ADRP X0, 0x401000
	0x03D6570C LDR X0, [X0 + 0x4D0]
	0x03D65710 BL 0x1C16CF4
	0x03D65714 MOVZ W8, 0x1
	0x03D65718 STRB W8, [X21 + 0xCB4]
	0x03D6571C LDR X19, [X19 + 0x3D0]
	0x03D65720 CBZ X19, 0x3D65784
	0x03D65724 ADRP X23, 0x401000
	0x03D65728 LDR X23, [X23 + 0x4D0]
	0x03D6572C ADRP X22, 0x38E000
	0x03D65730 AND W21, W20, 0x1
	0x03D65734 LDR X0, [X23]
	0x03D65738 LDR W8, [X0 + 0xE0]
	0x03D6573C LDR X22, [X22 + 0xB58]
	0x03D65740 CBNZ W8, 0x3D6574C
	0x03D65744 BL 0x1C16DFC
	0x03D65748 LDR X0, [X23]
	0x03D6574C LDR X8, [X0 + 0xB8]
	0x03D65750 MOV X1, X31
	0x03D65754 LDR X0, [X8 + 0x68]
	0x03D65758 BL 0x3C30760
	0x03D6575C MOV X20, X0
	0x03D65760 LDR X0, [X22]
	0x03D65764 ADD X1, X31, 0xC
	0x03D65768 STRB W21, [X31 + 0xC]
	0x03D6576C BL 0x1C16E04
	0x03D65770 MOV X2, X0
	0x03D65774 AND X1, X20, 0x0
	0x03D65778 MOV X0, X19
	0x03D6577C MOV X3, X31
	0x03D65780 BL 0x3DF31F4
	0x03D65784 LDP X20, X19, [X31 + 0x30]
	0x03D65788 LDP X22, X21, [X31 + 0x20]
	0x03D6578C LDP X30, X23, [X31 + 0x10]
	0x03D65790 ADD X31, X31, 0x40
	0x03D65794 RET
	0x03D65798 STR X30, [X31 - 0x40]!
	0x03D6579C STP X24, X23, [X31 + 0x10]
	0x03D657A0 STP X22, X21, [X31 + 0x20]
	0x03D657A4 STP X20, X19, [X31 + 0x30]
	0x03D657A8 ADRP X20, 0x682000
	0x03D657AC LDRB W8, [X20 + 0xCBC]
	0x03D657B0 MOV X19, X0
	0x03D657B4 TBNZ X8, 0x0, 0x3D657FC
	0x03D657B8 ADRP X0, 0x401000
	0x03D657BC LDR X0, [X0 + 0x888]
	0x03D657C0 BL 0x1C16CF4
	0x03D657C4 ADRP X0, 0x3B8000
	0x03D657C8 LDR X0, [X0 + 0xB18]
	0x03D657CC BL 0x1C16CF4
	0x03D657D0 ADRP X0, 0x401000
	0x03D657D4 LDR X0, [X0 + 0x890]
	0x03D657D8 BL 0x1C16CF4
	0x03D657DC ADRP X0, 0x401000
	0x03D657E0 LDR X0, [X0 + 0x898]
	0x03D657E4 BL 0x1C16CF4
	0x03D657E8 ADRP X0, 0x401000
	0x03D657EC LDR X0, [X0 + 0x4D0]
	0x03D657F0 BL 0x1C16CF4
	0x03D657F4 MOVZ W8, 0x1
	0x03D657F8 STRB W8, [X20 + 0xCBC]
	0x03D657FC LDR X8, [X19 + 0x3F8]
	0x03D65800 CBZ X8, 0x3D65968
	0x03D65804 LDR X23, [X8 + 0x68]
	0x03D65808 CBZ X23, 0x3D65818
	0x03D6580C LDP X22, X21, [X8 + 0x70]
	0x03D65810 LDR X20, [X8 + 0x80]
	0x03D65814 B 0x3D6587C
	0x03D65818 ADRP X8, 0x3B8000
	0x03D6581C LDR X8, [X8 + 0xB18]
	0x03D65820 LDR X0, [X8]
	0x03D65824 BL 0x1C16F10
	0x03D65828 ADRP X8, 0x401000
	0x03D6582C LDR X8, [X8 + 0x890]
	0x03D65830 MOV X1, X19
	0x03D65834 MOV X3, X31
	0x03D65838 MOV X23, X0
	0x03D6583C LDR X2, [X8]
	0x03D65840 BL 0x2D27AA8
	0x03D65844 ADRP X8, 0x401000
	0x03D65848 LDR X8, [X8 + 0x888]
	0x03D6584C LDR X0, [X8]
	0x03D65850 BL 0x1C16F10
	0x03D65854 ADRP X8, 0x401000
	0x03D65858 LDR X8, [X8 + 0x898]
	0x03D6585C MOV X1, X19
	0x03D65860 MOV X3, X31
	0x03D65864 MOV X22, X0
	0x03D65868 LDR X2, [X8]
	0x03D6586C BL 0x2A6B948
	0x03D65870 CBZ X23, 0x3D65968
	0x03D65874 MOV X21, X31
	0x03D65878 MOV X20, X31
	0x03D6587C LDR X8, [X23 + 0x18]
	0x03D65880 LDR X0, [X23 + 0x40]
	0x03D65884 LDR X1, [X23 + 0x28]
	0x03D65888 ADRP X24, 0x401000
	0x03D6588C LDR X24, [X24 + 0x4D0]
	0x03D65890 BLR X8
	0x03D65894 MOV X1, X0
	0x03D65898 MOV X0, X19
	0x03D6589C BL 0x3D6547C
	0x03D658A0 LDR X0, [X24]
	0x03D658A4 LDR X23, [X19 + 0x3D0]
	0x03D658A8 LDR W8, [X0 + 0xE0]
	0x03D658AC CBNZ W8, 0x3D658B8
	0x03D658B0 BL 0x1C16DFC
	0x03D658B4 LDR X0, [X24]
	0x03D658B8 LDR X8, [X0 + 0xB8]
	0x03D658BC MOV X1, X31
	0x03D658C0 LDR X0, [X8 + 0x70]
	0x03D658C4 BL 0x3C30760
	0x03D658C8 CBZ X23, 0x3D65968
	0x03D658CC AND X1, X0, 0x0
	0x03D658D0 MOV X0, X23
	0x03D658D4 MOV X2, X22
	0x03D658D8 MOV X3, X31
	0x03D658DC BL 0x3DF31F4
	0x03D658E0 LDR X8, [X24]
	0x03D658E4 LDR X22, [X19 + 0x3D0]
	0x03D658E8 MOV X1, X31
	0x03D658EC LDR X8, [X8 + 0xB8]
	0x03D658F0 LDR X0, [X8 + 0x78]
	0x03D658F4 BL 0x3C30760
	0x03D658F8 CBZ X22, 0x3D65968
	0x03D658FC AND X1, X0, 0x0
	0x03D65900 MOV X0, X22
	0x03D65904 MOV X2, X21
	0x03D65908 MOV X3, X31
	0x03D6590C BL 0x3DF31F4
	0x03D65910 LDR X8, [X24]
	0x03D65914 LDR X21, [X19 + 0x3D0]
	0x03D65918 MOV X1, X31
	0x03D6591C LDR X8, [X8 + 0xB8]
	0x03D65920 LDR X0, [X8 + 0x80]
	0x03D65924 BL 0x3C30760
	0x03D65928 CBZ X21, 0x3D65968
	0x03D6592C AND X1, X0, 0x0
	0x03D65930 MOV X0, X21
	0x03D65934 MOV X2, X20
	0x03D65938 MOV X3, X31
	0x03D6593C BL 0x3DF31F4
	0x03D65940 MOV X0, X19
	0x03D65944 MOV W1, W31
	0x03D65948 BL 0x3D656D8
	0x03D6594C STR X31, [X19 + 0x3E0]
	0x03D65950 MOV X0, X19
	0x03D65954 LDP X20, X19, [X31 + 0x30]
	0x03D65958 LDP X22, X21, [X31 + 0x20]
	0x03D6595C LDP X24, X23, [X31 + 0x10]
	0x03D65960 LDR X30, [X31], #0x40
	0x03D65964 B 0x3D65CA8
	0x03D65968 BL 0x1C16F20
	0x03D6596C STP X30, X21, [X31 - 0x20]!
	0x03D65970 STP X20, X19, [X31 + 0x10]
	0x03D65974 ADRP X20, 0x682000
	0x03D65978 LDRB W8, [X20 + 0xCBD]
	0x03D6597C MOV X19, X0
	0x03D65980 TBNZ X8, 0x0, 0x3D65998
	0x03D65984 ADRP X0, 0x3B7000
	0x03D65988 LDR X0, [X0 + 0x128]
	0x03D6598C BL 0x1C16CF4
	0x03D65990 MOVZ W8, 0x1
	0x03D65994 STRB W8, [X20 + 0xCBD]
	0x03D65998 LDR X8, [X19 + 0x3F8]
	0x03D6599C CBZ X8, 0x3D65A68
	0x03D659A0 LDR W8, [X8 + 0x5C]
	0x03D659A4 MOVZ W9, 0x7F800000
	0x03D659A8 AND W8, W8, 0x7FFFFFFF
	0x03D659AC CMP W8, W9
	0x03D659B0 B.HI 0x3D65A30
	0x03D659B4 MOV X0, X19
	0x03D659B8 MOV X1, X31
	0x03D659BC BL 0x3DE7EEC
	0x03D659C0 LDR X8, [X19 + 0x3F8]
	0x03D659C4 CBZ X8, 0x3D65A68
	0x03D659C8 LDR V0, [X8 + 0x5C]
	0x03D659CC MOV X19, X0
	0x03D659D0 MOV X0, X31
	0x03D659D4 BL 0x3DFED98
	0x03D659D8 CBZ X19, 0x3D65A68
	0x03D659DC ADRP X11, 0x3B7000
	0x03D659E0 LDR X9, [X19]
	0x03D659E4 LDR X11, [X11 + 0x128]
	0x03D659E8 MOV X8, X1
	0x03D659EC MOV X20, X0
	0x03D659F0 LDRH W10, [X9 + 0x12E]
	0x03D659F4 LDR X1, [X11]
	0x03D659F8 AND X21, X8, 0x0
	0x03D659FC CBZ X10, 0x3D65A20
	0x03D65A00 LDR X8, [X9 + 0xB0]
	0x03D65A04 ADD X8, X8, 0x8
	0x03D65A08 LDUR X11, [X8 - 0x8]
	0x03D65A0C CMP X11, X1
	0x03D65A10 B.EQ 0x3D65A3C
	0x03D65A14 SUBS X10, X10, 0x1
	0x03D65A18 ADD X8, X8, 0x10
	0x03D65A1C B.NE 0x3D65A08
	0x03D65A20 MOVZ W2, 0x36
	0x03D65A24 MOV X0, X19
	0x03D65A28 BL 0x1C5C788
	0x03D65A2C B 0x3D65A4C
	0x03D65A30 LDP X20, X19, [X31 + 0x10]
	0x03D65A34 LDP X30, X21, [X31], #0x20
	0x03D65A38 RET
	0x03D65A3C LDR W8, [X8]
	0x03D65A40 ADD W8, W8, 0x36
	0x03D65A44 ADD X8, X9, W8, 0x4, SXTW
	0x03D65A48 ADD X0, X8, 0x138
	0x03D65A4C LDP X4, X3, [X0]
	0x03D65A50 MOV X0, X19
	0x03D65A54 MOV X1, X20
	0x03D65A58 LDP X20, X19, [X31 + 0x10]
	0x03D65A5C MOV X2, X21
	0x03D65A60 LDP X30, X21, [X31], #0x20
	0x03D65A64 BR X4
	0x03D65A68 BL 0x1C16F20
	0x03D65A6C STP X30, X23, [X31 - 0x30]!
	0x03D65A70 STP X22, X21, [X31 + 0x10]
	0x03D65A74 STP X20, X19, [X31 + 0x20]
	0x03D65A78 ADRP X20, 0x682000
	0x03D65A7C ADRP X23, 0x401000
	0x03D65A80 ADRP X22, 0x401000
	0x03D65A84 ADRP X21, 0x401000
	0x03D65A88 LDRB W8, [X20 + 0xCB6]
	0x03D65A8C LDR X23, [X23 + 0x8A0]
	0x03D65A90 LDR X22, [X22 + 0x4F8]
	0x03D65A94 LDR X21, [X21 + 0x8A8]
	0x03D65A98 MOV X19, X0
	0x03D65A9C TBNZ X8, 0x0, 0x3D65AF0
	0x03D65AA0 ADRP X0, 0x401000
	0x03D65AA4 LDR X0, [X0 + 0x4F8]
	0x03D65AA8 BL 0x1C16CF4
	0x03D65AAC ADRP X0, 0x38E000
	0x03D65AB0 LDR X0, [X0 + 0x970]
	0x03D65AB4 BL 0x1C16CF4
	0x03D65AB8 ADRP X0, 0x3FD000
	0x03D65ABC LDR X0, [X0 + 0xD70]
	0x03D65AC0 BL 0x1C16CF4
	0x03D65AC4 ADRP X0, 0x401000
	0x03D65AC8 LDR X0, [X0 + 0x8A0]
	0x03D65ACC BL 0x1C16CF4
	0x03D65AD0 ADRP X0, 0x3FD000
	0x03D65AD4 LDR X0, [X0 + 0x950]
	0x03D65AD8 BL 0x1C16CF4
	0x03D65ADC ADRP X0, 0x401000
	0x03D65AE0 LDR X0, [X0 + 0x8A8]
	0x03D65AE4 BL 0x1C16CF4
	0x03D65AE8 MOVZ W8, 0x1
	0x03D65AEC STRB W8, [X20 + 0xCB6]
	0x03D65AF0 LDR X0, [X23]
	0x03D65AF4 BL 0x1C16F10
	0x03D65AF8 MOV X20, X0
	0x03D65AFC BL 0x3D5B8C0
	0x03D65B00 MOV X0, X19
	0x03D65B04 MOV X1, X20
	0x03D65B08 MOV X2, X31
	0x03D65B0C STR X20, [X19 + 0x3F0]
	0x03D65B10 BL 0x3D16A80
	0x03D65B14 LDR X0, [X22]
	0x03D65B18 LDR X20, [X19 + 0x3F0]
	0x03D65B1C BL 0x1C16F10
	0x03D65B20 LDR X2, [X21]
	0x03D65B24 MOV X1, X19
	0x03D65B28 MOV X3, X31
	0x03D65B2C MOV X21, X0
	0x03D65B30 BL 0x2A6B948
	0x03D65B34 CBZ X20, 0x3D65CA4
	0x03D65B38 ADRP X22, 0x3FD000
	0x03D65B3C LDR X22, [X22 + 0xD70]
	0x03D65B40 MOV X0, X20
	0x03D65B44 MOV X1, X21
	0x03D65B48 BL 0x3D5B760
	0x03D65B4C LDR X0, [X22]
	0x03D65B50 BL 0x1C16F10
	0x03D65B54 MOV X1, X31
	0x03D65B58 MOV X2, X31
	0x03D65B5C MOV X20, X0
	0x03D65B60 BL 0x3CECFA0
	0x03D65B64 MOV X0, X19
	0x03D65B68 MOV X1, X20
	0x03D65B6C MOV X2, X31
	0x03D65B70 STR X20, [X19 + 0x3E8]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X20, 0x683000
	014 Move X22, 0x390000
	015 Move X21, 0x402000
	016 Move W8, [X20+3240]
	017 Move X22, [X22+3696]
	018 Move X21, [X21+1448]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {89}
	024 Move X0, 0x402000
	025 Move X0, [X0+1616]
	026 Call 0x1C17CF4
	027 Move X0, 0x3FE000
	028 Move X0, [X0+2376]
	029 Call 0x1C17CF4
	030 Move X0, 0x402000
	031 Move X0, [X0+1272]
	032 Call 0x1C17CF4
	033 Move X0, 0x402000
	034 Move X0, [X0+1624]
	035 Call 0x1C17CF4
	036 Move X0, 0x402000
	037 Move X0, [X0+1632]
	038 Call 0x1C17CF4
	039 Move X0, 0x402000
	040 Move X0, [X0+1640]
	041 Call 0x1C17CF4
	042 Move X0, 0x390000
	043 Move X0, [X0+3696]
	044 Call 0x1C17CF4
	045 Move X0, 0x402000
	046 Move X0, [X0+2048]
	047 Call 0x1C17CF4
	048 Move X0, 0x402000
	049 Move X0, [X0+2056]
	050 Call 0x1C17CF4
	051 Move X0, 0x402000
	052 Move X0, [X0+2064]
	053 Call 0x1C17CF4
	054 Move X0, 0x402000
	055 Move X0, [X0+2072]
	056 Call 0x1C17CF4
	057 Move X0, 0x402000
	058 Move X0, [X0+1664]
	059 Call 0x1C17CF4
	060 Move X0, 0x402000
	061 Move X0, [X0+1672]
	062 Call 0x1C17CF4
	063 Move X0, 0x402000
	064 Move X0, [X0+1760]
	065 Call 0x1C17CF4
	066 Move X0, 0x402000
	067 Move X0, [X0+1680]
	068 Call 0x1C17CF4
	069 Move X0, 0x402000
	070 Move X0, [X0+1688]
	071 Call 0x1C17CF4
	072 Move X0, 0x402000
	073 Move X0, [X0+1696]
	074 Call 0x1C17CF4
	075 Move X0, 0x402000
	076 Move X0, [X0+1776]
	077 Call 0x1C17CF4
	078 Move X0, 0x402000
	079 Move X0, [X0+1720]
	080 Call 0x1C17CF4
	081 Move X0, 0x402000
	082 Move X0, [X0+1448]
	083 Call 0x1C17CF4
	084 Move X0, 0x402000
	085 Move X0, [X0+2080]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X20+3240], W8
	089 Move [X31+32], X31
	090 Move [X31+40], X31
	091 Move [X31+48], X31
	092 Move X0, [X22]
	093 Move X20, [X19+984]
	094 Call 0x1C17F10
	095 Move X2, [X21]
	096 Move X1, X19
	097 Move X3, X31
	098 Move X21, X0
	099 Call Action..ctor, X0, X1, X2
	100 Compare X20, 0
	101 JumpIfEqual {304}
	102 Move X23, 0x402000
	103 Move X23, [X23+1720]
	104 Move X0, X20
	105 Move X1, X21
	106 Move X2, X31
	107 Call SortColumnDescriptions.remove_changed, X0, X1
	108 Move X0, [X22]
	109 Move X20, [X19+1032]
	110 Call 0x1C17F10
	111 Move X2, [X23]
	112 Move X1, X19
	113 Move X3, X31
	114 Move X21, X0
	115 Call Action..ctor, X0, X1, X2
	116 Compare X20, 0
	117 JumpIfEqual {304}
	118 Move X22, 0x402000
	119 Move X23, 0x402000
	120 Move X22, [X22+1632]
	121 Move X23, [X23+1664]
	122 Move X0, X20
	123 Move X1, X21
	124 Move X2, X31
	125 Call ColumnLayout.remove_layoutRequested, X0, X1
	126 Move X0, [X22]
	127 Move X20, [X19+1056]
	128 Call 0x1C17F10
	129 Move X2, [X23]
	130 Move X1, X19
	131 Move X3, X31
	132 Move X21, X0
	133 Call Action`2<Object, Int32>..ctor, X0, X1, X2
	134 Compare X20, 0
	135 JumpIfEqual {304}
	136 Move X22, 0x402000
	137 Move X23, 0x402000
	138 Move X22, [X22+1616]
	139 Move X23, [X23+1680]
	140 Move X0, X20
	141 Move X1, X21
	142 Move X2, X31
	143 Call Columns.remove_columnAdded, X0, X1
	144 Move X0, [X22]
	145 Move X20, [X19+1056]
	146 Call 0x1C17F10
	147 Move X2, [X23]
	148 Move X1, X19
	149 Move X3, X31
	150 Move X21, X0
	151 Call Action`1<Object>..ctor, X0, X1, X2
	152 Compare X20, 0
	153 JumpIfEqual {304}
	154 Move X23, 0x402000
	155 Move X24, 0x402000
	156 Move X23, [X23+1624]
	157 Move X24, [X24+1672]
	158 Move X0, X20
	159 Move X1, X21
	160 Move X2, X31
	161 Call Columns.remove_columnRemoved, X0, X1
	162 Move X0, [X23]
	163 Move X20, [X19+1056]
	164 Call 0x1C17F10
	165 Move X2, [X24]
	166 Move X1, X19
	167 Move X3, X31
	168 Move X21, X0
	169 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	170 Compare X20, 0
	171 JumpIfEqual {304}
	172 Move X23, 0x402000
	173 Move X24, 0x402000
	174 Move X23, [X23+1640]
	175 Move X24, [X24+1688]
	176 Move X0, X20
	177 Move X1, X21
	178 Move X2, X31
	179 Call Columns.remove_columnChanged, X0, X1
	180 Move X0, [X23]
	181 Move X20, [X19+1056]
	182 Call 0x1C17F10
	183 Move X2, [X24]
	184 Move X1, X19
	185 Move X3, X31
	186 Move X21, X0
	187 Call Action`3<Object, Int32, Int32>..ctor, X0, X1, X2
	188 Compare X20, 0
	189 JumpIfEqual {304}
	190 Move X23, 0x402000
	191 Move X23, [X23+1696]
	192 Move X0, X20
	193 Move X1, X21
	194 Move X2, X31
	195 Call Columns.remove_columnReordered, X0, X1
	196 Move X0, [X22]
	197 Move X20, [X19+1056]
	198 Call 0x1C17F10
	199 Move X2, [X23]
	200 Move X1, X19
	201 Move X3, X31
	202 Move X21, X0
	203 Call Action`1<Object>..ctor, X0, X1, X2
	204 Compare X20, 0
	205 JumpIfEqual {304}
	206 Move X0, X20
	207 Move X1, X21
	208 Move X2, X31
	209 Call Columns.remove_columnResized, X0, X1
	210 Move X0, [X19+1024]
	211 Compare X0, 0
	212 JumpIfEqual {304}
	213 Move X8, 0x402000
	214 Move X8, [X8+2048]
	215 Move X1, [X8]
	216 Call Dictionary`2<Object, Object>.get_Values, X0
	217 Compare X0, 0
	218 JumpIfEqual {304}
	219 Move X8, 0x402000
	220 Move X8, [X8+2080]
	221 Move X23, 0x402000
	222 Move X24, 0x3FE000
	223 Move X25, 0x402000
	224 Move X23, [X23+2064]
	225 Move X24, [X24+2376]
	226 Move X25, [X25+1760]
	227 Move X1, [X8]
	228 Move X26, 0x402000
	229 Move X27, 0x402000
	230 Move X22, 0x402000
	231 Move X26, [X26+1272]
	232 Move X27, [X27+1776]
	233 Move X22, [X22+2056]
	234 Add X8, X31, 8
	235 Call ValueCollection<Object, Object>.GetEnumerator, X0
	236 NotImplemented "Instruction LDUR not yet implemented."
	237 Move X8, [X31+24]
	238 Move [X31+2], V0
	239 Move [X31+48], X8
	240 Move X1, [X23]
	241 Add X0, X31, 32
	242 Call Enumerator<Object, Object>.MoveNext, X0
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {283}
	247 Move X28, [X31+48]
	248 Compare X28, 0
	249 JumpIfEqual {302}
	250 Move X8, [X28+16]
	251 Compare X8, 0
	252 JumpIfEqual {303}
	253 Move X20, [X8+1000]
	254 Move X0, [X24]
	255 Call 0x1C17F10
	256 Move X2, [X25]
	257 Move X21, X0
	258 Move X1, X19
	259 Move X3, X31
	260 Call Action`1<Object>..ctor, X0, X1, X2
	261 Compare X20, 0
	262 JumpIfEqual {300}
	263 Move X0, X20
	264 Move X1, X21
	265 Move X2, X31
	266 Call Clickable.remove_clickedWithEventInfo, X0, X1
	267 Move X8, [X28+16]
	268 Compare X8, 0
	269 JumpIfEqual {301}
	270 Move X20, [X8+1008]
	271 Move X0, [X26]
	272 Call 0x1C17F10
	273 Move X2, [X27]
	274 Move X21, X0
	275 Move X1, X19
	276 Move X3, X31
	277 Call Action`1<Object>..ctor, X0, X1, X2
	278 Compare X20, 0
	279 JumpIfEqual {299}
	280 Move X0, X20
	281 Move X1, X21
	282 Call ColumnMover.remove_activeChanged, X0, X1
	283 Move X1, [X22]
	284 Add X0, X31, 32
	285 Call Enumerator<Object, Object>.Dispose, X0
	286 Move X20, [X31+144]
	287 Move X19, [X31+152]
	288 Move X22, [X31+128]
	289 Move X21, [X31+136]
	290 Move X24, [X31+112]
	291 Move X23, [X31+120]
	292 Move X26, [X31+96]
	293 Move X25, [X31+104]
	294 Move X28, [X31+80]
	295 Move X27, [X31+88]
	296 Move X30, [X31+64]
	297 Add X31, X31, 160
	298 Return 
	299 Call 0x1C17F20
	300 Call 0x1C17F20
	301 Call 0x1C17F20
	302 Call 0x1C17F20
	303 Call 0x1C17F20
	304 Call 0x1C17F20
	305 Move X19, X0
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Move X0, X19
	308 Call 0x3EB2AD0
	309 Move X20, [X0]
	310 Call 0x3EB2AE0
	311 Move X1, [X22]
	312 Add X0, X31, 32
	313 Call Enumerator<Object, Object>.Dispose, X0
	314 Compare X20, 0
	315 JumpIfEqual {286}
	316 Move X0, X20
	317 Call 0x1C17F18
	318 Move X20, X31
	319 Move X19, X0
	320 Move X1, [X22]
	321 Add X0, X31, 32
	322 Call Enumerator<Object, Object>.Dispose, X0
	323 Compare X20, 0
	324 JumpIfNotEqual {327}
	325 Move X0, X19
	326 Call 0x1D2D690
	327 Move X0, X20
	328 Call 0x1C17F18
	329 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03D65B74 BL 0x3D16A80
	0x03D65B78 LDR X8, [X19 + 0x3E8]
	0x03D65B7C CBZ X8, 0x3D65CA4
	0x03D65B80 LDR X0, [X8 + 0x18]
	0x03D65B84 CBZ X0, 0x3D65CA4
	0x03D65B88 ADRP X20, 0x3FD000
	0x03D65B8C LDR X20, [X20 + 0x950]
	0x03D65B90 LDR W9, [X0 + 0x1C]
	0x03D65B94 LDR X8, [X0 + 0x10]
	0x03D65B98 LDR X10, [X20]
	0x03D65B9C ADD W9, W9, 0x1
	0x03D65BA0 STR W9, [X0 + 0x1C]
	0x03D65BA4 CBZ X8, 0x3D65CA4
	0x03D65BA8 LDRSW X9, [X0 + 0x18]
	0x03D65BAC LDR W11, [X8 + 0x18]
	0x03D65BB0 ADRP X21, 0x38E000
	0x03D65BB4 LDR X21, [X21 + 0x970]
	0x03D65BB8 CMP W9, W11
	0x03D65BBC B.CS 0x3D65BE0
	0x03D65BC0 MOVZ W11, 0xC
	0x03D65BC4 ADD W10, W9, 0x1
	0x03D65BC8 MOVZ X12, 0x1
	0x03D65BCC MADD X8, X9, X11, X8
	0x03D65BD0 STR W10, [X0 + 0x18]
	0x03D65BD4 STR X12, [X8 + 0x20]
	0x03D65BD8 STR W31, [X8 + 0x28]
	0x03D65BDC B 0x3D65BF8
	0x03D65BE0 LDR X8, [X10 + 0x20]
	0x03D65BE4 MOVZ X1, 0x1
	0x03D65BE8 MOV X2, X31
	0x03D65BEC LDR X8, [X8 + 0xC0]
	0x03D65BF0 LDR X3, [X8 + 0x70]
	0x03D65BF4 BL 0x2FF57C0
	0x03D65BF8 LDR X0, [X21]
	0x03D65BFC LDR W8, [X0 + 0xE0]
	0x03D65C00 CBNZ W8, 0x3D65C08
	0x03D65C04 BL 0x1C16DFC
	0x03D65C08 MOV X0, X31
	0x03D65C0C BL 0x3C01AB0
	0x03D65C10 LDR X9, [X19 + 0x3E8]
	0x03D65C14 CBZ X9, 0x3D65CA4
	0x03D65C18 MOV W8, W0
	0x03D65C1C LDR X0, [X9 + 0x18]
	0x03D65C20 CMP W8, 0x2
	0x03D65C24 MOVZ X8, 0x2
	0x03D65C28 MOVZ X9, 0x8
	0x03D65C2C CSEL X1, X9, X8, CC
	0x03D65C30 CBZ X0, 0x3D65CA4
	0x03D65C34 LDR W10, [X0 + 0x1C]
	0x03D65C38 LDR X8, [X0 + 0x10]
	0x03D65C3C LDR X9, [X20]
	0x03D65C40 ADD W10, W10, 0x1
	0x03D65C44 STR W10, [X0 + 0x1C]
	0x03D65C48 CBZ X8, 0x3D65CA4
	0x03D65C4C LDRSW X10, [X0 + 0x18]
	0x03D65C50 LDR W11, [X8 + 0x18]
	0x03D65C54 CMP W10, W11
	0x03D65C58 B.CS 0x3D65C84
	0x03D65C5C LDP X20, X19, [X31 + 0x20]
	0x03D65C60 LDP X22, X21, [X31 + 0x10]
	0x03D65C64 MOVZ W11, 0xC
	0x03D65C68 ADD W9, W10, 0x1
	0x03D65C6C MADD X8, X10, X11, X8
	0x03D65C70 STR W9, [X0 + 0x18]
	0x03D65C74 STR X1, [X8 + 0x20]
	0x03D65C78 STR W31, [X8 + 0x28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x683000
	009 Move X23, 0x402000
	010 Move X19, 0x3FE000
	011 Move X22, 0x402000
	012 Move X21, 0x402000
	013 Move X20, 0x402000
	014 Move W8, [X24+3241]
	015 Move X23, [X23+2088]
	016 Move X19, [X19+3152]
	017 Move X22, [X22+2096]
	018 Move X21, [X21+2104]
	019 Move X20, [X20+2112]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x3FE000
	025 Move X0, [X0+3152]
	026 Call 0x1C17CF4
	027 Move X0, 0x402000
	028 Move X0, [X0+2112]
	029 Call 0x1C17CF4
	030 Move X0, 0x402000
	031 Move X0, [X0+2088]
	032 Call 0x1C17CF4
	033 Move X0, 0x402000
	034 Move X0, [X0+2096]
	035 Call 0x1C17CF4
	036 Move X0, 0x402000
	037 Move X0, [X0+2104]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X24+3241], W8
	041 Move X8, [X19]
	042 Move X9, [X23]
	043 Move X2, X31
	044 Move X8, [X8+184]
	045 Move [X8], X9
	046 Move X8, [X19]
	047 Move X1, [X22]
	048 Move X8, [X8+184]
	049 Move X0, [X8]
	050 Call String.Concat, X0, X1
	051 Move X8, [X19]
	052 Move X2, X31
	053 Move X8, [X8+184]
	054 Move [X8+8], X0
	055 Move X0, [X8]
	056 Move X1, [X21]
	057 Call String.Concat, X0, X1
	058 Move X8, [X19]
	059 Move X2, X31
	060 Move X8, [X8+184]
	061 Move [X8+16], X0
	062 Move X0, [X8]
	063 Move X1, [X20]
	064 Call String.Concat, X0, X1
	065 Move X8, [X19]
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X8, [X8+184]
	073 Move [X8+24], X0
	074 Move X30, [X31+64]
	075 Return 

Method: System.Void <OnContextualMenuManipulator>b__65_0(UnityEngine.UIElements.DropdownMenuAction a)

Disassembly:
	0x03D65C7C LDP X30, X23, [X31], #0x30

ISIL:
	001 Call MultiColumnCollectionHeader.ResizeToFit, X0
	002 Return 

