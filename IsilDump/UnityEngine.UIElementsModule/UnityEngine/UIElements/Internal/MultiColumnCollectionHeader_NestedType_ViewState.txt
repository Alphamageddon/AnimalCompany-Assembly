Type: UnityEngine.UIElements.Internal.MultiColumnCollectionHeader/ViewState

Method: System.Void Save(UnityEngine.UIElements.Internal.MultiColumnCollectionHeader header)

Disassembly:
	0x03D64F9C MOV X2, X31
	0x03D64FA0 LDR X8, [X8 + 0xB8]
	0x03D64FA4 LDR X1, [X8 + 0x8]
	0x03D64FA8 BL 0x3DF1C70
	0x03D64FAC MOV X0, X19
	0x03D64FB0 MOV X1, X20
	0x03D64FB4 MOV X2, X31
	0x03D64FB8 BL 0x3DF60E8
	0x03D64FBC LDR X0, [X22]
	0x03D64FC0 BL 0x1C16F10
	0x03D64FC4 MOV X1, X31
	0x03D64FC8 MOV X20, X0
	0x03D64FCC BL 0x3D6B60C
	0x03D64FD0 CBZ X20, 0x3D6501C
	0x03D64FD4 MOVZ W1, 0x1
	0x03D64FD8 MOV X0, X20
	0x03D64FDC MOV X2, X31
	0x03D64FE0 BL 0x3DEF238
	0x03D64FE4 STR X20, [X19 + 0x3C8]
	0x03D64FE8 LDR X8, [X21]
	0x03D64FEC MOV X0, X20
	0x03D64FF0 MOV X2, X31
	0x03D64FF4 LDR X8, [X8 + 0xB8]
	0x03D64FF8 LDR X1, [X8 + 0x10]
	0x03D64FFC BL 0x3DF1C70
	0x03D65000 LDR X1, [X19 + 0x3C8]
	0x03D65004 MOV X0, X19
	0x03D65008 LDP X20, X19, [X31 + 0x20]
	0x03D6500C LDP X22, X21, [X31 + 0x10]
	0x03D65010 MOV X2, X31
	0x03D65014 LDR X30, [X31], #0x30
	0x03D65018 B 0x3DF60E8
	0x03D6501C BL 0x1C16F20
	0x03D65020 STP X30, X23, [X31 - 0x30]!
	0x03D65024 STP X22, X21, [X31 + 0x10]
	0x03D65028 STP X20, X19, [X31 + 0x20]
	0x03D6502C ADRP X19, 0x682000
	0x03D65030 ADRP X20, 0x401000
	0x03D65034 LDRB W8, [X19 + 0xCAE]
	0x03D65038 LDR X20, [X20 + 0x4D0]
	0x03D6503C TBNZ X8, 0x0, 0x3D65084
	0x03D65040 ADRP X0, 0x401000
	0x03D65044 LDR X0, [X0 + 0x708]
	0x03D65048 BL 0x1C16CF4
	0x03D6504C ADRP X0, 0x401000
	0x03D65050 LDR X0, [X0 + 0x4D0]
	0x03D65054 BL 0x1C16CF4
	0x03D65058 ADRP X0, 0x401000
	0x03D6505C LDR X0, [X0 + 0x868]
	0x03D65060 BL 0x1C16CF4
	0x03D65064 ADRP X0, 0x401000
	0x03D65068 LDR X0, [X0 + 0x870]
	0x03D6506C BL 0x1C16CF4
	0x03D65070 ADRP X0, 0x3B9000
	0x03D65074 LDR X0, [X0 + 0xE0]
	0x03D65078 BL 0x1C16CF4
	0x03D6507C MOVZ W8, 0x1
	0x03D65080 STRB W8, [X19 + 0xCAE]
	0x03D65084 LDR X0, [X20]
	0x03D65088 ADRP X23, 0x401000
	0x03D6508C ADRP X19, 0x401000
	0x03D65090 ADRP X22, 0x3B9000
	0x03D65094 ADRP X21, 0x401000
	0x03D65098 LDR W8, [X0 + 0xE0]
	0x03D6509C LDR X23, [X23 + 0x868]
	0x03D650A0 LDR X19, [X19 + 0x708]
	0x03D650A4 LDR X22, [X22 + 0xE0]
	0x03D650A8 LDR X21, [X21 + 0x870]
	0x03D650AC CBNZ W8, 0x3D650B8
	0x03D650B0 BL 0x1C16DFC
	0x03D650B4 LDR X0, [X20]
	0x03D650B8 LDR X8, [X0 + 0xB8]
	0x03D650BC LDR X1, [X23]
	0x03D650C0 MOV X2, X31
	0x03D650C4 LDR X0, [X8]
	0x03D650C8 BL 0x321B938
	0x03D650CC LDR X8, [X19]
	0x03D650D0 MOV X2, X31
	0x03D650D4 LDR X8, [X8 + 0xB8]
	0x03D650D8 STR X0, [X8]
	0x03D650DC LDR X8, [X19]
	0x03D650E0 LDR X1, [X22]
	0x03D650E4 LDR X8, [X8 + 0xB8]
	0x03D650E8 LDR X0, [X8]
	0x03D650EC BL 0x321B938
	0x03D650F0 LDR X8, [X19]
	0x03D650F4 MOV X2, X31
	0x03D650F8 LDR X8, [X8 + 0xB8]
	0x03D650FC STR X0, [X8 + 0x8]
	0x03D65100 LDR X0, [X8]
	0x03D65104 LDR X1, [X21]
	0x03D65108 BL 0x321B938
	0x03D6510C LDR X8, [X19]
	0x03D65110 LDP X20, X19, [X31 + 0x20]
	0x03D65114 LDP X22, X21, [X31 + 0x10]
	0x03D65118 LDR X8, [X8 + 0xB8]
	0x03D6511C STR X0, [X8 + 0x10]
	0x03D65120 LDP X30, X23, [X31], #0x30
	0x03D65124 RET
	0x03D65128 LDRB W0, [X0 + 0x40B]
	0x03D6512C RET
	0x03D65130 AND W8, W1, 0x1
	0x03D65134 STRB W8, [X0 + 0x40B]
	0x03D65138 RET
	0x03D6513C STP X30, X23, [X31 - 0x30]!
	0x03D65140 STP X22, X21, [X31 + 0x10]
	0x03D65144 STP X20, X19, [X31 + 0x20]
	0x03D65148 ADRP X21, 0x682000
	0x03D6514C ADRP X20, 0x3FE000
	0x03D65150 LDRB W8, [X21 + 0xCAF]
	0x03D65154 LDR X20, [X20 + 0xD60]
	0x03D65158 MOV X19, X0
	0x03D6515C TBNZ X8, 0x0, 0x3D651A4
	0x03D65160 ADRP X0, 0x3B8000
	0x03D65164 LDR X0, [X0 + 0x638]
	0x03D65168 BL 0x1C16CF4
	0x03D6516C ADRP X0, 0x3B8000
	0x03D65170 LDR X0, [X0 + 0x640]
	0x03D65174 BL 0x1C16CF4
	0x03D65178 ADRP X0, 0x3FE000
	0x03D6517C LDR X0, [X0 + 0xD60]
	0x03D65180 BL 0x1C16CF4
	0x03D65184 ADRP X0, 0x401000
	0x03D65188 LDR X0, [X0 + 0x878]
	0x03D6518C BL 0x1C16CF4
	0x03D65190 ADRP X0, 0x401000
	0x03D65194 LDR X0, [X0 + 0x880]
	0x03D65198 BL 0x1C16CF4
	0x03D6519C MOVZ W8, 0x1
	0x03D651A0 STRB W8, [X21 + 0xCAF]
	0x03D651A4 LDR X0, [X20]
	0x03D651A8 ADRP X23, 0x401000
	0x03D651AC LDR W8, [X0 + 0xE0]
	0x03D651B0 LDR X23, [X23 + 0x880]
	0x03D651B4 CBNZ W8, 0x3D651BC
	0x03D651B8 BL 0x1C16DFC
	0x03D651BC ADRP X22, 0x3B8000
	0x03D651C0 ADRP X20, 0x401000
	0x03D651C4 ADRP X21, 0x3B8000
	0x03D651C8 LDR X22, [X22 + 0x640]
	0x03D651CC LDR X20, [X20 + 0x878]
	0x03D651D0 LDR X21, [X21 + 0x638]
	0x03D651D4 MOV X0, X19
	0x03D651D8 MOV X1, X31
	0x03D651DC BL 0x3D13978
	0x03D651E0 LDR X0, [X23]
	0x03D651E4 LDR W8, [X0 + 0xE0]
	0x03D651E8 CBNZ W8, 0x3D651F4
	0x03D651EC BL 0x1C16DFC
	0x03D651F0 LDR X0, [X23]
	0x03D651F4 LDR X8, [X0 + 0xB8]
	0x03D651F8 MOV X0, X19
	0x03D651FC MOV X2, X31
	0x03D65200 LDR X1, [X8]
	0x03D65204 BL 0x3DF1C70
	0x03D65208 LDR X0, [X22]
	0x03D6520C BL 0x1C16F10
	0x03D65210 LDR X2, [X20]
	0x03D65214 MOV X1, X19
	0x03D65218 MOV X3, X31
	0x03D6521C MOV X20, X0
	0x03D65220 BL 0x2D0E824
	0x03D65224 LDR X3, [X21]
	0x03D65228 MOV X0, X19
	0x03D6522C MOV X1, X20
	0x03D65230 LDP X20, X19, [X31 + 0x20]
	0x03D65234 LDP X22, X21, [X31 + 0x10]
	0x03D65238 MOV W2, W31
	0x03D6523C LDP X30, X23, [X31], #0x30
	0x03D65240 B 0x21A1534
	0x03D65244 STR X30, [X31 - 0x30]!
	0x03D65248 STP X22, X21, [X31 + 0x10]
	0x03D6524C STP X20, X19, [X31 + 0x20]
	0x03D65250 ADRP X20, 0x682000
	0x03D65254 ADRP X21, 0x401000
	0x03D65258 LDRB W8, [X20 + 0xCB0]
	0x03D6525C LDR X21, [X21 + 0x4D0]
	0x03D65260 MOV X19, X0
	0x03D65264 TBNZ X8, 0x0, 0x3D65288
	0x03D65268 ADRP X0, 0x401000
	0x03D6526C LDR X0, [X0 + 0x4D0]
	0x03D65270 BL 0x1C16CF4
	0x03D65274 ADRP X0, 0x38E000
	0x03D65278 LDR X0, [X0 + 0x598]
	0x03D6527C BL 0x1C16CF4
	0x03D65280 MOVZ W8, 0x1
	0x03D65284 STRB W8, [X20 + 0xCB0]
	0x03D65288 MOV X0, X19
	0x03D6528C MOV X1, X31
	0x03D65290 BL 0x3DEBF58
	0x03D65294 LDR X8, [X21]
	0x03D65298 MOV X20, X0
	0x03D6529C LDR W9, [X8 + 0xE0]
	0x03D652A0 CBNZ W9, 0x3D652AC
	0x03D652A4 MOV X0, X8
	0x03D652A8 BL 0x1C16DFC
	0x03D652AC CBZ X20, 0x3D653A4
	0x03D652B0 LDR X8, [X21]
	0x03D652B4 ADRP X22, 0x38E000
	0x03D652B8 MOV X0, X20
	0x03D652BC MOV X2, X31
	0x03D652C0 LDR X8, [X8 + 0xB8]
	0x03D652C4 LDR X1, [X8 + 0x40]
	0x03D652C8 LDR X22, [X22 + 0x598]
	0x03D652CC BL 0x3DF1B54
	0x03D652D0 LDR X0, [X22]
	0x03D652D4 LDR X20, [X19 + 0x3D0]
	0x03D652D8 LDR W8, [X0 + 0xE0]
	0x03D652DC CBNZ W8, 0x3D652E4
	0x03D652E0 BL 0x1C16DFC
	0x03D652E4 MOV X0, X20
	0x03D652E8 MOV X1, X31
	0x03D652EC MOV X2, X31
	0x03D652F0 BL 0x3C354F8
	0x03D652F4 TBNZ X0, 0x0, 0x3D65348
	0x03D652F8 LDR X0, [X22]
	0x03D652FC LDR X20, [X19 + 0x3D8]
	0x03D65300 LDR W8, [X0 + 0xE0]
	0x03D65304 CBNZ W8, 0x3D6530C
	0x03D65308 BL 0x1C16DFC
	0x03D6530C MOV X0, X20
	0x03D65310 MOV X1, X31
	0x03D65314 MOV X2, X31
	0x03D65318 BL 0x3C354F8
	0x03D6531C TBNZ X0, 0x0, 0x3D65348
	0x03D65320 LDR X0, [X22]
	0x03D65324 LDR X20, [X19 + 0x3E0]
	0x03D65328 LDR W8, [X0 + 0xE0]
	0x03D6532C CBNZ W8, 0x3D65334
	0x03D65330 BL 0x1C16DFC
	0x03D65334 MOV X0, X20
	0x03D65338 MOV X1, X31
	0x03D6533C MOV X2, X31
	0x03D65340 BL 0x3C354F8
	0x03D65344 TBZ X0, 0x0, 0x3D65394
	0x03D65348 MOV X0, X19
	0x03D6534C MOV X1, X31
	0x03D65350 BL 0x3DEBF58
	0x03D65354 LDR X8, [X21]
	0x03D65358 MOV X19, X0
	0x03D6535C LDR W9, [X8 + 0xE0]
	0x03D65360 CBNZ W9, 0x3D6536C
	0x03D65364 MOV X0, X8
	0x03D65368 BL 0x1C16DFC
	0x03D6536C CBZ X19, 0x3D653A4
	0x03D65370 LDR X8, [X21]
	0x03D65374 MOV X0, X19
	0x03D65378 LDP X20, X19, [X31 + 0x20]
	0x03D6537C LDP X22, X21, [X31 + 0x10]
	0x03D65380 LDR X8, [X8 + 0xB8]
	0x03D65384 MOV X2, X31
	0x03D65388 LDR X1, [X8 + 0x40]
	0x03D6538C LDR X30, [X31], #0x30
	0x03D65390 B 0x3DF1C70
	0x03D65394 LDP X20, X19, [X31 + 0x20]
	0x03D65398 LDP X22, X21, [X31 + 0x10]
	0x03D6539C LDR X30, [X31], #0x30
	0x03D653A0 RET
	0x03D653A4 BL 0x1C16F20
	0x03D653A8 STP X30, X21, [X31 - 0x20]!
	0x03D653AC STP X20, X19, [X31 + 0x10]
	0x03D653B0 ADRP X20, 0x682000
	0x03D653B4 ADRP X19, 0x401000
	0x03D653B8 LDRB W8, [X20 + 0xCB1]
	0x03D653BC LDR X19, [X19 + 0x4D0]
	0x03D653C0 TBNZ X8, 0x0, 0x3D653F0
	0x03D653C4 ADRP X0, 0x401000
	0x03D653C8 LDR X0, [X0 + 0x880]
	0x03D653CC BL 0x1C16CF4
	0x03D653D0 ADRP X0, 0x401000
	0x03D653D4 LDR X0, [X0 + 0x4D0]
	0x03D653D8 BL 0x1C16CF4
	0x03D653DC ADRP X0, 0x3FE000
	0x03D653E0 LDR X0, [X0 + 0xCE8]
	0x03D653E4 BL 0x1C16CF4
	0x03D653E8 MOVZ W8, 0x1
	0x03D653EC STRB W8, [X20 + 0xCB1]
	0x03D653F0 LDR X0, [X19]
	0x03D653F4 ADRP X21, 0x3FE000
	0x03D653F8 ADRP X20, 0x401000
	0x03D653FC LDR W8, [X0 + 0xE0]
	0x03D65400 LDR X21, [X21 + 0xCE8]
	0x03D65404 LDR X20, [X20 + 0x880]
	0x03D65408 CBNZ W8, 0x3D65414
	0x03D6540C BL 0x1C16DFC
	0x03D65410 LDR X0, [X19]
	0x03D65414 LDR X8, [X0 + 0xB8]
	0x03D65418 LDR X1, [X21]
	0x03D6541C MOV X2, X31
	0x03D65420 LDR X0, [X8]
	0x03D65424 BL 0x321B938
	0x03D65428 LDR X8, [X20]
	0x03D6542C LDP X20, X19, [X31 + 0x10]
	0x03D65430 LDR X8, [X8 + 0xB8]
	0x03D65434 STR X0, [X8]
	0x03D65438 LDP X30, X21, [X31], #0x20
	0x03D6543C RET
	0x03D65440 B 0x3D65244
	0x03D65444 LDR X0, [X0 + 0x3E8]
	0x03D65448 RET
	0x03D6544C STR X1, [X0 + 0x3E8]
	0x03D65450 RET
	0x03D65454 LDR X0, [X0 + 0x3F0]
	0x03D65458 RET
	0x03D6545C STR X1, [X0 + 0x3F0]
	0x03D65460 RET
	0x03D65464 LDR X0, [X0 + 0x3F8]
	0x03D65468 RET
	0x03D6546C STR X1, [X0 + 0x3F8]
	0x03D65470 RET
	0x03D65474 LDR X0, [X0 + 0x3D0]
	0x03D65478 RET
	0x03D6547C STP X30, X21, [X31 - 0x20]!
	0x03D65480 STP X20, X19, [X31 + 0x10]
	0x03D65484 ADRP X21, 0x682000
	0x03D65488 LDRB W8, [X21 + 0xCB2]
	0x03D6548C MOV X20, X1
	0x03D65490 MOV X19, X0
	0x03D65494 TBNZ X8, 0x0, 0x3D654AC
	0x03D65498 ADRP X0, 0x401000
	0x03D6549C LDR X0, [X0 + 0x4D0]
	0x03D654A0 BL 0x1C16CF4
	0x03D654A4 MOVZ W8, 0x1
	0x03D654A8 STRB W8, [X21 + 0xCB2]
	0x03D654AC LDR X0, [X19 + 0x3D0]
	0x03D654B0 CBZ X0, 0x3D654E0
	0x03D654B4 MOV X1, X31
	0x03D654B8 BL 0x3DEBF58
	0x03D654BC LDR X8, [X19 + 0x3C8]
	0x03D654C0 CMP X0, X8
	0x03D654C4 B.NE 0x3D654D8
	0x03D654C8 LDR X0, [X19 + 0x3D0]
	0x03D654CC CBZ X0, 0x3D65540
	0x03D654D0 MOV X1, X31
	0x03D654D4 BL 0x3DF6948
	0x03D654D8 MOV X0, X19
	0x03D654DC BL 0x3D65544
	0x03D654E0 STR X20, [X19 + 0x3D0]
	0x03D654E4 CBZ X20, 0x3D65534
	0x03D654E8 ADRP X21, 0x401000
	0x03D654EC LDR X21, [X21 + 0x4D0]
	0x03D654F0 LDR X0, [X21]
	0x03D654F4 LDR W8, [X0 + 0xE0]
	0x03D654F8 CBNZ W8, 0x3D65504
	0x03D654FC BL 0x1C16DFC
	0x03D65500 LDR X0, [X21]
	0x03D65504 LDR X8, [X0 + 0xB8]
	0x03D65508 MOV X0, X20
	0x03D6550C MOV X2, X31
	0x03D65510 LDR X1, [X8 + 0x30]
	0x03D65514 BL 0x3DF1C70
	0x03D65518 LDR X0, [X19 + 0x3C8]
	0x03D6551C CBZ X0, 0x3D65540
	0x03D65520 LDR X1, [X19 + 0x3D0]
	0x03D65524 LDP X20, X19, [X31 + 0x10]
	0x03D65528 MOV X2, X31
	0x03D6552C LDP X30, X21, [X31], #0x20
	0x03D65530 B 0x3DF60E8
	0x03D65534 LDP X20, X19, [X31 + 0x10]
	0x03D65538 LDP X30, X21, [X31], #0x20
	0x03D6553C RET
	0x03D65540 BL 0x1C16F20
	0x03D65544 STP X30, X21, [X31 - 0x20]!
	0x03D65548 STP X20, X19, [X31 + 0x10]
	0x03D6554C ADRP X20, 0x682000
	0x03D65550 ADRP X21, 0x401000
	0x03D65554 LDRB W8, [X20 + 0xCB9]
	0x03D65558 LDR X21, [X21 + 0x4D0]
	0x03D6555C MOV X19, X0
	0x03D65560 TBNZ X8, 0x0, 0x3D65584
	0x03D65564 ADRP X0, 0x401000
	0x03D65568 LDR X0, [X0 + 0x888]
	0x03D6556C BL 0x1C16CF4
	0x03D65570 ADRP X0, 0x401000
	0x03D65574 LDR X0, [X0 + 0x4D0]
	0x03D65578 BL 0x1C16CF4
	0x03D6557C MOVZ W8, 0x1
	0x03D65580 STRB W8, [X20 + 0xCB9]
	0x03D65584 MOV X0, X19
	0x03D65588 BL 0x3D65CDC
	0x03D6558C LDR X0, [X21]
	0x03D65590 LDR X20, [X19 + 0x3D0]
	0x03D65594 LDR W8, [X0 + 0xE0]
	0x03D65598 CBNZ W8, 0x3D655A4
	0x03D6559C BL 0x1C16DFC
	0x03D655A0 LDR X0, [X21]
	0x03D655A4 LDR X8, [X0 + 0xB8]
	0x03D655A8 MOV X1, X31
	0x03D655AC LDR X0, [X8 + 0x80]
	0x03D655B0 BL 0x3C30760
	0x03D655B4 CBZ X20, 0x3D65608
	0x03D655B8 ADRP X21, 0x401000
	0x03D655BC LDR X21, [X21 + 0x888]
	0x03D655C0 AND X1, X0, 0x0
	0x03D655C4 MOV X0, X20
	0x03D655C8 MOV X2, X31
	0x03D655CC BL 0x3DF3018
	0x03D655D0 LDR X1, [X21]
	0x03D655D4 BL 0x1C16E00
	0x03D655D8 CBZ X0, 0x3D655FC
	0x03D655DC LDR X8, [X0 + 0x40]
	0x03D655E0 LDR X1, [X19 + 0x3D0]
	0x03D655E4 LDR X3, [X0 + 0x18]
	0x03D655E8 LDR X2, [X0 + 0x28]
	0x03D655EC LDP X20, X19, [X31 + 0x10]
	0x03D655F0 MOV X0, X8
	0x03D655F4 LDP X30, X21, [X31], #0x20
	0x03D655F8 BR X3
	0x03D655FC LDP X20, X19, [X31 + 0x10]
	0x03D65600 LDP X30, X21, [X31], #0x20
	0x03D65604 RET
	0x03D65608 BL 0x1C16F20
	0x03D6560C STR X30, [X31 - 0x20]!
	0x03D65610 STP X20, X19, [X31 + 0x10]
	0x03D65614 ADRP X20, 0x682000
	0x03D65618 LDRB W8, [X20 + 0xCB3]
	0x03D6561C MOV X19, X0
	0x03D65620 TBNZ X8, 0x0, 0x3D65644
	0x03D65624 ADRP X0, 0x38E000
	0x03D65628 LDR X0, [X0 + 0xB58]
	0x03D6562C BL 0x1C16CF4
	0x03D65630 ADRP X0, 0x401000
	0x03D65634 LDR X0, [X0 + 0x4D0]
	0x03D65638 BL 0x1C16CF4
	0x03D6563C MOVZ W8, 0x1
	0x03D65640 STRB W8, [X20 + 0xCB3]
	0x03D65644 LDR X19, [X19 + 0x3D0]
	0x03D65648 CBZ X19, 0x3D656C0
	0x03D6564C ADRP X20, 0x401000
	0x03D65650 LDR X20, [X20 + 0x4D0]
	0x03D65654 LDR X0, [X20]
	0x03D65658 LDR W8, [X0 + 0xE0]
	0x03D6565C CBNZ W8, 0x3D65668
	0x03D65660 BL 0x1C16DFC
	0x03D65664 LDR X0, [X20]
	0x03D65668 LDR X8, [X0 + 0xB8]
	0x03D6566C MOV X1, X31
	0x03D65670 LDR X0, [X8 + 0x68]
	0x03D65674 BL 0x3C30760
	0x03D65678 AND X1, X0, 0x0
	0x03D6567C MOV X0, X19
	0x03D65680 MOV X2, X31
	0x03D65684 BL 0x3DF3018
	0x03D65688 CBZ X0, 0x3D656D0
	0x03D6568C ADRP X8, 0x38E000
	0x03D65690 LDR X8, [X8 + 0xB58]
	0x03D65694 LDR X9, [X0]
	0x03D65698 LDR X1, [X8]
	0x03D6569C LDR X8, [X9 + 0x40]
	0x03D656A0 LDR X9, [X1 + 0x40]
	0x03D656A4 CMP X8, X9
	0x03D656A8 B.NE 0x3D656D4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+64], X26
	004 Move [X31+72], X25
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X21, 0x684000
	012 Move W8, [X21+3242]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0x390000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x3B9000
	023 Move X0, [X0+272]
	024 Call 0x1C17CF4
	025 Move X0, 0x403000
	026 Move X0, [X0+1504]
	027 Call 0x1C17CF4
	028 Move X0, 0x3B9000
	029 Move X0, [X0+280]
	030 Call 0x1C17CF4
	031 Move X0, 0x390000
	032 Move X0, [X0+3608]
	033 Call 0x1C17CF4
	034 Move X0, 0x402000
	035 Move X0, [X0+1512]
	036 Call 0x1C17CF4
	037 Move X0, 0x402000
	038 Move X0, [X0+2032]
	039 Call 0x1C17CF4
	040 Move X0, 0x402000
	041 Move X0, [X0+1528]
	042 Call 0x1C17CF4
	043 Move X0, 0x402000
	044 Move X0, [X0+2040]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+3242], W8
	048 Move [X31+58], W31
	049 NotImplemented "Instruction STRH not yet implemented."
	050 Move X8, [X19+24]
	051 Compare X8, 0
	052 JumpIfEqual {384}
	053 Move W2, [X8+24]
	054 Move W9, [X8+28]
	055 Add W9, W9, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move [X8+24], W31
	058 Move [X8+28], W9
	059 Move X0, [X8+16]
	060 Move W1, W31
	061 Move X3, X31
	062 Call Array.Clear, X0, X1, X2
	063 Move X8, [X19+32]
	064 Compare X8, 0
	065 JumpIfEqual {384}
	066 Move W2, [X8+24]
	067 Move W9, [X8+28]
	068 Add W9, W9, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X8+24], W31
	071 Move [X8+28], W9
	072 Move X0, [X8+16]
	073 Move W1, W31
	074 Move X3, X31
	075 Call Array.Clear, X0, X1, X2
	076 Compare X20, 0
	077 JumpIfEqual {384}
	078 Move X0, [X20+984]
	079 Compare X0, 0
	080 JumpIfEqual {384}
	081 Move X23, 0x38F000
	082 Move X24, 0x38F000
	083 Move X23, [X23+3584]
	084 Move X24, [X24+3608]
	085 Move X1, X31
	086 Call SortColumnDescriptions.GetEnumerator, X0
	087 Move X21, X0
	088 Compare X0, 0
	089 JumpIfEqual {385}
	090 Move X22, 0x402000
	091 Move X25, 0x402000
	092 Move X22, [X22+1504]
	093 Move X25, [X25+1512]
	094 Move X8, [X21]
	095 Move X1, [X24]
	096 NotImplemented "Instruction LDRH not yet implemented."
	097 Compare X9, 0
	098 JumpIfEqual {105}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move X0, X21
	106 Move W2, W31
	107 Call 0x1C5D788
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Add X8, X8, X9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X1, [X0+8]
	113 Move X0, X21
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {162}
	119 Move X8, [X21]
	120 Move X1, [X22]
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move X0, X21
	131 Move W2, W31
	132 Call 0x1C5D788
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X21
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X1, X0
	141 Move X0, [X19+24]
	142 Compare X0, 0
	143 JumpIfEqual {379}
	144 Move W10, [X0+28]
	145 Move X8, [X0+16]
	146 Move X9, [X25]
	147 Add W10, W10, 1
	148 Move [X0+28], W10
	149 Compare X8, 0
	150 JumpIfEqual {380}
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Move W11, [X8+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add W9, W10, 1
	155 Add X8, X8, X10
	156 Move [X0+24], W9
	157 Move [X8+32], X1
	158 Move X8, [X9+32]
	159 Move X8, [X8+192]
	160 Move X2, [X8+112]
	161 Call List`1<Object>.AddWithResize, X0, X1
	162 Move X22, X31
	163 Compare X21, 0
	164 JumpIfEqual {186}
	165 Move X8, [X21]
	166 Move X1, [X23]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Compare X9, 0
	169 JumpIfEqual {176}
	170 Move X10, [X8+176]
	171 Add X10, X10, 8
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Subtract X9, X9, 1
	175 Add X10, X10, 16
	176 Move X0, X21
	177 Move W2, W31
	178 Call 0x1C5D788
	179 NotImplemented "Instruction LDRSW not yet implemented."
	180 Add X8, X8, X9
	181 Add X0, X8, 312
	182 Move X8, [X0]
	183 Move X1, [X0+8]
	184 Move X0, X21
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Compare X22, 0
	187 JumpIfNotEqual {386}
	188 Move X0, [X20+1056]
	189 Compare X0, 0
	190 JumpIfEqual {384}
	191 Move X1, X31
	192 Call Columns.get_displayList, X0
	193 Compare X0, 0
	194 JumpIfEqual {384}
	195 Move X10, 0x3B8000
	196 Move X8, [X0]
	197 Move X10, [X10+272]
	198 Move X20, X0
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Move X1, [X10]
	201 Compare X9, 0
	202 JumpIfEqual {209}
	203 Move X10, [X8+176]
	204 Add X10, X10, 8
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X9, X9, 1
	208 Add X10, X10, 16
	209 Move X0, X20
	210 Move W2, W31
	211 Call 0x1C5D788
	212 NotImplemented "Instruction LDRSW not yet implemented."
	213 Add X8, X8, X9
	214 Add X0, X8, 312
	215 Move X8, [X0]
	216 Move X1, [X0+8]
	217 Move X0, X20
	218 NotImplemented "Instruction BLR not yet implemented."
	219 Move X20, X0
	220 Compare X0, 0
	221 JumpIfEqual {388}
	222 Move X22, 0x3B8000
	223 Move X25, 0x402000
	224 Move X22, [X22+280]
	225 Move X25, [X25+2032]
	226 Add X8, X31, 16
	227 Add X26, X8, 29
	228 Move X8, [X20]
	229 Move X1, [X24]
	230 NotImplemented "Instruction LDRH not yet implemented."
	231 Compare X9, 0
	232 JumpIfEqual {239}
	233 Move X10, [X8+176]
	234 Add X10, X10, 8
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Subtract X9, X9, 1
	238 Add X10, X10, 16
	239 Move X0, X20
	240 Move W2, W31
	241 Call 0x1C5D788
	242 NotImplemented "Instruction LDRSW not yet implemented."
	243 Add X8, X8, X9
	244 Add X0, X8, 312
	245 Move X8, [X0]
	246 Move X1, [X0+8]
	247 Move X0, X20
	248 NotImplemented "Instruction BLR not yet implemented."
	249 Move TEMP, X0
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfNotEqual {336}
	253 Move X8, [X20]
	254 Move X1, [X22]
	255 NotImplemented "Instruction LDRH not yet implemented."
	256 Compare X9, 0
	257 JumpIfEqual {264}
	258 Move X10, [X8+176]
	259 Add X10, X10, 8
	260 NotImplemented "Instruction LDUR not yet implemented."
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Subtract X9, X9, 1
	263 Add X10, X10, 16
	264 Move X0, X20
	265 Move W2, W31
	266 Call 0x1C5D788
	267 NotImplemented "Instruction LDRSW not yet implemented."
	268 Add X8, X8, X9
	269 Add X0, X8, 312
	270 Move X8, [X0]
	271 Move X1, [X0+8]
	272 Move X0, X20
	273 NotImplemented "Instruction BLR not yet implemented."
	274 Move X21, X0
	275 Move [X31+58], W31
	276 NotImplemented "Instruction STRH not yet implemented."
	277 Compare X0, 0
	278 JumpIfEqual {382}
	279 Move X0, X21
	280 Move X1, X31
	281 Call Column.get_index, X0
	282 Move X10, [X21+16]
	283 Move V0, [X21+92]
	284 NotImplemented "Instruction LDUR not yet implemented."
	285 Move X8, [X19+32]
	286 NotImplemented "Instruction LDRH not yet implemented."
	287 Move W13, [X31+58]
	288 Move W11, [X21+64]
	289 NotImplemented "Instruction STRH not yet implemented."
	290 Move [X31+14], W13
	291 Compare X8, 0
	292 JumpIfEqual {383}
	293 NotImplemented "Instruction LDRH not yet implemented."
	294 Move W13, [X31+14]
	295 NotImplemented "Instruction STRH not yet implemented."
	296 Move [X31+62], W13
	297 Move W14, [X8+28]
	298 Move X12, [X8+16]
	299 Move X13, [X25]
	300 Add W14, W14, 1
	301 Move [X8+28], W14
	302 Compare X12, 0
	303 JumpIfEqual {381}
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Move W15, [X12+24]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Add W13, W14, 1
	308 Add X12, X12, X14
	309 Move [X8+24], W13
	310 Move [X12+32], W0
	311 Move [X12+36], W31
	312 Move [X12+40], X10
	313 Move [X12+48], S0
	314 Move [X12+52], X9
	315 Move [X12+60], W11
	316 Move W8, [X31+62]
	317 NotImplemented "Instruction LDRH not yet implemented."
	318 Move [X12+63], W8
	319 NotImplemented "Instruction STURH not yet implemented."
	320 Move X12, [X13+32]
	321 NotImplemented "Instruction LDRH not yet implemented."
	322 Move W14, [X31+62]
	323 Move X12, [X12+192]
	324 Move X2, [X12+112]
	325 Move [X31+16], W0
	326 Move [X31+20], W31
	327 Move [X31+24], X10
	328 Move [X31+32], S0
	329 Move [X31+36], X9
	330 Move [X31+44], W11
	331 Move [X26+2], W14
	332 NotImplemented "Instruction STRH not yet implemented."
	333 Add X1, X31, 16
	334 Move X0, X8
	335 Call List`1<ColumnState>.AddWithResize, X0, X1
	336 Move X21, X31
	337 Move W22, 7
	338 Compare X20, 0
	339 JumpIfEqual {361}
	340 Move X8, [X20]
	341 Move X1, [X23]
	342 NotImplemented "Instruction LDRH not yet implemented."
	343 Compare X9, 0
	344 JumpIfEqual {351}
	345 Move X10, [X8+176]
	346 Add X10, X10, 8
	347 NotImplemented "Instruction LDUR not yet implemented."
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Subtract X9, X9, 1
	350 Add X10, X10, 16
	351 Move X0, X20
	352 Move W2, W31
	353 Call 0x1C5D788
	354 NotImplemented "Instruction LDRSW not yet implemented."
	355 Add X8, X8, X9
	356 Add X0, X8, 312
	357 Move X8, [X0]
	358 Move X1, [X0+8]
	359 Move X0, X20
	360 NotImplemented "Instruction BLR not yet implemented."
	361 Compare X21, 0
	362 JumpIfNotEqual {389}
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Compare W22, 0
	365 JumpIfNotEqual {368}
	366 Move W8, 1
	367 Move [X19+16], W8
	368 Move X20, [X31+112]
	369 Move X19, [X31+120]
	370 Move X22, [X31+96]
	371 Move X21, [X31+104]
	372 Move X24, [X31+80]
	373 Move X23, [X31+88]
	374 Move X26, [X31+64]
	375 Move X25, [X31+72]
	376 Move X30, [X31+48]
	377 Add X31, X31, 128
	378 Return 
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Call 0x1C17F20
	385 Call 0x1C17F20
	386 Move X0, X22
	387 Call 0x1C17F18
	388 Call 0x1C17F20
	389 Move X0, X21
	390 Call 0x1C17F18
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Call 0x3EB2AD0
	393 Move X21, [X0]
	394 Call 0x3EB2AE0
	395 Move W22, W31
	396 Compare X20, 0
	397 JumpIfNotEqual {340}
	398 Move X19, X0
	399 Move X21, X31
	400 Move X19, X0
	401 Compare X20, 0
	402 JumpIfEqual {424}
	403 Move X8, [X20]
	404 Move X1, [X23]
	405 NotImplemented "Instruction LDRH not yet implemented."
	406 Compare X9, 0
	407 JumpIfEqual {414}
	408 Move X10, [X8+176]
	409 Add X10, X10, 8
	410 NotImplemented "Instruction LDUR not yet implemented."
	411 NotImplemented "Instruction CMP not yet implemented."
	412 Subtract X9, X9, 1
	413 Add X10, X10, 16
	414 Move X0, X20
	415 Move W2, W31
	416 Call 0x1C5D788
	417 NotImplemented "Instruction LDRSW not yet implemented."
	418 Add X8, X8, X9
	419 Add X0, X8, 312
	420 Move X8, [X0]
	421 Move X1, [X0+8]
	422 Move X0, X20
	423 NotImplemented "Instruction BLR not yet implemented."
	424 Compare X21, 0
	425 JumpIfEqual {460}
	426 Move X0, X21
	427 Call 0x1C17F18
	428 NotImplemented "Instruction CMP not yet implemented."
	429 Call 0x3EB2AD0
	430 Move X22, [X0]
	431 Call 0x3EB2AE0
	432 Move X19, X0
	433 Move X22, X31
	434 Move X19, X0
	435 Compare X21, 0
	436 JumpIfEqual {458}
	437 Move X8, [X21]
	438 Move X1, [X23]
	439 NotImplemented "Instruction LDRH not yet implemented."
	440 Compare X9, 0
	441 JumpIfEqual {448}
	442 Move X10, [X8+176]
	443 Add X10, X10, 8
	444 NotImplemented "Instruction LDUR not yet implemented."
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Subtract X9, X9, 1
	447 Add X10, X10, 16
	448 Move X0, X21
	449 Move W2, W31
	450 Call 0x1C5D788
	451 NotImplemented "Instruction LDRSW not yet implemented."
	452 Add X8, X8, X9
	453 Add X0, X8, 312
	454 Move X8, [X0]
	455 Move X1, [X0+8]
	456 Move X0, X21
	457 NotImplemented "Instruction BLR not yet implemented."
	458 Compare X22, 0
	459 JumpIfNotEqual {462}
	460 Move X0, X19
	461 Call 0x1D2D690
	462 Move X0, X22
	463 Call 0x1C17F18
	464 Call 0x1991590

Method: System.Void Apply(UnityEngine.UIElements.Internal.MultiColumnCollectionHeader header)

Disassembly:
	0x03D64C40 LDR X8, [X19]
	0x03D64C44 MOV X2, X31
	0x03D64C48 LDR X8, [X8 + 0xB8]
	0x03D64C4C STR X0, [X8 + 0x10]
	0x03D64C50 LDR X0, [X8]
	0x03D64C54 LDR X1, [X20]
	0x03D64C58 BL 0x321B938
	0x03D64C5C LDR X8, [X19]
	0x03D64C60 LDP X20, X19, [X31 + 0x30]
	0x03D64C64 LDP X22, X21, [X31 + 0x20]
	0x03D64C68 LDP X24, X23, [X31 + 0x10]
	0x03D64C6C LDR X8, [X8 + 0xB8]
	0x03D64C70 STR X0, [X8 + 0x18]
	0x03D64C74 LDR X30, [X31], #0x40
	0x03D64C78 RET
	0x03D64C7C B 0x3D609B8
	0x03D64C80 STR X30, [X31 - 0x40]!
	0x03D64C84 STP X24, X23, [X31 + 0x10]
	0x03D64C88 STP X22, X21, [X31 + 0x20]
	0x03D64C8C STP X20, X19, [X31 + 0x30]
	0x03D64C90 ADRP X23, 0x683000
	0x03D64C94 ADRP X24, 0x402000
	0x03D64C98 ADRP X20, 0x402000
	0x03D64C9C ADRP X22, 0x402000
	0x03D64CA0 ADRP X21, 0x402000
	0x03D64CA4 LDRB W8, [X23 + 0xCAC]
	0x03D64CA8 LDR X24, [X24 + 0x848]
	0x03D64CAC LDR X20, [X20 + 0x850]
	0x03D64CB0 LDR X22, [X22 + 0x858]
	0x03D64CB4 LDR X21, [X21 + 0x860]
	0x03D64CB8 MOV X19, X0
	0x03D64CBC TBNZ X8, 0x0, 0x3D64CF8
	0x03D64CC0 ADRP X0, 0x402000
	0x03D64CC4 LDR X0, [X0 + 0x850]
	0x03D64CC8 BL 0x1C16CF4
	0x03D64CCC ADRP X0, 0x402000
	0x03D64CD0 LDR X0, [X0 + 0x860]
	0x03D64CD4 BL 0x1C16CF4
	0x03D64CD8 ADRP X0, 0x402000
	0x03D64CDC LDR X0, [X0 + 0x848]
	0x03D64CE0 BL 0x1C16CF4
	0x03D64CE4 ADRP X0, 0x402000
	0x03D64CE8 LDR X0, [X0 + 0x858]
	0x03D64CEC BL 0x1C16CF4
	0x03D64CF0 MOVZ W8, 0x1
	0x03D64CF4 STRB W8, [X23 + 0xCAC]
	0x03D64CF8 LDR X0, [X24]
	0x03D64CFC BL 0x1C16F10
	0x03D64D00 LDR X1, [X20]
	0x03D64D04 MOV X20, X0
	0x03D64D08 BL 0x301B7C4
	0x03D64D0C STR X20, [X19 + 0x18]
	0x03D64D10 LDR X0, [X22]
	0x03D64D14 BL 0x1C16F10
	0x03D64D18 LDR X1, [X21]
	0x03D64D1C MOV X20, X0
	0x03D64D20 BL 0x318A0FC
	0x03D64D24 STR X20, [X19 + 0x20]
	0x03D64D28 MOV X0, X19
	0x03D64D2C LDP X20, X19, [X31 + 0x30]
	0x03D64D30 LDP X22, X21, [X31 + 0x20]
	0x03D64D34 LDP X24, X23, [X31 + 0x10]
	0x03D64D38 MOV X1, X31
	0x03D64D3C LDR X30, [X31], #0x40
	0x03D64D40 B 0x33BDD8C
	0x03D64D44 LDR X0, [X0 + 0x10]
	0x03D64D48 RET
	0x03D64D4C STR X1, [X0 + 0x10]
	0x03D64D50 RET
	0x03D64D54 LDR X0, [X0 + 0x18]
	0x03D64D58 RET
	0x03D64D5C STR X1, [X0 + 0x18]
	0x03D64D60 RET
	0x03D64D64 STR X30, [X31 - 0x10]!
	0x03D64D68 LDR X0, [X0 + 0x10]
	0x03D64D6C CBZ X0, 0x3D64D88
	0x03D64D70 LDRB W8, [X0 + 0x40]
	0x03D64D74 MOV X2, X31
	0x03D64D78 CMP W8, 0x0
	0x03D64D7C CSET W1, EQ
	0x03D64D80 LDR X30, [X31], #0x10
	0x03D64D84 B 0x3D6F8FC
	0x03D64D88 BL 0x1C16F20
	0x03D64D8C STP X30, X19, [X31 - 0x10]!
	0x03D64D90 LDR X8, [X0 + 0x10]
	0x03D64D94 CBZ X8, 0x3D64E08
	0x03D64D98 MOV X19, X0
	0x03D64D9C LDR X0, [X8 + 0x10]
	0x03D64DA0 MOV X1, X31
	0x03D64DA4 BL 0x32277A8
	0x03D64DA8 TBNZ X0, 0x0, 0x3D64DD8
	0x03D64DAC LDR X8, [X19 + 0x18]
	0x03D64DB0 CBZ X8, 0x3D64E08
	0x03D64DB4 LDR X8, [X8 + 0x420]
	0x03D64DB8 CBZ X8, 0x3D64E08
	0x03D64DBC LDR X9, [X19 + 0x10]
	0x03D64DC0 CBZ X9, 0x3D64E08
	0x03D64DC4 LDR X0, [X8 + 0x38]
	0x03D64DC8 LDR X1, [X9 + 0x10]
	0x03D64DCC MOV X2, X31
	0x03D64DD0 BL 0x321BA08
	0x03D64DD4 TBNZ X0, 0x0, 0x3D64DFC
	0x03D64DD8 LDR X8, [X19 + 0x10]
	0x03D64DDC CBZ X8, 0x3D64E08
	0x03D64DE0 LDRB W9, [X8 + 0x62]
	0x03D64DE4 CBZ W9, 0x3D64DFC
	0x03D64DE8 LDRB W8, [X8 + 0x40]
	0x03D64DEC CMP W8, 0x0
	0x03D64DF0 MOVZ W8, 0x4
	0x03D64DF4 CSINC W0, W8, W31, NE
	0x03D64DF8 B 0x3D64E00
	0x03D64DFC MOVZ W0, 0x2
	0x03D64E00 LDP X30, X19, [X31], #0x10
	0x03D64E04 RET
	0x03D64E08 BL 0x1C16F20
	0x03D64E0C STR X30, [X31 - 0x20]!
	0x03D64E10 STP X20, X19, [X31 + 0x10]
	0x03D64E14 CBZ X1, 0x3D64E90
	0x03D64E18 LDR X9, [X1 + 0x28]
	0x03D64E1C LDR X8, [X0 + 0x10]
	0x03D64E20 MOV X19, X1
	0x03D64E24 MOV X20, X0
	0x03D64E28 CMP X9, X8
	0x03D64E2C B.EQ 0x3D64E60
	0x03D64E30 CBZ X8, 0x3D64E90
	0x03D64E34 LDR X0, [X8 + 0x10]
	0x03D64E38 MOV X1, X31
	0x03D64E3C BL 0x32277A8
	0x03D64E40 TBNZ X0, 0x0, 0x3D64E68
	0x03D64E44 LDR X8, [X20 + 0x10]
	0x03D64E48 CBZ X8, 0x3D64E90
	0x03D64E4C LDR X0, [X19 + 0x18]
	0x03D64E50 LDR X1, [X8 + 0x10]
	0x03D64E54 MOV X2, X31
	0x03D64E58 BL 0x321BA08
	0x03D64E5C TBZ X0, 0x0, 0x3D64E68
	0x03D64E60 MOVZ W0, 0x1
	0x03D64E64 B 0x3D64E84
	0x03D64E68 LDR X0, [X20 + 0x10]
	0x03D64E6C CBZ X0, 0x3D64E90
	0x03D64E70 LDR W19, [X19 + 0x10]
	0x03D64E74 MOV X1, X31
	0x03D64E78 BL 0x3D6F6A0
	0x03D64E7C CMP W19, W0
	0x03D64E80 CSET W0, EQ
	0x03D64E84 LDP X20, X19, [X31 + 0x10]
	0x03D64E88 LDR X30, [X31], #0x20
	0x03D64E8C RET
	0x03D64E90 BL 0x1C16F20
	0x03D64E94 STR X30, [X31 - 0x10]!
	0x03D64E98 LDR X0, [X0 + 0x3C8]
	0x03D64E9C CBZ X0, 0x3D64EB4
	0x03D64EA0 LDR X8, [X0]
	0x03D64EA4 LDR X3, [X8 + 0xB28]
	0x03D64EA8 LDR X2, [X8 + 0xB30]
	0x03D64EAC LDR X30, [X31], #0x10
	0x03D64EB0 BR X3
	0x03D64EB4 BL 0x1C16F20
	0x03D64EB8 STR X30, [X31 - 0x30]!
	0x03D64EBC STP X22, X21, [X31 + 0x10]
	0x03D64EC0 STP X20, X19, [X31 + 0x20]
	0x03D64EC4 ADRP X21, 0x683000
	0x03D64EC8 ADRP X20, 0x3B7000
	0x03D64ECC LDRB W8, [X21 + 0xCAD]
	0x03D64ED0 LDR X20, [X20 + 0x898]
	0x03D64ED4 MOV X19, X0
	0x03D64ED8 TBNZ X8, 0x0, 0x3D64F08
	0x03D64EDC ADRP X0, 0x3B8000
	0x03D64EE0 LDR X0, [X0 + 0x130]
	0x03D64EE4 BL 0x1C16CF4
	0x03D64EE8 ADRP X0, 0x402000
	0x03D64EEC LDR X0, [X0 + 0x708]
	0x03D64EF0 BL 0x1C16CF4
	0x03D64EF4 ADRP X0, 0x3B7000
	0x03D64EF8 LDR X0, [X0 + 0x898]
	0x03D64EFC BL 0x1C16CF4
	0x03D64F00 MOVZ W8, 0x1
	0x03D64F04 STRB W8, [X21 + 0xCAD]
	0x03D64F08 LDR X0, [X20]
	0x03D64F0C ADRP X21, 0x402000
	0x03D64F10 LDR W8, [X0 + 0xE0]
	0x03D64F14 LDR X21, [X21 + 0x708]
	0x03D64F18 CBNZ W8, 0x3D64F20
	0x03D64F1C BL 0x1C16DFC
	0x03D64F20 MOV X0, X19
	0x03D64F24 MOV X1, X31
	0x03D64F28 BL 0x3DEF578
	0x03D64F2C LDR X0, [X21]
	0x03D64F30 LDR W8, [X0 + 0xE0]
	0x03D64F34 CBNZ W8, 0x3D64F40
	0x03D64F38 BL 0x1C16DFC
	0x03D64F3C LDR X0, [X21]
	0x03D64F40 LDR X8, [X0 + 0xB8]
	0x03D64F44 MOV X0, X19
	0x03D64F48 MOV X2, X31
	0x03D64F4C LDR X1, [X8]
	0x03D64F50 BL 0x3DF1C70
	0x03D64F54 MOVZ W1, 0x1
	0x03D64F58 MOV X0, X19
	0x03D64F5C MOV X2, X31
	0x03D64F60 BL 0x3DEF238
	0x03D64F64 LDR X0, [X20]
	0x03D64F68 BL 0x1C16F10
	0x03D64F6C MOV X1, X31
	0x03D64F70 MOV X20, X0
	0x03D64F74 BL 0x3DEF578
	0x03D64F78 CBZ X20, 0x3D6501C
	0x03D64F7C ADRP X22, 0x3B8000
	0x03D64F80 LDR X22, [X22 + 0x130]
	0x03D64F84 MOVZ W1, 0x1
	0x03D64F88 MOV X0, X20
	0x03D64F8C MOV X2, X31
	0x03D64F90 BL 0x3DEF238
	0x03D64F94 LDR X8, [X21]
	0x03D64F98 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+64], D8
	003 Move [X31+80], X29
	004 Move [X31+88], X30
	005 Move [X31+96], X28
	006 Move [X31+104], X27
	007 Move [X31+112], X26
	008 Move [X31+120], X25
	009 Move [X31+128], X24
	010 Move [X31+136], X23
	011 Move [X31+144], X22
	012 Move [X31+152], X21
	013 Move [X31+160], X20
	014 Move [X31+168], X19
	015 Move X21, 0x684000
	016 Move W8, [X21+3243]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {46}
	023 Move X0, 0x3BA000
	024 Move X0, [X0+3112]
	025 Call 0x1C17CF4
	026 Move X0, 0x3BA000
	027 Move X0, [X0+3120]
	028 Call 0x1C17CF4
	029 Move X0, 0x3BA000
	030 Move X0, [X0+3128]
	031 Call 0x1C17CF4
	032 Move X0, 0x3BA000
	033 Move X0, [X0+3136]
	034 Call 0x1C17CF4
	035 Move X0, 0x403000
	036 Move X0, [X0+2016]
	037 Call 0x1C17CF4
	038 Move X0, 0x403000
	039 Move X0, [X0+2024]
	040 Call 0x1C17CF4
	041 Move X0, 0x390000
	042 Move X0, [X0+1448]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+3243], W8
	046 Move [X31+40], X31
	047 Move [X31+48], X31
	048 Move [X31+56], X31
	049 Move W8, [X20+16]
	050 Compare W8, 0
	051 JumpIfEqual {208}
	052 Move X8, [X20+32]
	053 Compare X8, 0
	054 JumpIfEqual {174}
	055 Compare X19, 0
	056 JumpIfEqual {174}
	057 Move X0, [X19+1056]
	058 Compare X0, 0
	059 JumpIfEqual {174}
	060 Move X22, 0x390000
	061 Move W21, [X8+24]
	062 Move X22, [X22+1448]
	063 Move X1, X31
	064 Call Columns.get_Count, X0
	065 Move X8, [X22]
	066 Move W22, W0
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move W0, W21
	073 Move W1, W22
	074 Move X2, X31
	075 Call Math.Min, X0, X1
	076 Move X9, [X20+32]
	077 Compare X9, 0
	078 JumpIfEqual {174}
	079 Move X27, 0x403000
	080 Move X27, [X27+2024]
	081 Move W21, W0
	082 Move W28, W31
	083 Move W22, W31
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W8, [X9+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X2, [X27]
	088 Add X8, X31, 8
	089 Move X0, X9
	090 Move W1, W22
	091 Call List`1<ColumnState>.get_Item, X0, X1
	092 Move X26, [X31+16]
	093 Move W25, [X31+8]
	094 Move V8, [X31+24]
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 Move W29, [X31+36]
	097 Move X0, X26
	098 Move X1, X31
	099 Call String.IsNullOrEmpty, X0
	100 Move X8, [X19+1056]
	101 Compare X8, 0
	102 JumpIfEqual {174}
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {128}
	107 Move X0, X8
	108 Move X1, X31
	109 Call Columns.get_Count, X0
	110 Subtract W8, W0, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, [X19+1056]
	113 Compare X0, 0
	114 JumpIfEqual {174}
	115 Move W1, W25
	116 Move X2, X31
	117 Call Columns.get_Item, X0, X1
	118 Compare X0, 0
	119 JumpIfEqual {174}
	120 Move X25, X0
	121 Move X0, [X0+16]
	122 Move X1, X31
	123 Call String.IsNullOrEmpty, X0
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {145}
	128 Move X0, X8
	129 Move X1, X26
	130 Move X2, X31
	131 Call Columns.Contains, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {170}
	136 Move X0, [X19+1056]
	137 Compare X0, 0
	138 JumpIfEqual {174}
	139 Move X1, X26
	140 Move X2, X31
	141 Call Columns.get_Item, X0, X1
	142 Move X25, X0
	143 Compare X0, 0
	144 JumpIfEqual {170}
	145 Move X26, [X19+1056]
	146 Move X0, X25
	147 Move X1, X31
	148 Call Column.get_displayIndex, X0
	149 Compare X26, 0
	150 JumpIfEqual {174}
	151 Move W1, W0
	152 Move X0, X26
	153 Move W2, W28
	154 Move X3, X31
	155 Add W23, W28, 1
	156 Call Columns.ReorderDisplay, X0, X1, X2
	157 And W1, W29, 1
	158 Move X0, X25
	159 Move X2, X31
	160 Call Column.set_visible, X0, X1
	161 Move X0, X25
	162 Move X1, X24
	163 Move X2, X31
	164 Call Column.set_width, X0, X1
	165 Move X0, X25
	166 Move V0, V8
	167 Move X1, X31
	168 Call Column.set_desiredWidth, X0, V0
	169 Move W28, W23
	170 Move X9, [X20+32]
	171 Add W22, W22, 1
	172 Compare X9, 0
	173 JumpIfNotEqual {84}
	174 Call 0x1C17F20
	175 Move X0, [X19+984]
	176 Compare X0, 0
	177 JumpIfEqual {174}
	178 Move X1, X31
	179 Call SortColumnDescriptions.Clear, X0
	180 Move X0, [X20+24]
	181 Compare X0, 0
	182 JumpIfEqual {174}
	183 Move X8, 0x3BA000
	184 Move X8, [X8+3136]
	185 Move X1, [X8]
	186 Add X8, X31, 40
	187 Call List`1<Object>.GetEnumerator, X0
	188 Move X20, 0x3BA000
	189 Move X20, [X20+3120]
	190 Move X1, [X20]
	191 Add X0, X31, 40
	192 Call Enumerator<Object>.MoveNext, X0
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {203}
	197 Move X0, [X19+984]
	198 Compare X0, 0
	199 JumpIfEqual {223}
	200 Move X1, [X31+56]
	201 Move X2, X31
	202 Call SortColumnDescriptions.Add, X0, X1
	203 Move X8, 0x3BA000
	204 Move X8, [X8+3112]
	205 Add X0, X31, 40
	206 Move X1, [X8]
	207 Call Enumerator<Object>.Dispose, X0
	208 Move X20, [X31+160]
	209 Move X19, [X31+168]
	210 Move X22, [X31+144]
	211 Move X21, [X31+152]
	212 Move X24, [X31+128]
	213 Move X23, [X31+136]
	214 Move X26, [X31+112]
	215 Move X25, [X31+120]
	216 Move X28, [X31+96]
	217 Move X27, [X31+104]
	218 Move X29, [X31+80]
	219 Move X30, [X31+88]
	220 Move V8, [X31+64]
	221 Add X31, X31, 176
	222 Return 
	223 Call 0x1C17F20
	224 Move X19, X0
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, X19
	227 Call 0x3EB2AD0
	228 Move X20, [X0]
	229 Call 0x3EB2AE0
	230 Move X8, 0x3BA000
	231 Move X8, [X8+3112]
	232 Add X0, X31, 40
	233 Move X1, [X8]
	234 Call Enumerator<Object>.Dispose, X0
	235 Compare X20, 0
	236 JumpIfEqual {208}
	237 Move X0, X20
	238 Call 0x1C17F18
	239 Move X20, X31
	240 Move X19, X0
	241 Move X8, 0x3BA000
	242 Move X8, [X8+3112]
	243 Move X1, [X8]
	244 Add X0, X31, 40
	245 Call Enumerator<Object>.Dispose, X0
	246 Compare X20, 0
	247 JumpIfNotEqual {250}
	248 Move X0, X19
	249 Call 0x1D2D690
	250 Move X0, X20
	251 Call 0x1C17F18
	252 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03D65C80 RET
	0x03D65C84 LDR X8, [X9 + 0x20]
	0x03D65C88 LDP X20, X19, [X31 + 0x20]
	0x03D65C8C LDP X22, X21, [X31 + 0x10]
	0x03D65C90 MOV X2, X31
	0x03D65C94 LDR X8, [X8 + 0xC0]
	0x03D65C98 LDR X3, [X8 + 0x70]
	0x03D65C9C LDP X30, X23, [X31], #0x30
	0x03D65CA0 B 0x2FF57C0
	0x03D65CA4 BL 0x1C16F20
	0x03D65CA8 STP X30, X19, [X31 - 0x10]!
	0x03D65CAC LDR X8, [X0 + 0x3F8]
	0x03D65CB0 CBZ X8, 0x3D65CD8
	0x03D65CB4 LDR X1, [X8 + 0x10]
	0x03D65CB8 MOV X2, X31
	0x03D65CBC MOV X19, X0
	0x03D65CC0 BL 0x3DEF278
	0x03D65CC4 MOV X0, X19
	0x03D65CC8 BL 0x3D65CDC
	0x03D65CCC MOV X0, X19
	0x03D65CD0 LDP X30, X19, [X31], #0x10
	0x03D65CD4 B 0x3D65DB4
	0x03D65CD8 BL 0x1C16F20
	0x03D65CDC STP X30, X21, [X31 - 0x20]!
	0x03D65CE0 STP X20, X19, [X31 + 0x10]
	0x03D65CE4 ADRP X20, 0x682000
	0x03D65CE8 LDRB W8, [X20 + 0xCB8]
	0x03D65CEC MOV X19, X0
	0x03D65CF0 TBNZ X8, 0x0, 0x3D65D14
	0x03D65CF4 ADRP X0, 0x401000
	0x03D65CF8 LDR X0, [X0 + 0x888]
	0x03D65CFC BL 0x1C16CF4
	0x03D65D00 ADRP X0, 0x401000
	0x03D65D04 LDR X0, [X0 + 0x4D0]
	0x03D65D08 BL 0x1C16CF4
	0x03D65D0C MOVZ W8, 0x1
	0x03D65D10 STRB W8, [X20 + 0xCB8]
	0x03D65D14 MOV X0, X19
	0x03D65D18 BL 0x3D6560C
	0x03D65D1C TBZ X0, 0x0, 0x3D65DA4
	0x03D65D20 ADRP X21, 0x401000
	0x03D65D24 LDR X21, [X21 + 0x4D0]
	0x03D65D28 LDR X20, [X19 + 0x3D0]
	0x03D65D2C LDR X0, [X21]
	0x03D65D30 LDR W8, [X0 + 0xE0]
	0x03D65D34 CBNZ W8, 0x3D65D40
	0x03D65D38 BL 0x1C16DFC
	0x03D65D3C LDR X0, [X21]
	0x03D65D40 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x683000
	009 Move X24, 0x402000
	010 Move X20, 0x402000
	011 Move X22, 0x402000
	012 Move X21, 0x402000
	013 Move W8, [X23+3244]
	014 Move X24, [X24+2120]
	015 Move X20, [X20+2128]
	016 Move X22, [X22+2136]
	017 Move X21, [X21+2144]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x402000
	024 Move X0, [X0+2128]
	025 Call 0x1C17CF4
	026 Move X0, 0x402000
	027 Move X0, [X0+2144]
	028 Call 0x1C17CF4
	029 Move X0, 0x402000
	030 Move X0, [X0+2120]
	031 Call 0x1C17CF4
	032 Move X0, 0x402000
	033 Move X0, [X0+2136]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3244], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call List`1<Object>..ctor, X0
	042 Move [X19+24], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call List`1<ColumnState>..ctor, X0
	048 Move [X19+32], X20
	049 Move X0, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+64]
	058 Call Object..ctor, X0
	059 Return 

