Type: UnityEngine.UIElements.Internal.MultiColumnHeaderColumnIcon

Method: System.Boolean get_isImageInline()

Disassembly:
	0x03D66128 CBZ X22, 0x3D6614C
	0x03D6612C LDR X8, [X19 + 0x3F8]

ISIL:
	001 Move W0, [X0+1035]
	002 Return X0

Method: System.Void set_isImageInline(System.Boolean value)

Disassembly:
	0x03D66130 CBZ X8, 0x3D66358
	0x03D66134 LDR X9, [X22]
	0x03D66138 LDR X1, [X8 + 0x18]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+1035], W8
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x03D6613C MOV X0, X22
	0x03D66140 LDR X8, [X9 + 0xB28]
	0x03D66144 LDR X2, [X9 + 0xB30]
	0x03D66148 BLR X8
	0x03D6614C LDR X8, [X19 + 0x3F8]
	0x03D66150 CBZ X8, 0x3D66358
	0x03D66154 LDR X0, [X8 + 0x18]
	0x03D66158 MOV X1, X31
	0x03D6615C BL 0x32277A8
	0x03D66160 TBNZ X0, 0x0, 0x3D6618C
	0x03D66164 LDR X0, [X23]
	0x03D66168 LDR W8, [X0 + 0xE0]
	0x03D6616C CBNZ W8, 0x3D66178
	0x03D66170 BL 0x1C16DFC
	0x03D66174 LDR X0, [X23]
	0x03D66178 LDR X8, [X0 + 0xB8]
	0x03D6617C MOV X0, X21
	0x03D66180 MOV X2, X31
	0x03D66184 LDR X1, [X8 + 0x48]
	0x03D66188 BL 0x3DF1C70
	0x03D6618C CBZ X20, 0x3D662C0
	0x03D66190 LDR X8, [X19 + 0x3F8]
	0x03D66194 CBZ X8, 0x3D66358
	0x03D66198 LDP V1, V0, [X8 + 0x20]
	0x03D6619C ADRP X22, 0x38D000
	0x03D661A0 LDR X22, [X22 + 0x598]
	0x03D661A4 ADD X0, X31, 0x0
	0x03D661A8 MOV X1, X31
	0x03D661AC STP V1, V0, [X31]
	0x03D661B0 BL 0x3DE2228
	0x03D661B4 LDR X8, [X22]
	0x03D661B8 MOV X21, X0
	0x03D661BC LDR W9, [X8 + 0xE0]
	0x03D661C0 CBNZ W9, 0x3D661CC
	0x03D661C4 MOV X0, X8
	0x03D661C8 BL 0x1C16DFC
	0x03D661CC MOV X0, X21
	0x03D661D0 MOV X1, X31
	0x03D661D4 MOV X2, X31
	0x03D661D8 BL 0x3C354F8
	0x03D661DC TBNZ X0, 0x0, 0x3D66228
	0x03D661E0 LDR X8, [X19 + 0x3F8]
	0x03D661E4 CBZ X8, 0x3D66358
	0x03D661E8 LDP V1, V0, [X8 + 0x20]
	0x03D661EC ADD X0, X31, 0x0
	0x03D661F0 MOV X1, X31
	0x03D661F4 STP V1, V0, [X31]
	0x03D661F8 BL 0x3DE22AC
	0x03D661FC LDR X8, [X22]
	0x03D66200 MOV X21, X0
	0x03D66204 LDR W9, [X8 + 0xE0]
	0x03D66208 CBNZ W9, 0x3D66214
	0x03D6620C MOV X0, X8
	0x03D66210 BL 0x1C16DFC
	0x03D66214 MOV X0, X21
	0x03D66218 MOV X1, X31
	0x03D6621C MOV X2, X31
	0x03D66220 BL 0x3C354F8
	0x03D66224 TBZ X0, 0x0, 0x3D662D8
	0x03D66228 ADD X8, X20, 0x40B
	0x03D6622C MOVZ W9, 0x1
	0x03D66230 STRB W9, [X8]
	0x03D66234 LDR X8, [X19 + 0x3F8]
	0x03D66238 CBZ X8, 0x3D66358
	0x03D6623C LDP V1, V0, [X8 + 0x20]
	0x03D66240 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x682000
	008 Move X20, 0x3FE000
	009 Move W8, [X21+3247]
	010 Move X20, [X20+3424]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x3B8000
	017 Move X0, [X0+1592]
	018 Call 0x1C17CF4
	019 Move X0, 0x3B8000
	020 Move X0, [X0+1600]
	021 Call 0x1C17CF4
	022 Move X0, 0x3FE000
	023 Move X0, [X0+3424]
	024 Call 0x1C17CF4
	025 Move X0, 0x401000
	026 Move X0, [X0+2168]
	027 Call 0x1C17CF4
	028 Move X0, 0x401000
	029 Move X0, [X0+2176]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+3247], W8
	033 Move X0, [X20]
	034 Move X23, 0x401000
	035 Move W8, [X0+224]
	036 Move X23, [X23+2176]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X22, 0x3B8000
	041 Move X20, 0x401000
	042 Move X21, 0x3B8000
	043 Move X22, [X22+1600]
	044 Move X20, [X20+2168]
	045 Move X21, [X21+1592]
	046 Move X0, X19
	047 Move X1, X31
	048 Call Image..ctor, X0
	049 Move X0, [X23]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X23]
	055 Move X8, [X0+184]
	056 Move X0, X19
	057 Move X2, X31
	058 Move X1, [X8]
	059 Call VisualElement.AddToClassList, X0, X1
	060 Move X0, [X22]
	061 Call 0x1C17F10
	062 Move X2, [X20]
	063 Move X1, X19
	064 Move X3, X31
	065 Move X20, X0
	066 Call 0x2D0F824, X0, X1, X2
	067 Move X3, [X21]
	068 Move X0, X19
	069 Move X1, X20
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move W2, W31
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Call 0x21A2534, X0, X1, X2
	078 Return 

Method: System.Void UpdateClassList()

Disassembly:
	0x03D66244 MOV X1, X31
	0x03D66248 STP V1, V0, [X31]
	0x03D6624C BL 0x3DE2228
	0x03D66250 MOV X1, X0
	0x03D66254 MOV X0, X20
	0x03D66258 MOV X2, X31
	0x03D6625C BL 0x3D134A0
	0x03D66260 LDR X8, [X19 + 0x3F8]
	0x03D66264 CBZ X8, 0x3D66358
	0x03D66268 LDP V1, V0, [X8 + 0x20]
	0x03D6626C ADD X0, X31, 0x0
	0x03D66270 MOV X1, X31
	0x03D66274 STP V1, V0, [X31]
	0x03D66278 BL 0x3DE22AC
	0x03D6627C MOV X1, X0
	0x03D66280 MOV X0, X20
	0x03D66284 MOV X2, X31
	0x03D66288 BL 0x3D1358C
	0x03D6628C LDR X8, [X19 + 0x3F8]
	0x03D66290 CBZ X8, 0x3D66358
	0x03D66294 LDP V1, V0, [X8 + 0x20]
	0x03D66298 ADD X0, X31, 0x0
	0x03D6629C MOV X1, X31
	0x03D662A0 STP V1, V0, [X31]
	0x03D662A4 BL 0x3DE0F4C
	0x03D662A8 MOV X1, X0
	0x03D662AC MOV X0, X20
	0x03D662B0 MOV X2, X31
	0x03D662B4 BL 0x3D13678
	0x03D662B8 MOV X0, X20
	0x03D662BC BL 0x3D65244
	0x03D662C0 LDP X20, X19, [X31 + 0x50]
	0x03D662C4 LDP X22, X21, [X31 + 0x40]
	0x03D662C8 LDP X24, X23, [X31 + 0x30]
	0x03D662CC LDR X30, [X31 + 0x20]
	0x03D662D0 ADD X31, X31, 0x60
	0x03D662D4 RET
	0x03D662D8 LDR X8, [X19 + 0x3F8]
	0x03D662DC CBZ X8, 0x3D66358
	0x03D662E0 LDP V1, V0, [X8 + 0x20]
	0x03D662E4 ADD X0, X31, 0x0
	0x03D662E8 MOV X1, X31
	0x03D662EC STP V1, V0, [X31]
	0x03D662F0 BL 0x3DE0F4C
	0x03D662F4 LDR X8, [X22]
	0x03D662F8 MOV X21, X0
	0x03D662FC LDR W9, [X8 + 0xE0]
	0x03D66300 CBNZ W9, 0x3D6630C
	0x03D66304 MOV X0, X8
	0x03D66308 BL 0x1C16DFC
	0x03D6630C MOV X0, X21
	0x03D66310 MOV X1, X31
	0x03D66314 MOV X2, X31
	0x03D66318 BL 0x3C354F8
	0x03D6631C ADD X8, X20, 0x40B
	0x03D66320 TBNZ X0, 0x0, 0x3D6622C
	0x03D66324 LDRB W8, [X8]
	0x03D66328 CBZ W8, 0x3D662B8
	0x03D6632C MOV X0, X20
	0x03D66330 MOV X1, X31
	0x03D66334 MOV X2, X31
	0x03D66338 BL 0x3D134A0
	0x03D6633C MOV X0, X20
	0x03D66340 MOV X1, X31
	0x03D66344 MOV X2, X31
	0x03D66348 BL 0x3D1358C
	0x03D6634C MOV X0, X20
	0x03D66350 MOV X1, X31
	0x03D66354 B 0x3D662B0
	0x03D66358 BL 0x1C16F20
	0x03D6635C STP X29, X30, [X31 - 0x60]!
	0x03D66360 STP X28, X27, [X31 + 0x10]
	0x03D66364 STP X26, X25, [X31 + 0x20]
	0x03D66368 STP X24, X23, [X31 + 0x30]
	0x03D6636C STP X22, X21, [X31 + 0x40]
	0x03D66370 STP X20, X19, [X31 + 0x50]
	0x03D66374 ADRP X19, 0x681000
	0x03D66378 ADRP X28, 0x3FC000
	0x03D6637C LDRB W8, [X19 + 0xCBE]
	0x03D66380 LDR X28, [X28 + 0xC50]
	0x03D66384 TBNZ X8, 0x0, 0x3D66474
	0x03D66388 ADRP X0, 0x3FC000
	0x03D6638C LDR X0, [X0 + 0xC50]
	0x03D66390 BL 0x1C16CF4
	0x03D66394 ADRP X0, 0x400000
	0x03D66398 LDR X0, [X0 + 0x4D0]
	0x03D6639C BL 0x1C16CF4
	0x03D663A0 ADRP X0, 0x400000
	0x03D663A4 LDR X0, [X0 + 0x8C0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x682000
	007 Move X21, 0x401000
	008 Move W8, [X20+3248]
	009 Move X21, [X21+1232]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x401000
	016 Move X0, [X0+1232]
	017 Call 0x1C17CF4
	018 Move X0, 0x38E000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3248], W8
	023 Move X0, X19
	024 Move X1, X31
	025 Call VisualElement.get_parent, X0
	026 Move X8, [X21]
	027 Move X20, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Compare X20, 0
	034 JumpIfEqual {115}
	035 Move X8, [X21]
	036 Move X22, 0x38E000
	037 Move X0, X20
	038 Move X2, X31
	039 Move X8, [X8+184]
	040 Move X1, [X8+64]
	041 Move X22, [X22+1432]
	042 Call VisualElement.RemoveFromClassList, X0, X1
	043 Move X0, [X22]
	044 Move X20, [X19+976]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Move X1, X31
	051 Move X2, X31
	052 Call Object.op_Inequality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {85}
	057 Move X0, [X22]
	058 Move X20, [X19+984]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X20
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Inequality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {85}
	071 Move X0, [X22]
	072 Move X20, [X19+992]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X20
	078 Move X1, X31
	079 Move X2, X31
	080 Call Object.op_Inequality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {109}
	085 Move X0, X19
	086 Move X1, X31
	087 Call VisualElement.get_parent, X0
	088 Move X8, [X21]
	089 Move X19, X0
	090 Move W9, [X8+224]
	091 Compare W9, 0
	092 JumpIfNotEqual {95}
	093 Move X0, X8
	094 Call 0x1C17DFC
	095 Compare X19, 0
	096 JumpIfEqual {115}
	097 Move X8, [X21]
	098 Move X0, X19
	099 Move X20, [X31+32]
	100 Move X19, [X31+40]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X8, [X8+184]
	104 Move X2, X31
	105 Move X1, [X8+64]
	106 Move X30, [X31+48]
	107 Call VisualElement.AddToClassList, X0, X1
	108 Return 
	109 Move X20, [X31+32]
	110 Move X19, [X31+40]
	111 Move X22, [X31+16]
	112 Move X21, [X31+24]
	113 Move X30, [X31+48]
	114 Return 
	115 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D663A8 BL 0x1C16CF4
	0x03D663AC ADRP X0, 0x400000
	0x03D663B0 LDR X0, [X0 + 0x8C8]
	0x03D663B4 BL 0x1C16CF4
	0x03D663B8 ADRP X0, 0x400000
	0x03D663BC LDR X0, [X0 + 0x8D0]
	0x03D663C0 BL 0x1C16CF4
	0x03D663C4 ADRP X0, 0x400000
	0x03D663C8 LDR X0, [X0 + 0x8D8]
	0x03D663CC BL 0x1C16CF4
	0x03D663D0 ADRP X0, 0x400000
	0x03D663D4 LDR X0, [X0 + 0x8E0]
	0x03D663D8 BL 0x1C16CF4
	0x03D663DC ADRP X0, 0x400000
	0x03D663E0 LDR X0, [X0 + 0x8E8]
	0x03D663E4 BL 0x1C16CF4
	0x03D663E8 ADRP X0, 0x400000
	0x03D663EC LDR X0, [X0 + 0x8F0]
	0x03D663F0 BL 0x1C16CF4
	0x03D663F4 ADRP X0, 0x400000
	0x03D663F8 LDR X0, [X0 + 0x8F8]
	0x03D663FC BL 0x1C16CF4
	0x03D66400 ADRP X0, 0x400000
	0x03D66404 LDR X0, [X0 + 0x900]
	0x03D66408 BL 0x1C16CF4
	0x03D6640C ADRP X0, 0x400000
	0x03D66410 LDR X0, [X0 + 0x908]
	0x03D66414 BL 0x1C16CF4
	0x03D66418 ADRP X0, 0x400000
	0x03D6641C LDR X0, [X0 + 0x910]
	0x03D66420 BL 0x1C16CF4
	0x03D66424 ADRP X0, 0x400000
	0x03D66428 LDR X0, [X0 + 0x918]
	0x03D6642C BL 0x1C16CF4
	0x03D66430 ADRP X0, 0x3FD000
	0x03D66434 LDR X0, [X0 + 0xB38]
	0x03D66438 BL 0x1C16CF4
	0x03D6643C ADRP X0, 0x400000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x682000
	006 Move X19, 0x401000
	007 Move W8, [X20+3249]
	008 Move X19, [X19+1232]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x401000
	014 Move X0, [X0+2176]
	015 Call 0x1C17CF4
	016 Move X0, 0x401000
	017 Move X0, [X0+1232]
	018 Call 0x1C17CF4
	019 Move X0, 0x3FE000
	020 Move X0, [X0+3304]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3249], W8
	024 Move X0, [X19]
	025 Move X21, 0x3FE000
	026 Move X20, 0x401000
	027 Move W8, [X0+224]
	028 Move X21, [X21+3304]
	029 Move X20, [X20+2176]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X19]
	034 Move X8, [X0+184]
	035 Move X1, [X21]
	036 Move X2, X31
	037 Move X0, [X8]
	038 Call String.Concat, X0, X1
	039 Move X8, [X20]
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X8, [X8+184]
	043 Move [X8], X0
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 

Method: System.Void <.ctor>b__5_0(UnityEngine.UIElements.CustomStyleResolvedEvent evt)

Disassembly:
	0x03D66440 LDR X0, [X0 + 0x920]

ISIL:
	001 Call MultiColumnHeaderColumnIcon.UpdateClassList, X0
	002 Return 

