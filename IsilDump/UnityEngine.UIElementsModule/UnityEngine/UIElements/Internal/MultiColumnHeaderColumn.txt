Type: UnityEngine.UIElements.Internal.MultiColumnHeaderColumn

Method: UnityEngine.UIElements.Clickable get_clickable()

Disassembly:
	0x03D66444 BL 0x1C16CF4
	0x03D66448 ADRP X0, 0x400000

ISIL:
	001 Move X0, [X0+1000]
	002 Return X0

Method: System.Void set_clickable(UnityEngine.UIElements.Clickable value)

Disassembly:
	0x03D6644C LDR X0, [X0 + 0x928]
	0x03D66450 BL 0x1C16CF4

ISIL:
	001 Move [X0+1000], X1
	002 Return 

Method: UnityEngine.UIElements.Internal.ColumnMover get_mover()

Disassembly:
	0x03D66454 ADRP X0, 0x400000
	0x03D66458 LDR X0, [X0 + 0x930]

ISIL:
	001 Move X0, [X0+1008]
	002 Return X0

Method: System.Void set_mover(UnityEngine.UIElements.Internal.ColumnMover value)

Disassembly:
	0x03D6645C BL 0x1C16CF4
	0x03D66460 ADRP X0, 0x400000

ISIL:
	001 Move [X0+1008], X1
	002 Return 

Method: System.Void set_sortOrderLabel(System.String value)

Disassembly:
	0x03D64B20 BL 0x3EB1AD0
	0x03D64B24 LDR X20, [X0]
	0x03D64B28 BL 0x3EB1AE0
	0x03D64B2C LDR X1, [X22]
	0x03D64B30 ADD X0, X31, 0x20
	0x03D64B34 BL 0x2C0B1EC
	0x03D64B38 CBZ X20, 0x3D64ABC
	0x03D64B3C MOV X0, X20
	0x03D64B40 BL 0x1C16F18
	0x03D64B44 MOV X20, X31
	0x03D64B48 B 0x3D64B50

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+984]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move X0, [X8+968]
	006 Compare X0, 0
	007 JumpIfEqual {13}
	008 Move X8, [X0]
	009 Move X3, [X8+2856]
	010 Move X2, [X8+2864]
	011 Move X30, [X31+16]
	012 CallNoReturn X3
	013 Call 0x1C17F20

Method: UnityEngine.UIElements.Column get_column()

Disassembly:
	0x03D66464 LDR X0, [X0 + 0x938]
	0x03D66468 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+1016]
	002 Return X0

Method: System.Void set_column(UnityEngine.UIElements.Column value)

Disassembly:
	0x03D6646C MOVZ W8, 0x1
	0x03D66470 STRB W8, [X19 + 0xCBE]

ISIL:
	001 Move [X0+1016], X1
	002 Return 

Method: UnityEngine.UIElements.VisualElement get_content()

Disassembly:
	0x03D66474 ADRP X27, 0x400000
	0x03D66478 ADRP X19, 0x400000

ISIL:
	001 Move X0, [X0+976]
	002 Return X0

Method: System.Void set_content(UnityEngine.UIElements.VisualElement value)

Disassembly:
	0x03D6647C ADRP X26, 0x400000
	0x03D66480 ADRP X25, 0x400000
	0x03D66484 ADRP X24, 0x400000
	0x03D66488 ADRP X23, 0x400000
	0x03D6648C ADRP X22, 0x400000
	0x03D66490 ADRP X21, 0x3FD000
	0x03D66494 ADRP X20, 0x400000
	0x03D66498 ADRP X29, 0x400000
	0x03D6649C LDR X27, [X27 + 0x8F0]
	0x03D664A0 LDR X19, [X19 + 0x4D0]
	0x03D664A4 LDR X26, [X26 + 0x8D0]
	0x03D664A8 LDR X25, [X25 + 0x8D8]
	0x03D664AC LDR X24, [X24 + 0x8E0]
	0x03D664B0 LDR X23, [X23 + 0x8C0]
	0x03D664B4 LDR X22, [X22 + 0x938]
	0x03D664B8 LDR X21, [X21 + 0xB38]
	0x03D664BC LDR X20, [X20 + 0x908]
	0x03D664C0 LDR X29, [X29 + 0x8C8]
	0x03D664C4 LDR X0, [X28]
	0x03D664C8 LDR W8, [X0 + 0xE0]
	0x03D664CC CBNZ W8, 0x3D664D8
	0x03D664D0 BL 0x1C16DFC
	0x03D664D4 LDR X0, [X28]
	0x03D664D8 LDR X8, [X0 + 0xB8]
	0x03D664DC LDR X1, [X27]
	0x03D664E0 MOV X2, X31
	0x03D664E4 LDR X0, [X8]
	0x03D664E8 BL 0x321B938
	0x03D664EC LDR X8, [X19]
	0x03D664F0 MOV X2, X31
	0x03D664F4 LDR X8, [X8 + 0xB8]
	0x03D664F8 STR X0, [X8]
	0x03D664FC LDR X8, [X19]
	0x03D66500 LDR X1, [X26]
	0x03D66504 LDR X8, [X8 + 0xB8]
	0x03D66508 LDR X0, [X8]
	0x03D6650C BL 0x321B938
	0x03D66510 LDR X8, [X19]
	0x03D66514 MOV X2, X31
	0x03D66518 LDR X8, [X8 + 0xB8]
	0x03D6651C STR X0, [X8 + 0x8]
	0x03D66520 LDR X0, [X8]
	0x03D66524 LDR X1, [X25]
	0x03D66528 BL 0x321B938
	0x03D6652C LDR X8, [X19]
	0x03D66530 MOV X2, X31
	0x03D66534 LDR X8, [X8 + 0xB8]
	0x03D66538 STR X0, [X8 + 0x10]
	0x03D6653C LDR X0, [X8]
	0x03D66540 LDR X1, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x682000
	006 Move W8, [X21+3250]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x401000
	014 Move X0, [X0+1232]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3250], W8
	018 Move X0, [X19+976]
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X1, X31
	022 Call VisualElement.get_parent, X0
	023 Move X8, [X19+968]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, [X19+976]
	026 Compare X0, 0
	027 JumpIfEqual {64}
	028 Move X1, X31
	029 Call VisualElement.RemoveFromHierarchy, X0
	030 Move X0, X19
	031 Call MultiColumnHeaderColumn.DestroyHeaderContent, X0
	032 Move [X19+976], X20
	033 Compare X20, 0
	034 JumpIfEqual {59}
	035 Move X21, 0x401000
	036 Move X21, [X21+1232]
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move X0, X20
	045 Move X2, X31
	046 Move X1, [X8+48]
	047 Call VisualElement.AddToClassList, X0, X1
	048 Move X0, [X19+968]
	049 Compare X0, 0
	050 JumpIfEqual {64}
	051 Move X1, [X19+976]
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X2, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call VisualElement.Add, X0, X1
	058 Return 
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 
	064 Call 0x1C17F20

Method: System.Boolean get_isContentBound()

Disassembly:
	0x03D6660C ADRP X8, 0x400000
	0x03D66610 LDR X8, [X8 + 0x930]
	0x03D66614 LDR X1, [X8]
	0x03D66618 BL 0x321B938
	0x03D6661C LDR X8, [X19]
	0x03D66620 ADRP X9, 0x400000
	0x03D66624 LDR X8, [X8 + 0xB8]
	0x03D66628 STR X0, [X8 + 0x50]
	0x03D6662C LDR X9, [X9 + 0x8F8]
	0x03D66630 LDR X9, [X9]
	0x03D66634 STR X9, [X8 + 0x58]
	0x03D66638 ADRP X9, 0x400000
	0x03D6663C LDR X9, [X9 + 0x910]
	0x03D66640 LDR X9, [X9]
	0x03D66644 STR X9, [X8 + 0x60]
	0x03D66648 ADRP X9, 0x400000
	0x03D6664C LDR X9, [X9 + 0x900]
	0x03D66650 LDR X9, [X9]
	0x03D66654 STR X9, [X8 + 0x68]
	0x03D66658 ADRP X9, 0x400000
	0x03D6665C LDR X9, [X9 + 0x8E8]
	0x03D66660 LDR X9, [X9]
	0x03D66664 STR X9, [X8 + 0x70]
	0x03D66668 ADRP X9, 0x400000
	0x03D6666C LDR X9, [X9 + 0x920]
	0x03D66670 LDR X9, [X9]
	0x03D66674 STR X9, [X8 + 0x78]
	0x03D66678 ADRP X9, 0x400000
	0x03D6667C LDR X9, [X9 + 0x918]
	0x03D66680 LDP X20, X19, [X31 + 0x50]
	0x03D66684 LDP X22, X21, [X31 + 0x40]
	0x03D66688 LDP X24, X23, [X31 + 0x30]
	0x03D6668C LDR X9, [X9]
	0x03D66690 LDP X26, X25, [X31 + 0x20]
	0x03D66694 LDP X28, X27, [X31 + 0x10]
	0x03D66698 STR X9, [X8 + 0x80]
	0x03D6669C LDP X29, X30, [X31], #0x60
	0x03D666A0 RET
	0x03D666A4 STP X30, X21, [X31 - 0x20]!
	0x03D666A8 STP X20, X19, [X31 + 0x10]
	0x03D666AC ADRP X21, 0x681000
	0x03D666B0 LDRB W8, [X21 + 0xCBF]
	0x03D666B4 MOV W20, W2
	0x03D666B8 MOV X19, X0
	0x03D666BC TBNZ X8, 0x0, 0x3D666F8
	0x03D666C0 ADRP X0, 0x38E000
	0x03D666C4 LDR X0, [X0 + 0xE70]
	0x03D666C8 BL 0x1C16CF4
	0x03D666CC ADRP X0, 0x3B8000
	0x03D666D0 LDR X0, [X0 + 0xAB8]
	0x03D666D4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x682000
	005 Move W8, [X20+3251]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x38E000
	012 Move X0, [X0+2904]
	013 Call 0x1C17CF4
	014 Move X0, 0x401000
	015 Move X0, [X0+1232]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3251], W8
	019 Move X19, [X19+976]
	020 Compare X19, 0
	021 JumpIfEqual {51}
	022 Move X20, 0x401000
	023 Move X20, [X20+1232]
	024 Move X0, [X20]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move X1, X31
	032 Move X0, [X8+104]
	033 Call PropertyName.op_Implicit, X0
	034 And X1, X0, 0
	035 Move X0, X19
	036 Move X2, X31
	037 Call VisualElement.GetProperty, X0, X1
	038 Compare X0, 0
	039 JumpIfEqual {56}
	040 Move X8, 0x38E000
	041 Move X8, [X8+2904]
	042 Move X9, [X0]
	043 Move X1, [X8]
	044 Move X8, [X9+64]
	045 Move X9, [X1+64]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Call 0x1C17E08
	048 Move W8, [X0]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Move W0, W31
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return X0
	056 Call 0x1C17F20
	057 Call 0x1C181E0

Method: System.Void set_isContentBound(System.Boolean value)

Disassembly:
	0x03D666D8 ADRP X0, 0x3B5000
	0x03D666DC LDR X0, [X0 + 0x680]
	0x03D666E0 BL 0x1C16CF4
	0x03D666E4 ADRP X0, 0x400000
	0x03D666E8 LDR X0, [X0 + 0x940]
	0x03D666EC BL 0x1C16CF4
	0x03D666F0 MOVZ W8, 0x1
	0x03D666F4 STRB W8, [X21 + 0xCBF]
	0x03D666F8 CMP W20, 0xB
	0x03D666FC B.NE 0x3D66750
	0x03D66700 LDR X20, [X19 + 0x3E0]
	0x03D66704 CBZ X20, 0x3D6677C
	0x03D66708 ADRP X10, 0x3B8000
	0x03D6670C LDR X8, [X20]
	0x03D66710 LDR X10, [X10 + 0xAB8]
	0x03D66714 LDRH W9, [X8 + 0x12E]
	0x03D66718 LDR X1, [X10]
	0x03D6671C CBZ X9, 0x3D66740
	0x03D66720 LDR X10, [X8 + 0xB0]
	0x03D66724 ADD X10, X10, 0x8
	0x03D66728 LDUR X11, [X10 - 0x8]
	0x03D6672C CMP X11, X1
	0x03D66730 B.EQ 0x3D66760
	0x03D66734 SUBS X9, X9, 0x1
	0x03D66738 ADD X10, X10, 0x10
	0x03D6673C B.NE 0x3D66728
	0x03D66740 MOVZ W2, 0x1
	0x03D66744 MOV X0, X20
	0x03D66748 BL 0x1C5C788
	0x03D6674C B 0x3D66770
	0x03D66750 MOV X0, X19
	0x03D66754 LDP X20, X19, [X31 + 0x10]
	0x03D66758 LDP X30, X21, [X31], #0x20
	0x03D6675C B 0x3D65CA8
	0x03D66760 LDR W9, [X10]
	0x03D66764 ADD W9, W9, 0x1
	0x03D66768 ADD X8, X8, W9, 0x4, SXTW
	0x03D6676C ADD X0, X8, 0x138
	0x03D66770 LDP X8, X1, [X0]
	0x03D66774 MOV X0, X20
	0x03D66778 BLR X8
	0x03D6677C MOV X0, X19
	0x03D66780 MOV X1, X31
	0x03D66784 BL 0x3DF7724
	0x03D66788 ADRP X8, 0x38E000
	0x03D6678C LDR X8, [X8 + 0xE70]
	0x03D66790 MOV X20, X0
	0x03D66794 LDR X8, [X8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x682000
	009 Move W8, [X21+3252]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x38E000
	017 Move X0, [X0+2904]
	018 Call 0x1C17CF4
	019 Move X0, 0x401000
	020 Move X0, [X0+1232]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3252], W8
	024 Move X19, [X19+976]
	025 Compare X19, 0
	026 JumpIfEqual {52}
	027 Move X23, 0x401000
	028 Move X23, [X23+1232]
	029 Move X22, 0x38E000
	030 And W21, W20, 1
	031 Move X0, [X23]
	032 Move W8, [X0+224]
	033 Move X22, [X22+2904]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X23]
	038 Move X8, [X0+184]
	039 Move X1, X31
	040 Move X0, [X8+104]
	041 Call PropertyName.op_Implicit, X0
	042 Move X20, X0
	043 Move X0, [X22]
	044 Add X1, X31, 12
	045 Move [X31+12], W21
	046 Call 0x1C17E04
	047 Move X2, X0
	048 And X1, X20, 0
	049 Move X0, X19
	050 Move X3, X31
	051 Call VisualElement.SetProperty, X0, X1, X2
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X30, [X31+16]
	057 Move X23, [X31+24]
	058 Add X31, X31, 64
	059 Return 

Method: System.Void .ctor(UnityEngine.UIElements.Column column)

Disassembly:
	0x03D6220C CBZ X20, 0x3D62400
	0x03D62210 LDR W10, [X20 + 0x1C]
	0x03D62214 LDR X1, [X31 + 0x18]
	0x03D62218 LDR X8, [X20 + 0x10]
	0x03D6221C LDR X9, [X27]
	0x03D62220 ADD W10, W10, 0x1
	0x03D62224 STR W10, [X20 + 0x1C]
	0x03D62228 CBZ X8, 0x3D62404
	0x03D6222C LDRSW X10, [X20 + 0x18]
	0x03D62230 LDR W11, [X8 + 0x18]
	0x03D62234 CMP W10, W11
	0x03D62238 B.CS 0x3D62250
	0x03D6223C ADD W9, W10, 0x1
	0x03D62240 ADD X8, X8, X10, 0x3, LSL
	0x03D62244 STR W9, [X20 + 0x18]
	0x03D62248 STR X1, [X8 + 0x20]
	0x03D6224C B 0x3D62264
	0x03D62250 LDR X8, [X9 + 0x20]
	0x03D62254 LDR X8, [X8 + 0xC0]
	0x03D62258 LDR X2, [X8 + 0x70]
	0x03D6225C MOV X0, X20
	0x03D62260 BL 0x301BF90
	0x03D62264 LDR W9, [X22 + 0x20]
	0x03D62268 LDR X8, [X31 + 0x18]
	0x03D6226C CBZ W9, 0x3D622A8
	0x03D62270 CBZ X8, 0x3D62408
	0x03D62274 LDR X0, [X28]
	0x03D62278 LDR X22, [X8 + 0x10]
	0x03D6227C LDR W9, [X0 + 0xE0]
	0x03D62280 CBNZ W9, 0x3D62288
	0x03D62284 BL 0x1C16DFC
	0x03D62288 CBZ X22, 0x3D6240C
	0x03D6228C LDR X8, [X28]
	0x03D62290 LDR X8, [X8 + 0xB8]
	0x03D62294 LDR X1, [X8 + 0x18]
	0x03D62298 MOV X0, X22
	0x03D6229C MOV X2, X31
	0x03D622A0 BL 0x3DF1C70
	0x03D622A4 B 0x3D62134
	0x03D622A8 CBZ X8, 0x3D62410
	0x03D622AC LDR X0, [X28]
	0x03D622B0 LDR X22, [X8 + 0x10]
	0x03D622B4 LDR W9, [X0 + 0xE0]
	0x03D622B8 CBNZ W9, 0x3D622C0
	0x03D622BC BL 0x1C16DFC
	0x03D622C0 CBZ X22, 0x3D62414
	0x03D622C4 LDR X8, [X28]
	0x03D622C8 LDR X8, [X8 + 0xB8]
	0x03D622CC LDR X1, [X8 + 0x10]
	0x03D622D0 MOV X0, X22
	0x03D622D4 MOV X2, X31
	0x03D622D8 BL 0x3DF1C70
	0x03D622DC B 0x3D62134
	0x03D622E0 MOV X19, X31
	0x03D622E4 MOVZ W22, 0xB
	0x03D622E8 CBZ X21, 0x3D62344
	0x03D622EC LDR X8, [X21]
	0x03D622F0 LDR X1, [X23]
	0x03D622F4 LDRH W9, [X8 + 0x12E]
	0x03D622F8 CBZ X9, 0x3D6231C
	0x03D622FC LDR X10, [X8 + 0xB0]
	0x03D62300 ADD X10, X10, 0x8
	0x03D62304 LDUR X11, [X10 - 0x8]
	0x03D62308 CMP X11, X1
	0x03D6230C B.EQ 0x3D6232C
	0x03D62310 SUBS X9, X9, 0x1
	0x03D62314 ADD X10, X10, 0x10
	0x03D62318 B.NE 0x3D62304
	0x03D6231C MOV X0, X21
	0x03D62320 MOV W2, W31
	0x03D62324 BL 0x1C5C788
	0x03D62328 B 0x3D62338
	0x03D6232C LDRSW X9, [X10]
	0x03D62330 ADD X8, X8, X9, 0x4, LSL
	0x03D62334 ADD X0, X8, 0x138
	0x03D62338 LDP X8, X1, [X0]
	0x03D6233C MOV X0, X21
	0x03D62340 BLR X8
	0x03D62344 CBNZ X19, 0x3D62428
	0x03D62348 CMP W22, 0xB
	0x03D6234C B.EQ 0x3D62354
	0x03D62350 CBNZ W22, 0x3D623B8
	0x03D62354 CBZ X20, 0x3D623E4
	0x03D62358 LDR W8, [X20 + 0x18]
	0x03D6235C CMP W8, 0x2
	0x03D62360 B.LT 0x3D623B8
	0x03D62364 ADRP X22, 0x404000
	0x03D62368 LDR X22, [X22 + 0x750]
	0x03D6236C MOV W19, W31
	0x03D62370 LDR X2, [X22]
	0x03D62374 MOV X0, X20
	0x03D62378 MOV W1, W19
	0x03D6237C BL 0x301BCCC
	0x03D62380 CBZ X0, 0x3D623E4
	0x03D62384 LDR X21, [X0 + 0x10]
	0x03D62388 ADD W19, W19, 0x1
	0x03D6238C ADD X0, X31, 0x14
	0x03D62390 MOV X1, X31
	0x03D62394 STR W19, [X31 + 0x14]
	0x03D62398 BL 0x337B6E0
	0x03D6239C CBZ X21, 0x3D623E4
	0x03D623A0 MOV X1, X0
	0x03D623A4 MOV X0, X21
	0x03D623A8 BL 0x3D63B20
	0x03D623AC LDR W8, [X20 + 0x18]
	0x03D623B0 CMP W19, W8
	0x03D623B4 B.LT 0x3D62370
	0x03D623B8 LDP X20, X19, [X31 + 0x70]
	0x03D623BC LDP X22, X21, [X31 + 0x60]
	0x03D623C0 LDP X24, X23, [X31 + 0x50]
	0x03D623C4 LDP X26, X25, [X31 + 0x40]
	0x03D623C8 LDP X28, X27, [X31 + 0x30]
	0x03D623CC LDR X30, [X31 + 0x20]
	0x03D623D0 ADD X31, X31, 0x80
	0x03D623D4 RET
	0x03D623D8 BL 0x1C16F20
	0x03D623DC BL 0x1C16F20
	0x03D623E0 BL 0x1C16F20
	0x03D623E4 BL 0x1C16F20
	0x03D623E8 BL 0x1C16F20
	0x03D623EC BL 0x1C16F20
	0x03D623F0 BL 0x1C16F20
	0x03D623F4 BL 0x1C16F20
	0x03D623F8 BL 0x1C16F20
	0x03D623FC BL 0x1C16F20
	0x03D62400 BL 0x1C16F20
	0x03D62404 BL 0x1C16F20
	0x03D62408 BL 0x1C16F20
	0x03D6240C BL 0x1C16F20
	0x03D62410 BL 0x1C16F20
	0x03D62414 BL 0x1C16F20
	0x03D62418 BL 0x1C16F20
	0x03D6241C MOV X0, X21
	0x03D62420 BL 0x1C16F18
	0x03D62424 BL 0x1C16F20
	0x03D62428 MOV X0, X19
	0x03D6242C BL 0x1C16F18
	0x03D62430 B 0x3D624A0
	0x03D62434 B 0x3D6253C
	0x03D62438 B 0x3D624A0
	0x03D6243C B 0x3D624A0
	0x03D62440 B 0x3D624A0
	0x03D62444 B 0x3D624A0
	0x03D62448 B 0x3D624A0
	0x03D6244C B 0x3D624A0
	0x03D62450 B 0x3D6253C
	0x03D62454 B 0x3D624A0
	0x03D62458 B 0x3D624A0
	0x03D6245C B 0x3D624A0
	0x03D62460 B 0x3D6253C
	0x03D62464 B 0x3D6253C
	0x03D62468 B 0x3D6253C
	0x03D6246C B 0x3D6253C
	0x03D62470 B 0x3D6253C
	0x03D62474 B 0x3D6253C
	0x03D62478 B 0x3D6253C
	0x03D6247C B 0x3D6253C
	0x03D62480 B 0x3D6253C
	0x03D62484 B 0x3D624A0
	0x03D62488 B 0x3D624A0
	0x03D6248C B 0x3D624A0
	0x03D62490 B 0x3D624A0
	0x03D62494 B 0x3D6253C
	0x03D62498 B 0x3D6253C
	0x03D6249C B 0x3D624A0
	0x03D624A0 CMP W1, 0x1
	0x03D624A4 B.NE 0x3D624C0
	0x03D624A8 BL 0x3EB1AD0
	0x03D624AC LDR X19, [X0]
	0x03D624B0 BL 0x3EB1AE0
	0x03D624B4 MOV W22, W31
	0x03D624B8 CBNZ X21, 0x3D622EC
	0x03D624BC B 0x3D62344
	0x03D624C0 STR X0, [X31 + 0x8]
	0x03D624C4 MOV X19, X31
	0x03D624C8 B 0x3D624D0
	0x03D624CC STR X0, [X31 + 0x8]
	0x03D624D0 CBZ X21, 0x3D6252C
	0x03D624D4 LDR X8, [X21]
	0x03D624D8 LDR X1, [X23]
	0x03D624DC LDRH W9, [X8 + 0x12E]
	0x03D624E0 CBZ X9, 0x3D62504
	0x03D624E4 LDR X10, [X8 + 0xB0]
	0x03D624E8 ADD X10, X10, 0x8
	0x03D624EC LDUR X11, [X10 - 0x8]
	0x03D624F0 CMP X11, X1
	0x03D624F4 B.EQ 0x3D62514
	0x03D624F8 SUBS X9, X9, 0x1
	0x03D624FC ADD X10, X10, 0x10
	0x03D62500 B.NE 0x3D624EC
	0x03D62504 MOV X0, X21
	0x03D62508 MOV W2, W31
	0x03D6250C BL 0x1C5C788
	0x03D62510 B 0x3D62520
	0x03D62514 LDRSW X9, [X10]
	0x03D62518 ADD X8, X8, X9, 0x4, LSL
	0x03D6251C ADD X0, X8, 0x138
	0x03D62520 LDP X8, X1, [X0]
	0x03D62524 MOV X0, X21
	0x03D62528 BLR X8
	0x03D6252C CBZ X19, 0x3D625CC
	0x03D62530 MOV X0, X19
	0x03D62534 BL 0x1C16F18
	0x03D62538 B 0x3D6253C
	0x03D6253C CMP W1, 0x1
	0x03D62540 B.NE 0x3D6255C
	0x03D62544 BL 0x3EB1AD0
	0x03D62548 LDR X21, [X0]
	0x03D6254C BL 0x3EB1AE0
	0x03D62550 MOV W22, W31
	0x03D62554 CBNZ X20, 0x3D62010
	0x03D62558 B 0x3D62068
	0x03D6255C STR X0, [X31 + 0x8]
	0x03D62560 MOV X21, X31
	0x03D62564 B 0x3D6256C
	0x03D62568 STR X0, [X31 + 0x8]
	0x03D6256C CBZ X20, 0x3D625C8
	0x03D62570 LDR X8, [X20]
	0x03D62574 LDR X1, [X23]
	0x03D62578 LDRH W9, [X8 + 0x12E]
	0x03D6257C CBZ X9, 0x3D625A0
	0x03D62580 LDR X10, [X8 + 0xB0]
	0x03D62584 ADD X10, X10, 0x8
	0x03D62588 LDUR X11, [X10 - 0x8]
	0x03D6258C CMP X11, X1
	0x03D62590 B.EQ 0x3D625B0
	0x03D62594 SUBS X9, X9, 0x1
	0x03D62598 ADD X10, X10, 0x10
	0x03D6259C B.NE 0x3D62588
	0x03D625A0 MOV X0, X20
	0x03D625A4 MOV W2, W31
	0x03D625A8 BL 0x1C5C788
	0x03D625AC B 0x3D625BC
	0x03D625B0 LDRSW X9, [X10]
	0x03D625B4 ADD X8, X8, X9, 0x4, LSL
	0x03D625B8 ADD X0, X8, 0x138
	0x03D625BC LDP X8, X1, [X0]
	0x03D625C0 MOV X0, X20
	0x03D625C4 BLR X8
	0x03D625C8 CBNZ X21, 0x3D625D4
	0x03D625CC LDR X0, [X31 + 0x8]
	0x03D625D0 BL 0x1D2C690
	0x03D625D4 MOV X0, X21
	0x03D625D8 BL 0x1C16F18
	0x03D625DC BL 0x1990590
	0x03D625E0 SUB X31, X31, 0x40
	0x03D625E4 STP X30, X23, [X31 + 0x10]
	0x03D625E8 STP X22, X21, [X31 + 0x20]
	0x03D625EC STP X20, X19, [X31 + 0x30]
	0x03D625F0 ADRP X23, 0x685000
	0x03D625F4 LDRB W8, [X23 + 0xC9D]
	0x03D625F8 MOV W20, W3
	0x03D625FC MOV W21, W2
	0x03D62600 MOV X22, X1
	0x03D62604 MOV X19, X0
	0x03D62608 TBNZ X8, 0x0, 0x3D6262C
	0x03D6260C ADRP X0, 0x3BA000
	0x03D62610 LDR X0, [X0 + 0x108]
	0x03D62614 BL 0x1C16CF4
	0x03D62618 ADRP X0, 0x404000
	0x03D6261C LDR X0, [X0 + 0x760]
	0x03D62620 BL 0x1C16CF4
	0x03D62624 MOVZ W8, 0x1
	0x03D62628 STRB W8, [X23 + 0xC9D]
	0x03D6262C STR X31, [X31 + 0x8]
	0x03D62630 CBZ X22, 0x3D62758
	0x03D62634 CMP W21, W20
	0x03D62638 B.EQ 0x3D62744
	0x03D6263C LDRB W8, [X22 + 0x40]
	0x03D62640 CBZ W8, 0x3D62744
	0x03D62644 LDR X0, [X19 + 0x400]
	0x03D62648 CBZ X0, 0x3D62758
	0x03D6264C ADRP X8, 0x3BA000
	0x03D62650 LDR X8, [X8 + 0x108]
	0x03D62654 ADD X2, X31, 0x8
	0x03D62658 MOV X1, X22
	0x03D6265C LDR X3, [X8]
	0x03D62660 BL 0x2AA6B2C
	0x03D62664 TBZ X0, 0x0, 0x3D62734
	0x03D62668 MOV X0, X22
	0x03D6266C MOV X1, X31
	0x03D62670 BL 0x3D6F82C
	0x03D62674 LDR X8, [X19 + 0x420]
	0x03D62678 CBZ X8, 0x3D62758
	0x03D6267C MOV W22, W0
	0x03D62680 MOV X0, X8
	0x03D62684 MOV X1, X31
	0x03D62688 BL 0x3D6F8DC
	0x03D6268C ADRP X8, 0x404000
	0x03D62690 LDR X8, [X8 + 0x760]
	0x03D62694 LDR X1, [X8]
	0x03D62698 BL 0x21BD4C4
	0x03D6269C SUB W8, W0, 0x1
	0x03D626A0 CMP W22, W8
	0x03D626A4 B.NE 0x3D626C4
	0x03D626A8 LDR X8, [X31 + 0x8]
	0x03D626AC CBZ X8, 0x3D62758
	0x03D626B0 LDR X0, [X8 + 0x10]
	0x03D626B4 CBZ X0, 0x3D62758
	0x03D626B8 MOV X1, X31
	0x03D626BC BL 0x3DF6758
	0x03D626C0 B 0x3D62734
	0x03D626C4 LDR X8, [X31 + 0x8]
	0x03D626C8 CMP W20, W21
	0x03D626CC CINC W20, W22, GT
	0x03D626D0 CBZ X8, 0x3D62758
	0x03D626D4 LDR X0, [X19 + 0x410]
	0x03D626D8 CBZ X0, 0x3D62758
	0x03D626DC LDR X21, [X8 + 0x10]
	0x03D626E0 MOV W1, W20
	0x03D626E4 MOV X2, X31
	0x03D626E8 BL 0x3DF6294
	0x03D626EC CBZ X21, 0x3D62758
	0x03D626F0 MOV X1, X0
	0x03D626F4 MOV X0, X21
	0x03D626F8 MOV X2, X31
	0x03D626FC BL 0x3DF6820
	0x03D62700 LDR X8, [X31 + 0x8]
	0x03D62704 CBZ X8, 0x3D62758
	0x03D62708 LDR X0, [X19 + 0x418]
	0x03D6270C CBZ X0, 0x3D62758
	0x03D62710 LDR X21, [X8 + 0x18]
	0x03D62714 MOV W1, W20
	0x03D62718 MOV X2, X31
	0x03D6271C BL 0x3DF6294
	0x03D62720 CBZ X21, 0x3D62758
	0x03D62724 MOV X1, X0
	0x03D62728 MOV X0, X21
	0x03D6272C MOV X2, X31
	0x03D62730 BL 0x3DF6820
	0x03D62734 MOV X0, X19
	0x03D62738 BL 0x3D60A60
	0x03D6273C MOV X0, X19
	0x03D62740 BL 0x3D609F0
	0x03D62744 LDP X20, X19, [X31 + 0x30]
	0x03D62748 LDP X22, X21, [X31 + 0x20]
	0x03D6274C LDP X30, X23, [X31 + 0x10]
	0x03D62750 ADD X31, X31, 0x40
	0x03D62754 RET
	0x03D62758 BL 0x1C16F20
	0x03D6275C B 0x3D609F0
	0x03D62760 SUB X31, X31, 0x80
	0x03D62764 STP X29, X30, [X31 + 0x20]
	0x03D62768 STP X28, X27, [X31 + 0x30]
	0x03D6276C STP X26, X25, [X31 + 0x40]
	0x03D62770 STP X24, X23, [X31 + 0x50]
	0x03D62774 STP X22, X21, [X31 + 0x60]
	0x03D62778 STP X20, X19, [X31 + 0x70]
	0x03D6277C ADRP X19, 0x685000
	0x03D62780 LDRB W8, [X19 + 0xC9E]
	0x03D62784 MOV X25, X1
	0x03D62788 MOV X20, X0
	0x03D6278C TBNZ X8, 0x0, 0x3D6284C
	0x03D62790 ADRP X0, 0x404000
	0x03D62794 LDR X0, [X0 + 0x768]
	0x03D62798 BL 0x1C16CF4
	0x03D6279C ADRP X0, 0x3BA000
	0x03D627A0 LDR X0, [X0 + 0x108]
	0x03D627A4 BL 0x1C16CF4
	0x03D627A8 ADRP X0, 0x404000
	0x03D627AC LDR X0, [X0 + 0x760]
	0x03D627B0 BL 0x1C16CF4
	0x03D627B4 ADRP X0, 0x404000
	0x03D627B8 LDR X0, [X0 + 0x770]
	0x03D627BC BL 0x1C16CF4
	0x03D627C0 ADRP X0, 0x391000
	0x03D627C4 LDR X0, [X0 + 0xE00]
	0x03D627C8 BL 0x1C16CF4
	0x03D627CC ADRP X0, 0x3BA000
	0x03D627D0 LDR X0, [X0 + 0x110]
	0x03D627D4 BL 0x1C16CF4
	0x03D627D8 ADRP X0, 0x3BA000
	0x03D627DC LDR X0, [X0 + 0x118]
	0x03D627E0 BL 0x1C16CF4
	0x03D627E4 ADRP X0, 0x391000
	0x03D627E8 LDR X0, [X0 + 0xE18]
	0x03D627EC BL 0x1C16CF4
	0x03D627F0 ADRP X0, 0x404000
	0x03D627F4 LDR X0, [X0 + 0x778]
	0x03D627F8 BL 0x1C16CF4
	0x03D627FC ADRP X0, 0x404000
	0x03D62800 LDR X0, [X0 + 0x780]
	0x03D62804 BL 0x1C16CF4
	0x03D62808 ADRP X0, 0x404000
	0x03D6280C LDR X0, [X0 + 0x788]
	0x03D62810 BL 0x1C16CF4
	0x03D62814 ADRP X0, 0x404000
	0x03D62818 LDR X0, [X0 + 0x790]
	0x03D6281C BL 0x1C16CF4
	0x03D62820 ADRP X0, 0x404000
	0x03D62824 LDR X0, [X0 + 0x798]
	0x03D62828 BL 0x1C16CF4
	0x03D6282C ADRP X0, 0x404000
	0x03D62830 LDR X0, [X0 + 0x7A0]
	0x03D62834 BL 0x1C16CF4
	0x03D62838 ADRP X0, 0x404000
	0x03D6283C LDR X0, [X0 + 0x7A8]
	0x03D62840 BL 0x1C16CF4
	0x03D62844 MOVZ W8, 0x1
	0x03D62848 STRB W8, [X19 + 0xC9E]
	0x03D6284C STR X31, [X31 + 0x18]
	0x03D62850 STR W31, [X31 + 0x14]
	0x03D62854 LDR X0, [X20 + 0x420]
	0x03D62858 CBZ X0, 0x3D62E20
	0x03D6285C ADRP X19, 0x404000
	0x03D62860 LDR X19, [X19 + 0x760]
	0x03D62864 MOV X1, X31
	0x03D62868 BL 0x3D6F8DC
	0x03D6286C LDR X1, [X19]
	0x03D62870 BL 0x21BD4C4
	0x03D62874 LDR X8, [X20 + 0x420]
	0x03D62878 CMP W0, 0x0
	0x03D6287C CSET W24, GT
	0x03D62880 CBZ X8, 0x3D62E20
	0x03D62884 MOV X0, X8
	0x03D62888 MOV X1, X31
	0x03D6288C BL 0x3D6F8DC
	0x03D62890 CBZ X0, 0x3D62E20
	0x03D62894 ADRP X10, 0x3BA000
	0x03D62898 LDR X8, [X0]
	0x03D6289C LDR X10, [X10 + 0x110]
	0x03D628A0 MOV X21, X0
	0x03D628A4 LDRH W9, [X8 + 0x12E]
	0x03D628A8 LDR X1, [X10]
	0x03D628AC CBZ X9, 0x3D628D0
	0x03D628B0 LDR X10, [X8 + 0xB0]
	0x03D628B4 ADD X10, X10, 0x8
	0x03D628B8 LDUR X11, [X10 - 0x8]
	0x03D628BC CMP X11, X1
	0x03D628C0 B.EQ 0x3D628E0
	0x03D628C4 SUBS X9, X9, 0x1
	0x03D628C8 ADD X10, X10, 0x10
	0x03D628CC B.NE 0x3D628B8
	0x03D628D0 MOV X0, X21
	0x03D628D4 MOV W2, W31
	0x03D628D8 BL 0x1C5C788
	0x03D628DC B 0x3D628EC
	0x03D628E0 LDRSW X9, [X10]
	0x03D628E4 ADD X8, X8, X9, 0x4, LSL
	0x03D628E8 ADD X0, X8, 0x138
	0x03D628EC LDP X8, X1, [X0]
	0x03D628F0 ADRP X27, 0x391000
	0x03D628F4 ADRP X29, 0x3BA000
	0x03D628F8 ADRP X26, 0x391000
	0x03D628FC LDR X27, [X27 + 0xE18]
	0x03D62900 LDR X29, [X29 + 0x118]
	0x03D62904 LDR X26, [X26 + 0xE00]
	0x03D62908 MOV X0, X21
	0x03D6290C BLR X8
	0x03D62910 MOV X22, X0
	0x03D62914 CBZ X0, 0x3D62E2C
	0x03D62918 ADRP X19, 0x3BA000
	0x03D6291C LDR X19, [X19 + 0x108]
	0x03D62920 MOV X21, X31
	0x03D62924 LDR X8, [X22]
	0x03D62928 LDR X1, [X27]
	0x03D6292C LDRH W9, [X8 + 0x12E]
	0x03D62930 CBZ X9, 0x3D62954
	0x03D62934 LDR X10, [X8 + 0xB0]
	0x03D62938 ADD X10, X10, 0x8
	0x03D6293C LDUR X11, [X10 - 0x8]
	0x03D62940 CMP X11, X1
	0x03D62944 B.EQ 0x3D62964
	0x03D62948 SUBS X9, X9, 0x1
	0x03D6294C ADD X10, X10, 0x10
	0x03D62950 B.NE 0x3D6293C
	0x03D62954 MOV X0, X22
	0x03D62958 MOV W2, W31
	0x03D6295C BL 0x1C5C788
	0x03D62960 B 0x3D62970
	0x03D62964 LDRSW X9, [X10]
	0x03D62968 ADD X8, X8, X9, 0x4, LSL
	0x03D6296C ADD X0, X8, 0x138
	0x03D62970 LDP X8, X1, [X0]
	0x03D62974 MOV X0, X22
	0x03D62978 BLR X8
	0x03D6297C TBZ X0, 0x0, 0x3D62A6C
	0x03D62980 LDR X8, [X22]
	0x03D62984 LDR X1, [X29]
	0x03D62988 LDRH W9, [X8 + 0x12E]
	0x03D6298C CBZ X9, 0x3D629B0
	0x03D62990 LDR X10, [X8 + 0xB0]
	0x03D62994 ADD X10, X10, 0x8
	0x03D62998 LDUR X11, [X10 - 0x8]
	0x03D6299C CMP X11, X1
	0x03D629A0 B.EQ 0x3D629C0
	0x03D629A4 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x686000
	011 Move X24, 0x3BA000
	012 Move W8, [X21+3253]
	013 Move X24, [X24+2200]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0x405000
	021 Move X0, [X0+1616]
	022 Call 0x1C17CF4
	023 Move X0, 0x405000
	024 Move X0, [X0+1624]
	025 Call 0x1C17CF4
	026 Move X0, 0x3BB000
	027 Move X0, [X0+296]
	028 Call 0x1C17CF4
	029 Move X0, 0x405000
	030 Move X0, [X0+1800]
	031 Call 0x1C17CF4
	032 Move X0, 0x405000
	033 Move X0, [X0+1808]
	034 Call 0x1C17CF4
	035 Move X0, 0x405000
	036 Move X0, [X0+1816]
	037 Call 0x1C17CF4
	038 Move X0, 0x405000
	039 Move X0, [X0+1232]
	040 Call 0x1C17CF4
	041 Move X0, 0x3BA000
	042 Move X0, [X0+2200]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+3253], W8
	046 Move X0, [X24]
	047 Move X22, 0x405000
	048 Move X21, 0x405000
	049 Move W8, [X0+224]
	050 Move X22, [X22+1624]
	051 Move X21, [X21+1808]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X1, X31
	057 Call VisualElement..ctor, X0
	058 Move [X19+1016], X20
	059 Move X0, [X22]
	060 Call 0x1C17F10
	061 Move X2, [X21]
	062 Move X1, X19
	063 Move X3, X31
	064 Move X21, X0
	065 Call Action`2<Object, Int32Enum>..ctor, X0, X1, X2
	066 Compare X20, 0
	067 JumpIfEqual {505}
	068 Move X22, 0x405000
	069 Move X25, 0x405000
	070 Move X23, 0x405000
	071 Move X22, [X22+1616]
	072 Move X25, [X25+1816]
	073 Move X23, [X23+1232]
	074 Move X0, X20
	075 Move X1, X21
	076 Move X2, X31
	077 Call Column.add_changed, X0, X1
	078 Move X0, [X22]
	079 Call 0x1C17F10
	080 Move X2, [X25]
	081 Move X1, X19
	082 Move X3, X31
	083 Move X21, X0
	084 Call Action`1<Object>..ctor, X0, X1, X2
	085 Move X0, X20
	086 Move X1, X21
	087 Move X2, X31
	088 Call Column.add_resized, X0, X1
	089 Move X0, [X23]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move X0, [X23]
	095 Move X8, [X0+184]
	096 Move X0, X19
	097 Move X2, X31
	098 Move X1, [X8]
	099 Call VisualElement.AddToClassList, X0, X1
	100 Move X0, X19
	101 Move X1, X31
	102 Call VisualElement.get_style, X0
	103 Move X20, X0
	104 Move S0, W31
	105 Move X0, X31
	106 Call StyleLength.op_Implicit, V0
	107 Compare X20, 0
	108 JumpIfEqual {505}
	109 Move X25, 0x3BB000
	110 Move X9, [X20]
	111 Move X25, [X25+296]
	112 Move X8, X1
	113 Move X21, X0
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Move X1, [X25]
	116 And X22, X8, 0
	117 Compare X10, 0
	118 JumpIfEqual {125}
	119 Move X8, [X9+176]
	120 Add X8, X8, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X10, X10, 1
	124 Add X8, X8, 16
	125 Move W2, 27
	126 Move X0, X20
	127 Call 0x1C5D788
	128 Move W8, [X8]
	129 Add W8, W8, 27
	130 Add X8, X9, W8
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X3, [X0+8]
	134 Move X0, X20
	135 Move X1, X21
	136 Move X2, X22
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X0, X19
	139 Move X1, X31
	140 Call VisualElement.get_style, X0
	141 Move X20, X0
	142 Move S0, W31
	143 Move X0, X31
	144 Call StyleLength.op_Implicit, V0
	145 Compare X20, 0
	146 JumpIfEqual {505}
	147 Move X9, [X20]
	148 Move X8, X1
	149 Move X1, [X25]
	150 Move X21, X0
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 And X22, X8, 0
	153 Compare X10, 0
	154 JumpIfEqual {161}
	155 Move X8, [X9+176]
	156 Add X8, X8, 8
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Subtract X10, X10, 1
	160 Add X8, X8, 16
	161 Move W2, 29
	162 Move X0, X20
	163 Call 0x1C5D788
	164 Move W8, [X8]
	165 Add W8, W8, 29
	166 Add X8, X9, W8
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X3, [X0+8]
	170 Move X0, X20
	171 Move X1, X21
	172 Move X2, X22
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move X0, X19
	175 Move X1, X31
	176 Call VisualElement.get_style, X0
	177 Move X20, X0
	178 Move S0, W31
	179 Move X0, X31
	180 Call StyleLength.op_Implicit, V0
	181 Compare X20, 0
	182 JumpIfEqual {505}
	183 Move X9, [X20]
	184 Move X8, X1
	185 Move X1, [X25]
	186 Move X21, X0
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 And X22, X8, 0
	189 Compare X10, 0
	190 JumpIfEqual {197}
	191 Move X8, [X9+176]
	192 Add X8, X8, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X10, X10, 1
	196 Add X8, X8, 16
	197 Move W2, 28
	198 Move X0, X20
	199 Call 0x1C5D788
	200 Move W8, [X8]
	201 Add W8, W8, 28
	202 Add X8, X9, W8
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X3, [X0+8]
	206 Move X0, X20
	207 Move X1, X21
	208 Move X2, X22
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Move X0, X19
	211 Move X1, X31
	212 Call VisualElement.get_style, X0
	213 Move X20, X0
	214 Move S0, W31
	215 Move X0, X31
	216 Call StyleLength.op_Implicit, V0
	217 Compare X20, 0
	218 JumpIfEqual {505}
	219 Move X9, [X20]
	220 Move X8, X1
	221 Move X1, [X25]
	222 Move X21, X0
	223 NotImplemented "Instruction LDRH not yet implemented."
	224 And X22, X8, 0
	225 Compare X10, 0
	226 JumpIfEqual {233}
	227 Move X8, [X9+176]
	228 Add X8, X8, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X10, X10, 1
	232 Add X8, X8, 16
	233 Move W2, 26
	234 Move X0, X20
	235 Call 0x1C5D788
	236 Move W8, [X8]
	237 Add W8, W8, 26
	238 Add X8, X9, W8
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X3, [X0+8]
	242 Move X0, X20
	243 Move X1, X21
	244 Move X2, X22
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Move X0, X19
	247 Move X1, X31
	248 Call VisualElement.get_style, X0
	249 Move X20, X0
	250 Move S0, W31
	251 Move X0, X31
	252 Call StyleLength.op_Implicit, V0
	253 Compare X20, 0
	254 JumpIfEqual {505}
	255 Move X9, [X20]
	256 Move X8, X1
	257 Move X1, [X25]
	258 Move X21, X0
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 And X22, X8, 0
	261 Compare X10, 0
	262 JumpIfEqual {269}
	263 Move X8, [X9+176]
	264 Add X8, X8, 8
	265 NotImplemented "Instruction LDUR not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Subtract X10, X10, 1
	268 Add X8, X8, 16
	269 Move W2, 36
	270 Move X0, X20
	271 Call 0x1C5D788
	272 Move W8, [X8]
	273 Add W8, W8, 36
	274 Add X8, X9, W8
	275 Add X0, X8, 312
	276 Move X8, [X0]
	277 Move X3, [X0+8]
	278 Move X0, X20
	279 Move X1, X21
	280 Move X2, X22
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move X0, X19
	283 Move X1, X31
	284 Call VisualElement.get_style, X0
	285 Move X20, X0
	286 Move S0, W31
	287 Move X0, X31
	288 Call StyleLength.op_Implicit, V0
	289 Compare X20, 0
	290 JumpIfEqual {505}
	291 Move X9, [X20]
	292 Move X8, X1
	293 Move X1, [X25]
	294 Move X21, X0
	295 NotImplemented "Instruction LDRH not yet implemented."
	296 And X22, X8, 0
	297 Compare X10, 0
	298 JumpIfEqual {305}
	299 Move X8, [X9+176]
	300 Add X8, X8, 8
	301 NotImplemented "Instruction LDUR not yet implemented."
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Subtract X10, X10, 1
	304 Add X8, X8, 16
	305 Move W2, 39
	306 Move X0, X20
	307 Call 0x1C5D788
	308 Move W8, [X8]
	309 Add W8, W8, 39
	310 Add X8, X9, W8
	311 Add X0, X8, 312
	312 Move X8, [X0]
	313 Move X3, [X0+8]
	314 Move X0, X20
	315 Move X1, X21
	316 Move X2, X22
	317 NotImplemented "Instruction BLR not yet implemented."
	318 Move X0, X19
	319 Move X1, X31
	320 Call VisualElement.get_style, X0
	321 Move X20, X0
	322 Move S0, W31
	323 Move X0, X31
	324 Call StyleLength.op_Implicit, V0
	325 Compare X20, 0
	326 JumpIfEqual {505}
	327 Move X9, [X20]
	328 Move X8, X1
	329 Move X1, [X25]
	330 Move X21, X0
	331 NotImplemented "Instruction LDRH not yet implemented."
	332 And X22, X8, 0
	333 Compare X10, 0
	334 JumpIfEqual {341}
	335 Move X8, [X9+176]
	336 Add X8, X8, 8
	337 NotImplemented "Instruction LDUR not yet implemented."
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Subtract X10, X10, 1
	340 Add X8, X8, 16
	341 Move W2, 37
	342 Move X0, X20
	343 Call 0x1C5D788
	344 Move W8, [X8]
	345 Add W8, W8, 37
	346 Add X8, X9, W8
	347 Add X0, X8, 312
	348 Move X8, [X0]
	349 Move X3, [X0+8]
	350 Move X0, X20
	351 Move X1, X21
	352 Move X2, X22
	353 NotImplemented "Instruction BLR not yet implemented."
	354 Move X0, X19
	355 Move X1, X31
	356 Call VisualElement.get_style, X0
	357 Move X20, X0
	358 Move S0, W31
	359 Move X0, X31
	360 Call StyleLength.op_Implicit, V0
	361 Compare X20, 0
	362 JumpIfEqual {505}
	363 Move X9, [X20]
	364 Move X26, 0x405000
	365 Move X8, X1
	366 Move X1, [X25]
	367 NotImplemented "Instruction LDRH not yet implemented."
	368 Move X26, [X26+1800]
	369 Move X21, X0
	370 And X22, X8, 0
	371 Compare X10, 0
	372 JumpIfEqual {379}
	373 Move X8, [X9+176]
	374 Add X8, X8, 8
	375 NotImplemented "Instruction LDUR not yet implemented."
	376 NotImplemented "Instruction CMP not yet implemented."
	377 Subtract X10, X10, 1
	378 Add X8, X8, 16
	379 Move W2, 35
	380 Move X0, X20
	381 Call 0x1C5D788
	382 Move W8, [X8]
	383 Add W8, W8, 35
	384 Add X8, X9, W8
	385 Add X0, X8, 312
	386 Move X8, [X0]
	387 Move X3, [X0+8]
	388 Move X0, X20
	389 Move X1, X21
	390 Move X2, X22
	391 NotImplemented "Instruction BLR not yet implemented."
	392 Move X0, [X26]
	393 Call 0x1C17F10
	394 Move X20, X0
	395 Call MultiColumnHeaderColumnSortIndicator..ctor, X0
	396 Move X0, X19
	397 Move X1, X20
	398 Move X2, X31
	399 Move [X19+984], X20
	400 Call VisualElement.Add, X0, X1
	401 Move X0, [X24]
	402 Call 0x1C17F10
	403 Move X1, X31
	404 Move X20, X0
	405 Call VisualElement..ctor, X0
	406 Move [X19+968], X20
	407 Compare X20, 0
	408 JumpIfEqual {505}
	409 Move X0, X20
	410 Move X1, X31
	411 Call VisualElement.get_style, X0
	412 Move X20, X0
	413 Move S0, 1
	414 Move X0, X31
	415 Call StyleFloat.op_Implicit, V0
	416 Compare X20, 0
	417 JumpIfEqual {505}
	418 Move X8, [X20]
	419 Move X1, [X25]
	420 Move X21, X0
	421 NotImplemented "Instruction LDRH not yet implemented."
	422 Compare X9, 0
	423 JumpIfEqual {430}
	424 Move X10, [X8+176]
	425 Add X10, X10, 8
	426 NotImplemented "Instruction LDUR not yet implemented."
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Subtract X9, X9, 1
	429 Add X10, X10, 16
	430 Move W2, 21
	431 Move X0, X20
	432 Call 0x1C5D788
	433 Move W9, [X10]
	434 Add W9, W9, 21
	435 Add X8, X8, W9
	436 Add X0, X8, 312
	437 Move X8, [X0]
	438 Move X2, [X0+8]
	439 Move X0, X20
	440 Move X1, X21
	441 NotImplemented "Instruction BLR not yet implemented."
	442 Move X0, [X19+968]
	443 Compare X0, 0
	444 JumpIfEqual {505}
	445 Move X1, X31
	446 Call VisualElement.get_style, X0
	447 Move X20, X0
	448 Move S0, 1
	449 Move X0, X31
	450 Call StyleFloat.op_Implicit, V0
	451 Compare X20, 0
	452 JumpIfEqual {505}
	453 Move X8, [X20]
	454 Move X1, [X25]
	455 Move X21, X0
	456 NotImplemented "Instruction LDRH not yet implemented."
	457 Compare X9, 0
	458 JumpIfEqual {465}
	459 Move X10, [X8+176]
	460 Add X10, X10, 8
	461 NotImplemented "Instruction LDUR not yet implemented."
	462 NotImplemented "Instruction CMP not yet implemented."
	463 Subtract X9, X9, 1
	464 Add X10, X10, 16
	465 Move W2, 22
	466 Move X0, X20
	467 Call 0x1C5D788
	468 Move W9, [X10]
	469 Add W9, W9, 22
	470 Add X8, X8, W9
	471 Add X0, X8, 312
	472 Move X8, [X0]
	473 Move X2, [X0+8]
	474 Move X0, X20
	475 Move X1, X21
	476 NotImplemented "Instruction BLR not yet implemented."
	477 Move X0, [X19+968]
	478 Compare X0, 0
	479 JumpIfEqual {505}
	480 Move X8, [X23]
	481 Move X2, X31
	482 Move X8, [X8+184]
	483 Move X1, [X8+40]
	484 Call VisualElement.AddToClassList, X0, X1
	485 Move X1, [X19+968]
	486 Move X0, X19
	487 Move X2, X31
	488 Call VisualElement.Add, X0, X1
	489 Move X0, X19
	490 Call MultiColumnHeaderColumn.UpdateHeaderTemplate, X0
	491 Move X0, X19
	492 Call MultiColumnHeaderColumn.UpdateGeometryFromColumn, X0
	493 Move X0, X19
	494 Move X20, [X31+64]
	495 Move X19, [X31+72]
	496 Move X22, [X31+48]
	497 Move X21, [X31+56]
	498 Move X24, [X31+32]
	499 Move X23, [X31+40]
	500 Move X26, [X31+16]
	501 Move X25, [X31+24]
	502 Move X30, [X31+80]
	503 Call MultiColumnHeaderColumn.InitManipulators, X0
	504 Return 
	505 Call 0x1C17F20

Method: System.Void InitManipulators()

Disassembly:
	0x03D66A6C MOV X0, X20
	0x03D66A70 MOV X1, X31
	0x03D66A74 BL 0x3E0AF0C
	0x03D66A78 CBZ X0, 0x3D66AFC
	0x03D66A7C ADRP X10, 0x3B7000
	0x03D66A80 LDR X8, [X0]
	0x03D66A84 LDR X10, [X10 + 0x630]
	0x03D66A88 MOV X20, X0
	0x03D66A8C LDRH W9, [X8 + 0x12E]
	0x03D66A90 LDR X1, [X10]
	0x03D66A94 CBZ X9, 0x3D66AB8
	0x03D66A98 LDR X10, [X8 + 0xB0]
	0x03D66A9C ADD X10, X10, 0x8
	0x03D66AA0 LDUR X11, [X10 - 0x8]
	0x03D66AA4 CMP X11, X1
	0x03D66AA8 B.EQ 0x3D66AC8
	0x03D66AAC SUBS X9, X9, 0x1
	0x03D66AB0 ADD X10, X10, 0x10
	0x03D66AB4 B.NE 0x3D66AA0
	0x03D66AB8 MOV X0, X20
	0x03D66ABC MOV W2, W31
	0x03D66AC0 BL 0x1C5C788
	0x03D66AC4 B 0x3D66AD4
	0x03D66AC8 LDRSW X9, [X10]
	0x03D66ACC ADD X8, X8, X9, 0x4, LSL
	0x03D66AD0 ADD X0, X8, 0x138
	0x03D66AD4 LDP X8, X1, [X0]
	0x03D66AD8 MOV X0, X20
	0x03D66ADC BLR X8
	0x03D66AE0 CBZ X19, 0x3D66AFC
	0x03D66AE4 AND W8, W0, 0x1
	0x03D66AE8 STRB W8, [X19 + 0x26]
	0x03D66AEC LDP X20, X19, [X31 + 0x20]
	0x03D66AF0 LDP X22, X21, [X31 + 0x10]
	0x03D66AF4 LDP X30, X23, [X31], #0x30
	0x03D66AF8 RET
	0x03D66AFC BL 0x1C16F20
	0x03D66B00 STP X30, X21, [X31 - 0x20]!
	0x03D66B04 STP X20, X19, [X31 + 0x10]
	0x03D66B08 MOV X20, X1
	0x03D66B0C MOV X1, X31
	0x03D66B10 MOV X19, X2
	0x03D66B14 MOV X21, X0
	0x03D66B18 BL 0x33BDD8C
	0x03D66B1C STP X20, X19, [X21 + 0x10]
	0x03D66B20 LDP X20, X19, [X31 + 0x10]
	0x03D66B24 LDP X30, X21, [X31], #0x20
	0x03D66B28 RET
	0x03D66B2C STP X30, X21, [X31 - 0x20]!
	0x03D66B30 STP X20, X19, [X31 + 0x10]
	0x03D66B34 ADRP X21, 0x681000
	0x03D66B38 LDRB W8, [X21 + 0xCC5]
	0x03D66B3C MOV X19, X1
	0x03D66B40 MOV X20, X0
	0x03D66B44 TBNZ X8, 0x0, 0x3D66BD4
	0x03D66B48 ADRP X0, 0x3FD000
	0x03D66B4C LDR X0, [X0 + 0x110]
	0x03D66B50 BL 0x1C16CF4
	0x03D66B54 ADRP X0, 0x400000
	0x03D66B58 LDR X0, [X0 + 0x960]
	0x03D66B5C BL 0x1C16CF4
	0x03D66B60 ADRP X0, 0x400000
	0x03D66B64 LDR X0, [X0 + 0x968]
	0x03D66B68 BL 0x1C16CF4
	0x03D66B6C ADRP X0, 0x3FD000
	0x03D66B70 LDR X0, [X0 + 0xE8]
	0x03D66B74 BL 0x1C16CF4
	0x03D66B78 ADRP X0, 0x400000
	0x03D66B7C LDR X0, [X0 + 0x970]
	0x03D66B80 BL 0x1C16CF4
	0x03D66B84 ADRP X0, 0x400000
	0x03D66B88 LDR X0, [X0 + 0x978]
	0x03D66B8C BL 0x1C16CF4
	0x03D66B90 ADRP X0, 0x400000
	0x03D66B94 LDR X0, [X0 + 0x980]
	0x03D66B98 BL 0x1C16CF4
	0x03D66B9C ADRP X0, 0x400000
	0x03D66BA0 LDR X0, [X0 + 0x988]
	0x03D66BA4 BL 0x1C16CF4
	0x03D66BA8 ADRP X0, 0x3FE000
	0x03D66BAC LDR X0, [X0 + 0xC8]
	0x03D66BB0 BL 0x1C16CF4
	0x03D66BB4 ADRP X0, 0x400000
	0x03D66BB8 LDR X0, [X0 + 0x990]
	0x03D66BBC BL 0x1C16CF4
	0x03D66BC0 ADRP X0, 0x400000
	0x03D66BC4 LDR X0, [X0 + 0x998]
	0x03D66BC8 BL 0x1C16CF4
	0x03D66BCC MOVZ W8, 0x1
	0x03D66BD0 STRB W8, [X21 + 0xCC5]
	0x03D66BD4 CBZ X19, 0x3D66D40
	0x03D66BD8 ADRP X9, 0x400000
	0x03D66BDC LDR X9, [X9 + 0x968]
	0x03D66BE0 LDR X8, [X19]
	0x03D66BE4 LDR X10, [X9]
	0x03D66BE8 LDRB W9, [X8 + 0x130]
	0x03D66BEC LDRB W11, [X10 + 0x130]
	0x03D66BF0 CMP W9, W11
	0x03D66BF4 B.CC 0x3D66C0C
	0x03D66BF8 LDR X12, [X8 + 0xC8]
	0x03D66BFC ADD X11, X12, X11, 0x3, LSL
	0x03D66C00 LDUR X11, [X11 - 0x8]
	0x03D66C04 CMP X11, X10
	0x03D66C08 B.EQ 0x3D66D4C
	0x03D66C0C ADRP X10, 0x3FD000
	0x03D66C10 LDR X10, [X10 + 0x110]
	0x03D66C14 LDR X10, [X10]
	0x03D66C18 LDRB W11, [X10 + 0x130]
	0x03D66C1C CMP W9, W11
	0x03D66C20 B.CC 0x3D66C38
	0x03D66C24 LDR X12, [X8 + 0xC8]
	0x03D66C28 ADD X11, X12, X11, 0x3, LSL
	0x03D66C2C LDUR X11, [X11 - 0x8]
	0x03D66C30 CMP X11, X10
	0x03D66C34 B.EQ 0x3D66D5C
	0x03D66C38 ADRP X10, 0x3FD000
	0x03D66C3C LDR X10, [X10 + 0xE8]
	0x03D66C40 LDR X10, [X10]
	0x03D66C44 LDRB W11, [X10 + 0x130]
	0x03D66C48 CMP W9, W11
	0x03D66C4C B.CC 0x3D66C64
	0x03D66C50 LDR X12, [X8 + 0xC8]
	0x03D66C54 ADD X11, X12, X11, 0x3, LSL
	0x03D66C58 LDUR X11, [X11 - 0x8]
	0x03D66C5C CMP X11, X10
	0x03D66C60 B.EQ 0x3D66D68
	0x03D66C64 ADRP X10, 0x400000
	0x03D66C68 LDR X10, [X10 + 0x998]
	0x03D66C6C LDR X10, [X10]
	0x03D66C70 LDRB W11, [X10 + 0x130]
	0x03D66C74 CMP W9, W11
	0x03D66C78 B.CC 0x3D66C90
	0x03D66C7C LDR X12, [X8 + 0xC8]
	0x03D66C80 ADD X11, X12, X11, 0x3, LSL
	0x03D66C84 LDUR X11, [X11 - 0x8]
	0x03D66C88 CMP X11, X10
	0x03D66C8C B.EQ 0x3D66D7C
	0x03D66C90 ADRP X10, 0x400000
	0x03D66C94 LDR X10, [X10 + 0x960]
	0x03D66C98 LDR X10, [X10]
	0x03D66C9C LDRB W11, [X10 + 0x130]
	0x03D66CA0 CMP W9, W11
	0x03D66CA4 B.CC 0x3D66CBC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x682000
	008 Move X23, 0x401000
	009 Move X22, 0x401000
	010 Move X21, 0x401000
	011 Move W8, [X20+3254]
	012 Move X23, [X23+2208]
	013 Move X22, [X22+1272]
	014 Move X21, [X21+2216]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x401000
	021 Move X0, [X0+1272]
	022 Call 0x1C17CF4
	023 Move X0, 0x38E000
	024 Move X0, [X0+2416]
	025 Call 0x1C17CF4
	026 Move X0, 0x3FD000
	027 Move X0, [X0+3440]
	028 Call 0x1C17CF4
	029 Move X0, 0x401000
	030 Move X0, [X0+2208]
	031 Call 0x1C17CF4
	032 Move X0, 0x3FD000
	033 Move X0, [X0+2384]
	034 Call 0x1C17CF4
	035 Move X0, 0x401000
	036 Move X0, [X0+2216]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+3254], W8
	040 Move X0, [X23]
	041 Call 0x1C17F10
	042 Move X20, X0
	043 Call ColumnMover..ctor, X0
	044 Move X0, X19
	045 Move X1, X20
	046 Move X2, X31
	047 Move [X19+1008], X20
	048 Call VisualElementExtensions.AddManipulator, X0, X1
	049 Move X0, [X22]
	050 Move X20, [X19+1008]
	051 Call 0x1C17F10
	052 Move X2, [X21]
	053 Move X1, X19
	054 Move X3, X31
	055 Move X21, X0
	056 Call Action`1<Object>..ctor, X0, X1, X2
	057 Compare X20, 0
	058 JumpIfEqual {161}
	059 Move X22, 0x3FD000
	060 Move X22, [X22+3440]
	061 Move X0, X20
	062 Move X1, X21
	063 Call ColumnMover.add_movingChanged, X0, X1
	064 Move X0, [X22]
	065 Call 0x1C17F10
	066 Move X1, X31
	067 Move X2, X31
	068 Move X20, X0
	069 Call Clickable..ctor, X0, X1
	070 Move X0, X19
	071 Move X1, X20
	072 Move X2, X31
	073 Move [X19+1000], X20
	074 Call VisualElementExtensions.AddManipulator, X0, X1
	075 Move X8, [X19+1000]
	076 Compare X8, 0
	077 JumpIfEqual {161}
	078 Move X0, [X8+24]
	079 Compare X0, 0
	080 JumpIfEqual {161}
	081 Move X20, 0x3FD000
	082 Move X20, [X20+2384]
	083 Move W9, [X0+28]
	084 Move X8, [X0+16]
	085 Move X10, [X20]
	086 Add W9, W9, 1
	087 Move [X0+28], W9
	088 Compare X8, 0
	089 JumpIfEqual {161}
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Move W11, [X8+24]
	092 Move X21, 0x38E000
	093 Move X21, [X21+2416]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W11, 12
	096 Add W10, W9, 1
	097 Move X12, 1
	098 NotImplemented "Instruction MADD not yet implemented."
	099 Move [X0+24], W10
	100 Move [X8+32], X12
	101 Move [X8+40], W31
	102 Move X8, [X10+32]
	103 Move X1, 1
	104 Move X2, X31
	105 Move X8, [X8+192]
	106 Move X3, [X8+112]
	107 Call List`1<ManipulatorActivationFilter>.AddWithResize, X0, X1
	108 Move X0, [X21]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X31
	114 Call Application.get_platform
	115 Move X9, [X19+1000]
	116 Compare X9, 0
	117 JumpIfEqual {161}
	118 Move W8, W0
	119 Move X0, [X9+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X8, 2
	122 Move X9, 8
	123 NotImplemented "Instruction CSEL not yet implemented."
	124 Compare X0, 0
	125 JumpIfEqual {161}
	126 Move W10, [X0+28]
	127 Move X8, [X0+16]
	128 Move X9, [X20]
	129 Add W10, W10, 1
	130 Move [X0+28], W10
	131 Compare X8, 0
	132 JumpIfEqual {161}
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Move W11, [X8+24]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X20, [X31+32]
	137 Move X19, [X31+40]
	138 Move X22, [X31+16]
	139 Move X21, [X31+24]
	140 Move W11, 12
	141 Add W9, W10, 1
	142 NotImplemented "Instruction MADD not yet implemented."
	143 Move [X0+24], W9
	144 Move [X8+32], X1
	145 Move [X8+40], W31
	146 Move X30, [X31+48]
	147 Move X23, [X31+56]
	148 Return 
	149 Move X8, [X9+32]
	150 Move X20, [X31+32]
	151 Move X19, [X31+40]
	152 Move X22, [X31+16]
	153 Move X21, [X31+24]
	154 Move X2, X31
	155 Move X8, [X8+192]
	156 Move X3, [X8+112]
	157 Move X30, [X31+48]
	158 Move X23, [X31+56]
	159 Call List`1<ManipulatorActivationFilter>.AddWithResize, X0, X1
	160 Return 
	161 Call 0x1C17F20

Method: System.Void UpdateDataFromColumn()

Disassembly:
	0x03D66CA8 LDR X12, [X8 + 0xC8]
	0x03D66CAC ADD X11, X12, X11, 0x3, LSL
	0x03D66CB0 LDUR X11, [X11 - 0x8]
	0x03D66CB4 CMP X11, X10
	0x03D66CB8 B.EQ 0x3D66D90
	0x03D66CBC ADRP X10, 0x3FE000
	0x03D66CC0 LDR X10, [X10 + 0xC8]
	0x03D66CC4 LDR X10, [X10]
	0x03D66CC8 LDRB W11, [X10 + 0x130]
	0x03D66CCC CMP W9, W11
	0x03D66CD0 B.CC 0x3D66CE8
	0x03D66CD4 LDR X12, [X8 + 0xC8]
	0x03D66CD8 ADD X11, X12, X11, 0x3, LSL

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+1016]
	004 Compare X8, 0
	005 JumpIfEqual {17}
	006 Move X1, [X8+16]
	007 Move X2, X31
	008 Move X19, X0
	009 Call VisualElement.set_name, X0, X1
	010 Move X0, X19
	011 Call MultiColumnHeaderColumn.UnbindHeaderContent, X0
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call MultiColumnHeaderColumn.BindHeaderContent, X0
	016 Return 
	017 Call 0x1C17F20

Method: System.Void BindHeaderContent()

Disassembly:
	0x03D66DB4 LDR X8, [X8 + 0x980]
	0x03D66DB8 B 0x3D66DC4
	0x03D66DBC ADRP X8, 0x400000
	0x03D66DC0 LDR X8, [X8 + 0x970]
	0x03D66DC4 LDR X2, [X8]
	0x03D66DC8 MOV X0, X20
	0x03D66DCC MOV X1, X19
	0x03D66DD0 LDP X20, X19, [X31 + 0x10]
	0x03D66DD4 LDP X30, X21, [X31], #0x20
	0x03D66DD8 B 0x22123F0
	0x03D66DDC RET
	0x03D66DE0 STP X30, X21, [X31 - 0x20]!
	0x03D66DE4 STP X20, X19, [X31 + 0x10]
	0x03D66DE8 ADRP X20, 0x681000
	0x03D66DEC ADRP X21, 0x3B9000
	0x03D66DF0 LDRB W8, [X20 + 0xCC6]
	0x03D66DF4 LDR X21, [X21 + 0x5C8]
	0x03D66DF8 MOV X19, X0
	0x03D66DFC TBNZ X8, 0x0, 0x3D66E20
	0x03D66E00 ADRP X0, 0x3B9000
	0x03D66E04 LDR X0, [X0 + 0x5C8]
	0x03D66E08 BL 0x1C16CF4
	0x03D66E0C ADRP X0, 0x3B7000
	0x03D66E10 LDR X0, [X0 + 0x630]
	0x03D66E14 BL 0x1C16CF4
	0x03D66E18 MOVZ W8, 0x1
	0x03D66E1C STRB W8, [X20 + 0xCC6]
	0x03D66E20 LDR X0, [X21]
	0x03D66E24 LDR W8, [X0 + 0xE0]
	0x03D66E28 CBNZ W8, 0x3D66E30
	0x03D66E2C BL 0x1C16DFC
	0x03D66E30 MOVZ W0, 0x1
	0x03D66E34 MOV X1, X31
	0x03D66E38 BL 0x3C7578C
	0x03D66E3C LDR X0, [X19 + 0x10]
	0x03D66E40 CBZ X0, 0x3D66EC0
	0x03D66E44 MOV X1, X31
	0x03D66E48 BL 0x3E0AF0C
	0x03D66E4C CBZ X0, 0x3D66EC0
	0x03D66E50 ADRP X10, 0x3B7000
	0x03D66E54 LDR X8, [X0]
	0x03D66E58 LDR X10, [X10 + 0x630]
	0x03D66E5C MOV X19, X0
	0x03D66E60 LDRH W9, [X8 + 0x12E]
	0x03D66E64 LDR X1, [X10]
	0x03D66E68 CBZ X9, 0x3D66E8C
	0x03D66E6C LDR X10, [X8 + 0xB0]
	0x03D66E70 ADD X10, X10, 0x8
	0x03D66E74 LDUR X11, [X10 - 0x8]
	0x03D66E78 CMP X11, X1
	0x03D66E7C B.EQ 0x3D66E9C
	0x03D66E80 SUBS X9, X9, 0x1
	0x03D66E84 ADD X10, X10, 0x10
	0x03D66E88 B.NE 0x3D66E74

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x682000
	006 Move W8, [X20+3255]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x401000
	013 Move X0, [X0+2184]
	014 Call 0x1C17CF4
	015 Move X0, 0x401000
	016 Move X0, [X0+1232]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3255], W8
	020 Move X0, X19
	021 Call MultiColumnHeaderColumn.get_isContentBound, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {31}
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Move X21, 0x401000
	032 Move X21, [X21+1232]
	033 Move X20, [X19+976]
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X21]
	040 Move X8, [X0+184]
	041 Move X1, X31
	042 Move X0, [X8+112]
	043 Call PropertyName.op_Implicit, X0
	044 Compare X20, 0
	045 JumpIfEqual {70}
	046 And X1, X0, 0
	047 Move X0, X20
	048 Move X2, X31
	049 Call VisualElement.GetProperty, X0, X1
	050 Move X8, 0x401000
	051 Move X8, [X8+2184]
	052 Move X1, [X8]
	053 Call 0x1C17E00
	054 Compare X0, 0
	055 JumpIfEqual {62}
	056 Move X8, [X0+64]
	057 Move X1, [X19+976]
	058 Move X9, [X0+24]
	059 Move X2, [X0+40]
	060 Move X0, X8
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X0, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move W1, 1
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Call MultiColumnHeaderColumn.set_isContentBound, X0, X1
	069 Return 
	070 Call 0x1C17F20

Method: System.Void UnbindHeaderContent()

Disassembly:
	0x03D66CDC LDUR X11, [X11 - 0x8]
	0x03D66CE0 CMP X11, X10
	0x03D66CE4 B.EQ 0x3D66DA4
	0x03D66CE8 ADRP X10, 0x400000
	0x03D66CEC LDR X10, [X10 + 0x990]
	0x03D66CF0 LDR X10, [X10]
	0x03D66CF4 LDRB W11, [X10 + 0x130]
	0x03D66CF8 CMP W9, W11
	0x03D66CFC B.CC 0x3D66D14
	0x03D66D00 LDR X12, [X8 + 0xC8]
	0x03D66D04 ADD X11, X12, X11, 0x3, LSL
	0x03D66D08 LDUR X11, [X11 - 0x8]
	0x03D66D0C CMP X11, X10
	0x03D66D10 B.EQ 0x3D66DB0
	0x03D66D14 ADRP X10, 0x400000
	0x03D66D18 LDR X10, [X10 + 0x988]
	0x03D66D1C LDR X10, [X10]
	0x03D66D20 LDRB W11, [X10 + 0x130]
	0x03D66D24 CMP W9, W11
	0x03D66D28 B.CC 0x3D66D40
	0x03D66D2C LDR X8, [X8 + 0xC8]
	0x03D66D30 ADD X8, X8, X11, 0x3, LSL
	0x03D66D34 LDUR X8, [X8 - 0x8]
	0x03D66D38 CMP X8, X10
	0x03D66D3C B.EQ 0x3D66DBC
	0x03D66D40 LDP X20, X19, [X31 + 0x10]
	0x03D66D44 LDP X30, X21, [X31], #0x20
	0x03D66D48 RET
	0x03D66D4C MOV X0, X20
	0x03D66D50 LDP X20, X19, [X31 + 0x10]
	0x03D66D54 LDP X30, X21, [X31], #0x20
	0x03D66D58 B 0x3D66DE0
	0x03D66D5C LDP X20, X19, [X31 + 0x10]
	0x03D66D60 LDP X30, X21, [X31], #0x20
	0x03D66D64 B 0x3D66EC4
	0x03D66D68 MOV X0, X20
	0x03D66D6C MOV X1, X19
	0x03D66D70 LDP X20, X19, [X31 + 0x10]
	0x03D66D74 LDP X30, X21, [X31], #0x20
	0x03D66D78 B 0x3D66F18
	0x03D66D7C MOV X0, X20
	0x03D66D80 MOV X1, X19
	0x03D66D84 LDP X20, X19, [X31 + 0x10]
	0x03D66D88 LDP X30, X21, [X31], #0x20
	0x03D66D8C B 0x3D678E0
	0x03D66D90 MOV X0, X20
	0x03D66D94 MOV X1, X19
	0x03D66D98 LDP X20, X19, [X31 + 0x10]
	0x03D66D9C LDP X30, X21, [X31], #0x20
	0x03D66DA0 B 0x3D67AF4
	0x03D66DA4 ADRP X8, 0x400000
	0x03D66DA8 LDR X8, [X8 + 0x978]
	0x03D66DAC B 0x3D66DC4
	0x03D66DB0 ADRP X8, 0x400000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x682000
	006 Move W8, [X20+3256]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x401000
	013 Move X0, [X0+2184]
	014 Call 0x1C17CF4
	015 Move X0, 0x401000
	016 Move X0, [X0+1232]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+3256], W8
	020 Move X0, X19
	021 Call MultiColumnHeaderColumn.get_isContentBound, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {65}
	026 Move X21, 0x401000
	027 Move X21, [X21+1232]
	028 Move X20, [X19+976]
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X21]
	035 Move X8, [X0+184]
	036 Move X1, X31
	037 Move X0, [X8+120]
	038 Call PropertyName.op_Implicit, X0
	039 Compare X20, 0
	040 JumpIfEqual {70}
	041 And X1, X0, 0
	042 Move X0, X20
	043 Move X2, X31
	044 Call VisualElement.GetProperty, X0, X1
	045 Move X8, 0x401000
	046 Move X8, [X8+2184]
	047 Move X1, [X8]
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {57}
	051 Move X8, [X0+64]
	052 Move X1, [X19+976]
	053 Move X9, [X0+24]
	054 Move X2, [X0+40]
	055 Move X0, X8
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X0, X19
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move W1, W31
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Call MultiColumnHeaderColumn.set_isContentBound, X0, X1
	064 Return 
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return 
	070 Call 0x1C17F20

Method: System.Void DestroyHeaderContent()

Disassembly:
	0x03D66544 BL 0x321B938
	0x03D66548 LDR X8, [X19]
	0x03D6654C MOV X2, X31
	0x03D66550 LDR X8, [X8 + 0xB8]
	0x03D66554 STR X0, [X8 + 0x18]
	0x03D66558 LDR X0, [X8]
	0x03D6655C LDR X1, [X23]
	0x03D66560 BL 0x321B938
	0x03D66564 LDR X8, [X19]
	0x03D66568 MOV X2, X31
	0x03D6656C LDR X8, [X8 + 0xB8]
	0x03D66570 STR X0, [X8 + 0x20]
	0x03D66574 LDR X0, [X8]
	0x03D66578 LDR X1, [X22]
	0x03D6657C BL 0x321B938
	0x03D66580 LDR X8, [X19]
	0x03D66584 MOV X2, X31
	0x03D66588 LDR X8, [X8 + 0xB8]
	0x03D6658C STR X0, [X8 + 0x28]
	0x03D66590 LDR X0, [X8]
	0x03D66594 LDR X1, [X21]
	0x03D66598 BL 0x321B938
	0x03D6659C LDR X8, [X19]
	0x03D665A0 MOV X2, X31
	0x03D665A4 LDR X8, [X8 + 0xB8]
	0x03D665A8 STR X0, [X8 + 0x30]
	0x03D665AC LDR X0, [X8]
	0x03D665B0 LDR X1, [X20]
	0x03D665B4 BL 0x321B938
	0x03D665B8 LDR X8, [X19]
	0x03D665BC MOV X2, X31
	0x03D665C0 LDR X8, [X8 + 0xB8]
	0x03D665C4 STR X0, [X8 + 0x38]
	0x03D665C8 LDR X0, [X8 + 0x30]
	0x03D665CC LDR X1, [X29]
	0x03D665D0 BL 0x321B938
	0x03D665D4 LDR X8, [X19]
	0x03D665D8 MOV X2, X31
	0x03D665DC LDR X8, [X8 + 0xB8]
	0x03D665E0 STR X0, [X8 + 0x40]
	0x03D665E4 LDR X0, [X8 + 0x30]
	0x03D665E8 ADRP X8, 0x400000
	0x03D665EC LDR X8, [X8 + 0x928]
	0x03D665F0 LDR X1, [X8]
	0x03D665F4 BL 0x321B938
	0x03D665F8 LDR X8, [X19]
	0x03D665FC MOV X2, X31
	0x03D66600 LDR X8, [X8 + 0xB8]
	0x03D66604 STR X0, [X8 + 0x48]
	0x03D66608 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x682000
	006 Move X21, 0x401000
	007 Move W8, [X20+3257]
	008 Move X21, [X21+1232]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x401000
	015 Move X0, [X0+2184]
	016 Call 0x1C17CF4
	017 Move X0, 0x401000
	018 Move X0, [X0+1232]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3257], W8
	022 Move X0, X19
	023 Call MultiColumnHeaderColumn.UnbindHeaderContent, X0
	024 Move X0, [X21]
	025 Move X20, [X19+976]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X1, X31
	033 Move X0, [X8+128]
	034 Call PropertyName.op_Implicit, X0
	035 Compare X20, 0
	036 JumpIfEqual {62}
	037 Move X21, 0x401000
	038 Move X21, [X21+2184]
	039 And X1, X0, 0
	040 Move X0, X20
	041 Move X2, X31
	042 Call VisualElement.GetProperty, X0, X1
	043 Move X1, [X21]
	044 Call 0x1C17E00
	045 Compare X0, 0
	046 JumpIfEqual {57}
	047 Move X8, [X0+64]
	048 Move X1, [X19+976]
	049 Move X3, [X0+24]
	050 Move X2, [X0+40]
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X0, X8
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 CallNoReturn X3
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return 
	062 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement CreateDefaultHeaderContent()

Disassembly:
	0x03D66E8C MOVZ W2, 0x8
	0x03D66E90 MOV X0, X19
	0x03D66E94 BL 0x1C5C788
	0x03D66E98 B 0x3D66EAC
	0x03D66E9C LDR W9, [X10]
	0x03D66EA0 ADD W9, W9, 0x8
	0x03D66EA4 ADD X8, X8, W9, 0x4, SXTW
	0x03D66EA8 ADD X0, X8, 0x138
	0x03D66EAC LDP X2, X1, [X0]
	0x03D66EB0 MOV X0, X19
	0x03D66EB4 LDP X20, X19, [X31 + 0x10]
	0x03D66EB8 LDP X30, X21, [X31], #0x20
	0x03D66EBC BR X2
	0x03D66EC0 BL 0x1C16F20
	0x03D66EC4 STR X30, [X31 - 0x20]!
	0x03D66EC8 STP X20, X19, [X31 + 0x10]
	0x03D66ECC ADRP X19, 0x681000
	0x03D66ED0 ADRP X20, 0x3B9000
	0x03D66ED4 LDRB W8, [X19 + 0xCC7]
	0x03D66ED8 LDR X20, [X20 + 0x5C8]
	0x03D66EDC TBNZ X8, 0x0, 0x3D66EF4
	0x03D66EE0 ADRP X0, 0x3B9000
	0x03D66EE4 LDR X0, [X0 + 0x5C8]
	0x03D66EE8 BL 0x1C16CF4
	0x03D66EEC MOVZ W8, 0x1
	0x03D66EF0 STRB W8, [X19 + 0xCC7]
	0x03D66EF4 LDR X0, [X20]
	0x03D66EF8 LDR W8, [X0 + 0xE0]
	0x03D66EFC CBNZ W8, 0x3D66F04
	0x03D66F00 BL 0x1C16DFC
	0x03D66F04 LDP X20, X19, [X31 + 0x10]
	0x03D66F08 MOV W0, W31
	0x03D66F0C MOV X1, X31
	0x03D66F10 LDR X30, [X31], #0x20
	0x03D66F14 B 0x3C7578C
	0x03D66F18 STP X30, X23, [X31 - 0x30]!
	0x03D66F1C STP X22, X21, [X31 + 0x10]
	0x03D66F20 STP X20, X19, [X31 + 0x20]
	0x03D66F24 ADRP X21, 0x681000
	0x03D66F28 LDRB W8, [X21 + 0xCC8]
	0x03D66F2C MOV X19, X1
	0x03D66F30 MOV X20, X0
	0x03D66F34 TBNZ X8, 0x0, 0x3D66FA0
	0x03D66F38 ADRP X0, 0x3B7000
	0x03D66F3C LDR X0, [X0 + 0x630]
	0x03D66F40 BL 0x1C16CF4
	0x03D66F44 ADRP X0, 0x400000
	0x03D66F48 LDR X0, [X0 + 0x9A0]
	0x03D66F4C BL 0x1C16CF4
	0x03D66F50 ADRP X0, 0x3FD000
	0x03D66F54 LDR X0, [X0 + 0xF0]
	0x03D66F58 BL 0x1C16CF4
	0x03D66F5C ADRP X0, 0x400000
	0x03D66F60 LDR X0, [X0 + 0x9A8]
	0x03D66F64 BL 0x1C16CF4
	0x03D66F68 ADRP X0, 0x3B8000
	0x03D66F6C LDR X0, [X0 + 0x130]
	0x03D66F70 BL 0x1C16CF4
	0x03D66F74 ADRP X0, 0x400000
	0x03D66F78 LDR X0, [X0 + 0x9B0]
	0x03D66F7C BL 0x1C16CF4
	0x03D66F80 ADRP X0, 0x3B8000
	0x03D66F84 LDR X0, [X0 + 0x138]
	0x03D66F88 BL 0x1C16CF4
	0x03D66F8C ADRP X0, 0x3FD000
	0x03D66F90 LDR X0, [X0 + 0xFF0]
	0x03D66F94 BL 0x1C16CF4
	0x03D66F98 MOVZ W8, 0x1
	0x03D66F9C STRB W8, [X21 + 0xCC8]
	0x03D66FA0 LDR X0, [X20 + 0x10]
	0x03D66FA4 CBZ X0, 0x3D678DC
	0x03D66FA8 MOV X1, X31
	0x03D66FAC BL 0x3E0B864
	0x03D66FB0 TBZ X0, 0x0, 0x3D67770
	0x03D66FB4 STRB W31, [X20 + 0x28]
	0x03D66FB8 CBZ X19, 0x3D678DC
	0x03D66FBC LDR X1, [X20 + 0x20]
	0x03D66FC0 MOV X0, X19
	0x03D66FC4 MOV X2, X31
	0x03D66FC8 BL 0x3DA32F8
	0x03D66FCC LDR X0, [X20 + 0x18]
	0x03D66FD0 CBZ X0, 0x3D678DC
	0x03D66FD4 LDR X1, [X20 + 0x20]
	0x03D66FD8 MOV X2, X31
	0x03D66FDC BL 0x3C7BABC
	0x03D66FE0 TBZ X0, 0x0, 0x3D670AC
	0x03D66FE4 LDR X0, [X20 + 0x10]
	0x03D66FE8 CBZ X0, 0x3D678DC
	0x03D66FEC LDR X8, [X0]
	0x03D66FF0 LDR X9, [X8 + 0xB18]
	0x03D66FF4 LDR X1, [X8 + 0xB20]
	0x03D66FF8 BLR X9
	0x03D66FFC LDR X8, [X20 + 0x18]
	0x03D67000 CBZ X8, 0x3D678DC
	0x03D67004 MOV X21, X0
	0x03D67008 MOV X0, X8
	0x03D6700C MOV X1, X31
	0x03D67010 BL 0x3C7B628
	0x03D67014 MOV X1, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x682000
	007 Move X20, 0x3B6000
	008 Move W8, [X19+3258]
	009 Move X20, [X20+2200]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x3B7000
	015 Move X0, [X0+304]
	016 Call 0x1C17CF4
	017 Move X0, 0x401000
	018 Move X0, [X0+2176]
	019 Call 0x1C17CF4
	020 Move X0, 0x401000
	021 Move X0, [X0+1232]
	022 Call 0x1C17CF4
	023 Move X0, 0x3B6000
	024 Move X0, [X0+2200]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+3258], W8
	028 Move X0, [X20]
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X19, X0
	032 Call VisualElement..ctor, X0
	033 Compare X19, 0
	034 JumpIfEqual {110}
	035 Move X22, 0x401000
	036 Move X20, 0x401000
	037 Move X22, [X22+1232]
	038 Move X20, [X20+2176]
	039 Move W1, 1
	040 Move X0, X19
	041 Move X2, X31
	042 Call VisualElement.set_pickingMode, X0, X1
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X22]
	049 Move X8, [X0+184]
	050 Move X0, X19
	051 Move X2, X31
	052 Move X1, [X8+56]
	053 Call VisualElement.AddToClassList, X0, X1
	054 Move X0, [X20]
	055 Call 0x1C17F10
	056 Move X20, X0
	057 Call MultiColumnHeaderColumnIcon..ctor, X0
	058 Compare X20, 0
	059 JumpIfEqual {110}
	060 Move X8, [X22]
	061 Move X21, 0x3B7000
	062 Move X0, X20
	063 Move X2, X31
	064 Move X8, [X8+184]
	065 Move X1, [X8+88]
	066 Move X21, [X21+304]
	067 Call VisualElement.set_name, X0, X1
	068 Move W1, 1
	069 Move X0, X20
	070 Move X2, X31
	071 Call VisualElement.set_pickingMode, X0, X1
	072 Move X0, [X21]
	073 Call 0x1C17F10
	074 Move X1, X31
	075 Move X21, X0
	076 Call Label..ctor, X0
	077 Compare X21, 0
	078 JumpIfEqual {110}
	079 Move X8, [X22]
	080 Move X0, X21
	081 Move X2, X31
	082 Move X8, [X8+184]
	083 Move X1, [X8+96]
	084 Call VisualElement.set_name, X0, X1
	085 Move W1, 1
	086 Move X0, X21
	087 Move X2, X31
	088 Call VisualElement.set_pickingMode, X0, X1
	089 Move X8, [X22]
	090 Move X0, X21
	091 Move X2, X31
	092 Move X8, [X8+184]
	093 Move X1, [X8+80]
	094 Call VisualElement.AddToClassList, X0, X1
	095 Move X0, X19
	096 Move X1, X20
	097 Move X2, X31
	098 Call VisualElement.Add, X0, X1
	099 Move X0, X19
	100 Move X1, X21
	101 Move X2, X31
	102 Call VisualElement.Add, X0, X1
	103 Move X0, X19
	104 Move X20, [X31+32]
	105 Move X19, [X31+40]
	106 Move X22, [X31+16]
	107 Move X21, [X31+24]
	108 Move X30, [X31+48]
	109 Return X0
	110 Call 0x1C17F20

Method: System.Void DefaultBindHeaderContent(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D67018 MOV X0, X21
	0x03D6701C MOV X2, X31
	0x03D67020 BL 0x3226EF8
	0x03D67024 TBZ X0, 0x0, 0x3D67030
	0x03D67028 MOVZ W8, 0x1
	0x03D6702C STRB W8, [X20 + 0x28]
	0x03D67030 MOV X0, X19
	0x03D67034 MOV X1, X31
	0x03D67038 BL 0x3D9D950
	0x03D6703C LDRB W8, [X20 + 0x28]
	0x03D67040 CBZ W8, 0x3D6704C
	0x03D67044 MOV X0, X20
	0x03D67048 BL 0x3D67D60
	0x03D6704C LDR X0, [X20 + 0x10]
	0x03D67050 CBZ X0, 0x3D678DC
	0x03D67054 MOV X1, X31
	0x03D67058 BL 0x3E0AF0C
	0x03D6705C CBZ X0, 0x3D678DC
	0x03D67060 ADRP X10, 0x3B6000
	0x03D67064 LDR X8, [X0]
	0x03D67068 LDR X10, [X10 + 0x630]
	0x03D6706C MOV X20, X0
	0x03D67070 LDRH W9, [X8 + 0x12E]
	0x03D67074 LDR X1, [X10]
	0x03D67078 CBZ X9, 0x3D6709C
	0x03D6707C LDR X10, [X8 + 0xB0]
	0x03D67080 ADD X10, X10, 0x8
	0x03D67084 LDUR X11, [X10 - 0x8]
	0x03D67088 CMP X11, X1
	0x03D6708C B.EQ 0x3D67168
	0x03D67090 SUBS X9, X9, 0x1
	0x03D67094 ADD X10, X10, 0x10
	0x03D67098 B.NE 0x3D67084
	0x03D6709C MOVZ W2, 0xC
	0x03D670A0 MOV X0, X20
	0x03D670A4 BL 0x1C5C788
	0x03D670A8 B 0x3D67178
	0x03D670AC ADRP X8, 0x3FF000
	0x03D670B0 LDRH W22, [X19 + 0x88]
	0x03D670B4 LDR X8, [X8 + 0x9A0]
	0x03D670B8 MOV X0, X19
	0x03D670BC LDR X1, [X8]
	0x03D670C0 BL 0x2EE6C54
	0x03D670C4 TBZ X0, 0x0, 0x3D670E4
	0x03D670C8 ADRP X8, 0x3FC000
	0x03D670CC LDR X8, [X8 + 0xF0]
	0x03D670D0 MOV X0, X19
	0x03D670D4 LDR X1, [X8]
	0x03D670D8 BL 0x2EE6C3C
	0x03D670DC CBZ W22, 0x3D67770
	0x03D670E0 TBZ X0, 0x0, 0x3D67770
	0x03D670E4 LDR W8, [X19 + 0x8C]
	0x03D670E8 CMP W22, 0x9
	0x03D670EC B.NE 0x3D67100
	0x03D670F0 CBNZ W8, 0x3D67100
	0x03D670F4 LDR W8, [X19 + 0x84]
	0x03D670F8 CBNZ W8, 0x3D671FC
	0x03D670FC B 0x3D67770
	0x03D67100 CMP W8, 0x9
	0x03D67104 B.NE 0x3D671FC
	0x03D67108 LDR X0, [X20 + 0x10]
	0x03D6710C CBZ X0, 0x3D678DC
	0x03D67110 MOV X1, X31
	0x03D67114 BL 0x3E0AF0C
	0x03D67118 CBZ X0, 0x3D678DC
	0x03D6711C ADRP X10, 0x3B6000
	0x03D67120 LDR X8, [X0]
	0x03D67124 LDR X10, [X10 + 0x630]
	0x03D67128 MOV X21, X0
	0x03D6712C LDRH W9, [X8 + 0x12E]
	0x03D67130 LDR X1, [X10]
	0x03D67134 CBZ X9, 0x3D67158
	0x03D67138 LDR X10, [X8 + 0xB0]
	0x03D6713C ADD X10, X10, 0x8
	0x03D67140 LDUR X11, [X10 - 0x8]
	0x03D67144 CMP X11, X1
	0x03D67148 B.EQ 0x3D671B4
	0x03D6714C SUBS X9, X9, 0x1
	0x03D67150 ADD X10, X10, 0x10
	0x03D67154 B.NE 0x3D67140
	0x03D67158 MOV X0, X21
	0x03D6715C MOV W2, W31
	0x03D67160 BL 0x1C5C788
	0x03D67164 B 0x3D671C0
	0x03D67168 LDR W9, [X10]
	0x03D6716C ADD W9, W9, 0xC
	0x03D67170 ADD X8, X8, W9, 0x4, SXTW
	0x03D67174 ADD X0, X8, 0x138
	0x03D67178 LDP X8, X1, [X0]
	0x03D6717C MOV X0, X20
	0x03D67180 BLR X8
	0x03D67184 CBZ X0, 0x3D67770
	0x03D67188 LDR W9, [X19 + 0x8C]
	0x03D6718C LDR X8, [X0 + 0x40]
	0x03D67190 LDR X3, [X0 + 0x18]
	0x03D67194 LDR X2, [X0 + 0x28]
	0x03D67198 LDP X20, X19, [X31 + 0x20]
	0x03D6719C LDP X22, X21, [X31 + 0x10]
	0x03D671A0 CMP W9, 0x8
	0x03D671A4 CSET W1, EQ
	0x03D671A8 MOV X0, X8
	0x03D671AC LDP X30, X23, [X31], #0x30
	0x03D671B0 BR X3
	0x03D671B4 LDRSW X9, [X10]
	0x03D671B8 ADD X8, X8, X9, 0x4, LSL
	0x03D671BC ADD X0, X8, 0x138
	0x03D671C0 LDP X8, X1, [X0]
	0x03D671C4 MOV X0, X21
	0x03D671C8 BLR X8
	0x03D671CC TBZ X0, 0x0, 0x3D672E4
	0x03D671D0 ADRP X8, 0x3B7000
	0x03D671D4 LDR X8, [X8 + 0x138]
	0x03D671D8 MOV X0, X19
	0x03D671DC LDR X1, [X8]
	0x03D671E0 BL 0x2EE6C18
	0x03D671E4 MOV W21, W0
	0x03D671E8 MOV X0, X19
	0x03D671EC MOV X1, X31
	0x03D671F0 BL 0x3DA3DC0
	0x03D671F4 TBNZ X21, 0x0, 0x3D672F0
	0x03D671F8 TBZ X0, 0x0, 0x3D67770
	0x03D671FC LDR X0, [X20 + 0x10]
	0x03D67200 CBZ X0, 0x3D678DC
	0x03D67204 MOV X1, X31
	0x03D67208 BL 0x3E0AF0C
	0x03D6720C CBZ X0, 0x3D678DC
	0x03D67210 ADRP X23, 0x3B6000
	0x03D67214 LDR X8, [X0]
	0x03D67218 LDR X23, [X23 + 0x630]
	0x03D6721C MOV X21, X0
	0x03D67220 LDRH W9, [X8 + 0x12E]
	0x03D67224 LDR X1, [X23]
	0x03D67228 CBZ X9, 0x3D6724C
	0x03D6722C LDR X10, [X8 + 0xB0]
	0x03D67230 ADD X10, X10, 0x8
	0x03D67234 LDUR X11, [X10 - 0x8]
	0x03D67238 CMP X11, X1
	0x03D6723C B.EQ 0x3D6725C
	0x03D67240 SUBS X9, X9, 0x1
	0x03D67244 ADD X10, X10, 0x10
	0x03D67248 B.NE 0x3D67234
	0x03D6724C MOV X0, X21
	0x03D67250 MOV W2, W31
	0x03D67254 BL 0x1C5C788
	0x03D67258 B 0x3D67268
	0x03D6725C LDRSW X9, [X10]
	0x03D67260 ADD X8, X8, X9, 0x4, LSL
	0x03D67264 ADD X0, X8, 0x138
	0x03D67268 LDP X8, X1, [X0]
	0x03D6726C MOV X0, X21
	0x03D67270 BLR X8
	0x03D67274 TBNZ X0, 0x0, 0x3D673B8
	0x03D67278 LDR W8, [X19 + 0x8C]
	0x03D6727C CMP W8, 0x10F
	0x03D67280 B.EQ 0x3D6728C
	0x03D67284 CMP W8, 0xD
	0x03D67288 B.NE 0x3D673B8
	0x03D6728C LDR X0, [X20 + 0x10]
	0x03D67290 CBZ X0, 0x3D678DC
	0x03D67294 MOV X1, X31
	0x03D67298 BL 0x3E0AF0C
	0x03D6729C CBZ X0, 0x3D678DC
	0x03D672A0 LDR X8, [X0]
	0x03D672A4 LDR X1, [X23]
	0x03D672A8 MOV X21, X0
	0x03D672AC LDRH W9, [X8 + 0x12E]
	0x03D672B0 CBZ X9, 0x3D672D4
	0x03D672B4 LDR X10, [X8 + 0xB0]
	0x03D672B8 ADD X10, X10, 0x8
	0x03D672BC LDUR X11, [X10 - 0x8]
	0x03D672C0 CMP X11, X1
	0x03D672C4 B.EQ 0x3D67384
	0x03D672C8 SUBS X9, X9, 0x1
	0x03D672CC ADD X10, X10, 0x10
	0x03D672D0 B.NE 0x3D672BC
	0x03D672D4 MOVZ W2, 0xE
	0x03D672D8 MOV X0, X21
	0x03D672DC BL 0x1C5C788
	0x03D672E0 B 0x3D67394
	0x03D672E4 MOV X0, X19
	0x03D672E8 MOV X1, X31
	0x03D672EC BL 0x3DA3DC0
	0x03D672F0 TBZ X0, 0x0, 0x3D67770
	0x03D672F4 LDR X0, [X20 + 0x10]
	0x03D672F8 CBZ X0, 0x3D678DC
	0x03D672FC LDR X8, [X0]
	0x03D67300 LDR X9, [X8 + 0x228]
	0x03D67304 LDR X1, [X8 + 0x230]
	0x03D67308 BLR X9
	0x03D6730C ADRP X8, 0x3B7000
	0x03D67310 LDR X8, [X8 + 0x138]
	0x03D67314 MOV X20, X0
	0x03D67318 MOV X0, X19
	0x03D6731C LDR X1, [X8]
	0x03D67320 BL 0x2EE6C18
	0x03D67324 ADRP X22, 0x3FC000
	0x03D67328 LDR X22, [X22 + 0xFF0]
	0x03D6732C MOV W21, W0
	0x03D67330 LDR X8, [X22]
	0x03D67334 LDR W9, [X8 + 0xE0]
	0x03D67338 CBNZ W9, 0x3D67344
	0x03D6733C MOV X0, X8
	0x03D67340 BL 0x1C16DFC
	0x03D67344 TBZ X21, 0x0, 0x3D677D8
	0x03D67348 ADRP X21, 0x680000
	0x03D6734C LDRB W8, [X21 + 0xAB1]
	0x03D67350 CBNZ W8, 0x3D67368
	0x03D67354 ADRP X0, 0x3FC000
	0x03D67358 LDR X0, [X0 + 0xFF0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X20, 0x681000
	010 Move X23, 0x400000
	011 Move W8, [X20+3259]
	012 Move X23, [X23+1232]
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x400000
	020 Move X0, [X0+1232]
	021 Call 0x1C17CF4
	022 Move X0, 0x38D000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x400000
	026 Move X0, [X0+2224]
	027 Call 0x1C17CF4
	028 Move X0, 0x400000
	029 Move X0, [X0+2232]
	030 Call 0x1C17CF4
	031 Move X0, 0x3B6000
	032 Move X0, [X0+2096]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3259], W8
	036 Move X0, [X23]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31], V0
	039 Move [X31+8], V0
	040 Move X20, 0x3B6000
	041 Move W8, [X0+224]
	042 Move X20, [X20+2096]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X23]
	047 Move X8, [X20]
	048 Move X9, [X0+184]
	049 Move X24, 0x400000
	050 Move X22, 0x400000
	051 Move W10, [X8+224]
	052 Move X20, [X9+96]
	053 Move X24, [X24+2224]
	054 Move X22, [X22+2232]
	055 Compare W10, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X3, [X24]
	060 Move X0, X21
	061 Move X1, X20
	062 Move X2, X31
	063 Call 0x22A27C4, X0, X1, X2
	064 Move X3, [X22]
	065 Move X22, X0
	066 Move X0, X21
	067 Move X1, X31
	068 Move X2, X31
	069 Call 0x22A27C4, X0, X1, X2
	070 Compare X21, 0
	071 JumpIfEqual {260}
	072 Move X8, [X23]
	073 Move X20, X0
	074 Move X0, X21
	075 Move X2, X31
	076 Move X8, [X8+184]
	077 Move X1, [X8+72]
	078 Call VisualElement.RemoveFromClassList, X0, X1
	079 Compare X22, 0
	080 JumpIfEqual {90}
	081 Move X8, [X19+1016]
	082 Compare X8, 0
	083 JumpIfEqual {260}
	084 Move X9, [X22]
	085 Move X1, [X8+24]
	086 Move X0, X22
	087 Move X8, [X9+2856]
	088 Move X2, [X9+2864]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X8, [X19+1016]
	091 Compare X8, 0
	092 JumpIfEqual {260}
	093 Move X0, [X8+24]
	094 Move X1, X31
	095 Call String.IsNullOrEmpty, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {111}
	100 Move X0, [X23]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X23]
	106 Move X8, [X0+184]
	107 Move X0, X21
	108 Move X2, X31
	109 Move X1, [X8+72]
	110 Call VisualElement.AddToClassList, X0, X1
	111 Compare X20, 0
	112 JumpIfEqual {212}
	113 Move X8, [X19+1016]
	114 Compare X8, 0
	115 JumpIfEqual {260}
	116 Move V1, [X8+32]
	117 Move V0, [X8+48]
	118 Move X22, 0x38D000
	119 Move X22, [X22+1432]
	120 Add X0, X31, 0
	121 Move X1, X31
	122 Move [X31], V1
	123 Move [X31+8], V0
	124 Call Background.get_texture, X0
	125 Move X8, [X22]
	126 Move X21, X0
	127 Move W9, [X8+224]
	128 Compare W9, 0
	129 JumpIfNotEqual {132}
	130 Move X0, X8
	131 Call 0x1C17DFC
	132 Move X0, X21
	133 Move X1, X31
	134 Move X2, X31
	135 Call Object.op_Inequality, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfEqual {165}
	140 Move X8, [X19+1016]
	141 Compare X8, 0
	142 JumpIfEqual {260}
	143 Move V1, [X8+32]
	144 Move V0, [X8+48]
	145 Add X0, X31, 0
	146 Move X1, X31
	147 Move [X31], V1
	148 Move [X31+8], V0
	149 Call Background.get_sprite, X0
	150 Move X8, [X22]
	151 Move X21, X0
	152 Move W9, [X8+224]
	153 Compare W9, 0
	154 JumpIfNotEqual {157}
	155 Move X0, X8
	156 Call 0x1C17DFC
	157 Move X0, X21
	158 Move X1, X31
	159 Move X2, X31
	160 Call Object.op_Inequality, X0, X1
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {221}
	165 Add X8, X20, 1035
	166 Move W9, 1
	167 Move [X8], W9
	168 Move X8, [X19+1016]
	169 Compare X8, 0
	170 JumpIfEqual {260}
	171 Move V1, [X8+32]
	172 Move V0, [X8+48]
	173 Add X0, X31, 0
	174 Move X1, X31
	175 Move [X31], V1
	176 Move [X31+8], V0
	177 Call Background.get_texture, X0
	178 Move X1, X0
	179 Move X0, X20
	180 Move X2, X31
	181 Call Image.set_image, X0, X1
	182 Move X8, [X19+1016]
	183 Compare X8, 0
	184 JumpIfEqual {260}
	185 Move V1, [X8+32]
	186 Move V0, [X8+48]
	187 Add X0, X31, 0
	188 Move X1, X31
	189 Move [X31], V1
	190 Move [X31+8], V0
	191 Call Background.get_sprite, X0
	192 Move X1, X0
	193 Move X0, X20
	194 Move X2, X31
	195 Call Image.set_sprite, X0, X1
	196 Move X8, [X19+1016]
	197 Compare X8, 0
	198 JumpIfEqual {260}
	199 Move V1, [X8+32]
	200 Move V0, [X8+48]
	201 Add X0, X31, 0
	202 Move X1, X31
	203 Move [X31], V1
	204 Move [X31+8], V0
	205 Call Background.get_vectorImage, X0
	206 Move X1, X0
	207 Move X0, X20
	208 Move X2, X31
	209 Call Image.set_vectorImage, X0, X1
	210 Move X0, X20
	211 Call MultiColumnHeaderColumnIcon.UpdateClassList, X0
	212 Move X20, [X31+80]
	213 Move X19, [X31+88]
	214 Move X22, [X31+64]
	215 Move X21, [X31+72]
	216 Move X24, [X31+48]
	217 Move X23, [X31+56]
	218 Move X30, [X31+32]
	219 Add X31, X31, 96
	220 Return 
	221 Move X8, [X19+1016]
	222 Compare X8, 0
	223 JumpIfEqual {260}
	224 Move V1, [X8+32]
	225 Move V0, [X8+48]
	226 Add X0, X31, 0
	227 Move X1, X31
	228 Move [X31], V1
	229 Move [X31+8], V0
	230 Call Background.get_vectorImage, X0
	231 Move X8, [X22]
	232 Move X21, X0
	233 Move W9, [X8+224]
	234 Compare W9, 0
	235 JumpIfNotEqual {238}
	236 Move X0, X8
	237 Call 0x1C17DFC
	238 Move X0, X21
	239 Move X1, X31
	240 Move X2, X31
	241 Call Object.op_Inequality, X0, X1
	242 Add X8, X20, 1035
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {166}
	247 Move W8, [X8]
	248 Compare W8, 0
	249 JumpIfEqual {210}
	250 Move X0, X20
	251 Move X1, X31
	252 Move X2, X31
	253 Call Image.set_image, X0, X1
	254 Move X0, X20
	255 Move X1, X31
	256 Move X2, X31
	257 Call Image.set_sprite, X0, X1
	258 Move X0, X20
	259 Move X1, X31
	260 Call 0x1C17F20

Method: System.Void UpdateHeaderTemplate()

Disassembly:
	0x03D66798 MOV X0, X8
	0x03D6679C BL 0x1C16F10
	0x03D667A0 ADRP X8, 0x400000
	0x03D667A4 LDR X8, [X8 + 0x940]
	0x03D667A8 MOV X1, X19
	0x03D667AC MOV X3, X31
	0x03D667B0 MOV X21, X0
	0x03D667B4 LDR X2, [X8]
	0x03D667B8 BL 0x3314368
	0x03D667BC CBZ X20, 0x3D66838
	0x03D667C0 ADRP X10, 0x3B5000
	0x03D667C4 LDR X8, [X20]
	0x03D667C8 LDR X10, [X10 + 0x680]
	0x03D667CC LDRH W9, [X8 + 0x12E]
	0x03D667D0 LDR X1, [X10]
	0x03D667D4 CBZ X9, 0x3D667F8
	0x03D667D8 LDR X10, [X8 + 0xB0]
	0x03D667DC ADD X10, X10, 0x8
	0x03D667E0 LDUR X11, [X10 - 0x8]
	0x03D667E4 CMP X11, X1
	0x03D667E8 B.EQ 0x3D66808
	0x03D667EC SUBS X9, X9, 0x1
	0x03D667F0 ADD X10, X10, 0x10
	0x03D667F4 B.NE 0x3D667E0
	0x03D667F8 MOVZ W2, 0x1
	0x03D667FC MOV X0, X20
	0x03D66800 BL 0x1C5C788
	0x03D66804 B 0x3D66818
	0x03D66808 LDR W9, [X10]
	0x03D6680C ADD W9, W9, 0x1
	0x03D66810 ADD X8, X8, W9, 0x4, SXTW
	0x03D66814 ADD X0, X8, 0x138
	0x03D66818 LDP X8, X2, [X0]
	0x03D6681C MOV X0, X20
	0x03D66820 MOV X1, X21
	0x03D66824 BLR X8
	0x03D66828 STR X0, [X19 + 0x3E0]
	0x03D6682C LDP X20, X19, [X31 + 0x10]
	0x03D66830 LDP X30, X21, [X31], #0x20
	0x03D66834 RET
	0x03D66838 BL 0x1C16F20
	0x03D6683C B 0x3D6596C
	0x03D66840 STP X30, X21, [X31 - 0x20]!
	0x03D66844 STP X20, X19, [X31 + 0x10]
	0x03D66848 ADRP X20, 0x681000
	0x03D6684C LDRB W8, [X20 + 0xCC0]
	0x03D66850 MOV X19, X0
	0x03D66854 TBNZ X8, 0x0, 0x3D6686C
	0x03D66858 ADRP X0, 0x400000
	0x03D6685C LDR X0, [X0 + 0x4D0]
	0x03D66860 BL 0x1C16CF4
	0x03D66864 MOVZ W8, 0x1
	0x03D66868 STRB W8, [X20 + 0xCC0]
	0x03D6686C LDR X8, [X19 + 0x3F0]
	0x03D66870 CBZ X8, 0x3D668C0
	0x03D66874 ADRP X21, 0x400000
	0x03D66878 LDR X21, [X21 + 0x4D0]
	0x03D6687C LDRB W20, [X8 + 0x39]
	0x03D66880 LDR X0, [X21]
	0x03D66884 LDR W9, [X0 + 0xE0]
	0x03D66888 CBNZ W9, 0x3D66894
	0x03D6688C BL 0x1C16DFC
	0x03D66890 LDR X0, [X21]
	0x03D66894 LDR X8, [X0 + 0xB8]
	0x03D66898 MOV X0, X19
	0x03D6689C MOV X2, X31
	0x03D668A0 LDR X1, [X8 + 0x20]
	0x03D668A4 CBZ W20, 0x3D668B4
	0x03D668A8 LDP X20, X19, [X31 + 0x10]
	0x03D668AC LDP X30, X21, [X31], #0x20
	0x03D668B0 B 0x3DF1C70
	0x03D668B4 LDP X20, X19, [X31 + 0x10]
	0x03D668B8 LDP X30, X21, [X31], #0x20
	0x03D668BC B 0x3DF1B54
	0x03D668C0 BL 0x1C16F20
	0x03D668C4 LDR X0, [X0 + 0x3C8]
	0x03D668C8 RET
	0x03D668CC STR X30, [X31 - 0x30]!
	0x03D668D0 STP X22, X21, [X31 + 0x10]
	0x03D668D4 STP X20, X19, [X31 + 0x20]
	0x03D668D8 ADRP X20, 0x681000
	0x03D668DC ADRP X19, 0x3FC000
	0x03D668E0 LDRB W8, [X20 + 0xCC2]
	0x03D668E4 LDR X19, [X19 + 0xC50]
	0x03D668E8 TBNZ X8, 0x0, 0x3D66924
	0x03D668EC ADRP X0, 0x3FC000
	0x03D668F0 LDR X0, [X0 + 0xC50]
	0x03D668F4 BL 0x1C16CF4
	0x03D668F8 ADRP X0, 0x400000
	0x03D668FC LDR X0, [X0 + 0x6F8]
	0x03D66900 BL 0x1C16CF4
	0x03D66904 ADRP X0, 0x400000
	0x03D66908 LDR X0, [X0 + 0x948]
	0x03D6690C BL 0x1C16CF4
	0x03D66910 ADRP X0, 0x400000
	0x03D66914 LDR X0, [X0 + 0x950]
	0x03D66918 BL 0x1C16CF4
	0x03D6691C MOVZ W8, 0x1
	0x03D66920 STRB W8, [X20 + 0xCC2]
	0x03D66924 LDR X0, [X19]
	0x03D66928 ADRP X22, 0x400000
	0x03D6692C ADRP X20, 0x400000
	0x03D66930 ADRP X21, 0x400000
	0x03D66934 LDR W8, [X0 + 0xE0]
	0x03D66938 LDR X22, [X22 + 0x950]
	0x03D6693C LDR X20, [X20 + 0x6F8]
	0x03D66940 LDR X21, [X21 + 0x948]
	0x03D66944 CBNZ W8, 0x3D66950
	0x03D66948 BL 0x1C16DFC
	0x03D6694C LDR X0, [X19]
	0x03D66950 LDR X8, [X0 + 0xB8]
	0x03D66954 LDR X1, [X22]
	0x03D66958 MOV X2, X31
	0x03D6695C LDR X0, [X8]
	0x03D66960 BL 0x321B938
	0x03D66964 LDR X8, [X20]
	0x03D66968 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x682000
	009 Move W8, [X20+3260]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x401000
	016 Move X0, [X0+2184]
	017 Call 0x1C17CF4
	018 Move X0, 0x3B8000
	019 Move X0, [X0+2840]
	020 Call 0x1C17CF4
	021 Move X0, 0x401000
	022 Move X0, [X0+2192]
	023 Call 0x1C17CF4
	024 Move X0, 0x401000
	025 Move X0, [X0+2200]
	026 Call 0x1C17CF4
	027 Move X0, 0x401000
	028 Move X0, [X0+1232]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3260], W8
	032 Move X8, [X19+1016]
	033 Compare X8, 0
	034 JumpIfEqual {134}
	035 Move X23, [X8+104]
	036 Compare X23, 0
	037 JumpIfEqual {41}
	038 Move X22, [X8+112]
	039 Move X21, [X8+120]
	040 Move X20, [X8+128]
	041 Move X8, 0x3B8000
	042 Move X8, [X8+2840]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X8, 0x401000
	046 Move X8, [X8+2192]
	047 Move X1, X19
	048 Move X3, X31
	049 Move X23, X0
	050 Move X2, [X8]
	051 Call Func`1<Object>..ctor, X0, X1, X2
	052 Move X8, 0x401000
	053 Move X8, [X8+2184]
	054 Move X0, [X8]
	055 Call 0x1C17F10
	056 Move X8, 0x401000
	057 Move X8, [X8+2200]
	058 Move X1, X19
	059 Move X3, X31
	060 Move X22, X0
	061 Move X2, [X8]
	062 Call Action`1<Object>..ctor, X0, X1, X2
	063 Compare X23, 0
	064 JumpIfEqual {134}
	065 Move X21, X31
	066 Move X20, X31
	067 Move X8, [X23+24]
	068 Move X0, [X23+64]
	069 Move X1, [X23+40]
	070 Move X24, 0x401000
	071 Move X24, [X24+1232]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X1, X0
	074 Move X0, X19
	075 Call MultiColumnHeaderColumn.set_content, X0, X1
	076 Move X0, [X24]
	077 Move X23, [X19+976]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {83}
	081 Call 0x1C17DFC
	082 Move X0, [X24]
	083 Move X8, [X0+184]
	084 Move X1, X31
	085 Move X0, [X8+112]
	086 Call PropertyName.op_Implicit, X0
	087 Compare X23, 0
	088 JumpIfEqual {134}
	089 And X1, X0, 0
	090 Move X0, X23
	091 Move X2, X22
	092 Move X3, X31
	093 Call VisualElement.SetProperty, X0, X1, X2
	094 Move X8, [X24]
	095 Move X22, [X19+976]
	096 Move X1, X31
	097 Move X8, [X8+184]
	098 Move X0, [X8+120]
	099 Call PropertyName.op_Implicit, X0
	100 Compare X22, 0
	101 JumpIfEqual {134}
	102 And X1, X0, 0
	103 Move X0, X22
	104 Move X2, X21
	105 Move X3, X31
	106 Call VisualElement.SetProperty, X0, X1, X2
	107 Move X8, [X24]
	108 Move X21, [X19+976]
	109 Move X1, X31
	110 Move X8, [X8+184]
	111 Move X0, [X8+128]
	112 Call PropertyName.op_Implicit, X0
	113 Compare X21, 0
	114 JumpIfEqual {134}
	115 And X1, X0, 0
	116 Move X0, X21
	117 Move X2, X20
	118 Move X3, X31
	119 Call VisualElement.SetProperty, X0, X1, X2
	120 Move X0, X19
	121 Move W1, W31
	122 Call MultiColumnHeaderColumn.set_isContentBound, X0, X1
	123 Move [X19+992], X31
	124 Move X0, X19
	125 Move X20, [X31+48]
	126 Move X19, [X31+56]
	127 Move X22, [X31+32]
	128 Move X21, [X31+40]
	129 Move X24, [X31+16]
	130 Move X23, [X31+24]
	131 Move X30, [X31+64]
	132 Call MultiColumnHeaderColumn.UpdateDataFromColumn, X0
	133 Return 
	134 Call 0x1C17F20

Method: System.Void UpdateGeometryFromColumn()

Disassembly:
	0x03D6696C LDR X8, [X8 + 0xB8]
	0x03D66970 STR X0, [X8]
	0x03D66974 LDR X8, [X20]
	0x03D66978 LDR X1, [X21]
	0x03D6697C LDR X8, [X8 + 0xB8]
	0x03D66980 LDR X0, [X8]
	0x03D66984 BL 0x321B938
	0x03D66988 LDR X8, [X20]
	0x03D6698C LDP X20, X19, [X31 + 0x20]
	0x03D66990 LDP X22, X21, [X31 + 0x10]
	0x03D66994 LDR X8, [X8 + 0xB8]
	0x03D66998 STR X0, [X8 + 0x8]
	0x03D6699C LDR X30, [X31], #0x30
	0x03D669A0 RET
	0x03D669A4 STP X30, X21, [X31 - 0x20]!
	0x03D669A8 STP X20, X19, [X31 + 0x10]
	0x03D669AC ADRP X20, 0x681000
	0x03D669B0 ADRP X21, 0x400000
	0x03D669B4 LDRB W8, [X20 + 0xCC3]
	0x03D669B8 LDR X21, [X21 + 0x958]
	0x03D669BC MOV X19, X0
	0x03D669C0 TBNZ X8, 0x0, 0x3D669D8
	0x03D669C4 ADRP X0, 0x400000
	0x03D669C8 LDR X0, [X0 + 0x958]
	0x03D669CC BL 0x1C16CF4
	0x03D669D0 MOVZ W8, 0x1
	0x03D669D4 STRB W8, [X20 + 0xCC3]
	0x03D669D8 LDR X1, [X21]
	0x03D669DC MOV X0, X19
	0x03D669E0 LDP X20, X19, [X31 + 0x10]
	0x03D669E4 LDP X30, X21, [X31], #0x20
	0x03D669E8 B 0x2736468
	0x03D669EC MOV X1, X31
	0x03D669F0 B 0x3DF8490
	0x03D669F4 STP X30, X23, [X31 - 0x30]!
	0x03D669F8 STP X22, X21, [X31 + 0x10]
	0x03D669FC STP X20, X19, [X31 + 0x20]
	0x03D66A00 ADRP X22, 0x681000
	0x03D66A04 ADRP X23, 0x3F3000
	0x03D66A08 LDRB W8, [X22 + 0xCC4]
	0x03D66A0C LDR X23, [X23 + 0x20]
	0x03D66A10 MOV X19, X2
	0x03D66A14 MOV X20, X1
	0x03D66A18 MOV X21, X0
	0x03D66A1C TBNZ X8, 0x0, 0x3D66A40
	0x03D66A20 ADRP X0, 0x3F3000
	0x03D66A24 LDR X0, [X0 + 0x20]
	0x03D66A28 BL 0x1C16CF4
	0x03D66A2C ADRP X0, 0x3B7000
	0x03D66A30 LDR X0, [X0 + 0x630]
	0x03D66A34 BL 0x1C16CF4
	0x03D66A38 MOVZ W8, 0x1
	0x03D66A3C STRB W8, [X22 + 0xCC4]
	0x03D66A40 LDR X0, [X23]
	0x03D66A44 BL 0x1C16F10
	0x03D66A48 MOV X1, X31
	0x03D66A4C MOV X22, X0
	0x03D66A50 BL 0x3C63690
	0x03D66A54 MOV X0, X21
	0x03D66A58 MOV X1, X31
	0x03D66A5C STR X22, [X21 + 0x20]
	0x03D66A60 BL 0x33BDD8C
	0x03D66A64 STP X20, X19, [X21 + 0x10]
	0x03D66A68 CBZ X20, 0x3D66AFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x682000
	006 Move W8, [X20+3261]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x3B7000
	013 Move X0, [X0+296]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3261], W8
	017 Move X8, [X19+1016]
	018 Compare X8, 0
	019 JumpIfEqual {74}
	020 Move W8, [X8+92]
	021 Move W9, 0x7F800000
	022 And W8, W8, 0x7FFFFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, X19
	025 Move X1, X31
	026 Call VisualElement.get_style, X0
	027 Move X8, [X19+1016]
	028 Compare X8, 0
	029 JumpIfEqual {74}
	030 Move V0, [X8+92]
	031 Move X19, X0
	032 Move X0, X31
	033 Call StyleLength.op_Implicit, V0
	034 Compare X19, 0
	035 JumpIfEqual {74}
	036 Move X11, 0x3B7000
	037 Move X9, [X19]
	038 Move X11, [X11+296]
	039 Move X8, X1
	040 Move X20, X0
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X11]
	043 And X21, X8, 0
	044 Compare X10, 0
	045 JumpIfEqual {52}
	046 Move X8, [X9+176]
	047 Add X8, X8, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X10, X10, 1
	051 Add X8, X8, 16
	052 Move W2, 54
	053 Move X0, X19
	054 Call 0x1C5D788
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return 
	060 Move W8, [X8]
	061 Add W8, W8, 54
	062 Add X8, X9, W8
	063 Add X0, X8, 312
	064 Move X4, [X0]
	065 Move X3, [X0+8]
	066 Move X0, X19
	067 Move X1, X20
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X2, X21
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 CallNoReturn X4
	074 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D6735C BL 0x1C16CF4
	0x03D67360 MOVZ W8, 0x1
	0x03D67364 STRB W8, [X21 + 0xAB1]
	0x03D67368 LDR X0, [X22]
	0x03D6736C LDR W8, [X0 + 0xE0]
	0x03D67370 CBNZ W8, 0x3D6737C
	0x03D67374 BL 0x1C16DFC
	0x03D67378 LDR X0, [X22]
	0x03D6737C LDR X8, [X0 + 0xB8]
	0x03D67380 B 0x3D67814
	0x03D67384 LDR W9, [X10]
	0x03D67388 ADD W9, W9, 0xE
	0x03D6738C ADD X8, X8, W9, 0x4, SXTW
	0x03D67390 ADD X0, X8, 0x138
	0x03D67394 LDP X8, X1, [X0]
	0x03D67398 MOV X0, X21
	0x03D6739C BLR X8
	0x03D673A0 CBZ X0, 0x3D673B8
	0x03D673A4 LDR X8, [X0 + 0x40]
	0x03D673A8 LDR X9, [X0 + 0x18]
	0x03D673AC LDR X1, [X0 + 0x28]
	0x03D673B0 MOV X0, X8
	0x03D673B4 BLR X9
	0x03D673B8 MOV X0, X19
	0x03D673BC MOV X1, X31
	0x03D673C0 BL 0x3D9D950
	0x03D673C4 LDR X0, [X20 + 0x10]
	0x03D673C8 CBZ X0, 0x3D678DC
	0x03D673CC MOV X1, X31
	0x03D673D0 BL 0x3E0AF0C
	0x03D673D4 CBZ X0, 0x3D678DC
	0x03D673D8 LDR X8, [X0]
	0x03D673DC LDR X1, [X23]
	0x03D673E0 MOV X21, X0
	0x03D673E4 LDRH W9, [X8 + 0x12E]
	0x03D673E8 CBZ X9, 0x3D6740C
	0x03D673EC LDR X10, [X8 + 0xB0]
	0x03D673F0 ADD X10, X10, 0x8
	0x03D673F4 LDUR X11, [X10 - 0x8]
	0x03D673F8 CMP X11, X1
	0x03D673FC B.EQ 0x3D6741C
	0x03D67400 SUBS X9, X9, 0x1
	0x03D67404 ADD X10, X10, 0x10
	0x03D67408 B.NE 0x3D673F4
	0x03D6740C MOV X0, X21
	0x03D67410 MOV W2, W31
	0x03D67414 BL 0x1C5C788
	0x03D67418 B 0x3D67428
	0x03D6741C LDRSW X9, [X10]
	0x03D67420 ADD X8, X8, X9, 0x4, LSL
	0x03D67424 ADD X0, X8, 0x138
	0x03D67428 LDP X8, X1, [X0]
	0x03D6742C MOV X0, X21
	0x03D67430 BLR X8
	0x03D67434 CMP W22, 0xA
	0x03D67438 TBZ X0, 0x0, 0x3D6745C
	0x03D6743C B.NE 0x3D67480
	0x03D67440 ADRP X8, 0x3B7000
	0x03D67444 LDR X8, [X8 + 0x138]
	0x03D67448 MOV X0, X19
	0x03D6744C LDR X1, [X8]
	0x03D67450 BL 0x2EE6C18
	0x03D67454 TBZ X0, 0x0, 0x3D67480
	0x03D67458 B 0x3D674E4
	0x03D6745C B.EQ 0x3D67468
	0x03D67460 CMP W22, 0xD
	0x03D67464 B.NE 0x3D67480
	0x03D67468 ADRP X8, 0x3FC000
	0x03D6746C LDR X8, [X8 + 0xF0]
	0x03D67470 MOV X0, X19
	0x03D67474 LDR X1, [X8]
	0x03D67478 BL 0x2EE6C3C
	0x03D6747C TBZ X0, 0x0, 0x3D674E4
	0x03D67480 LDR W8, [X19 + 0x8C]
	0x03D67484 CMP W8, 0x1B
	0x03D67488 B.NE 0x3D67670
	0x03D6748C LDR X0, [X20 + 0x10]
	0x03D67490 CBZ X0, 0x3D678DC
	0x03D67494 MOV X1, X31
	0x03D67498 BL 0x3E0AF0C
	0x03D6749C CBZ X0, 0x3D678DC
	0x03D674A0 LDR X8, [X0]
	0x03D674A4 LDR X1, [X23]
	0x03D674A8 MOV X21, X0
	0x03D674AC LDRH W9, [X8 + 0x12E]
	0x03D674B0 CBZ X9, 0x3D674D4
	0x03D674B4 LDR X10, [X8 + 0xB0]
	0x03D674B8 ADD X10, X10, 0x8
	0x03D674BC LDUR X11, [X10 - 0x8]
	0x03D674C0 CMP X11, X1
	0x03D674C4 B.EQ 0x3D6753C
	0x03D674C8 SUBS X9, X9, 0x1
	0x03D674CC ADD X10, X10, 0x10
	0x03D674D0 B.NE 0x3D674BC
	0x03D674D4 MOVZ W2, 0x9
	0x03D674D8 MOV X0, X21
	0x03D674DC BL 0x1C5C788
	0x03D674E0 B 0x3D6754C
	0x03D674E4 LDR X0, [X20 + 0x10]
	0x03D674E8 CBZ X0, 0x3D678DC
	0x03D674EC MOV X1, X31
	0x03D674F0 BL 0x3E0AF0C
	0x03D674F4 CBZ X0, 0x3D678DC
	0x03D674F8 LDR X8, [X0]
	0x03D674FC LDR X1, [X23]
	0x03D67500 MOV X19, X0
	0x03D67504 LDRH W9, [X8 + 0x12E]
	0x03D67508 CBZ X9, 0x3D6752C
	0x03D6750C LDR X10, [X8 + 0xB0]
	0x03D67510 ADD X10, X10, 0x8
	0x03D67514 LDUR X11, [X10 - 0x8]
	0x03D67518 CMP X11, X1
	0x03D6751C B.EQ 0x3D67730
	0x03D67520 SUBS X9, X9, 0x1
	0x03D67524 ADD X10, X10, 0x10
	0x03D67528 B.NE 0x3D67514
	0x03D6752C MOVZ W2, 0x12
	0x03D67530 MOV X0, X19
	0x03D67534 BL 0x1C5C788
	0x03D67538 B 0x3D67740
	0x03D6753C LDR W9, [X10]
	0x03D67540 ADD W9, W9, 0x9
	0x03D67544 ADD X8, X8, W9, 0x4, SXTW
	0x03D67548 ADD X0, X8, 0x138
	0x03D6754C LDP X8, X1, [X0]
	0x03D67550 MOV X0, X21
	0x03D67554 BLR X8
	0x03D67558 LDR X0, [X20 + 0x10]
	0x03D6755C CBZ X0, 0x3D678DC
	0x03D67560 MOV X1, X31
	0x03D67564 BL 0x3E0AF0C
	0x03D67568 CBZ X0, 0x3D678DC
	0x03D6756C LDR X8, [X0]
	0x03D67570 LDR X1, [X23]
	0x03D67574 MOV X21, X0
	0x03D67578 LDRH W9, [X8 + 0x12E]
	0x03D6757C CBZ X9, 0x3D675A0
	0x03D67580 LDR X10, [X8 + 0xB0]
	0x03D67584 ADD X10, X10, 0x8
	0x03D67588 LDUR X11, [X10 - 0x8]
	0x03D6758C CMP X11, X1
	0x03D67590 B.EQ 0x3D675B0
	0x03D67594 SUBS X9, X9, 0x1
	0x03D67598 ADD X10, X10, 0x10
	0x03D6759C B.NE 0x3D67588
	0x03D675A0 MOVZ W2, 0xE
	0x03D675A4 MOV X0, X21
	0x03D675A8 BL 0x1C5C788
	0x03D675AC B 0x3D675C0
	0x03D675B0 LDR W9, [X10]
	0x03D675B4 ADD W9, W9, 0xE
	0x03D675B8 ADD X8, X8, W9, 0x4, SXTW
	0x03D675BC ADD X0, X8, 0x138
	0x03D675C0 LDP X8, X1, [X0]
	0x03D675C4 MOV X0, X21
	0x03D675C8 BLR X8
	0x03D675CC CBZ X0, 0x3D675E4
	0x03D675D0 LDR X8, [X0 + 0x40]
	0x03D675D4 LDR X9, [X0 + 0x18]
	0x03D675D8 LDR X1, [X0 + 0x28]
	0x03D675DC MOV X0, X8
	0x03D675E0 BLR X9
	0x03D675E4 LDR X0, [X20 + 0x10]
	0x03D675E8 CBZ X0, 0x3D678DC
	0x03D675EC MOV X1, X31
	0x03D675F0 BL 0x3E0AF0C
	0x03D675F4 CBZ X0, 0x3D678DC
	0x03D675F8 LDR X8, [X0]
	0x03D675FC LDR X1, [X23]
	0x03D67600 MOV X21, X0
	0x03D67604 LDRH W9, [X8 + 0x12E]
	0x03D67608 CBZ X9, 0x3D6762C
	0x03D6760C LDR X10, [X8 + 0xB0]
	0x03D67610 ADD X10, X10, 0x8
	0x03D67614 LDUR X11, [X10 - 0x8]
	0x03D67618 CMP X11, X1
	0x03D6761C B.EQ 0x3D6763C
	0x03D67620 SUBS X9, X9, 0x1
	0x03D67624 ADD X10, X10, 0x10
	0x03D67628 B.NE 0x3D67614
	0x03D6762C MOVZ W2, 0x12
	0x03D67630 MOV X0, X21
	0x03D67634 BL 0x1C5C788
	0x03D67638 B 0x3D6764C
	0x03D6763C LDR W9, [X10]
	0x03D67640 ADD W9, W9, 0x12
	0x03D67644 ADD X8, X8, W9, 0x4, SXTW
	0x03D67648 ADD X0, X8, 0x138
	0x03D6764C LDP X8, X1, [X0]
	0x03D67650 MOV X0, X21
	0x03D67654 BLR X8
	0x03D67658 CBZ X0, 0x3D67670
	0x03D6765C LDR X8, [X0 + 0x40]
	0x03D67660 LDR X9, [X0 + 0x18]
	0x03D67664 LDR X1, [X0 + 0x28]
	0x03D67668 MOV X0, X8
	0x03D6766C BLR X9
	0x03D67670 LDR W8, [X19 + 0x8C]
	0x03D67674 LDR X0, [X20 + 0x10]
	0x03D67678 CMP W8, 0x9
	0x03D6767C CSEL W21, W8, W22, EQ
	0x03D67680 CBZ X0, 0x3D678DC
	0x03D67684 MOV X1, X31
	0x03D67688 BL 0x3E0AF0C
	0x03D6768C CBZ X0, 0x3D678DC
	0x03D67690 LDR X8, [X0]
	0x03D67694 LDR X1, [X23]
	0x03D67698 MOV X22, X0
	0x03D6769C LDRH W9, [X8 + 0x12E]
	0x03D676A0 CBZ X9, 0x3D676C4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x681000
	014 Move X28, 0x3FC000
	015 Move W8, [X19+3262]
	016 Move X28, [X28+3152]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {80}
	021 Move X0, 0x3FC000
	022 Move X0, [X0+3152]
	023 Call 0x1C17CF4
	024 Move X0, 0x400000
	025 Move X0, [X0+1232]
	026 Call 0x1C17CF4
	027 Move X0, 0x400000
	028 Move X0, [X0+2240]
	029 Call 0x1C17CF4
	030 Move X0, 0x400000
	031 Move X0, [X0+2248]
	032 Call 0x1C17CF4
	033 Move X0, 0x400000
	034 Move X0, [X0+2256]
	035 Call 0x1C17CF4
	036 Move X0, 0x400000
	037 Move X0, [X0+2264]
	038 Call 0x1C17CF4
	039 Move X0, 0x400000
	040 Move X0, [X0+2272]
	041 Call 0x1C17CF4
	042 Move X0, 0x400000
	043 Move X0, [X0+2280]
	044 Call 0x1C17CF4
	045 Move X0, 0x400000
	046 Move X0, [X0+2288]
	047 Call 0x1C17CF4
	048 Move X0, 0x400000
	049 Move X0, [X0+2296]
	050 Call 0x1C17CF4
	051 Move X0, 0x400000
	052 Move X0, [X0+2304]
	053 Call 0x1C17CF4
	054 Move X0, 0x400000
	055 Move X0, [X0+2312]
	056 Call 0x1C17CF4
	057 Move X0, 0x400000
	058 Move X0, [X0+2320]
	059 Call 0x1C17CF4
	060 Move X0, 0x400000
	061 Move X0, [X0+2328]
	062 Call 0x1C17CF4
	063 Move X0, 0x3FD000
	064 Move X0, [X0+2872]
	065 Call 0x1C17CF4
	066 Move X0, 0x400000
	067 Move X0, [X0+2336]
	068 Call 0x1C17CF4
	069 Move X0, 0x400000
	070 Move X0, [X0+2344]
	071 Call 0x1C17CF4
	072 Move X0, 0x400000
	073 Move X0, [X0+2352]
	074 Call 0x1C17CF4
	075 Move X0, 0x400000
	076 Move X0, [X0+2360]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X19+3262], W8
	080 Move X27, 0x400000
	081 Move X19, 0x400000
	082 Move X26, 0x400000
	083 Move X25, 0x400000
	084 Move X24, 0x400000
	085 Move X23, 0x400000
	086 Move X22, 0x400000
	087 Move X21, 0x3FD000
	088 Move X20, 0x400000
	089 Move X29, 0x400000
	090 Move X27, [X27+2288]
	091 Move X19, [X19+1232]
	092 Move X26, [X26+2256]
	093 Move X25, [X25+2264]
	094 Move X24, [X24+2272]
	095 Move X23, [X23+2240]
	096 Move X22, [X22+2360]
	097 Move X21, [X21+2872]
	098 Move X20, [X20+2312]
	099 Move X29, [X29+2248]
	100 Move X0, [X28]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {106}
	104 Call 0x1C17DFC
	105 Move X0, [X28]
	106 Move X8, [X0+184]
	107 Move X1, [X27]
	108 Move X2, X31
	109 Move X0, [X8]
	110 Call String.Concat, X0, X1
	111 Move X8, [X19]
	112 Move X2, X31
	113 Move X8, [X8+184]
	114 Move [X8], X0
	115 Move X8, [X19]
	116 Move X1, [X26]
	117 Move X8, [X8+184]
	118 Move X0, [X8]
	119 Call String.Concat, X0, X1
	120 Move X8, [X19]
	121 Move X2, X31
	122 Move X8, [X8+184]
	123 Move [X8+8], X0
	124 Move X0, [X8]
	125 Move X1, [X25]
	126 Call String.Concat, X0, X1
	127 Move X8, [X19]
	128 Move X2, X31
	129 Move X8, [X8+184]
	130 Move [X8+16], X0
	131 Move X0, [X8]
	132 Move X1, [X24]
	133 Call String.Concat, X0, X1
	134 Move X8, [X19]
	135 Move X2, X31
	136 Move X8, [X8+184]
	137 Move [X8+24], X0
	138 Move X0, [X8]
	139 Move X1, [X23]
	140 Call String.Concat, X0, X1
	141 Move X8, [X19]
	142 Move X2, X31
	143 Move X8, [X8+184]
	144 Move [X8+32], X0
	145 Move X0, [X8]
	146 Move X1, [X22]
	147 Call String.Concat, X0, X1
	148 Move X8, [X19]
	149 Move X2, X31
	150 Move X8, [X8+184]
	151 Move [X8+40], X0
	152 Move X0, [X8]
	153 Move X1, [X21]
	154 Call String.Concat, X0, X1
	155 Move X8, [X19]
	156 Move X2, X31
	157 Move X8, [X8+184]
	158 Move [X8+48], X0
	159 Move X0, [X8]
	160 Move X1, [X20]
	161 Call String.Concat, X0, X1
	162 Move X8, [X19]
	163 Move X2, X31
	164 Move X8, [X8+184]
	165 Move [X8+56], X0
	166 Move X0, [X8+48]
	167 Move X1, [X29]
	168 Call String.Concat, X0, X1
	169 Move X8, [X19]
	170 Move X2, X31
	171 Move X8, [X8+184]
	172 Move [X8+64], X0
	173 Move X0, [X8+48]
	174 Move X8, 0x400000
	175 Move X8, [X8+2344]
	176 Move X1, [X8]
	177 Call String.Concat, X0, X1
	178 Move X8, [X19]
	179 Move X2, X31
	180 Move X8, [X8+184]
	181 Move [X8+72], X0
	182 Move X0, [X8]
	183 Move X8, 0x400000
	184 Move X8, [X8+2352]
	185 Move X1, [X8]
	186 Call String.Concat, X0, X1
	187 Move X8, [X19]
	188 Move X9, 0x400000
	189 Move X8, [X8+184]
	190 Move [X8+80], X0
	191 Move X9, [X9+2296]
	192 Move X9, [X9]
	193 Move [X8+88], X9
	194 Move X9, 0x400000
	195 Move X9, [X9+2320]
	196 Move X9, [X9]
	197 Move [X8+96], X9
	198 Move X9, 0x400000
	199 Move X9, [X9+2304]
	200 Move X9, [X9]
	201 Move [X8+104], X9
	202 Move X9, 0x400000
	203 Move X9, [X9+2280]
	204 Move X9, [X9]
	205 Move [X8+112], X9
	206 Move X9, 0x400000
	207 Move X9, [X9+2336]
	208 Move X9, [X9]
	209 Move [X8+120], X9
	210 Move X9, 0x400000
	211 Move X9, [X9+2328]
	212 Move X20, [X31+80]
	213 Move X19, [X31+88]
	214 Move X22, [X31+64]
	215 Move X21, [X31+72]
	216 Move X24, [X31+48]
	217 Move X23, [X31+56]
	218 Move X9, [X9]
	219 Move X26, [X31+32]
	220 Move X25, [X31+40]
	221 Move X28, [X31+16]
	222 Move X27, [X31+24]
	223 Move [X8+128], X9
	224 Move X29, [X31+96]
	225 Move X30, [X31+104]
	226 Return 

Method: System.Void <.ctor>b__45_0(UnityEngine.UIElements.Column c, UnityEngine.UIElements.ColumnDataType role)

Disassembly:
	0x03D676A4 LDR X10, [X8 + 0xB0]
	0x03D676A8 ADD X10, X10, 0x8
	0x03D676AC LDUR X11, [X10 - 0x8]
	0x03D676B0 CMP X11, X1
	0x03D676B4 B.EQ 0x3D676D4
	0x03D676B8 SUBS X9, X9, 0x1
	0x03D676BC ADD X10, X10, 0x10
	0x03D676C0 B.NE 0x3D676AC
	0x03D676C4 MOVZ W2, 0xA
	0x03D676C8 MOV X0, X22
	0x03D676CC BL 0x1C5C788
	0x03D676D0 B 0x3D676E4
	0x03D676D4 LDR W9, [X10]
	0x03D676D8 ADD W9, W9, 0xA
	0x03D676DC ADD X8, X8, W9, 0x4, SXTW
	0x03D676E0 ADD X0, X8, 0x138
	0x03D676E4 LDP X8, X1, [X0]
	0x03D676E8 MOV X0, X22
	0x03D676EC BLR X8
	0x03D676F0 CBZ X0, 0x3D678DC
	0x03D676F4 LDR X8, [X0 + 0x40]
	0x03D676F8 LDR X9, [X0 + 0x18]
	0x03D676FC LDR X2, [X0 + 0x28]
	0x03D67700 MOV W1, W21
	0x03D67704 MOV X0, X8
	0x03D67708 BLR X9
	0x03D6770C TBZ X0, 0x0, 0x3D67770
	0x03D67710 AND W8, W21, 0xFFFF
	0x03D67714 CMP W8, 0x1F
	0x03D67718 B.HI 0x3D67728
	0x03D6771C LDR W8, [X19 + 0x8C]
	0x03D67720 CMP W8, 0x9
	0x03D67724 B.NE 0x3D67780
	0x03D67728 MOV W8, W31
	0x03D6772C B 0x3D67890
	0x03D67730 LDR W9, [X10]
	0x03D67734 ADD W9, W9, 0x12
	0x03D67738 ADD X8, X8, W9, 0x4, SXTW
	0x03D6773C ADD X0, X8, 0x138
	0x03D67740 LDP X8, X1, [X0]
	0x03D67744 MOV X0, X19
	0x03D67748 BLR X8
	0x03D6774C CBZ X0, 0x3D67770
	0x03D67750 LDR X8, [X0 + 0x40]
	0x03D67754 LDR X2, [X0 + 0x18]
	0x03D67758 LDR X1, [X0 + 0x28]
	0x03D6775C LDP X20, X19, [X31 + 0x20]
	0x03D67760 LDP X22, X21, [X31 + 0x10]
	0x03D67764 MOV X0, X8
	0x03D67768 LDP X30, X23, [X31], #0x30
	0x03D6776C BR X2
	0x03D67770 LDP X20, X19, [X31 + 0x20]
	0x03D67774 LDP X22, X21, [X31 + 0x10]
	0x03D67778 LDP X30, X23, [X31], #0x30
	0x03D6777C RET
	0x03D67780 LDR X0, [X20 + 0x10]
	0x03D67784 CBZ X0, 0x3D678DC
	0x03D67788 MOV X1, X31
	0x03D6778C BL 0x3E0AF0C
	0x03D67790 CBZ X0, 0x3D678DC
	0x03D67794 LDR X8, [X0]
	0x03D67798 LDR X1, [X23]
	0x03D6779C MOV X22, X0
	0x03D677A0 LDRH W9, [X8 + 0x12E]
	0x03D677A4 CBZ X9, 0x3D677C8
	0x03D677A8 LDR X10, [X8 + 0xB0]
	0x03D677AC ADD X10, X10, 0x8
	0x03D677B0 LDUR X11, [X10 - 0x8]
	0x03D677B4 CMP X11, X1
	0x03D677B8 B.EQ 0x3D67840
	0x03D677BC SUBS X9, X9, 0x1
	0x03D677C0 ADD X10, X10, 0x10
	0x03D677C4 B.NE 0x3D677B0
	0x03D677C8 MOV X0, X22
	0x03D677CC MOV W2, W31
	0x03D677D0 BL 0x1C5C788
	0x03D677D4 B 0x3D6784C
	0x03D677D8 ADRP X21, 0x680000
	0x03D677DC LDRB W8, [X21 + 0xAB2]
	0x03D677E0 CBNZ W8, 0x3D677F8
	0x03D677E4 ADRP X0, 0x3FC000
	0x03D677E8 LDR X0, [X0 + 0xFF0]
	0x03D677EC BL 0x1C16CF4
	0x03D677F0 MOVZ W8, 0x1
	0x03D677F4 STRB W8, [X21 + 0xAB2]
	0x03D677F8 LDR X0, [X22]
	0x03D677FC LDR W8, [X0 + 0xE0]
	0x03D67800 CBNZ W8, 0x3D6780C
	0x03D67804 BL 0x1C16DFC
	0x03D67808 LDR X0, [X22]
	0x03D6780C LDR X8, [X0 + 0xB8]
	0x03D67810 ADD X8, X8, 0x8
	0x03D67814 CBZ X20, 0x3D678DC
	0x03D67818 LDR X1, [X8]
	0x03D6781C MOV X0, X20
	0x03D67820 MOV X2, X31
	0x03D67824 BL 0x3DB02DC
	0x03D67828 MOV X0, X19
	0x03D6782C LDP X20, X19, [X31 + 0x20]
	0x03D67830 LDP X22, X21, [X31 + 0x10]
	0x03D67834 MOV X1, X31
	0x03D67838 LDP X30, X23, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x681000
	006 Move W8, [X21+3263]
	007 Move W20, W2
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x38E000
	014 Move X0, [X0+3696]
	015 Call 0x1C17CF4
	016 Move X0, 0x3B8000
	017 Move X0, [X0+2744]
	018 Call 0x1C17CF4
	019 Move X0, 0x3B5000
	020 Move X0, [X0+1664]
	021 Call 0x1C17CF4
	022 Move X0, 0x400000
	023 Move X0, [X0+2368]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3263], W8
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X19+992]
	029 Compare X20, 0
	030 JumpIfEqual {62}
	031 Move X10, 0x3B8000
	032 Move X8, [X20]
	033 Move X10, [X10+2744]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X10]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 1
	045 Move X0, X20
	046 Call 0x1C5D788
	047 Move X0, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call MultiColumnHeaderColumn.UpdateDataFromColumn, X0
	053 Return 
	054 Move W9, [X10]
	055 Add W9, W9, 1
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X1, [X0+8]
	060 Move X0, X20
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X0, X19
	063 Move X1, X31
	064 Call VisualElement.get_schedule, X0
	065 Move X8, 0x38E000
	066 Move X8, [X8+3696]
	067 Move X20, X0
	068 Move X8, [X8]
	069 Move X0, X8
	070 Call 0x1C17F10
	071 Move X8, 0x400000
	072 Move X8, [X8+2368]
	073 Move X1, X19
	074 Move X3, X31
	075 Move X21, X0
	076 Move X2, [X8]
	077 Call Action..ctor, X0, X1, X2
	078 Compare X20, 0
	079 JumpIfEqual {111}
	080 Move X10, 0x3B5000
	081 Move X8, [X20]
	082 Move X10, [X10+1664]
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Move X1, [X10]
	085 Compare X9, 0
	086 JumpIfEqual {93}
	087 Move X10, [X8+176]
	088 Add X10, X10, 8
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Subtract X9, X9, 1
	092 Add X10, X10, 16
	093 Move W2, 1
	094 Move X0, X20
	095 Call 0x1C5D788
	096 Move W9, [X10]
	097 Add W9, W9, 1
	098 Add X8, X8, W9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X2, [X0+8]
	102 Move X0, X20
	103 Move X1, X21
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move [X19+992], X0
	106 Move X20, [X31+16]
	107 Move X19, [X31+24]
	108 Move X30, [X31+32]
	109 Move X21, [X31+40]
	110 Return 
	111 Call 0x1C17F20

Method: System.Void <.ctor>b__45_1(UnityEngine.UIElements.Column c)

Disassembly:
	0x03D6783C B 0x3D9D950

ISIL:
	001 Call MultiColumnHeaderColumn.UpdateGeometryFromColumn, X0
	002 Return 

Method: System.Void <InitManipulators>b__46_0(UnityEngine.UIElements.Internal.ColumnMover mv)

Disassembly:
	0x03D67840 LDRSW X9, [X10]
	0x03D67844 ADD X8, X8, X9, 0x4, LSL
	0x03D67848 ADD X0, X8, 0x138
	0x03D6784C LDP X8, X1, [X0]
	0x03D67850 MOV X0, X22
	0x03D67854 BLR X8
	0x03D67858 TBZ X0, 0x0, 0x3D6788C
	0x03D6785C ADRP X8, 0x3FC000
	0x03D67860 LDR X8, [X8 + 0xF0]
	0x03D67864 MOV X0, X19
	0x03D67868 LDR X1, [X8]
	0x03D6786C BL 0x2EE6C3C
	0x03D67870 TBNZ X0, 0x0, 0x3D6788C
	0x03D67874 AND W9, W21, 0xFFFF
	0x03D67878 CMP W9, 0xA
	0x03D6787C MOV W8, W31
	0x03D67880 B.EQ 0x3D67890
	0x03D67884 CMP W9, 0xD
	0x03D67888 B.EQ 0x3D67890
	0x03D6788C MOVZ W8, 0x1
	0x03D67890 LDR X0, [X20 + 0x18]
	0x03D67894 CBZ X0, 0x3D678DC
	0x03D67898 TBZ X8, 0x0, 0x3D678C4
	0x03D6789C LDRB W21, [X0 + 0x24]
	0x03D678A0 MOV X1, X31
	0x03D678A4 BL 0x3C7B6E4
	0x03D678A8 TBNZ X0, 0x0, 0x3D678D0
	0x03D678AC LDR X8, [X20 + 0x18]
	0x03D678B0 CBZ X8, 0x3D678DC
	0x03D678B4 LDRB W8, [X8 + 0x24]
	0x03D678B8 CMP W21, W8
	0x03D678BC B.EQ 0x3D6703C
	0x03D678C0 B 0x3D678D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x681000
	006 Move W8, [X20+3264]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x400000
	013 Move X0, [X0+1232]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3264], W8
	017 Move X8, [X19+1008]
	018 Compare X8, 0
	019 JumpIfEqual {47}
	020 Move X21, 0x400000
	021 Move X21, [X21+1232]
	022 Move W20, [X8+57]
	023 Move X0, [X21]
	024 Move W9, [X0+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X0, X19
	031 Move X2, X31
	032 Move X1, [X8+32]
	033 Compare W20, 0
	034 JumpIfEqual {41}
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call VisualElement.AddToClassList, X0, X1
	040 Return 
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Call VisualElement.RemoveFromClassList, X0, X1
	046 Return 
	047 Call 0x1C17F20

