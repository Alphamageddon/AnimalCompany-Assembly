Type: UnityEngine.UIElements.DynamicAtlas

Method: System.Boolean get_isInitialized()

Disassembly:
	0x03CE9474 CMP W20, W19
	0x03CE9478 LDP X20, X19, [X31 + 0x30]
	0x03CE947C LDR X30, [X31 + 0x20]
	0x03CE9480 CSET W8, NE
	0x03CE9484 ORN W8, W8, W0, 0x0
	0x03CE9488 AND W0, W8, 0x1
	0x03CE948C ADD X31, X31, 0x40
	0x03CE9490 RET

ISIL:
	001 Move X8, [X0+32]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, 1
	005 Return X0
	006 Move X8, [X0+40]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0

Method: System.Void OnAssignedToPanel(UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x03CE9494 SUB X31, X31, 0x40
	0x03CE9498 STP X30, X23, [X31 + 0x10]
	0x03CE949C STP X22, X21, [X31 + 0x20]
	0x03CE94A0 STP X20, X19, [X31 + 0x30]
	0x03CE94A4 ADRP X23, 0x6FE000
	0x03CE94A8 ADRP X20, 0x479000
	0x03CE94AC ADRP X22, 0x435000
	0x03CE94B0 ADRP X21, 0x479000
	0x03CE94B4 LDRB W8, [X23 + 0x728]
	0x03CE94B8 LDR X20, [X20 + 0x770]
	0x03CE94BC LDR X22, [X22 + 0xE08]
	0x03CE94C0 LDR X21, [X21 + 0x778]
	0x03CE94C4 MOV X19, X0
	0x03CE94C8 TBNZ X8, 0x0, 0x3CE94F8
	0x03CE94CC ADRP X0, 0x479000
	0x03CE94D0 LDR X0, [X0 + 0x770]
	0x03CE94D4 BL 0x1C16CF4
	0x03CE94D8 ADRP X0, 0x435000
	0x03CE94DC LDR X0, [X0 + 0xE08]
	0x03CE94E0 BL 0x1C16CF4
	0x03CE94E4 ADRP X0, 0x479000
	0x03CE94E8 LDR X0, [X0 + 0x778]
	0x03CE94EC BL 0x1C16CF4
	0x03CE94F0 MOVZ W8, 0x1
	0x03CE94F4 STRB W8, [X23 + 0x728]
	0x03CE94F8 LDR W8, [X19]
	0x03CE94FC LDR X0, [X20]
	0x03CE9500 ADD X1, X31, 0xC
	0x03CE9504 STR W8, [X31 + 0xC]
	0x03CE9508 BL 0x1C16E04
	0x03CE950C MOV X20, X0
	0x03CE9510 LDUR X8, [X19 + 0x4]
	0x03CE9514 LDR X0, [X22]
	0x03CE9518 ADD X1, X31, 0x0
	0x03CE951C STR X8, [X31]
	0x03CE9520 BL 0x1C16E04
	0x03CE9524 LDR X8, [X21]
	0x03CE9528 MOV X2, X0
	0x03CE952C MOV X1, X20
	0x03CE9530 MOV X3, X31
	0x03CE9534 MOV X0, X8
	0x03CE9538 BL 0x3227BD4
	0x03CE953C LDP X20, X19, [X31 + 0x30]
	0x03CE9540 LDP X22, X21, [X31 + 0x20]
	0x03CE9544 LDP X30, X23, [X31 + 0x10]
	0x03CE9548 ADD X31, X31, 0x40
	0x03CE954C RET
	0x03CE9550 MOV X0, X31
	0x03CE9554 RET
	0x03CE9558 STP W1, W2, [X0]
	0x03CE955C RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6FF000
	006 Move W8, [X21+1820]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x47A000
	014 Move X0, [X0+1720]
	015 Call 0x1C17CF4
	016 Move X0, 0x47A000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1820], W8
	021 Move X0, [X19+56]
	022 Compare X0, 0
	023 JumpIfEqual {58}
	024 Move X9, 0x47A000
	025 Move X9, [X9+1720]
	026 Move W10, [X0+28]
	027 Move X8, [X0+16]
	028 Move X9, [X9]
	029 Add W10, W10, 1
	030 Move [X0+28], W10
	031 Compare X8, 0
	032 JumpIfEqual {58}
	033 NotImplemented "Instruction LDRSW not yet implemented."
	034 Move W11, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add W9, W10, 1
	037 Add X8, X8, X10
	038 Move [X0+24], W9
	039 Move [X8+32], X20
	040 Move X8, [X9+32]
	041 Move X1, X20
	042 Move X8, [X8+192]
	043 Move X2, [X8+112]
	044 Call List`1<Object>.AddWithResize, X0, X1
	045 Move X8, [X19+56]
	046 Compare X8, 0
	047 JumpIfEqual {58}
	048 Move W8, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X31
	051 Call QualitySettings.get_activeColorSpace
	052 Move [X19+48], W0
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return 
	058 Call 0x1C17F20

Method: System.Void OnRemovedFromPanel(UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x03CE9560 SUB X31, X31, 0x40
	0x03CE9564 STR D8, [X31 + 0x20]
	0x03CE9568 STR X30, [X31 + 0x28]
	0x03CE956C STP X20, X19, [X31 + 0x30]
	0x03CE9570 CMP W0, 0x2
	0x03CE9574 MOV X19, X8
	0x03CE9578 B.EQ 0x3CE9598
	0x03CE957C CMP W0, 0x1
	0x03CE9580 B.NE 0x3CE95BC
	0x03CE9584 ADD X0, X31, 0x8
	0x03CE9588 MOVZ W1, 0x1
	0x03CE958C STP X31, X31, [X31 + 0x8]
	0x03CE9590 STR W31, [X31 + 0x18]
	0x03CE9594 B 0x3CE95A8
	0x03CE9598 STP X31, X31, [X31 + 0x8]
	0x03CE959C STR W31, [X31 + 0x18]
	0x03CE95A0 ADD X0, X31, 0x8
	0x03CE95A4 MOVZ W1, 0x2
	0x03CE95A8 BL 0x3CE9604
	0x03CE95AC LDR W8, [X31 + 0x8]
	0x03CE95B0 LDUR X20, [X31 + 0xC]
	0x03CE95B4 LDUR X0, [X31 + 0x14]
	0x03CE95B8 B 0x3CE95E4
	0x03CE95BC MOVZ W8, 0x42C80000
	0x03CE95C0 FMOV S8, W8
	0x03CE95C4 MOV V0.16B, V8.16B
	0x03CE95C8 MOV X0, X31
	0x03CE95CC BL 0x3DFD414
	0x03CE95D0 MOV X20, X0
	0x03CE95D4 MOV V0.16B, V8.16B
	0x03CE95D8 MOV X0, X31
	0x03CE95DC BL 0x3DFD414
	0x03CE95E0 MOV W8, W31
	0x03CE95E4 STR W8, [X19]
	0x03CE95E8 STUR X20, [X19 + 0x4]
	0x03CE95EC STUR X0, [X19 + 0xC]
	0x03CE95F0 LDP X20, X19, [X31 + 0x30]
	0x03CE95F4 LDR X30, [X31 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6FF000
	006 Move W8, [X21+1821]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x47A000
	014 Move X0, [X0+1736]
	015 Call 0x1C17CF4
	016 Move X0, 0x47A000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1821], W8
	021 Move X0, [X19+56]
	022 Compare X0, 0
	023 JumpIfEqual {51}
	024 Move X8, 0x47A000
	025 Move X8, [X8+1736]
	026 Move X1, X20
	027 Move X2, [X8]
	028 Call List`1<Object>.Remove, X0, X1
	029 Move X8, [X19+56]
	030 Compare X8, 0
	031 JumpIfEqual {51}
	032 Move W8, [X8+24]
	033 Compare W8, 0
	034 JumpIfEqual {40}
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Move X8, [X19+32]
	041 Compare X8, 0
	042 JumpIfNotEqual {46}
	043 Move X8, [X19+40]
	044 Compare X8, 0
	045 JumpIfEqual {35}
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x03CE9670 STP X30, X27, [X31 + 0x90]
	0x03CE9674 STP X26, X25, [X31 + 0xA0]
	0x03CE9678 STP X24, X23, [X31 + 0xB0]
	0x03CE967C STP X22, X21, [X31 + 0xC0]
	0x03CE9680 STP X20, X19, [X31 + 0xD0]
	0x03CE9684 MOV X25, X1
	0x03CE9688 MOV X24, X0
	0x03CE968C ADD X0, X31, 0x70
	0x03CE9690 FMOV S0, W31
	0x03CE9694 MOV X1, X31
	0x03CE9698 MOV X19, X6
	0x03CE969C MOV X20, X5
	0x03CE96A0 MOV X21, X4
	0x03CE96A4 MOV X23, X3
	0x03CE96A8 MOV X22, X2
	0x03CE96AC STR W31, [X31 + 0x60]
	0x03CE96B0 STR X31, [X31 + 0x58]
	0x03CE96B4 STR X31, [X31 + 0x70]
	0x03CE96B8 BL 0x3DFD4F0
	0x03CE96BC LDR X8, [X31 + 0x70]
	0x03CE96C0 STR X24, [X31 + 0x70]
	0x03CE96C4 STR W25, [X31 + 0x78]
	0x03CE96C8 LDUR X1, [X31 + 0x74]
	0x03CE96CC STUR X8, [X31 + 0x5C]
	0x03CE96D0 LDR X26, [X31 + 0x58]
	0x03CE96D4 UBFM X8, X8, 0x20, 0x3F
	0x03CE96D8 STR W8, [X31 + 0x60]
	0x03CE96DC MOV X2, X31
	0x03CE96E0 STR X26, [X31 + 0x58]
	0x03CE96E4 LDUR X0, [X31 + 0x5C]
	0x03CE96E8 BL 0x3DFAD2C
	0x03CE96EC CMP W24, W26
	0x03CE96F0 B.NE 0x3CE97B4
	0x03CE96F4 TBZ X0, 0x0, 0x3CE97B4
	0x03CE96F8 ADD X0, X31, 0x70
	0x03CE96FC FMOV S0, W31
	0x03CE9700 MOV X1, X31
	0x03CE9704 STR W31, [X31 + 0x60]
	0x03CE9708 STR X31, [X31 + 0x58]
	0x03CE970C STR X31, [X31 + 0x70]
	0x03CE9710 BL 0x3DFD4F0
	0x03CE9714 LDR X8, [X31 + 0x70]
	0x03CE9718 STR X22, [X31 + 0x70]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6FF000
	007 Move W8, [X20+1822]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x47A000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move X0, 0x47A000
	017 Move X0, [X0+1752]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1822], W8
	021 Move X8, [X19+32]
	022 Compare X8, 0
	023 JumpIfNotEqual {27}
	024 Move X8, [X19+40]
	025 Compare X8, 0
	026 JumpIfEqual {47}
	027 Move X0, X19
	028 Call DynamicAtlas.DestroyPages, X0
	029 Move X0, [X19+56]
	030 Compare X0, 0
	031 JumpIfEqual {46}
	032 Move W8, [X0+24]
	033 Subtract W21, W8, 1
	034 Move X22, 0x47A000
	035 Move X22, [X22+1752]
	036 Move W20, W31
	037 Move X2, [X22]
	038 Move W1, W20
	039 Call List`1<Object>.get_Item, X0, X1
	040 Call AtlasBase.RepaintTexturedElements, X0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, [X19+56]
	043 Add W20, W20, 1
	044 Compare X0, 0
	045 JumpIfNotEqual {37}
	046 Call 0x1C17F20
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Return 

Method: System.Void InitPages()

Disassembly:
	0x03CE971C STR W23, [X31 + 0x78]
	0x03CE9720 LDUR X1, [X31 + 0x74]
	0x03CE9724 STUR X8, [X31 + 0x5C]
	0x03CE9728 LDR X26, [X31 + 0x58]
	0x03CE972C UBFM X8, X8, 0x20, 0x3F
	0x03CE9730 STR W8, [X31 + 0x60]
	0x03CE9734 MOV X2, X31
	0x03CE9738 STR X26, [X31 + 0x58]
	0x03CE973C LDUR X0, [X31 + 0x5C]
	0x03CE9740 BL 0x3DFAD2C
	0x03CE9744 CMP W22, W26
	0x03CE9748 B.NE 0x3CE97B4
	0x03CE974C TBZ X0, 0x0, 0x3CE97B4
	0x03CE9750 UBFM X8, X21, 0x20, 0x3F
	0x03CE9754 CBNZ X8, 0x3CE97B4
	0x03CE9758 CBNZ W21, 0x3CE97B4
	0x03CE975C LDR W8, [X20 + 0x10]
	0x03CE9760 LDR V0, [X20]
	0x03CE9764 ADD X0, X31, 0x58
	0x03CE9768 MOVZ W1, 0x1
	0x03CE976C STP X31, X31, [X31 + 0x58]
	0x03CE9770 STR W8, [X31 + 0x50]
	0x03CE9774 STR V0, [X31 + 0x4]
	0x03CE9778 STR W31, [X31 + 0x68]
	0x03CE977C MOVZ W27, 0x1
	0x03CE9780 BL 0x3CE9604
	0x03CE9784 LDR W8, [X31 + 0x58]
	0x03CE9788 LDUR X9, [X31 + 0x5C]
	0x03CE978C LDUR X10, [X31 + 0x64]
	0x03CE9790 ADD X0, X31, 0x40
	0x03CE9794 ADD X1, X31, 0x58
	0x03CE9798 STR W8, [X31 + 0x58]
	0x03CE979C STUR X9, [X31 + 0x5C]
	0x03CE97A0 STUR X10, [X31 + 0x64]
	0x03CE97A4 BL 0x3CE9D7C
	0x03CE97A8 TBZ X0, 0x0, 0x3CE97B4
	0x03CE97AC MOVZ W26, 0x1
	0x03CE97B0 B 0x3CE99E0
	0x03CE97B4 ADD X0, X31, 0x70
	0x03CE97B8 FMOV S0, W31
	0x03CE97BC MOV X1, X31
	0x03CE97C0 STR W31, [X31 + 0x60]
	0x03CE97C4 STR X31, [X31 + 0x58]
	0x03CE97C8 STR X31, [X31 + 0x70]
	0x03CE97CC BL 0x3DFD4F0
	0x03CE97D0 LDR X8, [X31 + 0x70]
	0x03CE97D4 STR X24, [X31 + 0x70]
	0x03CE97D8 STR W25, [X31 + 0x78]
	0x03CE97DC LDUR X1, [X31 + 0x74]
	0x03CE97E0 STUR X8, [X31 + 0x5C]
	0x03CE97E4 LDR X26, [X31 + 0x58]
	0x03CE97E8 UBFM X8, X8, 0x20, 0x3F
	0x03CE97EC STR W8, [X31 + 0x60]
	0x03CE97F0 MOV X2, X31
	0x03CE97F4 STR X26, [X31 + 0x58]
	0x03CE97F8 LDUR X0, [X31 + 0x5C]
	0x03CE97FC BL 0x3DFAD2C
	0x03CE9800 CMP W24, W26
	0x03CE9804 B.NE 0x3CE98C0
	0x03CE9808 TBZ X0, 0x0, 0x3CE98C0
	0x03CE980C ADD X0, X31, 0x70
	0x03CE9810 FMOV S0, W31
	0x03CE9814 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x6FF000
	008 Move X23, 0x47A000
	009 Move W8, [X20+1823]
	010 Move X23, [X23+1760]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x47A000
	017 Move X0, [X0+1760]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+1823], W8
	021 Move W8, [X19+72]
	022 Move X1, X31
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSINC not yet implemented."
	025 Call Mathf.NextPowerOfTwo, X0
	026 Move W8, [X19+68]
	027 Move X1, X31
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSINC not yet implemented."
	030 Call Mathf.NextPowerOfTwo, X0
	031 Move W20, W0
	032 Move X0, X31
	033 Call SystemInfo.get_maxRenderTextureSize
	034 Move W8, [X19+64]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Move X1, X31
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSINC not yet implemented."
	040 Call Mathf.NextPowerOfTwo, X0
	041 Move X8, [X23]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 NotImplemented "Instruction BFM not yet implemented."
	045 Move X0, X8
	046 NotImplemented "Instruction BFM not yet implemented."
	047 Call 0x1C17F10
	048 Move W1, W31
	049 Move W2, W31
	050 Move X3, X21
	051 Move X4, X20
	052 Move X5, X31
	053 Move X22, X0
	054 Call DynamicAtlasPage..ctor, X0, X1, X2, X3, X4
	055 Move [X19+32], X22
	056 Move X0, [X23]
	057 Call 0x1C17F10
	058 Move W2, 1
	059 Move W1, W31
	060 Move X3, X21
	061 Move X4, X20
	062 Move X5, X31
	063 Move X22, X0
	064 Call DynamicAtlasPage..ctor, X0, X1, X2, X3, X4
	065 Move [X19+40], X22
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Move X23, [X31+56]
	072 Return 

Method: System.Void DestroyPages()

Disassembly:
	0x03CE95F8 LDR V8, [X31 + 0x20]
	0x03CE95FC ADD X31, X31, 0x40
	0x03CE9600 RET
	0x03CE9604 SUB X31, X31, 0x20
	0x03CE9608 STP X30, X19, [X31 + 0x10]
	0x03CE960C MOV X19, X0
	0x03CE9610 STR W1, [X0]
	0x03CE9614 ADD X0, X31, 0x8
	0x03CE9618 FMOV S0, W31
	0x03CE961C MOV X1, X31
	0x03CE9620 STR X31, [X31 + 0x8]
	0x03CE9624 BL 0x3DFD4F0
	0x03CE9628 LDR X8, [X31 + 0x8]
	0x03CE962C ADD X0, X31, 0x0
	0x03CE9630 FMOV S0, W31
	0x03CE9634 MOV X1, X31
	0x03CE9638 STUR X8, [X19 + 0x4]
	0x03CE963C STR X31, [X31]
	0x03CE9640 BL 0x3DFD4F0
	0x03CE9644 LDR X8, [X31]
	0x03CE9648 STUR X8, [X19 + 0xC]
	0x03CE964C LDP X30, X19, [X31 + 0x10]
	0x03CE9650 ADD X31, X31, 0x20
	0x03CE9654 RET
	0x03CE9658 STR W31, [X0]
	0x03CE965C STUR X1, [X0 + 0x4]
	0x03CE9660 STUR X2, [X0 + 0xC]
	0x03CE9664 RET
	0x03CE9668 SUB X31, X31, 0xE0
	0x03CE966C STR D8, [X31 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6FF000
	005 Move W8, [X20+1824]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x47A000
	012 Move X0, [X0+1744]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1824], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {39}
	019 Move X1, X31
	020 Call DynamicAtlasPage.Dispose, X0
	021 Move X0, [X19+40]
	022 Move [X19+32], X31
	023 Compare X0, 0
	024 JumpIfEqual {39}
	025 Move X1, X31
	026 Call DynamicAtlasPage.Dispose, X0
	027 Move X0, [X19+24]
	028 Move [X19+40], X31
	029 Compare X0, 0
	030 JumpIfEqual {39}
	031 Move X8, 0x47A000
	032 Move X8, [X8+1744]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X1, [X8]
	036 Move X30, [X31+32]
	037 Call Dictionary`2<Object, Object>.Clear, X0
	038 Return 
	039 Call 0x1C17F20

Method: System.Boolean TryGetAtlas(UnityEngine.UIElements.VisualElement ve, UnityEngine.Texture2D src, out UnityEngine.UIElements.TextureId atlas, out UnityEngine.RectInt atlasRect)

Disassembly:
	0x03CE9818 STR W31, [X31 + 0x60]
	0x03CE981C STR X31, [X31 + 0x58]
	0x03CE9820 STR X31, [X31 + 0x70]
	0x03CE9824 BL 0x3DFD4F0
	0x03CE9828 LDR X8, [X31 + 0x70]
	0x03CE982C STR X22, [X31 + 0x70]
	0x03CE9830 STR W23, [X31 + 0x78]
	0x03CE9834 LDUR X1, [X31 + 0x74]
	0x03CE9838 STUR X8, [X31 + 0x5C]
	0x03CE983C LDR X26, [X31 + 0x58]
	0x03CE9840 UBFM X8, X8, 0x20, 0x3F
	0x03CE9844 STR W8, [X31 + 0x60]
	0x03CE9848 MOV X2, X31
	0x03CE984C STR X26, [X31 + 0x58]
	0x03CE9850 LDUR X0, [X31 + 0x5C]
	0x03CE9854 BL 0x3DFAD2C
	0x03CE9858 CMP W22, W26
	0x03CE985C B.NE 0x3CE98C0
	0x03CE9860 TBZ X0, 0x0, 0x3CE98C0
	0x03CE9864 UBFM X8, X21, 0x20, 0x3F
	0x03CE9868 CBNZ X8, 0x3CE98C0
	0x03CE986C CBNZ W21, 0x3CE98C0
	0x03CE9870 LDR W8, [X20 + 0x10]
	0x03CE9874 LDR V0, [X20]
	0x03CE9878 ADD X0, X31, 0x58
	0x03CE987C MOVZ W1, 0x2
	0x03CE9880 STP X31, X31, [X31 + 0x58]
	0x03CE9884 STR W8, [X31 + 0x30]
	0x03CE9888 STR V0, [X31 + 0x2]
	0x03CE988C STR W31, [X31 + 0x68]
	0x03CE9890 MOVZ W26, 0x2
	0x03CE9894 BL 0x3CE9604
	0x03CE9898 LDR W8, [X31 + 0x58]
	0x03CE989C LDUR X9, [X31 + 0x5C]
	0x03CE98A0 LDUR X10, [X31 + 0x64]
	0x03CE98A4 ADD X0, X31, 0x20
	0x03CE98A8 ADD X1, X31, 0x58
	0x03CE98AC STR W8, [X31 + 0x58]
	0x03CE98B0 STUR X9, [X31 + 0x5C]
	0x03CE98B4 STUR X10, [X31 + 0x64]
	0x03CE98B8 BL 0x3CE9D7C
	0x03CE98BC TBNZ X0, 0x0, 0x3CE99D0
	0x03CE98C0 ADD X0, X31, 0x70
	0x03CE98C4 FMOV S0, W31
	0x03CE98C8 MOV X1, X31
	0x03CE98CC STR W31, [X31 + 0x60]
	0x03CE98D0 STR X31, [X31 + 0x58]
	0x03CE98D4 STR X31, [X31 + 0x70]
	0x03CE98D8 BL 0x3DFD4F0
	0x03CE98DC LDR X8, [X31 + 0x70]
	0x03CE98E0 STR X24, [X31 + 0x70]
	0x03CE98E4 STR W25, [X31 + 0x78]
	0x03CE98E8 LDUR X1, [X31 + 0x74]
	0x03CE98EC STUR X8, [X31 + 0x5C]
	0x03CE98F0 LDR X26, [X31 + 0x58]
	0x03CE98F4 UBFM X8, X8, 0x20, 0x3F
	0x03CE98F8 STR W8, [X31 + 0x60]
	0x03CE98FC MOV X2, X31
	0x03CE9900 STR X26, [X31 + 0x58]
	0x03CE9904 LDUR X0, [X31 + 0x5C]
	0x03CE9908 BL 0x3DFAD2C
	0x03CE990C CMP W24, W26
	0x03CE9910 B.NE 0x3CE99D8
	0x03CE9914 TBZ X0, 0x0, 0x3CE99D8
	0x03CE9918 ADD X0, X31, 0x70
	0x03CE991C FMOV S0, W31
	0x03CE9920 MOV X1, X31
	0x03CE9924 STR W31, [X31 + 0x60]
	0x03CE9928 STR X31, [X31 + 0x58]
	0x03CE992C STR X31, [X31 + 0x70]
	0x03CE9930 BL 0x3DFD4F0
	0x03CE9934 LDR X8, [X31 + 0x70]
	0x03CE9938 STR X22, [X31 + 0x70]
	0x03CE993C STR W23, [X31 + 0x78]
	0x03CE9940 LDUR X1, [X31 + 0x74]
	0x03CE9944 STUR X8, [X31 + 0x5C]
	0x03CE9948 LDR X24, [X31 + 0x58]
	0x03CE994C UBFM X8, X8, 0x20, 0x3F
	0x03CE9950 STR W8, [X31 + 0x60]
	0x03CE9954 MOV X2, X31
	0x03CE9958 STR X24, [X31 + 0x58]
	0x03CE995C LDUR X0, [X31 + 0x5C]
	0x03CE9960 BL 0x3DFAD2C
	0x03CE9964 CMP W22, W24
	0x03CE9968 B.NE 0x3CE99D8
	0x03CE996C TBZ X0, 0x0, 0x3CE99D8
	0x03CE9970 UBFM X8, X21, 0x20, 0x3F
	0x03CE9974 CBNZ X8, 0x3CE99D8
	0x03CE9978 CBNZ W21, 0x3CE99D8
	0x03CE997C LDR W8, [X20 + 0x10]
	0x03CE9980 LDR V0, [X20]
	0x03CE9984 MOV X0, X31
	0x03CE9988 STR W8, [X31 + 0x10]
	0x03CE998C MOVZ W8, 0x42C80000
	0x03CE9990 FMOV S8, W8
	0x03CE9994 STR V0, [X31]
	0x03CE9998 MOV V0.16B, V8.16B
	0x03CE999C BL 0x3DFD414
	0x03CE99A0 MOV X20, X0
	0x03CE99A4 MOV V0.16B, V8.16B
	0x03CE99A8 MOV X0, X31
	0x03CE99AC BL 0x3DFD414
	0x03CE99B0 STUR X0, [X31 + 0x64]
	0x03CE99B4 ADD X0, X31, 0x0
	0x03CE99B8 ADD X1, X31, 0x58
	0x03CE99BC STR W31, [X31 + 0x58]
	0x03CE99C0 STUR X20, [X31 + 0x5C]
	0x03CE99C4 BL 0x3CE9D7C
	0x03CE99C8 TBZ X0, 0x0, 0x3CE99D8
	0x03CE99CC MOV W26, W31
	0x03CE99D0 MOVZ W27, 0x1
	0x03CE99D4 B 0x3CE99E0
	0x03CE99D8 MOV W27, W31
	0x03CE99DC MOV W26, W31
	0x03CE99E0 STRB W27, [X19]
	0x03CE99E4 MOV W0, W26
	0x03CE99E8 LDP X20, X19, [X31 + 0xD0]
	0x03CE99EC LDP X22, X21, [X31 + 0xC0]
	0x03CE99F0 LDP X24, X23, [X31 + 0xB0]
	0x03CE99F4 LDP X26, X25, [X31 + 0xA0]
	0x03CE99F8 LDP X30, X27, [X31 + 0x90]
	0x03CE99FC LDR V8, [X31 + 0x80]
	0x03CE9A00 ADD X31, X31, 0xE0
	0x03CE9A04 RET
	0x03CE9A08 UBFM X8, X0, 0x20, 0x3F
	0x03CE9A0C CMP W0, W1
	0x03CE9A10 UBFM X9, X1, 0x20, 0x3F
	0x03CE9A14 CSET W10, EQ
	0x03CE9A18 CMP W8, W9
	0x03CE9A1C CSET W8, EQ
	0x03CE9A20 AND W0, W10, W8, 0x0
	0x03CE9A24 RET
	0x03CE9A28 SUB X31, X31, 0x30
	0x03CE9A2C STR X30, [X31 + 0x20]
	0x03CE9A30 LDR W8, [X1 + 0x10]
	0x03CE9A34 LDR V0, [X1]
	0x03CE9A38 ADD X1, X31, 0x0
	0x03CE9A3C STR W8, [X31 + 0x10]
	0x03CE9A40 STR V0, [X31]
	0x03CE9A44 BL 0x3CE9D7C
	0x03CE9A48 LDR X30, [X31 + 0x20]
	0x03CE9A4C AND W0, W0, 0x1
	0x03CE9A50 ADD X31, X31, 0x30
	0x03CE9A54 RET
	0x03CE9A58 MOV X0, X31
	0x03CE9A5C RET
	0x03CE9A60 STP X30, X21, [X31 - 0x20]!
	0x03CE9A64 STP X20, X19, [X31 + 0x10]
	0x03CE9A68 ADRP X21, 0x6FE000
	0x03CE9A6C LDRB W8, [X21 + 0x729]
	0x03CE9A70 MOV X20, X1
	0x03CE9A74 MOV X19, X0
	0x03CE9A78 TBNZ X8, 0x0, 0x3CE9A90
	0x03CE9A7C ADRP X0, 0x435000
	0x03CE9A80 LDR X0, [X0 + 0xDE8]
	0x03CE9A84 BL 0x1C16CF4
	0x03CE9A88 MOVZ W8, 0x1
	0x03CE9A8C STRB W8, [X21 + 0x729]
	0x03CE9A90 CBZ X20, 0x3CE9AD8
	0x03CE9A94 ADRP X8, 0x435000
	0x03CE9A98 LDR X8, [X8 + 0xDE8]
	0x03CE9A9C LDR X9, [X20]
	0x03CE9AA0 LDR X8, [X8]
	0x03CE9AA4 CMP X9, X8
	0x03CE9AA8 B.NE 0x3CE9AD8
	0x03CE9AAC MOV X0, X20
	0x03CE9AB0 BL 0x1C16E08
	0x03CE9AB4 LDR X8, [X0]
	0x03CE9AB8 LDR W9, [X19]
	0x03CE9ABC CMP W9, W8
	0x03CE9AC0 B.NE 0x3CE9AD8
	0x03CE9AC4 LDR W9, [X19 + 0x4]
	0x03CE9AC8 UBFM X8, X8, 0x20, 0x3F
	0x03CE9ACC CMP W9, W8
	0x03CE9AD0 CSET W0, EQ
	0x03CE9AD4 B 0x3CE9ADC
	0x03CE9AD8 MOV W0, W31
	0x03CE9ADC LDP X20, X19, [X31 + 0x10]
	0x03CE9AE0 LDP X30, X21, [X31], #0x20
	0x03CE9AE4 RET
	0x03CE9AE8 LDR W8, [X0]
	0x03CE9AEC CMP W8, W1
	0x03CE9AF0 B.NE 0x3CE9B08
	0x03CE9AF4 LDR W8, [X0 + 0x4]
	0x03CE9AF8 UBFM X9, X1, 0x20, 0x3F
	0x03CE9AFC CMP W8, W9
	0x03CE9B00 CSET W0, EQ
	0x03CE9B04 RET
	0x03CE9B08 MOV W0, W31
	0x03CE9B0C RET
	0x03CE9B10 STR X30, [X31 - 0x20]!
	0x03CE9B14 STP X20, X19, [X31 + 0x10]
	0x03CE9B18 MOV X1, X31
	0x03CE9B1C MOV X19, X0
	0x03CE9B20 BL 0x337B6D8
	0x03CE9B24 MOV W20, W0
	0x03CE9B28 ADD X0, X19, 0x4
	0x03CE9B2C MOV X1, X31
	0x03CE9B30 BL 0x337B6D8
	0x03CE9B34 MOVZ W8, 0x5529
	0x03CE9B38 MOVK W8, 0xA5550000
	0x03CE9B3C MADD W8, W20, W8, W0
	0x03CE9B40 LDP X20, X19, [X31 + 0x10]
	0x03CE9B44 MOVZ W9, 0xA091
	0x03CE9B48 MOVK W9, 0x84340000
	0x03CE9B4C ADD W0, W8, W9
	0x03CE9B50 LDR X30, [X31], #0x20
	0x03CE9B54 RET
	0x03CE9B58 UBFM X8, X0, 0x20, 0x3F
	0x03CE9B5C CMP W0, W1
	0x03CE9B60 UBFM X9, X1, 0x20, 0x3F
	0x03CE9B64 CSET W10, NE
	0x03CE9B68 CMP W8, W9
	0x03CE9B6C CSET W8, NE
	0x03CE9B70 ORR W0, W10, W8, 0x0
	0x03CE9B74 RET
	0x03CE9B78 STR X30, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+120], X23
	004 Move [X31+128], X22
	005 Move [X31+136], X21
	006 Move [X31+144], X20
	007 Move [X31+152], X19
	008 Move X23, 0x6FF000
	009 Move W8, [X23+1825]
	010 Move X20, X4
	011 Move X19, X3
	012 Move X22, X2
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x47A000
	019 Move X0, [X0+1768]
	020 Call 0x1C17CF4
	021 Move X0, 0x47A000
	022 Move X0, [X0+1776]
	023 Call 0x1C17CF4
	024 Move X0, 0x47A000
	025 Move X0, [X0+1784]
	026 Call 0x1C17CF4
	027 Move X0, 0x47A000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0x40B000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x433000
	034 Move X0, [X0+1568]
	035 Call 0x1C17CF4
	036 Move X0, 0x47A000
	037 Move X0, [X0+1792]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+1825], W8
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+104], X31
	043 Move [X31+64], V0
	044 Move [X31+72], V0
	045 Move [X31+3], V0
	046 Move X8, [X21+56]
	047 Compare X8, 0
	048 JumpIfEqual {272}
	049 Move X23, 0x433000
	050 Move W8, [X8+24]
	051 Move X23, [X23+1568]
	052 Compare W8, 0
	053 JumpIfEqual {69}
	054 Move X8, 0x40B000
	055 Move X8, [X8+1432]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X22
	062 Move X1, X31
	063 Move X2, X31
	064 Call Object.op_Equality, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {90}
	069 Move X8, [X23]
	070 Move W9, [X8+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {76}
	073 Move X0, X8
	074 Call 0x1C17DFC
	075 Move X8, [X23]
	076 Move X8, [X8+184]
	077 Move W0, W31
	078 Move W8, [X8]
	079 Move [X19], W8
	080 Move [X20], X31
	081 Move [X20+8], X31
	082 Move X20, [X31+144]
	083 Move X19, [X31+152]
	084 Move X22, [X31+128]
	085 Move X21, [X31+136]
	086 Move X30, [X31+112]
	087 Move X23, [X31+120]
	088 Add X31, X31, 160
	089 Return X0
	090 Move X8, [X21+32]
	091 Compare X8, 0
	092 JumpIfNotEqual {98}
	093 Move X8, [X21+40]
	094 Compare X8, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X21
	097 Call DynamicAtlas.InitPages, X0
	098 Move X0, [X21+24]
	099 Compare X0, 0
	100 JumpIfEqual {272}
	101 Move X8, 0x47A000
	102 Move X8, [X8+1768]
	103 Add X2, X31, 104
	104 Move X1, X22
	105 Move X3, [X8]
	106 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {125}
	111 Move X8, [X31+104]
	112 Compare X8, 0
	113 JumpIfEqual {272}
	114 Move X9, [X8+24]
	115 Compare X9, 0
	116 JumpIfEqual {272}
	117 Move W9, [X9+16]
	118 Move W0, 1
	119 Move [X19], W9
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 Move [X20], V0
	122 Move W9, [X8+32]
	123 Add W9, W9, 1
	124 Move [X8+32], W9
	125 Move X8, [X21]
	126 Move W2, 1
	127 Move X0, X21
	128 Move X1, X22
	129 Move X9, [X8+472]
	130 Move X3, [X8+480]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {197}
	136 Move X0, [X21+40]
	137 Compare X0, 0
	138 JumpIfEqual {272}
	139 Add X2, X31, 48
	140 Move X1, X22
	141 Move X3, X20
	142 Move X4, X31
	143 Call DynamicAtlasPage.TryAdd, X0, X1, X2, X3
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {197}
	148 Move X23, 0x47A000
	149 Move X23, [X23+1792]
	150 Move X0, [X23]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {156}
	154 Call 0x1C17DFC
	155 Move X0, [X23]
	156 Move X8, [X0+184]
	157 Move X0, [X8]
	158 Compare X0, 0
	159 JumpIfEqual {272}
	160 Move X8, 0x47A000
	161 Move X8, [X8+1784]
	162 Move X1, [X8]
	163 Call 0x2EF1E28, X0
	164 Move V0, [X31+48]
	165 Move V1, [X31+64]
	166 Move V2, [X31+5]
	167 Move [X31+104], X0
	168 Move [X31], V0
	169 Move [X31+8], V1
	170 Move [X31+2], V2
	171 Compare X0, 0
	172 JumpIfEqual {272}
	173 Move V1, [X31+16]
	174 Move V0, [X31+32]
	175 Move V2, [X31]
	176 Move W8, 1
	177 Move [X0+32], W8
	178 Move [X0+72], V0
	179 Move [X0+56], V1
	180 Move [X0+40], V2
	181 Move X8, [X21+40]
	182 Move X2, X0
	183 Move [X0+24], X8
	184 Move V0, [X20]
	185 Move [X0+88], V0
	186 Move X0, [X21+24]
	187 Compare X0, 0
	188 JumpIfEqual {272}
	189 Move X8, 0x47A000
	190 Move X8, [X8+1776]
	191 Move X1, X22
	192 Move X3, [X8]
	193 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	194 Move X8, [X21+40]
	195 Compare X8, 0
	196 JumpIfNotEqual {269}
	197 Move X8, [X21]
	198 Move X0, X21
	199 Move X1, X22
	200 Move W2, W31
	201 Move X9, [X8+472]
	202 Move X3, [X8+480]
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {69}
	208 Move X0, [X21+32]
	209 Compare X0, 0
	210 JumpIfEqual {272}
	211 Add X2, X31, 48
	212 Move X1, X22
	213 Move X3, X20
	214 Move X4, X31
	215 Call DynamicAtlasPage.TryAdd, X0, X1, X2, X3
	216 Move TEMP, X0
	217 And TEMP, TEMP, 1
	218 Compare TEMP, 1
	219 JumpIfNotEqual {69}
	220 Move X23, 0x47A000
	221 Move X23, [X23+1792]
	222 Move X0, [X23]
	223 Move W8, [X0+224]
	224 Compare W8, 0
	225 JumpIfNotEqual {228}
	226 Call 0x1C17DFC
	227 Move X0, [X23]
	228 Move X8, [X0+184]
	229 Move X0, [X8]
	230 Compare X0, 0
	231 JumpIfEqual {272}
	232 Move X8, 0x47A000
	233 Move X8, [X8+1784]
	234 Move X1, [X8]
	235 Call 0x2EF1E28, X0
	236 Move V0, [X31+48]
	237 Move V1, [X31+64]
	238 Move V2, [X31+5]
	239 Move [X31+104], X0
	240 Move [X31], V0
	241 Move [X31+8], V1
	242 Move [X31+2], V2
	243 Compare X0, 0
	244 JumpIfEqual {272}
	245 Move V1, [X31+16]
	246 Move V0, [X31+32]
	247 Move V2, [X31]
	248 Move W8, 1
	249 Move [X0+32], W8
	250 Move [X0+72], V0
	251 Move [X0+56], V1
	252 Move [X0+40], V2
	253 Move X8, [X21+32]
	254 Move X2, X0
	255 Move [X0+24], X8
	256 Move V0, [X20]
	257 Move [X0+88], V0
	258 Move X0, [X21+24]
	259 Compare X0, 0
	260 JumpIfEqual {272}
	261 Move X8, 0x47A000
	262 Move X8, [X8+1776]
	263 Move X1, X22
	264 Move X3, [X8]
	265 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	266 Move X8, [X21+32]
	267 Compare X8, 0
	268 JumpIfEqual {272}
	269 Move W8, [X8+16]
	270 Move W0, 1
	271 Move [X19], W8
	272 Call 0x1C17F20

Method: System.Void ReturnAtlas(UnityEngine.UIElements.VisualElement ve, UnityEngine.Texture2D src, UnityEngine.UIElements.TextureId atlas)

Disassembly:
	0x03CE9B7C STP X22, X21, [X31 + 0x10]
	0x03CE9B80 STP X20, X19, [X31 + 0x20]
	0x03CE9B84 ADRP X20, 0x6FE000
	0x03CE9B88 ADRP X22, 0x479000
	0x03CE9B8C ADRP X21, 0x479000
	0x03CE9B90 LDRB W8, [X20 + 0x72A]
	0x03CE9B94 LDR X22, [X22 + 0x780]
	0x03CE9B98 LDR X21, [X21 + 0x788]
	0x03CE9B9C MOV X19, X0
	0x03CE9BA0 TBNZ X8, 0x0, 0x3CE9BC4
	0x03CE9BA4 ADRP X0, 0x479000
	0x03CE9BA8 LDR X0, [X0 + 0x780]
	0x03CE9BAC BL 0x1C16CF4
	0x03CE9BB0 ADRP X0, 0x479000
	0x03CE9BB4 LDR X0, [X0 + 0x788]
	0x03CE9BB8 BL 0x1C16CF4
	0x03CE9BBC MOVZ W8, 0x1
	0x03CE9BC0 STRB W8, [X20 + 0x72A]
	0x03CE9BC4 LDR W8, [X19]
	0x03CE9BC8 LDR X0, [X22]
	0x03CE9BCC ADD X1, X31, 0xC
	0x03CE9BD0 STR W8, [X31 + 0xC]
	0x03CE9BD4 BL 0x1C16E04
	0x03CE9BD8 MOV X20, X0
	0x03CE9BDC LDR W8, [X19 + 0x4]
	0x03CE9BE0 LDR X0, [X22]
	0x03CE9BE4 ADD X1, X31, 0x8
	0x03CE9BE8 STR W8, [X31 + 0x8]
	0x03CE9BEC BL 0x1C16E04
	0x03CE9BF0 LDR X8, [X21]
	0x03CE9BF4 MOV X2, X0
	0x03CE9BF8 MOV X1, X20
	0x03CE9BFC MOV X3, X31
	0x03CE9C00 MOV X0, X8
	0x03CE9C04 BL 0x3227BD4
	0x03CE9C08 LDP X20, X19, [X31 + 0x20]
	0x03CE9C0C LDP X22, X21, [X31 + 0x10]
	0x03CE9C10 LDR X30, [X31], #0x30
	0x03CE9C14 RET
	0x03CE9C18 LDR W0, [X0]
	0x03CE9C1C RET
	0x03CE9C20 SUB X31, X31, 0x20
	0x03CE9C24 STP X30, X19, [X31 + 0x10]
	0x03CE9C28 MOV X19, X0
	0x03CE9C2C STR W1, [X0]
	0x03CE9C30 ADD X0, X31, 0x8
	0x03CE9C34 FMOV S0, W31
	0x03CE9C38 MOV X1, X31
	0x03CE9C3C STR X31, [X31 + 0x8]
	0x03CE9C40 BL 0x3DFD4F0
	0x03CE9C44 LDR X8, [X31 + 0x8]
	0x03CE9C48 ADD X0, X31, 0x0
	0x03CE9C4C FMOV S0, W31
	0x03CE9C50 MOV X1, X31
	0x03CE9C54 STUR X8, [X19 + 0x4]
	0x03CE9C58 STR X31, [X31]
	0x03CE9C5C BL 0x3DFD4F0
	0x03CE9C60 LDR X8, [X31]
	0x03CE9C64 STUR X8, [X19 + 0xC]
	0x03CE9C68 LDP X30, X19, [X31 + 0x10]
	0x03CE9C6C ADD X31, X31, 0x20
	0x03CE9C70 RET
	0x03CE9C74 LDUR X0, [X0 + 0x4]
	0x03CE9C78 RET
	0x03CE9C7C STUR X1, [X0 + 0x4]
	0x03CE9C80 STR W31, [X0]
	0x03CE9C84 RET
	0x03CE9C88 LDUR X0, [X0 + 0xC]
	0x03CE9C8C RET
	0x03CE9C90 STUR X1, [X0 + 0xC]
	0x03CE9C94 STR W31, [X0]
	0x03CE9C98 RET
	0x03CE9C9C STR D8, [X31 - 0x20]!
	0x03CE9CA0 STR X30, [X31 + 0x8]
	0x03CE9CA4 STP X20, X19, [X31 + 0x10]
	0x03CE9CA8 MOV X19, X8
	0x03CE9CAC MOVZ W8, 0x42C80000
	0x03CE9CB0 FMOV S8, W8
	0x03CE9CB4 MOV V0.16B, V8.16B

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+120], X21
	004 Move [X31+128], X20
	005 Move [X31+136], X19
	006 Move X21, 0x6FF000
	007 Move W8, [X21+1826]
	008 Move X19, X2
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x47A000
	015 Move X0, [X0+1800]
	016 Call 0x1C17CF4
	017 Move X0, 0x47A000
	018 Move X0, [X0+1768]
	019 Call 0x1C17CF4
	020 Move X0, 0x47A000
	021 Move X0, [X0+1808]
	022 Call 0x1C17CF4
	023 Move X0, 0x47A000
	024 Move X0, [X0+1792]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1826], W8
	028 Move [X31+104], X31
	029 Move X0, [X20+24]
	030 Compare X0, 0
	031 JumpIfEqual {97}
	032 Move X8, 0x47A000
	033 Move X8, [X8+1768]
	034 Add X2, X31, 104
	035 Move X1, X19
	036 Move X3, [X8]
	037 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {91}
	042 Move X8, [X31+104]
	043 Compare X8, 0
	044 JumpIfEqual {97}
	045 Move W9, [X8+32]
	046 Subtract W9, W9, 1
	047 Move [X8+32], W9
	048 Move X0, [X8+24]
	049 NotImplemented "Instruction LDUR not yet implemented."
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 Move [X31+64], V1
	053 Move [X31+72], V0
	054 Move [X31+3], V2
	055 Compare X0, 0
	056 JumpIfEqual {97}
	057 Move V0, [X31+48]
	058 Move V1, [X31+64]
	059 Move V2, [X31+5]
	060 Add X1, X31, 0
	061 Move X2, X31
	062 Move [X31], V0
	063 Move [X31+8], V1
	064 Move [X31+2], V2
	065 Call DynamicAtlasPage.Remove, X0, X1
	066 Move X0, [X20+24]
	067 Compare X0, 0
	068 JumpIfEqual {97}
	069 Move X8, 0x47A000
	070 Move X8, [X8+1800]
	071 Move X1, X19
	072 Move X2, [X8]
	073 Call Dictionary`2<Object, Object>.Remove, X0, X1
	074 Move X19, 0x47A000
	075 Move X19, [X19+1792]
	076 Move X0, [X19]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {82}
	080 Call 0x1C17DFC
	081 Move X0, [X19]
	082 Move X8, [X0+184]
	083 Move X0, [X8]
	084 Compare X0, 0
	085 JumpIfEqual {97}
	086 Move X8, 0x47A000
	087 Move X1, [X31+104]
	088 Move X8, [X8+1808]
	089 Move X2, [X8]
	090 Call 0x2EF1E90, X0, X1
	091 Move X20, [X31+128]
	092 Move X19, [X31+136]
	093 Move X30, [X31+112]
	094 Move X21, [X31+120]
	095 Add X31, X31, 144
	096 Return 
	097 Call 0x1C17F20

Method: System.Void OnUpdateDynamicTextures(UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x03CE9CB8 MOV X0, X31
	0x03CE9CBC BL 0x3DFD414
	0x03CE9CC0 MOV X20, X0
	0x03CE9CC4 MOV V0.16B, V8.16B
	0x03CE9CC8 MOV X0, X31
	0x03CE9CCC BL 0x3DFD414
	0x03CE9CD0 STR W31, [X19]
	0x03CE9CD4 STUR X20, [X19 + 0x4]
	0x03CE9CD8 STUR X0, [X19 + 0xC]
	0x03CE9CDC LDP X20, X19, [X31 + 0x10]
	0x03CE9CE0 LDR X30, [X31 + 0x8]
	0x03CE9CE4 LDR V8, [X31], #0x20
	0x03CE9CE8 RET
	0x03CE9CEC SUB X31, X31, 0x40
	0x03CE9CF0 STP X30, X21, [X31 + 0x20]
	0x03CE9CF4 STP X20, X19, [X31 + 0x30]
	0x03CE9CF8 ADRP X21, 0x6FE000
	0x03CE9CFC LDRB W8, [X21 + 0x72B]
	0x03CE9D00 MOV X20, X1
	0x03CE9D04 MOV X19, X0
	0x03CE9D08 TBNZ X8, 0x0, 0x3CE9D20
	0x03CE9D0C ADRP X0, 0x435000
	0x03CE9D10 LDR X0, [X0 + 0xDF0]
	0x03CE9D14 BL 0x1C16CF4
	0x03CE9D18 MOVZ W8, 0x1
	0x03CE9D1C STRB W8, [X21 + 0x72B]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+32]
	005 Compare X0, 0
	006 JumpIfEqual {16}
	007 Move X1, X31
	008 Call DynamicAtlasPage.Commit, X0
	009 Move X8, [X19+32]
	010 Compare X8, 0
	011 JumpIfEqual {34}
	012 Move W1, [X8+16]
	013 Move X2, [X8+24]
	014 Move X0, X19
	015 Call AtlasBase.SetDynamicTexture, X0, X1, X2
	016 Move X0, [X19+40]
	017 Compare X0, 0
	018 JumpIfEqual {31}
	019 Move X1, X31
	020 Call DynamicAtlasPage.Commit, X0
	021 Move X8, [X19+40]
	022 Compare X8, 0
	023 JumpIfEqual {34}
	024 Move W1, [X8+16]
	025 Move X2, [X8+24]
	026 Move X0, X19
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Call AtlasBase.SetDynamicTexture, X0, X1, X2
	030 Return 
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Return 
	034 Call 0x1C17F20

Method: System.Boolean IsTextureFormatSupported(UnityEngine.TextureFormat format)

Disassembly:
	0x03CE9D20 CBZ X20, 0x3CE9D3C
	0x03CE9D24 ADRP X8, 0x435000
	0x03CE9D28 LDR X8, [X8 + 0xDF0]
	0x03CE9D2C LDR X9, [X20]
	0x03CE9D30 LDR X8, [X8]
	0x03CE9D34 CMP X9, X8
	0x03CE9D38 B.EQ 0x3CE9D44
	0x03CE9D3C MOV W0, W31
	0x03CE9D40 B 0x3CE9D68
	0x03CE9D44 MOV X0, X20
	0x03CE9D48 BL 0x1C16E08
	0x03CE9D4C LDR V0, [X0]
	0x03CE9D50 LDR W8, [X0 + 0x10]

ISIL:
	001 Subtract W8, W0, 1
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, -51712000
	004 Add X9, X9, 3887
	005 NotImplemented "Instruction ADR not yet implemented."
	006 Move W11, [X9]
	007 Add X10, X10, X11
	008 Move W0, 1
	009 CallNoReturn X10
	010 Return X0
	011 Move W0, W31
	012 Return X0

Method: System.Boolean IsTextureValid(UnityEngine.Texture2D texture, UnityEngine.FilterMode atlasFilterMode)

Disassembly:
	0x03CE9D54 ADD X1, X31, 0x0
	0x03CE9D58 MOV X0, X19
	0x03CE9D5C STR V0, [X31]
	0x03CE9D60 STR W8, [X31 + 0x10]
	0x03CE9D64 BL 0x3CE9D7C
	0x03CE9D68 LDP X20, X19, [X31 + 0x30]
	0x03CE9D6C LDP X30, X21, [X31 + 0x20]
	0x03CE9D70 AND W0, W0, 0x1
	0x03CE9D74 ADD X31, X31, 0x40
	0x03CE9D78 RET
	0x03CE9D7C STR X30, [X31 - 0x20]!
	0x03CE9D80 STP X20, X19, [X31 + 0x10]
	0x03CE9D84 MOV X19, X0
	0x03CE9D88 MOV X20, X1
	0x03CE9D8C LDUR X0, [X1 + 0x4]
	0x03CE9D90 LDUR X1, [X19 + 0x4]
	0x03CE9D94 MOV X2, X31
	0x03CE9D98 BL 0x3DFAD2C
	0x03CE9D9C TBZ X0, 0x0, 0x3CE9DC8
	0x03CE9DA0 LDUR X0, [X20 + 0xC]
	0x03CE9DA4 LDUR X1, [X19 + 0xC]
	0x03CE9DA8 MOV X2, X31
	0x03CE9DAC BL 0x3DFAD2C
	0x03CE9DB0 TBZ X0, 0x0, 0x3CE9DC8
	0x03CE9DB4 LDR W8, [X20]
	0x03CE9DB8 LDR W9, [X19]
	0x03CE9DBC CMP W8, W9
	0x03CE9DC0 CSET W0, EQ
	0x03CE9DC4 B 0x3CE9DCC
	0x03CE9DC8 MOV W0, W31
	0x03CE9DCC LDP X20, X19, [X31 + 0x10]
	0x03CE9DD0 LDR X30, [X31], #0x20
	0x03CE9DD4 RET
	0x03CE9DD8 STP X30, X21, [X31 - 0x20]!
	0x03CE9DDC STP X20, X19, [X31 + 0x10]
	0x03CE9DE0 MOV X1, X31
	0x03CE9DE4 MOV X19, X0
	0x03CE9DE8 BL 0x337B6D8
	0x03CE9DEC MOV W20, W0
	0x03CE9DF0 ADD X0, X19, 0x4
	0x03CE9DF4 MOV X1, X31
	0x03CE9DF8 BL 0x3DFB0C4
	0x03CE9DFC MOVZ W21, 0x5529
	0x03CE9E00 MOVK W21, 0xA5550000
	0x03CE9E04 MADD W20, W20, W21, W0
	0x03CE9E08 ADD X0, X19, 0xC
	0x03CE9E0C MOV X1, X31
	0x03CE9E10 BL 0x3DFB0C4
	0x03CE9E14 MOVZ W8, 0xA091
	0x03CE9E18 MOVK W8, 0x84340000
	0x03CE9E1C MUL W8, W8, W21
	0x03CE9E20 MADD W8, W20, W21, W8
	0x03CE9E24 LDP X20, X19, [X31 + 0x10]
	0x03CE9E28 ADD W0, W8, W0
	0x03CE9E2C LDP X30, X21, [X31], #0x20
	0x03CE9E30 RET
	0x03CE9E34 SUB X31, X31, 0x50
	0x03CE9E38 STR X30, [X31 + 0x40]
	0x03CE9E3C LDR W8, [X0 + 0x10]
	0x03CE9E40 LDR V0, [X0]
	0x03CE9E44 ADD X0, X31, 0x0
	0x03CE9E48 STR W8, [X31 + 0x10]
	0x03CE9E4C STR V0, [X31]
	0x03CE9E50 LDR W8, [X1 + 0x10]
	0x03CE9E54 LDR V0, [X1]
	0x03CE9E58 ADD X1, X31, 0x20
	0x03CE9E5C STR W8, [X31 + 0x30]
	0x03CE9E60 STR V0, [X31 + 0x2]
	0x03CE9E64 BL 0x3CE9D7C
	0x03CE9E68 LDR X30, [X31 + 0x40]
	0x03CE9E6C ORN W8, W31, W0, 0x0
	0x03CE9E70 AND W0, W8, 0x1
	0x03CE9E74 ADD X31, X31, 0x50
	0x03CE9E78 RET
	0x03CE9E7C SUB X31, X31, 0x50
	0x03CE9E80 STP X30, X23, [X31 + 0x20]
	0x03CE9E84 STP X22, X21, [X31 + 0x30]
	0x03CE9E88 STP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W22, [X0+76]
	007 Move W19, W2
	008 Move X21, X0
	009 Move X20, X1
	010 Move [X31+12], W22
	011 Move X8, [X0+80]
	012 Compare X8, 0
	013 JumpIfEqual {25}
	014 Move X9, [X8+24]
	015 Move X0, [X8+64]
	016 Move X3, [X8+40]
	017 Add X2, X31, 12
	018 Move X1, X20
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {94}
	024 Move W22, [X31+12]
	025 Move TEMP, X22
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {40}
	029 Compare X20, 0
	030 JumpIfEqual {113}
	031 Move X8, [X20]
	032 Move X0, X20
	033 Move X9, [X8+488]
	034 Move X1, [X8+496]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {94}
	040 Move TEMP, X22
	041 And TEMP, TEMP, 2
	042 Compare TEMP, 2
	043 JumpIfEqual {78}
	044 Move TEMP, X22
	045 And TEMP, TEMP, 4
	046 Compare TEMP, 4
	047 JumpIfNotEqual {58}
	048 Compare X20, 0
	049 JumpIfEqual {113}
	050 Move X0, X20
	051 Move X1, X31
	052 Call Texture2D.get_format, X0
	053 Call DynamicAtlas.IsTextureFormatSupported, X0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {94}
	058 Move TEMP, X22
	059 And TEMP, TEMP, 8
	060 Compare TEMP, 8
	061 JumpIfNotEqual {101}
	062 Move W8, [X21+48]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Compare X20, 0
	065 JumpIfEqual {113}
	066 Move X0, X20
	067 Move X1, X31
	068 Call Texture.get_activeTextureColorSpace, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W8, W0
	071 NotImplemented "Instruction CSET not yet implemented."
	072 Move TEMP, X22
	073 And TEMP, TEMP, 16
	074 Compare TEMP, 16
	075 JumpIfNotEqual {95}
	076 Compare W8, 0
	077 JumpIfEqual {108}
	078 Compare X20, 0
	079 JumpIfEqual {113}
	080 Move X8, [X20]
	081 Move X0, X20
	082 Move X9, [X8+392]
	083 Move X1, [X8+400]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move W8, [X21+72]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, [X20]
	088 Move X0, X20
	089 Move X9, [X8+424]
	090 Move X1, [X8+432]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move W8, [X21+72]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W0, W31
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Return X0
	101 Move TEMP, X22
	102 And TEMP, TEMP, 16
	103 Compare TEMP, 16
	104 JumpIfEqual {106}
	105 Move W0, 1
	106 Compare X20, 0
	107 JumpIfEqual {113}
	108 Move X0, X20
	109 Move X1, X31
	110 Call Texture.get_filterMode, X0
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CSET not yet implemented."
	113 Call 0x1C17F20

Method: System.Void set_minAtlasSize(System.Int32 value)

Disassembly:
	0x03CE9E94 ADRP X23, 0x435000
	0x03CE9E98 ADRP X22, 0x479000
	0x03CE9E9C LDRB W8, [X21 + 0x72C]
	0x03CE9EA0 LDR X20, [X20 + 0x790]
	0x03CE9EA4 LDR X23, [X23 + 0xE08]
	0x03CE9EA8 LDR X22, [X22 + 0x798]
	0x03CE9EAC MOV X19, X0
	0x03CE9EB0 TBNZ X8, 0x0, 0x3CE9EE0

ISIL:
	001 Move W8, [X0+64]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Return 
	004 Move X8, [X0]
	005 Move [X0+64], W1
	006 Move X2, [X8+408]
	007 Move X1, [X8+416]
	008 CallNoReturn X2

Method: System.Void set_maxAtlasSize(System.Int32 value)

Disassembly:
	0x03CE9EB4 ADRP X0, 0x479000
	0x03CE9EB8 LDR X0, [X0 + 0x790]
	0x03CE9EBC BL 0x1C16CF4
	0x03CE9EC0 ADRP X0, 0x435000
	0x03CE9EC4 LDR X0, [X0 + 0xE08]
	0x03CE9EC8 BL 0x1C16CF4
	0x03CE9ECC ADRP X0, 0x479000
	0x03CE9ED0 LDR X0, [X0 + 0x798]

ISIL:
	001 Move W8, [X0+68]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Return 
	004 Move X8, [X0]
	005 Move [X0+68], W1
	006 Move X2, [X8+408]
	007 Move X1, [X8+416]
	008 CallNoReturn X2

Method: UnityEngine.UIElements.DynamicAtlasFilters get_defaultFilters()

Disassembly:
	0x03CE9ED4 BL 0x1C16CF4
	0x03CE9ED8 MOVZ W8, 0x1

ISIL:
	001 Move W0, 31
	002 Return X0

Method: System.Void set_activeFilters(UnityEngine.UIElements.DynamicAtlasFilters value)

Disassembly:
	0x03CE9EDC STRB W8, [X21 + 0x72C]
	0x03CE9EE0 LDR W8, [X19]
	0x03CE9EE4 LDR X0, [X20]
	0x03CE9EE8 ADD X1, X31, 0x1C
	0x03CE9EEC STR W8, [X31 + 0x1C]
	0x03CE9EF0 BL 0x1C16E04
	0x03CE9EF4 MOV X20, X0
	0x03CE9EF8 LDUR X8, [X19 + 0x4]

ISIL:
	001 Move W8, [X0+76]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Return 
	004 Move X8, [X0]
	005 Move [X0+76], W1
	006 Move X2, [X8+408]
	007 Move X1, [X8+416]
	008 CallNoReturn X2

Method: System.Int32 get_maxSubTextureSize()

Disassembly:
	0x03CE9E8C ADRP X21, 0x6FE000
	0x03CE9E90 ADRP X20, 0x479000

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_maxSubTextureSize(System.Int32 value)

Disassembly:
	0x03CE9EFC LDR X0, [X23]
	0x03CE9F00 ADD X1, X31, 0x10
	0x03CE9F04 STR X8, [X31 + 0x10]
	0x03CE9F08 BL 0x1C16E04
	0x03CE9F0C MOV X21, X0
	0x03CE9F10 LDUR X8, [X19 + 0xC]
	0x03CE9F14 LDR X0, [X23]
	0x03CE9F18 ADD X1, X31, 0x8

ISIL:
	001 Move W8, [X0+72]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Return 
	004 Move X8, [X0]
	005 Move [X0+72], W1
	006 Move X2, [X8+408]
	007 Move X1, [X8+416]
	008 CallNoReturn X2

Method: System.Void set_customFilter(UnityEngine.UIElements.DynamicAtlasCustomFilter value)

Disassembly:
	0x03CE9F1C STR X8, [X31 + 0x8]
	0x03CE9F20 BL 0x1C16E04
	0x03CE9F24 LDR X8, [X22]
	0x03CE9F28 MOV X3, X0
	0x03CE9F2C MOV X1, X20
	0x03CE9F30 MOV X2, X21
	0x03CE9F34 MOV X0, X8
	0x03CE9F38 MOV X4, X31
	0x03CE9F3C BL 0x3227C18
	0x03CE9F40 LDP X20, X19, [X31 + 0x40]
	0x03CE9F44 LDP X22, X21, [X31 + 0x30]
	0x03CE9F48 LDP X30, X23, [X31 + 0x20]
	0x03CE9F4C ADD X31, X31, 0x50
	0x03CE9F50 RET
	0x03CE9F54 LDR X0, [X0 + 0x3C8]
	0x03CE9F58 RET
	0x03CE9F5C STR X1, [X0 + 0x3D0]
	0x03CE9F60 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+80]
	006 Move X2, X31
	007 Move X20, X1
	008 Call Delegate.op_Equality, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {17}
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X30, [X31+32]
	016 Return 
	017 Move X8, [X19]
	018 Move [X19+80], X20
	019 Move X0, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X2, [X8+408]
	023 Move X1, [X8+416]
	024 Move X30, [X31+32]
	025 CallNoReturn X2

Method: System.Void .ctor()

Disassembly:
	0x03CE9F64 STP X30, X21, [X31 - 0x20]!
	0x03CE9F68 STP X20, X19, [X31 + 0x10]
	0x03CE9F6C ADRP X20, 0x6FE000
	0x03CE9F70 ADRP X21, 0x432000
	0x03CE9F74 LDRB W8, [X20 + 0x72D]
	0x03CE9F78 LDR X21, [X21 + 0x898]
	0x03CE9F7C MOV X19, X0
	0x03CE9F80 TBNZ X8, 0x0, 0x3CE9F98
	0x03CE9F84 ADRP X0, 0x432000
	0x03CE9F88 LDR X0, [X0 + 0x898]
	0x03CE9F8C BL 0x1C16CF4
	0x03CE9F90 MOVZ W8, 0x1
	0x03CE9F94 STRB W8, [X20 + 0x72D]
	0x03CE9F98 LDR X0, [X21]
	0x03CE9F9C LDR W8, [X0 + 0xE0]
	0x03CE9FA0 CBNZ W8, 0x3CE9FA8
	0x03CE9FA4 BL 0x1C16DFC
	0x03CE9FA8 MOV X0, X19
	0x03CE9FAC LDP X20, X19, [X31 + 0x10]
	0x03CE9FB0 MOV X1, X31
	0x03CE9FB4 LDP X30, X21, [X31], #0x20
	0x03CE9FB8 B 0x3DEF578
	0x03CE9FBC STP X30, X21, [X31 - 0x20]!
	0x03CE9FC0 STP X20, X19, [X31 + 0x10]
	0x03CE9FC4 ADRP X20, 0x6FE000
	0x03CE9FC8 ADRP X21, 0x479000
	0x03CE9FCC LDRB W8, [X20 + 0x72E]
	0x03CE9FD0 LDR X21, [X21 + 0x7A0]
	0x03CE9FD4 MOV X19, X0
	0x03CE9FD8 TBNZ X8, 0x0, 0x3CE9FF0
	0x03CE9FDC ADRP X0, 0x479000
	0x03CE9FE0 LDR X0, [X0 + 0x7A0]
	0x03CE9FE4 BL 0x1C16CF4
	0x03CE9FE8 MOVZ W8, 0x1
	0x03CE9FEC STRB W8, [X20 + 0x72E]
	0x03CE9FF0 LDR X1, [X21]
	0x03CE9FF4 MOV X0, X19
	0x03CE9FF8 LDP X20, X19, [X31 + 0x10]
	0x03CE9FFC LDP X30, X21, [X31], #0x20
	0x03CEA000 B 0x2736468
	0x03CEA004 STP X30, X21, [X31 - 0x20]!
	0x03CEA008 STP X20, X19, [X31 + 0x10]
	0x03CEA00C ADRP X21, 0x6FD000
	0x03CEA010 ADRP X20, 0x433000
	0x03CEA014 LDRB W8, [X21 + 0x72F]
	0x03CEA018 LDR X20, [X20 + 0xB20]
	0x03CEA01C MOV X19, X0
	0x03CEA020 TBNZ X8, 0x0, 0x3CEA044
	0x03CEA024 ADRP X0, 0x433000
	0x03CEA028 LDR X0, [X0 + 0xB20]
	0x03CEA02C BL 0x1C16CF4
	0x03CEA030 ADRP X0, 0x478000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x6FF000
	009 Move X24, 0x47A000
	010 Move X20, 0x47A000
	011 Move X22, 0x47A000
	012 Move X21, 0x47A000
	013 Move W8, [X23+1827]
	014 Move X24, [X24+1816]
	015 Move X20, [X20+1824]
	016 Move X22, [X22+1832]
	017 Move X21, [X21+1840]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x47A000
	024 Move X0, [X0+1824]
	025 Call 0x1C17CF4
	026 Move X0, 0x47A000
	027 Move X0, [X0+1816]
	028 Call 0x1C17CF4
	029 Move X0, 0x47A000
	030 Move X0, [X0+1840]
	031 Call 0x1C17CF4
	032 Move X0, 0x47A000
	033 Move X0, [X0+1832]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+1827], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call Dictionary`2<Object, Object>..ctor, X0
	042 Move [X19+24], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X2, [X21]
	046 Move W1, 1
	047 Move X20, X0
	048 Call List`1<Object>..ctor, X0, X1
	049 Move X8, -52416512
	050 Move V0, [X8+185]
	051 Move [X19+56], X20
	052 Move X0, X19
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move [X19+4], V0
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X30, [X31+64]
	061 Call AtlasBase..ctor, X0
	062 Return 

