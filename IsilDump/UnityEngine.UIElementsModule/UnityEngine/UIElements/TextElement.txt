Type: UnityEngine.UIElements.TextElement

Method: System.Void .ctor()

Disassembly:
	0x03E10684 CMP X11, X1
	0x03E10688 B.EQ 0x3E1090C
	0x03E1068C SUBS X9, X9, 0x1
	0x03E10690 ADD X10, X10, 0x10
	0x03E10694 B.NE 0x3E10680
	0x03E10698 MOVZ W2, 0x9
	0x03E1069C MOV X0, X20
	0x03E106A0 BL 0x1C5C788
	0x03E106A4 B 0x3E1091C
	0x03E106A8 STP S9, S8, [X31 + 0x40]
	0x03E106AC B.GT 0x3E109BC
	0x03E106B0 LDR V12, [X31 + 0x2C]
	0x03E106B4 ADD X8, X31, 0x48
	0x03E106B8 SXTW X27, W23
	0x03E106BC ADD X21, X8, 0x10
	0x03E106C0 ADD X24, X8, 0x30
	0x03E106C4 ADD X25, X8, 0xAC
	0x03E106C8 MOVZ W29, 0x60
	0x03E106CC MOV W26, W22
	0x03E106D0 CMP W26, W22
	0x03E106D4 B.NE 0x3E106F4
	0x03E106D8 MOV X0, X20
	0x03E106DC MOV W1, W22
	0x03E106E0 BL 0x3E1367C
	0x03E106E4 LDR X8, [X20 + 0x3D8]
	0x03E106E8 CBZ X8, 0x3E10A00
	0x03E106EC LDP S11, S8, [X31 + 0x40]
	0x03E106F0 B 0x3E107BC
	0x03E106F4 LDR X0, [X20 + 0x3D8]
	0x03E106F8 CMP W26, W23
	0x03E106FC B.NE 0x3E1075C
	0x03E10700 CBZ X0, 0x3E10A00
	0x03E10704 MOV X1, X31
	0x03E10708 BL 0x3CC98D0
	0x03E1070C CBZ X0, 0x3E10A00
	0x03E10710 LDR X8, [X0 + 0x48]
	0x03E10714 CBZ X8, 0x3E10A00
	0x03E10718 LDR W9, [X8 + 0x18]
	0x03E1071C CMP W23, W9
	0x03E10720 B.CS 0x3E10A04
	0x03E10724 LDR X0, [X20 + 0x3D8]
	0x03E10728 CBZ X0, 0x3E10A00
	0x03E1072C MADD X8, X27, X29, X8
	0x03E10730 LDR W1, [X8 + 0x38]
	0x03E10734 MOVZ W3, 0x1
	0x03E10738 MOV W2, W31
	0x03E1073C MOV X4, X31
	0x03E10740 BL 0x3CC9CC0
	0x03E10744 LDR X8, [X20 + 0x3D8]
	0x03E10748 CBZ X8, 0x3E10A00
	0x03E1074C MOV V11.16B, V0.16B
	0x03E10750 MOV V8.16B, V1.16B
	0x03E10754 MOV W1, W19
	0x03E10758 B 0x3E107C0
	0x03E1075C CBZ X0, 0x3E10A00
	0x03E10760 MOV X1, X31
	0x03E10764 BL 0x3CC98D0
	0x03E10768 CBZ X0, 0x3E10A00
	0x03E1076C LDR X8, [X0 + 0x48]
	0x03E10770 CBZ X8, 0x3E10A00
	0x03E10774 LDR W9, [X8 + 0x18]
	0x03E10778 CMP W26, W9
	0x03E1077C B.CS 0x3E10A04
	0x03E10780 LDR X0, [X20 + 0x3D8]
	0x03E10784 CBZ X0, 0x3E10A00
	0x03E10788 SMADDL X8, X26, X29, X8
	0x03E1078C LDR W1, [X8 + 0x38]
	0x03E10790 MOVZ W3, 0x1
	0x03E10794 MOV W2, W31
	0x03E10798 MOV X4, X31
	0x03E1079C BL 0x3CC9CC0
	0x03E107A0 MOV X0, X20
	0x03E107A4 MOV W1, W26
	0x03E107A8 MOV V11.16B, V0.16B
	0x03E107AC MOV V8.16B, V1.16B
	0x03E107B0 BL 0x3E1367C
	0x03E107B4 LDR X8, [X20 + 0x3D8]
	0x03E107B8 CBZ X8, 0x3E10A00
	0x03E107BC MOV W1, W0
	0x03E107C0 MOVZ W2, 0x1
	0x03E107C4 MOVZ W3, 0x1
	0x03E107C8 MOV X0, X8
	0x03E107CC MOV X4, X31
	0x03E107D0 BL 0x3CC9CC0
	0x03E107D4 MOVI V1.2D, 0x0
	0x03E107D8 STR X31, [X31 + 0x298]
	0x03E107DC STR X31, [X31 + 0x290]
	0x03E107E0 STP V1, V1, [X28 + 0x90]
	0x03E107E4 STP V1, V1, [X28 + 0xB0]
	0x03E107E8 STP V1, V1, [X28 + 0xD0]
	0x03E107EC STUR V1, [X28 + 0xEC]
	0x03E107F0 STP V1, V1, [X28 + 0x10]
	0x03E107F4 STP V1, V1, [X28 + 0x30]
	0x03E107F8 STP V1, V1, [X28 + 0x50]
	0x03E107FC STR V1, [X28 + 0x7]
	0x03E10800 STR W31, [X31 + 0x310]
	0x03E10804 LDR X8, [X20]
	0x03E10808 ADRP X10, 0x30D000
	0x03E1080C MOV V13.16B, V0.16B
	0x03E10810 LDRH W9, [X8 + 0x12E]
	0x03E10814 LDR X10, [X10 + 0x628]
	0x03E10818 LDR X1, [X10]
	0x03E1081C CBZ X9, 0x3E10840
	0x03E10820 LDR X10, [X8 + 0xB0]
	0x03E10824 ADD X10, X10, 0x8
	0x03E10828 LDUR X11, [X10 - 0x8]
	0x03E1082C CMP X11, X1
	0x03E10830 B.EQ 0x3E10850
	0x03E10834 SUBS X9, X9, 0x1
	0x03E10838 ADD X10, X10, 0x10
	0x03E1083C B.NE 0x3E10828
	0x03E10840 MOVZ W2, 0x9
	0x03E10844 MOV X0, X20
	0x03E10848 BL 0x1C5C788
	0x03E1084C B 0x3E10860
	0x03E10850 LDR W9, [X10]
	0x03E10854 ADD W9, W9, 0x9
	0x03E10858 ADD X8, X8, W9, 0x4, SXTW
	0x03E1085C ADD X0, X8, 0x138
	0x03E10860 LDP S1, S0, [X31 + 0x18]
	0x03E10864 LDP X8, X1, [X0]
	0x03E10868 MOV X0, X20
	0x03E1086C FADD S11, S0, S11
	0x03E10870 FADD S8, S1, S8
	0x03E10874 FADD S0, S0, S13
	0x03E10878 STR S8, [X31 + 0x44]
	0x03E1087C FSUB S8, S8, S12
	0x03E10880 FSUB S9, S0, S11
	0x03E10884 BLR X8
	0x03E10888 MOV V13.16B, V0.16B
	0x03E1088C LDR V0, [X28]
	0x03E10890 ADD X1, X31, 0x320
	0x03E10894 MOVZ W2, 0x6C
	0x03E10898 MOV X0, X24

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x5D9000
	010 Move X25, 0x2E6000
	011 Move X20, 0x35B000
	012 Move X21, 0x30D000
	013 Move W8, [X22+878]
	014 Move X25, [X25+632]
	015 Move X20, [X20+1232]
	016 Move X21, [X21+3784]
	017 Move X19, X0
	018 Add X24, X0, 1144
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0x354000
	024 Move X0, [X0+3400]
	025 Call 0x1C17CF4
	026 Move X0, 0x30E000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x30E000
	030 Move X0, [X0+1632]
	031 Call 0x1C17CF4
	032 Move X0, 0x2E6000
	033 Move X0, [X0+632]
	034 Call 0x1C17CF4
	035 Move X0, 0x35B000
	036 Move X0, [X0+1240]
	037 Call 0x1C17CF4
	038 Move X0, 0x35B000
	039 Move X0, [X0+1248]
	040 Call 0x1C17CF4
	041 Move X0, 0x30D000
	042 Move X0, [X0+3784]
	043 Call 0x1C17CF4
	044 Move X0, 0x35B000
	045 Move X0, [X0+1232]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X22+878], W8
	049 Move X22, 0x354000
	050 Move X23, 0x35B000
	051 Move X22, [X22+3400]
	052 Move X23, [X23+1240]
	053 Move X8, [X25]
	054 Move X10, -53620736
	055 Move V0, [X10+211]
	056 Move X10, -53628928
	057 Move X8, [X8+184]
	058 Move V1, [X10+165]
	059 Move W9, 257
	060 Move W10, 1
	061 Move X8, [X8]
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W25, TEMP
	065 Move [X19+1002], W10
	066 Move [X19+1053], W10
	067 Move [X19+992], X8
	068 Add X8, X19, 1137
	069 NotImplemented "Instruction STRH not yet implemented."
	070 Move [X19+1048], W31
	071 Move [X19+1056], W25
	072 Move [X8], W9
	073 Move W8, 0x3F800000
	074 Move X0, X19
	075 Move X1, X31
	076 Move [X24], V0
	077 Move [X24+8], V1
	078 Move [X19+1176], W8
	079 Call BindableElement..ctor, X0
	080 Move W1, 1
	081 Move X0, X19
	082 Move X2, X31
	083 Call VisualElement.set_requireMeasureFunction, X0, X1
	084 Move [X19+36], W25
	085 Move X0, [X20]
	086 Call 0x1C17F10
	087 Move X1, X19
	088 Move X20, X0
	089 Call UITKTextHandle..ctor, X0, X1
	090 Move [X19+984], X20
	091 Move X0, [X21]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X21]
	097 Move X8, [X0+184]
	098 Move X0, X19
	099 Move X2, X31
	100 Move X1, [X8]
	101 Call VisualElement.AddToClassList, X0, X1
	102 Move X0, [X22]
	103 Move X20, [X19+824]
	104 Call 0x1C17F10
	105 Move X2, [X23]
	106 Move X1, X19
	107 Move X3, X31
	108 Move X21, X0
	109 Call Action`1<Object>..ctor, X0, X1, X2
	110 Move X0, X20
	111 Move X1, X21
	112 Move X2, X31
	113 Call Delegate.Combine, X0, X1
	114 Compare X0, 0
	115 JumpIfEqual {122}
	116 Move X21, [X22]
	117 Move X20, X0
	118 Move X1, X21
	119 Call 0x1C17E00
	120 Compare X0, 0
	121 JumpIfEqual {150}
	122 Move X8, 0x30E000
	123 Move X8, [X8+1632]
	124 Move [X19+824], X0
	125 Move X20, 0x35B000
	126 Move X21, 0x30E000
	127 Move X0, [X8]
	128 Move X20, [X20+1248]
	129 Move X21, [X21+1624]
	130 Call 0x1C17F10
	131 Move X2, [X20]
	132 Move X1, X19
	133 Move X3, X31
	134 Move X20, X0
	135 Call 0x2D0F824, X0, X1, X2
	136 Move X3, [X21]
	137 Move X0, X19
	138 Move X1, X20
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X22, [X31+32]
	142 Move X21, [X31+40]
	143 Move X24, [X31+16]
	144 Move X23, [X31+24]
	145 Move W2, W31
	146 Move X30, [X31+64]
	147 Move X25, [X31+72]
	148 Call 0x21A2534, X0, X1, X2
	149 Return 
	150 Move X0, X20
	151 Move X1, X21
	152 Call 0x1C181E0

Method: UnityEngine.UIElements.UITKTextHandle get_uitkTextHandle()

Disassembly:
	0x03E1089C MOV V14.16B, V1.16B
	0x03E108A0 MOV V15.16B, V2.16B

ISIL:
	001 Move X0, [X0+984]
	002 Return X0

Method: System.Void set_uitkTextHandle(UnityEngine.UIElements.UITKTextHandle value)

Disassembly:
	0x03E108A4 MOV V10.16B, V3.16B
	0x03E108A8 STR V0, [X21]

ISIL:
	001 Move [X0+984], X1
	002 Return 

Method: System.Void OnGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent e)

Disassembly:
	0x03E108AC BL 0x3EB1AC0

ISIL:
No ISIL was generated
Method: System.String get_text()

Disassembly:
	0x03E109C8 CMP X8, X9
	0x03E109CC B.NE 0x3E10A08
	0x03E109D0 ADD X31, X31, 0x3A0
	0x03E109D4 LDP X20, X19, [X31 + 0x90]
	0x03E109D8 LDP X22, X21, [X31 + 0x80]
	0x03E109DC LDP X24, X23, [X31 + 0x70]
	0x03E109E0 LDP X26, X25, [X31 + 0x60]
	0x03E109E4 LDP X28, X27, [X31 + 0x50]
	0x03E109E8 LDP X29, X30, [X31 + 0x40]
	0x03E109EC LDP D9, D8, [X31 + 0x30]
	0x03E109F0 LDP D11, D10, [X31 + 0x20]
	0x03E109F4 LDP D13, D12, [X31 + 0x10]
	0x03E109F8 LDP D15, D14, [X31], #0xA0
	0x03E109FC RET
	0x03E10A00 BL 0x1C16F20
	0x03E10A04 BL 0x1C16F28
	0x03E10A08 BL 0x3EB1B20
	0x03E10A0C STP D15, D14, [X31 - 0x80]!
	0x03E10A10 STP D13, D12, [X31 + 0x10]
	0x03E10A14 STP D11, D10, [X31 + 0x20]
	0x03E10A18 STP D9, D8, [X31 + 0x30]
	0x03E10A1C STP X29, X30, [X31 + 0x40]
	0x03E10A20 STP X24, X23, [X31 + 0x50]
	0x03E10A24 STP X22, X21, [X31 + 0x60]
	0x03E10A28 STP X20, X19, [X31 + 0x70]
	0x03E10A2C SUB X31, X31, 0x240
	0x03E10A30 MRS X22, 0xC000
	0x03E10A34 LDR X8, [X22 + 0x28]
	0x03E10A38 ADRP X21, 0x5D8000
	0x03E10A3C MOV X19, X1
	0x03E10A40 MOV X20, X0
	0x03E10A44 STR X8, [X31 + 0x238]
	0x03E10A48 LDRB W8, [X21 + 0x395]
	0x03E10A4C ADD X24, X31, 0x1C0
	0x03E10A50 TBNZ X8, 0x0, 0x3E10A80
	0x03E10A54 ADRP X0, 0x30C000
	0x03E10A58 LDR X0, [X0 + 0xE80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D9000
	006 Move X20, 0x30E000
	007 Move W8, [X21+879]
	008 Move X20, [X20+1808]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x30E000
	015 Move X0, [X0+1808]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+879], W8
	019 Move X8, [X19]
	020 Move X1, [X20]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Compare X9, 0
	023 JumpIfEqual {30}
	024 Move X10, [X8+176]
	025 Add X10, X10, 8
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Subtract X9, X9, 1
	029 Add X10, X10, 16
	030 Move X0, X19
	031 Move W2, W31
	032 Call 0x1C5D788
	033 NotImplemented "Instruction LDRSW not yet implemented."
	034 Add X8, X8, X9
	035 Add X0, X8, 312
	036 Move X2, [X0]
	037 Move X1, [X0+8]
	038 Move X0, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 CallNoReturn X2

Method: System.Void set_text(System.String value)

Disassembly:
	0x03E10A5C BL 0x1C16CF4
	0x03E10A60 ADRP X0, 0x30D000
	0x03E10A64 LDR X0, [X0 + 0x628]
	0x03E10A68 BL 0x1C16CF4
	0x03E10A6C ADRP X0, 0x30C000
	0x03E10A70 LDR X0, [X0 + 0xE98]
	0x03E10A74 BL 0x1C16CF4
	0x03E10A78 MOVZ W8, 0x1
	0x03E10A7C STRB W8, [X21 + 0x395]
	0x03E10A80 MOVI V0.2D, 0x0
	0x03E10A84 MOV X0, X20
	0x03E10A88 MOV X1, X31
	0x03E10A8C STP X31, X31, [X31 + 0x130]
	0x03E10A90 STP V0, V0, [X31 + 0x1C0]
	0x03E10A94 STP V0, V0, [X31 + 0x1E0]
	0x03E10A98 STP V0, V0, [X31 + 0x200]
	0x03E10A9C STUR V0, [X24 + 0x5C]
	0x03E10AA0 BL 0x3DEC0CC
	0x03E10AA4 CBZ X0, 0x3E10E50
	0x03E10AA8 ADRP X10, 0x30C000
	0x03E10AAC LDR X8, [X0]
	0x03E10AB0 LDR X10, [X10 + 0xE80]
	0x03E10AB4 MOV X21, X0
	0x03E10AB8 LDRH W9, [X8 + 0x12E]
	0x03E10ABC LDR X1, [X10]
	0x03E10AC0 CBZ X9, 0x3E10AE4
	0x03E10AC4 LDR X10, [X8 + 0xB0]
	0x03E10AC8 ADD X10, X10, 0x8
	0x03E10ACC LDUR X11, [X10 - 0x8]
	0x03E10AD0 CMP X11, X1
	0x03E10AD4 B.EQ 0x3E10AF4
	0x03E10AD8 SUBS X9, X9, 0x1
	0x03E10ADC ADD X10, X10, 0x10
	0x03E10AE0 B.NE 0x3E10ACC
	0x03E10AE4 MOVZ W2, 0x2
	0x03E10AE8 MOV X0, X21
	0x03E10AEC BL 0x1C5C788
	0x03E10AF0 B 0x3E10B04
	0x03E10AF4 LDR W9, [X10]
	0x03E10AF8 ADD W9, W9, 0x2
	0x03E10AFC ADD X8, X8, W9, 0x4, SXTW
	0x03E10B00 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5D9000
	007 Move X21, 0x30E000
	008 Move W8, [X22+880]
	009 Move X21, [X21+1808]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x30E000
	017 Move X0, [X0+1808]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+880], W8
	021 Move X8, [X20]
	022 Move X1, [X21]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 1
	033 Move X0, X20
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 1
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X3, [X0]
	040 Move X2, [X0+8]
	041 Move X0, X20
	042 Move X1, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 CallNoReturn X3

Method: System.Boolean get_enableRichText()

Disassembly:
	0x03E10B04 LDP X8, X1, [X0]
	0x03E10B08 ADRP X23, 0x30D000

ISIL:
	001 Move W0, [X0+1000]
	002 Return X0

Method: System.Void set_enableRichText(System.Boolean value)

Disassembly:
	0x03E10B0C LDR X23, [X23 + 0x628]
	0x03E10B10 MOV X0, X21
	0x03E10B14 BLR X8
	0x03E10B18 CMP W0, 0x1
	0x03E10B1C B.NE 0x3E10B48
	0x03E10B20 ADRP X21, 0x30C000
	0x03E10B24 LDR X21, [X21 + 0xE98]
	0x03E10B28 LDR X0, [X21]

ISIL:
	001 Move W9, [X0+1000]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move X1, X31
	006 Move [X0+1000], W8
	007 Call VisualElement.MarkDirtyRepaint, X0
	008 Return 

Method: System.Boolean get_parseEscapeSequences()

Disassembly:
	0x03E10B2C LDR W8, [X0 + 0xE0]
	0x03E10B30 CBNZ W8, 0x3E10B3C

ISIL:
	001 Move W0, [X0+1001]
	002 Return X0

Method: System.Void set_parseEscapeSequences(System.Boolean value)

Disassembly:
	0x03E10B34 BL 0x1C16DFC
	0x03E10B38 LDR X0, [X21]
	0x03E10B3C LDR X8, [X0 + 0xB8]
	0x03E10B40 LDP D9, D10, [X8 + 0x18]
	0x03E10B44 B 0x3E10B50
	0x03E10B48 FMOV V9.2S, 0x0
	0x03E10B4C MOV V10.16B, V9.16B
	0x03E10B50 LDR X8, [X20]

ISIL:
	001 Move W9, [X0+1001]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move X1, X31
	006 Move [X0+1001], W8
	007 Call VisualElement.MarkDirtyRepaint, X0
	008 Return 

Method: System.Boolean get_displayTooltipWhenElided()

Disassembly:
	0x03E10B54 LDR X21, [X20 + 0x3D8]
	0x03E10B58 LDR X1, [X23]

ISIL:
	001 Move W0, [X0+1002]
	002 Return X0

Method: System.Void set_displayTooltipWhenElided(System.Boolean value)

Disassembly:
	0x03E10B5C LDRH W9, [X8 + 0x12E]
	0x03E10B60 CBZ X9, 0x3E10B84
	0x03E10B64 LDR X10, [X8 + 0xB0]
	0x03E10B68 ADD X10, X10, 0x8
	0x03E10B6C LDUR X11, [X10 - 0x8]
	0x03E10B70 CMP X11, X1
	0x03E10B74 B.EQ 0x3E10B94
	0x03E10B78 SUBS X9, X9, 0x1
	0x03E10B7C ADD X10, X10, 0x10
	0x03E10B80 B.NE 0x3E10B6C
	0x03E10B84 MOVZ W2, 0x4
	0x03E10B88 MOV X0, X20
	0x03E10B8C BL 0x1C5C788
	0x03E10B90 B 0x3E10BA4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W9, [X0+1002]
	004 And W8, W1, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move X19, X0
	010 Move [X0+1002], W8
	011 Call TextElement.UpdateVisibleText, X0
	012 Move X0, X19
	013 Move X1, X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call VisualElement.MarkDirtyRepaint, X0
	017 Return 

Method: System.Boolean get_isElided()

Disassembly:
	0x03E10B94 LDR W9, [X10]
	0x03E10B98 ADD W9, W9, 0x4

ISIL:
	001 Move W0, [X0+1003]
	002 Return X0

Method: System.Void set_isElided(System.Boolean value)

Disassembly:
	0x03E10B9C ADD X8, X8, W9, 0x4, SXTW
	0x03E10BA0 ADD X0, X8, 0x138
	0x03E10BA4 LDP X8, X1, [X0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+1003], W8
	003 Return 

Method: System.Void OnGenerateVisualContent(UnityEngine.UIElements.MeshGenerationContext mgc)

Disassembly:
	0x03E10BA8 MOV X0, X20
	0x03E10BAC BLR X8
	0x03E10BB0 CBZ X21, 0x3E10E50
	0x03E10BB4 MOV W1, W0
	0x03E10BB8 MOV X0, X21
	0x03E10BBC MOV X2, X31
	0x03E10BC0 BL 0x3CCAC98
	0x03E10BC4 LDR X8, [X20]
	0x03E10BC8 LDR X1, [X23]
	0x03E10BCC MOV V12.16B, V0.16B
	0x03E10BD0 STR D9, [X31 + 0x8]
	0x03E10BD4 LDRH W9, [X8 + 0x12E]
	0x03E10BD8 CBZ X9, 0x3E10BFC
	0x03E10BDC LDR X10, [X8 + 0xB0]
	0x03E10BE0 ADD X10, X10, 0x8
	0x03E10BE4 LDUR X11, [X10 - 0x8]
	0x03E10BE8 CMP X11, X1
	0x03E10BEC B.EQ 0x3E10C0C
	0x03E10BF0 SUBS X9, X9, 0x1
	0x03E10BF4 ADD X10, X10, 0x10
	0x03E10BF8 B.NE 0x3E10BE4
	0x03E10BFC MOVZ W2, 0x15
	0x03E10C00 MOV X0, X20
	0x03E10C04 BL 0x1C5C788
	0x03E10C08 B 0x3E10C1C
	0x03E10C0C LDR W9, [X10]
	0x03E10C10 ADD W9, W9, 0x15
	0x03E10C14 ADD X8, X8, W9, 0x4, SXTW
	0x03E10C18 ADD X0, X8, 0x138
	0x03E10C1C LDP X8, X1, [X0]
	0x03E10C20 MOV X0, X20
	0x03E10C24 BLR X8
	0x03E10C28 MOV X0, X20
	0x03E10C2C MOV X1, X31
	0x03E10C30 MOV V9.16B, V0.16B
	0x03E10C34 BL 0x3DEC4BC
	0x03E10C38 ADRP X8, 0xFFFFFFFFFCCDA000
	0x03E10C3C LDR V2, [X8 + 0x2A4]
	0x03E10C40 MOV V1.16B, V0.16B
	0x03E10C44 MOV V0.16B, V9.16B
	0x03E10C48 MOV X0, X31
	0x03E10C4C BL 0x3CE815C
	0x03E10C50 MOVI V1.2D, 0x0
	0x03E10C54 STP X31, X31, [X31 + 0x130]
	0x03E10C58 STP V1, V1, [X31 + 0x1C0]
	0x03E10C5C STP V1, V1, [X31 + 0x1E0]
	0x03E10C60 STP V1, V1, [X31 + 0x200]
	0x03E10C64 STUR V1, [X24 + 0x5C]
	0x03E10C68 STP V1, V1, [X31 + 0x140]
	0x03E10C6C STP V1, V1, [X31 + 0x160]
	0x03E10C70 STP V1, V1, [X31 + 0x180]
	0x03E10C74 STR V1, [X31 + 0x1A]
	0x03E10C78 STR W31, [X31 + 0x1B0]
	0x03E10C7C LDR X8, [X20]
	0x03E10C80 LDR X1, [X23]
	0x03E10C84 STR D10, [X31]
	0x03E10C88 LDRH W9, [X8 + 0x12E]
	0x03E10C8C CBZ X9, 0x3E10CB0
	0x03E10C90 LDR X10, [X8 + 0xB0]
	0x03E10C94 ADD X10, X10, 0x8
	0x03E10C98 LDUR X11, [X10 - 0x8]
	0x03E10C9C CMP X11, X1
	0x03E10CA0 B.EQ 0x3E10CC4
	0x03E10CA4 SUBS X9, X9, 0x1
	0x03E10CA8 ADD X10, X10, 0x10
	0x03E10CAC B.NE 0x3E10C98
	0x03E10CB0 MOVZ W2, 0x13
	0x03E10CB4 MOV X0, X20
	0x03E10CB8 MOV V8.16B, V0.16B
	0x03E10CBC BL 0x1C5C788
	0x03E10CC0 B 0x3E10CD8
	0x03E10CC4 LDR W9, [X10]
	0x03E10CC8 MOV V8.16B, V0.16B
	0x03E10CCC ADD W9, W9, 0x13
	0x03E10CD0 ADD X8, X8, W9, 0x4, SXTW
	0x03E10CD4 ADD X0, X8, 0x138
	0x03E10CD8 LDP X8, X1, [X0]
	0x03E10CDC MOV X0, X20
	0x03E10CE0 BLR X8
	0x03E10CE4 LDR X8, [X20]
	0x03E10CE8 LDR X1, [X23]
	0x03E10CEC MOV V10.16B, V0.16B
	0x03E10CF0 LDRH W9, [X8 + 0x12E]
	0x03E10CF4 CBZ X9, 0x3E10D18
	0x03E10CF8 LDR X10, [X8 + 0xB0]
	0x03E10CFC ADD X10, X10, 0x8
	0x03E10D00 LDUR X11, [X10 - 0x8]
	0x03E10D04 CMP X11, X1
	0x03E10D08 B.EQ 0x3E10D28
	0x03E10D0C SUBS X9, X9, 0x1
	0x03E10D10 ADD X10, X10, 0x10
	0x03E10D14 B.NE 0x3E10D00
	0x03E10D18 MOVZ W2, 0x13
	0x03E10D1C MOV X0, X20
	0x03E10D20 BL 0x1C5C788
	0x03E10D24 B 0x3E10D38
	0x03E10D28 LDR W9, [X10]
	0x03E10D2C ADD W9, W9, 0x13
	0x03E10D30 ADD X8, X8, W9, 0x4, SXTW
	0x03E10D34 ADD X0, X8, 0x138
	0x03E10D38 LDP X8, X1, [X0]
	0x03E10D3C MOV X0, X20
	0x03E10D40 ADD X21, X31, 0x10
	0x03E10D44 BLR X8
	0x03E10D48 LDR X8, [X20]
	0x03E10D4C LDR X1, [X23]
	0x03E10D50 MOV V11.16B, V1.16B
	0x03E10D54 LDRH W9, [X8 + 0x12E]
	0x03E10D58 CBZ X9, 0x3E10D7C
	0x03E10D5C LDR X10, [X8 + 0xB0]
	0x03E10D60 ADD X10, X10, 0x8
	0x03E10D64 LDUR X11, [X10 - 0x8]
	0x03E10D68 CMP X11, X1
	0x03E10D6C B.EQ 0x3E10D8C
	0x03E10D70 SUBS X9, X9, 0x1
	0x03E10D74 ADD X10, X10, 0x10
	0x03E10D78 B.NE 0x3E10D64
	0x03E10D7C MOVZ W2, 0x2
	0x03E10D80 MOV X0, X20
	0x03E10D84 BL 0x1C5C788
	0x03E10D88 B 0x3E10D9C
	0x03E10D8C LDR W9, [X10]
	0x03E10D90 ADD W9, W9, 0x2
	0x03E10D94 ADD X8, X8, W9, 0x4, SXTW
	0x03E10D98 ADD X0, X8, 0x138
	0x03E10D9C LDP X8, X1, [X0]
	0x03E10DA0 MOV X0, X20
	0x03E10DA4 FSUB S15, S11, S12
	0x03E10DA8 BLR X8
	0x03E10DAC MOV V11.16B, V0.16B
	0x03E10DB0 LDR V0, [X31 + 0x13]
	0x03E10DB4 ADD X20, X31, 0x10
	0x03E10DB8 ADD X0, X20, 0x30
	0x03E10DBC ADD X1, X31, 0x1C0
	0x03E10DC0 MOVZ W2, 0x6C
	0x03E10DC4 MOV V9.16B, V1.16B
	0x03E10DC8 MOV V13.16B, V2.16B
	0x03E10DCC MOV V14.16B, V3.16B
	0x03E10DD0 STR V0, [X31 + 0x2]
	0x03E10DD4 BL 0x3EB1AC0
	0x03E10DD8 ADD X0, X20, 0xAC
	0x03E10DDC ADD X1, X31, 0x140
	0x03E10DE0 MOVZ W2, 0x74

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D9000
	006 Move W8, [X21+881]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x30E000
	014 Move X0, [X0+1584]
	015 Call 0x1C17CF4
	016 Move X0, 0x30E000
	017 Move X0, [X0+1576]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+881], W8
	021 Move X0, X20
	022 Call TextElement.UpdateVisibleText, X0
	023 Move X0, X19
	024 Move X1, X20
	025 Move X2, X31
	026 Call MeshGenerationContextUtils.Text, X0, X1
	027 Move X0, X20
	028 Call TextElement.ShouldElide, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {50}
	033 Move X0, [X20+984]
	034 Compare X0, 0
	035 JumpIfEqual {178}
	036 Call UITKTextHandle.TextLibraryCanElide, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {48}
	041 Move X0, [X20+984]
	042 Compare X0, 0
	043 JumpIfEqual {178}
	044 Move X1, X31
	045 Call TextHandle.IsElided, X0
	046 And W8, W0, 1
	047 Move [X20+1003], W8
	048 Move X0, X20
	049 Call TextElement.UpdateTooltip, X0
	050 Move X0, X20
	051 Call TextElement.UpdateTooltip, X0
	052 Compare X20, 0
	053 JumpIfEqual {178}
	054 Move X21, 0x30E000
	055 Move X8, [X20]
	056 Move X21, [X21+1576]
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Move X1, [X21]
	059 Compare X9, 0
	060 JumpIfEqual {67}
	061 Move X10, [X8+176]
	062 Add X10, X10, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X9, X9, 1
	066 Add X10, X10, 16
	067 Move W2, 12
	068 Move X0, X20
	069 Call 0x1C5D788
	070 Move W9, [X10]
	071 Add W9, W9, 12
	072 Add X8, X8, W9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X20
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {102}
	082 Move X0, X20
	083 Call TextElement.get_selectingManipulator, X0
	084 Compare X0, 0
	085 JumpIfEqual {178}
	086 Move X0, [X0+32]
	087 Compare X0, 0
	088 JumpIfEqual {178}
	089 Call TextElement.get_hasFocus, X0
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfNotEqual {102}
	094 Move X0, X20
	095 Move X1, X19
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 Move X30, [X31+32]
	099 Move X21, [X31+40]
	100 Call TextElement.DrawHighlighting, X0, X1
	101 Return 
	102 Move X10, 0x30E000
	103 Move X8, [X20]
	104 Move X10, [X10+1584]
	105 NotImplemented "Instruction LDRH not yet implemented."
	106 Move X1, [X10]
	107 Compare X9, 0
	108 JumpIfEqual {115}
	109 Move X10, [X8+176]
	110 Add X10, X10, 8
	111 NotImplemented "Instruction LDUR not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Subtract X9, X9, 1
	114 Add X10, X10, 16
	115 Move W2, 2
	116 Move X0, X20
	117 Call 0x1C5D788
	118 Move W9, [X10]
	119 Add W9, W9, 2
	120 Add X8, X8, W9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X0, X20
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {173}
	130 Move X8, [X20]
	131 Move X1, [X21]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X20
	142 Move W2, W31
	143 Call 0x1C5D788
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add X8, X8, X9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X1, [X0+8]
	149 Move X0, X20
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {173}
	155 Move X0, X20
	156 Call TextElement.get_selectingManipulator, X0
	157 Compare X0, 0
	158 JumpIfEqual {178}
	159 Move X8, [X0+16]
	160 Compare X8, 0
	161 JumpIfEqual {178}
	162 Move W8, [X8+48]
	163 Compare W8, 0
	164 JumpIfEqual {173}
	165 Move X0, X20
	166 Move X1, X19
	167 Move X20, [X31+16]
	168 Move X19, [X31+24]
	169 Move X30, [X31+32]
	170 Move X21, [X31+40]
	171 Call TextElement.DrawCaret, X0, X1
	172 Return 
	173 Move X20, [X31+16]
	174 Move X19, [X31+24]
	175 Move X30, [X31+32]
	176 Move X21, [X31+40]
	177 Return 
	178 Call 0x1C17F20

Method: System.String ElideText(System.String drawText, System.String ellipsisText, System.Single width, UnityEngine.UIElements.TextOverflowPosition textOverflowPosition)

Disassembly:
	0x03E11E58 CBZ X19, 0x3E120B0
	0x03E11E5C ADRP X10, 0x30C000
	0x03E11E60 LDR X8, [X19]
	0x03E11E64 LDR X10, [X10 + 0x630]
	0x03E11E68 LDRH W9, [X8 + 0x12E]
	0x03E11E6C LDR X1, [X10]
	0x03E11E70 CBZ X9, 0x3E11E94
	0x03E11E74 LDR X10, [X8 + 0xB0]
	0x03E11E78 ADD X10, X10, 0x8
	0x03E11E7C LDUR X11, [X10 - 0x8]
	0x03E11E80 CMP X11, X1
	0x03E11E84 B.EQ 0x3E11EA4
	0x03E11E88 SUBS X9, X9, 0x1
	0x03E11E8C ADD X10, X10, 0x10
	0x03E11E90 B.NE 0x3E11E7C
	0x03E11E94 MOVZ W2, 0x2
	0x03E11E98 MOV X0, X19
	0x03E11E9C BL 0x1C5C788
	0x03E11EA0 B 0x3E11EB4
	0x03E11EA4 LDR W9, [X10]
	0x03E11EA8 ADD W9, W9, 0x2
	0x03E11EAC ADD X8, X8, W9, 0x4, SXTW
	0x03E11EB0 ADD X0, X8, 0x138
	0x03E11EB4 LDP X8, X1, [X0]
	0x03E11EB8 MOV X0, X19
	0x03E11EBC BLR X8
	0x03E11EC0 ADRP X24, 0x355000
	0x03E11EC4 LDR X21, [X20 + 0xB8]
	0x03E11EC8 LDR X24, [X24 + 0x768]
	0x03E11ECC MOV W23, W0
	0x03E11ED0 LDR X8, [X24]
	0x03E11ED4 MOV X0, X8
	0x03E11ED8 BL 0x1C16F10
	0x03E11EDC MOV X22, X0
	0x03E11EE0 TBZ X23, 0x0, 0x3E11F48
	0x03E11EE4 ADRP X8, 0x359000
	0x03E11EE8 LDR X8, [X8 + 0x510]
	0x03E11EEC MOV X0, X22
	0x03E11EF0 MOV X1, X19
	0x03E11EF4 MOV X3, X31
	0x03E11EF8 LDR X2, [X8]
	0x03E11EFC BL 0x2A6B948
	0x03E11F00 ADRP X8, 0x355000
	0x03E11F04 LDR X8, [X8 + 0x770]
	0x03E11F08 LDR X0, [X8]
	0x03E11F0C BL 0x1C16F10
	0x03E11F10 ADRP X8, 0x359000
	0x03E11F14 LDR X8, [X8 + 0x508]
	0x03E11F18 MOV X1, X19
	0x03E11F1C MOV X3, X31
	0x03E11F20 MOV X20, X0
	0x03E11F24 LDR X2, [X8]
	0x03E11F28 BL 0x2D3023C
	0x03E11F2C CBZ X21, 0x3E120B0
	0x03E11F30 ADRP X8, 0x355000
	0x03E11F34 LDR X8, [X8 + 0x9C8]
	0x03E11F38 MOV X0, X21
	0x03E11F3C MOV X2, X22
	0x03E11F40 MOV X3, X20
	0x03E11F44 B 0x3E12090
	0x03E11F48 ADRP X8, 0x359000
	0x03E11F4C LDR X8, [X8 + 0x520]
	0x03E11F50 MOV X0, X22
	0x03E11F54 MOV X1, X19
	0x03E11F58 MOV X3, X31
	0x03E11F5C LDR X2, [X8]
	0x03E11F60 BL 0x2A6B948
	0x03E11F64 ADRP X25, 0x355000
	0x03E11F68 LDR X25, [X25 + 0x770]
	0x03E11F6C LDR X0, [X25]
	0x03E11F70 BL 0x1C16F10
	0x03E11F74 ADRP X8, 0x359000
	0x03E11F78 LDR X8, [X8 + 0x518]
	0x03E11F7C MOV X1, X19
	0x03E11F80 MOV X3, X31
	0x03E11F84 MOV X23, X0
	0x03E11F88 LDR X2, [X8]
	0x03E11F8C BL 0x2D3023C
	0x03E11F90 CBZ X21, 0x3E120B0
	0x03E11F94 ADRP X8, 0x355000
	0x03E11F98 LDR X8, [X8 + 0x9D8]
	0x03E11F9C MOV X0, X21
	0x03E11FA0 MOV X2, X22
	0x03E11FA4 MOV X3, X23
	0x03E11FA8 LDR X1, [X8]
	0x03E11FAC MOV X4, X31
	0x03E11FB0 MOV X5, X31
	0x03E11FB4 BL 0x3D9A9A4
	0x03E11FB8 LDR X0, [X24]
	0x03E11FBC LDR X21, [X20 + 0xB8]
	0x03E11FC0 BL 0x1C16F10
	0x03E11FC4 ADRP X8, 0x359000
	0x03E11FC8 LDR X8, [X8 + 0x510]
	0x03E11FCC MOV X1, X19
	0x03E11FD0 MOV X3, X31
	0x03E11FD4 MOV X22, X0
	0x03E11FD8 LDR X2, [X8]
	0x03E11FDC BL 0x2A6B948
	0x03E11FE0 LDR X0, [X25]
	0x03E11FE4 BL 0x1C16F10
	0x03E11FE8 ADRP X8, 0x359000
	0x03E11FEC LDR X8, [X8 + 0x508]
	0x03E11FF0 MOV X1, X19
	0x03E11FF4 MOV X3, X31
	0x03E11FF8 MOV X23, X0
	0x03E11FFC LDR X2, [X8]
	0x03E12000 BL 0x2D3023C
	0x03E12004 CBZ X21, 0x3E120B0
	0x03E12008 ADRP X8, 0x354000
	0x03E1200C LDR X8, [X8 + 0x9C8]
	0x03E12010 MOV X0, X21
	0x03E12014 MOV X2, X22
	0x03E12018 MOV X3, X23
	0x03E1201C LDR X1, [X8]
	0x03E12020 MOV X4, X31
	0x03E12024 MOV X5, X31
	0x03E12028 BL 0x3D9A9A4
	0x03E1202C LDR X0, [X24]
	0x03E12030 LDR X20, [X20 + 0xB8]
	0x03E12034 BL 0x1C16F10
	0x03E12038 ADRP X8, 0x358000
	0x03E1203C LDR X8, [X8 + 0x530]
	0x03E12040 MOV X1, X19
	0x03E12044 MOV X3, X31
	0x03E12048 MOV X21, X0
	0x03E1204C LDR X2, [X8]
	0x03E12050 BL 0x2A6B948
	0x03E12054 LDR X0, [X25]
	0x03E12058 BL 0x1C16F10
	0x03E1205C ADRP X8, 0x358000
	0x03E12060 LDR X8, [X8 + 0x528]
	0x03E12064 MOV X1, X19
	0x03E12068 MOV X3, X31
	0x03E1206C MOV X22, X0
	0x03E12070 LDR X2, [X8]
	0x03E12074 BL 0x2D3023C
	0x03E12078 CBZ X20, 0x3E120B0
	0x03E1207C ADRP X8, 0x354000
	0x03E12080 LDR X8, [X8 + 0x9D0]
	0x03E12084 MOV X0, X20
	0x03E12088 MOV X2, X21
	0x03E1208C MOV X3, X22
	0x03E12090 LDR X1, [X8]
	0x03E12094 LDP X20, X19, [X31 + 0x30]
	0x03E12098 LDP X22, X21, [X31 + 0x20]
	0x03E1209C LDP X24, X23, [X31 + 0x10]
	0x03E120A0 MOV X4, X31
	0x03E120A4 MOV X5, X31
	0x03E120A8 LDP X30, X25, [X31], #0x40
	0x03E120AC B 0x3D9A9A4
	0x03E120B0 BL 0x1C16F20
	0x03E120B4 STR X30, [X31 - 0x20]!
	0x03E120B8 STP X20, X19, [X31 + 0x10]
	0x03E120BC ADRP X20, 0x5D6000
	0x03E120C0 LDRB W8, [X20 + 0x380]
	0x03E120C4 MOV X19, X0
	0x03E120C8 TBNZ X8, 0x0, 0x3E120EC
	0x03E120CC ADRP X0, 0x30B000
	0x03E120D0 LDR X0, [X0 + 0x630]
	0x03E120D4 BL 0x1C16CF4
	0x03E120D8 ADRP X0, 0x30B000
	0x03E120DC LDR X0, [X0 + 0x628]
	0x03E120E0 BL 0x1C16CF4
	0x03E120E4 MOVZ W8, 0x1
	0x03E120E8 STRB W8, [X20 + 0x380]
	0x03E120EC MOV X0, X19
	0x03E120F0 MOV X1, X31
	0x03E120F4 BL 0x3DEC00C
	0x03E120F8 TBZ X0, 0x0, 0x3E121B0
	0x03E120FC CBZ X19, 0x3E121EC
	0x03E12100 ADRP X10, 0x30B000
	0x03E12104 LDR X8, [X19]
	0x03E12108 LDR X10, [X10 + 0x628]
	0x03E1210C LDRH W9, [X8 + 0x12E]
	0x03E12110 LDR X1, [X10]
	0x03E12114 CBZ X9, 0x3E12138
	0x03E12118 LDR X10, [X8 + 0xB0]
	0x03E1211C ADD X10, X10, 0x8
	0x03E12120 LDUR X11, [X10 - 0x8]
	0x03E12124 CMP X11, X1
	0x03E12128 B.EQ 0x3E12148
	0x03E1212C SUBS X9, X9, 0x1
	0x03E12130 ADD X10, X10, 0x10
	0x03E12134 B.NE 0x3E12120
	0x03E12138 MOVZ W2, 0xC
	0x03E1213C MOV X0, X19
	0x03E12140 BL 0x1C5C788
	0x03E12144 B 0x3E12158
	0x03E12148 LDR W9, [X10]
	0x03E1214C ADD W9, W9, 0xC
	0x03E12150 ADD X8, X8, W9, 0x4, SXTW
	0x03E12154 ADD X0, X8, 0x138
	0x03E12158 LDP X8, X1, [X0]
	0x03E1215C MOV X0, X19
	0x03E12160 BLR X8
	0x03E12164 TBZ X0, 0x0, 0x3E121B0
	0x03E12168 ADRP X10, 0x30B000
	0x03E1216C LDR X8, [X19]
	0x03E12170 LDR X10, [X10 + 0x630]
	0x03E12174 LDRH W9, [X8 + 0x12E]
	0x03E12178 LDR X1, [X10]
	0x03E1217C CBZ X9, 0x3E121A0
	0x03E12180 LDR X10, [X8 + 0xB0]
	0x03E12184 ADD X10, X10, 0x8
	0x03E12188 LDUR X11, [X10 - 0x8]
	0x03E1218C CMP X11, X1
	0x03E12190 B.EQ 0x3E121B8
	0x03E12194 SUBS X9, X9, 0x1
	0x03E12198 ADD X10, X10, 0x10
	0x03E1219C B.NE 0x3E12188
	0x03E121A0 MOVZ W2, 0x17
	0x03E121A4 MOV X0, X19
	0x03E121A8 BL 0x1C5C788
	0x03E121AC B 0x3E121C8
	0x03E121B0 MOVZ W0, 0x2
	0x03E121B4 B 0x3E121E0
	0x03E121B8 LDR W9, [X10]
	0x03E121BC ADD W9, W9, 0x17
	0x03E121C0 ADD X8, X8, W9, 0x4, SXTW
	0x03E121C4 ADD X0, X8, 0x138
	0x03E121C8 LDP X8, X1, [X0]
	0x03E121CC MOV X0, X19
	0x03E121D0 BLR X8
	0x03E121D4 ANDS W31, W0, 0x1
	0x03E121D8 MOVZ W8, 0x1
	0x03E121DC CINC W0, W8, NE
	0x03E121E0 LDP X20, X19, [X31 + 0x10]
	0x03E121E4 LDR X30, [X31], #0x20
	0x03E121E8 RET
	0x03E121EC BL 0x1C16F20
	0x03E121F0 STR X30, [X31 - 0x20]!
	0x03E121F4 STP X20, X19, [X31 + 0x10]
	0x03E121F8 ADRP X20, 0x5D6000
	0x03E121FC LDRB W8, [X20 + 0x381]
	0x03E12200 MOV X19, X0
	0x03E12204 TBNZ X8, 0x0, 0x3E12228
	0x03E12208 ADRP X0, 0x30B000
	0x03E1220C LDR X0, [X0 + 0x630]
	0x03E12210 BL 0x1C16CF4
	0x03E12214 ADRP X0, 0x30B000
	0x03E12218 LDR X0, [X0 + 0x628]
	0x03E1221C BL 0x1C16CF4
	0x03E12220 MOVZ W8, 0x1
	0x03E12224 STRB W8, [X20 + 0x381]
	0x03E12228 MOV X0, X19
	0x03E1222C MOV X1, X31
	0x03E12230 BL 0x3DEC00C
	0x03E12234 TBZ X0, 0x0, 0x3E122A4
	0x03E12238 CBZ X19, 0x3E1232C
	0x03E1223C ADRP X10, 0x30B000
	0x03E12240 LDR X8, [X19]
	0x03E12244 LDR X10, [X10 + 0x628]
	0x03E12248 LDRH W9, [X8 + 0x12E]
	0x03E1224C LDR X1, [X10]
	0x03E12250 CBZ X9, 0x3E12274
	0x03E12254 LDR X10, [X8 + 0xB0]
	0x03E12258 ADD X10, X10, 0x8
	0x03E1225C LDUR X11, [X10 - 0x8]
	0x03E12260 CMP X11, X1
	0x03E12264 B.EQ 0x3E12284
	0x03E12268 SUBS X9, X9, 0x1
	0x03E1226C ADD X10, X10, 0x10
	0x03E12270 B.NE 0x3E1225C
	0x03E12274 MOVZ W2, 0xC
	0x03E12278 MOV X0, X19
	0x03E1227C BL 0x1C5C788
	0x03E12280 B 0x3E12294
	0x03E12284 LDR W9, [X10]
	0x03E12288 ADD W9, W9, 0xC
	0x03E1228C ADD X8, X8, W9, 0x4, SXTW
	0x03E12290 ADD X0, X8, 0x138
	0x03E12294 LDP X8, X1, [X0]
	0x03E12298 MOV X0, X19
	0x03E1229C BLR X8
	0x03E122A0 TBZ X0, 0x0, 0x3E122F0
	0x03E122A4 CBZ X19, 0x3E1232C
	0x03E122A8 ADRP X10, 0x30B000
	0x03E122AC LDR X8, [X19]
	0x03E122B0 LDR X10, [X10 + 0x630]
	0x03E122B4 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-128], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X23, 0x5D8000
	017 Move W8, [X23+882]
	018 Move W21, W3
	019 Move V8, V0
	020 Move X19, X2
	021 Move X20, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0x30C000
	028 Move X0, [X0+288]
	029 Call 0x1C17CF4
	030 Move X0, 0x2E3000
	031 Move X0, [X0+1448]
	032 Call 0x1C17CF4
	033 Move X0, 0x2E3000
	034 Move X0, [X0+2440]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+882], W8
	038 Move X0, X22
	039 Move X1, X31
	040 Call VisualElement.get_resolvedStyle, X0
	041 Compare X0, 0
	042 JumpIfEqual {300}
	043 Move X10, 0x30C000
	044 Move X8, [X0]
	045 Move X10, [X10+288]
	046 Move X23, X0
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X1, [X10]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 30
	058 Move X0, X23
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 30
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X1, [X0+8]
	066 Move X0, X23
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move W8, S0
	069 And W8, W8, 0x7FFFFFFF
	070 Move W9, 0x7F800000
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move S1, W31
	073 Move X0, X22
	074 Move X1, X31
	075 NotImplemented "Instruction FCSEL not yet implemented."
	076 Call VisualElement.get_scaledPixelsPerPoint, X0
	077 Move S1, 1
	078 NotImplemented "Instruction FDIV not yet implemented."
	079 NotImplemented "Instruction FMIN not yet implemented."
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 NotImplemented "Instruction FCSEL not yet implemented."
	082 Move S0, W31
	083 Move S1, W31
	084 Move X0, X22
	085 Move X1, X20
	086 Move W2, W31
	087 Move W3, W31
	088 Call TextUtilities.MeasureVisualElementTextSize, X0, X1, V0, X2, V1, X3
	089 Add S1, S9, S8
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move X0, X19
	092 Move X1, X31
	093 Call String.IsNullOrEmpty, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {116}
	098 Move X25, X20
	099 Move X0, X25
	100 Move X20, [X31+112]
	101 Move X19, [X31+120]
	102 Move X22, [X31+96]
	103 Move X21, [X31+104]
	104 Move X24, [X31+80]
	105 Move X23, [X31+88]
	106 Move X26, [X31+64]
	107 Move X25, [X31+72]
	108 Move X28, [X31+48]
	109 Move X27, [X31+56]
	110 Move X29, [X31+32]
	111 Move X30, [X31+40]
	112 Move D9, [X31+16]
	113 Move D8, [X31+24]
	114 Move V10, [X31+128]
	115 Return X0
	116 Compare X20, 0
	117 JumpIfEqual {300}
	118 Move W8, [X20+16]
	119 Move S0, W31
	120 Move S1, W31
	121 Move X0, X22
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CSEL not yet implemented."
	124 Move X1, X25
	125 Move W2, W31
	126 Move W3, W31
	127 Call TextUtilities.MeasureVisualElementTextSize, X0, X1, V0, X2, V1, X3
	128 NotImplemented "Instruction FCMP not yet implemented."
	129 Move W28, [X20+16]
	130 Subtract W8, W21, 1
	131 NotImplemented "Instruction CSET not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract W10, W28, 1
	134 Subtract W9, W28, 2
	135 NotImplemented "Instruction CSEL not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move [X31+12], W10
	138 Move X9, -53641216
	139 Move V10, [X9+3996]
	140 Add W8, W27, W29
	141 And W26, W21, 0xFFFFFFFD
	142 Move TEMP, 0
	143 Not TEMP
	144 Move W23, TEMP
	145 Move X25, X20
	146 Move [X31+8], W28
	147 NotImplemented "Instruction CMP not yet implemented."
	148 NotImplemented "Instruction CINC not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction SBFM not yet implemented."
	151 Subtract W2, W28, W24
	152 Move X0, X20
	153 Move W1, W24
	154 Move X3, X31
	155 Call String.Substring, X0, X1, X2
	156 Move X1, X0
	157 Move X0, X19
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Compare W21, 0
	160 JumpIfNotEqual {170}
	161 Move X0, X20
	162 Move W1, W31
	163 Move W2, W24
	164 Move X3, X31
	165 Call String.Substring, X0, X1, X2
	166 Move X1, X19
	167 Move X2, X31
	168 Call String.Concat, X0, X1
	169 Move X25, X0
	170 Move S0, W31
	171 Move S1, W31
	172 Move X0, X22
	173 Move X1, X25
	174 Move W2, W31
	175 Move W3, W31
	176 Call TextUtilities.MeasureVisualElementTextSize, X0, X1, V0, X2, V1, X3
	177 Move X8, 0x2E2000
	178 Move X8, [X8+1448]
	179 Move V9, V0
	180 Move X0, [X8]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 NotImplemented "Instruction FABD not yet implemented."
	186 NotImplemented "Instruction FCMP not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 NotImplemented "Instruction FCMP not yet implemented."
	189 Subtract W9, W24, 1
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Add W29, W24, 1
	192 Compare W26, 0
	193 JumpIfEqual {200}
	194 Move W9, W27
	195 Move W24, W23
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Add W8, W29, W9
	198 Move W23, W24
	199 Move W27, W9
	200 NotImplemented "Instruction FCMP not yet implemented."
	201 Subtract W9, W24, 1
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move W28, W26
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Subtract W26, W24, 1
	206 Move X8, 0x2E2000
	207 Move X8, [X8+2440]
	208 Move X25, [X8]
	209 Add W29, W24, 1
	210 Move W9, W27
	211 Move X0, X20
	212 Move W1, W31
	213 Move W2, W26
	214 Move X3, X31
	215 Call String.Substring, X0, X1, X2
	216 Move X25, X0
	217 Move W8, [X31+12]
	218 Subtract W1, W8, W26
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X0, X20
	221 Move X2, X31
	222 Call String.Substring, X0, X1
	223 Move X2, X0
	224 Move X8, 0x2E2000
	225 Move X8, [X8+2440]
	226 Move X2, [X8]
	227 Move X0, X25
	228 Move X1, X19
	229 Move X3, X31
	230 Move W26, W28
	231 Call String.Concat, X0, X1, X2
	232 Move W28, [X31+8]
	233 Subtract W2, W28, W23
	234 Move X0, X20
	235 Move W1, W23
	236 Move X3, X31
	237 Call String.Substring, X0, X1, X2
	238 Move X1, X0
	239 Move X0, X19
	240 Move X20, [X31+112]
	241 Move X19, [X31+120]
	242 Move X22, [X31+96]
	243 Move X21, [X31+104]
	244 Move X24, [X31+80]
	245 Move X23, [X31+88]
	246 Move X26, [X31+64]
	247 Move X25, [X31+72]
	248 Move X28, [X31+48]
	249 Move X27, [X31+56]
	250 Move X29, [X31+32]
	251 Move X30, [X31+40]
	252 Move D9, [X31+16]
	253 Move D8, [X31+24]
	254 Move X2, X31
	255 Move V10, [X31+128]
	256 Call String.Concat, X0, X1
	257 Return X0
	258 Compare W21, 0
	259 JumpIfEqual {294}
	260 Subtract W8, W23, 1
	261 NotImplemented "Instruction BIC not yet implemented."
	262 Move X0, X20
	263 Move W1, W31
	264 Move W2, W21
	265 Move X3, X31
	266 Call String.Substring, X0, X1, X2
	267 Move W8, [X31+12]
	268 Move X22, X0
	269 Move X0, X20
	270 Move X2, X31
	271 Subtract W1, W8, W21
	272 Call String.Substring, X0, X1
	273 Move X2, X0
	274 Move X0, X22
	275 Move X1, X19
	276 Move X20, [X31+112]
	277 Move X19, [X31+120]
	278 Move X22, [X31+96]
	279 Move X21, [X31+104]
	280 Move X24, [X31+80]
	281 Move X23, [X31+88]
	282 Move X26, [X31+64]
	283 Move X25, [X31+72]
	284 Move X28, [X31+48]
	285 Move X27, [X31+56]
	286 Move X29, [X31+32]
	287 Move X30, [X31+40]
	288 Move D9, [X31+16]
	289 Move D8, [X31+24]
	290 Move X3, X31
	291 Move V10, [X31+128]
	292 Call String.Concat, X0, X1, X2
	293 Return X0
	294 Move X0, X20
	295 Move W1, W31
	296 Move W2, W23
	297 Move X3, X31
	298 Call String.Substring, X0, X1, X2
	299 Move X1, X19
	300 Call 0x1C17F20

Method: System.Void UpdateTooltip()

Disassembly:
	0x03E10E30 LDP X22, X21, [X31 + 0x60]
	0x03E10E34 LDP X24, X23, [X31 + 0x50]
	0x03E10E38 LDP X29, X30, [X31 + 0x40]
	0x03E10E3C LDP D9, D8, [X31 + 0x30]
	0x03E10E40 LDP D11, D10, [X31 + 0x20]
	0x03E10E44 LDP D13, D12, [X31 + 0x10]
	0x03E10E48 LDP D15, D14, [X31], #0x80
	0x03E10E4C RET
	0x03E10E50 BL 0x1C16F20
	0x03E10E54 BL 0x3EB1B20
	0x03E10E58 STR D10, [X31 - 0x80]!
	0x03E10E5C STP D9, D8, [X31 + 0x10]
	0x03E10E60 STP X29, X30, [X31 + 0x20]
	0x03E10E64 STP X28, X27, [X31 + 0x30]
	0x03E10E68 STP X26, X25, [X31 + 0x40]
	0x03E10E6C STP X24, X23, [X31 + 0x50]
	0x03E10E70 STP X22, X21, [X31 + 0x60]
	0x03E10E74 STP X20, X19, [X31 + 0x70]
	0x03E10E78 ADRP X23, 0x5D8000
	0x03E10E7C LDRB W8, [X23 + 0x372]
	0x03E10E80 MOV W21, W3
	0x03E10E84 MOV V8.16B, V0.16B
	0x03E10E88 MOV X19, X2
	0x03E10E8C MOV X20, X1
	0x03E10E90 MOV X22, X0
	0x03E10E94 TBNZ X8, 0x0, 0x3E10EC4
	0x03E10E98 ADRP X0, 0x30C000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+1002]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {21}
	007 Move W8, [X19+1003]
	008 Compare W8, 0
	009 JumpIfEqual {21}
	010 Move X8, [X19]
	011 Move X0, X19
	012 Move X9, [X8+2840]
	013 Move X1, [X8+2848]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move X1, X0
	016 Move X0, X19
	017 Move X2, X31
	018 Call VisualElement.set_tooltip, X0, X1
	019 Move W8, 1
	020 Move [X19+1016], W8
	021 Move W8, [X19+1016]
	022 Compare W8, 0
	023 JumpIfEqual {29}
	024 Move X0, X19
	025 Move X1, X31
	026 Move X2, X31
	027 Call VisualElement.set_tooltip, X0, X1
	028 Move [X19+1016], W31
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Return 

Method: System.Void UpdateVisibleText()

Disassembly:
	0x03E108B0 ADD X1, X31, 0x2A0
	0x03E108B4 MOVZ W2, 0x74
	0x03E108B8 MOV X0, X25
	0x03E108BC BL 0x3EB1AC0
	0x03E108C0 LDR V4, [X31 + 0x30]
	0x03E108C4 LDR V0, [X31 + 0x34]
	0x03E108C8 LDR X0, [X31 + 0x20]
	0x03E108CC ADD X1, X31, 0x48
	0x03E108D0 MOV X2, X31
	0x03E108D4 STP S4, S0, [X31 + 0xE4]
	0x03E108D8 LDR V4, [X31 + 0x38]
	0x03E108DC LDR V0, [X31 + 0x3C]
	0x03E108E0 STR S11, [X31 + 0x40]
	0x03E108E4 STP S11, S8, [X31 + 0x48]
	0x03E108E8 STP S9, S12, [X31 + 0x50]
	0x03E108EC STP S13, S14, [X31 + 0x68]
	0x03E108F0 STP S15, S10, [X31 + 0x70]
	0x03E108F4 STP S4, S0, [X31 + 0xEC]
	0x03E108F8 BL 0x3DC3C34
	0x03E108FC ADD W26, W26, 0x1
	0x03E10900 CMP W26, W23
	0x03E10904 B.LE 0x3E106D0
	0x03E10908 B 0x3E109BC
	0x03E1090C LDR W9, [X10]
	0x03E10910 ADD W9, W9, 0x9
	0x03E10914 ADD X8, X8, W9, 0x4, SXTW
	0x03E10918 ADD X0, X8, 0x138
	0x03E1091C LDP X8, X1, [X0]
	0x03E10920 MOV X0, X20
	0x03E10924 BLR X8
	0x03E10928 MOV V9.16B, V0.16B
	0x03E1092C LDR V0, [X28]
	0x03E10930 ADD X20, X31, 0x168
	0x03E10934 ADD X8, X31, 0x79
	0x03E10938 ADD X0, X20, 0x30
	0x03E1093C ADD X1, X31, 0x320
	0x03E10940 MOVZ W2, 0x6C
	0x03E10944 MOV V10.16B, V1.16B
	0x03E10948 MOV V11.16B, V2.16B
	0x03E1094C MOV V12.16B, V3.16B
	0x03E10950 STUR V0, [X8 + 0xFF]
	0x03E10954 BL 0x3EB1AC0
	0x03E10958 ADD X0, X20, 0xAC
	0x03E1095C ADD X1, X31, 0x2A0
	0x03E10960 MOVZ W2, 0x74
	0x03E10964 BL 0x3EB1AC0
	0x03E10968 LDR V0, [X31 + 0x2C]
	0x03E1096C LDR X0, [X31 + 0x20]
	0x03E10970 ADD X1, X31, 0x168
	0x03E10974 MOV X2, X31
	0x03E10978 STR S0, [X31 + 0x174]
	0x03E1097C LDR V0, [X31 + 0x30]
	0x03E10980 STR S14, [X31 + 0x168]
	0x03E10984 STR S15, [X31 + 0x16C]
	0x03E10988 STR S13, [X31 + 0x170]
	0x03E1098C STR S0, [X31 + 0x204]
	0x03E10990 LDR V0, [X31 + 0x34]
	0x03E10994 STR S9, [X31 + 0x188]
	0x03E10998 STR S10, [X31 + 0x18C]
	0x03E1099C STR S11, [X31 + 0x190]
	0x03E109A0 STR S0, [X31 + 0x208]
	0x03E109A4 LDR V0, [X31 + 0x38]
	0x03E109A8 STR S12, [X31 + 0x194]
	0x03E109AC STR S0, [X31 + 0x20C]
	0x03E109B0 LDR V0, [X31 + 0x3C]
	0x03E109B4 STR S0, [X31 + 0x210]
	0x03E109B8 BL 0x3DC3C34
	0x03E109BC LDR X8, [X31 + 0x10]
	0x03E109C0 LDR X8, [X8 + 0x28]
	0x03E109C4 LDR X9, [X31 + 0x398]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5D9000
	007 Move W8, [X20+883]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x30D000
	014 Move X0, [X0+3784]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+883], W8
	018 Move X0, X19
	019 Call TextElement.ShouldElide, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {76}
	024 Move X0, [X19+984]
	025 Compare X0, 0
	026 JumpIfEqual {84}
	027 Call UITKTextHandle.TextLibraryCanElide, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {78}
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+2840]
	035 Move X1, [X8+2848]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X21, 0x30D000
	038 Move X21, [X21+3784]
	039 Move X20, X0
	040 Move X8, [X21]
	041 Move W9, [X8+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {47}
	044 Move X0, X8
	045 Call 0x1C17DFC
	046 Move X8, [X21]
	047 Move X8, [X8+184]
	048 Move X0, X19
	049 Move X1, X31
	050 Move X21, [X8+8]
	051 Call VisualElement.get_contentRect, X0
	052 Move X0, X19
	053 Move X1, X31
	054 Move V8, V2
	055 Call VisualElement.get_computedStyle, X0
	056 Move X1, X31
	057 Call ComputedStyle.get_unityTextOverflowPosition, X0
	058 Move W3, W0
	059 Move X0, X19
	060 Move X1, X20
	061 Move X2, X21
	062 Move V0, V8
	063 Call TextElement.ElideText, X0, X1, X2, V0, X3
	064 Move X8, [X19]
	065 Move [X19+1008], X0
	066 Move X20, X0
	067 Move X0, X19
	068 Move X9, [X8+2840]
	069 Move X1, [X8+2848]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X1, X0
	072 Move X0, X20
	073 Move X2, X31
	074 Call String.op_Inequality, X0, X1
	075 And W8, W0, 1
	076 Move W8, W31
	077 Move [X19+1003], W8
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X30, [X31+16]
	081 Move X21, [X31+24]
	082 Move V8, [X31+48]
	083 Return 
	084 Call 0x1C17F20

Method: System.Boolean ShouldElide()

Disassembly:
	0x03E10DE4 BL 0x3EB1AC0
	0x03E10DE8 LDR V0, [X31 + 0x8]
	0x03E10DEC STP S10, S15, [X31 + 0x10]
	0x03E10DF0 STP S8, S12, [X31 + 0x18]
	0x03E10DF4 STP S11, S9, [X31 + 0x30]
	0x03E10DF8 STP S13, S14, [X31 + 0x38]
	0x03E10DFC STUR D0, [X21 + 0x9C]
	0x03E10E00 LDR V0, [X31]
	0x03E10E04 ADD X1, X31, 0x10
	0x03E10E08 MOV X0, X19
	0x03E10E0C MOV X2, X31
	0x03E10E10 STUR D0, [X21 + 0xA4]
	0x03E10E14 BL 0x3DC3C34
	0x03E10E18 LDR X8, [X22 + 0x28]
	0x03E10E1C LDR X9, [X31 + 0x238]
	0x03E10E20 CMP X8, X9
	0x03E10E24 B.NE 0x3E10E54
	0x03E10E28 ADD X31, X31, 0x240
	0x03E10E2C LDP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call VisualElement.get_computedStyle, X0
	006 Move X1, X31
	007 Call ComputedStyle.get_textOverflow, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X0, X19
	010 Move X1, X31
	011 Call VisualElement.get_computedStyle, X0
	012 Move X1, X31
	013 Call ComputedStyle.get_overflow, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Move W0, W31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: System.Boolean get_hasFocus()

Disassembly:
	0x03E0C864 MOV V9.16B, V0.16B
	0x03E0C868 MOV W20, W2
	0x03E0C86C MOV X21, X1
	0x03E0C870 MOV X19, X0
	0x03E0C874 TBNZ X8, 0x0, 0x3E0C88C
	0x03E0C878 ADRP X0, 0x355000
	0x03E0C87C LDR X0, [X0 + 0xDD8]
	0x03E0C880 BL 0x1C16CF4
	0x03E0C884 MOVZ W8, 0x1
	0x03E0C888 STRB W8, [X23 + 0x35D]
	0x03E0C88C LDR X0, [X22]
	0x03E0C890 LDR W8, [X0 + 0xE0]
	0x03E0C894 CBNZ W8, 0x3E0C8A0
	0x03E0C898 BL 0x1C16DFC
	0x03E0C89C LDR X0, [X22]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+928]
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X8, [X0]
	008 Move X9, [X8+632]
	009 Move X1, [X8+640]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Compare X0, 0
	012 JumpIfEqual {15}
	013 Move X1, X31
	014 Call FocusController.GetLeafFocusedElement, X0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: UnityEngine.Vector2 MeasureTextSize(System.String textToMeasure, System.Single width, UnityEngine.UIElements.VisualElement/MeasureMode widthMode, System.Single height, UnityEngine.UIElements.VisualElement/MeasureMode heightMode)

Disassembly:
	0x03E122B8 LDR X1, [X10]

ISIL:
	001 Call TextUtilities.MeasureVisualElementTextSize, X0, X1, V0, X2, V1, X3
	002 Return X0

Method: UnityEngine.Vector2 DoMeasure(System.Single desiredWidth, UnityEngine.UIElements.VisualElement/MeasureMode widthMode, System.Single desiredHeight, UnityEngine.UIElements.VisualElement/MeasureMode heightMode)

Disassembly:
	0x03E122BC CBZ X9, 0x3E122E0
	0x03E122C0 LDR X10, [X8 + 0xB0]
	0x03E122C4 ADD X10, X10, 0x8
	0x03E122C8 LDUR X11, [X10 - 0x8]
	0x03E122CC CMP X11, X1
	0x03E122D0 B.EQ 0x3E122F8
	0x03E122D4 SUBS X9, X9, 0x1
	0x03E122D8 ADD X10, X10, 0x10
	0x03E122DC B.NE 0x3E122C8
	0x03E122E0 MOVZ W2, 0x17
	0x03E122E4 MOV X0, X19
	0x03E122E8 BL 0x1C5C788
	0x03E122EC B 0x3E12308
	0x03E122F0 MOVZ W0, 0x2
	0x03E122F4 B 0x3E12320
	0x03E122F8 LDR W9, [X10]
	0x03E122FC ADD W9, W9, 0x17
	0x03E12300 ADD X8, X8, W9, 0x4, SXTW
	0x03E12304 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W19, W2
	008 Move V8, V1
	009 Move W20, W1
	010 Move V9, V0
	011 Move X21, X0
	012 Call TextElement.get_renderedText, X0
	013 Move X1, X0
	014 Move X0, X21
	015 Move W2, W20
	016 Move W3, W19
	017 Move X20, [X31+32]
	018 Move X19, [X31+40]
	019 Move X30, [X31+16]
	020 Move X21, [X31+24]
	021 Move V0, V9
	022 Move V1, V8
	023 Move D9, [X31+48]
	024 Move D8, [X31+56]
	025 Call TextUtilities.MeasureVisualElementTextSize, X0, X1, V0, X2, V1, X3
	026 Return X0

Method: System.String UnityEngine.UIElements.INotifyValueChanged<System.String>.get_value()

Disassembly:
	0x03E12308 LDP X8, X1, [X0]
	0x03E1230C MOV X0, X19
	0x03E12310 BLR X8
	0x03E12314 ANDS W31, W0, 0x1
	0x03E12318 MOVZ W8, 0x1
	0x03E1231C CINC W0, W8, NE
	0x03E12320 LDP X20, X19, [X31 + 0x10]
	0x03E12324 LDR X30, [X31], #0x20
	0x03E12328 RET
	0x03E1232C BL 0x1C16F20
	0x03E12330 STR X30, [X31 - 0x20]!
	0x03E12334 STP X20, X19, [X31 + 0x10]
	0x03E12338 LDR X8, [X0 + 0x400]
	0x03E1233C CBZ X8, 0x3E12388
	0x03E12340 MOV X19, X0
	0x03E12344 LDR X0, [X8 + 0x20]
	0x03E12348 CBZ X0, 0x3E12388
	0x03E1234C MOV X1, X31
	0x03E12350 BL 0x3C7E014
	0x03E12354 MOV W20, W0
	0x03E12358 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D7000
	005 Move W8, [X20+884]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2E4000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+884], W8
	016 Move X0, [X19+992]
	017 Compare X0, 0
	018 JumpIfNotEqual {24}
	019 Move X8, 0x2E4000
	020 Move X8, [X8+632]
	021 Move X8, [X8]
	022 Move X8, [X8+184]
	023 Move X0, [X8]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Void UnityEngine.UIElements.INotifyValueChanged<System.String>.set_value(System.String value)

Disassembly:
	0x03E1235C MOV X1, X31
	0x03E12360 BL 0x3DEC00C
	0x03E12364 TBZ X0, 0x0, 0x3E12378
	0x03E12368 ANDS W31, W20, 0x1
	0x03E1236C MOVZ W8, 0x1
	0x03E12370 CINC W0, W8, EQ
	0x03E12374 B 0x3E1237C
	0x03E12378 MOVZ W0, 0x8
	0x03E1237C LDP X20, X19, [X31 + 0x10]
	0x03E12380 LDR X30, [X31], #0x20
	0x03E12384 RET
	0x03E12388 BL 0x1C16F20
	0x03E1238C SUB X31, X31, 0x40
	0x03E12390 STR X30, [X31 + 0x10]
	0x03E12394 STP X22, X21, [X31 + 0x20]
	0x03E12398 STP X20, X19, [X31 + 0x30]
	0x03E1239C ADRP X21, 0x5D6000
	0x03E123A0 LDRB W8, [X21 + 0x382]
	0x03E123A4 MOV X19, X1
	0x03E123A8 MOV X20, X0
	0x03E123AC TBNZ X8, 0x0, 0x3E12424
	0x03E123B0 ADRP X0, 0x350000
	0x03E123B4 LDR X0, [X0 + 0xCD0]
	0x03E123B8 BL 0x1C16CF4
	0x03E123BC ADRP X0, 0x358000
	0x03E123C0 LDR X0, [X0 + 0x538]
	0x03E123C4 BL 0x1C16CF4
	0x03E123C8 ADRP X0, 0x356000
	0x03E123CC LDR X0, [X0 + 0x638]
	0x03E123D0 BL 0x1C16CF4
	0x03E123D4 ADRP X0, 0x30B000
	0x03E123D8 LDR X0, [X0 + 0x630]
	0x03E123DC BL 0x1C16CF4
	0x03E123E0 ADRP X0, 0x30B000
	0x03E123E4 LDR X0, [X0 + 0x628]
	0x03E123E8 BL 0x1C16CF4
	0x03E123EC ADRP X0, 0x355000
	0x03E123F0 LDR X0, [X0 + 0xCC0]
	0x03E123F4 BL 0x1C16CF4
	0x03E123F8 ADRP X0, 0x31D000
	0x03E123FC LDR X0, [X0 + 0x9F8]
	0x03E12400 BL 0x1C16CF4
	0x03E12404 ADRP X0, 0x325000
	0x03E12408 LDR X0, [X0 + 0x738]
	0x03E1240C BL 0x1C16CF4
	0x03E12410 ADRP X0, 0x309000
	0x03E12414 LDR X0, [X0 + 0xEA8]
	0x03E12418 BL 0x1C16CF4
	0x03E1241C MOVZ W8, 0x1
	0x03E12420 STRB W8, [X21 + 0x382]
	0x03E12424 CBZ X20, 0x3E126E8
	0x03E12428 ADRP X10, 0x30B000
	0x03E1242C LDR X8, [X20]
	0x03E12430 LDR X10, [X10 + 0x628]
	0x03E12434 LDRH W9, [X8 + 0x12E]
	0x03E12438 LDR X1, [X10]
	0x03E1243C CBZ X9, 0x3E12460
	0x03E12440 LDR X10, [X8 + 0xB0]
	0x03E12444 ADD X10, X10, 0x8
	0x03E12448 LDUR X11, [X10 - 0x8]
	0x03E1244C CMP X11, X1
	0x03E12450 B.EQ 0x3E12470
	0x03E12454 SUBS X9, X9, 0x1
	0x03E12458 ADD X10, X10, 0x10
	0x03E1245C B.NE 0x3E12448
	0x03E12460 MOV X0, X20
	0x03E12464 MOV W2, W31
	0x03E12468 BL 0x1C5C788
	0x03E1246C B 0x3E1247C
	0x03E12470 LDRSW X9, [X10]
	0x03E12474 ADD X8, X8, X9, 0x4, LSL
	0x03E12478 ADD X0, X8, 0x138
	0x03E1247C LDP X8, X1, [X0]
	0x03E12480 MOV X0, X20
	0x03E12484 BLR X8
	0x03E12488 TBZ X0, 0x0, 0x3E126D4
	0x03E1248C LDR X8, [X20 + 0x400]
	0x03E12490 CBZ X8, 0x3E12510
	0x03E12494 LDR X0, [X8 + 0x20]
	0x03E12498 CBZ X0, 0x3E126E8
	0x03E1249C MOV X1, X31
	0x03E124A0 BL 0x3C7E218
	0x03E124A4 TBZ X0, 0x0, 0x3E12510
	0x03E124A8 ADRP X10, 0x30B000
	0x03E124AC LDR X8, [X20]
	0x03E124B0 LDR X10, [X10 + 0x630]
	0x03E124B4 LDRH W9, [X8 + 0x12E]
	0x03E124B8 LDR X1, [X10]
	0x03E124BC CBZ X9, 0x3E124E0
	0x03E124C0 LDR X10, [X8 + 0xB0]
	0x03E124C4 ADD X10, X10, 0x8
	0x03E124C8 LDUR X11, [X10 - 0x8]
	0x03E124CC CMP X11, X1
	0x03E124D0 B.EQ 0x3E124F0
	0x03E124D4 SUBS X9, X9, 0x1
	0x03E124D8 ADD X10, X10, 0x10
	0x03E124DC B.NE 0x3E124C8
	0x03E124E0 MOVZ W2, 0x1B
	0x03E124E4 MOV X0, X20
	0x03E124E8 BL 0x1C5C788
	0x03E124EC B 0x3E12500
	0x03E124F0 LDR W9, [X10]
	0x03E124F4 ADD W9, W9, 0x1B
	0x03E124F8 ADD X8, X8, W9, 0x4, SXTW
	0x03E124FC ADD X0, X8, 0x138
	0x03E12500 LDP X8, X1, [X0]
	0x03E12504 MOV X0, X20
	0x03E12508 BLR X8
	0x03E1250C TBZ X0, 0x0, 0x3E12524
	0x03E12510 MOV X0, X20
	0x03E12514 BL 0x3E0AC7C
	0x03E12518 CBZ X0, 0x3E12524
	0x03E1251C MOV X1, X19
	0x03E12520 BL 0x3E0B8A0
	0x03E12524 ADRP X10, 0x30B000
	0x03E12528 LDR X8, [X20]
	0x03E1252C LDR X10, [X10 + 0x630]
	0x03E12530 LDRH W9, [X8 + 0x12E]
	0x03E12534 LDR X1, [X10]
	0x03E12538 CBZ X9, 0x3E1255C
	0x03E1253C LDR X10, [X8 + 0xB0]
	0x03E12540 ADD X10, X10, 0x8
	0x03E12544 LDUR X11, [X10 - 0x8]
	0x03E12548 CMP X11, X1
	0x03E1254C B.EQ 0x3E1256C
	0x03E12550 SUBS X9, X9, 0x1
	0x03E12554 ADD X10, X10, 0x10
	0x03E12558 B.NE 0x3E12544
	0x03E1255C MOVZ W2, 0x2
	0x03E12560 MOV X0, X20
	0x03E12564 BL 0x1C5C788
	0x03E12568 B 0x3E1257C
	0x03E1256C LDR W9, [X10]
	0x03E12570 ADD W9, W9, 0x2
	0x03E12574 ADD X8, X8, W9, 0x4, SXTW
	0x03E12578 ADD X0, X8, 0x138
	0x03E1257C LDP X8, X1, [X0]
	0x03E12580 MOV X0, X20
	0x03E12584 BLR X8
	0x03E12588 TBNZ X0, 0x0, 0x3E1259C
	0x03E1258C LDR X0, [X20 + 0x400]
	0x03E12590 CBZ X0, 0x3E1259C
	0x03E12594 MOV X1, X19
	0x03E12598 BL 0x3E0ADAC
	0x03E1259C LDR X8, [X20 + 0x3A0]
	0x03E125A0 CBZ X8, 0x3E125C0
	0x03E125A4 LDR X0, [X8 + 0x60]
	0x03E125A8 CBZ X0, 0x3E125C0
	0x03E125AC LDR X8, [X0]
	0x03E125B0 MOV X1, X19
	0x03E125B4 MOV X2, X20
	0x03E125B8 LDP X9, X3, [X8 + 0x178]
	0x03E125BC BLR X9
	0x03E125C0 CBZ X19, 0x3E125FC
	0x03E125C4 LDR X8, [X19]
	0x03E125C8 MOV X0, X19
	0x03E125CC LDP X9, X1, [X8 + 0x188]
	0x03E125D0 BLR X9
	0x03E125D4 ADRP X8, 0x325000
	0x03E125D8 LDR X8, [X8 + 0x738]
	0x03E125DC MOV X1, X0
	0x03E125E0 ADD X0, X31, 0x0
	0x03E125E4 STP X31, X31, [X31]
	0x03E125E8 LDR X2, [X8]
	0x03E125EC BL 0x2434988
	0x03E125F0 LDRB W21, [X31]
	0x03E125F4 LDR X22, [X31 + 0x8]
	0x03E125F8 B 0x3E12604
	0x03E125FC MOV W21, W31
	0x03E12600 MOV X22, X31
	0x03E12604 ADRP X8, 0x356000
	0x03E12608 LDR X8, [X8 + 0x638]
	0x03E1260C LDR X0, [X8]
	0x03E12610 LDR W8, [X0 + 0xE0]
	0x03E12614 CBNZ W8, 0x3E1261C
	0x03E12618 BL 0x1C16DFC
	0x03E1261C ADRP X8, 0x358000
	0x03E12620 LDR X8, [X8 + 0x538]
	0x03E12624 LDR X0, [X8]
	0x03E12628 BL 0x2D0D5C8
	0x03E1262C CBZ W21, 0x3E126D4
	0x03E12630 CMP X22, X0
	0x03E12634 B.NE 0x3E126D4
	0x03E12638 CBZ X19, 0x3E126E8
	0x03E1263C ADRP X8, 0x350000
	0x03E12640 LDR X8, [X8 + 0xCD0]
	0x03E12644 LDR X9, [X19]
	0x03E12648 LDR X8, [X8]
	0x03E1264C LDRB W11, [X9 + 0x130]
	0x03E12650 LDRB W10, [X8 + 0x130]
	0x03E12654 CMP W11, W10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x5D7000
	006 Move W8, [X19+885]
	007 Move X21, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x359000
	014 Move X0, [X0+1256]
	015 Call 0x1C17CF4
	016 Move X0, 0x359000
	017 Move X0, [X0+1264]
	018 Call 0x1C17CF4
	019 Move X0, 0x2E2000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x30C000
	023 Move X0, [X0+1808]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+885], W8
	027 Move X0, [X20+992]
	028 Move X1, X21
	029 Move X2, X31
	030 Call String.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {142}
	035 Move X0, X20
	036 Move X1, X31
	037 Call VisualElement.get_panel, X0
	038 Compare X0, 0
	039 JumpIfEqual {83}
	040 Move X8, [X20]
	041 Move X0, X20
	042 Move X9, [X8+2840]
	043 Move X1, [X8+2848]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, 0x359000
	046 Move X8, [X8+1264]
	047 Move X19, X0
	048 Move X8, [X8]
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X8, 0x359000
	055 Move X8, [X8+1256]
	056 Move X0, X19
	057 Move X1, X21
	058 Move X2, [X8]
	059 Call ChangeEvent`1<Object>.GetPooled, X0, X1
	060 Move X19, X0
	061 Compare X0, 0
	062 JumpIfEqual {160}
	063 Move X0, X19
	064 Move X1, X20
	065 Move X2, X31
	066 Call EventBase.set_target, X0, X1
	067 Move X10, 0x30C000
	068 Move X8, [X20]
	069 Move X10, [X10+1808]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Move X1, [X10]
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 2
	081 Move X0, X20
	082 Call 0x1C5D788
	083 Move X10, 0x30C000
	084 Move X8, [X20]
	085 Move X10, [X10+1808]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X1, [X10]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move W2, 2
	097 Move X0, X20
	098 Call 0x1C5D788
	099 Move W9, [X10]
	100 Add W9, W9, 2
	101 Add X8, X8, W9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X2, [X0+8]
	105 Move X0, X20
	106 Move X1, X21
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X8, [X20]
	109 Move X9, [X8+408]
	110 Move X2, [X8+416]
	111 Move X0, X20
	112 Move X1, X19
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X20, X31
	115 Compare X19, 0
	116 JumpIfEqual {140}
	117 Move X10, 0x2E2000
	118 Move X8, [X19]
	119 Move X10, [X10+3584]
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Move X1, [X10]
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move X0, X19
	131 Move W2, W31
	132 Call 0x1C5D788
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X19
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Compare X20, 0
	141 JumpIfNotEqual {161}
	142 Move X20, [X31+16]
	143 Move X19, [X31+24]
	144 Move X30, [X31+32]
	145 Move X21, [X31+40]
	146 Return 
	147 Move W9, [X10]
	148 Add W9, W9, 2
	149 Add X8, X8, W9
	150 Add X0, X8, 312
	151 Move X3, [X0]
	152 Move X2, [X0+8]
	153 Move X0, X20
	154 Move X20, [X31+16]
	155 Move X19, [X31+24]
	156 Move X1, X21
	157 Move X30, [X31+32]
	158 Move X21, [X31+40]
	159 CallNoReturn X3
	160 Call 0x1C17F20
	161 Move X0, X20
	162 Call 0x1C17F18
	163 Move X21, X0
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, X21
	166 Call 0x3EB2AD0
	167 Move X20, [X0]
	168 Call 0x3EB2AE0
	169 Move X20, X31
	170 Move X21, X0
	171 Compare X19, 0
	172 JumpIfEqual {196}
	173 Move X10, 0x2E2000
	174 Move X8, [X19]
	175 Move X10, [X10+3584]
	176 NotImplemented "Instruction LDRH not yet implemented."
	177 Move X1, [X10]
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X19
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X19
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Compare X20, 0
	197 JumpIfNotEqual {200}
	198 Move X0, X21
	199 Call 0x1D2D690
	200 Move X0, X20
	201 Call 0x1C17F18
	202 Call 0x1991590

Method: System.Void UnityEngine.UIElements.INotifyValueChanged<System.String>.SetValueWithoutNotify(System.String newValue)

Disassembly:
	0x03E12658 B.CC 0x3E126E8
	0x03E1265C LDR X9, [X9 + 0xC8]
	0x03E12660 ADD X9, X9, X10, 0x3, LSL
	0x03E12664 LDUR X9, [X9 - 0x8]
	0x03E12668 CMP X9, X8
	0x03E1266C B.NE 0x3E126E8
	0x03E12670 LDR X0, [X19 + 0xB8]
	0x03E12674 CBZ X0, 0x3E126E8
	0x03E12678 MOV X1, X31
	0x03E1267C BL 0x3D9A99C
	0x03E12680 CBZ X0, 0x3E126E8
	0x03E12684 LDR W21, [X0 + 0x18]
	0x03E12688 MOV X0, X20
	0x03E1268C MOV X1, X19
	0x03E12690 BL 0x3E11D34
	0x03E12694 CMP W21, 0x1
	0x03E12698 B.LT 0x3E126D4
	0x03E1269C LDR X0, [X19 + 0xB8]
	0x03E126A0 CBZ X0, 0x3E126E8
	0x03E126A4 MOV X1, X31
	0x03E126A8 BL 0x3D9A99C
	0x03E126AC CBZ X0, 0x3E126E8
	0x03E126B0 LDR W8, [X0 + 0x18]
	0x03E126B4 CMP W8, W21
	0x03E126B8 B.LE 0x3E126D4
	0x03E126BC LDR X0, [X19 + 0xB8]
	0x03E126C0 CBZ X0, 0x3E126E8
	0x03E126C4 MOV X1, X31
	0x03E126C8 MOV W2, W21
	0x03E126CC MOV X3, X31
	0x03E126D0 BL 0x3D9AD38
	0x03E126D4 LDP X20, X19, [X31 + 0x30]
	0x03E126D8 LDP X22, X21, [X31 + 0x20]
	0x03E126DC LDR X30, [X31 + 0x10]
	0x03E126E0 ADD X31, X31, 0x40
	0x03E126E4 RET
	0x03E126E8 BL 0x1C16F20
	0x03E126EC LDR W0, [X0 + 0x420]
	0x03E126F0 RET
	0x03E126F4 STR X30, [X31 - 0x30]!
	0x03E126F8 STP X22, X21, [X31 + 0x10]
	0x03E126FC STP X20, X19, [X31 + 0x20]
	0x03E12700 ADRP X22, 0x5D6000
	0x03E12704 ADRP X21, 0x30B000
	0x03E12708 LDRB W8, [X22 + 0x383]
	0x03E1270C LDR X21, [X21 + 0x630]
	0x03E12710 MOV W20, W1
	0x03E12714 MOV X19, X0
	0x03E12718 TBNZ X8, 0x0, 0x3E12730
	0x03E1271C ADRP X0, 0x30B000
	0x03E12720 LDR X0, [X0 + 0x630]
	0x03E12724 BL 0x1C16CF4
	0x03E12728 MOVZ W8, 0x1
	0x03E1272C STRB W8, [X22 + 0x383]
	0x03E12730 LDR X8, [X19]
	0x03E12734 STR W20, [X19 + 0x420]
	0x03E12738 MOV X0, X19
	0x03E1273C LDR X9, [X8 + 0xB18]
	0x03E12740 LDR X1, [X8 + 0xB20]
	0x03E12744 BLR X9
	0x03E12748 LDR X8, [X19]
	0x03E1274C LDR X1, [X21]
	0x03E12750 MOV X20, X0
	0x03E12754 LDRH W9, [X8 + 0x12E]
	0x03E12758 CBZ X9, 0x3E1277C
	0x03E1275C LDR X10, [X8 + 0xB0]
	0x03E12760 ADD X10, X10, 0x8
	0x03E12764 LDUR X11, [X10 - 0x8]
	0x03E12768 CMP X11, X1
	0x03E1276C B.EQ 0x3E1278C
	0x03E12770 SUBS X9, X9, 0x1
	0x03E12774 ADD X10, X10, 0x10
	0x03E12778 B.NE 0x3E12764
	0x03E1277C MOVZ W2, 0x15
	0x03E12780 MOV X0, X19
	0x03E12784 BL 0x1C5C788

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5D7000
	007 Move X21, 0x30C000
	008 Move W8, [X22+886]
	009 Move X21, [X21+1584]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x30C000
	017 Move X0, [X0+1584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+886], W8
	021 Move X8, [X19]
	022 Move X1, [X21]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 21
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 21
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X2, [X0+8]
	041 Move X0, X19
	042 Move X1, X20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X19+992]
	045 Move X20, X0
	046 Move X1, X20
	047 Move X2, X31
	048 Move X0, X8
	049 Call String.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {72}
	054 Move X0, X19
	055 Move X1, X20
	056 Call TextElement.set_renderedText, X0, X1
	057 Move W1, 2056
	058 Move X0, X19
	059 Move X2, X31
	060 Move [X19+992], X20
	061 Call VisualElement.IncrementVersion, X0, X1
	062 Move X0, [X19+88]
	063 Move X1, X31
	064 Call String.IsNullOrEmpty, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {72}
	069 Move X0, X19
	070 Move X1, X31
	071 Call VisualElement.SaveViewData, X0
	072 Move X8, [X19+1024]
	073 Compare X8, 0
	074 JumpIfEqual {87}
	075 Move X0, [X8+32]
	076 Compare X0, 0
	077 JumpIfEqual {93}
	078 Move X1, X20
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 Move X2, X31
	084 Move X30, [X31+48]
	085 Call TextEditingUtilities.set_text, X0, X1
	086 Return 
	087 Move X20, [X31+32]
	088 Move X19, [X31+40]
	089 Move X22, [X31+16]
	090 Move X21, [X31+24]
	091 Move X30, [X31+48]
	092 Return 
	093 Call 0x1C17F20

Method: UnityEngine.UIElements.ITextEdition get_edition()

Disassembly:
	0x03E0BF0C MOV X0, X21

ISIL:
	001 Return X0

Method: System.Boolean UnityEngine.UIElements.ITextEdition.get_multiline()

Disassembly:
	0x03E127E8 LDR X8, [X0]
	0x03E127EC MOV X19, X0

ISIL:
	001 Move W0, [X0+1032]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_multiline(System.Boolean value)

Disassembly:
	0x03E127F0 LDR X9, [X8 + 0xB18]
	0x03E127F4 LDR X1, [X8 + 0xB20]
	0x03E127F8 BLR X9
	0x03E127FC STR X0, [X19 + 0x458]
	0x03E12800 LDP X30, X19, [X31], #0x10
	0x03E12804 RET
	0x03E12808 LDR X8, [X0]
	0x03E1280C LDR X1, [X0 + 0x458]
	0x03E12810 LDR X3, [X8 + 0xB28]
	0x03E12814 LDR X2, [X8 + 0xB30]
	0x03E12818 BR X3
	0x03E1281C LDR X0, [X0 + 0x428]
	0x03E12820 RET
	0x03E12824 STR X1, [X0 + 0x428]
	0x03E12828 RET
	0x03E1282C LDR X0, [X0 + 0x430]
	0x03E12830 RET
	0x03E12834 STR X1, [X0 + 0x430]
	0x03E12838 RET
	0x03E1283C LDR X0, [X0 + 0x438]
	0x03E12840 RET
	0x03E12844 STR X1, [X0 + 0x438]
	0x03E12848 RET
	0x03E1284C LDR X0, [X0 + 0x440]
	0x03E12850 RET
	0x03E12854 STR X1, [X0 + 0x440]
	0x03E12858 RET
	0x03E1285C LDR X0, [X0 + 0x448]
	0x03E12860 RET
	0x03E12864 STR X1, [X0 + 0x448]
	0x03E12868 RET
	0x03E1286C STP X30, X21, [X31 - 0x20]!
	0x03E12870 STP X20, X19, [X31 + 0x10]
	0x03E12874 ADRP X19, 0x5D6000
	0x03E12878 LDRB W8, [X19 + 0x384]
	0x03E1287C MOV X21, X1
	0x03E12880 MOV X20, X0
	0x03E12884 TBNZ X8, 0x0, 0x3E128B4
	0x03E12888 ADRP X0, 0x2E1000
	0x03E1288C LDR X0, [X0 + 0xE00]
	0x03E12890 BL 0x1C16CF4
	0x03E12894 ADRP X0, 0x30B000
	0x03E12898 LDR X0, [X0 + 0x710]
	0x03E1289C BL 0x1C16CF4
	0x03E128A0 ADRP X0, 0x356000
	0x03E128A4 LDR X0, [X0 + 0x288]
	0x03E128A8 BL 0x1C16CF4
	0x03E128AC MOVZ W8, 0x1
	0x03E128B0 STRB W8, [X19 + 0x384]
	0x03E128B4 LDR X0, [X20 + 0x410]
	0x03E128B8 CBZ X0, 0x3E128E8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D7000
	006 Move W8, [X21+887]
	007 Move X19, X0
	008 And W20, W1, 1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x30C000
	014 Move X0, [X0+1584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+887], W8
	018 Move W8, [X19+1032]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X10, 0x30C000
	021 Move X8, [X19]
	022 Move X10, [X10+1584]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 2
	034 Move X0, X19
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 2
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X19
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {55}
	048 Move X8, [X19+1024]
	049 Compare X8, 0
	050 JumpIfEqual {61}
	051 Move X8, [X8+32]
	052 Compare X8, 0
	053 JumpIfEqual {61}
	054 Move [X8+38], W20
	055 Move [X19+1032], W20
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Return 
	061 Call 0x1C17F20

Method: UnityEngine.TouchScreenKeyboardType UnityEngine.UIElements.ITextEdition.get_keyboardType()

Disassembly:
	0x03E128BC MOV X1, X31
	0x03E128C0 BL 0x3C3CF1C

ISIL:
	001 Move W0, [X0+1048]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_keyboardType(UnityEngine.TouchScreenKeyboardType value)

Disassembly:
	0x03E128C4 MOV X1, X21
	0x03E128C8 MOV X2, X31

ISIL:
	001 Move [X0+1048], W1
	002 Return 

Method: System.Boolean UnityEngine.UIElements.ITextEdition.get_hideMobileInput()

Disassembly:
	0x03E128CC BL 0x3226EF8
	0x03E128D0 TBZ X0, 0x0, 0x3E128E8
	0x03E128D4 LDR X0, [X20 + 0x410]
	0x03E128D8 CBZ X0, 0x3E12A80
	0x03E128DC MOV X1, X21
	0x03E128E0 MOV X2, X31
	0x03E128E4 BL 0x3C3CF58
	0x03E128E8 LDR X8, [X20]
	0x03E128EC MOV X0, X20
	0x03E128F0 LDR X9, [X8 + 0xB18]
	0x03E128F4 LDR X1, [X8 + 0xB20]
	0x03E128F8 BLR X9
	0x03E128FC MOV X1, X21
	0x03E12900 MOV X2, X31
	0x03E12904 BL 0x3226EF8
	0x03E12908 TBZ X0, 0x0, 0x3E12A68
	0x03E1290C LDR X8, [X20]
	0x03E12910 MOV X0, X20
	0x03E12914 LDR X9, [X8 + 0xB18]
	0x03E12918 LDR X1, [X8 + 0xB20]
	0x03E1291C BLR X9
	0x03E12920 ADRP X8, 0x356000
	0x03E12924 LDR X8, [X8 + 0x288]
	0x03E12928 MOV X19, X0
	0x03E1292C LDR X8, [X8]
	0x03E12930 LDR W9, [X8 + 0xE0]
	0x03E12934 CBNZ W9, 0x3E12940
	0x03E12938 MOV X0, X8
	0x03E1293C BL 0x1C16DFC
	0x03E12940 MOV X0, X19
	0x03E12944 MOV X1, X21
	0x03E12948 MOV X2, X31
	0x03E1294C BL 0x3DA2D9C
	0x03E12950 MOV X19, X0
	0x03E12954 MOV X0, X20
	0x03E12958 MOV X1, X31
	0x03E1295C BL 0x3DEBF58
	0x03E12960 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5D7000
	006 Move X21, 0x2E2000
	007 Move W8, [X20+888]
	008 Move X21, [X21+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2E2000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+888], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call Application.get_platform
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W8, [X19+1052]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move W0, 1
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_hideMobileInput(System.Boolean value)

Disassembly:
	0x03E12964 CBZ X19, 0x3E12A7C
	0x03E12968 MOV X0, X19
	0x03E1296C MOV X2, X31
	0x03E12970 BL 0x3D9C6C8
	0x03E12974 ADRP X10, 0x30B000
	0x03E12978 LDR X8, [X20]
	0x03E1297C LDR X10, [X10 + 0x710]
	0x03E12980 LDRH W9, [X8 + 0x12E]
	0x03E12984 LDR X1, [X10]
	0x03E12988 CBZ X9, 0x3E129AC
	0x03E1298C LDR X10, [X8 + 0xB0]
	0x03E12990 ADD X10, X10, 0x8
	0x03E12994 LDUR X11, [X10 - 0x8]
	0x03E12998 CMP X11, X1
	0x03E1299C B.EQ 0x3E129BC
	0x03E129A0 SUBS X9, X9, 0x1
	0x03E129A4 ADD X10, X10, 0x10
	0x03E129A8 B.NE 0x3E12994
	0x03E129AC MOVZ W2, 0x2
	0x03E129B0 MOV X0, X20
	0x03E129B4 BL 0x1C5C788
	0x03E129B8 B 0x3E129CC
	0x03E129BC LDR W9, [X10]
	0x03E129C0 ADD W9, W9, 0x2
	0x03E129C4 ADD X8, X8, W9, 0x4, SXTW
	0x03E129C8 ADD X0, X8, 0x138
	0x03E129CC LDP X8, X2, [X0]
	0x03E129D0 MOV X0, X20
	0x03E129D4 MOV X1, X21
	0x03E129D8 BLR X8
	0x03E129DC MOV X0, X20
	0x03E129E0 MOV X1, X31
	0x03E129E4 BL 0x3DEBF58
	0x03E129E8 CBZ X0, 0x3E129FC
	0x03E129EC LDR X8, [X0]
	0x03E129F0 LDP X9, X2, [X8 + 0x198]
	0x03E129F4 MOV X1, X19
	0x03E129F8 BLR X9
	0x03E129FC MOV X20, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5D7000
	007 Move X22, 0x2E2000
	008 Move W8, [X21+889]
	009 Move X22, [X22+2416]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2E2000
	017 Move X0, [X0+2416]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+889], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X31
	027 Call Application.get_platform
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W20, 1
	034 And W8, W20, 1
	035 Move [X19+1052], W8
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 

Method: System.Boolean UnityEngine.UIElements.ITextEdition.get_isReadOnly()

Disassembly:
	0x03E12A00 CBZ X19, 0x3E12A64
	0x03E12A04 ADRP X10, 0x2E1000
	0x03E12A08 LDR X8, [X19]
	0x03E12A0C LDR X10, [X10 + 0xE00]
	0x03E12A10 LDRH W9, [X8 + 0x12E]
	0x03E12A14 LDR X1, [X10]
	0x03E12A18 CBZ X9, 0x3E12A3C
	0x03E12A1C LDR X10, [X8 + 0xB0]
	0x03E12A20 ADD X10, X10, 0x8
	0x03E12A24 LDUR X11, [X10 - 0x8]
	0x03E12A28 CMP X11, X1

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+1053]
	003 Compare W8, 0
	004 JumpIfEqual {6}
	005 Move W8, 1
	006 Move X1, X31
	007 Call VisualElement.get_enabledInHierarchy, X0
	008 Xor W8, W0, 1
	009 And W0, W8, 1
	010 Move X30, [X31+16]
	011 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_isReadOnly(System.Boolean value)

Disassembly:
	0x03E12A2C B.EQ 0x3E12A4C
	0x03E12A30 SUBS X9, X9, 0x1
	0x03E12A34 ADD X10, X10, 0x10
	0x03E12A38 B.NE 0x3E12A24
	0x03E12A3C MOV X0, X19
	0x03E12A40 MOV W2, W31
	0x03E12A44 BL 0x1C5C788
	0x03E12A48 B 0x3E12A58
	0x03E12A4C LDRSW X9, [X10]
	0x03E12A50 ADD X8, X8, X9, 0x4, LSL
	0x03E12A54 ADD X0, X8, 0x138
	0x03E12A58 LDP X8, X1, [X0]
	0x03E12A5C MOV X0, X19
	0x03E12A60 BLR X8
	0x03E12A64 CBNZ X20, 0x3E12A74
	0x03E12A68 LDP X20, X19, [X31 + 0x10]
	0x03E12A6C LDP X30, X21, [X31], #0x20
	0x03E12A70 RET
	0x03E12A74 MOV X0, X20
	0x03E12A78 BL 0x1C16F18
	0x03E12A7C BL 0x1C16F20
	0x03E12A80 BL 0x1C16F20
	0x03E12A84 B 0x3E12A90
	0x03E12A88 B 0x3E12A90
	0x03E12A8C B 0x3E12A90
	0x03E12A90 MOV X21, X0
	0x03E12A94 CMP W1, 0x1
	0x03E12A98 B.NE 0x3E12AB0
	0x03E12A9C MOV X0, X21
	0x03E12AA0 BL 0x3EB1AD0
	0x03E12AA4 LDR X20, [X0]
	0x03E12AA8 BL 0x3EB1AE0
	0x03E12AAC B 0x3E12A00

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5D7000
	007 Move W8, [X22+890]
	008 Move W20, W1
	009 Move X19, X0
	010 And W21, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x359000
	016 Move X0, [X0+1272]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+890], W8
	020 Move W8, [X19+1053]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move TEMP, X20
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {27}
	026 Move X20, X31
	027 Move X8, 0x359000
	028 Move X8, [X8+1272]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move X1, X19
	032 Move X20, X0
	033 Call TextEditingManipulator..ctor, X0, X1
	034 Move [X19+1024], X20
	035 Move [X19+1053], W21
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 

Method: System.Void ProcessMenuCommand(System.String command)

Disassembly:
	0x03E12AB0 MOV X20, X31
	0x03E12AB4 B 0x3E12ABC
	0x03E12AB8 MOV X21, X0
	0x03E12ABC CBZ X19, 0x3E12B20
	0x03E12AC0 ADRP X10, 0x2E1000
	0x03E12AC4 LDR X8, [X19]
	0x03E12AC8 LDR X10, [X10 + 0xE00]
	0x03E12ACC LDRH W9, [X8 + 0x12E]
	0x03E12AD0 LDR X1, [X10]
	0x03E12AD4 CBZ X9, 0x3E12AF8
	0x03E12AD8 LDR X10, [X8 + 0xB0]
	0x03E12ADC ADD X10, X10, 0x8
	0x03E12AE0 LDUR X11, [X10 - 0x8]
	0x03E12AE4 CMP X11, X1
	0x03E12AE8 B.EQ 0x3E12B08
	0x03E12AEC SUBS X9, X9, 0x1
	0x03E12AF0 ADD X10, X10, 0x10
	0x03E12AF4 B.NE 0x3E12AE0
	0x03E12AF8 MOV X0, X19
	0x03E12AFC MOV W2, W31
	0x03E12B00 BL 0x1C5C788
	0x03E12B04 B 0x3E12B14
	0x03E12B08 LDRSW X9, [X10]
	0x03E12B0C ADD X8, X8, X9, 0x4, LSL
	0x03E12B10 ADD X0, X8, 0x138
	0x03E12B14 LDP X8, X1, [X0]
	0x03E12B18 MOV X0, X19
	0x03E12B1C BLR X8
	0x03E12B20 CBNZ X20, 0x3E12B2C
	0x03E12B24 MOV X0, X21
	0x03E12B28 BL 0x1D2C690
	0x03E12B2C MOV X0, X20
	0x03E12B30 BL 0x1C16F18
	0x03E12B34 BL 0x1990590
	0x03E12B38 STP X30, X21, [X31 - 0x20]!
	0x03E12B3C STP X20, X19, [X31 + 0x10]
	0x03E12B40 ADRP X21, 0x5D6000
	0x03E12B44 LDRB W8, [X21 + 0x385]
	0x03E12B48 MOV X19, X1
	0x03E12B4C MOV X20, X0
	0x03E12B50 TBNZ X8, 0x0, 0x3E12B68
	0x03E12B54 ADRP X0, 0x30B000
	0x03E12B58 LDR X0, [X0 + 0x630]
	0x03E12B5C BL 0x1C16CF4
	0x03E12B60 MOVZ W8, 0x1
	0x03E12B64 STRB W8, [X21 + 0x385]
	0x03E12B68 CBZ X20, 0x3E12C10
	0x03E12B6C ADRP X10, 0x30B000
	0x03E12B70 LDR X8, [X20]
	0x03E12B74 LDR X10, [X10 + 0x630]
	0x03E12B78 LDRH W9, [X8 + 0x12E]
	0x03E12B7C LDR X1, [X10]
	0x03E12B80 CBZ X9, 0x3E12BA4
	0x03E12B84 LDR X10, [X8 + 0xB0]
	0x03E12B88 ADD X10, X10, 0x8
	0x03E12B8C LDUR X11, [X10 - 0x8]
	0x03E12B90 CMP X11, X1
	0x03E12B94 B.EQ 0x3E12BB4
	0x03E12B98 SUBS X9, X9, 0x1
	0x03E12B9C ADD X10, X10, 0x10
	0x03E12BA0 B.NE 0x3E12B8C
	0x03E12BA4 MOVZ W2, 0x4
	0x03E12BA8 MOV X0, X20
	0x03E12BAC BL 0x1C5C788
	0x03E12BB0 B 0x3E12BC4
	0x03E12BB4 LDR W9, [X10]
	0x03E12BB8 ADD W9, W9, 0x4
	0x03E12BBC ADD X8, X8, W9, 0x4, SXTW
	0x03E12BC0 ADD X0, X8, 0x138
	0x03E12BC4 LDP X8, X1, [X0]
	0x03E12BC8 MOV X0, X20
	0x03E12BCC BLR X8
	0x03E12BD0 CBZ X19, 0x3E12C00
	0x03E12BD4 MOV W2, W0
	0x03E12BD8 TBNZ X0, 0x1F, 0x3E12C00
	0x03E12BDC LDR W8, [X19 + 0x10]
	0x03E12BE0 CMP W8, W2
	0x03E12BE4 B.LE 0x3E12C00
	0x03E12BE8 MOV X0, X19
	0x03E12BEC LDP X20, X19, [X31 + 0x10]
	0x03E12BF0 MOV W1, W31
	0x03E12BF4 MOV X3, X31
	0x03E12BF8 LDP X30, X21, [X31], #0x20
	0x03E12BFC B 0x3228DE4
	0x03E12C00 MOV X0, X19
	0x03E12C04 LDP X20, X19, [X31 + 0x10]
	0x03E12C08 LDP X30, X21, [X31], #0x20
	0x03E12C0C RET
	0x03E12C10 BL 0x1C16F20
	0x03E12C14 STP X30, X21, [X31 - 0x20]!
	0x03E12C18 STP X20, X19, [X31 + 0x10]
	0x03E12C1C ADRP X21, 0x5D6000
	0x03E12C20 LDRB W8, [X21 + 0x386]
	0x03E12C24 MOV W20, W1
	0x03E12C28 MOV X19, X0
	0x03E12C2C TBNZ X8, 0x0, 0x3E12C44
	0x03E12C30 ADRP X0, 0x30B000
	0x03E12C34 LDR X0, [X0 + 0x630]
	0x03E12C38 BL 0x1C16CF4
	0x03E12C3C MOVZ W8, 0x1
	0x03E12C40 STRB W8, [X21 + 0x386]
	0x03E12C44 LDRH W8, [X19 + 0x460]
	0x03E12C48 CMP W8, W20, UXTH
	0x03E12C4C B.EQ 0x3E12CD4
	0x03E12C50 ADRP X10, 0x30B000
	0x03E12C54 LDR X8, [X19]
	0x03E12C58 LDR X10, [X10 + 0x630]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5D7000
	007 Move X21, 0x359000
	008 Move W8, [X22+891]
	009 Move X21, [X21+1280]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x359000
	017 Move X0, [X0+1280]
	018 Call 0x1C17CF4
	019 Move X0, 0x2E2000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+891], W8
	024 Move X1, [X21]
	025 Move X22, 0x2E2000
	026 Move X22, [X22+3584]
	027 Move X0, X19
	028 Call 0x2901170, X0
	029 Move X19, X0
	030 Compare X0, 0
	031 JumpIfEqual {72}
	032 Move X0, X19
	033 Move X1, X20
	034 Move X2, X31
	035 Call EventBase.set_target, X0, X1
	036 Move X8, [X20]
	037 Move X9, [X8+408]
	038 Move X2, [X8+416]
	039 Move X0, X20
	040 Move X1, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X20, X31
	043 Move X8, [X19]
	044 Move X1, [X22]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move X0, X19
	055 Move W2, W31
	056 Call 0x1C5D788
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add X8, X8, X9
	059 Add X0, X8, 312
	060 Move X8, [X0]
	061 Move X1, [X0+8]
	062 Move X0, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Compare X20, 0
	065 JumpIfNotEqual {73}
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return 
	072 Call 0x1C17F20
	073 Move X0, X20
	074 Call 0x1C17F18
	075 Move X21, X0
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, X21
	078 Call 0x3EB2AD0
	079 Move X20, [X0]
	080 Call 0x3EB2AE0
	081 Compare X19, 0
	082 JumpIfNotEqual {43}
	083 Move X20, X31
	084 Move X21, X0
	085 Compare X19, 0
	086 JumpIfEqual {108}
	087 Move X8, [X19]
	088 Move X1, [X22]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move X0, X19
	099 Move W2, W31
	100 Call 0x1C5D788
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Add X8, X8, X9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X19
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Compare X20, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X21
	111 Call 0x1D2D690
	112 Move X0, X20
	113 Call 0x1C17F18
	114 Call 0x1991590

Method: System.Void Cut(UnityEngine.UIElements.DropdownMenuAction a)

Disassembly:
	0x03E12C5C STRH W20, [X19 + 0x460]
	0x03E12C60 LDRH W9, [X8 + 0x12E]
	0x03E12C64 LDR X1, [X10]
	0x03E12C68 CBZ X9, 0x3E12C8C
	0x03E12C6C LDR X10, [X8 + 0xB0]
	0x03E12C70 ADD X10, X10, 0x8
	0x03E12C74 LDUR X11, [X10 - 0x8]
	0x03E12C78 CMP X11, X1
	0x03E12C7C B.EQ 0x3E12C9C
	0x03E12C80 SUBS X9, X9, 0x1
	0x03E12C84 ADD X10, X10, 0x10
	0x03E12C88 B.NE 0x3E12C74
	0x03E12C8C MOVZ W2, 0x17
	0x03E12C90 MOV X0, X19
	0x03E12C94 BL 0x1C5C788
	0x03E12C98 B 0x3E12CAC
	0x03E12C9C LDR W9, [X10]
	0x03E12CA0 ADD W9, W9, 0x17

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5D7000
	006 Move X21, 0x355000
	007 Move W8, [X20+892]
	008 Move X21, [X21+2520]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x355000
	015 Move X0, [X0+2520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+892], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call TextElement.ProcessMenuCommand, X0, X1
	026 Return 

Method: System.Void Copy(UnityEngine.UIElements.DropdownMenuAction a)

Disassembly:
	0x03E12CA4 ADD X8, X8, W9, 0x4, SXTW
	0x03E12CA8 ADD X0, X8, 0x138
	0x03E12CAC LDP X8, X1, [X0]
	0x03E12CB0 MOV X0, X19
	0x03E12CB4 BLR X8
	0x03E12CB8 TBZ X0, 0x0, 0x3E12CD4
	0x03E12CBC MOV X0, X19
	0x03E12CC0 LDP X20, X19, [X31 + 0x10]
	0x03E12CC4 MOVZ W1, 0x800
	0x03E12CC8 MOV X2, X31
	0x03E12CCC LDP X30, X21, [X31], #0x20
	0x03E12CD0 B 0x3DE5048
	0x03E12CD4 LDP X20, X19, [X31 + 0x10]
	0x03E12CD8 LDP X30, X21, [X31], #0x20
	0x03E12CDC RET
	0x03E12CE0 STR X30, [X31 - 0x20]!
	0x03E12CE4 STP X20, X19, [X31 + 0x10]
	0x03E12CE8 ADRP X20, 0x5D6000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5D7000
	006 Move X21, 0x355000
	007 Move W8, [X20+893]
	008 Move X21, [X21+2504]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x355000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+893], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call TextElement.ProcessMenuCommand, X0, X1
	026 Return 

Method: System.Void Paste(UnityEngine.UIElements.DropdownMenuAction a)

Disassembly:
	0x03E12CEC LDRB W8, [X20 + 0x387]
	0x03E12CF0 MOV X19, X0
	0x03E12CF4 TBNZ X8, 0x0, 0x3E12D0C
	0x03E12CF8 ADRP X0, 0x30B000
	0x03E12CFC LDR X0, [X0 + 0x630]
	0x03E12D00 BL 0x1C16CF4
	0x03E12D04 MOVZ W8, 0x1
	0x03E12D08 STRB W8, [X20 + 0x387]
	0x03E12D0C CBZ X19, 0x3E12D90
	0x03E12D10 ADRP X10, 0x30B000
	0x03E12D14 LDR X8, [X19]
	0x03E12D18 LDR X10, [X10 + 0x630]
	0x03E12D1C LDRH W9, [X8 + 0x12E]
	0x03E12D20 LDR X1, [X10]
	0x03E12D24 CBZ X9, 0x3E12D48
	0x03E12D28 LDR X10, [X8 + 0xB0]
	0x03E12D2C ADD X10, X10, 0x8
	0x03E12D30 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5D7000
	006 Move X21, 0x355000
	007 Move W8, [X20+894]
	008 Move X21, [X21+2512]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x355000
	015 Move X0, [X0+2512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+894], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call TextElement.ProcessMenuCommand, X0, X1
	026 Return 

Method: System.Void BuildContextualMenu(UnityEngine.UIElements.ContextualMenuPopulateEvent evt)

Disassembly:
	0x03E12D34 CMP X11, X1
	0x03E12D38 B.EQ 0x3E12D58
	0x03E12D3C SUBS X9, X9, 0x1
	0x03E12D40 ADD X10, X10, 0x10
	0x03E12D44 B.NE 0x3E12D30
	0x03E12D48 MOVZ W2, 0x17
	0x03E12D4C MOV X0, X19
	0x03E12D50 BL 0x1C5C788
	0x03E12D54 B 0x3E12D68
	0x03E12D58 LDR W9, [X10]
	0x03E12D5C ADD W9, W9, 0x17
	0x03E12D60 ADD X8, X8, W9, 0x4, SXTW
	0x03E12D64 ADD X0, X8, 0x138
	0x03E12D68 LDP X8, X1, [X0]
	0x03E12D6C MOV X0, X19
	0x03E12D70 BLR X8
	0x03E12D74 TBZ X0, 0x0, 0x3E12D80
	0x03E12D78 LDRH W0, [X19 + 0x460]
	0x03E12D7C B 0x3E12D84
	0x03E12D80 MOV W0, W31
	0x03E12D84 LDP X20, X19, [X31 + 0x10]
	0x03E12D88 LDR X30, [X31], #0x20
	0x03E12D8C RET
	0x03E12D90 BL 0x1C16F20
	0x03E12D94 LDRB W0, [X0 + 0x462]
	0x03E12D98 RET
	0x03E12D9C LDRB W9, [X0 + 0x462]
	0x03E12DA0 AND W8, W1, 0x1
	0x03E12DA4 CMP W9, W8
	0x03E12DA8 B.NE 0x3E12DB0
	0x03E12DAC RET
	0x03E12DB0 MOVZ W1, 0x800
	0x03E12DB4 MOV X2, X31
	0x03E12DB8 STRB W8, [X0 + 0x462]
	0x03E12DBC B 0x3DE5048
	0x03E12DC0 LDRB W0, [X0 + 0x463]
	0x03E12DC4 RET
	0x03E12DC8 AND W8, W1, 0x1
	0x03E12DCC STRB W8, [X0 + 0x463]
	0x03E12DD0 RET
	0x03E12DD4 LDR X0, [X0 + 0x458]
	0x03E12DD8 RET
	0x03E12DDC LDRB W8, [X0 + 0x470]
	0x03E12DE0 CBZ W8, 0x3E12DF4
	0x03E12DE4 LDRB W8, [X0 + 0x20]
	0x03E12DE8 CMP W8, 0x0
	0x03E12DEC CSET W0, NE
	0x03E12DF0 RET
	0x03E12DF4 MOV W0, W31
	0x03E12DF8 RET
	0x03E12DFC LDRB W9, [X0 + 0x470]
	0x03E12E00 AND W8, W1, 0x1
	0x03E12E04 CMP W9, W8
	0x03E12E08 B.EQ 0x3E12E14
	0x03E12E0C STRB W8, [X0 + 0x20]
	0x03E12E10 STRB W8, [X0 + 0x470]
	0x03E12E14 RET
	0x03E12E18 STR X30, [X31 - 0x20]!
	0x03E12E1C STP X20, X19, [X31 + 0x10]
	0x03E12E20 ADRP X20, 0x5D6000
	0x03E12E24 LDRB W8, [X20 + 0x38A]
	0x03E12E28 MOV X19, X0
	0x03E12E2C TBNZ X8, 0x0, 0x3E12E44
	0x03E12E30 ADRP X0, 0x30B000
	0x03E12E34 LDR X0, [X0 + 0x628]
	0x03E12E38 BL 0x1C16CF4
	0x03E12E3C MOVZ W8, 0x1
	0x03E12E40 STRB W8, [X20 + 0x38A]
	0x03E12E44 CBZ X19, 0x3E12EE0
	0x03E12E48 ADRP X10, 0x30B000
	0x03E12E4C LDR X8, [X19]
	0x03E12E50 LDR X10, [X10 + 0x628]
	0x03E12E54 LDRH W9, [X8 + 0x12E]
	0x03E12E58 LDR X1, [X10]
	0x03E12E5C CBZ X9, 0x3E12E80
	0x03E12E60 LDR X10, [X8 + 0xB0]
	0x03E12E64 ADD X10, X10, 0x8
	0x03E12E68 LDUR X11, [X10 - 0x8]
	0x03E12E6C CMP X11, X1
	0x03E12E70 B.EQ 0x3E12E90
	0x03E12E74 SUBS X9, X9, 0x1
	0x03E12E78 ADD X10, X10, 0x10
	0x03E12E7C B.NE 0x3E12E68
	0x03E12E80 MOV X0, X19
	0x03E12E84 MOV W2, W31
	0x03E12E88 BL 0x1C5C788
	0x03E12E8C B 0x3E12E9C
	0x03E12E90 LDRSW X9, [X10]
	0x03E12E94 ADD X8, X8, X9, 0x4, LSL
	0x03E12E98 ADD X0, X8, 0x138
	0x03E12E9C LDP X8, X1, [X0]
	0x03E12EA0 MOV X0, X19
	0x03E12EA4 BLR X8
	0x03E12EA8 TBZ X0, 0x0, 0x3E12ED0
	0x03E12EAC MOV X0, X19
	0x03E12EB0 BL 0x3E0AC7C
	0x03E12EB4 CBZ X0, 0x3E12EE0
	0x03E12EB8 LDR X0, [X0 + 0x10]
	0x03E12EBC CBZ X0, 0x3E12ED0
	0x03E12EC0 LDP X20, X19, [X31 + 0x10]
	0x03E12EC4 MOV X1, X31
	0x03E12EC8 LDR X30, [X31], #0x20
	0x03E12ECC B 0x3C7B51C
	0x03E12ED0 LDP X20, X19, [X31 + 0x10]
	0x03E12ED4 MOVN W0, 0x0
	0x03E12ED8 LDR X30, [X31], #0x20
	0x03E12EDC RET
	0x03E12EE0 BL 0x1C16F20
	0x03E12EE4 STP X30, X21, [X31 - 0x20]!
	0x03E12EE8 STP X20, X19, [X31 + 0x10]
	0x03E12EEC ADRP X21, 0x5D6000
	0x03E12EF0 LDRB W8, [X21 + 0x38B]
	0x03E12EF4 MOV W19, W1
	0x03E12EF8 MOV X20, X0
	0x03E12EFC TBNZ X8, 0x0, 0x3E12F14
	0x03E12F00 ADRP X0, 0x30B000
	0x03E12F04 LDR X0, [X0 + 0x628]
	0x03E12F08 BL 0x1C16CF4
	0x03E12F0C MOVZ W8, 0x1
	0x03E12F10 STRB W8, [X21 + 0x38B]
	0x03E12F14 CBZ X20, 0x3E12FB0
	0x03E12F18 ADRP X10, 0x30B000
	0x03E12F1C LDR X8, [X20]
	0x03E12F20 LDR X10, [X10 + 0x628]
	0x03E12F24 LDRH W9, [X8 + 0x12E]
	0x03E12F28 LDR X1, [X10]
	0x03E12F2C CBZ X9, 0x3E12F50
	0x03E12F30 LDR X10, [X8 + 0xB0]
	0x03E12F34 ADD X10, X10, 0x8
	0x03E12F38 LDUR X11, [X10 - 0x8]
	0x03E12F3C CMP X11, X1
	0x03E12F40 B.EQ 0x3E12F60
	0x03E12F44 SUBS X9, X9, 0x1
	0x03E12F48 ADD X10, X10, 0x10
	0x03E12F4C B.NE 0x3E12F38
	0x03E12F50 MOV X0, X20
	0x03E12F54 MOV W2, W31
	0x03E12F58 BL 0x1C5C788
	0x03E12F5C B 0x3E12F6C
	0x03E12F60 LDRSW X9, [X10]
	0x03E12F64 ADD X8, X8, X9, 0x4, LSL
	0x03E12F68 ADD X0, X8, 0x138
	0x03E12F6C LDP X8, X1, [X0]
	0x03E12F70 MOV X0, X20
	0x03E12F74 BLR X8
	0x03E12F78 TBZ X0, 0x0, 0x3E12FA4
	0x03E12F7C MOV X0, X20
	0x03E12F80 BL 0x3E0AC7C
	0x03E12F84 CBZ X0, 0x3E12FB0
	0x03E12F88 LDR X0, [X0 + 0x10]
	0x03E12F8C CBZ X0, 0x3E12FB0
	0x03E12F90 MOV W1, W19
	0x03E12F94 LDP X20, X19, [X31 + 0x10]
	0x03E12F98 MOV X2, X31
	0x03E12F9C LDP X30, X21, [X31], #0x20
	0x03E12FA0 B 0x3C7B568
	0x03E12FA4 LDP X20, X19, [X31 + 0x10]
	0x03E12FA8 LDP X30, X21, [X31], #0x20
	0x03E12FAC RET
	0x03E12FB0 BL 0x1C16F20
	0x03E12FB4 STR X30, [X31 - 0x20]!
	0x03E12FB8 STP X20, X19, [X31 + 0x10]
	0x03E12FBC ADRP X20, 0x5D6000
	0x03E12FC0 LDRB W8, [X20 + 0x38C]
	0x03E12FC4 MOV X19, X0
	0x03E12FC8 TBNZ X8, 0x0, 0x3E12FE0
	0x03E12FCC ADRP X0, 0x30B000
	0x03E12FD0 LDR X0, [X0 + 0x628]
	0x03E12FD4 BL 0x1C16CF4
	0x03E12FD8 MOVZ W8, 0x1
	0x03E12FDC STRB W8, [X20 + 0x38C]
	0x03E12FE0 CBZ X19, 0x3E1307C
	0x03E12FE4 ADRP X10, 0x30B000
	0x03E12FE8 LDR X8, [X19]
	0x03E12FEC LDR X10, [X10 + 0x628]
	0x03E12FF0 LDRH W9, [X8 + 0x12E]
	0x03E12FF4 LDR X1, [X10]
	0x03E12FF8 CBZ X9, 0x3E1301C
	0x03E12FFC LDR X10, [X8 + 0xB0]
	0x03E13000 ADD X10, X10, 0x8
	0x03E13004 LDUR X11, [X10 - 0x8]
	0x03E13008 CMP X11, X1
	0x03E1300C B.EQ 0x3E1302C
	0x03E13010 SUBS X9, X9, 0x1
	0x03E13014 ADD X10, X10, 0x10
	0x03E13018 B.NE 0x3E13004
	0x03E1301C MOV X0, X19
	0x03E13020 MOV W2, W31
	0x03E13024 BL 0x1C5C788
	0x03E13028 B 0x3E13038
	0x03E1302C LDRSW X9, [X10]
	0x03E13030 ADD X8, X8, X9, 0x4, LSL
	0x03E13034 ADD X0, X8, 0x138
	0x03E13038 LDP X8, X1, [X0]
	0x03E1303C MOV X0, X19
	0x03E13040 BLR X8
	0x03E13044 TBZ X0, 0x0, 0x3E1306C
	0x03E13048 MOV X0, X19
	0x03E1304C BL 0x3E0AC7C
	0x03E13050 CBZ X0, 0x3E1307C
	0x03E13054 LDR X0, [X0 + 0x10]
	0x03E13058 CBZ X0, 0x3E1306C
	0x03E1305C LDP X20, X19, [X31 + 0x10]
	0x03E13060 MOV X1, X31
	0x03E13064 LDR X30, [X31], #0x20
	0x03E13068 B 0x3C7B5B0
	0x03E1306C LDP X20, X19, [X31 + 0x10]
	0x03E13070 MOVN W0, 0x0
	0x03E13074 LDR X30, [X31], #0x20
	0x03E13078 RET
	0x03E1307C BL 0x1C16F20
	0x03E13080 STP X30, X21, [X31 - 0x20]!
	0x03E13084 STP X20, X19, [X31 + 0x10]
	0x03E13088 ADRP X21, 0x5D5000
	0x03E1308C LDRB W8, [X21 + 0x38D]
	0x03E13090 MOV W19, W1
	0x03E13094 MOV X20, X0
	0x03E13098 TBNZ X8, 0x0, 0x3E130B0
	0x03E1309C ADRP X0, 0x30A000
	0x03E130A0 LDR X0, [X0 + 0x628]
	0x03E130A4 BL 0x1C16CF4
	0x03E130A8 MOVZ W8, 0x1
	0x03E130AC STRB W8, [X21 + 0x38D]
	0x03E130B0 CBZ X20, 0x3E1314C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x5D7000
	010 Move W8, [X21+895]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {58}
	017 Move X0, 0x355000
	018 Move X0, [X0+1896]
	019 Call 0x1C17CF4
	020 Move X0, 0x355000
	021 Move X0, [X0+1904]
	022 Call 0x1C17CF4
	023 Move X0, 0x30C000
	024 Move X0, [X0+1584]
	025 Call 0x1C17CF4
	026 Move X0, 0x359000
	027 Move X0, [X0+1288]
	028 Call 0x1C17CF4
	029 Move X0, 0x359000
	030 Move X0, [X0+1296]
	031 Call 0x1C17CF4
	032 Move X0, 0x359000
	033 Move X0, [X0+1304]
	034 Call 0x1C17CF4
	035 Move X0, 0x359000
	036 Move X0, [X0+1312]
	037 Call 0x1C17CF4
	038 Move X0, 0x359000
	039 Move X0, [X0+1320]
	040 Call 0x1C17CF4
	041 Move X0, 0x359000
	042 Move X0, [X0+1328]
	043 Call 0x1C17CF4
	044 Move X0, 0x30B000
	045 Move X0, [X0+3784]
	046 Call 0x1C17CF4
	047 Move X0, 0x355000
	048 Move X0, [X0+2504]
	049 Call 0x1C17CF4
	050 Move X0, 0x355000
	051 Move X0, [X0+2512]
	052 Call 0x1C17CF4
	053 Move X0, 0x355000
	054 Move X0, [X0+2520]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X21+895], W8
	058 Compare X20, 0
	059 JumpIfEqual {76}
	060 Move X0, X20
	061 Move X1, X31
	062 Call EventBase.get_target, X0
	063 Compare X0, 0
	064 JumpIfEqual {76}
	065 Move X8, 0x30B000
	066 Move X8, [X8+3784]
	067 Move X9, [X0]
	068 Move X8, [X8]
	069 Move W11, [X9+304]
	070 Move W10, [X8+304]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X9, [X9+200]
	073 Add X9, X9, X10
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move X30, [X31+64]
	083 Move X25, [X31+72]
	084 Return 
	085 Compare X19, 0
	086 JumpIfEqual {246}
	087 Move X10, 0x30C000
	088 Move X8, [X19]
	089 Move X10, [X10+1584]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move W2, 2
	101 Move X0, X19
	102 Call 0x1C5D788
	103 Move W9, [X10]
	104 Add W9, W9, 2
	105 Add X8, X8, W9
	106 Add X0, X8, 312
	107 Move X8, [X0]
	108 Move X1, [X0+8]
	109 Move X0, X19
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X24, 0x355000
	112 Move X21, [X20+184]
	113 Move X24, [X24+1896]
	114 Move W23, W0
	115 Move X8, [X24]
	116 Move X0, X8
	117 Call 0x1C17F10
	118 Move X22, X0
	119 Move TEMP, X23
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {148}
	123 Move X8, 0x359000
	124 Move X8, [X8+1296]
	125 Move X0, X22
	126 Move X1, X19
	127 Move X3, X31
	128 Move X2, [X8]
	129 Call Action`1<Object>..ctor, X0, X1, X2
	130 Move X8, 0x355000
	131 Move X8, [X8+1904]
	132 Move X0, [X8]
	133 Call 0x1C17F10
	134 Move X8, 0x359000
	135 Move X8, [X8+1288]
	136 Move X1, X19
	137 Move X3, X31
	138 Move X20, X0
	139 Move X2, [X8]
	140 Call Func`2<Object, Int32Enum>..ctor, X0, X1, X2
	141 Compare X21, 0
	142 JumpIfEqual {246}
	143 Move X8, 0x355000
	144 Move X8, [X8+2504]
	145 Move X0, X21
	146 Move X2, X22
	147 Move X3, X20
	148 Move X8, 0x359000
	149 Move X8, [X8+1312]
	150 Move X0, X22
	151 Move X1, X19
	152 Move X3, X31
	153 Move X2, [X8]
	154 Call Action`1<Object>..ctor, X0, X1, X2
	155 Move X25, 0x355000
	156 Move X25, [X25+1904]
	157 Move X0, [X25]
	158 Call 0x1C17F10
	159 Move X8, 0x359000
	160 Move X8, [X8+1304]
	161 Move X1, X19
	162 Move X3, X31
	163 Move X23, X0
	164 Move X2, [X8]
	165 Call Func`2<Object, Int32Enum>..ctor, X0, X1, X2
	166 Compare X21, 0
	167 JumpIfEqual {246}
	168 Move X8, 0x355000
	169 Move X8, [X8+2520]
	170 Move X0, X21
	171 Move X2, X22
	172 Move X3, X23
	173 Move X1, [X8]
	174 Move X4, X31
	175 Move X5, X31
	176 Call DropdownMenu.AppendAction, X0, X1, X2, X3, X4
	177 Move X0, [X24]
	178 Move X21, [X20+184]
	179 Call 0x1C17F10
	180 Move X8, 0x359000
	181 Move X8, [X8+1296]
	182 Move X1, X19
	183 Move X3, X31
	184 Move X22, X0
	185 Move X2, [X8]
	186 Call Action`1<Object>..ctor, X0, X1, X2
	187 Move X0, [X25]
	188 Call 0x1C17F10
	189 Move X8, 0x359000
	190 Move X8, [X8+1288]
	191 Move X1, X19
	192 Move X3, X31
	193 Move X23, X0
	194 Move X2, [X8]
	195 Call Func`2<Object, Int32Enum>..ctor, X0, X1, X2
	196 Compare X21, 0
	197 JumpIfEqual {246}
	198 Move X8, 0x354000
	199 Move X8, [X8+2504]
	200 Move X0, X21
	201 Move X2, X22
	202 Move X3, X23
	203 Move X1, [X8]
	204 Move X4, X31
	205 Move X5, X31
	206 Call DropdownMenu.AppendAction, X0, X1, X2, X3, X4
	207 Move X0, [X24]
	208 Move X20, [X20+184]
	209 Call 0x1C17F10
	210 Move X8, 0x358000
	211 Move X8, [X8+1328]
	212 Move X1, X19
	213 Move X3, X31
	214 Move X21, X0
	215 Move X2, [X8]
	216 Call Action`1<Object>..ctor, X0, X1, X2
	217 Move X0, [X25]
	218 Call 0x1C17F10
	219 Move X8, 0x358000
	220 Move X8, [X8+1320]
	221 Move X1, X19
	222 Move X3, X31
	223 Move X22, X0
	224 Move X2, [X8]
	225 Call Func`2<Object, Int32Enum>..ctor, X0, X1, X2
	226 Compare X20, 0
	227 JumpIfEqual {246}
	228 Move X8, 0x354000
	229 Move X8, [X8+2512]
	230 Move X0, X20
	231 Move X2, X21
	232 Move X3, X22
	233 Move X1, [X8]
	234 Move X20, [X31+48]
	235 Move X19, [X31+56]
	236 Move X22, [X31+32]
	237 Move X21, [X31+40]
	238 Move X24, [X31+16]
	239 Move X23, [X31+24]
	240 Move X4, X31
	241 Move X5, X31
	242 Move X30, [X31+64]
	243 Move X25, [X31+72]
	244 Call DropdownMenu.AppendAction, X0, X1, X2, X3, X4
	245 Return 
	246 Call 0x1C17F20

Method: UnityEngine.UIElements.DropdownMenuAction/Status CutActionStatus(UnityEngine.UIElements.DropdownMenuAction a)

Disassembly:
	0x03E130B4 ADRP X10, 0x30A000
	0x03E130B8 LDR X8, [X20]
	0x03E130BC LDR X10, [X10 + 0x628]
	0x03E130C0 LDRH W9, [X8 + 0x12E]
	0x03E130C4 LDR X1, [X10]
	0x03E130C8 CBZ X9, 0x3E130EC
	0x03E130CC LDR X10, [X8 + 0xB0]
	0x03E130D0 ADD X10, X10, 0x8
	0x03E130D4 LDUR X11, [X10 - 0x8]
	0x03E130D8 CMP X11, X1
	0x03E130DC B.EQ 0x3E130FC
	0x03E130E0 SUBS X9, X9, 0x1
	0x03E130E4 ADD X10, X10, 0x10
	0x03E130E8 B.NE 0x3E130D4
	0x03E130EC MOV X0, X20
	0x03E130F0 MOV W2, W31
	0x03E130F4 BL 0x1C5C788
	0x03E130F8 B 0x3E13108
	0x03E130FC LDRSW X9, [X10]
	0x03E13100 ADD X8, X8, X9, 0x4, LSL
	0x03E13104 ADD X0, X8, 0x138
	0x03E13108 LDP X8, X1, [X0]
	0x03E1310C MOV X0, X20
	0x03E13110 BLR X8
	0x03E13114 TBZ X0, 0x0, 0x3E13140
	0x03E13118 MOV X0, X20
	0x03E1311C BL 0x3E0AC7C
	0x03E13120 CBZ X0, 0x3E1314C
	0x03E13124 LDR X0, [X0 + 0x10]
	0x03E13128 CBZ X0, 0x3E1314C
	0x03E1312C MOV W1, W19
	0x03E13130 LDP X20, X19, [X31 + 0x10]
	0x03E13134 MOV X2, X31
	0x03E13138 LDP X30, X21, [X31], #0x20
	0x03E1313C B 0x3C7B5FC
	0x03E13140 LDP X20, X19, [X31 + 0x10]
	0x03E13144 LDP X30, X21, [X31], #0x20
	0x03E13148 RET
	0x03E1314C BL 0x1C16F20
	0x03E13150 STR X30, [X31 - 0x20]!
	0x03E13154 STP X20, X19, [X31 + 0x10]
	0x03E13158 ADRP X20, 0x5D5000
	0x03E1315C LDRB W8, [X20 + 0x38E]
	0x03E13160 MOV X19, X0
	0x03E13164 TBNZ X8, 0x0, 0x3E1317C
	0x03E13168 ADRP X0, 0x30A000
	0x03E1316C LDR X0, [X0 + 0x628]
	0x03E13170 BL 0x1C16CF4
	0x03E13174 MOVZ W8, 0x1
	0x03E13178 STRB W8, [X20 + 0x38E]
	0x03E1317C CBZ X19, 0x3E13214
	0x03E13180 ADRP X10, 0x30A000
	0x03E13184 LDR X8, [X19]
	0x03E13188 LDR X10, [X10 + 0x628]
	0x03E1318C LDRH W9, [X8 + 0x12E]
	0x03E13190 LDR X1, [X10]
	0x03E13194 CBZ X9, 0x3E131B8
	0x03E13198 LDR X10, [X8 + 0xB0]
	0x03E1319C ADD X10, X10, 0x8
	0x03E131A0 LDUR X11, [X10 - 0x8]
	0x03E131A4 CMP X11, X1
	0x03E131A8 B.EQ 0x3E131C8
	0x03E131AC SUBS X9, X9, 0x1
	0x03E131B0 ADD X10, X10, 0x10
	0x03E131B4 B.NE 0x3E131A0
	0x03E131B8 MOV X0, X19
	0x03E131BC MOV W2, W31
	0x03E131C0 BL 0x1C5C788
	0x03E131C4 B 0x3E131D4
	0x03E131C8 LDRSW X9, [X10]
	0x03E131CC ADD X8, X8, X9, 0x4, LSL
	0x03E131D0 ADD X0, X8, 0x138
	0x03E131D4 LDP X8, X1, [X0]
	0x03E131D8 MOV X0, X19
	0x03E131DC BLR X8
	0x03E131E0 TBZ X0, 0x0, 0x3E13208
	0x03E131E4 MOV X0, X19
	0x03E131E8 BL 0x3E0AC7C
	0x03E131EC CBZ X0, 0x3E13214

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D6000
	005 Move W8, [X20+896]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x30B000
	012 Move X0, [X0+1584]
	013 Call 0x1C17CF4
	014 Move X0, 0x30B000
	015 Move X0, [X0+1576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+896], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call VisualElement.get_enabledInHierarchy, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {72}
	026 Compare X19, 0
	027 JumpIfEqual {88}
	028 Move X10, 0x30B000
	029 Move X8, [X19]
	030 Move X10, [X10+1576]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 12
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 12
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {72}
	056 Move X10, 0x30B000
	057 Move X8, [X19]
	058 Move X10, [X10+1584]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X10]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 23
	070 Move X0, X19
	071 Call 0x1C5D788
	072 Move W0, 2
	073 Move W9, [X10]
	074 Add W9, W9, 23
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X1, [X0+8]
	079 Move X0, X19
	080 NotImplemented "Instruction BLR not yet implemented."
	081 And W31, W0, 1
	082 Move W8, 1
	083 NotImplemented "Instruction CINC not yet implemented."
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Return X0
	088 Call 0x1C17F20

Method: UnityEngine.UIElements.DropdownMenuAction/Status CopyActionStatus(UnityEngine.UIElements.DropdownMenuAction a)

Disassembly:
	0x03E131F0 LDR X0, [X0 + 0x10]
	0x03E131F4 CBZ X0, 0x3E13214
	0x03E131F8 LDP X20, X19, [X31 + 0x10]
	0x03E131FC MOV X1, X31
	0x03E13200 LDR X30, [X31], #0x20
	0x03E13204 B 0x3C837BC
	0x03E13208 LDP X20, X19, [X31 + 0x10]
	0x03E1320C LDR X30, [X31], #0x20
	0x03E13210 RET
	0x03E13214 BL 0x1C16F20
	0x03E13218 STR X30, [X31 - 0x20]!
	0x03E1321C STP X20, X19, [X31 + 0x10]
	0x03E13220 ADRP X20, 0x5D5000
	0x03E13224 LDRB W8, [X20 + 0x38F]
	0x03E13228 MOV X19, X0
	0x03E1322C TBNZ X8, 0x0, 0x3E13244
	0x03E13230 ADRP X0, 0x30A000
	0x03E13234 LDR X0, [X0 + 0x628]
	0x03E13238 BL 0x1C16CF4
	0x03E1323C MOVZ W8, 0x1
	0x03E13240 STRB W8, [X20 + 0x38F]
	0x03E13244 CBZ X19, 0x3E132DC
	0x03E13248 ADRP X10, 0x30A000
	0x03E1324C LDR X8, [X19]
	0x03E13250 LDR X10, [X10 + 0x628]
	0x03E13254 LDRH W9, [X8 + 0x12E]
	0x03E13258 LDR X1, [X10]
	0x03E1325C CBZ X9, 0x3E13280
	0x03E13260 LDR X10, [X8 + 0xB0]
	0x03E13264 ADD X10, X10, 0x8
	0x03E13268 LDUR X11, [X10 - 0x8]
	0x03E1326C CMP X11, X1
	0x03E13270 B.EQ 0x3E13290
	0x03E13274 SUBS X9, X9, 0x1
	0x03E13278 ADD X10, X10, 0x10
	0x03E1327C B.NE 0x3E13268
	0x03E13280 MOV X0, X19
	0x03E13284 MOV W2, W31
	0x03E13288 BL 0x1C5C788
	0x03E1328C B 0x3E1329C
	0x03E13290 LDRSW X9, [X10]
	0x03E13294 ADD X8, X8, X9, 0x4, LSL
	0x03E13298 ADD X0, X8, 0x138
	0x03E1329C LDP X8, X1, [X0]
	0x03E132A0 MOV X0, X19
	0x03E132A4 BLR X8
	0x03E132A8 TBZ X0, 0x0, 0x3E132D0
	0x03E132AC MOV X0, X19
	0x03E132B0 BL 0x3E0AC7C
	0x03E132B4 CBZ X0, 0x3E132DC
	0x03E132B8 LDR X0, [X0 + 0x10]
	0x03E132BC CBZ X0, 0x3E132DC
	0x03E132C0 LDP X20, X19, [X31 + 0x10]
	0x03E132C4 MOV X1, X31
	0x03E132C8 LDR X30, [X31], #0x20
	0x03E132CC B 0x3C7E1CC
	0x03E132D0 LDP X20, X19, [X31 + 0x10]
	0x03E132D4 LDR X30, [X31], #0x20
	0x03E132D8 RET
	0x03E132DC BL 0x1C16F20
	0x03E132E0 STR X30, [X31 - 0x20]!
	0x03E132E4 STP X20, X19, [X31 + 0x10]
	0x03E132E8 ADRP X20, 0x5D5000
	0x03E132EC LDRB W8, [X20 + 0x390]
	0x03E132F0 MOV X19, X0
	0x03E132F4 TBNZ X8, 0x0, 0x3E1330C
	0x03E132F8 ADRP X0, 0x30A000
	0x03E132FC LDR X0, [X0 + 0x628]
	0x03E13300 BL 0x1C16CF4
	0x03E13304 MOVZ W8, 0x1
	0x03E13308 STRB W8, [X20 + 0x390]
	0x03E1330C CBZ X19, 0x3E133A8
	0x03E13310 ADRP X10, 0x30A000
	0x03E13314 LDR X8, [X19]
	0x03E13318 LDR X10, [X10 + 0x628]
	0x03E1331C LDRH W9, [X8 + 0x12E]
	0x03E13320 LDR X1, [X10]
	0x03E13324 CBZ X9, 0x3E13348
	0x03E13328 LDR X10, [X8 + 0xB0]
	0x03E1332C ADD X10, X10, 0x8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D6000
	005 Move W8, [X20+897]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x30B000
	012 Move X0, [X0+1584]
	013 Call 0x1C17CF4
	014 Move X0, 0x30B000
	015 Move X0, [X0+1576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+897], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call VisualElement.get_enabledInHierarchy, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {56}
	026 Compare X19, 0
	027 JumpIfEqual {90}
	028 Move X10, 0x30B000
	029 Move X8, [X19]
	030 Move X10, [X10+1576]
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 12
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 12
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X0, X19
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {74}
	056 Compare X19, 0
	057 JumpIfEqual {90}
	058 Move X10, 0x30B000
	059 Move X8, [X19]
	060 Move X10, [X10+1584]
	061 NotImplemented "Instruction LDRH not yet implemented."
	062 Move X1, [X10]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 23
	072 Move X0, X19
	073 Call 0x1C5D788
	074 Move W0, 2
	075 Move W9, [X10]
	076 Add W9, W9, 23
	077 Add X8, X8, W9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X1, [X0+8]
	081 Move X0, X19
	082 NotImplemented "Instruction BLR not yet implemented."
	083 And W31, W0, 1
	084 Move W8, 1
	085 NotImplemented "Instruction CINC not yet implemented."
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X30, [X31+32]
	089 Return X0
	090 Call 0x1C17F20

Method: UnityEngine.UIElements.DropdownMenuAction/Status PasteActionStatus(UnityEngine.UIElements.DropdownMenuAction a)

Disassembly:
	0x03E13330 LDUR X11, [X10 - 0x8]
	0x03E13334 CMP X11, X1
	0x03E13338 B.EQ 0x3E13358
	0x03E1333C SUBS X9, X9, 0x1
	0x03E13340 ADD X10, X10, 0x10
	0x03E13344 B.NE 0x3E13330
	0x03E13348 MOV X0, X19
	0x03E1334C MOV W2, W31
	0x03E13350 BL 0x1C5C788
	0x03E13354 B 0x3E13364
	0x03E13358 LDRSW X9, [X10]
	0x03E1335C ADD X8, X8, X9, 0x4, LSL
	0x03E13360 ADD X0, X8, 0x138
	0x03E13364 LDP X8, X1, [X0]
	0x03E13368 MOV X0, X19
	0x03E1336C BLR X8
	0x03E13370 TBZ X0, 0x0, 0x3E13398
	0x03E13374 MOV X0, X19
	0x03E13378 BL 0x3E0AC7C
	0x03E1337C CBZ X0, 0x3E133A8
	0x03E13380 LDR X0, [X0 + 0x10]
	0x03E13384 CBZ X0, 0x3E133A8
	0x03E13388 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+1024]
	005 Compare X8, 0
	006 JumpIfEqual {29}
	007 Move X19, X0
	008 Move X0, [X8+32]
	009 Compare X0, 0
	010 JumpIfEqual {29}
	011 Move X1, X31
	012 Call TextEditingUtilities.CanPaste, X0
	013 Move W20, W0
	014 Move X0, X19
	015 Move X1, X31
	016 Call VisualElement.get_enabledInHierarchy, X0
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {24}
	021 And W31, W20, 1
	022 Move W8, 1
	023 NotImplemented "Instruction CINC not yet implemented."
	024 Move W0, 8
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Void ExecuteDefaultActionAtTarget(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03E1338C MOV X1, X31
	0x03E13390 LDR X30, [X31], #0x20
	0x03E13394 B 0x3C7B450
	0x03E13398 LDP X20, X19, [X31 + 0x10]
	0x03E1339C MOV W0, W31
	0x03E133A0 LDR X30, [X31], #0x20
	0x03E133A4 RET
	0x03E133A8 BL 0x1C16F20
	0x03E133AC LDRB W0, [X0 + 0x471]
	0x03E133B0 RET
	0x03E133B4 LDRB W0, [X0 + 0x472]
	0x03E133B8 RET
	0x03E133BC LDRB W0, [X0 + 0x473]
	0x03E133C0 RET
	0x03E133C4 AND W8, W1, 0x1
	0x03E133C8 STRB W8, [X0 + 0x473]
	0x03E133CC RET
	0x03E133D0 LDRB W0, [X0 + 0x474]
	0x03E133D4 RET
	0x03E133D8 AND W8, W1, 0x1
	0x03E133DC STRB W8, [X0 + 0x474]
	0x03E133E0 RET
	0x03E133E4 STP D9, D8, [X31 - 0x30]!
	0x03E133E8 STP X30, X21, [X31 + 0x10]
	0x03E133EC STP X20, X19, [X31 + 0x20]
	0x03E133F0 ADRP X20, 0x5D5000
	0x03E133F4 ADRP X21, 0x30A000
	0x03E133F8 LDRB W8, [X20 + 0x391]
	0x03E133FC LDR X21, [X21 + 0x628]
	0x03E13400 MOV X19, X0
	0x03E13404 TBNZ X8, 0x0, 0x3E1341C
	0x03E13408 ADRP X0, 0x30A000
	0x03E1340C LDR X0, [X0 + 0x628]
	0x03E13410 BL 0x1C16CF4
	0x03E13414 MOVZ W8, 0x1
	0x03E13418 STRB W8, [X20 + 0x391]
	0x03E1341C LDR X8, [X19]
	0x03E13420 LDR X20, [X19 + 0x3D8]
	0x03E13424 LDR X1, [X21]
	0x03E13428 LDRH W9, [X8 + 0x12E]
	0x03E1342C CBZ X9, 0x3E13450
	0x03E13430 LDR X10, [X8 + 0xB0]
	0x03E13434 ADD X10, X10, 0x8
	0x03E13438 LDUR X11, [X10 - 0x8]
	0x03E1343C CMP X11, X1
	0x03E13440 B.EQ 0x3E13460
	0x03E13444 SUBS X9, X9, 0x1
	0x03E13448 ADD X10, X10, 0x10
	0x03E1344C B.NE 0x3E13438
	0x03E13450 MOVZ W2, 0x4
	0x03E13454 MOV X0, X19
	0x03E13458 BL 0x1C5C788
	0x03E1345C B 0x3E13470
	0x03E13460 LDR W9, [X10]
	0x03E13464 ADD W9, W9, 0x4
	0x03E13468 ADD X8, X8, W9, 0x4, SXTW
	0x03E1346C ADD X0, X8, 0x138
	0x03E13470 LDP X8, X1, [X0]
	0x03E13474 MOV X0, X19
	0x03E13478 BLR X8
	0x03E1347C CBZ X20, 0x3E134C4
	0x03E13480 MOV W1, W0
	0x03E13484 MOVZ W3, 0x1
	0x03E13488 MOV X0, X20
	0x03E1348C MOV W2, W31
	0x03E13490 MOV X4, X31
	0x03E13494 BL 0x3CC9CC0
	0x03E13498 MOV X0, X19
	0x03E1349C MOV X1, X31
	0x03E134A0 MOV V8.16B, V0.16B
	0x03E134A4 MOV V9.16B, V1.16B
	0x03E134A8 BL 0x3DED364
	0x03E134AC LDP X20, X19, [X31 + 0x20]
	0x03E134B0 LDP X30, X21, [X31 + 0x10]
	0x03E134B4 FADD S0, S8, S0
	0x03E134B8 FADD S1, S9, S1
	0x03E134BC LDP D9, D8, [X31], #0x30
	0x03E134C0 RET
	0x03E134C4 BL 0x1C16F20
	0x03E134C8 STP X30, X21, [X31 - 0x20]!
	0x03E134CC STP X20, X19, [X31 + 0x10]
	0x03E134D0 ADRP X20, 0x5D5000
	0x03E134D4 ADRP X21, 0x30A000
	0x03E134D8 LDRB W8, [X20 + 0x392]
	0x03E134DC LDR X21, [X21 + 0x628]
	0x03E134E0 MOV X19, X0
	0x03E134E4 TBNZ X8, 0x0, 0x3E134FC
	0x03E134E8 ADRP X0, 0x30A000
	0x03E134EC LDR X0, [X0 + 0x628]
	0x03E134F0 BL 0x1C16CF4
	0x03E134F4 MOVZ W8, 0x1
	0x03E134F8 STRB W8, [X20 + 0x392]
	0x03E134FC LDR X8, [X19]
	0x03E13500 LDR X20, [X19 + 0x3D8]
	0x03E13504 LDR X1, [X21]
	0x03E13508 LDRH W9, [X8 + 0x12E]
	0x03E1350C CBZ X9, 0x3E13530
	0x03E13510 LDR X10, [X8 + 0xB0]
	0x03E13514 ADD X10, X10, 0x8
	0x03E13518 LDUR X11, [X10 - 0x8]
	0x03E1351C CMP X11, X1
	0x03E13520 B.EQ 0x3E13540
	0x03E13524 SUBS X9, X9, 0x1
	0x03E13528 ADD X10, X10, 0x10
	0x03E1352C B.NE 0x3E13518
	0x03E13530 MOVZ W2, 0x4
	0x03E13534 MOV X0, X19
	0x03E13538 BL 0x1C5C788
	0x03E1353C B 0x3E13550
	0x03E13540 LDR W9, [X10]
	0x03E13544 ADD W9, W9, 0x4
	0x03E13548 ADD X8, X8, W9, 0x4, SXTW
	0x03E1354C ADD X0, X8, 0x138
	0x03E13550 LDP X8, X1, [X0]
	0x03E13554 MOV X0, X19
	0x03E13558 BLR X8
	0x03E1355C CBZ X20, 0x3E13578
	0x03E13560 MOV W1, W0
	0x03E13564 MOV X0, X20
	0x03E13568 LDP X20, X19, [X31 + 0x10]
	0x03E1356C MOV X2, X31
	0x03E13570 LDP X30, X21, [X31], #0x20
	0x03E13574 B 0x3CCAC04
	0x03E13578 BL 0x1C16F20
	0x03E1357C LDR V0, [X0 + 0x478]
	0x03E13580 LDR V1, [X0 + 0x47C]
	0x03E13584 LDR V2, [X0 + 0x480]
	0x03E13588 LDR V3, [X0 + 0x484]
	0x03E1358C RET
	0x03E13590 LDR V4, [X0 + 0x478]
	0x03E13594 LDR V5, [X0 + 0x47C]
	0x03E13598 LDR V6, [X0 + 0x480]
	0x03E1359C LDR V7, [X0 + 0x484]
	0x03E135A0 FSUB S4, S4, S0
	0x03E135A4 FSUB S5, S5, S1
	0x03E135A8 ADRP X8, 0xFFFFFFFFFCCD6000
	0x03E135AC FMUL S4, S4, S4
	0x03E135B0 FMUL S5, S5, S5
	0x03E135B4 FADD S4, S4, S5
	0x03E135B8 LDR V5, [X8 + 0xF20]
	0x03E135BC FSUB S6, S6, S2
	0x03E135C0 FSUB S7, S7, S3
	0x03E135C4 FMUL S6, S6, S6
	0x03E135C8 FADD S4, S6, S4
	0x03E135CC FMUL S6, S7, S7
	0x03E135D0 FADD S4, S6, S4
	0x03E135D4 FCMP S4, S5
	0x03E135D8 B.MI 0x3E135F4
	0x03E135DC MOV X1, X31
	0x03E135E0 STR S0, [X0 + 0x478]
	0x03E135E4 STR S1, [X0 + 0x47C]
	0x03E135E8 STR S2, [X0 + 0x480]
	0x03E135EC STR S3, [X0 + 0x484]
	0x03E135F0 B 0x3DF2134
	0x03E135F4 RET
	0x03E135F8 LDR V0, [X0 + 0x488]
	0x03E135FC LDR V1, [X0 + 0x48C]
	0x03E13600 LDR V2, [X0 + 0x490]
	0x03E13604 LDR V3, [X0 + 0x494]
	0x03E13608 RET
	0x03E1360C LDR V4, [X0 + 0x488]
	0x03E13610 LDR V5, [X0 + 0x48C]
	0x03E13614 LDR V6, [X0 + 0x490]
	0x03E13618 LDR V7, [X0 + 0x494]
	0x03E1361C FSUB S4, S4, S0
	0x03E13620 FSUB S5, S5, S1
	0x03E13624 ADRP X8, 0xFFFFFFFFFCCD6000
	0x03E13628 FMUL S4, S4, S4
	0x03E1362C FMUL S5, S5, S5
	0x03E13630 FADD S4, S4, S5
	0x03E13634 LDR V5, [X8 + 0xF20]
	0x03E13638 FSUB S6, S6, S2
	0x03E1363C FSUB S7, S7, S3
	0x03E13640 FMUL S6, S6, S6
	0x03E13644 FADD S4, S6, S4
	0x03E13648 FMUL S6, S7, S7
	0x03E1364C FADD S4, S6, S4
	0x03E13650 FCMP S4, S5
	0x03E13654 B.MI 0x3E13670
	0x03E13658 MOV X1, X31
	0x03E1365C STR S0, [X0 + 0x488]
	0x03E13660 STR S1, [X0 + 0x48C]
	0x03E13664 STR S2, [X0 + 0x490]
	0x03E13668 STR S3, [X0 + 0x494]
	0x03E1366C B 0x3DF2134
	0x03E13670 RET
	0x03E13674 LDR V0, [X0 + 0x498]
	0x03E13678 RET
	0x03E1367C STP X30, X23, [X31 - 0x30]!
	0x03E13680 STP X22, X21, [X31 + 0x10]
	0x03E13684 STP X20, X19, [X31 + 0x20]
	0x03E13688 MOV X19, X0
	0x03E1368C LDR X0, [X0 + 0x3D8]
	0x03E13690 CBZ X0, 0x3E137D0
	0x03E13694 MOV W21, W1
	0x03E13698 MOV X1, X31
	0x03E1369C BL 0x3CC98D0
	0x03E136A0 CBZ X0, 0x3E137D0
	0x03E136A4 LDR X8, [X0 + 0x48]
	0x03E136A8 CBZ X8, 0x3E137D0
	0x03E136AC LDR W9, [X8 + 0x18]
	0x03E136B0 CMP W9, W21
	0x03E136B4 B.LS 0x3E137D4
	0x03E136B8 LDR X0, [X19 + 0x3D8]
	0x03E136BC CBZ X0, 0x3E137D0
	0x03E136C0 SXTW X22, W21
	0x03E136C4 MOVZ W9, 0x60
	0x03E136C8 MADD X8, X22, X9, X8
	0x03E136CC LDR W20, [X8 + 0x40]
	0x03E136D0 MOV X1, X31
	0x03E136D4 BL 0x3CC98D0
	0x03E136D8 CBZ X0, 0x3E137D0
	0x03E136DC LDR X8, [X0 + 0x48]
	0x03E136E0 CBZ X8, 0x3E137D0
	0x03E136E4 LDR W9, [X8 + 0x18]
	0x03E136E8 CMP W9, W21

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x5D6000
	008 Move W8, [X21+898]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {44}
	015 Move X0, 0x350000
	016 Move X0, [X0+3280]
	017 Call 0x1C17CF4
	018 Move X0, 0x358000
	019 Move X0, [X0+1336]
	020 Call 0x1C17CF4
	021 Move X0, 0x356000
	022 Move X0, [X0+1592]
	023 Call 0x1C17CF4
	024 Move X0, 0x30B000
	025 Move X0, [X0+1584]
	026 Call 0x1C17CF4
	027 Move X0, 0x30B000
	028 Move X0, [X0+1576]
	029 Call 0x1C17CF4
	030 Move X0, 0x355000
	031 Move X0, [X0+3264]
	032 Call 0x1C17CF4
	033 Move X0, 0x31D000
	034 Move X0, [X0+2552]
	035 Call 0x1C17CF4
	036 Move X0, 0x325000
	037 Move X0, [X0+1848]
	038 Call 0x1C17CF4
	039 Move X0, 0x309000
	040 Move X0, [X0+3752]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+898], W8
	044 Compare X20, 0
	045 JumpIfEqual {245}
	046 Move X10, 0x30B000
	047 Move X8, [X20]
	048 Move X10, [X10+1576]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move X0, X20
	060 Move W2, W31
	061 Call 0x1C5D788
	062 NotImplemented "Instruction LDRSW not yet implemented."
	063 Add X8, X8, X9
	064 Add X0, X8, 312
	065 Move X8, [X0]
	066 Move X1, [X0+8]
	067 Move X0, X20
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {238}
	073 Move X8, [X20+1024]
	074 Compare X8, 0
	075 JumpIfEqual {113}
	076 Move X0, [X8+32]
	077 Compare X0, 0
	078 JumpIfEqual {245}
	079 Move X1, X31
	080 Call TextEditingUtilities.TouchScreenKeyboardShouldBeUsed, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {113}
	085 Move X10, 0x30B000
	086 Move X8, [X20]
	087 Move X10, [X10+1584]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Move X1, [X10]
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move W2, 27
	099 Move X0, X20
	100 Call 0x1C5D788
	101 Move W9, [X10]
	102 Add W9, W9, 27
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X20
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {119}
	113 Move X0, X20
	114 Call TextElement.get_selectingManipulator, X0
	115 Compare X0, 0
	116 JumpIfEqual {119}
	117 Move X1, X19
	118 Call TextSelectingManipulator.ExecuteDefaultActionAtTarget, X0, X1
	119 Move X10, 0x30B000
	120 Move X8, [X20]
	121 Move X10, [X10+1584]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X1, [X10]
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move W2, 2
	133 Move X0, X20
	134 Call 0x1C5D788
	135 Move W9, [X10]
	136 Add W9, W9, 2
	137 Add X8, X8, W9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X20
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfEqual {152}
	147 Move X0, [X20+1024]
	148 Compare X0, 0
	149 JumpIfEqual {152}
	150 Move X1, X19
	151 Call TextEditingManipulator.ExecuteDefaultActionAtTarget, X0, X1
	152 Move X8, [X20+928]
	153 Compare X8, 0
	154 JumpIfEqual {164}
	155 Move X0, [X8+96]
	156 Compare X0, 0
	157 JumpIfEqual {164}
	158 Move X8, [X0]
	159 Move X1, X19
	160 Move X2, X20
	161 Move X9, [X8+376]
	162 Move X3, [X8+384]
	163 NotImplemented "Instruction BLR not yet implemented."
	164 Compare X19, 0
	165 JumpIfEqual {181}
	166 Move X8, [X19]
	167 Move X0, X19
	168 Move X9, [X8+392]
	169 Move X1, [X8+400]
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move X8, 0x325000
	172 Move X8, [X8+1848]
	173 Move X1, X0
	174 Add X0, X31, 0
	175 Move [X31], X31
	176 Move [X31+8], X31
	177 Move X2, [X8]
	178 Call Nullable`1<Int64>..ctor, X0, X1
	179 Move W21, [X31]
	180 Move X22, [X31+8]
	181 Move W21, W31
	182 Move X22, X31
	183 Move X8, 0x356000
	184 Move X8, [X8+1592]
	185 Move X0, [X8]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X8, 0x358000
	191 Move X8, [X8+1336]
	192 Move X0, [X8]
	193 Call 0x2D0E5C8
	194 Compare W21, 0
	195 JumpIfEqual {238}
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Compare X19, 0
	198 JumpIfEqual {245}
	199 Move X8, 0x350000
	200 Move X8, [X8+3280]
	201 Move X9, [X19]
	202 Move X8, [X8]
	203 Move W11, [X9+304]
	204 Move W10, [X8+304]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X9, [X9+200]
	207 Add X9, X9, X10
	208 NotImplemented "Instruction LDUR not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, [X19+184]
	211 Compare X0, 0
	212 JumpIfEqual {245}
	213 Move X1, X31
	214 Call DropdownMenu.MenuItems, X0
	215 Compare X0, 0
	216 JumpIfEqual {245}
	217 Move W21, [X0+24]
	218 Move X0, X20
	219 Move X1, X19
	220 Call TextElement.BuildContextualMenu, X0, X1
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X0, [X19+184]
	223 Compare X0, 0
	224 JumpIfEqual {245}
	225 Move X1, X31
	226 Call DropdownMenu.MenuItems, X0
	227 Compare X0, 0
	228 JumpIfEqual {245}
	229 Move W8, [X0+24]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move X0, [X19+184]
	232 Compare X0, 0
	233 JumpIfEqual {245}
	234 Move X1, X31
	235 Move W2, W21
	236 Move X3, X31
	237 Call DropdownMenu.InsertSeparator, X0, X1, X2
	238 Move X20, [X31+48]
	239 Move X19, [X31+56]
	240 Move X22, [X31+32]
	241 Move X21, [X31+40]
	242 Move X30, [X31+16]
	243 Add X31, X31, 64
	244 Return 
	245 Call 0x1C17F20

Method: System.Int32 UnityEngine.UIElements.ITextEdition.get_maxLength()

Disassembly:
	0x03E136EC B.LS 0x3E137D4
	0x03E136F0 LDR X0, [X19 + 0x3D8]

ISIL:
	001 Move W0, [X0+1056]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_maxLength(System.Int32 value)

Disassembly:
	0x03E136F4 CBZ X0, 0x3E137D0
	0x03E136F8 MOVZ W9, 0x60
	0x03E136FC MADD X8, X22, X9, X8
	0x03E13700 LDRSW X21, [X8 + 0x38]
	0x03E13704 MOV X1, X31
	0x03E13708 BL 0x3CC98D0
	0x03E1370C CBZ X0, 0x3E137D0
	0x03E13710 LDR X9, [X0 + 0x30]
	0x03E13714 CBZ X9, 0x3E137D0
	0x03E13718 LDR W8, [X9 + 0x18]
	0x03E1371C CMP W20, W8
	0x03E13720 B.CS 0x3E137D4
	0x03E13724 SXTW X8, W20
	0x03E13728 MOVZ W10, 0x188
	0x03E1372C MADD X9, X8, X10, X9
	0x03E13730 LDRH W10, [X9 + 0x20]
	0x03E13734 CMP W10, 0xA
	0x03E13738 CSET W9, EQ
	0x03E1373C CMP W10, 0xD
	0x03E13740 CSET W10, EQ
	0x03E13744 CMP W20, W21
	0x03E13748 B.LE 0x3E137BC
	0x03E1374C ORR W9, W9, W10, 0x0
	0x03E13750 CBZ W9, 0x3E137BC
	0x03E13754 MOVZ W9, 0x188
	0x03E13758 SUB X22, X8, 0x1
	0x03E1375C MUL X8, X8, X9
	0x03E13760 SUB X23, X8, 0x168
	0x03E13764 LDR X0, [X19 + 0x3D8]
	0x03E13768 CBZ X0, 0x3E137D0
	0x03E1376C MOV X1, X31
	0x03E13770 BL 0x3CC98D0
	0x03E13774 CBZ X0, 0x3E137D0
	0x03E13778 LDR X8, [X0 + 0x30]
	0x03E1377C CBZ X8, 0x3E137D0
	0x03E13780 LDR W9, [X8 + 0x18]
	0x03E13784 SUB W20, W20, 0x1
	0x03E13788 CMP W20, W9
	0x03E1378C B.CS 0x3E137D4
	0x03E13790 LDRH W9, [X8, X23, LSL]
	0x03E13794 CMP W9, 0xA
	0x03E13798 CSET W8, EQ
	0x03E1379C CMP W9, 0xD
	0x03E137A0 CSET W9, EQ
	0x03E137A4 CMP X22, X21
	0x03E137A8 B.LE 0x3E137BC
	0x03E137AC ORR W8, W8, W9, 0x0
	0x03E137B0 SUB X22, X22, 0x1
	0x03E137B4 SUB X23, X23, 0x188
	0x03E137B8 TBNZ X8, 0x0, 0x3E13764
	0x03E137BC MOV W0, W20
	0x03E137C0 LDP X20, X19, [X31 + 0x20]
	0x03E137C4 LDP X22, X21, [X31 + 0x10]
	0x03E137C8 LDP X30, X23, [X31], #0x30
	0x03E137CC RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5D6000
	007 Move X21, 0x30B000
	008 Move W8, [X22+899]
	009 Move X21, [X21+1584]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x30B000
	017 Move X0, [X0+1584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+899], W8
	021 Move X8, [X19]
	022 Move [X19+1056], W20
	023 Move X0, X19
	024 Move X9, [X8+2840]
	025 Move X1, [X8+2848]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X19]
	028 Move X1, [X21]
	029 Move X20, X0
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move W2, 21
	040 Move X0, X19
	041 Call 0x1C5D788
	042 Move W9, [X10]
	043 Add W9, W9, 21
	044 Add X8, X8, W9
	045 Add X0, X8, 312
	046 Move X8, [X0]
	047 Move X2, [X0+8]
	048 Move X0, X19
	049 Move X1, X20
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, [X19]
	052 Move X1, X0
	053 Move X0, X19
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X3, [X8+2856]
	057 Move X2, [X8+2864]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 CallNoReturn X3

Method: System.Boolean UnityEngine.UIElements.ITextEdition.get_isDelayed()

Disassembly:
	0x03E137D0 BL 0x1C16F20
	0x03E137D4 BL 0x1C16F28

ISIL:
	001 Move W0, [X0+1060]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_isDelayed(System.Boolean value)

Disassembly:
	0x03E137D8 STR X30, [X31 - 0x30]!
	0x03E137DC STP X22, X21, [X31 + 0x10]
	0x03E137E0 STP X20, X19, [X31 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+1060], W8
	003 Return 

Method: System.Void UnityEngine.UIElements.ITextEdition.SaveValueAndText()

Disassembly:
	0x03E137E4 ADRP X22, 0x5D5000
	0x03E137E8 ADRP X21, 0x357000
	0x03E137EC ADRP X20, 0x309000
	0x03E137F0 ADRP X19, 0x30B000
	0x03E137F4 LDRB W8, [X22 + 0x396]
	0x03E137F8 LDR X21, [X21 + 0x540]
	0x03E137FC LDR X20, [X20 + 0xEC8]
	0x03E13800 LDR X19, [X19 + 0x5F8]
	0x03E13804 TBNZ X8, 0x0, 0x3E13834

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+2840]
	006 Move X1, [X8+2848]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move [X19+1112], X0
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.Void UnityEngine.UIElements.ITextEdition.RestoreValueAndText()

Disassembly:
	0x03E13808 ADRP X0, 0x309000
	0x03E1380C LDR X0, [X0 + 0xEC8]
	0x03E13810 BL 0x1C16CF4
	0x03E13814 ADRP X0, 0x357000
	0x03E13818 LDR X0, [X0 + 0x540]

ISIL:
	001 Move X8, [X0]
	002 Move X1, [X0+1112]
	003 Move X3, [X8+2856]
	004 Move X2, [X8+2864]
	005 CallNoReturn X3

Method: System.Func`2<System.Char, System.Boolean> UnityEngine.UIElements.ITextEdition.get_AcceptCharacter()

Disassembly:
	0x03E1381C BL 0x1C16CF4
	0x03E13820 ADRP X0, 0x30B000

ISIL:
	001 Move X0, [X0+1064]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_AcceptCharacter(System.Func`2<System.Char, System.Boolean> value)

Disassembly:
	0x03E13824 LDR X0, [X0 + 0x5F8]
	0x03E13828 BL 0x1C16CF4

ISIL:
	001 Move [X0+1064], X1
	002 Return 

Method: System.Action`1<System.Boolean> UnityEngine.UIElements.ITextEdition.get_UpdateScrollOffset()

Disassembly:
	0x03E1382C MOVZ W8, 0x1
	0x03E13830 STRB W8, [X22 + 0x396]

ISIL:
	001 Move X0, [X0+1072]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_UpdateScrollOffset(System.Action`1<System.Boolean> value)

Disassembly:
	0x03E13834 LDR X8, [X20]
	0x03E13838 LDR X9, [X21]

ISIL:
	001 Move [X0+1072], X1
	002 Return 

Method: System.Action UnityEngine.UIElements.ITextEdition.get_UpdateValueFromText()

Disassembly:
	0x03E1383C LDP X22, X21, [X31 + 0x10]
	0x03E13840 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move X0, [X0+1080]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_UpdateValueFromText(System.Action value)

Disassembly:
	0x03E13844 STR X9, [X8]
	0x03E13848 LDR X8, [X20]

ISIL:
	001 Move [X0+1080], X1
	002 Return 

Method: System.Action UnityEngine.UIElements.ITextEdition.get_UpdateTextFromValue()

Disassembly:
	0x03E1384C LDR X9, [X19]
	0x03E13850 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+1088]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_UpdateTextFromValue(System.Action value)

Disassembly:
	0x03E13854 LDR X8, [X8 + 0xB8]
	0x03E13858 STR X9, [X8 + 0x8]

ISIL:
	001 Move [X0+1088], X1
	002 Return 

Method: System.Action UnityEngine.UIElements.ITextEdition.get_MoveFocusToCompositeRoot()

Disassembly:
	0x03E1385C LDR X30, [X31], #0x30
	0x03E13860 RET

ISIL:
	001 Move X0, [X0+1096]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_MoveFocusToCompositeRoot(System.Action value)

Disassembly:
	0x03E13864 STP X30, X21, [X31 - 0x20]!
	0x03E13868 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X0+1096], X1
	002 Return 

Method: System.Void UnityEngine.UIElements.ITextEdition.UpdateText(System.String value)

Disassembly:
	0x03E1386C ADRP X20, 0x5D5000
	0x03E13870 ADRP X21, 0x357000
	0x03E13874 LDRB W8, [X20 + 0x397]
	0x03E13878 LDR X21, [X21 + 0x548]
	0x03E1387C MOV X19, X0
	0x03E13880 TBNZ X8, 0x0, 0x3E13898
	0x03E13884 ADRP X0, 0x357000
	0x03E13888 LDR X0, [X0 + 0x548]
	0x03E1388C BL 0x1C16CF4
	0x03E13890 MOVZ W8, 0x1
	0x03E13894 STRB W8, [X20 + 0x397]
	0x03E13898 LDR X1, [X21]
	0x03E1389C MOV X0, X19
	0x03E138A0 LDP X20, X19, [X31 + 0x10]
	0x03E138A4 LDP X30, X21, [X31], #0x20
	0x03E138A8 B 0x2736468
	0x03E138AC SUB X31, X31, 0xF0
	0x03E138B0 STP X30, X23, [X31 + 0xC0]
	0x03E138B4 STP X22, X21, [X31 + 0xD0]
	0x03E138B8 STP X20, X19, [X31 + 0xE0]
	0x03E138BC ADRP X23, 0x5D5000
	0x03E138C0 LDRB W8, [X23 + 0x398]
	0x03E138C4 MOV X21, X3
	0x03E138C8 MOV X20, X2
	0x03E138CC MOV X19, X1
	0x03E138D0 MOV X22, X0
	0x03E138D4 TBNZ X8, 0x0, 0x3E138EC
	0x03E138D8 ADRP X0, 0x309000
	0x03E138DC LDR X0, [X0 + 0xEC8]
	0x03E138E0 BL 0x1C16CF4
	0x03E138E4 MOVZ W8, 0x1
	0x03E138E8 STRB W8, [X23 + 0x398]
	0x03E138EC LDP V1, V0, [X21]
	0x03E138F0 ADD X3, X31, 0x80
	0x03E138F4 MOV X0, X22
	0x03E138F8 MOV X1, X19
	0x03E138FC MOV X2, X20
	0x03E13900 MOV X4, X31
	0x03E13904 STP V1, V0, [X31 + 0x80]
	0x03E13908 BL 0x3CEA08C
	0x03E1390C CBZ X19, 0x3E13944
	0x03E13910 ADRP X9, 0x309000
	0x03E13914 LDR X9, [X9 + 0xEC8]
	0x03E13918 LDR X8, [X19]
	0x03E1391C LDR X1, [X9]
	0x03E13920 LDRB W10, [X8 + 0x130]
	0x03E13924 LDRB W9, [X1 + 0x130]
	0x03E13928 CMP W10, W9
	0x03E1392C B.CC 0x3E13A84
	0x03E13930 LDR X8, [X8 + 0xC8]
	0x03E13934 ADD X8, X8, X9, 0x3, LSL
	0x03E13938 LDUR X8, [X8 - 0x8]
	0x03E1393C CMP X8, X1
	0x03E13940 B.NE 0x3E13A84
	0x03E13944 LDP V0, V1, [X21]
	0x03E13948 LDR X0, [X22 + 0x78]
	0x03E1394C STP V0, V1, [X31 + 0x60]
	0x03E13950 CBZ X0, 0x3E13A80
	0x03E13954 LDR X8, [X0]
	0x03E13958 LDP V0, V1, [X31 + 0x60]
	0x03E1395C ADD X2, X31, 0xA0
	0x03E13960 MOV X1, X20
	0x03E13964 LDR X9, [X8 + 0x178]
	0x03E13968 STP V0, V1, [X31 + 0xA0]
	0x03E1396C LDR X3, [X8 + 0x180]
	0x03E13970 BLR X9
	0x03E13974 CBZ X19, 0x3E13A80
	0x03E13978 LDR X8, [X19]
	0x03E1397C MOV X1, X0
	0x03E13980 MOV X0, X19
	0x03E13984 LDR X9, [X8 + 0xB28]
	0x03E13988 LDR X2, [X8 + 0xB30]
	0x03E1398C BLR X9
	0x03E13990 LDP V0, V1, [X21]
	0x03E13994 LDR X0, [X22 + 0x80]
	0x03E13998 STP V0, V1, [X31 + 0x40]
	0x03E1399C CBZ X0, 0x3E13A80
	0x03E139A0 LDR X8, [X0]
	0x03E139A4 LDP V0, V1, [X31 + 0x40]
	0x03E139A8 ADD X2, X31, 0xA0
	0x03E139AC MOV X1, X20
	0x03E139B0 LDR X9, [X8 + 0x178]
	0x03E139B4 STP V0, V1, [X31 + 0xA0]
	0x03E139B8 LDR X3, [X8 + 0x180]
	0x03E139BC BLR X9
	0x03E139C0 LDRB W9, [X19 + 0x3E8]
	0x03E139C4 AND W8, W0, 0x1
	0x03E139C8 CMP W9, W8
	0x03E139CC B.EQ 0x3E139E0
	0x03E139D0 MOV X0, X19
	0x03E139D4 MOV X1, X31
	0x03E139D8 STRB W8, [X19 + 0x3E8]
	0x03E139DC BL 0x3DF2134
	0x03E139E0 LDP V0, V1, [X21]
	0x03E139E4 LDR X0, [X22 + 0x88]
	0x03E139E8 STP V0, V1, [X31 + 0x20]
	0x03E139EC CBZ X0, 0x3E13A80
	0x03E139F0 LDR X8, [X0]
	0x03E139F4 LDP V0, V1, [X31 + 0x20]
	0x03E139F8 ADD X2, X31, 0xA0
	0x03E139FC MOV X1, X20
	0x03E13A00 LDR X9, [X8 + 0x178]
	0x03E13A04 STP V0, V1, [X31 + 0xA0]
	0x03E13A08 LDR X3, [X8 + 0x180]
	0x03E13A0C BLR X9
	0x03E13A10 LDRB W9, [X19 + 0x3E9]
	0x03E13A14 AND W8, W0, 0x1
	0x03E13A18 CMP W9, W8
	0x03E13A1C B.EQ 0x3E13A30
	0x03E13A20 MOV X0, X19
	0x03E13A24 MOV X1, X31
	0x03E13A28 STRB W8, [X19 + 0x3E9]
	0x03E13A2C BL 0x3DF2134
	0x03E13A30 LDP V0, V1, [X21]
	0x03E13A34 LDR X0, [X22 + 0x90]
	0x03E13A38 STP V0, V1, [X31]
	0x03E13A3C CBZ X0, 0x3E13A80
	0x03E13A40 LDR X8, [X0]
	0x03E13A44 LDP V0, V1, [X31]
	0x03E13A48 ADD X2, X31, 0xA0
	0x03E13A4C MOV X1, X20
	0x03E13A50 LDR X9, [X8 + 0x178]
	0x03E13A54 STP V0, V1, [X31 + 0xA0]
	0x03E13A58 LDR X3, [X8 + 0x180]
	0x03E13A5C BLR X9
	0x03E13A60 AND W1, W0, 0x1
	0x03E13A64 MOV X0, X19
	0x03E13A68 BL 0x3E0FB5C
	0x03E13A6C LDP X20, X19, [X31 + 0xE0]
	0x03E13A70 LDP X22, X21, [X31 + 0xD0]
	0x03E13A74 LDP X30, X23, [X31 + 0xC0]
	0x03E13A78 ADD X31, X31, 0xF0
	0x03E13A7C RET
	0x03E13A80 BL 0x1C16F20
	0x03E13A84 MOV X0, X19
	0x03E13A88 BL 0x1C171E0
	0x03E13A8C STP X30, X21, [X31 - 0x20]!
	0x03E13A90 STP X20, X19, [X31 + 0x10]
	0x03E13A94 ADRP X20, 0x5D5000
	0x03E13A98 ADRP X21, 0x30A000
	0x03E13A9C LDRB W8, [X20 + 0x399]
	0x03E13AA0 LDR X21, [X21 + 0xB20]
	0x03E13AA4 MOV X19, X0
	0x03E13AA8 TBNZ X8, 0x0, 0x3E13B08
	0x03E13AAC ADRP X0, 0x30A000
	0x03E13AB0 LDR X0, [X0 + 0xB28]
	0x03E13AB4 BL 0x1C16CF4
	0x03E13AB8 ADRP X0, 0x30A000
	0x03E13ABC LDR X0, [X0 + 0x758]
	0x03E13AC0 BL 0x1C16CF4
	0x03E13AC4 ADRP X0, 0x30A000
	0x03E13AC8 LDR X0, [X0 + 0xB20]
	0x03E13ACC BL 0x1C16CF4
	0x03E13AD0 ADRP X0, 0x357000
	0x03E13AD4 LDR X0, [X0 + 0x550]
	0x03E13AD8 BL 0x1C16CF4
	0x03E13ADC ADRP X0, 0x357000
	0x03E13AE0 LDR X0, [X0 + 0x558]
	0x03E13AE4 BL 0x1C16CF4
	0x03E13AE8 ADRP X0, 0x333000
	0x03E13AEC LDR X0, [X0 + 0x3E0]
	0x03E13AF0 BL 0x1C16CF4
	0x03E13AF4 ADRP X0, 0x357000
	0x03E13AF8 LDR X0, [X0 + 0x560]
	0x03E13AFC BL 0x1C16CF4
	0x03E13B00 MOVZ W8, 0x1
	0x03E13B04 STRB W8, [X20 + 0x399]
	0x03E13B08 LDR X0, [X21]
	0x03E13B0C BL 0x1C16F10
	0x03E13B10 MOV X20, X0
	0x03E13B14 BL 0x3E0A2F4
	0x03E13B18 CBZ X20, 0x3E13BD0
	0x03E13B1C ADRP X8, 0x333000
	0x03E13B20 LDR X8, [X8 + 0x3E0]
	0x03E13B24 ADRP X21, 0x30A000
	0x03E13B28 LDR X8, [X8]
	0x03E13B2C LDR X21, [X21 + 0x758]
	0x03E13B30 STR X8, [X20 + 0x10]
	0x03E13B34 STR X20, [X19 + 0x78]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x5D6000
	006 Move W8, [X19+900]
	007 Move X21, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x2E1000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0x30B000
	017 Move X0, [X0+1808]
	018 Call 0x1C17CF4
	019 Move X0, 0x356000
	020 Move X0, [X0+648]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+900], W8
	024 Move X0, [X20+1040]
	025 Compare X0, 0
	026 JumpIfEqual {42}
	027 Move X1, X31
	028 Call TouchScreenKeyboard.get_text, X0
	029 Move X1, X21
	030 Move X2, X31
	031 Call String.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {42}
	036 Move X0, [X20+1040]
	037 Compare X0, 0
	038 JumpIfEqual {153}
	039 Move X1, X21
	040 Move X2, X31
	041 Call TouchScreenKeyboard.set_text, X0, X1
	042 Move X8, [X20]
	043 Move X0, X20
	044 Move X9, [X8+2840]
	045 Move X1, [X8+2848]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X1, X21
	048 Move X2, X31
	049 Call String.op_Inequality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {145}
	054 Move X8, [X20]
	055 Move X0, X20
	056 Move X9, [X8+2840]
	057 Move X1, [X8+2848]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, 0x356000
	060 Move X8, [X8+648]
	061 Move X19, X0
	062 Move X8, [X8]
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X1, X21
	070 Move X2, X31
	071 Call InputEvent.GetPooled, X0, X1
	072 Move X19, X0
	073 Move X0, X20
	074 Move X1, X31
	075 Call VisualElement.get_parent, X0
	076 Move X1, X0
	077 Compare X19, 0
	078 JumpIfEqual {152}
	079 Move X0, X19
	080 Move X2, X31
	081 Call EventBase.set_target, X0, X1
	082 Move X10, 0x30B000
	083 Move X8, [X20]
	084 Move X10, [X10+1808]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X10]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 2
	096 Move X0, X20
	097 Call 0x1C5D788
	098 Move W9, [X10]
	099 Add W9, W9, 2
	100 Add X8, X8, W9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X2, [X0+8]
	104 Move X0, X20
	105 Move X1, X21
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X0, X20
	108 Move X1, X31
	109 Call VisualElement.get_parent, X0
	110 Compare X0, 0
	111 JumpIfEqual {117}
	112 Move X8, [X0]
	113 Move X9, [X8+408]
	114 Move X2, [X8+416]
	115 Move X1, X19
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X20, X31
	118 Compare X19, 0
	119 JumpIfEqual {143}
	120 Move X10, 0x2E1000
	121 Move X8, [X19]
	122 Move X10, [X10+3584]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Move X1, [X10]
	125 Compare X9, 0
	126 JumpIfEqual {133}
	127 Move X10, [X8+176]
	128 Add X10, X10, 8
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Subtract X9, X9, 1
	132 Add X10, X10, 16
	133 Move X0, X19
	134 Move W2, W31
	135 Call 0x1C5D788
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Add X8, X8, X9
	138 Add X0, X8, 312
	139 Move X8, [X0]
	140 Move X1, [X0+8]
	141 Move X0, X19
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Compare X20, 0
	144 JumpIfNotEqual {150}
	145 Move X20, [X31+16]
	146 Move X19, [X31+24]
	147 Move X30, [X31+32]
	148 Move X21, [X31+40]
	149 Return 
	150 Move X0, X20
	151 Call 0x1C17F18
	152 Call 0x1C17F20
	153 Call 0x1C17F20
	154 Move X21, X0
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X0, X21
	157 Call 0x3EB2AD0
	158 Move X20, [X0]
	159 Call 0x3EB2AE0
	160 Move X20, X31
	161 Move X21, X0
	162 Compare X19, 0
	163 JumpIfEqual {187}
	164 Move X10, 0x2E1000
	165 Move X8, [X19]
	166 Move X10, [X10+3584]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Move X1, [X10]
	169 Compare X9, 0
	170 JumpIfEqual {177}
	171 Move X10, [X8+176]
	172 Add X10, X10, 8
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Subtract X9, X9, 1
	176 Add X10, X10, 16
	177 Move X0, X19
	178 Move W2, W31
	179 Call 0x1C5D788
	180 NotImplemented "Instruction LDRSW not yet implemented."
	181 Add X8, X8, X9
	182 Add X0, X8, 312
	183 Move X8, [X0]
	184 Move X1, [X0+8]
	185 Move X0, X19
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Compare X20, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X21
	190 Call 0x1D2D690
	191 Move X0, X20
	192 Call 0x1C17F18
	193 Call 0x1991590

Method: System.String UnityEngine.UIElements.ITextEdition.CullString(System.String s)

Disassembly:
	0x03E13B38 LDR X0, [X21]
	0x03E13B3C BL 0x1C16F10
	0x03E13B40 MOV X20, X0
	0x03E13B44 BL 0x3E13BD4
	0x03E13B48 CBZ X20, 0x3E13BD0
	0x03E13B4C ADRP X8, 0x357000
	0x03E13B50 LDR X8, [X8 + 0x550]
	0x03E13B54 MOVZ W9, 0x1
	0x03E13B58 LDR X8, [X8]
	0x03E13B5C STRB W9, [X20 + 0x40]
	0x03E13B60 STR X8, [X20 + 0x10]
	0x03E13B64 STR X20, [X19 + 0x80]
	0x03E13B68 LDR X0, [X21]
	0x03E13B6C BL 0x1C16F10
	0x03E13B70 MOV X20, X0
	0x03E13B74 BL 0x3E13BD4
	0x03E13B78 CBZ X20, 0x3E13BD0
	0x03E13B7C ADRP X8, 0x357000
	0x03E13B80 LDR X8, [X8 + 0x560]
	0x03E13B84 LDR X8, [X8]
	0x03E13B88 STRB W31, [X20 + 0x40]
	0x03E13B8C STR X8, [X20 + 0x10]
	0x03E13B90 STR X20, [X19 + 0x88]
	0x03E13B94 LDR X0, [X21]
	0x03E13B98 BL 0x1C16F10
	0x03E13B9C MOV X20, X0
	0x03E13BA0 BL 0x3E13BD4
	0x03E13BA4 CBZ X20, 0x3E13BD0
	0x03E13BA8 ADRP X8, 0x357000
	0x03E13BAC LDR X8, [X8 + 0x558]
	0x03E13BB0 MOV X0, X19
	0x03E13BB4 MOV X1, X31
	0x03E13BB8 LDR X8, [X8]
	0x03E13BBC STR X8, [X20 + 0x10]
	0x03E13BC0 STR X20, [X19 + 0x90]
	0x03E13BC4 LDP X20, X19, [X31 + 0x10]
	0x03E13BC8 LDP X30, X21, [X31], #0x20
	0x03E13BCC B 0x3CEA004
	0x03E13BD0 BL 0x1C16F20
	0x03E13BD4 STP X30, X23, [X31 - 0x30]!
	0x03E13BD8 STP X22, X21, [X31 + 0x10]
	0x03E13BDC STP X20, X19, [X31 + 0x20]
	0x03E13BE0 ADRP X22, 0x5D5000
	0x03E13BE4 ADRP X23, 0x357000
	0x03E13BE8 ADRP X21, 0x325000
	0x03E13BEC ADRP X20, 0x30A000
	0x03E13BF0 LDRB W8, [X22 + 0x41C]
	0x03E13BF4 LDR X23, [X23 + 0x568]
	0x03E13BF8 LDR X21, [X21 + 0xF08]
	0x03E13BFC LDR X20, [X20 + 0xAC0]
	0x03E13C00 MOV X19, X0
	0x03E13C04 TBNZ X8, 0x0, 0x3E13C40
	0x03E13C08 ADRP X0, 0x357000
	0x03E13C0C LDR X0, [X0 + 0x568]
	0x03E13C10 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D6000
	006 Move W8, [X21+901]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x30B000
	014 Move X0, [X0+1584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+901], W8
	018 Compare X20, 0
	019 JumpIfEqual {68}
	020 Move X10, 0x30B000
	021 Move X8, [X20]
	022 Move X10, [X10+1584]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 4
	034 Move X0, X20
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 4
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Compare X19, 0
	045 JumpIfEqual {62}
	046 Move W2, W0
	047 Move TEMP, X0
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfEqual {62}
	051 Move W8, [X19+16]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move W1, W31
	057 Move X3, X31
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Call String.Substring, X0, X1, X2
	061 Return X0
	062 Move X0, X19
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return X0
	068 Call 0x1C17F20

Method: System.Void UnityEngine.UIElements.ITextEdition.set_maskChar(System.Char value)

Disassembly:
	0x03E13C14 ADRP X0, 0x30A000
	0x03E13C18 LDR X0, [X0 + 0xB28]
	0x03E13C1C BL 0x1C16CF4
	0x03E13C20 ADRP X0, 0x30A000
	0x03E13C24 LDR X0, [X0 + 0xAC0]
	0x03E13C28 BL 0x1C16CF4
	0x03E13C2C ADRP X0, 0x325000
	0x03E13C30 LDR X0, [X0 + 0xF08]
	0x03E13C34 BL 0x1C16CF4
	0x03E13C38 MOVZ W8, 0x1
	0x03E13C3C STRB W8, [X22 + 0x41C]
	0x03E13C40 LDR X1, [X23]
	0x03E13C44 MOV X0, X19
	0x03E13C48 BL 0x2723E0C
	0x03E13C4C LDR X9, [X21]
	0x03E13C50 LDR X8, [X20]
	0x03E13C54 STRB W31, [X19 + 0x40]
	0x03E13C58 LDP X22, X21, [X31 + 0x10]
	0x03E13C5C STP X9, X8, [X19 + 0x20]
	0x03E13C60 LDP X20, X19, [X31 + 0x20]
	0x03E13C64 LDP X30, X23, [X31], #0x30
	0x03E13C68 RET
	0x03E13C6C STP X30, X21, [X31 - 0x20]!
	0x03E13C70 STP X20, X19, [X31 + 0x10]
	0x03E13C74 ADRP X20, 0x5D5000
	0x03E13C78 LDRB W8, [X20 + 0x39A]
	0x03E13C7C MOV X19, X0
	0x03E13C80 TBNZ X8, 0x0, 0x3E13CB0
	0x03E13C84 ADRP X0, 0x2E0000
	0x03E13C88 LDR X0, [X0 + 0xA28]
	0x03E13C8C BL 0x1C16CF4
	0x03E13C90 ADRP X0, 0x2E8000
	0x03E13C94 LDR X0, [X0 + 0x5D0]
	0x03E13C98 BL 0x1C16CF4
	0x03E13C9C ADRP X0, 0x357000
	0x03E13CA0 LDR X0, [X0 + 0x570]
	0x03E13CA4 BL 0x1C16CF4
	0x03E13CA8 MOVZ W8, 0x1
	0x03E13CAC STRB W8, [X20 + 0x39A]
	0x03E13CB0 MOV X0, X19
	0x03E13CB4 MOV X1, X31
	0x03E13CB8 BL 0x33BE520
	0x03E13CBC CBZ X0, 0x3E13D30
	0x03E13CC0 LDR X8, [X0]
	0x03E13CC4 ADRP X19, 0x2E8000
	0x03E13CC8 ADRP X20, 0x357000
	0x03E13CCC ADRP X21, 0x2E0000
	0x03E13CD0 LDP X9, X1, [X8 + 0x1A8]
	0x03E13CD4 LDR X19, [X19 + 0x5D0]
	0x03E13CD8 LDR X20, [X20 + 0x570]
	0x03E13CDC LDR X21, [X21 + 0xA28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D6000
	006 Move W8, [X21+902]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x30B000
	014 Move X0, [X0+1584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+902], W8
	018 NotImplemented "Instruction LDRH not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X10, 0x30B000
	021 Move X8, [X19]
	022 Move X10, [X10+1584]
	023 NotImplemented "Instruction STRH not yet implemented."
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 23
	035 Move X0, X19
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 23
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X8, [X0]
	042 Move X1, [X0+8]
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {58}
	049 Move X0, X19
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move W1, 2048
	053 Move X2, X31
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Call VisualElement.IncrementVersion, X0, X1
	057 Return 
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return 

Method: System.Char get_effectiveMaskChar()

Disassembly:
	0x03E13CE0 BLR X9
	0x03E13CE4 LDR X8, [X19]
	0x03E13CE8 LDR X2, [X20]
	0x03E13CEC MOV X1, X0
	0x03E13CF0 MOV X3, X31
	0x03E13CF4 MOV X0, X8
	0x03E13CF8 BL 0x32274B8
	0x03E13CFC LDR X8, [X21]
	0x03E13D00 MOV X19, X0
	0x03E13D04 LDR W9, [X8 + 0xE0]
	0x03E13D08 CBNZ W9, 0x3E13D14
	0x03E13D0C MOV X0, X8
	0x03E13D10 BL 0x1C16DFC
	0x03E13D14 MOV X0, X19
	0x03E13D18 MOV X1, X31
	0x03E13D1C BL 0x3C06048
	0x03E13D20 LDP X20, X19, [X31 + 0x10]
	0x03E13D24 MOV W0, W31
	0x03E13D28 LDP X30, X21, [X31], #0x20
	0x03E13D2C RET
	0x03E13D30 BL 0x1C16F20
	0x03E13D34 STP X30, X21, [X31 - 0x20]!
	0x03E13D38 STP X20, X19, [X31 + 0x10]
	0x03E13D3C ADRP X20, 0x5D5000
	0x03E13D40 LDRB W8, [X20 + 0x39B]
	0x03E13D44 MOV X19, X0
	0x03E13D48 TBNZ X8, 0x0, 0x3E13D78
	0x03E13D4C ADRP X0, 0x2E0000
	0x03E13D50 LDR X0, [X0 + 0xA28]
	0x03E13D54 BL 0x1C16CF4
	0x03E13D58 ADRP X0, 0x357000
	0x03E13D5C LDR X0, [X0 + 0x578]
	0x03E13D60 BL 0x1C16CF4
	0x03E13D64 ADRP X0, 0x2E8000
	0x03E13D68 LDR X0, [X0 + 0x5D0]
	0x03E13D6C BL 0x1C16CF4
	0x03E13D70 MOVZ W8, 0x1
	0x03E13D74 STRB W8, [X20 + 0x39B]
	0x03E13D78 MOV X0, X19
	0x03E13D7C MOV X1, X31
	0x03E13D80 BL 0x33BE520
	0x03E13D84 CBZ X0, 0x3E13DF0
	0x03E13D88 LDR X8, [X0]
	0x03E13D8C ADRP X19, 0x2E8000
	0x03E13D90 ADRP X20, 0x357000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D6000
	005 Move W8, [X20+903]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x30B000
	012 Move X0, [X0+1584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+903], W8
	016 Compare X19, 0
	017 JumpIfEqual {52}
	018 Move X10, 0x30B000
	019 Move X8, [X19]
	020 Move X10, [X10+1584]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 23
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 23
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X8, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {47}
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move W0, W31
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return X0
	052 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.ITextEdition.get_isPassword()

Disassembly:
	0x03E13D94 ADRP X21, 0x2E0000
	0x03E13D98 LDP X9, X1, [X8 + 0x1A8]

ISIL:
	001 Move W0, [X0+1122]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_isPassword(System.Boolean value)

Disassembly:
	0x03E13D9C LDR X19, [X19 + 0x5D0]
	0x03E13DA0 LDR X20, [X20 + 0x578]
	0x03E13DA4 LDR X21, [X21 + 0xA28]
	0x03E13DA8 BLR X9
	0x03E13DAC LDR X8, [X19]
	0x03E13DB0 LDR X2, [X20]
	0x03E13DB4 MOV X1, X0
	0x03E13DB8 MOV X3, X31
	0x03E13DBC MOV X0, X8

ISIL:
	001 Move W9, [X0+1122]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Return 
	005 Move W1, 2048
	006 Move X2, X31
	007 Move [X0+1122], W8
	008 Call VisualElement.IncrementVersion, X0, X1
	009 Return 

Method: System.Boolean UnityEngine.UIElements.ITextEdition.get_autoCorrection()

Disassembly:
	0x03E13DC0 BL 0x32274B8
	0x03E13DC4 LDR X8, [X21]

ISIL:
	001 Move W0, [X0+1123]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextEdition.set_autoCorrection(System.Boolean value)

Disassembly:
	0x03E13DC8 MOV X19, X0
	0x03E13DCC LDR W9, [X8 + 0xE0]
	0x03E13DD0 CBNZ W9, 0x3E13DDC

ISIL:
	001 And W8, W1, 1
	002 Move [X0+1123], W8
	003 Return 

Method: System.String get_renderedText()

Disassembly:
	0x03E0FE80 MOV X0, X19
	0x03E0FE84 MOV X1, X31
	0x03E0FE88 MOV X2, X31
	0x03E0FE8C BL 0x3DF7B68
	0x03E0FE90 STRB W31, [X19 + 0x3F8]
	0x03E0FE94 LDP X30, X19, [X31], #0x10
	0x03E0FE98 RET
	0x03E0FE9C STP D15, D14, [X31 - 0xA0]!
	0x03E0FEA0 STP D13, D12, [X31 + 0x10]
	0x03E0FEA4 STP D11, D10, [X31 + 0x20]
	0x03E0FEA8 STP D9, D8, [X31 + 0x30]
	0x03E0FEAC STP X29, X30, [X31 + 0x40]
	0x03E0FEB0 STP X28, X27, [X31 + 0x50]
	0x03E0FEB4 STP X26, X25, [X31 + 0x60]
	0x03E0FEB8 STP X24, X23, [X31 + 0x70]
	0x03E0FEBC STP X22, X21, [X31 + 0x80]
	0x03E0FEC0 STP X20, X19, [X31 + 0x90]
	0x03E0FEC4 SUB X31, X31, 0x3A0
	0x03E0FEC8 STR X1, [X31 + 0x20]
	0x03E0FECC MRS X24, 0xC000
	0x03E0FED0 LDR X8, [X24 + 0x28]
	0x03E0FED4 ADRP X21, 0x5D9000
	0x03E0FED8 MOV X20, X0
	0x03E0FEDC ADD X28, X31, 0x290
	0x03E0FEE0 STR X8, [X31 + 0x398]
	0x03E0FEE4 LDRB W8, [X21 + 0x394]
	0x03E0FEE8 TBNZ X8, 0x0, 0x3E0FF24
	0x03E0FEEC ADRP X0, 0x30D000
	0x03E0FEF0 LDR X0, [X0 + 0xE80]
	0x03E0FEF4 BL 0x1C16CF4
	0x03E0FEF8 ADRP X0, 0x30E000
	0x03E0FEFC LDR X0, [X0 + 0x628]
	0x03E0FF00 BL 0x1C16CF4
	0x03E0FF04 ADRP X0, 0x2E4000
	0x03E0FF08 LDR X0, [X0 + 0x5A8]
	0x03E0FF0C BL 0x1C16CF4
	0x03E0FF10 ADRP X0, 0x30D000
	0x03E0FF14 LDR X0, [X0 + 0xE98]
	0x03E0FF18 BL 0x1C16CF4
	0x03E0FF1C MOVZ W8, 0x1
	0x03E0FF20 STRB W8, [X21 + 0x394]
	0x03E0FF24 MOVI V0.2D, 0x0
	0x03E0FF28 MOV X0, X20
	0x03E0FF2C MOV X1, X31
	0x03E0FF30 STR X31, [X31 + 0x298]
	0x03E0FF34 STR X31, [X31 + 0x290]
	0x03E0FF38 STP V0, V0, [X28 + 0x90]
	0x03E0FF3C STP V0, V0, [X28 + 0xB0]
	0x03E0FF40 STP V0, V0, [X28 + 0xD0]
	0x03E0FF44 STUR V0, [X28 + 0xEC]
	0x03E0FF48 STP V0, V0, [X28 + 0x10]
	0x03E0FF4C STP V0, V0, [X28 + 0x30]
	0x03E0FF50 STP V0, V0, [X28 + 0x50]
	0x03E0FF54 STR V0, [X28 + 0x7]
	0x03E0FF58 STR W31, [X31 + 0x310]
	0x03E0FF5C BL 0x3DEC0CC
	0x03E0FF60 CBZ X0, 0x3E10A00

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5DA000
	007 Move W8, [X20+904]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x34B000
	014 Move X0, [X0+48]
	015 Call 0x1C17CF4
	016 Move X0, 0x2E5000
	017 Move X0, [X0+2440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+904], W8
	021 Move X21, 0x34B000
	022 Move X21, [X21+48]
	023 Move X0, X19
	024 Call TextElement.get_effectiveMaskChar, X0
	025 And W31, W0, 0xFFFF
	026 Move X8, [X19]
	027 Move X0, X19
	028 Move X9, [X8+2840]
	029 Move X1, [X8+2848]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Compare X0, 0
	032 JumpIfEqual {68}
	033 Move X22, 0x2E5000
	034 Move W20, [X0+16]
	035 Move X22, [X22+2440]
	036 Move X0, X19
	037 Call TextElement.get_effectiveMaskChar, X0
	038 Move X8, [X22]
	039 Compare X8, 0
	040 JumpIfEqual {68}
	041 Move W2, W0
	042 Move X0, X8
	043 Move W1, W20
	044 Move X3, X31
	045 Call String.PadLeft, X0, X1, X2
	046 Move X1, [X21]
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X2, X31
	052 Move X30, [X31+48]
	053 Call String.Concat, X0, X1
	054 Return X0
	055 Move X0, [X19+1104]
	056 Move X1, X31
	057 Add X19, X19, 1104
	058 Call String.IsNullOrEmpty, X0
	059 And W31, W0, 1
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 Move X0, [X8]
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 Call 0x1C17F20

Method: System.Void set_renderedText(System.String value)

Disassembly:
	0x03E12788 B 0x3E1279C
	0x03E1278C LDR W9, [X10]
	0x03E12790 ADD W9, W9, 0x15
	0x03E12794 ADD X8, X8, W9, 0x4, SXTW
	0x03E12798 ADD X0, X8, 0x138
	0x03E1279C LDP X8, X2, [X0]
	0x03E127A0 MOV X0, X19
	0x03E127A4 MOV X1, X20
	0x03E127A8 BLR X8
	0x03E127AC LDR X8, [X19]
	0x03E127B0 MOV X1, X0
	0x03E127B4 MOV X0, X19
	0x03E127B8 LDP X20, X19, [X31 + 0x20]
	0x03E127BC LDR X3, [X8 + 0xB28]
	0x03E127C0 LDR X2, [X8 + 0xB30]
	0x03E127C4 LDP X22, X21, [X31 + 0x10]
	0x03E127C8 LDR X30, [X31], #0x30
	0x03E127CC BR X3
	0x03E127D0 LDRB W0, [X0 + 0x424]
	0x03E127D4 RET
	0x03E127D8 AND W8, W1, 0x1
	0x03E127DC STRB W8, [X0 + 0x424]
	0x03E127E0 RET
	0x03E127E4 STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5D7000
	007 Move X22, 0x348000
	008 Move W8, [X21+905]
	009 Move X22, [X22+48]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x348000
	017 Move X0, [X0+48]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+905], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Move X2, X31
	024 Call String.Concat, X0, X1
	025 Move [X19+1104], X0
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return 

Method: System.String get_originalText()

Disassembly:
	0x03E13DD4 MOV X0, X8
	0x03E13DD8 BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+1112]
	002 Return X0

Method: UnityEngine.UIElements.ITextSelection get_selection()

Disassembly:
	0x03E0D77C TBNZ X0, 0x1F, 0x3E0D84C

ISIL:
	001 Return X0

Method: System.Boolean UnityEngine.UIElements.ITextSelection.get_isSelectable()

Disassembly:
	0x03E13DDC MOV X0, X19
	0x03E13DE0 LDP X20, X19, [X31 + 0x10]
	0x03E13DE4 MOV X1, X31
	0x03E13DE8 LDP X30, X21, [X31], #0x20
	0x03E13DEC B 0x3C06048
	0x03E13DF0 BL 0x1C16F20
	0x03E13DF4 STP X30, X21, [X31 - 0x20]!
	0x03E13DF8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W8, [X0+1136]
	002 Compare W8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X0+32]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Void UnityEngine.UIElements.ITextSelection.set_isSelectable(System.Boolean value)

Disassembly:
	0x03E13DFC ADRP X20, 0x5D5000
	0x03E13E00 LDRB W8, [X20 + 0x39C]
	0x03E13E04 MOV X19, X0
	0x03E13E08 TBNZ X8, 0x0, 0x3E13E38
	0x03E13E0C ADRP X0, 0x2E0000
	0x03E13E10 LDR X0, [X0 + 0xA28]
	0x03E13E14 BL 0x1C16CF4

ISIL:
	001 Move W9, [X0+1136]
	002 And W8, W1, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move [X0+32], W8
	005 Move [X0+1136], W8
	006 Return 

Method: System.Int32 UnityEngine.UIElements.ITextSelection.get_cursorIndex()

Disassembly:
	0x03E13E18 ADRP X0, 0x2E8000
	0x03E13E1C LDR X0, [X0 + 0x5D0]
	0x03E13E20 BL 0x1C16CF4
	0x03E13E24 ADRP X0, 0x357000
	0x03E13E28 LDR X0, [X0 + 0x580]
	0x03E13E2C BL 0x1C16CF4
	0x03E13E30 MOVZ W8, 0x1
	0x03E13E34 STRB W8, [X20 + 0x39C]
	0x03E13E38 MOV X0, X19
	0x03E13E3C MOV X1, X31
	0x03E13E40 BL 0x33BE520
	0x03E13E44 CBZ X0, 0x3E13EB8
	0x03E13E48 LDR X8, [X0]
	0x03E13E4C ADRP X19, 0x2E8000
	0x03E13E50 ADRP X20, 0x357000
	0x03E13E54 ADRP X21, 0x2E0000
	0x03E13E58 LDP X9, X1, [X8 + 0x1A8]
	0x03E13E5C LDR X19, [X19 + 0x5D0]
	0x03E13E60 LDR X20, [X20 + 0x580]
	0x03E13E64 LDR X21, [X21 + 0xA28]
	0x03E13E68 BLR X9
	0x03E13E6C LDR X8, [X19]
	0x03E13E70 LDR X2, [X20]
	0x03E13E74 MOV X1, X0
	0x03E13E78 MOV X3, X31
	0x03E13E7C MOV X0, X8
	0x03E13E80 BL 0x32274B8
	0x03E13E84 LDR X8, [X21]
	0x03E13E88 MOV X19, X0
	0x03E13E8C LDR W9, [X8 + 0xE0]
	0x03E13E90 CBNZ W9, 0x3E13E9C
	0x03E13E94 MOV X0, X8
	0x03E13E98 BL 0x1C16DFC
	0x03E13E9C MOV X0, X19
	0x03E13EA0 MOV X1, X31
	0x03E13EA4 BL 0x3C06048
	0x03E13EA8 LDP X20, X19, [X31 + 0x10]
	0x03E13EAC MOV W0, W31
	0x03E13EB0 LDP X30, X21, [X31], #0x20
	0x03E13EB4 RET
	0x03E13EB8 BL 0x1C16F20
	0x03E13EBC STP X30, X21, [X31 - 0x20]!
	0x03E13EC0 STP X20, X19, [X31 + 0x10]
	0x03E13EC4 ADRP X20, 0x5D5000
	0x03E13EC8 LDRB W8, [X20 + 0x39D]
	0x03E13ECC MOV X19, X0
	0x03E13ED0 TBNZ X8, 0x0, 0x3E13F00
	0x03E13ED4 ADRP X0, 0x2E0000
	0x03E13ED8 LDR X0, [X0 + 0xA28]
	0x03E13EDC BL 0x1C16CF4
	0x03E13EE0 ADRP X0, 0x2E8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D6000
	005 Move W8, [X20+906]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x30B000
	012 Move X0, [X0+1576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+906], W8
	016 Compare X19, 0
	017 JumpIfEqual {65}
	018 Move X10, 0x30B000
	019 Move X8, [X19]
	020 Move X10, [X10+1576]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move X0, X19
	032 Move W2, W31
	033 Call 0x1C5D788
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Add X8, X8, X9
	036 Add X0, X8, 312
	037 Move X8, [X0]
	038 Move X1, [X0+8]
	039 Move X0, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {58}
	045 Move X0, X19
	046 Call TextElement.get_selectingManipulator, X0
	047 Compare X0, 0
	048 JumpIfEqual {65}
	049 Move X0, [X0+16]
	050 Compare X0, 0
	051 JumpIfEqual {58}
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Call TextSelectingUtilities.get_cursorIndex, X0
	057 Return X0
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W0, TEMP
	063 Move X30, [X31+32]
	064 Return X0
	065 Call 0x1C17F20

Method: System.Void UnityEngine.UIElements.ITextSelection.set_cursorIndex(System.Int32 value)

Disassembly:
	0x03E13EE4 LDR X0, [X0 + 0x5D0]
	0x03E13EE8 BL 0x1C16CF4
	0x03E13EEC ADRP X0, 0x357000
	0x03E13EF0 LDR X0, [X0 + 0x588]
	0x03E13EF4 BL 0x1C16CF4
	0x03E13EF8 MOVZ W8, 0x1
	0x03E13EFC STRB W8, [X20 + 0x39D]
	0x03E13F00 MOV X0, X19
	0x03E13F04 MOV X1, X31
	0x03E13F08 BL 0x33BE520
	0x03E13F0C CBZ X0, 0x3E13F78
	0x03E13F10 LDR X8, [X0]
	0x03E13F14 ADRP X19, 0x2E8000
	0x03E13F18 ADRP X20, 0x357000
	0x03E13F1C ADRP X21, 0x2E0000
	0x03E13F20 LDP X9, X1, [X8 + 0x1A8]
	0x03E13F24 LDR X19, [X19 + 0x5D0]
	0x03E13F28 LDR X20, [X20 + 0x588]
	0x03E13F2C LDR X21, [X21 + 0xA28]
	0x03E13F30 BLR X9
	0x03E13F34 LDR X8, [X19]
	0x03E13F38 LDR X2, [X20]
	0x03E13F3C MOV X1, X0
	0x03E13F40 MOV X3, X31
	0x03E13F44 MOV X0, X8
	0x03E13F48 BL 0x32274B8
	0x03E13F4C LDR X8, [X21]
	0x03E13F50 MOV X19, X0
	0x03E13F54 LDR W9, [X8 + 0xE0]
	0x03E13F58 CBNZ W9, 0x3E13F64
	0x03E13F5C MOV X0, X8
	0x03E13F60 BL 0x1C16DFC
	0x03E13F64 MOV X0, X19
	0x03E13F68 LDP X20, X19, [X31 + 0x10]
	0x03E13F6C MOV X1, X31
	0x03E13F70 LDP X30, X21, [X31], #0x20
	0x03E13F74 B 0x3C06048
	0x03E13F78 BL 0x1C16F20
	0x03E13F7C STP X30, X21, [X31 - 0x20]!
	0x03E13F80 STP X20, X19, [X31 + 0x10]
	0x03E13F84 ADRP X20, 0x5D5000
	0x03E13F88 LDRB W8, [X20 + 0x39E]
	0x03E13F8C MOV X19, X0
	0x03E13F90 TBNZ X8, 0x0, 0x3E13FC0
	0x03E13F94 ADRP X0, 0x2E0000
	0x03E13F98 LDR X0, [X0 + 0xA28]
	0x03E13F9C BL 0x1C16CF4
	0x03E13FA0 ADRP X0, 0x2E8000
	0x03E13FA4 LDR X0, [X0 + 0x5D0]
	0x03E13FA8 BL 0x1C16CF4
	0x03E13FAC ADRP X0, 0x357000
	0x03E13FB0 LDR X0, [X0 + 0x590]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D6000
	006 Move W8, [X21+907]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x30B000
	014 Move X0, [X0+1576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+907], W8
	018 Compare X20, 0
	019 JumpIfEqual {67}
	020 Move X10, 0x30B000
	021 Move X8, [X20]
	022 Move X10, [X10+1576]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move X0, X20
	034 Move W2, W31
	035 Call 0x1C5D788
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Add X8, X8, X9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {62}
	047 Move X0, X20
	048 Call TextElement.get_selectingManipulator, X0
	049 Compare X0, 0
	050 JumpIfEqual {67}
	051 Move X0, [X0+16]
	052 Compare X0, 0
	053 JumpIfEqual {67}
	054 Move W1, W19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X2, X31
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Call TextSelectingUtilities.set_cursorIndex, X0, X1
	061 Return 
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return 
	067 Call 0x1C17F20

Method: System.Int32 UnityEngine.UIElements.ITextSelection.get_selectIndex()

Disassembly:
	0x03E13FB4 BL 0x1C16CF4
	0x03E13FB8 MOVZ W8, 0x1
	0x03E13FBC STRB W8, [X20 + 0x39E]
	0x03E13FC0 MOV X0, X19
	0x03E13FC4 MOV X1, X31
	0x03E13FC8 BL 0x33BE520
	0x03E13FCC CBZ X0, 0x3E14040
	0x03E13FD0 LDR X8, [X0]
	0x03E13FD4 ADRP X19, 0x2E8000
	0x03E13FD8 ADRP X20, 0x357000
	0x03E13FDC ADRP X21, 0x2E0000
	0x03E13FE0 LDP X9, X1, [X8 + 0x1A8]
	0x03E13FE4 LDR X19, [X19 + 0x5D0]
	0x03E13FE8 LDR X20, [X20 + 0x590]
	0x03E13FEC LDR X21, [X21 + 0xA28]
	0x03E13FF0 BLR X9
	0x03E13FF4 LDR X8, [X19]
	0x03E13FF8 LDR X2, [X20]
	0x03E13FFC MOV X1, X0
	0x03E14000 MOV X3, X31
	0x03E14004 MOV X0, X8
	0x03E14008 BL 0x32274B8
	0x03E1400C LDR X8, [X21]
	0x03E14010 MOV X19, X0
	0x03E14014 LDR W9, [X8 + 0xE0]
	0x03E14018 CBNZ W9, 0x3E14024
	0x03E1401C MOV X0, X8
	0x03E14020 BL 0x1C16DFC
	0x03E14024 MOV X0, X19
	0x03E14028 MOV X1, X31
	0x03E1402C BL 0x3C06048
	0x03E14030 LDP X20, X19, [X31 + 0x10]
	0x03E14034 MOV W0, W31
	0x03E14038 LDP X30, X21, [X31], #0x20
	0x03E1403C RET
	0x03E14040 BL 0x1C16F20
	0x03E14044 STP X30, X21, [X31 - 0x20]!
	0x03E14048 STP X20, X19, [X31 + 0x10]
	0x03E1404C ADRP X20, 0x5D4000
	0x03E14050 LDRB W8, [X20 + 0x39F]
	0x03E14054 MOV X19, X0
	0x03E14058 TBNZ X8, 0x0, 0x3E14088
	0x03E1405C ADRP X0, 0x2DF000
	0x03E14060 LDR X0, [X0 + 0xA28]
	0x03E14064 BL 0x1C16CF4
	0x03E14068 ADRP X0, 0x2E7000
	0x03E1406C LDR X0, [X0 + 0x5D0]
	0x03E14070 BL 0x1C16CF4
	0x03E14074 ADRP X0, 0x356000
	0x03E14078 LDR X0, [X0 + 0x598]
	0x03E1407C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D6000
	005 Move W8, [X20+908]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x30B000
	012 Move X0, [X0+1576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+908], W8
	016 Compare X19, 0
	017 JumpIfEqual {65}
	018 Move X10, 0x30B000
	019 Move X8, [X19]
	020 Move X10, [X10+1576]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move X0, X19
	032 Move W2, W31
	033 Call 0x1C5D788
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Add X8, X8, X9
	036 Add X0, X8, 312
	037 Move X8, [X0]
	038 Move X1, [X0+8]
	039 Move X0, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {58}
	045 Move X0, X19
	046 Call TextElement.get_selectingManipulator, X0
	047 Compare X0, 0
	048 JumpIfEqual {65}
	049 Move X0, [X0+16]
	050 Compare X0, 0
	051 JumpIfEqual {58}
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Call TextSelectingUtilities.get_selectIndex, X0
	057 Return X0
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W0, TEMP
	063 Move X30, [X31+32]
	064 Return X0
	065 Call 0x1C17F20

Method: System.Void UnityEngine.UIElements.ITextSelection.set_selectIndex(System.Int32 value)

Disassembly:
	0x03E14080 MOVZ W8, 0x1
	0x03E14084 STRB W8, [X20 + 0x39F]
	0x03E14088 MOV X0, X19
	0x03E1408C MOV X1, X31
	0x03E14090 BL 0x33BE520
	0x03E14094 CBZ X0, 0x3E14100
	0x03E14098 LDR X8, [X0]
	0x03E1409C ADRP X19, 0x2E7000
	0x03E140A0 ADRP X20, 0x356000
	0x03E140A4 ADRP X21, 0x2DF000
	0x03E140A8 LDP X9, X1, [X8 + 0x1A8]
	0x03E140AC LDR X19, [X19 + 0x5D0]
	0x03E140B0 LDR X20, [X20 + 0x598]
	0x03E140B4 LDR X21, [X21 + 0xA28]
	0x03E140B8 BLR X9
	0x03E140BC LDR X8, [X19]
	0x03E140C0 LDR X2, [X20]
	0x03E140C4 MOV X1, X0
	0x03E140C8 MOV X3, X31
	0x03E140CC MOV X0, X8
	0x03E140D0 BL 0x32274B8
	0x03E140D4 LDR X8, [X21]
	0x03E140D8 MOV X19, X0
	0x03E140DC LDR W9, [X8 + 0xE0]
	0x03E140E0 CBNZ W9, 0x3E140EC
	0x03E140E4 MOV X0, X8
	0x03E140E8 BL 0x1C16DFC
	0x03E140EC MOV X0, X19
	0x03E140F0 LDP X20, X19, [X31 + 0x10]
	0x03E140F4 MOV X1, X31
	0x03E140F8 LDP X30, X21, [X31], #0x20
	0x03E140FC B 0x3C06048
	0x03E14100 BL 0x1C16F20
	0x03E14104 SUB X31, X31, 0x40
	0x03E14108 STP X30, X21, [X31 + 0x20]
	0x03E1410C STP X20, X19, [X31 + 0x30]
	0x03E14110 ADRP X21, 0x5D4000
	0x03E14114 LDRB W8, [X21 + 0x3A0]
	0x03E14118 MOV X20, X1
	0x03E1411C MOV X19, X0
	0x03E14120 TBNZ X8, 0x0, 0x3E14138
	0x03E14124 ADRP X0, 0x30A000
	0x03E14128 LDR X0, [X0 + 0xE28]
	0x03E1412C BL 0x1C16CF4
	0x03E14130 MOVZ W8, 0x1
	0x03E14134 STRB W8, [X21 + 0x3A0]
	0x03E14138 CBZ X20, 0x3E14154
	0x03E1413C ADRP X8, 0x30A000
	0x03E14140 LDR X8, [X8 + 0xE28]
	0x03E14144 LDR X9, [X20]
	0x03E14148 LDR X8, [X8]
	0x03E1414C CMP X9, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D5000
	006 Move W8, [X21+909]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x30A000
	014 Move X0, [X0+1576]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+909], W8
	018 Compare X20, 0
	019 JumpIfEqual {67}
	020 Move X10, 0x30A000
	021 Move X8, [X20]
	022 Move X10, [X10+1576]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X10]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move X0, X20
	034 Move W2, W31
	035 Call 0x1C5D788
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Add X8, X8, X9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {62}
	047 Move X0, X20
	048 Call TextElement.get_selectingManipulator, X0
	049 Compare X0, 0
	050 JumpIfEqual {67}
	051 Move X0, [X0+16]
	052 Compare X0, 0
	053 JumpIfEqual {67}
	054 Move W1, W19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X2, X31
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Call TextSelectingUtilities.set_selectIndex, X0, X1
	061 Return 
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void UnityEngine.UIElements.ITextSelection.SelectAll()

Disassembly:
	0x03E14150 B.EQ 0x3E1415C
	0x03E14154 MOV W0, W31
	0x03E14158 B 0x3E14180
	0x03E1415C MOV X0, X20
	0x03E14160 BL 0x1C16E08
	0x03E14164 LDR V0, [X0]
	0x03E14168 LDUR V1, [X0 + 0xC]
	0x03E1416C ADD X1, X31, 0x0
	0x03E14170 MOV X0, X19
	0x03E14174 STR V0, [X31]
	0x03E14178 STUR V1, [X31 + 0xC]
	0x03E1417C BL 0x3E14194
	0x03E14180 LDP X20, X19, [X31 + 0x30]
	0x03E14184 LDP X30, X21, [X31 + 0x20]
	0x03E14188 AND W0, W0, 0x1
	0x03E1418C ADD X31, X31, 0x40
	0x03E14190 RET
	0x03E14194 LDR V1, [X1]
	0x03E14198 LDR V2, [X0]
	0x03E1419C ADRP X8, 0xFFFFFFFFFCCD5000
	0x03E141A0 LDR V0, [X8 + 0xF20]
	0x03E141A4 FSUB V1.2S, V1.2S, V2.2S
	0x00000000 INVALID
	0x03E141AC FADDP S1, V1.2S
	0x03E141B0 FCMP S1, S0
	0x03E141B4 B.PL 0x3E14208
	0x03E141B8 LDR V1, [X1 + 0x8]
	0x03E141BC LDR V2, [X0 + 0x8]
	0x03E141C0 FCMP S1, S2
	0x03E141C4 B.NE 0x3E14208
	0x03E141C8 LDUR V1, [X1 + 0xC]
	0x03E141CC LDUR V3, [X0 + 0xC]
	0x03E141D0 LDUR V2, [X1 + 0x14]
	0x03E141D4 LDUR V4, [X0 + 0x14]
	0x03E141D8 FSUB V1.2S, V1.2S, V3.2S
	0x00000000 INVALID
	0x03E141E0 FSUB V2.2S, V2.2S, V4.2S
	0x03E141E4 UNIMPLEMENTED
	0x00000000 INVALID
	0x03E141EC FADD V1.2S, V1.2S, V3.2S
	0x03E141F0 FADD V1.2S, V2.2S, V1.2S
	0x03E141F4 UNIMPLEMENTED
	0x03E141F8 FADD V1.2S, V2.2S, V1.2S
	0x03E141FC FCMP S1, S0
	0x03E14200 CSET W0, MI
	0x03E14204 RET
	0x03E14208 MOV W0, W31
	0x03E1420C RET
	0x03E14210 SUB X31, X31, 0x50
	0x03E14214 STR X30, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D5000
	005 Move W8, [X20+910]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x30A000
	012 Move X0, [X0+1576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+910], W8
	016 Compare X19, 0
	017 JumpIfEqual {62}
	018 Move X10, 0x30A000
	019 Move X8, [X19]
	020 Move X10, [X10+1576]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move X0, X19
	032 Move W2, W31
	033 Call 0x1C5D788
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Add X8, X8, X9
	036 Add X0, X8, 312
	037 Move X8, [X0]
	038 Move X1, [X0+8]
	039 Move X0, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {58}
	045 Move X0, X19
	046 Call TextElement.get_selectingManipulator, X0
	047 Compare X0, 0
	048 JumpIfEqual {62}
	049 Move X0, [X0+16]
	050 Compare X0, 0
	051 JumpIfEqual {62}
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Call TextSelectingUtilities.SelectAll, X0
	057 Return 
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Return 
	062 Call 0x1C17F20

Method: System.Void UnityEngine.UIElements.ITextSelection.SelectNone()

Disassembly:
	0x03E14218 STP X24, X23, [X31 + 0x20]
	0x03E1421C STP X22, X21, [X31 + 0x30]
	0x03E14220 STP X20, X19, [X31 + 0x40]
	0x03E14224 MOV X1, X31
	0x03E14228 MOV X19, X0
	0x03E1422C BL 0x338FE0C
	0x03E14230 MOV W20, W0
	0x03E14234 ADD X0, X19, 0x4
	0x03E14238 MOV X1, X31
	0x03E1423C BL 0x338FE0C
	0x03E14240 EOR W20, W20, W0, 0x2
	0x03E14244 ADD X0, X19, 0x8
	0x03E14248 MOV X1, X31
	0x03E1424C BL 0x338FE0C
	0x03E14250 LDUR V0, [X19 + 0xC]
	0x03E14254 MOVZ W23, 0x5529
	0x03E14258 MOVK W23, 0xA5550000
	0x03E1425C ADD X8, X31, 0x0
	0x03E14260 MADD W24, W20, W23, W0
	0x03E14264 ADD X0, X31, 0x0
	0x03E14268 MOV X1, X31
	0x03E1426C ORR X19, X8, 0x7
	0x03E14270 ORR X20, X8, 0xF
	0x03E14274 ORR X21, X8, 0xF
	0x03E14278 STR V0, [X31]
	0x03E1427C BL 0x338FE0C
	0x03E14280 MOV W22, W0
	0x03E14284 MOV X0, X19
	0x03E14288 MOV X1, X31
	0x03E1428C BL 0x338FE0C
	0x03E14290 MOV W19, W0
	0x03E14294 MOV X0, X20
	0x03E14298 MOV X1, X31
	0x03E1429C BL 0x338FE0C
	0x03E142A0 MOV W20, W0
	0x03E142A4 MOV X0, X21
	0x03E142A8 MOV X1, X31
	0x03E142AC BL 0x338FE0C
	0x03E142B0 MOVZ W9, 0xA091
	0x03E142B4 MOVK W9, 0x84340000
	0x03E142B8 EOR W8, W22, W19, 0x2
	0x03E142BC MUL W9, W9, W23
	0x03E142C0 EOR W8, W8, W20, 0x2
	0x03E142C4 MADD W9, W24, W23, W9
	0x03E142C8 LDP X20, X19, [X31 + 0x40]
	0x03E142CC LDP X22, X21, [X31 + 0x30]
	0x03E142D0 LDP X24, X23, [X31 + 0x20]
	0x03E142D4 LDR X30, [X31 + 0x10]
	0x03E142D8 EOR W8, W8, W0, 0x1
	0x03E142DC ADD W0, W8, W9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D5000
	005 Move W8, [X20+911]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x30A000
	012 Move X0, [X0+1576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+911], W8
	016 Compare X19, 0
	017 JumpIfEqual {62}
	018 Move X10, 0x30A000
	019 Move X8, [X19]
	020 Move X10, [X10+1576]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move X0, X19
	032 Move W2, W31
	033 Call 0x1C5D788
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Add X8, X8, X9
	036 Add X0, X8, 312
	037 Move X8, [X0]
	038 Move X1, [X0+8]
	039 Move X0, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {58}
	045 Move X0, X19
	046 Call TextElement.get_selectingManipulator, X0
	047 Compare X0, 0
	048 JumpIfEqual {62}
	049 Move X0, [X0+16]
	050 Compare X0, 0
	051 JumpIfEqual {62}
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Call TextSelectingUtilities.SelectNone, X0
	057 Return 
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Return 
	062 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.ITextSelection.HasSelection()

Disassembly:
	0x03E142E0 ADD X31, X31, 0x50
	0x03E142E4 RET
	0x03E142E8 SUB X31, X31, 0x30
	0x03E142EC STR X30, [X31 + 0x20]
	0x03E142F0 LDUR V0, [X1 + 0xC]
	0x03E142F4 LDR V1, [X1]
	0x03E142F8 ADD X1, X31, 0x0
	0x03E142FC STUR V0, [X31 + 0xC]
	0x03E14300 STR V1, [X31]
	0x03E14304 BL 0x3E14194
	0x03E14308 LDR X30, [X31 + 0x20]
	0x03E1430C AND W0, W0, 0x1
	0x03E14310 ADD X31, X31, 0x30
	0x03E14314 RET
	0x03E14318 SUB X31, X31, 0x50
	0x03E1431C STR X30, [X31 + 0x40]
	0x03E14320 LDUR V0, [X0 + 0xC]
	0x03E14324 LDR V1, [X0]
	0x03E14328 ADD X0, X31, 0x0
	0x03E1432C STUR V0, [X31 + 0xC]
	0x03E14330 STR V1, [X31]
	0x03E14334 LDUR V0, [X1 + 0xC]
	0x03E14338 LDR V1, [X1]
	0x03E1433C ADD X1, X31, 0x20
	0x03E14340 STUR V0, [X31 + 0x2C]
	0x03E14344 STR V1, [X31 + 0x2]
	0x03E14348 BL 0x3E14194
	0x03E1434C LDR X30, [X31 + 0x40]
	0x03E14350 ORN W8, W31, W0, 0x0
	0x03E14354 AND W0, W8, 0x1
	0x03E14358 ADD X31, X31, 0x50
	0x03E1435C RET
	0x03E14360 SUB X31, X31, 0x60
	0x03E14364 STR X30, [X31 + 0x20]
	0x03E14368 STP X24, X23, [X31 + 0x30]
	0x03E1436C STP X22, X21, [X31 + 0x40]
	0x03E14370 STP X20, X19, [X31 + 0x50]
	0x03E14374 ADRP X24, 0x5D4000
	0x03E14378 ADRP X20, 0x2E7000
	0x03E1437C ADRP X21, 0x2DF000
	0x03E14380 ADRP X23, 0x307000
	0x03E14384 ADRP X22, 0x356000
	0x03E14388 LDRB W8, [X24 + 0x3A1]
	0x03E1438C LDR X20, [X20 + 0xF08]
	0x03E14390 LDR X21, [X21 + 0xA90]
	0x03E14394 LDR X23, [X23 + 0x5E0]
	0x03E14398 LDR X22, [X22 + 0x5A0]
	0x03E1439C MOV X19, X0
	0x03E143A0 TBNZ X8, 0x0, 0x3E143DC
	0x03E143A4 ADRP X0, 0x307000
	0x03E143A8 LDR X0, [X0 + 0x5E0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D5000
	005 Move W8, [X20+912]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x30A000
	012 Move X0, [X0+1576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+912], W8
	016 Compare X19, 0
	017 JumpIfEqual {63}
	018 Move X10, 0x30A000
	019 Move X8, [X19]
	020 Move X10, [X10+1576]
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 Move X1, [X10]
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move X0, X19
	032 Move W2, W31
	033 Call 0x1C5D788
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Add X8, X8, X9
	036 Add X0, X8, 312
	037 Move X8, [X0]
	038 Move X1, [X0+8]
	039 Move X0, X19
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {58}
	045 Move X0, X19
	046 Call TextElement.get_selectingManipulator, X0
	047 Compare X0, 0
	048 JumpIfEqual {63}
	049 Move X0, [X0+16]
	050 Compare X0, 0
	051 JumpIfEqual {63}
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Call TextSelectingUtilities.get_hasSelection, X0
	057 Return X0
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move W0, W31
	061 Move X30, [X31+32]
	062 Return X0
	063 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.ITextSelection.get_doubleClickSelectsWord()

Disassembly:
	0x03E143AC BL 0x1C16CF4
	0x03E143B0 ADRP X0, 0x2DF000

ISIL:
	001 Move W0, [X0+1137]
	002 Return X0

Method: System.Boolean UnityEngine.UIElements.ITextSelection.get_tripleClickSelectsLine()

Disassembly:
	0x03E143B4 LDR X0, [X0 + 0xA90]
	0x03E143B8 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+1138]
	002 Return X0

Method: System.Boolean UnityEngine.UIElements.ITextSelection.get_selectAllOnFocus()

Disassembly:
	0x03E143BC ADRP X0, 0x2E7000
	0x03E143C0 LDR X0, [X0 + 0xF08]

ISIL:
	001 Move W0, [X0+1139]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextSelection.set_selectAllOnFocus(System.Boolean value)

Disassembly:
	0x03E143C4 BL 0x1C16CF4
	0x03E143C8 ADRP X0, 0x356000
	0x03E143CC LDR X0, [X0 + 0x5A0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+1139], W8
	003 Return 

Method: System.Boolean UnityEngine.UIElements.ITextSelection.get_selectAllOnMouseUp()

Disassembly:
	0x03E143D0 BL 0x1C16CF4
	0x03E143D4 MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+1140]
	002 Return X0

Method: System.Void UnityEngine.UIElements.ITextSelection.set_selectAllOnMouseUp(System.Boolean value)

Disassembly:
	0x03E143D8 STRB W8, [X24 + 0x3A1]
	0x03E143DC LDR X8, [X19]
	0x03E143E0 LDR X0, [X20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+1140], W8
	003 Return 

Method: UnityEngine.Vector2 UnityEngine.UIElements.ITextSelection.get_cursorPosition()

Disassembly:
	0x03E143E4 ADD X1, X31, 0x28
	0x03E143E8 STR X8, [X31 + 0x28]
	0x03E143EC BL 0x1C16E04
	0x03E143F0 MOV X20, X0
	0x03E143F4 LDR V0, [X19 + 0x8]
	0x03E143F8 LDR X0, [X21]
	0x03E143FC ADD X1, X31, 0x1C
	0x03E14400 STR S0, [X31 + 0x1C]
	0x03E14404 BL 0x1C16E04
	0x03E14408 MOV X21, X0
	0x03E1440C LDUR V0, [X19 + 0xC]
	0x03E14410 LDR X0, [X23]
	0x03E14414 ADD X1, X31, 0x0
	0x03E14418 STR V0, [X31]
	0x03E1441C BL 0x1C16E04
	0x03E14420 LDR X8, [X22]
	0x03E14424 MOV X3, X0
	0x03E14428 MOV X1, X20
	0x03E1442C MOV X2, X21
	0x03E14430 MOV X0, X8
	0x03E14434 MOV X4, X31
	0x03E14438 BL 0x3227C18
	0x03E1443C LDP X20, X19, [X31 + 0x50]
	0x03E14440 LDP X22, X21, [X31 + 0x40]
	0x03E14444 LDP X24, X23, [X31 + 0x30]
	0x03E14448 LDR X30, [X31 + 0x20]
	0x03E1444C ADD X31, X31, 0x60
	0x03E14450 RET
	0x03E14454 LDR V1, [X0]
	0x03E14458 LDR V2, [X0 + 0x10]
	0x03E1445C LDR V3, [X0 + 0x18]
	0x03E14460 LDR V4, [X1]
	0x03E14464 LDR V5, [X1 + 0x10]
	0x03E14468 LDR V6, [X1 + 0x18]
	0x03E1446C FSUB V4.4S, V4.4S, V1.4S
	0x03E14470 FSUB V5.2S, V5.2S, V2.2S
	0x03E14474 FSUB S6, S6, S3
	0x00000000 INVALID
	0x00000000 INVALID
	0x03E14480 FMUL S0, S6, S0
	0x03E14484 FADD V1.4S, V1.4S, V4.4S
	0x03E14488 FADD V2.2S, V2.2S, V5.2S
	0x03E1448C FADD S0, S3, S0
	0x03E14490 STR V1, [X8]
	0x03E14494 STR D2, [X8 + 0x10]
	0x03E14498 STR S0, [X8 + 0x18]
	0x03E1449C RET
	0x03E144A0 MOV X1, X31
	0x03E144A4 B 0x33BDD8C
	0x03E144A8 RET
	0x03E144AC MOV X1, X31
	0x03E144B0 B 0x33BDD8C
	0x03E144B4 STR X30, [X31 - 0x20]!
	0x03E144B8 STP X20, X19, [X31 + 0x10]
	0x03E144BC ADRP X20, 0x5D4000
	0x03E144C0 ADRP X19, 0x350000
	0x03E144C4 LDRB W8, [X20 + 0x3A2]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x5D5000
	008 Move X21, 0x30A000
	009 Move W8, [X20+913]
	010 Move X21, [X21+1576]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x30A000
	017 Move X0, [X0+1576]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+913], W8
	021 Move X8, [X19]
	022 Move X20, [X19+984]
	023 Move X1, [X21]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move W2, 4
	034 Move X0, X19
	035 Call 0x1C5D788
	036 Move W9, [X10]
	037 Add W9, W9, 4
	038 Add X8, X8, W9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X19
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Compare X20, 0
	045 JumpIfEqual {66}
	046 Move W1, W0
	047 Move W3, 1
	048 Move X0, X20
	049 Move W2, W31
	050 Move X4, X31
	051 Call TextHandle.GetCursorPositionFromStringIndexUsingLineHeight, X0, X1, X2, X3
	052 Move X0, X19
	053 Move X1, X31
	054 Move V8, V0
	055 Move V9, V1
	056 Call VisualElement.get_contentRect, X0
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+16]
	060 Move X21, [X31+24]
	061 Add S0, S8, S0
	062 Add S1, S9, S1
	063 Move D9, [X31+48]
	064 Move D8, [X31+56]
	065 Return X0
	066 Call 0x1C17F20

Method: System.Single UnityEngine.UIElements.ITextSelection.get_lineHeightAtCursorPosition()

Disassembly:
	0x03E144C8 LDR X19, [X19 + 0xA38]
	0x03E144CC TBNZ X8, 0x0, 0x3E144E4
	0x03E144D0 ADRP X0, 0x350000
	0x03E144D4 LDR X0, [X0 + 0xA38]
	0x03E144D8 BL 0x1C16CF4
	0x03E144DC MOVZ W8, 0x1
	0x03E144E0 STRB W8, [X20 + 0x3A2]
	0x03E144E4 LDR X0, [X19]
	0x03E144E8 LDR W8, [X0 + 0xE0]
	0x03E144EC CBNZ W8, 0x3E144F8
	0x03E144F0 BL 0x1C16DFC
	0x03E144F4 LDR X0, [X19]
	0x03E144F8 LDR X8, [X0 + 0xB8]
	0x03E144FC LDP X20, X19, [X31 + 0x10]
	0x03E14500 LDRB W0, [X8]
	0x03E14504 LDR X30, [X31], #0x20
	0x03E14508 RET
	0x03E1450C STP X30, X21, [X31 - 0x20]!
	0x03E14510 STP X20, X19, [X31 + 0x10]
	0x03E14514 ADRP X21, 0x5D4000
	0x03E14518 ADRP X20, 0x350000
	0x03E1451C LDRB W8, [X21 + 0x3A3]
	0x03E14520 LDR X20, [X20 + 0xA38]
	0x03E14524 MOV W19, W0
	0x03E14528 TBNZ X8, 0x0, 0x3E14540
	0x03E1452C ADRP X0, 0x350000
	0x03E14530 LDR X0, [X0 + 0xA38]
	0x03E14534 BL 0x1C16CF4
	0x03E14538 MOVZ W8, 0x1
	0x03E1453C STRB W8, [X21 + 0x3A3]
	0x03E14540 LDR X0, [X20]
	0x03E14544 LDR W8, [X0 + 0xE0]
	0x03E14548 CBNZ W8, 0x3E14554
	0x03E1454C BL 0x1C16DFC
	0x03E14550 LDR X0, [X20]
	0x03E14554 LDR X8, [X0 + 0xB8]
	0x03E14558 AND W9, W19, 0x1
	0x03E1455C LDP X20, X19, [X31 + 0x10]
	0x03E14560 STRB W9, [X8]
	0x03E14564 LDP X30, X21, [X31], #0x20
	0x03E14568 RET
	0x03E1456C STR X30, [X31 - 0x20]!
	0x03E14570 STP X20, X19, [X31 + 0x10]
	0x03E14574 ADRP X20, 0x5D4000
	0x03E14578 ADRP X19, 0x350000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5D5000
	006 Move X21, 0x30A000
	007 Move W8, [X20+914]
	008 Move X21, [X21+1576]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x30A000
	015 Move X0, [X0+1576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+914], W8
	019 Move X8, [X19]
	020 Move X20, [X19+984]
	021 Move X1, [X21]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Compare X9, 0
	024 JumpIfEqual {31}
	025 Move X10, [X8+176]
	026 Add X10, X10, 8
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Subtract X9, X9, 1
	030 Add X10, X10, 16
	031 Move W2, 4
	032 Move X0, X19
	033 Call 0x1C5D788
	034 Move W9, [X10]
	035 Add W9, W9, 4
	036 Add X8, X8, W9
	037 Add X0, X8, 312
	038 Move X8, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X20, 0
	043 JumpIfEqual {53}
	044 Move W1, W0
	045 Move X0, X20
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X2, X31
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Call TextHandle.GetLineHeightFromCharacterIndex, X0, X1
	052 Return V0
	053 Call 0x1C17F20

Method: UnityEngine.Color UnityEngine.UIElements.ITextSelection.get_selectionColor()

Disassembly:
	0x03E1457C LDRB W8, [X20 + 0x3A4]
	0x03E14580 LDR X19, [X19 + 0xA38]
	0x03E14584 TBNZ X8, 0x0, 0x3E1459C
	0x03E14588 ADRP X0, 0x350000
	0x03E1458C LDR X0, [X0 + 0xA38]

ISIL:
	001 Move V0, [X0+1144]
	002 Move V1, [X0+1148]
	003 Move V2, [X0+1152]
	004 Move V3, [X0+1156]
	005 Return X0

Method: System.Void UnityEngine.UIElements.ITextSelection.set_selectionColor(UnityEngine.Color value)

Disassembly:
	0x03E14590 BL 0x1C16CF4
	0x03E14594 MOVZ W8, 0x1
	0x03E14598 STRB W8, [X20 + 0x3A4]
	0x03E1459C LDR X0, [X19]
	0x03E145A0 LDR W8, [X0 + 0xE0]
	0x03E145A4 CBNZ W8, 0x3E145B0
	0x03E145A8 BL 0x1C16DFC
	0x03E145AC LDR X0, [X19]
	0x03E145B0 LDR X8, [X0 + 0xB8]
	0x03E145B4 LDP X20, X19, [X31 + 0x10]
	0x03E145B8 LDR X0, [X8 + 0x8]
	0x03E145BC LDR X30, [X31], #0x20
	0x03E145C0 RET
	0x03E145C4 STP X30, X21, [X31 - 0x20]!
	0x03E145C8 STP X20, X19, [X31 + 0x10]
	0x03E145CC ADRP X21, 0x5D4000
	0x03E145D0 ADRP X20, 0x350000
	0x03E145D4 LDRB W8, [X21 + 0x3A5]
	0x03E145D8 LDR X20, [X20 + 0xA38]
	0x03E145DC MOV X19, X0
	0x03E145E0 TBNZ X8, 0x0, 0x3E145F8
	0x03E145E4 ADRP X0, 0x350000
	0x03E145E8 LDR X0, [X0 + 0xA38]
	0x03E145EC BL 0x1C16CF4
	0x03E145F0 MOVZ W8, 0x1
	0x03E145F4 STRB W8, [X21 + 0x3A5]

ISIL:
	001 Move V4, [X0+1144]
	002 Move V5, [X0+1148]
	003 Move V6, [X0+1152]
	004 Move V7, [X0+1156]
	005 Subtract S4, S4, S0
	006 Subtract S5, S5, S1
	007 Move X8, -53649408
	008 Multiply S4, S4, S4
	009 Multiply S5, S5, S5
	010 Add S4, S4, S5
	011 Move V5, [X8+3872]
	012 Subtract S6, S6, S2
	013 Subtract S7, S7, S3
	014 Multiply S6, S6, S6
	015 Add S4, S6, S4
	016 Multiply S6, S7, S7
	017 Add S4, S6, S4
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move X1, X31
	020 Move [X0+1144], S0
	021 Move [X0+1148], S1
	022 Move [X0+1152], S2
	023 Move [X0+1156], S3
	024 Call VisualElement.MarkDirtyRepaint, X0
	025 Return 
	026 Return 

Method: UnityEngine.Color UnityEngine.UIElements.ITextSelection.get_cursorColor()

Disassembly:
	0x03E145F8 LDR X0, [X20]
	0x03E145FC LDR W8, [X0 + 0xE0]
	0x03E14600 CBNZ W8, 0x3E1460C
	0x03E14604 BL 0x1C16DFC
	0x03E14608 LDR X0, [X20]

ISIL:
	001 Move V0, [X0+1160]
	002 Move V1, [X0+1164]
	003 Move V2, [X0+1168]
	004 Move V3, [X0+1172]
	005 Return X0

Method: System.Void UnityEngine.UIElements.ITextSelection.set_cursorColor(UnityEngine.Color value)

Disassembly:
	0x03E1460C LDR X8, [X0 + 0xB8]
	0x03E14610 STR X19, [X8 + 0x8]
	0x03E14614 LDP X20, X19, [X31 + 0x10]
	0x03E14618 LDP X30, X21, [X31], #0x20
	0x03E1461C RET
	0x03E14620 B 0x3E14624
	0x03E14624 STP X30, X21, [X31 - 0x20]!
	0x03E14628 STP X20, X19, [X31 + 0x10]
	0x03E1462C ADRP X20, 0x5D4000
	0x03E14630 ADRP X19, 0x350000
	0x03E14634 LDRB W8, [X20 + 0x3A6]
	0x03E14638 LDR X19, [X19 + 0xA38]
	0x03E1463C TBNZ X8, 0x0, 0x3E14660
	0x03E14640 ADRP X0, 0x350000
	0x03E14644 LDR X0, [X0 + 0xA38]
	0x03E14648 BL 0x1C16CF4
	0x03E1464C ADRP X0, 0x2DF000
	0x03E14650 LDR X0, [X0 + 0x988]
	0x03E14654 BL 0x1C16CF4
	0x03E14658 MOVZ W8, 0x1
	0x03E1465C STRB W8, [X20 + 0x3A6]
	0x03E14660 LDR X0, [X19]
	0x03E14664 ADRP X20, 0x2DF000
	0x03E14668 LDR W8, [X0 + 0xE0]
	0x03E1466C LDR X20, [X20 + 0x988]
	0x03E14670 CBNZ W8, 0x3E14678

ISIL:
	001 Move V4, [X0+1160]
	002 Move V5, [X0+1164]
	003 Move V6, [X0+1168]
	004 Move V7, [X0+1172]
	005 Subtract S4, S4, S0
	006 Subtract S5, S5, S1
	007 Move X8, -53649408
	008 Multiply S4, S4, S4
	009 Multiply S5, S5, S5
	010 Add S4, S4, S5
	011 Move V5, [X8+3872]
	012 Subtract S6, S6, S2
	013 Subtract S7, S7, S3
	014 Multiply S6, S6, S6
	015 Add S4, S6, S4
	016 Multiply S6, S7, S7
	017 Add S4, S6, S4
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move X1, X31
	020 Move [X0+1160], S0
	021 Move [X0+1164], S1
	022 Move [X0+1168], S2
	023 Move [X0+1172], S3
	024 Call VisualElement.MarkDirtyRepaint, X0
	025 Return 
	026 Return 

Method: System.Single UnityEngine.UIElements.ITextSelection.get_cursorWidth()

Disassembly:
	0x03E14674 BL 0x1C16DFC
	0x03E14678 ADRP X21, 0x5D4000

ISIL:
	001 Move V0, [X0+1176]
	002 Return V0

Method: UnityEngine.UIElements.TextSelectingManipulator get_selectingManipulator()

Disassembly:
	0x03E0BC7C MOV X0, X20
	0x03E0BC80 BLR X8
	0x03E0BC84 CMP W0, 0x1
	0x03E0BC88 B.NE 0x3E0BC98
	0x03E0BC8C MOV X0, X31
	0x03E0BC90 BL 0x3C63934
	0x03E0BC94 CBZ X0, 0x3E0BB98
	0x03E0BC98 LDR X20, [X19 + 0x20]
	0x03E0BC9C CBZ X20, 0x3E0BD1C
	0x03E0BCA0 LDR X8, [X20]
	0x03E0BCA4 LDR X19, [X19 + 0x10]
	0x03E0BCA8 LDR X1, [X21]
	0x03E0BCAC LDRH W9, [X8 + 0x12E]
	0x03E0BCB0 CBZ X9, 0x3E0BCD4
	0x03E0BCB4 LDR X10, [X8 + 0xB0]
	0x03E0BCB8 ADD X10, X10, 0x8
	0x03E0BCBC LDUR X11, [X10 - 0x8]
	0x03E0BCC0 CMP X11, X1
	0x03E0BCC4 B.EQ 0x3E0BCE4
	0x03E0BCC8 SUBS X9, X9, 0x1
	0x03E0BCCC ADD X10, X10, 0x10
	0x03E0BCD0 B.NE 0x3E0BCBC
	0x03E0BCD4 MOVZ W2, 0xF
	0x03E0BCD8 MOV X0, X20
	0x03E0BCDC BL 0x1C5C788

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5DE000
	005 Move W8, [X20+915]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x360000
	012 Move X0, [X0+1048]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+915], W8
	016 Move X20, [X19+1128]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0x360000
	020 Move X8, [X8+1048]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X19
	024 Move X20, X0
	025 Call TextSelectingManipulator..ctor, X0, X1
	026 Move [X19+1128], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Void DrawHighlighting(UnityEngine.UIElements.MeshGenerationContext mgc)

Disassembly:
	0x03E10E9C LDR X0, [X0 + 0x120]
	0x03E10EA0 BL 0x1C16CF4
	0x03E10EA4 ADRP X0, 0x2E3000
	0x03E10EA8 LDR X0, [X0 + 0x5A8]
	0x03E10EAC BL 0x1C16CF4
	0x03E10EB0 ADRP X0, 0x2E3000
	0x03E10EB4 LDR X0, [X0 + 0x988]
	0x03E10EB8 BL 0x1C16CF4
	0x03E10EBC MOVZ W8, 0x1
	0x03E10EC0 STRB W8, [X23 + 0x372]
	0x03E10EC4 MOV X0, X22
	0x03E10EC8 MOV X1, X31
	0x03E10ECC BL 0x3DE0EB8
	0x03E10ED0 CBZ X0, 0x3E112B4
	0x03E10ED4 ADRP X10, 0x30C000
	0x03E10ED8 LDR X8, [X0]
	0x03E10EDC LDR X10, [X10 + 0x120]
	0x03E10EE0 MOV X23, X0
	0x03E10EE4 LDRH W9, [X8 + 0x12E]
	0x03E10EE8 LDR X1, [X10]
	0x03E10EEC CBZ X9, 0x3E10F10
	0x03E10EF0 LDR X10, [X8 + 0xB0]
	0x03E10EF4 ADD X10, X10, 0x8
	0x03E10EF8 LDUR X11, [X10 - 0x8]
	0x03E10EFC CMP X11, X1
	0x03E10F00 B.EQ 0x3E10F20
	0x03E10F04 SUBS X9, X9, 0x1
	0x03E10F08 ADD X10, X10, 0x10
	0x03E10F0C B.NE 0x3E10EF8
	0x03E10F10 MOVZ W2, 0x1E
	0x03E10F14 MOV X0, X23
	0x03E10F18 BL 0x1C5C788
	0x03E10F1C B 0x3E10F30
	0x03E10F20 LDR W9, [X10]
	0x03E10F24 ADD W9, W9, 0x1E
	0x03E10F28 ADD X8, X8, W9, 0x4, SXTW
	0x03E10F2C ADD X0, X8, 0x138
	0x03E10F30 LDP X8, X1, [X0]
	0x03E10F34 MOV X0, X23
	0x03E10F38 BLR X8
	0x03E10F3C FMOV W8, S0
	0x03E10F40 AND W8, W8, 0x7FFFFFFF
	0x03E10F44 MOVZ W9, 0x7F800000
	0x03E10F48 CMP W8, W9
	0x03E10F4C FMOV S1, W31
	0x03E10F50 MOV X0, X22
	0x03E10F54 MOV X1, X31
	0x03E10F58 FCSEL S9, S1, S0, HI
	0x03E10F5C BL 0x3DEC4BC
	0x03E10F60 FMOV S1, 1
	0x03E10F64 FDIV S0, S1, S0
	0x03E10F68 FMIN S1, S9, S1
	0x03E10F6C FCMP S9, S0
	0x03E10F70 FCSEL S9, S1, S0, PL
	0x03E10F74 FMOV S0, W31
	0x03E10F78 FMOV S1, W31
	0x03E10F7C MOV X0, X22
	0x03E10F80 MOV X1, X20
	0x03E10F84 MOV W2, W31
	0x03E10F88 MOV W3, W31
	0x03E10F8C BL 0x3E0F068
	0x03E10F90 FADD S1, S9, S8
	0x03E10F94 FCMP S0, S1
	0x03E10F98 B.LS 0x3E10FAC
	0x03E10F9C MOV X0, X19
	0x03E10FA0 MOV X1, X31
	0x03E10FA4 BL 0x32277A8
	0x03E10FA8 TBZ X0, 0x0, 0x3E10FD8
	0x03E10FAC MOV X25, X20
	0x03E10FB0 MOV X0, X25
	0x03E10FB4 LDP X20, X19, [X31 + 0x70]
	0x03E10FB8 LDP X22, X21, [X31 + 0x60]
	0x03E10FBC LDP X24, X23, [X31 + 0x50]
	0x03E10FC0 LDP X26, X25, [X31 + 0x40]
	0x03E10FC4 LDP X28, X27, [X31 + 0x30]
	0x03E10FC8 LDP X29, X30, [X31 + 0x20]
	0x03E10FCC LDP D9, D8, [X31 + 0x10]
	0x03E10FD0 LDR V10, [X31], #0x80
	0x03E10FD4 RET
	0x03E10FD8 CBZ X20, 0x3E112B4
	0x03E10FDC LDR W8, [X20 + 0x10]
	0x03E10FE0 FMOV S0, W31
	0x03E10FE4 FMOV S1, W31
	0x03E10FE8 MOV X0, X22
	0x03E10FEC CMP W8, 0x1
	0x03E10FF0 CSEL X25, X19, X20, GT
	0x03E10FF4 MOV X1, X25
	0x03E10FF8 MOV W2, W31
	0x03E10FFC MOV W3, W31
	0x03E11000 BL 0x3E0F068
	0x03E11004 FCMP S0, S8
	0x03E11008 B.GE 0x3E10FB0
	0x03E1100C LDR W28, [X20 + 0x10]
	0x03E11010 SUBS W8, W21, 0x1
	0x03E11014 CSET W29, EQ
	0x03E11018 CMP W8, 0x2
	0x03E1101C SUB W10, W28, 0x1
	0x03E11020 SUB W9, W28, 0x2
	0x03E11024 CSEL W27, W10, W9, CC
	0x03E11028 CMP W27, W29
	0x03E1102C STR W10, [X31 + 0xC]
	0x03E11030 B.LT 0x3E10FAC
	0x03E11034 ADRP X9, 0xFFFFFFFFFCCD8000
	0x03E11038 LDR V10, [X9 + 0xF9C]
	0x03E1103C ADD W8, W27, W29
	0x03E11040 AND W26, W21, 0xFFFFFFFD
	0x03E11044 MOVN W23, 0x0
	0x03E11048 MOV X25, X20
	0x03E1104C STR W28, [X31 + 0x8]
	0x03E11050 CMP W8, 0x0
	0x03E11054 CINC W9, W8, LT
	0x03E11058 CMP W21, 0x1
	0x03E1105C SBFM W24, W9, 0x1, 0x1F
	0x03E11060 B.NE 0x3E11084
	0x03E11064 SUB W2, W28, W24
	0x03E11068 MOV X0, X20
	0x03E1106C MOV W1, W24
	0x03E11070 MOV X3, X31
	0x03E11074 BL 0x3228DE4
	0x03E11078 MOV X1, X0
	0x03E1107C MOV X0, X19
	0x03E11080 B 0x3E110A8
	0x03E11084 CMP W21, 0x2
	0x03E11088 B.EQ 0x3E11158
	0x03E1108C CBNZ W21, 0x3E110B4
	0x03E11090 MOV X0, X20
	0x03E11094 MOV W1, W31
	0x03E11098 MOV W2, W24
	0x03E1109C MOV X3, X31
	0x03E110A0 BL 0x3228DE4
	0x03E110A4 MOV X1, X19
	0x03E110A8 MOV X2, X31
	0x03E110AC BL 0x321B938
	0x03E110B0 MOV X25, X0
	0x03E110B4 FMOV S0, W31
	0x03E110B8 FMOV S1, W31
	0x03E110BC MOV X0, X22
	0x03E110C0 MOV X1, X25
	0x03E110C4 MOV W2, W31
	0x03E110C8 MOV W3, W31
	0x03E110CC BL 0x3E0F068
	0x03E110D0 ADRP X8, 0x2E2000
	0x03E110D4 LDR X8, [X8 + 0x5A8]
	0x03E110D8 MOV V9.16B, V0.16B
	0x03E110DC LDR X0, [X8]
	0x03E110E0 LDR W8, [X0 + 0xE0]
	0x03E110E4 CBNZ W8, 0x3E110EC
	0x03E110E8 BL 0x1C16DFC
	0x03E110EC FABD S0, S9, S9
	0x03E110F0 FCMP S0, S10
	0x03E110F4 B.MI 0x3E10FB0
	0x03E110F8 CMP W21, 0x1
	0x03E110FC B.NE 0x3E1111C
	0x03E11100 FCMP S9, S8
	0x03E11104 SUB W9, W24, 0x1
	0x03E11108 B.LE 0x3E11128
	0x03E1110C CMP W23, W9
	0x03E11110 B.EQ 0x3E111E8
	0x03E11114 ADD W29, W24, 0x1
	0x03E11118 B 0x3E11120
	0x03E1111C CBZ W26, 0x3E11140
	0x03E11120 MOV W9, W27
	0x03E11124 MOV W24, W23
	0x03E11128 CMP W29, W9
	0x03E1112C ADD W8, W29, W9
	0x03E11130 MOV W23, W24
	0x03E11134 MOV W27, W9
	0x03E11138 B.LE 0x3E11050
	0x03E1113C B 0x3E10FB0
	0x03E11140 FCMP S9, S8
	0x03E11144 B.LE 0x3E11178
	0x03E11148 SUB W9, W24, 0x1
	0x03E1114C CMP W23, W9
	0x03E11150 B.NE 0x3E11124
	0x03E11154 B 0x3E1122C
	0x03E11158 MOV W28, W26
	0x03E1115C CMP W8, 0x4
	0x03E11160 SUB W26, W24, 0x1
	0x03E11164 B.GE 0x3E11184
	0x03E11168 ADRP X8, 0x2E2000
	0x03E1116C LDR X8, [X8 + 0x988]
	0x03E11170 LDR X25, [X8]
	0x03E11174 B 0x3E1119C
	0x03E11178 ADD W29, W24, 0x1
	0x03E1117C MOV W9, W27
	0x03E11180 B 0x3E11128
	0x03E11184 MOV X0, X20
	0x03E11188 MOV W1, W31
	0x03E1118C MOV W2, W26
	0x03E11190 MOV X3, X31
	0x03E11194 BL 0x3228DE4
	0x03E11198 MOV X25, X0
	0x03E1119C LDR W8, [X31 + 0xC]
	0x03E111A0 SUB W1, W8, W26
	0x03E111A4 CMP W1, 0x1
	0x03E111A8 B.LT 0x3E111C0
	0x03E111AC MOV X0, X20
	0x03E111B0 MOV X2, X31
	0x03E111B4 BL 0x322B484
	0x03E111B8 MOV X2, X0
	0x03E111BC B 0x3E111CC
	0x03E111C0 ADRP X8, 0x2E2000
	0x03E111C4 LDR X8, [X8 + 0x988]
	0x03E111C8 LDR X2, [X8]
	0x03E111CC MOV X0, X25
	0x03E111D0 MOV X1, X19
	0x03E111D4 MOV X3, X31
	0x03E111D8 MOV W26, W28
	0x03E111DC BL 0x32274B8
	0x03E111E0 LDR W28, [X31 + 0x8]
	0x03E111E4 B 0x3E110B0
	0x03E111E8 SUB W2, W28, W23
	0x03E111EC MOV X0, X20
	0x03E111F0 MOV W1, W23
	0x03E111F4 MOV X3, X31
	0x03E111F8 BL 0x3228DE4
	0x03E111FC MOV X1, X0
	0x03E11200 MOV X0, X19
	0x03E11204 LDP X20, X19, [X31 + 0x70]
	0x03E11208 LDP X22, X21, [X31 + 0x60]
	0x03E1120C LDP X24, X23, [X31 + 0x50]
	0x03E11210 LDP X26, X25, [X31 + 0x40]
	0x03E11214 LDP X28, X27, [X31 + 0x30]
	0x03E11218 LDP X29, X30, [X31 + 0x20]
	0x03E1121C LDP D9, D8, [X31 + 0x10]
	0x03E11220 MOV X2, X31
	0x03E11224 LDR V10, [X31], #0x80
	0x03E11228 B 0x321B938
	0x03E1122C CBZ W21, 0x3E11298
	0x03E11230 SUB W8, W23, 0x1
	0x03E11234 BIC W21, W8, W8, 0x1F
	0x03E11238 MOV X0, X20
	0x03E1123C MOV W1, W31
	0x03E11240 MOV W2, W21
	0x03E11244 MOV X3, X31
	0x03E11248 BL 0x3228DE4
	0x03E1124C LDR W8, [X31 + 0xC]
	0x03E11250 MOV X22, X0
	0x03E11254 MOV X0, X20
	0x03E11258 MOV X2, X31
	0x03E1125C SUB W1, W8, W21
	0x03E11260 BL 0x322B484
	0x03E11264 MOV X2, X0
	0x03E11268 MOV X0, X22
	0x03E1126C MOV X1, X19
	0x03E11270 LDP X20, X19, [X31 + 0x70]
	0x03E11274 LDP X22, X21, [X31 + 0x60]
	0x03E11278 LDP X24, X23, [X31 + 0x50]
	0x03E1127C LDP X26, X25, [X31 + 0x40]
	0x03E11280 LDP X28, X27, [X31 + 0x30]
	0x03E11284 LDP X29, X30, [X31 + 0x20]
	0x03E11288 LDP D9, D8, [X31 + 0x10]
	0x03E1128C MOV X3, X31
	0x03E11290 LDR V10, [X31], #0x80
	0x03E11294 B 0x32274B8
	0x03E11298 MOV X0, X20
	0x03E1129C MOV W1, W31
	0x03E112A0 MOV W2, W23
	0x03E112A4 MOV X3, X31
	0x03E112A8 BL 0x3228DE4
	0x03E112AC MOV X1, X19
	0x03E112B0 B 0x3E11204
	0x03E112B4 BL 0x1C16F20
	0x03E112B8 B 0x3E0F068
	0x03E112BC STP D9, D8, [X31 - 0x30]!
	0x03E112C0 STP X30, X21, [X31 + 0x10]
	0x03E112C4 STP X20, X19, [X31 + 0x20]
	0x03E112C8 MOV W19, W2
	0x03E112CC MOV V8.16B, V1.16B
	0x03E112D0 MOV W20, W1
	0x03E112D4 MOV V9.16B, V0.16B
	0x03E112D8 MOV X21, X0
	0x03E112DC BL 0x3E0EE80
	0x03E112E0 MOV X1, X0
	0x03E112E4 MOV X0, X21
	0x03E112E8 MOV W2, W20
	0x03E112EC MOV W3, W19
	0x03E112F0 LDP X20, X19, [X31 + 0x20]
	0x03E112F4 LDP X30, X21, [X31 + 0x10]
	0x03E112F8 MOV V0.16B, V9.16B
	0x03E112FC MOV V1.16B, V8.16B
	0x03E11300 LDP D9, D8, [X31], #0x30
	0x03E11304 B 0x3E0F068
	0x03E11308 STR X30, [X31 - 0x20]!
	0x03E1130C STP X20, X19, [X31 + 0x10]
	0x03E11310 ADRP X20, 0x5D7000
	0x03E11314 LDRB W8, [X20 + 0x374]
	0x03E11318 MOV X19, X0
	0x03E1131C TBNZ X8, 0x0, 0x3E11334
	0x03E11320 ADRP X0, 0x2E4000
	0x03E11324 LDR X0, [X0 + 0x278]
	0x03E11328 BL 0x1C16CF4
	0x03E1132C MOVZ W8, 0x1
	0x03E11330 STRB W8, [X20 + 0x374]
	0x03E11334 LDR X0, [X19 + 0x3E0]
	0x03E11338 CBNZ X0, 0x3E11350
	0x03E1133C ADRP X8, 0x2E4000
	0x03E11340 LDR X8, [X8 + 0x278]
	0x03E11344 LDR X8, [X8]
	0x03E11348 LDR X8, [X8 + 0xB8]
	0x03E1134C LDR X0, [X8]
	0x03E11350 LDP X20, X19, [X31 + 0x10]
	0x03E11354 LDR X30, [X31], #0x20
	0x03E11358 RET
	0x03E1135C STP X30, X21, [X31 - 0x20]!
	0x03E11360 STP X20, X19, [X31 + 0x10]
	0x03E11364 ADRP X19, 0x5D7000
	0x03E11368 LDRB W8, [X19 + 0x375]
	0x03E1136C MOV X21, X1
	0x03E11370 MOV X20, X0
	0x03E11374 TBNZ X8, 0x0, 0x3E113B0
	0x03E11378 ADRP X0, 0x359000
	0x03E1137C LDR X0, [X0 + 0x4E8]
	0x03E11380 BL 0x1C16CF4
	0x03E11384 ADRP X0, 0x359000
	0x03E11388 LDR X0, [X0 + 0x4F0]
	0x03E1138C BL 0x1C16CF4
	0x03E11390 ADRP X0, 0x2E2000
	0x03E11394 LDR X0, [X0 + 0xE00]
	0x03E11398 BL 0x1C16CF4
	0x03E1139C ADRP X0, 0x30C000
	0x03E113A0 LDR X0, [X0 + 0x710]
	0x03E113A4 BL 0x1C16CF4
	0x03E113A8 MOVZ W8, 0x1
	0x03E113AC STRB W8, [X19 + 0x375]
	0x03E113B0 LDR X0, [X20 + 0x3E0]
	0x03E113B4 MOV X1, X21
	0x03E113B8 MOV X2, X31
	0x03E113BC BL 0x3226EF8
	0x03E113C0 TBZ X0, 0x0, 0x3E11568
	0x03E113C4 MOV X0, X20
	0x03E113C8 MOV X1, X31
	0x03E113CC BL 0x3DEC0CC
	0x03E113D0 CBZ X0, 0x3E11480
	0x03E113D4 LDR X8, [X20]
	0x03E113D8 MOV X0, X20
	0x03E113DC LDR X9, [X8 + 0xB18]
	0x03E113E0 LDR X1, [X8 + 0xB20]
	0x03E113E4 BLR X9
	0x03E113E8 ADRP X8, 0x359000
	0x03E113EC LDR X8, [X8 + 0x4F0]
	0x03E113F0 MOV X19, X0
	0x03E113F4 LDR X8, [X8]
	0x03E113F8 LDR W9, [X8 + 0xE0]
	0x03E113FC CBNZ W9, 0x3E11408
	0x03E11400 MOV X0, X8
	0x03E11404 BL 0x1C16DFC
	0x03E11408 ADRP X8, 0x359000
	0x03E1140C LDR X8, [X8 + 0x4E8]
	0x03E11410 MOV X0, X19
	0x03E11414 MOV X1, X21
	0x03E11418 LDR X2, [X8]
	0x03E1141C BL 0x28F4630
	0x03E11420 MOV X19, X0
	0x03E11424 CBZ X0, 0x3E1159C
	0x03E11428 MOV X0, X19
	0x03E1142C MOV X1, X20
	0x03E11430 MOV X2, X31
	0x03E11434 BL 0x3D9C6C8
	0x03E11438 ADRP X10, 0x30C000
	0x03E1143C LDR X8, [X20]
	0x03E11440 LDR X10, [X10 + 0x710]
	0x03E11444 LDRH W9, [X8 + 0x12E]
	0x03E11448 LDR X1, [X10]
	0x03E1144C CBZ X9, 0x3E11470
	0x03E11450 LDR X10, [X8 + 0xB0]
	0x03E11454 ADD X10, X10, 0x8
	0x03E11458 LDUR X11, [X10 - 0x8]
	0x03E1145C CMP X11, X1
	0x03E11460 B.EQ 0x3E114C8
	0x03E11464 SUBS X9, X9, 0x1
	0x03E11468 ADD X10, X10, 0x10
	0x03E1146C B.NE 0x3E11458
	0x03E11470 MOVZ W2, 0x2
	0x03E11474 MOV X0, X20
	0x03E11478 BL 0x1C5C788
	0x03E1147C B 0x3E114D8
	0x03E11480 ADRP X10, 0x30C000
	0x03E11484 LDR X8, [X20]
	0x03E11488 LDR X10, [X10 + 0x710]
	0x03E1148C LDRH W9, [X8 + 0x12E]
	0x03E11490 LDR X1, [X10]
	0x03E11494 CBZ X9, 0x3E114B8
	0x03E11498 LDR X10, [X8 + 0xB0]
	0x03E1149C ADD X10, X10, 0x8
	0x03E114A0 LDUR X11, [X10 - 0x8]
	0x03E114A4 CMP X11, X1
	0x03E114A8 B.EQ 0x3E11574
	0x03E114AC SUBS X9, X9, 0x1
	0x03E114B0 ADD X10, X10, 0x10
	0x03E114B4 B.NE 0x3E114A0
	0x03E114B8 MOVZ W2, 0x2
	0x03E114BC MOV X0, X20
	0x03E114C0 BL 0x1C5C788
	0x03E114C4 B 0x3E11584
	0x03E114C8 LDR W9, [X10]
	0x03E114CC ADD W9, W9, 0x2
	0x03E114D0 ADD X8, X8, W9, 0x4, SXTW
	0x03E114D4 ADD X0, X8, 0x138
	0x03E114D8 LDP X8, X2, [X0]
	0x03E114DC MOV X0, X20
	0x03E114E0 MOV X1, X21
	0x03E114E4 BLR X8
	0x03E114E8 LDR X8, [X20]
	0x03E114EC LDP X9, X2, [X8 + 0x198]
	0x03E114F0 MOV X0, X20
	0x03E114F4 MOV X1, X19
	0x03E114F8 BLR X9
	0x03E114FC MOV X20, X31
	0x03E11500 CBZ X19, 0x3E11564
	0x03E11504 ADRP X10, 0x2E2000
	0x03E11508 LDR X8, [X19]
	0x03E1150C LDR X10, [X10 + 0xE00]
	0x03E11510 LDRH W9, [X8 + 0x12E]
	0x03E11514 LDR X1, [X10]
	0x03E11518 CBZ X9, 0x3E1153C
	0x03E1151C LDR X10, [X8 + 0xB0]
	0x03E11520 ADD X10, X10, 0x8
	0x03E11524 LDUR X11, [X10 - 0x8]
	0x03E11528 CMP X11, X1
	0x03E1152C B.EQ 0x3E1154C
	0x03E11530 SUBS X9, X9, 0x1
	0x03E11534 ADD X10, X10, 0x10
	0x03E11538 B.NE 0x3E11524
	0x03E1153C MOV X0, X19
	0x03E11540 MOV W2, W31
	0x03E11544 BL 0x1C5C788
	0x03E11548 B 0x3E11558
	0x03E1154C LDRSW X9, [X10]
	0x03E11550 ADD X8, X8, X9, 0x4, LSL
	0x03E11554 ADD X0, X8, 0x138
	0x03E11558 LDP X8, X1, [X0]
	0x03E1155C MOV X0, X19
	0x03E11560 BLR X8
	0x03E11564 CBNZ X20, 0x3E115A0
	0x03E11568 LDP X20, X19, [X31 + 0x10]
	0x03E1156C LDP X30, X21, [X31], #0x20
	0x03E11570 RET
	0x03E11574 LDR W9, [X10]
	0x03E11578 ADD W9, W9, 0x2
	0x03E1157C ADD X8, X8, W9, 0x4, SXTW
	0x03E11580 ADD X0, X8, 0x138
	0x03E11584 LDP X3, X2, [X0]
	0x03E11588 MOV X0, X20
	0x03E1158C LDP X20, X19, [X31 + 0x10]
	0x03E11590 MOV X1, X21
	0x03E11594 LDP X30, X21, [X31], #0x20
	0x03E11598 BR X3
	0x03E1159C BL 0x1C16F20
	0x03E115A0 MOV X0, X20
	0x03E115A4 BL 0x1C16F18
	0x03E115A8 B 0x3E115B0
	0x03E115AC B 0x3E115B0
	0x03E115B0 MOV X21, X0
	0x03E115B4 CMP W1, 0x1
	0x03E115B8 B.NE 0x3E115D0
	0x03E115BC MOV X0, X21
	0x03E115C0 BL 0x3EB1AD0
	0x03E115C4 LDR X20, [X0]
	0x03E115C8 BL 0x3EB1AE0
	0x03E115CC B 0x3E11500
	0x03E115D0 MOV X20, X31
	0x03E115D4 B 0x3E115DC
	0x03E115D8 MOV X21, X0
	0x03E115DC CBZ X19, 0x3E11640
	0x03E115E0 ADRP X10, 0x2E2000
	0x03E115E4 LDR X8, [X19]
	0x03E115E8 LDR X10, [X10 + 0xE00]
	0x03E115EC LDRH W9, [X8 + 0x12E]
	0x03E115F0 LDR X1, [X10]
	0x03E115F4 CBZ X9, 0x3E11618
	0x03E115F8 LDR X10, [X8 + 0xB0]
	0x03E115FC ADD X10, X10, 0x8
	0x03E11600 LDUR X11, [X10 - 0x8]
	0x03E11604 CMP X11, X1
	0x03E11608 B.EQ 0x3E11628
	0x03E1160C SUBS X9, X9, 0x1
	0x03E11610 ADD X10, X10, 0x10
	0x03E11614 B.NE 0x3E11600
	0x03E11618 MOV X0, X19
	0x03E1161C MOV W2, W31
	0x03E11620 BL 0x1C5C788
	0x03E11624 B 0x3E11634
	0x03E11628 LDRSW X9, [X10]
	0x03E1162C ADD X8, X8, X9, 0x4, LSL
	0x03E11630 ADD X0, X8, 0x138
	0x03E11634 LDP X8, X1, [X0]
	0x03E11638 MOV X0, X19
	0x03E1163C BLR X8
	0x03E11640 CBNZ X20, 0x3E1164C
	0x03E11644 MOV X0, X21
	0x03E11648 BL 0x1D2C690
	0x03E1164C MOV X0, X20
	0x03E11650 BL 0x1C16F18
	0x03E11654 BL 0x1990590
	0x03E11658 STR X30, [X31 - 0x30]!
	0x03E1165C STP X22, X21, [X31 + 0x10]
	0x03E11660 STP X20, X19, [X31 + 0x20]
	0x03E11664 ADRP X22, 0x5D7000
	0x03E11668 ADRP X21, 0x30C000
	0x03E1166C LDRB W8, [X22 + 0x376]
	0x03E11670 LDR X21, [X21 + 0x630]
	0x03E11674 MOV X20, X1
	0x03E11678 MOV X19, X0
	0x03E1167C TBNZ X8, 0x0, 0x3E11694
	0x03E11680 ADRP X0, 0x30C000
	0x03E11684 LDR X0, [X0 + 0x630]
	0x03E11688 BL 0x1C16CF4
	0x03E1168C MOVZ W8, 0x1
	0x03E11690 STRB W8, [X22 + 0x376]
	0x03E11694 LDR X8, [X19]
	0x03E11698 LDR X1, [X21]
	0x03E1169C LDRH W9, [X8 + 0x12E]
	0x03E116A0 CBZ X9, 0x3E116C4
	0x03E116A4 LDR X10, [X8 + 0xB0]
	0x03E116A8 ADD X10, X10, 0x8
	0x03E116AC LDUR X11, [X10 - 0x8]
	0x03E116B0 CMP X11, X1
	0x03E116B4 B.EQ 0x3E116D4
	0x03E116B8 SUBS X9, X9, 0x1
	0x03E116BC ADD X10, X10, 0x10
	0x03E116C0 B.NE 0x3E116AC
	0x03E116C4 MOVZ W2, 0x15
	0x03E116C8 MOV X0, X19
	0x03E116CC BL 0x1C5C788
	0x03E116D0 B 0x3E116E4
	0x03E116D4 LDR W9, [X10]
	0x03E116D8 ADD W9, W9, 0x15
	0x03E116DC ADD X8, X8, W9, 0x4, SXTW
	0x03E116E0 ADD X0, X8, 0x138
	0x03E116E4 LDP X8, X2, [X0]
	0x03E116E8 MOV X0, X19
	0x03E116EC MOV X1, X20
	0x03E116F0 BLR X8
	0x03E116F4 LDR X8, [X19 + 0x3E0]
	0x03E116F8 MOV X20, X0
	0x03E116FC MOV X1, X20
	0x03E11700 MOV X2, X31
	0x03E11704 MOV X0, X8
	0x03E11708 BL 0x3226EF8
	0x03E1170C TBZ X0, 0x0, 0x3E1174C
	0x03E11710 MOV X0, X19
	0x03E11714 MOV X1, X20
	0x03E11718 BL 0x3E11788
	0x03E1171C MOVZ W1, 0x808
	0x03E11720 MOV X0, X19
	0x03E11724 MOV X2, X31
	0x03E11728 STR X20, [X19 + 0x3E0]
	0x03E1172C BL 0x3DE5048
	0x03E11730 LDR X0, [X19 + 0x58]
	0x03E11734 MOV X1, X31
	0x03E11738 BL 0x32277A8
	0x03E1173C TBNZ X0, 0x0, 0x3E1174C
	0x03E11740 MOV X0, X19
	0x03E11744 MOV X1, X31
	0x03E11748 BL 0x3DF276C
	0x03E1174C LDR X8, [X19 + 0x400]
	0x03E11750 CBZ X8, 0x3E11774
	0x03E11754 LDR X0, [X8 + 0x20]
	0x03E11758 CBZ X0, 0x3E11784
	0x03E1175C MOV X1, X20
	0x03E11760 LDP X20, X19, [X31 + 0x20]
	0x03E11764 LDP X22, X21, [X31 + 0x10]
	0x03E11768 MOV X2, X31
	0x03E1176C LDR X30, [X31], #0x30
	0x03E11770 B 0x3C7B630
	0x03E11774 LDP X20, X19, [X31 + 0x20]
	0x03E11778 LDP X22, X21, [X31 + 0x10]
	0x03E1177C LDR X30, [X31], #0x30
	0x03E11780 RET
	0x03E11784 BL 0x1C16F20
	0x03E11788 STR X30, [X31 - 0x30]!
	0x03E1178C STP X22, X21, [X31 + 0x10]
	0x03E11790 STP X20, X19, [X31 + 0x20]
	0x03E11794 ADRP X21, 0x5D7000
	0x03E11798 ADRP X22, 0x348000
	0x03E1179C LDRB W8, [X21 + 0x389]
	0x03E117A0 LDR X22, [X22 + 0x30]
	0x03E117A4 MOV X20, X1
	0x03E117A8 MOV X19, X0
	0x03E117AC TBNZ X8, 0x0, 0x3E117C4
	0x03E117B0 ADRP X0, 0x348000
	0x03E117B4 LDR X0, [X0 + 0x30]
	0x03E117B8 BL 0x1C16CF4
	0x03E117BC MOVZ W8, 0x1
	0x03E117C0 STRB W8, [X21 + 0x389]
	0x03E117C4 LDR X1, [X22]
	0x03E117C8 MOV X0, X20
	0x03E117CC MOV X2, X31
	0x03E117D0 BL 0x321B938
	0x03E117D4 STR X0, [X19 + 0x450]
	0x03E117D8 LDP X20, X19, [X31 + 0x20]
	0x03E117DC LDP X22, X21, [X31 + 0x10]
	0x03E117E0 LDR X30, [X31], #0x30
	0x03E117E4 RET
	0x03E117E8 LDRB W0, [X0 + 0x408]
	0x03E117EC RET
	0x03E117F0 STP X30, X21, [X31 - 0x20]!
	0x03E117F4 STP X20, X19, [X31 + 0x10]
	0x03E117F8 ADRP X21, 0x5D7000
	0x03E117FC LDRB W8, [X21 + 0x377]
	0x03E11800 MOV X19, X0
	0x03E11804 AND W20, W1, 0x1
	0x03E11808 TBNZ X8, 0x0, 0x3E11820
	0x03E1180C ADRP X0, 0x30C000
	0x03E11810 LDR X0, [X0 + 0x630]
	0x03E11814 BL 0x1C16CF4
	0x03E11818 MOVZ W8, 0x1
	0x03E1181C STRB W8, [X21 + 0x377]
	0x03E11820 LDRB W8, [X19 + 0x408]
	0x03E11824 CMP W8, W20
	0x03E11828 B.EQ 0x3E118AC
	0x03E1182C ADRP X10, 0x30C000
	0x03E11830 LDR X8, [X19]
	0x03E11834 LDR X10, [X10 + 0x630]
	0x03E11838 LDRH W9, [X8 + 0x12E]
	0x03E1183C LDR X1, [X10]
	0x03E11840 CBZ X9, 0x3E11864
	0x03E11844 LDR X10, [X8 + 0xB0]
	0x03E11848 ADD X10, X10, 0x8
	0x03E1184C LDUR X11, [X10 - 0x8]
	0x03E11850 CMP X11, X1
	0x03E11854 B.EQ 0x3E11874
	0x03E11858 SUBS X9, X9, 0x1
	0x03E1185C ADD X10, X10, 0x10
	0x03E11860 B.NE 0x3E1184C
	0x03E11864 MOVZ W2, 0x2
	0x03E11868 MOV X0, X19
	0x03E1186C BL 0x1C5C788
	0x03E11870 B 0x3E11884
	0x03E11874 LDR W9, [X10]
	0x03E11878 ADD W9, W9, 0x2
	0x03E1187C ADD X8, X8, W9, 0x4, SXTW
	0x03E11880 ADD X0, X8, 0x138
	0x03E11884 LDP X8, X1, [X0]
	0x03E11888 MOV X0, X19
	0x03E1188C BLR X8
	0x03E11890 TBNZ X0, 0x0, 0x3E118A8
	0x03E11894 LDR X8, [X19 + 0x400]
	0x03E11898 CBZ X8, 0x3E118B8
	0x03E1189C LDR X8, [X8 + 0x20]
	0x03E118A0 CBZ X8, 0x3E118B8
	0x03E118A4 STRB W20, [X8 + 0x26]
	0x03E118A8 STRB W20, [X19 + 0x408]
	0x03E118AC LDP X20, X19, [X31 + 0x10]
	0x03E118B0 LDP X30, X21, [X31], #0x20
	0x03E118B4 RET
	0x03E118B8 BL 0x1C16F20
	0x03E118BC LDR W0, [X0 + 0x418]
	0x03E118C0 RET
	0x03E118C4 STR W1, [X0 + 0x418]
	0x03E118C8 RET
	0x03E118CC STP X30, X21, [X31 - 0x20]!
	0x03E118D0 STP X20, X19, [X31 + 0x10]
	0x03E118D4 ADRP X20, 0x5D7000
	0x03E118D8 ADRP X21, 0x2E2000
	0x03E118DC LDRB W8, [X20 + 0x378]
	0x03E118E0 LDR X21, [X21 + 0x970]
	0x03E118E4 MOV X19, X0
	0x03E118E8 TBNZ X8, 0x0, 0x3E11900
	0x03E118EC ADRP X0, 0x2E2000
	0x03E118F0 LDR X0, [X0 + 0x970]
	0x03E118F4 BL 0x1C16CF4
	0x03E118F8 MOVZ W8, 0x1
	0x03E118FC STRB W8, [X20 + 0x378]
	0x03E11900 LDR X0, [X21]
	0x03E11904 LDR W8, [X0 + 0xE0]
	0x03E11908 CBNZ W8, 0x3E11910
	0x03E1190C BL 0x1C16DFC
	0x03E11910 MOV X0, X31
	0x03E11914 BL 0x3C01AB0
	0x03E11918 CMP W0, 0xB
	0x03E1191C B.LE 0x3E11934
	0x03E11920 CMP W0, 0x1F
	0x03E11924 B.EQ 0x3E11944
	0x03E11928 CMP W0, 0x11
	0x03E1192C B.EQ 0x3E11944
	0x03E11930 B 0x3E11954
	0x03E11934 CMP W0, 0x8
	0x03E11938 B.EQ 0x3E11944
	0x03E1193C CMP W0, 0xB
	0x03E11940 B.NE 0x3E11954
	0x03E11944 LDRB W8, [X19 + 0x41C]
	0x03E11948 CMP W8, 0x0
	0x03E1194C CSET W0, NE
	0x03E11950 B 0x3E11958
	0x03E11954 MOVZ W0, 0x1
	0x03E11958 LDP X20, X19, [X31 + 0x10]
	0x03E1195C LDP X30, X21, [X31], #0x20
	0x03E11960 RET
	0x03E11964 STR X30, [X31 - 0x30]!
	0x03E11968 STP X22, X21, [X31 + 0x10]
	0x03E1196C STP X20, X19, [X31 + 0x20]
	0x03E11970 ADRP X21, 0x5D7000
	0x03E11974 ADRP X22, 0x2E2000
	0x03E11978 LDRB W8, [X21 + 0x379]
	0x03E1197C LDR X22, [X22 + 0x970]
	0x03E11980 MOV W20, W1
	0x03E11984 MOV X19, X0
	0x03E11988 TBNZ X8, 0x0, 0x3E119A0
	0x03E1198C ADRP X0, 0x2E2000
	0x03E11990 LDR X0, [X0 + 0x970]
	0x03E11994 BL 0x1C16CF4
	0x03E11998 MOVZ W8, 0x1
	0x03E1199C STRB W8, [X21 + 0x379]
	0x03E119A0 LDR X0, [X22]
	0x03E119A4 LDR W8, [X0 + 0xE0]
	0x03E119A8 CBNZ W8, 0x3E119B0
	0x03E119AC BL 0x1C16DFC
	0x03E119B0 MOV X0, X31
	0x03E119B4 BL 0x3C01AB0
	0x03E119B8 CMP W0, 0xB
	0x03E119BC B.LE 0x3E119D4
	0x03E119C0 CMP W0, 0x11
	0x03E119C4 B.EQ 0x3E119E8
	0x03E119C8 CMP W0, 0x1F
	0x03E119CC B.EQ 0x3E119E8
	0x03E119D0 B 0x3E119E4
	0x03E119D4 CMP W0, 0x8
	0x03E119D8 B.EQ 0x3E119E8
	0x03E119DC CMP W0, 0xB
	0x03E119E0 B.EQ 0x3E119E8
	0x03E119E4 MOVZ W20, 0x1
	0x03E119E8 AND W8, W20, 0x1
	0x03E119EC STRB W8, [X19 + 0x41C]
	0x03E119F0 LDP X20, X19, [X31 + 0x20]
	0x03E119F4 LDP X22, X21, [X31 + 0x10]
	0x03E119F8 LDR X30, [X31], #0x30
	0x03E119FC RET
	0x03E11A00 STR X30, [X31 - 0x10]!
	0x03E11A04 LDRB W8, [X0 + 0x41D]
	0x03E11A08 CBZ W8, 0x3E11A14

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 928
	022 Move [X31+32], X1
	023 NotImplemented "Instruction MRS not yet implemented."
	024 Move X8, [X24+40]
	025 Move X21, 0x5D9000
	026 Move X20, X0
	027 Add X28, X31, 656
	028 Move [X31+920], X8
	029 Move W8, [X21+916]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {48}
	034 Move X0, 0x30D000
	035 Move X0, [X0+3712]
	036 Call 0x1C17CF4
	037 Move X0, 0x30E000
	038 Move X0, [X0+1576]
	039 Call 0x1C17CF4
	040 Move X0, 0x2E4000
	041 Move X0, [X0+1448]
	042 Call 0x1C17CF4
	043 Move X0, 0x30D000
	044 Move X0, [X0+3736]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X21+916], W8
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move X0, X20
	050 Move X1, X31
	051 Move [X31+664], X31
	052 Move [X31+656], X31
	053 Move [X28+144], V0
	054 Move [X28+152], V0
	055 Move [X28+176], V0
	056 Move [X28+184], V0
	057 Move [X28+208], V0
	058 Move [X28+216], V0
	059 Move [X28+236], V0
	060 Move [X28+16], V0
	061 Move [X28+24], V0
	062 Move [X28+48], V0
	063 Move [X28+56], V0
	064 Move [X28+80], V0
	065 Move [X28+88], V0
	066 Move [X28+7], V0
	067 Move [X31+784], W31
	068 Call VisualElement.get_panel, X0
	069 Compare X0, 0
	070 JumpIfEqual {778}
	071 Move X10, 0x30D000
	072 Move X8, [X0]
	073 Move X10, [X10+3712]
	074 Move X21, X0
	075 NotImplemented "Instruction LDRH not yet implemented."
	076 Move X1, [X10]
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move W2, 2
	086 Move X0, X21
	087 Call 0x1C5D788
	088 Move W9, [X10]
	089 Add W9, W9, 2
	090 Add X8, X8, W9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X21
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move S1, 1
	097 Move S0, 1
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X31+56], S0
	100 Move [X31+64], S1
	101 Move S1, 1
	102 Move S0, 1
	103 Move [X31+48], S0
	104 Move [X31+56], S1
	105 Move X21, 0x30D000
	106 Move X21, [X21+3736]
	107 Move X0, [X21]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1C17DFC
	112 Move X0, [X21]
	113 Move X8, [X0+184]
	114 Move V1, [X8+24]
	115 Move V0, [X8+28]
	116 Move [X31+48], S1
	117 Move [X31+56], S0
	118 Move V1, [X8+32]
	119 Move V0, [X8+36]
	120 Move [X31+56], S1
	121 Move [X31+64], S0
	122 Compare X20, 0
	123 JumpIfEqual {778}
	124 Move X10, 0x30D000
	125 Move X8, [X20]
	126 Move X10, [X10+1576]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Move X1, [X10]
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move W2, 4
	138 Move X0, X20
	139 Call 0x1C5D788
	140 Move W9, [X10]
	141 Add W9, W9, 4
	142 Add X8, X8, W9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X22, 0x2E3000
	147 Move X22, [X22+1448]
	148 Move X0, X20
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X8, [X20]
	151 Move X10, 0x30D000
	152 Move W21, W0
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Move X10, [X10+1576]
	155 Move X1, [X10]
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move W2, 7
	165 Move X0, X20
	166 Call 0x1C5D788
	167 Move W9, [X10]
	168 Add W9, W9, 7
	169 Add X8, X8, W9
	170 Add X0, X8, 312
	171 Move X8, [X0]
	172 Move X1, [X0+8]
	173 Move X0, X20
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move X8, [X22]
	176 Move W22, W0
	177 Move W9, [X8+224]
	178 Compare W9, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X8
	181 Call 0x1C17DFC
	182 Move W0, W21
	183 Move W1, W22
	184 Move X2, X31
	185 Call Math.Min, X0, X1
	186 Move X8, [X20]
	187 Move X10, 0x30D000
	188 Move W22, W0
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Move X10, [X10+1576]
	191 Move X1, [X10]
	192 Compare X9, 0
	193 JumpIfEqual {200}
	194 Move X10, [X8+176]
	195 Add X10, X10, 8
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Subtract X9, X9, 1
	199 Add X10, X10, 16
	200 Move W2, 4
	201 Move X0, X20
	202 Call 0x1C5D788
	203 Move W9, [X10]
	204 Add W9, W9, 4
	205 Add X8, X8, W9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X1, [X0+8]
	209 Move X0, X20
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move X8, [X20]
	212 Move X10, 0x30D000
	213 Move W21, W0
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move X10, [X10+1576]
	216 Move X1, [X10]
	217 Compare X9, 0
	218 JumpIfEqual {225}
	219 Move X10, [X8+176]
	220 Add X10, X10, 8
	221 NotImplemented "Instruction LDUR not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Subtract X9, X9, 1
	224 Add X10, X10, 16
	225 Move W2, 7
	226 Move X0, X20
	227 Call 0x1C5D788
	228 Move W9, [X10]
	229 Add W9, W9, 7
	230 Add X8, X8, W9
	231 Add X0, X8, 312
	232 Move X8, [X0]
	233 Move X1, [X0+8]
	234 Move X0, X20
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move W1, W0
	237 Move W0, W21
	238 Move X2, X31
	239 Call Math.Max, X0, X1
	240 Move X8, [X20+984]
	241 Compare X8, 0
	242 JumpIfEqual {778}
	243 Move W19, W0
	244 Move W3, 1
	245 Move X0, X8
	246 Move W1, W22
	247 Move W2, W31
	248 Move X4, X31
	249 Call TextHandle.GetCursorPositionFromStringIndexUsingLineHeight, X0, X1, X2, X3
	250 Move X0, [X20+984]
	251 Compare X0, 0
	252 JumpIfEqual {778}
	253 Move W3, 1
	254 Move W1, W19
	255 Move W2, W31
	256 Move X4, X31
	257 Move V9, V0
	258 Move V8, V1
	259 Call TextHandle.GetCursorPositionFromStringIndexUsingLineHeight, X0, X1, X2, X3
	260 Move X0, [X20+984]
	261 Compare X0, 0
	262 JumpIfEqual {778}
	263 Move W1, W22
	264 Move X2, X31
	265 Move V13, V0
	266 Call TextHandle.GetLineNumber, X0, X1
	267 Move X8, [X20+984]
	268 Compare X8, 0
	269 JumpIfEqual {778}
	270 Move W22, W0
	271 Move X0, X8
	272 Move W1, W19
	273 Move X2, X31
	274 Call TextHandle.GetLineNumber, X0, X1
	275 Move X8, [X20+984]
	276 Compare X8, 0
	277 JumpIfEqual {778}
	278 Move W23, W0
	279 Move X0, X8
	280 Move W1, W22
	281 Move X2, X31
	282 Move [X31+16], X24
	283 Call TextHandle.GetLineHeight, X0, X1
	284 Move X0, X20
	285 Move X1, X31
	286 Move [X31+44], S0
	287 Call VisualElement.get_contentRect, X0
	288 Move X8, [X20+1040]
	289 Move [X31+24], S1
	290 Move [X31+32], S0
	291 Compare X8, 0
	292 JumpIfEqual {495}
	293 Move W8, [X20+1052]
	294 Compare W8, 0
	295 JumpIfEqual {495}
	296 Move X0, [X20+984]
	297 Compare X0, 0
	298 JumpIfEqual {778}
	299 Move X1, X31
	300 Call TextHandle.get_textInfo, X0
	301 Move X8, [X20]
	302 Move X10, 0x30D000
	303 Move X24, X0
	304 NotImplemented "Instruction LDRH not yet implemented."
	305 Move X10, [X10+1576]
	306 Move X1, [X10]
	307 Compare X9, 0
	308 JumpIfEqual {315}
	309 Move X10, [X8+176]
	310 Add X10, X10, 8
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Subtract X9, X9, 1
	314 Add X10, X10, 16
	315 Move W2, 7
	316 Move X0, X20
	317 Call 0x1C5D788
	318 Move W9, [X10]
	319 Add W9, W9, 7
	320 Add X8, X8, W9
	321 Add X0, X8, 312
	322 Move X8, [X0]
	323 Move X1, [X0+8]
	324 Move X0, X20
	325 NotImplemented "Instruction BLR not yet implemented."
	326 Move X8, [X20]
	327 Move X10, 0x30D000
	328 Move W25, W0
	329 NotImplemented "Instruction LDRH not yet implemented."
	330 Move X10, [X10+1576]
	331 Move X1, [X10]
	332 Compare X9, 0
	333 JumpIfEqual {340}
	334 Move X10, [X8+176]
	335 Add X10, X10, 8
	336 NotImplemented "Instruction LDUR not yet implemented."
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Subtract X9, X9, 1
	339 Add X10, X10, 16
	340 Move W2, 4
	341 Move X0, X20
	342 Call 0x1C5D788
	343 Move W9, [X10]
	344 Add W9, W9, 4
	345 Add X8, X8, W9
	346 Add X0, X8, 312
	347 Move X8, [X0]
	348 Move X1, [X0+8]
	349 Move X0, X20
	350 NotImplemented "Instruction BLR not yet implemented."
	351 Compare X24, 0
	352 JumpIfEqual {778}
	353 Move X9, 0x30D000
	354 Move X8, [X20]
	355 Move X21, [X24+48]
	356 Move X9, [X9+1576]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X1, [X9]
	359 NotImplemented "Instruction LDRH not yet implemented."
	360 Compare W9, 0
	361 JumpIfEqual {368}
	362 Move X10, [X8+176]
	363 Add X10, X10, 8
	364 NotImplemented "Instruction LDUR not yet implemented."
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Subtract X9, X9, 1
	367 Add X10, X10, 16
	368 Move W2, 7
	369 Compare W9, 0
	370 JumpIfEqual {377}
	371 Move X10, [X8+176]
	372 Add X10, X10, 8
	373 NotImplemented "Instruction LDUR not yet implemented."
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Subtract X9, X9, 1
	376 Add X10, X10, 16
	377 Move W2, 4
	378 Move X0, X20
	379 Call 0x1C5D788
	380 Move W9, [X10]
	381 Add W9, W9, 7
	382 Move W9, [X10]
	383 Add W9, W9, 4
	384 Add X8, X8, W9
	385 Add X0, X8, 312
	386 Move X8, [X0]
	387 Move X1, [X0+8]
	388 Move X0, X20
	389 NotImplemented "Instruction BLR not yet implemented."
	390 Compare X21, 0
	391 JumpIfEqual {778}
	392 Move W8, [X21+24]
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X8, [X20]
	395 Move W9, 392
	396 NotImplemented "Instruction SMADDL not yet implemented."
	397 Move X10, 0x30D000
	398 Move W24, [X9+36]
	399 NotImplemented "Instruction LDRH not yet implemented."
	400 Move X10, [X10+1576]
	401 Move X1, [X10]
	402 Compare X9, 0
	403 JumpIfEqual {410}
	404 Move X10, [X8+176]
	405 Add X10, X10, 8
	406 NotImplemented "Instruction LDUR not yet implemented."
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Subtract X9, X9, 1
	409 Add X10, X10, 16
	410 Move W2, 7
	411 Move X0, X20
	412 Call 0x1C5D788
	413 Move W9, [X10]
	414 Add W9, W9, 7
	415 Add X8, X8, W9
	416 Add X0, X8, 312
	417 Move X8, [X0]
	418 Move X1, [X0+8]
	419 Move X0, X20
	420 NotImplemented "Instruction BLR not yet implemented."
	421 Move X8, [X20]
	422 Move X10, 0x30D000
	423 Move W25, W0
	424 NotImplemented "Instruction LDRH not yet implemented."
	425 Move X10, [X10+1576]
	426 Move X1, [X10]
	427 Compare X9, 0
	428 JumpIfEqual {435}
	429 Move X10, [X8+176]
	430 Add X10, X10, 8
	431 NotImplemented "Instruction LDUR not yet implemented."
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Subtract X9, X9, 1
	434 Add X10, X10, 16
	435 Move W2, 4
	436 Move X0, X20
	437 Call 0x1C5D788
	438 Move W9, [X10]
	439 Add W9, W9, 4
	440 Add X8, X8, W9
	441 Add X0, X8, 312
	442 Move X8, [X0]
	443 Move X1, [X0+8]
	444 Move X0, X20
	445 NotImplemented "Instruction BLR not yet implemented."
	446 Move X9, 0x30D000
	447 Move X8, [X20]
	448 Move X9, [X9+1576]
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move X1, [X9]
	451 NotImplemented "Instruction LDRH not yet implemented."
	452 Compare W9, 0
	453 JumpIfEqual {460}
	454 Move X10, [X8+176]
	455 Add X10, X10, 8
	456 NotImplemented "Instruction LDUR not yet implemented."
	457 NotImplemented "Instruction CMP not yet implemented."
	458 Subtract X9, X9, 1
	459 Add X10, X10, 16
	460 Move W2, 4
	461 Compare W9, 0
	462 JumpIfEqual {469}
	463 Move X10, [X8+176]
	464 Add X10, X10, 8
	465 NotImplemented "Instruction LDUR not yet implemented."
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Subtract X9, X9, 1
	468 Add X10, X10, 16
	469 Move W2, 7
	470 Move X0, X20
	471 Call 0x1C5D788
	472 Move W9, [X10]
	473 Add W9, W9, 4
	474 Move W9, [X10]
	475 Add W9, W9, 7
	476 Add X8, X8, W9
	477 Add X0, X8, 312
	478 Move X8, [X0]
	479 Move X1, [X0+8]
	480 Move X0, X20
	481 NotImplemented "Instruction BLR not yet implemented."
	482 Move X25, [X20+1040]
	483 Subtract W2, W0, W24
	484 Add X0, X31, 648
	485 Move W1, W24
	486 Move X3, X31
	487 Move [X31+648], X31
	488 Call RangeInt..ctor, X0, X1, X2
	489 Compare X25, 0
	490 JumpIfEqual {778}
	491 Move X1, [X31+648]
	492 Move X0, X25
	493 Move X2, X31
	494 Call TouchScreenKeyboard.set_selection, X0, X1
	495 NotImplemented "Instruction CMP not yet implemented."
	496 NotImplemented "Instruction MOVI not yet implemented."
	497 Move [X28+144], V0
	498 Move [X28+152], V0
	499 Move [X28+176], V0
	500 Move [X28+184], V0
	501 Move [X28+208], V0
	502 Move [X28+216], V0
	503 Move [X28+236], V0
	504 Move [X28+16], V0
	505 Move [X28+24], V0
	506 Move [X28+48], V0
	507 Move [X28+56], V0
	508 Move [X28+80], V0
	509 Move [X28+88], V0
	510 Move [X28+7], V0
	511 Move [X31+664], X31
	512 Move [X31+656], X31
	513 Move [X31+784], W31
	514 Move X8, [X20]
	515 Move X10, 0x30D000
	516 Move S0, [X31+24]
	517 Move S1, [X31+28]
	518 NotImplemented "Instruction LDRH not yet implemented."
	519 Move X10, [X10+1576]
	520 Move V2, [X31+44]
	521 Add S14, S9, S1
	522 Add S0, S8, S0
	523 Move X1, [X10]
	524 Add S1, S13, S1
	525 Subtract S15, S0, S2
	526 Subtract S13, S1, S14
	527 Compare X9, 0
	528 JumpIfEqual {535}
	529 Move X10, [X8+176]
	530 Add X10, X10, 8
	531 NotImplemented "Instruction LDUR not yet implemented."
	532 NotImplemented "Instruction CMP not yet implemented."
	533 Subtract X9, X9, 1
	534 Add X10, X10, 16
	535 Move W2, 9
	536 Move X0, X20
	537 Call 0x1C5D788
	538 Move [X31+64], S9
	539 Move [X31+72], S8
	540 Move V12, [X31+44]
	541 Add X8, X31, 72
	542 Move X27, W23
	543 Add X21, X8, 16
	544 Add X24, X8, 48
	545 Add X25, X8, 172
	546 Move W29, 96
	547 Move W26, W22
	548 NotImplemented "Instruction CMP not yet implemented."
	549 Move X0, X20
	550 Move W1, W22
	551 Call TextElement.GetLastCharacterAt, X0, X1
	552 Move X8, [X20+984]
	553 Compare X8, 0
	554 JumpIfEqual {778}
	555 Move S11, [X31+64]
	556 Move S8, [X31+68]
	557 Move X0, [X20+984]
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Compare X0, 0
	560 JumpIfEqual {778}
	561 Move X1, X31
	562 Call TextHandle.get_textInfo, X0
	563 Compare X0, 0
	564 JumpIfEqual {778}
	565 Move X8, [X0+72]
	566 Compare X8, 0
	567 JumpIfEqual {778}
	568 Move W9, [X8+24]
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Move X0, [X20+984]
	571 Compare X0, 0
	572 JumpIfEqual {778}
	573 NotImplemented "Instruction MADD not yet implemented."
	574 Move W1, [X8+56]
	575 Move W3, 1
	576 Move W2, W31
	577 Move X4, X31
	578 Call TextHandle.GetCursorPositionFromStringIndexUsingLineHeight, X0, X1, X2, X3
	579 Move X8, [X20+984]
	580 Compare X8, 0
	581 JumpIfEqual {778}
	582 Move V11, V0
	583 Move V8, V1
	584 Move W1, W19
	585 Compare X0, 0
	586 JumpIfEqual {778}
	587 Move X1, X31
	588 Call TextHandle.get_textInfo, X0
	589 Compare X0, 0
	590 JumpIfEqual {778}
	591 Move X8, [X0+72]
	592 Compare X8, 0
	593 JumpIfEqual {778}
	594 Move W9, [X8+24]
	595 NotImplemented "Instruction CMP not yet implemented."
	596 Move X0, [X20+984]
	597 Compare X0, 0
	598 JumpIfEqual {778}
	599 NotImplemented "Instruction SMADDL not yet implemented."
	600 Move W1, [X8+56]
	601 Move W3, 1
	602 Move W2, W31
	603 Move X4, X31
	604 Call TextHandle.GetCursorPositionFromStringIndexUsingLineHeight, X0, X1, X2, X3
	605 Move X0, X20
	606 Move W1, W26
	607 Move V11, V0
	608 Move V8, V1
	609 Call TextElement.GetLastCharacterAt, X0, X1
	610 Move X8, [X20+984]
	611 Compare X8, 0
	612 JumpIfEqual {778}
	613 Move W1, W0
	614 Move W2, 1
	615 Move W3, 1
	616 Move X0, X8
	617 Move X4, X31
	618 Call TextHandle.GetCursorPositionFromStringIndexUsingLineHeight, X0, X1, X2, X3
	619 NotImplemented "Instruction MOVI not yet implemented."
	620 Move [X31+664], X31
	621 Move [X31+656], X31
	622 Move [X28+144], V1
	623 Move [X28+152], V1
	624 Move [X28+176], V1
	625 Move [X28+184], V1
	626 Move [X28+208], V1
	627 Move [X28+216], V1
	628 Move [X28+236], V1
	629 Move [X28+16], V1
	630 Move [X28+24], V1
	631 Move [X28+48], V1
	632 Move [X28+56], V1
	633 Move [X28+80], V1
	634 Move [X28+88], V1
	635 Move [X28+7], V1
	636 Move [X31+784], W31
	637 Move X8, [X20]
	638 Move X10, 0x30D000
	639 Move V13, V0
	640 NotImplemented "Instruction LDRH not yet implemented."
	641 Move X10, [X10+1576]
	642 Move X1, [X10]
	643 Compare X9, 0
	644 JumpIfEqual {651}
	645 Move X10, [X8+176]
	646 Add X10, X10, 8
	647 NotImplemented "Instruction LDUR not yet implemented."
	648 NotImplemented "Instruction CMP not yet implemented."
	649 Subtract X9, X9, 1
	650 Add X10, X10, 16
	651 Move W2, 9
	652 Move X0, X20
	653 Call 0x1C5D788
	654 Move W9, [X10]
	655 Add W9, W9, 9
	656 Add X8, X8, W9
	657 Add X0, X8, 312
	658 Move S1, [X31+24]
	659 Move S0, [X31+28]
	660 Move X8, [X0]
	661 Move X1, [X0+8]
	662 Move X0, X20
	663 Add S11, S0, S11
	664 Add S8, S1, S8
	665 Add S0, S0, S13
	666 Move [X31+68], S8
	667 Subtract S8, S8, S12
	668 Subtract S9, S0, S11
	669 NotImplemented "Instruction BLR not yet implemented."
	670 Move V13, V0
	671 Move V0, [X28]
	672 Add X1, X31, 800
	673 Move W2, 108
	674 Move X0, X24
	675 Move V14, V1
	676 Move V15, V2
	677 Move V10, V3
	678 Move [X21], V0
	679 Call 0x3EB2AC0
	680 Add X1, X31, 672
	681 Move W2, 116
	682 Move X0, X25
	683 Call 0x3EB2AC0
	684 Move V4, [X31+48]
	685 Move V0, [X31+52]
	686 Move X0, [X31+32]
	687 Add X1, X31, 72
	688 Move X2, X31
	689 Move [X31+228], S4
	690 Move [X31+236], S0
	691 Move V4, [X31+56]
	692 Move V0, [X31+60]
	693 Move [X31+64], S11
	694 Move [X31+72], S11
	695 Move [X31+80], S8
	696 Move [X31+80], S9
	697 Move [X31+88], S12
	698 Move [X31+104], S13
	699 Move [X31+112], S14
	700 Move [X31+112], S15
	701 Move [X31+120], S10
	702 Move [X31+236], S4
	703 Move [X31+244], S0
	704 Call MeshGenerationContextUtils.Rectangle, X0, X1
	705 Add W26, W26, 1
	706 NotImplemented "Instruction CMP not yet implemented."
	707 Move W9, [X10]
	708 Add W9, W9, 9
	709 Add X8, X8, W9
	710 Add X0, X8, 312
	711 Move X8, [X0]
	712 Move X1, [X0+8]
	713 Move X0, X20
	714 NotImplemented "Instruction BLR not yet implemented."
	715 Move V9, V0
	716 Move V0, [X28]
	717 Add X20, X31, 360
	718 Add X8, X31, 121
	719 Add X0, X20, 48
	720 Add X1, X31, 800
	721 Move W2, 108
	722 Move V10, V1
	723 Move V11, V2
	724 Move V12, V3
	725 Move [X8+255], V0
	726 Call 0x3EB2AC0
	727 Add X0, X20, 172
	728 Add X1, X31, 672
	729 Move W2, 116
	730 Call 0x3EB2AC0
	731 Move V0, [X31+44]
	732 Move X0, [X31+32]
	733 Add X1, X31, 360
	734 Move X2, X31
	735 Move [X31+372], S0
	736 Move V0, [X31+48]
	737 Move [X31+360], S14
	738 Move [X31+364], S15
	739 Move [X31+368], S13
	740 Move [X31+516], S0
	741 Move V0, [X31+52]
	742 Move [X31+392], S9
	743 Move [X31+396], S10
	744 Move [X31+400], S11
	745 Move [X31+520], S0
	746 Move V0, [X31+56]
	747 Move [X31+404], S12
	748 Move [X31+524], S0
	749 Move V0, [X31+60]
	750 Move [X31+528], S0
	751 Call MeshGenerationContextUtils.Rectangle, X0, X1
	752 Move X8, [X31+16]
	753 Move X8, [X8+40]
	754 Move X9, [X31+920]
	755 NotImplemented "Instruction CMP not yet implemented."
	756 Add X31, X31, 928
	757 Move X20, [X31+144]
	758 Move X19, [X31+152]
	759 Move X22, [X31+128]
	760 Move X21, [X31+136]
	761 Move X24, [X31+112]
	762 Move X23, [X31+120]
	763 Move X26, [X31+96]
	764 Move X25, [X31+104]
	765 Move X28, [X31+80]
	766 Move X27, [X31+88]
	767 Move X29, [X31+64]
	768 Move X30, [X31+72]
	769 Move D9, [X31+48]
	770 Move D8, [X31+56]
	771 Move D11, [X31+32]
	772 Move D10, [X31+40]
	773 Move D13, [X31+16]
	774 Move D12, [X31+24]
	775 Move D15, [X31+160]
	776 Move D14, [X31+168]
	777 Return 
	778 Call 0x1C17F20
	779 Call 0x1C17F28
	780 Call 0x3EB2B20

Method: System.Void DrawCaret(UnityEngine.UIElements.MeshGenerationContext mgc)

Disassembly:
	0x03E11A0C MOVZ W8, 0x1
	0x03E11A10 B 0x3E11A20
	0x03E11A14 MOV X1, X31
	0x03E11A18 BL 0x3DEC00C
	0x03E11A1C EOR W8, W0, 0x1
	0x03E11A20 AND W0, W8, 0x1
	0x03E11A24 LDR X30, [X31], #0x10
	0x03E11A28 RET
	0x03E11A2C STR X30, [X31 - 0x30]!
	0x03E11A30 STP X22, X21, [X31 + 0x10]
	0x03E11A34 STP X20, X19, [X31 + 0x20]
	0x03E11A38 ADRP X22, 0x5D7000
	0x03E11A3C LDRB W8, [X22 + 0x37A]
	0x03E11A40 MOV W20, W1
	0x03E11A44 MOV X19, X0
	0x03E11A48 AND W21, W1, 0x1
	0x03E11A4C TBNZ X8, 0x0, 0x3E11A64
	0x03E11A50 ADRP X0, 0x359000
	0x03E11A54 LDR X0, [X0 + 0x4F8]
	0x03E11A58 BL 0x1C16CF4
	0x03E11A5C MOVZ W8, 0x1
	0x03E11A60 STRB W8, [X22 + 0x37A]
	0x03E11A64 LDRB W8, [X19 + 0x41D]
	0x03E11A68 CMP W8, W21
	0x03E11A6C B.EQ 0x3E11AA0
	0x03E11A70 TBZ X20, 0x0, 0x3E11A7C
	0x03E11A74 MOV X20, X31
	0x03E11A78 B 0x3E11A98
	0x03E11A7C ADRP X8, 0x359000
	0x03E11A80 LDR X8, [X8 + 0x4F8]
	0x03E11A84 LDR X0, [X8]
	0x03E11A88 BL 0x1C16F10
	0x03E11A8C MOV X1, X19
	0x03E11A90 MOV X20, X0
	0x03E11A94 BL 0x3E0ABBC
	0x03E11A98 STR X20, [X19 + 0x400]
	0x03E11A9C STRB W21, [X19 + 0x41D]
	0x03E11AA0 LDP X20, X19, [X31 + 0x20]
	0x03E11AA4 LDP X22, X21, [X31 + 0x10]
	0x03E11AA8 LDR X30, [X31], #0x30
	0x03E11AAC RET
	0x03E11AB0 STR X30, [X31 - 0x30]!
	0x03E11AB4 STP X22, X21, [X31 + 0x10]
	0x03E11AB8 STP X20, X19, [X31 + 0x20]
	0x03E11ABC ADRP X22, 0x5D7000
	0x03E11AC0 ADRP X21, 0x359000
	0x03E11AC4 LDRB W8, [X22 + 0x37B]
	0x03E11AC8 LDR X21, [X21 + 0x500]
	0x03E11ACC MOV X19, X1
	0x03E11AD0 MOV X20, X0
	0x03E11AD4 TBNZ X8, 0x0, 0x3E11AF8
	0x03E11AD8 ADRP X0, 0x359000
	0x03E11ADC LDR X0, [X0 + 0x500]
	0x03E11AE0 BL 0x1C16CF4
	0x03E11AE4 ADRP X0, 0x2E2000
	0x03E11AE8 LDR X0, [X0 + 0xE00]
	0x03E11AEC BL 0x1C16CF4
	0x03E11AF0 MOVZ W8, 0x1
	0x03E11AF4 STRB W8, [X22 + 0x37B]
	0x03E11AF8 LDR X1, [X21]
	0x03E11AFC ADRP X22, 0x2E2000
	0x03E11B00 LDR X22, [X22 + 0xE00]
	0x03E11B04 MOV X0, X19
	0x03E11B08 BL 0x2900170
	0x03E11B0C MOV X19, X0
	0x03E11B10 CBZ X0, 0x3E11BA8
	0x03E11B14 MOV X0, X19
	0x03E11B18 MOV X1, X20
	0x03E11B1C MOV X2, X31
	0x03E11B20 BL 0x3D9C6C8
	0x03E11B24 LDR X8, [X20]
	0x03E11B28 LDP X9, X2, [X8 + 0x198]
	0x03E11B2C MOV X0, X20
	0x03E11B30 MOV X1, X19
	0x03E11B34 BLR X9
	0x03E11B38 MOV X20, X31
	0x03E11B3C LDR X8, [X19]
	0x03E11B40 LDR X1, [X22]
	0x03E11B44 LDRH W9, [X8 + 0x12E]
	0x03E11B48 CBZ X9, 0x3E11B6C
	0x03E11B4C LDR X10, [X8 + 0xB0]
	0x03E11B50 ADD X10, X10, 0x8
	0x03E11B54 LDUR X11, [X10 - 0x8]
	0x03E11B58 CMP X11, X1
	0x03E11B5C B.EQ 0x3E11B7C
	0x03E11B60 SUBS X9, X9, 0x1
	0x03E11B64 ADD X10, X10, 0x10
	0x03E11B68 B.NE 0x3E11B54
	0x03E11B6C MOV X0, X19
	0x03E11B70 MOV W2, W31
	0x03E11B74 BL 0x1C5C788
	0x03E11B78 B 0x3E11B88
	0x03E11B7C LDRSW X9, [X10]
	0x03E11B80 ADD X8, X8, X9, 0x4, LSL
	0x03E11B84 ADD X0, X8, 0x138
	0x03E11B88 LDP X8, X1, [X0]
	0x03E11B8C MOV X0, X19
	0x03E11B90 BLR X8
	0x03E11B94 CBNZ X20, 0x3E11BAC
	0x03E11B98 LDP X20, X19, [X31 + 0x20]
	0x03E11B9C LDP X22, X21, [X31 + 0x10]
	0x03E11BA0 LDR X30, [X31], #0x30
	0x03E11BA4 RET
	0x03E11BA8 BL 0x1C16F20
	0x03E11BAC MOV X0, X20
	0x03E11BB0 BL 0x1C16F18
	0x03E11BB4 B 0x3E11BB8
	0x03E11BB8 MOV X21, X0
	0x03E11BBC CMP W1, 0x1
	0x03E11BC0 B.NE 0x3E11BDC
	0x03E11BC4 MOV X0, X21
	0x03E11BC8 BL 0x3EB1AD0
	0x03E11BCC LDR X20, [X0]
	0x03E11BD0 BL 0x3EB1AE0
	0x03E11BD4 CBNZ X19, 0x3E11B3C
	0x03E11BD8 B 0x3E11B94
	0x03E11BDC MOV X20, X31
	0x03E11BE0 B 0x3E11BE8
	0x03E11BE4 MOV X21, X0
	0x03E11BE8 CBZ X19, 0x3E11C44
	0x03E11BEC LDR X8, [X19]
	0x03E11BF0 LDR X1, [X22]
	0x03E11BF4 LDRH W9, [X8 + 0x12E]
	0x03E11BF8 CBZ X9, 0x3E11C1C
	0x03E11BFC LDR X10, [X8 + 0xB0]
	0x03E11C00 ADD X10, X10, 0x8
	0x03E11C04 LDUR X11, [X10 - 0x8]
	0x03E11C08 CMP X11, X1
	0x03E11C0C B.EQ 0x3E11C2C
	0x03E11C10 SUBS X9, X9, 0x1
	0x03E11C14 ADD X10, X10, 0x10
	0x03E11C18 B.NE 0x3E11C04
	0x03E11C1C MOV X0, X19
	0x03E11C20 MOV W2, W31
	0x03E11C24 BL 0x1C5C788
	0x03E11C28 B 0x3E11C38
	0x03E11C2C LDRSW X9, [X10]
	0x03E11C30 ADD X8, X8, X9, 0x4, LSL
	0x03E11C34 ADD X0, X8, 0x138
	0x03E11C38 LDP X8, X1, [X0]
	0x03E11C3C MOV X0, X19
	0x03E11C40 BLR X8
	0x03E11C44 CBNZ X20, 0x3E11C50
	0x03E11C48 MOV X0, X21
	0x03E11C4C BL 0x1D2C690
	0x03E11C50 MOV X0, X20
	0x03E11C54 BL 0x1C16F18
	0x03E11C58 BL 0x1990590
	0x03E11C5C STP X30, X21, [X31 - 0x20]!
	0x03E11C60 STP X20, X19, [X31 + 0x10]
	0x03E11C64 ADRP X20, 0x5D7000
	0x03E11C68 ADRP X21, 0x355000
	0x03E11C6C LDRB W8, [X20 + 0x37C]
	0x03E11C70 LDR X21, [X21 + 0x9D8]
	0x03E11C74 MOV X19, X0
	0x03E11C78 TBNZ X8, 0x0, 0x3E11C90
	0x03E11C7C ADRP X0, 0x355000
	0x03E11C80 LDR X0, [X0 + 0x9D8]
	0x03E11C84 BL 0x1C16CF4
	0x03E11C88 MOVZ W8, 0x1
	0x03E11C8C STRB W8, [X20 + 0x37C]
	0x03E11C90 LDR X1, [X21]
	0x03E11C94 MOV X0, X19
	0x03E11C98 LDP X20, X19, [X31 + 0x10]
	0x03E11C9C LDP X30, X21, [X31], #0x20
	0x03E11CA0 B 0x3E11AB0
	0x03E11CA4 STP X30, X21, [X31 - 0x20]!
	0x03E11CA8 STP X20, X19, [X31 + 0x10]
	0x03E11CAC ADRP X20, 0x5D7000
	0x03E11CB0 ADRP X21, 0x355000
	0x03E11CB4 LDRB W8, [X20 + 0x37D]
	0x03E11CB8 LDR X21, [X21 + 0x9C8]
	0x03E11CBC MOV X19, X0
	0x03E11CC0 TBNZ X8, 0x0, 0x3E11CD8
	0x03E11CC4 ADRP X0, 0x355000
	0x03E11CC8 LDR X0, [X0 + 0x9C8]
	0x03E11CCC BL 0x1C16CF4
	0x03E11CD0 MOVZ W8, 0x1
	0x03E11CD4 STRB W8, [X20 + 0x37D]
	0x03E11CD8 LDR X1, [X21]
	0x03E11CDC MOV X0, X19
	0x03E11CE0 LDP X20, X19, [X31 + 0x10]
	0x03E11CE4 LDP X30, X21, [X31], #0x20
	0x03E11CE8 B 0x3E11AB0
	0x03E11CEC STP X30, X21, [X31 - 0x20]!
	0x03E11CF0 STP X20, X19, [X31 + 0x10]
	0x03E11CF4 ADRP X20, 0x5D7000
	0x03E11CF8 ADRP X21, 0x355000
	0x03E11CFC LDRB W8, [X20 + 0x37E]
	0x03E11D00 LDR X21, [X21 + 0x9D0]
	0x03E11D04 MOV X19, X0
	0x03E11D08 TBNZ X8, 0x0, 0x3E11D20
	0x03E11D0C ADRP X0, 0x355000
	0x03E11D10 LDR X0, [X0 + 0x9D0]
	0x03E11D14 BL 0x1C16CF4
	0x03E11D18 MOVZ W8, 0x1
	0x03E11D1C STRB W8, [X20 + 0x37E]
	0x03E11D20 LDR X1, [X21]
	0x03E11D24 MOV X0, X19
	0x03E11D28 LDP X20, X19, [X31 + 0x10]
	0x03E11D2C LDP X30, X21, [X31], #0x20
	0x03E11D30 B 0x3E11AB0
	0x03E11D34 STP X30, X25, [X31 - 0x40]!
	0x03E11D38 STP X24, X23, [X31 + 0x10]
	0x03E11D3C STP X22, X21, [X31 + 0x20]
	0x03E11D40 STP X20, X19, [X31 + 0x30]
	0x03E11D44 ADRP X21, 0x5D7000
	0x03E11D48 LDRB W8, [X21 + 0x37F]
	0x03E11D4C MOV X20, X1
	0x03E11D50 MOV X19, X0
	0x03E11D54 TBNZ X8, 0x0, 0x3E11DFC
	0x03E11D58 ADRP X0, 0x355000
	0x03E11D5C LDR X0, [X0 + 0x768]
	0x03E11D60 BL 0x1C16CF4
	0x03E11D64 ADRP X0, 0x355000
	0x03E11D68 LDR X0, [X0 + 0x770]
	0x03E11D6C BL 0x1C16CF4
	0x03E11D70 ADRP X0, 0x30C000
	0x03E11D74 LDR X0, [X0 + 0x630]
	0x03E11D78 BL 0x1C16CF4
	0x03E11D7C ADRP X0, 0x359000
	0x03E11D80 LDR X0, [X0 + 0x508]
	0x03E11D84 BL 0x1C16CF4
	0x03E11D88 ADRP X0, 0x359000
	0x03E11D8C LDR X0, [X0 + 0x510]
	0x03E11D90 BL 0x1C16CF4
	0x03E11D94 ADRP X0, 0x359000
	0x03E11D98 LDR X0, [X0 + 0x518]
	0x03E11D9C BL 0x1C16CF4
	0x03E11DA0 ADRP X0, 0x359000
	0x03E11DA4 LDR X0, [X0 + 0x520]
	0x03E11DA8 BL 0x1C16CF4
	0x03E11DAC ADRP X0, 0x359000
	0x03E11DB0 LDR X0, [X0 + 0x528]
	0x03E11DB4 BL 0x1C16CF4
	0x03E11DB8 ADRP X0, 0x359000
	0x03E11DBC LDR X0, [X0 + 0x530]
	0x03E11DC0 BL 0x1C16CF4
	0x03E11DC4 ADRP X0, 0x30B000
	0x03E11DC8 LDR X0, [X0 + 0xEC8]
	0x03E11DCC BL 0x1C16CF4
	0x03E11DD0 ADRP X0, 0x355000
	0x03E11DD4 LDR X0, [X0 + 0x9C8]
	0x03E11DD8 BL 0x1C16CF4
	0x03E11DDC ADRP X0, 0x355000
	0x03E11DE0 LDR X0, [X0 + 0x9D0]
	0x03E11DE4 BL 0x1C16CF4
	0x03E11DE8 ADRP X0, 0x355000
	0x03E11DEC LDR X0, [X0 + 0x9D8]
	0x03E11DF0 BL 0x1C16CF4
	0x03E11DF4 MOVZ W8, 0x1
	0x03E11DF8 STRB W8, [X21 + 0x37F]
	0x03E11DFC CBZ X20, 0x3E11E44
	0x03E11E00 MOV X0, X20
	0x03E11E04 MOV X1, X31
	0x03E11E08 BL 0x3D9C848
	0x03E11E0C CBZ X0, 0x3E11E44
	0x03E11E10 ADRP X8, 0x30B000
	0x03E11E14 LDR X8, [X8 + 0xEC8]
	0x03E11E18 LDR X9, [X0]
	0x03E11E1C LDR X8, [X8]
	0x03E11E20 LDRB W11, [X9 + 0x130]
	0x03E11E24 LDRB W10, [X8 + 0x130]
	0x03E11E28 CMP W11, W10
	0x03E11E2C B.CC 0x3E11E44
	0x03E11E30 LDR X9, [X9 + 0xC8]
	0x03E11E34 ADD X9, X9, X10, 0x3, LSL
	0x03E11E38 LDUR X9, [X9 - 0x8]
	0x03E11E3C CMP X9, X8
	0x03E11E40 B.EQ 0x3E11E58
	0x03E11E44 LDP X20, X19, [X31 + 0x30]
	0x03E11E48 LDP X22, X21, [X31 + 0x20]
	0x03E11E4C LDP X24, X23, [X31 + 0x10]
	0x03E11E50 LDP X30, X25, [X31], #0x40
	0x03E11E54 RET

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Subtract X31, X31, 576
	018 NotImplemented "Instruction MRS not yet implemented."
	019 Move X8, [X22+40]
	020 Move X21, 0x5D8000
	021 Move X19, X1
	022 Move X20, X0
	023 Move [X31+568], X8
	024 Move W8, [X21+917]
	025 Add X24, X31, 448
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {41}
	030 Move X0, 0x30C000
	031 Move X0, [X0+3712]
	032 Call 0x1C17CF4
	033 Move X0, 0x30D000
	034 Move X0, [X0+1576]
	035 Call 0x1C17CF4
	036 Move X0, 0x30C000
	037 Move X0, [X0+3736]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+917], W8
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move X0, X20
	043 Move X1, X31
	044 Move [X31+304], X31
	045 Move [X31+312], X31
	046 Move [X31+448], V0
	047 Move [X31+456], V0
	048 Move [X31+480], V0
	049 Move [X31+488], V0
	050 Move [X31+512], V0
	051 Move [X31+520], V0
	052 Move [X24+92], V0
	053 Call VisualElement.get_panel, X0
	054 Compare X0, 0
	055 JumpIfEqual {303}
	056 Move X10, 0x30C000
	057 Move X8, [X0]
	058 Move X10, [X10+3712]
	059 Move X21, X0
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 2
	071 Move X0, X21
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 2
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X1, [X0+8]
	079 Move X23, 0x30D000
	080 Move X23, [X23+1576]
	081 Move X0, X21
	082 NotImplemented "Instruction BLR not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X21, 0x30C000
	085 Move X21, [X21+3736]
	086 Move X0, [X21]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X21]
	092 Move X8, [X0+184]
	093 Move D9, [X8+24]
	094 Move D10, [X8+32]
	095 Move V9, 0
	096 Move V10, V9
	097 Move X8, [X20]
	098 Move X21, [X20+984]
	099 Move X1, [X23]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move W2, 4
	110 Move X0, X20
	111 Call 0x1C5D788
	112 Move W9, [X10]
	113 Add W9, W9, 4
	114 Add X8, X8, W9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X20
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X21, 0
	121 JumpIfEqual {303}
	122 Move W1, W0
	123 Move X0, X21
	124 Move X2, X31
	125 Call TextHandle.GetCharacterHeightFromIndex, X0, X1
	126 Move X8, [X20]
	127 Move X1, [X23]
	128 Move V12, V0
	129 Move [X31+8], D9
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move W2, 21
	140 Move X0, X20
	141 Call 0x1C5D788
	142 Move W9, [X10]
	143 Add W9, W9, 21
	144 Add X8, X8, W9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X20
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X0, X20
	151 Move X1, X31
	152 Move V9, V0
	153 Call VisualElement.get_scaledPixelsPerPoint, X0
	154 Move X8, -53633024
	155 Move V2, [X8+676]
	156 Move V1, V0
	157 Move V0, V9
	158 Move X0, X31
	159 Call AlignmentUtils.CeilToPixelGrid, V0, V1, V2
	160 NotImplemented "Instruction MOVI not yet implemented."
	161 Move [X31+304], X31
	162 Move [X31+312], X31
	163 Move [X31+448], V1
	164 Move [X31+456], V1
	165 Move [X31+480], V1
	166 Move [X31+488], V1
	167 Move [X31+512], V1
	168 Move [X31+520], V1
	169 Move [X24+92], V1
	170 Move [X31+320], V1
	171 Move [X31+328], V1
	172 Move [X31+352], V1
	173 Move [X31+360], V1
	174 Move [X31+384], V1
	175 Move [X31+392], V1
	176 Move [X31+26], V1
	177 Move [X31+432], W31
	178 Move X8, [X20]
	179 Move X1, [X23]
	180 Move [X31], D10
	181 NotImplemented "Instruction LDRH not yet implemented."
	182 Compare X9, 0
	183 JumpIfEqual {190}
	184 Move X10, [X8+176]
	185 Add X10, X10, 8
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Subtract X9, X9, 1
	189 Add X10, X10, 16
	190 Move W2, 19
	191 Move X0, X20
	192 Move V8, V0
	193 Call 0x1C5D788
	194 Move W9, [X10]
	195 Move V8, V0
	196 Add W9, W9, 19
	197 Add X8, X8, W9
	198 Add X0, X8, 312
	199 Move X8, [X0]
	200 Move X1, [X0+8]
	201 Move X0, X20
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move X8, [X20]
	204 Move X1, [X23]
	205 Move V10, V0
	206 NotImplemented "Instruction LDRH not yet implemented."
	207 Compare X9, 0
	208 JumpIfEqual {215}
	209 Move X10, [X8+176]
	210 Add X10, X10, 8
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X9, X9, 1
	214 Add X10, X10, 16
	215 Move W2, 19
	216 Move X0, X20
	217 Call 0x1C5D788
	218 Move W9, [X10]
	219 Add W9, W9, 19
	220 Add X8, X8, W9
	221 Add X0, X8, 312
	222 Move X8, [X0]
	223 Move X1, [X0+8]
	224 Move X0, X20
	225 Add X21, X31, 16
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move X8, [X20]
	228 Move X1, [X23]
	229 Move V11, V1
	230 NotImplemented "Instruction LDRH not yet implemented."
	231 Compare X9, 0
	232 JumpIfEqual {239}
	233 Move X10, [X8+176]
	234 Add X10, X10, 8
	235 NotImplemented "Instruction LDUR not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Subtract X9, X9, 1
	238 Add X10, X10, 16
	239 Move W2, 2
	240 Move X0, X20
	241 Call 0x1C5D788
	242 Move W9, [X10]
	243 Add W9, W9, 2
	244 Add X8, X8, W9
	245 Add X0, X8, 312
	246 Move X8, [X0]
	247 Move X1, [X0+8]
	248 Move X0, X20
	249 Subtract S15, S11, S12
	250 NotImplemented "Instruction BLR not yet implemented."
	251 Move V11, V0
	252 Move V0, [X31+19]
	253 Add X20, X31, 16
	254 Add X0, X20, 48
	255 Add X1, X31, 448
	256 Move W2, 108
	257 Move V9, V1
	258 Move V13, V2
	259 Move V14, V3
	260 Move [X31+2], V0
	261 Call 0x3EB2AC0
	262 Add X0, X20, 172
	263 Add X1, X31, 320
	264 Move W2, 116
	265 Call 0x3EB2AC0
	266 Move V0, [X31+8]
	267 Move [X31+16], S10
	268 Move [X31+24], S15
	269 Move [X31+24], S8
	270 Move [X31+32], S12
	271 Move [X31+48], S11
	272 Move [X31+56], S9
	273 Move [X31+56], S13
	274 Move [X31+64], S14
	275 Move [X21+156], D0
	276 Move V0, [X31]
	277 Add X1, X31, 16
	278 Move X0, X19
	279 Move X2, X31
	280 Move [X21+164], D0
	281 Call MeshGenerationContextUtils.Rectangle, X0, X1
	282 Move X8, [X22+40]
	283 Move X9, [X31+568]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Add X31, X31, 576
	286 Move X20, [X31+112]
	287 Move X19, [X31+120]
	288 Move X22, [X31+96]
	289 Move X21, [X31+104]
	290 Move X24, [X31+80]
	291 Move X23, [X31+88]
	292 Move X29, [X31+64]
	293 Move X30, [X31+72]
	294 Move D9, [X31+48]
	295 Move D8, [X31+56]
	296 Move D11, [X31+32]
	297 Move D10, [X31+40]
	298 Move D13, [X31+16]
	299 Move D12, [X31+24]
	300 Move D15, [X31+128]
	301 Move D14, [X31+136]
	302 Return 
	303 Call 0x1C17F20
	304 Call 0x3EB2B20

Method: System.Int32 GetLastCharacterAt(System.Int32 lineIndex)

Disassembly:
	0x03E1467C LDRB W8, [X21 + 0x449]
	0x03E14680 LDR X20, [X20]
	0x03E14684 CBNZ W8, 0x3E1469C
	0x03E14688 ADRP X0, 0x350000
	0x03E1468C LDR X0, [X0 + 0xA38]
	0x03E14690 BL 0x1C16CF4
	0x03E14694 MOVZ W8, 0x1
	0x03E14698 STRB W8, [X21 + 0x449]
	0x03E1469C LDR X0, [X19]
	0x03E146A0 LDR W8, [X0 + 0xE0]
	0x03E146A4 CBNZ W8, 0x3E146B0
	0x03E146A8 BL 0x1C16DFC
	0x03E146AC LDR X0, [X19]
	0x03E146B0 LDR X8, [X0 + 0xB8]
	0x03E146B4 STR X20, [X8 + 0x8]
	0x03E146B8 ADRP X20, 0x5D4000
	0x03E146BC LDRB W8, [X20 + 0x44A]
	0x03E146C0 CBNZ W8, 0x3E146D8
	0x03E146C4 MOV X0, X19
	0x03E146C8 BL 0x1C16CF4
	0x03E146CC LDR X0, [X19]
	0x03E146D0 MOVZ W8, 0x1
	0x03E146D4 STRB W8, [X20 + 0x44A]
	0x03E146D8 LDR W8, [X0 + 0xE0]
	0x03E146DC CBNZ W8, 0x3E146E8
	0x03E146E0 BL 0x1C16DFC
	0x03E146E4 LDR X0, [X19]
	0x03E146E8 LDR X8, [X0 + 0xB8]
	0x03E146EC LDP X20, X19, [X31 + 0x10]
	0x03E146F0 STRB W31, [X8]
	0x03E146F4 LDP X30, X21, [X31], #0x20
	0x03E146F8 RET
	0x03E146FC STP X30, X25, [X31 - 0x40]!
	0x03E14700 STP X24, X23, [X31 + 0x10]
	0x03E14704 STP X22, X21, [X31 + 0x20]
	0x03E14708 STP X20, X19, [X31 + 0x30]
	0x03E1470C ADRP X20, 0x5D4000
	0x03E14710 ADRP X24, 0x307000
	0x03E14714 LDRB W8, [X20 + 0x3A7]
	0x03E14718 LDR X24, [X24 + 0x930]
	0x03E1471C MOV X19, X0
	0x03E14720 TBNZ X8, 0x0, 0x3E14744
	0x03E14724 ADRP X0, 0x356000
	0x03E14728 LDR X0, [X0 + 0x5A8]
	0x03E1472C BL 0x1C16CF4
	0x03E14730 ADRP X0, 0x307000
	0x03E14734 LDR X0, [X0 + 0x930]
	0x03E14738 BL 0x1C16CF4
	0x03E1473C MOVZ W8, 0x1
	0x03E14740 STRB W8, [X20 + 0x3A7]
	0x03E14744 LDR X0, [X24]
	0x03E14748 LDR W8, [X0 + 0xE0]
	0x03E1474C CBNZ W8, 0x3E14758
	0x03E14750 BL 0x1C16DFC
	0x03E14754 LDR X0, [X24]
	0x03E14758 LDR X8, [X0 + 0xB8]
	0x03E1475C ADRP X25, 0x356000
	0x03E14760 LDR X20, [X8]
	0x03E14764 LDR X25, [X25 + 0x5A8]
	0x03E14768 MOV X0, X20
	0x03E1476C MOV X1, X19
	0x03E14770 MOV X2, X31
	0x03E14774 BL 0x33C0DE4
	0x03E14778 CBZ X0, 0x3E14798
	0x03E1477C LDR X23, [X25]
	0x03E14780 MOV X22, X0
	0x03E14784 MOV X1, X23
	0x03E14788 BL 0x1C16E00
	0x03E1478C MOV X21, X0
	0x03E14790 CBNZ X0, 0x3E1479C
	0x03E14794 B 0x3E147E0
	0x03E14798 MOV X21, X31
	0x03E1479C LDR X0, [X24]
	0x03E147A0 LDR W8, [X0 + 0xE0]
	0x03E147A4 CBNZ W8, 0x3E147B0
	0x03E147A8 BL 0x1C16DFC
	0x03E147AC LDR X0, [X24]
	0x03E147B0 LDR X0, [X0 + 0xB8]
	0x03E147B4 MOV X1, X21
	0x03E147B8 MOV X2, X20
	0x03E147BC BL 0x1C24138
	0x03E147C0 CMP X20, X0
	0x03E147C4 MOV X20, X0
	0x03E147C8 B.NE 0x3E14768
	0x03E147CC LDP X20, X19, [X31 + 0x30]
	0x03E147D0 LDP X22, X21, [X31 + 0x20]
	0x03E147D4 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X0
	008 Move X0, [X0+984]
	009 Compare X0, 0
	010 JumpIfEqual {102}
	011 Move W21, W1
	012 Move X1, X31
	013 Call TextHandle.get_textInfo, X0
	014 Compare X0, 0
	015 JumpIfEqual {102}
	016 Move X8, [X0+72]
	017 Compare X8, 0
	018 JumpIfEqual {102}
	019 Move W9, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, [X19+984]
	022 Compare X0, 0
	023 JumpIfEqual {102}
	024 Move X22, W21
	025 Move W9, 96
	026 NotImplemented "Instruction MADD not yet implemented."
	027 Move W20, [X8+64]
	028 Move X1, X31
	029 Call TextHandle.get_textInfo, X0
	030 Compare X0, 0
	031 JumpIfEqual {102}
	032 Move X8, [X0+72]
	033 Compare X8, 0
	034 JumpIfEqual {102}
	035 Move W9, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, [X19+984]
	038 Compare X0, 0
	039 JumpIfEqual {102}
	040 Move W9, 96
	041 NotImplemented "Instruction MADD not yet implemented."
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Move X1, X31
	044 Call TextHandle.get_textInfo, X0
	045 Compare X0, 0
	046 JumpIfEqual {102}
	047 Move X9, [X0+48]
	048 Compare X9, 0
	049 JumpIfEqual {102}
	050 Move W8, [X9+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, W20
	053 Move W10, 392
	054 NotImplemented "Instruction MADD not yet implemented."
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSET not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Or W9, W9, W10
	062 Compare W9, 0
	063 JumpIfEqual {94}
	064 Move W9, 392
	065 Subtract X22, X8, 1
	066 Multiply X8, X8, X9
	067 Subtract X23, X8, 360
	068 Move X0, [X19+984]
	069 Compare X0, 0
	070 JumpIfEqual {102}
	071 Move X1, X31
	072 Call TextHandle.get_textInfo, X0
	073 Compare X0, 0
	074 JumpIfEqual {102}
	075 Move X8, [X0+48]
	076 Compare X8, 0
	077 JumpIfEqual {102}
	078 Move W9, [X8+24]
	079 Subtract W20, W20, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSET not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSET not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Or W8, W8, W9
	088 Subtract X22, X22, 1
	089 Subtract X23, X23, 392
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {68}
	094 Move W0, W20
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Return X0
	102 Call 0x1C17F20
	103 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x03E147D8 LDP X30, X25, [X31], #0x40
	0x03E147DC RET
	0x03E147E0 MOV X0, X22
	0x03E147E4 MOV X1, X23
	0x03E147E8 BL 0x1C171E0
	0x03E147EC STP X30, X25, [X31 - 0x40]!
	0x03E147F0 STP X24, X23, [X31 + 0x10]
	0x03E147F4 STP X22, X21, [X31 + 0x20]
	0x03E147F8 STP X20, X19, [X31 + 0x30]
	0x03E147FC ADRP X20, 0x5D4000
	0x03E14800 ADRP X24, 0x307000
	0x03E14804 LDRB W8, [X20 + 0x3A8]
	0x03E14808 LDR X24, [X24 + 0x930]
	0x03E1480C MOV X19, X0
	0x03E14810 TBNZ X8, 0x0, 0x3E14834
	0x03E14814 ADRP X0, 0x356000
	0x03E14818 LDR X0, [X0 + 0x5A8]
	0x03E1481C BL 0x1C16CF4
	0x03E14820 ADRP X0, 0x307000
	0x03E14824 LDR X0, [X0 + 0x930]
	0x03E14828 BL 0x1C16CF4
	0x03E1482C MOVZ W8, 0x1
	0x03E14830 STRB W8, [X20 + 0x3A8]
	0x03E14834 LDR X0, [X24]
	0x03E14838 LDR W8, [X0 + 0xE0]
	0x03E1483C CBNZ W8, 0x3E14848
	0x03E14840 BL 0x1C16DFC
	0x03E14844 LDR X0, [X24]
	0x03E14848 LDR X8, [X0 + 0xB8]
	0x03E1484C ADRP X25, 0x356000
	0x03E14850 LDR X20, [X8]
	0x03E14854 LDR X25, [X25 + 0x5A8]
	0x03E14858 MOV X0, X20
	0x03E1485C MOV X1, X19
	0x03E14860 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5D5000
	007 Move X21, 0x357000
	008 Move X20, 0x309000
	009 Move X19, 0x30B000
	010 Move W8, [X22+918]
	011 Move X21, [X21+1344]
	012 Move X20, [X20+3784]
	013 Move X19, [X19+1528]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x309000
	019 Move X0, [X0+3784]
	020 Call 0x1C17CF4
	021 Move X0, 0x357000
	022 Move X0, [X0+1344]
	023 Call 0x1C17CF4
	024 Move X0, 0x30B000
	025 Move X0, [X0+1528]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+918], W8
	029 Move X8, [X20]
	030 Move X9, [X21]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X8, [X8+184]
	034 Move [X8], X9
	035 Move X8, [X20]
	036 Move X9, [X19]
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X8, [X8+184]
	040 Move [X8+8], X9
	041 Move X30, [X31+48]
	042 Return 

