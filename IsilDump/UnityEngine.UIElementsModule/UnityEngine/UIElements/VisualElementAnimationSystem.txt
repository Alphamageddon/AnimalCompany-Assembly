Type: UnityEngine.UIElements.VisualElementAnimationSystem

Method: Unity.Profiling.ProfilerMarker get_profilerMarker()

Disassembly:
	0x03D1AFD4 LDR X3, [X8 + 0x220]
	0x03D1AFD8 BLR X9
	0x03D1AFDC STR W31, [X19 + 0x20]
	0x03D1AFE0 STP X31, X31, [X19 + 0x28]
	0x03D1AFE4 LDP X20, X19, [X31 + 0x10]
	0x03D1AFE8 LDP X30, X21, [X31], #0x20
	0x03D1AFEC RET
	0x03D1AFF0 MOV X1, X31
	0x03D1AFF4 STR W31, [X0 + 0x20]
	0x03D1AFF8 B 0x33BDD8C
	0x03D1AFFC STR X30, [X31 - 0x30]!
	0x03D1B000 STP X22, X21, [X31 + 0x10]
	0x03D1B004 STP X20, X19, [X31 + 0x20]
	0x03D1B008 ADRP X22, 0x6CC000
	0x03D1B00C ADRP X21, 0x449000
	0x03D1B010 LDRB W8, [X22 + 0x936]
	0x03D1B014 LDR X21, [X21 + 0x1F8]
	0x03D1B018 MOV X19, X1
	0x03D1B01C MOV X20, X0
	0x03D1B020 TBNZ X8, 0x0, 0x3D1B044
	0x03D1B024 ADRP X0, 0x449000
	0x03D1B028 LDR X0, [X0 + 0x200]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6CE000
	005 Move X19, 0x44B000
	006 Move W8, [X20+2343]
	007 Move X19, [X19+360]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x44B000
	013 Move X0, [X0+360]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2343], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: Unity.Profiling.ProfilerMarker get_stylePropertyAnimationProfilerMarker()

Disassembly:
	0x03D1B02C BL 0x1C16CF4
	0x03D1B030 ADRP X0, 0x449000
	0x03D1B034 LDR X0, [X0 + 0x1F8]
	0x03D1B038 BL 0x1C16CF4
	0x03D1B03C MOVZ W8, 0x1
	0x03D1B040 STRB W8, [X22 + 0x936]
	0x03D1B044 LDR X0, [X21]
	0x03D1B048 LDR W8, [X0 + 0xE0]
	0x03D1B04C CBNZ W8, 0x3D1B058
	0x03D1B050 BL 0x1C16DFC
	0x03D1B054 LDR X0, [X21]
	0x03D1B058 LDR X8, [X0 + 0xB8]
	0x03D1B05C LDR X0, [X8]
	0x03D1B060 CBZ X0, 0x3D1B088
	0x03D1B064 ADRP X8, 0x449000
	0x03D1B068 LDR X8, [X8 + 0x200]
	0x03D1B06C MOV X1, X20
	0x03D1B070 MOV X2, X19
	0x03D1B074 LDP X20, X19, [X31 + 0x20]
	0x03D1B078 LDR X3, [X8]
	0x03D1B07C LDP X22, X21, [X31 + 0x10]
	0x03D1B080 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6CD000
	005 Move X19, 0x44A000
	006 Move W8, [X20+2344]
	007 Move X19, [X19+360]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x44A000
	013 Move X0, [X0+360]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2344], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void UnregisterAnimation(UnityEngine.UIElements.Experimental.IValueAnimationUpdate anim)

Disassembly:
	0x03D1B084 B 0x2A4CB60
	0x03D1B088 BL 0x1C16F20
	0x03D1B08C SUB X31, X31, 0xE0
	0x03D1B090 STR X30, [X31 + 0xB0]
	0x03D1B094 STP X22, X21, [X31 + 0xC0]
	0x03D1B098 STP X20, X19, [X31 + 0xD0]
	0x03D1B09C ADRP X22, 0x6CC000
	0x03D1B0A0 ADRP X21, 0x449000
	0x03D1B0A4 LDRB W8, [X22 + 0x937]
	0x03D1B0A8 LDR X21, [X21 + 0x1F8]
	0x03D1B0AC MOV X20, X1
	0x03D1B0B0 MOV X19, X0
	0x03D1B0B4 TBNZ X8, 0x0, 0x3D1B0D8
	0x03D1B0B8 ADRP X0, 0x449000
	0x03D1B0BC LDR X0, [X0 + 0x208]
	0x03D1B0C0 BL 0x1C16CF4
	0x03D1B0C4 ADRP X0, 0x449000
	0x03D1B0C8 LDR X0, [X0 + 0x1F8]
	0x03D1B0CC BL 0x1C16CF4
	0x03D1B0D0 MOVZ W8, 0x1
	0x03D1B0D4 STRB W8, [X22 + 0x937]
	0x03D1B0D8 LDR X0, [X21]
	0x03D1B0DC LDR W8, [X0 + 0xE0]
	0x03D1B0E0 CBNZ W8, 0x3D1B0EC
	0x03D1B0E4 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6CD000
	006 Move W8, [X21+2345]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x44A000
	014 Move X0, [X0+368]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2345], W8
	018 Move X0, [X19+32]
	019 Compare X0, 0
	020 JumpIfEqual {33}
	021 Move X8, 0x44A000
	022 Move X8, [X8+368]
	023 Move X1, X20
	024 Move X2, [X8]
	025 Call HashSet`1<Object>.Remove, X0, X1
	026 Move W8, 1
	027 Move [X19+49], W8
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 
	033 Call 0x1C17F20

Method: System.Void UnregisterAnimations(System.Collections.Generic.List`1<UnityEngine.UIElements.Experimental.IValueAnimationUpdate> anims)

Disassembly:
	0x03D1B0E8 LDR X0, [X21]
	0x03D1B0EC LDR X8, [X0 + 0xB8]
	0x03D1B0F0 ADD X0, X31, 0x0
	0x03D1B0F4 MOVZ W2, 0x58
	0x03D1B0F8 MOV X1, X20
	0x03D1B0FC LDR X21, [X8]
	0x03D1B100 BL 0x3EB1AC0
	0x03D1B104 CBZ X21, 0x3D1B14C
	0x03D1B108 ADRP X8, 0x449000
	0x03D1B10C LDR X8, [X8 + 0x208]
	0x03D1B110 ADD X0, X31, 0x58
	0x03D1B114 ADD X1, X31, 0x0
	0x03D1B118 MOVZ W2, 0x58
	0x03D1B11C LDR X20, [X8]
	0x03D1B120 BL 0x3EB1AC0
	0x03D1B124 ADD X2, X31, 0x58
	0x03D1B128 MOV X0, X21
	0x03D1B12C MOV X1, X19
	0x03D1B130 MOV X3, X20
	0x03D1B134 BL 0x2A4AE10
	0x03D1B138 LDP X20, X19, [X31 + 0xD0]
	0x03D1B13C LDP X22, X21, [X31 + 0xC0]
	0x03D1B140 LDR X30, [X31 + 0xB0]
	0x03D1B144 ADD X31, X31, 0xE0
	0x03D1B148 RET
	0x03D1B14C BL 0x1C16F20
	0x03D1B150 STR X30, [X31 - 0x30]!
	0x03D1B154 STP X22, X21, [X31 + 0x10]
	0x03D1B158 STP X20, X19, [X31 + 0x20]
	0x03D1B15C ADRP X22, 0x6CC000
	0x03D1B160 ADRP X21, 0x449000
	0x03D1B164 LDRB W8, [X22 + 0x938]
	0x03D1B168 LDR X21, [X21 + 0x1F8]
	0x03D1B16C MOV X19, X1
	0x03D1B170 MOV W20, W0
	0x03D1B174 TBNZ X8, 0x0, 0x3D1B198
	0x03D1B178 ADRP X0, 0x449000
	0x03D1B17C LDR X0, [X0 + 0x210]
	0x03D1B180 BL 0x1C16CF4
	0x03D1B184 ADRP X0, 0x449000
	0x03D1B188 LDR X0, [X0 + 0x1F8]
	0x03D1B18C BL 0x1C16CF4
	0x03D1B190 MOVZ W8, 0x1
	0x03D1B194 STRB W8, [X22 + 0x938]
	0x03D1B198 LDR X0, [X21]
	0x03D1B19C LDR W8, [X0 + 0xE0]
	0x03D1B1A0 CBNZ W8, 0x3D1B1AC
	0x03D1B1A4 BL 0x1C16DFC
	0x03D1B1A8 LDR X0, [X21]
	0x03D1B1AC LDR X8, [X0 + 0xB8]
	0x03D1B1B0 LDR X0, [X8 + 0x8]
	0x03D1B1B4 CBZ X0, 0x3D1B1DC
	0x03D1B1B8 ADRP X8, 0x449000
	0x03D1B1BC LDR X8, [X8 + 0x210]
	0x03D1B1C0 MOV W1, W20
	0x03D1B1C4 MOV X2, X19
	0x03D1B1C8 LDP X20, X19, [X31 + 0x20]
	0x03D1B1CC LDR X3, [X8]
	0x03D1B1D0 LDP X22, X21, [X31 + 0x10]
	0x03D1B1D4 LDR X30, [X31], #0x30
	0x03D1B1D8 B 0x2A150AC
	0x03D1B1DC BL 0x1C16F20
	0x03D1B1E0 STR X30, [X31 - 0x30]!
	0x03D1B1E4 STP X22, X21, [X31 + 0x10]
	0x03D1B1E8 STP X20, X19, [X31 + 0x20]
	0x03D1B1EC ADRP X22, 0x6CC000
	0x03D1B1F0 ADRP X21, 0x449000
	0x03D1B1F4 LDRB W8, [X22 + 0x939]
	0x03D1B1F8 LDR X21, [X21 + 0x1F8]
	0x03D1B1FC MOV X19, X1
	0x03D1B200 MOV W20, W0
	0x03D1B204 TBNZ X8, 0x0, 0x3D1B228
	0x03D1B208 ADRP X0, 0x449000
	0x03D1B20C LDR X0, [X0 + 0x218]
	0x03D1B210 BL 0x1C16CF4
	0x03D1B214 ADRP X0, 0x449000
	0x03D1B218 LDR X0, [X0 + 0x1F8]
	0x03D1B21C BL 0x1C16CF4
	0x03D1B220 MOVZ W8, 0x1
	0x03D1B224 STRB W8, [X22 + 0x939]
	0x03D1B228 LDR X0, [X21]
	0x03D1B22C LDR W8, [X0 + 0xE0]
	0x03D1B230 CBNZ W8, 0x3D1B23C
	0x03D1B234 BL 0x1C16DFC
	0x03D1B238 LDR X0, [X21]
	0x03D1B23C LDR X8, [X0 + 0xB8]
	0x03D1B240 LDR X0, [X8 + 0x8]
	0x03D1B244 CBZ X0, 0x3D1B26C
	0x03D1B248 ADRP X8, 0x449000
	0x03D1B24C LDR X8, [X8 + 0x218]
	0x03D1B250 MOV W1, W20
	0x03D1B254 MOV X2, X19
	0x03D1B258 LDP X20, X19, [X31 + 0x20]
	0x03D1B25C LDR X3, [X8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x6CD000
	009 Move W8, [X21+2346]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x44A000
	017 Move X0, [X0+376]
	018 Call 0x1C17CF4
	019 Move X0, 0x44A000
	020 Move X0, [X0+384]
	021 Call 0x1C17CF4
	022 Move X0, 0x44A000
	023 Move X0, [X0+392]
	024 Call 0x1C17CF4
	025 Move X0, 0x44A000
	026 Move X0, [X0+368]
	027 Call 0x1C17CF4
	028 Move X0, 0x44A000
	029 Move X0, [X0+400]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2346], W8
	033 Move [X31+8], X31
	034 Move [X31+16], X31
	035 Move [X31+24], X31
	036 Compare X20, 0
	037 JumpIfEqual {77}
	038 Move X8, 0x44A000
	039 Move X8, [X8+400]
	040 Move X22, 0x44A000
	041 Move X23, 0x44A000
	042 Move X21, 0x44A000
	043 Move X1, [X8]
	044 Move X22, [X22+384]
	045 Move X23, [X23+368]
	046 Move X21, [X21+376]
	047 Add X8, X31, 8
	048 Move X0, X20
	049 Call List`1<Object>.GetEnumerator, X0
	050 Move X1, [X22]
	051 Add X0, X31, 8
	052 Call Enumerator<Object>.MoveNext, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {63}
	057 Move X0, [X19+32]
	058 Compare X0, 0
	059 JumpIfEqual {76}
	060 Move X1, [X31+24]
	061 Move X2, [X23]
	062 Call HashSet`1<Object>.Remove, X0, X1
	063 Move X1, [X21]
	064 Add X0, X31, 8
	065 Call Enumerator<Object>.Dispose, X0
	066 Move W8, 1
	067 Move [X19+49], W8
	068 Move X20, [X31+64]
	069 Move X19, [X31+72]
	070 Move X22, [X31+48]
	071 Move X21, [X31+56]
	072 Move X30, [X31+32]
	073 Move X23, [X31+40]
	074 Add X31, X31, 80
	075 Return 
	076 Call 0x1C17F20
	077 Call 0x1C17F20
	078 Move X20, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X20
	081 Call 0x3EB2AD0
	082 Move X21, [X0]
	083 Call 0x3EB2AE0
	084 Move X8, 0x44A000
	085 Move X8, [X8+376]
	086 Add X0, X31, 8
	087 Move X1, [X8]
	088 Call Enumerator<Object>.Dispose, X0
	089 Compare X21, 0
	090 JumpIfEqual {66}
	091 Move X0, X21
	092 Call 0x1C17F18
	093 Move X21, X31
	094 Move X20, X0
	095 Move X8, 0x44A000
	096 Move X8, [X8+376]
	097 Move X1, [X8]
	098 Add X0, X31, 8
	099 Call Enumerator<Object>.Dispose, X0
	100 Compare X21, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X20
	103 Call 0x1D2D690
	104 Move X0, X21
	105 Call 0x1C17F18
	106 Call 0x1991590

Method: System.Void RegisterAnimation(UnityEngine.UIElements.Experimental.IValueAnimationUpdate anim)

Disassembly:
	0x03D1B260 LDP X22, X21, [X31 + 0x10]
	0x03D1B264 LDR X30, [X31], #0x30
	0x03D1B268 B 0x2A13678
	0x03D1B26C BL 0x1C16F20
	0x03D1B270 STR X30, [X31 - 0x30]!
	0x03D1B274 STP X22, X21, [X31 + 0x10]
	0x03D1B278 STP X20, X19, [X31 + 0x20]
	0x03D1B27C ADRP X22, 0x6CC000
	0x03D1B280 ADRP X21, 0x449000
	0x03D1B284 LDRB W8, [X22 + 0x93A]
	0x03D1B288 LDR X21, [X21 + 0x1F8]
	0x03D1B28C MOV X19, X1
	0x03D1B290 MOV W20, W0
	0x03D1B294 TBNZ X8, 0x0, 0x3D1B2B8
	0x03D1B298 ADRP X0, 0x449000
	0x03D1B29C LDR X0, [X0 + 0x220]
	0x03D1B2A0 BL 0x1C16CF4
	0x03D1B2A4 ADRP X0, 0x449000
	0x03D1B2A8 LDR X0, [X0 + 0x1F8]
	0x03D1B2AC BL 0x1C16CF4
	0x03D1B2B0 MOVZ W8, 0x1
	0x03D1B2B4 STRB W8, [X22 + 0x93A]
	0x03D1B2B8 LDR X0, [X21]
	0x03D1B2BC LDR W8, [X0 + 0xE0]
	0x03D1B2C0 CBNZ W8, 0x3D1B2CC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6CD000
	006 Move W8, [X21+2347]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x44A000
	014 Move X0, [X0+408]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2347], W8
	018 Move X0, [X19+32]
	019 Compare X0, 0
	020 JumpIfEqual {33}
	021 Move X8, 0x44A000
	022 Move X8, [X8+408]
	023 Move X1, X20
	024 Move X2, [X8]
	025 Call HashSet`1<Object>.Add, X0, X1
	026 Move W8, 257
	027 NotImplemented "Instruction STRH not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 
	033 Call 0x1C17F20

Method: System.Void RegisterAnimations(System.Collections.Generic.List`1<UnityEngine.UIElements.Experimental.IValueAnimationUpdate> anims)

Disassembly:
	0x03D1B2C4 BL 0x1C16DFC
	0x03D1B2C8 LDR X0, [X21]
	0x03D1B2CC LDR X8, [X0 + 0xB8]
	0x03D1B2D0 LDR X0, [X8 + 0x10]
	0x03D1B2D4 CBZ X0, 0x3D1B2FC
	0x03D1B2D8 ADRP X8, 0x449000
	0x03D1B2DC LDR X8, [X8 + 0x220]
	0x03D1B2E0 MOV W1, W20
	0x03D1B2E4 MOV X2, X19
	0x03D1B2E8 LDP X20, X19, [X31 + 0x20]
	0x03D1B2EC LDR X3, [X8]
	0x03D1B2F0 LDP X22, X21, [X31 + 0x10]
	0x03D1B2F4 LDR X30, [X31], #0x30
	0x03D1B2F8 B 0x2A150AC
	0x03D1B2FC BL 0x1C16F20
	0x03D1B300 STR X30, [X31 - 0x30]!
	0x03D1B304 STP X22, X21, [X31 + 0x10]
	0x03D1B308 STP X20, X19, [X31 + 0x20]
	0x03D1B30C ADRP X22, 0x6CC000
	0x03D1B310 ADRP X21, 0x449000
	0x03D1B314 LDRB W8, [X22 + 0x93B]
	0x03D1B318 LDR X21, [X21 + 0x1F8]
	0x03D1B31C MOV X19, X1
	0x03D1B320 MOV W20, W0
	0x03D1B324 TBNZ X8, 0x0, 0x3D1B348
	0x03D1B328 ADRP X0, 0x449000
	0x03D1B32C LDR X0, [X0 + 0x228]
	0x03D1B330 BL 0x1C16CF4
	0x03D1B334 ADRP X0, 0x449000
	0x03D1B338 LDR X0, [X0 + 0x1F8]
	0x03D1B33C BL 0x1C16CF4
	0x03D1B340 MOVZ W8, 0x1
	0x03D1B344 STRB W8, [X22 + 0x93B]
	0x03D1B348 LDR X0, [X21]
	0x03D1B34C LDR W8, [X0 + 0xE0]
	0x03D1B350 CBNZ W8, 0x3D1B35C
	0x03D1B354 BL 0x1C16DFC
	0x03D1B358 LDR X0, [X21]
	0x03D1B35C LDR X8, [X0 + 0xB8]
	0x03D1B360 LDR X0, [X8 + 0x10]
	0x03D1B364 CBZ X0, 0x3D1B38C
	0x03D1B368 ADRP X8, 0x449000
	0x03D1B36C LDR X8, [X8 + 0x228]
	0x03D1B370 MOV W1, W20
	0x03D1B374 MOV X2, X19
	0x03D1B378 LDP X20, X19, [X31 + 0x20]
	0x03D1B37C LDR X3, [X8]
	0x03D1B380 LDP X22, X21, [X31 + 0x10]
	0x03D1B384 LDR X30, [X31], #0x30
	0x03D1B388 B 0x2A13678
	0x03D1B38C BL 0x1C16F20
	0x03D1B390 STR X30, [X31 - 0x50]!
	0x03D1B394 STP X26, X25, [X31 + 0x10]
	0x03D1B398 STP X24, X23, [X31 + 0x20]
	0x03D1B39C STP X22, X21, [X31 + 0x30]
	0x03D1B3A0 STP X20, X19, [X31 + 0x40]
	0x03D1B3A4 ADRP X25, 0x6CC000
	0x03D1B3A8 ADRP X26, 0x449000
	0x03D1B3AC ADRP X19, 0x449000
	0x03D1B3B0 ADRP X20, 0x449000
	0x03D1B3B4 ADRP X24, 0x449000
	0x03D1B3B8 ADRP X23, 0x449000
	0x03D1B3BC ADRP X22, 0x449000
	0x03D1B3C0 ADRP X21, 0x449000
	0x03D1B3C4 LDR X26, [X26 + 0x230]
	0x03D1B3C8 LDR X19, [X19 + 0x238]
	0x03D1B3CC LDRB W8, [X25 + 0x93C]
	0x03D1B3D0 LDR X20, [X20 + 0x1F8]
	0x03D1B3D4 LDR X24, [X24 + 0x240]
	0x03D1B3D8 LDR X23, [X23 + 0x248]
	0x03D1B3DC LDR X22, [X22 + 0x250]
	0x03D1B3E0 LDR X21, [X21 + 0x258]
	0x03D1B3E4 TBNZ X8, 0x0, 0x3D1B444
	0x03D1B3E8 ADRP X0, 0x449000
	0x03D1B3EC LDR X0, [X0 + 0x238]
	0x03D1B3F0 BL 0x1C16CF4
	0x03D1B3F4 ADRP X0, 0x449000
	0x03D1B3F8 LDR X0, [X0 + 0x258]
	0x03D1B3FC BL 0x1C16CF4
	0x03D1B400 ADRP X0, 0x449000
	0x03D1B404 LDR X0, [X0 + 0x248]
	0x03D1B408 BL 0x1C16CF4
	0x03D1B40C ADRP X0, 0x449000
	0x03D1B410 LDR X0, [X0 + 0x230]
	0x03D1B414 BL 0x1C16CF4
	0x03D1B418 ADRP X0, 0x449000
	0x03D1B41C LDR X0, [X0 + 0x250]
	0x03D1B420 BL 0x1C16CF4
	0x03D1B424 ADRP X0, 0x449000
	0x03D1B428 LDR X0, [X0 + 0x240]
	0x03D1B42C BL 0x1C16CF4
	0x03D1B430 ADRP X0, 0x449000
	0x03D1B434 LDR X0, [X0 + 0x1F8]
	0x03D1B438 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x6CD000
	009 Move W8, [X21+2348]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x44A000
	017 Move X0, [X0+376]
	018 Call 0x1C17CF4
	019 Move X0, 0x44A000
	020 Move X0, [X0+384]
	021 Call 0x1C17CF4
	022 Move X0, 0x44A000
	023 Move X0, [X0+392]
	024 Call 0x1C17CF4
	025 Move X0, 0x44A000
	026 Move X0, [X0+408]
	027 Call 0x1C17CF4
	028 Move X0, 0x44A000
	029 Move X0, [X0+400]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2348], W8
	033 Move [X31+8], X31
	034 Move [X31+16], X31
	035 Move [X31+24], X31
	036 Compare X20, 0
	037 JumpIfEqual {77}
	038 Move X8, 0x44A000
	039 Move X8, [X8+400]
	040 Move X22, 0x44A000
	041 Move X23, 0x44A000
	042 Move X21, 0x44A000
	043 Move X1, [X8]
	044 Move X22, [X22+384]
	045 Move X23, [X23+408]
	046 Move X21, [X21+376]
	047 Add X8, X31, 8
	048 Move X0, X20
	049 Call List`1<Object>.GetEnumerator, X0
	050 Move X1, [X22]
	051 Add X0, X31, 8
	052 Call Enumerator<Object>.MoveNext, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {63}
	057 Move X0, [X19+32]
	058 Compare X0, 0
	059 JumpIfEqual {76}
	060 Move X1, [X31+24]
	061 Move X2, [X23]
	062 Call HashSet`1<Object>.Add, X0, X1
	063 Move X1, [X21]
	064 Add X0, X31, 8
	065 Call Enumerator<Object>.Dispose, X0
	066 Move W8, 257
	067 NotImplemented "Instruction STRH not yet implemented."
	068 Move X20, [X31+64]
	069 Move X19, [X31+72]
	070 Move X22, [X31+48]
	071 Move X21, [X31+56]
	072 Move X30, [X31+32]
	073 Move X23, [X31+40]
	074 Add X31, X31, 80
	075 Return 
	076 Call 0x1C17F20
	077 Call 0x1C17F20
	078 Move X20, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X20
	081 Call 0x3EB2AD0
	082 Move X21, [X0]
	083 Call 0x3EB2AE0
	084 Move X8, 0x44A000
	085 Move X8, [X8+376]
	086 Add X0, X31, 8
	087 Move X1, [X8]
	088 Call Enumerator<Object>.Dispose, X0
	089 Compare X21, 0
	090 JumpIfEqual {66}
	091 Move X0, X21
	092 Call 0x1C17F18
	093 Move X21, X31
	094 Move X20, X0
	095 Move X8, 0x44A000
	096 Move X8, [X8+376]
	097 Move X1, [X8]
	098 Add X0, X31, 8
	099 Call Enumerator<Object>.Dispose, X0
	100 Compare X21, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X20
	103 Call 0x1D2D690
	104 Move X0, X21
	105 Call 0x1C17F18
	106 Call 0x1991590

Method: System.Void Update()

Disassembly:
	0x03D1B43C MOVZ W8, 0x1
	0x03D1B440 STRB W8, [X25 + 0x93C]
	0x03D1B444 LDR X0, [X26]
	0x03D1B448 BL 0x1C16F10
	0x03D1B44C LDR X1, [X19]
	0x03D1B450 MOV X19, X0
	0x03D1B454 BL 0x2A4A4C8
	0x03D1B458 LDR X8, [X20]
	0x03D1B45C LDR X8, [X8 + 0xB8]
	0x03D1B460 STR X19, [X8]
	0x03D1B464 LDR X0, [X24]
	0x03D1B468 BL 0x1C16F10
	0x03D1B46C LDR X1, [X23]
	0x03D1B470 MOV X19, X0
	0x03D1B474 BL 0x2A12DD4
	0x03D1B478 LDR X8, [X20]
	0x03D1B47C LDR X8, [X8 + 0xB8]
	0x03D1B480 STR X19, [X8 + 0x8]
	0x03D1B484 LDR X0, [X22]
	0x03D1B488 BL 0x1C16F10
	0x03D1B48C LDR X1, [X21]
	0x03D1B490 MOV X19, X0
	0x03D1B494 BL 0x2A12DD4
	0x03D1B498 LDR X8, [X20]
	0x03D1B49C LDP X22, X21, [X31 + 0x30]
	0x03D1B4A0 LDP X24, X23, [X31 + 0x20]
	0x03D1B4A4 LDP X26, X25, [X31 + 0x10]
	0x03D1B4A8 LDR X8, [X8 + 0xB8]
	0x03D1B4AC STR X19, [X8 + 0x10]
	0x03D1B4B0 LDP X20, X19, [X31 + 0x40]
	0x03D1B4B4 LDR X30, [X31], #0x50
	0x03D1B4B8 RET
	0x03D1B4BC STR X30, [X31 - 0x20]!
	0x03D1B4C0 STP X20, X19, [X31 + 0x10]
	0x03D1B4C4 ADRP X20, 0x6CC000
	0x03D1B4C8 ADRP X19, 0x449000
	0x03D1B4CC LDRB W8, [X20 + 0x93D]
	0x03D1B4D0 LDR X19, [X19 + 0x260]
	0x03D1B4D4 TBNZ X8, 0x0, 0x3D1B4EC
	0x03D1B4D8 ADRP X0, 0x449000
	0x03D1B4DC LDR X0, [X0 + 0x260]
	0x03D1B4E0 BL 0x1C16CF4
	0x03D1B4E4 MOVZ W8, 0x1
	0x03D1B4E8 STRB W8, [X20 + 0x93D]
	0x03D1B4EC LDR X0, [X19]
	0x03D1B4F0 LDR W8, [X0 + 0xE0]
	0x03D1B4F4 CBNZ W8, 0x3D1B500
	0x03D1B4F8 BL 0x1C16DFC
	0x03D1B4FC LDR X0, [X19]
	0x03D1B500 LDR X8, [X0 + 0xB8]
	0x03D1B504 LDP X20, X19, [X31 + 0x10]
	0x03D1B508 LDR X0, [X8 + 0x8]
	0x03D1B50C LDR X30, [X31], #0x20
	0x03D1B510 RET
	0x03D1B514 STR X30, [X31 - 0x30]!
	0x03D1B518 STP X22, X21, [X31 + 0x10]
	0x03D1B51C STP X20, X19, [X31 + 0x20]
	0x03D1B520 ADRP X22, 0x6CC000
	0x03D1B524 LDRB W8, [X22 + 0x93E]
	0x03D1B528 MOV W20, W2
	0x03D1B52C MOV X19, X1
	0x03D1B530 MOV X21, X0
	0x03D1B534 TBNZ X8, 0x0, 0x3D1B54C
	0x03D1B538 ADRP X0, 0x447000
	0x03D1B53C LDR X0, [X0 + 0x7C8]
	0x03D1B540 BL 0x1C16CF4
	0x03D1B544 MOVZ W8, 0x1
	0x03D1B548 STRB W8, [X22 + 0x93E]
	0x03D1B54C MOVZ W8, 0x8010
	0x03D1B550 ANDS W31, W20, W8, 0x0
	0x03D1B554 B.EQ 0x3D1B590
	0x03D1B558 LDR W8, [X21 + 0x34]
	0x03D1B55C ADD W8, W8, 0x1
	0x03D1B560 STR W8, [X21 + 0x34]
	0x03D1B564 TBZ X20, 0x4, 0x3D1B58C
	0x03D1B568 LDRB W8, [X21 + 0x30]
	0x03D1B56C CBZ W8, 0x3D1B5A0
	0x03D1B570 LDR X0, [X21 + 0x20]
	0x03D1B574 CBZ X0, 0x3D1B5E0
	0x03D1B578 ADRP X8, 0x447000
	0x03D1B57C LDR X8, [X8 + 0x7C8]
	0x03D1B580 MOV X1, X19
	0x03D1B584 LDR X2, [X8]
	0x03D1B588 BL 0x2DBEF30
	0x03D1B58C TBNZ X20, 0xF, 0x3D1B5B8
	0x03D1B590 LDP X20, X19, [X31 + 0x20]
	0x03D1B594 LDP X22, X21, [X31 + 0x10]
	0x03D1B598 LDR X30, [X31], #0x30
	0x03D1B59C RET
	0x03D1B5A0 LDR X0, [X21 + 0x40]
	0x03D1B5A4 CBZ X0, 0x3D1B5E0
	0x03D1B5A8 MOV X1, X19
	0x03D1B5AC MOV W2, W20
	0x03D1B5B0 BL 0x3D1B5E4
	0x03D1B5B4 TBZ X20, 0xF, 0x3D1B590
	0x03D1B5B8 LDR X0, [X21 + 0x28]
	0x03D1B5BC CBZ X0, 0x3D1B5E0
	0x03D1B5C0 ADRP X8, 0x447000
	0x03D1B5C4 LDR X8, [X8 + 0x7C8]
	0x03D1B5C8 MOV X1, X19
	0x03D1B5CC LDP X20, X19, [X31 + 0x20]
	0x03D1B5D0 LDP X22, X21, [X31 + 0x10]
	0x03D1B5D4 LDR X2, [X8]
	0x03D1B5D8 LDR X30, [X31], #0x30
	0x03D1B5DC B 0x2DBEF30
	0x03D1B5E0 BL 0x1C16F20
	0x03D1B5E4 STR X30, [X31 - 0x30]!
	0x03D1B5E8 STP X22, X21, [X31 + 0x10]
	0x03D1B5EC STP X20, X19, [X31 + 0x20]
	0x03D1B5F0 ADRP X22, 0x6CC000
	0x03D1B5F4 LDRB W8, [X22 + 0x948]
	0x03D1B5F8 MOV W21, W2
	0x03D1B5FC MOV X19, X1
	0x03D1B600 MOV X20, X0
	0x03D1B604 TBNZ X8, 0x0, 0x3D1B61C
	0x03D1B608 ADRP X0, 0x447000
	0x03D1B60C LDR X0, [X0 + 0x7C8]
	0x03D1B610 BL 0x1C16CF4
	0x03D1B614 MOVZ W8, 0x1
	0x03D1B618 STRB W8, [X22 + 0x948]
	0x03D1B61C LDR X0, [X20 + 0x18]
	0x03D1B620 CBZ X0, 0x3D1B660
	0x03D1B624 ADRP X8, 0x447000
	0x03D1B628 LDR X8, [X8 + 0x7C8]
	0x03D1B62C MOV X1, X19
	0x03D1B630 LDR X2, [X8]
	0x03D1B634 BL 0x2DBEF30
	0x03D1B638 TBZ X21, 0x4, 0x3D1B648
	0x03D1B63C MOV X0, X20
	0x03D1B640 MOV X1, X19
	0x03D1B644 BL 0x3D1C498
	0x03D1B648 MOV X0, X20
	0x03D1B64C MOV X1, X19
	0x03D1B650 LDP X20, X19, [X31 + 0x20]
	0x03D1B654 LDP X22, X21, [X31 + 0x10]
	0x03D1B658 LDR X30, [X31], #0x30
	0x03D1B65C B 0x3D1C568
	0x03D1B660 BL 0x1C16F20
	0x03D1B664 SUB X31, X31, 0xA0
	0x03D1B668 STR X30, [X31 + 0x60]
	0x03D1B66C STP X24, X23, [X31 + 0x70]
	0x03D1B670 STP X22, X21, [X31 + 0x80]
	0x03D1B674 STP X20, X19, [X31 + 0x90]
	0x03D1B678 ADRP X20, 0x6CC000
	0x03D1B67C LDRB W8, [X20 + 0x93F]
	0x03D1B680 MOV X19, X0
	0x03D1B684 TBNZ X8, 0x0, 0x3D1B6D8
	0x03D1B688 ADRP X0, 0x449000
	0x03D1B68C LDR X0, [X0 + 0x268]
	0x03D1B690 BL 0x1C16CF4
	0x03D1B694 ADRP X0, 0x447000
	0x03D1B698 LDR X0, [X0 + 0x7D8]
	0x03D1B69C BL 0x1C16CF4
	0x03D1B6A0 ADRP X0, 0x447000
	0x03D1B6A4 LDR X0, [X0 + 0x7E0]
	0x03D1B6A8 BL 0x1C16CF4
	0x03D1B6AC ADRP X0, 0x447000
	0x03D1B6B0 LDR X0, [X0 + 0x7E8]
	0x03D1B6B4 BL 0x1C16CF4
	0x03D1B6B8 ADRP X0, 0x447000
	0x03D1B6BC LDR X0, [X0 + 0x7F0]
	0x03D1B6C0 BL 0x1C16CF4
	0x03D1B6C4 ADRP X0, 0x447000
	0x03D1B6C8 LDR X0, [X0 + 0x7F8]
	0x03D1B6CC BL 0x1C16CF4
	0x03D1B6D0 MOVZ W8, 0x1
	0x03D1B6D4 STRB W8, [X20 + 0x93F]
	0x03D1B6D8 STP X31, X31, [X31 + 0x40]
	0x03D1B6DC STR X31, [X31 + 0x50]
	0x03D1B6E0 STP X31, X31, [X31 + 0x20]
	0x03D1B6E4 STR X31, [X31 + 0x30]
	0x03D1B6E8 LDP W8, W9, [X19 + 0x34]
	0x03D1B6EC CMP W8, W9
	0x03D1B6F0 B.EQ 0x3D1B870
	0x03D1B6F4 MOV X0, X19
	0x03D1B6F8 STR W8, [X19 + 0x38]
	0x03D1B6FC BL 0x3D1B990
	0x03D1B700 LDR X0, [X19 + 0x40]
	0x03D1B704 CBZ X0, 0x3D1B894
	0x03D1B708 BL 0x3D1BA7C
	0x03D1B70C LDR X0, [X19 + 0x20]
	0x03D1B710 CBZ X0, 0x3D1B894
	0x03D1B714 ADRP X24, 0x447000
	0x03D1B718 LDR X24, [X24 + 0x7F8]
	0x03D1B71C ADD X8, X31, 0x8
	0x03D1B720 LDR X1, [X24]
	0x03D1B724 BL 0x2DBE924
	0x03D1B728 LDUR V0, [X31 + 0x8]
	0x03D1B72C LDR X8, [X31 + 0x18]
	0x03D1B730 ADRP X23, 0x447000
	0x03D1B734 STR V0, [X31 + 0x4]
	0x03D1B738 STR X8, [X31 + 0x50]
	0x03D1B73C LDR X23, [X23 + 0x7E0]
	0x03D1B740 LDR X1, [X23]
	0x03D1B744 ADD X0, X31, 0x40
	0x03D1B748 BL 0x2BC3C64
	0x03D1B74C TBZ X0, 0x0, 0x3D1B768
	0x03D1B750 LDR X0, [X19 + 0x40]
	0x03D1B754 CBZ X0, 0x3D1B888
	0x03D1B758 LDR X1, [X31 + 0x50]
	0x03D1B75C MOVZ W2, 0x10
	0x03D1B760 BL 0x3D1B5E4
	0x03D1B764 B 0x3D1B740
	0x03D1B768 ADRP X8, 0x447000
	0x03D1B76C LDR X8, [X8 + 0x7D8]
	0x03D1B770 ADD X0, X31, 0x40
	0x03D1B774 LDR X1, [X8]
	0x03D1B778 BL 0x2BC3C60
	0x03D1B77C LDR X0, [X19 + 0x20]
	0x03D1B780 CBZ X0, 0x3D1B894
	0x03D1B784 ADRP X22, 0x447000
	0x03D1B788 LDR X22, [X22 + 0x7F0]
	0x03D1B78C LDR X1, [X22]
	0x03D1B790 BL 0x2DBE450
	0x03D1B794 LDR X0, [X19 + 0x28]
	0x03D1B798 CBZ X0, 0x3D1B894
	0x03D1B79C LDR X1, [X24]
	0x03D1B7A0 ADD X8, X31, 0x8
	0x03D1B7A4 BL 0x2DBE924
	0x03D1B7A8 LDUR V0, [X31 + 0x8]
	0x03D1B7AC LDR X8, [X31 + 0x18]
	0x03D1B7B0 ADRP X24, 0x449000
	0x03D1B7B4 STR V0, [X31 + 0x2]
	0x03D1B7B8 STR X8, [X31 + 0x30]
	0x03D1B7BC LDR X24, [X24 + 0x268]
	0x03D1B7C0 LDR X1, [X23]
	0x03D1B7C4 ADD X0, X31, 0x20
	0x03D1B7C8 BL 0x2BC3C64
	0x03D1B7CC TBZ X0, 0x0, 0x3D1B84C
	0x03D1B7D0 LDR X20, [X31 + 0x30]
	0x03D1B7D4 CBZ X20, 0x3D1B88C
	0x03D1B7D8 MOV X0, X20
	0x03D1B7DC MOV X1, X31
	0x03D1B7E0 BL 0x3DE9658
	0x03D1B7E4 TBNZ X0, 0x0, 0x3D1B7F8
	0x03D1B7E8 MOV X0, X20
	0x03D1B7EC MOV X1, X31
	0x03D1B7F0 BL 0x3DE9704
	0x03D1B7F4 TBZ X0, 0x0, 0x3D1B7C0
	0x03D1B7F8 MOV X0, X20
	0x03D1B7FC MOV X1, X31
	0x03D1B800 BL 0x3DE0F44
	0x03D1B804 MOV X21, X0
	0x03D1B808 LDR X0, [X24]
	0x03D1B80C LDR W8, [X0 + 0xE0]
	0x03D1B810 CBNZ W8, 0x3D1B818
	0x03D1B814 BL 0x1C16DFC
	0x03D1B818 MOV X0, X21
	0x03D1B81C MOV X1, X31
	0x03D1B820 BL 0x3DE2B24

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X21, 0x6CD000
	010 Move X20, 0x403000
	011 Move W8, [X21+2349]
	012 Move X20, [X20+3336]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0x44A000
	019 Move X0, [X0+416]
	020 Call 0x1C17CF4
	021 Move X0, 0x44A000
	022 Move X0, [X0+376]
	023 Call 0x1C17CF4
	024 Move X0, 0x44A000
	025 Move X0, [X0+384]
	026 Call 0x1C17CF4
	027 Move X0, 0x44A000
	028 Move X0, [X0+392]
	029 Call 0x1C17CF4
	030 Move X0, 0x44A000
	031 Move X0, [X0+424]
	032 Call 0x1C17CF4
	033 Move X0, 0x44A000
	034 Move X0, [X0+432]
	035 Call 0x1C17CF4
	036 Move X0, 0x44A000
	037 Move X0, [X0+400]
	038 Call 0x1C17CF4
	039 Move X0, 0x403000
	040 Move X0, [X0+3336]
	041 Call 0x1C17CF4
	042 Move X0, 0x44A000
	043 Move X0, [X0+360]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+2349], W8
	047 Move X0, [X20]
	048 Move [X31+32], X31
	049 Move [X31+40], X31
	050 Move [X31+48], X31
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X31
	056 Call Panel.TimeSinceStartupMs
	057 Move W8, [X19+49]
	058 Move X20, X0
	059 Compare W8, 0
	060 JumpIfEqual {68}
	061 Move X8, 0x44A000
	062 Move X8, [X8+416]
	063 Move X0, [X19+32]
	064 Move X1, [X8]
	065 Call Enumerable.ToList, X0
	066 Move [X19+40], X0
	067 Move [X19+49], W31
	068 Move W8, [X19+48]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Move X8, [X19+56]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, [X19+40]
	074 Compare X0, 0
	075 JumpIfEqual {223}
	076 Move X8, 0x44A000
	077 Move X8, [X8+400]
	078 Move X23, 0x44A000
	079 Move X24, 0x44A000
	080 Move X22, 0x44A000
	081 Move X1, [X8]
	082 Move X23, [X23+384]
	083 Move X24, [X24+432]
	084 Move X22, [X22+376]
	085 Add X8, X31, 8
	086 Call List`1<Object>.GetEnumerator, X0
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Move X8, [X31+24]
	089 Move [X31+2], V0
	090 Move [X31+48], X8
	091 Move X1, [X23]
	092 Add X0, X31, 32
	093 Call Enumerator<Object>.MoveNext, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {123}
	098 Move X21, [X31+48]
	099 Compare X21, 0
	100 JumpIfEqual {221}
	101 Move X8, [X21]
	102 Move X1, [X24]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move X0, X21
	113 Move W2, W31
	114 Call 0x1C5D788
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Add X8, X8, X9
	117 Add X0, X8, 312
	118 Move X8, [X0]
	119 Move X2, [X0+8]
	120 Move X0, X21
	121 Move X1, X20
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X1, [X22]
	124 Add X0, X31, 32
	125 Call Enumerator<Object>.Dispose, X0
	126 Move [X19+48], W31
	127 Move [X19+56], X20
	128 Move X0, [X19+24]
	129 Compare X0, 0
	130 JumpIfEqual {223}
	131 Move X8, [X0]
	132 Move X19, 0x44A000
	133 Move X9, [X8+984]
	134 Move X1, [X8+992]
	135 Move X19, [X19+360]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X8, [X19]
	138 Move X20, X0
	139 Move W9, [X8+224]
	140 Compare W9, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X8
	143 Call 0x1C17DFC
	144 Move X21, 0x6CD000
	145 Move W8, [X21+2739]
	146 Compare W8, 0
	147 JumpIfNotEqual {153}
	148 Move X0, 0x44A000
	149 Move X0, [X0+360]
	150 Call 0x1C17CF4
	151 Move W8, 1
	152 Move [X21+2739], W8
	153 Move X0, [X19]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {159}
	157 Call 0x1C17DFC
	158 Move X0, [X19]
	159 Move X8, [X0+184]
	160 Move X1, X31
	161 Move X2, X31
	162 Move X19, [X8+24]
	163 Move X0, X19
	164 Call IntPtr.op_Inequality, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {172}
	169 Move X0, X19
	170 Move X1, X31
	171 Call ProfilerUnsafeUtility.BeginSample, X0
	172 Compare X20, 0
	173 JumpIfEqual {224}
	174 Move X10, 0x44A000
	175 Move X8, [X20]
	176 Move X10, [X10+424]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Move X1, [X10]
	179 Compare X9, 0
	180 JumpIfEqual {187}
	181 Move X10, [X8+176]
	182 Add X10, X10, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X9, X9, 1
	186 Add X10, X10, 16
	187 Move W2, 20
	188 Move X0, X20
	189 Call 0x1C5D788
	190 Move W9, [X10]
	191 Add W9, W9, 20
	192 Add X8, X8, W9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X20
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Move X20, X31
	199 Move X0, X19
	200 Move X1, X31
	201 Move X2, X31
	202 Call IntPtr.op_Inequality, X0, X1
	203 Move TEMP, X0
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfNotEqual {210}
	207 Move X0, X19
	208 Move X1, X31
	209 Call ProfilerUnsafeUtility.EndSample, X0
	210 Compare X20, 0
	211 JumpIfNotEqual {225}
	212 Move X20, [X31+112]
	213 Move X19, [X31+120]
	214 Move X22, [X31+96]
	215 Move X21, [X31+104]
	216 Move X24, [X31+80]
	217 Move X23, [X31+88]
	218 Move X30, [X31+64]
	219 Add X31, X31, 128
	220 Return 
	221 Move X23, X22
	222 Call 0x1C17F20
	223 Call 0x1C17F20
	224 Call 0x1C17F20
	225 Move X0, X20
	226 Call 0x1C17F18
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X21, X0
	229 Move X0, X21
	230 Call 0x3EB2AD0
	231 Move X20, [X0]
	232 Call 0x3EB2AE0
	233 Move X20, X31
	234 Move X21, X0
	235 Move X0, X19
	236 Move X1, X31
	237 Move X2, X31
	238 Call IntPtr.op_Inequality, X0, X1
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfNotEqual {246}
	243 Move X0, X19
	244 Move X1, X31
	245 Call ProfilerUnsafeUtility.EndSample, X0
	246 Compare X20, 0
	247 JumpIfEqual {271}
	248 Move X0, X20
	249 Call 0x1C17F18
	250 Move X23, X22
	251 Move X21, X0
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X0, X21
	254 Call 0x3EB2AD0
	255 Move X22, [X0]
	256 Call 0x3EB2AE0
	257 Move X1, [X23]
	258 Add X0, X31, 32
	259 Call Enumerator<Object>.Dispose, X0
	260 Compare X22, 0
	261 JumpIfEqual {126}
	262 Move X0, X22
	263 Call 0x1C17F18
	264 Move X22, X31
	265 Move X21, X0
	266 Move X1, [X23]
	267 Add X0, X31, 32
	268 Call Enumerator<Object>.Dispose, X0
	269 Compare X22, 0
	270 JumpIfNotEqual {273}
	271 Move X0, X21
	272 Call 0x1D2D690
	273 Move X0, X22
	274 Call 0x1C17F18
	275 Call 0x1991590

Method: System.Void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType)

Disassembly:
	0x03D1B82C MOV X1, X31

ISIL:
	001 Return 

Method: System.Void .ctor()

Disassembly:
	0x03D1B830 BL 0x3DE0F44
	0x03D1B834 CBZ X21, 0x3D1B890
	0x03D1B838 MOV X2, X0
	0x03D1B83C MOV X0, X21
	0x03D1B840 MOV X1, X20
	0x03D1B844 BL 0x3D1BB20
	0x03D1B848 B 0x3D1B7C0
	0x03D1B84C ADRP X8, 0x447000
	0x03D1B850 LDR X8, [X8 + 0x7D8]
	0x03D1B854 ADD X0, X31, 0x20
	0x03D1B858 LDR X1, [X8]
	0x03D1B85C BL 0x2BC3C60
	0x03D1B860 LDR X0, [X19 + 0x28]
	0x03D1B864 CBZ X0, 0x3D1B894
	0x03D1B868 LDR X1, [X22]
	0x03D1B86C BL 0x2DBE450
	0x03D1B870 LDP X20, X19, [X31 + 0x90]
	0x03D1B874 LDP X22, X21, [X31 + 0x80]
	0x03D1B878 LDP X24, X23, [X31 + 0x70]
	0x03D1B87C LDR X30, [X31 + 0x60]
	0x03D1B880 ADD X31, X31, 0xA0
	0x03D1B884 RET
	0x03D1B888 BL 0x1C16F20
	0x03D1B88C BL 0x1C16F20
	0x03D1B890 BL 0x1C16F20
	0x03D1B894 BL 0x1C16F20
	0x03D1B898 B 0x3D1B91C
	0x03D1B89C B 0x3D1B91C
	0x03D1B8A0 B 0x3D1B91C
	0x03D1B8A4 B 0x3D1B91C
	0x03D1B8A8 B 0x3D1B8B4
	0x03D1B8AC B 0x3D1B8B4
	0x03D1B8B0 B 0x3D1B91C
	0x03D1B8B4 MOV X20, X0
	0x03D1B8B8 CMP W1, 0x1
	0x03D1B8BC B.NE 0x3D1B8EC
	0x03D1B8C0 MOV X0, X20
	0x03D1B8C4 BL 0x3EB1AD0
	0x03D1B8C8 LDR X21, [X0]
	0x03D1B8CC BL 0x3EB1AE0
	0x03D1B8D0 ADRP X8, 0x447000
	0x03D1B8D4 LDR X8, [X8 + 0x7D8]
	0x03D1B8D8 ADD X0, X31, 0x40
	0x03D1B8DC LDR X1, [X8]
	0x03D1B8E0 BL 0x2BC3C60
	0x03D1B8E4 CBZ X21, 0x3D1B77C
	0x03D1B8E8 B 0x3D1B950
	0x03D1B8EC MOV X21, X31
	0x03D1B8F0 B 0x3D1B8F8
	0x03D1B8F4 MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x6CD000
	009 Move X24, 0x44A000
	010 Move X20, 0x44A000
	011 Move X22, 0x44A000
	012 Move X21, 0x44A000
	013 Move W8, [X23+2350]
	014 Move X24, [X24+440]
	015 Move X20, [X20+448]
	016 Move X22, [X22+456]
	017 Move X21, [X21+464]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x44A000
	024 Move X0, [X0+448]
	025 Call 0x1C17CF4
	026 Move X0, 0x44A000
	027 Move X0, [X0+440]
	028 Call 0x1C17CF4
	029 Move X0, 0x44A000
	030 Move X0, [X0+464]
	031 Call 0x1C17CF4
	032 Move X0, 0x44A000
	033 Move X0, [X0+456]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+2350], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call HashSet`1<Object>..ctor, X0
	042 Move [X19+32], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call List`1<Object>..ctor, X0
	048 Move [X19+40], X20
	049 NotImplemented "Instruction STRH not yet implemented."
	050 Move X0, X19
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 Move X1, X31
	058 Move X30, [X31+64]
	059 Call Object..ctor, X0
	060 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D1B900 LDR X1, [X8]
	0x03D1B904 ADD X0, X31, 0x40
	0x03D1B908 BL 0x2BC3C60
	0x03D1B90C CBZ X21, 0x3D1B97C
	0x03D1B910 MOV X0, X21
	0x03D1B914 BL 0x1C16F18
	0x03D1B918 B 0x3D1B91C
	0x03D1B91C MOV X20, X0
	0x03D1B920 CMP W1, 0x1
	0x03D1B924 B.NE 0x3D1B958
	0x03D1B928 MOV X0, X20
	0x03D1B92C BL 0x3EB1AD0
	0x03D1B930 LDR X21, [X0]
	0x03D1B934 BL 0x3EB1AE0
	0x03D1B938 ADRP X8, 0x447000
	0x03D1B93C LDR X8, [X8 + 0x7D8]
	0x03D1B940 ADD X0, X31, 0x20
	0x03D1B944 LDR X1, [X8]
	0x03D1B948 BL 0x2BC3C60
	0x03D1B94C CBZ X21, 0x3D1B860
	0x03D1B950 MOV X0, X21
	0x03D1B954 BL 0x1C16F18
	0x03D1B958 MOV X21, X31
	0x03D1B95C B 0x3D1B964
	0x03D1B960 MOV X20, X0
	0x03D1B964 ADRP X8, 0x447000
	0x03D1B968 LDR X8, [X8 + 0x7D8]
	0x03D1B96C LDR X1, [X8]
	0x03D1B970 ADD X0, X31, 0x20
	0x03D1B974 BL 0x2BC3C60
	0x03D1B978 CBNZ X21, 0x3D1B984
	0x03D1B97C MOV X0, X20
	0x03D1B980 BL 0x1D2C690
	0x03D1B984 MOV X0, X21
	0x03D1B988 BL 0x1C16F18
	0x03D1B98C BL 0x1990590
	0x03D1B990 STR X30, [X31 - 0x20]!
	0x03D1B994 STP X20, X19, [X31 + 0x10]
	0x03D1B998 ADRP X20, 0x6CC000
	0x03D1B99C LDRB W8, [X20 + 0x940]
	0x03D1B9A0 MOV X19, X0
	0x03D1B9A4 TBNZ X8, 0x0, 0x3D1B9BC
	0x03D1B9A8 ADRP X0, 0x3D8000
	0x03D1B9AC LDR X0, [X0 + 0xA28]
	0x03D1B9B0 BL 0x1C16CF4
	0x03D1B9B4 MOVZ W8, 0x1
	0x03D1B9B8 STRB W8, [X20 + 0x940]
	0x03D1B9BC LDR X0, [X19 + 0x18]
	0x03D1B9C0 CBZ X0, 0x3D1BA78
	0x03D1B9C4 LDR X8, [X0]
	0x03D1B9C8 LDR X9, [X8 + 0x398]
	0x03D1B9CC LDR X1, [X8 + 0x3A0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6CD000
	007 Move X21, 0x44A000
	008 Move X19, 0x44A000
	009 Move X20, 0x44A000
	010 Move W8, [X22+2351]
	011 Move X21, [X21+472]
	012 Move X19, [X19+360]
	013 Move X20, [X20+480]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x44A000
	019 Move X0, [X0+360]
	020 Call 0x1C17CF4
	021 Move X0, 0x44A000
	022 Move X0, [X0+480]
	023 Call 0x1C17CF4
	024 Move X0, 0x44A000
	025 Move X0, [X0+472]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2351], W8
	029 Move X8, [X19]
	030 Move X9, [X21]
	031 Move W1, 1
	032 Move W2, W31
	033 Move X8, [X8+184]
	034 Move W3, W31
	035 Move X4, X31
	036 Move [X8], X9
	037 Move X8, [X19]
	038 Move X8, [X8+184]
	039 Move X0, [X8]
	040 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	041 Move X8, [X19]
	042 Move W1, 1
	043 Move W2, W31
	044 Move W3, W31
	045 Move X8, [X8+184]
	046 Move X4, X31
	047 Move [X8+8], X0
	048 Move X0, [X20]
	049 Move [X8+16], X0
	050 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	051 Move X8, [X19]
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X8, [X8+184]
	057 Move [X8+24], X0
	058 Move X30, [X31+48]
	059 Return 

