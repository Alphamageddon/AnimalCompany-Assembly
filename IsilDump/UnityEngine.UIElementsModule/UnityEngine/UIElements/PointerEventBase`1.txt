Type: UnityEngine.UIElements.PointerEventBase`1

Method: System.Int32 get_pointerId()

Disassembly:
	0x024A3EA8 STR W22, [X20 + 0xB0]
	0x024A3EAC BL 0x3C62C40

ISIL:
	001 Move W0, [X0+156]
	002 Return X0

Method: System.Void set_pointerId(System.Int32 value)

Disassembly:
	0x024A3EB0 LDR X0, [X19]
	0x024A3EB4 MOV V8.16B, V0.16B

ISIL:
	001 Move [X0+156], W1
	002 Return 

Method: System.String get_pointerType()

Disassembly:
	0x024A3EB8 MOV V9.16B, V1.16B
	0x024A3EBC LDRB W8, [X0 + 0x135]

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.Void set_pointerType(System.String value)

Disassembly:
	0x024A3EC0 TBNZ X8, 0x0, 0x24A3EC8
	0x024A3EC4 BL 0x1C5C684

ISIL:
	001 Move [X0+160], X1
	002 Return 

Method: System.Boolean get_isPrimary()

Disassembly:
	0x024A3EC8 MOV X0, X21
	0x024A3ECC MOV X1, X31

ISIL:
	001 Move W0, [X0+168]
	002 Return X0

Method: System.Void set_isPrimary(System.Boolean value)

Disassembly:
	0x024A3ED0 STP S8, S9, [X20 + 0xB4]
	0x024A3ED4 STR W31, [X20 + 0xBC]
	0x024A3ED8 BL 0x3C62C40

ISIL:
	001 And W8, W1, 1
	002 Move [X0+168], W8
	003 Return 

Method: System.Int32 get_button()

Disassembly:
	0x024A3EDC LDR X0, [X19]
	0x024A3EE0 MOV V8.16B, V0.16B

ISIL:
	001 Move W0, [X0+172]
	002 Return X0

Method: System.Void set_button(System.Int32 value)

Disassembly:
	0x024A3EE4 MOV V9.16B, V1.16B
	0x024A3EE8 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X0+172], W1
	002 Return 

Method: System.Int32 get_pressedButtons()

Disassembly:
	0x024A3EEC TBNZ X8, 0x0, 0x24A3EF4
	0x024A3EF0 BL 0x1C5C684

ISIL:
	001 Move W0, [X0+176]
	002 Return X0

Method: System.Void set_pressedButtons(System.Int32 value)

Disassembly:
	0x024A3EF4 MOV X0, X21
	0x024A3EF8 MOV X1, X31

ISIL:
	001 Move [X0+176], W1
	002 Return 

Method: UnityEngine.Vector3 get_position()

Disassembly:
	0x024A3EFC STP S8, S9, [X20 + 0xC0]
	0x024A3F00 STR W31, [X20 + 0xC8]
	0x024A3F04 BL 0x3C62D5C

ISIL:
	001 Move S0, [X0+180]
	002 Move S1, [X0+184]
	003 Move V2, [X0+188]
	004 Return X0

Method: System.Void set_position(UnityEngine.Vector3 value)

Disassembly:
	0x024A3F08 LDR X0, [X19]
	0x024A3F0C MOV V8.16B, V0.16B
	0x024A3F10 MOV V9.16B, V1.16B

ISIL:
	001 Move [X0+180], S0
	002 Move [X0+188], S1
	003 Move [X0+188], S2
	004 Return 

Method: UnityEngine.Vector3 get_localPosition()

Disassembly:
	0x024A3F14 LDRB W8, [X0 + 0x135]
	0x024A3F18 TBNZ X8, 0x0, 0x24A3F20
	0x024A3F1C BL 0x1C5C684

ISIL:
	001 Move S0, [X0+192]
	002 Move S1, [X0+196]
	003 Move V2, [X0+200]
	004 Return X0

Method: System.Void set_localPosition(UnityEngine.Vector3 value)

Disassembly:
	0x024A3F20 MOV X0, X21
	0x024A3F24 MOV X1, X31
	0x024A3F28 STP S8, S9, [X20 + 0xCC]

ISIL:
	001 Move [X0+192], S0
	002 Move [X0+200], S1
	003 Move [X0+200], S2
	004 Return 

Method: UnityEngine.Vector3 get_deltaPosition()

Disassembly:
	0x024A3F2C STR W31, [X20 + 0xD4]
	0x024A3F30 BL 0x3C630B4
	0x024A3F34 LDR X8, [X19]

ISIL:
	001 Move S0, [X0+204]
	002 Move S1, [X0+208]
	003 Move V2, [X0+212]
	004 Return X0

Method: System.Void set_deltaPosition(UnityEngine.Vector3 value)

Disassembly:
	0x024A3F38 MOV W22, W0
	0x024A3F3C LDRB W9, [X8 + 0x135]
	0x024A3F40 TBNZ X9, 0x0, 0x24A3F4C

ISIL:
	001 Move [X0+204], S0
	002 Move [X0+212], S1
	003 Move [X0+212], S2
	004 Return 

Method: System.Single get_deltaTime()

Disassembly:
	0x024A3F44 MOV X0, X8
	0x024A3F48 BL 0x1C5C684

ISIL:
	001 Move V0, [X0+216]
	002 Return V0

Method: System.Void set_deltaTime(System.Single value)

Disassembly:
	0x024A3F4C MOV X0, X21
	0x024A3F50 MOV X1, X31

ISIL:
	001 Move [X0+216], S0
	002 Return 

Method: System.Int32 get_clickCount()

Disassembly:
	0x024A3F54 STR W22, [X20 + 0xDC]
	0x024A3F58 BL 0x3C62EF0

ISIL:
	001 Move W0, [X0+220]
	002 Return X0

Method: System.Void set_clickCount(System.Int32 value)

Disassembly:
	0x024A3F5C LDR X8, [X19]
	0x024A3F60 MOV W22, W0

ISIL:
	001 Move [X0+220], W1
	002 Return 

Method: System.Single get_pressure()

Disassembly:
	0x024A3F64 LDRB W9, [X8 + 0x135]
	0x024A3F68 TBNZ X9, 0x0, 0x24A3F74

ISIL:
	001 Move V0, [X0+224]
	002 Return V0

Method: System.Void set_pressure(System.Single value)

Disassembly:
	0x024A3F6C MOV X0, X8
	0x024A3F70 BL 0x1C5C684

ISIL:
	001 Move [X0+224], S0
	002 Return 

Method: System.Single get_tangentialPressure()

Disassembly:
	0x024A3F74 MOV X0, X21
	0x024A3F78 MOV X1, X31

ISIL:
	001 Move V0, [X0+228]
	002 Return V0

Method: System.Void set_tangentialPressure(System.Single value)

Disassembly:
	0x024A3F7C STR W22, [X20 + 0x100]
	0x024A3F80 BL 0x3C62FE8

ISIL:
	001 Move [X0+228], S0
	002 Return 

Method: System.Single get_altitudeAngle()

Disassembly:
	0x024A3F84 LDR X0, [X19]
	0x024A3F88 MOV V8.16B, V0.16B
	0x024A3F8C MOV V9.16B, V1.16B
	0x024A3F90 LDRB W8, [X0 + 0x135]
	0x024A3F94 TBNZ X8, 0x0, 0x24A3F9C
	0x024A3F98 BL 0x1C5C684
	0x024A3F9C MOVZ W8, 0x1
	0x024A3FA0 MOV X0, X21
	0x024A3FA4 MOV X1, X31
	0x024A3FA8 STRB W8, [X20 + 0x90]
	0x024A3FAC STP S8, S9, [X20 + 0x94]
	0x024A3FB0 BL 0x3C63078
	0x024A3FB4 LDR X8, [X19]
	0x024A3FB8 MOV W22, W0
	0x024A3FBC LDRB W9, [X8 + 0x135]
	0x024A3FC0 TBNZ X9, 0x0, 0x24A3FCC
	0x024A3FC4 MOV X0, X8
	0x024A3FC8 BL 0x1C5C684
	0x024A3FCC MOV X0, X21
	0x024A3FD0 MOV X1, X31
	0x024A3FD4 STR W22, [X20 + 0xEC]
	0x024A3FD8 BL 0x3C62FAC
	0x024A3FDC LDR X0, [X19]
	0x024A3FE0 MOV V8.16B, V0.16B
	0x024A3FE4 LDRB W8, [X0 + 0x135]
	0x024A3FE8 TBNZ X8, 0x0, 0x24A3FF0
	0x024A3FEC BL 0x1C5C684

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move W8, [X0+132]
	006 Move X19, X0
	007 Compare W8, 0
	008 JumpIfEqual {26}
	009 Move X8, [X1+32]
	010 Move X0, X19
	011 Move X8, [X8+192]
	012 Move X1, [X8+8]
	013 Call 0x24A4060, X0
	014 Move V8, V1
	015 Call 0x3EB2BD0
	016 Move V9, V0
	017 Move V0, V8
	018 Call 0x3EB2BD0
	019 Multiply S0, S9, S0
	020 Call 0x3EB2BB0
	021 Move X8, -26968064
	022 Move V1, [X8+384]
	023 Move [X19+132], W31
	024 Subtract S0, S1, S0
	025 Move [X19+136], S0
	026 Move V0, [X19+136]
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Move D9, [X31+32]
	030 Move D8, [X31+40]
	031 Return V0

Method: System.Void set_altitudeAngle(System.Single value)

Disassembly:
	0x024A3FF0 MOV X0, X21
	0x024A3FF4 MOV X1, X31
	0x024A3FF8 STR S8, [X20 + 0xE8]
	0x024A3FFC BL 0x3C62E78

ISIL:
	001 Move W8, 1
	002 Move [X0+132], W8
	003 Move [X0+136], S0
	004 Return 

Method: System.Single get_azimuthAngle()

Disassembly:
	0x024A4000 CMP W0, 0x1
	0x024A4004 B.EQ 0x24A4010
	0x024A4008 CMP W0, 0x2
	0x024A400C B.NE 0x24A4090
	0x024A4010 MOV X0, X21
	0x024A4014 MOV X1, X31
	0x024A4018 BL 0x3C62F70
	0x024A401C LDR X0, [X19]
	0x024A4020 MOV V8.16B, V0.16B
	0x024A4024 LDRB W8, [X0 + 0x135]
	0x024A4028 TBNZ X8, 0x0, 0x24A4030
	0x024A402C BL 0x1C5C684
	0x024A4030 STR S8, [X20 + 0xE0]
	0x024A4034 LDR X0, [X19]
	0x024A4038 ADRP X19, 0x1C78000
	0x024A403C LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+133]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {15}
	007 Move X8, [X1+32]
	008 Move X0, X19
	009 Move X8, [X8+192]
	010 Move X1, [X8+8]
	011 Call 0x24A4060, X0
	012 Call 0x24A4664, X0
	013 Move [X19+140], S0
	014 Move [X19+133], W31
	015 Move V0, [X19+140]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return V0

Method: System.Void set_azimuthAngle(System.Single value)

Disassembly:
	0x024A4040 LDR X19, [X19 + 0xE60]
	0x024A4044 TBNZ X8, 0x0, 0x24A404C
	0x024A4048 BL 0x1C5C684
	0x024A404C LDR X8, [X20]

ISIL:
	001 Move W8, 1
	002 Move [X0+133], W8
	003 Move [X0+140], S0
	004 Return 

Method: System.Single get_twist()

Disassembly:
	0x024A4050 STR W31, [X20 + 0xE4]
	0x024A4054 LDR X1, [X19]

ISIL:
	001 Move V0, [X0+232]
	002 Return V0

Method: System.Void set_twist(System.Single value)

Disassembly:
	0x024A4058 LDRH W9, [X8 + 0x12E]
	0x024A405C CBZ X9, 0x24A4080

ISIL:
	001 Move [X0+232], S0
	002 Return 

Method: UnityEngine.Vector2 get_tilt()

Disassembly:
	0x024A4060 LDR X10, [X8 + 0xB0]
	0x024A4064 ADD X10, X10, 0x8
	0x024A4068 LDUR X11, [X10 - 0x8]
	0x024A406C CMP X11, X1
	0x024A4070 B.EQ 0x24A40CC
	0x024A4074 SUBS X9, X9, 0x1
	0x024A4078 ADD X10, X10, 0x10
	0x024A407C B.NE 0x24A4068
	0x024A4080 MOVZ W2, 0x1
	0x024A4084 MOV X0, X20
	0x024A4088 BL 0x1C5C788
	0x024A408C B 0x24A40DC
	0x024A4090 LDR X0, [X19]
	0x024A4094 ADD X8, X0, 0x135
	0x024A4098 LDRH W8, [X8]
	0x024A409C TBNZ X8, 0x0, 0x24A40B0
	0x024A40A0 BL 0x1C5C684
	0x024A40A4 LDR X0, [X19]
	0x024A40A8 ADD X8, X0, 0x135
	0x024A40AC LDRH W8, [X8]
	0x024A40B0 LDR W9, [X20 + 0xB0]
	0x024A40B4 FMOV S0, 0.5
	0x024A40B8 FMOV S1, W31
	0x024A40BC CMP W9, 0x0
	0x024A40C0 FCSEL S8, S1, S0, EQ
	0x024A40C4 TBZ X8, 0x0, 0x24A402C
	0x024A40C8 B 0x24A4030
	0x024A40CC LDR W9, [X10]
	0x024A40D0 ADD W9, W9, 0x1
	0x024A40D4 ADD X8, X8, W9, 0x4, SXTW
	0x024A40D8 ADD X0, X8, 0x138
	0x024A40DC LDP X8, X2, [X0]
	0x024A40E0 MOVZ W1, 0x1
	0x024A40E4 MOV X0, X20
	0x024A40E8 BLR X8
	0x024A40EC MOV X0, X20
	0x024A40F0 LDP X20, X19, [X31 + 0x70]
	0x024A40F4 LDP X22, X21, [X31 + 0x60]
	0x024A40F8 LDP X24, X23, [X31 + 0x50]
	0x024A40FC LDR X30, [X31 + 0x40]
	0x024A4100 LDP D9, D8, [X31 + 0x30]
	0x024A4104 ADD X31, X31, 0x80
	0x024A4108 RET
	0x024A410C MOV X0, X21
	0x024A4110 MOV X1, X31
	0x024A4114 BL 0x3C62C04
	0x024A4118 CMP W0, 0x2
	0x024A411C B.EQ 0x24A4134
	0x024A4120 MOV X0, X21
	0x024A4124 MOV X1, X31
	0x024A4128 BL 0x3C62C04
	0x024A412C CMP W0, 0x20
	0x024A4130 B.NE 0x24A3E58
	0x024A4134 LDR X0, [X19]
	0x024A4138 LDRB W8, [X0 + 0x135]
	0x024A413C TBNZ X8, 0x0, 0x24A4144

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1F36000
	006 Move X20, 0x1C50000
	007 Move W8, [X21+3003]
	008 Move X20, [X20+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x1C50000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move X0, 0x1C79000
	018 Move X0, [X0+3672]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3003], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call Application.get_platform
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, [X20]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X31
	036 Call Application.get_platform
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, 0x1C79000
	039 Move X21, [X21+3672]
	040 Move X20, [X19+160]
	041 Move X0, [X21]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X21]
	047 Move X8, [X0+184]
	048 Move X0, X20
	049 Move X2, X31
	050 Move X1, [X8+8]
	051 Call String.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {65}
	056 Move W8, [X19+144]
	057 Compare W8, 0
	058 JumpIfEqual {65}
	059 Move S0, [X19+136]
	060 Move S1, [X19+140]
	061 Call 0x24A4710, V0, V1
	062 Move [X19+148], S0
	063 Move [X19+156], S1
	064 Move [X19+144], W31
	065 Move S0, [X19+148]
	066 Move S1, [X19+152]
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Return X0

Method: System.Void set_tilt(UnityEngine.Vector2 value)

Disassembly:
	0x024A4140 BL 0x1C5C684
	0x024A4144 MOVN W22, 0x0
	0x024A4148 B 0x24A3E54
	0x024A414C BL 0x1C16F20

ISIL:
	001 Move W8, 1
	002 Move [X0+144], W8
	003 Move [X0+148], S0
	004 Move [X0+156], S1
	005 Return 

Method: UnityEngine.PenStatus get_penStatus()

Disassembly:
	0x024A4150 BL 0x1C16F28
	0x024A4154 STR D12, [X31 - 0x70]!

ISIL:
	001 Move W0, [X0+236]
	002 Return X0

Method: System.Void set_penStatus(UnityEngine.PenStatus value)

Disassembly:
	0x024A4158 STP D11, D10, [X31 + 0x8]
	0x024A415C STP D9, D8, [X31 + 0x18]

ISIL:
	001 Move [X0+236], W1
	002 Return 

Method: UnityEngine.Vector2 get_radius()

Disassembly:
	0x024A4160 STR X30, [X31 + 0x28]
	0x024A4164 STP X26, X25, [X31 + 0x30]

ISIL:
	001 Move S0, [X0+240]
	002 Move S1, [X0+244]
	003 Return X0

Method: System.Void set_radius(UnityEngine.Vector2 value)

Disassembly:
	0x024A4168 STP X24, X23, [X31 + 0x40]
	0x024A416C STP X22, X21, [X31 + 0x50]

ISIL:
	001 Move [X0+240], S0
	002 Move [X0+248], S1
	003 Return 

Method: UnityEngine.Vector2 get_radiusVariance()

Disassembly:
	0x024A4170 STP X20, X19, [X31 + 0x60]
	0x024A4174 ADRP X21, 0x1F35000

ISIL:
	001 Move S0, [X0+248]
	002 Move S1, [X0+252]
	003 Return X0

Method: System.Void set_radiusVariance(UnityEngine.Vector2 value)

Disassembly:
	0x024A4178 LDRB W8, [X21 + 0xBC0]
	0x024A417C MOV X19, X4

ISIL:
	001 Move [X0+248], S0
	002 Move [X0+256], S1
	003 Return 

Method: UnityEngine.EventModifiers get_modifiers()

Disassembly:
	0x024A4180 MOV W20, W3
	0x024A4184 MOV W22, W2

ISIL:
	001 Move W0, [X0+256]
	002 Return X0

Method: System.Void set_modifiers(UnityEngine.EventModifiers value)

Disassembly:
	0x024A4188 MOV W23, W1
	0x024A418C MOV V8.16B, V4.16B

ISIL:
	001 Move [X0+256], W1
	002 Return 

Method: System.Boolean get_shiftKey()

Disassembly:
	0x024A4190 MOV V9.16B, V3.16B
	0x024A4194 MOV V10.16B, V2.16B
	0x024A4198 MOV V11.16B, V1.16B

ISIL:
	001 Move W8, [X0+256]
	002 And W0, W8, 1
	003 Return X0

Method: System.Boolean get_ctrlKey()

Disassembly:
	0x024A419C MOV V12.16B, V0.16B
	0x024A41A0 MOV W24, W0
	0x024A41A4 TBNZ X8, 0x0, 0x24A41E0

ISIL:
	001 Move W8, [X0+256]
	002 Move W0, W8
	003 ShiftRight W0, 1
	004 And W0, W0, 1
	005 Return X0

Method: System.Boolean get_commandKey()

Disassembly:
	0x024A41A8 ADRP X0, 0x1C78000
	0x024A41AC LDR X0, [X0 + 0xE60]
	0x024A41B0 BL 0x1C16CF4

ISIL:
	001 Move W8, [X0+256]
	002 Move W0, W8
	003 ShiftRight W0, 3
	004 And W0, W0, 7
	005 Return X0

Method: System.Boolean get_altKey()

Disassembly:
	0x024A41B4 ADRP X0, 0x1C77000
	0x024A41B8 LDR X0, [X0 + 0x958]
	0x024A41BC BL 0x1C16CF4

ISIL:
	001 Move W8, [X0+256]
	002 Move W0, W8
	003 ShiftRight W0, 2
	004 And W0, W0, 3
	005 Return X0

Method: System.Boolean get_actionKey()

Disassembly:
	0x024A41C0 ADRP X0, 0x1C78000
	0x024A41C4 LDR X0, [X0 + 0xE50]
	0x024A41C8 BL 0x1C16CF4
	0x024A41CC ADRP X0, 0x1C78000
	0x024A41D0 LDR X0, [X0 + 0xE58]
	0x024A41D4 BL 0x1C16CF4
	0x024A41D8 MOVZ W8, 0x1
	0x024A41DC STRB W8, [X21 + 0xBC0]
	0x024A41E0 LDR X0, [X19 + 0x20]
	0x024A41E4 LDRB W8, [X0 + 0x135]
	0x024A41E8 TBNZ X8, 0x0, 0x24A41F0
	0x024A41EC BL 0x1C5C684
	0x024A41F0 LDR X8, [X0 + 0xC0]
	0x024A41F4 LDR X0, [X8 + 0x20]
	0x024A41F8 LDRB W8, [X0 + 0x135]
	0x024A41FC TBNZ X8, 0x0, 0x24A4204
	0x024A4200 BL 0x1C5C684
	0x024A4204 LDR W8, [X0 + 0xE0]
	0x024A4208 CBNZ W8, 0x24A4210
	0x024A420C BL 0x1C16DFC
	0x024A4210 LDR X0, [X19 + 0x20]
	0x024A4214 ADRP X25, 0x1C78000
	0x024A4218 LDRB W8, [X0 + 0x135]
	0x024A421C LDR X25, [X25 + 0xE50]
	0x024A4220 TBNZ X8, 0x0, 0x24A4228
	0x024A4224 BL 0x1C5C684
	0x024A4228 LDR X8, [X0 + 0xC0]
	0x024A422C LDR X0, [X8 + 0x110]
	0x024A4230 BL 0x2D0D6C4
	0x024A4234 LDR X8, [X25]
	0x024A4238 MOV X21, X0
	0x024A423C LDR W9, [X8 + 0xE0]
	0x024A4240 CBNZ W9, 0x24A4250
	0x024A4244 MOV X0, X8
	0x024A4248 BL 0x1C16DFC
	0x024A424C LDR X8, [X25]
	0x024A4250 CBZ X21, 0x24A4500
	0x024A4254 LDR X0, [X19 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1F36000
	006 Move X20, 0x1C50000
	007 Move W8, [X21+3004]
	008 Move X20, [X20+2416]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x1C50000
	015 Move X0, [X0+2416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3004], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call Application.get_platform
	026 Compare W0, 0
	027 JumpIfEqual {39}
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X31
	034 Call Application.get_platform
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 2
	037 Move W9, 8
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Move W8, 8
	040 Move W9, [X19+256]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 And W31, W9, W8
	044 NotImplemented "Instruction CSET not yet implemented."
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return X0

Method: System.Boolean UnityEngine.UIElements.IPointerEventInternal.get_triggeredByOS()

Disassembly:
	0x024A4258 LDR X8, [X8 + 0xB8]
	0x024A425C ADRP X25, 0x1C78000

ISIL:
	001 Move W0, [X0+260]
	002 Return X0

Method: System.Void UnityEngine.UIElements.IPointerEventInternal.set_triggeredByOS(System.Boolean value)

Disassembly:
	0x024A4260 LDRB W9, [X0 + 0x135]
	0x024A4264 LDR W26, [X8 + 0x8]
	0x024A4268 LDR X25, [X25 + 0xE58]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+260], W8
	003 Return 

Method: System.Boolean UnityEngine.UIElements.IPointerEventInternal.get_recomputeTopElementUnderPointer()

Disassembly:
	0x024A426C TBNZ X9, 0x0, 0x24A4274
	0x024A4270 BL 0x1C5C684

ISIL:
	001 Move W0, [X0+261]
	002 Return X0

Method: System.Void UnityEngine.UIElements.IPointerEventInternal.set_recomputeTopElementUnderPointer(System.Boolean value)

Disassembly:
	0x024A4274 STR W26, [X21 + 0x9C]
	0x024A4278 LDR X8, [X25]
	0x024A427C LDR W9, [X8 + 0xE0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+261], W8
	003 Return 

Method: System.Void Init()

Disassembly:
	0x024A4280 CBNZ W9, 0x24A4290
	0x024A4284 MOV X0, X8
	0x024A4288 BL 0x1C16DFC
	0x024A428C LDR X8, [X25]
	0x024A4290 LDR X0, [X19 + 0x20]
	0x024A4294 LDR X8, [X8 + 0xB8]
	0x024A4298 LDRB W9, [X0 + 0x135]
	0x024A429C LDR X25, [X8]
	0x024A42A0 TBNZ X9, 0x0, 0x24A42AC
	0x024A42A4 BL 0x1C5C684
	0x024A42A8 LDR X0, [X19 + 0x20]
	0x024A42AC STR X25, [X21 + 0xA0]
	0x024A42B0 LDRB W8, [X0 + 0x135]
	0x024A42B4 TBNZ X8, 0x0, 0x24A42BC
	0x024A42B8 BL 0x1C5C684
	0x024A42BC ADRP X25, 0x1C77000
	0x024A42C0 LDR X25, [X25 + 0x958]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {19}
	006 Move X8, [X1+32]
	007 Move X20, X1
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+88]
	011 Call 0x2D0E634, X0
	012 Move X8, [X20+32]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X1, [X8+96]
	018 Move X30, [X31+32]
	019 Call 0x1C17F20

Method: System.Void LocalInit()

Disassembly:
	0x024A42C4 MOVZ W8, 0x1
	0x024A42C8 CMP W24, 0x1
	0x024A42CC STRB W8, [X21 + 0xA8]
	0x024A42D0 B.EQ 0x24A4310
	0x024A42D4 CBNZ W24, 0x24A4358
	0x024A42D8 LDR X0, [X19 + 0x20]
	0x024A42DC LDRB W8, [X0 + 0x135]
	0x024A42E0 TBNZ X8, 0x0, 0x24A42E8
	0x024A42E4 BL 0x1C5C684
	0x024A42E8 LDR X0, [X25]
	0x024A42EC LDR W24, [X21 + 0x9C]
	0x024A42F0 LDR W8, [X0 + 0xE0]
	0x024A42F4 CBNZ W8, 0x24A42FC
	0x024A42F8 BL 0x1C16DFC
	0x024A42FC MOV W0, W24
	0x024A4300 MOV W1, W23
	0x024A4304 MOV X2, X31
	0x024A4308 BL 0x3DA5914
	0x024A430C B 0x24A4344
	0x024A4310 LDR X0, [X19 + 0x20]
	0x024A4314 LDRB W8, [X0 + 0x135]
	0x024A4318 TBNZ X8, 0x0, 0x24A4320
	0x024A431C BL 0x1C5C684
	0x024A4320 LDR X0, [X25]
	0x024A4324 LDR W24, [X21 + 0x9C]
	0x024A4328 LDR W8, [X0 + 0xE0]
	0x024A432C CBNZ W8, 0x24A4334
	0x024A4330 BL 0x1C16DFC
	0x024A4334 MOV W0, W24
	0x024A4338 MOV W1, W23
	0x024A433C MOV X2, X31
	0x024A4340 BL 0x3DA5E70
	0x024A4344 LDR X0, [X19 + 0x20]
	0x024A4348 LDRB W8, [X0 + 0x135]
	0x024A434C TBNZ X8, 0x0, 0x24A436C
	0x024A4350 BL 0x1C5C684
	0x024A4354 B 0x24A436C
	0x024A4358 LDR X0, [X19 + 0x20]
	0x024A435C LDRB W8, [X0 + 0x135]
	0x024A4360 TBNZ X8, 0x0, 0x24A4368
	0x024A4364 BL 0x1C5C684
	0x024A4368 MOVN W23, 0x0
	0x024A436C STR W23, [X21 + 0xAC]
	0x024A4370 LDR X0, [X19 + 0x20]
	0x024A4374 LDRB W8, [X0 + 0x135]
	0x024A4378 TBNZ X8, 0x0, 0x24A4380
	0x024A437C BL 0x1C5C684
	0x024A4380 LDR X0, [X25]
	0x024A4384 LDR W23, [X21 + 0x9C]
	0x024A4388 LDR W8, [X0 + 0xE0]
	0x024A438C CBNZ W8, 0x24A4394
	0x024A4390 BL 0x1C16DFC
	0x024A4394 MOV W0, W23
	0x024A4398 MOV X1, X31
	0x024A439C BL 0x3DA9E70
	0x024A43A0 LDR X8, [X19 + 0x20]
	0x024A43A4 MOV W23, W0
	0x024A43A8 LDRB W9, [X8 + 0x135]
	0x024A43AC TBNZ X9, 0x0, 0x24A43BC
	0x024A43B0 MOV X0, X8
	0x024A43B4 BL 0x1C5C684
	0x024A43B8 LDR X8, [X19 + 0x20]
	0x024A43BC STR W23, [X21 + 0xB0]
	0x024A43C0 LDRB W9, [X8 + 0x135]
	0x024A43C4 TBNZ X9, 0x0, 0x24A43D0
	0x024A43C8 MOV X0, X8
	0x024A43CC BL 0x1C5C684
	0x024A43D0 STP S12, S11, [X21 + 0xB4]
	0x024A43D4 STR S10, [X21 + 0xBC]
	0x024A43D8 LDR X0, [X19 + 0x20]
	0x024A43DC LDRB W8, [X0 + 0x135]
	0x024A43E0 TBNZ X8, 0x0, 0x24A43E8
	0x024A43E4 BL 0x1C5C684
	0x024A43E8 STP S12, S11, [X21 + 0xC0]
	0x024A43EC STR S10, [X21 + 0xC8]
	0x024A43F0 LDR X0, [X19 + 0x20]
	0x024A43F4 LDRB W8, [X0 + 0x135]
	0x024A43F8 TBNZ X8, 0x0, 0x24A4400
	0x024A43FC BL 0x1C5C684
	0x024A4400 STP S9, S8, [X21 + 0xCC]
	0x024A4404 STR W31, [X21 + 0xD4]
	0x024A4408 LDR X0, [X19 + 0x20]
	0x024A440C LDRB W8, [X0 + 0x135]
	0x024A4410 TBNZ X8, 0x0, 0x24A441C
	0x024A4414 BL 0x1C5C684
	0x024A4418 LDR X0, [X19 + 0x20]
	0x024A441C STR W22, [X21 + 0xDC]
	0x024A4420 LDRB W8, [X0 + 0x135]
	0x024A4424 TBNZ X8, 0x0, 0x24A4430
	0x024A4428 BL 0x1C5C684
	0x024A442C LDR X0, [X19 + 0x20]
	0x024A4430 STR W20, [X21 + 0x100]
	0x024A4434 ADD X8, X0, 0x135
	0x024A4438 LDRH W8, [X8]
	0x024A443C TBNZ X8, 0x0, 0x24A4450
	0x024A4440 BL 0x1C5C684
	0x024A4444 LDR X0, [X19 + 0x20]
	0x024A4448 ADD X8, X0, 0x135
	0x024A444C LDRH W8, [X8]
	0x024A4450 LDR W9, [X21 + 0xB0]
	0x024A4454 ADRP X19, 0x1C78000
	0x024A4458 LDR X19, [X19 + 0xE60]
	0x024A445C FMOV S0, 0.5
	0x024A4460 CMP W9, 0x0
	0x024A4464 FMOV S1, W31
	0x024A4468 FCSEL S8, S1, S0, EQ
	0x024A446C TBNZ X8, 0x0, 0x24A4474
	0x024A4470 BL 0x1C5C684
	0x024A4474 LDR X8, [X21]
	0x024A4478 STR S8, [X21 + 0xE0]
	0x024A447C LDR X1, [X19]
	0x024A4480 LDRH W9, [X8 + 0x12E]
	0x024A4484 CBZ X9, 0x24A44A8
	0x024A4488 LDR X10, [X8 + 0xB0]
	0x024A448C ADD X10, X10, 0x8
	0x024A4490 LDUR X11, [X10 - 0x8]
	0x024A4494 CMP X11, X1
	0x024A4498 B.EQ 0x24A44B8
	0x024A449C SUBS X9, X9, 0x1
	0x024A44A0 ADD X10, X10, 0x10
	0x024A44A4 B.NE 0x24A4490
	0x024A44A8 MOVZ W2, 0x1
	0x024A44AC MOV X0, X21
	0x024A44B0 BL 0x1C5C788
	0x024A44B4 B 0x24A44C8
	0x024A44B8 LDR W9, [X10]
	0x024A44BC ADD W9, W9, 0x1
	0x024A44C0 ADD X8, X8, W9, 0x4, SXTW
	0x024A44C4 ADD X0, X8, 0x138
	0x024A44C8 LDP X8, X2, [X0]
	0x024A44CC MOVZ W1, 0x1
	0x024A44D0 MOV X0, X21
	0x024A44D4 BLR X8
	0x024A44D8 MOV X0, X21
	0x024A44DC LDP X20, X19, [X31 + 0x60]
	0x024A44E0 LDP X22, X21, [X31 + 0x50]
	0x024A44E4 LDP X24, X23, [X31 + 0x40]
	0x024A44E8 LDP X26, X25, [X31 + 0x30]
	0x024A44EC LDR X30, [X31 + 0x28]
	0x024A44F0 LDP D9, D8, [X31 + 0x18]
	0x024A44F4 LDP D11, D10, [X31 + 0x8]
	0x024A44F8 LDR V12, [X31], #0x70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x1F36000
	007 Move W8, [X20+3005]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x1C79000
	014 Move X0, [X0+3680]
	015 Call 0x1C17CF4
	016 Move X0, 0x1C79000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3005], W8
	021 Compare X19, 0
	022 JumpIfEqual {152}
	023 Move X20, 0x1C79000
	024 Move X20, [X20+3672]
	025 Move W8, 7
	026 Move X0, X19
	027 Move W1, W31
	028 Move X2, X31
	029 Move [X19+48], W8
	030 Call EventBase.set_propagateToIMGUI, X0, X1
	031 Move [X19+156], W31
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move X20, 0x1F35000
	041 Move X8, [X8+24]
	042 Move [X19+168], W31
	043 Move [X19+172], D0
	044 Move [X19+160], X8
	045 Move W8, [X20+1923]
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0x1C50000
	049 Move X0, [X0+1440]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X20+1923], W8
	053 Move X8, 0x1C50000
	054 Move X8, [X8+1440]
	055 Move W21, 1
	056 Move X22, 0x1F36000
	057 Move X20, 0x1C79000
	058 Move X8, [X8]
	059 Move X9, [X8+184]
	060 Move V0, [X9]
	061 Move V1, [X9+8]
	062 Move [X19+180], D0
	063 Move [X19+188], S1
	064 Move X9, [X8+184]
	065 Move V0, [X9]
	066 Move V1, [X9+8]
	067 Move [X19+192], D0
	068 Move [X19+200], S1
	069 Move X8, [X8+184]
	070 NotImplemented "Instruction MOVI not yet implemented."
	071 Move V1, [X8]
	072 Move V2, [X8+8]
	073 Move W8, 257
	074 Move [X19+136], D0
	075 Move [X19+148], D0
	076 Move [X19+224], X31
	077 Move [X19+232], X31
	078 Move [X19+216], X31
	079 NotImplemented "Instruction STRH not yet implemented."
	080 Move [X19+144], W21
	081 Move [X19+204], D1
	082 Move [X19+212], S2
	083 Move W8, [X22+1935]
	084 Move X20, [X20+3680]
	085 Compare W8, 0
	086 JumpIfNotEqual {91}
	087 Move X0, 0x1C58000
	088 Move X0, [X0+3848]
	089 Call 0x1C17CF4
	090 Move [X22+1935], W21
	091 Move X8, 0x1C58000
	092 Move X8, [X8+3848]
	093 Move X8, [X8]
	094 Move X9, [X8+184]
	095 Move V0, [X9]
	096 Move [X19+240], D0
	097 Move X8, [X8+184]
	098 Move V0, [X8]
	099 Move X8, [X19]
	100 Move [X19+256], W31
	101 Move [X19+248], D0
	102 NotImplemented "Instruction LDRH not yet implemented."
	103 Move X1, [X20]
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move W2, 1
	113 Move X0, X19
	114 Call 0x1C5D788
	115 Move W9, [X10]
	116 Add W9, W9, 1
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X2, [X0+8]
	121 Move X0, X19
	122 Move W1, W31
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, [X19]
	125 Move X1, [X20]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move W2, 3
	136 Move X0, X19
	137 Call 0x1C5D788
	138 Move W9, [X10]
	139 Add W9, W9, 3
	140 Add X8, X8, W9
	141 Add X0, X8, 312
	142 Move X3, [X0]
	143 Move X2, [X0+8]
	144 Move X0, X19
	145 Move X20, [X31+32]
	146 Move X19, [X31+40]
	147 Move X22, [X31+16]
	148 Move X21, [X31+24]
	149 Move W1, W31
	150 Move X30, [X31+48]
	151 CallNoReturn X3
	152 Call 0x1C17F20

Method: UnityEngine.UIElements.IEventHandler get_currentTarget()

Disassembly:
	0x024A44FC RET
	0x024A4500 BL 0x1C16F20
	0x024A4504 STP D9, D8, [X31 - 0x60]!
	0x024A4508 STP X30, X27, [X31 + 0x10]
	0x024A450C STP X26, X25, [X31 + 0x20]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move X1, X31
	004 Call EventBase.get_currentTarget, X0
	005 Return X0
	006 Move [X31-16], X30
	007 Call 0x1C17F20

Method: System.Void set_currentTarget(UnityEngine.UIElements.IEventHandler value)

Disassembly:
	0x024A4510 STP X24, X23, [X31 + 0x30]
	0x024A4514 STP X22, X21, [X31 + 0x40]
	0x024A4518 STP X20, X19, [X31 + 0x50]
	0x024A451C ADRP X22, 0x1F35000
	0x024A4520 LDRB W8, [X22 + 0xBC1]
	0x024A4524 MOV X20, X2
	0x024A4528 MOV W19, W1
	0x024A452C MOV X21, X0
	0x024A4530 TBNZ X8, 0x0, 0x24A456C
	0x024A4534 ADRP X0, 0x1C78000
	0x024A4538 LDR X0, [X0 + 0xE60]
	0x024A453C BL 0x1C16CF4
	0x024A4540 ADRP X0, 0x1C77000
	0x024A4544 LDR X0, [X0 + 0x958]
	0x024A4548 BL 0x1C16CF4
	0x024A454C ADRP X0, 0x1C78000
	0x024A4550 LDR X0, [X0 + 0xE50]
	0x024A4554 BL 0x1C16CF4
	0x024A4558 ADRP X0, 0x1C78000
	0x024A455C LDR X0, [X0 + 0xE58]
	0x024A4560 BL 0x1C16CF4
	0x024A4564 MOVZ W8, 0x1
	0x024A4568 STRB W8, [X22 + 0xBC1]
	0x024A456C LDR X0, [X20 + 0x20]!
	0x024A4570 LDRB W8, [X0 + 0x135]
	0x024A4574 TBNZ X8, 0x0, 0x24A457C
	0x024A4578 BL 0x1C5C684
	0x024A457C LDR X8, [X0 + 0xC0]
	0x024A4580 LDR X0, [X8 + 0x20]
	0x024A4584 LDRB W8, [X0 + 0x135]
	0x024A4588 TBNZ X8, 0x0, 0x24A4590
	0x024A458C BL 0x1C5C684
	0x024A4590 LDR W8, [X0 + 0xE0]
	0x024A4594 CBNZ W8, 0x24A459C
	0x024A4598 BL 0x1C16DFC
	0x024A459C LDR X0, [X20]
	0x024A45A0 ADRP X26, 0x1C78000
	0x024A45A4 LDRB W8, [X0 + 0x135]
	0x024A45A8 LDR X26, [X26 + 0xE50]
	0x024A45AC TBNZ X8, 0x0, 0x24A45B4
	0x024A45B0 BL 0x1C5C684
	0x024A45B4 LDR X8, [X0 + 0xC0]
	0x024A45B8 LDR X0, [X8 + 0x110]
	0x024A45BC BL 0x2D0D6C4
	0x024A45C0 MOV X22, X0
	0x024A45C4 MOV X0, X21
	0x024A45C8 MOV X1, X31
	0x024A45CC BL 0x3C845A8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1F36000
	006 Move W8, [X21+3006]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x1C78000
	014 Move X0, [X0+2200]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3006], W8
	018 Compare X19, 0
	019 JumpIfEqual {58}
	020 Move X0, X19
	021 Move X1, X20
	022 Move X2, X31
	023 Call EventBase.set_currentTarget, X0, X1
	024 Move X8, [X19]
	025 Move X0, X19
	026 Move X9, [X8+472]
	027 Move X1, [X8+480]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X0, 0
	030 JumpIfEqual {42}
	031 Move X8, 0x1C78000
	032 Move X8, [X8+2200]
	033 Move X9, [X0]
	034 Move X8, [X8]
	035 Move W11, [X9+304]
	036 Move W10, [X8+304]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X9+200]
	039 Add X9, X9, X10
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move S0, [X19+180]
	043 Move S1, [X19+184]
	044 Move V2, [X19+188]
	045 Move [X19+192], S0
	046 Move [X19+200], S1
	047 Move [X19+200], S2
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Move S0, [X19+180]
	054 Move S1, [X19+184]
	055 Move X1, X31
	056 Call VisualElementExtensions.WorldToLocal, X0, X1
	057 Move S2, W31
	058 Call 0x1C17F20

Method: System.Boolean IsMouse(UnityEngine.Event systemEvent)

Disassembly:
	0x024A45D0 LDR X8, [X26]
	0x024A45D4 MOV W23, W0
	0x024A45D8 LDR W9, [X8 + 0xE0]
	0x024A45DC CBNZ W9, 0x24A45E8
	0x024A45E0 MOV X0, X8
	0x024A45E4 BL 0x1C16DFC
	0x024A45E8 CBZ X22, 0x24A4AE0
	0x024A45EC LDR X8, [X26]
	0x024A45F0 LDR X0, [X20]
	0x024A45F4 ADRP X24, 0x1C78000
	0x024A45F8 LDR X8, [X8 + 0xB8]
	0x024A45FC LDRB W9, [X0 + 0x135]
	0x024A4600 LDR W8, [X8 + 0xC]
	0x024A4604 LDR X24, [X24 + 0xE58]
	0x024A4608 ADD W23, W8, W23
	0x024A460C TBNZ X9, 0x0, 0x24A4614

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {14}
	004 Move X1, X31
	005 Call Event.get_rawType, X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W0, 1
	009 Move X30, [X31+16]
	010 Return X0
	011 And W8, W0, 0xFFFFFFFE
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Call 0x1C17F20

Method: System.Boolean IsTouch(UnityEngine.Event systemEvent)

Disassembly:
	0x024A4610 BL 0x1C5C684
	0x024A4614 STR W23, [X22 + 0x9C]
	0x024A4618 LDR X0, [X24]
	0x024A461C LDR W8, [X0 + 0xE0]
	0x024A4620 CBNZ W8, 0x24A462C
	0x024A4624 BL 0x1C16DFC
	0x024A4628 LDR X0, [X24]
	0x024A462C LDR X8, [X20]
	0x024A4630 LDR X9, [X0 + 0xB8]
	0x024A4634 LDRB W10, [X8 + 0x135]
	0x024A4638 LDR X23, [X9 + 0x8]
	0x024A463C TBNZ X10, 0x0, 0x24A4648
	0x024A4640 MOV X0, X8
	0x024A4644 BL 0x1C5C684
	0x024A4648 STR X23, [X22 + 0xA0]
	0x024A464C LDR X0, [X26]
	0x024A4650 ADRP X25, 0x1C77000
	0x024A4654 ADRP X24, 0x1C78000
	0x024A4658 LDR X8, [X0 + 0xB8]
	0x024A465C LDR W23, [X8 + 0xC]
	0x024A4660 LDR X25, [X25 + 0x958]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {19}
	004 Move X1, X31
	005 Call Event.get_rawType, X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, W0
	008 Move W9, 1
	009 NotImplemented "Instruction LSLV not yet implemented."
	010 Move X9, 0xC0000000
	011 NotImplemented "Instruction MOVK not yet implemented."
	012 And X31, X8, X9
	013 Move W0, 1
	014 Move X30, [X31+16]
	015 Return X0
	016 Subtract W8, W0, 33
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSET not yet implemented."
	019 Call 0x1C17F20

Method: System.Single TiltToAzimuth(UnityEngine.Vector2 tilt)

Disassembly:
	0x024A4664 LDR X24, [X24 + 0xE60]
	0x024A4668 LDR W8, [X0 + 0xE0]
	0x024A466C CBNZ W8, 0x24A4678
	0x024A4670 BL 0x1C16DFC
	0x024A4674 LDR X0, [X26]
	0x024A4678 LDR X8, [X0 + 0xB8]
	0x024A467C LDP W9, W8, [X8 + 0xC]
	0x024A4680 ADD W27, W8, W9
	0x024A4684 CMP W23, W27
	0x024A4688 B.GE 0x24A46D4
	0x024A468C LDR X0, [X20]
	0x024A4690 LDRB W8, [X0 + 0x135]
	0x024A4694 TBNZ X8, 0x0, 0x24A469C
	0x024A4698 BL 0x1C5C684
	0x024A469C LDR W8, [X22 + 0x9C]
	0x024A46A0 CMP W23, W8
	0x024A46A4 B.EQ 0x24A46C8
	0x024A46A8 LDR X0, [X25]
	0x024A46AC LDR W8, [X0 + 0xE0]
	0x024A46B0 CBNZ W8, 0x24A46B8
	0x024A46B4 BL 0x1C16DFC
	0x024A46B8 MOV W0, W23
	0x024A46BC MOV X1, X31
	0x024A46C0 BL 0x3DA9E70
	0x024A46C4 CBNZ W0, 0x24A46D4
	0x024A46C8 LDR X0, [X26]
	0x024A46CC ADD W23, W23, 0x1
	0x024A46D0 B 0x24A4668
	0x024A46D4 LDR X0, [X20]
	0x024A46D8 CMP W23, W27
	0x024A46DC CSET W23, GE
	0x024A46E0 LDRB W8, [X0 + 0x135]
	0x024A46E4 TBNZ X8, 0x0, 0x24A46EC
	0x024A46E8 BL 0x1C5C684
	0x024A46EC MOV X0, X21
	0x024A46F0 MOV X1, X31
	0x024A46F4 STRB W23, [X22 + 0xA8]
	0x024A46F8 BL 0x3C845F0
	0x024A46FC CBZ W0, 0x24A471C
	0x024A4700 MOV X0, X21
	0x024A4704 MOV X1, X31
	0x024A4708 BL 0x3C845F0
	0x024A470C CMP W0, 0x3

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], D10
	003 Move [X31+24], D9
	004 Move [X31+32], D8
	005 Move [X31+40], X30
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Add X0, X31, 12
	008 Add X1, X31, 8
	009 Move V8, V1
	010 Call 0x3EB2BC0
	011 Move S10, [X31+8]
	012 Move S9, [X31+12]
	013 Add X0, X31, 4
	014 Add X1, X31, 0
	015 Move V0, V8
	016 Call 0x3EB2BC0
	017 Move S1, [X31]
	018 Move S0, [X31+4]
	019 NotImplemented "Instruction FNEG not yet implemented."
	020 Multiply S0, S0, S2
	021 Multiply S1, S1, S9
	022 Call 0x3EB2C40
	023 Move X8, -26972160
	024 Move X9, -26972160
	025 Move V1, [X8+384]
	026 Move V2, [X9+108]
	027 Subtract S0, S1, S0
	028 Add S2, S0, S2
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 NotImplemented "Instruction FCSEL not yet implemented."
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 Move X8, -26972160
	033 Move V1, [X8+520]
	034 Move S0, W31
	035 Move X8, -26972160
	036 Move V1, [X8+440]
	037 Add S0, S0, S1
	038 Move X30, [X31+40]
	039 Move D9, [X31+24]
	040 Move D8, [X31+32]
	041 Move V10, [X31+16]
	042 Add X31, X31, 48
	043 Return V0

Method: UnityEngine.Vector2 AzimuthAndAlitutudeToTilt(System.Single altitude, System.Single azimuth)

Disassembly:
	0x024A4710 B.NE 0x24A4754
	0x024A4714 MOV W23, W31
	0x024A4718 B 0x24A4768
	0x024A471C LDR X0, [X20]
	0x024A4720 LDRB W8, [X0 + 0x135]
	0x024A4724 TBNZ X8, 0x0, 0x24A472C
	0x024A4728 BL 0x1C5C684
	0x024A472C LDR X0, [X25]
	0x024A4730 LDR W23, [X22 + 0x9C]
	0x024A4734 LDR W8, [X0 + 0xE0]
	0x024A4738 CBNZ W8, 0x24A4740
	0x024A473C BL 0x1C16DFC
	0x024A4740 MOV W0, W23
	0x024A4744 MOV W1, W31
	0x024A4748 MOV X2, X31
	0x024A474C BL 0x3DA5914
	0x024A4750 B 0x24A47A8
	0x024A4754 MOV X0, X21
	0x024A4758 MOV X1, X31
	0x024A475C BL 0x3C845F0
	0x024A4760 CMP W0, 0x4
	0x024A4764 CSET W23, NE
	0x024A4768 LDR X0, [X20]
	0x024A476C LDRB W8, [X0 + 0x135]
	0x024A4770 TBNZ X8, 0x0, 0x24A4778
	0x024A4774 BL 0x1C5C684
	0x024A4778 TBZ X23, 0x0, 0x24A4784
	0x024A477C MOVN W8, 0x0
	0x024A4780 B 0x24A47C0

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move V8, V0
	008 Add X0, X31, 12
	009 Add X1, X31, 8
	010 Move V0, V1
	011 Call 0x3EB2BC0
	012 Move S10, [X31+8]
	013 Move S9, [X31+12]
	014 Add X0, X31, 60
	015 Add X1, X31, 56
	016 Move V0, V8
	017 Call 0x3EB2BC0
	018 Move S0, [X31+56]
	019 Move S11, [X31+60]
	020 Multiply S0, S0, S10
	021 NotImplemented "Instruction FDIV not yet implemented."
	022 Call 0x3EB2BE0
	023 Move V8, V0
	024 Multiply S0, S11, S10
	025 NotImplemented "Instruction FDIV not yet implemented."
	026 Call 0x3EB2BE0
	027 Move V1, V0
	028 Move V0, V8
	029 Move X30, [X31+48]
	030 Move D9, [X31+32]
	031 Move D8, [X31+40]
	032 Move D11, [X31+16]
	033 Move D10, [X31+24]
	034 Add X31, X31, 64
	035 Return X0

Method: System.Single TiltToAltitude(UnityEngine.Vector2 tilt)

Disassembly:
	0x024A4784 LDR X0, [X25]
	0x024A4788 LDR W23, [X22 + 0x9C]
	0x024A478C LDR W8, [X0 + 0xE0]
	0x024A4790 CBNZ W8, 0x24A4798
	0x024A4794 BL 0x1C16DFC
	0x024A4798 MOV W0, W23
	0x024A479C MOV W1, W31
	0x024A47A0 MOV X2, X31
	0x024A47A4 BL 0x3DA5E70
	0x024A47A8 LDR X0, [X20]
	0x024A47AC MOV W8, W31
	0x024A47B0 LDRB W9, [X0 + 0x135]
	0x024A47B4 TBNZ X9, 0x0, 0x24A47C0
	0x024A47B8 BL 0x1C5C684
	0x024A47BC MOV W8, W31

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move V8, V1
	005 Call 0x3EB2BD0
	006 Move V9, V0
	007 Move V0, V8
	008 Call 0x3EB2BD0
	009 Multiply S0, S9, S0
	010 Call 0x3EB2BB0
	011 Move X8, -26972160
	012 Move V1, [X8+384]
	013 Move X30, [X31+16]
	014 Subtract S0, S1, S0
	015 Move D9, [X31+32]
	016 Move D8, [X31+40]
	017 Return V0

Method: T GetPooled(UnityEngine.Event systemEvent)

Disassembly:
	0x024A47C0 STR W8, [X22 + 0xAC]
	0x024A47C4 LDR X0, [X20]
	0x024A47C8 LDRB W8, [X0 + 0x135]
	0x024A47CC TBNZ X8, 0x0, 0x24A47D4
	0x024A47D0 BL 0x1C5C684
	0x024A47D4 LDR X0, [X25]
	0x024A47D8 LDR W23, [X22 + 0x9C]
	0x024A47DC LDR W8, [X0 + 0xE0]
	0x024A47E0 CBNZ W8, 0x24A47E8
	0x024A47E4 BL 0x1C16DFC
	0x024A47E8 MOV W0, W23
	0x024A47EC MOV X1, X31
	0x024A47F0 BL 0x3DA9E70
	0x024A47F4 LDR X8, [X20]
	0x024A47F8 MOV W23, W0
	0x024A47FC LDRB W9, [X8 + 0x135]
	0x024A4800 TBNZ X9, 0x0, 0x24A480C
	0x024A4804 MOV X0, X8
	0x024A4808 BL 0x1C5C684
	0x024A480C MOV X0, X21
	0x024A4810 MOV X1, X31
	0x024A4814 STR W23, [X22 + 0xB0]
	0x024A4818 BL 0x3C845B0
	0x024A481C LDR X0, [X20]
	0x024A4820 MOV V8.16B, V0.16B
	0x024A4824 MOV V9.16B, V1.16B
	0x024A4828 LDRB W8, [X0 + 0x135]
	0x024A482C TBNZ X8, 0x0, 0x24A4834
	0x024A4830 BL 0x1C5C684
	0x024A4834 MOV X0, X21
	0x024A4838 MOV X1, X31
	0x024A483C STP S8, S9, [X22 + 0xB4]
	0x024A4840 STR W31, [X22 + 0xBC]
	0x024A4844 BL 0x3C845B0
	0x024A4848 LDR X0, [X20]
	0x024A484C MOV V8.16B, V0.16B
	0x024A4850 MOV V9.16B, V1.16B
	0x024A4854 LDRB W8, [X0 + 0x135]
	0x024A4858 TBNZ X8, 0x0, 0x24A4860
	0x024A485C BL 0x1C5C684
	0x024A4860 MOV X0, X21
	0x024A4864 MOV X1, X31
	0x024A4868 STP S8, S9, [X22 + 0xC0]
	0x024A486C STR W31, [X22 + 0xC8]
	0x024A4870 BL 0x3C845D0
	0x024A4874 LDR X0, [X20]
	0x024A4878 MOV V8.16B, V0.16B
	0x024A487C MOV V9.16B, V1.16B
	0x024A4880 LDRB W8, [X0 + 0x135]
	0x024A4884 TBNZ X8, 0x0, 0x24A488C
	0x024A4888 BL 0x1C5C684
	0x024A488C MOV X0, X21
	0x024A4890 MOV X1, X31
	0x024A4894 STP S8, S9, [X22 + 0xCC]
	0x024A4898 STR W31, [X22 + 0xD4]
	0x024A489C BL 0x3C845E0
	0x024A48A0 LDR X0, [X20]
	0x024A48A4 MOV V8.16B, V0.16B
	0x024A48A8 LDRB W8, [X0 + 0x135]
	0x024A48AC TBNZ X8, 0x0, 0x24A48B4
	0x024A48B0 BL 0x1C5C684
	0x024A48B4 MOV X0, X21
	0x024A48B8 MOV X1, X31
	0x024A48BC STR S8, [X22 + 0xD8]
	0x024A48C0 BL 0x3C845E8
	0x024A48C4 LDR X8, [X20]
	0x024A48C8 MOV W23, W0
	0x024A48CC LDRB W9, [X8 + 0x135]
	0x024A48D0 TBNZ X9, 0x0, 0x24A48DC
	0x024A48D4 MOV X0, X8
	0x024A48D8 BL 0x1C5C684
	0x024A48DC MOV X0, X21
	0x024A48E0 MOV X1, X31
	0x024A48E4 STR W23, [X22 + 0xDC]
	0x024A48E8 BL 0x3C84600
	0x024A48EC ADRP X8, 0xFFFFFFFFFE645000
	0x024A48F0 LDR V1, [X8 + 0xF9C]
	0x024A48F4 FABS S0, S0
	0x024A48F8 FMOV S8, 1
	0x024A48FC FCMP S0, S1
	0x024A4900 B.LE 0x24A4924
	0x024A4904 MOV X0, X21
	0x024A4908 MOV X1, X31
	0x024A490C BL 0x3C845F8
	0x024A4910 MOV X0, X21
	0x024A4914 MOV X1, X31
	0x024A4918 MOV V8.16B, V0.16B
	0x024A491C BL 0x3C84600
	0x024A4920 FDIV S8, S8, S0
	0x024A4924 LDR X0, [X20]
	0x024A4928 LDRB W8, [X0 + 0x135]
	0x024A492C TBNZ X8, 0x0, 0x24A4938
	0x024A4930 BL 0x1C5C684
	0x024A4934 LDR X0, [X20]
	0x024A4938 STR S8, [X22 + 0xE0]
	0x024A493C LDRB W8, [X0 + 0x135]
	0x024A4940 TBNZ X8, 0x0, 0x24A4948
	0x024A4944 BL 0x1C5C684
	0x024A4948 MOV X0, X21
	0x024A494C MOV X1, X31
	0x024A4950 STR W31, [X22 + 0xE4]
	0x024A4954 BL 0x3C84610
	0x024A4958 LDR X0, [X20]
	0x024A495C MOV V8.16B, V0.16B
	0x024A4960 LDRB W8, [X0 + 0x135]
	0x024A4964 TBNZ X8, 0x0, 0x24A496C
	0x024A4968 BL 0x1C5C684
	0x024A496C MOVZ W23, 0x1
	0x024A4970 MOV X0, X21
	0x024A4974 MOV X1, X31
	0x024A4978 STRB W23, [X22 + 0x84]
	0x024A497C STR S8, [X22 + 0x88]
	0x024A4980 BL 0x3C84618
	0x024A4984 LDR X0, [X20]
	0x024A4988 MOV V8.16B, V0.16B
	0x024A498C LDRB W8, [X0 + 0x135]
	0x024A4990 TBNZ X8, 0x0, 0x24A499C
	0x024A4994 BL 0x1C5C684
	0x024A4998 LDR X0, [X20]
	0x024A499C STRB W23, [X22 + 0x85]
	0x024A49A0 STR S8, [X22 + 0x8C]
	0x024A49A4 LDRB W8, [X0 + 0x135]
	0x024A49A8 TBNZ X8, 0x0, 0x24A49B4
	0x024A49AC BL 0x1C5C684
	0x024A49B0 LDR X0, [X20]
	0x024A49B4 STR W31, [X22 + 0xE8]
	0x024A49B8 LDRB W8, [X0 + 0x135]
	0x024A49BC TBNZ X8, 0x0, 0x24A49C4
	0x024A49C0 BL 0x1C5C684
	0x024A49C4 MOVZ W8, 0x1
	0x024A49C8 STRB W8, [X22 + 0x90]
	0x024A49CC STP W31, W31, [X22 + 0x94]
	0x024A49D0 LDR X0, [X20]
	0x024A49D4 LDRB W8, [X0 + 0x135]
	0x024A49D8 TBNZ X8, 0x0, 0x24A49E0
	0x024A49DC BL 0x1C5C684
	0x024A49E0 MOV X0, X21
	0x024A49E4 MOV X1, X31
	0x024A49E8 STR W31, [X22 + 0xEC]
	0x024A49EC BL 0x3C84620
	0x024A49F0 MOV X0, X21
	0x024A49F4 MOV X1, X31
	0x024A49F8 MOV V8.16B, V0.16B
	0x024A49FC BL 0x3C84620
	0x024A4A00 LDR X0, [X20]
	0x024A4A04 MOV V9.16B, V0.16B
	0x024A4A08 LDRB W8, [X0 + 0x135]
	0x024A4A0C TBNZ X8, 0x0, 0x24A4A14
	0x024A4A10 BL 0x1C5C684
	0x024A4A14 MOV X0, X21
	0x024A4A18 MOV X1, X31
	0x024A4A1C STP S8, S9, [X22 + 0xF0]
	0x024A4A20 BL 0x3C84628
	0x024A4A24 MOV X0, X21
	0x024A4A28 MOV X1, X31
	0x024A4A2C MOV V8.16B, V0.16B
	0x024A4A30 BL 0x3C84628
	0x024A4A34 LDR X0, [X20]
	0x024A4A38 MOV V9.16B, V0.16B
	0x024A4A3C LDRB W8, [X0 + 0x135]
	0x024A4A40 TBNZ X8, 0x0, 0x24A4A48
	0x024A4A44 BL 0x1C5C684
	0x024A4A48 STP S8, S9, [X22 + 0xF8]
	0x024A4A4C LDR X0, [X20]
	0x024A4A50 LDRB W8, [X0 + 0x135]
	0x024A4A54 TBNZ X8, 0x0, 0x24A4A5C
	0x024A4A58 BL 0x1C5C684
	0x024A4A5C LDR X8, [X22]
	0x024A4A60 STR W19, [X22 + 0x100]
	0x024A4A64 LDR X1, [X24]
	0x024A4A68 LDRH W9, [X8 + 0x12E]
	0x024A4A6C CBZ X9, 0x24A4A90
	0x024A4A70 LDR X10, [X8 + 0xB0]
	0x024A4A74 ADD X10, X10, 0x8
	0x024A4A78 LDUR X11, [X10 - 0x8]
	0x024A4A7C CMP X11, X1
	0x024A4A80 B.EQ 0x24A4AA0
	0x024A4A84 SUBS X9, X9, 0x1
	0x024A4A88 ADD X10, X10, 0x10
	0x024A4A8C B.NE 0x24A4A78
	0x024A4A90 MOVZ W2, 0x1
	0x024A4A94 MOV X0, X22
	0x024A4A98 BL 0x1C5C788
	0x024A4A9C B 0x24A4AB0
	0x024A4AA0 LDR W9, [X10]
	0x024A4AA4 ADD W9, W9, 0x1
	0x024A4AA8 ADD X8, X8, W9, 0x4, SXTW
	0x024A4AAC ADD X0, X8, 0x138
	0x024A4AB0 LDP X8, X2, [X0]
	0x024A4AB4 MOVZ W1, 0x1
	0x024A4AB8 MOV X0, X22
	0x024A4ABC BLR X8
	0x024A4AC0 MOV X0, X22
	0x024A4AC4 LDP X20, X19, [X31 + 0x50]
	0x024A4AC8 LDP X22, X21, [X31 + 0x40]
	0x024A4ACC LDP X24, X23, [X31 + 0x30]
	0x024A4AD0 LDP X26, X25, [X31 + 0x20]
	0x024A4AD4 LDP X30, X27, [X31 + 0x10]
	0x024A4AD8 LDP D9, D8, [X31], #0x60
	0x024A4ADC RET
	0x024A4AE0 BL 0x1C16F20
	0x024A4AE4 STP D9, D8, [X31 - 0x50]!
	0x024A4AE8 STP X30, X25, [X31 + 0x10]
	0x024A4AEC STP X24, X23, [X31 + 0x20]
	0x024A4AF0 STP X22, X21, [X31 + 0x30]
	0x024A4AF4 STP X20, X19, [X31 + 0x40]
	0x024A4AF8 ADRP X21, 0x1F35000
	0x024A4AFC LDRB W8, [X21 + 0xBC2]
	0x024A4B00 MOV X20, X2
	0x024A4B04 MOV W19, W1
	0x024A4B08 MOV X22, X0
	0x024A4B0C TBNZ X8, 0x0, 0x24A4B48
	0x024A4B10 ADRP X0, 0x1C78000
	0x024A4B14 LDR X0, [X0 + 0xE60]
	0x024A4B18 BL 0x1C16CF4
	0x024A4B1C ADRP X0, 0x1C77000
	0x024A4B20 LDR X0, [X0 + 0x958]
	0x024A4B24 BL 0x1C16CF4
	0x024A4B28 ADRP X0, 0x1C78000
	0x024A4B2C LDR X0, [X0 + 0xE50]
	0x024A4B30 BL 0x1C16CF4
	0x024A4B34 ADRP X0, 0x1C78000
	0x024A4B38 LDR X0, [X0 + 0xE58]
	0x024A4B3C BL 0x1C16CF4
	0x024A4B40 MOVZ W8, 0x1
	0x024A4B44 STRB W8, [X21 + 0xBC2]
	0x024A4B48 LDR X0, [X20 + 0x20]!
	0x024A4B4C LDRB W8, [X0 + 0x135]
	0x024A4B50 TBNZ X8, 0x0, 0x24A4B58
	0x024A4B54 BL 0x1C5C684
	0x024A4B58 LDR X8, [X0 + 0xC0]
	0x024A4B5C LDR X0, [X8 + 0x20]
	0x024A4B60 LDRB W8, [X0 + 0x135]
	0x024A4B64 TBNZ X8, 0x0, 0x24A4B6C
	0x024A4B68 BL 0x1C5C684
	0x024A4B6C LDR W8, [X0 + 0xE0]
	0x024A4B70 CBNZ W8, 0x24A4B78
	0x024A4B74 BL 0x1C16DFC
	0x024A4B78 LDR X0, [X20]
	0x024A4B7C ADRP X23, 0x1C78000
	0x024A4B80 LDRB W8, [X0 + 0x135]
	0x024A4B84 LDR X23, [X23 + 0xE50]
	0x024A4B88 TBNZ X8, 0x0, 0x24A4B90
	0x024A4B8C BL 0x1C5C684
	0x024A4B90 LDR X8, [X0 + 0xC0]
	0x024A4B94 LDR X0, [X8 + 0x110]
	0x024A4B98 BL 0x2D0D6C4
	0x024A4B9C LDR X8, [X23]
	0x024A4BA0 MOV X21, X0
	0x024A4BA4 LDR W9, [X8 + 0xE0]
	0x024A4BA8 CBNZ W9, 0x24A4BB8
	0x024A4BAC MOV X0, X8
	0x024A4BB0 BL 0x1C16DFC
	0x024A4BB4 LDR X8, [X23]
	0x024A4BB8 CBZ X21, 0x24A4FC8
	0x024A4BBC LDR X0, [X20]
	0x024A4BC0 LDR X8, [X8 + 0xB8]
	0x024A4BC4 ADRP X23, 0x1C78000
	0x024A4BC8 LDRB W9, [X0 + 0x135]
	0x024A4BCC LDR W24, [X8 + 0x14]
	0x024A4BD0 LDR X23, [X23 + 0xE58]
	0x024A4BD4 TBNZ X9, 0x0, 0x24A4BDC
	0x024A4BD8 BL 0x1C5C684
	0x024A4BDC STR W24, [X21 + 0x9C]
	0x024A4BE0 LDR X8, [X23]
	0x024A4BE4 LDR W9, [X8 + 0xE0]
	0x024A4BE8 CBNZ W9, 0x24A4BF8
	0x024A4BEC MOV X0, X8
	0x024A4BF0 BL 0x1C16DFC
	0x024A4BF4 LDR X8, [X23]
	0x024A4BF8 LDR X0, [X20]
	0x024A4BFC LDR X8, [X8 + 0xB8]
	0x024A4C00 LDRB W9, [X0 + 0x135]
	0x024A4C04 LDR X23, [X8 + 0x10]
	0x024A4C08 TBNZ X9, 0x0, 0x24A4C14
	0x024A4C0C BL 0x1C5C684
	0x024A4C10 LDR X0, [X20]
	0x024A4C14 STR X23, [X21 + 0xA0]
	0x024A4C18 LDRB W8, [X0 + 0x135]
	0x024A4C1C TBNZ X8, 0x0, 0x24A4C24
	0x024A4C20 BL 0x1C5C684
	0x024A4C24 MOVZ W8, 0x1
	0x024A4C28 STRB W8, [X21 + 0xA8]
	0x024A4C2C LDR W23, [X22 + 0x1C]
	0x024A4C30 ADRP X24, 0x1C77000
	0x024A4C34 LDR X24, [X24 + 0x958]
	0x024A4C38 CMP W23, 0x1
	0x024A4C3C B.NE 0x24A4C78
	0x024A4C40 LDR X0, [X20]
	0x024A4C44 LDRB W8, [X0 + 0x135]
	0x024A4C48 TBNZ X8, 0x0, 0x24A4C50
	0x024A4C4C BL 0x1C5C684
	0x024A4C50 LDR X0, [X24]
	0x024A4C54 LDR W23, [X21 + 0x9C]
	0x024A4C58 LDR W8, [X0 + 0xE0]
	0x024A4C5C CBNZ W8, 0x24A4C64
	0x024A4C60 BL 0x1C16DFC
	0x024A4C64 MOV W0, W23
	0x024A4C68 MOV W1, W31
	0x024A4C6C MOV X2, X31
	0x024A4C70 BL 0x3DA5914
	0x024A4C74 B 0x24A4CB4
	0x024A4C78 LDR X0, [X20]
	0x024A4C7C LDRB W8, [X0 + 0x135]
	0x024A4C80 TBNZ X8, 0x0, 0x24A4C88
	0x024A4C84 BL 0x1C5C684
	0x024A4C88 CMP W23, 0x2
	0x024A4C8C B.NE 0x24A4CD0
	0x024A4C90 LDR X0, [X24]
	0x024A4C94 LDR W23, [X21 + 0x9C]
	0x024A4C98 LDR W8, [X0 + 0xE0]
	0x024A4C9C CBNZ W8, 0x24A4CA4
	0x024A4CA0 BL 0x1C16DFC
	0x024A4CA4 MOV W0, W23
	0x024A4CA8 MOV W1, W31
	0x024A4CAC MOV X2, X31
	0x024A4CB0 BL 0x3DA5E70
	0x024A4CB4 LDR X0, [X20]
	0x024A4CB8 MOV W8, W31
	0x024A4CBC LDRB W9, [X0 + 0x135]
	0x024A4CC0 TBNZ X9, 0x0, 0x24A4CD4
	0x024A4CC4 BL 0x1C5C684
	0x024A4CC8 MOV W8, W31
	0x024A4CCC B 0x24A4CD4
	0x024A4CD0 MOVN W8, 0x0
	0x024A4CD4 STR W8, [X21 + 0xAC]
	0x024A4CD8 LDR X0, [X20]
	0x024A4CDC LDR W25, [X22 + 0x10]
	0x024A4CE0 LDRB W8, [X0 + 0x135]
	0x024A4CE4 TBNZ X8, 0x0, 0x24A4CEC
	0x024A4CE8 BL 0x1C5C684
	0x024A4CEC LDR X0, [X24]
	0x024A4CF0 LDR W23, [X21 + 0x9C]
	0x024A4CF4 LDR W8, [X0 + 0xE0]
	0x024A4CF8 CBNZ W8, 0x24A4D00
	0x024A4CFC BL 0x1C16DFC
	0x024A4D00 MOVZ W1, 0x1
	0x024A4D04 MOV W0, W23
	0x024A4D08 CMP W25, 0x2
	0x024A4D0C B.NE 0x24A4D1C
	0x024A4D10 MOV X2, X31
	0x024A4D14 BL 0x3DA5914
	0x024A4D18 B 0x24A4D24
	0x024A4D1C MOV X2, X31
	0x024A4D20 BL 0x3DA5E70
	0x024A4D24 LDR X0, [X20]
	0x024A4D28 LDR W25, [X22 + 0x10]
	0x024A4D2C LDRB W8, [X0 + 0x135]
	0x024A4D30 TBNZ X8, 0x0, 0x24A4D38
	0x024A4D34 BL 0x1C5C684
	0x024A4D38 LDR X0, [X24]
	0x024A4D3C LDR W23, [X21 + 0x9C]
	0x024A4D40 LDR W8, [X0 + 0xE0]
	0x024A4D44 CBNZ W8, 0x24A4D4C
	0x024A4D48 BL 0x1C16DFC
	0x024A4D4C MOVZ W1, 0x5
	0x024A4D50 MOV W0, W23
	0x024A4D54 CMP W25, 0x8
	0x024A4D58 B.NE 0x24A4D68
	0x024A4D5C MOV X2, X31
	0x024A4D60 BL 0x3DA5914
	0x024A4D64 B 0x24A4D70
	0x024A4D68 MOV X2, X31
	0x024A4D6C BL 0x3DA5E70
	0x024A4D70 LDR X0, [X20]
	0x024A4D74 LDRB W8, [X0 + 0x135]
	0x024A4D78 TBNZ X8, 0x0, 0x24A4D80
	0x024A4D7C BL 0x1C5C684
	0x024A4D80 LDR X0, [X24]
	0x024A4D84 LDR W23, [X21 + 0x9C]
	0x024A4D88 LDR W8, [X0 + 0xE0]
	0x024A4D8C CBNZ W8, 0x24A4D94
	0x024A4D90 BL 0x1C16DFC
	0x024A4D94 MOV W0, W23
	0x024A4D98 MOV X1, X31
	0x024A4D9C BL 0x3DA9E70
	0x024A4DA0 LDR X8, [X20]
	0x024A4DA4 MOV W23, W0
	0x024A4DA8 LDRB W9, [X8 + 0x135]
	0x024A4DAC TBNZ X9, 0x0, 0x24A4DBC
	0x024A4DB0 MOV X0, X8
	0x024A4DB4 BL 0x1C5C684
	0x024A4DB8 LDR X8, [X20]
	0x024A4DBC STR W23, [X21 + 0xB0]
	0x024A4DC0 LDRB W9, [X8 + 0x135]
	0x024A4DC4 LDR V8, [X22]
	0x024A4DC8 TBNZ X9, 0x0, 0x24A4DD4
	0x024A4DCC MOV X0, X8
	0x024A4DD0 BL 0x1C5C684
	0x024A4DD4 STUR D8, [X21 + 0xB4]
	0x024A4DD8 STR W31, [X21 + 0xBC]
	0x024A4DDC LDR X0, [X20]
	0x024A4DE0 LDR V8, [X22]
	0x024A4DE4 LDRB W8, [X0 + 0x135]
	0x024A4DE8 TBNZ X8, 0x0, 0x24A4DF0
	0x024A4DEC BL 0x1C5C684
	0x024A4DF0 STR D8, [X21 + 0xC0]
	0x024A4DF4 STR W31, [X21 + 0xC8]
	0x024A4DF8 LDR X0, [X20]
	0x024A4DFC LDR V8, [X22 + 0x20]
	0x024A4E00 LDRB W8, [X0 + 0x135]
	0x024A4E04 TBNZ X8, 0x0, 0x24A4E0C
	0x024A4E08 BL 0x1C5C684
	0x024A4E0C STUR D8, [X21 + 0xCC]
	0x024A4E10 STR W31, [X21 + 0xD4]
	0x024A4E14 LDR X0, [X20]
	0x024A4E18 LDRB W8, [X0 + 0x135]
	0x024A4E1C TBNZ X8, 0x0, 0x24A4E28
	0x024A4E20 BL 0x1C5C684
	0x024A4E24 LDR X0, [X20]
	0x024A4E28 STR W31, [X21 + 0xDC]
	0x024A4E2C LDRB W8, [X0 + 0x135]
	0x024A4E30 LDR V8, [X22 + 0x18]
	0x024A4E34 TBNZ X8, 0x0, 0x24A4E40
	0x024A4E38 BL 0x1C5C684
	0x024A4E3C LDR X0, [X20]
	0x024A4E40 STR S8, [X21 + 0xE0]
	0x024A4E44 LDRB W8, [X0 + 0x135]
	0x024A4E48 TBNZ X8, 0x0, 0x24A4E54
	0x024A4E4C BL 0x1C5C684
	0x024A4E50 LDR X0, [X20]
	0x024A4E54 STR W31, [X21 + 0xE4]
	0x024A4E58 LDRB W8, [X0 + 0x135]
	0x024A4E5C LDR V8, [X22 + 0x14]
	0x024A4E60 TBNZ X8, 0x0, 0x24A4E6C
	0x024A4E64 BL 0x1C5C684
	0x024A4E68 LDR X0, [X20]
	0x024A4E6C STR S8, [X21 + 0xE8]
	0x024A4E70 LDRB W8, [X0 + 0x135]
	0x024A4E74 LDR V8, [X22 + 0x8]
	0x024A4E78 TBNZ X8, 0x0, 0x24A4E80
	0x024A4E7C BL 0x1C5C684
	0x024A4E80 MOVZ W8, 0x1
	0x024A4E84 STRB W8, [X21 + 0x90]
	0x024A4E88 STUR D8, [X21 + 0x94]
	0x024A4E8C LDR X0, [X20]
	0x024A4E90 LDR W22, [X22 + 0x10]
	0x024A4E94 LDRB W8, [X0 + 0x135]
	0x024A4E98 TBNZ X8, 0x0, 0x24A4EA0
	0x024A4E9C BL 0x1C5C684
	0x024A4EA0 STR W22, [X21 + 0xEC]
	0x024A4EA4 ADRP X22, 0x1F35000
	0x024A4EA8 LDRB W8, [X22 + 0x78F]
	0x024A4EAC CBNZ W8, 0x24A4EC4
	0x024A4EB0 ADRP X0, 0x1C57000
	0x024A4EB4 LDR X0, [X0 + 0xF08]
	0x024A4EB8 BL 0x1C16CF4
	0x024A4EBC MOVZ W8, 0x1
	0x024A4EC0 STRB W8, [X22 + 0x78F]
	0x024A4EC4 ADRP X23, 0x1C57000
	0x024A4EC8 LDR X23, [X23 + 0xF08]
	0x024A4ECC LDR X0, [X20]
	0x024A4ED0 LDR X8, [X23]
	0x024A4ED4 LDRB W9, [X0 + 0x135]
	0x024A4ED8 LDR X8, [X8 + 0xB8]
	0x024A4EDC LDP S9, S8, [X8]
	0x024A4EE0 TBNZ X9, 0x0, 0x24A4F0C
	0x024A4EE4 BL 0x1C5C684
	0x024A4EE8 LDRB W8, [X22 + 0x78F]
	0x024A4EEC STP S9, S8, [X21 + 0xF0]
	0x024A4EF0 CBNZ W8, 0x24A4F10
	0x024A4EF4 ADRP X0, 0x1C57000
	0x024A4EF8 LDR X0, [X0 + 0xF08]
	0x024A4EFC BL 0x1C16CF4
	0x024A4F00 MOVZ W8, 0x1
	0x024A4F04 STRB W8, [X22 + 0x78F]
	0x024A4F08 B 0x24A4F10
	0x024A4F0C STP S9, S8, [X21 + 0xF0]
	0x024A4F10 LDR X8, [X23]
	0x024A4F14 LDR X0, [X20]
	0x024A4F18 LDR X8, [X8 + 0xB8]
	0x024A4F1C LDRB W9, [X0 + 0x135]
	0x024A4F20 LDR V8, [X8]
	0x024A4F24 TBNZ X9, 0x0, 0x24A4F2C
	0x024A4F28 BL 0x1C5C684
	0x024A4F2C STR D8, [X21 + 0xF8]
	0x024A4F30 LDR X0, [X20]
	0x024A4F34 ADRP X20, 0x1C78000
	0x024A4F38 LDRB W8, [X0 + 0x135]
	0x024A4F3C LDR X20, [X20 + 0xE60]
	0x024A4F40 TBNZ X8, 0x0, 0x24A4F48
	0x024A4F44 BL 0x1C5C684
	0x024A4F48 LDR X8, [X21]
	0x024A4F4C STR W19, [X21 + 0x100]
	0x024A4F50 LDR X1, [X20]
	0x024A4F54 LDRH W9, [X8 + 0x12E]
	0x024A4F58 CBZ X9, 0x24A4F7C
	0x024A4F5C LDR X10, [X8 + 0xB0]
	0x024A4F60 ADD X10, X10, 0x8
	0x024A4F64 LDUR X11, [X10 - 0x8]
	0x024A4F68 CMP X11, X1
	0x024A4F6C B.EQ 0x24A4F8C
	0x024A4F70 SUBS X9, X9, 0x1
	0x024A4F74 ADD X10, X10, 0x10
	0x024A4F78 B.NE 0x24A4F64
	0x024A4F7C MOVZ W2, 0x1
	0x024A4F80 MOV X0, X21
	0x024A4F84 BL 0x1C5C788
	0x024A4F88 B 0x24A4F9C
	0x024A4F8C LDR W9, [X10]
	0x024A4F90 ADD W9, W9, 0x1
	0x024A4F94 ADD X8, X8, W9, 0x4, SXTW
	0x024A4F98 ADD X0, X8, 0x138
	0x024A4F9C LDP X8, X2, [X0]
	0x024A4FA0 MOVZ W1, 0x1
	0x024A4FA4 MOV X0, X21
	0x024A4FA8 BLR X8
	0x024A4FAC MOV X0, X21
	0x024A4FB0 LDP X20, X19, [X31 + 0x40]
	0x024A4FB4 LDP X22, X21, [X31 + 0x30]
	0x024A4FB8 LDP X24, X23, [X31 + 0x20]
	0x024A4FBC LDP X30, X25, [X31 + 0x10]
	0x024A4FC0 LDP D9, D8, [X31], #0x50
	0x024A4FC4 RET
	0x024A4FC8 BL 0x1C16F20
	0x024A4FCC STP D9, D8, [X31 - 0x40]!
	0x024A4FD0 STR X30, [X31 + 0x10]
	0x024A4FD4 STP X22, X21, [X31 + 0x20]
	0x024A4FD8 STP X20, X19, [X31 + 0x30]
	0x024A4FDC ADRP X22, 0x1F35000
	0x024A4FE0 LDRB W8, [X22 + 0xBC3]
	0x024A4FE4 MOV X19, X2
	0x024A4FE8 MOV W20, W1
	0x024A4FEC MOV V8.16B, V1.16B
	0x024A4FF0 MOV V9.16B, V0.16B
	0x024A4FF4 MOV X21, X0
	0x024A4FF8 TBNZ X8, 0x0, 0x24A5010
	0x024A4FFC ADRP X0, 0x1C78000
	0x024A5000 LDR X0, [X0 + 0xE58]
	0x024A5004 BL 0x1C16CF4
	0x024A5008 MOVZ W8, 0x1
	0x024A500C STRB W8, [X22 + 0xBC3]
	0x024A5010 LDR X0, [X19 + 0x20]
	0x024A5014 LDRB W8, [X0 + 0x135]
	0x024A5018 TBNZ X8, 0x0, 0x24A5020
	0x024A501C BL 0x1C5C684
	0x024A5020 LDR X8, [X0 + 0xC0]
	0x024A5024 CBZ X21, 0x24A5044
	0x024A5028 LDR X1, [X8 + 0x140]
	0x024A502C MOV X0, X21
	0x024A5030 LDP X20, X19, [X31 + 0x30]
	0x024A5034 LDP X22, X21, [X31 + 0x20]
	0x024A5038 LDR X30, [X31 + 0x10]
	0x024A503C LDP D9, D8, [X31], #0x40
	0x024A5040 B 0x24A5124
	0x024A5044 LDR X0, [X8 + 0x20]
	0x024A5048 LDRB W8, [X0 + 0x135]
	0x024A504C TBNZ X8, 0x0, 0x24A5054
	0x024A5050 BL 0x1C5C684
	0x024A5054 LDR W8, [X0 + 0xE0]
	0x024A5058 CBNZ W8, 0x24A5060
	0x024A505C BL 0x1C16DFC
	0x024A5060 LDR X0, [X19 + 0x20]
	0x024A5064 LDRB W8, [X0 + 0x135]
	0x024A5068 TBNZ X8, 0x0, 0x24A5070
	0x024A506C BL 0x1C5C684
	0x024A5070 LDR X8, [X0 + 0xC0]
	0x024A5074 LDR X0, [X8 + 0x110]
	0x024A5078 BL 0x2D0D6C4
	0x024A507C CBZ X0, 0x24A5120
	0x024A5080 MOV X21, X0
	0x024A5084 LDR X0, [X19 + 0x20]
	0x024A5088 LDRB W8, [X0 + 0x135]
	0x024A508C TBNZ X8, 0x0, 0x24A5094
	0x024A5090 BL 0x1C5C684
	0x024A5094 STP S9, S8, [X21 + 0xB4]
	0x024A5098 STR W31, [X21 + 0xBC]
	0x024A509C LDR X0, [X19 + 0x20]
	0x024A50A0 LDRB W8, [X0 + 0x135]
	0x024A50A4 TBNZ X8, 0x0, 0x24A50AC
	0x024A50A8 BL 0x1C5C684
	0x024A50AC STP S9, S8, [X21 + 0xC0]
	0x024A50B0 STR W31, [X21 + 0xC8]
	0x024A50B4 LDR X0, [X19 + 0x20]
	0x024A50B8 LDRB W8, [X0 + 0x135]
	0x024A50BC TBNZ X8, 0x0, 0x24A50C4
	0x024A50C0 BL 0x1C5C684
	0x024A50C4 STR W20, [X21 + 0x9C]
	0x024A50C8 ADRP X8, 0x1C77000
	0x024A50CC LDR X8, [X8 + 0xE58]
	0x024A50D0 LDR X0, [X8]
	0x024A50D4 LDR W8, [X0 + 0xE0]
	0x024A50D8 CBNZ W8, 0x24A50E0
	0x024A50DC BL 0x1C16DFC
	0x024A50E0 MOV W0, W20
	0x024A50E4 MOV X1, X31
	0x024A50E8 BL 0x3DAA808
	0x024A50EC LDR X8, [X19 + 0x20]
	0x024A50F0 MOV X19, X0
	0x024A50F4 LDRB W9, [X8 + 0x135]
	0x024A50F8 TBNZ X9, 0x0, 0x24A5104
	0x024A50FC MOV X0, X8
	0x024A5100 BL 0x1C5C684
	0x024A5104 STR X19, [X21 + 0xA0]
	0x024A5108 MOV X0, X21
	0x024A510C LDP X20, X19, [X31 + 0x30]
	0x024A5110 LDP X22, X21, [X31 + 0x20]
	0x024A5114 LDR X30, [X31 + 0x10]
	0x024A5118 LDP D9, D8, [X31], #0x40
	0x024A511C RET
	0x024A5120 BL 0x1C16F20
	0x024A5124 STR D10, [X31 - 0x50]!
	0x024A5128 STP D9, D8, [X31 + 0x10]
	0x024A512C STP X30, X23, [X31 + 0x20]
	0x024A5130 STP X22, X21, [X31 + 0x30]
	0x024A5134 STP X20, X19, [X31 + 0x40]
	0x024A5138 ADRP X19, 0x1F34000
	0x024A513C LDRB W8, [X19 + 0xBC4]
	0x024A5140 MOV X21, X1
	0x024A5144 MOV X20, X0
	0x024A5148 TBNZ X8, 0x0, 0x24A516C
	0x024A514C ADRP X0, 0x1C77000
	0x024A5150 LDR X0, [X0 + 0xE60]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D9
	003 Move [X31+56], D8
	004 Move [X31+64], X30
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X20, 0x1F36000
	012 Move W8, [X20+3007]
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {51}
	019 Move X0, 0x1C50000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x1C79000
	023 Move X0, [X0+3688]
	024 Call 0x1C17CF4
	025 Move X0, 0x1C79000
	026 Move X0, [X0+3680]
	027 Call 0x1C17CF4
	028 Move X0, 0x1C78000
	029 Move X0, [X0+2392]
	030 Call 0x1C17CF4
	031 Move X0, 0x1C79000
	032 Move X0, [X0+3664]
	033 Call 0x1C17CF4
	034 Move X0, 0x1C79000
	035 Move X0, [X0+3672]
	036 Call 0x1C17CF4
	037 Move X0, 0x1C50000
	038 Move X0, [X0+2760]
	039 Call 0x1C17CF4
	040 Move X0, 0x1C79000
	041 Move X0, [X0+3696]
	042 Call 0x1C17CF4
	043 Move X0, 0x1C51000
	044 Move X0, [X0+1544]
	045 Call 0x1C17CF4
	046 Move X0, 0x1C51000
	047 Move X0, [X0+1552]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X20+3007], W8
	051 Add X19, X19, 32
	052 Move X0, [X19]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, [X19]
	072 Move W8, [X0+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Call 0x1C5D684
	078 Move X8, [X0+192]
	079 Move X0, [X8+272]
	080 Call 0x2D0E6C4
	081 Move X8, [X19]
	082 Move X20, X0
	083 Move W9, [X8+309]
	084 Move TEMP, X9
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {90}
	088 Move X0, X8
	089 Call 0x1C5D684
	090 Move X0, X21
	091 Call 0x24A45D0, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {109}
	096 Move X0, [X19]
	097 Move W8, [X0+309]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {103}
	102 Call 0x1C5D684
	103 Move X0, X21
	104 Call 0x24A4610, X0
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {254}
	109 Compare X21, 0
	110 JumpIfEqual {752}
	111 Move X24, 0x1C78000
	112 Move X24, [X24+2392]
	113 Move X0, X21
	114 Move X1, X31
	115 Call Event.get_pointerType, X0
	116 Move X22, 0x1C79000
	117 Move X22, [X22+3672]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X0, [X22]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1C17DFC
	125 Move X0, [X22]
	126 Compare X20, 0
	127 JumpIfEqual {752}
	128 Move X8, [X19]
	129 Move X9, [X0+184]
	130 Move W10, [X8+309]
	131 Move X22, [X9+16]
	132 Move TEMP, X10
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {138}
	136 Move X0, X8
	137 Call 0x1C5D684
	138 Move [X20+160], X22
	139 Move X22, 0x1C79000
	140 Move X22, [X22+3664]
	141 Move X0, [X22]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {147}
	145 Call 0x1C17DFC
	146 Move X0, [X22]
	147 Move X8, [X19]
	148 Move X9, [X0+184]
	149 Move W10, [X8+309]
	150 Move W22, [X9+20]
	151 Move TEMP, X10
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {157}
	155 Move X0, X8
	156 Call 0x1C5D684
	157 Move X0, X21
	158 Move X1, X31
	159 Move [X20+156], W22
	160 Call Event.get_penStatus, X0
	161 Move X8, [X19]
	162 Move W23, W0
	163 Move W9, [X8+309]
	164 Move TEMP, X9
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfEqual {170}
	168 Move X0, X8
	169 Call 0x1C5D684
	170 Move X0, [X24]
	171 Move W22, [X20+156]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {176}
	175 Call 0x1C17DFC
	176 Move W1, 1
	177 Move W0, W22
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X2, X31
	180 Call PointerDeviceState.PressButton, X0, X1
	181 Move X0, [X22]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X22]
	187 Compare X20, 0
	188 JumpIfEqual {752}
	189 Move X8, [X19]
	190 Move X9, [X0+184]
	191 Move W10, [X8+309]
	192 Move X22, [X9+8]
	193 Move TEMP, X10
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfEqual {199}
	197 Move X0, X8
	198 Call 0x1C5D684
	199 Move [X20+160], X22
	200 Move X22, 0x1C79000
	201 Move X22, [X22+3664]
	202 Move X0, [X22]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {208}
	206 Call 0x1C17DFC
	207 Move X0, [X22]
	208 Move X8, [X19]
	209 Move X9, [X0+184]
	210 Move W10, [X8+309]
	211 Move W22, [X9+12]
	212 Move TEMP, X10
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {251}
	216 Move X0, [X22]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {222}
	220 Call 0x1C17DFC
	221 Move X0, [X22]
	222 Compare X20, 0
	223 JumpIfEqual {752}
	224 Move X8, [X19]
	225 Move X9, [X0+184]
	226 Move W10, [X8+309]
	227 Move X22, [X9]
	228 Move TEMP, X10
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfEqual {234}
	232 Move X0, X8
	233 Call 0x1C5D684
	234 Move [X20+160], X22
	235 Move X22, 0x1C79000
	236 Move X22, [X22+3664]
	237 Move X0, [X22]
	238 Move W8, [X0+224]
	239 Compare W8, 0
	240 JumpIfNotEqual {243}
	241 Call 0x1C17DFC
	242 Move X0, [X22]
	243 Move X8, [X19]
	244 Move X9, [X0+184]
	245 Move W10, [X8+309]
	246 Move W22, [X9+8]
	247 Move TEMP, X10
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfEqual {253}
	251 Move X0, X8
	252 Call 0x1C5D684
	253 Move [X20+156], W22
	254 Compare X21, 0
	255 JumpIfEqual {752}
	256 Move X0, X21
	257 Move X1, X31
	258 Call Event.get_rawType, X0
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X8, 0x1C50000
	261 Move X8, [X8+2760]
	262 Move W1, 5
	263 Move X0, [X8]
	264 Call 0x1C17D6C
	265 Compare X0, 0
	266 JumpIfEqual {752}
	267 Move W8, [X0+24]
	268 Move X22, X0
	269 Compare W8, 0
	270 JumpIfEqual {753}
	271 Move X8, 0x1C79000
	272 Move X8, [X8+3696]
	273 Move X0, X21
	274 Move X1, X31
	275 Move X8, [X8]
	276 Move [X22+32], X8
	277 Call Event.get_rawType, X0
	278 Move X23, 0x1C79000
	279 Move X23, [X23+3688]
	280 Move TEMP, 0
	281 Not TEMP
	282 Move X9, TEMP
	283 Move [X31+40], W0
	284 Add X0, X31, 24
	285 Move X8, [X23]
	286 Move X1, X31
	287 Move [X31+24], X8
	288 Move [X31+32], X9
	289 Call Enum.ToString, X0
	290 Move W8, [X22+24]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move [X22+40], X0
	294 Move X8, 0x1C51000
	295 Move X8, [X8+1552]
	296 Move X0, X21
	297 Move X1, X31
	298 Move X8, [X8]
	299 Move [X22+48], X8
	300 Call Event.get_type, X0
	301 Move X8, [X23]
	302 Move TEMP, 0
	303 Not TEMP
	304 Move X9, TEMP
	305 Move [X31+16], W0
	306 Add X0, X31, 0
	307 Move X1, X31
	308 Move [X31], X8
	309 Move [X31+8], X9
	310 Call Enum.ToString, X0
	311 Move W8, [X22+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move [X22+56], X0
	315 Move X8, 0x1C51000
	316 Move X8, [X8+1544]
	317 Move X0, X22
	318 Move X1, X31
	319 Move X8, [X8]
	320 Move [X22+64], X8
	321 Call String.Concat, X0
	322 Move X8, 0x1C50000
	323 Move X8, [X8+2600]
	324 Move X22, X0
	325 Move X8, [X8]
	326 Move W9, [X8+224]
	327 Compare W9, 0
	328 JumpIfNotEqual {331}
	329 Move X0, X8
	330 Call 0x1C17DFC
	331 Move W0, W31
	332 Move X1, X22
	333 Move X2, X31
	334 Call Debug.Assert, X0, X1
	335 Move X2, X31
	336 Call PointerDeviceState.ReleaseButton, X0, X1
	337 Move X0, X21
	338 Move X1, X31
	339 Call Event.get_penStatus, X0
	340 Move X8, [X19]
	341 Move W23, W0
	342 Move W9, [X8+309]
	343 Move TEMP, X9
	344 And TEMP, TEMP, 1
	345 Compare TEMP, 1
	346 JumpIfEqual {349}
	347 Move X0, X8
	348 Call 0x1C5D684
	349 Move X0, [X24]
	350 Move W22, [X20+156]
	351 Move W8, [X0+224]
	352 Compare W8, 0
	353 JumpIfNotEqual {355}
	354 Call 0x1C17DFC
	355 Move W1, 5
	356 Move W0, W22
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X2, X31
	359 Call PointerDeviceState.PressButton, X0, X1
	360 Move X2, X31
	361 Call PointerDeviceState.ReleaseButton, X0, X1
	362 Move X0, [X19]
	363 Move W8, [X0+309]
	364 Move TEMP, X8
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfEqual {370}
	368 Call 0x1C5D684
	369 Move X0, [X19]
	370 Move W22, 1
	371 Move [X20+168], W22
	372 Move W8, [X0+309]
	373 Move TEMP, X8
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfEqual {379}
	377 Call 0x1C5D684
	378 Move X0, [X19]
	379 Move [X20+132], W22
	380 Move [X20+136], W31
	381 Move W8, [X0+309]
	382 Move TEMP, X8
	383 And TEMP, TEMP, 1
	384 Compare TEMP, 1
	385 JumpIfEqual {387}
	386 Call 0x1C5D684
	387 Move W23, 1
	388 Move [X20+140], W31
	389 Move [X20+133], W23
	390 Move X22, 0x1F36000
	391 Move W8, [X22+1935]
	392 Compare W8, 0
	393 JumpIfNotEqual {398}
	394 Move X0, 0x1C58000
	395 Move X0, [X0+3848]
	396 Call 0x1C17CF4
	397 Move [X22+1935], W23
	398 Move X23, 0x1C58000
	399 Move X23, [X23+3848]
	400 Move X0, [X19]
	401 Move X8, [X23]
	402 Move W9, [X0+309]
	403 Move X8, [X8+184]
	404 Move S9, [X8]
	405 Move S8, [X8+4]
	406 Move TEMP, X9
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfEqual {421}
	410 Call 0x1C5D684
	411 Move W8, [X22+1935]
	412 Move [X20+240], S9
	413 Move [X20+248], S8
	414 Compare W8, 0
	415 JumpIfNotEqual {423}
	416 Move X0, 0x1C58000
	417 Move X0, [X0+3848]
	418 Call 0x1C17CF4
	419 Move W8, 1
	420 Move [X22+1935], W8
	421 Move [X20+240], S9
	422 Move [X20+248], S8
	423 Move X8, [X23]
	424 Move X0, [X19]
	425 Move X8, [X8+184]
	426 Move W9, [X0+309]
	427 Move S9, [X8]
	428 Move S8, [X8+4]
	429 Move TEMP, X9
	430 And TEMP, TEMP, 1
	431 Compare TEMP, 1
	432 JumpIfEqual {434}
	433 Call 0x1C5D684
	434 Move X0, X20
	435 Move X1, X21
	436 Move X2, X31
	437 Move [X20+248], S9
	438 Move [X20+256], S8
	439 Call EventBase.set_imguiEvent, X0, X1
	440 Move X0, X21
	441 Move X1, X31
	442 Call Event.get_rawType, X0
	443 Compare W0, 0
	444 JumpIfEqual {449}
	445 Move X0, X21
	446 Move X1, X31
	447 Call Event.get_rawType, X0
	448 NotImplemented "Instruction CMP not yet implemented."
	449 Move X0, [X19]
	450 Move W8, [X0+309]
	451 Move TEMP, X8
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfEqual {456}
	455 Call 0x1C5D684
	456 Move W22, [X20+156]
	457 Move X0, X21
	458 Move X1, X31
	459 Call Event.get_button, X0
	460 Move X8, [X24]
	461 Move W23, W0
	462 Move W9, [X8+224]
	463 Compare W9, 0
	464 JumpIfNotEqual {467}
	465 Move X0, X8
	466 Call 0x1C17DFC
	467 Move W0, W22
	468 Move W1, W23
	469 Move X2, X31
	470 Call PointerDeviceState.PressButton, X0, X1
	471 Move X0, X21
	472 Move X1, X31
	473 Call Event.get_rawType, X0
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Move X0, X21
	476 Move X1, X31
	477 Call Event.get_rawType, X0
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Move X0, [X19]
	480 Move W8, [X0+309]
	481 Move TEMP, X8
	482 And TEMP, TEMP, 1
	483 Compare TEMP, 1
	484 JumpIfEqual {486}
	485 Call 0x1C5D684
	486 Move W22, [X20+156]
	487 Move X0, X21
	488 Move X1, X31
	489 Call Event.get_button, X0
	490 Move X8, [X24]
	491 Move W23, W0
	492 Move W9, [X8+224]
	493 Compare W9, 0
	494 JumpIfNotEqual {497}
	495 Move X0, X8
	496 Call 0x1C17DFC
	497 Move W0, W22
	498 Move W1, W23
	499 Move X2, X31
	500 Call PointerDeviceState.ReleaseButton, X0, X1
	501 Move X0, X21
	502 Move X1, X31
	503 Call Event.get_button, X0
	504 Move X8, [X19]
	505 Move W22, W0
	506 Move W9, [X8+309]
	507 Move TEMP, X9
	508 And TEMP, TEMP, 1
	509 Compare TEMP, 1
	510 JumpIfEqual {513}
	511 Move X0, X8
	512 Call 0x1C5D684
	513 Move [X20+172], W22
	514 Move X0, [X19]
	515 Move W8, [X0+309]
	516 Move TEMP, X8
	517 And TEMP, TEMP, 1
	518 Compare TEMP, 1
	519 JumpIfEqual {521}
	520 Call 0x1C5D684
	521 Move X0, [X24]
	522 Move W22, [X20+156]
	523 Move W8, [X0+224]
	524 Compare W8, 0
	525 JumpIfNotEqual {527}
	526 Call 0x1C17DFC
	527 Move W0, W22
	528 Move X1, X31
	529 Call PointerDeviceState.GetPressedButtons, X0
	530 Move X8, [X19]
	531 Move W22, W0
	532 Move W9, [X8+309]
	533 Move TEMP, X9
	534 And TEMP, TEMP, 1
	535 Compare TEMP, 1
	536 JumpIfEqual {539}
	537 Move X0, X8
	538 Call 0x1C5D684
	539 Move X0, X21
	540 Move X1, X31
	541 Move [X20+176], W22
	542 Call Event.get_mousePosition, X0
	543 Move X0, [X19]
	544 Move V8, V0
	545 Move V9, V1
	546 Move W8, [X0+309]
	547 Move TEMP, X8
	548 And TEMP, TEMP, 1
	549 Compare TEMP, 1
	550 JumpIfEqual {552}
	551 Call 0x1C5D684
	552 Move X0, X21
	553 Move X1, X31
	554 Move [X20+180], S8
	555 Move [X20+188], S9
	556 Move [X20+188], W31
	557 Call Event.get_mousePosition, X0
	558 Move X0, [X19]
	559 Move V8, V0
	560 Move V9, V1
	561 Move W8, [X0+309]
	562 Move TEMP, X8
	563 And TEMP, TEMP, 1
	564 Compare TEMP, 1
	565 JumpIfEqual {567}
	566 Call 0x1C5D684
	567 Move X0, X21
	568 Move X1, X31
	569 Move [X20+192], S8
	570 Move [X20+200], S9
	571 Move [X20+200], W31
	572 Call Event.get_delta, X0
	573 Move X0, [X19]
	574 Move V8, V0
	575 Move V9, V1
	576 Move W8, [X0+309]
	577 Move TEMP, X8
	578 And TEMP, TEMP, 1
	579 Compare TEMP, 1
	580 JumpIfEqual {582}
	581 Call 0x1C5D684
	582 Move X0, X21
	583 Move X1, X31
	584 Move [X20+204], S8
	585 Move [X20+212], S9
	586 Move [X20+212], W31
	587 Call Event.get_clickCount, X0
	588 Move X8, [X19]
	589 Move W22, W0
	590 Move W9, [X8+309]
	591 Move TEMP, X9
	592 And TEMP, TEMP, 1
	593 Compare TEMP, 1
	594 JumpIfEqual {597}
	595 Move X0, X8
	596 Call 0x1C5D684
	597 Move X0, X21
	598 Move X1, X31
	599 Move [X20+220], W22
	600 Call Event.get_modifiers, X0
	601 Move X8, [X19]
	602 Move W22, W0
	603 Move W9, [X8+309]
	604 Move TEMP, X9
	605 And TEMP, TEMP, 1
	606 Compare TEMP, 1
	607 JumpIfEqual {610}
	608 Move X0, X8
	609 Call 0x1C5D684
	610 Move X0, X21
	611 Move X1, X31
	612 Move [X20+256], W22
	613 Call Event.get_tilt, X0
	614 Move X0, [X19]
	615 Move V8, V0
	616 Move V9, V1
	617 Move W8, [X0+309]
	618 Move TEMP, X8
	619 And TEMP, TEMP, 1
	620 Compare TEMP, 1
	621 JumpIfEqual {623}
	622 Call 0x1C5D684
	623 Move W8, 1
	624 Move X0, X21
	625 Move X1, X31
	626 Move [X20+144], W8
	627 Move [X20+148], S8
	628 Move [X20+156], S9
	629 Call Event.get_penStatus, X0
	630 Move X8, [X19]
	631 Move W22, W0
	632 Move W9, [X8+309]
	633 Move TEMP, X9
	634 And TEMP, TEMP, 1
	635 Compare TEMP, 1
	636 JumpIfEqual {639}
	637 Move X0, X8
	638 Call 0x1C5D684
	639 Move X0, X21
	640 Move X1, X31
	641 Move [X20+236], W22
	642 Call Event.get_twist, X0
	643 Move X0, [X19]
	644 Move V8, V0
	645 Move W8, [X0+309]
	646 Move TEMP, X8
	647 And TEMP, TEMP, 1
	648 Compare TEMP, 1
	649 JumpIfEqual {651}
	650 Call 0x1C5D684
	651 Move X0, X21
	652 Move X1, X31
	653 Move [X20+232], S8
	654 Call Event.get_pointerType, X0
	655 NotImplemented "Instruction CMP not yet implemented."
	656 NotImplemented "Instruction CMP not yet implemented."
	657 Move X0, X21
	658 Move X1, X31
	659 Call Event.get_pressure, X0
	660 Move X0, [X19]
	661 Move V8, V0
	662 Move W8, [X0+309]
	663 Move TEMP, X8
	664 And TEMP, TEMP, 1
	665 Compare TEMP, 1
	666 JumpIfEqual {668}
	667 Call 0x1C5D684
	668 Move [X20+224], S8
	669 Move X0, [X19]
	670 Move X19, 0x1C78000
	671 Move W8, [X0+309]
	672 Move X19, [X19+3680]
	673 Move TEMP, X8
	674 And TEMP, TEMP, 1
	675 Compare TEMP, 1
	676 JumpIfEqual {678}
	677 Call 0x1C5D684
	678 Move X8, [X20]
	679 Move [X20+228], W31
	680 Move X1, [X19]
	681 NotImplemented "Instruction LDRH not yet implemented."
	682 Compare X9, 0
	683 JumpIfEqual {690}
	684 Move X10, [X8+176]
	685 Add X10, X10, 8
	686 NotImplemented "Instruction LDUR not yet implemented."
	687 NotImplemented "Instruction CMP not yet implemented."
	688 Subtract X9, X9, 1
	689 Add X10, X10, 16
	690 Move W2, 1
	691 Move X0, X20
	692 Call 0x1C5D788
	693 Move X0, [X19]
	694 Add X8, X0, 309
	695 NotImplemented "Instruction LDRH not yet implemented."
	696 Move TEMP, X8
	697 And TEMP, TEMP, 1
	698 Compare TEMP, 1
	699 JumpIfEqual {704}
	700 Call 0x1C5D684
	701 Move X0, [X19]
	702 Add X8, X0, 309
	703 NotImplemented "Instruction LDRH not yet implemented."
	704 Move W9, [X20+176]
	705 Move S0, 0.5
	706 Move S1, W31
	707 NotImplemented "Instruction CMP not yet implemented."
	708 NotImplemented "Instruction FCSEL not yet implemented."
	709 Move TEMP, X8
	710 And TEMP, TEMP, 1
	711 Compare TEMP, 1
	712 JumpIfNotEqual {667}
	713 Move W9, [X10]
	714 Add W9, W9, 1
	715 Add X8, X8, W9
	716 Add X0, X8, 312
	717 Move X8, [X0]
	718 Move X2, [X0+8]
	719 Move W1, 1
	720 Move X0, X20
	721 NotImplemented "Instruction BLR not yet implemented."
	722 Move X0, X20
	723 Move X20, [X31+112]
	724 Move X19, [X31+120]
	725 Move X22, [X31+96]
	726 Move X21, [X31+104]
	727 Move X24, [X31+80]
	728 Move X23, [X31+88]
	729 Move X30, [X31+64]
	730 Move D9, [X31+48]
	731 Move D8, [X31+56]
	732 Add X31, X31, 128
	733 Return X0
	734 Move X0, X21
	735 Move X1, X31
	736 Call Event.get_rawType, X0
	737 NotImplemented "Instruction CMP not yet implemented."
	738 Move X0, X21
	739 Move X1, X31
	740 Call Event.get_rawType, X0
	741 NotImplemented "Instruction CMP not yet implemented."
	742 Move X0, [X19]
	743 Move W8, [X0+309]
	744 Move TEMP, X8
	745 And TEMP, TEMP, 1
	746 Compare TEMP, 1
	747 JumpIfEqual {749}
	748 Call 0x1C5D684
	749 Move TEMP, 0
	750 Not TEMP
	751 Move W22, TEMP
	752 Call 0x1C17F20
	753 Call 0x1C17F28

Method: T GetPooled(UnityEngine.EventType eventType, UnityEngine.Vector3 mousePosition, UnityEngine.Vector2 delta, System.Int32 button, System.Int32 clickCount, UnityEngine.EventModifiers modifiers)

Disassembly:
	0x024A5154 BL 0x1C16CF4
	0x024A5158 ADRP X0, 0x1C77000
	0x024A515C LDR X0, [X0 + 0xE78]
	0x024A5160 BL 0x1C16CF4
	0x024A5164 MOVZ W8, 0x1
	0x024A5168 STRB W8, [X19 + 0xBC4]
	0x024A516C LDR X0, [X21 + 0x20]!
	0x024A5170 LDRB W8, [X0 + 0x135]
	0x024A5174 TBNZ X8, 0x0, 0x24A517C
	0x024A5178 BL 0x1C5C684
	0x024A517C LDR X8, [X0 + 0xC0]
	0x024A5180 LDR X0, [X8 + 0x20]
	0x024A5184 LDRB W8, [X0 + 0x135]
	0x024A5188 TBNZ X8, 0x0, 0x24A5190
	0x024A518C BL 0x1C5C684
	0x024A5190 LDR W8, [X0 + 0xE0]
	0x024A5194 CBNZ W8, 0x24A519C
	0x024A5198 BL 0x1C16DFC
	0x024A519C LDR X0, [X21]
	0x024A51A0 LDRB W8, [X0 + 0x135]
	0x024A51A4 TBNZ X8, 0x0, 0x24A51AC
	0x024A51A8 BL 0x1C5C684
	0x024A51AC LDR X8, [X0 + 0xC0]
	0x024A51B0 LDR X0, [X8 + 0x110]
	0x024A51B4 BL 0x2D0D6C4
	0x024A51B8 MOV X19, X0
	0x024A51BC CBZ X20, 0x24A5C74
	0x024A51C0 ADRP X23, 0x1C77000
	0x024A51C4 LDR X8, [X20]
	0x024A51C8 LDR X23, [X23 + 0xE78]
	0x024A51CC LDRH W9, [X8 + 0x12E]
	0x024A51D0 LDR X1, [X23]
	0x024A51D4 CBZ X9, 0x24A51F8
	0x024A51D8 LDR X10, [X8 + 0xB0]
	0x024A51DC ADD X10, X10, 0x8
	0x024A51E0 LDUR X11, [X10 - 0x8]
	0x024A51E4 CMP X11, X1
	0x024A51E8 B.EQ 0x24A5208
	0x024A51EC SUBS X9, X9, 0x1
	0x024A51F0 ADD X10, X10, 0x10
	0x024A51F4 B.NE 0x24A51E0
	0x024A51F8 MOV X0, X20
	0x024A51FC MOV W2, W31
	0x024A5200 BL 0x1C5C788
	0x024A5204 B 0x24A5214
	0x024A5208 LDRSW X9, [X10]
	0x024A520C ADD X8, X8, X9, 0x4, LSL
	0x024A5210 ADD X0, X8, 0x138
	0x024A5214 LDP X8, X1, [X0]
	0x024A5218 MOV X0, X20
	0x024A521C BLR X8
	0x024A5220 CBZ X19, 0x24A5C90
	0x024A5224 MOV W22, W0
	0x024A5228 LDR X0, [X21]
	0x024A522C LDRB W8, [X0 + 0x135]
	0x024A5230 TBNZ X8, 0x0, 0x24A5238
	0x024A5234 BL 0x1C5C684
	0x024A5238 STR W22, [X19 + 0x9C]
	0x024A523C LDR X8, [X20]
	0x024A5240 LDR X1, [X23]
	0x024A5244 LDRH W9, [X8 + 0x12E]
	0x024A5248 CBZ X9, 0x24A526C
	0x024A524C LDR X10, [X8 + 0xB0]
	0x024A5250 ADD X10, X10, 0x8
	0x024A5254 LDUR X11, [X10 - 0x8]
	0x024A5258 CMP X11, X1
	0x024A525C B.EQ 0x24A527C
	0x024A5260 SUBS X9, X9, 0x1
	0x024A5264 ADD X10, X10, 0x10
	0x024A5268 B.NE 0x24A5254
	0x024A526C MOVZ W2, 0x1
	0x024A5270 MOV X0, X20
	0x024A5274 BL 0x1C5C788
	0x024A5278 B 0x24A528C
	0x024A527C LDR W9, [X10]
	0x024A5280 ADD W9, W9, 0x1
	0x024A5284 ADD X8, X8, W9, 0x4, SXTW
	0x024A5288 ADD X0, X8, 0x138
	0x024A528C LDP X8, X1, [X0]
	0x024A5290 MOV X0, X20
	0x024A5294 BLR X8
	0x024A5298 LDR X8, [X21]
	0x024A529C MOV X22, X0
	0x024A52A0 LDRB W9, [X8 + 0x135]
	0x024A52A4 TBNZ X9, 0x0, 0x24A52B0
	0x024A52A8 MOV X0, X8
	0x024A52AC BL 0x1C5C684
	0x024A52B0 STR X22, [X19 + 0xA0]
	0x024A52B4 LDR X8, [X20]
	0x024A52B8 LDR X1, [X23]
	0x024A52BC LDRH W9, [X8 + 0x12E]
	0x024A52C0 CBZ X9, 0x24A52E4
	0x024A52C4 LDR X10, [X8 + 0xB0]
	0x024A52C8 ADD X10, X10, 0x8
	0x024A52CC LDUR X11, [X10 - 0x8]
	0x024A52D0 CMP X11, X1
	0x024A52D4 B.EQ 0x24A52F4
	0x024A52D8 SUBS X9, X9, 0x1
	0x024A52DC ADD X10, X10, 0x10
	0x024A52E0 B.NE 0x24A52CC
	0x024A52E4 MOVZ W2, 0x2
	0x024A52E8 MOV X0, X20
	0x024A52EC BL 0x1C5C788
	0x024A52F0 B 0x24A5304
	0x024A52F4 LDR W9, [X10]
	0x024A52F8 ADD W9, W9, 0x2
	0x024A52FC ADD X8, X8, W9, 0x4, SXTW
	0x024A5300 ADD X0, X8, 0x138
	0x024A5304 LDP X8, X1, [X0]
	0x024A5308 MOV X0, X20
	0x024A530C BLR X8
	0x024A5310 LDR X8, [X21]
	0x024A5314 MOV W22, W0
	0x024A5318 LDRB W9, [X8 + 0x135]
	0x024A531C TBNZ X9, 0x0, 0x24A5328
	0x024A5320 MOV X0, X8
	0x024A5324 BL 0x1C5C684
	0x024A5328 AND W8, W22, 0x1
	0x024A532C STRB W8, [X19 + 0xA8]
	0x024A5330 LDR X8, [X20]
	0x024A5334 LDR X1, [X23]
	0x024A5338 LDRH W9, [X8 + 0x12E]
	0x024A533C CBZ X9, 0x24A5360
	0x024A5340 LDR X10, [X8 + 0xB0]
	0x024A5344 ADD X10, X10, 0x8
	0x024A5348 LDUR X11, [X10 - 0x8]
	0x024A534C CMP X11, X1
	0x024A5350 B.EQ 0x24A5370
	0x024A5354 SUBS X9, X9, 0x1
	0x024A5358 ADD X10, X10, 0x10
	0x024A535C B.NE 0x24A5348
	0x024A5360 MOVZ W2, 0x3
	0x024A5364 MOV X0, X20
	0x024A5368 BL 0x1C5C788
	0x024A536C B 0x24A5380
	0x024A5370 LDR W9, [X10]
	0x024A5374 ADD W9, W9, 0x3
	0x024A5378 ADD X8, X8, W9, 0x4, SXTW
	0x024A537C ADD X0, X8, 0x138
	0x024A5380 LDP X8, X1, [X0]
	0x024A5384 MOV X0, X20
	0x024A5388 BLR X8
	0x024A538C LDR X8, [X21]
	0x024A5390 MOV W22, W0
	0x024A5394 LDRB W9, [X8 + 0x135]
	0x024A5398 TBNZ X9, 0x0, 0x24A53A4
	0x024A539C MOV X0, X8
	0x024A53A0 BL 0x1C5C684
	0x024A53A4 STR W22, [X19 + 0xAC]
	0x024A53A8 LDR X8, [X20]
	0x024A53AC LDR X1, [X23]
	0x024A53B0 LDRH W9, [X8 + 0x12E]
	0x024A53B4 CBZ X9, 0x24A53D8
	0x024A53B8 LDR X10, [X8 + 0xB0]
	0x024A53BC ADD X10, X10, 0x8
	0x024A53C0 LDUR X11, [X10 - 0x8]
	0x024A53C4 CMP X11, X1
	0x024A53C8 B.EQ 0x24A53E8
	0x024A53CC SUBS X9, X9, 0x1
	0x024A53D0 ADD X10, X10, 0x10
	0x024A53D4 B.NE 0x24A53C0
	0x024A53D8 MOVZ W2, 0x4
	0x024A53DC MOV X0, X20
	0x024A53E0 BL 0x1C5C788
	0x024A53E4 B 0x24A53F8
	0x024A53E8 LDR W9, [X10]
	0x024A53EC ADD W9, W9, 0x4
	0x024A53F0 ADD X8, X8, W9, 0x4, SXTW
	0x024A53F4 ADD X0, X8, 0x138
	0x024A53F8 LDP X8, X1, [X0]
	0x024A53FC MOV X0, X20
	0x024A5400 BLR X8
	0x024A5404 LDR X8, [X21]
	0x024A5408 MOV W22, W0
	0x024A540C LDRB W9, [X8 + 0x135]
	0x024A5410 TBNZ X9, 0x0, 0x24A541C
	0x024A5414 MOV X0, X8
	0x024A5418 BL 0x1C5C684
	0x024A541C STR W22, [X19 + 0xB0]
	0x024A5420 LDR X8, [X20]
	0x024A5424 LDR X1, [X23]
	0x024A5428 LDRH W9, [X8 + 0x12E]
	0x024A542C CBZ X9, 0x24A5450
	0x024A5430 LDR X10, [X8 + 0xB0]
	0x024A5434 ADD X10, X10, 0x8
	0x024A5438 LDUR X11, [X10 - 0x8]
	0x024A543C CMP X11, X1
	0x024A5440 B.EQ 0x24A5460
	0x024A5444 SUBS X9, X9, 0x1
	0x024A5448 ADD X10, X10, 0x10
	0x024A544C B.NE 0x24A5438
	0x024A5450 MOVZ W2, 0x5
	0x024A5454 MOV X0, X20
	0x024A5458 BL 0x1C5C788
	0x024A545C B 0x24A5470
	0x024A5460 LDR W9, [X10]
	0x024A5464 ADD W9, W9, 0x5
	0x024A5468 ADD X8, X8, W9, 0x4, SXTW
	0x024A546C ADD X0, X8, 0x138
	0x024A5470 LDP X8, X1, [X0]
	0x024A5474 MOV X0, X20
	0x024A5478 BLR X8
	0x024A547C LDR X0, [X21]
	0x024A5480 MOV V8.16B, V0.16B
	0x024A5484 MOV V9.16B, V1.16B
	0x024A5488 MOV V10.16B, V2.16B
	0x024A548C LDRB W8, [X0 + 0x135]
	0x024A5490 TBNZ X8, 0x0, 0x24A5498
	0x024A5494 BL 0x1C5C684
	0x024A5498 STP S8, S9, [X19 + 0xB4]
	0x024A549C STR S10, [X19 + 0xBC]
	0x024A54A0 LDR X8, [X20]
	0x024A54A4 LDR X1, [X23]
	0x024A54A8 LDRH W9, [X8 + 0x12E]
	0x024A54AC CBZ X9, 0x24A54D0
	0x024A54B0 LDR X10, [X8 + 0xB0]
	0x024A54B4 ADD X10, X10, 0x8
	0x024A54B8 LDUR X11, [X10 - 0x8]
	0x024A54BC CMP X11, X1
	0x024A54C0 B.EQ 0x24A54E0
	0x024A54C4 SUBS X9, X9, 0x1
	0x024A54C8 ADD X10, X10, 0x10
	0x024A54CC B.NE 0x24A54B8
	0x024A54D0 MOVZ W2, 0x6
	0x024A54D4 MOV X0, X20
	0x024A54D8 BL 0x1C5C788
	0x024A54DC B 0x24A54F0
	0x024A54E0 LDR W9, [X10]
	0x024A54E4 ADD W9, W9, 0x6
	0x024A54E8 ADD X8, X8, W9, 0x4, SXTW
	0x024A54EC ADD X0, X8, 0x138
	0x024A54F0 LDP X8, X1, [X0]
	0x024A54F4 MOV X0, X20
	0x024A54F8 BLR X8
	0x024A54FC LDR X0, [X21]
	0x024A5500 MOV V8.16B, V0.16B

ISIL:
	001 Move [X31-112], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X21, 0x1F35000
	016 Move W8, [X21+3008]
	017 Move X19, X4
	018 Move W20, W3
	019 Move W22, W2
	020 Move W23, W1
	021 Move V8, V4
	022 Move V9, V3
	023 Move V10, V2
	024 Move V11, V1
	025 Move V12, V0
	026 Move W24, W0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {45}
	031 Move X0, 0x1C78000
	032 Move X0, [X0+3680]
	033 Call 0x1C17CF4
	034 Move X0, 0x1C77000
	035 Move X0, [X0+2392]
	036 Call 0x1C17CF4
	037 Move X0, 0x1C78000
	038 Move X0, [X0+3664]
	039 Call 0x1C17CF4
	040 Move X0, 0x1C78000
	041 Move X0, [X0+3672]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X21+3008], W8
	045 Move X0, [X19+32]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X8, [X0+192]
	053 Move X0, [X8+32]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, [X19+32]
	065 Move X25, 0x1C78000
	066 Move W8, [X0+309]
	067 Move X25, [X25+3664]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move X8, [X0+192]
	074 Move X0, [X8+272]
	075 Call 0x2D0E6C4
	076 Move X8, [X25]
	077 Move X21, X0
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {84}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X8, [X25]
	084 Compare X21, 0
	085 JumpIfEqual {317}
	086 Move X0, [X19+32]
	087 Move X8, [X8+184]
	088 Move X25, 0x1C78000
	089 Move W9, [X0+309]
	090 Move W26, [X8+8]
	091 Move X25, [X25+3672]
	092 Move TEMP, X9
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move [X21+156], W26
	098 Move X8, [X25]
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {105}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X8, [X25]
	105 Move X0, [X19+32]
	106 Move X8, [X8+184]
	107 Move W9, [X0+309]
	108 Move X25, [X8]
	109 Move TEMP, X9
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {115}
	113 Call 0x1C5D684
	114 Move X0, [X19+32]
	115 Move [X21+160], X25
	116 Move W8, [X0+309]
	117 Move TEMP, X8
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfEqual {122}
	121 Call 0x1C5D684
	122 Move X25, 0x1C77000
	123 Move X25, [X25+2392]
	124 Move W8, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X21+168], W8
	127 Compare W24, 0
	128 JumpIfNotEqual {170}
	129 Move X0, [X19+32]
	130 Move W8, [X0+309]
	131 Move TEMP, X8
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {136}
	135 Call 0x1C5D684
	136 Move X0, [X25]
	137 Move W24, [X21+156]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move W0, W24
	143 Move W1, W23
	144 Move X2, X31
	145 Call PointerDeviceState.PressButton, X0, X1
	146 Move X0, [X19+32]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {153}
	152 Call 0x1C5D684
	153 Move X0, [X25]
	154 Move W24, [X21+156]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move W0, W24
	160 Move W1, W23
	161 Move X2, X31
	162 Call PointerDeviceState.ReleaseButton, X0, X1
	163 Move X0, [X19+32]
	164 Move W8, [X0+309]
	165 Move TEMP, X8
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {180}
	169 Call 0x1C5D684
	170 Move X0, [X19+32]
	171 Move W8, [X0+309]
	172 Move TEMP, X8
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {177}
	176 Call 0x1C5D684
	177 Move TEMP, 0
	178 Not TEMP
	179 Move W23, TEMP
	180 Move [X21+172], W23
	181 Move X0, [X19+32]
	182 Move W8, [X0+309]
	183 Move TEMP, X8
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {188}
	187 Call 0x1C5D684
	188 Move X0, [X25]
	189 Move W23, [X21+156]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move W0, W23
	195 Move X1, X31
	196 Call PointerDeviceState.GetPressedButtons, X0
	197 Move X8, [X19+32]
	198 Move W23, W0
	199 Move W9, [X8+309]
	200 Move TEMP, X9
	201 And TEMP, TEMP, 1
	202 Compare TEMP, 1
	203 JumpIfEqual {207}
	204 Move X0, X8
	205 Call 0x1C5D684
	206 Move X8, [X19+32]
	207 Move [X21+176], W23
	208 Move W9, [X8+309]
	209 Move TEMP, X9
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfEqual {215}
	213 Move X0, X8
	214 Call 0x1C5D684
	215 Move [X21+180], S12
	216 Move [X21+188], S11
	217 Move [X21+188], S10
	218 Move X0, [X19+32]
	219 Move W8, [X0+309]
	220 Move TEMP, X8
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfEqual {225}
	224 Call 0x1C5D684
	225 Move [X21+192], S12
	226 Move [X21+200], S11
	227 Move [X21+200], S10
	228 Move X0, [X19+32]
	229 Move W8, [X0+309]
	230 Move TEMP, X8
	231 And TEMP, TEMP, 1
	232 Compare TEMP, 1
	233 JumpIfEqual {235}
	234 Call 0x1C5D684
	235 Move [X21+204], S9
	236 Move [X21+212], S8
	237 Move [X21+212], W31
	238 Move X0, [X19+32]
	239 Move W8, [X0+309]
	240 Move TEMP, X8
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfEqual {246}
	244 Call 0x1C5D684
	245 Move X0, [X19+32]
	246 Move [X21+220], W22
	247 Move W8, [X0+309]
	248 Move TEMP, X8
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {254}
	252 Call 0x1C5D684
	253 Move X0, [X19+32]
	254 Move [X21+256], W20
	255 Add X8, X0, 309
	256 NotImplemented "Instruction LDRH not yet implemented."
	257 Move TEMP, X8
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfEqual {265}
	261 Call 0x1C5D684
	262 Move X0, [X19+32]
	263 Add X8, X0, 309
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Move W9, [X21+176]
	266 Move X19, 0x1C78000
	267 Move X19, [X19+3680]
	268 Move S0, 0.5
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move S1, W31
	271 NotImplemented "Instruction FCSEL not yet implemented."
	272 Move TEMP, X8
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfEqual {277}
	276 Call 0x1C5D684
	277 Move X8, [X21]
	278 Move [X21+224], S8
	279 Move X1, [X19]
	280 NotImplemented "Instruction LDRH not yet implemented."
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move W2, 1
	290 Move X0, X21
	291 Call 0x1C5D788
	292 Move W9, [X10]
	293 Add W9, W9, 1
	294 Add X8, X8, W9
	295 Add X0, X8, 312
	296 Move X8, [X0]
	297 Move X2, [X0+8]
	298 Move W1, 1
	299 Move X0, X21
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move X0, X21
	302 Move X20, [X31+96]
	303 Move X19, [X31+104]
	304 Move X22, [X31+80]
	305 Move X21, [X31+88]
	306 Move X24, [X31+64]
	307 Move X23, [X31+72]
	308 Move X26, [X31+48]
	309 Move X25, [X31+56]
	310 Move X30, [X31+40]
	311 Move D9, [X31+24]
	312 Move D8, [X31+32]
	313 Move D11, [X31+8]
	314 Move D10, [X31+16]
	315 Move V12, [X31+112]
	316 Return X0
	317 Call 0x1C17F20

Method: T GetPooled(UnityEngine.Touch touch, UnityEngine.EventModifiers modifiers = 0)

Disassembly:
	0x024A5504 MOV V9.16B, V1.16B
	0x024A5508 MOV V10.16B, V2.16B
	0x024A550C LDRB W8, [X0 + 0x135]
	0x024A5510 TBNZ X8, 0x0, 0x24A5518
	0x024A5514 BL 0x1C5C684
	0x024A5518 STP S8, S9, [X19 + 0xC0]
	0x024A551C STR S10, [X19 + 0xC8]
	0x024A5520 LDR X8, [X20]
	0x024A5524 LDR X1, [X23]
	0x024A5528 LDRH W9, [X8 + 0x12E]
	0x024A552C CBZ X9, 0x24A5550
	0x024A5530 LDR X10, [X8 + 0xB0]
	0x024A5534 ADD X10, X10, 0x8
	0x024A5538 LDUR X11, [X10 - 0x8]
	0x024A553C CMP X11, X1
	0x024A5540 B.EQ 0x24A5560
	0x024A5544 SUBS X9, X9, 0x1
	0x024A5548 ADD X10, X10, 0x10
	0x024A554C B.NE 0x24A5538
	0x024A5550 MOVZ W2, 0x7
	0x024A5554 MOV X0, X20
	0x024A5558 BL 0x1C5C788
	0x024A555C B 0x24A5570
	0x024A5560 LDR W9, [X10]
	0x024A5564 ADD W9, W9, 0x7
	0x024A5568 ADD X8, X8, W9, 0x4, SXTW
	0x024A556C ADD X0, X8, 0x138
	0x024A5570 LDP X8, X1, [X0]
	0x024A5574 MOV X0, X20
	0x024A5578 BLR X8
	0x024A557C LDR X0, [X21]
	0x024A5580 MOV V8.16B, V0.16B
	0x024A5584 MOV V9.16B, V1.16B
	0x024A5588 MOV V10.16B, V2.16B
	0x024A558C LDRB W8, [X0 + 0x135]
	0x024A5590 TBNZ X8, 0x0, 0x24A5598
	0x024A5594 BL 0x1C5C684
	0x024A5598 STP S8, S9, [X19 + 0xCC]
	0x024A559C STR S10, [X19 + 0xD4]
	0x024A55A0 LDR X8, [X20]
	0x024A55A4 LDR X1, [X23]
	0x024A55A8 LDRH W9, [X8 + 0x12E]
	0x024A55AC CBZ X9, 0x24A55D0
	0x024A55B0 LDR X10, [X8 + 0xB0]
	0x024A55B4 ADD X10, X10, 0x8
	0x024A55B8 LDUR X11, [X10 - 0x8]
	0x024A55BC CMP X11, X1
	0x024A55C0 B.EQ 0x24A55E0
	0x024A55C4 SUBS X9, X9, 0x1
	0x024A55C8 ADD X10, X10, 0x10
	0x024A55CC B.NE 0x24A55B8
	0x024A55D0 MOVZ W2, 0x8
	0x024A55D4 MOV X0, X20
	0x024A55D8 BL 0x1C5C788
	0x024A55DC B 0x24A55F0
	0x024A55E0 LDR W9, [X10]
	0x024A55E4 ADD W9, W9, 0x8
	0x024A55E8 ADD X8, X8, W9, 0x4, SXTW
	0x024A55EC ADD X0, X8, 0x138
	0x024A55F0 LDP X8, X1, [X0]
	0x024A55F4 MOV X0, X20
	0x024A55F8 BLR X8
	0x024A55FC LDR X0, [X21]
	0x024A5600 MOV V8.16B, V0.16B
	0x024A5604 LDRB W8, [X0 + 0x135]
	0x024A5608 TBNZ X8, 0x0, 0x24A5610
	0x024A560C BL 0x1C5C684
	0x024A5610 STR S8, [X19 + 0xD8]
	0x024A5614 LDR X8, [X20]
	0x024A5618 LDR X1, [X23]
	0x024A561C LDRH W9, [X8 + 0x12E]
	0x024A5620 CBZ X9, 0x24A5644
	0x024A5624 LDR X10, [X8 + 0xB0]
	0x024A5628 ADD X10, X10, 0x8
	0x024A562C LDUR X11, [X10 - 0x8]
	0x024A5630 CMP X11, X1
	0x024A5634 B.EQ 0x24A5654
	0x024A5638 SUBS X9, X9, 0x1
	0x024A563C ADD X10, X10, 0x10
	0x024A5640 B.NE 0x24A562C
	0x024A5644 MOVZ W2, 0x9
	0x024A5648 MOV X0, X20
	0x024A564C BL 0x1C5C788
	0x024A5650 B 0x24A5664
	0x024A5654 LDR W9, [X10]
	0x024A5658 ADD W9, W9, 0x9
	0x024A565C ADD X8, X8, W9, 0x4, SXTW
	0x024A5660 ADD X0, X8, 0x138
	0x024A5664 LDP X8, X1, [X0]
	0x024A5668 MOV X0, X20
	0x024A566C BLR X8
	0x024A5670 LDR X8, [X21]
	0x024A5674 MOV W22, W0
	0x024A5678 LDRB W9, [X8 + 0x135]
	0x024A567C TBNZ X9, 0x0, 0x24A5688
	0x024A5680 MOV X0, X8
	0x024A5684 BL 0x1C5C684
	0x024A5688 STR W22, [X19 + 0xDC]
	0x024A568C LDR X8, [X20]
	0x024A5690 LDR X1, [X23]
	0x024A5694 LDRH W9, [X8 + 0x12E]
	0x024A5698 CBZ X9, 0x24A56BC
	0x024A569C LDR X10, [X8 + 0xB0]
	0x024A56A0 ADD X10, X10, 0x8
	0x024A56A4 LDUR X11, [X10 - 0x8]
	0x024A56A8 CMP X11, X1
	0x024A56AC B.EQ 0x24A56CC
	0x024A56B0 SUBS X9, X9, 0x1
	0x024A56B4 ADD X10, X10, 0x10
	0x024A56B8 B.NE 0x24A56A4
	0x024A56BC MOVZ W2, 0xA
	0x024A56C0 MOV X0, X20
	0x024A56C4 BL 0x1C5C788
	0x024A56C8 B 0x24A56DC
	0x024A56CC LDR W9, [X10]
	0x024A56D0 ADD W9, W9, 0xA
	0x024A56D4 ADD X8, X8, W9, 0x4, SXTW
	0x024A56D8 ADD X0, X8, 0x138
	0x024A56DC LDP X8, X1, [X0]
	0x024A56E0 MOV X0, X20
	0x024A56E4 BLR X8
	0x024A56E8 LDR X0, [X21]
	0x024A56EC MOV V8.16B, V0.16B
	0x024A56F0 LDRB W8, [X0 + 0x135]
	0x024A56F4 TBNZ X8, 0x0, 0x24A56FC
	0x024A56F8 BL 0x1C5C684
	0x024A56FC STR S8, [X19 + 0xE0]
	0x024A5700 LDR X8, [X20]
	0x024A5704 LDR X1, [X23]
	0x024A5708 LDRH W9, [X8 + 0x12E]
	0x024A570C CBZ X9, 0x24A5730
	0x024A5710 LDR X10, [X8 + 0xB0]
	0x024A5714 ADD X10, X10, 0x8
	0x024A5718 LDUR X11, [X10 - 0x8]
	0x024A571C CMP X11, X1
	0x024A5720 B.EQ 0x24A5740
	0x024A5724 SUBS X9, X9, 0x1
	0x024A5728 ADD X10, X10, 0x10
	0x024A572C B.NE 0x24A5718
	0x024A5730 MOVZ W2, 0xB
	0x024A5734 MOV X0, X20
	0x024A5738 BL 0x1C5C788
	0x024A573C B 0x24A5750
	0x024A5740 LDR W9, [X10]
	0x024A5744 ADD W9, W9, 0xB
	0x024A5748 ADD X8, X8, W9, 0x4, SXTW
	0x024A574C ADD X0, X8, 0x138
	0x024A5750 LDP X8, X1, [X0]
	0x024A5754 MOV X0, X20
	0x024A5758 BLR X8
	0x024A575C LDR X0, [X21]
	0x024A5760 MOV V8.16B, V0.16B
	0x024A5764 LDRB W8, [X0 + 0x135]
	0x024A5768 TBNZ X8, 0x0, 0x24A5770
	0x024A576C BL 0x1C5C684
	0x024A5770 STR S8, [X19 + 0xE4]
	0x024A5774 LDR X8, [X20]
	0x024A5778 LDR X1, [X23]
	0x024A577C LDRH W9, [X8 + 0x12E]
	0x024A5780 CBZ X9, 0x24A57A4
	0x024A5784 LDR X10, [X8 + 0xB0]
	0x024A5788 ADD X10, X10, 0x8
	0x024A578C LDUR X11, [X10 - 0x8]
	0x024A5790 CMP X11, X1
	0x024A5794 B.EQ 0x24A57B4
	0x024A5798 SUBS X9, X9, 0x1
	0x024A579C ADD X10, X10, 0x10
	0x024A57A0 B.NE 0x24A578C
	0x024A57A4 MOVZ W2, 0xC
	0x024A57A8 MOV X0, X20
	0x024A57AC BL 0x1C5C788
	0x024A57B0 B 0x24A57C4
	0x024A57B4 LDR W9, [X10]
	0x024A57B8 ADD W9, W9, 0xC
	0x024A57BC ADD X8, X8, W9, 0x4, SXTW
	0x024A57C0 ADD X0, X8, 0x138
	0x024A57C4 LDP X8, X1, [X0]
	0x024A57C8 MOV X0, X20
	0x024A57CC BLR X8
	0x024A57D0 LDR X0, [X21]
	0x024A57D4 MOV V8.16B, V0.16B
	0x024A57D8 LDRB W8, [X0 + 0x135]
	0x024A57DC TBNZ X8, 0x0, 0x24A57E4
	0x024A57E0 BL 0x1C5C684
	0x024A57E4 MOVZ W8, 0x1
	0x024A57E8 STRB W8, [X19 + 0x84]
	0x024A57EC STR S8, [X19 + 0x88]
	0x024A57F0 LDR X8, [X20]
	0x024A57F4 LDR X1, [X23]
	0x024A57F8 LDRH W9, [X8 + 0x12E]
	0x024A57FC CBZ X9, 0x24A5820
	0x024A5800 LDR X10, [X8 + 0xB0]
	0x024A5804 ADD X10, X10, 0x8
	0x024A5808 LDUR X11, [X10 - 0x8]
	0x024A580C CMP X11, X1
	0x024A5810 B.EQ 0x24A5830
	0x024A5814 SUBS X9, X9, 0x1
	0x024A5818 ADD X10, X10, 0x10
	0x024A581C B.NE 0x24A5808
	0x024A5820 MOVZ W2, 0xD
	0x024A5824 MOV X0, X20
	0x024A5828 BL 0x1C5C788
	0x024A582C B 0x24A5840
	0x024A5830 LDR W9, [X10]
	0x024A5834 ADD W9, W9, 0xD
	0x024A5838 ADD X8, X8, W9, 0x4, SXTW
	0x024A583C ADD X0, X8, 0x138
	0x024A5840 LDP X8, X1, [X0]
	0x024A5844 MOV X0, X20
	0x024A5848 BLR X8
	0x024A584C LDR X0, [X21]
	0x024A5850 MOV V8.16B, V0.16B
	0x024A5854 LDRB W8, [X0 + 0x135]
	0x024A5858 TBNZ X8, 0x0, 0x24A5860
	0x024A585C BL 0x1C5C684
	0x024A5860 MOVZ W8, 0x1
	0x024A5864 STRB W8, [X19 + 0x85]
	0x024A5868 STR S8, [X19 + 0x8C]
	0x024A586C LDR X8, [X20]
	0x024A5870 LDR X1, [X23]
	0x024A5874 LDRH W9, [X8 + 0x12E]
	0x024A5878 CBZ X9, 0x24A589C
	0x024A587C LDR X10, [X8 + 0xB0]
	0x024A5880 ADD X10, X10, 0x8
	0x024A5884 LDUR X11, [X10 - 0x8]
	0x024A5888 CMP X11, X1
	0x024A588C B.EQ 0x24A58AC
	0x024A5890 SUBS X9, X9, 0x1
	0x024A5894 ADD X10, X10, 0x10
	0x024A5898 B.NE 0x24A5884
	0x024A589C MOVZ W2, 0xE
	0x024A58A0 MOV X0, X20
	0x024A58A4 BL 0x1C5C788
	0x024A58A8 B 0x24A58BC
	0x024A58AC LDR W9, [X10]
	0x024A58B0 ADD W9, W9, 0xE
	0x024A58B4 ADD X8, X8, W9, 0x4, SXTW
	0x024A58B8 ADD X0, X8, 0x138
	0x024A58BC LDP X8, X1, [X0]
	0x024A58C0 MOV X0, X20
	0x024A58C4 BLR X8
	0x024A58C8 LDR X0, [X21]
	0x024A58CC MOV V8.16B, V0.16B
	0x024A58D0 LDRB W8, [X0 + 0x135]
	0x024A58D4 TBNZ X8, 0x0, 0x24A58DC
	0x024A58D8 BL 0x1C5C684
	0x024A58DC STR S8, [X19 + 0xE8]
	0x024A58E0 LDR X8, [X20]
	0x024A58E4 LDR X1, [X23]
	0x024A58E8 LDRH W9, [X8 + 0x12E]
	0x024A58EC CBZ X9, 0x24A5910
	0x024A58F0 LDR X10, [X8 + 0xB0]
	0x024A58F4 ADD X10, X10, 0x8
	0x024A58F8 LDUR X11, [X10 - 0x8]
	0x024A58FC CMP X11, X1
	0x024A5900 B.EQ 0x24A5920
	0x024A5904 SUBS X9, X9, 0x1
	0x024A5908 ADD X10, X10, 0x10
	0x024A590C B.NE 0x24A58F8
	0x024A5910 MOVZ W2, 0xF
	0x024A5914 MOV X0, X20
	0x024A5918 BL 0x1C5C788
	0x024A591C B 0x24A5930
	0x024A5920 LDR W9, [X10]
	0x024A5924 ADD W9, W9, 0xF
	0x024A5928 ADD X8, X8, W9, 0x4, SXTW
	0x024A592C ADD X0, X8, 0x138
	0x024A5930 LDP X8, X1, [X0]
	0x024A5934 MOV X0, X20
	0x024A5938 BLR X8
	0x024A593C LDR X0, [X21]
	0x024A5940 MOV V8.16B, V0.16B
	0x024A5944 MOV V9.16B, V1.16B
	0x024A5948 LDRB W8, [X0 + 0x135]
	0x024A594C TBNZ X8, 0x0, 0x24A5954
	0x024A5950 BL 0x1C5C684
	0x024A5954 MOVZ W8, 0x1
	0x024A5958 STRB W8, [X19 + 0x90]
	0x024A595C STP S8, S9, [X19 + 0x94]
	0x024A5960 LDR X8, [X20]
	0x024A5964 LDR X1, [X23]
	0x024A5968 LDRH W9, [X8 + 0x12E]
	0x024A596C CBZ X9, 0x24A5990
	0x024A5970 LDR X10, [X8 + 0xB0]
	0x024A5974 ADD X10, X10, 0x8
	0x024A5978 LDUR X11, [X10 - 0x8]
	0x024A597C CMP X11, X1
	0x024A5980 B.EQ 0x24A59A0
	0x024A5984 SUBS X9, X9, 0x1
	0x024A5988 ADD X10, X10, 0x10
	0x024A598C B.NE 0x24A5978
	0x024A5990 MOVZ W2, 0x10
	0x024A5994 MOV X0, X20
	0x024A5998 BL 0x1C5C788
	0x024A599C B 0x24A59B0
	0x024A59A0 LDR W9, [X10]
	0x024A59A4 ADD W9, W9, 0x10
	0x024A59A8 ADD X8, X8, W9, 0x4, SXTW
	0x024A59AC ADD X0, X8, 0x138
	0x024A59B0 LDP X8, X1, [X0]
	0x024A59B4 MOV X0, X20
	0x024A59B8 BLR X8
	0x024A59BC LDR X8, [X21]
	0x024A59C0 MOV W22, W0
	0x024A59C4 LDRB W9, [X8 + 0x135]
	0x024A59C8 TBNZ X9, 0x0, 0x24A59D4
	0x024A59CC MOV X0, X8
	0x024A59D0 BL 0x1C5C684
	0x024A59D4 STR W22, [X19 + 0xEC]
	0x024A59D8 LDR X8, [X20]
	0x024A59DC LDR X1, [X23]
	0x024A59E0 LDRH W9, [X8 + 0x12E]
	0x024A59E4 CBZ X9, 0x24A5A08
	0x024A59E8 LDR X10, [X8 + 0xB0]
	0x024A59EC ADD X10, X10, 0x8
	0x024A59F0 LDUR X11, [X10 - 0x8]
	0x024A59F4 CMP X11, X1
	0x024A59F8 B.EQ 0x24A5A18
	0x024A59FC SUBS X9, X9, 0x1
	0x024A5A00 ADD X10, X10, 0x10
	0x024A5A04 B.NE 0x24A59F0
	0x024A5A08 MOVZ W2, 0x11
	0x024A5A0C MOV X0, X20
	0x024A5A10 BL 0x1C5C788
	0x024A5A14 B 0x24A5A28
	0x024A5A18 LDR W9, [X10]
	0x024A5A1C ADD W9, W9, 0x11
	0x024A5A20 ADD X8, X8, W9, 0x4, SXTW
	0x024A5A24 ADD X0, X8, 0x138
	0x024A5A28 LDP X8, X1, [X0]
	0x024A5A2C MOV X0, X20
	0x024A5A30 BLR X8
	0x024A5A34 LDR X0, [X21]
	0x024A5A38 MOV V8.16B, V0.16B
	0x024A5A3C MOV V9.16B, V1.16B
	0x024A5A40 LDRB W8, [X0 + 0x135]
	0x024A5A44 TBNZ X8, 0x0, 0x24A5A4C
	0x024A5A48 BL 0x1C5C684
	0x024A5A4C STP S8, S9, [X19 + 0xF0]
	0x024A5A50 LDR X8, [X20]
	0x024A5A54 LDR X1, [X23]
	0x024A5A58 LDRH W9, [X8 + 0x12E]
	0x024A5A5C CBZ X9, 0x24A5A80
	0x024A5A60 LDR X10, [X8 + 0xB0]
	0x024A5A64 ADD X10, X10, 0x8
	0x024A5A68 LDUR X11, [X10 - 0x8]
	0x024A5A6C CMP X11, X1
	0x024A5A70 B.EQ 0x24A5A90
	0x024A5A74 SUBS X9, X9, 0x1
	0x024A5A78 ADD X10, X10, 0x10
	0x024A5A7C B.NE 0x24A5A68
	0x024A5A80 MOVZ W2, 0x12
	0x024A5A84 MOV X0, X20
	0x024A5A88 BL 0x1C5C788
	0x024A5A8C B 0x24A5AA0
	0x024A5A90 LDR W9, [X10]
	0x024A5A94 ADD W9, W9, 0x12
	0x024A5A98 ADD X8, X8, W9, 0x4, SXTW
	0x024A5A9C ADD X0, X8, 0x138
	0x024A5AA0 LDP X8, X1, [X0]
	0x024A5AA4 MOV X0, X20
	0x024A5AA8 BLR X8
	0x024A5AAC LDR X0, [X21]
	0x024A5AB0 MOV V8.16B, V0.16B
	0x024A5AB4 MOV V9.16B, V1.16B
	0x024A5AB8 LDRB W8, [X0 + 0x135]
	0x024A5ABC TBNZ X8, 0x0, 0x24A5AC4
	0x024A5AC0 BL 0x1C5C684
	0x024A5AC4 STP S8, S9, [X19 + 0xF8]
	0x024A5AC8 LDR X8, [X20]
	0x024A5ACC LDR X1, [X23]
	0x024A5AD0 LDRH W9, [X8 + 0x12E]
	0x024A5AD4 CBZ X9, 0x24A5AF8
	0x024A5AD8 LDR X10, [X8 + 0xB0]
	0x024A5ADC ADD X10, X10, 0x8
	0x024A5AE0 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-96], D9
	002 Move [X31-88], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x1F35000
	014 Move W8, [X22+3009]
	015 Move X20, X2
	016 Move W19, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x1C78000
	023 Move X0, [X0+3680]
	024 Call 0x1C17CF4
	025 Move X0, 0x1C77000
	026 Move X0, [X0+2392]
	027 Call 0x1C17CF4
	028 Move X0, 0x1C78000
	029 Move X0, [X0+3664]
	030 Call 0x1C17CF4
	031 Move X0, 0x1C78000
	032 Move X0, [X0+3672]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+3009], W8
	036 Add X20, X20, 32
	037 Move X0, [X20]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Move X8, [X0+192]
	045 Move X0, [X8+32]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, [X20]
	057 Move X26, 0x1C78000
	058 Move W8, [X0+309]
	059 Move X26, [X26+3664]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move X0, [X8+272]
	067 Call 0x2D0E6C4
	068 Move X22, X0
	069 Move X0, X21
	070 Move X1, X31
	071 Call Touch.get_fingerId, X0
	072 Move X8, [X26]
	073 Move W23, W0
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {79}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Compare X22, 0
	080 JumpIfEqual {487}
	081 Move X8, [X26]
	082 Move X0, [X20]
	083 Move X24, 0x1C78000
	084 Move X8, [X8+184]
	085 Move W9, [X0+309]
	086 Move W8, [X8+12]
	087 Move X24, [X24+3672]
	088 Add W23, W8, W23
	089 Move TEMP, X9
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move [X22+156], W23
	095 Move X0, [X24]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {101}
	099 Call 0x1C17DFC
	100 Move X0, [X24]
	101 Move X8, [X20]
	102 Move X9, [X0+184]
	103 Move W10, [X8+309]
	104 Move X23, [X9+8]
	105 Move TEMP, X10
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {111}
	109 Move X0, X8
	110 Call 0x1C5D684
	111 Move [X22+160], X23
	112 Move X0, [X26]
	113 Move X25, 0x1C77000
	114 Move X24, 0x1C78000
	115 Move X8, [X0+184]
	116 Move W23, [X8+12]
	117 Move X25, [X25+2392]
	118 Move X24, [X24+3680]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {124}
	122 Call 0x1C17DFC
	123 Move X0, [X26]
	124 Move X8, [X0+184]
	125 Move W9, [X8+12]
	126 Move W8, [X8+16]
	127 Add W27, W8, W9
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, [X20]
	130 Move W8, [X0+309]
	131 Move TEMP, X8
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfEqual {136}
	135 Call 0x1C5D684
	136 Move W8, [X22+156]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, [X25]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move W0, W23
	144 Move X1, X31
	145 Call PointerDeviceState.GetPressedButtons, X0
	146 Compare W0, 0
	147 JumpIfNotEqual {150}
	148 Move X0, [X26]
	149 Add W23, W23, 1
	150 Move X0, [X20]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CSET not yet implemented."
	153 Move W8, [X0+309]
	154 Move TEMP, X8
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfEqual {159}
	158 Call 0x1C5D684
	159 Move X0, X21
	160 Move X1, X31
	161 Move [X22+168], W23
	162 Call Touch.get_phase, X0
	163 Compare W0, 0
	164 JumpIfEqual {170}
	165 Move X0, X21
	166 Move X1, X31
	167 Call Touch.get_phase, X0
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move W23, W31
	170 Move X0, [X20]
	171 Move W8, [X0+309]
	172 Move TEMP, X8
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {177}
	176 Call 0x1C5D684
	177 Move X0, [X25]
	178 Move W23, [X22+156]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move W0, W23
	184 Move W1, W31
	185 Move X2, X31
	186 Call PointerDeviceState.PressButton, X0, X1
	187 Move X0, X21
	188 Move X1, X31
	189 Call Touch.get_phase, X0
	190 NotImplemented "Instruction CMP not yet implemented."
	191 NotImplemented "Instruction CSET not yet implemented."
	192 Move X0, [X20]
	193 Move W8, [X0+309]
	194 Move TEMP, X8
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfEqual {199}
	198 Call 0x1C5D684
	199 Move TEMP, X23
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {206}
	203 Move TEMP, 0
	204 Not TEMP
	205 Move W8, TEMP
	206 Move X0, [X25]
	207 Move W23, [X22+156]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {212}
	211 Call 0x1C17DFC
	212 Move W0, W23
	213 Move W1, W31
	214 Move X2, X31
	215 Call PointerDeviceState.ReleaseButton, X0, X1
	216 Move X0, [X20]
	217 Move W8, W31
	218 Move W9, [X0+309]
	219 Move TEMP, X9
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfEqual {225}
	223 Call 0x1C5D684
	224 Move W8, W31
	225 Move [X22+172], W8
	226 Move X0, [X20]
	227 Move W8, [X0+309]
	228 Move TEMP, X8
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfEqual {233}
	232 Call 0x1C5D684
	233 Move X0, [X25]
	234 Move W23, [X22+156]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move W0, W23
	240 Move X1, X31
	241 Call PointerDeviceState.GetPressedButtons, X0
	242 Move X8, [X20]
	243 Move W23, W0
	244 Move W9, [X8+309]
	245 Move TEMP, X9
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfEqual {251}
	249 Move X0, X8
	250 Call 0x1C5D684
	251 Move X0, X21
	252 Move X1, X31
	253 Move [X22+176], W23
	254 Call Touch.get_position, X0
	255 Move X0, [X20]
	256 Move V8, V0
	257 Move V9, V1
	258 Move W8, [X0+309]
	259 Move TEMP, X8
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfEqual {264}
	263 Call 0x1C5D684
	264 Move X0, X21
	265 Move X1, X31
	266 Move [X22+180], S8
	267 Move [X22+188], S9
	268 Move [X22+188], W31
	269 Call Touch.get_position, X0
	270 Move X0, [X20]
	271 Move V8, V0
	272 Move V9, V1
	273 Move W8, [X0+309]
	274 Move TEMP, X8
	275 And TEMP, TEMP, 1
	276 Compare TEMP, 1
	277 JumpIfEqual {279}
	278 Call 0x1C5D684
	279 Move X0, X21
	280 Move X1, X31
	281 Move [X22+192], S8
	282 Move [X22+200], S9
	283 Move [X22+200], W31
	284 Call Touch.get_deltaPosition, X0
	285 Move X0, [X20]
	286 Move V8, V0
	287 Move V9, V1
	288 Move W8, [X0+309]
	289 Move TEMP, X8
	290 And TEMP, TEMP, 1
	291 Compare TEMP, 1
	292 JumpIfEqual {294}
	293 Call 0x1C5D684
	294 Move X0, X21
	295 Move X1, X31
	296 Move [X22+204], S8
	297 Move [X22+212], S9
	298 Move [X22+212], W31
	299 Call Touch.get_deltaTime, X0
	300 Move X0, [X20]
	301 Move V8, V0
	302 Move W8, [X0+309]
	303 Move TEMP, X8
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfEqual {308}
	307 Call 0x1C5D684
	308 Move X0, X21
	309 Move X1, X31
	310 Move [X22+216], S8
	311 Call Touch.get_tapCount, X0
	312 Move X8, [X20]
	313 Move W23, W0
	314 Move W9, [X8+309]
	315 Move TEMP, X9
	316 And TEMP, TEMP, 1
	317 Compare TEMP, 1
	318 JumpIfEqual {321}
	319 Move X0, X8
	320 Call 0x1C5D684
	321 Move X0, X21
	322 Move X1, X31
	323 Move [X22+220], W23
	324 Call Touch.get_maximumPossiblePressure, X0
	325 Move X8, -26980352
	326 Move V1, [X8+3996]
	327 NotImplemented "Instruction FABS not yet implemented."
	328 Move S8, 1
	329 NotImplemented "Instruction FCMP not yet implemented."
	330 Move X0, X21
	331 Move X1, X31
	332 Call Touch.get_pressure, X0
	333 Move X0, X21
	334 Move X1, X31
	335 Move V8, V0
	336 Call Touch.get_maximumPossiblePressure, X0
	337 NotImplemented "Instruction FDIV not yet implemented."
	338 Move X0, [X20]
	339 Move W8, [X0+309]
	340 Move TEMP, X8
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfEqual {346}
	344 Call 0x1C5D684
	345 Move X0, [X20]
	346 Move [X22+224], S8
	347 Move W8, [X0+309]
	348 Move TEMP, X8
	349 And TEMP, TEMP, 1
	350 Compare TEMP, 1
	351 JumpIfEqual {353}
	352 Call 0x1C5D684
	353 Move X0, X21
	354 Move X1, X31
	355 Move [X22+228], W31
	356 Call Touch.get_altitudeAngle, X0
	357 Move X0, [X20]
	358 Move V8, V0
	359 Move W8, [X0+309]
	360 Move TEMP, X8
	361 And TEMP, TEMP, 1
	362 Compare TEMP, 1
	363 JumpIfEqual {365}
	364 Call 0x1C5D684
	365 Move W23, 1
	366 Move X0, X21
	367 Move X1, X31
	368 Move [X22+132], W23
	369 Move [X22+136], S8
	370 Call Touch.get_azimuthAngle, X0
	371 Move X0, [X20]
	372 Move V8, V0
	373 Move W8, [X0+309]
	374 Move TEMP, X8
	375 And TEMP, TEMP, 1
	376 Compare TEMP, 1
	377 JumpIfEqual {380}
	378 Call 0x1C5D684
	379 Move X0, [X20]
	380 Move [X22+133], W23
	381 Move [X22+140], S8
	382 Move W8, [X0+309]
	383 Move TEMP, X8
	384 And TEMP, TEMP, 1
	385 Compare TEMP, 1
	386 JumpIfEqual {389}
	387 Call 0x1C5D684
	388 Move X0, [X20]
	389 Move [X22+232], W31
	390 Move W8, [X0+309]
	391 Move TEMP, X8
	392 And TEMP, TEMP, 1
	393 Compare TEMP, 1
	394 JumpIfEqual {396}
	395 Call 0x1C5D684
	396 Move W8, 1
	397 Move [X22+144], W8
	398 Move [X22+148], W31
	399 Move [X22+152], W31
	400 Move X0, [X20]
	401 Move W8, [X0+309]
	402 Move TEMP, X8
	403 And TEMP, TEMP, 1
	404 Compare TEMP, 1
	405 JumpIfEqual {407}
	406 Call 0x1C5D684
	407 Move X0, X21
	408 Move X1, X31
	409 Move [X22+236], W31
	410 Call Touch.get_radius, X0
	411 Move X0, X21
	412 Move X1, X31
	413 Move V8, V0
	414 Call Touch.get_radius, X0
	415 Move X0, [X20]
	416 Move V9, V0
	417 Move W8, [X0+309]
	418 Move TEMP, X8
	419 And TEMP, TEMP, 1
	420 Compare TEMP, 1
	421 JumpIfEqual {423}
	422 Call 0x1C5D684
	423 Move X0, X21
	424 Move X1, X31
	425 Move [X22+240], S8
	426 Move [X22+248], S9
	427 Call Touch.get_radiusVariance, X0
	428 Move X0, X21
	429 Move X1, X31
	430 Move V8, V0
	431 Call Touch.get_radiusVariance, X0
	432 Move X0, [X20]
	433 Move V9, V0
	434 Move W8, [X0+309]
	435 Move TEMP, X8
	436 And TEMP, TEMP, 1
	437 Compare TEMP, 1
	438 JumpIfEqual {440}
	439 Call 0x1C5D684
	440 Move [X22+248], S8
	441 Move [X22+256], S9
	442 Move X0, [X20]
	443 Move W8, [X0+309]
	444 Move TEMP, X8
	445 And TEMP, TEMP, 1
	446 Compare TEMP, 1
	447 JumpIfEqual {449}
	448 Call 0x1C5D684
	449 Move X8, [X22]
	450 Move [X22+256], W19
	451 Move X1, [X24]
	452 NotImplemented "Instruction LDRH not yet implemented."
	453 Compare X9, 0
	454 JumpIfEqual {461}
	455 Move X10, [X8+176]
	456 Add X10, X10, 8
	457 NotImplemented "Instruction LDUR not yet implemented."
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Subtract X9, X9, 1
	460 Add X10, X10, 16
	461 Move W2, 1
	462 Move X0, X22
	463 Call 0x1C5D788
	464 Move W9, [X10]
	465 Add W9, W9, 1
	466 Add X8, X8, W9
	467 Add X0, X8, 312
	468 Move X8, [X0]
	469 Move X2, [X0+8]
	470 Move W1, 1
	471 Move X0, X22
	472 NotImplemented "Instruction BLR not yet implemented."
	473 Move X0, X22
	474 Move X20, [X31+80]
	475 Move X19, [X31+88]
	476 Move X22, [X31+64]
	477 Move X21, [X31+72]
	478 Move X24, [X31+48]
	479 Move X23, [X31+56]
	480 Move X26, [X31+32]
	481 Move X25, [X31+40]
	482 Move X30, [X31+16]
	483 Move X27, [X31+24]
	484 Move D9, [X31+96]
	485 Move D8, [X31+104]
	486 Return X0
	487 Call 0x1C17F20

Method: T GetPooled(UnityEngine.PenData pen, UnityEngine.EventModifiers modifiers = 0)

Disassembly:
	0x024A5AE4 CMP X11, X1
	0x024A5AE8 B.EQ 0x24A5B08
	0x024A5AEC SUBS X9, X9, 0x1
	0x024A5AF0 ADD X10, X10, 0x10
	0x024A5AF4 B.NE 0x24A5AE0
	0x024A5AF8 MOVZ W2, 0x13
	0x024A5AFC MOV X0, X20
	0x024A5B00 BL 0x1C5C788
	0x024A5B04 B 0x24A5B18
	0x024A5B08 LDR W9, [X10]
	0x024A5B0C ADD W9, W9, 0x13
	0x024A5B10 ADD X8, X8, W9, 0x4, SXTW
	0x024A5B14 ADD X0, X8, 0x138
	0x024A5B18 LDP X8, X1, [X0]
	0x024A5B1C ADRP X22, 0x1C77000
	0x024A5B20 LDR X22, [X22 + 0xE60]
	0x024A5B24 MOV X0, X20
	0x024A5B28 BLR X8
	0x024A5B2C LDR X8, [X21]
	0x024A5B30 MOV W21, W0
	0x024A5B34 LDRB W9, [X8 + 0x135]
	0x024A5B38 TBNZ X9, 0x0, 0x24A5B44
	0x024A5B3C MOV X0, X8
	0x024A5B40 BL 0x1C5C684
	0x024A5B44 STR W21, [X19 + 0x100]
	0x024A5B48 LDR X1, [X22]
	0x024A5B4C MOV X0, X20
	0x024A5B50 BL 0x1C16E00
	0x024A5B54 CBZ X0, 0x24A5C74
	0x024A5B58 LDR X8, [X19]
	0x024A5B5C LDR X1, [X22]
	0x024A5B60 MOV X20, X0
	0x024A5B64 LDRH W9, [X8 + 0x12E]
	0x024A5B68 CBZ X9, 0x24A5B8C
	0x024A5B6C LDR X10, [X8 + 0xB0]
	0x024A5B70 ADD X10, X10, 0x8
	0x024A5B74 LDUR X11, [X10 - 0x8]
	0x024A5B78 CMP X11, X1
	0x024A5B7C B.EQ 0x24A5B9C
	0x024A5B80 SUBS X9, X9, 0x1
	0x024A5B84 ADD X10, X10, 0x10
	0x024A5B88 B.NE 0x24A5B74
	0x024A5B8C MOV X0, X19
	0x024A5B90 MOV W2, W31
	0x024A5B94 BL 0x1C5C788
	0x024A5B98 B 0x24A5BA8
	0x024A5B9C LDRSW X9, [X10]
	0x024A5BA0 ADD X8, X8, X9, 0x4, LSL
	0x024A5BA4 ADD X0, X8, 0x138
	0x024A5BA8 LDP X8, X1, [X0]
	0x024A5BAC MOV X0, X19
	0x024A5BB0 BLR X8
	0x024A5BB4 LDR X8, [X20]
	0x024A5BB8 LDR X1, [X22]
	0x024A5BBC MOV W21, W0
	0x024A5BC0 LDRH W9, [X8 + 0x12E]
	0x024A5BC4 CBZ X9, 0x24A5BE8
	0x024A5BC8 LDR X10, [X8 + 0xB0]
	0x024A5BCC ADD X10, X10, 0x8
	0x024A5BD0 LDUR X11, [X10 - 0x8]
	0x024A5BD4 CMP X11, X1
	0x024A5BD8 B.EQ 0x24A5BF8
	0x024A5BDC SUBS X9, X9, 0x1
	0x024A5BE0 ADD X10, X10, 0x10
	0x024A5BE4 B.NE 0x24A5BD0
	0x024A5BE8 MOV X0, X20
	0x024A5BEC MOV W2, W31
	0x024A5BF0 BL 0x1C5C788
	0x024A5BF4 B 0x24A5C04
	0x024A5BF8 LDRSW X9, [X10]
	0x024A5BFC ADD X8, X8, X9, 0x4, LSL
	0x024A5C00 ADD X0, X8, 0x138
	0x024A5C04 LDP X8, X1, [X0]
	0x024A5C08 MOV X0, X20
	0x024A5C0C BLR X8
	0x024A5C10 LDR X8, [X19]
	0x024A5C14 LDR X1, [X22]
	0x024A5C18 ORR W20, W21, W0, 0x0
	0x024A5C1C LDRH W9, [X8 + 0x12E]
	0x024A5C20 CBZ X9, 0x24A5C44
	0x024A5C24 LDR X10, [X8 + 0xB0]
	0x024A5C28 ADD X10, X10, 0x8
	0x024A5C2C LDUR X11, [X10 - 0x8]
	0x024A5C30 CMP X11, X1
	0x024A5C34 B.EQ 0x24A5C54
	0x024A5C38 SUBS X9, X9, 0x1
	0x024A5C3C ADD X10, X10, 0x10
	0x024A5C40 B.NE 0x24A5C2C
	0x024A5C44 MOVZ W2, 0x1
	0x024A5C48 MOV X0, X19
	0x024A5C4C BL 0x1C5C788
	0x024A5C50 B 0x24A5C64
	0x024A5C54 LDR W9, [X10]
	0x024A5C58 ADD W9, W9, 0x1
	0x024A5C5C ADD X8, X8, W9, 0x4, SXTW
	0x024A5C60 ADD X0, X8, 0x138
	0x024A5C64 LDP X8, X2, [X0]
	0x024A5C68 AND W1, W20, 0x1
	0x024A5C6C MOV X0, X19
	0x024A5C70 BLR X8
	0x024A5C74 MOV X0, X19
	0x024A5C78 LDP X20, X19, [X31 + 0x40]
	0x024A5C7C LDP X22, X21, [X31 + 0x30]
	0x024A5C80 LDP X30, X23, [X31 + 0x20]
	0x024A5C84 LDP D9, D8, [X31 + 0x10]
	0x024A5C88 LDR V10, [X31], #0x50
	0x024A5C8C RET
	0x024A5C90 BL 0x1C16F20
	0x024A5C94 STP D9, D8, [X31 - 0x30]!
	0x024A5C98 STP X30, X21, [X31 + 0x10]
	0x024A5C9C STP X20, X19, [X31 + 0x20]
	0x024A5CA0 ADRP X21, 0x1F34000
	0x024A5CA4 LDRB W8, [X21 + 0xBC5]
	0x024A5CA8 MOV X19, X1
	0x024A5CAC MOV X20, X0
	0x024A5CB0 TBNZ X8, 0x0, 0x24A5CE0
	0x024A5CB4 ADRP X0, 0x1C77000
	0x024A5CB8 LDR X0, [X0 + 0xE80]
	0x024A5CBC BL 0x1C16CF4
	0x024A5CC0 ADRP X0, 0x1C77000
	0x024A5CC4 LDR X0, [X0 + 0xE60]
	0x024A5CC8 BL 0x1C16CF4
	0x024A5CCC ADRP X0, 0x1C76000
	0x024A5CD0 LDR X0, [X0 + 0x958]
	0x024A5CD4 BL 0x1C16CF4
	0x024A5CD8 MOVZ W8, 0x1
	0x024A5CDC STRB W8, [X21 + 0xBC5]
	0x024A5CE0 CBZ X20, 0x24A5E20
	0x024A5CE4 ADRP X21, 0x1C77000
	0x024A5CE8 LDR X21, [X21 + 0xE60]
	0x024A5CEC MOV X0, X20
	0x024A5CF0 MOV X1, X19
	0x024A5CF4 MOV X2, X31
	0x024A5CF8 BL 0x3DA01D0
	0x024A5CFC LDR X8, [X20]
	0x024A5D00 LDR X1, [X21]
	0x024A5D04 LDRH W9, [X8 + 0x12E]
	0x024A5D08 CBZ X9, 0x24A5D2C
	0x024A5D0C LDR X10, [X8 + 0xB0]
	0x024A5D10 ADD X10, X10, 0x8
	0x024A5D14 LDUR X11, [X10 - 0x8]
	0x024A5D18 CMP X11, X1
	0x024A5D1C B.EQ 0x24A5D3C
	0x024A5D20 SUBS X9, X9, 0x1
	0x024A5D24 ADD X10, X10, 0x10
	0x024A5D28 B.NE 0x24A5D14
	0x024A5D2C MOV X0, X20
	0x024A5D30 MOV W2, W31
	0x024A5D34 BL 0x1C5C788
	0x024A5D38 B 0x24A5D48
	0x024A5D3C LDRSW X9, [X10]
	0x024A5D40 ADD X8, X8, X9, 0x4, LSL
	0x024A5D44 ADD X0, X8, 0x138
	0x024A5D48 LDP X8, X1, [X0]
	0x024A5D4C MOV X0, X20
	0x024A5D50 BLR X8
	0x024A5D54 TBZ X0, 0x0, 0x24A5DAC
	0x024A5D58 CBZ X19, 0x24A5E20
	0x024A5D5C ADRP X10, 0x1C77000
	0x024A5D60 LDR W21, [X20 + 0x9C]
	0x024A5D64 LDR X8, [X19]
	0x024A5D68 LDP S9, S8, [X20 + 0xB4]
	0x024A5D6C LDR X10, [X10 + 0xE80]
	0x024A5D70 LDRH W9, [X8 + 0x12E]
	0x024A5D74 LDR X1, [X10]
	0x024A5D78 CBZ X9, 0x24A5D9C
	0x024A5D7C LDR X10, [X8 + 0xB0]
	0x024A5D80 ADD X10, X10, 0x8
	0x024A5D84 LDUR X11, [X10 - 0x8]
	0x024A5D88 CMP X11, X1
	0x024A5D8C B.EQ 0x24A5DBC
	0x024A5D90 SUBS X9, X9, 0x1
	0x024A5D94 ADD X10, X10, 0x10
	0x024A5D98 B.NE 0x24A5D84
	0x024A5D9C MOVZ W2, 0x2
	0x024A5DA0 MOV X0, X19
	0x024A5DA4 BL 0x1C5C788
	0x024A5DA8 B 0x24A5DCC
	0x024A5DAC LDP X20, X19, [X31 + 0x20]
	0x024A5DB0 LDP X30, X21, [X31 + 0x10]
	0x024A5DB4 LDP D9, D8, [X31], #0x30
	0x024A5DB8 RET
	0x024A5DBC LDR W9, [X10]
	0x024A5DC0 ADD W9, W9, 0x2
	0x024A5DC4 ADD X8, X8, W9, 0x4, SXTW
	0x024A5DC8 ADD X0, X8, 0x138
	0x024A5DCC LDP X8, X1, [X0]
	0x024A5DD0 MOV X0, X19
	0x024A5DD4 BLR X8
	0x024A5DD8 ADRP X8, 0x1C76000
	0x024A5DDC LDR X8, [X8 + 0x958]
	0x024A5DE0 MOV W20, W0
	0x024A5DE4 LDR X8, [X8]
	0x024A5DE8 LDR W9, [X8 + 0xE0]
	0x024A5DEC CBNZ W9, 0x24A5DF8
	0x024A5DF0 MOV X0, X8
	0x024A5DF4 BL 0x1C16DFC
	0x024A5DF8 MOV W0, W21
	0x024A5DFC MOV X1, X19
	0x024A5E00 MOV W2, W20
	0x024A5E04 LDP X20, X19, [X31 + 0x20]
	0x024A5E08 LDP X30, X21, [X31 + 0x10]
	0x024A5E0C MOV V0.16B, V9.16B
	0x024A5E10 MOV V1.16B, V8.16B
	0x024A5E14 MOV X3, X31
	0x024A5E18 LDP D9, D8, [X31], #0x30
	0x024A5E1C B 0x3DA9CA8
	0x024A5E20 BL 0x1C16F20
	0x024A5E24 STR X30, [X31 - 0x30]!
	0x024A5E28 STP X22, X21, [X31 + 0x10]
	0x024A5E2C STP X20, X19, [X31 + 0x20]
	0x024A5E30 ADRP X21, 0x1F34000
	0x024A5E34 LDRB W8, [X21 + 0xBC6]
	0x024A5E38 MOV X19, X1
	0x024A5E3C MOV X20, X0
	0x024A5E40 TBNZ X8, 0x0, 0x24A5E70
	0x024A5E44 ADRP X0, 0x1C77000
	0x024A5E48 LDR X0, [X0 + 0xE88]
	0x024A5E4C BL 0x1C16CF4
	0x024A5E50 ADRP X0, 0x1C77000
	0x024A5E54 LDR X0, [X0 + 0xE60]
	0x024A5E58 BL 0x1C16CF4
	0x024A5E5C ADRP X0, 0x1C77000
	0x024A5E60 LDR X0, [X0 + 0xE50]
	0x024A5E64 BL 0x1C16CF4
	0x024A5E68 MOVZ W8, 0x1
	0x024A5E6C STRB W8, [X21 + 0xBC6]
	0x024A5E70 ADRP X22, 0x1C77000
	0x024A5E74 LDR X22, [X22 + 0xE50]
	0x024A5E78 MOV W21, W31
	0x024A5E7C LDR X0, [X22]
	0x024A5E80 LDR W8, [X0 + 0xE0]
	0x024A5E84 CBNZ W8, 0x24A5E90
	0x024A5E88 BL 0x1C16DFC
	0x024A5E8C LDR X0, [X22]
	0x024A5E90 LDR X8, [X0 + 0xB8]
	0x024A5E94 MOV X0, X19
	0x024A5E98 LDR W8, [X8]
	0x024A5E9C CMP W21, W8
	0x024A5EA0 B.GE 0x24A5EB8
	0x024A5EA4 MOV W1, W21
	0x024A5EA8 MOV X2, X31
	0x024A5EAC BL 0x3DBAC98
	0x024A5EB0 ADD W21, W21, 0x1
	0x024A5EB4 B 0x24A5E7C
	0x024A5EB8 MOV X1, X20
	0x024A5EBC MOV X2, X31
	0x024A5EC0 BL 0x3DBF97C
	0x024A5EC4 TBNZ X0, 0x0, 0x24A5F74
	0x024A5EC8 CBZ X20, 0x24A5F94
	0x024A5ECC ADRP X10, 0x1C77000
	0x024A5ED0 LDR X8, [X20]
	0x024A5ED4 LDR X10, [X10 + 0xE60]
	0x024A5ED8 LDRH W9, [X8 + 0x12E]
	0x024A5EDC LDR X1, [X10]
	0x024A5EE0 CBZ X9, 0x24A5F04
	0x024A5EE4 LDR X10, [X8 + 0xB0]
	0x024A5EE8 ADD X10, X10, 0x8
	0x024A5EEC LDUR X11, [X10 - 0x8]
	0x024A5EF0 CMP X11, X1
	0x024A5EF4 B.EQ 0x24A5F14
	0x024A5EF8 SUBS X9, X9, 0x1
	0x024A5EFC ADD X10, X10, 0x10
	0x024A5F00 B.NE 0x24A5EEC
	0x024A5F04 MOV X0, X20
	0x024A5F08 MOV W2, W31
	0x024A5F0C BL 0x1C5C788
	0x024A5F10 B 0x24A5F20
	0x024A5F14 LDRSW X9, [X10]
	0x024A5F18 ADD X8, X8, X9, 0x4, LSL
	0x024A5F1C ADD X0, X8, 0x138
	0x024A5F20 LDP X8, X1, [X0]
	0x024A5F24 MOV X0, X20
	0x024A5F28 BLR X8
	0x024A5F2C TBZ X0, 0x0, 0x24A5F74
	0x024A5F30 CBZ X19, 0x24A5F74
	0x024A5F34 ADRP X8, 0x1C77000
	0x024A5F38 LDR X8, [X8 + 0xE88]
	0x024A5F3C LDR X9, [X19]
	0x024A5F40 LDR X8, [X8]
	0x024A5F44 LDRB W11, [X9 + 0x130]
	0x024A5F48 LDRB W10, [X8 + 0x130]
	0x024A5F4C CMP W11, W10
	0x024A5F50 B.CC 0x24A5F74
	0x024A5F54 LDR X9, [X9 + 0xC8]
	0x024A5F58 ADD X9, X9, X10, 0x3, LSL
	0x024A5F5C LDUR X9, [X9 - 0x8]
	0x024A5F60 CMP X9, X8
	0x024A5F64 B.NE 0x24A5F74
	0x024A5F68 MOV X0, X19
	0x024A5F6C MOV X1, X31
	0x024A5F70 BL 0x3DBC2C0
	0x024A5F74 CBZ X20, 0x24A5F94
	0x024A5F78 MOV X0, X20
	0x024A5F7C MOV X1, X19
	0x024A5F80 LDP X20, X19, [X31 + 0x20]
	0x024A5F84 LDP X22, X21, [X31 + 0x10]
	0x024A5F88 MOV X2, X31
	0x024A5F8C LDR X30, [X31], #0x30
	0x024A5F90 B 0x3DA01E0
	0x024A5F94 BL 0x1C16F20
	0x024A5F98 STR X30, [X31 - 0x20]!
	0x024A5F9C STP X20, X19, [X31 + 0x10]
	0x024A5FA0 MOVZ W8, 0x101
	0x024A5FA4 MOVZ W9, 0x1
	0x024A5FA8 STR X31, [X0 + 0x88]
	0x024A5FAC STRH W8, [X0 + 0x84]
	0x024A5FB0 STRB W9, [X0 + 0x90]
	0x024A5FB4 STP W31, W31, [X0 + 0x94]
	0x024A5FB8 LDR X8, [X1 + 0x20]
	0x024A5FBC MOV X19, X0
	0x024A5FC0 MOV X20, X1
	0x024A5FC4 LDR X8, [X8 + 0xC0]
	0x024A5FC8 LDR X0, [X8 + 0x20]

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x1F35000
	012 Move W8, [X21+3010]
	013 Move X20, X2
	014 Move W19, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x1C78000
	021 Move X0, [X0+3680]
	022 Call 0x1C17CF4
	023 Move X0, 0x1C77000
	024 Move X0, [X0+2392]
	025 Call 0x1C17CF4
	026 Move X0, 0x1C78000
	027 Move X0, [X0+3664]
	028 Call 0x1C17CF4
	029 Move X0, 0x1C78000
	030 Move X0, [X0+3672]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+3010], W8
	034 Add X20, X20, 32
	035 Move X0, [X20]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, [X20]
	055 Move X23, 0x1C78000
	056 Move W8, [X0+309]
	057 Move X23, [X23+3664]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+192]
	064 Move X0, [X8+272]
	065 Call 0x2D0E6C4
	066 Move X8, [X23]
	067 Move X21, X0
	068 Move W9, [X8+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {74}
	071 Move X0, X8
	072 Call 0x1C17DFC
	073 Move X8, [X23]
	074 Compare X21, 0
	075 JumpIfEqual {409}
	076 Move X0, [X20]
	077 Move X8, [X8+184]
	078 Move X23, 0x1C78000
	079 Move W9, [X0+309]
	080 Move W24, [X8+20]
	081 Move X23, [X23+3672]
	082 Move TEMP, X9
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move [X21+156], W24
	088 Move X8, [X23]
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {95}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Move X8, [X23]
	095 Move X0, [X20]
	096 Move X8, [X8+184]
	097 Move W9, [X0+309]
	098 Move X23, [X8+16]
	099 Move TEMP, X9
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {105}
	103 Call 0x1C5D684
	104 Move X0, [X20]
	105 Move [X21+160], X23
	106 Move W8, [X0+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {112}
	111 Call 0x1C5D684
	112 Move W8, 1
	113 Move [X21+168], W8
	114 Move W23, [X22+28]
	115 Move X24, 0x1C77000
	116 Move X24, [X24+2392]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, [X20]
	119 Move W8, [X0+309]
	120 Move TEMP, X8
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfEqual {125}
	124 Call 0x1C5D684
	125 Move X0, [X24]
	126 Move W23, [X21+156]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move W0, W23
	132 Move W1, W31
	133 Move X2, X31
	134 Call PointerDeviceState.PressButton, X0, X1
	135 Move X0, [X20]
	136 Move W8, [X0+309]
	137 Move TEMP, X8
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {142}
	141 Call 0x1C5D684
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X0, [X24]
	144 Move W23, [X21+156]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move W0, W23
	150 Move W1, W31
	151 Move X2, X31
	152 Call PointerDeviceState.ReleaseButton, X0, X1
	153 Move X0, [X20]
	154 Move W8, W31
	155 Move W9, [X0+309]
	156 Move TEMP, X9
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {165}
	160 Call 0x1C5D684
	161 Move W8, W31
	162 Move TEMP, 0
	163 Not TEMP
	164 Move W8, TEMP
	165 Move [X21+172], W8
	166 Move X0, [X20]
	167 Move W25, [X22+16]
	168 Move W8, [X0+309]
	169 Move TEMP, X8
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfEqual {174}
	173 Call 0x1C5D684
	174 Move X0, [X24]
	175 Move W23, [X21+156]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {180}
	179 Call 0x1C17DFC
	180 Move W1, 1
	181 Move W0, W23
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X2, X31
	184 Call PointerDeviceState.PressButton, X0, X1
	185 Move X2, X31
	186 Call PointerDeviceState.ReleaseButton, X0, X1
	187 Move X0, [X20]
	188 Move W25, [X22+16]
	189 Move W8, [X0+309]
	190 Move TEMP, X8
	191 And TEMP, TEMP, 1
	192 Compare TEMP, 1
	193 JumpIfEqual {195}
	194 Call 0x1C5D684
	195 Move X0, [X24]
	196 Move W23, [X21+156]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move W1, 5
	202 Move W0, W23
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X2, X31
	205 Call PointerDeviceState.PressButton, X0, X1
	206 Move X2, X31
	207 Call PointerDeviceState.ReleaseButton, X0, X1
	208 Move X0, [X20]
	209 Move W8, [X0+309]
	210 Move TEMP, X8
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfEqual {215}
	214 Call 0x1C5D684
	215 Move X0, [X24]
	216 Move W23, [X21+156]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move W0, W23
	222 Move X1, X31
	223 Call PointerDeviceState.GetPressedButtons, X0
	224 Move X8, [X20]
	225 Move W23, W0
	226 Move W9, [X8+309]
	227 Move TEMP, X9
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {234}
	231 Move X0, X8
	232 Call 0x1C5D684
	233 Move X8, [X20]
	234 Move [X21+176], W23
	235 Move W9, [X8+309]
	236 Move V8, [X22]
	237 Move TEMP, X9
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfEqual {243}
	241 Move X0, X8
	242 Call 0x1C5D684
	243 Move [X21+180], D8
	244 Move [X21+188], W31
	245 Move X0, [X20]
	246 Move V8, [X22]
	247 Move W8, [X0+309]
	248 Move TEMP, X8
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfEqual {253}
	252 Call 0x1C5D684
	253 Move [X21+192], D8
	254 Move [X21+200], W31
	255 Move X0, [X20]
	256 Move V8, [X22+32]
	257 Move W8, [X0+309]
	258 Move TEMP, X8
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfEqual {263}
	262 Call 0x1C5D684
	263 Move [X21+204], D8
	264 Move [X21+212], W31
	265 Move X0, [X20]
	266 Move W8, [X0+309]
	267 Move TEMP, X8
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfEqual {273}
	271 Call 0x1C5D684
	272 Move X0, [X20]
	273 Move [X21+220], W31
	274 Move W8, [X0+309]
	275 Move V8, [X22+24]
	276 Move TEMP, X8
	277 And TEMP, TEMP, 1
	278 Compare TEMP, 1
	279 JumpIfEqual {282}
	280 Call 0x1C5D684
	281 Move X0, [X20]
	282 Move [X21+224], S8
	283 Move W8, [X0+309]
	284 Move TEMP, X8
	285 And TEMP, TEMP, 1
	286 Compare TEMP, 1
	287 JumpIfEqual {290}
	288 Call 0x1C5D684
	289 Move X0, [X20]
	290 Move [X21+228], W31
	291 Move W8, [X0+309]
	292 Move V8, [X22+20]
	293 Move TEMP, X8
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfEqual {299}
	297 Call 0x1C5D684
	298 Move X0, [X20]
	299 Move [X21+232], S8
	300 Move W8, [X0+309]
	301 Move V8, [X22+8]
	302 Move TEMP, X8
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfEqual {307}
	306 Call 0x1C5D684
	307 Move W8, 1
	308 Move [X21+144], W8
	309 Move [X21+148], D8
	310 Move X0, [X20]
	311 Move W22, [X22+16]
	312 Move W8, [X0+309]
	313 Move TEMP, X8
	314 And TEMP, TEMP, 1
	315 Compare TEMP, 1
	316 JumpIfEqual {318}
	317 Call 0x1C5D684
	318 Move [X21+236], W22
	319 Move X22, 0x1F35000
	320 Move W8, [X22+1935]
	321 Compare W8, 0
	322 JumpIfNotEqual {328}
	323 Move X0, 0x1C57000
	324 Move X0, [X0+3848]
	325 Call 0x1C17CF4
	326 Move W8, 1
	327 Move [X22+1935], W8
	328 Move X23, 0x1C57000
	329 Move X23, [X23+3848]
	330 Move X0, [X20]
	331 Move X8, [X23]
	332 Move W9, [X0+309]
	333 Move X8, [X8+184]
	334 Move S9, [X8]
	335 Move S8, [X8+4]
	336 Move TEMP, X9
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfEqual {351}
	340 Call 0x1C5D684
	341 Move W8, [X22+1935]
	342 Move [X21+240], S9
	343 Move [X21+248], S8
	344 Compare W8, 0
	345 JumpIfNotEqual {353}
	346 Move X0, 0x1C57000
	347 Move X0, [X0+3848]
	348 Call 0x1C17CF4
	349 Move W8, 1
	350 Move [X22+1935], W8
	351 Move [X21+240], S9
	352 Move [X21+248], S8
	353 Move X8, [X23]
	354 Move X0, [X20]
	355 Move X8, [X8+184]
	356 Move W9, [X0+309]
	357 Move V8, [X8]
	358 Move TEMP, X9
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfEqual {363}
	362 Call 0x1C5D684
	363 Move [X21+248], D8
	364 Move X0, [X20]
	365 Move X20, 0x1C78000
	366 Move W8, [X0+309]
	367 Move X20, [X20+3680]
	368 Move TEMP, X8
	369 And TEMP, TEMP, 1
	370 Compare TEMP, 1
	371 JumpIfEqual {373}
	372 Call 0x1C5D684
	373 Move X8, [X21]
	374 Move [X21+256], W19
	375 Move X1, [X20]
	376 NotImplemented "Instruction LDRH not yet implemented."
	377 Compare X9, 0
	378 JumpIfEqual {385}
	379 Move X10, [X8+176]
	380 Add X10, X10, 8
	381 NotImplemented "Instruction LDUR not yet implemented."
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Subtract X9, X9, 1
	384 Add X10, X10, 16
	385 Move W2, 1
	386 Move X0, X21
	387 Call 0x1C5D788
	388 Move W9, [X10]
	389 Add W9, W9, 1
	390 Add X8, X8, W9
	391 Add X0, X8, 312
	392 Move X8, [X0]
	393 Move X2, [X0+8]
	394 Move W1, 1
	395 Move X0, X21
	396 NotImplemented "Instruction BLR not yet implemented."
	397 Move X0, X21
	398 Move X20, [X31+64]
	399 Move X19, [X31+72]
	400 Move X22, [X31+48]
	401 Move X21, [X31+56]
	402 Move X24, [X31+32]
	403 Move X23, [X31+40]
	404 Move X30, [X31+16]
	405 Move X25, [X31+24]
	406 Move D9, [X31+80]
	407 Move D8, [X31+88]
	408 Return X0
	409 Call 0x1C17F20

Method: T GetPooled(UnityEngine.UIElements.IPointerEvent triggerEvent, UnityEngine.Vector2 position, System.Int32 pointerId)

Disassembly:
	0x024A5FCC LDRB W8, [X0 + 0x135]
	0x024A5FD0 TBNZ X8, 0x0, 0x24A5FD8
	0x024A5FD4 BL 0x1C5C684
	0x024A5FD8 LDR W8, [X0 + 0xE0]
	0x024A5FDC CBNZ W8, 0x24A5FE4
	0x024A5FE0 BL 0x1C16DFC
	0x024A5FE4 LDR X8, [X20 + 0x20]
	0x024A5FE8 MOV X0, X19
	0x024A5FEC LDR X8, [X8 + 0xC0]
	0x024A5FF0 LDR X1, [X8 + 0x148]
	0x024A5FF4 BL 0x2D0D54C
	0x024A5FF8 LDR X8, [X20 + 0x20]
	0x024A5FFC MOV X0, X19
	0x024A6000 LDP X20, X19, [X31 + 0x10]
	0x024A6004 LDR X8, [X8 + 0xC0]
	0x024A6008 LDR X1, [X8 + 0x60]
	0x024A600C LDR X30, [X31], #0x20
	0x024A6010 B 0x24A32C4
	0x024A6014 STR X30, [X31 - 0x30]!
	0x024A6018 STP X22, X21, [X31 + 0x10]
	0x024A601C STP X20, X19, [X31 + 0x20]
	0x024A6020 MOV X20, X1
	0x024A6024 MOV X1, X31
	0x024A6028 MOV X21, X2
	0x024A602C MOV X19, X0
	0x024A6030 BL 0x33E14E0
	0x024A6034 LDR W22, [X19 + 0x18]
	0x024A6038 CMP W22, 0x7
	0x024A603C B.GT 0x24A60C4
	0x024A6040 LDR X8, [X21 + 0x20]
	0x024A6044 LDR X8, [X8 + 0xC0]
	0x024A6048 LDR X0, [X8 + 0x10]
	0x024A604C LDRB W8, [X0 + 0x135]
	0x024A6050 TBNZ X8, 0x0, 0x24A6058
	0x024A6054 BL 0x1C5C684
	0x024A6058 LDR W8, [X0 + 0xE0]
	0x024A605C CBNZ W8, 0x24A6064
	0x024A6060 BL 0x1C16DFC
	0x024A6064 LDR X8, [X21 + 0x20]
	0x024A6068 LDR X8, [X8 + 0xC0]
	0x024A606C LDR X0, [X8 + 0x10]
	0x024A6070 LDRB W8, [X0 + 0x135]
	0x024A6074 TBNZ X8, 0x0, 0x24A607C
	0x024A6078 BL 0x1C5C684
	0x024A607C LDR X8, [X0 + 0xB8]
	0x024A6080 LDRB W8, [X8]
	0x024A6084 CBZ W8, 0x24A609C
	0x024A6088 LDR W8, [X19 + 0x18]
	0x024A608C CBNZ W8, 0x24A609C
	0x024A6090 MOV X0, X31
	0x024A6094 BL 0x33C18F4
	0x024A6098 STR W0, [X19 + 0x1C]
	0x024A609C LDRSW X8, [X19 + 0x18]
	0x024A60A0 LDR X9, [X19 + 0x10]
	0x024A60A4 ADD W10, W8, 0x1
	0x024A60A8 STR W10, [X19 + 0x18]
	0x024A60AC CBZ X9, 0x24A60EC
	0x024A60B0 LDR W10, [X9 + 0x18]
	0x024A60B4 CMP W8, W10
	0x024A60B8 B.CS 0x24A60F0
	0x024A60BC ADD X8, X9, X8, 0x3, LSL
	0x024A60C0 STR X20, [X8 + 0x20]
	0x024A60C4 CMP W22, 0x8
	0x024A60C8 MOV X0, X19
	0x024A60CC MOV X1, X31
	0x024A60D0 CSET W20, LT
	0x024A60D4 BL 0x33E14E4
	0x024A60D8 MOV W0, W20
	0x024A60DC LDP X20, X19, [X31 + 0x20]
	0x024A60E0 LDP X22, X21, [X31 + 0x10]
	0x024A60E4 LDR X30, [X31], #0x30
	0x024A60E8 RET
	0x024A60EC BL 0x1C16F20
	0x024A60F0 BL 0x1C16F28
	0x024A60F4 STR X30, [X31 - 0x30]!
	0x024A60F8 STP X22, X21, [X31 + 0x10]
	0x024A60FC STP X20, X19, [X31 + 0x20]
	0x024A6100 MOV X20, X1
	0x024A6104 MOV X1, X31
	0x024A6108 MOV X21, X2
	0x024A610C MOV X19, X0
	0x024A6110 BL 0x33E14E0
	0x024A6114 LDR W22, [X19 + 0x18]
	0x024A6118 CMP W22, 0x7
	0x024A611C B.GT 0x24A61A4
	0x024A6120 LDR X8, [X21 + 0x20]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x1F35000
	009 Move W8, [X22+3011]
	010 Move X19, X2
	011 Move W20, W1
	012 Move V8, V1
	013 Move V9, V0
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x1C78000
	020 Move X0, [X0+3672]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3011], W8
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Compare X21, 0
	033 JumpIfEqual {43}
	034 Move X1, [X8+320]
	035 Move X0, X21
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X22, [X31+32]
	039 Move X21, [X31+40]
	040 Move X30, [X31+16]
	041 Move D9, [X31+64]
	042 Move D8, [X31+72]
	043 Move X0, [X8+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, [X19+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X0, [X8+272]
	063 Call 0x2D0E6C4
	064 Compare X0, 0
	065 JumpIfEqual {124}
	066 Move X21, X0
	067 Move X0, [X19+32]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move [X21+180], S9
	075 Move [X21+188], S8
	076 Move [X21+188], W31
	077 Move X0, [X19+32]
	078 Move W8, [X0+309]
	079 Move TEMP, X8
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {84}
	083 Call 0x1C5D684
	084 Move [X21+192], S9
	085 Move [X21+200], S8
	086 Move [X21+200], W31
	087 Move X0, [X19+32]
	088 Move W8, [X0+309]
	089 Move TEMP, X8
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {94}
	093 Call 0x1C5D684
	094 Move [X21+156], W20
	095 Move X8, 0x1C77000
	096 Move X8, [X8+3672]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move W0, W20
	103 Move X1, X31
	104 Call PointerType.GetPointerType, X0
	105 Move X8, [X19+32]
	106 Move X19, X0
	107 Move W9, [X8+309]
	108 Move TEMP, X9
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {114}
	112 Move X0, X8
	113 Call 0x1C5D684
	114 Move [X21+160], X19
	115 Move X0, X21
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X22, [X31+32]
	119 Move X21, [X31+40]
	120 Move X30, [X31+16]
	121 Move D9, [X31+64]
	122 Move D8, [X31+72]
	123 Return X0
	124 Call 0x1C17F20

Method: T GetPooled(UnityEngine.UIElements.IPointerEvent triggerEvent)

Disassembly:
	0x024A6124 LDR X8, [X8 + 0xC0]
	0x024A6128 LDR X0, [X8 + 0x10]
	0x024A612C LDRB W8, [X0 + 0x135]
	0x024A6130 TBNZ X8, 0x0, 0x24A6138
	0x024A6134 BL 0x1C5C684
	0x024A6138 LDR W8, [X0 + 0xE0]
	0x024A613C CBNZ W8, 0x24A6144
	0x024A6140 BL 0x1C16DFC
	0x024A6144 LDR X8, [X21 + 0x20]
	0x024A6148 LDR X8, [X8 + 0xC0]
	0x024A614C LDR X0, [X8 + 0x10]
	0x024A6150 LDRB W8, [X0 + 0x135]
	0x024A6154 TBNZ X8, 0x0, 0x24A615C
	0x024A6158 BL 0x1C5C684
	0x024A615C LDR X8, [X0 + 0xB8]
	0x024A6160 LDRB W8, [X8]
	0x024A6164 CBZ W8, 0x24A617C
	0x024A6168 LDR W8, [X19 + 0x18]
	0x024A616C CBNZ W8, 0x24A617C
	0x024A6170 MOV X0, X31
	0x024A6174 BL 0x33C18F4
	0x024A6178 STR W0, [X19 + 0x1C]
	0x024A617C LDRSW X8, [X19 + 0x18]
	0x024A6180 LDR X9, [X19 + 0x10]
	0x024A6184 ADD W10, W8, 0x1
	0x024A6188 STR W10, [X19 + 0x18]
	0x024A618C CBZ X9, 0x24A61CC
	0x024A6190 LDR W10, [X9 + 0x18]
	0x024A6194 CMP W8, W10
	0x024A6198 B.CS 0x24A61D0
	0x024A619C ADD X8, X9, X8, 0x3, LSL
	0x024A61A0 STR X20, [X8 + 0x20]
	0x024A61A4 CMP W22, 0x8
	0x024A61A8 MOV X0, X19
	0x024A61AC MOV X1, X31
	0x024A61B0 CSET W20, LT
	0x024A61B4 BL 0x33E14E4
	0x024A61B8 MOV W0, W20
	0x024A61BC LDP X20, X19, [X31 + 0x20]
	0x024A61C0 LDP X22, X21, [X31 + 0x10]
	0x024A61C4 LDR X30, [X31], #0x30
	0x024A61C8 RET
	0x024A61CC BL 0x1C16F20
	0x024A61D0 BL 0x1C16F28
	0x024A61D4 STR X30, [X31 - 0x30]!
	0x024A61D8 STP X22, X21, [X31 + 0x10]
	0x024A61DC STP X20, X19, [X31 + 0x20]
	0x024A61E0 MOV X20, X1
	0x024A61E4 MOV X1, X31
	0x024A61E8 MOV X21, X2
	0x024A61EC MOV X19, X0
	0x024A61F0 BL 0x33E14E0
	0x024A61F4 LDR W22, [X19 + 0x18]
	0x024A61F8 CMP W22, 0x7
	0x024A61FC B.GT 0x24A6284
	0x024A6200 LDR X8, [X21 + 0x20]
	0x024A6204 LDR X8, [X8 + 0xC0]
	0x024A6208 LDR X0, [X8 + 0x10]
	0x024A620C LDRB W8, [X0 + 0x135]
	0x024A6210 TBNZ X8, 0x0, 0x24A6218
	0x024A6214 BL 0x1C5C684
	0x024A6218 LDR W8, [X0 + 0xE0]
	0x024A621C CBNZ W8, 0x24A6224
	0x024A6220 BL 0x1C16DFC
	0x024A6224 LDR X8, [X21 + 0x20]
	0x024A6228 LDR X8, [X8 + 0xC0]
	0x024A622C LDR X0, [X8 + 0x10]
	0x024A6230 LDRB W8, [X0 + 0x135]
	0x024A6234 TBNZ X8, 0x0, 0x24A623C
	0x024A6238 BL 0x1C5C684
	0x024A623C LDR X8, [X0 + 0xB8]
	0x024A6240 LDRB W8, [X8]
	0x024A6244 CBZ W8, 0x24A625C
	0x024A6248 LDR W8, [X19 + 0x18]
	0x024A624C CBNZ W8, 0x24A625C
	0x024A6250 MOV X0, X31
	0x024A6254 BL 0x33C18F4
	0x024A6258 STR W0, [X19 + 0x1C]
	0x024A625C LDRSW X8, [X19 + 0x18]
	0x024A6260 LDR X9, [X19 + 0x10]
	0x024A6264 ADD W10, W8, 0x1
	0x024A6268 STR W10, [X19 + 0x18]
	0x024A626C CBZ X9, 0x24A62AC
	0x024A6270 LDR W10, [X9 + 0x18]
	0x024A6274 CMP W8, W10
	0x024A6278 B.CS 0x24A62B0
	0x024A627C ADD X8, X9, X8, 0x3, LSL
	0x024A6280 STR X20, [X8 + 0x20]
	0x024A6284 CMP W22, 0x8
	0x024A6288 MOV X0, X19
	0x024A628C MOV X1, X31
	0x024A6290 CSET W20, LT
	0x024A6294 BL 0x33E14E4
	0x024A6298 MOV W0, W20
	0x024A629C LDP X20, X19, [X31 + 0x20]
	0x024A62A0 LDP X22, X21, [X31 + 0x10]
	0x024A62A4 LDR X30, [X31], #0x30
	0x024A62A8 RET
	0x024A62AC BL 0x1C16F20
	0x024A62B0 BL 0x1C16F28
	0x024A62B4 STP X30, X23, [X31 - 0x30]!
	0x024A62B8 STP X22, X21, [X31 + 0x10]
	0x024A62BC STP X20, X19, [X31 + 0x20]
	0x024A62C0 MOV X23, X1
	0x024A62C4 MOV X1, X31
	0x024A62C8 MOV X20, X4
	0x024A62CC MOV W19, W3
	0x024A62D0 MOV X22, X2
	0x024A62D4 MOV X21, X0
	0x024A62D8 BL 0x33BDD8C
	0x024A62DC STR X23, [X21 + 0x10]
	0x024A62E0 STR X22, [X21 + 0x20]
	0x024A62E4 LDR X8, [X20 + 0x20]
	0x024A62E8 LDR X8, [X8 + 0xC0]
	0x024A62EC LDR X0, [X8 + 0x18]
	0x024A62F0 LDRB W8, [X0 + 0x135]
	0x024A62F4 TBNZ X8, 0x0, 0x24A62FC
	0x024A62F8 BL 0x1C5C684
	0x024A62FC BL 0x1C16F10
	0x024A6300 LDR X8, [X20 + 0x20]
	0x024A6304 MOV X22, X0
	0x024A6308 LDR X8, [X8 + 0xC0]
	0x024A630C LDR X1, [X8 + 0x20]
	0x024A6310 BL 0x24F1248
	0x024A6314 STR X22, [X21 + 0x18]
	0x024A6318 LDR X8, [X20 + 0x20]
	0x024A631C MOV X0, X21
	0x024A6320 MOV W1, W19
	0x024A6324 LDP X20, X19, [X31 + 0x20]
	0x024A6328 LDR X8, [X8 + 0xC0]
	0x024A632C LDP X22, X21, [X31 + 0x10]
	0x024A6330 LDR X2, [X8 + 0x28]
	0x024A6334 LDP X30, X23, [X31], #0x30
	0x024A6338 B 0x24A6428
	0x024A633C LDR X9, [X3 + 0x20]
	0x024A6340 MOV W8, W2
	0x024A6344 MOV X2, X31
	0x024A6348 MOV W3, W8
	0x024A634C LDR X9, [X9 + 0xC0]
	0x024A6350 LDR X4, [X9 + 0x30]
	0x024A6354 B 0x24A62B4
	0x024A6358 SUB X31, X31, 0x30
	0x024A635C STP X30, X21, [X31 + 0x10]
	0x024A6360 STP X20, X19, [X31 + 0x20]
	0x024A6364 LDR X19, [X0 + 0x18]
	0x024A6368 MOV X20, X0
	0x024A636C STRB W31, [X31 + 0xC]
	0x024A6370 ADD X1, X31, 0xC
	0x024A6374 MOV X0, X19
	0x024A6378 MOV X2, X31
	0x024A637C BL 0x33DE64C
	0x024A6380 LDR X8, [X20 + 0x18]
	0x024A6384 CBZ X8, 0x24A63C4
	0x024A6388 LDR W21, [X8 + 0x20]
	0x024A638C MOV X20, X31
	0x024A6390 LDRB W8, [X31 + 0xC]
	0x024A6394 CBZ W8, 0x24A63A4
	0x024A6398 MOV X0, X19
	0x024A639C MOV X1, X31
	0x024A63A0 BL 0x33E14E4
	0x024A63A4 CBNZ X20, 0x24A63BC
	0x024A63A8 MOV W0, W21
	0x024A63AC LDP X20, X19, [X31 + 0x20]
	0x024A63B0 LDP X30, X21, [X31 + 0x10]
	0x024A63B4 ADD X31, X31, 0x30
	0x024A63B8 RET
	0x024A63BC MOV X0, X20
	0x024A63C0 BL 0x1C16F18
	0x024A63C4 BL 0x1C16F20
	0x024A63C8 B 0x24A63CC
	0x024A63CC MOV X21, X0
	0x024A63D0 CMP W1, 0x1
	0x024A63D4 B.NE 0x24A63F0
	0x024A63D8 MOV X0, X21
	0x024A63DC BL 0x3EB1AD0
	0x024A63E0 LDR X20, [X0]
	0x024A63E4 BL 0x3EB1AE0
	0x024A63E8 MOV W21, W31
	0x024A63EC B 0x24A6390
	0x024A63F0 MOV X20, X31
	0x024A63F4 B 0x24A63FC
	0x024A63F8 MOV X21, X0
	0x024A63FC LDRB W8, [X31 + 0xC]
	0x024A6400 CBZ W8, 0x24A6410
	0x024A6404 MOV X0, X19
	0x024A6408 MOV X1, X31
	0x024A640C BL 0x33E14E4
	0x024A6410 CBNZ X20, 0x24A641C
	0x024A6414 MOV X0, X21
	0x024A6418 BL 0x1D2C690
	0x024A641C MOV X0, X20
	0x024A6420 BL 0x1C16F18
	0x024A6424 BL 0x1990590
	0x024A6428 STP X30, X21, [X31 - 0x20]!
	0x024A642C STP X20, X19, [X31 + 0x10]
	0x024A6430 CMP W1, 0x1
	0x024A6434 B.LT 0x24A6484
	0x024A6438 MOV X19, X2
	0x024A643C MOV W20, W1
	0x024A6440 MOV X21, X0
	0x024A6444 LDR X8, [X21 + 0x10]
	0x024A6448 CBZ X8, 0x24A6490
	0x024A644C LDR X9, [X8 + 0x18]
	0x024A6450 LDR X0, [X8 + 0x40]
	0x024A6454 LDR X1, [X8 + 0x28]
	0x024A6458 BLR X9
	0x024A645C LDR X8, [X21 + 0x18]
	0x024A6460 CBZ X8, 0x24A6490
	0x024A6464 LDR X9, [X19 + 0x20]
	0x024A6468 MOV X1, X0
	0x024A646C MOV X0, X8
	0x024A6470 LDR X9, [X9 + 0xC0]
	0x024A6474 LDR X2, [X9 + 0x50]
	0x024A6478 BL 0x24F1750
	0x024A647C SUBS W20, W20, 0x1
	0x024A6480 B.NE 0x24A6444
	0x024A6484 LDP X20, X19, [X31 + 0x10]
	0x024A6488 LDP X30, X21, [X31], #0x20
	0x024A648C RET
	0x024A6490 BL 0x1C16F20
	0x024A6494 STR X30, [X31 - 0x30]!
	0x024A6498 STP X22, X21, [X31 + 0x10]
	0x024A649C STP X20, X19, [X31 + 0x20]
	0x024A64A0 MOV X20, X2
	0x024A64A4 CBZ X1, 0x24A652C
	0x024A64A8 LDR X8, [X0 + 0x20]
	0x024A64AC MOV X21, X1
	0x024A64B0 MOV X22, X0
	0x024A64B4 CBZ X8, 0x24A64CC
	0x024A64B8 LDR X9, [X8 + 0x18]
	0x024A64BC LDR X0, [X8 + 0x40]
	0x024A64C0 LDR X2, [X8 + 0x28]
	0x024A64C4 MOV X1, X21
	0x024A64C8 BLR X9
	0x024A64CC LDR X19, [X22 + 0x18]
	0x024A64D0 STRB W31, [X31 + 0xC]
	0x024A64D4 ADD X1, X31, 0xC
	0x024A64D8 MOV X0, X19
	0x024A64DC MOV X2, X31
	0x024A64E0 BL 0x33DE64C
	0x024A64E4 LDR X0, [X22 + 0x18]
	0x024A64E8 CBZ X0, 0x24A6570
	0x024A64EC LDR X8, [X20 + 0x20]
	0x024A64F0 LDR X8, [X8 + 0xC0]
	0x024A64F4 LDR X2, [X8 + 0x50]
	0x024A64F8 MOV X1, X21
	0x024A64FC BL 0x24F1750
	0x024A6500 MOV X20, X31
	0x024A6504 LDRB W8, [X31 + 0xC]
	0x024A6508 CBZ W8, 0x24A6518
	0x024A650C MOV X0, X19
	0x024A6510 MOV X1, X31
	0x024A6514 BL 0x33E14E4
	0x024A6518 CBNZ X20, 0x24A6568
	0x024A651C LDP X20, X19, [X31 + 0x20]
	0x024A6520 LDP X22, X21, [X31 + 0x10]
	0x024A6524 LDR X30, [X31], #0x30
	0x024A6528 RET
	0x024A652C ADRP X0, 0x1C52000
	0x024A6530 LDR X0, [X0 + 0x528]
	0x024A6534 BL 0x1C16D08
	0x024A6538 BL 0x1C16F10
	0x024A653C MOV X19, X0
	0x024A6540 ADRP X0, 0x1C76000
	0x024A6544 LDR X0, [X0 + 0xE90]
	0x024A6548 BL 0x1C16D08
	0x024A654C MOV X1, X0
	0x024A6550 MOV X0, X19
	0x024A6554 MOV X2, X31
	0x024A6558 BL 0x330E100
	0x024A655C MOV X0, X19
	0x024A6560 MOV X1, X20
	0x024A6564 BL 0x1C16DEC
	0x024A6568 MOV X0, X20
	0x024A656C BL 0x1C16F18
	0x024A6570 BL 0x1C16F20
	0x024A6574 B 0x24A6578
	0x024A6578 MOV X21, X0
	0x024A657C CMP W1, 0x1
	0x024A6580 B.NE 0x24A6598
	0x024A6584 MOV X0, X21
	0x024A6588 BL 0x3EB1AD0
	0x024A658C LDR X20, [X0]
	0x024A6590 BL 0x3EB1AE0
	0x024A6594 B 0x24A6504
	0x024A6598 MOV X20, X31
	0x024A659C B 0x24A65A4
	0x024A65A0 MOV X21, X0
	0x024A65A4 LDRB W8, [X31 + 0xC]
	0x024A65A8 CBZ W8, 0x24A65B8
	0x024A65AC MOV X0, X19
	0x024A65B0 MOV X1, X31
	0x024A65B4 BL 0x33E14E4
	0x024A65B8 CBNZ X20, 0x24A65C4
	0x024A65BC MOV X0, X21
	0x024A65C0 BL 0x1D2C690
	0x024A65C4 MOV X0, X20
	0x024A65C8 BL 0x1C16F18
	0x024A65CC BL 0x1990590
	0x024A65D0 STR X30, [X31 - 0x30]!
	0x024A65D4 STP X22, X21, [X31 + 0x10]
	0x024A65D8 STP X20, X19, [X31 + 0x20]
	0x024A65DC MOV X20, X2
	0x024A65E0 CBZ X1, 0x24A6668
	0x024A65E4 LDR X8, [X0 + 0x20]
	0x024A65E8 MOV X21, X1
	0x024A65EC MOV X22, X0
	0x024A65F0 CBZ X8, 0x24A6608
	0x024A65F4 LDR X9, [X8 + 0x18]
	0x024A65F8 LDR X0, [X8 + 0x40]
	0x024A65FC LDR X2, [X8 + 0x28]
	0x024A6600 MOV X1, X21
	0x024A6604 BLR X9
	0x024A6608 LDR X19, [X22 + 0x18]
	0x024A660C STRB W31, [X31 + 0xC]
	0x024A6610 ADD X1, X31, 0xC
	0x024A6614 MOV X0, X19
	0x024A6618 MOV X2, X31
	0x024A661C BL 0x33DE64C
	0x024A6620 LDR X0, [X22 + 0x18]
	0x024A6624 CBZ X0, 0x24A66AC
	0x024A6628 LDR X8, [X20 + 0x20]
	0x024A662C LDR X8, [X8 + 0xC0]
	0x024A6630 LDR X2, [X8 + 0x50]
	0x024A6634 MOV X1, X21
	0x024A6638 BL 0x24F1750
	0x024A663C MOV X20, X31
	0x024A6640 LDRB W8, [X31 + 0xC]
	0x024A6644 CBZ W8, 0x24A6654
	0x024A6648 MOV X0, X19
	0x024A664C MOV X1, X31
	0x024A6650 BL 0x33E14E4
	0x024A6654 CBNZ X20, 0x24A66A4
	0x024A6658 LDP X20, X19, [X31 + 0x20]
	0x024A665C LDP X22, X21, [X31 + 0x10]
	0x024A6660 LDR X30, [X31], #0x30
	0x024A6664 RET
	0x024A6668 ADRP X0, 0x1C52000
	0x024A666C LDR X0, [X0 + 0x528]
	0x024A6670 BL 0x1C16D08
	0x024A6674 BL 0x1C16F10
	0x024A6678 MOV X19, X0
	0x024A667C ADRP X0, 0x1C76000
	0x024A6680 LDR X0, [X0 + 0xE90]
	0x024A6684 BL 0x1C16D08
	0x024A6688 MOV X1, X0
	0x024A668C MOV X0, X19
	0x024A6690 MOV X2, X31
	0x024A6694 BL 0x330E100
	0x024A6698 MOV X0, X19
	0x024A669C MOV X1, X20
	0x024A66A0 BL 0x1C16DEC
	0x024A66A4 MOV X0, X20
	0x024A66A8 BL 0x1C16F18
	0x024A66AC BL 0x1C16F20
	0x024A66B0 B 0x24A66B4
	0x024A66B4 MOV X21, X0
	0x024A66B8 CMP W1, 0x1
	0x024A66BC B.NE 0x24A66D4
	0x024A66C0 MOV X0, X21
	0x024A66C4 BL 0x3EB1AD0
	0x024A66C8 LDR X20, [X0]
	0x024A66CC BL 0x3EB1AE0
	0x024A66D0 B 0x24A6640
	0x024A66D4 MOV X20, X31
	0x024A66D8 B 0x24A66E0
	0x024A66DC MOV X21, X0
	0x024A66E0 LDRB W8, [X31 + 0xC]
	0x024A66E4 CBZ W8, 0x24A66F4
	0x024A66E8 MOV X0, X19
	0x024A66EC MOV X1, X31
	0x024A66F0 BL 0x33E14E4
	0x024A66F4 CBNZ X20, 0x24A6700
	0x024A66F8 MOV X0, X21
	0x024A66FC BL 0x1D2C690
	0x024A6700 MOV X0, X20
	0x024A6704 BL 0x1C16F18
	0x024A6708 BL 0x1990590
	0x024A670C SUB X31, X31, 0x40
	0x024A6710 STP X30, X23, [X31 + 0x10]
	0x024A6714 STP X22, X21, [X31 + 0x20]
	0x024A6718 STP X20, X19, [X31 + 0x30]
	0x024A671C LDR X19, [X0 + 0x18]
	0x024A6720 MOV X20, X1
	0x024A6724 MOV X21, X0
	0x024A6728 STRB W31, [X31 + 0xC]
	0x024A672C ADD X1, X31, 0xC
	0x024A6730 MOV X0, X19
	0x024A6734 MOV X2, X31
	0x024A6738 BL 0x33DE64C
	0x024A673C LDR X8, [X21 + 0x18]
	0x024A6740 CBZ X8, 0x24A67E4
	0x024A6744 LDR W9, [X8 + 0x20]
	0x024A6748 CBZ W9, 0x24A6774
	0x024A674C LDR X9, [X20 + 0x20]
	0x024A6750 LDR X9, [X9 + 0xC0]
	0x024A6754 LDR X1, [X9 + 0x60]
	0x024A6758 MOV X0, X8
	0x024A675C BL 0x24F18D4
	0x024A6760 MOV X22, X0
	0x024A6764 MOV X20, X31
	0x024A6768 MOV X21, X31
	0x024A676C MOVZ W23, 0x4
	0x024A6770 B 0x24A679C
	0x024A6774 LDR X8, [X21 + 0x10]
	0x024A6778 CBZ X8, 0x24A67E8
	0x024A677C LDR X0, [X8 + 0x40]
	0x024A6780 LDR X1, [X8 + 0x28]
	0x024A6784 LDR X9, [X8 + 0x18]
	0x024A6788 BLR X9
	0x024A678C MOV X21, X0
	0x024A6790 MOV X20, X31
	0x024A6794 MOV X22, X31
	0x024A6798 MOVZ W23, 0x3
	0x024A679C LDRB W8, [X31 + 0xC]
	0x024A67A0 CBZ W8, 0x24A67B0
	0x024A67A4 MOV X0, X19
	0x024A67A8 MOV X1, X31
	0x024A67AC BL 0x33E14E4
	0x024A67B0 CBNZ X20, 0x24A67DC
	0x024A67B4 ORR W8, W23, 0x4
	0x024A67B8 CMP W8, 0x4
	0x024A67BC B.NE 0x24A67C4
	0x024A67C0 MOV X21, X22
	0x024A67C4 MOV X0, X21
	0x024A67C8 LDP X20, X19, [X31 + 0x30]
	0x024A67CC LDP X22, X21, [X31 + 0x20]
	0x024A67D0 LDP X30, X23, [X31 + 0x10]
	0x024A67D4 ADD X31, X31, 0x40
	0x024A67D8 RET
	0x024A67DC MOV X0, X20
	0x024A67E0 BL 0x1C16F18
	0x024A67E4 BL 0x1C16F20
	0x024A67E8 BL 0x1C16F20
	0x024A67EC B 0x24A67FC
	0x024A67F0 B 0x24A67FC
	0x024A67F4 B 0x24A67FC
	0x024A67F8 B 0x24A67FC
	0x024A67FC MOV X21, X0
	0x024A6800 CMP W1, 0x1
	0x024A6804 B.NE 0x24A6828
	0x024A6808 MOV X0, X21
	0x024A680C BL 0x3EB1AD0
	0x024A6810 LDR X20, [X0]
	0x024A6814 BL 0x3EB1AE0
	0x024A6818 MOV W23, W31
	0x024A681C MOV X21, X31
	0x024A6820 MOV X22, X31
	0x024A6824 B 0x24A679C
	0x024A6828 MOV X20, X31
	0x024A682C B 0x24A6834
	0x024A6830 MOV X21, X0
	0x024A6834 LDRB W8, [X31 + 0xC]
	0x024A6838 CBZ W8, 0x24A6848
	0x024A683C MOV X0, X19
	0x024A6840 MOV X1, X31
	0x024A6844 BL 0x33E14E4
	0x024A6848 CBNZ X20, 0x24A6854
	0x024A684C MOV X0, X21
	0x024A6850 BL 0x1D2C690
	0x024A6854 MOV X0, X20
	0x024A6858 BL 0x1C16F18
	0x024A685C BL 0x1990590
	0x024A6860 SUB X31, X31, 0x40
	0x024A6864 STP X30, X23, [X31 + 0x10]
	0x024A6868 STP X22, X21, [X31 + 0x20]
	0x024A686C STP X20, X19, [X31 + 0x30]
	0x024A6870 LDR X19, [X0 + 0x18]
	0x024A6874 MOV X20, X1
	0x024A6878 MOV X21, X0
	0x024A687C STRB W31, [X31 + 0xC]
	0x024A6880 ADD X1, X31, 0xC
	0x024A6884 MOV X0, X19
	0x024A6888 MOV X2, X31
	0x024A688C BL 0x33DE64C
	0x024A6890 LDR X8, [X21 + 0x18]
	0x024A6894 CBZ X8, 0x24A6938
	0x024A6898 LDR W9, [X8 + 0x20]
	0x024A689C CBZ W9, 0x24A68C8
	0x024A68A0 LDR X9, [X20 + 0x20]
	0x024A68A4 LDR X9, [X9 + 0xC0]
	0x024A68A8 LDR X1, [X9 + 0x60]
	0x024A68AC MOV X0, X8
	0x024A68B0 BL 0x24F18D4
	0x024A68B4 MOV X22, X0
	0x024A68B8 MOV X20, X31
	0x024A68BC MOV X21, X31
	0x024A68C0 MOVZ W23, 0x4
	0x024A68C4 B 0x24A68F0
	0x024A68C8 LDR X8, [X21 + 0x10]
	0x024A68CC CBZ X8, 0x24A693C
	0x024A68D0 LDR X0, [X8 + 0x40]
	0x024A68D4 LDR X1, [X8 + 0x28]
	0x024A68D8 LDR X9, [X8 + 0x18]
	0x024A68DC BLR X9
	0x024A68E0 MOV X21, X0
	0x024A68E4 MOV X20, X31
	0x024A68E8 MOV X22, X31
	0x024A68EC MOVZ W23, 0x3
	0x024A68F0 LDRB W8, [X31 + 0xC]
	0x024A68F4 CBZ W8, 0x24A6904
	0x024A68F8 MOV X0, X19
	0x024A68FC MOV X1, X31
	0x024A6900 BL 0x33E14E4
	0x024A6904 CBNZ X20, 0x24A6930
	0x024A6908 ORR W8, W23, 0x4
	0x024A690C CMP W8, 0x4
	0x024A6910 B.NE 0x24A6918
	0x024A6914 MOV X21, X22
	0x024A6918 MOV X0, X21
	0x024A691C LDP X20, X19, [X31 + 0x30]
	0x024A6920 LDP X22, X21, [X31 + 0x20]
	0x024A6924 LDP X30, X23, [X31 + 0x10]
	0x024A6928 ADD X31, X31, 0x40
	0x024A692C RET
	0x024A6930 MOV X0, X20
	0x024A6934 BL 0x1C16F18
	0x024A6938 BL 0x1C16F20
	0x024A693C BL 0x1C16F20
	0x024A6940 B 0x24A6950
	0x024A6944 B 0x24A6950
	0x024A6948 B 0x24A6950
	0x024A694C B 0x24A6950
	0x024A6950 MOV X21, X0
	0x024A6954 CMP W1, 0x1
	0x024A6958 B.NE 0x24A697C
	0x024A695C MOV X0, X21
	0x024A6960 BL 0x3EB1AD0
	0x024A6964 LDR X20, [X0]
	0x024A6968 BL 0x3EB1AE0
	0x024A696C MOV W23, W31
	0x024A6970 MOV X21, X31
	0x024A6974 MOV X22, X31
	0x024A6978 B 0x24A68F0
	0x024A697C MOV X20, X31
	0x024A6980 B 0x24A6988
	0x024A6984 MOV X21, X0
	0x024A6988 LDRB W8, [X31 + 0xC]
	0x024A698C CBZ W8, 0x24A699C
	0x024A6990 MOV X0, X19
	0x024A6994 MOV X1, X31
	0x024A6998 BL 0x33E14E4
	0x024A699C CBNZ X20, 0x24A69A8
	0x024A69A0 MOV X0, X21
	0x024A69A4 BL 0x1D2C690
	0x024A69A8 MOV X0, X20
	0x024A69AC BL 0x1C16F18
	0x024A69B0 BL 0x1990590
	0x024A69B4 STP X1, X2, [X0]
	0x024A69B8 RET
	0x024A69BC STR X30, [X31 - 0x20]!
	0x024A69C0 STP X20, X19, [X31 + 0x10]
	0x024A69C4 LDR X19, [X0 + 0x8]
	0x024A69C8 CBZ X19, 0x24A6A00
	0x024A69CC MOV X8, X0
	0x024A69D0 LDR X0, [X1 + 0x20]
	0x024A69D4 LDR X20, [X8]
	0x024A69D8 LDRB W9, [X0 + 0x135]
	0x024A69DC TBNZ X9, 0x0, 0x24A69E4
	0x024A69E0 BL 0x1C5C684
	0x024A69E4 LDR X8, [X0 + 0xC0]
	0x024A69E8 MOV X0, X19
	0x024A69EC MOV X1, X20
	0x024A69F0 LDP X20, X19, [X31 + 0x10]
	0x024A69F4 LDR X2, [X8 + 0x18]
	0x024A69F8 LDR X30, [X31], #0x20
	0x024A69FC B 0x2493D8C
	0x024A6A00 BL 0x1C16F20
	0x024A6A04 STP X29, X30, [X31 - 0x50]!
	0x024A6A08 STP X26, X25, [X31 + 0x10]
	0x024A6A0C STP X24, X23, [X31 + 0x20]
	0x024A6A10 STP X22, X21, [X31 + 0x30]
	0x024A6A14 STP X20, X19, [X31 + 0x40]
	0x024A6A18 ADD X29, X31, 0x0
	0x024A6A1C SUB X31, X31, 0x10
	0x024A6A20 MRS X26, 0xC000
	0x024A6A24 LDR X8, [X26 + 0x28]
	0x024A6A28 MOV X21, X3
	0x024A6A2C MOV X19, X2
	0x024A6A30 MOV X23, X1
	0x024A6A34 STUR X8, [X29 - 0x8]
	0x024A6A38 STUR X1, [X29 - 0x10]
	0x024A6A3C LDR X22, [X3 + 0x20]
	0x024A6A40 MOV X20, X0
	0x024A6A44 ADD X8, X22, 0x135
	0x024A6A48 LDRH W8, [X8]
	0x024A6A4C TBNZ X8, 0x0, 0x24A6A68
	0x024A6A50 MOV X0, X22
	0x024A6A54 BL 0x1C5C684
	0x024A6A58 LDR X22, [X21 + 0x20]
	0x024A6A5C ADD X8, X22, 0x135
	0x024A6A60 LDRH W8, [X8]
	0x024A6A64 B 0x24A6A6C
	0x024A6A68 MOV X0, X22
	0x024A6A6C LDR X9, [X0 + 0xC0]
	0x024A6A70 LDR X9, [X9]
	0x024A6A74 LDR W24, [X9 + 0xFC]
	0x024A6A78 ADD X9, X31, 0x0
	0x024A6A7C ADD X10, X24, 0xF
	0x024A6A80 AND X10, X10, 0x1FFFFFFFF
	0x024A6A84 SUB X25, X9, X10
	0x024A6A88 ADD X31, X25, 0x0
	0x024A6A8C TBNZ X8, 0x0, 0x24A6AA0
	0x024A6A90 MOV X0, X22
	0x024A6A94 BL 0x1C5C684
	0x024A6A98 LDR X22, [X21 + 0x20]
	0x024A6A9C B 0x24A6AA4
	0x024A6AA0 MOV X0, X22
	0x024A6AA4 LDR X8, [X0 + 0xC0]
	0x024A6AA8 MOV X0, X25
	0x024A6AAC MOV X2, X24
	0x024A6AB0 LDR X8, [X8]
	0x024A6AB4 LDR W8, [X8 + 0x28]
	0x024A6AB8 CMP W8, 0x0
	0x024A6ABC SUB X8, X29, 0x10
	0x024A6AC0 CSEL X1, X23, X8, LT
	0x024A6AC4 BL 0x3EB1AC0
	0x024A6AC8 LDRB W8, [X22 + 0x135]
	0x024A6ACC TBNZ X8, 0x0, 0x24A6ADC
	0x024A6AD0 MOV X0, X22
	0x024A6AD4 BL 0x1C5C684
	0x024A6AD8 MOV X22, X0
	0x024A6ADC LDR X8, [X22 + 0xC0]
	0x024A6AE0 MOV X0, X20
	0x024A6AE4 MOV X2, X25
	0x024A6AE8 MOV W3, W24
	0x024A6AEC LDR X8, [X8 + 0x8]
	0x024A6AF0 LDR X1, [X8 + 0x80]
	0x024A6AF4 BL 0x1C16D1C
	0x024A6AF8 LDR X0, [X21 + 0x20]
	0x024A6AFC LDRB W8, [X0 + 0x135]
	0x024A6B00 TBNZ X8, 0x0, 0x24A6B08
	0x024A6B04 BL 0x1C5C684
	0x024A6B08 LDR X8, [X0 + 0xC0]
	0x024A6B0C MOVZ W1, 0x8
	0x024A6B10 LDR X8, [X8 + 0x8]
	0x024A6B14 LDR X8, [X8 + 0x80]
	0x024A6B18 ADD X21, X8, 0x20
	0x024A6B1C MOV X0, X21
	0x024A6B20 BL 0x1C16D14
	0x024A6B24 MOV X0, X20
	0x024A6B28 MOV X1, X21
	0x024A6B2C BL 0x1C16D18
	0x024A6B30 STR X19, [X0]
	0x024A6B34 LDR X8, [X26 + 0x28]
	0x024A6B38 LDUR X9, [X29 - 0x8]
	0x024A6B3C CMP X8, X9
	0x024A6B40 B.NE 0x24A6B60
	0x024A6B44 ADD X31, X29, 0x0
	0x024A6B48 LDP X20, X19, [X31 + 0x40]
	0x024A6B4C LDP X22, X21, [X31 + 0x30]
	0x024A6B50 LDP X24, X23, [X31 + 0x20]
	0x024A6B54 LDP X26, X25, [X31 + 0x10]
	0x024A6B58 LDP X29, X30, [X31], #0x50
	0x024A6B5C RET
	0x024A6B60 BL 0x3EB1B20
	0x024A6B64 STP X29, X30, [X31 - 0x40]!
	0x024A6B68 STP X24, X23, [X31 + 0x10]
	0x024A6B6C STP X22, X21, [X31 + 0x20]
	0x024A6B70 STP X20, X19, [X31 + 0x30]
	0x024A6B74 ADD X29, X31, 0x0
	0x024A6B78 SUB X31, X31, 0x10
	0x024A6B7C MRS X24, 0xC000
	0x024A6B80 LDR X8, [X24 + 0x28]
	0x024A6B84 MOV X20, X1
	0x024A6B88 MOV X22, X0
	0x024A6B8C STUR X8, [X29 - 0x8]
	0x024A6B90 LDR X8, [X1 + 0x20]
	0x024A6B94 ADD X9, X8, 0x135
	0x024A6B98 LDRH W9, [X9]
	0x024A6B9C TBNZ X9, 0x0, 0x24A6BB8
	0x024A6BA0 MOV X0, X8
	0x024A6BA4 BL 0x1C5C684
	0x024A6BA8 LDR X8, [X20 + 0x20]
	0x024A6BAC ADD X9, X8, 0x135
	0x024A6BB0 LDRH W9, [X9]
	0x024A6BB4 B 0x24A6BBC
	0x024A6BB8 MOV X0, X8
	0x024A6BBC LDR X10, [X0 + 0xC0]
	0x024A6BC0 LDR X10, [X10]
	0x024A6BC4 LDR W23, [X10 + 0xFC]
	0x024A6BC8 ADD X10, X31, 0x0
	0x024A6BCC ADD X11, X23, 0xF
	0x024A6BD0 AND X11, X11, 0x1FFFFFFFF
	0x024A6BD4 SUB X19, X10, X11
	0x024A6BD8 ADD X31, X19, 0x0
	0x024A6BDC TBNZ X9, 0x0, 0x24A6BEC
	0x024A6BE0 MOV X0, X8
	0x024A6BE4 BL 0x1C5C684
	0x024A6BE8 MOV X8, X0
	0x024A6BEC LDR X8, [X8 + 0xC0]
	0x024A6BF0 MOV X0, X22
	0x024A6BF4 LDR X8, [X8 + 0x8]
	0x024A6BF8 LDR X8, [X8 + 0x80]
	0x024A6BFC ADD X1, X8, 0x20
	0x024A6C00 BL 0x1C16D18
	0x024A6C04 MOV X8, X0
	0x024A6C08 LDR X0, [X20 + 0x20]
	0x024A6C0C LDR X21, [X8]
	0x024A6C10 LDRB W9, [X0 + 0x135]
	0x024A6C14 TBNZ X9, 0x0, 0x24A6C1C
	0x024A6C18 BL 0x1C5C684
	0x024A6C1C LDR X8, [X0 + 0xC0]
	0x024A6C20 MOV X0, X22
	0x024A6C24 LDR X8, [X8 + 0x8]
	0x024A6C28 LDR X1, [X8 + 0x80]
	0x024A6C2C BL 0x1C16D18
	0x024A6C30 MOV X1, X0
	0x024A6C34 MOV X0, X19
	0x024A6C38 MOV X2, X23
	0x024A6C3C BL 0x3EB1AC0
	0x024A6C40 CBZ X21, 0x24A6D10
	0x024A6C44 LDR X8, [X20 + 0x20]
	0x024A6C48 ADD X9, X8, 0x135
	0x024A6C4C LDRH W9, [X9]
	0x024A6C50 TBNZ X9, 0x0, 0x24A6C6C
	0x024A6C54 MOV X0, X8
	0x024A6C58 BL 0x1C5C684
	0x024A6C5C LDR X8, [X20 + 0x20]
	0x024A6C60 ADD X9, X8, 0x135
	0x024A6C64 LDRH W9, [X9]
	0x024A6C68 B 0x24A6C70
	0x024A6C6C MOV X0, X8
	0x024A6C70 LDR X10, [X0 + 0xC0]
	0x024A6C74 LDR X10, [X10 + 0x18]
	0x024A6C78 LDR X22, [X10]
	0x024A6C7C TBNZ X9, 0x0, 0x24A6C98
	0x024A6C80 MOV X0, X8
	0x024A6C84 BL 0x1C5C684
	0x024A6C88 LDR X8, [X20 + 0x20]
	0x024A6C8C ADD X9, X8, 0x135
	0x024A6C90 LDRH W9, [X9]

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x1F34000
	011 Move W8, [X19+3012]
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x1C77000
	019 Move X0, [X0+3680]
	020 Call 0x1C17CF4
	021 Move X0, 0x1C77000
	022 Move X0, [X0+3704]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+3012], W8
	026 Add X21, X21, 32
	027 Move X0, [X21]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, [X8+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, [X21]
	047 Move W8, [X0+309]
	048 Move TEMP, X8
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {53}
	052 Call 0x1C5D684
	053 Move X8, [X0+192]
	054 Move X0, [X8+272]
	055 Call 0x2D0E6C4
	056 Move X19, X0
	057 Compare X20, 0
	058 JumpIfEqual {789}
	059 Move X23, 0x1C77000
	060 Move X8, [X20]
	061 Move X23, [X23+3704]
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move X1, [X23]
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move X0, X20
	073 Move W2, W31
	074 Call 0x1C5D788
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add X8, X8, X9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X20
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X19, 0
	083 JumpIfEqual {800}
	084 Move W22, W0
	085 Move X0, [X21]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Move [X19+156], W22
	093 Move X8, [X20]
	094 Move X1, [X23]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move W2, 1
	105 Move X0, X20
	106 Call 0x1C5D788
	107 Move W9, [X10]
	108 Add W9, W9, 1
	109 Add X8, X8, W9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X1, [X0+8]
	113 Move X0, X20
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X8, [X21]
	116 Move X22, X0
	117 Move W9, [X8+309]
	118 Move TEMP, X9
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {124}
	122 Move X0, X8
	123 Call 0x1C5D684
	124 Move [X19+160], X22
	125 Move X8, [X20]
	126 Move X1, [X23]
	127 NotImplemented "Instruction LDRH not yet implemented."
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move W2, 2
	137 Move X0, X20
	138 Call 0x1C5D788
	139 Move W9, [X10]
	140 Add W9, W9, 2
	141 Add X8, X8, W9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X1, [X0+8]
	145 Move X0, X20
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X8, [X21]
	148 Move W22, W0
	149 Move W9, [X8+309]
	150 Move TEMP, X9
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfEqual {156}
	154 Move X0, X8
	155 Call 0x1C5D684
	156 And W8, W22, 1
	157 Move [X19+168], W8
	158 Move X8, [X20]
	159 Move X1, [X23]
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move W2, 3
	170 Move X0, X20
	171 Call 0x1C5D788
	172 Move W9, [X10]
	173 Add W9, W9, 3
	174 Add X8, X8, W9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X1, [X0+8]
	178 Move X0, X20
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Move X8, [X21]
	181 Move W22, W0
	182 Move W9, [X8+309]
	183 Move TEMP, X9
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {189}
	187 Move X0, X8
	188 Call 0x1C5D684
	189 Move [X19+172], W22
	190 Move X8, [X20]
	191 Move X1, [X23]
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 Compare X9, 0
	194 JumpIfEqual {201}
	195 Move X10, [X8+176]
	196 Add X10, X10, 8
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Subtract X9, X9, 1
	200 Add X10, X10, 16
	201 Move W2, 4
	202 Move X0, X20
	203 Call 0x1C5D788
	204 Move W9, [X10]
	205 Add W9, W9, 4
	206 Add X8, X8, W9
	207 Add X0, X8, 312
	208 Move X8, [X0]
	209 Move X1, [X0+8]
	210 Move X0, X20
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move X8, [X21]
	213 Move W22, W0
	214 Move W9, [X8+309]
	215 Move TEMP, X9
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfEqual {221}
	219 Move X0, X8
	220 Call 0x1C5D684
	221 Move [X19+176], W22
	222 Move X8, [X20]
	223 Move X1, [X23]
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Compare X9, 0
	226 JumpIfEqual {233}
	227 Move X10, [X8+176]
	228 Add X10, X10, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X9, X9, 1
	232 Add X10, X10, 16
	233 Move W2, 5
	234 Move X0, X20
	235 Call 0x1C5D788
	236 Move W9, [X10]
	237 Add W9, W9, 5
	238 Add X8, X8, W9
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X1, [X0+8]
	242 Move X0, X20
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move X0, [X21]
	245 Move V8, V0
	246 Move V9, V1
	247 Move V10, V2
	248 Move W8, [X0+309]
	249 Move TEMP, X8
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfEqual {254}
	253 Call 0x1C5D684
	254 Move [X19+180], S8
	255 Move [X19+188], S9
	256 Move [X19+188], S10
	257 Move X8, [X20]
	258 Move X1, [X23]
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 Compare X9, 0
	261 JumpIfEqual {268}
	262 Move X10, [X8+176]
	263 Add X10, X10, 8
	264 NotImplemented "Instruction LDUR not yet implemented."
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Subtract X9, X9, 1
	267 Add X10, X10, 16
	268 Move W2, 6
	269 Move X0, X20
	270 Call 0x1C5D788
	271 Move W9, [X10]
	272 Add W9, W9, 6
	273 Add X8, X8, W9
	274 Add X0, X8, 312
	275 Move X8, [X0]
	276 Move X1, [X0+8]
	277 Move X0, X20
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move X0, [X21]
	280 Move V8, V0
	281 Move V9, V1
	282 Move V10, V2
	283 Move W8, [X0+309]
	284 Move TEMP, X8
	285 And TEMP, TEMP, 1
	286 Compare TEMP, 1
	287 JumpIfEqual {289}
	288 Call 0x1C5D684
	289 Move [X19+192], S8
	290 Move [X19+200], S9
	291 Move [X19+200], S10
	292 Move X8, [X20]
	293 Move X1, [X23]
	294 NotImplemented "Instruction LDRH not yet implemented."
	295 Compare X9, 0
	296 JumpIfEqual {303}
	297 Move X10, [X8+176]
	298 Add X10, X10, 8
	299 NotImplemented "Instruction LDUR not yet implemented."
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Subtract X9, X9, 1
	302 Add X10, X10, 16
	303 Move W2, 7
	304 Move X0, X20
	305 Call 0x1C5D788
	306 Move W9, [X10]
	307 Add W9, W9, 7
	308 Add X8, X8, W9
	309 Add X0, X8, 312
	310 Move X8, [X0]
	311 Move X1, [X0+8]
	312 Move X0, X20
	313 NotImplemented "Instruction BLR not yet implemented."
	314 Move X0, [X21]
	315 Move V8, V0
	316 Move V9, V1
	317 Move V10, V2
	318 Move W8, [X0+309]
	319 Move TEMP, X8
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfEqual {324}
	323 Call 0x1C5D684
	324 Move [X19+204], S8
	325 Move [X19+212], S9
	326 Move [X19+212], S10
	327 Move X8, [X20]
	328 Move X1, [X23]
	329 NotImplemented "Instruction LDRH not yet implemented."
	330 Compare X9, 0
	331 JumpIfEqual {338}
	332 Move X10, [X8+176]
	333 Add X10, X10, 8
	334 NotImplemented "Instruction LDUR not yet implemented."
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Subtract X9, X9, 1
	337 Add X10, X10, 16
	338 Move W2, 8
	339 Move X0, X20
	340 Call 0x1C5D788
	341 Move W9, [X10]
	342 Add W9, W9, 8
	343 Add X8, X8, W9
	344 Add X0, X8, 312
	345 Move X8, [X0]
	346 Move X1, [X0+8]
	347 Move X0, X20
	348 NotImplemented "Instruction BLR not yet implemented."
	349 Move X0, [X21]
	350 Move V8, V0
	351 Move W8, [X0+309]
	352 Move TEMP, X8
	353 And TEMP, TEMP, 1
	354 Compare TEMP, 1
	355 JumpIfEqual {357}
	356 Call 0x1C5D684
	357 Move [X19+216], S8
	358 Move X8, [X20]
	359 Move X1, [X23]
	360 NotImplemented "Instruction LDRH not yet implemented."
	361 Compare X9, 0
	362 JumpIfEqual {369}
	363 Move X10, [X8+176]
	364 Add X10, X10, 8
	365 NotImplemented "Instruction LDUR not yet implemented."
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Subtract X9, X9, 1
	368 Add X10, X10, 16
	369 Move W2, 9
	370 Move X0, X20
	371 Call 0x1C5D788
	372 Move W9, [X10]
	373 Add W9, W9, 9
	374 Add X8, X8, W9
	375 Add X0, X8, 312
	376 Move X8, [X0]
	377 Move X1, [X0+8]
	378 Move X0, X20
	379 NotImplemented "Instruction BLR not yet implemented."
	380 Move X8, [X21]
	381 Move W22, W0
	382 Move W9, [X8+309]
	383 Move TEMP, X9
	384 And TEMP, TEMP, 1
	385 Compare TEMP, 1
	386 JumpIfEqual {389}
	387 Move X0, X8
	388 Call 0x1C5D684
	389 Move [X19+220], W22
	390 Move X8, [X20]
	391 Move X1, [X23]
	392 NotImplemented "Instruction LDRH not yet implemented."
	393 Compare X9, 0
	394 JumpIfEqual {401}
	395 Move X10, [X8+176]
	396 Add X10, X10, 8
	397 NotImplemented "Instruction LDUR not yet implemented."
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Subtract X9, X9, 1
	400 Add X10, X10, 16
	401 Move W2, 10
	402 Move X0, X20
	403 Call 0x1C5D788
	404 Move W9, [X10]
	405 Add W9, W9, 10
	406 Add X8, X8, W9
	407 Add X0, X8, 312
	408 Move X8, [X0]
	409 Move X1, [X0+8]
	410 Move X0, X20
	411 NotImplemented "Instruction BLR not yet implemented."
	412 Move X0, [X21]
	413 Move V8, V0
	414 Move W8, [X0+309]
	415 Move TEMP, X8
	416 And TEMP, TEMP, 1
	417 Compare TEMP, 1
	418 JumpIfEqual {420}
	419 Call 0x1C5D684
	420 Move [X19+224], S8
	421 Move X8, [X20]
	422 Move X1, [X23]
	423 NotImplemented "Instruction LDRH not yet implemented."
	424 Compare X9, 0
	425 JumpIfEqual {432}
	426 Move X10, [X8+176]
	427 Add X10, X10, 8
	428 NotImplemented "Instruction LDUR not yet implemented."
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Subtract X9, X9, 1
	431 Add X10, X10, 16
	432 Move W2, 11
	433 Move X0, X20
	434 Call 0x1C5D788
	435 Move W9, [X10]
	436 Add W9, W9, 11
	437 Add X8, X8, W9
	438 Add X0, X8, 312
	439 Move X8, [X0]
	440 Move X1, [X0+8]
	441 Move X0, X20
	442 NotImplemented "Instruction BLR not yet implemented."
	443 Move X0, [X21]
	444 Move V8, V0
	445 Move W8, [X0+309]
	446 Move TEMP, X8
	447 And TEMP, TEMP, 1
	448 Compare TEMP, 1
	449 JumpIfEqual {451}
	450 Call 0x1C5D684
	451 Move [X19+228], S8
	452 Move X8, [X20]
	453 Move X1, [X23]
	454 NotImplemented "Instruction LDRH not yet implemented."
	455 Compare X9, 0
	456 JumpIfEqual {463}
	457 Move X10, [X8+176]
	458 Add X10, X10, 8
	459 NotImplemented "Instruction LDUR not yet implemented."
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Subtract X9, X9, 1
	462 Add X10, X10, 16
	463 Move W2, 12
	464 Move X0, X20
	465 Call 0x1C5D788
	466 Move W9, [X10]
	467 Add W9, W9, 12
	468 Add X8, X8, W9
	469 Add X0, X8, 312
	470 Move X8, [X0]
	471 Move X1, [X0+8]
	472 Move X0, X20
	473 NotImplemented "Instruction BLR not yet implemented."
	474 Move X0, [X21]
	475 Move V8, V0
	476 Move W8, [X0+309]
	477 Move TEMP, X8
	478 And TEMP, TEMP, 1
	479 Compare TEMP, 1
	480 JumpIfEqual {482}
	481 Call 0x1C5D684
	482 Move W8, 1
	483 Move [X19+132], W8
	484 Move [X19+136], S8
	485 Move X8, [X20]
	486 Move X1, [X23]
	487 NotImplemented "Instruction LDRH not yet implemented."
	488 Compare X9, 0
	489 JumpIfEqual {496}
	490 Move X10, [X8+176]
	491 Add X10, X10, 8
	492 NotImplemented "Instruction LDUR not yet implemented."
	493 NotImplemented "Instruction CMP not yet implemented."
	494 Subtract X9, X9, 1
	495 Add X10, X10, 16
	496 Move W2, 13
	497 Move X0, X20
	498 Call 0x1C5D788
	499 Move W9, [X10]
	500 Add W9, W9, 13
	501 Add X8, X8, W9
	502 Add X0, X8, 312
	503 Move X8, [X0]
	504 Move X1, [X0+8]
	505 Move X0, X20
	506 NotImplemented "Instruction BLR not yet implemented."
	507 Move X0, [X21]
	508 Move V8, V0
	509 Move W8, [X0+309]
	510 Move TEMP, X8
	511 And TEMP, TEMP, 1
	512 Compare TEMP, 1
	513 JumpIfEqual {515}
	514 Call 0x1C5D684
	515 Move W8, 1
	516 Move [X19+133], W8
	517 Move [X19+140], S8
	518 Move X8, [X20]
	519 Move X1, [X23]
	520 NotImplemented "Instruction LDRH not yet implemented."
	521 Compare X9, 0
	522 JumpIfEqual {529}
	523 Move X10, [X8+176]
	524 Add X10, X10, 8
	525 NotImplemented "Instruction LDUR not yet implemented."
	526 NotImplemented "Instruction CMP not yet implemented."
	527 Subtract X9, X9, 1
	528 Add X10, X10, 16
	529 Move W2, 14
	530 Move X0, X20
	531 Call 0x1C5D788
	532 Move W9, [X10]
	533 Add W9, W9, 14
	534 Add X8, X8, W9
	535 Add X0, X8, 312
	536 Move X8, [X0]
	537 Move X1, [X0+8]
	538 Move X0, X20
	539 NotImplemented "Instruction BLR not yet implemented."
	540 Move X0, [X21]
	541 Move V8, V0
	542 Move W8, [X0+309]
	543 Move TEMP, X8
	544 And TEMP, TEMP, 1
	545 Compare TEMP, 1
	546 JumpIfEqual {548}
	547 Call 0x1C5D684
	548 Move [X19+232], S8
	549 Move X8, [X20]
	550 Move X1, [X23]
	551 NotImplemented "Instruction LDRH not yet implemented."
	552 Compare X9, 0
	553 JumpIfEqual {560}
	554 Move X10, [X8+176]
	555 Add X10, X10, 8
	556 NotImplemented "Instruction LDUR not yet implemented."
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Subtract X9, X9, 1
	559 Add X10, X10, 16
	560 Move W2, 15
	561 Move X0, X20
	562 Call 0x1C5D788
	563 Move W9, [X10]
	564 Add W9, W9, 15
	565 Add X8, X8, W9
	566 Add X0, X8, 312
	567 Move X8, [X0]
	568 Move X1, [X0+8]
	569 Move X0, X20
	570 NotImplemented "Instruction BLR not yet implemented."
	571 Move X0, [X21]
	572 Move V8, V0
	573 Move V9, V1
	574 Move W8, [X0+309]
	575 Move TEMP, X8
	576 And TEMP, TEMP, 1
	577 Compare TEMP, 1
	578 JumpIfEqual {580}
	579 Call 0x1C5D684
	580 Move W8, 1
	581 Move [X19+144], W8
	582 Move [X19+148], S8
	583 Move [X19+156], S9
	584 Move X8, [X20]
	585 Move X1, [X23]
	586 NotImplemented "Instruction LDRH not yet implemented."
	587 Compare X9, 0
	588 JumpIfEqual {595}
	589 Move X10, [X8+176]
	590 Add X10, X10, 8
	591 NotImplemented "Instruction LDUR not yet implemented."
	592 NotImplemented "Instruction CMP not yet implemented."
	593 Subtract X9, X9, 1
	594 Add X10, X10, 16
	595 Move W2, 16
	596 Move X0, X20
	597 Call 0x1C5D788
	598 Move W9, [X10]
	599 Add W9, W9, 16
	600 Add X8, X8, W9
	601 Add X0, X8, 312
	602 Move X8, [X0]
	603 Move X1, [X0+8]
	604 Move X0, X20
	605 NotImplemented "Instruction BLR not yet implemented."
	606 Move X8, [X21]
	607 Move W22, W0
	608 Move W9, [X8+309]
	609 Move TEMP, X9
	610 And TEMP, TEMP, 1
	611 Compare TEMP, 1
	612 JumpIfEqual {615}
	613 Move X0, X8
	614 Call 0x1C5D684
	615 Move [X19+236], W22
	616 Move X8, [X20]
	617 Move X1, [X23]
	618 NotImplemented "Instruction LDRH not yet implemented."
	619 Compare X9, 0
	620 JumpIfEqual {627}
	621 Move X10, [X8+176]
	622 Add X10, X10, 8
	623 NotImplemented "Instruction LDUR not yet implemented."
	624 NotImplemented "Instruction CMP not yet implemented."
	625 Subtract X9, X9, 1
	626 Add X10, X10, 16
	627 Move W2, 17
	628 Move X0, X20
	629 Call 0x1C5D788
	630 Move W9, [X10]
	631 Add W9, W9, 17
	632 Add X8, X8, W9
	633 Add X0, X8, 312
	634 Move X8, [X0]
	635 Move X1, [X0+8]
	636 Move X0, X20
	637 NotImplemented "Instruction BLR not yet implemented."
	638 Move X0, [X21]
	639 Move V8, V0
	640 Move V9, V1
	641 Move W8, [X0+309]
	642 Move TEMP, X8
	643 And TEMP, TEMP, 1
	644 Compare TEMP, 1
	645 JumpIfEqual {647}
	646 Call 0x1C5D684
	647 Move [X19+240], S8
	648 Move [X19+248], S9
	649 Move X8, [X20]
	650 Move X1, [X23]
	651 NotImplemented "Instruction LDRH not yet implemented."
	652 Compare X9, 0
	653 JumpIfEqual {660}
	654 Move X10, [X8+176]
	655 Add X10, X10, 8
	656 NotImplemented "Instruction LDUR not yet implemented."
	657 NotImplemented "Instruction CMP not yet implemented."
	658 Subtract X9, X9, 1
	659 Add X10, X10, 16
	660 Move W2, 18
	661 Move X0, X20
	662 Call 0x1C5D788
	663 Move W9, [X10]
	664 Add W9, W9, 18
	665 Add X8, X8, W9
	666 Add X0, X8, 312
	667 Move X8, [X0]
	668 Move X1, [X0+8]
	669 Move X0, X20
	670 NotImplemented "Instruction BLR not yet implemented."
	671 Move X0, [X21]
	672 Move V8, V0
	673 Move V9, V1
	674 Move W8, [X0+309]
	675 Move TEMP, X8
	676 And TEMP, TEMP, 1
	677 Compare TEMP, 1
	678 JumpIfEqual {680}
	679 Call 0x1C5D684
	680 Move [X19+248], S8
	681 Move [X19+256], S9
	682 Move X8, [X20]
	683 Move X1, [X23]
	684 NotImplemented "Instruction LDRH not yet implemented."
	685 Compare X9, 0
	686 JumpIfEqual {693}
	687 Move X10, [X8+176]
	688 Add X10, X10, 8
	689 NotImplemented "Instruction LDUR not yet implemented."
	690 NotImplemented "Instruction CMP not yet implemented."
	691 Subtract X9, X9, 1
	692 Add X10, X10, 16
	693 Move W2, 19
	694 Move X0, X20
	695 Call 0x1C5D788
	696 Move W9, [X10]
	697 Add W9, W9, 19
	698 Add X8, X8, W9
	699 Add X0, X8, 312
	700 Move X8, [X0]
	701 Move X1, [X0+8]
	702 Move X22, 0x1C77000
	703 Move X22, [X22+3680]
	704 Move X0, X20
	705 NotImplemented "Instruction BLR not yet implemented."
	706 Move X8, [X21]
	707 Move W21, W0
	708 Move W9, [X8+309]
	709 Move TEMP, X9
	710 And TEMP, TEMP, 1
	711 Compare TEMP, 1
	712 JumpIfEqual {715}
	713 Move X0, X8
	714 Call 0x1C5D684
	715 Move [X19+256], W21
	716 Move X1, [X22]
	717 Move X0, X20
	718 Call 0x1C17E00
	719 Compare X0, 0
	720 JumpIfEqual {789}
	721 Move X8, [X19]
	722 Move X1, [X22]
	723 Move X20, X0
	724 NotImplemented "Instruction LDRH not yet implemented."
	725 Compare X9, 0
	726 JumpIfEqual {733}
	727 Move X10, [X8+176]
	728 Add X10, X10, 8
	729 NotImplemented "Instruction LDUR not yet implemented."
	730 NotImplemented "Instruction CMP not yet implemented."
	731 Subtract X9, X9, 1
	732 Add X10, X10, 16
	733 Move X0, X19
	734 Move W2, W31
	735 Call 0x1C5D788
	736 NotImplemented "Instruction LDRSW not yet implemented."
	737 Add X8, X8, X9
	738 Add X0, X8, 312
	739 Move X8, [X0]
	740 Move X1, [X0+8]
	741 Move X0, X19
	742 NotImplemented "Instruction BLR not yet implemented."
	743 Move X8, [X20]
	744 Move X1, [X22]
	745 Move W21, W0
	746 NotImplemented "Instruction LDRH not yet implemented."
	747 Compare X9, 0
	748 JumpIfEqual {755}
	749 Move X10, [X8+176]
	750 Add X10, X10, 8
	751 NotImplemented "Instruction LDUR not yet implemented."
	752 NotImplemented "Instruction CMP not yet implemented."
	753 Subtract X9, X9, 1
	754 Add X10, X10, 16
	755 Move X0, X20
	756 Move W2, W31
	757 Call 0x1C5D788
	758 NotImplemented "Instruction LDRSW not yet implemented."
	759 Add X8, X8, X9
	760 Add X0, X8, 312
	761 Move X8, [X0]
	762 Move X1, [X0+8]
	763 Move X0, X20
	764 NotImplemented "Instruction BLR not yet implemented."
	765 Move X8, [X19]
	766 Move X1, [X22]
	767 Or W20, W21, W0
	768 NotImplemented "Instruction LDRH not yet implemented."
	769 Compare X9, 0
	770 JumpIfEqual {777}
	771 Move X10, [X8+176]
	772 Add X10, X10, 8
	773 NotImplemented "Instruction LDUR not yet implemented."
	774 NotImplemented "Instruction CMP not yet implemented."
	775 Subtract X9, X9, 1
	776 Add X10, X10, 16
	777 Move W2, 1
	778 Move X0, X19
	779 Call 0x1C5D788
	780 Move W9, [X10]
	781 Add W9, W9, 1
	782 Add X8, X8, W9
	783 Add X0, X8, 312
	784 Move X8, [X0]
	785 Move X2, [X0+8]
	786 And W1, W20, 1
	787 Move X0, X19
	788 NotImplemented "Instruction BLR not yet implemented."
	789 Move X0, X19
	790 Move X20, [X31+64]
	791 Move X19, [X31+72]
	792 Move X22, [X31+48]
	793 Move X21, [X31+56]
	794 Move X30, [X31+32]
	795 Move X23, [X31+40]
	796 Move D9, [X31+16]
	797 Move D8, [X31+24]
	798 Move V10, [X31+80]
	799 Return X0
	800 Call 0x1C17F20

Method: System.Void PreDispatch(UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x024A6C94 B 0x24A6C9C
	0x024A6C98 MOV X0, X8
	0x024A6C9C LDR X10, [X0 + 0xC0]
	0x024A6CA0 LDR X20, [X10 + 0x18]
	0x024A6CA4 TBNZ X9, 0x0, 0x24A6CB4
	0x024A6CA8 MOV X0, X8
	0x024A6CAC BL 0x1C5C684
	0x024A6CB0 MOV X8, X0
	0x024A6CB4 LDR X8, [X8 + 0xC0]
	0x024A6CB8 LDR X8, [X8]
	0x024A6CBC LDR W8, [X8 + 0x28]
	0x024A6CC0 TBNZ X8, 0x1F, 0x24A6CC8
	0x024A6CC4 LDR X19, [X19]
	0x024A6CC8 STUR X19, [X29 - 0x10]
	0x024A6CCC LDR X8, [X20 + 0x10]
	0x024A6CD0 SUB X3, X29, 0x10
	0x024A6CD4 MOV X0, X22
	0x024A6CD8 MOV X1, X20
	0x024A6CDC MOV X2, X21
	0x024A6CE0 MOV X4, X19
	0x024A6CE4 BLR X8
	0x024A6CE8 LDR X8, [X24 + 0x28]
	0x024A6CEC LDUR X9, [X29 - 0x8]
	0x024A6CF0 CMP X8, X9
	0x024A6CF4 B.NE 0x24A6D14
	0x024A6CF8 ADD X31, X29, 0x0
	0x024A6CFC LDP X20, X19, [X31 + 0x30]
	0x024A6D00 LDP X22, X21, [X31 + 0x20]
	0x024A6D04 LDP X24, X23, [X31 + 0x10]
	0x024A6D08 LDP X29, X30, [X31], #0x40
	0x024A6D0C RET
	0x024A6D10 BL 0x1C16F20
	0x024A6D14 BL 0x3EB1B20
	0x024A6D18 STP X1, X2, [X0]
	0x024A6D1C RET
	0x024A6D20 STR X30, [X31 - 0x20]!
	0x024A6D24 STP X20, X19, [X31 + 0x10]
	0x024A6D28 LDR X19, [X0 + 0x8]
	0x024A6D2C CBZ X19, 0x24A6DC4
	0x024A6D30 MOV X8, X0
	0x024A6D34 LDR X0, [X1 + 0x20]
	0x024A6D38 LDR X20, [X8]
	0x024A6D3C LDRB W9, [X0 + 0x135]
	0x024A6D40 TBNZ X9, 0x0, 0x24A6D48
	0x024A6D44 BL 0x1C5C684
	0x024A6D48 LDR X8, [X0 + 0xC0]
	0x024A6D4C LDR X1, [X8 + 0x10]
	0x024A6D50 LDRB W8, [X1 + 0x135]
	0x024A6D54 TBNZ X8, 0x0, 0x24A6D64
	0x024A6D58 MOV X0, X1
	0x024A6D5C BL 0x1C5C684
	0x024A6D60 MOV X1, X0
	0x024A6D64 LDR X8, [X19]
	0x024A6D68 LDRH W9, [X8 + 0x12E]
	0x024A6D6C CBZ X9, 0x24A6D90
	0x024A6D70 LDR X10, [X8 + 0xB0]
	0x024A6D74 ADD X10, X10, 0x8
	0x024A6D78 LDUR X11, [X10 - 0x8]
	0x024A6D7C CMP X11, X1
	0x024A6D80 B.EQ 0x24A6DA0
	0x024A6D84 SUBS X9, X9, 0x1
	0x024A6D88 ADD X10, X10, 0x10
	0x024A6D8C B.NE 0x24A6D78
	0x024A6D90 MOV X0, X19
	0x024A6D94 MOV W2, W31
	0x024A6D98 BL 0x1C5C788
	0x024A6D9C B 0x24A6DAC
	0x024A6DA0 LDRSW X9, [X10]
	0x024A6DA4 ADD X8, X8, X9, 0x4, LSL
	0x024A6DA8 ADD X0, X8, 0x138
	0x024A6DAC LDP X3, X2, [X0]
	0x024A6DB0 MOV X0, X19
	0x024A6DB4 MOV X1, X20
	0x024A6DB8 LDP X20, X19, [X31 + 0x10]
	0x024A6DBC LDR X30, [X31], #0x20
	0x024A6DC0 BR X3
	0x024A6DC4 BL 0x1C16F20
	0x024A6DC8 STP X1, X2, [X0]
	0x024A6DCC RET
	0x024A6DD0 STR X30, [X31 - 0x20]!
	0x024A6DD4 STP X20, X19, [X31 + 0x10]
	0x024A6DD8 LDR X19, [X0 + 0x8]
	0x024A6DDC CBZ X19, 0x24A6E14
	0x024A6DE0 MOV X8, X0
	0x024A6DE4 LDR X0, [X1 + 0x20]
	0x024A6DE8 LDR X20, [X8]
	0x024A6DEC LDRB W9, [X0 + 0x135]
	0x024A6DF0 TBNZ X9, 0x0, 0x24A6DF8
	0x024A6DF4 BL 0x1C5C684
	0x024A6DF8 LDR X8, [X0 + 0xC0]
	0x024A6DFC MOV X0, X19
	0x024A6E00 MOV X1, X20
	0x024A6E04 LDP X20, X19, [X31 + 0x10]
	0x024A6E08 LDR X2, [X8 + 0x18]
	0x024A6E0C LDR X30, [X31], #0x20
	0x024A6E10 B 0x2EF10B8
	0x024A6E14 BL 0x1C16F20
	0x024A6E18 RET
	0x024A6E1C STR X30, [X31 - 0x20]!
	0x024A6E20 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x1F34000
	008 Move W8, [X21+3013]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x1C77000
	016 Move X0, [X0+3712]
	017 Call 0x1C17CF4
	018 Move X0, 0x1C77000
	019 Move X0, [X0+3680]
	020 Call 0x1C17CF4
	021 Move X0, 0x1C76000
	022 Move X0, [X0+2392]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+3013], W8
	026 Compare X20, 0
	027 JumpIfEqual {118}
	028 Move X21, 0x1C77000
	029 Move X21, [X21+3680]
	030 Move X0, X20
	031 Move X1, X19
	032 Move X2, X31
	033 Call EventBase.PreDispatch, X0, X1
	034 Move X8, [X20]
	035 Move X1, [X21]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move X0, X20
	046 Move W2, W31
	047 Call 0x1C5D788
	048 NotImplemented "Instruction LDRSW not yet implemented."
	049 Add X8, X8, X9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X20
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {80}
	059 Compare X19, 0
	060 JumpIfEqual {118}
	061 Move X10, 0x1C77000
	062 Move W21, [X20+156]
	063 Move X8, [X19]
	064 Move S9, [X20+180]
	065 Move S8, [X20+184]
	066 Move X10, [X10+3712]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X1, [X10]
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move W2, 2
	078 Move X0, X19
	079 Call 0x1C5D788
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X30, [X31+16]
	083 Move X21, [X31+24]
	084 Move D9, [X31+48]
	085 Move D8, [X31+56]
	086 Return 
	087 Move W9, [X10]
	088 Add W9, W9, 2
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X19
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X8, 0x1C76000
	096 Move X8, [X8+2392]
	097 Move W20, W0
	098 Move X8, [X8]
	099 Move W9, [X8+224]
	100 Compare W9, 0
	101 JumpIfNotEqual {104}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move W0, W21
	105 Move X1, X19
	106 Move W2, W20
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X30, [X31+16]
	110 Move X21, [X31+24]
	111 Move V0, V9
	112 Move V1, V8
	113 Move X3, X31
	114 Move D9, [X31+48]
	115 Move D8, [X31+56]
	116 Call PointerDeviceState.SavePointerPosition, X0, X1, X2, X3
	117 Return 
	118 Call 0x1C17F20

Method: System.Void PostDispatch(UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x024A6E24 MOV X19, X0
	0x024A6E28 LDR X0, [X0 + 0x20]
	0x024A6E2C LDRB W8, [X0 + 0x135]
	0x024A6E30 TBNZ X8, 0x0, 0x24A6E38
	0x024A6E34 BL 0x1C5C684
	0x024A6E38 LDR X8, [X0 + 0xC0]
	0x024A6E3C LDR X0, [X8 + 0x10]
	0x024A6E40 LDRB W8, [X0 + 0x135]
	0x024A6E44 TBNZ X8, 0x0, 0x24A6E4C
	0x024A6E48 BL 0x1C5C684
	0x024A6E4C LDR X8, [X0 + 0xB8]
	0x024A6E50 LDR X8, [X8]
	0x024A6E54 CBZ X8, 0x24A6EFC
	0x024A6E58 LDR X0, [X19 + 0x20]
	0x024A6E5C LDRB W8, [X0 + 0x135]
	0x024A6E60 TBNZ X8, 0x0, 0x24A6E68
	0x024A6E64 BL 0x1C5C684
	0x024A6E68 LDR X8, [X0 + 0xC0]
	0x024A6E6C LDR X0, [X8 + 0x10]
	0x024A6E70 LDRB W8, [X0 + 0x135]
	0x024A6E74 TBNZ X8, 0x0, 0x24A6E7C
	0x024A6E78 BL 0x1C5C684
	0x024A6E7C LDR X8, [X0 + 0xB8]
	0x024A6E80 LDR X20, [X8]
	0x024A6E84 CBZ X20, 0x24A6F20
	0x024A6E88 LDR X0, [X19 + 0x20]
	0x024A6E8C LDRB W8, [X0 + 0x135]
	0x024A6E90 TBNZ X8, 0x0, 0x24A6E98
	0x024A6E94 BL 0x1C5C684
	0x024A6E98 LDR W8, [X20 + 0x18]
	0x024A6E9C CMP W8, 0x1
	0x024A6EA0 B.LT 0x24A6EFC
	0x024A6EA4 LDR X0, [X19 + 0x20]
	0x024A6EA8 LDRB W8, [X0 + 0x135]
	0x024A6EAC TBNZ X8, 0x0, 0x24A6EB4
	0x024A6EB0 BL 0x1C5C684
	0x024A6EB4 LDR X8, [X0 + 0xC0]
	0x024A6EB8 LDR X0, [X8 + 0x10]
	0x024A6EBC LDRB W8, [X0 + 0x135]
	0x024A6EC0 TBNZ X8, 0x0, 0x24A6EC8
	0x024A6EC4 BL 0x1C5C684
	0x024A6EC8 LDR X8, [X0 + 0xB8]
	0x024A6ECC LDR X20, [X8]
	0x024A6ED0 CBZ X20, 0x24A6F20
	0x024A6ED4 LDR X0, [X19 + 0x20]
	0x024A6ED8 LDRB W8, [X0 + 0x135]
	0x024A6EDC TBNZ X8, 0x0, 0x24A6EE4
	0x024A6EE0 BL 0x1C5C684
	0x024A6EE4 LDR X8, [X0 + 0xC0]
	0x024A6EE8 MOV X0, X20
	0x024A6EEC LDP X20, X19, [X31 + 0x10]
	0x024A6EF0 LDR X1, [X8 + 0x20]
	0x024A6EF4 LDR X30, [X31], #0x20
	0x024A6EF8 B 0x26022C0
	0x024A6EFC LDR X0, [X19 + 0x20]
	0x024A6F00 LDRB W8, [X0 + 0x135]
	0x024A6F04 TBNZ X8, 0x0, 0x24A6F0C
	0x024A6F08 BL 0x1C5C684
	0x024A6F0C LDR X8, [X0 + 0xC0]
	0x024A6F10 LDP X20, X19, [X31 + 0x10]
	0x024A6F14 LDR X0, [X8 + 0x30]
	0x024A6F18 LDR X30, [X31], #0x20
	0x024A6F1C B 0x2278924
	0x024A6F20 BL 0x1C16F20
	0x024A6F24 STR X30, [X31 - 0x30]!
	0x024A6F28 STP X22, X21, [X31 + 0x10]
	0x024A6F2C STP X20, X19, [X31 + 0x20]
	0x024A6F30 LDR X8, [X0]
	0x024A6F34 MOV X20, X1
	0x024A6F38 MOV X19, X0
	0x024A6F3C LDP X9, X8, [X8 + 0x188]
	0x024A6F40 MOV X1, X8
	0x024A6F44 BLR X9
	0x024A6F48 LDR X8, [X19]
	0x024A6F4C MOV X0, X19
	0x024A6F50 LDP X9, X1, [X8 + 0x178]
	0x024A6F54 BLR X9
	0x024A6F58 LDR X8, [X20 + 0x20]
	0x024A6F5C LDR X8, [X8 + 0xC0]
	0x024A6F60 LDR X0, [X8 + 0x10]
	0x024A6F64 LDRB W8, [X0 + 0x135]
	0x024A6F68 TBNZ X8, 0x0, 0x24A6F70
	0x024A6F6C BL 0x1C5C684
	0x024A6F70 LDR X8, [X0 + 0xB8]
	0x024A6F74 LDR X8, [X8]
	0x024A6F78 CBNZ X8, 0x24A6FE4
	0x024A6F7C LDR X8, [X20 + 0x20]
	0x024A6F80 LDR X8, [X8 + 0xC0]
	0x024A6F84 LDR X0, [X8 + 0x8]
	0x024A6F88 LDRB W8, [X0 + 0x135]
	0x024A6F8C TBNZ X8, 0x0, 0x24A6F94
	0x024A6F90 BL 0x1C5C684
	0x024A6F94 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1F34000
	007 Move W8, [X21+3014]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x1C77000
	015 Move X0, [X0+3720]
	016 Call 0x1C17CF4
	017 Move X0, 0x1C77000
	018 Move X0, [X0+3680]
	019 Call 0x1C17CF4
	020 Move X0, 0x1C77000
	021 Move X0, [X0+3664]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3014], W8
	025 Move X22, 0x1C77000
	026 Move X22, [X22+3664]
	027 Move W21, W31
	028 Move X0, [X22]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X22]
	034 Move X8, [X0+184]
	035 Move X0, X19
	036 Move W8, [X8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W1, W21
	039 Move X2, X31
	040 Call PointerCaptureHelper.ProcessPointerCapture, X0, X1
	041 Add W21, W21, 1
	042 Move X1, X20
	043 Move X2, X31
	044 Call PointerCaptureHelper.ShouldSendCompatibilityMouseEvents, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {94}
	049 Compare X20, 0
	050 JumpIfEqual {106}
	051 Move X10, 0x1C77000
	052 Move X8, [X20]
	053 Move X10, [X10+3680]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Move X1, [X10]
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X20
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X1, [X0+8]
	072 Move X0, X20
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {94}
	078 Compare X19, 0
	079 JumpIfEqual {94}
	080 Move X8, 0x1C77000
	081 Move X8, [X8+3720]
	082 Move X9, [X19]
	083 Move X8, [X8]
	084 Move W11, [X9+304]
	085 Move W10, [X8+304]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X9, [X9+200]
	088 Add X9, X9, X10
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, X19
	092 Move X1, X31
	093 Call BaseVisualElementPanel.CommitElementUnderPointers, X0
	094 Compare X20, 0
	095 JumpIfEqual {106}
	096 Move X0, X20
	097 Move X1, X19
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X2, X31
	103 Move X30, [X31+48]
	104 Call EventBase.PostDispatch, X0, X1
	105 Return 
	106 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x024A6F98 LDR X8, [X20 + 0x20]
	0x024A6F9C MOV X21, X0
	0x024A6FA0 LDR X8, [X8 + 0xC0]
	0x024A6FA4 LDR X1, [X8 + 0x48]
	0x024A6FA8 BL 0x2601D04
	0x024A6FAC LDR X8, [X20 + 0x20]
	0x024A6FB0 LDR X8, [X8 + 0xC0]
	0x024A6FB4 LDR X0, [X8 + 0x10]
	0x024A6FB8 LDRB W9, [X0 + 0x135]
	0x024A6FBC TBNZ X9, 0x0, 0x24A6FCC
	0x024A6FC0 BL 0x1C5C684
	0x024A6FC4 LDR X8, [X20 + 0x20]
	0x024A6FC8 LDR X8, [X8 + 0xC0]
	0x024A6FCC LDR X9, [X0 + 0xB8]
	0x024A6FD0 STR X21, [X9]
	0x024A6FD4 LDR X0, [X8 + 0x10]
	0x024A6FD8 LDRB W8, [X0 + 0x135]
	0x024A6FDC TBNZ X8, 0x0, 0x24A6FE4
	0x024A6FE0 BL 0x1C5C684
	0x024A6FE4 LDR X8, [X20 + 0x20]
	0x024A6FE8 LDR X8, [X8 + 0xC0]
	0x024A6FEC LDR X0, [X8 + 0x10]
	0x024A6FF0 LDRB W8, [X0 + 0x135]
	0x024A6FF4 TBNZ X8, 0x0, 0x24A6FFC
	0x024A6FF8 BL 0x1C5C684
	0x024A6FFC LDR X8, [X0 + 0xB8]
	0x024A7000 LDR X21, [X8]
	0x024A7004 CBZ X21, 0x24A705C
	0x024A7008 LDR X8, [X20 + 0x20]
	0x024A700C LDR X8, [X8 + 0xC0]
	0x024A7010 LDR X22, [X8 + 0x28]
	0x024A7014 LDRB W8, [X22 + 0x135]
	0x024A7018 TBNZ X8, 0x0, 0x24A7028
	0x024A701C MOV X0, X22
	0x024A7020 BL 0x1C5C684
	0x024A7024 MOV X22, X0
	0x024A7028 MOV X0, X19
	0x024A702C MOV X1, X22
	0x024A7030 BL 0x1C16E00
	0x024A7034 CBZ X0, 0x24A7060
	0x024A7038 LDR X8, [X20 + 0x20]
	0x024A703C MOV X1, X0
	0x024A7040 MOV X0, X21
	0x024A7044 LDP X20, X19, [X31 + 0x20]
	0x024A7048 LDR X8, [X8 + 0xC0]
	0x024A704C LDP X22, X21, [X31 + 0x10]
	0x024A7050 LDR X2, [X8 + 0x50]
	0x024A7054 LDR X30, [X31], #0x30
	0x024A7058 B 0x2602314
	0x024A705C BL 0x1C16F20
	0x024A7060 MOV X0, X19
	0x024A7064 MOV X1, X22
	0x024A7068 BL 0x1C171E0
	0x024A706C MOV X1, X31
	0x024A7070 B 0x33BDD8C
	0x024A7074 STR X30, [X31 - 0x20]!
	0x024A7078 STP X20, X19, [X31 + 0x10]
	0x024A707C ADRP X20, 0x1F32000
	0x024A7080 LDRB W8, [X20 + 0xBC7]
	0x024A7084 MOV X19, X0
	0x024A7088 TBNZ X8, 0x0, 0x24A70AC
	0x024A708C ADRP X0, 0x1C4E000
	0x024A7090 LDR X0, [X0 + 0x278]
	0x024A7094 BL 0x1C16CF4
	0x024A7098 ADRP X0, 0x1C75000
	0x024A709C LDR X0, [X0 + 0xE98]
	0x024A70A0 BL 0x1C16CF4
	0x024A70A4 MOVZ W8, 0x1
	0x024A70A8 STRB W8, [X20 + 0xBC7]
	0x024A70AC LDR X9, [X19]
	0x024A70B0 LDR X20, [X19 + 0x458]
	0x024A70B4 LDR X8, [X9 + 0x7E8]
	0x024A70B8 LDR X1, [X9 + 0x7F0]
	0x024A70BC CBZ X20, 0x24A70E8
	0x024A70C0 MOV X0, X19
	0x024A70C4 BLR X8
	0x024A70C8 LDR X8, [X20 + 0x40]
	0x024A70CC LDR X3, [X20 + 0x18]
	0x024A70D0 LDR X2, [X20 + 0x28]
	0x024A70D4 LDP X20, X19, [X31 + 0x10]
	0x024A70D8 MOV X1, X0
	0x024A70DC MOV X0, X8
	0x024A70E0 LDR X30, [X31], #0x20
	0x024A70E4 BR X3
	0x024A70E8 MOV X0, X19
	0x024A70EC BLR X8
	0x024A70F0 CBZ X0, 0x24A714C
	0x024A70F4 LDR X8, [X19]
	0x024A70F8 MOV X0, X19
	0x024A70FC LDR X9, [X8 + 0x7E8]
	0x024A7100 LDR X1, [X8 + 0x7F0]
	0x024A7104 BLR X9
	0x024A7108 CBZ X0, 0x24A716C
	0x024A710C LDR X8, [X0]
	0x024A7110 LDP X9, X1, [X8 + 0x168]
	0x024A7114 BLR X9
	0x024A7118 ADRP X8, 0x1C75000
	0x024A711C LDR X8, [X8 + 0xE98]
	0x024A7120 MOV X19, X0
	0x024A7124 LDR X8, [X8]
	0x024A7128 LDR W9, [X8 + 0xE0]
	0x024A712C CBNZ W9, 0x24A7138
	0x024A7130 MOV X0, X8
	0x024A7134 BL 0x1C16DFC
	0x024A7138 MOV X0, X19
	0x024A713C LDP X20, X19, [X31 + 0x10]
	0x024A7140 MOV X1, X31
	0x024A7144 LDR X30, [X31], #0x20
	0x024A7148 B 0x3E1962C
	0x024A714C ADRP X8, 0x1C4E000
	0x024A7150 LDR X8, [X8 + 0x278]
	0x024A7154 LDP X20, X19, [X31 + 0x10]
	0x024A7158 LDR X8, [X8]
	0x024A715C LDR X8, [X8 + 0xB8]
	0x024A7160 LDR X0, [X8]
	0x024A7164 LDR X30, [X31], #0x20
	0x024A7168 RET
	0x024A716C BL 0x1C16F20
	0x024A7170 STR X30, [X31 - 0x30]!
	0x024A7174 STP X22, X21, [X31 + 0x10]
	0x024A7178 STP X20, X19, [X31 + 0x20]
	0x024A717C ADRP X22, 0x1F32000
	0x024A7180 LDRB W8, [X22 + 0xBC8]
	0x024A7184 MOV X20, X2
	0x024A7188 MOV X19, X1
	0x024A718C MOV X21, X0
	0x024A7190 TBNZ X8, 0x0, 0x24A71A8
	0x024A7194 ADRP X0, 0x1C4E000
	0x024A7198 LDR X0, [X0 + 0x278]
	0x024A719C BL 0x1C16CF4
	0x024A71A0 MOVZ W8, 0x1
	0x024A71A4 STRB W8, [X22 + 0xBC8]
	0x024A71A8 LDR X8, [X21 + 0x460]
	0x024A71AC CBZ X8, 0x24A71D0
	0x024A71B0 LDR X3, [X8 + 0x18]
	0x024A71B4 LDR X0, [X8 + 0x40]
	0x024A71B8 LDR X2, [X8 + 0x28]
	0x024A71BC MOV X1, X19
	0x024A71C0 LDP X20, X19, [X31 + 0x20]
	0x024A71C4 LDP X22, X21, [X31 + 0x10]
	0x024A71C8 LDR X30, [X31], #0x30
	0x024A71CC BR X3
	0x024A71D0 CBZ X19, 0x24A7210
	0x024A71D4 LDR X0, [X21 + 0x440]
	0x024A71D8 CBZ X0, 0x24A7234
	0x024A71DC LDR X8, [X20 + 0x20]
	0x024A71E0 MOV X1, X19
	0x024A71E4 LDR X8, [X8 + 0xC0]
	0x024A71E8 LDR X2, [X8 + 0x40]
	0x024A71EC BL 0x301C318
	0x024A71F0 TBZ X0, 0x0, 0x24A7210
	0x024A71F4 LDR X8, [X19]
	0x024A71F8 MOV X0, X19
	0x024A71FC LDP X20, X19, [X31 + 0x20]
	0x024A7200 LDP X22, X21, [X31 + 0x10]
	0x024A7204 LDP X2, X1, [X8 + 0x168]
	0x024A7208 LDR X30, [X31], #0x30
	0x024A720C BR X2
	0x024A7210 ADRP X8, 0x1C4E000
	0x024A7214 LDR X8, [X8 + 0x278]
	0x024A7218 LDP X20, X19, [X31 + 0x20]
	0x024A721C LDP X22, X21, [X31 + 0x10]
	0x024A7220 LDR X8, [X8]
	0x024A7224 LDR X8, [X8 + 0xB8]
	0x024A7228 LDR X0, [X8]
	0x024A722C LDR X30, [X31], #0x30
	0x024A7230 RET
	0x024A7234 BL 0x1C16F20
	0x024A7238 STR X30, [X31 - 0x10]!
	0x024A723C CBZ X0, 0x24A7254
	0x024A7240 LDR X8, [X1 + 0x20]
	0x024A7244 LDR X8, [X8 + 0xC0]
	0x024A7248 LDR X1, [X8 + 0x18]
	0x024A724C LDR X30, [X31], #0x10
	0x024A7250 B 0x2899F64
	0x024A7254 BL 0x1C16F20
	0x024A7258 STP X30, X21, [X31 - 0x20]!
	0x024A725C STP X20, X19, [X31 + 0x10]
	0x024A7260 MOV X19, X0
	0x024A7264 LDR X0, [X0 + 0x440]
	0x024A7268 MOV X21, X2
	0x024A726C MOV X20, X1
	0x024A7270 CBZ X0, 0x24A728C
	0x024A7274 LDR X8, [X21 + 0x20]
	0x024A7278 MOV X1, X20
	0x024A727C LDR X8, [X8 + 0xC0]
	0x024A7280 LDR X2, [X8 + 0x48]
	0x024A7284 BL 0x301CD00
	0x024A7288 B 0x24A7290
	0x024A728C MOVN W0, 0x0
	0x024A7290 STR W0, [X19 + 0x470]
	0x024A7294 LDR X8, [X21 + 0x20]
	0x024A7298 MOV X0, X19
	0x024A729C MOV X1, X20
	0x024A72A0 LDP X20, X19, [X31 + 0x10]
	0x024A72A4 LDR X8, [X8 + 0xC0]
	0x024A72A8 LDR X2, [X8 + 0x58]
	0x024A72AC LDP X30, X21, [X31], #0x20
	0x024A72B0 B 0x2899F6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, 257
	005 Move W9, 1
	006 Move [X0+136], X31
	007 NotImplemented "Instruction STRH not yet implemented."
	008 Move [X0+144], W9
	009 Move [X0+148], W31
	010 Move [X0+152], W31
	011 Move X8, [X1+32]
	012 Move X19, X0
	013 Move X20, X1
	014 Move X8, [X8+192]
	015 Move X0, [X8+32]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X8, [X20+32]
	027 Move X0, X19
	028 Move X8, [X8+192]
	029 Move X1, [X8+328]
	030 Call 0x2D0E54C, X0
	031 Move X8, [X20+32]
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X8, [X8+192]
	036 Move X1, [X8+96]
	037 Move X30, [X31+32]
	038 Call 0x24A42C4, X0
	039 Return 
	040 Move [X31-48], X30
	041 Move [X31+16], X22
	042 Move [X31+24], X21
	043 Move [X31+32], X20
	044 Move [X31+40], X19
	045 Move X20, X1
	046 Move X1, X31
	047 Move X21, X2
	048 Move X19, X0
	049 Call Monitor.Enter, X0
	050 Move W22, [X19+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, [X21+32]
	053 Move X8, [X8+192]
	054 Move X0, [X8+16]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X8, [X21+32]
	066 Move X8, [X8+192]
	067 Move X0, [X8+16]
	068 Move W8, [X0+309]
	069 Move TEMP, X8
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {74}
	073 Call 0x1C5D684
	074 Move X8, [X0+184]
	075 Move W8, [X8]
	076 Compare W8, 0
	077 JumpIfEqual {84}
	078 Move W8, [X19+24]
	079 Compare W8, 0
	080 JumpIfNotEqual {84}
	081 Move X0, X31
	082 Call Environment.get_TickCount
	083 Move [X19+28], W0
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Move X9, [X19+16]
	086 Add W10, W8, 1
	087 Move [X19+24], W10
	088 Compare X9, 0
	089 JumpIfEqual {106}
	090 Move W10, [X9+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X8, X9, X8
	093 Move [X8+32], X20
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, X19
	096 Move X1, X31
	097 NotImplemented "Instruction CSET not yet implemented."
	098 Call Monitor.Exit, X0
	099 Move W0, W20
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Return 
	106 Call 0x1C17F20
	107 Call 0x1C17F28
	108 Move [X31-48], X30
	109 Move [X31+16], X22
	110 Move [X31+24], X21
	111 Move [X31+32], X20
	112 Move [X31+40], X19
	113 Move X20, X1
	114 Move X1, X31
	115 Move X21, X2
	116 Move X19, X0
	117 Call Monitor.Enter, X0
	118 Move W22, [X19+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X8, [X21+32]
	121 Move X8, [X8+192]
	122 Move X0, [X8+16]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X8, [X21+32]
	134 Move X8, [X8+192]
	135 Move X0, [X8+16]
	136 Move W8, [X0+309]
	137 Move TEMP, X8
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfEqual {142}
	141 Call 0x1C5D684
	142 Move X8, [X0+184]
	143 Move W8, [X8]
	144 Compare W8, 0
	145 JumpIfEqual {152}
	146 Move W8, [X19+24]
	147 Compare W8, 0
	148 JumpIfNotEqual {152}
	149 Move X0, X31
	150 Call Environment.get_TickCount
	151 Move [X19+28], W0
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Move X9, [X19+16]
	154 Add W10, W8, 1
	155 Move [X19+24], W10
	156 Compare X9, 0
	157 JumpIfEqual {174}
	158 Move W10, [X9+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Add X8, X9, X8
	161 Move [X8+32], X20
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X0, X19
	164 Move X1, X31
	165 NotImplemented "Instruction CSET not yet implemented."
	166 Call Monitor.Exit, X0
	167 Move W0, W20
	168 Move X20, [X31+32]
	169 Move X19, [X31+40]
	170 Move X22, [X31+16]
	171 Move X21, [X31+24]
	172 Move X30, [X31+48]
	173 Return 
	174 Call 0x1C17F20
	175 Call 0x1C17F28
	176 Move [X31-48], X30
	177 Move [X31+16], X22
	178 Move [X31+24], X21
	179 Move [X31+32], X20
	180 Move [X31+40], X19
	181 Move X20, X1
	182 Move X1, X31
	183 Move X21, X2
	184 Move X19, X0
	185 Call Monitor.Enter, X0
	186 Move W22, [X19+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X8, [X21+32]
	189 Move X8, [X8+192]
	190 Move X0, [X8+16]
	191 Move W8, [X0+309]
	192 Move TEMP, X8
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {197}
	196 Call 0x1C5D684
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X8, [X21+32]
	202 Move X8, [X8+192]
	203 Move X0, [X8+16]
	204 Move W8, [X0+309]
	205 Move TEMP, X8
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {210}
	209 Call 0x1C5D684
	210 Move X8, [X0+184]
	211 Move W8, [X8]
	212 Compare W8, 0
	213 JumpIfEqual {220}
	214 Move W8, [X19+24]
	215 Compare W8, 0
	216 JumpIfNotEqual {220}
	217 Move X0, X31
	218 Call Environment.get_TickCount
	219 Move [X19+28], W0
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Move X9, [X19+16]
	222 Add W10, W8, 1
	223 Move [X19+24], W10
	224 Compare X9, 0
	225 JumpIfEqual {242}
	226 Move W10, [X9+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Add X8, X9, X8
	229 Move [X8+32], X20
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move X0, X19
	232 Move X1, X31
	233 NotImplemented "Instruction CSET not yet implemented."
	234 Call Monitor.Exit, X0
	235 Move W0, W20
	236 Move X20, [X31+32]
	237 Move X19, [X31+40]
	238 Move X22, [X31+16]
	239 Move X21, [X31+24]
	240 Move X30, [X31+48]
	241 Return 
	242 Call 0x1C17F20
	243 Call 0x1C17F28

