Type: UnityEngine.UIElements.Scroller

Method: System.Void add_valueChanged(System.Action`1<System.Single> value)

Disassembly:
	0x03D84D54 BL 0x3D84094
	0x03D84D58 LDP V0, V1, [X21]
	0x03D84D5C LDR X0, [X22 + 0x88]
	0x03D84D60 STP V0, V1, [X31]
	0x03D84D64 CBZ X0, 0x3D84DB4
	0x03D84D68 LDR X8, [X0]
	0x03D84D6C LDP V0, V1, [X31]
	0x03D84D70 ADD X2, X31, 0xA0
	0x03D84D74 MOV X1, X20
	0x03D84D78 LDR X9, [X8 + 0x178]
	0x03D84D7C STP V0, V1, [X31 + 0xA0]
	0x03D84D80 LDR X3, [X8 + 0x180]
	0x03D84D84 BLR X9
	0x03D84D88 LDR X0, [X19 + 0x3D0]
	0x03D84D8C CBZ X0, 0x3D84DB4
	0x03D84D90 LDR X8, [X0]
	0x03D84D94 LDR X9, [X8 + 0x7F8]
	0x03D84D98 LDR X1, [X8 + 0x800]
	0x03D84D9C BLR X9
	0x03D84DA0 LDP X20, X19, [X31 + 0xE0]
	0x03D84DA4 LDP X22, X21, [X31 + 0xD0]
	0x03D84DA8 LDP X30, X23, [X31 + 0xC0]
	0x03D84DAC ADD X31, X31, 0xF0
	0x03D84DB0 RET
	0x03D84DB4 BL 0x1C16F20
	0x03D84DB8 MOV X0, X19
	0x03D84DBC BL 0x1C171E0
	0x03D84DC0 STP X30, X23, [X31 - 0x30]!
	0x03D84DC4 STP X22, X21, [X31 + 0x10]
	0x03D84DC8 STP X20, X19, [X31 + 0x20]
	0x03D84DCC ADRP X20, 0x663000
	0x03D84DD0 ADRP X21, 0x3DF000
	0x03D84DD4 LDRB W8, [X20 + 0xDE3]
	0x03D84DD8 LDR X21, [X21 + 0x270]
	0x03D84DDC MOV X19, X0
	0x03D84DE0 TBNZ X8, 0x0, 0x3D84E70
	0x03D84DE4 ADRP X0, 0x36F000
	0x03D84DE8 LDR X0, [X0 + 0xAC8]
	0x03D84DEC BL 0x1C16CF4
	0x03D84DF0 ADRP X0, 0x3E3000
	0x03D84DF4 LDR X0, [X0 + 0x5D0]
	0x03D84DF8 BL 0x1C16CF4
	0x03D84DFC ADRP X0, 0x3E3000
	0x03D84E00 LDR X0, [X0 + 0x5D8]
	0x03D84E04 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x664000
	009 Move W8, [X21+3539]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x372000
	017 Move X0, [X0+1456]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3539], W8
	021 Move X24, 0x372000
	022 Move X21, [X20+968]
	023 Move X24, [X24+1456]
	024 Add X20, X20, 968
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_valueChanged(System.Action`1<System.Single> value)

Disassembly:
	0x03D84E08 ADRP X0, 0x3E3000
	0x03D84E0C LDR X0, [X0 + 0x5E0]
	0x03D84E10 BL 0x1C16CF4
	0x03D84E14 ADRP X0, 0x3DF000
	0x03D84E18 LDR X0, [X0 + 0x270]
	0x03D84E1C BL 0x1C16CF4
	0x03D84E20 ADRP X0, 0x3E3000
	0x03D84E24 LDR X0, [X0 + 0x158]
	0x03D84E28 BL 0x1C16CF4
	0x03D84E2C ADRP X0, 0x399000
	0x03D84E30 LDR X0, [X0 + 0xC20]
	0x03D84E34 BL 0x1C16CF4
	0x03D84E38 ADRP X0, 0x379000
	0x03D84E3C LDR X0, [X0 + 0xEC8]
	0x03D84E40 BL 0x1C16CF4
	0x03D84E44 ADRP X0, 0x3E3000
	0x03D84E48 LDR X0, [X0 + 0x160]
	0x03D84E4C BL 0x1C16CF4
	0x03D84E50 ADRP X0, 0x3E3000
	0x03D84E54 LDR X0, [X0 + 0x5E8]
	0x03D84E58 BL 0x1C16CF4
	0x03D84E5C ADRP X0, 0x3E3000
	0x03D84E60 LDR X0, [X0 + 0x5F0]
	0x03D84E64 BL 0x1C16CF4
	0x03D84E68 MOVZ W8, 0x1
	0x03D84E6C STRB W8, [X20 + 0xDE3]
	0x03D84E70 LDR X0, [X21]
	0x03D84E74 BL 0x1C16F10
	0x03D84E78 MOV X1, X31
	0x03D84E7C MOV X20, X0
	0x03D84E80 BL 0x3E1B6CC
	0x03D84E84 CBZ X20, 0x3D84FC8
	0x03D84E88 ADRP X8, 0x3E3000
	0x03D84E8C LDR X8, [X8 + 0x158]
	0x03D84E90 ADRP X22, 0x36F000
	0x03D84E94 MOVZ W1, 0x1
	0x03D84E98 LDR X8, [X8]
	0x03D84E9C LDR X22, [X22 + 0xAC8]
	0x03D84EA0 STR X8, [X20 + 0x10]
	0x03D84EA4 LDR X0, [X22]
	0x03D84EA8 BL 0x1C16D6C
	0x03D84EAC CBZ X0, 0x3D84FC8
	0x03D84EB0 LDR W8, [X0 + 0x18]
	0x03D84EB4 MOV X1, X0
	0x03D84EB8 CBZ W8, 0x3D84FCC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x664000
	009 Move W8, [X21+3540]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x372000
	017 Move X0, [X0+1456]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3540], W8
	021 Move X24, 0x372000
	022 Move X21, [X20+968]
	023 Move X24, [X24+1456]
	024 Add X20, X20, 968
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: UnityEngine.UIElements.Slider get_slider()

Disassembly:
	0x03D84EBC ADRP X8, 0x3E3000
	0x03D84EC0 LDR X8, [X8 + 0x5E8]

ISIL:
	001 Move X0, [X0+976]
	002 Return X0

Method: System.Void set_slider(UnityEngine.UIElements.Slider value)

Disassembly:
	0x03D84EC4 MOV X0, X20
	0x03D84EC8 MOV X2, X31

ISIL:
	001 Move [X0+976], X1
	002 Return 

Method: UnityEngine.UIElements.RepeatButton get_lowButton()

Disassembly:
	0x03D84ECC LDR X8, [X8]
	0x03D84ED0 STR X8, [X1 + 0x20]

ISIL:
	001 Move X0, [X0+984]
	002 Return X0

Method: System.Void set_lowButton(UnityEngine.UIElements.RepeatButton value)

Disassembly:
	0x03D84ED4 BL 0x3E1AE24
	0x03D84ED8 STR X20, [X19 + 0x70]

ISIL:
	001 Move [X0+984], X1
	002 Return 

Method: UnityEngine.UIElements.RepeatButton get_highButton()

Disassembly:
	0x03D84EDC LDR X0, [X21]
	0x03D84EE0 BL 0x1C16F10

ISIL:
	001 Move X0, [X0+992]
	002 Return X0

Method: System.Void set_highButton(UnityEngine.UIElements.RepeatButton value)

Disassembly:
	0x03D84EE4 MOV X1, X31
	0x03D84EE8 MOV X20, X0

ISIL:
	001 Move [X0+992], X1
	002 Return 

Method: System.Single get_value()

Disassembly:
	0x03D84EEC BL 0x3E1B6CC
	0x03D84EF0 CBZ X20, 0x3D84FC8
	0x03D84EF4 ADRP X8, 0x3E3000
	0x03D84EF8 LDR X8, [X8 + 0x160]
	0x03D84EFC MOVZ W1, 0x1
	0x03D84F00 LDR X8, [X8]
	0x03D84F04 STR X8, [X20 + 0x10]
	0x03D84F08 LDR X0, [X22]
	0x03D84F0C BL 0x1C16D6C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+976]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+2024]
	007 Move X1, [X8+2032]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void set_value(System.Single value)

Disassembly:
	0x03D84F10 CBZ X0, 0x3D84FC8
	0x03D84F14 LDR W8, [X0 + 0x18]
	0x03D84F18 MOV X1, X0
	0x03D84F1C CBZ W8, 0x3D84FCC
	0x03D84F20 ADRP X8, 0x3E3000
	0x03D84F24 LDR X8, [X8 + 0x5F0]
	0x03D84F28 ADRP X22, 0x3E3000
	0x03D84F2C ADRP X23, 0x3E3000
	0x03D84F30 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+976]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+2040]
	007 Move X1, [X8+2048]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Single get_lowValue()

Disassembly:
	0x03D84F34 LDR X8, [X8]
	0x03D84F38 LDR X22, [X22 + 0x5E0]
	0x03D84F3C LDR X23, [X23 + 0x5D8]
	0x03D84F40 MOV X2, X31
	0x03D84F44 STR X8, [X1 + 0x20]
	0x03D84F48 BL 0x3E1AE24
	0x03D84F4C STR X20, [X19 + 0x78]
	0x03D84F50 LDR X0, [X22]
	0x03D84F54 BL 0x1C16F10
	0x03D84F58 LDR X1, [X23]
	0x03D84F5C MOV X20, X0
	0x03D84F60 BL 0x2734B10
	0x03D84F64 CBZ X20, 0x3D84FC8
	0x03D84F68 ADRP X8, 0x399000
	0x03D84F6C LDR X8, [X8 + 0xC20]
	0x03D84F70 MOVZ W9, 0x1
	0x03D84F74 LDR X8, [X8]
	0x03D84F78 STR W9, [X20 + 0x40]
	0x03D84F7C STR X8, [X20 + 0x10]
	0x03D84F80 STR X20, [X19 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x664000
	005 Move W8, [X20+3541]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3E4000
	012 Move X0, [X0+1320]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3541], W8
	016 Move X0, [X19+976]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x3E4000
	020 Move X8, [X8+1320]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call BaseSlider`1<Single>.get_lowValue, X0
	026 Return V0
	027 Call 0x1C17F20

Method: System.Void set_lowValue(System.Single value)

Disassembly:
	0x03D84F84 LDR X0, [X21]
	0x03D84F88 BL 0x1C16F10
	0x03D84F8C MOV X1, X31
	0x03D84F90 MOV X20, X0
	0x03D84F94 BL 0x3E1B6CC
	0x03D84F98 CBZ X20, 0x3D84FC8
	0x03D84F9C ADRP X8, 0x379000
	0x03D84FA0 LDR X8, [X8 + 0xEC8]
	0x03D84FA4 MOV X0, X19
	0x03D84FA8 LDP X22, X21, [X31 + 0x10]
	0x03D84FAC MOV X1, X31
	0x03D84FB0 LDR X8, [X8]
	0x03D84FB4 STR X8, [X20 + 0x10]
	0x03D84FB8 STR X20, [X19 + 0x88]
	0x03D84FBC LDP X20, X19, [X31 + 0x20]
	0x03D84FC0 LDP X30, X23, [X31], #0x30
	0x03D84FC4 B 0x3DF8490
	0x03D84FC8 BL 0x1C16F20
	0x03D84FCC BL 0x1C16F28
	0x03D84FD0 FMOV S0, W31
	0x03D84FD4 FMOV S1, 10
	0x03D84FD8 FMOV S2, W31
	0x03D84FDC MOV X1, X31
	0x03D84FE0 MOV W2, W31

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x664000
	006 Move W8, [X20+3542]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3E4000
	014 Move X0, [X0+1328]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3542], W8
	018 Move X0, [X19+976]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x3E4000
	022 Move X8, [X8+1328]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+8]
	026 Move V0, V8
	027 Move X1, [X8]
	028 Move V8, [X31+32]
	029 Call BaseSlider`1<Single>.set_lowValue, X0, V0
	030 Return 
	031 Call 0x1C17F20

Method: System.Single get_highValue()

Disassembly:
	0x03D84FE4 B 0x3D84FE8
	0x03D84FE8 STR D10, [X31 - 0x50]!
	0x03D84FEC STP D9, D8, [X31 + 0x10]
	0x03D84FF0 STP X30, X23, [X31 + 0x20]
	0x03D84FF4 STP X22, X21, [X31 + 0x30]
	0x03D84FF8 STP X20, X19, [X31 + 0x40]
	0x03D84FFC ADRP X23, 0x663000
	0x03D85000 ADRP X22, 0x3E2000
	0x03D85004 LDRB W8, [X23 + 0xDE4]
	0x03D85008 B 0x3EB177C
	0x03D8500C MOV V8.16B, V2.16B
	0x03D85010 MOV W20, W2
	0x03D85014 MOV V9.16B, V1.16B
	0x03D85018 MOV V10.16B, V0.16B
	0x03D8501C MOV X21, X1
	0x03D85020 MOV X19, X0
	0x03D85024 TBNZ X8, 0x0, 0x3D8506C
	0x03D85028 ADRP X0, 0x3DE000
	0x03D8502C LDR X0, [X0 + 0xA80]
	0x03D85030 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x664000
	005 Move W8, [X20+3543]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3E4000
	012 Move X0, [X0+1336]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3543], W8
	016 Move X0, [X19+976]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0x3E3000
	020 Move X8, [X8+1336]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call BaseSlider`1<Single>.get_highValue, X0
	026 Return V0
	027 Call 0x1C17F20

Method: System.Void set_highValue(System.Single value)

Disassembly:
	0x03D85034 ADRP X0, 0x3DE000
	0x03D85038 LDR X0, [X0 + 0xA88]
	0x03D8503C BL 0x1C16CF4
	0x03D85040 ADRP X0, 0x3E2000
	0x03D85044 LDR X0, [X0 + 0x600]
	0x03D85048 BL 0x1C16CF4
	0x03D8504C ADRP X0, 0x3E2000
	0x03D85050 LDR X0, [X0 + 0x5F8]
	0x03D85054 BL 0x1C16CF4
	0x03D85058 ADRP X0, 0x3E2000
	0x03D8505C LDR X0, [X0 + 0x590]
	0x03D85060 BL 0x1C16CF4
	0x03D85064 MOVZ W8, 0x1
	0x03D85068 STRB W8, [X23 + 0xDE4]
	0x03D8506C LDR X0, [X22]
	0x03D85070 ADRP X23, 0x3E2000
	0x03D85074 ADRP X22, 0x3E2000
	0x03D85078 LDR W8, [X0 + 0xE0]
	0x03D8507C LDR X23, [X23 + 0x600]
	0x03D85080 LDR X22, [X22 + 0x590]
	0x03D85084 CBNZ W8, 0x3D8508C
	0x03D85088 BL 0x1C16DFC
	0x03D8508C LDR X3, [X23]
	0x03D85090 MOV X0, X19

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x663000
	006 Move W8, [X20+3544]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3E3000
	014 Move X0, [X0+1344]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3544], W8
	018 Move X0, [X19+976]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x3E3000
	022 Move X8, [X8+1344]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+8]
	026 Move V0, V8
	027 Move X1, [X8]
	028 Move V8, [X31+32]
	029 Call BaseSlider`1<Single>.set_highValue, X0, V0
	030 Return 
	031 Call 0x1C17F20

Method: System.Void set_direction(UnityEngine.UIElements.SliderDirection value)

Disassembly:
	0x03D85094 MOV X1, X21
	0x03D85098 MOV V0.16B, V10.16B
	0x03D8509C MOV V1.16B, V9.16B
	0x03D850A0 MOV W2, W20
	0x03D850A4 MOV V2.16B, V8.16B
	0x03D850A8 BL 0x28BFA04
	0x03D850AC LDR X0, [X22]
	0x03D850B0 LDR W8, [X0 + 0xE0]
	0x03D850B4 CBNZ W8, 0x3D850C0
	0x03D850B8 BL 0x1C16DFC
	0x03D850BC LDR X0, [X22]
	0x03D850C0 LDR X8, [X0 + 0xB8]
	0x03D850C4 MOV X0, X19
	0x03D850C8 MOV X2, X31
	0x03D850CC LDR X1, [X8]
	0x03D850D0 BL 0x3DF1C70
	0x03D850D4 LDR X0, [X19 + 0x400]
	0x03D850D8 CBZ X0, 0x3D85130
	0x03D850DC LDR X8, [X22]
	0x03D850E0 ADRP X20, 0x3DE000
	0x03D850E4 MOV X2, X31
	0x03D850E8 LDR X8, [X8 + 0xB8]
	0x03D850EC LDR X1, [X8 + 0x8]
	0x03D850F0 LDR X20, [X20 + 0xA88]
	0x03D850F4 BL 0x3DF1C70
	0x03D850F8 LDR X1, [X20]
	0x03D850FC MOV X0, X19
	0x03D85100 BL 0x28A0F80
	0x03D85104 CBZ X0, 0x3D85130
	0x03D85108 LDR X8, [X22]
	0x03D8510C LDP X20, X19, [X31 + 0x40]
	0x03D85110 LDP X22, X21, [X31 + 0x30]
	0x03D85114 LDP X30, X23, [X31 + 0x20]
	0x03D85118 LDR X8, [X8 + 0xB8]
	0x03D8511C LDP D9, D8, [X31 + 0x10]
	0x03D85120 MOV X2, X31
	0x03D85124 LDR X1, [X8 + 0x10]
	0x03D85128 LDR V10, [X31], #0x50
	0x03D8512C B 0x3DF1C70
	0x03D85130 BL 0x1C16F20
	0x03D85134 STR D12, [X31 - 0x60]!
	0x03D85138 STP D11, D10, [X31 + 0x10]
	0x03D8513C STP D9, D8, [X31 + 0x20]
	0x03D85140 STP X30, X23, [X31 + 0x30]
	0x03D85144 STP X22, X21, [X31 + 0x40]
	0x03D85148 STP X20, X19, [X31 + 0x50]
	0x03D8514C ADRP X22, 0x662000
	0x03D85150 ADRP X23, 0x3E2000
	0x03D85154 ADRP X21, 0x3E2000
	0x03D85158 LDRB W8, [X22 + 0xDE5]
	0x03D8515C LDR X23, [X23 + 0x528]
	0x03D85160 LDR X21, [X21 + 0x538]
	0x03D85164 MOV V10.16B, V3.16B
	0x03D85168 MOV W20, W1
	0x03D8516C MOV V8.16B, V1.16B
	0x03D85170 MOV V9.16B, V0.16B
	0x03D85174 MOV X19, X0
	0x03D85178 TBNZ X8, 0x0, 0x3D8519C
	0x03D8517C ADRP X0, 0x3E2000
	0x03D85180 LDR X0, [X0 + 0x538]
	0x03D85184 BL 0x1C16CF4
	0x03D85188 ADRP X0, 0x3E2000
	0x03D8518C LDR X0, [X0 + 0x528]
	0x03D85190 BL 0x1C16CF4
	0x03D85194 MOVZ W8, 0x1
	0x03D85198 STRB W8, [X22 + 0xDE5]
	0x03D8519C LDR X1, [X23]
	0x03D851A0 MOV X0, X19
	0x03D851A4 BL 0x28BF4FC
	0x03D851A8 LDR X1, [X21]
	0x03D851AC MOV X0, X19
	0x03D851B0 MOV V11.16B, V0.16B
	0x03D851B4 BL 0x28BF5A4
	0x03D851B8 FCVT S3, S10
	0x03D851BC FCVT S1, S11
	0x03D851C0 FCVT S2, S0
	0x03D851C4 MOV V0.16B, V3.16B
	0x03D851C8 MOV X0, X31
	0x03D851CC BL 0x3C2F79C
	0x03D851D0 CMP W20, 0x0
	0x03D851D4 CSET W0, EQ
	0x03D851D8 CMP W20, 0x2
	0x03D851DC CSET W1, EQ
	0x03D851E0 MOV X2, X31
	0x03D851E4 MOV V10.16B, V0.16B
	0x03D851E8 BL 0x3C2F590
	0x03D851EC LDR X8, [X19]
	0x03D851F0 MOV X0, X19
	0x03D851F4 MOV V11.16B, V0.16B
	0x03D851F8 LDR X9, [X8 + 0x7E8]
	0x03D851FC LDR X1, [X8 + 0x7F0]
	0x03D85200 BLR X9
	0x03D85204 FCVT S12, S0
	0x03D85208 MOV V0.16B, V9.16B
	0x03D8520C MOV V1.16B, V8.16B
	0x03D85210 MOV V2.16B, V11.16B
	0x03D85214 MOV X0, X31
	0x03D85218 BL 0x3C2F5B4
	0x03D8521C LDR X8, [X19]
	0x03D85220 FCVT S0, S0
	0x03D85224 FMUL D0, D10, D0
	0x03D85228 MOV X0, X19
	0x03D8522C LDR X2, [X8 + 0x7F8]
	0x03D85230 LDR X1, [X8 + 0x800]
	0x03D85234 LDP X20, X19, [X31 + 0x50]
	0x03D85238 LDP X22, X21, [X31 + 0x40]
	0x03D8523C LDP X30, X23, [X31 + 0x30]
	0x03D85240 LDP D9, D8, [X31 + 0x20]
	0x03D85244 LDP D11, D10, [X31 + 0x10]
	0x03D85248 FADD D0, D0, D12
	0x00000000 INVALID
	0x03D85250 LDR V12, [X31], #0x60
	0x03D85254 BR X2
	0x03D85258 STP D13, D12, [X31 - 0x60]!
	0x03D8525C STP D11, D10, [X31 + 0x10]
	0x03D85260 STP D9, D8, [X31 + 0x20]
	0x03D85264 STR X30, [X31 + 0x30]
	0x03D85268 STP X22, X21, [X31 + 0x40]
	0x03D8526C STP X20, X19, [X31 + 0x50]
	0x03D85270 ADRP X21, 0x662000
	0x03D85274 ADRP X22, 0x3E2000
	0x03D85278 ADRP X20, 0x3E2000
	0x03D8527C LDRB W8, [X21 + 0xDE6]
	0x03D85280 LDR X22, [X22 + 0x538]
	0x03D85284 LDR X20, [X20 + 0x528]
	0x03D85288 MOV V8.16B, V2.16B
	0x03D8528C MOV V10.16B, V1.16B
	0x03D85290 MOV V9.16B, V0.16B
	0x03D85294 MOV X19, X0
	0x03D85298 TBNZ X8, 0x0, 0x3D852EC
	0x03D8529C ADRP X0, 0x3E2000
	0x03D852A0 LDR X0, [X0 + 0x608]
	0x03D852A4 BL 0x1C16CF4
	0x03D852A8 ADRP X0, 0x3E2000
	0x03D852AC LDR X0, [X0 + 0x2D8]
	0x03D852B0 BL 0x1C16CF4
	0x03D852B4 ADRP X0, 0x3E2000
	0x03D852B8 LDR X0, [X0 + 0x538]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x663000
	008 Move W8, [X20+3545]
	009 Move W21, W1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x3E3000
	016 Move X0, [X0+1352]
	017 Call 0x1C17CF4
	018 Move X0, 0x3E3000
	019 Move X0, [X0+1360]
	020 Call 0x1C17CF4
	021 Move X0, 0x398000
	022 Move X0, [X0+296]
	023 Call 0x1C17CF4
	024 Move X0, 0x3E3000
	025 Move X0, [X0+896]
	026 Call 0x1C17CF4
	027 Move X0, 0x3DE000
	028 Move X0, [X0+3216]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3545], W8
	032 Move X0, [X19+976]
	033 Compare X0, 0
	034 JumpIfEqual {152}
	035 Move X8, 0x3E3000
	036 Move X8, [X8+1352]
	037 Move W1, W21
	038 Move X2, [X8]
	039 Call BaseSlider`1<Single>.set_direction, X0, X1
	040 Move X0, [X19+976]
	041 Compare X0, 0
	042 JumpIfEqual {152}
	043 Move X8, 0x3E3000
	044 Move X8, [X8+1360]
	045 Move X20, 0x3DE000
	046 Move X23, 0x398000
	047 Move X20, [X20+3216]
	048 Move X23, [X23+296]
	049 Move X2, [X8]
	050 Move X22, 0x3E3000
	051 Move X22, [X22+896]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 Call BaseSlider`1<Single>.set_inverted, X0, X1
	055 Move X0, X19
	056 Move X1, X31
	057 Call VisualElement.get_style, X0
	058 Move X1, [X20]
	059 Move X20, X0
	060 Compare W21, 0
	061 JumpIfEqual {81}
	062 Move W0, W31
	063 Call 0x266FACC, X0
	064 Compare X20, 0
	065 JumpIfEqual {152}
	066 Move X8, [X20]
	067 Move X1, [X23]
	068 Move X21, X0
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move W2, 20
	079 Move X0, X20
	080 Call 0x1C5D788
	081 Move W0, 2
	082 Call 0x266FACC, X0
	083 Compare X20, 0
	084 JumpIfEqual {152}
	085 Move X8, [X20]
	086 Move X1, [X23]
	087 Move X21, X0
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move W2, 20
	098 Move X0, X20
	099 Call 0x1C5D788
	100 Move W9, [X10]
	101 Add W9, W9, 20
	102 Add X8, X8, W9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X2, [X0+8]
	106 Move X0, X20
	107 Move X1, X21
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X0, [X22]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {115}
	113 Call 0x1C17DFC
	114 Move X0, [X22]
	115 Move W20, 8
	116 Move W8, 16
	117 Move W9, [X10]
	118 Add W9, W9, 20
	119 Add X8, X8, W9
	120 Add X0, X8, 312
	121 Move X8, [X0]
	122 Move X2, [X0+8]
	123 Move X0, X20
	124 Move X1, X21
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X0, [X22]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17DFC
	131 Move X0, [X22]
	132 Move W20, 16
	133 Move W8, 8
	134 Move X9, [X0+184]
	135 Move X0, X19
	136 Move X2, X31
	137 Move X1, [X9]
	138 Call VisualElement.AddToClassList, X0, X1
	139 Move X8, [X22]
	140 Move X0, X19
	141 Move X22, [X31+16]
	142 Move X21, [X31+24]
	143 Move X2, X31
	144 Move X8, [X8+184]
	145 Move X1, [X8]
	146 Move X20, [X31+32]
	147 Move X19, [X31+40]
	148 Move X30, [X31+48]
	149 Move X23, [X31+56]
	150 Call VisualElement.RemoveFromClassList, X0, X1
	151 Return 
	152 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D852BC BL 0x1C16CF4
	0x03D852C0 ADRP X0, 0x3E2000
	0x03D852C4 LDR X0, [X0 + 0x528]
	0x03D852C8 BL 0x1C16CF4
	0x03D852CC ADRP X0, 0x397000

ISIL:
	001 Move S0, W31
	002 Move S1, W31
	003 Move W2, 1
	004 Move X1, X31

Method: System.Void .ctor(System.Single lowValue, System.Single highValue, System.Action`1<System.Single> valueChanged, UnityEngine.UIElements.SliderDirection direction = 1)

Disassembly:
	0x03D852D0 LDR X0, [X0 + 0x120]
	0x03D852D4 BL 0x1C16CF4
	0x03D852D8 ADRP X0, 0x36E000
	0x03D852DC LDR X0, [X0 + 0x5A8]
	0x03D852E0 BL 0x1C16CF4
	0x03D852E4 MOVZ W8, 0x1
	0x03D852E8 STRB W8, [X21 + 0xDE6]
	0x03D852EC LDR X1, [X22]
	0x03D852F0 MOV X0, X19
	0x03D852F4 BL 0x28BF5A4
	0x03D852F8 LDR X1, [X20]
	0x03D852FC MOV X0, X19
	0x03D85300 MOV V11.16B, V0.16B
	0x03D85304 BL 0x28BF4FC
	0x03D85308 LDR X0, [X19 + 0x440]
	0x03D8530C CBZ X0, 0x3D85508
	0x03D85310 MOV X1, X31
	0x03D85314 MOV V12.16B, V0.16B
	0x03D85318 BL 0x3DE0EB8
	0x03D8531C CBZ X0, 0x3D85508
	0x03D85320 ADRP X21, 0x397000
	0x03D85324 LDR X8, [X0]
	0x03D85328 LDR X21, [X21 + 0x120]
	0x03D8532C MOV X20, X0
	0x03D85330 LDRH W9, [X8 + 0x12E]
	0x03D85334 LDR X1, [X21]
	0x03D85338 CBZ X9, 0x3D8535C
	0x03D8533C LDR X10, [X8 + 0xB0]
	0x03D85340 ADD X10, X10, 0x8
	0x03D85344 LDUR X11, [X10 - 0x8]
	0x03D85348 CMP X11, X1
	0x03D8534C B.EQ 0x3D8536C
	0x03D85350 SUBS X9, X9, 0x1
	0x03D85354 ADD X10, X10, 0x10
	0x03D85358 B.NE 0x3D85344
	0x03D8535C MOVZ W2, 0x2C
	0x03D85360 MOV X0, X20
	0x03D85364 BL 0x1C5C788
	0x03D85368 B 0x3D8537C
	0x03D8536C LDR W9, [X10]
	0x03D85370 ADD W9, W9, 0x2C
	0x03D85374 ADD X8, X8, W9, 0x4, SXTW
	0x03D85378 ADD X0, X8, 0x138
	0x03D8537C LDP X8, X1, [X0]
	0x03D85380 MOV X0, X20
	0x03D85384 BLR X8
	0x03D85388 LDR X0, [X19 + 0x448]
	0x03D8538C CBZ X0, 0x3D85508
	0x03D85390 MOV X1, X31
	0x03D85394 MOV V13.16B, V0.16B
	0x03D85398 BL 0x3DE0EB8
	0x03D8539C CBZ X0, 0x3D85508
	0x03D853A0 LDR X8, [X0]
	0x03D853A4 LDR X1, [X21]
	0x03D853A8 MOV X19, X0
	0x03D853AC LDRH W9, [X8 + 0x12E]
	0x03D853B0 CBZ X9, 0x3D853D4
	0x03D853B4 LDR X10, [X8 + 0xB0]
	0x03D853B8 ADD X10, X10, 0x8
	0x03D853BC LDUR X11, [X10 - 0x8]
	0x03D853C0 CMP X11, X1
	0x03D853C4 B.EQ 0x3D853E4
	0x03D853C8 SUBS X9, X9, 0x1
	0x03D853CC ADD X10, X10, 0x10
	0x03D853D0 B.NE 0x3D853BC
	0x03D853D4 MOVZ W2, 0x2C
	0x03D853D8 MOV X0, X19
	0x03D853DC BL 0x1C5C788
	0x03D853E0 B 0x3D853F4
	0x03D853E4 LDR W9, [X10]
	0x03D853E8 ADD W9, W9, 0x2C
	0x03D853EC ADD X8, X8, W9, 0x4, SXTW
	0x03D853F0 ADD X0, X8, 0x138
	0x03D853F4 LDP X8, X1, [X0]
	0x03D853F8 ADRP X20, 0x36E000
	0x03D853FC LDR X20, [X20 + 0x5A8]
	0x03D85400 MOV X0, X19
	0x03D85404 BLR X8
	0x03D85408 FSUB S1, S11, S12
	0x03D8540C FSUB S0, S13, S0
	0x03D85410 FDIV S11, S1, S0
	0x03D85414 FABS S0, S11
	0x03D85418 BL 0x3EB1C50
	0x03D8541C FCMP S11, 0x0
	0x03D85420 MOV V11.16B, V0.16B
	0x03D85424 B.NE 0x3D85460
	0x03D85428 FCVT S0, S11
	0x03D8542C FMOV D1, 4.000000000232831
	0x03D85430 MOVZ X8, 0x7FF00000
	0x03D85434 FSUB D0, D1, D0
	0x03D85438 FMOV D1, X8
	0x03D8543C FCVTZS W8, D0
	0x03D85440 FCMP D0, D1
	0x03D85444 MOVZ W9, 0x80000000
	0x03D85448 CSEL W8, W9, W8, EQ
	0x03D8544C TBNZ X8, 0x1F, 0x3D854B4
	0x03D85450 CMP W8, 0xF
	0x03D85454 MOVZ W9, 0xF
	0x03D85458 CSEL W19, W8, W9, LT
	0x03D8545C B 0x3D854B8
	0x03D85460 ADRP X19, 0x653000
	0x03D85464 LDRB W8, [X19 + 0xA23]
	0x03D85468 CBNZ W8, 0x3D85480
	0x03D8546C ADRP X0, 0x36E000
	0x03D85470 LDR X0, [X0 + 0x5A8]
	0x03D85474 BL 0x1C16CF4
	0x03D85478 MOVZ W8, 0x1
	0x03D8547C STRB W8, [X19 + 0xA23]
	0x03D85480 LDR X0, [X20]
	0x03D85484 LDR W8, [X0 + 0xE0]
	0x03D85488 CBNZ W8, 0x3D85490
	0x03D8548C BL 0x1C16DFC
	0x03D85490 MOVZ W8, 0x7F800000
	0x03D85494 FRINTM S0, S11
	0x03D85498 FMOV S1, W8
	0x03D8549C FCVTMS W9, S11
	0x03D854A0 FCMP S0, S1
	0x03D854A4 MOVZ W8, 0x80000000
	0x03D854A8 CSEL W8, W8, W9, EQ
	0x03D854AC SUBS W8, W31, W8
	0x03D854B0 B.PL 0x3D85450
	0x03D854B4 MOV W19, W31
	0x03D854B8 LDR X0, [X20]
	0x03D854BC LDR W8, [X0 + 0xE0]
	0x03D854C0 CBNZ W8, 0x3D854C8
	0x03D854C4 BL 0x1C16DFC
	0x03D854C8 FSUB S0, S10, S9
	0x03D854CC FMUL S0, S0, S8
	0x03D854D0 FADD S0, S0, S9
	0x03D854D4 FCVT S0, S0
	0x03D854D8 MOVZ W1, 0x1
	0x03D854DC MOV W0, W19
	0x03D854E0 MOV X2, X31
	0x03D854E4 BL 0x337EFF0
	0x03D854E8 LDP X20, X19, [X31 + 0x50]
	0x03D854EC LDP X22, X21, [X31 + 0x40]
	0x03D854F0 LDR X30, [X31 + 0x30]
	0x03D854F4 LDP D9, D8, [X31 + 0x20]
	0x03D854F8 LDP D11, D10, [X31 + 0x10]
	0x00000000 INVALID
	0x03D85500 LDP D13, D12, [X31], #0x60
	0x03D85504 RET
	0x03D85508 BL 0x1C16F20
	0x03D8550C STR X30, [X31 - 0x30]!
	0x03D85510 STP X22, X21, [X31 + 0x10]
	0x03D85514 STP X20, X19, [X31 + 0x20]
	0x03D85518 ADRP X22, 0x662000
	0x03D8551C ADRP X21, 0x3DA000
	0x03D85520 LDRB W8, [X22 + 0xDE7]
	0x03D85524 LDR X21, [X21 + 0x7A8]
	0x03D85528 MOV X19, X2
	0x03D8552C MOV X20, X1
	0x03D85530 TBNZ X8, 0x0, 0x3D85548
	0x03D85534 ADRP X0, 0x3DA000
	0x03D85538 LDR X0, [X0 + 0x7A8]
	0x03D8553C BL 0x1C16CF4
	0x03D85540 MOVZ W8, 0x1
	0x03D85544 STRB W8, [X22 + 0xDE7]
	0x03D85548 LDR X0, [X21]
	0x03D8554C STR W31, [X31 + 0xC]
	0x03D85550 LDR W8, [X0 + 0xE0]
	0x03D85554 CBNZ W8, 0x3D8555C
	0x03D85558 BL 0x1C16DFC
	0x03D8555C ADD X2, X31, 0xC
	0x03D85560 MOV X0, X19
	0x03D85564 MOV X1, X20
	0x03D85568 MOV X3, X31
	0x03D8556C BL 0x3C3D5B0
	0x03D85570 LDR V0, [X31 + 0xC]
	0x03D85574 LDP X20, X19, [X31 + 0x20]
	0x03D85578 LDP X22, X21, [X31 + 0x10]
	0x03D8557C ANDS W31, W0, 0x1
	0x03D85580 FMOV S1, W31
	0x03D85584 FCSEL S0, S0, S1, NE
	0x03D85588 LDR X30, [X31], #0x30
	0x03D8558C RET
	0x03D85590 STR D10, [X31 - 0x40]!
	0x03D85594 STP D9, D8, [X31 + 0x8]
	0x03D85598 STR X30, [X31 + 0x18]
	0x03D8559C STP X22, X21, [X31 + 0x20]
	0x03D855A0 STP X20, X19, [X31 + 0x30]
	0x03D855A4 ADRP X22, 0x662000
	0x03D855A8 LDRB W8, [X22 + 0xDE8]
	0x03D855AC MOV W21, W2
	0x03D855B0 MOV W20, W1
	0x03D855B4 MOV X19, X0
	0x03D855B8 TBNZ X8, 0x0, 0x3D85600
	0x03D855BC ADRP X0, 0x3E2000
	0x03D855C0 LDR X0, [X0 + 0x610]
	0x03D855C4 BL 0x1C16CF4
	0x03D855C8 ADRP X0, 0x3E2000
	0x03D855CC LDR X0, [X0 + 0x618]
	0x03D855D0 BL 0x1C16CF4
	0x03D855D4 ADRP X0, 0x3E2000
	0x03D855D8 LDR X0, [X0 + 0x538]
	0x03D855DC BL 0x1C16CF4
	0x03D855E0 ADRP X0, 0x3E2000
	0x03D855E4 LDR X0, [X0 + 0x528]
	0x03D855E8 BL 0x1C16CF4
	0x03D855EC ADRP X0, 0x3E2000
	0x03D855F0 LDR X0, [X0 + 0x5F8]
	0x03D855F4 BL 0x1C16CF4
	0x03D855F8 MOVZ W8, 0x1
	0x03D855FC STRB W8, [X22 + 0xDE8]
	0x03D85600 CBZ W20, 0x3D8562C
	0x03D85604 CMP W20, 0x6
	0x03D85608 B.EQ 0x3D85644
	0x03D8560C CMP W20, 0x1
	0x03D85610 B.NE 0x3D8565C
	0x03D85614 ADRP X8, 0x3E2000
	0x03D85618 LDR X8, [X8 + 0x528]
	0x03D8561C MOV X0, X19
	0x03D85620 LDR X1, [X8]
	0x03D85624 BL 0x28BF4FC
	0x03D85628 B 0x3D85768
	0x03D8562C LDP X20, X19, [X31 + 0x30]
	0x03D85630 LDP X22, X21, [X31 + 0x20]
	0x03D85634 LDR X30, [X31 + 0x18]
	0x03D85638 LDP D9, D8, [X31 + 0x8]
	0x03D8563C LDR V10, [X31], #0x40
	0x03D85640 RET
	0x03D85644 ADRP X8, 0x3E2000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move [X31+8], X1
	017 Move X23, 0x663000
	018 Move X22, 0x397000
	019 Move W8, [X23+3546]
	020 Move X22, [X22+2200]
	021 Move W20, W2
	022 Move V8, V1
	023 Move V9, V0
	024 Move X21, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {73}
	029 Move X0, 0x370000
	030 Move X0, [X0+3696]
	031 Call 0x1C17CF4
	032 Move X0, 0x399000
	033 Move X0, [X0+1640]
	034 Call 0x1C17CF4
	035 Move X0, 0x399000
	036 Move X0, [X0+1648]
	037 Call 0x1C17CF4
	038 Move X0, 0x3E3000
	039 Move X0, [X0+688]
	040 Call 0x1C17CF4
	041 Move X0, 0x3E3000
	042 Move X0, [X0+1368]
	043 Call 0x1C17CF4
	044 Move X0, 0x3E3000
	045 Move X0, [X0+1376]
	046 Call 0x1C17CF4
	047 Move X0, 0x3E3000
	048 Move X0, [X0+1384]
	049 Call 0x1C17CF4
	050 Move X0, 0x3E3000
	051 Move X0, [X0+1392]
	052 Call 0x1C17CF4
	053 Move X0, 0x3E3000
	054 Move X0, [X0+896]
	055 Call 0x1C17CF4
	056 Move X0, 0x397000
	057 Move X0, [X0+2200]
	058 Call 0x1C17CF4
	059 Move X0, 0x3DC000
	060 Move X0, [X0+608]
	061 Call 0x1C17CF4
	062 Move X0, 0x3E3000
	063 Move X0, [X0+1400]
	064 Call 0x1C17CF4
	065 Move X0, 0x3E3000
	066 Move X0, [X0+1408]
	067 Call 0x1C17CF4
	068 Move X0, 0x3E3000
	069 Move X0, [X0+1416]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X23+3546], W8
	073 Move X0, [X22]
	074 Move X24, 0x3E3000
	075 Move W8, [X0+224]
	076 Move X24, [X24+896]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X22, 0x3E3000
	081 Move X22, [X22+1368]
	082 Move X0, X21
	083 Move X1, X31
	084 Call VisualElement..ctor, X0
	085 Move X0, [X24]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {91}
	089 Call 0x1C17DFC
	090 Move X0, [X24]
	091 Move X8, [X0+184]
	092 Move X0, X21
	093 Move X2, X31
	094 Move X1, [X8]
	095 Call VisualElement.AddToClassList, X0, X1
	096 Move X0, [X22]
	097 Call 0x1C17F10
	098 Move S2, 20
	099 Move V0, V9
	100 Move V1, V8
	101 Move W1, W20
	102 Move X22, X0
	103 Call ScrollerSlider..ctor, X0, V0, V1, X1, V2
	104 Compare X22, 0
	105 JumpIfEqual {244}
	106 Move X8, 0x3E3000
	107 Move X8, [X8+1400]
	108 Move X23, 0x3DC000
	109 Move X27, 0x399000
	110 Move X28, 0x3E3000
	111 Move X29, 0x399000
	112 Move X23, [X23+608]
	113 Move X27, [X27+1640]
	114 Move X28, [X28+1376]
	115 Move X29, [X29+1648]
	116 Move X1, [X8]
	117 Move X26, 0x370000
	118 Move X19, 0x3E3000
	119 Move X25, 0x3E3000
	120 Move X26, [X26+3696]
	121 Move X19, [X19+1392]
	122 Move X25, [X25+688]
	123 Move X0, X22
	124 Move X2, X31
	125 Call VisualElement.set_name, X0, X1
	126 Move X1, [X23]
	127 Move X0, X22
	128 Move X2, X31
	129 Call VisualElement.set_viewDataKey, X0, X1
	130 Move [X21+976], X22
	131 Move X8, [X24]
	132 Move X0, X22
	133 Move X2, X31
	134 Move X8, [X8+184]
	135 Move X1, [X8+24]
	136 Call VisualElement.AddToClassList, X0, X1
	137 Move X0, [X27]
	138 Move X22, [X21+976]
	139 Call 0x1C17F10
	140 Move X2, [X28]
	141 Move X1, X21
	142 Move X3, X31
	143 Move X23, X0
	144 Call 0x2D0F824, X0, X1, X2
	145 Move X2, [X29]
	146 Move X0, X22
	147 Move X1, X23
	148 Call INotifyValueChangedExtensions.RegisterValueChangedCallback, X0, X1
	149 Move X0, [X26]
	150 Call 0x1C17F10
	151 Move X2, [X19]
	152 Move X1, X21
	153 Move X3, X31
	154 Move X23, X0
	155 Call Action..ctor, X0, X1, X2
	156 Move X0, [X25]
	157 Call 0x1C17F10
	158 Move W2, 250
	159 Move W3, 30
	160 Move X1, X23
	161 Move X4, X31
	162 Move X22, X0
	163 Call RepeatButton..ctor, X0, X1, X2, X3
	164 Compare X22, 0
	165 JumpIfEqual {244}
	166 Move X8, 0x3E3000
	167 Move X8, [X8+1416]
	168 Move X19, 0x3E3000
	169 Move X0, X22
	170 Move X2, X31
	171 Move X1, [X8]
	172 Move X19, [X19+1384]
	173 Call VisualElement.set_name, X0, X1
	174 Move [X21+984], X22
	175 Move X8, [X24]
	176 Move X0, X22
	177 Move X2, X31
	178 Move X8, [X8+184]
	179 Move X1, [X8+32]
	180 Call VisualElement.AddToClassList, X0, X1
	181 Move X1, [X21+984]
	182 Move X0, X21
	183 Move X2, X31
	184 Call VisualElement.Add, X0, X1
	185 Move X0, [X26]
	186 Call 0x1C17F10
	187 Move X2, [X19]
	188 Move X1, X21
	189 Move X3, X31
	190 Move X23, X0
	191 Call Action..ctor, X0, X1, X2
	192 Move X0, [X25]
	193 Call 0x1C17F10
	194 Move W2, 250
	195 Move W3, 30
	196 Move X1, X23
	197 Move X4, X31
	198 Move X22, X0
	199 Call RepeatButton..ctor, X0, X1, X2, X3
	200 Compare X22, 0
	201 JumpIfEqual {244}
	202 Move X8, 0x3E3000
	203 Move X8, [X8+1408]
	204 Move X0, X22
	205 Move X2, X31
	206 Move X1, [X8]
	207 Call VisualElement.set_name, X0, X1
	208 Move [X21+992], X22
	209 Move X8, [X24]
	210 Move X0, X22
	211 Move X2, X31
	212 Move X8, [X8+184]
	213 Move X1, [X8+40]
	214 Call VisualElement.AddToClassList, X0, X1
	215 Move X1, [X21+992]
	216 Move X0, X21
	217 Move X2, X31
	218 Call VisualElement.Add, X0, X1
	219 Move X1, [X21+976]
	220 Move X0, X21
	221 Move X2, X31
	222 Call VisualElement.Add, X0, X1
	223 Move X0, X21
	224 Move W1, W20
	225 Call Scroller.set_direction, X0, X1
	226 Move X8, [X31+8]
	227 Move X20, [X31+112]
	228 Move X19, [X31+120]
	229 Move X24, [X31+80]
	230 Move X23, [X31+88]
	231 Move X26, [X31+64]
	232 Move X25, [X31+72]
	233 Move [X21+968], X8
	234 Move X22, [X31+96]
	235 Move X21, [X31+104]
	236 Move X28, [X31+48]
	237 Move X27, [X31+56]
	238 Move X29, [X31+32]
	239 Move X30, [X31+40]
	240 Move D9, [X31+16]
	241 Move D8, [X31+24]
	242 Add X31, X31, 128
	243 Return 
	244 Call 0x1C17F20

Method: System.Void Adjust(System.Single factor)

Disassembly:
	0x03D856D8 B.NE 0x3D856F8
	0x03D856DC LDR X8, [X19]
	0x03D856E0 MOV X0, X19
	0x03D856E4 LDR X9, [X8 + 0x8E8]
	0x03D856E8 LDR X1, [X8 + 0x8F0]
	0x03D856EC BLR X9
	0x03D856F0 FMUL S9, S8, S0
	0x03D856F4 B 0x3D85708
	0x03D856F8 FMOV S0, 10
	0x03D856FC FMUL S0, S8, S0
	0x03D85700 ANDS W31, W21, 0x1
	0x03D85704 FCSEL S9, S0, S8, NE
	0x03D85708 LDR X8, [X19]
	0x03D8570C AND W9, W20, 0xFFFFFFFE
	0x03D85710 FNEG S0, S9
	0x03D85714 CMP W9, 0x2
	0x03D85718 LDR X10, [X8 + 0x7E8]
	0x03D8571C LDR X1, [X8 + 0x7F0]
	0x03D85720 MOV X0, X19
	0x03D85724 FCSEL S10, S0, S9, EQ
	0x03D85728 BLR X10
	0x03D8572C LDR X0, [X22]
	0x03D85730 MOV V8.16B, V0.16B
	0x03D85734 FABS S9, S9
	0x03D85738 LDR W8, [X0 + 0xE0]
	0x03D8573C CBNZ W8, 0x3D85744
	0x03D85740 BL 0x1C16DFC
	0x03D85744 ADRP X8, 0xFFFFFFFFFCD65000
	0x03D85748 LDR V0, [X8 + 0xB8]
	0x03D8574C ADRP X8, 0x3E2000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x663000
	006 Move W8, [X20+3547]
	007 Move V8, V0
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3E3000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3547], W8
	018 Move S0, 1
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Move X0, X19
	022 Move X2, X31
	023 Call VisualElement.SetEnabled, X0, X1
	024 Move X0, [X19+976]
	025 Compare X0, 0
	026 JumpIfEqual {37}
	027 Move X8, 0x3E3000
	028 Move X8, [X8+1432]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+8]
	032 Move V0, V8
	033 Move X1, [X8]
	034 Move V8, [X31+32]
	035 Call BaseSlider`1<Single>.AdjustDragElement, X0, V0
	036 Return 
	037 Call 0x1C17F20

Method: System.Void OnSliderValueChange(UnityEngine.UIElements.ChangeEvent`1<System.Single> evt)

Disassembly:
	0x03D85750 LDR X8, [X8 + 0x618]
	0x03D85754 MOV V1.16B, V9.16B
	0x03D85758 FMUL S0, S10, S0
	0x03D8575C FADD S0, S0, S8
	0x03D85760 LDR X0, [X8]
	0x03D85764 BL 0x28C01F0
	0x03D85768 LDR X8, [X19]
	0x03D8576C MOV X0, X19
	0x03D85770 LDP X20, X19, [X31 + 0x30]
	0x03D85774 LDP X22, X21, [X31 + 0x20]
	0x03D85778 LDR X2, [X8 + 0x7F8]
	0x03D8577C LDR X1, [X8 + 0x800]
	0x03D85780 LDR X30, [X31 + 0x18]
	0x03D85784 LDP D9, D8, [X31 + 0x8]
	0x03D85788 LDR V10, [X31], #0x40
	0x03D8578C BR X2
	0x03D85790 STP X30, X23, [X31 - 0x30]!
	0x03D85794 STP X22, X21, [X31 + 0x10]
	0x03D85798 STP X20, X19, [X31 + 0x20]
	0x03D8579C ADRP X23, 0x662000
	0x03D857A0 ADRP X22, 0x3E2000
	0x03D857A4 ADRP X19, 0x3E2000
	0x03D857A8 ADRP X21, 0x397000
	0x03D857AC ADRP X20, 0x397000
	0x03D857B0 LDRB W8, [X23 + 0xDE9]
	0x03D857B4 LDR X22, [X22 + 0x578]
	0x03D857B8 LDR X19, [X19 + 0x590]
	0x03D857BC LDR X21, [X21 + 0xEB8]
	0x03D857C0 LDR X20, [X20 + 0xEC0]
	0x03D857C4 TBNZ X8, 0x0, 0x3D85800
	0x03D857C8 ADRP X0, 0x3E2000
	0x03D857CC LDR X0, [X0 + 0x590]
	0x03D857D0 BL 0x1C16CF4
	0x03D857D4 ADRP X0, 0x397000
	0x03D857D8 LDR X0, [X0 + 0xEB8]
	0x03D857DC BL 0x1C16CF4
	0x03D857E0 ADRP X0, 0x3E2000
	0x03D857E4 LDR X0, [X0 + 0x578]
	0x03D857E8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x663000
	006 Move W8, [X21+3548]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3E3000
	014 Move X0, [X0+1440]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3548], W8
	018 Compare X20, 0
	019 JumpIfEqual {51}
	020 Move X0, [X19+976]
	021 Compare X0, 0
	022 JumpIfEqual {51}
	023 Move X8, [X0]
	024 Move V0, [X20+136]
	025 Move X9, [X8+2040]
	026 Move X1, [X8+2048]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X20, [X19+968]
	029 Compare X20, 0
	030 JumpIfEqual {42}
	031 Move X0, [X19+976]
	032 Compare X0, 0
	033 JumpIfEqual {51}
	034 Move X8, [X0]
	035 Move X9, [X8+2024]
	036 Move X1, [X8+2032]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X20+24]
	039 Move X0, [X20+64]
	040 Move X1, [X20+40]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X0, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W1, 2048
	046 Move X2, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call VisualElement.IncrementVersion, X0, X1
	050 Return 
	051 Call 0x1C17F20

Method: System.Void ScrollPageUp()

Disassembly:
	0x03D857EC ADRP X0, 0x397000
	0x03D857F0 LDR X0, [X0 + 0xEC0]

ISIL:
	001 Move S0, 1

Method: System.Void ScrollPageDown()

Disassembly:
	0x03D858E4 ADRP X0, 0x3E2000
	0x03D858E8 LDR X0, [X0 + 0x540]

ISIL:
	001 Move S0, 1

Method: System.Void ScrollPageUp(System.Single factor)

Disassembly:
	0x03D857F4 BL 0x1C16CF4
	0x03D857F8 MOVZ W8, 0x1
	0x03D857FC STRB W8, [X23 + 0xDE9]
	0x03D85800 LDR X8, [X19]
	0x03D85804 LDR X9, [X22]
	0x03D85808 MOV X2, X31
	0x03D8580C LDR X8, [X8 + 0xB8]
	0x03D85810 STR X9, [X8]
	0x03D85814 LDR X8, [X19]
	0x03D85818 LDR X1, [X21]
	0x03D8581C LDR X8, [X8 + 0xB8]
	0x03D85820 LDR X0, [X8]
	0x03D85824 BL 0x321B938
	0x03D85828 LDR X8, [X19]
	0x03D8582C MOV X2, X31
	0x03D85830 LDR X8, [X8 + 0xB8]
	0x03D85834 STR X0, [X8 + 0x8]
	0x03D85838 LDR X0, [X8]
	0x03D8583C LDR X1, [X20]
	0x03D85840 BL 0x321B938
	0x03D85844 LDR X8, [X19]
	0x03D85848 LDP X20, X19, [X31 + 0x20]
	0x03D8584C LDP X22, X21, [X31 + 0x10]
	0x03D85850 LDR X8, [X8 + 0xB8]
	0x03D85854 STR X0, [X8 + 0x10]
	0x03D85858 LDP X30, X23, [X31], #0x30
	0x03D8585C RET
	0x03D85860 STP X30, X21, [X31 - 0x20]!
	0x03D85864 STP X20, X19, [X31 + 0x10]
	0x03D85868 ADRP X20, 0x662000
	0x03D8586C ADRP X21, 0x3E2000
	0x03D85870 LDRB W8, [X20 + 0xDEA]
	0x03D85874 LDR X21, [X21 + 0x620]
	0x03D85878 MOV X19, X0
	0x03D8587C TBNZ X8, 0x0, 0x3D85894
	0x03D85880 ADRP X0, 0x3E2000
	0x03D85884 LDR X0, [X0 + 0x620]
	0x03D85888 BL 0x1C16CF4
	0x03D8588C MOVZ W8, 0x1
	0x03D85890 STRB W8, [X20 + 0xDEA]
	0x03D85894 LDR X1, [X21]
	0x03D85898 MOV X0, X19
	0x03D8589C LDP X20, X19, [X31 + 0x10]
	0x03D858A0 LDP X30, X21, [X31], #0x20
	0x03D858A4 B 0x2736468
	0x03D858A8 SUB X31, X31, 0x140
	0x03D858AC STP X29, X30, [X31 + 0x100]
	0x03D858B0 STP X24, X23, [X31 + 0x110]
	0x03D858B4 STP X22, X21, [X31 + 0x120]
	0x03D858B8 STP X20, X19, [X31 + 0x130]
	0x03D858BC ADRP X23, 0x662000
	0x03D858C0 LDRB W8, [X23 + 0xDEB]
	0x03D858C4 MOV X22, X3
	0x03D858C8 MOV X20, X2
	0x03D858CC MOV X19, X1
	0x03D858D0 MOV X21, X0
	0x03D858D4 TBNZ X8, 0x0, 0x3D85928
	0x03D858D8 ADRP X0, 0x3E2000
	0x03D858DC LDR X0, [X0 + 0x548]
	0x03D858E0 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x663000
	009 Move W8, [X20+3549]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x3E3000
	017 Move X0, [X0+1336]
	018 Call 0x1C17CF4
	019 Move X0, 0x3E3000
	020 Move X0, [X0+1320]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3549], W8
	024 Move X0, [X19+976]
	025 Compare X0, 0
	026 JumpIfEqual {74}
	027 Move X8, [X0]
	028 Move X9, [X8+2024]
	029 Move X1, [X8+2032]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, [X19+976]
	032 Compare X0, 0
	033 JumpIfEqual {74}
	034 Move X8, [X0]
	035 Move V9, V0
	036 Move X9, [X8+2280]
	037 Move X1, [X8+2288]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X0, [X19+976]
	040 Compare X0, 0
	041 JumpIfEqual {74}
	042 Move X8, 0x3E3000
	043 Move X8, [X8+1320]
	044 Move V10, V0
	045 Move X1, [X8]
	046 Call BaseSlider`1<Single>.get_lowValue, X0
	047 Move X0, [X19+976]
	048 Compare X0, 0
	049 JumpIfEqual {74}
	050 Move X8, 0x3E3000
	051 Move X8, [X8+1336]
	052 Move V11, V0
	053 Move X1, [X8]
	054 Call BaseSlider`1<Single>.get_highValue, X0
	055 Move X0, [X19+976]
	056 Compare X0, 0
	057 JumpIfEqual {74}
	058 Move X8, [X0]
	059 NotImplemented "Instruction FNEG not yet implemented."
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 Multiply S0, S0, S8
	063 Move X2, [X8+2040]
	064 Move X1, [X8+2048]
	065 Subtract S0, S9, S0
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X30, [X31+32]
	069 Move D9, [X31+16]
	070 Move D8, [X31+24]
	071 Move D11, [X31+64]
	072 Move D10, [X31+72]
	073 CallNoReturn X2
	074 Call 0x1C17F20

Method: System.Void ScrollPageDown(System.Single factor)

Disassembly:
	0x03D858EC BL 0x1C16CF4
	0x03D858F0 ADRP X0, 0x3E2000
	0x03D858F4 LDR X0, [X0 + 0x550]
	0x03D858F8 BL 0x1C16CF4
	0x03D858FC ADRP X0, 0x3E2000
	0x03D85900 LDR X0, [X0 + 0x530]
	0x03D85904 BL 0x1C16CF4
	0x03D85908 ADRP X0, 0x3E2000
	0x03D8590C LDR X0, [X0 + 0x590]
	0x03D85910 BL 0x1C16CF4
	0x03D85914 ADRP X0, 0x3E2000
	0x03D85918 LDR X0, [X0 + 0x628]
	0x03D8591C BL 0x1C16CF4
	0x03D85920 MOVZ W8, 0x1
	0x03D85924 STRB W8, [X23 + 0xDEB]
	0x03D85928 CBZ X19, 0x3D85960
	0x03D8592C ADRP X9, 0x3E2000
	0x03D85930 LDR X9, [X9 + 0x590]
	0x03D85934 LDR X8, [X19]
	0x03D85938 LDR X1, [X9]
	0x03D8593C LDRB W10, [X8 + 0x130]
	0x03D85940 LDRB W9, [X1 + 0x130]
	0x03D85944 CMP W10, W9
	0x03D85948 B.CC 0x3D85B54
	0x03D8594C LDR X8, [X8 + 0xC8]
	0x03D85950 ADD X8, X8, X9, 0x3, LSL
	0x03D85954 LDUR X8, [X8 - 0x8]
	0x03D85958 CMP X8, X1
	0x03D8595C B.NE 0x3D85B54
	0x03D85960 LDP V0, V1, [X22]
	0x03D85964 LDR X0, [X21 + 0x80]
	0x03D85968 STP V0, V1, [X31 + 0xC0]
	0x03D8596C CBZ X0, 0x3D85B50
	0x03D85970 LDR X8, [X0]
	0x03D85974 LDP V0, V1, [X31 + 0xC0]
	0x03D85978 ADD X2, X31, 0xE0
	0x03D8597C MOV X1, X20
	0x03D85980 LDR X9, [X8 + 0x178]
	0x03D85984 STP V0, V1, [X31 + 0xE0]
	0x03D85988 LDR X3, [X8 + 0x180]
	0x03D8598C BLR X9
	0x03D85990 CBZ X19, 0x3D85B50
	0x03D85994 ADRP X8, 0x3E2000
	0x03D85998 LDR X8, [X8 + 0x530]
	0x03D8599C MOV X0, X19
	0x03D859A0 LDR X1, [X8]
	0x03D859A4 BL 0x28BF504
	0x03D859A8 LDP V0, V1, [X22]
	0x03D859AC LDR X0, [X21 + 0x88]
	0x03D859B0 STP V0, V1, [X31 + 0xA0]
	0x03D859B4 CBZ X0, 0x3D85B50
	0x03D859B8 LDR X8, [X0]
	0x03D859BC LDP V0, V1, [X31 + 0xA0]
	0x03D859C0 ADRP X23, 0x3E2000
	0x03D859C4 ADD X2, X31, 0xE0
	0x03D859C8 LDR X9, [X8 + 0x178]
	0x03D859CC STP V0, V1, [X31 + 0xE0]
	0x03D859D0 LDR X3, [X8 + 0x180]
	0x03D859D4 LDR X23, [X23 + 0x540]
	0x03D859D8 MOV X1, X20

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x663000
	009 Move W8, [X20+3550]
	010 Move V8, V0
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x3E3000
	017 Move X0, [X0+1336]
	018 Call 0x1C17CF4
	019 Move X0, 0x3E3000
	020 Move X0, [X0+1320]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+3550], W8
	024 Move X0, [X19+976]
	025 Compare X0, 0
	026 JumpIfEqual {74}
	027 Move X8, [X0]
	028 Move X9, [X8+2024]
	029 Move X1, [X8+2032]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X0, [X19+976]
	032 Compare X0, 0
	033 JumpIfEqual {74}
	034 Move X8, [X0]
	035 Move V9, V0
	036 Move X9, [X8+2280]
	037 Move X1, [X8+2288]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X0, [X19+976]
	040 Compare X0, 0
	041 JumpIfEqual {74}
	042 Move X8, 0x3E3000
	043 Move X8, [X8+1320]
	044 Move V10, V0
	045 Move X1, [X8]
	046 Call BaseSlider`1<Single>.get_lowValue, X0
	047 Move X0, [X19+976]
	048 Compare X0, 0
	049 JumpIfEqual {74}
	050 Move X8, 0x3E3000
	051 Move X8, [X8+1336]
	052 Move V11, V0
	053 Move X1, [X8]
	054 Call BaseSlider`1<Single>.get_highValue, X0
	055 Move X0, [X19+976]
	056 Compare X0, 0
	057 JumpIfEqual {74}
	058 Move X8, [X0]
	059 NotImplemented "Instruction FNEG not yet implemented."
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 Multiply S0, S0, S8
	063 Move X2, [X8+2040]
	064 Move X1, [X8+2048]
	065 Add S0, S9, S0
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X30, [X31+32]
	069 Move D9, [X31+16]
	070 Move D8, [X31+24]
	071 Move D11, [X31+64]
	072 Move D10, [X31+72]
	073 CallNoReturn X2
	074 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D859DC BLR X9
	0x03D859E0 LDR X1, [X23]
	0x03D859E4 MOV X0, X19
	0x03D859E8 BL 0x28BF5AC
	0x03D859EC LDP V0, V1, [X22]
	0x03D859F0 LDR X0, [X21 + 0xA0]
	0x03D859F4 STP V0, V1, [X31 + 0x80]
	0x03D859F8 CBZ X0, 0x3D85B50
	0x03D859FC LDR X8, [X0]
	0x03D85A00 LDP V0, V1, [X31 + 0x80]
	0x03D85A04 ADRP X23, 0x3E2000
	0x03D85A08 ADD X2, X31, 0xE0
	0x03D85A0C LDR X9, [X8 + 0x178]
	0x03D85A10 STP V0, V1, [X31 + 0xE0]
	0x03D85A14 LDR X3, [X8 + 0x180]
	0x03D85A18 LDR X23, [X23 + 0x548]
	0x03D85A1C MOV X1, X20
	0x03D85A20 BLR X9
	0x03D85A24 LDR X2, [X23]
	0x03D85A28 MOV W1, W0
	0x03D85A2C MOV X0, X19
	0x03D85A30 BL 0x28BF900
	0x03D85A34 LDP V0, V1, [X22]
	0x03D85A38 LDR X0, [X21 + 0x90]
	0x03D85A3C STP V0, V1, [X31 + 0x60]
	0x03D85A40 CBZ X0, 0x3D85B50
	0x03D85A44 LDR X8, [X0]
	0x03D85A48 LDP V0, V1, [X31 + 0x60]
	0x03D85A4C ADD X2, X31, 0xE0
	0x03D85A50 MOV X1, X20
	0x03D85A54 LDR X9, [X8 + 0x178]
	0x03D85A58 STP V0, V1, [X31 + 0xE0]
	0x03D85A5C LDR X3, [X8 + 0x180]
	0x03D85A60 BLR X9
	0x03D85A64 LDR X8, [X19]
	0x03D85A68 MOV X0, X19
	0x03D85A6C LDR X9, [X8 + 0x8F8]
	0x03D85A70 LDR X1, [X8 + 0x900]
	0x03D85A74 BLR X9
	0x03D85A78 LDP V0, V1, [X22]
	0x03D85A7C LDR X0, [X21 + 0x98]
	0x03D85A80 STP V0, V1, [X31 + 0x40]
	0x03D85A84 CBZ X0, 0x3D85B50
	0x03D85A88 LDR X8, [X0]
	0x03D85A8C LDP V0, V1, [X31 + 0x40]
	0x03D85A90 ADD X2, X31, 0xE0
	0x03D85A94 MOV X1, X20
	0x03D85A98 LDR X9, [X8 + 0x178]
	0x03D85A9C STP V0, V1, [X31 + 0xE0]
	0x03D85AA0 LDR X3, [X8 + 0x180]
	0x03D85AA4 BLR X9
	0x03D85AA8 LDR X8, [X19]
	0x03D85AAC AND W1, W0, 0x1
	0x03D85AB0 MOV X0, X19
	0x03D85AB4 LDR X9, [X8 + 0x918]
	0x03D85AB8 LDR X2, [X8 + 0x920]
	0x03D85ABC BLR X9
	0x03D85AC0 LDP V0, V1, [X22]
	0x03D85AC4 LDR X0, [X21 + 0xA8]
	0x03D85AC8 STP V0, V1, [X31 + 0x20]
	0x03D85ACC CBZ X0, 0x3D85B50
	0x03D85AD0 LDR X8, [X0]
	0x03D85AD4 LDP V0, V1, [X31 + 0x20]
	0x03D85AD8 ADRP X23, 0x3E2000
	0x03D85ADC ADRP X24, 0x3E2000
	0x03D85AE0 LDR X9, [X8 + 0x178]
	0x03D85AE4 STP V0, V1, [X31 + 0xE0]
	0x03D85AE8 LDR X3, [X8 + 0x180]
	0x03D85AEC LDR X23, [X23 + 0x550]
	0x03D85AF0 LDR X24, [X24 + 0x628]
	0x03D85AF4 ADD X2, X31, 0xE0
	0x03D85AF8 MOV X1, X20
	0x03D85AFC BLR X9
	0x03D85B00 LDR X2, [X23]
	0x03D85B04 AND W1, W0, 0x1
	0x03D85B08 MOV X0, X19
	0x03D85B0C BL 0x28BF9DC
	0x03D85B10 LDP V1, V0, [X22]
	0x03D85B14 LDR X4, [X24]
	0x03D85B18 ADD X3, X31, 0xE0
	0x03D85B1C MOV X0, X21
	0x03D85B20 STP V1, V0, [X31]
	0x03D85B24 LDP V0, V1, [X31]
	0x03D85B28 MOV X1, X19
	0x03D85B2C MOV X2, X20
	0x03D85B30 STP V0, V1, [X31 + 0xE0]
	0x03D85B34 BL 0x273B21C
	0x03D85B38 LDP X20, X19, [X31 + 0x130]
	0x03D85B3C LDP X22, X21, [X31 + 0x120]
	0x03D85B40 LDP X24, X23, [X31 + 0x110]
	0x03D85B44 LDP X29, X30, [X31 + 0x100]
	0x03D85B48 ADD X31, X31, 0x140

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x663000
	011 Move X25, 0x3E3000
	012 Move X19, 0x3E3000
	013 Move X24, 0x399000
	014 Move X23, 0x399000
	015 Move X22, 0x3E3000
	016 Move X21, 0x3E3000
	017 Move X20, 0x3E3000
	018 Move X25, [X25+1448]
	019 Move X19, [X19+896]
	020 Move W8, [X26+3551]
	021 Move X24, [X24+1712]
	022 Move X23, [X23+1728]
	023 Move X22, [X22+1456]
	024 Move X21, [X21+1464]
	025 Move X20, [X20+1472]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0x3E3000
	031 Move X0, [X0+896]
	032 Call 0x1C17CF4
	033 Move X0, 0x399000
	034 Move X0, [X0+1712]
	035 Call 0x1C17CF4
	036 Move X0, 0x3E3000
	037 Move X0, [X0+1448]
	038 Call 0x1C17CF4
	039 Move X0, 0x399000
	040 Move X0, [X0+1728]
	041 Call 0x1C17CF4
	042 Move X0, 0x3E3000
	043 Move X0, [X0+1472]
	044 Call 0x1C17CF4
	045 Move X0, 0x3E3000
	046 Move X0, [X0+1456]
	047 Call 0x1C17CF4
	048 Move X0, 0x3E3000
	049 Move X0, [X0+1464]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X26+3551], W8
	053 Move X8, [X19]
	054 Move X9, [X25]
	055 Move X2, X31
	056 Move X8, [X8+184]
	057 Move [X8], X9
	058 Move X8, [X19]
	059 Move X1, [X24]
	060 Move X8, [X8+184]
	061 Move X0, [X8]
	062 Call String.Concat, X0, X1
	063 Move X8, [X19]
	064 Move X2, X31
	065 Move X8, [X8+184]
	066 Move [X8+8], X0
	067 Move X0, [X8]
	068 Move X1, [X23]
	069 Call String.Concat, X0, X1
	070 Move X8, [X19]
	071 Move X2, X31
	072 Move X8, [X8+184]
	073 Move [X8+16], X0
	074 Move X0, [X8]
	075 Move X1, [X22]
	076 Call String.Concat, X0, X1
	077 Move X8, [X19]
	078 Move X2, X31
	079 Move X8, [X8+184]
	080 Move [X8+24], X0
	081 Move X0, [X8]
	082 Move X1, [X21]
	083 Call String.Concat, X0, X1
	084 Move X8, [X19]
	085 Move X2, X31
	086 Move X8, [X8+184]
	087 Move [X8+32], X0
	088 Move X0, [X8]
	089 Move X1, [X20]
	090 Call String.Concat, X0, X1
	091 Move X8, [X19]
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X22, [X31+48]
	095 Move X21, [X31+56]
	096 Move X24, [X31+32]
	097 Move X23, [X31+40]
	098 Move X8, [X8+184]
	099 Move X26, [X31+16]
	100 Move X25, [X31+24]
	101 Move [X8+40], X0
	102 Move X30, [X31+80]
	103 Return 

