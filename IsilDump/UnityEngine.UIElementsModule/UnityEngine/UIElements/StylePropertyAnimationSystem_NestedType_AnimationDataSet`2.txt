Type: UnityEngine.UIElements.StylePropertyAnimationSystem/AnimationDataSet`2

Method: System.Int32 get_capacity()

Disassembly:
	0x02A7AD98 LDR W10, [X9 + 0x18]
	0x02A7AD9C CMP W10, W20
	0x02A7ADA0 B.LS 0x2A7AFA0
	0x02A7ADA4 SXTW X22, W20
	0x02A7ADA8 ADD X8, X8, X22, 0x3, LSL
	0x02A7ADAC ADD X9, X9, X22, 0x2, LSL
	0x02A7ADB0 LDR X1, [X8 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_capacity(System.Int32 value)

Disassembly:
	0x02A7ADB4 LDR W2, [X9 + 0x20]
	0x02A7ADB8 LDR X21, [X19 + 0x28]
	0x02A7ADBC ADD X0, X31, 0x0
	0x02A7ADC0 MOV X3, X31
	0x02A7ADC4 STP X31, X31, [X31]
	0x02A7ADC8 BL 0x3E02470
	0x02A7ADCC CBZ X21, 0x2A7AFA4
	0x02A7ADD0 ADRP X8, 0x16A4000
	0x02A7ADD4 LDR X8, [X8 + 0xA70]
	0x02A7ADD8 LDP X1, X2, [X31]
	0x02A7ADDC MOV X0, X21
	0x02A7ADE0 LDR X3, [X8]
	0x02A7ADE4 BL 0x2B350E4
	0x02A7ADE8 CMP W23, W20
	0x02A7ADEC B.EQ 0x2A7AF08
	0x02A7ADF0 LDR X25, [X19]
	0x02A7ADF4 CBZ X25, 0x2A7AFA4
	0x02A7ADF8 LDR W8, [X25 + 0x18]
	0x02A7ADFC CMP W23, W8
	0x02A7AE00 B.CS 0x2A7AFA0
	0x02A7AE04 SXTW X24, W23
	0x02A7AE08 ADD X9, X25, X24, 0x3, LSL
	0x02A7AE0C LDR X21, [X9 + 0x20]
	0x02A7AE10 CBZ X21, 0x2A7AE2C
	0x02A7AE14 LDR X8, [X25]
	0x02A7AE18 MOV X0, X21
	0x02A7AE1C LDR X1, [X8 + 0x40]
	0x02A7AE20 BL 0x1C16E00
	0x02A7AE24 CBZ X0, 0x2A7AFA8
	0x02A7AE28 LDR W8, [X25 + 0x18]
	0x02A7AE2C CMP W8, W20
	0x02A7AE30 B.LS 0x2A7AFA0
	0x02A7AE34 ADD X8, X25, X22, 0x3, LSL
	0x02A7AE38 STR X21, [X8 + 0x20]
	0x02A7AE3C LDR X8, [X19 + 0x8]
	0x02A7AE40 CBZ X8, 0x2A7AFA4
	0x02A7AE44 LDR W9, [X8 + 0x18]
	0x02A7AE48 CMP W23, W9
	0x02A7AE4C B.CS 0x2A7AFA0
	0x02A7AE50 CMP W9, W20
	0x02A7AE54 B.LS 0x2A7AFA0
	0x02A7AE58 ADD X9, X8, X24, 0x2, LSL
	0x02A7AE5C LDR W2, [X9 + 0x20]
	0x02A7AE60 ADD X8, X8, X22, 0x2, LSL
	0x02A7AE64 STR W2, [X8 + 0x20]
	0x02A7AE68 LDR X8, [X19 + 0x10]
	0x02A7AE6C CBZ X8, 0x2A7AFA4
	0x02A7AE70 LDR W9, [X8 + 0x18]
	0x02A7AE74 CMP W23, W9
	0x02A7AE78 B.CS 0x2A7AFA0
	0x02A7AE7C CMP W9, W20
	0x02A7AE80 B.LS 0x2A7AFA0
	0x02A7AE84 ADD X8, X8, 0x20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1962000
	009 Move X24, 0x16A5000
	010 Move X22, 0x16A5000
	011 Move W8, [X23+644]
	012 Move X24, [X24+2608]
	013 Move X22, [X22+2616]
	014 Move X21, X2
	015 Move W19, W1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x16A5000
	022 Move X0, [X0+2616]
	023 Call 0x1C17CF4
	024 Move X0, 0x16A5000
	025 Move X0, [X0+2608]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+644], W8
	029 Move X2, [X24]
	030 Move X0, X20
	031 Move W1, W19
	032 Call Array.Resize, X0, X1
	033 Move X2, [X22]
	034 Add X0, X20, 8
	035 Move W1, W19
	036 Call Array.Resize, X0, X1
	037 Move X0, [X21+32]
	038 Add X22, X20, 16
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X0+192]
	046 Move X0, X22
	047 Move W1, W19
	048 Move X2, [X8+16]
	049 Call 0x2112C70, X0, X1
	050 Move X0, [X21+32]
	051 Move W8, [X0+309]
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {57}
	056 Call 0x1C5D684
	057 Move X8, [X0+192]
	058 Add X0, X20, 24
	059 Move W1, W19
	060 Move X20, [X31+48]
	061 Move X19, [X31+56]
	062 Move X2, [X8+40]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 Call Array.Resize, X0, X1
	069 Return 

Method: System.Void LocalInit()

Disassembly:
	0x02A7AE88 LDRB W9, [X8, X24, LSL]
	0x02A7AE8C STRB W9, [X8, X22, LSL]
	0x02A7AE90 LDR X8, [X19 + 0x18]
	0x02A7AE94 CBZ X8, 0x2A7AFA4
	0x02A7AE98 LDR W9, [X8 + 0x18]
	0x02A7AE9C CMP W23, W9
	0x02A7AEA0 B.CS 0x2A7AFA0
	0x02A7AEA4 CMP W9, W20
	0x02A7AEA8 B.LS 0x2A7AFA0
	0x02A7AEAC MOVZ W9, 0xC
	0x02A7AEB0 ADD X8, X8, 0x20
	0x02A7AEB4 MADD X10, X24, X9, X8
	0x02A7AEB8 LDR X11, [X10]
	0x02A7AEBC LDR W10, [X10 + 0x8]
	0x02A7AEC0 NOP
	0x02A7AEC4 MADD X8, X22, X9, X8
	0x02A7AEC8 ADD X0, X31, 0x0
	0x02A7AECC STR X11, [X8]
	0x02A7AED0 STR W10, [X8 + 0x8]
	0x02A7AED4 LDR X22, [X19 + 0x28]
	0x02A7AED8 MOV X1, X21
	0x02A7AEDC MOV X3, X31
	0x02A7AEE0 STP X31, X31, [X31]
	0x02A7AEE4 BL 0x3E02470
	0x02A7AEE8 CBZ X22, 0x2A7AFA4
	0x02A7AEEC ADRP X8, 0x16A4000
	0x02A7AEF0 LDP X1, X2, [X31]
	0x02A7AEF4 LDR X8, [X8 + 0xA78]
	0x02A7AEF8 MOV X0, X22
	0x02A7AEFC MOV W3, W20
	0x02A7AF00 LDR X4, [X8]
	0x02A7AF04 BL 0x2B33CF0
	0x02A7AF08 LDR X9, [X19]
	0x02A7AF0C CBZ X9, 0x2A7AFA4
	0x02A7AF10 LDR W8, [X9 + 0x18]
	0x02A7AF14 CMP W23, W8
	0x02A7AF18 B.CS 0x2A7AFA0
	0x02A7AF1C MOV W8, W23
	0x02A7AF20 SXTW X8, W8
	0x02A7AF24 ADD X9, X9, X8, 0x3, LSL
	0x02A7AF28 STR X31, [X9 + 0x20]
	0x02A7AF2C LDR X9, [X19 + 0x8]
	0x02A7AF30 CBZ X9, 0x2A7AFA4
	0x02A7AF34 LDR W10, [X9 + 0x18]
	0x02A7AF38 CMP W23, W10
	0x02A7AF3C B.CS 0x2A7AFA0
	0x02A7AF40 ADD X9, X9, X8, 0x2, LSL
	0x02A7AF44 STR W31, [X9 + 0x20]
	0x02A7AF48 LDR X9, [X19 + 0x10]
	0x02A7AF4C CBZ X9, 0x2A7AFA4
	0x02A7AF50 LDR W10, [X9 + 0x18]
	0x02A7AF54 CMP W23, W10
	0x02A7AF58 B.CS 0x2A7AFA0
	0x02A7AF5C ADD X9, X9, X8
	0x02A7AF60 STRB W31, [X9 + 0x20]
	0x02A7AF64 LDR X9, [X19 + 0x18]
	0x02A7AF68 CBZ X9, 0x2A7AFA4
	0x02A7AF6C LDR W10, [X9 + 0x18]
	0x02A7AF70 CMP W23, W10
	0x02A7AF74 B.CS 0x2A7AFA0
	0x02A7AF78 LDP X20, X19, [X31 + 0x40]
	0x02A7AF7C LDP X22, X21, [X31 + 0x30]
	0x02A7AF80 LDP X24, X23, [X31 + 0x20]
	0x02A7AF84 LDP X30, X25, [X31 + 0x10]
	0x02A7AF88 MOVZ W10, 0xC
	0x02A7AF8C MADD X8, X8, X10, X9
	0x02A7AF90 STR X31, [X8 + 0x20]
	0x02A7AF94 STR W31, [X8 + 0x28]
	0x02A7AF98 ADD X31, X31, 0x50
	0x02A7AF9C RET
	0x02A7AFA0 BL 0x1C16F28
	0x02A7AFA4 BL 0x1C16F20
	0x02A7AFA8 BL 0x1C16F44
	0x02A7AFAC MOV X1, X31
	0x02A7AFB0 BL 0x1C16DEC
	0x02A7AFB4 STR X30, [X31 - 0x10]!
	0x02A7AFB8 LDR X9, [X0 + 0x10]
	0x02A7AFBC CBZ X9, 0x2A7B004
	0x02A7AFC0 LDR W8, [X9 + 0x18]
	0x02A7AFC4 CMP W8, W1
	0x02A7AFC8 B.LS 0x2A7B008
	0x02A7AFCC SXTW X8, W1
	0x02A7AFD0 ADD X9, X9, X8
	0x02A7AFD4 STRB W2, [X9 + 0x20]
	0x02A7AFD8 LDR X9, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1962000
	008 Move X23, 0x16A5000
	009 Move X21, 0x16A5000
	010 Move W8, [X22+645]
	011 Move X23, [X23+2624]
	012 Move X21, [X21+2632]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x16A5000
	020 Move X0, [X0+2640]
	021 Call 0x1C17CF4
	022 Move X0, 0x16A5000
	023 Move X0, [X0+2648]
	024 Call 0x1C17CF4
	025 Move X0, 0x16A4000
	026 Move X0, [X0+2120]
	027 Call 0x1C17CF4
	028 Move X0, 0x16A5000
	029 Move X0, [X0+2632]
	030 Call 0x1C17CF4
	031 Move X0, 0x16A5000
	032 Move X0, [X0+2624]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+645], W8
	036 Move X0, [X23]
	037 Move W1, 2
	038 Call 0x1C17D6C
	039 Move [X19], X0
	040 Move X0, [X21]
	041 Move W1, 2
	042 Call 0x1C17D6C
	043 Move [X19+8], X0
	044 Move X0, [X20+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {51}
	050 Call 0x1C5D684
	051 Move X8, [X0+192]
	052 Move X0, [X8+56]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move W1, 2
	060 Call 0x1C17D6C
	061 Move [X19+16], X0
	062 Move X0, [X20+32]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X8, [X0+192]
	070 Move X20, 0x16A4000
	071 Move X0, [X8+64]
	072 Move W8, [X0+309]
	073 Move X20, [X20+2120]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {79}
	078 Call 0x1C5D684
	079 Move X22, 0x16A5000
	080 Move X21, 0x16A5000
	081 Move X22, [X22+2648]
	082 Move X21, [X21+2640]
	083 Move W1, 2
	084 Call 0x1C17D6C
	085 Move [X19+24], X0
	086 Move X0, [X20]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X20]
	092 Move X8, [X0+184]
	093 Move X0, [X22]
	094 Move X20, [X8]
	095 Call 0x1C17F10
	096 Move X2, [X21]
	097 Move X1, X20
	098 Move X21, X0
	099 Call Dictionary`2<ElementPropertyPair, Int32>..ctor, X0, X1
	100 Move [X19+40], X21
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Move X23, [X31+56]
	107 Return 

Method: UnityEngine.UIElements.StylePropertyAnimationSystem/AnimationDataSet`2<TTimingData, TStyleData> Create()

Disassembly:
	0x02A7AFDC CBZ X9, 0x2A7B004
	0x02A7AFE0 LDR W10, [X9 + 0x18]
	0x02A7AFE4 CMP W10, W1
	0x02A7AFE8 B.LS 0x2A7B008
	0x02A7AFEC MOVZ W10, 0xC
	0x02A7AFF0 MADD X8, X8, X10, X9
	0x02A7AFF4 STR X3, [X8 + 0x20]
	0x02A7AFF8 STR W4, [X8 + 0x28]
	0x02A7AFFC LDR X30, [X31], #0x10
	0x02A7B000 RET
	0x02A7B004 BL 0x1C16F20
	0x02A7B008 BL 0x1C16F28
	0x02A7B00C STR X30, [X31 - 0x30]!
	0x02A7B010 STP X22, X21, [X31 + 0x10]
	0x02A7B014 STP X20, X19, [X31 + 0x20]
	0x02A7B018 LDR W8, [X0 + 0x20]
	0x02A7B01C SUBS W21, W8, 0x1
	0x02A7B020 B.MI 0x2A7B078
	0x02A7B024 MOV X19, X2
	0x02A7B028 MOV X20, X0
	0x02A7B02C MOV X22, X1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Move [X31+16], V0
	006 Move [X31+24], V0
	007 Move [X31], V0
	008 Move X0, [X0+32]
	009 Move X19, X8
	010 Move W9, [X0+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {16}
	015 Call 0x1C5D684
	016 Move X8, [X0+192]
	017 Add X0, X31, 0
	018 Move X1, [X8+72]
	019 Call 0x2A7AE88, X0
	020 Move V1, [X31+16]
	021 Move V0, [X31+32]
	022 Move V2, [X31]
	023 Move [X19+16], V1
	024 Move [X19+24], V0
	025 Move [X19], V2
	026 Move X30, [X31+48]
	027 Move X19, [X31+56]
	028 Add X31, X31, 64
	029 Return X0

Method: System.Boolean IndexOf(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, out System.Int32 index)

Disassembly:
	0x02A7B030 LDR X8, [X20]
	0x02A7B034 CBZ X8, 0x2A7B088
	0x02A7B038 LDR W9, [X8 + 0x18]
	0x02A7B03C CMP W21, W9
	0x02A7B040 B.CS 0x2A7B08C
	0x02A7B044 ADD X8, X8, W21, 0x3, UXTW
	0x02A7B048 LDR X8, [X8 + 0x20]
	0x02A7B04C CMP X8, X22
	0x02A7B050 B.NE 0x2A7B070
	0x02A7B054 LDR X0, [X19 + 0x20]
	0x02A7B058 LDRB W8, [X0 + 0x135]
	0x02A7B05C TBNZ X8, 0x0, 0x2A7B064
	0x02A7B060 BL 0x1C5C684
	0x02A7B064 MOV X0, X20
	0x02A7B068 MOV W1, W21
	0x02A7B06C BL 0x2A7AD28
	0x02A7B070 SUBS W21, W21, 0x1
	0x02A7B074 B.PL 0x2A7B030
	0x02A7B078 LDP X20, X19, [X31 + 0x20]
	0x02A7B07C LDP X22, X21, [X31 + 0x10]
	0x02A7B080 LDR X30, [X31], #0x30
	0x02A7B084 RET
	0x02A7B088 BL 0x1C16F20
	0x02A7B08C BL 0x1C16F28
	0x02A7B090 STP X30, X21, [X31 - 0x20]!
	0x02A7B094 STP X20, X19, [X31 + 0x10]
	0x02A7B098 ADRP X21, 0x1960000
	0x02A7B09C LDRB W8, [X21 + 0x290]
	0x02A7B0A0 MOV X20, X1
	0x02A7B0A4 MOV X19, X0
	0x02A7B0A8 TBNZ X8, 0x0, 0x2A7B0C0
	0x02A7B0AC ADRP X0, 0x16A3000
	0x02A7B0B0 LDR X0, [X0 + 0xA80]
	0x02A7B0B4 BL 0x1C16CF4
	0x02A7B0B8 MOVZ W8, 0x1
	0x02A7B0BC STRB W8, [X21 + 0x290]
	0x02A7B0C0 LDR X0, [X20 + 0x20]
	0x02A7B0C4 LDRB W8, [X0 + 0x135]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x1961000
	009 Move W8, [X23+646]
	010 Move X19, X3
	011 Move W20, W2
	012 Move X21, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x16A4000
	019 Move X0, [X0+2656]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+646], W8
	023 Move X22, [X22+40]
	024 Add X0, X31, 0
	025 Move X1, X21
	026 Move W2, W20
	027 Move X3, X31
	028 Move [X31], X31
	029 Move [X31+8], X31
	030 Call ElementPropertyPair..ctor, X0, X1, X2
	031 Compare X22, 0
	032 JumpIfEqual {50}
	033 Move X8, 0x16A4000
	034 Move X8, [X8+2656]
	035 Move X1, [X31]
	036 Move X2, [X31+8]
	037 Move X0, X22
	038 Move X3, X19
	039 Move X4, [X8]
	040 Call Dictionary`2<ElementPropertyPair, Int32>.TryGetValue, X0, X1, X2
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X30, [X31+16]
	046 Move X23, [X31+24]
	047 And W0, W0, 1
	048 Add X31, X31, 64
	049 Return X0
	050 Call 0x1C17F20

Method: System.Void Add(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, TTimingData timingData, TStyleData styleData)

Disassembly:
	0x02A7B0C8 TBNZ X8, 0x0, 0x2A7B0D0
	0x02A7B0CC BL 0x1C5C684
	0x02A7B0D0 LDR X8, [X0 + 0xC0]
	0x02A7B0D4 MOVZ W1, 0x2
	0x02A7B0D8 MOV X0, X19
	0x02A7B0DC LDR X2, [X8 + 0x60]
	0x02A7B0E0 BL 0x2A7A838
	0x02A7B0E4 LDR X0, [X20 + 0x20]
	0x02A7B0E8 LDR W20, [X19 + 0x20]
	0x02A7B0EC LDRB W8, [X0 + 0x135]
	0x02A7B0F0 TBNZ X8, 0x0, 0x2A7B0F8
	0x02A7B0F4 BL 0x1C5C684
	0x02A7B0F8 LDR X0, [X19]
	0x02A7B0FC CBZ X0, 0x2A7B17C
	0x02A7B100 LDR W8, [X0 + 0x18]
	0x02A7B104 MOV W1, W31
	0x02A7B108 MOV X3, X31
	0x02A7B10C CMP W20, W8
	0x02A7B110 CSEL W20, W20, W8, LT
	0x02A7B114 MOV W2, W20
	0x02A7B118 BL 0x339FA34
	0x02A7B11C LDR X0, [X19 + 0x8]
	0x02A7B120 MOV W1, W31
	0x02A7B124 MOV W2, W20
	0x02A7B128 MOV X3, X31
	0x02A7B12C BL 0x339FA34
	0x02A7B130 LDR X0, [X19 + 0x10]
	0x02A7B134 MOV W1, W31
	0x02A7B138 MOV W2, W20
	0x02A7B13C MOV X3, X31
	0x02A7B140 BL 0x339FA34
	0x02A7B144 LDR X0, [X19 + 0x18]
	0x02A7B148 MOV W1, W31
	0x02A7B14C MOV W2, W20
	0x02A7B150 MOV X3, X31
	0x02A7B154 BL 0x339FA34
	0x02A7B158 LDR X0, [X19 + 0x28]
	0x02A7B15C STR W31, [X19 + 0x20]
	0x02A7B160 CBZ X0, 0x2A7B17C
	0x02A7B164 ADRP X8, 0x16A3000
	0x02A7B168 LDR X8, [X8 + 0xA80]
	0x02A7B16C LDP X20, X19, [X31 + 0x10]
	0x02A7B170 LDR X1, [X8]
	0x02A7B174 LDP X30, X21, [X31], #0x20
	0x02A7B178 B 0x2B33EA4
	0x02A7B17C BL 0x1C16F20
	0x02A7B180 STP X30, X23, [X31 - 0x30]!
	0x02A7B184 STP X22, X21, [X31 + 0x10]
	0x02A7B188 STP X20, X19, [X31 + 0x20]
	0x02A7B18C ADRP X22, 0x1960000
	0x02A7B190 LDRB W8, [X22 + 0x291]
	0x02A7B194 MOV X19, X2
	0x02A7B198 MOV X20, X1
	0x02A7B19C MOV X21, X0
	0x02A7B1A0 TBNZ X8, 0x0, 0x2A7B1B8
	0x02A7B1A4 ADRP X0, 0x16A3000
	0x02A7B1A8 LDR X0, [X0 + 0xA88]
	0x02A7B1AC BL 0x1C16CF4
	0x02A7B1B0 MOVZ W8, 0x1
	0x02A7B1B4 STRB W8, [X22 + 0x291]
	0x02A7B1B8 LDR W8, [X21 + 0x20]
	0x02A7B1BC SUBS W22, W8, 0x1
	0x02A7B1C0 B.MI 0x2A7B26C
	0x02A7B1C4 ADRP X23, 0x16A3000
	0x02A7B1C8 LDR X23, [X23 + 0xA88]
	0x02A7B1CC LDR X9, [X21]
	0x02A7B1D0 CBZ X9, 0x2A7B27C
	0x02A7B1D4 LDR W8, [X9 + 0x18]
	0x02A7B1D8 CMP W22, W8
	0x02A7B1DC B.CS 0x2A7B280
	0x02A7B1E0 MOV W8, W22
	0x02A7B1E4 ADD X9, X9, X8, 0x3, LSL
	0x02A7B1E8 LDR X9, [X9 + 0x20]
	0x02A7B1EC CMP X9, X20
	0x02A7B1F0 B.NE 0x2A7B264
	0x02A7B1F4 LDR X9, [X21 + 0x8]
	0x02A7B1F8 CBZ X9, 0x2A7B27C
	0x02A7B1FC LDR W10, [X9 + 0x18]
	0x02A7B200 CMP W22, W10
	0x02A7B204 B.CS 0x2A7B280
	0x02A7B208 CBZ X19, 0x2A7B27C
	0x02A7B20C ADD X8, X9, X8, 0x2, LSL
	0x02A7B210 LDR W10, [X19 + 0x1C]
	0x02A7B214 LDR W1, [X8 + 0x20]
	0x02A7B218 LDR X8, [X19 + 0x10]
	0x02A7B21C LDR X9, [X23]
	0x02A7B220 ADD W10, W10, 0x1
	0x02A7B224 STR W10, [X19 + 0x1C]
	0x02A7B228 CBZ X8, 0x2A7B27C
	0x02A7B22C LDRSW X10, [X19 + 0x18]
	0x02A7B230 LDR W11, [X8 + 0x18]
	0x02A7B234 CMP W10, W11
	0x02A7B238 B.CS 0x2A7B250
	0x02A7B23C ADD W9, W10, 0x1
	0x02A7B240 ADD X8, X8, X10, 0x2, LSL
	0x02A7B244 STR W9, [X19 + 0x18]
	0x02A7B248 STR W1, [X8 + 0x20]
	0x02A7B24C B 0x2A7B264
	0x02A7B250 LDR X8, [X9 + 0x20]
	0x02A7B254 MOV X0, X19
	0x02A7B258 LDR X8, [X8 + 0xC0]
	0x02A7B25C LDR X2, [X8 + 0x70]
	0x02A7B260 BL 0x2FDF178
	0x02A7B264 SUBS W22, W22, 0x1
	0x02A7B268 B.PL 0x2A7B1CC
	0x02A7B26C LDP X20, X19, [X31 + 0x20]
	0x02A7B270 LDP X22, X21, [X31 + 0x10]
	0x02A7B274 LDP X30, X23, [X31], #0x30
	0x02A7B278 RET
	0x02A7B27C BL 0x1C16F20
	0x02A7B280 BL 0x1C16F28
	0x02A7B284 STR X30, [X31 - 0x10]!
	0x02A7B288 LDR X8, [X0]
	0x02A7B28C CBZ X8, 0x2A7B29C
	0x02A7B290 LDR W0, [X8 + 0x18]
	0x02A7B294 LDR X30, [X31], #0x10
	0x02A7B298 RET
	0x02A7B29C BL 0x1C16F20
	0x02A7B2A0 STR X30, [X31 - 0x40]!
	0x02A7B2A4 STP X24, X23, [X31 + 0x10]
	0x02A7B2A8 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X25, 0x1961000
	012 Move W8, [X25+647]
	013 Move X24, X5
	014 Move X22, X4
	015 Move X23, X3
	016 Move W19, W2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x16A4000
	024 Move X0, [X0+2664]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X25+647], W8
	028 Move X0, [X24+32]
	029 Move W26, [X21+32]
	030 Move W8, [X0+309]
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {36}
	035 Call 0x1C5D684
	036 Move X25, [X21]
	037 Compare X25, 0
	038 JumpIfEqual {150}
	039 Move W8, [X25+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W24, [X21+32]
	042 Add W8, W24, 1
	043 Move [X21+32], W8
	044 Move X0, [X24+32]
	045 Move W8, [X0+309]
	046 Move TEMP, X8
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {54}
	050 Call 0x1C5D684
	051 Move X25, [X21]
	052 Compare X25, 0
	053 JumpIfEqual {150}
	054 Move X0, [X24+32]
	055 Move W8, [X25+24]
	056 Move W9, [X0+309]
	057 Move W24, W8
	058 ShiftRight W24, 31
	059 And W24, W24, 0x3FFFFFFF
	060 Move TEMP, X9
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {65}
	064 Call 0x1C5D684
	065 Move X8, [X0+192]
	066 Move X0, X21
	067 Move W1, W24
	068 Move X2, [X8+96]
	069 Call 0x2A7ADB4, X0, X1
	070 Move W24, [X21+32]
	071 Move X25, [X21]
	072 Add W8, W24, 1
	073 Move [X21+32], W8
	074 Compare X25, 0
	075 JumpIfEqual {150}
	076 Compare X20, 0
	077 JumpIfEqual {84}
	078 Move X8, [X25]
	079 Move X0, X20
	080 Move X1, [X8+64]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {152}
	084 Move W8, [X25+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, W24
	087 Add X9, X25, X8
	088 Move [X9+32], X20
	089 Move X9, [X21+8]
	090 Compare X9, 0
	091 JumpIfEqual {150}
	092 Move W10, [X9+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add X9, X9, X8
	095 Move [X9+32], W19
	096 Move X9, [X21+16]
	097 Compare X9, 0
	098 JumpIfEqual {150}
	099 Move W10, [X9+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X9, X9, X8
	102 Move [X9+32], W23
	103 Move V0, [X22]
	104 Move V1, [X22+16]
	105 Move X9, [X21+24]
	106 Move [X31+48], V0
	107 Move [X31+56], V1
	108 Compare X9, 0
	109 JumpIfEqual {150}
	110 Move V0, [X31+48]
	111 Move V1, [X31+64]
	112 Move [X31+16], V0
	113 Move [X31+24], V1
	114 Move W10, [X9+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move V1, [X31+16]
	117 Move V0, [X31+32]
	118 Add X8, X9, X8
	119 Add X0, X31, 0
	120 Move X1, X20
	121 Move [X8+32], V1
	122 Move [X8+40], V0
	123 Move X21, [X21+40]
	124 Move W2, W19
	125 Move X3, X31
	126 Move [X31], X31
	127 Move [X31+8], X31
	128 Call ElementPropertyPair..ctor, X0, X1, X2
	129 Compare X21, 0
	130 JumpIfEqual {150}
	131 Move X8, 0x16A4000
	132 Move X8, [X8+2664]
	133 Move X1, [X31]
	134 Move X2, [X31+8]
	135 Move X0, X21
	136 Move W3, W24
	137 Move X4, [X8]
	138 Call Dictionary`2<ElementPropertyPair, Int32>.Add, X0, X1, X2
	139 Move X20, [X31+144]
	140 Move X19, [X31+152]
	141 Move X22, [X31+128]
	142 Move X21, [X31+136]
	143 Move X24, [X31+112]
	144 Move X23, [X31+120]
	145 Move X26, [X31+96]
	146 Move X25, [X31+104]
	147 Move X30, [X31+80]
	148 Add X31, X31, 160
	149 Return 
	150 Call 0x1C17F20
	151 Call 0x1C17F28
	152 Call 0x1C17F44
	153 Move X1, X31
	154 Call 0x1C17DEC

Method: System.Void Remove(System.Int32 cancelledIndex)

Disassembly:
	0x02A7B2AC STP X20, X19, [X31 + 0x30]
	0x02A7B2B0 ADRP X23, 0x1960000
	0x02A7B2B4 ADRP X24, 0x16A3000
	0x02A7B2B8 ADRP X22, 0x16A3000
	0x02A7B2BC LDRB W8, [X23 + 0x292]
	0x02A7B2C0 LDR X24, [X24 + 0xA30]
	0x02A7B2C4 LDR X22, [X22 + 0xA38]
	0x02A7B2C8 MOV X21, X2
	0x02A7B2CC MOV W19, W1
	0x02A7B2D0 MOV X20, X0
	0x02A7B2D4 TBNZ X8, 0x0, 0x2A7B2F8
	0x02A7B2D8 ADRP X0, 0x16A3000
	0x02A7B2DC LDR X0, [X0 + 0xA38]
	0x02A7B2E0 BL 0x1C16CF4
	0x02A7B2E4 ADRP X0, 0x16A3000
	0x02A7B2E8 LDR X0, [X0 + 0xA30]
	0x02A7B2EC BL 0x1C16CF4
	0x02A7B2F0 MOVZ W8, 0x1
	0x02A7B2F4 STRB W8, [X23 + 0x292]
	0x02A7B2F8 LDR X2, [X24]
	0x02A7B2FC MOV X0, X20
	0x02A7B300 MOV W1, W19
	0x02A7B304 BL 0x2142E6C
	0x02A7B308 LDR X2, [X22]
	0x02A7B30C ADD X0, X20, 0x8
	0x02A7B310 MOV W1, W19
	0x02A7B314 BL 0x21163A0
	0x02A7B318 LDR X0, [X21 + 0x20]
	0x02A7B31C ADD X22, X20, 0x10
	0x02A7B320 LDRB W8, [X0 + 0x135]
	0x02A7B324 TBNZ X8, 0x0, 0x2A7B32C
	0x02A7B328 BL 0x1C5C684
	0x02A7B32C LDR X8, [X0 + 0xC0]
	0x02A7B330 MOV X0, X22
	0x02A7B334 MOV W1, W19
	0x02A7B338 LDR X2, [X8 + 0x10]
	0x02A7B33C BL 0x2111E88
	0x02A7B340 LDR X0, [X21 + 0x20]
	0x02A7B344 LDRB W8, [X0 + 0x135]
	0x02A7B348 TBNZ X8, 0x0, 0x2A7B350
	0x02A7B34C BL 0x1C5C684
	0x02A7B350 LDR X8, [X0 + 0xC0]
	0x02A7B354 ADD X0, X20, 0x18
	0x02A7B358 MOV W1, W19
	0x02A7B35C LDP X20, X19, [X31 + 0x30]
	0x02A7B360 LDR X2, [X8 + 0x28]
	0x02A7B364 LDP X22, X21, [X31 + 0x20]
	0x02A7B368 LDP X24, X23, [X31 + 0x10]
	0x02A7B36C LDR X30, [X31], #0x40
	0x02A7B370 B 0x21152E0
	0x02A7B374 STP X30, X23, [X31 - 0x30]!
	0x02A7B378 STP X22, X21, [X31 + 0x10]
	0x02A7B37C STP X20, X19, [X31 + 0x20]
	0x02A7B380 ADRP X22, 0x1960000
	0x02A7B384 ADRP X23, 0x16A3000
	0x02A7B388 ADRP X21, 0x16A3000
	0x02A7B38C LDRB W8, [X22 + 0x293]
	0x02A7B390 LDR X23, [X23 + 0xA40]
	0x02A7B394 LDR X21, [X21 + 0xA48]
	0x02A7B398 MOV X20, X1
	0x02A7B39C MOV X19, X0
	0x02A7B3A0 TBNZ X8, 0x0, 0x2A7B3E8
	0x02A7B3A4 ADRP X0, 0x16A3000
	0x02A7B3A8 LDR X0, [X0 + 0xA50]
	0x02A7B3AC BL 0x1C16CF4
	0x02A7B3B0 ADRP X0, 0x16A3000
	0x02A7B3B4 LDR X0, [X0 + 0xA58]
	0x02A7B3B8 BL 0x1C16CF4
	0x02A7B3BC ADRP X0, 0x16A2000
	0x02A7B3C0 LDR X0, [X0 + 0x848]
	0x02A7B3C4 BL 0x1C16CF4
	0x02A7B3C8 ADRP X0, 0x16A3000
	0x02A7B3CC LDR X0, [X0 + 0xA48]
	0x02A7B3D0 BL 0x1C16CF4
	0x02A7B3D4 ADRP X0, 0x16A3000
	0x02A7B3D8 LDR X0, [X0 + 0xA40]
	0x02A7B3DC BL 0x1C16CF4
	0x02A7B3E0 MOVZ W8, 0x1
	0x02A7B3E4 STRB W8, [X22 + 0x293]
	0x02A7B3E8 LDR X0, [X23]
	0x02A7B3EC MOVZ W1, 0x2
	0x02A7B3F0 BL 0x1C16D6C
	0x02A7B3F4 STR X0, [X19]
	0x02A7B3F8 LDR X0, [X21]
	0x02A7B3FC MOVZ W1, 0x2
	0x02A7B400 BL 0x1C16D6C
	0x02A7B404 STR X0, [X19 + 0x8]
	0x02A7B408 LDR X0, [X20 + 0x20]
	0x02A7B40C LDRB W8, [X0 + 0x135]
	0x02A7B410 TBNZ X8, 0x0, 0x2A7B418
	0x02A7B414 BL 0x1C5C684
	0x02A7B418 LDR X8, [X0 + 0xC0]
	0x02A7B41C LDR X0, [X8 + 0x38]
	0x02A7B420 LDRB W8, [X0 + 0x135]
	0x02A7B424 TBNZ X8, 0x0, 0x2A7B42C
	0x02A7B428 BL 0x1C5C684
	0x02A7B42C MOVZ W1, 0x2
	0x02A7B430 BL 0x1C16D6C
	0x02A7B434 STR X0, [X19 + 0x10]
	0x02A7B438 LDR X0, [X20 + 0x20]
	0x02A7B43C LDRB W8, [X0 + 0x135]
	0x02A7B440 TBNZ X8, 0x0, 0x2A7B448
	0x02A7B444 BL 0x1C5C684
	0x02A7B448 LDR X8, [X0 + 0xC0]
	0x02A7B44C ADRP X20, 0x16A2000
	0x02A7B450 LDR X0, [X8 + 0x40]
	0x02A7B454 LDRB W8, [X0 + 0x135]
	0x02A7B458 LDR X20, [X20 + 0x848]
	0x02A7B45C TBNZ X8, 0x0, 0x2A7B464
	0x02A7B460 BL 0x1C5C684
	0x02A7B464 ADRP X22, 0x16A3000
	0x02A7B468 ADRP X21, 0x16A3000
	0x02A7B46C LDR X22, [X22 + 0xA58]
	0x02A7B470 LDR X21, [X21 + 0xA50]
	0x02A7B474 MOVZ W1, 0x2
	0x02A7B478 BL 0x1C16D6C
	0x02A7B47C STR X0, [X19 + 0x18]
	0x02A7B480 LDR X0, [X20]
	0x02A7B484 LDR W8, [X0 + 0xE0]
	0x02A7B488 CBNZ W8, 0x2A7B494
	0x02A7B48C BL 0x1C16DFC
	0x02A7B490 LDR X0, [X20]
	0x02A7B494 LDR X8, [X0 + 0xB8]
	0x02A7B498 LDR X0, [X22]
	0x02A7B49C LDR X20, [X8]
	0x02A7B4A0 BL 0x1C16F10
	0x02A7B4A4 LDR X2, [X21]
	0x02A7B4A8 MOV X1, X20
	0x02A7B4AC MOV X21, X0
	0x02A7B4B0 BL 0x2B33468
	0x02A7B4B4 STR X21, [X19 + 0x28]
	0x02A7B4B8 LDP X20, X19, [X31 + 0x20]
	0x02A7B4BC LDP X22, X21, [X31 + 0x10]
	0x02A7B4C0 LDP X30, X23, [X31], #0x30
	0x02A7B4C4 RET
	0x02A7B4C8 SUB X31, X31, 0x40
	0x02A7B4CC STP X30, X19, [X31 + 0x30]
	0x02A7B4D0 MOVI V0.2D, 0x0
	0x02A7B4D4 STP V0, V0, [X31 + 0x10]
	0x02A7B4D8 STR V0, [X31]
	0x02A7B4DC LDR X0, [X0 + 0x20]
	0x02A7B4E0 MOV X19, X8
	0x02A7B4E4 LDRB W9, [X0 + 0x135]
	0x02A7B4E8 TBNZ X9, 0x0, 0x2A7B4F0
	0x02A7B4EC BL 0x1C5C684
	0x02A7B4F0 LDR X8, [X0 + 0xC0]
	0x02A7B4F4 ADD X0, X31, 0x0
	0x02A7B4F8 LDR X1, [X8 + 0x48]
	0x02A7B4FC BL 0x2A7B374
	0x02A7B500 LDP V1, V0, [X31 + 0x10]
	0x02A7B504 LDR V2, [X31]
	0x02A7B508 STP V1, V0, [X19 + 0x10]
	0x02A7B50C STR V2, [X19]
	0x02A7B510 LDP X30, X19, [X31 + 0x30]
	0x02A7B514 ADD X31, X31, 0x40
	0x02A7B518 RET
	0x02A7B51C SUB X31, X31, 0x40
	0x02A7B520 STP X30, X23, [X31 + 0x10]
	0x02A7B524 STP X22, X21, [X31 + 0x20]
	0x02A7B528 STP X20, X19, [X31 + 0x30]
	0x02A7B52C ADRP X23, 0x1960000
	0x02A7B530 LDRB W8, [X23 + 0x294]
	0x02A7B534 MOV X19, X3

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+104], X25
	004 Move [X31+112], X24
	005 Move [X31+120], X23
	006 Move [X31+128], X22
	007 Move [X31+136], X21
	008 Move [X31+144], X20
	009 Move [X31+152], X19
	010 Move X21, 0x1961000
	011 Move W8, [X21+648]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x16A4000
	019 Move X0, [X0+2672]
	020 Call 0x1C17CF4
	021 Move X0, 0x16A4000
	022 Move X0, [X0+2680]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+648], W8
	026 Move W9, [X19+32]
	027 Move X8, [X19]
	028 Subtract W23, W9, 1
	029 Move [X19+32], W23
	030 Compare X8, 0
	031 JumpIfEqual {183}
	032 Move W9, [X8+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X19+8]
	035 Compare X9, 0
	036 JumpIfEqual {183}
	037 Move W10, [X9+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X22, W20
	040 Add X8, X8, X22
	041 Add X9, X9, X22
	042 Move X1, [X8+32]
	043 Move W2, [X9+32]
	044 Move X21, [X19+40]
	045 Add X0, X31, 32
	046 Move X3, X31
	047 Move [X31+32], X31
	048 Move [X31+40], X31
	049 Call ElementPropertyPair..ctor, X0, X1, X2
	050 Compare X21, 0
	051 JumpIfEqual {183}
	052 Move X8, 0x16A4000
	053 Move X8, [X8+2672]
	054 Move X1, [X31+32]
	055 Move X2, [X31+40]
	056 Move X0, X21
	057 Move X3, [X8]
	058 Call Dictionary`2<ElementPropertyPair, Int32>.Remove, X0, X1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X25, [X19]
	061 Compare X25, 0
	062 JumpIfEqual {183}
	063 Move W8, [X25+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X24, W23
	066 Add X9, X25, X24
	067 Move X21, [X9+32]
	068 Compare X21, 0
	069 JumpIfEqual {77}
	070 Move X8, [X25]
	071 Move X0, X21
	072 Move X1, [X8+64]
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfEqual {184}
	076 Move W8, [X25+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X8, X25, X22
	079 Move [X8+32], X21
	080 Move X8, [X19+8]
	081 Compare X8, 0
	082 JumpIfEqual {183}
	083 Move W9, [X8+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add X9, X8, X24
	087 Move W2, [X9+32]
	088 Add X8, X8, X22
	089 Move [X8+32], W2
	090 Move X8, [X19+16]
	091 Compare X8, 0
	092 JumpIfEqual {183}
	093 Move W9, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add X8, X8, 32
	097 Move W9, [X8]
	098 Move [X8], W9
	099 Move X8, [X19+24]
	100 Compare X8, 0
	101 JumpIfEqual {183}
	102 Move W9, [X8+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add X10, X8, X24
	105 Move V1, [X10+32]
	106 Move V0, [X10+48]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X31+64], V1
	109 Move [X31+72], V0
	110 Move V1, [X31+64]
	111 Move V0, [X31+80]
	112 Add X8, X8, X22
	113 Add X0, X31, 32
	114 Move X1, X21
	115 Move [X8+32], V1
	116 Move [X8+40], V0
	117 Move X22, [X19+40]
	118 Move X3, X31
	119 Move [X31+32], X31
	120 Move [X31+40], X31
	121 Call ElementPropertyPair..ctor, X0, X1, X2
	122 Compare X22, 0
	123 JumpIfEqual {183}
	124 Move X8, 0x16A4000
	125 Move X1, [X31+32]
	126 Move X2, [X31+40]
	127 Move X8, [X8+2680]
	128 Move X0, X22
	129 Move W3, W20
	130 Move X4, [X8]
	131 Call Dictionary`2<ElementPropertyPair, Int32>.set_Item, X0, X1, X2
	132 Move X9, [X19]
	133 Compare X9, 0
	134 JumpIfEqual {183}
	135 Move W8, [X9+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move W8, W23
	138 Move X8, W8
	139 Add X9, X9, X8
	140 Move [X9+32], X31
	141 Move X9, [X19+8]
	142 Compare X9, 0
	143 JumpIfEqual {183}
	144 Move W10, [X9+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add X9, X9, X8
	147 Move [X9+32], W31
	148 Move X9, [X19+16]
	149 Compare X9, 0
	150 JumpIfEqual {183}
	151 Move W10, [X9+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Add X9, X9, X8
	154 Move [X9+32], W31
	155 Move X9, [X19+24]
	156 NotImplemented "Instruction MOVI not yet implemented."
	157 Move [X31+32], V0
	158 Move [X31+40], V0
	159 Compare X9, 0
	160 JumpIfEqual {183}
	161 Move V0, [X31+32]
	162 Move V1, [X31+48]
	163 Move [X31], V0
	164 Move [X31+8], V1
	165 Move W10, [X9+24]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move V1, [X31]
	168 Move V0, [X31+16]
	169 Move X20, [X31+144]
	170 Move X19, [X31+152]
	171 Move X22, [X31+128]
	172 Move X21, [X31+136]
	173 Move X24, [X31+112]
	174 Move X23, [X31+120]
	175 Move X30, [X31+96]
	176 Move X25, [X31+104]
	177 Add X8, X9, X8
	178 Move [X8+32], V1
	179 Move [X8+40], V0
	180 Add X31, X31, 160
	181 Return 
	182 Call 0x1C17F28
	183 Call 0x1C17F20
	184 Call 0x1C17F44
	185 Move X1, X31
	186 Call 0x1C17DEC

Method: System.Void Replace(System.Int32 index, TTimingData timingData, TStyleData styleData)

Disassembly:
	0x02A7B538 MOV W20, W2
	0x02A7B53C MOV X21, X1
	0x02A7B540 MOV X22, X0
	0x02A7B544 TBNZ X8, 0x0, 0x2A7B55C
	0x02A7B548 ADRP X0, 0x16A3000
	0x02A7B54C LDR X0, [X0 + 0xA60]
	0x02A7B550 BL 0x1C16CF4
	0x02A7B554 MOVZ W8, 0x1
	0x02A7B558 STRB W8, [X23 + 0x294]
	0x02A7B55C LDR X22, [X22 + 0x28]
	0x02A7B560 ADD X0, X31, 0x0
	0x02A7B564 MOV X1, X21
	0x02A7B568 MOV W2, W20
	0x02A7B56C MOV X3, X31
	0x02A7B570 STP X31, X31, [X31]
	0x02A7B574 BL 0x3E02470
	0x02A7B578 CBZ X22, 0x2A7B5B0
	0x02A7B57C ADRP X8, 0x16A3000
	0x02A7B580 LDR X8, [X8 + 0xA60]
	0x02A7B584 LDP X1, X2, [X31]
	0x02A7B588 MOV X0, X22
	0x02A7B58C MOV X3, X19
	0x02A7B590 LDR X4, [X8]
	0x02A7B594 BL 0x2B35718
	0x02A7B598 LDP X20, X19, [X31 + 0x30]
	0x02A7B59C LDP X22, X21, [X31 + 0x20]
	0x02A7B5A0 LDP X30, X23, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move X9, [X0+16]
	004 Compare X9, 0
	005 JumpIfEqual {32}
	006 Move W8, [X9+24]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X8, W1
	009 Add X9, X9, X8
	010 Move [X9+32], W2
	011 Move V0, [X3]
	012 Move V1, [X3+16]
	013 Move X9, [X0+24]
	014 Move [X31+32], V0
	015 Move [X31+40], V1
	016 Compare X9, 0
	017 JumpIfEqual {32}
	018 Move V0, [X31+32]
	019 Move V1, [X31+48]
	020 Move [X31], V0
	021 Move [X31+8], V1
	022 Move W10, [X9+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move V1, [X31]
	025 Move V0, [X31+16]
	026 Move X30, [X31+64]
	027 Add X8, X9, X8
	028 Move [X8+32], V1
	029 Move [X8+40], V0
	030 Add X31, X31, 80
	031 Return 
	032 Call 0x1C17F20
	033 Call 0x1C17F28

Method: System.Void RemoveAll(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x02A7B5A4 AND W0, W0, 0x1
	0x02A7B5A8 ADD X31, X31, 0x40
	0x02A7B5AC RET
	0x02A7B5B0 BL 0x1C16F20
	0x02A7B5B4 SUB X31, X31, 0x60
	0x02A7B5B8 STR X30, [X31 + 0x10]
	0x02A7B5BC STP X26, X25, [X31 + 0x20]
	0x02A7B5C0 STP X24, X23, [X31 + 0x30]
	0x02A7B5C4 STP X22, X21, [X31 + 0x40]
	0x02A7B5C8 STP X20, X19, [X31 + 0x50]
	0x02A7B5CC ADRP X25, 0x1960000
	0x02A7B5D0 LDRB W8, [X25 + 0x295]
	0x02A7B5D4 MOV X24, X5
	0x02A7B5D8 MOV X21, X4
	0x02A7B5DC MOV X23, X3
	0x02A7B5E0 MOV W19, W2
	0x02A7B5E4 MOV X20, X1
	0x02A7B5E8 MOV X22, X0
	0x02A7B5EC TBNZ X8, 0x0, 0x2A7B604
	0x02A7B5F0 ADRP X0, 0x16A3000
	0x02A7B5F4 LDR X0, [X0 + 0xA68]
	0x02A7B5F8 BL 0x1C16CF4
	0x02A7B5FC MOVZ W8, 0x1
	0x02A7B600 STRB W8, [X25 + 0x295]
	0x02A7B604 LDR X0, [X24 + 0x20]
	0x02A7B608 LDR W26, [X22 + 0x20]
	0x02A7B60C LDRB W8, [X0 + 0x135]
	0x02A7B610 TBNZ X8, 0x0, 0x2A7B618
	0x02A7B614 BL 0x1C5C684
	0x02A7B618 LDR X25, [X22]
	0x02A7B61C CBZ X25, 0x2A7B770
	0x02A7B620 LDR W8, [X25 + 0x18]
	0x02A7B624 CMP W26, W8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+32]
	007 Subtract W21, W8, 1
	008 Move X19, X2
	009 Move X20, X0
	010 Move X22, X1
	011 Move X8, [X20]
	012 Compare X8, 0
	013 JumpIfEqual {36}
	014 Move W9, [X8+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X8, X8, W21
	017 Move X8, [X8+32]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, [X19+32]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move X0, X20
	027 Move W1, W21
	028 Call 0x2A7B2AC, X0, X1
	029 Subtract W21, W21, 1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 
	036 Call 0x1C17F20
	037 Call 0x1C17F28

Method: System.Void RemoveAll()

Disassembly:
	0x02A7B628 B.GE 0x2A7B63C
	0x02A7B62C LDR W24, [X22 + 0x20]
	0x02A7B630 ADD W8, W24, 0x1
	0x02A7B634 STR W8, [X22 + 0x20]
	0x02A7B638 B 0x2A7B694
	0x02A7B63C LDR X0, [X24 + 0x20]
	0x02A7B640 LDRB W8, [X0 + 0x135]
	0x02A7B644 TBNZ X8, 0x0, 0x2A7B654
	0x02A7B648 BL 0x1C5C684
	0x02A7B64C LDR X25, [X22]
	0x02A7B650 CBZ X25, 0x2A7B770
	0x02A7B654 LDR X0, [X24 + 0x20]
	0x02A7B658 LDR W8, [X25 + 0x18]
	0x02A7B65C LDRB W9, [X0 + 0x135]
	0x02A7B660 UBFM W24, W8, 0x1F, 0x1E
	0x02A7B664 TBNZ X9, 0x0, 0x2A7B66C
	0x02A7B668 BL 0x1C5C684
	0x02A7B66C LDR X8, [X0 + 0xC0]
	0x02A7B670 MOV X0, X22
	0x02A7B674 MOV W1, W24
	0x02A7B678 LDR X2, [X8 + 0x60]
	0x02A7B67C BL 0x2A7B2A0
	0x02A7B680 LDR W24, [X22 + 0x20]
	0x02A7B684 LDR X25, [X22]
	0x02A7B688 ADD W8, W24, 0x1
	0x02A7B68C STR W8, [X22 + 0x20]
	0x02A7B690 CBZ X25, 0x2A7B770
	0x02A7B694 CBZ X20, 0x2A7B6AC
	0x02A7B698 LDR X8, [X25]
	0x02A7B69C MOV X0, X20
	0x02A7B6A0 LDR X1, [X8 + 0x40]
	0x02A7B6A4 BL 0x1C16E00
	0x02A7B6A8 CBZ X0, 0x2A7B778
	0x02A7B6AC LDR W8, [X25 + 0x18]
	0x02A7B6B0 CMP W24, W8
	0x02A7B6B4 B.CS 0x2A7B774
	0x02A7B6B8 SXTW X8, W24
	0x02A7B6BC ADD X9, X25, X8, 0x3, LSL
	0x02A7B6C0 STR X20, [X9 + 0x20]
	0x02A7B6C4 LDR X9, [X22 + 0x8]
	0x02A7B6C8 CBZ X9, 0x2A7B770
	0x02A7B6CC LDR W10, [X9 + 0x18]
	0x02A7B6D0 CMP W24, W10
	0x02A7B6D4 B.CS 0x2A7B774
	0x02A7B6D8 ADD X9, X9, X8, 0x2, LSL
	0x02A7B6DC STR W19, [X9 + 0x20]
	0x02A7B6E0 LDR X9, [X22 + 0x10]
	0x02A7B6E4 CBZ X9, 0x2A7B770
	0x02A7B6E8 LDR W10, [X9 + 0x18]
	0x02A7B6EC CMP W24, W10
	0x02A7B6F0 B.CS 0x2A7B774
	0x02A7B6F4 ADD X9, X9, X8
	0x02A7B6F8 STRB W23, [X9 + 0x20]
	0x02A7B6FC LDR X9, [X22 + 0x18]
	0x02A7B700 CBZ X9, 0x2A7B770
	0x02A7B704 LDR W10, [X9 + 0x18]
	0x02A7B708 CMP W24, W10
	0x02A7B70C B.CS 0x2A7B774
	0x02A7B710 ADD X8, X9, X8, 0x3, LSL
	0x02A7B714 STR X21, [X8 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1961000
	006 Move W8, [X21+649]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x16A4000
	014 Move X0, [X0+2688]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+649], W8
	018 Move X0, [X20+32]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X8, [X0+192]
	026 Move W1, 2
	027 Move X0, X19
	028 Move X2, [X8+96]
	029 Call 0x2A7ADB4, X0, X1
	030 Move X0, [X20+32]
	031 Move W20, [X19+32]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X0, [X19]
	039 Compare X0, 0
	040 JumpIfEqual {76}
	041 Move W8, [X0+24]
	042 Move W1, W31
	043 Move X3, X31
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Move W2, W20
	047 Call Array.Clear, X0, X1, X2
	048 Move X0, [X19+8]
	049 Move W1, W31
	050 Move W2, W20
	051 Move X3, X31
	052 Call Array.Clear, X0, X1, X2
	053 Move X0, [X19+16]
	054 Move W1, W31
	055 Move W2, W20
	056 Move X3, X31
	057 Call Array.Clear, X0, X1, X2
	058 Move X0, [X19+24]
	059 Move W1, W31
	060 Move W2, W20
	061 Move X3, X31
	062 Call Array.Clear, X0, X1, X2
	063 Move X0, [X19+40]
	064 Move [X19+32], W31
	065 Compare X0, 0
	066 JumpIfEqual {76}
	067 Move X8, 0x16A4000
	068 Move X8, [X8+2688]
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X1, [X8]
	072 Move X30, [X31+32]
	073 Move X21, [X31+40]
	074 Call Dictionary`2<ElementPropertyPair, Int32>.Clear, X0
	075 Return 
	076 Call 0x1C17F20

Method: System.Void GetActivePropertiesForElement(UnityEngine.UIElements.VisualElement ve, System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.StylePropertyId> outProperties)

Disassembly:
	0x02A7B718 LDR X21, [X22 + 0x28]
	0x02A7B71C ADD X0, X31, 0x0
	0x02A7B720 MOV X1, X20
	0x02A7B724 MOV W2, W19
	0x02A7B728 MOV X3, X31
	0x02A7B72C STP X31, X31, [X31]
	0x02A7B730 BL 0x3E02470
	0x02A7B734 CBZ X21, 0x2A7B770
	0x02A7B738 ADRP X8, 0x16A3000
	0x02A7B73C LDR X8, [X8 + 0xA68]
	0x02A7B740 LDP X1, X2, [X31]
	0x02A7B744 MOV X0, X21
	0x02A7B748 MOV W3, W24
	0x02A7B74C LDR X4, [X8]
	0x02A7B750 BL 0x2B33D04
	0x02A7B754 LDP X20, X19, [X31 + 0x50]
	0x02A7B758 LDP X22, X21, [X31 + 0x40]
	0x02A7B75C LDP X24, X23, [X31 + 0x30]
	0x02A7B760 LDP X26, X25, [X31 + 0x20]
	0x02A7B764 LDR X30, [X31 + 0x10]
	0x02A7B768 ADD X31, X31, 0x60
	0x02A7B76C RET
	0x02A7B770 BL 0x1C16F20
	0x02A7B774 BL 0x1C16F28
	0x02A7B778 BL 0x1C16F44
	0x02A7B77C MOV X1, X31
	0x02A7B780 BL 0x1C16DEC
	0x02A7B784 SUB X31, X31, 0x50
	0x02A7B788 STP X30, X25, [X31 + 0x10]
	0x02A7B78C STP X24, X23, [X31 + 0x20]
	0x02A7B790 STP X22, X21, [X31 + 0x30]
	0x02A7B794 STP X20, X19, [X31 + 0x40]
	0x02A7B798 ADRP X21, 0x1960000
	0x02A7B79C LDRB W8, [X21 + 0x296]
	0x02A7B7A0 MOV W20, W1
	0x02A7B7A4 MOV X19, X0
	0x02A7B7A8 TBNZ X8, 0x0, 0x2A7B7CC
	0x02A7B7AC ADRP X0, 0x16A3000
	0x02A7B7B0 LDR X0, [X0 + 0xA70]
	0x02A7B7B4 BL 0x1C16CF4
	0x02A7B7B8 ADRP X0, 0x16A3000
	0x02A7B7BC LDR X0, [X0 + 0xA78]
	0x02A7B7C0 BL 0x1C16CF4
	0x02A7B7C4 MOVZ W8, 0x1
	0x02A7B7C8 STRB W8, [X21 + 0x296]
	0x02A7B7CC LDR W9, [X19 + 0x20]
	0x02A7B7D0 LDR X8, [X19]
	0x02A7B7D4 SUB W23, W9, 0x1
	0x02A7B7D8 STR W23, [X19 + 0x20]
	0x02A7B7DC CBZ X8, 0x2A7B9E0
	0x02A7B7E0 LDR W9, [X8 + 0x18]
	0x02A7B7E4 CMP W9, W20
	0x02A7B7E8 B.LS 0x2A7B9DC
	0x02A7B7EC LDR X9, [X19 + 0x8]
	0x02A7B7F0 CBZ X9, 0x2A7B9E0
	0x02A7B7F4 LDR W10, [X9 + 0x18]
	0x02A7B7F8 CMP W10, W20
	0x02A7B7FC B.LS 0x2A7B9DC
	0x02A7B800 SXTW X22, W20
	0x02A7B804 ADD X8, X8, X22, 0x3, LSL
	0x02A7B808 ADD X9, X9, X22, 0x2, LSL
	0x02A7B80C LDR X1, [X8 + 0x20]
	0x02A7B810 LDR W2, [X9 + 0x20]
	0x02A7B814 LDR X21, [X19 + 0x28]
	0x02A7B818 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1961000
	008 Move W8, [X22+650]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x16A4000
	017 Move X0, [X0+2696]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+650], W8
	021 Move W8, [X21+32]
	022 Subtract W22, W8, 1
	023 Move X23, 0x16A4000
	024 Move X23, [X23+2696]
	025 Move X9, [X21]
	026 Compare X9, 0
	027 JumpIfEqual {70}
	028 Move W8, [X9+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, W22
	031 Add X9, X9, X8
	032 Move X9, [X9+32]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X9, [X21+8]
	035 Compare X9, 0
	036 JumpIfEqual {70}
	037 Move W10, [X9+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Compare X19, 0
	040 JumpIfEqual {70}
	041 Add X8, X9, X8
	042 Move W10, [X19+28]
	043 Move W1, [X8+32]
	044 Move X8, [X19+16]
	045 Move X9, [X23]
	046 Add W10, W10, 1
	047 Move [X19+28], W10
	048 Compare X8, 0
	049 JumpIfEqual {70}
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Move W11, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add W9, W10, 1
	054 Add X8, X8, X10
	055 Move [X19+24], W9
	056 Move [X8+32], W1
	057 Move X8, [X9+32]
	058 Move X0, X19
	059 Move X8, [X8+192]
	060 Move X2, [X8+112]
	061 Call List`1<Int32Enum>.AddWithResize, X0, X1
	062 Subtract W22, W22, 1
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Return 
	070 Call 0x1C17F20
	071 Call 0x1C17F28

