Type: UnityEngine.UIElements.UIRRepaintUpdater

Method: System.Void .ctor()

Disassembly:
	0x03DDFF44 STP X22, X21, [X31 + 0x10]
	0x03DDFF48 STP X20, X19, [X31 + 0x20]
	0x03DDFF4C ADRP X21, 0x609000
	0x03DDFF50 ADRP X22, 0x33C000
	0x03DDFF54 LDRB W8, [X21 + 0x1D0]
	0x03DDFF58 LDR X22, [X22 + 0x620]
	0x03DDFF5C MOV X19, X1
	0x03DDFF60 MOV X20, X0
	0x03DDFF64 TBNZ X8, 0x0, 0x3DDFF7C
	0x03DDFF68 ADRP X0, 0x33C000
	0x03DDFF6C LDR X0, [X0 + 0x620]
	0x03DDFF70 BL 0x1C16CF4
	0x03DDFF74 MOVZ W8, 0x1
	0x03DDFF78 STRB W8, [X21 + 0x1D0]
	0x03DDFF7C LDR X0, [X22]
	0x03DDFF80 LDR W8, [X0 + 0xE0]
	0x03DDFF84 CBNZ W8, 0x3DDFF8C
	0x03DDFF88 BL 0x1C16DFC
	0x03DDFF8C CMP W20, W19
	0x03DDFF90 LDP X20, X19, [X31 + 0x20]
	0x03DDFF94 LDP X22, X21, [X31 + 0x10]
	0x03DDFF98 CSET W0, NE
	0x03DDFF9C LDR X30, [X31], #0x30
	0x03DDFFA0 RET
	0x03DDFFA4 STR X30, [X31 - 0x20]!
	0x03DDFFA8 STP X20, X19, [X31 + 0x10]
	0x03DDFFAC ADRP X19, 0x609000
	0x03DDFFB0 ADRP X20, 0x33C000
	0x03DDFFB4 LDRB W8, [X19 + 0x1D1]
	0x03DDFFB8 LDR X20, [X20 + 0x620]
	0x03DDFFBC TBNZ X8, 0x0, 0x3DDFFD4
	0x03DDFFC0 ADRP X0, 0x33C000
	0x03DDFFC4 LDR X0, [X0 + 0x620]
	0x03DDFFC8 BL 0x1C16CF4
	0x03DDFFCC MOVZ W8, 0x1
	0x03DDFFD0 STRB W8, [X19 + 0x1D1]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x60A000
	007 Move X21, 0x386000
	008 Move X20, 0x38B000
	009 Move W8, [X22+453]
	010 Move X21, [X21+968]
	011 Move X20, [X20+1192]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x386000
	018 Move X0, [X0+968]
	019 Call 0x1C17CF4
	020 Move X0, 0x38B000
	021 Move X0, [X0+1192]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+453], W8
	025 Move X0, X19
	026 Move X1, X31
	027 Call BaseVisualTreeUpdater..ctor, X0
	028 Move X0, [X21]
	029 Call 0x1C17F10
	030 Move X2, [X20]
	031 Move X1, X19
	032 Move X3, X31
	033 Move X20, X0
	034 Call Action`1<Object>..ctor, X0, X1, X2
	035 Move X0, X19
	036 Move X1, X20
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X2, X31
	042 Move X30, [X31+48]
	043 Call BaseVisualTreeUpdater.add_panelChanged, X0, X1
	044 Return 

Method: Unity.Profiling.ProfilerMarker get_profilerMarker()

Disassembly:
	0x03DDFFD4 LDR X8, [X20]
	0x03DDFFD8 LDP X20, X19, [X31 + 0x10]
	0x03DDFFDC LDR X8, [X8 + 0xB8]
	0x03DDFFE0 STR W31, [X8]
	0x03DDFFE4 LDR X30, [X31], #0x20
	0x03DDFFE8 RET
	0x03DDFFEC STR X30, [X31 - 0x20]!
	0x03DDFFF0 STP X20, X19, [X31 + 0x10]
	0x03DDFFF4 ADRP X20, 0x609000
	0x03DDFFF8 ADRP X19, 0x383000
	0x03DDFFFC LDRB W8, [X20 + 0x1D2]
	0x03DE0000 B 0x3EB1A3C
	0x03DE0004 TBNZ X8, 0x0, 0x3DE001C
	0x03DE0008 ADRP X0, 0x382000
	0x03DE000C LDR X0, [X0 + 0x6B0]
	0x03DE0010 BL 0x1C16CF4
	0x03DE0014 MOVZ W8, 0x1
	0x03DE0018 STRB W8, [X20 + 0x1D2]
	0x03DE001C LDR X0, [X19]
	0x03DE0020 LDR W8, [X0 + 0xE0]
	0x03DE0024 CBNZ W8, 0x3DE0030
	0x03DE0028 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x60A000
	005 Move X19, 0x384000
	006 Move W8, [X20+454]
	007 Move X19, [X19+1704]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x384000
	013 Move X0, [X0+1704]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+454], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Boolean get_drawStats()

Disassembly:
	0x03DE002C LDR X0, [X19]
	0x03DE0030 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Boolean get_breakBatches()

Disassembly:
	0x03DE0034 LDP X20, X19, [X31 + 0x10]
	0x03DE0038 LDR X0, [X8]

ISIL:
	001 Move W0, [X0+49]
	002 Return X0

Method: System.Void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType)

Disassembly:
	0x03DE003C LDR X30, [X31], #0x20
	0x03DE0040 RET
	0x03DE0044 SUB X31, X31, 0x40
	0x03DE0048 STP X30, X23, [X31 + 0x10]
	0x03DE004C STP X22, X21, [X31 + 0x20]
	0x03DE0050 STP X20, X19, [X31 + 0x30]
	0x03DE0054 ADRP X21, 0x608000
	0x03DE0058 ADRP X22, 0x33B000
	0x03DE005C LDRB W8, [X21 + 0x1D3]
	0x03DE0060 LDR X22, [X22 + 0x620]
	0x03DE0064 MOV X19, X1
	0x03DE0068 MOV X20, X0
	0x03DE006C TBNZ X8, 0x0, 0x3DE00CC
	0x03DE0070 ADRP X0, 0x313000
	0x03DE0074 LDR X0, [X0 + 0xA28]
	0x03DE0078 BL 0x1C16CF4
	0x03DE007C ADRP X0, 0x313000
	0x03DE0080 LDR X0, [X0 + 0x758]
	0x03DE0084 BL 0x1C16CF4
	0x03DE0088 ADRP X0, 0x389000
	0x03DE008C LDR X0, [X0 + 0x4F0]
	0x03DE0090 BL 0x1C16CF4
	0x03DE0094 ADRP X0, 0x389000
	0x03DE0098 LDR X0, [X0 + 0x4F8]
	0x03DE009C BL 0x1C16CF4
	0x03DE00A0 ADRP X0, 0x33B000
	0x03DE00A4 LDR X0, [X0 + 0x620]
	0x03DE00A8 BL 0x1C16CF4
	0x03DE00AC ADRP X0, 0x389000
	0x03DE00B0 LDR X0, [X0 + 0x500]
	0x03DE00B4 BL 0x1C16CF4
	0x03DE00B8 ADRP X0, 0x389000
	0x03DE00BC LDR X0, [X0 + 0x508]
	0x03DE00C0 BL 0x1C16CF4
	0x03DE00C4 MOVZ W8, 0x1
	0x03DE00C8 STRB W8, [X21 + 0x1D3]
	0x03DE00CC LDR X0, [X22]
	0x03DE00D0 LDR W8, [X0 + 0xE0]
	0x03DE00D4 CBNZ W8, 0x3DE00DC
	0x03DE00D8 BL 0x1C16DFC
	0x03DE00DC ADRP X23, 0x313000
	0x03DE00E0 ADRP X21, 0x313000
	0x03DE00E4 LDR X23, [X23 + 0x758]
	0x03DE00E8 LDR X21, [X21 + 0xA28]
	0x03DE00EC SUBS W19, W19, 0x1
	0x03DE00F0 B.MI 0x3DE017C
	0x03DE00F4 LDR X0, [X22]
	0x03DE00F8 LDR W8, [X0 + 0xE0]
	0x03DE00FC CBNZ W8, 0x3DE0104
	0x03DE0100 BL 0x1C16DFC
	0x03DE0104 LDR X20, [X20 + 0x10]
	0x03DE0108 CBZ X20, 0x3DE01F4
	0x03DE010C LDR W8, [X20 + 0x18]
	0x03DE0110 CMP W19, W8
	0x03DE0114 B.GE 0x3DE017C
	0x03DE0118 LDR X0, [X22]
	0x03DE011C LDR W8, [X0 + 0xE0]
	0x03DE0120 CBNZ W8, 0x3DE0128
	0x03DE0124 BL 0x1C16DFC
	0x03DE0128 ADRP X8, 0x389000
	0x03DE012C LDR X8, [X8 + 0x4F8]
	0x03DE0130 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X0
	007 Move X0, [X0+40]
	008 Compare X0, 0
	009 JumpIfEqual {76}
	010 Move W21, W2
	011 Move X19, X1
	012 And W22, W2, 512
	013 Move TEMP, X2
	014 And TEMP, TEMP, 0x4000
	015 Compare TEMP, 0x4000
	016 JumpIfNotEqual {20}
	017 Move X1, X19
	018 Move X2, X31
	019 Call RenderChain.UIEOnRenderHintsChanged, X0, X1
	020 Move W8, W21
	021 ShiftRight W8, 8
	022 And W8, W8, 0x7FFFFFFF
	023 Or W8, W8, W21
	024 And W3, W8, 1
	025 Or W8, W3, W22
	026 Compare W8, 0
	027 JumpIfEqual {36}
	028 Move X0, [X20+40]
	029 Compare X0, 0
	030 JumpIfEqual {95}
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move X1, X19
	034 Move X4, X31
	035 Call RenderChain.UIEOnTransformOrSizeChanged, X0, X1, X2, X3
	036 Move W8, W21
	037 ShiftRight W8, 6
	038 And W8, W8, 0x7FFFFFFF
	039 Or W8, W8, W21
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {51}
	044 Move X0, [X20+40]
	045 Compare X0, 0
	046 JumpIfEqual {95}
	047 Move X1, X19
	048 Move W2, W31
	049 Move X3, X31
	050 Call RenderChain.UIEOnClippingChanged, X0, X1, X2
	051 Move TEMP, X21
	052 And TEMP, TEMP, 4096
	053 Compare TEMP, 4096
	054 JumpIfNotEqual {62}
	055 Move X0, [X20+40]
	056 Compare X0, 0
	057 JumpIfEqual {95}
	058 Move X1, X19
	059 Move W2, W31
	060 Move X3, X31
	061 Call RenderChain.UIEOnOpacityChanged, X0, X1, X2
	062 Move TEMP, X21
	063 And TEMP, TEMP, 0x2000
	064 Compare TEMP, 0x2000
	065 JumpIfNotEqual {72}
	066 Move X0, [X20+40]
	067 Compare X0, 0
	068 JumpIfEqual {95}
	069 Move X1, X19
	070 Move X2, X31
	071 Call RenderChain.UIEOnColorChanged, X0, X1
	072 Move TEMP, X21
	073 And TEMP, TEMP, 2048
	074 Compare TEMP, 2048
	075 JumpIfEqual {82}
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X30, [X31+48]
	081 Return 
	082 Move X0, [X20+40]
	083 Compare X0, 0
	084 JumpIfEqual {95}
	085 Move X1, X19
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move W2, W31
	091 Move X3, X31
	092 Move X30, [X31+48]
	093 Call RenderChain.UIEOnVisualsChanged, X0, X1, X2
	094 Return 
	095 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03DE0134 MOV W1, W19
	0x03DE0138 LDR X2, [X8]
	0x03DE013C BL 0x314F864
	0x03DE0140 UBFM X8, X1, 0x20, 0x3F
	0x03DE0144 CMP W8, 0x0
	0x03DE0148 B.GT 0x3DE01E0
	0x03DE014C LDR X0, [X22]
	0x03DE0150 LDR W8, [X0 + 0xE0]
	0x03DE0154 CBNZ W8, 0x3DE015C
	0x03DE0158 BL 0x1C16DFC
	0x03DE015C LDR X0, [X23]
	0x03DE0160 ADD X1, X31, 0x8
	0x03DE0164 STR W19, [X31 + 0x8]
	0x03DE0168 BL 0x1C16E04
	0x03DE016C ADRP X8, 0x389000
	0x03DE0170 LDR X8, [X8 + 0x500]
	0x03DE0174 LDR X8, [X8]
	0x03DE0178 B 0x3DE01A8
	0x03DE017C LDR X0, [X22]
	0x03DE0180 ADRP X20, 0x389000
	0x03DE0184 LDR W8, [X0 + 0xE0]
	0x03DE0188 LDR X20, [X20 + 0x508]
	0x03DE018C CBNZ W8, 0x3DE0194
	0x03DE0190 BL 0x1C16DFC
	0x03DE0194 LDR X0, [X23]
	0x03DE0198 ADD X1, X31, 0xC
	0x03DE019C STR W19, [X31 + 0xC]
	0x03DE01A0 BL 0x1C16E04
	0x03DE01A4 LDR X8, [X20]
	0x03DE01A8 MOV X1, X0
	0x03DE01AC MOV X0, X8
	0x03DE01B0 MOV X2, X31
	0x03DE01B4 BL 0x321EFD0
	0x03DE01B8 LDR X8, [X21]
	0x03DE01BC MOV X19, X0
	0x03DE01C0 LDR W9, [X8 + 0xE0]
	0x03DE01C4 CBNZ W9, 0x3DE01D0
	0x03DE01C8 MOV X0, X8
	0x03DE01CC BL 0x1C16DFC
	0x03DE01D0 MOV X0, X19
	0x03DE01D4 MOV X1, X31
	0x03DE01D8 BL 0x3C0649C
	0x03DE01DC MOV X0, X31
	0x03DE01E0 LDP X20, X19, [X31 + 0x30]
	0x03DE01E4 LDP X22, X21, [X31 + 0x20]
	0x03DE01E8 LDP X30, X23, [X31 + 0x10]
	0x03DE01EC ADD X31, X31, 0x40

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {9}
	007 Compare X0, 0
	008 JumpIfNotEqual {14}
	009 Move X0, X19
	010 Call UIRRepaintUpdater.InitRenderChain, X0
	011 Move X0, [X19+40]
	012 Compare X0, 0
	013 JumpIfEqual {59}
	014 Move X8, [X0+272]
	015 Compare X8, 0
	016 JumpIfEqual {59}
	017 Move X1, X31
	018 Call RenderChain.ProcessChanges, X0
	019 Move X0, X19
	020 Move X1, X31
	021 Call BaseVisualTreeUpdater.get_panel, X0
	022 Compare X0, 0
	023 JumpIfEqual {62}
	024 Move W9, [X0+56]
	025 Move W8, [X0+57]
	026 Or W10, W9, W8
	027 Move TEMP, X10
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {44}
	031 Move S0, [X0+60]
	032 Move S1, [X0+64]
	033 Move S2, [X0+68]
	034 Move S3, [X0+72]
	035 And W1, W8, 1
	036 Move X8, -53432320
	037 Move V4, [X8+104]
	038 And W0, W9, 1
	039 Multiply S0, S3, S0
	040 Multiply S1, S3, S1
	041 Multiply S2, S3, S2
	042 Move X2, X31
	043 Call GL.Clear, X0, X1, X2, V0
	044 Move X0, [X19+40]
	045 Compare X0, 0
	046 JumpIfEqual {62}
	047 Move W9, [X19+48]
	048 Move X8, [X0+272]
	049 Move [X0+536], W9
	050 Compare X8, 0
	051 JumpIfEqual {62}
	052 Move W9, [X19+49]
	053 Move X1, X31
	054 Move [X8+172], W9
	055 Move X30, [X31+16]
	056 Move X19, [X31+24]
	057 Call RenderChain.Render, X0
	058 Return 
	059 Move X30, [X31+16]
	060 Move X19, [X31+24]
	061 Return 
	062 Call 0x1C17F20

Method: UnityEngine.UIElements.UIR.RenderChain CreateRenderChain()

Disassembly:
	0x03DE02AC LDR X0, [X0 + 0x538]
	0x03DE02B0 BL 0x1C16CF4
	0x03DE02B4 ADRP X0, 0x389000
	0x03DE02B8 LDR X0, [X0 + 0x540]
	0x03DE02BC BL 0x1C16CF4
	0x03DE02C0 MOVZ W8, 0x1
	0x03DE02C4 STRB W8, [X22 + 0x1D5]
	0x03DE02C8 LDR X0, [X21 + 0x20]
	0x03DE02CC CBZ X0, 0x3DE049C
	0x03DE02D0 LDR W8, [X0 + 0x18]
	0x03DE02D4 ADRP X23, 0x33B000
	0x03DE02D8 LDR X23, [X23 + 0x620]
	0x03DE02DC MOVZ X22, 0x1
	0x03DE02E0 CMP W8, 0x1
	0x03DE02E4 BFM X22, X20, 0x0, 0x0
	0x03DE02E8 B.LT 0x3DE0364
	0x03DE02EC ADRP X8, 0x389000
	0x03DE02F0 LDR X8, [X8 + 0x528]
	0x03DE02F4 LDR X1, [X8]
	0x03DE02F8 BL 0x26030EC
	0x03DE02FC LDR X8, [X23]
	0x03DE0300 LDR X24, [X21 + 0x10]
	0x03DE0304 MOV X23, X0
	0x03DE0308 LDR W9, [X8 + 0xE0]
	0x03DE030C CBNZ W9, 0x3DE0318
	0x03DE0310 MOV X0, X8
	0x03DE0314 BL 0x1C16DFC
	0x03DE0318 CBZ X24, 0x3DE049C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x609000
	006 Move X20, 0x385000
	007 Move W8, [X21+455]
	008 Move X20, [X20+1624]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x385000
	015 Move X0, [X0+1624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+455], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call BaseVisualTreeUpdater.get_panel, X0
	022 Move X8, [X20]
	023 Move X19, X0
	024 Move X0, X8
	025 Call 0x1C17F10
	026 Move X1, X19
	027 Move X2, X31
	028 Move X20, X0
	029 Call RenderChain..ctor, X0, X1
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03DE031C ADRP X8, 0x389000
	0x03DE0320 LDR X8, [X8 + 0x520]
	0x03DE0324 SUB W1, W23, 0x1
	0x03DE0328 MOV X0, X24
	0x03DE032C MOV X2, X19
	0x03DE0330 LDR X4, [X8]
	0x03DE0334 MOV X3, X22
	0x03DE0338 BL 0x314F8BC
	0x03DE033C TBNZ X20, 0x0, 0x3DE0404
	0x03DE0340 LDR X0, [X21 + 0x18]
	0x03DE0344 CBZ X0, 0x3DE049C
	0x03DE0348 ADRP X8, 0x389000
	0x03DE034C LDR X8, [X8 + 0x510]
	0x03DE0350 MOV W2, W23
	0x03DE0354 MOV X1, X19
	0x03DE0358 LDR X3, [X8]
	0x03DE035C BL 0x2ABAB54
	0x03DE0360 B 0x3DE0404
	0x03DE0364 LDR X0, [X21 + 0x10]
	0x03DE0368 CBZ X0, 0x3DE049C
	0x03DE036C LDR W24, [X0 + 0x18]
	0x03DE0370 CMP W24, 0x800
	0x03DE0374 B.NE 0x3DE041C
	0x03DE0378 ADRP X8, 0x313000
	0x03DE037C LDR X8, [X8 + 0x758]
	0x03DE0380 ADD X1, X31, 0xC
	0x03DE0384 LDR X0, [X8]
	0x03DE0388 MOVZ W8, 0x800
	0x03DE038C STR W8, [X31 + 0xC]
	0x03DE0390 BL 0x1C16E04
	0x03DE0394 ADRP X8, 0x389000
	0x03DE0398 LDR X8, [X8 + 0x538]
	0x03DE039C ADRP X9, 0x389000
	0x03DE03A0 LDR X9, [X9 + 0x540]
	0x03DE03A4 MOV X2, X0
	0x03DE03A8 LDR X8, [X8]
	0x03DE03AC MOV X3, X31
	0x03DE03B0 LDR X1, [X9]
	0x03DE03B4 MOV X0, X8
	0x03DE03B8 BL 0x3227BD4
	0x03DE03BC ADRP X8, 0x313000
	0x03DE03C0 LDR X8, [X8 + 0xA28]
	0x03DE03C4 MOV X19, X0
	0x03DE03C8 LDR X8, [X8]
	0x03DE03CC LDR W9, [X8 + 0xE0]
	0x03DE03D0 CBNZ W9, 0x3DE03DC
	0x03DE03D4 MOV X0, X8
	0x03DE03D8 BL 0x1C16DFC
	0x03DE03DC MOV X0, X19
	0x03DE03E0 MOV X1, X31
	0x03DE03E4 BL 0x3C0649C
	0x03DE03E8 LDR X0, [X23]
	0x03DE03EC LDR W8, [X0 + 0xE0]
	0x03DE03F0 CBNZ W8, 0x3DE03FC
	0x03DE03F4 BL 0x1C16DFC
	0x03DE03F8 LDR X0, [X23]
	0x03DE03FC LDR X8, [X0 + 0xB8]
	0x03DE0400 LDR W23, [X8]
	0x03DE0404 MOV W0, W23
	0x03DE0408 LDP X20, X19, [X31 + 0x30]
	0x03DE040C LDP X22, X21, [X31 + 0x20]
	0x03DE0410 LDP X24, X23, [X31 + 0x10]
	0x03DE0414 LDR X30, [X31], #0x40
	0x03DE0418 RET
	0x03DE041C LDR X8, [X23]
	0x03DE0420 LDR W9, [X8 + 0xE0]
	0x03DE0424 CBNZ W9, 0x3DE0438

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x609000
	009 Move X23, 0x38A000
	010 Move X22, 0x383000
	011 Move X21, 0x314000
	012 Move X19, 0x38A000
	013 Move X20, 0x33D000
	014 Move W8, [X24+456]
	015 Move X23, [X23+1200]
	016 Move X22, [X22+1704]
	017 Move X21, [X21+3368]
	018 Move X19, [X19+1208]
	019 Move X20, [X20+2080]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x314000
	025 Move X0, [X0+3368]
	026 Call 0x1C17CF4
	027 Move X0, 0x38A000
	028 Move X0, [X0+1208]
	029 Call 0x1C17CF4
	030 Move X0, 0x383000
	031 Move X0, [X0+1704]
	032 Call 0x1C17CF4
	033 Move X0, 0x33D000
	034 Move X0, [X0+2080]
	035 Call 0x1C17CF4
	036 Move X0, 0x38A000
	037 Move X0, [X0+1200]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X24+456], W8
	041 Move X8, [X22]
	042 Move X9, [X23]
	043 Move W1, 1
	044 Move W2, W31
	045 Move X8, [X8+184]
	046 Move W3, W31
	047 Move X4, X31
	048 Move [X8], X9
	049 Move X8, [X22]
	050 Move X8, [X8+184]
	051 Move X0, [X8]
	052 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	053 Move X8, [X22]
	054 Move X8, [X8+184]
	055 Move [X8+8], X0
	056 Move X0, [X21]
	057 Call 0x1C17F10
	058 Move X2, [X19]
	059 Move X1, X31
	060 Move X3, X31
	061 Move X19, X0
	062 Call Action`1<Boolean>..ctor, X0, X1, X2
	063 Move X0, [X20]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move X1, X31
	076 Move X30, [X31+64]
	077 Call Utility.add_GraphicsResourcesRecreate, X0
	078 Return 

Method: System.Void OnGraphicsResourcesRecreate(System.Boolean recreate)

Disassembly:
	0x03DE0428 MOV X0, X8
	0x03DE042C BL 0x1C16DFC
	0x03DE0430 LDR X0, [X21 + 0x10]
	0x03DE0434 CBZ X0, 0x3DE049C
	0x03DE0438 ADRP X9, 0x389000
	0x03DE043C LDR X9, [X9 + 0x518]
	0x03DE0440 LDR W10, [X0 + 0x1C]
	0x03DE0444 LDR X8, [X0 + 0x10]
	0x03DE0448 LDR X9, [X9]
	0x03DE044C ADD W10, W10, 0x1
	0x03DE0450 STR W10, [X0 + 0x1C]
	0x03DE0454 CBZ X8, 0x3DE049C
	0x03DE0458 LDRSW X10, [X0 + 0x18]
	0x03DE045C LDR W11, [X8 + 0x18]
	0x03DE0460 ADD W23, W24, 0x1
	0x03DE0464 CMP W10, W11
	0x03DE0468 B.CS 0x3DE0480
	0x03DE046C ADD W9, W10, 0x1
	0x03DE0470 ADD X8, X8, X10, 0x4, LSL
	0x03DE0474 STR W9, [X0 + 0x18]
	0x03DE0478 STP X19, X22, [X8 + 0x20]
	0x03DE047C B 0x3DE033C
	0x03DE0480 LDR X8, [X9 + 0x20]
	0x03DE0484 MOV X1, X19
	0x03DE0488 MOV X2, X22
	0x03DE048C LDR X8, [X8 + 0xC0]
	0x03DE0490 LDR X3, [X8 + 0x70]
	0x03DE0494 BL 0x314FB68
	0x03DE0498 B 0x3DE033C
	0x03DE049C BL 0x1C16F20
	0x03DE04A0 SUB X31, X31, 0x50
	0x03DE04A4 STP X30, X25, [X31 + 0x10]
	0x03DE04A8 STP X24, X23, [X31 + 0x20]
	0x03DE04AC STP X22, X21, [X31 + 0x30]
	0x03DE04B0 STP X20, X19, [X31 + 0x40]
	0x03DE04B4 ADRP X22, 0x608000
	0x03DE04B8 ADRP X24, 0x33B000
	0x03DE04BC LDRB W8, [X22 + 0x1D4]
	0x03DE04C0 LDR X24, [X24 + 0x620]
	0x03DE04C4 MOV X19, X2
	0x03DE04C8 MOV X21, X1
	0x03DE04CC MOV X20, X0
	0x03DE04D0 TBNZ X8, 0x0, 0x3DE0548
	0x03DE04D4 ADRP X0, 0x313000
	0x03DE04D8 LDR X0, [X0 + 0xA28]
	0x03DE04DC BL 0x1C16CF4
	0x03DE04E0 ADRP X0, 0x313000
	0x03DE04E4 LDR X0, [X0 + 0x758]
	0x03DE04E8 BL 0x1C16CF4
	0x03DE04EC ADRP X0, 0x389000
	0x03DE04F0 LDR X0, [X0 + 0x4F0]
	0x03DE04F4 BL 0x1C16CF4
	0x03DE04F8 ADRP X0, 0x389000
	0x03DE04FC LDR X0, [X0 + 0x4F8]
	0x03DE0500 BL 0x1C16CF4
	0x03DE0504 ADRP X0, 0x389000
	0x03DE0508 LDR X0, [X0 + 0x520]
	0x03DE050C BL 0x1C16CF4
	0x03DE0510 ADRP X0, 0x33B000
	0x03DE0514 LDR X0, [X0 + 0x620]
	0x03DE0518 BL 0x1C16CF4
	0x03DE051C ADRP X0, 0x389000
	0x03DE0520 LDR X0, [X0 + 0x548]
	0x03DE0524 BL 0x1C16CF4
	0x03DE0528 ADRP X0, 0x389000
	0x03DE052C LDR X0, [X0 + 0x550]
	0x03DE0530 BL 0x1C16CF4
	0x03DE0534 ADRP X0, 0x389000
	0x03DE0538 LDR X0, [X0 + 0x558]
	0x03DE053C BL 0x1C16CF4
	0x03DE0540 MOVZ W8, 0x1
	0x03DE0544 STRB W8, [X22 + 0x1D4]
	0x03DE0548 LDR X0, [X24]
	0x03DE054C LDR W8, [X0 + 0xE0]
	0x03DE0550 CBNZ W8, 0x3DE0558
	0x03DE0554 BL 0x1C16DFC
	0x03DE0558 ADRP X25, 0x313000
	0x03DE055C ADRP X23, 0x313000
	0x03DE0560 LDR X25, [X25 + 0x758]
	0x03DE0564 LDR X23, [X23 + 0xA28]
	0x03DE0568 SUBS W21, W21, 0x1
	0x03DE056C B.MI 0x3DE05F0
	0x03DE0570 LDR X0, [X24]
	0x03DE0574 LDR W8, [X0 + 0xE0]
	0x03DE0578 CBNZ W8, 0x3DE0580
	0x03DE057C BL 0x1C16DFC
	0x03DE0580 LDR X22, [X20 + 0x10]
	0x03DE0584 CBZ X22, 0x3DE06F0
	0x03DE0588 LDR W8, [X22 + 0x18]
	0x03DE058C CMP W21, W8
	0x03DE0590 B.GE 0x3DE05F0
	0x03DE0594 LDR X0, [X24]
	0x03DE0598 LDR W8, [X0 + 0xE0]
	0x03DE059C CBNZ W8, 0x3DE05A4
	0x03DE05A0 BL 0x1C16DFC
	0x03DE05A4 ADRP X8, 0x389000
	0x03DE05A8 LDR X8, [X8 + 0x4F8]
	0x03DE05AC MOV X0, X22
	0x03DE05B0 MOV W1, W21
	0x03DE05B4 LDR X2, [X8]
	0x03DE05B8 BL 0x314F864
	0x03DE05BC MOV X22, X1
	0x03DE05C0 TBNZ X22, 0x0, 0x3DE0620
	0x03DE05C4 LDR X0, [X24]
	0x03DE05C8 LDR W8, [X0 + 0xE0]
	0x03DE05CC CBNZ W8, 0x3DE05D4
	0x03DE05D0 BL 0x1C16DFC
	0x03DE05D4 LDR X0, [X25]
	0x03DE05D8 ADD X1, X31, 0x8
	0x03DE05DC STR W21, [X31 + 0x8]
	0x03DE05E0 BL 0x1C16E04
	0x03DE05E4 ADRP X8, 0x389000
	0x03DE05E8 LDR X8, [X8 + 0x558]
	0x03DE05EC B 0x3DE06A0
	0x03DE05F0 LDR X0, [X24]
	0x03DE05F4 ADRP X19, 0x389000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X20, 0x609000
	009 Move W8, [X20+457]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0x385000
	016 Move X0, [X0+2384]
	017 Call 0x1C17CF4
	018 Move X0, 0x385000
	019 Move X0, [X0+2392]
	020 Call 0x1C17CF4
	021 Move X0, 0x385000
	022 Move X0, [X0+2400]
	023 Call 0x1C17CF4
	024 Move X0, 0x33D000
	025 Move X0, [X0+3736]
	026 Call 0x1C17CF4
	027 Move X0, 0x383000
	028 Move X0, [X0+1704]
	029 Call 0x1C17CF4
	030 Move X0, 0x385000
	031 Move X0, [X0+1784]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+457], W8
	035 Move X20, 0x33D000
	036 Move X21, 0x385000
	037 Move X20, [X20+3736]
	038 Move X21, [X21+1784]
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+80], X31
	041 Move [X31+48], V0
	042 Move [X31+56], V0
	043 Move TEMP, X19
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {54}
	047 Move X0, [X21]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X31
	053 Call UIRenderDevice.PrepareForGfxDeviceRecreate
	054 Move X0, [X20]
	055 Move X22, 0x385000
	056 Move W8, [X0+224]
	057 Move X22, [X22+2384]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Add X8, X31, 8
	062 Move X0, X31
	063 Call UIElementsUtility.GetPanelsIterator
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Move X8, [X31+40]
	067 Move X1, [X22]
	068 Add X0, X31, 48
	069 Move [X31+48], V0
	070 Move [X31+56], V1
	071 Move [X31+80], X8
	072 Call Enumerator<Int32, Object>.MoveNext, X0
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {125}
	077 Move X23, 0x383000
	078 Move X23, [X23+1704]
	079 Move X20, X31
	080 Move X0, [X31+72]
	081 Compare X0, 0
	082 JumpIfEqual {145}
	083 Move X8, [X0]
	084 Move TEMP, X19
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {111}
	088 Move X9, [X8+1080]
	089 Move X2, [X8+1088]
	090 Move W1, 6
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Compare X0, 0
	093 JumpIfEqual {104}
	094 Move X9, [X0]
	095 Move X8, [X23]
	096 Move W11, [X9+304]
	097 Move W10, [X8+304]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X9, [X9+200]
	100 Add X9, X9, X10
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Call UIRRepaintUpdater.DestroyRenderChain, X0
	104 Move X1, [X22]
	105 Add X0, X31, 48
	106 Call Enumerator<Int32, Object>.MoveNext, X0
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {80}
	111 Move X9, [X8+1128]
	112 Move X1, [X8+1136]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Compare X0, 0
	117 JumpIfEqual {104}
	118 Compare X20, 0
	119 JumpIfEqual {145}
	120 Move X8, [X20]
	121 Move X0, X20
	122 Move X9, [X8+408]
	123 Move X1, [X8+416]
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move X0, [X21]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X31
	131 Move TEMP, X19
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {136}
	135 Call UIRenderDevice.WrapUpGfxDeviceRecreate
	136 Call UIRenderDevice.FlushAllPendingDeviceDisposes
	137 Move X20, [X31+128]
	138 Move X19, [X31+136]
	139 Move X22, [X31+112]
	140 Move X21, [X31+120]
	141 Move X30, [X31+96]
	142 Move X23, [X31+104]
	143 Add X31, X31, 144
	144 Return 
	145 Call 0x1C17F20

Method: System.Void OnPanelChanged(UnityEngine.UIElements.BaseVisualElementPanel obj)

Disassembly:
	0x03DE0648 LDR X8, [X8 + 0x520]
	0x03DE064C MOV X0, X20
	0x03DE0650 MOV W1, W21
	0x03DE0654 MOV X2, X19
	0x03DE0658 LDR X4, [X8]
	0x03DE065C MOV X3, X22

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call UIRRepaintUpdater.DetachFromPanel, X0
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Call UIRRepaintUpdater.AttachToPanel, X0
	009 Return 

Method: System.Void AttachToPanel()

Disassembly:
	0x03DE07F4 CSET W0, EQ
	0x03DE07F8 MOV X1, X31
	0x03DE07FC BL 0x3C06E58
	0x03DE0800 LDR X0, [X19 + 0x10]
	0x03DE0804 CBZ X0, 0x3DE0858
	0x03DE0808 ADRP X9, 0x389000
	0x03DE080C LDR W8, [X31 + 0x8]
	0x03DE0810 LDR X9, [X9 + 0x520]
	0x03DE0814 MOV X2, X20
	0x03DE0818 SUB W1, W8, 0x1
	0x03DE081C LDR X4, [X9]
	0x03DE0820 MOVZ X9, 0x1
	0x03DE0824 ADD X3, X21, X9
	0x03DE0828 BL 0x314F8BC
	0x03DE082C LDR W0, [X31 + 0x8]
	0x03DE0830 B 0x3DE0844
	0x03DE0834 MOV X0, X19
	0x03DE0838 MOV X1, X20
	0x03DE083C MOV W2, W31
	0x03DE0840 BL 0x3DE0214
	0x03DE0844 LDP X20, X19, [X31 + 0x20]
	0x03DE0848 LDP X22, X21, [X31 + 0x10]
	0x03DE084C MOV W0, W0
	0x03DE0850 LDR X30, [X31], #0x30
	0x03DE0854 RET
	0x03DE0858 BL 0x1C16F20
	0x03DE085C STR X30, [X31 - 0x50]!
	0x03DE0860 STP X26, X25, [X31 + 0x10]
	0x03DE0864 STP X24, X23, [X31 + 0x20]
	0x03DE0868 STP X22, X21, [X31 + 0x30]
	0x03DE086C STP X20, X19, [X31 + 0x40]
	0x03DE0870 ADRP X21, 0x608000
	0x03DE0874 ADRP X24, 0x33B000
	0x03DE0878 LDRB W8, [X21 + 0x1D7]
	0x03DE087C LDR X24, [X24 + 0x620]
	0x03DE0880 MOV X20, X1
	0x03DE0884 MOV X19, X0
	0x03DE0888 TBNZ X8, 0x0, 0x3DE090C
	0x03DE088C ADRP X0, 0x313000
	0x03DE0890 LDR X0, [X0 + 0xA28]
	0x03DE0894 BL 0x1C16CF4
	0x03DE0898 ADRP X0, 0x389000
	0x03DE089C LDR X0, [X0 + 0x568]
	0x03DE08A0 BL 0x1C16CF4
	0x03DE08A4 ADRP X0, 0x313000
	0x03DE08A8 LDR X0, [X0 + 0x758]
	0x03DE08AC BL 0x1C16CF4
	0x03DE08B0 ADRP X0, 0x389000
	0x03DE08B4 LDR X0, [X0 + 0x4F0]
	0x03DE08B8 BL 0x1C16CF4
	0x03DE08BC ADRP X0, 0x389000
	0x03DE08C0 LDR X0, [X0 + 0x4F8]
	0x03DE08C4 BL 0x1C16CF4
	0x03DE08C8 ADRP X0, 0x389000
	0x03DE08CC LDR X0, [X0 + 0x520]
	0x03DE08D0 BL 0x1C16CF4
	0x03DE08D4 ADRP X0, 0x389000
	0x03DE08D8 LDR X0, [X0 + 0x570]
	0x03DE08DC BL 0x1C16CF4
	0x03DE08E0 ADRP X0, 0x33B000
	0x03DE08E4 LDR X0, [X0 + 0x620]
	0x03DE08E8 BL 0x1C16CF4
	0x03DE08EC ADRP X0, 0x389000
	0x03DE08F0 LDR X0, [X0 + 0x578]
	0x03DE08F4 BL 0x1C16CF4
	0x03DE08F8 ADRP X0, 0x389000
	0x03DE08FC LDR X0, [X0 + 0x580]
	0x03DE0900 BL 0x1C16CF4
	0x03DE0904 MOVZ W8, 0x1
	0x03DE0908 STRB W8, [X21 + 0x1D7]
	0x03DE090C LDR X0, [X24]
	0x03DE0910 LDR W8, [X0 + 0xE0]
	0x03DE0914 CBNZ W8, 0x3DE091C
	0x03DE0918 BL 0x1C16DFC
	0x03DE091C ADRP X26, 0x313000
	0x03DE0920 ADRP X25, 0x313000
	0x03DE0924 LDR X26, [X26 + 0x758]
	0x03DE0928 LDR X25, [X25 + 0xA28]
	0x03DE092C SUBS W21, W20, 0x1
	0x03DE0930 B.MI 0x3DE0A30
	0x03DE0934 LDR X0, [X24]
	0x03DE0938 LDR W8, [X0 + 0xE0]
	0x03DE093C CBNZ W8, 0x3DE0944
	0x03DE0940 BL 0x1C16DFC
	0x03DE0944 LDR X22, [X19 + 0x10]
	0x03DE0948 CBZ X22, 0x3DE0AD8
	0x03DE094C LDR W8, [X22 + 0x18]
	0x03DE0950 CMP W21, W8
	0x03DE0954 B.GE 0x3DE0A30
	0x03DE0958 LDR X0, [X24]
	0x03DE095C LDR W8, [X0 + 0xE0]
	0x03DE0960 CBNZ W8, 0x3DE0968
	0x03DE0964 BL 0x1C16DFC
	0x03DE0968 ADRP X8, 0x389000
	0x03DE096C LDR X8, [X8 + 0x4F8]
	0x03DE0970 MOV X0, X22
	0x03DE0974 MOV W1, W21
	0x03DE0978 LDR X2, [X8]
	0x03DE097C BL 0x314F864
	0x03DE0980 UBFM X8, X1, 0x20, 0x3F
	0x03DE0984 CMP W8, 0x0
	0x03DE0988 B.LE 0x3DE0AA8
	0x03DE098C SUBS W8, W8, 0x1
	0x03DE0990 MOV X22, X1
	0x03DE0994 MOV X23, X0
	0x03DE0998 BFM X22, X8, 0x20, 0x1F
	0x03DE099C B.NE 0x3DE09E4
	0x03DE09A0 TBNZ X1, 0x0, 0x3DE09C0
	0x03DE09A4 LDR X0, [X19 + 0x18]
	0x03DE09A8 CBZ X0, 0x3DE0AD8
	0x03DE09AC ADRP X8, 0x389000
	0x03DE09B0 LDR X8, [X8 + 0x568]
	0x03DE09B4 MOV X1, X23
	0x03DE09B8 LDR X2, [X8]
	0x03DE09BC BL 0x2ABBFA0
	0x03DE09C0 LDR X0, [X19 + 0x20]
	0x03DE09C4 CBZ X0, 0x3DE0AD8
	0x03DE09C8 ADRP X8, 0x389000
	0x03DE09CC LDR X8, [X8 + 0x570]
	0x03DE09D0 AND X1, X20, 0x0
	0x03DE09D4 AND X22, X22, 0x7FFFFFFF

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x609000
	008 Move X20, 0x314000
	009 Move W8, [X21+458]
	010 Move X20, [X20+2600]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x315000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x314000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x389000
	023 Move X0, [X0+3984]
	024 Call 0x1C17CF4
	025 Move X0, 0x38A000
	026 Move X0, [X0+1216]
	027 Call 0x1C17CF4
	028 Move X0, 0x38A000
	029 Move X0, [X0+1224]
	030 Call 0x1C17CF4
	031 Move X0, 0x38A000
	032 Move X0, [X0+1232]
	033 Call 0x1C17CF4
	034 Move X0, 0x38A000
	035 Move X0, [X0+1240]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+458], W8
	039 Move X0, [X20]
	040 Move X20, [X19+32]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Move X1, X31
	048 Call Debug.Assert, X0
	049 Move X0, X19
	050 Move X1, X31
	051 Call BaseVisualTreeUpdater.get_panel, X0
	052 Compare X0, 0
	053 JumpIfEqual {133}
	054 Move X22, 0x315000
	055 Move X21, 0x38A000
	056 Move X22, [X22+3696]
	057 Move X21, [X21+1216]
	058 Move X0, X19
	059 Move X1, X31
	060 Call BaseVisualTreeUpdater.get_panel, X0
	061 Move [X19+32], X0
	062 Move X20, X0
	063 Move X0, [X22]
	064 Call 0x1C17F10
	065 Move X2, [X21]
	066 Move X1, X19
	067 Move X3, X31
	068 Move X21, X0
	069 Call Action..ctor, X0, X1, X2
	070 Compare X20, 0
	071 JumpIfEqual {140}
	072 Move X23, 0x38A000
	073 Move X23, [X23+1232]
	074 Move X0, X20
	075 Move X1, X21
	076 Move X2, X31
	077 Call BaseVisualElementPanel.add_atlasChanged, X0, X1
	078 Move X0, [X22]
	079 Move X20, [X19+32]
	080 Call 0x1C17F10
	081 Move X2, [X23]
	082 Move X1, X19
	083 Move X3, X31
	084 Move X21, X0
	085 Call Action..ctor, X0, X1, X2
	086 Compare X20, 0
	087 JumpIfEqual {140}
	088 Move X23, 0x38A000
	089 Move X23, [X23+1240]
	090 Move X0, X20
	091 Move X1, X21
	092 Move X2, X31
	093 Call BaseVisualElementPanel.add_standardShaderChanged, X0, X1
	094 Move X0, [X22]
	095 Move X20, [X19+32]
	096 Call 0x1C17F10
	097 Move X2, [X23]
	098 Move X1, X19
	099 Move X3, X31
	100 Move X21, X0
	101 Call Action..ctor, X0, X1, X2
	102 Compare X20, 0
	103 JumpIfEqual {140}
	104 Move X22, 0x389000
	105 Move X23, 0x38A000
	106 Move X22, [X22+3984]
	107 Move X23, [X23+1224]
	108 Move X0, X20
	109 Move X1, X21
	110 Move X2, X31
	111 Call BaseVisualElementPanel.add_standardWorldSpaceShaderChanged, X0, X1
	112 Move X0, [X22]
	113 Move X20, [X19+32]
	114 Call 0x1C17F10
	115 Move X2, [X23]
	116 Move X1, X19
	117 Move X3, X31
	118 Move X21, X0
	119 Call HierarchyEvent..ctor, X0, X1, X2
	120 Compare X20, 0
	121 JumpIfEqual {140}
	122 Move X0, X20
	123 Move X1, X21
	124 Move X20, [X31+32]
	125 Move X19, [X31+40]
	126 Move X22, [X31+16]
	127 Move X21, [X31+24]
	128 Move X2, X31
	129 Move X30, [X31+48]
	130 Move X23, [X31+56]
	131 Call BaseVisualElementPanel.add_hierarchyChanged, X0, X1
	132 Return 
	133 Move X20, [X31+32]
	134 Move X19, [X31+40]
	135 Move X22, [X31+16]
	136 Move X21, [X31+24]
	137 Move X30, [X31+48]
	138 Move X23, [X31+56]
	139 Return 
	140 Call 0x1C17F20

Method: System.Void DetachFromPanel()

Disassembly:
	0x03DE0660 LDP X20, X19, [X31 + 0x40]
	0x03DE0664 LDP X22, X21, [X31 + 0x30]
	0x03DE0668 LDP X24, X23, [X31 + 0x20]
	0x03DE066C LDP X30, X25, [X31 + 0x10]
	0x03DE0670 ADD X31, X31, 0x50
	0x03DE0674 B 0x314F8BC
	0x03DE0678 LDR X0, [X24]
	0x03DE067C LDR W8, [X0 + 0xE0]
	0x03DE0680 CBNZ W8, 0x3DE0688
	0x03DE0684 BL 0x1C16DFC
	0x03DE0688 LDR X0, [X25]
	0x03DE068C ADD X1, X31, 0x4
	0x03DE0690 STR W21, [X31 + 0x4]
	0x03DE0694 BL 0x1C16E04
	0x03DE0698 ADRP X8, 0x389000
	0x03DE069C LDR X8, [X8 + 0x550]
	0x03DE06A0 LDR X8, [X8]
	0x03DE06A4 MOV X1, X0
	0x03DE06A8 MOV X0, X8
	0x03DE06AC MOV X2, X31
	0x03DE06B0 BL 0x321EFD0
	0x03DE06B4 LDR X8, [X23]
	0x03DE06B8 MOV X19, X0
	0x03DE06BC LDR W9, [X8 + 0xE0]
	0x03DE06C0 CBNZ W9, 0x3DE06CC
	0x03DE06C4 MOV X0, X8
	0x03DE06C8 BL 0x1C16DFC
	0x03DE06CC MOV X0, X19
	0x03DE06D0 MOV X1, X31
	0x03DE06D4 BL 0x3C0649C
	0x03DE06D8 LDP X20, X19, [X31 + 0x40]
	0x03DE06DC LDP X22, X21, [X31 + 0x30]
	0x03DE06E0 LDP X24, X23, [X31 + 0x20]
	0x03DE06E4 LDP X30, X25, [X31 + 0x10]
	0x03DE06E8 ADD X31, X31, 0x50
	0x03DE06EC RET
	0x03DE06F0 BL 0x1C16F20
	0x03DE06F4 STR X30, [X31 - 0x30]!
	0x03DE06F8 STP X22, X21, [X31 + 0x10]
	0x03DE06FC STP X20, X19, [X31 + 0x20]
	0x03DE0700 ADRP X21, 0x608000
	0x03DE0704 LDRB W8, [X21 + 0x1D6]
	0x03DE0708 MOV X20, X1
	0x03DE070C MOV X19, X0
	0x03DE0710 TBNZ X8, 0x0, 0x3DE0758
	0x03DE0714 ADRP X0, 0x313000
	0x03DE0718 LDR X0, [X0 + 0xA28]
	0x03DE071C BL 0x1C16CF4
	0x03DE0720 ADRP X0, 0x389000
	0x03DE0724 LDR X0, [X0 + 0x560]
	0x03DE0728 BL 0x1C16CF4
	0x03DE072C ADRP X0, 0x389000
	0x03DE0730 LDR X0, [X0 + 0x4F8]
	0x03DE0734 BL 0x1C16CF4
	0x03DE0738 ADRP X0, 0x389000
	0x03DE073C LDR X0, [X0 + 0x520]
	0x03DE0740 BL 0x1C16CF4
	0x03DE0744 ADRP X0, 0x33B000
	0x03DE0748 LDR X0, [X0 + 0x620]
	0x03DE074C BL 0x1C16CF4
	0x03DE0750 MOVZ W8, 0x1
	0x03DE0754 STRB W8, [X21 + 0x1D6]
	0x03DE0758 STR W31, [X31 + 0x8]
	0x03DE075C LDR X0, [X19 + 0x18]
	0x03DE0760 CBZ X0, 0x3DE0858
	0x03DE0764 ADRP X8, 0x389000
	0x03DE0768 LDR X8, [X8 + 0x560]
	0x03DE076C ADD X2, X31, 0x8
	0x03DE0770 MOV X1, X20
	0x03DE0774 LDR X3, [X8]
	0x03DE0778 BL 0x2ABC5D4
	0x03DE077C TBZ X0, 0x0, 0x3DE0834
	0x03DE0780 ADRP X8, 0x33B000
	0x03DE0784 LDR X8, [X8 + 0x620]
	0x03DE0788 LDR X20, [X19 + 0x10]
	0x03DE078C LDR X0, [X8]
	0x03DE0790 LDR W8, [X0 + 0xE0]
	0x03DE0794 CBNZ W8, 0x3DE079C
	0x03DE0798 BL 0x1C16DFC
	0x03DE079C CBZ X20, 0x3DE0858
	0x03DE07A0 ADRP X9, 0x389000
	0x03DE07A4 LDR W8, [X31 + 0x8]
	0x03DE07A8 LDR X9, [X9 + 0x4F8]
	0x03DE07AC MOV X0, X20
	0x03DE07B0 SUB W1, W8, 0x1
	0x03DE07B4 LDR X2, [X9]
	0x03DE07B8 BL 0x314F864
	0x03DE07BC ADRP X8, 0x313000
	0x03DE07C0 LDR X8, [X8 + 0xA28]
	0x03DE07C4 MOV X20, X0
	0x03DE07C8 MOV X21, X1
	0x03DE07CC UBFM X22, X1, 0x20, 0x3F
	0x03DE07D0 LDR X0, [X8]
	0x03DE07D4 LDR W8, [X0 + 0xE0]
	0x03DE07D8 CBNZ W8, 0x3DE07E0
	0x03DE07DC BL 0x1C16DFC
	0x03DE07E0 CMP W22, 0x0
	0x03DE07E4 CSET W0, GT
	0x03DE07E8 MOV X1, X31
	0x03DE07EC BL 0x3C06E58
	0x03DE07F0 ANDS X31, X21, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x609000
	008 Move W8, [X20+459]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {34}
	014 Move X0, 0x315000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move X0, 0x389000
	018 Move X0, [X0+3984]
	019 Call 0x1C17CF4
	020 Move X0, 0x38A000
	021 Move X0, [X0+1216]
	022 Call 0x1C17CF4
	023 Move X0, 0x38A000
	024 Move X0, [X0+1224]
	025 Call 0x1C17CF4
	026 Move X0, 0x38A000
	027 Move X0, [X0+1232]
	028 Call 0x1C17CF4
	029 Move X0, 0x38A000
	030 Move X0, [X0+1240]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+459], W8
	034 Move X8, [X19+32]
	035 Compare X8, 0
	036 JumpIfEqual {108}
	037 Move X22, 0x315000
	038 Move X21, 0x38A000
	039 Move X22, [X22+3696]
	040 Move X21, [X21+1216]
	041 Move X0, X19
	042 Call UIRRepaintUpdater.DestroyRenderChain, X0
	043 Move X0, [X22]
	044 Move X20, [X19+32]
	045 Call 0x1C17F10
	046 Move X2, [X21]
	047 Move X1, X19
	048 Move X3, X31
	049 Move X21, X0
	050 Call Action..ctor, X0, X1, X2
	051 Compare X20, 0
	052 JumpIfEqual {115}
	053 Move X23, 0x38A000
	054 Move X23, [X23+1232]
	055 Move X0, X20
	056 Move X1, X21
	057 Move X2, X31
	058 Call BaseVisualElementPanel.remove_atlasChanged, X0, X1
	059 Move X0, [X22]
	060 Move X20, [X19+32]
	061 Call 0x1C17F10
	062 Move X2, [X23]
	063 Move X1, X19
	064 Move X3, X31
	065 Move X21, X0
	066 Call Action..ctor, X0, X1, X2
	067 Compare X20, 0
	068 JumpIfEqual {115}
	069 Move X23, 0x38A000
	070 Move X23, [X23+1240]
	071 Move X0, X20
	072 Move X1, X21
	073 Move X2, X31
	074 Call BaseVisualElementPanel.remove_standardShaderChanged, X0, X1
	075 Move X0, [X22]
	076 Move X20, [X19+32]
	077 Call 0x1C17F10
	078 Move X2, [X23]
	079 Move X1, X19
	080 Move X3, X31
	081 Move X21, X0
	082 Call Action..ctor, X0, X1, X2
	083 Compare X20, 0
	084 JumpIfEqual {115}
	085 Move X22, 0x389000
	086 Move X23, 0x38A000
	087 Move X22, [X22+3984]
	088 Move X23, [X23+1224]
	089 Move X0, X20
	090 Move X1, X21
	091 Move X2, X31
	092 Call BaseVisualElementPanel.remove_standardWorldSpaceShaderChanged, X0, X1
	093 Move X0, [X22]
	094 Move X20, [X19+32]
	095 Call 0x1C17F10
	096 Move X2, [X23]
	097 Move X1, X19
	098 Move X3, X31
	099 Move X21, X0
	100 Call HierarchyEvent..ctor, X0, X1, X2
	101 Compare X20, 0
	102 JumpIfEqual {115}
	103 Move X0, X20
	104 Move X1, X21
	105 Move X2, X31
	106 Call BaseVisualElementPanel.remove_hierarchyChanged, X0, X1
	107 Move [X19+32], X31
	108 Move X20, [X31+32]
	109 Move X19, [X31+40]
	110 Move X22, [X31+16]
	111 Move X21, [X31+24]
	112 Move X30, [X31+48]
	113 Move X23, [X31+56]
	114 Return 
	115 Call 0x1C17F20

Method: System.Void InitRenderChain()

Disassembly:
	0x03DE01F0 RET
	0x03DE01F4 BL 0x1C16F20
	0x03DE01F8 STR X30, [X31 - 0x10]!
	0x03DE01FC MOVZ W2, 0x1
	0x03DE0200 MOV X1, X31
	0x03DE0204 BL 0x3DE0214
	0x03DE0208 AND X0, X0, 0x0
	0x03DE020C LDR X30, [X31], #0x10
	0x03DE0210 RET
	0x03DE0214 STR X30, [X31 - 0x40]!
	0x03DE0218 STP X24, X23, [X31 + 0x10]
	0x03DE021C STP X22, X21, [X31 + 0x20]
	0x03DE0220 STP X20, X19, [X31 + 0x30]
	0x03DE0224 ADRP X22, 0x608000
	0x03DE0228 LDRB W8, [X22 + 0x1D5]
	0x03DE022C MOV W20, W2
	0x03DE0230 MOV X19, X1
	0x03DE0234 MOV X21, X0
	0x03DE0238 TBNZ X8, 0x0, 0x3DE02C8
	0x03DE023C ADRP X0, 0x313000
	0x03DE0240 LDR X0, [X0 + 0xA28]
	0x03DE0244 BL 0x1C16CF4
	0x03DE0248 ADRP X0, 0x389000
	0x03DE024C LDR X0, [X0 + 0x510]
	0x03DE0250 BL 0x1C16CF4
	0x03DE0254 ADRP X0, 0x313000
	0x03DE0258 LDR X0, [X0 + 0x758]
	0x03DE025C BL 0x1C16CF4
	0x03DE0260 ADRP X0, 0x389000
	0x03DE0264 LDR X0, [X0 + 0x518]
	0x03DE0268 BL 0x1C16CF4
	0x03DE026C ADRP X0, 0x389000
	0x03DE0270 LDR X0, [X0 + 0x4F0]
	0x03DE0274 BL 0x1C16CF4
	0x03DE0278 ADRP X0, 0x389000
	0x03DE027C LDR X0, [X0 + 0x520]
	0x03DE0280 BL 0x1C16CF4
	0x03DE0284 ADRP X0, 0x389000
	0x03DE0288 LDR X0, [X0 + 0x528]
	0x03DE028C BL 0x1C16CF4
	0x03DE0290 ADRP X0, 0x389000
	0x03DE0294 LDR X0, [X0 + 0x530]
	0x03DE0298 BL 0x1C16CF4
	0x03DE029C ADRP X0, 0x33B000
	0x03DE02A0 LDR X0, [X0 + 0x620]
	0x03DE02A4 BL 0x1C16CF4
	0x03DE02A8 ADRP X0, 0x389000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+536]
	007 Move X1, [X8+544]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move X8, [X19+32]
	010 Move [X19+40], X0
	011 Compare X8, 0
	012 JumpIfEqual {34}
	013 Move X9, [X8]
	014 Move X0, X8
	015 Move X10, [X9+920]
	016 Move X1, [X9+928]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Compare X0, 0
	019 JumpIfEqual {34}
	020 Move X0, [X19+32]
	021 Compare X0, 0
	022 JumpIfEqual {57}
	023 Move X8, [X0]
	024 Move X20, [X19+40]
	025 Move X9, [X8+920]
	026 Move X1, [X8+928]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Compare X20, 0
	029 JumpIfEqual {57}
	030 Move X1, X0
	031 Move X0, X20
	032 Move X2, X31
	033 Call RenderChain.UIEOnChildAdded, X0, X1
	034 Move X0, X19
	035 Call UIRRepaintUpdater.OnPanelStandardShaderChanged, X0
	036 Move X0, X19
	037 Move X1, X31
	038 Call BaseVisualTreeUpdater.get_panel, X0
	039 Compare X0, 0
	040 JumpIfEqual {57}
	041 Move X8, [X0]
	042 Move X9, [X8+1016]
	043 Move X1, [X8+1024]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Compare W0, 0
	046 JumpIfEqual {51}
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Return 
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Call UIRRepaintUpdater.OnPanelStandardWorldSpaceShaderChanged, X0
	056 Return 
	057 Call 0x1C17F20

Method: System.Void DestroyRenderChain()

Disassembly:
	0x03DE05F8 LDR W8, [X0 + 0xE0]
	0x03DE05FC LDR X19, [X19 + 0x548]
	0x03DE0600 CBNZ W8, 0x3DE0608
	0x03DE0604 BL 0x1C16DFC
	0x03DE0608 LDR X0, [X25]
	0x03DE060C ADD X1, X31, 0xC
	0x03DE0610 STR W21, [X31 + 0xC]
	0x03DE0614 BL 0x1C16E04
	0x03DE0618 LDR X8, [X19]
	0x03DE061C B 0x3DE06A4
	0x03DE0620 UBFM X8, X22, 0x20, 0x3F
	0x03DE0624 CMP W8, 0x0
	0x03DE0628 B.LE 0x3DE0678
	0x03DE062C LDR X0, [X24]
	0x03DE0630 LDR X20, [X20 + 0x10]
	0x03DE0634 LDR W8, [X0 + 0xE0]
	0x03DE0638 CBNZ W8, 0x3DE0640
	0x03DE063C BL 0x1C16DFC
	0x03DE0640 CBZ X20, 0x3DE06F0
	0x03DE0644 ADRP X8, 0x389000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfEqual {23}
	007 Move X1, X31
	008 Call RenderChain.Dispose, X0
	009 Move X0, [X19+32]
	010 Move [X19+40], X31
	011 Compare X0, 0
	012 JumpIfEqual {26}
	013 Move X8, [X0]
	014 Move X9, [X8+920]
	015 Move X1, [X8+928]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move X1, X0
	018 Move X0, X19
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call UIRRepaintUpdater.ResetAllElementsDataRecursive, X0, X1
	022 Return 
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return 
	026 Call 0x1C17F20

Method: System.Void OnPanelAtlasChanged()

Disassembly:
	0x03DE0D94 SUBS X9, X9, 0x1

ISIL:
	001 Call UIRRepaintUpdater.DestroyRenderChain, X0
	002 Return 

Method: System.Void OnPanelHierarchyChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.HierarchyChangeType changeType)

Disassembly:
	0x03DE0D98 ADD X10, X10, 0x10
	0x03DE0D9C B.NE 0x3DE0D88
	0x03DE0DA0 MOVZ W2, 0xB
	0x03DE0DA4 MOV X0, X19
	0x03DE0DA8 BL 0x1C5C788
	0x03DE0DAC B 0x3DE0DC0
	0x03DE0DB0 LDR W9, [X10]
	0x03DE0DB4 ADD W9, W9, 0xB
	0x03DE0DB8 ADD X8, X8, W9, 0x4, SXTW
	0x03DE0DBC ADD X0, X8, 0x138
	0x03DE0DC0 LDP X8, X1, [X0]
	0x03DE0DC4 MOV X0, X19
	0x03DE0DC8 BLR X8
	0x03DE0DCC FCMP S0, S8

ISIL:
	001 Move X0, [X0+40]
	002 Compare X0, 0
	003 JumpIfEqual {11}
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Compare W2, 0
	007 JumpIfNotEqual {11}
	008 Move X2, X31
	009 Call RenderChain.UIEOnChildAdded, X0, X1
	010 Return 
	011 Return 
	012 Move X2, X31
	013 Call RenderChain.UIEOnChildrenReordered, X0, X1
	014 Return 
	015 Move X2, X31
	016 Call RenderChain.UIEOnChildRemoving, X0, X1
	017 Return 

Method: System.Void OnPanelStandardShaderChanged()

Disassembly:
	0x03DE09D8 LDR X2, [X8]
	0x03DE09DC BL 0x260313C
	0x03DE09E0 MOV X23, X31
	0x03DE09E4 LDR X0, [X24]
	0x03DE09E8 LDR X19, [X19 + 0x10]
	0x03DE09EC LDR W8, [X0 + 0xE0]
	0x03DE09F0 CBNZ W8, 0x3DE09F8
	0x03DE09F4 BL 0x1C16DFC
	0x03DE09F8 CBZ X19, 0x3DE0AD8
	0x03DE09FC ADRP X8, 0x389000
	0x03DE0A00 LDR X8, [X8 + 0x520]
	0x03DE0A04 MOV X0, X19
	0x03DE0A08 MOV W1, W21
	0x03DE0A0C MOV X2, X23
	0x03DE0A10 LDR X4, [X8]
	0x03DE0A14 MOV X3, X22
	0x03DE0A18 LDP X20, X19, [X31 + 0x40]
	0x03DE0A1C LDP X22, X21, [X31 + 0x30]
	0x03DE0A20 LDP X24, X23, [X31 + 0x20]
	0x03DE0A24 LDP X26, X25, [X31 + 0x10]
	0x03DE0A28 LDR X30, [X31], #0x50
	0x03DE0A2C B 0x314F8BC
	0x03DE0A30 LDR X0, [X24]
	0x03DE0A34 ADRP X19, 0x389000
	0x03DE0A38 LDR W8, [X0 + 0xE0]
	0x03DE0A3C LDR X19, [X19 + 0x578]
	0x03DE0A40 CBNZ W8, 0x3DE0A48
	0x03DE0A44 BL 0x1C16DFC
	0x03DE0A48 LDR X0, [X26]
	0x03DE0A4C ADD X1, X31, 0xC
	0x03DE0A50 STR W21, [X31 + 0xC]
	0x03DE0A54 BL 0x1C16E04
	0x03DE0A58 LDR X8, [X19]
	0x03DE0A5C MOV X1, X0
	0x03DE0A60 MOV X0, X8
	0x03DE0A64 MOV X2, X31
	0x03DE0A68 BL 0x321EFD0
	0x03DE0A6C LDR X8, [X25]
	0x03DE0A70 MOV X19, X0
	0x03DE0A74 LDR W9, [X8 + 0xE0]
	0x03DE0A78 CBNZ W9, 0x3DE0A84
	0x03DE0A7C MOV X0, X8
	0x03DE0A80 BL 0x1C16DFC
	0x03DE0A84 MOV X0, X19
	0x03DE0A88 MOV X1, X31
	0x03DE0A8C BL 0x3C0649C
	0x03DE0A90 LDP X20, X19, [X31 + 0x40]
	0x03DE0A94 LDP X22, X21, [X31 + 0x30]
	0x03DE0A98 LDP X24, X23, [X31 + 0x20]
	0x03DE0A9C LDP X26, X25, [X31 + 0x10]
	0x03DE0AA0 LDR X30, [X31], #0x50
	0x03DE0AA4 RET
	0x03DE0AA8 LDR X0, [X24]
	0x03DE0AAC LDR W8, [X0 + 0xE0]
	0x03DE0AB0 CBNZ W8, 0x3DE0AB8
	0x03DE0AB4 BL 0x1C16DFC
	0x03DE0AB8 LDR X0, [X26]
	0x03DE0ABC ADD X1, X31, 0x8
	0x03DE0AC0 STR W21, [X31 + 0x8]
	0x03DE0AC4 BL 0x1C16E04
	0x03DE0AC8 ADRP X8, 0x389000
	0x03DE0ACC LDR X8, [X8 + 0x580]
	0x03DE0AD0 LDR X8, [X8]
	0x03DE0AD4 B 0x3DE0A5C
	0x03DE0AD8 BL 0x1C16F20
	0x03DE0ADC STR X30, [X31 - 0x50]!
	0x03DE0AE0 STP X26, X25, [X31 + 0x10]
	0x03DE0AE4 STP X24, X23, [X31 + 0x20]
	0x03DE0AE8 STP X22, X21, [X31 + 0x30]
	0x03DE0AEC STP X20, X19, [X31 + 0x40]
	0x03DE0AF0 ADRP X25, 0x608000
	0x03DE0AF4 ADRP X26, 0x389000
	0x03DE0AF8 ADRP X20, 0x389000
	0x03DE0AFC ADRP X24, 0x389000
	0x03DE0B00 ADRP X23, 0x389000
	0x03DE0B04 ADRP X22, 0x389000
	0x03DE0B08 ADRP X21, 0x389000
	0x03DE0B0C LDR X26, [X26 + 0x588]
	0x03DE0B10 LDRB W8, [X25 + 0x1D8]
	0x03DE0B14 LDR X20, [X20 + 0x590]
	0x03DE0B18 LDR X24, [X24 + 0x598]
	0x03DE0B1C LDR X23, [X23 + 0x5A0]
	0x03DE0B20 LDR X22, [X22 + 0x5A8]
	0x03DE0B24 LDR X21, [X21 + 0x5B0]
	0x03DE0B28 MOV X19, X0
	0x03DE0B2C TBNZ X8, 0x0, 0x3DE0B80
	0x03DE0B30 ADRP X0, 0x389000
	0x03DE0B34 LDR X0, [X0 + 0x5A0]
	0x03DE0B38 BL 0x1C16CF4
	0x03DE0B3C ADRP X0, 0x389000
	0x03DE0B40 LDR X0, [X0 + 0x598]
	0x03DE0B44 BL 0x1C16CF4
	0x03DE0B48 ADRP X0, 0x389000
	0x03DE0B4C LDR X0, [X0 + 0x590]
	0x03DE0B50 BL 0x1C16CF4
	0x03DE0B54 ADRP X0, 0x389000
	0x03DE0B58 LDR X0, [X0 + 0x588]
	0x03DE0B5C BL 0x1C16CF4
	0x03DE0B60 ADRP X0, 0x389000
	0x03DE0B64 LDR X0, [X0 + 0x5B0]
	0x03DE0B68 BL 0x1C16CF4
	0x03DE0B6C ADRP X0, 0x389000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x609000
	006 Move W8, [X20+460]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x314000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move X0, 0x314000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x33E000
	019 Move X0, [X0+576]
	020 Call 0x1C17CF4
	021 Move X0, 0x38A000
	022 Move X0, [X0+1248]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+460], W8
	026 Move X8, [X19+40]
	027 Compare X8, 0
	028 JumpIfEqual {121}
	029 Move X0, X19
	030 Move X1, X31
	031 Call BaseVisualTreeUpdater.get_panel, X0
	032 Compare X0, 0
	033 JumpIfEqual {126}
	034 Move X8, [X0]
	035 Move X21, 0x314000
	036 Move X9, [X8+1096]
	037 Move X1, [X8+1104]
	038 Move X21, [X21+1432]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X21]
	041 Move X20, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Equality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {110}
	055 Move X20, 0x33E000
	056 Move X20, [X20+576]
	057 Move X0, [X20]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X20]
	063 Move X8, [X0+184]
	064 Move X1, X31
	065 Move X0, [X8]
	066 Call Shader.Find, X0
	067 Move X8, [X21]
	068 Move X20, X0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Move X1, X31
	076 Move X2, X31
	077 Call Object.op_Inequality, X0, X1
	078 Move X8, 0x314000
	079 Move X8, [X8+2600]
	080 Move W21, W0
	081 Move X8, [X8]
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X8, 0x38A000
	088 Move X8, [X8+1248]
	089 And W0, W21, 1
	090 Move X2, X31
	091 Move X1, [X8]
	092 Call Debug.Assert, X0, X1
	093 Move X0, X20
	094 Move X1, X31
	095 Move X2, X31
	096 Call Object.op_Inequality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {110}
	101 Compare X20, 0
	102 JumpIfEqual {126}
	103 Move X0, X20
	104 Move X1, X31
	105 Call Object.get_hideFlags, X0
	106 Or W1, W0, 4
	107 Move X0, X20
	108 Move X2, X31
	109 Call Object.set_hideFlags, X0, X1
	110 Move X0, [X19+40]
	111 Compare X0, 0
	112 JumpIfEqual {126}
	113 Move X1, X20
	114 Move X20, [X31+16]
	115 Move X19, [X31+24]
	116 Move X2, X31
	117 Move X30, [X31+32]
	118 Move X21, [X31+40]
	119 Call RenderChain.set_defaultShader, X0, X1
	120 Return 
	121 Move X20, [X31+16]
	122 Move X19, [X31+24]
	123 Move X30, [X31+32]
	124 Move X21, [X31+40]
	125 Return 
	126 Call 0x1C17F20

Method: System.Void OnPanelStandardWorldSpaceShaderChanged()

Disassembly:
	0x03DE0B70 LDR X0, [X0 + 0x5A8]
	0x03DE0B74 BL 0x1C16CF4
	0x03DE0B78 MOVZ W8, 0x1
	0x03DE0B7C STRB W8, [X25 + 0x1D8]
	0x03DE0B80 LDR X0, [X26]
	0x03DE0B84 BL 0x1C16F10
	0x03DE0B88 LDR X2, [X20]
	0x03DE0B8C MOVZ W1, 0x80
	0x03DE0B90 MOV X20, X0
	0x03DE0B94 BL 0x314F3C8
	0x03DE0B98 STR X20, [X19 + 0x10]
	0x03DE0B9C LDR X0, [X24]
	0x03DE0BA0 BL 0x1C16F10
	0x03DE0BA4 LDR X2, [X23]
	0x03DE0BA8 MOVZ W1, 0x80
	0x03DE0BAC MOV X20, X0
	0x03DE0BB0 BL 0x2ABA2EC
	0x03DE0BB4 STR X20, [X19 + 0x18]
	0x03DE0BB8 LDR X0, [X22]
	0x03DE0BBC BL 0x1C16F10
	0x03DE0BC0 LDR X1, [X21]
	0x03DE0BC4 MOV X20, X0
	0x03DE0BC8 BL 0x2602B4C
	0x03DE0BCC STR X20, [X19 + 0x20]
	0x03DE0BD0 MOV X0, X19
	0x03DE0BD4 LDP X20, X19, [X31 + 0x40]
	0x03DE0BD8 LDP X22, X21, [X31 + 0x30]
	0x03DE0BDC LDP X24, X23, [X31 + 0x20]
	0x03DE0BE0 LDP X26, X25, [X31 + 0x10]
	0x03DE0BE4 MOV X1, X31
	0x03DE0BE8 LDR X30, [X31], #0x50
	0x03DE0BEC B 0x33BDD8C
	0x03DE0BF0 STR X30, [X31 - 0x20]!
	0x03DE0BF4 STP X20, X19, [X31 + 0x10]
	0x03DE0BF8 ADRP X19, 0x608000
	0x03DE0BFC ADRP X20, 0x382000
	0x03DE0C00 LDRB W8, [X19 + 0x1D9]
	0x03DE0C04 LDR X20, [X20 + 0x6B0]
	0x03DE0C08 TBNZ X8, 0x0, 0x3DE0C20
	0x03DE0C0C ADRP X0, 0x382000
	0x03DE0C10 LDR X0, [X0 + 0x6B0]
	0x03DE0C14 BL 0x1C16CF4
	0x03DE0C18 MOVZ W8, 0x1
	0x03DE0C1C STRB W8, [X19 + 0x1D9]
	0x03DE0C20 LDR X0, [X20]
	0x03DE0C24 BL 0x1C16F10
	0x03DE0C28 MOV X19, X0
	0x03DE0C2C BL 0x3DE0ADC
	0x03DE0C30 LDR X8, [X20]
	0x03DE0C34 LDR X8, [X8 + 0xB8]
	0x03DE0C38 STR X19, [X8]
	0x03DE0C3C LDP X20, X19, [X31 + 0x10]
	0x03DE0C40 LDR X30, [X31], #0x20
	0x03DE0C44 RET
	0x03DE0C48 STR X30, [X31 - 0x30]!
	0x03DE0C4C STP X22, X21, [X31 + 0x10]
	0x03DE0C50 STP X20, X19, [X31 + 0x20]
	0x03DE0C54 ADRP X21, 0x608000
	0x03DE0C58 ADRP X22, 0x313000
	0x03DE0C5C LDRB W8, [X21 + 0x1DA]
	0x03DE0C60 LDR X22, [X22 + 0xA28]
	0x03DE0C64 MOV W20, W1
	0x03DE0C68 MOV W19, W0
	0x03DE0C6C TBNZ X8, 0x0, 0x3DE0C84
	0x03DE0C70 ADRP X0, 0x313000
	0x03DE0C74 LDR X0, [X0 + 0xA28]
	0x03DE0C78 BL 0x1C16CF4
	0x03DE0C7C MOVZ W8, 0x1
	0x03DE0C80 STRB W8, [X21 + 0x1DA]
	0x03DE0C84 LDR X0, [X22]
	0x03DE0C88 LDR W8, [X0 + 0xE0]
	0x03DE0C8C CBNZ W8, 0x3DE0C94
	0x03DE0C90 BL 0x1C16DFC
	0x03DE0C94 CMP W19, W20
	0x03DE0C98 ADD W8, W20, 0x1
	0x03DE0C9C CSET W20, EQ
	0x03DE0CA0 CMP W8, W19
	0x03DE0CA4 CSET W8, EQ
	0x03DE0CA8 ORR W0, W20, W8, 0x0
	0x03DE0CAC MOV X1, X31
	0x03DE0CB0 BL 0x3C06E58
	0x03DE0CB4 MOV W0, W20
	0x03DE0CB8 LDP X20, X19, [X31 + 0x20]
	0x03DE0CBC LDP X22, X21, [X31 + 0x10]
	0x03DE0CC0 LDR X30, [X31], #0x30
	0x03DE0CC4 RET
	0x03DE0CC8 STR D8, [X31 - 0x20]!
	0x03DE0CCC STR X30, [X31 + 0x8]
	0x03DE0CD0 STP X20, X19, [X31 + 0x10]
	0x03DE0CD4 ADRP X20, 0x608000
	0x03DE0CD8 LDRB W8, [X20 + 0x1DB]
	0x03DE0CDC MOV X19, X0
	0x03DE0CE0 TBNZ X8, 0x0, 0x3DE0CF8
	0x03DE0CE4 ADRP X0, 0x33C000
	0x03DE0CE8 LDR X0, [X0 + 0x120]
	0x03DE0CEC BL 0x1C16CF4
	0x03DE0CF0 MOVZ W8, 0x1
	0x03DE0CF4 STRB W8, [X20 + 0x1DB]
	0x03DE0CF8 CBZ X19, 0x3DE0EB4
	0x03DE0CFC ADRP X20, 0x33C000
	0x03DE0D00 LDR X8, [X19]
	0x03DE0D04 LDR X20, [X20 + 0x120]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x609000
	006 Move W8, [X20+461]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x314000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move X0, 0x314000
	016 Move X0, [X0+1432]
	017 Call 0x1C17CF4
	018 Move X0, 0x33E000
	019 Move X0, [X0+576]
	020 Call 0x1C17CF4
	021 Move X0, 0x38A000
	022 Move X0, [X0+1256]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+461], W8
	026 Move X8, [X19+40]
	027 Compare X8, 0
	028 JumpIfEqual {121}
	029 Move X0, X19
	030 Move X1, X31
	031 Call BaseVisualTreeUpdater.get_panel, X0
	032 Compare X0, 0
	033 JumpIfEqual {126}
	034 Move X8, [X0]
	035 Move X21, 0x314000
	036 Move X9, [X8+1112]
	037 Move X1, [X8+1120]
	038 Move X21, [X21+1432]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X21]
	041 Move X20, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Equality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {110}
	055 Move X20, 0x33E000
	056 Move X20, [X20+576]
	057 Move X0, [X20]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X20]
	063 Move X8, [X0+184]
	064 Move X1, X31
	065 Move X0, [X8+8]
	066 Call Shader.Find, X0
	067 Move X8, [X21]
	068 Move X20, X0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X0, X20
	075 Move X1, X31
	076 Move X2, X31
	077 Call Object.op_Inequality, X0, X1
	078 Move X8, 0x314000
	079 Move X8, [X8+2600]
	080 Move W21, W0
	081 Move X8, [X8]
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X8, 0x38A000
	088 Move X8, [X8+1256]
	089 And W0, W21, 1
	090 Move X2, X31
	091 Move X1, [X8]
	092 Call Debug.Assert, X0, X1
	093 Move X0, X20
	094 Move X1, X31
	095 Move X2, X31
	096 Call Object.op_Inequality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {110}
	101 Compare X20, 0
	102 JumpIfEqual {126}
	103 Move X0, X20
	104 Move X1, X31
	105 Call Object.get_hideFlags, X0
	106 Or W1, W0, 4
	107 Move X0, X20
	108 Move X2, X31
	109 Call Object.set_hideFlags, X0, X1
	110 Move X0, [X19+40]
	111 Compare X0, 0
	112 JumpIfEqual {126}
	113 Move X1, X20
	114 Move X20, [X31+16]
	115 Move X19, [X31+24]
	116 Move X2, X31
	117 Move X30, [X31+32]
	118 Move X21, [X31+40]
	119 Call RenderChain.set_defaultWorldSpaceShader, X0, X1
	120 Return 
	121 Move X20, [X31+16]
	122 Move X19, [X31+24]
	123 Move X30, [X31+32]
	124 Move X21, [X31+40]
	125 Return 
	126 Call 0x1C17F20

Method: System.Void ResetAllElementsDataRecursive(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03DE0D08 LDRH W9, [X8 + 0x12E]
	0x03DE0D0C LDR X1, [X20]
	0x03DE0D10 CBZ X9, 0x3DE0D34
	0x03DE0D14 LDR X10, [X8 + 0xB0]
	0x03DE0D18 ADD X10, X10, 0x8
	0x03DE0D1C LDUR X11, [X10 - 0x8]
	0x03DE0D20 CMP X11, X1
	0x03DE0D24 B.EQ 0x3DE0D44
	0x03DE0D28 SUBS X9, X9, 0x1
	0x03DE0D2C ADD X10, X10, 0x10
	0x03DE0D30 B.NE 0x3DE0D1C
	0x03DE0D34 MOVZ W2, 0xA
	0x03DE0D38 MOV X0, X19
	0x03DE0D3C BL 0x1C5C788
	0x03DE0D40 B 0x3DE0D54
	0x03DE0D44 LDR W9, [X10]
	0x03DE0D48 ADD W9, W9, 0xA
	0x03DE0D4C ADD X8, X8, W9, 0x4, SXTW
	0x03DE0D50 ADD X0, X8, 0x138
	0x03DE0D54 LDP X8, X1, [X0]
	0x03DE0D58 MOV X0, X19
	0x03DE0D5C BLR X8
	0x03DE0D60 ADRP X8, 0xFFFFFFFFFCD09000
	0x03DE0D64 LDR V8, [X8 + 0xF9C]
	0x03DE0D68 FCMP S0, S8
	0x03DE0D6C B.PL 0x3DE0E78
	0x03DE0D70 LDR X8, [X19]
	0x03DE0D74 LDR X1, [X20]
	0x03DE0D78 LDRH W9, [X8 + 0x12E]
	0x03DE0D7C CBZ X9, 0x3DE0DA0
	0x03DE0D80 LDR X10, [X8 + 0xB0]
	0x03DE0D84 ADD X10, X10, 0x8
	0x03DE0D88 LDUR X11, [X10 - 0x8]
	0x03DE0D8C CMP X11, X1
	0x03DE0D90 B.EQ 0x3DE0DB0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {38}
	008 Move X19, X1
	009 Move X20, X0
	010 Add X0, X1, 136
	011 Move W2, 328
	012 Move W1, W31
	013 Call 0x3EB2B10
	014 Move X8, [X19+888]
	015 Add X0, X31, 8
	016 Move X1, X31
	017 Move [X31+8], X8
	018 Call Hierarchy.get_childCount, X0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W21, W0
	021 Move X8, [X19+888]
	022 Subtract W21, W21, 1
	023 Add X0, X31, 8
	024 Move W1, W21
	025 Move X2, X31
	026 Move [X31+8], X8
	027 Call Hierarchy.get_Item, X0, X1
	028 Move X1, X0
	029 Move X0, X20
	030 Call UIRRepaintUpdater.ResetAllElementsDataRecursive, X0, X1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+16]
	035 Move X21, [X31+24]
	036 Add X31, X31, 48
	037 Return 
	038 Call 0x1C17F20

Method: System.Boolean get_disposed()

Disassembly:
	0x03DE0DD0 B.PL 0x3DE0E78
	0x03DE0DD4 LDR X8, [X19]

ISIL:
	001 Move W0, [X0+50]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x03DE0DD8 LDR X1, [X20]
	0x03DE0DDC LDRH W9, [X8 + 0x12E]
	0x03DE0DE0 CBZ X9, 0x3DE0E04

ISIL:
	001 And W8, W1, 1
	002 Move [X0+50], W8
	003 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03DE0DE4 LDR X10, [X8 + 0xB0]
	0x03DE0DE8 ADD X10, X10, 0x8
	0x03DE0DEC LDUR X11, [X10 - 0x8]
	0x03DE0DF0 CMP X11, X1
	0x03DE0DF4 B.EQ 0x3DE0E14
	0x03DE0DF8 SUBS X9, X9, 0x1
	0x03DE0DFC ADD X10, X10, 0x10
	0x03DE0E00 B.NE 0x3DE0DEC
	0x03DE0E04 MOVZ W2, 0x2
	0x03DE0E08 MOV X0, X19
	0x03DE0E0C BL 0x1C5C788

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+50]
	004 Compare W8, 0
	005 JumpIfNotEqual {15}
	006 Move X19, X0
	007 Move TEMP, X1
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {13}
	011 Move X0, X19
	012 Call UIRRepaintUpdater.DetachFromPanel, X0
	013 Move W8, 1
	014 Move [X19+50], W8
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 

