Type: UnityEngine.UIElements.BoundsIntField

Method: System.Void .ctor()

Disassembly:
	0x03D066C0 MOV X19, X1
	0x03D066C4 CBZ X0, 0x3D066D8

ISIL:
	001 Move X1, X31

Method: System.Void .ctor(System.String label)

Disassembly:
	0x03D066C8 MOVZ W2, 0x64
	0x03D066CC MOV X1, X19
	0x03D066D0 MOV X3, X31
	0x03D066D4 BL 0x3CEE430
	0x03D066D8 CBZ X19, 0x3D066EC
	0x03D066DC MOV X0, X19
	0x03D066E0 MOV X1, X31
	0x03D066E4 LDP X30, X19, [X31], #0x10
	0x03D066E8 B 0x3D9D950
	0x03D066EC BL 0x1C16F20
	0x03D066F0 STP D9, D8, [X31 - 0x40]!
	0x03D066F4 STR X30, [X31 + 0x10]
	0x03D066F8 STP X22, X21, [X31 + 0x20]
	0x03D066FC STP X20, X19, [X31 + 0x30]
	0x03D06700 ADRP X22, 0x6E1000
	0x03D06704 LDRB W8, [X22 + 0x83A]
	0x03D06708 MOV W19, W2
	0x03D0670C MOV V8.16B, V1.16B
	0x03D06710 MOV W20, W1
	0x03D06714 MOV V9.16B, V0.16B
	0x03D06718 MOV X21, X0
	0x03D0671C TBNZ X8, 0x0, 0x3D06734
	0x03D06720 ADRP X0, 0x45C000
	0x03D06724 LDR X0, [X0 + 0xDF0]
	0x03D06728 BL 0x1C16CF4
	0x03D0672C MOVZ W8, 0x1
	0x03D06730 STRB W8, [X22 + 0x83A]
	0x03D06734 LDR X8, [X21]
	0x03D06738 MOV X0, X21
	0x03D0673C LDR X9, [X8 + 0xB18]
	0x03D06740 LDR X1, [X8 + 0xB20]
	0x03D06744 BLR X9
	0x03D06748 MOV X1, X31
	0x03D0674C MOV X22, X0
	0x03D06750 BL 0x32277A8
	0x03D06754 TBZ X0, 0x0, 0x3D0677C
	0x03D06758 ADRP X22, 0x45C000
	0x03D0675C LDR X22, [X22 + 0xDF0]
	0x03D06760 LDR X0, [X22]
	0x03D06764 LDR W8, [X0 + 0xE0]
	0x03D06768 CBNZ W8, 0x3D06774
	0x03D0676C BL 0x1C16DFC
	0x03D06770 LDR X0, [X22]
	0x03D06774 LDR X8, [X0 + 0xB8]
	0x03D06778 LDR X22, [X8 + 0x8]
	0x03D0677C MOV X0, X21
	0x03D06780 MOV X1, X22
	0x03D06784 MOV W2, W20
	0x03D06788 MOV W3, W19
	0x03D0678C LDP X20, X19, [X31 + 0x30]
	0x03D06790 LDP X22, X21, [X31 + 0x20]
	0x03D06794 LDR X30, [X31 + 0x10]
	0x03D06798 MOV V0.16B, V9.16B
	0x03D0679C MOV V1.16B, V8.16B
	0x03D067A0 MOV X4, X31
	0x03D067A4 LDP D9, D8, [X31], #0x40
	0x03D067A8 B 0x3E112B8
	0x03D067AC STR X30, [X31 - 0x30]!
	0x03D067B0 STP X22, X21, [X31 + 0x10]
	0x03D067B4 STP X20, X19, [X31 + 0x20]
	0x03D067B8 ADRP X22, 0x6E1000
	0x03D067BC ADRP X21, 0x45D000
	0x03D067C0 ADRP X20, 0x45C000
	0x03D067C4 ADRP X19, 0x3ED000
	0x03D067C8 LDRB W8, [X22 + 0x83B]
	0x03D067CC LDR X21, [X21 + 0x3C0]
	0x03D067D0 LDR X20, [X20 + 0xDF0]
	0x03D067D4 LDR X19, [X19 + 0xDD8]
	0x03D067D8 TBNZ X8, 0x0, 0x3D06808
	0x03D067DC ADRP X0, 0x45C000
	0x03D067E0 LDR X0, [X0 + 0xDF0]
	0x03D067E4 BL 0x1C16CF4
	0x03D067E8 ADRP X0, 0x3ED000
	0x03D067EC LDR X0, [X0 + 0xDD8]
	0x03D067F0 BL 0x1C16CF4
	0x03D067F4 ADRP X0, 0x45D000
	0x03D067F8 LDR X0, [X0 + 0x3C0]
	0x03D067FC BL 0x1C16CF4
	0x03D06800 MOVZ W8, 0x1
	0x03D06804 STRB W8, [X22 + 0x83B]
	0x03D06808 LDR X8, [X20]
	0x03D0680C LDR X9, [X21]
	0x03D06810 LDP X22, X21, [X31 + 0x10]
	0x03D06814 LDR X8, [X8 + 0xB8]
	0x03D06818 STR X9, [X8]
	0x03D0681C LDR X8, [X20]
	0x03D06820 LDR X9, [X19]
	0x03D06824 LDP X20, X19, [X31 + 0x20]
	0x03D06828 LDR X8, [X8 + 0xB8]
	0x03D0682C STR X9, [X8 + 0x8]
	0x03D06830 LDR X30, [X31], #0x30
	0x03D06834 RET
	0x03D06838 STP X30, X21, [X31 - 0x20]!
	0x03D0683C STP X20, X19, [X31 + 0x10]
	0x03D06840 ADRP X20, 0x6E1000
	0x03D06844 ADRP X21, 0x45D000
	0x03D06848 LDRB W8, [X20 + 0x83C]
	0x03D0684C LDR X21, [X21 + 0x3C8]
	0x03D06850 MOV X19, X0
	0x03D06854 TBNZ X8, 0x0, 0x3D0686C
	0x03D06858 ADRP X0, 0x45D000
	0x03D0685C LDR X0, [X0 + 0x3C8]
	0x03D06860 BL 0x1C16CF4
	0x03D06864 MOVZ W8, 0x1
	0x03D06868 STRB W8, [X20 + 0x83C]
	0x03D0686C LDR X1, [X21]
	0x03D06870 MOV X0, X19
	0x03D06874 LDP X20, X19, [X31 + 0x10]
	0x03D06878 LDP X30, X21, [X31], #0x20
	0x03D0687C B 0x2736468
	0x03D06880 STR X30, [X31 - 0x20]!
	0x03D06884 STP X20, X19, [X31 + 0x10]
	0x03D06888 ADRP X20, 0x6E1000
	0x03D0688C LDRB W8, [X20 + 0x83D]
	0x03D06890 MOV X19, X0
	0x03D06894 TBNZ X8, 0x0, 0x3D068AC
	0x03D06898 ADRP X0, 0x417000
	0x03D0689C LDR X0, [X0 + 0xB28]
	0x03D068A0 BL 0x1C16CF4
	0x03D068A4 MOVZ W8, 0x1
	0x03D068A8 STRB W8, [X20 + 0x83D]
	0x03D068AC MOV X0, X19
	0x03D068B0 MOV X1, X31
	0x03D068B4 BL 0x3E13A8C
	0x03D068B8 LDR X8, [X19 + 0x50]
	0x03D068BC CBZ X8, 0x3D068D4
	0x03D068C0 LDP X20, X19, [X31 + 0x10]
	0x03D068C4 MOVZ W9, 0x1
	0x03D068C8 STRB W9, [X8 + 0x40]
	0x03D068CC LDR X30, [X31], #0x20
	0x03D068D0 RET
	0x03D068D4 BL 0x1C16F20
	0x03D068D8 STP X30, X23, [X31 - 0x30]!
	0x03D068DC STP X22, X21, [X31 + 0x10]
	0x03D068E0 STP X20, X19, [X31 + 0x20]
	0x03D068E4 ADRP X23, 0x6E1000
	0x03D068E8 ADRP X22, 0x45D000
	0x03D068EC ADRP X20, 0x45D000
	0x03D068F0 ADRP X21, 0x45D000
	0x03D068F4 LDRB W8, [X23 + 0x83E]
	0x03D068F8 LDR X22, [X22 + 0x3D0]
	0x03D068FC LDR X20, [X20 + 0x3D8]
	0x03D06900 LDR X21, [X21 + 0x3E0]
	0x03D06904 MOV X19, X0
	0x03D06908 TBNZ X8, 0x0, 0x3D06944
	0x03D0690C ADRP X0, 0x45D000
	0x03D06910 LDR X0, [X0 + 0x3E8]
	0x03D06914 BL 0x1C16CF4
	0x03D06918 ADRP X0, 0x45D000
	0x03D0691C LDR X0, [X0 + 0x3E0]
	0x03D06920 BL 0x1C16CF4
	0x03D06924 ADRP X0, 0x45D000
	0x03D06928 LDR X0, [X0 + 0x3D8]
	0x03D0692C BL 0x1C16CF4
	0x03D06930 ADRP X0, 0x45D000
	0x03D06934 LDR X0, [X0 + 0x3D0]
	0x03D06938 BL 0x1C16CF4
	0x03D0693C MOVZ W8, 0x1
	0x03D06940 STRB W8, [X23 + 0x83E]
	0x03D06944 LDR X0, [X22]
	0x03D06948 ADRP X22, 0x45D000
	0x03D0694C LDR X22, [X22 + 0x3E8]
	0x03D06950 BL 0x1C16F10
	0x03D06954 LDR X1, [X20]
	0x03D06958 MOV X20, X0
	0x03D0695C BL 0x301B7C4
	0x03D06960 STR X20, [X19 + 0x440]
	0x03D06964 LDR X0, [X21]
	0x03D06968 LDR W8, [X0 + 0xE0]
	0x03D0696C CBNZ W8, 0x3D06974
	0x03D06970 BL 0x1C16DFC
	0x03D06974 LDR X2, [X22]
	0x03D06978 MOV X0, X19
	0x03D0697C LDP X20, X19, [X31 + 0x20]
	0x03D06980 LDP X22, X21, [X31 + 0x10]
	0x03D06984 MOV X1, X31
	0x03D06988 LDP X30, X23, [X31], #0x30
	0x03D0698C B 0x277F738
	0x03D06990 STP X30, X21, [X31 - 0x20]!
	0x03D06994 STP X20, X19, [X31 + 0x10]
	0x03D06998 ADRP X21, 0x6E1000
	0x03D0699C LDRB W8, [X21 + 0x83F]
	0x03D069A0 MOV W20, W1
	0x03D069A4 MOV X19, X0
	0x03D069A8 TBNZ X8, 0x0, 0x3D069CC
	0x03D069AC ADRP X0, 0x45D000
	0x03D069B0 LDR X0, [X0 + 0x3F0]
	0x03D069B4 BL 0x1C16CF4
	0x03D069B8 ADRP X0, 0x45D000
	0x03D069BC LDR X0, [X0 + 0x3F8]
	0x03D069C0 BL 0x1C16CF4
	0x03D069C4 MOVZ W8, 0x1
	0x03D069C8 STRB W8, [X21 + 0x83F]
	0x03D069CC LDR X8, [X19 + 0x440]
	0x03D069D0 CBZ X8, 0x3D06A10
	0x03D069D4 ADRP X9, 0x45D000
	0x03D069D8 LDR W8, [X8 + 0x18]
	0x03D069DC LDR X9, [X9 + 0x3F0]
	0x03D069E0 MOV X0, X19
	0x03D069E4 SUB W8, W8, 0x1
	0x03D069E8 LDR X2, [X9]
	0x03D069EC CMP W8, W20
	0x03D069F0 CSEL W8, W8, W20, LT
	0x03D069F4 CMP W20, 0x0
	0x03D069F8 CSEL W1, W31, W8, LT
	0x03D069FC BL 0x2780994
	0x03D06A00 MOV X0, X19
	0x03D06A04 LDP X20, X19, [X31 + 0x10]
	0x03D06A08 LDP X30, X21, [X31], #0x20
	0x03D06A0C B 0x3D06A14
	0x03D06A10 BL 0x1C16F20
	0x03D06A14 STP X30, X23, [X31 - 0x30]!
	0x03D06A18 STP X22, X21, [X31 + 0x10]
	0x03D06A1C STP X20, X19, [X31 + 0x20]
	0x03D06A20 ADRP X20, 0x6E1000
	0x03D06A24 LDRB W8, [X20 + 0x840]
	0x03D06A28 MOV X19, X0
	0x03D06A2C TBNZ X8, 0x0, 0x3D06A50
	0x03D06A30 ADRP X0, 0x45D000
	0x03D06A34 LDR X0, [X0 + 0x3F8]
	0x03D06A38 BL 0x1C16CF4
	0x03D06A3C ADRP X0, 0x45D000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x6E2000
	011 Move X21, 0x45E000
	012 Move W8, [X22+2093]
	013 Move X21, [X21+680]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {64}
	020 Move X0, 0x45E000
	021 Move X0, [X0+688]
	022 Call 0x1C17CF4
	023 Move X0, 0x45E000
	024 Move X0, [X0+696]
	025 Call 0x1C17CF4
	026 Move X0, 0x45E000
	027 Move X0, [X0+704]
	028 Call 0x1C17CF4
	029 Move X0, 0x45E000
	030 Move X0, [X0+680]
	031 Call 0x1C17CF4
	032 Move X0, 0x45E000
	033 Move X0, [X0+712]
	034 Call 0x1C17CF4
	035 Move X0, 0x45E000
	036 Move X0, [X0+720]
	037 Call 0x1C17CF4
	038 Move X0, 0x45E000
	039 Move X0, [X0+728]
	040 Call 0x1C17CF4
	041 Move X0, 0x45E000
	042 Move X0, [X0+736]
	043 Call 0x1C17CF4
	044 Move X0, 0x45E000
	045 Move X0, [X0+744]
	046 Call 0x1C17CF4
	047 Move X0, 0x45E000
	048 Move X0, [X0+752]
	049 Call 0x1C17CF4
	050 Move X0, 0x45E000
	051 Move X0, [X0+760]
	052 Call 0x1C17CF4
	053 Move X0, 0x3F2000
	054 Move X0, [X0+1128]
	055 Call 0x1C17CF4
	056 Move X0, 0x45E000
	057 Move X0, [X0+768]
	058 Call 0x1C17CF4
	059 Move X0, 0x3FB000
	060 Move X0, [X0+2112]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X22+2093], W8
	064 Move X0, [X21]
	065 Move [X31+8], X31
	066 Move X21, 0x45E000
	067 Move X22, 0x45E000
	068 Move W8, [X0+224]
	069 Move X21, [X21+688]
	070 Move X22, [X22+704]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X3, [X21]
	075 Move X0, X19
	076 Move X1, X20
	077 Move X2, X31
	078 Call BaseField`1<BoundsInt>..ctor, X0, X1, X2
	079 Move X0, X19
	080 Move W1, W31
	081 Move X2, X31
	082 Call Focusable.set_delegatesFocus, X0, X1
	083 Move X1, [X22]
	084 Move X0, X19
	085 Call BaseField`1<BoundsInt>.get_visualInput, X0
	086 Compare X0, 0
	087 JumpIfEqual {246}
	088 Move X23, 0x45E000
	089 Move X23, [X23+728]
	090 Move [X0+32], W31
	091 Move X0, [X23]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X23]
	097 Move X8, [X0+184]
	098 Move X0, X19
	099 Move X2, X31
	100 Move X1, [X8]
	101 Call VisualElement.AddToClassList, X0, X1
	102 Move X1, [X22]
	103 Move X0, X19
	104 Call BaseField`1<BoundsInt>.get_visualInput, X0
	105 Compare X0, 0
	106 JumpIfEqual {246}
	107 Move X8, [X23]
	108 Move X2, X31
	109 Move X8, [X8+184]
	110 Move X1, [X8+16]
	111 Call VisualElement.AddToClassList, X0, X1
	112 Move X0, [X19+1040]
	113 Compare X0, 0
	114 JumpIfEqual {246}
	115 Move X8, [X23]
	116 Move X25, 0x45E000
	117 Move X20, 0x3F2000
	118 Move X2, X31
	119 Move X8, [X8+184]
	120 Move X1, [X8+8]
	121 Move X25, [X25+752]
	122 Move X20, [X20+1128]
	123 Call VisualElement.AddToClassList, X0, X1
	124 Move X0, [X25]
	125 Call 0x1C17F10
	126 Move X1, [X20]
	127 Move X20, X0
	128 Call Vector3IntField..ctor, X0, X1
	129 Move [X19+1104], X20
	130 Compare X20, 0
	131 JumpIfEqual {246}
	132 Move X8, 0x45E000
	133 Move X8, [X8+760]
	134 Move X0, X20
	135 Move X2, X31
	136 Move X1, [X8]
	137 Call VisualElement.set_name, X0, X1
	138 Move X0, [X19+1104]
	139 Compare X0, 0
	140 JumpIfEqual {246}
	141 Move W1, 1
	142 Move X2, X31
	143 Call Focusable.set_delegatesFocus, X0, X1
	144 Move X0, [X19+1104]
	145 Compare X0, 0
	146 JumpIfEqual {246}
	147 Move X8, [X23]
	148 Move X26, 0x45E000
	149 Move X21, 0x45E000
	150 Move X24, 0x45E000
	151 Move X8, [X8+184]
	152 Move X2, X31
	153 Move X1, [X8+24]
	154 Move X26, [X26+736]
	155 Move X21, [X21+712]
	156 Move X24, [X24+744]
	157 Call VisualElement.AddToClassList, X0, X1
	158 Move X0, [X26]
	159 Move X20, [X19+1104]
	160 Call 0x1C17F10
	161 Move X2, [X21]
	162 Move X1, X19
	163 Move X3, X31
	164 Move X21, X0
	165 Call 0x2D0F824, X0, X1, X2
	166 Move X2, [X24]
	167 Move X0, X20
	168 Move X1, X21
	169 Call INotifyValueChangedExtensions.RegisterValueChangedCallback, X0, X1
	170 Move X1, [X22]
	171 Move X0, X19
	172 Call BaseField`1<BoundsInt>.get_visualInput, X0
	173 Compare X0, 0
	174 JumpIfEqual {246}
	175 Move X8, [X0+888]
	176 Move X20, 0x3FB000
	177 Add X0, X31, 8
	178 Move X2, X31
	179 Move [X31+8], X8
	180 Move X1, [X19+1104]
	181 Move X20, [X20+2112]
	182 Call Hierarchy.Add, X0, X1
	183 Move X0, [X25]
	184 Call 0x1C17F10
	185 Move X1, [X20]
	186 Move X20, X0
	187 Call Vector3IntField..ctor, X0, X1
	188 Move [X19+1112], X20
	189 Compare X20, 0
	190 JumpIfEqual {246}
	191 Move X8, 0x45E000
	192 Move X8, [X8+768]
	193 Move X0, X20
	194 Move X2, X31
	195 Move X1, [X8]
	196 Call VisualElement.set_name, X0, X1
	197 Move X0, [X19+1112]
	198 Compare X0, 0
	199 JumpIfEqual {246}
	200 Move W1, 1
	201 Move X2, X31
	202 Call Focusable.set_delegatesFocus, X0, X1
	203 Move X0, [X19+1112]
	204 Compare X0, 0
	205 JumpIfEqual {246}
	206 Move X8, [X23]
	207 Move X21, 0x45E000
	208 Move X2, X31
	209 Move X8, [X8+184]
	210 Move X1, [X8+32]
	211 Move X21, [X21+720]
	212 Call VisualElement.AddToClassList, X0, X1
	213 Move X0, [X26]
	214 Move X20, [X19+1112]
	215 Call 0x1C17F10
	216 Move X2, [X21]
	217 Move X1, X19
	218 Move X3, X31
	219 Move X21, X0
	220 Call 0x2D0F824, X0, X1, X2
	221 Move X2, [X24]
	222 Move X0, X20
	223 Move X1, X21
	224 Call INotifyValueChangedExtensions.RegisterValueChangedCallback, X0, X1
	225 Move X1, [X22]
	226 Move X0, X19
	227 Call BaseField`1<BoundsInt>.get_visualInput, X0
	228 Compare X0, 0
	229 JumpIfEqual {246}
	230 Move X8, [X0+888]
	231 Add X0, X31, 8
	232 Move X2, X31
	233 Move [X31+8], X8
	234 Move X1, [X19+1112]
	235 Call Hierarchy.Add, X0, X1
	236 Move X20, [X31+64]
	237 Move X19, [X31+72]
	238 Move X22, [X31+48]
	239 Move X21, [X31+56]
	240 Move X24, [X31+32]
	241 Move X23, [X31+40]
	242 Move X26, [X31+16]
	243 Move X25, [X31+24]
	244 Move X30, [X31+80]
	245 Return 
	246 Call 0x1C17F20

Method: System.Void SetValueWithoutNotify(UnityEngine.BoundsInt newValue)

Disassembly:
	0x03D06B60 MOVZ W8, 0x1
	0x03D06B64 STRB W8, [X20 + 0x842]
	0x03D06B68 LDR X1, [X21]
	0x03D06B6C MOV X0, X19
	0x03D06B70 LDP X20, X19, [X31 + 0x10]
	0x03D06B74 LDP X30, X21, [X31], #0x20
	0x03D06B78 B 0x2739904
	0x03D06B7C SUB X31, X31, 0xF0
	0x03D06B80 STR X30, [X31 + 0xA0]
	0x03D06B84 STP X26, X25, [X31 + 0xB0]
	0x03D06B88 STP X24, X23, [X31 + 0xC0]
	0x03D06B8C STP X22, X21, [X31 + 0xD0]
	0x03D06B90 STP X20, X19, [X31 + 0xE0]
	0x03D06B94 ADRP X20, 0x6E1000
	0x03D06B98 ADRP X19, 0x45D000
	0x03D06B9C ADRP X25, 0x45D000
	0x03D06BA0 LDRB W8, [X20 + 0x843]
	0x03D06BA4 LDR X19, [X19 + 0x418]
	0x03D06BA8 LDR X25, [X25 + 0x420]
	0x03D06BAC TBNZ X8, 0x0, 0x3D06CB4
	0x03D06BB0 ADRP X0, 0x45D000
	0x03D06BB4 LDR X0, [X0 + 0x418]
	0x03D06BB8 BL 0x1C16CF4
	0x03D06BBC ADRP X0, 0x45D000
	0x03D06BC0 LDR X0, [X0 + 0x428]
	0x03D06BC4 BL 0x1C16CF4
	0x03D06BC8 ADRP X0, 0x45D000
	0x03D06BCC LDR X0, [X0 + 0x430]
	0x03D06BD0 BL 0x1C16CF4
	0x03D06BD4 ADRP X0, 0x45D000
	0x03D06BD8 LDR X0, [X0 + 0x438]
	0x03D06BDC BL 0x1C16CF4
	0x03D06BE0 ADRP X0, 0x45D000
	0x03D06BE4 LDR X0, [X0 + 0x440]
	0x03D06BE8 BL 0x1C16CF4
	0x03D06BEC ADRP X0, 0x45D000
	0x03D06BF0 LDR X0, [X0 + 0x448]
	0x03D06BF4 BL 0x1C16CF4
	0x03D06BF8 ADRP X0, 0x45D000
	0x03D06BFC LDR X0, [X0 + 0x450]
	0x03D06C00 BL 0x1C16CF4
	0x03D06C04 ADRP X0, 0x45D000
	0x03D06C08 LDR X0, [X0 + 0x458]
	0x03D06C0C BL 0x1C16CF4
	0x03D06C10 ADRP X0, 0x45D000
	0x03D06C14 LDR X0, [X0 + 0x460]
	0x03D06C18 BL 0x1C16CF4
	0x03D06C1C ADRP X0, 0x45D000
	0x03D06C20 LDR X0, [X0 + 0x468]
	0x03D06C24 BL 0x1C16CF4
	0x03D06C28 ADRP X0, 0x45D000
	0x03D06C2C LDR X0, [X0 + 0x470]
	0x03D06C30 BL 0x1C16CF4
	0x03D06C34 ADRP X0, 0x45D000
	0x03D06C38 LDR X0, [X0 + 0x420]
	0x03D06C3C BL 0x1C16CF4
	0x03D06C40 ADRP X0, 0x45D000
	0x03D06C44 LDR X0, [X0 + 0x478]
	0x03D06C48 BL 0x1C16CF4
	0x03D06C4C ADRP X0, 0x45D000
	0x03D06C50 LDR X0, [X0 + 0x480]
	0x03D06C54 BL 0x1C16CF4
	0x03D06C58 ADRP X0, 0x434000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x6E2000
	009 Move X22, 0x45E000
	010 Move X21, 0x45E000
	011 Move W8, [X23+2094]
	012 Move X22, [X22+808]
	013 Move X21, [X21+816]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x45E000
	021 Move X0, [X0+808]
	022 Call 0x1C17CF4
	023 Move X0, 0x45E000
	024 Move X0, [X0+816]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+2094], W8
	028 Move X8, [X20+16]
	029 Move V0, [X20]
	030 Move X2, [X22]
	031 Add X1, X31, 32
	032 Move X0, X19
	033 Move [X31+16], X8
	034 Move [X31], V0
	035 Move [X31+2], V0
	036 Move [X31+48], X8
	037 Call BaseField`1<BoundsInt>.SetValueWithoutNotify, X0, X1
	038 Move X1, [X21]
	039 Move X20, [X19+1104]
	040 Add X8, X31, 32
	041 Move X0, X19
	042 Call BaseField`1<BoundsInt>.get_rawValue, X0
	043 Compare X20, 0
	044 JumpIfEqual {74}
	045 Move X8, [X20]
	046 Move X1, [X31+32]
	047 Move W2, [X31+40]
	048 Move X0, X20
	049 Move X9, [X8+2184]
	050 Move X3, [X8+2192]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X1, [X21]
	053 Move X20, [X19+1112]
	054 Add X8, X31, 32
	055 Move X0, X19
	056 Call BaseField`1<BoundsInt>.get_rawValue, X0
	057 Compare X20, 0
	058 JumpIfEqual {74}
	059 Move X8, [X20]
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 Move W2, [X31+52]
	062 Move X0, X20
	063 Move X9, [X8+2184]
	064 Move X3, [X8+2192]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X30, [X31+64]
	071 Move X23, [X31+72]
	072 Add X31, X31, 112
	073 Return 
	074 Call 0x1C17F20

Method: System.Void UpdateMixedValueContent()

Disassembly:
	0x03D06C5C LDR X0, [X0 + 0x6A0]
	0x03D06C60 BL 0x1C16CF4
	0x03D06C64 ADRP X0, 0x45D000
	0x03D06C68 LDR X0, [X0 + 0x488]
	0x03D06C6C BL 0x1C16CF4
	0x03D06C70 ADRP X0, 0x41E000
	0x03D06C74 LDR X0, [X0 + 0x1D8]
	0x03D06C78 BL 0x1C16CF4
	0x03D06C7C ADRP X0, 0x45D000
	0x03D06C80 LDR X0, [X0 + 0x490]
	0x03D06C84 BL 0x1C16CF4
	0x03D06C88 ADRP X0, 0x41C000
	0x03D06C8C LDR X0, [X0 + 0xFA8]
	0x03D06C90 BL 0x1C16CF4
	0x03D06C94 ADRP X0, 0x414000
	0x03D06C98 LDR X0, [X0 + 0x908]
	0x03D06C9C BL 0x1C16CF4
	0x03D06CA0 ADRP X0, 0x45D000
	0x03D06CA4 LDR X0, [X0 + 0x498]
	0x03D06CA8 BL 0x1C16CF4
	0x03D06CAC MOVZ W8, 0x1
	0x03D06CB0 STRB W8, [X20 + 0x843]
	0x03D06CB4 LDR X0, [X19]
	0x03D06CB8 ADRP X20, 0x45D000
	0x03D06CBC ADRP X21, 0x414000
	0x03D06CC0 LDR X20, [X20 + 0x498]
	0x03D06CC4 LDR X21, [X21 + 0x908]
	0x03D06CC8 MOVZ W1, 0x4
	0x03D06CCC BL 0x1C16D6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6E2000
	005 Move W8, [X20+2095]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x45E000
	012 Move X0, [X0+824]
	013 Call 0x1C17CF4
	014 Move X0, 0x45E000
	015 Move X0, [X0+832]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2095], W8
	019 Move X0, [X19+1104]
	020 Compare X0, 0
	021 JumpIfEqual {37}
	022 Move X20, 0x45E000
	023 Move X20, [X20+832]
	024 Move W1, [X19+1048]
	025 Move X2, [X20]
	026 Call BaseField`1<Vector3Int>.set_showMixedValue, X0, X1
	027 Move X0, [X19+1112]
	028 Compare X0, 0
	029 JumpIfEqual {37}
	030 Move W1, [X19+1048]
	031 Move X2, [X20]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call BaseField`1<Vector3Int>.set_showMixedValue, X0, X1
	036 Return 
	037 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D06CD0 LDR X8, [X25]
	0x03D06CD4 MOV X19, X0
	0x03D06CD8 LDR W9, [X8 + 0xE0]
	0x03D06CDC CBNZ W9, 0x3D06CEC
	0x03D06CE0 MOV X0, X8
	0x03D06CE4 BL 0x1C16DFC
	0x03D06CE8 LDR X8, [X25]
	0x03D06CEC LDR X9, [X8 + 0xB8]
	0x03D06CF0 LDR X20, [X20]
	0x03D06CF4 LDR X21, [X21]
	0x03D06CF8 LDR X22, [X9 + 0x8]
	0x03D06CFC CBNZ X22, 0x3D06D54
	0x03D06D00 LDR W9, [X8 + 0xE0]
	0x03D06D04 CBNZ W9, 0x3D06D14
	0x03D06D08 MOV X0, X8
	0x03D06D0C BL 0x1C16DFC
	0x03D06D10 LDR X8, [X25]
	0x03D06D14 ADRP X9, 0x45D000
	0x03D06D18 LDR X8, [X8 + 0xB8]
	0x03D06D1C LDR X9, [X9 + 0x430]
	0x03D06D20 LDR X23, [X8]
	0x03D06D24 LDR X0, [X9]
	0x03D06D28 BL 0x1C16F10
	0x03D06D2C ADRP X8, 0x45D000
	0x03D06D30 LDR X8, [X8 + 0x438]
	0x03D06D34 MOV X1, X23
	0x03D06D38 MOV X3, X31
	0x03D06D3C MOV X22, X0
	0x03D06D40 LDR X2, [X8]
	0x03D06D44 BL 0x2D326F4
	0x03D06D48 LDR X8, [X25]
	0x03D06D4C LDR X9, [X8 + 0xB8]
	0x03D06D50 STR X22, [X9 + 0x8]
	0x03D06D54 LDR W9, [X8 + 0xE0]
	0x03D06D58 CBNZ W9, 0x3D06D68
	0x03D06D5C MOV X0, X8
	0x03D06D60 BL 0x1C16DFC
	0x03D06D64 LDR X8, [X25]
	0x03D06D68 LDR X9, [X8 + 0xB8]
	0x03D06D6C ADRP X26, 0x45D000
	0x03D06D70 LDR X23, [X9 + 0x10]
	0x03D06D74 LDR X26, [X26 + 0x428]
	0x03D06D78 CBNZ X23, 0x3D06DD0
	0x03D06D7C LDR W9, [X8 + 0xE0]
	0x03D06D80 CBNZ W9, 0x3D06D90
	0x03D06D84 MOV X0, X8
	0x03D06D88 BL 0x1C16DFC
	0x03D06D8C LDR X8, [X25]
	0x03D06D90 ADRP X9, 0x45D000
	0x03D06D94 LDR X8, [X8 + 0xB8]
	0x03D06D98 LDR X9, [X9 + 0x478]
	0x03D06D9C LDR X24, [X8]
	0x03D06DA0 LDR X0, [X9]
	0x03D06DA4 BL 0x1C16F10
	0x03D06DA8 ADRP X8, 0x45D000
	0x03D06DAC LDR X8, [X8 + 0x440]
	0x03D06DB0 MOV X1, X24
	0x03D06DB4 MOV X3, X31
	0x03D06DB8 MOV X23, X0
	0x03D06DBC LDR X2, [X8]
	0x03D06DC0 BL 0x2899740
	0x03D06DC4 LDR X8, [X25]
	0x03D06DC8 LDR X8, [X8 + 0xB8]
	0x03D06DCC STR X23, [X8 + 0x10]
	0x03D06DD0 LDR X5, [X26]
	0x03D06DD4 MOVI V0.2D, 0x0
	0x03D06DD8 ADD X0, X31, 0x80
	0x03D06DDC MOV X1, X21
	0x03D06DE0 MOV X2, X20
	0x03D06DE4 MOV X3, X22
	0x03D06DE8 MOV X4, X23
	0x03D06DEC STP V0, V0, [X31 + 0x80]
	0x03D06DF0 BL 0x2D12A30
	0x03D06DF4 CBZ X19, 0x3D071D0
	0x03D06DF8 LDP V0, V1, [X31 + 0x80]
	0x03D06DFC STP V0, V1, [X31 + 0x60]
	0x03D06E00 LDR W8, [X19 + 0x18]
	0x03D06E04 CBZ W8, 0x3D071CC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x6E2000
	010 Move X24, 0x45E000
	011 Move X19, 0x45E000
	012 Move X23, 0x417000
	013 Move X22, 0x417000
	014 Move X21, 0x45E000
	015 Move X20, 0x45D000
	016 Move X24, [X24+840]
	017 Move W8, [X25+2096]
	018 Move X19, [X19+728]
	019 Move X23, [X23+3768]
	020 Move X22, [X22+3776]
	021 Move X21, [X21+848]
	022 Move X20, [X20+3760]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0x45E000
	028 Move X0, [X0+728]
	029 Call 0x1C17CF4
	030 Move X0, 0x45E000
	031 Move X0, [X0+840]
	032 Call 0x1C17CF4
	033 Move X0, 0x45D000
	034 Move X0, [X0+3760]
	035 Call 0x1C17CF4
	036 Move X0, 0x45E000
	037 Move X0, [X0+848]
	038 Call 0x1C17CF4
	039 Move X0, 0x417000
	040 Move X0, [X0+3768]
	041 Call 0x1C17CF4
	042 Move X0, 0x417000
	043 Move X0, [X0+3776]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X25+2096], W8
	047 Move X8, [X19]
	048 Move X9, [X24]
	049 Move X2, X31
	050 Move X8, [X8+184]
	051 Move [X8], X9
	052 Move X8, [X19]
	053 Move X1, [X23]
	054 Move X8, [X8+184]
	055 Move X0, [X8]
	056 Call String.Concat, X0, X1
	057 Move X8, [X19]
	058 Move X2, X31
	059 Move X8, [X8+184]
	060 Move [X8+8], X0
	061 Move X0, [X8]
	062 Move X1, [X22]
	063 Call String.Concat, X0, X1
	064 Move X8, [X19]
	065 Move X2, X31
	066 Move X8, [X8+184]
	067 Move [X8+16], X0
	068 Move X0, [X8]
	069 Move X1, [X21]
	070 Call String.Concat, X0, X1
	071 Move X8, [X19]
	072 Move X2, X31
	073 Move X8, [X8+184]
	074 Move [X8+24], X0
	075 Move X0, [X8]
	076 Move X1, [X20]
	077 Call String.Concat, X0, X1
	078 Move X8, [X19]
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X8, [X8+184]
	086 Move [X8+32], X0
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return 

Method: System.Void <.ctor>b__10_0(UnityEngine.UIElements.ChangeEvent`1<UnityEngine.Vector3Int> e)

Disassembly:
	0x03D06E08 LDP V1, V0, [X31 + 0x60]
	0x03D06E0C ADRP X20, 0x45D000
	0x03D06E10 ADRP X21, 0x41C000
	0x03D06E14 STP V1, V0, [X19 + 0x20]
	0x03D06E18 LDR X0, [X25]
	0x03D06E1C LDR W8, [X0 + 0xE0]
	0x03D06E20 LDR X20, [X20 + 0x490]
	0x03D06E24 LDR X21, [X21 + 0xFA8]
	0x03D06E28 CBNZ W8, 0x3D06E34
	0x03D06E2C BL 0x1C16DFC
	0x03D06E30 LDR X0, [X25]
	0x03D06E34 LDR X8, [X0 + 0xB8]
	0x03D06E38 LDR X20, [X20]
	0x03D06E3C LDR X21, [X21]
	0x03D06E40 LDR X22, [X8 + 0x18]
	0x03D06E44 CBNZ X22, 0x3D06E98
	0x03D06E48 LDR W8, [X0 + 0xE0]
	0x03D06E4C CBNZ W8, 0x3D06E58
	0x03D06E50 BL 0x1C16DFC
	0x03D06E54 LDR X0, [X25]
	0x03D06E58 ADRP X9, 0x45D000
	0x03D06E5C LDR X8, [X0 + 0xB8]
	0x03D06E60 LDR X9, [X9 + 0x430]
	0x03D06E64 LDR X23, [X8]
	0x03D06E68 LDR X0, [X9]
	0x03D06E6C BL 0x1C16F10
	0x03D06E70 ADRP X8, 0x45D000
	0x03D06E74 LDR X8, [X8 + 0x448]
	0x03D06E78 MOV X1, X23
	0x03D06E7C MOV X3, X31
	0x03D06E80 MOV X22, X0
	0x03D06E84 LDR X2, [X8]
	0x03D06E88 BL 0x2D326F4
	0x03D06E8C LDR X0, [X25]
	0x03D06E90 LDR X8, [X0 + 0xB8]
	0x03D06E94 STR X22, [X8 + 0x18]
	0x03D06E98 LDR W8, [X0 + 0xE0]
	0x03D06E9C CBNZ W8, 0x3D06EA8
	0x03D06EA0 BL 0x1C16DFC
	0x03D06EA4 LDR X0, [X25]
	0x03D06EA8 LDR X8, [X0 + 0xB8]
	0x03D06EAC LDR X23, [X8 + 0x20]
	0x03D06EB0 CBNZ X23, 0x3D06F04

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x6E2000
	007 Move W8, [X21+2097]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x45E000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2097], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+2024]
	022 Move X1, [X8+2032]
	023 Add X8, X31, 24
	024 NotImplemented "Instruction BLR not yet implemented."
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move W9, [X31+44]
	027 Move [X31+8], X8
	028 Move [X31+16], W9
	029 Compare X20, 0
	030 JumpIfEqual {51}
	031 Move X8, [X20+144]
	032 Move X9, [X19]
	033 Move W10, [X20+152]
	034 Move X11, [X31+8]
	035 Move W12, [X31+16]
	036 Move X13, [X9+2040]
	037 Move [X31+24], X8
	038 Move [X31+32], W10
	039 Move [X31+36], X11
	040 Move [X31+44], W12
	041 Move X2, [X9+2048]
	042 Add X1, X31, 24
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X20, [X31+64]
	046 Move X19, [X31+72]
	047 Move X30, [X31+48]
	048 Move X21, [X31+56]
	049 Add X31, X31, 80
	050 Return 
	051 Call 0x1C17F20

Method: System.Void <.ctor>b__10_1(UnityEngine.UIElements.ChangeEvent`1<UnityEngine.Vector3Int> e)

Disassembly:
	0x03D06EB4 LDR W8, [X0 + 0xE0]
	0x03D06EB8 CBNZ W8, 0x3D06EC4
	0x03D06EBC BL 0x1C16DFC
	0x03D06EC0 LDR X0, [X25]
	0x03D06EC4 ADRP X9, 0x45D000
	0x03D06EC8 LDR X8, [X0 + 0xB8]
	0x03D06ECC LDR X9, [X9 + 0x478]
	0x03D06ED0 LDR X24, [X8]
	0x03D06ED4 LDR X0, [X9]
	0x03D06ED8 BL 0x1C16F10
	0x03D06EDC ADRP X8, 0x45D000
	0x03D06EE0 LDR X8, [X8 + 0x450]
	0x03D06EE4 MOV X1, X24
	0x03D06EE8 MOV X3, X31
	0x03D06EEC MOV X23, X0
	0x03D06EF0 LDR X2, [X8]
	0x03D06EF4 BL 0x2899740
	0x03D06EF8 LDR X8, [X25]
	0x03D06EFC LDR X8, [X8 + 0xB8]
	0x03D06F00 STR X23, [X8 + 0x20]
	0x03D06F04 LDR X5, [X26]
	0x03D06F08 MOVI V0.2D, 0x0
	0x03D06F0C ADD X0, X31, 0x80
	0x03D06F10 MOV X1, X21
	0x03D06F14 MOV X2, X20
	0x03D06F18 MOV X3, X22
	0x03D06F1C MOV X4, X23
	0x03D06F20 STP V0, V0, [X31 + 0x80]
	0x03D06F24 BL 0x2D12A30
	0x03D06F28 LDP V1, V0, [X31 + 0x80]
	0x03D06F2C STP V1, V0, [X31 + 0x40]
	0x03D06F30 LDR W8, [X19 + 0x18]
	0x03D06F34 CMP W8, 0x1
	0x03D06F38 B.LS 0x3D071CC
	0x03D06F3C LDP V1, V0, [X31 + 0x40]
	0x03D06F40 ADRP X20, 0x45D000
	0x03D06F44 ADRP X21, 0x434000
	0x03D06F48 STP V1, V0, [X19 + 0x40]
	0x03D06F4C LDR X0, [X25]
	0x03D06F50 LDR W8, [X0 + 0xE0]
	0x03D06F54 LDR X20, [X20 + 0x480]
	0x03D06F58 LDR X21, [X21 + 0x6A0]
	0x03D06F5C CBNZ W8, 0x3D06F68

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x6E2000
	007 Move W8, [X21+2098]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x45E000
	015 Move X0, [X0+856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2098], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+2024]
	022 Move X1, [X8+2032]
	023 Add X8, X31, 24
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X8, [X31+24]
	026 Move W9, [X31+32]
	027 Move [X31+8], X8
	028 Move [X31+16], W9
	029 Compare X20, 0
	030 JumpIfEqual {51}
	031 Move X8, [X20+144]
	032 Move X9, [X19]
	033 Move X10, [X31+8]
	034 Move W11, [X31+16]
	035 Move W12, [X20+152]
	036 Move X13, [X9+2040]
	037 Move [X31+24], X10
	038 Move [X31+32], W11
	039 Move [X31+36], X8
	040 Move [X31+44], W12
	041 Move X2, [X9+2048]
	042 Add X1, X31, 24
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X20, [X31+64]
	046 Move X19, [X31+72]
	047 Move X30, [X31+48]
	048 Move X21, [X31+56]
	049 Add X31, X31, 80
	050 Return 
	051 Call 0x1C17F20

