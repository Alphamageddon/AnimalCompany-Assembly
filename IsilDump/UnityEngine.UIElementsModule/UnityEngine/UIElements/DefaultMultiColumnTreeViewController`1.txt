Type: UnityEngine.UIElements.DefaultMultiColumnTreeViewController`1

Method: UnityEngine.UIElements.TreeDataController`1<T> get_treeDataController()

Disassembly:
	0x029B3D2C MOV X0, X1
	0x029B3D30 BL 0x1C5C684
	0x029B3D34 MOV X1, X0
	0x029B3D38 MOV X0, X21
	0x029B3D3C BL 0x1C16E00
	0x029B3D40 LDR X8, [X20 + 0x20]
	0x029B3D44 LDR X8, [X8 + 0xC0]
	0x029B3D48 CBZ X0, 0x29B3D7C
	0x029B3D4C LDR X2, [X8 + 0x18]
	0x029B3D50 MOV X1, X0
	0x029B3D54 MOV X0, X19
	0x029B3D58 B 0x29B3D68
	0x029B3D5C LDR X2, [X8 + 0x18]
	0x029B3D60 MOV X0, X19
	0x029B3D64 MOV X1, X31
	0x029B3D68 LDR X3, [X2]
	0x029B3D6C LDP X20, X19, [X31 + 0x20]
	0x029B3D70 LDP X22, X21, [X31 + 0x10]
	0x029B3D74 LDR X30, [X31], #0x30
	0x029B3D78 BR X3
	0x029B3D7C ADRP X9, 0x1740000
	0x029B3D80 LDR X9, [X9 + 0x6C0]
	0x029B3D84 LDR X19, [X8 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, [X0+96]
	006 Compare X21, 0
	007 JumpIfNotEqual {26}
	008 Move X8, [X1+32]
	009 Move X19, X0
	010 Move X20, X1
	011 Move X8, [X8+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X20+32]
	021 Move X21, X0
	022 Move X8, [X8+192]
	023 Move X1, [X8+16]
	024 Call 0x26FCBB8, X0
	025 Move [X19+96], X21
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X0, X21
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void .ctor(UnityEngine.UIElements.Columns columns, UnityEngine.UIElements.SortColumnDescriptions sortDescriptions, System.Collections.Generic.List`1<UnityEngine.UIElements.SortColumnDescription> sortedColumns)

Disassembly:
	0x029B3D88 LDR X0, [X9]
	0x029B3D8C LDR W9, [X0 + 0xE0]

ISIL:
	001 Move X4, X31
	002 Call MultiColumnTreeViewController..ctor, X0, X1, X2, X3
	003 Return 

Method: System.Collections.IList get_itemsSource()

Disassembly:
	0x029B3D90 CBNZ W9, 0x29B3D98
	0x029B3D94 BL 0x1C16DFC
	0x029B3D98 MOV X0, X19
	0x029B3D9C MOV X1, X31
	0x029B3DA0 BL 0x338C698

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {6}
	003 Move X1, X31
	004 Call BaseTreeViewController.get_itemsSource, X0
	005 Return X0
	006 Move [X31-16], X30
	007 Call 0x1C17F20

Method: System.Void set_itemsSource(System.Collections.IList value)

Disassembly:
	0x029B3DA4 ADRP X8, 0x176B000
	0x029B3DA8 LDR X8, [X8 + 0x618]
	0x029B3DAC MOV X1, X0
	0x029B3DB0 MOV X2, X31
	0x029B3DB4 LDR X8, [X8]
	0x029B3DB8 MOV X0, X8
	0x029B3DBC BL 0x321EFD0
	0x029B3DC0 ADRP X8, 0x1740000
	0x029B3DC4 LDR X8, [X8 + 0xA28]
	0x029B3DC8 MOV X19, X0
	0x029B3DCC LDR X8, [X8]
	0x029B3DD0 LDR W9, [X8 + 0xE0]
	0x029B3DD4 CBNZ W9, 0x29B3DE0
	0x029B3DD8 MOV X0, X8
	0x029B3DDC BL 0x1C16DFC
	0x029B3DE0 MOV X0, X19
	0x029B3DE4 LDP X20, X19, [X31 + 0x20]
	0x029B3DE8 LDP X22, X21, [X31 + 0x10]
	0x029B3DEC MOV X1, X31
	0x029B3DF0 LDR X30, [X31], #0x30
	0x029B3DF4 B 0x3C0649C
	0x029B3DF8 STP X30, X21, [X31 - 0x20]!
	0x029B3DFC STP X20, X19, [X31 + 0x10]
	0x029B3E00 CBZ X0, 0x29B3E80
	0x029B3E04 MOV X20, X1
	0x029B3E08 MOV X1, X31
	0x029B3E0C MOV X21, X2
	0x029B3E10 MOV X19, X0
	0x029B3E14 BL 0x3CF13A0
	0x029B3E18 CMP X0, X20
	0x029B3E1C B.EQ 0x29B3E74
	0x029B3E20 LDR X8, [X21 + 0x20]
	0x029B3E24 MOV X0, X19
	0x029B3E28 LDR X8, [X8 + 0xC0]
	0x029B3E2C LDR X1, [X8 + 0x30]
	0x029B3E30 LDR X8, [X1]
	0x029B3E34 BLR X8
	0x029B3E38 CBZ X0, 0x29B3E80
	0x029B3E3C LDR X8, [X21 + 0x20]
	0x029B3E40 MOV X1, X20
	0x029B3E44 LDR X8, [X8 + 0xC0]
	0x029B3E48 LDR X2, [X8 + 0x38]
	0x029B3E4C LDR X8, [X2]
	0x029B3E50 BLR X8
	0x029B3E54 MOV X0, X19
	0x029B3E58 MOV X1, X31
	0x029B3E5C BL 0x3CF13F4
	0x029B3E60 MOV X0, X19
	0x029B3E64 LDP X20, X19, [X31 + 0x10]
	0x029B3E68 MOV X1, X31
	0x029B3E6C LDP X30, X21, [X31], #0x20
	0x029B3E70 B 0x3CF5200
	0x029B3E74 LDP X20, X19, [X31 + 0x10]
	0x029B3E78 LDP X30, X21, [X31], #0x20
	0x029B3E7C RET
	0x029B3E80 BL 0x1C16F20
	0x029B3E84 STP X29, X30, [X31 - 0x40]!
	0x029B3E88 STP X24, X23, [X31 + 0x10]
	0x029B3E8C STP X22, X21, [X31 + 0x20]
	0x029B3E90 STP X20, X19, [X31 + 0x30]
	0x029B3E94 ADD X29, X31, 0x0
	0x029B3E98 SUB X31, X31, 0x20
	0x029B3E9C MRS X24, 0xC000
	0x029B3EA0 LDR X8, [X24 + 0x28]
	0x029B3EA4 ADD X10, X31, 0x0
	0x029B3EA8 MOV X19, X2
	0x029B3EAC MOV W22, W1
	0x029B3EB0 STUR X8, [X29 - 0x8]
	0x029B3EB4 LDR X8, [X2 + 0x20]
	0x029B3EB8 MOV X23, X0
	0x029B3EBC LDR X8, [X8 + 0xC0]
	0x029B3EC0 LDR X9, [X8 + 0x48]
	0x029B3EC4 LDR W9, [X9 + 0xFC]
	0x029B3EC8 ADD X9, X9, 0xF
	0x029B3ECC AND X9, X9, 0x1FFFFFFFF
	0x029B3ED0 SUB X20, X10, X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1A28000
	007 Move W8, [X22+4034]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x1741000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x1741000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move X0, 0x176C000
	022 Move X0, [X0+1560]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+4034], W8
	026 Move X8, [X20+32]
	027 Move X8, [X8+192]
	028 Compare X21, 0
	029 JumpIfEqual {48}
	030 Move X1, [X8+32]
	031 Move W8, [X1+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {39}
	036 Move X0, X1
	037 Call 0x1C5D684
	038 Move X1, X0
	039 Move X0, X21
	040 Call 0x1C17E00
	041 Move X8, [X20+32]
	042 Move X8, [X8+192]
	043 Compare X0, 0
	044 JumpIfEqual {56}
	045 Move X2, [X8+24]
	046 Move X1, X0
	047 Move X0, X19
	048 Move X2, [X8+24]
	049 Move X0, X19
	050 Move X1, X31
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X9, 0x1741000
	057 Move X9, [X9+1728]
	058 Move X19, [X8+40]
	059 Move X0, [X9]
	060 Move W9, [X0+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X19
	065 Move X1, X31
	066 Call Type.GetTypeFromHandle, X0
	067 Move X8, 0x176C000
	068 Move X8, [X8+1560]
	069 Move X1, X0
	070 Move X2, X31
	071 Move X8, [X8]
	072 Move X0, X8
	073 Call String.Format, X0, X1
	074 Move X8, 0x1741000
	075 Move X8, [X8+2600]
	076 Move X19, X0
	077 Move X8, [X8]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X1, X31
	089 Move X30, [X31+48]
	090 Call Debug.LogError, X0
	091 Return 

Method: System.Void SetRootItems(System.Collections.Generic.IList`1<UnityEngine.UIElements.TreeViewItemData`1<T>> items)

Disassembly:
	0x029B3ED4 ADD X31, X20, 0x0
	0x029B3ED8 LDR X1, [X8 + 0x30]
	0x029B3EDC LDR X8, [X1]
	0x029B3EE0 BLR X8
	0x029B3EE4 CBZ X23, 0x29B3F74
	0x029B3EE8 LDR X8, [X23]
	0x029B3EEC MOV X21, X0
	0x029B3EF0 MOV X0, X23
	0x029B3EF4 MOV W1, W22
	0x029B3EF8 LDP X9, X2, [X8 + 0x1F8]
	0x029B3EFC BLR X9
	0x029B3F00 CBZ X21, 0x29B3F74
	0x029B3F04 LDR X8, [X19 + 0x20]
	0x029B3F08 SUB X9, X29, 0xC
	0x029B3F0C SUB X3, X29, 0x20
	0x029B3F10 MOV X2, X21
	0x029B3F14 LDR X8, [X8 + 0xC0]
	0x029B3F18 MOV X4, X20
	0x029B3F1C LDR X1, [X8 + 0x40]
	0x029B3F20 LDR X8, [X1]
	0x029B3F24 STUR W0, [X29 - 0xC]
	0x029B3F28 STP X9, X20, [X29 - 0x20]
	0x029B3F2C LDR X9, [X1 + 0x10]
	0x029B3F30 MOV X0, X8
	0x029B3F34 BLR X9
	0x029B3F38 LDR X8, [X19 + 0x20]
	0x029B3F3C MOV X1, X20
	0x029B3F40 LDR X8, [X8 + 0xC0]
	0x029B3F44 LDR X0, [X8 + 0x48]
	0x029B3F48 BL 0x1C16E04
	0x029B3F4C LDR X8, [X24 + 0x28]
	0x029B3F50 LDUR X9, [X29 - 0x8]
	0x029B3F54 CMP X8, X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {41}
	007 Move X20, X1
	008 Move X1, X31
	009 Move X21, X2
	010 Move X19, X0
	011 Call BaseTreeViewController.get_itemsSource, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X8, [X21+32]
	014 Move X0, X19
	015 Move X8, [X8+192]
	016 Move X1, [X8+48]
	017 Call 0x29B3D2C, X0
	018 Compare X0, 0
	019 JumpIfEqual {41}
	020 Move X8, [X21+32]
	021 Move X1, X20
	022 Move X8, [X8+192]
	023 Move X2, [X8+56]
	024 Call 0x26FC914, X0, X1
	025 Move X0, X19
	026 Move X1, X31
	027 Call BaseTreeViewController.RebuildTree, X0
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X1, X31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call CollectionViewController.RaiseItemsSourceChanged, X0
	035 Return 
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 
	041 Call 0x1C17F20

Method: System.Object GetItemForIndex(System.Int32 index)

Disassembly:
	0x029B3F58 B.NE 0x29B3F78
	0x029B3F5C ADD X31, X29, 0x0
	0x029B3F60 LDP X20, X19, [X31 + 0x30]
	0x029B3F64 LDP X22, X21, [X31 + 0x20]
	0x029B3F68 LDP X24, X23, [X31 + 0x10]
	0x029B3F6C LDP X29, X30, [X31], #0x40
	0x029B3F70 RET
	0x029B3F74 BL 0x1C16F20
	0x029B3F78 BL 0x3EB1B20
	0x029B3F7C STR X30, [X31 - 0x20]!
	0x029B3F80 STP X20, X19, [X31 + 0x10]
	0x029B3F84 LDR X8, [X2 + 0x20]
	0x029B3F88 MOV W19, W1
	0x029B3F8C MOV X20, X2
	0x029B3F90 LDR X8, [X8 + 0xC0]
	0x029B3F94 LDR X1, [X8 + 0x30]
	0x029B3F98 LDR X8, [X1]
	0x029B3F9C BLR X8
	0x029B3FA0 CBZ X0, 0x29B3FC4
	0x029B3FA4 LDR X8, [X20 + 0x20]
	0x029B3FA8 MOV W1, W19
	0x029B3FAC LDP X20, X19, [X31 + 0x10]
	0x029B3FB0 LDR X8, [X8 + 0xC0]
	0x029B3FB4 LDR X2, [X8 + 0x50]
	0x029B3FB8 LDR X3, [X2]
	0x029B3FBC LDR X30, [X31], #0x20
	0x029B3FC0 BR X3
	0x029B3FC4 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move W21, W1
	008 Move X19, X2
	009 Move X22, X0
	010 Move X8, [X8+192]
	011 Move X1, [X8+48]
	012 Call 0x29B3D2C, X0
	013 Compare X22, 0
	014 JumpIfEqual {36}
	015 Move X8, [X22]
	016 Move X20, X0
	017 Move X0, X22
	018 Move W1, W21
	019 Move X9, [X8+504]
	020 Move X2, [X8+512]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Compare X20, 0
	023 JumpIfEqual {36}
	024 Move X8, [X19+32]
	025 Move W1, W0
	026 Move X0, X20
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X8, [X8+192]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, [X8+64]
	033 Move X30, [X31+48]
	034 Call 0x26FC950, X0, X1
	035 Return X0
	036 Call 0x1C17F20

Method: System.Int32 GetParentId(System.Int32 id)

Disassembly:
	0x029B3FC8 STR X30, [X31 - 0x20]!
	0x029B3FCC STP X20, X19, [X31 + 0x10]
	0x029B3FD0 LDR X8, [X2 + 0x20]
	0x029B3FD4 MOV W19, W1
	0x029B3FD8 MOV X20, X2
	0x029B3FDC LDR X8, [X8 + 0xC0]
	0x029B3FE0 LDR X1, [X8 + 0x30]
	0x029B3FE4 LDR X8, [X1]
	0x029B3FE8 BLR X8
	0x029B3FEC CBZ X0, 0x29B4010
	0x029B3FF0 LDR X8, [X20 + 0x20]
	0x029B3FF4 MOV W1, W19
	0x029B3FF8 LDP X20, X19, [X31 + 0x10]
	0x029B3FFC LDR X8, [X8 + 0xC0]
	0x029B4000 LDR X2, [X8 + 0x58]
	0x029B4004 LDR X3, [X2]
	0x029B4008 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move W19, W1
	006 Move X20, X2
	007 Move X8, [X8+192]
	008 Move X1, [X8+48]
	009 Call 0x29B3D2C, X0
	010 Compare X0, 0
	011 JumpIfEqual {21}
	012 Move X8, [X20+32]
	013 Move W1, W19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X2, [X8+80]
	018 Move X30, [X31+32]
	019 Call 0x26FC980, X0, X1
	020 Return X0
	021 Call 0x1C17F20

Method: System.Boolean HasChildren(System.Int32 id)

Disassembly:
	0x029B400C BR X3
	0x029B4010 BL 0x1C16F20
	0x029B4014 STR X30, [X31 - 0x20]!
	0x029B4018 STP X20, X19, [X31 + 0x10]
	0x029B401C LDR X8, [X2 + 0x20]
	0x029B4020 MOV W19, W1
	0x029B4024 MOV X20, X2
	0x029B4028 LDR X8, [X8 + 0xC0]
	0x029B402C LDR X1, [X8 + 0x30]
	0x029B4030 LDR X8, [X1]
	0x029B4034 BLR X8
	0x029B4038 CBZ X0, 0x29B405C
	0x029B403C LDR X8, [X20 + 0x20]
	0x029B4040 MOV W1, W19
	0x029B4044 LDP X20, X19, [X31 + 0x10]
	0x029B4048 LDR X8, [X8 + 0xC0]
	0x029B404C LDR X2, [X8 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move W19, W1
	006 Move X20, X2
	007 Move X8, [X8+192]
	008 Move X1, [X8+48]
	009 Call 0x29B3D2C, X0
	010 Compare X0, 0
	011 JumpIfEqual {21}
	012 Move X8, [X20+32]
	013 Move W1, W19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X2, [X8+88]
	018 Move X30, [X31+32]
	019 Call 0x26FC988, X0, X1
	020 Return X0
	021 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<System.Int32> GetChildrenIds(System.Int32 id)

Disassembly:
	0x029B4050 LDR X3, [X2]
	0x029B4054 LDR X30, [X31], #0x20
	0x029B4058 BR X3
	0x029B405C BL 0x1C16F20
	0x029B4060 STR X30, [X31 - 0x40]!
	0x029B4064 STP X24, X23, [X31 + 0x10]
	0x029B4068 STP X22, X21, [X31 + 0x20]
	0x029B406C STP X20, X19, [X31 + 0x30]
	0x029B4070 CMP W1, W2
	0x029B4074 B.EQ 0x29B4124
	0x029B4078 LDR X8, [X5 + 0x20]
	0x029B407C MOV W23, W3
	0x029B4080 MOV W20, W1
	0x029B4084 MOV W19, W2
	0x029B4088 LDR X8, [X8 + 0xC0]
	0x029B408C MOV W1, W2
	0x029B4090 MOV W2, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move W19, W1
	006 Move X20, X2
	007 Move X8, [X8+192]
	008 Move X1, [X8+48]
	009 Call 0x29B3D2C, X0
	010 Compare X0, 0
	011 JumpIfEqual {21}
	012 Move X8, [X20+32]
	013 Move W1, W19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X2, [X8+96]
	018 Move X30, [X31+32]
	019 Call 0x26FCA64, X0, X1
	020 Return X0
	021 Call 0x1C17F20

Method: System.Void Move(System.Int32 id, System.Int32 newParentId, System.Int32 childIndex = -1, System.Boolean rebuildTree = True)

Disassembly:
	0x029B4094 MOV X24, X5
	0x029B4098 LDR X3, [X8 + 0x68]
	0x029B409C MOV W22, W4
	0x029B40A0 MOV X21, X0
	0x029B40A4 LDR X8, [X3]
	0x029B40A8 BLR X8
	0x029B40AC TBNZ X0, 0x0, 0x29B4124
	0x029B40B0 LDR X8, [X24 + 0x20]
	0x029B40B4 MOV X0, X21
	0x029B40B8 LDR X8, [X8 + 0xC0]
	0x029B40BC LDR X1, [X8 + 0x30]
	0x029B40C0 LDR X8, [X1]
	0x029B40C4 BLR X8
	0x029B40C8 CBZ X0, 0x29B4138
	0x029B40CC LDR X8, [X24 + 0x20]
	0x029B40D0 MOV W1, W20
	0x029B40D4 MOV W2, W19
	0x029B40D8 MOV W3, W23
	0x029B40DC LDR X8, [X8 + 0xC0]
	0x029B40E0 LDR X4, [X8 + 0x70]
	0x029B40E4 LDR X8, [X4]
	0x029B40E8 BLR X8
	0x029B40EC TBZ X22, 0x0, 0x29B4124
	0x029B40F0 CBZ X21, 0x29B4138
	0x029B40F4 MOV X0, X21
	0x029B40F8 MOV X1, X31
	0x029B40FC BL 0x3CF13F4
	0x029B4100 MOV X0, X21
	0x029B4104 MOV W1, W20
	0x029B4108 MOV W2, W19
	0x029B410C LDP X20, X19, [X31 + 0x30]
	0x029B4110 LDP X22, X21, [X31 + 0x20]
	0x029B4114 LDP X24, X23, [X31 + 0x10]
	0x029B4118 MOV X3, X31
	0x029B411C LDR X30, [X31], #0x40
	0x029B4120 B 0x3CF4C30
	0x029B4124 LDP X20, X19, [X31 + 0x30]
	0x029B4128 LDP X22, X21, [X31 + 0x20]
	0x029B412C LDP X24, X23, [X31 + 0x10]
	0x029B4130 LDR X30, [X31], #0x40
	0x029B4134 RET
	0x029B4138 BL 0x1C16F20
	0x029B413C STP X30, X21, [X31 - 0x20]!
	0x029B4140 STP X20, X19, [X31 + 0x10]
	0x029B4144 LDR X8, [X3 + 0x20]
	0x029B4148 MOV W20, W1
	0x029B414C MOV X21, X3
	0x029B4150 MOV W19, W2
	0x029B4154 LDR X8, [X8 + 0xC0]
	0x029B4158 LDR X1, [X8 + 0x30]
	0x029B415C LDR X8, [X1]
	0x029B4160 BLR X8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, [X5+32]
	010 Move W23, W3
	011 Move W20, W1
	012 Move W19, W2
	013 Move X8, [X8+192]
	014 Move W1, W2
	015 Move W2, W20
	016 Move X24, X5
	017 Move X3, [X8+104]
	018 Move W22, W4
	019 Move X21, X0
	020 Call 0x29B4164, X0, X1, X2
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {61}
	025 Move X8, [X24+32]
	026 Move X0, X21
	027 Move X8, [X8+192]
	028 Move X1, [X8+48]
	029 Call 0x29B3D2C, X0
	030 Compare X0, 0
	031 JumpIfEqual {69}
	032 Move X8, [X24+32]
	033 Move W1, W20
	034 Move W2, W19
	035 Move W3, W23
	036 Move X8, [X8+192]
	037 Move X4, [X8+112]
	038 Call 0x26FCAA4, X0, X1, X2, X3
	039 Move TEMP, X22
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {61}
	043 Compare X21, 0
	044 JumpIfEqual {69}
	045 Move X0, X21
	046 Move X1, X31
	047 Call BaseTreeViewController.RebuildTree, X0
	048 Move X0, X21
	049 Move W1, W20
	050 Move W2, W19
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 Move X3, X31
	058 Move X30, [X31+64]
	059 Call CollectionViewController.RaiseItemIndexChanged, X0, X1, X2
	060 Return 
	061 Move X20, [X31+48]
	062 Move X19, [X31+56]
	063 Move X22, [X31+32]
	064 Move X21, [X31+40]
	065 Move X24, [X31+16]
	066 Move X23, [X31+24]
	067 Move X30, [X31+64]
	068 Return 
	069 Call 0x1C17F20

Method: System.Boolean IsChildOf(System.Int32 childId, System.Int32 id)

Disassembly:
	0x029B4164 CBZ X0, 0x29B418C
	0x029B4168 LDR X8, [X21 + 0x20]
	0x029B416C MOV W1, W20
	0x029B4170 MOV W2, W19
	0x029B4174 LDP X20, X19, [X31 + 0x10]
	0x029B4178 LDR X8, [X8 + 0xC0]
	0x029B417C LDR X3, [X8 + 0x78]
	0x029B4180 LDR X4, [X3]
	0x029B4184 LDP X30, X21, [X31], #0x20
	0x029B4188 BR X4
	0x029B418C BL 0x1C16F20
	0x029B4190 STR X30, [X31 - 0x20]!
	0x029B4194 STP X20, X19, [X31 + 0x10]
	0x029B4198 LDR X8, [X2 + 0x20]
	0x029B419C MOV X19, X1
	0x029B41A0 MOV X20, X2
	0x029B41A4 LDR X8, [X8 + 0xC0]
	0x029B41A8 LDR X1, [X8 + 0x30]
	0x029B41AC LDR X8, [X1]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+32]
	006 Move W20, W1
	007 Move X21, X3
	008 Move W19, W2
	009 Move X8, [X8+192]
	010 Move X1, [X8+48]
	011 Call 0x29B3D2C, X0
	012 Compare X0, 0
	013 JumpIfEqual {25}
	014 Move X8, [X21+32]
	015 Move W1, W20
	016 Move W2, W19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X8, [X8+192]
	020 Move X3, [X8+120]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Call 0x26FCB34, X0, X1, X2
	024 Return X0
	025 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<System.Int32> GetAllItemIds(System.Collections.Generic.IEnumerable`1<System.Int32> rootIds = null)

Disassembly:
	0x029B41B0 BLR X8
	0x029B41B4 CBZ X0, 0x29B41D8
	0x029B41B8 LDR X8, [X20 + 0x20]
	0x029B41BC MOV X1, X19
	0x029B41C0 LDP X20, X19, [X31 + 0x10]
	0x029B41C4 LDR X8, [X8 + 0xC0]
	0x029B41C8 LDR X2, [X8 + 0x80]
	0x029B41CC LDR X3, [X2]
	0x029B41D0 LDR X30, [X31], #0x20
	0x029B41D4 BR X3
	0x029B41D8 BL 0x1C16F20
	0x029B41DC MOV X1, X31
	0x029B41E0 B 0x3CF6D0C
	0x029B41E4 STR X30, [X31 - 0x20]!
	0x029B41E8 STP X20, X19, [X31 + 0x10]
	0x029B41EC CBZ X1, 0x29B4220
	0x029B41F0 LDR X8, [X2 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X2+32]
	005 Move X19, X1
	006 Move X20, X2
	007 Move X8, [X8+192]
	008 Move X1, [X8+48]
	009 Call 0x29B3D2C, X0
	010 Compare X0, 0
	011 JumpIfEqual {21}
	012 Move X8, [X20+32]
	013 Move X1, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X2, [X8+128]
	018 Move X30, [X31+32]
	019 Call 0x26FCB48, X0, X1
	020 Return X0
	021 Call 0x1C17F20

