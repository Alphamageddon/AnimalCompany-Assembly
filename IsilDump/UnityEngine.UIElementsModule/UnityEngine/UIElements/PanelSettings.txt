Type: UnityEngine.UIElements.PanelSettings

Method: UnityEngine.UIElements.ThemeStyleSheet get_themeStyleSheet()

Disassembly:
	0x03DB314C LDP X20, X19, [X31 + 0x10]
	0x03DB3150 MOV X1, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_themeStyleSheet(UnityEngine.UIElements.ThemeStyleSheet value)

Disassembly:
	0x03DB3154 LDP X30, X21, [X31], #0x20
	0x03DB3158 B 0x3DB35C4
	0x03DB315C BL 0x1C16F20

ISIL:
	001 Move [X0+24], X1
	002 Move X1, X31

Method: UnityEngine.RenderTexture get_targetTexture()

Disassembly:
	0x03DB32C0 LDR X0, [X19 + 0x18]
	0x03DB32C4 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_targetTexture(UnityEngine.RenderTexture value)

Disassembly:
	0x03DB32C8 LDR X30, [X31], #0x20
	0x03DB32CC RET
	0x03DB32D0 BL 0x1C16F20
	0x03DB32D4 STP X30, X23, [X31 - 0x30]!
	0x03DB32D8 STP X22, X21, [X31 + 0x10]
	0x03DB32DC STP X20, X19, [X31 + 0x20]
	0x03DB32E0 ADRP X23, 0x635000
	0x03DB32E4 ADRP X22, 0x3B5000
	0x03DB32E8 ADRP X20, 0x3B5000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+104]
	004 Move [X8+32], X1
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move X1, X31
	008 Move X30, [X31+16]
	009 Call RuntimePanelAccess.SetTargetTexture, X0
	010 Return 
	011 Call 0x1C17F20

Method: UnityEngine.UIElements.PanelScaleMode get_scaleMode()

Disassembly:
	0x03DB32EC ADRP X21, 0x368000
	0x03DB32F0 LDRB W8, [X23 + 0x2C]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_scaleMode(UnityEngine.UIElements.PanelScaleMode value)

Disassembly:
	0x03DB32F4 LDR X22, [X22 + 0xCC8]
	0x03DB32F8 LDR X20, [X20 + 0xCD0]

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Single get_referenceSpritePixelsPerUnit()

Disassembly:
	0x03DB32FC LDR X21, [X21 + 0x930]
	0x03DB3300 MOV X19, X0

ISIL:
	001 Move V0, [X0+44]
	002 Return V0

Method: System.Void set_referenceSpritePixelsPerUnit(System.Single value)

Disassembly:
	0x03DB3304 TBNZ X8, 0x0, 0x3DB3340
	0x03DB3308 ADRP X0, 0x3B5000

ISIL:
	001 Move [X0+44], S0
	002 Return 

Method: System.Single get_scale()

Disassembly:
	0x03DB330C LDR X0, [X0 + 0xCC8]
	0x03DB3310 BL 0x1C16CF4

ISIL:
	001 Move V0, [X0+48]
	002 Return V0

Method: System.Void set_scale(System.Single value)

Disassembly:
	0x03DB3314 ADRP X0, 0x3B5000
	0x03DB3318 LDR X0, [X0 + 0xCD0]

ISIL:
	001 Move [X0+48], S0
	002 Return 

Method: System.Single get_referenceDpi()

Disassembly:
	0x03DB331C BL 0x1C16CF4
	0x03DB3320 ADRP X0, 0x368000

ISIL:
	001 Move V0, [X0+52]
	002 Return V0

Method: System.Void set_referenceDpi(System.Single value)

Disassembly:
	0x03DB3324 LDR X0, [X0 + 0x970]
	0x03DB3328 BL 0x1C16CF4
	0x03DB332C ADRP X0, 0x368000
	0x03DB3330 LDR X0, [X0 + 0x930]
	0x03DB3334 BL 0x1C16CF4
	0x03DB3338 MOVZ W8, 0x1
	0x03DB333C STRB W8, [X23 + 0x2C]
	0x03DB3340 LDR X0, [X22]
	0x03DB3344 LDR X19, [X19 + 0x10]
	0x03DB3348 BL 0x1C16F10
	0x03DB334C LDR X2, [X20]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {12}
	004 Move S1, 1
	005 Move W8, 0x42C00000
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move S1, W8
	008 NotImplemented "Instruction FCSEL not yet implemented."
	009 Move [X0+52], S0
	010 Move X30, [X31+16]
	011 Return 
	012 Call 0x1C17F20

Method: System.Single get_fallbackDpi()

Disassembly:
	0x03DB3350 MOV X1, X31
	0x03DB3354 MOV X3, X31

ISIL:
	001 Move V0, [X0+56]
	002 Return V0

Method: System.Void set_fallbackDpi(System.Single value)

Disassembly:
	0x03DB3358 MOV X20, X0
	0x03DB335C BL 0x3E16F00
	0x03DB3360 LDR X0, [X21]
	0x03DB3364 LDR W8, [X0 + 0xE0]
	0x03DB3368 CBNZ W8, 0x3DB3370
	0x03DB336C BL 0x1C16DFC
	0x03DB3370 MOV X0, X19
	0x03DB3374 MOV X1, X20
	0x03DB3378 MOV X2, X31
	0x03DB337C BL 0x3E14FAC
	0x03DB3380 CBZ X0, 0x3DB33B8

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {12}
	004 Move S1, 1
	005 Move W8, 0x42C00000
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move S1, W8
	008 NotImplemented "Instruction FCSEL not yet implemented."
	009 Move [X0+56], S0
	010 Move X30, [X31+16]
	011 Return 
	012 Call 0x1C17F20

Method: UnityEngine.Vector2Int get_referenceResolution()

Disassembly:
	0x03DB3384 ADRP X9, 0x368000
	0x03DB3388 LDR X9, [X9 + 0x970]

ISIL:
	001 NotImplemented "Instruction LDUR not yet implemented."
	002 Return X0

Method: System.Void set_referenceResolution(UnityEngine.Vector2Int value)

Disassembly:
	0x03DB338C LDR X8, [X0]
	0x03DB3390 LDR X1, [X9]

ISIL:
	001 Move [X0+60], X1
	002 Return 

Method: UnityEngine.UIElements.PanelScreenMatchMode get_screenMatchMode()

Disassembly:
	0x03DB3394 LDRB W10, [X8 + 0x130]
	0x03DB3398 LDRB W9, [X1 + 0x130]

ISIL:
	001 Move W0, [X0+68]
	002 Return X0

Method: System.Void set_screenMatchMode(UnityEngine.UIElements.PanelScreenMatchMode value)

Disassembly:
	0x03DB339C CMP W10, W9
	0x03DB33A0 B.CC 0x3DB33C8

ISIL:
	001 Move [X0+68], W1
	002 Return 

Method: System.Single get_match()

Disassembly:
	0x03DB33A4 LDR X8, [X8 + 0xC8]
	0x03DB33A8 ADD X8, X8, X9, 0x3, LSL

ISIL:
	001 Move V0, [X0+72]
	002 Return V0

Method: System.Void set_match(System.Single value)

Disassembly:
	0x03DB33AC LDUR X8, [X8 - 0x8]
	0x03DB33B0 CMP X8, X1

ISIL:
	001 Move [X0+72], S0
	002 Return 

Method: System.Single get_sortingOrder()

Disassembly:
	0x03DB33B4 B.NE 0x3DB33C8
	0x03DB33B8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move V0, [X0+76]
	002 Return V0

Method: System.Void set_sortingOrder(System.Single value)

Disassembly:
	0x03DB33BC LDP X22, X21, [X31 + 0x10]
	0x03DB33C0 LDP X30, X23, [X31], #0x30
	0x03DB33C4 RET
	0x03DB33C8 BL 0x1C171E0
	0x03DB33CC STP D9, D8, [X31 - 0x30]!
	0x03DB33D0 STR X30, [X31 + 0x10]
	0x03DB33D4 STP X20, X19, [X31 + 0x20]
	0x03DB33D8 ADRP X20, 0x635000
	0x03DB33DC LDRB W8, [X20 + 0xF8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+104]
	004 Move [X8+76], S0
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move X1, X31
	008 Move X30, [X31+16]
	009 Call RuntimePanelAccess.SetSortingPriority, X0
	010 Return 
	011 Call 0x1C17F20

Method: System.Void ApplySortingOrder()

Disassembly:
	0x03DB33E0 MOV V8.16B, V0.16B
	0x03DB33E4 MOV X19, X0
	0x03DB33E8 TBNZ X8, 0x0, 0x3DB3400
	0x03DB33EC ADRP X0, 0x368000
	0x03DB33F0 LDR X0, [X0 + 0x930]
	0x03DB33F4 BL 0x1C16CF4
	0x03DB33F8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call RuntimePanelAccess.SetSortingPriority, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Int32 get_targetDisplay()

Disassembly:
	0x03DB33FC STRB W8, [X20 + 0xF8]
	0x03DB3400 ADRP X20, 0x626000

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_targetDisplay(System.Int32 value)

Disassembly:
	0x03DB3404 LDRB W8, [X20 + 0x5AA]
	0x03DB3408 LDR V9, [X19 + 0x16C]
	0x03DB340C CBNZ W8, 0x3DB3424
	0x03DB3410 ADRP X0, 0x347000
	0x03DB3414 LDR X0, [X0 + 0x4B8]
	0x03DB3418 BL 0x1C16CF4
	0x03DB341C MOVZ W8, 0x1
	0x03DB3420 STRB W8, [X20 + 0x5AA]
	0x03DB3424 ADRP X8, 0x347000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+104]
	004 Move [X8+80], W1
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Move X1, X31
	008 Move X30, [X31+16]
	009 Call RuntimePanelAccess.SetTargetDisplay, X0
	010 Return 
	011 Call 0x1C17F20

Method: System.Boolean get_clearDepthStencil()

Disassembly:
	0x03DB3428 LDR X8, [X8 + 0x4B8]
	0x03DB342C ADRP X9, 0xFFFFFFFFFCD37000

ISIL:
	001 Move W0, [X0+84]
	002 Return X0

Method: System.Void set_clearDepthStencil(System.Boolean value)

Disassembly:
	0x03DB3430 LDR V0, [X9 + 0x240]
	0x03DB3434 FABS S1, S9
	0x03DB3438 LDR X8, [X8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+84], W8
	003 Return 

Method: System.Single get_depthClearValue()

Disassembly:
	0x03DB343C FABS S2, S8
	0x03DB3440 FCMP S1, S2
	0x03DB3444 FCSEL S1, S1, S2, GT

ISIL:
	001 Move X8, -53248000
	002 Move V0, [X8+104]
	003 Return V0

Method: System.Boolean get_clearColor()

Disassembly:
	0x03DB3448 LDR X8, [X8 + 0xB8]
	0x03DB344C FMUL S0, S1, S0

ISIL:
	001 Move W0, [X0+85]
	002 Return X0

Method: System.Void set_clearColor(System.Boolean value)

Disassembly:
	0x03DB3450 FMOV S1, 8
	0x03DB3454 LDR V3, [X8]
	0x03DB3458 FMUL S1, S3, S1

ISIL:
	001 And W8, W1, 1
	002 Move [X0+85], W8
	003 Return 

Method: UnityEngine.Color get_colorClearValue()

Disassembly:
	0x03DB345C FCMP S0, S1
	0x03DB3460 FCSEL S0, S0, S1, GT
	0x03DB3464 FABD S1, S8, S8

ISIL:
	001 Move S0, [X0+88]
	002 Move S1, [X0+92]
	003 Move S2, [X0+96]
	004 Move S3, [X0+100]
	005 Return X0

Method: System.Void set_colorClearValue(UnityEngine.Color value)

Disassembly:
	0x03DB3468 FCMP S1, S0
	0x03DB346C B.MI 0x3DB348C
	0x03DB3470 LDR X8, [X19]

ISIL:
	001 Move [X0+88], S0
	002 Move [X0+96], S1
	003 Move [X0+96], S2
	004 Move [X0+104], S3
	005 Return 

Method: UnityEngine.UIElements.BaseRuntimePanel get_panel()

Disassembly:
	0x03DB3474 STR S8, [X19 + 0x16C]
	0x03DB3478 MOV X0, X19
	0x03DB347C LDR X9, [X8 + 0x3F8]
	0x03DB3480 LDR X1, [X8 + 0x400]
	0x03DB3484 BLR X9
	0x03DB3488 CBZ W0, 0x3DB349C
	0x03DB348C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call RuntimePanelAccess.get_panel, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Boolean get_isInitialized()

Disassembly:
	0x03DB3490 LDR X30, [X31 + 0x10]
	0x03DB3494 LDP D9, D8, [X31], #0x30
	0x03DB3498 RET
	0x03DB349C ADRP X8, 0x368000
	0x03DB34A0 LDR X8, [X8 + 0x930]

ISIL:
	001 Move X0, [X0+104]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call RuntimePanelAccess.get_isInitialized, X0
	006 Return X0
	007 Return X0

Method: UnityEngine.UIElements.VisualElement get_visualTree()

Disassembly:
	0x03DB34A4 LDR X0, [X8]
	0x03DB34A8 LDR W8, [X0 + 0xE0]
	0x03DB34AC CBNZ W8, 0x3DB34B4
	0x03DB34B0 BL 0x1C16DFC
	0x03DB34B4 LDP X20, X19, [X31 + 0x20]
	0x03DB34B8 LDR X30, [X31 + 0x10]
	0x03DB34BC MOV X0, X31
	0x03DB34C0 LDP D9, D8, [X31], #0x30
	0x03DB34C4 B 0x3E16960
	0x03DB34C8 STP X30, X19, [X31 - 0x10]!
	0x03DB34CC LDR X8, [X0 + 0x18]
	0x03DB34D0 CBZ X8, 0x3DB34E0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {14}
	005 Move X1, X31
	006 Call RuntimePanelAccess.get_panel, X0
	007 Compare X0, 0
	008 JumpIfEqual {14}
	009 Move X8, [X0]
	010 Move X2, [X8+920]
	011 Move X1, [X8+928]
	012 Move X30, [X31+16]
	013 CallNoReturn X2
	014 Call 0x1C17F20

Method: UnityEngine.UIElements.DynamicAtlasSettings get_dynamicAtlasSettings()

Disassembly:
	0x03DB34D4 MOV X19, X0
	0x03DB34D8 BL 0x3DB34E8

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Void set_dynamicAtlasSettings(UnityEngine.UIElements.DynamicAtlasSettings value)

Disassembly:
	0x03DB34DC STR X31, [X19 + 0x18]
	0x03DB34E0 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X0+120], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x03DB34E4 RET
	0x03DB34E8 STP X30, X21, [X31 - 0x20]!
	0x03DB34EC STP X20, X19, [X31 + 0x10]
	0x03DB34F0 ADRP X21, 0x635000
	0x03DB34F4 ADRP X20, 0x368000
	0x03DB34F8 LDRB W8, [X21 + 0x2D]
	0x03DB34FC LDR X20, [X20 + 0x930]
	0x03DB3500 MOV X19, X0
	0x03DB3504 TBNZ X8, 0x0, 0x3DB351C
	0x03DB3508 ADRP X0, 0x368000
	0x03DB350C LDR X0, [X0 + 0x930]
	0x03DB3510 BL 0x1C16CF4
	0x03DB3514 MOVZ W8, 0x1
	0x03DB3518 STRB W8, [X21 + 0x2D]
	0x03DB351C LDR X0, [X20]
	0x03DB3520 LDR X19, [X19 + 0x10]
	0x03DB3524 LDR W8, [X0 + 0xE0]
	0x03DB3528 CBNZ W8, 0x3DB3530
	0x03DB352C BL 0x1C16DFC
	0x03DB3530 MOV X0, X19
	0x03DB3534 LDP X20, X19, [X31 + 0x10]
	0x03DB3538 MOV X1, X31
	0x03DB353C LDP X30, X21, [X31], #0x20
	0x03DB3540 B 0x3E15430
	0x03DB3544 STR X30, [X31 - 0x10]!
	0x03DB3548 LDR X8, [X0 + 0x18]
	0x03DB354C CBZ X8, 0x3DB3560
	0x03DB3550 LDR X9, [X0 + 0x10]
	0x03DB3554 CBZ X9, 0x3DB3568
	0x03DB3558 LDR X9, [X9 + 0x20]
	0x03DB355C STR X9, [X8 + 0x190]
	0x03DB3560 LDR X30, [X31], #0x10
	0x03DB3564 RET
	0x03DB3568 BL 0x1C16F20
	0x03DB356C STR X30, [X31 - 0x10]!
	0x03DB3570 MOV X8, X0
	0x03DB3574 LDR X0, [X0 + 0x18]
	0x03DB3578 CBZ X0, 0x3DB3590
	0x03DB357C LDR X8, [X8 + 0x10]
	0x03DB3580 CBZ X8, 0x3DB3598

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x636000
	006 Move X20, 0x3B6000
	007 Move W8, [X21+34]
	008 Move X20, [X20+3224]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3B6000
	015 Move X0, [X0+3224]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+34], W8
	019 Move X9, -53243904
	020 Move V0, [X9+89]
	021 Move X10, 1200
	022 Move W8, 1
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 Move [X19+76], X31
	025 Move [X19+68], X31
	026 Move [X19+40], W8
	027 Move [X19+60], X10
	028 Move [X19+84], W8
	029 Move [X19+44], V0
	030 Move [X19+88], X31
	031 Move [X19+96], X31
	032 Call DynamicAtlasSettings.get_defaults
	033 Move [X19+120], X0
	034 Move X0, X19
	035 Move X1, X31
	036 Call ScriptableObject..ctor, X0
	037 Move X0, [X20]
	038 Call 0x1C17F10
	039 Move X1, X19
	040 Move X2, X31
	041 Move X20, X0
	042 Call RuntimePanelAccess..ctor, X0, X1
	043 Move [X19+104], X20
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 

Method: System.Void Reset()

Disassembly:
	0x03DB3584 LDR V0, [X8 + 0x4C]

ISIL:
	001 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03DB3588 LDR X30, [X31], #0x10
	0x03DB358C B 0x3DB33CC
	0x03DB3590 LDR X30, [X31], #0x10
	0x03DB3594 RET
	0x03DB3598 BL 0x1C16F20
	0x03DB359C STR X30, [X31 - 0x10]!
	0x03DB35A0 LDR X8, [X0 + 0x18]
	0x03DB35A4 CBZ X8, 0x3DB35B8
	0x03DB35A8 LDR X9, [X0 + 0x10]
	0x03DB35AC CBZ X9, 0x3DB35C0
	0x03DB35B0 LDR W9, [X9 + 0x50]
	0x03DB35B4 STR W9, [X8 + 0x1D8]
	0x03DB35B8 LDR X30, [X31], #0x10
	0x03DB35BC RET
	0x03DB35C0 BL 0x1C16F20
	0x03DB35C4 STP X30, X21, [X31 - 0x20]!
	0x03DB35C8 STP X20, X19, [X31 + 0x10]
	0x03DB35CC ADRP X21, 0x635000
	0x03DB35D0 ADRP X20, 0x368000
	0x03DB35D4 LDRB W8, [X21 + 0x2E]
	0x03DB35D8 LDR X20, [X20 + 0x930]
	0x03DB35DC MOV X19, X0
	0x03DB35E0 TBNZ X8, 0x0, 0x3DB35F8
	0x03DB35E4 ADRP X0, 0x368000
	0x03DB35E8 LDR X0, [X0 + 0x930]
	0x03DB35EC BL 0x1C16CF4
	0x03DB35F0 MOVZ W8, 0x1
	0x03DB35F4 STRB W8, [X21 + 0x2E]
	0x03DB35F8 LDR X0, [X20]
	0x03DB35FC LDR X19, [X19 + 0x10]
	0x03DB3600 LDR W8, [X0 + 0xE0]
	0x03DB3604 CBNZ W8, 0x3DB360C
	0x03DB3608 BL 0x1C16DFC
	0x03DB360C MOV X0, X19
	0x03DB3610 LDP X20, X19, [X31 + 0x10]
	0x03DB3614 MOV X1, X31
	0x03DB3618 LDP X30, X21, [X31], #0x20
	0x03DB361C B 0x3E16850
	0x03DB3620 STR X30, [X31 - 0x30]!
	0x03DB3624 STP X22, X21, [X31 + 0x10]
	0x03DB3628 STP X20, X19, [X31 + 0x20]
	0x03DB362C ADRP X21, 0x635000
	0x03DB3630 ADRP X22, 0x3B4000
	0x03DB3634 ADRP X19, 0x3B4000
	0x03DB3638 ADRP X20, 0x3B4000
	0x03DB363C LDRB W8, [X21 + 0x2F]
	0x03DB3640 LDR X22, [X22 + 0xD50]
	0x03DB3644 LDR X19, [X19 + 0xD58]
	0x03DB3648 LDR X20, [X20 + 0xE78]
	0x03DB364C TBNZ X8, 0x0, 0x3DB36DC
	0x03DB3650 ADRP X0, 0x3B4000
	0x03DB3654 LDR X0, [X0 + 0xE28]
	0x03DB3658 BL 0x1C16CF4
	0x03DB365C ADRP X0, 0x3B4000
	0x03DB3660 LDR X0, [X0 + 0xD30]
	0x03DB3664 BL 0x1C16CF4
	0x03DB3668 ADRP X0, 0x3B4000
	0x03DB366C LDR X0, [X0 + 0xE48]
	0x03DB3670 BL 0x1C16CF4
	0x03DB3674 ADRP X0, 0x3B5000
	0x03DB3678 LDR X0, [X0 + 0xCD8]
	0x03DB367C BL 0x1C16CF4
	0x03DB3680 ADRP X0, 0x3B4000
	0x03DB3684 LDR X0, [X0 + 0xD58]
	0x03DB3688 BL 0x1C16CF4
	0x03DB368C ADRP X0, 0x3B4000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x636000
	007 Move X20, 0x341000
	008 Move W8, [X21+35]
	009 Move X20, [X20+1432]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x341000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x341000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x3B6000
	022 Move X0, [X0+3232]
	023 Call 0x1C17CF4
	024 Move X0, 0x3B6000
	025 Move X0, [X0+3240]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+35], W8
	029 Move X0, [X20]
	030 Move X20, [X19+24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Object.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {69}
	043 Move X20, 0x3B6000
	044 Move X21, 0x3B6000
	045 Move X22, 0x341000
	046 Move X20, [X20+3232]
	047 Move X21, [X21+3240]
	048 Move X22, [X22+2600]
	049 Move X0, X19
	050 Move X1, X31
	051 Call Object.get_name, X0
	052 Move X8, [X20]
	053 Move X2, [X21]
	054 Move X1, X0
	055 Move X3, X31
	056 Move X0, X8
	057 Call String.Concat, X0, X1, X2
	058 Move X8, [X22]
	059 Move X20, X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X0, X20
	066 Move X1, X19
	067 Move X2, X31
	068 Call Debug.LogWarning, X0, X1
	069 Move X0, X31
	070 Call Screen.get_dpi
	071 Move [X19+192], S0
	072 Move X0, X19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Call PanelSettings.InitializeShaders, X0
	079 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03DB3810 ADRP X22, 0x3B4000
	0x03DB3814 LDR X22, [X22 + 0xE80]
	0x03DB3818 CMP W10, W11
	0x03DB381C B.CS 0x3DB3834
	0x03DB3820 ADD W9, W10, 0x1
	0x03DB3824 ADD X8, X8, X10, 0x3, LSL
	0x03DB3828 STR W9, [X19 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call RuntimePanelAccess.DisposePanel, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void DisposePanel()

Disassembly:
	0x03DB382C STR X20, [X8 + 0x20]
	0x03DB3830 B 0x3DB384C
	0x03DB3834 LDR X8, [X9 + 0x20]
	0x03DB3838 MOV X0, X19
	0x03DB383C MOV X1, X20
	0x03DB3840 LDR X8, [X8 + 0xC0]
	0x03DB3844 LDR X2, [X8 + 0x70]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+104]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call RuntimePanelAccess.DisposePanel, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Single get_ScreenDPI()

Disassembly:
	0x03DB3848 BL 0x301BF90
	0x03DB384C LDR X0, [X22]

ISIL:
	001 Move V0, [X0+192]
	002 Return V0

Method: System.Void set_ScreenDPI(System.Single value)

Disassembly:
	0x03DB3850 BL 0x1C16F10
	0x03DB3854 MOV X1, X31

ISIL:
	001 Move [X0+192], S0
	002 Return 

Method: System.Void UpdateScreenDPI()

Disassembly:
	0x03DB3690 LDR X0, [X0 + 0xD50]
	0x03DB3694 BL 0x1C16CF4
	0x03DB3698 ADRP X0, 0x3B4000
	0x03DB369C LDR X0, [X0 + 0xE50]
	0x03DB36A0 BL 0x1C16CF4
	0x03DB36A4 ADRP X0, 0x3B4000
	0x03DB36A8 LDR X0, [X0 + 0xE58]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call Screen.get_dpi
	006 Move [X19+192], S0
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: System.Void ApplyThemeStyleSheet(UnityEngine.UIElements.VisualElement root = null)

Disassembly:
	0x03DB3160 STR X30, [X31 - 0x20]!
	0x03DB3164 STP X20, X19, [X31 + 0x10]
	0x03DB3168 MOV X19, X1
	0x03DB316C MOV X1, X31
	0x03DB3170 MOV X20, X0
	0x03DB3174 BL 0x33BDD8C
	0x03DB3178 STR X19, [X20 + 0x10]
	0x03DB317C LDP X20, X19, [X31 + 0x10]
	0x03DB3180 LDR X30, [X31], #0x20
	0x03DB3184 RET
	0x03DB3188 LDR X8, [X0 + 0x18]
	0x03DB318C CMP X8, 0x0
	0x03DB3190 CSET W0, NE
	0x03DB3194 RET
	0x03DB3198 STR X30, [X31 - 0x20]!
	0x03DB319C STP X20, X19, [X31 + 0x10]
	0x03DB31A0 ADRP X20, 0x635000
	0x03DB31A4 LDRB W8, [X20 + 0x2B]
	0x03DB31A8 MOV X19, X0
	0x03DB31AC TBNZ X8, 0x0, 0x3DB31C4
	0x03DB31B0 ADRP X0, 0x340000
	0x03DB31B4 LDR X0, [X0 + 0x598]
	0x03DB31B8 BL 0x1C16CF4
	0x03DB31BC MOVZ W8, 0x1
	0x03DB31C0 STRB W8, [X20 + 0x2B]
	0x03DB31C4 LDR X8, [X19 + 0x18]
	0x03DB31C8 CBNZ X8, 0x3DB32C0
	0x03DB31CC MOV X0, X19
	0x03DB31D0 BL 0x3DB32D4
	0x03DB31D4 LDR X8, [X19 + 0x10]
	0x03DB31D8 STR X0, [X19 + 0x18]
	0x03DB31DC CBZ X8, 0x3DB32D0
	0x03DB31E0 CBZ X0, 0x3DB32D0
	0x03DB31E4 LDR V0, [X8 + 0x4C]
	0x03DB31E8 BL 0x3DB33CC
	0x03DB31EC LDR X8, [X19 + 0x10]
	0x03DB31F0 CBZ X8, 0x3DB32D0
	0x03DB31F4 LDR X0, [X19 + 0x18]
	0x03DB31F8 CBZ X0, 0x3DB32D0
	0x03DB31FC LDR W8, [X8 + 0x50]
	0x03DB3200 LDR X9, [X0]
	0x03DB3204 STR W8, [X0 + 0x1D8]
	0x03DB3208 LDR X8, [X9 + 0x398]
	0x03DB320C LDR X1, [X9 + 0x3A0]
	0x03DB3210 BLR X8
	0x03DB3214 LDR X8, [X19 + 0x10]
	0x03DB3218 CBZ X8, 0x3DB32D0
	0x03DB321C MOV X20, X0
	0x03DB3220 MOV X0, X8
	0x03DB3224 MOV X1, X31
	0x03DB3228 BL 0x3C389D4
	0x03DB322C CBZ X20, 0x3DB32D0
	0x03DB3230 MOV X1, X0
	0x03DB3234 MOV X0, X20
	0x03DB3238 MOV X2, X31
	0x03DB323C BL 0x3DEF278
	0x03DB3240 LDR X0, [X19 + 0x10]
	0x03DB3244 CBZ X0, 0x3DB32D0
	0x03DB3248 MOV X1, X20
	0x03DB324C MOV X2, X31
	0x03DB3250 BL 0x3DB2160
	0x03DB3254 LDR X8, [X19 + 0x10]
	0x03DB3258 CBZ X8, 0x3DB32D0
	0x03DB325C ADRP X9, 0x340000
	0x03DB3260 LDR X9, [X9 + 0x598]
	0x03DB3264 LDR X20, [X8 + 0x20]
	0x03DB3268 LDR X0, [X9]
	0x03DB326C LDR W9, [X0 + 0xE0]
	0x03DB3270 CBNZ W9, 0x3DB3278
	0x03DB3274 BL 0x1C16DFC
	0x03DB3278 MOV X0, X20
	0x03DB327C MOV X1, X31
	0x03DB3280 MOV X2, X31
	0x03DB3284 BL 0x3C354F8
	0x03DB3288 TBZ X0, 0x0, 0x3DB32A8
	0x03DB328C LDR X0, [X19 + 0x10]
	0x03DB3290 CBZ X0, 0x3DB32D0
	0x03DB3294 LDR X8, [X19 + 0x18]
	0x03DB3298 CBZ X8, 0x3DB32D0
	0x03DB329C LDR X9, [X0 + 0x20]
	0x03DB32A0 STR X9, [X8 + 0x190]
	0x03DB32A4 B 0x3DB32B0
	0x03DB32A8 LDR X0, [X19 + 0x10]
	0x03DB32AC CBZ X0, 0x3DB32D0
	0x03DB32B0 LDR X1, [X0 + 0xC8]
	0x03DB32B4 CBZ X1, 0x3DB32C0
	0x03DB32B8 MOV X2, X31
	0x03DB32BC BL 0x3DB300C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x636000
	009 Move W8, [X21+36]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x341000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+36], W8
	021 Move [X31+8], X31
	022 Move X0, [X19+104]
	023 Compare X0, 0
	024 JumpIfEqual {117}
	025 Move X1, X31
	026 Call RuntimePanelAccess.get_isInitialized, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {109}
	031 Compare X20, 0
	032 JumpIfNotEqual {36}
	033 Move X0, X19
	034 Call PanelSettings.get_visualTree, X0
	035 Move X20, X0
	036 Move X23, 0x341000
	037 Move X23, [X23+1432]
	038 Move X21, [X19+184]
	039 Move X22, [X19+24]
	040 Move X0, [X23]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X21
	046 Move X1, X22
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {77}
	053 Move X0, [X23]
	054 Move X21, [X19+184]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X31
	061 Move X2, X31
	062 Call Object.op_Inequality, X0, X1
	063 Compare X20, 0
	064 JumpIfEqual {77}
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {77}
	069 Move X0, X20
	070 Move X1, X31
	071 Call VisualElement.get_styleSheets, X0
	072 Move [X31+8], X0
	073 Move X1, [X19+184]
	074 Add X0, X31, 8
	075 Move X2, X31
	076 Call VisualElementStyleSheetSet.Remove, X0, X1
	077 Move X0, [X23]
	078 Move X21, [X19+24]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X21
	084 Move X1, X31
	085 Move X2, X31
	086 Call Object.op_Inequality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {107}
	091 Move X0, [X19+24]
	092 Compare X0, 0
	093 JumpIfEqual {117}
	094 Move W1, 1
	095 Move X2, X31
	096 Call StyleSheet.set_isDefaultStyleSheet, X0, X1
	097 Compare X20, 0
	098 JumpIfEqual {107}
	099 Move X0, X20
	100 Move X1, X31
	101 Call VisualElement.get_styleSheets, X0
	102 Move [X31+8], X0
	103 Move X1, [X19+24]
	104 Add X0, X31, 8
	105 Move X2, X31
	106 Call VisualElementStyleSheetSet.Add, X0, X1
	107 Move X8, [X19+24]
	108 Move [X19+184], X8
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X30, [X31+16]
	114 Move X23, [X31+24]
	115 Add X31, X31, 64
	116 Return 
	117 Call 0x1C17F20

Method: System.Void InitializeShaders()

Disassembly:
	0x03DB36AC BL 0x1C16CF4
	0x03DB36B0 ADRP X0, 0x3B4000
	0x03DB36B4 LDR X0, [X0 + 0xE60]
	0x03DB36B8 BL 0x1C16CF4
	0x03DB36BC ADRP X0, 0x3B4000
	0x03DB36C0 LDR X0, [X0 + 0xE78]
	0x03DB36C4 BL 0x1C16CF4
	0x03DB36C8 ADRP X0, 0x3B4000
	0x03DB36CC LDR X0, [X0 + 0xE80]
	0x03DB36D0 BL 0x1C16CF4
	0x03DB36D4 MOVZ W8, 0x1
	0x03DB36D8 STRB W8, [X21 + 0x2F]
	0x03DB36DC LDR X0, [X22]
	0x03DB36E0 BL 0x1C16F10
	0x03DB36E4 LDR X1, [X19]
	0x03DB36E8 MOV X19, X0
	0x03DB36EC BL 0x301B7C4
	0x03DB36F0 LDR X0, [X20]
	0x03DB36F4 BL 0x1C16F10
	0x03DB36F8 MOV X1, X31
	0x03DB36FC MOV X20, X0
	0x03DB3700 BL 0x3D9CC80
	0x03DB3704 CBZ X19, 0x3DB3A34
	0x03DB3708 ADRP X21, 0x3B5000
	0x03DB370C LDR X21, [X21 + 0xCD8]
	0x03DB3710 LDR W10, [X19 + 0x1C]
	0x03DB3714 LDR X8, [X19 + 0x10]
	0x03DB3718 LDR X9, [X21]
	0x03DB371C ADD W10, W10, 0x1
	0x03DB3720 STR W10, [X19 + 0x1C]
	0x03DB3724 CBZ X8, 0x3DB3A34
	0x03DB3728 LDRSW X10, [X19 + 0x18]
	0x03DB372C LDR W11, [X8 + 0x18]
	0x03DB3730 ADRP X22, 0x3B4000
	0x03DB3734 LDR X22, [X22 + 0xE50]
	0x03DB3738 CMP W10, W11
	0x03DB373C B.CS 0x3DB3754
	0x03DB3740 ADD W9, W10, 0x1
	0x03DB3744 ADD X8, X8, X10, 0x3, LSL
	0x03DB3748 STR W9, [X19 + 0x18]
	0x03DB374C STR X20, [X8 + 0x20]
	0x03DB3750 B 0x3DB376C
	0x03DB3754 LDR X8, [X9 + 0x20]
	0x03DB3758 MOV X0, X19
	0x03DB375C MOV X1, X20
	0x03DB3760 LDR X8, [X8 + 0xC0]
	0x03DB3764 LDR X2, [X8 + 0x70]
	0x03DB3768 BL 0x301BF90
	0x03DB376C LDR X0, [X22]
	0x03DB3770 BL 0x1C16F10
	0x03DB3774 MOV X1, X31
	0x03DB3778 MOV X20, X0
	0x03DB377C BL 0x3D9CC88
	0x03DB3780 LDR W10, [X19 + 0x1C]
	0x03DB3784 LDR X8, [X19 + 0x10]
	0x03DB3788 LDR X9, [X21]
	0x03DB378C ADD W10, W10, 0x1
	0x03DB3790 STR W10, [X19 + 0x1C]
	0x03DB3794 CBZ X8, 0x3DB3A34
	0x03DB3798 LDRSW X10, [X19 + 0x18]
	0x03DB379C LDR W11, [X8 + 0x18]
	0x03DB37A0 ADRP X22, 0x3B4000
	0x03DB37A4 LDR X22, [X22 + 0xE48]
	0x03DB37A8 CMP W10, W11
	0x03DB37AC B.CS 0x3DB37C4
	0x03DB37B0 ADD W9, W10, 0x1
	0x03DB37B4 ADD X8, X8, X10, 0x3, LSL
	0x03DB37B8 STR W9, [X19 + 0x18]
	0x03DB37BC STR X20, [X8 + 0x20]
	0x03DB37C0 B 0x3DB37DC
	0x03DB37C4 LDR X8, [X9 + 0x20]
	0x03DB37C8 MOV X0, X19
	0x03DB37CC MOV X1, X20
	0x03DB37D0 LDR X8, [X8 + 0xC0]
	0x03DB37D4 LDR X2, [X8 + 0x70]
	0x03DB37D8 BL 0x301BF90
	0x03DB37DC LDR X0, [X22]
	0x03DB37E0 BL 0x1C16F10
	0x03DB37E4 MOV X1, X31
	0x03DB37E8 MOV X20, X0
	0x03DB37EC BL 0x3D9CC90
	0x03DB37F0 LDR W10, [X19 + 0x1C]
	0x03DB37F4 LDR X8, [X19 + 0x10]
	0x03DB37F8 LDR X9, [X21]
	0x03DB37FC ADD W10, W10, 0x1
	0x03DB3800 STR W10, [X19 + 0x1C]
	0x03DB3804 CBZ X8, 0x3DB3A34
	0x03DB3808 LDRSW X10, [X19 + 0x18]
	0x03DB380C LDR W11, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x636000
	006 Move X21, 0x341000
	007 Move W8, [X20+37]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x341000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x3B2000
	018 Move X0, [X0+2624]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+37], W8
	022 Move X0, [X21]
	023 Move X20, [X19+128]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {49}
	036 Move X20, 0x3B2000
	037 Move X20, [X20+2624]
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X20]
	044 Move X8, [X0+184]
	045 Move X1, X31
	046 Move X0, [X8]
	047 Call Shader.Find, X0
	048 Move [X19+128], X0
	049 Move X0, [X21]
	050 Move X20, [X19+136]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {76}
	063 Move X20, 0x3B2000
	064 Move X20, [X20+2624]
	065 Move X0, [X20]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X20]
	071 Move X8, [X0+184]
	072 Move X1, X31
	073 Move X0, [X8+16]
	074 Call Shader.Find, X0
	075 Move [X19+136], X0
	076 Move X0, [X21]
	077 Move X20, [X19+144]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X20
	083 Move X1, X31
	084 Move X2, X31
	085 Call Object.op_Equality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {103}
	090 Move X20, 0x3B2000
	091 Move X20, [X20+2624]
	092 Move X0, [X20]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X20]
	098 Move X8, [X0+184]
	099 Move X1, X31
	100 Move X0, [X8+24]
	101 Call Shader.Find, X0
	102 Move [X19+144], X0
	103 Move X0, [X19+104]
	104 Compare X0, 0
	105 JumpIfEqual {113}
	106 Move X20, [X31+16]
	107 Move X19, [X31+24]
	108 Move X1, X31
	109 Move X30, [X31+32]
	110 Move X21, [X31+40]
	111 Call RuntimePanelAccess.SetTargetTexture, X0
	112 Return 
	113 Call 0x1C17F20

Method: System.Void ApplyPanelSettings()

Disassembly:
	0x03DB3858 MOV X20, X0
	0x03DB385C BL 0x3D9CC98
	0x03DB3860 LDR W10, [X19 + 0x1C]
	0x03DB3864 LDR X8, [X19 + 0x10]
	0x03DB3868 LDR X9, [X21]
	0x03DB386C ADD W10, W10, 0x1
	0x03DB3870 STR W10, [X19 + 0x1C]
	0x03DB3874 CBZ X8, 0x3DB3A34
	0x03DB3878 LDRSW X10, [X19 + 0x18]
	0x03DB387C LDR W11, [X8 + 0x18]
	0x03DB3880 ADRP X22, 0x3B4000
	0x03DB3884 LDR X22, [X22 + 0xE58]
	0x03DB3888 CMP W10, W11
	0x03DB388C B.CS 0x3DB38A4
	0x03DB3890 ADD W9, W10, 0x1
	0x03DB3894 ADD X8, X8, X10, 0x3, LSL
	0x03DB3898 STR W9, [X19 + 0x18]
	0x03DB389C STR X20, [X8 + 0x20]
	0x03DB38A0 B 0x3DB38BC
	0x03DB38A4 LDR X8, [X9 + 0x20]
	0x03DB38A8 MOV X0, X19
	0x03DB38AC MOV X1, X20
	0x03DB38B0 LDR X8, [X8 + 0xC0]
	0x03DB38B4 LDR X2, [X8 + 0x70]
	0x03DB38B8 BL 0x301BF90
	0x03DB38BC LDR X0, [X22]
	0x03DB38C0 BL 0x1C16F10
	0x03DB38C4 MOV X1, X31
	0x03DB38C8 MOV X20, X0
	0x03DB38CC BL 0x3D9CCA0
	0x03DB38D0 LDR W10, [X19 + 0x1C]
	0x03DB38D4 LDR X8, [X19 + 0x10]
	0x03DB38D8 LDR X9, [X21]
	0x03DB38DC ADD W10, W10, 0x1
	0x03DB38E0 STR W10, [X19 + 0x1C]
	0x03DB38E4 CBZ X8, 0x3DB3A34
	0x03DB38E8 LDRSW X10, [X19 + 0x18]
	0x03DB38EC LDR W11, [X8 + 0x18]
	0x03DB38F0 ADRP X22, 0x3B4000
	0x03DB38F4 LDR X22, [X22 + 0xE60]
	0x03DB38F8 CMP W10, W11
	0x03DB38FC B.CS 0x3DB3914
	0x03DB3900 ADD W9, W10, 0x1
	0x03DB3904 ADD X8, X8, X10, 0x3, LSL
	0x03DB3908 STR W9, [X19 + 0x18]
	0x03DB390C STR X20, [X8 + 0x20]
	0x03DB3910 B 0x3DB392C
	0x03DB3914 LDR X8, [X9 + 0x20]
	0x03DB3918 MOV X0, X19
	0x03DB391C MOV X1, X20
	0x03DB3920 LDR X8, [X8 + 0xC0]
	0x03DB3924 LDR X2, [X8 + 0x70]
	0x03DB3928 BL 0x301BF90
	0x03DB392C LDR X0, [X22]
	0x03DB3930 BL 0x1C16F10
	0x03DB3934 MOV X1, X31
	0x03DB3938 MOV X20, X0
	0x03DB393C BL 0x3D9CCA8
	0x03DB3940 LDR W10, [X19 + 0x1C]
	0x03DB3944 LDR X8, [X19 + 0x10]
	0x03DB3948 LDR X9, [X21]
	0x03DB394C ADD W10, W10, 0x1
	0x03DB3950 STR W10, [X19 + 0x1C]
	0x03DB3954 CBZ X8, 0x3DB3A34
	0x03DB3958 LDRSW X10, [X19 + 0x18]
	0x03DB395C LDR W11, [X8 + 0x18]
	0x03DB3960 ADRP X22, 0x3B4000
	0x03DB3964 LDR X22, [X22 + 0xE28]
	0x03DB3968 CMP W10, W11
	0x03DB396C B.CS 0x3DB3984
	0x03DB3970 ADD W9, W10, 0x1
	0x03DB3974 ADD X8, X8, X10, 0x3, LSL
	0x03DB3978 STR W9, [X19 + 0x18]
	0x03DB397C STR X20, [X8 + 0x20]
	0x03DB3980 B 0x3DB399C
	0x03DB3984 LDR X8, [X9 + 0x20]
	0x03DB3988 MOV X0, X19
	0x03DB398C MOV X1, X20
	0x03DB3990 LDR X8, [X8 + 0xC0]
	0x03DB3994 LDR X2, [X8 + 0x70]
	0x03DB3998 BL 0x301BF90
	0x03DB399C LDR X0, [X22]
	0x03DB39A0 BL 0x1C16F10
	0x03DB39A4 MOV X1, X31
	0x03DB39A8 MOV X20, X0
	0x03DB39AC BL 0x3D9CCC0
	0x03DB39B0 LDR W10, [X19 + 0x1C]
	0x03DB39B4 LDR X8, [X19 + 0x10]
	0x03DB39B8 LDR X9, [X21]
	0x03DB39BC ADD W10, W10, 0x1
	0x03DB39C0 STR W10, [X19 + 0x1C]
	0x03DB39C4 CBZ X8, 0x3DB3A34
	0x03DB39C8 LDRSW X10, [X19 + 0x18]
	0x03DB39CC LDR W11, [X8 + 0x18]
	0x03DB39D0 ADRP X21, 0x3B4000
	0x03DB39D4 LDR X21, [X21 + 0xD30]
	0x03DB39D8 CMP W10, W11
	0x03DB39DC B.CS 0x3DB39F4
	0x03DB39E0 ADD W9, W10, 0x1
	0x03DB39E4 ADD X8, X8, X10, 0x3, LSL
	0x03DB39E8 STR W9, [X19 + 0x18]
	0x03DB39EC STR X20, [X8 + 0x20]
	0x03DB39F0 B 0x3DB3A0C
	0x03DB39F4 LDR X8, [X9 + 0x20]
	0x03DB39F8 MOV X0, X19
	0x03DB39FC MOV X1, X20
	0x03DB3A00 LDR X8, [X8 + 0xC0]
	0x03DB3A04 LDR X2, [X8 + 0x70]
	0x03DB3A08 BL 0x301BF90
	0x03DB3A0C LDR X0, [X21]
	0x03DB3A10 LDR W8, [X0 + 0xE0]
	0x03DB3A14 CBNZ W8, 0x3DB3A1C
	0x03DB3A18 BL 0x1C16DFC
	0x03DB3A1C MOV X0, X19
	0x03DB3A20 LDP X20, X19, [X31 + 0x20]
	0x03DB3A24 LDP X22, X21, [X31 + 0x10]
	0x03DB3A28 MOV X1, X31
	0x03DB3A2C LDR X30, [X31], #0x30
	0x03DB3A30 B 0x3D9B3F8
	0x03DB3A34 BL 0x1C16F20
	0x03DB3A38 LDR X0, [X0 + 0x1E8]
	0x03DB3A3C RET
	0x03DB3A40 STP X30, X21, [X31 - 0x20]!
	0x03DB3A44 STP X20, X19, [X31 + 0x10]
	0x03DB3A48 ADRP X20, 0x635000
	0x03DB3A4C ADRP X21, 0x368000
	0x03DB3A50 LDRB W8, [X20 + 0x30]
	0x03DB3A54 LDR X21, [X21 + 0x970]
	0x03DB3A58 MOV X19, X0
	0x03DB3A5C TBNZ X8, 0x0, 0x3DB3A74
	0x03DB3A60 ADRP X0, 0x368000
	0x03DB3A64 LDR X0, [X0 + 0x970]
	0x03DB3A68 BL 0x1C16CF4
	0x03DB3A6C MOVZ W8, 0x1
	0x03DB3A70 STRB W8, [X20 + 0x30]
	0x03DB3A74 LDR X0, [X21]
	0x03DB3A78 BL 0x1C16F10
	0x03DB3A7C MOV X1, X19
	0x03DB3A80 MOV X20, X0
	0x03DB3A84 BL 0x3DB3A98
	0x03DB3A88 MOV X0, X20
	0x03DB3A8C LDP X20, X19, [X31 + 0x10]
	0x03DB3A90 LDP X30, X21, [X31], #0x20
	0x03DB3A94 RET
	0x03DB3A98 STR X30, [X31 - 0x40]!
	0x03DB3A9C STP X24, X23, [X31 + 0x10]
	0x03DB3AA0 STP X22, X21, [X31 + 0x20]
	0x03DB3AA4 STP X20, X19, [X31 + 0x30]
	0x03DB3AA8 ADRP X22, 0x635000
	0x03DB3AAC ADRP X21, 0x368000
	0x03DB3AB0 LDRB W8, [X22 + 0x31]
	0x03DB3AB4 LDR X21, [X21 + 0x970]
	0x03DB3AB8 MOV X20, X1
	0x03DB3ABC MOV X19, X0
	0x03DB3AC0 TBNZ X8, 0x0, 0x3DB3B50
	0x03DB3AC4 ADRP X0, 0x368000
	0x03DB3AC8 LDR X0, [X0 + 0x918]
	0x03DB3ACC BL 0x1C16CF4
	0x03DB3AD0 ADRP X0, 0x3B5000
	0x03DB3AD4 LDR X0, [X0 + 0xCE0]
	0x03DB3AD8 BL 0x1C16CF4
	0x03DB3ADC ADRP X0, 0x3B5000
	0x03DB3AE0 LDR X0, [X0 + 0xCE8]
	0x03DB3AE4 BL 0x1C16CF4
	0x03DB3AE8 ADRP X0, 0x3B5000
	0x03DB3AEC LDR X0, [X0 + 0xCF0]
	0x03DB3AF0 BL 0x1C16CF4
	0x03DB3AF4 ADRP X0, 0x3B5000
	0x03DB3AF8 LDR X0, [X0 + 0xC88]
	0x03DB3AFC BL 0x1C16CF4
	0x03DB3B00 ADRP X0, 0x340000
	0x03DB3B04 LDR X0, [X0 + 0x598]
	0x03DB3B08 BL 0x1C16CF4
	0x03DB3B0C ADRP X0, 0x3B5000
	0x03DB3B10 LDR X0, [X0 + 0xCF8]
	0x03DB3B14 BL 0x1C16CF4
	0x03DB3B18 ADRP X0, 0x368000
	0x03DB3B1C LDR X0, [X0 + 0x970]
	0x03DB3B20 BL 0x1C16CF4
	0x03DB3B24 ADRP X0, 0x3B5000
	0x03DB3B28 LDR X0, [X0 + 0xD00]
	0x03DB3B2C BL 0x1C16CF4
	0x03DB3B30 ADRP X0, 0x3B5000
	0x03DB3B34 LDR X0, [X0 + 0xD08]
	0x03DB3B38 BL 0x1C16CF4
	0x03DB3B3C ADRP X0, 0x3B5000
	0x03DB3B40 LDR X0, [X0 + 0xD10]
	0x03DB3B44 BL 0x1C16CF4
	0x03DB3B48 MOVZ W8, 0x1
	0x03DB3B4C STRB W8, [X22 + 0x31]
	0x03DB3B50 LDR X0, [X21]
	0x03DB3B54 ADRP X22, 0x368000
	0x03DB3B58 LDR W8, [X0 + 0xE0]
	0x03DB3B5C LDR X22, [X22 + 0x918]
	0x03DB3B60 CBNZ W8, 0x3DB3B6C
	0x03DB3B64 BL 0x1C16DFC
	0x03DB3B68 LDR X0, [X21]
	0x03DB3B6C LDR X8, [X22]
	0x03DB3B70 LDR X9, [X0 + 0xB8]
	0x03DB3B74 ADRP X22, 0x3B5000
	0x03DB3B78 ADRP X24, 0x3B5000
	0x03DB3B7C LDR W10, [X8 + 0xE0]
	0x03DB3B80 LDR X21, [X9]
	0x03DB3B84 LDR X22, [X22 + 0xC88]
	0x03DB3B88 LDR X24, [X24 + 0xCF0]
	0x03DB3B8C CBNZ W10, 0x3DB3B98
	0x03DB3B90 MOV X0, X8
	0x03DB3B94 BL 0x1C16DFC
	0x03DB3B98 ADRP X23, 0x340000
	0x03DB3B9C LDR X23, [X23 + 0x598]
	0x03DB3BA0 MOV X0, X19
	0x03DB3BA4 MOV X1, X20
	0x03DB3BA8 MOV X2, X21
	0x03DB3BAC BL 0x3DB3D78
	0x03DB3BB0 LDR X8, [X19]
	0x03DB3BB4 MOV X0, X19
	0x03DB3BB8 LDR X9, [X8 + 0x398]
	0x03DB3BBC LDR X1, [X8 + 0x3A0]
	0x03DB3BC0 BLR X9
	0x03DB3BC4 LDR X8, [X22]
	0x03DB3BC8 MOV X21, X0
	0x03DB3BCC MOV X0, X8
	0x03DB3BD0 BL 0x1C16F10
	0x03DB3BD4 MOV X1, X21
	0x03DB3BD8 MOV X2, X31
	0x03DB3BDC MOV X22, X0
	0x03DB3BE0 BL 0x3DB0E74
	0x03DB3BE4 LDR X0, [X24]
	0x03DB3BE8 BL 0x1C16F10
	0x03DB3BEC MOV X1, X22
	0x03DB3BF0 MOV X2, X31
	0x03DB3BF4 MOV X21, X0
	0x03DB3BF8 BL 0x3DAF9FC
	0x03DB3BFC LDR X8, [X19]
	0x03DB3C00 MOV X0, X19
	0x03DB3C04 MOV X1, X21
	0x03DB3C08 LDR X9, [X8 + 0x288]
	0x03DB3C0C LDR X2, [X8 + 0x290]
	0x03DB3C10 BLR X9
	0x03DB3C14 CBZ X20, 0x3DB3C54
	0x03DB3C18 ADRP X8, 0x3B5000
	0x03DB3C1C LDR X8, [X8 + 0xCF8]
	0x03DB3C20 LDR X9, [X20]
	0x03DB3C24 LDR X8, [X8]
	0x03DB3C28 LDRB W11, [X9 + 0x130]
	0x03DB3C2C LDRB W10, [X8 + 0x130]
	0x03DB3C30 CMP W11, W10
	0x03DB3C34 B.CS 0x3DB3C40
	0x03DB3C38 MOV X20, X31
	0x03DB3C3C B 0x3DB3C54
	0x03DB3C40 LDR X9, [X9 + 0xC8]
	0x03DB3C44 ADD X9, X9, X10, 0x3, LSL
	0x03DB3C48 LDUR X9, [X9 - 0x8]
	0x03DB3C4C CMP X9, X8
	0x03DB3C50 CSEL X20, X20, X31, EQ
	0x03DB3C54 STR X20, [X19 + 0x1E8]
	0x03DB3C58 LDR X0, [X23]
	0x03DB3C5C LDR W8, [X0 + 0xE0]
	0x03DB3C60 CBNZ W8, 0x3DB3C68
	0x03DB3C64 BL 0x1C16DFC
	0x03DB3C68 MOV X0, X20
	0x03DB3C6C MOV X1, X31
	0x03DB3C70 MOV X2, X31
	0x03DB3C74 BL 0x3C354F8
	0x03DB3C78 TBZ X0, 0x0, 0x3DB3C90
	0x03DB3C7C LDR X0, [X19 + 0x1E8]
	0x03DB3C80 CBZ X0, 0x3DB3D74
	0x03DB3C84 MOV X1, X31
	0x03DB3C88 BL 0x3C389D4
	0x03DB3C8C B 0x3DB3C9C
	0x03DB3C90 ADRP X8, 0x3B5000
	0x03DB3C94 LDR X8, [X8 + 0xD10]
	0x03DB3C98 LDR X0, [X8]
	0x03DB3C9C ADRP X23, 0x3B5000
	0x03DB3CA0 LDR X23, [X23 + 0xD08]
	0x03DB3CA4 STR X0, [X19 + 0xC0]
	0x03DB3CA8 MOV X0, X19
	0x03DB3CAC BL 0x3DBD0A0
	0x03DB3CB0 LDR X8, [X19]
	0x03DB3CB4 MOV X0, X19
	0x03DB3CB8 LDR X9, [X8 + 0x398]
	0x03DB3CBC LDR X1, [X8 + 0x3A0]
	0x03DB3CC0 BLR X9
	0x03DB3CC4 LDR X8, [X23]
	0x03DB3CC8 MOV X20, X0
	0x03DB3CCC LDR W9, [X8 + 0xE0]
	0x03DB3CD0 CBNZ W9, 0x3DB3CE0
	0x03DB3CD4 MOV X0, X8
	0x03DB3CD8 BL 0x1C16DFC
	0x03DB3CDC LDR X8, [X23]
	0x03DB3CE0 LDR X9, [X8 + 0xB8]
	0x03DB3CE4 LDR X21, [X9 + 0x8]
	0x03DB3CE8 CBNZ X21, 0x3DB3D40
	0x03DB3CEC LDR W9, [X8 + 0xE0]
	0x03DB3CF0 CBNZ W9, 0x3DB3D00
	0x03DB3CF4 MOV X0, X8
	0x03DB3CF8 BL 0x1C16DFC
	0x03DB3CFC LDR X8, [X23]
	0x03DB3D00 ADRP X9, 0x3B5000
	0x03DB3D04 LDR X8, [X8 + 0xB8]
	0x03DB3D08 LDR X9, [X9 + 0xCE8]
	0x03DB3D0C LDR X22, [X8]
	0x03DB3D10 LDR X0, [X9]
	0x03DB3D14 BL 0x1C16F10
	0x03DB3D18 ADRP X8, 0x3B5000
	0x03DB3D1C LDR X8, [X8 + 0xD00]
	0x03DB3D20 MOV X1, X22
	0x03DB3D24 MOV X3, X31
	0x03DB3D28 MOV X21, X0
	0x03DB3D2C LDR X2, [X8]
	0x03DB3D30 BL 0x2D0EA4C
	0x03DB3D34 LDR X8, [X23]
	0x03DB3D38 LDR X8, [X8 + 0xB8]
	0x03DB3D3C STR X21, [X8 + 0x8]
	0x03DB3D40 CBZ X20, 0x3DB3D74
	0x03DB3D44 ADRP X8, 0x3B5000
	0x03DB3D48 LDR X8, [X8 + 0xCE0]
	0x03DB3D4C MOV X0, X20
	0x03DB3D50 MOV X1, X21
	0x03DB3D54 MOV X2, X19
	0x03DB3D58 LDR X4, [X8]
	0x03DB3D5C LDP X20, X19, [X31 + 0x30]
	0x03DB3D60 LDP X22, X21, [X31 + 0x20]
	0x03DB3D64 LDP X24, X23, [X31 + 0x10]
	0x03DB3D68 MOVZ W3, 0x1
	0x03DB3D6C LDR X30, [X31], #0x40
	0x03DB3D70 B 0x21A1690
	0x03DB3D74 BL 0x1C16F20
	0x03DB3D78 STP X30, X23, [X31 - 0x30]!
	0x03DB3D7C STP X22, X21, [X31 + 0x10]
	0x03DB3D80 STP X20, X19, [X31 + 0x20]
	0x03DB3D84 ADRP X22, 0x635000
	0x03DB3D88 LDRB W8, [X22 + 0xFB]
	0x03DB3D8C MOV X20, X2
	0x03DB3D90 MOV X21, X1
	0x03DB3D94 MOV X19, X0
	0x03DB3D98 TBNZ X8, 0x0, 0x3DB3DBC
	0x03DB3D9C ADRP X0, 0x368000
	0x03DB3DA0 LDR X0, [X0 + 0x918]
	0x03DB3DA4 BL 0x1C16CF4
	0x03DB3DA8 ADRP X0, 0x36A000
	0x03DB3DAC LDR X0, [X0 + 0xD08]
	0x03DB3DB0 BL 0x1C16CF4
	0x03DB3DB4 MOVZ W8, 0x1
	0x03DB3DB8 STRB W8, [X22 + 0xFB]
	0x03DB3DBC ADD X8, X19, 0x16C
	0x03DB3DC0 STR X31, [X8]
	0x03DB3DC4 STR X31, [X19 + 0x190]
	0x03DB3DC8 ADRP X23, 0x625000
	0x03DB3DCC ADRP X22, 0x368000
	0x03DB3DD0 LDRB W8, [X23 + 0xAC0]
	0x03DB3DD4 LDR X22, [X22 + 0x918]
	0x03DB3DD8 CBNZ W8, 0x3DB3DF0
	0x03DB3DDC ADRP X0, 0x344000
	0x03DB3DE0 LDR X0, [X0 + 0x270]
	0x03DB3DE4 BL 0x1C16CF4
	0x03DB3DE8 MOVZ W8, 0x1
	0x03DB3DEC STRB W8, [X23 + 0xAC0]
	0x03DB3DF0 ADRP X8, 0x344000
	0x03DB3DF4 LDR X8, [X8 + 0x270]
	0x03DB3DF8 ADRP X23, 0x36A000
	0x03DB3DFC LDR X8, [X8]
	0x03DB3E00 LDR X8, [X8 + 0xB8]
	0x03DB3E04 LDP V0, V1, [X8 + 0x60]
	0x03DB3E08 LDP V2, V3, [X8 + 0x40]
	0x03DB3E0C ADD X8, X19, 0x198
	0x03DB3E10 STP V0, V1, [X8 + 0x20]
	0x03DB3E14 STP V2, V3, [X8]
	0x03DB3E18 LDR X0, [X22]
	0x03DB3E1C LDR W8, [X0 + 0xE0]
	0x03DB3E20 LDR X23, [X23 + 0xD08]
	0x03DB3E24 CBNZ W8, 0x3DB3E30
	0x03DB3E28 BL 0x1C16DFC
	0x03DB3E2C LDR X0, [X22]
	0x03DB3E30 LDR X8, [X0 + 0xB8]
	0x03DB3E34 LDR X8, [X8 + 0x8]
	0x03DB3E38 STR X8, [X19 + 0x1E0]
	0x03DB3E3C LDR X0, [X23]
	0x03DB3E40 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], D10
	003 Move [X31+88], D9
	004 Move [X31+96], D8
	005 Move [X31+104], X30
	006 Move [X31+112], X24
	007 Move [X31+120], X23
	008 Move [X31+128], X22
	009 Move [X31+136], X21
	010 Move [X31+144], X20
	011 Move [X31+152], X19
	012 NotImplemented "Instruction MRS not yet implemented."
	013 Move X8, [X23+40]
	014 Move X20, 0x636000
	015 Move X19, X0
	016 Move [X31+72], X8
	017 Move W8, [X20+38]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x3B6000
	023 Move X0, [X0+3248]
	024 Call 0x1C17CF4
	025 Move X0, 0x36A000
	026 Move X0, [X0+296]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+38], W8
	030 Move [X31+8], W31
	031 Move [X31], X31
	032 Move [X31+48], X31
	033 Move [X31+56], X31
	034 NotImplemented "Instruction STRH not yet implemented."
	035 Move S9, [X19+168]
	036 Move S8, [X19+172]
	037 Move V10, [X19+176]
	038 Move X0, X31
	039 Call Screen.get_dpi
	040 Move X0, X19
	041 Move [X19+192], S0
	042 Call PanelSettings.GetDisplayRect, X0
	043 Move V4, [X19+192]
	044 Move X0, X19
	045 Move [X19+160], S0
	046 Move [X19+168], S1
	047 Move [X19+168], S2
	048 Move [X19+176], S3
	049 Call PanelSettings.ResolveScale, X0, X1, V0
	050 Move X0, X19
	051 Move [X19+176], S0
	052 Call PanelSettings.get_visualTree, X0
	053 Compare X0, 0
	054 JumpIfEqual {416}
	055 Move X1, X31
	056 Call VisualElement.get_style, X0
	057 Compare X0, 0
	058 JumpIfEqual {416}
	059 Move X24, 0x36A000
	060 Move X8, [X0]
	061 Move X24, [X24+296]
	062 Move X20, X0
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X1, [X24]
	065 Compare X9, 0
	066 JumpIfEqual {73}
	067 Move X10, [X8+176]
	068 Add X10, X10, 8
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Subtract X9, X9, 1
	072 Add X10, X10, 16
	073 Move W2, 53
	074 Move X0, X20
	075 Call 0x1C5D788
	076 Move W9, [X10]
	077 Add W9, W9, 53
	078 Add X8, X8, W9
	079 Add X0, X8, 312
	080 Move X8, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X20
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move [X31], X0
	085 Move [X31+8], W1
	086 Add X0, X31, 0
	087 Move X1, X31
	088 Call StyleLength.get_value, X0
	089 Move X20, X0
	090 Move S0, W31
	091 Move X0, X31
	092 Call Length.op_Implicit, V0
	093 Move X1, X0
	094 Move X0, X20
	095 Move X2, X31
	096 Call Length.op_Equality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {107}
	101 Move V0, [X19+176]
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 Move V0, [X19+168]
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Move V0, [X19+172]
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 Move X0, [X19+104]
	108 Compare X0, 0
	109 JumpIfEqual {416}
	110 Move X1, X31
	111 Call RuntimePanelAccess.get_panel, X0
	112 Compare X0, 0
	113 JumpIfEqual {416}
	114 Move V0, [X19+176]
	115 Move S1, 1
	116 Move X1, X31
	117 NotImplemented "Instruction FDIV not yet implemented."
	118 NotImplemented "Instruction FCMP not yet implemented."
	119 Move S0, W31
	120 NotImplemented "Instruction FCSEL not yet implemented."
	121 Call BaseVisualElementPanel.set_scale, X0, V0
	122 Move X0, X19
	123 Call PanelSettings.get_visualTree, X0
	124 Compare X0, 0
	125 JumpIfEqual {416}
	126 Move X1, X31
	127 Call VisualElement.get_style, X0
	128 Move X20, X0
	129 Move S0, W31
	130 Move X0, X31
	131 Call StyleLength.op_Implicit, V0
	132 Compare X20, 0
	133 JumpIfEqual {416}
	134 Move X9, [X20]
	135 Move X8, X1
	136 Move X1, [X24]
	137 Move X21, X0
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 And X22, X8, 0
	140 Compare X10, 0
	141 JumpIfEqual {148}
	142 Move X8, [X9+176]
	143 Add X8, X8, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X10, X10, 1
	147 Add X8, X8, 16
	148 Move W2, 25
	149 Move X0, X20
	150 Call 0x1C5D788
	151 Move W8, [X8]
	152 Add W8, W8, 25
	153 Add X8, X9, W8
	154 Add X0, X8, 312
	155 Move X8, [X0]
	156 Move X3, [X0+8]
	157 Move X0, X20
	158 Move X1, X21
	159 Move X2, X22
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move X0, X19
	162 Call PanelSettings.get_visualTree, X0
	163 Compare X0, 0
	164 JumpIfEqual {416}
	165 Move X1, X31
	166 Call VisualElement.get_style, X0
	167 Move X20, X0
	168 Move S0, W31
	169 Move X0, X31
	170 Call StyleLength.op_Implicit, V0
	171 Compare X20, 0
	172 JumpIfEqual {416}
	173 Move X9, [X20]
	174 Move X8, X1
	175 Move X1, [X24]
	176 Move X21, X0
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 And X22, X8, 0
	179 Compare X10, 0
	180 JumpIfEqual {187}
	181 Move X8, [X9+176]
	182 Add X8, X8, 8
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Subtract X10, X10, 1
	186 Add X8, X8, 16
	187 Move W2, 45
	188 Move X0, X20
	189 Call 0x1C5D788
	190 Move W8, [X8]
	191 Add W8, W8, 45
	192 Add X8, X9, W8
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X3, [X0+8]
	196 Move X0, X20
	197 Move X1, X21
	198 Move X2, X22
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X0, X19
	201 Call PanelSettings.get_visualTree, X0
	202 Compare X0, 0
	203 JumpIfEqual {416}
	204 Move X1, X31
	205 Call VisualElement.get_style, X0
	206 Move V0, [X19+168]
	207 Move V1, [X19+176]
	208 Move X20, X0
	209 Move X0, X31
	210 Multiply S0, S0, S1
	211 Call StyleLength.op_Implicit, V0
	212 Compare X20, 0
	213 JumpIfEqual {416}
	214 Move X9, [X20]
	215 Move X8, X1
	216 Move X1, [X24]
	217 Move X21, X0
	218 NotImplemented "Instruction LDRH not yet implemented."
	219 And X22, X8, 0
	220 Compare X10, 0
	221 JumpIfEqual {228}
	222 Move X8, [X9+176]
	223 Add X8, X8, 8
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Subtract X10, X10, 1
	227 Add X8, X8, 16
	228 Move W2, 54
	229 Move X0, X20
	230 Call 0x1C5D788
	231 Move W8, [X8]
	232 Add W8, W8, 54
	233 Add X8, X9, W8
	234 Add X0, X8, 312
	235 Move X8, [X0]
	236 Move X3, [X0+8]
	237 Move X0, X20
	238 Move X1, X21
	239 Move X2, X22
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move X0, X19
	242 Call PanelSettings.get_visualTree, X0
	243 Compare X0, 0
	244 JumpIfEqual {416}
	245 Move X1, X31
	246 Call VisualElement.get_style, X0
	247 Move S0, [X19+172]
	248 Move S1, [X19+176]
	249 Move X20, X0
	250 Move X0, X31
	251 Multiply S0, S0, S1
	252 Call StyleLength.op_Implicit, V0
	253 Compare X20, 0
	254 JumpIfEqual {416}
	255 Move X9, [X20]
	256 Move X8, X1
	257 Move X1, [X24]
	258 Move X21, X0
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 And X22, X8, 0
	261 Compare X10, 0
	262 JumpIfEqual {269}
	263 Move X8, [X9+176]
	264 Add X8, X8, 8
	265 NotImplemented "Instruction LDUR not yet implemented."
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Subtract X10, X10, 1
	268 Add X8, X8, 16
	269 Move W2, 24
	270 Move X0, X20
	271 Call 0x1C5D788
	272 Move W8, [X8]
	273 Add W8, W8, 24
	274 Add X8, X9, W8
	275 Add X0, X8, 312
	276 Move X8, [X0]
	277 Move X3, [X0+8]
	278 Move X0, X20
	279 Move X1, X21
	280 Move X2, X22
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move X0, [X19+104]
	283 Compare X0, 0
	284 JumpIfEqual {416}
	285 Move X1, X31
	286 Call RuntimePanelAccess.get_panel, X0
	287 Compare X0, 0
	288 JumpIfEqual {416}
	289 Move X8, [X19+32]
	290 Move [X0+400], X8
	291 Move X0, [X19+104]
	292 Compare X0, 0
	293 JumpIfEqual {416}
	294 Move X1, X31
	295 Call RuntimePanelAccess.get_panel, X0
	296 Compare X0, 0
	297 JumpIfEqual {416}
	298 Move W8, [X19+80]
	299 Move [X0+472], W8
	300 Move X0, [X19+104]
	301 Compare X0, 0
	302 JumpIfEqual {416}
	303 Move X1, X31
	304 Call RuntimePanelAccess.get_panel, X0
	305 Compare X0, 0
	306 JumpIfEqual {416}
	307 Move W1, W31
	308 Move X2, X31
	309 Call BaseRuntimePanel.set_drawToCameras, X0, X1
	310 Move X0, [X19+104]
	311 Compare X0, 0
	312 JumpIfEqual {416}
	313 Move X1, X31
	314 Call RuntimePanelAccess.get_panel, X0
	315 NotImplemented "Instruction STRH not yet implemented."
	316 NotImplemented "Instruction LDUR not yet implemented."
	317 Move W8, [X19+85]
	318 Move W9, [X19+84]
	319 Move [X31+50], V0
	320 Move V0, [X31+3]
	321 NotImplemented "Instruction LDRH not yet implemented."
	322 Move [X31+1], V0
	323 NotImplemented "Instruction STRH not yet implemented."
	324 Compare X0, 0
	325 JumpIfEqual {416}
	326 Move [X0+56], W9
	327 Move [X0+57], W8
	328 NotImplemented "Instruction LDRH not yet implemented."
	329 Move V0, [X31+1]
	330 NotImplemented "Instruction STRH not yet implemented."
	331 Move [X0+58], V0
	332 Move X0, [X19+104]
	333 Compare X0, 0
	334 JumpIfEqual {416}
	335 Move X1, X31
	336 Call RuntimePanelAccess.get_panel, X0
	337 Compare X0, 0
	338 JumpIfEqual {416}
	339 Move V0, [X19+44]
	340 Move [X0+52], S0
	341 Move X0, [X19+104]
	342 Compare X0, 0
	343 JumpIfEqual {416}
	344 Move X1, X31
	345 Call RuntimePanelAccess.get_panel, X0
	346 Compare X0, 0
	347 JumpIfEqual {416}
	348 Move X8, [X0]
	349 Move X9, [X8+1128]
	350 Move X1, [X8+1136]
	351 NotImplemented "Instruction BLR not yet implemented."
	352 Compare X0, 0
	353 JumpIfEqual {401}
	354 Move X8, 0x3B6000
	355 Move X8, [X8+3248]
	356 Move X9, [X0]
	357 Move X20, X0
	358 Move X8, [X8]
	359 Move W11, [X9+304]
	360 Move W10, [X8+304]
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move X9, [X9+200]
	363 Add X9, X9, X10
	364 NotImplemented "Instruction LDUR not yet implemented."
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X8, [X19+120]
	367 Compare X8, 0
	368 JumpIfEqual {416}
	369 Move W1, [X8+16]
	370 Move X0, X20
	371 Move X2, X31
	372 Call DynamicAtlas.set_minAtlasSize, X0, X1
	373 Move X8, [X19+120]
	374 Compare X8, 0
	375 JumpIfEqual {416}
	376 Move W1, [X8+20]
	377 Move X0, X20
	378 Move X2, X31
	379 Call DynamicAtlas.set_maxAtlasSize, X0, X1
	380 Move X8, [X19+120]
	381 Compare X8, 0
	382 JumpIfEqual {416}
	383 Move W1, [X8+24]
	384 Move X0, X20
	385 Move X2, X31
	386 Call DynamicAtlas.set_maxSubTextureSize, X0, X1
	387 Move X8, [X19+120]
	388 Compare X8, 0
	389 JumpIfEqual {416}
	390 Move W1, [X8+28]
	391 Move X0, X20
	392 Move X2, X31
	393 Call DynamicAtlas.set_activeFilters, X0, X1
	394 Move X8, [X19+120]
	395 Compare X8, 0
	396 JumpIfEqual {416}
	397 Move X1, [X8+32]
	398 Move X0, X20
	399 Move X2, X31
	400 Call DynamicAtlas.set_customFilter, X0, X1
	401 Move X8, [X23+40]
	402 Move X9, [X31+72]
	403 NotImplemented "Instruction CMP not yet implemented."
	404 Move X20, [X31+144]
	405 Move X19, [X31+152]
	406 Move X22, [X31+128]
	407 Move X21, [X31+136]
	408 Move X24, [X31+112]
	409 Move X23, [X31+120]
	410 Move X30, [X31+104]
	411 Move D9, [X31+88]
	412 Move D8, [X31+96]
	413 Move V10, [X31+80]
	414 Add X31, X31, 160
	415 Return 
	416 Call 0x1C17F20
	417 Call 0x3EB2B20

Method: System.Void SetScreenToPanelSpaceFunction(System.Func`2<UnityEngine.Vector2, UnityEngine.Vector2> screentoPanelSpaceFunction)

Disassembly:
	0x03DB400C LDR X30, [X31], #0x20
	0x03DB4010 BR X2
	0x03DB4014 BL 0x1C16F20
	0x03DB4018 STR X30, [X31 - 0x30]!
	0x03DB401C STP X22, X21, [X31 + 0x10]
	0x03DB4020 STP X20, X19, [X31 + 0x20]
	0x03DB4024 ADRP X21, 0x634000
	0x03DB4028 ADRP X22, 0x367000
	0x03DB402C LDRB W8, [X21 + 0x33]
	0x03DB4030 LDR X22, [X22 + 0x930]
	0x03DB4034 MOV X19, X1
	0x03DB4038 MOV X20, X0
	0x03DB403C TBNZ X8, 0x0, 0x3DB4054

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+104]
	005 Move [X19+200], X1
	006 Compare X0, 0
	007 JumpIfEqual {18}
	008 Move X1, X31
	009 Call RuntimePanelAccess.get_panel, X0
	010 Compare X0, 0
	011 JumpIfEqual {18}
	012 Move X1, [X19+200]
	013 Move X2, X31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call BaseRuntimePanel.set_screenToPanelSpace, X0, X1
	017 Return 
	018 Call 0x1C17F20

Method: System.Single ResolveScale(UnityEngine.Rect targetRect, System.Single screenDpi)

Disassembly:
	0x03DB3F3C LDR X8, [X19]
	0x03DB3F40 MOV X0, X19
	0x03DB3F44 LDR X9, [X8 + 0x3C8]
	0x03DB3F48 LDR X1, [X8 + 0x3D0]
	0x03DB3F4C BLR X9
	0x03DB3F50 CBZ X0, 0x3DB4014
	0x03DB3F54 ADRP X10, 0x3B5000
	0x03DB3F58 LDR X8, [X0]
	0x03DB3F5C LDR X10, [X10 + 0xD18]
	0x03DB3F60 MOV X20, X0
	0x03DB3F64 LDRH W9, [X8 + 0x12E]
	0x03DB3F68 LDR X1, [X10]
	0x03DB3F6C CBZ X9, 0x3DB3F90
	0x03DB3F70 LDR X10, [X8 + 0xB0]
	0x03DB3F74 ADD X10, X10, 0x8
	0x03DB3F78 LDUR X11, [X10 - 0x8]
	0x03DB3F7C CMP X11, X1
	0x03DB3F80 B.EQ 0x3DB3FA0
	0x03DB3F84 SUBS X9, X9, 0x1
	0x03DB3F88 ADD X10, X10, 0x10
	0x03DB3F8C B.NE 0x3DB3F78
	0x03DB3F90 MOVZ W2, 0x2
	0x03DB3F94 MOV X0, X20
	0x03DB3F98 BL 0x1C5C788
	0x03DB3F9C B 0x3DB3FB0
	0x03DB3FA0 LDR W9, [X10]
	0x03DB3FA4 ADD W9, W9, 0x2
	0x03DB3FA8 ADD X8, X8, W9, 0x4, SXTW
	0x03DB3FAC ADD X0, X8, 0x138
	0x03DB3FB0 LDP X8, X1, [X0]
	0x03DB3FB4 MOV X0, X20
	0x03DB3FB8 BLR X8
	0x03DB3FBC LDR X8, [X19]
	0x03DB3FC0 MOV X0, X19
	0x03DB3FC4 LDR X9, [X8 + 0x2C8]
	0x03DB3FC8 LDR X1, [X8 + 0x2D0]
	0x03DB3FCC BLR X9
	0x03DB3FD0 LDR X8, [X19]
	0x03DB3FD4 MOV X0, X19
	0x03DB3FD8 LDR X9, [X8 + 0x2D8]
	0x03DB3FDC LDR X1, [X8 + 0x2E0]
	0x03DB3FE0 BLR X9
	0x03DB3FE4 LDR X8, [X19]
	0x03DB3FE8 MOV X0, X19
	0x03DB3FEC LDR X9, [X8 + 0x2E8]
	0x03DB3FF0 LDR X1, [X8 + 0x2F0]
	0x03DB3FF4 BLR X9
	0x03DB3FF8 LDR X8, [X19]
	0x03DB3FFC MOV X0, X19
	0x03DB4000 LDP X20, X19, [X31 + 0x10]
	0x03DB4004 LDR X2, [X8 + 0x2F8]
	0x03DB4008 LDR X1, [X8 + 0x300]

ISIL:
	001 Move W8, [X0+40]
	002 Move S0, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move V4, [X0+56]
	007 NotImplemented "Instruction FCMP not yet implemented."
	008 Move V0, [X0+52]
	009 NotImplemented "Instruction FDIV not yet implemented."
	010 Move W8, [X0+60]
	011 Move W9, [X0+64]
	012 Multiply W10, W9, W8
	013 Compare W10, 0
	014 JumpIfEqual {39}
	015 Move W10, [X0+68]
	016 NotImplemented "Instruction SCVTF not yet implemented."
	017 NotImplemented "Instruction SCVTF not yet implemented."
	018 NotImplemented "Instruction FDIV not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction FDIV not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction FCMP not yet implemented."
	023 NotImplemented "Instruction FCSEL not yet implemented."
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 NotImplemented "Instruction FCSEL not yet implemented."
	026 Move V3, [X0+72]
	027 Move S4, 1
	028 Move S5, W31
	029 Subtract S2, S2, S1
	030 NotImplemented "Instruction FMIN not yet implemented."
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 NotImplemented "Instruction FCSEL not yet implemented."
	033 NotImplemented "Instruction FMAX not yet implemented."
	034 Multiply S2, S2, S3
	035 Add S1, S1, S2
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Move S0, 1
	038 NotImplemented "Instruction FDIV not yet implemented."
	039 Move V1, [X0+48]
	040 NotImplemented "Instruction FDIV not yet implemented."
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move S1, W31
	043 NotImplemented "Instruction FCSEL not yet implemented."
	044 Return V0

Method: UnityEngine.Rect GetDisplayRect()

Disassembly:
	0x03DB3E44 CBNZ W8, 0x3DB3E4C
	0x03DB3E48 BL 0x1C16DFC
	0x03DB3E4C MOV X0, X19
	0x03DB3E50 MOV X1, X21
	0x03DB3E54 MOV W2, W31
	0x03DB3E58 MOV X3, X20
	0x03DB3E5C BL 0x3DBD3F0
	0x03DB3E60 LDR X8, [X22]
	0x03DB3E64 LDP X22, X21, [X31 + 0x10]
	0x03DB3E68 LDR X8, [X8 + 0xB8]
	0x03DB3E6C LDR W9, [X8]
	0x03DB3E70 ADD W10, W9, 0x1
	0x03DB3E74 STR W10, [X8]
	0x03DB3E78 STR W9, [X19 + 0x168]
	0x03DB3E7C LDP X20, X19, [X31 + 0x20]
	0x03DB3E80 LDP X30, X23, [X31], #0x30
	0x03DB3E84 RET
	0x03DB3E88 STR X1, [X0 + 0xC0]
	0x03DB3E8C B 0x3DBD0A0
	0x03DB3E90 STP X30, X21, [X31 - 0x20]!
	0x03DB3E94 STP X20, X19, [X31 + 0x10]
	0x03DB3E98 ADRP X21, 0x635000
	0x03DB3E9C ADRP X20, 0x340000
	0x03DB3EA0 LDRB W8, [X21 + 0x32]
	0x03DB3EA4 LDR X20, [X20 + 0x598]
	0x03DB3EA8 MOV X19, X0
	0x03DB3EAC TBNZ X8, 0x0, 0x3DB3EC4
	0x03DB3EB0 ADRP X0, 0x340000
	0x03DB3EB4 LDR X0, [X0 + 0x598]
	0x03DB3EB8 BL 0x1C16CF4
	0x03DB3EBC MOVZ W8, 0x1
	0x03DB3EC0 STRB W8, [X21 + 0x32]
	0x03DB3EC4 LDR X0, [X20]
	0x03DB3EC8 LDR X20, [X19 + 0x1E8]
	0x03DB3ECC LDR W8, [X0 + 0xE0]
	0x03DB3ED0 CBNZ W8, 0x3DB3ED8
	0x03DB3ED4 BL 0x1C16DFC
	0x03DB3ED8 MOV X0, X20
	0x03DB3EDC MOV X1, X31
	0x03DB3EE0 MOV X2, X31
	0x03DB3EE4 BL 0x3C354F8
	0x03DB3EE8 TBZ X0, 0x0, 0x3DB3EFC
	0x03DB3EEC LDR X0, [X19 + 0x1E8]
	0x03DB3EF0 CBZ X0, 0x3DB3F0C
	0x03DB3EF4 MOV X1, X31
	0x03DB3EF8 BL 0x3DB2858
	0x03DB3EFC MOV X0, X19
	0x03DB3F00 LDP X20, X19, [X31 + 0x10]
	0x03DB3F04 LDP X30, X21, [X31], #0x20
	0x03DB3F08 B 0x3DB3F10
	0x03DB3F0C BL 0x1C16F20
	0x03DB3F10 STR X30, [X31 - 0x20]!
	0x03DB3F14 STP X20, X19, [X31 + 0x10]
	0x03DB3F18 ADRP X20, 0x635000
	0x03DB3F1C LDRB W8, [X20 + 0xE8]
	0x03DB3F20 MOV X19, X0
	0x03DB3F24 TBNZ X8, 0x0, 0x3DB3F3C
	0x03DB3F28 ADRP X0, 0x3B5000
	0x03DB3F2C LDR X0, [X0 + 0xD18]
	0x03DB3F30 BL 0x1C16CF4
	0x03DB3F34 MOVZ W8, 0x1
	0x03DB3F38 STRB W8, [X20 + 0xE8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x636000
	006 Move X20, 0x341000
	007 Move W8, [X21+39]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x369000
	015 Move X0, [X0+2328]
	016 Call 0x1C17CF4
	017 Move X0, 0x341000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+39], W8
	022 Move X0, [X20]
	023 Move X20, [X19+32]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {52}
	036 Move X0, [X19+32]
	037 Compare X0, 0
	038 JumpIfEqual {77}
	039 Move X8, [X0]
	040 Move X9, [X8+392]
	041 Move X1, [X8+400]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, [X19+32]
	044 Compare X8, 0
	045 JumpIfEqual {77}
	046 Move X9, [X8]
	047 Move W19, W0
	048 Move X0, X8
	049 Move X10, [X9+424]
	050 Move X1, [X9+432]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, 0x369000
	053 Move X8, [X8+2328]
	054 Move W20, [X19+80]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move W0, W20
	061 Move X1, X31
	062 Call BaseRuntimePanel.getScreenRenderingWidth, X0
	063 Move W8, [X19+80]
	064 Move W19, W0
	065 Move X1, X31
	066 Move W0, W8
	067 Call BaseRuntimePanel.getScreenRenderingHeight, X0
	068 NotImplemented "Instruction SCVTF not yet implemented."
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 NotImplemented "Instruction SCVTF not yet implemented."
	072 Move S0, W31
	073 Move S1, W31
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return X0
	077 Call 0x1C17F20

Method: System.Void AttachAndInsertUIDocumentToVisualTree(UnityEngine.UIElements.UIDocument uiDocument)

Disassembly:
	0x03DB4040 ADRP X0, 0x367000
	0x03DB4044 LDR X0, [X0 + 0x930]
	0x03DB4048 BL 0x1C16CF4
	0x03DB404C MOVZ W8, 0x1
	0x03DB4050 STRB W8, [X21 + 0x33]
	0x03DB4054 LDR X0, [X22]
	0x03DB4058 LDR W8, [X0 + 0xE0]
	0x03DB405C CBNZ W8, 0x3DB4064
	0x03DB4060 BL 0x1C16DFC
	0x03DB4064 MOV X0, X31
	0x03DB4068 BL 0x3E16378
	0x03DB406C CBZ X0, 0x3DB408C
	0x03DB4070 MOV X1, X20
	0x03DB4074 MOV X2, X19
	0x03DB4078 LDP X20, X19, [X31 + 0x20]
	0x03DB407C LDP X22, X21, [X31 + 0x10]
	0x03DB4080 MOV X3, X31
	0x03DB4084 LDR X30, [X31], #0x30
	0x03DB4088 B 0x3D8F964
	0x03DB408C BL 0x1C16F20
	0x03DB4090 STR X30, [X31 - 0x20]!
	0x03DB4094 STP X20, X19, [X31 + 0x10]
	0x03DB4098 ADRP X20, 0x634000
	0x03DB409C ADRP X19, 0x367000
	0x03DB40A0 LDRB W8, [X20 + 0x34]
	0x03DB40A4 LDR X19, [X19 + 0x970]
	0x03DB40A8 TBNZ X8, 0x0, 0x3DB40C0
	0x03DB40AC ADRP X0, 0x367000
	0x03DB40B0 LDR X0, [X0 + 0x970]
	0x03DB40B4 BL 0x1C16CF4
	0x03DB40B8 MOVZ W8, 0x1
	0x03DB40BC STRB W8, [X20 + 0x34]
	0x03DB40C0 BL 0x3DB3620
	0x03DB40C4 LDR X8, [X19]
	0x03DB40C8 LDP X20, X19, [X31 + 0x10]
	0x03DB40CC LDR X8, [X8 + 0xB8]
	0x03DB40D0 STR X0, [X8]
	0x03DB40D4 LDR X30, [X31], #0x20
	0x03DB40D8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x635000
	006 Move W8, [X21+40]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3B5000
	014 Move X0, [X0+3256]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+40], W8
	018 Move X0, [X20+112]
	019 Compare X0, 0
	020 JumpIfEqual {25}
	021 Move X1, X19
	022 Move X2, X31
	023 Call UIDocumentList.RemoveFromListAndFromVisualTree, X0, X1
	024 Move X21, [X20+112]
	025 Move X8, 0x3B5000
	026 Move X8, [X8+3256]
	027 Move X0, [X8]
	028 Call 0x1C17F10
	029 Move X1, X31
	030 Move X21, X0
	031 Call UIDocumentList..ctor, X0
	032 Move [X20+112], X21
	033 Move X0, X20
	034 Call PanelSettings.get_visualTree, X0
	035 Compare X21, 0
	036 JumpIfEqual {48}
	037 Move X1, X19
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X2, X0
	041 Move X0, X21
	042 Move W3, W31
	043 Move X4, X31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call UIDocumentList.AddToListAndToVisualTree, X0, X1, X2, X3
	047 Return 
	048 Call 0x1C17F20

Method: System.Void DetachUIDocument(UnityEngine.UIElements.UIDocument uiDocument)

Disassembly:
	0x03DB40DC STR X30, [X31 - 0x20]!
	0x03DB40E0 STP X20, X19, [X31 + 0x10]
	0x03DB40E4 ADRP X19, 0x634000
	0x03DB40E8 ADRP X20, 0x3B4000
	0x03DB40EC LDRB W8, [X19 + 0x35]
	0x03DB40F0 LDR X20, [X20 + 0xD08]
	0x03DB40F4 TBNZ X8, 0x0, 0x3DB410C
	0x03DB40F8 ADRP X0, 0x3B4000
	0x03DB40FC LDR X0, [X0 + 0xD08]
	0x03DB4100 BL 0x1C16CF4
	0x03DB4104 MOVZ W8, 0x1
	0x03DB4108 STRB W8, [X19 + 0x35]
	0x03DB410C LDR X0, [X20]
	0x03DB4110 BL 0x1C16F10
	0x03DB4114 MOV X1, X31
	0x03DB4118 MOV X19, X0
	0x03DB411C BL 0x33BDD8C
	0x03DB4120 LDR X8, [X20]
	0x03DB4124 LDR X8, [X8 + 0xB8]
	0x03DB4128 STR X19, [X8]
	0x03DB412C LDP X20, X19, [X31 + 0x10]
	0x03DB4130 LDR X30, [X31], #0x20
	0x03DB4134 RET
	0x03DB4138 MOV X1, X31
	0x03DB413C B 0x33BDD8C
	0x03DB4140 CBZ X2, 0x3DB414C
	0x03DB4144 MOV X0, X2
	0x03DB4148 B 0x3DB4018
	0x03DB414C STR X30, [X31 - 0x10]!
	0x03DB4150 BL 0x1C16F20
	0x03DB4154 STP X30, X21, [X31 - 0x20]!
	0x03DB4158 STP X20, X19, [X31 + 0x10]
	0x03DB415C ADRP X21, 0x634000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x635000
	006 Move W8, [X21+41]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3B5000
	014 Move X0, [X0+3264]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+41], W8
	018 Move X0, [X19+112]
	019 Compare X0, 0
	020 JumpIfEqual {33}
	021 Move X1, X20
	022 Move X2, X31
	023 Call UIDocumentList.RemoveFromListAndFromVisualTree, X0, X1
	024 Move X8, [X19+112]
	025 Compare X8, 0
	026 JumpIfEqual {48}
	027 Move X8, [X8+16]
	028 Compare X8, 0
	029 JumpIfEqual {48}
	030 Move W8, [X8+24]
	031 Compare W8, 0
	032 JumpIfEqual {38}
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 
	038 Move X0, [X19+104]
	039 Compare X0, 0
	040 JumpIfEqual {48}
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X1, X31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call RuntimePanelAccess.MarkPotentiallyEmpty, X0
	047 Return 
	048 Call 0x1C17F20

