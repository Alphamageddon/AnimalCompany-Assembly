Type: UnityEngine.UIElements.PointerEventsHelper

Method: System.Void SendEnterLeave(UnityEngine.UIElements.VisualElement previousTopElementUnderPointer, UnityEngine.UIElements.VisualElement currentTopElementUnderPointer, UnityEngine.UIElements.IPointerEvent triggerEvent, UnityEngine.Vector2 position, System.Int32 pointerId)

Disassembly:
	0x02232AE8 B 0x2AA528C
	0x02232AEC ADRP X8, 0x1EEA000
	0x02232AF0 LDR X0, [X24]
	0x02232AF4 LDR X8, [X8 + 0x250]
	0x02232AF8 LDR W9, [X0 + 0xE0]
	0x02232AFC LDR X23, [X8]
	0x02232B00 CBNZ W9, 0x2232B08
	0x02232B04 BL 0x1C16DFC
	0x02232B08 MOV X0, X23
	0x02232B0C MOV X1, X31
	0x02232B10 BL 0x338C698
	0x02232B14 MOV X1, X0
	0x02232B18 MOV X0, X22
	0x02232B1C MOV X2, X31
	0x02232B20 BL 0x3395194
	0x02232B24 TBZ X0, 0x0, 0x2232B54
	0x02232B28 LDR X0, [X21 + 0x38]
	0x02232B2C CBZ X0, 0x2232C3C
	0x02232B30 ADRP X8, 0x1EEA000
	0x02232B34 LDR X8, [X8 + 0x260]
	0x02232B38 MOV X1, X19
	0x02232B3C LDP X20, X19, [X31 + 0x30]
	0x02232B40 LDP X22, X21, [X31 + 0x20]
	0x02232B44 LDR X2, [X8]
	0x02232B48 LDP X24, X23, [X31 + 0x10]
	0x02232B4C LDR X30, [X31], #0x40
	0x02232B50 B 0x2A96034
	0x02232B54 ADRP X8, 0x1EEA000
	0x02232B58 LDR X0, [X24]
	0x02232B5C LDR X8, [X8 + 0x278]
	0x02232B60 LDR W9, [X0 + 0xE0]
	0x02232B64 LDR X23, [X8]
	0x02232B68 CBNZ W9, 0x2232B70
	0x02232B6C BL 0x1C16DFC
	0x02232B70 MOV X0, X23
	0x02232B74 MOV X1, X31
	0x02232B78 BL 0x338C698
	0x02232B7C MOV X1, X0
	0x02232B80 MOV X0, X22
	0x02232B84 MOV X2, X31
	0x02232B88 BL 0x3395194
	0x02232B8C TBZ X0, 0x0, 0x2232BA4
	0x02232B90 LDR X0, [X21 + 0x40]
	0x02232B94 CBZ X0, 0x2232C3C
	0x02232B98 ADRP X8, 0x1EEA000
	0x02232B9C LDR X8, [X8 + 0x268]
	0x02232BA0 B 0x2232AD0
	0x02232BA4 LDR X0, [X24]
	0x02232BA8 LDR X8, [X20 + 0x38]
	0x02232BAC LDR W9, [X0 + 0xE0]
	0x02232BB0 LDR X20, [X8]
	0x02232BB4 CBNZ W9, 0x2232BBC
	0x02232BB8 BL 0x1C16DFC
	0x02232BBC MOV X0, X20
	0x02232BC0 MOV X1, X31
	0x02232BC4 BL 0x338C698
	0x02232BC8 CBZ X0, 0x2232C3C
	0x02232BCC LDR X8, [X0]
	0x02232BD0 LDP X9, X1, [X8 + 0x168]
	0x02232BD4 BLR X9
	0x02232BD8 ADRP X8, 0x1EEA000
	0x02232BDC LDR X8, [X8 + 0x288]
	0x02232BE0 MOV X1, X0
	0x02232BE4 MOV X2, X19
	0x02232BE8 MOV X3, X31
	0x02232BEC LDR X8, [X8]
	0x02232BF0 MOV X0, X8
	0x02232BF4 BL 0x3227BD4
	0x02232BF8 ADRP X8, 0x1EC1000
	0x02232BFC LDR X8, [X8 + 0xA28]
	0x02232C00 MOV X19, X0
	0x02232C04 LDR X8, [X8]
	0x02232C08 LDR W9, [X8 + 0xE0]
	0x02232C0C CBNZ W9, 0x2232C18
	0x02232C10 MOV X0, X8
	0x02232C14 BL 0x1C16DFC
	0x02232C18 MOV X0, X19
	0x02232C1C MOV X1, X31
	0x02232C20 BL 0x3C06A04
	0x02232C24 LDP X20, X19, [X31 + 0x30]
	0x02232C28 LDP X22, X21, [X31 + 0x20]
	0x02232C2C LDP X24, X23, [X31 + 0x10]
	0x02232C30 MOV W0, W31
	0x02232C34 LDR X30, [X31], #0x40
	0x02232C38 RET
	0x02232C3C BL 0x1C16F20
	0x02232C40 STP X29, X30, [X31 - 0x60]!
	0x02232C44 STP X28, X27, [X31 + 0x10]
	0x02232C48 STP X26, X25, [X31 + 0x20]
	0x02232C4C STP X24, X23, [X31 + 0x30]
	0x02232C50 STP X22, X21, [X31 + 0x40]
	0x02232C54 STP X20, X19, [X31 + 0x50]
	0x02232C58 ADD X29, X31, 0x0
	0x02232C5C SUB X31, X31, 0x30
	0x02232C60 STUR X1, [X29 - 0x20]
	0x02232C64 MRS X28, 0xC000
	0x02232C68 LDR X8, [X28 + 0x28]
	0x02232C6C MOV X21, X3
	0x02232C70 MOV X23, X2
	0x02232C74 STUR X8, [X29 - 0x8]
	0x02232C78 STUR X2, [X29 - 0x18]
	0x02232C7C LDR X24, [X3 + 0x38]
	0x02232C80 STUR X0, [X29 - 0x28]
	0x02232C84 CBNZ X24, 0x2232D08
	0x02232C88 ADRP X0, 0x1EC1000
	0x02232C8C LDR X0, [X0 + 0xB58]
	0x02232C90 BL 0x1C16CF4
	0x02232C94 ADRP X0, 0x1EE9000
	0x02232C98 LDR X0, [X0 + 0x5E0]
	0x02232C9C BL 0x1C16CF4
	0x02232CA0 ADRP X0, 0x1EC1000
	0x02232CA4 LDR X0, [X0 + 0xA28]
	0x02232CA8 BL 0x1C16CF4
	0x02232CAC ADRP X0, 0x1EC1000
	0x02232CB0 LDR X0, [X0 + 0x758]
	0x02232CB4 BL 0x1C16CF4
	0x02232CB8 ADRP X0, 0x1EC5000
	0x02232CBC LDR X0, [X0 + 0xCA0]
	0x02232CC0 BL 0x1C16CF4
	0x02232CC4 ADRP X0, 0x1EC1000
	0x02232CC8 LDR X0, [X0 + 0xA90]
	0x02232CCC BL 0x1C16CF4
	0x02232CD0 ADRP X0, 0x1EC3000
	0x02232CD4 LDR X0, [X0 + 0x278]
	0x02232CD8 BL 0x1C16CF4
	0x02232CDC ADRP X0, 0x1EC1000
	0x02232CE0 LDR X0, [X0 + 0x6C0]
	0x02232CE4 BL 0x1C16CF4
	0x02232CE8 ADRP X0, 0x1EEA000
	0x02232CEC LDR X0, [X0 + 0x290]
	0x02232CF0 BL 0x1C16CF4
	0x02232CF4 LDR X24, [X21 + 0x38]
	0x02232CF8 CBNZ X24, 0x2232D08
	0x02232CFC MOV X0, X21
	0x02232D00 BL 0x1C5C6E0
	0x02232D04 LDR X24, [X21 + 0x38]
	0x02232D08 LDR X0, [X24]
	0x02232D0C LDR W25, [X0 + 0xFC]
	0x02232D10 LDRB W9, [X0 + 0x135]
	0x02232D14 TBNZ X9, 0x0, 0x2232D2C
	0x02232D18 BL 0x1C5C684
	0x02232D1C LDR X24, [X21 + 0x38]
	0x02232D20 LDR W8, [X0 + 0xFC]
	0x02232D24 LDR X0, [X24]
	0x02232D28 B 0x2232D30
	0x02232D2C MOV W8, W25
	0x02232D30 ADD W8, W8, 0x10
	0x02232D34 ADD X8, X8, 0xF
	0x02232D38 ADD X9, X31, 0x0
	0x02232D3C AND X8, X8, 0x1FFFFFFFF
	0x02232D40 SUB X22, X9, X8
	0x02232D44 ADD X31, X22, 0x0
	0x02232D48 ADD X9, X25, 0xF
	0x02232D4C ADD X8, X31, 0x0
	0x02232D50 AND X9, X9, 0x1FFFFFFFF
	0x02232D54 SUB X26, X8, X9
	0x02232D58 ADD X31, X26, 0x0
	0x02232D5C ADD X8, X31, 0x0
	0x02232D60 SUB X27, X8, X9
	0x02232D64 ADD X31, X27, 0x0
	0x02232D68 LDR W8, [X0 + 0x28]
	0x02232D6C SUB X19, X29, 0x18
	0x02232D70 MOV X0, X26
	0x02232D74 MOV X2, X25
	0x02232D78 CMP W8, 0x0
	0x02232D7C CSEL X1, X23, X19, LT
	0x02232D80 BL 0x3EB1AC0
	0x02232D84 LDR X0, [X24]
	0x02232D88 MOV X1, X26
	0x02232D8C BL 0x1C16E04
	0x02232D90 LDR X20, [X21 + 0x38]
	0x02232D94 MOV X24, X0
	0x02232D98 MOV X0, X27
	0x02232D9C MOV X2, X25
	0x02232DA0 LDR X8, [X20]
	0x02232DA4 LDR W8, [X8 + 0x28]
	0x02232DA8 CMP W8, 0x0
	0x02232DAC CSEL X1, X23, X19, LT
	0x02232DB0 BL 0x3EB1AC0
	0x02232DB4 LDR X0, [X20]
	0x02232DB8 MOV X1, X27
	0x02232DBC BL 0x1C16E04
	0x02232DC0 CBZ X0, 0x2232DDC
	0x02232DC4 ADRP X8, 0x1EC1000
	0x02232DC8 LDR X8, [X8 + 0x758]
	0x02232DCC LDR X1, [X8]
	0x02232DD0 LDR X8, [X0]
	0x02232DD4 CMP X8, X1
	0x02232DD8 B.EQ 0x2233048
	0x02232DDC LDR X20, [X21 + 0x38]
	0x02232DE0 MOV X0, X26
	0x02232DE4 MOV X2, X25
	0x02232DE8 LDR X8, [X20]
	0x02232DEC LDR W8, [X8 + 0x28]
	0x02232DF0 CMP W8, 0x0
	0x02232DF4 CSEL X1, X23, X19, LT
	0x02232DF8 BL 0x3EB1AC0
	0x02232DFC LDR X0, [X20]
	0x02232E00 MOV X1, X26
	0x02232E04 BL 0x1C16E04
	0x02232E08 CBZ X0, 0x2232E24
	0x02232E0C ADRP X8, 0x1EC1000
	0x02232E10 LDR X8, [X8 + 0xA90]
	0x02232E14 LDR X1, [X8]
	0x02232E18 LDR X8, [X0]
	0x02232E1C CMP X8, X1
	0x02232E20 B.EQ 0x223307C
	0x02232E24 LDR X20, [X21 + 0x38]
	0x02232E28 SUB X19, X29, 0x18
	0x02232E2C MOV X0, X26
	0x02232E30 MOV X2, X25
	0x02232E34 LDR X8, [X20]
	0x02232E38 LDR W8, [X8 + 0x28]
	0x02232E3C CMP W8, 0x0
	0x02232E40 CSEL X1, X23, X19, LT
	0x02232E44 BL 0x3EB1AC0
	0x02232E48 LDR X0, [X20]
	0x02232E4C MOV X1, X26
	0x02232E50 BL 0x1C16E04
	0x02232E54 CBZ X0, 0x2232E70
	0x02232E58 ADRP X8, 0x1EC1000
	0x02232E5C LDR X8, [X8 + 0xB58]
	0x02232E60 LDR X1, [X8]
	0x02232E64 LDR X8, [X0]
	0x02232E68 CMP X8, X1
	0x02232E6C B.EQ 0x22330B0
	0x02232E70 LDR X20, [X21 + 0x38]
	0x02232E74 MOV X0, X26
	0x02232E78 MOV X2, X25
	0x02232E7C LDR X8, [X20]
	0x02232E80 LDR W8, [X8 + 0x28]
	0x02232E84 CMP W8, 0x0
	0x02232E88 CSEL X1, X23, X19, LT
	0x02232E8C BL 0x3EB1AC0
	0x02232E90 LDR X0, [X20]
	0x02232E94 MOV X1, X26
	0x02232E98 BL 0x1C16E04
	0x02232E9C CBZ X0, 0x2232EB8
	0x02232EA0 ADRP X8, 0x1EC3000
	0x02232EA4 LDR X8, [X8 + 0x278]
	0x02232EA8 LDR X1, [X8]
	0x02232EAC LDR X8, [X0]
	0x02232EB0 CMP X8, X1
	0x02232EB4 B.EQ 0x22330E4
	0x02232EB8 LDR X20, [X21 + 0x38]
	0x02232EBC SUB X19, X29, 0x18
	0x02232EC0 MOV X0, X26
	0x02232EC4 MOV X2, X25
	0x02232EC8 LDR X8, [X20]
	0x02232ECC LDR W8, [X8 + 0x28]
	0x02232ED0 CMP W8, 0x0
	0x02232ED4 CSEL X1, X23, X19, LT
	0x02232ED8 BL 0x3EB1AC0
	0x02232EDC LDR X0, [X20]
	0x02232EE0 MOV X1, X26
	0x02232EE4 BL 0x1C16E04
	0x02232EE8 CBZ X0, 0x2232F04
	0x02232EEC ADRP X8, 0x1EE9000
	0x02232EF0 LDR X8, [X8 + 0x5E0]
	0x02232EF4 LDR X1, [X8]
	0x02232EF8 LDR X8, [X0]
	0x02232EFC CMP X8, X1
	0x02232F00 B.EQ 0x2233108
	0x02232F04 LDR X20, [X21 + 0x38]
	0x02232F08 MOV X0, X26
	0x02232F0C MOV X2, X25
	0x02232F10 LDR X8, [X20]
	0x02232F14 LDR W8, [X8 + 0x28]
	0x02232F18 CMP W8, 0x0
	0x02232F1C CSEL X1, X23, X19, LT
	0x02232F20 BL 0x3EB1AC0
	0x02232F24 LDR X0, [X20]
	0x02232F28 MOV X1, X26
	0x02232F2C BL 0x1C16E04
	0x02232F30 CBZ X0, 0x2232F68
	0x02232F34 ADRP X8, 0x1EC5000
	0x02232F38 LDR X8, [X8 + 0xCA0]
	0x02232F3C LDR X9, [X0]
	0x02232F40 LDR X1, [X8]
	0x02232F44 LDRB W10, [X9 + 0x130]
	0x02232F48 LDRB W8, [X1 + 0x130]
	0x02232F4C CMP W10, W8
	0x02232F50 B.CC 0x2232F68
	0x02232F54 LDR X10, [X9 + 0xC8]
	0x02232F58 SUB X9, X8, 0x1
	0x02232F5C LDR X10, [X10, X9, LSL #3]
	0x02232F60 CMP X10, X1
	0x02232F64 B.EQ 0x2233140
	0x02232F68 ADRP X8, 0x1EC1000
	0x02232F6C LDR X8, [X8 + 0x6C0]
	0x02232F70 LDR X0, [X8]
	0x02232F74 LDR X8, [X21 + 0x38]
	0x02232F78 LDR W9, [X0 + 0xE0]
	0x02232F7C LDR X20, [X8 + 0x8]
	0x02232F80 CBNZ W9, 0x2232F88
	0x02232F84 BL 0x1C16DFC
	0x02232F88 MOV X0, X20
	0x02232F8C MOV X1, X31
	0x02232F90 BL 0x338C698
	0x02232F94 CBZ X0, 0x22331A4
	0x02232F98 LDR X8, [X0]
	0x02232F9C LDP X9, X1, [X8 + 0x168]
	0x02232FA0 BLR X9
	0x02232FA4 LDR X9, [X21 + 0x38]
	0x02232FA8 MOV X20, X0
	0x02232FAC LDR X8, [X9]
	0x02232FB0 LDRB W10, [X8 + 0x135]
	0x02232FB4 TBNZ X10, 0x0, 0x2232FC8
	0x02232FB8 MOV X0, X8
	0x02232FBC BL 0x1C5C684
	0x02232FC0 LDR X9, [X21 + 0x38]
	0x02232FC4 MOV X8, X0
	0x02232FC8 LDR X10, [X9]
	0x02232FCC LDUR X11, [X29 - 0x18]
	0x02232FD0 LDR X1, [X9 + 0x10]
	0x02232FD4 SUB X9, X29, 0x18
	0x02232FD8 LDR W10, [X10 + 0x28]
	0x02232FDC SUB X5, X29, 0x10
	0x02232FE0 MOV X0, X8
	0x02232FE4 MOV X2, X22
	0x02232FE8 CMP W10, 0x0
	0x02232FEC CSEL X3, X11, X9, LT
	0x02232FF0 MOV X4, X31
	0x02232FF4 BL 0x1C17728
	0x02232FF8 ADRP X8, 0x1EEA000
	0x02232FFC LDUR X3, [X29 - 0x10]
	0x02233000 B 0x3EB17F4
	0x02233004 LDUR X2, [X29 - 0x20]
	0x02233008 MOV X1, X20
	0x0223300C MOV X4, X31
	0x02233010 LDR X0, [X8]
	0x02233014 BL 0x3227C18
	0x02233018 ADRP X8, 0x1EC0000
	0x0223301C LDR X8, [X8 + 0xA28]
	0x02233020 MOV X19, X0
	0x02233024 LDR X8, [X8]
	0x02233028 LDR W9, [X8 + 0xE0]
	0x0223302C CBNZ W9, 0x2233038
	0x02233030 MOV X0, X8
	0x02233034 BL 0x1C16DFC
	0x02233038 MOV X0, X19
	0x0223303C MOV X1, X31
	0x02233040 BL 0x3C06A04
	0x02233044 B 0x2233174
	0x02233048 CBZ X24, 0x22331A4
	0x0223304C LDR X8, [X24]
	0x02233050 LDR X9, [X1 + 0x40]
	0x02233054 LDR X8, [X8 + 0x40]
	0x02233058 CMP X8, X9
	0x0223305C B.NE 0x22331A8
	0x02233060 MOV X0, X24
	0x02233064 BL 0x1C16E08
	0x02233068 LDR W2, [X0]
	0x0223306C LDP X0, X1, [X29 - 0x28]
	0x02233070 MOV X3, X31
	0x02233074 BL 0x39152BC
	0x02233078 B 0x2233174
	0x0223307C CBZ X24, 0x22331A4
	0x02233080 LDR X8, [X24]
	0x02233084 LDR X9, [X1 + 0x40]
	0x02233088 LDR X8, [X8 + 0x40]
	0x0223308C CMP X8, X9
	0x02233090 B.NE 0x22331A8
	0x02233094 MOV X0, X24
	0x02233098 BL 0x1C16E08
	0x0223309C LDR V0, [X0]
	0x022330A0 LDP X0, X1, [X29 - 0x28]
	0x022330A4 MOV X2, X31
	0x022330A8 BL 0x3915324
	0x022330AC B 0x2233174
	0x022330B0 CBZ X24, 0x22331A4
	0x022330B4 LDR X8, [X24]
	0x022330B8 LDR X9, [X1 + 0x40]
	0x022330BC LDR X8, [X8 + 0x40]
	0x022330C0 CMP X8, X9
	0x022330C4 B.NE 0x22331A8
	0x022330C8 MOV X0, X24
	0x022330CC BL 0x1C16E08
	0x022330D0 LDRB W2, [X0]
	0x022330D4 LDP X0, X1, [X29 - 0x28]
	0x022330D8 MOV X3, X31
	0x022330DC BL 0x3915254
	0x022330E0 B 0x2233174
	0x022330E4 CBZ X24, 0x22330F4
	0x022330E8 LDR X8, [X24]
	0x022330EC CMP X8, X1
	0x022330F0 B.NE 0x22331A8
	0x022330F4 LDP X0, X1, [X29 - 0x28]
	0x022330F8 MOV X2, X24
	0x022330FC MOV X3, X31
	0x02233100 BL 0x391538C
	0x02233104 B 0x2233174
	0x02233108 CBZ X24, 0x22331A4
	0x0223310C LDR X8, [X24]
	0x02233110 LDR X9, [X1 + 0x40]
	0x02233114 LDR X8, [X8 + 0x40]
	0x02233118 CMP X8, X9
	0x0223311C B.NE 0x22331A8
	0x02233120 MOV X0, X24
	0x02233124 BL 0x1C16E08
	0x02233128 LDP S0, S1, [X0]
	0x0223312C LDP S2, S3, [X0 + 0x8]
	0x02233130 LDP X0, X1, [X29 - 0x28]
	0x02233134 MOV X2, X31
	0x02233138 BL 0x39153F4
	0x0223313C B 0x2233174
	0x02233140 CBZ X24, 0x2233164
	0x02233144 LDR X10, [X24]
	0x02233148 LDRB W11, [X10 + 0x130]
	0x0223314C CMP W11, W8
	0x02233150 B.CC 0x22331A8
	0x02233154 LDR X8, [X10 + 0xC8]
	0x02233158 LDR X8, [X8, X9, LSL #3]
	0x0223315C CMP X8, X1
	0x02233160 B.NE 0x22331A8
	0x02233164 LDP X0, X1, [X29 - 0x28]
	0x02233168 MOV X2, X24
	0x0223316C MOV X3, X31
	0x02233170 BL 0x391547C
	0x02233174 LDR X8, [X28 + 0x28]
	0x02233178 LDUR X9, [X29 - 0x8]
	0x0223317C CMP X8, X9
	0x02233180 B.NE 0x22331B0
	0x02233184 ADD X31, X29, 0x0
	0x02233188 LDP X20, X19, [X31 + 0x50]
	0x0223318C LDP X22, X21, [X31 + 0x40]
	0x02233190 LDP X24, X23, [X31 + 0x30]
	0x02233194 LDP X26, X25, [X31 + 0x20]
	0x02233198 LDP X28, X27, [X31 + 0x10]
	0x0223319C LDP X29, X30, [X31], #0x60
	0x022331A0 RET
	0x022331A4 BL 0x1C16F20
	0x022331A8 MOV X0, X24
	0x022331AC BL 0x1C171E0
	0x022331B0 BL 0x3EB1B20
	0x022331B4 STP X30, X21, [X31 - 0x20]!
	0x022331B8 STP X20, X19, [X31 + 0x10]
	0x022331BC LDR X8, [X1 + 0x38]
	0x022331C0 MOV X20, X1
	0x022331C4 MOV X19, X0
	0x022331C8 CBNZ X8, 0x2233200
	0x022331CC ADRP X0, 0x1EE9000
	0x022331D0 LDR X0, [X0 + 0x298]
	0x022331D4 BL 0x1C16CF4
	0x022331D8 ADRP X0, 0x1EE9000
	0x022331DC LDR X0, [X0 + 0x2A0]
	0x022331E0 BL 0x1C16CF4
	0x022331E4 ADRP X0, 0x1EC0000
	0x022331E8 LDR X0, [X0 + 0x6C0]
	0x022331EC BL 0x1C16CF4
	0x022331F0 LDR X8, [X20 + 0x38]
	0x022331F4 CBNZ X8, 0x2233200
	0x022331F8 MOV X0, X20
	0x022331FC BL 0x1C5C6E0
	0x02233200 ADRP X21, 0x1EE9000
	0x02233204 LDR X21, [X21 + 0x2A0]
	0x02233208 LDR X0, [X21]
	0x0223320C LDR W8, [X0 + 0xE0]
	0x02233210 CBNZ W8, 0x223321C
	0x02233214 BL 0x1C16DFC
	0x02233218 LDR X0, [X21]
	0x0223321C ADRP X9, 0x1EC0000
	0x02233220 LDR X8, [X0 + 0xB8]
	0x02233224 LDR X9, [X9 + 0x6C0]
	0x02233228 LDR X0, [X9]
	0x0223322C LDR X9, [X20 + 0x38]
	0x02233230 LDR X20, [X8]
	0x02233234 LDR W8, [X0 + 0xE0]
	0x02233238 LDR X21, [X9]
	0x0223323C CBNZ W8, 0x2233244
	0x02233240 BL 0x1C16DFC
	0x02233244 MOV X0, X21
	0x02233248 MOV X1, X31
	0x0223324C BL 0x338C698
	0x02233250 CBZ X20, 0x2233278
	0x02233254 ADRP X8, 0x1EE9000
	0x02233258 LDR X8, [X8 + 0x298]
	0x0223325C MOV X1, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X8, [X4+56]
	017 Move X19, X4
	018 Move W20, W3
	019 Move V8, V1
	020 Move V9, V0
	021 Move X21, X2
	022 Move X22, X1
	023 Move X23, X0
	024 Compare X8, 0
	025 JumpIfNotEqual {46}
	026 Move X0, 0x1EC2000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0x1EEB000
	030 Move X0, [X0+224]
	031 Call 0x1C17CF4
	032 Move X0, 0x1EEB000
	033 Move X0, [X0+232]
	034 Call 0x1C17CF4
	035 Move X0, 0x1EEB000
	036 Move X0, [X0+240]
	037 Call 0x1C17CF4
	038 Move X0, 0x1EEB000
	039 Move X0, [X0+248]
	040 Call 0x1C17CF4
	041 Move X8, [X19+56]
	042 Compare X8, 0
	043 JumpIfNotEqual {46}
	044 Move X0, X19
	045 Call 0x1C5D6E0
	046 Move [X31+8], X31
	047 Compare X23, 0
	048 JumpIfEqual {65}
	049 Move X0, X23
	050 Move X1, X31
	051 Call VisualElement.get_panel, X0
	052 Compare X0, 0
	053 JumpIfEqual {64}
	054 Move W26, W31
	055 Move X0, X23
	056 Move X8, [X0+888]
	057 Add X0, X31, 8
	058 Move X1, X31
	059 Add W26, W26, 1
	060 Move [X31+8], X8
	061 Call Hierarchy.get_parent, X0
	062 Compare X0, 0
	063 JumpIfNotEqual {56}
	064 Move X23, X31
	065 Move W26, W31
	066 Move W25, W31
	067 Compare X22, 0
	068 JumpIfEqual {78}
	069 Move X0, X22
	070 Move X8, [X0+888]
	071 Add X0, X31, 8
	072 Move X1, X31
	073 Add W25, W25, 1
	074 Move [X31+8], X8
	075 Call Hierarchy.get_parent, X0
	076 Compare X0, 0
	077 JumpIfNotEqual {70}
	078 Move X28, 0x1EC2000
	079 Move X28, [X28+3584]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X8, [X19+56]
	082 Move X0, X21
	083 Move V0, V9
	084 Move V1, V8
	085 Move X2, [X8]
	086 Move W1, W20
	087 Call 0x24A5FCC, X0, X1, X2
	088 Move X24, X0
	089 Compare X0, 0
	090 JumpIfEqual {141}
	091 Move X0, X24
	092 Move X1, X23
	093 Move X2, X31
	094 Call EventBase.set_target, X0, X1
	095 Compare X23, 0
	096 JumpIfEqual {142}
	097 Move X8, [X23]
	098 Move X9, [X8+408]
	099 Move X2, [X8+416]
	100 Move X0, X23
	101 Move X1, X24
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X27, X31
	104 Move W29, 11
	105 Move X8, [X24]
	106 Move X1, [X28]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X24
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X0, X24
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Compare X27, 0
	127 JumpIfNotEqual {397}
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Compare W29, 0
	130 JumpIfNotEqual {380}
	131 Compare X23, 0
	132 JumpIfEqual {396}
	133 Move X8, [X23+888]
	134 Add X0, X31, 8
	135 Move X1, X31
	136 Subtract W26, W26, 1
	137 Move [X31+8], X8
	138 Call Hierarchy.get_parent, X0
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X23, X0
	141 Call 0x1C17F20
	142 Call 0x1C17F20
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move [X31], X0
	145 Move X0, [X31]
	146 Call 0x3EB2AD0
	147 Move X27, [X0]
	148 Call 0x3EB2AE0
	149 Move W29, W31
	150 Compare X24, 0
	151 JumpIfNotEqual {105}
	152 Move W26, W25
	153 Move X8, 0x1EEB000
	154 Move X8, [X8+248]
	155 Move X0, [X8]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move W0, W25
	161 Move X1, X31
	162 Call VisualElementListPool.Get, X0
	163 Move X29, 0x1EEB000
	164 Move X29, [X29+224]
	165 Move X24, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Compare X24, 0
	168 JumpIfEqual {396}
	169 Move W10, [X24+28]
	170 Move X8, [X24+16]
	171 Move X9, [X29]
	172 Add W10, W10, 1
	173 Move [X24+28], W10
	174 Compare X8, 0
	175 JumpIfEqual {396}
	176 NotImplemented "Instruction LDRSW not yet implemented."
	177 Move W11, [X8+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Add W9, W10, 1
	180 Add X8, X8, X10
	181 Move [X24+24], W9
	182 Move [X8+32], X22
	183 Move X8, [X9+32]
	184 Move X0, X24
	185 Move X1, X22
	186 Move X8, [X8+192]
	187 Move X2, [X8+112]
	188 Call List`1<Object>.AddWithResize, X0, X1
	189 Compare X22, 0
	190 JumpIfEqual {396}
	191 Move X8, [X22+888]
	192 Add X0, X31, 8
	193 Move X1, X31
	194 Subtract W25, W25, 1
	195 Move [X31+8], X8
	196 Call Hierarchy.get_parent, X0
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X22, X0
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X8, [X19+56]
	201 Move X0, X21
	202 Move V0, V9
	203 Move V1, V8
	204 Move X2, [X8]
	205 Move W1, W20
	206 Call 0x24A5FCC, X0, X1, X2
	207 Move X25, X0
	208 Compare X0, 0
	209 JumpIfEqual {285}
	210 Move X0, X25
	211 Move X1, X23
	212 Move X2, X31
	213 Call EventBase.set_target, X0, X1
	214 Compare X23, 0
	215 JumpIfEqual {286}
	216 Move X8, [X23]
	217 Move X9, [X8+408]
	218 Move X2, [X8+416]
	219 Move X0, X23
	220 Move X1, X25
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move X27, X31
	223 Move X8, [X25]
	224 Move X1, [X28]
	225 NotImplemented "Instruction LDRH not yet implemented."
	226 Compare X9, 0
	227 JumpIfEqual {234}
	228 Move X10, [X8+176]
	229 Add X10, X10, 8
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Subtract X9, X9, 1
	233 Add X10, X10, 16
	234 Move X0, X25
	235 Move W2, W31
	236 Call 0x1C5D788
	237 NotImplemented "Instruction LDRSW not yet implemented."
	238 Add X8, X8, X9
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X1, [X0+8]
	242 Move X0, X25
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Compare X27, 0
	245 JumpIfNotEqual {397}
	246 Compare X24, 0
	247 JumpIfEqual {396}
	248 Move W10, [X24+28]
	249 Move X8, [X24+16]
	250 Move X9, [X29]
	251 Add W10, W10, 1
	252 Move [X24+28], W10
	253 Compare X8, 0
	254 JumpIfEqual {396}
	255 NotImplemented "Instruction LDRSW not yet implemented."
	256 Move W11, [X8+24]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Add W9, W10, 1
	259 Add X8, X8, X10
	260 Move [X24+24], W9
	261 Move [X8+32], X22
	262 Move X8, [X9+32]
	263 Move X0, X24
	264 Move X1, X22
	265 Move X8, [X8+192]
	266 Move X2, [X8+112]
	267 Call List`1<Object>.AddWithResize, X0, X1
	268 Compare X23, 0
	269 JumpIfEqual {396}
	270 Move X8, [X23+888]
	271 Add X0, X31, 8
	272 Move X1, X31
	273 Move [X31+8], X8
	274 Call Hierarchy.get_parent, X0
	275 Compare X22, 0
	276 JumpIfEqual {396}
	277 Move X8, [X22+888]
	278 Move X23, X0
	279 Add X0, X31, 8
	280 Move X1, X31
	281 Move [X31+8], X8
	282 Call Hierarchy.get_parent, X0
	283 Move X22, X0
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Call 0x1C17F20
	286 Call 0x1C17F20
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move [X31], X0
	289 Move X0, [X31]
	290 Call 0x3EB2AD0
	291 Move X27, [X0]
	292 Call 0x3EB2AE0
	293 Compare X25, 0
	294 JumpIfNotEqual {223}
	295 Compare X24, 0
	296 JumpIfEqual {396}
	297 Move W8, [X24+24]
	298 Subtract W23, W8, 1
	299 Move X26, 0x1EEB000
	300 Move X26, [X26+240]
	301 Move X8, [X19+56]
	302 Move X0, X21
	303 Move V0, V9
	304 Move V1, V8
	305 Move X2, [X8+32]
	306 Move W1, W20
	307 Call 0x24A5FCC, X0, X1, X2
	308 Move X2, [X26]
	309 Move X22, X0
	310 Move X0, X24
	311 Move W1, W23
	312 Call List`1<Object>.get_Item, X0, X1
	313 Move X1, X0
	314 Compare X22, 0
	315 JumpIfEqual {359}
	316 Move X0, X22
	317 Move X2, X31
	318 Call EventBase.set_target, X0, X1
	319 Move X2, [X26]
	320 Move X0, X24
	321 Move W1, W23
	322 Call List`1<Object>.get_Item, X0, X1
	323 Compare X0, 0
	324 JumpIfEqual {360}
	325 Move X8, [X0]
	326 Move X9, [X8+408]
	327 Move X2, [X8+416]
	328 Move X1, X22
	329 NotImplemented "Instruction BLR not yet implemented."
	330 Move X25, X31
	331 Move W27, 19
	332 Move X8, [X22]
	333 Move X1, [X28]
	334 NotImplemented "Instruction LDRH not yet implemented."
	335 Compare X9, 0
	336 JumpIfEqual {343}
	337 Move X10, [X8+176]
	338 Add X10, X10, 8
	339 NotImplemented "Instruction LDUR not yet implemented."
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Subtract X9, X9, 1
	342 Add X10, X10, 16
	343 Move X0, X22
	344 Move W2, W31
	345 Call 0x1C5D788
	346 NotImplemented "Instruction LDRSW not yet implemented."
	347 Add X8, X8, X9
	348 Add X0, X8, 312
	349 Move X8, [X0]
	350 Move X1, [X0+8]
	351 Move X0, X22
	352 NotImplemented "Instruction BLR not yet implemented."
	353 Compare X25, 0
	354 JumpIfNotEqual {399}
	355 NotImplemented "Instruction CMP not yet implemented."
	356 Compare W27, 0
	357 JumpIfNotEqual {380}
	358 Subtract W23, W23, 1
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move [X31], X0
	363 Move X0, [X31]
	364 Call 0x3EB2AD0
	365 Move X25, [X0]
	366 Call 0x3EB2AE0
	367 Move W27, W31
	368 Compare X22, 0
	369 JumpIfNotEqual {332}
	370 Move X8, 0x1EEA000
	371 Move X8, [X8+248]
	372 Move X0, [X8]
	373 Move W8, [X0+224]
	374 Compare W8, 0
	375 JumpIfNotEqual {377}
	376 Call 0x1C17DFC
	377 Move X0, X24
	378 Move X1, X31
	379 Call VisualElementListPool.Release, X0
	380 Move X20, [X31+112]
	381 Move X19, [X31+120]
	382 Move X22, [X31+96]
	383 Move X21, [X31+104]
	384 Move X24, [X31+80]
	385 Move X23, [X31+88]
	386 Move X26, [X31+64]
	387 Move X25, [X31+72]
	388 Move X28, [X31+48]
	389 Move X27, [X31+56]
	390 Move X29, [X31+32]
	391 Move X30, [X31+40]
	392 Move D9, [X31+16]
	393 Move D8, [X31+24]
	394 Add X31, X31, 128
	395 Return 
	396 Call 0x1C17F20
	397 Move X0, X27
	398 Call 0x1C17F18
	399 Move X0, X25
	400 Call 0x1C17F18
	401 Move X27, X31
	402 Move X25, X31
	403 Move X27, X31
	404 Move [X31], X0
	405 Compare X24, 0
	406 JumpIfEqual {428}
	407 Move X8, [X24]
	408 Move X1, [X28]
	409 NotImplemented "Instruction LDRH not yet implemented."
	410 Compare X9, 0
	411 JumpIfEqual {418}
	412 Move X10, [X8+176]
	413 Add X10, X10, 8
	414 NotImplemented "Instruction LDUR not yet implemented."
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Subtract X9, X9, 1
	417 Add X10, X10, 16
	418 Move X0, X24
	419 Move W2, W31
	420 Call 0x1C5D788
	421 NotImplemented "Instruction LDRSW not yet implemented."
	422 Add X8, X8, X9
	423 Add X0, X8, 312
	424 Move X8, [X0]
	425 Move X1, [X0+8]
	426 Move X0, X24
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Compare X27, 0
	429 JumpIfEqual {486}
	430 Move X0, X27
	431 Call 0x1C17F18
	432 Move [X31], X0
	433 Compare X22, 0
	434 JumpIfEqual {456}
	435 Move X8, [X22]
	436 Move X1, [X28]
	437 NotImplemented "Instruction LDRH not yet implemented."
	438 Compare X9, 0
	439 JumpIfEqual {446}
	440 Move X10, [X8+176]
	441 Add X10, X10, 8
	442 NotImplemented "Instruction LDUR not yet implemented."
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Subtract X9, X9, 1
	445 Add X10, X10, 16
	446 Move X0, X22
	447 Move W2, W31
	448 Call 0x1C5D788
	449 NotImplemented "Instruction LDRSW not yet implemented."
	450 Add X8, X8, X9
	451 Add X0, X8, 312
	452 Move X8, [X0]
	453 Move X1, [X0+8]
	454 Move X0, X22
	455 NotImplemented "Instruction BLR not yet implemented."
	456 Compare X25, 0
	457 JumpIfEqual {486}
	458 Move X0, X25
	459 Call 0x1C17F18
	460 Move [X31], X0
	461 Compare X25, 0
	462 JumpIfEqual {484}
	463 Move X8, [X25]
	464 Move X1, [X28]
	465 NotImplemented "Instruction LDRH not yet implemented."
	466 Compare X9, 0
	467 JumpIfEqual {474}
	468 Move X10, [X8+176]
	469 Add X10, X10, 8
	470 NotImplemented "Instruction LDUR not yet implemented."
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Subtract X9, X9, 1
	473 Add X10, X10, 16
	474 Move X0, X25
	475 Move W2, W31
	476 Call 0x1C5D788
	477 NotImplemented "Instruction LDRSW not yet implemented."
	478 Add X8, X8, X9
	479 Add X0, X8, 312
	480 Move X8, [X0]
	481 Move X1, [X0+8]
	482 Move X0, X25
	483 NotImplemented "Instruction BLR not yet implemented."
	484 Compare X27, 0
	485 JumpIfNotEqual {488}
	486 Move X0, [X31]
	487 Call 0x1D2D690
	488 Move X0, X27
	489 Call 0x1C17F18
	490 Call 0x1991590

Method: System.Void SendOverOut(UnityEngine.UIElements.VisualElement previousTopElementUnderPointer, UnityEngine.UIElements.VisualElement currentTopElementUnderPointer, UnityEngine.UIElements.IPointerEvent triggerEvent, UnityEngine.Vector2 position, System.Int32 pointerId)

Disassembly:
	0x03DA08CC STP X20, X19, [X31 + 0x10]
	0x03DA08D0 MOV W20, W1
	0x03DA08D4 MOV X1, X31
	0x03DA08D8 MOV W19, W2
	0x03DA08DC MOV X21, X0
	0x03DA08E0 BL 0x33BDD8C
	0x03DA08E4 STP W20, W19, [X21 + 0x10]
	0x03DA08E8 LDP X20, X19, [X31 + 0x10]
	0x03DA08EC LDP X30, X21, [X31], #0x20
	0x03DA08F0 RET
	0x03DA08F4 LDR W8, [X0 + 0x10]
	0x03DA08F8 CMP W8, 0x1
	0x03DA08FC B.EQ 0x3DA091C
	0x03DA0900 CMP W8, 0x2
	0x03DA0904 B.NE 0x3DA0914
	0x03DA0908 SUB W8, W1, 0x1
	0x03DA090C CMP W8, 0x2
	0x03DA0910 B.CS 0x3DA0928
	0x03DA0914 MOVZ W0, 0x1
	0x03DA0918 RET
	0x03DA091C AND W8, W1, 0xFFFFFFFE
	0x03DA0920 CMP W8, 0x2
	0x03DA0924 B.EQ 0x3DA0914
	0x03DA0928 MOV W0, W31
	0x03DA092C RET
	0x03DA0930 STP X30, X21, [X31 - 0x20]!
	0x03DA0934 STP X20, X19, [X31 + 0x10]
	0x03DA0938 ADRP X21, 0x647000
	0x03DA093C LDRB W8, [X21 + 0xEC8]
	0x03DA0940 MOV X19, X1
	0x03DA0944 MOV X20, X0
	0x03DA0948 TBNZ X8, 0x0, 0x3DA0978
	0x03DA094C ADRP X0, 0x3C8000
	0x03DA0950 LDR X0, [X0 + 0xE0]
	0x03DA0954 BL 0x1C16CF4
	0x03DA0958 ADRP X0, 0x3C8000
	0x03DA095C LDR X0, [X0 + 0xE8]
	0x03DA0960 BL 0x1C16CF4
	0x03DA0964 ADRP X0, 0x3C8000
	0x03DA0968 LDR X0, [X0 + 0xF0]
	0x03DA096C BL 0x1C16CF4
	0x03DA0970 MOVZ W8, 0x1
	0x03DA0974 STRB W8, [X21 + 0xEC8]
	0x03DA0978 LDR X0, [X20 + 0x10]
	0x03DA097C CBZ X0, 0x3DA09EC
	0x03DA0980 LDR W8, [X0 + 0x18]
	0x03DA0984 CBZ W8, 0x3DA09B4
	0x03DA0988 ADRP X8, 0x3C8000
	0x03DA098C LDR X8, [X8 + 0xE8]
	0x03DA0990 LDR X1, [X8]
	0x03DA0994 BL 0x26022C0
	0x03DA0998 MOV X20, X0
	0x03DA099C CBZ X19, 0x3DA09DC
	0x03DA09A0 CBZ X20, 0x3DA09EC
	0x03DA09A4 MOV X0, X20
	0x03DA09A8 MOV X1, X19
	0x03DA09AC BL 0x3DA0AFC
	0x03DA09B0 B 0x3DA09DC
	0x03DA09B4 ADRP X8, 0x3C8000
	0x03DA09B8 LDR X8, [X8 + 0xE0]
	0x03DA09BC LDR X0, [X8]
	0x03DA09C0 BL 0x1C16F10
	0x03DA09C4 MOV X20, X0
	0x03DA09C8 CBZ X19, 0x3DA09D8
	0x03DA09CC MOV X1, X19
	0x03DA09D0 BL 0x3DA09F0
	0x03DA09D4 B 0x3DA09DC
	0x03DA09D8 BL 0x3DA0A7C
	0x03DA09DC MOV X0, X20
	0x03DA09E0 LDP X20, X19, [X31 + 0x10]
	0x03DA09E4 LDP X30, X21, [X31], #0x20
	0x03DA09E8 RET
	0x03DA09EC BL 0x1C16F20
	0x03DA09F0 STP X30, X21, [X31 - 0x20]!
	0x03DA09F4 STP X20, X19, [X31 + 0x10]
	0x03DA09F8 ADRP X21, 0x647000
	0x03DA09FC LDRB W8, [X21 + 0xECC]
	0x03DA0A00 MOV X20, X1
	0x03DA0A04 MOV X19, X0
	0x03DA0A08 TBNZ X8, 0x0, 0x3DA0A2C
	0x03DA0A0C ADRP X0, 0x3C8000
	0x03DA0A10 LDR X0, [X0 + 0xF8]
	0x03DA0A14 BL 0x1C16CF4
	0x03DA0A18 ADRP X0, 0x3C8000
	0x03DA0A1C LDR X0, [X0 + 0x100]
	0x03DA0A20 BL 0x1C16CF4
	0x03DA0A24 MOVZ W8, 0x1
	0x03DA0A28 STRB W8, [X21 + 0xECC]
	0x03DA0A2C MOV X0, X19
	0x03DA0A30 MOV X1, X31
	0x03DA0A34 BL 0x33BDD8C
	0x03DA0A38 CBZ X20, 0x3DA0A78
	0x03DA0A3C ADRP X8, 0x3C8000
	0x03DA0A40 LDR X8, [X8 + 0x100]
	0x03DA0A44 ADRP X21, 0x3C8000
	0x03DA0A48 LDR X20, [X20 + 0x10]
	0x03DA0A4C LDR X0, [X8]
	0x03DA0A50 LDR X21, [X21 + 0xF8]
	0x03DA0A54 BL 0x1C16F10
	0x03DA0A58 LDR X2, [X21]
	0x03DA0A5C MOV X1, X20
	0x03DA0A60 MOV X21, X0
	0x03DA0A64 BL 0x301B8E0
	0x03DA0A68 STP X21, X31, [X19 + 0x10]
	0x03DA0A6C LDP X20, X19, [X31 + 0x10]
	0x03DA0A70 LDP X30, X21, [X31], #0x20
	0x03DA0A74 RET
	0x03DA0A78 BL 0x1C16F20
	0x03DA0A7C STR X30, [X31 - 0x30]!
	0x03DA0A80 STP X22, X21, [X31 + 0x10]
	0x03DA0A84 STP X20, X19, [X31 + 0x20]
	0x03DA0A88 ADRP X22, 0x647000
	0x03DA0A8C ADRP X21, 0x3C8000
	0x03DA0A90 ADRP X20, 0x3C8000
	0x03DA0A94 LDRB W8, [X22 + 0xECB]
	0x03DA0A98 LDR X21, [X21 + 0x100]
	0x03DA0A9C LDR X20, [X20 + 0x108]
	0x03DA0AA0 MOV X19, X0
	0x03DA0AA4 TBNZ X8, 0x0, 0x3DA0AC8
	0x03DA0AA8 ADRP X0, 0x3C8000
	0x03DA0AAC LDR X0, [X0 + 0x108]
	0x03DA0AB0 BL 0x1C16CF4
	0x03DA0AB4 ADRP X0, 0x3C8000
	0x03DA0AB8 LDR X0, [X0 + 0x100]
	0x03DA0ABC BL 0x1C16CF4
	0x03DA0AC0 MOVZ W8, 0x1
	0x03DA0AC4 STRB W8, [X22 + 0xECB]
	0x03DA0AC8 MOV X0, X19
	0x03DA0ACC MOV X1, X31
	0x03DA0AD0 BL 0x33BDD8C
	0x03DA0AD4 LDR X0, [X21]
	0x03DA0AD8 BL 0x1C16F10
	0x03DA0ADC LDR X1, [X20]
	0x03DA0AE0 MOV X20, X0
	0x03DA0AE4 BL 0x301B7C4
	0x03DA0AE8 STP X20, X31, [X19 + 0x10]
	0x03DA0AEC LDP X20, X19, [X31 + 0x20]
	0x03DA0AF0 LDP X22, X21, [X31 + 0x10]
	0x03DA0AF4 LDR X30, [X31], #0x30
	0x03DA0AF8 RET
	0x03DA0AFC SUB X31, X31, 0x40
	0x03DA0B00 STP X30, X21, [X31 + 0x20]
	0x03DA0B04 STP X20, X19, [X31 + 0x30]
	0x03DA0B08 ADRP X21, 0x647000
	0x03DA0B0C LDRB W8, [X21 + 0xED0]
	0x03DA0B10 MOV X20, X1
	0x03DA0B14 MOV X19, X0
	0x03DA0B18 TBNZ X8, 0x0, 0x3DA0B60
	0x03DA0B1C ADRP X0, 0x3C8000
	0x03DA0B20 LDR X0, [X0 + 0x110]
	0x03DA0B24 BL 0x1C16CF4
	0x03DA0B28 ADRP X0, 0x3C8000
	0x03DA0B2C LDR X0, [X0 + 0x118]
	0x03DA0B30 BL 0x1C16CF4
	0x03DA0B34 ADRP X0, 0x3C8000
	0x03DA0B38 LDR X0, [X0 + 0x120]
	0x03DA0B3C BL 0x1C16CF4
	0x03DA0B40 ADRP X0, 0x3C8000
	0x03DA0B44 LDR X0, [X0 + 0x128]
	0x03DA0B48 BL 0x1C16CF4
	0x03DA0B4C ADRP X0, 0x3C8000
	0x03DA0B50 LDR X0, [X0 + 0x130]
	0x03DA0B54 BL 0x1C16CF4
	0x03DA0B58 MOVZ W8, 0x1
	0x03DA0B5C STRB W8, [X21 + 0xED0]
	0x03DA0B60 STP X31, X31, [X31 + 0x8]
	0x03DA0B64 STR X31, [X31 + 0x18]
	0x03DA0B68 CBZ X20, 0x3DA0C20
	0x03DA0B6C LDR X0, [X19 + 0x10]
	0x03DA0B70 CBZ X0, 0x3DA0C20
	0x03DA0B74 ADRP X8, 0x3C8000
	0x03DA0B78 LDR X8, [X8 + 0x128]
	0x03DA0B7C LDR X1, [X20 + 0x10]
	0x03DA0B80 LDR X2, [X8]
	0x03DA0B84 BL 0x301C194
	0x03DA0B88 LDR X0, [X20 + 0x10]
	0x03DA0B8C CBZ X0, 0x3DA0C20
	0x03DA0B90 ADRP X8, 0x3C8000
	0x03DA0B94 LDR X8, [X8 + 0x130]
	0x03DA0B98 ADRP X20, 0x3C8000
	0x03DA0B9C ADRP X21, 0x3C8000
	0x03DA0BA0 LDR X1, [X8]
	0x03DA0BA4 LDR X20, [X20 + 0x118]
	0x03DA0BA8 LDR X21, [X21 + 0x110]
	0x03DA0BAC ADD X8, X31, 0x8
	0x03DA0BB0 BL 0x301CB58
	0x03DA0BB4 LDR X1, [X20]
	0x03DA0BB8 ADD X0, X31, 0x8
	0x03DA0BBC BL 0x2BC4350
	0x03DA0BC0 TBZ X0, 0x0, 0x3DA0C00
	0x03DA0BC4 LDR X8, [X31 + 0x18]
	0x03DA0BC8 CBZ X8, 0x3DA0C1C
	0x03DA0BCC LDR W8, [X8 + 0x10]
	0x03DA0BD0 CMP W8, 0x1
	0x03DA0BD4 B.EQ 0x3DA0BF0
	0x03DA0BD8 CMP W8, 0x2
	0x03DA0BDC B.NE 0x3DA0BB4
	0x03DA0BE0 LDR W8, [X19 + 0x18]
	0x03DA0BE4 ADD W8, W8, 0x1
	0x03DA0BE8 STR W8, [X19 + 0x18]
	0x03DA0BEC B 0x3DA0BB4
	0x03DA0BF0 LDR W8, [X19 + 0x1C]
	0x03DA0BF4 ADD W8, W8, 0x1
	0x03DA0BF8 STR W8, [X19 + 0x1C]
	0x03DA0BFC B 0x3DA0BB4
	0x03DA0C00 LDR X1, [X21]
	0x03DA0C04 ADD X0, X31, 0x8
	0x03DA0C08 BL 0x2BC434C
	0x03DA0C0C LDP X20, X19, [X31 + 0x30]
	0x03DA0C10 LDP X30, X21, [X31 + 0x20]
	0x03DA0C14 ADD X31, X31, 0x40
	0x03DA0C18 RET
	0x03DA0C1C BL 0x1C16F20
	0x03DA0C20 BL 0x1C16F20
	0x03DA0C24 B 0x3DA0C28
	0x03DA0C28 MOV X20, X0
	0x03DA0C2C CMP W1, 0x1
	0x03DA0C30 B.NE 0x3DA0C5C
	0x03DA0C34 MOV X0, X20
	0x03DA0C38 BL 0x3EB1AD0
	0x03DA0C3C LDR X19, [X0]
	0x03DA0C40 BL 0x3EB1AE0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x648000
	013 Move W8, [X22+3936]
	014 Move W20, W3
	015 Move V8, V1
	016 Move V9, V0
	017 Move X21, X2
	018 Move X19, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x354000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x3C9000
	028 Move X0, [X0+144]
	029 Call 0x1C17CF4
	030 Move X0, 0x3C9000
	031 Move X0, [X0+152]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+3936], W8
	035 Move X24, 0x354000
	036 Move X24, [X24+3584]
	037 Compare X23, 0
	038 JumpIfEqual {94}
	039 Move X0, X23
	040 Move X1, X31
	041 Call VisualElement.get_panel, X0
	042 Compare X0, 0
	043 JumpIfEqual {94}
	044 Move X8, 0x3C9000
	045 Move X8, [X8+152]
	046 Move X0, X21
	047 Move V0, V9
	048 Move V1, V8
	049 Move X2, [X8]
	050 Move W1, W20
	051 Call 0x24A5FCC, X0, X1, X2
	052 Move X22, X0
	053 Compare X0, 0
	054 JumpIfEqual {157}
	055 Move X8, [X22+72]
	056 Move [X22+80], X23
	057 Compare X8, 0
	058 JumpIfNotEqual {60}
	059 Move [X22+72], X23
	060 Move X8, [X23]
	061 Move X9, [X8+408]
	062 Move X2, [X8+416]
	063 Move X0, X23
	064 Move X1, X22
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X23, X31
	067 Move W25, 5
	068 Move X8, [X22]
	069 Move X1, [X24]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X22
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X22
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Compare X23, 0
	090 JumpIfNotEqual {158}
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Compare W25, 0
	093 JumpIfNotEqual {142}
	094 Compare X19, 0
	095 JumpIfEqual {142}
	096 Move X8, 0x3C9000
	097 Move X8, [X8+144]
	098 Move X0, X21
	099 Move V0, V9
	100 Move V1, V8
	101 Move X2, [X8]
	102 Move W1, W20
	103 Call 0x24A5FCC, X0, X1, X2
	104 Move X20, X0
	105 Compare X0, 0
	106 JumpIfEqual {154}
	107 Move X8, [X20+72]
	108 Move [X20+80], X19
	109 Compare X8, 0
	110 JumpIfNotEqual {112}
	111 Move [X20+72], X19
	112 Move X8, [X19]
	113 Move X9, [X8+408]
	114 Move X2, [X8+416]
	115 Move X0, X19
	116 Move X1, X20
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X19, X31
	119 Move X8, [X20]
	120 Move X1, [X24]
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move X0, X20
	131 Move W2, W31
	132 Call 0x1C5D788
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X20
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Compare X19, 0
	141 JumpIfNotEqual {155}
	142 Move X20, [X31+80]
	143 Move X19, [X31+88]
	144 Move X22, [X31+64]
	145 Move X21, [X31+72]
	146 Move X24, [X31+48]
	147 Move X23, [X31+56]
	148 Move X30, [X31+32]
	149 Move X25, [X31+40]
	150 Move D9, [X31+16]
	151 Move D8, [X31+24]
	152 Add X31, X31, 96
	153 Return 
	154 Call 0x1C17F20
	155 Move X0, X19
	156 Call 0x1C17F18
	157 Call 0x1C17F20
	158 Move X0, X23
	159 Call 0x1C17F18
	160 Move X23, X0
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X0, X23
	163 Call 0x3EB2AD0
	164 Move X8, [X0]
	165 Move [X31+8], X8
	166 Call 0x3EB2AE0
	167 Move X23, [X31+8]
	168 Move W25, W31
	169 Compare X22, 0
	170 JumpIfNotEqual {68}
	171 Move [X31+8], X31
	172 Move X23, X0
	173 Compare X22, 0
	174 JumpIfEqual {196}
	175 Move X8, [X22]
	176 Move X1, [X24]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X22
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X22
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move X8, [X31+8]
	197 Compare X8, 0
	198 JumpIfEqual {236}
	199 Move X0, [X31+8]
	200 Call 0x1C17F18
	201 Move X23, X0
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X0, X23
	204 Call 0x3EB2AD0
	205 Move X19, [X0]
	206 Call 0x3EB2AE0
	207 Compare X20, 0
	208 JumpIfNotEqual {119}
	209 Move X19, X31
	210 Move X23, X0
	211 Compare X20, 0
	212 JumpIfEqual {234}
	213 Move X8, [X20]
	214 Move X1, [X24]
	215 NotImplemented "Instruction LDRH not yet implemented."
	216 Compare X9, 0
	217 JumpIfEqual {224}
	218 Move X10, [X8+176]
	219 Add X10, X10, 8
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Subtract X9, X9, 1
	223 Add X10, X10, 16
	224 Move X0, X20
	225 Move W2, W31
	226 Call 0x1C5D788
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Add X8, X8, X9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X20
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Compare X19, 0
	235 JumpIfNotEqual {238}
	236 Move X0, X23
	237 Call 0x1D2D690
	238 Move X0, X19
	239 Call 0x1C17F18
	240 Call 0x1991590

