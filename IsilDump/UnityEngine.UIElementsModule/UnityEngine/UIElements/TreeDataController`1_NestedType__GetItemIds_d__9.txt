Type: UnityEngine.UIElements.TreeDataController`1/<GetItemIds>d__9

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x0239D224 SUB W24, W24, 0x1
	0x0239D228 B.GT 0x239D16C
	0x0239D22C B 0x239D298
	0x0239D230 CBZ W8, 0x239D298
	0x0239D234 CMP W8, 0x2
	0x0239D238 B.EQ 0x239D318
	0x0239D23C CMP W8, 0x1
	0x0239D240 B.NE 0x239D3E0
	0x0239D244 LDR X0, [X23 + 0x20]
	0x0239D248 LDRB W8, [X0 + 0x135]
	0x0239D24C TBNZ X8, 0x0, 0x239D254
	0x0239D250 BL 0x1C5C684
	0x0239D254 LDR X8, [X0 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X20+16], W19
	010 Call Environment.get_CurrentManagedThreadId
	011 Move [X20+24], W0
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x0239D258 LDR X0, [X8 + 0x48]
	0x0239D25C LDRB W8, [X0 + 0x135]
	0x0239D260 TBNZ X8, 0x0, 0x239D268
	0x0239D264 BL 0x1C5C684
	0x0239D268 LDR W8, [X0 + 0xE0]
	0x0239D26C CBNZ W8, 0x239D274
	0x0239D270 BL 0x1C16DFC

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call 0x239D540, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x0239D274 LDR X0, [X23 + 0x20]
	0x0239D278 LDRB W8, [X0 + 0x135]
	0x0239D27C TBNZ X8, 0x0, 0x239D284
	0x0239D280 BL 0x1C5C684
	0x0239D284 LDR X8, [X0 + 0xC0]
	0x0239D288 MOV X0, X21
	0x0239D28C MOV X1, X19
	0x0239D290 MOV W2, W22
	0x0239D294 B 0x239D3C4
	0x0239D298 LDP X20, X19, [X31 + 0x30]
	0x0239D29C LDP X22, X21, [X31 + 0x20]
	0x0239D2A0 LDP X24, X23, [X31 + 0x10]
	0x0239D2A4 LDP X30, X25, [X31], #0x40
	0x0239D2A8 RET
	0x0239D2AC LDR X0, [X23 + 0x20]
	0x0239D2B0 LDRB W8, [X0 + 0x135]
	0x0239D2B4 TBNZ X8, 0x0, 0x239D2BC
	0x0239D2B8 BL 0x1C5C684
	0x0239D2BC LDR X8, [X0 + 0xC0]
	0x0239D2C0 LDR X0, [X8 + 0x48]
	0x0239D2C4 LDRB W8, [X0 + 0x135]
	0x0239D2C8 TBNZ X8, 0x0, 0x239D2D0
	0x0239D2CC BL 0x1C5C684
	0x0239D2D0 LDR W8, [X0 + 0xE0]
	0x0239D2D4 CBNZ W8, 0x239D2DC
	0x0239D2D8 BL 0x1C16DFC
	0x0239D2DC LDR X0, [X23 + 0x20]
	0x0239D2E0 LDRB W8, [X0 + 0x135]
	0x0239D2E4 TBNZ X8, 0x0, 0x239D2EC
	0x0239D2E8 BL 0x1C5C684
	0x0239D2EC LDR X8, [X0 + 0xC0]
	0x0239D2F0 MOV X0, X21
	0x0239D2F4 MOV W1, W22
	0x0239D2F8 MOV W2, W20
	0x0239D2FC LDR X4, [X8 + 0x80]
	0x0239D300 MOV X3, X19
	0x0239D304 LDP X20, X19, [X31 + 0x30]
	0x0239D308 LDP X22, X21, [X31 + 0x20]
	0x0239D30C LDP X24, X23, [X31 + 0x10]
	0x0239D310 LDP X30, X25, [X31], #0x40
	0x0239D314 B 0x239D7A8
	0x0239D318 LDR X0, [X23 + 0x20]
	0x0239D31C LDRB W8, [X0 + 0x135]
	0x0239D320 TBNZ X8, 0x0, 0x239D328
	0x0239D324 BL 0x1C5C684
	0x0239D328 LDR X8, [X0 + 0xC0]
	0x0239D32C LDR X0, [X8 + 0x48]
	0x0239D330 LDRB W8, [X0 + 0x135]
	0x0239D334 TBNZ X8, 0x0, 0x239D33C
	0x0239D338 BL 0x1C5C684
	0x0239D33C LDR W8, [X0 + 0xE0]
	0x0239D340 CBNZ W8, 0x239D348
	0x0239D344 BL 0x1C16DFC
	0x0239D348 LDR X0, [X23 + 0x20]
	0x0239D34C SUB W24, W20, 0x1
	0x0239D350 LDRB W8, [X0 + 0x135]
	0x0239D354 TBNZ X8, 0x0, 0x239D35C
	0x0239D358 BL 0x1C5C684
	0x0239D35C LDR X8, [X0 + 0xC0]
	0x0239D360 MOV X0, X21
	0x0239D364 MOV X1, X19
	0x0239D368 MOV W2, W22
	0x0239D36C LDR X4, [X8 + 0x70]
	0x0239D370 MOV W3, W24
	0x0239D374 BL 0x239CE70
	0x0239D378 LDR X0, [X23 + 0x20]
	0x0239D37C LDRB W8, [X0 + 0x135]
	0x0239D380 TBNZ X8, 0x0, 0x239D388
	0x0239D384 BL 0x1C5C684
	0x0239D388 LDR X8, [X0 + 0xC0]
	0x0239D38C MOV X0, X21
	0x0239D390 MOV X1, X19
	0x0239D394 MOV W2, W22
	0x0239D398 LDR X4, [X8 + 0x70]
	0x0239D39C MOV W3, W20
	0x0239D3A0 BL 0x239CE70
	0x0239D3A4 LDR X0, [X23 + 0x20]
	0x0239D3A8 LDRB W8, [X0 + 0x135]
	0x0239D3AC TBNZ X8, 0x0, 0x239D3B4
	0x0239D3B0 BL 0x1C5C684
	0x0239D3B4 LDR X8, [X0 + 0xC0]
	0x0239D3B8 MOV X0, X21
	0x0239D3BC MOV X1, X19
	0x0239D3C0 MOV W2, W24
	0x0239D3C4 LDR X4, [X8 + 0x70]
	0x0239D3C8 MOV W3, W20
	0x0239D3CC LDP X20, X19, [X31 + 0x30]
	0x0239D3D0 LDP X22, X21, [X31 + 0x20]
	0x0239D3D4 LDP X24, X23, [X31 + 0x10]
	0x0239D3D8 LDP X30, X25, [X31], #0x40
	0x0239D3DC B 0x239CE70
	0x0239D3E0 LDR X0, [X23 + 0x20]
	0x0239D3E4 LDRB W8, [X0 + 0x135]
	0x0239D3E8 TBNZ X8, 0x0, 0x239D3F0
	0x0239D3EC BL 0x1C5C684
	0x0239D3F0 LDR X8, [X0 + 0xC0]
	0x0239D3F4 LDR X0, [X8 + 0x48]
	0x0239D3F8 LDRB W8, [X0 + 0x135]
	0x0239D3FC TBNZ X8, 0x0, 0x239D404
	0x0239D400 BL 0x1C5C684
	0x0239D404 LDR W8, [X0 + 0xE0]
	0x0239D408 CBNZ W8, 0x239D410
	0x0239D40C BL 0x1C16DFC
	0x0239D410 LDR X0, [X23 + 0x20]
	0x0239D414 LDRB W8, [X0 + 0x135]
	0x0239D418 TBNZ X8, 0x0, 0x239D420
	0x0239D41C BL 0x1C5C684
	0x0239D420 LDR X8, [X0 + 0xC0]
	0x0239D424 MOV X0, X21
	0x0239D428 MOV W1, W22
	0x0239D42C MOV W2, W20
	0x0239D430 LDR X4, [X8 + 0x78]
	0x0239D434 MOV X3, X19
	0x0239D438 LDP X20, X19, [X31 + 0x30]
	0x0239D43C LDP X22, X21, [X31 + 0x20]
	0x0239D440 LDP X24, X23, [X31 + 0x10]
	0x0239D444 LDP X30, X25, [X31], #0x40
	0x0239D448 B 0x239DB90
	0x0239D44C SUB X31, X31, 0x170
	0x0239D450 STR X29, [X31 + 0x120]
	0x0239D454 STP X30, X25, [X31 + 0x130]
	0x0239D458 STP X24, X23, [X31 + 0x140]
	0x0239D45C STP X22, X21, [X31 + 0x150]
	0x0239D460 STP X20, X19, [X31 + 0x160]
	0x0239D464 STP X31, X31, [X31 + 0xC0]
	0x0239D468 STR X31, [X31 + 0xD0]
	0x0239D46C MOV X20, X0
	0x0239D470 LDR X0, [X4 + 0x20]
	0x0239D474 SUB W9, W2, W1
	0x0239D478 CMP W9, 0x0
	0x0239D47C MOV X21, X4
	0x0239D480 LDRB W8, [X0 + 0x135]
	0x0239D484 MOV X22, X3
	0x0239D488 MOV W23, W2
	0x0239D48C MOV W19, W1
	0x0239D490 CINC W24, W9, LT
	0x0239D494 TBNZ X8, 0x0, 0x239D49C
	0x0239D498 BL 0x1C5C684
	0x0239D49C LDR X8, [X0 + 0xC0]
	0x0239D4A0 LDR X0, [X8 + 0x48]
	0x0239D4A4 LDRB W8, [X0 + 0x135]
	0x0239D4A8 TBNZ X8, 0x0, 0x239D4B0
	0x0239D4AC BL 0x1C5C684
	0x0239D4B0 LDR W8, [X0 + 0xE0]
	0x0239D4B4 ADD W24, W19, W24, 0x1, ASR
	0x0239D4B8 CBNZ W8, 0x239D4C0
	0x0239D4BC BL 0x1C16DFC
	0x0239D4C0 LDR X0, [X21 + 0x20]
	0x0239D4C4 LDRB W8, [X0 + 0x135]
	0x0239D4C8 TBNZ X8, 0x0, 0x239D4D0
	0x0239D4CC BL 0x1C5C684
	0x0239D4D0 LDR X8, [X0 + 0xC0]
	0x0239D4D4 MOV X0, X20
	0x0239D4D8 MOV X1, X22
	0x0239D4DC MOV W2, W19
	0x0239D4E0 LDR X4, [X8 + 0x70]
	0x0239D4E4 MOV W3, W24
	0x0239D4E8 BL 0x239CE70
	0x0239D4EC LDR X0, [X21 + 0x20]
	0x0239D4F0 LDRB W8, [X0 + 0x135]
	0x0239D4F4 TBNZ X8, 0x0, 0x239D4FC
	0x0239D4F8 BL 0x1C5C684
	0x0239D4FC LDR X8, [X0 + 0xC0]
	0x0239D500 MOV X0, X20
	0x0239D504 MOV X1, X22
	0x0239D508 MOV W2, W19
	0x0239D50C LDR X4, [X8 + 0x70]
	0x0239D510 MOV W3, W23
	0x0239D514 BL 0x239CE70
	0x0239D518 LDR X0, [X21 + 0x20]
	0x0239D51C LDRB W8, [X0 + 0x135]
	0x0239D520 TBNZ X8, 0x0, 0x239D528
	0x0239D524 BL 0x1C5C684
	0x0239D528 LDR X8, [X0 + 0xC0]
	0x0239D52C MOV X0, X20
	0x0239D530 MOV X1, X22
	0x0239D534 MOV W2, W24
	0x0239D538 LDR X4, [X8 + 0x70]
	0x0239D53C MOV W3, W23

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X19, 0x203D000
	007 Move W8, [X19+2404]
	008 Move X21, X1
	009 Move X20, X0
	010 Move [X31+80], X1
	011 Move [X31+88], X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x1D57000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+2404], W8
	021 Add X8, X31, 88
	022 Add X9, X31, 80
	023 Move [X31+56], X31
	024 Move [X31+64], X8
	025 Move [X31+72], X9
	026 Move W8, [X20+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Compare W8, 0
	029 JumpIfNotEqual {176}
	030 Move X19, [X20+32]
	031 Move TEMP, 0
	032 Not TEMP
	033 Move W8, TEMP
	034 Move [X20+16], W8
	035 Compare X19, 0
	036 JumpIfEqual {176}
	037 Move X8, [X21+32]
	038 Move X8, [X8+192]
	039 Move X1, [X8+16]
	040 Move W8, [X1+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X1
	046 Call 0x1C5D684
	047 Move X1, X0
	048 Move X8, [X19]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move X0, X19
	059 Move W2, W31
	060 Call 0x1C5D788
	061 Move X19, [X20+48]
	062 Move TEMP, 2
	063 Not TEMP
	064 Move W8, TEMP
	065 Move [X20+16], W8
	066 Move [X20+64], X31
	067 Move [X20+72], X31
	068 Move [X20+56], X31
	069 Compare X19, 0
	070 JumpIfEqual {167}
	071 Move X10, 0x1D57000
	072 Move X8, [X19]
	073 Move X10, [X10+3608]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X10]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move X0, X19
	085 Move W2, W31
	086 Call 0x1C5D788
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Add X8, X8, X9
	089 Add X0, X8, 312
	090 Move X8, [X0]
	091 Move X1, [X0+8]
	092 Move X0, X19
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move W8, W0
	095 Move X0, [X31+88]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {128}
	100 Move X19, [X0+48]
	101 Compare X19, 0
	102 JumpIfEqual {168}
	103 Move X8, [X31+80]
	104 Move X8, [X8+32]
	105 Move X8, [X8+192]
	106 Move X1, [X8+32]
	107 Move W8, [X1+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {115}
	112 Move X0, X1
	113 Call 0x1C5D684
	114 Move X1, X0
	115 Move X8, [X19]
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Compare X9, 0
	118 JumpIfEqual {125}
	119 Move X10, [X8+176]
	120 Add X10, X10, 8
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract X9, X9, 1
	124 Add X10, X10, 16
	125 Move X0, X19
	126 Move W2, W31
	127 Call 0x1C5D788
	128 Call 0x239D540, X0
	129 Move X8, [X31+88]
	130 Move W0, W31
	131 Move [X8+48], X31
	132 NotImplemented "Instruction LDRSW not yet implemented."
	133 Add X8, X8, X9
	134 Add X0, X8, 312
	135 Move X9, [X0]
	136 Move X1, [X0+8]
	137 Add X8, X31, 8
	138 Move X0, X19
	139 NotImplemented "Instruction BLR not yet implemented."
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 Move X8, [X31+24]
	142 Move X9, [X31+88]
	143 Move W0, 1
	144 Move [X31+2], V0
	145 Move [X31+48], X8
	146 Move [X9+56], V0
	147 Move W10, [X9+56]
	148 Move [X9+72], X8
	149 Move [X9+16], W0
	150 Move [X9+20], W10
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Add X8, X8, X9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X19
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X8, [X31+88]
	159 Move TEMP, 2
	160 Not TEMP
	161 Move W9, TEMP
	162 Move X19, X0
	163 Move [X8+48], X0
	164 Move [X8+16], W9
	165 Compare X19, 0
	166 JumpIfNotEqual {71}
	167 Call 0x1C17F20
	168 Call 0x1C17F20
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Call 0x3EB2AD0
	171 Move X19, [X0]
	172 Move [X31+56], X19
	173 Call 0x3EB2AE0
	174 Compare X19, 0
	175 JumpIfNotEqual {183}
	176 Move W0, W31
	177 Move X20, [X31+112]
	178 Move X19, [X31+120]
	179 Move X30, [X31+96]
	180 Move X21, [X31+104]
	181 Add X31, X31, 128
	182 Return X0
	183 Add X8, X31, 56
	184 Add X0, X8, 8
	185 Call 0x199EF00
	186 Move X0, X19
	187 Call 0x1C17F18
	188 Compare X19, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1D2D690
	191 Move X0, [X31+88]
	192 Move W8, [X0+16]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add W31, W8, 3
	195 Call 0x239D540, X0
	196 Move X0, X19
	197 Call 0x1C17F18
	198 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x0239D540 BL 0x239CE70
	0x0239D544 CBZ X20, 0x239D7A4
	0x0239D548 LDR W8, [X20 + 0x18]
	0x0239D54C CMP W24, W8
	0x0239D550 B.CS 0x239D7A0
	0x0239D554 MOVZ W8, 0x18
	0x0239D558 SMADDL X8, X24, X8, X20
	0x0239D55C LDR X9, [X8 + 0x30]
	0x0239D560 LDR V0, [X8 + 0x2]
	0x0239D564 SUB W23, W23, 0x1
	0x0239D568 STR X9, [X31 + 0xD0]
	0x0239D56C STR V0, [X31 + 0xC]
	0x0239D570 LDR X0, [X21 + 0x20]
	0x0239D574 LDRB W8, [X0 + 0x135]
	0x0239D578 TBNZ X8, 0x0, 0x239D580
	0x0239D57C BL 0x1C5C684
	0x0239D580 MOV X0, X20
	0x0239D584 MOV W1, W24
	0x0239D588 MOV W2, W23
	0x0239D58C BL 0x239CFDC
	0x0239D590 CMP W23, W19
	0x0239D594 B.LE 0x239D730
	0x0239D598 MOVZ W25, 0x18
	0x0239D59C MOV W24, W23
	0x0239D5A0 LDR W8, [X20 + 0x18]
	0x0239D5A4 ADD W19, W19, 0x1
	0x0239D5A8 CMP W19, W8
	0x0239D5AC B.CS 0x239D7A0
	0x0239D5B0 SMADDL X8, X19, X25, X20
	0x0239D5B4 LDR V0, [X31 + 0xC]
	0x0239D5B8 LDR X9, [X8 + 0x30]
	0x0239D5BC LDR V1, [X8 + 0x2]
	0x0239D5C0 LDR X8, [X31 + 0xD0]
	0x0239D5C4 STR V0, [X31 + 0x8]
	0x0239D5C8 STR X9, [X31 + 0xB0]
	0x0239D5CC STR V1, [X31 + 0xA]
	0x0239D5D0 STR X8, [X31 + 0x90]
	0x0239D5D4 CBZ X22, 0x239D7A4
	0x0239D5D8 LDR X8, [X31 + 0xB0]
	0x0239D5DC LDR V0, [X31 + 0xA]
	0x0239D5E0 LDR V1, [X31 + 0x8]
	0x0239D5E4 LDR X9, [X31 + 0x90]
	0x0239D5E8 STR X8, [X31 + 0x70]
	0x0239D5EC STR V0, [X31 + 0x6]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x203D000
	005 Move W8, [X19+2405]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1D57000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+2405], W8
	016 Move X19, [X20+48]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x1D57000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: System.Int32 System.Collections.Generic.IEnumerator<System.Int32>.get_Current()

Disassembly:
	0x0239D5F0 STR V1, [X31 + 0x4]
	0x0239D5F4 STR X9, [X31 + 0x50]

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x0239D5F8 LDR X0, [X21 + 0x20]
	0x0239D5FC LDRB W8, [X0 + 0x135]
	0x0239D600 TBNZ X8, 0x0, 0x239D608
	0x0239D604 BL 0x1C5C684
	0x0239D608 LDR V0, [X31 + 0x6]
	0x0239D60C LDR X9, [X31 + 0x70]
	0x0239D610 LDR V1, [X31 + 0x4]
	0x0239D614 LDR X10, [X31 + 0x50]
	0x0239D618 LDR X8, [X22 + 0x18]
	0x0239D61C LDR X0, [X22 + 0x40]
	0x0239D620 STR V0, [X31 + 0x10]
	0x0239D624 STR X9, [X31 + 0x110]
	0x0239D628 STR V1, [X31 + 0xE]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X0, 0x1D57000
	005 Move X0, [X0+2880]
	006 Move X19, X1
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move X1, X31
	010 Move X20, X0
	011 Call NotSupportedException..ctor, X0
	012 Move X0, X20
	013 Move X1, X19
	014 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x0239D62C STR X10, [X31 + 0xF0]
	0x0239D630 LDR X3, [X22 + 0x28]
	0x0239D634 ADD X1, X31, 0x100
	0x0239D638 ADD X2, X31, 0xE0
	0x0239D63C BLR X8
	0x0239D640 TBNZ X0, 0x1F, 0x239D5A0
	0x0239D644 LDR V0, [X31 + 0xC]
	0x0239D648 LDR X8, [X31 + 0xD0]
	0x0239D64C SUB W24, W24, 0x1
	0x0239D650 STR V0, [X31 + 0xA]
	0x0239D654 STR X8, [X31 + 0xB0]
	0x0239D658 LDR W8, [X20 + 0x18]
	0x0239D65C CMP W24, W8
	0x0239D660 B.CS 0x239D7A0
	0x0239D664 SMADDL X8, X24, X25, X20
	0x0239D668 LDR V0, [X31 + 0xA]
	0x0239D66C LDR X9, [X8 + 0x30]
	0x0239D670 LDR V1, [X8 + 0x2]
	0x0239D674 LDR X8, [X31 + 0xB0]
	0x0239D678 STR V0, [X31 + 0x2]
	0x0239D67C STR X9, [X31 + 0x10]
	0x0239D680 STR V1, [X31]
	0x0239D684 STR X8, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x203D000
	007 Move X20, 0x1D57000
	008 Move W8, [X21+2406]
	009 Move X20, [X20+1880]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x1D57000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2406], W8
	020 Move W8, [X19+20]
	021 Move X0, [X20]
	022 Add X1, X31, 12
	023 Move [X31+12], W8
	024 Call 0x1C17E04
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.Int32> System.Collections.Generic.IEnumerable<System.Int32>.GetEnumerator()

Disassembly:
	0x0239D688 LDR X0, [X21 + 0x20]
	0x0239D68C LDRB W8, [X0 + 0x135]
	0x0239D690 TBNZ X8, 0x0, 0x239D698
	0x0239D694 BL 0x1C5C684
	0x0239D698 LDR V0, [X31 + 0x2]
	0x0239D69C LDR X9, [X31 + 0x30]
	0x0239D6A0 LDR V1, [X31]
	0x0239D6A4 LDR X10, [X31 + 0x10]
	0x0239D6A8 LDR X8, [X22 + 0x18]
	0x0239D6AC LDR X0, [X22 + 0x40]
	0x0239D6B0 STR V0, [X31 + 0x10]
	0x0239D6B4 STR X9, [X31 + 0x110]
	0x0239D6B8 STR V1, [X31 + 0xE]
	0x0239D6BC STR X10, [X31 + 0xF0]
	0x0239D6C0 LDR X3, [X22 + 0x28]
	0x0239D6C4 ADD X1, X31, 0x100
	0x0239D6C8 ADD X2, X31, 0xE0
	0x0239D6CC BLR X8
	0x0239D6D0 TBNZ X0, 0x1F, 0x239D644
	0x0239D6D4 CMP W19, W24
	0x0239D6D8 B.GE 0x239D730
	0x0239D6DC LDR X0, [X21 + 0x20]
	0x0239D6E0 LDRB W8, [X0 + 0x135]
	0x0239D6E4 TBNZ X8, 0x0, 0x239D6EC
	0x0239D6E8 BL 0x1C5C684
	0x0239D6EC LDR X8, [X0 + 0xC0]
	0x0239D6F0 LDR X0, [X8 + 0x48]
	0x0239D6F4 LDRB W8, [X0 + 0x135]
	0x0239D6F8 TBNZ X8, 0x0, 0x239D700
	0x0239D6FC BL 0x1C5C684
	0x0239D700 LDR W8, [X0 + 0xE0]
	0x0239D704 CBNZ W8, 0x239D70C
	0x0239D708 BL 0x1C16DFC
	0x0239D70C LDR X0, [X21 + 0x20]
	0x0239D710 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+16]
	006 Move X19, X0
	007 Move X20, X1
	008 Add W31, W8, 2
	009 Move W21, [X19+24]
	010 Move X0, X31
	011 Call Environment.get_CurrentManagedThreadId
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X19+16], W31
	014 Move X20, X19
	015 Move X8, [X20+32]
	016 Move X8, [X8+192]
	017 Move X0, [X8]
	018 Move W8, [X0+309]
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {24}
	023 Call 0x1C5D684
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X20, X0
	027 Call Object..ctor, X0
	028 Move X0, X31
	029 Move [X20+16], W31
	030 Call Environment.get_CurrentManagedThreadId
	031 Move [X20+24], W0
	032 Move X8, [X19+40]
	033 Move X0, X20
	034 Move [X20+32], X8
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x0239D714 TBNZ X8, 0x0, 0x239D71C
	0x0239D718 BL 0x1C5C684
	0x0239D71C MOV X0, X20
	0x0239D720 MOV W1, W19

ISIL:
	001 Move X8, [X1+32]
	002 Move X8, [X8+192]
	003 Move X1, [X8+88]
	004 Call 0x239D688, X0
	005 Return X0

