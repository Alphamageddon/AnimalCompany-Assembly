Type: UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesScale

Method: System.Func`3<UnityEngine.UIElements.Scale, UnityEngine.UIElements.Scale, System.Boolean> get_SameFunc()

Disassembly:
	0x03E04D70 B.CS 0x3E04E1C
	0x03E04D74 SXTW X24, W22

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Boolean IsSame(UnityEngine.UIElements.Scale a, UnityEngine.UIElements.Scale b)

Disassembly:
	0x03E04D78 ADD X8, X8, X24, 0x3, LSL
	0x03E04D7C LDR X0, [X8 + 0x20]
	0x03E04D80 CBZ X0, 0x3E04E18
	0x03E04D84 MOV X1, X31
	0x03E04D88 BL 0x3DE0F44
	0x03E04D8C LDR X8, [X19 + 0x28]
	0x03E04D90 CBZ X8, 0x3E04E18
	0x03E04D94 LDR W9, [X8 + 0x18]
	0x03E04D98 CMP W22, W9
	0x03E04D9C B.CS 0x3E04E1C
	0x03E04DA0 LDR X9, [X19 + 0x30]
	0x03E04DA4 CBZ X9, 0x3E04E18
	0x03E04DA8 LDR W10, [X9 + 0x18]
	0x03E04DAC CMP W22, W10
	0x03E04DB0 B.CS 0x3E04E1C
	0x03E04DB4 LDR X10, [X19 + 0x40]
	0x03E04DB8 CBZ X10, 0x3E04E18
	0x03E04DBC LDR W11, [X10 + 0x18]
	0x03E04DC0 CMP W22, W11
	0x03E04DC4 B.CS 0x3E04E1C
	0x03E04DC8 ADD X8, X8, X24, 0x3, LSL

ISIL:
	001 Move X8, X0
	002 ShiftRight X8, 32
	003 And X8, X8, 0x7FFFFFFF
	004 Move S0, W0
	005 Move S1, W1
	006 Move X9, X2
	007 ShiftRight X9, 32
	008 And X9, X9, 0x7FFFFFFF
	009 Move S2, W2
	010 Move S3, W3
	011 Subtract S0, S0, S2
	012 Subtract S1, S1, S3
	013 Move X10, -53583872
	014 Move S2, W8
	015 Move S3, W9
	016 Subtract S2, S2, S3
	017 Move V3, [X10+3872]
	018 Multiply S0, S0, S0
	019 Multiply S2, S2, S2
	020 Add S0, S0, S2
	021 Multiply S1, S1, S1
	022 Add S0, S1, S0
	023 NotImplemented "Instruction FCMP not yet implemented."
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Return X0

Method: System.Void UpdateComputedStyle()

Disassembly:
	0x03E04DCC MADD X10, X24, X23, X10
	0x03E04DD0 LDR X1, [X8 + 0x20]
	0x03E04DD4 LDR W8, [X10 + 0x4C]
	0x03E04DD8 ADD X9, X9, X24, 0x2, LSL
	0x03E04DDC LDR W2, [X9 + 0x20]
	0x03E04DE0 LDUR X3, [X10 + 0x44]
	0x03E04DE4 AND X9, X20, 0x0
	0x03E04DE8 ORR X20, X9, X8, 0x0
	0x03E04DEC MOV X4, X20
	0x03E04DF0 MOV X5, X31
	0x03E04DF4 BL 0x3DCF770
	0x03E04DF8 ADD W22, W22, 0x1
	0x03E04DFC CMP W21, W22
	0x03E04E00 B.NE 0x3E04D60
	0x03E04E04 LDP X20, X19, [X31 + 0x30]
	0x03E04E08 LDP X22, X21, [X31 + 0x20]
	0x03E04E0C LDP X24, X23, [X31 + 0x10]
	0x03E04E10 LDR X30, [X31], #0x40
	0x03E04E14 RET
	0x03E04E18 BL 0x1C16F20
	0x03E04E1C BL 0x1C16F28
	0x03E04E20 STP X30, X21, [X31 - 0x20]!
	0x03E04E24 STP X20, X19, [X31 + 0x10]
	0x03E04E28 LDR X8, [X0 + 0x28]
	0x03E04E2C CBZ X8, 0x3E04ECC
	0x03E04E30 LDR W9, [X8 + 0x18]
	0x03E04E34 MOV W19, W1
	0x03E04E38 CMP W9, W1
	0x03E04E3C B.LS 0x3E04ED0
	0x03E04E40 SXTW X21, W19
	0x03E04E44 ADD X8, X8, X21, 0x3, LSL
	0x03E04E48 MOV X20, X0
	0x03E04E4C LDR X0, [X8 + 0x20]
	0x03E04E50 CBZ X0, 0x3E04ECC
	0x03E04E54 MOV X1, X31
	0x03E04E58 BL 0x3DE0F44
	0x03E04E5C LDR X8, [X20 + 0x28]
	0x03E04E60 CBZ X8, 0x3E04ECC
	0x03E04E64 LDR W9, [X8 + 0x18]
	0x03E04E68 CMP W9, W19
	0x03E04E6C B.LS 0x3E04ED0
	0x03E04E70 LDR X9, [X20 + 0x30]
	0x03E04E74 CBZ X9, 0x3E04ECC
	0x03E04E78 LDR W10, [X9 + 0x18]
	0x03E04E7C CMP W10, W19
	0x03E04E80 B.LS 0x3E04ED0
	0x03E04E84 LDR X10, [X20 + 0x40]
	0x03E04E88 CBZ X10, 0x3E04ECC
	0x03E04E8C LDR W11, [X10 + 0x18]
	0x03E04E90 CMP W11, W19
	0x03E04E94 B.LS 0x3E04ED0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W20, [X0+72]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X19, X0
	009 Move W21, W31
	010 Move X8, [X19+40]
	011 Compare X8, 0
	012 JumpIfEqual {54}
	013 Move W9, [X8+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X22, W21
	016 Add X8, X8, X22
	017 Move X0, [X8+32]
	018 Compare X0, 0
	019 JumpIfEqual {54}
	020 Move X1, X31
	021 Call VisualElement.get_computedStyle, X0
	022 Move X8, [X19+40]
	023 Compare X8, 0
	024 JumpIfEqual {54}
	025 Move W9, [X8+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X19+48]
	028 Compare X9, 0
	029 JumpIfEqual {54}
	030 Move W10, [X9+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X10, [X19+64]
	033 Compare X10, 0
	034 JumpIfEqual {54}
	035 Move W11, [X10+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X8, X22
	038 Add X9, X9, X22
	039 Add X10, X10, X22
	040 Move X1, [X8+32]
	041 Move W2, [X9+32]
	042 Move X3, [X10+80]
	043 Move X4, [X10+88]
	044 Move X5, X31
	045 Call ComputedStyle.ApplyPropertyAnimation, X0, X1, X2, X3
	046 Add W21, W21, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Return 
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: System.Void UpdateComputedStyle(System.Int32 i)

Disassembly:
	0x03E04E98 ADD X8, X8, X21, 0x3, LSL
	0x03E04E9C MOVZ W11, 0x30
	0x03E04EA0 ADD X9, X9, X21, 0x2, LSL
	0x03E04EA4 LDR X1, [X8 + 0x20]
	0x03E04EA8 NOP
	0x03E04EAC MADD X8, X21, X11, X10
	0x03E04EB0 LDR W2, [X9 + 0x20]
	0x03E04EB4 LDUR X3, [X8 + 0x44]
	0x03E04EB8 LDR W4, [X8 + 0x4C]
	0x03E04EBC LDP X20, X19, [X31 + 0x10]
	0x03E04EC0 MOV X5, X31
	0x03E04EC4 LDP X30, X21, [X31], #0x20
	0x03E04EC8 B 0x3DCF770
	0x03E04ECC BL 0x1C16F20
	0x03E04ED0 BL 0x1C16F28
	0x03E04ED4 STP X30, X21, [X31 - 0x20]!
	0x03E04ED8 STP X20, X19, [X31 + 0x10]
	0x03E04EDC ADRP X20, 0x5E4000
	0x03E04EE0 ADRP X21, 0x366000
	0x03E04EE4 LDRB W8, [X20 + 0x307]
	0x03E04EE8 LDR X21, [X21 + 0x40]
	0x03E04EEC MOV X19, X0
	0x03E04EF0 TBNZ X8, 0x0, 0x3E04F08
	0x03E04EF4 ADRP X0, 0x366000
	0x03E04EF8 LDR X0, [X0 + 0x40]
	0x03E04EFC BL 0x1C16CF4
	0x03E04F00 MOVZ W8, 0x1
	0x03E04F04 STRB W8, [X20 + 0x307]
	0x03E04F08 LDR X1, [X21]
	0x03E04F0C MOV X0, X19
	0x03E04F10 LDP X20, X19, [X31 + 0x10]
	0x03E04F14 LDP X30, X21, [X31], #0x20
	0x03E04F18 B 0x27EC64C
	0x03E04F1C STR X30, [X31 - 0x30]!
	0x03E04F20 STP X22, X21, [X31 + 0x10]
	0x03E04F24 STP X20, X19, [X31 + 0x20]
	0x03E04F28 LDR W20, [X0 + 0x48]
	0x03E04F2C CMP W20, 0x1
	0x03E04F30 B.LT 0x3E04FD0
	0x03E04F34 MOV X19, X0
	0x03E04F38 MOV W21, W31
	0x03E04F3C LDR X8, [X19 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+40]
	006 Compare X8, 0
	007 JumpIfEqual {48}
	008 Move W9, [X8+24]
	009 Move W19, W1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X21, W19
	012 Add X8, X8, X21
	013 Move X20, X0
	014 Move X0, [X8+32]
	015 Compare X0, 0
	016 JumpIfEqual {48}
	017 Move X1, X31
	018 Call VisualElement.get_computedStyle, X0
	019 Move X8, [X20+40]
	020 Compare X8, 0
	021 JumpIfEqual {48}
	022 Move W9, [X8+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X9, [X20+48]
	025 Compare X9, 0
	026 JumpIfEqual {48}
	027 Move W10, [X9+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X10, [X20+64]
	030 Compare X10, 0
	031 JumpIfEqual {48}
	032 Move W11, [X10+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X8, X8, X21
	035 Add X9, X9, X21
	036 Add X10, X10, X21
	037 Move X1, [X8+32]
	038 Move W2, [X9+32]
	039 Move X3, [X10+80]
	040 Move X4, [X10+88]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X5, X31
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call ComputedStyle.ApplyPropertyAnimation, X0, X1, X2, X3
	047 Return 
	048 Call 0x1C17F20
	049 Call 0x1C17F28

Method: UnityEngine.UIElements.Scale Lerp(UnityEngine.UIElements.Scale a, UnityEngine.UIElements.Scale b, System.Single t)

Disassembly:
	0x03E04F40 CBZ X8, 0x3E04FE0
	0x03E04F44 LDR W9, [X8 + 0x18]
	0x03E04F48 CMP W21, W9
	0x03E04F4C B.CS 0x3E04FE4
	0x03E04F50 SXTW X22, W21
	0x03E04F54 ADD X8, X8, X22, 0x3, LSL
	0x03E04F58 LDR X0, [X8 + 0x20]
	0x03E04F5C CBZ X0, 0x3E04FE0
	0x03E04F60 MOV X1, X31
	0x03E04F64 BL 0x3DE0F44
	0x03E04F68 LDR X8, [X19 + 0x28]
	0x03E04F6C CBZ X8, 0x3E04FE0
	0x03E04F70 LDR W9, [X8 + 0x18]
	0x03E04F74 CMP W21, W9
	0x03E04F78 B.CS 0x3E04FE4
	0x03E04F7C LDR X9, [X19 + 0x30]
	0x03E04F80 CBZ X9, 0x3E04FE0
	0x03E04F84 LDR W10, [X9 + 0x18]
	0x03E04F88 CMP W21, W10
	0x03E04F8C B.CS 0x3E04FE4
	0x03E04F90 LDR X10, [X19 + 0x40]
	0x03E04F94 CBZ X10, 0x3E04FE0
	0x03E04F98 LDR W11, [X10 + 0x18]
	0x03E04F9C CMP W21, W11
	0x03E04FA0 B.CS 0x3E04FE4
	0x03E04FA4 ADD X8, X8, X22, 0x3, LSL
	0x03E04FA8 ADD X9, X9, X22, 0x2, LSL

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move X8, X0
	005 ShiftRight X8, 32
	006 And X8, X8, 0x7FFFFFFF
	007 Move S1, W0
	008 Move X9, X2
	009 ShiftRight X9, 32
	010 And X9, X9, 0x7FFFFFFF
	011 Move S3, W2
	012 Move S2, W1
	013 Move S4, W3
	014 Subtract S3, S3, S1
	015 Move S5, W8
	016 Move S6, W9
	017 Subtract S4, S4, S2
	018 Multiply S3, S3, S0
	019 Subtract S6, S6, S5
	020 Multiply S4, S4, S0
	021 Add S3, S3, S1
	022 Multiply S0, S6, S0
	023 Add S2, S4, S2
	024 Add S1, S0, S5
	025 Add X0, X31, 0
	026 Move V0, V3
	027 Move [X31], X31
	028 Call Scale..ctor, X0, X1
	029 Move X0, [X31]
	030 Move X1, [X31+8]
	031 Move X30, [X31+16]
	032 Add X31, X31, 32
	033 Return X0

Method: System.Void UpdateValues()

Disassembly:
	0x03E04FAC ADD X10, X10, X22, 0x5, LSL
	0x03E04FB0 LDR X1, [X8 + 0x20]
	0x03E04FB4 LDR W2, [X9 + 0x20]
	0x03E04FB8 LDR X3, [X10 + 0x38]
	0x03E04FBC MOV X4, X31
	0x03E04FC0 BL 0x3DCF97C
	0x03E04FC4 ADD W21, W21, 0x1
	0x03E04FC8 CMP W20, W21
	0x03E04FCC B.NE 0x3E04F3C
	0x03E04FD0 LDP X20, X19, [X31 + 0x20]
	0x03E04FD4 LDP X22, X21, [X31 + 0x10]
	0x03E04FD8 LDR X30, [X31], #0x30
	0x03E04FDC RET
	0x03E04FE0 BL 0x1C16F20
	0x03E04FE4 BL 0x1C16F28
	0x03E04FE8 STP X30, X21, [X31 - 0x20]!
	0x03E04FEC STP X20, X19, [X31 + 0x10]
	0x03E04FF0 LDR X8, [X0 + 0x28]
	0x03E04FF4 CBZ X8, 0x3E05088
	0x03E04FF8 LDR W9, [X8 + 0x18]
	0x03E04FFC MOV W19, W1
	0x03E05000 CMP W9, W1
	0x03E05004 B.LS 0x3E0508C
	0x03E05008 SXTW X21, W19
	0x03E0500C ADD X8, X8, X21, 0x3, LSL
	0x03E05010 MOV X20, X0
	0x03E05014 LDR X0, [X8 + 0x20]
	0x03E05018 CBZ X0, 0x3E05088
	0x03E0501C MOV X1, X31
	0x03E05020 BL 0x3DE0F44
	0x03E05024 LDR X8, [X20 + 0x28]
	0x03E05028 CBZ X8, 0x3E05088
	0x03E0502C LDR W9, [X8 + 0x18]
	0x03E05030 CMP W9, W19
	0x03E05034 B.LS 0x3E0508C
	0x03E05038 LDR X9, [X20 + 0x30]
	0x03E0503C CBZ X9, 0x3E05088
	0x03E05040 LDR W10, [X9 + 0x18]
	0x03E05044 CMP W10, W19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move W20, [X0+72]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X19, X0
	011 Move X21, X31
	012 Move W22, 48
	013 Move W23, 56
	014 Move X8, [X19+56]
	015 Compare X8, 0
	016 JumpIfEqual {45}
	017 Move W9, [X8+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X9, [X19+64]
	020 Compare X9, 0
	021 JumpIfEqual {45}
	022 Move W10, [X9+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X24, X9, X22
	025 Move X0, [X24-16]
	026 Move X1, [X24-8]
	027 Move X2, [X24]
	028 Move X3, [X24+8]
	029 Move V0, [X8]
	030 Call ValuesScale.Lerp, X0, X1, V0
	031 Add X21, X21, 1
	032 Add X22, X22, 64
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X23, X23, 40
	035 Move [X24+32], X0
	036 Move [X24+40], X1
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Move X22, [X31+32]
	040 Move X21, [X31+40]
	041 Move X24, [X31+16]
	042 Move X23, [X31+24]
	043 Move X30, [X31+64]
	044 Return 
	045 Call 0x1C17F20
	046 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03E05048 B.LS 0x3E0508C
	0x03E0504C LDR X10, [X20 + 0x40]
	0x03E05050 CBZ X10, 0x3E05088
	0x03E05054 LDR W11, [X10 + 0x18]
	0x03E05058 CMP W11, W19
	0x03E0505C B.LS 0x3E0508C
	0x03E05060 ADD X8, X8, X21, 0x3, LSL
	0x03E05064 ADD X9, X9, X21, 0x2, LSL
	0x03E05068 ADD X10, X10, X21, 0x5, LSL
	0x03E0506C LDR X1, [X8 + 0x20]
	0x03E05070 LDR W2, [X9 + 0x20]
	0x03E05074 LDR X3, [X10 + 0x38]
	0x03E05078 LDP X20, X19, [X31 + 0x10]
	0x03E0507C MOV X4, X31
	0x03E05080 LDP X30, X21, [X31], #0x20
	0x03E05084 B 0x3DCF97C
	0x03E05088 BL 0x1C16F20
	0x03E0508C BL 0x1C16F28
	0x03E05090 STP X30, X21, [X31 - 0x20]!
	0x03E05094 STP X20, X19, [X31 + 0x10]
	0x03E05098 ADRP X20, 0x5E3000
	0x03E0509C ADRP X21, 0x365000
	0x03E050A0 LDRB W8, [X20 + 0x308]
	0x03E050A4 LDR X21, [X21 + 0x48]
	0x03E050A8 MOV X19, X0
	0x03E050AC TBNZ X8, 0x0, 0x3E050C4
	0x03E050B0 ADRP X0, 0x365000
	0x03E050B4 LDR X0, [X0 + 0x48]
	0x03E050B8 BL 0x1C16CF4
	0x03E050BC MOVZ W8, 0x1
	0x03E050C0 STRB W8, [X20 + 0x308]
	0x03E050C4 LDR X1, [X21]
	0x03E050C8 MOV X0, X19
	0x03E050CC LDP X20, X19, [X31 + 0x10]
	0x03E050D0 LDP X30, X21, [X31], #0x20
	0x03E050D4 B 0x27EC7B4
	0x03E050D8 LDR X0, [X0 + 0x88]
	0x03E050DC RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5E4000
	008 Move X23, 0x365000
	009 Move X20, 0x365000
	010 Move X21, 0x365000
	011 Move W8, [X22+771]
	012 Move X23, [X23+4064]
	013 Move X20, [X20+4072]
	014 Move X21, [X21+4080]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x365000
	021 Move X0, [X0+4064]
	022 Call 0x1C17CF4
	023 Move X0, 0x365000
	024 Move X0, [X0+4072]
	025 Call 0x1C17CF4
	026 Move X0, 0x365000
	027 Move X0, [X0+4080]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+771], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X31
	035 Move X3, X31
	036 Move X20, X0
	037 Call Func`3<Scale, Scale, Boolean>..ctor, X0, X1, X2
	038 Move [X19+136], X20
	039 Move X1, [X21]
	040 Move X0, X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Call Values`1<Scale>..ctor, X0
	048 Return 

