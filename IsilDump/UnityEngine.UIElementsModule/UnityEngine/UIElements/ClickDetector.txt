Type: UnityEngine.UIElements.ClickDetector

Method: System.Int32 get_s_DoubleClickTime()

Disassembly:
	0x03CEC940 BLR X8
	0x03CEC944 CBNZ W0, 0x3CEC9A8
	0x03CEC948 LDR X8, [X21]
	0x03CEC94C LDR X1, [X23]
	0x03CEC950 LDRH W9, [X8 + 0x12E]
	0x03CEC954 CBZ X9, 0x3CEC978
	0x03CEC958 LDR X10, [X8 + 0xB0]
	0x03CEC95C ADD X10, X10, 0x8
	0x03CEC960 LDUR X11, [X10 - 0x8]
	0x03CEC964 CMP X11, X1
	0x03CEC968 B.EQ 0x3CEC988
	0x03CEC96C SUBS X9, X9, 0x1
	0x03CEC970 ADD X10, X10, 0x10
	0x03CEC974 B.NE 0x3CEC960
	0x03CEC978 MOVZ W2, 0x4
	0x03CEC97C MOV X0, X21
	0x03CEC980 BL 0x1C5C788
	0x03CEC984 B 0x3CEC998
	0x03CEC988 LDR W9, [X10]
	0x03CEC98C ADD W9, W9, 0x4
	0x03CEC990 ADD X8, X8, W9, 0x4, SXTW
	0x03CEC994 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6FC000
	005 Move X19, 0x477000
	006 Move W8, [X20+1856]
	007 Move X19, [X19+2264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x477000
	013 Move X0, [X0+2264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1856], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_s_DoubleClickTime(System.Int32 value)

Disassembly:
	0x03CEC998 LDP X8, X1, [X0]
	0x03CEC99C MOV X0, X21
	0x03CEC9A0 BLR X8
	0x03CEC9A4 TBZ X0, 0x0, 0x3CECA68
	0x03CEC9A8 LDR X8, [X21]
	0x03CEC9AC LDR X19, [X20 + 0x10]
	0x03CEC9B0 LDR X1, [X23]
	0x03CEC9B4 LDRH W9, [X8 + 0x12E]
	0x03CEC9B8 CBZ X9, 0x3CEC9DC
	0x03CEC9BC LDR X10, [X8 + 0xB0]
	0x03CEC9C0 ADD X10, X10, 0x8
	0x03CEC9C4 LDUR X11, [X10 - 0x8]
	0x03CEC9C8 CMP X11, X1
	0x03CEC9CC B.EQ 0x3CEC9EC
	0x03CEC9D0 SUBS X9, X9, 0x1
	0x03CEC9D4 ADD X10, X10, 0x10
	0x03CEC9D8 B.NE 0x3CEC9C4
	0x03CEC9DC MOV X0, X21
	0x03CEC9E0 MOV W2, W31
	0x03CEC9E4 BL 0x1C5C788
	0x03CEC9E8 B 0x3CEC9F8
	0x03CEC9EC LDRSW X9, [X10]
	0x03CEC9F0 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6FC000
	006 Move X20, 0x477000
	007 Move W8, [X21+1857]
	008 Move X20, [X20+2264]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x477000
	015 Move X0, [X0+2264]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1857], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8], W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void .ctor()

Disassembly:
	0x03CEC9F4 ADD X0, X8, 0x138
	0x03CEC9F8 LDP X8, X1, [X0]
	0x03CEC9FC MOV X0, X21
	0x03CECA00 BLR X8
	0x03CECA04 CBZ X19, 0x3CECA84
	0x03CECA08 ADRP X8, 0x476000
	0x03CECA0C LDR X8, [X8 + 0x900]
	0x03CECA10 MOV W1, W0
	0x03CECA14 MOV X0, X19
	0x03CECA18 LDR X2, [X8]
	0x03CECA1C BL 0x301BCCC
	0x03CECA20 CBZ X0, 0x3CECA84
	0x03CECA24 LDR X8, [X0 + 0x10]
	0x03CECA28 CBZ X8, 0x3CECA54
	0x03CECA2C STR X31, [X0 + 0x28]
	0x03CECA30 B 0x3CECA54
	0x03CECA34 LDR W9, [X10]
	0x03CECA38 ADD W9, W9, 0x3
	0x03CECA3C ADD X8, X8, W9, 0x4, SXTW
	0x03CECA40 ADD X0, X8, 0x138
	0x03CECA44 LDP X8, X1, [X0]
	0x03CECA48 MOV X0, X21
	0x03CECA4C BLR X8
	0x03CECA50 CBZ W0, 0x3CECA68
	0x03CECA54 LDP X20, X19, [X31 + 0x30]
	0x03CECA58 LDP X22, X21, [X31 + 0x20]
	0x03CECA5C LDP X24, X23, [X31 + 0x10]
	0x03CECA60 LDR X30, [X31], #0x40
	0x03CECA64 RET
	0x03CECA68 MOV X0, X20
	0x03CECA6C MOV X1, X19
	0x03CECA70 LDP X20, X19, [X31 + 0x30]
	0x03CECA74 LDP X22, X21, [X31 + 0x20]
	0x03CECA78 LDP X24, X23, [X31 + 0x10]
	0x03CECA7C LDR X30, [X31], #0x40
	0x03CECA80 B 0x3CEBF1C
	0x03CECA84 BL 0x1C16F20
	0x03CECA88 SUB X31, X31, 0x50
	0x03CECA8C STP X30, X23, [X31 + 0x20]
	0x03CECA90 STP X22, X21, [X31 + 0x30]
	0x03CECA94 STP X20, X19, [X31 + 0x40]
	0x03CECA98 ADRP X21, 0x6FB000
	0x03CECA9C LDRB W8, [X21 + 0x748]
	0x03CECAA0 MOV X19, X1
	0x03CECAA4 MOV X20, X0
	0x03CECAA8 TBNZ X8, 0x0, 0x3CECAF0
	0x03CECAAC ADRP X0, 0x476000
	0x03CECAB0 LDR X0, [X0 + 0x920]
	0x03CECAB4 BL 0x1C16CF4
	0x03CECAB8 ADRP X0, 0x476000
	0x03CECABC LDR X0, [X0 + 0x928]
	0x03CECAC0 BL 0x1C16CF4
	0x03CECAC4 ADRP X0, 0x476000
	0x03CECAC8 LDR X0, [X0 + 0x930]
	0x03CECACC BL 0x1C16CF4
	0x03CECAD0 ADRP X0, 0x476000
	0x03CECAD4 LDR X0, [X0 + 0x938]
	0x03CECAD8 BL 0x1C16CF4
	0x03CECADC ADRP X0, 0x476000
	0x03CECAE0 LDR X0, [X0 + 0x940]
	0x03CECAE4 BL 0x1C16CF4
	0x03CECAE8 MOVZ W8, 0x1
	0x03CECAEC STRB W8, [X21 + 0x748]
	0x03CECAF0 STP X31, X31, [X31 + 0x8]
	0x03CECAF4 STR X31, [X31 + 0x18]
	0x03CECAF8 LDR X0, [X20 + 0x10]
	0x03CECAFC CBZ X0, 0x3CECB94
	0x03CECB00 ADRP X8, 0x476000
	0x03CECB04 LDR X8, [X8 + 0x940]
	0x03CECB08 ADRP X22, 0x476000
	0x03CECB0C ADRP X23, 0x476000
	0x03CECB10 ADRP X21, 0x476000
	0x03CECB14 LDR X1, [X8]
	0x03CECB18 LDR X22, [X22 + 0x928]
	0x03CECB1C LDR X23, [X23 + 0x938]
	0x03CECB20 LDR X21, [X21 + 0x920]
	0x03CECB24 ADD X8, X31, 0x8
	0x03CECB28 BL 0x301CB58
	0x03CECB2C LDR X1, [X22]
	0x03CECB30 ADD X0, X31, 0x8
	0x03CECB34 BL 0x2BC4350
	0x03CECB38 TBZ X0, 0x0, 0x3CECB6C
	0x03CECB3C LDR X20, [X31 + 0x18]
	0x03CECB40 CBZ X20, 0x3CECB8C
	0x03CECB44 LDR X1, [X20 + 0x10]
	0x03CECB48 CBZ X1, 0x3CECB2C
	0x03CECB4C CBZ X19, 0x3CECB90
	0x03CECB50 LDR X2, [X23]
	0x03CECB54 MOV X0, X19
	0x03CECB58 BL 0x301C318
	0x03CECB5C TBZ X0, 0x0, 0x3CECB2C
	0x03CECB60 MOV X0, X20
	0x03CECB64 BL 0x3CEBEB8
	0x03CECB68 B 0x3CECB2C
	0x03CECB6C LDR X1, [X21]
	0x03CECB70 ADD X0, X31, 0x8
	0x03CECB74 BL 0x2BC434C
	0x03CECB78 LDP X20, X19, [X31 + 0x40]
	0x03CECB7C LDP X22, X21, [X31 + 0x30]
	0x03CECB80 LDP X30, X23, [X31 + 0x20]
	0x03CECB84 ADD X31, X31, 0x50
	0x03CECB88 RET
	0x03CECB8C BL 0x1C16F20
	0x03CECB90 BL 0x1C16F20
	0x03CECB94 BL 0x1C16F20
	0x03CECB98 B 0x3CECBA8
	0x03CECB9C B 0x3CECBA8
	0x03CECBA0 B 0x3CECBA8
	0x03CECBA4 B 0x3CECBA8
	0x03CECBA8 MOV X19, X0
	0x03CECBAC CMP W1, 0x1
	0x03CECBB0 B.NE 0x3CECBDC
	0x03CECBB4 MOV X0, X19
	0x03CECBB8 BL 0x3EB1AD0
	0x03CECBBC LDR X20, [X0]
	0x03CECBC0 BL 0x3EB1AE0
	0x03CECBC4 LDR X1, [X21]
	0x03CECBC8 ADD X0, X31, 0x8
	0x03CECBCC BL 0x2BC434C
	0x03CECBD0 CBZ X20, 0x3CECB78
	0x03CECBD4 MOV X0, X20
	0x03CECBD8 BL 0x1C16F18
	0x03CECBDC MOV X20, X31
	0x03CECBE0 B 0x3CECBE8
	0x03CECBE4 MOV X19, X0
	0x03CECBE8 LDR X1, [X21]
	0x03CECBEC ADD X0, X31, 0x8
	0x03CECBF0 BL 0x2BC434C
	0x03CECBF4 CBNZ X20, 0x3CECC00
	0x03CECBF8 MOV X0, X19
	0x03CECBFC BL 0x1D2C690
	0x03CECC00 MOV X0, X20
	0x03CECC04 BL 0x1C16F18
	0x03CECC08 BL 0x1990590
	0x03CECC0C STR X30, [X31 - 0x20]!
	0x03CECC10 STP X20, X19, [X31 + 0x10]
	0x03CECC14 ADRP X19, 0x6FB000
	0x03CECC18 ADRP X20, 0x476000
	0x03CECC1C LDRB W8, [X19 + 0x749]
	0x03CECC20 LDR X20, [X20 + 0x8D8]
	0x03CECC24 TBNZ X8, 0x0, 0x3CECC3C
	0x03CECC28 ADRP X0, 0x476000
	0x03CECC2C LDR X0, [X0 + 0x8D8]
	0x03CECC30 BL 0x1C16CF4
	0x03CECC34 MOVZ W8, 0x1
	0x03CECC38 STRB W8, [X19 + 0x749]
	0x03CECC3C LDR X8, [X20]
	0x03CECC40 LDP X20, X19, [X31 + 0x10]
	0x03CECC44 MOVN W9, 0x0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x6FC000
	011 Move X23, 0x431000
	012 Move W8, [X20+1858]
	013 Move X23, [X23+3664]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x477000
	020 Move X0, [X0+2272]
	021 Call 0x1C17CF4
	022 Move X0, 0x477000
	023 Move X0, [X0+2264]
	024 Call 0x1C17CF4
	025 Move X0, 0x477000
	026 Move X0, [X0+2280]
	027 Call 0x1C17CF4
	028 Move X0, 0x477000
	029 Move X0, [X0+2288]
	030 Call 0x1C17CF4
	031 Move X0, 0x477000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move X0, 0x431000
	035 Move X0, [X0+3664]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+1858], W8
	039 Move X22, 0x477000
	040 Move X21, 0x477000
	041 Move X22, [X22+2296]
	042 Move X21, [X21+2288]
	043 Move X0, X19
	044 Move X1, X31
	045 Call Object..ctor, X0
	046 Move X0, [X23]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X23]
	052 Move X8, [X0+184]
	053 Move X0, [X22]
	054 Move X24, 0x477000
	055 Move X25, 0x477000
	056 Move X22, 0x477000
	057 Move W20, [X8]
	058 Move X24, [X24+2272]
	059 Move X25, [X25+2280]
	060 Move X22, [X22+2264]
	061 Call 0x1C17F10
	062 Move X2, [X21]
	063 Move W1, W20
	064 Move X21, X0
	065 Call List`1<Object>..ctor, X0, X1
	066 Move W26, W31
	067 Move [X19+16], X21
	068 Move X0, [X23]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X23]
	074 Move X8, [X0+184]
	075 Move W8, [X8]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X0, [X24]
	078 Move X20, [X19+16]
	079 Call 0x1C17F10
	080 Move X1, X31
	081 Move X21, X0
	082 Call Object..ctor, X0
	083 Compare X20, 0
	084 JumpIfEqual {165}
	085 Move W10, [X20+28]
	086 Move X8, [X20+16]
	087 Move X9, [X25]
	088 Add W10, W10, 1
	089 Move [X20+28], W10
	090 Compare X8, 0
	091 JumpIfEqual {165}
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Move W11, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add W9, W10, 1
	096 Add X8, X8, X10
	097 Move [X20+24], W9
	098 Move [X8+32], X21
	099 Move X8, [X9+32]
	100 Move X0, X20
	101 Move X1, X21
	102 Move X8, [X8+192]
	103 Move X2, [X8+112]
	104 Call List`1<Object>.AddWithResize, X0, X1
	105 Add W26, W26, 1
	106 Move X0, [X22]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X19, 0x6FC000
	112 Move W8, [X19+2023]
	113 Compare W8, 0
	114 JumpIfNotEqual {120}
	115 Move X0, 0x477000
	116 Move X0, [X0+2264]
	117 Call 0x1C17CF4
	118 Move W8, 1
	119 Move [X19+2023], W8
	120 Move X0, [X22]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1C17DFC
	125 Move X0, [X22]
	126 Move X8, [X0+184]
	127 Move W8, [X8]
	128 Add W31, W8, 1
	129 Move X0, X31
	130 Call Event.GetDoubleClickTime
	131 Move X8, [X22]
	132 Move W19, W0
	133 Move W9, [X8+224]
	134 Compare W9, 0
	135 JumpIfNotEqual {138}
	136 Move X0, X8
	137 Call 0x1C17DFC
	138 Move X20, 0x6FC000
	139 Move W8, [X20+2024]
	140 Compare W8, 0
	141 JumpIfNotEqual {147}
	142 Move X0, 0x477000
	143 Move X0, [X0+2264]
	144 Call 0x1C17CF4
	145 Move W8, 1
	146 Move [X20+2024], W8
	147 Move X0, [X22]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {153}
	151 Call 0x1C17DFC
	152 Move X0, [X22]
	153 Move X8, [X0+184]
	154 Move [X8], W19
	155 Move X20, [X31+64]
	156 Move X19, [X31+72]
	157 Move X22, [X31+48]
	158 Move X21, [X31+56]
	159 Move X24, [X31+32]
	160 Move X23, [X31+40]
	161 Move X26, [X31+16]
	162 Move X25, [X31+24]
	163 Move X30, [X31+80]
	164 Return 
	165 Call 0x1C17F20

Method: System.Void StartClickTracking(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03CECC50 LDR X30, [X31], #0x20
	0x03CECC54 RET
	0x03CECC58 STR X30, [X31 - 0x40]!
	0x03CECC5C STP X24, X23, [X31 + 0x10]
	0x03CECC60 STP X22, X21, [X31 + 0x20]
	0x03CECC64 STP X20, X19, [X31 + 0x30]
	0x03CECC68 ADRP X21, 0x6FB000
	0x03CECC6C LDRB W8, [X21 + 0x74A]
	0x03CECC70 MOV X19, X1
	0x03CECC74 MOV X20, X0
	0x03CECC78 TBNZ X8, 0x0, 0x3CECC90
	0x03CECC7C ADRP X0, 0x476000
	0x03CECC80 LDR X0, [X0 + 0x948]
	0x03CECC84 BL 0x1C16CF4
	0x03CECC88 MOVZ W8, 0x1
	0x03CECC8C STRB W8, [X21 + 0x74A]
	0x03CECC90 ADRP X24, 0x476000
	0x03CECC94 LDR X21, [X20 + 0x30]!
	0x03CECC98 LDR X24, [X24 + 0x948]
	0x03CECC9C MOV X0, X21
	0x03CECCA0 MOV X1, X19
	0x03CECCA4 MOV X2, X31
	0x03CECCA8 BL 0x33C0DE4
	0x03CECCAC CBZ X0, 0x3CECCCC
	0x03CECCB0 LDR X23, [X24]
	0x03CECCB4 MOV X22, X0
	0x03CECCB8 MOV X1, X23
	0x03CECCBC BL 0x1C16E00
	0x03CECCC0 MOV X1, X0
	0x03CECCC4 CBNZ X0, 0x3CECCD0
	0x03CECCC8 B 0x3CECCFC
	0x03CECCCC MOV X1, X31
	0x03CECCD0 MOV X0, X20
	0x03CECCD4 MOV X2, X21
	0x03CECCD8 BL 0x1C24138
	0x03CECCDC CMP X21, X0
	0x03CECCE0 MOV X21, X0
	0x03CECCE4 B.NE 0x3CECC9C
	0x03CECCE8 LDP X20, X19, [X31 + 0x30]
	0x03CECCEC LDP X22, X21, [X31 + 0x20]
	0x03CECCF0 LDP X24, X23, [X31 + 0x10]
	0x03CECCF4 LDR X30, [X31], #0x40
	0x03CECCF8 RET
	0x03CECCFC MOV X0, X22
	0x03CECD00 MOV X1, X23
	0x03CECD04 BL 0x1C171E0
	0x03CECD08 STR X30, [X31 - 0x40]!
	0x03CECD0C STP X24, X23, [X31 + 0x10]
	0x03CECD10 STP X22, X21, [X31 + 0x20]
	0x03CECD14 STP X20, X19, [X31 + 0x30]
	0x03CECD18 ADRP X21, 0x6FB000
	0x03CECD1C LDRB W8, [X21 + 0x74B]
	0x03CECD20 MOV X19, X1
	0x03CECD24 MOV X20, X0
	0x03CECD28 TBNZ X8, 0x0, 0x3CECD40
	0x03CECD2C ADRP X0, 0x476000
	0x03CECD30 LDR X0, [X0 + 0x948]
	0x03CECD34 BL 0x1C16CF4
	0x03CECD38 MOVZ W8, 0x1
	0x03CECD3C STRB W8, [X21 + 0x74B]
	0x03CECD40 ADRP X24, 0x476000
	0x03CECD44 LDR X21, [X20 + 0x30]!
	0x03CECD48 LDR X24, [X24 + 0x948]
	0x03CECD4C MOV X0, X21
	0x03CECD50 MOV X1, X19
	0x03CECD54 MOV X2, X31
	0x03CECD58 BL 0x33C0FDC
	0x03CECD5C CBZ X0, 0x3CECD7C
	0x03CECD60 LDR X23, [X24]
	0x03CECD64 MOV X22, X0
	0x03CECD68 MOV X1, X23
	0x03CECD6C BL 0x1C16E00
	0x03CECD70 MOV X1, X0
	0x03CECD74 CBNZ X0, 0x3CECD80
	0x03CECD78 B 0x3CECDAC
	0x03CECD7C MOV X1, X31
	0x03CECD80 MOV X0, X20
	0x03CECD84 MOV X2, X21
	0x03CECD88 BL 0x1C24138
	0x03CECD8C CMP X21, X0
	0x03CECD90 MOV X21, X0
	0x03CECD94 B.NE 0x3CECD4C
	0x03CECD98 LDP X20, X19, [X31 + 0x30]
	0x03CECD9C LDP X22, X21, [X31 + 0x20]
	0x03CECDA0 LDP X24, X23, [X31 + 0x10]
	0x03CECDA4 LDR X30, [X31], #0x40
	0x03CECDA8 RET
	0x03CECDAC MOV X0, X22
	0x03CECDB0 MOV X1, X23
	0x03CECDB4 BL 0x1C171E0
	0x03CECDB8 STR X30, [X31 - 0x30]!
	0x03CECDBC STP X22, X21, [X31 + 0x10]
	0x03CECDC0 STP X20, X19, [X31 + 0x20]
	0x03CECDC4 ADRP X21, 0x6FB000
	0x03CECDC8 LDRB W8, [X21 + 0x74C]
	0x03CECDCC MOV X19, X1
	0x03CECDD0 MOV X20, X0
	0x03CECDD4 TBNZ X8, 0x0, 0x3CECDEC
	0x03CECDD8 ADRP X0, 0x408000
	0x03CECDDC LDR X0, [X0 + 0xE70]
	0x03CECDE0 BL 0x1C16CF4
	0x03CECDE4 MOVZ W8, 0x1
	0x03CECDE8 STRB W8, [X21 + 0x74C]
	0x03CECDEC ADRP X22, 0x408000
	0x03CECDF0 LDR X21, [X20 + 0x38]!
	0x03CECDF4 LDR X22, [X22 + 0xE70]
	0x03CECDF8 MOV X0, X21
	0x03CECDFC MOV X1, X19
	0x03CECE00 MOV X2, X31
	0x03CECE04 BL 0x33C0DE4
	0x03CECE08 MOV X8, X0
	0x03CECE0C CBZ X0, 0x3CECE20
	0x03CECE10 LDR X1, [X22]
	0x03CECE14 LDR X9, [X8]
	0x03CECE18 CMP X9, X1
	0x03CECE1C B.NE 0x3CECE4C
	0x03CECE20 MOV X0, X20
	0x03CECE24 MOV X1, X8
	0x03CECE28 MOV X2, X21
	0x03CECE2C BL 0x1C24138
	0x03CECE30 CMP X21, X0
	0x03CECE34 MOV X21, X0
	0x03CECE38 B.NE 0x3CECDF8
	0x03CECE3C LDP X20, X19, [X31 + 0x20]
	0x03CECE40 LDP X22, X21, [X31 + 0x10]
	0x03CECE44 LDR X30, [X31], #0x30
	0x03CECE48 RET
	0x03CECE4C MOV X0, X8
	0x03CECE50 BL 0x1C171E0
	0x03CECE54 STR X30, [X31 - 0x30]!
	0x03CECE58 STP X22, X21, [X31 + 0x10]
	0x03CECE5C STP X20, X19, [X31 + 0x20]
	0x03CECE60 ADRP X21, 0x6FB000
	0x03CECE64 LDRB W8, [X21 + 0x74D]
	0x03CECE68 MOV X19, X1
	0x03CECE6C MOV X20, X0
	0x03CECE70 TBNZ X8, 0x0, 0x3CECE88
	0x03CECE74 ADRP X0, 0x408000
	0x03CECE78 LDR X0, [X0 + 0xE70]
	0x03CECE7C BL 0x1C16CF4
	0x03CECE80 MOVZ W8, 0x1
	0x03CECE84 STRB W8, [X21 + 0x74D]
	0x03CECE88 ADRP X22, 0x408000
	0x03CECE8C LDR X21, [X20 + 0x38]!
	0x03CECE90 LDR X22, [X22 + 0xE70]
	0x03CECE94 MOV X0, X21
	0x03CECE98 MOV X1, X19
	0x03CECE9C MOV X2, X31
	0x03CECEA0 BL 0x33C0FDC
	0x03CECEA4 MOV X8, X0
	0x03CECEA8 CBZ X0, 0x3CECEBC
	0x03CECEAC LDR X1, [X22]
	0x03CECEB0 LDR X9, [X8]
	0x03CECEB4 CMP X9, X1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x6FC000
	011 Move X22, 0x431000
	012 Move W8, [X19+1859]
	013 Move X22, [X22+3704]
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x477000
	021 Move X0, [X0+2264]
	022 Call 0x1C17CF4
	023 Move X0, 0x431000
	024 Move X0, [X0+3704]
	025 Call 0x1C17CF4
	026 Move X0, 0x477000
	027 Move X0, [X0+2304]
	028 Call 0x1C17CF4
	029 Move X0, 0x430000
	030 Move X0, [X0+2200]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+1859], W8
	034 Move X1, [X22]
	035 Move X0, X20
	036 Call 0x1C17E00
	037 Compare X0, 0
	038 JumpIfEqual {152}
	039 Move X8, [X0]
	040 Move X21, [X21+16]
	041 Move X1, [X22]
	042 Move X19, X0
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Compare X9, 0
	045 JumpIfEqual {52}
	046 Move X10, [X8+176]
	047 Add X10, X10, 8
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Subtract X9, X9, 1
	051 Add X10, X10, 16
	052 Move X0, X19
	053 Move W2, W31
	054 Call 0x1C5D788
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Add X8, X8, X9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X1, [X0+8]
	060 Move X0, X19
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Compare X21, 0
	063 JumpIfEqual {169}
	064 Move X8, 0x477000
	065 Move X8, [X8+2304]
	066 Move W1, W0
	067 Move X0, X21
	068 Move X2, [X8]
	069 Call List`1<Object>.get_Item, X0, X1
	070 Compare X20, 0
	071 JumpIfEqual {169}
	072 Move X21, X0
	073 Move X0, X20
	074 Move X1, X31
	075 Call EventBase.get_target, X0
	076 Compare X0, 0
	077 JumpIfEqual {85}
	078 Move X8, 0x430000
	079 Move X8, [X8+2200]
	080 Move X9, [X0]
	081 Move X8, [X8]
	082 Move W11, [X9+304]
	083 Move W10, [X8+304]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X24, X31
	086 Compare X21, 0
	087 JumpIfEqual {169}
	088 Move X8, [X21+16]
	089 Move X23, 0x477000
	090 Move X23, [X23+2264]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X21
	093 Call ButtonClickStatus.Reset, X0
	094 Move [X21+16], X24
	095 Move X0, [X23]
	096 Move X24, [X20+24]
	097 Move X25, [X21+40]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X26, 0x6FC000
	103 Move W8, [X26+2023]
	104 Compare W8, 0
	105 JumpIfNotEqual {111}
	106 Move X0, 0x477000
	107 Move X0, [X0+2264]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X26+2023], W8
	111 Move X0, [X23]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {117}
	115 Call 0x1C17DFC
	116 Move X0, [X23]
	117 Move X8, [X0+184]
	118 Subtract X9, X24, X25
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W8, 1
	122 Move W8, [X21+48]
	123 Add W8, W8, 1
	124 Move [X21+48], W8
	125 Move X8, [X20+24]
	126 Move [X21+40], X8
	127 Move X8, [X19]
	128 Move X1, [X22]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W2, 5
	139 Move X0, X19
	140 Call 0x1C5D788
	141 Move W9, [X10]
	142 Add W9, W9, 5
	143 Add X8, X8, W9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X19
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move [X21+24], S0
	150 Move [X21+32], S1
	151 Move [X21+32], S2
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X26, [X31+16]
	159 Move X25, [X31+24]
	160 Move X30, [X31+80]
	161 Return 
	162 Move X9, [X9+200]
	163 Add X9, X9, X10
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 NotImplemented "Instruction CSEL not yet implemented."
	167 Compare X21, 0
	168 JumpIfNotEqual {88}
	169 Call 0x1C17F20

Method: System.Void SendClickEvent(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03CECF1C STR X30, [X31 - 0x20]!
	0x03CECF20 STP X20, X19, [X31 + 0x10]
	0x03CECF24 LDRB W8, [X0 + 0x60]
	0x03CECF28 AND W20, W1, 0x1
	0x03CECF2C CMP W8, W20
	0x03CECF30 B.NE 0x3CECF40
	0x03CECF34 LDP X20, X19, [X31 + 0x10]
	0x03CECF38 LDR X30, [X31], #0x20
	0x03CECF3C RET
	0x03CECF40 LDR X8, [X0]
	0x03CECF44 MOV X19, X0
	0x03CECF48 LDP X9, X1, [X8 + 0x198]
	0x03CECF4C BLR X9
	0x03CECF50 LDR X8, [X19]
	0x03CECF54 STRB W20, [X19 + 0x60]
	0x03CECF58 MOV X0, X19
	0x03CECF5C LDP X20, X19, [X31 + 0x10]
	0x03CECF60 LDP X2, X1, [X8 + 0x188]
	0x03CECF64 LDR X30, [X31], #0x20
	0x03CECF68 BR X2
	0x03CECF6C LDRB W0, [X0 + 0x60]
	0x03CECF70 RET
	0x03CECF74 STP X30, X21, [X31 - 0x20]!
	0x03CECF78 STP X20, X19, [X31 + 0x10]
	0x03CECF7C MOV X19, X3
	0x03CECF80 MOV X20, X2
	0x03CECF84 MOV X21, X0
	0x03CECF88 BL 0x3CECFA0
	0x03CECF8C STP X20, X19, [X21 + 0x40]
	0x03CECF90 LDP X20, X19, [X31 + 0x10]
	0x03CECF94 STRB W31, [X21 + 0x50]
	0x03CECF98 LDP X30, X21, [X31], #0x20
	0x03CECF9C RET
	0x03CECFA0 STP X30, X21, [X31 - 0x20]!
	0x03CECFA4 STP X20, X19, [X31 + 0x10]
	0x03CECFA8 ADRP X21, 0x6FB000
	0x03CECFAC LDRB W8, [X21 + 0x74F]
	0x03CECFB0 MOV X20, X1
	0x03CECFB4 MOV X19, X0
	0x03CECFB8 TBNZ X8, 0x0, 0x3CECFD0
	0x03CECFBC ADRP X0, 0x476000
	0x03CECFC0 LDR X0, [X0 + 0x950]
	0x03CECFC4 BL 0x1C16CF4
	0x03CECFC8 MOVZ W8, 0x1
	0x03CECFCC STRB W8, [X21 + 0x74F]
	0x03CECFD0 MOVN W8, 0x0
	0x03CECFD4 MOV X0, X19
	0x03CECFD8 MOV X1, X31
	0x03CECFDC STR W8, [X19 + 0x5C]
	0x03CECFE0 BL 0x3DC096C
	0x03CECFE4 LDR X0, [X19 + 0x18]
	0x03CECFE8 STR X20, [X19 + 0x38]
	0x03CECFEC CBZ X0, 0x3CED064
	0x03CECFF0 ADRP X9, 0x476000
	0x03CECFF4 LDR X9, [X9 + 0x950]
	0x03CECFF8 LDR W10, [X0 + 0x1C]
	0x03CECFFC LDR X8, [X0 + 0x10]
	0x03CED000 LDR X9, [X9]
	0x03CED004 ADD W10, W10, 0x1
	0x03CED008 STR W10, [X0 + 0x1C]
	0x03CED00C CBZ X8, 0x3CED064
	0x03CED010 LDRSW X10, [X0 + 0x18]
	0x03CED014 LDR W11, [X8 + 0x18]
	0x03CED018 CMP W10, W11
	0x03CED01C B.CS 0x3CED03C
	0x03CED020 MOVZ W11, 0xC
	0x03CED024 ADD W9, W10, 0x1
	0x03CED028 MADD X8, X10, X11, X8
	0x03CED02C STR W9, [X0 + 0x18]
	0x03CED030 STR X31, [X8 + 0x20]
	0x03CED034 STR W31, [X8 + 0x28]
	0x03CED038 B 0x3CED054
	0x03CED03C LDR X8, [X9 + 0x20]
	0x03CED040 MOV X1, X31
	0x03CED044 MOV X2, X31
	0x03CED048 LDR X8, [X8 + 0xC0]
	0x03CED04C LDR X3, [X8 + 0x70]
	0x03CED050 BL 0x2FF57C0
	0x03CED054 STRB W31, [X19 + 0x50]
	0x03CED058 LDP X20, X19, [X31 + 0x10]
	0x03CED05C LDP X30, X21, [X31], #0x20
	0x03CED060 RET
	0x03CED064 BL 0x1C16F20
	0x03CED068 STP X30, X21, [X31 - 0x20]!
	0x03CED06C STP X20, X19, [X31 + 0x10]
	0x03CED070 ADRP X21, 0x6FA000
	0x03CED074 LDRB W8, [X21 + 0x74E]
	0x03CED078 MOV X19, X1
	0x03CED07C MOV X20, X0
	0x03CED080 TBNZ X8, 0x0, 0x3CED098
	0x03CED084 ADRP X0, 0x475000
	0x03CED088 LDR X0, [X0 + 0x950]
	0x03CED08C BL 0x1C16CF4
	0x03CED090 MOVZ W8, 0x1
	0x03CED094 STRB W8, [X21 + 0x74E]
	0x03CED098 MOVN W8, 0x0
	0x03CED09C MOV X0, X20
	0x03CED0A0 MOV X1, X31
	0x03CED0A4 STR W8, [X20 + 0x5C]
	0x03CED0A8 BL 0x3DC096C
	0x03CED0AC LDR X0, [X20 + 0x18]
	0x03CED0B0 STR X19, [X20 + 0x30]
	0x03CED0B4 CBZ X0, 0x3CED12C
	0x03CED0B8 ADRP X9, 0x475000
	0x03CED0BC LDR X9, [X9 + 0x950]
	0x03CED0C0 LDR W10, [X0 + 0x1C]
	0x03CED0C4 LDR X8, [X0 + 0x10]
	0x03CED0C8 LDR X9, [X9]
	0x03CED0CC ADD W10, W10, 0x1
	0x03CED0D0 STR W10, [X0 + 0x1C]
	0x03CED0D4 CBZ X8, 0x3CED12C
	0x03CED0D8 LDRSW X10, [X0 + 0x18]
	0x03CED0DC LDR W11, [X8 + 0x18]
	0x03CED0E0 CMP W10, W11
	0x03CED0E4 B.CS 0x3CED10C
	0x03CED0E8 LDP X20, X19, [X31 + 0x10]
	0x03CED0EC MOVZ W11, 0xC
	0x03CED0F0 ADD W9, W10, 0x1
	0x03CED0F4 MADD X8, X10, X11, X8
	0x03CED0F8 STR W9, [X0 + 0x18]
	0x03CED0FC STR X31, [X8 + 0x20]
	0x03CED100 STR W31, [X8 + 0x28]
	0x03CED104 LDP X30, X21, [X31], #0x20
	0x03CED108 RET
	0x03CED10C LDR X8, [X9 + 0x20]
	0x03CED110 LDP X20, X19, [X31 + 0x10]
	0x03CED114 MOV X1, X31
	0x03CED118 MOV X2, X31
	0x03CED11C LDR X8, [X8 + 0xC0]
	0x03CED120 LDR X3, [X8 + 0x70]
	0x03CED124 LDP X30, X21, [X31], #0x20
	0x03CED128 B 0x2FF57C0
	0x03CED12C BL 0x1C16F20
	0x03CED130 STP X30, X19, [X31 - 0x10]!
	0x03CED134 LDR X8, [X0 + 0x38]
	0x03CED138 MOV X19, X0
	0x03CED13C CBNZ X8, 0x3CED148
	0x03CED140 LDR X8, [X19 + 0x30]
	0x03CED144 CBZ X8, 0x3CED1F4
	0x03CED148 LDR X8, [X19 + 0x40]
	0x03CED14C CMP X8, 0x0
	0x03CED150 B.GT 0x3CED160
	0x03CED154 LDR X8, [X19 + 0x48]
	0x03CED158 CMP X8, 0x1
	0x03CED15C B.LT 0x3CED1F4
	0x03CED160 LDR W1, [X19 + 0x5C]
	0x03CED164 MOV X0, X19
	0x03CED168 BL 0x3CED224
	0x03CED16C TBZ X0, 0x0, 0x3CED1C4
	0x03CED170 MOV X0, X19
	0x03CED174 MOV X1, X31
	0x03CED178 BL 0x3DB9E70
	0x03CED17C CBZ X0, 0x3CED1FC
	0x03CED180 MOV X1, X31
	0x03CED184 BL 0x3DEC00C
	0x03CED188 TBNZ X0, 0x0, 0x3CED194
	0x03CED18C LDRB W8, [X19 + 0x60]
	0x03CED190 CBZ W8, 0x3CED1C4
	0x03CED194 MOV X0, X19
	0x03CED198 MOV X1, X31
	0x03CED19C BL 0x3CED2A4
	0x03CED1A0 MOV X0, X19
	0x03CED1A4 MOV X1, X31
	0x03CED1A8 BL 0x3DB9E70
	0x03CED1AC CBZ X0, 0x3CED1FC
	0x03CED1B0 MOV X1, X31
	0x03CED1B4 MOV X19, X0
	0x03CED1B8 BL 0x3DEEF88
	0x03CED1BC ORR W1, W0, 0x1
	0x03CED1C0 B 0x3CED1E4
	0x03CED1C4 MOV X0, X19
	0x03CED1C8 MOV X1, X31
	0x03CED1CC BL 0x3DB9E70
	0x03CED1D0 CBZ X0, 0x3CED1FC
	0x03CED1D4 MOV X1, X31
	0x03CED1D8 MOV X19, X0
	0x03CED1DC BL 0x3DEEF88
	0x03CED1E0 AND W1, W0, 0xFFFFFFFE
	0x03CED1E4 MOV X0, X19
	0x03CED1E8 MOV X2, X31
	0x03CED1EC LDP X30, X19, [X31], #0x10
	0x03CED1F0 B 0x3DEEF90
	0x03CED1F4 LDP X30, X19, [X31], #0x10
	0x03CED1F8 RET
	0x03CED1FC BL 0x1C16F20
	0x03CED200 LDR X8, [X0 + 0x40]
	0x03CED204 CMP X8, 0x0
	0x03CED208 B.LE 0x3CED214
	0x03CED20C MOVZ W0, 0x1
	0x03CED210 RET
	0x03CED214 LDR X8, [X0 + 0x48]
	0x03CED218 CMP X8, 0x0
	0x03CED21C CSET W0, GT
	0x03CED220 RET
	0x03CED224 STR X30, [X31 - 0x20]!
	0x03CED228 STP X20, X19, [X31 + 0x10]
	0x03CED22C MOV W20, W1
	0x03CED230 MOV X1, X31
	0x03CED234 MOV X19, X0
	0x03CED238 BL 0x3DB9E70
	0x03CED23C CBZ X0, 0x3CED2A0
	0x03CED240 LDR X0, [X0 + 0x3A0]
	0x03CED244 CBZ X0, 0x3CED2A0
	0x03CED248 MOV W1, W20
	0x03CED24C MOV X2, X31
	0x03CED250 BL 0x3DBC148
	0x03CED254 MOV X20, X0
	0x03CED258 MOV X0, X19
	0x03CED25C MOV X1, X31
	0x03CED260 BL 0x3DB9E70
	0x03CED264 CMP X0, X20
	0x03CED268 B.EQ 0x3CED290
	0x03CED26C MOV X0, X19
	0x03CED270 MOV X1, X31
	0x03CED274 BL 0x3DB9E70
	0x03CED278 CBZ X0, 0x3CED2A0
	0x03CED27C MOV X1, X20
	0x03CED280 LDP X20, X19, [X31 + 0x10]
	0x03CED284 MOV X2, X31
	0x03CED288 LDR X30, [X31], #0x20
	0x03CED28C B 0x3DEF1C0
	0x03CED290 LDP X20, X19, [X31 + 0x10]
	0x03CED294 MOVZ W0, 0x1
	0x03CED298 LDR X30, [X31], #0x20
	0x03CED29C RET
	0x03CED2A0 BL 0x1C16F20
	0x03CED2A4 STR X30, [X31 - 0x20]!
	0x03CED2A8 STP X20, X19, [X31 + 0x10]
	0x03CED2AC LDR X8, [X0 + 0x38]
	0x03CED2B0 MOV X20, X0
	0x03CED2B4 MOV X19, X1
	0x03CED2B8 CBZ X8, 0x3CED2CC
	0x03CED2BC LDR X9, [X8 + 0x18]
	0x03CED2C0 LDR X0, [X8 + 0x40]
	0x03CED2C4 LDR X1, [X8 + 0x28]
	0x03CED2C8 BLR X9
	0x03CED2CC LDR X8, [X20 + 0x30]
	0x03CED2D0 CBZ X8, 0x3CED2F0
	0x03CED2D4 LDR X3, [X8 + 0x18]
	0x03CED2D8 LDR X0, [X8 + 0x40]
	0x03CED2DC LDR X2, [X8 + 0x28]
	0x03CED2E0 MOV X1, X19
	0x03CED2E4 LDP X20, X19, [X31 + 0x10]
	0x03CED2E8 LDR X30, [X31], #0x20
	0x03CED2EC BR X3
	0x03CED2F0 LDP X20, X19, [X31 + 0x10]
	0x03CED2F4 LDR X30, [X31], #0x20
	0x03CED2F8 RET
	0x03CED2FC STP X30, X23, [X31 - 0x30]!
	0x03CED300 STP X22, X21, [X31 + 0x10]
	0x03CED304 STP X20, X19, [X31 + 0x20]
	0x03CED308 ADRP X22, 0x6FA000
	0x03CED30C ADRP X20, 0x431000
	0x03CED310 ADRP X21, 0x475000
	0x03CED314 LDRB W8, [X22 + 0x750]
	0x03CED318 LDR X20, [X20 + 0xB0]
	0x03CED31C LDR X21, [X21 + 0x958]
	0x03CED320 MOV X19, X0
	0x03CED324 TBNZ X8, 0x0, 0x3CED474
	0x03CED328 ADRP X0, 0x475000
	0x03CED32C LDR X0, [X0 + 0x960]

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x6FC000
	011 Move X23, 0x431000
	012 Move W8, [X21+1860]
	013 Move X23, [X23+3704]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x477000
	021 Move X0, [X0+2264]
	022 Call 0x1C17CF4
	023 Move X0, 0x477000
	024 Move X0, [X0+2312]
	025 Call 0x1C17CF4
	026 Move X0, 0x408000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0x431000
	030 Move X0, [X0+3704]
	031 Call 0x1C17CF4
	032 Move X0, 0x477000
	033 Move X0, [X0+2304]
	034 Call 0x1C17CF4
	035 Move X0, 0x430000
	036 Move X0, [X0+2408]
	037 Call 0x1C17CF4
	038 Move X0, 0x430000
	039 Move X0, [X0+2200]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+1860], W8
	043 Move X1, [X23]
	044 Move X0, X19
	045 Call 0x1C17E00
	046 Compare X0, 0
	047 JumpIfEqual {223}
	048 Move X8, [X0]
	049 Move X20, [X20+16]
	050 Move X1, [X23]
	051 Move X21, X0
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move X0, X21
	062 Move W2, W31
	063 Call 0x1C5D788
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Add X8, X8, X9
	066 Add X0, X8, 312
	067 Move X8, [X0]
	068 Move X1, [X0+8]
	069 Move X0, X21
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X20, 0
	072 JumpIfEqual {233}
	073 Move X8, 0x476000
	074 Move X8, [X8+2304]
	075 Move W1, W0
	076 Move X0, X20
	077 Move X2, [X8]
	078 Call List`1<Object>.get_Item, X0, X1
	079 Compare X19, 0
	080 JumpIfEqual {233}
	081 Move X20, X0
	082 Move X0, X19
	083 Move X1, X31
	084 Call EventBase.get_target, X0
	085 Compare X0, 0
	086 JumpIfEqual {223}
	087 Move X24, 0x42F000
	088 Move X24, [X24+2200]
	089 Move X9, [X0]
	090 Move X22, X0
	091 Move X8, [X24]
	092 Move W11, [X9+304]
	093 Move W10, [X8+304]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X9, [X9+200]
	096 Add X9, X9, X10
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X21]
	100 Move X1, [X23]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move W2, 5
	111 Move X0, X21
	112 Call 0x1C5D788
	113 Move W9, [X10]
	114 Add W9, W9, 5
	115 Add X8, X8, W9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X21
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X8, 0x476000
	122 Move X8, [X8+2264]
	123 Move V8, V0
	124 Move V9, V1
	125 Move X0, [X8]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X22
	131 Move V0, V8
	132 Move V1, V9
	133 Call ClickDetector.ContainsPointer, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {223}
	138 Compare X20, 0
	139 JumpIfEqual {233}
	140 Move X21, [X20+16]
	141 Compare X21, 0
	142 JumpIfEqual {223}
	143 Move W8, [X20+48]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X19
	146 Move X1, X31
	147 Call EventBase.get_target, X0
	148 Compare X0, 0
	149 JumpIfEqual {155}
	150 Move X9, [X0]
	151 Move X8, [X24]
	152 Move W11, [X9+304]
	153 Move W10, [X8+304]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X1, X31
	156 Move X9, [X9+200]
	157 Add X9, X9, X10
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 NotImplemented "Instruction CSEL not yet implemented."
	161 Move X0, X21
	162 Move X2, X31
	163 Call VisualElement.FindCommonAncestor, X0, X1
	164 Compare X0, 0
	165 JumpIfEqual {223}
	166 Move X8, 0x476000
	167 Move X8, [X8+2312]
	168 Move X21, X0
	169 Move W20, [X20+48]
	170 Move X0, [X8]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X8, 0x42F000
	176 Move X8, [X8+2408]
	177 Move X9, [X19]
	178 Move W1, W20
	179 Move X2, X31
	180 Move X8, [X8]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 NotImplemented "Instruction CSEL not yet implemented."
	183 Call ClickEvent.GetPooled, X0, X1
	184 Move X19, X0
	185 Compare X0, 0
	186 JumpIfEqual {234}
	187 Move X0, X19
	188 Move X1, X21
	189 Move X2, X31
	190 Call EventBase.set_target, X0, X1
	191 Move X8, [X21]
	192 Move X9, [X8+408]
	193 Move X2, [X8+416]
	194 Move X0, X21
	195 Move X1, X19
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move X20, X31
	198 Move X10, 0x407000
	199 Move X8, [X19]
	200 Move X10, [X10+3584]
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Move X1, [X10]
	203 Compare X9, 0
	204 JumpIfEqual {211}
	205 Move X10, [X8+176]
	206 Add X10, X10, 8
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Subtract X9, X9, 1
	210 Add X10, X10, 16
	211 Move X0, X19
	212 Move W2, W31
	213 Call 0x1C5D788
	214 NotImplemented "Instruction LDRSW not yet implemented."
	215 Add X8, X8, X9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X1, [X0+8]
	219 Move X0, X19
	220 NotImplemented "Instruction BLR not yet implemented."
	221 Compare X20, 0
	222 JumpIfNotEqual {235}
	223 Move X20, [X31+64]
	224 Move X19, [X31+72]
	225 Move X22, [X31+48]
	226 Move X21, [X31+56]
	227 Move X24, [X31+32]
	228 Move X23, [X31+40]
	229 Move X30, [X31+16]
	230 Move D9, [X31+80]
	231 Move D8, [X31+88]
	232 Return 
	233 Call 0x1C17F20
	234 Call 0x1C17F20
	235 Move X0, X20
	236 Call 0x1C17F18
	237 Move X21, X0
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X0, X21
	240 Call 0x3EB2AD0
	241 Move X20, [X0]
	242 Call 0x3EB2AE0
	243 Compare X19, 0
	244 JumpIfNotEqual {198}
	245 Move X20, X31
	246 Move X21, X0
	247 Compare X19, 0
	248 JumpIfEqual {272}
	249 Move X10, 0x407000
	250 Move X8, [X19]
	251 Move X10, [X10+3584]
	252 NotImplemented "Instruction LDRH not yet implemented."
	253 Move X1, [X10]
	254 Compare X9, 0
	255 JumpIfEqual {262}
	256 Move X10, [X8+176]
	257 Add X10, X10, 8
	258 NotImplemented "Instruction LDUR not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Subtract X9, X9, 1
	261 Add X10, X10, 16
	262 Move X0, X19
	263 Move W2, W31
	264 Call 0x1C5D788
	265 NotImplemented "Instruction LDRSW not yet implemented."
	266 Add X8, X8, X9
	267 Add X0, X8, 312
	268 Move X8, [X0]
	269 Move X1, [X0+8]
	270 Move X0, X19
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Compare X20, 0
	273 JumpIfNotEqual {276}
	274 Move X0, X21
	275 Call 0x1D2D690
	276 Move X0, X20
	277 Call 0x1C17F18
	278 Call 0x1991590

Method: System.Void CancelClickTracking(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03CED470 STRB W8, [X22 + 0x750]
	0x03CED474 MOV X0, X19
	0x03CED478 MOV X1, X31
	0x03CED47C BL 0x3DB9E70
	0x03CED480 LDR X8, [X20]
	0x03CED484 MOV X20, X0
	0x03CED488 MOV X0, X8
	0x03CED48C BL 0x1C16F10
	0x03CED490 LDR X2, [X21]
	0x03CED494 MOV X1, X19
	0x03CED498 MOV X3, X31
	0x03CED49C MOV X21, X0
	0x03CED4A0 BL 0x2D0E824
	0x03CED4A4 CBZ X20, 0x3CED7F4
	0x03CED4A8 ADRP X8, 0x475000
	0x03CED4AC LDR X8, [X8 + 0x968]
	0x03CED4B0 LDRB W2, [X19 + 0x60]
	0x03CED4B4 ADRP X22, 0x475000
	0x03CED4B8 ADRP X23, 0x475000
	0x03CED4BC LDR X4, [X8]
	0x03CED4C0 LDR X22, [X22 + 0x9E8]
	0x03CED4C4 LDR X23, [X23 + 0x9B0]
	0x03CED4C8 MOV X0, X20
	0x03CED4CC MOV X1, X21
	0x03CED4D0 MOV W3, W31
	0x03CED4D4 BL 0x21A15DC
	0x03CED4D8 MOV X0, X19
	0x03CED4DC MOV X1, X31
	0x03CED4E0 BL 0x3DB9E70
	0x03CED4E4 LDR X8, [X22]
	0x03CED4E8 MOV X20, X0
	0x03CED4EC MOV X0, X8
	0x03CED4F0 BL 0x1C16F10
	0x03CED4F4 LDR X2, [X23]
	0x03CED4F8 MOV X1, X19
	0x03CED4FC MOV X3, X31
	0x03CED500 MOV X21, X0
	0x03CED504 BL 0x2D0E824
	0x03CED508 CBZ X20, 0x3CED7F4
	0x03CED50C ADRP X8, 0x475000
	0x03CED510 LDR X8, [X8 + 0x970]
	0x03CED514 LDRB W2, [X19 + 0x60]
	0x03CED518 ADRP X22, 0x475000
	0x03CED51C ADRP X23, 0x475000
	0x03CED520 LDR X4, [X8]
	0x03CED524 LDR X22, [X22 + 0x9F0]
	0x03CED528 LDR X23, [X23 + 0x9B8]
	0x03CED52C MOV X0, X20
	0x03CED530 MOV X1, X21
	0x03CED534 MOV W3, W31
	0x03CED538 BL 0x21A15DC
	0x03CED53C MOV X0, X19
	0x03CED540 MOV X1, X31
	0x03CED544 BL 0x3DB9E70
	0x03CED548 LDR X8, [X22]
	0x03CED54C MOV X20, X0
	0x03CED550 MOV X0, X8
	0x03CED554 BL 0x1C16F10
	0x03CED558 LDR X2, [X23]
	0x03CED55C MOV X1, X19
	0x03CED560 MOV X3, X31
	0x03CED564 MOV X21, X0
	0x03CED568 BL 0x2D0E824

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6FB000
	007 Move X21, 0x430000
	008 Move W8, [X22+1861]
	009 Move X21, [X21+3704]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x430000
	017 Move X0, [X0+3704]
	018 Call 0x1C17CF4
	019 Move X0, 0x476000
	020 Move X0, [X0+2304]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1861], W8
	024 Move X1, [X21]
	025 Move X0, X20
	026 Call 0x1C17E00
	027 Compare X0, 0
	028 JumpIfEqual {45}
	029 Move X8, [X0]
	030 Move X19, [X19+16]
	031 Move X1, [X21]
	032 Move X20, X0
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move X0, X20
	043 Move W2, W31
	044 Call 0x1C5D788
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X0, X20
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Compare X19, 0
	059 JumpIfEqual {75}
	060 Move X8, 0x476000
	061 Move X8, [X8+2304]
	062 Move W1, W0
	063 Move X0, X19
	064 Move X2, [X8]
	065 Call List`1<Object>.get_Item, X0, X1
	066 Compare X0, 0
	067 JumpIfEqual {75}
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Call ButtonClickStatus.Reset, X0
	074 Return 
	075 Call 0x1C17F20

Method: System.Void ProcessEvent(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03CED56C CBZ X20, 0x3CED7F4
	0x03CED570 ADRP X8, 0x475000
	0x03CED574 LDR X8, [X8 + 0x978]
	0x03CED578 ADRP X22, 0x475000
	0x03CED57C ADRP X23, 0x475000
	0x03CED580 MOVZ W2, 0x1
	0x03CED584 LDR X4, [X8]
	0x03CED588 LDR X22, [X22 + 0x9F8]
	0x03CED58C LDR X23, [X23 + 0x9A8]
	0x03CED590 MOV X0, X20
	0x03CED594 MOV X1, X21
	0x03CED598 MOV W3, W31
	0x03CED59C BL 0x21A15DC
	0x03CED5A0 MOV X0, X19
	0x03CED5A4 MOV X1, X31
	0x03CED5A8 BL 0x3DB9E70
	0x03CED5AC LDR X8, [X22]
	0x03CED5B0 MOV X20, X0
	0x03CED5B4 MOV X0, X8
	0x03CED5B8 BL 0x1C16F10
	0x03CED5BC LDR X2, [X23]
	0x03CED5C0 MOV X1, X19
	0x03CED5C4 MOV X3, X31
	0x03CED5C8 MOV X21, X0
	0x03CED5CC BL 0x2D0E824
	0x03CED5D0 CBZ X20, 0x3CED7F4
	0x03CED5D4 ADRP X8, 0x475000
	0x03CED5D8 LDR X8, [X8 + 0x960]
	0x03CED5DC ADRP X22, 0x430000
	0x03CED5E0 ADRP X23, 0x475000
	0x03CED5E4 MOVZ W2, 0x1
	0x03CED5E8 LDR X4, [X8]
	0x03CED5EC LDR X22, [X22 + 0x780]
	0x03CED5F0 LDR X23, [X23 + 0x9D0]
	0x03CED5F4 MOV X0, X20
	0x03CED5F8 MOV X1, X21
	0x03CED5FC MOV W3, W31
	0x03CED600 BL 0x21A15DC
	0x03CED604 MOV X0, X19
	0x03CED608 MOV X1, X31
	0x03CED60C BL 0x3DB9E70
	0x03CED610 LDR X8, [X22]
	0x03CED614 MOV X20, X0
	0x03CED618 MOV X0, X8
	0x03CED61C BL 0x1C16F10
	0x03CED620 LDR X2, [X23]
	0x03CED624 MOV X1, X19
	0x03CED628 MOV X3, X31
	0x03CED62C MOV X21, X0
	0x03CED630 BL 0x2D0E824
	0x03CED634 CBZ X20, 0x3CED7F4
	0x03CED638 ADRP X8, 0x475000
	0x03CED63C LDR X8, [X8 + 0x990]
	0x03CED640 LDRB W2, [X19 + 0x60]
	0x03CED644 ADRP X22, 0x431000
	0x03CED648 ADRP X23, 0x475000
	0x03CED64C LDR X4, [X8]
	0x03CED650 LDR X22, [X22 + 0xA0]
	0x03CED654 LDR X23, [X23 + 0x9D8]
	0x03CED658 MOV X0, X20
	0x03CED65C MOV X1, X21
	0x03CED660 MOV W3, W31
	0x03CED664 BL 0x21A15DC
	0x03CED668 MOV X0, X19
	0x03CED66C MOV X1, X31
	0x03CED670 BL 0x3DB9E70
	0x03CED674 LDR X8, [X22]
	0x03CED678 MOV X20, X0
	0x03CED67C MOV X0, X8
	0x03CED680 BL 0x1C16F10
	0x03CED684 LDR X2, [X23]
	0x03CED688 MOV X1, X19
	0x03CED68C MOV X3, X31
	0x03CED690 MOV X21, X0
	0x03CED694 BL 0x2D0E824
	0x03CED698 CBZ X20, 0x3CED7F4
	0x03CED69C ADRP X8, 0x475000
	0x03CED6A0 LDR X8, [X8 + 0x998]
	0x03CED6A4 LDRB W2, [X19 + 0x60]
	0x03CED6A8 ADRP X22, 0x430000
	0x03CED6AC ADRP X23, 0x475000
	0x03CED6B0 LDR X4, [X8]
	0x03CED6B4 LDR X22, [X22 + 0x788]
	0x03CED6B8 LDR X23, [X23 + 0x9E0]
	0x03CED6BC MOV X0, X20
	0x03CED6C0 MOV X1, X21
	0x03CED6C4 MOV W3, W31
	0x03CED6C8 BL 0x21A15DC
	0x03CED6CC MOV X0, X19
	0x03CED6D0 MOV X1, X31
	0x03CED6D4 BL 0x3DB9E70
	0x03CED6D8 LDR X8, [X22]
	0x03CED6DC MOV X20, X0
	0x03CED6E0 MOV X0, X8
	0x03CED6E4 BL 0x1C16F10
	0x03CED6E8 LDR X2, [X23]
	0x03CED6EC MOV X1, X19
	0x03CED6F0 MOV X3, X31
	0x03CED6F4 MOV X21, X0
	0x03CED6F8 BL 0x2D0E824
	0x03CED6FC CBZ X20, 0x3CED7F4
	0x03CED700 ADRP X8, 0x475000
	0x03CED704 LDR X8, [X8 + 0x9A0]
	0x03CED708 ADRP X22, 0x475000
	0x03CED70C ADRP X23, 0x475000
	0x03CED710 MOVZ W2, 0x1
	0x03CED714 LDR X4, [X8]
	0x03CED718 LDR X22, [X22 + 0xA08]
	0x03CED71C LDR X23, [X23 + 0x9C0]
	0x03CED720 MOV X0, X20
	0x03CED724 MOV X1, X21
	0x03CED728 MOV W3, W31
	0x03CED72C BL 0x21A15DC
	0x03CED730 MOV X0, X19
	0x03CED734 MOV X1, X31
	0x03CED738 BL 0x3DB9E70
	0x03CED73C LDR X8, [X22]
	0x03CED740 MOV X20, X0
	0x03CED744 MOV X0, X8
	0x03CED748 BL 0x1C16F10
	0x03CED74C LDR X2, [X23]
	0x03CED750 MOV X1, X19
	0x03CED754 MOV X3, X31
	0x03CED758 MOV X21, X0
	0x03CED75C BL 0x2D0E824
	0x03CED760 CBZ X20, 0x3CED7F4
	0x03CED764 ADRP X8, 0x475000
	0x03CED768 LDR X8, [X8 + 0x980]
	0x03CED76C ADRP X22, 0x475000
	0x03CED770 ADRP X23, 0x475000
	0x03CED774 MOVZ W2, 0x1
	0x03CED778 LDR X4, [X8]
	0x03CED77C LDR X22, [X22 + 0xA00]
	0x03CED780 LDR X23, [X23 + 0x9C8]
	0x03CED784 MOV X0, X20
	0x03CED788 MOV X1, X21
	0x03CED78C MOV W3, W31
	0x03CED790 BL 0x21A15DC
	0x03CED794 MOV X0, X19
	0x03CED798 MOV X1, X31
	0x03CED79C BL 0x3DB9E70
	0x03CED7A0 LDR X8, [X22]
	0x03CED7A4 MOV X20, X0
	0x03CED7A8 MOV X0, X8
	0x03CED7AC BL 0x1C16F10
	0x03CED7B0 LDR X2, [X23]
	0x03CED7B4 MOV X1, X19
	0x03CED7B8 MOV X3, X31
	0x03CED7BC MOV X21, X0
	0x03CED7C0 BL 0x2D0E824
	0x03CED7C4 CBZ X20, 0x3CED7F4
	0x03CED7C8 ADRP X8, 0x475000
	0x03CED7CC LDR X8, [X8 + 0x988]
	0x03CED7D0 MOV X0, X20
	0x03CED7D4 MOV X1, X21
	0x03CED7D8 LDP X20, X19, [X31 + 0x20]
	0x03CED7DC LDR X4, [X8]
	0x03CED7E0 LDP X22, X21, [X31 + 0x10]
	0x03CED7E4 MOVZ W2, 0x1
	0x03CED7E8 MOV W3, W31
	0x03CED7EC LDP X30, X23, [X31], #0x30
	0x03CED7F0 B 0x21A15DC
	0x03CED7F4 BL 0x1C16F20
	0x03CED7F8 STP X30, X23, [X31 - 0x30]!
	0x03CED7FC STP X22, X21, [X31 + 0x10]
	0x03CED800 STP X20, X19, [X31 + 0x20]
	0x03CED804 ADRP X22, 0x6FA000
	0x03CED808 ADRP X20, 0x431000
	0x03CED80C ADRP X21, 0x475000
	0x03CED810 LDRB W8, [X22 + 0x751]
	0x03CED814 LDR X20, [X20 + 0xB0]
	0x03CED818 LDR X21, [X21 + 0x958]
	0x03CED81C MOV X19, X0
	0x03CED820 TBNZ X8, 0x0, 0x3CED970
	0x03CED824 ADRP X0, 0x475000
	0x03CED828 LDR X0, [X0 + 0xA10]
	0x03CED82C BL 0x1C16CF4
	0x03CED830 ADRP X0, 0x475000
	0x03CED834 LDR X0, [X0 + 0xA18]
	0x03CED838 BL 0x1C16CF4
	0x03CED83C ADRP X0, 0x475000
	0x03CED840 LDR X0, [X0 + 0xA20]
	0x03CED844 BL 0x1C16CF4
	0x03CED848 ADRP X0, 0x475000
	0x03CED84C LDR X0, [X0 + 0xA28]
	0x03CED850 BL 0x1C16CF4
	0x03CED854 ADRP X0, 0x475000
	0x03CED858 LDR X0, [X0 + 0xA30]
	0x03CED85C BL 0x1C16CF4
	0x03CED860 ADRP X0, 0x475000
	0x03CED864 LDR X0, [X0 + 0xA38]
	0x03CED868 BL 0x1C16CF4
	0x03CED86C ADRP X0, 0x430000
	0x03CED870 LDR X0, [X0 + 0x790]
	0x03CED874 BL 0x1C16CF4
	0x03CED878 ADRP X0, 0x431000
	0x03CED87C LDR X0, [X0 + 0xD28]
	0x03CED880 BL 0x1C16CF4
	0x03CED884 ADRP X0, 0x430000
	0x03CED888 LDR X0, [X0 + 0x798]
	0x03CED88C BL 0x1C16CF4
	0x03CED890 ADRP X0, 0x475000
	0x03CED894 LDR X0, [X0 + 0x9A8]
	0x03CED898 BL 0x1C16CF4
	0x03CED89C ADRP X0, 0x475000
	0x03CED8A0 LDR X0, [X0 + 0x958]
	0x03CED8A4 BL 0x1C16CF4
	0x03CED8A8 ADRP X0, 0x475000
	0x03CED8AC LDR X0, [X0 + 0x9B0]
	0x03CED8B0 BL 0x1C16CF4
	0x03CED8B4 ADRP X0, 0x475000
	0x03CED8B8 LDR X0, [X0 + 0x9B8]
	0x03CED8BC BL 0x1C16CF4
	0x03CED8C0 ADRP X0, 0x475000
	0x03CED8C4 LDR X0, [X0 + 0x9C0]
	0x03CED8C8 BL 0x1C16CF4
	0x03CED8CC ADRP X0, 0x475000
	0x03CED8D0 LDR X0, [X0 + 0x9C8]
	0x03CED8D4 BL 0x1C16CF4
	0x03CED8D8 ADRP X0, 0x475000
	0x03CED8DC LDR X0, [X0 + 0x9D0]
	0x03CED8E0 BL 0x1C16CF4
	0x03CED8E4 ADRP X0, 0x475000
	0x03CED8E8 LDR X0, [X0 + 0x9D8]
	0x03CED8EC BL 0x1C16CF4
	0x03CED8F0 ADRP X0, 0x475000
	0x03CED8F4 LDR X0, [X0 + 0x9E0]
	0x03CED8F8 BL 0x1C16CF4
	0x03CED8FC ADRP X0, 0x475000
	0x03CED900 LDR X0, [X0 + 0x9E8]
	0x03CED904 BL 0x1C16CF4
	0x03CED908 ADRP X0, 0x475000
	0x03CED90C LDR X0, [X0 + 0x9F0]
	0x03CED910 BL 0x1C16CF4
	0x03CED914 ADRP X0, 0x475000
	0x03CED918 LDR X0, [X0 + 0x9F8]
	0x03CED91C BL 0x1C16CF4
	0x03CED920 ADRP X0, 0x475000
	0x03CED924 LDR X0, [X0 + 0xA00]
	0x03CED928 BL 0x1C16CF4
	0x03CED92C ADRP X0, 0x431000
	0x03CED930 LDR X0, [X0 + 0xA0]
	0x03CED934 BL 0x1C16CF4
	0x03CED938 ADRP X0, 0x430000
	0x03CED93C LDR X0, [X0 + 0x780]
	0x03CED940 BL 0x1C16CF4
	0x03CED944 ADRP X0, 0x475000
	0x03CED948 LDR X0, [X0 + 0xA08]
	0x03CED94C BL 0x1C16CF4
	0x03CED950 ADRP X0, 0x430000
	0x03CED954 LDR X0, [X0 + 0x788]
	0x03CED958 BL 0x1C16CF4
	0x03CED95C ADRP X0, 0x431000
	0x03CED960 LDR X0, [X0 + 0xB0]
	0x03CED964 BL 0x1C16CF4
	0x03CED968 MOVZ W8, 0x1
	0x03CED96C STRB W8, [X22 + 0x751]
	0x03CED970 MOV X0, X19
	0x03CED974 MOV X1, X31
	0x03CED978 BL 0x3DB9E70
	0x03CED97C LDR X8, [X20]
	0x03CED980 MOV X20, X0
	0x03CED984 MOV X0, X8
	0x03CED988 BL 0x1C16F10
	0x03CED98C LDR X2, [X21]
	0x03CED990 MOV X1, X19
	0x03CED994 MOV X3, X31
	0x03CED998 MOV X21, X0
	0x03CED99C BL 0x2D0E824
	0x03CED9A0 CBZ X20, 0x3CEDCCC
	0x03CED9A4 ADRP X8, 0x475000
	0x03CED9A8 LDR X8, [X8 + 0xA18]
	0x03CED9AC ADRP X22, 0x475000
	0x03CED9B0 ADRP X23, 0x475000
	0x03CED9B4 MOV X0, X20
	0x03CED9B8 LDR X3, [X8]
	0x03CED9BC LDR X22, [X22 + 0x9E8]
	0x03CED9C0 LDR X23, [X23 + 0x9B0]
	0x03CED9C4 MOV X1, X21
	0x03CED9C8 MOV W2, W31
	0x03CED9CC BL 0x21A18B4
	0x03CED9D0 MOV X0, X19
	0x03CED9D4 MOV X1, X31
	0x03CED9D8 BL 0x3DB9E70
	0x03CED9DC LDR X8, [X22]
	0x03CED9E0 MOV X20, X0
	0x03CED9E4 MOV X0, X8
	0x03CED9E8 BL 0x1C16F10
	0x03CED9EC LDR X2, [X23]
	0x03CED9F0 MOV X1, X19
	0x03CED9F4 MOV X3, X31
	0x03CED9F8 MOV X21, X0
	0x03CED9FC BL 0x2D0E824
	0x03CEDA00 CBZ X20, 0x3CEDCCC
	0x03CEDA04 ADRP X8, 0x475000
	0x03CEDA08 LDR X8, [X8 + 0xA20]
	0x03CEDA0C ADRP X22, 0x475000
	0x03CEDA10 ADRP X23, 0x475000
	0x03CEDA14 MOV X0, X20
	0x03CEDA18 LDR X3, [X8]
	0x03CEDA1C LDR X22, [X22 + 0x9F0]
	0x03CEDA20 LDR X23, [X23 + 0x9B8]
	0x03CEDA24 MOV X1, X21
	0x03CEDA28 MOV W2, W31
	0x03CEDA2C BL 0x21A18B4
	0x03CEDA30 MOV X0, X19
	0x03CEDA34 MOV X1, X31
	0x03CEDA38 BL 0x3DB9E70
	0x03CEDA3C LDR X8, [X22]
	0x03CEDA40 MOV X20, X0
	0x03CEDA44 MOV X0, X8
	0x03CEDA48 BL 0x1C16F10
	0x03CEDA4C LDR X2, [X23]
	0x03CEDA50 MOV X1, X19
	0x03CEDA54 MOV X3, X31
	0x03CEDA58 MOV X21, X0
	0x03CEDA5C BL 0x2D0E824
	0x03CEDA60 CBZ X20, 0x3CEDCCC
	0x03CEDA64 ADRP X8, 0x475000
	0x03CEDA68 LDR X8, [X8 + 0xA28]
	0x03CEDA6C ADRP X22, 0x475000
	0x03CEDA70 ADRP X23, 0x475000
	0x03CEDA74 MOV X0, X20
	0x03CEDA78 LDR X3, [X8]
	0x03CEDA7C LDR X22, [X22 + 0x9F8]
	0x03CEDA80 LDR X23, [X23 + 0x9A8]
	0x03CEDA84 MOV X1, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6FB000
	009 Move X23, 0x430000
	010 Move W8, [X21+1862]
	011 Move X23, [X23+3704]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {50}
	018 Move X0, 0x42F000
	019 Move X0, [X0+2360]
	020 Call 0x1C17CF4
	021 Move X0, 0x476000
	022 Move X0, [X0+2320]
	023 Call 0x1C17CF4
	024 Move X0, 0x432000
	025 Move X0, [X0+512]
	026 Call 0x1C17CF4
	027 Move X0, 0x42F000
	028 Move X0, [X0+2368]
	029 Call 0x1C17CF4
	030 Move X0, 0x42F000
	031 Move X0, [X0+2376]
	032 Call 0x1C17CF4
	033 Move X0, 0x432000
	034 Move X0, [X0+520]
	035 Call 0x1C17CF4
	036 Move X0, 0x42F000
	037 Move X0, [X0+2384]
	038 Call 0x1C17CF4
	039 Move X0, 0x476000
	040 Move X0, [X0+2328]
	041 Call 0x1C17CF4
	042 Move X0, 0x430000
	043 Move X0, [X0+3704]
	044 Call 0x1C17CF4
	045 Move X0, 0x476000
	046 Move X0, [X0+2304]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+1862], W8
	050 Move X1, [X23]
	051 Move X0, X19
	052 Call 0x1C17E00
	053 Compare X0, 0
	054 JumpIfEqual {340}
	055 Compare X19, 0
	056 JumpIfEqual {359}
	057 Move X8, [X19]
	058 Move X22, 0x42F000
	059 Move X24, 0x42F000
	060 Move X21, X0
	061 Move X9, [X8+392]
	062 Move X1, [X8+400]
	063 Move X22, [X22+2384]
	064 Move X24, [X24+2360]
	065 Move X0, X19
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X22]
	068 Move X22, X0
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X0, [X24]
	075 Call 0x2D0E5C8
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X21]
	078 Move X1, [X23]
	079 NotImplemented "Instruction LDRH not yet implemented."
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move W2, 3
	089 Move X0, X21
	090 Call 0x1C5D788
	091 Move W9, [X10]
	092 Add W9, W9, 3
	093 Add X8, X8, W9
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X1, [X0+8]
	097 Move X0, X21
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Compare W0, 0
	100 JumpIfEqual {247}
	101 Move X8, [X19]
	102 Move X22, 0x432000
	103 Move X24, 0x432000
	104 Move X0, X19
	105 Move X9, [X8+392]
	106 Move X1, [X8+400]
	107 Move X22, [X22+520]
	108 Move X24, [X24+512]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X8, [X22]
	111 Move X22, X0
	112 Move W9, [X8+224]
	113 Compare W9, 0
	114 JumpIfNotEqual {117}
	115 Move X0, X8
	116 Call 0x1C17DFC
	117 Move X0, [X24]
	118 Call 0x2D0E5C8
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X8, [X21]
	121 Move X1, [X23]
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move W2, 3
	132 Move X0, X21
	133 Call 0x1C5D788
	134 Move X8, [X19]
	135 Move X0, X19
	136 Move X9, [X8+392]
	137 Move X1, [X8+400]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X8, 0x476000
	140 Move X8, [X8+2328]
	141 Move X22, X0
	142 Move X8, [X8]
	143 Move W9, [X8+224]
	144 Compare W9, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X8
	147 Call 0x1C17DFC
	148 Move X8, 0x476000
	149 Move X8, [X8+2320]
	150 Move X0, [X8]
	151 Call 0x2D0E5C8
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, X20
	154 Move X1, X19
	155 Move X20, [X31+48]
	156 Move X19, [X31+56]
	157 Move X22, [X31+32]
	158 Move X21, [X31+40]
	159 Move X24, [X31+16]
	160 Move X23, [X31+24]
	161 Move X30, [X31+64]
	162 Call ClickDetector.CancelClickTracking, X0, X1
	163 Return 
	164 Move X8, [X19]
	165 Move X0, X19
	166 Move X9, [X8+392]
	167 Move X1, [X8+400]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move X8, 0x42F000
	170 Move X8, [X8+2376]
	171 Move X22, X0
	172 Move X8, [X8]
	173 Move W9, [X8+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X8
	177 Call 0x1C17DFC
	178 Move X8, 0x42F000
	179 Move X8, [X8+2368]
	180 Move X0, [X8]
	181 Call 0x2D0E5C8
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X8, [X21]
	184 Move X1, [X23]
	185 NotImplemented "Instruction LDRH not yet implemented."
	186 Compare X9, 0
	187 JumpIfEqual {194}
	188 Move X10, [X8+176]
	189 Add X10, X10, 8
	190 NotImplemented "Instruction LDUR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Subtract X9, X9, 1
	193 Add X10, X10, 16
	194 Move W2, 3
	195 Move X0, X21
	196 Call 0x1C5D788
	197 Move W9, [X10]
	198 Add W9, W9, 3
	199 Add X8, X8, W9
	200 Add X0, X8, 312
	201 Move X8, [X0]
	202 Move X1, [X0+8]
	203 Move X0, X21
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Compare W0, 0
	206 JumpIfNotEqual {233}
	207 Move X8, [X21]
	208 Move X1, [X23]
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Compare X9, 0
	211 JumpIfEqual {218}
	212 Move X10, [X8+176]
	213 Add X10, X10, 8
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Subtract X9, X9, 1
	217 Add X10, X10, 16
	218 Move W2, 4
	219 Move X0, X21
	220 Call 0x1C5D788
	221 Move W9, [X10]
	222 Add W9, W9, 4
	223 Add X8, X8, W9
	224 Add X0, X8, 312
	225 Move X8, [X0]
	226 Move X1, [X0+8]
	227 Move X0, X21
	228 NotImplemented "Instruction BLR not yet implemented."
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfEqual {247}
	233 Move X8, [X21]
	234 Move X1, [X23]
	235 NotImplemented "Instruction LDRH not yet implemented."
	236 Compare X9, 0
	237 JumpIfEqual {244}
	238 Move X10, [X8+176]
	239 Add X10, X10, 8
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Subtract X9, X9, 1
	243 Add X10, X10, 16
	244 Move W2, 3
	245 Move X0, X21
	246 Call 0x1C5D788
	247 Move X0, X20
	248 Move X1, X19
	249 Move X20, [X31+48]
	250 Move X19, [X31+56]
	251 Move X22, [X31+32]
	252 Move X21, [X31+40]
	253 Move X24, [X31+16]
	254 Move X23, [X31+24]
	255 Move X30, [X31+64]
	256 Call ClickDetector.StartClickTracking, X0, X1
	257 Return 
	258 Move W9, [X10]
	259 Add W9, W9, 3
	260 Add X8, X8, W9
	261 Add X0, X8, 312
	262 Move X8, [X0]
	263 Move X1, [X0+8]
	264 Move X0, X21
	265 NotImplemented "Instruction BLR not yet implemented."
	266 Compare W0, 0
	267 JumpIfNotEqual {294}
	268 Move X8, [X21]
	269 Move X1, [X23]
	270 NotImplemented "Instruction LDRH not yet implemented."
	271 Compare X9, 0
	272 JumpIfEqual {279}
	273 Move X10, [X8+176]
	274 Add X10, X10, 8
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Subtract X9, X9, 1
	278 Add X10, X10, 16
	279 Move W2, 4
	280 Move X0, X21
	281 Call 0x1C5D788
	282 Move W9, [X10]
	283 Add W9, W9, 4
	284 Add X8, X8, W9
	285 Add X0, X8, 312
	286 Move X8, [X0]
	287 Move X1, [X0+8]
	288 Move X0, X21
	289 NotImplemented "Instruction BLR not yet implemented."
	290 Move TEMP, X0
	291 And TEMP, TEMP, 1
	292 Compare TEMP, 1
	293 JumpIfNotEqual {348}
	294 Move X8, [X21]
	295 Move X19, [X20+16]
	296 Move X1, [X23]
	297 NotImplemented "Instruction LDRH not yet implemented."
	298 Compare X9, 0
	299 JumpIfEqual {306}
	300 Move X10, [X8+176]
	301 Add X10, X10, 8
	302 NotImplemented "Instruction LDUR not yet implemented."
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Subtract X9, X9, 1
	305 Add X10, X10, 16
	306 Move X0, X21
	307 Move W2, W31
	308 Call 0x1C5D788
	309 NotImplemented "Instruction LDRSW not yet implemented."
	310 Add X8, X8, X9
	311 Add X0, X8, 312
	312 Move X8, [X0]
	313 Move X1, [X0+8]
	314 Move X0, X21
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Compare X19, 0
	317 JumpIfEqual {359}
	318 Move X8, 0x476000
	319 Move X8, [X8+2304]
	320 Move W1, W0
	321 Move X0, X19
	322 Move X2, [X8]
	323 Call List`1<Object>.get_Item, X0, X1
	324 Compare X0, 0
	325 JumpIfEqual {359}
	326 Move X8, [X0+16]
	327 Compare X8, 0
	328 JumpIfEqual {340}
	329 Move [X0+40], X31
	330 Move W9, [X10]
	331 Add W9, W9, 3
	332 Add X8, X8, W9
	333 Add X0, X8, 312
	334 Move X8, [X0]
	335 Move X1, [X0+8]
	336 Move X0, X21
	337 NotImplemented "Instruction BLR not yet implemented."
	338 Compare W0, 0
	339 JumpIfEqual {348}
	340 Move X20, [X31+48]
	341 Move X19, [X31+56]
	342 Move X22, [X31+32]
	343 Move X21, [X31+40]
	344 Move X24, [X31+16]
	345 Move X23, [X31+24]
	346 Move X30, [X31+64]
	347 Return 
	348 Move X0, X20
	349 Move X1, X19
	350 Move X20, [X31+48]
	351 Move X19, [X31+56]
	352 Move X22, [X31+32]
	353 Move X21, [X31+40]
	354 Move X24, [X31+16]
	355 Move X23, [X31+24]
	356 Move X30, [X31+64]
	357 Call ClickDetector.SendClickEvent, X0, X1
	358 Return 
	359 Call 0x1C17F20

Method: System.Boolean ContainsPointer(UnityEngine.UIElements.VisualElement element, UnityEngine.Vector2 position)

Disassembly:
	0x03CED330 BL 0x1C16CF4
	0x03CED334 ADRP X0, 0x475000
	0x03CED338 LDR X0, [X0 + 0x968]
	0x03CED33C BL 0x1C16CF4
	0x03CED340 ADRP X0, 0x475000
	0x03CED344 LDR X0, [X0 + 0x970]
	0x03CED348 BL 0x1C16CF4
	0x03CED34C ADRP X0, 0x475000
	0x03CED350 LDR X0, [X0 + 0x978]
	0x03CED354 BL 0x1C16CF4
	0x03CED358 ADRP X0, 0x475000
	0x03CED35C LDR X0, [X0 + 0x980]
	0x03CED360 BL 0x1C16CF4
	0x03CED364 ADRP X0, 0x475000
	0x03CED368 LDR X0, [X0 + 0x988]
	0x03CED36C BL 0x1C16CF4
	0x03CED370 ADRP X0, 0x475000
	0x03CED374 LDR X0, [X0 + 0x990]
	0x03CED378 BL 0x1C16CF4
	0x03CED37C ADRP X0, 0x475000
	0x03CED380 LDR X0, [X0 + 0x998]
	0x03CED384 BL 0x1C16CF4
	0x03CED388 ADRP X0, 0x475000
	0x03CED38C LDR X0, [X0 + 0x9A0]
	0x03CED390 BL 0x1C16CF4
	0x03CED394 ADRP X0, 0x475000
	0x03CED398 LDR X0, [X0 + 0x9A8]
	0x03CED39C BL 0x1C16CF4
	0x03CED3A0 ADRP X0, 0x475000
	0x03CED3A4 LDR X0, [X0 + 0x958]
	0x03CED3A8 BL 0x1C16CF4
	0x03CED3AC ADRP X0, 0x475000
	0x03CED3B0 LDR X0, [X0 + 0x9B0]
	0x03CED3B4 BL 0x1C16CF4
	0x03CED3B8 ADRP X0, 0x475000
	0x03CED3BC LDR X0, [X0 + 0x9B8]
	0x03CED3C0 BL 0x1C16CF4
	0x03CED3C4 ADRP X0, 0x475000
	0x03CED3C8 LDR X0, [X0 + 0x9C0]
	0x03CED3CC BL 0x1C16CF4
	0x03CED3D0 ADRP X0, 0x475000
	0x03CED3D4 LDR X0, [X0 + 0x9C8]
	0x03CED3D8 BL 0x1C16CF4
	0x03CED3DC ADRP X0, 0x475000
	0x03CED3E0 LDR X0, [X0 + 0x9D0]
	0x03CED3E4 BL 0x1C16CF4
	0x03CED3E8 ADRP X0, 0x475000
	0x03CED3EC LDR X0, [X0 + 0x9D8]
	0x03CED3F0 BL 0x1C16CF4
	0x03CED3F4 ADRP X0, 0x475000
	0x03CED3F8 LDR X0, [X0 + 0x9E0]
	0x03CED3FC BL 0x1C16CF4
	0x03CED400 ADRP X0, 0x475000
	0x03CED404 LDR X0, [X0 + 0x9E8]
	0x03CED408 BL 0x1C16CF4
	0x03CED40C ADRP X0, 0x475000
	0x03CED410 LDR X0, [X0 + 0x9F0]
	0x03CED414 BL 0x1C16CF4
	0x03CED418 ADRP X0, 0x475000
	0x03CED41C LDR X0, [X0 + 0x9F8]
	0x03CED420 BL 0x1C16CF4
	0x03CED424 ADRP X0, 0x475000
	0x03CED428 LDR X0, [X0 + 0xA00]
	0x03CED42C BL 0x1C16CF4
	0x03CED430 ADRP X0, 0x431000
	0x03CED434 LDR X0, [X0 + 0xA0]
	0x03CED438 BL 0x1C16CF4
	0x03CED43C ADRP X0, 0x430000
	0x03CED440 LDR X0, [X0 + 0x780]
	0x03CED444 BL 0x1C16CF4
	0x03CED448 ADRP X0, 0x475000
	0x03CED44C LDR X0, [X0 + 0xA08]
	0x03CED450 BL 0x1C16CF4
	0x03CED454 ADRP X0, 0x430000
	0x03CED458 LDR X0, [X0 + 0x788]
	0x03CED45C BL 0x1C16CF4
	0x03CED460 ADRP X0, 0x431000
	0x03CED464 LDR X0, [X0 + 0xB0]
	0x03CED468 BL 0x1C16CF4
	0x03CED46C MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6FB000
	007 Move W8, [X20+1863]
	008 Move V8, V1
	009 Move V9, V0
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x430000
	016 Move X0, [X0+3712]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1863], W8
	020 Compare X19, 0
	021 JumpIfEqual {87}
	022 Move X0, X19
	023 Move X1, X31
	024 Call VisualElement.get_worldBound, X0
	025 Add S3, S1, S3
	026 NotImplemented "Instruction FCMP not yet implemented."
	027 Move W0, W31
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 Add S0, S0, S2
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 Move X0, X19
	033 Move X1, X31
	034 Call VisualElement.get_panel, X0
	035 Compare X0, 0
	036 JumpIfEqual {81}
	037 Move X0, X19
	038 Move X1, X31
	039 Call VisualElement.get_panel, X0
	040 Compare X0, 0
	041 JumpIfEqual {87}
	042 Move X10, 0x430000
	043 Move X8, [X0]
	044 Move X10, [X10+3712]
	045 Move X20, X0
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X10]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 4
	057 Move X0, X20
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 4
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X20
	066 Move V0, V9
	067 Move V1, V8
	068 NotImplemented "Instruction BLR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X1, X0
	071 Move X0, X19
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X30, [X31+16]
	075 Move X2, X31
	076 Move D9, [X31+48]
	077 Move D8, [X31+56]
	078 Call VisualElement.Contains, X0, X1
	079 Return X0
	080 Move W0, 1
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X30, [X31+16]
	084 Move D9, [X31+48]
	085 Move D8, [X31+56]
	086 Return X0
	087 Call 0x1C17F20

Method: System.Void Cleanup(System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> elements)

Disassembly:
	0x03CEDA88 MOV W2, W31
	0x03CEDA8C BL 0x21A18B4
	0x03CEDA90 MOV X0, X19
	0x03CEDA94 MOV X1, X31
	0x03CEDA98 BL 0x3DB9E70
	0x03CEDA9C LDR X8, [X22]
	0x03CEDAA0 MOV X20, X0
	0x03CEDAA4 MOV X0, X8
	0x03CEDAA8 BL 0x1C16F10
	0x03CEDAAC LDR X2, [X23]
	0x03CEDAB0 MOV X1, X19
	0x03CEDAB4 MOV X3, X31
	0x03CEDAB8 MOV X21, X0
	0x03CEDABC BL 0x2D0E824
	0x03CEDAC0 CBZ X20, 0x3CEDCCC
	0x03CEDAC4 ADRP X8, 0x475000
	0x03CEDAC8 LDR X8, [X8 + 0xA10]
	0x03CEDACC ADRP X22, 0x430000
	0x03CEDAD0 ADRP X23, 0x475000
	0x03CEDAD4 MOV X0, X20
	0x03CEDAD8 LDR X3, [X8]
	0x03CEDADC LDR X22, [X22 + 0x780]
	0x03CEDAE0 LDR X23, [X23 + 0x9D0]
	0x03CEDAE4 MOV X1, X21
	0x03CEDAE8 MOV W2, W31
	0x03CEDAEC BL 0x21A18B4
	0x03CEDAF0 MOV X0, X19
	0x03CEDAF4 MOV X1, X31
	0x03CEDAF8 BL 0x3DB9E70
	0x03CEDAFC LDR X8, [X22]
	0x03CEDB00 MOV X20, X0
	0x03CEDB04 MOV X0, X8
	0x03CEDB08 BL 0x1C16F10
	0x03CEDB0C LDR X2, [X23]
	0x03CEDB10 MOV X1, X19
	0x03CEDB14 MOV X3, X31
	0x03CEDB18 MOV X21, X0
	0x03CEDB1C BL 0x2D0E824
	0x03CEDB20 CBZ X20, 0x3CEDCCC
	0x03CEDB24 ADRP X8, 0x430000
	0x03CEDB28 LDR X8, [X8 + 0x790]
	0x03CEDB2C ADRP X22, 0x431000
	0x03CEDB30 ADRP X23, 0x475000
	0x03CEDB34 MOV X0, X20
	0x03CEDB38 LDR X3, [X8]
	0x03CEDB3C LDR X22, [X22 + 0xA0]
	0x03CEDB40 LDR X23, [X23 + 0x9D8]
	0x03CEDB44 MOV X1, X21
	0x03CEDB48 MOV W2, W31
	0x03CEDB4C BL 0x21A18B4
	0x03CEDB50 MOV X0, X19
	0x03CEDB54 MOV X1, X31
	0x03CEDB58 BL 0x3DB9E70
	0x03CEDB5C LDR X8, [X22]
	0x03CEDB60 MOV X20, X0
	0x03CEDB64 MOV X0, X8
	0x03CEDB68 BL 0x1C16F10
	0x03CEDB6C LDR X2, [X23]
	0x03CEDB70 MOV X1, X19
	0x03CEDB74 MOV X3, X31
	0x03CEDB78 MOV X21, X0
	0x03CEDB7C BL 0x2D0E824
	0x03CEDB80 CBZ X20, 0x3CEDCCC
	0x03CEDB84 ADRP X8, 0x431000
	0x03CEDB88 LDR X8, [X8 + 0xD28]
	0x03CEDB8C ADRP X22, 0x430000
	0x03CEDB90 ADRP X23, 0x475000
	0x03CEDB94 MOV X0, X20
	0x03CEDB98 LDR X3, [X8]
	0x03CEDB9C LDR X22, [X22 + 0x788]
	0x03CEDBA0 LDR X23, [X23 + 0x9E0]
	0x03CEDBA4 MOV X1, X21
	0x03CEDBA8 MOV W2, W31
	0x03CEDBAC BL 0x21A18B4
	0x03CEDBB0 MOV X0, X19
	0x03CEDBB4 MOV X1, X31
	0x03CEDBB8 BL 0x3DB9E70
	0x03CEDBBC LDR X8, [X22]
	0x03CEDBC0 MOV X20, X0
	0x03CEDBC4 MOV X0, X8
	0x03CEDBC8 BL 0x1C16F10
	0x03CEDBCC LDR X2, [X23]
	0x03CEDBD0 MOV X1, X19
	0x03CEDBD4 MOV X3, X31
	0x03CEDBD8 MOV X21, X0
	0x03CEDBDC BL 0x2D0E824
	0x03CEDBE0 CBZ X20, 0x3CEDCCC
	0x03CEDBE4 ADRP X8, 0x430000
	0x03CEDBE8 LDR X8, [X8 + 0x798]
	0x03CEDBEC ADRP X22, 0x475000
	0x03CEDBF0 ADRP X23, 0x475000
	0x03CEDBF4 MOV X0, X20
	0x03CEDBF8 LDR X3, [X8]
	0x03CEDBFC LDR X22, [X22 + 0xA08]
	0x03CEDC00 LDR X23, [X23 + 0x9C0]
	0x03CEDC04 MOV X1, X21
	0x03CEDC08 MOV W2, W31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x6FB000
	009 Move W8, [X21+1864]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x476000
	017 Move X0, [X0+2336]
	018 Call 0x1C17CF4
	019 Move X0, 0x476000
	020 Move X0, [X0+2344]
	021 Call 0x1C17CF4
	022 Move X0, 0x476000
	023 Move X0, [X0+2352]
	024 Call 0x1C17CF4
	025 Move X0, 0x476000
	026 Move X0, [X0+2360]
	027 Call 0x1C17CF4
	028 Move X0, 0x476000
	029 Move X0, [X0+2368]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1864], W8
	033 Move [X31+8], X31
	034 Move [X31+16], X31
	035 Move [X31+24], X31
	036 Move X0, [X20+16]
	037 Compare X0, 0
	038 JumpIfEqual {87}
	039 Move X8, 0x476000
	040 Move X8, [X8+2368]
	041 Move X22, 0x476000
	042 Move X23, 0x476000
	043 Move X21, 0x476000
	044 Move X1, [X8]
	045 Move X22, [X22+2344]
	046 Move X23, [X23+2360]
	047 Move X21, [X21+2336]
	048 Add X8, X31, 8
	049 Call List`1<Object>.GetEnumerator, X0
	050 Move X1, [X22]
	051 Add X0, X31, 8
	052 Call Enumerator<Object>.MoveNext, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {74}
	057 Move X20, [X31+24]
	058 Compare X20, 0
	059 JumpIfEqual {85}
	060 Move X1, [X20+16]
	061 Compare X1, 0
	062 JumpIfEqual {50}
	063 Compare X19, 0
	064 JumpIfEqual {86}
	065 Move X2, [X23]
	066 Move X0, X19
	067 Call List`1<Object>.Contains, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {50}
	072 Move X0, X20
	073 Call ButtonClickStatus.Reset, X0
	074 Move X1, [X21]
	075 Add X0, X31, 8
	076 Call Enumerator<Object>.Dispose, X0
	077 Move X20, [X31+64]
	078 Move X19, [X31+72]
	079 Move X22, [X31+48]
	080 Move X21, [X31+56]
	081 Move X30, [X31+32]
	082 Move X23, [X31+40]
	083 Add X31, X31, 80
	084 Return 
	085 Call 0x1C17F20
	086 Call 0x1C17F20
	087 Call 0x1C17F20
	088 Move X19, X0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, X19
	091 Call 0x3EB2AD0
	092 Move X20, [X0]
	093 Call 0x3EB2AE0
	094 Move X1, [X21]
	095 Add X0, X31, 8
	096 Call Enumerator<Object>.Dispose, X0
	097 Compare X20, 0
	098 JumpIfEqual {77}
	099 Move X0, X20
	100 Call 0x1C17F18
	101 Move X20, X31
	102 Move X19, X0
	103 Move X1, [X21]
	104 Add X0, X31, 8
	105 Call Enumerator<Object>.Dispose, X0
	106 Compare X20, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X19
	109 Call 0x1D2D690
	110 Move X0, X20
	111 Call 0x1C17F18
	112 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03CEDC0C BL 0x21A18B4
	0x03CEDC10 MOV X0, X19
	0x03CEDC14 MOV X1, X31
	0x03CEDC18 BL 0x3DB9E70
	0x03CEDC1C LDR X8, [X22]
	0x03CEDC20 MOV X20, X0
	0x03CEDC24 MOV X0, X8
	0x03CEDC28 BL 0x1C16F10
	0x03CEDC2C LDR X2, [X23]
	0x03CEDC30 MOV X1, X19
	0x03CEDC34 MOV X3, X31
	0x03CEDC38 MOV X21, X0
	0x03CEDC3C BL 0x2D0E824
	0x03CEDC40 CBZ X20, 0x3CEDCCC
	0x03CEDC44 ADRP X8, 0x475000
	0x03CEDC48 LDR X8, [X8 + 0xA30]
	0x03CEDC4C ADRP X22, 0x475000
	0x03CEDC50 ADRP X23, 0x475000
	0x03CEDC54 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x6FB000
	005 Move X20, 0x476000
	006 Move W8, [X19+1865]
	007 Move X20, [X20+2264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x476000
	013 Move X0, [X0+2264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1865], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move TEMP, 0
	021 Not TEMP
	022 Move W9, TEMP
	023 Move X8, [X8+184]
	024 Move [X8], W9
	025 Move X30, [X31+32]
	026 Return 

