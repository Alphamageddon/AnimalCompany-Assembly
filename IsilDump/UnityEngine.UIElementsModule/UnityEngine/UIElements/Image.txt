Type: UnityEngine.UIElements.Image

Method: UnityEngine.Texture get_image()

Disassembly:
	0x03D14498 STP X30, X23, [X31 + 0x40]
	0x03D1449C STP X22, X21, [X31 + 0x50]

ISIL:
	001 Move X0, [X0+976]
	002 Return X0

Method: System.Void set_image(UnityEngine.Texture value)

Disassembly:
	0x03D144A0 STP X20, X19, [X31 + 0x60]
	0x03D144A4 ADRP X21, 0x6D3000
	0x03D144A8 LDRB W8, [X21 + 0x8E3]
	0x03D144AC MOV X20, X1
	0x03D144B0 MOV X19, X0
	0x03D144B4 TBNZ X8, 0x0, 0x3D14508
	0x03D144B8 ADRP X0, 0x409000
	0x03D144BC LDR X0, [X0 + 0x680]
	0x03D144C0 BL 0x1C16CF4
	0x03D144C4 ADRP X0, 0x44F000
	0x03D144C8 LDR X0, [X0 + 0xD38]
	0x03D144CC BL 0x1C16CF4
	0x03D144D0 ADRP X0, 0x44F000
	0x03D144D4 LDR X0, [X0 + 0xD30]
	0x03D144D8 BL 0x1C16CF4
	0x03D144DC ADRP X0, 0x44F000
	0x03D144E0 LDR X0, [X0 + 0xD40]
	0x03D144E4 BL 0x1C16CF4
	0x03D144E8 ADRP X0, 0x44F000
	0x03D144EC LDR X0, [X0 + 0xD60]
	0x03D144F0 BL 0x1C16CF4
	0x03D144F4 ADRP X0, 0x44F000
	0x03D144F8 LDR X0, [X0 + 0xD68]
	0x03D144FC BL 0x1C16CF4
	0x03D14500 MOVZ W8, 0x1
	0x03D14504 STRB W8, [X21 + 0x8E3]
	0x03D14508 STP X31, X31, [X31 + 0x30]
	0x03D1450C STP X31, X31, [X31 + 0x20]
	0x03D14510 STP X31, X31, [X31 + 0x10]
	0x03D14514 STR W31, [X31 + 0xC]
	0x03D14518 LDRB W8, [X19 + 0x408]
	0x03D1451C CBNZ W8, 0x3D14678
	0x03D14520 ADRP X22, 0x44F000
	0x03D14524 LDR X22, [X22 + 0xD60]
	0x03D14528 LDR X0, [X22]
	0x03D1452C LDR W8, [X0 + 0xE0]
	0x03D14530 CBNZ W8, 0x3D14538
	0x03D14534 BL 0x1C16DFC
	0x03D14538 CBZ X20, 0x3D148E0
	0x03D1453C LDR X9, [X22]
	0x03D14540 ADRP X23, 0x409000
	0x03D14544 LDR X8, [X20]
	0x03D14548 LDR X10, [X9 + 0xB8]
	0x03D1454C LDR X23, [X23 + 0x680]
	0x03D14550 LDRH W9, [X8 + 0x12E]
	0x03D14554 LDR X21, [X10 + 0x8]
	0x03D14558 LDR X1, [X23]
	0x03D1455C CBZ X9, 0x3D14580
	0x03D14560 LDR X10, [X8 + 0xB0]
	0x03D14564 ADD X10, X10, 0x8
	0x03D14568 LDUR X11, [X10 - 0x8]
	0x03D1456C CMP X11, X1
	0x03D14570 B.EQ 0x3D14590
	0x03D14574 SUBS X9, X9, 0x1
	0x03D14578 ADD X10, X10, 0x10
	0x03D1457C B.NE 0x3D14568
	0x03D14580 MOVZ W2, 0x3

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6D4000
	007 Move X22, 0x3E0000
	008 Move W8, [X21+2267]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x450000
	017 Move X0, [X0+3376]
	018 Call 0x1C17CF4
	019 Move X0, 0x3E0000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2267], W8
	024 Move X0, [X22]
	025 Move X21, [X20+976]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X19
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {47}
	038 Move W8, [X20+1032]
	039 Compare W8, 0
	040 JumpIfEqual {47}
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return 
	047 Move X0, [X22]
	048 Move X22, 0x450000
	049 Add X21, X20, 976
	050 Move W8, [X0+224]
	051 Move X22, [X22+3376]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Inequality, X0, X1
	059 And W8, W0, 1
	060 Move [X20+1032], W8
	061 Move X5, [X22]
	062 Add X3, X20, 984
	063 Add X4, X20, 992
	064 Move X0, X20
	065 Move X1, X19
	066 Move X2, X21
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Call 0x3D15B8C
	073 Return 

Method: UnityEngine.Sprite get_sprite()

Disassembly:
	0x03D14584 MOV X0, X20
	0x03D14588 BL 0x1C5C788

ISIL:
	001 Move X0, [X0+984]
	002 Return X0

Method: System.Void set_sprite(UnityEngine.Sprite value)

Disassembly:
	0x03D1458C B 0x3D145A0
	0x03D14590 LDR W9, [X10]
	0x03D14594 ADD W9, W9, 0x3
	0x03D14598 ADD X8, X8, W9, 0x4, SXTW
	0x03D1459C ADD X0, X8, 0x138
	0x03D145A0 LDP X8, X3, [X0]
	0x03D145A4 ADD X2, X31, 0x20
	0x03D145A8 MOV X0, X20
	0x03D145AC MOV X1, X21
	0x03D145B0 BLR X8
	0x03D145B4 TBZ X0, 0x0, 0x3D145D0
	0x03D145B8 ADRP X8, 0x44F000
	0x03D145BC LDR X1, [X31 + 0x20]
	0x03D145C0 LDR X8, [X8 + 0xD30]
	0x03D145C4 ADD X2, X19, 0x3D0
	0x03D145C8 ADD X3, X19, 0x3D8
	0x03D145CC B 0x3D14668
	0x03D145D0 LDR X0, [X22]
	0x03D145D4 LDR W8, [X0 + 0xE0]
	0x03D145D8 CBNZ W8, 0x3D145E4
	0x03D145DC BL 0x1C16DFC
	0x03D145E0 LDR X0, [X22]
	0x03D145E4 LDR X9, [X0 + 0xB8]
	0x03D145E8 LDR X8, [X20]
	0x03D145EC LDR X1, [X23]
	0x03D145F0 LDR X21, [X9 + 0x10]
	0x03D145F4 LDRH W9, [X8 + 0x12E]
	0x03D145F8 CBZ X9, 0x3D1461C
	0x03D145FC LDR X10, [X8 + 0xB0]
	0x03D14600 ADD X10, X10, 0x8
	0x03D14604 LDUR X11, [X10 - 0x8]
	0x03D14608 CMP X11, X1
	0x03D1460C B.EQ 0x3D1462C
	0x03D14610 SUBS X9, X9, 0x1
	0x03D14614 ADD X10, X10, 0x10
	0x03D14618 B.NE 0x3D14604
	0x03D1461C MOVZ W2, 0x4
	0x03D14620 MOV X0, X20
	0x03D14624 BL 0x1C5C788
	0x03D14628 B 0x3D1463C
	0x03D1462C LDR W9, [X10]
	0x03D14630 ADD W9, W9, 0x4
	0x03D14634 ADD X8, X8, W9, 0x4, SXTW
	0x03D14638 ADD X0, X8, 0x138
	0x03D1463C LDP X8, X3, [X0]
	0x03D14640 ADD X2, X31, 0x18
	0x03D14644 MOV X0, X20
	0x03D14648 MOV X1, X21
	0x03D1464C BLR X8
	0x03D14650 TBZ X0, 0x0, 0x3D14830
	0x03D14654 ADRP X8, 0x44F000
	0x03D14658 LDR X1, [X31 + 0x18]
	0x03D1465C LDR X8, [X8 + 0xD38]
	0x03D14660 ADD X2, X19, 0x3D8
	0x03D14664 ADD X3, X19, 0x3D0
	0x03D14668 LDR X5, [X8]
	0x03D1466C ADD X4, X19, 0x3E0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6D4000
	007 Move X22, 0x3E0000
	008 Move W8, [X21+2268]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x450000
	017 Move X0, [X0+3384]
	018 Call 0x1C17CF4
	019 Move X0, 0x3E0000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2268], W8
	024 Move X0, [X22]
	025 Move X21, [X20+984]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X19
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {47}
	038 Move W8, [X20+1032]
	039 Compare W8, 0
	040 JumpIfEqual {47}
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return 
	047 Move X0, [X22]
	048 Move X22, 0x450000
	049 Add X21, X20, 984
	050 Move W8, [X0+224]
	051 Move X22, [X22+3384]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Inequality, X0, X1
	059 And W8, W0, 1
	060 Move [X20+1032], W8
	061 Move X5, [X22]
	062 Add X3, X20, 976
	063 Add X4, X20, 992
	064 Move X0, X20
	065 Move X1, X19
	066 Move X2, X21
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Call 0x3D15B8C
	073 Return 

Method: UnityEngine.UIElements.VectorImage get_vectorImage()

Disassembly:
	0x03D14670 MOV X0, X19
	0x03D14674 BL 0x3D14B8C

ISIL:
	001 Move X0, [X0+992]
	002 Return X0

Method: System.Void set_vectorImage(UnityEngine.UIElements.VectorImage value)

Disassembly:
	0x03D14678 LDRB W8, [X19 + 0x409]
	0x03D1467C CBNZ W8, 0x3D1476C
	0x03D14680 ADRP X21, 0x44F000
	0x03D14684 LDR X21, [X21 + 0xD60]
	0x03D14688 LDR X0, [X21]
	0x03D1468C LDR W8, [X0 + 0xE0]
	0x03D14690 CBNZ W8, 0x3D14698
	0x03D14694 BL 0x1C16DFC
	0x03D14698 CBZ X20, 0x3D148E0
	0x03D1469C LDR X9, [X21]
	0x03D146A0 ADRP X11, 0x409000
	0x03D146A4 LDR X8, [X20]
	0x03D146A8 LDR X10, [X9 + 0xB8]
	0x03D146AC LDR X11, [X11 + 0x680]
	0x03D146B0 LDRH W9, [X8 + 0x12E]
	0x03D146B4 LDR X21, [X10 + 0x20]
	0x03D146B8 LDR X1, [X11]
	0x03D146BC CBZ X9, 0x3D146E0
	0x03D146C0 LDR X10, [X8 + 0xB0]
	0x03D146C4 ADD X10, X10, 0x8
	0x03D146C8 LDUR X11, [X10 - 0x8]
	0x03D146CC CMP X11, X1
	0x03D146D0 B.EQ 0x3D146F0
	0x03D146D4 SUBS X9, X9, 0x1
	0x03D146D8 ADD X10, X10, 0x10
	0x03D146DC B.NE 0x3D146C8
	0x03D146E0 MOVZ W2, 0x6
	0x03D146E4 MOV X0, X20
	0x03D146E8 BL 0x1C5C788
	0x03D146EC B 0x3D14700
	0x03D146F0 LDR W9, [X10]
	0x03D146F4 ADD W9, W9, 0x6
	0x03D146F8 ADD X8, X8, W9, 0x4, SXTW
	0x03D146FC ADD X0, X8, 0x138
	0x03D14700 LDP X8, X3, [X0]
	0x03D14704 ADD X2, X31, 0x38
	0x03D14708 MOV X0, X20
	0x03D1470C MOV X1, X21
	0x03D14710 BLR X8
	0x03D14714 TBZ X0, 0x0, 0x3D1476C
	0x03D14718 ADRP X8, 0x44F000
	0x03D1471C LDR X8, [X8 + 0xD68]
	0x03D14720 LDR X21, [X31 + 0x38]
	0x03D14724 LDR X0, [X8]
	0x03D14728 LDR W8, [X0 + 0xE0]
	0x03D1472C CBNZ W8, 0x3D14734
	0x03D14730 BL 0x1C16DFC
	0x03D14734 ADD X2, X31, 0xC
	0x03D14738 MOVZ W0, 0xE
	0x03D1473C MOV X1, X21
	0x03D14740 MOV X3, X31
	0x03D14744 BL 0x3D49B24
	0x03D14748 LDR W8, [X31 + 0xC]
	0x03D1474C LDR W9, [X19 + 0x3C8]
	0x03D14750 CMP W9, W8
	0x03D14754 B.EQ 0x3D1476C
	0x03D14758 MOVZ W1, 0x800

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6D4000
	007 Move X22, 0x3E0000
	008 Move W8, [X21+2269]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x450000
	017 Move X0, [X0+3392]
	018 Call 0x1C17CF4
	019 Move X0, 0x3E0000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2269], W8
	024 Move X0, [X22]
	025 Move X21, [X20+992]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X21
	031 Move X1, X19
	032 Move X2, X31
	033 Call Object.op_Equality, X0, X1
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {47}
	038 Move W8, [X20+1032]
	039 Compare W8, 0
	040 JumpIfEqual {47}
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return 
	047 Move X0, [X22]
	048 Move X22, 0x450000
	049 Add X21, X20, 992
	050 Move W8, [X0+224]
	051 Move X22, [X22+3392]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Inequality, X0, X1
	059 And W8, W0, 1
	060 Move [X20+1032], W8
	061 Move X5, [X22]
	062 Add X3, X20, 976
	063 Add X4, X20, 984
	064 Move X0, X20
	065 Move X1, X19
	066 Move X2, X21
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move X30, [X31+48]
	072 Call 0x3D15B8C
	073 Return 

Method: UnityEngine.Rect get_sourceRect()

Disassembly:
	0x03D1475C MOV X0, X19

ISIL:
No ISIL was generated
Method: UnityEngine.Rect get_uv()

Disassembly:
	0x03D14900 BL 0x3D134A0
	0x03D14904 MOV X0, X19
	0x03D14908 MOV X1, X31
	0x03D1490C BL 0x3D1358C
	0x03D14910 MOV X0, X19

ISIL:
	001 Move V0, [X0+1000]
	002 Move V1, [X0+1004]
	003 Move V2, [X0+1008]
	004 Move V3, [X0+1012]
	005 Return X0

Method: System.Void set_uv(UnityEngine.Rect value)

Disassembly:
	0x03D14914 MOV X1, X31
	0x03D14918 LDP X30, X19, [X31], #0x10
	0x03D1491C B 0x3D13678
	0x03D14920 LDR W9, [X0 + 0x3C8]
	0x03D14924 CMP W9, W1
	0x03D14928 B.NE 0x3D14930
	0x03D1492C RET
	0x03D14930 MOV W8, W1
	0x03D14934 MOVZ W1, 0x800
	0x03D14938 MOV X2, X31
	0x03D1493C STR W8, [X0 + 0x3C8]
	0x03D14940 B 0x3DE5048
	0x03D14944 LDR V4, [X0 + 0x3F8]
	0x03D14948 LDR V5, [X0 + 0x3FC]
	0x03D1494C LDR V6, [X0 + 0x400]
	0x03D14950 LDR V7, [X0 + 0x404]
	0x03D14954 FSUB S4, S4, S0
	0x03D14958 FSUB S5, S5, S1

ISIL:
	001 Move V4, [X0+1000]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 Move V4, [X0+1012]
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 Move V4, [X0+1008]
	006 NotImplemented "Instruction FCMP not yet implemented."
	007 Move V4, [X0+1004]
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Return 
	010 Move [X0+1000], S0
	011 Move [X0+1004], S1
	012 Move [X0+1008], S2
	013 Move [X0+1012], S3
	014 Return 

Method: UnityEngine.ScaleMode get_scaleMode()

Disassembly:
	0x03D1495C ADRP X8, 0xFFFFFFFFFCDD5000
	0x03D14960 FMUL S4, S4, S4

ISIL:
	001 Move W0, [X0+968]
	002 Return X0

Method: UnityEngine.Color get_tintColor()

Disassembly:
	0x03D14964 FMUL S5, S5, S5
	0x03D14968 FADD S4, S4, S5
	0x03D1496C LDR V5, [X8 + 0xF20]
	0x03D14970 FSUB S6, S6, S2
	0x03D14974 FSUB S7, S7, S3

ISIL:
	001 Move V0, [X0+1016]
	002 Move V1, [X0+1020]
	003 Move V2, [X0+1024]
	004 Move V3, [X0+1028]
	005 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03D14978 FMUL S6, S6, S6
	0x03D1497C FADD S4, S6, S4
	0x03D14980 FMUL S6, S7, S7
	0x03D14984 FADD S4, S6, S4
	0x03D14988 FCMP S4, S5
	0x03D1498C B.MI 0x3D149AC
	0x03D14990 MOVZ W1, 0x800
	0x03D14994 MOV X2, X31
	0x03D14998 STR S0, [X0 + 0x3F8]
	0x03D1499C STR S1, [X0 + 0x3FC]
	0x03D149A0 STR S2, [X0 + 0x400]
	0x03D149A4 STR S3, [X0 + 0x404]
	0x03D149A8 B 0x3DE5048
	0x03D149AC RET
	0x03D149B0 SUB X31, X31, 0x90
	0x03D149B4 STP X29, X30, [X31 + 0x30]
	0x03D149B8 STP X28, X27, [X31 + 0x40]
	0x03D149BC STP X26, X25, [X31 + 0x50]
	0x03D149C0 STP X24, X23, [X31 + 0x60]
	0x03D149C4 STP X22, X21, [X31 + 0x70]
	0x03D149C8 STP X20, X19, [X31 + 0x80]
	0x03D149CC ADRP X29, 0x6D3000
	0x03D149D0 ADRP X28, 0x44F000
	0x03D149D4 ADRP X19, 0x44F000
	0x03D149D8 ADRP X24, 0x44F000
	0x03D149DC ADRP X27, 0x44F000
	0x03D149E0 ADRP X26, 0x44F000
	0x03D149E4 ADRP X25, 0x44F000
	0x03D149E8 ADRP X22, 0x44F000
	0x03D149EC ADRP X23, 0x44F000
	0x03D149F0 ADRP X20, 0x44F000
	0x03D149F4 ADRP X21, 0x409000
	0x03D149F8 LDR X28, [X28 + 0xD70]
	0x03D149FC LDR X19, [X19 + 0xD60]
	0x03D14A00 LDR X24, [X24 + 0xD78]
	0x03D14A04 LDR X27, [X27 + 0xD80]
	0x03D14A08 LDR X26, [X26 + 0xD88]
	0x03D14A0C LDRB W8, [X29 + 0x8E5]
	0x03D14A10 LDR X25, [X25 + 0xD90]
	0x03D14A14 LDR X22, [X22 + 0xD98]
	0x03D14A18 LDR X23, [X23 + 0xDA0]
	0x03D14A1C LDR X20, [X20 + 0xDA8]
	0x03D14A20 LDR X21, [X21 + 0x720]
	0x03D14A24 TBNZ X8, 0x0, 0x3D14AA8
	0x03D14A28 ADRP X0, 0x409000
	0x03D14A2C LDR X0, [X0 + 0x720]
	0x03D14A30 BL 0x1C16CF4
	0x03D14A34 ADRP X0, 0x44F000
	0x03D14A38 LDR X0, [X0 + 0xD80]
	0x03D14A3C BL 0x1C16CF4
	0x03D14A40 ADRP X0, 0x44F000
	0x03D14A44 LDR X0, [X0 + 0xD90]
	0x03D14A48 BL 0x1C16CF4
	0x03D14A4C ADRP X0, 0x44F000
	0x03D14A50 LDR X0, [X0 + 0xD88]
	0x03D14A54 BL 0x1C16CF4
	0x03D14A58 ADRP X0, 0x44F000
	0x03D14A5C LDR X0, [X0 + 0xDA0]
	0x03D14A60 BL 0x1C16CF4
	0x03D14A64 ADRP X0, 0x44F000
	0x03D14A68 LDR X0, [X0 + 0xD60]
	0x03D14A6C BL 0x1C16CF4
	0x03D14A70 ADRP X0, 0x44F000
	0x03D14A74 LDR X0, [X0 + 0xD78]
	0x03D14A78 BL 0x1C16CF4
	0x03D14A7C ADRP X0, 0x44F000
	0x03D14A80 LDR X0, [X0 + 0xD70]
	0x03D14A84 BL 0x1C16CF4
	0x03D14A88 ADRP X0, 0x44F000
	0x03D14A8C LDR X0, [X0 + 0xDA8]
	0x03D14A90 BL 0x1C16CF4
	0x03D14A94 ADRP X0, 0x44F000
	0x03D14A98 LDR X0, [X0 + 0xD98]
	0x03D14A9C BL 0x1C16CF4
	0x03D14AA0 MOVZ W8, 0x1
	0x03D14AA4 STRB W8, [X29 + 0x8E5]
	0x03D14AA8 LDR X8, [X19]
	0x03D14AAC LDR X9, [X28]
	0x03D14AB0 ADD X0, X31, 0x28
	0x03D14AB4 LDR X8, [X8 + 0xB8]
	0x03D14AB8 STR X9, [X8]
	0x03D14ABC LDR X1, [X24]
	0x03D14AC0 LDR X2, [X27]
	0x03D14AC4 STR X31, [X31 + 0x28]
	0x03D14AC8 BL 0x29AA7CC
	0x03D14ACC LDR X8, [X19]
	0x03D14AD0 LDR X9, [X31 + 0x28]
	0x03D14AD4 ADD X0, X31, 0x20
	0x03D14AD8 LDR X8, [X8 + 0xB8]
	0x03D14ADC STR X9, [X8 + 0x8]
	0x03D14AE0 LDR X1, [X24]
	0x03D14AE4 LDR X2, [X26]
	0x03D14AE8 STR X31, [X31 + 0x20]
	0x03D14AEC BL 0x29AA7CC
	0x03D14AF0 LDR X8, [X19]
	0x03D14AF4 LDR X9, [X31 + 0x20]
	0x03D14AF8 ADD X0, X31, 0x18
	0x03D14AFC LDR X8, [X8 + 0xB8]
	0x03D14B00 STR X9, [X8 + 0x10]
	0x03D14B04 LDR X1, [X24]
	0x03D14B08 LDR X2, [X25]
	0x03D14B0C STR X31, [X31 + 0x18]
	0x03D14B10 BL 0x29AA7CC
	0x03D14B14 LDR X8, [X19]
	0x03D14B18 LDR X9, [X31 + 0x18]
	0x03D14B1C ADD X0, X31, 0x10
	0x03D14B20 LDR X8, [X8 + 0xB8]
	0x03D14B24 STR X9, [X8 + 0x18]
	0x03D14B28 LDR X1, [X22]
	0x03D14B2C LDR X2, [X23]
	0x03D14B30 STR X31, [X31 + 0x10]
	0x03D14B34 BL 0x29AA7CC
	0x03D14B38 LDR X8, [X19]
	0x03D14B3C LDR X9, [X31 + 0x10]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x6D4000
	011 Move X20, 0x408000
	012 Move W8, [X21+2270]
	013 Move X20, [X20+2200]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x450000
	020 Move X0, [X0+3400]
	021 Call 0x1C17CF4
	022 Move X0, 0x40A000
	023 Move X0, [X0+1592]
	024 Call 0x1C17CF4
	025 Move X0, 0x40A000
	026 Move X0, [X0+1600]
	027 Call 0x1C17CF4
	028 Move X0, 0x450000
	029 Move X0, [X0+3408]
	030 Call 0x1C17CF4
	031 Move X0, 0x450000
	032 Move X0, [X0+3416]
	033 Call 0x1C17CF4
	034 Move X0, 0x450000
	035 Move X0, [X0+3424]
	036 Call 0x1C17CF4
	037 Move X0, 0x408000
	038 Move X0, [X0+2200]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+2270], W8
	042 Move X0, [X20]
	043 Move X26, 0x450000
	044 Move W8, [X0+224]
	045 Move X26, [X26+3424]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X24, 0x40A000
	050 Move X20, 0x450000
	051 Move X23, 0x40A000
	052 Move X22, 0x450000
	053 Move X21, 0x450000
	054 Move X24, [X24+1600]
	055 Move X20, [X20+3408]
	056 Move X23, [X23+1592]
	057 Move X22, [X22+3400]
	058 Move X21, [X21+3416]
	059 Move X0, X19
	060 Move X1, X31
	061 Add X25, X19, 1000
	062 Call VisualElement..ctor, X0
	063 Move X0, [X26]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X26]
	069 Move X8, [X0+184]
	070 Move X0, X19
	071 Move X2, X31
	072 Move X1, [X8]
	073 Call VisualElement.AddToClassList, X0, X1
	074 Move X9, -52596736
	075 Move V0, [X9+188]
	076 Move W8, 2
	077 Move V1, 0
	078 Move W1, 1
	079 Move X0, X19
	080 Move X2, X31
	081 Move [X19+968], W8
	082 Move [X25], V0
	083 Move [X25+8], V1
	084 Call VisualElement.set_requireMeasureFunction, X0, X1
	085 Move X0, [X24]
	086 Call 0x1C17F10
	087 Move X2, [X20]
	088 Move X1, X19
	089 Move X3, X31
	090 Move X20, X0
	091 Call 0x2D0F824, X0, X1, X2
	092 Move X3, [X23]
	093 Move X0, X19
	094 Move X1, X20
	095 Move W2, W31
	096 Call 0x21A2534, X0, X1, X2
	097 Move X0, [X22]
	098 Move X20, [X19+824]
	099 Call 0x1C17F10
	100 Move X2, [X21]
	101 Move X1, X19
	102 Move X3, X31
	103 Move X21, X0
	104 Call Action`1<Object>..ctor, X0, X1, X2
	105 Move X0, X20
	106 Move X1, X21
	107 Move X2, X31
	108 Call Delegate.Combine, X0, X1
	109 Compare X0, 0
	110 JumpIfEqual {117}
	111 Move X21, [X22]
	112 Move X20, X0
	113 Move X1, X21
	114 Call 0x1C17E00
	115 Compare X0, 0
	116 JumpIfEqual {128}
	117 Move [X19+824], X0
	118 Move X20, [X31+64]
	119 Move X19, [X31+72]
	120 Move X22, [X31+48]
	121 Move X21, [X31+56]
	122 Move X24, [X31+32]
	123 Move X23, [X31+40]
	124 Move X26, [X31+16]
	125 Move X25, [X31+24]
	126 Move X30, [X31+80]
	127 Return 
	128 Move X0, X20
	129 Move X1, X21
	130 Call 0x1C181E0

Method: UnityEngine.Vector2 GetTextureDisplaySize(UnityEngine.Texture texture)

Disassembly:
	0x03D14B40 ADD X0, X31, 0x8
	0x03D14B44 LDR X8, [X8 + 0xB8]
	0x03D14B48 STR X9, [X8 + 0x20]
	0x03D14B4C LDR X1, [X20]
	0x03D14B50 LDR X2, [X21]
	0x03D14B54 STR X31, [X31 + 0x8]
	0x03D14B58 BL 0x29AA2DC
	0x03D14B5C LDR X8, [X19]
	0x03D14B60 LDR X9, [X31 + 0x8]
	0x03D14B64 LDP X20, X19, [X31 + 0x80]
	0x03D14B68 LDP X22, X21, [X31 + 0x70]
	0x03D14B6C LDR X8, [X8 + 0xB8]
	0x03D14B70 LDP X24, X23, [X31 + 0x60]
	0x03D14B74 LDP X26, X25, [X31 + 0x50]
	0x03D14B78 LDP X28, X27, [X31 + 0x40]
	0x03D14B7C LDP X29, X30, [X31 + 0x30]
	0x03D14B80 STR X9, [X8 + 0x28]
	0x03D14B84 ADD X31, X31, 0x90
	0x03D14B88 RET
	0x03D14B8C STP X30, X25, [X31 - 0x40]!
	0x03D14B90 STP X24, X23, [X31 + 0x10]
	0x03D14B94 STP X22, X21, [X31 + 0x20]
	0x03D14B98 STP X20, X19, [X31 + 0x30]
	0x03D14B9C ADRP X24, 0x6D3000
	0x03D14BA0 LDRB W8, [X24 + 0x8E6]
	0x03D14BA4 MOV X21, X4
	0x03D14BA8 MOV X22, X3
	0x03D14BAC MOV X20, X2
	0x03D14BB0 MOV X23, X1
	0x03D14BB4 MOV X19, X0
	0x03D14BB8 CBNZ W8, 0x3D14BD0
	0x03D14BBC ADRP X0, 0x3DF000
	0x03D14BC0 LDR X0, [X0 + 0x598]
	0x03D14BC4 BL 0x1C16CF4
	0x03D14BC8 MOVZ W8, 0x1
	0x03D14BCC STRB W8, [X24 + 0x8E6]
	0x03D14BD0 ADRP X25, 0x3DF000
	0x03D14BD4 LDR X25, [X25 + 0x598]
	0x03D14BD8 LDR X24, [X20]
	0x03D14BDC LDR X0, [X25]
	0x03D14BE0 LDR W8, [X0 + 0xE0]
	0x03D14BE4 CBNZ W8, 0x3D14BEC
	0x03D14BE8 BL 0x1C16DFC
	0x03D14BEC MOV X0, X23
	0x03D14BF0 MOV X1, X24
	0x03D14BF4 MOV X2, X31
	0x03D14BF8 BL 0x3C3883C
	0x03D14BFC TBZ X0, 0x0, 0x3D14C14
	0x03D14C00 LDP X20, X19, [X31 + 0x30]
	0x03D14C04 LDP X22, X21, [X31 + 0x20]
	0x03D14C08 LDP X24, X23, [X31 + 0x10]
	0x03D14C0C LDP X30, X25, [X31], #0x40
	0x03D14C10 RET
	0x03D14C14 STR X23, [X20]
	0x03D14C18 LDR X0, [X25]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x6D4000
	008 Move W8, [X20+2271]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3E0000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2271], W8
	019 Move X21, 0x6C6000
	020 Move X20, 0x3E0000
	021 Move W8, [X21+1935]
	022 Move X20, [X20+1432]
	023 Compare W8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, 0x3E8000
	026 Move X0, [X0+3848]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1935], W8
	030 Move X8, 0x3E8000
	031 Move X8, [X8+3848]
	032 Move X0, [X20]
	033 Move X8, [X8]
	034 Move W9, [X0+224]
	035 Move X8, [X8+184]
	036 Move S8, [X8]
	037 Move S9, [X8+4]
	038 Compare W9, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {64}
	049 Compare X19, 0
	050 JumpIfEqual {73}
	051 Move X8, [X19]
	052 Move X0, X19
	053 Move X9, [X8+392]
	054 Move X1, [X8+400]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X8, [X19]
	057 Move W20, W0
	058 Move X0, X19
	059 Move X9, [X8+424]
	060 Move X1, [X8+432]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 NotImplemented "Instruction SCVTF not yet implemented."
	063 NotImplemented "Instruction SCVTF not yet implemented."
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X30, [X31+16]
	067 Move X21, [X31+24]
	068 Move V0, V8
	069 Move V1, V9
	070 Move D9, [X31+48]
	071 Move D8, [X31+56]
	072 Return X0
	073 Call 0x1C17F20

Method: UnityEngine.Vector2 GetTextureDisplaySize(UnityEngine.Sprite sprite)

Disassembly:
	0x03D14C1C LDR W8, [X0 + 0xE0]
	0x03D14C20 CBNZ W8, 0x3D14C28
	0x03D14C24 BL 0x1C16DFC
	0x03D14C28 MOV X0, X23
	0x03D14C2C MOV X1, X31
	0x03D14C30 MOV X2, X31
	0x03D14C34 BL 0x3C354F8
	0x03D14C38 TBZ X0, 0x0, 0x3D14C44
	0x03D14C3C STR X31, [X22]
	0x03D14C40 STR X31, [X21]
	0x03D14C44 LDR X0, [X25]
	0x03D14C48 LDR X20, [X20]
	0x03D14C4C LDR W8, [X0 + 0xE0]
	0x03D14C50 CBNZ W8, 0x3D14C58
	0x03D14C54 BL 0x1C16DFC
	0x03D14C58 MOV X0, X20
	0x03D14C5C MOV X1, X31
	0x03D14C60 MOV X2, X31
	0x03D14C64 BL 0x3C3883C
	0x03D14C68 TBZ X0, 0x0, 0x3D14CA4
	0x03D14C6C FMOV S0, W31
	0x03D14C70 FMOV S1, W31
	0x03D14C74 FMOV S2, 1
	0x03D14C78 FMOV S3, 1
	0x03D14C7C MOV X0, X19
	0x03D14C80 BL 0x3D13914
	0x03D14C84 CBZ X19, 0x3D14CC8
	0x03D14C88 MOV X0, X19
	0x03D14C8C MOV X1, X31
	0x03D14C90 BL 0x3DF7890
	0x03D14C94 MOV X1, X0
	0x03D14C98 MOV X0, X19
	0x03D14C9C BL 0x3D14494
	0x03D14CA0 B 0x3D14CA8
	0x03D14CA4 CBZ X19, 0x3D14CC8
	0x03D14CA8 MOV X0, X19
	0x03D14CAC LDP X20, X19, [X31 + 0x30]
	0x03D14CB0 LDP X22, X21, [X31 + 0x20]
	0x03D14CB4 LDP X24, X23, [X31 + 0x10]
	0x03D14CB8 MOVZ W1, 0x808
	0x03D14CBC MOV X2, X31
	0x03D14CC0 LDP X30, X25, [X31], #0x40
	0x03D14CC4 B 0x3DE5048
	0x03D14CC8 BL 0x1C16F20
	0x03D14CCC STP X1, X2, [X0]
	0x03D14CD0 STR X31, [X0 + 0x10]
	0x03D14CD4 RET
	0x03D14CD8 STP X30, X21, [X31 - 0x20]!
	0x03D14CDC STP X20, X19, [X31 + 0x10]
	0x03D14CE0 ADRP X19, 0x6D3000
	0x03D14CE4 ADRP X21, 0x44F000
	0x03D14CE8 ADRP X20, 0x40A000
	0x03D14CEC LDRB W8, [X19 + 0x8E7]
	0x03D14CF0 LDR X21, [X21 + 0xDB0]
	0x03D14CF4 LDR X20, [X20 + 0x9D8]
	0x03D14CF8 TBNZ X8, 0x0, 0x3D14D1C
	0x03D14CFC ADRP X0, 0x44F000
	0x03D14D00 LDR X0, [X0 + 0xDB0]
	0x03D14D04 BL 0x1C16CF4
	0x03D14D08 ADRP X0, 0x40A000
	0x03D14D0C LDR X0, [X0 + 0x9D8]
	0x03D14D10 BL 0x1C16CF4
	0x03D14D14 MOVZ W8, 0x1
	0x03D14D18 STRB W8, [X19 + 0x8E7]
	0x03D14D1C LDR X0, [X21]
	0x03D14D20 BL 0x1C16F10
	0x03D14D24 MOV X1, X31
	0x03D14D28 MOV X19, X0
	0x03D14D2C BL 0x33BDD8C
	0x03D14D30 LDR X8, [X20]
	0x03D14D34 LDR X8, [X8 + 0xB8]
	0x03D14D38 STR X19, [X8]
	0x03D14D3C LDP X20, X19, [X31 + 0x10]
	0x03D14D40 LDP X30, X21, [X31], #0x20
	0x03D14D44 RET
	0x03D14D48 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], D8
	003 Move [X31+56], X30
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X21, 0x6D4000
	009 Move W8, [X21+2272]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x3E0000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x409000
	020 Move X0, [X0+3736]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2272], W8
	024 Move X22, 0x6C6000
	025 Move X21, 0x3E0000
	026 Move W8, [X22+1935]
	027 Move X21, [X21+1432]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x3E8000
	031 Move X0, [X0+3848]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+1935], W8
	035 Move X8, 0x3E8000
	036 Move X8, [X8+3848]
	037 Move X0, [X21]
	038 Move X8, [X8]
	039 Move W9, [X0+224]
	040 Move X8, [X8+184]
	041 Move V0, [X8]
	042 Move [X31], V0
	043 Compare W9, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X19
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Inequality, X0, X1
	050 Move V0, [X31]
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {81}
	055 Move X8, 0x409000
	056 Move X8, [X8+3736]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X19
	064 Move X2, X31
	065 Call UIElementsUtility.PixelsPerUnitScaleForElement, X0, X1
	066 Move [X31], D0
	067 Compare X19, 0
	068 JumpIfEqual {90}
	069 Add X8, X31, 24
	070 Move X0, X19
	071 Move X1, X31
	072 Call Sprite.get_bounds, X0
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move X0, X19
	075 Move X1, X31
	076 Add V8, V0, V0
	077 Call Sprite.get_pixelsPerUnit, X0
	078 Move V1, [X31]
	079 NotImplemented "Instruction INVALID not yet implemented."
	080 NotImplemented "Instruction INVALID not yet implemented."
	081 Move X20, [X31+80]
	082 Move X19, [X31+88]
	083 Move X22, [X31+64]
	084 Move X21, [X31+72]
	085 Move X30, [X31+56]
	086 Move V8, [X31+48]
	087 Move S1, V0.S[1]
	088 Add X31, X31, 96
	089 Return X0
	090 Call 0x1C17F20

Method: UnityEngine.Vector2 DoMeasure(System.Single desiredWidth, UnityEngine.UIElements.VisualElement/MeasureMode widthMode, System.Single desiredHeight, UnityEngine.UIElements.VisualElement/MeasureMode heightMode)

Disassembly:
	0x03D14D4C B 0x33BDD8C
	0x03D14D50 LDR X0, [X1]
	0x03D14D54 LDR X1, [X2]
	0x03D14D58 MOV X2, X31
	0x03D14D5C B 0x32261E8
	0x03D14D60 STR W1, [X0]
	0x03D14D64 STR X2, [X0 + 0x8]
	0x03D14D68 RET
	0x03D14D6C STR X30, [X31 - 0x20]!
	0x03D14D70 STP X20, X19, [X31 + 0x10]
	0x03D14D74 ADRP X20, 0x6D3000
	0x03D14D78 LDRB W8, [X20 + 0x8E8]
	0x03D14D7C MOV X19, X0
	0x03D14D80 TBNZ X8, 0x0, 0x3D14DB0
	0x03D14D84 ADRP X0, 0x44F000
	0x03D14D88 LDR X0, [X0 + 0xDB8]
	0x03D14D8C BL 0x1C16CF4
	0x03D14D90 ADRP X0, 0x408000
	0x03D14D94 LDR X0, [X0 + 0x1B0]
	0x03D14D98 BL 0x1C16CF4
	0x03D14D9C ADRP X0, 0x3DF000
	0x03D14DA0 LDR X0, [X0 + 0x6C0]
	0x03D14DA4 BL 0x1C16CF4
	0x03D14DA8 MOVZ W8, 0x1
	0x03D14DAC STRB W8, [X20 + 0x8E8]
	0x03D14DB0 LDR X0, [X19 + 0x18]
	0x03D14DB4 CBNZ X0, 0x3D14DF8
	0x03D14DB8 ADRP X8, 0x3DF000
	0x03D14DBC LDR X8, [X8 + 0x6C0]
	0x03D14DC0 LDR X20, [X19 + 0x8]
	0x03D14DC4 LDR X0, [X8]
	0x03D14DC8 LDR W8, [X0 + 0xE0]
	0x03D14DCC CBNZ W8, 0x3D14DD4
	0x03D14DD0 BL 0x1C16DFC
	0x03D14DD4 ADRP X8, 0x408000
	0x03D14DD8 ADRP X9, 0x44F000
	0x03D14DDC LDR X8, [X8 + 0x1B0]
	0x03D14DE0 LDR X9, [X9 + 0xDB8]
	0x03D14DE4 MOV X0, X20
	0x03D14DE8 LDR X1, [X8]
	0x03D14DEC LDR X2, [X9]
	0x03D14DF0 BL 0x1C1703C
	0x03D14DF4 STR X0, [X19 + 0x18]
	0x03D14DF8 LDP X20, X19, [X31 + 0x10]
	0x03D14DFC LDR X30, [X31], #0x20
	0x03D14E00 RET
	0x03D14E04 STP X30, X21, [X31 - 0x20]!
	0x03D14E08 STP X20, X19, [X31 + 0x10]
	0x03D14E0C STR X1, [X0]
	0x03D14E10 CBZ X2, 0x3D14E48
	0x03D14E14 LDR X8, [X2]
	0x03D14E18 MOV X21, X0
	0x03D14E1C MOV X0, X2
	0x03D14E20 MOV X20, X3
	0x03D14E24 LDR X9, [X8 + 0x2D8]
	0x03D14E28 LDR X1, [X8 + 0x2E0]
	0x03D14E2C MOV X19, X2
	0x03D14E30 BLR X9
	0x03D14E34 STP X0, X20, [X21 + 0x8]
	0x03D14E38 STR X19, [X21 + 0x18]
	0x03D14E3C LDP X20, X19, [X31 + 0x10]
	0x03D14E40 LDP X30, X21, [X31], #0x20
	0x03D14E44 RET
	0x03D14E48 BL 0x1C16F20
	0x03D14E4C MOV X1, X31
	0x03D14E50 B 0x33BDD8C
	0x03D14E54 STR X30, [X31 - 0x10]!
	0x03D14E58 LDR X8, [X0 + 0x10]
	0x03D14E5C CBZ X8, 0x3D14E74
	0x03D14E60 LDR W8, [X8 + 0x18]
	0x03D14E64 CMP W8, W2
	0x03D14E68 CSET W0, EQ
	0x03D14E6C LDR X30, [X31], #0x10
	0x03D14E70 RET
	0x03D14E74 BL 0x1C16F20
	0x03D14E78 STR X30, [X31 - 0x20]!
	0x03D14E7C STP X20, X19, [X31 + 0x10]
	0x03D14E80 MOV W19, W1
	0x03D14E84 MOV X1, X31
	0x03D14E88 MOV X20, X0
	0x03D14E8C BL 0x33BDD8C
	0x03D14E90 MOV X0, X31
	0x03D14E94 STR W19, [X20 + 0x10]
	0x03D14E98 BL 0x33C151C
	0x03D14E9C STR W0, [X20 + 0x20]
	0x03D14EA0 LDP X20, X19, [X31 + 0x10]
	0x03D14EA4 LDR X30, [X31], #0x20
	0x03D14EA8 RET
	0x03D14EAC STP X30, X21, [X31 - 0x20]!
	0x03D14EB0 STP X20, X19, [X31 + 0x10]
	0x03D14EB4 LDR W8, [X0 + 0x10]
	0x03D14EB8 ADD W9, W8, 0x5
	0x03D14EBC CMP W9, 0x7
	0x03D14EC0 B.HI 0x3D14F58
	0x03D14EC4 MOVZ W10, 0x1
	0x03D14EC8 LSLV W9, W10, W9
	0x03D14ECC MOVZ W10, 0xC7
	0x03D14ED0 ANDS W31, W9, W10, 0x0
	0x03D14ED4 B.EQ 0x3D14F58
	0x03D14ED8 MOV X19, X0
	0x03D14EDC ADDS W31, W8, 0x4
	0x03D14EE0 B.LE 0x3D14EF8
	0x03D14EE4 CMP W8, 0x2
	0x03D14EE8 B.EQ 0x3D14F14
	0x03D14EEC CMP W8, 0x1
	0x03D14EF0 B.EQ 0x3D14F08
	0x03D14EF4 B 0x3D14F1C
	0x03D14EF8 ADDS W31, W8, 0x5
	0x03D14EFC B.EQ 0x3D14F14
	0x03D14F00 ADDS W31, W8, 0x4
	0x03D14F04 B.NE 0x3D14F1C
	0x03D14F08 MOV X0, X19
	0x03D14F0C BL 0x3D155A8
	0x03D14F10 B 0x3D14F1C
	0x03D14F14 MOV X0, X19
	0x03D14F18 BL 0x3D155F8
	0x03D14F1C MOV X0, X19
	0x03D14F20 LDP X20, X19, [X31 + 0x10]
	0x03D14F24 LDP X30, X21, [X31], #0x20
	0x03D14F28 B 0x3D15648
	0x03D14F2C B 0x3D14F30
	0x03D14F30 MOV X20, X0
	0x03D14F34 CMP W1, 0x1
	0x03D14F38 B.NE 0x3D14F64
	0x03D14F3C MOV X0, X20
	0x03D14F40 BL 0x3EB1AD0
	0x03D14F44 LDR X21, [X0]
	0x03D14F48 BL 0x3EB1AE0
	0x03D14F4C MOV X0, X19
	0x03D14F50 BL 0x3D15648
	0x03D14F54 CBNZ X21, 0x3D14F6C
	0x03D14F58 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X22, 0x6D4000
	016 Move X23, 0x3E0000
	017 Move W8, [X22+2273]
	018 Move X23, [X23+1432]
	019 Move W19, W2
	020 Move V8, V1
	021 Move W20, W1
	022 Move V9, V0
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x3E0000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2273], W8
	033 Move X0, [X23]
	034 Move X22, [X21+976]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move X0, X22
	040 Move X1, X31
	041 Move X2, X31
	042 Call Object.op_Equality, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {78}
	047 Move X0, [X23]
	048 Move X22, [X21+984]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X22
	054 Move X1, X31
	055 Move X2, X31
	056 Call Object.op_Equality, X0, X1
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {78}
	061 Move X0, [X23]
	062 Move X22, [X21+992]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X22
	068 Move X1, X31
	069 Move X2, X31
	070 Call Object.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {78}
	075 Move W8, 0x7FC00000
	076 Move S0, W8
	077 Move V10, V0
	078 Move X22, 0x6C6000
	079 Move W8, [X22+1935]
	080 Compare W8, 0
	081 JumpIfNotEqual {87}
	082 Move X0, 0x3E8000
	083 Move X0, [X0+3848]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X22+1935], W8
	087 Move X0, [X23]
	088 Move X22, [X21+976]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X22
	094 Move X1, X31
	095 Move X2, X31
	096 Call Object.op_Inequality, X0, X1
	097 Move TEMP, X0
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {103}
	101 Move X1, [X21+976]
	102 Call Image.GetTextureDisplaySize, X0, X1
	103 Move X0, [X23]
	104 Move X22, [X21+984]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X22
	110 Move X1, X31
	111 Move X2, X31
	112 Call Object.op_Inequality, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {122}
	117 Move X1, [X21+984]
	118 Move X0, X21
	119 Call Image.GetTextureDisplaySize, X0, X1
	120 Move V11, V0
	121 Move V10, V1
	122 Move X8, [X21+992]
	123 Compare X8, 0
	124 JumpIfEqual {164}
	125 Move S11, [X8+64]
	126 Move S10, [X8+68]
	127 Move X0, X21
	128 Call Image.GetSourceRect, X0
	129 Move X0, X31
	130 Move V15, V0
	131 Move V14, V1
	132 Move V12, V2
	133 Move V13, V3
	134 Call Rect.get_zero
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 NotImplemented "Instruction FCMP not yet implemented."
	137 NotImplemented "Instruction FCMP not yet implemented."
	138 NotImplemented "Instruction FCMP not yet implemented."
	139 NotImplemented "Instruction FABS not yet implemented."
	140 NotImplemented "Instruction FABS not yet implemented."
	141 NotImplemented "Instruction FCMP not yet implemented."
	142 NotImplemented "Instruction FCSEL not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 NotImplemented "Instruction FCSEL not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction FCMP not yet implemented."
	147 NotImplemented "Instruction FCSEL not yet implemented."
	148 Move V1, V10
	149 Move X20, [X31+96]
	150 Move X19, [X31+104]
	151 Move X22, [X31+80]
	152 Move X21, [X31+88]
	153 Move X30, [X31+64]
	154 Move X23, [X31+72]
	155 Move D9, [X31+48]
	156 Move D8, [X31+56]
	157 Move D11, [X31+32]
	158 Move D10, [X31+40]
	159 Move D13, [X31+16]
	160 Move D12, [X31+24]
	161 Move D15, [X31+112]
	162 Move D14, [X31+120]
	163 Return X0
	164 Call 0x1C17F20

Method: System.Void OnGenerateVisualContent(UnityEngine.UIElements.MeshGenerationContext mgc)

Disassembly:
	0x03D14F5C LDP X30, X21, [X31], #0x20
	0x03D14F60 RET
	0x03D14F64 MOV X21, X31
	0x03D14F68 B 0x3D14F78
	0x03D14F6C MOV X0, X21
	0x03D14F70 BL 0x1C16F18
	0x03D14F74 MOV X20, X0
	0x03D14F78 MOV X0, X19
	0x03D14F7C BL 0x3D15648
	0x03D14F80 CBNZ X21, 0x3D14F8C
	0x03D14F84 MOV X0, X20
	0x03D14F88 BL 0x1D2C690
	0x03D14F8C MOV X0, X21
	0x03D14F90 BL 0x1C16F18
	0x03D14F94 BL 0x1990590
	0x03D14F98 SUB X31, X31, 0x80
	0x03D14F9C STR D8, [X31 + 0x50]
	0x03D14FA0 STP X30, X21, [X31 + 0x60]
	0x03D14FA4 STP X20, X19, [X31 + 0x70]
	0x03D14FA8 ADRP X20, 0x6D3000
	0x03D14FAC LDRB W8, [X20 + 0x8E9]
	0x03D14FB0 MOV X19, X0
	0x03D14FB4 STR X0, [X31 + 0x58]
	0x03D14FB8 TBNZ X8, 0x0, 0x3D150A8
	0x03D14FBC ADRP X0, 0x44F000
	0x03D14FC0 LDR X0, [X0 + 0xDC0]
	0x03D14FC4 BL 0x1C16CF4
	0x03D14FC8 ADRP X0, 0x406000
	0x03D14FCC LDR X0, [X0 + 0xFD0]
	0x03D14FD0 BL 0x1C16CF4
	0x03D14FD4 ADRP X0, 0x44F000
	0x03D14FD8 LDR X0, [X0 + 0xDC8]
	0x03D14FDC BL 0x1C16CF4
	0x03D14FE0 ADRP X0, 0x44F000
	0x03D14FE4 LDR X0, [X0 + 0xDD0]
	0x03D14FE8 BL 0x1C16CF4
	0x03D14FEC ADRP X0, 0x406000
	0x03D14FF0 LDR X0, [X0 + 0xFD8]
	0x03D14FF4 BL 0x1C16CF4
	0x03D14FF8 ADRP X0, 0x44F000
	0x03D14FFC LDR X0, [X0 + 0xDD8]
	0x03D15000 BL 0x1C16CF4
	0x03D15004 ADRP X0, 0x40A000
	0x03D15008 LDR X0, [X0 + 0x5C8]
	0x03D1500C BL 0x1C16CF4
	0x03D15010 ADRP X0, 0x44E000
	0x03D15014 LDR X0, [X0 + 0xDE0]
	0x03D15018 BL 0x1C16CF4
	0x03D1501C ADRP X0, 0x44E000
	0x03D15020 LDR X0, [X0 + 0xDE8]
	0x03D15024 BL 0x1C16CF4
	0x03D15028 ADRP X0, 0x44E000
	0x03D1502C LDR X0, [X0 + 0xDF0]
	0x03D15030 BL 0x1C16CF4
	0x03D15034 ADRP X0, 0x44E000
	0x03D15038 LDR X0, [X0 + 0xDF8]
	0x03D1503C BL 0x1C16CF4
	0x03D15040 ADRP X0, 0x44E000
	0x03D15044 LDR X0, [X0 + 0xE00]
	0x03D15048 BL 0x1C16CF4
	0x03D1504C ADRP X0, 0x405000
	0x03D15050 LDR X0, [X0 + 0xFE0]
	0x03D15054 BL 0x1C16CF4
	0x03D15058 ADRP X0, 0x44E000
	0x03D1505C LDR X0, [X0 + 0xE08]
	0x03D15060 BL 0x1C16CF4
	0x03D15064 ADRP X0, 0x3DE000
	0x03D15068 LDR X0, [X0 + 0x598]
	0x03D1506C BL 0x1C16CF4
	0x03D15070 ADRP X0, 0x408000
	0x03D15074 LDR X0, [X0 + 0xD08]
	0x03D15078 BL 0x1C16CF4
	0x03D1507C ADRP X0, 0x44E000
	0x03D15080 LDR X0, [X0 + 0xE10]
	0x03D15084 BL 0x1C16CF4
	0x03D15088 ADRP X0, 0x44E000
	0x03D1508C LDR X0, [X0 + 0xE18]
	0x03D15090 BL 0x1C16CF4
	0x03D15094 ADRP X0, 0x3DE000
	0x03D15098 LDR X0, [X0 + 0x6C0]
	0x03D1509C BL 0x1C16CF4
	0x03D150A0 MOVZ W8, 0x1
	0x03D150A4 STRB W8, [X20 + 0x8E9]
	0x03D150A8 ADD X8, X31, 0x58
	0x03D150AC STP X31, X8, [X31 + 0x40]
	0x03D150B0 LDR W8, [X19 + 0x10]
	0x03D150B4 ADRP X21, 0x44E000
	0x03D150B8 LDR X21, [X21 + 0xDE8]
	0x03D150BC CMP W8, 0x2
	0x03D150C0 B.EQ 0x3D1515C
	0x03D150C4 CMP W8, 0x1
	0x03D150C8 B.EQ 0x3D15150
	0x03D150CC CBNZ W8, 0x3D15180
	0x03D150D0 MOVN W8, 0x0
	0x03D150D4 STR W8, [X19 + 0x10]
	0x03D150D8 ADRP X8, 0x44E000
	0x03D150DC LDR X8, [X8 + 0xDF8]
	0x03D150E0 LDR X0, [X8]
	0x03D150E4 BL 0x1C16F10
	0x03D150E8 ADRP X8, 0x44E000
	0x03D150EC LDR X8, [X8 + 0xDF0]
	0x03D150F0 MOV X19, X0
	0x03D150F4 LDR X1, [X8]
	0x03D150F8 BL 0x2DBDE08
	0x03D150FC LDR X9, [X31 + 0x58]
	0x03D15100 LDR X8, [X9 + 0x28]
	0x03D15104 STR X19, [X9 + 0x30]
	0x03D15108 CBZ X8, 0x3D15168
	0x03D1510C LDR X0, [X8 + 0x30]
	0x03D15110 CBZ X0, 0x3D1516C
	0x03D15114 ADRP X8, 0x44E000
	0x03D15118 LDR X8, [X8 + 0xE00]
	0x03D1511C LDR X1, [X8]
	0x03D15120 ADD X8, X31, 0x8
	0x03D15124 BL 0x301CB58
	0x03D15128 LDUR V0, [X31 + 0x8]
	0x03D1512C LDR X9, [X31 + 0x18]
	0x03D15130 LDR X8, [X31 + 0x58]
	0x03D15134 MOVN W10, 0x2
	0x03D15138 STR V0, [X31 + 0x2]
	0x03D1513C STR X9, [X31 + 0x30]
	0x03D15140 STR X9, [X8 + 0x48]
	0x03D15144 STUR V0, [X8 + 0x38]
	0x03D15148 STR W10, [X8 + 0x10]
	0x03D1514C B 0x3D154A8
	0x03D15150 MOVN W8, 0x3
	0x03D15154 STR W8, [X19 + 0x10]
	0x03D15158 B 0x3D1523C
	0x03D1515C MOVN W8, 0x4
	0x03D15160 STR W8, [X19 + 0x10]
	0x03D15164 B 0x3D1546C
	0x03D15168 BL 0x1C16F20
	0x03D1516C BL 0x1C16F20
	0x03D15170 B 0x3D1555C
	0x03D15174 B 0x3D1555C
	0x03D15178 B 0x3D1555C
	0x03D1517C B 0x3D1555C
	0x03D15180 MOV W0, W31
	0x03D15184 B 0x3D154DC
	0x03D15188 LDR X8, [X0 + 0x48]
	0x03D1518C STR X8, [X0 + 0x50]
	0x03D15190 CBZ X8, 0x3D151F8
	0x03D15194 MOV X0, X8
	0x03D15198 MOV X1, X31
	0x03D1519C BL 0x3E1DEE8
	0x03D151A0 LDR X8, [X31 + 0x58]
	0x03D151A4 TBZ X0, 0x0, 0x3D15270
	0x03D151A8 LDR X0, [X8 + 0x50]
	0x03D151AC CBZ X0, 0x3D151FC
	0x03D151B0 MOV X1, X31
	0x03D151B4 BL 0x3E1DE70
	0x03D151B8 CBZ X0, 0x3D15200
	0x03D151BC ADRP X8, 0x44E000
	0x03D151C0 LDR X8, [X8 + 0xE08]
	0x03D151C4 LDR X1, [X8]
	0x03D151C8 ADD X8, X31, 0x8
	0x03D151CC BL 0x301CB58
	0x03D151D0 LDUR V0, [X31 + 0x8]
	0x03D151D4 LDR X8, [X31 + 0x18]
	0x03D151D8 LDR X19, [X31 + 0x58]
	0x03D151DC MOVN W9, 0x3
	0x03D151E0 STR V0, [X31 + 0x2]
	0x03D151E4 STR X8, [X31 + 0x30]
	0x03D151E8 STR X8, [X19 + 0x68]
	0x03D151EC STUR V0, [X19 + 0x58]
	0x03D151F0 STR W9, [X19 + 0x10]
	0x03D151F4 B 0x3D15240
	0x03D151F8 BL 0x1C16F20
	0x03D151FC BL 0x1C16F20
	0x03D15200 BL 0x1C16F20
	0x03D15204 B 0x3D1555C
	0x03D15208 B 0x3D1555C
	0x03D1520C B 0x3D1555C
	0x03D15210 B 0x3D1555C
	0x03D15214 B 0x3D1555C
	0x03D15218 LDR X1, [X0 + 0x68]
	0x03D1521C LDR X8, [X0 + 0x30]
	0x03D15220 STR X1, [X0 + 0x70]
	0x03D15224 CBZ X8, 0x3D1530C
	0x03D15228 LDR X2, [X21]
	0x03D1522C MOV X0, X8
	0x03D15230 BL 0x2DBE4B0
	0x03D15234 LDR X19, [X31 + 0x58]
	0x03D15238 TBZ X0, 0x0, 0x3D152D8
	0x03D1523C STR X31, [X19 + 0x70]
	0x03D15240 ADRP X8, 0x44E000
	0x03D15244 LDR X8, [X8 + 0xDC8]
	0x03D15248 ADD X0, X19, 0x58
	0x03D1524C LDR X1, [X8]
	0x03D15250 BL 0x2BC4350
	0x03D15254 MOV W8, W0
	0x03D15258 LDR X0, [X31 + 0x58]
	0x03D1525C TBNZ X8, 0x0, 0x3D15218
	0x03D15260 BL 0x3D155A8
	0x03D15264 LDR X8, [X31 + 0x58]
	0x03D15268 STP X31, X31, [X8 + 0x58]
	0x03D1526C STR X31, [X8 + 0x68]
	0x03D15270 LDR X0, [X8 + 0x50]
	0x03D15274 CBZ X0, 0x3D15308
	0x03D15278 MOV X1, X31
	0x03D1527C BL 0x3E1DE60
	0x03D15280 LDR X8, [X31 + 0x58]
	0x03D15284 TBZ X0, 0x0, 0x3D154A4
	0x03D15288 LDR X0, [X8 + 0x50]
	0x03D1528C CBZ X0, 0x3D15310
	0x03D15290 MOV X1, X31
	0x03D15294 BL 0x3E1DDE8
	0x03D15298 CBZ X0, 0x3D15314
	0x03D1529C ADRP X8, 0x405000
	0x03D152A0 LDR X8, [X8 + 0xFE0]
	0x03D152A4 LDR X1, [X8]
	0x03D152A8 ADD X8, X31, 0x8
	0x03D152AC BL 0x301CB58
	0x03D152B0 LDUR V0, [X31 + 0x8]
	0x03D152B4 LDR X9, [X31 + 0x18]
	0x03D152B8 LDR X8, [X31 + 0x58]
	0x03D152BC MOVN W10, 0x4
	0x03D152C0 STR V0, [X31 + 0x2]
	0x03D152C4 STR X9, [X31 + 0x30]
	0x03D152C8 STR X9, [X8 + 0x88]
	0x03D152CC STUR V0, [X8 + 0x78]
	0x03D152D0 STR W10, [X8 + 0x10]
	0x03D152D4 B 0x3D15474
	0x03D152D8 LDR X0, [X19 + 0x30]
	0x03D152DC CBZ X0, 0x3D15318
	0x03D152E0 ADRP X8, 0x44E000
	0x03D152E4 LDR X1, [X19 + 0x70]
	0x03D152E8 LDR X8, [X8 + 0xDE0]
	0x03D152EC LDR X2, [X8]
	0x03D152F0 BL 0x2DBEF30
	0x03D152F4 LDR X8, [X31 + 0x58]
	0x03D152F8 MOVZ W0, 0x1
	0x03D152FC LDR X9, [X8 + 0x70]
	0x03D15300 STR W0, [X8 + 0x10]
	0x03D15304 B 0x3D15344
	0x03D15308 BL 0x1C16F20
	0x03D1530C BL 0x1C16F20
	0x03D15310 BL 0x1C16F20
	0x03D15314 BL 0x1C16F20
	0x03D15318 BL 0x1C16F20
	0x03D1531C B 0x3D1555C
	0x03D15320 B 0x3D1555C
	0x03D15324 B 0x3D1555C
	0x03D15328 B 0x3D1555C
	0x03D1532C B 0x3D1555C
	0x03D15330 B 0x3D1555C
	0x03D15334 B 0x3D1555C
	0x03D15338 B 0x3D1555C
	0x03D1533C B 0x3D1555C
	0x03D15340 B 0x3D1555C
	0x03D15344 STR X9, [X8 + 0x18]
	0x03D15348 B 0x3D154DC
	0x03D1534C B 0x3D1555C
	0x03D15350 LDR X19, [X0 + 0x88]
	0x03D15354 ADRP X8, 0x3DE000
	0x03D15358 LDR X8, [X8 + 0x6C0]
	0x03D1535C STR X19, [X0 + 0x90]
	0x03D15360 LDR X0, [X8]
	0x03D15364 ADRP X8, 0x44E000
	0x03D15368 LDR X8, [X8 + 0xE10]
	0x03D1536C LDR W9, [X0 + 0xE0]
	0x03D15370 LDR X20, [X8]
	0x03D15374 CBNZ W9, 0x3D1537C
	0x03D15378 BL 0x1C16DFC
	0x03D1537C MOV X0, X20
	0x03D15380 MOV X1, X31
	0x03D15384 BL 0x338C698
	0x03D15388 ADRP X8, 0x40A000
	0x03D1538C LDR X8, [X8 + 0x5C8]
	0x03D15390 MOV X20, X0
	0x03D15394 LDR X0, [X8]
	0x03D15398 LDR W8, [X0 + 0xE0]
	0x03D1539C CBNZ W8, 0x3D153A4
	0x03D153A0 BL 0x1C16DFC
	0x03D153A4 MOV X0, X31
	0x03D153A8 BL 0x3C6FDD0
	0x03D153AC ADRP X8, 0x408000
	0x03D153B0 LDR X8, [X8 + 0xD08]
	0x03D153B4 MOV V8.16B, V0.16B
	0x03D153B8 LDR X0, [X8]
	0x03D153BC LDR W8, [X0 + 0xE0]
	0x03D153C0 CBNZ W8, 0x3D153C8
	0x03D153C4 BL 0x1C16DFC
	0x03D153C8 MOV X0, X19
	0x03D153CC MOV X1, X20
	0x03D153D0 MOV V0.16B, V8.16B
	0x03D153D4 MOV X2, X31
	0x03D153D8 BL 0x3DBCEFC
	0x03D153DC ADRP X8, 0x3DE000
	0x03D153E0 LDR X8, [X8 + 0x598]
	0x03D153E4 CBZ X0, 0x3D15408
	0x03D153E8 ADRP X9, 0x44E000
	0x03D153EC LDR X9, [X9 + 0xE18]
	0x03D153F0 LDR X10, [X0]
	0x03D153F4 LDR X9, [X9]
	0x03D153F8 LDRB W12, [X10 + 0x130]
	0x03D153FC LDRB W11, [X9 + 0x130]
	0x03D15400 CMP W12, W11
	0x03D15404 B.CS 0x3D15410
	0x03D15408 MOV X19, X31
	0x03D1540C B 0x3D15424
	0x03D15410 LDR X10, [X10 + 0xC8]
	0x03D15414 ADD X10, X10, X11, 0x3, LSL
	0x03D15418 LDUR X10, [X10 - 0x8]
	0x03D1541C CMP X10, X9
	0x03D15420 CSEL X19, X0, X31, EQ
	0x03D15424 LDR X9, [X31 + 0x58]
	0x03D15428 STR X19, [X9 + 0x98]
	0x03D1542C LDR X0, [X8]
	0x03D15430 LDR W8, [X0 + 0xE0]
	0x03D15434 CBNZ W8, 0x3D1543C
	0x03D15438 BL 0x1C16DFC
	0x03D1543C MOV X0, X19
	0x03D15440 MOV X1, X31
	0x03D15444 MOV X2, X31
	0x03D15448 BL 0x3C354F8
	0x03D1544C TBZ X0, 0x0, 0x3D1546C
	0x03D15450 LDR X8, [X31 + 0x58]
	0x03D15454 LDR X0, [X8 + 0x30]
	0x03D15458 CBZ X0, 0x3D15528
	0x03D1545C LDR X1, [X8 + 0x98]
	0x03D15460 LDR X2, [X21]
	0x03D15464 BL 0x2DBE4B0

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+80], X30
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Subtract X31, X31, 880
	017 Move X21, 0x6D4000
	018 Move X22, 0x3E0000
	019 Move W8, [X21+2274]
	020 Move X22, [X22+1432]
	021 Move X19, X1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {38}
	027 Move X0, 0x40C000
	028 Move X0, [X0+1480]
	029 Call 0x1C17CF4
	030 Move X0, 0x409000
	031 Move X0, [X0+3712]
	032 Call 0x1C17CF4
	033 Move X0, 0x3E0000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+2274], W8
	038 Move X0, [X22]
	039 Move [X31+600], X31
	040 Move [X31+592], X31
	041 Move X21, [X20+976]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X21
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {82}
	054 Move X0, [X22]
	055 Move X21, [X20+984]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X21
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {82}
	068 Move X0, [X22]
	069 Move X21, [X20+992]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X0, X21
	075 Move X1, X31
	076 Move X2, X31
	077 Call Object.op_Equality, X0, X1
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {352}
	082 Move X21, 0x40B000
	083 Move X21, [X21+1480]
	084 Move X0, X20
	085 Move X1, X31
	086 Call VisualElement.get_contentRect, X0
	087 Move X0, [X21]
	088 Move V8, V0
	089 Move V9, V1
	090 Move V10, V2
	091 Move W8, [X0+224]
	092 Move V11, V3
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move V0, V8
	097 Move V1, V9
	098 Move V2, V10
	099 Move V3, V11
	100 Move X0, X31
	101 Call GUIUtility.AlignRectToDevice, X0
	102 Move V11, V0
	103 NotImplemented "Instruction MOVI not yet implemented."
	104 Add X0, X31, 608
	105 Move W2, 240
	106 Move W1, W31
	107 Move V10, V1
	108 Move V9, V2
	109 Move V8, V3
	110 Move [X31+848], V0
	111 Move [X31+856], V0
	112 Call 0x3EB2B10
	113 Move X0, [X22]
	114 Move X21, [X20+976]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X0, X21
	120 Move X1, X31
	121 Move X2, X31
	122 Call Object.op_Inequality, X0, X1
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {155}
	127 Move V12, [X20+1000]
	128 Move V13, [X20+1004]
	129 Move V14, [X20+1008]
	130 Move V15, [X20+1012]
	131 Move X21, [X20+976]
	132 Move W22, [X20+968]
	133 Move X0, X20
	134 Move X1, X31
	135 Call VisualElement.get_panel, X0
	136 Compare X0, 0
	137 JumpIfEqual {369}
	138 Move X10, 0x408000
	139 Move X8, [X0]
	140 Move X10, [X10+3712]
	141 Move X23, X0
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Move X1, [X10]
	144 Compare X9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move W2, 2
	153 Move X0, X23
	154 Call 0x1C5D788
	155 Move X0, [X22]
	156 Move X21, [X20+984]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {161}
	160 Call 0x1C17DFC
	161 Move X0, X21
	162 Move X1, X31
	163 Move X2, X31
	164 Call Object.op_Inequality, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {212}
	169 Move X21, 0x6C4000
	170 Move W8, [X21+3674]
	171 Compare W8, 0
	172 JumpIfNotEqual {178}
	173 Move X0, 0x3E6000
	174 Move X0, [X0+2464]
	175 Call 0x1C17CF4
	176 Move W8, 1
	177 Move [X21+3674], W8
	178 Move X8, 0x3E6000
	179 Move X8, [X8+2464]
	180 Move X0, X20
	181 Move X1, X31
	182 Move X8, [X8]
	183 Move X8, [X8+184]
	184 Move V0, [X8]
	185 Move [X31+37], V0
	186 Move V12, [X20+1000]
	187 Move V13, [X20+1004]
	188 Move V14, [X20+1008]
	189 Move V15, [X20+1012]
	190 Move X21, [X20+984]
	191 Move W22, [X20+968]
	192 Call VisualElement.get_panel, X0
	193 Compare X0, 0
	194 JumpIfEqual {369}
	195 Move X10, 0x408000
	196 Move X8, [X0]
	197 Move X10, [X10+3712]
	198 Move X23, X0
	199 NotImplemented "Instruction LDRH not yet implemented."
	200 Move X1, [X10]
	201 Compare X9, 0
	202 JumpIfEqual {209}
	203 Move X10, [X8+176]
	204 Add X10, X10, 8
	205 NotImplemented "Instruction LDUR not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Subtract X9, X9, 1
	208 Add X10, X10, 16
	209 Move W2, 2
	210 Move X0, X23
	211 Call 0x1C5D788
	212 Move X0, [X22]
	213 Move X21, [X20+992]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Move X0, X21
	219 Move X1, X31
	220 Move X2, X31
	221 Call Object.op_Inequality, X0, X1
	222 Move TEMP, X0
	223 And TEMP, TEMP, 1
	224 Compare TEMP, 1
	225 JumpIfNotEqual {334}
	226 Move V12, [X20+1000]
	227 Move V13, [X20+1004]
	228 Move V14, [X20+1008]
	229 Move V15, [X20+1012]
	230 Move X21, [X20+992]
	231 Move W22, [X20+968]
	232 Move X0, X20
	233 Move X1, X31
	234 Call VisualElement.get_panel, X0
	235 Compare X0, 0
	236 JumpIfEqual {369}
	237 Move X10, 0x408000
	238 Move X8, [X0]
	239 Move X10, [X10+3712]
	240 Move X23, X0
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Move X1, [X10]
	243 Compare X9, 0
	244 JumpIfEqual {251}
	245 Move X10, [X8+176]
	246 Add X10, X10, 8
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Subtract X9, X9, 1
	250 Add X10, X10, 16
	251 Move W2, 2
	252 Move X0, X23
	253 Call 0x1C5D788
	254 Move W9, [X10]
	255 Add W9, W9, 2
	256 Add X8, X8, W9
	257 Add X0, X8, 312
	258 Move X8, [X0]
	259 Move X1, [X0+8]
	260 Move X0, X23
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Move W2, W0
	263 Add X8, X31, 304
	264 Move V0, V11
	265 Move V1, V10
	266 Move V2, V9
	267 Move V3, V8
	268 Move V4, V12
	269 Move V5, V13
	270 Move V6, V14
	271 Move V7, V15
	272 Move X0, X21
	273 Move W1, W22
	274 Move X3, X31
	275 Add X23, X31, 304
	276 Call RectangleParams.MakeTextured, X0, X1, X2, X3, X4
	277 Move W9, [X10]
	278 Add W9, W9, 2
	279 Add X8, X8, W9
	280 Add X0, X8, 312
	281 Move X8, [X0]
	282 Move X1, [X0+8]
	283 Move X0, X23
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Move W2, W0
	286 Add X8, X31, 304
	287 Add X4, X31, 592
	288 Move V0, V11
	289 Move V1, V10
	290 Move V2, V9
	291 Move V3, V8
	292 Move V4, V12
	293 Move V5, V13
	294 Move V6, V14
	295 Move V7, V15
	296 Move X0, X21
	297 Move W1, W22
	298 Move W3, W31
	299 Move W5, W31
	300 Move X6, X31
	301 Add X23, X31, 304
	302 Call RectangleParams.MakeSprite, X0, X1, X2, X3, X4, X5, X6, X7
	303 Move W9, [X10]
	304 Add W9, W9, 2
	305 Add X8, X8, W9
	306 Add X0, X8, 312
	307 Move X8, [X0]
	308 Move X1, [X0+8]
	309 Move X0, X23
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move W2, W0
	312 Add X8, X31, 304
	313 Move V0, V11
	314 Move V1, V10
	315 Move V2, V9
	316 Move V3, V8
	317 Move V4, V12
	318 Move V5, V13
	319 Move V6, V14
	320 Move V7, V15
	321 Move X0, X21
	322 Move W1, W22
	323 Move X3, X31
	324 Add X23, X31, 304
	325 Call RectangleParams.MakeVectorTextured, X0, X1, X2, X3, X4
	326 Move V0, [X31+304]
	327 Move V1, [X31+320]
	328 Add X1, X23, 48
	329 Add X0, X31, 608
	330 Move W2, 240
	331 Move [X31+848], V0
	332 Move [X31+856], V1
	333 Call 0x3EB2AC0
	334 Add X8, X20, 1016
	335 Move V0, [X31+848]
	336 Move V1, [X31+864]
	337 Move V2, [X8]
	338 Add X9, X31, 16
	339 Add X0, X9, 48
	340 Add X1, X31, 608
	341 Move W2, 240
	342 Move [X31], V2
	343 Move [X31+8], V0
	344 Move [X31+2], V1
	345 Call 0x3EB2AC0
	346 Move V0, [X31]
	347 Add X1, X31, 16
	348 Move X0, X19
	349 Move X2, X31
	350 Move [X31+3], V0
	351 Call MeshGenerationContextUtils.Rectangle, X0, X1
	352 Add X31, X31, 880
	353 Move X20, [X31+112]
	354 Move X19, [X31+120]
	355 Move X22, [X31+96]
	356 Move X21, [X31+104]
	357 Move X30, [X31+80]
	358 Move X23, [X31+88]
	359 Move X29, [X31+64]
	360 Move D9, [X31+48]
	361 Move D8, [X31+56]
	362 Move D11, [X31+32]
	363 Move D10, [X31+40]
	364 Move D13, [X31+16]
	365 Move D12, [X31+24]
	366 Move D15, [X31+128]
	367 Move D14, [X31+136]
	368 Return 
	369 Call 0x1C17F20

Method: System.Void OnCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent e)

Disassembly:
	0x03D15468 TBZ X0, 0x0, 0x3D154F0
	0x03D1546C LDR X8, [X31 + 0x58]
	0x03D15470 STP X31, X31, [X8 + 0x90]
	0x03D15474 ADRP X9, 0x405000
	0x03D15478 LDR X9, [X9 + 0xFD0]
	0x03D1547C ADD X0, X8, 0x78
	0x03D15480 LDR X1, [X9]
	0x03D15484 BL 0x2BC4350
	0x03D15488 MOV W8, W0
	0x03D1548C LDR X0, [X31 + 0x58]
	0x03D15490 TBNZ X8, 0x0, 0x3D15350

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {13}
	005 Move X19, X0
	006 Move X0, X1
	007 Move X1, X31
	008 Call CustomStyleResolvedEvent.get_customStyle, X0
	009 Move X1, X0
	010 Move X0, X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call 0x1C17F20

Method: System.Void ReadCustomProperties(UnityEngine.UIElements.ICustomStyle customStyleProvider)

Disassembly:
	0x03D15494 BL 0x3D155F8
	0x03D15498 LDR X8, [X31 + 0x58]
	0x03D1549C STP X31, X31, [X8 + 0x78]
	0x03D154A0 STR X31, [X8 + 0x88]
	0x03D154A4 STR X31, [X8 + 0x50]
	0x03D154A8 ADRP X9, 0x44E000
	0x03D154AC LDR X9, [X9 + 0xDC0]
	0x03D154B0 ADD X0, X8, 0x38
	0x03D154B4 LDR X1, [X9]
	0x03D154B8 BL 0x2BC4350
	0x03D154BC MOV W8, W0
	0x03D154C0 LDR X0, [X31 + 0x58]
	0x03D154C4 TBNZ X8, 0x0, 0x3D15188
	0x03D154C8 BL 0x3D15648
	0x03D154CC LDR X8, [X31 + 0x58]
	0x03D154D0 MOV W0, W31
	0x03D154D4 STP X31, X31, [X8 + 0x38]
	0x03D154D8 STR X31, [X8 + 0x48]
	0x03D154DC LDP X20, X19, [X31 + 0x70]
	0x03D154E0 LDP X30, X21, [X31 + 0x60]
	0x03D154E4 LDR V8, [X31 + 0x50]
	0x03D154E8 ADD X31, X31, 0x80
	0x03D154EC RET
	0x03D154F0 LDR X8, [X31 + 0x58]
	0x03D154F4 LDR X0, [X8 + 0x30]
	0x03D154F8 CBZ X0, 0x3D1552C
	0x03D154FC LDR X1, [X8 + 0x98]
	0x03D15500 ADRP X8, 0x44E000
	0x03D15504 LDR X8, [X8 + 0xDE0]
	0x03D15508 LDR X2, [X8]
	0x03D1550C BL 0x2DBEF30
	0x03D15510 LDR X8, [X31 + 0x58]
	0x03D15514 MOVZ W10, 0x2
	0x03D15518 MOVZ W0, 0x1
	0x03D1551C LDR X9, [X8 + 0x98]
	0x03D15520 STR W10, [X8 + 0x10]
	0x03D15524 B 0x3D15344
	0x03D15528 BL 0x1C16F20
	0x03D1552C BL 0x1C16F20
	0x03D15530 B 0x3D1555C
	0x03D15534 B 0x3D1555C
	0x03D15538 B 0x3D1555C
	0x03D1553C B 0x3D1555C
	0x03D15540 B 0x3D1555C
	0x03D15544 B 0x3D1555C
	0x03D15548 B 0x3D1555C
	0x03D1554C B 0x3D1555C
	0x03D15550 B 0x3D1555C
	0x03D15554 B 0x3D1555C
	0x03D15558 B 0x3D1555C
	0x03D1555C CMP W1, 0x1
	0x03D15560 B.NE 0x3D15590
	0x03D15564 BL 0x3EB1AD0
	0x03D15568 LDR X19, [X0]
	0x03D1556C STR X19, [X31 + 0x40]
	0x03D15570 BL 0x3EB1AE0
	0x03D15574 CBZ X19, 0x3D15180
	0x03D15578 ADD X8, X31, 0x40
	0x03D1557C ADD X0, X8, 0x8
	0x03D15580 BL 0x1C0FC88
	0x03D15584 MOV X0, X19
	0x03D15588 BL 0x1C16F18
	0x03D1558C CBNZ X19, 0x3D15594
	0x03D15590 BL 0x1D2C690
	0x03D15594 LDR X0, [X31 + 0x58]
	0x03D15598 BL 0x3D14EAC
	0x03D1559C MOV X0, X19
	0x03D155A0 BL 0x1C16F18
	0x03D155A4 BL 0x1990590
	0x03D155A8 STP X30, X21, [X31 - 0x20]!
	0x03D155AC STP X20, X19, [X31 + 0x10]
	0x03D155B0 ADRP X21, 0x6D2000
	0x03D155B4 ADRP X20, 0x44E000
	0x03D155B8 LDRB W8, [X21 + 0x8EB]
	0x03D155BC LDR X20, [X20 + 0xE20]
	0x03D155C0 MOV X19, X0
	0x03D155C4 TBNZ X8, 0x0, 0x3D155DC
	0x03D155C8 ADRP X0, 0x44E000
	0x03D155CC LDR X0, [X0 + 0xE20]
	0x03D155D0 BL 0x1C16CF4
	0x03D155D4 MOVZ W8, 0x1
	0x03D155D8 STRB W8, [X21 + 0x8EB]
	0x03D155DC MOVN W8, 0x2
	0x03D155E0 STR W8, [X19 + 0x10]
	0x03D155E4 LDR X1, [X20]
	0x03D155E8 ADD X0, X19, 0x58
	0x03D155EC LDP X20, X19, [X31 + 0x10]
	0x03D155F0 LDP X30, X21, [X31], #0x20
	0x03D155F4 B 0x2BC434C
	0x03D155F8 STP X30, X21, [X31 - 0x20]!
	0x03D155FC STP X20, X19, [X31 + 0x10]
	0x03D15600 ADRP X21, 0x6D2000
	0x03D15604 ADRP X20, 0x405000
	0x03D15608 LDRB W8, [X21 + 0x8EC]
	0x03D1560C LDR X20, [X20 + 0xFC8]
	0x03D15610 MOV X19, X0
	0x03D15614 TBNZ X8, 0x0, 0x3D1562C
	0x03D15618 ADRP X0, 0x405000
	0x03D1561C LDR X0, [X0 + 0xFC8]
	0x03D15620 BL 0x1C16CF4
	0x03D15624 MOVZ W8, 0x1
	0x03D15628 STRB W8, [X21 + 0x8EC]
	0x03D1562C MOVN W8, 0x2
	0x03D15630 STR W8, [X19 + 0x10]
	0x03D15634 LDR X1, [X20]
	0x03D15638 ADD X0, X19, 0x78
	0x03D1563C LDP X20, X19, [X31 + 0x10]
	0x03D15640 LDP X30, X21, [X31], #0x20
	0x03D15644 B 0x2BC434C
	0x03D15648 STP X30, X21, [X31 - 0x20]!
	0x03D1564C STP X20, X19, [X31 + 0x10]
	0x03D15650 ADRP X21, 0x6D2000
	0x03D15654 ADRP X20, 0x44E000
	0x03D15658 LDRB W8, [X21 + 0x8EA]
	0x03D1565C LDR X20, [X20 + 0xE28]
	0x03D15660 MOV X19, X0
	0x03D15664 TBNZ X8, 0x0, 0x3D1567C
	0x03D15668 ADRP X0, 0x44E000
	0x03D1566C LDR X0, [X0 + 0xE28]
	0x03D15670 BL 0x1C16CF4
	0x03D15674 MOVZ W8, 0x1
	0x03D15678 STRB W8, [X21 + 0x8EA]
	0x03D1567C MOVN W8, 0x0
	0x03D15680 STR W8, [X19 + 0x10]
	0x03D15684 LDR X1, [X20]
	0x03D15688 ADD X0, X19, 0x38
	0x03D1568C LDP X20, X19, [X31 + 0x10]
	0x03D15690 LDP X30, X21, [X31], #0x20
	0x03D15694 B 0x2BC434C
	0x03D15698 LDR X0, [X0 + 0x18]
	0x03D1569C RET
	0x03D156A0 STP X30, X19, [X31 - 0x10]!
	0x03D156A4 ADRP X0, 0x3DE000
	0x03D156A8 LDR X0, [X0 + 0xB40]
	0x03D156AC BL 0x1C16D08
	0x03D156B0 BL 0x1C16F10
	0x03D156B4 MOV X1, X31
	0x03D156B8 MOV X19, X0
	0x03D156BC BL 0x3380310
	0x03D156C0 ADRP X0, 0x44E000
	0x03D156C4 LDR X0, [X0 + 0xE30]
	0x03D156C8 BL 0x1C16D08
	0x03D156CC MOV X1, X0
	0x03D156D0 MOV X0, X19
	0x03D156D4 BL 0x1C16DEC
	0x03D156D8 LDR X0, [X0 + 0x18]
	0x03D156DC RET
	0x03D156E0 STR X30, [X31 - 0x20]!
	0x03D156E4 STP X20, X19, [X31 + 0x10]
	0x03D156E8 ADRP X20, 0x6D2000
	0x03D156EC LDRB W8, [X20 + 0x8ED]
	0x03D156F0 MOV X19, X0
	0x03D156F4 TBNZ X8, 0x0, 0x3D1570C
	0x03D156F8 ADRP X0, 0x44E000
	0x03D156FC LDR X0, [X0 + 0xE38]
	0x03D15700 BL 0x1C16CF4
	0x03D15704 MOVZ W8, 0x1
	0x03D15708 STRB W8, [X20 + 0x8ED]
	0x03D1570C LDR W8, [X19 + 0x10]
	0x03D15710 ADDS W31, W8, 0x2
	0x03D15714 B.NE 0x3D15734
	0x03D15718 LDR W20, [X19 + 0x20]
	0x03D1571C MOV X0, X31
	0x03D15720 BL 0x33C151C
	0x03D15724 CMP W20, W0
	0x03D15728 B.NE 0x3D15734
	0x03D1572C STR W31, [X19 + 0x10]
	0x03D15730 B 0x3D1576C
	0x03D15734 ADRP X8, 0x44E000
	0x03D15738 LDR X8, [X8 + 0xE38]
	0x03D1573C LDR X0, [X8]
	0x03D15740 BL 0x1C16F10
	0x03D15744 MOV X1, X31
	0x03D15748 MOV X20, X0
	0x03D1574C BL 0x33BDD8C
	0x03D15750 MOV X0, X31
	0x03D15754 STR W31, [X20 + 0x10]
	0x03D15758 BL 0x33C151C
	0x03D1575C STR W0, [X20 + 0x20]
	0x03D15760 LDR X8, [X19 + 0x28]
	0x03D15764 MOV X19, X20
	0x03D15768 STR X8, [X20 + 0x28]
	0x03D1576C MOV X0, X19
	0x03D15770 LDP X20, X19, [X31 + 0x10]
	0x03D15774 LDR X30, [X31], #0x20
	0x03D15778 RET
	0x03D1577C B 0x3D156E0
	0x03D15780 STR X30, [X31 - 0x20]!
	0x03D15784 STP X20, X19, [X31 + 0x10]
	0x03D15788 MOV W19, W1
	0x03D1578C MOV X1, X31
	0x03D15790 MOV X20, X0
	0x03D15794 BL 0x33BDD8C
	0x03D15798 MOV X0, X31
	0x03D1579C STR W19, [X20 + 0x10]
	0x03D157A0 BL 0x33C151C
	0x03D157A4 STR W0, [X20 + 0x20]
	0x03D157A8 LDP X20, X19, [X31 + 0x10]
	0x03D157AC LDR X30, [X31], #0x20
	0x03D157B0 RET
	0x03D157B4 LDR W8, [X0 + 0x10]
	0x03D157B8 ADD W8, W8, 0x3
	0x03D157BC CMP W8, 0x5
	0x03D157C0 B.HI 0x3D157DC
	0x03D157C4 MOVZ W9, 0x1
	0x03D157C8 LSLV W8, W9, W8
	0x03D157CC MOVZ W9, 0x31
	0x03D157D0 ANDS W31, W8, W9, 0x0
	0x03D157D4 B.EQ 0x3D157DC
	0x03D157D8 B 0x3D15CE0
	0x03D157DC RET
	0x03D157E0 SUB X31, X31, 0xA0
	0x03D157E4 STR D8, [X31 + 0x70]
	0x03D157E8 STR X30, [X31 + 0x78]
	0x03D157EC STP X22, X21, [X31 + 0x80]
	0x03D157F0 STP X20, X19, [X31 + 0x90]
	0x03D157F4 ADRP X20, 0x6D2000
	0x03D157F8 LDRB W8, [X20 + 0x8EE]
	0x03D157FC MOV X19, X0
	0x03D15800 STR X0, [X31 + 0x68]
	0x03D15804 TBNZ X8, 0x0, 0x3D158B8
	0x03D15808 ADRP X0, 0x44E000
	0x03D1580C LDR X0, [X0 + 0xE40]
	0x03D15810 BL 0x1C16CF4
	0x03D15814 ADRP X0, 0x44E000
	0x03D15818 LDR X0, [X0 + 0xE48]
	0x03D1581C BL 0x1C16CF4
	0x03D15820 ADRP X0, 0x40A000
	0x03D15824 LDR X0, [X0 + 0x5C8]
	0x03D15828 BL 0x1C16CF4
	0x03D1582C ADRP X0, 0x44E000
	0x03D15830 LDR X0, [X0 + 0xE50]
	0x03D15834 BL 0x1C16CF4
	0x03D15838 ADRP X0, 0x44E000
	0x03D1583C LDR X0, [X0 + 0xE58]
	0x03D15840 BL 0x1C16CF4
	0x03D15844 ADRP X0, 0x44E000
	0x03D15848 LDR X0, [X0 + 0xE60]
	0x03D1584C BL 0x1C16CF4
	0x03D15850 ADRP X0, 0x44E000
	0x03D15854 LDR X0, [X0 + 0xE68]
	0x03D15858 BL 0x1C16CF4
	0x03D1585C ADRP X0, 0x44E000
	0x03D15860 LDR X0, [X0 + 0xE70]
	0x03D15864 BL 0x1C16CF4
	0x03D15868 ADRP X0, 0x44E000
	0x03D1586C LDR X0, [X0 + 0xE78]
	0x03D15870 BL 0x1C16CF4
	0x03D15874 ADRP X0, 0x3DE000
	0x03D15878 LDR X0, [X0 + 0x598]
	0x03D1587C BL 0x1C16CF4
	0x03D15880 ADRP X0, 0x408000
	0x03D15884 LDR X0, [X0 + 0xD08]
	0x03D15888 BL 0x1C16CF4
	0x03D1588C ADRP X0, 0x3DE000
	0x03D15890 LDR X0, [X0 + 0x6C0]
	0x03D15894 BL 0x1C16CF4
	0x03D15898 ADRP X0, 0x44E000
	0x03D1589C LDR X0, [X0 + 0xE80]
	0x03D158A0 BL 0x1C16CF4
	0x03D158A4 ADRP X0, 0x44E000
	0x03D158A8 LDR X0, [X0 + 0xE88]
	0x03D158AC BL 0x1C16CF4
	0x03D158B0 MOVZ W8, 0x1
	0x03D158B4 STRB W8, [X20 + 0x8EE]
	0x03D158B8 ADD X8, X31, 0x68
	0x03D158BC STR X8, [X31 + 0x60]
	0x03D158C0 LDR W8, [X19 + 0x10]
	0x03D158C4 CMP W8, 0x2
	0x03D158C8 B.EQ 0x3D15984
	0x03D158CC CMP W8, 0x1
	0x03D158D0 B.EQ 0x3D15978
	0x03D158D4 CBNZ W8, 0x3D159B0
	0x03D158D8 LDR X8, [X19 + 0x28]
	0x03D158DC MOVN W9, 0x0
	0x03D158E0 STR W9, [X19 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0x6D3000
	009 Move W8, [X21+2275]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x409000
	017 Move X0, [X0+1664]
	018 Call 0x1C17CF4
	019 Move X0, 0x44F000
	020 Move X0, [X0+3384]
	021 Call 0x1C17CF4
	022 Move X0, 0x44F000
	023 Move X0, [X0+3376]
	024 Call 0x1C17CF4
	025 Move X0, 0x44F000
	026 Move X0, [X0+3392]
	027 Call 0x1C17CF4
	028 Move X0, 0x44F000
	029 Move X0, [X0+3424]
	030 Call 0x1C17CF4
	031 Move X0, 0x44F000
	032 Move X0, [X0+3432]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+2275], W8
	036 Move [X31+48], X31
	037 Move [X31+56], X31
	038 Move [X31+32], X31
	039 Move [X31+40], X31
	040 Move [X31+16], X31
	041 Move [X31+24], X31
	042 Move [X31+12], W31
	043 Move W8, [X19+1032]
	044 Compare W8, 0
	045 JumpIfNotEqual {138}
	046 Move X22, 0x44F000
	047 Move X22, [X22+3424]
	048 Move X0, [X22]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Compare X20, 0
	054 JumpIfEqual {308}
	055 Move X9, [X22]
	056 Move X23, 0x409000
	057 Move X8, [X20]
	058 Move X10, [X9+184]
	059 Move X23, [X23+1664]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X21, [X10+8]
	062 Move X1, [X23]
	063 Compare X9, 0
	064 JumpIfEqual {71}
	065 Move X10, [X8+176]
	066 Add X10, X10, 8
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract X9, X9, 1
	070 Add X10, X10, 16
	071 Move W2, 3
	072 Move X0, X20
	073 Call 0x1C5D788
	074 Move W9, [X10]
	075 Add W9, W9, 3
	076 Add X8, X8, W9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X3, [X0+8]
	080 Add X2, X31, 32
	081 Move X0, X20
	082 Move X1, X21
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {93}
	088 Move X8, 0x44F000
	089 Move X1, [X31+32]
	090 Move X8, [X8+3376]
	091 Add X2, X19, 976
	092 Add X3, X19, 984
	093 Move X0, [X22]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X22]
	099 Move X9, [X0+184]
	100 Move X8, [X20]
	101 Move X1, [X23]
	102 Move X21, [X9+16]
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move W2, 4
	113 Move X0, X20
	114 Call 0x1C5D788
	115 Move W9, [X10]
	116 Add W9, W9, 4
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X3, [X0+8]
	121 Add X2, X31, 24
	122 Move X0, X20
	123 Move X1, X21
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {263}
	129 Move X8, 0x44F000
	130 Move X1, [X31+24]
	131 Move X8, [X8+3384]
	132 Add X2, X19, 984
	133 Add X3, X19, 976
	134 Move X5, [X8]
	135 Add X4, X19, 992
	136 Move X0, X19
	137 Call 0x3D15B8C
	138 Move W8, [X19+1033]
	139 Compare W8, 0
	140 JumpIfNotEqual {204}
	141 Move X21, 0x44F000
	142 Move X21, [X21+3424]
	143 Move X0, [X21]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Compare X20, 0
	149 JumpIfEqual {308}
	150 Move X9, [X21]
	151 Move X11, 0x409000
	152 Move X8, [X20]
	153 Move X10, [X9+184]
	154 Move X11, [X11+1664]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Move X21, [X10+32]
	157 Move X1, [X11]
	158 Compare X9, 0
	159 JumpIfEqual {166}
	160 Move X10, [X8+176]
	161 Add X10, X10, 8
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract X9, X9, 1
	165 Add X10, X10, 16
	166 Move W2, 6
	167 Move X0, X20
	168 Call 0x1C5D788
	169 Move W9, [X10]
	170 Add W9, W9, 6
	171 Add X8, X8, W9
	172 Add X0, X8, 312
	173 Move X8, [X0]
	174 Move X3, [X0+8]
	175 Add X2, X31, 56
	176 Move X0, X20
	177 Move X1, X21
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {204}
	183 Move X8, 0x44F000
	184 Move X8, [X8+3432]
	185 Move X21, [X31+56]
	186 Move X0, [X8]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Add X2, X31, 12
	192 Move W0, 14
	193 Move X1, X21
	194 Move X3, X31
	195 Call StylePropertyUtil.TryGetEnumIntValue, X0, X1, X2
	196 Move W8, [X31+12]
	197 Move W9, [X19+968]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move W1, 2048
	200 Move X0, X19
	201 Move X2, X31
	202 Move [X19+968], W8
	203 Call VisualElement.IncrementVersion, X0, X1
	204 Move W8, [X19+1034]
	205 Compare W8, 0
	206 JumpIfNotEqual {255}
	207 Move X21, 0x44F000
	208 Move X21, [X21+3424]
	209 Move X0, [X21]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Compare X20, 0
	215 JumpIfEqual {308}
	216 Move X9, [X21]
	217 Move X11, 0x409000
	218 Move X8, [X20]
	219 Move X10, [X9+184]
	220 Move X11, [X11+1664]
	221 NotImplemented "Instruction LDRH not yet implemented."
	222 Move X21, [X10+40]
	223 Move X1, [X11]
	224 Compare X9, 0
	225 JumpIfEqual {232}
	226 Move X10, [X8+176]
	227 Add X10, X10, 8
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Subtract X9, X9, 1
	231 Add X10, X10, 16
	232 Move W2, 2
	233 Move X0, X20
	234 Call 0x1C5D788
	235 Move W9, [X10]
	236 Add W9, W9, 2
	237 Add X8, X8, W9
	238 Add X0, X8, 312
	239 Move X8, [X0]
	240 Move X3, [X0+8]
	241 Add X2, X31, 40
	242 Move X0, X20
	243 Move X1, X21
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {255}
	249 Move S0, [X31+40]
	250 Move S1, [X31+44]
	251 Move S2, [X31+48]
	252 Move S3, [X31+52]
	253 Move X0, X19
	254 Call Image.SetTintColor, X0, X1
	255 Move X20, [X31+96]
	256 Move X19, [X31+104]
	257 Move X22, [X31+80]
	258 Move X21, [X31+88]
	259 Move X30, [X31+64]
	260 Move X23, [X31+72]
	261 Add X31, X31, 112
	262 Return 
	263 Move X0, [X22]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {269}
	267 Call 0x1C17DFC
	268 Move X0, [X22]
	269 Move X9, [X0+184]
	270 Move X8, [X20]
	271 Move X1, [X23]
	272 Move X21, [X9+24]
	273 NotImplemented "Instruction LDRH not yet implemented."
	274 Compare X9, 0
	275 JumpIfEqual {282}
	276 Move X10, [X8+176]
	277 Add X10, X10, 8
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Subtract X9, X9, 1
	281 Add X10, X10, 16
	282 Move W2, 5
	283 Move X0, X20
	284 Call 0x1C5D788
	285 Move W9, [X10]
	286 Add W9, W9, 5
	287 Add X8, X8, W9
	288 Add X0, X8, 312
	289 Move X8, [X0]
	290 Move X3, [X0+8]
	291 Add X2, X31, 16
	292 Move X0, X20
	293 Move X1, X21
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move TEMP, X0
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {306}
	299 Move X8, 0x44F000
	300 Move X1, [X31+16]
	301 Move X8, [X8+3392]
	302 Add X2, X19, 992
	303 Add X3, X19, 976
	304 Add X4, X19, 984
	305 Move X5, [X8]
	306 Move X0, X19
	307 Call Image.ClearProperty, X0
	308 Call 0x1C17F20

Method: System.Void SetProperty(T0 src, ref T0 dst, ref T1 alt0, ref T2 alt1)

Disassembly:
	0x021F087C MOV X2, X0
	0x021F0880 MOV X0, X19
	0x021F0884 LDR X1, [X9]
	0x021F0888 LDP X9, X3, [X8 + 0x1B8]
	0x021F088C BLR X9
	0x021F0890 LDR X0, [X24]
	0x021F0894 LDR X20, [X20 + 0x10]
	0x021F0898 LDR W8, [X0 + 0xE0]
	0x021F089C CBNZ W8, 0x21F08A4
	0x021F08A0 BL 0x1C16DFC
	0x021F08A4 MOV X0, X20
	0x021F08A8 MOV X1, X31
	0x021F08AC BL 0x35D2B94
	0x021F08B0 ADRP X9, 0x1F0E000
	0x021F08B4 LDR X8, [X19]
	0x021F08B8 LDR X9, [X9 + 0x120]
	0x021F08BC MOV X2, X0
	0x021F08C0 MOV X0, X19
	0x021F08C4 B 0x21F0AC0
	0x021F08C8 ADRP X8, 0x1F2B000
	0x021F08CC LDR X1, [X31 + 0x18]
	0x021F08D0 LDR X8, [X8 + 0xBD8]
	0x021F08D4 MOV X2, X31
	0x021F08D8 LDR X0, [X8]
	0x021F08DC BL 0x321B938
	0x021F08E0 ADRP X8, 0x1F03000
	0x021F08E4 LDR X8, [X8 + 0xA28]
	0x021F08E8 MOV X19, X0
	0x021F08EC LDR X8, [X8]
	0x021F08F0 LDR W9, [X8 + 0xE0]
	0x021F08F4 CBNZ W9, 0x21F0900
	0x021F08F8 MOV X0, X8
	0x021F08FC BL 0x1C16DFC
	0x021F0900 MOV X0, X19
	0x021F0904 MOV X1, X31
	0x021F0908 BL 0x3C0649C
	0x021F090C B 0x21F0554
	0x021F0910 LDR X0, [X26]
	0x021F0914 LDR W8, [X0 + 0xE0]
	0x021F0918 CBNZ W8, 0x21F0920
	0x021F091C BL 0x1C16DFC
	0x021F0920 LDR X0, [X25]
	0x021F0924 MOV X1, X31
	0x021F0928 BL 0x35ACF6C
	0x021F092C LDR X8, [X19]
	0x021F0930 LDR X1, [X23]
	0x021F0934 MOV X2, X0
	0x021F0938 MOV X0, X19
	0x021F093C LDP X9, X3, [X8 + 0x1B8]
	0x021F0940 BLR X9
	0x021F0944 LDR X20, [X20 + 0x10]
	0x021F0948 CBZ X20, 0x21F0D9C
	0x021F094C ADRP X10, 0x1F04000
	0x021F0950 LDR X8, [X20]
	0x021F0954 LDR X10, [X10 + 0x1B0]
	0x021F0958 LDRH W9, [X8 + 0x12E]
	0x021F095C LDR X1, [X10]
	0x021F0960 CBZ X9, 0x21F0984
	0x021F0964 LDR X10, [X8 + 0xB0]
	0x021F0968 ADD X10, X10, 0x8
	0x021F096C LDUR X11, [X10 - 0x8]
	0x021F0970 CMP X11, X1
	0x021F0974 B.EQ 0x21F0A68
	0x021F0978 SUBS X9, X9, 0x1
	0x021F097C ADD X10, X10, 0x10
	0x021F0980 B.NE 0x21F096C
	0x021F0984 MOVZ W2, 0x12
	0x021F0988 MOV X0, X20
	0x021F098C BL 0x1C5C788
	0x021F0990 B 0x21F0A78
	0x021F0994 LDR X0, [X20 + 0x10]
	0x021F0998 LDR X1, [X27]
	0x021F099C BL 0x1C16E00
	0x021F09A0 CBZ X0, 0x21F0B10
	0x021F09A4 LDR X23, [X20 + 0x10]
	0x021F09A8 CBZ X23, 0x21F0D9C
	0x021F09AC ADRP X10, 0x1F04000
	0x021F09B0 LDR X8, [X23]
	0x021F09B4 LDR X10, [X10 + 0x1B0]
	0x021F09B8 LDRH W9, [X8 + 0x12E]
	0x021F09BC LDR X1, [X10]
	0x021F09C0 CBZ X9, 0x21F09E4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x21EA000
	010 Move X25, 0x1F04000
	011 Move W8, [X24+2100]
	012 Move X25, [X25+1432]
	013 Move X21, X4
	014 Move X22, X3
	015 Move X20, X2
	016 Move X23, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x1F04000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+2100], W8
	027 Move X0, [X25]
	028 Move X24, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X23
	034 Move X1, X24
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {50}
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X24, [X31+16]
	046 Move X23, [X31+24]
	047 Move X30, [X31+64]
	048 Move X25, [X31+72]
	049 Return 
	050 Move [X20], X23
	051 Move X0, [X25]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X23
	057 Move X1, X31
	058 Move X2, X31
	059 Call Object.op_Inequality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {66}
	064 Move [X22], X31
	065 Move [X21], X31
	066 Move X0, [X25]
	067 Move X20, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Equality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {96}
	080 Move S0, W31
	081 Move S1, W31
	082 Move S2, 1
	083 Move S3, 1
	084 Move X0, X19
	085 Move X1, X31
	086 Call Image.set_uv, X0, X1
	087 Compare X19, 0
	088 JumpIfEqual {111}
	089 Move X0, X19
	090 Move X1, X31
	091 Call VisualElement.get_customStyle, X0
	092 Move X1, X0
	093 Move X0, X19
	094 Move X2, X31
	095 Call Image.ReadCustomProperties, X0, X1
	096 Compare X19, 0
	097 JumpIfEqual {111}
	098 Move X0, X19
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X24, [X31+16]
	104 Move X23, [X31+24]
	105 Move W1, 2056
	106 Move X2, X31
	107 Move X30, [X31+64]
	108 Move X25, [X31+72]
	109 Call VisualElement.IncrementVersion, X0, X1
	110 Return 
	111 Call 0x1C17F20

Method: System.Void ClearProperty()

Disassembly:
	0x03D158E4 CBZ X8, 0x3D15990
	0x03D158E8 LDR X8, [X8 + 0x20]
	0x03D158EC CBZ X8, 0x3D15BFC
	0x03D158F0 LDR W8, [X8 + 0x18]
	0x03D158F4 CBZ W8, 0x3D15BFC
	0x03D158F8 ADRP X8, 0x44E000
	0x03D158FC LDR X8, [X8 + 0xE68]
	0x03D15900 LDR X0, [X8]
	0x03D15904 BL 0x1C16F10
	0x03D15908 ADRP X8, 0x44E000
	0x03D1590C LDR X8, [X8 + 0xE60]
	0x03D15910 MOV X19, X0
	0x03D15914 LDR X1, [X8]
	0x03D15918 BL 0x2DBDE08
	0x03D1591C LDR X9, [X31 + 0x68]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+1032]
	004 Compare W8, 0
	005 JumpIfEqual {9}
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move X1, X31
	010 Move X19, X0
	011 Call Image.set_image, X0, X1
	012 Move X0, X19
	013 Move X1, X31
	014 Call Image.set_sprite, X0, X1
	015 Move X0, X19
	016 Move X1, X31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call Image.set_vectorImage, X0, X1
	020 Return 

Method: System.Void SetScaleMode(UnityEngine.ScaleMode mode)

Disassembly:
	0x03D15920 LDR X8, [X9 + 0x28]
	0x03D15924 STR X19, [X9 + 0x30]
	0x03D15928 CBZ X8, 0x3D15994
	0x03D1592C LDR X0, [X8 + 0x20]
	0x03D15930 CBZ X0, 0x3D15998
	0x03D15934 ADRP X8, 0x44E000
	0x03D15938 LDR X8, [X8 + 0xE70]
	0x03D1593C LDR X1, [X8]
	0x03D15940 ADD X8, X31, 0x8

ISIL:
	001 Move W9, [X0+968]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Return 
	004 Move W8, W1
	005 Move W1, 2048
	006 Move X2, X31
	007 Move [X0+968], W8
	008 Call VisualElement.IncrementVersion, X0, X1
	009 Return 

Method: System.Void SetTintColor(UnityEngine.Color color)

Disassembly:
	0x03D15944 BL 0x3173EF4
	0x03D15948 LDUR V0, [X31 + 0x8]
	0x03D1594C LDUR V1, [X31 + 0x18]
	0x03D15950 LDR X8, [X31 + 0x28]
	0x03D15954 LDR X19, [X31 + 0x68]
	0x03D15958 MOVN W9, 0x2
	0x03D1595C STP V0, V1, [X31 + 0x30]
	0x03D15960 STR X8, [X31 + 0x50]
	0x03D15964 STR X8, [X19 + 0x58]
	0x03D15968 STUR V1, [X19 + 0x48]
	0x03D1596C STUR V0, [X19 + 0x38]
	0x03D15970 STR W9, [X19 + 0x10]
	0x03D15974 B 0x3D15B50
	0x03D15978 MOVN W8, 0x2
	0x03D1597C STR W8, [X19 + 0x10]
	0x03D15980 B 0x3D15B48
	0x03D15984 MOVN W8, 0x2
	0x03D15988 STR W8, [X19 + 0x10]
	0x03D1598C B 0x3D15B40
	0x03D15990 BL 0x1C16F20
	0x03D15994 BL 0x1C16F20
	0x03D15998 BL 0x1C16F20
	0x03D1599C B 0x3D15C70
	0x03D159A0 B 0x3D15C70
	0x03D159A4 B 0x3D15C70
	0x03D159A8 B 0x3D15C70
	0x03D159AC B 0x3D15C70

ISIL:
	001 Move V4, [X0+1016]
	002 Move V5, [X0+1020]
	003 Move V6, [X0+1024]
	004 Move V7, [X0+1028]
	005 Subtract S4, S4, S0
	006 Subtract S5, S5, S1
	007 Move X8, -52604928
	008 Multiply S4, S4, S4
	009 Multiply S5, S5, S5
	010 Add S4, S4, S5
	011 Move V5, [X8+3872]
	012 Subtract S6, S6, S2
	013 Subtract S7, S7, S3
	014 Multiply S6, S6, S6
	015 Add S4, S6, S4
	016 Multiply S6, S7, S7
	017 Add S4, S6, S4
	018 NotImplemented "Instruction FCMP not yet implemented."
	019 Move W1, 2048
	020 Move X2, X31
	021 Move [X0+1016], S0
	022 Move [X0+1020], S1
	023 Move [X0+1024], S2
	024 Move [X0+1028], S3
	025 Call VisualElement.IncrementVersion, X0, X1
	026 Return 
	027 Return 

Method: UnityEngine.Rect GetSourceRect()

Disassembly:
	0x03D14760 MOV X2, X31
	0x03D14764 STR W8, [X19 + 0x3C8]
	0x03D14768 BL 0x3DE5048
	0x03D1476C LDRB W8, [X19 + 0x40A]
	0x03D14770 CBNZ W8, 0x3D1481C
	0x03D14774 ADRP X21, 0x44F000
	0x03D14778 LDR X21, [X21 + 0xD60]
	0x03D1477C LDR X0, [X21]
	0x03D14780 LDR W8, [X0 + 0xE0]
	0x03D14784 CBNZ W8, 0x3D1478C
	0x03D14788 BL 0x1C16DFC
	0x03D1478C CBZ X20, 0x3D148E0
	0x03D14790 LDR X9, [X21]
	0x03D14794 ADRP X11, 0x409000
	0x03D14798 LDR X8, [X20]
	0x03D1479C LDR X10, [X9 + 0xB8]
	0x03D147A0 LDR X11, [X11 + 0x680]
	0x03D147A4 LDRH W9, [X8 + 0x12E]
	0x03D147A8 LDR X21, [X10 + 0x28]
	0x03D147AC LDR X1, [X11]
	0x03D147B0 CBZ X9, 0x3D147D4
	0x03D147B4 LDR X10, [X8 + 0xB0]
	0x03D147B8 ADD X10, X10, 0x8
	0x03D147BC LDUR X11, [X10 - 0x8]
	0x03D147C0 CMP X11, X1
	0x03D147C4 B.EQ 0x3D147E4
	0x03D147C8 SUBS X9, X9, 0x1
	0x03D147CC ADD X10, X10, 0x10
	0x03D147D0 B.NE 0x3D147BC
	0x03D147D4 MOVZ W2, 0x2
	0x03D147D8 MOV X0, X20
	0x03D147DC BL 0x1C5C788
	0x03D147E0 B 0x3D147F4
	0x03D147E4 LDR W9, [X10]
	0x03D147E8 ADD W9, W9, 0x2
	0x03D147EC ADD X8, X8, W9, 0x4, SXTW
	0x03D147F0 ADD X0, X8, 0x138
	0x03D147F4 LDP X8, X3, [X0]
	0x03D147F8 ADD X2, X31, 0x28
	0x03D147FC MOV X0, X20
	0x03D14800 MOV X1, X21
	0x03D14804 BLR X8
	0x03D14808 TBZ X0, 0x0, 0x3D1481C
	0x03D1480C LDP S0, S1, [X31 + 0x28]
	0x03D14810 LDP S2, S3, [X31 + 0x30]
	0x03D14814 MOV X0, X19
	0x03D14818 BL 0x3D14944
	0x03D1481C LDP X20, X19, [X31 + 0x60]
	0x03D14820 LDP X22, X21, [X31 + 0x50]
	0x03D14824 LDP X30, X23, [X31 + 0x40]
	0x03D14828 ADD X31, X31, 0x70
	0x03D1482C RET
	0x03D14830 LDR X0, [X22]
	0x03D14834 LDR W8, [X0 + 0xE0]
	0x03D14838 CBNZ W8, 0x3D14844
	0x03D1483C BL 0x1C16DFC
	0x03D14840 LDR X0, [X22]
	0x03D14844 LDR X9, [X0 + 0xB8]
	0x03D14848 LDR X8, [X20]
	0x03D1484C LDR X1, [X23]
	0x03D14850 LDR X21, [X9 + 0x18]
	0x03D14854 LDRH W9, [X8 + 0x12E]
	0x03D14858 CBZ X9, 0x3D1487C
	0x03D1485C LDR X10, [X8 + 0xB0]
	0x03D14860 ADD X10, X10, 0x8
	0x03D14864 LDUR X11, [X10 - 0x8]
	0x03D14868 CMP X11, X1
	0x03D1486C B.EQ 0x3D1488C
	0x03D14870 SUBS X9, X9, 0x1
	0x03D14874 ADD X10, X10, 0x10
	0x03D14878 B.NE 0x3D14864
	0x03D1487C MOVZ W2, 0x5
	0x03D14880 MOV X0, X20
	0x03D14884 BL 0x1C5C788
	0x03D14888 B 0x3D1489C
	0x03D1488C LDR W9, [X10]
	0x03D14890 ADD W9, W9, 0x5
	0x03D14894 ADD X8, X8, W9, 0x4, SXTW
	0x03D14898 ADD X0, X8, 0x138
	0x03D1489C LDP X8, X3, [X0]
	0x03D148A0 ADD X2, X31, 0x10
	0x03D148A4 MOV X0, X20
	0x03D148A8 MOV X1, X21
	0x03D148AC BLR X8
	0x03D148B0 TBZ X0, 0x0, 0x3D148D4
	0x03D148B4 ADRP X8, 0x44F000
	0x03D148B8 LDR X1, [X31 + 0x10]
	0x03D148BC LDR X8, [X8 + 0xD40]
	0x03D148C0 ADD X2, X19, 0x3E0
	0x03D148C4 ADD X3, X19, 0x3D0
	0x03D148C8 ADD X4, X19, 0x3D8
	0x03D148CC LDR X5, [X8]
	0x03D148D0 B 0x3D14670
	0x03D148D4 MOV X0, X19
	0x03D148D8 BL 0x3D148E4
	0x03D148DC B 0x3D14678
	0x03D148E0 BL 0x1C16F20
	0x03D148E4 STP X30, X19, [X31 - 0x10]!
	0x03D148E8 LDRB W8, [X0 + 0x408]
	0x03D148EC CBZ W8, 0x3D148F8
	0x03D148F0 LDP X30, X19, [X31], #0x10
	0x03D148F4 RET
	0x03D148F8 MOV X1, X31
	0x03D148FC MOV X19, X0

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x6D4000
	014 Move W8, [X20+2276]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x3E0000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2276], W8
	025 Move X23, 0x3E0000
	026 Move X23, [X23+1432]
	027 Move X0, X31
	028 Call Rect.get_zero
	029 Move X21, 0x6C6000
	030 Move W8, [X21+1935]
	031 Move V8, V0
	032 Move V10, V1
	033 Move V9, V2
	034 Move V11, V3
	035 Compare W8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, 0x3E8000
	038 Move X0, [X0+3848]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+1935], W8
	042 Move X22, 0x3E8000
	043 Move X22, [X22+3848]
	044 Move X0, [X23]
	045 Move X20, [X19+976]
	046 Move X8, [X22]
	047 Move W9, [X0+224]
	048 Move X8, [X8+184]
	049 Move S13, [X8]
	050 Move S12, [X8+4]
	051 Compare W9, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X20
	055 Move X1, X31
	056 Move X2, X31
	057 Call Object.op_Inequality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {66}
	062 Move X1, X20
	063 Call Image.GetTextureDisplaySize, X0, X1
	064 Move V13, V0
	065 Move V12, V1
	066 Move X0, [X23]
	067 Move X20, [X19+992]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X1, X31
	074 Move X2, X31
	075 Call Object.op_Inequality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {84}
	080 Compare X20, 0
	081 JumpIfEqual {132}
	082 Move S13, [X20+64]
	083 Move S12, [X20+68]
	084 Move W8, [X21+1935]
	085 Compare W8, 0
	086 JumpIfNotEqual {92}
	087 Move X0, 0x3E8000
	088 Move X0, [X0+3848]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X21+1935], W8
	092 Move X8, [X22]
	093 Move X8, [X8+184]
	094 Move S0, [X8]
	095 Move S1, [X8+4]
	096 Move X8, -52600832
	097 Move V2, [X8+3872]
	098 Subtract S0, S13, S0
	099 Subtract S1, S12, S1
	100 Multiply S0, S0, S0
	101 Multiply S1, S1, S1
	102 Add S0, S0, S1
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 Move V0, [X19+1000]
	105 Move V1, [X19+1004]
	106 Move V3, [X19+1012]
	107 Move V2, [X19+1008]
	108 Move S4, 1
	109 Multiply S8, S13, S0
	110 Subtract S0, S4, S1
	111 Subtract S0, S0, S3
	112 Multiply S9, S13, S2
	113 Multiply S10, S12, S0
	114 Multiply S11, S12, S3
	115 Move V0, V8
	116 Move V1, V10
	117 Move V2, V9
	118 Move V3, V11
	119 Move X20, [X31+80]
	120 Move X19, [X31+88]
	121 Move X22, [X31+64]
	122 Move X21, [X31+72]
	123 Move X30, [X31+48]
	124 Move X23, [X31+56]
	125 Move D9, [X31+32]
	126 Move D8, [X31+40]
	127 Move D11, [X31+16]
	128 Move D10, [X31+24]
	129 Move D13, [X31+96]
	130 Move D12, [X31+104]
	131 Return X0
	132 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D159B0 MOV W8, W31
	0x03D159B4 B 0x3D15BFC
	0x03D159B8 LDUR V0, [X0 + 0x48]
	0x03D159BC LDR X19, [X0 + 0x58]
	0x03D159C0 ADRP X22, 0x3DE000
	0x03D159C4 LDR X22, [X22 + 0x598]
	0x03D159C8 STR V0, [X0 + 0x6]
	0x03D159CC STR X19, [X0 + 0x70]
	0x03D159D0 LDR X0, [X22]
	0x03D159D4 LDR W8, [X0 + 0xE0]
	0x03D159D8 CBNZ W8, 0x3D159E0
	0x03D159DC BL 0x1C16DFC
	0x03D159E0 MOV X0, X19
	0x03D159E4 MOV X1, X31
	0x03D159E8 MOV X2, X31
	0x03D159EC BL 0x3C354F8
	0x03D159F0 ADRP X21, 0x44E000
	0x03D159F4 LDR X8, [X31 + 0x68]
	0x03D159F8 LDR X21, [X21 + 0xE58]
	0x03D159FC TBZ X0, 0x0, 0x3D15A1C
	0x03D15A00 LDR X0, [X8 + 0x30]
	0x03D15A04 CBZ X0, 0x3D15C18
	0x03D15A08 LDR X1, [X8 + 0x70]
	0x03D15A0C LDR X2, [X21]
	0x03D15A10 BL 0x2DBE4B0
	0x03D15A14 LDR X8, [X31 + 0x68]
	0x03D15A18 TBZ X0, 0x0, 0x3D15B90
	0x03D15A1C LDR X0, [X8 + 0x68]
	0x03D15A20 MOV X1, X31
	0x03D15A24 BL 0x32277A8
	0x03D15A28 LDR X19, [X31 + 0x68]
	0x03D15A2C TBNZ X0, 0x0, 0x3D15B48
	0x03D15A30 ADRP X8, 0x3DE000
	0x03D15A34 LDR X8, [X8 + 0x6C0]
	0x03D15A38 LDR X0, [X8]
	0x03D15A3C ADRP X8, 0x44E000
	0x03D15A40 LDR X8, [X8 + 0xE80]
	0x03D15A44 LDR X19, [X19 + 0x68]
	0x03D15A48 LDR W9, [X0 + 0xE0]
	0x03D15A4C LDR X20, [X8]
	0x03D15A50 CBNZ W9, 0x3D15A58
	0x03D15A54 BL 0x1C16DFC
	0x03D15A58 MOV X0, X20
	0x03D15A5C MOV X1, X31
	0x03D15A60 BL 0x338C698
	0x03D15A64 ADRP X8, 0x40A000
	0x03D15A68 LDR X8, [X8 + 0x5C8]
	0x03D15A6C MOV X20, X0
	0x03D15A70 LDR X0, [X8]
	0x03D15A74 LDR W8, [X0 + 0xE0]
	0x03D15A78 CBNZ W8, 0x3D15A80
	0x03D15A7C BL 0x1C16DFC
	0x03D15A80 MOV X0, X31
	0x03D15A84 BL 0x3C6FDD0
	0x03D15A88 ADRP X8, 0x408000
	0x03D15A8C LDR X8, [X8 + 0xD08]
	0x03D15A90 MOV V8.16B, V0.16B
	0x03D15A94 LDR X0, [X8]
	0x03D15A98 LDR W8, [X0 + 0xE0]
	0x03D15A9C CBNZ W8, 0x3D15AA4
	0x03D15AA0 BL 0x1C16DFC
	0x03D15AA4 MOV X0, X19
	0x03D15AA8 MOV X1, X20
	0x03D15AAC MOV V0.16B, V8.16B
	0x03D15AB0 MOV X2, X31
	0x03D15AB4 BL 0x3DBCEFC
	0x03D15AB8 CBZ X0, 0x3D15ADC
	0x03D15ABC ADRP X8, 0x44E000
	0x03D15AC0 LDR X8, [X8 + 0xE88]
	0x03D15AC4 LDR X9, [X0]
	0x03D15AC8 LDR X8, [X8]
	0x03D15ACC LDRB W11, [X9 + 0x130]
	0x03D15AD0 LDRB W10, [X8 + 0x130]
	0x03D15AD4 CMP W11, W10
	0x03D15AD8 B.CS 0x3D15AE4
	0x03D15ADC MOV X19, X31
	0x03D15AE0 B 0x3D15AF8
	0x03D15AE4 LDR X9, [X9 + 0xC8]
	0x03D15AE8 ADD X9, X9, X10, 0x3, LSL
	0x03D15AEC LDUR X9, [X9 - 0x8]
	0x03D15AF0 CMP X9, X8
	0x03D15AF4 CSEL X19, X0, X31, EQ
	0x03D15AF8 LDR X8, [X31 + 0x68]
	0x03D15AFC STR X19, [X8 + 0x78]
	0x03D15B00 LDR X0, [X22]
	0x03D15B04 LDR W8, [X0 + 0xE0]
	0x03D15B08 CBNZ W8, 0x3D15B10
	0x03D15B0C BL 0x1C16DFC
	0x03D15B10 MOV X0, X19
	0x03D15B14 MOV X1, X31
	0x03D15B18 MOV X2, X31
	0x03D15B1C BL 0x3C354F8
	0x03D15B20 TBZ X0, 0x0, 0x3D15B40
	0x03D15B24 LDR X8, [X31 + 0x68]
	0x03D15B28 LDR X0, [X8 + 0x30]
	0x03D15B2C CBZ X0, 0x3D15C1C
	0x03D15B30 LDR X1, [X8 + 0x70]
	0x03D15B34 LDR X2, [X21]
	0x03D15B38 BL 0x2DBE4B0
	0x03D15B3C TBZ X0, 0x0, 0x3D15BC4
	0x03D15B40 LDR X19, [X31 + 0x68]
	0x03D15B44 STR X31, [X19 + 0x78]
	0x03D15B48 STP X31, X31, [X19 + 0x60]
	0x03D15B4C STR X31, [X19 + 0x70]
	0x03D15B50 ADRP X8, 0x44E000
	0x03D15B54 LDR X8, [X8 + 0xE40]
	0x03D15B58 ADD X0, X19, 0x38
	0x03D15B5C LDR X1, [X8]
	0x03D15B60 BL 0x2BE4A8C
	0x03D15B64 MOV W8, W0
	0x03D15B68 LDR X0, [X31 + 0x68]
	0x03D15B6C TBNZ X8, 0x0, 0x3D159B8
	0x03D15B70 BL 0x3D15CE0
	0x03D15B74 LDR X9, [X31 + 0x68]
	0x03D15B78 MOV W8, W31
	0x03D15B7C MOVI V0.2D, 0x0
	0x03D15B80 STR X31, [X9 + 0x58]
	0x03D15B84 STUR V0, [X9 + 0x48]
	0x03D15B88 STUR V0, [X9 + 0x38]
	0x03D15B8C B 0x3D15BFC
	0x03D15B90 LDR X0, [X8 + 0x30]
	0x03D15B94 CBZ X0, 0x3D15C20
	0x03D15B98 LDR X1, [X8 + 0x70]
	0x03D15B9C ADRP X8, 0x44E000
	0x03D15BA0 LDR X8, [X8 + 0xE50]
	0x03D15BA4 LDR X2, [X8]
	0x03D15BA8 BL 0x2DBEF30
	0x03D15BAC LDR X9, [X31 + 0x68]
	0x03D15BB0 MOVZ W8, 0x1
	0x03D15BB4 LDR X10, [X9 + 0x70]
	0x03D15BB8 STR W8, [X9 + 0x10]
	0x03D15BBC STR X10, [X9 + 0x18]
	0x03D15BC0 B 0x3D15BFC
	0x03D15BC4 LDR X8, [X31 + 0x68]
	0x03D15BC8 LDR X0, [X8 + 0x30]
	0x03D15BCC CBZ X0, 0x3D15C24
	0x03D15BD0 LDR X1, [X8 + 0x70]
	0x03D15BD4 ADRP X8, 0x44E000
	0x03D15BD8 LDR X8, [X8 + 0xE50]
	0x03D15BDC LDR X2, [X8]
	0x03D15BE0 BL 0x2DBEF30
	0x03D15BE4 LDR X8, [X31 + 0x68]
	0x03D15BE8 MOVZ W10, 0x2
	0x03D15BEC LDR X9, [X8 + 0x78]
	0x03D15BF0 STR W10, [X8 + 0x10]
	0x03D15BF4 STR X9, [X8 + 0x18]
	0x03D15BF8 MOVZ W8, 0x1
	0x03D15BFC LDP X20, X19, [X31 + 0x90]
	0x03D15C00 LDP X22, X21, [X31 + 0x80]
	0x03D15C04 LDR X30, [X31 + 0x78]
	0x03D15C08 LDR V8, [X31 + 0x70]
	0x03D15C0C MOV W0, W8
	0x03D15C10 ADD X31, X31, 0xA0
	0x03D15C14 RET
	0x03D15C18 BL 0x1C16F20
	0x03D15C1C BL 0x1C16F20
	0x03D15C20 BL 0x1C16F20
	0x03D15C24 BL 0x1C16F20
	0x03D15C28 B 0x3D15C70
	0x03D15C2C B 0x3D15C70
	0x03D15C30 B 0x3D15C70
	0x03D15C34 B 0x3D15C70
	0x03D15C38 B 0x3D15C70
	0x03D15C3C B 0x3D15C70
	0x03D15C40 B 0x3D15C70
	0x03D15C44 B 0x3D15C70
	0x03D15C48 B 0x3D15C70
	0x03D15C4C B 0x3D15C70
	0x03D15C50 B 0x3D15C70
	0x03D15C54 B 0x3D15C70
	0x03D15C58 B 0x3D15C70
	0x03D15C5C B 0x3D15C70
	0x03D15C60 B 0x3D15C70
	0x03D15C64 B 0x3D15C70
	0x03D15C68 B 0x3D15C70
	0x03D15C6C B 0x3D15C70
	0x03D15C70 CMP W1, 0x1
	0x03D15C74 B.NE 0x3D15CA4
	0x03D15C78 BL 0x3EB1AD0
	0x03D15C7C LDR X19, [X0]
	0x03D15C80 STR X19, [X31 + 0x58]
	0x03D15C84 BL 0x3EB1AE0
	0x03D15C88 CBZ X19, 0x3D159B0
	0x03D15C8C ADD X8, X31, 0x58
	0x03D15C90 ADD X0, X8, 0x8
	0x03D15C94 BL 0x1C0FC94
	0x03D15C98 MOV X0, X19
	0x03D15C9C BL 0x1C16F18
	0x03D15CA0 CBNZ X19, 0x3D15CA8
	0x03D15CA4 BL 0x1D2C690
	0x03D15CA8 LDR X0, [X31 + 0x68]
	0x03D15CAC LDR W8, [X0 + 0x10]
	0x03D15CB0 ADD W8, W8, 0x3
	0x03D15CB4 CMP W8, 0x5
	0x03D15CB8 B.HI 0x3D15CD4
	0x03D15CBC MOVZ W9, 0x1
	0x03D15CC0 LSLV W8, W9, W8
	0x03D15CC4 MOVZ W9, 0x31
	0x03D15CC8 ANDS W31, W8, W9, 0x0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X29, 0x6D3000
	015 Move X28, 0x44F000
	016 Move X19, 0x44F000
	017 Move X24, 0x44F000
	018 Move X27, 0x44F000
	019 Move X26, 0x44F000
	020 Move X25, 0x44F000
	021 Move X22, 0x44F000
	022 Move X23, 0x44F000
	023 Move X20, 0x44F000
	024 Move X21, 0x409000
	025 Move X28, [X28+3440]
	026 Move X19, [X19+3424]
	027 Move X24, [X24+3448]
	028 Move X27, [X27+3456]
	029 Move X26, [X26+3464]
	030 Move W8, [X29+2277]
	031 Move X25, [X25+3472]
	032 Move X22, [X22+3480]
	033 Move X23, [X23+3488]
	034 Move X20, [X20+3496]
	035 Move X21, [X21+1824]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {72}
	040 Move X0, 0x409000
	041 Move X0, [X0+1824]
	042 Call 0x1C17CF4
	043 Move X0, 0x44F000
	044 Move X0, [X0+3456]
	045 Call 0x1C17CF4
	046 Move X0, 0x44F000
	047 Move X0, [X0+3472]
	048 Call 0x1C17CF4
	049 Move X0, 0x44F000
	050 Move X0, [X0+3464]
	051 Call 0x1C17CF4
	052 Move X0, 0x44F000
	053 Move X0, [X0+3488]
	054 Call 0x1C17CF4
	055 Move X0, 0x44F000
	056 Move X0, [X0+3424]
	057 Call 0x1C17CF4
	058 Move X0, 0x44F000
	059 Move X0, [X0+3448]
	060 Call 0x1C17CF4
	061 Move X0, 0x44F000
	062 Move X0, [X0+3440]
	063 Call 0x1C17CF4
	064 Move X0, 0x44F000
	065 Move X0, [X0+3496]
	066 Call 0x1C17CF4
	067 Move X0, 0x44F000
	068 Move X0, [X0+3480]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X29+2277], W8
	072 Move X8, [X19]
	073 Move X9, [X28]
	074 Add X0, X31, 40
	075 Move X8, [X8+184]
	076 Move [X8], X9
	077 Move X1, [X24]
	078 Move X2, [X27]
	079 Move [X31+40], X31
	080 Call CustomStyleProperty`1<Object>..ctor, X0, X1
	081 Move X8, [X19]
	082 Move X9, [X31+40]
	083 Add X0, X31, 32
	084 Move X8, [X8+184]
	085 Move [X8+8], X9
	086 Move X1, [X24]
	087 Move X2, [X26]
	088 Move [X31+32], X31
	089 Call CustomStyleProperty`1<Object>..ctor, X0, X1
	090 Move X8, [X19]
	091 Move X9, [X31+32]
	092 Add X0, X31, 24
	093 Move X8, [X8+184]
	094 Move [X8+16], X9
	095 Move X1, [X24]
	096 Move X2, [X25]
	097 Move [X31+24], X31
	098 Call CustomStyleProperty`1<Object>..ctor, X0, X1
	099 Move X8, [X19]
	100 Move X9, [X31+24]
	101 Add X0, X31, 16
	102 Move X8, [X8+184]
	103 Move [X8+24], X9
	104 Move X1, [X22]
	105 Move X2, [X23]
	106 Move [X31+16], X31
	107 Call CustomStyleProperty`1<Object>..ctor, X0, X1
	108 Move X8, [X19]
	109 Move X9, [X31+16]
	110 Add X0, X31, 8
	111 Move X8, [X8+184]
	112 Move [X8+32], X9
	113 Move X1, [X20]
	114 Move X2, [X21]
	115 Move [X31+8], X31
	116 Call 0x29AB2DC, X0, X1
	117 Move X8, [X19]
	118 Move X9, [X31+8]
	119 Move X20, [X31+128]
	120 Move X19, [X31+136]
	121 Move X22, [X31+112]
	122 Move X21, [X31+120]
	123 Move X8, [X8+184]
	124 Move X24, [X31+96]
	125 Move X23, [X31+104]
	126 Move X26, [X31+80]
	127 Move X25, [X31+88]
	128 Move X28, [X31+64]
	129 Move X27, [X31+72]
	130 Move X29, [X31+48]
	131 Move X30, [X31+56]
	132 Move [X8+40], X9
	133 Add X31, X31, 144
	134 Return 
	135 Move [X31-64], X30
	136 Move [X31-56], X25
	137 Move [X31+16], X24
	138 Move [X31+24], X23
	139 Move [X31+32], X22
	140 Move [X31+40], X21
	141 Move [X31+48], X20
	142 Move [X31+56], X19
	143 Move X24, 0x6D3000
	144 Move W8, [X24+2278]
	145 Move X21, X4
	146 Move X22, X3
	147 Move X20, X2
	148 Move X23, X1
	149 Move X19, X0
	150 Compare W8, 0
	151 JumpIfNotEqual {157}
	152 Move X0, 0x3DF000
	153 Move X0, [X0+1432]
	154 Call 0x1C17CF4
	155 Move W8, 1
	156 Move [X24+2278], W8
	157 Move X25, 0x3DF000
	158 Move X25, [X25+1432]
	159 Move X24, [X20]
	160 Move X0, [X25]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Move X0, X23
	166 Move X1, X24
	167 Move X2, X31
	168 Call Object.op_Equality, X0, X1
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {182}
	173 Move X20, [X31+48]
	174 Move X19, [X31+56]
	175 Move X22, [X31+32]
	176 Move X21, [X31+40]
	177 Move X24, [X31+16]
	178 Move X23, [X31+24]
	179 Move X30, [X31+64]
	180 Move X25, [X31+72]
	181 Return 
	182 Move [X20], X23
	183 Move X0, [X25]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X0, X23
	189 Move X1, X31
	190 Move X2, X31
	191 Call Object.op_Inequality, X0, X1
	192 Move TEMP, X0
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfNotEqual {198}
	196 Move [X22], X31
	197 Move [X21], X31
	198 Move X0, [X25]
	199 Move X20, [X20]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X0, X20
	205 Move X1, X31
	206 Move X2, X31
	207 Call Object.op_Equality, X0, X1
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {226}
	212 Move S0, W31
	213 Move S1, W31
	214 Move S2, 1
	215 Move S3, 1
	216 Move X0, X19
	217 Call Image.set_uv, X0, X1
	218 Compare X19, 0
	219 JumpIfEqual {241}
	220 Move X0, X19
	221 Move X1, X31
	222 Call VisualElement.get_customStyle, X0
	223 Move X1, X0
	224 Move X0, X19
	225 Call Image.ReadCustomProperties, X0, X1
	226 Compare X19, 0
	227 JumpIfEqual {241}
	228 Move X0, X19
	229 Move X20, [X31+48]
	230 Move X19, [X31+56]
	231 Move X22, [X31+32]
	232 Move X21, [X31+40]
	233 Move X24, [X31+16]
	234 Move X23, [X31+24]
	235 Move W1, 2056
	236 Move X2, X31
	237 Move X30, [X31+64]
	238 Move X25, [X31+72]
	239 Call VisualElement.IncrementVersion, X0, X1
	240 Return 
	241 Call 0x1C17F20

