Type: UnityEngine.UIElements.UIRLayoutUpdater

Method: Unity.Profiling.ProfilerMarker get_profilerMarker()

Disassembly:
	0x03DC39D0 MOV X0, X21
	0x03DC39D4 LDR X2, [X8]
	0x03DC39D8 LDR X22, [X22 + 0x148]
	0x03DC39DC MOV X1, X20
	0x03DC39E0 BL 0x2408A14
	0x03DC39E4 LDR X1, [X22]
	0x03DC39E8 MOV X0, X21
	0x03DC39EC BL 0x2408B10
	0x03DC39F0 STR W0, [X19 + 0x44]
	0x03DC39F4 LDP X20, X19, [X31 + 0x20]
	0x03DC39F8 LDP X22, X21, [X31 + 0x10]
	0x03DC39FC LDR X30, [X31], #0x30
	0x03DC3A00 RET
	0x03DC3A04 ADRP X0, 0x330000
	0x03DC3A08 LDR X0, [X0 + 0x5B0]
	0x03DC3A0C BL 0x1C16D08
	0x03DC3A10 BL 0x1C16F10
	0x03DC3A14 MOV X19, X0
	0x03DC3A18 ADRP X0, 0x3A6000
	0x03DC3A1C LDR X0, [X0 + 0x1E0]
	0x03DC3A20 BL 0x1C16D08
	0x03DC3A24 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x626000
	005 Move X19, 0x3A7000
	006 Move W8, [X20+302]
	007 Move X19, [X19+360]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x3A7000
	013 Move X0, [X0+360]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+302], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType)

Disassembly:
	0x03DC3A28 MOV X0, X19
	0x03DC3A2C MOV X2, X31
	0x03DC3A30 BL 0x337DF1C
	0x03DC3A34 ADRP X0, 0x3A6000
	0x03DC3A38 LDR X0, [X0 + 0x1E8]
	0x03DC3A3C BL 0x1C16D08
	0x03DC3A40 MOV X1, X0
	0x03DC3A44 MOV X0, X19
	0x03DC3A48 BL 0x1C16DEC
	0x03DC3A4C STR X30, [X31 - 0x30]!
	0x03DC3A50 STP X22, X21, [X31 + 0x10]
	0x03DC3A54 STP X20, X19, [X31 + 0x20]
	0x03DC3A58 ADRP X21, 0x625000
	0x03DC3A5C LDRB W8, [X21 + 0x139]
	0x03DC3A60 MOV X20, X1
	0x03DC3A64 MOV X19, X0
	0x03DC3A68 TBNZ X8, 0x0, 0x3DC3A8C
	0x03DC3A6C ADRP X0, 0x3A6000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 And W31, W2, 12
	004 Compare X1, 0
	005 JumpIfEqual {26}
	006 Move X19, [X1+696]
	007 Compare X19, 0
	008 JumpIfEqual {23}
	009 Move X0, X19
	010 Move X1, X31
	011 Call YogaNode.get_IsMeasureDefined, X0
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {23}
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X2, [X8+408]
	019 Move X1, [X8+416]
	020 Move X30, [X31+16]
	021 Move X19, [X31+24]
	022 CallNoReturn X2
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Return 
	026 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03DC3A70 LDR X0, [X0 + 0x1F0]
	0x03DC3A74 BL 0x1C16CF4
	0x03DC3A78 ADRP X0, 0x3A1000
	0x03DC3A7C LDR X0, [X0 + 0xFB8]
	0x03DC3A80 BL 0x1C16CF4
	0x03DC3A84 MOVZ W8, 0x1
	0x03DC3A88 STRB W8, [X21 + 0x139]
	0x03DC3A8C LDR W8, [X19 + 0x40]
	0x03DC3A90 CBNZ W8, 0x3DC3AD8
	0x03DC3A94 ADRP X8, 0x3A6000
	0x03DC3A98 LDR X8, [X8 + 0x1F0]
	0x03DC3A9C ADRP X22, 0x3A1000
	0x03DC3AA0 ADD X21, X19, 0x20
	0x03DC3AA4 MOV X0, X21
	0x03DC3AA8 LDR X2, [X8]
	0x03DC3AAC LDR X22, [X22 + 0xFB8]
	0x03DC3AB0 MOV X1, X20
	0x03DC3AB4 BL 0x2407038
	0x03DC3AB8 LDR X1, [X22]
	0x03DC3ABC MOV X0, X21
	0x03DC3AC0 BL 0x2407134
	0x03DC3AC4 STR W0, [X19 + 0x40]
	0x03DC3AC8 LDP X20, X19, [X31 + 0x20]
	0x03DC3ACC LDP X22, X21, [X31 + 0x10]
	0x03DC3AD0 LDR X30, [X31], #0x30
	0x03DC3AD4 RET
	0x03DC3AD8 ADRP X0, 0x330000
	0x03DC3ADC LDR X0, [X0 + 0x5B0]
	0x03DC3AE0 BL 0x1C16D08
	0x03DC3AE4 BL 0x1C16F10
	0x03DC3AE8 MOV X19, X0
	0x03DC3AEC ADRP X0, 0x3A6000
	0x03DC3AF0 LDR X0, [X0 + 0x1F8]
	0x03DC3AF4 BL 0x1C16D08
	0x03DC3AF8 MOV X1, X0
	0x03DC3AFC MOV X0, X19
	0x03DC3B00 MOV X2, X31
	0x03DC3B04 BL 0x337DF1C
	0x03DC3B08 ADRP X0, 0x3A6000
	0x03DC3B0C LDR X0, [X0 + 0x200]
	0x03DC3B10 BL 0x1C16D08
	0x03DC3B14 MOV X1, X0
	0x03DC3B18 MOV X0, X19
	0x03DC3B1C BL 0x1C16DEC
	0x03DC3B20 ADRP X8, 0xFFFFFFFFFCD27000
	0x03DC3B24 LDR V0, [X8 + 0xBC]
	0x03DC3B28 STP X1, X2, [X0 + 0x10]
	0x03DC3B2C STP X3, X4, [X0 + 0x20]
	0x03DC3B30 STR X31, [X0 + 0x40]
	0x03DC3B34 STR V0, [X0 + 0x3]
	0x03DC3B38 RET
	0x03DC3B3C STP X1, X2, [X0 + 0x10]
	0x03DC3B40 STP X3, X4, [X0 + 0x20]
	0x03DC3B44 STP S0, S1, [X0 + 0x30]
	0x03DC3B48 STP S2, S3, [X0 + 0x38]
	0x03DC3B4C STR X31, [X0 + 0x40]
	0x03DC3B50 RET
	0x03DC3B54 SUB X31, X31, 0x30
	0x03DC3B58 STP X30, X21, [X31 + 0x10]
	0x03DC3B5C STP X20, X19, [X31 + 0x20]
	0x03DC3B60 ADRP X20, 0x625000
	0x03DC3B64 STR X1, [X31 + 0x8]
	0x03DC3B68 ADRP X21, 0x3A1000
	0x03DC3B6C LDRB W8, [X20 + 0x13A]
	0x03DC3B70 LDR X21, [X21 + 0x9C8]
	0x03DC3B74 MOV X19, X0
	0x03DC3B78 TBNZ X8, 0x0, 0x3DC3B9C
	0x03DC3B7C ADRP X0, 0x3A1000
	0x03DC3B80 LDR X0, [X0 + 0x9C8]
	0x03DC3B84 BL 0x1C16CF4
	0x03DC3B88 ADRP X0, 0x3A1000
	0x03DC3B8C LDR X0, [X0 + 0x760]
	0x03DC3B90 BL 0x1C16CF4
	0x03DC3B94 MOVZ W8, 0x1
	0x03DC3B98 STRB W8, [X20 + 0x13A]
	0x03DC3B9C LDR X0, [X21]
	0x03DC3BA0 LDR W8, [X0 + 0xE0]
	0x03DC3BA4 CBNZ W8, 0x3DC3BAC
	0x03DC3BA8 BL 0x1C16DFC
	0x03DC3BAC ADD X0, X31, 0x8
	0x03DC3BB0 MOV X1, X31
	0x03DC3BB4 BL 0x3D279C8
	0x03DC3BB8 AND W8, W0, 0x1
	0x03DC3BBC STR X31, [X31]
	0x03DC3BC0 STRB W8, [X31]
	0x03DC3BC4 TBZ X0, 0x0, 0x3DC3C00
	0x03DC3BC8 CBZ X19, 0x3DC3C1C
	0x03DC3BCC ADRP X8, 0x3A1000
	0x03DC3BD0 LDR X8, [X8 + 0x760]
	0x03DC3BD4 LDR X20, [X31 + 0x8]
	0x03DC3BD8 ADD X19, X19, 0x140
	0x03DC3BDC LDR X0, [X8]
	0x03DC3BE0 LDR W8, [X0 + 0xE0]
	0x03DC3BE4 CBNZ W8, 0x3DC3BEC
	0x03DC3BE8 BL 0x1C16DFC
	0x03DC3BEC MOV X0, X19
	0x03DC3BF0 MOV X1, X20
	0x03DC3BF4 MOV X2, X31
	0x03DC3BF8 BL 0x3D2CDF0
	0x03DC3BFC B 0x3DC3C04
	0x03DC3C00 MOV W0, W31
	0x03DC3C04 STR W0, [X31 + 0x4]
	0x03DC3C08 LDR X0, [X31]
	0x03DC3C0C LDP X20, X19, [X31 + 0x20]
	0x03DC3C10 LDP X30, X21, [X31 + 0x10]
	0x03DC3C14 ADD X31, X31, 0x30
	0x03DC3C18 RET
	0x03DC3C1C BL 0x1C16F20
	0x03DC3C20 LDRB W8, [X0]
	0x03DC3C24 LDR W9, [X0 + 0x4]
	0x03DC3C28 BFM X8, X9, 0x20, 0x1F
	0x03DC3C2C MOV X0, X8
	0x03DC3C30 RET
	0x03DC3C34 STR X29, [X31 - 0x30]!
	0x03DC3C38 STP X30, X21, [X31 + 0x10]
	0x03DC3C3C STP X20, X19, [X31 + 0x20]
	0x03DC3C40 SUB X31, X31, 0x360
	0x03DC3C44 ADRP X21, 0x625000
	0x03DC3C48 LDRB W8, [X21 + 0x13B]
	0x03DC3C4C MOV X20, X1
	0x03DC3C50 MOV X19, X0
	0x03DC3C54 TBNZ X8, 0x0, 0x3DC3C6C
	0x03DC3C58 ADRP X0, 0x3A5000
	0x03DC3C5C LDR X0, [X0 + 0xEA0]
	0x03DC3C60 BL 0x1C16CF4
	0x03DC3C64 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x626000
	007 Move W8, [X20+303]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x331000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x3A7000
	017 Move X0, [X0+368]
	018 Call 0x1C17CF4
	019 Move X0, 0x3A7000
	020 Move X0, [X0+376]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+303], W8
	024 Move W20, W31
	025 Move W21, 1
	026 Move W22, 0x7FC00000
	027 Move X0, X19
	028 Move X1, X31
	029 Call BaseVisualTreeUpdater.get_visualTree, X0
	030 Compare X0, 0
	031 JumpIfEqual {150}
	032 Move X0, [X0+696]
	033 Compare X0, 0
	034 JumpIfEqual {150}
	035 Move X1, X31
	036 Call YogaNode.get_IsDirty, X0
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {131}
	041 Move X8, [X19+32]
	042 Compare X8, 0
	043 JumpIfEqual {150}
	044 Move W2, [X8+24]
	045 Move W9, [X8+28]
	046 Add W9, W9, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X8+24], W31
	049 Move [X8+28], W9
	050 Move X0, [X8+16]
	051 Move W1, W31
	052 Move X3, X31
	053 Call Array.Clear, X0, X1, X2
	054 Compare W20, 0
	055 JumpIfEqual {65}
	056 Move X0, X19
	057 Move X1, X31
	058 Call BaseVisualTreeUpdater.get_panel, X0
	059 Compare X0, 0
	060 JumpIfEqual {150}
	061 Move X8, [X0]
	062 Move X9, [X8+776]
	063 Move X1, [X8+784]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X0, X19
	066 Move X1, X31
	067 Call BaseVisualTreeUpdater.get_panel, X0
	068 Compare X0, 0
	069 JumpIfEqual {150}
	070 Move [X0+76], W21
	071 Move X0, X19
	072 Move X1, X31
	073 Call BaseVisualTreeUpdater.get_visualTree, X0
	074 Compare X0, 0
	075 JumpIfEqual {150}
	076 Move X0, [X0+696]
	077 Compare X0, 0
	078 JumpIfEqual {150}
	079 Move S0, W22
	080 Move V1, V0
	081 Move X1, X31
	082 Call YogaNode.CalculateLayout, X0, V0, V1
	083 Move X0, X19
	084 Move X1, X31
	085 Call BaseVisualTreeUpdater.get_panel, X0
	086 Compare X0, 0
	087 JumpIfEqual {150}
	088 Move [X0+76], W31
	089 Move X0, X19
	090 Move X1, X31
	091 Call BaseVisualTreeUpdater.get_visualTree, X0
	092 Move X3, [X19+32]
	093 Move X1, X0
	094 Move W2, 1
	095 Move X0, X19
	096 Call UIRLayoutUpdater.UpdateSubTree, X0, X1, X2, X3
	097 Move X1, [X19+32]
	098 Move W2, W20
	099 Call UIRLayoutUpdater.DispatchChangeEvents, X0, X1, X2
	100 Add W20, W20, 1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, X19
	103 Move X1, X31
	104 Call BaseVisualTreeUpdater.get_visualTree, X0
	105 Move X8, 0x3A7000
	106 Move X8, [X8+376]
	107 Move X20, [X8]
	108 Compare X0, 0
	109 JumpIfEqual {115}
	110 Move X8, [X0]
	111 Move X9, [X8+360]
	112 Move X1, [X8+368]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X1, X0
	115 Move X1, X31
	116 Move X0, X20
	117 Move X2, X31
	118 Call String.Concat, X0, X1
	119 Move X8, 0x331000
	120 Move X8, [X8+2600]
	121 Move X20, X0
	122 Move X8, [X8]
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {128}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Move X0, X20
	129 Move X1, X31
	130 Call Debug.LogError, X0
	131 Move X0, X19
	132 Move X1, X31
	133 Call BaseVisualTreeUpdater.get_visualTree, X0
	134 Compare X0, 0
	135 JumpIfEqual {150}
	136 Move X8, [X0]
	137 Move X9, [X8+552]
	138 Move X1, [X8+560]
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Compare X0, 0
	141 JumpIfEqual {150}
	142 Move X20, [X31+32]
	143 Move X19, [X31+40]
	144 Move X22, [X31+16]
	145 Move X21, [X31+24]
	146 Move X1, X31
	147 Move X30, [X31+48]
	148 Call FocusController.ReevaluateFocus, X0
	149 Return 
	150 Call 0x1C17F20

Method: System.Void UpdateSubTree(UnityEngine.UIElements.VisualElement ve, System.Boolean isDisplayed, System.Collections.Generic.List`1<System.Collections.Generic.KeyValuePair`2<UnityEngine.Rect, UnityEngine.UIElements.VisualElement>> changeEvents)

Disassembly:
	0x03DC3C68 STRB W8, [X21 + 0x13B]
	0x03DC3C6C CBZ X19, 0x3DC3D30
	0x03DC3C70 LDR X19, [X19 + 0x18]
	0x03DC3C74 ADD X0, X31, 0x120
	0x03DC3C78 MOVZ W2, 0x120
	0x03DC3C7C MOV X1, X20
	0x03DC3C80 BL 0x3EB1AC0
	0x03DC3C84 CBZ X19, 0x3DC3D30
	0x03DC3C88 ADRP X8, 0x3A5000
	0x03DC3C8C LDR X8, [X8 + 0xEA0]
	0x03DC3C90 ADD X0, X31, 0x0
	0x03DC3C94 ADD X1, X31, 0x120
	0x03DC3C98 MOVZ W2, 0x120
	0x03DC3C9C LDR X20, [X8]
	0x03DC3CA0 BL 0x3EB1AC0
	0x03DC3CA4 LDR X8, [X19]
	0x03DC3CA8 LDRH W9, [X8 + 0x12E]
	0x03DC3CAC CBZ X9, 0x3DC3CD0
	0x03DC3CB0 LDR X10, [X8 + 0xB0]
	0x03DC3CB4 ADD X10, X10, 0x8
	0x03DC3CB8 LDUR X11, [X10 - 0x8]
	0x03DC3CBC CMP X11, X20
	0x03DC3CC0 B.EQ 0x3DC3CE8
	0x03DC3CC4 SUBS X9, X9, 0x1
	0x03DC3CC8 ADD X10, X10, 0x10
	0x03DC3CCC B.NE 0x3DC3CB8
	0x03DC3CD0 MOVZ W2, 0x1
	0x03DC3CD4 MOV X0, X19
	0x03DC3CD8 MOV X1, X20
	0x03DC3CDC BL 0x1C5C788
	0x03DC3CE0 MOV X20, X0
	0x03DC3CE4 B 0x3DC3CF8
	0x03DC3CE8 LDR W9, [X10]
	0x03DC3CEC ADD W9, W9, 0x1
	0x03DC3CF0 ADD X8, X8, W9, 0x4, SXTW
	0x03DC3CF4 ADD X20, X8, 0x138
	0x03DC3CF8 LDR X21, [X20]
	0x03DC3CFC ADD X0, X31, 0x240
	0x03DC3D00 ADD X1, X31, 0x0
	0x03DC3D04 MOVZ W2, 0x120
	0x03DC3D08 BL 0x3EB1AC0
	0x03DC3D0C LDR X2, [X20 + 0x8]
	0x03DC3D10 ADD X1, X31, 0x240
	0x03DC3D14 MOV X0, X19
	0x03DC3D18 BLR X21
	0x03DC3D1C ADD X31, X31, 0x360
	0x03DC3D20 LDP X20, X19, [X31 + 0x20]
	0x03DC3D24 LDP X30, X21, [X31 + 0x10]
	0x03DC3D28 LDR X29, [X31], #0x30
	0x03DC3D2C RET
	0x03DC3D30 BL 0x1C16F20
	0x03DC3D34 STP X30, X21, [X31 - 0x20]!
	0x03DC3D38 STP X20, X19, [X31 + 0x10]
	0x03DC3D3C ADRP X21, 0x625000
	0x03DC3D40 LDRB W8, [X21 + 0x13C]
	0x03DC3D44 MOV X19, X1
	0x03DC3D48 MOV X20, X0
	0x03DC3D4C TBNZ X8, 0x0, 0x3DC3D64
	0x03DC3D50 ADRP X0, 0x3A5000
	0x03DC3D54 LDR X0, [X0 + 0xEA0]
	0x03DC3D58 BL 0x1C16CF4
	0x03DC3D5C MOVZ W8, 0x1
	0x03DC3D60 STRB W8, [X21 + 0x13C]
	0x03DC3D64 MOV X0, X19
	0x03DC3D68 MOV X1, X31
	0x03DC3D6C BL 0x3E0F1E4
	0x03DC3D70 TBZ X0, 0x0, 0x3DC3DC8
	0x03DC3D74 CBZ X20, 0x3DC3DF8
	0x03DC3D78 LDR X20, [X20 + 0x18]
	0x03DC3D7C CBZ X20, 0x3DC3DF8
	0x03DC3D80 ADRP X10, 0x3A5000
	0x03DC3D84 LDR X8, [X20]
	0x03DC3D88 LDR X10, [X10 + 0xEA0]
	0x03DC3D8C LDRH W9, [X8 + 0x12E]
	0x03DC3D90 LDR X1, [X10]
	0x03DC3D94 CBZ X9, 0x3DC3DB8
	0x03DC3D98 LDR X10, [X8 + 0xB0]
	0x03DC3D9C ADD X10, X10, 0x8
	0x03DC3DA0 LDUR X11, [X10 - 0x8]
	0x03DC3DA4 CMP X11, X1
	0x03DC3DA8 B.EQ 0x3DC3DD4
	0x03DC3DAC SUBS X9, X9, 0x1
	0x03DC3DB0 ADD X10, X10, 0x10
	0x03DC3DB4 B.NE 0x3DC3DA0
	0x03DC3DB8 MOV X0, X20
	0x03DC3DBC MOV W2, W31
	0x03DC3DC0 BL 0x1C5C788
	0x03DC3DC4 B 0x3DC3DE0
	0x03DC3DC8 LDP X20, X19, [X31 + 0x10]
	0x03DC3DCC LDP X30, X21, [X31], #0x20
	0x03DC3DD0 RET
	0x03DC3DD4 LDRSW X9, [X10]
	0x03DC3DD8 ADD X8, X8, X9, 0x4, LSL
	0x03DC3DDC ADD X0, X8, 0x138
	0x03DC3DE0 LDP X3, X2, [X0]
	0x03DC3DE4 MOV X0, X20
	0x03DC3DE8 MOV X1, X19
	0x03DC3DEC LDP X20, X19, [X31 + 0x10]
	0x03DC3DF0 LDP X30, X21, [X31], #0x20
	0x03DC3DF4 BR X3
	0x03DC3DF8 BL 0x1C16F20
	0x03DC3DFC UBFM X8, X0, 0x20, 0x3F
	0x03DC3E00 FMOV S2, W0
	0x03DC3E04 CMP X8, 0x1
	0x03DC3E08 MOV V3.16B, V2.16B
	0x03DC3E0C B.NE 0x3DC3E28
	0x03DC3E10 MOVZ W8, 0x42C80000
	0x03DC3E14 FMUL S0, S0, S2
	0x03DC3E18 FMUL S1, S1, S2
	0x03DC3E1C FMOV S2, W8
	0x03DC3E20 FDIV S3, S0, S2
	0x03DC3E24 FDIV S2, S1, S2
	0x03DC3E28 FMOV S1, W31
	0x03DC3E2C FMAXNM S0, S3, S1
	0x03DC3E30 FMAXNM S1, S2, S1
	0x03DC3E34 RET
	0x03DC3E38 SUB X31, X31, 0xC0
	0x03DC3E3C STR D10, [X31 + 0x60]
	0x03DC3E40 STP D9, D8, [X31 + 0x70]
	0x03DC3E44 STP X30, X25, [X31 + 0x80]
	0x03DC3E48 STP X24, X23, [X31 + 0x90]
	0x03DC3E4C STP X22, X21, [X31 + 0xA0]
	0x03DC3E50 STP X20, X19, [X31 + 0xB0]
	0x03DC3E54 ADRP X24, 0x625000
	0x03DC3E58 LDRB W8, [X24 + 0x13D]
	0x03DC3E5C MOV X19, X4
	0x03DC3E60 MOV X20, X3
	0x03DC3E64 MOV X21, X2
	0x03DC3E68 MOV X22, X1
	0x03DC3E6C MOV X23, X0
	0x03DC3E70 TBNZ X8, 0x0, 0x3DC3E88
	0x03DC3E74 ADRP X0, 0x359000
	0x03DC3E78 LDR X0, [X0 + 0x120]
	0x03DC3E7C BL 0x1C16CF4
	0x03DC3E80 MOVZ W8, 0x1
	0x03DC3E84 STRB W8, [X24 + 0x13D]
	0x03DC3E88 MOVI V0.2D, 0x0
	0x03DC3E8C STR X31, [X31 + 0x50]
	0x03DC3E90 STP V0, V0, [X31 + 0x30]
	0x03DC3E94 STP V0, V0, [X31 + 0x10]
	0x03DC3E98 STR V0, [X31]
	0x03DC3E9C CBZ X23, 0x3DC40D0
	0x03DC3EA0 MOV X0, X23
	0x03DC3EA4 MOV X1, X31
	0x03DC3EA8 BL 0x3DE0EB8
	0x03DC3EAC CBZ X0, 0x3DC40D0
	0x03DC3EB0 ADRP X25, 0x359000
	0x03DC3EB4 LDR X8, [X0]
	0x03DC3EB8 LDR X25, [X25 + 0x120]
	0x03DC3EBC MOV X24, X0
	0x03DC3EC0 LDRH W9, [X8 + 0x12E]
	0x03DC3EC4 LDR X1, [X25]
	0x03DC3EC8 CBZ X9, 0x3DC3EEC
	0x03DC3ECC LDR X10, [X8 + 0xB0]
	0x03DC3ED0 ADD X10, X10, 0x8
	0x03DC3ED4 LDUR X11, [X10 - 0x8]
	0x03DC3ED8 CMP X11, X1
	0x03DC3EDC B.EQ 0x3DC3EFC
	0x03DC3EE0 SUBS X9, X9, 0x1
	0x03DC3EE4 ADD X10, X10, 0x10
	0x03DC3EE8 B.NE 0x3DC3ED4
	0x03DC3EEC MOVZ W2, 0x2C
	0x03DC3EF0 MOV X0, X24
	0x03DC3EF4 BL 0x1C5C788
	0x03DC3EF8 B 0x3DC3F0C
	0x03DC3EFC LDR W9, [X10]
	0x03DC3F00 ADD W9, W9, 0x2C
	0x03DC3F04 ADD X8, X8, W9, 0x4, SXTW
	0x03DC3F08 ADD X0, X8, 0x138
	0x03DC3F0C LDP X8, X1, [X0]
	0x03DC3F10 MOV X0, X24
	0x03DC3F14 BLR X8
	0x03DC3F18 LDR X8, [X24]
	0x03DC3F1C LDR X1, [X25]
	0x03DC3F20 MOV V8.16B, V0.16B
	0x03DC3F24 LDRH W9, [X8 + 0x12E]
	0x03DC3F28 CBZ X9, 0x3DC3F4C
	0x03DC3F2C LDR X10, [X8 + 0xB0]
	0x03DC3F30 ADD X10, X10, 0x8
	0x03DC3F34 LDUR X11, [X10 - 0x8]
	0x03DC3F38 CMP X11, X1
	0x03DC3F3C B.EQ 0x3DC3F5C
	0x03DC3F40 SUBS X9, X9, 0x1
	0x03DC3F44 ADD X10, X10, 0x10
	0x03DC3F48 B.NE 0x3DC3F34
	0x03DC3F4C MOVZ W2, 0x13
	0x03DC3F50 MOV X0, X24
	0x03DC3F54 BL 0x1C5C788
	0x03DC3F58 B 0x3DC3F6C
	0x03DC3F5C LDR W9, [X10]
	0x03DC3F60 ADD W9, W9, 0x13
	0x03DC3F64 ADD X8, X8, W9, 0x4, SXTW
	0x03DC3F68 ADD X0, X8, 0x138
	0x03DC3F6C LDP X8, X1, [X0]
	0x03DC3F70 MOV X0, X24
	0x03DC3F74 BLR X8
	0x03DC3F78 MOV X0, X23
	0x03DC3F7C MOV X1, X31
	0x03DC3F80 MOV V9.16B, V0.16B
	0x03DC3F84 BL 0x3DE0F44
	0x03DC3F88 MOV X1, X0
	0x03DC3F8C ADD X0, X31, 0x0
	0x03DC3F90 MOVZ W2, 0x58
	0x03DC3F94 BL 0x3EB1B30
	0x03DC3F98 ADD X0, X31, 0x0
	0x03DC3F9C MOV X1, X31
	0x03DC3FA0 BL 0x3DC9974
	0x03DC3FA4 UBFM X8, X0, 0x20, 0x3F
	0x03DC3FA8 FMOV S0, W0
	0x03DC3FAC CMP X8, 0x1
	0x03DC3FB0 MOV V1.16B, V0.16B
	0x03DC3FB4 B.NE 0x3DC3FD0
	0x03DC3FB8 MOVZ W8, 0x42C80000
	0x03DC3FBC FMUL S1, S8, S0
	0x03DC3FC0 FMUL S0, S9, S0
	0x03DC3FC4 FMOV S2, W8
	0x03DC3FC8 FDIV S1, S1, S2
	0x03DC3FCC FDIV S0, S0, S2
	0x03DC3FD0 FMOV S10, W31
	0x03DC3FD4 FMAXNM S1, S1, S10
	0x03DC3FD8 FMAXNM S0, S0, S10
	0x03DC3FDC ADD X0, X31, 0x0
	0x03DC3FE0 MOV X1, X31
	0x03DC3FE4 STP S1, S0, [X22]
	0x03DC3FE8 BL 0x3DC97D8
	0x03DC3FEC UBFM X8, X0, 0x20, 0x3F
	0x03DC3FF0 FMOV S0, W0
	0x03DC3FF4 CMP X8, 0x1
	0x03DC3FF8 MOV V1.16B, V0.16B
	0x03DC3FFC B.NE 0x3DC4018
	0x03DC4000 MOVZ W8, 0x42C80000
	0x03DC4004 FMUL S1, S8, S0
	0x03DC4008 FMUL S0, S9, S0
	0x03DC400C FMOV S2, W8
	0x03DC4010 FDIV S1, S1, S2
	0x03DC4014 FDIV S0, S0, S2
	0x03DC4018 FMAXNM S1, S1, S10
	0x03DC401C FMAXNM S0, S0, S10
	0x03DC4020 ADD X0, X31, 0x0
	0x03DC4024 MOV X1, X31
	0x03DC4028 STP S1, S0, [X21]
	0x03DC402C BL 0x3DC99C4
	0x03DC4030 UBFM X8, X0, 0x20, 0x3F
	0x03DC4034 FMOV S0, W0
	0x03DC4038 CMP X8, 0x1
	0x03DC403C MOV V1.16B, V0.16B
	0x03DC4040 B.NE 0x3DC405C
	0x03DC4044 MOVZ W8, 0x42C80000
	0x03DC4048 FMUL S1, S8, S0
	0x03DC404C FMUL S0, S9, S0
	0x03DC4050 FMOV S2, W8
	0x03DC4054 FDIV S1, S1, S2
	0x03DC4058 FDIV S0, S0, S2
	0x03DC405C FMOV S10, W31
	0x03DC4060 FMAXNM S1, S1, S10
	0x03DC4064 FMAXNM S0, S0, S10
	0x03DC4068 ADD X0, X31, 0x0
	0x03DC406C MOV X1, X31
	0x03DC4070 STP S1, S0, [X20]
	0x03DC4074 BL 0x3DC9828
	0x03DC4078 UBFM X8, X0, 0x20, 0x3F
	0x03DC407C FMOV S0, W0
	0x03DC4080 CMP X8, 0x1
	0x03DC4084 MOV V1.16B, V0.16B
	0x03DC4088 B.NE 0x3DC40A4
	0x03DC408C MOVZ W8, 0x42C80000
	0x03DC4090 FMUL S1, S8, S0
	0x03DC4094 FMUL S0, S9, S0
	0x03DC4098 FMOV S2, W8
	0x03DC409C FDIV S1, S1, S2
	0x03DC40A0 FDIV S0, S0, S2
	0x03DC40A4 FMAXNM S1, S1, S10
	0x03DC40A8 FMAXNM S0, S0, S10
	0x03DC40AC STP S1, S0, [X19]
	0x03DC40B0 LDP X20, X19, [X31 + 0xB0]
	0x03DC40B4 LDP X22, X21, [X31 + 0xA0]
	0x03DC40B8 LDP X24, X23, [X31 + 0x90]
	0x03DC40BC LDP X30, X25, [X31 + 0x80]
	0x03DC40C0 LDP D9, D8, [X31 + 0x70]
	0x03DC40C4 LDR V10, [X31 + 0x60]
	0x03DC40C8 ADD X31, X31, 0xC0
	0x03DC40CC RET
	0x03DC40D0 BL 0x1C16F20
	0x03DC40D4 STR D12, [X31 - 0x50]!
	0x03DC40D8 STP D11, D10, [X31 + 0x10]
	0x03DC40DC STP D9, D8, [X31 + 0x20]
	0x03DC40E0 STP X30, X21, [X31 + 0x30]
	0x03DC40E4 STP X20, X19, [X31 + 0x40]
	0x03DC40E8 ADRP X21, 0x624000
	0x03DC40EC LDRB W8, [X21 + 0x13E]
	0x03DC40F0 MOV X19, X1
	0x03DC40F4 MOV X20, X0
	0x03DC40F8 TBNZ X8, 0x0, 0x3DC4110
	0x03DC40FC ADRP X0, 0x358000
	0x03DC4100 LDR X0, [X0 + 0x120]
	0x03DC4104 BL 0x1C16CF4
	0x03DC4108 MOVZ W8, 0x1
	0x03DC410C STRB W8, [X21 + 0x13E]
	0x03DC4110 CBZ X20, 0x3DC44F0
	0x03DC4114 MOV X0, X20
	0x03DC4118 MOV X1, X31
	0x03DC411C BL 0x3DE0EB8
	0x03DC4120 ADRP X21, 0x614000
	0x03DC4124 LDRB W8, [X21 + 0xE5A]
	0x03DC4128 MOV X20, X0
	0x03DC412C CBNZ W8, 0x3DC4144
	0x03DC4130 ADRP X0, 0x336000
	0x03DC4134 LDR X0, [X0 + 0x9A0]
	0x03DC4138 BL 0x1C16CF4
	0x03DC413C MOVZ W8, 0x1
	0x03DC4140 STRB W8, [X21 + 0xE5A]
	0x03DC4144 CBZ X20, 0x3DC44F0
	0x03DC4148 ADRP X8, 0x336000
	0x03DC414C LDR X8, [X8 + 0x9A0]
	0x03DC4150 ADRP X21, 0x358000
	0x03DC4154 LDR X9, [X8]
	0x03DC4158 LDR X8, [X20]
	0x03DC415C LDR X10, [X9 + 0xB8]
	0x03DC4160 LDR X21, [X21 + 0x120]
	0x03DC4164 LDRH W9, [X8 + 0x12E]
	0x03DC4168 LDP S11, S12, [X10]
	0x03DC416C LDP S10, S8, [X10 + 0x8]
	0x03DC4170 LDR X1, [X21]
	0x03DC4174 CBZ X9, 0x3DC4198
	0x03DC4178 LDR X10, [X8 + 0xB0]
	0x03DC417C ADD X10, X10, 0x8
	0x03DC4180 LDUR X11, [X10 - 0x8]
	0x03DC4184 CMP X11, X1
	0x03DC4188 B.EQ 0x3DC41A8
	0x03DC418C SUBS X9, X9, 0x1
	0x03DC4190 ADD X10, X10, 0x10
	0x03DC4194 B.NE 0x3DC4180
	0x03DC4198 MOVZ W2, 0x6
	0x03DC419C MOV X0, X20
	0x03DC41A0 BL 0x1C5C788
	0x03DC41A4 B 0x3DC41B8
	0x03DC41A8 LDR W9, [X10]
	0x03DC41AC ADD W9, W9, 0x6
	0x03DC41B0 ADD X8, X8, W9, 0x4, SXTW
	0x03DC41B4 ADD X0, X8, 0x138
	0x03DC41B8 LDP X8, X1, [X0]
	0x03DC41BC MOV X0, X20
	0x03DC41C0 BLR X8
	0x03DC41C4 FMOV S1, 1
	0x03DC41C8 FCMP S0, S1
	0x03DC41CC B.LT 0x3DC423C
	0x03DC41D0 LDR X8, [X20]
	0x03DC41D4 LDR X1, [X21]
	0x03DC41D8 LDRH W9, [X8 + 0x12E]
	0x03DC41DC CBZ X9, 0x3DC4200
	0x03DC41E0 LDR X10, [X8 + 0xB0]
	0x03DC41E4 ADD X10, X10, 0x8
	0x03DC41E8 LDUR X11, [X10 - 0x8]
	0x03DC41EC CMP X11, X1
	0x03DC41F0 B.EQ 0x3DC4210
	0x03DC41F4 SUBS X9, X9, 0x1
	0x03DC41F8 ADD X10, X10, 0x10
	0x03DC41FC B.NE 0x3DC41E8
	0x03DC4200 MOVZ W2, 0x5
	0x03DC4204 MOV X0, X20
	0x03DC4208 BL 0x1C5C788
	0x03DC420C B 0x3DC4220
	0x03DC4210 LDR W9, [X10]
	0x03DC4214 ADD W9, W9, 0x5
	0x03DC4218 ADD X8, X8, W9, 0x4, SXTW
	0x03DC421C ADD X0, X8, 0x138
	0x03DC4220 LDP X8, X1, [X0]
	0x03DC4224 MOV X0, X20
	0x03DC4228 BLR X8
	0x03DC422C FMOV S0, 1
	0x03DC4230 FCMP S3, S0
	0x03DC4234 FMOV S9, 0.5
	0x03DC4238 B.GE 0x3DC4240
	0x03DC423C MOV V9.16B, V11.16B
	0x03DC4240 LDR X8, [X20]
	0x03DC4244 LDR X1, [X21]
	0x03DC4248 LDRH W9, [X8 + 0x12E]
	0x03DC424C CBZ X9, 0x3DC4270
	0x03DC4250 LDR X10, [X8 + 0xB0]
	0x03DC4254 ADD X10, X10, 0x8
	0x03DC4258 LDUR X11, [X10 - 0x8]
	0x03DC425C CMP X11, X1
	0x03DC4260 B.EQ 0x3DC4280
	0x03DC4264 SUBS X9, X9, 0x1
	0x03DC4268 ADD X10, X10, 0x10
	0x03DC426C B.NE 0x3DC4258
	0x03DC4270 MOVZ W2, 0xC
	0x03DC4274 MOV X0, X20
	0x03DC4278 BL 0x1C5C788
	0x03DC427C B 0x3DC4290
	0x03DC4280 LDR W9, [X10]
	0x03DC4284 ADD W9, W9, 0xC
	0x03DC4288 ADD X8, X8, W9, 0x4, SXTW
	0x03DC428C ADD X0, X8, 0x138
	0x03DC4290 LDP X8, X1, [X0]
	0x03DC4294 MOV X0, X20
	0x03DC4298 BLR X8
	0x03DC429C FMOV S1, 1
	0x03DC42A0 FCMP S0, S1
	0x03DC42A4 B.LT 0x3DC4314
	0x03DC42A8 LDR X8, [X20]
	0x03DC42AC LDR X1, [X21]
	0x03DC42B0 LDRH W9, [X8 + 0x12E]
	0x03DC42B4 CBZ X9, 0x3DC42D8
	0x03DC42B8 LDR X10, [X8 + 0xB0]
	0x03DC42BC ADD X10, X10, 0x8
	0x03DC42C0 LDUR X11, [X10 - 0x8]
	0x03DC42C4 CMP X11, X1
	0x03DC42C8 B.EQ 0x3DC42E8
	0x03DC42CC SUBS X9, X9, 0x1
	0x03DC42D0 ADD X10, X10, 0x10
	0x03DC42D4 B.NE 0x3DC42C0
	0x03DC42D8 MOVZ W2, 0x9
	0x03DC42DC MOV X0, X20
	0x03DC42E0 BL 0x1C5C788
	0x03DC42E4 B 0x3DC42F8
	0x03DC42E8 LDR W9, [X10]
	0x03DC42EC ADD W9, W9, 0x9
	0x03DC42F0 ADD X8, X8, W9, 0x4, SXTW
	0x03DC42F4 ADD X0, X8, 0x138
	0x03DC42F8 LDP X8, X1, [X0]
	0x03DC42FC MOV X0, X20
	0x03DC4300 BLR X8
	0x03DC4304 FMOV S0, 1
	0x03DC4308 FCMP S3, S0
	0x03DC430C FMOV S11, 0.5
	0x03DC4310 B.GE 0x3DC4318
	0x03DC4314 MOV V11.16B, V12.16B
	0x03DC4318 LDR X8, [X20]
	0x03DC431C LDR X1, [X21]
	0x03DC4320 LDRH W9, [X8 + 0x12E]
	0x03DC4324 CBZ X9, 0x3DC4348
	0x03DC4328 LDR X10, [X8 + 0xB0]
	0x03DC432C ADD X10, X10, 0x8
	0x03DC4330 LDUR X11, [X10 - 0x8]
	0x03DC4334 CMP X11, X1
	0x03DC4338 B.EQ 0x3DC4358
	0x03DC433C SUBS X9, X9, 0x1
	0x03DC4340 ADD X10, X10, 0x10
	0x03DC4344 B.NE 0x3DC4330
	0x03DC4348 MOVZ W2, 0x8
	0x03DC434C MOV X0, X20
	0x03DC4350 BL 0x1C5C788
	0x03DC4354 B 0x3DC4368
	0x03DC4358 LDR W9, [X10]
	0x03DC435C ADD W9, W9, 0x8
	0x03DC4360 ADD X8, X8, W9, 0x4, SXTW
	0x03DC4364 ADD X0, X8, 0x138
	0x03DC4368 LDP X8, X1, [X0]
	0x03DC436C MOV X0, X20
	0x03DC4370 BLR X8
	0x03DC4374 FMOV S1, 1
	0x03DC4378 FCMP S0, S1
	0x03DC437C B.LT 0x3DC43EC
	0x03DC4380 LDR X8, [X20]
	0x03DC4384 LDR X1, [X21]
	0x03DC4388 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+176], D15
	003 Move [X31+184], D14
	004 Move [X31+192], D13
	005 Move [X31+200], D12
	006 Move [X31+208], D11
	007 Move [X31+216], D10
	008 Move [X31+224], D9
	009 Move [X31+232], D8
	010 Move [X31+240], X29
	011 Move [X31+248], X30
	012 Move [X31+256], X28
	013 Move [X31+264], X27
	014 Move [X31+272], X26
	015 Move [X31+280], X25
	016 Move [X31+288], X24
	017 Move [X31+296], X23
	018 Move [X31+304], X22
	019 Move [X31+312], X21
	020 Move [X31+320], X20
	021 Move [X31+328], X19
	022 Move X23, 0x626000
	023 Move W8, [X23+304]
	024 Move X20, X3
	025 Move W22, W2
	026 Move X19, X1
	027 Move X21, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {46}
	032 Move X0, 0x35C000
	033 Move X0, [X0+344]
	034 Call 0x1C17CF4
	035 Move X0, 0x35A000
	036 Move X0, [X0+288]
	037 Call 0x1C17CF4
	038 Move X0, 0x3A7000
	039 Move X0, [X0+384]
	040 Call 0x1C17CF4
	041 Move X0, 0x3A7000
	042 Move X0, [X0+392]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X23+304], W8
	046 Move [X31+104], X31
	047 Compare X19, 0
	048 JumpIfEqual {525}
	049 Move X0, [X19+696]
	050 Compare X0, 0
	051 JumpIfEqual {525}
	052 Move X1, X31
	053 Call YogaNode.get_LayoutX, X0
	054 Move X0, [X19+696]
	055 Compare X0, 0
	056 JumpIfEqual {525}
	057 Move X1, X31
	058 Move V8, V0
	059 Call YogaNode.get_LayoutY, X0
	060 Move X0, [X19+696]
	061 Compare X0, 0
	062 JumpIfEqual {525}
	063 Move X1, X31
	064 Move V9, V0
	065 Call YogaNode.get_LayoutWidth, X0
	066 Move X0, [X19+696]
	067 Move [X31+76], S0
	068 Compare X0, 0
	069 JumpIfEqual {525}
	070 Move X1, X31
	071 Call YogaNode.get_LayoutHeight, X0
	072 Move X0, [X19+696]
	073 Move [X31+72], S0
	074 Compare X0, 0
	075 JumpIfEqual {525}
	076 Move X1, X31
	077 Call YogaNode.get_LayoutPaddingLeft, X0
	078 Move X0, [X19+696]
	079 Compare X0, 0
	080 JumpIfEqual {525}
	081 Move X1, X31
	082 Move V12, V0
	083 Call YogaNode.get_LayoutPaddingLeft, X0
	084 Move X0, [X19+696]
	085 Move [X31+68], S0
	086 Compare X0, 0
	087 JumpIfEqual {525}
	088 Move X1, X31
	089 Move [X31+52], S9
	090 Move [X31+60], S8
	091 Call YogaNode.get_LayoutPaddingRight, X0
	092 Move X0, [X19+696]
	093 Compare X0, 0
	094 JumpIfEqual {525}
	095 Move X25, 0x35A000
	096 Move X25, [X25+288]
	097 Move X1, X31
	098 Move V10, V0
	099 Call YogaNode.get_LayoutPaddingBottom, X0
	100 Move V3, [X19+100]
	101 Move S2, [X19+104]
	102 Move S8, [X19+108]
	103 Move V13, [X31+68]
	104 Add S1, S12, S10
	105 Move S11, [X31+72]
	106 Move S10, [X31+76]
	107 Move [X31+60], S3
	108 Move [X31+68], S2
	109 Move S9, [X19+112]
	110 Move S3, [X19+116]
	111 Move V2, [X19+120]
	112 Add S0, S13, S0
	113 Move X0, X19
	114 Move X1, X31
	115 Move [X31+28], S2
	116 Move [X31+36], S3
	117 Move V3, [X19+124]
	118 Move V2, [X19+128]
	119 Subtract S14, S10, S1
	120 Subtract S15, S11, S0
	121 Move [X31+20], S2
	122 Move [X31+28], S3
	123 Call VisualElement.get_isHierarchyDisplayed, X0
	124 Move S3, [X31+20]
	125 Move S2, [X31+24]
	126 Subtract S0, S8, S10
	127 Subtract S1, S9, S11
	128 Multiply S0, S0, S0
	129 Subtract S2, S2, S14
	130 Subtract S3, S3, S15
	131 Multiply S1, S1, S1
	132 Add S10, S0, S1
	133 Multiply S1, S2, S2
	134 Multiply S2, S3, S3
	135 Move [X31+8], S9
	136 Move [X31+16], S8
	137 Move [X31+24], S15
	138 Move S9, [X31+56]
	139 Move S0, [X31+60]
	140 Add S1, S1, S2
	141 Move V15, [X31+52]
	142 Move V2, [X31+64]
	143 Move X8, -53317632
	144 Move S4, [X31+28]
	145 Move S3, [X31+32]
	146 Move V11, [X8+3872]
	147 Subtract S0, S9, S0
	148 Subtract S2, S15, S2
	149 Subtract S3, S12, S3
	150 Subtract S4, S13, S4
	151 Multiply S0, S0, S0
	152 Multiply S2, S2, S2
	153 Move [X31+16], S14
	154 Add S14, S0, S2
	155 Multiply S0, S3, S3
	156 Multiply S2, S4, S4
	157 NotImplemented "Instruction FCMP not yet implemented."
	158 Move W9, 3072
	159 Add S0, S0, S2
	160 NotImplemented "Instruction FCCMP not yet implemented."
	161 NotImplemented "Instruction CSEL not yet implemented."
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 NotImplemented "Instruction FCCMP not yet implemented."
	164 Or W24, W8, 512
	165 NotImplemented "Instruction CSEL not yet implemented."
	166 And W8, W26, 1536
	167 Move V8, V12
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move W23, W26
	170 Move X0, X19
	171 Move X1, X31
	172 Call VisualElement.get_computedStyle, X0
	173 Add X8, X31, 144
	174 Move X1, X31
	175 Call ComputedStyle.get_rotate, X0
	176 Move V0, [X31+144]
	177 Move V12, V10
	178 NotImplemented "Instruction FCMP not yet implemented."
	179 Move X0, X19
	180 Move X1, X31
	181 Call VisualElement.get_computedStyle, X0
	182 Move X1, X31
	183 Call ComputedStyle.get_scale, X0
	184 Move X27, 0x616000
	185 Move W8, [X27+2139]
	186 Move X9, X0
	187 ShiftRight X9, 32
	188 And X9, X9, 0x7FFFFFFF
	189 Move S2, W9
	190 Move S10, W0
	191 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	192 Compare W8, 0
	193 JumpIfNotEqual {201}
	194 Move X0, 0x331000
	195 Move X0, [X0+1440]
	196 Move [X31+2], V2
	197 Call 0x1C17CF4
	198 Move V2, [X31+2]
	199 Move W8, 1
	200 Move [X27+2139], W8
	201 Move X8, 0x331000
	202 Move X8, [X8+1440]
	203 Move X8, [X8]
	204 Move X8, [X8+184]
	205 Move V0, [X8+12]
	206 Move V1, [X8+16]
	207 Subtract S0, S10, S0
	208 Subtract V1, V2, V1
	209 Multiply S0, S0, S0
	210 NotImplemented "Instruction INVALID not yet implemented."
	211 Add S0, S0, S1
	212 Move S1, V1.S[1]
	213 Add S0, S1, S0
	214 NotImplemented "Instruction FCMP not yet implemented."
	215 Move V10, V12
	216 Move X0, X19
	217 Move X1, X31
	218 Call VisualElement.get_resolvedStyle, X0
	219 Compare X0, 0
	220 JumpIfEqual {525}
	221 Move X8, [X0]
	222 Move X1, [X25]
	223 Move X23, X0
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Compare X9, 0
	226 JumpIfEqual {233}
	227 Move X10, [X8+176]
	228 Add X10, X10, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X9, X9, 1
	232 Add X10, X10, 16
	233 Move W2, 35
	234 Move X0, X23
	235 Call 0x1C5D788
	236 Move W9, [X10]
	237 Add W9, W9, 35
	238 Add X8, X8, W9
	239 Add X0, X8, 312
	240 Move X8, [X0]
	241 Move X1, [X0+8]
	242 Move X0, X23
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move X27, 0x617000
	245 Move W8, [X27+1450]
	246 Move V10, V0
	247 Compare W8, 0
	248 JumpIfNotEqual {254}
	249 Move X0, 0x338000
	250 Move X0, [X0+1208]
	251 Call 0x1C17CF4
	252 Move W8, 1
	253 Move [X27+1450], W8
	254 Move X28, 0x338000
	255 Move X28, [X28+1208]
	256 Move X9, -53313536
	257 Move V13, [X9+576]
	258 NotImplemented "Instruction FABS not yet implemented."
	259 Move X8, [X28]
	260 Move S1, W31
	261 Move S3, 8
	262 NotImplemented "Instruction FMAXNM not yet implemented."
	263 Move X8, [X8+184]
	264 Multiply S0, S0, S13
	265 NotImplemented "Instruction FABD not yet implemented."
	266 Move W23, W24
	267 Move V2, [X8]
	268 Move V10, V12
	269 Multiply S2, S2, S3
	270 NotImplemented "Instruction FCMP not yet implemented."
	271 NotImplemented "Instruction FCSEL not yet implemented."
	272 NotImplemented "Instruction FCMP not yet implemented."
	273 Move X0, X19
	274 Move X1, X31
	275 Call VisualElement.get_resolvedStyle, X0
	276 Compare X0, 0
	277 JumpIfEqual {525}
	278 Move X8, [X0]
	279 Move X1, [X25]
	280 Move X23, X0
	281 NotImplemented "Instruction LDRH not yet implemented."
	282 Compare X9, 0
	283 JumpIfEqual {290}
	284 Move X10, [X8+176]
	285 Add X10, X10, 8
	286 NotImplemented "Instruction LDUR not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Subtract X9, X9, 1
	289 Add X10, X10, 16
	290 Move W2, 35
	291 Move X0, X23
	292 Call 0x1C5D788
	293 Move W9, [X10]
	294 Add W9, W9, 35
	295 Add X8, X8, W9
	296 Add X0, X8, 312
	297 Move X8, [X0]
	298 Move X1, [X0+8]
	299 Move X0, X23
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move W8, [X27+1450]
	302 Move V10, V1
	303 Compare W8, 0
	304 JumpIfNotEqual {310}
	305 Move X0, 0x337000
	306 Move X0, [X0+1208]
	307 Call 0x1C17CF4
	308 Move W8, 1
	309 Move [X27+1450], W8
	310 Move X8, [X28]
	311 NotImplemented "Instruction FABS not yet implemented."
	312 Move S1, W31
	313 Move S3, 8
	314 Move X8, [X8+184]
	315 NotImplemented "Instruction FMAXNM not yet implemented."
	316 Multiply S0, S0, S13
	317 NotImplemented "Instruction FABD not yet implemented."
	318 Move V2, [X8]
	319 Move V10, V12
	320 Multiply S2, S2, S3
	321 NotImplemented "Instruction FCMP not yet implemented."
	322 NotImplemented "Instruction FCSEL not yet implemented."
	323 NotImplemented "Instruction FCMP not yet implemented."
	324 NotImplemented "Instruction CSEL not yet implemented."
	325 Move X0, X19
	326 Move X1, X31
	327 Call VisualElement.get_resolvedStyle, X0
	328 Compare X0, 0
	329 JumpIfEqual {525}
	330 Move X8, [X0]
	331 Move X1, [X25]
	332 Move X24, X0
	333 NotImplemented "Instruction LDRH not yet implemented."
	334 Compare X9, 0
	335 JumpIfEqual {342}
	336 Move X10, [X8+176]
	337 Add X10, X10, 8
	338 NotImplemented "Instruction LDUR not yet implemented."
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Subtract X9, X9, 1
	341 Add X10, X10, 16
	342 Move W2, 15
	343 Move X0, X24
	344 Call 0x1C5D788
	345 Move W9, [X10]
	346 Add W9, W9, 15
	347 Add X8, X8, W9
	348 Add X0, X8, 312
	349 Move X8, [X0]
	350 Move X1, [X0+8]
	351 Move X0, X24
	352 NotImplemented "Instruction BLR not yet implemented."
	353 NotImplemented "Instruction CMP not yet implemented."
	354 NotImplemented "Instruction CSET not yet implemented."
	355 And W24, W8, W22
	356 Move X0, X19
	357 Move W1, W24
	358 Move X2, X31
	359 Call VisualElement.set_isHierarchyDisplayed, X0, X1
	360 Compare W23, 0
	361 JumpIfEqual {366}
	362 Move X0, X19
	363 Move W1, W23
	364 Move X2, X31
	365 Call VisualElement.IncrementVersion, X0, X1
	366 Move V1, [X31+76]
	367 Move V0, [X31+72]
	368 Move X0, [X19+696]
	369 Move [X19+100], S9
	370 Move [X19+108], S15
	371 Move [X19+108], S1
	372 Move [X19+116], S0
	373 Move V0, [X31+68]
	374 Move V1, [X31+16]
	375 Move [X19+116], S8
	376 Move [X19+124], S0
	377 Move V0, [X31+24]
	378 Move [X19+124], S1
	379 Move [X19+132], S0
	380 Compare X0, 0
	381 JumpIfEqual {525}
	382 Move X1, X31
	383 Call YogaNode.get_HasNewLayout, X0
	384 Move W22, W0
	385 Move TEMP, X0
	386 And TEMP, TEMP, 1
	387 Compare TEMP, 1
	388 JumpIfNotEqual {422}
	389 Move X8, [X19+888]
	390 Add X0, X31, 104
	391 Move X1, X31
	392 Move [X31+104], X8
	393 Call Hierarchy.get_childCount, X0
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Move W23, W0
	396 Move W25, W31
	397 Move X8, [X19+888]
	398 Add X0, X31, 104
	399 Move W1, W25
	400 Move X2, X31
	401 Move [X31+104], X8
	402 Call Hierarchy.get_Item, X0, X1
	403 Compare X0, 0
	404 JumpIfEqual {525}
	405 Move X26, X0
	406 Move X0, [X0+696]
	407 Compare X0, 0
	408 JumpIfEqual {525}
	409 Move X1, X31
	410 Call YogaNode.get_HasNewLayout, X0
	411 Move TEMP, X0
	412 And TEMP, TEMP, 1
	413 Compare TEMP, 1
	414 JumpIfNotEqual {420}
	415 Move X0, X21
	416 Move X1, X26
	417 Move W2, W24
	418 Move X3, X20
	419 Call UIRLayoutUpdater.UpdateSubTree, X0, X1, X2, X3
	420 Add W25, W25, 1
	421 NotImplemented "Instruction CMP not yet implemented."
	422 NotImplemented "Instruction FCMP not yet implemented."
	423 NotImplemented "Instruction FCMP not yet implemented."
	424 Move X21, 0x35B000
	425 Move X21, [X21+344]
	426 Move X0, [X21]
	427 Move W8, [X0+224]
	428 Compare W8, 0
	429 JumpIfNotEqual {432}
	430 Call 0x1C17DFC
	431 Move X0, [X21]
	432 Move X8, [X0+184]
	433 Move X0, X19
	434 Move X2, X31
	435 Move W1, [X8+16]
	436 Call VisualElement.HasEventCallbacksOrDefaultActions, X0, X1
	437 Move TEMP, X0
	438 And TEMP, TEMP, 1
	439 Compare TEMP, 1
	440 JumpIfNotEqual {480}
	441 Move X8, 0x3A6000
	442 Move X8, [X8+384]
	443 Move S0, [X31+60]
	444 Move S1, [X31+64]
	445 Move S3, [X31+8]
	446 Move S2, [X31+12]
	447 Add X0, X31, 80
	448 Move X2, [X8]
	449 Move X1, X19
	450 Move [X31+80], X31
	451 Move [X31+88], X31
	452 Move [X31+96], X31
	453 Call KeyValuePair`2<Rect, Object>..ctor, X0, X1, X2
	454 Compare X20, 0
	455 JumpIfEqual {525}
	456 Move V0, [X31+5]
	457 Move X8, [X31+96]
	458 Move X9, 0x3A6000
	459 Move X9, [X9+392]
	460 Move [X31+7], V0
	461 Move [X31+128], X8
	462 Move W11, [X20+28]
	463 Move X8, [X20+16]
	464 Move X10, [X9]
	465 Add W9, W11, 1
	466 Move [X20+28], W9
	467 Compare X8, 0
	468 JumpIfEqual {525}
	469 NotImplemented "Instruction LDRSW not yet implemented."
	470 Move W11, [X8+24]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Add W10, W9, 1
	473 Move [X20+24], W10
	474 Move X10, [X31+128]
	475 Move V0, [X31+7]
	476 Move W11, 24
	477 NotImplemented "Instruction MADD not yet implemented."
	478 Move [X8+48], X10
	479 Move [X8+2], V0
	480 Move TEMP, X22
	481 And TEMP, TEMP, 1
	482 Compare TEMP, 1
	483 JumpIfNotEqual {489}
	484 Move X0, [X19+696]
	485 Compare X0, 0
	486 JumpIfEqual {525}
	487 Move X1, X31
	488 Call YogaNode.MarkLayoutSeen, X0
	489 Move X20, [X31+320]
	490 Move X19, [X31+328]
	491 Move X22, [X31+304]
	492 Move X21, [X31+312]
	493 Move X24, [X31+288]
	494 Move X23, [X31+296]
	495 Move X26, [X31+272]
	496 Move X25, [X31+280]
	497 Move X28, [X31+256]
	498 Move X27, [X31+264]
	499 Move X29, [X31+240]
	500 Move X30, [X31+248]
	501 Move D9, [X31+224]
	502 Move D8, [X31+232]
	503 Move D11, [X31+208]
	504 Move D10, [X31+216]
	505 Move D13, [X31+192]
	506 Move D12, [X31+200]
	507 Move D15, [X31+176]
	508 Move D14, [X31+184]
	509 Add X31, X31, 336
	510 Return 
	511 Move X8, [X10+32]
	512 Move V0, [X31+7]
	513 Move X9, [X31+128]
	514 Add X1, X31, 144
	515 Move X8, [X8+192]
	516 Move X0, X20
	517 Move X2, [X8+112]
	518 Move [X31+9], V0
	519 Move [X31+160], X9
	520 Call List`1<KeyValuePair`2<Rect, Object>>.AddWithResize, X0, X1
	521 Move TEMP, X22
	522 And TEMP, TEMP, 1
	523 Compare TEMP, 1
	524 JumpIfEqual {484}
	525 Call 0x1C17F20

Method: System.Void DispatchChangeEvents(System.Collections.Generic.List`1<System.Collections.Generic.KeyValuePair`2<UnityEngine.Rect, UnityEngine.UIElements.VisualElement>> changeEvents, System.Int32 currentLayoutPass)

Disassembly:
	0x03DC438C CBZ X9, 0x3DC43B0
	0x03DC4390 LDR X10, [X8 + 0xB0]
	0x03DC4394 ADD X10, X10, 0x8
	0x03DC4398 LDUR X11, [X10 - 0x8]
	0x03DC439C CMP X11, X1
	0x03DC43A0 B.EQ 0x3DC43C0
	0x03DC43A4 SUBS X9, X9, 0x1
	0x03DC43A8 ADD X10, X10, 0x10
	0x03DC43AC B.NE 0x3DC4398
	0x03DC43B0 MOVZ W2, 0x7
	0x03DC43B4 MOV X0, X20
	0x03DC43B8 BL 0x1C5C788
	0x03DC43BC B 0x3DC43D0
	0x03DC43C0 LDR W9, [X10]
	0x03DC43C4 ADD W9, W9, 0x7
	0x03DC43C8 ADD X8, X8, W9, 0x4, SXTW
	0x03DC43CC ADD X0, X8, 0x138
	0x03DC43D0 LDP X8, X1, [X0]
	0x03DC43D4 MOV X0, X20
	0x03DC43D8 BLR X8
	0x03DC43DC FMOV S0, 1
	0x03DC43E0 FCMP S3, S0
	0x03DC43E4 FMOV S12, 0.5
	0x03DC43E8 B.GE 0x3DC43F0
	0x03DC43EC MOV V12.16B, V10.16B
	0x03DC43F0 LDR X8, [X20]
	0x03DC43F4 LDR X1, [X21]
	0x03DC43F8 LDRH W9, [X8 + 0x12E]
	0x03DC43FC CBZ X9, 0x3DC4420
	0x03DC4400 LDR X10, [X8 + 0xB0]
	0x03DC4404 ADD X10, X10, 0x8
	0x03DC4408 LDUR X11, [X10 - 0x8]
	0x03DC440C CMP X11, X1
	0x03DC4410 B.EQ 0x3DC4430
	0x03DC4414 SUBS X9, X9, 0x1
	0x03DC4418 ADD X10, X10, 0x10
	0x03DC441C B.NE 0x3DC4408
	0x03DC4420 MOVZ W2, 0x4
	0x03DC4424 MOV X0, X20
	0x03DC4428 BL 0x1C5C788
	0x03DC442C B 0x3DC4440
	0x03DC4430 LDR W9, [X10]
	0x03DC4434 ADD W9, W9, 0x4
	0x03DC4438 ADD X8, X8, W9, 0x4, SXTW
	0x03DC443C ADD X0, X8, 0x138
	0x03DC4440 LDP X8, X1, [X0]
	0x03DC4444 MOV X0, X20
	0x03DC4448 BLR X8
	0x03DC444C FMOV S1, 1
	0x03DC4450 FCMP S0, S1
	0x03DC4454 B.LT 0x3DC44C4
	0x03DC4458 LDR X8, [X20]
	0x03DC445C LDR X1, [X21]
	0x03DC4460 LDRH W9, [X8 + 0x12E]
	0x03DC4464 CBZ X9, 0x3DC4488
	0x03DC4468 LDR X10, [X8 + 0xB0]
	0x03DC446C ADD X10, X10, 0x8
	0x03DC4470 LDUR X11, [X10 - 0x8]
	0x03DC4474 CMP X11, X1
	0x03DC4478 B.EQ 0x3DC4498
	0x03DC447C SUBS X9, X9, 0x1
	0x03DC4480 ADD X10, X10, 0x10
	0x03DC4484 B.NE 0x3DC4470
	0x03DC4488 MOVZ W2, 0x1
	0x03DC448C MOV X0, X20
	0x03DC4490 BL 0x1C5C788
	0x03DC4494 B 0x3DC44A8
	0x03DC4498 LDR W9, [X10]
	0x03DC449C ADD W9, W9, 0x1
	0x03DC44A0 ADD X8, X8, W9, 0x4, SXTW
	0x03DC44A4 ADD X0, X8, 0x138
	0x03DC44A8 LDP X8, X1, [X0]
	0x03DC44AC MOV X0, X20
	0x03DC44B0 BLR X8
	0x03DC44B4 FMOV S0, 1
	0x03DC44B8 FCMP S3, S0
	0x03DC44BC FMOV S0, 0.5
	0x03DC44C0 B.GE 0x3DC44C8
	0x03DC44C4 MOV V0.16B, V8.16B
	0x03DC44C8 STR S9, [X19 + 0x100]
	0x03DC44CC STR S11, [X19 + 0x104]
	0x03DC44D0 STR S12, [X19 + 0x108]
	0x03DC44D4 STR S0, [X19 + 0x10C]
	0x03DC44D8 LDP X20, X19, [X31 + 0x40]
	0x03DC44DC LDP X30, X21, [X31 + 0x30]
	0x03DC44E0 LDP D9, D8, [X31 + 0x20]
	0x03DC44E4 LDP D11, D10, [X31 + 0x10]
	0x03DC44E8 LDR V12, [X31], #0x50
	0x03DC44EC RET
	0x03DC44F0 BL 0x1C16F20
	0x03DC44F4 SUB X31, X31, 0xB0
	0x03DC44F8 STP X30, X25, [X31 + 0x70]
	0x03DC44FC STP X24, X23, [X31 + 0x80]
	0x03DC4500 STP X22, X21, [X31 + 0x90]
	0x03DC4504 STP X20, X19, [X31 + 0xA0]
	0x03DC4508 LDR V1, [X0]
	0x03DC450C LDR V0, [X0 + 0x2]
	0x03DC4510 MOV X19, X8
	0x03DC4514 ADD X1, X31, 0x20
	0x03DC4518 MOVZ W2, 0x50
	0x03DC451C STP V1, V0, [X31 + 0x20]
	0x03DC4520 LDR V1, [X0 + 0x3]
	0x03DC4524 LDR V0, [X0 + 0x4]
	0x03DC4528 STP V1, V0, [X31 + 0x40]
	0x03DC452C LDR V0, [X0 + 0x5]
	0x03DC4530 STR V0, [X31 + 0x6]
	0x03DC4534 LDR V1, [X0 + 0x6]
	0x03DC4538 LDR V0, [X0 + 0x7]
	0x03DC453C LDRB W20, [X0 + 0x98]
	0x03DC4540 LDR W8, [X0 + 0x9C]
	0x03DC4544 LDRB W21, [X0 + 0xA0]
	0x03DC4548 LDR W9, [X0 + 0xA4]
	0x03DC454C LDRB W22, [X0 + 0xA8]
	0x03DC4550 LDR W10, [X0 + 0xAC]
	0x03DC4554 LDRB W23, [X0 + 0xB0]
	0x03DC4558 LDR W11, [X0 + 0xB4]
	0x03DC455C LDP X24, X25, [X0 + 0x80]
	0x03DC4560 MOV X0, X19
	0x03DC4564 STP V0, V1, [X31]
	0x03DC4568 BFM X20, X8, 0x20, 0x1F
	0x03DC456C BFM X21, X9, 0x20, 0x1F
	0x03DC4570 BFM X22, X10, 0x20, 0x1F
	0x03DC4574 BFM X23, X11, 0x20, 0x1F
	0x03DC4578 BL 0x3EB1AC0
	0x03DC457C LDR V1, [X31 + 0x1]
	0x03DC4580 LDR V0, [X31]
	0x03DC4584 STP X24, X25, [X19 + 0x70]
	0x03DC4588 STP X20, X21, [X19 + 0x80]
	0x03DC458C STP X22, X23, [X19 + 0x90]
	0x03DC4590 STP V1, V0, [X19 + 0x50]
	0x03DC4594 LDP X20, X19, [X31 + 0xA0]
	0x03DC4598 LDP X22, X21, [X31 + 0x90]
	0x03DC459C LDP X24, X23, [X31 + 0x80]
	0x03DC45A0 LDP X30, X25, [X31 + 0x70]
	0x03DC45A4 ADD X31, X31, 0xB0
	0x03DC45A8 RET
	0x03DC45AC STP D15, D14, [X31 - 0x70]!
	0x03DC45B0 STP D13, D12, [X31 + 0x10]
	0x03DC45B4 STP D11, D10, [X31 + 0x20]
	0x03DC45B8 STP D9, D8, [X31 + 0x30]
	0x03DC45BC STP X30, X23, [X31 + 0x40]
	0x03DC45C0 STP X22, X21, [X31 + 0x50]
	0x03DC45C4 STP X20, X19, [X31 + 0x60]
	0x03DC45C8 CBZ X0, 0x3DC4710
	0x03DC45CC LDR X8, [X0]
	0x03DC45D0 MOV W21, W1
	0x03DC45D4 MOV X19, X3
	0x03DC45D8 MOV X20, X2
	0x03DC45DC LDP X9, X1, [X8 + 0x188]
	0x03DC45E0 MOV X22, X0
	0x03DC45E4 MOV V11.16B, V7.16B
	0x03DC45E8 MOV V13.16B, V6.16B
	0x03DC45EC MOV V8.16B, V5.16B
	0x03DC45F0 MOV V9.16B, V4.16B
	0x03DC45F4 MOV V10.16B, V3.16B
	0x03DC45F8 MOV V12.16B, V2.16B
	0x03DC45FC MOV V14.16B, V1.16B
	0x03DC4600 MOV V15.16B, V0.16B
	0x03DC4604 BLR X9
	0x03DC4608 LDR X8, [X22]
	0x03DC460C MOV W23, W0
	0x03DC4610 MOV X0, X22
	0x03DC4614 LDP X9, X1, [X8 + 0x1A8]
	0x03DC4618 BLR X9
	0x03DC461C CBZ W21, 0x3DC46E0
	0x03DC4620 SCVTF S0, W23
	0x03DC4624 SCVTF S1, W0
	0x03DC4628 FMUL S0, S13, S0
	0x03DC462C FMUL S1, S11, S1
	0x03DC4630 FDIV S0, S0, S1
	0x03DC4634 CMP W21, 0x2
	0x03DC4638 FABS S0, S0
	0x03DC463C FDIV S1, S12, S10
	0x03DC4640 B.EQ 0x3DC4674
	0x03DC4644 CMP W21, 0x1
	0x03DC4648 B.NE 0x3DC4714
	0x03DC464C FCMP S1, S0
	0x03DC4650 B.LE 0x3DC46C4
	0x03DC4654 FDIV S0, S0, S1
	0x03DC4658 FMUL S0, S11, S0
	0x03DC465C FSUB S1, S11, S0
	0x03DC4660 FMOV S2, 0.5
	0x03DC4664 FMUL S1, S1, S2
	0x03DC4668 FADD S8, S8, S1
	0x03DC466C MOV V11.16B, V0.16B
	0x03DC4670 B 0x3DC46E0
	0x03DC4674 FCMP S1, S0
	0x03DC4678 B.LE 0x3DC46A0
	0x03DC467C FDIV S0, S0, S1
	0x03DC4680 FMOV S1, 1
	0x03DC4684 FSUB S1, S1, S0
	0x03DC4688 FMOV S2, 0.5
	0x03DC468C FMUL S1, S12, S1
	0x03DC4690 FMUL S1, S1, S2
	0x03DC4694 FADD S15, S15, S1
	0x03DC4698 FMUL S12, S12, S0
	0x03DC469C B 0x3DC46E0
	0x03DC46A0 FDIV S0, S1, S0
	0x03DC46A4 FMOV S1, 1
	0x03DC46A8 FSUB S1, S1, S0
	0x03DC46AC FMOV S2, 0.5
	0x03DC46B0 FMUL S1, S10, S1
	0x03DC46B4 FMUL S1, S1, S2
	0x03DC46B8 FADD S14, S14, S1
	0x03DC46BC FMUL S10, S10, S0
	0x03DC46C0 B 0x3DC46E0
	0x03DC46C4 FDIV S0, S1, S0
	0x03DC46C8 FMUL S0, S13, S0
	0x03DC46CC FSUB S1, S13, S0
	0x03DC46D0 FMOV S2, 0.5
	0x03DC46D4 FMUL S1, S1, S2
	0x03DC46D8 FADD S9, S9, S1
	0x03DC46DC MOV V13.16B, V0.16B

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+112], D15
	003 Move [X31+120], D14
	004 Move [X31+128], D13
	005 Move [X31+136], D12
	006 Move [X31+144], D11
	007 Move [X31+152], D10
	008 Move [X31+160], D9
	009 Move [X31+168], D8
	010 Move [X31+176], X30
	011 Move [X31+184], X25
	012 Move [X31+192], X24
	013 Move [X31+200], X23
	014 Move [X31+208], X22
	015 Move [X31+216], X21
	016 Move [X31+224], X20
	017 Move [X31+232], X19
	018 Move X21, 0x625000
	019 Move W8, [X21+305]
	020 Move W19, W2
	021 Move X20, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {52}
	026 Move X0, 0x3A6000
	027 Move X0, [X0+400]
	028 Call 0x1C17CF4
	029 Move X0, 0x3A6000
	030 Move X0, [X0+408]
	031 Call 0x1C17CF4
	032 Move X0, 0x3A6000
	033 Move X0, [X0+416]
	034 Call 0x1C17CF4
	035 Move X0, 0x35B000
	036 Move X0, [X0+352]
	037 Call 0x1C17CF4
	038 Move X0, 0x330000
	039 Move X0, [X0+3584]
	040 Call 0x1C17CF4
	041 Move X0, 0x3A6000
	042 Move X0, [X0+424]
	043 Call 0x1C17CF4
	044 Move X0, 0x3A6000
	045 Move X0, [X0+432]
	046 Call 0x1C17CF4
	047 Move X0, 0x3A6000
	048 Move X0, [X0+440]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+305], W8
	052 NotImplemented "Instruction MOVI not yet implemented."
	053 Move [X31+96], X31
	054 Move [X31+64], V0
	055 Move [X31+72], V0
	056 Compare X20, 0
	057 JumpIfEqual {198}
	058 Move X8, 0x3A6000
	059 Move X8, [X8+440]
	060 Move X24, 0x3A6000
	061 Move X24, [X24+408]
	062 Move X25, 0x35B000
	063 Move X1, [X8]
	064 Move X23, 0x330000
	065 Move X22, 0x3A6000
	066 Move X25, [X25+352]
	067 Move X23, [X23+3584]
	068 Move X22, [X22+400]
	069 Add X8, X31, 24
	070 Move X0, X20
	071 Call List`1<KeyValuePair`2<Rect, Object>>.GetEnumerator, X0
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move X8, [X31+56]
	075 Move [X31+64], V0
	076 Move [X31+72], V1
	077 Move [X31+96], X8
	078 Move X1, [X24]
	079 Add X0, X31, 64
	080 Call Enumerator<KeyValuePair`2<Rect, Object>>.MoveNext, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {157}
	085 Move X21, [X31+96]
	086 Compare X21, 0
	087 JumpIfEqual {180}
	088 Move X0, [X25]
	089 Move S8, [X31+80]
	090 Move S9, [X31+84]
	091 Move S15, [X31+88]
	092 Move S14, [X31+92]
	093 Move S13, [X21+100]
	094 Move S11, [X21+104]
	095 Move W8, [X0+224]
	096 Move S12, [X21+108]
	097 Move S10, [X21+112]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move V0, V8
	102 Move V1, V9
	103 Move V2, V15
	104 Move V3, V14
	105 Move V4, V13
	106 Move V5, V11
	107 Move V6, V12
	108 Move V7, V10
	109 Move X0, X31
	110 Call GeometryChangedEvent.GetPooled, X0, X1
	111 Move X20, X0
	112 Compare X0, 0
	113 JumpIfEqual {147}
	114 Move [X20+164], W19
	115 Move X0, X20
	116 Move X1, X21
	117 Move X2, X31
	118 Call EventBase.set_target, X0, X1
	119 Move X0, X21
	120 Move X1, X20
	121 Move X2, X31
	122 Call CallbackEventHandler.HandleEventAtTargetAndDefaultPhase, X0, X1
	123 Move X21, X31
	124 Move X8, [X20]
	125 Move X1, [X23]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move X0, X20
	136 Move W2, W31
	137 Call 0x1C5D788
	138 NotImplemented "Instruction LDRSW not yet implemented."
	139 Add X8, X8, X9
	140 Add X0, X8, 312
	141 Move X8, [X0]
	142 Move X1, [X0+8]
	143 Move X0, X20
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Compare X21, 0
	146 JumpIfEqual {78}
	147 Call 0x1C17F20
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move [X31+8], X1
	150 Move [X31+16], X0
	151 Move X0, [X31+16]
	152 Call 0x3EB2AD0
	153 Move X21, [X0]
	154 Call 0x3EB2AE0
	155 Compare X20, 0
	156 JumpIfNotEqual {124}
	157 Move X1, [X22]
	158 Add X0, X31, 64
	159 Call Enumerator<KeyValuePair`2<Rect, Object>>.Dispose, X0
	160 Move X20, [X31+224]
	161 Move X19, [X31+232]
	162 Move X22, [X31+208]
	163 Move X21, [X31+216]
	164 Move X24, [X31+192]
	165 Move X23, [X31+200]
	166 Move X30, [X31+176]
	167 Move X25, [X31+184]
	168 Move D9, [X31+160]
	169 Move D8, [X31+168]
	170 Move D11, [X31+144]
	171 Move D10, [X31+152]
	172 Move D13, [X31+128]
	173 Move D12, [X31+136]
	174 Move D15, [X31+112]
	175 Move D14, [X31+120]
	176 Add X31, X31, 240
	177 Return 
	178 Move X0, X21
	179 Call 0x1C17F18
	180 Call 0x1C17F20
	181 Move X21, X31
	182 Compare X20, 0
	183 JumpIfEqual {206}
	184 Move X8, [X20]
	185 Move X1, [X23]
	186 NotImplemented "Instruction LDRH not yet implemented."
	187 Compare X9, 0
	188 JumpIfEqual {195}
	189 Move X10, [X8+176]
	190 Add X10, X10, 8
	191 NotImplemented "Instruction LDUR not yet implemented."
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Subtract X9, X9, 1
	194 Add X10, X10, 16
	195 Move X0, X20
	196 Move W2, W31
	197 Call 0x1C5D788
	198 Call 0x1C17F20
	199 NotImplemented "Instruction LDRSW not yet implemented."
	200 Add X8, X8, X9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X20
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move X1, [X31+8]
	207 Move X0, [X31+16]
	208 Compare X21, 0
	209 JumpIfEqual {216}
	210 Move X0, X21
	211 Call 0x1C17F18
	212 Move [X31+8], X1
	213 Move [X31+16], X0
	214 Compare X20, 0
	215 JumpIfNotEqual {184}
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Call 0x3EB2AD0
	218 Move X19, [X0]
	219 Call 0x3EB2AE0
	220 Move X1, [X22]
	221 Add X0, X31, 64
	222 Call Enumerator<KeyValuePair`2<Rect, Object>>.Dispose, X0
	223 Compare X19, 0
	224 JumpIfEqual {160}
	225 Move X0, X19
	226 Call 0x1C17F18
	227 Move X20, X0
	228 Move X19, X31
	229 Move X20, X0
	230 Move X1, [X22]
	231 Add X0, X31, 64
	232 Call Enumerator<KeyValuePair`2<Rect, Object>>.Dispose, X0
	233 Compare X19, 0
	234 JumpIfNotEqual {237}
	235 Move X0, X20
	236 Call 0x1D2D690
	237 Move X0, X19
	238 Call 0x1C17F18
	239 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03DC46E0 STP S15, S14, [X20]
	0x03DC46E4 STP S12, S10, [X20 + 0x8]
	0x03DC46E8 STP S9, S8, [X19]
	0x03DC46EC STP S13, S11, [X19 + 0x8]
	0x03DC46F0 LDP X20, X19, [X31 + 0x60]
	0x03DC46F4 LDP X22, X21, [X31 + 0x50]
	0x03DC46F8 LDP X30, X23, [X31 + 0x40]
	0x03DC46FC LDP D9, D8, [X31 + 0x30]
	0x03DC4700 LDP D11, D10, [X31 + 0x20]
	0x03DC4704 LDP D13, D12, [X31 + 0x10]
	0x03DC4708 LDP D15, D14, [X31], #0x70
	0x03DC470C RET
	0x03DC4710 BL 0x1C16F20
	0x03DC4714 ADRP X0, 0x338000
	0x03DC4718 LDR X0, [X0 + 0x758]
	0x03DC471C BL 0x1C16D08
	0x03DC4720 BL 0x1C16F10
	0x03DC4724 MOV X1, X31
	0x03DC4728 MOV X19, X0
	0x03DC472C BL 0x3380288
	0x03DC4730 ADRP X0, 0x3A5000
	0x03DC4734 LDR X0, [X0 + 0x208]
	0x03DC4738 BL 0x1C16D08
	0x03DC473C MOV X1, X0
	0x03DC4740 MOV X0, X19
	0x03DC4744 BL 0x1C16DEC
	0x03DC4748 SUB X31, X31, 0xA0
	0x03DC474C STP D15, D14, [X31 + 0x30]
	0x03DC4750 STP D13, D12, [X31 + 0x40]
	0x03DC4754 STP D11, D10, [X31 + 0x50]
	0x03DC4758 STP D9, D8, [X31 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x625000
	007 Move X22, 0x3A6000
	008 Move X20, 0x3A6000
	009 Move W8, [X21+306]
	010 Move X22, [X22+448]
	011 Move X20, [X20+456]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x3A6000
	018 Move X0, [X0+456]
	019 Call 0x1C17CF4
	020 Move X0, 0x3A6000
	021 Move X0, [X0+448]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+306], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<KeyValuePair`2<Rect, Object>>..ctor, X0
	030 Move [X19+32], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call BaseVisualTreeUpdater..ctor, X0
	039 Return 

Method: System.Void .cctor()

Disassembly:
	0x03DC475C STR X30, [X31 + 0x70]
	0x03DC4760 STP X22, X21, [X31 + 0x80]
	0x03DC4764 STP X20, X19, [X31 + 0x90]
	0x03DC4768 STP S6, S7, [X31 + 0x78]
	0x03DC476C STP S4, S5, [X31 + 0x10]
	0x03DC4770 STP S0, S1, [X31 + 0x4]
	0x03DC4774 CBZ X0, 0x3DC49F8
	0x03DC4778 LDP S11, S0, [X31 + 0xA8]
	0x03DC477C LDP S9, S15, [X31 + 0xA0]
	0x03DC4780 MOV W21, W1
	0x03DC4784 MOV X1, X31
	0x03DC4788 MOV X19, X3
	0x03DC478C MOV X20, X2
	0x03DC4790 MOV X22, X0
	0x03DC4794 MOV V12.16B, V3.16B
	0x03DC4798 MOV V13.16B, V2.16B
	0x03DC479C STR S0, [X31 + 0xC]
	0x03DC47A0 BL 0x3C41858
	0x03DC47A4 MOV X0, X22
	0x03DC47A8 MOV X1, X31
	0x03DC47AC MOV V8.16B, V2.16B
	0x03DC47B0 BL 0x3C41858
	0x03DC47B4 ADD X8, X31, 0x18
	0x03DC47B8 MOV X0, X22
	0x03DC47BC MOV X1, X31
	0x03DC47C0 FDIV S10, S8, S3
	0x03DC47C4 FDIV S14, S13, S12
	0x03DC47C8 BL 0x3C417AC
	0x03DC47CC LDP S0, S1, [X31 + 0x18]
	0x03DC47D0 LDP S2, S3, [X31 + 0x24]
	0x03DC47D4 ADD X8, X31, 0x18
	0x03DC47D8 MOV X0, X22
	0x03DC47DC MOV X1, X31
	0x03DC47E0 FSUB S0, S0, S2
	0x03DC47E4 FSUB S1, S1, S3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x625000
	006 Move X20, 0x3A6000
	007 Move X19, 0x3A6000
	008 Move W8, [X21+307]
	009 Move X20, [X20+464]
	010 Move X19, [X19+360]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x3A6000
	016 Move X0, [X0+360]
	017 Call 0x1C17CF4
	018 Move X0, 0x3A6000
	019 Move X0, [X0+464]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+307], W8
	023 Move X8, [X19]
	024 Move X9, [X20]
	025 Move W1, 1
	026 Move W2, W31
	027 Move X8, [X8+184]
	028 Move W3, W31
	029 Move X4, X31
	030 Move [X8], X9
	031 Move X8, [X19]
	032 Move X8, [X8+184]
	033 Move X0, [X8]
	034 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	035 Move X8, [X19]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8+8], X0
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 

