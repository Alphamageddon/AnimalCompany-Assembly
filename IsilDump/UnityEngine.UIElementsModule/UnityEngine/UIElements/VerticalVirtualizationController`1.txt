Type: UnityEngine.UIElements.VerticalVirtualizationController`1

Method: System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.ReusableCollectionItem> get_activeItems()

Disassembly:
	0x02843AD8 LDP X30, X25, [X31], #0x40
	0x02843ADC B 0x2843FB8

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Int32 get_itemsCount()

Disassembly:
	0x02843AE0 BL 0x1C16F20
	0x02843AE4 STR X30, [X31 - 0x40]!
	0x02843AE8 STP X24, X23, [X31 + 0x10]
	0x02843AEC STP X22, X21, [X31 + 0x20]
	0x02843AF0 STP X20, X19, [X31 + 0x30]
	0x02843AF4 ADRP X21, 0x1B97000
	0x02843AF8 LDRB W8, [X21 + 0xAA3]
	0x02843AFC MOV X20, X1
	0x02843B00 MOV X19, X0
	0x02843B04 TBNZ X8, 0x0, 0x2843B64
	0x02843B08 ADRP X0, 0x18B0000
	0x02843B0C LDR X0, [X0 + 0xE00]
	0x02843B10 BL 0x1C16CF4
	0x02843B14 ADRP X0, 0x18DA000
	0x02843B18 LDR X0, [X0 + 0xF20]
	0x02843B1C BL 0x1C16CF4
	0x02843B20 ADRP X0, 0x18DA000
	0x02843B24 LDR X0, [X0 + 0xF28]
	0x02843B28 BL 0x1C16CF4
	0x02843B2C ADRP X0, 0x18B0000
	0x02843B30 LDR X0, [X0 + 0xE18]
	0x02843B34 BL 0x1C16CF4
	0x02843B38 ADRP X0, 0x18B7000
	0x02843B3C LDR X0, [X0 + 0x858]
	0x02843B40 BL 0x1C16CF4
	0x02843B44 ADRP X0, 0x18DA000
	0x02843B48 LDR X0, [X0 + 0xF30]
	0x02843B4C BL 0x1C16CF4
	0x02843B50 ADRP X0, 0x18DA000
	0x02843B54 LDR X0, [X0 + 0xF38]
	0x02843B58 BL 0x1C16CF4
	0x02843B5C MOVZ W8, 0x1
	0x02843B60 STRB W8, [X21 + 0xAA3]
	0x02843B64 LDR X0, [X19 + 0x10]
	0x02843B68 CBZ X0, 0x2843E68
	0x02843B6C LDR X8, [X0]
	0x02843B70 LDR X9, [X8 + 0x768]
	0x02843B74 LDR X1, [X8 + 0x770]
	0x02843B78 BLR X9
	0x02843B7C CMP X0, X20
	0x02843B80 B.EQ 0x2843E50
	0x02843B84 LDR X8, [X19 + 0x40]
	0x02843B88 CBZ X8, 0x2843E68
	0x02843B8C LDR W9, [X8 + 0x1C]
	0x02843B90 ADD W9, W9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1B98000
	005 Move W8, [X20+2718]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x18B8000
	012 Move X0, [X0+752]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2718], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfEqual {51}
	019 Move X1, X31
	020 Call BaseVerticalCollectionView.get_itemsSource, X0
	021 Compare X0, 0
	022 JumpIfEqual {51}
	023 Move X10, 0x18B8000
	024 Move X8, [X0]
	025 Move X10, [X10+752]
	026 Move X19, X0
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 1
	038 Move X0, X19
	039 Call 0x1C5D788
	040 Move W9, [X10]
	041 Add W9, W9, 1
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X2, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 CallNoReturn X2
	051 Call 0x1C17F20

Method: System.Boolean VisibleItemPredicate(T i)

Disassembly:
	0x02843B94 STP W31, W9, [X8 + 0x18]
	0x02843B98 LDR X0, [X19 + 0x10]
	0x02843B9C CBZ X0, 0x2843E68
	0x02843BA0 LDR X8, [X0]
	0x02843BA4 LDR X9, [X8 + 0x768]
	0x02843BA8 LDR X1, [X8 + 0x770]
	0x02843BAC BLR X9
	0x02843BB0 CBZ X0, 0x2843E68
	0x02843BB4 LDR X2, [X19 + 0x40]
	0x02843BB8 MOV X1, X20
	0x02843BBC MOV X3, X31
	0x02843BC0 BL 0x3DF65A4
	0x02843BC4 TBZ X0, 0x0, 0x2843C80
	0x02843BC8 LDR X0, [X19 + 0x10]
	0x02843BCC CBZ X0, 0x2843E68
	0x02843BD0 LDR X8, [X0]
	0x02843BD4 LDR X9, [X8 + 0x768]
	0x02843BD8 LDR X1, [X8 + 0x770]
	0x02843BDC BLR X9
	0x02843BE0 LDR X8, [X19 + 0x40]
	0x02843BE4 CBZ X8, 0x2843E68
	0x02843BE8 ADRP X9, 0x18DA000
	0x02843BEC LDR X9, [X9 + 0xF38]
	0x02843BF0 MOV X20, X0
	0x02843BF4 MOV X0, X8
	0x02843BF8 MOV W1, W31
	0x02843BFC LDR X2, [X9]
	0x02843C00 BL 0x2FDC41C
	0x02843C04 CBZ X20, 0x2843E68
	0x02843C08 MOV W1, W0
	0x02843C0C MOV X0, X20
	0x02843C10 MOV X2, X31
	0x02843C14 BL 0x3DF6294
	0x02843C18 LDR X8, [X19]
	0x02843C1C MOV X21, X0
	0x02843C20 MOV X0, X19
	0x02843C24 LDR X9, [X8 + 0x248]
	0x02843C28 LDR X1, [X8 + 0x250]
	0x02843C2C BLR X9
	0x02843C30 CBZ X0, 0x2843E68
	0x02843C34 ADRP X10, 0x18DA000
	0x02843C38 LDR X8, [X0]
	0x02843C3C LDR X10, [X10 + 0xF20]
	0x02843C40 MOV X20, X0
	0x02843C44 LDRH W9, [X8 + 0x12E]
	0x02843C48 LDR X1, [X10]
	0x02843C4C CBZ X9, 0x2843C70
	0x02843C50 LDR X10, [X8 + 0xB0]
	0x02843C54 ADD X10, X10, 0x8
	0x02843C58 LDUR X11, [X10 - 0x8]
	0x02843C5C CMP X11, X1
	0x02843C60 B.EQ 0x2843C8C
	0x02843C64 SUBS X9, X9, 0x1
	0x02843C68 ADD X10, X10, 0x10
	0x02843C6C B.NE 0x2843C58
	0x02843C70 MOV X0, X20
	0x02843C74 MOV W2, W31
	0x02843C78 BL 0x1C5C788
	0x02843C7C B 0x2843C98
	0x02843C80 MOVN W8, 0x0
	0x02843C84 STR W8, [X19 + 0x38]
	0x02843C88 B 0x2843E50
	0x02843C8C LDRSW X9, [X10]
	0x02843C90 ADD X8, X8, X9, 0x4, LSL
	0x02843C94 ADD X0, X8, 0x138
	0x02843C98 LDP X8, X1, [X0]
	0x02843C9C MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1B98000
	006 Move W8, [X20+2719]
	007 Move X19, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x18DA000
	013 Move X0, [X0+296]
	014 Call 0x1C17CF4
	015 Move X0, 0x18DB000
	016 Move X0, [X0+3848]
	017 Call 0x1C17CF4
	018 Move X0, 0x18DB000
	019 Move X0, [X0+3856]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2719], W8
	023 Compare X19, 0
	024 JumpIfEqual {78}
	025 Move X8, [X19]
	026 Move X0, X19
	027 Move X9, [X8+376]
	028 Move X1, [X8+384]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Compare X0, 0
	031 JumpIfEqual {78}
	032 Move X1, X31
	033 Call VisualElement.get_style, X0
	034 Compare X0, 0
	035 JumpIfEqual {78}
	036 Move X10, 0x18DA000
	037 Move X8, [X0]
	038 Move X10, [X10+296]
	039 Move X21, 0x18DB000
	040 Move X20, 0x18DB000
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X10]
	043 Move X21, [X21+3856]
	044 Move X20, [X20+3848]
	045 Move X19, X0
	046 Compare X9, 0
	047 JumpIfEqual {54}
	048 Move X10, [X8+176]
	049 Add X10, X10, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X9, X9, 1
	053 Add X10, X10, 16
	054 Move W2, 17
	055 Move X0, X19
	056 Call 0x1C5D788
	057 Move W9, [X10]
	058 Add W9, W9, 17
	059 Add X8, X8, W9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X1, [X0+8]
	063 Move X0, X19
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X1, [X21]
	066 Move X19, X0
	067 Move W0, W31
	068 Call 0x266FACC, X0
	069 Move X2, [X20]
	070 Move X1, X0
	071 Move X0, X19
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Call 0x266F9D0, X0, X1
	077 Return X0
	078 Call 0x1C17F20

Method: T get_firstVisibleItem()

Disassembly:
	0x02843CA0 BLR X8
	0x02843CA4 MOV X20, X0
	0x02843CA8 CBZ X0, 0x2843E6C
	0x02843CAC ADRP X23, 0x18B0000
	0x02843CB0 ADRP X24, 0x18DA000
	0x02843CB4 LDR X23, [X23 + 0xE18]
	0x02843CB8 LDR X24, [X24 + 0xF28]

ISIL:
	001 Move X8, [X1+32]
	002 Move X1, [X0+72]
	003 Move X9, [X8+192]
	004 Move X8, [X0+40]
	005 Move X2, [X9+32]
	006 Move X0, X8
	007 Call 0x21C670C, X0, X1
	008 Return X0

Method: T get_lastVisibleItem()

Disassembly:
	0x02843CBC LDR X8, [X20]
	0x02843CC0 LDR X1, [X23]
	0x02843CC4 LDRH W9, [X8 + 0x12E]
	0x02843CC8 CBZ X9, 0x2843CEC
	0x02843CCC LDR X10, [X8 + 0xB0]
	0x02843CD0 ADD X10, X10, 0x8
	0x02843CD4 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move X8, [X1+32]
	002 Move X1, [X0+72]
	003 Move X9, [X8+192]
	004 Move X8, [X0+40]
	005 Move X2, [X9+48]
	006 Move X0, X8
	007 Call 0x21C8E88, X0, X1
	008 Return X0

Method: System.Int32 get_visibleItemCount()

Disassembly:
	0x02843CD8 CMP X11, X1
	0x02843CDC B.EQ 0x2843CFC
	0x02843CE0 SUBS X9, X9, 0x1
	0x02843CE4 ADD X10, X10, 0x10
	0x02843CE8 B.NE 0x2843CD4
	0x02843CEC MOV X0, X20
	0x02843CF0 MOV W2, W31

ISIL:
	001 Move X8, [X1+32]
	002 Move X1, [X0+72]
	003 Move X9, [X8+192]
	004 Move X8, [X0+40]
	005 Move X2, [X9+56]
	006 Move X0, X8
	007 Call 0x21C0ABC, X0, X1
	008 Return X0

Method: UnityEngine.UIElements.SerializedVirtualizationData get_serializedData()

Disassembly:
	0x02843CF4 BL 0x1C5C788
	0x02843CF8 B 0x2843D08
	0x02843CFC LDRSW X9, [X10]
	0x02843D00 ADD X8, X8, X9, 0x4, LSL
	0x02843D04 ADD X0, X8, 0x138
	0x02843D08 LDP X8, X1, [X0]
	0x02843D0C MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+1120]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_firstVisibleIndex()

Disassembly:
	0x02843D10 BLR X8
	0x02843D14 TBZ X0, 0x0, 0x2843DA8
	0x02843D18 LDR X8, [X20]
	0x02843D1C LDR X1, [X24]
	0x02843D20 LDRH W9, [X8 + 0x12E]
	0x02843D24 CBZ X9, 0x2843D48
	0x02843D28 LDR X10, [X8 + 0xB0]
	0x02843D2C ADD X10, X10, 0x8
	0x02843D30 LDUR X11, [X10 - 0x8]
	0x02843D34 CMP X11, X1
	0x02843D38 B.EQ 0x2843D58
	0x02843D3C SUBS X9, X9, 0x1
	0x02843D40 ADD X10, X10, 0x10
	0x02843D44 B.NE 0x2843D30
	0x02843D48 MOV X0, X20
	0x02843D4C MOV W2, W31
	0x02843D50 BL 0x1C5C788
	0x02843D54 B 0x2843D64
	0x02843D58 LDRSW X9, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+32]
	004 Compare X8, 0
	005 JumpIfEqual {24}
	006 Move X9, [X8+1120]
	007 Compare X9, 0
	008 JumpIfEqual {24}
	009 Move X0, [X8+1096]
	010 Move W19, [X9+24]
	011 Compare X0, 0
	012 JumpIfEqual {18}
	013 Move X8, [X0]
	014 Move X9, [X8+456]
	015 Move X1, [X8+464]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Subtract W8, W0, 1
	018 Move W8, W19
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSEL not yet implemented."
	021 Move X30, [X31+16]
	022 Move X19, [X31+24]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Void set_firstVisibleIndex(System.Int32 value)

Disassembly:
	0x02843D5C ADD X8, X8, X9, 0x4, LSL
	0x02843D60 ADD X0, X8, 0x138
	0x02843D64 LDP X8, X1, [X0]
	0x02843D68 MOV X0, X20
	0x02843D6C BLR X8
	0x02843D70 MOV X22, X0
	0x02843D74 CBZ X0, 0x2843E64
	0x02843D78 LDR X8, [X22]
	0x02843D7C LDP X9, X1, [X8 + 0x178]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X8, [X8+1120]
	006 Compare X8, 0
	007 JumpIfEqual {11}
	008 Move [X8+24], W1
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: System.Single get_lastHeight()

Disassembly:
	0x02843D80 MOV X0, X22
	0x02843D84 BLR X9
	0x02843D88 CMP X0, X21
	0x02843D8C B.NE 0x2843CBC
	0x02843D90 LDR W8, [X22 + 0x20]
	0x02843D94 MOV X21, X31
	0x02843D98 MOVZ W22, 0x9

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move V0, [X8+1152]
	006 Move X30, [X31+16]
	007 Return V0
	008 Call 0x1C17F20

Method: System.Boolean get_alwaysRebindOnRefresh()

Disassembly:
	0x02843D9C STR W8, [X19 + 0x38]
	0x02843DA0 CBNZ X20, 0x2843DB4

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void .ctor(UnityEngine.UIElements.BaseVerticalCollectionView collectionView)

Disassembly:
	0x02843DA4 B 0x2843E14
	0x02843DA8 MOV X21, X31
	0x02843DAC MOVZ W22, 0x9
	0x02843DB0 CBZ X20, 0x2843E14
	0x02843DB4 ADRP X10, 0x18B0000
	0x02843DB8 LDR X8, [X20]
	0x02843DBC LDR X10, [X10 + 0xE00]
	0x02843DC0 LDRH W9, [X8 + 0x12E]
	0x02843DC4 LDR X1, [X10]
	0x02843DC8 CBZ X9, 0x2843DEC
	0x02843DCC LDR X10, [X8 + 0xB0]
	0x02843DD0 ADD X10, X10, 0x8
	0x02843DD4 LDUR X11, [X10 - 0x8]
	0x02843DD8 CMP X11, X1
	0x02843DDC B.EQ 0x2843DFC
	0x02843DE0 SUBS X9, X9, 0x1
	0x02843DE4 ADD X10, X10, 0x10
	0x02843DE8 B.NE 0x2843DD4
	0x02843DEC MOV X0, X20
	0x02843DF0 MOV W2, W31
	0x02843DF4 BL 0x1C5C788
	0x02843DF8 B 0x2843E08
	0x02843DFC LDRSW X9, [X10]
	0x02843E00 ADD X8, X8, X9, 0x4, LSL
	0x02843E04 ADD X0, X8, 0x138
	0x02843E08 LDP X8, X1, [X0]
	0x02843E0C MOV X0, X20
	0x02843E10 BLR X8
	0x02843E14 CBNZ X21, 0x2843E70
	0x02843E18 CMP W22, 0x9
	0x02843E1C B.EQ 0x2843E24
	0x02843E20 CBNZ W22, 0x2843E50
	0x02843E24 LDR X0, [X19 + 0x40]
	0x02843E28 CBZ X0, 0x2843E68
	0x02843E2C ADRP X8, 0x18DA000
	0x02843E30 LDR X8, [X8 + 0xF30]
	0x02843E34 LDP X20, X19, [X31 + 0x30]
	0x02843E38 LDP X22, X21, [X31 + 0x20]
	0x02843E3C LDP X24, X23, [X31 + 0x10]
	0x02843E40 LDR X2, [X8]
	0x02843E44 MOV W1, W31
	0x02843E48 LDR X30, [X31], #0x40
	0x02843E4C B 0x2FDE190
	0x02843E50 LDP X20, X19, [X31 + 0x30]
	0x02843E54 LDP X22, X21, [X31 + 0x20]
	0x02843E58 LDP X24, X23, [X31 + 0x10]
	0x02843E5C LDR X30, [X31], #0x40
	0x02843E60 RET
	0x02843E64 BL 0x1C16F20
	0x02843E68 BL 0x1C16F20
	0x02843E6C BL 0x1C16F20
	0x02843E70 MOV X0, X21
	0x02843E74 BL 0x1C16F18
	0x02843E78 B 0x2843E88
	0x02843E7C B 0x2843E88
	0x02843E80 B 0x2843E88
	0x02843E84 B 0x2843E88
	0x02843E88 MOV X22, X0
	0x02843E8C CMP W1, 0x1
	0x02843E90 B.NE 0x2843EB0
	0x02843E94 MOV X0, X22
	0x02843E98 BL 0x3EB1AD0
	0x02843E9C LDR X21, [X0]
	0x02843EA0 BL 0x3EB1AE0
	0x02843EA4 MOV W22, W31
	0x02843EA8 CBNZ X20, 0x2843DB4
	0x02843EAC B 0x2843E14
	0x02843EB0 MOV X21, X31
	0x02843EB4 B 0x2843EBC
	0x02843EB8 MOV X22, X0
	0x02843EBC CBZ X20, 0x2843F20
	0x02843EC0 ADRP X10, 0x18B0000
	0x02843EC4 LDR X8, [X20]
	0x02843EC8 LDR X10, [X10 + 0xE00]
	0x02843ECC LDRH W9, [X8 + 0x12E]
	0x02843ED0 LDR X1, [X10]
	0x02843ED4 CBZ X9, 0x2843EF8
	0x02843ED8 LDR X10, [X8 + 0xB0]
	0x02843EDC ADD X10, X10, 0x8
	0x02843EE0 LDUR X11, [X10 - 0x8]
	0x02843EE4 CMP X11, X1
	0x02843EE8 B.EQ 0x2843F08
	0x02843EEC SUBS X9, X9, 0x1
	0x02843EF0 ADD X10, X10, 0x10
	0x02843EF4 B.NE 0x2843EE0
	0x02843EF8 MOV X0, X20
	0x02843EFC MOV W2, W31
	0x02843F00 BL 0x1C5C788
	0x02843F04 B 0x2843F14
	0x02843F08 LDRSW X9, [X10]
	0x02843F0C ADD X8, X8, X9, 0x4, LSL
	0x02843F10 ADD X0, X8, 0x138
	0x02843F14 LDP X8, X1, [X0]
	0x02843F18 MOV X0, X20
	0x02843F1C BLR X8
	0x02843F20 CBNZ X21, 0x2843F2C
	0x02843F24 MOV X0, X22
	0x02843F28 BL 0x1D2C690
	0x02843F2C MOV X0, X21
	0x02843F30 BL 0x1C16F18
	0x02843F34 BL 0x1990590
	0x02843F38 STP X30, X21, [X31 - 0x20]!
	0x02843F3C STP X20, X19, [X31 + 0x10]
	0x02843F40 ADRP X21, 0x1B97000
	0x02843F44 LDRB W8, [X21 + 0xAA4]
	0x02843F48 MOV X20, X1
	0x02843F4C MOV X19, X0
	0x02843F50 TBNZ X8, 0x0, 0x2843F68
	0x02843F54 ADRP X0, 0x18B7000
	0x02843F58 LDR X0, [X0 + 0x858]
	0x02843F5C BL 0x1C16CF4
	0x02843F60 MOVZ W8, 0x1
	0x02843F64 STRB W8, [X21 + 0xAA4]
	0x02843F68 CBZ X20, 0x2843F8C
	0x02843F6C LDR X0, [X19 + 0x10]
	0x02843F70 CBZ X0, 0x2843FB4
	0x02843F74 LDR X8, [X0]
	0x02843F78 LDR X9, [X8 + 0x768]
	0x02843F7C LDR X1, [X8 + 0x770]
	0x02843F80 BLR X9
	0x02843F84 CMP X0, X20
	0x02843F88 B.EQ 0x2843FA8
	0x02843F8C LDR X8, [X19 + 0x40]
	0x02843F90 CBZ X8, 0x2843FB4
	0x02843F94 LDR W9, [X8 + 0x1C]
	0x02843F98 MOVN W10, 0x0
	0x02843F9C ADD W9, W9, 0x1
	0x02843FA0 STP W31, W9, [X8 + 0x18]
	0x02843FA4 STR W10, [X19 + 0x38]
	0x02843FA8 LDP X20, X19, [X31 + 0x10]
	0x02843FAC LDP X30, X21, [X31], #0x20
	0x02843FB0 RET
	0x02843FB4 BL 0x1C16F20
	0x02843FB8 STP X30, X19, [X31 - 0x10]!
	0x02843FBC LDR W8, [X0 + 0x38]
	0x02843FC0 ADDS W31, W8, 0x1
	0x02843FC4 B.EQ 0x2844078
	0x02843FC8 CBZ X1, 0x2844080
	0x02843FCC LDR W9, [X1 + 0x20]
	0x02843FD0 MOV X19, X0
	0x02843FD4 CMP W8, W9
	0x02843FD8 B.NE 0x2844008
	0x02843FDC LDR X8, [X1]
	0x02843FE0 MOV X0, X1
	0x02843FE4 LDP X9, X8, [X8 + 0x178]
	0x02843FE8 MOV X1, X8
	0x02843FEC BLR X9
	0x02843FF0 CBZ X0, 0x2844080
	0x02843FF4 LDR X1, [X19 + 0x40]
	0x02843FF8 MOV X2, X31
	0x02843FFC BL 0x3DF63F4
	0x02844000 CBNZ X0, 0x284402C
	0x02844004 B 0x2844078
	0x02844008 CMP W8, W2
	0x0284400C B.NE 0x284403C
	0x02844010 LDR X0, [X19 + 0x10]
	0x02844014 CBZ X0, 0x2844080
	0x02844018 LDR X8, [X0]
	0x0284401C LDR X9, [X8 + 0x768]
	0x02844020 LDR X1, [X8 + 0x770]
	0x02844024 BLR X9
	0x02844028 CBZ X0, 0x2844080
	0x0284402C LDR X8, [X0]
	0x02844030 LDR X2, [X8 + 0x248]
	0x02844034 LDR X1, [X8 + 0x250]
	0x02844038 B 0x2844070
	0x0284403C LDR X8, [X1]
	0x02844040 MOV X0, X1
	0x02844044 LDP X9, X8, [X8 + 0x178]
	0x02844048 MOV X1, X8
	0x0284404C BLR X9
	0x02844050 CBZ X0, 0x2844080
	0x02844054 LDR X1, [X19 + 0x40]
	0x02844058 MOV X2, X31
	0x0284405C BL 0x3DF63F4
	0x02844060 CBZ X0, 0x2844078
	0x02844064 LDR X8, [X0]
	0x02844068 LDR X2, [X8 + 0x258]
	0x0284406C LDR X1, [X8 + 0x260]
	0x02844070 LDP X30, X19, [X31], #0x10
	0x02844074 BR X2
	0x02844078 LDP X30, X19, [X31], #0x10
	0x0284407C RET
	0x02844080 BL 0x1C16F20
	0x02844084 STP D9, D8, [X31 - 0x70]!
	0x02844088 STR X30, [X31 + 0x10]
	0x0284408C STP X28, X27, [X31 + 0x20]
	0x02844090 STP X26, X25, [X31 + 0x30]
	0x02844094 STP X24, X23, [X31 + 0x40]
	0x02844098 STP X22, X21, [X31 + 0x50]
	0x0284409C STP X20, X19, [X31 + 0x60]
	0x028440A0 ADRP X21, 0x1B96000
	0x028440A4 LDRB W8, [X21 + 0xAA5]
	0x028440A8 MOV X20, X1
	0x028440AC MOV X19, X0
	0x028440B0 TBNZ X8, 0x0, 0x28440F8
	0x028440B4 ADRP X0, 0x18D9000
	0x028440B8 LDR X0, [X0 + 0xF18]
	0x028440BC BL 0x1C16CF4
	0x028440C0 ADRP X0, 0x18D8000
	0x028440C4 LDR X0, [X0 + 0x120]
	0x028440C8 BL 0x1C16CF4
	0x028440CC ADRP X0, 0x18D8000
	0x028440D0 LDR X0, [X0 + 0x128]
	0x028440D4 BL 0x1C16CF4
	0x028440D8 ADRP X0, 0x18B0000
	0x028440DC LDR X0, [X0 + 0x1B8]
	0x028440E0 BL 0x1C16CF4
	0x028440E4 ADRP X0, 0x18D7000
	0x028440E8 LDR X0, [X0 + 0x898]
	0x028440EC BL 0x1C16CF4
	0x028440F0 MOVZ W8, 0x1
	0x028440F4 STRB W8, [X21 + 0xAA5]
	0x028440F8 STR X31, [X31 + 0x18]
	0x028440FC LDR X0, [X19 + 0x20]
	0x02844100 CBZ X0, 0x28445F0
	0x02844104 MOV X1, X31
	0x02844108 BL 0x3CFF23C
	0x0284410C CMP W0, 0x2
	0x02844110 B.NE 0x2844290
	0x02844114 LDR X8, [X19 + 0x10]
	0x02844118 CBZ X8, 0x28445F0
	0x0284411C LDR X0, [X8 + 0x418]
	0x02844120 CBZ X0, 0x28445F0
	0x02844124 MOV X1, X31
	0x02844128 BL 0x3DE0EB8
	0x0284412C CBZ X0, 0x28445F0
	0x02844130 ADRP X10, 0x18D8000
	0x02844134 LDR X8, [X0]
	0x02844138 LDR X10, [X10 + 0x120]
	0x0284413C MOV X21, X0
	0x02844140 LDRH W9, [X8 + 0x12E]
	0x02844144 LDR X1, [X10]
	0x02844148 CBZ X9, 0x284416C
	0x0284414C LDR X10, [X8 + 0xB0]
	0x02844150 ADD X10, X10, 0x8
	0x02844154 LDUR X11, [X10 - 0x8]
	0x02844158 CMP X11, X1
	0x0284415C B.EQ 0x284417C
	0x02844160 SUBS X9, X9, 0x1
	0x02844164 ADD X10, X10, 0x10
	0x02844168 B.NE 0x2844154
	0x0284416C MOVZ W2, 0x13
	0x02844170 MOV X0, X21
	0x02844174 BL 0x1C5C788
	0x02844178 B 0x284418C
	0x0284417C LDR W9, [X10]
	0x02844180 ADD W9, W9, 0x13
	0x02844184 ADD X8, X8, W9, 0x4, SXTW
	0x02844188 ADD X0, X8, 0x138
	0x0284418C LDP X8, X1, [X0]
	0x02844190 MOV X0, X21
	0x02844194 BLR X8
	0x02844198 CBZ X19, 0x28445F0
	0x0284419C LDR X8, [X19]
	0x028441A0 MOV X0, X19
	0x028441A4 MOV V8.16B, V0.16B
	0x028441A8 LDR X9, [X8 + 0x208]
	0x028441AC LDR X1, [X8 + 0x210]
	0x028441B0 BLR X9
	0x028441B4 FSUB S9, S8, S0
	0x028441B8 FCMP S9, 0x0
	0x028441BC B.LS 0x2844290
	0x028441C0 LDR X8, [X20 + 0x20]
	0x028441C4 LDR X0, [X19 + 0x28]
	0x028441C8 LDR X1, [X19 + 0x48]
	0x028441CC LDR X8, [X8 + 0xC0]
	0x028441D0 LDR X8, [X8 + 0x110]
	0x028441D4 LDR X8, [X8 + 0x20]
	0x028441D8 LDR X8, [X8 + 0xC0]
	0x028441DC LDR X2, [X8 + 0x30]
	0x028441E0 BL 0x21C7E88
	0x028441E4 CBZ X0, 0x28442A0
	0x028441E8 LDR X21, [X19 + 0x58]
	0x028441EC CBNZ X21, 0x28442D8
	0x028441F0 ADRP X8, 0x18D7000
	0x028441F4 LDR X8, [X8 + 0x898]
	0x028441F8 LDR X0, [X8]
	0x028441FC BL 0x1C16F10
	0x02844200 MOV X1, X31
	0x02844204 MOV X21, X0
	0x02844208 BL 0x3DEF578
	0x0284420C CBZ X21, 0x28445F0
	0x02844210 MOV X0, X21
	0x02844214 MOV X1, X31
	0x02844218 BL 0x3DEF2D0
	0x0284421C ADRP X23, 0x18D9000
	0x02844220 LDR X23, [X23 + 0xF18]
	0x02844224 MOV X22, X0
	0x02844228 LDR X8, [X23]
	0x0284422C LDR W9, [X8 + 0xE0]
	0x02844230 CBNZ W9, 0x284423C
	0x02844234 MOV X0, X8
	0x02844238 BL 0x1C16DFC
	0x0284423C CBZ X22, 0x28445F0
	0x02844240 LDR X8, [X23]
	0x02844244 ADRP X10, 0x18B0000
	0x02844248 LDR X9, [X8 + 0xB8]
	0x0284424C LDR X10, [X10 + 0x1B8]
	0x02844250 LDR W11, [X22 + 0x1C]
	0x02844254 LDR X8, [X22 + 0x10]
	0x02844258 LDR X1, [X9 + 0x70]
	0x0284425C LDR X9, [X10]
	0x02844260 ADD W10, W11, 0x1
	0x02844264 STR W10, [X22 + 0x1C]
	0x02844268 CBZ X8, 0x28445F0
	0x0284426C LDRSW X10, [X22 + 0x18]
	0x02844270 LDR W11, [X8 + 0x18]
	0x02844274 CMP W10, W11
	0x02844278 B.CS 0x28442C0
	0x0284427C ADD W9, W10, 0x1
	0x02844280 ADD X8, X8, X10, 0x3, LSL

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x1B98000
	011 Move W8, [X22+2720]
	012 Move X20, X2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x18B5000
	020 Move X0, [X0+2928]
	021 Call 0x1C17CF4
	022 Move X0, 0x18B2000
	023 Move X0, [X0+3632]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2720], W8
	027 Add X20, X20, 32
	028 Move X8, [X20]
	029 Move X8, [X8+192]
	030 Move X0, [X8+88]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X8, [X20]
	042 Move X8, [X8+192]
	043 Move X0, [X8+88]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+184]
	051 Move X22, [X8+8]
	052 Compare X22, 0
	053 JumpIfNotEqual {118}
	054 Move X8, [X20]
	055 Move X8, [X8+192]
	056 Move X0, [X8+88]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X8, [X20]
	068 Move X8, [X8+192]
	069 Move X0, [X8+88]
	070 Move W9, [X0+309]
	071 Move TEMP, X9
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {78}
	075 Call 0x1C5D684
	076 Move X8, [X20]
	077 Move X8, [X8+192]
	078 Move X8, [X8+80]
	079 Move X9, [X0+184]
	080 Move W10, [X8+309]
	081 Move X23, [X9]
	082 Move TEMP, X10
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {89}
	086 Move X0, X8
	087 Call 0x1C5D684
	088 Move X8, X0
	089 Move X0, X8
	090 Call 0x1C17F10
	091 Move X8, [X20]
	092 Move X1, X23
	093 Move X22, X0
	094 Move X8, [X8+192]
	095 Move X2, [X8+96]
	096 Move X3, [X8+104]
	097 Call Func`1<Object>..ctor, X0, X1, X2
	098 Move X8, [X20]
	099 Move X8, [X8+192]
	100 Move X0, [X8+88]
	101 Move W9, [X0+309]
	102 Move TEMP, X9
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfEqual {109}
	106 Call 0x1C5D684
	107 Move X8, [X20]
	108 Move X8, [X8+192]
	109 Move X9, [X0+184]
	110 Move [X9+8], X22
	111 Move X0, [X8+88]
	112 Move W8, [X0+309]
	113 Move TEMP, X8
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfEqual {118}
	117 Call 0x1C5D684
	118 Move X8, [X20]
	119 Move X8, [X8+192]
	120 Move X0, [X8+88]
	121 Move W8, [X0+309]
	122 Move TEMP, X8
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {127}
	126 Call 0x1C5D684
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X8, [X20]
	132 Move X8, [X8+192]
	133 Move X0, [X8+88]
	134 Move W8, [X0+309]
	135 Move TEMP, X8
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfEqual {140}
	139 Call 0x1C5D684
	140 Move X8, [X0+184]
	141 Move X23, [X8+16]
	142 Compare X23, 0
	143 JumpIfNotEqual {208}
	144 Move X8, [X20]
	145 Move X8, [X8+192]
	146 Move X0, [X8+88]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {153}
	152 Call 0x1C5D684
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X8, [X20]
	158 Move X8, [X8+192]
	159 Move X0, [X8+88]
	160 Move W9, [X0+309]
	161 Move TEMP, X9
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {168}
	165 Call 0x1C5D684
	166 Move X8, [X20]
	167 Move X8, [X8+192]
	168 Move X8, [X8+112]
	169 Move X9, [X0+184]
	170 Move W10, [X8+309]
	171 Move X24, [X9]
	172 Move TEMP, X10
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfEqual {179}
	176 Move X0, X8
	177 Call 0x1C5D684
	178 Move X8, X0
	179 Move X0, X8
	180 Call 0x1C17F10
	181 Move X8, [X20]
	182 Move X1, X24
	183 Move X23, X0
	184 Move X8, [X8+192]
	185 Move X2, [X8+120]
	186 Move X3, [X8+128]
	187 Call Action`1<Object>..ctor, X0, X1, X2
	188 Move X8, [X20]
	189 Move X8, [X8+192]
	190 Move X0, [X8+88]
	191 Move W9, [X0+309]
	192 Move TEMP, X9
	193 And TEMP, TEMP, 1
	194 Compare TEMP, 1
	195 JumpIfEqual {199}
	196 Call 0x1C5D684
	197 Move X8, [X20]
	198 Move X8, [X8+192]
	199 Move X9, [X0+184]
	200 Move [X9+16], X23
	201 Move X0, [X8+88]
	202 Move W8, [X0+309]
	203 Move TEMP, X8
	204 And TEMP, TEMP, 1
	205 Compare TEMP, 1
	206 JumpIfEqual {208}
	207 Call 0x1C5D684
	208 Move X8, [X20]
	209 Move X8, [X8+192]
	210 Move X0, [X8+88]
	211 Move W8, [X0+309]
	212 Move TEMP, X8
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfEqual {217}
	216 Call 0x1C5D684
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X8, [X20]
	222 Move X8, [X8+192]
	223 Move X0, [X8+88]
	224 Move W8, [X0+309]
	225 Move TEMP, X8
	226 And TEMP, TEMP, 1
	227 Compare TEMP, 1
	228 JumpIfEqual {230}
	229 Call 0x1C5D684
	230 Move X8, [X0+184]
	231 Move X24, [X8+24]
	232 Compare X24, 0
	233 JumpIfNotEqual {298}
	234 Move X8, [X20]
	235 Move X8, [X8+192]
	236 Move X0, [X8+88]
	237 Move W8, [X0+309]
	238 Move TEMP, X8
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfEqual {243}
	242 Call 0x1C5D684
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {247}
	246 Call 0x1C17DFC
	247 Move X8, [X20]
	248 Move X8, [X8+192]
	249 Move X0, [X8+88]
	250 Move W9, [X0+309]
	251 Move TEMP, X9
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfEqual {258}
	255 Call 0x1C5D684
	256 Move X8, [X20]
	257 Move X8, [X8+192]
	258 Move X8, [X8+112]
	259 Move X9, [X0+184]
	260 Move W10, [X8+309]
	261 Move X25, [X9]
	262 Move TEMP, X10
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfEqual {269}
	266 Move X0, X8
	267 Call 0x1C5D684
	268 Move X8, X0
	269 Move X0, X8
	270 Call 0x1C17F10
	271 Move X8, [X20]
	272 Move X1, X25
	273 Move X24, X0
	274 Move X8, [X8+192]
	275 Move X3, [X8+128]
	276 Move X2, [X8+136]
	277 Call Action`1<Object>..ctor, X0, X1, X2
	278 Move X8, [X20]
	279 Move X8, [X8+192]
	280 Move X0, [X8+88]
	281 Move W9, [X0+309]
	282 Move TEMP, X9
	283 And TEMP, TEMP, 1
	284 Compare TEMP, 1
	285 JumpIfEqual {289}
	286 Call 0x1C5D684
	287 Move X8, [X20]
	288 Move X8, [X8+192]
	289 Move X9, [X0+184]
	290 Move [X9+24], X24
	291 Move X0, [X8+88]
	292 Move W8, [X0+309]
	293 Move TEMP, X8
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfEqual {298}
	297 Call 0x1C5D684
	298 Move X8, [X20]
	299 Move X8, [X8+192]
	300 Move X0, [X8+144]
	301 Move W8, [X0+309]
	302 Move TEMP, X8
	303 And TEMP, TEMP, 1
	304 Compare TEMP, 1
	305 JumpIfEqual {307}
	306 Call 0x1C5D684
	307 Call 0x1C17F10
	308 Move X8, [X20]
	309 Move W5, 1
	310 Move W6, 10
	311 Move W7, 0x2710
	312 Move X8, [X8+192]
	313 Move X1, X22
	314 Move X2, X31
	315 Move X3, X23
	316 Move X8, [X8+152]
	317 Move X4, X24
	318 Move X25, X0
	319 Move [X31], X8
	320 Call 0x249418C, X0, X1, X2, X3, X4, X5, X6, X7
	321 Compare X19, 0
	322 JumpIfEqual {418}
	323 Move X8, 0x18B1000
	324 Move X8, [X8+3632]
	325 Move TEMP, 0
	326 Not TEMP
	327 Move W9, TEMP
	328 Move [X19+24], X25
	329 Move [X19+56], W9
	330 Move X0, [X8]
	331 Move X22, 0x18B4000
	332 Move X22, [X22+2928]
	333 Call 0x1C17F10
	334 Move X1, [X22]
	335 Move X22, X0
	336 Call List`1<Int32>..ctor, X0
	337 Move [X19+64], X22
	338 Move X8, [X20]
	339 Move X8, [X8+192]
	340 Move X0, [X8+8]
	341 Move W8, [X0+309]
	342 Move TEMP, X8
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfEqual {347}
	346 Call 0x1C5D684
	347 Call 0x1C17F10
	348 Move X8, [X20]
	349 Move X22, X0
	350 Move X8, [X8+192]
	351 Move X1, [X8+160]
	352 Call List`1<Object>..ctor, X0
	353 Move [X19+80], X22
	354 Compare X21, 0
	355 JumpIfEqual {418}
	356 Move X1, [X21+1088]
	357 Move X0, X19
	358 Move X2, X31
	359 Call CollectionVirtualizationController..ctor, X0, X1
	360 Move [X19+32], X21
	361 Move X8, [X20]
	362 Move X8, [X8+192]
	363 Move X0, [X8+8]
	364 Move W8, [X0+309]
	365 Move TEMP, X8
	366 And TEMP, TEMP, 1
	367 Compare TEMP, 1
	368 JumpIfEqual {370}
	369 Call 0x1C5D684
	370 Call 0x1C17F10
	371 Move X8, [X20]
	372 Move X21, X0
	373 Move X8, [X8+192]
	374 Move X1, [X8+160]
	375 Call List`1<Object>..ctor, X0
	376 Move [X19+40], X21
	377 Move X8, [X20]
	378 Move X8, [X8+192]
	379 Move X0, [X8+24]
	380 Move W8, [X0+309]
	381 Move TEMP, X8
	382 And TEMP, TEMP, 1
	383 Compare TEMP, 1
	384 JumpIfEqual {386}
	385 Call 0x1C5D684
	386 Call 0x1C17F10
	387 Move X8, [X20]
	388 Move X9, [X19]
	389 Move X1, X19
	390 Move X20, X0
	391 Move X8, [X8+192]
	392 Move X2, [X9+640]
	393 Move X3, [X8+176]
	394 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	395 Move X0, [X19+16]
	396 Move [X19+72], X20
	397 Compare X0, 0
	398 JumpIfEqual {418}
	399 Move X8, [X0]
	400 Move X9, [X8+1896]
	401 Move X1, [X8+1904]
	402 NotImplemented "Instruction BLR not yet implemented."
	403 Compare X0, 0
	404 JumpIfEqual {418}
	405 Move X20, [X31+64]
	406 Move X19, [X31+72]
	407 Move X22, [X31+48]
	408 Move X21, [X31+56]
	409 Move X24, [X31+32]
	410 Move X23, [X31+40]
	411 Move X30, [X31+16]
	412 Move X25, [X31+24]
	413 Move W1, W31
	414 Move X2, X31
	415 Add X31, X31, 80
	416 Call VisualElement.set_disableClipping, X0, X1
	417 Return 
	418 Call 0x1C17F20

Method: System.Void Refresh(System.Boolean rebuild)

Disassembly:
	0x02844284 STR W9, [X22 + 0x18]
	0x02844288 STR X1, [X8 + 0x20]
	0x0284428C B 0x28442D4
	0x02844290 LDR X0, [X19 + 0x58]
	0x02844294 CBZ X0, 0x28442A0
	0x02844298 MOV X1, X31
	0x0284429C BL 0x3DF6948
	0x028442A0 LDP X20, X19, [X31 + 0x60]
	0x028442A4 LDP X22, X21, [X31 + 0x50]
	0x028442A8 LDP X24, X23, [X31 + 0x40]
	0x028442AC LDP X26, X25, [X31 + 0x30]
	0x028442B0 LDP X28, X27, [X31 + 0x20]
	0x028442B4 LDR X30, [X31 + 0x10]
	0x028442B8 LDP D9, D8, [X31], #0x70
	0x028442BC RET
	0x028442C0 LDR X8, [X9 + 0x20]
	0x028442C4 MOV X0, X22
	0x028442C8 LDR X8, [X8 + 0xC0]
	0x028442CC LDR X2, [X8 + 0x70]
	0x028442D0 BL 0x301BF90
	0x028442D4 STR X21, [X19 + 0x58]
	0x028442D8 CBZ X21, 0x28445F0
	0x028442DC MOV X0, X21
	0x028442E0 MOV X1, X31
	0x028442E4 BL 0x3DEBF58
	0x028442E8 CBNZ X0, 0x2844308
	0x028442EC LDR X8, [X19 + 0x10]
	0x028442F0 CBZ X8, 0x28445F0
	0x028442F4 LDR X0, [X8 + 0x418]
	0x028442F8 CBZ X0, 0x28445F0
	0x028442FC LDR X1, [X19 + 0x58]
	0x02844300 MOV X2, X31
	0x02844304 BL 0x3DF60E8
	0x02844308 LDR X8, [X19]
	0x0284430C MOVN W1, 0x0
	0x02844310 MOV X0, X19
	0x02844314 LDP X9, X2, [X8 + 0x1F8]
	0x02844318 BLR X9
	0x0284431C ADRP X21, 0x1B94000
	0x02844320 LDRB W8, [X21 + 0xA23]
	0x02844324 MOV V8.16B, V0.16B
	0x02844328 CBNZ W8, 0x2844340
	0x0284432C ADRP X0, 0x18AF000
	0x02844330 LDR X0, [X0 + 0x5A8]
	0x02844334 BL 0x1C16CF4
	0x02844338 MOVZ W8, 0x1
	0x0284433C STRB W8, [X21 + 0xA23]
	0x02844340 ADRP X8, 0x18AF000
	0x02844344 LDR X8, [X8 + 0x5A8]
	0x02844348 FDIV S9, S9, S8
	0x0284434C LDR X0, [X8]
	0x02844350 LDR W8, [X0 + 0xE0]
	0x02844354 CBNZ W8, 0x284435C
	0x02844358 BL 0x1C16DFC
	0x0284435C MOVZ W8, 0x7F800000
	0x02844360 LDR X0, [X19 + 0x58]
	0x02844364 FRINTM S0, S9
	0x02844368 FMOV S1, W8
	0x0284436C FCVTMS W9, S9
	0x02844370 FCMP S0, S1
	0x02844374 ORR W8, W31, 0x80000001
	0x02844378 CSINC W21, W8, W9, EQ
	0x0284437C CBZ X0, 0x28445F0
	0x02844380 MOV X1, X31
	0x02844384 BL 0x3DF630C
	0x02844388 CMP W21, W0
	0x0284438C B.LE 0x284447C
	0x02844390 LDR X0, [X19 + 0x58]
	0x02844394 CBZ X0, 0x28445F0
	0x02844398 MOV X1, X31
	0x0284439C BL 0x3DF630C
	0x028443A0 SUB W24, W21, W0
	0x028443A4 CMP W24, 0x1
	0x028443A8 B.LT 0x284447C
	0x028443AC ADRP X26, 0x18D7000
	0x028443B0 ADRP X27, 0x18D8000
	0x028443B4 LDR X26, [X26 + 0x898]
	0x028443B8 LDR X27, [X27 + 0x128]
	0x028443BC MOV W25, W31
	0x028443C0 LDR X0, [X26]
	0x028443C4 BL 0x1C16F10
	0x028443C8 MOV X1, X31
	0x028443CC MOV X21, X0
	0x028443D0 BL 0x3DEF578
	0x028443D4 CBZ X21, 0x28445F0
	0x028443D8 MOV X0, X21
	0x028443DC MOV X1, X31
	0x028443E0 BL 0x3DE7EEC
	0x028443E4 MOV X22, X0
	0x028443E8 FMOV S0, W31
	0x028443EC MOV X0, X31
	0x028443F0 BL 0x3DFE658
	0x028443F4 CBZ X22, 0x28445F0
	0x028443F8 LDR X8, [X22]
	0x028443FC LDR X1, [X27]
	0x02844400 MOV X23, X0
	0x02844404 LDRH W9, [X8 + 0x12E]
	0x02844408 CBZ X9, 0x284442C
	0x0284440C LDR X10, [X8 + 0xB0]
	0x02844410 ADD X10, X10, 0x8
	0x02844414 LDUR X11, [X10 - 0x8]
	0x02844418 CMP X11, X1
	0x0284441C B.EQ 0x284443C
	0x02844420 SUBS X9, X9, 0x1
	0x02844424 ADD X10, X10, 0x10
	0x02844428 B.NE 0x2844414
	0x0284442C MOVZ W2, 0x16
	0x02844430 MOV X0, X22
	0x02844434 BL 0x1C5C788
	0x02844438 B 0x284444C
	0x0284443C LDR W9, [X10]
	0x02844440 ADD W9, W9, 0x16
	0x02844444 ADD X8, X8, W9, 0x4, SXTW
	0x02844448 ADD X0, X8, 0x138
	0x0284444C LDP X8, X2, [X0]
	0x02844450 MOV X0, X22
	0x02844454 MOV X1, X23
	0x02844458 BLR X8
	0x0284445C LDR X0, [X19 + 0x58]
	0x02844460 CBZ X0, 0x28445F0
	0x02844464 MOV X1, X21
	0x02844468 MOV X2, X31
	0x0284446C BL 0x3DF60E8
	0x02844470 ADD W25, W25, 0x1
	0x02844474 CMP W25, W24
	0x02844478 B.NE 0x28443C0
	0x0284447C LDR X8, [X20 + 0x20]
	0x02844480 LDR X0, [X19 + 0x28]
	0x02844484 LDR X1, [X19 + 0x48]
	0x02844488 LDR X8, [X8 + 0xC0]
	0x0284448C LDR X8, [X8 + 0x110]
	0x02844490 LDR X8, [X8 + 0x20]
	0x02844494 LDR X8, [X8 + 0xC0]
	0x02844498 LDR X2, [X8 + 0x30]
	0x0284449C BL 0x21C7E88
	0x028444A0 CBZ X0, 0x28444AC
	0x028444A4 LDR W26, [X0 + 0x20]
	0x028444A8 B 0x28444B0
	0x028444AC MOVN W26, 0x0
	0x028444B0 LDR X8, [X19 + 0x58]
	0x028444B4 CBZ X8, 0x28445F0
	0x028444B8 LDR X8, [X8 + 0x378]
	0x028444BC ADD X0, X31, 0x18
	0x028444C0 MOV X1, X31
	0x028444C4 STR X8, [X31 + 0x18]
	0x028444C8 BL 0x3DF8994
	0x028444CC CMP W0, 0x1
	0x028444D0 B.LT 0x28442A0
	0x028444D4 ADRP X27, 0x18D8000
	0x028444D8 ADRP X28, 0x18D9000
	0x028444DC LDR X27, [X27 + 0x128]
	0x028444E0 LDR X28, [X28 + 0xF18]
	0x028444E4 MOV W20, W0
	0x028444E8 MOV W21, W31
	0x028444EC LDR X8, [X19 + 0x58]
	0x028444F0 CBZ X8, 0x28445F0
	0x028444F4 LDR X8, [X8 + 0x378]
	0x028444F8 ADD X0, X31, 0x18
	0x028444FC MOV W1, W21
	0x02844500 MOV X2, X31
	0x02844504 STR X8, [X31 + 0x18]
	0x02844508 BL 0x3DF98E4
	0x0284450C CBZ X0, 0x28445F0
	0x02844510 MOV X1, X31
	0x02844514 MOV X22, X0
	0x02844518 BL 0x3DE7EEC
	0x0284451C MOV X23, X0
	0x02844520 MOV V0.16B, V8.16B
	0x02844524 MOV X0, X31
	0x02844528 BL 0x3DFED98
	0x0284452C CBZ X23, 0x28445F0
	0x02844530 LDR X8, [X23]
	0x02844534 MOV X25, X1
	0x02844538 LDR X1, [X27]
	0x0284453C MOV X24, X0
	0x02844540 LDRH W9, [X8 + 0x12E]
	0x02844544 CBZ X9, 0x2844568
	0x02844548 LDR X10, [X8 + 0xB0]
	0x0284454C ADD X10, X10, 0x8
	0x02844550 LDUR X11, [X10 - 0x8]
	0x02844554 CMP X11, X1
	0x02844558 B.EQ 0x2844578
	0x0284455C SUBS X9, X9, 0x1
	0x02844560 ADD X10, X10, 0x10
	0x02844564 B.NE 0x2844550
	0x02844568 MOVZ W2, 0x18
	0x0284456C MOV X0, X23
	0x02844570 BL 0x1C5C788
	0x02844574 B 0x2844588
	0x02844578 LDR W9, [X10]
	0x0284457C ADD W9, W9, 0x18
	0x02844580 ADD X8, X8, W9, 0x4, SXTW
	0x02844584 ADD X0, X8, 0x138
	0x02844588 LDP X8, X3, [X0]
	0x0284458C AND X2, X25, 0x0
	0x02844590 MOV X0, X23
	0x02844594 MOV X1, X24
	0x02844598 BLR X8
	0x0284459C LDR X0, [X28]
	0x028445A0 LDR W8, [X0 + 0xE0]
	0x028445A4 CBNZ W8, 0x28445B0
	0x028445A8 BL 0x1C16DFC
	0x028445AC LDR X0, [X28]
	0x028445B0 LDR X8, [X0 + 0xB8]
	0x028445B4 ADD W26, W26, 0x1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x1B97000
	014 Move W8, [X22+2721]
	015 Move X20, X2
	016 Move W21, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x18D9000
	023 Move X0, [X0+296]
	024 Call 0x1C17CF4
	025 Move X0, 0x18DA000
	026 Move X0, [X0+3848]
	027 Call 0x1C17CF4
	028 Move X0, 0x18DA000
	029 Move X0, [X0+3856]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2721], W8
	033 Move X0, [X19+32]
	034 Compare X0, 0
	035 JumpIfEqual {264}
	036 Move X8, [X0]
	037 Move X9, [X8+2056]
	038 Move X1, [X8+2064]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X19+40]
	041 Compare X8, 0
	042 JumpIfEqual {264}
	043 Move X27, 0x18D9000
	044 Move X28, 0x18DA000
	045 Move X29, 0x18DA000
	046 Move X27, [X27+296]
	047 Move X28, [X28+3856]
	048 Move X29, [X29+3848]
	049 Move W22, W0
	050 Move W23, W31
	051 Move W8, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X19]
	054 Move X0, X19
	055 Move X9, [X8+376]
	056 Move X1, [X8+384]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X8, [X19+40]
	059 Compare X8, 0
	060 JumpIfEqual {264}
	061 Move X9, [X20+32]
	062 Move W25, W0
	063 Move X0, X8
	064 Move W1, W23
	065 Move X9, [X9+192]
	066 Move X2, [X9+184]
	067 Call List`1<Object>.get_Item, X0, X1
	068 Compare X0, 0
	069 JumpIfEqual {264}
	070 Move X8, [X0]
	071 Move X24, X0
	072 Move X9, [X8+376]
	073 Move X1, [X8+384]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare X0, 0
	076 JumpIfEqual {264}
	077 Move X1, X31
	078 Call VisualElement.get_style, X0
	079 Compare X0, 0
	080 JumpIfEqual {264}
	081 Move X8, [X0]
	082 Move X1, [X27]
	083 Move X26, X0
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Compare X9, 0
	086 JumpIfEqual {93}
	087 Move X10, [X8+176]
	088 Add X10, X10, 8
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Subtract X9, X9, 1
	092 Add X10, X10, 16
	093 Move W2, 17
	094 Move X0, X26
	095 Call 0x1C5D788
	096 Move W9, [X10]
	097 Add W9, W9, 17
	098 Add X8, X8, W9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X26
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X1, [X28]
	105 Move X26, X0
	106 Move W0, W31
	107 Call 0x266FACC, X0
	108 Move X2, [X29]
	109 Move X1, X0
	110 Move X0, X26
	111 Call 0x266F9D0, X0, X1
	112 Move TEMP, X21
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {140}
	116 Move TEMP, X22
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {132}
	120 Move X8, [X19+32]
	121 Compare X8, 0
	122 JumpIfEqual {264}
	123 Move X0, [X8+1096]
	124 Compare X0, 0
	125 JumpIfEqual {264}
	126 Move X8, [X0]
	127 Move W2, [X24+32]
	128 Move X1, X24
	129 Move X9, [X8+568]
	130 Move X3, [X8+576]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X0, [X19+24]
	133 Compare X0, 0
	134 JumpIfEqual {264}
	135 Move X8, [X20+32]
	136 Move X1, X24
	137 Move X8, [X8+192]
	138 Move X2, [X8+192]
	139 Call 0x24943E0, X0, X1
	140 Move W26, W0
	141 Move X0, [X19+32]
	142 Compare X0, 0
	143 JumpIfEqual {264}
	144 Move X1, X31
	145 Add W25, W25, W23
	146 Call BaseVerticalCollectionView.get_itemsSource, X0
	147 Move TEMP, X25
	148 And TEMP, TEMP, -2147483648
	149 Compare TEMP, -2147483648
	150 JumpIfEqual {193}
	151 Compare X0, 0
	152 JumpIfEqual {193}
	153 Move X0, X19
	154 Call 0x2843AE0, X0
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move TEMP, X22
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {205}
	160 Move TEMP, X26
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfEqual {173}
	164 Move X8, [X19]
	165 Move X0, X19
	166 Move X9, [X8+648]
	167 Move X1, [X8+656]
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {205}
	173 Move W2, [X24+32]
	174 Add W31, W2, 1
	175 Move X8, [X19+32]
	176 Compare X8, 0
	177 JumpIfEqual {264}
	178 Move X0, [X8+1096]
	179 Compare X0, 0
	180 JumpIfEqual {264}
	181 Move X8, [X0]
	182 Move X1, X24
	183 Move X9, [X8+568]
	184 Move X3, [X8+576]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X8, [X20+32]
	187 Move X0, X19
	188 Move X1, X24
	189 Move W2, W25
	190 Move X8, [X8+192]
	191 Move X3, [X8+216]
	192 Call 0x28445B8, X0, X1, X2
	193 Move TEMP, X26
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {205}
	197 Move X8, [X19]
	198 Move X0, X19
	199 Move W1, W23
	200 Subtract W24, W23, 1
	201 Move X9, [X8+680]
	202 Move X2, [X8+688]
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move W23, W24
	205 Move X8, [X19+40]
	206 Add W23, W23, 1
	207 Compare X8, 0
	208 JumpIfNotEqual {51}
	209 Move TEMP, X21
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {251}
	213 Move X0, [X19+24]
	214 Compare X0, 0
	215 JumpIfEqual {264}
	216 Move X8, [X20+32]
	217 Move X8, [X8+192]
	218 Move X1, [X8+240]
	219 Call 0x24944C4, X0
	220 Move X8, [X19+40]
	221 Compare X8, 0
	222 JumpIfEqual {264}
	223 Move W2, [X8+24]
	224 Move W9, [X8+28]
	225 Add W9, W9, 1
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move [X8+24], W31
	228 Move [X8+28], W9
	229 Move X0, [X8+16]
	230 Move W1, W31
	231 Move X3, X31
	232 Call Array.Clear, X0, X1, X2
	233 Move X0, [X19+16]
	234 Compare X0, 0
	235 JumpIfEqual {264}
	236 Move X20, [X31+80]
	237 Move X19, [X31+88]
	238 Move X22, [X31+64]
	239 Move X21, [X31+72]
	240 Move X24, [X31+48]
	241 Move X23, [X31+56]
	242 Move X26, [X31+32]
	243 Move X25, [X31+40]
	244 Move X28, [X31+16]
	245 Move X27, [X31+24]
	246 Move X1, X31
	247 Move X29, [X31+96]
	248 Move X30, [X31+104]
	249 Call VisualElement.Clear, X0
	250 Return 
	251 Move X20, [X31+80]
	252 Move X19, [X31+88]
	253 Move X22, [X31+64]
	254 Move X21, [X31+72]
	255 Move X24, [X31+48]
	256 Move X23, [X31+56]
	257 Move X26, [X31+32]
	258 Move X25, [X31+40]
	259 Move X28, [X31+16]
	260 Move X27, [X31+24]
	261 Move X29, [X31+96]
	262 Move X30, [X31+104]
	263 Return 
	264 Call 0x1C17F20

Method: System.Void Setup(T recycledItem, System.Int32 newIndex)

Disassembly:
	0x028445B8 CMP W26, 0x0
	0x028445BC CINC W9, W26, LT
	0x028445C0 LDR X1, [X8 + 0x60]
	0x028445C4 AND W8, W9, 0xFFFFFFFE
	0x028445C8 SUB W8, W26, W8
	0x028445CC CMP W8, 0x1
	0x028445D0 CSET W2, EQ
	0x028445D4 MOV X0, X22
	0x028445D8 MOV X3, X31
	0x028445DC BL 0x3DF1E80
	0x028445E0 ADD W21, W21, 0x1
	0x028445E4 CMP W21, W20
	0x028445E8 B.NE 0x28444EC
	0x028445EC B 0x28442A0
	0x028445F0 BL 0x1C16F20
	0x028445F4 STP X30, X23, [X31 - 0x30]!
	0x028445F8 STP X22, X21, [X31 + 0x10]
	0x028445FC STP X20, X19, [X31 + 0x20]
	0x02844600 LDR X8, [X2 + 0x20]
	0x02844604 MOV X21, X1
	0x02844608 MOV X19, X2
	0x0284460C MOV X20, X0
	0x02844610 LDR X8, [X8 + 0xC0]
	0x02844614 LDR X1, [X8 + 0x10]
	0x02844618 LDRB W8, [X1 + 0x135]
	0x0284461C TBNZ X8, 0x0, 0x284462C
	0x02844620 MOV X0, X1
	0x02844624 BL 0x1C5C684
	0x02844628 MOV X1, X0
	0x0284462C MOV X0, X21
	0x02844630 BL 0x1C16E00
	0x02844634 LDR X8, [X19 + 0x20]
	0x02844638 MOV X23, X0
	0x0284463C LDR X8, [X8 + 0xC0]
	0x02844640 LDR X22, [X8 + 0x10]
	0x02844644 LDRB W8, [X22 + 0x135]
	0x02844648 TBNZ X8, 0x0, 0x2844658
	0x0284464C MOV X0, X22
	0x02844650 BL 0x1C5C684
	0x02844654 MOV X22, X0
	0x02844658 CBZ X23, 0x2844678
	0x0284465C MOV X0, X23
	0x02844660 MOV X1, X22
	0x02844664 BL 0x1C16E00
	0x02844668 CBNZ X0, 0x284467C
	0x0284466C MOV X0, X23
	0x02844670 MOV X1, X22
	0x02844674 BL 0x1C171E0
	0x02844678 MOV X0, X31
	0x0284467C STR X0, [X20 + 0x30]
	0x02844680 LDR X8, [X19 + 0x20]
	0x02844684 LDR X8, [X8 + 0xC0]
	0x02844688 LDR X1, [X8 + 0x10]
	0x0284468C LDRB W8, [X1 + 0x135]
	0x02844690 TBNZ X8, 0x0, 0x28446A0
	0x02844694 MOV X0, X1
	0x02844698 BL 0x1C5C684
	0x0284469C MOV X1, X0
	0x028446A0 MOV X0, X21
	0x028446A4 BL 0x1C16E00
	0x028446A8 LDR X8, [X19 + 0x20]
	0x028446AC MOV X22, X0
	0x028446B0 LDR X8, [X8 + 0xC0]
	0x028446B4 LDR X21, [X8 + 0x10]
	0x028446B8 LDRB W8, [X21 + 0x135]
	0x028446BC TBNZ X8, 0x0, 0x28446CC
	0x028446C0 MOV X0, X21
	0x028446C4 BL 0x1C5C684
	0x028446C8 MOV X21, X0
	0x028446CC CBZ X22, 0x28446E0
	0x028446D0 MOV X0, X22
	0x028446D4 MOV X1, X21
	0x028446D8 BL 0x1C16E00
	0x028446DC CBZ X0, 0x2844770
	0x028446E0 LDR X0, [X20 + 0x28]
	0x028446E4 CBZ X0, 0x284476C
	0x028446E8 LDR X8, [X19 + 0x20]
	0x028446EC LDR X1, [X20 + 0x30]
	0x028446F0 LDR X8, [X8 + 0xC0]
	0x028446F4 LDR X2, [X8 + 0x118]
	0x028446F8 BL 0x301CD00
	0x028446FC LDR X8, [X20 + 0x28]
	0x02844700 CBZ X8, 0x284476C
	0x02844704 LDR X9, [X19 + 0x20]
	0x02844708 MOV W21, W0
	0x0284470C MOV X0, X8
	0x02844710 MOV W1, W21
	0x02844714 LDR X9, [X9 + 0xC0]
	0x02844718 LDR X2, [X9 + 0x120]
	0x0284471C BL 0x301DA48
	0x02844720 LDR X8, [X20]
	0x02844724 MOV X0, X20
	0x02844728 MOV W1, W21
	0x0284472C MOV W2, W21
	0x02844730 LDR X9, [X8 + 0x298]
	0x02844734 LDR X3, [X8 + 0x2A0]
	0x02844738 BLR X9
	0x0284473C LDR X8, [X20 + 0x30]
	0x02844740 CBZ X8, 0x284476C
	0x02844744 LDR X9, [X19 + 0x20]
	0x02844748 MOV X1, X0
	0x0284474C LDR W2, [X8 + 0x20]
	0x02844750 MOV X0, X20
	0x02844754 LDR X9, [X9 + 0xC0]
	0x02844758 LDP X20, X19, [X31 + 0x20]
	0x0284475C LDP X22, X21, [X31 + 0x10]
	0x02844760 LDR X3, [X9 + 0xD8]
	0x02844764 LDP X30, X23, [X31], #0x30
	0x02844768 B 0x28435B8
	0x0284476C BL 0x1C16F20
	0x02844770 MOV X0, X22
	0x02844774 MOV X1, X21
	0x02844778 BL 0x1C171E0
	0x0284477C STP X30, X25, [X31 - 0x40]!
	0x02844780 STP X24, X23, [X31 + 0x10]
	0x02844784 STP X22, X21, [X31 + 0x20]
	0x02844788 STP X20, X19, [X31 + 0x30]
	0x0284478C ADRP X21, 0x1B96000
	0x02844790 LDRB W8, [X21 + 0xAA6]
	0x02844794 MOV X22, X2
	0x02844798 MOV W20, W1
	0x0284479C MOV X19, X0
	0x028447A0 TBNZ X8, 0x0, 0x28447D0
	0x028447A4 ADRP X0, 0x18D8000
	0x028447A8 LDR X0, [X0 + 0x128]
	0x028447AC BL 0x1C16CF4
	0x028447B0 ADRP X0, 0x18AF000
	0x028447B4 LDR X0, [X0 + 0x5A8]
	0x028447B8 BL 0x1C16CF4
	0x028447BC ADRP X0, 0x18D9000
	0x028447C0 LDR X0, [X0 + 0xF10]
	0x028447C4 BL 0x1C16CF4
	0x028447C8 MOVZ W8, 0x1
	0x028447CC STRB W8, [X21 + 0xAA6]
	0x028447D0 LDR X0, [X19 + 0x20]
	0x028447D4 MOV W1, W20
	0x028447D8 MOV X2, X31
	0x028447DC BL 0x3D95760
	0x028447E0 MOV X21, X0
	0x028447E4 CBZ X0, 0x2844818
	0x028447E8 LDR X8, [X21]
	0x028447EC LDR X23, [X19 + 0x10]
	0x028447F0 MOV X0, X21
	0x028447F4 LDP X9, X1, [X8 + 0x178]
	0x028447F8 BLR X9
	0x028447FC CBZ X23, 0x2844AB0
	0x02844800 MOV X1, X0
	0x02844804 MOV X0, X23
	0x02844808 MOV X2, X31
	0x0284480C BL 0x3DF6374
	0x02844810 MOV W23, W0
	0x02844814 B 0x2844824
	0x02844818 LDR X8, [X19 + 0x28]
	0x0284481C CBZ X8, 0x2844AB0
	0x02844820 LDR W23, [X8 + 0x18]
	0x02844824 LDR X0, [X19 + 0x30]
	0x02844828 CBZ X0, 0x2844AB0
	0x0284482C LDR X8, [X0]
	0x02844830 LDR X24, [X19 + 0x10]
	0x02844834 LDP X9, X1, [X8 + 0x178]
	0x02844838 BLR X9
	0x0284483C CBZ X24, 0x2844AB0
	0x02844840 MOV X2, X0
	0x02844844 MOV X0, X24
	0x02844848 MOV W1, W23
	0x0284484C MOV X3, X31
	0x02844850 BL 0x3DF6198
	0x02844854 LDR X0, [X19 + 0x28]
	0x02844858 CBZ X0, 0x2844AB0
	0x0284485C LDR X8, [X22 + 0x20]
	0x02844860 LDR X2, [X19 + 0x30]
	0x02844864 MOV W1, W23
	0x02844868 LDR X8, [X8 + 0xC0]
	0x0284486C LDR X3, [X8 + 0x130]
	0x02844870 BL 0x301CEEC
	0x02844874 LDR X0, [X19 + 0x28]
	0x02844878 CBZ X0, 0x2844AB0
	0x0284487C ADRP X24, 0x18AF000
	0x02844880 LDR X24, [X24 + 0x5A8]
	0x02844884 MOV W23, W31
	0x02844888 MOVN W25, 0x0
	0x0284488C LDR W8, [X0 + 0x18]
	0x02844890 CMP W23, W8
	0x02844894 B.GE 0x28448E8
	0x02844898 LDR X8, [X22 + 0x20]
	0x0284489C MOV W1, W23
	0x028448A0 LDR X8, [X8 + 0xC0]
	0x028448A4 LDR X2, [X8 + 0xB8]
	0x028448A8 BL 0x301BCCC
	0x028448AC CBZ X0, 0x2844AB0
	0x028448B0 LDRB W8, [X0 + 0x28]
	0x028448B4 CBZ W8, 0x28448D8
	0x028448B8 STR W25, [X0 + 0x20]
	0x028448BC LDR X8, [X19]
	0x028448C0 MOV X0, X19
	0x028448C4 MOV W1, W23
	0x028448C8 LDR X9, [X8 + 0x2A8]
	0x028448CC LDR X2, [X8 + 0x2B0]
	0x028448D0 BLR X9
	0x028448D4 SUB W23, W23, 0x1
	0x028448D8 LDR X0, [X19 + 0x28]
	0x028448DC ADD W23, W23, 0x1
	0x028448E0 CBNZ X0, 0x284488C
	0x028448E4 B 0x2844AB0
	0x028448E8 MOV X0, X19
	0x028448EC BL 0x2842AE0
	0x028448F0 LDR X8, [X24]
	0x028448F4 MOV W23, W0
	0x028448F8 LDR W9, [X8 + 0xE0]
	0x028448FC CBNZ W9, 0x2844908
	0x02844900 MOV X0, X8
	0x02844904 BL 0x1C16DFC
	0x02844908 SUB W1, W23, 0x1
	0x0284490C MOV W0, W20
	0x02844910 MOV X2, X31
	0x02844914 BL 0x337EE94
	0x02844918 LDR X8, [X19 + 0x30]
	0x0284491C CBZ X8, 0x2844AB0
	0x02844920 LDR W8, [X8 + 0x20]
	0x02844924 CMP W0, W8
	0x02844928 B.EQ 0x2844A98
	0x0284492C LDR X8, [X22 + 0x20]
	0x02844930 LDR X0, [X19 + 0x28]
	0x02844934 LDR X1, [X19 + 0x48]
	0x02844938 LDR X8, [X8 + 0xC0]
	0x0284493C LDR X8, [X8 + 0x110]
	0x02844940 LDR X8, [X8 + 0x20]
	0x02844944 LDR X8, [X8 + 0xC0]
	0x02844948 LDR X2, [X8 + 0x30]
	0x0284494C BL 0x21C7E88
	0x02844950 CBZ X0, 0x2844A1C
	0x02844954 LDR X8, [X22 + 0x20]
	0x02844958 LDR X0, [X19 + 0x28]
	0x0284495C LDR X1, [X19 + 0x48]
	0x02844960 LDR X8, [X8 + 0xC0]
	0x02844964 LDR X8, [X8 + 0x110]
	0x02844968 LDR X8, [X8 + 0x20]
	0x0284496C LDR X8, [X8 + 0xC0]
	0x02844970 LDR X2, [X8 + 0x30]
	0x02844974 BL 0x21C7E88
	0x02844978 CBZ X0, 0x2844AB0
	0x0284497C LDR X8, [X0]
	0x02844980 LDP X9, X1, [X8 + 0x178]
	0x02844984 BLR X9
	0x02844988 CBZ X0, 0x2844AB0
	0x0284498C MOV X1, X31
	0x02844990 BL 0x3DE7EEC
	0x02844994 ADRP X8, 0x18D9000
	0x02844998 LDR X8, [X8 + 0xF10]
	0x0284499C MOV X22, X0
	0x028449A0 MOVZ W0, 0x1
	0x028449A4 LDR X1, [X8]
	0x028449A8 BL 0x266EACC
	0x028449AC CBZ X22, 0x2844AB0
	0x028449B0 ADRP X10, 0x18D8000
	0x028449B4 LDR X8, [X22]
	0x028449B8 LDR X10, [X10 + 0x128]
	0x028449BC MOV X23, X0
	0x028449C0 LDRH W9, [X8 + 0x12E]
	0x028449C4 LDR X1, [X10]
	0x028449C8 CBZ X9, 0x28449EC
	0x028449CC LDR X10, [X8 + 0xB0]
	0x028449D0 ADD X10, X10, 0x8
	0x028449D4 LDUR X11, [X10 - 0x8]
	0x028449D8 CMP X11, X1
	0x028449DC B.EQ 0x28449FC
	0x028449E0 SUBS X9, X9, 0x1
	0x028449E4 ADD X10, X10, 0x10
	0x028449E8 B.NE 0x28449D4
	0x028449EC MOVZ W2, 0x12
	0x028449F0 MOV X0, X22
	0x028449F4 BL 0x1C5C788
	0x028449F8 B 0x2844A0C
	0x028449FC LDR W9, [X10]
	0x02844A00 ADD W9, W9, 0x12
	0x02844A04 ADD X8, X8, W9, 0x4, SXTW
	0x02844A08 ADD X0, X8, 0x138
	0x02844A0C LDP X8, X2, [X0]
	0x02844A10 MOV X0, X22
	0x02844A14 MOV X1, X23
	0x02844A18 BLR X8
	0x02844A1C LDR X1, [X19 + 0x30]
	0x02844A20 CBZ X1, 0x2844AB0
	0x02844A24 LDR W2, [X1 + 0x20]
	0x02844A28 CMP W2, W20
	0x02844A2C B.GE 0x2844A64
	0x02844A30 LDR X8, [X19 + 0x20]
	0x02844A34 CBZ X8, 0x2844AB0
	0x02844A38 LDR X0, [X8 + 0x448]
	0x02844A3C CBZ X0, 0x2844AB0
	0x02844A40 LDR X8, [X0]
	0x02844A44 LDR X9, [X8 + 0x238]
	0x02844A48 LDR X3, [X8 + 0x240]
	0x02844A4C BLR X9
	0x02844A50 LDR X8, [X19 + 0x30]
	0x02844A54 CBZ X8, 0x2844AB0
	0x02844A58 MOVN W9, 0x0
	0x02844A5C STR W9, [X8 + 0x20]
	0x02844A60 B 0x2844A98
	0x02844A64 CBZ X21, 0x2844A98
	0x02844A68 LDR X8, [X19 + 0x20]
	0x02844A6C CBZ X8, 0x2844AB0
	0x02844A70 LDR X0, [X8 + 0x448]
	0x02844A74 CBZ X0, 0x2844AB0
	0x02844A78 LDR X8, [X0]
	0x02844A7C LDR W2, [X21 + 0x20]
	0x02844A80 MOV X1, X21
	0x02844A84 LDR X9, [X8 + 0x238]
	0x02844A88 LDR X3, [X8 + 0x240]
	0x02844A8C BLR X9
	0x02844A90 MOVN W8, 0x0
	0x02844A94 STR W8, [X21 + 0x20]
	0x02844A98 STR X31, [X19 + 0x30]
	0x02844A9C LDP X20, X19, [X31 + 0x30]
	0x02844AA0 LDP X22, X21, [X31 + 0x20]
	0x02844AA4 LDP X24, X23, [X31 + 0x10]
	0x02844AA8 LDP X30, X25, [X31], #0x40
	0x02844AAC RET
	0x02844AB0 BL 0x1C16F20
	0x02844AB4 STR X30, [X31 - 0x40]!
	0x02844AB8 STP X24, X23, [X31 + 0x10]
	0x02844ABC STP X22, X21, [X31 + 0x20]
	0x02844AC0 STP X20, X19, [X31 + 0x30]
	0x02844AC4 ADRP X20, 0x1B96000
	0x02844AC8 LDRB W8, [X20 + 0xAA7]
	0x02844ACC MOV X23, X3
	0x02844AD0 MOV W19, W2
	0x02844AD4 MOV W22, W1
	0x02844AD8 MOV X21, X0
	0x02844ADC TBNZ X8, 0x0, 0x2844AF4
	0x02844AE0 ADRP X0, 0x18D9000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x1B97000
	010 Move W8, [X22+2722]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x18DA000
	019 Move X0, [X0+3864]
	020 Call 0x1C17CF4
	021 Move X0, 0x18D9000
	022 Move X0, [X0+296]
	023 Call 0x1C17CF4
	024 Move X0, 0x18DA000
	025 Move X0, [X0+3856]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2722], W8
	029 Compare X19, 0
	030 JumpIfEqual {384}
	031 Move W22, [X19+40]
	032 Move X0, X20
	033 Call 0x2845DC0, X0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W2, [X19+32]
	036 Add W31, W2, 1
	037 Move X8, [X20+32]
	038 Compare X8, 0
	039 JumpIfEqual {384}
	040 Move X0, [X8+1096]
	041 Compare X0, 0
	042 JumpIfEqual {384}
	043 Move X8, [X0]
	044 Move X1, X19
	045 Move X9, [X8+568]
	046 Move X3, [X8+576]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X19]
	049 Move W1, 1
	050 Move X0, X19
	051 Move X9, [X8+472]
	052 Move X2, [X8+480]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X20+48]
	055 Compare X8, 0
	056 JumpIfEqual {384}
	057 Move W8, [X8+32]
	058 Move X9, [X19]
	059 Move X0, X19
	060 Move [X19+32], W8
	061 Move X8, [X9+376]
	062 Move X1, [X9+384]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Compare X0, 0
	065 JumpIfEqual {384}
	066 Move X1, X31
	067 Call VisualElement.get_style, X0
	068 Move X8, 0x18DA000
	069 Move X8, [X8+3856]
	070 Move X19, X0
	071 Move W0, W31
	072 Move X1, [X8]
	073 Call 0x266FACC, X0
	074 Compare X19, 0
	075 JumpIfEqual {384}
	076 Move X10, 0x18D9000
	077 Move X8, [X19]
	078 Move X10, [X10+296]
	079 Move X20, X0
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Move X1, [X10]
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move W2, 18
	091 Move X0, X19
	092 Call 0x1C5D788
	093 Compare W22, 0
	094 JumpIfEqual {101}
	095 Move X8, [X19]
	096 Move X0, X19
	097 Move W1, W31
	098 Move X9, [X8+472]
	099 Move X2, [X8+480]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X0, X20
	102 Call 0x2843AE0, X0
	103 Move X8, [X19]
	104 Move W22, W0
	105 Move X0, X19
	106 Move X9, [X8+376]
	107 Move X1, [X8+384]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Compare X0, 0
	110 JumpIfEqual {384}
	111 Move X1, X31
	112 Call VisualElement.get_style, X0
	113 Move X8, 0x18DA000
	114 Move X8, [X8+3856]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X22, X0
	117 Move X1, [X8]
	118 Move W0, W31
	119 Call 0x266FACC, X0
	120 Compare X22, 0
	121 JumpIfEqual {384}
	122 Move X10, 0x18D9000
	123 Move X8, [X22]
	124 Move X10, [X10+296]
	125 Move X23, X0
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Move X1, [X10]
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move W2, 18
	137 Move X0, X22
	138 Call 0x1C5D788
	139 Move W0, 1
	140 Call 0x266FACC, X0
	141 Compare X22, 0
	142 JumpIfEqual {384}
	143 Move X10, 0x18D9000
	144 Move X8, [X22]
	145 Move X10, [X10+296]
	146 Move X21, X0
	147 NotImplemented "Instruction LDRH not yet implemented."
	148 Move X1, [X10]
	149 Compare X9, 0
	150 JumpIfEqual {157}
	151 Move X10, [X8+176]
	152 Add X10, X10, 8
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract X9, X9, 1
	156 Add X10, X10, 16
	157 Move W2, 18
	158 Move X0, X22
	159 Call 0x1C5D788
	160 Move W9, [X10]
	161 Add W9, W9, 18
	162 Add X8, X8, W9
	163 Add X0, X8, 312
	164 Move X3, [X0]
	165 Move X2, [X0+8]
	166 Move X0, X19
	167 Move X1, X20
	168 Move X20, [X31+48]
	169 Move X19, [X31+56]
	170 Move X22, [X31+32]
	171 Move X21, [X31+40]
	172 Move X24, [X31+16]
	173 Move X23, [X31+24]
	174 Move X30, [X31+64]
	175 Move X25, [X31+72]
	176 CallNoReturn X3
	177 Move W9, [X10]
	178 Add W9, W9, 18
	179 Add X8, X8, W9
	180 Add X0, X8, 312
	181 Move X8, [X0]
	182 Move X2, [X0+8]
	183 Move X0, X22
	184 Move X1, X23
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X8, [X20+32]
	187 Compare X8, 0
	188 JumpIfEqual {384}
	189 Move X0, [X8+1096]
	190 Compare X0, 0
	191 JumpIfEqual {384}
	192 Move X8, [X0]
	193 Move W1, W21
	194 Move X9, [X8+504]
	195 Move X2, [X8+512]
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move W8, [X19+32]
	198 Move W23, W0
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move W8, [X19+36]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X0, [X20+32]
	203 Compare X0, 0
	204 JumpIfEqual {384}
	205 Move X1, X31
	206 Call BaseVerticalCollectionView.get_showAlternatingRowBackgrounds, X0
	207 Compare W0, 0
	208 JumpIfEqual {257}
	209 NotImplemented "Instruction CMP not yet implemented."
	210 NotImplemented "Instruction CINC not yet implemented."
	211 And W8, W8, 0xFFFFFFFE
	212 Subtract W8, W21, W8
	213 NotImplemented "Instruction CMP not yet implemented."
	214 NotImplemented "Instruction CSET not yet implemented."
	215 Move W9, [X10]
	216 Add W9, W9, 18
	217 Add X8, X8, W9
	218 Add X0, X8, 312
	219 Move X8, [X0]
	220 Move X2, [X0+8]
	221 Move X0, X22
	222 Move X1, X21
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Move W21, [X19+32]
	225 Move TEMP, X21
	226 And TEMP, TEMP, -2147483648
	227 Compare TEMP, -2147483648
	228 JumpIfEqual {248}
	229 Move X0, X20
	230 Call 0x2843AE0, X0
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X8, [X20+32]
	233 Compare X8, 0
	234 JumpIfEqual {384}
	235 Move X0, [X8+1096]
	236 Compare X0, 0
	237 JumpIfEqual {384}
	238 Move X8, [X0]
	239 Move W2, [X19+32]
	240 Move X1, X19
	241 Move X9, [X8+568]
	242 Move X3, [X8+576]
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move TEMP, 0
	245 Not TEMP
	246 Move W8, TEMP
	247 Move [X19+32], W8
	248 Move X20, [X31+48]
	249 Move X19, [X31+56]
	250 Move X22, [X31+32]
	251 Move X21, [X31+40]
	252 Move X24, [X31+16]
	253 Move X23, [X31+24]
	254 Move X30, [X31+64]
	255 Move X25, [X31+72]
	256 Return 
	257 Move W22, W31
	258 Move X8, [X19]
	259 Move X0, X19
	260 Move X9, [X8+376]
	261 Move X1, [X8+384]
	262 NotImplemented "Instruction BLR not yet implemented."
	263 Move X25, 0x18DA000
	264 Move X25, [X25+3864]
	265 Move X24, X0
	266 Move X8, [X25]
	267 Move W9, [X8+224]
	268 Compare W9, 0
	269 JumpIfNotEqual {272}
	270 Move X0, X8
	271 Call 0x1C17DFC
	272 Compare X24, 0
	273 JumpIfEqual {384}
	274 Move X8, [X25]
	275 Move X0, X24
	276 Move W2, W22
	277 Move X3, X31
	278 Move X8, [X8+184]
	279 Move X1, [X8+96]
	280 Call VisualElement.EnableInClassList, X0, X1, X2
	281 Move W22, [X19+32]
	282 Add W31, W22, 1
	283 Move X8, [X20+32]
	284 Compare X8, 0
	285 JumpIfEqual {384}
	286 Move X0, [X8+1096]
	287 Compare X0, 0
	288 JumpIfEqual {384}
	289 Move X8, [X0]
	290 Move X1, X19
	291 Move W2, W22
	292 Move X9, [X8+568]
	293 Move X3, [X8+576]
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move [X19+32], W21
	296 Move [X19+36], W23
	297 Move X8, [X20]
	298 Move X0, X20
	299 Move X9, [X8+376]
	300 Move X1, [X8+384]
	301 NotImplemented "Instruction BLR not yet implemented."
	302 Move X8, [X20+16]
	303 Compare X8, 0
	304 JumpIfEqual {384}
	305 Move X9, [X8]
	306 Move W23, W0
	307 Move X0, X8
	308 Move X10, [X9+1896]
	309 Move X1, [X9+1904]
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Compare X0, 0
	312 JumpIfEqual {384}
	313 Move X1, X31
	314 Subtract W23, W21, W23
	315 Call VisualElement.get_childCount, X0
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X8, [X19]
	318 Move X0, X19
	319 Move X9, [X8+376]
	320 Move X1, [X8+384]
	321 NotImplemented "Instruction BLR not yet implemented."
	322 Move X24, X0
	323 Move TEMP, X23
	324 And TEMP, TEMP, -2147483648
	325 Compare TEMP, -2147483648
	326 JumpIfEqual {354}
	327 Move X0, [X20+16]
	328 Compare X0, 0
	329 JumpIfEqual {384}
	330 Move X8, [X0]
	331 Move X9, [X8+1896]
	332 Move X1, [X8+1904]
	333 NotImplemented "Instruction BLR not yet implemented."
	334 Compare X0, 0
	335 JumpIfEqual {384}
	336 Move W1, W23
	337 Move X2, X31
	338 Call VisualElement.get_Item, X0, X1
	339 Compare X24, 0
	340 JumpIfEqual {384}
	341 Move X1, X0
	342 Move X0, X24
	343 Move X2, X31
	344 Call VisualElement.PlaceBehind, X0, X1
	345 Move X8, [X19]
	346 Move X0, X19
	347 Move X9, [X8+376]
	348 Move X1, [X8+384]
	349 NotImplemented "Instruction BLR not yet implemented."
	350 Compare X0, 0
	351 JumpIfEqual {384}
	352 Move X1, X31
	353 Call VisualElement.BringToFront, X0
	354 Compare X24, 0
	355 JumpIfEqual {384}
	356 Move X0, X24
	357 Move X1, X31
	358 Call VisualElement.SendToBack, X0
	359 Move X8, [X20+32]
	360 Compare X8, 0
	361 JumpIfEqual {384}
	362 Move X0, [X8+1096]
	363 Compare X0, 0
	364 JumpIfEqual {384}
	365 Move X8, [X0]
	366 Move X1, X19
	367 Move W2, W21
	368 Move X9, [X8+552]
	369 Move X3, [X8+560]
	370 NotImplemented "Instruction BLR not yet implemented."
	371 Move X0, X20
	372 Move X1, X19
	373 Move W2, W22
	374 Move X20, [X31+48]
	375 Move X19, [X31+56]
	376 Move X22, [X31+32]
	377 Move X21, [X31+40]
	378 Move X24, [X31+16]
	379 Move X23, [X31+24]
	380 Move X30, [X31+64]
	381 Move X25, [X31+72]
	382 Call 0x2844FB8, X0, X1, X2
	383 Return 
	384 Call 0x1C17F20

Method: System.Void OnFocus(UnityEngine.UIElements.VisualElement leafTarget)

Disassembly:
	0x02844AE4 LDR X0, [X0 + 0xF40]
	0x02844AE8 BL 0x1C16CF4
	0x02844AEC MOVZ W8, 0x1
	0x02844AF0 STRB W8, [X20 + 0xAA7]
	0x02844AF4 LDR X0, [X21 + 0x18]
	0x02844AF8 CBZ X0, 0x2844C6C
	0x02844AFC LDR X8, [X23 + 0x20]
	0x02844B00 LDR X8, [X8 + 0xC0]
	0x02844B04 LDR X1, [X8 + 0x138]
	0x02844B08 BL 0x24932C0
	0x02844B0C CBZ X0, 0x2844C6C
	0x02844B10 LDR X8, [X0]
	0x02844B14 MOV X20, X0
	0x02844B18 LDP X9, X1, [X8 + 0x178]
	0x02844B1C BLR X9
	0x02844B20 CBNZ X0, 0x2844B84
	0x02844B24 LDR X8, [X21 + 0x20]
	0x02844B28 CBZ X8, 0x2844C6C
	0x02844B2C LDR X0, [X8 + 0x448]
	0x02844B30 CBZ X0, 0x2844C6C
	0x02844B34 LDR X8, [X0]
	0x02844B38 MOV X1, X20
	0x02844B3C LDR X9, [X8 + 0x218]
	0x02844B40 LDR X2, [X8 + 0x220]
	0x02844B44 BLR X9
	0x02844B48 ADRP X8, 0x18D9000
	0x02844B4C LDR X8, [X8 + 0xF40]
	0x02844B50 LDR X0, [X8]
	0x02844B54 BL 0x1C16F10
	0x02844B58 LDR X8, [X23 + 0x20]
	0x02844B5C MOV X1, X21
	0x02844B60 MOV X3, X31
	0x02844B64 MOV X24, X0
	0x02844B68 LDR X8, [X8 + 0xC0]
	0x02844B6C LDR X2, [X8 + 0x140]
	0x02844B70 BL 0x2A6B948
	0x02844B74 MOV X0, X20
	0x02844B78 MOV X1, X24
	0x02844B7C MOV X2, X31
	0x02844B80 BL 0x3CF6F44
	0x02844B84 LDR X8, [X20]
	0x02844B88 MOV X0, X20
	0x02844B8C LDP X9, X1, [X8 + 0x198]
	0x02844B90 BLR X9
	0x02844B94 LDR X0, [X21 + 0x28]
	0x02844B98 CBZ X0, 0x2844C6C
	0x02844B9C LDR X8, [X23 + 0x20]
	0x02844BA0 ADDS W31, W22, 0x1
	0x02844BA4 LDR X9, [X8 + 0xC0]
	0x02844BA8 B.EQ 0x2844BC0
	0x02844BAC LDR X3, [X9 + 0x130]
	0x02844BB0 MOV W1, W22
	0x02844BB4 MOV X2, X20
	0x02844BB8 BL 0x301CEEC
	0x02844BBC B 0x2844C10
	0x02844BC0 LDR W10, [X0 + 0x1C]
	0x02844BC4 LDR X8, [X0 + 0x10]
	0x02844BC8 LDR X9, [X9 + 0x148]
	0x02844BCC ADD W10, W10, 0x1
	0x02844BD0 STR W10, [X0 + 0x1C]
	0x02844BD4 CBZ X8, 0x2844C6C
	0x02844BD8 LDRSW X10, [X0 + 0x18]
	0x02844BDC LDR W11, [X8 + 0x18]
	0x02844BE0 CMP W10, W11
	0x02844BE4 B.CS 0x2844BFC
	0x02844BE8 ADD W9, W10, 0x1
	0x02844BEC ADD X8, X8, X10, 0x3, LSL
	0x02844BF0 STR W9, [X0 + 0x18]
	0x02844BF4 STR X20, [X8 + 0x20]
	0x02844BF8 B 0x2844C10
	0x02844BFC LDR X8, [X9 + 0x20]
	0x02844C00 MOV X1, X20
	0x02844C04 LDR X8, [X8 + 0xC0]
	0x02844C08 LDR X2, [X8 + 0x70]
	0x02844C0C BL 0x301BF90
	0x02844C10 LDR X8, [X20]
	0x02844C14 LDR X21, [X21 + 0x10]
	0x02844C18 MOV X0, X20
	0x02844C1C LDP X9, X1, [X8 + 0x178]
	0x02844C20 BLR X9
	0x02844C24 CBZ X21, 0x2844C6C
	0x02844C28 MOV X2, X0
	0x02844C2C MOV X0, X21
	0x02844C30 ADDS W31, W19, 0x1
	0x02844C34 B.EQ 0x2844C48
	0x02844C38 MOV W1, W19
	0x02844C3C MOV X3, X31
	0x02844C40 BL 0x3DF6198
	0x02844C44 B 0x2844C54
	0x02844C48 MOV X1, X2
	0x02844C4C MOV X2, X31
	0x02844C50 BL 0x3DF60E8
	0x02844C54 MOV X0, X20
	0x02844C58 LDP X20, X19, [X31 + 0x30]
	0x02844C5C LDP X22, X21, [X31 + 0x20]
	0x02844C60 LDP X24, X23, [X31 + 0x10]
	0x02844C64 LDR X30, [X31], #0x40
	0x02844C68 RET
	0x02844C6C BL 0x1C16F20
	0x02844C70 STP X30, X21, [X31 - 0x20]!
	0x02844C74 STP X20, X19, [X31 + 0x10]
	0x02844C78 MOV X20, X0
	0x02844C7C LDR X0, [X0 + 0x28]
	0x02844C80 CBZ X0, 0x2844D10
	0x02844C84 LDR X8, [X2 + 0x20]
	0x02844C88 MOV X19, X2
	0x02844C8C LDR X8, [X8 + 0xC0]
	0x02844C90 LDR X2, [X8 + 0xB8]
	0x02844C94 BL 0x301BCCC
	0x02844C98 CBZ X0, 0x2844D10
	0x02844C9C LDR W2, [X0 + 0x20]
	0x02844CA0 MOV X21, X0
	0x02844CA4 ADDS W31, W2, 0x1
	0x02844CA8 B.EQ 0x2844CD0
	0x02844CAC LDR X8, [X20 + 0x20]
	0x02844CB0 CBZ X8, 0x2844D10
	0x02844CB4 LDR X0, [X8 + 0x448]
	0x02844CB8 CBZ X0, 0x2844D10
	0x02844CBC LDR X8, [X0]
	0x02844CC0 MOV X1, X21
	0x02844CC4 LDR X9, [X8 + 0x238]
	0x02844CC8 LDR X3, [X8 + 0x240]
	0x02844CCC BLR X9
	0x02844CD0 LDR X0, [X20 + 0x18]
	0x02844CD4 CBZ X0, 0x2844D10
	0x02844CD8 LDR X8, [X19 + 0x20]
	0x02844CDC MOV X1, X21
	0x02844CE0 LDR X8, [X8 + 0xC0]
	0x02844CE4 LDR X2, [X8 + 0xC0]
	0x02844CE8 BL 0x24933E0
	0x02844CEC LDR X0, [X20 + 0x28]
	0x02844CF0 CBZ X0, 0x2844D10
	0x02844CF4 LDR X8, [X19 + 0x20]
	0x02844CF8 LDP X20, X19, [X31 + 0x10]
	0x02844CFC MOV X1, X21
	0x02844D00 LDR X8, [X8 + 0xC0]
	0x02844D04 LDR X2, [X8 + 0x150]
	0x02844D08 LDP X30, X21, [X31], #0x20
	0x02844D0C B 0x301D7A8
	0x02844D10 BL 0x1C16F20
	0x02844D14 STR X30, [X31 - 0x30]!
	0x02844D18 STP X22, X21, [X31 + 0x10]
	0x02844D1C STP X20, X19, [X31 + 0x20]
	0x02844D20 ADRP X22, 0x1B96000
	0x02844D24 LDRB W8, [X22 + 0xAA8]
	0x02844D28 MOV X21, X2
	0x02844D2C MOV X19, X1
	0x02844D30 MOV X20, X0
	0x02844D34 TBNZ X8, 0x0, 0x2844D4C
	0x02844D38 ADRP X0, 0x18D9000
	0x02844D3C LDR X0, [X0 + 0xF40]
	0x02844D40 BL 0x1C16CF4
	0x02844D44 MOVZ W8, 0x1
	0x02844D48 STRB W8, [X22 + 0xAA8]
	0x02844D4C LDR X8, [X20 + 0x20]
	0x02844D50 CBZ X8, 0x2844DBC
	0x02844D54 LDR X0, [X8 + 0x448]
	0x02844D58 CBZ X0, 0x2844DBC
	0x02844D5C LDR X8, [X0]
	0x02844D60 ADRP X22, 0x18D9000
	0x02844D64 MOV X1, X19
	0x02844D68 LDR X9, [X8 + 0x248]
	0x02844D6C LDR X2, [X8 + 0x250]
	0x02844D70 LDR X22, [X22 + 0xF40]
	0x02844D74 BLR X9
	0x02844D78 LDR X0, [X22]
	0x02844D7C BL 0x1C16F10
	0x02844D80 LDR X8, [X21 + 0x20]
	0x02844D84 MOV X1, X20
	0x02844D88 MOV X3, X31
	0x02844D8C MOV X21, X0
	0x02844D90 LDR X8, [X8 + 0xC0]
	0x02844D94 LDR X2, [X8 + 0x140]
	0x02844D98 BL 0x2A6B948
	0x02844D9C CBZ X19, 0x2844DBC
	0x02844DA0 MOV X0, X19
	0x02844DA4 MOV X1, X21
	0x02844DA8 LDP X20, X19, [X31 + 0x20]
	0x02844DAC LDP X22, X21, [X31 + 0x10]
	0x02844DB0 MOV X2, X31
	0x02844DB4 LDR X30, [X31], #0x30
	0x02844DB8 B 0x3CF6FF4
	0x02844DBC BL 0x1C16F20
	0x02844DC0 STR X30, [X31 - 0x20]!
	0x02844DC4 STP X20, X19, [X31 + 0x10]
	0x02844DC8 ADRP X20, 0x1B96000
	0x02844DCC LDRB W8, [X20 + 0xAA9]
	0x02844DD0 MOV X19, X0
	0x02844DD4 TBNZ X8, 0x0, 0x2844DEC
	0x02844DD8 ADRP X0, 0x18D9000
	0x02844DDC LDR X0, [X0 + 0xF48]
	0x02844DE0 BL 0x1C16CF4
	0x02844DE4 MOVZ W8, 0x1
	0x02844DE8 STRB W8, [X20 + 0xAA9]
	0x02844DEC LDR X8, [X19 + 0x20]
	0x02844DF0 CBZ X8, 0x2844E58
	0x02844DF4 LDR X8, [X8 + 0x488]
	0x02844DF8 CBZ X8, 0x2844E30
	0x02844DFC ADRP X9, 0x18D9000
	0x02844E00 LDR X9, [X9 + 0xF48]
	0x02844E04 LDR X10, [X8]
	0x02844E08 LDR X9, [X9]
	0x02844E0C LDRB W12, [X10 + 0x130]
	0x02844E10 LDRB W11, [X9 + 0x130]
	0x02844E14 CMP W12, W11
	0x02844E18 B.CC 0x2844E30
	0x02844E1C LDR X10, [X10 + 0xC8]
	0x02844E20 ADD X10, X10, X11, 0x3, LSL
	0x02844E24 LDUR X10, [X10 - 0x8]
	0x02844E28 CMP X10, X9
	0x02844E2C B.EQ 0x2844E40
	0x02844E30 MOVN W0, 0x0
	0x02844E34 LDP X20, X19, [X31 + 0x10]
	0x02844E38 LDR X30, [X31], #0x20
	0x02844E3C RET
	0x02844E40 LDRB W9, [X8 + 0xA8]
	0x02844E44 CBZ W9, 0x2844E30
	0x02844E48 LDR X8, [X8 + 0x98]
	0x02844E4C CBZ X8, 0x2844E58
	0x02844E50 LDR W0, [X8 + 0x20]
	0x02844E54 B 0x2844E34
	0x02844E58 BL 0x1C16F20
	0x02844E5C STR X30, [X31 - 0x20]!
	0x02844E60 STP X20, X19, [X31 + 0x10]
	0x02844E64 MOV X19, X2
	0x02844E68 MOV X2, X31
	0x02844E6C MOV X20, X0
	0x02844E70 BL 0x3DF9A80
	0x02844E74 STR X19, [X20 + 0x50]
	0x02844E78 LDP X20, X19, [X31 + 0x10]
	0x02844E7C LDR X30, [X31], #0x20
	0x02844E80 RET
	0x02844E84 STP X29, X30, [X31 - 0x40]!
	0x02844E88 STP X24, X23, [X31 + 0x10]
	0x02844E8C STP X22, X21, [X31 + 0x20]
	0x02844E90 STP X20, X19, [X31 + 0x30]
	0x02844E94 ADD X29, X31, 0x0
	0x02844E98 SUB X31, X31, 0x10
	0x02844E9C MRS X24, 0xC000
	0x02844EA0 LDR X8, [X24 + 0x28]
	0x02844EA4 MOV X19, X3
	0x02844EA8 MOV X20, X2
	0x02844EAC MOV X22, X0
	0x02844EB0 STUR X8, [X29 - 0x8]
	0x02844EB4 STUR X2, [X29 - 0x10]
	0x02844EB8 LDR X8, [X3 + 0x20]
	0x02844EBC LDR X8, [X8 + 0xC0]
	0x02844EC0 LDR X8, [X8]
	0x02844EC4 LDR W21, [X8 + 0xFC]
	0x02844EC8 ADD X8, X31, 0x0
	0x02844ECC ADD X9, X21, 0xF
	0x02844ED0 AND X9, X9, 0x1FFFFFFFF
	0x02844ED4 SUB X23, X8, X9
	0x02844ED8 ADD X31, X23, 0x0
	0x02844EDC MOV X2, X31
	0x02844EE0 BL 0x3DF9A80
	0x02844EE4 LDR X19, [X19 + 0x20]
	0x02844EE8 MOV X0, X23
	0x02844EEC MOV X2, X21
	0x02844EF0 LDR X8, [X19 + 0xC0]
	0x02844EF4 LDR X8, [X8]
	0x02844EF8 LDR W8, [X8 + 0x28]
	0x02844EFC CMP W8, 0x0
	0x02844F00 SUB X8, X29, 0x10
	0x02844F04 CSEL X1, X20, X8, LT
	0x02844F08 BL 0x3EB1AC0
	0x02844F0C LDR X8, [X19 + 0xC0]
	0x02844F10 MOV X0, X22
	0x02844F14 MOV X2, X23
	0x02844F18 MOV W3, W21
	0x02844F1C LDR X8, [X8 + 0x8]
	0x02844F20 LDR X1, [X8 + 0x80]
	0x02844F24 BL 0x1C16D1C
	0x02844F28 LDR X8, [X24 + 0x28]
	0x02844F2C LDUR X9, [X29 - 0x8]
	0x02844F30 CMP X8, X9
	0x02844F34 B.NE 0x2844F50

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x1B97000
	009 Move W8, [X21+2723]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x18B0000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x18DA000
	020 Move X0, [X0+3872]
	021 Call 0x1C17CF4
	022 Move X0, 0x18DA000
	023 Move X0, [X0+3880]
	024 Call 0x1C17CF4
	025 Move X0, 0x18B0000
	026 Move X0, [X0+3608]
	027 Call 0x1C17CF4
	028 Move X0, 0x18B7000
	029 Move X0, [X0+2136]
	030 Call 0x1C17CF4
	031 Move X0, 0x18DA000
	032 Move X0, [X0+3888]
	033 Call 0x1C17CF4
	034 Move X0, 0x18DA000
	035 Move X0, [X0+3896]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2723], W8
	039 Move X0, [X19+16]
	040 Compare X0, 0
	041 JumpIfEqual {255}
	042 Move X8, [X0]
	043 Move X9, [X8+1896]
	044 Move X1, [X8+1904]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X19+64]
	048 Compare X8, 0
	049 JumpIfEqual {255}
	050 Move W9, [X8+28]
	051 Add W9, W9, 1
	052 Move [X8+24], W31
	053 Move [X8+28], W9
	054 Move X0, [X19+16]
	055 Compare X0, 0
	056 JumpIfEqual {255}
	057 Move X8, [X0]
	058 Move X9, [X8+1896]
	059 Move X1, [X8+1904]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X0, 0
	062 JumpIfEqual {255}
	063 Move X2, [X19+64]
	064 Move X1, X20
	065 Move X3, X31
	066 Call VisualElement.FindElementInTree, X0, X1, X2
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {119}
	071 Move X0, [X19+16]
	072 Compare X0, 0
	073 JumpIfEqual {255}
	074 Move X8, [X0]
	075 Move X9, [X8+1896]
	076 Move X1, [X8+1904]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X19+64]
	079 Compare X8, 0
	080 JumpIfEqual {255}
	081 Move X9, 0x18DA000
	082 Move X9, [X9+3896]
	083 Move X20, X0
	084 Move X0, X8
	085 Move W1, W31
	086 Move X2, [X9]
	087 Call List`1<Int32>.get_Item, X0, X1
	088 Compare X20, 0
	089 JumpIfEqual {255}
	090 Move W1, W0
	091 Move X0, X20
	092 Move X2, X31
	093 Call VisualElement.get_Item, X0, X1
	094 Move X8, [X19]
	095 Move X21, X0
	096 Move X0, X19
	097 Move X9, [X8+584]
	098 Move X1, [X8+592]
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Compare X0, 0
	101 JumpIfEqual {255}
	102 Move X10, 0x18DA000
	103 Move X8, [X0]
	104 Move X10, [X10+3872]
	105 Move X20, X0
	106 NotImplemented "Instruction LDRH not yet implemented."
	107 Move X1, [X10]
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X20
	117 Move W2, W31
	118 Call 0x1C5D788
	119 Move TEMP, 0
	120 Not TEMP
	121 Move W8, TEMP
	122 Move [X19+56], W8
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X1, [X0+8]
	128 Move X0, X20
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X20, X0
	131 Compare X0, 0
	132 JumpIfEqual {256}
	133 Move X23, 0x18B0000
	134 Move X24, 0x18DA000
	135 Move X23, [X23+3608]
	136 Move X24, [X24+3880]
	137 Move X8, [X20]
	138 Move X1, [X23]
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move X0, X20
	149 Move W2, W31
	150 Call 0x1C5D788
	151 NotImplemented "Instruction LDRSW not yet implemented."
	152 Add X8, X8, X9
	153 Add X0, X8, 312
	154 Move X8, [X0]
	155 Move X1, [X0+8]
	156 Move X0, X20
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move TEMP, X0
	159 And TEMP, TEMP, 1
	160 Compare TEMP, 1
	161 JumpIfNotEqual {198}
	162 Move X8, [X20]
	163 Move X1, [X24]
	164 NotImplemented "Instruction LDRH not yet implemented."
	165 Compare X9, 0
	166 JumpIfEqual {173}
	167 Move X10, [X8+176]
	168 Add X10, X10, 8
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Subtract X9, X9, 1
	172 Add X10, X10, 16
	173 Move X0, X20
	174 Move W2, W31
	175 Call 0x1C5D788
	176 NotImplemented "Instruction LDRSW not yet implemented."
	177 Add X8, X8, X9
	178 Add X0, X8, 312
	179 Move X8, [X0]
	180 Move X1, [X0+8]
	181 Move X0, X20
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Move X22, X0
	184 Compare X0, 0
	185 JumpIfEqual {254}
	186 Move X8, [X22]
	187 Move X9, [X8+376]
	188 Move X1, [X8+384]
	189 Move X0, X22
	190 NotImplemented "Instruction BLR not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move W8, [X22+32]
	193 Move X21, X31
	194 Move W22, 9
	195 Move [X19+56], W8
	196 Compare X20, 0
	197 JumpIfNotEqual {202}
	198 Move X21, X31
	199 Move W22, 9
	200 Compare X20, 0
	201 JumpIfEqual {225}
	202 Move X10, 0x18B0000
	203 Move X8, [X20]
	204 Move X10, [X10+3584]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Move X1, [X10]
	207 Compare X9, 0
	208 JumpIfEqual {215}
	209 Move X10, [X8+176]
	210 Add X10, X10, 8
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Subtract X9, X9, 1
	214 Add X10, X10, 16
	215 Move X0, X20
	216 Move W2, W31
	217 Call 0x1C5D788
	218 NotImplemented "Instruction LDRSW not yet implemented."
	219 Add X8, X8, X9
	220 Add X0, X8, 312
	221 Move X8, [X0]
	222 Move X1, [X0+8]
	223 Move X0, X20
	224 NotImplemented "Instruction BLR not yet implemented."
	225 Compare X21, 0
	226 JumpIfNotEqual {257}
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Compare W22, 0
	229 JumpIfNotEqual {246}
	230 Move X0, [X19+64]
	231 Compare X0, 0
	232 JumpIfEqual {255}
	233 Move X8, 0x18DA000
	234 Move X8, [X8+3888]
	235 Move X20, [X31+48]
	236 Move X19, [X31+56]
	237 Move X22, [X31+32]
	238 Move X21, [X31+40]
	239 Move X24, [X31+16]
	240 Move X23, [X31+24]
	241 Move X2, [X8]
	242 Move W1, W31
	243 Move X30, [X31+64]
	244 Call List`1<Int32>.RemoveAt, X0, X1
	245 Return 
	246 Move X20, [X31+48]
	247 Move X19, [X31+56]
	248 Move X22, [X31+32]
	249 Move X21, [X31+40]
	250 Move X24, [X31+16]
	251 Move X23, [X31+24]
	252 Move X30, [X31+64]
	253 Return 
	254 Call 0x1C17F20
	255 Call 0x1C17F20
	256 Call 0x1C17F20
	257 Move X0, X21
	258 Call 0x1C17F18
	259 Move X22, X0
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X0, X22
	262 Call 0x3EB2AD0
	263 Move X21, [X0]
	264 Call 0x3EB2AE0
	265 Move W22, W31
	266 Compare X20, 0
	267 JumpIfNotEqual {202}
	268 Move X21, X31
	269 Move X22, X0
	270 Compare X20, 0
	271 JumpIfEqual {295}
	272 Move X10, 0x18B0000
	273 Move X8, [X20]
	274 Move X10, [X10+3584]
	275 NotImplemented "Instruction LDRH not yet implemented."
	276 Move X1, [X10]
	277 Compare X9, 0
	278 JumpIfEqual {285}
	279 Move X10, [X8+176]
	280 Add X10, X10, 8
	281 NotImplemented "Instruction LDUR not yet implemented."
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Subtract X9, X9, 1
	284 Add X10, X10, 16
	285 Move X0, X20
	286 Move W2, W31
	287 Call 0x1C5D788
	288 NotImplemented "Instruction LDRSW not yet implemented."
	289 Add X8, X8, X9
	290 Add X0, X8, 312
	291 Move X8, [X0]
	292 Move X1, [X0+8]
	293 Move X0, X20
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Compare X21, 0
	296 JumpIfNotEqual {299}
	297 Move X0, X22
	298 Call 0x1D2D690
	299 Move X0, X21
	300 Call 0x1C17F18
	301 Call 0x1991590

Method: System.Void OnBlur(UnityEngine.UIElements.VisualElement willFocus)

Disassembly:
	0x02844F38 ADD X31, X29, 0x0
	0x02844F3C LDP X20, X19, [X31 + 0x30]
	0x02844F40 LDP X22, X21, [X31 + 0x20]
	0x02844F44 LDP X24, X23, [X31 + 0x10]
	0x02844F48 LDP X29, X30, [X31], #0x40
	0x02844F4C RET
	0x02844F50 BL 0x3EB1B20
	0x02844F54 LDR W8, [X0 + 0x24]
	0x02844F58 CMP W8, 0x0
	0x02844F5C CSET W0, GT
	0x02844F60 RET
	0x02844F64 STP X30, X23, [X31 - 0x30]!
	0x02844F68 STP X22, X21, [X31 + 0x10]
	0x02844F6C STP X20, X19, [X31 + 0x20]
	0x02844F70 MOV X22, X1
	0x02844F74 MOV X1, X31
	0x02844F78 MOV W19, W4
	0x02844F7C MOV W20, W3
	0x02844F80 MOV X21, X2
	0x02844F84 MOV X23, X0
	0x02844F88 BL 0x33BDD8C
	0x02844F8C MUL W8, W19, W20
	0x02844F90 STP X22, X21, [X23 + 0x10]
	0x02844F94 LDP X20, X19, [X31 + 0x20]
	0x02844F98 LDP X22, X21, [X31 + 0x10]
	0x02844F9C STR W8, [X23 + 0x20]
	0x02844FA0 LDP X30, X23, [X31], #0x30
	0x02844FA4 RET
	0x02844FA8 STR X30, [X31 - 0x30]!
	0x02844FAC STP X22, X21, [X31 + 0x10]
	0x02844FB0 STP X20, X19, [X31 + 0x20]
	0x02844FB4 ADRP X19, 0x1B96000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1B97000
	006 Move W8, [X21+2724]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x18B7000
	014 Move X0, [X0+2136]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2724], W8
	018 Compare X20, 0
	019 JumpIfEqual {28}
	020 Move X0, [X19+16]
	021 Compare X0, 0
	022 JumpIfEqual {44}
	023 Move X8, [X0]
	024 Move X9, [X8+1896]
	025 Move X1, [X8+1904]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X19+64]
	029 Compare X8, 0
	030 JumpIfEqual {44}
	031 Move W9, [X8+28]
	032 Move TEMP, 0
	033 Not TEMP
	034 Move W10, TEMP
	035 Add W9, W9, 1
	036 Move [X8+24], W31
	037 Move [X8+28], W9
	038 Move [X19+56], W10
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return 
	044 Call 0x1C17F20

Method: System.Void HandleFocus(UnityEngine.UIElements.ReusableCollectionItem recycledItem, System.Int32 previousIndex)

Disassembly:
	0x02844FB8 LDRB W8, [X19 + 0xAAA]
	0x02844FBC MOV X20, X2
	0x02844FC0 MOV W21, W1
	0x02844FC4 MOV X22, X0
	0x02844FC8 TBNZ X8, 0x0, 0x2844FE0
	0x02844FCC ADRP X0, 0x18B3000
	0x02844FD0 LDR X0, [X0 + 0xC80]
	0x02844FD4 BL 0x1C16CF4
	0x02844FD8 MOVZ W8, 0x1
	0x02844FDC STRB W8, [X19 + 0xAAA]
	0x02844FE0 LDR W8, [X22 + 0x20]
	0x02844FE4 MOVZ W9, 0x4DD3
	0x02844FE8 MOVK W9, 0x10620000
	0x02844FEC LDR X19, [X22 + 0x18]
	0x02844FF0 MUL W8, W8, W21
	0x02844FF4 SMADDL X8, X8, X9, X31
	0x02844FF8 UBFM X9, X8, 0x20, 0x3F
	0x02844FFC UBFM X8, X8, 0x3F, 0x3F
	0x02845000 ADD W8, W8, W9, 0x6, ASR
	0x02845004 STR W8, [X22 + 0x24]
	0x02845008 STR X20, [X22 + 0x28]
	0x0284500C CBZ X19, 0x2845080
	0x02845010 ADRP X10, 0x18B2000
	0x02845014 LDR X8, [X19]
	0x02845018 LDR X10, [X10 + 0xC80]
	0x0284501C LDRH W9, [X8 + 0x12E]
	0x02845020 LDR X1, [X10]
	0x02845024 CBZ X9, 0x2845048
	0x02845028 LDR X10, [X8 + 0xB0]
	0x0284502C ADD X10, X10, 0x8
	0x02845030 LDUR X11, [X10 - 0x8]
	0x02845034 CMP X11, X1
	0x02845038 B.EQ 0x2845058
	0x0284503C SUBS X9, X9, 0x1
	0x02845040 ADD X10, X10, 0x10
	0x02845044 B.NE 0x2845030
	0x02845048 MOVZ W2, 0x3
	0x0284504C MOV X0, X19
	0x02845050 BL 0x1C5C788
	0x02845054 B 0x2845068
	0x02845058 LDR W9, [X10]
	0x0284505C ADD W9, W9, 0x3
	0x02845060 ADD X8, X8, W9, 0x4, SXTW
	0x02845064 ADD X0, X8, 0x138
	0x02845068 LDP X2, X1, [X0]
	0x0284506C MOV X0, X19
	0x02845070 LDP X20, X19, [X31 + 0x20]
	0x02845074 LDP X22, X21, [X31 + 0x10]
	0x02845078 LDR X30, [X31], #0x30
	0x0284507C BR X2
	0x02845080 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+56]
	004 Add W31, W8, 1
	005 Compare X1, 0
	006 JumpIfEqual {58}
	007 Move W9, [X1+32]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X8, [X1]
	011 Move X0, X1
	012 Move X9, [X8+376]
	013 Move X8, [X8+384]
	014 Move X1, X8
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Compare X0, 0
	017 JumpIfEqual {58}
	018 Move X1, [X19+64]
	019 Move X2, X31
	020 Call VisualElement.ElementAtTreePath, X0, X1
	021 Compare X0, 0
	022 JumpIfNotEqual {33}
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, [X19+16]
	025 Compare X0, 0
	026 JumpIfEqual {58}
	027 Move X8, [X0]
	028 Move X9, [X8+1896]
	029 Move X1, [X8+1904]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Compare X0, 0
	032 JumpIfEqual {58}
	033 Move X8, [X0]
	034 Move X2, [X8+584]
	035 Move X1, [X8+592]
	036 Move X8, [X1]
	037 Move X0, X1
	038 Move X9, [X8+376]
	039 Move X8, [X8+384]
	040 Move X1, X8
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X0, 0
	043 JumpIfEqual {58}
	044 Move X1, [X19+64]
	045 Move X2, X31
	046 Call VisualElement.ElementAtTreePath, X0, X1
	047 Compare X0, 0
	048 JumpIfEqual {55}
	049 Move X8, [X0]
	050 Move X2, [X8+600]
	051 Move X1, [X8+608]
	052 Move X30, [X31+16]
	053 Move X19, [X31+24]
	054 CallNoReturn X2
	055 Move X30, [X31+16]
	056 Move X19, [X31+24]
	057 Return 
	058 Call 0x1C17F20

Method: System.Void UpdateBackground()

Disassembly:
	0x02845084 STR D8, [X31 - 0x30]!
	0x02845088 STR X30, [X31 + 0x8]
	0x0284508C STP X22, X21, [X31 + 0x10]
	0x02845090 STP X20, X19, [X31 + 0x20]
	0x02845094 ADRP X21, 0x1B95000
	0x02845098 LDRB W8, [X21 + 0xAAB]
	0x0284509C MOV X19, X1
	0x028450A0 MOV X20, X0
	0x028450A4 TBNZ X8, 0x0, 0x28450C8
	0x028450A8 ADRP X0, 0x18B2000
	0x028450AC LDR X0, [X0 + 0xC80]
	0x028450B0 BL 0x1C16CF4
	0x028450B4 ADRP X0, 0x18D8000
	0x028450B8 LDR X0, [X0 + 0xF50]
	0x028450BC BL 0x1C16CF4
	0x028450C0 MOVZ W8, 0x1
	0x028450C4 STRB W8, [X21 + 0xAAB]
	0x028450C8 LDR W8, [X20 + 0x24]
	0x028450CC CBZ W8, 0x2845248
	0x028450D0 CBZ X19, 0x2845260
	0x028450D4 LDR W9, [X19 + 0x18]
	0x028450D8 SUB W8, W8, W9
	0x028450DC CMP W8, 0x0
	0x028450E0 STR W8, [X20 + 0x24]
	0x028450E4 B.GT 0x2845248
	0x028450E8 LDR X22, [X20 + 0x18]
	0x028450EC STR W31, [X20 + 0x24]
	0x028450F0 CBZ X22, 0x2845260
	0x028450F4 ADRP X10, 0x18B2000
	0x028450F8 LDR X8, [X22]
	0x028450FC LDR X21, [X20 + 0x10]
	0x02845100 LDR X10, [X10 + 0xC80]
	0x02845104 LDRH W9, [X8 + 0x12E]
	0x02845108 LDR X1, [X10]
	0x0284510C CBZ X9, 0x2845130
	0x02845110 LDR X10, [X8 + 0xB0]
	0x02845114 ADD X10, X10, 0x8
	0x02845118 LDUR X11, [X10 - 0x8]
	0x0284511C CMP X11, X1
	0x02845120 B.EQ 0x2845140
	0x02845124 SUBS X9, X9, 0x1
	0x02845128 ADD X10, X10, 0x10
	0x0284512C B.NE 0x2845118
	0x02845130 MOVZ W2, 0x2
	0x02845134 MOV X0, X22
	0x02845138 BL 0x1C5C788
	0x0284513C B 0x2845150
	0x02845140 LDR W9, [X10]
	0x02845144 ADD W9, W9, 0x2
	0x02845148 ADD X8, X8, W9, 0x4, SXTW
	0x0284514C ADD X0, X8, 0x138
	0x02845150 LDP X8, X1, [X0]
	0x02845154 MOV X0, X22
	0x02845158 BLR X8
	0x0284515C CBZ X21, 0x2845260
	0x02845160 ADRP X22, 0x18D8000
	0x02845164 LDR X8, [X21]
	0x02845168 LDR X22, [X22 + 0xF50]
	0x0284516C FADD S8, S0, S0
	0x02845170 LDRH W9, [X8 + 0x12E]
	0x02845174 LDR X1, [X22]
	0x02845178 CBZ X9, 0x284519C
	0x0284517C LDR X10, [X8 + 0xB0]
	0x02845180 ADD X10, X10, 0x8
	0x02845184 LDUR X11, [X10 - 0x8]
	0x02845188 CMP X11, X1
	0x0284518C B.EQ 0x28451AC
	0x02845190 SUBS X9, X9, 0x1
	0x02845194 ADD X10, X10, 0x10
	0x02845198 B.NE 0x2845184
	0x0284519C MOVZ W2, 0x3
	0x028451A0 MOV X0, X21
	0x028451A4 BL 0x1C5C788
	0x028451A8 B 0x28451BC
	0x028451AC LDR W9, [X10]
	0x028451B0 ADD W9, W9, 0x3
	0x028451B4 ADD X8, X8, W9, 0x4, SXTW
	0x028451B8 ADD X0, X8, 0x138
	0x028451BC LDP X8, X1, [X0]
	0x028451C0 MOV X0, X21
	0x028451C4 MOV V0.16B, V8.16B
	0x028451C8 BLR X8
	0x028451CC LDR X21, [X20 + 0x28]
	0x028451D0 CBZ X21, 0x2845248
	0x028451D4 LDR X20, [X20 + 0x10]
	0x028451D8 CBZ X20, 0x2845260
	0x028451DC LDR X8, [X20]
	0x028451E0 LDR X1, [X22]
	0x028451E4 LDRH W9, [X8 + 0x12E]
	0x028451E8 CBZ X9, 0x284520C
	0x028451EC LDR X10, [X8 + 0xB0]
	0x028451F0 ADD X10, X10, 0x8
	0x028451F4 LDUR X11, [X10 - 0x8]
	0x028451F8 CMP X11, X1
	0x028451FC B.EQ 0x284521C
	0x02845200 SUBS X9, X9, 0x1
	0x02845204 ADD X10, X10, 0x10
	0x02845208 B.NE 0x28451F4
	0x0284520C MOVZ W2, 0x2
	0x02845210 MOV X0, X20
	0x02845214 BL 0x1C5C788
	0x02845218 B 0x284522C
	0x0284521C LDR W9, [X10]
	0x02845220 ADD W9, W9, 0x2
	0x02845224 ADD X8, X8, W9, 0x4, SXTW
	0x02845228 ADD X0, X8, 0x138
	0x0284522C LDP X8, X1, [X0]
	0x02845230 MOV X0, X20
	0x02845234 BLR X8
	0x02845238 LDR X8, [X21 + 0x18]
	0x0284523C LDR X0, [X21 + 0x40]
	0x02845240 LDR X1, [X21 + 0x28]
	0x02845244 BLR X8
	0x02845248 MOV X0, X19
	0x0284524C LDP X20, X19, [X31 + 0x20]
	0x02845250 LDP X22, X21, [X31 + 0x10]
	0x02845254 LDR X30, [X31 + 0x8]
	0x02845258 LDR V8, [X31], #0x30
	0x0284525C RET
	0x02845260 BL 0x1C16F20
	0x02845264 RET
	0x02845268 LDR W8, [X0 + 0x24]
	0x0284526C CMP W8, 0x0
	0x02845270 CSET W0, GT
	0x02845274 RET
	0x02845278 STP X30, X23, [X31 - 0x30]!
	0x0284527C STP X22, X21, [X31 + 0x10]
	0x02845280 STP X20, X19, [X31 + 0x20]
	0x02845284 MOV X22, X1
	0x02845288 MOV X1, X31
	0x0284528C MOV W19, W4
	0x02845290 MOV W20, W3
	0x02845294 MOV X21, X2
	0x02845298 MOV X23, X0
	0x0284529C BL 0x33BDD8C
	0x028452A0 MUL W8, W19, W20
	0x028452A4 STP X22, X21, [X23 + 0x10]
	0x028452A8 LDP X20, X19, [X31 + 0x20]
	0x028452AC LDP X22, X21, [X31 + 0x10]
	0x028452B0 STR W8, [X23 + 0x20]
	0x028452B4 LDP X30, X23, [X31], #0x30
	0x028452B8 RET
	0x028452BC STR X30, [X31 - 0x30]!
	0x028452C0 STP X22, X21, [X31 + 0x10]
	0x028452C4 STP X20, X19, [X31 + 0x20]
	0x028452C8 ADRP X19, 0x1B95000
	0x028452CC LDRB W8, [X19 + 0xAAC]
	0x028452D0 MOV X20, X2
	0x028452D4 MOV W21, W1
	0x028452D8 MOV X22, X0
	0x028452DC TBNZ X8, 0x0, 0x28452F4
	0x028452E0 ADRP X0, 0x18B2000
	0x028452E4 LDR X0, [X0 + 0xC80]
	0x028452E8 BL 0x1C16CF4
	0x028452EC MOVZ W8, 0x1
	0x028452F0 STRB W8, [X19 + 0xAAC]
	0x028452F4 LDR W8, [X22 + 0x20]
	0x028452F8 MOVZ W9, 0x4DD3
	0x028452FC MOVK W9, 0x10620000
	0x02845300 LDR X19, [X22 + 0x18]
	0x02845304 MUL W8, W8, W21
	0x02845308 SMADDL X8, X8, X9, X31
	0x0284530C UBFM X9, X8, 0x20, 0x3F
	0x02845310 UBFM X8, X8, 0x3F, 0x3F
	0x02845314 ADD W8, W8, W9, 0x6, ASR
	0x02845318 STR W8, [X22 + 0x24]
	0x0284531C STR X20, [X22 + 0x28]
	0x02845320 CBZ X19, 0x2845394
	0x02845324 ADRP X10, 0x18B2000
	0x02845328 LDR X8, [X19]
	0x0284532C LDR X10, [X10 + 0xC80]
	0x02845330 LDRH W9, [X8 + 0x12E]
	0x02845334 LDR X1, [X10]
	0x02845338 CBZ X9, 0x284535C
	0x0284533C LDR X10, [X8 + 0xB0]
	0x02845340 ADD X10, X10, 0x8
	0x02845344 LDUR X11, [X10 - 0x8]
	0x02845348 CMP X11, X1
	0x0284534C B.EQ 0x284536C
	0x02845350 SUBS X9, X9, 0x1
	0x02845354 ADD X10, X10, 0x10
	0x02845358 B.NE 0x2845344
	0x0284535C MOVZ W2, 0x3
	0x02845360 MOV X0, X19
	0x02845364 BL 0x1C5C788
	0x02845368 B 0x284537C
	0x0284536C LDR W9, [X10]
	0x02845370 ADD W9, W9, 0x3
	0x02845374 ADD X8, X8, W9, 0x4, SXTW
	0x02845378 ADD X0, X8, 0x138
	0x0284537C LDP X2, X1, [X0]
	0x02845380 MOV X0, X19
	0x02845384 LDP X20, X19, [X31 + 0x20]
	0x02845388 LDP X22, X21, [X31 + 0x10]
	0x0284538C LDR X30, [X31], #0x30
	0x02845390 BR X2
	0x02845394 BL 0x1C16F20
	0x02845398 STR D8, [X31 - 0x30]!
	0x0284539C STR X30, [X31 + 0x8]
	0x028453A0 STP X22, X21, [X31 + 0x10]
	0x028453A4 STP X20, X19, [X31 + 0x20]
	0x028453A8 ADRP X21, 0x1B95000
	0x028453AC LDRB W8, [X21 + 0xAAD]
	0x028453B0 MOV X19, X1
	0x028453B4 MOV X20, X0
	0x028453B8 TBNZ X8, 0x0, 0x28453DC
	0x028453BC ADRP X0, 0x18B2000
	0x028453C0 LDR X0, [X0 + 0xC80]
	0x028453C4 BL 0x1C16CF4
	0x028453C8 ADRP X0, 0x18D8000
	0x028453CC LDR X0, [X0 + 0xF50]
	0x028453D0 BL 0x1C16CF4
	0x028453D4 MOVZ W8, 0x1
	0x028453D8 STRB W8, [X21 + 0xAAD]
	0x028453DC LDR W8, [X20 + 0x24]
	0x028453E0 CBZ W8, 0x284555C
	0x028453E4 CBZ X19, 0x2845574
	0x028453E8 LDR W9, [X19 + 0x18]
	0x028453EC SUB W8, W8, W9
	0x028453F0 CMP W8, 0x0
	0x028453F4 STR W8, [X20 + 0x24]
	0x028453F8 B.GT 0x284555C
	0x028453FC LDR X22, [X20 + 0x18]
	0x02845400 STR W31, [X20 + 0x24]
	0x02845404 CBZ X22, 0x2845574
	0x02845408 ADRP X10, 0x18B2000
	0x0284540C LDR X8, [X22]
	0x02845410 LDR X21, [X20 + 0x10]
	0x02845414 LDR X10, [X10 + 0xC80]
	0x02845418 LDRH W9, [X8 + 0x12E]
	0x0284541C LDR X1, [X10]
	0x02845420 CBZ X9, 0x2845444
	0x02845424 LDR X10, [X8 + 0xB0]
	0x02845428 ADD X10, X10, 0x8
	0x0284542C LDUR X11, [X10 - 0x8]
	0x02845430 CMP X11, X1
	0x02845434 B.EQ 0x2845454
	0x02845438 SUBS X9, X9, 0x1
	0x0284543C ADD X10, X10, 0x10
	0x02845440 B.NE 0x284542C
	0x02845444 MOVZ W2, 0x2
	0x02845448 MOV X0, X22
	0x0284544C BL 0x1C5C788
	0x02845450 B 0x2845464
	0x02845454 LDR W9, [X10]
	0x02845458 ADD W9, W9, 0x2
	0x0284545C ADD X8, X8, W9, 0x4, SXTW
	0x02845460 ADD X0, X8, 0x138
	0x02845464 LDP X8, X1, [X0]
	0x02845468 MOV X0, X22
	0x0284546C BLR X8
	0x02845470 CBZ X21, 0x2845574
	0x02845474 ADRP X22, 0x18D8000
	0x02845478 LDR X8, [X21]
	0x0284547C LDR X22, [X22 + 0xF50]
	0x02845480 FADD S8, S0, S0
	0x02845484 LDRH W9, [X8 + 0x12E]
	0x02845488 LDR X1, [X22]
	0x0284548C CBZ X9, 0x28454B0
	0x02845490 LDR X10, [X8 + 0xB0]
	0x02845494 ADD X10, X10, 0x8
	0x02845498 LDUR X11, [X10 - 0x8]
	0x0284549C CMP X11, X1
	0x028454A0 B.EQ 0x28454C0
	0x028454A4 SUBS X9, X9, 0x1
	0x028454A8 ADD X10, X10, 0x10
	0x028454AC B.NE 0x2845498
	0x028454B0 MOVZ W2, 0x3
	0x028454B4 MOV X0, X21
	0x028454B8 BL 0x1C5C788
	0x028454BC B 0x28454D0
	0x028454C0 LDR W9, [X10]
	0x028454C4 ADD W9, W9, 0x3
	0x028454C8 ADD X8, X8, W9, 0x4, SXTW
	0x028454CC ADD X0, X8, 0x138
	0x028454D0 LDP X8, X1, [X0]
	0x028454D4 MOV X0, X21
	0x028454D8 MOV V0.16B, V8.16B
	0x028454DC BLR X8
	0x028454E0 LDR X21, [X20 + 0x28]
	0x028454E4 CBZ X21, 0x284555C
	0x028454E8 LDR X20, [X20 + 0x10]
	0x028454EC CBZ X20, 0x2845574
	0x028454F0 LDR X8, [X20]
	0x028454F4 LDR X1, [X22]
	0x028454F8 LDRH W9, [X8 + 0x12E]
	0x028454FC CBZ X9, 0x2845520
	0x02845500 LDR X10, [X8 + 0xB0]
	0x02845504 ADD X10, X10, 0x8
	0x02845508 LDUR X11, [X10 - 0x8]
	0x0284550C CMP X11, X1
	0x02845510 B.EQ 0x2845530
	0x02845514 SUBS X9, X9, 0x1
	0x02845518 ADD X10, X10, 0x10
	0x0284551C B.NE 0x2845508
	0x02845520 MOVZ W2, 0x2
	0x02845524 MOV X0, X20
	0x02845528 BL 0x1C5C788
	0x0284552C B 0x2845540
	0x02845530 LDR W9, [X10]
	0x02845534 ADD W9, W9, 0x2
	0x02845538 ADD X8, X8, W9, 0x4, SXTW
	0x0284553C ADD X0, X8, 0x138
	0x02845540 LDP X8, X1, [X0]
	0x02845544 MOV X0, X20
	0x02845548 BLR X8
	0x0284554C LDR X8, [X21 + 0x18]
	0x02845550 LDR X0, [X21 + 0x40]
	0x02845554 LDR X1, [X21 + 0x28]
	0x02845558 BLR X8
	0x0284555C MOV X0, X19
	0x02845560 LDP X20, X19, [X31 + 0x20]
	0x02845564 LDP X22, X21, [X31 + 0x10]
	0x02845568 LDR X30, [X31 + 0x8]
	0x0284556C LDR V8, [X31], #0x30
	0x02845570 RET
	0x02845574 BL 0x1C16F20
	0x02845578 RET
	0x0284557C LDR W8, [X0 + 0x24]
	0x02845580 CMP W8, 0x0
	0x02845584 CSET W0, GT
	0x02845588 RET
	0x0284558C STP X30, X23, [X31 - 0x30]!
	0x02845590 STP X22, X21, [X31 + 0x10]
	0x02845594 STP X20, X19, [X31 + 0x20]
	0x02845598 MOV X22, X1
	0x0284559C MOV X1, X31
	0x028455A0 MOV W19, W4
	0x028455A4 MOV W20, W3
	0x028455A8 MOV X21, X2
	0x028455AC MOV X23, X0
	0x028455B0 BL 0x33BDD8C
	0x028455B4 MUL W8, W19, W20
	0x028455B8 STP X22, X21, [X23 + 0x10]
	0x028455BC LDP X20, X19, [X31 + 0x20]
	0x028455C0 LDP X22, X21, [X31 + 0x10]
	0x028455C4 STR W8, [X23 + 0x20]
	0x028455C8 LDP X30, X23, [X31], #0x30
	0x028455CC RET
	0x028455D0 STR X30, [X31 - 0x30]!
	0x028455D4 STP X22, X21, [X31 + 0x10]
	0x028455D8 STP X20, X19, [X31 + 0x20]
	0x028455DC ADRP X19, 0x1B95000
	0x028455E0 LDRB W8, [X19 + 0xAAE]
	0x028455E4 MOV X20, X2
	0x028455E8 MOV W21, W1
	0x028455EC MOV X22, X0
	0x028455F0 TBNZ X8, 0x0, 0x2845608

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x1B96000
	015 Move W8, [X21+2725]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x18D9000
	023 Move X0, [X0+3864]
	024 Call 0x1C17CF4
	025 Move X0, 0x18D8000
	026 Move X0, [X0+288]
	027 Call 0x1C17CF4
	028 Move X0, 0x18D8000
	029 Move X0, [X0+296]
	030 Call 0x1C17CF4
	031 Move X0, 0x18B0000
	032 Move X0, [X0+440]
	033 Call 0x1C17CF4
	034 Move X0, 0x18D7000
	035 Move X0, [X0+2200]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2725], W8
	039 Move [X31+24], X31
	040 Move X0, [X19+32]
	041 Compare X0, 0
	042 JumpIfEqual {383}
	043 Move X1, X31
	044 Call BaseVerticalCollectionView.get_showAlternatingRowBackgrounds, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X19+16]
	047 Compare X8, 0
	048 JumpIfEqual {383}
	049 Move X0, [X8+1048]
	050 Compare X0, 0
	051 JumpIfEqual {383}
	052 Move X1, X31
	053 Call VisualElement.get_resolvedStyle, X0
	054 Compare X0, 0
	055 JumpIfEqual {383}
	056 Move X10, 0x18D8000
	057 Move X8, [X0]
	058 Move X10, [X10+288]
	059 Move X21, X0
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Move X1, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move W2, 19
	071 Move X0, X21
	072 Call 0x1C5D788
	073 Move W9, [X10]
	074 Add W9, W9, 19
	075 Add X8, X8, W9
	076 Add X0, X8, 312
	077 Move X8, [X0]
	078 Move X1, [X0+8]
	079 Move X0, X21
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Compare X19, 0
	082 JumpIfEqual {383}
	083 Move X8, [X19]
	084 Move X0, X19
	085 Move V8, V0
	086 Move X9, [X8+520]
	087 Move X1, [X8+528]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Subtract S9, S8, S0
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move X8, [X20+32]
	092 Move X0, [X19+40]
	093 Move X1, [X19+72]
	094 Move X8, [X8+192]
	095 Move X8, [X8+272]
	096 Move X8, [X8+32]
	097 Move X8, [X8+192]
	098 Move X2, [X8+48]
	099 Call 0x21C8E88, X0, X1
	100 Compare X0, 0
	101 JumpIfEqual {152}
	102 Move X21, [X19+88]
	103 Compare X21, 0
	104 JumpIfNotEqual {172}
	105 Move X8, 0x18D7000
	106 Move X8, [X8+2200]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X1, X31
	110 Move X21, X0
	111 Call VisualElement..ctor, X0
	112 Compare X21, 0
	113 JumpIfEqual {383}
	114 Move X0, X21
	115 Move X1, X31
	116 Call VisualElement.get_classList, X0
	117 Move X23, 0x18D9000
	118 Move X23, [X23+3864]
	119 Move X22, X0
	120 Move X8, [X23]
	121 Move W9, [X8+224]
	122 Compare W9, 0
	123 JumpIfNotEqual {126}
	124 Move X0, X8
	125 Call 0x1C17DFC
	126 Compare X22, 0
	127 JumpIfEqual {383}
	128 Move X8, [X23]
	129 Move X10, 0x18B0000
	130 Move X9, [X8+184]
	131 Move X10, [X10+440]
	132 Move W11, [X22+28]
	133 Move X8, [X22+16]
	134 Move X1, [X9+112]
	135 Move X9, [X10]
	136 Add W10, W11, 1
	137 Move [X22+28], W10
	138 Compare X8, 0
	139 JumpIfEqual {383}
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Move W11, [X8+24]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Add W9, W10, 1
	144 Add X8, X8, X10
	145 Move [X22+24], W9
	146 Move [X8+32], X1
	147 Move X0, [X19+88]
	148 Compare X0, 0
	149 JumpIfEqual {152}
	150 Move X1, X31
	151 Call VisualElement.RemoveFromHierarchy, X0
	152 Move X20, [X31+96]
	153 Move X19, [X31+104]
	154 Move X22, [X31+80]
	155 Move X21, [X31+88]
	156 Move X24, [X31+64]
	157 Move X23, [X31+72]
	158 Move X26, [X31+48]
	159 Move X25, [X31+56]
	160 Move X28, [X31+32]
	161 Move X27, [X31+40]
	162 Move X30, [X31+16]
	163 Move D9, [X31+112]
	164 Move D8, [X31+120]
	165 Return 
	166 Move X8, [X9+32]
	167 Move X0, X22
	168 Move X8, [X8+192]
	169 Move X2, [X8+112]
	170 Call List`1<Object>.AddWithResize, X0, X1
	171 Move [X19+88], X21
	172 Compare X21, 0
	173 JumpIfEqual {383}
	174 Move X0, X21
	175 Move X1, X31
	176 Call VisualElement.get_parent, X0
	177 Compare X0, 0
	178 JumpIfNotEqual {188}
	179 Move X8, [X19+16]
	180 Compare X8, 0
	181 JumpIfEqual {383}
	182 Move X0, [X8+1048]
	183 Compare X0, 0
	184 JumpIfEqual {383}
	185 Move X1, [X19+88]
	186 Move X2, X31
	187 Call VisualElement.Add, X0, X1
	188 Move X8, [X19]
	189 Move TEMP, 0
	190 Not TEMP
	191 Move W1, TEMP
	192 Move X0, X19
	193 Move X9, [X8+504]
	194 Move X2, [X8+512]
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move X21, 0x1B94000
	197 Move W8, [X21+2595]
	198 Move V8, V0
	199 Compare W8, 0
	200 JumpIfNotEqual {206}
	201 Move X0, 0x18AF000
	202 Move X0, [X0+1448]
	203 Call 0x1C17CF4
	204 Move W8, 1
	205 Move [X21+2595], W8
	206 Move X8, 0x18AF000
	207 Move X8, [X8+1448]
	208 NotImplemented "Instruction FDIV not yet implemented."
	209 Move X0, [X8]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move W8, 0x7F800000
	215 Move X0, [X19+88]
	216 NotImplemented "Instruction FRINTM not yet implemented."
	217 Move S1, W8
	218 NotImplemented "Instruction FCVTMS not yet implemented."
	219 NotImplemented "Instruction FCMP not yet implemented."
	220 Or W8, W31, 0x80000001
	221 NotImplemented "Instruction CSINC not yet implemented."
	222 Compare X0, 0
	223 JumpIfEqual {383}
	224 Move X1, X31
	225 Call VisualElement.get_childCount, X0
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X0, [X19+88]
	228 Compare X0, 0
	229 JumpIfEqual {383}
	230 Move X1, X31
	231 Call VisualElement.get_childCount, X0
	232 Subtract W24, W21, W0
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X26, 0x18D7000
	235 Move X27, 0x18D8000
	236 Move X26, [X26+2200]
	237 Move X27, [X27+296]
	238 Move W25, W31
	239 Move X0, [X26]
	240 Call 0x1C17F10
	241 Move X1, X31
	242 Move X21, X0
	243 Call VisualElement..ctor, X0
	244 Compare X21, 0
	245 JumpIfEqual {383}
	246 Move X0, X21
	247 Move X1, X31
	248 Call VisualElement.get_style, X0
	249 Move X22, X0
	250 Move S0, W31
	251 Move X0, X31
	252 Call StyleFloat.op_Implicit, V0
	253 Compare X22, 0
	254 JumpIfEqual {383}
	255 Move X8, [X22]
	256 Move X1, [X27]
	257 Move X23, X0
	258 NotImplemented "Instruction LDRH not yet implemented."
	259 Compare X9, 0
	260 JumpIfEqual {267}
	261 Move X10, [X8+176]
	262 Add X10, X10, 8
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Subtract X9, X9, 1
	266 Add X10, X10, 16
	267 Move W2, 22
	268 Move X0, X22
	269 Call 0x1C5D788
	270 Move W9, [X10]
	271 Add W9, W9, 22
	272 Add X8, X8, W9
	273 Add X0, X8, 312
	274 Move X8, [X0]
	275 Move X2, [X0+8]
	276 Move X0, X22
	277 Move X1, X23
	278 NotImplemented "Instruction BLR not yet implemented."
	279 Move X0, [X19+88]
	280 Compare X0, 0
	281 JumpIfEqual {383}
	282 Move X1, X21
	283 Move X2, X31
	284 Call VisualElement.Add, X0, X1
	285 Add W25, W25, 1
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X8, [X20+32]
	288 Move X0, [X19+40]
	289 Move X1, [X19+72]
	290 Move X8, [X8+192]
	291 Move X8, [X8+272]
	292 Move X8, [X8+32]
	293 Move X8, [X8+192]
	294 Move X2, [X8+48]
	295 Call 0x21C8E88, X0, X1
	296 Compare X0, 0
	297 JumpIfEqual {299}
	298 Move W26, [X0+32]
	299 Move TEMP, 0
	300 Not TEMP
	301 Move W26, TEMP
	302 Move X8, [X19+88]
	303 Compare X8, 0
	304 JumpIfEqual {383}
	305 Move X8, [X8+888]
	306 Add X0, X31, 24
	307 Move X1, X31
	308 Move [X31+24], X8
	309 Call Hierarchy.get_childCount, X0
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Move X27, 0x18D8000
	312 Move X28, 0x18D9000
	313 Move X27, [X27+296]
	314 Move X28, [X28+3864]
	315 Move W20, W0
	316 Move W21, W31
	317 Move X8, [X19+88]
	318 Compare X8, 0
	319 JumpIfEqual {383}
	320 Move X8, [X8+888]
	321 Add X0, X31, 24
	322 Move W1, W21
	323 Move X2, X31
	324 Move [X31+24], X8
	325 Call Hierarchy.get_Item, X0, X1
	326 Compare X0, 0
	327 JumpIfEqual {383}
	328 Move X1, X31
	329 Move X22, X0
	330 Call VisualElement.get_style, X0
	331 Move X23, X0
	332 Move V0, V8
	333 Move X0, X31
	334 Call StyleLength.op_Implicit, V0
	335 Compare X23, 0
	336 JumpIfEqual {383}
	337 Move X8, [X23]
	338 Move X25, X1
	339 Move X1, [X27]
	340 Move X24, X0
	341 NotImplemented "Instruction LDRH not yet implemented."
	342 Compare X9, 0
	343 JumpIfEqual {350}
	344 Move X10, [X8+176]
	345 Add X10, X10, 8
	346 NotImplemented "Instruction LDUR not yet implemented."
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Subtract X9, X9, 1
	349 Add X10, X10, 16
	350 Move W2, 24
	351 Move X0, X23
	352 Call 0x1C5D788
	353 Move W9, [X10]
	354 Add W9, W9, 24
	355 Add X8, X8, W9
	356 Add X0, X8, 312
	357 Move X8, [X0]
	358 Move X3, [X0+8]
	359 And X2, X25, 0
	360 Move X0, X23
	361 Move X1, X24
	362 NotImplemented "Instruction BLR not yet implemented."
	363 Move X0, [X28]
	364 Move W8, [X0+224]
	365 Compare W8, 0
	366 JumpIfNotEqual {369}
	367 Call 0x1C17DFC
	368 Move X0, [X28]
	369 Move X8, [X0+184]
	370 Add W26, W26, 1
	371 NotImplemented "Instruction CMP not yet implemented."
	372 NotImplemented "Instruction CINC not yet implemented."
	373 Move X1, [X8+96]
	374 And W8, W9, 0xFFFFFFFE
	375 Subtract W8, W26, W8
	376 NotImplemented "Instruction CMP not yet implemented."
	377 NotImplemented "Instruction CSET not yet implemented."
	378 Move X0, X22
	379 Move X3, X31
	380 Call VisualElement.EnableInClassList, X0, X1, X2
	381 Add W21, W21, 1
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Call 0x1C17F20

Method: System.Void StartDragItem(UnityEngine.UIElements.ReusableCollectionItem item)

Disassembly:
	0x028455F4 ADRP X0, 0x18B2000
	0x028455F8 LDR X0, [X0 + 0xC80]
	0x028455FC BL 0x1C16CF4
	0x02845600 MOVZ W8, 0x1
	0x02845604 STRB W8, [X19 + 0xAAE]
	0x02845608 LDR W8, [X22 + 0x20]
	0x0284560C MOVZ W9, 0x4DD3
	0x02845610 MOVK W9, 0x10620000
	0x02845614 LDR X19, [X22 + 0x18]
	0x02845618 MUL W8, W8, W21
	0x0284561C SMADDL X8, X8, X9, X31
	0x02845620 UBFM X9, X8, 0x20, 0x3F
	0x02845624 UBFM X8, X8, 0x3F, 0x3F
	0x02845628 ADD W8, W8, W9, 0x6, ASR
	0x0284562C STR W8, [X22 + 0x24]
	0x02845630 STR X20, [X22 + 0x28]
	0x02845634 CBZ X19, 0x28456A8
	0x02845638 ADRP X10, 0x18B2000
	0x0284563C LDR X8, [X19]
	0x02845640 LDR X10, [X10 + 0xC80]
	0x02845644 LDRH W9, [X8 + 0x12E]
	0x02845648 LDR X1, [X10]
	0x0284564C CBZ X9, 0x2845670
	0x02845650 LDR X10, [X8 + 0xB0]
	0x02845654 ADD X10, X10, 0x8
	0x02845658 LDUR X11, [X10 - 0x8]
	0x0284565C CMP X11, X1
	0x02845660 B.EQ 0x2845680
	0x02845664 SUBS X9, X9, 0x1
	0x02845668 ADD X10, X10, 0x10
	0x0284566C B.NE 0x2845658
	0x02845670 MOVZ W2, 0x3
	0x02845674 MOV X0, X19
	0x02845678 BL 0x1C5C788
	0x0284567C B 0x2845690
	0x02845680 LDR W9, [X10]
	0x02845684 ADD W9, W9, 0x3
	0x02845688 ADD X8, X8, W9, 0x4, SXTW
	0x0284568C ADD X0, X8, 0x138
	0x02845690 LDP X2, X1, [X0]
	0x02845694 MOV X0, X19
	0x02845698 LDP X20, X19, [X31 + 0x20]
	0x0284569C LDP X22, X21, [X31 + 0x10]
	0x028456A0 LDR X30, [X31], #0x30
	0x028456A4 BR X2
	0x028456A8 BL 0x1C16F20
	0x028456AC STR D8, [X31 - 0x30]!
	0x028456B0 STR X30, [X31 + 0x8]
	0x028456B4 STP X22, X21, [X31 + 0x10]
	0x028456B8 STP X20, X19, [X31 + 0x20]
	0x028456BC ADRP X21, 0x1B95000
	0x028456C0 LDRB W8, [X21 + 0xAAF]
	0x028456C4 MOV X19, X1
	0x028456C8 MOV X20, X0
	0x028456CC TBNZ X8, 0x0, 0x28456F0
	0x028456D0 ADRP X0, 0x18B2000
	0x028456D4 LDR X0, [X0 + 0xC80]
	0x028456D8 BL 0x1C16CF4
	0x028456DC ADRP X0, 0x18D8000
	0x028456E0 LDR X0, [X0 + 0xF50]
	0x028456E4 BL 0x1C16CF4
	0x028456E8 MOVZ W8, 0x1
	0x028456EC STRB W8, [X21 + 0xAAF]
	0x028456F0 LDR W8, [X20 + 0x24]
	0x028456F4 CBZ W8, 0x2845870
	0x028456F8 CBZ X19, 0x2845888
	0x028456FC LDR W9, [X19 + 0x18]
	0x02845700 SUB W8, W8, W9
	0x02845704 CMP W8, 0x0
	0x02845708 STR W8, [X20 + 0x24]
	0x0284570C B.GT 0x2845870
	0x02845710 LDR X22, [X20 + 0x18]
	0x02845714 STR W31, [X20 + 0x24]
	0x02845718 CBZ X22, 0x2845888
	0x0284571C ADRP X10, 0x18B2000
	0x02845720 LDR X8, [X22]
	0x02845724 LDR X21, [X20 + 0x10]
	0x02845728 LDR X10, [X10 + 0xC80]
	0x0284572C LDRH W9, [X8 + 0x12E]
	0x02845730 LDR X1, [X10]
	0x02845734 CBZ X9, 0x2845758
	0x02845738 LDR X10, [X8 + 0xB0]
	0x0284573C ADD X10, X10, 0x8
	0x02845740 LDUR X11, [X10 - 0x8]
	0x02845744 CMP X11, X1
	0x02845748 B.EQ 0x2845768
	0x0284574C SUBS X9, X9, 0x1
	0x02845750 ADD X10, X10, 0x10
	0x02845754 B.NE 0x2845740
	0x02845758 MOVZ W2, 0x2
	0x0284575C MOV X0, X22
	0x02845760 BL 0x1C5C788
	0x02845764 B 0x2845778
	0x02845768 LDR W9, [X10]
	0x0284576C ADD W9, W9, 0x2
	0x02845770 ADD X8, X8, W9, 0x4, SXTW
	0x02845774 ADD X0, X8, 0x138
	0x02845778 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+32]
	008 Move X21, X1
	009 Move X19, X2
	010 Move X20, X0
	011 Move X8, [X8+192]
	012 Move X1, [X8+16]
	013 Move W8, [X1+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {21}
	018 Move X0, X1
	019 Call 0x1C5D684
	020 Move X1, X0
	021 Move X0, X21
	022 Call 0x1C17E00
	023 Move X8, [X19+32]
	024 Move X23, X0
	025 Move X8, [X8+192]
	026 Move X22, [X8+16]
	027 Move W8, [X22+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move X0, X22
	033 Call 0x1C5D684
	034 Move X22, X0
	035 Compare X23, 0
	036 JumpIfEqual {45}
	037 Move X0, X23
	038 Move X1, X22
	039 Call 0x1C17E00
	040 Compare X0, 0
	041 JumpIfNotEqual {46}
	042 Move X0, X23
	043 Move X1, X22
	044 Call 0x1C181E0
	045 Move X0, X31
	046 Move [X20+48], X0
	047 Move X8, [X19+32]
	048 Move X8, [X8+192]
	049 Move X1, [X8+16]
	050 Move W8, [X1+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {58}
	055 Move X0, X1
	056 Call 0x1C5D684
	057 Move X1, X0
	058 Move X0, X21
	059 Call 0x1C17E00
	060 Move X8, [X19+32]
	061 Move X22, X0
	062 Move X8, [X8+192]
	063 Move X21, [X8+16]
	064 Move W8, [X21+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {72}
	069 Move X0, X21
	070 Call 0x1C5D684
	071 Move X21, X0
	072 Compare X22, 0
	073 JumpIfEqual {79}
	074 Move X0, X22
	075 Move X1, X21
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {122}
	079 Move X0, [X20+40]
	080 Compare X0, 0
	081 JumpIfEqual {121}
	082 Move X8, [X19+32]
	083 Move X1, [X20+48]
	084 Move X8, [X8+192]
	085 Move X2, [X8+280]
	086 Call List`1<Object>.IndexOf, X0, X1
	087 Move X8, [X20+40]
	088 Compare X8, 0
	089 JumpIfEqual {121}
	090 Move X9, [X19+32]
	091 Move W21, W0
	092 Move X0, X8
	093 Move W1, W21
	094 Move X9, [X9+192]
	095 Move X2, [X9+288]
	096 Call List`1<Object>.RemoveAt, X0, X1
	097 Move X8, [X20]
	098 Move X0, X20
	099 Move W1, W21
	100 Move W2, W21
	101 Move X9, [X8+664]
	102 Move X3, [X8+672]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move X8, [X20+48]
	105 Compare X8, 0
	106 JumpIfEqual {121}
	107 Move X9, [X19+32]
	108 Move X1, X0
	109 Move W2, [X8+32]
	110 Move X0, X20
	111 Move X9, [X9+192]
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X3, [X9+216]
	117 Move X30, [X31+48]
	118 Move X23, [X31+56]
	119 Call 0x28445B8, X0, X1, X2
	120 Return 
	121 Call 0x1C17F20
	122 Move X0, X22
	123 Move X1, X21
	124 Call 0x1C181E0

Method: System.Void EndDrag(System.Int32 dropIndex)

Disassembly:
	0x0284577C MOV X0, X22
	0x02845780 BLR X8
	0x02845784 CBZ X21, 0x2845888
	0x02845788 ADRP X22, 0x18D8000
	0x0284578C LDR X8, [X21]
	0x02845790 LDR X22, [X22 + 0xF50]
	0x02845794 FADD S8, S0, S0
	0x02845798 LDRH W9, [X8 + 0x12E]
	0x0284579C LDR X1, [X22]
	0x028457A0 CBZ X9, 0x28457C4
	0x028457A4 LDR X10, [X8 + 0xB0]
	0x028457A8 ADD X10, X10, 0x8
	0x028457AC LDUR X11, [X10 - 0x8]
	0x028457B0 CMP X11, X1
	0x028457B4 B.EQ 0x28457D4
	0x028457B8 SUBS X9, X9, 0x1
	0x028457BC ADD X10, X10, 0x10
	0x028457C0 B.NE 0x28457AC
	0x028457C4 MOVZ W2, 0x3
	0x028457C8 MOV X0, X21
	0x028457CC BL 0x1C5C788
	0x028457D0 B 0x28457E4
	0x028457D4 LDR W9, [X10]
	0x028457D8 ADD W9, W9, 0x3
	0x028457DC ADD X8, X8, W9, 0x4, SXTW
	0x028457E0 ADD X0, X8, 0x138
	0x028457E4 LDP X8, X1, [X0]
	0x028457E8 MOV X0, X21
	0x028457EC MOV V0.16B, V8.16B
	0x028457F0 BLR X8
	0x028457F4 LDR X21, [X20 + 0x28]
	0x028457F8 CBZ X21, 0x2845870
	0x028457FC LDR X20, [X20 + 0x10]
	0x02845800 CBZ X20, 0x2845888
	0x02845804 LDR X8, [X20]
	0x02845808 LDR X1, [X22]
	0x0284580C LDRH W9, [X8 + 0x12E]
	0x02845810 CBZ X9, 0x2845834
	0x02845814 LDR X10, [X8 + 0xB0]
	0x02845818 ADD X10, X10, 0x8
	0x0284581C LDUR X11, [X10 - 0x8]
	0x02845820 CMP X11, X1
	0x02845824 B.EQ 0x2845844
	0x02845828 SUBS X9, X9, 0x1
	0x0284582C ADD X10, X10, 0x10
	0x02845830 B.NE 0x284581C
	0x02845834 MOVZ W2, 0x2
	0x02845838 MOV X0, X20
	0x0284583C BL 0x1C5C788
	0x02845840 B 0x2845854
	0x02845844 LDR W9, [X10]
	0x02845848 ADD W9, W9, 0x2
	0x0284584C ADD X8, X8, W9, 0x4, SXTW
	0x02845850 ADD X0, X8, 0x138
	0x02845854 LDP X8, X1, [X0]
	0x02845858 MOV X0, X20
	0x0284585C BLR X8
	0x02845860 LDR X8, [X21 + 0x18]
	0x02845864 LDR X0, [X21 + 0x40]
	0x02845868 LDR X1, [X21 + 0x28]
	0x0284586C BLR X8
	0x02845870 MOV X0, X19
	0x02845874 LDP X20, X19, [X31 + 0x20]
	0x02845878 LDP X22, X21, [X31 + 0x10]
	0x0284587C LDR X30, [X31 + 0x8]
	0x02845880 LDR V8, [X31], #0x30
	0x02845884 RET
	0x02845888 BL 0x1C16F20
	0x0284588C RET
	0x02845890 LDRB W0, [X0 + 0x10]
	0x02845894 RET
	0x02845898 AND W8, W1, 0x1
	0x0284589C STRB W8, [X0 + 0x10]
	0x028458A0 RET
	0x028458A4 LDP S1, S0, [X0 + 0x14]
	0x028458A8 FMUL S0, S0, S1
	0x028458AC RET
	0x028458B0 LDR V1, [X0 + 0x14]
	0x028458B4 FDIV S0, S0, S1
	0x028458B8 STR S0, [X0 + 0x18]
	0x028458BC RET
	0x028458C0 LDRB W0, [X0 + 0x1C]
	0x028458C4 RET
	0x028458C8 STP X30, X21, [X31 - 0x20]!
	0x028458CC STP X20, X19, [X31 + 0x10]
	0x028458D0 ADRP X21, 0x1B95000
	0x028458D4 LDRB W8, [X21 + 0xAB0]
	0x028458D8 MOV X19, X0
	0x028458DC AND W20, W1, 0x1
	0x028458E0 TBNZ X8, 0x0, 0x28458F8
	0x028458E4 ADRP X0, 0x18AF000
	0x028458E8 LDR X0, [X0 + 0x9F0]
	0x028458EC BL 0x1C16CF4
	0x028458F0 MOVZ W8, 0x1
	0x028458F4 STRB W8, [X21 + 0xAB0]
	0x028458F8 LDRB W8, [X19 + 0x1C]
	0x028458FC CMP W8, W20
	0x02845900 B.EQ 0x2845954
	0x02845904 ADRP X8, 0x18AF000
	0x02845908 LDR X8, [X8 + 0x9F0]
	0x0284590C STRB W20, [X19 + 0x1C]
	0x02845910 LDR X0, [X8]
	0x02845914 LDR W8, [X0 + 0xE0]
	0x02845918 CBNZ W8, 0x2845920
	0x0284591C BL 0x1C16DFC
	0x02845920 MOV X0, X31
	0x02845924 BL 0x3361584
	0x02845928 LDRB W8, [X19 + 0x1C]
	0x0284592C STR X0, [X19 + 0x20]
	0x02845930 CBZ W8, 0x2845954
	0x02845934 LDR X8, [X19 + 0x28]
	0x02845938 CBZ X8, 0x2845954
	0x0284593C LDR X2, [X8 + 0x18]
	0x02845940 LDR X0, [X8 + 0x40]
	0x02845944 LDR X1, [X8 + 0x28]
	0x02845948 LDP X20, X19, [X31 + 0x10]
	0x0284594C LDP X30, X21, [X31], #0x20
	0x02845950 BR X2
	0x02845954 LDP X20, X19, [X31 + 0x10]
	0x02845958 LDP X30, X21, [X31], #0x20
	0x0284595C RET
	0x02845960 LDR X0, [X0 + 0x20]
	0x02845964 RET
	0x02845968 STR X1, [X0 + 0x20]
	0x0284596C RET
	0x02845970 LDR W0, [X0 + 0x30]
	0x02845974 RET
	0x02845978 LDR W8, [X0 + 0x38]
	0x0284597C MOVZ W9, 0x4DD3
	0x02845980 MOVK W9, 0x10620000
	0x02845984 STR W1, [X0 + 0x30]
	0x02845988 MUL W8, W8, W1
	0x0284598C SMADDL X8, X8, X9, X31
	0x02845990 UBFM X9, X8, 0x3F, 0x3F
	0x02845994 SBFM X8, X8, 0x26, 0x3F
	0x02845998 ADD W8, W8, W9
	0x0284599C STR W8, [X0 + 0x3C]
	0x028459A0 RET
	0x028459A4 STR X30, [X31 - 0x30]!
	0x028459A8 STP X22, X21, [X31 + 0x10]
	0x028459AC STP X20, X19, [X31 + 0x20]
	0x028459B0 ADRP X21, 0x1B95000
	0x028459B4 LDRB W8, [X21 + 0xAB1]
	0x028459B8 MOV X19, X1
	0x028459BC MOV X20, X0
	0x028459C0 TBNZ X8, 0x0, 0x28459D8
	0x028459C4 ADRP X0, 0x18AF000
	0x028459C8 LDR X0, [X0 + 0xE70]
	0x028459CC BL 0x1C16CF4
	0x028459D0 MOVZ W8, 0x1
	0x028459D4 STRB W8, [X21 + 0xAB1]
	0x028459D8 ADRP X22, 0x18AF000
	0x028459DC LDR X21, [X20 + 0x28]!
	0x028459E0 LDR X22, [X22 + 0xE70]
	0x028459E4 MOV X0, X21
	0x028459E8 MOV X1, X19
	0x028459EC MOV X2, X31
	0x028459F0 BL 0x33C0DE4
	0x028459F4 MOV X8, X0
	0x028459F8 CBZ X0, 0x2845A0C
	0x028459FC LDR X1, [X22]
	0x02845A00 LDR X9, [X8]
	0x02845A04 CMP X9, X1
	0x02845A08 B.NE 0x2845A38
	0x02845A0C MOV X0, X20
	0x02845A10 MOV X1, X8
	0x02845A14 MOV X2, X21
	0x02845A18 BL 0x1C24138
	0x02845A1C CMP X21, X0
	0x02845A20 MOV X21, X0
	0x02845A24 B.NE 0x28459E4
	0x02845A28 LDP X20, X19, [X31 + 0x20]
	0x02845A2C LDP X22, X21, [X31 + 0x10]
	0x02845A30 LDR X30, [X31], #0x30
	0x02845A34 RET
	0x02845A38 MOV X0, X8
	0x02845A3C BL 0x1C171E0
	0x02845A40 STR X30, [X31 - 0x30]!
	0x02845A44 STP X22, X21, [X31 + 0x10]
	0x02845A48 STP X20, X19, [X31 + 0x20]
	0x02845A4C ADRP X21, 0x1B95000
	0x02845A50 LDRB W8, [X21 + 0xAB2]
	0x02845A54 MOV X19, X1
	0x02845A58 MOV X20, X0
	0x02845A5C TBNZ X8, 0x0, 0x2845A74
	0x02845A60 ADRP X0, 0x18AF000
	0x02845A64 LDR X0, [X0 + 0xE70]
	0x02845A68 BL 0x1C16CF4
	0x02845A6C MOVZ W8, 0x1
	0x02845A70 STRB W8, [X21 + 0xAB2]
	0x02845A74 ADRP X22, 0x18AF000
	0x02845A78 LDR X21, [X20 + 0x28]!
	0x02845A7C LDR X22, [X22 + 0xE70]
	0x02845A80 MOV X0, X21
	0x02845A84 MOV X1, X19
	0x02845A88 MOV X2, X31
	0x02845A8C BL 0x33C0FDC
	0x02845A90 MOV X8, X0
	0x02845A94 CBZ X0, 0x2845AA8
	0x02845A98 LDR X1, [X22]
	0x02845A9C LDR X9, [X8]
	0x02845AA0 CMP X9, X1
	0x02845AA4 B.NE 0x2845AD4
	0x02845AA8 MOV X0, X20
	0x02845AAC MOV X1, X8
	0x02845AB0 MOV X2, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x1B96000
	010 Move W8, [X21+2726]
	011 Move X22, X2
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x18D8000
	019 Move X0, [X0+296]
	020 Call 0x1C17CF4
	021 Move X0, 0x18AF000
	022 Move X0, [X0+1448]
	023 Call 0x1C17CF4
	024 Move X0, 0x18D9000
	025 Move X0, [X0+3856]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2726], W8
	029 Move X0, [X19+32]
	030 Move W1, W20
	031 Move X2, X31
	032 Call ListViewDraggerExtension.GetRecycledItemFromIndex, X0, X1
	033 Move X21, X0
	034 Compare X0, 0
	035 JumpIfEqual {49}
	036 Move X8, [X21]
	037 Move X23, [X19+16]
	038 Move X0, X21
	039 Move X9, [X8+376]
	040 Move X1, [X8+384]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X23, 0
	043 JumpIfEqual {242}
	044 Move X1, X0
	045 Move X0, X23
	046 Move X2, X31
	047 Call VisualElement.IndexOf, X0, X1
	048 Move W23, W0
	049 Move X8, [X19+40]
	050 Compare X8, 0
	051 JumpIfEqual {242}
	052 Move W23, [X8+24]
	053 Move X0, [X19+48]
	054 Compare X0, 0
	055 JumpIfEqual {242}
	056 Move X8, [X0]
	057 Move X24, [X19+16]
	058 Move X9, [X8+376]
	059 Move X1, [X8+384]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Compare X24, 0
	062 JumpIfEqual {242}
	063 Move X2, X0
	064 Move X0, X24
	065 Move W1, W23
	066 Move X3, X31
	067 Call VisualElement.Insert, X0, X1, X2
	068 Move X0, [X19+40]
	069 Compare X0, 0
	070 JumpIfEqual {242}
	071 Move X8, [X22+32]
	072 Move X2, [X19+48]
	073 Move W1, W23
	074 Move X8, [X8+192]
	075 Move X3, [X8+304]
	076 Call List`1<Object>.Insert, X0, X1, X2
	077 Move X0, [X19+40]
	078 Compare X0, 0
	079 JumpIfEqual {242}
	080 Move X24, 0x18AF000
	081 Move X24, [X24+1448]
	082 Move W23, W31
	083 Move TEMP, 0
	084 Not TEMP
	085 Move W25, TEMP
	086 Move W8, [X0+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X8, [X22+32]
	089 Move W1, W23
	090 Move X8, [X8+192]
	091 Move X2, [X8+184]
	092 Call List`1<Object>.get_Item, X0, X1
	093 Compare X0, 0
	094 JumpIfEqual {242}
	095 Move W8, [X0+40]
	096 Compare W8, 0
	097 JumpIfEqual {106}
	098 Move [X0+32], W25
	099 Move X8, [X19]
	100 Move X0, X19
	101 Move W1, W23
	102 Move X9, [X8+680]
	103 Move X2, [X8+688]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Subtract W23, W23, 1
	106 Move X0, [X19+40]
	107 Add W23, W23, 1
	108 Compare X0, 0
	109 JumpIfNotEqual {86}
	110 Move X0, X19
	111 Call 0x2843AE0, X0
	112 Move X8, [X24]
	113 Move W23, W0
	114 Move W9, [X8+224]
	115 Compare W9, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X8
	118 Call 0x1C17DFC
	119 Subtract W1, W23, 1
	120 Move W0, W20
	121 Move X2, X31
	122 Call Math.Min, X0, X1
	123 Move X8, [X19+48]
	124 Compare X8, 0
	125 JumpIfEqual {242}
	126 Move W8, [X8+32]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X8, [X22+32]
	129 Move X0, [X19+40]
	130 Move X1, [X19+72]
	131 Move X8, [X8+192]
	132 Move X8, [X8+272]
	133 Move X8, [X8+32]
	134 Move X8, [X8+192]
	135 Move X2, [X8+48]
	136 Call 0x21C8E88, X0, X1
	137 Compare X0, 0
	138 JumpIfEqual {192}
	139 Move X8, [X22+32]
	140 Move X0, [X19+40]
	141 Move X1, [X19+72]
	142 Move X8, [X8+192]
	143 Move X8, [X8+272]
	144 Move X8, [X8+32]
	145 Move X8, [X8+192]
	146 Move X2, [X8+48]
	147 Call 0x21C8E88, X0, X1
	148 Compare X0, 0
	149 JumpIfEqual {242}
	150 Move X8, [X0]
	151 Move X9, [X8+376]
	152 Move X1, [X8+384]
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Compare X0, 0
	155 JumpIfEqual {242}
	156 Move X1, X31
	157 Call VisualElement.get_style, X0
	158 Move X8, 0x18D9000
	159 Move X8, [X8+3856]
	160 Move X22, X0
	161 Move W0, 1
	162 Move X1, [X8]
	163 Call 0x266FACC, X0
	164 Compare X22, 0
	165 JumpIfEqual {242}
	166 Move X10, 0x18D8000
	167 Move X8, [X22]
	168 Move X10, [X10+296]
	169 Move X23, X0
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Move X1, [X10]
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move W2, 18
	181 Move X0, X22
	182 Call 0x1C5D788
	183 Move W9, [X10]
	184 Add W9, W9, 18
	185 Add X8, X8, W9
	186 Add X0, X8, 312
	187 Move X8, [X0]
	188 Move X2, [X0+8]
	189 Move X0, X22
	190 Move X1, X23
	191 NotImplemented "Instruction BLR not yet implemented."
	192 Move X1, [X19+48]
	193 Compare X1, 0
	194 JumpIfEqual {242}
	195 Move W2, [X1+32]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X8, [X19+32]
	198 Compare X8, 0
	199 JumpIfEqual {242}
	200 Move X0, [X8+1096]
	201 Compare X0, 0
	202 JumpIfEqual {242}
	203 Move X8, [X0]
	204 Move X9, [X8+568]
	205 Move X3, [X8+576]
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move X8, [X19+48]
	208 Compare X8, 0
	209 JumpIfEqual {242}
	210 Move TEMP, 0
	211 Not TEMP
	212 Move W9, TEMP
	213 Move [X8+32], W9
	214 Compare X21, 0
	215 JumpIfEqual {232}
	216 Move X8, [X19+32]
	217 Compare X8, 0
	218 JumpIfEqual {242}
	219 Move X0, [X8+1096]
	220 Compare X0, 0
	221 JumpIfEqual {242}
	222 Move X8, [X0]
	223 Move W2, [X21+32]
	224 Move X1, X21
	225 Move X9, [X8+568]
	226 Move X3, [X8+576]
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move TEMP, 0
	229 Not TEMP
	230 Move W8, TEMP
	231 Move [X21+32], W8
	232 Move [X19+48], X31
	233 Move X20, [X31+48]
	234 Move X19, [X31+56]
	235 Move X22, [X31+32]
	236 Move X21, [X31+40]
	237 Move X24, [X31+16]
	238 Move X23, [X31+24]
	239 Move X30, [X31+64]
	240 Move X25, [X31+72]
	241 Return 
	242 Call 0x1C17F20

Method: T GetOrMakeItemAtIndex(System.Int32 activeItemIndex = -1, System.Int32 scrollViewIndex = -1)

Disassembly:
	0x02845AB4 BL 0x1C24138
	0x02845AB8 CMP X21, X0
	0x02845ABC MOV X21, X0
	0x02845AC0 B.NE 0x2845A80
	0x02845AC4 LDP X20, X19, [X31 + 0x20]
	0x02845AC8 LDP X22, X21, [X31 + 0x10]
	0x02845ACC LDR X30, [X31], #0x30
	0x02845AD0 RET
	0x02845AD4 MOV X0, X8
	0x02845AD8 BL 0x1C171E0
	0x02845ADC STP X30, X21, [X31 - 0x20]!
	0x02845AE0 STP X20, X19, [X31 + 0x10]
	0x02845AE4 MOV W20, W1
	0x02845AE8 MOV X1, X31
	0x02845AEC MOV W19, W2
	0x02845AF0 MOV X21, X0
	0x02845AF4 BL 0x33BDD8C
	0x02845AF8 MUL W8, W19, W20
	0x02845AFC MOVZ W9, 0x1F4
	0x02845B00 MOVZ W10, 0x4DD3
	0x02845B04 MOVK W10, 0x10620000
	0x02845B08 STR W9, [X21 + 0x30]
	0x02845B0C MUL W9, W8, W9
	0x02845B10 SMADDL X9, X9, X10, X31
	0x02845B14 LDP X20, X19, [X31 + 0x10]
	0x02845B18 UBFM X10, X9, 0x3F, 0x3F
	0x02845B1C SBFM X9, X9, 0x26, 0x3F
	0x02845B20 MOVZ W11, 0x1
	0x02845B24 ADD W9, W9, W10
	0x02845B28 STP W8, W9, [X21 + 0x38]
	0x02845B2C STRB W11, [X21 + 0x10]
	0x02845B30 LDP X30, X21, [X31], #0x20
	0x02845B34 RET
	0x02845B38 RET
	0x02845B3C LDRB W0, [X0 + 0x10]
	0x02845B40 RET
	0x02845B44 AND W8, W1, 0x1
	0x02845B48 STRB W8, [X0 + 0x10]
	0x02845B4C RET
	0x02845B50 LDP S1, S0, [X0 + 0x14]
	0x02845B54 FMUL S0, S0, S1
	0x02845B58 RET
	0x02845B5C LDR V1, [X0 + 0x14]
	0x02845B60 FDIV S0, S0, S1
	0x02845B64 STR S0, [X0 + 0x18]
	0x02845B68 RET
	0x02845B6C LDRB W0, [X0 + 0x1C]
	0x02845B70 RET
	0x02845B74 STP X30, X21, [X31 - 0x20]!
	0x02845B78 STP X20, X19, [X31 + 0x10]
	0x02845B7C ADRP X21, 0x1B95000
	0x02845B80 LDRB W8, [X21 + 0xAB3]
	0x02845B84 MOV X19, X0
	0x02845B88 AND W20, W1, 0x1
	0x02845B8C TBNZ X8, 0x0, 0x2845BA4
	0x02845B90 ADRP X0, 0x18AF000
	0x02845B94 LDR X0, [X0 + 0x9F0]
	0x02845B98 BL 0x1C16CF4
	0x02845B9C MOVZ W8, 0x1
	0x02845BA0 STRB W8, [X21 + 0xAB3]
	0x02845BA4 LDRB W8, [X19 + 0x1C]
	0x02845BA8 CMP W8, W20
	0x02845BAC B.EQ 0x2845C00
	0x02845BB0 ADRP X8, 0x18AF000
	0x02845BB4 LDR X8, [X8 + 0x9F0]
	0x02845BB8 STRB W20, [X19 + 0x1C]
	0x02845BBC LDR X0, [X8]
	0x02845BC0 LDR W8, [X0 + 0xE0]
	0x02845BC4 CBNZ W8, 0x2845BCC
	0x02845BC8 BL 0x1C16DFC
	0x02845BCC MOV X0, X31
	0x02845BD0 BL 0x3361584
	0x02845BD4 LDRB W8, [X19 + 0x1C]
	0x02845BD8 STR X0, [X19 + 0x20]
	0x02845BDC CBZ W8, 0x2845C00
	0x02845BE0 LDR X8, [X19 + 0x28]
	0x02845BE4 CBZ X8, 0x2845C00
	0x02845BE8 LDR X2, [X8 + 0x18]
	0x02845BEC LDR X0, [X8 + 0x40]
	0x02845BF0 LDR X1, [X8 + 0x28]
	0x02845BF4 LDP X20, X19, [X31 + 0x10]
	0x02845BF8 LDP X30, X21, [X31], #0x20
	0x02845BFC BR X2
	0x02845C00 LDP X20, X19, [X31 + 0x10]
	0x02845C04 LDP X30, X21, [X31], #0x20
	0x02845C08 RET
	0x02845C0C LDR X0, [X0 + 0x20]
	0x02845C10 RET
	0x02845C14 STR X1, [X0 + 0x20]
	0x02845C18 RET
	0x02845C1C LDR W0, [X0 + 0x30]
	0x02845C20 RET
	0x02845C24 LDR W8, [X0 + 0x38]
	0x02845C28 MOVZ W9, 0x4DD3
	0x02845C2C MOVK W9, 0x10620000
	0x02845C30 STR W1, [X0 + 0x30]
	0x02845C34 MUL W8, W8, W1
	0x02845C38 SMADDL X8, X8, X9, X31
	0x02845C3C UBFM X9, X8, 0x3F, 0x3F
	0x02845C40 SBFM X8, X8, 0x26, 0x3F
	0x02845C44 ADD W8, W8, W9
	0x02845C48 STR W8, [X0 + 0x3C]
	0x02845C4C RET
	0x02845C50 STR X30, [X31 - 0x30]!
	0x02845C54 STP X22, X21, [X31 + 0x10]
	0x02845C58 STP X20, X19, [X31 + 0x20]
	0x02845C5C ADRP X21, 0x1B95000
	0x02845C60 LDRB W8, [X21 + 0xAB4]
	0x02845C64 MOV X19, X1
	0x02845C68 MOV X20, X0
	0x02845C6C TBNZ X8, 0x0, 0x2845C84

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1B96000
	009 Move W8, [X20+2727]
	010 Move X23, X3
	011 Move W19, W2
	012 Move W22, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x18D9000
	019 Move X0, [X0+3904]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+2727], W8
	023 Move X0, [X21+24]
	024 Compare X0, 0
	025 JumpIfEqual {125}
	026 Move X8, [X23+32]
	027 Move X8, [X8+192]
	028 Move X1, [X8+312]
	029 Call 0x24942C0, X0
	030 Compare X0, 0
	031 JumpIfEqual {125}
	032 Move X8, [X0]
	033 Move X20, X0
	034 Move X9, [X8+376]
	035 Move X1, [X8+384]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X0, 0
	038 JumpIfNotEqual {65}
	039 Move X8, [X21+32]
	040 Compare X8, 0
	041 JumpIfEqual {125}
	042 Move X0, [X8+1096]
	043 Compare X0, 0
	044 JumpIfEqual {125}
	045 Move X8, [X0]
	046 Move X1, X20
	047 Move X9, [X8+536]
	048 Move X2, [X8+544]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, 0x18D9000
	051 Move X8, [X8+3904]
	052 Move X0, [X8]
	053 Call 0x1C17F10
	054 Move X8, [X23+32]
	055 Move X1, X21
	056 Move X3, X31
	057 Move X24, X0
	058 Move X8, [X8+192]
	059 Move X2, [X8+320]
	060 Call Action`1<Object>..ctor, X0, X1, X2
	061 Move X0, X20
	062 Move X1, X24
	063 Move X2, X31
	064 Call ReusableCollectionItem.add_onDestroy, X0, X1
	065 Move X8, [X20]
	066 Move X0, X20
	067 Move X9, [X8+408]
	068 Move X1, [X8+416]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X0, [X21+40]
	071 Compare X0, 0
	072 JumpIfEqual {125}
	073 Move X8, [X23+32]
	074 Add W31, W22, 1
	075 Move X9, [X8+192]
	076 Move X3, [X9+304]
	077 Move W1, W22
	078 Move X2, X20
	079 Call List`1<Object>.Insert, X0, X1, X2
	080 Move W10, [X0+28]
	081 Move X8, [X0+16]
	082 Move X9, [X9+328]
	083 Add W10, W10, 1
	084 Move [X0+28], W10
	085 Compare X8, 0
	086 JumpIfEqual {125}
	087 NotImplemented "Instruction LDRSW not yet implemented."
	088 Move W11, [X8+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add W9, W10, 1
	091 Add X8, X8, X10
	092 Move [X0+24], W9
	093 Move [X8+32], X20
	094 Move X8, [X9+32]
	095 Move X1, X20
	096 Move X8, [X8+192]
	097 Move X2, [X8+112]
	098 Call List`1<Object>.AddWithResize, X0, X1
	099 Move X8, [X20]
	100 Move X21, [X21+16]
	101 Move X0, X20
	102 Move X9, [X8+376]
	103 Move X1, [X8+384]
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Compare X21, 0
	106 JumpIfEqual {125}
	107 Move X2, X0
	108 Move X0, X21
	109 Add W31, W19, 1
	110 Move W1, W19
	111 Move X3, X31
	112 Call VisualElement.Insert, X0, X1, X2
	113 Move X1, X2
	114 Move X2, X31
	115 Call VisualElement.Add, X0, X1
	116 Move X0, X20
	117 Move X20, [X31+48]
	118 Move X19, [X31+56]
	119 Move X22, [X31+32]
	120 Move X21, [X31+40]
	121 Move X24, [X31+16]
	122 Move X23, [X31+24]
	123 Move X30, [X31+64]
	124 Return X0
	125 Call 0x1C17F20

Method: System.Void ReleaseItem(System.Int32 activeItemsIndex)

Disassembly:
	0x02845C70 ADRP X0, 0x18AF000
	0x02845C74 LDR X0, [X0 + 0xE70]
	0x02845C78 BL 0x1C16CF4
	0x02845C7C MOVZ W8, 0x1
	0x02845C80 STRB W8, [X21 + 0xAB4]
	0x02845C84 ADRP X22, 0x18AF000
	0x02845C88 LDR X21, [X20 + 0x28]!
	0x02845C8C LDR X22, [X22 + 0xE70]
	0x02845C90 MOV X0, X21
	0x02845C94 MOV X1, X19
	0x02845C98 MOV X2, X31
	0x02845C9C BL 0x33C0DE4
	0x02845CA0 MOV X8, X0
	0x02845CA4 CBZ X0, 0x2845CB8
	0x02845CA8 LDR X1, [X22]
	0x02845CAC LDR X9, [X8]
	0x02845CB0 CMP X9, X1
	0x02845CB4 B.NE 0x2845CE4
	0x02845CB8 MOV X0, X20
	0x02845CBC MOV X1, X8
	0x02845CC0 MOV X2, X21
	0x02845CC4 BL 0x1C24138
	0x02845CC8 CMP X21, X0
	0x02845CCC MOV X21, X0
	0x02845CD0 B.NE 0x2845C90
	0x02845CD4 LDP X20, X19, [X31 + 0x20]
	0x02845CD8 LDP X22, X21, [X31 + 0x10]
	0x02845CDC LDR X30, [X31], #0x30
	0x02845CE0 RET
	0x02845CE4 MOV X0, X8
	0x02845CE8 BL 0x1C171E0
	0x02845CEC STR X30, [X31 - 0x30]!
	0x02845CF0 STP X22, X21, [X31 + 0x10]
	0x02845CF4 STP X20, X19, [X31 + 0x20]
	0x02845CF8 ADRP X21, 0x1B95000
	0x02845CFC LDRB W8, [X21 + 0xAB5]
	0x02845D00 MOV X19, X1
	0x02845D04 MOV X20, X0
	0x02845D08 TBNZ X8, 0x0, 0x2845D20
	0x02845D0C ADRP X0, 0x18AF000
	0x02845D10 LDR X0, [X0 + 0xE70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X0
	006 Move X0, [X0+40]
	007 Compare X0, 0
	008 JumpIfEqual {51}
	009 Move X8, [X2+32]
	010 Move X19, X2
	011 Move X8, [X8+192]
	012 Move X2, [X8+184]
	013 Call List`1<Object>.get_Item, X0, X1
	014 Compare X0, 0
	015 JumpIfEqual {51}
	016 Move W2, [X0+32]
	017 Move X21, X0
	018 Add W31, W2, 1
	019 Move X8, [X20+32]
	020 Compare X8, 0
	021 JumpIfEqual {51}
	022 Move X0, [X8+1096]
	023 Compare X0, 0
	024 JumpIfEqual {51}
	025 Move X8, [X0]
	026 Move X1, X21
	027 Move X9, [X8+568]
	028 Move X3, [X8+576]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X0, [X20+24]
	031 Compare X0, 0
	032 JumpIfEqual {51}
	033 Move X8, [X19+32]
	034 Move X1, X21
	035 Move X8, [X8+192]
	036 Move X2, [X8+192]
	037 Call 0x24943E0, X0, X1
	038 Move X0, [X20+40]
	039 Compare X0, 0
	040 JumpIfEqual {51}
	041 Move X8, [X19+32]
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X1, X21
	045 Move X8, [X8+192]
	046 Move X2, [X8+336]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call List`1<Object>.Remove, X0, X1
	050 Return 
	051 Call 0x1C17F20

Method: System.Void OnDestroyItem(UnityEngine.UIElements.ReusableCollectionItem item)

Disassembly:
	0x02845D14 BL 0x1C16CF4
	0x02845D18 MOVZ W8, 0x1
	0x02845D1C STRB W8, [X21 + 0xAB5]
	0x02845D20 ADRP X22, 0x18AF000
	0x02845D24 LDR X21, [X20 + 0x28]!
	0x02845D28 LDR X22, [X22 + 0xE70]
	0x02845D2C MOV X0, X21
	0x02845D30 MOV X1, X19
	0x02845D34 MOV X2, X31
	0x02845D38 BL 0x33C0FDC
	0x02845D3C MOV X8, X0
	0x02845D40 CBZ X0, 0x2845D54
	0x02845D44 LDR X1, [X22]
	0x02845D48 LDR X9, [X8]
	0x02845D4C CMP X9, X1
	0x02845D50 B.NE 0x2845D80
	0x02845D54 MOV X0, X20
	0x02845D58 MOV X1, X8
	0x02845D5C MOV X2, X21
	0x02845D60 BL 0x1C24138
	0x02845D64 CMP X21, X0
	0x02845D68 MOV X21, X0
	0x02845D6C B.NE 0x2845D2C
	0x02845D70 LDP X20, X19, [X31 + 0x20]
	0x02845D74 LDP X22, X21, [X31 + 0x10]
	0x02845D78 LDR X30, [X31], #0x30
	0x02845D7C RET
	0x02845D80 MOV X0, X8
	0x02845D84 BL 0x1C171E0
	0x02845D88 STP X30, X21, [X31 - 0x20]!
	0x02845D8C STP X20, X19, [X31 + 0x10]
	0x02845D90 MOV W20, W1
	0x02845D94 MOV X1, X31
	0x02845D98 MOV W19, W2
	0x02845D9C MOV X21, X0
	0x02845DA0 BL 0x33BDD8C
	0x02845DA4 MUL W8, W19, W20
	0x02845DA8 MOVZ W9, 0x1F4
	0x02845DAC MOVZ W10, 0x4DD3
	0x02845DB0 MOVK W10, 0x10620000
	0x02845DB4 STR W9, [X21 + 0x30]
	0x02845DB8 MUL W9, W8, W9
	0x02845DBC SMADDL X9, X9, X10, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1B96000
	007 Move W8, [X22+2728]
	008 Move X21, X2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x18D9000
	016 Move X0, [X0+3904]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2728], W8
	020 Move X8, [X20+32]
	021 Compare X8, 0
	022 JumpIfEqual {54}
	023 Move X0, [X8+1096]
	024 Compare X0, 0
	025 JumpIfEqual {54}
	026 Move X8, [X0]
	027 Move X22, 0x18D9000
	028 Move X1, X19
	029 Move X9, [X8+584]
	030 Move X2, [X8+592]
	031 Move X22, [X22+3904]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X0, [X22]
	034 Call 0x1C17F10
	035 Move X8, [X21+32]
	036 Move X1, X20
	037 Move X3, X31
	038 Move X21, X0
	039 Move X8, [X8+192]
	040 Move X2, [X8+320]
	041 Call Action`1<Object>..ctor, X0, X1, X2
	042 Compare X19, 0
	043 JumpIfEqual {54}
	044 Move X0, X19
	045 Move X1, X21
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X2, X31
	051 Move X30, [X31+48]
	052 Call ReusableCollectionItem.remove_onDestroy, X0, X1
	053 Return 
	054 Call 0x1C17F20

Method: System.Int32 GetDraggedIndex()

Disassembly:
	0x02845DC0 LDP X20, X19, [X31 + 0x10]
	0x02845DC4 UBFM X10, X9, 0x3F, 0x3F
	0x02845DC8 SBFM X9, X9, 0x26, 0x3F
	0x02845DCC MOVZ W11, 0x1
	0x02845DD0 ADD W9, W9, W10
	0x02845DD4 STP W8, W9, [X21 + 0x38]
	0x02845DD8 STRB W11, [X21 + 0x10]
	0x02845DDC LDP X30, X21, [X31], #0x20
	0x02845DE0 RET
	0x02845DE4 RET
	0x02845DE8 LDRB W0, [X0 + 0x10]
	0x02845DEC RET
	0x02845DF0 AND W8, W1, 0x1
	0x02845DF4 STRB W8, [X0 + 0x10]
	0x02845DF8 RET
	0x02845DFC LDP S1, S0, [X0 + 0x14]
	0x02845E00 FMUL S0, S0, S1
	0x02845E04 RET
	0x02845E08 LDR V1, [X0 + 0x14]
	0x02845E0C FDIV S0, S0, S1
	0x02845E10 STR S0, [X0 + 0x18]
	0x02845E14 RET
	0x02845E18 LDRB W0, [X0 + 0x1C]
	0x02845E1C RET
	0x02845E20 STR X30, [X31 - 0x30]!
	0x02845E24 STP X22, X21, [X31 + 0x10]
	0x02845E28 STP X20, X19, [X31 + 0x20]
	0x02845E2C ADRP X22, 0x1B95000
	0x02845E30 LDRB W8, [X22 + 0xAB6]
	0x02845E34 MOV X20, X2
	0x02845E38 MOV X19, X0
	0x02845E3C AND W21, W1, 0x1
	0x02845E40 TBNZ X8, 0x0, 0x2845E58
	0x02845E44 ADRP X0, 0x18AF000
	0x02845E48 LDR X0, [X0 + 0x9F0]
	0x02845E4C BL 0x1C16CF4
	0x02845E50 MOVZ W8, 0x1
	0x02845E54 STRB W8, [X22 + 0xAB6]
	0x02845E58 LDRB W8, [X19 + 0x1C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1B96000
	005 Move W8, [X20+2729]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x18D9000
	012 Move X0, [X0+3912]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2729], W8
	016 Move X8, [X19+32]
	017 Compare X8, 0
	018 JumpIfEqual {47}
	019 Move X8, [X8+1160]
	020 Compare X8, 0
	021 JumpIfEqual {33}
	022 Move X9, 0x18D9000
	023 Move X9, [X9+3912]
	024 Move X10, [X8]
	025 Move X9, [X9]
	026 Move W12, [X10+304]
	027 Move W11, [X9+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X10, [X10+200]
	030 Add X10, X10, X11
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move TEMP, 0
	034 Not TEMP
	035 Move W0, TEMP
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0
	040 Move W9, [X8+168]
	041 Compare W9, 0
	042 JumpIfEqual {33}
	043 Move X8, [X8+152]
	044 Compare X8, 0
	045 JumpIfEqual {47}
	046 Move W0, [X8+32]
	047 Call 0x1C17F20

