Type: UnityEngine.UIElements.Panel

Method: UnityEngine.UIElements.VisualElement get_visualTree()

Disassembly:
	0x03DBDD08 B.LT 0x3DBDD1C
	0x03DBDD0C LDR X0, [X19 + 0x10]

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: UnityEngine.UIElements.EventDispatcher get_dispatcher()

Disassembly:
	0x03DBDD10 MOV W1, W31
	0x03DBDD14 MOV X3, X31

ISIL:
	001 Move X0, [X0+256]
	002 Return X0

Method: System.Void set_dispatcher(UnityEngine.UIElements.EventDispatcher value)

Disassembly:
	0x03DBDD18 BL 0x339FA34
	0x03DBDD1C LDR X8, [X20]

ISIL:
	001 Move [X0+256], X1
	002 Return 

Method: UnityEngine.UIElements.TimerEventScheduler get_timerEventScheduler()

Disassembly:
	0x03DBDD20 MOV X0, X20
	0x03DBDD24 LDR X9, [X8 + 0x398]
	0x03DBDD28 LDR X1, [X8 + 0x3A0]
	0x03DBDD2C BLR X9
	0x03DBDD30 LDR X8, [X21]
	0x03DBDD34 MOV X20, X0
	0x03DBDD38 LDR W9, [X8 + 0xE0]
	0x03DBDD3C CBNZ W9, 0x3DBDD48
	0x03DBDD40 MOV X0, X8
	0x03DBDD44 BL 0x1C16DFC
	0x03DBDD48 MOV X0, X20
	0x03DBDD4C MOV X1, X19
	0x03DBDD50 LDP X20, X19, [X31 + 0x20]
	0x03DBDD54 LDP X30, X21, [X31 + 0x10]
	0x03DBDD58 MOV V0.16B, V9.16B
	0x03DBDD5C MOV V1.16B, V8.16B
	0x03DBDD60 MOV W2, W31
	0x03DBDD64 LDP D9, D8, [X31], #0x30
	0x03DBDD68 B 0x3DBD90C
	0x03DBDD6C SUB X31, X31, 0x60
	0x03DBDD70 STP D11, D10, [X31 + 0x10]
	0x03DBDD74 STP D9, D8, [X31 + 0x20]
	0x03DBDD78 STR X30, [X31 + 0x30]
	0x03DBDD7C STP X22, X21, [X31 + 0x40]
	0x03DBDD80 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x62C000
	005 Move W8, [X20+233]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3AC000
	012 Move X0, [X0+3992]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+233], W8
	016 Move X20, [X19+264]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0x3AC000
	020 Move X8, [X8+3992]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call TimerEventScheduler..ctor, X0
	026 Move [X19+264], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: UnityEngine.UIElements.IScheduler get_scheduler()

Disassembly:
	0x03DBDD84 ADRP X20, 0x62B000

ISIL:
	001 Call Panel.get_timerEventScheduler, X0
	002 Return X0

Method: UnityEngine.UIElements.IStylePropertyAnimationSystem get_styleAnimationSystem()

Disassembly:
	0x03DBDD88 ADRP X21, 0x35F000
	0x03DBDD8C LDRB W8, [X20 + 0xF4]

ISIL:
	001 Move X0, [X0+184]
	002 Return X0

Method: System.Void set_styleAnimationSystem(UnityEngine.UIElements.IStylePropertyAnimationSystem value)

Disassembly:
	0x03DBDD90 LDR X21, [X21 + 0xE50]
	0x03DBDD94 MOV V8.16B, V1.16B
	0x03DBDD98 MOV V9.16B, V0.16B
	0x03DBDD9C MOV X19, X0
	0x03DBDDA0 TBNZ X8, 0x0, 0x3DBDDC4
	0x03DBDDA4 ADRP X0, 0x360000
	0x03DBDDA8 LDR X0, [X0 + 0xD08]
	0x03DBDDAC BL 0x1C16CF4
	0x03DBDDB0 ADRP X0, 0x35F000
	0x03DBDDB4 LDR X0, [X0 + 0xE50]
	0x03DBDDB8 BL 0x1C16CF4
	0x03DBDDBC MOVZ W8, 0x1
	0x03DBDDC0 STRB W8, [X20 + 0xF4]
	0x03DBDDC4 STR X31, [X31 + 0x38]
	0x03DBDDC8 STRB W31, [X31 + 0xC]
	0x03DBDDCC LDR X8, [X19]
	0x03DBDDD0 MOV X0, X19
	0x03DBDDD4 LDR X9, [X8 + 0x2D8]
	0x03DBDDD8 LDR X1, [X8 + 0x2E0]
	0x03DBDDDC BLR X9
	0x03DBDDE0 LDR X0, [X21]
	0x03DBDDE4 LDR X20, [X19 + 0x70]
	0x03DBDDE8 LDR W8, [X0 + 0xE0]
	0x03DBDDEC CBNZ W8, 0x3DBDDF4
	0x03DBDDF0 BL 0x1C16DFC
	0x03DBDDF4 CBZ X20, 0x3DBDEE0
	0x03DBDDF8 LDR X8, [X21]
	0x03DBDDFC ADRP X22, 0x360000
	0x03DBDE00 ADD X2, X31, 0x38
	0x03DBDE04 ADD X3, X31, 0xC
	0x03DBDE08 LDR X8, [X8 + 0xB8]
	0x03DBDE0C MOV X0, X20
	0x03DBDE10 MOV X4, X31
	0x03DBDE14 LDR W1, [X8 + 0x8]
	0x03DBDE18 LDR X22, [X22 + 0xD08]
	0x03DBDE1C BL 0x3D9E584
	0x03DBDE20 LDRB W8, [X31 + 0xC]
	0x03DBDE24 CBZ W8, 0x3DBDE90
	0x03DBDE28 LDR X8, [X19]
	0x03DBDE2C MOV X0, X19
	0x03DBDE30 LDR X9, [X8 + 0x398]
	0x03DBDE34 LDR X1, [X8 + 0x3A0]
	0x03DBDE38 BLR X9
	0x03DBDE3C LDR X8, [X22]
	0x03DBDE40 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x62C000
	006 Move W8, [X21+234]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3A8000
	014 Move X0, [X0+424]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+234], W8
	018 Move X21, [X20+184]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Compare X21, 0
	021 JumpIfEqual {46}
	022 Move X10, 0x3A8000
	023 Move X8, [X21]
	024 Move X10, [X10+424]
	025 NotImplemented "Instruction LDRH not yet implemented."
	026 Move X1, [X10]
	027 Compare X9, 0
	028 JumpIfEqual {35}
	029 Move X10, [X8+176]
	030 Add X10, X10, 8
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Subtract X9, X9, 1
	034 Add X10, X10, 16
	035 Move W2, 15
	036 Move X0, X21
	037 Call 0x1C5D788
	038 Move W9, [X10]
	039 Add W9, W9, 15
	040 Add X8, X8, W9
	041 Add X0, X8, 312
	042 Move X8, [X0]
	043 Move X1, [X0+8]
	044 Move X0, X21
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move [X20+184], X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 

Method: UnityEngine.ScriptableObject get_ownerObject()

Disassembly:
	0x03DBDE44 LDR W9, [X8 + 0xE0]
	0x03DBDE48 CBNZ W9, 0x3DBDE54

ISIL:
	001 Move X0, [X0+272]
	002 Return X0

Method: System.Void set_ownerObject(UnityEngine.ScriptableObject value)

Disassembly:
	0x03DBDE4C MOV X0, X8
	0x03DBDE50 BL 0x1C16DFC

ISIL:
	001 Move [X0+272], X1
	002 Return 

Method: UnityEngine.UIElements.ContextType get_contextType()

Disassembly:
	0x03DBDE54 MOV X0, X19
	0x03DBDE58 MOV V0.16B, V9.16B

ISIL:
	001 Move W0, [X0+280]
	002 Return X0

Method: System.Void set_contextType(UnityEngine.UIElements.ContextType value)

Disassembly:
	0x03DBDE5C MOV V1.16B, V8.16B
	0x03DBDE60 MOV X1, X31

ISIL:
	001 Move [X0+280], W1
	002 Return 

Method: UnityEngine.UIElements.SavePersistentViewData get_saveViewData()

Disassembly:
	0x03DBDE64 MOV W2, W31
	0x03DBDE68 BL 0x3DBD90C

ISIL:
	001 Move X0, [X0+288]
	002 Return X0

Method: UnityEngine.UIElements.GetViewDataDictionary get_getViewDataDictionary()

Disassembly:
	0x03DBDE6C MOV X20, X0
	0x03DBDE70 MOV X0, X20

ISIL:
	001 Move X0, [X0+296]
	002 Return X0

Method: UnityEngine.UIElements.FocusController get_focusController()

Disassembly:
	0x03DBDE74 LDP X20, X19, [X31 + 0x50]
	0x03DBDE78 LDP X22, X21, [X31 + 0x40]

ISIL:
	001 Move X0, [X0+304]
	002 Return X0

Method: System.Void set_focusController(UnityEngine.UIElements.FocusController value)

Disassembly:
	0x03DBDE7C LDR X30, [X31 + 0x30]
	0x03DBDE80 LDP D9, D8, [X31 + 0x20]

ISIL:
	001 Move [X0+304], X1
	002 Return 

Method: UnityEngine.EventInterests get_IMGUIEventInterests()

Disassembly:
	0x03DBDE84 LDP D11, D10, [X31 + 0x10]
	0x03DBDE88 ADD X31, X31, 0x60
	0x03DBDE8C RET
	0x03DBDE90 MOV X20, X0

ISIL:
	001 Move W8, [X0+314]
	002 NotImplemented "Instruction LDRH not yet implemented."
	003 NotImplemented "Instruction BFM not yet implemented."
	004 Return X0

Method: System.Void set_IMGUIEventInterests(UnityEngine.EventInterests value)

Disassembly:
	0x03DBDE94 LDR X0, [X22]
	0x03DBDE98 LDP S11, S10, [X31 + 0x38]
	0x03DBDE9C LDR W8, [X0 + 0xE0]
	0x03DBDEA0 CBNZ W8, 0x3DBDEA8

ISIL:
	001 Move X8, X1
	002 ShiftRight X8, 16
	003 And X8, X8, 0x7FFFFFFF
	004 NotImplemented "Instruction STRH not yet implemented."
	005 Move [X0+314], W8
	006 Return 

Method: UnityEngine.UIElements.LoadResourceFunction get_loadResourceFunc()

Disassembly:
	0x03DBDEA4 BL 0x1C16DFC
	0x03DBDEA8 MOV V0.16B, V11.16B
	0x03DBDEAC MOV V1.16B, V10.16B
	0x03DBDEB0 BL 0x3DBDEE4
	0x03DBDEB4 MOV V0.16B, V9.16B
	0x03DBDEB8 MOV V1.16B, V8.16B
	0x03DBDEBC MOV X21, X0
	0x03DBDEC0 BL 0x3DBDEE4
	0x03DBDEC4 CMP W21, W0
	0x03DBDEC8 B.NE 0x3DBDE28
	0x03DBDECC UBFM X8, X21, 0x20, 0x3F
	0x03DBDED0 UBFM X9, X0, 0x20, 0x3F
	0x03DBDED4 CMP W8, W9
	0x03DBDED8 B.EQ 0x3DBDE70
	0x03DBDEDC B 0x3DBDE28
	0x03DBDEE0 BL 0x1C16F20
	0x03DBDEE4 STP D9, D8, [X31 - 0x30]!
	0x03DBDEE8 STR X30, [X31 + 0x10]
	0x03DBDEEC STP X20, X19, [X31 + 0x20]
	0x03DBDEF0 ADRP X19, 0x61B000
	0x03DBDEF4 LDRB W8, [X19 + 0xA23]
	0x03DBDEF8 MOV V8.16B, V1.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x62C000
	005 Move X19, 0x361000
	006 Move W8, [X20+235]
	007 Move X19, [X19+3336]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x361000
	013 Move X0, [X0+3336]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+235], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.Object LoadResource(System.String pathName, System.Type type, System.Single dpiScaling)

Disassembly:
	0x03DBDEFC MOV V9.16B, V0.16B
	0x03DBDF00 CBNZ W8, 0x3DBDF18
	0x03DBDF04 ADRP X0, 0x336000
	0x03DBDF08 LDR X0, [X0 + 0x5A8]
	0x03DBDF0C BL 0x1C16CF4
	0x03DBDF10 MOVZ W8, 0x1
	0x03DBDF14 STRB W8, [X19 + 0xA23]
	0x03DBDF18 ADRP X20, 0x336000
	0x03DBDF1C LDR X20, [X20 + 0x5A8]
	0x03DBDF20 LDR X0, [X20]
	0x03DBDF24 LDR W8, [X0 + 0xE0]
	0x03DBDF28 CBZ W8, 0x3DBDF34
	0x03DBDF2C FRINTM S9, S9
	0x03DBDF30 B 0x3DBDF58
	0x03DBDF34 BL 0x1C16DFC
	0x03DBDF38 LDRB W8, [X19 + 0xA23]
	0x03DBDF3C FRINTM S9, S9
	0x03DBDF40 CBNZ W8, 0x3DBDF58
	0x03DBDF44 ADRP X0, 0x336000
	0x03DBDF48 LDR X0, [X0 + 0x5A8]
	0x03DBDF4C BL 0x1C16CF4
	0x03DBDF50 MOVZ W8, 0x1
	0x03DBDF54 STRB W8, [X19 + 0xA23]
	0x03DBDF58 LDR X0, [X20]
	0x03DBDF5C LDR W8, [X0 + 0xE0]
	0x03DBDF60 CBNZ W8, 0x3DBDF68
	0x03DBDF64 BL 0x1C16DFC
	0x03DBDF68 MOVZ W10, 0x7F800000
	0x03DBDF6C FRINTM S0, S8
	0x03DBDF70 FCVTMS W9, S8
	0x03DBDF74 FMOV S1, W10
	0x03DBDF78 MOVZ X11, 0x80000000
	0x03DBDF7C UBFM X9, X9, 0x20, 0x1F
	0x03DBDF80 FCMP S0, S1
	0x03DBDF84 LDP X20, X19, [X31 + 0x20]
	0x03DBDF88 LDR X30, [X31 + 0x10]
	0x03DBDF8C FCVTZS W8, S9
	0x03DBDF90 CSEL X9, X11, X9, EQ
	0x03DBDF94 FCMP S9, S1
	0x03DBDF98 MOVZ W10, 0x80000000
	0x03DBDF9C CSEL X8, X10, X8, EQ
	0x03DBDFA0 ORR X0, X8, X9, 0x0
	0x03DBDFA4 LDP D9, D8, [X31], #0x30
	0x03DBDFA8 RET
	0x03DBDFAC STP X30, X19, [X31 - 0x10]!
	0x03DBDFB0 LDRB W8, [X0 + 0x158]
	0x03DBDFB4 CBNZ W8, 0x3DBE004
	0x03DBDFB8 MOV X19, X0
	0x03DBDFBC LDR X0, [X0 + 0xB0]
	0x03DBDFC0 MOVZ W8, 0x1
	0x03DBDFC4 STRB W8, [X19 + 0x158]
	0x03DBDFC8 CBZ X0, 0x3DBE00C
	0x03DBDFCC MOVZ W1, 0x3
	0x03DBDFD0 MOV X2, X31
	0x03DBDFD4 BL 0x3D1DCEC
	0x03DBDFD8 LDR X0, [X19 + 0xB0]
	0x03DBDFDC CBZ X0, 0x3DBE00C
	0x03DBDFE0 MOVZ W1, 0x4
	0x03DBDFE4 MOV X2, X31
	0x03DBDFE8 BL 0x3D1DCEC
	0x03DBDFEC LDR X0, [X19 + 0xB0]
	0x03DBDFF0 CBZ X0, 0x3DBE00C
	0x03DBDFF4 MOVZ W1, 0x5
	0x03DBDFF8 MOV X2, X31
	0x03DBDFFC BL 0x3D1DCEC
	0x03DBE000 STRB W31, [X19 + 0x158]
	0x03DBE004 LDP X30, X19, [X31], #0x10
	0x03DBE008 RET
	0x03DBE00C BL 0x1C16F20
	0x03DBE010 STR X30, [X31 - 0x10]!
	0x03DBE014 LDR X0, [X0 + 0xB0]
	0x03DBE018 CBZ X0, 0x3DBE02C
	0x03DBE01C MOVZ W1, 0x2
	0x03DBE020 MOV X2, X31
	0x03DBE024 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x62C000
	008 Move X21, 0x361000
	009 Move W8, [X22+236]
	010 Move X21, [X21+3336]
	011 Move V8, V0
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x361000
	019 Move X0, [X0+3336]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+236], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X22, 0x62C000
	029 Move W8, [X22+327]
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x361000
	033 Move X0, [X0+3336]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+327], W8
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move X8, [X8+8]
	045 Compare X8, 0
	046 JumpIfEqual {82}
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move W8, [X22+327]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0x361000
	055 Move X0, [X0+3336]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+327], W8
	059 Move X0, [X21]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X21]
	065 Move X8, [X0+184]
	066 Move X8, [X8+8]
	067 Compare X8, 0
	068 JumpIfEqual {93}
	069 Move X4, [X8+24]
	070 Move X0, [X8+64]
	071 Move X3, [X8+40]
	072 Move X1, X20
	073 Move X2, X19
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+8]
	079 Move V0, V8
	080 Move V8, [X31+48]
	081 CallNoReturn X4
	082 Move X0, X20
	083 Move X1, X19
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+8]
	089 Move X2, X31
	090 Move V8, [X31+48]
	091 Call Resources.Load, X0, X1
	092 Return X0
	093 Call 0x1C17F20

Method: System.Void Focus()

Disassembly:
	0x03DBE028 B 0x3D1DCEC
	0x03DBE02C BL 0x1C16F20
	0x03DBE030 STR X30, [X31 - 0x10]!

ISIL:
	001 Move W8, 1
	002 Move [X0+315], W8
	003 Return 

Method: System.Void Blur()

Disassembly:
	0x03DBE034 LDR X0, [X0 + 0xB0]
	0x03DBE038 CBZ X0, 0x3DBE04C
	0x03DBE03C MOVZ W1, 0x1
	0x03DBE040 MOV X2, X31
	0x03DBE044 LDR X30, [X31], #0x10
	0x03DBE048 B 0x3D1DCEC
	0x03DBE04C BL 0x1C16F20
	0x03DBE050 STR X30, [X31 - 0x10]!
	0x03DBE054 LDR X0, [X0 + 0xB0]
	0x03DBE058 CBZ X0, 0x3DBE06C
	0x03DBE05C MOVZ W1, 0x3

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Move X9, [X8+632]
	004 Move X1, [X8+640]
	005 NotImplemented "Instruction BLR not yet implemented."
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Call FocusController.BlurLastFocusedElement, X0
	011 Return 
	012 Move X30, [X31+16]
	013 Return 

Method: System.Void ValidateFocus()

Disassembly:
	0x03DBE060 MOV X2, X31
	0x03DBE064 LDR X30, [X31], #0x10
	0x03DBE068 B 0x3D1DCEC
	0x03DBE06C BL 0x1C16F20
	0x03DBE070 STP X30, X19, [X31 - 0x10]!
	0x03DBE074 MOV X19, X0
	0x03DBE078 LDR X0, [X0 + 0xB0]
	0x03DBE07C CBZ X0, 0x3DBE0E0
	0x03DBE080 MOV W1, W31
	0x03DBE084 MOV X2, X31
	0x03DBE088 BL 0x3D1DCEC
	0x03DBE08C LDR X0, [X19 + 0xB0]
	0x03DBE090 CBZ X0, 0x3DBE0E0
	0x03DBE094 MOVZ W1, 0x3

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+315]
	003 Compare W8, 0
	004 JumpIfEqual {16}
	005 Move X8, [X0]
	006 Move [X0+315], W31
	007 Move X9, [X8+632]
	008 Move X1, [X8+640]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Compare X0, 0
	011 JumpIfEqual {16}
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Call FocusController.SetFocusToLastFocusedElement, X0
	015 Return 
	016 Move X30, [X31+16]
	017 Return 

Method: System.String get_name()

Disassembly:
	0x03DBE098 MOV X2, X31
	0x03DBE09C BL 0x3D1DCEC

ISIL:
	001 Move X0, [X0+192]
	002 Return X0

Method: System.Void set_name(System.String value)

Disassembly:
	0x03DB4E88 MOV X19, X0
	0x03DB4E8C TBNZ X8, 0x0, 0x3DB4EA4

ISIL:
	001 Move [X0+192], X1
	002 Call Panel.CreateMarkers, X0
	003 Return 

Method: System.Void CreateMarkers()

Disassembly:
	0x03DBE0A0 LDR X0, [X19 + 0xB0]
	0x03DBE0A4 CBZ X0, 0x3DBE0E0
	0x03DBE0A8 MOVZ W1, 0x4
	0x03DBE0AC MOV X2, X31
	0x03DBE0B0 BL 0x3D1DCEC
	0x03DBE0B4 LDR X0, [X19 + 0xB0]
	0x03DBE0B8 CBZ X0, 0x3DBE0E0
	0x03DBE0BC MOVZ W1, 0x5
	0x03DBE0C0 MOV X2, X31
	0x03DBE0C4 BL 0x3D1DCEC
	0x03DBE0C8 LDR X0, [X19 + 0xB0]
	0x03DBE0CC CBZ X0, 0x3DBE0E0
	0x03DBE0D0 MOVZ W1, 0x6
	0x03DBE0D4 MOV X2, X31
	0x03DBE0D8 LDP X30, X19, [X31], #0x10
	0x03DBE0DC B 0x3D1DCEC
	0x03DBE0E0 BL 0x1C16F20
	0x03DBE0E4 STR X30, [X31 - 0x30]!
	0x03DBE0E8 STP X22, X21, [X31 + 0x10]
	0x03DBE0EC STP X20, X19, [X31 + 0x20]
	0x03DBE0F0 ADRP X21, 0x62A000
	0x03DBE0F4 LDRB W8, [X21 + 0xF5]
	0x03DBE0F8 MOV X20, X1
	0x03DBE0FC MOV X19, X0
	0x03DBE100 TBNZ X8, 0x0, 0x3DBE124
	0x03DBE104 ADRP X0, 0x361000
	0x03DBE108 LDR X0, [X0 + 0x5C8]
	0x03DBE10C BL 0x1C16CF4
	0x03DBE110 ADRP X0, 0x35F000
	0x03DBE114 LDR X0, [X0 + 0xD08]
	0x03DBE118 BL 0x1C16CF4
	0x03DBE11C MOVZ W8, 0x1
	0x03DBE120 STRB W8, [X21 + 0xF5]
	0x03DBE124 LDR X8, [X19]
	0x03DBE128 MOV X0, X19
	0x03DBE12C LDR X9, [X8 + 0x318]
	0x03DBE130 LDR X1, [X8 + 0x320]
	0x03DBE134 BLR X9
	0x03DBE138 LDR X8, [X19]
	0x03DBE13C STR W0, [X19 + 0xCC]
	0x03DBE140 MOV X0, X19
	0x03DBE144 LDR X9, [X8 + 0x3F8]
	0x03DBE148 LDR X1, [X8 + 0x400]
	0x03DBE14C BLR X9
	0x03DBE150 CMP W0, 0x1
	0x03DBE154 B.NE 0x3DBE180
	0x03DBE158 ADRP X8, 0x361000
	0x03DBE15C LDR X8, [X8 + 0x5C8]
	0x03DBE160 LDR X0, [X8]
	0x03DBE164 LDR W8, [X0 + 0xE0]
	0x03DBE168 CBNZ W8, 0x3DBE170
	0x03DBE16C BL 0x1C16DFC
	0x03DBE170 MOV X0, X31
	0x03DBE174 BL 0x3C6FDD0
	0x03DBE178 MOV X0, X19
	0x03DBE17C BL 0x3DBBEE8
	0x03DBE180 LDR X8, [X19]
	0x03DBE184 MOV X0, X19
	0x03DBE188 LDR X9, [X8 + 0x348]
	0x03DBE18C LDR X1, [X8 + 0x350]
	0x03DBE190 BLR X9
	0x03DBE194 CBZ X0, 0x3DBE2B4
	0x03DBE198 STR X20, [X0 + 0x68]
	0x03DBE19C LDR X20, [X19 + 0xD8]
	0x03DBE1A0 MOV X1, X31
	0x03DBE1A4 MOV X2, X31
	0x03DBE1A8 MOV X0, X20
	0x03DBE1AC BL 0x33C5D2C
	0x03DBE1B0 TBZ X0, 0x0, 0x3DBE1C0
	0x03DBE1B4 MOV X0, X20
	0x03DBE1B8 MOV X1, X31
	0x03DBE1BC BL 0x3BFE970
	0x03DBE1C0 LDR X8, [X19 + 0xA0]
	0x03DBE1C4 CBZ X8, 0x3DBE1DC
	0x03DBE1C8 LDR X0, [X8 + 0x40]
	0x03DBE1CC LDR X9, [X8 + 0x18]
	0x03DBE1D0 LDR X2, [X8 + 0x28]
	0x03DBE1D4 MOV X1, X19
	0x03DBE1D8 BLR X9
	0x03DBE1DC MOV X21, X31
	0x03DBE1E0 MOVZ W22, 0x3
	0x03DBE1E4 MOV X0, X20
	0x03DBE1E8 MOV X1, X31
	0x03DBE1EC MOV X2, X31
	0x03DBE1F0 BL 0x33C5D2C
	0x03DBE1F4 TBZ X0, 0x0, 0x3DBE204
	0x03DBE1F8 MOV X0, X20
	0x03DBE1FC MOV X1, X31
	0x03DBE200 BL 0x3BFEA0C
	0x03DBE204 CBNZ X21, 0x3DBE2B8
	0x03DBE208 CMP W22, 0x3
	0x03DBE20C B.EQ 0x3DBE214
	0x03DBE210 CBNZ W22, 0x3DBE2A4
	0x03DBE214 ADRP X20, 0x35F000
	0x03DBE218 LDR X20, [X20 + 0xD08]
	0x03DBE21C LDR X0, [X20]
	0x03DBE220 LDR W8, [X0 + 0xE0]
	0x03DBE224 CBNZ W8, 0x3DBE230
	0x03DBE228 BL 0x1C16DFC
	0x03DBE22C LDR X0, [X20]
	0x03DBE230 LDR X8, [X0 + 0xB8]
	0x03DBE234 LDR X8, [X8 + 0x18]
	0x03DBE238 CBZ X8, 0x3DBE250
	0x03DBE23C LDR X9, [X8 + 0x18]
	0x03DBE240 LDR X0, [X8 + 0x40]
	0x03DBE244 LDR X2, [X8 + 0x28]
	0x03DBE248 MOV X1, X19
	0x03DBE24C BLR X9
	0x03DBE250 LDR X20, [X19 + 0xE0]
	0x03DBE254 MOV X1, X31
	0x03DBE258 MOV X2, X31
	0x03DBE25C MOV X0, X20
	0x03DBE260 BL 0x33C5D2C
	0x03DBE264 TBZ X0, 0x0, 0x3DBE274
	0x03DBE268 MOV X0, X20
	0x03DBE26C MOV X1, X31
	0x03DBE270 BL 0x3BFE970
	0x03DBE274 MOV X0, X19
	0x03DBE278 BL 0x3DBE070
	0x03DBE27C MOV X19, X31
	0x03DBE280 MOV X0, X20
	0x03DBE284 MOV X1, X31
	0x03DBE288 MOV X2, X31
	0x03DBE28C BL 0x33C5D2C
	0x03DBE290 TBZ X0, 0x0, 0x3DBE2A0
	0x03DBE294 MOV X0, X20
	0x03DBE298 MOV X1, X31
	0x03DBE29C BL 0x3BFEA0C
	0x03DBE2A0 CBNZ X19, 0x3DBE2C0
	0x03DBE2A4 LDP X20, X19, [X31 + 0x20]
	0x03DBE2A8 LDP X22, X21, [X31 + 0x10]
	0x03DBE2AC LDR X30, [X31], #0x30
	0x03DBE2B0 RET
	0x03DBE2B4 BL 0x1C16F20
	0x03DBE2B8 MOV X0, X21
	0x03DBE2BC BL 0x1C16F18
	0x03DBE2C0 MOV X0, X19
	0x03DBE2C4 BL 0x1C16F18
	0x03DBE2C8 CMP W1, 0x1
	0x03DBE2CC MOV X22, X0
	0x03DBE2D0 B.NE 0x3DBE2EC
	0x03DBE2D4 MOV X0, X22
	0x03DBE2D8 BL 0x3EB1AD0
	0x03DBE2DC LDR X21, [X0]
	0x03DBE2E0 BL 0x3EB1AE0
	0x03DBE2E4 MOV W22, W31
	0x03DBE2E8 B 0x3DBE1E4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x62B000
	008 Move W8, [X20+237]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {46}
	014 Move X0, 0x3AB000
	015 Move X0, [X0+4000]
	016 Call 0x1C17CF4
	017 Move X0, 0x3AB000
	018 Move X0, [X0+4008]
	019 Call 0x1C17CF4
	020 Move X0, 0x3AB000
	021 Move X0, [X0+4016]
	022 Call 0x1C17CF4
	023 Move X0, 0x3AB000
	024 Move X0, [X0+4024]
	025 Call 0x1C17CF4
	026 Move X0, 0x3AB000
	027 Move X0, [X0+4032]
	028 Call 0x1C17CF4
	029 Move X0, 0x3AB000
	030 Move X0, [X0+4040]
	031 Call 0x1C17CF4
	032 Move X0, 0x3AB000
	033 Move X0, [X0+4048]
	034 Call 0x1C17CF4
	035 Move X0, 0x3AB000
	036 Move X0, [X0+4056]
	037 Call 0x1C17CF4
	038 Move X0, 0x3AB000
	039 Move X0, [X0+4064]
	040 Call 0x1C17CF4
	041 Move X0, 0x3AB000
	042 Move X0, [X0+4072]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+237], W8
	046 Move X0, [X19+192]
	047 Move X1, X31
	048 Call String.IsNullOrEmpty, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {92}
	053 Move X8, 0x3AB000
	054 Move X8, [X8+4032]
	055 Move X20, 0x3AB000
	056 Move X20, [X20+4056]
	057 Move X21, 0x3AB000
	058 Move X0, [X8]
	059 Move X22, 0x3AB000
	060 Move X23, 0x3AB000
	061 Move X21, [X21+4048]
	062 Move X22, [X22+4040]
	063 Move X23, [X23+4072]
	064 Move W1, 1
	065 Move W2, W31
	066 Move W3, W31
	067 Move X4, X31
	068 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	069 Move [X19+216], X0
	070 Move X0, [X20]
	071 Move W1, 1
	072 Move W2, W31
	073 Move W3, W31
	074 Move X4, X31
	075 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	076 Move [X19+224], X0
	077 Move X0, [X21]
	078 Move W1, 1
	079 Move W2, W31
	080 Move W3, W31
	081 Move X4, X31
	082 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	083 Move [X19+232], X0
	084 Move X0, [X22]
	085 Move W1, 1
	086 Move W2, W31
	087 Move W3, W31
	088 Move X4, X31
	089 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	090 Move [X19+240], X0
	091 Move X0, [X23]
	092 Move X8, 0x3AB000
	093 Move X8, [X8+4064]
	094 Move X21, 0x3AB000
	095 Move X21, [X21+4016]
	096 Move X1, [X19+192]
	097 Move X0, [X8]
	098 Move X22, 0x3AB000
	099 Move X23, 0x3AB000
	100 Move X20, 0x3AB000
	101 Move X22, [X22+4000]
	102 Move X23, [X23+4008]
	103 Move X20, [X20+4024]
	104 Move X2, X31
	105 Call String.Concat, X0, X1
	106 Move W1, 1
	107 Move W2, W31
	108 Move W3, W31
	109 Move X4, X31
	110 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	111 Move [X19+216], X0
	112 Move X1, [X19+192]
	113 Move X0, [X21]
	114 Move X2, X31
	115 Call String.Concat, X0, X1
	116 Move W1, 1
	117 Move W2, W31
	118 Move W3, W31
	119 Move X4, X31
	120 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	121 Move [X19+224], X0
	122 Move X1, [X19+192]
	123 Move X0, [X22]
	124 Move X2, X31
	125 Call String.Concat, X0, X1
	126 Move W1, 1
	127 Move W2, W31
	128 Move W3, W31
	129 Move X4, X31
	130 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	131 Move [X19+232], X0
	132 Move X1, [X19+192]
	133 Move X0, [X23]
	134 Move X2, X31
	135 Call String.Concat, X0, X1
	136 Move W1, 1
	137 Move W2, W31
	138 Move W3, W31
	139 Move X4, X31
	140 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	141 Move [X19+240], X0
	142 Move X1, [X19+192]
	143 Move X0, [X20]
	144 Move X2, X31
	145 Call String.Concat, X0, X1
	146 Move W1, 1
	147 Move W2, W31
	148 Move W3, W31
	149 Move X4, X31
	150 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	151 Move [X19+248], X0
	152 Move X20, [X31+32]
	153 Move X19, [X31+40]
	154 Move X22, [X31+16]
	155 Move X21, [X31+24]
	156 Move X30, [X31+48]
	157 Move X23, [X31+56]
	158 Return 

Method: UnityEngine.UIElements.TimeMsFunction get_TimeSinceStartup()

Disassembly:
	0x03DBE2EC MOV X21, X31
	0x03DBE2F0 B 0x3DBE2F8
	0x03DBE2F4 MOV X22, X0
	0x03DBE2F8 MOV X0, X20
	0x03DBE2FC MOV X1, X31
	0x03DBE300 MOV X2, X31
	0x03DBE304 BL 0x33C5D2C
	0x03DBE308 TBZ X0, 0x0, 0x3DBE318
	0x03DBE30C MOV X0, X20
	0x03DBE310 MOV X1, X31
	0x03DBE314 BL 0x3BFEA0C
	0x03DBE318 CBZ X21, 0x3DBE374
	0x03DBE31C MOV X0, X21
	0x03DBE320 BL 0x1C16F18
	0x03DBE324 CMP W1, 0x1
	0x03DBE328 MOV X22, X0
	0x03DBE32C B.NE 0x3DBE344
	0x03DBE330 MOV X0, X22
	0x03DBE334 BL 0x3EB1AD0
	0x03DBE338 LDR X19, [X0]
	0x03DBE33C BL 0x3EB1AE0
	0x03DBE340 B 0x3DBE280

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x62B000
	005 Move X19, 0x360000
	006 Move W8, [X20+238]
	007 Move X19, [X19+3336]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x360000
	013 Move X0, [X0+3336]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+238], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Int32 get_IMGUIContainersCount()

Disassembly:
	0x03DBE344 MOV X19, X31
	0x03DBE348 B 0x3DBE350

ISIL:
	001 Move W0, [X0+316]
	002 Return X0

Method: System.Void set_IMGUIContainersCount(System.Int32 value)

Disassembly:
	0x03DBE34C MOV X22, X0
	0x03DBE350 MOV X0, X20

ISIL:
	001 Move [X0+316], W1
	002 Return 

Method: UnityEngine.UIElements.IMGUIContainer get_rootIMGUIContainer()

Disassembly:
	0x03DBE354 MOV X1, X31
	0x03DBE358 MOV X2, X31

ISIL:
	001 Move X0, [X0+320]
	002 Return X0

Method: System.UInt32 get_version()

Disassembly:
	0x03DBE35C BL 0x33C5D2C
	0x03DBE360 TBZ X0, 0x0, 0x3DBE370

ISIL:
	001 Move W0, [X0+200]
	002 Return X0

Method: System.UInt32 get_hierarchyVersion()

Disassembly:
	0x03DBE364 MOV X0, X20
	0x03DBE368 MOV X1, X31

ISIL:
	001 Move W0, [X0+208]
	002 Return X0

Method: UnityEngine.Shader get_standardShader()

Disassembly:
	0x03DBE36C BL 0x3BFEA0C
	0x03DBE370 CBNZ X19, 0x3DBE37C

ISIL:
	001 Move X0, [X0+328]
	002 Return X0

Method: UnityEngine.UIElements.AtlasBase get_atlas()

Disassembly:
	0x03DBE374 MOV X0, X22
	0x03DBE378 BL 0x1D2C690

ISIL:
	001 Move X0, [X0+336]
	002 Return X0

Method: System.Void set_atlas(UnityEngine.UIElements.AtlasBase value)

Disassembly:
	0x03DBE37C MOV X0, X19
	0x03DBE380 BL 0x1C16F18
	0x03DBE384 BL 0x1990590
	0x03DBE388 STR X30, [X31 - 0x20]!
	0x03DBE38C STP X20, X19, [X31 + 0x10]
	0x03DBE390 LDR W8, [X0 + 0xC8]
	0x03DBE394 MOV X19, X0
	0x03DBE398 LDR X0, [X0 + 0xB0]
	0x03DBE39C ADD W8, W8, 0x1
	0x03DBE3A0 STR W8, [X19 + 0xC8]
	0x03DBE3A4 CBZ X0, 0x3DBE3D0
	0x03DBE3A8 MOV X3, X31
	0x03DBE3AC MOV W20, W2
	0x03DBE3B0 BL 0x3D1DEE8
	0x03DBE3B4 TBZ X20, 0x2, 0x3DBE3C4
	0x03DBE3B8 LDR W8, [X19 + 0xD0]
	0x03DBE3BC ADD W8, W8, 0x1
	0x03DBE3C0 STR W8, [X19 + 0xD0]
	0x03DBE3C4 LDP X20, X19, [X31 + 0x10]
	0x03DBE3C8 LDR X30, [X31], #0x20
	0x03DBE3CC RET
	0x03DBE3D0 BL 0x1C16F20
	0x03DBE3D4 STR X30, [X31 - 0x10]!
	0x03DBE3D8 LDR X0, [X0 + 0xB0]
	0x03DBE3DC CBZ X0, 0x3DBE3EC
	0x03DBE3E0 MOV X2, X31
	0x03DBE3E4 LDR X30, [X31], #0x10
	0x03DBE3E8 B 0x3D1DFD0
	0x03DBE3EC BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+336]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X20, X1
	008 Compare X0, 0
	009 JumpIfEqual {13}
	010 Move X1, X19
	011 Move X2, X31
	012 Call AtlasBase.InvokeRemovedFromPanel, X0, X1
	013 Move X8, [X19+136]
	014 Move [X19+336], X20
	015 Compare X8, 0
	016 JumpIfEqual {22}
	017 Move X9, [X8+24]
	018 Move X0, [X8+64]
	019 Move X1, [X8+40]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Move X20, [X19+336]
	022 Compare X20, 0
	023 JumpIfEqual {32}
	024 Move X0, X20
	025 Move X1, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Call AtlasBase.InvokeAssignedToPanel, X0, X1
	031 Return 
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 

Method: System.Void .ctor(UnityEngine.ScriptableObject ownerObject, UnityEngine.UIElements.ContextType contextType, UnityEngine.UIElements.EventDispatcher dispatcher)

Disassembly:
	0x03DBE3F0 STP X30, X21, [X31 - 0x20]!
	0x03DBE3F4 STP X20, X19, [X31 + 0x10]
	0x03DBE3F8 ADRP X20, 0x62A000
	0x03DBE3FC ADRP X21, 0x3AB000
	0x03DBE400 ADRP X19, 0x35F000
	0x03DBE404 LDRB W8, [X20 + 0xF6]
	0x03DBE408 LDR X21, [X21 + 0x20]
	0x03DBE40C LDR X19, [X19 + 0xD08]
	0x03DBE410 TBNZ X8, 0x0, 0x3DBE434
	0x03DBE414 ADRP X0, 0x35F000
	0x03DBE418 LDR X0, [X0 + 0xD08]
	0x03DBE41C BL 0x1C16CF4
	0x03DBE420 ADRP X0, 0x3AB000
	0x03DBE424 LDR X0, [X0 + 0x20]
	0x03DBE428 BL 0x1C16CF4
	0x03DBE42C MOVZ W8, 0x1
	0x03DBE430 STRB W8, [X20 + 0xF6]
	0x03DBE434 LDR X0, [X21]
	0x03DBE438 MOVZ W1, 0x1
	0x03DBE43C MOV W2, W31
	0x03DBE440 MOV W3, W31
	0x03DBE444 MOV X4, X31
	0x03DBE448 BL 0x3BFE7FC
	0x03DBE44C LDR X8, [X19]
	0x03DBE450 LDP X20, X19, [X31 + 0x10]
	0x03DBE454 LDR X8, [X8 + 0xB8]
	0x03DBE458 STR X0, [X8]
	0x03DBE45C LDP X30, X21, [X31], #0x20
	0x03DBE460 RET
	0x03DBE464 LDR X0, [X0 + 0x160]
	0x03DBE468 RET
	0x03DBE46C STR X30, [X31 - 0x30]!
	0x03DBE470 STP X22, X21, [X31 + 0x10]
	0x03DBE474 STP X20, X19, [X31 + 0x20]
	0x03DBE478 ADRP X22, 0x62A000
	0x03DBE47C ADRP X21, 0x335000
	0x03DBE480 LDRB W8, [X22 + 0xF7]
	0x03DBE484 LDR X21, [X21 + 0x598]
	0x03DBE488 MOV X20, X1
	0x03DBE48C MOV X19, X0
	0x03DBE490 TBNZ X8, 0x0, 0x3DBE4A8
	0x03DBE494 ADRP X0, 0x335000
	0x03DBE498 LDR X0, [X0 + 0x598]
	0x03DBE49C BL 0x1C16CF4
	0x03DBE4A0 MOVZ W8, 0x1
	0x03DBE4A4 STRB W8, [X22 + 0xF7]
	0x03DBE4A8 LDR X0, [X21]
	0x03DBE4AC LDR X21, [X19 + 0x160]
	0x03DBE4B0 LDR W8, [X0 + 0xE0]
	0x03DBE4B4 CBNZ W8, 0x3DBE4BC
	0x03DBE4B8 BL 0x1C16DFC
	0x03DBE4BC MOV X0, X21
	0x03DBE4C0 MOV X1, X20
	0x03DBE4C4 MOV X2, X31
	0x03DBE4C8 BL 0x3C354F8
	0x03DBE4CC TBZ X0, 0x0, 0x3DBE4F8
	0x03DBE4D0 MOV X0, X19
	0x03DBE4D4 MOV X1, X31
	0x03DBE4D8 BL 0x3DBE508
	0x03DBE4DC STR X20, [X19 + 0x160]
	0x03DBE4E0 MOV X0, X19
	0x03DBE4E4 MOV X1, X19
	0x03DBE4E8 LDP X20, X19, [X31 + 0x20]
	0x03DBE4EC LDP X22, X21, [X31 + 0x10]
	0x03DBE4F0 LDR X30, [X31], #0x30
	0x03DBE4F4 B 0x3DBE508
	0x03DBE4F8 LDP X20, X19, [X31 + 0x20]
	0x03DBE4FC LDP X22, X21, [X31 + 0x10]
	0x03DBE500 LDR X30, [X31], #0x30
	0x03DBE504 RET
	0x03DBE508 SUB X31, X31, 0x80
	0x03DBE50C STR X30, [X31 + 0x40]
	0x03DBE510 STP X24, X23, [X31 + 0x50]
	0x03DBE514 STP X22, X21, [X31 + 0x60]
	0x03DBE518 STP X20, X19, [X31 + 0x70]
	0x03DBE51C ADRP X22, 0x62A000
	0x03DBE520 ADRP X21, 0x335000
	0x03DBE524 LDRB W8, [X22 + 0x103]
	0x03DBE528 LDR X21, [X21 + 0x598]
	0x03DBE52C MOV X20, X1
	0x03DBE530 MOV X19, X0
	0x03DBE534 TBNZ X8, 0x0, 0x3DBE5B8
	0x03DBE538 ADRP X0, 0x3AB000
	0x03DBE53C LDR X0, [X0 + 0x28]
	0x03DBE540 BL 0x1C16CF4
	0x03DBE544 ADRP X0, 0x3AB000
	0x03DBE548 LDR X0, [X0 + 0x30]
	0x03DBE54C BL 0x1C16CF4
	0x03DBE550 ADRP X0, 0x3AB000
	0x03DBE554 LDR X0, [X0 + 0x38]
	0x03DBE558 BL 0x1C16CF4
	0x03DBE55C ADRP X0, 0x3AB000
	0x03DBE560 LDR X0, [X0 + 0x40]
	0x03DBE564 BL 0x1C16CF4
	0x03DBE568 ADRP X0, 0x3AB000
	0x03DBE56C LDR X0, [X0 + 0x48]
	0x03DBE570 BL 0x1C16CF4
	0x03DBE574 ADRP X0, 0x3AB000
	0x03DBE578 LDR X0, [X0 + 0x50]
	0x03DBE57C BL 0x1C16CF4
	0x03DBE580 ADRP X0, 0x3AB000
	0x03DBE584 LDR X0, [X0 + 0x58]
	0x03DBE588 BL 0x1C16CF4
	0x03DBE58C ADRP X0, 0x3AB000
	0x03DBE590 LDR X0, [X0 + 0x60]
	0x03DBE594 BL 0x1C16CF4
	0x03DBE598 ADRP X0, 0x3AB000
	0x03DBE59C LDR X0, [X0 + 0x68]
	0x03DBE5A0 BL 0x1C16CF4
	0x03DBE5A4 ADRP X0, 0x335000
	0x03DBE5A8 LDR X0, [X0 + 0x598]
	0x03DBE5AC BL 0x1C16CF4
	0x03DBE5B0 MOVZ W8, 0x1
	0x03DBE5B4 STRB W8, [X22 + 0x103]
	0x03DBE5B8 LDR X0, [X21]
	0x03DBE5BC STP X31, X31, [X31 + 0x20]
	0x03DBE5C0 STR X31, [X31 + 0x30]
	0x03DBE5C4 LDR X21, [X19 + 0x160]
	0x03DBE5C8 LDR W8, [X0 + 0xE0]
	0x03DBE5CC CBNZ W8, 0x3DBE5D4
	0x03DBE5D0 BL 0x1C16DFC
	0x03DBE5D4 MOV X0, X21
	0x03DBE5D8 MOV X1, X31
	0x03DBE5DC MOV X2, X31
	0x03DBE5E0 BL 0x3C3883C
	0x03DBE5E4 TBNZ X0, 0x0, 0x3DBE730
	0x03DBE5E8 ADRP X23, 0x3AB000
	0x03DBE5EC LDR X23, [X23 + 0x68]
	0x03DBE5F0 ADRP X21, 0x3AB000
	0x03DBE5F4 LDR X0, [X23]
	0x03DBE5F8 LDR W8, [X0 + 0xE0]
	0x03DBE5FC LDR X21, [X21 + 0x58]
	0x03DBE600 CBNZ W8, 0x3DBE608
	0x03DBE604 BL 0x1C16DFC
	0x03DBE608 LDR X0, [X21]
	0x03DBE60C BL 0x2491CF8
	0x03DBE610 LDR X8, [X19 + 0x160]
	0x03DBE614 MOV X19, X0
	0x03DBE618 CBZ X8, 0x3DBE74C
	0x03DBE61C ADRP X9, 0x3AB000
	0x03DBE620 LDR X9, [X9 + 0x40]
	0x03DBE624 LDR X2, [X9]
	0x03DBE628 MOV X0, X8
	0x03DBE62C MOV X1, X19
	0x03DBE630 BL 0x21E5DE8
	0x03DBE634 CBZ X19, 0x3DBE758
	0x03DBE638 ADRP X8, 0x3AB000
	0x03DBE63C LDR X8, [X8 + 0x50]
	0x03DBE640 LDR X1, [X8]
	0x03DBE644 ADD X8, X31, 0x8
	0x03DBE648 MOV X0, X19
	0x03DBE64C BL 0x301CB58
	0x03DBE650 LDUR V0, [X31 + 0x8]
	0x03DBE654 LDR X8, [X31 + 0x18]
	0x03DBE658 ADRP X22, 0x3AB000
	0x03DBE65C LDR X22, [X22 + 0x30]
	0x03DBE660 STR V0, [X31 + 0x2]
	0x03DBE664 STR X8, [X31 + 0x30]
	0x03DBE668 ADRP X24, 0x3AB000
	0x03DBE66C LDR X24, [X24 + 0x48]
	0x03DBE670 LDR X1, [X22]
	0x03DBE674 ADD X0, X31, 0x20
	0x03DBE678 BL 0x2BC4350
	0x03DBE67C TBZ X0, 0x0, 0x3DBE6E8
	0x03DBE680 LDR X21, [X31 + 0x30]
	0x03DBE684 CBZ X21, 0x3DBE748
	0x03DBE688 LDR X8, [X21]
	0x03DBE68C LDR X1, [X24]
	0x03DBE690 LDRH W9, [X8 + 0x12E]
	0x03DBE694 CBZ X9, 0x3DBE6B8
	0x03DBE698 LDR X10, [X8 + 0xB0]
	0x03DBE69C ADD X10, X10, 0x8
	0x03DBE6A0 LDUR X11, [X10 - 0x8]
	0x03DBE6A4 CMP X11, X1
	0x03DBE6A8 B.EQ 0x3DBE6C8
	0x03DBE6AC SUBS X9, X9, 0x1
	0x03DBE6B0 ADD X10, X10, 0x10
	0x03DBE6B4 B.NE 0x3DBE6A0
	0x03DBE6B8 MOV X0, X21
	0x03DBE6BC MOV W2, W31
	0x03DBE6C0 BL 0x1C5C788
	0x03DBE6C4 B 0x3DBE6D4
	0x03DBE6C8 LDRSW X9, [X10]
	0x03DBE6CC ADD X8, X8, X9, 0x4, LSL
	0x03DBE6D0 ADD X0, X8, 0x138
	0x03DBE6D4 LDP X8, X2, [X0]
	0x03DBE6D8 MOV X0, X21
	0x03DBE6DC MOV X1, X20
	0x03DBE6E0 BLR X8
	0x03DBE6E4 B 0x3DBE670
	0x03DBE6E8 MOV X20, X31
	0x03DBE6EC ADRP X8, 0x3AB000
	0x03DBE6F0 LDR X8, [X8 + 0x28]
	0x03DBE6F4 LDR X1, [X8]
	0x03DBE6F8 ADD X0, X31, 0x20
	0x03DBE6FC BL 0x2BC434C
	0x03DBE700 CBNZ X20, 0x3DBE75C
	0x03DBE704 MOV X21, X31
	0x03DBE708 LDR X0, [X23]
	0x03DBE70C LDR W8, [X0 + 0xE0]
	0x03DBE710 CBNZ W8, 0x3DBE718
	0x03DBE714 BL 0x1C16DFC
	0x03DBE718 ADRP X8, 0x3AB000
	0x03DBE71C LDR X8, [X8 + 0x60]
	0x03DBE720 MOV X0, X19
	0x03DBE724 LDR X1, [X8]
	0x03DBE728 BL 0x2491D90
	0x03DBE72C CBNZ X21, 0x3DBE750
	0x03DBE730 LDP X20, X19, [X31 + 0x70]
	0x03DBE734 LDP X22, X21, [X31 + 0x60]
	0x03DBE738 LDP X24, X23, [X31 + 0x50]
	0x03DBE73C LDR X30, [X31 + 0x40]
	0x03DBE740 ADD X31, X31, 0x80
	0x03DBE744 RET
	0x03DBE748 BL 0x1C16F20
	0x03DBE74C BL 0x1C16F20
	0x03DBE750 MOV X0, X21
	0x03DBE754 BL 0x1C16F18
	0x03DBE758 BL 0x1C16F20
	0x03DBE75C MOV X0, X20
	0x03DBE760 BL 0x1C16F18
	0x03DBE764 B 0x3DBE770
	0x03DBE768 B 0x3DBE770
	0x03DBE76C B 0x3DBE770
	0x03DBE770 MOV X21, X1
	0x03DBE774 MOV X22, X0
	0x03DBE778 B 0x3DBE7C4
	0x03DBE77C B 0x3DBE784
	0x03DBE780 B 0x3DBE784
	0x03DBE784 MOV X21, X1
	0x03DBE788 MOV X22, X0
	0x03DBE78C CMP W21, 0x1

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x62B000
	013 Move X28, 0x3AB000
	014 Move X26, 0x3AB000
	015 Move X25, 0x3AC000
	016 Move X24, 0x35E000
	017 Move X23, 0x3A6000
	018 Move W8, [X27+239]
	019 Move X28, [X28+4080]
	020 Move X26, [X26+4088]
	021 Move X25, [X25]
	022 Move X24, [X24+2200]
	023 Move X23, [X23+2840]
	024 Move X21, X3
	025 Move W20, W2
	026 Move X22, X1
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {67}
	032 Move X0, 0x3AB000
	033 Move X0, [X0+4088]
	034 Call 0x1C17CF4
	035 Move X0, 0x3AB000
	036 Move X0, [X0+3248]
	037 Call 0x1C17CF4
	038 Move X0, 0x3AB000
	039 Move X0, [X0+3312]
	040 Call 0x1C17CF4
	041 Move X0, 0x3AB000
	042 Move X0, [X0+4080]
	043 Call 0x1C17CF4
	044 Move X0, 0x3AC000
	045 Move X0, [X0+8]
	046 Call 0x1C17CF4
	047 Move X0, 0x3AB000
	048 Move X0, [X0+3200]
	049 Call 0x1C17CF4
	050 Move X0, 0x3A6000
	051 Move X0, [X0+2840]
	052 Call 0x1C17CF4
	053 Move X0, 0x35E000
	054 Move X0, [X0+2200]
	055 Call 0x1C17CF4
	056 Move X0, 0x3AC000
	057 Move X0, [X0]
	058 Call 0x1C17CF4
	059 Move X0, 0x3AC000
	060 Move X0, [X0+16]
	061 Call 0x1C17CF4
	062 Move X0, 0x3AC000
	063 Move X0, [X0+24]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X27+239], W8
	067 Move X27, 0x3AC000
	068 Move X27, [X27+16]
	069 Move X0, X19
	070 Move [X19+200], X31
	071 Move [X19+208], W31
	072 Move [X19+344], W31
	073 Call BaseVisualElementPanel..ctor, X0
	074 Move X8, [X19]
	075 Move X0, X19
	076 Move X1, X22
	077 Move X9, [X8+552]
	078 Move X2, [X8+560]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X8, [X19]
	081 Move X0, X19
	082 Move W1, W20
	083 Move X9, [X8+1032]
	084 Move X2, [X8+1040]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, [X19]
	087 Move X0, X19
	088 Move X1, X21
	089 Move X9, [X8+952]
	090 Move X2, [X8+960]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X0, [X28]
	093 Call 0x1C17F10
	094 Move X21, X0
	095 Call RepaintData..ctor, X0
	096 Move X8, [X19]
	097 Move X0, X19
	098 Move X1, X21
	099 Move X9, [X8+856]
	100 Move X2, [X8+864]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X0, [X26]
	103 Call 0x1C17F10
	104 Move X1, X31
	105 Move X21, X0
	106 Call CursorManager..ctor, X0
	107 Move X8, [X19]
	108 Move X0, X19
	109 Move X1, X21
	110 Move X9, [X8+888]
	111 Move X2, [X8+896]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move [X19+96], X31
	114 Move X0, [X25]
	115 Call 0x1C17F10
	116 Move X1, X19
	117 Move X2, X31
	118 Move X21, X0
	119 Call VisualTreeUpdater..ctor, X0, X1
	120 Move [X19+176], X21
	121 Move X0, [X24]
	122 Call 0x1C17F10
	123 Move X1, X31
	124 Move X21, X0
	125 Call VisualElement..ctor, X0
	126 Move X0, [X23]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, [X27]
	132 Move X1, X31
	133 Call VisualElementUtils.GetUniqueName, X0
	134 Compare X21, 0
	135 JumpIfEqual {249}
	136 Move X22, 0x3AC000
	137 Move X22, [X22+24]
	138 Move X1, X0
	139 Move X0, X21
	140 Move X2, X31
	141 Call VisualElement.set_name, X0, X1
	142 Move X1, [X22]
	143 Move X0, X21
	144 Move X2, X31
	145 Call VisualElement.set_viewDataKey, X0, X1
	146 NotImplemented "Instruction CMP not yet implemented."
	147 NotImplemented "Instruction CSET not yet implemented."
	148 Move X0, X21
	149 Move X2, X31
	150 Call VisualElement.set_pickingMode, X0, X1
	151 Move W1, 0x80000000
	152 Move X0, X21
	153 Move X2, X31
	154 Call VisualElement.set_eventCallbackCategories, X0, X1
	155 Move X8, [X19]
	156 Move [X19+168], X21
	157 Move X0, X19
	158 Move X9, [X8+920]
	159 Move X1, [X8+928]
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Compare X0, 0
	162 JumpIfEqual {249}
	163 Move X20, 0x3AB000
	164 Move X23, 0x3AB000
	165 Move X24, 0x3AC000
	166 Move X22, 0x3AB000
	167 Move X20, [X20+3200]
	168 Move X23, [X23+3312]
	169 Move X24, [X24+8]
	170 Move X22, [X22+3248]
	171 Move X1, X19
	172 Move X2, X31
	173 Call VisualElement.SetPanel, X0, X1
	174 Move X8, [X19]
	175 Move X0, X19
	176 Move X9, [X8+920]
	177 Move X1, [X8+928]
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Move X8, [X20]
	180 Move X20, X0
	181 Move X0, X8
	182 Call 0x1C17F10
	183 Move X1, X20
	184 Move W2, W31
	185 Move X3, X31
	186 Move X21, X0
	187 Call VisualElementFocusRing..ctor, X0, X1, X2
	188 Move X0, [X23]
	189 Call 0x1C17F10
	190 Move X1, X21
	191 Move X2, X31
	192 Move X20, X0
	193 Call FocusController..ctor, X0, X1
	194 Move X8, [X19]
	195 Move X0, X19
	196 Move X1, X20
	197 Move X9, [X8+648]
	198 Move X2, [X8+656]
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X0, [X24]
	201 Call 0x1C17F10
	202 Move X1, X31
	203 Move X20, X0
	204 Call StylePropertyAnimationSystem..ctor, X0
	205 Move X8, [X19]
	206 Move X0, X19
	207 Move X1, X20
	208 Move X9, [X8+1000]
	209 Move X2, [X8+1008]
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move X0, X19
	212 Call Panel.CreateMarkers, X0
	213 Move X8, [X19]
	214 Move X0, X19
	215 Move X9, [X8+920]
	216 Move X1, [X8+928]
	217 NotImplemented "Instruction BLR not yet implemented."
	218 Move X8, [X19+152]
	219 Compare X8, 0
	220 JumpIfEqual {227}
	221 Move X1, X0
	222 Move X9, [X8+24]
	223 Move X0, [X8+64]
	224 Move X3, [X8+40]
	225 Move W2, W31
	226 NotImplemented "Instruction BLR not yet implemented."
	227 Move X0, [X22]
	228 Call 0x1C17F10
	229 Move X1, X31
	230 Move X20, X0
	231 Call DynamicAtlas..ctor, X0
	232 Move X8, [X19]
	233 Move X0, X19
	234 Move X1, X20
	235 Move X20, [X31+80]
	236 Move X19, [X31+88]
	237 Move X3, [X8+1144]
	238 Move X2, [X8+1152]
	239 Move X22, [X31+64]
	240 Move X21, [X31+72]
	241 Move X24, [X31+48]
	242 Move X23, [X31+56]
	243 Move X26, [X31+32]
	244 Move X25, [X31+40]
	245 Move X28, [X31+16]
	246 Move X27, [X31+24]
	247 Move X30, [X31+96]
	248 CallNoReturn X3
	249 Call 0x1C17F20

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03DBE790 B.NE 0x3DBE7A8
	0x03DBE794 MOV X0, X22
	0x03DBE798 BL 0x3EB1AD0
	0x03DBE79C LDR X20, [X0]
	0x03DBE7A0 BL 0x3EB1AE0
	0x03DBE7A4 B 0x3DBE6EC
	0x03DBE7A8 MOV X20, X31
	0x03DBE7AC ADRP X8, 0x3AB000
	0x03DBE7B0 LDR X8, [X8 + 0x28]
	0x03DBE7B4 LDR X1, [X8]
	0x03DBE7B8 ADD X0, X31, 0x20
	0x03DBE7BC BL 0x2BC434C
	0x03DBE7C0 CBNZ X20, 0x3DBE7E8
	0x03DBE7C4 CMP W21, 0x1
	0x03DBE7C8 B.NE 0x3DBE7E0
	0x03DBE7CC MOV X0, X22
	0x03DBE7D0 BL 0x3EB1AD0
	0x03DBE7D4 LDR X21, [X0]
	0x03DBE7D8 BL 0x3EB1AE0
	0x03DBE7DC B 0x3DBE708
	0x03DBE7E0 MOV X21, X31
	0x03DBE7E4 B 0x3DBE800
	0x03DBE7E8 MOV X0, X20
	0x03DBE7EC BL 0x1C16F18
	0x03DBE7F0 MOV X21, X1
	0x03DBE7F4 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+104]
	005 Compare W8, 0
	006 JumpIfEqual {11}
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move X30, [X31+32]
	010 Return 
	011 Move X19, X0
	012 Move W20, W1
	013 Move TEMP, X1
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {28}
	017 Move X8, [X19]
	018 Move X0, X19
	019 Move X1, X31
	020 Move X9, [X8+1144]
	021 Move X2, [X8+1152]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X0, [X19+176]
	024 Compare X0, 0
	025 JumpIfEqual {35}
	026 Move X1, X31
	027 Call VisualTreeUpdater.Dispose, X0
	028 And W1, W20, 1
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Call BaseVisualElementPanel.Dispose, X0, X1
	034 Return 
	035 Call 0x1C17F20

Method: System.Int64 TimeSinceStartupMs()

Disassembly:
	0x03DBE7F8 B 0x3DBE7AC
	0x03DBE7FC MOV X22, X0
	0x03DBE800 LDR X0, [X23]
	0x03DBE804 LDR W8, [X0 + 0xE0]
	0x03DBE808 CBNZ W8, 0x3DBE810
	0x03DBE80C BL 0x1C16DFC
	0x03DBE810 ADRP X8, 0x3AB000
	0x03DBE814 LDR X8, [X8 + 0x60]
	0x03DBE818 LDR X1, [X8]
	0x03DBE81C MOV X0, X19
	0x03DBE820 BL 0x2491D90
	0x03DBE824 CBNZ X21, 0x3DBE830
	0x03DBE828 MOV X0, X22
	0x03DBE82C BL 0x1D2C690
	0x03DBE830 MOV X0, X21
	0x03DBE834 BL 0x1C16F18
	0x03DBE838 BL 0x1990590
	0x03DBE83C LDR V0, [X0 + 0x16C]
	0x03DBE840 RET
	0x03DBE844 STR X30, [X31 - 0x30]!
	0x03DBE848 STP X22, X21, [X31 + 0x10]
	0x03DBE84C STP X20, X19, [X31 + 0x20]
	0x03DBE850 ADRP X21, 0x62A000
	0x03DBE854 LDRB W8, [X21 + 0xF9]
	0x03DBE858 MOV X19, X1
	0x03DBE85C MOV X20, X0
	0x03DBE860 TBNZ X8, 0x0, 0x3DBE878
	0x03DBE864 ADRP X0, 0x336000
	0x03DBE868 LDR X0, [X0 + 0xE70]
	0x03DBE86C BL 0x1C16CF4
	0x03DBE870 MOVZ W8, 0x1
	0x03DBE874 STRB W8, [X21 + 0xF9]
	0x03DBE878 ADRP X22, 0x336000
	0x03DBE87C LDR X21, [X20 + 0x178]
	0x03DBE880 LDR X22, [X22 + 0xE70]
	0x03DBE884 ADD X20, X20, 0x178
	0x03DBE888 MOV X0, X21
	0x03DBE88C MOV X1, X19
	0x03DBE890 MOV X2, X31
	0x03DBE894 BL 0x33C0DE4
	0x03DBE898 MOV X8, X0
	0x03DBE89C CBZ X0, 0x3DBE8B0
	0x03DBE8A0 LDR X1, [X22]
	0x03DBE8A4 LDR X9, [X8]
	0x03DBE8A8 CMP X9, X1
	0x03DBE8AC B.NE 0x3DBE8DC
	0x03DBE8B0 MOV X0, X20
	0x03DBE8B4 MOV X1, X8
	0x03DBE8B8 MOV X2, X21
	0x03DBE8BC BL 0x1C24138
	0x03DBE8C0 CMP X21, X0
	0x03DBE8C4 MOV X21, X0
	0x03DBE8C8 B.NE 0x3DBE888
	0x03DBE8CC LDP X20, X19, [X31 + 0x20]
	0x03DBE8D0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x62B000
	005 Move X19, 0x360000
	006 Move W8, [X20+240]
	007 Move X19, [X19+3336]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x360000
	013 Move X0, [X0+3336]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+240], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, 0x62B000
	023 Move W8, [X20+328]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x360000
	027 Move X0, [X0+3336]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+328], W8
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X19]
	037 Move X8, [X0+184]
	038 Move X8, [X8+16]
	039 Compare X8, 0
	040 JumpIfEqual {48}
	041 Move X2, [X8+24]
	042 Move X0, [X8+64]
	043 Move X1, [X8+40]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 CallNoReturn X2
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X31
	053 Call Time.get_realtimeSinceStartup
	054 Move W8, 0x447A0000
	055 Move W9, 0x7F800000
	056 Move S1, W8
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Multiply S0, S0, S1
	060 Move S1, W9
	061 NotImplemented "Instruction FCVTZS not yet implemented."
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move X9, 0x80000000
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Move X30, [X31+32]
	066 Return X0

Method: System.Int64 DefaultTimeSinceStartupMs()

Disassembly:
	0x03DBE8D4 LDR X30, [X31], #0x30
	0x03DBE8D8 RET
	0x03DBE8DC MOV X0, X8
	0x03DBE8E0 BL 0x1C171E0
	0x03DBE8E4 STR X30, [X31 - 0x30]!
	0x03DBE8E8 STP X22, X21, [X31 + 0x10]
	0x03DBE8EC STP X20, X19, [X31 + 0x20]
	0x03DBE8F0 ADRP X21, 0x62A000
	0x03DBE8F4 LDRB W8, [X21 + 0xFA]
	0x03DBE8F8 MOV X19, X1
	0x03DBE8FC MOV X20, X0
	0x03DBE900 TBNZ X8, 0x0, 0x3DBE918
	0x03DBE904 ADRP X0, 0x336000
	0x03DBE908 LDR X0, [X0 + 0xE70]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X31
	003 Call Time.get_realtimeSinceStartup
	004 Move W8, 0x447A0000
	005 Move W9, 0x7F800000
	006 Move S1, W8
	007 Multiply S0, S0, S1
	008 Move S1, W9
	009 NotImplemented "Instruction FCVTZS not yet implemented."
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Move X9, 0x80000000
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move X30, [X31+16]
	014 Return X0

Method: UnityEngine.UIElements.VisualElement PickAll(UnityEngine.UIElements.VisualElement root, UnityEngine.Vector2 point, System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> picked = null, System.Boolean includeIgnoredElement = False)

Disassembly:
	0x03DBE90C BL 0x1C16CF4
	0x03DBE910 MOVZ W8, 0x1
	0x03DBE914 STRB W8, [X21 + 0xFA]
	0x03DBE918 ADRP X22, 0x336000
	0x03DBE91C LDR X21, [X20 + 0x178]
	0x03DBE920 LDR X22, [X22 + 0xE70]
	0x03DBE924 ADD X20, X20, 0x178
	0x03DBE928 MOV X0, X21
	0x03DBE92C MOV X1, X19
	0x03DBE930 MOV X2, X31
	0x03DBE934 BL 0x33C0FDC
	0x03DBE938 MOV X8, X0
	0x03DBE93C CBZ X0, 0x3DBE950
	0x03DBE940 LDR X1, [X22]
	0x03DBE944 LDR X9, [X8]
	0x03DBE948 CMP X9, X1
	0x03DBE94C B.NE 0x3DBE97C
	0x03DBE950 MOV X0, X20
	0x03DBE954 MOV X1, X8
	0x03DBE958 MOV X2, X21
	0x03DBE95C BL 0x1C24138
	0x03DBE960 CMP X21, X0
	0x03DBE964 MOV X21, X0
	0x03DBE968 B.NE 0x3DBE928
	0x03DBE96C LDP X20, X19, [X31 + 0x20]
	0x03DBE970 LDP X22, X21, [X31 + 0x10]
	0x03DBE974 LDR X30, [X31], #0x30
	0x03DBE978 RET
	0x03DBE97C MOV X0, X8
	0x03DBE980 BL 0x1C171E0
	0x03DBE984 STR X30, [X31 - 0x20]!
	0x03DBE988 STP X20, X19, [X31 + 0x10]
	0x03DBE98C LDRB W8, [X0 + 0x68]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x62B000
	010 Move X22, 0x360000
	011 Move W8, [X23+241]
	012 Move X22, [X22+3336]
	013 Move W20, W2
	014 Move X19, X1
	015 Move V8, V1
	016 Move V9, V0
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x360000
	023 Move X0, [X0+3336]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+241], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 And W2, W20, 1
	033 Move X0, X21
	034 Move X1, X19
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X30, [X31+16]
	040 Move X23, [X31+24]
	041 Move V0, V9
	042 Move V1, V8
	043 Move D9, [X31+64]
	044 Move D8, [X31+72]

Method: UnityEngine.UIElements.VisualElement PerformPick(UnityEngine.UIElements.VisualElement root, UnityEngine.Vector2 point, System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> picked = null, System.Boolean includeIgnoredElement = False)

Disassembly:
	0x03DBE990 CBZ W8, 0x3DBE9A0
	0x03DBE994 LDP X20, X19, [X31 + 0x10]
	0x03DBE998 LDR X30, [X31], #0x20
	0x03DBE99C RET
	0x03DBE9A0 MOV X19, X0
	0x03DBE9A4 MOV W20, W1
	0x03DBE9A8 TBZ X1, 0x0, 0x3DBE9C4
	0x03DBE9AC LDR X8, [X19 + 0x178]
	0x03DBE9B0 CBZ X8, 0x3DBE9C4
	0x03DBE9B4 LDR X9, [X8 + 0x18]
	0x03DBE9B8 LDR X0, [X8 + 0x40]
	0x03DBE9BC LDR X1, [X8 + 0x28]
	0x03DBE9C0 BLR X9
	0x03DBE9C4 AND W1, W20, 0x1
	0x03DBE9C8 MOV X0, X19
	0x03DBE9CC LDP X20, X19, [X31 + 0x10]
	0x03DBE9D0 LDR X30, [X31], #0x20
	0x03DBE9D4 B 0x3DBD790
	0x03DBE9D8 LDR X0, [X0 + 0x180]
	0x03DBE9DC RET
	0x03DBE9E0 LDRB W0, [X0 + 0x188]
	0x03DBE9E4 RET
	0x03DBE9E8 STP X30, X21, [X31 - 0x20]!
	0x03DBE9EC STP X20, X19, [X31 + 0x10]
	0x03DBE9F0 ADRP X21, 0x62A000
	0x03DBE9F4 LDRB W8, [X21 + 0xFC]
	0x03DBE9F8 MOV X19, X0
	0x03DBE9FC AND W20, W1, 0x1
	0x03DBEA00 TBNZ X8, 0x0, 0x3DBEA18
	0x03DBEA04 ADRP X0, 0x3A4000
	0x03DBEA08 LDR X0, [X0 + 0x6A8]
	0x03DBEA0C BL 0x1C16CF4
	0x03DBEA10 MOVZ W8, 0x1
	0x03DBEA14 STRB W8, [X21 + 0xFC]
	0x03DBEA18 LDRB W8, [X19 + 0x188]
	0x03DBEA1C CMP W8, W20
	0x03DBEA20 B.EQ 0x3DBEA78
	0x03DBEA24 LDR X8, [X19]
	0x03DBEA28 STRB W20, [X19 + 0x188]
	0x03DBEA2C MOVZ W1, 0x6
	0x03DBEA30 MOV X0, X19
	0x03DBEA34 LDR X9, [X8 + 0x438]
	0x03DBEA38 LDR X2, [X8 + 0x440]
	0x03DBEA3C BLR X9
	0x03DBEA40 CBZ X0, 0x3DBEA78
	0x03DBEA44 ADRP X8, 0x3A4000
	0x03DBEA48 LDR X8, [X8 + 0x6A8]
	0x03DBEA4C LDR X9, [X0]
	0x03DBEA50 LDR X8, [X8]
	0x03DBEA54 LDRB W11, [X9 + 0x130]
	0x03DBEA58 LDRB W10, [X8 + 0x130]
	0x03DBEA5C CMP W11, W10
	0x03DBEA60 B.CC 0x3DBEA78
	0x03DBEA64 LDR X9, [X9 + 0xC8]
	0x03DBEA68 ADD X9, X9, X10, 0x3, LSL
	0x03DBEA6C LDUR X9, [X9 - 0x8]
	0x03DBEA70 CMP X9, X8
	0x03DBEA74 B.EQ 0x3DBEA84
	0x03DBEA78 LDP X20, X19, [X31 + 0x10]
	0x03DBEA7C LDP X30, X21, [X31], #0x20
	0x03DBEA80 RET
	0x03DBEA84 LDP X20, X19, [X31 + 0x10]
	0x03DBEA88 MOV X1, X31
	0x03DBEA8C LDP X30, X21, [X31], #0x20
	0x03DBEA90 B 0x3DDF5F8
	0x03DBEA94 LDR W0, [X0 + 0x1D8]
	0x03DBEA98 RET
	0x03DBEA9C STR W1, [X0 + 0x1D8]
	0x03DBEAA0 RET
	0x03DBEAA4 STP X30, X21, [X31 - 0x20]!
	0x03DBEAA8 STP X20, X19, [X31 + 0x10]
	0x03DBEAAC ADRP X21, 0x62A000
	0x03DBEAB0 ADRP X20, 0x35D000
	0x03DBEAB4 LDRB W8, [X21 + 0xFD]
	0x03DBEAB8 LDR X20, [X20 + 0x918]
	0x03DBEABC MOV X19, X0
	0x03DBEAC0 TBNZ X8, 0x0, 0x3DBEAD8
	0x03DBEAC4 ADRP X0, 0x35D000
	0x03DBEAC8 LDR X0, [X0 + 0x918]
	0x03DBEACC BL 0x1C16CF4
	0x03DBEAD0 MOVZ W8, 0x1
	0x03DBEAD4 STRB W8, [X21 + 0xFD]
	0x03DBEAD8 LDR X0, [X20]
	0x03DBEADC LDR W19, [X19 + 0x1D8]
	0x03DBEAE0 LDR W8, [X0 + 0xE0]
	0x03DBEAE4 CBNZ W8, 0x3DBEAEC
	0x03DBEAE8 BL 0x1C16DFC
	0x03DBEAEC MOV W0, W19
	0x03DBEAF0 LDP X20, X19, [X31 + 0x10]
	0x03DBEAF4 LDP X30, X21, [X31], #0x20
	0x03DBEAF8 B 0x3DBEAFC
	0x03DBEAFC STR X30, [X31 - 0x20]!
	0x03DBEB00 STP X20, X19, [X31 + 0x10]
	0x03DBEB04 ADRP X20, 0x62A000
	0x03DBEB08 LDRB W8, [X20 + 0x100]
	0x03DBEB0C MOV W19, W0
	0x03DBEB10 TBNZ X8, 0x0, 0x3DBEB28
	0x03DBEB14 ADRP X0, 0x399000
	0x03DBEB18 LDR X0, [X0 + 0x448]
	0x03DBEB1C BL 0x1C16CF4
	0x03DBEB20 MOVZ W8, 0x1
	0x03DBEB24 STRB W8, [X20 + 0x100]
	0x03DBEB28 TBNZ X19, 0x1F, 0x3DBEBA4
	0x03DBEB2C ADRP X20, 0x399000
	0x03DBEB30 LDR X20, [X20 + 0x448]
	0x03DBEB34 LDR X0, [X20]
	0x03DBEB38 LDR W8, [X0 + 0xE0]
	0x03DBEB3C CBNZ W8, 0x3DBEB48
	0x03DBEB40 BL 0x1C16DFC
	0x03DBEB44 LDR X0, [X20]
	0x03DBEB48 LDR X8, [X0 + 0xB8]
	0x03DBEB4C LDR X8, [X8]
	0x03DBEB50 CBZ X8, 0x3DBEBB4
	0x03DBEB54 LDR W9, [X8 + 0x18]
	0x03DBEB58 CMP W9, W19
	0x03DBEB5C B.LE 0x3DBEBA4
	0x03DBEB60 LDR W9, [X0 + 0xE0]
	0x03DBEB64 CBNZ W9, 0x3DBEB7C
	0x03DBEB68 BL 0x1C16DFC
	0x03DBEB6C LDR X8, [X20]
	0x03DBEB70 LDR X8, [X8 + 0xB8]
	0x03DBEB74 LDR X8, [X8]
	0x03DBEB78 CBZ X8, 0x3DBEBB4
	0x03DBEB7C LDR W9, [X8 + 0x18]
	0x03DBEB80 CMP W9, W19
	0x03DBEB84 B.LS 0x3DBEBB8
	0x03DBEB88 ADD X8, X8, W19, 0x3, UXTW
	0x03DBEB8C LDR X0, [X8 + 0x20]
	0x03DBEB90 CBZ X0, 0x3DBEBB4
	0x03DBEB94 LDP X20, X19, [X31 + 0x10]
	0x03DBEB98 MOV X1, X31
	0x03DBEB9C LDR X30, [X31], #0x20
	0x03DBEBA0 B 0x3C0D6D0
	0x03DBEBA4 LDP X20, X19, [X31 + 0x10]
	0x03DBEBA8 MOV X0, X31
	0x03DBEBAC LDR X30, [X31], #0x20
	0x03DBEBB0 B 0x3C0E0B0
	0x03DBEBB4 BL 0x1C16F20
	0x03DBEBB8 BL 0x1C16F28
	0x03DBEBBC STP X30, X21, [X31 - 0x20]!
	0x03DBEBC0 STP X20, X19, [X31 + 0x10]
	0x03DBEBC4 ADRP X21, 0x62A000
	0x03DBEBC8 ADRP X20, 0x35D000
	0x03DBEBCC LDRB W8, [X21 + 0xFE]
	0x03DBEBD0 LDR X20, [X20 + 0x918]
	0x03DBEBD4 MOV X19, X0
	0x03DBEBD8 TBNZ X8, 0x0, 0x3DBEBF0
	0x03DBEBDC ADRP X0, 0x35D000
	0x03DBEBE0 LDR X0, [X0 + 0x918]
	0x03DBEBE4 BL 0x1C16CF4
	0x03DBEBE8 MOVZ W8, 0x1
	0x03DBEBEC STRB W8, [X21 + 0xFE]
	0x03DBEBF0 LDR X0, [X20]
	0x03DBEBF4 LDR W19, [X19 + 0x1D8]
	0x03DBEBF8 LDR W8, [X0 + 0xE0]
	0x03DBEBFC CBNZ W8, 0x3DBEC04
	0x03DBEC00 BL 0x1C16DFC
	0x03DBEC04 MOV W0, W19
	0x03DBEC08 LDP X20, X19, [X31 + 0x10]
	0x03DBEC0C LDP X30, X21, [X31], #0x20
	0x03DBEC10 B 0x3DBEC14
	0x03DBEC14 STR X30, [X31 - 0x20]!
	0x03DBEC18 STP X20, X19, [X31 + 0x10]
	0x03DBEC1C ADRP X20, 0x62A000
	0x03DBEC20 LDRB W8, [X20 + 0xFF]
	0x03DBEC24 MOV W19, W0
	0x03DBEC28 TBNZ X8, 0x0, 0x3DBEC40
	0x03DBEC2C ADRP X0, 0x399000
	0x03DBEC30 LDR X0, [X0 + 0x448]
	0x03DBEC34 BL 0x1C16CF4
	0x03DBEC38 MOVZ W8, 0x1
	0x03DBEC3C STRB W8, [X20 + 0xFF]
	0x03DBEC40 TBNZ X19, 0x1F, 0x3DBECBC
	0x03DBEC44 ADRP X20, 0x399000
	0x03DBEC48 LDR X20, [X20 + 0x448]
	0x03DBEC4C LDR X0, [X20]
	0x03DBEC50 LDR W8, [X0 + 0xE0]
	0x03DBEC54 CBNZ W8, 0x3DBEC60
	0x03DBEC58 BL 0x1C16DFC
	0x03DBEC5C LDR X0, [X20]
	0x03DBEC60 LDR X8, [X0 + 0xB8]
	0x03DBEC64 LDR X8, [X8]
	0x03DBEC68 CBZ X8, 0x3DBECCC
	0x03DBEC6C LDR W9, [X8 + 0x18]
	0x03DBEC70 CMP W9, W19
	0x03DBEC74 B.LE 0x3DBECBC
	0x03DBEC78 LDR W9, [X0 + 0xE0]
	0x03DBEC7C CBNZ W9, 0x3DBEC94
	0x03DBEC80 BL 0x1C16DFC
	0x03DBEC84 LDR X8, [X20]
	0x03DBEC88 LDR X8, [X8 + 0xB8]
	0x03DBEC8C LDR X8, [X8]

ISIL:
	001 Move [X31-96], D9
	002 Move [X31-88], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x62B000
	013 Move W8, [X22+242]
	014 Move W21, W2
	015 Move X20, X1
	016 Move V8, V1
	017 Move V9, V0
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x35F000
	024 Move X0, [X0+288]
	025 Call 0x1C17CF4
	026 Move X0, 0x35F000
	027 Move X0, [X0+224]
	028 Call 0x1C17CF4
	029 Move X0, 0x360000
	030 Move X0, [X0+3336]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+242], W8
	034 Move [X31+24], X31
	035 Compare X19, 0
	036 JumpIfEqual {212}
	037 Move X0, X19
	038 Move X1, X31
	039 Call VisualElement.get_resolvedStyle, X0
	040 Compare X0, 0
	041 JumpIfEqual {212}
	042 Move X10, 0x35F000
	043 Move X8, [X0]
	044 Move X10, [X10+288]
	045 Move X22, X0
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X10]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 15
	057 Move X0, X22
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 15
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X22
	066 NotImplemented "Instruction BLR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X22, X31
	069 Move W8, [X19+692]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+888]
	072 Add X0, X31, 24
	073 Move X1, X31
	074 Move [X31+24], X8
	075 Call Hierarchy.get_childCount, X0
	076 Compare W0, 0
	077 JumpIfNotEqual {83}
	078 Move X22, X31
	079 Move TEMP, X21
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {199}
	083 Move X0, X19
	084 Move X1, X31
	085 Call VisualElement.get_worldBoundingBox, X0
	086 Add S3, S1, S3
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 Move X22, X31
	089 NotImplemented "Instruction FCMP not yet implemented."
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Add S0, S0, S2
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 Move X0, X19
	094 Move V0, V9
	095 Move V1, V8
	096 Move X1, X31
	097 Call VisualElementExtensions.WorldToLocal, X0, X1
	098 Move X8, [X19]
	099 Move X0, X19
	100 Move X9, [X8+1864]
	101 Move X1, [X8+1872]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move W23, W0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {116}
	108 Move X0, X19
	109 Move X1, X31
	110 Call VisualElement.ShouldClip, X0
	111 Move X22, X31
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {199}
	116 Move X8, [X19+888]
	117 Add X0, X31, 24
	118 Move X1, X31
	119 Move [X31+24], X8
	120 Call Hierarchy.get_childCount, X0
	121 Move X22, X31
	122 Subtract W24, W0, 1
	123 Move X26, 0x360000
	124 Move X26, [X26+3336]
	125 Move X8, [X19+888]
	126 Add X0, X31, 24
	127 Move W1, W24
	128 Move X2, X31
	129 Move [X31+24], X8
	130 Call Hierarchy.get_Item, X0, X1
	131 Move X8, [X26]
	132 Move X25, X0
	133 Move W9, [X8+224]
	134 Compare W9, 0
	135 JumpIfNotEqual {138}
	136 Move X0, X8
	137 Call 0x1C17DFC
	138 And W2, W21, 1
	139 Move X0, X25
	140 Move V0, V9
	141 Move V1, V8
	142 Move X1, X20
	143 Call Panel.PerformPick, X0, X1, X2, X3
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction CSET not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 NotImplemented "Instruction CSET not yet implemented."
	148 Or W8, W8, W9
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CSEL not yet implemented."
	151 Move TEMP, X8
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfEqual {157}
	155 Compare X20, 0
	156 JumpIfEqual {190}
	157 Subtract W24, W24, 1
	158 Move X0, X19
	159 Move X1, X31
	160 Call VisualElement.get_visible, X0
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfNotEqual {170}
	165 Move W8, [X19+692]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction CSET not yet implemented."
	168 Or W8, W8, W21
	169 And W8, W8, 1
	170 Move W8, W31
	171 And W31, W23, W8
	172 Compare X20, 0
	173 JumpIfEqual {197}
	174 Move X9, 0x35F000
	175 Move X9, [X9+224]
	176 Move W10, [X20+28]
	177 Move X8, [X20+16]
	178 Move X9, [X9]
	179 Add W10, W10, 1
	180 Move [X20+28], W10
	181 Compare X8, 0
	182 JumpIfEqual {212}
	183 NotImplemented "Instruction LDRSW not yet implemented."
	184 Move W11, [X8+24]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Add W9, W10, 1
	187 Add X8, X8, X10
	188 Move [X20+24], W9
	189 Move [X8+32], X19
	190 Move X22, X0
	191 Move X8, [X9+32]
	192 Move X0, X20
	193 Move X1, X19
	194 Move X8, [X8+192]
	195 Move X2, [X8+112]
	196 Call List`1<Object>.AddWithResize, X0, X1
	197 NotImplemented "Instruction CMP not yet implemented."
	198 NotImplemented "Instruction CSEL not yet implemented."
	199 Move X0, X22
	200 Move X20, [X31+80]
	201 Move X19, [X31+88]
	202 Move X22, [X31+64]
	203 Move X21, [X31+72]
	204 Move X24, [X31+48]
	205 Move X23, [X31+56]
	206 Move X26, [X31+32]
	207 Move X25, [X31+40]
	208 Move X30, [X31+16]
	209 Move D9, [X31+96]
	210 Move D8, [X31+104]
	211 Return X0
	212 Call 0x1C17F20

Method: UnityEngine.UIElements.VisualElement PickAll(UnityEngine.Vector2 point, System.Collections.Generic.List`1<UnityEngine.UIElements.VisualElement> picked)

Disassembly:
	0x03DBEC90 CBZ X8, 0x3DBECCC
	0x03DBEC94 LDR W9, [X8 + 0x18]
	0x03DBEC98 CMP W9, W19
	0x03DBEC9C B.LS 0x3DBECD0
	0x03DBECA0 ADD X8, X8, W19, 0x3, UXTW
	0x03DBECA4 LDR X0, [X8 + 0x20]
	0x03DBECA8 CBZ X0, 0x3DBECCC
	0x03DBECAC LDP X20, X19, [X31 + 0x10]
	0x03DBECB0 MOV X1, X31
	0x03DBECB4 LDR X30, [X31], #0x20
	0x03DBECB8 B 0x3C0D7B8
	0x03DBECBC LDP X20, X19, [X31 + 0x10]
	0x03DBECC0 MOV X0, X31
	0x03DBECC4 LDR X30, [X31], #0x20
	0x03DBECC8 B 0x3C0E0D8
	0x03DBECCC BL 0x1C16F20
	0x03DBECD0 BL 0x1C16F28
	0x03DBECD4 STP X30, X23, [X31 - 0x30]!
	0x03DBECD8 STP X22, X21, [X31 + 0x10]
	0x03DBECDC STP X20, X19, [X31 + 0x20]
	0x03DBECE0 ADRP X21, 0x62A000
	0x03DBECE4 ADRP X23, 0x335000
	0x03DBECE8 LDRB W8, [X21 + 0x101]
	0x03DBECEC LDR X23, [X23 + 0x598]
	0x03DBECF0 MOV X19, X1
	0x03DBECF4 MOV X20, X0
	0x03DBECF8 TBNZ X8, 0x0, 0x3DBED10
	0x03DBECFC ADRP X0, 0x335000
	0x03DBED00 LDR X0, [X0 + 0x598]
	0x03DBED04 BL 0x1C16CF4
	0x03DBED08 MOVZ W8, 0x1
	0x03DBED0C STRB W8, [X21 + 0x101]
	0x03DBED10 LDR X0, [X23]
	0x03DBED14 LDR X21, [X20 + 0x190]
	0x03DBED18 LDR W8, [X0 + 0xE0]
	0x03DBED1C CBNZ W8, 0x3DBED24
	0x03DBED20 BL 0x1C16DFC
	0x03DBED24 MOV X0, X21
	0x03DBED28 MOV X1, X31
	0x03DBED2C MOV X2, X31
	0x03DBED30 BL 0x3C3883C
	0x03DBED34 TBZ X0, 0x0, 0x3DBED84
	0x03DBED38 MOV X0, X31
	0x03DBED3C BL 0x3C20834
	0x03DBED40 LDR X8, [X23]
	0x03DBED44 MOV X21, X0
	0x03DBED48 LDR W9, [X8 + 0xE0]
	0x03DBED4C CBNZ W9, 0x3DBED58
	0x03DBED50 MOV X0, X8
	0x03DBED54 BL 0x1C16DFC
	0x03DBED58 MOV X0, X21
	0x03DBED5C MOV X1, X31
	0x03DBED60 MOV X2, X31
	0x03DBED64 BL 0x3C354F8
	0x03DBED68 TBZ X0, 0x0, 0x3DBEE2C

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x62B000
	008 Move W8, [X21+243]
	009 Move X19, X1
	010 Move V8, V1
	011 Move V9, V0
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x3A6000
	018 Move X0, [X0+3800]
	019 Call 0x1C17CF4
	020 Move X0, 0x360000
	021 Move X0, [X0+3336]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+243], W8
	025 Move X8, [X20]
	026 Move X21, 0x360000
	027 Move X0, X20
	028 Move X9, [X8+728]
	029 Move X1, [X8+736]
	030 Move X21, [X21+3336]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Compare X19, 0
	033 JumpIfEqual {44}
	034 Move W2, [X19+24]
	035 Move W8, [X19+28]
	036 Add W8, W8, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X19+24], W31
	039 Move [X19+28], W8
	040 Move X0, [X19+16]
	041 Move W1, W31
	042 Move X3, X31
	043 Call Array.Clear, X0, X1, X2
	044 Move X8, [X20]
	045 Move X0, X20
	046 Move X9, [X8+920]
	047 Move X1, [X8+928]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, [X21]
	050 Move X20, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, X20
	057 Move X1, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X30, [X31+16]
	061 Move X21, [X31+24]
	062 Move V0, V9
	063 Move V1, V8
	064 Move W2, W31
	065 Move D9, [X31+48]
	066 Move D8, [X31+56]
	067 Call Panel.PickAll, X0, X1, X2, X3
	068 Return X0

Method: UnityEngine.UIElements.VisualElement Pick(UnityEngine.Vector2 point)

Disassembly:
	0x03DBED6C CBZ X21, 0x3DBEEAC
	0x03DBED70 LDR X8, [X21]
	0x03DBED74 MOV X0, X21
	0x03DBED78 LDP X9, X1, [X8 + 0x188]
	0x03DBED7C BLR X9
	0x03DBED80 B 0x3DBEE34
	0x03DBED84 MOV X0, X31
	0x03DBED88 BL 0x3C04820
	0x03DBED8C MOV X21, X0
	0x03DBED90 MOV X0, X31
	0x03DBED94 BL 0x3C20834
	0x03DBED98 MOV X22, X0
	0x03DBED9C MOV X0, X31
	0x03DBEDA0 MOV X1, X31
	0x03DBEDA4 BL 0x3C04D1C
	0x03DBEDA8 LDR X0, [X20 + 0x190]
	0x03DBEDAC MOV X1, X31
	0x03DBEDB0 BL 0x3C2085C
	0x03DBEDB4 LDR X0, [X20 + 0x190]
	0x03DBEDB8 CBZ X0, 0x3DBEEAC
	0x03DBEDBC LDR X8, [X0]
	0x03DBEDC0 LDP X9, X1, [X8 + 0x188]
	0x03DBEDC4 BLR X9
	0x03DBEDC8 LDR X8, [X20 + 0x190]
	0x03DBEDCC CBZ X8, 0x3DBEEAC
	0x03DBEDD0 LDR X9, [X8]
	0x03DBEDD4 MOV W23, W0
	0x03DBEDD8 MOV X0, X8
	0x03DBEDDC LDP X10, X1, [X9 + 0x1A8]
	0x03DBEDE0 BLR X10
	0x03DBEDE4 SCVTF S2, W23
	0x03DBEDE8 SCVTF S3, W0
	0x03DBEDEC FMOV S0, W31
	0x03DBEDF0 FMOV S1, W31
	0x03DBEDF4 MOV X0, X31
	0x03DBEDF8 BL 0x3C1042C
	0x03DBEDFC MOV X0, X20
	0x03DBEE00 MOV X1, X19
	0x03DBEE04 BL 0x3DBE0E4
	0x03DBEE08 MOV X0, X21
	0x03DBEE0C MOV X1, X31
	0x03DBEE10 BL 0x3C04D1C
	0x03DBEE14 MOV X0, X22
	0x03DBEE18 LDP X20, X19, [X31 + 0x20]
	0x03DBEE1C LDP X22, X21, [X31 + 0x10]
	0x03DBEE20 MOV X1, X31
	0x03DBEE24 LDP X30, X23, [X31], #0x30
	0x03DBEE28 B 0x3C2085C
	0x03DBEE2C MOV X0, X20
	0x03DBEE30 BL 0x3DBEAA4
	0x03DBEE34 MOV W22, W0
	0x03DBEE38 LDR X0, [X23]
	0x03DBEE3C LDR W8, [X0 + 0xE0]
	0x03DBEE40 CBNZ W8, 0x3DBEE48
	0x03DBEE44 BL 0x1C16DFC
	0x03DBEE48 MOV X0, X21
	0x03DBEE4C MOV X1, X31
	0x03DBEE50 MOV X2, X31
	0x03DBEE54 BL 0x3C354F8
	0x03DBEE58 TBZ X0, 0x0, 0x3DBEE74
	0x03DBEE5C CBZ X21, 0x3DBEEAC
	0x03DBEE60 LDR X8, [X21]
	0x03DBEE64 MOV X0, X21
	0x03DBEE68 LDP X9, X1, [X8 + 0x1A8]
	0x03DBEE6C BLR X9
	0x03DBEE70 B 0x3DBEE7C
	0x03DBEE74 MOV X0, X20
	0x03DBEE78 BL 0x3DBEBBC
	0x03DBEE7C SCVTF S2, W22
	0x03DBEE80 SCVTF S3, W0
	0x03DBEE84 FMOV S0, W31
	0x03DBEE88 FMOV S1, W31
	0x03DBEE8C MOV X0, X31
	0x03DBEE90 BL 0x3C1042C
	0x03DBEE94 MOV X0, X20
	0x03DBEE98 MOV X1, X19
	0x03DBEE9C LDP X20, X19, [X31 + 0x20]
	0x03DBEEA0 LDP X22, X21, [X31 + 0x10]
	0x03DBEEA4 LDP X30, X23, [X31], #0x30
	0x03DBEEA8 B 0x3DBE0E4
	0x03DBEEAC BL 0x1C16F20
	0x03DBEEB0 LDR X0, [X0 + 0x1E0]
	0x03DBEEB4 RET
	0x03DBEEB8 STP X30, X21, [X31 - 0x20]!
	0x03DBEEBC STP X20, X19, [X31 + 0x10]
	0x03DBEEC0 ADRP X21, 0x62A000
	0x03DBEEC4 LDRB W8, [X21 + 0x102]
	0x03DBEEC8 MOV X20, X1
	0x03DBEECC MOV X19, X0
	0x03DBEED0 TBZ X8, 0x0, 0x3DBEEEC
	0x03DBEED4 CBZ X20, 0x3DBEF04
	0x03DBEED8 CBZ X19, 0x3DBEF2C
	0x03DBEEDC STR X20, [X19 + 0x1E0]
	0x03DBEEE0 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0x62B000
	012 Move X21, 0x35F000
	013 Move W8, [X20+244]
	014 Move X21, [X21+3664]
	015 Move V8, V1
	016 Move V9, V0
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x360000
	023 Move X0, [X0+3336]
	024 Call 0x1C17CF4
	025 Move X0, 0x35F000
	026 Move X0, [X0+3664]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+244], W8
	030 Move [X31+56], X31
	031 Move [X31+12], W31
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+728]
	035 Move X1, [X8+736]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X0, [X21]
	038 Move X20, [X19+112]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Compare X20, 0
	044 JumpIfEqual {112}
	045 Move X8, [X21]
	046 Move X22, 0x360000
	047 Add X2, X31, 56
	048 Add X3, X31, 12
	049 Move X8, [X8+184]
	050 Move X0, X20
	051 Move X4, X31
	052 Move W1, [X8+8]
	053 Move X22, [X22+3336]
	054 Call ElementUnderPointer.GetTopElementUnderPointer, X0, X1, X2, X3
	055 Move W8, [X31+12]
	056 Compare W8, 0
	057 JumpIfEqual {89}
	058 Move X8, [X19]
	059 Move X0, X19
	060 Move X9, [X8+920]
	061 Move X1, [X8+928]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X22]
	064 Move X19, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X19
	071 Move V0, V9
	072 Move V1, V8
	073 Move X1, X31
	074 Move W2, W31
	075 Call Panel.PickAll, X0, X1, X2, X3
	076 Move X20, X0
	077 Move X0, X20
	078 Move X20, [X31+80]
	079 Move X19, [X31+88]
	080 Move X22, [X31+64]
	081 Move X21, [X31+72]
	082 Move X30, [X31+48]
	083 Move D9, [X31+32]
	084 Move D8, [X31+40]
	085 Move D11, [X31+16]
	086 Move D10, [X31+24]
	087 Add X31, X31, 96
	088 Return X0
	089 Move X20, X0
	090 Move X0, [X22]
	091 Move S11, [X31+56]
	092 Move S10, [X31+60]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move V0, V11
	098 Move V1, V10
	099 Call Panel.<Pick>g__PixelOf|101_0, X0
	100 Move V0, V9
	101 Move V1, V8
	102 Move X21, X0
	103 Call Panel.<Pick>g__PixelOf|101_0, X0
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X8, X21
	106 ShiftRight X8, 32
	107 And X8, X8, 0x7FFFFFFF
	108 Move X9, X0
	109 ShiftRight X9, 32
	110 And X9, X9, 0x7FFFFFFF
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Call 0x1C17F20

Method: System.Void ValidateLayout()

Disassembly:
	0x03DBEFAC TBZ X22, 0x0, 0x3DBEFF4
	0x03DBEFB0 FSUB S0, S11, S9
	0x03DBEFB4 FSUB S1, S10, S8
	0x03DBEFB8 MOV X0, X21
	0x03DBEFBC BL 0x3DBEF30
	0x03DBEFC0 LDP S2, S3, [X20]
	0x03DBEFC4 MOVZ W0, 0x1
	0x03DBEFC8 FSUB S9, S2, S0
	0x03DBEFCC FSUB S8, S3, S1
	0x03DBEFD0 STP S9, S8, [X19]
	0x03DBEFD4 LDP X20, X19, [X31 + 0x60]
	0x03DBEFD8 LDP X22, X21, [X31 + 0x50]
	0x03DBEFDC LDR X30, [X31 + 0x40]
	0x03DBEFE0 LDP D9, D8, [X31 + 0x30]
	0x03DBEFE4 LDP D11, D10, [X31 + 0x20]
	0x03DBEFE8 LDP D13, D12, [X31 + 0x10]
	0x03DBEFEC LDP D15, D14, [X31], #0x70
	0x03DBEFF0 RET
	0x03DBEFF4 LDR X8, [X21]
	0x03DBEFF8 MOV X0, X21
	0x03DBEFFC LDR X9, [X8 + 0x398]
	0x03DBF000 LDR X1, [X8 + 0x3A0]
	0x03DBF004 BLR X9
	0x03DBF008 CBZ X0, 0x3DBF088
	0x03DBF00C MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+344]
	004 Compare W8, 0
	005 JumpIfNotEqual {28}
	006 Move X19, X0
	007 Move X0, [X0+176]
	008 Move W8, 1
	009 Move [X19+344], W8
	010 Compare X0, 0
	011 JumpIfEqual {31}
	012 Move W1, 3
	013 Move X2, X31
	014 Call VisualTreeUpdater.UpdateVisualTreePhase, X0, X1
	015 Move X0, [X19+176]
	016 Compare X0, 0
	017 JumpIfEqual {31}
	018 Move W1, 4
	019 Move X2, X31
	020 Call VisualTreeUpdater.UpdateVisualTreePhase, X0, X1
	021 Move X0, [X19+176]
	022 Compare X0, 0
	023 JumpIfEqual {31}
	024 Move W1, 5
	025 Move X2, X31
	026 Call VisualTreeUpdater.UpdateVisualTreePhase, X0, X1
	027 Move [X19+344], W31
	028 Move X30, [X31+16]
	029 Move X19, [X31+24]
	030 Return 
	031 Call 0x1C17F20

Method: System.Void UpdateAnimations()

Disassembly:
	0x03DBF010 BL 0x3DEC528
	0x03DBF014 MOV V12.16B, V0.16B
	0x03DBF018 LDR V0, [X20 + 0x4]
	0x03DBF01C FADD S14, S1, S3
	0x03DBF020 MOV W0, W31
	0x03DBF024 FCMP S0, S14
	0x03DBF028 B.PL 0x3DBEFD0
	0x03DBF02C MOV V13.16B, V1.16B

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+176]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, 2
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call VisualTreeUpdater.UpdateVisualTreePhase, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void UpdateBindings()

Disassembly:
	0x03DBF030 FCMP S0, S1
	0x03DBF034 B.LT 0x3DBEFD0
	0x03DBF038 LDR V0, [X20]
	0x03DBF03C FCMP S0, S12
	0x03DBF040 B.LT 0x3DBEFD0
	0x03DBF044 FADD S15, S12, S2
	0x03DBF048 FCMP S0, S15
	0x03DBF04C B.PL 0x3DBEFD0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+176]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, 1
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call VisualTreeUpdater.UpdateVisualTreePhase, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void ApplyStyles()

Disassembly:
	0x03DBF050 FSUB S0, S11, S9
	0x03DBF054 FSUB S1, S10, S8
	0x03DBF058 MOV X0, X21
	0x03DBF05C BL 0x3DBEF30
	0x03DBF060 FCMP S1, S14
	0x03DBF064 MOVZ W0, 0x1
	0x03DBF068 B.PL 0x3DBEFD0
	0x03DBF06C FCMP S1, S13

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+176]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move W1, 3
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call VisualTreeUpdater.UpdateVisualTreePhase, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void UpdateForRepaint()

Disassembly:
	0x03DBF070 B.LT 0x3DBEFD0
	0x03DBF074 FCMP S0, S12
	0x03DBF078 B.LT 0x3DBEFD0
	0x03DBF07C FCMP S0, S15
	0x03DBF080 B.MI 0x3DBEFC0
	0x03DBF084 B 0x3DBEFD0
	0x03DBF088 BL 0x1C16F20
	0x03DBF08C STP D9, D8, [X31 - 0x40]!
	0x03DBF090 STR X30, [X31 + 0x10]
	0x03DBF094 STP X22, X21, [X31 + 0x20]
	0x03DBF098 STP X20, X19, [X31 + 0x30]
	0x03DBF09C ADRP X22, 0x629000
	0x03DBF0A0 ADRP X21, 0x35C000
	0x03DBF0A4 LDRB W8, [X22 + 0x104]
	0x03DBF0A8 LDR X21, [X21 + 0x958]
	0x03DBF0AC MOV V8.16B, V1.16B
	0x03DBF0B0 MOV V9.16B, V0.16B
	0x03DBF0B4 MOV W19, W1
	0x03DBF0B8 MOV X20, X0
	0x03DBF0BC TBNZ X8, 0x0, 0x3DBF0D4
	0x03DBF0C0 ADRP X0, 0x35C000
	0x03DBF0C4 LDR X0, [X0 + 0x958]
	0x03DBF0C8 BL 0x1C16CF4
	0x03DBF0CC MOVZ W8, 0x1
	0x03DBF0D0 STRB W8, [X22 + 0x104]
	0x03DBF0D4 MOV X0, X20
	0x03DBF0D8 MOV W1, W19
	0x03DBF0DC MOV X2, X31
	0x03DBF0E0 BL 0x3DBC298

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+176]
	005 Compare X0, 0
	006 JumpIfEqual {37}
	007 Move W1, W31
	008 Move X2, X31
	009 Call VisualTreeUpdater.UpdateVisualTreePhase, X0, X1
	010 Move X0, [X19+176]
	011 Compare X0, 0
	012 JumpIfEqual {37}
	013 Move W1, 3
	014 Move X2, X31
	015 Call VisualTreeUpdater.UpdateVisualTreePhase, X0, X1
	016 Move X0, [X19+176]
	017 Compare X0, 0
	018 JumpIfEqual {37}
	019 Move W1, 4
	020 Move X2, X31
	021 Call VisualTreeUpdater.UpdateVisualTreePhase, X0, X1
	022 Move X0, [X19+176]
	023 Compare X0, 0
	024 JumpIfEqual {37}
	025 Move W1, 5
	026 Move X2, X31
	027 Call VisualTreeUpdater.UpdateVisualTreePhase, X0, X1
	028 Move X0, [X19+176]
	029 Compare X0, 0
	030 JumpIfEqual {37}
	031 Move W1, 6
	032 Move X2, X31
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 Call VisualTreeUpdater.UpdateVisualTreePhase, X0, X1
	036 Return 
	037 Call 0x1C17F20

Method: System.Void Repaint(UnityEngine.Event e)

Disassembly:
	0x03DBF0E4 MOV X0, X20
	0x03DBF0E8 BL 0x3DBC2C0
	0x03DBF0EC LDR X8, [X20]
	0x03DBF0F0 MOV X0, X20
	0x03DBF0F4 LDR X9, [X8 + 0x3F8]
	0x03DBF0F8 LDR X1, [X8 + 0x400]
	0x03DBF0FC BLR X9
	0x03DBF100 LDR X8, [X21]
	0x03DBF104 MOV W20, W0
	0x03DBF108 LDR W9, [X8 + 0xE0]
	0x03DBF10C CBNZ W9, 0x3DBF118
	0x03DBF110 MOV X0, X8
	0x03DBF114 BL 0x1C16DFC
	0x03DBF118 MOV W0, W19
	0x03DBF11C MOV W2, W20
	0x03DBF120 LDP X20, X19, [X31 + 0x30]
	0x03DBF124 LDP X22, X21, [X31 + 0x20]
	0x03DBF128 LDR X30, [X31 + 0x10]
	0x03DBF12C MOV V0.16B, V9.16B
	0x03DBF130 MOV V1.16B, V8.16B
	0x03DBF134 MOV X1, X31
	0x03DBF138 MOV X3, X31
	0x03DBF13C LDP D9, D8, [X31], #0x40
	0x03DBF140 B 0x3DA9CA8
	0x03DBF144 STP D9, D8, [X31 - 0x40]!
	0x03DBF148 STR X30, [X31 + 0x10]
	0x03DBF14C STP X22, X21, [X31 + 0x20]
	0x03DBF150 STP X20, X19, [X31 + 0x30]
	0x03DBF154 ADRP X22, 0x629000
	0x03DBF158 ADRP X21, 0x35C000
	0x03DBF15C LDRB W8, [X22 + 0x105]
	0x03DBF160 LDR X21, [X21 + 0x958]
	0x03DBF164 MOV V8.16B, V1.16B
	0x03DBF168 MOV V9.16B, V0.16B
	0x03DBF16C MOV W20, W1
	0x03DBF170 MOV X19, X0
	0x03DBF174 TBNZ X8, 0x0, 0x3DBF18C
	0x03DBF178 ADRP X0, 0x35C000
	0x03DBF17C LDR X0, [X0 + 0x958]
	0x03DBF180 BL 0x1C16CF4
	0x03DBF184 MOVZ W8, 0x1
	0x03DBF188 STRB W8, [X22 + 0x105]
	0x03DBF18C LDR X8, [X19]
	0x03DBF190 MOV X0, X19
	0x03DBF194 LDR X9, [X8 + 0x3F8]
	0x03DBF198 LDR X1, [X8 + 0x400]
	0x03DBF19C BLR X9
	0x03DBF1A0 LDR X8, [X21]
	0x03DBF1A4 MOV W21, W0
	0x03DBF1A8 LDR W9, [X8 + 0xE0]
	0x03DBF1AC CBNZ W9, 0x3DBF1B8
	0x03DBF1B0 MOV X0, X8
	0x03DBF1B4 BL 0x1C16DFC
	0x03DBF1B8 MOV W0, W20
	0x03DBF1BC MOV X1, X19
	0x03DBF1C0 MOV W2, W21
	0x03DBF1C4 LDP X20, X19, [X31 + 0x30]
	0x03DBF1C8 LDP X22, X21, [X31 + 0x20]
	0x03DBF1CC LDR X30, [X31 + 0x10]
	0x03DBF1D0 MOV V0.16B, V9.16B
	0x03DBF1D4 MOV V1.16B, V8.16B
	0x03DBF1D8 MOV X3, X31
	0x03DBF1DC LDP D9, D8, [X31], #0x40
	0x03DBF1E0 B 0x3DA9CA8
	0x03DBF1E4 STR X30, [X31 - 0x30]!
	0x03DBF1E8 STP X22, X21, [X31 + 0x10]
	0x03DBF1EC STP X20, X19, [X31 + 0x20]
	0x03DBF1F0 ADRP X20, 0x629000
	0x03DBF1F4 ADRP X21, 0x35C000
	0x03DBF1F8 ADRP X19, 0x3AA000
	0x03DBF1FC LDRB W8, [X20 + 0x106]
	0x03DBF200 LDR X21, [X21 + 0x918]
	0x03DBF204 LDR X19, [X19 + 0x70]
	0x03DBF208 TBNZ X8, 0x0, 0x3DBF244
	0x03DBF20C ADRP X0, 0x35C000
	0x03DBF210 LDR X0, [X0 + 0x918]
	0x03DBF214 BL 0x1C16CF4
	0x03DBF218 ADRP X0, 0x3AA000
	0x03DBF21C LDR X0, [X0 + 0x78]
	0x03DBF220 BL 0x1C16CF4
	0x03DBF224 ADRP X0, 0x3AA000
	0x03DBF228 LDR X0, [X0 + 0x80]
	0x03DBF22C BL 0x1C16CF4
	0x03DBF230 ADRP X0, 0x3AA000
	0x03DBF234 LDR X0, [X0 + 0x70]
	0x03DBF238 BL 0x1C16CF4
	0x03DBF23C MOVZ W8, 0x1
	0x03DBF240 STRB W8, [X20 + 0x106]
	0x03DBF244 LDR X8, [X21]
	0x03DBF248 ADRP X22, 0x3AA000
	0x03DBF24C ADRP X20, 0x3AA000
	0x03DBF250 LDR X8, [X8 + 0xB8]
	0x03DBF254 STR W31, [X8]
	0x03DBF258 LDR X0, [X19]
	0x03DBF25C LDR W8, [X0 + 0xE0]
	0x03DBF260 LDR X22, [X22 + 0x78]
	0x03DBF264 LDR X20, [X20 + 0x80]
	0x03DBF268 CBNZ W8, 0x3DBF274
	0x03DBF26C BL 0x1C16DFC
	0x03DBF270 LDR X0, [X19]
	0x03DBF274 LDR X8, [X0 + 0xB8]
	0x03DBF278 LDR X0, [X22]
	0x03DBF27C LDR X19, [X8]
	0x03DBF280 BL 0x1C16F10
	0x03DBF284 LDR X2, [X20]
	0x03DBF288 MOV X1, X19
	0x03DBF28C MOV X3, X31
	0x03DBF290 MOV X20, X0
	0x03DBF294 BL 0x2D342B4
	0x03DBF298 LDR X8, [X21]
	0x03DBF29C LDP X22, X21, [X31 + 0x10]
	0x03DBF2A0 LDR X8, [X8 + 0xB8]
	0x03DBF2A4 STR X20, [X8 + 0x8]
	0x03DBF2A8 LDP X20, X19, [X31 + 0x20]
	0x03DBF2AC LDR X30, [X31], #0x30
	0x03DBF2B0 RET
	0x03DBF2B4 STR X30, [X31 - 0x20]!
	0x03DBF2B8 STP X20, X19, [X31 + 0x10]
	0x03DBF2BC ADRP X19, 0x629000
	0x03DBF2C0 ADRP X20, 0x3AA000
	0x03DBF2C4 LDRB W8, [X19 + 0x107]
	0x03DBF2C8 LDR X20, [X20 + 0x70]
	0x03DBF2CC TBNZ X8, 0x0, 0x3DBF2E4
	0x03DBF2D0 ADRP X0, 0x3AA000
	0x03DBF2D4 LDR X0, [X0 + 0x70]
	0x03DBF2D8 BL 0x1C16CF4
	0x03DBF2DC MOVZ W8, 0x1
	0x03DBF2E0 STRB W8, [X19 + 0x107]
	0x03DBF2E4 LDR X0, [X20]
	0x03DBF2E8 BL 0x1C16F10
	0x03DBF2EC MOV X1, X31
	0x03DBF2F0 MOV X19, X0
	0x03DBF2F4 BL 0x33BDD8C
	0x03DBF2F8 LDR X8, [X20]
	0x03DBF2FC LDR X8, [X8 + 0xB8]
	0x03DBF300 STR X19, [X8]
	0x03DBF304 LDP X20, X19, [X31 + 0x10]
	0x03DBF308 LDR X30, [X31], #0x20
	0x03DBF30C RET
	0x03DBF310 MOV X1, X31
	0x03DBF314 B 0x33BDD8C
	0x03DBF318 RET
	0x03DBF31C STR X30, [X31 - 0x20]!
	0x03DBF320 STP X20, X19, [X31 + 0x10]
	0x03DBF324 ADRP X20, 0x629000
	0x03DBF328 LDRB W8, [X20 + 0x108]
	0x03DBF32C MOV X19, X0
	0x03DBF330 TBNZ X8, 0x0, 0x3DBF354
	0x03DBF334 ADRP X0, 0x35D000
	0x03DBF338 LDR X0, [X0 + 0xE80]
	0x03DBF33C BL 0x1C16CF4
	0x03DBF340 ADRP X0, 0x35C000
	0x03DBF344 LDR X0, [X0 + 0x898]
	0x03DBF348 BL 0x1C16CF4
	0x03DBF34C MOVZ W8, 0x1
	0x03DBF350 STRB W8, [X20 + 0x108]
	0x03DBF354 CBZ X19, 0x3DBF378
	0x03DBF358 ADRP X8, 0x35C000
	0x03DBF35C LDR X8, [X8 + 0x898]
	0x03DBF360 LDR X9, [X19]
	0x03DBF364 LDR X8, [X8]
	0x03DBF368 LDRB W11, [X9 + 0x130]
	0x03DBF36C LDRB W10, [X8 + 0x130]
	0x03DBF370 CMP W11, W10
	0x03DBF374 B.CS 0x3DBF380
	0x03DBF378 MOV X0, X31
	0x03DBF37C B 0x3DBF39C
	0x03DBF380 LDR X9, [X9 + 0xC8]
	0x03DBF384 MOV X0, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x62A000
	007 Move W8, [X21+245]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x361000
	015 Move X0, [X0+1480]
	016 Call 0x1C17CF4
	017 Move X0, 0x35F000
	018 Move X0, [X0+3336]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+245], W8
	022 Move X8, [X19]
	023 Move X0, X19
	024 Move X9, [X8+792]
	025 Move X1, [X8+800]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X19]
	028 Move [X19+204], W0
	029 Move X0, X19
	030 Move X9, [X8+1016]
	031 Move X1, [X8+1024]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, 0x361000
	035 Move X8, [X8+1480]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X31
	042 Call GUIUtility.get_pixelsPerPoint
	043 Move X0, X19
	044 Call BaseVisualElementPanel.set_pixelsPerPoint, X0, V0
	045 Move X8, [X19]
	046 Move X0, X19
	047 Move X9, [X8+840]
	048 Move X1, [X8+848]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Compare X0, 0
	051 JumpIfEqual {142}
	052 Move [X0+104], X20
	053 Move X20, [X19+216]
	054 Move X1, X31
	055 Move X2, X31
	056 Move X0, X20
	057 Call IntPtr.op_Inequality, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {65}
	062 Move X0, X20
	063 Move X1, X31
	064 Call ProfilerUnsafeUtility.BeginSample, X0
	065 Move X8, [X19+160]
	066 Compare X8, 0
	067 JumpIfEqual {73}
	068 Move X0, [X8+64]
	069 Move X9, [X8+24]
	070 Move X2, [X8+40]
	071 Move X1, X19
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X21, X31
	074 Move W22, 3
	075 Move X0, X20
	076 Move X1, X31
	077 Move X2, X31
	078 Call IntPtr.op_Inequality, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {86}
	083 Move X0, X20
	084 Move X1, X31
	085 Call ProfilerUnsafeUtility.EndSample, X0
	086 Compare X21, 0
	087 JumpIfNotEqual {143}
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Compare W22, 0
	090 JumpIfNotEqual {136}
	091 Move X20, 0x35F000
	092 Move X20, [X20+3336]
	093 Move X0, [X20]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X20]
	099 Move X8, [X0+184]
	100 Move X8, [X8+24]
	101 Compare X8, 0
	102 JumpIfEqual {108}
	103 Move X9, [X8+24]
	104 Move X0, [X8+64]
	105 Move X2, [X8+40]
	106 Move X1, X19
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Move X20, [X19+224]
	109 Move X1, X31
	110 Move X2, X31
	111 Move X0, X20
	112 Call IntPtr.op_Inequality, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {120}
	117 Move X0, X20
	118 Move X1, X31
	119 Call ProfilerUnsafeUtility.BeginSample, X0
	120 Move X0, X19
	121 Call Panel.UpdateForRepaint, X0
	122 Move X19, X31
	123 Move X0, X20
	124 Move X1, X31
	125 Move X2, X31
	126 Call IntPtr.op_Inequality, X0, X1
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {134}
	131 Move X0, X20
	132 Move X1, X31
	133 Call ProfilerUnsafeUtility.EndSample, X0
	134 Compare X19, 0
	135 JumpIfNotEqual {145}
	136 Move X20, [X31+32]
	137 Move X19, [X31+40]
	138 Move X22, [X31+16]
	139 Move X21, [X31+24]
	140 Move X30, [X31+48]
	141 Return 
	142 Call 0x1C17F20
	143 Move X0, X21
	144 Call 0x1C17F18
	145 Move X0, X19
	146 Call 0x1C17F18
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X22, X0
	149 Move X0, X22
	150 Call 0x3EB2AD0
	151 Move X21, [X0]
	152 Call 0x3EB2AE0
	153 Move W22, W31
	154 Move X21, X31
	155 Move X22, X0
	156 Move X0, X20
	157 Move X1, X31
	158 Move X2, X31
	159 Call IntPtr.op_Inequality, X0, X1
	160 Move TEMP, X0
	161 And TEMP, TEMP, 1
	162 Compare TEMP, 1
	163 JumpIfNotEqual {167}
	164 Move X0, X20
	165 Move X1, X31
	166 Call ProfilerUnsafeUtility.EndSample, X0
	167 Compare X21, 0
	168 JumpIfEqual {192}
	169 Move X0, X21
	170 Call 0x1C17F18
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X22, X0
	173 Move X0, X22
	174 Call 0x3EB2AD0
	175 Move X19, [X0]
	176 Call 0x3EB2AE0
	177 Move X19, X31
	178 Move X22, X0
	179 Move X0, X20
	180 Move X1, X31
	181 Move X2, X31
	182 Call IntPtr.op_Inequality, X0, X1
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {190}
	187 Move X0, X20
	188 Move X1, X31
	189 Call ProfilerUnsafeUtility.EndSample, X0
	190 Compare X19, 0
	191 JumpIfNotEqual {194}
	192 Move X0, X22
	193 Call 0x1D2D690
	194 Move X0, X19
	195 Call 0x1C17F18
	196 Call 0x1991590

Method: System.Void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType)

Disassembly:
	0x03DBF388 ADD X9, X9, X10, 0x3, LSL
	0x03DBF38C LDUR X9, [X9 - 0x8]
	0x03DBF390 CMP X9, X8
	0x03DBF394 CSEL X8, X19, X31, EQ
	0x03DBF398 B.EQ 0x3DBF3A8
	0x03DBF39C LDP X20, X19, [X31 + 0x10]
	0x03DBF3A0 LDR X30, [X31], #0x20
	0x03DBF3A4 RET
	0x03DBF3A8 CBZ X8, 0x3DBF430
	0x03DBF3AC MOV X0, X8
	0x03DBF3B0 MOV X1, X31
	0x03DBF3B4 BL 0x3DEC0CC
	0x03DBF3B8 CBZ X0, 0x3DBF39C
	0x03DBF3BC ADRP X10, 0x35D000
	0x03DBF3C0 LDR X8, [X0]
	0x03DBF3C4 LDR X10, [X10 + 0xE80]
	0x03DBF3C8 MOV X19, X0
	0x03DBF3CC LDRH W9, [X8 + 0x12E]
	0x03DBF3D0 LDR X1, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+200]
	005 Move X19, X0
	006 Move X0, [X0+176]
	007 Add W8, W8, 1
	008 Move [X19+200], W8
	009 Compare X0, 0
	010 JumpIfEqual {25}
	011 Move X3, X31
	012 Move W20, W2
	013 Call VisualTreeUpdater.OnVersionChanged, X0, X1, X2
	014 Move TEMP, X20
	015 And TEMP, TEMP, 4
	016 Compare TEMP, 4
	017 JumpIfNotEqual {21}
	018 Move W8, [X19+208]
	019 Add W8, W8, 1
	020 Move [X19+208], W8
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 
	025 Call 0x1C17F20

Method: UnityEngine.UIElements.IVisualTreeUpdater GetUpdater(UnityEngine.UIElements.VisualTreeUpdatePhase phase)

Disassembly:
	0x03DBF3D4 CBZ X9, 0x3DBF3F8
	0x03DBF3D8 LDR X10, [X8 + 0xB0]
	0x03DBF3DC ADD X10, X10, 0x8
	0x03DBF3E0 LDUR X11, [X10 - 0x8]
	0x03DBF3E4 CMP X11, X1
	0x03DBF3E8 B.EQ 0x3DBF408
	0x03DBF3EC SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+176]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call VisualTreeUpdater.GetUpdater, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03DBF3F0 ADD X10, X10, 0x10
	0x03DBF3F4 B.NE 0x3DBF3E0
	0x03DBF3F8 MOVZ W2, 0x1
	0x03DBF3FC MOV X0, X19
	0x03DBF400 BL 0x1C5C788
	0x03DBF404 B 0x3DBF418
	0x03DBF408 LDR W9, [X10]
	0x03DBF40C ADD W9, W9, 0x1
	0x03DBF410 ADD X8, X8, W9, 0x4, SXTW
	0x03DBF414 ADD X0, X8, 0x138
	0x03DBF418 LDP X8, X1, [X0]
	0x03DBF41C MOV X0, X19
	0x03DBF420 BLR X8
	0x03DBF424 CBZ X0, 0x3DBF39C
	0x03DBF428 LDR X0, [X0 + 0x28]
	0x03DBF42C B 0x3DBF39C
	0x03DBF430 BL 0x1C16F20
	0x03DBF434 STR X30, [X31 - 0x10]!
	0x03DBF438 LDR X8, [X0 + 0x10]
	0x03DBF43C CBZ X8, 0x3DBF464
	0x03DBF440 LDR W9, [X8 + 0x18]
	0x03DBF444 CMP W9, W2
	0x03DBF448 B.LS 0x3DBF468
	0x03DBF44C ADD X8, X8, W2, 0x3, SXTW
	0x03DBF450 LDR X8, [X8 + 0x20]
	0x03DBF454 CMP X8, X1
	0x03DBF458 CSET W0, EQ
	0x03DBF45C LDR X30, [X31], #0x10
	0x03DBF460 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x62A000
	006 Move X21, 0x3AB000
	007 Move X19, 0x35F000
	008 Move W8, [X20+246]
	009 Move X21, [X21+32]
	010 Move X19, [X19+3336]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x35F000
	016 Move X0, [X0+3336]
	017 Call 0x1C17CF4
	018 Move X0, 0x3AB000
	019 Move X0, [X0+32]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+246], W8
	023 Move X0, [X21]
	024 Move W1, 1
	025 Move W2, W31
	026 Move W3, W31
	027 Move X4, X31
	028 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	029 Move X8, [X19]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X8, [X8+184]
	033 Move [X8], X0
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

Method: UnityEngine.Vector2Int <Pick>g__PixelOf|101_0(UnityEngine.Vector2 p)

Disassembly:
	0x03DBEEE4 LDP X30, X21, [X31], #0x20
	0x03DBEEE8 RET
	0x03DBEEEC ADRP X0, 0x35D000
	0x03DBEEF0 LDR X0, [X0 + 0x918]
	0x03DBEEF4 BL 0x1C16CF4
	0x03DBEEF8 MOVZ W8, 0x1
	0x03DBEEFC STRB W8, [X21 + 0x102]
	0x03DBEF00 CBNZ X20, 0x3DBEED8
	0x03DBEF04 ADRP X20, 0x35D000
	0x03DBEF08 LDR X20, [X20 + 0x918]
	0x03DBEF0C LDR X0, [X20]
	0x03DBEF10 LDR W8, [X0 + 0xE0]
	0x03DBEF14 CBNZ W8, 0x3DBEF20
	0x03DBEF18 BL 0x1C16DFC
	0x03DBEF1C LDR X0, [X20]
	0x03DBEF20 LDR X8, [X0 + 0xB8]
	0x03DBEF24 LDR X20, [X8 + 0x8]
	0x03DBEF28 CBNZ X19, 0x3DBEEDC
	0x03DBEF2C BL 0x1C16F20
	0x03DBEF30 STP X30, X19, [X31 - 0x10]!
	0x03DBEF34 LDR X8, [X0 + 0x1E0]
	0x03DBEF38 CBZ X8, 0x3DBEF64
	0x03DBEF3C MOV X19, X0
	0x03DBEF40 LDR X9, [X8 + 0x18]
	0x03DBEF44 LDR X0, [X8 + 0x40]
	0x03DBEF48 LDR X1, [X8 + 0x28]
	0x03DBEF4C BLR X9
	0x03DBEF50 LDR V2, [X19 + 0x20]
	0x03DBEF54 FDIV S0, S0, S2
	0x03DBEF58 FDIV S1, S1, S2
	0x03DBEF5C LDP X30, X19, [X31], #0x10
	0x03DBEF60 RET
	0x03DBEF64 BL 0x1C16F20
	0x03DBEF68 STP D15, D14, [X31 - 0x70]!
	0x03DBEF6C STP D13, D12, [X31 + 0x10]
	0x03DBEF70 STP D11, D10, [X31 + 0x20]
	0x03DBEF74 STP D9, D8, [X31 + 0x30]
	0x03DBEF78 STR X30, [X31 + 0x40]
	0x03DBEF7C STP X22, X21, [X31 + 0x50]
	0x03DBEF80 STP X20, X19, [X31 + 0x60]
	0x03DBEF84 MOV W22, W3
	0x03DBEF88 MOV X19, X2
	0x03DBEF8C MOV X20, X1
	0x03DBEF90 MOV V8.16B, V3.16B
	0x03DBEF94 MOV V9.16B, V2.16B
	0x03DBEF98 MOV V10.16B, V1.16B
	0x03DBEF9C MOV V11.16B, V0.16B
	0x03DBEFA0 MOV X21, X0
	0x03DBEFA4 BL 0x3DBEF30
	0x03DBEFA8 STP S0, S1, [X20]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x61B000
	007 Move W8, [X19+2595]
	008 Move V8, V1
	009 Move V9, V0
	010 Compare W8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, 0x336000
	013 Move X0, [X0+1448]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2595], W8
	017 Move X20, 0x336000
	018 Move X20, [X20+1448]
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfEqual {24}
	023 NotImplemented "Instruction FRINTM not yet implemented."
	024 Call 0x1C17DFC
	025 Move W8, [X19+2595]
	026 NotImplemented "Instruction FRINTM not yet implemented."
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x336000
	030 Move X0, [X0+1448]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+2595], W8
	034 Move X0, [X20]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W10, 0x7F800000
	040 NotImplemented "Instruction FRINTM not yet implemented."
	041 NotImplemented "Instruction FCVTMS not yet implemented."
	042 Move S1, W10
	043 Move X11, 0x80000000
	044 Move X9, X9
	045 ShiftRight X9, 32
	046 And X9, X9, 0x7FFFFFFF
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 NotImplemented "Instruction FCVTZS not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move W10, 0x80000000
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 Or X0, X8, X9
	057 Move D9, [X31+48]
	058 Move D8, [X31+56]
	059 Return X0

