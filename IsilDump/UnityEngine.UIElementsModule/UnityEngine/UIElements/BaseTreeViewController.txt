Type: UnityEngine.UIElements.BaseTreeViewController

Method: UnityEngine.UIElements.BaseTreeView get_baseTreeView()

Disassembly:
	0x03CF2324 STP X26, X25, [X31 + 0x20]
	0x03CF2328 STP X24, X23, [X31 + 0x30]
	0x03CF232C STP X22, X21, [X31 + 0x40]
	0x03CF2330 STP X20, X19, [X31 + 0x50]
	0x03CF2334 ADRP X21, 0x6F5000
	0x03CF2338 LDRB W8, [X21 + 0x77B]
	0x03CF233C MOV X19, X1
	0x03CF2340 MOV X20, X0
	0x03CF2344 TBNZ X8, 0x0, 0x3CF2404
	0x03CF2348 ADRP X0, 0x470000
	0x03CF234C LDR X0, [X0 + 0xB00]
	0x03CF2350 BL 0x1C16CF4
	0x03CF2354 ADRP X0, 0x45C000
	0x03CF2358 LDR X0, [X0 + 0x2A8]
	0x03CF235C BL 0x1C16CF4
	0x03CF2360 ADRP X0, 0x403000
	0x03CF2364 LDR X0, [X0 + 0x9D8]
	0x03CF2368 BL 0x1C16CF4
	0x03CF236C ADRP X0, 0x40E000
	0x03CF2370 LDR X0, [X0 + 0x5A0]
	0x03CF2374 BL 0x1C16CF4
	0x03CF2378 ADRP X0, 0x402000
	0x03CF237C LDR X0, [X0 + 0xE00]
	0x03CF2380 BL 0x1C16CF4
	0x03CF2384 ADRP X0, 0x402000
	0x03CF2388 LDR X0, [X0 + 0xE08]
	0x03CF238C BL 0x1C16CF4
	0x03CF2390 ADRP X0, 0x401000
	0x03CF2394 LDR X0, [X0 + 0xE00]
	0x03CF2398 BL 0x1C16CF4
	0x03CF239C ADRP X0, 0x429000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6F6000
	005 Move W8, [X20+1909]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x471000
	012 Move X0, [X0+2816]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1909], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move X9, 0x471000
	020 Move X9, [X9+2816]
	021 Move X10, [X8]
	022 Move X9, [X9]
	023 Move W12, [X10+304]
	024 Move W11, [X9+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X31
	027 Move X10, [X10+200]
	028 Add X10, X10, X11
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Collections.IList get_itemsSource()

Disassembly:
	0x03CF23A0 LDR X0, [X0 + 0x7B8]
	0x03CF23A4 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_itemsSource(System.Collections.IList value)

Disassembly:
	0x03CF23A8 ADRP X0, 0x429000
	0x03CF23AC LDR X0, [X0 + 0x7C0]
	0x03CF23B0 BL 0x1C16CF4
	0x03CF23B4 ADRP X0, 0x401000
	0x03CF23B8 LDR X0, [X0 + 0xE18]
	0x03CF23BC BL 0x1C16CF4
	0x03CF23C0 ADRP X0, 0x470000
	0x03CF23C4 LDR X0, [X0 + 0xB70]
	0x03CF23C8 BL 0x1C16CF4
	0x03CF23CC ADRP X0, 0x470000
	0x03CF23D0 LDR X0, [X0 + 0xB30]
	0x03CF23D4 BL 0x1C16CF4
	0x03CF23D8 ADRP X0, 0x470000
	0x03CF23DC LDR X0, [X0 + 0xB78]
	0x03CF23E0 BL 0x1C16CF4
	0x03CF23E4 ADRP X0, 0x42A000
	0x03CF23E8 LDR X0, [X0 + 0x830]
	0x03CF23EC BL 0x1C16CF4
	0x03CF23F0 ADRP X0, 0x429000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x402000
	004 Move X0, [X0+1456]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X19, X0
	008 Move X0, 0x471000
	009 Move X0, [X0+2824]
	010 Call 0x1C17D08
	011 Move X1, X0
	012 Move X0, X19
	013 Move X2, X31
	014 Call InvalidOperationException..ctor, X0, X1
	015 Move X0, 0x471000
	016 Move X0, [X0+2832]
	017 Call 0x1C17D08
	018 Move X1, X0
	019 Move X0, X19
	020 Call 0x1C17DEC

Method: System.Void RebuildTree()

Disassembly:
	0x03CF23F4 LDR X0, [X0 + 0x898]
	0x03CF23F8 BL 0x1C16CF4
	0x03CF23FC MOVZ W8, 0x1
	0x03CF2400 STRB W8, [X21 + 0x77B]
	0x03CF2404 CBZ X19, 0x3CF2864
	0x03CF2408 LDRB W8, [X19 + 0x100]
	0x03CF240C TBZ X8, 0x2, 0x3CF2848
	0x03CF2410 LDR X8, [X19]
	0x03CF2414 MOV X0, X19
	0x03CF2418 LDP X9, X1, [X8 + 0x1D8]
	0x03CF241C BLR X9
	0x03CF2420 CBZ X0, 0x3CF2444
	0x03CF2424 ADRP X8, 0x429000
	0x03CF2428 LDR X8, [X8 + 0x898]
	0x03CF242C LDR X9, [X0]
	0x03CF2430 LDR X8, [X8]
	0x03CF2434 LDRB W11, [X9 + 0x130]
	0x03CF2438 LDRB W10, [X8 + 0x130]
	0x03CF243C CMP W11, W10
	0x03CF2440 B.CS 0x3CF244C
	0x03CF2444 MOV X21, X31
	0x03CF2448 B 0x3CF2460
	0x03CF244C LDR X9, [X9 + 0xC8]
	0x03CF2450 ADD X9, X9, X10, 0x3, LSL
	0x03CF2454 LDUR X9, [X9 - 0x8]
	0x03CF2458 CMP X9, X8
	0x03CF245C CSEL X21, X0, X31, EQ
	0x03CF2460 ADRP X22, 0x470000
	0x03CF2464 LDR X22, [X22 + 0xB00]
	0x03CF2468 LDR X0, [X22]
	0x03CF246C LDR W8, [X0 + 0xE0]
	0x03CF2470 CBNZ W8, 0x3CF247C
	0x03CF2474 BL 0x1C16DFC
	0x03CF2478 LDR X0, [X22]
	0x03CF247C ADRP X8, 0x42A000
	0x03CF2480 LDR X8, [X8 + 0x830]
	0x03CF2484 LDR X9, [X0 + 0xB8]
	0x03CF2488 LDR X8, [X8]
	0x03CF248C LDR X22, [X9 + 0x10]
	0x03CF2490 LDR W10, [X8 + 0xE0]
	0x03CF2494 CBNZ W10, 0x3CF24A0
	0x03CF2498 MOV X0, X8
	0x03CF249C BL 0x1C16DFC
	0x03CF24A0 ADRP X8, 0x470000
	0x03CF24A4 LDR X8, [X8 + 0xB78]
	0x03CF24A8 MOV X0, X21
	0x03CF24AC MOV X1, X22
	0x03CF24B0 MOV X2, X31
	0x03CF24B4 LDR X3, [X8]
	0x03CF24B8 BL 0x22A17C4
	0x03CF24BC CBZ X0, 0x3CF2864
	0x03CF24C0 MOV X1, X31
	0x03CF24C4 BL 0x3DEBA30
	0x03CF24C8 CBZ X0, 0x3CF2864
	0x03CF24CC ADRP X9, 0x470000
	0x03CF24D0 LDR X9, [X9 + 0xB30]
	0x03CF24D4 LDR X8, [X0]
	0x03CF24D8 LDR X1, [X9]
	0x03CF24DC LDRB W10, [X8 + 0x130]
	0x03CF24E0 LDRB W9, [X1 + 0x130]
	0x03CF24E4 CMP W10, W9
	0x03CF24E8 B.CC 0x3CF2868
	0x03CF24EC LDR X8, [X8 + 0xC8]
	0x03CF24F0 ADD X8, X8, X9, 0x3, LSL
	0x03CF24F4 LDUR X8, [X8 - 0x8]
	0x03CF24F8 CMP X8, X1
	0x03CF24FC B.NE 0x3CF2868
	0x03CF2500 LDR X8, [X20]
	0x03CF2504 LDR W22, [X0 + 0x20]
	0x03CF2508 MOV X0, X20
	0x03CF250C LDP X9, X2, [X8 + 0x1F8]
	0x03CF2510 MOV W1, W22
	0x03CF2514 BLR X9
	0x03CF2518 MOV W24, W0
	0x03CF251C MOV X0, X20
	0x03CF2520 MOV W1, W22
	0x03CF2524 BL 0x3CF1D70
	0x03CF2528 MOV W23, W0
	0x03CF252C MOV X0, X20
	0x03CF2530 MOV W1, W22
	0x03CF2534 BL 0x3CF1E44
	0x03CF2538 TBZ X0, 0x0, 0x3CF2848
	0x03CF253C MOV X0, X20
	0x03CF2540 BL 0x3CF1324
	0x03CF2544 CBZ X0, 0x3CF2864
	0x03CF2548 ADRP X8, 0x402000
	0x03CF254C LDR X25, [X0 + 0x4B0]
	0x03CF2550 LDR X8, [X8 + 0xE08]
	0x03CF2554 LDR X0, [X8]
	0x03CF2558 BL 0x1C16F10
	0x03CF255C ADRP X8, 0x402000
	0x03CF2560 LDR X8, [X8 + 0xE00]
	0x03CF2564 MOV X1, X25
	0x03CF2568 MOV X21, X0
	0x03CF256C LDR X2, [X8]
	0x03CF2570 BL 0x2DA9FD8
	0x03CF2574 CBZ X21, 0x3CF2864
	0x03CF2578 TBZ X23, 0x0, 0x3CF2598
	0x03CF257C ADRP X8, 0x40E000
	0x03CF2580 LDR X8, [X8 + 0x5A0]
	0x03CF2584 MOV X0, X21
	0x03CF2588 MOV W1, W24
	0x03CF258C LDR X2, [X8]
	0x03CF2590 BL 0x2DAA770
	0x03CF2594 B 0x3CF25B0
	0x03CF2598 ADRP X8, 0x403000
	0x03CF259C LDR X8, [X8 + 0x9D8]
	0x03CF25A0 MOV X0, X21
	0x03CF25A4 MOV W1, W24
	0x03CF25A8 LDR X2, [X8]
	0x03CF25AC BL 0x2DAB03C
	0x03CF25B0 MOV X0, X20
	0x03CF25B4 MOV W1, W22
	0x03CF25B8 BL 0x3CF293C
	0x03CF25BC LDR X8, [X20]
	0x03CF25C0 MOV X1, X0
	0x03CF25C4 MOV X0, X20
	0x03CF25C8 LDR X9, [X8 + 0x298]
	0x03CF25CC LDR X2, [X8 + 0x2A0]
	0x03CF25D0 BLR X9
	0x03CF25D4 CBZ X0, 0x3CF2864
	0x03CF25D8 ADRP X10, 0x429000
	0x03CF25DC LDR X8, [X0]
	0x03CF25E0 LDR X10, [X10 + 0x7B8]
	0x03CF25E4 MOV X22, X0
	0x03CF25E8 LDRH W9, [X8 + 0x12E]
	0x03CF25EC LDR X1, [X10]
	0x03CF25F0 CBZ X9, 0x3CF2614
	0x03CF25F4 LDR X10, [X8 + 0xB0]
	0x03CF25F8 ADD X10, X10, 0x8
	0x03CF25FC LDUR X11, [X10 - 0x8]
	0x03CF2600 CMP X11, X1
	0x03CF2604 B.EQ 0x3CF2624
	0x03CF2608 SUBS X9, X9, 0x1
	0x03CF260C ADD X10, X10, 0x10
	0x03CF2610 B.NE 0x3CF25FC
	0x03CF2614 MOV X0, X22
	0x03CF2618 MOV W2, W31
	0x03CF261C BL 0x1C5C788
	0x03CF2620 B 0x3CF2630
	0x03CF2624 LDRSW X9, [X10]
	0x03CF2628 ADD X8, X8, X9, 0x4, LSL
	0x03CF262C ADD X0, X8, 0x138
	0x03CF2630 LDP X8, X1, [X0]
	0x03CF2634 MOV X0, X22
	0x03CF2638 BLR X8
	0x03CF263C MOV X22, X0
	0x03CF2640 CBZ X0, 0x3CF286C
	0x03CF2644 ADRP X25, 0x401000
	0x03CF2648 ADRP X26, 0x429000
	0x03CF264C ADRP X27, 0x40E000
	0x03CF2650 ADRP X28, 0x403000
	0x03CF2654 LDR X25, [X25 + 0xE18]
	0x03CF2658 LDR X26, [X26 + 0x7C0]
	0x03CF265C LDR X27, [X27 + 0x5A0]
	0x03CF2660 LDR X28, [X28 + 0x9D8]
	0x03CF2664 LDR X8, [X22]
	0x03CF2668 LDR X1, [X25]
	0x03CF266C LDRH W9, [X8 + 0x12E]
	0x03CF2670 CBZ X9, 0x3CF2694
	0x03CF2674 LDR X10, [X8 + 0xB0]
	0x03CF2678 ADD X10, X10, 0x8
	0x03CF267C LDUR X11, [X10 - 0x8]
	0x03CF2680 CMP X11, X1
	0x03CF2684 B.EQ 0x3CF26A4
	0x03CF2688 SUBS X9, X9, 0x1
	0x03CF268C ADD X10, X10, 0x10
	0x03CF2690 B.NE 0x3CF267C
	0x03CF2694 MOV X0, X22
	0x03CF2698 MOV W2, W31
	0x03CF269C BL 0x1C5C788
	0x03CF26A0 B 0x3CF26B0
	0x03CF26A4 LDRSW X9, [X10]
	0x03CF26A8 ADD X8, X8, X9, 0x4, LSL
	0x03CF26AC ADD X0, X8, 0x138
	0x03CF26B0 LDP X8, X1, [X0]
	0x03CF26B4 MOV X0, X22
	0x03CF26B8 BLR X8
	0x03CF26BC TBZ X0, 0x0, 0x3CF2764
	0x03CF26C0 LDR X8, [X22]
	0x03CF26C4 LDR X1, [X26]
	0x03CF26C8 LDRH W9, [X8 + 0x12E]
	0x03CF26CC CBZ X9, 0x3CF26F0
	0x03CF26D0 LDR X10, [X8 + 0xB0]
	0x03CF26D4 ADD X10, X10, 0x8
	0x03CF26D8 LDUR X11, [X10 - 0x8]
	0x03CF26DC CMP X11, X1
	0x03CF26E0 B.EQ 0x3CF2700
	0x03CF26E4 SUBS X9, X9, 0x1
	0x03CF26E8 ADD X10, X10, 0x10
	0x03CF26EC B.NE 0x3CF26D8
	0x03CF26F0 MOV X0, X22
	0x03CF26F4 MOV W2, W31
	0x03CF26F8 BL 0x1C5C788
	0x03CF26FC B 0x3CF270C
	0x03CF2700 LDRSW X9, [X10]
	0x03CF2704 ADD X8, X8, X9, 0x4, LSL
	0x03CF2708 ADD X0, X8, 0x138
	0x03CF270C LDP X8, X1, [X0]
	0x03CF2710 MOV X0, X22
	0x03CF2714 BLR X8
	0x03CF2718 LDR X8, [X20]
	0x03CF271C MOV W24, W0
	0x03CF2720 LDR X9, [X8 + 0x2D8]
	0x03CF2724 LDR X2, [X8 + 0x2E0]
	0x03CF2728 MOV X0, X20
	0x03CF272C MOV W1, W24
	0x03CF2730 BLR X9
	0x03CF2734 TBZ X0, 0x0, 0x3CF2664
	0x03CF2738 TBZ X23, 0x0, 0x3CF2750
	0x03CF273C LDR X2, [X27]
	0x03CF2740 MOV X0, X21
	0x03CF2744 MOV W1, W24
	0x03CF2748 BL 0x2DAA770
	0x03CF274C B 0x3CF2664
	0x03CF2750 LDR X2, [X28]
	0x03CF2754 MOV X0, X21
	0x03CF2758 MOV W1, W24
	0x03CF275C BL 0x2DAB03C
	0x03CF2760 B 0x3CF2664
	0x03CF2764 MOV X23, X31
	0x03CF2768 MOVZ W24, 0xC
	0x03CF276C CBZ X22, 0x3CF27D0
	0x03CF2770 ADRP X10, 0x401000
	0x03CF2774 LDR X8, [X22]
	0x03CF2778 LDR X10, [X10 + 0xE00]
	0x03CF277C LDRH W9, [X8 + 0x12E]
	0x03CF2780 LDR X1, [X10]
	0x03CF2784 CBZ X9, 0x3CF27A8
	0x03CF2788 LDR X10, [X8 + 0xB0]
	0x03CF278C ADD X10, X10, 0x8
	0x03CF2790 LDUR X11, [X10 - 0x8]
	0x03CF2794 CMP X11, X1
	0x03CF2798 B.EQ 0x3CF27B8
	0x03CF279C SUBS X9, X9, 0x1
	0x03CF27A0 ADD X10, X10, 0x10
	0x03CF27A4 B.NE 0x3CF2790
	0x03CF27A8 MOV X0, X22
	0x03CF27AC MOV W2, W31
	0x03CF27B0 BL 0x1C5C788
	0x03CF27B4 B 0x3CF27C4
	0x03CF27B8 LDRSW X9, [X10]
	0x03CF27BC ADD X8, X8, X9, 0x4, LSL
	0x03CF27C0 ADD X0, X8, 0x138
	0x03CF27C4 LDP X8, X1, [X0]
	0x03CF27C8 MOV X0, X22
	0x03CF27CC BLR X8
	0x03CF27D0 CBNZ X23, 0x3CF2870
	0x03CF27D4 CMP W24, 0xC
	0x03CF27D8 B.EQ 0x3CF27E0
	0x03CF27DC CBNZ W24, 0x3CF2848
	0x03CF27E0 MOV X0, X20
	0x03CF27E4 BL 0x3CF1324
	0x03CF27E8 ADRP X8, 0x45C000
	0x03CF27EC LDR X8, [X8 + 0x2A8]
	0x03CF27F0 MOV X22, X0
	0x03CF27F4 MOV X0, X21
	0x03CF27F8 LDR X1, [X8]
	0x03CF27FC BL 0x21D7880
	0x03CF2800 CBZ X22, 0x3CF2864
	0x03CF2804 STR X0, [X22 + 0x4B0]
	0x03CF2808 MOV X0, X20
	0x03CF280C BL 0x3CF1868
	0x03CF2810 MOV X0, X20
	0x03CF2814 BL 0x3CF1324
	0x03CF2818 CBZ X0, 0x3CF2864
	0x03CF281C MOV X1, X31
	0x03CF2820 BL 0x3CFD108
	0x03CF2824 MOV X0, X19
	0x03CF2828 LDP X20, X19, [X31 + 0x50]
	0x03CF282C LDP X22, X21, [X31 + 0x40]
	0x03CF2830 LDP X24, X23, [X31 + 0x30]
	0x03CF2834 LDP X26, X25, [X31 + 0x20]
	0x03CF2838 LDP X28, X27, [X31 + 0x10]
	0x03CF283C MOV X1, X31
	0x03CF2840 LDR X30, [X31], #0x60
	0x03CF2844 B 0x3D9D950
	0x03CF2848 LDP X20, X19, [X31 + 0x50]
	0x03CF284C LDP X22, X21, [X31 + 0x40]
	0x03CF2850 LDP X24, X23, [X31 + 0x30]
	0x03CF2854 LDP X26, X25, [X31 + 0x20]
	0x03CF2858 LDP X28, X27, [X31 + 0x10]
	0x03CF285C LDR X30, [X31], #0x60
	0x03CF2860 RET
	0x03CF2864 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0x6F6000
	014 Move W8, [X20+1910]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {46}
	020 Move X0, 0x471000
	021 Move X0, [X0+2840]
	022 Call 0x1C17CF4
	023 Move X0, 0x471000
	024 Move X0, [X0+2848]
	025 Call 0x1C17CF4
	026 Move X0, 0x402000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0x42A000
	030 Move X0, [X0+1976]
	031 Call 0x1C17CF4
	032 Move X0, 0x42A000
	033 Move X0, [X0+1984]
	034 Call 0x1C17CF4
	035 Move X0, 0x402000
	036 Move X0, [X0+3608]
	037 Call 0x1C17CF4
	038 Move X0, 0x403000
	039 Move X0, [X0+3600]
	040 Call 0x1C17CF4
	041 Move X0, 0x409000
	042 Move X0, [X0+2136]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+1910], W8
	046 Move X0, [X19+48]
	047 Compare X0, 0
	048 JumpIfEqual {253}
	049 Move X8, 0x471000
	050 Move X8, [X8+2848]
	051 Move X1, [X8]
	052 Call Dictionary`2<Int32, TreeItem>.Clear, X0
	053 Move X8, [X19+56]
	054 Compare X8, 0
	055 JumpIfEqual {253}
	056 Move W9, [X8+28]
	057 Move X0, X19
	058 Move X1, X31
	059 Add W9, W9, 1
	060 Move [X8+24], W31
	061 Move [X8+28], W9
	062 Move X8, [X19]
	063 Move X9, [X8+664]
	064 Move X2, [X8+672]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X0, 0
	067 JumpIfEqual {253}
	068 Move X10, 0x42A000
	069 Move X8, [X0]
	070 Move X10, [X10+1976]
	071 Move X20, X0
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Move X1, [X10]
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X20
	083 Move W2, W31
	084 Call 0x1C5D788
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Add X8, X8, X9
	087 Add X0, X8, 312
	088 Move X8, [X0]
	089 Move X1, [X0+8]
	090 Move X24, 0x402000
	091 Move X24, [X24+3584]
	092 Move X0, X20
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X20, X0
	095 Compare X0, 0
	096 JumpIfEqual {254}
	097 Move X25, 0x402000
	098 Move X26, 0x42A000
	099 Move X27, 0x403000
	100 Move X28, 0x471000
	101 Move X25, [X25+3608]
	102 Move X26, [X26+1984]
	103 Move X27, [X27+3600]
	104 Move X28, [X28+2840]
	105 Move X8, [X20]
	106 Move X1, [X25]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X20
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X0, X20
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {205}
	130 Move X8, [X20]
	131 Move X1, [X26]
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move X0, X20
	142 Move W2, W31
	143 Call 0x1C5D788
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add X8, X8, X9
	146 Add X0, X8, 312
	147 Move X8, [X0]
	148 Move X1, [X0+8]
	149 Move X0, X20
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move X8, [X19]
	152 Move W21, W0
	153 Move X9, [X8+680]
	154 Move X2, [X8+688]
	155 Move X0, X19
	156 Move W1, W21
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move W22, W0
	159 Add W31, W0, 1
	160 Move X0, [X19+56]
	161 Compare X0, 0
	162 JumpIfEqual {251}
	163 Move W10, [X0+28]
	164 Move X8, [X0+16]
	165 Move X9, [X27]
	166 Add W10, W10, 1
	167 Move [X0+28], W10
	168 Compare X8, 0
	169 JumpIfEqual {252}
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Move W11, [X8+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add W9, W10, 1
	174 Add X8, X8, X10
	175 Move [X0+24], W9
	176 Move [X8+32], W21
	177 Move X8, [X9+32]
	178 Move X8, [X8+192]
	179 Move X2, [X8+112]
	180 Move W1, W21
	181 Call List`1<Int32>.AddWithResize, X0, X1
	182 Move X8, [X19]
	183 Move X23, [X19+48]
	184 Move X9, [X8+696]
	185 Move X2, [X8+704]
	186 Move X0, X19
	187 Move W1, W21
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move X3, X0
	190 Move [X31], X31
	191 Move [X31+8], X31
	192 Add X0, X31, 0
	193 Move W1, W21
	194 Move W2, W22
	195 Move X4, X31
	196 Call TreeItem..ctor, X0, X1, X2, X3
	197 Compare X23, 0
	198 JumpIfEqual {250}
	199 Move X2, [X31]
	200 Move X3, [X31+8]
	201 Move X4, [X28]
	202 Move X0, X23
	203 Move W1, W21
	204 Call Dictionary`2<Int32, TreeItem>.Add, X0, X1, X2
	205 Move X21, X31
	206 Move W22, 5
	207 Compare X20, 0
	208 JumpIfEqual {230}
	209 Move X8, [X20]
	210 Move X1, [X24]
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Compare X9, 0
	213 JumpIfEqual {220}
	214 Move X10, [X8+176]
	215 Add X10, X10, 8
	216 NotImplemented "Instruction LDUR not yet implemented."
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Subtract X9, X9, 1
	219 Add X10, X10, 16
	220 Move X0, X20
	221 Move W2, W31
	222 Call 0x1C5D788
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Add X8, X8, X9
	225 Add X0, X8, 312
	226 Move X8, [X0]
	227 Move X1, [X0+8]
	228 Move X0, X20
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Compare X21, 0
	231 JumpIfNotEqual {255}
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Compare W22, 0
	234 JumpIfNotEqual {237}
	235 Move X0, X19
	236 Call BaseTreeViewController.RegenerateWrappers, X0
	237 Move X20, [X31+96]
	238 Move X19, [X31+104]
	239 Move X22, [X31+80]
	240 Move X21, [X31+88]
	241 Move X24, [X31+64]
	242 Move X23, [X31+72]
	243 Move X26, [X31+48]
	244 Move X25, [X31+56]
	245 Move X28, [X31+32]
	246 Move X27, [X31+40]
	247 Move X30, [X31+16]
	248 Add X31, X31, 112
	249 Return 
	250 Call 0x1C17F20
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Call 0x1C17F20
	254 Call 0x1C17F20
	255 Move X0, X21
	256 Call 0x1C17F18
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Call 0x3EB2AD0
	259 Move X21, [X0]
	260 Call 0x3EB2AE0
	261 Move W22, W31
	262 Compare X20, 0
	263 JumpIfNotEqual {209}
	264 Move X19, X0
	265 Move X21, X31
	266 Move X19, X0
	267 Compare X20, 0
	268 JumpIfEqual {290}
	269 Move X8, [X20]
	270 Move X1, [X24]
	271 NotImplemented "Instruction LDRH not yet implemented."
	272 Compare X9, 0
	273 JumpIfEqual {280}
	274 Move X10, [X8+176]
	275 Add X10, X10, 8
	276 NotImplemented "Instruction LDUR not yet implemented."
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Subtract X9, X9, 1
	279 Add X10, X10, 16
	280 Move X0, X20
	281 Move W2, W31
	282 Call 0x1C5D788
	283 NotImplemented "Instruction LDRSW not yet implemented."
	284 Add X8, X8, X9
	285 Add X0, X8, 312
	286 Move X8, [X0]
	287 Move X1, [X0+8]
	288 Move X0, X20
	289 NotImplemented "Instruction BLR not yet implemented."
	290 Compare X21, 0
	291 JumpIfNotEqual {294}
	292 Move X0, X19
	293 Call 0x1D2D690
	294 Move X0, X21
	295 Call 0x1C17F18
	296 Call 0x1991590

Method: System.Collections.Generic.IEnumerable`1<System.Int32> GetRootItemIds()

Disassembly:
	0x03CF2918 LDP X8, X1, [X0]
	0x03CF291C MOV X0, X22

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.Int32> GetAllItemIds(System.Collections.Generic.IEnumerable`1<System.Int32> rootIds = null)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 GetParentId(System.Int32 id)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Collections.Generic.IEnumerable`1<System.Int32> GetChildrenIds(System.Int32 id)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void Move(System.Int32 id, System.Int32 newParentId, System.Int32 childIndex = -1, System.Boolean rebuildTree = True)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void InvokeMakeItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem)

Disassembly:
	0x03CF2920 BLR X8
	0x03CF2924 CBNZ X23, 0x3CF2930
	0x03CF2928 MOV X0, X24
	0x03CF292C BL 0x1D2C690
	0x03CF2930 MOV X0, X23
	0x03CF2934 BL 0x1C16F18
	0x03CF2938 BL 0x1990590
	0x03CF293C SUB X31, X31, 0x60
	0x03CF2940 STP X30, X21, [X31 + 0x40]
	0x03CF2944 STP X20, X19, [X31 + 0x50]
	0x03CF2948 ADRP X21, 0x6F5000
	0x03CF294C LDRB W8, [X21 + 0x782]
	0x03CF2950 MOV W19, W1
	0x03CF2954 MOV X20, X0
	0x03CF2958 TBNZ X8, 0x0, 0x3CF2970
	0x03CF295C ADRP X0, 0x470000
	0x03CF2960 LDR X0, [X0 + 0xB68]
	0x03CF2964 BL 0x1C16CF4
	0x03CF2968 MOVZ W8, 0x1
	0x03CF296C STRB W8, [X21 + 0x782]
	0x03CF2970 MOV X0, X20
	0x03CF2974 MOV W1, W19
	0x03CF2978 STP X31, X31, [X31 + 0x20]
	0x03CF297C STR X31, [X31 + 0x30]
	0x03CF2980 BL 0x3CF3D08
	0x03CF2984 MOV W8, W0
	0x03CF2988 MOV X0, X31
	0x03CF298C TBZ X8, 0x0, 0x3CF29CC
	0x03CF2990 LDR X0, [X20 + 0x40]
	0x03CF2994 CBZ X0, 0x3CF29DC
	0x03CF2998 ADRP X8, 0x470000
	0x03CF299C LDR X8, [X8 + 0xB68]
	0x03CF29A0 MOV W1, W19
	0x03CF29A4 LDR X2, [X8]
	0x03CF29A8 ADD X8, X31, 0x8
	0x03CF29AC BL 0x30872C4
	0x03CF29B0 LDUR V0, [X31 + 0x8]
	0x03CF29B4 LDR X8, [X31 + 0x18]
	0x03CF29B8 ADD X0, X31, 0x20
	0x03CF29BC MOV X1, X31
	0x03CF29C0 STR V0, [X31 + 0x2]
	0x03CF29C4 STR X8, [X31 + 0x30]
	0x03CF29C8 BL 0x3D87974
	0x03CF29CC LDP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F6000
	006 Move W8, [X21+1911]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x471000
	014 Move X0, [X0+2864]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1911], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x471000
	021 Move X8, [X8+2864]
	022 Move X9, [X19]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Move X8, [X20]
	037 Move X0, X20
	038 Move X9, [X8+600]
	039 Move X1, [X8+608]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, [X19]
	042 Move X1, X0
	043 Move X0, X19
	044 Move X9, [X8+392]
	045 Move X2, [X8+400]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X0, X20
	048 Move X1, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]

Method: System.Void InvokeBindItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem, System.Int32 index)

Disassembly:
	0x03CF2C28 LDR X9, [X8 + 0x2B8]
	0x03CF2C2C LDR X2, [X8 + 0x2C0]
	0x03CF2C30 BLR X9
	0x03CF2C34 LDR X8, [X19]
	0x03CF2C38 MOV X1, X0
	0x03CF2C3C MOV X0, X19
	0x03CF2C40 LDR X9, [X8 + 0x298]
	0x03CF2C44 LDR X2, [X8 + 0x2A0]
	0x03CF2C48 BLR X9
	0x03CF2C4C CBZ X0, 0x3CF2EBC
	0x03CF2C50 ADRP X10, 0x429000
	0x03CF2C54 LDR X8, [X0]
	0x03CF2C58 LDR X10, [X10 + 0x7B8]
	0x03CF2C5C MOV X22, X0
	0x03CF2C60 LDRH W9, [X8 + 0x12E]
	0x03CF2C64 LDR X1, [X10]
	0x03CF2C68 CBZ X9, 0x3CF2C8C
	0x03CF2C6C LDR X10, [X8 + 0xB0]
	0x03CF2C70 ADD X10, X10, 0x8
	0x03CF2C74 LDUR X11, [X10 - 0x8]
	0x03CF2C78 CMP X11, X1
	0x03CF2C7C B.EQ 0x3CF2C9C
	0x03CF2C80 SUBS X9, X9, 0x1
	0x03CF2C84 ADD X10, X10, 0x10
	0x03CF2C88 B.NE 0x3CF2C74
	0x03CF2C8C MOV X0, X22
	0x03CF2C90 MOV W2, W31
	0x03CF2C94 BL 0x1C5C788
	0x03CF2C98 B 0x3CF2CA8
	0x03CF2C9C LDRSW X9, [X10]
	0x03CF2CA0 ADD X8, X8, X9, 0x4, LSL
	0x03CF2CA4 ADD X0, X8, 0x138
	0x03CF2CA8 LDP X8, X1, [X0]
	0x03CF2CAC MOV X0, X22
	0x03CF2CB0 BLR X8
	0x03CF2CB4 MOV X22, X0
	0x03CF2CB8 CBZ X0, 0x3CF2F8C
	0x03CF2CBC ADRP X24, 0x401000
	0x03CF2CC0 ADRP X25, 0x429000
	0x03CF2CC4 ADRP X26, 0x42B000
	0x03CF2CC8 LDR X24, [X24 + 0xE18]
	0x03CF2CCC LDR X25, [X25 + 0x7C0]
	0x03CF2CD0 LDR X26, [X26 + 0x8C0]
	0x03CF2CD4 LDR X8, [X22]
	0x03CF2CD8 LDR X1, [X24]
	0x03CF2CDC LDRH W9, [X8 + 0x12E]
	0x03CF2CE0 CBZ X9, 0x3CF2D04
	0x03CF2CE4 LDR X10, [X8 + 0xB0]
	0x03CF2CE8 ADD X10, X10, 0x8
	0x03CF2CEC LDUR X11, [X10 - 0x8]
	0x03CF2CF0 CMP X11, X1
	0x03CF2CF4 B.EQ 0x3CF2D14
	0x03CF2CF8 SUBS X9, X9, 0x1
	0x03CF2CFC ADD X10, X10, 0x10
	0x03CF2D00 B.NE 0x3CF2CEC
	0x03CF2D04 MOV X0, X22
	0x03CF2D08 MOV W2, W31
	0x03CF2D0C BL 0x1C5C788
	0x03CF2D10 B 0x3CF2D20
	0x03CF2D14 LDRSW X9, [X10]
	0x03CF2D18 ADD X8, X8, X9, 0x4, LSL
	0x03CF2D1C ADD X0, X8, 0x138
	0x03CF2D20 LDP X8, X1, [X0]
	0x03CF2D24 MOV X0, X22
	0x03CF2D28 BLR X8
	0x03CF2D2C TBZ X0, 0x0, 0x3CF2DB0
	0x03CF2D30 LDR X8, [X22]
	0x03CF2D34 LDR X1, [X25]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6F6000
	007 Move W8, [X22+1912]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x471000
	016 Move X0, [X0+2864]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1912], W8
	020 Compare X20, 0
	021 JumpIfEqual {70}
	022 Move X8, 0x471000
	023 Move X8, [X8+2864]
	024 Move X9, [X20]
	025 Move X8, [X8]
	026 Move W11, [X9+304]
	027 Move W10, [X8+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, [X9+200]
	030 Add X9, X9, X10
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X21]
	034 Move X0, X21
	035 Move W1, W19
	036 Move X9, [X8+504]
	037 Move X2, [X8+512]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move W1, W0
	040 Move X0, X21
	041 Call BaseTreeViewController.GetIndentationDepth, X0, X1
	042 Move X8, [X20+88]
	043 Compare X8, 0
	044 JumpIfEqual {48}
	045 Move [X20+128], W0
	046 Move X0, X20
	047 Call ReusableTreeViewItem.UpdateIndentLayout, X0
	048 Move X0, X21
	049 Move W1, W19
	050 Call BaseTreeViewController.IsExpandedByIndex, X0, X1
	051 Move X8, [X20+72]
	052 Compare X8, 0
	053 JumpIfEqual {60}
	054 Move X9, [X8]
	055 And W1, W0, 1
	056 Move X0, X8
	057 Move X10, [X9+2184]
	058 Move X2, [X9+2192]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X0, X21
	061 Move W1, W19
	062 Call BaseTreeViewController.HasChildrenByIndex, X0, X1
	063 Move X8, [X20+72]
	064 Compare X8, 0
	065 JumpIfEqual {70}
	066 And W1, W0, 1
	067 Move X0, X8
	068 Move X2, X31
	069 Call VisualElement.set_visible, X0, X1
	070 Move X0, X21
	071 Move X1, X20
	072 Move W2, W19
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Call CollectionViewController.InvokeBindItem, X0, X1, X2
	079 Return 

Method: System.Void InvokeDestroyItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem)

Disassembly:
	0x03CF2F04 MOV X1, X31
	0x03CF2F08 STR V0, [X31 + 0x2]
	0x03CF2F0C STR X8, [X31 + 0x30]
	0x03CF2F10 BL 0x3D8796C
	0x03CF2F14 CBZ X22, 0x3CF2EBC
	0x03CF2F18 LDR X2, [X25]
	0x03CF2F1C MOV W1, W0
	0x03CF2F20 MOV X0, X22
	0x03CF2F24 BL 0x2DAA770
	0x03CF2F28 ADD W23, W23, 0x1
	0x03CF2F2C CMP W21, W23
	0x03CF2F30 B.NE 0x3CF2EDC
	0x03CF2F34 LDR X0, [X19 + 0x40]
	0x03CF2F38 CBZ X0, 0x3CF2EBC
	0x03CF2F3C ADRP X8, 0x470000
	0x03CF2F40 LDR X8, [X8 + 0xB88]
	0x03CF2F44 MOV W1, W20
	0x03CF2F48 MOV W2, W21
	0x03CF2F4C LDR X3, [X8]
	0x03CF2F50 BL 0x3089708
	0x03CF2F54 MOV X0, X19
	0x03CF2F58 BL 0x3CF1324
	0x03CF2F5C CBZ X0, 0x3CF2EBC
	0x03CF2F60 MOV X1, X31
	0x03CF2F64 BL 0x3CFD108
	0x03CF2F68 LDP X20, X19, [X31 + 0x80]
	0x03CF2F6C LDP X22, X21, [X31 + 0x70]
	0x03CF2F70 LDP X24, X23, [X31 + 0x60]
	0x03CF2F74 LDP X26, X25, [X31 + 0x50]
	0x03CF2F78 LDR X30, [X31 + 0x40]
	0x03CF2F7C ADD X31, X31, 0x90
	0x03CF2F80 RET
	0x03CF2F84 BL 0x1C16F20
	0x03CF2F88 BL 0x1C16F20
	0x03CF2F8C BL 0x1C16F20
	0x03CF2F90 MOV X0, X23
	0x03CF2F94 BL 0x1C16F18
	0x03CF2F98 B 0x3CF2FB0
	0x03CF2F9C B 0x3CF2FB0
	0x03CF2FA0 B 0x3CF2FB0
	0x03CF2FA4 B 0x3CF2FB0
	0x03CF2FA8 B 0x3CF2FB0
	0x03CF2FAC B 0x3CF2FB0
	0x03CF2FB0 MOV X24, X0
	0x03CF2FB4 CMP W1, 0x1
	0x03CF2FB8 B.NE 0x3CF2FD0
	0x03CF2FBC MOV X0, X24
	0x03CF2FC0 BL 0x3EB1AD0
	0x03CF2FC4 LDR X23, [X0]
	0x03CF2FC8 BL 0x3EB1AE0
	0x03CF2FCC B 0x3CF2DB4
	0x03CF2FD0 MOV X23, X31
	0x03CF2FD4 B 0x3CF2FDC
	0x03CF2FD8 MOV X24, X0
	0x03CF2FDC CBZ X22, 0x3CF3040
	0x03CF2FE0 ADRP X10, 0x401000
	0x03CF2FE4 LDR X8, [X22]
	0x03CF2FE8 LDR X10, [X10 + 0xE00]
	0x03CF2FEC LDRH W9, [X8 + 0x12E]
	0x03CF2FF0 LDR X1, [X10]
	0x03CF2FF4 CBZ X9, 0x3CF3018
	0x03CF2FF8 LDR X10, [X8 + 0xB0]
	0x03CF2FFC ADD X10, X10, 0x8
	0x03CF3000 LDUR X11, [X10 - 0x8]
	0x03CF3004 CMP X11, X1
	0x03CF3008 B.EQ 0x3CF3028
	0x03CF300C SUBS X9, X9, 0x1
	0x03CF3010 ADD X10, X10, 0x10
	0x03CF3014 B.NE 0x3CF3000
	0x03CF3018 MOV X0, X22
	0x03CF301C MOV W2, W31
	0x03CF3020 BL 0x1C5C788
	0x03CF3024 B 0x3CF3034
	0x03CF3028 LDRSW X9, [X10]
	0x03CF302C ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F6000
	006 Move W8, [X21+1913]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x471000
	014 Move X0, [X0+2880]
	015 Call 0x1C17CF4
	016 Move X0, 0x471000
	017 Move X0, [X0+2888]
	018 Call 0x1C17CF4
	019 Move X0, 0x471000
	020 Move X0, [X0+2896]
	021 Call 0x1C17CF4
	022 Move X0, 0x471000
	023 Move X0, [X0+2904]
	024 Call 0x1C17CF4
	025 Move X0, 0x471000
	026 Move X0, [X0+2864]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1913], W8
	030 Compare X19, 0
	031 JumpIfEqual {81}
	032 Move X8, 0x471000
	033 Move X8, [X8+2864]
	034 Move X9, [X19]
	035 Move X8, [X8]
	036 Move W11, [X9+304]
	037 Move W10, [X8+304]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X9, [X9+200]
	040 Add X9, X9, X10
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, 0x471000
	044 Move X8, [X8+2888]
	045 Move X0, [X8]
	046 Call 0x1C17F10
	047 Move X8, 0x471000
	048 Move X8, [X8+2896]
	049 Move X1, X20
	050 Move X3, X31
	051 Move X21, X0
	052 Move X2, [X8]
	053 Call Action`1<Object>..ctor, X0, X1, X2
	054 Move X0, X19
	055 Move X1, X21
	056 Call ReusableTreeViewItem.remove_onPointerUp, X0, X1
	057 Move X8, 0x471000
	058 Move X8, [X8+2880]
	059 Move X0, [X8]
	060 Call 0x1C17F10
	061 Move X8, 0x471000
	062 Move X8, [X8+2904]
	063 Move X1, X20
	064 Move X3, X31
	065 Move X21, X0
	066 Move X2, [X8]
	067 Call Action`1<Object>..ctor, X0, X1, X2
	068 Move X0, X19
	069 Move X1, X21
	070 Call ReusableTreeViewItem.remove_onToggleValueChanged, X0, X1
	071 Move X8, [X20]
	072 Move X1, [X19+16]
	073 Move X0, X20
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X3, [X8+648]
	077 Move X2, [X8+656]
	078 Move X30, [X31+32]
	079 Move X21, [X31+40]
	080 CallNoReturn X3
	081 Call 0x1C17F20

Method: System.Void PostInitRegistration(UnityEngine.UIElements.ReusableTreeViewItem treeItem)

Disassembly:
	0x03CF29D0 LDP X30, X21, [X31 + 0x40]
	0x03CF29D4 ADD X31, X31, 0x60
	0x03CF29D8 RET
	0x03CF29DC BL 0x1C16F20
	0x03CF29E0 STP X30, X21, [X31 - 0x20]!
	0x03CF29E4 STP X20, X19, [X31 + 0x10]
	0x03CF29E8 ADRP X21, 0x6F5000
	0x03CF29EC LDRB W8, [X21 + 0x77C]
	0x03CF29F0 MOV X20, X1
	0x03CF29F4 MOV X19, X0
	0x03CF29F8 TBNZ X8, 0x0, 0x3CF2A1C
	0x03CF29FC ADRP X0, 0x470000
	0x03CF2A00 LDR X0, [X0 + 0xB30]
	0x03CF2A04 BL 0x1C16CF4
	0x03CF2A08 ADRP X0, 0x470000
	0x03CF2A0C LDR X0, [X0 + 0xB80]
	0x03CF2A10 BL 0x1C16CF4
	0x03CF2A14 MOVZ W8, 0x1
	0x03CF2A18 STRB W8, [X21 + 0x77C]
	0x03CF2A1C CBZ X20, 0x3CF2B20
	0x03CF2A20 MOV X0, X20
	0x03CF2A24 MOV X1, X31
	0x03CF2A28 BL 0x3D9C848
	0x03CF2A2C CBZ X0, 0x3CF2B20
	0x03CF2A30 ADRP X8, 0x470000
	0x03CF2A34 LDR X8, [X8 + 0xB80]
	0x03CF2A38 LDR X9, [X0]
	0x03CF2A3C LDR X8, [X8]
	0x03CF2A40 LDRB W11, [X9 + 0x130]
	0x03CF2A44 LDRB W10, [X8 + 0x130]
	0x03CF2A48 CMP W11, W10
	0x03CF2A4C B.CC 0x3CF2B20
	0x03CF2A50 LDR X9, [X9 + 0xC8]
	0x03CF2A54 ADD X9, X9, X10, 0x3, LSL
	0x03CF2A58 LDUR X9, [X9 - 0x8]
	0x03CF2A5C CMP X9, X8
	0x03CF2A60 B.NE 0x3CF2B20
	0x03CF2A64 MOV X1, X31
	0x03CF2A68 BL 0x3DEBA30
	0x03CF2A6C CBZ X0, 0x3CF2B20
	0x03CF2A70 ADRP X9, 0x470000
	0x03CF2A74 LDR X9, [X9 + 0xB30]
	0x03CF2A78 LDR X8, [X0]
	0x03CF2A7C LDR X1, [X9]
	0x03CF2A80 LDRB W10, [X8 + 0x130]
	0x03CF2A84 LDRB W9, [X1 + 0x130]
	0x03CF2A88 CMP W10, W9
	0x03CF2A8C B.CC 0x3CF2B24
	0x03CF2A90 LDR X8, [X8 + 0xC8]
	0x03CF2A94 ADD X8, X8, X9, 0x3, LSL
	0x03CF2A98 LDUR X8, [X8 - 0x8]
	0x03CF2A9C CMP X8, X1
	0x03CF2AA0 B.NE 0x3CF2B24
	0x03CF2AA4 LDR W20, [X0 + 0x20]
	0x03CF2AA8 MOV X0, X19
	0x03CF2AAC MOV W1, W20
	0x03CF2AB0 BL 0x3CF1D70
	0x03CF2AB4 TBZ X0, 0x0, 0x3CF2ACC
	0x03CF2AB8 MOV X0, X19
	0x03CF2ABC MOV W1, W20
	0x03CF2AC0 MOV W2, W31
	0x03CF2AC4 BL 0x3CF2B28
	0x03CF2AC8 B 0x3CF2AE0
	0x03CF2ACC MOVZ W3, 0x1
	0x03CF2AD0 MOV X0, X19
	0x03CF2AD4 MOV W1, W20
	0x03CF2AD8 MOV W2, W31
	0x03CF2ADC BL 0x3CF3058
	0x03CF2AE0 MOV X0, X19
	0x03CF2AE4 BL 0x3CF1324
	0x03CF2AE8 CBZ X0, 0x3CF2B20
	0x03CF2AEC LDR X0, [X0 + 0x440]
	0x03CF2AF0 CBZ X0, 0x3CF2B20
	0x03CF2AF4 LDR X8, [X0]
	0x03CF2AF8 LDR X9, [X8 + 0x768]
	0x03CF2AFC LDR X1, [X8 + 0x770]
	0x03CF2B00 BLR X9
	0x03CF2B04 CBZ X0, 0x3CF2B20
	0x03CF2B08 LDR X8, [X0]
	0x03CF2B0C LDP X20, X19, [X31 + 0x10]
	0x03CF2B10 LDR X2, [X8 + 0x248]
	0x03CF2B14 LDR X1, [X8 + 0x250]
	0x03CF2B18 LDP X30, X21, [X31], #0x20
	0x03CF2B1C BR X2
	0x03CF2B20 BL 0x1C16F20
	0x03CF2B24 BL 0x1C171E0
	0x03CF2B28 SUB X31, X31, 0x90
	0x03CF2B2C STR X30, [X31 + 0x40]
	0x03CF2B30 STP X26, X25, [X31 + 0x50]
	0x03CF2B34 STP X24, X23, [X31 + 0x60]
	0x03CF2B38 STP X22, X21, [X31 + 0x70]
	0x03CF2B3C STP X20, X19, [X31 + 0x80]
	0x03CF2B40 ADRP X21, 0x6F5000
	0x03CF2B44 LDRB W8, [X21 + 0x788]
	0x03CF2B48 MOV W22, W2
	0x03CF2B4C MOV W20, W1
	0x03CF2B50 MOV X19, X0
	0x03CF2B54 TBNZ X8, 0x0, 0x3CF2BCC
	0x03CF2B58 ADRP X0, 0x40E000
	0x03CF2B5C LDR X0, [X0 + 0x5A0]
	0x03CF2B60 BL 0x1C16CF4
	0x03CF2B64 ADRP X0, 0x401000
	0x03CF2B68 LDR X0, [X0 + 0xE00]
	0x03CF2B6C BL 0x1C16CF4
	0x03CF2B70 ADRP X0, 0x429000
	0x03CF2B74 LDR X0, [X0 + 0x7B8]
	0x03CF2B78 BL 0x1C16CF4
	0x03CF2B7C ADRP X0, 0x429000
	0x03CF2B80 LDR X0, [X0 + 0x7C0]
	0x03CF2B84 BL 0x1C16CF4
	0x03CF2B88 ADRP X0, 0x401000
	0x03CF2B8C LDR X0, [X0 + 0xE18]
	0x03CF2B90 BL 0x1C16CF4
	0x03CF2B94 ADRP X0, 0x470000
	0x03CF2B98 LDR X0, [X0 + 0xB88]
	0x03CF2B9C BL 0x1C16CF4
	0x03CF2BA0 ADRP X0, 0x42B000
	0x03CF2BA4 LDR X0, [X0 + 0x8C0]
	0x03CF2BA8 BL 0x1C16CF4
	0x03CF2BAC ADRP X0, 0x470000
	0x03CF2BB0 LDR X0, [X0 + 0xB90]
	0x03CF2BB4 BL 0x1C16CF4
	0x03CF2BB8 ADRP X0, 0x470000
	0x03CF2BBC LDR X0, [X0 + 0xB68]
	0x03CF2BC0 BL 0x1C16CF4
	0x03CF2BC4 MOVZ W8, 0x1
	0x03CF2BC8 STRB W8, [X21 + 0x788]
	0x03CF2BCC MOV X0, X19
	0x03CF2BD0 MOV W1, W20
	0x03CF2BD4 STP X31, X31, [X31 + 0x20]
	0x03CF2BD8 STR X31, [X31 + 0x30]
	0x03CF2BDC BL 0x3CF1E44
	0x03CF2BE0 TBZ X0, 0x0, 0x3CF2F68
	0x03CF2BE4 LDR X8, [X19]
	0x03CF2BE8 MOV X0, X19
	0x03CF2BEC MOV W1, W20
	0x03CF2BF0 LDP X9, X2, [X8 + 0x1F8]
	0x03CF2BF4 BLR X9
	0x03CF2BF8 LDR X8, [X19]
	0x03CF2BFC MOV W21, W0
	0x03CF2C00 MOV X0, X19
	0x03CF2C04 MOV W1, W21
	0x03CF2C08 LDR X9, [X8 + 0x2E8]
	0x03CF2C0C LDR X2, [X8 + 0x2F0]
	0x03CF2C10 BLR X9
	0x03CF2C14 TBZ X0, 0x0, 0x3CF2F68
	0x03CF2C18 TBZ X22, 0x0, 0x3CF2E1C
	0x03CF2C1C LDR X8, [X19]
	0x03CF2C20 MOV X0, X19
	0x03CF2C24 MOV W1, W21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x6F6000
	009 Move X22, 0x471000
	010 Move W8, [X20+1914]
	011 Move X22, [X22+2872]
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0x471000
	019 Move X0, [X0+2880]
	020 Call 0x1C17CF4
	021 Move X0, 0x471000
	022 Move X0, [X0+2888]
	023 Call 0x1C17CF4
	024 Move X0, 0x403000
	025 Move X0, [X0+3696]
	026 Call 0x1C17CF4
	027 Move X0, 0x471000
	028 Move X0, [X0+2896]
	029 Call 0x1C17CF4
	030 Move X0, 0x471000
	031 Move X0, [X0+2904]
	032 Call 0x1C17CF4
	033 Move X0, 0x42A000
	034 Move X0, [X0+1664]
	035 Call 0x1C17CF4
	036 Move X0, 0x42C000
	037 Move X0, [X0+2240]
	038 Call 0x1C17CF4
	039 Move X0, 0x471000
	040 Move X0, [X0+2912]
	041 Call 0x1C17CF4
	042 Move X0, 0x471000
	043 Move X0, [X0+2872]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X20+1914], W8
	047 Move X0, [X22]
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X20, X0
	051 Call Object..ctor, X0
	052 Compare X20, 0
	053 JumpIfEqual {172}
	054 Move X8, 0x471000
	055 Move X8, [X8+2888]
	056 Move [X20+16], X19
	057 Move [X20+24], X21
	058 Move X22, 0x471000
	059 Move X0, [X8]
	060 Move X22, [X22+2896]
	061 Call 0x1C17F10
	062 Move X2, [X22]
	063 Move X1, X19
	064 Move X3, X31
	065 Move X22, X0
	066 Call Action`1<Object>..ctor, X0, X1, X2
	067 Compare X21, 0
	068 JumpIfEqual {172}
	069 Move X23, 0x471000
	070 Move X24, 0x471000
	071 Move X23, [X23+2880]
	072 Move X24, [X24+2904]
	073 Move X0, X21
	074 Move X1, X22
	075 Call ReusableTreeViewItem.add_onPointerUp, X0, X1
	076 Move X0, [X23]
	077 Move X21, [X20+24]
	078 Call 0x1C17F10
	079 Move X2, [X24]
	080 Move X1, X19
	081 Move X3, X31
	082 Move X22, X0
	083 Call Action`1<Object>..ctor, X0, X1, X2
	084 Compare X21, 0
	085 JumpIfEqual {172}
	086 Move X0, X21
	087 Move X1, X22
	088 Call ReusableTreeViewItem.add_onToggleValueChanged, X0, X1
	089 Move X0, X19
	090 Call BaseTreeViewController.get_baseTreeView, X0
	091 Compare X0, 0
	092 JumpIfEqual {172}
	093 Move W8, [X0+1196]
	094 Compare W8, 0
	095 JumpIfEqual {148}
	096 Move X0, X19
	097 Call BaseTreeViewController.get_baseTreeView, X0
	098 Compare X0, 0
	099 JumpIfEqual {172}
	100 Move X8, [X20+24]
	101 Compare X8, 0
	102 JumpIfEqual {172}
	103 Move X0, [X0+1200]
	104 Compare X0, 0
	105 JumpIfEqual {172}
	106 Move X9, 0x42C000
	107 Move X9, [X9+2240]
	108 Move W1, [X8+36]
	109 Move X2, [X9]
	110 Call List`1<Int32>.Remove, X0, X1
	111 Move X0, X19
	112 Call BaseTreeViewController.get_baseTreeView, X0
	113 Compare X0, 0
	114 JumpIfEqual {172}
	115 Move X19, 0x403000
	116 Move X21, 0x471000
	117 Move X19, [X19+3696]
	118 Move X21, [X21+2912]
	119 Move X1, X31
	120 Call VisualElement.get_schedule, X0
	121 Move X8, [X19]
	122 Move X19, X0
	123 Move X0, X8
	124 Call 0x1C17F10
	125 Move X2, [X21]
	126 Move X1, X20
	127 Move X3, X31
	128 Move X21, X0
	129 Call Action..ctor, X0, X1, X2
	130 Compare X19, 0
	131 JumpIfEqual {172}
	132 Move X10, 0x42A000
	133 Move X8, [X19]
	134 Move X10, [X10+1664]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Move X1, [X10]
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move W2, 1
	146 Move X0, X19
	147 Call 0x1C5D788
	148 Move X20, [X31+48]
	149 Move X19, [X31+56]
	150 Move X22, [X31+32]
	151 Move X21, [X31+40]
	152 Move X24, [X31+16]
	153 Move X23, [X31+24]
	154 Move X30, [X31+64]
	155 Return 
	156 Move W9, [X10]
	157 Add W9, W9, 1
	158 Add X8, X8, W9
	159 Add X0, X8, 312
	160 Move X3, [X0]
	161 Move X2, [X0+8]
	162 Move X0, X19
	163 Move X1, X21
	164 Move X20, [X31+48]
	165 Move X19, [X31+56]
	166 Move X22, [X31+32]
	167 Move X21, [X31+40]
	168 Move X24, [X31+16]
	169 Move X23, [X31+24]
	170 Move X30, [X31+64]
	171 CallNoReturn X3
	172 Call 0x1C17F20

Method: System.Void OnItemPointerUp(UnityEngine.UIElements.PointerUpEvent evt)

Disassembly:
	0x03CF331C LDR X8, [X28]
	0x03CF3320 LDR X1, [X21]
	0x03CF3324 LDRH W9, [X8 + 0x12E]
	0x03CF3328 CBZ X9, 0x3CF334C
	0x03CF332C LDR X10, [X8 + 0xB0]
	0x03CF3330 ADD X10, X10, 0x8
	0x03CF3334 LDUR X11, [X10 - 0x8]
	0x03CF3338 CMP X11, X1
	0x03CF333C B.EQ 0x3CF335C
	0x03CF3340 SUBS X9, X9, 0x1
	0x03CF3344 ADD X10, X10, 0x10
	0x03CF3348 B.NE 0x3CF3334
	0x03CF334C MOV X0, X28
	0x03CF3350 MOV W2, W31
	0x03CF3354 BL 0x1C5C788
	0x03CF3358 B 0x3CF3368
	0x03CF335C LDRSW X9, [X10]
	0x03CF3360 ADD X8, X8, X9, 0x4, LSL
	0x03CF3364 ADD X0, X8, 0x138
	0x03CF3368 LDP X8, X1, [X0]
	0x03CF336C MOV X0, X28
	0x03CF3370 BLR X8
	0x03CF3374 MOV W25, W0
	0x03CF3378 LDR X0, [X20 + 0x48]
	0x03CF337C CBZ X0, 0x3CF3894
	0x03CF3380 LDR X2, [X22]
	0x03CF3384 MOV W1, W25
	0x03CF3388 BL 0x2DAA59C
	0x03CF338C TBNZ X0, 0x0, 0x3CF32C0
	0x03CF3390 CBZ X27, 0x3CF38A0
	0x03CF3394 LDR W10, [X27 + 0x1C]
	0x03CF3398 LDR X8, [X27 + 0x10]
	0x03CF339C LDR X9, [X24]
	0x03CF33A0 ADD W10, W10, 0x1
	0x03CF33A4 STR W10, [X27 + 0x1C]
	0x03CF33A8 CBZ X8, 0x3CF38A4
	0x03CF33AC LDRSW X10, [X27 + 0x18]
	0x03CF33B0 LDR W11, [X8 + 0x18]
	0x03CF33B4 CMP W10, W11
	0x03CF33B8 B.CS 0x3CF33D0
	0x03CF33BC ADD W9, W10, 0x1
	0x03CF33C0 ADD X8, X8, X10, 0x2, LSL
	0x03CF33C4 STR W9, [X27 + 0x18]
	0x03CF33C8 STR W25, [X8 + 0x20]
	0x03CF33CC B 0x3CF32C0
	0x03CF33D0 LDR X8, [X9 + 0x20]
	0x03CF33D4 LDR X8, [X8 + 0xC0]
	0x03CF33D8 LDR X2, [X8 + 0x70]
	0x03CF33DC MOV X0, X27
	0x03CF33E0 MOV W1, W25
	0x03CF33E4 BL 0x2FDC70C
	0x03CF33E8 B 0x3CF32C0
	0x03CF33EC MOV X25, X31
	0x03CF33F0 MOVZ W21, 0x9
	0x03CF33F4 LDR W24, [X31 + 0x14]
	0x03CF33F8 CBZ X28, 0x3CF345C
	0x03CF33FC ADRP X10, 0x400000
	0x03CF3400 LDR X8, [X28]
	0x03CF3404 LDR X10, [X10 + 0xE00]
	0x03CF3408 LDRH W9, [X8 + 0x12E]
	0x03CF340C LDR X1, [X10]
	0x03CF3410 CBZ X9, 0x3CF3434
	0x03CF3414 LDR X10, [X8 + 0xB0]
	0x03CF3418 ADD X10, X10, 0x8
	0x03CF341C LDUR X11, [X10 - 0x8]
	0x03CF3420 CMP X11, X1
	0x03CF3424 B.EQ 0x3CF3444
	0x03CF3428 SUBS X9, X9, 0x1
	0x03CF342C ADD X10, X10, 0x10
	0x03CF3430 B.NE 0x3CF341C
	0x03CF3434 MOV X0, X28
	0x03CF3438 MOV W2, W31
	0x03CF343C BL 0x1C5C788
	0x03CF3440 B 0x3CF3450
	0x03CF3444 LDRSW X9, [X10]
	0x03CF3448 ADD X8, X8, X9, 0x4, LSL
	0x03CF344C ADD X0, X8, 0x138
	0x03CF3450 LDP X8, X1, [X0]
	0x03CF3454 MOV X0, X28
	0x03CF3458 BLR X8
	0x03CF345C CBNZ X25, 0x3CF38C0
	0x03CF3460 CMP W21, 0x9
	0x03CF3464 B.EQ 0x3CF346C
	0x03CF3468 CBNZ W21, 0x3CF384C
	0x03CF346C MOV X0, X20
	0x03CF3470 MOV W1, W24
	0x03CF3474 BL 0x3CF41C8
	0x03CF3478 ADD X25, X20, 0x50
	0x03CF347C ADD W2, W0, 0x1
	0x03CF3480 MOV X0, X20
	0x03CF3484 MOV X1, X27
	0x03CF3488 MOV X3, X25
	0x03CF348C BL 0x3CF429C
	0x03CF3490 LDR X0, [X20 + 0x40]
	0x03CF3494 LDR W27, [X31 + 0x10]
	0x03CF3498 CBZ X0, 0x3CF38DC
	0x03CF349C ADRP X8, 0x46F000
	0x03CF34A0 LDR X2, [X25]
	0x03CF34A4 LDR X8, [X8 + 0xBA0]
	0x03CF34A8 ADD W1, W23, 0x1
	0x03CF34AC LDR X3, [X8]
	0x03CF34B0 BL 0x3088BC4
	0x03CF34B4 MOV X0, X20
	0x03CF34B8 BL 0x3CF1324
	0x03CF34BC CBZ X0, 0x3CF38E0
	0x03CF34C0 LDR X9, [X20 + 0x40]
	0x03CF34C4 CBZ X9, 0x3CF38E4
	0x03CF34C8 ADRP X21, 0x46F000
	0x03CF34CC LDR X26, [X0 + 0x4B0]
	0x03CF34D0 LDR X21, [X21 + 0xB68]
	0x03CF34D4 LDR X2, [X21]
	0x03CF34D8 ADD X8, X31, 0x18
	0x03CF34DC MOV X0, X9
	0x03CF34E0 MOV W1, W23
	0x03CF34E4 BL 0x30872C4
	0x03CF34E8 LDUR V0, [X31 + 0x18]
	0x03CF34EC LDR X8, [X31 + 0x28]
	0x03CF34F0 STR V0, [X31 + 0x3]
	0x03CF34F4 STR X8, [X31 + 0x40]
	0x03CF34F8 ADD X0, X31, 0x30
	0x03CF34FC MOV X1, X31
	0x03CF3500 BL 0x3D8796C
	0x03CF3504 MOV W1, W0
	0x03CF3508 CBZ X26, 0x3CF38E8
	0x03CF350C LDR X2, [X29]
	0x03CF3510 MOV X0, X26
	0x03CF3514 BL 0x2FDCA84
	0x03CF3518 TBNZ X0, 0x0, 0x3CF35C4
	0x03CF351C MOV X0, X20
	0x03CF3520 BL 0x3CF1324
	0x03CF3524 CBZ X0, 0x3CF38F0
	0x03CF3528 LDR X9, [X20 + 0x40]
	0x03CF352C CBZ X9, 0x3CF38F4
	0x03CF3530 LDR X26, [X0 + 0x4B0]
	0x03CF3534 LDR X2, [X21]
	0x03CF3538 ADD X8, X31, 0x18
	0x03CF353C MOV X0, X9
	0x03CF3540 MOV W1, W23
	0x03CF3544 BL 0x30872C4
	0x03CF3548 LDUR V0, [X31 + 0x18]
	0x03CF354C LDR X8, [X31 + 0x28]
	0x03CF3550 STR V0, [X31 + 0x3]
	0x03CF3554 STR X8, [X31 + 0x40]
	0x03CF3558 ADD X0, X31, 0x30
	0x03CF355C MOV X1, X31
	0x03CF3560 BL 0x3D8796C
	0x03CF3564 MOV W1, W0
	0x03CF3568 CBZ X26, 0x3CF38F8
	0x03CF356C ADRP X9, 0x401000
	0x03CF3570 LDR X9, [X9 + 0xE10]
	0x03CF3574 LDR W10, [X26 + 0x1C]
	0x03CF3578 LDR X8, [X26 + 0x10]
	0x03CF357C LDR X9, [X9]
	0x03CF3580 ADD W10, W10, 0x1
	0x03CF3584 STR W10, [X26 + 0x1C]
	0x03CF3588 CBZ X8, 0x3CF38FC
	0x03CF358C LDRSW X10, [X26 + 0x18]
	0x03CF3590 LDR W11, [X8 + 0x18]
	0x03CF3594 CMP W10, W11
	0x03CF3598 B.CS 0x3CF35B0
	0x03CF359C ADD W9, W10, 0x1
	0x03CF35A0 ADD X8, X8, X10, 0x2, LSL
	0x03CF35A4 STR W9, [X26 + 0x18]
	0x03CF35A8 STR W1, [X8 + 0x20]
	0x03CF35AC B 0x3CF35C4
	0x03CF35B0 LDR X8, [X9 + 0x20]
	0x03CF35B4 LDR X8, [X8 + 0xC0]
	0x03CF35B8 LDR X2, [X8 + 0x70]
	0x03CF35BC MOV X0, X26
	0x03CF35C0 BL 0x2FDC70C
	0x03CF35C4 LDR X8, [X25]
	0x03CF35C8 CBZ X8, 0x3CF38EC
	0x03CF35CC LDP W2, W9, [X8 + 0x18]
	0x03CF35D0 LDR W22, [X31 + 0xC]
	0x03CF35D4 ADD W9, W9, 0x1
	0x03CF35D8 CMP W2, 0x1
	0x03CF35DC STP W31, W9, [X8 + 0x18]
	0x03CF35E0 B.LT 0x3CF35F4
	0x03CF35E4 LDR X0, [X8 + 0x10]
	0x03CF35E8 MOV W1, W31
	0x03CF35EC MOV X3, X31
	0x03CF35F0 BL 0x339FA34
	0x03CF35F4 TBZ X22, 0x0, 0x3CF382C
	0x03CF35F8 LDR X8, [X20]
	0x03CF35FC LDR X9, [X8 + 0x2B8]
	0x03CF3600 LDR X2, [X8 + 0x2C0]
	0x03CF3604 MOV X0, X20
	0x03CF3608 MOV W1, W24
	0x03CF360C BLR X9
	0x03CF3610 MOV X1, X0
	0x03CF3614 LDR X8, [X20]
	0x03CF3618 LDR X9, [X8 + 0x298]
	0x03CF361C LDR X2, [X8 + 0x2A0]
	0x03CF3620 MOV X0, X20
	0x03CF3624 BLR X9
	0x03CF3628 MOV X22, X0
	0x03CF362C CBZ X0, 0x3CF38C8
	0x03CF3630 ADRP X10, 0x428000
	0x03CF3634 LDR X8, [X22]
	0x03CF3638 LDR X10, [X10 + 0x7B8]
	0x03CF363C LDRH W9, [X8 + 0x12E]
	0x03CF3640 LDR X1, [X10]
	0x03CF3644 CBZ X9, 0x3CF3668
	0x03CF3648 LDR X10, [X8 + 0xB0]
	0x03CF364C ADD X10, X10, 0x8
	0x03CF3650 LDUR X11, [X10 - 0x8]
	0x03CF3654 CMP X11, X1
	0x03CF3658 B.EQ 0x3CF3678
	0x03CF365C SUBS X9, X9, 0x1
	0x03CF3660 ADD X10, X10, 0x10
	0x03CF3664 B.NE 0x3CF3650
	0x03CF3668 MOV X0, X22
	0x03CF366C MOV W2, W31
	0x03CF3670 BL 0x1C5C788
	0x03CF3674 B 0x3CF3684
	0x03CF3678 LDRSW X9, [X10]
	0x03CF367C ADD X8, X8, X9, 0x4, LSL
	0x03CF3680 ADD X0, X8, 0x138
	0x03CF3684 LDP X8, X1, [X0]
	0x03CF3688 MOV X0, X22
	0x03CF368C BLR X8
	0x03CF3690 MOV X22, X0
	0x03CF3694 CBZ X0, 0x3CF38CC
	0x03CF3698 ADRP X21, 0x400000
	0x03CF369C ADRP X24, 0x428000
	0x03CF36A0 LDR X21, [X21 + 0xE18]
	0x03CF36A4 LDR X24, [X24 + 0x7C0]
	0x03CF36A8 LDR X8, [X22]
	0x03CF36AC LDR X1, [X21]
	0x03CF36B0 LDRH W9, [X8 + 0x12E]
	0x03CF36B4 CBZ X9, 0x3CF36D8
	0x03CF36B8 LDR X10, [X8 + 0xB0]
	0x03CF36BC ADD X10, X10, 0x8
	0x03CF36C0 LDUR X11, [X10 - 0x8]
	0x03CF36C4 CMP X11, X1
	0x03CF36C8 B.EQ 0x3CF36E8
	0x03CF36CC SUBS X9, X9, 0x1
	0x03CF36D0 ADD X10, X10, 0x10
	0x03CF36D4 B.NE 0x3CF36C0
	0x03CF36D8 MOV X0, X22
	0x03CF36DC MOV W2, W31
	0x03CF36E0 BL 0x1C5C788
	0x03CF36E4 B 0x3CF36F4
	0x03CF36E8 LDRSW X9, [X10]
	0x03CF36EC ADD X8, X8, X9, 0x4, LSL
	0x03CF36F0 ADD X0, X8, 0x138
	0x03CF36F4 LDP X8, X1, [X0]
	0x03CF36F8 MOV X0, X22
	0x03CF36FC BLR X8
	0x03CF3700 TBZ X0, 0x0, 0x3CF37B0
	0x03CF3704 LDR X8, [X22]
	0x03CF3708 LDR X1, [X24]
	0x03CF370C LDRH W9, [X8 + 0x12E]
	0x03CF3710 CBZ X9, 0x3CF3734
	0x03CF3714 LDR X10, [X8 + 0xB0]
	0x03CF3718 ADD X10, X10, 0x8
	0x03CF371C LDUR X11, [X10 - 0x8]
	0x03CF3720 CMP X11, X1
	0x03CF3724 B.EQ 0x3CF3744
	0x03CF3728 SUBS X9, X9, 0x1
	0x03CF372C ADD X10, X10, 0x10
	0x03CF3730 B.NE 0x3CF371C
	0x03CF3734 MOV X0, X22
	0x03CF3738 MOV W2, W31
	0x03CF373C BL 0x1C5C788
	0x03CF3740 B 0x3CF3750
	0x03CF3744 LDRSW X9, [X10]
	0x03CF3748 ADD X8, X8, X9, 0x4, LSL
	0x03CF374C ADD X0, X8, 0x138
	0x03CF3750 LDP X8, X1, [X0]
	0x03CF3754 MOV X0, X22
	0x03CF3758 BLR X8
	0x03CF375C MOV W23, W0
	0x03CF3760 MOV X0, X20
	0x03CF3764 BL 0x3CF1324
	0x03CF3768 CBZ X0, 0x3CF3898
	0x03CF376C LDR X0, [X0 + 0x4B0]
	0x03CF3770 CBZ X0, 0x3CF389C
	0x03CF3774 LDR X2, [X29]
	0x03CF3778 MOV W1, W23
	0x03CF377C BL 0x2FDCA84
	0x03CF3780 TBNZ X0, 0x0, 0x3CF36A8
	0x03CF3784 LDR X8, [X20]
	0x03CF3788 LDP X9, X2, [X8 + 0x1E8]
	0x03CF378C MOV X0, X20
	0x03CF3790 MOV W1, W23
	0x03CF3794 BLR X9
	0x03CF3798 MOV W1, W0
	0x03CF379C MOVZ W2, 0x1
	0x03CF37A0 MOV X0, X20
	0x03CF37A4 MOV W3, W31
	0x03CF37A8 BL 0x3CF3058
	0x03CF37AC B 0x3CF36A8
	0x03CF37B0 MOV X23, X31
	0x03CF37B4 MOVZ W21, 0xE
	0x03CF37B8 CBZ X22, 0x3CF381C
	0x03CF37BC ADRP X10, 0x400000
	0x03CF37C0 LDR X8, [X22]
	0x03CF37C4 LDR X10, [X10 + 0xE00]
	0x03CF37C8 LDRH W9, [X8 + 0x12E]
	0x03CF37CC LDR X1, [X10]
	0x03CF37D0 CBZ X9, 0x3CF37F4
	0x03CF37D4 LDR X10, [X8 + 0xB0]
	0x03CF37D8 ADD X10, X10, 0x8
	0x03CF37DC LDUR X11, [X10 - 0x8]
	0x03CF37E0 CMP X11, X1
	0x03CF37E4 B.EQ 0x3CF3804
	0x03CF37E8 SUBS X9, X9, 0x1
	0x03CF37EC ADD X10, X10, 0x10
	0x03CF37F0 B.NE 0x3CF37DC
	0x03CF37F4 MOV X0, X22
	0x03CF37F8 MOV W2, W31
	0x03CF37FC BL 0x1C5C788
	0x03CF3800 B 0x3CF3810
	0x03CF3804 LDRSW X9, [X10]
	0x03CF3808 ADD X8, X8, X9, 0x4, LSL
	0x03CF380C ADD X0, X8, 0x138
	0x03CF3810 LDP X8, X1, [X0]
	0x03CF3814 MOV X0, X22
	0x03CF3818 BLR X8
	0x03CF381C CBNZ X23, 0x3CF38D0
	0x03CF3820 CMP W21, 0xE
	0x03CF3824 B.EQ 0x3CF382C
	0x03CF3828 CBNZ W21, 0x3CF384C
	0x03CF382C TBZ X27, 0x0, 0x3CF384C
	0x03CF3830 MOV X0, X20
	0x03CF3834 BL 0x3CF1324
	0x03CF3838 CBZ X0, 0x3CF38D8
	0x03CF383C MOV X1, X31
	0x03CF3840 BL 0x3CFD108
	0x03CF3844 MOV X20, X31
	0x03CF3848 B 0x3CF3850
	0x03CF384C MOV X20, X31
	0x03CF3850 MOV X0, X19
	0x03CF3854 MOV X1, X31
	0x03CF3858 MOV X2, X31
	0x03CF385C BL 0x33C5D2C
	0x03CF3860 TBZ X0, 0x0, 0x3CF3870
	0x03CF3864 MOV X0, X19
	0x03CF3868 MOV X1, X31
	0x03CF386C BL 0x3BFEA0C
	0x03CF3870 CBNZ X20, 0x3CF38A8
	0x03CF3874 LDP X20, X19, [X31 + 0xA0]
	0x03CF3878 LDP X22, X21, [X31 + 0x90]
	0x03CF387C LDP X24, X23, [X31 + 0x80]
	0x03CF3880 LDP X26, X25, [X31 + 0x70]
	0x03CF3884 LDP X28, X27, [X31 + 0x60]
	0x03CF3888 LDP X29, X30, [X31 + 0x50]
	0x03CF388C ADD X31, X31, 0xB0
	0x03CF3890 RET
	0x03CF3894 BL 0x1C16F20
	0x03CF3898 BL 0x1C16F20
	0x03CF389C BL 0x1C16F20
	0x03CF38A0 BL 0x1C16F20
	0x03CF38A4 BL 0x1C16F20
	0x03CF38A8 MOV X0, X20
	0x03CF38AC BL 0x1C16F18
	0x03CF38B0 BL 0x1C16F20
	0x03CF38B4 BL 0x1C16F20
	0x03CF38B8 BL 0x1C16F20
	0x03CF38BC BL 0x1C16F20
	0x03CF38C0 MOV X0, X25
	0x03CF38C4 BL 0x1C16F18
	0x03CF38C8 BL 0x1C16F20
	0x03CF38CC BL 0x1C16F20
	0x03CF38D0 MOV X0, X23
	0x03CF38D4 BL 0x1C16F18
	0x03CF38D8 BL 0x1C16F20
	0x03CF38DC BL 0x1C16F20
	0x03CF38E0 BL 0x1C16F20
	0x03CF38E4 BL 0x1C16F20
	0x03CF38E8 BL 0x1C16F20
	0x03CF38EC BL 0x1C16F20
	0x03CF38F0 BL 0x1C16F20
	0x03CF38F4 BL 0x1C16F20
	0x03CF38F8 BL 0x1C16F20
	0x03CF38FC BL 0x1C16F20
	0x03CF3900 B 0x3CF397C
	0x03CF3904 B 0x3CF397C
	0x03CF3908 B 0x3CF397C
	0x03CF390C B 0x3CF397C
	0x03CF3910 B 0x3CF397C
	0x03CF3914 B 0x3CF397C
	0x03CF3918 B 0x3CF397C
	0x03CF391C B 0x3CF397C
	0x03CF3920 B 0x3CF39AC
	0x03CF3924 B 0x3CF397C
	0x03CF3928 B 0x3CF3A60
	0x03CF392C B 0x3CF397C
	0x03CF3930 B 0x3CF397C
	0x03CF3934 B 0x3CF397C
	0x03CF3938 B 0x3CF397C

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x6F5000
	013 Move W8, [X21+1915]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {67}
	020 Move X0, 0x470000
	021 Move X0, [X0+2816]
	022 Call 0x1C17CF4
	023 Move X0, 0x45C000
	024 Move X0, [X0+680]
	025 Call 0x1C17CF4
	026 Move X0, 0x403000
	027 Move X0, [X0+2520]
	028 Call 0x1C17CF4
	029 Move X0, 0x40E000
	030 Move X0, [X0+1440]
	031 Call 0x1C17CF4
	032 Move X0, 0x402000
	033 Move X0, [X0+3584]
	034 Call 0x1C17CF4
	035 Move X0, 0x402000
	036 Move X0, [X0+3592]
	037 Call 0x1C17CF4
	038 Move X0, 0x401000
	039 Move X0, [X0+3584]
	040 Call 0x1C17CF4
	041 Move X0, 0x429000
	042 Move X0, [X0+1976]
	043 Call 0x1C17CF4
	044 Move X0, 0x429000
	045 Move X0, [X0+1984]
	046 Call 0x1C17CF4
	047 Move X0, 0x401000
	048 Move X0, [X0+3608]
	049 Call 0x1C17CF4
	050 Move X0, 0x470000
	051 Move X0, [X0+2928]
	052 Call 0x1C17CF4
	053 Move X0, 0x470000
	054 Move X0, [X0+2864]
	055 Call 0x1C17CF4
	056 Move X0, 0x470000
	057 Move X0, [X0+2936]
	058 Call 0x1C17CF4
	059 Move X0, 0x42A000
	060 Move X0, [X0+2096]
	061 Call 0x1C17CF4
	062 Move X0, 0x429000
	063 Move X0, [X0+2200]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X21+1915], W8
	067 Compare X19, 0
	068 JumpIfEqual {381}
	069 Move W8, [X19+256]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 4
	072 Compare TEMP, 4
	073 JumpIfNotEqual {369}
	074 Move X8, [X19]
	075 Move X0, X19
	076 Move X9, [X8+472]
	077 Move X1, [X8+480]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Compare X0, 0
	080 JumpIfEqual {88}
	081 Move X8, 0x429000
	082 Move X8, [X8+2200]
	083 Move X9, [X0]
	084 Move X8, [X8]
	085 Move W11, [X9+304]
	086 Move W10, [X8+304]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X21, X31
	089 Move X9, [X9+200]
	090 Add X9, X9, X10
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Move X22, 0x470000
	095 Move X22, [X22+2816]
	096 Move X0, [X22]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {102}
	100 Call 0x1C17DFC
	101 Move X0, [X22]
	102 Move X8, 0x42A000
	103 Move X8, [X8+2096]
	104 Move X9, [X0+184]
	105 Move X8, [X8]
	106 Move X22, [X9+16]
	107 Move W10, [X8+224]
	108 Compare W10, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Move X8, 0x470000
	113 Move X8, [X8+2936]
	114 Move X0, X21
	115 Move X1, X22
	116 Move X2, X31
	117 Move X3, [X8]
	118 Call 0x22A27C4, X0, X1, X2
	119 Compare X0, 0
	120 JumpIfEqual {381}
	121 Move X1, X31
	122 Call VisualElement.get_userData, X0
	123 Compare X0, 0
	124 JumpIfEqual {381}
	125 Move X9, 0x470000
	126 Move X9, [X9+2864]
	127 Move X8, [X0]
	128 Move X1, [X9]
	129 Move W10, [X8+304]
	130 Move W9, [X1+304]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, [X8+200]
	133 Add X8, X8, X9
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, [X20]
	137 Move W22, [X0+32]
	138 Move X0, X20
	139 Move X9, [X8+504]
	140 Move X2, [X8+512]
	141 Move W1, W22
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move W24, W0
	144 Move X0, X20
	145 Move W1, W22
	146 Call BaseTreeViewController.IsExpandedByIndex, X0, X1
	147 Move W23, W0
	148 Move X0, X20
	149 Move W1, W22
	150 Call BaseTreeViewController.HasChildrenByIndex, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {369}
	155 Move X0, X20
	156 Call BaseTreeViewController.get_baseTreeView, X0
	157 Compare X0, 0
	158 JumpIfEqual {381}
	159 Move X8, 0x402000
	160 Move X25, [X0+1200]
	161 Move X8, [X8+3592]
	162 Move X0, [X8]
	163 Call 0x1C17F10
	164 Move X8, 0x402000
	165 Move X8, [X8+3584]
	166 Move X1, X25
	167 Move X21, X0
	168 Move X2, [X8]
	169 Call HashSet`1<Int32>..ctor, X0, X1
	170 Compare X21, 0
	171 JumpIfEqual {381}
	172 Move TEMP, X23
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {182}
	176 Move X8, 0x40E000
	177 Move X8, [X8+1440]
	178 Move X0, X21
	179 Move W1, W24
	180 Move X2, [X8]
	181 Call HashSet`1<Int32>.Remove, X0, X1
	182 Move X8, 0x403000
	183 Move X8, [X8+2520]
	184 Move X0, X21
	185 Move W1, W24
	186 Move X2, [X8]
	187 Call HashSet`1<Int32>.Add, X0, X1
	188 Move X0, X20
	189 Move W1, W22
	190 Call BaseTreeViewController.GetChildrenIdsByIndex, X0, X1
	191 Move X8, [X20]
	192 Move X1, X0
	193 Move X0, X20
	194 Move X9, [X8+664]
	195 Move X2, [X8+672]
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare X0, 0
	198 JumpIfEqual {381}
	199 Move X10, 0x429000
	200 Move X8, [X0]
	201 Move X10, [X10+1976]
	202 Move X22, X0
	203 NotImplemented "Instruction LDRH not yet implemented."
	204 Move X1, [X10]
	205 Compare X9, 0
	206 JumpIfEqual {213}
	207 Move X10, [X8+176]
	208 Add X10, X10, 8
	209 NotImplemented "Instruction LDUR not yet implemented."
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Subtract X9, X9, 1
	212 Add X10, X10, 16
	213 Move X0, X22
	214 Move W2, W31
	215 Call 0x1C5D788
	216 NotImplemented "Instruction LDRSW not yet implemented."
	217 Add X8, X8, X9
	218 Add X0, X8, 312
	219 Move X8, [X0]
	220 Move X1, [X0+8]
	221 Move X0, X22
	222 NotImplemented "Instruction BLR not yet implemented."
	223 Move X22, X0
	224 Compare X0, 0
	225 JumpIfEqual {383}
	226 Move X25, 0x401000
	227 Move X26, 0x429000
	228 Move X27, 0x40E000
	229 Move X28, 0x403000
	230 Move X25, [X25+3608]
	231 Move X26, [X26+1984]
	232 Move X27, [X27+1440]
	233 Move X28, [X28+2520]
	234 Move X8, [X22]
	235 Move X1, [X25]
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Compare X9, 0
	238 JumpIfEqual {245}
	239 Move X10, [X8+176]
	240 Add X10, X10, 8
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Subtract X9, X9, 1
	244 Add X10, X10, 16
	245 Move X0, X22
	246 Move W2, W31
	247 Call 0x1C5D788
	248 NotImplemented "Instruction LDRSW not yet implemented."
	249 Add X8, X8, X9
	250 Add X0, X8, 312
	251 Move X8, [X0]
	252 Move X1, [X0+8]
	253 Move X0, X22
	254 NotImplemented "Instruction BLR not yet implemented."
	255 Move TEMP, X0
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfNotEqual {303}
	259 Move X8, [X22]
	260 Move X1, [X26]
	261 NotImplemented "Instruction LDRH not yet implemented."
	262 Compare X9, 0
	263 JumpIfEqual {270}
	264 Move X10, [X8+176]
	265 Add X10, X10, 8
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Subtract X9, X9, 1
	269 Add X10, X10, 16
	270 Move X0, X22
	271 Move W2, W31
	272 Call 0x1C5D788
	273 NotImplemented "Instruction LDRSW not yet implemented."
	274 Add X8, X8, X9
	275 Add X0, X8, 312
	276 Move X8, [X0]
	277 Move X1, [X0+8]
	278 Move X0, X22
	279 NotImplemented "Instruction BLR not yet implemented."
	280 Move X8, [X20]
	281 Move W24, W0
	282 Move X9, [X8+728]
	283 Move X2, [X8+736]
	284 Move X0, X20
	285 Move W1, W24
	286 NotImplemented "Instruction BLR not yet implemented."
	287 Move TEMP, X0
	288 And TEMP, TEMP, 1
	289 Compare TEMP, 1
	290 JumpIfNotEqual {234}
	291 Move TEMP, X23
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfNotEqual {299}
	295 Move X2, [X27]
	296 Move X0, X21
	297 Move W1, W24
	298 Call HashSet`1<Int32>.Remove, X0, X1
	299 Move X2, [X28]
	300 Move X0, X21
	301 Move W1, W24
	302 Call HashSet`1<Int32>.Add, X0, X1
	303 Move X23, X31
	304 Move W24, 12
	305 Compare X22, 0
	306 JumpIfEqual {330}
	307 Move X10, 0x401000
	308 Move X8, [X22]
	309 Move X10, [X10+3584]
	310 NotImplemented "Instruction LDRH not yet implemented."
	311 Move X1, [X10]
	312 Compare X9, 0
	313 JumpIfEqual {320}
	314 Move X10, [X8+176]
	315 Add X10, X10, 8
	316 NotImplemented "Instruction LDUR not yet implemented."
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Subtract X9, X9, 1
	319 Add X10, X10, 16
	320 Move X0, X22
	321 Move W2, W31
	322 Call 0x1C5D788
	323 NotImplemented "Instruction LDRSW not yet implemented."
	324 Add X8, X8, X9
	325 Add X0, X8, 312
	326 Move X8, [X0]
	327 Move X1, [X0+8]
	328 Move X0, X22
	329 NotImplemented "Instruction BLR not yet implemented."
	330 Compare X23, 0
	331 JumpIfNotEqual {384}
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Compare W24, 0
	334 JumpIfNotEqual {369}
	335 Move X0, X20
	336 Call BaseTreeViewController.get_baseTreeView, X0
	337 Move X8, 0x45C000
	338 Move X8, [X8+680]
	339 Move X22, X0
	340 Move X0, X21
	341 Move X1, [X8]
	342 Call Enumerable.ToList, X0
	343 Compare X22, 0
	344 JumpIfEqual {381}
	345 Move [X22+1200], X0
	346 Move X0, X20
	347 Call BaseTreeViewController.RegenerateWrappers, X0
	348 Move X0, X20
	349 Call BaseTreeViewController.get_baseTreeView, X0
	350 Compare X0, 0
	351 JumpIfEqual {381}
	352 Move X1, X31
	353 Call BaseVerticalCollectionView.RefreshItems, X0
	354 Move X0, X19
	355 Move X20, [X31+80]
	356 Move X19, [X31+88]
	357 Move X22, [X31+64]
	358 Move X21, [X31+72]
	359 Move X24, [X31+48]
	360 Move X23, [X31+56]
	361 Move X26, [X31+32]
	362 Move X25, [X31+40]
	363 Move X28, [X31+16]
	364 Move X27, [X31+24]
	365 Move X1, X31
	366 Move X30, [X31+96]
	367 Call EventBase.StopPropagation, X0
	368 Return 
	369 Move X20, [X31+80]
	370 Move X19, [X31+88]
	371 Move X22, [X31+64]
	372 Move X21, [X31+72]
	373 Move X24, [X31+48]
	374 Move X23, [X31+56]
	375 Move X26, [X31+32]
	376 Move X25, [X31+40]
	377 Move X28, [X31+16]
	378 Move X27, [X31+24]
	379 Move X30, [X31+96]
	380 Return 
	381 Call 0x1C17F20
	382 Call 0x1C181E0
	383 Call 0x1C17F20
	384 Move X0, X23
	385 Call 0x1C17F18
	386 Move X24, X0
	387 NotImplemented "Instruction CMP not yet implemented."
	388 Move X0, X24
	389 Call 0x3EB2AD0
	390 Move X23, [X0]
	391 Call 0x3EB2AE0
	392 Move W24, W31
	393 Compare X22, 0
	394 JumpIfNotEqual {307}
	395 Move X23, X31
	396 Move X24, X0
	397 Compare X22, 0
	398 JumpIfEqual {422}
	399 Move X10, 0x401000
	400 Move X8, [X22]
	401 Move X10, [X10+3584]
	402 NotImplemented "Instruction LDRH not yet implemented."
	403 Move X1, [X10]
	404 Compare X9, 0
	405 JumpIfEqual {412}
	406 Move X10, [X8+176]
	407 Add X10, X10, 8
	408 NotImplemented "Instruction LDUR not yet implemented."
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Subtract X9, X9, 1
	411 Add X10, X10, 16
	412 Move X0, X22
	413 Move W2, W31
	414 Call 0x1C5D788
	415 NotImplemented "Instruction LDRSW not yet implemented."
	416 Add X8, X8, X9
	417 Add X0, X8, 312
	418 Move X8, [X0]
	419 Move X1, [X0+8]
	420 Move X0, X22
	421 NotImplemented "Instruction BLR not yet implemented."
	422 Compare X23, 0
	423 JumpIfNotEqual {426}
	424 Move X0, X24
	425 Call 0x1D2D690
	426 Move X0, X23
	427 Call 0x1C17F18
	428 Call 0x1991590

Method: System.Void OnToggleValueChanged(UnityEngine.UIElements.ChangeEvent`1<System.Boolean> evt)

Disassembly:
	0x03CF39E0 ADRP X10, 0x400000
	0x03CF39E4 LDR X8, [X22]
	0x03CF39E8 LDR X10, [X10 + 0xE00]
	0x03CF39EC LDRH W9, [X8 + 0x12E]
	0x03CF39F0 LDR X1, [X10]
	0x03CF39F4 CBZ X9, 0x3CF3A18
	0x03CF39F8 LDR X10, [X8 + 0xB0]
	0x03CF39FC ADD X10, X10, 0x8
	0x03CF3A00 LDUR X11, [X10 - 0x8]
	0x03CF3A04 CMP X11, X1
	0x03CF3A08 B.EQ 0x3CF3A28
	0x03CF3A0C SUBS X9, X9, 0x1
	0x03CF3A10 ADD X10, X10, 0x10
	0x03CF3A14 B.NE 0x3CF3A00
	0x03CF3A18 MOV X0, X22
	0x03CF3A1C MOV W2, W31
	0x03CF3A20 BL 0x1C5C788
	0x03CF3A24 B 0x3CF3A34
	0x03CF3A28 LDRSW X9, [X10]
	0x03CF3A2C ADD X8, X8, X9, 0x4, LSL
	0x03CF3A30 ADD X0, X8, 0x138
	0x03CF3A34 LDP X8, X1, [X0]
	0x03CF3A38 MOV X0, X22
	0x03CF3A3C BLR X8
	0x03CF3A40 CBZ X23, 0x3CF3AF4
	0x03CF3A44 MOV X0, X23
	0x03CF3A48 BL 0x1C16F18
	0x03CF3A4C MOV X26, X1
	0x03CF3A50 MOV X21, X0
	0x03CF3A54 CBNZ X22, 0x3CF39E0
	0x03CF3A58 B 0x3CF3A40
	0x03CF3A5C B 0x3CF3A60
	0x03CF3A60 MOV X26, X1
	0x03CF3A64 MOV X21, X0
	0x03CF3A68 CMP W26, 0x1
	0x03CF3A6C B.NE 0x3CF3A88
	0x03CF3A70 MOV X0, X21
	0x03CF3A74 BL 0x3EB1AD0
	0x03CF3A78 LDR X25, [X0]
	0x03CF3A7C BL 0x3EB1AE0
	0x03CF3A80 MOV W21, W31
	0x03CF3A84 B 0x3CF33F4
	0x03CF3A88 MOV X25, X31
	0x03CF3A8C CBZ X28, 0x3CF3AF0
	0x03CF3A90 ADRP X10, 0x400000
	0x03CF3A94 LDR X8, [X28]
	0x03CF3A98 LDR X10, [X10 + 0xE00]
	0x03CF3A9C LDRH W9, [X8 + 0x12E]
	0x03CF3AA0 LDR X1, [X10]
	0x03CF3AA4 CBZ X9, 0x3CF3AC8
	0x03CF3AA8 LDR X10, [X8 + 0xB0]
	0x03CF3AAC ADD X10, X10, 0x8
	0x03CF3AB0 LDUR X11, [X10 - 0x8]
	0x03CF3AB4 CMP X11, X1
	0x03CF3AB8 B.EQ 0x3CF3AD8
	0x03CF3ABC SUBS X9, X9, 0x1
	0x03CF3AC0 ADD X10, X10, 0x10
	0x03CF3AC4 B.NE 0x3CF3AB0
	0x03CF3AC8 MOV X0, X28
	0x03CF3ACC MOV W2, W31
	0x03CF3AD0 BL 0x1C5C788
	0x03CF3AD4 B 0x3CF3AE4
	0x03CF3AD8 LDRSW X9, [X10]
	0x03CF3ADC ADD X8, X8, X9, 0x4, LSL
	0x03CF3AE0 ADD X0, X8, 0x138
	0x03CF3AE4 LDP X8, X1, [X0]
	0x03CF3AE8 MOV X0, X28
	0x03CF3AEC BLR X8
	0x03CF3AF0 CBNZ X25, 0x3CF3B18
	0x03CF3AF4 CMP W26, 0x1
	0x03CF3AF8 B.NE 0x3CF3B10
	0x03CF3AFC MOV X0, X21
	0x03CF3B00 BL 0x3EB1AD0
	0x03CF3B04 LDR X20, [X0]
	0x03CF3B08 BL 0x3EB1AE0
	0x03CF3B0C B 0x3CF3850
	0x03CF3B10 MOV X20, X31
	0x03CF3B14 B 0x3CF3B34
	0x03CF3B18 MOV X0, X25
	0x03CF3B1C BL 0x1C16F18
	0x03CF3B20 MOV X26, X1
	0x03CF3B24 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F5000
	006 Move W8, [X21+1916]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x470000
	014 Move X0, [X0+2864]
	015 Call 0x1C17CF4
	016 Move X0, 0x470000
	017 Move X0, [X0+2944]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1916], W8
	021 Compare X20, 0
	022 JumpIfEqual {92}
	023 Move X0, X20
	024 Move X1, X31
	025 Call EventBase.get_target, X0
	026 Compare X0, 0
	027 JumpIfEqual {92}
	028 Move X8, 0x470000
	029 Move X8, [X8+2944]
	030 Move X9, [X0]
	031 Move X8, [X8]
	032 Move W11, [X9+304]
	033 Move W10, [X8+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X9, [X9+200]
	036 Add X9, X9, X10
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X1, X31
	040 Call VisualElement.get_userData, X0
	041 Compare X0, 0
	042 JumpIfEqual {92}
	043 Move X9, 0x470000
	044 Move X9, [X9+2864]
	045 Move X8, [X0]
	046 Move X1, [X9]
	047 Move W10, [X8+304]
	048 Move W9, [X1+304]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X8+200]
	051 Add X8, X8, X9
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W20, [X0+32]
	055 Move X0, X19
	056 Move W1, W20
	057 Call BaseTreeViewController.IsExpandedByIndex, X0, X1
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {66}
	062 Move X0, X19
	063 Move W1, W20
	064 Move W2, W31
	065 Call BaseTreeViewController.CollapseItemByIndex, X0, X1, X2
	066 Move W3, 1
	067 Move X0, X19
	068 Move W1, W20
	069 Move W2, W31
	070 Call BaseTreeViewController.ExpandItemByIndex, X0, X1, X2, X3
	071 Move X0, X19
	072 Call BaseTreeViewController.get_baseTreeView, X0
	073 Compare X0, 0
	074 JumpIfEqual {92}
	075 Move X0, [X0+1088]
	076 Compare X0, 0
	077 JumpIfEqual {92}
	078 Move X8, [X0]
	079 Move X9, [X8+1896]
	080 Move X1, [X8+1904]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X0, 0
	083 JumpIfEqual {92}
	084 Move X8, [X0]
	085 Move X20, [X31+16]
	086 Move X19, [X31+24]
	087 Move X2, [X8+584]
	088 Move X1, [X8+592]
	089 Move X30, [X31+32]
	090 Move X21, [X31+40]
	091 CallNoReturn X2
	092 Call 0x1C17F20
	093 Call 0x1C181E0

Method: System.Int32 GetIndexForId(System.Int32 id)

Disassembly:
	0x03CF4B6C LDR X8, [X31 + 0x18]
	0x03CF4B70 ADD X0, X31, 0x20
	0x03CF4B74 MOV X1, X31
	0x03CF4B78 STR V0, [X31 + 0x2]
	0x03CF4B7C STR X8, [X31 + 0x30]
	0x03CF4B80 BL 0x3D8796C
	0x03CF4B84 CMP W0, W19
	0x03CF4B88 B.EQ 0x3CF4B9C
	0x03CF4B8C LDR X0, [X20 + 0x40]
	0x03CF4B90 ADD W22, W22, 0x1
	0x03CF4B94 CBNZ X0, 0x3CF4B4C
	0x03CF4B98 BL 0x1C16F20
	0x03CF4B9C MOV X0, X20
	0x03CF4BA0 MOV W1, W22
	0x03CF4BA4 BL 0x3CF1D70
	0x03CF4BA8 TBZ X0, 0x0, 0x3CF4BC0
	0x03CF4BAC AND W2, W21, 0x1
	0x03CF4BB0 MOV X0, X20
	0x03CF4BB4 MOV W1, W22
	0x03CF4BB8 BL 0x3CF2B28
	0x03CF4BBC B 0x3CF4C14
	0x03CF4BC0 MOV X0, X20
	0x03CF4BC4 BL 0x3CF1324
	0x03CF4BC8 CBZ X0, 0x3CF4B98
	0x03CF4BCC LDR X0, [X0 + 0x4B0]
	0x03CF4BD0 CBZ X0, 0x3CF4B98
	0x03CF4BD4 ADRP X8, 0x403000
	0x03CF4BD8 LDR X8, [X8 + 0xB68]
	0x03CF4BDC MOV W1, W19
	0x03CF4BE0 LDR X2, [X8]
	0x03CF4BE4 BL 0x2FDCA84
	0x03CF4BE8 TBZ X0, 0x0, 0x3CF4C14
	0x03CF4BEC MOV X0, X20
	0x03CF4BF0 BL 0x3CF1324
	0x03CF4BF4 CBZ X0, 0x3CF4B98
	0x03CF4BF8 LDR X0, [X0 + 0x4B0]
	0x03CF4BFC CBZ X0, 0x3CF4B98
	0x03CF4C00 ADRP X8, 0x429000
	0x03CF4C04 LDR X8, [X8 + 0x8C0]
	0x03CF4C08 MOV W1, W19
	0x03CF4C0C LDR X2, [X8]
	0x03CF4C10 BL 0x2FDDF0C
	0x03CF4C14 LDP X20, X19, [X31 + 0x60]
	0x03CF4C18 LDP X22, X21, [X31 + 0x50]
	0x03CF4C1C LDP X30, X23, [X31 + 0x40]
	0x03CF4C20 ADD X31, X31, 0x70
	0x03CF4C24 RET
	0x03CF4C28 STR X1, [X0 + 0x18]
	0x03CF4C2C RET
	0x03CF4C30 LDR X8, [X0 + 0x28]
	0x03CF4C34 CBZ X8, 0x3CF4C48
	0x03CF4C38 LDR X4, [X8 + 0x18]
	0x03CF4C3C LDR X0, [X8 + 0x40]
	0x03CF4C40 LDR X3, [X8 + 0x28]
	0x03CF4C44 BR X4
	0x03CF4C48 RET
	0x03CF4C4C STR X30, [X31 - 0x60]!
	0x03CF4C50 STP X28, X27, [X31 + 0x10]
	0x03CF4C54 STP X26, X25, [X31 + 0x20]
	0x03CF4C58 STP X24, X23, [X31 + 0x30]
	0x03CF4C5C STP X22, X21, [X31 + 0x40]
	0x03CF4C60 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X21, 0x6F4000
	008 Move W8, [X21+1917]
	009 Move W19, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x401000
	016 Move X0, [X0+3576]
	017 Call 0x1C17CF4
	018 Move X0, 0x46F000
	019 Move X0, [X0+2960]
	020 Call 0x1C17CF4
	021 Move X0, 0x46F000
	022 Move X0, [X0+2920]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1917], W8
	026 Move [X31+32], X31
	027 Move [X31+40], X31
	028 Move [X31+48], X31
	029 Move X0, [X20+72]
	030 Compare X0, 0
	031 JumpIfEqual {65}
	032 Move X8, 0x401000
	033 Move X8, [X8+3576]
	034 Move W1, W19
	035 Move X2, [X8]
	036 Call HashSet`1<Int32>.Contains, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {66}
	041 Move X0, [X20+64]
	042 Compare X0, 0
	043 JumpIfEqual {65}
	044 Move X22, 0x46F000
	045 Move X22, [X22+2920]
	046 Move W21, W31
	047 Move W8, [X0+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X2, [X22]
	050 Add X8, X31, 8
	051 Move W1, W21
	052 Call List`1<TreeViewItemWrapper>.get_Item, X0, X1
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 Move X8, [X31+24]
	055 Add X0, X31, 32
	056 Move X1, X31
	057 Move [X31+2], V0
	058 Move [X31+48], X8
	059 Call TreeViewItemWrapper.get_id, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, [X20+64]
	062 Add W21, W21, 1
	063 Compare X0, 0
	064 JumpIfNotEqual {47}
	065 Call 0x1C17F20
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W21, TEMP
	069 Move W0, W21
	070 Move X20, [X31+96]
	071 Move X19, [X31+104]
	072 Move X22, [X31+80]
	073 Move X21, [X31+88]
	074 Move X30, [X31+64]
	075 Add X31, X31, 112
	076 Return X0

Method: System.Int32 GetIdForIndex(System.Int32 index)

Disassembly:
	0x03CF4C64 ADRP X27, 0x6F3000
	0x03CF4C68 ADRP X28, 0x46E000
	0x03CF4C6C ADRP X20, 0x46E000
	0x03CF4C70 ADRP X26, 0x400000
	0x03CF4C74 ADRP X25, 0x403000
	0x03CF4C78 ADRP X22, 0x46E000
	0x03CF4C7C ADRP X21, 0x46E000
	0x03CF4C80 ADRP X24, 0x400000
	0x03CF4C84 ADRP X23, 0x406000
	0x03CF4C88 LDR X28, [X28 + 0xBC0]
	0x03CF4C8C LDR X20, [X20 + 0xBC8]
	0x03CF4C90 LDR X26, [X26 + 0xE30]
	0x03CF4C94 LDRB W8, [X27 + 0x78D]
	0x03CF4C98 LDR X25, [X25 + 0xB70]
	0x03CF4C9C LDR X22, [X22 + 0xBD0]
	0x03CF4CA0 LDR X21, [X21 + 0xBD8]
	0x03CF4CA4 LDR X24, [X24 + 0xE08]
	0x03CF4CA8 LDR X23, [X23 + 0x688]
	0x03CF4CAC MOV X19, X0
	0x03CF4CB0 TBNZ X8, 0x0, 0x3CF4D1C
	0x03CF4CB4 ADRP X0, 0x46E000
	0x03CF4CB8 LDR X0, [X0 + 0xBC8]
	0x03CF4CBC BL 0x1C16CF4
	0x03CF4CC0 ADRP X0, 0x46E000
	0x03CF4CC4 LDR X0, [X0 + 0xBC0]
	0x03CF4CC8 BL 0x1C16CF4
	0x03CF4CCC ADRP X0, 0x406000
	0x03CF4CD0 LDR X0, [X0 + 0x688]
	0x03CF4CD4 BL 0x1C16CF4
	0x03CF4CD8 ADRP X0, 0x400000
	0x03CF4CDC LDR X0, [X0 + 0xE08]
	0x03CF4CE0 BL 0x1C16CF4
	0x03CF4CE4 ADRP X0, 0x403000
	0x03CF4CE8 LDR X0, [X0 + 0xB70]
	0x03CF4CEC BL 0x1C16CF4
	0x03CF4CF0 ADRP X0, 0x46E000
	0x03CF4CF4 LDR X0, [X0 + 0xBD8]
	0x03CF4CF8 BL 0x1C16CF4
	0x03CF4CFC ADRP X0, 0x400000
	0x03CF4D00 LDR X0, [X0 + 0xE30]
	0x03CF4D04 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x6F4000
	007 Move W8, [X21+1918]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x46F000
	015 Move X0, [X0+2920]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1918], W8
	019 Move X0, X20
	020 Move W1, W19
	021 Move [X31+32], X31
	022 Move [X31+40], X31
	023 Move [X31+48], X31
	024 Call BaseTreeViewController.IsIndexValid, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {45}
	029 Move X0, [X20+64]
	030 Compare X0, 0
	031 JumpIfEqual {54}
	032 Move X8, 0x46F000
	033 Move X8, [X8+2920]
	034 Move W1, W19
	035 Move X2, [X8]
	036 Add X8, X31, 8
	037 Call List`1<TreeViewItemWrapper>.get_Item, X0, X1
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 Move X8, [X31+24]
	040 Add X0, X31, 32
	041 Move X1, X31
	042 Move [X31+2], V0
	043 Move [X31+48], X8
	044 Call TreeViewItemWrapper.get_id, X0
	045 Move TEMP, 0
	046 Not TEMP
	047 Move W0, TEMP
	048 Move X20, [X31+80]
	049 Move X19, [X31+88]
	050 Move X30, [X31+64]
	051 Move X21, [X31+72]
	052 Add X31, X31, 96
	053 Return X0
	054 Call 0x1C17F20

Method: System.Boolean HasChildren(System.Int32 id)

Disassembly:
	0x03CF4D68 BL 0x1C16F10
	0x03CF4D6C LDR X1, [X23]
	0x03CF4D70 MOV X20, X0
	0x03CF4D74 BL 0x2DA9EF4
	0x03CF4D78 STR X20, [X19 + 0x48]
	0x03CF4D7C LDR X0, [X22]
	0x03CF4D80 BL 0x1C16F10
	0x03CF4D84 LDR X1, [X21]
	0x03CF4D88 MOV X20, X0
	0x03CF4D8C BL 0x3086DBC
	0x03CF4D90 STR X20, [X19 + 0x50]
	0x03CF4D94 MOV X0, X19
	0x03CF4D98 LDP X20, X19, [X31 + 0x50]
	0x03CF4D9C LDP X22, X21, [X31 + 0x40]
	0x03CF4DA0 LDP X24, X23, [X31 + 0x30]
	0x03CF4DA4 LDP X26, X25, [X31 + 0x20]
	0x03CF4DA8 LDP X28, X27, [X31 + 0x10]
	0x03CF4DAC MOV X1, X31
	0x03CF4DB0 LDR X30, [X31], #0x60
	0x03CF4DB4 B 0x33BDD8C
	0x03CF4DB8 STR X30, [X31 - 0x30]!
	0x03CF4DBC STP X22, X21, [X31 + 0x10]
	0x03CF4DC0 STP X20, X19, [X31 + 0x20]
	0x03CF4DC4 ADRP X22, 0x6F3000
	0x03CF4DC8 ADRP X19, 0x46E000
	0x03CF4DCC ADRP X20, 0x46E000
	0x03CF4DD0 ADRP X21, 0x46E000
	0x03CF4DD4 LDRB W8, [X22 + 0x78E]
	0x03CF4DD8 LDR X19, [X19 + 0xBE0]
	0x03CF4DDC LDR X20, [X20 + 0xB98]
	0x03CF4DE0 LDR X21, [X21 + 0xBE8]
	0x03CF4DE4 TBNZ X8, 0x0, 0x3CF4E14
	0x03CF4DE8 ADRP X0, 0x46E000
	0x03CF4DEC LDR X0, [X0 + 0xB98]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6F4000
	007 Move W8, [X21+1919]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x46F000
	015 Move X0, [X0+2984]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1919], W8
	019 Move [X31], X31
	020 Move [X31+8], X31
	021 Move X0, [X20+48]
	022 Compare X0, 0
	023 JumpIfEqual {45}
	024 Move X8, 0x46F000
	025 Move X8, [X8+2984]
	026 Add X2, X31, 0
	027 Move W1, W19
	028 Move X3, [X8]
	029 Call Dictionary`2<Int32, TreeItem>.TryGetValue, X0, X1, X2
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {37}
	034 Add X0, X31, 0
	035 Move X1, X31
	036 Call TreeItem.get_hasChildren, X0
	037 Move W0, W31
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+16]
	041 Move X21, [X31+24]
	042 And W0, W0, 1
	043 Add X31, X31, 48
	044 Return X0
	045 Call 0x1C17F20

Method: System.Boolean Exists(System.Int32 id)

Disassembly:
	0x03CF4DF0 BL 0x1C16CF4
	0x03CF4DF4 ADRP X0, 0x46E000
	0x03CF4DF8 LDR X0, [X0 + 0xBE8]
	0x03CF4DFC BL 0x1C16CF4
	0x03CF4E00 ADRP X0, 0x46E000
	0x03CF4E04 LDR X0, [X0 + 0xBE0]
	0x03CF4E08 BL 0x1C16CF4
	0x03CF4E0C MOVZ W8, 0x1
	0x03CF4E10 STRB W8, [X22 + 0x78E]
	0x03CF4E14 MOV X0, X31
	0x03CF4E18 BL 0x3BFE79C
	0x03CF4E1C LDR X19, [X19]
	0x03CF4E20 AND X0, X0, 0xFFFF
	0x03CF4E24 MOV X1, X31
	0x03CF4E28 BL 0x3BFE7A4
	0x03CF4E2C MOV W1, W0
	0x03CF4E30 MOV X0, X19
	0x03CF4E34 MOV W2, W31
	0x03CF4E38 MOV W3, W31
	0x03CF4E3C MOV X4, X31
	0x03CF4E40 BL 0x3BFE7FC
	0x03CF4E44 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F4000
	006 Move W8, [X21+1920]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x46F000
	014 Move X0, [X0+2992]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1920], W8
	018 Move X0, [X20+48]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0x46F000
	022 Move X8, [X8+2992]
	023 Move W1, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Dictionary`2<Int32, TreeItem>.ContainsKey, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Boolean HasChildrenByIndex(System.Int32 index)

Disassembly:
	0x03CF2E44 LDR X8, [X19]
	0x03CF2E48 MOV X0, X19
	0x03CF2E4C MOV W1, W20
	0x03CF2E50 LDP X9, X2, [X8 + 0x1F8]
	0x03CF2E54 BLR X9
	0x03CF2E58 MOV W1, W0
	0x03CF2E5C MOV X0, X19
	0x03CF2E60 BL 0x3CF41C8
	0x03CF2E64 LDR X8, [X19 + 0x40]
	0x03CF2E68 CBZ X8, 0x3CF2EBC
	0x03CF2E6C MOV W22, W0
	0x03CF2E70 MOV W21, W31
	0x03CF2E74 ADD W20, W20, 0x1
	0x03CF2E78 LDR W8, [X8 + 0x18]
	0x03CF2E7C ADD W23, W20, W21
	0x03CF2E80 CMP W23, W8
	0x03CF2E84 B.GE 0x3CF2EC0
	0x03CF2E88 LDR X8, [X19]
	0x03CF2E8C MOV X0, X19
	0x03CF2E90 MOV W1, W23
	0x03CF2E94 LDP X9, X2, [X8 + 0x1F8]
	0x03CF2E98 BLR X9
	0x03CF2E9C MOV W1, W0
	0x03CF2EA0 MOV X0, X19
	0x03CF2EA4 BL 0x3CF41C8
	0x03CF2EA8 CMP W0, W22
	0x03CF2EAC B.LE 0x3CF2EC0
	0x03CF2EB0 LDR X8, [X19 + 0x40]
	0x03CF2EB4 ADD W21, W21, 0x1
	0x03CF2EB8 CBNZ X8, 0x3CF2E78
	0x03CF2EBC BL 0x1C16F20
	0x03CF2EC0 CMP W20, W23
	0x03CF2EC4 B.GE 0x3CF2F34
	0x03CF2EC8 ADRP X24, 0x470000
	0x03CF2ECC ADRP X25, 0x40E000
	0x03CF2ED0 LDR X24, [X24 + 0xB68]
	0x03CF2ED4 LDR X25, [X25 + 0x5A0]
	0x03CF2ED8 MOV W23, W31
	0x03CF2EDC LDR X0, [X19 + 0x40]
	0x03CF2EE0 CBZ X0, 0x3CF2EBC
	0x03CF2EE4 LDR X2, [X24]
	0x03CF2EE8 LDR X22, [X19 + 0x48]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x6F6000
	007 Move W8, [X21+1921]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x471000
	015 Move X0, [X0+2920]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1921], W8
	019 Move X0, X20
	020 Move W1, W19
	021 Move [X31+32], X31
	022 Move [X31+40], X31
	023 Move [X31+48], X31
	024 Call BaseTreeViewController.IsIndexValid, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {45}
	029 Move X0, [X20+64]
	030 Compare X0, 0
	031 JumpIfEqual {53}
	032 Move X8, 0x471000
	033 Move X8, [X8+2920]
	034 Move W1, W19
	035 Move X2, [X8]
	036 Add X8, X31, 8
	037 Call List`1<TreeViewItemWrapper>.get_Item, X0, X1
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 Move X8, [X31+24]
	040 Add X0, X31, 32
	041 Move X1, X31
	042 Move [X31+2], V0
	043 Move [X31+48], X8
	044 Call TreeViewItemWrapper.get_hasChildren, X0
	045 Move W0, W31
	046 Move X20, [X31+80]
	047 Move X19, [X31+88]
	048 Move X30, [X31+64]
	049 Move X21, [X31+72]
	050 And W0, W0, 1
	051 Add X31, X31, 96
	052 Return X0
	053 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<System.Int32> GetChildrenIdsByIndex(System.Int32 index)

Disassembly:
	0x03CF393C B 0x3CF397C
	0x03CF3940 B 0x3CF397C
	0x03CF3944 B 0x3CF397C
	0x03CF3948 B 0x3CF397C
	0x03CF394C B 0x3CF397C
	0x03CF3950 B 0x3CF397C
	0x03CF3954 B 0x3CF397C
	0x03CF3958 B 0x3CF397C
	0x03CF395C B 0x3CF397C
	0x03CF3960 B 0x3CF397C
	0x03CF3964 B 0x3CF397C
	0x03CF3968 B 0x3CF397C
	0x03CF396C B 0x3CF397C
	0x03CF3970 B 0x3CF397C
	0x03CF3974 B 0x3CF397C
	0x03CF3978 B 0x3CF3A60
	0x03CF397C MOV X26, X1
	0x03CF3980 MOV X21, X0
	0x03CF3984 B 0x3CF3AF4
	0x03CF3988 B 0x3CF39AC
	0x03CF398C B 0x3CF39AC
	0x03CF3990 B 0x3CF39AC
	0x03CF3994 B 0x3CF39AC
	0x03CF3998 B 0x3CF39AC
	0x03CF399C B 0x3CF3A60
	0x03CF39A0 B 0x3CF3A60
	0x03CF39A4 B 0x3CF3A60
	0x03CF39A8 B 0x3CF39AC
	0x03CF39AC MOV X26, X1
	0x03CF39B0 MOV X21, X0
	0x03CF39B4 CMP W26, 0x1
	0x03CF39B8 B.NE 0x3CF39D8
	0x03CF39BC MOV X0, X21
	0x03CF39C0 BL 0x3EB1AD0
	0x03CF39C4 LDR X23, [X0]
	0x03CF39C8 BL 0x3EB1AE0
	0x03CF39CC MOV W21, W31
	0x03CF39D0 CBNZ X22, 0x3CF37BC
	0x03CF39D4 B 0x3CF381C
	0x03CF39D8 MOV X23, X31
	0x03CF39DC CBZ X22, 0x3CF3A40

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x6F5000
	007 Move W8, [X21+1922]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x470000
	015 Move X0, [X0+2920]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1922], W8
	019 Move X0, X20
	020 Move W1, W19
	021 Move [X31+32], X31
	022 Move [X31+40], X31
	023 Move [X31+48], X31
	024 Call BaseTreeViewController.IsIndexValid, X0, X1
	025 Move W8, W0
	026 Move X0, X31
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {47}
	031 Move X0, [X20+64]
	032 Compare X0, 0
	033 JumpIfEqual {53}
	034 Move X8, 0x470000
	035 Move X8, [X8+2920]
	036 Move W1, W19
	037 Move X2, [X8]
	038 Add X8, X31, 8
	039 Call List`1<TreeViewItemWrapper>.get_Item, X0, X1
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move X8, [X31+24]
	042 Add X0, X31, 32
	043 Move X1, X31
	044 Move [X31+2], V0
	045 Move [X31+48], X8
	046 Call TreeViewItemWrapper.get_childrenIds, X0
	047 Move X20, [X31+80]
	048 Move X19, [X31+88]
	049 Move X30, [X31+64]
	050 Move X21, [X31+72]
	051 Add X31, X31, 96
	052 Return X0
	053 Call 0x1C17F20

Method: System.Int32 GetChildIndexForId(System.Int32 id)

Disassembly:
	0x03CF4E48 MOVZ W1, 0x1
	0x03CF4E4C MOV W2, W31
	0x03CF4E50 MOV W3, W31
	0x03CF4E54 LDR X8, [X8 + 0xB8]
	0x03CF4E58 MOV X4, X31
	0x03CF4E5C STR X0, [X8]
	0x03CF4E60 LDR X0, [X21]
	0x03CF4E64 BL 0x3BFE7FC
	0x03CF4E68 LDR X8, [X20]
	0x03CF4E6C LDP X20, X19, [X31 + 0x20]
	0x03CF4E70 LDP X22, X21, [X31 + 0x10]
	0x03CF4E74 LDR X8, [X8 + 0xB8]
	0x03CF4E78 STR X0, [X8 + 0x8]
	0x03CF4E7C LDR X30, [X31], #0x30
	0x03CF4E80 RET
	0x03CF4E84 STR X30, [X31 - 0x10]!
	0x03CF4E88 LDR X8, [X0 + 0x18]
	0x03CF4E8C CBZ X8, 0x3CF4EAC
	0x03CF4E90 LDR X0, [X0 + 0x10]
	0x03CF4E94 CBZ X0, 0x3CF4EAC
	0x03CF4E98 LDR W1, [X8 + 0x24]
	0x03CF4E9C MOVZ W2, 0x1
	0x03CF4EA0 MOVZ W3, 0x1
	0x03CF4EA4 LDR X30, [X31], #0x10
	0x03CF4EA8 B 0x3CF48CC
	0x03CF4EAC BL 0x1C16F20
	0x03CF4EB0 STR X30, [X31 - 0x30]!
	0x03CF4EB4 STP X22, X21, [X31 + 0x10]
	0x03CF4EB8 STP X20, X19, [X31 + 0x20]
	0x03CF4EBC ADRP X21, 0x6F3000
	0x03CF4EC0 LDRB W8, [X21 + 0x78F]
	0x03CF4EC4 MOV X19, X1
	0x03CF4EC8 MOV X20, X0
	0x03CF4ECC TBNZ X8, 0x0, 0x3CF4EE4
	0x03CF4ED0 ADRP X0, 0x400000
	0x03CF4ED4 LDR X0, [X0 + 0xE70]
	0x03CF4ED8 BL 0x1C16CF4
	0x03CF4EDC MOVZ W8, 0x1
	0x03CF4EE0 STRB W8, [X21 + 0x78F]
	0x03CF4EE4 ADRP X22, 0x400000
	0x03CF4EE8 LDR X21, [X20 + 0x20]!
	0x03CF4EEC LDR X22, [X22 + 0xE70]
	0x03CF4EF0 MOV X0, X21
	0x03CF4EF4 MOV X1, X19
	0x03CF4EF8 MOV X2, X31
	0x03CF4EFC BL 0x33C0DE4
	0x03CF4F00 MOV X8, X0
	0x03CF4F04 CBZ X0, 0x3CF4F18
	0x03CF4F08 LDR X1, [X22]
	0x03CF4F0C LDR X9, [X8]
	0x03CF4F10 CMP X9, X1
	0x03CF4F14 B.NE 0x3CF4F44
	0x03CF4F18 MOV X0, X20
	0x03CF4F1C MOV X1, X8
	0x03CF4F20 MOV X2, X21
	0x03CF4F24 BL 0x1C24138
	0x03CF4F28 CMP X21, X0
	0x03CF4F2C MOV X21, X0
	0x03CF4F30 B.NE 0x3CF4EF0
	0x03CF4F34 LDP X20, X19, [X31 + 0x20]
	0x03CF4F38 LDP X22, X21, [X31 + 0x10]
	0x03CF4F3C LDR X30, [X31], #0x30
	0x03CF4F40 RET
	0x03CF4F44 MOV X0, X8
	0x03CF4F48 BL 0x1C171E0
	0x03CF4F4C STR X30, [X31 - 0x30]!
	0x03CF4F50 STP X22, X21, [X31 + 0x10]
	0x03CF4F54 STP X20, X19, [X31 + 0x20]
	0x03CF4F58 ADRP X21, 0x6F3000
	0x03CF4F5C LDRB W8, [X21 + 0x790]
	0x03CF4F60 MOV X19, X1
	0x03CF4F64 MOV X20, X0
	0x03CF4F68 TBNZ X8, 0x0, 0x3CF4F80
	0x03CF4F6C ADRP X0, 0x400000
	0x03CF4F70 LDR X0, [X0 + 0xE70]
	0x03CF4F74 BL 0x1C16CF4
	0x03CF4F78 MOVZ W8, 0x1
	0x03CF4F7C STRB W8, [X21 + 0x790]
	0x03CF4F80 ADRP X22, 0x400000
	0x03CF4F84 LDR X21, [X20 + 0x20]!
	0x03CF4F88 LDR X22, [X22 + 0xE70]
	0x03CF4F8C MOV X0, X21
	0x03CF4F90 MOV X1, X19
	0x03CF4F94 MOV X2, X31
	0x03CF4F98 BL 0x33C0FDC
	0x03CF4F9C MOV X8, X0
	0x03CF4FA0 CBZ X0, 0x3CF4FB4
	0x03CF4FA4 LDR X1, [X22]
	0x03CF4FA8 LDR X9, [X8]
	0x03CF4FAC CMP X9, X1
	0x03CF4FB0 B.NE 0x3CF4FE0
	0x03CF4FB4 MOV X0, X20
	0x03CF4FB8 MOV X1, X8
	0x03CF4FBC MOV X2, X21
	0x03CF4FC0 BL 0x1C24138
	0x03CF4FC4 CMP X21, X0
	0x03CF4FC8 MOV X21, X0
	0x03CF4FCC B.NE 0x3CF4F8C
	0x03CF4FD0 LDP X20, X19, [X31 + 0x20]
	0x03CF4FD4 LDP X22, X21, [X31 + 0x10]
	0x03CF4FD8 LDR X30, [X31], #0x30
	0x03CF4FDC RET
	0x03CF4FE0 MOV X0, X8
	0x03CF4FE4 BL 0x1C171E0
	0x03CF4FE8 STR X30, [X31 - 0x40]!
	0x03CF4FEC STP X24, X23, [X31 + 0x10]
	0x03CF4FF0 STP X22, X21, [X31 + 0x20]
	0x03CF4FF4 STP X20, X19, [X31 + 0x30]
	0x03CF4FF8 ADRP X21, 0x6F3000
	0x03CF4FFC LDRB W8, [X21 + 0x791]
	0x03CF5000 MOV X19, X1
	0x03CF5004 MOV X20, X0
	0x03CF5008 TBNZ X8, 0x0, 0x3CF5020
	0x03CF500C ADRP X0, 0x46D000
	0x03CF5010 LDR X0, [X0 + 0xBF0]
	0x03CF5014 BL 0x1C16CF4
	0x03CF5018 MOVZ W8, 0x1
	0x03CF501C STRB W8, [X21 + 0x791]
	0x03CF5020 ADRP X24, 0x46D000
	0x03CF5024 LDR X21, [X20 + 0x28]!
	0x03CF5028 LDR X24, [X24 + 0xBF0]
	0x03CF502C MOV X0, X21
	0x03CF5030 MOV X1, X19
	0x03CF5034 MOV X2, X31
	0x03CF5038 BL 0x33C0DE4
	0x03CF503C CBZ X0, 0x3CF505C
	0x03CF5040 LDR X23, [X24]
	0x03CF5044 MOV X22, X0
	0x03CF5048 MOV X1, X23
	0x03CF504C BL 0x1C16E00
	0x03CF5050 MOV X1, X0
	0x03CF5054 CBNZ X0, 0x3CF5060
	0x03CF5058 B 0x3CF508C
	0x03CF505C MOV X1, X31
	0x03CF5060 MOV X0, X20
	0x03CF5064 MOV X2, X21
	0x03CF5068 BL 0x1C24138
	0x03CF506C CMP X21, X0
	0x03CF5070 MOV X21, X0
	0x03CF5074 B.NE 0x3CF502C
	0x03CF5078 LDP X20, X19, [X31 + 0x30]
	0x03CF507C LDP X22, X21, [X31 + 0x20]
	0x03CF5080 LDP X24, X23, [X31 + 0x10]
	0x03CF5084 LDR X30, [X31], #0x40
	0x03CF5088 RET
	0x03CF508C MOV X0, X22
	0x03CF5090 MOV X1, X23
	0x03CF5094 BL 0x1C171E0
	0x03CF5098 STR X30, [X31 - 0x40]!
	0x03CF509C STP X24, X23, [X31 + 0x10]
	0x03CF50A0 STP X22, X21, [X31 + 0x20]
	0x03CF50A4 STP X20, X19, [X31 + 0x30]
	0x03CF50A8 ADRP X21, 0x6F2000
	0x03CF50AC LDRB W8, [X21 + 0x792]
	0x03CF50B0 MOV X19, X1
	0x03CF50B4 MOV X20, X0
	0x03CF50B8 TBNZ X8, 0x0, 0x3CF50D0
	0x03CF50BC ADRP X0, 0x46D000
	0x03CF50C0 LDR X0, [X0 + 0xBF0]
	0x03CF50C4 BL 0x1C16CF4
	0x03CF50C8 MOVZ W8, 0x1
	0x03CF50CC STRB W8, [X21 + 0x792]
	0x03CF50D0 ADRP X24, 0x46D000
	0x03CF50D4 LDR X21, [X20 + 0x28]!
	0x03CF50D8 LDR X24, [X24 + 0xBF0]
	0x03CF50DC MOV X0, X21
	0x03CF50E0 MOV X1, X19
	0x03CF50E4 MOV X2, X31
	0x03CF50E8 BL 0x33C0FDC
	0x03CF50EC CBZ X0, 0x3CF510C
	0x03CF50F0 LDR X23, [X24]
	0x03CF50F4 MOV X22, X0
	0x03CF50F8 MOV X1, X23
	0x03CF50FC BL 0x1C16E00
	0x03CF5100 MOV X1, X0
	0x03CF5104 CBNZ X0, 0x3CF5110
	0x03CF5108 B 0x3CF513C
	0x03CF510C MOV X1, X31
	0x03CF5110 MOV X0, X20
	0x03CF5114 MOV X2, X21
	0x03CF5118 BL 0x1C24138
	0x03CF511C CMP X21, X0
	0x03CF5120 MOV X21, X0
	0x03CF5124 B.NE 0x3CF50DC
	0x03CF5128 LDP X20, X19, [X31 + 0x30]
	0x03CF512C LDP X22, X21, [X31 + 0x20]
	0x03CF5130 LDP X24, X23, [X31 + 0x10]
	0x03CF5134 LDR X30, [X31], #0x40
	0x03CF5138 RET
	0x03CF513C MOV X0, X22
	0x03CF5140 MOV X1, X23
	0x03CF5144 BL 0x1C171E0
	0x03CF5148 LDR X0, [X0 + 0x18]
	0x03CF514C RET
	0x03CF5150 STP X30, X21, [X31 - 0x20]!
	0x03CF5154 STP X20, X19, [X31 + 0x10]
	0x03CF5158 ADRP X21, 0x6F2000
	0x03CF515C LDRB W8, [X21 + 0x793]
	0x03CF5160 MOV X20, X1
	0x03CF5164 MOV X19, X0
	0x03CF5168 TBNZ X8, 0x0, 0x3CF5180
	0x03CF516C ADRP X0, 0x46D000
	0x03CF5170 LDR X0, [X0 + 0xBF8]
	0x03CF5174 BL 0x1C16CF4
	0x03CF5178 MOVZ W8, 0x1
	0x03CF517C STRB W8, [X21 + 0x793]
	0x03CF5180 LDR X8, [X19 + 0x18]
	0x03CF5184 CMP X8, X20
	0x03CF5188 B.EQ 0x3CF51F0
	0x03CF518C ADRP X8, 0x46D000
	0x03CF5190 LDR X8, [X8 + 0xBF8]
	0x03CF5194 STR X20, [X19 + 0x18]
	0x03CF5198 LDR X20, [X19 + 0x10]
	0x03CF519C MOV X1, X31
	0x03CF51A0 LDR X0, [X8]
	0x03CF51A4 BL 0x3C30760
	0x03CF51A8 CBZ X20, 0x3CF51FC
	0x03CF51AC AND X1, X0, 0x0
	0x03CF51B0 MOV X0, X20
	0x03CF51B4 MOV X2, X31
	0x03CF51B8 BL 0x3DF3018
	0x03CF51BC CBNZ X0, 0x3CF51D0
	0x03CF51C0 LDR X0, [X19 + 0x10]
	0x03CF51C4 CBZ X0, 0x3CF51FC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x6F4000
	009 Move W8, [X21+1923]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x46F000
	017 Move X0, [X0+2984]
	018 Call 0x1C17CF4
	019 Move X0, 0x400000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x428000
	023 Move X0, [X0+1976]
	024 Call 0x1C17CF4
	025 Move X0, 0x428000
	026 Move X0, [X0+1984]
	027 Call 0x1C17CF4
	028 Move X0, 0x400000
	029 Move X0, [X0+3608]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1923], W8
	033 Move [X31+16], X31
	034 Move [X31+24], X31
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Move X0, [X19+48]
	038 Compare X0, 0
	039 JumpIfEqual {193}
	040 Move X21, 0x46F000
	041 Move X21, [X21+2984]
	042 Add X2, X31, 16
	043 Move W1, W20
	044 Move X3, [X21]
	045 Call Dictionary`2<Int32, TreeItem>.TryGetValue, X0, X1, X2
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {181}
	050 Move X0, [X19+48]
	051 Compare X0, 0
	052 JumpIfEqual {193}
	053 Move W1, [X31+20]
	054 Move X3, [X21]
	055 Add X2, X31, 0
	056 Add X21, X31, 0
	057 Call Dictionary`2<Int32, TreeItem>.TryGetValue, X0, X1, X2
	058 Add X8, X19, 56
	059 Add X9, X21, 8
	060 And W31, W0, 1
	061 NotImplemented "Instruction CSEL not yet implemented."
	062 Move X19, [X8]
	063 Compare X19, 0
	064 JumpIfEqual {193}
	065 Move X10, 0x428000
	066 Move X8, [X19]
	067 Move X10, [X10+1976]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Move X1, [X10]
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move X0, X19
	079 Move W2, W31
	080 Call 0x1C5D788
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X8, X8, X9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X1, [X0+8]
	086 Move X0, X19
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move X19, X0
	089 Compare X0, 0
	090 JumpIfEqual {194}
	091 Move X22, 0x400000
	092 Move X23, 0x428000
	093 Move X22, [X22+3608]
	094 Move X23, [X23+1984]
	095 Move W21, W31
	096 Move X8, [X19]
	097 Move X1, [X22]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X19
	108 Move W2, W31
	109 Call 0x1C5D788
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Add X8, X8, X9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X19
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {144}
	121 Move X8, [X19]
	122 Move X1, [X23]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X19
	133 Move W2, W31
	134 Call 0x1C5D788
	135 NotImplemented "Instruction LDRSW not yet implemented."
	136 Add X8, X8, X9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X0, X19
	141 NotImplemented "Instruction BLR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Add W21, W21, 1
	144 Move X20, X31
	145 Move W21, W31
	146 Move W22, 9
	147 Compare X19, 0
	148 JumpIfNotEqual {153}
	149 Move X20, X31
	150 Move W22, 3
	151 Compare X19, 0
	152 JumpIfEqual {176}
	153 Move X10, 0x3FF000
	154 Move X8, [X19]
	155 Move X10, [X10+3584]
	156 NotImplemented "Instruction LDRH not yet implemented."
	157 Move X1, [X10]
	158 Compare X9, 0
	159 JumpIfEqual {166}
	160 Move X10, [X8+176]
	161 Add X10, X10, 8
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract X9, X9, 1
	165 Add X10, X10, 16
	166 Move X0, X19
	167 Move W2, W31
	168 Call 0x1C5D788
	169 NotImplemented "Instruction LDRSW not yet implemented."
	170 Add X8, X8, X9
	171 Add X0, X8, 312
	172 Move X8, [X0]
	173 Move X1, [X0+8]
	174 Move X0, X19
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Compare X20, 0
	177 JumpIfNotEqual {195}
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Compare W22, 0
	180 JumpIfNotEqual {184}
	181 Move TEMP, 0
	182 Not TEMP
	183 Move W21, TEMP
	184 Move W0, W21
	185 Move X20, [X31+64]
	186 Move X19, [X31+72]
	187 Move X22, [X31+48]
	188 Move X21, [X31+56]
	189 Move X30, [X31+32]
	190 Move X23, [X31+40]
	191 Add X31, X31, 80
	192 Return X0
	193 Call 0x1C17F20
	194 Call 0x1C17F20
	195 Move X0, X20
	196 Call 0x1C17F18
	197 Move X21, X0
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X0, X21
	200 Call 0x3EB2AD0
	201 Move X20, [X0]
	202 Call 0x3EB2AE0
	203 Move W22, W31
	204 Move W21, W31
	205 Compare X19, 0
	206 JumpIfNotEqual {153}
	207 Move X20, X31
	208 Move X21, X0
	209 Compare X19, 0
	210 JumpIfEqual {234}
	211 Move X10, 0x3FF000
	212 Move X8, [X19]
	213 Move X10, [X10+3584]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Move X1, [X10]
	216 Compare X9, 0
	217 JumpIfEqual {224}
	218 Move X10, [X8+176]
	219 Add X10, X10, 8
	220 NotImplemented "Instruction LDUR not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Subtract X9, X9, 1
	223 Add X10, X10, 16
	224 Move X0, X19
	225 Move W2, W31
	226 Call 0x1C5D788
	227 NotImplemented "Instruction LDRSW not yet implemented."
	228 Add X8, X8, X9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X19
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Compare X20, 0
	235 JumpIfNotEqual {238}
	236 Move X0, X21
	237 Call 0x1D2D690
	238 Move X0, X20
	239 Call 0x1C17F18
	240 Call 0x1991590

Method: System.Int32 GetIndentationDepth(System.Int32 id)

Disassembly:
	0x03CF51C8 MOV X1, X31
	0x03CF51CC BL 0x3CFD108
	0x03CF51D0 LDR X8, [X19 + 0x20]
	0x03CF51D4 CBZ X8, 0x3CF51F0
	0x03CF51D8 LDR X2, [X8 + 0x18]
	0x03CF51DC LDR X0, [X8 + 0x40]
	0x03CF51E0 LDR X1, [X8 + 0x28]
	0x03CF51E4 LDP X20, X19, [X31 + 0x10]
	0x03CF51E8 LDP X30, X21, [X31], #0x20
	0x03CF51EC BR X2
	0x03CF51F0 LDP X20, X19, [X31 + 0x10]
	0x03CF51F4 LDP X30, X21, [X31], #0x20
	0x03CF51F8 RET
	0x03CF51FC BL 0x1C16F20
	0x03CF5200 LDR X8, [X0 + 0x20]
	0x03CF5204 CBZ X8, 0x3CF5218
	0x03CF5208 LDR X2, [X8 + 0x18]
	0x03CF520C LDR X0, [X8 + 0x40]
	0x03CF5210 LDR X1, [X8 + 0x28]
	0x03CF5214 BR X2
	0x03CF5218 RET
	0x03CF521C LDR X0, [X0 + 0x10]
	0x03CF5220 RET
	0x03CF5224 STR X30, [X31 - 0x30]!
	0x03CF5228 STP X22, X21, [X31 + 0x10]
	0x03CF522C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+680]
	007 Move X2, [X8+688]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Add W31, W0, 1
	010 Move W1, W0
	011 Move W20, W31
	012 Move X8, [X19]
	013 Move X0, X19
	014 Move X9, [X8+680]
	015 Move X2, [X8+688]
	016 NotImplemented "Instruction BLR not yet implemented."
	017 Move W1, W0
	018 Add W31, W0, 1
	019 Add W20, W20, 1
	020 Move W20, W31
	021 Move W0, W20
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Int32 GetIndentationDepthByIndex(System.Int32 index)

Disassembly:
	0x03CF2D38 LDRH W9, [X8 + 0x12E]
	0x03CF2D3C CBZ X9, 0x3CF2D60
	0x03CF2D40 LDR X10, [X8 + 0xB0]
	0x03CF2D44 ADD X10, X10, 0x8
	0x03CF2D48 LDUR X11, [X10 - 0x8]
	0x03CF2D4C CMP X11, X1
	0x03CF2D50 B.EQ 0x3CF2D70
	0x03CF2D54 SUBS X9, X9, 0x1
	0x03CF2D58 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move X19, X0
	005 Move X9, [X8+504]
	006 Move X2, [X8+512]
	007 NotImplemented "Instruction BLR not yet implemented."
	008 Move W1, W0
	009 Move X0, X19
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call BaseTreeViewController.GetIndentationDepth, X0, X1
	013 Return X0

Method: System.Boolean CanChangeExpandedState(System.Int32 id)

Disassembly:
	0x03CF5230 ADRP X22, 0x6F2000
	0x03CF5234 ADRP X21, 0x426000

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean IsExpanded(System.Int32 id)

Disassembly:
	0x03CF5238 LDRB W8, [X22 + 0x794]
	0x03CF523C LDR X21, [X21 + 0x7F0]
	0x03CF5240 MOV X20, X1
	0x03CF5244 MOV X19, X0
	0x03CF5248 TBNZ X8, 0x0, 0x3CF5278
	0x03CF524C ADRP X0, 0x46D000
	0x03CF5250 LDR X0, [X0 + 0xC00]
	0x03CF5254 BL 0x1C16CF4
	0x03CF5258 ADRP X0, 0x426000
	0x03CF525C LDR X0, [X0 + 0x7F0]
	0x03CF5260 BL 0x1C16CF4
	0x03CF5264 ADRP X0, 0x46D000
	0x03CF5268 LDR X0, [X0 + 0xC08]
	0x03CF526C BL 0x1C16CF4
	0x03CF5270 MOVZ W8, 0x1
	0x03CF5274 STRB W8, [X22 + 0x794]
	0x03CF5278 LDR X8, [X19]
	0x03CF527C STR X20, [X19 + 0x10]
	0x03CF5280 ADRP X22, 0x46D000
	0x03CF5284 ADRP X20, 0x46D000
	0x03CF5288 LDP X9, X1, [X8 + 0x1A8]
	0x03CF528C LDR X22, [X22 + 0xC08]
	0x03CF5290 LDR X20, [X20 + 0xC00]
	0x03CF5294 MOV X0, X19
	0x03CF5298 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F3000
	006 Move W8, [X21+1924]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x403000
	014 Move X0, [X0+2920]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1924], W8
	018 Move X0, X20
	019 Call BaseTreeViewController.get_baseTreeView, X0
	020 Compare X0, 0
	021 JumpIfEqual {35}
	022 Move X0, [X0+1200]
	023 Compare X0, 0
	024 JumpIfEqual {35}
	025 Move X8, 0x403000
	026 Move X8, [X8+2920]
	027 Move W1, W19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X2, [X8]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call List`1<Int32>.Contains, X0, X1
	034 Return X0
	035 Call 0x1C17F20

Method: System.Boolean IsExpandedByIndex(System.Int32 index)

Disassembly:
	0x03CF2D70 LDRSW X9, [X10]
	0x03CF2D74 ADD X8, X8, X9, 0x4, LSL
	0x03CF2D78 ADD X0, X8, 0x138
	0x03CF2D7C LDP X8, X1, [X0]
	0x03CF2D80 MOV X0, X22
	0x03CF2D84 BLR X8
	0x03CF2D88 MOV W23, W0
	0x03CF2D8C MOV X0, X19
	0x03CF2D90 BL 0x3CF1324
	0x03CF2D94 CBZ X0, 0x3CF2F84
	0x03CF2D98 LDR X0, [X0 + 0x4B0]
	0x03CF2D9C CBZ X0, 0x3CF2F88
	0x03CF2DA0 LDR X2, [X26]
	0x03CF2DA4 MOV W1, W23
	0x03CF2DA8 BL 0x2FDDF0C
	0x03CF2DAC B 0x3CF2CD4
	0x03CF2DB0 MOV X23, X31
	0x03CF2DB4 CBZ X22, 0x3CF2E18
	0x03CF2DB8 ADRP X10, 0x401000
	0x03CF2DBC LDR X8, [X22]
	0x03CF2DC0 LDR X10, [X10 + 0xE00]
	0x03CF2DC4 LDRH W9, [X8 + 0x12E]
	0x03CF2DC8 LDR X1, [X10]
	0x03CF2DCC CBZ X9, 0x3CF2DF0
	0x03CF2DD0 LDR X10, [X8 + 0xB0]
	0x03CF2DD4 ADD X10, X10, 0x8
	0x03CF2DD8 LDUR X11, [X10 - 0x8]
	0x03CF2DDC CMP X11, X1
	0x03CF2DE0 B.EQ 0x3CF2E00
	0x03CF2DE4 SUBS X9, X9, 0x1
	0x03CF2DE8 ADD X10, X10, 0x10
	0x03CF2DEC B.NE 0x3CF2DD8
	0x03CF2DF0 MOV X0, X22
	0x03CF2DF4 MOV W2, W31
	0x03CF2DF8 BL 0x1C5C788
	0x03CF2DFC B 0x3CF2E0C
	0x03CF2E00 LDRSW X9, [X10]
	0x03CF2E04 ADD X8, X8, X9, 0x4, LSL
	0x03CF2E08 ADD X0, X8, 0x138
	0x03CF2E0C LDP X8, X1, [X0]
	0x03CF2E10 MOV X0, X22
	0x03CF2E14 BLR X8
	0x03CF2E18 CBNZ X23, 0x3CF2F90
	0x03CF2E1C MOV X0, X19
	0x03CF2E20 BL 0x3CF1324

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x6F6000
	007 Move W8, [X21+1925]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x471000
	015 Move X0, [X0+2920]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1925], W8
	019 Move X0, X19
	020 Move W1, W20
	021 Move [X31+32], X31
	022 Move [X31+40], X31
	023 Move [X31+48], X31
	024 Call BaseTreeViewController.IsIndexValid, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {48}
	029 Move X0, [X19+64]
	030 Compare X0, 0
	031 JumpIfEqual {56}
	032 Move X8, 0x471000
	033 Move X8, [X8+2920]
	034 Move W1, W20
	035 Move X2, [X8]
	036 Add X8, X31, 8
	037 Call List`1<TreeViewItemWrapper>.get_Item, X0, X1
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 Move X8, [X31+24]
	040 Add X0, X31, 32
	041 Move X1, X31
	042 Move [X31+2], V0
	043 Move [X31+48], X8
	044 Call TreeViewItemWrapper.get_id, X0
	045 Move W1, W0
	046 Move X0, X19
	047 Call BaseTreeViewController.IsExpanded, X0, X1
	048 Move W0, W31
	049 Move X20, [X31+80]
	050 Move X19, [X31+88]
	051 Move X30, [X31+64]
	052 Move X21, [X31+72]
	053 And W0, W0, 1
	054 Add X31, X31, 96
	055 Return X0
	056 Call 0x1C17F20

Method: System.Void ExpandItemByIndex(System.Int32 index, System.Boolean expandAllChildren, System.Boolean refresh = True)

Disassembly:
	0x03CF4058 MOVZ W22, 0x9
	0x03CF405C CBNZ X19, 0x3CF4070
	0x03CF4060 B 0x3CF40D0
	0x03CF4064 MOV X20, X31
	0x03CF4068 MOVZ W22, 0x3
	0x03CF406C CBZ X19, 0x3CF40D0
	0x03CF4070 ADRP X10, 0x3FF000
	0x03CF4074 LDR X8, [X19]
	0x03CF4078 LDR X10, [X10 + 0xE00]
	0x03CF407C LDRH W9, [X8 + 0x12E]
	0x03CF4080 LDR X1, [X10]
	0x03CF4084 CBZ X9, 0x3CF40A8
	0x03CF4088 LDR X10, [X8 + 0xB0]
	0x03CF408C ADD X10, X10, 0x8
	0x03CF4090 LDUR X11, [X10 - 0x8]
	0x03CF4094 CMP X11, X1
	0x03CF4098 B.EQ 0x3CF40B8
	0x03CF409C SUBS X9, X9, 0x1
	0x03CF40A0 ADD X10, X10, 0x10
	0x03CF40A4 B.NE 0x3CF4090
	0x03CF40A8 MOV X0, X19
	0x03CF40AC MOV W2, W31
	0x03CF40B0 BL 0x1C5C788
	0x03CF40B4 B 0x3CF40C4
	0x03CF40B8 LDRSW X9, [X10]
	0x03CF40BC ADD X8, X8, X9, 0x4, LSL
	0x03CF40C0 ADD X0, X8, 0x138
	0x03CF40C4 LDP X8, X1, [X0]
	0x03CF40C8 MOV X0, X19
	0x03CF40CC BLR X8
	0x03CF40D0 CBNZ X20, 0x3CF4104
	0x03CF40D4 CMP W22, 0x9
	0x03CF40D8 B.EQ 0x3CF40E0
	0x03CF40DC CBNZ W22, 0x3CF40E4
	0x03CF40E0 MOVN W21, 0x0
	0x03CF40E4 MOV W0, W21
	0x03CF40E8 LDP X20, X19, [X31 + 0x40]
	0x03CF40EC LDP X22, X21, [X31 + 0x30]
	0x03CF40F0 LDP X30, X23, [X31 + 0x20]
	0x03CF40F4 ADD X31, X31, 0x50
	0x03CF40F8 RET
	0x03CF40FC BL 0x1C16F20
	0x03CF4100 BL 0x1C16F20
	0x03CF4104 MOV X0, X20
	0x03CF4108 BL 0x1C16F18
	0x03CF410C B 0x3CF4114
	0x03CF4110 B 0x3CF4114
	0x03CF4114 MOV X21, X0
	0x03CF4118 CMP W1, 0x1
	0x03CF411C B.NE 0x3CF4140
	0x03CF4120 MOV X0, X21
	0x03CF4124 BL 0x3EB1AD0
	0x03CF4128 LDR X20, [X0]
	0x03CF412C BL 0x3EB1AE0
	0x03CF4130 MOV W22, W31
	0x03CF4134 MOV W21, W31
	0x03CF4138 CBNZ X19, 0x3CF4070
	0x03CF413C B 0x3CF40D0
	0x03CF4140 MOV X20, X31
	0x03CF4144 B 0x3CF414C
	0x03CF4148 MOV X21, X0
	0x03CF414C CBZ X19, 0x3CF41B0
	0x03CF4150 ADRP X10, 0x3FF000
	0x03CF4154 LDR X8, [X19]
	0x03CF4158 LDR X10, [X10 + 0xE00]
	0x03CF415C LDRH W9, [X8 + 0x12E]
	0x03CF4160 LDR X1, [X10]
	0x03CF4164 CBZ X9, 0x3CF4188
	0x03CF4168 LDR X10, [X8 + 0xB0]
	0x03CF416C ADD X10, X10, 0x8
	0x03CF4170 LDUR X11, [X10 - 0x8]
	0x03CF4174 CMP X11, X1
	0x03CF4178 B.EQ 0x3CF4198
	0x03CF417C SUBS X9, X9, 0x1
	0x03CF4180 ADD X10, X10, 0x10
	0x03CF4184 B.NE 0x3CF4170
	0x03CF4188 MOV X0, X19
	0x03CF418C MOV W2, W31
	0x03CF4190 BL 0x1C5C788
	0x03CF4194 B 0x3CF41A4
	0x03CF4198 LDRSW X9, [X10]
	0x03CF419C ADD X8, X8, X9, 0x4, LSL
	0x03CF41A0 ADD X0, X8, 0x138
	0x03CF41A4 LDP X8, X1, [X0]
	0x03CF41A8 MOV X0, X19
	0x03CF41AC BLR X8
	0x03CF41B0 CBNZ X20, 0x3CF41BC
	0x03CF41B4 MOV X0, X21
	0x03CF41B8 BL 0x1D2C690
	0x03CF41BC MOV X0, X20
	0x03CF41C0 BL 0x1C16F18
	0x03CF41C4 BL 0x1990590
	0x03CF41C8 STR X30, [X31 - 0x20]!
	0x03CF41CC STP X20, X19, [X31 + 0x10]
	0x03CF41D0 LDR X8, [X0]
	0x03CF41D4 MOV X19, X0
	0x03CF41D8 LDR X9, [X8 + 0x2A8]
	0x03CF41DC LDR X2, [X8 + 0x2B0]
	0x03CF41E0 BLR X9
	0x03CF41E4 ADDS W31, W0, 0x1
	0x03CF41E8 B.EQ 0x3CF421C
	0x03CF41EC MOV W1, W0
	0x03CF41F0 MOV W20, W31
	0x03CF41F4 LDR X8, [X19]
	0x03CF41F8 MOV X0, X19
	0x03CF41FC LDR X9, [X8 + 0x2A8]
	0x03CF4200 LDR X2, [X8 + 0x2B0]
	0x03CF4204 BLR X9
	0x03CF4208 MOV W1, W0
	0x03CF420C ADDS W31, W0, 0x1
	0x03CF4210 ADD W20, W20, 0x1
	0x03CF4214 B.NE 0x3CF41F4
	0x03CF4218 B 0x3CF4220
	0x03CF421C MOV W20, W31
	0x03CF4220 MOV W0, W20
	0x03CF4224 LDP X20, X19, [X31 + 0x10]
	0x03CF4228 LDR X30, [X31], #0x20
	0x03CF422C RET
	0x03CF4230 MOVZ W0, 0x1
	0x03CF4234 RET
	0x03CF4238 STP X30, X21, [X31 - 0x20]!
	0x03CF423C STP X20, X19, [X31 + 0x10]
	0x03CF4240 ADRP X21, 0x6F3000
	0x03CF4244 LDRB W8, [X21 + 0x784]
	0x03CF4248 MOV W19, W1
	0x03CF424C MOV X20, X0
	0x03CF4250 TBNZ X8, 0x0, 0x3CF4268
	0x03CF4254 ADRP X0, 0x403000
	0x03CF4258 LDR X0, [X0 + 0xB68]
	0x03CF425C BL 0x1C16CF4
	0x03CF4260 MOVZ W8, 0x1
	0x03CF4264 STRB W8, [X21 + 0x784]
	0x03CF4268 MOV X0, X20
	0x03CF426C BL 0x3CF1324
	0x03CF4270 CBZ X0, 0x3CF4298
	0x03CF4274 LDR X0, [X0 + 0x4B0]
	0x03CF4278 CBZ X0, 0x3CF4298
	0x03CF427C ADRP X8, 0x403000
	0x03CF4280 LDR X8, [X8 + 0xB68]
	0x03CF4284 MOV W1, W19
	0x03CF4288 LDP X20, X19, [X31 + 0x10]
	0x03CF428C LDR X2, [X8]
	0x03CF4290 LDP X30, X21, [X31], #0x20
	0x03CF4294 B 0x2FDCA84
	0x03CF4298 BL 0x1C16F20
	0x03CF429C SUB X31, X31, 0xE0
	0x03CF42A0 STP X29, X30, [X31 + 0x80]
	0x03CF42A4 STP X28, X27, [X31 + 0x90]
	0x03CF42A8 STP X26, X25, [X31 + 0xA0]
	0x03CF42AC STP X24, X23, [X31 + 0xB0]
	0x03CF42B0 STP X22, X21, [X31 + 0xC0]
	0x03CF42B4 STP X20, X19, [X31 + 0xD0]
	0x03CF42B8 ADRP X24, 0x6F3000
	0x03CF42BC ADRP X19, 0x46E000
	0x03CF42C0 LDRB W8, [X24 + 0x78B]
	0x03CF42C4 LDR X19, [X19 + 0xB98]
	0x03CF42C8 MOV X21, X3
	0x03CF42CC MOV W22, W2
	0x03CF42D0 MOV X20, X1
	0x03CF42D4 MOV X23, X0
	0x03CF42D8 TBNZ X8, 0x0, 0x3CF4350
	0x03CF42DC ADRP X0, 0x46E000
	0x03CF42E0 LDR X0, [X0 + 0xB98]
	0x03CF42E4 BL 0x1C16CF4
	0x03CF42E8 ADRP X0, 0x46E000
	0x03CF42EC LDR X0, [X0 + 0xBA8]
	0x03CF42F0 BL 0x1C16CF4
	0x03CF42F4 ADRP X0, 0x401000
	0x03CF42F8 LDR X0, [X0 + 0x9D8]
	0x03CF42FC BL 0x1C16CF4
	0x03CF4300 ADRP X0, 0x3FF000
	0x03CF4304 LDR X0, [X0 + 0xE00]
	0x03CF4308 BL 0x1C16CF4
	0x03CF430C ADRP X0, 0x427000
	0x03CF4310 LDR X0, [X0 + 0x7B8]
	0x03CF4314 BL 0x1C16CF4
	0x03CF4318 ADRP X0, 0x427000
	0x03CF431C LDR X0, [X0 + 0x7C0]
	0x03CF4320 BL 0x1C16CF4
	0x03CF4324 ADRP X0, 0x3FF000
	0x03CF4328 LDR X0, [X0 + 0xE18]
	0x03CF432C BL 0x1C16CF4
	0x03CF4330 ADRP X0, 0x46E000
	0x03CF4334 LDR X0, [X0 + 0xBB8]
	0x03CF4338 BL 0x1C16CF4
	0x03CF433C ADRP X0, 0x403000
	0x03CF4340 LDR X0, [X0 + 0xB68]
	0x03CF4344 BL 0x1C16CF4
	0x03CF4348 MOVZ W8, 0x1
	0x03CF434C STRB W8, [X24 + 0x78B]
	0x03CF4350 LDR X0, [X19]
	0x03CF4354 STP X31, X31, [X31 + 0x30]
	0x03CF4358 STP X31, X31, [X31 + 0x18]
	0x03CF435C STR X31, [X31 + 0x28]
	0x03CF4360 LDR W8, [X0 + 0xE0]
	0x03CF4364 CBNZ W8, 0x3CF4370
	0x03CF4368 BL 0x1C16DFC
	0x03CF436C LDR X0, [X19]
	0x03CF4370 LDR X8, [X0 + 0xB8]
	0x03CF4374 MOV X1, X31
	0x03CF4378 MOV X2, X31
	0x03CF437C LDR X19, [X8 + 0x8]
	0x03CF4380 MOV X0, X19
	0x03CF4384 BL 0x33C5D2C
	0x03CF4388 TBZ X0, 0x0, 0x3CF4398
	0x03CF438C MOV X0, X19
	0x03CF4390 MOV X1, X31
	0x03CF4394 BL 0x3BFE970
	0x03CF4398 CBZ X20, 0x3CF46F0
	0x03CF439C LDR X8, [X21]
	0x03CF43A0 CBZ X8, 0x3CF46EC
	0x03CF43A4 LDR X8, [X23 + 0x48]
	0x03CF43A8 CBZ X8, 0x3CF46EC
	0x03CF43AC ADRP X10, 0x427000
	0x03CF43B0 LDR X8, [X20]
	0x03CF43B4 LDR X10, [X10 + 0x7B8]
	0x03CF43B8 LDRH W9, [X8 + 0x12E]
	0x03CF43BC LDR X1, [X10]
	0x03CF43C0 CBZ X9, 0x3CF43E4
	0x03CF43C4 LDR X10, [X8 + 0xB0]
	0x03CF43C8 ADD X10, X10, 0x8
	0x03CF43CC LDUR X11, [X10 - 0x8]
	0x03CF43D0 CMP X11, X1
	0x03CF43D4 B.EQ 0x3CF43F4
	0x03CF43D8 SUBS X9, X9, 0x1
	0x03CF43DC ADD X10, X10, 0x10
	0x03CF43E0 B.NE 0x3CF43CC
	0x03CF43E4 MOV X0, X20
	0x03CF43E8 MOV W2, W31
	0x03CF43EC BL 0x1C5C788
	0x03CF43F0 B 0x3CF4400
	0x03CF43F4 LDRSW X9, [X10]
	0x03CF43F8 ADD X8, X8, X9, 0x4, LSL
	0x03CF43FC ADD X0, X8, 0x138
	0x03CF4400 LDP X8, X1, [X0]
	0x03CF4404 MOV X0, X20
	0x03CF4408 BLR X8
	0x03CF440C MOV X20, X0
	0x03CF4410 CBZ X0, 0x3CF4740
	0x03CF4414 ADRP X27, 0x3FF000
	0x03CF4418 ADRP X28, 0x427000
	0x03CF441C ADRP X29, 0x46E000
	0x03CF4420 LDR X27, [X27 + 0xE18]
	0x03CF4424 LDR X28, [X28 + 0x7C0]
	0x03CF4428 LDR X29, [X29 + 0xBA8]
	0x03CF442C MOV X26, X31
	0x03CF4430 ADD W24, W22, 0x1
	0x03CF4434 LDR X8, [X20]
	0x03CF4438 LDR X1, [X27]
	0x03CF443C LDRH W9, [X8 + 0x12E]
	0x03CF4440 CBZ X9, 0x3CF4464
	0x03CF4444 LDR X10, [X8 + 0xB0]
	0x03CF4448 ADD X10, X10, 0x8
	0x03CF444C LDUR X11, [X10 - 0x8]
	0x03CF4450 CMP X11, X1
	0x03CF4454 B.EQ 0x3CF4474
	0x03CF4458 SUBS X9, X9, 0x1
	0x03CF445C ADD X10, X10, 0x10
	0x03CF4460 B.NE 0x3CF444C
	0x03CF4464 MOV X0, X20
	0x03CF4468 MOV W2, W31
	0x03CF446C BL 0x1C5C788
	0x03CF4470 B 0x3CF4480
	0x03CF4474 LDRSW X9, [X10]
	0x03CF4478 ADD X8, X8, X9, 0x4, LSL
	0x03CF447C ADD X0, X8, 0x138
	0x03CF4480 LDP X8, X1, [X0]
	0x03CF4484 MOV X0, X20
	0x03CF4488 BLR X8
	0x03CF448C TBZ X0, 0x0, 0x3CF4680
	0x03CF4490 LDR X8, [X20]
	0x03CF4494 LDR X1, [X28]
	0x03CF4498 LDRH W9, [X8 + 0x12E]
	0x03CF449C CBZ X9, 0x3CF44C0
	0x03CF44A0 LDR X10, [X8 + 0xB0]
	0x03CF44A4 ADD X10, X10, 0x8
	0x03CF44A8 LDUR X11, [X10 - 0x8]
	0x03CF44AC CMP X11, X1
	0x03CF44B0 B.EQ 0x3CF44D0
	0x03CF44B4 SUBS X9, X9, 0x1
	0x03CF44B8 ADD X10, X10, 0x10
	0x03CF44BC B.NE 0x3CF44A8
	0x03CF44C0 MOV X0, X20
	0x03CF44C4 MOV W2, W31
	0x03CF44C8 BL 0x1C5C788
	0x03CF44CC B 0x3CF44DC
	0x03CF44D0 LDRSW X9, [X10]
	0x03CF44D4 ADD X8, X8, X9, 0x4, LSL
	0x03CF44D8 ADD X0, X8, 0x138
	0x03CF44DC LDP X8, X1, [X0]
	0x03CF44E0 MOV X0, X20
	0x03CF44E4 BLR X8
	0x03CF44E8 MOV W25, W0
	0x03CF44EC LDR X0, [X23 + 0x30]
	0x03CF44F0 CBZ X0, 0x3CF4734
	0x03CF44F4 LDR X3, [X29]
	0x03CF44F8 ADD X2, X31, 0x30
	0x03CF44FC MOV W1, W25
	0x03CF4500 BL 0x2A2163C
	0x03CF4504 TBZ X0, 0x0, 0x3CF4434
	0x03CF4508 LDP X1, X2, [X31 + 0x30]
	0x03CF450C ADD X0, X31, 0x18
	0x03CF4510 MOV W3, W22
	0x03CF4514 MOV X4, X31
	0x03CF4518 BL 0x3D87980
	0x03CF451C LDR X0, [X21]
	0x03CF4520 LDUR V0, [X31 + 0x18]
	0x03CF4524 LDR X8, [X31 + 0x28]
	0x03CF4528 STR V0, [X31]
	0x03CF452C STR X8, [X31 + 0x10]
	0x03CF4530 CBZ X0, 0x3CF4754
	0x03CF4534 LDR V0, [X31]
	0x03CF4538 LDR X8, [X31 + 0x10]
	0x03CF453C ADRP X10, 0x46E000
	0x03CF4540 STR V0, [X31 + 0x4]
	0x03CF4544 STR X8, [X31 + 0x50]
	0x03CF4548 LDR W9, [X0 + 0x1C]
	0x03CF454C LDR X8, [X0 + 0x10]
	0x03CF4550 LDR X10, [X10 + 0xBB8]
	0x03CF4554 ADD W9, W9, 0x1
	0x03CF4558 LDR X10, [X10]
	0x03CF455C STR W9, [X0 + 0x1C]
	0x03CF4560 CBZ X8, 0x3CF4750
	0x03CF4564 LDRSW X9, [X0 + 0x18]
	0x03CF4568 LDR W11, [X8 + 0x18]
	0x03CF456C CMP W9, W11
	0x03CF4570 B.CS 0x3CF4598
	0x03CF4574 ADD W10, W9, 0x1
	0x03CF4578 STR W10, [X0 + 0x18]
	0x03CF457C LDR X10, [X31 + 0x50]
	0x03CF4580 LDR V0, [X31 + 0x4]
	0x03CF4584 MOVZ W11, 0x18
	0x03CF4588 MADD X8, X9, X11, X8
	0x03CF458C STR X10, [X8 + 0x30]
	0x03CF4590 STR V0, [X8 + 0x2]
	0x03CF4594 B 0x3CF45BC
	0x03CF4598 LDR X8, [X10 + 0x20]
	0x03CF459C LDR V0, [X31 + 0x4]
	0x03CF45A0 LDR X9, [X31 + 0x50]
	0x03CF45A4 LDR X8, [X8 + 0xC0]
	0x03CF45A8 LDR X2, [X8 + 0x70]
	0x03CF45AC STR V0, [X31 + 0x6]
	0x03CF45B0 STR X9, [X31 + 0x70]
	0x03CF45B4 ADD X1, X31, 0x60
	0x03CF45B8 BL 0x3087660
	0x03CF45BC LDR X0, [X23 + 0x48]
	0x03CF45C0 CBZ X0, 0x3CF474C
	0x03CF45C4 ADRP X8, 0x401000
	0x03CF45C8 LDR X8, [X8 + 0x9D8]
	0x03CF45CC LDR X2, [X8]
	0x03CF45D0 MOV W1, W25
	0x03CF45D4 BL 0x2DAB03C
	0x03CF45D8 MOV X0, X23
	0x03CF45DC BL 0x3CF1324
	0x03CF45E0 CMP X0, 0x0
	0x03CF45E4 CSEL X26, X26, X0, EQ
	0x03CF45E8 CBZ X0, 0x3CF4434
	0x03CF45EC CBZ X26, 0x3CF4758
	0x03CF45F0 LDR X8, [X26 + 0x4B0]
	0x03CF45F4 CBZ X8, 0x3CF4434
	0x03CF45F8 MOV X0, X23
	0x03CF45FC BL 0x3CF1324
	0x03CF4600 CBZ X0, 0x3CF475C
	0x03CF4604 LDR X25, [X0 + 0x4B0]
	0x03CF4608 ADD X0, X31, 0x18
	0x03CF460C MOV X1, X31
	0x03CF4610 BL 0x3D8796C
	0x03CF4614 MOV W1, W0
	0x03CF4618 CBZ X25, 0x3CF4760
	0x03CF461C ADRP X8, 0x403000
	0x03CF4620 LDR X8, [X8 + 0xB68]
	0x03CF4624 LDR X2, [X8]
	0x03CF4628 MOV X0, X25
	0x03CF462C BL 0x2FDCA84
	0x03CF4630 TBZ X0, 0x0, 0x3CF4434
	0x03CF4634 ADD X0, X31, 0x18
	0x03CF4638 MOV X1, X31
	0x03CF463C BL 0x3D8797C
	0x03CF4640 TBZ X0, 0x0, 0x3CF4434
	0x03CF4644 ADD X0, X31, 0x18
	0x03CF4648 MOV X1, X31
	0x03CF464C BL 0x3D8796C
	0x03CF4650 MOV W1, W0
	0x03CF4654 LDR X8, [X23]
	0x03CF4658 LDR X9, [X8 + 0x2B8]
	0x03CF465C LDR X2, [X8 + 0x2C0]
	0x03CF4660 MOV X0, X23
	0x03CF4664 BLR X9
	0x03CF4668 MOV X1, X0
	0x03CF466C MOV X0, X23
	0x03CF4670 MOV W2, W24
	0x03CF4674 MOV X3, X21
	0x03CF4678 BL 0x3CF429C
	0x03CF467C B 0x3CF4434
	0x03CF4680 MOV X23, X31
	0x03CF4684 CBZ X20, 0x3CF46E8
	0x03CF4688 ADRP X10, 0x3FF000
	0x03CF468C LDR X8, [X20]
	0x03CF4690 LDR X10, [X10 + 0xE00]
	0x03CF4694 LDRH W9, [X8 + 0x12E]
	0x03CF4698 LDR X1, [X10]
	0x03CF469C CBZ X9, 0x3CF46C0
	0x03CF46A0 LDR X10, [X8 + 0xB0]
	0x03CF46A4 ADD X10, X10, 0x8
	0x03CF46A8 LDUR X11, [X10 - 0x8]
	0x03CF46AC CMP X11, X1
	0x03CF46B0 B.EQ 0x3CF46D0
	0x03CF46B4 SUBS X9, X9, 0x1
	0x03CF46B8 ADD X10, X10, 0x10
	0x03CF46BC B.NE 0x3CF46A8
	0x03CF46C0 MOV X0, X20
	0x03CF46C4 MOV W2, W31
	0x03CF46C8 BL 0x1C5C788
	0x03CF46CC B 0x3CF46DC
	0x03CF46D0 LDRSW X9, [X10]
	0x03CF46D4 ADD X8, X8, X9, 0x4, LSL
	0x03CF46D8 ADD X0, X8, 0x138
	0x03CF46DC LDP X8, X1, [X0]
	0x03CF46E0 MOV X0, X20
	0x03CF46E4 BLR X8
	0x03CF46E8 CBNZ X23, 0x3CF4744
	0x03CF46EC MOV X20, X31
	0x03CF46F0 MOV X0, X19
	0x03CF46F4 MOV X1, X31
	0x03CF46F8 MOV X2, X31
	0x03CF46FC BL 0x33C5D2C
	0x03CF4700 TBZ X0, 0x0, 0x3CF4710
	0x03CF4704 MOV X0, X19
	0x03CF4708 MOV X1, X31
	0x03CF470C BL 0x3BFEA0C
	0x03CF4710 CBNZ X20, 0x3CF4738
	0x03CF4714 LDP X20, X19, [X31 + 0xD0]
	0x03CF4718 LDP X22, X21, [X31 + 0xC0]
	0x03CF471C LDP X24, X23, [X31 + 0xB0]
	0x03CF4720 LDP X26, X25, [X31 + 0xA0]
	0x03CF4724 LDP X28, X27, [X31 + 0x90]
	0x03CF4728 LDP X29, X30, [X31 + 0x80]
	0x03CF472C ADD X31, X31, 0xE0
	0x03CF4730 RET
	0x03CF4734 BL 0x1C16F20
	0x03CF4738 MOV X0, X20
	0x03CF473C BL 0x1C16F18
	0x03CF4740 BL 0x1C16F20
	0x03CF4744 MOV X0, X23
	0x03CF4748 BL 0x1C16F18
	0x03CF474C BL 0x1C16F20
	0x03CF4750 BL 0x1C16F20
	0x03CF4754 BL 0x1C16F20
	0x03CF4758 BL 0x1C16F20
	0x03CF475C BL 0x1C16F20
	0x03CF4760 BL 0x1C16F20
	0x03CF4764 B 0x3CF47C4
	0x03CF4768 B 0x3CF47C4
	0x03CF476C B 0x3CF47C4
	0x03CF4770 B 0x3CF47C4
	0x03CF4774 B 0x3CF47C4
	0x03CF4778 B 0x3CF47C4
	0x03CF477C B 0x3CF47C4
	0x03CF4780 B 0x3CF47C4
	0x03CF4784 B 0x3CF47C4
	0x03CF4788 B 0x3CF47C4
	0x03CF478C B 0x3CF47C4
	0x03CF4790 B 0x3CF47C4
	0x03CF4794 B 0x3CF47C4
	0x03CF4798 B 0x3CF47C4
	0x03CF479C B 0x3CF47C4
	0x03CF47A0 B 0x3CF47C4
	0x03CF47A4 B 0x3CF47AC
	0x03CF47A8 B 0x3CF47C4
	0x03CF47AC MOV X22, X1
	0x03CF47B0 MOV X21, X0
	0x03CF47B4 B 0x3CF4854
	0x03CF47B8 B 0x3CF47C4
	0x03CF47BC B 0x3CF47C4
	0x03CF47C0 B 0x3CF47C4
	0x03CF47C4 MOV X22, X1
	0x03CF47C8 MOV X21, X0
	0x03CF47CC CMP W22, 0x1
	0x03CF47D0 B.NE 0x3CF47E8
	0x03CF47D4 MOV X0, X21
	0x03CF47D8 BL 0x3EB1AD0
	0x03CF47DC LDR X23, [X0]
	0x03CF47E0 BL 0x3EB1AE0
	0x03CF47E4 B 0x3CF4684
	0x03CF47E8 MOV X23, X31
	0x03CF47EC CBZ X20, 0x3CF4850
	0x03CF47F0 ADRP X10, 0x3FF000
	0x03CF47F4 LDR X8, [X20]
	0x03CF47F8 LDR X10, [X10 + 0xE00]
	0x03CF47FC LDRH W9, [X8 + 0x12E]
	0x03CF4800 LDR X1, [X10]
	0x03CF4804 CBZ X9, 0x3CF4828
	0x03CF4808 LDR X10, [X8 + 0xB0]
	0x03CF480C ADD X10, X10, 0x8
	0x03CF4810 LDUR X11, [X10 - 0x8]
	0x03CF4814 CMP X11, X1
	0x03CF4818 B.EQ 0x3CF4838
	0x03CF481C SUBS X9, X9, 0x1
	0x03CF4820 ADD X10, X10, 0x10
	0x03CF4824 B.NE 0x3CF4810
	0x03CF4828 MOV X0, X20
	0x03CF482C MOV W2, W31
	0x03CF4830 BL 0x1C5C788
	0x03CF4834 B 0x3CF4844
	0x03CF4838 LDRSW X9, [X10]
	0x03CF483C ADD X8, X8, X9, 0x4, LSL
	0x03CF4840 ADD X0, X8, 0x138
	0x03CF4844 LDP X8, X1, [X0]
	0x03CF4848 MOV X0, X20
	0x03CF484C BLR X8
	0x03CF4850 CBNZ X23, 0x3CF4878
	0x03CF4854 CMP W22, 0x1
	0x03CF4858 B.NE 0x3CF4870
	0x03CF485C MOV X0, X21
	0x03CF4860 BL 0x3EB1AD0
	0x03CF4864 LDR X20, [X0]
	0x03CF4868 BL 0x3EB1AE0
	0x03CF486C B 0x3CF46F0
	0x03CF4870 MOV X20, X31
	0x03CF4874 B 0x3CF4894
	0x03CF4878 MOV X0, X23
	0x03CF487C BL 0x1C16F18
	0x03CF4880 MOV X22, X1
	0x03CF4884 MOV X21, X0
	0x03CF4888 CBNZ X20, 0x3CF47F0
	0x03CF488C B 0x3CF4850
	0x03CF4890 MOV X21, X0
	0x03CF4894 MOV X0, X19
	0x03CF4898 MOV X1, X31
	0x03CF489C MOV X2, X31
	0x03CF48A0 BL 0x33C5D2C
	0x03CF48A4 TBZ X0, 0x0, 0x3CF48B4
	0x03CF48A8 MOV X0, X19
	0x03CF48AC MOV X1, X31
	0x03CF48B0 BL 0x3BFEA0C
	0x03CF48B4 CBNZ X20, 0x3CF48C0
	0x03CF48B8 MOV X0, X21
	0x03CF48BC BL 0x1D2C690
	0x03CF48C0 MOV X0, X20
	0x03CF48C4 BL 0x1C16F18
	0x03CF48C8 BL 0x1990590
	0x03CF48CC SUB X31, X31, 0x80
	0x03CF48D0 STR X30, [X31 + 0x40]
	0x03CF48D4 STP X24, X23, [X31 + 0x50]
	0x03CF48D8 STP X22, X21, [X31 + 0x60]
	0x03CF48DC STP X20, X19, [X31 + 0x70]
	0x03CF48E0 ADRP X23, 0x6F3000
	0x03CF48E4 LDRB W8, [X23 + 0x787]
	0x03CF48E8 MOV W21, W3
	0x03CF48EC MOV W22, W2
	0x03CF48F0 MOV W19, W1
	0x03CF48F4 MOV X20, X0
	0x03CF48F8 TBNZ X8, 0x0, 0x3CF4934
	0x03CF48FC ADRP X0, 0x400000
	0x03CF4900 LDR X0, [X0 + 0xE10]
	0x03CF4904 BL 0x1C16CF4
	0x03CF4908 ADRP X0, 0x403000
	0x03CF490C LDR X0, [X0 + 0xB68]
	0x03CF4910 BL 0x1C16CF4
	0x03CF4914 ADRP X0, 0x46E000
	0x03CF4918 LDR X0, [X0 + 0xB90]
	0x03CF491C BL 0x1C16CF4
	0x03CF4920 ADRP X0, 0x46E000
	0x03CF4924 LDR X0, [X0 + 0xB68]
	0x03CF4928 BL 0x1C16CF4
	0x03CF492C MOVZ W8, 0x1
	0x03CF4930 STRB W8, [X23 + 0x787]
	0x03CF4934 STP X31, X31, [X31 + 0x20]
	0x03CF4938 STR X31, [X31 + 0x30]
	0x03CF493C LDR X8, [X20]
	0x03CF4940 MOV X0, X20
	0x03CF4944 MOV W1, W19
	0x03CF4948 LDR X9, [X8 + 0x2D8]
	0x03CF494C LDR X2, [X8 + 0x2E0]
	0x03CF4950 BLR X9
	0x03CF4954 TBZ X0, 0x0, 0x3CF4A9C
	0x03CF4958 LDR X8, [X20]
	0x03CF495C MOV X0, X20
	0x03CF4960 MOV W1, W19
	0x03CF4964 LDR X9, [X8 + 0x2E8]
	0x03CF4968 LDR X2, [X8 + 0x2F0]
	0x03CF496C BLR X9
	0x03CF4970 TBZ X0, 0x0, 0x3CF4A9C
	0x03CF4974 LDR X0, [X20 + 0x40]
	0x03CF4978 CBZ X0, 0x3CF49E8
	0x03CF497C ADRP X24, 0x46E000
	0x03CF4980 LDR X24, [X24 + 0xB68]
	0x03CF4984 MOV W23, W31
	0x03CF4988 LDR W8, [X0 + 0x18]
	0x03CF498C CMP W23, W8
	0x03CF4990 B.GE 0x3CF49EC
	0x03CF4994 LDR X2, [X24]
	0x03CF4998 ADD X8, X31, 0x8
	0x03CF499C MOV W1, W23
	0x03CF49A0 BL 0x30872C4
	0x03CF49A4 LDUR V0, [X31 + 0x8]
	0x03CF49A8 LDR X8, [X31 + 0x18]
	0x03CF49AC ADD X0, X31, 0x20
	0x03CF49B0 MOV X1, X31
	0x03CF49B4 STR V0, [X31 + 0x2]
	0x03CF49B8 STR X8, [X31 + 0x30]
	0x03CF49BC BL 0x3D8796C
	0x03CF49C0 CMP W0, W19
	0x03CF49C4 B.NE 0x3CF49DC
	0x03CF49C8 TBNZ X22, 0x0, 0x3CF4A70
	0x03CF49CC MOV X0, X20
	0x03CF49D0 MOV W1, W23
	0x03CF49D4 BL 0x3CF1D70
	0x03CF49D8 TBZ X0, 0x0, 0x3CF4A70
	0x03CF49DC LDR X0, [X20 + 0x40]
	0x03CF49E0 ADD W23, W23, 0x1
	0x03CF49E4 CBNZ X0, 0x3CF4988
	0x03CF49E8 BL 0x1C16F20
	0x03CF49EC MOV X0, X20
	0x03CF49F0 BL 0x3CF1324
	0x03CF49F4 CBZ X0, 0x3CF49E8
	0x03CF49F8 LDR X0, [X0 + 0x4B0]
	0x03CF49FC CBZ X0, 0x3CF49E8
	0x03CF4A00 ADRP X8, 0x403000
	0x03CF4A04 LDR X8, [X8 + 0xB68]
	0x03CF4A08 MOV W1, W19
	0x03CF4A0C LDR X2, [X8]
	0x03CF4A10 BL 0x2FDCA84
	0x03CF4A14 TBNZ X0, 0x0, 0x3CF4A9C
	0x03CF4A18 MOV X0, X20
	0x03CF4A1C BL 0x3CF1324
	0x03CF4A20 CBZ X0, 0x3CF49E8
	0x03CF4A24 LDR X0, [X0 + 0x4B0]
	0x03CF4A28 CBZ X0, 0x3CF49E8
	0x03CF4A2C ADRP X9, 0x400000
	0x03CF4A30 LDR X9, [X9 + 0xE10]
	0x03CF4A34 LDR W10, [X0 + 0x1C]
	0x03CF4A38 LDR X8, [X0 + 0x10]
	0x03CF4A3C LDR X9, [X9]
	0x03CF4A40 ADD W10, W10, 0x1
	0x03CF4A44 STR W10, [X0 + 0x1C]
	0x03CF4A48 CBZ X8, 0x3CF49E8
	0x03CF4A4C LDRSW X10, [X0 + 0x18]
	0x03CF4A50 LDR W11, [X8 + 0x18]
	0x03CF4A54 CMP W10, W11
	0x03CF4A58 B.CS 0x3CF4A88
	0x03CF4A5C ADD W9, W10, 0x1
	0x03CF4A60 ADD X8, X8, X10, 0x2, LSL
	0x03CF4A64 STR W9, [X0 + 0x18]
	0x03CF4A68 STR W19, [X8 + 0x20]
	0x03CF4A6C B 0x3CF4A9C
	0x03CF4A70 AND W2, W22, 0x1
	0x03CF4A74 AND W3, W21, 0x1
	0x03CF4A78 MOV X0, X20
	0x03CF4A7C MOV W1, W23
	0x03CF4A80 BL 0x3CF3058
	0x03CF4A84 B 0x3CF4A9C
	0x03CF4A88 LDR X8, [X9 + 0x20]
	0x03CF4A8C MOV W1, W19
	0x03CF4A90 LDR X8, [X8 + 0xC0]
	0x03CF4A94 LDR X2, [X8 + 0x70]
	0x03CF4A98 BL 0x2FDC70C
	0x03CF4A9C LDP X20, X19, [X31 + 0x70]
	0x03CF4AA0 LDP X22, X21, [X31 + 0x60]
	0x03CF4AA4 LDP X24, X23, [X31 + 0x50]
	0x03CF4AA8 LDR X30, [X31 + 0x40]
	0x03CF4AAC ADD X31, X31, 0x80
	0x03CF4AB0 RET
	0x03CF4AB4 SUB X31, X31, 0x70
	0x03CF4AB8 STP X30, X23, [X31 + 0x40]
	0x03CF4ABC STP X22, X21, [X31 + 0x50]
	0x03CF4AC0 STP X20, X19, [X31 + 0x60]
	0x03CF4AC4 ADRP X22, 0x6F3000
	0x03CF4AC8 LDRB W8, [X22 + 0x789]
	0x03CF4ACC MOV W21, W2
	0x03CF4AD0 MOV W19, W1
	0x03CF4AD4 MOV X20, X0
	0x03CF4AD8 TBNZ X8, 0x0, 0x3CF4B14
	0x03CF4ADC ADRP X0, 0x403000
	0x03CF4AE0 LDR X0, [X0 + 0xB68]
	0x03CF4AE4 BL 0x1C16CF4
	0x03CF4AE8 ADRP X0, 0x429000
	0x03CF4AEC LDR X0, [X0 + 0x8C0]
	0x03CF4AF0 BL 0x1C16CF4
	0x03CF4AF4 ADRP X0, 0x46E000
	0x03CF4AF8 LDR X0, [X0 + 0xB90]
	0x03CF4AFC BL 0x1C16CF4
	0x03CF4B00 ADRP X0, 0x46E000
	0x03CF4B04 LDR X0, [X0 + 0xB68]
	0x03CF4B08 BL 0x1C16CF4
	0x03CF4B0C MOVZ W8, 0x1
	0x03CF4B10 STRB W8, [X22 + 0x789]
	0x03CF4B14 STP X31, X31, [X31 + 0x20]
	0x03CF4B18 STR X31, [X31 + 0x30]
	0x03CF4B1C LDR X8, [X20]
	0x03CF4B20 MOV X0, X20
	0x03CF4B24 MOV W1, W19
	0x03CF4B28 LDR X9, [X8 + 0x2E8]
	0x03CF4B2C LDR X2, [X8 + 0x2F0]
	0x03CF4B30 BLR X9
	0x03CF4B34 TBZ X0, 0x0, 0x3CF4C14
	0x03CF4B38 LDR X0, [X20 + 0x40]
	0x03CF4B3C CBZ X0, 0x3CF4B98
	0x03CF4B40 ADRP X23, 0x46E000
	0x03CF4B44 LDR X23, [X23 + 0xB68]
	0x03CF4B48 MOV W22, W31
	0x03CF4B4C LDR W8, [X0 + 0x18]
	0x03CF4B50 CMP W22, W8
	0x03CF4B54 B.GE 0x3CF4BC0
	0x03CF4B58 LDR X2, [X23]
	0x03CF4B5C ADD X8, X31, 0x8
	0x03CF4B60 MOV W1, W22
	0x03CF4B64 BL 0x30872C4
	0x03CF4B68 LDUR V0, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X21, 0x6F4000
	015 Move X19, 0x46F000
	016 Move W8, [X21+1926]
	017 Move X19, [X19+2968]
	018 Move W27, W3
	019 Move W22, W2
	020 Move W23, W1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {67}
	026 Move X0, 0x46F000
	027 Move X0, [X0+2968]
	028 Call 0x1C17CF4
	029 Move X0, 0x401000
	030 Move X0, [X0+3576]
	031 Call 0x1C17CF4
	032 Move X0, 0x400000
	033 Move X0, [X0+3584]
	034 Call 0x1C17CF4
	035 Move X0, 0x428000
	036 Move X0, [X0+1976]
	037 Call 0x1C17CF4
	038 Move X0, 0x428000
	039 Move X0, [X0+1984]
	040 Call 0x1C17CF4
	041 Move X0, 0x400000
	042 Move X0, [X0+3608]
	043 Call 0x1C17CF4
	044 Move X0, 0x401000
	045 Move X0, [X0+3600]
	046 Call 0x1C17CF4
	047 Move X0, 0x46F000
	048 Move X0, [X0+2856]
	049 Call 0x1C17CF4
	050 Move X0, 0x404000
	051 Move X0, [X0+2920]
	052 Call 0x1C17CF4
	053 Move X0, 0x46F000
	054 Move X0, [X0+2976]
	055 Call 0x1C17CF4
	056 Move X0, 0x404000
	057 Move X0, [X0+2928]
	058 Call 0x1C17CF4
	059 Move X0, 0x46F000
	060 Move X0, [X0+2920]
	061 Call 0x1C17CF4
	062 Move X0, 0x401000
	063 Move X0, [X0+3632]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X21+1926], W8
	067 Move X0, [X19]
	068 Move [X31+48], X31
	069 Move [X31+56], X31
	070 Move [X31+64], X31
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X19]
	076 Move X8, [X0+184]
	077 Move X1, X31
	078 Move X2, X31
	079 Move X19, [X8]
	080 Move X0, X19
	081 Call IntPtr.op_Inequality, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {89}
	086 Move X0, X19
	087 Move X1, X31
	088 Call ProfilerUnsafeUtility.BeginSample, X0
	089 Move X0, X20
	090 Move W1, W23
	091 Call BaseTreeViewController.HasChildrenByIndex, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {570}
	096 Move X8, [X20]
	097 Move X9, [X8+504]
	098 Move X2, [X8+512]
	099 Move X0, X20
	100 Move W1, W23
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move X8, [X20]
	103 Move W24, W0
	104 Move X9, [X8+744]
	105 Move X2, [X8+752]
	106 Move X0, X20
	107 Move W1, W24
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {570}
	113 Move X0, X20
	114 Call BaseTreeViewController.get_baseTreeView, X0
	115 Compare X0, 0
	116 JumpIfEqual {605}
	117 Move X0, [X0+1200]
	118 Compare X0, 0
	119 JumpIfEqual {606}
	120 Move X29, 0x404000
	121 Move X29, [X29+2920]
	122 Move X2, [X29]
	123 Move W1, W24
	124 Call List`1<Int32>.Contains, X0, X1
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {133}
	129 Move TEMP, X22
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {406}
	133 Move X0, X20
	134 Move W1, W23
	135 Move [X31+16], W27
	136 Call BaseTreeViewController.GetChildrenIdsByIndex, X0, X1
	137 Move X8, 0x401000
	138 Move X8, [X8+3632]
	139 Move X25, X0
	140 Move X0, [X8]
	141 Call 0x1C17F10
	142 Move X8, 0x404000
	143 Move X8, [X8+2928]
	144 Move X27, X0
	145 Move X1, [X8]
	146 Call List`1<Int32>..ctor, X0
	147 Compare X25, 0
	148 JumpIfEqual {607}
	149 Move X10, 0x428000
	150 Move X8, [X25]
	151 Move X10, [X10+1976]
	152 NotImplemented "Instruction LDRH not yet implemented."
	153 Move X1, [X10]
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X25
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X25
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Move X28, X0
	173 Move [X31+20], W24
	174 Move [X31+12], W22
	175 Compare X0, 0
	176 JumpIfEqual {608}
	177 Move X26, 0x400000
	178 Move X21, 0x428000
	179 Move X22, 0x401000
	180 Move X24, 0x401000
	181 Move X26, [X26+3608]
	182 Move X21, [X21+1984]
	183 Move X22, [X22+3576]
	184 Move X24, [X24+3600]
	185 Move X8, [X28]
	186 Move X1, [X26]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move X0, X28
	197 Move W2, W31
	198 Call 0x1C5D788
	199 NotImplemented "Instruction LDRSW not yet implemented."
	200 Add X8, X8, X9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X28
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {264}
	210 Move X8, [X28]
	211 Move X1, [X21]
	212 NotImplemented "Instruction LDRH not yet implemented."
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move X0, X28
	222 Move W2, W31
	223 Call 0x1C5D788
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Add X8, X8, X9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X1, [X0+8]
	229 Move X0, X28
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Move W25, W0
	232 Move X0, [X20+72]
	233 Compare X0, 0
	234 JumpIfEqual {598}
	235 Move X2, [X22]
	236 Move W1, W25
	237 Call HashSet`1<Int32>.Contains, X0, X1
	238 Move TEMP, X0
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfEqual {185}
	242 Compare X27, 0
	243 JumpIfEqual {601}
	244 Move W10, [X27+28]
	245 Move X8, [X27+16]
	246 Move X9, [X24]
	247 Add W10, W10, 1
	248 Move [X27+28], W10
	249 Compare X8, 0
	250 JumpIfEqual {602}
	251 NotImplemented "Instruction LDRSW not yet implemented."
	252 Move W11, [X8+24]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Add W9, W10, 1
	255 Add X8, X8, X10
	256 Move [X27+24], W9
	257 Move [X8+32], W25
	258 Move X8, [X9+32]
	259 Move X8, [X8+192]
	260 Move X2, [X8+112]
	261 Move X0, X27
	262 Move W1, W25
	263 Call List`1<Int32>.AddWithResize, X0, X1
	264 Move X25, X31
	265 Move W21, 9
	266 Move W24, [X31+20]
	267 Compare X28, 0
	268 JumpIfEqual {292}
	269 Move X10, 0x400000
	270 Move X8, [X28]
	271 Move X10, [X10+3584]
	272 NotImplemented "Instruction LDRH not yet implemented."
	273 Move X1, [X10]
	274 Compare X9, 0
	275 JumpIfEqual {282}
	276 Move X10, [X8+176]
	277 Add X10, X10, 8
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Subtract X9, X9, 1
	281 Add X10, X10, 16
	282 Move X0, X28
	283 Move W2, W31
	284 Call 0x1C5D788
	285 NotImplemented "Instruction LDRSW not yet implemented."
	286 Add X8, X8, X9
	287 Add X0, X8, 312
	288 Move X8, [X0]
	289 Move X1, [X0+8]
	290 Move X0, X28
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Compare X25, 0
	293 JumpIfNotEqual {609}
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Compare W21, 0
	296 JumpIfNotEqual {570}
	297 Move X0, X20
	298 Move W1, W24
	299 Call BaseTreeViewController.GetIndentationDepth, X0, X1
	300 Add X25, X20, 80
	301 Add W2, W0, 1
	302 Move X0, X20
	303 Move X1, X27
	304 Move X3, X25
	305 Call BaseTreeViewController.CreateWrappers, X0, X1, X2, X3
	306 Move X0, [X20+64]
	307 Move W27, [X31+16]
	308 Compare X0, 0
	309 JumpIfEqual {616}
	310 Move X8, 0x46F000
	311 Move X2, [X25]
	312 Move X8, [X8+2976]
	313 Add W1, W23, 1
	314 Move X3, [X8]
	315 Call List`1<TreeViewItemWrapper>.InsertRange, X0, X1, X2
	316 Move X0, X20
	317 Call BaseTreeViewController.get_baseTreeView, X0
	318 Compare X0, 0
	319 JumpIfEqual {617}
	320 Move X9, [X20+64]
	321 Compare X9, 0
	322 JumpIfEqual {618}
	323 Move X21, 0x46F000
	324 Move X26, [X0+1200]
	325 Move X21, [X21+2920]
	326 Move X2, [X21]
	327 Add X8, X31, 24
	328 Move X0, X9
	329 Move W1, W23
	330 Call List`1<TreeViewItemWrapper>.get_Item, X0, X1
	331 NotImplemented "Instruction LDUR not yet implemented."
	332 Move X8, [X31+40]
	333 Move [X31+3], V0
	334 Move [X31+64], X8
	335 Add X0, X31, 48
	336 Move X1, X31
	337 Call TreeViewItemWrapper.get_id, X0
	338 Move W1, W0
	339 Compare X26, 0
	340 JumpIfEqual {619}
	341 Move X2, [X29]
	342 Move X0, X26
	343 Call List`1<Int32>.Contains, X0, X1
	344 Move TEMP, X0
	345 And TEMP, TEMP, 1
	346 Compare TEMP, 1
	347 JumpIfEqual {392}
	348 Move X0, X20
	349 Call BaseTreeViewController.get_baseTreeView, X0
	350 Compare X0, 0
	351 JumpIfEqual {621}
	352 Move X9, [X20+64]
	353 Compare X9, 0
	354 JumpIfEqual {622}
	355 Move X26, [X0+1200]
	356 Move X2, [X21]
	357 Add X8, X31, 24
	358 Move X0, X9
	359 Move W1, W23
	360 Call List`1<TreeViewItemWrapper>.get_Item, X0, X1
	361 NotImplemented "Instruction LDUR not yet implemented."
	362 Move X8, [X31+40]
	363 Move [X31+3], V0
	364 Move [X31+64], X8
	365 Add X0, X31, 48
	366 Move X1, X31
	367 Call TreeViewItemWrapper.get_id, X0
	368 Move W1, W0
	369 Compare X26, 0
	370 JumpIfEqual {623}
	371 Move X9, 0x401000
	372 Move X9, [X9+3600]
	373 Move W10, [X26+28]
	374 Move X8, [X26+16]
	375 Move X9, [X9]
	376 Add W10, W10, 1
	377 Move [X26+28], W10
	378 Compare X8, 0
	379 JumpIfEqual {624}
	380 NotImplemented "Instruction LDRSW not yet implemented."
	381 Move W11, [X8+24]
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Add W9, W10, 1
	384 Add X8, X8, X10
	385 Move [X26+24], W9
	386 Move [X8+32], W1
	387 Move X8, [X9+32]
	388 Move X8, [X8+192]
	389 Move X2, [X8+112]
	390 Move X0, X26
	391 Call List`1<Int32>.AddWithResize, X0, X1
	392 Move X8, [X25]
	393 Compare X8, 0
	394 JumpIfEqual {620}
	395 Move W2, [X8+24]
	396 Move W9, [X8+28]
	397 Move W22, [X31+12]
	398 Add W9, W9, 1
	399 NotImplemented "Instruction CMP not yet implemented."
	400 Move [X8+24], W31
	401 Move [X8+28], W9
	402 Move X0, [X8+16]
	403 Move W1, W31
	404 Move X3, X31
	405 Call Array.Clear, X0, X1, X2
	406 Move TEMP, X22
	407 And TEMP, TEMP, 1
	408 Compare TEMP, 1
	409 JumpIfNotEqual {559}
	410 Move X8, [X20]
	411 Move X9, [X8+696]
	412 Move X2, [X8+704]
	413 Move X0, X20
	414 Move W1, W24
	415 NotImplemented "Instruction BLR not yet implemented."
	416 Move X1, X0
	417 Move X8, [X20]
	418 Move X9, [X8+664]
	419 Move X2, [X8+672]
	420 Move X0, X20
	421 NotImplemented "Instruction BLR not yet implemented."
	422 Move X22, X0
	423 Compare X0, 0
	424 JumpIfEqual {611}
	425 Move X10, 0x428000
	426 Move X8, [X22]
	427 Move X10, [X10+1976]
	428 NotImplemented "Instruction LDRH not yet implemented."
	429 Move X1, [X10]
	430 Compare X9, 0
	431 JumpIfEqual {438}
	432 Move X10, [X8+176]
	433 Add X10, X10, 8
	434 NotImplemented "Instruction LDUR not yet implemented."
	435 NotImplemented "Instruction CMP not yet implemented."
	436 Subtract X9, X9, 1
	437 Add X10, X10, 16
	438 Move X0, X22
	439 Move W2, W31
	440 Call 0x1C5D788
	441 NotImplemented "Instruction LDRSW not yet implemented."
	442 Add X8, X8, X9
	443 Add X0, X8, 312
	444 Move X8, [X0]
	445 Move X1, [X0+8]
	446 Move X0, X22
	447 NotImplemented "Instruction BLR not yet implemented."
	448 Move X22, X0
	449 Compare X0, 0
	450 JumpIfEqual {612}
	451 Move X21, 0x400000
	452 Move X24, 0x428000
	453 Move X21, [X21+3608]
	454 Move X24, [X24+1984]
	455 Move X8, [X22]
	456 Move X1, [X21]
	457 NotImplemented "Instruction LDRH not yet implemented."
	458 Compare X9, 0
	459 JumpIfEqual {466}
	460 Move X10, [X8+176]
	461 Add X10, X10, 8
	462 NotImplemented "Instruction LDUR not yet implemented."
	463 NotImplemented "Instruction CMP not yet implemented."
	464 Subtract X9, X9, 1
	465 Add X10, X10, 16
	466 Move X0, X22
	467 Move W2, W31
	468 Call 0x1C5D788
	469 NotImplemented "Instruction LDRSW not yet implemented."
	470 Add X8, X8, X9
	471 Add X0, X8, 312
	472 Move X8, [X0]
	473 Move X1, [X0+8]
	474 Move X0, X22
	475 NotImplemented "Instruction BLR not yet implemented."
	476 Move TEMP, X0
	477 And TEMP, TEMP, 1
	478 Compare TEMP, 1
	479 JumpIfNotEqual {527}
	480 Move X8, [X22]
	481 Move X1, [X24]
	482 NotImplemented "Instruction LDRH not yet implemented."
	483 Compare X9, 0
	484 JumpIfEqual {491}
	485 Move X10, [X8+176]
	486 Add X10, X10, 8
	487 NotImplemented "Instruction LDUR not yet implemented."
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Subtract X9, X9, 1
	490 Add X10, X10, 16
	491 Move X0, X22
	492 Move W2, W31
	493 Call 0x1C5D788
	494 NotImplemented "Instruction LDRSW not yet implemented."
	495 Add X8, X8, X9
	496 Add X0, X8, 312
	497 Move X8, [X0]
	498 Move X1, [X0+8]
	499 Move X0, X22
	500 NotImplemented "Instruction BLR not yet implemented."
	501 Move W23, W0
	502 Move X0, X20
	503 Call BaseTreeViewController.get_baseTreeView, X0
	504 Compare X0, 0
	505 JumpIfEqual {599}
	506 Move X0, [X0+1200]
	507 Compare X0, 0
	508 JumpIfEqual {600}
	509 Move X2, [X29]
	510 Move W1, W23
	511 Call List`1<Int32>.Contains, X0, X1
	512 Move TEMP, X0
	513 And TEMP, TEMP, 1
	514 Compare TEMP, 1
	515 JumpIfEqual {455}
	516 Move X8, [X20]
	517 Move X9, [X8+488]
	518 Move X2, [X8+496]
	519 Move X0, X20
	520 Move W1, W23
	521 NotImplemented "Instruction BLR not yet implemented."
	522 Move W1, W0
	523 Move W2, 1
	524 Move X0, X20
	525 Move W3, W31
	526 Call BaseTreeViewController.ExpandItemByIndex, X0, X1, X2, X3
	527 Move X23, X31
	528 Move W21, 14
	529 Compare X22, 0
	530 JumpIfEqual {554}
	531 Move X10, 0x400000
	532 Move X8, [X22]
	533 Move X10, [X10+3584]
	534 NotImplemented "Instruction LDRH not yet implemented."
	535 Move X1, [X10]
	536 Compare X9, 0
	537 JumpIfEqual {544}
	538 Move X10, [X8+176]
	539 Add X10, X10, 8
	540 NotImplemented "Instruction LDUR not yet implemented."
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Subtract X9, X9, 1
	543 Add X10, X10, 16
	544 Move X0, X22
	545 Move W2, W31
	546 Call 0x1C5D788
	547 NotImplemented "Instruction LDRSW not yet implemented."
	548 Add X8, X8, X9
	549 Add X0, X8, 312
	550 Move X8, [X0]
	551 Move X1, [X0+8]
	552 Move X0, X22
	553 NotImplemented "Instruction BLR not yet implemented."
	554 Compare X23, 0
	555 JumpIfNotEqual {613}
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Compare W21, 0
	558 JumpIfNotEqual {570}
	559 Move TEMP, X27
	560 And TEMP, TEMP, 1
	561 Compare TEMP, 1
	562 JumpIfNotEqual {570}
	563 Move X0, X20
	564 Call BaseTreeViewController.get_baseTreeView, X0
	565 Compare X0, 0
	566 JumpIfEqual {615}
	567 Move X1, X31
	568 Call BaseVerticalCollectionView.RefreshItems, X0
	569 Move X20, X31
	570 Move X20, X31
	571 Move X0, X19
	572 Move X1, X31
	573 Move X2, X31
	574 Call IntPtr.op_Inequality, X0, X1
	575 Move TEMP, X0
	576 And TEMP, TEMP, 1
	577 Compare TEMP, 1
	578 JumpIfNotEqual {582}
	579 Move X0, X19
	580 Move X1, X31
	581 Call ProfilerUnsafeUtility.EndSample, X0
	582 Compare X20, 0
	583 JumpIfNotEqual {603}
	584 Move X20, [X31+160]
	585 Move X19, [X31+168]
	586 Move X22, [X31+144]
	587 Move X21, [X31+152]
	588 Move X24, [X31+128]
	589 Move X23, [X31+136]
	590 Move X26, [X31+112]
	591 Move X25, [X31+120]
	592 Move X28, [X31+96]
	593 Move X27, [X31+104]
	594 Move X29, [X31+80]
	595 Move X30, [X31+88]
	596 Add X31, X31, 176
	597 Return 
	598 Call 0x1C17F20
	599 Call 0x1C17F20
	600 Call 0x1C17F20
	601 Call 0x1C17F20
	602 Call 0x1C17F20
	603 Move X0, X20
	604 Call 0x1C17F18
	605 Call 0x1C17F20
	606 Call 0x1C17F20
	607 Call 0x1C17F20
	608 Call 0x1C17F20
	609 Move X0, X25
	610 Call 0x1C17F18
	611 Call 0x1C17F20
	612 Call 0x1C17F20
	613 Move X0, X23
	614 Call 0x1C17F18
	615 Call 0x1C17F20
	616 Call 0x1C17F20
	617 Call 0x1C17F20
	618 Call 0x1C17F20
	619 Call 0x1C17F20
	620 Call 0x1C17F20
	621 Call 0x1C17F20
	622 Call 0x1C17F20
	623 Call 0x1C17F20
	624 Call 0x1C17F20
	625 Move X26, X1
	626 Move X21, X0
	627 Move X26, X1
	628 Move X21, X0
	629 NotImplemented "Instruction CMP not yet implemented."
	630 Move X0, X21
	631 Call 0x3EB2AD0
	632 Move X23, [X0]
	633 Call 0x3EB2AE0
	634 Move W21, W31
	635 Compare X22, 0
	636 JumpIfNotEqual {531}
	637 Move X23, X31
	638 Compare X22, 0
	639 JumpIfEqual {663}
	640 Move X10, 0x400000
	641 Move X8, [X22]
	642 Move X10, [X10+3584]
	643 NotImplemented "Instruction LDRH not yet implemented."
	644 Move X1, [X10]
	645 Compare X9, 0
	646 JumpIfEqual {653}
	647 Move X10, [X8+176]
	648 Add X10, X10, 8
	649 NotImplemented "Instruction LDUR not yet implemented."
	650 NotImplemented "Instruction CMP not yet implemented."
	651 Subtract X9, X9, 1
	652 Add X10, X10, 16
	653 Move X0, X22
	654 Move W2, W31
	655 Call 0x1C5D788
	656 NotImplemented "Instruction LDRSW not yet implemented."
	657 Add X8, X8, X9
	658 Add X0, X8, 312
	659 Move X8, [X0]
	660 Move X1, [X0+8]
	661 Move X0, X22
	662 NotImplemented "Instruction BLR not yet implemented."
	663 Compare X23, 0
	664 JumpIfEqual {707}
	665 Move X0, X23
	666 Call 0x1C17F18
	667 Move X26, X1
	668 Move X21, X0
	669 Compare X22, 0
	670 JumpIfNotEqual {640}
	671 Move X26, X1
	672 Move X21, X0
	673 NotImplemented "Instruction CMP not yet implemented."
	674 Move X0, X21
	675 Call 0x3EB2AD0
	676 Move X25, [X0]
	677 Call 0x3EB2AE0
	678 Move W21, W31
	679 Move X25, X31
	680 Compare X28, 0
	681 JumpIfEqual {705}
	682 Move X10, 0x400000
	683 Move X8, [X28]
	684 Move X10, [X10+3584]
	685 NotImplemented "Instruction LDRH not yet implemented."
	686 Move X1, [X10]
	687 Compare X9, 0
	688 JumpIfEqual {695}
	689 Move X10, [X8+176]
	690 Add X10, X10, 8
	691 NotImplemented "Instruction LDUR not yet implemented."
	692 NotImplemented "Instruction CMP not yet implemented."
	693 Subtract X9, X9, 1
	694 Add X10, X10, 16
	695 Move X0, X28
	696 Move W2, W31
	697 Call 0x1C5D788
	698 NotImplemented "Instruction LDRSW not yet implemented."
	699 Add X8, X8, X9
	700 Add X0, X8, 312
	701 Move X8, [X0]
	702 Move X1, [X0+8]
	703 Move X0, X28
	704 NotImplemented "Instruction BLR not yet implemented."
	705 Compare X25, 0
	706 JumpIfNotEqual {713}
	707 NotImplemented "Instruction CMP not yet implemented."
	708 Move X0, X21
	709 Call 0x3EB2AD0
	710 Move X20, [X0]
	711 Call 0x3EB2AE0
	712 Move X20, X31
	713 Move X0, X25
	714 Call 0x1C17F18
	715 Move X26, X1
	716 Move X21, X0
	717 Compare X28, 0
	718 JumpIfNotEqual {682}
	719 Move X21, X0
	720 Move X0, X19
	721 Move X1, X31
	722 Move X2, X31
	723 Call IntPtr.op_Inequality, X0, X1
	724 Move TEMP, X0
	725 And TEMP, TEMP, 1
	726 Compare TEMP, 1
	727 JumpIfNotEqual {731}
	728 Move X0, X19
	729 Move X1, X31
	730 Call ProfilerUnsafeUtility.EndSample, X0
	731 Compare X20, 0
	732 JumpIfNotEqual {735}
	733 Move X0, X21
	734 Call 0x1D2D690
	735 Move X0, X20
	736 Call 0x1C17F18
	737 Call 0x1991590

Method: System.Void ExpandItem(System.Int32 id, System.Boolean expandAllChildren, System.Boolean refresh = True)

Disassembly:
	0x03CF58CC LDR X8, [X0 + 0x548]
	0x03CF58D0 CBZ X8, 0x3CF58F4
	0x03CF58D4 LDR X4, [X8 + 0x18]
	0x03CF58D8 LDR X0, [X8 + 0x40]
	0x03CF58DC LDR X3, [X8 + 0x28]
	0x03CF58E0 MOV X1, X20
	0x03CF58E4 MOV W2, W19
	0x03CF58E8 LDP X20, X19, [X31 + 0x10]
	0x03CF58EC LDR X30, [X31], #0x20
	0x03CF58F0 BR X4
	0x03CF58F4 LDP X20, X19, [X31 + 0x10]
	0x03CF58F8 LDR X30, [X31], #0x20
	0x03CF58FC RET
	0x03CF5900 BL 0x1C16F20
	0x03CF5904 STP X30, X19, [X31 - 0x10]!
	0x03CF5908 MOV X19, X1
	0x03CF590C BL 0x3CF5554
	0x03CF5910 CBZ X0, 0x3CF593C
	0x03CF5914 LDR X8, [X0 + 0x550]
	0x03CF5918 CBZ X8, 0x3CF5934
	0x03CF591C LDR X3, [X8 + 0x18]
	0x03CF5920 LDR X0, [X8 + 0x40]
	0x03CF5924 LDR X2, [X8 + 0x28]
	0x03CF5928 MOV X1, X19
	0x03CF592C LDP X30, X19, [X31], #0x10
	0x03CF5930 BR X3
	0x03CF5934 LDP X30, X19, [X31], #0x10
	0x03CF5938 RET
	0x03CF593C BL 0x1C16F20
	0x03CF5940 MOV X1, X31
	0x03CF5944 B 0x33BDD8C
	0x03CF5948 LDR X0, [X0 + 0x48]
	0x03CF594C RET
	0x03CF5950 LDR X8, [X0 + 0x48]
	0x03CF5954 CBZ X8, 0x3CF5960
	0x03CF5958 LDR X0, [X8 + 0x30]
	0x03CF595C RET
	0x03CF5960 MOV X0, X31
	0x03CF5964 RET
	0x03CF5968 STR X30, [X31 - 0x40]!
	0x03CF596C STP X24, X23, [X31 + 0x10]
	0x03CF5970 STP X22, X21, [X31 + 0x20]
	0x03CF5974 STP X20, X19, [X31 + 0x30]
	0x03CF5978 ADRP X24, 0x6F2000
	0x03CF597C ADRP X23, 0x427000
	0x03CF5980 LDRB W8, [X24 + 0x79B]
	0x03CF5984 LDR X23, [X23 + 0x100]
	0x03CF5988 MOV X20, X3
	0x03CF598C MOV X21, X2
	0x03CF5990 MOV X22, X1
	0x03CF5994 MOV X19, X0
	0x03CF5998 TBNZ X8, 0x0, 0x3CF59B0
	0x03CF599C ADRP X0, 0x427000
	0x03CF59A0 LDR X0, [X0 + 0x100]
	0x03CF59A4 BL 0x1C16CF4
	0x03CF59A8 MOVZ W8, 0x1
	0x03CF59AC STRB W8, [X24 + 0x79B]
	0x03CF59B0 MOV X0, X19
	0x03CF59B4 MOV X1, X31
	0x03CF59B8 BL 0x33BDD8C
	0x03CF59BC LDR X0, [X23]
	0x03CF59C0 BL 0x1C16F10
	0x03CF59C4 MOV X1, X22
	0x03CF59C8 MOV X2, X21
	0x03CF59CC MOV X3, X20
	0x03CF59D0 MOV X4, X31
	0x03CF59D4 MOV X23, X0
	0x03CF59D8 BL 0x3D76478
	0x03CF59DC STR X23, [X19 + 0x48]
	0x03CF59E0 LDP X20, X19, [X31 + 0x30]
	0x03CF59E4 LDP X22, X21, [X31 + 0x20]
	0x03CF59E8 LDP X24, X23, [X31 + 0x10]
	0x03CF59EC LDR X30, [X31], #0x40
	0x03CF59F0 RET
	0x03CF59F4 STR X30, [X31 - 0x30]!
	0x03CF59F8 STP X22, X21, [X31 + 0x10]
	0x03CF59FC STP X20, X19, [X31 + 0x20]
	0x03CF5A00 ADRP X21, 0x6F2000
	0x03CF5A04 LDRB W8, [X21 + 0x79C]
	0x03CF5A08 MOV X19, X1
	0x03CF5A0C MOV X20, X0
	0x03CF5A10 TBNZ X8, 0x0, 0x3CF5A28
	0x03CF5A14 ADRP X0, 0x46D000
	0x03CF5A18 LDR X0, [X0 + 0xC38]
	0x03CF5A1C BL 0x1C16CF4
	0x03CF5A20 MOVZ W8, 0x1
	0x03CF5A24 STRB W8, [X21 + 0x79C]
	0x03CF5A28 CBZ X19, 0x3CF5A60
	0x03CF5A2C ADRP X8, 0x46D000
	0x03CF5A30 LDR X8, [X8 + 0xC38]
	0x03CF5A34 LDR X9, [X19]
	0x03CF5A38 LDR X8, [X8]
	0x03CF5A3C LDRB W11, [X9 + 0x130]
	0x03CF5A40 LDRB W10, [X8 + 0x130]
	0x03CF5A44 CMP W11, W10
	0x03CF5A48 B.CC 0x3CF5A60
	0x03CF5A4C LDR X9, [X9 + 0xC8]
	0x03CF5A50 ADD X9, X9, X10, 0x3, LSL
	0x03CF5A54 LDUR X9, [X9 - 0x8]
	0x03CF5A58 CMP X9, X8
	0x03CF5A5C B.EQ 0x3CF5A78
	0x03CF5A60 MOV X0, X20
	0x03CF5A64 MOV X1, X19
	0x03CF5A68 LDP X20, X19, [X31 + 0x20]
	0x03CF5A6C LDP X22, X21, [X31 + 0x10]
	0x03CF5A70 LDR X30, [X31], #0x30
	0x03CF5A74 B 0x3CEF1C4
	0x03CF5A78 LDR X8, [X20]
	0x03CF5A7C MOV X0, X20
	0x03CF5A80 LDR X9, [X8 + 0x258]
	0x03CF5A84 LDR X1, [X8 + 0x260]
	0x03CF5A88 BLR X9
	0x03CF5A8C LDR X8, [X20 + 0x48]
	0x03CF5A90 CBZ X8, 0x3CF5AE0
	0x03CF5A94 LDR X8, [X8 + 0x30]
	0x03CF5A98 CBZ X8, 0x3CF5AE0
	0x03CF5A9C LDR X22, [X8 + 0x420]
	0x03CF5AA0 MOV X21, X0
	0x03CF5AA4 MOV X0, X20
	0x03CF5AA8 BL 0x3CEF148
	0x03CF5AAC CBZ X0, 0x3CF5AE0
	0x03CF5AB0 LDR W8, [X0 + 0x520]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0x6F3000
	010 Move W8, [X23+1927]
	011 Move W21, W3
	012 Move W22, W2
	013 Move W19, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x400000
	020 Move X0, [X0+3600]
	021 Call 0x1C17CF4
	022 Move X0, 0x403000
	023 Move X0, [X0+2920]
	024 Call 0x1C17CF4
	025 Move X0, 0x46E000
	026 Move X0, [X0+2960]
	027 Call 0x1C17CF4
	028 Move X0, 0x46E000
	029 Move X0, [X0+2920]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+1927], W8
	033 Move [X31+32], X31
	034 Move [X31+40], X31
	035 Move [X31+48], X31
	036 Move X8, [X20]
	037 Move X0, X20
	038 Move W1, W19
	039 Move X9, [X8+728]
	040 Move X2, [X8+736]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {141}
	046 Move X8, [X20]
	047 Move X0, X20
	048 Move W1, W19
	049 Move X9, [X8+744]
	050 Move X2, [X8+752]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {141}
	056 Move X0, [X20+64]
	057 Compare X0, 0
	058 JumpIfEqual {91}
	059 Move X24, 0x46E000
	060 Move X24, [X24+2920]
	061 Move W23, W31
	062 Move W8, [X0+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X2, [X24]
	065 Add X8, X31, 8
	066 Move W1, W23
	067 Call List`1<TreeViewItemWrapper>.get_Item, X0, X1
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Move X8, [X31+24]
	070 Add X0, X31, 32
	071 Move X1, X31
	072 Move [X31+2], V0
	073 Move [X31+48], X8
	074 Call TreeViewItemWrapper.get_id, X0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move TEMP, X22
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfEqual {131}
	080 Move X0, X20
	081 Move W1, W23
	082 Call BaseTreeViewController.IsExpandedByIndex, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {131}
	087 Move X0, [X20+64]
	088 Add W23, W23, 1
	089 Compare X0, 0
	090 JumpIfNotEqual {62}
	091 Call 0x1C17F20
	092 Move X0, X20
	093 Call BaseTreeViewController.get_baseTreeView, X0
	094 Compare X0, 0
	095 JumpIfEqual {91}
	096 Move X0, [X0+1200]
	097 Compare X0, 0
	098 JumpIfEqual {91}
	099 Move X8, 0x403000
	100 Move X8, [X8+2920]
	101 Move W1, W19
	102 Move X2, [X8]
	103 Call List`1<Int32>.Contains, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {141}
	108 Move X0, X20
	109 Call BaseTreeViewController.get_baseTreeView, X0
	110 Compare X0, 0
	111 JumpIfEqual {91}
	112 Move X0, [X0+1200]
	113 Compare X0, 0
	114 JumpIfEqual {91}
	115 Move X9, 0x400000
	116 Move X9, [X9+3600]
	117 Move W10, [X0+28]
	118 Move X8, [X0+16]
	119 Move X9, [X9]
	120 Add W10, W10, 1
	121 Move [X0+28], W10
	122 Compare X8, 0
	123 JumpIfEqual {91}
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Move W11, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add W9, W10, 1
	128 Add X8, X8, X10
	129 Move [X0+24], W9
	130 Move [X8+32], W19
	131 And W2, W22, 1
	132 And W3, W21, 1
	133 Move X0, X20
	134 Move W1, W23
	135 Call BaseTreeViewController.ExpandItemByIndex, X0, X1, X2, X3
	136 Move X8, [X9+32]
	137 Move W1, W19
	138 Move X8, [X8+192]
	139 Move X2, [X8+112]
	140 Call List`1<Int32>.AddWithResize, X0, X1
	141 Move X20, [X31+112]
	142 Move X19, [X31+120]
	143 Move X22, [X31+96]
	144 Move X21, [X31+104]
	145 Move X24, [X31+80]
	146 Move X23, [X31+88]
	147 Move X30, [X31+64]
	148 Add X31, X31, 128
	149 Return 

Method: System.Void CollapseItemByIndex(System.Int32 index, System.Boolean collapseAllChildren)

Disassembly:
	0x03CF3B28 CBNZ X28, 0x3CF3A90
	0x03CF3B2C B 0x3CF3AF0
	0x03CF3B30 MOV X21, X0
	0x03CF3B34 MOV X0, X19
	0x03CF3B38 MOV X1, X31
	0x03CF3B3C MOV X2, X31
	0x03CF3B40 BL 0x33C5D2C
	0x03CF3B44 TBZ X0, 0x0, 0x3CF3B54
	0x03CF3B48 MOV X0, X19
	0x03CF3B4C MOV X1, X31
	0x03CF3B50 BL 0x3BFEA0C
	0x03CF3B54 CBNZ X20, 0x3CF3B60
	0x03CF3B58 MOV X0, X21
	0x03CF3B5C BL 0x1D2C690
	0x03CF3B60 MOV X0, X20
	0x03CF3B64 BL 0x1C16F18
	0x03CF3B68 BL 0x1990590
	0x03CF3B6C SUB X31, X31, 0x70
	0x03CF3B70 STR X30, [X31 + 0x40]
	0x03CF3B74 STP X22, X21, [X31 + 0x50]
	0x03CF3B78 STP X20, X19, [X31 + 0x60]
	0x03CF3B7C ADRP X21, 0x6F4000
	0x03CF3B80 LDRB W8, [X21 + 0x77D]
	0x03CF3B84 MOV W19, W1
	0x03CF3B88 MOV X20, X0
	0x03CF3B8C TBNZ X8, 0x0, 0x3CF3BBC
	0x03CF3B90 ADRP X0, 0x401000
	0x03CF3B94 LDR X0, [X0 + 0xDF8]
	0x03CF3B98 BL 0x1C16CF4
	0x03CF3B9C ADRP X0, 0x46F000
	0x03CF3BA0 LDR X0, [X0 + 0xB90]
	0x03CF3BA4 BL 0x1C16CF4
	0x03CF3BA8 ADRP X0, 0x46F000
	0x03CF3BAC LDR X0, [X0 + 0xB68]
	0x03CF3BB0 BL 0x1C16CF4
	0x03CF3BB4 MOVZ W8, 0x1
	0x03CF3BB8 STRB W8, [X21 + 0x77D]
	0x03CF3BBC STP X31, X31, [X31 + 0x20]
	0x03CF3BC0 STR X31, [X31 + 0x30]
	0x03CF3BC4 LDR X0, [X20 + 0x48]
	0x03CF3BC8 CBZ X0, 0x3CF3C44
	0x03CF3BCC ADRP X8, 0x401000
	0x03CF3BD0 LDR X8, [X8 + 0xDF8]
	0x03CF3BD4 MOV W1, W19
	0x03CF3BD8 LDR X2, [X8]
	0x03CF3BDC BL 0x2DAA59C
	0x03CF3BE0 TBZ X0, 0x0, 0x3CF3C48
	0x03CF3BE4 LDR X0, [X20 + 0x40]
	0x03CF3BE8 CBZ X0, 0x3CF3C44
	0x03CF3BEC ADRP X22, 0x46F000
	0x03CF3BF0 LDR X22, [X22 + 0xB68]
	0x03CF3BF4 MOV W21, W31
	0x03CF3BF8 LDR W8, [X0 + 0x18]
	0x03CF3BFC CMP W21, W8
	0x03CF3C00 B.GE 0x3CF3C48
	0x03CF3C04 LDR X2, [X22]
	0x03CF3C08 ADD X8, X31, 0x8
	0x03CF3C0C MOV W1, W21
	0x03CF3C10 BL 0x30872C4
	0x03CF3C14 LDUR V0, [X31 + 0x8]
	0x03CF3C18 LDR X8, [X31 + 0x18]
	0x03CF3C1C ADD X0, X31, 0x20
	0x03CF3C20 MOV X1, X31
	0x03CF3C24 STR V0, [X31 + 0x2]
	0x03CF3C28 STR X8, [X31 + 0x30]
	0x03CF3C2C BL 0x3D8796C
	0x03CF3C30 CMP W0, W19
	0x03CF3C34 B.EQ 0x3CF3C4C
	0x03CF3C38 LDR X0, [X20 + 0x40]
	0x03CF3C3C ADD W21, W21, 0x1
	0x03CF3C40 CBNZ X0, 0x3CF3BF8
	0x03CF3C44 BL 0x1C16F20
	0x03CF3C48 MOVN W21, 0x0
	0x03CF3C4C MOV W0, W21
	0x03CF3C50 LDP X20, X19, [X31 + 0x60]
	0x03CF3C54 LDP X22, X21, [X31 + 0x50]
	0x03CF3C58 LDR X30, [X31 + 0x40]
	0x03CF3C5C ADD X31, X31, 0x70
	0x03CF3C60 RET
	0x03CF3C64 SUB X31, X31, 0x60
	0x03CF3C68 STP X30, X21, [X31 + 0x40]
	0x03CF3C6C STP X20, X19, [X31 + 0x50]
	0x03CF3C70 ADRP X21, 0x6F4000
	0x03CF3C74 LDRB W8, [X21 + 0x77E]
	0x03CF3C78 MOV W19, W1
	0x03CF3C7C MOV X20, X0
	0x03CF3C80 TBNZ X8, 0x0, 0x3CF3C98
	0x03CF3C84 ADRP X0, 0x46F000
	0x03CF3C88 LDR X0, [X0 + 0xB68]
	0x03CF3C8C BL 0x1C16CF4
	0x03CF3C90 MOVZ W8, 0x1
	0x03CF3C94 STRB W8, [X21 + 0x77E]
	0x03CF3C98 MOV X0, X20
	0x03CF3C9C MOV W1, W19
	0x03CF3CA0 STP X31, X31, [X31 + 0x20]
	0x03CF3CA4 STR X31, [X31 + 0x30]
	0x03CF3CA8 BL 0x3CF3D08
	0x03CF3CAC TBZ X0, 0x0, 0x3CF3CF0
	0x03CF3CB0 LDR X0, [X20 + 0x40]
	0x03CF3CB4 CBZ X0, 0x3CF3D04
	0x03CF3CB8 ADRP X8, 0x46F000
	0x03CF3CBC LDR X8, [X8 + 0xB68]
	0x03CF3CC0 MOV W1, W19
	0x03CF3CC4 LDR X2, [X8]
	0x03CF3CC8 ADD X8, X31, 0x8
	0x03CF3CCC BL 0x30872C4
	0x03CF3CD0 LDUR V0, [X31 + 0x8]
	0x03CF3CD4 LDR X8, [X31 + 0x18]
	0x03CF3CD8 ADD X0, X31, 0x20
	0x03CF3CDC MOV X1, X31
	0x03CF3CE0 STR V0, [X31 + 0x2]
	0x03CF3CE4 STR X8, [X31 + 0x30]
	0x03CF3CE8 BL 0x3D8796C
	0x03CF3CEC B 0x3CF3CF4
	0x03CF3CF0 MOVN W0, 0x0
	0x03CF3CF4 LDP X20, X19, [X31 + 0x50]
	0x03CF3CF8 LDP X30, X21, [X31 + 0x40]
	0x03CF3CFC ADD X31, X31, 0x60
	0x03CF3D00 RET
	0x03CF3D04 BL 0x1C16F20
	0x03CF3D08 STP X30, X21, [X31 - 0x20]!
	0x03CF3D0C STP X20, X19, [X31 + 0x10]
	0x03CF3D10 ADRP X21, 0x6F4000
	0x03CF3D14 LDRB W8, [X21 + 0x78C]
	0x03CF3D18 MOV W19, W1
	0x03CF3D1C MOV X20, X0
	0x03CF3D20 TBNZ X8, 0x0, 0x3CF3D38
	0x03CF3D24 ADRP X0, 0x46F000
	0x03CF3D28 LDR X0, [X0 + 0xB90]
	0x03CF3D2C BL 0x1C16CF4
	0x03CF3D30 MOVZ W8, 0x1
	0x03CF3D34 STRB W8, [X21 + 0x78C]
	0x03CF3D38 TBNZ X19, 0x1F, 0x3CF3D54
	0x03CF3D3C LDR X8, [X20 + 0x40]
	0x03CF3D40 CBZ X8, 0x3CF3D64
	0x03CF3D44 LDR W8, [X8 + 0x18]
	0x03CF3D48 CMP W8, W19
	0x03CF3D4C CSET W0, GT
	0x03CF3D50 B 0x3CF3D58
	0x03CF3D54 MOV W0, W31
	0x03CF3D58 LDP X20, X19, [X31 + 0x10]
	0x03CF3D5C LDP X30, X21, [X31], #0x20
	0x03CF3D60 RET
	0x03CF3D64 BL 0x1C16F20
	0x03CF3D68 SUB X31, X31, 0x30
	0x03CF3D6C STP X30, X21, [X31 + 0x10]
	0x03CF3D70 STP X20, X19, [X31 + 0x20]
	0x03CF3D74 ADRP X21, 0x6F4000
	0x03CF3D78 LDRB W8, [X21 + 0x77F]
	0x03CF3D7C MOV W19, W1
	0x03CF3D80 MOV X20, X0
	0x03CF3D84 TBNZ X8, 0x0, 0x3CF3D9C
	0x03CF3D88 ADRP X0, 0x46F000
	0x03CF3D8C LDR X0, [X0 + 0xBA8]
	0x03CF3D90 BL 0x1C16CF4
	0x03CF3D94 MOVZ W8, 0x1
	0x03CF3D98 STRB W8, [X21 + 0x77F]
	0x03CF3D9C STP X31, X31, [X31]
	0x03CF3DA0 LDR X0, [X20 + 0x30]
	0x03CF3DA4 CBZ X0, 0x3CF3DEC
	0x03CF3DA8 ADRP X8, 0x46F000
	0x03CF3DAC LDR X8, [X8 + 0xBA8]
	0x03CF3DB0 ADD X2, X31, 0x0
	0x03CF3DB4 MOV W1, W19
	0x03CF3DB8 LDR X3, [X8]
	0x03CF3DBC BL 0x2A2163C
	0x03CF3DC0 TBZ X0, 0x0, 0x3CF3DD4
	0x03CF3DC4 ADD X0, X31, 0x0
	0x03CF3DC8 MOV X1, X31
	0x03CF3DCC BL 0x3D87908
	0x03CF3DD0 B 0x3CF3DD8
	0x03CF3DD4 MOV W0, W31
	0x03CF3DD8 LDP X20, X19, [X31 + 0x20]
	0x03CF3DDC LDP X30, X21, [X31 + 0x10]
	0x03CF3DE0 AND W0, W0, 0x1
	0x03CF3DE4 ADD X31, X31, 0x30
	0x03CF3DE8 RET
	0x03CF3DEC BL 0x1C16F20
	0x03CF3DF0 STP X30, X21, [X31 - 0x20]!
	0x03CF3DF4 STP X20, X19, [X31 + 0x10]
	0x03CF3DF8 ADRP X21, 0x6F4000
	0x03CF3DFC LDRB W8, [X21 + 0x780]
	0x03CF3E00 MOV W19, W1
	0x03CF3E04 MOV X20, X0
	0x03CF3E08 TBNZ X8, 0x0, 0x3CF3E20
	0x03CF3E0C ADRP X0, 0x46F000
	0x03CF3E10 LDR X0, [X0 + 0xBB0]
	0x03CF3E14 BL 0x1C16CF4
	0x03CF3E18 MOVZ W8, 0x1
	0x03CF3E1C STRB W8, [X21 + 0x780]
	0x03CF3E20 LDR X0, [X20 + 0x30]
	0x03CF3E24 CBZ X0, 0x3CF3E44
	0x03CF3E28 ADRP X8, 0x46F000
	0x03CF3E2C LDR X8, [X8 + 0xBB0]
	0x03CF3E30 MOV W1, W19
	0x03CF3E34 LDP X20, X19, [X31 + 0x10]
	0x03CF3E38 LDR X2, [X8]
	0x03CF3E3C LDP X30, X21, [X31], #0x20
	0x03CF3E40 B 0x2A1FE70
	0x03CF3E44 BL 0x1C16F20
	0x03CF3E48 SUB X31, X31, 0x50
	0x03CF3E4C STP X30, X23, [X31 + 0x20]
	0x03CF3E50 STP X22, X21, [X31 + 0x30]
	0x03CF3E54 STP X20, X19, [X31 + 0x40]
	0x03CF3E58 ADRP X21, 0x6F4000
	0x03CF3E5C LDRB W8, [X21 + 0x783]
	0x03CF3E60 MOV W20, W1
	0x03CF3E64 MOV X19, X0
	0x03CF3E68 TBNZ X8, 0x0, 0x3CF3EB0
	0x03CF3E6C ADRP X0, 0x46F000
	0x03CF3E70 LDR X0, [X0 + 0xBA8]
	0x03CF3E74 BL 0x1C16CF4
	0x03CF3E78 ADRP X0, 0x400000
	0x03CF3E7C LDR X0, [X0 + 0xE00]
	0x03CF3E80 BL 0x1C16CF4
	0x03CF3E84 ADRP X0, 0x428000
	0x03CF3E88 LDR X0, [X0 + 0x7B8]
	0x03CF3E8C BL 0x1C16CF4
	0x03CF3E90 ADRP X0, 0x428000
	0x03CF3E94 LDR X0, [X0 + 0x7C0]
	0x03CF3E98 BL 0x1C16CF4
	0x03CF3E9C ADRP X0, 0x400000
	0x03CF3EA0 LDR X0, [X0 + 0xE18]
	0x03CF3EA4 BL 0x1C16CF4
	0x03CF3EA8 MOVZ W8, 0x1
	0x03CF3EAC STRB W8, [X21 + 0x783]
	0x03CF3EB0 STP X31, X31, [X31 + 0x10]
	0x03CF3EB4 STP X31, X31, [X31]
	0x03CF3EB8 LDR X0, [X19 + 0x30]
	0x03CF3EBC CBZ X0, 0x3CF40FC
	0x03CF3EC0 ADRP X21, 0x46F000
	0x03CF3EC4 LDR X21, [X21 + 0xBA8]
	0x03CF3EC8 ADD X2, X31, 0x10
	0x03CF3ECC MOV W1, W20
	0x03CF3ED0 LDR X3, [X21]
	0x03CF3ED4 BL 0x2A2163C
	0x03CF3ED8 TBZ X0, 0x0, 0x3CF40E0
	0x03CF3EDC LDR X0, [X19 + 0x30]
	0x03CF3EE0 CBZ X0, 0x3CF40FC
	0x03CF3EE4 LDR W1, [X31 + 0x14]
	0x03CF3EE8 LDR X3, [X21]
	0x03CF3EEC ADD X2, X31, 0x0
	0x03CF3EF0 ADD X21, X31, 0x0
	0x03CF3EF4 BL 0x2A2163C
	0x03CF3EF8 ADD X8, X19, 0x38
	0x03CF3EFC ADD X9, X21, 0x8
	0x03CF3F00 ANDS W31, W0, 0x1
	0x03CF3F04 CSEL X8, X9, X8, NE
	0x03CF3F08 LDR X19, [X8]
	0x03CF3F0C CBZ X19, 0x3CF40FC
	0x03CF3F10 ADRP X10, 0x428000
	0x03CF3F14 LDR X8, [X19]
	0x03CF3F18 LDR X10, [X10 + 0x7B8]
	0x03CF3F1C LDRH W9, [X8 + 0x12E]
	0x03CF3F20 LDR X1, [X10]
	0x03CF3F24 CBZ X9, 0x3CF3F48
	0x03CF3F28 LDR X10, [X8 + 0xB0]
	0x03CF3F2C ADD X10, X10, 0x8
	0x03CF3F30 LDUR X11, [X10 - 0x8]
	0x03CF3F34 CMP X11, X1
	0x03CF3F38 B.EQ 0x3CF3F58
	0x03CF3F3C SUBS X9, X9, 0x1
	0x03CF3F40 ADD X10, X10, 0x10
	0x03CF3F44 B.NE 0x3CF3F30
	0x03CF3F48 MOV X0, X19
	0x03CF3F4C MOV W2, W31
	0x03CF3F50 BL 0x1C5C788
	0x03CF3F54 B 0x3CF3F64
	0x03CF3F58 LDRSW X9, [X10]
	0x03CF3F5C ADD X8, X8, X9, 0x4, LSL
	0x03CF3F60 ADD X0, X8, 0x138
	0x03CF3F64 LDP X8, X1, [X0]
	0x03CF3F68 MOV X0, X19
	0x03CF3F6C BLR X8
	0x03CF3F70 MOV X19, X0
	0x03CF3F74 CBZ X0, 0x3CF4100
	0x03CF3F78 ADRP X22, 0x400000
	0x03CF3F7C ADRP X23, 0x428000
	0x03CF3F80 LDR X22, [X22 + 0xE18]
	0x03CF3F84 LDR X23, [X23 + 0x7C0]
	0x03CF3F88 MOV W21, W31
	0x03CF3F8C LDR X8, [X19]
	0x03CF3F90 LDR X1, [X22]
	0x03CF3F94 LDRH W9, [X8 + 0x12E]
	0x03CF3F98 CBZ X9, 0x3CF3FBC
	0x03CF3F9C LDR X10, [X8 + 0xB0]
	0x03CF3FA0 ADD X10, X10, 0x8
	0x03CF3FA4 LDUR X11, [X10 - 0x8]
	0x03CF3FA8 CMP X11, X1
	0x03CF3FAC B.EQ 0x3CF3FCC
	0x03CF3FB0 SUBS X9, X9, 0x1
	0x03CF3FB4 ADD X10, X10, 0x10
	0x03CF3FB8 B.NE 0x3CF3FA4
	0x03CF3FBC MOV X0, X19
	0x03CF3FC0 MOV W2, W31
	0x03CF3FC4 BL 0x1C5C788
	0x03CF3FC8 B 0x3CF3FD8
	0x03CF3FCC LDRSW X9, [X10]
	0x03CF3FD0 ADD X8, X8, X9, 0x4, LSL
	0x03CF3FD4 ADD X0, X8, 0x138
	0x03CF3FD8 LDP X8, X1, [X0]
	0x03CF3FDC MOV X0, X19
	0x03CF3FE0 BLR X8
	0x03CF3FE4 TBZ X0, 0x0, 0x3CF4050
	0x03CF3FE8 LDR X8, [X19]
	0x03CF3FEC LDR X1, [X23]
	0x03CF3FF0 LDRH W9, [X8 + 0x12E]
	0x03CF3FF4 CBZ X9, 0x3CF4018
	0x03CF3FF8 LDR X10, [X8 + 0xB0]
	0x03CF3FFC ADD X10, X10, 0x8
	0x03CF4000 LDUR X11, [X10 - 0x8]
	0x03CF4004 CMP X11, X1
	0x03CF4008 B.EQ 0x3CF4028
	0x03CF400C SUBS X9, X9, 0x1
	0x03CF4010 ADD X10, X10, 0x10
	0x03CF4014 B.NE 0x3CF4000
	0x03CF4018 MOV X0, X19
	0x03CF401C MOV W2, W31
	0x03CF4020 BL 0x1C5C788
	0x03CF4024 B 0x3CF4034
	0x03CF4028 LDRSW X9, [X10]
	0x03CF402C ADD X8, X8, X9, 0x4, LSL
	0x03CF4030 ADD X0, X8, 0x138
	0x03CF4034 LDP X8, X1, [X0]
	0x03CF4038 MOV X0, X19
	0x03CF403C BLR X8
	0x03CF4040 CMP W0, W20
	0x03CF4044 B.EQ 0x3CF4064
	0x03CF4048 ADD W21, W21, 0x1
	0x03CF404C B 0x3CF3F8C
	0x03CF4050 MOV X20, X31
	0x03CF4054 MOV W21, W31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X21, 0x6F5000
	012 Move W8, [X21+1928]
	013 Move W22, W2
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0x40E000
	021 Move X0, [X0+1440]
	022 Call 0x1C17CF4
	023 Move X0, 0x401000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0x429000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move X0, 0x429000
	030 Move X0, [X0+1984]
	031 Call 0x1C17CF4
	032 Move X0, 0x401000
	033 Move X0, [X0+3608]
	034 Call 0x1C17CF4
	035 Move X0, 0x470000
	036 Move X0, [X0+2952]
	037 Call 0x1C17CF4
	038 Move X0, 0x42B000
	039 Move X0, [X0+2240]
	040 Call 0x1C17CF4
	041 Move X0, 0x470000
	042 Move X0, [X0+2960]
	043 Call 0x1C17CF4
	044 Move X0, 0x470000
	045 Move X0, [X0+2920]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+1928], W8
	049 Move X0, X19
	050 Move W1, W20
	051 Move [X31+32], X31
	052 Move [X31+40], X31
	053 Move [X31+48], X31
	054 Call BaseTreeViewController.HasChildrenByIndex, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {301}
	059 Move X8, [X19]
	060 Move X0, X19
	061 Move W1, W20
	062 Move X9, [X8+504]
	063 Move X2, [X8+512]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, [X19]
	066 Move W21, W0
	067 Move X0, X19
	068 Move W1, W21
	069 Move X9, [X8+744]
	070 Move X2, [X8+752]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {301}
	076 Move TEMP, X22
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {212}
	080 Move X8, [X19]
	081 Move X0, X19
	082 Move W1, W21
	083 Move X9, [X8+696]
	084 Move X2, [X8+704]
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X8, [X19]
	087 Move X1, X0
	088 Move X0, X19
	089 Move X9, [X8+664]
	090 Move X2, [X8+672]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Compare X0, 0
	093 JumpIfEqual {256}
	094 Move X10, 0x429000
	095 Move X8, [X0]
	096 Move X10, [X10+1976]
	097 Move X22, X0
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move X1, [X10]
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move X0, X22
	109 Move W2, W31
	110 Call 0x1C5D788
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Add X8, X8, X9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X22
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X22, X0
	119 Compare X0, 0
	120 JumpIfEqual {314}
	121 Move X24, 0x401000
	122 Move X25, 0x429000
	123 Move X26, 0x42B000
	124 Move X24, [X24+3608]
	125 Move X25, [X25+1984]
	126 Move X26, [X26+2240]
	127 Move X8, [X22]
	128 Move X1, [X24]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move X0, X22
	139 Move W2, W31
	140 Call 0x1C5D788
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add X8, X8, X9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X1, [X0+8]
	146 Move X0, X22
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {184}
	152 Move X8, [X22]
	153 Move X1, [X25]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Compare X9, 0
	156 JumpIfEqual {163}
	157 Move X10, [X8+176]
	158 Add X10, X10, 8
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Subtract X9, X9, 1
	162 Add X10, X10, 16
	163 Move X0, X22
	164 Move W2, W31
	165 Call 0x1C5D788
	166 NotImplemented "Instruction LDRSW not yet implemented."
	167 Add X8, X8, X9
	168 Add X0, X8, 312
	169 Move X8, [X0]
	170 Move X1, [X0+8]
	171 Move X0, X22
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move W23, W0
	174 Move X0, X19
	175 Call BaseTreeViewController.get_baseTreeView, X0
	176 Compare X0, 0
	177 JumpIfEqual {312}
	178 Move X0, [X0+1200]
	179 Compare X0, 0
	180 JumpIfEqual {313}
	181 Move X2, [X26]
	182 Move W1, W23
	183 Call List`1<Int32>.Remove, X0, X1
	184 Move X23, X31
	185 Compare X22, 0
	186 JumpIfEqual {210}
	187 Move X10, 0x401000
	188 Move X8, [X22]
	189 Move X10, [X10+3584]
	190 NotImplemented "Instruction LDRH not yet implemented."
	191 Move X1, [X10]
	192 Compare X9, 0
	193 JumpIfEqual {200}
	194 Move X10, [X8+176]
	195 Add X10, X10, 8
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Subtract X9, X9, 1
	199 Add X10, X10, 16
	200 Move X0, X22
	201 Move W2, W31
	202 Call 0x1C5D788
	203 NotImplemented "Instruction LDRSW not yet implemented."
	204 Add X8, X8, X9
	205 Add X0, X8, 312
	206 Move X8, [X0]
	207 Move X1, [X0+8]
	208 Move X0, X22
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Compare X23, 0
	211 JumpIfNotEqual {315}
	212 Move X0, X19
	213 Call BaseTreeViewController.get_baseTreeView, X0
	214 Compare X0, 0
	215 JumpIfEqual {256}
	216 Move X0, [X0+1200]
	217 Compare X0, 0
	218 JumpIfEqual {256}
	219 Move X8, 0x42B000
	220 Move X8, [X8+2240]
	221 Move W1, W21
	222 Move X2, [X8]
	223 Call List`1<Int32>.Remove, X0, X1
	224 Move X8, [X19]
	225 Move X0, X19
	226 Move W1, W20
	227 Move X9, [X8+504]
	228 Move X2, [X8+512]
	229 NotImplemented "Instruction BLR not yet implemented."
	230 Move W1, W0
	231 Move X0, X19
	232 Call BaseTreeViewController.GetIndentationDepth, X0, X1
	233 Move X8, [X19+64]
	234 Compare X8, 0
	235 JumpIfEqual {256}
	236 Move W22, W0
	237 Move W21, W31
	238 Add W20, W20, 1
	239 Move W8, [X8+24]
	240 Add W23, W20, W21
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move X8, [X19]
	243 Move X0, X19
	244 Move W1, W23
	245 Move X9, [X8+504]
	246 Move X2, [X8+512]
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Move W1, W0
	249 Move X0, X19
	250 Call BaseTreeViewController.GetIndentationDepth, X0, X1
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X8, [X19+64]
	253 Add W21, W21, 1
	254 Compare X8, 0
	255 JumpIfNotEqual {239}
	256 Call 0x1C17F20
	257 NotImplemented "Instruction CMP not yet implemented."
	258 Move X24, 0x470000
	259 Move X25, 0x40E000
	260 Move X24, [X24+2920]
	261 Move X25, [X25+1440]
	262 Move W23, W31
	263 Move X0, [X19+64]
	264 Compare X0, 0
	265 JumpIfEqual {256}
	266 Move X2, [X24]
	267 Move X22, [X19+72]
	268 Add W1, W20, W23
	269 Add X8, X31, 8
	270 Call List`1<TreeViewItemWrapper>.get_Item, X0, X1
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 Move X8, [X31+24]
	273 Add X0, X31, 32
	274 Move X1, X31
	275 Move [X31+2], V0
	276 Move [X31+48], X8
	277 Call TreeViewItemWrapper.get_id, X0
	278 Compare X22, 0
	279 JumpIfEqual {256}
	280 Move X2, [X25]
	281 Move W1, W0
	282 Move X0, X22
	283 Call HashSet`1<Int32>.Remove, X0, X1
	284 Add W23, W23, 1
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Move X0, [X19+64]
	287 Compare X0, 0
	288 JumpIfEqual {256}
	289 Move X8, 0x470000
	290 Move X8, [X8+2952]
	291 Move W1, W20
	292 Move W2, W21
	293 Move X3, [X8]
	294 Call List`1<TreeViewItemWrapper>.RemoveRange, X0, X1, X2
	295 Move X0, X19
	296 Call BaseTreeViewController.get_baseTreeView, X0
	297 Compare X0, 0
	298 JumpIfEqual {256}
	299 Move X1, X31
	300 Call BaseVerticalCollectionView.RefreshItems, X0
	301 Move X20, [X31+128]
	302 Move X19, [X31+136]
	303 Move X22, [X31+112]
	304 Move X21, [X31+120]
	305 Move X24, [X31+96]
	306 Move X23, [X31+104]
	307 Move X26, [X31+80]
	308 Move X25, [X31+88]
	309 Move X30, [X31+64]
	310 Add X31, X31, 144
	311 Return 
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Move X0, X23
	316 Call 0x1C17F18
	317 Move X24, X0
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X0, X24
	320 Call 0x3EB2AD0
	321 Move X23, [X0]
	322 Call 0x3EB2AE0
	323 Move X23, X31
	324 Move X24, X0
	325 Compare X22, 0
	326 JumpIfEqual {350}
	327 Move X10, 0x401000
	328 Move X8, [X22]
	329 Move X10, [X10+3584]
	330 NotImplemented "Instruction LDRH not yet implemented."
	331 Move X1, [X10]
	332 Compare X9, 0
	333 JumpIfEqual {340}
	334 Move X10, [X8+176]
	335 Add X10, X10, 8
	336 NotImplemented "Instruction LDUR not yet implemented."
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Subtract X9, X9, 1
	339 Add X10, X10, 16
	340 Move X0, X22
	341 Move W2, W31
	342 Call 0x1C5D788
	343 NotImplemented "Instruction LDRSW not yet implemented."
	344 Add X8, X8, X9
	345 Add X0, X8, 312
	346 Move X8, [X0]
	347 Move X1, [X0+8]
	348 Move X0, X22
	349 NotImplemented "Instruction BLR not yet implemented."
	350 Compare X23, 0
	351 JumpIfNotEqual {354}
	352 Move X0, X24
	353 Call 0x1D2D690
	354 Move X0, X23
	355 Call 0x1C17F18
	356 Call 0x1991590

Method: System.Void CollapseItem(System.Int32 id, System.Boolean collapseAllChildren)

Disassembly:
	0x03CF5AB4 MOV X0, X19
	0x03CF5AB8 MOV X1, X21
	0x03CF5ABC MOV X2, X22
	0x03CF5AC0 CMP W8, 0x1
	0x03CF5AC4 CSET W3, EQ
	0x03CF5AC8 BL 0x3CF5AE4
	0x03CF5ACC MOV X1, X19
	0x03CF5AD0 LDP X20, X19, [X31 + 0x20]
	0x03CF5AD4 LDP X22, X21, [X31 + 0x10]
	0x03CF5AD8 LDR X30, [X31], #0x30
	0x03CF5ADC B 0x3CEF370
	0x03CF5AE0 BL 0x1C16F20
	0x03CF5AE4 STP X30, X27, [X31 - 0x50]!
	0x03CF5AE8 STP X26, X25, [X31 + 0x10]
	0x03CF5AEC STP X24, X23, [X31 + 0x20]
	0x03CF5AF0 STP X22, X21, [X31 + 0x30]
	0x03CF5AF4 STP X20, X19, [X31 + 0x40]
	0x03CF5AF8 ADRP X19, 0x6F2000
	0x03CF5AFC LDRB W8, [X19 + 0x7B7]
	0x03CF5B00 MOV W20, W3
	0x03CF5B04 MOV X23, X2
	0x03CF5B08 MOV X22, X1
	0x03CF5B0C MOV X21, X0
	0x03CF5B10 TBNZ X8, 0x0, 0x3CF5B64
	0x03CF5B14 ADRP X0, 0x3FE000
	0x03CF5B18 LDR X0, [X0 + 0xE00]
	0x03CF5B1C BL 0x1C16CF4
	0x03CF5B20 ADRP X0, 0x427000
	0x03CF5B24 LDR X0, [X0 + 0x110]
	0x03CF5B28 BL 0x1C16CF4
	0x03CF5B2C ADRP X0, 0x427000
	0x03CF5B30 LDR X0, [X0 + 0x118]
	0x03CF5B34 BL 0x1C16CF4
	0x03CF5B38 ADRP X0, 0x3FE000
	0x03CF5B3C LDR X0, [X0 + 0xE18]
	0x03CF5B40 BL 0x1C16CF4
	0x03CF5B44 ADRP X0, 0x427000
	0x03CF5B48 LDR X0, [X0 + 0x100]
	0x03CF5B4C BL 0x1C16CF4
	0x03CF5B50 ADRP X0, 0x426000
	0x03CF5B54 LDR X0, [X0 + 0x898]
	0x03CF5B58 BL 0x1C16CF4
	0x03CF5B5C MOVZ W8, 0x1
	0x03CF5B60 STRB W8, [X19 + 0x7B7]
	0x03CF5B64 STR X22, [X21 + 0x10]
	0x03CF5B68 CBZ X23, 0x3CF5DEC
	0x03CF5B6C MOV X0, X23
	0x03CF5B70 MOV X1, X31
	0x03CF5B74 BL 0x3D6F8DC
	0x03CF5B78 CBZ X0, 0x3CF5DEC
	0x03CF5B7C ADRP X10, 0x427000
	0x03CF5B80 LDR X8, [X0]
	0x03CF5B84 LDR X10, [X10 + 0x110]
	0x03CF5B88 MOV X19, X0
	0x03CF5B8C LDRH W9, [X8 + 0x12E]
	0x03CF5B90 LDR X1, [X10]
	0x03CF5B94 CBZ X9, 0x3CF5BB8
	0x03CF5B98 LDR X10, [X8 + 0xB0]
	0x03CF5B9C ADD X10, X10, 0x8
	0x03CF5BA0 LDUR X11, [X10 - 0x8]
	0x03CF5BA4 CMP X11, X1
	0x03CF5BA8 B.EQ 0x3CF5BC8
	0x03CF5BAC SUBS X9, X9, 0x1
	0x03CF5BB0 ADD X10, X10, 0x10
	0x03CF5BB4 B.NE 0x3CF5BA0
	0x03CF5BB8 MOV X0, X19
	0x03CF5BBC MOV W2, W31
	0x03CF5BC0 BL 0x1C5C788
	0x03CF5BC4 B 0x3CF5BD4
	0x03CF5BC8 LDRSW X9, [X10]
	0x03CF5BCC ADD X8, X8, X9, 0x4, LSL
	0x03CF5BD0 ADD X0, X8, 0x138
	0x03CF5BD4 LDP X8, X1, [X0]
	0x03CF5BD8 ADRP X25, 0x3FE000
	0x03CF5BDC LDR X25, [X25 + 0xE00]
	0x03CF5BE0 MOV X0, X19
	0x03CF5BE4 BLR X8
	0x03CF5BE8 MOV X19, X0
	0x03CF5BEC CBZ X0, 0x3CF5DF0
	0x03CF5BF0 ADRP X26, 0x3FE000
	0x03CF5BF4 ADRP X27, 0x427000
	0x03CF5BF8 LDR X26, [X26 + 0xE18]
	0x03CF5BFC LDR X27, [X27 + 0x118]
	0x03CF5C00 MOV W24, W31
	0x03CF5C04 LDR X8, [X19]
	0x03CF5C08 LDR X1, [X26]
	0x03CF5C0C LDRH W9, [X8 + 0x12E]
	0x03CF5C10 CBZ X9, 0x3CF5C34
	0x03CF5C14 LDR X10, [X8 + 0xB0]
	0x03CF5C18 ADD X10, X10, 0x8
	0x03CF5C1C LDUR X11, [X10 - 0x8]
	0x03CF5C20 CMP X11, X1
	0x03CF5C24 B.EQ 0x3CF5C44

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X22, 0x6F3000
	009 Move W8, [X22+1929]
	010 Move W21, W2
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x403000
	018 Move X0, [X0+2920]
	019 Call 0x1C17CF4
	020 Move X0, 0x429000
	021 Move X0, [X0+2240]
	022 Call 0x1C17CF4
	023 Move X0, 0x46E000
	024 Move X0, [X0+2960]
	025 Call 0x1C17CF4
	026 Move X0, 0x46E000
	027 Move X0, [X0+2920]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1929], W8
	031 Move [X31+32], X31
	032 Move [X31+40], X31
	033 Move [X31+48], X31
	034 Move X8, [X20]
	035 Move X0, X20
	036 Move W1, W19
	037 Move X9, [X8+744]
	038 Move X2, [X8+752]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {108}
	044 Move X0, [X20+64]
	045 Compare X0, 0
	046 JumpIfEqual {68}
	047 Move X23, 0x46E000
	048 Move X23, [X23+2920]
	049 Move W22, W31
	050 Move W8, [X0+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X2, [X23]
	053 Add X8, X31, 8
	054 Move W1, W22
	055 Call List`1<TreeViewItemWrapper>.get_Item, X0, X1
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move X8, [X31+24]
	058 Add X0, X31, 32
	059 Move X1, X31
	060 Move [X31+2], V0
	061 Move [X31+48], X8
	062 Call TreeViewItemWrapper.get_id, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, [X20+64]
	065 Add W22, W22, 1
	066 Compare X0, 0
	067 JumpIfNotEqual {50}
	068 Call 0x1C17F20
	069 Move X0, X20
	070 Move W1, W22
	071 Call BaseTreeViewController.IsExpandedByIndex, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {80}
	076 And W2, W21, 1
	077 Move X0, X20
	078 Move W1, W22
	079 Call BaseTreeViewController.CollapseItemByIndex, X0, X1, X2
	080 Move X0, X20
	081 Call BaseTreeViewController.get_baseTreeView, X0
	082 Compare X0, 0
	083 JumpIfEqual {68}
	084 Move X0, [X0+1200]
	085 Compare X0, 0
	086 JumpIfEqual {68}
	087 Move X8, 0x403000
	088 Move X8, [X8+2920]
	089 Move W1, W19
	090 Move X2, [X8]
	091 Call List`1<Int32>.Contains, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {108}
	096 Move X0, X20
	097 Call BaseTreeViewController.get_baseTreeView, X0
	098 Compare X0, 0
	099 JumpIfEqual {68}
	100 Move X0, [X0+1200]
	101 Compare X0, 0
	102 JumpIfEqual {68}
	103 Move X8, 0x429000
	104 Move X8, [X8+2240]
	105 Move W1, W19
	106 Move X2, [X8]
	107 Call List`1<Int32>.Remove, X0, X1
	108 Move X20, [X31+96]
	109 Move X19, [X31+104]
	110 Move X22, [X31+80]
	111 Move X21, [X31+88]
	112 Move X30, [X31+64]
	113 Move X23, [X31+72]
	114 Add X31, X31, 112
	115 Return 

Method: System.Void RegenerateWrappers()

Disassembly:
	0x03CF2868 BL 0x1C171E0
	0x03CF286C BL 0x1C16F20
	0x03CF2870 MOV X0, X23
	0x03CF2874 BL 0x1C16F18
	0x03CF2878 B 0x3CF288C
	0x03CF287C B 0x3CF288C
	0x03CF2880 B 0x3CF288C
	0x03CF2884 B 0x3CF288C
	0x03CF2888 B 0x3CF288C
	0x03CF288C MOV X24, X0
	0x03CF2890 CMP W1, 0x1
	0x03CF2894 B.NE 0x3CF28B4
	0x03CF2898 MOV X0, X24
	0x03CF289C BL 0x3EB1AD0
	0x03CF28A0 LDR X23, [X0]
	0x03CF28A4 BL 0x3EB1AE0
	0x03CF28A8 MOV W24, W31
	0x03CF28AC CBNZ X22, 0x3CF2770
	0x03CF28B0 B 0x3CF27D0
	0x03CF28B4 MOV X23, X31
	0x03CF28B8 B 0x3CF28C0
	0x03CF28BC MOV X24, X0
	0x03CF28C0 CBZ X22, 0x3CF2924
	0x03CF28C4 ADRP X10, 0x401000
	0x03CF28C8 LDR X8, [X22]
	0x03CF28CC LDR X10, [X10 + 0xE00]
	0x03CF28D0 LDRH W9, [X8 + 0x12E]
	0x03CF28D4 LDR X1, [X10]
	0x03CF28D8 CBZ X9, 0x3CF28FC
	0x03CF28DC LDR X10, [X8 + 0xB0]
	0x03CF28E0 ADD X10, X10, 0x8
	0x03CF28E4 LDUR X11, [X10 - 0x8]
	0x03CF28E8 CMP X11, X1
	0x03CF28EC B.EQ 0x3CF290C
	0x03CF28F0 SUBS X9, X9, 0x1
	0x03CF28F4 ADD X10, X10, 0x10
	0x03CF28F8 B.NE 0x3CF28E4
	0x03CF28FC MOV X0, X22
	0x03CF2900 MOV W2, W31
	0x03CF2904 BL 0x1C5C788
	0x03CF2908 B 0x3CF2918
	0x03CF290C LDRSW X9, [X10]
	0x03CF2910 ADD X8, X8, X9, 0x4, LSL
	0x03CF2914 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6F6000
	005 Move W8, [X20+1930]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x409000
	012 Move X0, [X0+1656]
	013 Call 0x1C17CF4
	014 Move X0, 0x471000
	015 Move X0, [X0+2856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1930], W8
	019 Move X20, X19
	020 Add X20, X20, 64
	021 Move X8, [X20]
	022 Compare X8, 0
	023 JumpIfEqual {54}
	024 Move W2, [X8+24]
	025 Move W9, [X8+28]
	026 Add W9, W9, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X8+24], W31
	029 Move [X8+28], W9
	030 Move X0, [X8+16]
	031 Move W1, W31
	032 Move X3, X31
	033 Call Array.Clear, X0, X1, X2
	034 Move X0, [X19+72]
	035 Compare X0, 0
	036 JumpIfEqual {54}
	037 Move X8, 0x409000
	038 Move X8, [X8+1656]
	039 Move X1, [X8]
	040 Call HashSet`1<Int32>.Clear, X0
	041 Move X1, [X19+56]
	042 Compare X1, 0
	043 JumpIfEqual {50}
	044 Move X0, X19
	045 Move W2, W31
	046 Move X3, X20
	047 Call BaseTreeViewController.CreateWrappers, X0, X1, X2, X3
	048 Move X8, [X19+64]
	049 Move [X19+24], X8
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Return 
	054 Call 0x1C17F20

Method: System.Void CreateWrappers(System.Collections.Generic.IEnumerable`1<System.Int32> treeViewItemIds, System.Int32 depth, ref System.Collections.Generic.List`1<UnityEngine.UIElements.TreeViewItemWrapper> wrappers)

Disassembly:
	0x03CF529C LDR X0, [X21]
	0x03CF52A0 LDR X19, [X19 + 0x10]
	0x03CF52A4 LDR W8, [X0 + 0xE0]
	0x03CF52A8 CBNZ W8, 0x3CF52B0
	0x03CF52AC BL 0x1C16DFC
	0x03CF52B0 LDR X1, [X22]
	0x03CF52B4 LDR X2, [X20]
	0x03CF52B8 MOV X0, X19
	0x03CF52BC LDP X20, X19, [X31 + 0x20]
	0x03CF52C0 LDP X22, X21, [X31 + 0x10]
	0x03CF52C4 LDR X30, [X31], #0x30
	0x03CF52C8 B 0x21844D4
	0x03CF52CC RET
	0x03CF52D0 STR X31, [X0 + 0x10]
	0x03CF52D4 STP X31, X31, [X0 + 0x20]
	0x03CF52D8 RET
	0x03CF52DC STR X30, [X31 - 0x20]!
	0x03CF52E0 STP X20, X19, [X31 + 0x10]
	0x03CF52E4 ADRP X20, 0x6F2000
	0x03CF52E8 LDRB W8, [X20 + 0x795]
	0x03CF52EC MOV X19, X0
	0x03CF52F0 TBNZ X8, 0x0, 0x3CF5308
	0x03CF52F4 ADRP X0, 0x405000
	0x03CF52F8 LDR X0, [X0 + 0x2F0]
	0x03CF52FC BL 0x1C16CF4
	0x03CF5300 MOVZ W8, 0x1
	0x03CF5304 STRB W8, [X20 + 0x795]
	0x03CF5308 LDR X19, [X19 + 0x18]
	0x03CF530C CBZ X19, 0x3CF5358
	0x03CF5310 ADRP X10, 0x405000
	0x03CF5314 LDR X8, [X19]
	0x03CF5318 LDR X10, [X10 + 0x2F0]
	0x03CF531C LDRH W9, [X8 + 0x12E]
	0x03CF5320 LDR X1, [X10]
	0x03CF5324 CBZ X9, 0x3CF5348
	0x03CF5328 LDR X10, [X8 + 0xB0]
	0x03CF532C ADD X10, X10, 0x8
	0x03CF5330 LDUR X11, [X10 - 0x8]
	0x03CF5334 CMP X11, X1
	0x03CF5338 B.EQ 0x3CF5368
	0x03CF533C SUBS X9, X9, 0x1
	0x03CF5340 ADD X10, X10, 0x10
	0x03CF5344 B.NE 0x3CF5330
	0x03CF5348 MOVZ W2, 0x1
	0x03CF534C MOV X0, X19
	0x03CF5350 BL 0x1C5C788
	0x03CF5354 B 0x3CF5378
	0x03CF5358 LDP X20, X19, [X31 + 0x10]
	0x03CF535C MOV W0, W31
	0x03CF5360 LDR X30, [X31], #0x20
	0x03CF5364 RET
	0x03CF5368 LDR W9, [X10]
	0x03CF536C ADD W9, W9, 0x1
	0x03CF5370 ADD X8, X8, W9, 0x4, SXTW
	0x03CF5374 ADD X0, X8, 0x138
	0x03CF5378 LDP X2, X1, [X0]
	0x03CF537C MOV X0, X19
	0x03CF5380 LDP X20, X19, [X31 + 0x10]
	0x03CF5384 LDR X30, [X31], #0x20
	0x03CF5388 BR X2
	0x03CF538C LDR X8, [X0]
	0x03CF5390 LDP X2, X1, [X8 + 0x1C8]
	0x03CF5394 BR X2
	0x03CF5398 MOV W0, W1
	0x03CF539C RET
	0x03CF53A0 MOV W0, W1
	0x03CF53A4 RET
	0x03CF53A8 STP X30, X21, [X31 - 0x20]!
	0x03CF53AC STP X20, X19, [X31 + 0x10]
	0x03CF53B0 ADRP X21, 0x6F2000
	0x03CF53B4 LDRB W8, [X21 + 0x796]
	0x03CF53B8 MOV W19, W1
	0x03CF53BC MOV X20, X0
	0x03CF53C0 TBNZ X8, 0x0, 0x3CF53E4
	0x03CF53C4 ADRP X0, 0x405000
	0x03CF53C8 LDR X0, [X0 + 0x2F0]
	0x03CF53CC BL 0x1C16CF4
	0x03CF53D0 ADRP X0, 0x405000
	0x03CF53D4 LDR X0, [X0 + 0x2F8]
	0x03CF53D8 BL 0x1C16CF4
	0x03CF53DC MOVZ W8, 0x1
	0x03CF53E0 STRB W8, [X21 + 0x796]
	0x03CF53E4 TBNZ X19, 0x1F, 0x3CF54AC
	0x03CF53E8 LDR X21, [X20 + 0x18]
	0x03CF53EC CBZ X21, 0x3CF54AC
	0x03CF53F0 ADRP X10, 0x405000
	0x03CF53F4 LDR X8, [X21]
	0x03CF53F8 LDR X10, [X10 + 0x2F0]
	0x03CF53FC LDRH W9, [X8 + 0x12E]
	0x03CF5400 LDR X1, [X10]
	0x03CF5404 CBZ X9, 0x3CF5428
	0x03CF5408 LDR X10, [X8 + 0xB0]
	0x03CF540C ADD X10, X10, 0x8
	0x03CF5410 LDUR X11, [X10 - 0x8]
	0x03CF5414 CMP X11, X1
	0x03CF5418 B.EQ 0x3CF5438
	0x03CF541C SUBS X9, X9, 0x1
	0x03CF5420 ADD X10, X10, 0x10
	0x03CF5424 B.NE 0x3CF5410
	0x03CF5428 MOVZ W2, 0x1
	0x03CF542C MOV X0, X21
	0x03CF5430 BL 0x1C5C788
	0x03CF5434 B 0x3CF5448
	0x03CF5438 LDR W9, [X10]
	0x03CF543C ADD W9, W9, 0x1
	0x03CF5440 ADD X8, X8, W9, 0x4, SXTW
	0x03CF5444 ADD X0, X8, 0x138
	0x03CF5448 LDP X8, X1, [X0]
	0x03CF544C MOV X0, X21
	0x03CF5450 BLR X8
	0x03CF5454 CMP W0, W19
	0x03CF5458 B.LE 0x3CF54AC
	0x03CF545C LDR X20, [X20 + 0x18]
	0x03CF5460 CBZ X20, 0x3CF54E0
	0x03CF5464 ADRP X10, 0x405000
	0x03CF5468 LDR X8, [X20]
	0x03CF546C LDR X10, [X10 + 0x2F8]
	0x03CF5470 LDRH W9, [X8 + 0x12E]
	0x03CF5474 LDR X1, [X10]
	0x03CF5478 CBZ X9, 0x3CF549C
	0x03CF547C LDR X10, [X8 + 0xB0]
	0x03CF5480 ADD X10, X10, 0x8
	0x03CF5484 LDUR X11, [X10 - 0x8]
	0x03CF5488 CMP X11, X1
	0x03CF548C B.EQ 0x3CF54BC
	0x03CF5490 SUBS X9, X9, 0x1
	0x03CF5494 ADD X10, X10, 0x10
	0x03CF5498 B.NE 0x3CF5484
	0x03CF549C MOV X0, X20
	0x03CF54A0 MOV W2, W31
	0x03CF54A4 BL 0x1C5C788
	0x03CF54A8 B 0x3CF54C8
	0x03CF54AC LDP X20, X19, [X31 + 0x10]
	0x03CF54B0 MOV X0, X31
	0x03CF54B4 LDP X30, X21, [X31], #0x20
	0x03CF54B8 RET
	0x03CF54BC LDRSW X9, [X10]
	0x03CF54C0 ADD X8, X8, X9, 0x4, LSL
	0x03CF54C4 ADD X0, X8, 0x138
	0x03CF54C8 LDP X3, X2, [X0]
	0x03CF54CC MOV X0, X20
	0x03CF54D0 MOV W1, W19
	0x03CF54D4 LDP X20, X19, [X31 + 0x10]
	0x03CF54D8 LDP X30, X21, [X31], #0x20
	0x03CF54DC BR X3
	0x03CF54E0 BL 0x1C16F20
	0x03CF54E4 STP X30, X19, [X31 - 0x10]!
	0x03CF54E8 LDR X8, [X0]
	0x03CF54EC MOV X19, X1
	0x03CF54F0 LDR X9, [X8 + 0x258]
	0x03CF54F4 LDR X8, [X8 + 0x260]
	0x03CF54F8 MOV X1, X8
	0x03CF54FC BLR X9
	0x03CF5500 CBZ X19, 0x3CF551C
	0x03CF5504 LDR X8, [X19]
	0x03CF5508 MOV X1, X0
	0x03CF550C MOV X0, X19
	0x03CF5510 LDP X3, X2, [X8 + 0x188]
	0x03CF5514 LDP X30, X19, [X31], #0x10
	0x03CF5518 BR X3
	0x03CF551C BL 0x1C16F20
	0x03CF5520 STP X30, X19, [X31 - 0x10]!
	0x03CF5524 CBZ X1, 0x3CF5550
	0x03CF5528 LDR X8, [X0]
	0x03CF552C MOV X19, X1
	0x03CF5530 LDR X1, [X1 + 0x10]
	0x03CF5534 LDR X9, [X8 + 0x278]
	0x03CF5538 LDR X3, [X8 + 0x280]
	0x03CF553C BLR X9
	0x03CF5540 MOVN W8, 0x0
	0x03CF5544 STR W8, [X19 + 0x20]
	0x03CF5548 LDP X30, X19, [X31], #0x10
	0x03CF554C RET
	0x03CF5550 BL 0x1C16F20
	0x03CF5554 STR X30, [X31 - 0x20]!
	0x03CF5558 STP X20, X19, [X31 + 0x10]
	0x03CF555C ADRP X20, 0x6F2000
	0x03CF5560 LDRB W8, [X20 + 0x798]
	0x03CF5564 MOV X19, X0
	0x03CF5568 TBNZ X8, 0x0, 0x3CF5580
	0x03CF556C ADRP X0, 0x46D000
	0x03CF5570 LDR X0, [X0 + 0xC10]
	0x03CF5574 BL 0x1C16CF4
	0x03CF5578 MOVZ W8, 0x1
	0x03CF557C STRB W8, [X20 + 0x798]
	0x03CF5580 LDR X8, [X19 + 0x10]
	0x03CF5584 CBZ X8, 0x3CF55A8
	0x03CF5588 ADRP X9, 0x46D000
	0x03CF558C LDR X9, [X9 + 0xC10]
	0x03CF5590 LDR X10, [X8]
	0x03CF5594 LDR X9, [X9]
	0x03CF5598 LDRB W12, [X10 + 0x130]
	0x03CF559C LDRB W11, [X9 + 0x130]
	0x03CF55A0 CMP W12, W11
	0x03CF55A4 B.CS 0x3CF55B0
	0x03CF55A8 MOV X0, X31
	0x03CF55AC B 0x3CF55C4
	0x03CF55B0 LDR X10, [X10 + 0xC8]
	0x03CF55B4 ADD X10, X10, X11, 0x3, LSL
	0x03CF55B8 LDUR X10, [X10 - 0x8]
	0x03CF55BC CMP X10, X9
	0x03CF55C0 CSEL X0, X8, X31, EQ
	0x03CF55C4 LDP X20, X19, [X31 + 0x10]
	0x03CF55C8 LDR X30, [X31], #0x20
	0x03CF55CC RET
	0x03CF55D0 STR X30, [X31 - 0x20]!
	0x03CF55D4 STP X20, X19, [X31 + 0x10]
	0x03CF55D8 ADRP X20, 0x6F2000
	0x03CF55DC LDRB W8, [X20 + 0x799]
	0x03CF55E0 MOV X19, X0
	0x03CF55E4 TBNZ X8, 0x0, 0x3CF55FC
	0x03CF55E8 ADRP X0, 0x427000
	0x03CF55EC LDR X0, [X0 + 0x130]
	0x03CF55F0 BL 0x1C16CF4
	0x03CF55F4 MOVZ W8, 0x1
	0x03CF55F8 STRB W8, [X20 + 0x799]
	0x03CF55FC MOV X0, X19
	0x03CF5600 BL 0x3CF5554
	0x03CF5604 CBZ X0, 0x3CF5670
	0x03CF5608 LDR X20, [X0 + 0x538]
	0x03CF560C MOV X0, X19
	0x03CF5610 BL 0x3CF5554
	0x03CF5614 CBZ X0, 0x3CF5670
	0x03CF5618 CBZ X20, 0x3CF563C
	0x03CF561C LDR X8, [X0 + 0x538]
	0x03CF5620 CBZ X8, 0x3CF5670
	0x03CF5624 LDR X2, [X8 + 0x18]
	0x03CF5628 LDR X0, [X8 + 0x40]
	0x03CF562C LDR X1, [X8 + 0x28]
	0x03CF5630 LDP X20, X19, [X31 + 0x10]
	0x03CF5634 LDR X30, [X31], #0x20
	0x03CF5638 BR X2
	0x03CF563C LDR X8, [X0 + 0x540]
	0x03CF5640 CBNZ X8, 0x3CF5674
	0x03CF5644 ADRP X8, 0x427000
	0x03CF5648 LDR X8, [X8 + 0x130]
	0x03CF564C LDR X0, [X8]
	0x03CF5650 BL 0x1C16F10
	0x03CF5654 MOV X1, X31
	0x03CF5658 MOV X19, X0
	0x03CF565C BL 0x3D6B60C
	0x03CF5660 MOV X0, X19
	0x03CF5664 LDP X20, X19, [X31 + 0x10]
	0x03CF5668 LDR X30, [X31], #0x20
	0x03CF566C RET
	0x03CF5670 BL 0x1C16F20
	0x03CF5674 ADRP X0, 0x407000
	0x03CF5678 LDR X0, [X0 + 0x758]
	0x03CF567C BL 0x1C16D08
	0x03CF5680 BL 0x1C16F10
	0x03CF5684 MOV X19, X0
	0x03CF5688 ADRP X0, 0x46D000
	0x03CF568C LDR X0, [X0 + 0xC18]
	0x03CF5690 BL 0x1C16D08
	0x03CF5694 MOV X1, X0
	0x03CF5698 MOV X0, X19
	0x03CF569C MOV X2, X31
	0x03CF56A0 BL 0x33802E4
	0x03CF56A4 ADRP X0, 0x46D000
	0x03CF56A8 LDR X0, [X0 + 0xC20]
	0x03CF56AC BL 0x1C16D08
	0x03CF56B0 MOV X1, X0
	0x03CF56B4 MOV X0, X19
	0x03CF56B8 BL 0x1C16DEC
	0x03CF56BC STR X30, [X31 - 0x30]!
	0x03CF56C0 STP X22, X21, [X31 + 0x10]
	0x03CF56C4 STP X20, X19, [X31 + 0x20]
	0x03CF56C8 ADRP X22, 0x6F2000
	0x03CF56CC LDRB W8, [X22 + 0x79A]
	0x03CF56D0 MOV W20, W2
	0x03CF56D4 MOV X19, X1
	0x03CF56D8 MOV X21, X0
	0x03CF56DC TBNZ X8, 0x0, 0x3CF570C
	0x03CF56E0 ADRP X0, 0x405000
	0x03CF56E4 LDR X0, [X0 + 0x2F8]
	0x03CF56E8 BL 0x1C16CF4
	0x03CF56EC ADRP X0, 0x427000
	0x03CF56F0 LDR X0, [X0 + 0x130]
	0x03CF56F4 BL 0x1C16CF4
	0x03CF56F8 ADRP X0, 0x3FE000
	0x03CF56FC LDR X0, [X0 + 0x830]
	0x03CF5700 BL 0x1C16CF4
	0x03CF5704 MOVZ W8, 0x1
	0x03CF5708 STRB W8, [X22 + 0x79A]
	0x03CF570C MOV X0, X21
	0x03CF5710 BL 0x3CF5554
	0x03CF5714 CBZ X0, 0x3CF5860
	0x03CF5718 LDR X22, [X0 + 0x540]
	0x03CF571C MOV X0, X21
	0x03CF5720 BL 0x3CF5554
	0x03CF5724 CBZ X0, 0x3CF5860
	0x03CF5728 CBZ X22, 0x3CF5758
	0x03CF572C LDR X8, [X0 + 0x540]
	0x03CF5730 CBZ X8, 0x3CF5860
	0x03CF5734 LDR X4, [X8 + 0x18]
	0x03CF5738 LDR X0, [X8 + 0x40]
	0x03CF573C LDR X3, [X8 + 0x28]
	0x03CF5740 MOV X1, X19
	0x03CF5744 MOV W2, W20
	0x03CF5748 LDP X20, X19, [X31 + 0x20]
	0x03CF574C LDP X22, X21, [X31 + 0x10]
	0x03CF5750 LDR X30, [X31], #0x30
	0x03CF5754 BR X4
	0x03CF5758 LDR X8, [X0 + 0x538]
	0x03CF575C CBNZ X8, 0x3CF586C
	0x03CF5760 CBZ X19, 0x3CF5798
	0x03CF5764 ADRP X9, 0x427000
	0x03CF5768 LDR X9, [X9 + 0x130]
	0x03CF576C LDR X8, [X19]
	0x03CF5770 LDR X1, [X9]
	0x03CF5774 LDRB W10, [X8 + 0x130]
	0x03CF5778 LDRB W9, [X1 + 0x130]
	0x03CF577C CMP W10, W9
	0x03CF5780 B.CC 0x3CF5864
	0x03CF5784 LDR X8, [X8 + 0xC8]
	0x03CF5788 ADD X8, X8, X9, 0x3, LSL
	0x03CF578C LDUR X8, [X8 - 0x8]
	0x03CF5790 CMP X8, X1
	0x03CF5794 B.NE 0x3CF5864
	0x03CF5798 MOV X0, X21
	0x03CF579C BL 0x3CF5554
	0x03CF57A0 CBZ X0, 0x3CF5860
	0x03CF57A4 MOV X1, X31
	0x03CF57A8 BL 0x3CFE9FC
	0x03CF57AC CBZ X0, 0x3CF5860
	0x03CF57B0 ADRP X10, 0x405000
	0x03CF57B4 LDR X8, [X0]
	0x03CF57B8 LDR X10, [X10 + 0x2F8]
	0x03CF57BC MOV X21, X0
	0x03CF57C0 LDRH W9, [X8 + 0x12E]
	0x03CF57C4 LDR X1, [X10]
	0x03CF57C8 CBZ X9, 0x3CF57EC
	0x03CF57CC LDR X10, [X8 + 0xB0]
	0x03CF57D0 ADD X10, X10, 0x8
	0x03CF57D4 LDUR X11, [X10 - 0x8]
	0x03CF57D8 CMP X11, X1
	0x03CF57DC B.EQ 0x3CF57FC
	0x03CF57E0 SUBS X9, X9, 0x1
	0x03CF57E4 ADD X10, X10, 0x10
	0x03CF57E8 B.NE 0x3CF57D4
	0x03CF57EC MOV X0, X21
	0x03CF57F0 MOV W2, W31
	0x03CF57F4 BL 0x1C5C788
	0x03CF57F8 B 0x3CF5808
	0x03CF57FC LDRSW X9, [X10]
	0x03CF5800 ADD X8, X8, X9, 0x4, LSL
	0x03CF5804 ADD X0, X8, 0x138
	0x03CF5808 LDP X8, X2, [X0]
	0x03CF580C MOV X0, X21
	0x03CF5810 MOV W1, W20
	0x03CF5814 BLR X8
	0x03CF5818 CBZ X0, 0x3CF5828
	0x03CF581C LDR X8, [X0]
	0x03CF5820 LDP X9, X1, [X8 + 0x168]
	0x03CF5824 BLR X9
	0x03CF5828 CBZ X19, 0x3CF5860
	0x03CF582C ADRP X9, 0x3FE000
	0x03CF5830 LDR X8, [X19]
	0x03CF5834 LDR X9, [X9 + 0x830]
	0x03CF5838 CMP X0, 0x0
	0x03CF583C LDP X22, X21, [X31 + 0x10]
	0x03CF5840 LDR X3, [X8 + 0xB28]
	0x03CF5844 LDR X9, [X9]
	0x03CF5848 LDR X2, [X8 + 0xB30]
	0x03CF584C CSEL X1, X9, X0, EQ
	0x03CF5850 MOV X0, X19
	0x03CF5854 LDP X20, X19, [X31 + 0x20]
	0x03CF5858 LDR X30, [X31], #0x30
	0x03CF585C BR X3
	0x03CF5860 BL 0x1C16F20
	0x03CF5864 MOV X0, X19
	0x03CF5868 BL 0x1C171E0
	0x03CF586C ADRP X0, 0x407000
	0x03CF5870 LDR X0, [X0 + 0x758]
	0x03CF5874 BL 0x1C16D08
	0x03CF5878 BL 0x1C16F10
	0x03CF587C MOV X19, X0
	0x03CF5880 ADRP X0, 0x46D000
	0x03CF5884 LDR X0, [X0 + 0xC28]
	0x03CF5888 BL 0x1C16D08
	0x03CF588C MOV X1, X0
	0x03CF5890 MOV X0, X19
	0x03CF5894 MOV X2, X31
	0x03CF5898 BL 0x33802E4
	0x03CF589C ADRP X0, 0x46D000
	0x03CF58A0 LDR X0, [X0 + 0xC30]
	0x03CF58A4 BL 0x1C16D08
	0x03CF58A8 MOV X1, X0
	0x03CF58AC MOV X0, X19
	0x03CF58B0 BL 0x1C16DEC
	0x03CF58B4 STR X30, [X31 - 0x20]!
	0x03CF58B8 STP X20, X19, [X31 + 0x10]
	0x03CF58BC MOV W19, W2
	0x03CF58C0 MOV X20, X1
	0x03CF58C4 BL 0x3CF5554
	0x03CF58C8 CBZ X0, 0x3CF5900

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X24, 0x6F3000
	015 Move X19, 0x46E000
	016 Move W8, [X24+1931]
	017 Move X19, [X19+2968]
	018 Move X21, X3
	019 Move W22, W2
	020 Move X20, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {55}
	026 Move X0, 0x46E000
	027 Move X0, [X0+2968]
	028 Call 0x1C17CF4
	029 Move X0, 0x46E000
	030 Move X0, [X0+2984]
	031 Call 0x1C17CF4
	032 Move X0, 0x401000
	033 Move X0, [X0+2520]
	034 Call 0x1C17CF4
	035 Move X0, 0x3FF000
	036 Move X0, [X0+3584]
	037 Call 0x1C17CF4
	038 Move X0, 0x427000
	039 Move X0, [X0+1976]
	040 Call 0x1C17CF4
	041 Move X0, 0x427000
	042 Move X0, [X0+1984]
	043 Call 0x1C17CF4
	044 Move X0, 0x3FF000
	045 Move X0, [X0+3608]
	046 Call 0x1C17CF4
	047 Move X0, 0x46E000
	048 Move X0, [X0+3000]
	049 Call 0x1C17CF4
	050 Move X0, 0x403000
	051 Move X0, [X0+2920]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X24+1931], W8
	055 Move X0, [X19]
	056 Move [X31+48], X31
	057 Move [X31+56], X31
	058 Move [X31+24], X31
	059 Move [X31+32], X31
	060 Move [X31+40], X31
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {66}
	064 Call 0x1C17DFC
	065 Move X0, [X19]
	066 Move X8, [X0+184]
	067 Move X1, X31
	068 Move X2, X31
	069 Move X19, [X8+8]
	070 Move X0, X19
	071 Call IntPtr.op_Inequality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {79}
	076 Move X0, X19
	077 Move X1, X31
	078 Call ProfilerUnsafeUtility.BeginSample, X0
	079 Compare X20, 0
	080 JumpIfEqual {314}
	081 Move X8, [X21]
	082 Compare X8, 0
	083 JumpIfEqual {313}
	084 Move X8, [X23+72]
	085 Compare X8, 0
	086 JumpIfEqual {313}
	087 Move X10, 0x427000
	088 Move X8, [X20]
	089 Move X10, [X10+1976]
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Move X1, [X10]
	092 Compare X9, 0
	093 JumpIfEqual {100}
	094 Move X10, [X8+176]
	095 Add X10, X10, 8
	096 NotImplemented "Instruction LDUR not yet implemented."
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Subtract X9, X9, 1
	099 Add X10, X10, 16
	100 Move X0, X20
	101 Move W2, W31
	102 Call 0x1C5D788
	103 NotImplemented "Instruction LDRSW not yet implemented."
	104 Add X8, X8, X9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X1, [X0+8]
	108 Move X0, X20
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X20, X0
	111 Compare X0, 0
	112 JumpIfEqual {344}
	113 Move X27, 0x3FF000
	114 Move X28, 0x427000
	115 Move X29, 0x46E000
	116 Move X27, [X27+3608]
	117 Move X28, [X28+1984]
	118 Move X29, [X29+2984]
	119 Move X26, X31
	120 Add W24, W22, 1
	121 Move X8, [X20]
	122 Move X1, [X27]
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Compare X9, 0
	125 JumpIfEqual {132}
	126 Move X10, [X8+176]
	127 Add X10, X10, 8
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Subtract X9, X9, 1
	131 Add X10, X10, 16
	132 Move X0, X20
	133 Move W2, W31
	134 Call 0x1C5D788
	135 NotImplemented "Instruction LDRSW not yet implemented."
	136 Add X8, X8, X9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X1, [X0+8]
	140 Move X0, X20
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {285}
	146 Move X8, [X20]
	147 Move X1, [X28]
	148 NotImplemented "Instruction LDRH not yet implemented."
	149 Compare X9, 0
	150 JumpIfEqual {157}
	151 Move X10, [X8+176]
	152 Add X10, X10, 8
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract X9, X9, 1
	156 Add X10, X10, 16
	157 Move X0, X20
	158 Move W2, W31
	159 Call 0x1C5D788
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Add X8, X8, X9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X1, [X0+8]
	165 Move X0, X20
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move W25, W0
	168 Move X0, [X23+48]
	169 Compare X0, 0
	170 JumpIfEqual {341}
	171 Move X3, [X29]
	172 Add X2, X31, 48
	173 Move W1, W25
	174 Call Dictionary`2<Int32, TreeItem>.TryGetValue, X0, X1, X2
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {121}
	179 Move X1, [X31+48]
	180 Move X2, [X31+56]
	181 Add X0, X31, 24
	182 Move W3, W22
	183 Move X4, X31
	184 Call TreeViewItemWrapper..ctor, X0, X1, X2
	185 Move X0, [X21]
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 Move X8, [X31+40]
	188 Move [X31], V0
	189 Move [X31+16], X8
	190 Compare X0, 0
	191 JumpIfEqual {349}
	192 Move V0, [X31]
	193 Move X8, [X31+16]
	194 Move X10, 0x46E000
	195 Move [X31+4], V0
	196 Move [X31+80], X8
	197 Move W9, [X0+28]
	198 Move X8, [X0+16]
	199 Move X10, [X10+3000]
	200 Add W9, W9, 1
	201 Move X10, [X10]
	202 Move [X0+28], W9
	203 Compare X8, 0
	204 JumpIfEqual {348}
	205 NotImplemented "Instruction LDRSW not yet implemented."
	206 Move W11, [X8+24]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add W10, W9, 1
	209 Move [X0+24], W10
	210 Move X10, [X31+80]
	211 Move V0, [X31+4]
	212 Move W11, 24
	213 NotImplemented "Instruction MADD not yet implemented."
	214 Move [X8+48], X10
	215 Move [X8+2], V0
	216 Move X8, [X10+32]
	217 Move V0, [X31+4]
	218 Move X9, [X31+80]
	219 Move X8, [X8+192]
	220 Move X2, [X8+112]
	221 Move [X31+6], V0
	222 Move [X31+112], X9
	223 Add X1, X31, 96
	224 Call List`1<TreeViewItemWrapper>.AddWithResize, X0, X1
	225 Move X0, [X23+72]
	226 Compare X0, 0
	227 JumpIfEqual {347}
	228 Move X8, 0x401000
	229 Move X8, [X8+2520]
	230 Move X2, [X8]
	231 Move W1, W25
	232 Call HashSet`1<Int32>.Add, X0, X1
	233 Move X0, X23
	234 Call BaseTreeViewController.get_baseTreeView, X0
	235 NotImplemented "Instruction CMP not yet implemented."
	236 NotImplemented "Instruction CSEL not yet implemented."
	237 Compare X0, 0
	238 JumpIfEqual {121}
	239 Compare X26, 0
	240 JumpIfEqual {350}
	241 Move X8, [X26+1200]
	242 Compare X8, 0
	243 JumpIfEqual {121}
	244 Move X0, X23
	245 Call BaseTreeViewController.get_baseTreeView, X0
	246 Compare X0, 0
	247 JumpIfEqual {351}
	248 Move X25, [X0+1200]
	249 Add X0, X31, 24
	250 Move X1, X31
	251 Call TreeViewItemWrapper.get_id, X0
	252 Move W1, W0
	253 Compare X25, 0
	254 JumpIfEqual {352}
	255 Move X8, 0x403000
	256 Move X8, [X8+2920]
	257 Move X2, [X8]
	258 Move X0, X25
	259 Call List`1<Int32>.Contains, X0, X1
	260 Move TEMP, X0
	261 And TEMP, TEMP, 1
	262 Compare TEMP, 1
	263 JumpIfNotEqual {121}
	264 Add X0, X31, 24
	265 Move X1, X31
	266 Call TreeViewItemWrapper.get_hasChildren, X0
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfNotEqual {121}
	271 Add X0, X31, 24
	272 Move X1, X31
	273 Call TreeViewItemWrapper.get_id, X0
	274 Move W1, W0
	275 Move X8, [X23]
	276 Move X9, [X8+696]
	277 Move X2, [X8+704]
	278 Move X0, X23
	279 NotImplemented "Instruction BLR not yet implemented."
	280 Move X1, X0
	281 Move X0, X23
	282 Move W2, W24
	283 Move X3, X21
	284 Call BaseTreeViewController.CreateWrappers, X0, X1, X2, X3
	285 Move X23, X31
	286 Compare X20, 0
	287 JumpIfEqual {311}
	288 Move X10, 0x3FF000
	289 Move X8, [X20]
	290 Move X10, [X10+3584]
	291 NotImplemented "Instruction LDRH not yet implemented."
	292 Move X1, [X10]
	293 Compare X9, 0
	294 JumpIfEqual {301}
	295 Move X10, [X8+176]
	296 Add X10, X10, 8
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Subtract X9, X9, 1
	300 Add X10, X10, 16
	301 Move X0, X20
	302 Move W2, W31
	303 Call 0x1C5D788
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Add X8, X8, X9
	306 Add X0, X8, 312
	307 Move X8, [X0]
	308 Move X1, [X0+8]
	309 Move X0, X20
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Compare X23, 0
	312 JumpIfNotEqual {345}
	313 Move X20, X31
	314 Move X0, X19
	315 Move X1, X31
	316 Move X2, X31
	317 Call IntPtr.op_Inequality, X0, X1
	318 Move TEMP, X0
	319 And TEMP, TEMP, 1
	320 Compare TEMP, 1
	321 JumpIfNotEqual {325}
	322 Move X0, X19
	323 Move X1, X31
	324 Call ProfilerUnsafeUtility.EndSample, X0
	325 Compare X20, 0
	326 JumpIfNotEqual {342}
	327 Move X20, [X31+208]
	328 Move X19, [X31+216]
	329 Move X22, [X31+192]
	330 Move X21, [X31+200]
	331 Move X24, [X31+176]
	332 Move X23, [X31+184]
	333 Move X26, [X31+160]
	334 Move X25, [X31+168]
	335 Move X28, [X31+144]
	336 Move X27, [X31+152]
	337 Move X29, [X31+128]
	338 Move X30, [X31+136]
	339 Add X31, X31, 224
	340 Return 
	341 Call 0x1C17F20
	342 Move X0, X20
	343 Call 0x1C17F18
	344 Call 0x1C17F20
	345 Move X0, X23
	346 Call 0x1C17F18
	347 Call 0x1C17F20
	348 Call 0x1C17F20
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Move X22, X1
	354 Move X21, X0
	355 Move X22, X1
	356 Move X21, X0
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X0, X21
	359 Call 0x3EB2AD0
	360 Move X23, [X0]
	361 Call 0x3EB2AE0
	362 Move X23, X31
	363 Compare X20, 0
	364 JumpIfEqual {388}
	365 Move X10, 0x3FF000
	366 Move X8, [X20]
	367 Move X10, [X10+3584]
	368 NotImplemented "Instruction LDRH not yet implemented."
	369 Move X1, [X10]
	370 Compare X9, 0
	371 JumpIfEqual {378}
	372 Move X10, [X8+176]
	373 Add X10, X10, 8
	374 NotImplemented "Instruction LDUR not yet implemented."
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Subtract X9, X9, 1
	377 Add X10, X10, 16
	378 Move X0, X20
	379 Move W2, W31
	380 Call 0x1C5D788
	381 NotImplemented "Instruction LDRSW not yet implemented."
	382 Add X8, X8, X9
	383 Add X0, X8, 312
	384 Move X8, [X0]
	385 Move X1, [X0+8]
	386 Move X0, X20
	387 NotImplemented "Instruction BLR not yet implemented."
	388 Compare X23, 0
	389 JumpIfNotEqual {396}
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X0, X21
	392 Call 0x3EB2AD0
	393 Move X20, [X0]
	394 Call 0x3EB2AE0
	395 Move X20, X31
	396 Move X0, X23
	397 Call 0x1C17F18
	398 Move X22, X1
	399 Move X21, X0
	400 Compare X20, 0
	401 JumpIfNotEqual {365}
	402 Move X21, X0
	403 Move X0, X19
	404 Move X1, X31
	405 Move X2, X31
	406 Call IntPtr.op_Inequality, X0, X1
	407 Move TEMP, X0
	408 And TEMP, TEMP, 1
	409 Compare TEMP, 1
	410 JumpIfNotEqual {414}
	411 Move X0, X19
	412 Move X1, X31
	413 Call ProfilerUnsafeUtility.EndSample, X0
	414 Compare X20, 0
	415 JumpIfNotEqual {418}
	416 Move X0, X21
	417 Call 0x1D2D690
	418 Move X0, X20
	419 Call 0x1C17F18
	420 Call 0x1991590

Method: System.Boolean IsIndexValid(System.Int32 index)

Disassembly:
	0x03CF4D08 ADRP X0, 0x46E000
	0x03CF4D0C LDR X0, [X0 + 0xBD0]
	0x03CF4D10 BL 0x1C16CF4
	0x03CF4D14 MOVZ W8, 0x1
	0x03CF4D18 STRB W8, [X27 + 0x78D]
	0x03CF4D1C LDR X0, [X28]
	0x03CF4D20 BL 0x1C16F10
	0x03CF4D24 LDR X1, [X20]
	0x03CF4D28 MOV X20, X0
	0x03CF4D2C BL 0x2A1F3AC
	0x03CF4D30 STR X20, [X19 + 0x30]
	0x03CF4D34 LDR X0, [X26]
	0x03CF4D38 BL 0x1C16F10
	0x03CF4D3C LDR X1, [X25]
	0x03CF4D40 MOV X20, X0
	0x03CF4D44 BL 0x2FDBF14
	0x03CF4D48 STR X20, [X19 + 0x38]
	0x03CF4D4C LDR X0, [X22]
	0x03CF4D50 BL 0x1C16F10
	0x03CF4D54 LDR X1, [X21]
	0x03CF4D58 MOV X20, X0
	0x03CF4D5C BL 0x3086DBC
	0x03CF4D60 STR X20, [X19 + 0x40]
	0x03CF4D64 LDR X0, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F4000
	006 Move W8, [X21+1932]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x46F000
	014 Move X0, [X0+2960]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1932], W8
	018 Move TEMP, X19
	019 And TEMP, TEMP, -2147483648
	020 Compare TEMP, -2147483648
	021 JumpIfEqual {28}
	022 Move X8, [X20+64]
	023 Compare X8, 0
	024 JumpIfEqual {34}
	025 Move W8, [X8+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move W0, W31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Call 0x1C17F20

Method: System.Void RaiseItemParentChanged(System.Int32 id, System.Int32 newParentId)

Disassembly:
	0x03CF5C30 B.NE 0x3CF5C1C
	0x03CF5C34 MOV X0, X19
	0x03CF5C38 MOV W2, W31
	0x03CF5C3C BL 0x1C5C788
	0x03CF5C40 B 0x3CF5C50
	0x03CF5C44 LDRSW X9, [X10]
	0x03CF5C48 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move X8, [X0+40]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X4, [X8+24]
	005 Move X0, [X8+64]
	006 Move X3, [X8+40]
	007 CallNoReturn X4
	008 Return 

Method: System.Void .ctor()

Disassembly:
	0x03CF5C4C ADD X0, X8, 0x138
	0x03CF5C50 LDP X8, X1, [X0]
	0x03CF5C54 MOV X0, X19
	0x03CF5C58 BLR X8
	0x03CF5C5C TBZ X0, 0x0, 0x3CF5D70
	0x03CF5C60 LDR X8, [X19]
	0x03CF5C64 LDR X1, [X27]
	0x03CF5C68 LDRH W9, [X8 + 0x12E]
	0x03CF5C6C CBZ X9, 0x3CF5C90
	0x03CF5C70 LDR X10, [X8 + 0xB0]
	0x03CF5C74 ADD X10, X10, 0x8
	0x03CF5C78 LDUR X11, [X10 - 0x8]
	0x03CF5C7C CMP X11, X1
	0x03CF5C80 B.EQ 0x3CF5CA0
	0x03CF5C84 SUBS X9, X9, 0x1
	0x03CF5C88 ADD X10, X10, 0x10
	0x03CF5C8C B.NE 0x3CF5C78
	0x03CF5C90 MOV X0, X19
	0x03CF5C94 MOV W2, W31
	0x03CF5C98 BL 0x1C5C788
	0x03CF5C9C B 0x3CF5CAC
	0x03CF5CA0 LDRSW X9, [X10]
	0x03CF5CA4 ADD X8, X8, X9, 0x4, LSL
	0x03CF5CA8 ADD X0, X8, 0x138
	0x03CF5CAC LDP X8, X1, [X0]
	0x03CF5CB0 MOV X0, X19
	0x03CF5CB4 BLR X8
	0x03CF5CB8 MOV X1, X0
	0x03CF5CBC MOV X0, X23
	0x03CF5CC0 MOV X2, X31
	0x03CF5CC4 BL 0x3D74F58
	0x03CF5CC8 TBNZ X0, 0x0, 0x3CF5CD4
	0x03CF5CCC ADD W24, W24, 0x1
	0x03CF5CD0 B 0x3CF5C04
	0x03CF5CD4 CBZ X22, 0x3CF5DFC
	0x03CF5CD8 MOV X0, X22
	0x03CF5CDC MOV W1, W24
	0x03CF5CE0 MOV X2, X31
	0x03CF5CE4 BL 0x3DF6294
	0x03CF5CE8 ADRP X23, 0x427000
	0x03CF5CEC LDR X23, [X23 + 0x100]
	0x03CF5CF0 MOV X22, X0
	0x03CF5CF4 LDR X0, [X23]
	0x03CF5CF8 LDR W8, [X0 + 0xE0]
	0x03CF5CFC CBNZ W8, 0x3CF5D04
	0x03CF5D00 BL 0x1C16DFC
	0x03CF5D04 CBZ X22, 0x3CF5E00
	0x03CF5D08 LDR X8, [X23]
	0x03CF5D0C LDR X8, [X8 + 0xB8]
	0x03CF5D10 LDR W1, [X8 + 0x4]
	0x03CF5D14 MOV X0, X22
	0x03CF5D18 MOV X2, X31
	0x03CF5D1C BL 0x3DF3018
	0x03CF5D20 CBZ X0, 0x3CF5D44
	0x03CF5D24 ADRP X8, 0x426000
	0x03CF5D28 LDR X8, [X8 + 0x898]
	0x03CF5D2C LDR X9, [X0]
	0x03CF5D30 LDR X8, [X8]
	0x03CF5D34 LDRB W11, [X9 + 0x130]
	0x03CF5D38 LDRB W10, [X8 + 0x130]
	0x03CF5D3C CMP W11, W10
	0x03CF5D40 B.CS 0x3CF5D4C
	0x03CF5D44 MOV X2, X31
	0x03CF5D48 B 0x3CF5D60
	0x03CF5D4C LDR X9, [X9 + 0xC8]
	0x03CF5D50 ADD X9, X9, X10, 0x3, LSL
	0x03CF5D54 LDUR X9, [X9 - 0x8]
	0x03CF5D58 CMP X9, X8
	0x03CF5D5C CSEL X2, X0, X31, EQ
	0x03CF5D60 AND W3, W20, 0x1
	0x03CF5D64 MOV X0, X21
	0x03CF5D68 MOV X1, X22
	0x03CF5D6C BL 0x3CF75EC
	0x03CF5D70 MOV X20, X31
	0x03CF5D74 CBZ X19, 0x3CF5DD0
	0x03CF5D78 LDR X8, [X19]
	0x03CF5D7C LDR X1, [X25]
	0x03CF5D80 LDRH W9, [X8 + 0x12E]
	0x03CF5D84 CBZ X9, 0x3CF5DA8
	0x03CF5D88 LDR X10, [X8 + 0xB0]
	0x03CF5D8C ADD X10, X10, 0x8
	0x03CF5D90 LDUR X11, [X10 - 0x8]
	0x03CF5D94 CMP X11, X1
	0x03CF5D98 B.EQ 0x3CF5DB8
	0x03CF5D9C SUBS X9, X9, 0x1
	0x03CF5DA0 ADD X10, X10, 0x10
	0x03CF5DA4 B.NE 0x3CF5D90
	0x03CF5DA8 MOV X0, X19
	0x03CF5DAC MOV W2, W31
	0x03CF5DB0 BL 0x1C5C788
	0x03CF5DB4 B 0x3CF5DC4

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x6F3000
	013 Move X28, 0x46E000
	014 Move X20, 0x46E000
	015 Move X26, 0x400000
	016 Move X25, 0x403000
	017 Move X22, 0x46E000
	018 Move X21, 0x46E000
	019 Move X24, 0x400000
	020 Move X23, 0x406000
	021 Move X28, [X28+3008]
	022 Move X20, [X20+3016]
	023 Move X26, [X26+3632]
	024 Move W8, [X27+1933]
	025 Move X25, [X25+2928]
	026 Move X22, [X22+3024]
	027 Move X21, [X21+3032]
	028 Move X24, [X24+3592]
	029 Move X23, [X23+1672]
	030 Move X19, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {61}
	035 Move X0, 0x46E000
	036 Move X0, [X0+3016]
	037 Call 0x1C17CF4
	038 Move X0, 0x46E000
	039 Move X0, [X0+3008]
	040 Call 0x1C17CF4
	041 Move X0, 0x406000
	042 Move X0, [X0+1672]
	043 Call 0x1C17CF4
	044 Move X0, 0x400000
	045 Move X0, [X0+3592]
	046 Call 0x1C17CF4
	047 Move X0, 0x403000
	048 Move X0, [X0+2928]
	049 Call 0x1C17CF4
	050 Move X0, 0x46E000
	051 Move X0, [X0+3032]
	052 Call 0x1C17CF4
	053 Move X0, 0x400000
	054 Move X0, [X0+3632]
	055 Call 0x1C17CF4
	056 Move X0, 0x46E000
	057 Move X0, [X0+3024]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X27+1933], W8
	061 Move X0, [X28]
	062 Call 0x1C17F10
	063 Move X1, [X20]
	064 Move X20, X0
	065 Call Dictionary`2<Int32, TreeItem>..ctor, X0
	066 Move [X19+48], X20
	067 Move X0, [X26]
	068 Call 0x1C17F10
	069 Move X1, [X25]
	070 Move X20, X0
	071 Call List`1<Int32>..ctor, X0
	072 Move [X19+56], X20
	073 Move X0, [X22]
	074 Call 0x1C17F10
	075 Move X1, [X21]
	076 Move X20, X0
	077 Call List`1<TreeViewItemWrapper>..ctor, X0
	078 Move [X19+64], X20
	079 Move X0, [X24]
	080 Call 0x1C17F10
	081 Move X1, [X23]
	082 Move X20, X0
	083 Call HashSet`1<Int32>..ctor, X0
	084 Move [X19+72], X20
	085 Move X0, [X22]
	086 Call 0x1C17F10
	087 Move X1, [X21]
	088 Move X20, X0
	089 Call List`1<TreeViewItemWrapper>..ctor, X0
	090 Move [X19+80], X20
	091 Move X0, X19
	092 Move X20, [X31+80]
	093 Move X19, [X31+88]
	094 Move X22, [X31+64]
	095 Move X21, [X31+72]
	096 Move X24, [X31+48]
	097 Move X23, [X31+56]
	098 Move X26, [X31+32]
	099 Move X25, [X31+40]
	100 Move X28, [X31+16]
	101 Move X27, [X31+24]
	102 Move X1, X31
	103 Move X30, [X31+96]
	104 Call Object..ctor, X0
	105 Return 

Method: System.Void .cctor()

Disassembly:
	0x03CF5DB8 LDRSW X9, [X10]
	0x03CF5DBC ADD X8, X8, X9, 0x4, LSL
	0x03CF5DC0 ADD X0, X8, 0x138
	0x03CF5DC4 LDP X8, X1, [X0]
	0x03CF5DC8 MOV X0, X19
	0x03CF5DCC BLR X8
	0x03CF5DD0 CBNZ X20, 0x3CF5DF4
	0x03CF5DD4 LDP X20, X19, [X31 + 0x40]
	0x03CF5DD8 LDP X22, X21, [X31 + 0x30]
	0x03CF5DDC LDP X24, X23, [X31 + 0x20]
	0x03CF5DE0 LDP X26, X25, [X31 + 0x10]
	0x03CF5DE4 LDP X30, X27, [X31], #0x50
	0x03CF5DE8 RET
	0x03CF5DEC BL 0x1C16F20
	0x03CF5DF0 BL 0x1C16F20
	0x03CF5DF4 MOV X0, X20
	0x03CF5DF8 BL 0x1C16F18
	0x03CF5DFC BL 0x1C16F20
	0x03CF5E00 BL 0x1C16F20
	0x03CF5E04 B 0x3CF5E28
	0x03CF5E08 B 0x3CF5E28
	0x03CF5E0C B 0x3CF5E28
	0x03CF5E10 B 0x3CF5E28
	0x03CF5E14 B 0x3CF5E28
	0x03CF5E18 B 0x3CF5E28
	0x03CF5E1C B 0x3CF5E28
	0x03CF5E20 B 0x3CF5E28
	0x03CF5E24 B 0x3CF5E28
	0x03CF5E28 MOV X21, X0
	0x03CF5E2C CMP W1, 0x1
	0x03CF5E30 B.NE 0x3CF5E48
	0x03CF5E34 MOV X0, X21
	0x03CF5E38 BL 0x3EB1AD0
	0x03CF5E3C LDR X20, [X0]
	0x03CF5E40 BL 0x3EB1AE0
	0x03CF5E44 B 0x3CF5D74
	0x03CF5E48 MOV X20, X31
	0x03CF5E4C B 0x3CF5E54
	0x03CF5E50 MOV X21, X0
	0x03CF5E54 CBZ X19, 0x3CF5EB0
	0x03CF5E58 LDR X8, [X19]
	0x03CF5E5C LDR X1, [X25]
	0x03CF5E60 LDRH W9, [X8 + 0x12E]
	0x03CF5E64 CBZ X9, 0x3CF5E88
	0x03CF5E68 LDR X10, [X8 + 0xB0]
	0x03CF5E6C ADD X10, X10, 0x8
	0x03CF5E70 LDUR X11, [X10 - 0x8]
	0x03CF5E74 CMP X11, X1
	0x03CF5E78 B.EQ 0x3CF5E98
	0x03CF5E7C SUBS X9, X9, 0x1
	0x03CF5E80 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6F3000
	007 Move X19, 0x46E000
	008 Move X20, 0x46E000
	009 Move X21, 0x46E000
	010 Move W8, [X22+1934]
	011 Move X19, [X19+3040]
	012 Move X20, [X20+2968]
	013 Move X21, [X21+3048]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x46E000
	019 Move X0, [X0+2968]
	020 Call 0x1C17CF4
	021 Move X0, 0x46E000
	022 Move X0, [X0+3048]
	023 Call 0x1C17CF4
	024 Move X0, 0x46E000
	025 Move X0, [X0+3040]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+1934], W8
	029 Move X0, X31
	030 Call ProfilerCategory.get_Scripts
	031 Move X19, [X19]
	032 And X0, X0, 0xFFFF
	033 Move X1, X31
	034 Call ProfilerCategory.op_Implicit, X0
	035 Move W1, W0
	036 Move X0, X19
	037 Move W2, W31
	038 Move W3, W31
	039 Move X4, X31
	040 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	041 Move X8, [X20]
	042 Move W1, 1
	043 Move W2, W31
	044 Move W3, W31
	045 Move X8, [X8+184]
	046 Move X4, X31
	047 Move [X8], X0
	048 Move X0, [X21]
	049 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	050 Move X8, [X20]
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X8, [X8+184]
	056 Move [X8+8], X0
	057 Move X30, [X31+48]
	058 Return 

