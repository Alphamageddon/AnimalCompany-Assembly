Type: UnityEngine.UIElements.PointerMoveEvent

Method: System.Void .cctor()

Disassembly:
	0x03DAC248 LDR X0, [X0 + 0xCD8]
	0x03DAC24C BL 0x1C16CF4
	0x03DAC250 ADRP X0, 0x3BC000
	0x03DAC254 LDR X0, [X0 + 0x3E0]
	0x03DAC258 BL 0x1C16CF4
	0x03DAC25C ADRP X0, 0x3BC000
	0x03DAC260 LDR X0, [X0 + 0x8B0]
	0x03DAC264 BL 0x1C16CF4
	0x03DAC268 ADRP X0, 0x372000
	0x03DAC26C LDR X0, [X0 + 0xD20]
	0x03DAC270 BL 0x1C16CF4
	0x03DAC274 ADRP X0, 0x3B7000
	0x03DAC278 LDR X0, [X0 + 0x100]
	0x03DAC27C BL 0x1C16CF4
	0x03DAC280 ADRP X0, 0x370000
	0x03DAC284 LDR X0, [X0 + 0xE58]
	0x03DAC288 BL 0x1C16CF4
	0x03DAC28C MOVZ W8, 0x1
	0x03DAC290 STRB W8, [X22 + 0xFAD]
	0x03DAC294 LDR X0, [X21]
	0x03DAC298 LDR X21, [X20 + 0xA0]
	0x03DAC29C LDR W8, [X0 + 0xE0]
	0x03DAC2A0 CBNZ W8, 0x3DAC2A8
	0x03DAC2A4 BL 0x1C16DFC
	0x03DAC2A8 MOV X0, X21
	0x03DAC2AC BL 0x3DAA8E4
	0x03DAC2B0 TBZ X0, 0x0, 0x3DAC310
	0x03DAC2B4 LDR W1, [X20 + 0x9C]
	0x03DAC2B8 MOV X0, X19
	0x03DAC2BC MOV X2, X31
	0x03DAC2C0 BL 0x3DBF69C
	0x03DAC2C4 CBZ X19, 0x3DAC310
	0x03DAC2C8 ADRP X8, 0x370000
	0x03DAC2CC LDR X8, [X8 + 0xE88]
	0x03DAC2D0 LDR X9, [X19]
	0x03DAC2D4 LDR X8, [X8]
	0x03DAC2D8 LDRB W11, [X9 + 0x130]
	0x03DAC2DC LDRB W10, [X8 + 0x130]
	0x03DAC2E0 CMP W11, W10
	0x03DAC2E4 B.CC 0x3DAC310
	0x03DAC2E8 LDR X9, [X9 + 0xC8]
	0x03DAC2EC ADD X9, X9, X10, 0x3, LSL
	0x03DAC2F0 LDUR X9, [X9 - 0x8]
	0x03DAC2F4 CMP X9, X8
	0x03DAC2F8 B.NE 0x3DAC310
	0x03DAC2FC LDR W1, [X20 + 0x9C]
	0x03DAC300 MOV X0, X19
	0x03DAC304 MOV X2, X20
	0x03DAC308 MOV X3, X31
	0x03DAC30C BL 0x3DBC298
	0x03DAC310 MOV X0, X19
	0x03DAC314 MOV X1, X20
	0x03DAC318 MOV X2, X31
	0x03DAC31C BL 0x3DBF97C
	0x03DAC320 TBZ X0, 0x0, 0x3DAC444
	0x03DAC324 ADRP X8, 0x3BC000
	0x03DAC328 LDR X8, [X8 + 0x3E0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x63C000
	008 Move X19, 0x3BD000
	009 Move W8, [X20+3996]
	010 Move X19, [X19+2056]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x3BD000
	016 Move X0, [X0+2064]
	017 Call 0x1C17CF4
	018 Move X0, 0x373000
	019 Move X0, [X0+520]
	020 Call 0x1C17CF4
	021 Move X0, 0x3BD000
	022 Move X0, [X0+2072]
	023 Call 0x1C17CF4
	024 Move X0, 0x3BD000
	025 Move X0, [X0+2080]
	026 Call 0x1C17CF4
	027 Move X0, 0x3BD000
	028 Move X0, [X0+2056]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3996], W8
	032 Move X0, [X19]
	033 Move X22, 0x3BD000
	034 Move X23, 0x3BD000
	035 Move X21, 0x373000
	036 Move W8, [X0+224]
	037 Move X22, [X22+2072]
	038 Move X23, [X23+2080]
	039 Move X21, [X21+520]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X19]
	044 Move X8, [X0+184]
	045 Move X0, [X22]
	046 Move X22, 0x3BD000
	047 Move X20, [X8]
	048 Move X22, [X22+2064]
	049 Call 0x1C17F10
	050 Move X2, [X23]
	051 Move X1, X20
	052 Move X3, X31
	053 Move X19, X0
	054 Call Func`1<Object>..ctor, X0, X1, X2
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X1, [X22]
	061 Move X0, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Call 0x2D0E4C0, X0
	069 Return 

Method: System.Boolean get_isHandledByDraggable()

Disassembly:
	0x03DAC32C LDR X0, [X8]
	0x03DAC330 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W0, [X0+262]
	002 Return X0

Method: System.Void set_isHandledByDraggable(System.Boolean value)

Disassembly:
	0x03DAC334 CBNZ W8, 0x3DAC33C
	0x03DAC338 BL 0x1C16DFC
	0x03DAC33C MOV X0, X20

ISIL:
	001 And W8, W1, 1
	002 Move [X0+262], W8
	003 Return 

Method: System.Void Init()

Disassembly:
	0x03DAC340 BL 0x3DA5F4C
	0x03DAC344 MOV X21, X0
	0x03DAC348 CBZ X0, 0x3DAC488
	0x03DAC34C LDR X22, [X20 + 0x50]
	0x03DAC350 LDR X8, [X21 + 0x48]
	0x03DAC354 STR X22, [X21 + 0x50]
	0x03DAC358 CBNZ X8, 0x3DAC360
	0x03DAC35C STR X22, [X21 + 0x48]
	0x03DAC360 CBZ X22, 0x3DAC494
	0x03DAC364 ADRP X10, 0x3B6000
	0x03DAC368 LDR X8, [X22]
	0x03DAC36C LDR X10, [X10 + 0xCD8]
	0x03DAC370 LDRH W9, [X8 + 0x12E]
	0x03DAC374 LDR X1, [X10]
	0x03DAC378 CBZ X9, 0x3DAC39C
	0x03DAC37C LDR X10, [X8 + 0xB0]
	0x03DAC380 ADD X10, X10, 0x8
	0x03DAC384 LDUR X11, [X10 - 0x8]
	0x03DAC388 CMP X11, X1
	0x03DAC38C B.EQ 0x3DAC3AC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x63C000
	006 Move X21, 0x3BD000
	007 Move W8, [X20+3997]
	008 Move X21, [X21+2088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3BD000
	015 Move X0, [X0+2088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3997], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x24A4280, X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]

Method: System.Void LocalInit()

Disassembly:
	0x03DAC390 SUBS X9, X9, 0x1
	0x03DAC394 ADD X10, X10, 0x10
	0x03DAC398 B.NE 0x3DAC384
	0x03DAC39C MOV X0, X22
	0x03DAC3A0 MOV W2, W31
	0x03DAC3A4 BL 0x1C5C788
	0x03DAC3A8 B 0x3DAC3B8
	0x03DAC3AC LDRSW X9, [X10]
	0x03DAC3B0 ADD X8, X8, X9, 0x4, LSL
	0x03DAC3B4 ADD X0, X8, 0x138
	0x03DAC3B8 LDP X8, X2, [X0]
	0x03DAC3BC MOV X0, X22
	0x03DAC3C0 MOV X1, X21
	0x03DAC3C4 BLR X8
	0x03DAC3C8 MOV X22, X31
	0x03DAC3CC MOVZ W23, 0x6
	0x03DAC3D0 CBZ X21, 0x3DAC434
	0x03DAC3D4 ADRP X10, 0x347000
	0x03DAC3D8 LDR X8, [X21]
	0x03DAC3DC LDR X10, [X10 + 0xE00]
	0x03DAC3E0 LDRH W9, [X8 + 0x12E]
	0x03DAC3E4 LDR X1, [X10]
	0x03DAC3E8 CBZ X9, 0x3DAC40C
	0x03DAC3EC LDR X10, [X8 + 0xB0]
	0x03DAC3F0 ADD X10, X10, 0x8
	0x03DAC3F4 LDUR X11, [X10 - 0x8]
	0x03DAC3F8 CMP X11, X1
	0x03DAC3FC B.EQ 0x3DAC41C
	0x03DAC400 SUBS X9, X9, 0x1
	0x03DAC404 ADD X10, X10, 0x10
	0x03DAC408 B.NE 0x3DAC3F4
	0x03DAC40C MOV X0, X21
	0x03DAC410 MOV W2, W31
	0x03DAC414 BL 0x1C5C788
	0x03DAC418 B 0x3DAC428
	0x03DAC41C LDRSW X9, [X10]
	0x03DAC420 ADD X8, X8, X9, 0x4, LSL
	0x03DAC424 ADD X0, X8, 0x138
	0x03DAC428 LDP X8, X1, [X0]
	0x03DAC42C MOV X0, X21
	0x03DAC430 BLR X8
	0x03DAC434 CBNZ X22, 0x3DAC48C
	0x03DAC438 CMP W23, 0x6
	0x03DAC43C B.EQ 0x3DAC444
	0x03DAC440 CBNZ W23, 0x3DAC478
	0x03DAC444 ADRP X8, 0x3BC000
	0x03DAC448 LDR X8, [X8 + 0x8B0]
	0x03DAC44C MOV X0, X20
	0x03DAC450 MOV X1, X19
	0x03DAC454 LDR X2, [X8]
	0x03DAC458 BL 0x24A5E24
	0x03DAC45C LDR W1, [X20 + 0x9C]
	0x03DAC460 MOV X0, X19
	0x03DAC464 LDP X20, X19, [X31 + 0x20]
	0x03DAC468 LDP X22, X21, [X31 + 0x10]
	0x03DAC46C MOV X2, X31
	0x03DAC470 LDP X30, X23, [X31], #0x30
	0x03DAC474 B 0x3DBF790
	0x03DAC478 LDP X20, X19, [X31 + 0x20]
	0x03DAC47C LDP X22, X21, [X31 + 0x10]
	0x03DAC480 LDP X30, X23, [X31], #0x30
	0x03DAC484 RET
	0x03DAC488 BL 0x1C16F20
	0x03DAC48C MOV X0, X22
	0x03DAC490 BL 0x1C16F18
	0x03DAC494 BL 0x1C16F20
	0x03DAC498 B 0x3DAC49C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x63C000
	006 Move X20, 0x371000
	007 Move W8, [X21+3998]
	008 Move X20, [X20+3680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x371000
	015 Move X0, [X0+3680]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3998], W8
	019 Move X8, [X19]
	020 Move W9, 7
	021 Move [X19+48], W9
	022 Move X1, [X20]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 1
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 1
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X2, [X0+8]
	041 Move W1, 1
	042 Move X0, X19
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X19]
	045 Move X1, [X20]
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move W2, 3
	056 Move X0, X19
	057 Call 0x1C5D788
	058 Move W9, [X10]
	059 Add W9, W9, 3
	060 Add X8, X8, W9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X2, [X0+8]
	064 Move W1, 1
	065 Move X0, X19
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move [X19+262], W31
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return 

Method: System.Void .ctor()

Disassembly:
	0x03DAC49C MOV X23, X0
	0x03DAC4A0 CMP W1, 0x1
	0x03DAC4A4 B.NE 0x3DAC4C4
	0x03DAC4A8 MOV X0, X23
	0x03DAC4AC BL 0x3EB1AD0
	0x03DAC4B0 LDR X22, [X0]
	0x03DAC4B4 BL 0x3EB1AE0
	0x03DAC4B8 MOV W23, W31
	0x03DAC4BC CBNZ X21, 0x3DAC3D4
	0x03DAC4C0 B 0x3DAC434
	0x03DAC4C4 MOV X22, X31
	0x03DAC4C8 B 0x3DAC4D0
	0x03DAC4CC MOV X23, X0
	0x03DAC4D0 CBZ X21, 0x3DAC534
	0x03DAC4D4 ADRP X10, 0x347000
	0x03DAC4D8 LDR X8, [X21]
	0x03DAC4DC LDR X10, [X10 + 0xE00]
	0x03DAC4E0 LDRH W9, [X8 + 0x12E]
	0x03DAC4E4 LDR X1, [X10]
	0x03DAC4E8 CBZ X9, 0x3DAC50C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x63C000
	006 Move X21, 0x3BD000
	007 Move W8, [X20+3999]
	008 Move X21, [X21+2096]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3BD000
	015 Move X0, [X0+2096]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3999], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x24A6F98, X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call PointerMoveEvent.LocalInit, X0
	028 Return 

Method: System.Void PostDispatch(UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x03DAC4EC LDR X10, [X8 + 0xB0]
	0x03DAC4F0 ADD X10, X10, 0x8
	0x03DAC4F4 LDUR X11, [X10 - 0x8]
	0x03DAC4F8 CMP X11, X1
	0x03DAC4FC B.EQ 0x3DAC51C
	0x03DAC500 SUBS X9, X9, 0x1
	0x03DAC504 ADD X10, X10, 0x10
	0x03DAC508 B.NE 0x3DAC4F4
	0x03DAC50C MOV X0, X21
	0x03DAC510 MOV W2, W31
	0x03DAC514 BL 0x1C5C788
	0x03DAC518 B 0x3DAC528
	0x03DAC51C LDRSW X9, [X10]
	0x03DAC520 ADD X8, X8, X9, 0x4, LSL
	0x03DAC524 ADD X0, X8, 0x138
	0x03DAC528 LDP X8, X1, [X0]
	0x03DAC52C MOV X0, X21
	0x03DAC530 BLR X8
	0x03DAC534 CBNZ X22, 0x3DAC540
	0x03DAC538 MOV X0, X23
	0x03DAC53C BL 0x1D2C690
	0x03DAC540 MOV X0, X22
	0x03DAC544 BL 0x1C16F18
	0x03DAC548 BL 0x1990590
	0x03DAC54C STR X30, [X31 - 0x20]!
	0x03DAC550 STP X20, X19, [X31 + 0x10]
	0x03DAC554 ADRP X19, 0x63B000
	0x03DAC558 ADRP X20, 0x3BC000
	0x03DAC55C LDRB W8, [X19 + 0xFAE]
	0x03DAC560 LDR X20, [X20 + 0x880]
	0x03DAC564 TBNZ X8, 0x0, 0x3DAC57C
	0x03DAC568 ADRP X0, 0x3BC000
	0x03DAC56C LDR X0, [X0 + 0x880]
	0x03DAC570 BL 0x1C16CF4
	0x03DAC574 MOVZ W8, 0x1
	0x03DAC578 STRB W8, [X19 + 0xFAE]
	0x03DAC57C LDR X0, [X20]
	0x03DAC580 BL 0x1C16F10
	0x03DAC584 MOV X1, X31
	0x03DAC588 MOV X19, X0
	0x03DAC58C BL 0x33BDD8C
	0x03DAC590 LDR X8, [X20]
	0x03DAC594 LDR X8, [X8 + 0xB8]
	0x03DAC598 STR X19, [X8]
	0x03DAC59C LDP X20, X19, [X31 + 0x10]
	0x03DAC5A0 LDR X30, [X31], #0x20
	0x03DAC5A4 RET
	0x03DAC5A8 MOV X1, X31
	0x03DAC5AC B 0x33BDD8C
	0x03DAC5B0 STR X30, [X31 - 0x20]!
	0x03DAC5B4 STP X20, X19, [X31 + 0x10]
	0x03DAC5B8 ADRP X19, 0x63B000
	0x03DAC5BC ADRP X20, 0x36F000
	0x03DAC5C0 LDRB W8, [X19 + 0xFAF]
	0x03DAC5C4 LDR X20, [X20 + 0x968]
	0x03DAC5C8 TBNZ X8, 0x0, 0x3DAC5E0
	0x03DAC5CC ADRP X0, 0x36F000
	0x03DAC5D0 LDR X0, [X0 + 0x968]
	0x03DAC5D4 BL 0x1C16CF4
	0x03DAC5D8 MOVZ W8, 0x1
	0x03DAC5DC STRB W8, [X19 + 0xFAF]
	0x03DAC5E0 LDR X0, [X20]
	0x03DAC5E4 BL 0x1C16F10
	0x03DAC5E8 MOV X19, X0
	0x03DAC5EC BL 0x3DAC1B4
	0x03DAC5F0 MOV X0, X19
	0x03DAC5F4 LDP X20, X19, [X31 + 0x10]
	0x03DAC5F8 LDR X30, [X31], #0x20
	0x03DAC5FC RET
	0x03DAC600 STP X30, X23, [X31 - 0x30]!
	0x03DAC604 STP X22, X21, [X31 + 0x10]
	0x03DAC608 STP X20, X19, [X31 + 0x20]
	0x03DAC60C ADRP X20, 0x63B000
	0x03DAC610 ADRP X19, 0x3BC000
	0x03DAC614 LDRB W8, [X20 + 0xFB0]
	0x03DAC618 LDR X19, [X19 + 0x8B8]
	0x03DAC61C TBNZ X8, 0x0, 0x3DAC664
	0x03DAC620 ADRP X0, 0x3BC000
	0x03DAC624 LDR X0, [X0 + 0x8C0]
	0x03DAC628 BL 0x1C16CF4
	0x03DAC62C ADRP X0, 0x3B6000
	0x03DAC630 LDR X0, [X0 + 0x918]
	0x03DAC634 BL 0x1C16CF4
	0x03DAC638 ADRP X0, 0x3BC000
	0x03DAC63C LDR X0, [X0 + 0x8C8]
	0x03DAC640 BL 0x1C16CF4
	0x03DAC644 ADRP X0, 0x3BC000
	0x03DAC648 LDR X0, [X0 + 0x8D0]
	0x03DAC64C BL 0x1C16CF4
	0x03DAC650 ADRP X0, 0x3BC000
	0x03DAC654 LDR X0, [X0 + 0x8B8]
	0x03DAC658 BL 0x1C16CF4
	0x03DAC65C MOVZ W8, 0x1
	0x03DAC660 STRB W8, [X20 + 0xFB0]
	0x03DAC664 LDR X0, [X19]
	0x03DAC668 ADRP X22, 0x3BC000
	0x03DAC66C ADRP X23, 0x3BC000
	0x03DAC670 ADRP X21, 0x3B6000
	0x03DAC674 LDR W8, [X0 + 0xE0]
	0x03DAC678 LDR X22, [X22 + 0x8C8]
	0x03DAC67C LDR X23, [X23 + 0x8D0]
	0x03DAC680 LDR X21, [X21 + 0x918]
	0x03DAC684 CBNZ W8, 0x3DAC690
	0x03DAC688 BL 0x1C16DFC
	0x03DAC68C LDR X0, [X19]
	0x03DAC690 LDR X8, [X0 + 0xB8]
	0x03DAC694 LDR X0, [X22]
	0x03DAC698 ADRP X22, 0x3BC000
	0x03DAC69C LDR X20, [X8]
	0x03DAC6A0 LDR X22, [X22 + 0x8C0]
	0x03DAC6A4 BL 0x1C16F10
	0x03DAC6A8 LDR X2, [X23]
	0x03DAC6AC MOV X1, X20
	0x03DAC6B0 MOV X3, X31
	0x03DAC6B4 MOV X19, X0
	0x03DAC6B8 BL 0x2D27AA8
	0x03DAC6BC LDR X0, [X21]
	0x03DAC6C0 LDR W8, [X0 + 0xE0]
	0x03DAC6C4 CBNZ W8, 0x3DAC6CC
	0x03DAC6C8 BL 0x1C16DFC
	0x03DAC6CC LDR X1, [X22]
	0x03DAC6D0 MOV X0, X19
	0x03DAC6D4 LDP X20, X19, [X31 + 0x20]
	0x03DAC6D8 LDP X22, X21, [X31 + 0x10]
	0x03DAC6DC LDP X30, X23, [X31], #0x30
	0x03DAC6E0 B 0x2D0D4C0
	0x03DAC6E4 STP X30, X21, [X31 - 0x20]!
	0x03DAC6E8 STP X20, X19, [X31 + 0x10]
	0x03DAC6EC ADRP X20, 0x63B000
	0x03DAC6F0 ADRP X21, 0x3BC000
	0x03DAC6F4 LDRB W8, [X20 + 0xFB1]
	0x03DAC6F8 LDR X21, [X21 + 0x8D8]
	0x03DAC6FC MOV X19, X0
	0x03DAC700 TBNZ X8, 0x0, 0x3DAC718
	0x03DAC704 ADRP X0, 0x3BC000
	0x03DAC708 LDR X0, [X0 + 0x8D8]
	0x03DAC70C BL 0x1C16CF4
	0x03DAC710 MOVZ W8, 0x1
	0x03DAC714 STRB W8, [X20 + 0xFB1]
	0x03DAC718 LDR X1, [X21]
	0x03DAC71C MOV X0, X19
	0x03DAC720 BL 0x24A3280
	0x03DAC724 MOV X0, X19
	0x03DAC728 LDP X20, X19, [X31 + 0x10]
	0x03DAC72C LDP X30, X21, [X31], #0x20
	0x03DAC730 B 0x3DAC734
	0x03DAC734 STP X30, X21, [X31 - 0x20]!
	0x03DAC738 STP X20, X19, [X31 + 0x10]
	0x03DAC73C ADRP X21, 0x63B000
	0x03DAC740 ADRP X20, 0x370000
	0x03DAC744 LDRB W8, [X21 + 0xFB2]
	0x03DAC748 LDR X20, [X20 + 0xE60]
	0x03DAC74C MOV X19, X0
	0x03DAC750 TBNZ X8, 0x0, 0x3DAC768
	0x03DAC754 ADRP X0, 0x370000
	0x03DAC758 LDR X0, [X0 + 0xE60]
	0x03DAC75C BL 0x1C16CF4
	0x03DAC760 MOVZ W8, 0x1
	0x03DAC764 STRB W8, [X21 + 0xFB2]
	0x03DAC768 LDR X8, [X19]
	0x03DAC76C MOVZ W9, 0xB
	0x03DAC770 STR W9, [X19 + 0x30]
	0x03DAC774 LDR X1, [X20]
	0x03DAC778 LDRH W9, [X8 + 0x12E]
	0x03DAC77C CBZ X9, 0x3DAC7A0
	0x03DAC780 LDR X10, [X8 + 0xB0]
	0x03DAC784 ADD X10, X10, 0x8
	0x03DAC788 LDUR X11, [X10 - 0x8]
	0x03DAC78C CMP X11, X1
	0x03DAC790 B.EQ 0x3DAC7B0
	0x03DAC794 SUBS X9, X9, 0x1
	0x03DAC798 ADD X10, X10, 0x10
	0x03DAC79C B.NE 0x3DAC788
	0x03DAC7A0 MOVZ W2, 0x1
	0x03DAC7A4 MOV X0, X19
	0x03DAC7A8 BL 0x1C5C788
	0x03DAC7AC B 0x3DAC7C0
	0x03DAC7B0 LDR W9, [X10]
	0x03DAC7B4 ADD W9, W9, 0x1
	0x03DAC7B8 ADD X8, X8, W9, 0x4, SXTW
	0x03DAC7BC ADD X0, X8, 0x138
	0x03DAC7C0 LDP X8, X2, [X0]
	0x03DAC7C4 MOVZ W1, 0x1
	0x03DAC7C8 MOV X0, X19
	0x03DAC7CC BLR X8
	0x03DAC7D0 LDR X8, [X19]
	0x03DAC7D4 LDR X1, [X20]
	0x03DAC7D8 LDRH W9, [X8 + 0x12E]
	0x03DAC7DC CBZ X9, 0x3DAC800
	0x03DAC7E0 LDR X10, [X8 + 0xB0]
	0x03DAC7E4 ADD X10, X10, 0x8
	0x03DAC7E8 LDUR X11, [X10 - 0x8]
	0x03DAC7EC CMP X11, X1
	0x03DAC7F0 B.EQ 0x3DAC810
	0x03DAC7F4 SUBS X9, X9, 0x1
	0x03DAC7F8 ADD X10, X10, 0x10
	0x03DAC7FC B.NE 0x3DAC7E8
	0x03DAC800 MOVZ W2, 0x3
	0x03DAC804 MOV X0, X19
	0x03DAC808 BL 0x1C5C788
	0x03DAC80C B 0x3DAC820
	0x03DAC810 LDR W9, [X10]
	0x03DAC814 ADD W9, W9, 0x3
	0x03DAC818 ADD X8, X8, W9, 0x4, SXTW
	0x03DAC81C ADD X0, X8, 0x138
	0x03DAC820 LDP X3, X2, [X0]
	0x03DAC824 MOV X0, X19
	0x03DAC828 LDP X20, X19, [X31 + 0x10]
	0x03DAC82C MOVZ W1, 0x1
	0x03DAC830 LDP X30, X21, [X31], #0x20
	0x03DAC834 BR X3
	0x03DAC838 STP X30, X21, [X31 - 0x20]!
	0x03DAC83C STP X20, X19, [X31 + 0x10]
	0x03DAC840 ADRP X20, 0x63B000
	0x03DAC844 ADRP X21, 0x3BC000
	0x03DAC848 LDRB W8, [X20 + 0xFB3]
	0x03DAC84C LDR X21, [X21 + 0x8E0]
	0x03DAC850 MOV X19, X0
	0x03DAC854 TBNZ X8, 0x0, 0x3DAC86C
	0x03DAC858 ADRP X0, 0x3BC000
	0x03DAC85C LDR X0, [X0 + 0x8E0]
	0x03DAC860 BL 0x1C16CF4
	0x03DAC864 MOVZ W8, 0x1
	0x03DAC868 STRB W8, [X20 + 0xFB3]
	0x03DAC86C LDR X1, [X21]
	0x03DAC870 MOV X0, X19
	0x03DAC874 BL 0x24A5F98
	0x03DAC878 MOV X0, X19
	0x03DAC87C LDP X20, X19, [X31 + 0x10]
	0x03DAC880 LDP X30, X21, [X31], #0x20
	0x03DAC884 B 0x3DAC734
	0x03DAC888 STP X30, X23, [X31 - 0x30]!
	0x03DAC88C STP X22, X21, [X31 + 0x10]
	0x03DAC890 STP X20, X19, [X31 + 0x20]
	0x03DAC894 ADRP X22, 0x63B000
	0x03DAC898 ADRP X21, 0x370000
	0x03DAC89C LDRB W8, [X22 + 0xFB4]
	0x03DAC8A0 LDR X21, [X21 + 0xE58]
	0x03DAC8A4 MOV X19, X1
	0x03DAC8A8 MOV X20, X0
	0x03DAC8AC TBNZ X8, 0x0, 0x3DAC918
	0x03DAC8B0 ADRP X0, 0x370000
	0x03DAC8B4 LDR X0, [X0 + 0xE88]
	0x03DAC8B8 BL 0x1C16CF4
	0x03DAC8BC ADRP X0, 0x347000
	0x03DAC8C0 LDR X0, [X0 + 0xE00]
	0x03DAC8C4 BL 0x1C16CF4
	0x03DAC8C8 ADRP X0, 0x3B6000
	0x03DAC8CC LDR X0, [X0 + 0xCD8]
	0x03DAC8D0 BL 0x1C16CF4
	0x03DAC8D4 ADRP X0, 0x3BC000
	0x03DAC8D8 LDR X0, [X0 + 0x3E0]
	0x03DAC8DC BL 0x1C16CF4
	0x03DAC8E0 ADRP X0, 0x3BC000
	0x03DAC8E4 LDR X0, [X0 + 0x8E8]
	0x03DAC8E8 BL 0x1C16CF4
	0x03DAC8EC ADRP X0, 0x3B6000
	0x03DAC8F0 LDR X0, [X0 + 0xA68]
	0x03DAC8F4 BL 0x1C16CF4
	0x03DAC8F8 ADRP X0, 0x3BC000
	0x03DAC8FC LDR X0, [X0 + 0x8F0]
	0x03DAC900 BL 0x1C16CF4
	0x03DAC904 ADRP X0, 0x370000
	0x03DAC908 LDR X0, [X0 + 0xE58]
	0x03DAC90C BL 0x1C16CF4
	0x03DAC910 MOVZ W8, 0x1
	0x03DAC914 STRB W8, [X22 + 0xFB4]
	0x03DAC918 LDR X0, [X21]
	0x03DAC91C LDR X21, [X20 + 0xA0]
	0x03DAC920 LDR W8, [X0 + 0xE0]
	0x03DAC924 CBNZ W8, 0x3DAC92C
	0x03DAC928 BL 0x1C16DFC
	0x03DAC92C MOV X0, X21
	0x03DAC930 BL 0x3DAA8E4
	0x03DAC934 TBZ X0, 0x0, 0x3DAC994
	0x03DAC938 LDR W1, [X20 + 0x9C]
	0x03DAC93C MOV X0, X19
	0x03DAC940 MOV X2, X31
	0x03DAC944 BL 0x3DBF69C
	0x03DAC948 CBZ X19, 0x3DAC994
	0x03DAC94C ADRP X8, 0x370000
	0x03DAC950 LDR X8, [X8 + 0xE88]
	0x03DAC954 LDR X9, [X19]
	0x03DAC958 LDR X8, [X8]
	0x03DAC95C LDRB W11, [X9 + 0x130]
	0x03DAC960 LDRB W10, [X8 + 0x130]
	0x03DAC964 CMP W11, W10
	0x03DAC968 B.CC 0x3DAC994
	0x03DAC96C LDR X9, [X9 + 0xC8]
	0x03DAC970 ADD X9, X9, X10, 0x3, LSL
	0x03DAC974 LDUR X9, [X9 - 0x8]
	0x03DAC978 CMP X9, X8
	0x03DAC97C B.NE 0x3DAC994
	0x03DAC980 LDR W1, [X20 + 0x9C]
	0x03DAC984 MOV X0, X19
	0x03DAC988 MOV X2, X20
	0x03DAC98C MOV X3, X31
	0x03DAC990 BL 0x3DBC298
	0x03DAC994 MOV X0, X19
	0x03DAC998 MOV X1, X20
	0x03DAC99C MOV X2, X31
	0x03DAC9A0 BL 0x3DBF97C
	0x03DAC9A4 TBZ X0, 0x0, 0x3DACACC
	0x03DAC9A8 ADRP X8, 0x3BC000
	0x03DAC9AC LDR X8, [X8 + 0x3E0]
	0x03DAC9B0 LDR X0, [X8]
	0x03DAC9B4 LDR W8, [X0 + 0xE0]
	0x03DAC9B8 CBNZ W8, 0x3DAC9C0
	0x03DAC9BC BL 0x1C16DFC
	0x03DAC9C0 MOV X0, X20
	0x03DAC9C4 BL 0x3DA5FF4
	0x03DAC9C8 MOV X21, X0
	0x03DAC9CC CBZ X0, 0x3DACB10
	0x03DAC9D0 LDR X8, [X20 + 0x50]
	0x03DAC9D4 LDR X9, [X21 + 0x48]
	0x03DAC9D8 STR X8, [X21 + 0x50]
	0x03DAC9DC CBNZ X9, 0x3DAC9E4
	0x03DAC9E0 STR X8, [X21 + 0x48]
	0x03DAC9E4 LDR X22, [X20 + 0x50]
	0x03DAC9E8 CBZ X22, 0x3DACB1C
	0x03DAC9EC ADRP X10, 0x3B6000
	0x03DAC9F0 LDR X8, [X22]
	0x03DAC9F4 LDR X10, [X10 + 0xCD8]
	0x03DAC9F8 LDRH W9, [X8 + 0x12E]
	0x03DAC9FC LDR X1, [X10]
	0x03DACA00 CBZ X9, 0x3DACA24
	0x03DACA04 LDR X10, [X8 + 0xB0]
	0x03DACA08 ADD X10, X10, 0x8
	0x03DACA0C LDUR X11, [X10 - 0x8]
	0x03DACA10 CMP X11, X1
	0x03DACA14 B.EQ 0x3DACA34
	0x03DACA18 SUBS X9, X9, 0x1
	0x03DACA1C ADD X10, X10, 0x10
	0x03DACA20 B.NE 0x3DACA0C
	0x03DACA24 MOV X0, X22
	0x03DACA28 MOV W2, W31
	0x03DACA2C BL 0x1C5C788
	0x03DACA30 B 0x3DACA40
	0x03DACA34 LDRSW X9, [X10]
	0x03DACA38 ADD X8, X8, X9, 0x4, LSL
	0x03DACA3C ADD X0, X8, 0x138
	0x03DACA40 LDP X8, X2, [X0]
	0x03DACA44 MOV X0, X22
	0x03DACA48 MOV X1, X21
	0x03DACA4C BLR X8
	0x03DACA50 MOV X22, X31
	0x03DACA54 MOVZ W23, 0x6
	0x03DACA58 CBZ X21, 0x3DACABC
	0x03DACA5C ADRP X10, 0x347000
	0x03DACA60 LDR X8, [X21]
	0x03DACA64 LDR X10, [X10 + 0xE00]
	0x03DACA68 LDRH W9, [X8 + 0x12E]
	0x03DACA6C LDR X1, [X10]
	0x03DACA70 CBZ X9, 0x3DACA94
	0x03DACA74 LDR X10, [X8 + 0xB0]
	0x03DACA78 ADD X10, X10, 0x8
	0x03DACA7C LDUR X11, [X10 - 0x8]
	0x03DACA80 CMP X11, X1
	0x03DACA84 B.EQ 0x3DACAA4
	0x03DACA88 SUBS X9, X9, 0x1
	0x03DACA8C ADD X10, X10, 0x10
	0x03DACA90 B.NE 0x3DACA7C
	0x03DACA94 MOV X0, X21
	0x03DACA98 MOV W2, W31
	0x03DACA9C BL 0x1C5C788
	0x03DACAA0 B 0x3DACAB0
	0x03DACAA4 LDRSW X9, [X10]
	0x03DACAA8 ADD X8, X8, X9, 0x4, LSL
	0x03DACAAC ADD X0, X8, 0x138
	0x03DACAB0 LDP X8, X1, [X0]
	0x03DACAB4 MOV X0, X21
	0x03DACAB8 BLR X8
	0x03DACABC CBNZ X22, 0x3DACB14
	0x03DACAC0 CMP W23, 0x6
	0x03DACAC4 B.EQ 0x3DACACC
	0x03DACAC8 CBNZ W23, 0x3DACB00
	0x03DACACC ADRP X8, 0x3BC000
	0x03DACAD0 LDR X8, [X8 + 0x8E8]
	0x03DACAD4 MOV X0, X20
	0x03DACAD8 MOV X1, X19
	0x03DACADC LDR X2, [X8]
	0x03DACAE0 BL 0x24A5E24
	0x03DACAE4 LDR W1, [X20 + 0x9C]
	0x03DACAE8 MOV X0, X19
	0x03DACAEC LDP X20, X19, [X31 + 0x20]
	0x03DACAF0 LDP X22, X21, [X31 + 0x10]
	0x03DACAF4 MOV X2, X31
	0x03DACAF8 LDP X30, X23, [X31], #0x30
	0x03DACAFC B 0x3DBF790
	0x03DACB00 LDP X20, X19, [X31 + 0x20]
	0x03DACB04 LDP X22, X21, [X31 + 0x10]
	0x03DACB08 LDP X30, X23, [X31], #0x30
	0x03DACB0C RET
	0x03DACB10 BL 0x1C16F20
	0x03DACB14 MOV X0, X22
	0x03DACB18 BL 0x1C16F18
	0x03DACB1C BL 0x1C16F20
	0x03DACB20 B 0x3DACB24
	0x03DACB24 MOV X23, X0
	0x03DACB28 CMP W1, 0x1
	0x03DACB2C B.NE 0x3DACB4C
	0x03DACB30 MOV X0, X23
	0x03DACB34 BL 0x3EB1AD0
	0x03DACB38 LDR X22, [X0]
	0x03DACB3C BL 0x3EB1AE0
	0x03DACB40 MOV W23, W31
	0x03DACB44 CBNZ X21, 0x3DACA5C
	0x03DACB48 B 0x3DACABC
	0x03DACB4C MOV X22, X31
	0x03DACB50 B 0x3DACB58
	0x03DACB54 MOV X23, X0
	0x03DACB58 CBZ X21, 0x3DACBBC
	0x03DACB5C ADRP X10, 0x347000
	0x03DACB60 LDR X8, [X21]
	0x03DACB64 LDR X10, [X10 + 0xE00]
	0x03DACB68 LDRH W9, [X8 + 0x12E]
	0x03DACB6C LDR X1, [X10]
	0x03DACB70 CBZ X9, 0x3DACB94
	0x03DACB74 LDR X10, [X8 + 0xB0]
	0x03DACB78 ADD X10, X10, 0x8
	0x03DACB7C LDUR X11, [X10 - 0x8]
	0x03DACB80 CMP X11, X1
	0x03DACB84 B.EQ 0x3DACBA4
	0x03DACB88 SUBS X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x63C000
	009 Move W8, [X21+4000]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x348000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x3B7000
	020 Move X0, [X0+3288]
	021 Call 0x1C17CF4
	022 Move X0, 0x3BD000
	023 Move X0, [X0+928]
	024 Call 0x1C17CF4
	025 Move X0, 0x3BD000
	026 Move X0, [X0+1056]
	027 Call 0x1C17CF4
	028 Move X0, 0x3BD000
	029 Move X0, [X0+992]
	030 Call 0x1C17CF4
	031 Move X0, 0x3BD000
	032 Move X0, [X0+2104]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+4000], W8
	036 Move X0, X19
	037 Move X1, X20
	038 Move X2, X31
	039 Call PointerCaptureHelper.ShouldSendCompatibilityMouseEvents, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {179}
	044 Move W8, [X20+64]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 32
	047 Compare TEMP, 32
	048 JumpIfEqual {85}
	049 Move X8, 0x3BD000
	050 Move X8, [X8+1056]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X20
	057 Call MouseMoveEvent.GetPooled, X0
	058 Move X22, X0
	059 Compare X0, 0
	060 JumpIfEqual {319}
	061 Move X21, [X20+80]
	062 Move X8, [X22+72]
	063 Move [X22+80], X21
	064 Compare X8, 0
	065 JumpIfNotEqual {67}
	066 Move [X22+72], X21
	067 Compare X21, 0
	068 JumpIfEqual {320}
	069 Move X10, 0x3B7000
	070 Move X8, [X21]
	071 Move X10, [X10+3288]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Move X1, [X10]
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move X0, X21
	083 Move W2, W31
	084 Call 0x1C5D788
	085 Move X0, [X20+112]
	086 Compare X0, 0
	087 JumpIfEqual {97}
	088 Move X1, X31
	089 Call Event.get_rawType, X0
	090 Compare W0, 0
	091 JumpIfEqual {193}
	092 Move W8, [X20+64]
	093 Move TEMP, X8
	094 And TEMP, TEMP, 32
	095 Compare TEMP, 32
	096 JumpIfNotEqual {49}
	097 Move X0, [X20+112]
	098 Compare X0, 0
	099 JumpIfEqual {49}
	100 Move X1, X31
	101 Call Event.get_rawType, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, 0x3BD000
	104 Move X8, [X8+992]
	105 Move X0, [X8]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X20
	111 Call MouseUpEvent.GetPooled, X0
	112 Move X22, X0
	113 Compare X0, 0
	114 JumpIfEqual {323}
	115 Move X21, [X20+80]
	116 Move X8, [X22+72]
	117 Move [X22+80], X21
	118 Compare X8, 0
	119 JumpIfNotEqual {121}
	120 Move [X22+72], X21
	121 Compare X21, 0
	122 JumpIfEqual {324}
	123 Move X10, 0x3B7000
	124 Move X8, [X21]
	125 Move X10, [X10+3288]
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Move X1, [X10]
	128 Compare X9, 0
	129 JumpIfEqual {136}
	130 Move X10, [X8+176]
	131 Add X10, X10, 8
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Subtract X9, X9, 1
	135 Add X10, X10, 16
	136 Move X0, X21
	137 Move W2, W31
	138 Call 0x1C5D788
	139 NotImplemented "Instruction LDRSW not yet implemented."
	140 Add X8, X8, X9
	141 Add X0, X8, 312
	142 Move X8, [X0]
	143 Move X2, [X0+8]
	144 Move X0, X21
	145 Move X1, X22
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Move X21, X31
	148 Move W23, 12
	149 Compare X22, 0
	150 JumpIfEqual {174}
	151 Move X10, 0x348000
	152 Move X8, [X22]
	153 Move X10, [X10+3584]
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 Move X1, [X10]
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move X0, X22
	165 Move W2, W31
	166 Call 0x1C5D788
	167 NotImplemented "Instruction LDRSW not yet implemented."
	168 Add X8, X8, X9
	169 Add X0, X8, 312
	170 Move X8, [X0]
	171 Move X1, [X0+8]
	172 Move X0, X22
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Compare X21, 0
	175 JumpIfNotEqual {317}
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Compare W23, 0
	178 JumpIfNotEqual {309}
	179 Move X8, 0x3BD000
	180 Move X8, [X8+2104]
	181 Move X0, X20
	182 Move X1, X19
	183 Move X20, [X31+48]
	184 Move X19, [X31+56]
	185 Move X2, [X8]
	186 Move X22, [X31+32]
	187 Move X21, [X31+40]
	188 Move X30, [X31+16]
	189 Move X23, [X31+24]
	190 Add X31, X31, 64
	191 Call 0x24A6E24, X0, X1
	192 Return 
	193 Move X8, 0x3BD000
	194 Move X8, [X8+928]
	195 Move X0, [X8]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X0, X20
	201 Call MouseDownEvent.GetPooled, X0
	202 Move X22, X0
	203 Compare X0, 0
	204 JumpIfEqual {321}
	205 Move X21, [X20+80]
	206 Move X8, [X22+72]
	207 Move [X22+80], X21
	208 Compare X8, 0
	209 JumpIfNotEqual {211}
	210 Move [X22+72], X21
	211 Compare X21, 0
	212 JumpIfEqual {322}
	213 Move X10, 0x3B7000
	214 Move X8, [X21]
	215 Move X10, [X10+3288]
	216 NotImplemented "Instruction LDRH not yet implemented."
	217 Move X1, [X10]
	218 Compare X9, 0
	219 JumpIfEqual {226}
	220 Move X10, [X8+176]
	221 Add X10, X10, 8
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Subtract X9, X9, 1
	225 Add X10, X10, 16
	226 Move X0, X21
	227 Move W2, W31
	228 Call 0x1C5D788
	229 NotImplemented "Instruction LDRSW not yet implemented."
	230 Add X8, X8, X9
	231 Add X0, X8, 312
	232 Move X8, [X0]
	233 Move X2, [X0+8]
	234 Move X0, X21
	235 Move X1, X22
	236 NotImplemented "Instruction BLR not yet implemented."
	237 Move X21, X31
	238 Move W23, 6
	239 Compare X22, 0
	240 JumpIfEqual {292}
	241 Move X10, 0x348000
	242 Move X8, [X22]
	243 Move X10, [X10+3584]
	244 NotImplemented "Instruction LDRH not yet implemented."
	245 Move X1, [X10]
	246 Compare X9, 0
	247 JumpIfEqual {254}
	248 Move X10, [X8+176]
	249 Add X10, X10, 8
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Subtract X9, X9, 1
	253 Add X10, X10, 16
	254 Move X0, X22
	255 Move W2, W31
	256 Call 0x1C5D788
	257 NotImplemented "Instruction LDRSW not yet implemented."
	258 Add X8, X8, X9
	259 Add X0, X8, 312
	260 Move X8, [X0]
	261 Move X2, [X0+8]
	262 Move X0, X21
	263 Move X1, X22
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Move X21, X31
	266 Move W23, 11
	267 Compare X22, 0
	268 JumpIfEqual {304}
	269 Move X10, 0x348000
	270 Move X8, [X22]
	271 Move X10, [X10+3584]
	272 NotImplemented "Instruction LDRH not yet implemented."
	273 Move X1, [X10]
	274 Compare X9, 0
	275 JumpIfEqual {282}
	276 Move X10, [X8+176]
	277 Add X10, X10, 8
	278 NotImplemented "Instruction LDUR not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Subtract X9, X9, 1
	281 Add X10, X10, 16
	282 Move X0, X22
	283 Move W2, W31
	284 Call 0x1C5D788
	285 NotImplemented "Instruction LDRSW not yet implemented."
	286 Add X8, X8, X9
	287 Add X0, X8, 312
	288 Move X8, [X0]
	289 Move X1, [X0+8]
	290 Move X0, X22
	291 NotImplemented "Instruction BLR not yet implemented."
	292 Compare X21, 0
	293 JumpIfNotEqual {317}
	294 Compare W23, 0
	295 JumpIfEqual {179}
	296 NotImplemented "Instruction CMP not yet implemented."
	297 NotImplemented "Instruction LDRSW not yet implemented."
	298 Add X8, X8, X9
	299 Add X0, X8, 312
	300 Move X8, [X0]
	301 Move X1, [X0+8]
	302 Move X0, X22
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Compare X21, 0
	305 JumpIfNotEqual {317}
	306 Compare W23, 0
	307 JumpIfEqual {179}
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X20, [X31+48]
	310 Move X19, [X31+56]
	311 Move X22, [X31+32]
	312 Move X21, [X31+40]
	313 Move X30, [X31+16]
	314 Move X23, [X31+24]
	315 Add X31, X31, 64
	316 Return 
	317 Move X0, X21
	318 Call 0x1C17F18
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Call 0x1C17F20
	325 Move X23, X0
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Move X0, X23
	328 Call 0x3EB2AD0
	329 Move X8, [X0]
	330 Move [X31+8], X8
	331 Call 0x3EB2AE0
	332 Move X21, [X31+8]
	333 Move W23, W31
	334 Compare X22, 0
	335 JumpIfNotEqual {269}
	336 Move [X31+8], X31
	337 Move X23, X0
	338 Compare X22, 0
	339 JumpIfEqual {363}
	340 Move X10, 0x348000
	341 Move X8, [X22]
	342 Move X10, [X10+3584]
	343 NotImplemented "Instruction LDRH not yet implemented."
	344 Move X1, [X10]
	345 Compare X9, 0
	346 JumpIfEqual {353}
	347 Move X10, [X8+176]
	348 Add X10, X10, 8
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Subtract X9, X9, 1
	352 Add X10, X10, 16
	353 Move X0, X22
	354 Move W2, W31
	355 Call 0x1C5D788
	356 NotImplemented "Instruction LDRSW not yet implemented."
	357 Add X8, X8, X9
	358 Add X0, X8, 312
	359 Move X8, [X0]
	360 Move X1, [X0+8]
	361 Move X0, X22
	362 NotImplemented "Instruction BLR not yet implemented."
	363 Move X8, [X31+8]
	364 Compare X8, 0
	365 JumpIfEqual {449}
	366 Move X0, [X31+8]
	367 Call 0x1C17F18
	368 Move X23, X0
	369 NotImplemented "Instruction CMP not yet implemented."
	370 Move X0, X23
	371 Call 0x3EB2AD0
	372 Move X8, [X0]
	373 Move [X31+8], X8
	374 Call 0x3EB2AE0
	375 Move X21, [X31+8]
	376 Move W23, W31
	377 Compare X22, 0
	378 JumpIfNotEqual {241}
	379 Move [X31+8], X31
	380 Move X23, X0
	381 Compare X22, 0
	382 JumpIfEqual {406}
	383 Move X10, 0x348000
	384 Move X8, [X22]
	385 Move X10, [X10+3584]
	386 NotImplemented "Instruction LDRH not yet implemented."
	387 Move X1, [X10]
	388 Compare X9, 0
	389 JumpIfEqual {396}
	390 Move X10, [X8+176]
	391 Add X10, X10, 8
	392 NotImplemented "Instruction LDUR not yet implemented."
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Subtract X9, X9, 1
	395 Add X10, X10, 16
	396 Move X0, X22
	397 Move W2, W31
	398 Call 0x1C5D788
	399 NotImplemented "Instruction LDRSW not yet implemented."
	400 Add X8, X8, X9
	401 Add X0, X8, 312
	402 Move X8, [X0]
	403 Move X1, [X0+8]
	404 Move X0, X22
	405 NotImplemented "Instruction BLR not yet implemented."
	406 Move X8, [X31+8]
	407 Compare X8, 0
	408 JumpIfEqual {449}
	409 Move X0, [X31+8]
	410 Call 0x1C17F18
	411 Move X23, X0
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Move X0, X23
	414 Call 0x3EB2AD0
	415 Move X21, [X0]
	416 Call 0x3EB2AE0
	417 Move W23, W31
	418 Compare X22, 0
	419 JumpIfNotEqual {151}
	420 Move X21, X31
	421 Move X23, X0
	422 Compare X22, 0
	423 JumpIfEqual {447}
	424 Move X10, 0x348000
	425 Move X8, [X22]
	426 Move X10, [X10+3584]
	427 NotImplemented "Instruction LDRH not yet implemented."
	428 Move X1, [X10]
	429 Compare X9, 0
	430 JumpIfEqual {437}
	431 Move X10, [X8+176]
	432 Add X10, X10, 8
	433 NotImplemented "Instruction LDUR not yet implemented."
	434 NotImplemented "Instruction CMP not yet implemented."
	435 Subtract X9, X9, 1
	436 Add X10, X10, 16
	437 Move X0, X22
	438 Move W2, W31
	439 Call 0x1C5D788
	440 NotImplemented "Instruction LDRSW not yet implemented."
	441 Add X8, X8, X9
	442 Add X0, X8, 312
	443 Move X8, [X0]
	444 Move X1, [X0+8]
	445 Move X0, X22
	446 NotImplemented "Instruction BLR not yet implemented."
	447 Compare X21, 0
	448 JumpIfNotEqual {451}
	449 Move X0, X23
	450 Call 0x1D2D690
	451 Move X0, X21
	452 Call 0x1C17F18
	453 Call 0x1991590

