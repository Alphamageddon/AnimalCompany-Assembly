Type: UnityEngine.UIElements.Slider/UxmlTraits

Method: System.Void Init(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)

Disassembly:
	0x03D868A8 LDR X10, [X8 + 0x7E8]
	0x03D868AC LDR X1, [X8 + 0x7F0]
	0x03D868B0 MOV X0, X19
	0x03D868B4 FCSEL S9, S0, S8, EQ
	0x03D868B8 BLR X10
	0x03D868BC MOV W20, W0
	0x03D868C0 LDR X0, [X23]
	0x03D868C4 FABS S8, S8
	0x03D868C8 LDR W8, [X0 + 0xE0]
	0x03D868CC CBNZ W8, 0x3D868D4
	0x03D868D0 BL 0x1C16DFC
	0x03D868D4 ADRP X8, 0xFFFFFFFFFCD64000
	0x03D868D8 LDR V0, [X8 + 0xB8]
	0x03D868DC ADRP X8, 0x3E1000
	0x03D868E0 LDR X8, [X8 + 0x6C0]
	0x03D868E4 SCVTF S1, W20
	0x03D868E8 FMUL S0, S9, S0
	0x03D868EC FADD S0, S0, S1
	0x03D868F0 LDR X0, [X8]
	0x03D868F4 MOV V1.16B, V8.16B
	0x03D868F8 BL 0x28BC374
	0x03D868FC ADRP X20, 0x653000
	0x03D86900 LDRB W8, [X20 + 0x5D7]
	0x03D86904 MOV V8.16B, V0.16B
	0x03D86908 CBNZ W8, 0x3D86920
	0x03D8690C ADRP X0, 0x36D000
	0x03D86910 LDR X0, [X0 + 0x5A8]
	0x03D86914 BL 0x1C16CF4
	0x03D86918 MOVZ W8, 0x1
	0x03D8691C STRB W8, [X20 + 0x5D7]
	0x03D86920 ADRP X8, 0x36D000
	0x03D86924 LDR X8, [X8 + 0x5A8]
	0x03D86928 LDR X0, [X8]
	0x03D8692C LDR W8, [X0 + 0xE0]
	0x03D86930 CBNZ W8, 0x3D86938
	0x03D86934 BL 0x1C16DFC
	0x03D86938 FCVT S9, S8
	0x03D8693C ADD X0, X31, 0x8
	0x03D86940 MOV V0.16B, V9.16B
	0x03D86944 BL 0x3EB1C00
	0x03D86948 FCMP S8, 0x0
	0x03D8694C B.GE 0x3D86968
	0x03D86950 FMOV D1, -0.5
	0x03D86954 FCMP D0, D1
	0x03D86958 B.NE 0x3D86990
	0x03D8695C LDR V0, [X31 + 0x8]
	0x03D86960 FMOV D1, -1
	0x03D86964 B 0x3D8697C
	0x03D86968 FMOV D1, 0.5
	0x03D8696C FCMP D0, D1
	0x03D86970 B.NE 0x3D8699C
	0x03D86974 LDR V0, [X31 + 0x8]
	0x03D86978 FMOV D1, 1
	0x03D8697C FCVTZS X8, D0
	0x03D86980 FADD D1, D0, D1
	0x03D86984 ANDS X31, X8, 0x1
	0x03D86988 FCSEL D0, D0, D1, EQ
	0x03D8698C B 0x3D869A4
	0x03D86990 FADD D0, D9, D1
	0x03D86994 FRINTP D0, D0
	0x03D86998 B 0x3D869A4
	0x03D8699C FADD D0, D9, D1
	0x03D869A0 FRINTM D0, D0
	0x03D869A4 LDR X8, [X19]
	0x03D869A8 MOVZ X9, 0x7FF00000
	0x03D869AC FMOV D1, X9
	0x03D869B0 FCVTZS W10, D0
	0x03D869B4 LDR X3, [X8 + 0x7F8]
	0x03D869B8 LDR X2, [X8 + 0x800]
	0x03D869BC FCMP D0, D1
	0x03D869C0 MOVZ W8, 0x80000000
	0x03D869C4 CSEL W1, W8, W10, EQ
	0x03D869C8 MOV X0, X19
	0x03D869CC LDP X20, X19, [X31 + 0x40]
	0x03D869D0 LDP X22, X21, [X31 + 0x30]
	0x03D869D4 LDP X30, X23, [X31 + 0x20]
	0x03D869D8 LDP D9, D8, [X31 + 0x10]
	0x03D869DC ADD X31, X31, 0x50
	0x03D869E0 BR X3
	0x03D869E4 STP X30, X23, [X31 - 0x30]!
	0x03D869E8 STP X22, X21, [X31 + 0x10]
	0x03D869EC STP X20, X19, [X31 + 0x20]
	0x03D869F0 ADRP X23, 0x661000
	0x03D869F4 ADRP X22, 0x3E1000
	0x03D869F8 ADRP X19, 0x3E1000
	0x03D869FC ADRP X21, 0x396000
	0x03D86A00 ADRP X20, 0x396000
	0x03D86A04 LDRB W8, [X23 + 0xDF4]
	0x03D86A08 LDR X22, [X22 + 0x6C8]
	0x03D86A0C LDR X19, [X19 + 0x660]
	0x03D86A10 LDR X21, [X21 + 0xEB8]
	0x03D86A14 LDR X20, [X20 + 0xEC0]
	0x03D86A18 TBNZ X8, 0x0, 0x3D86A54
	0x03D86A1C ADRP X0, 0x3E1000
	0x03D86A20 LDR X0, [X0 + 0x660]
	0x03D86A24 BL 0x1C16CF4
	0x03D86A28 ADRP X0, 0x3E1000
	0x03D86A2C LDR X0, [X0 + 0x6C8]
	0x03D86A30 BL 0x1C16CF4
	0x03D86A34 ADRP X0, 0x396000
	0x03D86A38 LDR X0, [X0 + 0xEB8]
	0x03D86A3C BL 0x1C16CF4
	0x03D86A40 ADRP X0, 0x396000
	0x03D86A44 LDR X0, [X0 + 0xEC0]
	0x03D86A48 BL 0x1C16CF4
	0x03D86A4C MOVZ W8, 0x1
	0x03D86A50 STRB W8, [X23 + 0xDF4]
	0x03D86A54 LDR X8, [X19]
	0x03D86A58 LDR X9, [X22]
	0x03D86A5C MOV X2, X31
	0x03D86A60 LDR X8, [X8 + 0xB8]
	0x03D86A64 STR X9, [X8]
	0x03D86A68 LDR X8, [X19]
	0x03D86A6C LDR X1, [X21]
	0x03D86A70 LDR X8, [X8 + 0xB8]
	0x03D86A74 LDR X0, [X8]
	0x03D86A78 BL 0x321B938
	0x03D86A7C LDR X8, [X19]
	0x03D86A80 MOV X2, X31
	0x03D86A84 LDR X8, [X8 + 0xB8]
	0x03D86A88 STR X0, [X8 + 0x8]
	0x03D86A8C LDR X0, [X8]
	0x03D86A90 LDR X1, [X20]
	0x03D86A94 BL 0x321B938
	0x03D86A98 LDR X8, [X19]
	0x03D86A9C LDP X20, X19, [X31 + 0x20]
	0x03D86AA0 LDP X22, X21, [X31 + 0x10]
	0x03D86AA4 LDR X8, [X8 + 0xB8]
	0x03D86AA8 STR X0, [X8 + 0x10]
	0x03D86AAC LDP X30, X23, [X31], #0x30
	0x03D86AB0 RET
	0x03D86AB4 STP X30, X21, [X31 - 0x20]!
	0x03D86AB8 STP X20, X19, [X31 + 0x10]
	0x03D86ABC ADRP X20, 0x661000
	0x03D86AC0 ADRP X21, 0x3E1000
	0x03D86AC4 LDRB W8, [X20 + 0xDF5]
	0x03D86AC8 LDR X21, [X21 + 0x6D0]
	0x03D86ACC MOV X19, X0
	0x03D86AD0 TBNZ X8, 0x0, 0x3D86AE8
	0x03D86AD4 ADRP X0, 0x3E1000
	0x03D86AD8 LDR X0, [X0 + 0x6D0]
	0x03D86ADC BL 0x1C16CF4
	0x03D86AE0 MOVZ W8, 0x1
	0x03D86AE4 STRB W8, [X20 + 0xDF5]
	0x03D86AE8 LDR X1, [X21]
	0x03D86AEC MOV X0, X19
	0x03D86AF0 LDP X20, X19, [X31 + 0x10]
	0x03D86AF4 LDP X30, X21, [X31], #0x20
	0x03D86AF8 B 0x2736468
	0x03D86AFC SUB X31, X31, 0x140
	0x03D86B00 STP X29, X30, [X31 + 0x100]
	0x03D86B04 STP X24, X23, [X31 + 0x110]
	0x03D86B08 STP X22, X21, [X31 + 0x120]
	0x03D86B0C STP X20, X19, [X31 + 0x130]
	0x03D86B10 ADRP X23, 0x661000
	0x03D86B14 LDRB W8, [X23 + 0xDF6]
	0x03D86B18 MOV X22, X3
	0x03D86B1C MOV X20, X2
	0x03D86B20 MOV X19, X1
	0x03D86B24 MOV X21, X0
	0x03D86B28 TBNZ X8, 0x0, 0x3D86B7C
	0x03D86B2C ADRP X0, 0x3E1000
	0x03D86B30 LDR X0, [X0 + 0x6D8]
	0x03D86B34 BL 0x1C16CF4
	0x03D86B38 ADRP X0, 0x3E1000
	0x03D86B3C LDR X0, [X0 + 0x6E0]
	0x03D86B40 BL 0x1C16CF4
	0x03D86B44 ADRP X0, 0x3E1000
	0x03D86B48 LDR X0, [X0 + 0x6E8]
	0x03D86B4C BL 0x1C16CF4
	0x03D86B50 ADRP X0, 0x3E1000
	0x03D86B54 LDR X0, [X0 + 0x6F0]
	0x03D86B58 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+256], X29
	003 Move [X31+264], X30
	004 Move [X31+272], X24
	005 Move [X31+280], X23
	006 Move [X31+288], X22
	007 Move [X31+296], X21
	008 Move [X31+304], X20
	009 Move [X31+312], X19
	010 Move X23, 0x662000
	011 Move W8, [X23+3563]
	012 Move X22, X3
	013 Move X20, X2
	014 Move X19, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x3E2000
	021 Move X0, [X0+1352]
	022 Call 0x1C17CF4
	023 Move X0, 0x3E2000
	024 Move X0, [X0+1344]
	025 Call 0x1C17CF4
	026 Move X0, 0x3E2000
	027 Move X0, [X0+1360]
	028 Call 0x1C17CF4
	029 Move X0, 0x3E2000
	030 Move X0, [X0+1328]
	031 Call 0x1C17CF4
	032 Move X0, 0x3E2000
	033 Move X0, [X0+1424]
	034 Call 0x1C17CF4
	035 Move X0, 0x3E2000
	036 Move X0, [X0+1576]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+3563], W8
	040 Compare X19, 0
	041 JumpIfEqual {53}
	042 Move X9, 0x3E2000
	043 Move X9, [X9+1424]
	044 Move X8, [X19]
	045 Move X1, [X9]
	046 Move W10, [X8+304]
	047 Move W9, [X1+304]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X8+200]
	050 Add X8, X8, X9
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move V0, [X22]
	054 Move V1, [X22+16]
	055 Move X0, [X21+128]
	056 Move [X31+192], V0
	057 Move [X31+200], V1
	058 Compare X0, 0
	059 JumpIfEqual {216}
	060 Move X8, [X0]
	061 Move V0, [X31+192]
	062 Move V1, [X31+208]
	063 Add X2, X31, 224
	064 Move X1, X20
	065 Move X9, [X8+376]
	066 Move [X31+224], V0
	067 Move [X31+232], V1
	068 Move X3, [X8+384]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Compare X19, 0
	071 JumpIfEqual {216}
	072 Move X8, 0x3E2000
	073 Move X8, [X8+1328]
	074 Move X0, X19
	075 Move X1, [X8]
	076 Call BaseSlider`1<Single>.set_lowValue, X0, V0
	077 Move V0, [X22]
	078 Move V1, [X22+16]
	079 Move X0, [X21+136]
	080 Move [X31+160], V0
	081 Move [X31+168], V1
	082 Compare X0, 0
	083 JumpIfEqual {216}
	084 Move X8, [X0]
	085 Move V0, [X31+160]
	086 Move V1, [X31+176]
	087 Move X23, 0x3E2000
	088 Add X2, X31, 224
	089 Move X9, [X8+376]
	090 Move [X31+224], V0
	091 Move [X31+232], V1
	092 Move X3, [X8+384]
	093 Move X23, [X23+1344]
	094 Move X1, X20
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move X1, [X23]
	097 Move X0, X19
	098 Call BaseSlider`1<Single>.set_highValue, X0, V0
	099 Move V0, [X22]
	100 Move V1, [X22+16]
	101 Move X0, [X21+160]
	102 Move [X31+128], V0
	103 Move [X31+136], V1
	104 Compare X0, 0
	105 JumpIfEqual {216}
	106 Move X8, [X0]
	107 Move V0, [X31+128]
	108 Move V1, [X31+144]
	109 Move X23, 0x3E2000
	110 Add X2, X31, 224
	111 Move X9, [X8+376]
	112 Move [X31+224], V0
	113 Move [X31+232], V1
	114 Move X3, [X8+384]
	115 Move X23, [X23+1352]
	116 Move X1, X20
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X2, [X23]
	119 Move W1, W0
	120 Move X0, X19
	121 Call BaseSlider`1<Single>.set_direction, X0, X1
	122 Move V0, [X22]
	123 Move V1, [X22+16]
	124 Move X0, [X21+144]
	125 Move [X31+96], V0
	126 Move [X31+104], V1
	127 Compare X0, 0
	128 JumpIfEqual {216}
	129 Move X8, [X0]
	130 Move V0, [X31+96]
	131 Move V1, [X31+112]
	132 Add X2, X31, 224
	133 Move X1, X20
	134 Move X9, [X8+376]
	135 Move [X31+224], V0
	136 Move [X31+232], V1
	137 Move X3, [X8+384]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X8, [X19]
	140 Move X0, X19
	141 Move X9, [X8+2296]
	142 Move X1, [X8+2304]
	143 NotImplemented "Instruction BLR not yet implemented."
	144 Move V0, [X22]
	145 Move V1, [X22+16]
	146 Move X0, [X21+152]
	147 Move [X31+64], V0
	148 Move [X31+72], V1
	149 Compare X0, 0
	150 JumpIfEqual {216}
	151 Move X8, [X0]
	152 Move V0, [X31+64]
	153 Move V1, [X31+80]
	154 Add X2, X31, 224
	155 Move X1, X20
	156 Move X9, [X8+376]
	157 Move [X31+224], V0
	158 Move [X31+232], V1
	159 Move X3, [X8+384]
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move X8, [X19]
	162 And W1, W0, 1
	163 Move X0, X19
	164 Move X9, [X8+2328]
	165 Move X2, [X8+2336]
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move V0, [X22]
	168 Move V1, [X22+16]
	169 Move X0, [X21+168]
	170 Move [X31+32], V0
	171 Move [X31+40], V1
	172 Compare X0, 0
	173 JumpIfEqual {216}
	174 Move X8, [X0]
	175 Move V0, [X31+32]
	176 Move V1, [X31+48]
	177 Move X23, 0x3E2000
	178 Move X24, 0x3E2000
	179 Move X9, [X8+376]
	180 Move [X31+224], V0
	181 Move [X31+232], V1
	182 Move X3, [X8+384]
	183 Move X23, [X23+1360]
	184 Move X24, [X24+1576]
	185 Add X2, X31, 224
	186 Move X1, X20
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move X2, [X23]
	189 And W1, W0, 1
	190 Move X0, X19
	191 Call BaseSlider`1<Single>.set_inverted, X0, X1
	192 Move V1, [X22]
	193 Move V0, [X22+16]
	194 Move X4, [X24]
	195 Add X3, X31, 224
	196 Move X0, X21
	197 Move [X31], V1
	198 Move [X31+8], V0
	199 Move V0, [X31]
	200 Move V1, [X31+16]
	201 Move X1, X19
	202 Move X2, X20
	203 Move [X31+224], V0
	204 Move [X31+232], V1
	205 Call UxmlTraits<Single>.Init, X0, X1, X2, X3
	206 Move X20, [X31+304]
	207 Move X19, [X31+312]
	208 Move X22, [X31+288]
	209 Move X21, [X31+296]
	210 Move X24, [X31+272]
	211 Move X23, [X31+280]
	212 Move X29, [X31+256]
	213 Move X30, [X31+264]
	214 Add X31, X31, 320
	215 Return 
	216 Call 0x1C17F20
	217 Move X0, X19
	218 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x03D86B5C ADRP X0, 0x3E1000
	0x03D86B60 LDR X0, [X0 + 0x660]
	0x03D86B64 BL 0x1C16CF4
	0x03D86B68 ADRP X0, 0x3E1000
	0x03D86B6C LDR X0, [X0 + 0x6F8]
	0x03D86B70 BL 0x1C16CF4
	0x03D86B74 MOVZ W8, 0x1
	0x03D86B78 STRB W8, [X23 + 0xDF6]
	0x03D86B7C CBZ X19, 0x3D86BB4
	0x03D86B80 ADRP X9, 0x3E1000
	0x03D86B84 LDR X9, [X9 + 0x660]
	0x03D86B88 LDR X8, [X19]
	0x03D86B8C LDR X1, [X9]
	0x03D86B90 LDRB W10, [X8 + 0x130]
	0x03D86B94 LDRB W9, [X1 + 0x130]
	0x03D86B98 CMP W10, W9
	0x03D86B9C B.CC 0x3D86DB4
	0x03D86BA0 LDR X8, [X8 + 0xC8]
	0x03D86BA4 ADD X8, X8, X9, 0x3, LSL
	0x03D86BA8 LDUR X8, [X8 - 0x8]
	0x03D86BAC CMP X8, X1
	0x03D86BB0 B.NE 0x3D86DB4
	0x03D86BB4 LDP V0, V1, [X22]
	0x03D86BB8 LDR X0, [X21 + 0x80]
	0x03D86BBC STP V0, V1, [X31 + 0xC0]
	0x03D86BC0 CBZ X0, 0x3D86DB0
	0x03D86BC4 LDR X8, [X0]
	0x03D86BC8 LDP V0, V1, [X31 + 0xC0]
	0x03D86BCC ADD X2, X31, 0xE0
	0x03D86BD0 MOV X1, X20
	0x03D86BD4 LDR X9, [X8 + 0x178]
	0x03D86BD8 STP V0, V1, [X31 + 0xE0]
	0x03D86BDC LDR X3, [X8 + 0x180]
	0x03D86BE0 BLR X9
	0x03D86BE4 CBZ X19, 0x3D86DB0
	0x03D86BE8 ADRP X8, 0x3E1000
	0x03D86BEC LDR X8, [X8 + 0x6F0]
	0x03D86BF0 MOV W1, W0
	0x03D86BF4 MOV X0, X19
	0x03D86BF8 LDR X2, [X8]
	0x03D86BFC BL 0x28BB69C
	0x03D86C00 LDP V0, V1, [X22]
	0x03D86C04 LDR X0, [X21 + 0x88]
	0x03D86C08 STP V0, V1, [X31 + 0xA0]
	0x03D86C0C CBZ X0, 0x3D86DB0
	0x03D86C10 LDR X8, [X0]
	0x03D86C14 LDP V0, V1, [X31 + 0xA0]
	0x03D86C18 ADRP X23, 0x3E1000
	0x03D86C1C ADD X2, X31, 0xE0
	0x03D86C20 LDR X9, [X8 + 0x178]
	0x03D86C24 STP V0, V1, [X31 + 0xE0]
	0x03D86C28 LDR X3, [X8 + 0x180]
	0x03D86C2C LDR X23, [X23 + 0x6E0]
	0x03D86C30 MOV X1, X20
	0x03D86C34 BLR X9
	0x03D86C38 LDR X2, [X23]
	0x03D86C3C MOV W1, W0
	0x03D86C40 MOV X0, X19
	0x03D86C44 BL 0x28BB738
	0x03D86C48 LDP V0, V1, [X22]
	0x03D86C4C LDR X0, [X21 + 0xA0]
	0x03D86C50 STP V0, V1, [X31 + 0x80]
	0x03D86C54 CBZ X0, 0x3D86DB0
	0x03D86C58 LDR X8, [X0]
	0x03D86C5C LDP V0, V1, [X31 + 0x80]
	0x03D86C60 ADRP X23, 0x3E1000
	0x03D86C64 ADD X2, X31, 0xE0
	0x03D86C68 LDR X9, [X8 + 0x178]
	0x03D86C6C STP V0, V1, [X31 + 0xE0]
	0x03D86C70 LDR X3, [X8 + 0x180]
	0x03D86C74 LDR X23, [X23 + 0x6D8]
	0x03D86C78 MOV X1, X20
	0x03D86C7C BLR X9
	0x03D86C80 LDR X2, [X23]
	0x03D86C84 MOV W1, W0
	0x03D86C88 MOV X0, X19
	0x03D86C8C BL 0x28BBA8C
	0x03D86C90 LDP V0, V1, [X22]
	0x03D86C94 LDR X0, [X21 + 0x90]
	0x03D86C98 STP V0, V1, [X31 + 0x60]
	0x03D86C9C CBZ X0, 0x3D86DB0
	0x03D86CA0 LDR X8, [X0]
	0x03D86CA4 LDP V0, V1, [X31 + 0x60]
	0x03D86CA8 ADD X2, X31, 0xE0
	0x03D86CAC MOV X1, X20
	0x03D86CB0 LDR X9, [X8 + 0x178]
	0x03D86CB4 STP V0, V1, [X31 + 0xE0]
	0x03D86CB8 LDR X3, [X8 + 0x180]
	0x03D86CBC BLR X9
	0x03D86CC0 LDR X8, [X19]
	0x03D86CC4 SCVTF S0, W0
	0x03D86CC8 MOV X0, X19
	0x03D86CCC LDR X9, [X8 + 0x8F8]
	0x03D86CD0 LDR X1, [X8 + 0x900]
	0x03D86CD4 BLR X9
	0x03D86CD8 LDP V0, V1, [X22]
	0x03D86CDC LDR X0, [X21 + 0x98]
	0x03D86CE0 STP V0, V1, [X31 + 0x40]
	0x03D86CE4 CBZ X0, 0x3D86DB0
	0x03D86CE8 LDR X8, [X0]
	0x03D86CEC LDP V0, V1, [X31 + 0x40]
	0x03D86CF0 ADD X2, X31, 0xE0
	0x03D86CF4 MOV X1, X20
	0x03D86CF8 LDR X9, [X8 + 0x178]
	0x03D86CFC STP V0, V1, [X31 + 0xE0]
	0x03D86D00 LDR X3, [X8 + 0x180]
	0x03D86D04 BLR X9
	0x03D86D08 LDR X8, [X19]
	0x03D86D0C AND W1, W0, 0x1
	0x03D86D10 MOV X0, X19
	0x03D86D14 LDR X9, [X8 + 0x918]
	0x03D86D18 LDR X2, [X8 + 0x920]
	0x03D86D1C BLR X9
	0x03D86D20 LDP V0, V1, [X22]
	0x03D86D24 LDR X0, [X21 + 0xA8]
	0x03D86D28 STP V0, V1, [X31 + 0x20]
	0x03D86D2C CBZ X0, 0x3D86DB0
	0x03D86D30 LDR X8, [X0]
	0x03D86D34 LDP V0, V1, [X31 + 0x20]
	0x03D86D38 ADRP X23, 0x3E1000
	0x03D86D3C ADRP X24, 0x3E1000
	0x03D86D40 LDR X9, [X8 + 0x178]
	0x03D86D44 STP V0, V1, [X31 + 0xE0]
	0x03D86D48 LDR X3, [X8 + 0x180]
	0x03D86D4C LDR X23, [X23 + 0x6E8]
	0x03D86D50 LDR X24, [X24 + 0x6F8]
	0x03D86D54 ADD X2, X31, 0xE0
	0x03D86D58 MOV X1, X20
	0x03D86D5C BLR X9
	0x03D86D60 LDR X2, [X23]
	0x03D86D64 AND W1, W0, 0x1
	0x03D86D68 MOV X0, X19
	0x03D86D6C BL 0x28BBB68
	0x03D86D70 LDP V1, V0, [X22]
	0x03D86D74 LDR X4, [X24]
	0x03D86D78 ADD X3, X31, 0xE0
	0x03D86D7C MOV X0, X21
	0x03D86D80 STP V1, V0, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x662000
	006 Move X21, 0x3DE000
	007 Move W8, [X20+3564]
	008 Move X21, [X21+624]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {58}
	014 Move X0, 0x3E2000
	015 Move X0, [X0+1488]
	016 Call 0x1C17CF4
	017 Move X0, 0x3E1000
	018 Move X0, [X0+3376]
	019 Call 0x1C17CF4
	020 Move X0, 0x398000
	021 Move X0, [X0+2856]
	022 Call 0x1C17CF4
	023 Move X0, 0x398000
	024 Move X0, [X0+1880]
	025 Call 0x1C17CF4
	026 Move X0, 0x3E2000
	027 Move X0, [X0+1496]
	028 Call 0x1C17CF4
	029 Move X0, 0x3E2000
	030 Move X0, [X0+1504]
	031 Call 0x1C17CF4
	032 Move X0, 0x3DE000
	033 Move X0, [X0+624]
	034 Call 0x1C17CF4
	035 Move X0, 0x3E2000
	036 Move X0, [X0+1584]
	037 Call 0x1C17CF4
	038 Move X0, 0x3E2000
	039 Move X0, [X0+1592]
	040 Call 0x1C17CF4
	041 Move X0, 0x3E2000
	042 Move X0, [X0+344]
	043 Call 0x1C17CF4
	044 Move X0, 0x3E2000
	045 Move X0, [X0+1600]
	046 Call 0x1C17CF4
	047 Move X0, 0x398000
	048 Move X0, [X0+3104]
	049 Call 0x1C17CF4
	050 Move X0, 0x3E2000
	051 Move X0, [X0+352]
	052 Call 0x1C17CF4
	053 Move X0, 0x3E2000
	054 Move X0, [X0+1608]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X20+3564], W8
	058 Move X0, [X21]
	059 Call 0x1C17F10
	060 Move X1, X31
	061 Move X20, X0
	062 Call UxmlFloatAttributeDescription..ctor, X0
	063 Compare X20, 0
	064 JumpIfEqual {152}
	065 Move X8, 0x3E2000
	066 Move X8, [X8+344]
	067 Move X8, [X8]
	068 Move [X20+16], X8
	069 Move [X19+128], X20
	070 Move X0, [X21]
	071 Call 0x1C17F10
	072 Move X1, X31
	073 Move X20, X0
	074 Call UxmlFloatAttributeDescription..ctor, X0
	075 Compare X20, 0
	076 JumpIfEqual {152}
	077 Move X8, 0x3E2000
	078 Move X8, [X8+352]
	079 Move W9, 0x41200000
	080 Move X8, [X8]
	081 Move [X20+64], W9
	082 Move [X20+16], X8
	083 Move [X19+136], X20
	084 Move X0, [X21]
	085 Call 0x1C17F10
	086 Move X1, X31
	087 Move X20, X0
	088 Call UxmlFloatAttributeDescription..ctor, X0
	089 Compare X20, 0
	090 JumpIfEqual {152}
	091 Move X8, 0x3E2000
	092 Move X8, [X8+1600]
	093 Move X21, 0x398000
	094 Move X8, [X8]
	095 Move X21, [X21+1880]
	096 Move [X20+64], W31
	097 Move [X20+16], X8
	098 Move [X19+144], X20
	099 Move X0, [X21]
	100 Call 0x1C17F10
	101 Move X1, X31
	102 Move X20, X0
	103 Call UxmlBoolAttributeDescription..ctor, X0
	104 Compare X20, 0
	105 JumpIfEqual {152}
	106 Move X8, 0x3E2000
	107 Move X8, [X8+1608]
	108 Move X9, 0x3E2000
	109 Move X8, [X8]
	110 Move X9, [X9+1504]
	111 Move [X20+64], W31
	112 Move [X20+16], X8
	113 Move [X19+152], X20
	114 Move X0, [X9]
	115 Move X20, 0x3E2000
	116 Move X20, [X20+1496]
	117 Call 0x1C17F10
	118 Move X1, [X20]
	119 Move X20, X0
	120 Call 0x2735B10, X0
	121 Compare X20, 0
	122 JumpIfEqual {152}
	123 Move X8, 0x398000
	124 Move X8, [X8+3104]
	125 Move X8, [X8]
	126 Move [X20+64], W31
	127 Move [X20+16], X8
	128 Move [X19+160], X20
	129 Move X0, [X21]
	130 Call 0x1C17F10
	131 Move X1, X31
	132 Move X20, X0
	133 Call UxmlBoolAttributeDescription..ctor, X0
	134 Compare X20, 0
	135 JumpIfEqual {152}
	136 Move X8, 0x3E2000
	137 Move X8, [X8+1592]
	138 Move X9, 0x3E2000
	139 Move X0, X19
	140 Move X8, [X8]
	141 Move X9, [X9+1584]
	142 Move [X20+64], W31
	143 Move [X20+16], X8
	144 Move [X19+168], X20
	145 Move X1, [X9]
	146 Move X20, [X31+16]
	147 Move X19, [X31+24]
	148 Move X30, [X31+32]
	149 Move X21, [X31+40]
	150 Call UxmlTraits<Single>..ctor, X0
	151 Return 
	152 Call 0x1C17F20

