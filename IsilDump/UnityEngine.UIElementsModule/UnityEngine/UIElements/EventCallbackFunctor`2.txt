Type: UnityEngine.UIElements.EventCallbackFunctor`2

Method: TCallbackArgs get_userArgs()

Disassembly:
	0x02D0EF4C STP X23, X22, [X31 + 0x8]
	0x02D0EF50 BL 0x1C16CB0

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_userArgs(TCallbackArgs value)

Disassembly:
	0x02D0EF54 LDP X20, X19, [X31 + 0x40]
	0x02D0EF58 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Void .ctor(UnityEngine.UIElements.EventCallback`2<TEventType, TCallbackArgs> callback, TCallbackArgs userArgs, UnityEngine.UIElements.CallbackPhase phase, UnityEngine.UIElements.InvokePolicy invokePolicy)

Disassembly:
	0x02D0EF5C LDP X30, X23, [X31 + 0x20]
	0x02D0EF60 ADD X31, X31, 0x50
	0x02D0EF64 RET
	0x02D0EF68 MOV X0, X1
	0x02D0EF6C MOV X1, X31
	0x02D0EF70 B 0x1C16CB4
	0x02D0EF74 STR X30, [X31 - 0x30]!
	0x02D0EF78 STP X22, X21, [X31 + 0x10]
	0x02D0EF7C STP X20, X19, [X31 + 0x20]
	0x02D0EF80 LDR X8, [X2 + 0x8]
	0x02D0EF84 STP X1, X2, [X0 + 0x20]
	0x02D0EF88 MOV X19, X0
	0x02D0EF8C MOV X20, X2
	0x02D0EF90 STR X8, [X0 + 0x10]
	0x02D0EF94 LDRB W22, [X2 + 0x52]
	0x02D0EF98 STR X0, [X0 + 0x40]
	0x02D0EF9C MOV X0, X2
	0x02D0EFA0 MOV X21, X1
	0x02D0EFA4 BL 0x1C16D84
	0x02D0EFA8 TBZ X0, 0x0, 0x2D0EFC0
	0x02D0EFAC CMP W22, 0x2
	0x02D0EFB0 B.NE 0x2D0EFFC
	0x02D0EFB4 ADRP X8, 0xFFFFFFFFFECEE000
	0x02D0EFB8 ADD X8, X8, 0x5A8
	0x02D0EFBC B 0x2D0F040
	0x02D0EFC0 CMP W22, 0x1
	0x02D0EFC4 B.NE 0x2D0EFF8
	0x02D0EFC8 LDRB W8, [X19 + 0x70]
	0x02D0EFCC CBZ W8, 0x2D0F010
	0x02D0EFD0 MOV X0, X20
	0x02D0EFD4 BL 0x1C16D7C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X2
	007 Move X22, X1
	008 Move W1, W3
	009 Move W2, W4
	010 Move X3, X31
	011 Move X20, X5
	012 Move X19, X0
	013 Call EventCallbackFunctorBase..ctor, X0, X1, X2
	014 Move X8, [X20+32]
	015 Move X8, [X8+192]
	016 Move [X19+40], X21
	017 Move [X19+24], X22
	018 Move X0, [X8+40]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X8, [X20+32]
	030 Move X8, [X8+192]
	031 Move X0, [X8+32]
	032 Call 0x2D0E5C8
	033 Move [X19+32], X0
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Return 

Method: System.Void Invoke(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.PropagationPhase propagationPhase)

Disassembly:
	0x02D0EFD8 MOV W21, W0
	0x02D0EFDC MOV X0, X20
	0x02D0EFE0 BL 0x1C17238
	0x02D0EFE4 TBZ X21, 0x0, 0x2D0F01C
	0x02D0EFE8 TBZ X0, 0x0, 0x2D0F02C
	0x02D0EFEC ADRP X8, 0xFFFFFFFFFECEE000
	0x02D0EFF0 ADD X8, X8, 0x6C4
	0x02D0EFF4 B 0x2D0F040
	0x02D0EFF8 CBZ X21, 0x2D0F060
	0x02D0EFFC LDR X8, [X19 + 0x10]
	0x02D0F000 LDR X9, [X19 + 0x20]
	0x02D0F004 STR X8, [X19 + 0x18]
	0x02D0F008 STR X9, [X19 + 0x40]
	0x02D0F00C B 0x2D0F044
	0x02D0F010 ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F014 ADD X8, X8, 0x584
	0x02D0F018 B 0x2D0F040
	0x02D0F01C TBZ X0, 0x0, 0x2D0F038
	0x02D0F020 ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F024 ADD X8, X8, 0x5EC
	0x02D0F028 B 0x2D0F040
	0x02D0F02C ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F030 ADD X8, X8, 0x678
	0x02D0F034 B 0x2D0F040
	0x02D0F038 ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F03C ADD X8, X8, 0x5BC
	0x02D0F040 STR X8, [X19 + 0x18]
	0x02D0F044 ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F048 ADD X8, X8, 0x52C
	0x02D0F04C STR X8, [X19 + 0x38]
	0x02D0F050 LDP X20, X19, [X31 + 0x20]
	0x02D0F054 LDP X22, X21, [X31 + 0x10]
	0x02D0F058 LDR X30, [X31], #0x30
	0x02D0F05C RET
	0x02D0F060 ADRP X1, 0xFFFFFFFFFDE0C000
	0x02D0F064 ADD X1, X1, 0xEE3
	0x02D0F068 MOV X0, X31
	0x02D0F06C BL 0x1C16F3C
	0x02D0F070 MOV X1, X31
	0x02D0F074 BL 0x1C16DEC
	0x02D0F078 LDR X8, [X0 + 0x40]
	0x02D0F07C LDR X4, [X0 + 0x18]
	0x02D0F080 LDR X3, [X0 + 0x28]
	0x02D0F084 MOV X0, X8
	0x02D0F088 BR X4
	0x02D0F08C STR X30, [X31 - 0x30]!
	0x02D0F090 STP X22, X21, [X31 + 0x10]
	0x02D0F094 STP X20, X19, [X31 + 0x20]
	0x02D0F098 LDR X8, [X2 + 0x8]
	0x02D0F09C STP X1, X2, [X0 + 0x20]
	0x02D0F0A0 MOV X19, X0
	0x02D0F0A4 MOV X20, X2
	0x02D0F0A8 STR X8, [X0 + 0x10]
	0x02D0F0AC LDRB W22, [X2 + 0x52]
	0x02D0F0B0 STR X0, [X0 + 0x40]
	0x02D0F0B4 MOV X0, X2
	0x02D0F0B8 MOV X21, X1
	0x02D0F0BC BL 0x1C16D84
	0x02D0F0C0 TBZ X0, 0x0, 0x2D0F0E0
	0x02D0F0C4 ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F0C8 ADRP X9, 0xFFFFFFFFFECED000
	0x02D0F0CC ADD X8, X8, 0x7E8
	0x02D0F0D0 ADD X9, X9, 0x7B0
	0x02D0F0D4 CMP W22, 0x2
	0x02D0F0D8 CSEL X8, X9, X8, EQ
	0x02D0F0DC B 0x2D0F158
	0x02D0F0E0 CMP W22, 0x1
	0x02D0F0E4 B.NE 0x2D0F118
	0x02D0F0E8 LDRB W8, [X19 + 0x70]
	0x02D0F0EC CBZ W8, 0x2D0F128
	0x02D0F0F0 MOV X0, X20
	0x02D0F0F4 BL 0x1C16D7C
	0x02D0F0F8 MOV W21, W0
	0x02D0F0FC MOV X0, X20
	0x02D0F100 BL 0x1C17238
	0x02D0F104 TBZ X21, 0x0, 0x2D0F134
	0x02D0F108 TBZ X0, 0x0, 0x2D0F144
	0x02D0F10C ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F110 ADD X8, X8, 0x9CC
	0x02D0F114 B 0x2D0F158
	0x02D0F118 CBZ X21, 0x2D0F178
	0x02D0F11C ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F120 ADD X8, X8, 0x824
	0x02D0F124 B 0x2D0F158
	0x02D0F128 ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F12C ADD X8, X8, 0x85C
	0x02D0F130 B 0x2D0F158
	0x02D0F134 TBZ X0, 0x0, 0x2D0F150
	0x02D0F138 ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F13C ADD X8, X8, 0x8D0
	0x02D0F140 B 0x2D0F158
	0x02D0F144 ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F148 ADD X8, X8, 0x974
	0x02D0F14C B 0x2D0F158
	0x02D0F150 ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F154 ADD X8, X8, 0x894
	0x02D0F158 STR X8, [X19 + 0x18]
	0x02D0F15C ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F160 ADD X8, X8, 0x758
	0x02D0F164 STR X8, [X19 + 0x38]
	0x02D0F168 LDP X20, X19, [X31 + 0x20]
	0x02D0F16C LDP X22, X21, [X31 + 0x10]
	0x02D0F170 LDR X30, [X31], #0x30
	0x02D0F174 RET
	0x02D0F178 ADRP X1, 0xFFFFFFFFFDE0C000
	0x02D0F17C ADD X1, X1, 0xEE3
	0x02D0F180 MOV X0, X31
	0x02D0F184 BL 0x1C16F3C
	0x02D0F188 MOV X1, X31
	0x02D0F18C BL 0x1C16DEC
	0x02D0F190 LDR X8, [X0 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X3
	007 Move [X31+8], W31
	008 Compare X1, 0
	009 JumpIfEqual {88}
	010 Move X8, [X1]
	011 Move X21, X1
	012 Move X20, X0
	013 Move X0, X21
	014 Move X9, [X8+392]
	015 Move X1, [X8+400]
	016 Move W22, W2
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X8, [X20+32]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, X20
	021 Move W1, W22
	022 Move X2, X31
	023 Call EventCallbackFunctorBase.PhaseMatches, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {82}
	028 Move X1, [X20+24]
	029 Add X0, X31, 8
	030 Move X2, X21
	031 Move X3, X31
	032 Call EventDebuggerLogCall..ctor, X0, X1, X2
	033 Move X22, [X20+24]
	034 Compare X22, 0
	035 JumpIfEqual {103}
	036 Move X8, [X19+32]
	037 Move X20, [X20+40]
	038 Move X8, [X8+192]
	039 Move X1, [X8+48]
	040 Move W8, [X1+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X1
	046 Call 0x1C5D684
	047 Move X1, X0
	048 Move X0, X21
	049 Call 0x1C17E00
	050 Move X8, [X19+32]
	051 Move X21, X0
	052 Move X8, [X8+192]
	053 Move X19, [X8+48]
	054 Move W8, [X19+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X19
	060 Call 0x1C5D684
	061 Move X19, X0
	062 Compare X21, 0
	063 JumpIfEqual {73}
	064 Move X0, X21
	065 Move X1, X19
	066 Call 0x1C17E00
	067 Move X1, X0
	068 Compare X1, 0
	069 JumpIfNotEqual {74}
	070 Move X0, X21
	071 Move X1, X19
	072 Call 0x1C181E0
	073 Move X1, X31
	074 Move X0, [X22+64]
	075 Move X8, [X22+24]
	076 Move X3, [X22+40]
	077 Move X2, X20
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Add X0, X31, 8
	080 Move X1, X31
	081 Call EventDebuggerLogCall.Dispose, X0
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return 
	088 Move X0, 0x13EA000
	089 Move X0, [X0+1320]
	090 Call 0x1C17D08
	091 Call 0x1C17F10
	092 Move X20, X0
	093 Move X0, 0x1410000
	094 Move X0, [X0+3272]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X20
	098 Move X2, X31
	099 Call ArgumentNullException..ctor, X0, X1
	100 Move X0, X20
	101 Move X1, X19
	102 Call 0x1C17DEC
	103 Call 0x1C17F20
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X20, X0
	106 Move X0, X20
	107 Call 0x3EB2AD0
	108 Move X19, [X0]
	109 Call 0x3EB2AE0
	110 Add X0, X31, 8
	111 Move X1, X31
	112 Call EventDebuggerLogCall.Dispose, X0
	113 Compare X19, 0
	114 JumpIfEqual {82}
	115 Move X0, X19
	116 Call 0x1C17F18
	117 Move X19, X31
	118 Move X20, X0
	119 Add X0, X31, 8
	120 Move X1, X31
	121 Call EventDebuggerLogCall.Dispose, X0
	122 Compare X19, 0
	123 JumpIfNotEqual {126}
	124 Move X0, X20
	125 Call 0x1D2D690
	126 Move X0, X19
	127 Call 0x1C17F18
	128 Call 0x1991590

Method: System.Boolean IsEquivalentTo(System.Int64 eventTypeId, System.Delegate callback, UnityEngine.UIElements.CallbackPhase phase)

Disassembly:
	0x02D0F194 LDR X4, [X0 + 0x18]
	0x02D0F198 LDR X3, [X0 + 0x28]
	0x02D0F19C MOV X0, X8
	0x02D0F1A0 BR X4
	0x02D0F1A4 STP X30, X21, [X31 - 0x20]!
	0x02D0F1A8 STP X20, X19, [X31 + 0x10]
	0x02D0F1AC LDR X8, [X2 + 0x8]
	0x02D0F1B0 STP X1, X2, [X0 + 0x20]
	0x02D0F1B4 MOV X19, X0
	0x02D0F1B8 MOV X20, X1
	0x02D0F1BC STR X8, [X0 + 0x10]
	0x02D0F1C0 LDRB W21, [X2 + 0x52]
	0x02D0F1C4 STR X0, [X0 + 0x40]
	0x02D0F1C8 MOV X0, X2
	0x02D0F1CC BL 0x1C16D84
	0x02D0F1D0 TBZ X0, 0x0, 0x2D0F1E8
	0x02D0F1D4 CMP W21, 0x5
	0x02D0F1D8 B.NE 0x2D0F204
	0x02D0F1DC ADRP X8, 0xFFFFFFFFFECED000
	0x02D0F1E0 ADD X8, X8, 0xB0C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+32]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X20, X0
	007 Move X0, [X0+24]
	008 Move X1, X2
	009 Move X2, X31
	010 Move W19, W3
	011 Call Delegate.op_Equality, X0, X1
	012 Move TEMP, X0
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {19}
	016 Move W8, [X20+16]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSET not yet implemented."
	019 Move W0, W31
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0

