Type: UnityEngine.UIElements.WheelEvent

Method: System.Void .cctor()

Disassembly:
	0x03DA7570 BL 0x1C16F28
	0x03DA7574 STR X30, [X31 - 0x30]!
	0x03DA7578 STP X22, X21, [X31 + 0x10]
	0x03DA757C STP X20, X19, [X31 + 0x20]
	0x03DA7580 ADRP X22, 0x640000
	0x03DA7584 ADRP X21, 0x378000
	0x03DA7588 LDRB W8, [X22 + 0xF4D]
	0x03DA758C LDR X21, [X21 + 0x220]
	0x03DA7590 MOV X19, X1
	0x03DA7594 MOV X20, X0
	0x03DA7598 TBNZ X8, 0x0, 0x3DA75D4
	0x03DA759C ADRP X0, 0x375000
	0x03DA75A0 LDR X0, [X0 + 0xE88]
	0x03DA75A4 BL 0x1C16CF4
	0x03DA75A8 ADRP X0, 0x378000
	0x03DA75AC LDR X0, [X0 + 0x228]
	0x03DA75B0 BL 0x1C16CF4
	0x03DA75B4 ADRP X0, 0x378000
	0x03DA75B8 LDR X0, [X0 + 0x220]
	0x03DA75BC BL 0x1C16CF4
	0x03DA75C0 ADRP X0, 0x3C1000
	0x03DA75C4 LDR X0, [X0 + 0x5B0]
	0x03DA75C8 BL 0x1C16CF4
	0x03DA75CC MOVZ W8, 0x1
	0x03DA75D0 STRB W8, [X22 + 0xF4D]
	0x03DA75D4 LDR X8, [X20]
	0x03DA75D8 LDR X1, [X21]
	0x03DA75DC LDRH W9, [X8 + 0x12E]
	0x03DA75E0 CBZ X9, 0x3DA7604
	0x03DA75E4 LDR X10, [X8 + 0xB0]
	0x03DA75E8 ADD X10, X10, 0x8
	0x03DA75EC LDUR X11, [X10 - 0x8]
	0x03DA75F0 CMP X11, X1
	0x03DA75F4 B.EQ 0x3DA7614
	0x03DA75F8 SUBS X9, X9, 0x1
	0x03DA75FC ADD X10, X10, 0x10
	0x03DA7600 B.NE 0x3DA75EC
	0x03DA7604 MOVZ W2, 0x4
	0x03DA7608 MOV X0, X20
	0x03DA760C BL 0x1C5C788
	0x03DA7610 B 0x3DA7624
	0x03DA7614 LDR W9, [X10]
	0x03DA7618 ADD W9, W9, 0x4
	0x03DA761C ADD X8, X8, W9, 0x4, SXTW
	0x03DA7620 ADD X0, X8, 0x138
	0x03DA7624 LDP X8, X1, [X0]
	0x03DA7628 ADRP X21, 0x3C1000
	0x03DA762C LDR X21, [X21 + 0x5B0]
	0x03DA7630 MOV X0, X20
	0x03DA7634 BLR X8
	0x03DA7638 CBZ X0, 0x3DA7670
	0x03DA763C ADRP X8, 0x378000
	0x03DA7640 LDR X8, [X8 + 0x228]
	0x03DA7644 LDR X9, [X0]
	0x03DA7648 LDR X8, [X8]
	0x03DA764C LDRB W11, [X9 + 0x130]
	0x03DA7650 LDRB W10, [X8 + 0x130]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x641000
	008 Move X19, 0x3C2000
	009 Move W8, [X20+3888]
	010 Move X19, [X19+1120]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x3C2000
	016 Move X0, [X0+1128]
	017 Call 0x1C17CF4
	018 Move X0, 0x3C2000
	019 Move X0, [X0+112]
	020 Call 0x1C17CF4
	021 Move X0, 0x3C2000
	022 Move X0, [X0+1136]
	023 Call 0x1C17CF4
	024 Move X0, 0x3C2000
	025 Move X0, [X0+1144]
	026 Call 0x1C17CF4
	027 Move X0, 0x3C2000
	028 Move X0, [X0+1120]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3888], W8
	032 Move X0, [X19]
	033 Move X22, 0x3C2000
	034 Move X23, 0x3C2000
	035 Move X21, 0x3C2000
	036 Move W8, [X0+224]
	037 Move X22, [X22+1136]
	038 Move X23, [X23+1144]
	039 Move X21, [X21+112]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X19]
	044 Move X8, [X0+184]
	045 Move X0, [X22]
	046 Move X22, 0x3C2000
	047 Move X20, [X8]
	048 Move X22, [X22+1128]
	049 Call 0x1C17F10
	050 Move X2, [X23]
	051 Move X1, X20
	052 Move X3, X31
	053 Move X19, X0
	054 Call Func`1<Object>..ctor, X0, X1, X2
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X1, [X22]
	061 Move X0, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Call 0x2D0E4C0, X0
	069 Return 

Method: UnityEngine.Vector3 get_delta()

Disassembly:
	0x03DA7654 CMP W11, W10
	0x03DA7658 B.CC 0x3DA7670
	0x03DA765C LDR X9, [X9 + 0xC8]

ISIL:
	001 Move S0, [X0+184]
	002 Move S1, [X0+188]
	003 Move V2, [X0+192]
	004 Return X0

Method: System.Void set_delta(UnityEngine.Vector3 value)

Disassembly:
	0x03DA7660 ADD X9, X9, X10, 0x3, LSL
	0x03DA7664 LDUR X9, [X9 - 0x8]
	0x03DA7668 CMP X9, X8

ISIL:
	001 Move [X0+184], S0
	002 Move [X0+192], S1
	003 Move [X0+192], S2
	004 Return 

Method: UnityEngine.UIElements.WheelEvent GetPooled(UnityEngine.Event systemEvent)

Disassembly:
	0x03DA766C B.EQ 0x3DA76B4
	0x03DA7670 CBZ X19, 0x3DA76B4
	0x03DA7674 ADRP X8, 0x375000
	0x03DA7678 LDR X8, [X8 + 0xE88]
	0x03DA767C LDR X9, [X19]
	0x03DA7680 LDR X8, [X8]
	0x03DA7684 LDRB W11, [X9 + 0x130]
	0x03DA7688 LDRB W10, [X8 + 0x130]
	0x03DA768C CMP W11, W10
	0x03DA7690 B.CC 0x3DA76B4
	0x03DA7694 LDR X9, [X9 + 0xC8]
	0x03DA7698 ADD X9, X9, X10, 0x3, LSL
	0x03DA769C LDUR X9, [X9 - 0x8]
	0x03DA76A0 CMP X9, X8
	0x03DA76A4 B.NE 0x3DA76B4
	0x03DA76A8 MOV X0, X19
	0x03DA76AC MOV X1, X31
	0x03DA76B0 BL 0x3DBC2C0
	0x03DA76B4 LDR X2, [X21]
	0x03DA76B8 MOV X0, X20
	0x03DA76BC MOV X1, X19
	0x03DA76C0 LDP X20, X19, [X31 + 0x20]
	0x03DA76C4 LDP X22, X21, [X31 + 0x10]
	0x03DA76C8 LDR X30, [X31], #0x30
	0x03DA76CC B 0x31A0584
	0x03DA76D0 STR X30, [X31 - 0x20]!
	0x03DA76D4 STP X20, X19, [X31 + 0x10]
	0x03DA76D8 ADRP X19, 0x640000
	0x03DA76DC ADRP X20, 0x3C1000
	0x03DA76E0 LDRB W8, [X19 + 0xF4E]
	0x03DA76E4 LDR X20, [X20 + 0x578]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x641000
	006 Move X21, 0x3C2000
	007 Move W8, [X20+3889]
	008 Move X21, [X21+1152]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3C2000
	015 Move X0, [X0+1152]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3889], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x31A17A0, X0
	022 Compare X0, 0
	023 JumpIfEqual {41}
	024 Move X1, X19
	025 Move X20, X0
	026 Call EventBase.set_imguiEvent, X0, X1
	027 Compare X19, 0
	028 JumpIfEqual {35}
	029 Move X0, X19
	030 Move X1, X31
	031 Call Event.get_delta, X0
	032 Move [X20+184], S0
	033 Move [X20+192], S1
	034 Move [X20+192], W31
	035 Move X0, X20
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0
	041 Call 0x1C17F20

Method: UnityEngine.UIElements.WheelEvent GetPooled(UnityEngine.Vector3 delta, UnityEngine.Vector3 mousePosition, UnityEngine.EventModifiers modifiers = 0)

Disassembly:
	0x03DA76E8 TBNZ X8, 0x0, 0x3DA7700
	0x03DA76EC ADRP X0, 0x3C1000
	0x03DA76F0 LDR X0, [X0 + 0x578]
	0x03DA76F4 BL 0x1C16CF4
	0x03DA76F8 MOVZ W8, 0x1
	0x03DA76FC STRB W8, [X19 + 0xF4E]
	0x03DA7700 LDR X0, [X20]
	0x03DA7704 BL 0x1C16F10
	0x03DA7708 MOV X1, X31
	0x03DA770C MOV X19, X0
	0x03DA7710 BL 0x33BDD8C
	0x03DA7714 LDR X8, [X20]
	0x03DA7718 LDR X8, [X8 + 0xB8]
	0x03DA771C STR X19, [X8]
	0x03DA7720 LDP X20, X19, [X31 + 0x10]
	0x03DA7724 LDR X30, [X31], #0x20
	0x03DA7728 RET
	0x03DA772C MOV X1, X31
	0x03DA7730 B 0x33BDD8C
	0x03DA7734 STR X30, [X31 - 0x20]!
	0x03DA7738 STP X20, X19, [X31 + 0x10]
	0x03DA773C ADRP X19, 0x640000
	0x03DA7740 ADRP X20, 0x3C1000
	0x03DA7744 LDRB W8, [X19 + 0xF4F]
	0x03DA7748 LDR X20, [X20 + 0x360]
	0x03DA774C TBNZ X8, 0x0, 0x3DA7764
	0x03DA7750 ADRP X0, 0x3C1000
	0x03DA7754 LDR X0, [X0 + 0x360]
	0x03DA7758 BL 0x1C16CF4
	0x03DA775C MOVZ W8, 0x1
	0x03DA7760 STRB W8, [X19 + 0xF4F]
	0x03DA7764 LDR X0, [X20]
	0x03DA7768 BL 0x1C16F10
	0x03DA776C MOV X19, X0
	0x03DA7770 BL 0x3DA73F4
	0x03DA7774 MOV X0, X19
	0x03DA7778 LDP X20, X19, [X31 + 0x10]
	0x03DA777C LDR X30, [X31], #0x20
	0x03DA7780 RET
	0x03DA7784 STP X30, X23, [X31 - 0x30]!
	0x03DA7788 STP X22, X21, [X31 + 0x10]
	0x03DA778C STP X20, X19, [X31 + 0x20]
	0x03DA7790 ADRP X20, 0x640000
	0x03DA7794 ADRP X19, 0x3C1000
	0x03DA7798 LDRB W8, [X20 + 0xF50]
	0x03DA779C LDR X19, [X19 + 0x5B8]
	0x03DA77A0 TBNZ X8, 0x0, 0x3DA77E8
	0x03DA77A4 ADRP X0, 0x3C1000
	0x03DA77A8 LDR X0, [X0 + 0x5C0]
	0x03DA77AC BL 0x1C16CF4

ISIL:
	001 Move [X31-80], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x641000
	011 Move X20, 0x3C2000
	012 Move W8, [X21+3890]
	013 Move X20, [X20+112]
	014 Move W19, W0
	015 Move V8, V4
	016 Move V9, V3
	017 Move V10, V2
	018 Move V11, V1
	019 Move V12, V0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x3C2000
	025 Move X0, [X0+1160]
	026 Call 0x1C17CF4
	027 Move X0, 0x3C2000
	028 Move X0, [X0+112]
	029 Call 0x1C17CF4
	030 Move X0, 0x3C2000
	031 Move X0, [X0+1168]
	032 Call 0x1C17CF4
	033 Move X0, 0x3C2000
	034 Move X0, [X0+1176]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3890], W8
	038 Move X0, [X20]
	039 Move X20, 0x3C2000
	040 Move W8, [X0+224]
	041 Move X20, [X20+1160]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, [X20]
	046 Call 0x2D0E6C4
	047 Compare X0, 0
	048 JumpIfEqual {65}
	049 Move [X0+184], S12
	050 Move [X0+192], S11
	051 Move [X0+192], S10
	052 Move [X0+136], S9
	053 Move [X0+144], S8
	054 Move [X0+132], W19
	055 Move X20, [X31+64]
	056 Move X19, [X31+72]
	057 Move X30, [X31+48]
	058 Move X21, [X31+56]
	059 Move D9, [X31+32]
	060 Move D8, [X31+40]
	061 Move D11, [X31+16]
	062 Move D10, [X31+24]
	063 Move V12, [X31+80]
	064 Return X0
	065 Call 0x1C17F20

Method: UnityEngine.UIElements.WheelEvent GetPooled(UnityEngine.Vector3 delta, UnityEngine.UIElements.IPointerEvent pointerEvent)

Disassembly:
	0x03DA77B0 ADRP X0, 0x3C1000
	0x03DA77B4 LDR X0, [X0 + 0x5C8]
	0x03DA77B8 BL 0x1C16CF4
	0x03DA77BC ADRP X0, 0x3C1000
	0x03DA77C0 LDR X0, [X0 + 0x5D0]
	0x03DA77C4 BL 0x1C16CF4
	0x03DA77C8 ADRP X0, 0x3C1000
	0x03DA77CC LDR X0, [X0 + 0x5D8]
	0x03DA77D0 BL 0x1C16CF4
	0x03DA77D4 ADRP X0, 0x3C1000
	0x03DA77D8 LDR X0, [X0 + 0x5B8]
	0x03DA77DC BL 0x1C16CF4
	0x03DA77E0 MOVZ W8, 0x1
	0x03DA77E4 STRB W8, [X20 + 0xF50]
	0x03DA77E8 LDR X0, [X19]
	0x03DA77EC ADRP X22, 0x3C1000
	0x03DA77F0 ADRP X23, 0x3C1000
	0x03DA77F4 ADRP X21, 0x3C1000
	0x03DA77F8 LDR W8, [X0 + 0xE0]
	0x03DA77FC LDR X22, [X22 + 0x5D0]
	0x03DA7800 LDR X23, [X23 + 0x5D8]
	0x03DA7804 LDR X21, [X21 + 0x5C8]
	0x03DA7808 CBNZ W8, 0x3DA7814
	0x03DA780C BL 0x1C16DFC
	0x03DA7810 LDR X0, [X19]
	0x03DA7814 LDR X8, [X0 + 0xB8]
	0x03DA7818 LDR X0, [X22]
	0x03DA781C ADRP X22, 0x3C1000
	0x03DA7820 LDR X20, [X8]
	0x03DA7824 LDR X22, [X22 + 0x5C0]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x641000
	009 Move X21, 0x3C2000
	010 Move W8, [X20+3891]
	011 Move X21, [X21+1184]
	012 Move X19, X0
	013 Move V8, V2
	014 Move V9, V1
	015 Move V10, V0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x3C2000
	021 Move X0, [X0+1184]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3891], W8
	025 Move X1, [X21]
	026 Move X0, X19
	027 Call 0x31A2184, X0
	028 Compare X0, 0
	029 JumpIfEqual {41}
	030 Move [X0+184], S10
	031 Move [X0+192], S9
	032 Move [X0+192], S8
	033 Move X20, [X31+48]
	034 Move X19, [X31+56]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Move D9, [X31+16]
	038 Move D8, [X31+24]
	039 Move V10, [X31+64]
	040 Return X0
	041 Call 0x1C17F20

Method: System.Void Init()

Disassembly:
	0x03DA7828 BL 0x1C16F10
	0x03DA782C LDR X2, [X23]
	0x03DA7830 MOV X1, X20
	0x03DA7834 MOV X3, X31
	0x03DA7838 MOV X19, X0
	0x03DA783C BL 0x2D27AA8
	0x03DA7840 LDR X0, [X21]
	0x03DA7844 LDR W8, [X0 + 0xE0]
	0x03DA7848 CBNZ W8, 0x3DA7850
	0x03DA784C BL 0x1C16DFC
	0x03DA7850 LDR X1, [X22]
	0x03DA7854 MOV X0, X19
	0x03DA7858 LDP X20, X19, [X31 + 0x20]
	0x03DA785C LDP X22, X21, [X31 + 0x10]
	0x03DA7860 LDP X30, X23, [X31], #0x30
	0x03DA7864 B 0x2D0D4C0
	0x03DA7868 STP X30, X21, [X31 - 0x20]!
	0x03DA786C STP X20, X19, [X31 + 0x10]
	0x03DA7870 ADRP X20, 0x640000
	0x03DA7874 ADRP X21, 0x3C1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x641000
	006 Move X21, 0x3C2000
	007 Move W8, [X20+3892]
	008 Move X21, [X21+1192]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3C2000
	015 Move X0, [X0+1192]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3892], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x31A10F4, X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]

Method: System.Void LocalInit()

Disassembly:
	0x03DA7878 LDRB W8, [X20 + 0xF51]
	0x03DA787C LDR X21, [X21 + 0x5E0]
	0x03DA7880 MOV X19, X0
	0x03DA7884 TBNZ X8, 0x0, 0x3DA789C
	0x03DA7888 ADRP X0, 0x3C1000
	0x03DA788C LDR X0, [X0 + 0x5E0]
	0x03DA7890 BL 0x1C16CF4
	0x03DA7894 MOVZ W8, 0x1
	0x03DA7898 STRB W8, [X20 + 0xF51]
	0x03DA789C LDR X1, [X21]
	0x03DA78A0 MOV X0, X19
	0x03DA78A4 LDP X20, X19, [X31 + 0x10]
	0x03DA78A8 LDP X30, X21, [X31], #0x20
	0x03DA78AC B 0x31A1898
	0x03DA78B0 STR X30, [X31 - 0x20]!
	0x03DA78B4 STP X20, X19, [X31 + 0x10]
	0x03DA78B8 ADRP X19, 0x640000
	0x03DA78BC ADRP X20, 0x3C1000
	0x03DA78C0 LDRB W8, [X19 + 0xF52]
	0x03DA78C4 LDR X20, [X20 + 0x5B8]
	0x03DA78C8 TBNZ X8, 0x0, 0x3DA78E0
	0x03DA78CC ADRP X0, 0x3C1000
	0x03DA78D0 LDR X0, [X0 + 0x5B8]
	0x03DA78D4 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, 15
	005 Move [X0+48], W8
	006 Move X20, 0x632000
	007 Move W8, [X20+1923]
	008 Move X19, X0
	009 Compare W8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, 0x34D000
	012 Move X0, [X0+1440]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1923], W8
	016 Move X8, 0x34D000
	017 Move X8, [X8+1440]
	018 Move X8, [X8]
	019 Move X8, [X8+184]
	020 Move V0, [X8]
	021 Move V1, [X8+8]
	022 Move [X19+184], D0
	023 Move [X19+192], S1
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

Method: System.Void .ctor()

Disassembly:
	0x03DA78D8 MOVZ W8, 0x1
	0x03DA78DC STRB W8, [X19 + 0xF52]
	0x03DA78E0 LDR X0, [X20]
	0x03DA78E4 BL 0x1C16F10
	0x03DA78E8 MOV X1, X31
	0x03DA78EC MOV X19, X0
	0x03DA78F0 BL 0x33BDD8C
	0x03DA78F4 LDR X8, [X20]
	0x03DA78F8 LDR X8, [X8 + 0xB8]
	0x03DA78FC STR X19, [X8]
	0x03DA7900 LDP X20, X19, [X31 + 0x10]
	0x03DA7904 LDR X30, [X31], #0x20
	0x03DA7908 RET
	0x03DA790C MOV X1, X31
	0x03DA7910 B 0x33BDD8C
	0x03DA7914 STR X30, [X31 - 0x20]!
	0x03DA7918 STP X20, X19, [X31 + 0x10]
	0x03DA791C ADRP X19, 0x640000
	0x03DA7920 ADRP X20, 0x3C1000
	0x03DA7924 LDRB W8, [X19 + 0xF53]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x641000
	006 Move X21, 0x3C2000
	007 Move W8, [X20+3893]
	008 Move X21, [X21+1200]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3C2000
	015 Move X0, [X0+1200]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3893], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x31A2898, X0
	022 Move X0, X19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Call WheelEvent.LocalInit, X0
	028 Return 

