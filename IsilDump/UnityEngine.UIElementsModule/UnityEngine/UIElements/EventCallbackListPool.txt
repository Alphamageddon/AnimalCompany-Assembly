Type: UnityEngine.UIElements.EventCallbackListPool

Method: UnityEngine.UIElements.EventCallbackList Get(UnityEngine.UIElements.EventCallbackList initializer)

Disassembly:
	0x03DA1930 MOV X0, X19
	0x03DA1934 BL 0x1C16F18
	0x03DA1938 CMP W1, 0x1
	0x03DA193C B.NE 0x3DA195C
	0x03DA1940 BL 0x3EB1AD0
	0x03DA1944 LDR X19, [X0]
	0x03DA1948 BL 0x3EB1AE0
	0x03DA194C CBZ X19, 0x3DA18B8
	0x03DA1950 MOV X0, X19
	0x03DA1954 BL 0x1C16F18
	0x03DA1958 CBNZ X19, 0x3DA1960
	0x03DA195C BL 0x1D2C690
	0x03DA1960 MOV X0, X19
	0x03DA1964 BL 0x1C16F18
	0x03DA1968 BL 0x1990590
	0x03DA196C LDR X8, [X0 + 0x18]
	0x03DA1970 CBZ X8, 0x3DA198C
	0x03DA1974 LDR X8, [X8 + 0x10]
	0x03DA1978 CBZ X8, 0x3DA198C
	0x03DA197C LDR W8, [X8 + 0x18]
	0x03DA1980 CMP W8, 0x0
	0x03DA1984 CSET W0, GT
	0x03DA1988 RET
	0x03DA198C MOV W0, W31
	0x03DA1990 RET
	0x03DA1994 LDR X8, [X0 + 0x18]
	0x03DA1998 CBZ X8, 0x3DA19B4
	0x03DA199C LDR X8, [X8 + 0x10]
	0x03DA19A0 CBZ X8, 0x3DA19B4
	0x03DA19A4 LDR W8, [X8 + 0x1C]
	0x03DA19A8 CMP W8, 0x0
	0x03DA19AC CSET W0, GT
	0x03DA19B0 RET
	0x03DA19B4 MOV W0, W31
	0x03DA19B8 RET
	0x03DA19BC RET
	0x03DA19C0 RET
	0x03DA19C4 RET
	0x03DA19C8 RET
	0x03DA19CC MOV X1, X31
	0x03DA19D0 STRB W31, [X0 + 0x10]
	0x03DA19D4 B 0x33BDD8C
	0x03DA19D8 STP X30, X23, [X31 - 0x30]!
	0x03DA19DC STP X22, X21, [X31 + 0x10]
	0x03DA19E0 STP X20, X19, [X31 + 0x20]
	0x03DA19E4 ADRP X20, 0x646000
	0x03DA19E8 ADRP X19, 0x3C7000
	0x03DA19EC LDRB W8, [X20 + 0xEDA]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x647000
	006 Move W8, [X21+3784]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x3C8000
	014 Move X0, [X0+224]
	015 Call 0x1C17CF4
	016 Move X0, 0x3C8000
	017 Move X0, [X0+232]
	018 Call 0x1C17CF4
	019 Move X0, 0x3C8000
	020 Move X0, [X0+240]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3784], W8
	024 Move X0, [X20+16]
	025 Compare X0, 0
	026 JumpIfEqual {58}
	027 Move W8, [X0+24]
	028 Compare W8, 0
	029 JumpIfEqual {42}
	030 Move X8, 0x3C8000
	031 Move X8, [X8+232]
	032 Move X1, [X8]
	033 Call Stack`1<Object>.Pop, X0
	034 Move X20, X0
	035 Compare X19, 0
	036 JumpIfEqual {52}
	037 Compare X20, 0
	038 JumpIfEqual {58}
	039 Move X0, X20
	040 Move X1, X19
	041 Call EventCallbackList.AddRange, X0, X1
	042 Move X8, 0x3C8000
	043 Move X8, [X8+224]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X20, X0
	047 Compare X19, 0
	048 JumpIfEqual {51}
	049 Move X1, X19
	050 Call EventCallbackList..ctor, X0, X1
	051 Call EventCallbackList..ctor, X0
	052 Move X0, X20
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Call 0x1C17F20

Method: System.Void Release(UnityEngine.UIElements.EventCallbackList element)

Disassembly:
	0x03DA1C8C ADRP X22, 0x3C7000
	0x03DA1C90 ADRP X23, 0x3C7000
	0x03DA1C94 ADRP X21, 0x37C000
	0x03DA1C98 LDR W8, [X0 + 0xE0]
	0x03DA1C9C LDR X22, [X22 + 0x1C8]
	0x03DA1CA0 LDR X23, [X23 + 0x1D0]
	0x03DA1CA4 LDR X21, [X21 + 0x6F8]
	0x03DA1CA8 CBNZ W8, 0x3DA1CB4
	0x03DA1CAC BL 0x1C16DFC
	0x03DA1CB0 LDR X0, [X19]
	0x03DA1CB4 LDR X8, [X0 + 0xB8]
	0x03DA1CB8 LDR X0, [X22]
	0x03DA1CBC ADRP X22, 0x3C7000
	0x03DA1CC0 LDR X20, [X8]
	0x03DA1CC4 LDR X22, [X22 + 0x1C0]
	0x03DA1CC8 BL 0x1C16F10
	0x03DA1CCC LDR X2, [X23]
	0x03DA1CD0 MOV X1, X20
	0x03DA1CD4 MOV X3, X31
	0x03DA1CD8 MOV X19, X0
	0x03DA1CDC BL 0x2D27AA8
	0x03DA1CE0 LDR X0, [X21]
	0x03DA1CE4 LDR W8, [X0 + 0xE0]
	0x03DA1CE8 CBNZ W8, 0x3DA1CF0
	0x03DA1CEC BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x647000
	006 Move W8, [X21+3785]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3C8000
	014 Move X0, [X0+312]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3785], W8
	018 Compare X19, 0
	019 JumpIfEqual {35}
	020 Move X0, X19
	021 Call EventCallbackList.Clear, X0
	022 Move X0, [X20+16]
	023 Compare X0, 0
	024 JumpIfEqual {35}
	025 Move X8, 0x3C8000
	026 Move X8, [X8+312]
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X2, [X8]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Stack`1<Object>.Push, X0, X1
	034 Return 
	035 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03DA1D5C LDR X30, [X31], #0x20
	0x03DA1D60 RET
	0x03DA1D64 LDR X0, [X19 + 0x98]
	0x03DA1D68 CBZ X0, 0x3DA1D90
	0x03DA1D6C LDR W8, [X0 + 0x38]
	0x03DA1D70 SUBS W8, W8, 0x1
	0x03DA1D74 STR W8, [X0 + 0x38]
	0x03DA1D78 B.NE 0x3DA1D80
	0x03DA1D7C STR X31, [X0 + 0x30]
	0x03DA1D80 LDP X20, X19, [X31 + 0x10]
	0x03DA1D84 MOV X1, X31
	0x03DA1D88 LDR X30, [X31], #0x20
	0x03DA1D8C B 0x3DB0164
	0x03DA1D90 BL 0x1C16F20
	0x03DA1D94 LDR W8, [X0 + 0x38]
	0x03DA1D98 SUBS W8, W8, 0x1
	0x03DA1D9C STR W8, [X0 + 0x38]
	0x03DA1DA0 B.EQ 0x3DA1DA8
	0x03DA1DA4 B 0x3DB0164
	0x03DA1DA8 STR X31, [X0 + 0x30]
	0x03DA1DAC B 0x3DB0164
	0x03DA1DB0 STP X30, X21, [X31 - 0x20]!
	0x03DA1DB4 STP X20, X19, [X31 + 0x10]
	0x03DA1DB8 ADRP X20, 0x646000
	0x03DA1DBC ADRP X21, 0x3C7000
	0x03DA1DC0 LDRB W8, [X20 + 0xEE1]
	0x03DA1DC4 LDR X21, [X21 + 0x1E0]
	0x03DA1DC8 MOV X19, X0
	0x03DA1DCC TBNZ X8, 0x0, 0x3DA1DE4
	0x03DA1DD0 ADRP X0, 0x3C7000
	0x03DA1DD4 LDR X0, [X0 + 0x1E0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x647000
	007 Move X22, 0x3C8000
	008 Move X20, 0x3C8000
	009 Move W8, [X21+3786]
	010 Move X22, [X22+328]
	011 Move X20, [X20+336]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x3C8000
	018 Move X0, [X0+336]
	019 Call 0x1C17CF4
	020 Move X0, 0x3C8000
	021 Move X0, [X0+328]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3786], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Stack`1<Object>..ctor, X0
	030 Move [X19+16], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

