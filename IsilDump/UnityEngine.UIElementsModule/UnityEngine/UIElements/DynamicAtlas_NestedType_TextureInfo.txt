Type: UnityEngine.UIElements.DynamicAtlas/TextureInfo

Method: UnityEngine.UIElements.DynamicAtlas/TextureInfo Create()

Disassembly:
	0x03CEA034 LDR X0, [X0 + 0x7A8]
	0x03CEA038 BL 0x1C16CF4
	0x03CEA03C MOVZ W8, 0x1
	0x03CEA040 STRB W8, [X21 + 0x72F]
	0x03CEA044 MOV X0, X19
	0x03CEA048 MOV X1, X31
	0x03CEA04C BL 0x3DF8490
	0x03CEA050 LDR X0, [X20]
	0x03CEA054 BL 0x1C16F10
	0x03CEA058 MOV X1, X31
	0x03CEA05C MOV X20, X0
	0x03CEA060 BL 0x3E0A2F4
	0x03CEA064 CBZ X20, 0x3CEA088
	0x03CEA068 ADRP X8, 0x478000
	0x03CEA06C LDR X8, [X8 + 0x7A8]
	0x03CEA070 LDR X8, [X8]
	0x03CEA074 STR X8, [X20 + 0x10]
	0x03CEA078 STR X20, [X19 + 0x70]
	0x03CEA07C LDP X20, X19, [X31 + 0x10]
	0x03CEA080 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x6FE000
	005 Move X20, 0x479000
	006 Move W8, [X19+1828]
	007 Move X20, [X20+1792]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x479000
	013 Move X0, [X0+1792]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1828], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X19, X0
	020 Call TextureInfo..ctor, X0
	021 Move X0, X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return X0

Method: System.Void Reset(UnityEngine.UIElements.DynamicAtlas/TextureInfo info)

Disassembly:
	0x03CEA0CC BL 0x1C16CF4
	0x03CEA0D0 MOVZ W8, 0x1
	0x03CEA0D4 STRB W8, [X23 + 0x730]
	0x03CEA0D8 LDP V1, V0, [X21]
	0x03CEA0DC ADD X3, X31, 0x20
	0x03CEA0E0 MOV X0, X22
	0x03CEA0E4 MOV X1, X20
	0x03CEA0E8 MOV X2, X19
	0x03CEA0EC MOV X4, X31
	0x03CEA0F0 STP V1, V0, [X31 + 0x20]
	0x03CEA0F4 BL 0x3DF81FC
	0x03CEA0F8 LDP V0, V1, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {13}
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Move [X0+24], X31
	006 Move [X0+32], W31
	007 Move [X0+40], V0
	008 Move [X0+56], V0
	009 Move [X0+72], V0
	010 Move [X0+88], V0
	011 Move X30, [X31+16]
	012 Return 
	013 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03CEA084 RET
	0x03CEA088 BL 0x1C16F20
	0x03CEA08C SUB X31, X31, 0x90
	0x03CEA090 STP X30, X23, [X31 + 0x60]
	0x03CEA094 STP X22, X21, [X31 + 0x70]
	0x03CEA098 STP X20, X19, [X31 + 0x80]
	0x03CEA09C ADRP X23, 0x6FD000
	0x03CEA0A0 LDRB W8, [X23 + 0x730]
	0x03CEA0A4 MOV X21, X3
	0x03CEA0A8 MOV X19, X2
	0x03CEA0AC MOV X20, X1
	0x03CEA0B0 MOV X22, X0
	0x03CEA0B4 TBNZ X8, 0x0, 0x3CEA0D8
	0x03CEA0B8 ADRP X0, 0x478000
	0x03CEA0BC LDR X0, [X0 + 0x7B0]
	0x03CEA0C0 BL 0x1C16CF4
	0x03CEA0C4 ADRP X0, 0x40B000
	0x03CEA0C8 LDR X0, [X0 + 0x278]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6FE000
	006 Move X21, 0x479000
	007 Move W8, [X20+1829]
	008 Move X21, [X21+1848]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x479000
	015 Move X0, [X0+1848]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1829], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x2EF1D48, X0
	026 Return 

Method: System.Void .cctor()

Disassembly:
	0x03CEA0FC LDR X0, [X22 + 0x70]
	0x03CEA100 STP V0, V1, [X31]
	0x03CEA104 CBZ X0, 0x3CEA1E0
	0x03CEA108 LDR X8, [X0]
	0x03CEA10C LDP V0, V1, [X31]
	0x03CEA110 ADRP X21, 0x478000
	0x03CEA114 ADD X2, X31, 0x40
	0x03CEA118 LDR X9, [X8 + 0x178]
	0x03CEA11C STP V0, V1, [X31 + 0x40]
	0x03CEA120 LDR X3, [X8 + 0x180]
	0x03CEA124 LDR X21, [X21 + 0x7B0]
	0x03CEA128 MOV X1, X19
	0x03CEA12C BLR X9
	0x03CEA130 LDR X1, [X21]
	0x03CEA134 MOV X19, X0
	0x03CEA138 MOV X0, X20
	0x03CEA13C BL 0x1C16E00
	0x03CEA140 CBZ X0, 0x3CEA1CC
	0x03CEA144 MOV X20, X0
	0x03CEA148 MOV X0, X19
	0x03CEA14C MOV X1, X31
	0x03CEA150 BL 0x32277A8
	0x03CEA154 TBZ X0, 0x0, 0x3CEA16C
	0x03CEA158 ADRP X8, 0x40B000
	0x03CEA15C LDR X8, [X8 + 0x278]
	0x03CEA160 LDR X8, [X8]
	0x03CEA164 LDR X8, [X8 + 0xB8]
	0x03CEA168 LDR X19, [X8]
	0x03CEA16C LDR X8, [X20]
	0x03CEA170 LDR X1, [X21]
	0x03CEA174 LDRH W9, [X8 + 0x12E]
	0x03CEA178 CBZ X9, 0x3CEA19C
	0x03CEA17C LDR X10, [X8 + 0xB0]
	0x03CEA180 ADD X10, X10, 0x8
	0x03CEA184 LDUR X11, [X10 - 0x8]
	0x03CEA188 CMP X11, X1
	0x03CEA18C B.EQ 0x3CEA1AC
	0x03CEA190 SUBS X9, X9, 0x1
	0x03CEA194 ADD X10, X10, 0x10
	0x03CEA198 B.NE 0x3CEA184
	0x03CEA19C MOVZ W2, 0x1
	0x03CEA1A0 MOV X0, X20
	0x03CEA1A4 BL 0x1C5C788
	0x03CEA1A8 B 0x3CEA1BC
	0x03CEA1AC LDR W9, [X10]
	0x03CEA1B0 ADD W9, W9, 0x1
	0x03CEA1B4 ADD X8, X8, W9, 0x4, SXTW
	0x03CEA1B8 ADD X0, X8, 0x138
	0x03CEA1BC LDP X8, X2, [X0]
	0x03CEA1C0 MOV X0, X20
	0x03CEA1C4 MOV X1, X19
	0x03CEA1C8 BLR X8
	0x03CEA1CC LDP X20, X19, [X31 + 0x80]
	0x03CEA1D0 LDP X22, X21, [X31 + 0x70]
	0x03CEA1D4 LDP X30, X23, [X31 + 0x60]
	0x03CEA1D8 ADD X31, X31, 0x90
	0x03CEA1DC RET
	0x03CEA1E0 BL 0x1C16F20
	0x03CEA1E4 STR X30, [X31 - 0x20]!
	0x03CEA1E8 STP X20, X19, [X31 + 0x10]
	0x03CEA1EC ADRP X20, 0x6FD000
	0x03CEA1F0 ADRP X19, 0x478000
	0x03CEA1F4 LDRB W8, [X20 + 0x731]
	0x03CEA1F8 LDR X19, [X19 + 0x7B8]
	0x03CEA1FC TBNZ X8, 0x0, 0x3CEA214
	0x03CEA200 ADRP X0, 0x478000
	0x03CEA204 LDR X0, [X0 + 0x7B8]
	0x03CEA208 BL 0x1C16CF4
	0x03CEA20C MOVZ W8, 0x1
	0x03CEA210 STRB W8, [X20 + 0x731]
	0x03CEA214 LDR X0, [X19]
	0x03CEA218 LDR W8, [X0 + 0xE0]
	0x03CEA21C CBNZ W8, 0x3CEA228
	0x03CEA220 BL 0x1C16DFC
	0x03CEA224 LDR X0, [X19]
	0x03CEA228 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x6FE000
	011 Move X26, 0x479000
	012 Move X19, 0x479000
	013 Move X24, 0x479000
	014 Move X20, 0x479000
	015 Move X23, 0x479000
	016 Move X21, 0x479000
	017 Move X22, 0x479000
	018 Move X26, [X26+1856]
	019 Move X19, [X19+1864]
	020 Move W8, [X25+1830]
	021 Move X24, [X24+1872]
	022 Move X20, [X20+1880]
	023 Move X23, [X23+1888]
	024 Move X21, [X21+1896]
	025 Move X22, [X22+1792]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0x479000
	031 Move X0, [X0+1872]
	032 Call 0x1C17CF4
	033 Move X0, 0x479000
	034 Move X0, [X0+1856]
	035 Call 0x1C17CF4
	036 Move X0, 0x479000
	037 Move X0, [X0+1896]
	038 Call 0x1C17CF4
	039 Move X0, 0x479000
	040 Move X0, [X0+1888]
	041 Call 0x1C17CF4
	042 Move X0, 0x479000
	043 Move X0, [X0+1864]
	044 Call 0x1C17CF4
	045 Move X0, 0x479000
	046 Move X0, [X0+1880]
	047 Call 0x1C17CF4
	048 Move X0, 0x479000
	049 Move X0, [X0+1792]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X25+1830], W8
	053 Move X0, [X26]
	054 Call 0x1C17F10
	055 Move X2, [X19]
	056 Move X1, X31
	057 Move X3, X31
	058 Move X19, X0
	059 Call Func`1<Object>..ctor, X0, X1, X2
	060 Move X0, [X24]
	061 Call 0x1C17F10
	062 Move X2, [X20]
	063 Move X1, X31
	064 Move X3, X31
	065 Move X20, X0
	066 Call Action`1<Object>..ctor, X0, X1, X2
	067 Move X0, [X23]
	068 Call 0x1C17F10
	069 Move X4, [X21]
	070 Move W3, 1024
	071 Move X1, X19
	072 Move X2, X20
	073 Move X21, X0
	074 Call 0x2EF1D58, X0, X1, X2, X3
	075 Move X8, [X22]
	076 Move X20, [X31+64]
	077 Move X19, [X31+72]
	078 Move X24, [X31+32]
	079 Move X23, [X31+40]
	080 Move X26, [X31+16]
	081 Move X25, [X31+24]
	082 Move X8, [X8+184]
	083 Move [X8], X21
	084 Move X22, [X31+48]
	085 Move X21, [X31+56]
	086 Move X30, [X31+80]
	087 Return 

