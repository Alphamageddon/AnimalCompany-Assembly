Type: UnityEngine.UIElements.EventCallbackRegistry

Method: UnityEngine.UIElements.EventCallbackList GetCallbackList(UnityEngine.UIElements.EventCallbackList initializer = null)

Disassembly:
	0x03DA218C LDR X0, [X22]
	0x03DA2190 ADRP X22, 0x3C6000
	0x03DA2194 LDR X20, [X8]
	0x03DA2198 LDR X22, [X22 + 0x220]
	0x03DA219C BL 0x1C16F10
	0x03DA21A0 LDR X2, [X23]
	0x03DA21A4 MOV X1, X20
	0x03DA21A8 MOV X3, X31
	0x03DA21AC MOV X19, X0
	0x03DA21B0 BL 0x2D27AA8
	0x03DA21B4 LDR X0, [X21]
	0x03DA21B8 LDR W8, [X0 + 0xE0]
	0x03DA21BC CBNZ W8, 0x3DA21C4
	0x03DA21C0 BL 0x1C16DFC
	0x03DA21C4 LDR X1, [X22]
	0x03DA21C8 MOV X0, X19
	0x03DA21CC LDP X20, X19, [X31 + 0x20]
	0x03DA21D0 LDP X22, X21, [X31 + 0x10]
	0x03DA21D4 LDP X30, X23, [X31], #0x30
	0x03DA21D8 B 0x2D0D4C0
	0x03DA21DC STR X30, [X31 - 0x20]!
	0x03DA21E0 STP X20, X19, [X31 + 0x10]
	0x03DA21E4 ADRP X20, 0x645000
	0x03DA21E8 LDRB W8, [X20 + 0xEEA]
	0x03DA21EC MOV X19, X0
	0x03DA21F0 TBNZ X8, 0x0, 0x3DA2214

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x646000
	006 Move X20, 0x37A000
	007 Move W8, [X21+3796]
	008 Move X20, [X20+2208]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x37A000
	015 Move X0, [X0+2208]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3796], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, [X8]
	027 Compare X0, 0
	028 JumpIfEqual {36}
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call EventCallbackListPool.Get, X0, X1
	035 Return X0
	036 Call 0x1C17F20

Method: System.Void ReleaseCallbackList(UnityEngine.UIElements.EventCallbackList toRelease)

Disassembly:
	0x03DA21F4 ADRP X0, 0x3C6000
	0x03DA21F8 LDR X0, [X0 + 0x238]
	0x03DA21FC BL 0x1C16CF4
	0x03DA2200 ADRP X0, 0x3C2000
	0x03DA2204 LDR X0, [X0 + 0xB8]
	0x03DA2208 BL 0x1C16CF4
	0x03DA220C MOVZ W8, 0x1
	0x03DA2210 STRB W8, [X20 + 0xEEA]
	0x03DA2214 LDR X8, [X19]
	0x03DA2218 MOV X0, X19
	0x03DA221C LDP X9, X1, [X8 + 0x198]
	0x03DA2220 BLR X9
	0x03DA2224 LDR X0, [X19 + 0x98]
	0x03DA2228 CBZ X0, 0x3DA2290
	0x03DA222C LDR X8, [X19 + 0x50]
	0x03DA2230 CBZ X8, 0x3DA2254
	0x03DA2234 ADRP X9, 0x3C2000
	0x03DA2238 LDR X9, [X9 + 0xB8]
	0x03DA223C LDR X10, [X8]
	0x03DA2240 LDR X9, [X9]
	0x03DA2244 LDRB W12, [X10 + 0x130]
	0x03DA2248 LDRB W11, [X9 + 0x130]
	0x03DA224C CMP W12, W11
	0x03DA2250 B.CS 0x3DA225C
	0x03DA2254 MOV X1, X31
	0x03DA2258 B 0x3DA2270

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x646000
	006 Move X20, 0x37A000
	007 Move W8, [X21+3797]
	008 Move X20, [X20+2208]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x37A000
	015 Move X0, [X0+2208]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3797], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, [X8]
	027 Compare X0, 0
	028 JumpIfEqual {36}
	029 Move X1, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call EventCallbackListPool.Release, X0, X1
	035 Return 
	036 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03DA225C LDR X10, [X10 + 0xC8]
	0x03DA2260 ADD X10, X10, X11, 0x3, LSL
	0x03DA2264 LDUR X10, [X10 - 0x8]
	0x03DA2268 CMP X10, X9
	0x03DA226C CSEL X1, X8, X31, EQ
	0x03DA2270 LDR W8, [X0 + 0x38]
	0x03DA2274 SUBS W8, W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move [X19+32], W31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Return 

Method: UnityEngine.UIElements.EventCallbackList GetCallbackListForWriting()

Disassembly:
	0x03DA2278 STR W8, [X0 + 0x38]
	0x03DA227C B.NE 0x3DA2284
	0x03DA2280 STR X31, [X0 + 0x30]
	0x03DA2284 LDP X20, X19, [X31 + 0x10]
	0x03DA2288 LDR X30, [X31], #0x20
	0x03DA228C B 0x3DB0164
	0x03DA2290 BL 0x1C16F20
	0x03DA2294 STP X30, X21, [X31 - 0x20]!
	0x03DA2298 STP X20, X19, [X31 + 0x10]
	0x03DA229C ADRP X20, 0x645000
	0x03DA22A0 ADRP X21, 0x3C6000
	0x03DA22A4 LDRB W8, [X20 + 0xEEB]
	0x03DA22A8 LDR X21, [X21 + 0x240]
	0x03DA22AC MOV X19, X0
	0x03DA22B0 TBNZ X8, 0x0, 0x3DA22C8
	0x03DA22B4 ADRP X0, 0x3C6000
	0x03DA22B8 LDR X0, [X0 + 0x240]
	0x03DA22BC BL 0x1C16CF4
	0x03DA22C0 MOVZ W8, 0x1
	0x03DA22C4 STRB W8, [X20 + 0xEEB]
	0x03DA22C8 LDR X1, [X21]
	0x03DA22CC MOV X0, X19
	0x03DA22D0 LDP X20, X19, [X31 + 0x10]
	0x03DA22D4 LDP X30, X21, [X31], #0x20
	0x03DA22D8 B 0x2D235C0
	0x03DA22DC STR X30, [X31 - 0x20]!
	0x03DA22E0 STP X20, X19, [X31 + 0x10]
	0x03DA22E4 ADRP X19, 0x645000
	0x03DA22E8 ADRP X20, 0x3C6000
	0x03DA22EC LDRB W8, [X19 + 0xEEC]
	0x03DA22F0 LDR X20, [X20 + 0x218]
	0x03DA22F4 TBNZ X8, 0x0, 0x3DA230C
	0x03DA22F8 ADRP X0, 0x3C6000
	0x03DA22FC LDR X0, [X0 + 0x218]
	0x03DA2300 BL 0x1C16CF4
	0x03DA2304 MOVZ W8, 0x1
	0x03DA2308 STRB W8, [X19 + 0xEEC]
	0x03DA230C LDR X0, [X20]
	0x03DA2310 BL 0x1C16F10
	0x03DA2314 MOV X1, X31
	0x03DA2318 MOV X19, X0
	0x03DA231C BL 0x33BDD8C
	0x03DA2320 LDR X8, [X20]
	0x03DA2324 LDR X8, [X8 + 0xB8]
	0x03DA2328 STR X19, [X8]
	0x03DA232C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x646000
	005 Move W8, [X20+3798]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x37A000
	012 Move X0, [X0+2208]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3798], W8
	016 Move W8, [X19+32]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X0, [X19+24]
	019 Compare X0, 0
	020 JumpIfNotEqual {51}
	021 Move X8, 0x37A000
	022 Move X8, [X8+2208]
	023 Move X20, [X19+16]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare X20, 0
	027 JumpIfEqual {45}
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X0, [X19+16]
	033 Compare X0, 0
	034 JumpIfNotEqual {51}
	035 Move X8, 0x37A000
	036 Move X8, [X8+2208]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X31
	043 Call EventCallbackRegistry.GetCallbackList, X0
	044 Move [X19+16], X0
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X31
	049 Call EventCallbackRegistry.GetCallbackList, X0
	050 Move [X19+24], X0
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Return X0

Method: UnityEngine.UIElements.EventCallbackList GetCallbackListForReading()

Disassembly:
	0x03DA2330 LDR X30, [X31], #0x20
	0x03DA2334 RET
	0x03DA2338 MOV X1, X31
	0x03DA233C B 0x33BDD8C
	0x03DA2340 STR X30, [X31 - 0x20]!
	0x03DA2344 STP X20, X19, [X31 + 0x10]
	0x03DA2348 ADRP X19, 0x645000

ISIL:
	001 Move X8, [X0+24]
	002 Move W9, 24
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W8, 16
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Move X0, [X0]
	007 Return X0

Method: System.Boolean UnregisterCallback(System.Int64 eventTypeId, System.Delegate callback, UnityEngine.UIElements.TrickleDown useTrickleDown)

Disassembly:
	0x03DA234C ADRP X20, 0x3C4000
	0x03DA2350 LDRB W8, [X19 + 0xEED]
	0x03DA2354 LDR X20, [X20 + 0x968]
	0x03DA2358 TBNZ X8, 0x0, 0x3DA2370
	0x03DA235C ADRP X0, 0x3C4000
	0x03DA2360 LDR X0, [X0 + 0x968]
	0x03DA2364 BL 0x1C16CF4
	0x03DA2368 MOVZ W8, 0x1
	0x03DA236C STRB W8, [X19 + 0xEED]
	0x03DA2370 LDR X0, [X20]
	0x03DA2374 BL 0x1C16F10
	0x03DA2378 MOV X19, X0
	0x03DA237C BL 0x3DA2294
	0x03DA2380 MOV X0, X19
	0x03DA2384 LDP X20, X19, [X31 + 0x10]
	0x03DA2388 LDR X30, [X31], #0x20
	0x03DA238C RET
	0x03DA2390 SUB X31, X31, 0xE0
	0x03DA2394 STR X30, [X31 + 0x80]
	0x03DA2398 STP X28, X27, [X31 + 0x90]
	0x03DA239C STP X26, X25, [X31 + 0xA0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X2, 0
	006 JumpIfEqual {24}
	007 Move W21, W3
	008 Move X19, X2
	009 Move X20, X1
	010 Call EventCallbackRegistry.GetCallbackListForWriting, X0
	011 Compare X0, 0
	012 JumpIfEqual {30}
	013 Move X1, X20
	014 Move X2, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, 1
	019 NotImplemented "Instruction CINC not yet implemented."
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call EventCallbackList.Remove, X0, X1, X2, X3
	023 Return X0
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, W31
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Void RegisterCallback(UnityEngine.UIElements.EventCallback`1<TEventType> callback, UnityEngine.UIElements.TrickleDown useTrickleDown = 0, UnityEngine.UIElements.InvokePolicy invokePolicy = 0)

Disassembly:
	0x021DD870 ADD X1, X1, 0xE58
	0x021DD874 MOV X2, X31
	0x021DD878 BL 0x3EB1B00
	0x021DD87C BL 0x3EB1B20
	0x021DD880 B 0x21DD888
	0x021DD884 B 0x21DD894
	0x021DD888 MOV X28, X0
	0x021DD88C BL 0x3EB1AE0
	0x021DD890 B 0x21DD89C
	0x021DD894 MOV X28, X0
	0x021DD898 BL 0x3EB1AE0
	0x021DD89C MOV X0, X28
	0x021DD8A0 BL 0x1D2C690
	0x021DD8A4 BL 0x1990590
	0x021DD8A8 STR X30, [X31 - 0x50]!
	0x021DD8AC STP X26, X25, [X31 + 0x10]
	0x021DD8B0 STP X24, X23, [X31 + 0x20]
	0x021DD8B4 STP X22, X21, [X31 + 0x30]
	0x021DD8B8 STP X20, X19, [X31 + 0x40]
	0x021DD8BC LDR X8, [X3 + 0x38]
	0x021DD8C0 MOV X19, X3
	0x021DD8C4 MOV X20, X2
	0x021DD8C8 MOV X21, X1
	0x021DD8CC MOV X22, X0
	0x021DD8D0 CBNZ X8, 0x21DD908
	0x021DD8D4 ADRP X0, 0x1F3E000
	0x021DD8D8 LDR X0, [X0 + 0x9F8]
	0x021DD8DC BL 0x1C16CF4
	0x021DD8E0 ADRP X0, 0x1F1D000
	0x021DD8E4 LDR X0, [X0 + 0x8B8]
	0x021DD8E8 BL 0x1C16CF4
	0x021DD8EC ADRP X0, 0x1F1D000
	0x021DD8F0 LDR X0, [X0 + 0x8C0]
	0x021DD8F4 BL 0x1C16CF4
	0x021DD8F8 LDR X8, [X19 + 0x38]
	0x021DD8FC CBNZ X8, 0x21DD908
	0x021DD900 MOV X0, X19
	0x021DD904 BL 0x1C5C6E0
	0x021DD908 ADRP X24, 0x1F3E000
	0x021DD90C LDR X24, [X24 + 0x9F8]
	0x021DD910 LDR X0, [X24]
	0x021DD914 LDR W8, [X0 + 0xE0]
	0x021DD918 CBNZ W8, 0x21DD924
	0x021DD91C BL 0x1C16DFC
	0x021DD920 LDR X0, [X24]
	0x021DD924 LDR X8, [X0 + 0xB8]
	0x021DD928 MOV X0, X22
	0x021DD92C MOV X2, X31
	0x021DD930 LDR X1, [X8 + 0x90]
	0x021DD934 BL 0x3E53698
	0x021DD938 LDR X0, [X24]
	0x021DD93C LDR X8, [X0 + 0xB8]
	0x021DD940 LDR X8, [X8 + 0x90]
	0x021DD944 CBZ X8, 0x21DDA00
	0x021DD948 LDR W8, [X8 + 0x18]
	0x021DD94C SUBS W25, W8, 0x1
	0x021DD950 B.LT 0x21DD9C4
	0x021DD954 ADRP X26, 0x1F1D000
	0x021DD958 LDR X26, [X26 + 0x8C0]
	0x021DD95C MOV W22, W31
	0x021DD960 LDR W8, [X0 + 0xE0]
	0x021DD964 CBNZ W8, 0x21DD970
	0x021DD968 BL 0x1C16DFC
	0x021DD96C LDR X0, [X24]
	0x021DD970 LDR X8, [X0 + 0xB8]
	0x021DD974 LDR X0, [X8 + 0x90]
	0x021DD978 CBZ X0, 0x21DDA00
	0x021DD97C LDR X2, [X26]
	0x021DD980 MOV W1, W22
	0x021DD984 BL 0x301BCCC
	0x021DD988 CBZ X0, 0x21DDA00
	0x021DD98C MOV X1, X31
	0x021DD990 MOV X23, X0
	0x021DD994 BL 0x3C32ECC
	0x021DD998 LDR X8, [X19 + 0x38]
	0x021DD99C MOV X1, X21
	0x021DD9A0 MOV X2, X20
	0x021DD9A4 LDR X3, [X8 + 0x8]
	0x021DD9A8 BL 0x21DD088
	0x021DD9AC TBNZ X0, 0x0, 0x21DD9E0
	0x021DD9B0 CMP W25, W22
	0x021DD9B4 B.EQ 0x21DD9C4
	0x021DD9B8 LDR X0, [X24]
	0x021DD9BC ADD W22, W22, 0x1
	0x021DD9C0 B 0x21DD960
	0x021DD9C4 LDP X20, X19, [X31 + 0x40]
	0x021DD9C8 LDP X22, X21, [X31 + 0x30]
	0x021DD9CC LDP X24, X23, [X31 + 0x20]
	0x021DD9D0 LDP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X4+56]
	009 Move X19, X4
	010 Move W20, W3
	011 Move W23, W2
	012 Move X21, X1
	013 Move X22, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {18}
	016 Move X0, X19
	017 Call 0x1C5D6E0
	018 Compare X21, 0
	019 JumpIfEqual {98}
	020 Move X8, [X19+56]
	021 Move X0, [X8+16]
	022 Move W8, [X0+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X8, [X19+56]
	033 Move X0, [X8+8]
	034 Call 0x2D0E5C8
	035 Move X24, X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W8, 1
	038 Move X0, X22
	039 Move X1, X31
	040 NotImplemented "Instruction CINC not yet implemented."
	041 Call EventCallbackRegistry.GetCallbackListForReading, X0
	042 Compare X0, 0
	043 JumpIfEqual {61}
	044 Move X1, X24
	045 Move X2, X21
	046 Move W3, W23
	047 Move X4, X31
	048 Call EventCallbackList.Contains, X0, X1, X2, X3
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {61}
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Return 
	061 Move X0, X22
	062 Move X1, X31
	063 Call EventCallbackRegistry.GetCallbackListForWriting, X0
	064 Move X8, [X19+56]
	065 Move X22, X0
	066 Move X8, [X8+24]
	067 Move W9, [X8+309]
	068 Move TEMP, X9
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {75}
	072 Move X0, X8
	073 Call 0x1C5D684
	074 Move X8, X0
	075 Move X0, X8
	076 Call 0x1C17F10
	077 Move X8, [X19+56]
	078 Move X1, X21
	079 Move W2, W23
	080 Move W3, W20
	081 Move X4, [X8+32]
	082 Move X19, X0
	083 Call 0x2D0ECDC, X0, X1, X2, X3
	084 Compare X22, 0
	085 JumpIfEqual {113}
	086 Move X0, X22
	087 Move X1, X19
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X2, X31
	095 Move X30, [X31+64]
	096 Call EventCallbackList.Add, X0, X1
	097 Return 
	098 Move X0, 0x1F1F000
	099 Move X0, [X0+1400]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X20, X0
	103 Move X0, 0x1F3F000
	104 Move X0, [X0+2520]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X20
	108 Move X2, X31
	109 Call ArgumentException..ctor, X0, X1
	110 Move X0, X20
	111 Move X1, X19
	112 Call 0x1C17DEC
	113 Call 0x1C17F20

Method: System.Void RegisterCallback(UnityEngine.UIElements.EventCallback`2<TEventType, TCallbackArgs> callback, TCallbackArgs userArgs, UnityEngine.UIElements.TrickleDown useTrickleDown = 0, UnityEngine.UIElements.InvokePolicy invokePolicy = 0)

Disassembly:
	0x021DD9D4 MOV X0, X31
	0x021DD9D8 LDR X30, [X31], #0x50
	0x021DD9DC RET
	0x021DD9E0 MOV X0, X23
	0x021DD9E4 LDP X20, X19, [X31 + 0x40]
	0x021DD9E8 LDP X22, X21, [X31 + 0x30]
	0x021DD9EC LDP X24, X23, [X31 + 0x20]
	0x021DD9F0 LDP X26, X25, [X31 + 0x10]
	0x021DD9F4 MOV X1, X31
	0x021DD9F8 LDR X30, [X31], #0x50
	0x021DD9FC B 0x3C32ECC
	0x021DDA00 BL 0x1C16F20
	0x021DDA04 STR X30, [X31 - 0x50]!
	0x021DDA08 STP X26, X25, [X31 + 0x10]
	0x021DDA0C STP X24, X23, [X31 + 0x20]
	0x021DDA10 STP X22, X21, [X31 + 0x30]
	0x021DDA14 STP X20, X19, [X31 + 0x40]
	0x021DDA18 LDR X8, [X3 + 0x38]
	0x021DDA1C MOV X19, X3
	0x021DDA20 MOV X20, X2
	0x021DDA24 MOV X21, X1
	0x021DDA28 MOV X22, X0
	0x021DDA2C CBNZ X8, 0x21DDA64
	0x021DDA30 ADRP X0, 0x1F3E000
	0x021DDA34 LDR X0, [X0 + 0x9F8]
	0x021DDA38 BL 0x1C16CF4
	0x021DDA3C ADRP X0, 0x1F1D000
	0x021DDA40 LDR X0, [X0 + 0x8B8]
	0x021DDA44 BL 0x1C16CF4
	0x021DDA48 ADRP X0, 0x1F1D000
	0x021DDA4C LDR X0, [X0 + 0x8C0]
	0x021DDA50 BL 0x1C16CF4
	0x021DDA54 LDR X8, [X19 + 0x38]
	0x021DDA58 CBNZ X8, 0x21DDA64
	0x021DDA5C MOV X0, X19
	0x021DDA60 BL 0x1C5C6E0
	0x021DDA64 ADRP X24, 0x1F3E000
	0x021DDA68 LDR X24, [X24 + 0x9F8]
	0x021DDA6C LDR X0, [X24]
	0x021DDA70 LDR W8, [X0 + 0xE0]
	0x021DDA74 CBNZ W8, 0x21DDA80
	0x021DDA78 BL 0x1C16DFC
	0x021DDA7C LDR X0, [X24]
	0x021DDA80 LDR X8, [X0 + 0xB8]
	0x021DDA84 MOV X0, X22
	0x021DDA88 MOV X2, X31
	0x021DDA8C LDR X1, [X8 + 0x90]
	0x021DDA90 BL 0x3E53698
	0x021DDA94 LDR X0, [X24]
	0x021DDA98 LDR X8, [X0 + 0xB8]
	0x021DDA9C LDR X8, [X8 + 0x90]
	0x021DDAA0 CBZ X8, 0x21DDB60
	0x021DDAA4 LDR W8, [X8 + 0x18]
	0x021DDAA8 SUBS W25, W8, 0x1
	0x021DDAAC B.LT 0x21DDB24
	0x021DDAB0 ADRP X26, 0x1F1D000
	0x021DDAB4 LDR X26, [X26 + 0x8C0]
	0x021DDAB8 MOV W22, W31
	0x021DDABC LDR W8, [X0 + 0xE0]
	0x021DDAC0 CBNZ W8, 0x21DDACC
	0x021DDAC4 BL 0x1C16DFC
	0x021DDAC8 LDR X0, [X24]
	0x021DDACC LDR X8, [X0 + 0xB8]
	0x021DDAD0 LDR X0, [X8 + 0x90]
	0x021DDAD4 CBZ X0, 0x21DDB60
	0x021DDAD8 LDR X2, [X26]
	0x021DDADC MOV W1, W22
	0x021DDAE0 BL 0x301BCCC
	0x021DDAE4 CBZ X0, 0x21DDB60
	0x021DDAE8 MOV X1, X31
	0x021DDAEC MOV X23, X0
	0x021DDAF0 BL 0x3C32ECC
	0x021DDAF4 LDR X8, [X19 + 0x38]
	0x021DDAF8 MOV X1, X21
	0x021DDAFC MOV X2, X20
	0x021DDB00 LDR X3, [X8 + 0x8]
	0x021DDB04 LDR X8, [X3]
	0x021DDB08 BLR X8
	0x021DDB0C TBNZ X0, 0x0, 0x21DDB40
	0x021DDB10 CMP W25, W22
	0x021DDB14 B.EQ 0x21DDB24
	0x021DDB18 LDR X0, [X24]
	0x021DDB1C ADD W22, W22, 0x1
	0x021DDB20 B 0x21DDABC
	0x021DDB24 LDP X20, X19, [X31 + 0x40]
	0x021DDB28 LDP X22, X21, [X31 + 0x30]
	0x021DDB2C LDP X24, X23, [X31 + 0x20]
	0x021DDB30 LDP X26, X25, [X31 + 0x10]
	0x021DDB34 MOV X0, X31
	0x021DDB38 LDR X30, [X31], #0x50
	0x021DDB3C RET
	0x021DDB40 MOV X0, X23
	0x021DDB44 LDP X20, X19, [X31 + 0x40]
	0x021DDB48 LDP X22, X21, [X31 + 0x30]
	0x021DDB4C LDP X24, X23, [X31 + 0x20]
	0x021DDB50 LDP X26, X25, [X31 + 0x10]
	0x021DDB54 MOV X1, X31
	0x021DDB58 LDR X30, [X31], #0x50
	0x021DDB5C B 0x3C32ECC
	0x021DDB60 BL 0x1C16F20
	0x021DDB64 STP X30, X23, [X31 - 0x30]!
	0x021DDB68 STP X22, X21, [X31 + 0x10]
	0x021DDB6C STP X20, X19, [X31 + 0x20]
	0x021DDB70 LDR X8, [X1 + 0x38]
	0x021DDB74 MOV X19, X1
	0x021DDB78 MOV X20, X0
	0x021DDB7C CBNZ X8, 0x21DDBA8
	0x021DDB80 ADRP X0, 0x1F3E000
	0x021DDB84 LDR X0, [X0 + 0x9F8]
	0x021DDB88 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X5+56]
	010 Move X19, X5
	011 Move W20, W4
	012 Move W24, W3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X23, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {20}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 Compare X22, 0
	021 JumpIfEqual {121}
	022 Move X8, [X19+56]
	023 Move X0, [X8+16]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X8, [X19+56]
	035 Move X0, [X8+8]
	036 Call 0x2D0E5C8
	037 Move X25, X0
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, 1
	040 Move X0, X23
	041 Move X1, X31
	042 NotImplemented "Instruction CINC not yet implemented."
	043 Call EventCallbackRegistry.GetCallbackListForReading, X0
	044 Compare X0, 0
	045 JumpIfEqual {72}
	046 Move X1, X25
	047 Move X2, X22
	048 Move W3, W24
	049 Move X4, X31
	050 Call EventCallbackList.Find, X0, X1, X2, X3
	051 Move X8, [X19+56]
	052 Move X25, X0
	053 Move X8, [X8+24]
	054 Move W9, [X8+309]
	055 Move TEMP, X9
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {62}
	059 Move X0, X8
	060 Call 0x1C5D684
	061 Move X8, X0
	062 Compare X25, 0
	063 JumpIfEqual {72}
	064 Move X9, [X25]
	065 Move W10, [X8+304]
	066 Move W11, [X9+304]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X9, [X9+200]
	069 Add X9, X9, X10
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X23
	073 Move X1, X31
	074 Call EventCallbackRegistry.GetCallbackListForWriting, X0
	075 Move X8, [X19+56]
	076 Move X23, X0
	077 Move X8, [X8+24]
	078 Move W9, [X8+309]
	079 Move TEMP, X9
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {86}
	083 Move X0, X8
	084 Call 0x1C5D684
	085 Move X8, X0
	086 Move X0, X8
	087 Call 0x1C17F10
	088 Move X8, [X19+56]
	089 Move X1, X22
	090 Move X2, X21
	091 Move W3, W24
	092 Move X5, [X8+48]
	093 Move W4, W20
	094 Move X19, X0
	095 Call 0x2D0EF5C, X0, X1, X2, X3, X4
	096 Compare X23, 0
	097 JumpIfEqual {136}
	098 Move X0, X23
	099 Move X1, X19
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X24, [X31+16]
	105 Move X23, [X31+24]
	106 Move X2, X31
	107 Move X30, [X31+64]
	108 Move X25, [X31+72]
	109 Call EventCallbackList.Add, X0, X1
	110 Return 
	111 Move [X25+40], X21
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 Move X30, [X31+64]
	119 Move X25, [X31+72]
	120 Return 
	121 Move X0, 0x1F1F000
	122 Move X0, [X0+1400]
	123 Call 0x1C17D08
	124 Call 0x1C17F10
	125 Move X20, X0
	126 Move X0, 0x1F3F000
	127 Move X0, [X0+2520]
	128 Call 0x1C17D08
	129 Move X1, X0
	130 Move X0, X20
	131 Move X2, X31
	132 Call ArgumentException..ctor, X0, X1
	133 Move X0, X20
	134 Move X1, X19
	135 Call 0x1C17DEC
	136 Call 0x1C17F20

Method: System.Boolean UnregisterCallback(UnityEngine.UIElements.EventCallback`1<TEventType> callback, UnityEngine.UIElements.TrickleDown useTrickleDown = 0)

Disassembly:
	0x021DDE20 BL 0x1C16CF4
	0x021DDE24 ADRP X0, 0x1F3D000
	0x021DDE28 LDR X0, [X0 + 0xBA0]
	0x021DDE2C BL 0x1C16CF4
	0x021DDE30 ADRP X0, 0x1F3E000
	0x021DDE34 LDR X0, [X0 + 0xA30]
	0x021DDE38 BL 0x1C16CF4
	0x021DDE3C ADRP X0, 0x1F3E000
	0x021DDE40 LDR X0, [X0 + 0xA38]
	0x021DDE44 BL 0x1C16CF4
	0x021DDE48 ADRP X0, 0x1F3E000
	0x021DDE4C LDR X0, [X0 + 0xA40]
	0x021DDE50 BL 0x1C16CF4
	0x021DDE54 ADRP X0, 0x1F3E000
	0x021DDE58 LDR X0, [X0 + 0xA48]
	0x021DDE5C BL 0x1C16CF4
	0x021DDE60 ADRP X0, 0x1F16000
	0x021DDE64 LDR X0, [X0 + 0x598]
	0x021DDE68 BL 0x1C16CF4
	0x021DDE6C LDR X8, [X19 + 0x38]
	0x021DDE70 CBNZ X8, 0x21DDE7C
	0x021DDE74 MOV X0, X19
	0x021DDE78 BL 0x1C5C6E0
	0x021DDE7C CBZ X20, 0x21DE060
	0x021DDE80 ADRP X8, 0x1F16000
	0x021DDE84 LDR X8, [X8 + 0x598]
	0x021DDE88 LDR X0, [X8]
	0x021DDE8C LDR W8, [X0 + 0xE0]
	0x021DDE90 CBNZ W8, 0x21DDE98
	0x021DDE94 BL 0x1C16DFC
	0x021DDE98 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X22, X3
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {16}
	013 Move X0, X22
	014 Call 0x1C5D6E0
	015 Move X8, [X22+56]
	016 Move X0, [X8+8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X8, [X22+56]
	028 Move X0, [X8]
	029 Call 0x2D0E5C8
	030 Move X1, X0
	031 Move X0, X21
	032 Move X2, X20
	033 Move W3, W19
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X4, X31
	039 Move X30, [X31+48]
	040 Call EventCallbackRegistry.UnregisterCallback, X0, X1, X2, X3
	041 Return X0

Method: System.Void InvokeCallbacks(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.PropagationPhase propagationPhase)

Disassembly:
	0x03DA23A0 STP X24, X23, [X31 + 0xB0]
	0x03DA23A4 STP X22, X21, [X31 + 0xC0]
	0x03DA23A8 STP X20, X19, [X31 + 0xD0]
	0x03DA23AC ADRP X20, 0x645000
	0x03DA23B0 LDRB W8, [X20 + 0xEEF]
	0x03DA23B4 MOV X19, X0
	0x03DA23B8 TBNZ X8, 0x0, 0x3DA2430
	0x03DA23BC ADRP X0, 0x3C5000
	0x03DA23C0 LDR X0, [X0 + 0xD90]
	0x03DA23C4 BL 0x1C16CF4
	0x03DA23C8 ADRP X0, 0x3C5000
	0x03DA23CC LDR X0, [X0 + 0xD98]
	0x03DA23D0 BL 0x1C16CF4
	0x03DA23D4 ADRP X0, 0x3C5000
	0x03DA23D8 LDR X0, [X0 + 0xDA0]
	0x03DA23DC BL 0x1C16CF4
	0x03DA23E0 ADRP X0, 0x3C0000
	0x03DA23E4 LDR X0, [X0 + 0xCD8]
	0x03DA23E8 BL 0x1C16CF4
	0x03DA23EC ADRP X0, 0x3C5000
	0x03DA23F0 LDR X0, [X0 + 0xDA8]
	0x03DA23F4 BL 0x1C16CF4
	0x03DA23F8 ADRP X0, 0x37A000
	0x03DA23FC LDR X0, [X0 + 0xE8]
	0x03DA2400 BL 0x1C16CF4
	0x03DA2404 ADRP X0, 0x37A000
	0x03DA2408 LDR X0, [X0 + 0xF0]
	0x03DA240C BL 0x1C16CF4
	0x03DA2410 ADRP X0, 0x3C5000
	0x03DA2414 LDR X0, [X0 + 0xDB0]
	0x03DA2418 BL 0x1C16CF4
	0x03DA241C ADRP X0, 0x379000
	0x03DA2420 LDR X0, [X0 + 0x898]
	0x03DA2424 BL 0x1C16CF4
	0x03DA2428 MOVZ W8, 0x1
	0x03DA242C STRB W8, [X20 + 0xEEF]
	0x03DA2430 STP X31, X31, [X31 + 0x60]
	0x03DA2434 STR X31, [X31 + 0x70]
	0x03DA2438 STP X31, X31, [X31 + 0x40]
	0x03DA243C STR X31, [X31 + 0x50]
	0x03DA2440 STP X31, X31, [X31 + 0x20]
	0x03DA2444 STR X31, [X31 + 0x30]
	0x03DA2448 CBZ X19, 0x3DA2988
	0x03DA244C LDR X20, [X19 + 0x48]
	0x03DA2450 CBZ X20, 0x3DA2488
	0x03DA2454 ADRP X9, 0x379000
	0x03DA2458 LDR X9, [X9 + 0x898]
	0x03DA245C LDR X8, [X20]
	0x03DA2460 LDR X1, [X9]
	0x03DA2464 LDRB W10, [X8 + 0x130]
	0x03DA2468 LDRB W9, [X1 + 0x130]
	0x03DA246C CMP W10, W9
	0x03DA2470 B.CC 0x3DA299C
	0x03DA2474 LDR X8, [X8 + 0xC8]
	0x03DA2478 ADD X8, X8, X9, 0x3, LSL
	0x03DA247C LDUR X8, [X8 - 0x8]
	0x03DA2480 CMP X8, X1
	0x03DA2484 B.NE 0x3DA299C
	0x03DA2488 ADRP X8, 0x3C5000
	0x03DA248C LDR X8, [X8 + 0xDB0]
	0x03DA2490 LDR X0, [X8]
	0x03DA2494 LDR W8, [X0 + 0xE0]
	0x03DA2498 CBNZ W8, 0x3DA24A0
	0x03DA249C BL 0x1C16DFC
	0x03DA24A0 MOV X0, X20
	0x03DA24A4 MOV X1, X19
	0x03DA24A8 BL 0x3D9C420
	0x03DA24AC STR X0, [X19 + 0x38]
	0x03DA24B0 CBZ X20, 0x3DA2988
	0x03DA24B4 ADRP X24, 0x3C0000
	0x03DA24B8 LDR X24, [X24 + 0xCD8]
	0x03DA24BC MOV X21, X0
	0x03DA24C0 MOV X0, X20
	0x03DA24C4 MOV X1, X31
	0x03DA24C8 BL 0x3DEC0CC
	0x03DA24CC LDRB W8, [X19 + 0x30]
	0x03DA24D0 MOV X20, X0
	0x03DA24D4 TBZ X8, 0x1, 0x3DA25DC
	0x03DA24D8 MOVZ W8, 0x1
	0x03DA24DC STR W8, [X19 + 0x60]
	0x03DA24E0 CBZ X21, 0x3DA2988
	0x03DA24E4 LDR X8, [X21 + 0x10]
	0x03DA24E8 CBZ X8, 0x3DA2988
	0x03DA24EC LDR W8, [X8 + 0x18]
	0x03DA24F0 SUBS W22, W8, 0x1
	0x03DA24F4 B.MI 0x3DA2970
	0x03DA24F8 ADRP X25, 0x37A000
	0x03DA24FC LDR X25, [X25 + 0xF0]
	0x03DA2500 LDRB W8, [X19 + 0x40]
	0x03DA2504 TBNZ X8, 0x0, 0x3DA25DC
	0x03DA2508 LDR X0, [X21 + 0x10]
	0x03DA250C CBZ X0, 0x3DA2988
	0x03DA2510 LDR X2, [X25]
	0x03DA2514 MOV W1, W22
	0x03DA2518 BL 0x301BCCC
	0x03DA251C MOV X23, X0
	0x03DA2520 MOV X0, X19
	0x03DA2524 MOV X1, X23
	0x03DA2528 BL 0x3D9D8F8
	0x03DA252C TBNZ X0, 0x0, 0x3DA25D4
	0x03DA2530 CBZ X23, 0x3DA2988
	0x03DA2534 MOV X0, X23
	0x03DA2538 MOV X1, X31
	0x03DA253C BL 0x3DEC0CC
	0x03DA2540 CMP X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x646000
	008 Move W8, [X22+3799]
	009 Move W20, W2
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x37A000
	017 Move X0, [X0+2208]
	018 Call 0x1C17CF4
	019 Move X0, 0x37A000
	020 Move X0, [X0+2200]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3799], W8
	024 Move X8, [X19+16]
	025 Compare X8, 0
	026 JumpIfEqual {121}
	027 Move W8, [X19+32]
	028 Add W8, W8, 1
	029 Move [X19+32], W8
	030 Compare X21, 0
	031 JumpIfEqual {97}
	032 Move W8, [X21+48]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 8
	035 Compare TEMP, 8
	036 JumpIfNotEqual {55}
	037 Move X8, [X21]
	038 Move X0, X21
	039 Move X9, [X8+472]
	040 Move X1, [X8+480]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X0, 0
	043 JumpIfEqual {55}
	044 Move X8, 0x37A000
	045 Move X8, [X8+2200]
	046 Move X9, [X0]
	047 Move X8, [X8]
	048 Move W11, [X9+304]
	049 Move W10, [X8+304]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, [X9+200]
	052 Add X9, X9, X10
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W22, 1
	056 Move X0, [X19+16]
	057 Compare X0, 0
	058 JumpIfEqual {97}
	059 Move W23, W31
	060 Call EventCallbackList.get_Count, X0
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W8, [X21+64]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 2
	065 Compare TEMP, 2
	066 JumpIfEqual {98}
	067 Move TEMP, X22
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {80}
	071 Move X0, [X19+16]
	072 Compare X0, 0
	073 JumpIfEqual {97}
	074 Move W1, W23
	075 Call EventCallbackList.get_Item, X0, X1
	076 Compare X0, 0
	077 JumpIfEqual {97}
	078 Move W8, [X0+20]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, [X19+16]
	081 Compare X0, 0
	082 JumpIfEqual {97}
	083 Move W1, W23
	084 Call EventCallbackList.get_Item, X0, X1
	085 Compare X0, 0
	086 JumpIfEqual {97}
	087 Move X8, [X0]
	088 Move X1, X21
	089 Move W2, W20
	090 Move X9, [X8+376]
	091 Move X3, [X8+384]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move X0, [X19+16]
	094 Add W23, W23, 1
	095 Compare X0, 0
	096 JumpIfNotEqual {60}
	097 Call 0x1C17F20
	098 Move W8, [X19+32]
	099 Subtract W8, W8, 1
	100 Move [X19+32], W8
	101 Move X8, [X19+24]
	102 Compare X8, 0
	103 JumpIfEqual {121}
	104 Move X8, 0x37A000
	105 Move X8, [X8+2208]
	106 Move X20, [X19+16]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X20
	113 Call EventCallbackRegistry.ReleaseCallbackList, X0
	114 Move X0, [X19+24]
	115 Call EventCallbackRegistry.GetCallbackList, X0
	116 Move X8, [X19+24]
	117 Move [X19+16], X0
	118 Move X0, X8
	119 Call EventCallbackRegistry.ReleaseCallbackList, X0
	120 Move [X19+24], X31
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X22, [X31+16]
	124 Move X21, [X31+24]
	125 Move X30, [X31+48]
	126 Move X23, [X31+56]
	127 Return 
	128 Move X1, X31
	129 Call VisualElement.get_enabledInHierarchy, X0
	130 Move W22, W0

Method: System.Boolean HasTrickleDownHandlers()

Disassembly:
	0x03DA2544 B.NE 0x3DA25D4
	0x03DA2548 LDR X8, [X19]
	0x03DA254C MOV X0, X19
	0x03DA2550 MOV X1, X23
	0x03DA2554 LDP X9, X2, [X8 + 0x1E8]
	0x03DA2558 BLR X9
	0x03DA255C LDR X8, [X19]
	0x03DA2560 MOV X0, X19

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X8+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Boolean HasBubbleHandlers()

Disassembly:
	0x03DA2564 LDP X9, X1, [X8 + 0x1D8]
	0x03DA2568 BLR X9
	0x03DA256C CBZ X0, 0x3DA2988
	0x03DA2570 LDR X8, [X0]
	0x03DA2574 LDR X1, [X24]
	0x03DA2578 MOV X23, X0
	0x03DA257C LDRH W9, [X8 + 0x12E]
	0x03DA2580 CBZ X9, 0x3DA25A4

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X8+28]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03DA2584 LDR X10, [X8 + 0xB0]
	0x03DA2588 ADD X10, X10, 0x8
	0x03DA258C LDUR X11, [X10 - 0x8]
	0x03DA2590 CMP X11, X1
	0x03DA2594 B.EQ 0x3DA25B4
	0x03DA2598 SUBS X9, X9, 0x1
	0x03DA259C ADD X10, X10, 0x10
	0x03DA25A0 B.NE 0x3DA258C
	0x03DA25A4 MOVZ W2, 0x1
	0x03DA25A8 MOV X0, X23
	0x03DA25AC BL 0x1C5C788
	0x03DA25B0 B 0x3DA25C4
	0x03DA25B4 LDR W9, [X10]
	0x03DA25B8 ADD W9, W9, 0x1
	0x03DA25BC ADD X8, X8, W9, 0x4, SXTW
	0x03DA25C0 ADD X0, X8, 0x138
	0x03DA25C4 LDP X8, X2, [X0]
	0x03DA25C8 MOV X0, X23
	0x03DA25CC MOV X1, X19
	0x03DA25D0 BLR X8
	0x03DA25D4 SUBS W22, W22, 0x1
	0x03DA25D8 B.PL 0x3DA2500
	0x03DA25DC MOVZ W8, 0x2
	0x03DA25E0 MOV X27, X19
	0x03DA25E4 STR W8, [X27 + 0x60]!
	0x03DA25E8 CBZ X21, 0x3DA2988
	0x03DA25EC LDR X0, [X21 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x646000
	006 Move X21, 0x3C7000
	007 Move X20, 0x37A000
	008 Move W8, [X19+3800]
	009 Move X21, [X21+376]
	010 Move X20, [X20+2208]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x3C7000
	016 Move X0, [X0+376]
	017 Call 0x1C17CF4
	018 Move X0, 0x37A000
	019 Move X0, [X0+2208]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3800], W8
	023 Move X0, [X21]
	024 Call 0x1C17F10
	025 Move X19, X0
	026 Call EventCallbackListPool..ctor, X0
	027 Move X8, [X20]
	028 Move X8, [X8+184]
	029 Move [X8], X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return 

