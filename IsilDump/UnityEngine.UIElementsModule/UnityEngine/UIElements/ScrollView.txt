Type: UnityEngine.UIElements.ScrollView

Method: UnityEngine.UIElements.ScrollerVisibility get_horizontalScrollerVisibility()

Disassembly:
	0x03D7E938 ADD X10, X10, 0x8
	0x03D7E93C LDUR X11, [X10 - 0x8]

ISIL:
	001 Move W0, [X0+972]
	002 Return X0

Method: System.Void set_horizontalScrollerVisibility(UnityEngine.UIElements.ScrollerVisibility value)

Disassembly:
	0x03D7E940 CMP X11, X1
	0x03D7E944 B.EQ 0x3D7E964
	0x03D7E948 SUBS X9, X9, 0x1
	0x03D7E94C ADD X10, X10, 0x10
	0x03D7E950 B.NE 0x3D7E93C
	0x03D7E954 MOVZ W2, 0x13
	0x03D7E958 MOV X0, X20
	0x03D7E95C BL 0x1C5C788
	0x03D7E960 B 0x3D7E974
	0x03D7E964 LDR W9, [X10]
	0x03D7E968 ADD W9, W9, 0x13
	0x03D7E96C ADD X8, X8, W9, 0x4, SXTW
	0x03D7E970 ADD X0, X8, 0x138
	0x03D7E974 LDP X8, X1, [X0]
	0x03D7E978 MOV X0, X20
	0x03D7E97C BLR X8
	0x03D7E980 ADRP X8, 0xFFFFFFFFFCD6C000
	0x03D7E984 LDR V1, [X8 + 0xC4]
	0x03D7E988 FMUL S8, S0, S1
	0x03D7E98C FCMP S8, 0x0
	0x03D7E990 B.GE 0x3D7E9A4
	0x03D7E994 LDP X20, X19, [X31 + 0x20]
	0x03D7E998 LDP X30, X21, [X31 + 0x10]
	0x03D7E99C LDR V8, [X31], #0x30
	0x03D7E9A0 RET
	0x03D7E9A4 LDR X8, [X19 + 0x428]
	0x03D7E9A8 CBZ X8, 0x3D7E9D4
	0x03D7E9AC LDR X0, [X8 + 0x3D0]
	0x03D7E9B0 CBZ X0, 0x3D7E9D4
	0x03D7E9B4 LDR X8, [X0]
	0x03D7E9B8 LDP X20, X19, [X31 + 0x20]
	0x03D7E9BC LDP X30, X21, [X31 + 0x10]
	0x03D7E9C0 MOV V0.16B, V8.16B
	0x03D7E9C4 LDR X2, [X8 + 0x8F8]
	0x03D7E9C8 LDR X1, [X8 + 0x900]
	0x03D7E9CC LDR V8, [X31], #0x30
	0x03D7E9D0 BR X2
	0x03D7E9D4 BL 0x1C16F20
	0x03D7E9D8 LDR V0, [X0 + 0x3F0]
	0x03D7E9DC RET
	0x03D7E9E0 STP D9, D8, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+1104]
	005 Move X19, X0
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move [X0+972], W1
	008 Compare W8, 0
	009 JumpIfEqual {11}
	010 Move W20, 1
	011 Compare W1, 0
	012 JumpIfEqual {14}
	013 Move W20, W31
	014 Move X0, X19
	015 Call ScrollView.get_scrollableWidth, X0
	016 Move X8, -53030912
	017 Move V1, [X8+1040]
	018 Move W8, [X19+1104]
	019 NotImplemented "Instruction FCMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Move W9, [X19+976]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W2, 1
	025 Compare W9, 0
	026 JumpIfEqual {28}
	027 Move W2, W31
	028 Move X0, X19
	029 Call ScrollView.get_scrollableHeight, X0
	030 Move X8, -53030912
	031 Move V1, [X8+1040]
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 NotImplemented "Instruction CSET not yet implemented."
	034 Move X0, X19
	035 Move W1, W20
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Call ScrollView.UpdateScrollers, X0, X1, X2
	040 Return 

Method: UnityEngine.UIElements.ScrollerVisibility get_verticalScrollerVisibility()

Disassembly:
	0x03D7EE94 LDP D9, D8, [X31], #0x30
	0x03D7EE98 B 0x3D7E314

ISIL:
	001 Move W0, [X0+976]
	002 Return X0

Method: System.Void set_verticalScrollerVisibility(UnityEngine.UIElements.ScrollerVisibility value)

Disassembly:
	0x03D7EE9C BL 0x1C16F20
	0x03D7EEA0 ADRP X0, 0x37A000
	0x03D7EEA4 LDR X0, [X0 + 0x528]
	0x03D7EEA8 BL 0x1C16D08
	0x03D7EEAC BL 0x1C16F10
	0x03D7EEB0 MOV X19, X0
	0x03D7EEB4 ADRP X0, 0x3A4000
	0x03D7EEB8 LDR X0, [X0 + 0xB98]
	0x03D7EEBC BL 0x1C16D08
	0x03D7EEC0 MOV X1, X0
	0x03D7EEC4 MOV X0, X19
	0x03D7EEC8 MOV X2, X31
	0x03D7EECC BL 0x330E100
	0x03D7EED0 B 0x3D7EF04
	0x03D7EED4 ADRP X0, 0x37D000
	0x03D7EED8 LDR X0, [X0 + 0x578]
	0x03D7EEDC BL 0x1C16D08
	0x03D7EEE0 BL 0x1C16F10
	0x03D7EEE4 MOV X19, X0
	0x03D7EEE8 ADRP X0, 0x3E9000
	0x03D7EEEC LDR X0, [X0 + 0x2F0]
	0x03D7EEF0 BL 0x1C16D08
	0x03D7EEF4 MOV X1, X0
	0x03D7EEF8 MOV X0, X19
	0x03D7EEFC MOV X2, X31
	0x03D7EF00 BL 0x3314A68
	0x03D7EF04 ADRP X0, 0x3E9000
	0x03D7EF08 LDR X0, [X0 + 0x2F8]
	0x03D7EF0C BL 0x1C16D08
	0x03D7EF10 MOV X1, X0
	0x03D7EF14 MOV X0, X19
	0x03D7EF18 BL 0x1C16DEC
	0x03D7EF1C STP D11, D10, [X31 - 0x40]!
	0x03D7EF20 STP D9, D8, [X31 + 0x10]
	0x03D7EF24 STP X30, X21, [X31 + 0x20]
	0x03D7EF28 STP X20, X19, [X31 + 0x30]
	0x03D7EF2C ADRP X21, 0x669000
	0x03D7EF30 LDRB W8, [X21 + 0xDBD]
	0x03D7EF34 MOV X20, X1
	0x03D7EF38 MOV X19, X0
	0x03D7EF3C TBNZ X8, 0x0, 0x3D7EF54
	0x03D7EF40 ADRP X0, 0x39F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+1104]
	005 Move W9, [X0+972]
	006 Move X19, X0
	007 Move [X0+976], W1
	008 Compare W8, 0
	009 JumpIfEqual {12}
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W20, 1
	012 Compare W9, 0
	013 JumpIfEqual {15}
	014 Move W20, W31
	015 Move X0, X19
	016 Call ScrollView.get_scrollableWidth, X0
	017 Move X8, -53030912
	018 Move V1, [X8+1040]
	019 Move W8, [X19+1104]
	020 Move W1, [X19+976]
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 NotImplemented "Instruction CSET not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W2, 1
	026 Compare W1, 0
	027 JumpIfEqual {29}
	028 Move W2, W31
	029 Move X0, X19
	030 Call ScrollView.get_scrollableHeight, X0
	031 Move X8, -53030912
	032 Move V1, [X8+1040]
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Move X0, X19
	036 Move W1, W20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Call ScrollView.UpdateScrollers, X0, X1, X2
	041 Return 

Method: System.Void set_showHorizontal(System.Boolean value)

Disassembly:
	0x03D7EF44 LDR X0, [X0 + 0x688]
	0x03D7EF48 BL 0x1C16CF4
	0x03D7EF4C MOVZ W8, 0x1
	0x03D7EF50 STRB W8, [X21 + 0xDBD]
	0x03D7EF54 LDR X8, [X19]
	0x03D7EF58 MOV X0, X19
	0x03D7EF5C LDR X9, [X8 + 0x768]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 And W8, W1, 1
	005 Move [X0+972], W8
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: System.Void set_showVertical(System.Boolean value)

Disassembly:
	0x03D7EF60 LDR X1, [X8 + 0x770]
	0x03D7EF64 BLR X9
	0x03D7EF68 CBZ X0, 0x3D7F0D0
	0x03D7EF6C MOV X1, X31
	0x03D7EF70 BL 0x3DEC1BC
	0x03D7EF74 CBZ X0, 0x3D7F0D0
	0x03D7EF78 ADRP X10, 0x39F000

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 And W8, W1, 1
	005 Move [X0+976], W8
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: System.Boolean get_needsHorizontal()

Disassembly:
	0x03D7E9E4 STP X30, X21, [X31 + 0x10]
	0x03D7E9E8 STP X20, X19, [X31 + 0x20]
	0x03D7E9EC ADRP X21, 0x669000
	0x03D7E9F0 ADRP X20, 0x375000
	0x03D7E9F4 LDRB W8, [X21 + 0xDB6]
	0x03D7E9F8 LDR X20, [X20 + 0x5A8]
	0x03D7E9FC MOV V8.16B, V0.16B
	0x03D7EA00 MOV X19, X0
	0x03D7EA04 TBNZ X8, 0x0, 0x3D7EA1C
	0x03D7EA08 ADRP X0, 0x375000
	0x03D7EA0C LDR X0, [X0 + 0x5A8]
	0x03D7EA10 BL 0x1C16CF4
	0x03D7EA14 MOVZ W8, 0x1
	0x03D7EA18 STRB W8, [X21 + 0xDB6]
	0x03D7EA1C LDR X0, [X20]
	0x03D7EA20 LDR V9, [X19 + 0x3F0]
	0x03D7EA24 LDR W8, [X0 + 0xE0]
	0x03D7EA28 CBNZ W8, 0x3D7EA30

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+1104]
	003 Move W8, [X0+972]
	004 Compare W9, 0
	005 JumpIfEqual {8}
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W0, 1
	008 Compare W8, 0
	009 JumpIfEqual {11}
	010 Move W0, W31
	011 Call ScrollView.get_scrollableWidth, X0
	012 Move X8, -53030912
	013 Move V1, [X8+1040]
	014 NotImplemented "Instruction FCMP not yet implemented."
	015 NotImplemented "Instruction CSET not yet implemented."
	016 Move X30, [X31+16]
	017 Return X0

Method: System.Boolean get_needsVertical()

Disassembly:
	0x03D7EA2C BL 0x1C16DFC
	0x03D7EA30 MOVZ W8, 0x1
	0x03D7EA34 FABD S0, S9, S9
	0x03D7EA38 FMOV S1, W8
	0x03D7EA3C FCMP S0, S1
	0x03D7EA40 B.LE 0x3D7EA4C
	0x03D7EA44 STRB W8, [X19 + 0x3E4]
	0x03D7EA48 STR S8, [X19 + 0x3F0]
	0x03D7EA4C LDP X20, X19, [X31 + 0x20]
	0x03D7EA50 LDP X30, X21, [X31 + 0x10]
	0x03D7EA54 LDP D9, D8, [X31], #0x30
	0x03D7EA58 RET
	0x03D7EA5C LDR V0, [X0 + 0x3F4]
	0x03D7EA60 FCMP S0, 0x0
	0x03D7EA64 CSET W0, GT
	0x03D7EA68 RET
	0x03D7EA6C LDR V0, [X0 + 0x3F4]
	0x03D7EA70 RET
	0x03D7EA74 FMOV S1, W31

ISIL:
	001 Move [X31-16], X30
	002 Move W9, [X0+1104]
	003 Move W8, [X0+976]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W0, 1
	007 Compare W8, 0
	008 JumpIfEqual {10}
	009 Move W0, W31
	010 Call ScrollView.get_scrollableHeight, X0
	011 Move X8, -53030912
	012 Move V1, [X8+1040]
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 Move X30, [X31+16]
	016 Return X0

Method: System.Boolean get_isVerticalScrollDisplayed()

Disassembly:
	0x03D7F01C FMOV S0, W31
	0x03D7F020 B.LT 0x3D7F02C
	0x03D7F024 FCMP S1, S10
	0x03D7F028 B.LS 0x3D7F0BC
	0x03D7F02C FMOV W8, S2
	0x03D7F030 AND W9, W8, 0x7FFFFFFF
	0x03D7F034 MOVZ W8, 0x7F800000
	0x03D7F038 CMP W9, W8
	0x03D7F03C B.HI 0x3D7F0BC
	0x03D7F040 FMOV W9, S1
	0x03D7F044 AND W9, W9, 0x7FFFFFFF
	0x03D7F048 CMP W9, W8
	0x03D7F04C B.HI 0x3D7F0BC
	0x03D7F050 FSUB S0, S10, S9
	0x03D7F054 FSUB S3, S1, S2
	0x03D7F058 FCMP S3, S0
	0x03D7F05C B.LE 0x3D7F084
	0x03D7F060 FCMP S9, S2
	0x03D7F064 B.LE 0x3D7F074
	0x03D7F068 FCMP S1, S10
	0x03D7F06C FMOV S11, W31
	0x03D7F070 B.GT 0x3D7F098
	0x03D7F074 FCMP S2, S9
	0x03D7F078 B.GT 0x3D7F094
	0x03D7F07C FSUB S11, S1, S10
	0x03D7F080 B 0x3D7F098
	0x03D7F084 FSUB S11, S1, S10
	0x03D7F088 FMOV S0, -1
	0x03D7F08C FCMP S11, S0
	0x03D7F090 B.PL 0x3D7F098
	0x03D7F094 FSUB S11, S2, S9
	0x03D7F098 LDR X0, [X19 + 0x428]
	0x03D7F09C CBZ X0, 0x3D7F0D0
	0x03D7F0A0 MOV X1, X31
	0x03D7F0A4 BL 0x3D83FE4
	0x03D7F0A8 MOV X0, X19
	0x03D7F0AC MOV V8.16B, V0.16B
	0x03D7F0B0 BL 0x3D7DFCC
	0x03D7F0B4 FMUL S1, S11, S8
	0x03D7F0B8 FDIV S0, S1, S0
	0x03D7F0BC LDP X20, X19, [X31 + 0x30]
	0x03D7F0C0 LDP X30, X21, [X31 + 0x20]
	0x03D7F0C4 LDP D9, D8, [X31 + 0x10]
	0x03D7F0C8 LDP D11, D10, [X31], #0x40
	0x03D7F0CC RET
	0x03D7F0D0 BL 0x1C16F20
	0x03D7F0D4 STP D11, D10, [X31 - 0x40]!
	0x03D7F0D8 STP D9, D8, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x669000
	005 Move W8, [X20+3508]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x39E000
	012 Move X0, [X0+288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3508], W8
	016 Move X0, [X19+1064]
	017 Compare X0, 0
	018 JumpIfEqual {54}
	019 Move X1, X31
	020 Call VisualElement.get_resolvedStyle, X0
	021 Compare X0, 0
	022 JumpIfEqual {54}
	023 Move X10, 0x39E000
	024 Move X8, [X0]
	025 Move X10, [X10+288]
	026 Move X19, X0
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 15
	038 Move X0, X19
	039 Call 0x1C5D788
	040 Move W9, [X10]
	041 Add W9, W9, 15
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X8, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move X30, [X31+32]
	053 Return X0
	054 Call 0x1C17F20

Method: System.Boolean get_isHorizontalScrollDisplayed()

Disassembly:
	0x03D7F0DC STP X30, X21, [X31 + 0x20]
	0x03D7F0E0 STP X20, X19, [X31 + 0x30]
	0x03D7F0E4 ADRP X21, 0x668000
	0x03D7F0E8 LDRB W8, [X21 + 0xDBC]
	0x03D7F0EC MOV X20, X1
	0x03D7F0F0 MOV X19, X0
	0x03D7F0F4 TBNZ X8, 0x0, 0x3D7F10C
	0x03D7F0F8 ADRP X0, 0x39E000
	0x03D7F0FC LDR X0, [X0 + 0x688]
	0x03D7F100 BL 0x1C16CF4
	0x03D7F104 MOVZ W8, 0x1
	0x03D7F108 STRB W8, [X21 + 0xDBC]
	0x03D7F10C LDR X8, [X19]
	0x03D7F110 MOV X0, X19
	0x03D7F114 LDR X9, [X8 + 0x768]
	0x03D7F118 LDR X1, [X8 + 0x770]
	0x03D7F11C BLR X9
	0x03D7F120 CBZ X0, 0x3D7F288
	0x03D7F124 MOV X1, X31
	0x03D7F128 BL 0x3DEC1BC
	0x03D7F12C CBZ X0, 0x3D7F288
	0x03D7F130 ADRP X10, 0x39E000
	0x03D7F134 LDR X8, [X0]
	0x03D7F138 LDR X10, [X10 + 0x688]
	0x03D7F13C MOV X21, X0
	0x03D7F140 LDRH W9, [X8 + 0x12E]
	0x03D7F144 LDR X1, [X10]
	0x03D7F148 CBZ X9, 0x3D7F16C
	0x03D7F14C LDR X10, [X8 + 0xB0]
	0x03D7F150 ADD X10, X10, 0x8
	0x03D7F154 LDUR X11, [X10 - 0x8]
	0x03D7F158 CMP X11, X1
	0x03D7F15C B.EQ 0x3D7F17C
	0x03D7F160 SUBS X9, X9, 0x1
	0x03D7F164 ADD X10, X10, 0x10
	0x03D7F168 B.NE 0x3D7F154
	0x03D7F16C MOV X0, X21
	0x03D7F170 MOV W2, W31
	0x03D7F174 BL 0x1C5C788
	0x03D7F178 B 0x3D7F188
	0x03D7F17C LDRSW X9, [X10]
	0x03D7F180 ADD X8, X8, X9, 0x4, LSL
	0x03D7F184 ADD X0, X8, 0x138
	0x03D7F188 LDP X8, X1, [X0]
	0x03D7F18C MOV X0, X21
	0x03D7F190 BLR X8
	0x03D7F194 LDR X0, [X19 + 0x418]
	0x03D7F198 CBZ X0, 0x3D7F288

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x669000
	005 Move W8, [X20+3509]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x39E000
	012 Move X0, [X0+288]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3509], W8
	016 Move X0, [X19+1056]
	017 Compare X0, 0
	018 JumpIfEqual {54}
	019 Move X1, X31
	020 Call VisualElement.get_resolvedStyle, X0
	021 Compare X0, 0
	022 JumpIfEqual {54}
	023 Move X10, 0x39E000
	024 Move X8, [X0]
	025 Move X10, [X10+288]
	026 Move X19, X0
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move X1, [X10]
	029 Compare X9, 0
	030 JumpIfEqual {37}
	031 Move X10, [X8+176]
	032 Add X10, X10, 8
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Subtract X9, X9, 1
	036 Add X10, X10, 16
	037 Move W2, 15
	038 Move X0, X19
	039 Call 0x1C5D788
	040 Move W9, [X10]
	041 Add W9, W9, 15
	042 Add X8, X8, W9
	043 Add X0, X8, 312
	044 Move X8, [X0]
	045 Move X1, [X0+8]
	046 Move X0, X19
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 Move X30, [X31+32]
	053 Return X0
	054 Call 0x1C17F20

Method: UnityEngine.Vector2 get_scrollOffset()

Disassembly:
	0x03D7F19C MOV X1, X31
	0x03D7F1A0 MOV V8.16B, V0.16B
	0x03D7F1A4 BL 0x3DEDC10
	0x03D7F1A8 CBZ X20, 0x3D7F288
	0x03D7F1AC FSUB S9, S0, S8
	0x03D7F1B0 FADD S0, S2, S0
	0x03D7F1B4 MOV X0, X20
	0x03D7F1B8 MOV X1, X31
	0x03D7F1BC FSUB S10, S0, S8
	0x03D7F1C0 BL 0x3DEDC10
	0x03D7F1C4 FSUB S1, S0, S8
	0x03D7F1C8 FADD S0, S2, S0
	0x03D7F1CC FSUB S2, S0, S8
	0x03D7F1D0 FCMP S1, S9
	0x03D7F1D4 FMOV S0, W31
	0x03D7F1D8 B.LT 0x3D7F1E4
	0x03D7F1DC FCMP S2, S10
	0x03D7F1E0 B.LS 0x3D7F274

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+1056]
	006 Compare X0, 0
	007 JumpIfEqual {22}
	008 Move X1, X31
	009 Call Scroller.get_value, X0
	010 Move X0, [X19+1064]
	011 Compare X0, 0
	012 JumpIfEqual {22}
	013 Move X1, X31
	014 Move V8, V0
	015 Call Scroller.get_value, X0
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Move V1, V0
	019 Move V0, V8
	020 Move V8, [X31+32]
	021 Return X0
	022 Call 0x1C17F20

Method: System.Void set_scrollOffset(UnityEngine.Vector2 value)

Disassembly:
	0x03D7F1E4 FMOV W8, S1
	0x03D7F1E8 AND W9, W8, 0x7FFFFFFF
	0x03D7F1EC MOVZ W8, 0x7F800000
	0x03D7F1F0 CMP W9, W8
	0x03D7F1F4 B.HI 0x3D7F274
	0x03D7F1F8 FMOV W9, S2
	0x03D7F1FC AND W9, W9, 0x7FFFFFFF
	0x03D7F200 CMP W9, W8
	0x03D7F204 B.HI 0x3D7F274
	0x03D7F208 FSUB S0, S10, S9
	0x03D7F20C FSUB S3, S2, S1
	0x03D7F210 FCMP S3, S0
	0x03D7F214 B.LE 0x3D7F23C
	0x03D7F218 FCMP S9, S1
	0x03D7F21C B.LE 0x3D7F22C
	0x03D7F220 FCMP S2, S10
	0x03D7F224 FMOV S11, W31
	0x03D7F228 B.GT 0x3D7F250
	0x03D7F22C FCMP S1, S9
	0x03D7F230 B.GT 0x3D7F24C
	0x03D7F234 FSUB S11, S2, S10
	0x03D7F238 B 0x3D7F250
	0x03D7F23C FSUB S11, S2, S10
	0x03D7F240 FMOV S0, -1
	0x03D7F244 FCMP S11, S0
	0x03D7F248 B.PL 0x3D7F250
	0x03D7F24C FSUB S11, S1, S9
	0x03D7F250 LDR X0, [X19 + 0x420]
	0x03D7F254 CBZ X0, 0x3D7F288
	0x03D7F258 MOV X1, X31
	0x03D7F25C BL 0x3D83FE4
	0x03D7F260 MOV X0, X19
	0x03D7F264 MOV V8.16B, V0.16B
	0x03D7F268 BL 0x3D7DF7C
	0x03D7F26C FMUL S1, S11, S8
	0x03D7F270 FDIV S0, S1, S0
	0x03D7F274 LDP X20, X19, [X31 + 0x30]
	0x03D7F278 LDP X30, X21, [X31 + 0x20]
	0x03D7F27C LDP D9, D8, [X31 + 0x10]
	0x03D7F280 LDP D11, D10, [X31], #0x40
	0x03D7F284 RET
	0x03D7F288 BL 0x1C16F20
	0x03D7F28C FSUB S4, S1, S0
	0x03D7F290 FSUB S5, S3, S2
	0x03D7F294 FCMP S5, S4
	0x03D7F298 B.LE 0x3D7F2C0
	0x03D7F29C FCMP S0, S2
	0x03D7F2A0 B.LE 0x3D7F2B0
	0x03D7F2A4 FCMP S3, S1
	0x03D7F2A8 FMOV S4, W31
	0x03D7F2AC B.GT 0x3D7F2D4
	0x03D7F2B0 FCMP S2, S0
	0x03D7F2B4 B.GT 0x3D7F2D0
	0x03D7F2B8 FSUB S4, S3, S1
	0x03D7F2BC B 0x3D7F2D4
	0x03D7F2C0 FSUB S4, S3, S1
	0x03D7F2C4 FMOV S1, -1
	0x03D7F2C8 FCMP S4, S1
	0x03D7F2CC B.PL 0x3D7F2D4
	0x03D7F2D0 FSUB S4, S2, S0
	0x03D7F2D4 MOV V0.16B, V4.16B
	0x03D7F2D8 RET
	0x03D7F2DC LDR X0, [X0 + 0x418]
	0x03D7F2E0 RET
	0x03D7F2E4 LDR X0, [X0 + 0x420]
	0x03D7F2E8 RET
	0x03D7F2EC LDR X0, [X0 + 0x428]
	0x03D7F2F0 RET
	0x03D7F2F4 LDR X0, [X0 + 0x430]
	0x03D7F2F8 RET
	0x03D7F2FC MOV W1, W31
	0x03D7F300 B 0x3D7F304
	0x03D7F304 SUB X31, X31, 0x70
	0x03D7F308 STP X29, X30, [X31 + 0x10]
	0x03D7F30C STP X28, X27, [X31 + 0x20]
	0x03D7F310 STP X26, X25, [X31 + 0x30]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move V8, V1
	007 Move V9, V0
	008 Move X19, X0
	009 Call ScrollView.get_scrollOffset, X0
	010 Move X8, -53039104
	011 Move V2, [X8+3872]
	012 Subtract S0, S9, S0
	013 Subtract S1, S8, S1
	014 Multiply S0, S0, S0
	015 Multiply S1, S1, S1
	016 Add S0, S0, S1
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move X0, [X19+1056]
	019 Compare X0, 0
	020 JumpIfEqual {79}
	021 Move V0, V9
	022 Move X1, X31
	023 Call Scroller.set_value, X0, V0
	024 Move X0, [X19+1064]
	025 Compare X0, 0
	026 JumpIfEqual {79}
	027 Move V0, V8
	028 Move X1, X31
	029 Call Scroller.set_value, X0, V0
	030 Move X0, X19
	031 Move X1, X31
	032 Call VisualElement.get_panel, X0
	033 Compare X0, 0
	034 JumpIfEqual {41}
	035 Move W8, [X19+1104]
	036 Move W9, [X19+972]
	037 Compare W8, 0
	038 JumpIfEqual {47}
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W20, 1
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+16]
	044 Move D9, [X31+48]
	045 Move D8, [X31+56]
	046 Return 
	047 Compare W9, 0
	048 JumpIfEqual {50}
	049 Move W20, W31
	050 Move X0, X19
	051 Call ScrollView.get_scrollableWidth, X0
	052 Move X8, -53035008
	053 Move V1, [X8+1040]
	054 Move W8, [X19+1104]
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move W9, [X19+976]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W2, 1
	061 Compare W9, 0
	062 JumpIfEqual {64}
	063 Move W2, W31
	064 Move X0, X19
	065 Call ScrollView.get_scrollableHeight, X0
	066 Move X8, -53035008
	067 Move V1, [X8+1040]
	068 NotImplemented "Instruction FCMP not yet implemented."
	069 NotImplemented "Instruction CSET not yet implemented."
	070 Move X0, X19
	071 Move W1, W20
	072 Call ScrollView.UpdateScrollers, X0, X1, X2
	073 Move X0, X19
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X30, [X31+16]
	077 Move D9, [X31+48]
	078 Move D8, [X31+56]
	079 Call 0x1C17F20

Method: System.Void set_horizontalPageSize(System.Single value)

Disassembly:
	0x03D7F5B0 LDR X8, [X25]
	0x03D7F5B4 MOV X0, X19

ISIL:
	001 Move [X0+1000], S0

Method: System.Void set_verticalPageSize(System.Single value)

Disassembly:
	0x03D7F7C4 MOV X0, X21
	0x03D7F7C8 MOV X2, X31

ISIL:
	001 Move [X0+1004], S0

Method: System.Single get_mouseWheelScrollSize()

Disassembly:
	0x03D7F9D8 FMOV S1, W8
	0x03D7F9DC MOV X1, X21

ISIL:
	001 Move V0, [X0+1008]
	002 Return V0

Method: System.Void set_mouseWheelScrollSize(System.Single value)

Disassembly:
	0x03D7F9E0 MOV X3, X31
	0x03D7F9E4 MOV X20, X0
	0x03D7F9E8 BL 0x3D842D0
	0x03D7F9EC CBZ X20, 0x3D7FEA8
	0x03D7F9F0 ADRP X8, 0x3E8000
	0x03D7F9F4 LDR X8, [X8 + 0x3A0]
	0x03D7F9F8 MOV X0, X20
	0x03D7F9FC MOV X2, X31
	0x03D7FA00 LDR X1, [X8]
	0x03D7FA04 BL 0x3DEB98C
	0x03D7FA08 LDR X8, [X19 + 0x420]
	0x03D7FA0C STR X20, [X19 + 0x428]
	0x03D7FA10 CBZ X8, 0x3D7FEA8
	0x03D7FA14 LDR X8, [X8 + 0x3D0]
	0x03D7FA18 CBZ X8, 0x3D7FEA8
	0x03D7FA1C ADRP X28, 0x375000
	0x03D7FA20 LDR X28, [X28 + 0xE70]
	0x03D7FA24 ADRP X27, 0x3E8000
	0x03D7FA28 LDR X20, [X8 + 0x480]
	0x03D7FA2C LDR X0, [X28]
	0x03D7FA30 LDR X27, [X27 + 0x378]
	0x03D7FA34 BL 0x1C16F10
	0x03D7FA38 LDR X2, [X27]
	0x03D7FA3C MOV X1, X19
	0x03D7FA40 MOV X3, X31
	0x03D7FA44 MOV X21, X0
	0x03D7FA48 BL 0x3314368
	0x03D7FA4C CBZ X20, 0x3D7FEA8
	0x03D7FA50 ADRP X29, 0x3E8000
	0x03D7FA54 LDR X29, [X29 + 0x310]
	0x03D7FA58 MOV X0, X20

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x669000
	008 Move X20, 0x375000
	009 Move W8, [X21+3510]
	010 Move X20, [X20+1448]
	011 Move V8, V0
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x375000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3510], W8
	022 Move X0, [X20]
	023 Move V9, [X19+1008]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W8, 1
	029 NotImplemented "Instruction FABD not yet implemented."
	030 Move S1, W8
	031 NotImplemented "Instruction FCMP not yet implemented."
	032 Move [X19+996], W8
	033 Move [X19+1008], S8
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X30, [X31+16]
	037 Move X21, [X31+24]
	038 Move D9, [X31+48]
	039 Move D8, [X31+56]
	040 Return 

Method: System.Single get_scrollableWidth()

Disassembly:
	0x03D7EF7C LDR X8, [X0]
	0x03D7EF80 LDR X10, [X10 + 0x688]
	0x03D7EF84 MOV X21, X0
	0x03D7EF88 LDRH W9, [X8 + 0x12E]
	0x03D7EF8C LDR X1, [X10]
	0x03D7EF90 CBZ X9, 0x3D7EFB4
	0x03D7EF94 LDR X10, [X8 + 0xB0]
	0x03D7EF98 ADD X10, X10, 0x8
	0x03D7EF9C LDUR X11, [X10 - 0x8]
	0x03D7EFA0 CMP X11, X1
	0x03D7EFA4 B.EQ 0x3D7EFC4
	0x03D7EFA8 SUBS X9, X9, 0x1
	0x03D7EFAC ADD X10, X10, 0x10
	0x03D7EFB0 B.NE 0x3D7EF9C
	0x03D7EFB4 MOV X0, X21
	0x03D7EFB8 MOV W2, W31
	0x03D7EFBC BL 0x1C5C788
	0x03D7EFC0 B 0x3D7EFD0
	0x03D7EFC4 LDRSW X9, [X10]
	0x03D7EFC8 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+1896]
	007 Move X1, [X8+1904]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Compare X0, 0
	010 JumpIfEqual {24}
	011 Move X1, X31
	012 Call VisualElement.get_boundingBox, X0
	013 Move X0, [X19+1048]
	014 Compare X0, 0
	015 JumpIfEqual {24}
	016 Move X1, X31
	017 Move V8, V2
	018 Call VisualElement.get_layout, X0
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Subtract S0, S8, S2
	022 Move V8, [X31+32]
	023 Return V0
	024 Call 0x1C17F20

Method: System.Single get_scrollableHeight()

Disassembly:
	0x03D7EFCC ADD X0, X8, 0x138
	0x03D7EFD0 LDP X8, X1, [X0]
	0x03D7EFD4 MOV X0, X21
	0x03D7EFD8 BLR X8
	0x03D7EFDC LDR X0, [X19 + 0x418]
	0x03D7EFE0 CBZ X0, 0x3D7F0D0
	0x03D7EFE4 MOV X1, X31
	0x03D7EFE8 MOV V8.16B, V1.16B
	0x03D7EFEC BL 0x3DEDC10
	0x03D7EFF0 CBZ X20, 0x3D7F0D0
	0x03D7EFF4 FADD S0, S3, S1
	0x03D7EFF8 MOV X0, X20
	0x03D7EFFC MOV X1, X31
	0x03D7F000 FSUB S9, S1, S8
	0x03D7F004 FSUB S10, S0, S8
	0x03D7F008 BL 0x3DEDC10
	0x03D7F00C FSUB S2, S1, S8
	0x03D7F010 FADD S0, S3, S1
	0x03D7F014 FSUB S1, S0, S8
	0x03D7F018 FCMP S2, S9

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move X8, [X0]
	005 Move X19, X0
	006 Move X9, [X8+1896]
	007 Move X1, [X8+1904]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Compare X0, 0
	010 JumpIfEqual {24}
	011 Move X1, X31
	012 Call VisualElement.get_boundingBox, X0
	013 Move X0, [X19+1048]
	014 Compare X0, 0
	015 JumpIfEqual {24}
	016 Move X1, X31
	017 Move V8, V3
	018 Call VisualElement.get_layout, X0
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Subtract S0, S8, S3
	022 Move V8, [X31+32]
	023 Return V0
	024 Call 0x1C17F20

Method: System.Boolean get_hasInertia()

Disassembly:
	0x03D7FA5C MOV X1, X21
	0x03D7FA60 LDR X2, [X29]
	0x03D7FA64 BL 0x28F7674
	0x03D7FA68 LDR X8, [X19 + 0x428]

ISIL:
	001 Move V0, [X0+1012]
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Single get_scrollDecelerationRate()

Disassembly:
	0x03D7FA6C CBZ X8, 0x3D7FEA8
	0x03D7FA70 LDR X8, [X8 + 0x3D0]

ISIL:
	001 Move V0, [X0+1012]
	002 Return V0

Method: System.Void set_scrollDecelerationRate(System.Single value)

Disassembly:
	0x03D7FA74 CBZ X8, 0x3D7FEA8
	0x03D7FA78 LDR X0, [X28]
	0x03D7FA7C LDR X20, [X8 + 0x480]
	0x03D7FA80 BL 0x1C16F10

ISIL:
	001 Move S1, W31
	002 NotImplemented "Instruction FMAX not yet implemented."
	003 Move [X0+1012], S0
	004 Return 

Method: System.Single get_elasticity()

Disassembly:
	0x03D7FA84 LDR X2, [X27]
	0x03D7FA88 MOV X1, X19

ISIL:
	001 Move V0, [X0+1024]
	002 Return V0

Method: System.Void set_elasticity(System.Single value)

Disassembly:
	0x03D7FA8C MOV X3, X31
	0x03D7FA90 MOV X21, X0
	0x03D7FA94 BL 0x3314368
	0x03D7FA98 CBZ X20, 0x3D7FEA8

ISIL:
	001 Move S1, W31
	002 NotImplemented "Instruction FMAX not yet implemented."
	003 Move [X0+1024], S0
	004 Return 

Method: UnityEngine.UIElements.ScrollView/TouchScrollBehavior get_touchScrollBehavior()

Disassembly:
	0x03D7FA9C LDR X2, [X29]
	0x03D7FAA0 MOV X0, X20

ISIL:
	001 Move W0, [X0+1028]
	002 Return X0

Method: System.Void set_touchScrollBehavior(UnityEngine.UIElements.ScrollView/TouchScrollBehavior value)

Disassembly:
	0x03D7FAA4 MOV X1, X21
	0x03D7FAA8 BL 0x28F7674
	0x03D7FAAC LDR X8, [X19 + 0x420]
	0x03D7FAB0 CBZ X8, 0x3D7FEA8
	0x03D7FAB4 LDR X0, [X28]
	0x03D7FAB8 LDR X21, [X8 + 0x3D8]
	0x03D7FABC BL 0x1C16F10
	0x03D7FAC0 LDR X2, [X27]
	0x03D7FAC4 MOV X1, X19
	0x03D7FAC8 MOV X3, X31
	0x03D7FACC MOV X20, X0
	0x03D7FAD0 BL 0x3314368
	0x03D7FAD4 CBZ X21, 0x3D7FEA8
	0x03D7FAD8 LDR X0, [X21 + 0x4A0]
	0x03D7FADC CBZ X0, 0x3D7FEA8
	0x03D7FAE0 MOV X1, X20
	0x03D7FAE4 MOV X2, X31
	0x03D7FAE8 BL 0x3CECDB8
	0x03D7FAEC LDR X8, [X19 + 0x420]
	0x03D7FAF0 CBZ X8, 0x3D7FEA8
	0x03D7FAF4 LDR X0, [X28]
	0x03D7FAF8 LDR X21, [X8 + 0x3E0]
	0x03D7FAFC BL 0x1C16F10
	0x03D7FB00 LDR X2, [X27]
	0x03D7FB04 MOV X1, X19
	0x03D7FB08 MOV X3, X31
	0x03D7FB0C MOV X20, X0
	0x03D7FB10 BL 0x3314368
	0x03D7FB14 CBZ X21, 0x3D7FEA8
	0x03D7FB18 LDR X0, [X21 + 0x4A0]
	0x03D7FB1C CBZ X0, 0x3D7FEA8
	0x03D7FB20 MOV X1, X20
	0x03D7FB24 MOV X2, X31
	0x03D7FB28 BL 0x3CECDB8
	0x03D7FB2C LDR X8, [X19 + 0x428]
	0x03D7FB30 CBZ X8, 0x3D7FEA8
	0x03D7FB34 LDR X0, [X28]
	0x03D7FB38 LDR X21, [X8 + 0x3D8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x669000
	006 Move W8, [X21+3511]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3E9000
	014 Move X0, [X0+736]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3511], W8
	018 Move X8, [X19+1056]
	019 Move [X19+1028], W20
	020 Compare X8, 0
	021 JumpIfEqual {49}
	022 Move X8, [X8+976]
	023 Compare X8, 0
	024 JumpIfEqual {49}
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W9, 1
	027 Move [X8+1145], W9
	028 Move X8, [X19+1064]
	029 Compare X8, 0
	030 JumpIfEqual {49}
	031 Move X8, [X8+976]
	032 Compare X8, 0
	033 JumpIfEqual {49}
	034 Move W9, 1
	035 Move [X8+1145], W31
	036 Move X8, [X19+1064]
	037 Compare X8, 0
	038 JumpIfEqual {49}
	039 Move X8, [X8+976]
	040 Compare X8, 0
	041 JumpIfEqual {49}
	042 Move W9, W31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move [X8+1145], W9
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Call 0x1C17F20

Method: UnityEngine.UIElements.ScrollView/NestedInteractionKind get_nestedInteractionKind()

Disassembly:
	0x03D7FB3C BL 0x1C16F10
	0x03D7FB40 LDR X2, [X27]

ISIL:
	001 Move W0, [X0+1032]
	002 Return X0

Method: System.Void set_nestedInteractionKind(UnityEngine.UIElements.ScrollView/NestedInteractionKind value)

Disassembly:
	0x03D7FB44 MOV X1, X19
	0x03D7FB48 MOV X3, X31

ISIL:
	001 Move [X0+1032], W1
	002 Return 

Method: System.Void set_elasticAnimationIntervalMs(System.Int64 value)

Disassembly:
	0x03D7FB4C MOV X20, X0
	0x03D7FB50 BL 0x3314368
	0x03D7FB54 CBZ X21, 0x3D7FEA8
	0x03D7FB58 LDR X0, [X21 + 0x4A0]
	0x03D7FB5C CBZ X0, 0x3D7FEA8
	0x03D7FB60 MOV X1, X20
	0x03D7FB64 MOV X2, X31
	0x03D7FB68 BL 0x3CECDB8
	0x03D7FB6C LDR X8, [X19 + 0x428]
	0x03D7FB70 CBZ X8, 0x3D7FEA8
	0x03D7FB74 LDR X0, [X28]
	0x03D7FB78 LDR X21, [X8 + 0x3E0]
	0x03D7FB7C BL 0x1C16F10
	0x03D7FB80 LDR X2, [X27]
	0x03D7FB84 MOV X1, X19
	0x03D7FB88 MOV X3, X31
	0x03D7FB8C MOV X20, X0
	0x03D7FB90 BL 0x3314368
	0x03D7FB94 CBZ X21, 0x3D7FEA8
	0x03D7FB98 LDR X0, [X21 + 0x4A0]
	0x03D7FB9C CBZ X0, 0x3D7FEA8
	0x03D7FBA0 MOV X1, X20
	0x03D7FBA4 MOV X2, X31
	0x03D7FBA8 BL 0x3CECDB8
	0x03D7FBAC LDR X0, [X19 + 0x428]
	0x03D7FBB0 CBZ X0, 0x3D7FEA8
	0x03D7FBB4 LDR X8, [X25]
	0x03D7FBB8 MOV X2, X31
	0x03D7FBBC LDR X8, [X8 + 0xB8]
	0x03D7FBC0 LDR X1, [X8 + 0x68]
	0x03D7FBC4 BL 0x3DF1C70
	0x03D7FBC8 LDR X0, [X19 + 0x428]
	0x03D7FBCC CBZ X0, 0x3D7FEA8
	0x03D7FBD0 MOV X1, X31
	0x03D7FBD4 BL 0x3DE7EEC
	0x03D7FBD8 LDR X1, [X22]
	0x03D7FBDC MOV X20, X0
	0x03D7FBE0 MOVZ W0, 0x1
	0x03D7FBE4 BL 0x266EACC
	0x03D7FBE8 CBZ X20, 0x3D7FEA8
	0x03D7FBEC LDR X8, [X20]
	0x03D7FBF0 LDR X1, [X26]
	0x03D7FBF4 MOV X21, X0
	0x03D7FBF8 LDRH W9, [X8 + 0x12E]
	0x03D7FBFC CBZ X9, 0x3D7FC20
	0x03D7FC00 LDR X10, [X8 + 0xB0]
	0x03D7FC04 ADD X10, X10, 0x8
	0x03D7FC08 LDUR X11, [X10 - 0x8]
	0x03D7FC0C CMP X11, X1
	0x03D7FC10 B.EQ 0x3D7FC30
	0x03D7FC14 SUBS X9, X9, 0x1
	0x03D7FC18 ADD X10, X10, 0x10
	0x03D7FC1C B.NE 0x3D7FC08
	0x03D7FC20 MOVZ W2, 0x12
	0x03D7FC24 MOV X0, X20
	0x03D7FC28 BL 0x1C5C788
	0x03D7FC2C B 0x3D7FC40
	0x03D7FC30 LDR W9, [X10]
	0x03D7FC34 ADD W9, W9, 0x12
	0x03D7FC38 ADD X8, X8, W9, 0x4, SXTW
	0x03D7FC3C ADD X0, X8, 0x138
	0x03D7FC40 LDP X8, X2, [X0]
	0x03D7FC44 MOV X0, X20
	0x03D7FC48 MOV X1, X21
	0x03D7FC4C BLR X8
	0x03D7FC50 LDR X0, [X19 + 0x438]
	0x03D7FC54 CBZ X0, 0x3D7FEA8
	0x03D7FC58 ADRP X20, 0x3E8000
	0x03D7FC5C LDR X20, [X20 + 0x318]
	0x03D7FC60 LDR X1, [X19 + 0x428]
	0x03D7FC64 ADRP X21, 0x3E8000
	0x03D7FC68 ADRP X25, 0x3E8000
	0x03D7FC6C ADRP X22, 0x3E8000
	0x03D7FC70 LDR X21, [X21 + 0x350]
	0x03D7FC74 LDR X25, [X25 + 0x308]
	0x03D7FC78 LDR X22, [X22 + 0x358]
	0x03D7FC7C MOV X2, X31
	0x03D7FC80 BL 0x3DF60E8
	0x03D7FC84 MOVZ W1, 0x2
	0x03D7FC88 MOV X0, X19
	0x03D7FC8C BL 0x3D7EAA4
	0x03D7FC90 LDR X0, [X20]
	0x03D7FC94 BL 0x1C16F10
	0x03D7FC98 LDR X2, [X21]
	0x03D7FC9C MOV X1, X19
	0x03D7FCA0 MOV X3, X31
	0x03D7FCA4 MOV X20, X0
	0x03D7FCA8 BL 0x2D0E824
	0x03D7FCAC LDR X3, [X25]
	0x03D7FCB0 MOV X0, X19
	0x03D7FCB4 MOV X1, X20
	0x03D7FCB8 MOV W2, W31
	0x03D7FCBC BL 0x21A1534
	0x03D7FCC0 LDR X0, [X23]
	0x03D7FCC4 LDR X20, [X19 + 0x428]
	0x03D7FCC8 BL 0x1C16F10
	0x03D7FCCC LDR X2, [X22]
	0x03D7FCD0 MOV X1, X19
	0x03D7FCD4 MOV X3, X31
	0x03D7FCD8 MOV X21, X0
	0x03D7FCDC BL 0x2D0E824
	0x03D7FCE0 CBZ X20, 0x3D7FEA8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x669000
	006 Move W8, [X21+3512]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x376000
	014 Move X0, [X0+3696]
	015 Call 0x1C17CF4
	016 Move X0, 0x3A0000
	017 Move X0, [X0+2744]
	018 Call 0x1C17CF4
	019 Move X0, 0x39D000
	020 Move X0, [X0+1664]
	021 Call 0x1C17CF4
	022 Move X0, 0x3E9000
	023 Move X0, [X0+744]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3512], W8
	027 Move X8, [X19+1040]
	028 Move [X19+1040], X20
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, 0x376000
	031 Move X21, 0x3E9000
	032 Move X20, [X20+3696]
	033 Move X21, [X21+744]
	034 Move X0, X19
	035 Move X1, X31
	036 Call VisualElement.get_schedule, X0
	037 Move X8, [X20]
	038 Move X20, X0
	039 Move X0, X8
	040 Call 0x1C17F10
	041 Move X2, [X21]
	042 Move X1, X19
	043 Move X3, X31
	044 Move X21, X0
	045 Call Action..ctor, X0, X1, X2
	046 Compare X20, 0
	047 JumpIfEqual {108}
	048 Move X10, 0x39D000
	049 Move X8, [X20]
	050 Move X10, [X10+1664]
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X1, [X10]
	053 Compare X9, 0
	054 JumpIfEqual {61}
	055 Move X10, [X8+176]
	056 Add X10, X10, 8
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Subtract X9, X9, 1
	060 Add X10, X10, 16
	061 Move W2, 1
	062 Move X0, X20
	063 Call 0x1C5D788
	064 Move W9, [X10]
	065 Add W9, W9, 1
	066 Add X8, X8, W9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X2, [X0+8]
	070 Move X0, X20
	071 Move X1, X21
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare X0, 0
	074 JumpIfEqual {108}
	075 Move X10, 0x3A0000
	076 Move X8, [X0]
	077 Move X21, [X19+1040]
	078 Move X10, [X10+2744]
	079 Move X20, X0
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Move X1, [X10]
	082 Compare X9, 0
	083 JumpIfEqual {90}
	084 Move X10, [X8+176]
	085 Add X10, X10, 8
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract X9, X9, 1
	089 Add X10, X10, 16
	090 Move W2, 4
	091 Move X0, X20
	092 Call 0x1C5D788
	093 Move W9, [X10]
	094 Add W9, W9, 4
	095 Add X8, X8, W9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X2, [X0+8]
	099 Move X0, X20
	100 Move X1, X21
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move [X19+1200], X0
	103 Move X20, [X31+16]
	104 Move X19, [X31+24]
	105 Move X30, [X31+32]
	106 Move X21, [X31+40]
	107 Return 
	108 Call 0x1C17F20

Method: System.Void OnHorizontalScrollDragElementChanged(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03D7FCE4 LDR X3, [X24]
	0x03D7FCE8 MOV X0, X20
	0x03D7FCEC MOV X1, X21
	0x03D7FCF0 MOV W2, W31
	0x03D7FCF4 BL 0x21A1534
	0x03D7FCF8 LDR X0, [X23]
	0x03D7FCFC LDR X20, [X19 + 0x420]
	0x03D7FD00 BL 0x1C16F10
	0x03D7FD04 LDR X2, [X22]
	0x03D7FD08 MOV X1, X19
	0x03D7FD0C MOV X3, X31
	0x03D7FD10 MOV X21, X0
	0x03D7FD14 BL 0x2D0E824
	0x03D7FD18 CBZ X20, 0x3D7FEA8
	0x03D7FD1C LDR X3, [X24]
	0x03D7FD20 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {17}
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X8, -53039104
	007 Move V2, [X8+3872]
	008 Subtract V0, V0, V1
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 NotImplemented "Instruction FADDP not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move X30, [X31+16]
	013 Call ScrollView.UpdateHorizontalSliderPageSize, X0
	014 Return 
	015 Move X30, [X31+16]
	016 Return 
	017 Call 0x1C17F20

Method: System.Void OnVerticalScrollDragElementChanged(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03D7FD24 MOV X1, X21
	0x03D7FD28 MOV W2, W31
	0x03D7FD2C BL 0x21A1534
	0x03D7FD30 MOVZ W20, 0xBF800000
	0x03D7FD34 MOV X0, X19
	0x03D7FD38 STR W20, [X19 + 0x3E8]
	0x03D7FD3C BL 0x3D7E5B8
	0x03D7FD40 MOV X0, X19
	0x03D7FD44 STR W20, [X19 + 0x3EC]
	0x03D7FD48 BL 0x3D7E7CC
	0x03D7FD4C LDR X8, [X19 + 0x420]
	0x03D7FD50 CBZ X8, 0x3D7FEA8
	0x03D7FD54 LDR X8, [X8 + 0x3D0]
	0x03D7FD58 CBZ X8, 0x3D7FEA8
	0x03D7FD5C LDR X0, [X23]
	0x03D7FD60 ADRP X21, 0x3E8000

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {17}
	004 NotImplemented "Instruction LDUR not yet implemented."
	005 NotImplemented "Instruction LDUR not yet implemented."
	006 Move X8, -53039104
	007 Move V2, [X8+3872]
	008 Subtract V0, V0, V1
	009 NotImplemented "Instruction INVALID not yet implemented."
	010 NotImplemented "Instruction FADDP not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move X30, [X31+16]
	013 Call ScrollView.UpdateVerticalSliderPageSize, X0
	014 Return 
	015 Move X30, [X31+16]
	016 Return 
	017 Call 0x1C17F20

Method: System.Void UpdateHorizontalSliderPageSize()

Disassembly:
	0x03D7F5B8 MOV X2, X31
	0x03D7F5BC LDR X8, [X8 + 0xB8]
	0x03D7F5C0 LDR X1, [X8 + 0x10]
	0x03D7F5C4 BL 0x3DF1C70
	0x03D7F5C8 LDR X0, [X26]
	0x03D7F5CC BL 0x1C16F10
	0x03D7F5D0 MOV X1, X31
	0x03D7F5D4 MOV X21, X0
	0x03D7F5D8 BL 0x3DEF578
	0x03D7F5DC CBZ X21, 0x3D7FEA8
	0x03D7F5E0 ADRP X8, 0x3E8000
	0x03D7F5E4 LDR X8, [X8 + 0x390]
	0x03D7F5E8 MOV X0, X21
	0x03D7F5EC MOV X2, X31
	0x03D7F5F0 LDR X1, [X8]
	0x03D7F5F4 BL 0x3DEF278
	0x03D7F5F8 STR X21, [X19 + 0x438]
	0x03D7F5FC LDR X8, [X25]
	0x03D7F600 MOV X0, X21
	0x03D7F604 MOV X2, X31
	0x03D7F608 LDR X8, [X8 + 0xB8]
	0x03D7F60C LDR X1, [X8 + 0x38]
	0x03D7F610 BL 0x3DF1C70
	0x03D7F614 LDR X8, [X19 + 0x378]
	0x03D7F618 ADD X0, X31, 0x8
	0x03D7F61C MOV X2, X31
	0x03D7F620 STR X8, [X31 + 0x8]
	0x03D7F624 LDR X1, [X19 + 0x438]
	0x03D7F628 BL 0x3DF891C
	0x03D7F62C LDR X0, [X26]
	0x03D7F630 BL 0x1C16F10
	0x03D7F634 MOV X1, X31
	0x03D7F638 MOV X21, X0
	0x03D7F63C BL 0x3DEF578
	0x03D7F640 CBZ X21, 0x3D7FEA8
	0x03D7F644 ADRP X8, 0x3E8000
	0x03D7F648 LDR X8, [X8 + 0x398]
	0x03D7F64C ADRP X23, 0x39E000
	0x03D7F650 ADRP X27, 0x3E8000
	0x03D7F654 MOV X0, X21
	0x03D7F658 LDR X1, [X8]
	0x03D7F65C LDR X23, [X23 + 0x660]
	0x03D7F660 LDR X27, [X27 + 0x330]
	0x03D7F664 MOV X2, X31
	0x03D7F668 BL 0x3DEF278
	0x03D7F66C STR X21, [X19 + 0x418]
	0x03D7F670 LDR X8, [X25]
	0x03D7F674 MOV X0, X21
	0x03D7F678 MOV X2, X31
	0x03D7F67C LDR X8, [X8 + 0xB8]
	0x03D7F680 LDR X1, [X8 + 0x18]
	0x03D7F684 BL 0x3DF1C70
	0x03D7F688 LDR X0, [X23]
	0x03D7F68C LDR X21, [X19 + 0x418]
	0x03D7F690 BL 0x1C16F10
	0x03D7F694 LDR X2, [X27]
	0x03D7F698 MOV X1, X19
	0x03D7F69C MOV X3, X31
	0x03D7F6A0 MOV X22, X0
	0x03D7F6A4 BL 0x2D0E824
	0x03D7F6A8 CBZ X21, 0x3D7FEA8
	0x03D7F6AC ADRP X24, 0x39E000
	0x03D7F6B0 LDR X24, [X24 + 0x658]
	0x03D7F6B4 MOV X0, X21
	0x03D7F6B8 MOV X1, X22
	0x03D7F6BC MOV W2, W31
	0x03D7F6C0 LDR X3, [X24]
	0x03D7F6C4 BL 0x21A1534
	0x03D7F6C8 LDR X0, [X19 + 0x418]
	0x03D7F6CC CBZ X0, 0x3D7FEA8
	0x03D7F6D0 ADRP X22, 0x39E000
	0x03D7F6D4 ADRP X28, 0x3E8000
	0x03D7F6D8 LDR X22, [X22 + 0xD70]
	0x03D7F6DC LDR X28, [X28 + 0x320]
	0x03D7F6E0 MOVZ W1, 0x1
	0x03D7F6E4 MOV X2, X31
	0x03D7F6E8 BL 0x3DEF238
	0x03D7F6EC LDR X0, [X22]
	0x03D7F6F0 LDR X21, [X19 + 0x438]
	0x03D7F6F4 BL 0x1C16F10
	0x03D7F6F8 LDR X2, [X28]
	0x03D7F6FC MOV X1, X19
	0x03D7F700 MOV X3, X31
	0x03D7F704 MOV X22, X0
	0x03D7F708 BL 0x2D0E824
	0x03D7F70C CBZ X21, 0x3D7FEA8
	0x03D7F710 ADRP X8, 0x39E000
	0x03D7F714 LDR X8, [X8 + 0xD60]
	0x03D7F718 ADRP X28, 0x39E000
	0x03D7F71C ADRP X29, 0x3E8000
	0x03D7F720 MOV X0, X21
	0x03D7F724 LDR X3, [X8]
	0x03D7F728 LDR X28, [X28 + 0xD78]
	0x03D7F72C LDR X29, [X29 + 0x328]
	0x03D7F730 MOV X1, X22
	0x03D7F734 MOV W2, W31
	0x03D7F738 BL 0x21A1534
	0x03D7F73C LDR X0, [X28]
	0x03D7F740 LDR X21, [X19 + 0x438]
	0x03D7F744 BL 0x1C16F10
	0x03D7F748 LDR X2, [X29]
	0x03D7F74C MOV X1, X19
	0x03D7F750 MOV X3, X31
	0x03D7F754 MOV X22, X0
	0x03D7F758 BL 0x2D0E824
	0x03D7F75C CBZ X21, 0x3D7FEA8
	0x03D7F760 ADRP X8, 0x39E000
	0x03D7F764 LDR X8, [X8 + 0xD68]
	0x03D7F768 MOV X0, X21
	0x03D7F76C MOV X1, X22
	0x03D7F770 MOV W2, W31
	0x03D7F774 LDR X3, [X8]
	0x03D7F778 BL 0x21A1534
	0x03D7F77C LDR X0, [X19 + 0x438]
	0x03D7F780 CBZ X0, 0x3D7FEA8
	0x03D7F784 LDR X1, [X19 + 0x418]
	0x03D7F788 MOV X2, X31
	0x03D7F78C BL 0x3DF60E8
	0x03D7F790 LDR X0, [X26]
	0x03D7F794 BL 0x1C16F10
	0x03D7F798 MOV X1, X31
	0x03D7F79C MOV X21, X0
	0x03D7F7A0 BL 0x3DEF578
	0x03D7F7A4 CBZ X21, 0x3D7FEA8
	0x03D7F7A8 ADRP X8, 0x3E8000
	0x03D7F7AC LDR X8, [X8 + 0xF8]
	0x03D7F7B0 MOV X0, X21
	0x03D7F7B4 MOV X2, X31
	0x03D7F7B8 LDR X1, [X8]
	0x03D7F7BC BL 0x3DEF278
	0x03D7F7C0 MOVZ W1, 0x1

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x669000
	007 Move W8, [X20+3513]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x3E9000
	014 Move X0, [X0+728]
	015 Call 0x1C17CF4
	016 Move X0, 0x39E000
	017 Move X0, [X0+288]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3513], W8
	021 Move X0, [X19+1056]
	022 Compare X0, 0
	023 JumpIfEqual {144}
	024 Move X1, X31
	025 Call VisualElement.get_resolvedStyle, X0
	026 Compare X0, 0
	027 JumpIfEqual {144}
	028 Move X21, 0x39E000
	029 Move X8, [X0]
	030 Move X21, [X21+288]
	031 Move X20, X0
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X21]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 44
	043 Move X0, X20
	044 Call 0x1C5D788
	045 Move W9, [X10]
	046 Add W9, W9, 44
	047 Add X8, X8, W9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X20
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move V8, [X19+1000]
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 Move X20, 0x65B000
	056 Move W8, [X20+1450]
	057 Compare W8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, 0x37C000
	060 Move X0, [X0+1208]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+1450], W8
	064 Move X8, 0x37C000
	065 Move X8, [X8+1208]
	066 Move X9, -53035008
	067 Move V0, [X9+576]
	068 NotImplemented "Instruction FABS not yet implemented."
	069 Move X8, [X8]
	070 Move S2, 1
	071 NotImplemented "Instruction FMAXNM not yet implemented."
	072 Multiply S0, S1, S0
	073 Move X8, [X8+184]
	074 Move S1, 8
	075 Move S2, -1
	076 Move V3, [X8]
	077 Multiply S1, S3, S1
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 NotImplemented "Instruction FCSEL not yet implemented."
	080 NotImplemented "Instruction FABD not yet implemented."
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 Move X8, [X19+1056]
	083 Compare X8, 0
	084 JumpIfEqual {144}
	085 Move X8, [X8+976]
	086 Compare X8, 0
	087 JumpIfEqual {144}
	088 Move X0, [X8+1096]
	089 Compare X0, 0
	090 JumpIfEqual {144}
	091 Move X1, X31
	092 Call VisualElement.get_resolvedStyle, X0
	093 Compare X0, 0
	094 JumpIfEqual {144}
	095 Move X8, [X0]
	096 Move X1, [X21]
	097 Move X20, X0
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move W2, 44
	108 Move X0, X20
	109 Call 0x1C5D788
	110 Move W9, [X10]
	111 Add W9, W9, 44
	112 Add X8, X8, W9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X20
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X8, -53035008
	119 Move V1, [X8+196]
	120 Multiply S8, S0, S1
	121 NotImplemented "Instruction FCMP not yet implemented."
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X30, [X31+16]
	125 Move X21, [X31+24]
	126 Move V8, [X31+48]
	127 Return 
	128 Move X8, [X19+1056]
	129 Compare X8, 0
	130 JumpIfEqual {144}
	131 Move X0, [X8+976]
	132 Compare X0, 0
	133 JumpIfEqual {144}
	134 Move X8, [X0]
	135 Move X20, [X31+32]
	136 Move X19, [X31+40]
	137 Move X30, [X31+16]
	138 Move X21, [X31+24]
	139 Move V0, V8
	140 Move X2, [X8+2296]
	141 Move X1, [X8+2304]
	142 Move V8, [X31+48]
	143 CallNoReturn X2
	144 Call 0x1C17F20

Method: System.Void UpdateVerticalSliderPageSize()

Disassembly:
	0x03D7F7CC STR X21, [X19 + 0x430]
	0x03D7F7D0 BL 0x3DF609C
	0x03D7F7D4 LDR X0, [X23]
	0x03D7F7D8 LDR X21, [X19 + 0x430]
	0x03D7F7DC BL 0x1C16F10
	0x03D7F7E0 LDR X2, [X27]
	0x03D7F7E4 MOV X1, X19
	0x03D7F7E8 MOV X3, X31
	0x03D7F7EC MOV X22, X0
	0x03D7F7F0 BL 0x2D0E824
	0x03D7F7F4 CBZ X21, 0x3D7FEA8
	0x03D7F7F8 LDR X3, [X24]
	0x03D7F7FC MOV X0, X21
	0x03D7F800 MOV X1, X22
	0x03D7F804 MOV W2, W31
	0x03D7F808 BL 0x21A1534
	0x03D7F80C LDR X0, [X19 + 0x430]
	0x03D7F810 CBZ X0, 0x3D7FEA8
	0x03D7F814 LDR X8, [X25]
	0x03D7F818 MOV X2, X31
	0x03D7F81C LDR X8, [X8 + 0xB8]
	0x03D7F820 LDR X1, [X8 + 0x40]
	0x03D7F824 BL 0x3DF1C70
	0x03D7F828 LDR X0, [X19 + 0x430]
	0x03D7F82C CBZ X0, 0x3D7FEA8
	0x03D7F830 MOVZ W1, 0x2
	0x03D7F834 MOV X2, X31
	0x03D7F838 BL 0x3DEC0FC
	0x03D7F83C LDR X0, [X19 + 0x418]
	0x03D7F840 CBZ X0, 0x3D7FEA8
	0x03D7F844 LDR X1, [X19 + 0x430]
	0x03D7F848 ADRP X28, 0x376000
	0x03D7F84C ADRP X21, 0x3E8000
	0x03D7F850 ADRP X27, 0x3E8000
	0x03D7F854 LDR X28, [X28 + 0x5B0]
	0x03D7F858 LDR X21, [X21 + 0x368]
	0x03D7F85C LDR X27, [X27 + 0x380]
	0x03D7F860 MOV X2, X31
	0x03D7F864 BL 0x3DF60E8
	0x03D7F868 MOV X0, X19
	0x03D7F86C MOV W1, W20
	0x03D7F870 BL 0x3D7FEAC
	0x03D7F874 LDR X0, [X28]
	0x03D7F878 BL 0x1C16F10
	0x03D7F87C LDR X2, [X21]
	0x03D7F880 MOV X1, X19
	0x03D7F884 MOV X3, X31
	0x03D7F888 MOV X21, X0
	0x03D7F88C BL 0x2A6DA40
	0x03D7F890 LDR X0, [X27]
	0x03D7F894 BL 0x1C16F10
	0x03D7F898 MOVZ W8, 0x4F000000
	0x03D7F89C FMOV S0, W31
	0x03D7F8A0 FMOV S1, W8
	0x03D7F8A4 MOV X1, X21
	0x03D7F8A8 MOV W2, W31
	0x03D7F8AC MOV X3, X31
	0x03D7F8B0 MOV X20, X0
	0x03D7F8B4 BL 0x3D842D0
	0x03D7F8B8 CBZ X20, 0x3D7FEA8
	0x03D7F8BC ADRP X8, 0x3E8000
	0x03D7F8C0 LDR X8, [X8 + 0x388]
	0x03D7F8C4 MOV X0, X20
	0x03D7F8C8 MOV X2, X31
	0x03D7F8CC LDR X1, [X8]
	0x03D7F8D0 BL 0x3DEB98C
	0x03D7F8D4 STR X20, [X19 + 0x420]
	0x03D7F8D8 LDR X8, [X25]
	0x03D7F8DC MOV X0, X20
	0x03D7F8E0 MOV X2, X31
	0x03D7F8E4 LDR X8, [X8 + 0xB8]
	0x03D7F8E8 LDR X1, [X8 + 0x60]
	0x03D7F8EC BL 0x3DF1C70
	0x03D7F8F0 LDR X0, [X19 + 0x420]
	0x03D7F8F4 CBZ X0, 0x3D7FEA8
	0x03D7F8F8 ADRP X22, 0x39E000
	0x03D7F8FC LDR X22, [X22 + 0xF10]
	0x03D7F900 MOV X1, X31
	0x03D7F904 BL 0x3DE7EEC
	0x03D7F908 LDR X1, [X22]
	0x03D7F90C MOV X20, X0
	0x03D7F910 MOVZ W0, 0x1
	0x03D7F914 BL 0x266EACC
	0x03D7F918 CBZ X20, 0x3D7FEA8
	0x03D7F91C ADRP X26, 0x39D000
	0x03D7F920 LDR X8, [X20]
	0x03D7F924 LDR X26, [X26 + 0x128]
	0x03D7F928 ADRP X29, 0x3E8000
	0x03D7F92C MOV X21, X0
	0x03D7F930 LDRH W9, [X8 + 0x12E]
	0x03D7F934 LDR X1, [X26]
	0x03D7F938 LDR X29, [X29 + 0x370]
	0x03D7F93C CBZ X9, 0x3D7F960
	0x03D7F940 LDR X10, [X8 + 0xB0]
	0x03D7F944 ADD X10, X10, 0x8
	0x03D7F948 LDUR X11, [X10 - 0x8]
	0x03D7F94C CMP X11, X1
	0x03D7F950 B.EQ 0x3D7F970
	0x03D7F954 SUBS X9, X9, 0x1
	0x03D7F958 ADD X10, X10, 0x10
	0x03D7F95C B.NE 0x3D7F948
	0x03D7F960 MOVZ W2, 0x12
	0x03D7F964 MOV X0, X20
	0x03D7F968 BL 0x1C5C788
	0x03D7F96C B 0x3D7F980
	0x03D7F970 LDR W9, [X10]
	0x03D7F974 ADD W9, W9, 0x12
	0x03D7F978 ADD X8, X8, W9, 0x4, SXTW
	0x03D7F97C ADD X0, X8, 0x138
	0x03D7F980 LDP X8, X2, [X0]
	0x03D7F984 MOV X0, X20
	0x03D7F988 MOV X1, X21
	0x03D7F98C BLR X8
	0x03D7F990 LDR X8, [X19 + 0x378]
	0x03D7F994 ADD X0, X31, 0x8
	0x03D7F998 MOV X2, X31
	0x03D7F99C STR X8, [X31 + 0x8]
	0x03D7F9A0 LDR X1, [X19 + 0x420]
	0x03D7F9A4 BL 0x3DF891C
	0x03D7F9A8 LDR X0, [X28]
	0x03D7F9AC BL 0x1C16F10
	0x03D7F9B0 LDR X2, [X29]
	0x03D7F9B4 MOV X1, X19
	0x03D7F9B8 MOV X3, X31
	0x03D7F9BC MOV X21, X0
	0x03D7F9C0 BL 0x2A6DA40
	0x03D7F9C4 LDR X0, [X27]
	0x03D7F9C8 BL 0x1C16F10
	0x03D7F9CC MOVZ W8, 0x4F000000
	0x03D7F9D0 FMOV S0, W31
	0x03D7F9D4 MOVZ W2, 0x1

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x669000
	007 Move W8, [X20+3514]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x3E9000
	014 Move X0, [X0+728]
	015 Call 0x1C17CF4
	016 Move X0, 0x39E000
	017 Move X0, [X0+288]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3514], W8
	021 Move X0, [X19+1064]
	022 Compare X0, 0
	023 JumpIfEqual {144}
	024 Move X1, X31
	025 Call VisualElement.get_resolvedStyle, X0
	026 Compare X0, 0
	027 JumpIfEqual {144}
	028 Move X21, 0x39E000
	029 Move X8, [X0]
	030 Move X21, [X21+288]
	031 Move X20, X0
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X21]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 19
	043 Move X0, X20
	044 Call 0x1C5D788
	045 Move W9, [X10]
	046 Add W9, W9, 19
	047 Add X8, X8, W9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X20
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move V8, [X19+1004]
	054 NotImplemented "Instruction FCMP not yet implemented."
	055 Move X20, 0x65B000
	056 Move W8, [X20+1450]
	057 Compare W8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, 0x37C000
	060 Move X0, [X0+1208]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+1450], W8
	064 Move X8, 0x37C000
	065 Move X8, [X8+1208]
	066 Move X9, -53035008
	067 Move V0, [X9+576]
	068 NotImplemented "Instruction FABS not yet implemented."
	069 Move X8, [X8]
	070 Move S2, 1
	071 NotImplemented "Instruction FMAXNM not yet implemented."
	072 Multiply S0, S1, S0
	073 Move X8, [X8+184]
	074 Move S1, 8
	075 Move S2, -1
	076 Move V3, [X8]
	077 Multiply S1, S3, S1
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 NotImplemented "Instruction FCSEL not yet implemented."
	080 NotImplemented "Instruction FABD not yet implemented."
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 Move X8, [X19+1064]
	083 Compare X8, 0
	084 JumpIfEqual {144}
	085 Move X8, [X8+976]
	086 Compare X8, 0
	087 JumpIfEqual {144}
	088 Move X0, [X8+1096]
	089 Compare X0, 0
	090 JumpIfEqual {144}
	091 Move X1, X31
	092 Call VisualElement.get_resolvedStyle, X0
	093 Compare X0, 0
	094 JumpIfEqual {144}
	095 Move X8, [X0]
	096 Move X1, [X21]
	097 Move X20, X0
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move W2, 19
	108 Move X0, X20
	109 Call 0x1C5D788
	110 Move W9, [X10]
	111 Add W9, W9, 19
	112 Add X8, X8, W9
	113 Add X0, X8, 312
	114 Move X8, [X0]
	115 Move X1, [X0+8]
	116 Move X0, X20
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X8, -53035008
	119 Move V1, [X8+196]
	120 Multiply S8, S0, S1
	121 NotImplemented "Instruction FCMP not yet implemented."
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X30, [X31+16]
	125 Move X21, [X31+24]
	126 Move V8, [X31+48]
	127 Return 
	128 Move X8, [X19+1064]
	129 Compare X8, 0
	130 JumpIfEqual {144}
	131 Move X0, [X8+976]
	132 Compare X0, 0
	133 JumpIfEqual {144}
	134 Move X8, [X0]
	135 Move X20, [X31+32]
	136 Move X19, [X31+40]
	137 Move X30, [X31+16]
	138 Move X21, [X31+24]
	139 Move V0, V8
	140 Move X2, [X8+2296]
	141 Move X1, [X8+2304]
	142 Move V8, [X31+48]
	143 CallNoReturn X2
	144 Call 0x1C17F20

Method: System.Void UpdateContentViewTransform()

Disassembly:
	0x03D7F314 STP X24, X23, [X31 + 0x40]
	0x03D7F318 STP X22, X21, [X31 + 0x50]
	0x03D7F31C STP X20, X19, [X31 + 0x60]
	0x03D7F320 ADRP X22, 0x668000
	0x03D7F324 ADRP X21, 0x39D000
	0x03D7F328 LDRB W8, [X22 + 0xDBE]
	0x03D7F32C LDR X21, [X21 + 0xE98]
	0x03D7F330 MOV W20, W1
	0x03D7F334 MOV X19, X0
	0x03D7F338 TBNZ X8, 0x0, 0x3D7F50C
	0x03D7F33C ADRP X0, 0x376000
	0x03D7F340 LDR X0, [X0 + 0x5B0]
	0x03D7F344 BL 0x1C16CF4
	0x03D7F348 ADRP X0, 0x375000
	0x03D7F34C LDR X0, [X0 + 0xE70]
	0x03D7F350 BL 0x1C16CF4
	0x03D7F354 ADRP X0, 0x3E8000
	0x03D7F358 LDR X0, [X0 + 0x300]
	0x03D7F35C BL 0x1C16CF4
	0x03D7F360 ADRP X0, 0x3E8000
	0x03D7F364 LDR X0, [X0 + 0x2D8]
	0x03D7F368 BL 0x1C16CF4
	0x03D7F36C ADRP X0, 0x39E000
	0x03D7F370 LDR X0, [X0 + 0xD60]
	0x03D7F374 BL 0x1C16CF4
	0x03D7F378 ADRP X0, 0x39E000
	0x03D7F37C LDR X0, [X0 + 0xD68]
	0x03D7F380 BL 0x1C16CF4
	0x03D7F384 ADRP X0, 0x39E000
	0x03D7F388 LDR X0, [X0 + 0x658]
	0x03D7F38C BL 0x1C16CF4
	0x03D7F390 ADRP X0, 0x3E8000
	0x03D7F394 LDR X0, [X0 + 0x308]
	0x03D7F398 BL 0x1C16CF4
	0x03D7F39C ADRP X0, 0x3E8000
	0x03D7F3A0 LDR X0, [X0 + 0x310]
	0x03D7F3A4 BL 0x1C16CF4
	0x03D7F3A8 ADRP X0, 0x39E000
	0x03D7F3AC LDR X0, [X0 + 0xD70]
	0x03D7F3B0 BL 0x1C16CF4
	0x03D7F3B4 ADRP X0, 0x39E000
	0x03D7F3B8 LDR X0, [X0 + 0x660]
	0x03D7F3BC BL 0x1C16CF4
	0x03D7F3C0 ADRP X0, 0x39F000
	0x03D7F3C4 LDR X0, [X0 + 0xA0]
	0x03D7F3C8 BL 0x1C16CF4
	0x03D7F3CC ADRP X0, 0x3E8000
	0x03D7F3D0 LDR X0, [X0 + 0x318]
	0x03D7F3D4 BL 0x1C16CF4
	0x03D7F3D8 ADRP X0, 0x39E000
	0x03D7F3DC LDR X0, [X0 + 0xD78]
	0x03D7F3E0 BL 0x1C16CF4
	0x03D7F3E4 ADRP X0, 0x39E000
	0x03D7F3E8 LDR X0, [X0 + 0x788]
	0x03D7F3EC BL 0x1C16CF4
	0x03D7F3F0 ADRP X0, 0x39D000
	0x03D7F3F4 LDR X0, [X0 + 0x128]
	0x03D7F3F8 BL 0x1C16CF4
	0x03D7F3FC ADRP X0, 0x3E8000
	0x03D7F400 LDR X0, [X0 + 0x320]
	0x03D7F404 BL 0x1C16CF4
	0x03D7F408 ADRP X0, 0x3E8000
	0x03D7F40C LDR X0, [X0 + 0x328]
	0x03D7F410 BL 0x1C16CF4
	0x03D7F414 ADRP X0, 0x3E8000
	0x03D7F418 LDR X0, [X0 + 0x330]
	0x03D7F41C BL 0x1C16CF4
	0x03D7F420 ADRP X0, 0x3E8000
	0x03D7F424 LDR X0, [X0 + 0x338]
	0x03D7F428 BL 0x1C16CF4
	0x03D7F42C ADRP X0, 0x3E8000
	0x03D7F430 LDR X0, [X0 + 0x340]
	0x03D7F434 BL 0x1C16CF4
	0x03D7F438 ADRP X0, 0x3E8000
	0x03D7F43C LDR X0, [X0 + 0x348]
	0x03D7F440 BL 0x1C16CF4
	0x03D7F444 ADRP X0, 0x3E8000
	0x03D7F448 LDR X0, [X0 + 0x350]
	0x03D7F44C BL 0x1C16CF4
	0x03D7F450 ADRP X0, 0x3E8000
	0x03D7F454 LDR X0, [X0 + 0x358]
	0x03D7F458 BL 0x1C16CF4
	0x03D7F45C ADRP X0, 0x3E8000
	0x03D7F460 LDR X0, [X0 + 0x360]
	0x03D7F464 BL 0x1C16CF4
	0x03D7F468 ADRP X0, 0x3E8000
	0x03D7F46C LDR X0, [X0 + 0x368]
	0x03D7F470 BL 0x1C16CF4
	0x03D7F474 ADRP X0, 0x3E8000
	0x03D7F478 LDR X0, [X0 + 0x370]
	0x03D7F47C BL 0x1C16CF4
	0x03D7F480 ADRP X0, 0x3E8000
	0x03D7F484 LDR X0, [X0 + 0x378]
	0x03D7F488 BL 0x1C16CF4
	0x03D7F48C ADRP X0, 0x39E000
	0x03D7F490 LDR X0, [X0 + 0x678]
	0x03D7F494 BL 0x1C16CF4
	0x03D7F498 ADRP X0, 0x3E8000
	0x03D7F49C LDR X0, [X0 + 0x380]
	0x03D7F4A0 BL 0x1C16CF4
	0x03D7F4A4 ADRP X0, 0x39E000
	0x03D7F4A8 LDR X0, [X0 + 0xF10]
	0x03D7F4AC BL 0x1C16CF4
	0x03D7F4B0 ADRP X0, 0x39D000
	0x03D7F4B4 LDR X0, [X0 + 0xE98]
	0x03D7F4B8 BL 0x1C16CF4
	0x03D7F4BC ADRP X0, 0x39C000
	0x03D7F4C0 LDR X0, [X0 + 0x898]
	0x03D7F4C4 BL 0x1C16CF4
	0x03D7F4C8 ADRP X0, 0x3E8000
	0x03D7F4CC LDR X0, [X0 + 0x388]
	0x03D7F4D0 BL 0x1C16CF4
	0x03D7F4D4 ADRP X0, 0x3E8000
	0x03D7F4D8 LDR X0, [X0 + 0x390]
	0x03D7F4DC BL 0x1C16CF4
	0x03D7F4E0 ADRP X0, 0x3E8000
	0x03D7F4E4 LDR X0, [X0 + 0x398]
	0x03D7F4E8 BL 0x1C16CF4
	0x03D7F4EC ADRP X0, 0x3E8000
	0x03D7F4F0 LDR X0, [X0 + 0x3A0]
	0x03D7F4F4 BL 0x1C16CF4
	0x03D7F4F8 ADRP X0, 0x3E8000
	0x03D7F4FC LDR X0, [X0 + 0xF8]
	0x03D7F500 BL 0x1C16CF4
	0x03D7F504 MOVZ W8, 0x1
	0x03D7F508 STRB W8, [X22 + 0xDBE]
	0x03D7F50C MOVN W8, 0x0
	0x03D7F510 STR X31, [X31 + 0x8]
	0x03D7F514 STR W8, [X19 + 0x3C8]
	0x03D7F518 LDR X0, [X21]
	0x03D7F51C ADRP X25, 0x39E000
	0x03D7F520 LDR W8, [X0 + 0xE0]
	0x03D7F524 LDR X25, [X25 + 0x678]
	0x03D7F528 CBNZ W8, 0x3D7F534
	0x03D7F52C BL 0x1C16DFC
	0x03D7F530 LDR X0, [X21]
	0x03D7F534 LDR X8, [X0 + 0xB8]
	0x03D7F538 ADRP X26, 0x39C000
	0x03D7F53C LDR V0, [X8 + 0x28]
	0x03D7F540 MOVZ W8, 0x41900000
	0x03D7F544 STR W8, [X19 + 0x3F0]
	0x03D7F548 STR S0, [X19 + 0x3E0]
	0x03D7F54C LDR X0, [X25]
	0x03D7F550 LDR W8, [X0 + 0xE0]
	0x03D7F554 LDR X26, [X26 + 0x898]
	0x03D7F558 CBNZ W8, 0x3D7F564
	0x03D7F55C BL 0x1C16DFC
	0x03D7F560 LDR X0, [X25]
	0x03D7F564 LDR X8, [X0 + 0xB8]
	0x03D7F568 ADRP X9, 0xFFFFFFFFFCD6E000
	0x03D7F56C LDR V0, [X9 + 0xC98]
	0x03D7F570 LDR V1, [X8]
	0x03D7F574 STR D0, [X19 + 0x3F8]
	0x03D7F578 STR S1, [X19 + 0x3F4]
	0x03D7F57C LDR V0, [X8 + 0x4]
	0x03D7F580 STR S0, [X19 + 0x400]
	0x03D7F584 LDR X8, [X8 + 0x8]
	0x03D7F588 MOVI V0.2D, 0x0
	0x03D7F58C STR V0, [X19 + 0x44]
	0x03D7F590 STR X8, [X19 + 0x410]
	0x03D7F594 LDR X0, [X26]
	0x03D7F598 LDR W8, [X0 + 0xE0]
	0x03D7F59C CBNZ W8, 0x3D7F5A4
	0x03D7F5A0 BL 0x1C16DFC
	0x03D7F5A4 MOV X0, X19
	0x03D7F5A8 MOV X1, X31
	0x03D7F5AC BL 0x3DEF578

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x669000
	009 Move W8, [X20+3515]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x3A1000
	016 Move X0, [X0+1480]
	017 Call 0x1C17CF4
	018 Move X0, 0x39E000
	019 Move X0, [X0+288]
	020 Call 0x1C17CF4
	021 Move X0, 0x39F000
	022 Move X0, [X0+1672]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3515], W8
	026 Move X8, [X19]
	027 Move X0, X19
	028 Move X9, [X8+1896]
	029 Move X1, [X8+1904]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Compare X0, 0
	032 JumpIfEqual {178}
	033 Move X1, X31
	034 Call VisualElement.get_transform, X0
	035 Compare X0, 0
	036 JumpIfEqual {178}
	037 Move X21, 0x39F000
	038 Move X8, [X0]
	039 Move X21, [X21+1672]
	040 Move X20, X0
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X21]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move X0, X20
	052 Move W2, W31
	053 Call 0x1C5D788
	054 NotImplemented "Instruction LDRSW not yet implemented."
	055 Add X8, X8, X9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X20
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X0, X19
	062 Move V8, V2
	063 Call ScrollView.get_scrollOffset, X0
	064 Move W9, [X19+1104]
	065 Move W8, [X19+976]
	066 Move V10, V0
	067 Move V9, V1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X8, [X19]
	071 Move X0, X19
	072 Move X9, [X8+1896]
	073 Move X1, [X8+1904]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare X0, 0
	076 JumpIfEqual {178}
	077 Move X1, X31
	078 Call VisualElement.get_resolvedStyle, X0
	079 Compare X0, 0
	080 JumpIfEqual {178}
	081 Move X10, 0x39E000
	082 Move X8, [X0]
	083 Move X10, [X10+288]
	084 Move X20, X0
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X10]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move W2, 34
	096 Move X0, X20
	097 Call 0x1C5D788
	098 Compare W8, 0
	099 JumpIfNotEqual {114}
	100 Move X0, X19
	101 Call ScrollView.get_scrollableHeight, X0
	102 Move X8, -53035008
	103 Move V1, [X8+1040]
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Move W9, [X10]
	106 Add W9, W9, 34
	107 Add X8, X8, W9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X1, [X0+8]
	111 Move X0, X20
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Add S9, S9, S0
	114 Move X8, 0x3A1000
	115 Move X8, [X8+1480]
	116 Move X0, [X8]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 NotImplemented "Instruction FNEG not yet implemented."
	122 Move X0, X31
	123 Call GUIUtility.RoundToPixelGrid, V0
	124 Move V10, V0
	125 NotImplemented "Instruction FNEG not yet implemented."
	126 Move X0, X31
	127 Call GUIUtility.RoundToPixelGrid, V0
	128 Move X8, [X19]
	129 Move X0, X19
	130 Move V9, V0
	131 Move X9, [X8+1896]
	132 Move X1, [X8+1904]
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Compare X0, 0
	135 JumpIfEqual {178}
	136 Move X1, X31
	137 Call VisualElement.get_transform, X0
	138 Compare X0, 0
	139 JumpIfEqual {178}
	140 Move X8, [X0]
	141 Move X1, [X21]
	142 Move X20, X0
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Compare X9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move W2, 1
	153 Move X0, X20
	154 Call 0x1C5D788
	155 Move W9, [X10]
	156 Add W9, W9, 1
	157 Add X8, X8, W9
	158 Add X0, X8, 312
	159 Move X8, [X0]
	160 Move X1, [X0+8]
	161 Move X0, X20
	162 Move V0, V10
	163 Move V1, V9
	164 Move V2, V8
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Move X0, X19
	167 Move X20, [X31+48]
	168 Move X19, [X31+56]
	169 Move X30, [X31+32]
	170 Move X21, [X31+40]
	171 Move D9, [X31+16]
	172 Move D8, [X31+24]
	173 Move W1, 2048
	174 Move X2, X31
	175 Move V10, [X31+64]
	176 Call VisualElement.IncrementVersion, X0, X1
	177 Return 
	178 Call 0x1C17F20

Method: System.Void ScrollTo(UnityEngine.UIElements.VisualElement child)

Disassembly:
	0x03D7FD64 LDR X20, [X8 + 0x448]
	0x03D7FD68 LDR X21, [X21 + 0x338]
	0x03D7FD6C BL 0x1C16F10
	0x03D7FD70 LDR X2, [X21]
	0x03D7FD74 MOV X1, X19
	0x03D7FD78 MOV X3, X31
	0x03D7FD7C MOV X21, X0
	0x03D7FD80 BL 0x2D0E824
	0x03D7FD84 CBZ X20, 0x3D7FEA8
	0x03D7FD88 LDR X3, [X24]
	0x03D7FD8C MOV X0, X20
	0x03D7FD90 MOV X1, X21
	0x03D7FD94 MOV W2, W31
	0x03D7FD98 BL 0x21A1534
	0x03D7FD9C LDR X8, [X19 + 0x428]
	0x03D7FDA0 CBZ X8, 0x3D7FEA8
	0x03D7FDA4 LDR X8, [X8 + 0x3D0]
	0x03D7FDA8 CBZ X8, 0x3D7FEA8
	0x03D7FDAC LDR X0, [X23]
	0x03D7FDB0 ADRP X21, 0x3E8000
	0x03D7FDB4 LDR X20, [X8 + 0x448]
	0x03D7FDB8 LDR X21, [X21 + 0x360]
	0x03D7FDBC BL 0x1C16F10
	0x03D7FDC0 LDR X2, [X21]
	0x03D7FDC4 MOV X1, X19
	0x03D7FDC8 MOV X3, X31
	0x03D7FDCC MOV X21, X0
	0x03D7FDD0 BL 0x2D0E824
	0x03D7FDD4 CBZ X20, 0x3D7FEA8
	0x03D7FDD8 ADRP X22, 0x39F000
	0x03D7FDDC LDR X22, [X22 + 0xA0]
	0x03D7FDE0 LDR X3, [X24]
	0x03D7FDE4 ADRP X23, 0x3E8000
	0x03D7FDE8 ADRP X24, 0x39E000
	0x03D7FDEC ADRP X25, 0x3E8000
	0x03D7FDF0 LDR X23, [X23 + 0x340]
	0x03D7FDF4 LDR X24, [X24 + 0x788]
	0x03D7FDF8 LDR X25, [X25 + 0x348]
	0x03D7FDFC MOV X0, X20
	0x03D7FE00 MOV X1, X21
	0x03D7FE04 MOV W2, W31
	0x03D7FE08 BL 0x21A1534
	0x03D7FE0C LDR X0, [X22]
	0x03D7FE10 BL 0x1C16F10
	0x03D7FE14 LDR X2, [X23]
	0x03D7FE18 MOV X1, X19
	0x03D7FE1C MOV X3, X31
	0x03D7FE20 MOV X20, X0
	0x03D7FE24 BL 0x2D0E824
	0x03D7FE28 STR X20, [X19 + 0x4A0]
	0x03D7FE2C LDR X0, [X24]
	0x03D7FE30 BL 0x1C16F10
	0x03D7FE34 LDR X2, [X25]
	0x03D7FE38 MOV X1, X19
	0x03D7FE3C MOV X3, X31
	0x03D7FE40 MOV X20, X0
	0x03D7FE44 BL 0x2D0E824
	0x03D7FE48 STR X20, [X19 + 0x4A8]
	0x03D7FE4C ADRP X20, 0x65A000
	0x03D7FE50 LDRB W8, [X20 + 0x78F]
	0x03D7FE54 CBNZ W8, 0x3D7FE6C
	0x03D7FE58 ADRP X0, 0x37C000
	0x03D7FE5C LDR X0, [X0 + 0xF08]
	0x03D7FE60 BL 0x1C16CF4
	0x03D7FE64 MOVZ W8, 0x1
	0x03D7FE68 STRB W8, [X20 + 0x78F]
	0x03D7FE6C ADRP X8, 0x37C000
	0x03D7FE70 LDR X8, [X8 + 0xF08]
	0x03D7FE74 MOV X0, X19
	0x03D7FE78 LDR X8, [X8]
	0x03D7FE7C LDR X8, [X8 + 0xB8]
	0x03D7FE80 LDP S0, S1, [X8]
	0x03D7FE84 BL 0x3D7E1E4
	0x03D7FE88 LDP X20, X19, [X31 + 0x60]
	0x03D7FE8C LDP X22, X21, [X31 + 0x50]
	0x03D7FE90 LDP X24, X23, [X31 + 0x40]
	0x03D7FE94 LDP X26, X25, [X31 + 0x30]
	0x03D7FE98 LDP X28, X27, [X31 + 0x20]
	0x03D7FE9C LDP X29, X30, [X31 + 0x10]
	0x03D7FEA0 ADD X31, X31, 0x70
	0x03D7FEA4 RET
	0x03D7FEA8 BL 0x1C16F20
	0x03D7FEAC STR X30, [X31 - 0x30]!
	0x03D7FEB0 STP X22, X21, [X31 + 0x10]
	0x03D7FEB4 STP X20, X19, [X31 + 0x20]
	0x03D7FEB8 ADRP X22, 0x668000
	0x03D7FEBC ADRP X21, 0x39E000
	0x03D7FEC0 LDRB W8, [X22 + 0xDBF]
	0x03D7FEC4 LDR X21, [X21 + 0x678]
	0x03D7FEC8 MOV W20, W1
	0x03D7FECC MOV X19, X0
	0x03D7FED0 TBNZ X8, 0x0, 0x3D7FEE8
	0x03D7FED4 ADRP X0, 0x39E000
	0x03D7FED8 LDR X0, [X0 + 0x678]
	0x03D7FEDC BL 0x1C16CF4
	0x03D7FEE0 MOVZ W8, 0x1
	0x03D7FEE4 STRB W8, [X22 + 0xDBF]
	0x03D7FEE8 STR W20, [X19 + 0x450]
	0x03D7FEEC LDR X0, [X21]
	0x03D7FEF0 LDR W8, [X0 + 0xE0]
	0x03D7FEF4 CBNZ W8, 0x3D7FF00
	0x03D7FEF8 BL 0x1C16DFC
	0x03D7FEFC LDR X0, [X21]
	0x03D7FF00 LDR X8, [X0 + 0xB8]
	0x03D7FF04 MOV X0, X19
	0x03D7FF08 MOV X2, X31
	0x03D7FF0C LDR X1, [X8 + 0x78]
	0x03D7FF10 BL 0x3DF1B54
	0x03D7FF14 LDR X8, [X21]
	0x03D7FF18 MOV X0, X19

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X1, 0
	008 JumpIfEqual {95}
	009 Move X8, [X0]
	010 Move X20, X1
	011 Move X19, X0
	012 Move X9, [X8+1896]
	013 Move X1, [X8+1904]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Compare X0, 0
	016 JumpIfEqual {94}
	017 Move X1, X20
	018 Move X2, X31
	019 Call VisualElement.Contains, X0, X1
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {107}
	024 Move X21, 0x65B000
	025 Move W8, [X21+1935]
	026 Compare W8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, 0x37D000
	029 Move X0, [X0+3848]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1935], W8
	033 Move X8, 0x37D000
	034 Move X8, [X8+3848]
	035 Move X0, X19
	036 Move X8, [X8]
	037 Move X8, [X8+184]
	038 Move V0, [X8]
	039 Move [X19+1136], D0
	040 Call ScrollView.get_scrollableHeight, X0
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move S8, W31
	043 Move X0, X19
	044 Move X1, X20
	045 Call ScrollView.GetYDeltaOffset, X0, X1
	046 Move X21, [X19+1064]
	047 Move X0, X19
	048 Move V8, V0
	049 Call ScrollView.get_scrollOffset, X0
	050 Compare X21, 0
	051 JumpIfEqual {94}
	052 Add S0, S8, S1
	053 Move X0, X21
	054 Move X1, X31
	055 Call Scroller.set_value, X0, V0
	056 Move X0, X19
	057 Call ScrollView.get_scrollableWidth, X0
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 Move X0, X19
	060 Move X1, X20
	061 Call ScrollView.GetXDeltaOffset, X0, X1
	062 Move X20, [X19+1056]
	063 Move X0, X19
	064 Move V9, V0
	065 Call ScrollView.get_scrollOffset, X0
	066 Compare X20, 0
	067 JumpIfEqual {94}
	068 Add S0, S9, S0
	069 Move X0, X20
	070 Move X1, X31
	071 Call Scroller.set_value, X0, V0
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 NotImplemented "Instruction CSET not yet implemented."
	074 Move W8, W31
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Compare W8, 0
	077 JumpIfNotEqual {85}
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X30, [X31+16]
	081 Move X21, [X31+24]
	082 Move D9, [X31+48]
	083 Move D8, [X31+56]
	084 Return 
	085 Move X0, X19
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X30, [X31+16]
	089 Move X21, [X31+24]
	090 Move D9, [X31+48]
	091 Move D8, [X31+56]
	092 Call ScrollView.UpdateContentViewTransform, X0
	093 Return 
	094 Call 0x1C17F20
	095 Move X0, 0x37A000
	096 Move X0, [X0+1320]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0x3A4000
	101 Move X0, [X0+2968]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Move X2, X31
	106 Call ArgumentNullException..ctor, X0, X1
	107 Move X0, 0x37D000
	108 Move X0, [X0+1400]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0x3E9000
	113 Move X0, [X0+752]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X19
	117 Move X2, X31
	118 Call ArgumentException..ctor, X0, X1
	119 Move X0, 0x3E9000
	120 Move X0, [X0+760]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Call 0x1C17DEC

Method: System.Single GetXDeltaOffset(UnityEngine.UIElements.VisualElement child)

Disassembly:
	0x03D800D4 LDR X0, [X21]
	0x03D800D8 LDR X8, [X0 + 0xB8]
	0x03D800DC MOV X0, X19
	0x03D800E0 MOV X2, X31
	0x03D800E4 LDR X1, [X8 + 0x88]
	0x03D800E8 BL 0x3DF1C70
	0x03D800EC LDR X8, [X21]
	0x03D800F0 MOV X0, X19
	0x03D800F4 MOV X2, X31
	0x03D800F8 LDR X8, [X8 + 0xB8]
	0x03D800FC LDR X1, [X8 + 0x80]
	0x03D80100 BL 0x3DF1C70
	0x03D80104 LDR X0, [X19 + 0x418]
	0x03D80108 CBZ X0, 0x3D801E8
	0x03D8010C LDR X8, [X21]
	0x03D80110 MOV X2, X31
	0x03D80114 LDR X8, [X8 + 0xB8]
	0x03D80118 LDR X1, [X8 + 0x30]
	0x03D8011C BL 0x3DF1C70
	0x03D80120 LDR X8, [X19]
	0x03D80124 MOV X0, X19
	0x03D80128 LDR X9, [X8 + 0x768]
	0x03D8012C LDR X1, [X8 + 0x770]
	0x03D80130 BLR X9
	0x03D80134 CBZ X0, 0x3D801E8
	0x03D80138 MOVZ W8, 0x58
	0x03D8013C B 0x3D801B8
	0x03D80140 LDR X0, [X21]
	0x03D80144 LDR W8, [X0 + 0xE0]
	0x03D80148 CBNZ W8, 0x3D80154
	0x03D8014C BL 0x1C16DFC
	0x03D80150 LDR X0, [X21]
	0x03D80154 LDR X8, [X0 + 0xB8]
	0x03D80158 MOV X0, X19
	0x03D8015C MOV X2, X31
	0x03D80160 LDR X1, [X8 + 0x88]
	0x03D80164 BL 0x3DF1C70
	0x03D80168 LDR X8, [X21]
	0x03D8016C MOV X0, X19
	0x03D80170 MOV X2, X31
	0x03D80174 LDR X8, [X8 + 0xB8]
	0x03D80178 LDR X1, [X8 + 0x70]
	0x03D8017C BL 0x3DF1C70
	0x03D80180 LDR X0, [X19 + 0x418]
	0x03D80184 CBZ X0, 0x3D801E8
	0x03D80188 LDR X8, [X21]
	0x03D8018C MOV X2, X31
	0x03D80190 LDR X8, [X8 + 0xB8]
	0x03D80194 LDR X1, [X8 + 0x20]
	0x03D80198 BL 0x3DF1C70
	0x03D8019C LDR X8, [X19]
	0x03D801A0 MOV X0, X19
	0x03D801A4 LDR X9, [X8 + 0x768]
	0x03D801A8 LDR X1, [X8 + 0x770]
	0x03D801AC BLR X9
	0x03D801B0 CBZ X0, 0x3D801E8
	0x03D801B4 MOVZ W8, 0x48
	0x03D801B8 LDR X9, [X21]
	0x03D801BC LDP X20, X19, [X31 + 0x20]
	0x03D801C0 LDP X22, X21, [X31 + 0x10]
	0x03D801C4 MOV X2, X31
	0x03D801C8 LDR X9, [X9 + 0xB8]
	0x03D801CC LDR X1, [X9, X8, LSL]
	0x03D801D0 LDR X30, [X31], #0x30
	0x03D801D4 B 0x3DF1C70
	0x03D801D8 LDP X20, X19, [X31 + 0x20]
	0x03D801DC LDP X22, X21, [X31 + 0x10]
	0x03D801E0 LDR X30, [X31], #0x30
	0x03D801E4 RET
	0x03D801E8 BL 0x1C16F20
	0x03D801EC LDR W0, [X0 + 0x450]
	0x03D801F0 RET
	0x03D801F4 LDR W8, [X0 + 0x450]
	0x03D801F8 CMP W8, W1
	0x03D801FC B.NE 0x3D80204
	0x03D80200 RET
	0x03D80204 B 0x3D7FEAC
	0x03D80208 STP X30, X25, [X31 - 0x40]!
	0x03D8020C STP X24, X23, [X31 + 0x10]
	0x03D80210 STP X22, X21, [X31 + 0x20]
	0x03D80214 STP X20, X19, [X31 + 0x30]
	0x03D80218 ADRP X21, 0x667000
	0x03D8021C LDRB W8, [X21 + 0xDC0]
	0x03D80220 MOV X20, X1
	0x03D80224 MOV X19, X0
	0x03D80228 TBNZ X8, 0x0, 0x3D80354
	0x03D8022C ADRP X0, 0x39D000
	0x03D80230 LDR X0, [X0 + 0x638]
	0x03D80234 BL 0x1C16CF4
	0x03D80238 ADRP X0, 0x3E3000
	0x03D8023C LDR X0, [X0 + 0xB8]
	0x03D80240 BL 0x1C16CF4
	0x03D80244 ADRP X0, 0x3E7000
	0x03D80248 LDR X0, [X0 + 0x3A8]
	0x03D8024C BL 0x1C16CF4
	0x03D80250 ADRP X0, 0x3E6000
	0x03D80254 LDR X0, [X0 + 0x518]
	0x03D80258 BL 0x1C16CF4
	0x03D8025C ADRP X0, 0x39D000
	0x03D80260 LDR X0, [X0 + 0x770]
	0x03D80264 BL 0x1C16CF4
	0x03D80268 ADRP X0, 0x39E000
	0x03D8026C LDR X0, [X0 + 0x98]
	0x03D80270 BL 0x1C16CF4
	0x03D80274 ADRP X0, 0x39D000
	0x03D80278 LDR X0, [X0 + 0x778]
	0x03D8027C BL 0x1C16CF4
	0x03D80280 ADRP X0, 0x3E2000
	0x03D80284 LDR X0, [X0 + 0xA00]
	0x03D80288 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x668000
	010 Move W8, [X21+3516]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x39E000
	018 Move X0, [X0+1672]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3516], W8
	022 Move X8, [X19]
	023 Move X0, X19
	024 Move X9, [X8+1896]
	025 Move X1, [X8+1904]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare X0, 0
	028 JumpIfEqual {115}
	029 Move X1, X31
	030 Call VisualElement.get_transform, X0
	031 Compare X0, 0
	032 JumpIfEqual {115}
	033 Move X10, 0x39E000
	034 Move X8, [X0]
	035 Move X10, [X10+1672]
	036 Move X21, X0
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move X0, X21
	048 Move W2, W31
	049 Call 0x1C5D788
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Add X8, X8, X9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X1, [X0+8]
	055 Move X0, X21
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X0, [X19+1048]
	058 Compare X0, 0
	059 JumpIfEqual {115}
	060 Move X1, X31
	061 Move V8, V0
	062 Call VisualElement.get_worldBound, X0
	063 Compare X20, 0
	064 JumpIfEqual {115}
	065 Subtract S9, S0, S8
	066 Add S0, S2, S0
	067 Move X0, X20
	068 Move X1, X31
	069 Subtract S10, S0, S8
	070 Call VisualElement.get_worldBound, X0
	071 Subtract S1, S0, S8
	072 Add S0, S2, S0
	073 Subtract S2, S0, S8
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 Move S0, W31
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Move W8, S1
	078 And W9, W8, 0x7FFFFFFF
	079 Move W8, 0x7F800000
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W9, S2
	082 And W9, W9, 0x7FFFFFFF
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract S0, S10, S9
	085 Subtract S3, S2, S1
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 Move S11, W31
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Subtract S11, S2, S10
	092 Subtract S11, S2, S10
	093 Move S0, -1
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 Subtract S11, S1, S9
	096 Move X0, [X19+1056]
	097 Compare X0, 0
	098 JumpIfEqual {115}
	099 Move X1, X31
	100 Call Scroller.get_highValue, X0
	101 Move X0, X19
	102 Move V8, V0
	103 Call ScrollView.get_scrollableWidth, X0
	104 Multiply S1, S11, S8
	105 NotImplemented "Instruction FDIV not yet implemented."
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X30, [X31+32]
	109 Move X21, [X31+40]
	110 Move D9, [X31+16]
	111 Move D8, [X31+24]
	112 Move D11, [X31+64]
	113 Move D10, [X31+72]
	114 Return V0
	115 Call 0x1C17F20

Method: System.Single GetYDeltaOffset(UnityEngine.UIElements.VisualElement child)

Disassembly:
	0x03D7FF1C MOV X2, X31
	0x03D7FF20 LDR X8, [X8 + 0xB8]
	0x03D7FF24 LDR X1, [X8 + 0x70]
	0x03D7FF28 BL 0x3DF1B54
	0x03D7FF2C LDR X8, [X21]
	0x03D7FF30 MOV X0, X19
	0x03D7FF34 MOV X2, X31
	0x03D7FF38 LDR X8, [X8 + 0xB8]
	0x03D7FF3C LDR X1, [X8 + 0x80]
	0x03D7FF40 BL 0x3DF1B54
	0x03D7FF44 LDR X8, [X21]
	0x03D7FF48 MOV X0, X19
	0x03D7FF4C MOV X2, X31
	0x03D7FF50 LDR X8, [X8 + 0xB8]
	0x03D7FF54 LDR X1, [X8 + 0x88]
	0x03D7FF58 BL 0x3DF1B54
	0x03D7FF5C LDR X8, [X19]
	0x03D7FF60 MOV X0, X19
	0x03D7FF64 LDR X9, [X8 + 0x768]
	0x03D7FF68 LDR X1, [X8 + 0x770]
	0x03D7FF6C BLR X9
	0x03D7FF70 CBZ X0, 0x3D801E8
	0x03D7FF74 LDR X8, [X21]
	0x03D7FF78 MOV X2, X31
	0x03D7FF7C LDR X8, [X8 + 0xB8]
	0x03D7FF80 LDR X1, [X8 + 0x50]
	0x03D7FF84 BL 0x3DF1B54
	0x03D7FF88 LDR X8, [X19]
	0x03D7FF8C MOV X0, X19
	0x03D7FF90 LDR X9, [X8 + 0x768]
	0x03D7FF94 LDR X1, [X8 + 0x770]
	0x03D7FF98 BLR X9
	0x03D7FF9C CBZ X0, 0x3D801E8
	0x03D7FFA0 LDR X8, [X21]
	0x03D7FFA4 MOV X2, X31
	0x03D7FFA8 LDR X8, [X8 + 0xB8]
	0x03D7FFAC LDR X1, [X8 + 0x48]
	0x03D7FFB0 BL 0x3DF1B54
	0x03D7FFB4 LDR X8, [X19]
	0x03D7FFB8 MOV X0, X19
	0x03D7FFBC LDR X9, [X8 + 0x768]
	0x03D7FFC0 LDR X1, [X8 + 0x770]
	0x03D7FFC4 BLR X9
	0x03D7FFC8 CBZ X0, 0x3D801E8
	0x03D7FFCC LDR X8, [X21]
	0x03D7FFD0 MOV X2, X31
	0x03D7FFD4 LDR X8, [X8 + 0xB8]
	0x03D7FFD8 LDR X1, [X8 + 0x58]
	0x03D7FFDC BL 0x3DF1B54
	0x03D7FFE0 LDR X0, [X19 + 0x418]
	0x03D7FFE4 CBZ X0, 0x3D801E8
	0x03D7FFE8 LDR X8, [X21]
	0x03D7FFEC MOV X2, X31
	0x03D7FFF0 LDR X8, [X8 + 0xB8]
	0x03D7FFF4 LDR X1, [X8 + 0x28]
	0x03D7FFF8 BL 0x3DF1B54
	0x03D7FFFC LDR X0, [X19 + 0x418]
	0x03D80000 CBZ X0, 0x3D801E8
	0x03D80004 LDR X8, [X21]
	0x03D80008 MOV X2, X31
	0x03D8000C LDR X8, [X8 + 0xB8]
	0x03D80010 LDR X1, [X8 + 0x20]
	0x03D80014 BL 0x3DF1B54
	0x03D80018 LDR X0, [X19 + 0x418]
	0x03D8001C CBZ X0, 0x3D801E8
	0x03D80020 LDR X8, [X21]
	0x03D80024 MOV X2, X31
	0x03D80028 LDR X8, [X8 + 0xB8]
	0x03D8002C LDR X1, [X8 + 0x30]
	0x03D80030 BL 0x3DF1B54
	0x03D80034 CMP W20, 0x2
	0x03D80038 B.EQ 0x3D800C4
	0x03D8003C CMP W20, 0x1
	0x03D80040 B.EQ 0x3D80140
	0x03D80044 CBNZ W20, 0x3D801D8
	0x03D80048 LDR X0, [X21]
	0x03D8004C LDR W8, [X0 + 0xE0]
	0x03D80050 CBNZ W8, 0x3D8005C
	0x03D80054 BL 0x1C16DFC
	0x03D80058 LDR X0, [X21]
	0x03D8005C LDR X8, [X0 + 0xB8]
	0x03D80060 MOV X0, X19
	0x03D80064 MOV X2, X31
	0x03D80068 LDR X1, [X8 + 0x88]
	0x03D8006C BL 0x3DF1C70
	0x03D80070 LDR X8, [X21]
	0x03D80074 MOV X0, X19
	0x03D80078 MOV X2, X31
	0x03D8007C LDR X8, [X8 + 0xB8]
	0x03D80080 LDR X1, [X8 + 0x78]
	0x03D80084 BL 0x3DF1C70
	0x03D80088 LDR X0, [X19 + 0x418]
	0x03D8008C CBZ X0, 0x3D801E8
	0x03D80090 LDR X8, [X21]
	0x03D80094 MOV X2, X31
	0x03D80098 LDR X8, [X8 + 0xB8]
	0x03D8009C LDR X1, [X8 + 0x28]
	0x03D800A0 BL 0x3DF1C70
	0x03D800A4 LDR X8, [X19]
	0x03D800A8 MOV X0, X19
	0x03D800AC LDR X9, [X8 + 0x768]
	0x03D800B0 LDR X1, [X8 + 0x770]
	0x03D800B4 BLR X9
	0x03D800B8 CBZ X0, 0x3D801E8
	0x03D800BC MOVZ W8, 0x50
	0x03D800C0 B 0x3D801B8
	0x03D800C4 LDR X0, [X21]
	0x03D800C8 LDR W8, [X0 + 0xE0]
	0x03D800CC CBNZ W8, 0x3D800D8
	0x03D800D0 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x669000
	010 Move W8, [X21+3517]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x39F000
	018 Move X0, [X0+1672]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3517], W8
	022 Move X8, [X19]
	023 Move X0, X19
	024 Move X9, [X8+1896]
	025 Move X1, [X8+1904]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Compare X0, 0
	028 JumpIfEqual {115}
	029 Move X1, X31
	030 Call VisualElement.get_transform, X0
	031 Compare X0, 0
	032 JumpIfEqual {115}
	033 Move X10, 0x39F000
	034 Move X8, [X0]
	035 Move X10, [X10+1672]
	036 Move X21, X0
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X10]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move X0, X21
	048 Move W2, W31
	049 Call 0x1C5D788
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Add X8, X8, X9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X1, [X0+8]
	055 Move X0, X21
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X0, [X19+1048]
	058 Compare X0, 0
	059 JumpIfEqual {115}
	060 Move X1, X31
	061 Move V8, V1
	062 Call VisualElement.get_worldBound, X0
	063 Compare X20, 0
	064 JumpIfEqual {115}
	065 Add S0, S3, S1
	066 Move X0, X20
	067 Move X1, X31
	068 Subtract S9, S1, S8
	069 Subtract S10, S0, S8
	070 Call VisualElement.get_worldBound, X0
	071 Subtract S2, S1, S8
	072 Add S0, S3, S1
	073 Subtract S1, S0, S8
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 Move S0, W31
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Move W8, S2
	078 And W9, W8, 0x7FFFFFFF
	079 Move W8, 0x7F800000
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W9, S1
	082 And W9, W9, 0x7FFFFFFF
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Subtract S0, S10, S9
	085 Subtract S3, S1, S2
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 Move S11, W31
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Subtract S11, S1, S10
	092 Subtract S11, S1, S10
	093 Move S0, -1
	094 NotImplemented "Instruction FCMP not yet implemented."
	095 Subtract S11, S2, S9
	096 Move X0, [X19+1064]
	097 Compare X0, 0
	098 JumpIfEqual {115}
	099 Move X1, X31
	100 Call Scroller.get_highValue, X0
	101 Move X0, X19
	102 Move V8, V0
	103 Call ScrollView.get_scrollableHeight, X0
	104 Multiply S1, S11, S8
	105 NotImplemented "Instruction FDIV not yet implemented."
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X30, [X31+32]
	109 Move X21, [X31+40]
	110 Move D9, [X31+16]
	111 Move D8, [X31+24]
	112 Move D11, [X31+64]
	113 Move D10, [X31+72]
	114 Return V0
	115 Call 0x1C17F20

Method: System.Single GetDeltaDistance(System.Single viewMin, System.Single viewMax, System.Single childBoundaryMin, System.Single childBoundaryMax)

Disassembly:
	0x03D8028C ADRP X0, 0x39E000
	0x03D80290 LDR X0, [X0 + 0xA0]
	0x03D80294 BL 0x1C16CF4
	0x03D80298 ADRP X0, 0x3E7000
	0x03D8029C LDR X0, [X0 + 0x3B0]
	0x03D802A0 BL 0x1C16CF4
	0x03D802A4 ADRP X0, 0x39D000
	0x03D802A8 LDR X0, [X0 + 0x780]
	0x03D802AC BL 0x1C16CF4
	0x03D802B0 ADRP X0, 0x3E2000
	0x03D802B4 LDR X0, [X0 + 0xA08]
	0x03D802B8 BL 0x1C16CF4
	0x03D802BC ADRP X0, 0x39D000
	0x03D802C0 LDR X0, [X0 + 0x640]
	0x03D802C4 BL 0x1C16CF4
	0x03D802C8 ADRP X0, 0x39D000
	0x03D802CC LDR X0, [X0 + 0x788]
	0x03D802D0 BL 0x1C16CF4
	0x03D802D4 ADRP X0, 0x39C000
	0x03D802D8 LDR X0, [X0 + 0xE80]

ISIL:
	001 Subtract S4, S1, S0
	002 Subtract S5, S3, S2
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 NotImplemented "Instruction FCMP not yet implemented."
	006 Move S4, W31
	007 NotImplemented "Instruction FCMP not yet implemented."
	008 Subtract S4, S3, S1
	009 Subtract S4, S3, S1
	010 Move S1, -1
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Subtract S4, S2, S0
	013 Move V0, V4
	014 Return V0

Method: UnityEngine.UIElements.VisualElement get_contentViewport()

Disassembly:
	0x03D802DC BL 0x1C16CF4
	0x03D802E0 ADRP X0, 0x39D000

ISIL:
	001 Move X0, [X0+1048]
	002 Return X0

Method: UnityEngine.UIElements.Scroller get_horizontalScroller()

Disassembly:
	0x03D802E4 LDR X0, [X0 + 0xD80]
	0x03D802E8 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+1056]
	002 Return X0

Method: UnityEngine.UIElements.Scroller get_verticalScroller()

Disassembly:
	0x03D802EC ADRP X0, 0x3E7000
	0x03D802F0 LDR X0, [X0 + 0x3B8]

ISIL:
	001 Move X0, [X0+1064]
	002 Return X0

Method: UnityEngine.UIElements.VisualElement get_contentContainer()

Disassembly:
	0x03D802F4 BL 0x1C16CF4
	0x03D802F8 ADRP X0, 0x3E7000

ISIL:
	001 Move X0, [X0+1072]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03D802FC LDR X0, [X0 + 0x3C0]
	0x03D80300 BL 0x1C16CF4

ISIL:
	001 Move W1, W31

Method: System.Void .ctor(UnityEngine.UIElements.ScrollViewMode scrollViewMode)

Disassembly:
	0x03D80304 ADRP X0, 0x3E7000
	0x03D80308 LDR X0, [X0 + 0x3C8]
	0x03D8030C BL 0x1C16CF4
	0x03D80310 ADRP X0, 0x3E7000
	0x03D80314 LDR X0, [X0 + 0x3D0]
	0x03D80318 BL 0x1C16CF4
	0x03D8031C ADRP X0, 0x3E7000
	0x03D80320 LDR X0, [X0 + 0x340]
	0x03D80324 BL 0x1C16CF4
	0x03D80328 ADRP X0, 0x3E7000
	0x03D8032C LDR X0, [X0 + 0x348]
	0x03D80330 BL 0x1C16CF4
	0x03D80334 ADRP X0, 0x3E7000
	0x03D80338 LDR X0, [X0 + 0x3D8]
	0x03D8033C BL 0x1C16CF4
	0x03D80340 ADRP X0, 0x3E7000
	0x03D80344 LDR X0, [X0 + 0x3E0]
	0x03D80348 BL 0x1C16CF4
	0x03D8034C MOVZ W8, 0x1
	0x03D80350 STRB W8, [X21 + 0xDC0]
	0x03D80354 CBZ X20, 0x3D80758
	0x03D80358 LDR X8, [X20 + 0x90]
	0x03D8035C CBZ X8, 0x3D80438
	0x03D80360 MOV X0, X19
	0x03D80364 MOV X1, X31
	0x03D80368 BL 0x3DF6C64
	0x03D8036C STR X0, [X19 + 0x3D8]
	0x03D80370 CBZ X0, 0x3D803C0
	0x03D80374 ADRP X8, 0x39D000
	0x03D80378 LDR X8, [X8 + 0x640]
	0x03D8037C MOV X21, X0
	0x03D80380 LDR X0, [X8]
	0x03D80384 BL 0x1C16F10
	0x03D80388 ADRP X8, 0x3E7000
	0x03D8038C LDR X8, [X8 + 0x3D8]
	0x03D80390 MOV X1, X19
	0x03D80394 MOV X3, X31
	0x03D80398 MOV X22, X0
	0x03D8039C LDR X2, [X8]
	0x03D803A0 BL 0x2D0E824
	0x03D803A4 ADRP X8, 0x39D000
	0x03D803A8 LDR X8, [X8 + 0x638]
	0x03D803AC MOV X0, X21
	0x03D803B0 MOV X1, X22
	0x03D803B4 MOV W2, W31
	0x03D803B8 LDR X3, [X8]
	0x03D803BC BL 0x21A1534
	0x03D803C0 MOV X0, X19
	0x03D803C4 BL 0x3D8075C
	0x03D803C8 LDR X21, [X20 + 0x90]
	0x03D803CC CBZ X21, 0x3D80758
	0x03D803D0 ADRP X23, 0x39C000
	0x03D803D4 LDR X8, [X21]
	0x03D803D8 LDR X23, [X23 + 0xE80]
	0x03D803DC LDRH W9, [X8 + 0x12E]
	0x03D803E0 LDR X1, [X23]
	0x03D803E4 CBZ X9, 0x3D80408
	0x03D803E8 LDR X10, [X8 + 0xB0]
	0x03D803EC ADD X10, X10, 0x8
	0x03D803F0 LDUR X11, [X10 - 0x8]
	0x03D803F4 CMP X11, X1
	0x03D803F8 B.EQ 0x3D80418
	0x03D803FC SUBS X9, X9, 0x1
	0x03D80400 ADD X10, X10, 0x10
	0x03D80404 B.NE 0x3D803F0
	0x03D80408 MOVZ W2, 0x2
	0x03D8040C MOV X0, X21
	0x03D80410 BL 0x1C5C788
	0x03D80414 B 0x3D80428
	0x03D80418 LDR W9, [X10]
	0x03D8041C ADD W9, W9, 0x2
	0x03D80420 ADD X8, X8, W9, 0x4, SXTW
	0x03D80424 ADD X0, X8, 0x138
	0x03D80428 LDP X8, X1, [X0]
	0x03D8042C MOV X0, X21
	0x03D80430 BLR X8
	0x03D80434 CBZ W0, 0x3D8044C
	0x03D80438 LDP X20, X19, [X31 + 0x30]
	0x03D8043C LDP X22, X21, [X31 + 0x20]
	0x03D80440 LDP X24, X23, [X31 + 0x10]
	0x03D80444 LDP X30, X25, [X31], #0x40
	0x03D80448 RET
	0x03D8044C ADRP X8, 0x39E000
	0x03D80450 LDR X21, [X19 + 0x438]
	0x03D80454 LDR X8, [X8 + 0xA0]
	0x03D80458 LDR X0, [X8]
	0x03D8045C BL 0x1C16F10
	0x03D80460 ADRP X8, 0x3E7000
	0x03D80464 LDR X8, [X8 + 0x340]
	0x03D80468 MOV X1, X19
	0x03D8046C MOV X3, X31
	0x03D80470 MOV X22, X0
	0x03D80474 LDR X2, [X8]
	0x03D80478 BL 0x2D0E824
	0x03D8047C CBZ X21, 0x3D80758
	0x03D80480 ADRP X8, 0x39E000
	0x03D80484 LDR X8, [X8 + 0x98]
	0x03D80488 MOV X0, X21
	0x03D8048C MOV X1, X22
	0x03D80490 MOV W2, W31
	0x03D80494 LDR X3, [X8]
	0x03D80498 BL 0x21A1534
	0x03D8049C LDR X8, [X19]
	0x03D804A0 MOV X0, X19
	0x03D804A4 LDR X9, [X8 + 0x768]
	0x03D804A8 LDR X1, [X8 + 0x770]
	0x03D804AC BLR X9
	0x03D804B0 ADRP X8, 0x39D000
	0x03D804B4 LDR X8, [X8 + 0x780]
	0x03D804B8 MOV X21, X0
	0x03D804BC LDR X8, [X8]
	0x03D804C0 MOV X0, X8
	0x03D804C4 BL 0x1C16F10
	0x03D804C8 ADRP X8, 0x3E7000
	0x03D804CC LDR X8, [X8 + 0x3D0]
	0x03D804D0 MOV X1, X19
	0x03D804D4 MOV X3, X31
	0x03D804D8 MOV X22, X0
	0x03D804DC LDR X2, [X8]
	0x03D804E0 BL 0x2D0E824
	0x03D804E4 CBZ X21, 0x3D80758
	0x03D804E8 ADRP X8, 0x39D000
	0x03D804EC LDR X8, [X8 + 0x770]
	0x03D804F0 MOVZ W2, 0x1
	0x03D804F4 MOV X0, X21
	0x03D804F8 MOV X1, X22
	0x03D804FC LDR X3, [X8]
	0x03D80500 BL 0x21A1534
	0x03D80504 LDR X8, [X19]
	0x03D80508 MOV X0, X19
	0x03D8050C LDR X9, [X8 + 0x768]
	0x03D80510 LDR X1, [X8 + 0x770]
	0x03D80514 BLR X9
	0x03D80518 ADRP X8, 0x3E2000
	0x03D8051C LDR X8, [X8 + 0xA08]
	0x03D80520 MOV X21, X0
	0x03D80524 LDR X8, [X8]
	0x03D80528 MOV X0, X8
	0x03D8052C BL 0x1C16F10
	0x03D80530 ADRP X8, 0x3E7000
	0x03D80534 LDR X8, [X8 + 0x3B8]
	0x03D80538 MOV X1, X19
	0x03D8053C MOV X3, X31
	0x03D80540 MOV X22, X0
	0x03D80544 LDR X2, [X8]
	0x03D80548 BL 0x2D0E824
	0x03D8054C CBZ X21, 0x3D80758
	0x03D80550 ADRP X8, 0x3E3000
	0x03D80554 LDR X8, [X8 + 0xB8]
	0x03D80558 MOV X0, X21
	0x03D8055C MOV X1, X22
	0x03D80560 MOV W2, W31
	0x03D80564 LDR X3, [X8]
	0x03D80568 BL 0x21A1534
	0x03D8056C LDR X8, [X19]
	0x03D80570 MOV X0, X19
	0x03D80574 LDR X9, [X8 + 0x768]
	0x03D80578 LDR X1, [X8 + 0x770]
	0x03D8057C BLR X9
	0x03D80580 ADRP X24, 0x39D000
	0x03D80584 LDR X24, [X24 + 0x788]
	0x03D80588 MOV X21, X0
	0x03D8058C LDR X8, [X24]
	0x03D80590 MOV X0, X8
	0x03D80594 BL 0x1C16F10
	0x03D80598 ADRP X8, 0x3E7000
	0x03D8059C LDR X8, [X8 + 0x348]
	0x03D805A0 MOV X1, X19
	0x03D805A4 MOV X3, X31
	0x03D805A8 MOV X22, X0
	0x03D805AC LDR X2, [X8]
	0x03D805B0 BL 0x2D0E824
	0x03D805B4 CBZ X21, 0x3D80758
	0x03D805B8 ADRP X25, 0x39D000
	0x03D805BC LDR X25, [X25 + 0x778]
	0x03D805C0 MOVZ W2, 0x1
	0x03D805C4 MOV X0, X21
	0x03D805C8 MOV X1, X22
	0x03D805CC LDR X3, [X25]
	0x03D805D0 BL 0x21A1534
	0x03D805D4 LDR X8, [X19]
	0x03D805D8 MOV X0, X19
	0x03D805DC LDR X9, [X8 + 0x768]
	0x03D805E0 LDR X1, [X8 + 0x770]
	0x03D805E4 BLR X9
	0x03D805E8 ADRP X8, 0x3E7000
	0x03D805EC LDR X8, [X8 + 0x3B0]
	0x03D805F0 MOV X21, X0
	0x03D805F4 LDR X8, [X8]
	0x03D805F8 MOV X0, X8
	0x03D805FC BL 0x1C16F10
	0x03D80600 ADRP X8, 0x3E7000
	0x03D80604 LDR X8, [X8 + 0x3C8]
	0x03D80608 MOV X1, X19
	0x03D8060C MOV X3, X31
	0x03D80610 MOV X22, X0
	0x03D80614 LDR X2, [X8]
	0x03D80618 BL 0x2D0E824
	0x03D8061C CBZ X21, 0x3D80758
	0x03D80620 ADRP X8, 0x3E7000
	0x03D80624 LDR X8, [X8 + 0x3A8]
	0x03D80628 MOV X0, X21
	0x03D8062C MOV X1, X22
	0x03D80630 MOV W2, W31
	0x03D80634 LDR X3, [X8]
	0x03D80638 BL 0x21A1534
	0x03D8063C LDR X8, [X19]
	0x03D80640 MOV X0, X19
	0x03D80644 LDR X9, [X8 + 0x768]
	0x03D80648 LDR X1, [X8 + 0x770]
	0x03D8064C BLR X9
	0x03D80650 ADRP X8, 0x3E2000
	0x03D80654 LDR X8, [X8 + 0xA00]
	0x03D80658 MOV X21, X0
	0x03D8065C LDR X8, [X8]
	0x03D80660 MOV X0, X8
	0x03D80664 BL 0x1C16F10
	0x03D80668 ADRP X8, 0x3E7000
	0x03D8066C LDR X8, [X8 + 0x3C0]
	0x03D80670 MOV X1, X19
	0x03D80674 MOV X3, X31
	0x03D80678 MOV X22, X0
	0x03D8067C LDR X2, [X8]
	0x03D80680 BL 0x2D0E824
	0x03D80684 CBZ X21, 0x3D80758
	0x03D80688 ADRP X8, 0x3E6000
	0x03D8068C LDR X8, [X8 + 0x518]
	0x03D80690 MOV X0, X21
	0x03D80694 MOV X1, X22
	0x03D80698 MOV W2, W31
	0x03D8069C LDR X3, [X8]
	0x03D806A0 BL 0x21A1534
	0x03D806A4 LDR X20, [X20 + 0x90]
	0x03D806A8 CBZ X20, 0x3D80758
	0x03D806AC LDR X8, [X20]
	0x03D806B0 LDR X1, [X23]
	0x03D806B4 LDRH W9, [X8 + 0x12E]
	0x03D806B8 CBZ X9, 0x3D806DC
	0x03D806BC LDR X10, [X8 + 0xB0]
	0x03D806C0 ADD X10, X10, 0x8
	0x03D806C4 LDUR X11, [X10 - 0x8]
	0x03D806C8 CMP X11, X1
	0x03D806CC B.EQ 0x3D806EC
	0x03D806D0 SUBS X9, X9, 0x1
	0x03D806D4 ADD X10, X10, 0x10
	0x03D806D8 B.NE 0x3D806C4
	0x03D806DC MOV X0, X20
	0x03D806E0 MOV W2, W31
	0x03D806E4 BL 0x1C5C788
	0x03D806E8 B 0x3D806F8
	0x03D806EC LDRSW X9, [X10]
	0x03D806F0 ADD X8, X8, X9, 0x4, LSL
	0x03D806F4 ADD X0, X8, 0x138
	0x03D806F8 LDP X8, X1, [X0]
	0x03D806FC MOV X0, X20
	0x03D80700 BLR X8
	0x03D80704 LDR X8, [X24]
	0x03D80708 MOV X20, X0
	0x03D8070C MOV X0, X8
	0x03D80710 BL 0x1C16F10
	0x03D80714 ADRP X8, 0x3E7000
	0x03D80718 LDR X8, [X8 + 0x3E0]
	0x03D8071C MOV X1, X19
	0x03D80720 MOV X3, X31
	0x03D80724 MOV X21, X0
	0x03D80728 LDR X2, [X8]
	0x03D8072C BL 0x2D0E824
	0x03D80730 CBZ X20, 0x3D80758
	0x03D80734 LDR X3, [X25]
	0x03D80738 MOV X0, X20
	0x03D8073C MOV X1, X21
	0x03D80740 LDP X20, X19, [X31 + 0x30]
	0x03D80744 LDP X22, X21, [X31 + 0x20]
	0x03D80748 LDP X24, X23, [X31 + 0x10]
	0x03D8074C MOVZ W2, 0x1
	0x03D80750 LDP X30, X25, [X31], #0x40
	0x03D80754 B 0x21A1534
	0x03D80758 BL 0x1C16F20
	0x03D8075C SUB X31, X31, 0x30
	0x03D80760 STR X30, [X31 + 0x10]
	0x03D80764 STP X20, X19, [X31 + 0x20]
	0x03D80768 ADRP X20, 0x667000
	0x03D8076C LDRB W8, [X20 + 0xDCE]
	0x03D80770 MOV X19, X0
	0x03D80774 TBNZ X8, 0x0, 0x3D807A4
	0x03D80778 ADRP X0, 0x3E7000
	0x03D8077C LDR X0, [X0 + 0x3E8]
	0x03D80780 BL 0x1C16CF4
	0x03D80784 ADRP X0, 0x39C000
	0x03D80788 LDR X0, [X0 + 0xE98]
	0x03D8078C BL 0x1C16CF4
	0x03D80790 ADRP X0, 0x3E7000
	0x03D80794 LDR X0, [X0 + 0x3F0]
	0x03D80798 BL 0x1C16CF4
	0x03D8079C MOVZ W8, 0x1
	0x03D807A0 STRB W8, [X20 + 0xDCE]
	0x03D807A4 STP X31, X31, [X31]
	0x03D807A8 STR X31, [X31 + 0x18]
	0x03D807AC LDR X0, [X19 + 0x3D8]
	0x03D807B0 CBZ X0, 0x3D80828
	0x03D807B4 MOV X1, X31
	0x03D807B8 BL 0x3DE0F44
	0x03D807BC LDR X8, [X0 + 0x38]
	0x03D807C0 CBZ X8, 0x3D80828
	0x03D807C4 LDR X0, [X19 + 0x3D8]
	0x03D807C8 CBZ X0, 0x3D80864
	0x03D807CC MOV X1, X31
	0x03D807D0 BL 0x3DE0F44
	0x03D807D4 LDR X0, [X0 + 0x38]
	0x03D807D8 CBZ X0, 0x3D80864
	0x03D807DC ADRP X8, 0x3E7000
	0x03D807E0 ADRP X9, 0x3E7000
	0x03D807E4 LDR X8, [X8 + 0x3F0]
	0x03D807E8 LDR X9, [X9 + 0x3E8]
	0x03D807EC ADD X2, X31, 0x0
	0x03D807F0 LDR X1, [X8]
	0x03D807F4 LDR X3, [X9]
	0x03D807F8 BL 0x2AB9534
	0x03D807FC TBZ X0, 0x0, 0x3D80828
	0x03D80800 LDR X0, [X31]
	0x03D80804 CBZ X0, 0x3D80864
	0x03D80808 LDR X1, [X31 + 0x8]
	0x03D8080C ADD X2, X31, 0x18
	0x03D80810 MOV X3, X31
	0x03D80814 ADD X20, X31, 0x18
	0x03D80818 BL 0x3E07338
	0x03D8081C TBZ X0, 0x0, 0x3D80854
	0x03D80820 ORR X8, X20, 0x7
	0x03D80824 B 0x3D8084C
	0x03D80828 ADRP X20, 0x39C000
	0x03D8082C LDR X20, [X20 + 0xE98]
	0x03D80830 LDR X0, [X20]
	0x03D80834 LDR W8, [X0 + 0xE0]
	0x03D80838 CBNZ W8, 0x3D80844
	0x03D8083C BL 0x1C16DFC
	0x03D80840 LDR X0, [X20]
	0x03D80844 LDR X8, [X0 + 0xB8]
	0x03D80848 ADD X8, X8, 0x28
	0x03D8084C LDR V0, [X8]
	0x03D80850 STR S0, [X19 + 0x3E0]
	0x03D80854 LDP X20, X19, [X31 + 0x20]
	0x03D80858 LDR X30, [X31 + 0x10]
	0x03D8085C ADD X31, X31, 0x30
	0x03D80860 RET
	0x03D80864 BL 0x1C16F20
	0x03D80868 STP X30, X25, [X31 - 0x40]!
	0x03D8086C STP X24, X23, [X31 + 0x10]
	0x03D80870 STP X22, X21, [X31 + 0x20]
	0x03D80874 STP X20, X19, [X31 + 0x30]
	0x03D80878 ADRP X21, 0x667000
	0x03D8087C LDRB W8, [X21 + 0xDC1]
	0x03D80880 MOV X20, X1
	0x03D80884 MOV X19, X0
	0x03D80888 TBNZ X8, 0x0, 0x3D809C0
	0x03D8088C ADRP X0, 0x3E7000
	0x03D80890 LDR X0, [X0 + 0x3F8]
	0x03D80894 BL 0x1C16CF4
	0x03D80898 ADRP X0, 0x3E2000
	0x03D8089C LDR X0, [X0 + 0xA30]
	0x03D808A0 BL 0x1C16CF4
	0x03D808A4 ADRP X0, 0x3E7000
	0x03D808A8 LDR X0, [X0 + 0x400]
	0x03D808AC BL 0x1C16CF4
	0x03D808B0 ADRP X0, 0x3E2000
	0x03D808B4 LDR X0, [X0 + 0xA38]
	0x03D808B8 BL 0x1C16CF4
	0x03D808BC ADRP X0, 0x39D000
	0x03D808C0 LDR X0, [X0 + 0x790]
	0x03D808C4 BL 0x1C16CF4
	0x03D808C8 ADRP X0, 0x39E000
	0x03D808CC LDR X0, [X0 + 0xD28]
	0x03D808D0 BL 0x1C16CF4
	0x03D808D4 ADRP X0, 0x39D000
	0x03D808D8 LDR X0, [X0 + 0x798]
	0x03D808DC BL 0x1C16CF4
	0x03D808E0 ADRP X0, 0x3E2000
	0x03D808E4 LDR X0, [X0 + 0xA00]
	0x03D808E8 BL 0x1C16CF4
	0x03D808EC ADRP X0, 0x39E000
	0x03D808F0 LDR X0, [X0 + 0xA0]
	0x03D808F4 BL 0x1C16CF4
	0x03D808F8 ADRP X0, 0x3E7000
	0x03D808FC LDR X0, [X0 + 0x3B0]
	0x03D80900 BL 0x1C16CF4
	0x03D80904 ADRP X0, 0x39D000
	0x03D80908 LDR X0, [X0 + 0x780]
	0x03D8090C BL 0x1C16CF4
	0x03D80910 ADRP X0, 0x3E2000
	0x03D80914 LDR X0, [X0 + 0xA08]
	0x03D80918 BL 0x1C16CF4
	0x03D8091C ADRP X0, 0x39D000
	0x03D80920 LDR X0, [X0 + 0x640]
	0x03D80924 BL 0x1C16CF4
	0x03D80928 ADRP X0, 0x39D000
	0x03D8092C LDR X0, [X0 + 0x788]
	0x03D80930 BL 0x1C16CF4
	0x03D80934 ADRP X0, 0x39C000
	0x03D80938 LDR X0, [X0 + 0xE80]
	0x03D8093C BL 0x1C16CF4
	0x03D80940 ADRP X0, 0x39E000
	0x03D80944 LDR X0, [X0 + 0xAB8]
	0x03D80948 BL 0x1C16CF4
	0x03D8094C ADRP X0, 0x3E3000
	0x03D80950 LDR X0, [X0 + 0xC8]
	0x03D80954 BL 0x1C16CF4
	0x03D80958 ADRP X0, 0x3E7000
	0x03D8095C LDR X0, [X0 + 0x3B8]
	0x03D80960 BL 0x1C16CF4
	0x03D80964 ADRP X0, 0x3E7000
	0x03D80968 LDR X0, [X0 + 0x3C0]
	0x03D8096C BL 0x1C16CF4
	0x03D80970 ADRP X0, 0x3E7000
	0x03D80974 LDR X0, [X0 + 0x3C8]
	0x03D80978 BL 0x1C16CF4
	0x03D8097C ADRP X0, 0x3E7000
	0x03D80980 LDR X0, [X0 + 0x3D0]
	0x03D80984 BL 0x1C16CF4
	0x03D80988 ADRP X0, 0x3E7000
	0x03D8098C LDR X0, [X0 + 0x340]
	0x03D80990 BL 0x1C16CF4
	0x03D80994 ADRP X0, 0x3E7000
	0x03D80998 LDR X0, [X0 + 0x348]
	0x03D8099C BL 0x1C16CF4
	0x03D809A0 ADRP X0, 0x3E7000
	0x03D809A4 LDR X0, [X0 + 0x3D8]
	0x03D809A8 BL 0x1C16CF4
	0x03D809AC ADRP X0, 0x3E7000
	0x03D809B0 LDR X0, [X0 + 0x3E0]
	0x03D809B4 BL 0x1C16CF4
	0x03D809B8 MOVZ W8, 0x1
	0x03D809BC STRB W8, [X21 + 0xDC1]
	0x03D809C0 LDR X21, [X19 + 0x458]
	0x03D809C4 CBZ X21, 0x3D80A2C
	0x03D809C8 ADRP X10, 0x39E000
	0x03D809CC LDR X8, [X21]
	0x03D809D0 LDR X10, [X10 + 0xAB8]
	0x03D809D4 LDRH W9, [X8 + 0x12E]
	0x03D809D8 LDR X1, [X10]
	0x03D809DC CBZ X9, 0x3D80A00
	0x03D809E0 LDR X10, [X8 + 0xB0]
	0x03D809E4 ADD X10, X10, 0x8
	0x03D809E8 LDUR X11, [X10 - 0x8]
	0x03D809EC CMP X11, X1
	0x03D809F0 B.EQ 0x3D80A10
	0x03D809F4 SUBS X9, X9, 0x1
	0x03D809F8 ADD X10, X10, 0x10
	0x03D809FC B.NE 0x3D809E8
	0x03D80A00 MOVZ W2, 0x1
	0x03D80A04 MOV X0, X21
	0x03D80A08 BL 0x1C5C788
	0x03D80A0C B 0x3D80A20
	0x03D80A10 LDR W9, [X10]
	0x03D80A14 ADD W9, W9, 0x1
	0x03D80A18 ADD X8, X8, W9, 0x4, SXTW
	0x03D80A1C ADD X0, X8, 0x138
	0x03D80A20 LDP X8, X1, [X0]
	0x03D80A24 MOV X0, X21
	0x03D80A28 BLR X8
	0x03D80A2C MOVN W8, 0x0
	0x03D80A30 STR W8, [X19 + 0x3C8]
	0x03D80A34 CBZ X20, 0x3D80E2C
	0x03D80A38 LDR X21, [X20 + 0x88]
	0x03D80A3C CBZ X21, 0x3D80B0C
	0x03D80A40 LDR X22, [X19 + 0x3D8]
	0x03D80A44 CBZ X22, 0x3D80AA0
	0x03D80A48 ADRP X8, 0x39D000
	0x03D80A4C LDR X8, [X8 + 0x640]
	0x03D80A50 LDR X0, [X8]
	0x03D80A54 BL 0x1C16F10
	0x03D80A58 ADRP X8, 0x3E7000
	0x03D80A5C LDR X8, [X8 + 0x3D8]
	0x03D80A60 MOV X1, X19
	0x03D80A64 MOV X3, X31
	0x03D80A68 MOV X21, X0
	0x03D80A6C LDR X2, [X8]
	0x03D80A70 BL 0x2D0E824
	0x03D80A74 ADRP X8, 0x3E7000
	0x03D80A78 LDR X8, [X8 + 0x3F8]
	0x03D80A7C MOV X0, X22
	0x03D80A80 MOV X1, X21
	0x03D80A84 MOV W2, W31
	0x03D80A88 LDR X3, [X8]
	0x03D80A8C BL 0x21A18B4
	0x03D80A90 LDR X21, [X20 + 0x88]
	0x03D80A94 STR X31, [X19 + 0x3D8]
	0x03D80A98 CBNZ X21, 0x3D80AA4
	0x03D80A9C B 0x3D80E2C
	0x03D80AA0 STR X31, [X19 + 0x3D8]
	0x03D80AA4 ADRP X23, 0x39C000
	0x03D80AA8 LDR X8, [X21]
	0x03D80AAC LDR X23, [X23 + 0xE80]
	0x03D80AB0 LDRH W9, [X8 + 0x12E]
	0x03D80AB4 LDR X1, [X23]
	0x03D80AB8 CBZ X9, 0x3D80ADC
	0x03D80ABC LDR X10, [X8 + 0xB0]
	0x03D80AC0 ADD X10, X10, 0x8
	0x03D80AC4 LDUR X11, [X10 - 0x8]
	0x03D80AC8 CMP X11, X1
	0x03D80ACC B.EQ 0x3D80AEC
	0x03D80AD0 SUBS X9, X9, 0x1
	0x03D80AD4 ADD X10, X10, 0x10
	0x03D80AD8 B.NE 0x3D80AC4
	0x03D80ADC MOVZ W2, 0x2
	0x03D80AE0 MOV X0, X21
	0x03D80AE4 BL 0x1C5C788
	0x03D80AE8 B 0x3D80AFC
	0x03D80AEC LDR W9, [X10]
	0x03D80AF0 ADD W9, W9, 0x2
	0x03D80AF4 ADD X8, X8, W9, 0x4, SXTW
	0x03D80AF8 ADD X0, X8, 0x138
	0x03D80AFC LDP X8, X1, [X0]
	0x03D80B00 MOV X0, X21
	0x03D80B04 BLR X8
	0x03D80B08 CBZ W0, 0x3D80B20
	0x03D80B0C LDP X20, X19, [X31 + 0x30]
	0x03D80B10 LDP X22, X21, [X31 + 0x20]
	0x03D80B14 LDP X24, X23, [X31 + 0x10]
	0x03D80B18 LDP X30, X25, [X31], #0x40
	0x03D80B1C RET
	0x03D80B20 ADRP X8, 0x39E000
	0x03D80B24 LDR X21, [X19 + 0x438]
	0x03D80B28 LDR X8, [X8 + 0xA0]
	0x03D80B2C LDR X0, [X8]
	0x03D80B30 BL 0x1C16F10
	0x03D80B34 ADRP X8, 0x3E7000
	0x03D80B38 LDR X8, [X8 + 0x340]
	0x03D80B3C MOV X1, X19
	0x03D80B40 MOV X3, X31
	0x03D80B44 MOV X22, X0
	0x03D80B48 LDR X2, [X8]
	0x03D80B4C BL 0x2D0E824
	0x03D80B50 CBZ X21, 0x3D80E2C
	0x03D80B54 ADRP X8, 0x39E000
	0x03D80B58 LDR X8, [X8 + 0xD28]
	0x03D80B5C MOV X0, X21
	0x03D80B60 MOV X1, X22
	0x03D80B64 MOV W2, W31
	0x03D80B68 LDR X3, [X8]
	0x03D80B6C BL 0x21A18B4
	0x03D80B70 LDR X8, [X19]
	0x03D80B74 MOV X0, X19
	0x03D80B78 LDR X9, [X8 + 0x768]
	0x03D80B7C LDR X1, [X8 + 0x770]
	0x03D80B80 BLR X9
	0x03D80B84 ADRP X8, 0x39D000
	0x03D80B88 LDR X8, [X8 + 0x780]
	0x03D80B8C MOV X21, X0
	0x03D80B90 LDR X8, [X8]
	0x03D80B94 MOV X0, X8
	0x03D80B98 BL 0x1C16F10
	0x03D80B9C ADRP X8, 0x3E7000
	0x03D80BA0 LDR X8, [X8 + 0x3D0]
	0x03D80BA4 MOV X1, X19
	0x03D80BA8 MOV X3, X31
	0x03D80BAC MOV X22, X0
	0x03D80BB0 LDR X2, [X8]
	0x03D80BB4 BL 0x2D0E824
	0x03D80BB8 CBZ X21, 0x3D80E2C
	0x03D80BBC ADRP X8, 0x39D000
	0x03D80BC0 LDR X8, [X8 + 0x790]
	0x03D80BC4 MOVZ W2, 0x1
	0x03D80BC8 MOV X0, X21
	0x03D80BCC MOV X1, X22
	0x03D80BD0 LDR X3, [X8]
	0x03D80BD4 BL 0x21A18B4
	0x03D80BD8 LDR X8, [X19]
	0x03D80BDC MOV X0, X19
	0x03D80BE0 LDR X9, [X8 + 0x768]
	0x03D80BE4 LDR X1, [X8 + 0x770]
	0x03D80BE8 BLR X9
	0x03D80BEC ADRP X8, 0x3E2000
	0x03D80BF0 LDR X8, [X8 + 0xA08]
	0x03D80BF4 MOV X21, X0
	0x03D80BF8 LDR X8, [X8]
	0x03D80BFC MOV X0, X8
	0x03D80C00 BL 0x1C16F10
	0x03D80C04 ADRP X8, 0x3E7000
	0x03D80C08 LDR X8, [X8 + 0x3B8]
	0x03D80C0C MOV X1, X19
	0x03D80C10 MOV X3, X31
	0x03D80C14 MOV X22, X0
	0x03D80C18 LDR X2, [X8]
	0x03D80C1C BL 0x2D0E824
	0x03D80C20 CBZ X21, 0x3D80E2C
	0x03D80C24 ADRP X8, 0x3E2000
	0x03D80C28 LDR X8, [X8 + 0xA30]
	0x03D80C2C MOV X0, X21
	0x03D80C30 MOV X1, X22
	0x03D80C34 MOV W2, W31
	0x03D80C38 LDR X3, [X8]
	0x03D80C3C BL 0x21A18B4
	0x03D80C40 LDR X8, [X19]
	0x03D80C44 MOV X0, X19
	0x03D80C48 LDR X9, [X8 + 0x768]
	0x03D80C4C LDR X1, [X8 + 0x770]
	0x03D80C50 BLR X9
	0x03D80C54 ADRP X24, 0x39D000
	0x03D80C58 LDR X24, [X24 + 0x788]
	0x03D80C5C MOV X21, X0
	0x03D80C60 LDR X8, [X24]
	0x03D80C64 MOV X0, X8
	0x03D80C68 BL 0x1C16F10
	0x03D80C6C ADRP X8, 0x3E7000
	0x03D80C70 LDR X8, [X8 + 0x348]
	0x03D80C74 MOV X1, X19
	0x03D80C78 MOV X3, X31
	0x03D80C7C MOV X22, X0
	0x03D80C80 LDR X2, [X8]
	0x03D80C84 BL 0x2D0E824
	0x03D80C88 CBZ X21, 0x3D80E2C
	0x03D80C8C ADRP X25, 0x39D000
	0x03D80C90 LDR X25, [X25 + 0x798]
	0x03D80C94 MOVZ W2, 0x1
	0x03D80C98 MOV X0, X21
	0x03D80C9C MOV X1, X22
	0x03D80CA0 LDR X3, [X25]
	0x03D80CA4 BL 0x21A18B4
	0x03D80CA8 LDR X8, [X19]
	0x03D80CAC MOV X0, X19
	0x03D80CB0 LDR X9, [X8 + 0x768]
	0x03D80CB4 LDR X1, [X8 + 0x770]
	0x03D80CB8 BLR X9
	0x03D80CBC ADRP X8, 0x3E7000
	0x03D80CC0 LDR X8, [X8 + 0x3B0]
	0x03D80CC4 MOV X21, X0
	0x03D80CC8 LDR X8, [X8]
	0x03D80CCC MOV X0, X8
	0x03D80CD0 BL 0x1C16F10
	0x03D80CD4 ADRP X8, 0x3E7000
	0x03D80CD8 LDR X8, [X8 + 0x3C8]
	0x03D80CDC MOV X1, X19
	0x03D80CE0 MOV X3, X31
	0x03D80CE4 MOV X22, X0
	0x03D80CE8 LDR X2, [X8]
	0x03D80CEC BL 0x2D0E824
	0x03D80CF0 CBZ X21, 0x3D80E2C
	0x03D80CF4 ADRP X8, 0x3E7000
	0x03D80CF8 LDR X8, [X8 + 0x400]
	0x03D80CFC MOV X0, X21
	0x03D80D00 MOV X1, X22
	0x03D80D04 MOV W2, W31
	0x03D80D08 LDR X3, [X8]
	0x03D80D0C BL 0x21A18B4
	0x03D80D10 LDR X8, [X19]
	0x03D80D14 MOV X0, X19
	0x03D80D18 LDR X9, [X8 + 0x768]
	0x03D80D1C LDR X1, [X8 + 0x770]
	0x03D80D20 BLR X9
	0x03D80D24 ADRP X8, 0x3E2000
	0x03D80D28 LDR X8, [X8 + 0xA00]
	0x03D80D2C MOV X21, X0
	0x03D80D30 LDR X8, [X8]
	0x03D80D34 MOV X0, X8
	0x03D80D38 BL 0x1C16F10
	0x03D80D3C ADRP X8, 0x3E7000
	0x03D80D40 LDR X8, [X8 + 0x3C0]
	0x03D80D44 MOV X1, X19
	0x03D80D48 MOV X3, X31
	0x03D80D4C MOV X22, X0
	0x03D80D50 LDR X2, [X8]
	0x03D80D54 BL 0x2D0E824
	0x03D80D58 CBZ X21, 0x3D80E2C
	0x03D80D5C ADRP X8, 0x3E2000
	0x03D80D60 LDR X8, [X8 + 0xA38]
	0x03D80D64 MOV X0, X21
	0x03D80D68 MOV X1, X22
	0x03D80D6C MOV W2, W31
	0x03D80D70 LDR X3, [X8]
	0x03D80D74 BL 0x21A18B4
	0x03D80D78 LDR X20, [X20 + 0x88]
	0x03D80D7C CBZ X20, 0x3D80E2C
	0x03D80D80 LDR X8, [X20]
	0x03D80D84 LDR X1, [X23]
	0x03D80D88 LDRH W9, [X8 + 0x12E]
	0x03D80D8C CBZ X9, 0x3D80DB0
	0x03D80D90 LDR X10, [X8 + 0xB0]
	0x03D80D94 ADD X10, X10, 0x8
	0x03D80D98 LDUR X11, [X10 - 0x8]
	0x03D80D9C CMP X11, X1
	0x03D80DA0 B.EQ 0x3D80DC0
	0x03D80DA4 SUBS X9, X9, 0x1
	0x03D80DA8 ADD X10, X10, 0x10
	0x03D80DAC B.NE 0x3D80D98
	0x03D80DB0 MOV X0, X20
	0x03D80DB4 MOV W2, W31
	0x03D80DB8 BL 0x1C5C788
	0x03D80DBC B 0x3D80DCC
	0x03D80DC0 LDRSW X9, [X10]
	0x03D80DC4 ADD X8, X8, X9, 0x4, LSL
	0x03D80DC8 ADD X0, X8, 0x138
	0x03D80DCC LDP X8, X1, [X0]
	0x03D80DD0 MOV X0, X20
	0x03D80DD4 BLR X8
	0x03D80DD8 LDR X8, [X24]
	0x03D80DDC MOV X20, X0
	0x03D80DE0 MOV X0, X8
	0x03D80DE4 BL 0x1C16F10
	0x03D80DE8 ADRP X8, 0x3E7000
	0x03D80DEC LDR X8, [X8 + 0x3E0]
	0x03D80DF0 MOV X1, X19
	0x03D80DF4 MOV X3, X31
	0x03D80DF8 MOV X21, X0
	0x03D80DFC LDR X2, [X8]
	0x03D80E00 BL 0x2D0E824
	0x03D80E04 CBZ X20, 0x3D80E2C
	0x03D80E08 LDR X3, [X25]
	0x03D80E0C MOV X0, X20
	0x03D80E10 MOV X1, X21
	0x03D80E14 LDP X20, X19, [X31 + 0x30]
	0x03D80E18 LDP X22, X21, [X31 + 0x20]
	0x03D80E1C LDP X24, X23, [X31 + 0x10]
	0x03D80E20 MOVZ W2, 0x1
	0x03D80E24 LDP X30, X25, [X31], #0x40
	0x03D80E28 B 0x21A18B4
	0x03D80E2C BL 0x1C16F20
	0x03D80E30 MOVN W8, 0x0
	0x03D80E34 STR W8, [X0 + 0x3C8]
	0x03D80E38 RET
	0x03D80E3C STP X30, X21, [X31 - 0x20]!
	0x03D80E40 STP X20, X19, [X31 + 0x10]
	0x03D80E44 ADRP X21, 0x667000
	0x03D80E48 LDRB W8, [X21 + 0xDC2]
	0x03D80E4C MOV X20, X1
	0x03D80E50 MOV X19, X0
	0x03D80E54 TBNZ X8, 0x0, 0x3D80E84
	0x03D80E58 ADRP X0, 0x39E000
	0x03D80E5C LDR X0, [X0 + 0x98]
	0x03D80E60 BL 0x1C16CF4
	0x03D80E64 ADRP X0, 0x39D000
	0x03D80E68 LDR X0, [X0 + 0x778]
	0x03D80E6C BL 0x1C16CF4
	0x03D80E70 ADRP X0, 0x39B000
	0x03D80E74 LDR X0, [X0 + 0x898]
	0x03D80E78 BL 0x1C16CF4
	0x03D80E7C MOVZ W8, 0x1
	0x03D80E80 STRB W8, [X21 + 0xDC2]
	0x03D80E84 CBZ X20, 0x3D80F28
	0x03D80E88 MOV X0, X20
	0x03D80E8C MOV X1, X31
	0x03D80E90 BL 0x3D9C848
	0x03D80E94 CBZ X0, 0x3D80ECC
	0x03D80E98 ADRP X8, 0x39B000
	0x03D80E9C LDR X8, [X8 + 0x898]
	0x03D80EA0 LDR X9, [X0]
	0x03D80EA4 LDR X8, [X8]
	0x03D80EA8 LDRB W11, [X9 + 0x130]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x668000
	015 Move X21, 0x39D000
	016 Move W8, [X22+3518]
	017 Move X21, [X21+3736]
	018 Move W20, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {140}
	024 Move X0, 0x376000
	025 Move X0, [X0+1456]
	026 Call 0x1C17CF4
	027 Move X0, 0x375000
	028 Move X0, [X0+3696]
	029 Call 0x1C17CF4
	030 Move X0, 0x3E8000
	031 Move X0, [X0+768]
	032 Call 0x1C17CF4
	033 Move X0, 0x3E8000
	034 Move X0, [X0+728]
	035 Call 0x1C17CF4
	036 Move X0, 0x39E000
	037 Move X0, [X0+3424]
	038 Call 0x1C17CF4
	039 Move X0, 0x39E000
	040 Move X0, [X0+3432]
	041 Call 0x1C17CF4
	042 Move X0, 0x39E000
	043 Move X0, [X0+1624]
	044 Call 0x1C17CF4
	045 Move X0, 0x3E8000
	046 Move X0, [X0+776]
	047 Call 0x1C17CF4
	048 Move X0, 0x3E8000
	049 Move X0, [X0+784]
	050 Call 0x1C17CF4
	051 Move X0, 0x39E000
	052 Move X0, [X0+3440]
	053 Call 0x1C17CF4
	054 Move X0, 0x39E000
	055 Move X0, [X0+1632]
	056 Call 0x1C17CF4
	057 Move X0, 0x39F000
	058 Move X0, [X0+160]
	059 Call 0x1C17CF4
	060 Move X0, 0x3E8000
	061 Move X0, [X0+792]
	062 Call 0x1C17CF4
	063 Move X0, 0x39E000
	064 Move X0, [X0+3448]
	065 Call 0x1C17CF4
	066 Move X0, 0x39E000
	067 Move X0, [X0+1928]
	068 Call 0x1C17CF4
	069 Move X0, 0x39D000
	070 Move X0, [X0+296]
	071 Call 0x1C17CF4
	072 Move X0, 0x3E8000
	073 Move X0, [X0+800]
	074 Call 0x1C17CF4
	075 Move X0, 0x3E8000
	076 Move X0, [X0+808]
	077 Call 0x1C17CF4
	078 Move X0, 0x3E8000
	079 Move X0, [X0+816]
	080 Call 0x1C17CF4
	081 Move X0, 0x3E8000
	082 Move X0, [X0+824]
	083 Call 0x1C17CF4
	084 Move X0, 0x3E8000
	085 Move X0, [X0+832]
	086 Call 0x1C17CF4
	087 Move X0, 0x3E8000
	088 Move X0, [X0+840]
	089 Call 0x1C17CF4
	090 Move X0, 0x3E8000
	091 Move X0, [X0+848]
	092 Call 0x1C17CF4
	093 Move X0, 0x3E8000
	094 Move X0, [X0+856]
	095 Call 0x1C17CF4
	096 Move X0, 0x3E8000
	097 Move X0, [X0+864]
	098 Call 0x1C17CF4
	099 Move X0, 0x3E8000
	100 Move X0, [X0+872]
	101 Call 0x1C17CF4
	102 Move X0, 0x3E8000
	103 Move X0, [X0+880]
	104 Call 0x1C17CF4
	105 Move X0, 0x3E8000
	106 Move X0, [X0+888]
	107 Call 0x1C17CF4
	108 Move X0, 0x39E000
	109 Move X0, [X0+1656]
	110 Call 0x1C17CF4
	111 Move X0, 0x3E8000
	112 Move X0, [X0+896]
	113 Call 0x1C17CF4
	114 Move X0, 0x39E000
	115 Move X0, [X0+3856]
	116 Call 0x1C17CF4
	117 Move X0, 0x39D000
	118 Move X0, [X0+3736]
	119 Call 0x1C17CF4
	120 Move X0, 0x39C000
	121 Move X0, [X0+2200]
	122 Call 0x1C17CF4
	123 Move X0, 0x3E8000
	124 Move X0, [X0+904]
	125 Call 0x1C17CF4
	126 Move X0, 0x3E8000
	127 Move X0, [X0+912]
	128 Call 0x1C17CF4
	129 Move X0, 0x3E8000
	130 Move X0, [X0+920]
	131 Call 0x1C17CF4
	132 Move X0, 0x3E8000
	133 Move X0, [X0+928]
	134 Call 0x1C17CF4
	135 Move X0, 0x3E8000
	136 Move X0, [X0+248]
	137 Call 0x1C17CF4
	138 Move W8, 1
	139 Move [X22+3518], W8
	140 Move TEMP, 0
	141 Not TEMP
	142 Move W8, TEMP
	143 Move [X31+8], X31
	144 Move [X19+968], W8
	145 Move X0, [X21]
	146 Move X25, 0x39E000
	147 Move W8, [X0+224]
	148 Move X25, [X25+1656]
	149 Compare W8, 0
	150 JumpIfNotEqual {153}
	151 Call 0x1C17DFC
	152 Move X0, [X21]
	153 Move X8, [X0+184]
	154 Move X26, 0x39C000
	155 Move V0, [X8+40]
	156 Move W8, 0x41900000
	157 Move [X19+1008], W8
	158 Move [X19+992], S0
	159 Move X0, [X25]
	160 Move W8, [X0+224]
	161 Move X26, [X26+2200]
	162 Compare W8, 0
	163 JumpIfNotEqual {166}
	164 Call 0x1C17DFC
	165 Move X0, [X25]
	166 Move X8, [X0+184]
	167 Move X9, -53026816
	168 Move V0, [X9+3224]
	169 Move V1, [X8]
	170 Move [X19+1016], D0
	171 Move [X19+1012], S1
	172 Move V0, [X8+4]
	173 Move [X19+1024], S0
	174 Move X8, [X8+8]
	175 NotImplemented "Instruction MOVI not yet implemented."
	176 Move [X19+68], V0
	177 Move [X19+1040], X8
	178 Move X0, [X26]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X0, X19
	184 Move X1, X31
	185 Call VisualElement..ctor, X0
	186 Move X8, [X25]
	187 Move X0, X19
	188 Move X2, X31
	189 Move X8, [X8+184]
	190 Move X1, [X8+16]
	191 Call VisualElement.AddToClassList, X0, X1
	192 Move X0, [X26]
	193 Call 0x1C17F10
	194 Move X1, X31
	195 Move X21, X0
	196 Call VisualElement..ctor, X0
	197 Compare X21, 0
	198 JumpIfEqual {812}
	199 Move X8, 0x3E8000
	200 Move X8, [X8+912]
	201 Move X0, X21
	202 Move X2, X31
	203 Move X1, [X8]
	204 Call VisualElement.set_name, X0, X1
	205 Move [X19+1080], X21
	206 Move X8, [X25]
	207 Move X0, X21
	208 Move X2, X31
	209 Move X8, [X8+184]
	210 Move X1, [X8+56]
	211 Call VisualElement.AddToClassList, X0, X1
	212 Move X8, [X19+888]
	213 Add X0, X31, 8
	214 Move X2, X31
	215 Move [X31+8], X8
	216 Move X1, [X19+1080]
	217 Call Hierarchy.Add, X0, X1
	218 Move X0, [X26]
	219 Call 0x1C17F10
	220 Move X1, X31
	221 Move X21, X0
	222 Call VisualElement..ctor, X0
	223 Compare X21, 0
	224 JumpIfEqual {812}
	225 Move X8, 0x3E8000
	226 Move X8, [X8+920]
	227 Move X23, 0x39E000
	228 Move X27, 0x3E8000
	229 Move X0, X21
	230 Move X1, [X8]
	231 Move X23, [X23+1632]
	232 Move X27, [X27+816]
	233 Move X2, X31
	234 Call VisualElement.set_name, X0, X1
	235 Move [X19+1048], X21
	236 Move X8, [X25]
	237 Move X0, X21
	238 Move X2, X31
	239 Move X8, [X8+184]
	240 Move X1, [X8+24]
	241 Call VisualElement.AddToClassList, X0, X1
	242 Move X0, [X23]
	243 Move X21, [X19+1048]
	244 Call 0x1C17F10
	245 Move X2, [X27]
	246 Move X1, X19
	247 Move X3, X31
	248 Move X22, X0
	249 Call 0x2D0F824, X0, X1, X2
	250 Compare X21, 0
	251 JumpIfEqual {812}
	252 Move X24, 0x39E000
	253 Move X24, [X24+1624]
	254 Move X0, X21
	255 Move X1, X22
	256 Move W2, W31
	257 Move X3, [X24]
	258 Call 0x21A2534, X0, X1, X2
	259 Move X0, [X19+1048]
	260 Compare X0, 0
	261 JumpIfEqual {812}
	262 Move X22, 0x39E000
	263 Move X28, 0x3E8000
	264 Move X22, [X22+3440]
	265 Move X28, [X28+800]
	266 Move W1, 1
	267 Move X2, X31
	268 Call VisualElement.set_pickingMode, X0, X1
	269 Move X0, [X22]
	270 Move X21, [X19+1080]
	271 Call 0x1C17F10
	272 Move X2, [X28]
	273 Move X1, X19
	274 Move X3, X31
	275 Move X22, X0
	276 Call 0x2D0F824, X0, X1, X2
	277 Compare X21, 0
	278 JumpIfEqual {812}
	279 Move X8, 0x39E000
	280 Move X8, [X8+3424]
	281 Move X28, 0x39E000
	282 Move X29, 0x3E8000
	283 Move X0, X21
	284 Move X3, [X8]
	285 Move X28, [X28+3448]
	286 Move X29, [X29+808]
	287 Move X1, X22
	288 Move W2, W31
	289 Call 0x21A2534, X0, X1, X2
	290 Move X0, [X28]
	291 Move X21, [X19+1080]
	292 Call 0x1C17F10
	293 Move X2, [X29]
	294 Move X1, X19
	295 Move X3, X31
	296 Move X22, X0
	297 Call 0x2D0F824, X0, X1, X2
	298 Compare X21, 0
	299 JumpIfEqual {812}
	300 Move X8, 0x39E000
	301 Move X8, [X8+3432]
	302 Move X0, X21
	303 Move X1, X22
	304 Move W2, W31
	305 Move X3, [X8]
	306 Call 0x21A2534, X0, X1, X2
	307 Move X0, [X19+1080]
	308 Compare X0, 0
	309 JumpIfEqual {812}
	310 Move X1, [X19+1048]
	311 Move X2, X31
	312 Call VisualElement.Add, X0, X1
	313 Move X0, [X26]
	314 Call 0x1C17F10
	315 Move X1, X31
	316 Move X21, X0
	317 Call VisualElement..ctor, X0
	318 Compare X21, 0
	319 JumpIfEqual {812}
	320 Move X8, 0x3E8000
	321 Move X8, [X8+248]
	322 Move X0, X21
	323 Move X2, X31
	324 Move X1, [X8]
	325 Call VisualElement.set_name, X0, X1
	326 Move W1, 1
	327 Move X0, X21
	328 Move X2, X31
	329 Move [X19+1072], X21
	330 Call VisualElement.set_disableClipping, X0, X1
	331 Move X0, [X23]
	332 Move X21, [X19+1072]
	333 Call 0x1C17F10
	334 Move X2, [X27]
	335 Move X1, X19
	336 Move X3, X31
	337 Move X22, X0
	338 Call 0x2D0F824, X0, X1, X2
	339 Compare X21, 0
	340 JumpIfEqual {812}
	341 Move X3, [X24]
	342 Move X0, X21
	343 Move X1, X22
	344 Move W2, W31
	345 Call 0x21A2534, X0, X1, X2
	346 Move X0, [X19+1072]
	347 Compare X0, 0
	348 JumpIfEqual {812}
	349 Move X8, [X25]
	350 Move X2, X31
	351 Move X8, [X8+184]
	352 Move X1, [X8+64]
	353 Call VisualElement.AddToClassList, X0, X1
	354 Move X0, [X19+1072]
	355 Compare X0, 0
	356 JumpIfEqual {812}
	357 Move W1, 2
	358 Move X2, X31
	359 Call VisualElement.set_usageHints, X0, X1
	360 Move X0, [X19+1048]
	361 Compare X0, 0
	362 JumpIfEqual {812}
	363 Move X1, [X19+1072]
	364 Move X28, 0x376000
	365 Move X21, 0x3E8000
	366 Move X27, 0x3E8000
	367 Move X28, [X28+1456]
	368 Move X21, [X21+872]
	369 Move X27, [X27+896]
	370 Move X2, X31
	371 Call VisualElement.Add, X0, X1
	372 Move X0, X19
	373 Move W1, W20
	374 Call ScrollView.SetScrollViewMode, X0, X1
	375 Move X0, [X28]
	376 Call 0x1C17F10
	377 Move X2, [X21]
	378 Move X1, X19
	379 Move X3, X31
	380 Move X21, X0
	381 Call Action`1<Single>..ctor, X0, X1, X2
	382 Move X0, [X27]
	383 Call 0x1C17F10
	384 Move W8, 0x4F000000
	385 Move S0, W31
	386 Move S1, W8
	387 Move X1, X21
	388 Move W2, W31
	389 Move X3, X31
	390 Move X20, X0
	391 Call Scroller..ctor, X0, V0, V1, X1, X2
	392 Compare X20, 0
	393 JumpIfEqual {812}
	394 Move X8, 0x3E8000
	395 Move X8, [X8+904]
	396 Move X0, X20
	397 Move X2, X31
	398 Move X1, [X8]
	399 Call VisualElement.set_viewDataKey, X0, X1
	400 Move [X19+1056], X20
	401 Move X8, [X25]
	402 Move X0, X20
	403 Move X2, X31
	404 Move X8, [X8+184]
	405 Move X1, [X8+96]
	406 Call VisualElement.AddToClassList, X0, X1
	407 Move X0, [X19+1056]
	408 Compare X0, 0
	409 JumpIfEqual {812}
	410 Move X22, 0x39E000
	411 Move X22, [X22+3856]
	412 Move X1, X31
	413 Call VisualElement.get_style, X0
	414 Move X1, [X22]
	415 Move X20, X0
	416 Move W0, 1
	417 Call 0x266FACC, X0
	418 Compare X20, 0
	419 JumpIfEqual {812}
	420 Move X26, 0x39D000
	421 Move X8, [X20]
	422 Move X26, [X26+296]
	423 Move X29, 0x3E8000
	424 Move X21, X0
	425 NotImplemented "Instruction LDRH not yet implemented."
	426 Move X1, [X26]
	427 Move X29, [X29+880]
	428 Compare X9, 0
	429 JumpIfEqual {436}
	430 Move X10, [X8+176]
	431 Add X10, X10, 8
	432 NotImplemented "Instruction LDUR not yet implemented."
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Subtract X9, X9, 1
	435 Add X10, X10, 16
	436 Move W2, 18
	437 Move X0, X20
	438 Call 0x1C5D788
	439 Move W9, [X10]
	440 Add W9, W9, 18
	441 Add X8, X8, W9
	442 Add X0, X8, 312
	443 Move X8, [X0]
	444 Move X2, [X0+8]
	445 Move X0, X20
	446 Move X1, X21
	447 NotImplemented "Instruction BLR not yet implemented."
	448 Move X8, [X19+888]
	449 Add X0, X31, 8
	450 Move X2, X31
	451 Move [X31+8], X8
	452 Move X1, [X19+1056]
	453 Call Hierarchy.Add, X0, X1
	454 Move X0, [X28]
	455 Call 0x1C17F10
	456 Move X2, [X29]
	457 Move X1, X19
	458 Move X3, X31
	459 Move X21, X0
	460 Call Action`1<Single>..ctor, X0, X1, X2
	461 Move X0, [X27]
	462 Call 0x1C17F10
	463 Move W8, 0x4F000000
	464 Move S0, W31
	465 Move W2, 1
	466 Move S1, W8
	467 Move X1, X21
	468 Move X3, X31
	469 Move X20, X0
	470 Call Scroller..ctor, X0, V0, V1, X1, X2
	471 Compare X20, 0
	472 JumpIfEqual {812}
	473 Move X8, 0x3E8000
	474 Move X8, [X8+928]
	475 Move X0, X20
	476 Move X2, X31
	477 Move X1, [X8]
	478 Call VisualElement.set_viewDataKey, X0, X1
	479 Move X8, [X19+1056]
	480 Move [X19+1064], X20
	481 Compare X8, 0
	482 JumpIfEqual {812}
	483 Move X8, [X8+976]
	484 Compare X8, 0
	485 JumpIfEqual {812}
	486 Move X28, 0x375000
	487 Move X28, [X28+3696]
	488 Move X27, 0x3E8000
	489 Move X20, [X8+1152]
	490 Move X0, [X28]
	491 Move X27, [X27+888]
	492 Call 0x1C17F10
	493 Move X2, [X27]
	494 Move X1, X19
	495 Move X3, X31
	496 Move X21, X0
	497 Call Action..ctor, X0, X1, X2
	498 Compare X20, 0
	499 JumpIfEqual {812}
	500 Move X29, 0x3E8000
	501 Move X29, [X29+784]
	502 Move X0, X20
	503 Move X1, X21
	504 Move X2, [X29]
	505 Call ClampedDragger`1<Single>.add_draggingEnded, X0, X1
	506 Move X8, [X19+1064]
	507 Compare X8, 0
	508 JumpIfEqual {812}
	509 Move X8, [X8+976]
	510 Compare X8, 0
	511 JumpIfEqual {812}
	512 Move X0, [X28]
	513 Move X20, [X8+1152]
	514 Call 0x1C17F10
	515 Move X2, [X27]
	516 Move X1, X19
	517 Move X3, X31
	518 Move X21, X0
	519 Call Action..ctor, X0, X1, X2
	520 Compare X20, 0
	521 JumpIfEqual {812}
	522 Move X2, [X29]
	523 Move X0, X20
	524 Move X1, X21
	525 Call ClampedDragger`1<Single>.add_draggingEnded, X0, X1
	526 Move X8, [X19+1056]
	527 Compare X8, 0
	528 JumpIfEqual {812}
	529 Move X0, [X28]
	530 Move X21, [X8+984]
	531 Call 0x1C17F10
	532 Move X2, [X27]
	533 Move X1, X19
	534 Move X3, X31
	535 Move X20, X0
	536 Call Action..ctor, X0, X1, X2
	537 Compare X21, 0
	538 JumpIfEqual {812}
	539 Move X0, [X21+1184]
	540 Compare X0, 0
	541 JumpIfEqual {812}
	542 Move X1, X20
	543 Move X2, X31
	544 Call Clickable.add_clicked, X0, X1
	545 Move X8, [X19+1056]
	546 Compare X8, 0
	547 JumpIfEqual {812}
	548 Move X0, [X28]
	549 Move X21, [X8+992]
	550 Call 0x1C17F10
	551 Move X2, [X27]
	552 Move X1, X19
	553 Move X3, X31
	554 Move X20, X0
	555 Call Action..ctor, X0, X1, X2
	556 Compare X21, 0
	557 JumpIfEqual {812}
	558 Move X0, [X21+1184]
	559 Compare X0, 0
	560 JumpIfEqual {812}
	561 Move X1, X20
	562 Move X2, X31
	563 Call Clickable.add_clicked, X0, X1
	564 Move X8, [X19+1064]
	565 Compare X8, 0
	566 JumpIfEqual {812}
	567 Move X0, [X28]
	568 Move X21, [X8+984]
	569 Call 0x1C17F10
	570 Move X2, [X27]
	571 Move X1, X19
	572 Move X3, X31
	573 Move X20, X0
	574 Call Action..ctor, X0, X1, X2
	575 Compare X21, 0
	576 JumpIfEqual {812}
	577 Move X0, [X21+1184]
	578 Compare X0, 0
	579 JumpIfEqual {812}
	580 Move X1, X20
	581 Move X2, X31
	582 Call Clickable.add_clicked, X0, X1
	583 Move X8, [X19+1064]
	584 Compare X8, 0
	585 JumpIfEqual {812}
	586 Move X0, [X28]
	587 Move X21, [X8+992]
	588 Call 0x1C17F10
	589 Move X2, [X27]
	590 Move X1, X19
	591 Move X3, X31
	592 Move X20, X0
	593 Call Action..ctor, X0, X1, X2
	594 Compare X21, 0
	595 JumpIfEqual {812}
	596 Move X0, [X21+1184]
	597 Compare X0, 0
	598 JumpIfEqual {812}
	599 Move X1, X20
	600 Move X2, X31
	601 Call Clickable.add_clicked, X0, X1
	602 Move X0, [X19+1064]
	603 Compare X0, 0
	604 JumpIfEqual {812}
	605 Move X8, [X25]
	606 Move X2, X31
	607 Move X8, [X8+184]
	608 Move X1, [X8+104]
	609 Call VisualElement.AddToClassList, X0, X1
	610 Move X0, [X19+1064]
	611 Compare X0, 0
	612 JumpIfEqual {812}
	613 Move X1, X31
	614 Call VisualElement.get_style, X0
	615 Move X1, [X22]
	616 Move X20, X0
	617 Move W0, 1
	618 Call 0x266FACC, X0
	619 Compare X20, 0
	620 JumpIfEqual {812}
	621 Move X8, [X20]
	622 Move X1, [X26]
	623 Move X21, X0
	624 NotImplemented "Instruction LDRH not yet implemented."
	625 Compare X9, 0
	626 JumpIfEqual {633}
	627 Move X10, [X8+176]
	628 Add X10, X10, 8
	629 NotImplemented "Instruction LDUR not yet implemented."
	630 NotImplemented "Instruction CMP not yet implemented."
	631 Subtract X9, X9, 1
	632 Add X10, X10, 16
	633 Move W2, 18
	634 Move X0, X20
	635 Call 0x1C5D788
	636 Move W9, [X10]
	637 Add W9, W9, 18
	638 Add X8, X8, W9
	639 Add X0, X8, 312
	640 Move X8, [X0]
	641 Move X2, [X0+8]
	642 Move X0, X20
	643 Move X1, X21
	644 NotImplemented "Instruction BLR not yet implemented."
	645 Move X0, [X19+1080]
	646 Compare X0, 0
	647 JumpIfEqual {812}
	648 Move X20, 0x3E8000
	649 Move X20, [X20+792]
	650 Move X1, [X19+1064]
	651 Move X21, 0x3E8000
	652 Move X25, 0x3E8000
	653 Move X22, 0x3E8000
	654 Move X21, [X21+848]
	655 Move X25, [X25+776]
	656 Move X22, [X22+856]
	657 Move X2, X31
	658 Call VisualElement.Add, X0, X1
	659 Move W1, 2
	660 Move X0, X19
	661 Call ScrollView.set_touchScrollBehavior, X0, X1
	662 Move X0, [X20]
	663 Call 0x1C17F10
	664 Move X2, [X21]
	665 Move X1, X19
	666 Move X3, X31
	667 Move X20, X0
	668 Call 0x2D0F824, X0, X1, X2
	669 Move X3, [X25]
	670 Move X0, X19
	671 Move X1, X20
	672 Move W2, W31
	673 Call 0x21A2534, X0, X1, X2
	674 Move X0, [X23]
	675 Move X20, [X19+1064]
	676 Call 0x1C17F10
	677 Move X2, [X22]
	678 Move X1, X19
	679 Move X3, X31
	680 Move X21, X0
	681 Call 0x2D0F824, X0, X1, X2
	682 Compare X20, 0
	683 JumpIfEqual {812}
	684 Move X3, [X24]
	685 Move X0, X20
	686 Move X1, X21
	687 Move W2, W31
	688 Call 0x21A2534, X0, X1, X2
	689 Move X0, [X23]
	690 Move X20, [X19+1056]
	691 Call 0x1C17F10
	692 Move X2, [X22]
	693 Move X1, X19
	694 Move X3, X31
	695 Move X21, X0
	696 Call 0x2D0F824, X0, X1, X2
	697 Compare X20, 0
	698 JumpIfEqual {812}
	699 Move X3, [X24]
	700 Move X0, X20
	701 Move X1, X21
	702 Move W2, W31
	703 Call 0x21A2534, X0, X1, X2
	704 Move W20, 0xBF800000
	705 Move X0, X19
	706 Move [X19+1000], W20
	707 Call ScrollView.UpdateHorizontalSliderPageSize, X0
	708 Move X0, X19
	709 Move [X19+1004], W20
	710 Call ScrollView.UpdateVerticalSliderPageSize, X0
	711 Move X8, [X19+1056]
	712 Compare X8, 0
	713 JumpIfEqual {812}
	714 Move X8, [X8+976]
	715 Compare X8, 0
	716 JumpIfEqual {812}
	717 Move X0, [X23]
	718 Move X21, 0x3E8000
	719 Move X20, [X8+1096]
	720 Move X21, [X21+824]
	721 Call 0x1C17F10
	722 Move X2, [X21]
	723 Move X1, X19
	724 Move X3, X31
	725 Move X21, X0
	726 Call 0x2D0F824, X0, X1, X2
	727 Compare X20, 0
	728 JumpIfEqual {812}
	729 Move X3, [X24]
	730 Move X0, X20
	731 Move X1, X21
	732 Move W2, W31
	733 Call 0x21A2534, X0, X1, X2
	734 Move X8, [X19+1064]
	735 Compare X8, 0
	736 JumpIfEqual {812}
	737 Move X8, [X8+976]
	738 Compare X8, 0
	739 JumpIfEqual {812}
	740 Move X0, [X23]
	741 Move X21, 0x3E8000
	742 Move X20, [X8+1096]
	743 Move X21, [X21+864]
	744 Call 0x1C17F10
	745 Move X2, [X21]
	746 Move X1, X19
	747 Move X3, X31
	748 Move X21, X0
	749 Call 0x2D0F824, X0, X1, X2
	750 Compare X20, 0
	751 JumpIfEqual {812}
	752 Move X22, 0x39F000
	753 Move X22, [X22+160]
	754 Move X3, [X24]
	755 Move X23, 0x3E8000
	756 Move X24, 0x39E000
	757 Move X25, 0x3E8000
	758 Move X23, [X23+832]
	759 Move X24, [X24+1928]
	760 Move X25, [X25+840]
	761 Move X0, X20
	762 Move X1, X21
	763 Move W2, W31
	764 Call 0x21A2534, X0, X1, X2
	765 Move X0, [X22]
	766 Call 0x1C17F10
	767 Move X2, [X23]
	768 Move X1, X19
	769 Move X3, X31
	770 Move X20, X0
	771 Call 0x2D0F824, X0, X1, X2
	772 Move [X19+1184], X20
	773 Move X0, [X24]
	774 Call 0x1C17F10
	775 Move X2, [X25]
	776 Move X1, X19
	777 Move X3, X31
	778 Move X20, X0
	779 Call 0x2D0F824, X0, X1, X2
	780 Move [X19+1192], X20
	781 Move X20, 0x65A000
	782 Move W8, [X20+1935]
	783 Compare W8, 0
	784 JumpIfNotEqual {790}
	785 Move X0, 0x37C000
	786 Move X0, [X0+3848]
	787 Call 0x1C17CF4
	788 Move W8, 1
	789 Move [X20+1935], W8
	790 Move X8, 0x37C000
	791 Move X8, [X8+3848]
	792 Move X0, X19
	793 Move X8, [X8]
	794 Move X8, [X8+184]
	795 Move S0, [X8]
	796 Move S1, [X8+4]
	797 Call ScrollView.set_scrollOffset, X0, X1
	798 Move X20, [X31+96]
	799 Move X19, [X31+104]
	800 Move X22, [X31+80]
	801 Move X21, [X31+88]
	802 Move X24, [X31+64]
	803 Move X23, [X31+72]
	804 Move X26, [X31+48]
	805 Move X25, [X31+56]
	806 Move X28, [X31+32]
	807 Move X27, [X31+40]
	808 Move X29, [X31+16]
	809 Move X30, [X31+24]
	810 Add X31, X31, 112
	811 Return 
	812 Call 0x1C17F20

Method: UnityEngine.UIElements.ScrollViewMode get_mode()

Disassembly:
	0x03D811EC BL 0x3D7DA78
	0x03D811F0 MOV X0, X19

ISIL:
	001 Move W0, [X0+1104]
	002 Return X0

Method: System.Void set_mode(UnityEngine.UIElements.ScrollViewMode value)

Disassembly:
	0x03D811F4 BL 0x3D7E314
	0x03D811F8 MOV X0, X19
	0x03D811FC LDP X20, X19, [X31 + 0x20]
	0x03D81200 LDP X22, X21, [X31 + 0x10]
	0x03D81204 LDR X30, [X31], #0x30

ISIL:
	001 Move W8, [X0+1104]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Return 
	004 Call ScrollView.SetScrollViewMode, X0, X1
	005 Return 

Method: System.Void SetScrollViewMode(UnityEngine.UIElements.ScrollViewMode mode)

Disassembly:
	0x03D80EAC LDRB W10, [X8 + 0x130]
	0x03D80EB0 CMP W11, W10
	0x03D80EB4 B.CC 0x3D80ECC
	0x03D80EB8 LDR X9, [X9 + 0xC8]
	0x03D80EBC ADD X9, X9, X10, 0x3, LSL
	0x03D80EC0 LDUR X9, [X9 - 0x8]
	0x03D80EC4 CMP X9, X8
	0x03D80EC8 B.EQ 0x3D80EDC
	0x03D80ECC STR X31, [X19 + 0x498]
	0x03D80ED0 LDP X20, X19, [X31 + 0x10]
	0x03D80ED4 LDP X30, X21, [X31], #0x20
	0x03D80ED8 RET
	0x03D80EDC MOVZ W8, 0x1
	0x03D80EE0 STR X0, [X19 + 0x498]
	0x03D80EE4 STRB W8, [X19 + 0x495]
	0x03D80EE8 ADRP X8, 0x39E000
	0x03D80EEC LDR X1, [X19 + 0x4A0]
	0x03D80EF0 LDR X8, [X8 + 0x98]
	0x03D80EF4 MOV W2, W31
	0x03D80EF8 LDR X3, [X8]
	0x03D80EFC BL 0x21A1534
	0x03D80F00 LDR X0, [X19 + 0x498]
	0x03D80F04 CBZ X0, 0x3D80F28
	0x03D80F08 ADRP X8, 0x39D000
	0x03D80F0C LDR X1, [X19 + 0x4A8]
	0x03D80F10 LDR X8, [X8 + 0x778]
	0x03D80F14 LDP X20, X19, [X31 + 0x10]
	0x03D80F18 MOV W2, W31
	0x03D80F1C LDR X3, [X8]
	0x03D80F20 LDP X30, X21, [X31], #0x20
	0x03D80F24 B 0x21A1534
	0x03D80F28 BL 0x1C16F20
	0x03D80F2C STP X30, X21, [X31 - 0x20]!
	0x03D80F30 STP X20, X19, [X31 + 0x10]
	0x03D80F34 ADRP X21, 0x667000
	0x03D80F38 LDRB W8, [X21 + 0xDC3]
	0x03D80F3C MOV X20, X1
	0x03D80F40 MOV X19, X0
	0x03D80F44 TBNZ X8, 0x0, 0x3D80F74
	0x03D80F48 ADRP X0, 0x39E000
	0x03D80F4C LDR X0, [X0 + 0xD28]
	0x03D80F50 BL 0x1C16CF4
	0x03D80F54 ADRP X0, 0x39D000
	0x03D80F58 LDR X0, [X0 + 0x798]
	0x03D80F5C BL 0x1C16CF4
	0x03D80F60 ADRP X0, 0x3E2000
	0x03D80F64 LDR X0, [X0 + 0xA70]
	0x03D80F68 BL 0x1C16CF4
	0x03D80F6C MOVZ W8, 0x1
	0x03D80F70 STRB W8, [X21 + 0xDC3]
	0x03D80F74 CBZ X20, 0x3D80FE8
	0x03D80F78 LDR W21, [X20 + 0x90]
	0x03D80F7C MOV X0, X20
	0x03D80F80 MOV X1, X31
	0x03D80F84 BL 0x3D9C848
	0x03D80F88 MOV X2, X0
	0x03D80F8C MOV X0, X19
	0x03D80F90 MOV W1, W21
	0x03D80F94 BL 0x3D80FEC
	0x03D80F98 LDR X0, [X19 + 0x498]
	0x03D80F9C CBZ X0, 0x3D80FDC
	0x03D80FA0 ADRP X8, 0x39E000
	0x03D80FA4 LDR X8, [X8 + 0xD28]
	0x03D80FA8 LDR X1, [X19 + 0x4A0]
	0x03D80FAC MOV W2, W31
	0x03D80FB0 LDR X3, [X8]
	0x03D80FB4 BL 0x21A18B4
	0x03D80FB8 LDR X0, [X19 + 0x498]
	0x03D80FBC CBZ X0, 0x3D80FE8
	0x03D80FC0 ADRP X8, 0x39D000
	0x03D80FC4 LDR X8, [X8 + 0x798]
	0x03D80FC8 LDR X1, [X19 + 0x4A8]
	0x03D80FCC MOV W2, W31
	0x03D80FD0 LDR X3, [X8]
	0x03D80FD4 BL 0x21A18B4
	0x03D80FD8 STR X31, [X19 + 0x498]
	0x03D80FDC LDP X20, X19, [X31 + 0x10]
	0x03D80FE0 LDP X30, X21, [X31], #0x20
	0x03D80FE4 RET
	0x03D80FE8 BL 0x1C16F20
	0x03D80FEC STP X30, X21, [X31 - 0x20]!
	0x03D80FF0 STP X20, X19, [X31 + 0x10]
	0x03D80FF4 LDR X8, [X0]
	0x03D80FF8 STRB W31, [X0 + 0x496]
	0x03D80FFC STRH W31, [X0 + 0x494]
	0x03D81000 MOV W19, W1
	0x03D81004 LDR X9, [X8 + 0x768]
	0x03D81008 LDR X8, [X8 + 0x770]
	0x03D8100C MOV X21, X2
	0x03D81010 MOV X20, X0
	0x03D81014 MOV X1, X8
	0x03D81018 BLR X9
	0x03D8101C CMP X0, X21
	0x03D81020 MOV W0, W31
	0x03D81024 B.NE 0x3D810B0
	0x03D81028 LDR X8, [X20]
	0x03D8102C MOV X0, X20
	0x03D81030 LDR X9, [X8 + 0x768]
	0x03D81034 LDR X1, [X8 + 0x770]
	0x03D81038 BLR X9
	0x03D8103C MOV W1, W19
	0x03D81040 MOV X2, X31
	0x03D81044 BL 0x3DBAB50
	0x03D81048 TBZ X0, 0x0, 0x3D810AC
	0x03D8104C MOV X0, X31
	0x03D81050 BL 0x3C3C764
	0x03D81054 MOV X0, X31
	0x03D81058 STR S0, [X20 + 0x440]
	0x03D8105C BL 0x3C3C764
	0x03D81060 LDR W8, [X20 + 0x404]
	0x03D81064 STR S0, [X20 + 0x444]
	0x03D81068 CMP W8, 0x1
	0x03D8106C B.EQ 0x3D8107C
	0x03D81070 LDR V0, [X20 + 0x3F4]
	0x03D81074 FCMP S0, 0x0
	0x03D81078 B.LE 0x3D81084
	0x03D8107C MOV X0, X20
	0x03D81080 BL 0x3D827C0
	0x03D81084 LDR X8, [X20]
	0x03D81088 MOV X0, X20
	0x03D8108C LDR X9, [X8 + 0x768]
	0x03D81090 LDR X1, [X8 + 0x770]
	0x03D81094 BLR X9
	0x03D81098 MOV W1, W19
	0x03D8109C MOV X2, X31
	0x03D810A0 BL 0x3DBAE34
	0x03D810A4 MOVZ W0, 0x1
	0x03D810A8 B 0x3D810B0
	0x03D810AC MOV W0, W31
	0x03D810B0 LDP X20, X19, [X31 + 0x10]
	0x03D810B4 LDP X30, X21, [X31], #0x20
	0x03D810B8 RET
	0x03D810BC STR X30, [X31 - 0x30]!
	0x03D810C0 STP X22, X21, [X31 + 0x10]
	0x03D810C4 STP X20, X19, [X31 + 0x20]
	0x03D810C8 CBZ X1, 0x3D8120C
	0x03D810CC LDUR V0, [X1 + 0x8C]
	0x03D810D0 LDUR V1, [X1 + 0x9C]
	0x03D810D4 ADRP X8, 0xFFFFFFFFFCD68000
	0x03D810D8 LDR V2, [X8 + 0xF20]
	0x03D810DC MOV X21, X1
	0x03D810E0 FSUB V0.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x03D810E8 FADDP S0, V0.2S
	0x03D810EC FCMP S0, S2
	0x03D810F0 B.MI 0x3D81118
	0x03D810F4 LDR W8, [X0 + 0x450]
	0x03D810F8 LDR W9, [X0 + 0x3D0]
	0x03D810FC MOV X19, X0
	0x03D81100 CMP W8, 0x1
	0x03D81104 B.EQ 0x3D81128
	0x03D81108 CMP W9, 0x1
	0x03D8110C B.NE 0x3D81128
	0x03D81110 MOVZ W20, 0x1
	0x03D81114 B 0x3D81150
	0x03D81118 LDP X20, X19, [X31 + 0x20]
	0x03D8111C LDP X22, X21, [X31 + 0x10]
	0x03D81120 LDR X30, [X31], #0x30
	0x03D81124 RET
	0x03D81128 CBZ W9, 0x3D81134
	0x03D8112C MOV W20, W31
	0x03D81130 B 0x3D81150
	0x03D81134 MOV X0, X19
	0x03D81138 BL 0x3D7DFCC
	0x03D8113C ADRP X8, 0xFFFFFFFFFCD69000
	0x03D81140 LDR V1, [X8 + 0x410]
	0x03D81144 LDR W8, [X19 + 0x450]
	0x03D81148 FCMP S0, S1
	0x03D8114C CSET W20, GT
	0x03D81150 LDR W9, [X19 + 0x3CC]
	0x03D81154 CBZ W8, 0x3D81168
	0x03D81158 CMP W9, 0x1
	0x03D8115C B.NE 0x3D81168
	0x03D81160 MOVZ W22, 0x1
	0x03D81164 B 0x3D8118C
	0x03D81168 CBZ W9, 0x3D81174
	0x03D8116C MOV W22, W31
	0x03D81170 B 0x3D8118C
	0x03D81174 MOV X0, X19
	0x03D81178 BL 0x3D7DF7C
	0x03D8117C ADRP X8, 0xFFFFFFFFFCD69000
	0x03D81180 LDR V1, [X8 + 0x410]
	0x03D81184 FCMP S0, S1
	0x03D81188 CSET W22, GT
	0x03D8118C LDR W9, [X19 + 0x3C8]
	0x03D81190 LDR W8, [X21 + 0xA4]
	0x03D81194 ADDS W31, W9, 0x1
	0x03D81198 B.EQ 0x3D811C4
	0x03D8119C SUB W8, W8, W9
	0x03D811A0 CMP W8, 0x6
	0x03D811A4 B.LT 0x3D811E0
	0x03D811A8 TBZ X20, 0x0, 0x3D811CC
	0x03D811AC MOVZ W20, 0x1
	0x03D811B0 TBNZ X22, 0x0, 0x3D811DC
	0x03D811B4 MOV X0, X19
	0x03D811B8 BL 0x3D7E0DC
	0x03D811BC MOV W22, W0
	0x03D811C0 B 0x3D811E0
	0x03D811C4 STR W8, [X19 + 0x3C8]
	0x03D811C8 B 0x3D811E0
	0x03D811CC MOV X0, X19
	0x03D811D0 BL 0x3D7E01C
	0x03D811D4 MOV W20, W0
	0x03D811D8 TBZ X22, 0x0, 0x3D811B4
	0x03D811DC MOVZ W22, 0x1
	0x03D811E0 AND W1, W22, 0x1
	0x03D811E4 AND W2, W20, 0x1
	0x03D811E8 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x668000
	007 Move X21, 0x39E000
	008 Move W8, [X22+3519]
	009 Move X21, [X21+1656]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x39E000
	017 Move X0, [X0+1656]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3519], W8
	021 Move [X19+1104], W20
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Move X8, [X0+184]
	029 Move X0, X19
	030 Move X2, X31
	031 Move X1, [X8+120]
	032 Call VisualElement.RemoveFromClassList, X0, X1
	033 Move X8, [X21]
	034 Move X0, X19
	035 Move X2, X31
	036 Move X8, [X8+184]
	037 Move X1, [X8+112]
	038 Call VisualElement.RemoveFromClassList, X0, X1
	039 Move X8, [X21]
	040 Move X0, X19
	041 Move X2, X31
	042 Move X8, [X8+184]
	043 Move X1, [X8+128]
	044 Call VisualElement.RemoveFromClassList, X0, X1
	045 Move X8, [X21]
	046 Move X0, X19
	047 Move X2, X31
	048 Move X8, [X8+184]
	049 Move X1, [X8+136]
	050 Call VisualElement.RemoveFromClassList, X0, X1
	051 Move X8, [X19]
	052 Move X0, X19
	053 Move X9, [X8+1896]
	054 Move X1, [X8+1904]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Compare X0, 0
	057 JumpIfEqual {231}
	058 Move X8, [X21]
	059 Move X2, X31
	060 Move X8, [X8+184]
	061 Move X1, [X8+80]
	062 Call VisualElement.RemoveFromClassList, X0, X1
	063 Move X8, [X19]
	064 Move X0, X19
	065 Move X9, [X8+1896]
	066 Move X1, [X8+1904]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare X0, 0
	069 JumpIfEqual {231}
	070 Move X8, [X21]
	071 Move X2, X31
	072 Move X8, [X8+184]
	073 Move X1, [X8+72]
	074 Call VisualElement.RemoveFromClassList, X0, X1
	075 Move X8, [X19]
	076 Move X0, X19
	077 Move X9, [X8+1896]
	078 Move X1, [X8+1904]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X0, 0
	081 JumpIfEqual {231}
	082 Move X8, [X21]
	083 Move X2, X31
	084 Move X8, [X8+184]
	085 Move X1, [X8+88]
	086 Call VisualElement.RemoveFromClassList, X0, X1
	087 Move X0, [X19+1048]
	088 Compare X0, 0
	089 JumpIfEqual {231}
	090 Move X8, [X21]
	091 Move X2, X31
	092 Move X8, [X8+184]
	093 Move X1, [X8+40]
	094 Call VisualElement.RemoveFromClassList, X0, X1
	095 Move X0, [X19+1048]
	096 Compare X0, 0
	097 JumpIfEqual {231}
	098 Move X8, [X21]
	099 Move X2, X31
	100 Move X8, [X8+184]
	101 Move X1, [X8+32]
	102 Call VisualElement.RemoveFromClassList, X0, X1
	103 Move X0, [X19+1048]
	104 Compare X0, 0
	105 JumpIfEqual {231}
	106 Move X8, [X21]
	107 Move X2, X31
	108 Move X8, [X8+184]
	109 Move X1, [X8+48]
	110 Call VisualElement.RemoveFromClassList, X0, X1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Compare W20, 0
	114 JumpIfNotEqual {225}
	115 Move X0, [X21]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X21]
	121 Move X8, [X0+184]
	122 Move X0, X19
	123 Move X2, X31
	124 Move X1, [X8+136]
	125 Call VisualElement.AddToClassList, X0, X1
	126 Move X8, [X21]
	127 Move X0, X19
	128 Move X2, X31
	129 Move X8, [X8+184]
	130 Move X1, [X8+120]
	131 Call VisualElement.AddToClassList, X0, X1
	132 Move X0, [X19+1048]
	133 Compare X0, 0
	134 JumpIfEqual {231}
	135 Move X8, [X21]
	136 Move X2, X31
	137 Move X8, [X8+184]
	138 Move X1, [X8+40]
	139 Call VisualElement.AddToClassList, X0, X1
	140 Move X8, [X19]
	141 Move X0, X19
	142 Move X9, [X8+1896]
	143 Move X1, [X8+1904]
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Compare X0, 0
	146 JumpIfEqual {231}
	147 Move W8, 80
	148 Move X0, [X21]
	149 Move W8, [X0+224]
	150 Compare W8, 0
	151 JumpIfNotEqual {154}
	152 Call 0x1C17DFC
	153 Move X0, [X21]
	154 Move X8, [X0+184]
	155 Move X0, X19
	156 Move X2, X31
	157 Move X1, [X8+136]
	158 Call VisualElement.AddToClassList, X0, X1
	159 Move X8, [X21]
	160 Move X0, X19
	161 Move X2, X31
	162 Move X8, [X8+184]
	163 Move X1, [X8+128]
	164 Call VisualElement.AddToClassList, X0, X1
	165 Move X0, [X19+1048]
	166 Compare X0, 0
	167 JumpIfEqual {231}
	168 Move X8, [X21]
	169 Move X2, X31
	170 Move X8, [X8+184]
	171 Move X1, [X8+48]
	172 Call VisualElement.AddToClassList, X0, X1
	173 Move X8, [X19]
	174 Move X0, X19
	175 Move X9, [X8+1896]
	176 Move X1, [X8+1904]
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Compare X0, 0
	179 JumpIfEqual {231}
	180 Move W8, 88
	181 Move X0, [X21]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X21]
	187 Move X8, [X0+184]
	188 Move X0, X19
	189 Move X2, X31
	190 Move X1, [X8+136]
	191 Call VisualElement.AddToClassList, X0, X1
	192 Move X8, [X21]
	193 Move X0, X19
	194 Move X2, X31
	195 Move X8, [X8+184]
	196 Move X1, [X8+112]
	197 Call VisualElement.AddToClassList, X0, X1
	198 Move X0, [X19+1048]
	199 Compare X0, 0
	200 JumpIfEqual {231}
	201 Move X8, [X21]
	202 Move X2, X31
	203 Move X8, [X8+184]
	204 Move X1, [X8+32]
	205 Call VisualElement.AddToClassList, X0, X1
	206 Move X8, [X19]
	207 Move X0, X19
	208 Move X9, [X8+1896]
	209 Move X1, [X8+1904]
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Compare X0, 0
	212 JumpIfEqual {231}
	213 Move W8, 72
	214 Move X9, [X21]
	215 Move X20, [X31+32]
	216 Move X19, [X31+40]
	217 Move X22, [X31+16]
	218 Move X21, [X31+24]
	219 Move X2, X31
	220 Move X9, [X9+184]
	221 Move X1, [X9]
	222 Move X30, [X31+48]
	223 Call VisualElement.AddToClassList, X0, X1
	224 Return 
	225 Move X20, [X31+32]
	226 Move X19, [X31+40]
	227 Move X22, [X31+16]
	228 Move X21, [X31+24]
	229 Move X30, [X31+48]
	230 Return 
	231 Call 0x1C17F20

Method: System.Void OnAttachToPanel(UnityEngine.UIElements.AttachToPanelEvent evt)

Disassembly:
	0x03D81208 B 0x3D81210
	0x03D8120C BL 0x1C16F20
	0x03D81210 STP X30, X21, [X31 - 0x20]!
	0x03D81214 STP X20, X19, [X31 + 0x10]
	0x03D81218 ADRP X20, 0x666000
	0x03D8121C LDRB W8, [X20 + 0xDC4]
	0x03D81220 MOV X19, X0
	0x03D81224 TBNZ X8, 0x0, 0x3D81260
	0x03D81228 ADRP X0, 0x373000
	0x03D8122C LDR X0, [X0 + 0xE70]
	0x03D81230 BL 0x1C16CF4
	0x03D81234 ADRP X0, 0x39D000
	0x03D81238 LDR X0, [X0 + 0xAB8]
	0x03D8123C BL 0x1C16CF4
	0x03D81240 ADRP X0, 0x39A000
	0x03D81244 LDR X0, [X0 + 0x680]
	0x03D81248 BL 0x1C16CF4
	0x03D8124C ADRP X0, 0x3E6000
	0x03D81250 LDR X0, [X0 + 0x408]
	0x03D81254 BL 0x1C16CF4
	0x03D81258 MOVZ W8, 0x1
	0x03D8125C STRB W8, [X20 + 0xDC4]
	0x03D81260 LDR X20, [X19 + 0x458]
	0x03D81264 CBZ X20, 0x3D812B0
	0x03D81268 ADRP X21, 0x39D000
	0x03D8126C LDR X8, [X20]
	0x03D81270 LDR X21, [X21 + 0xAB8]
	0x03D81274 LDRH W9, [X8 + 0x12E]
	0x03D81278 LDR X1, [X21]
	0x03D8127C CBZ X9, 0x3D812A0
	0x03D81280 LDR X10, [X8 + 0xB0]
	0x03D81284 ADD X10, X10, 0x8
	0x03D81288 LDUR X11, [X10 - 0x8]
	0x03D8128C CMP X11, X1
	0x03D81290 B.EQ 0x3D8133C
	0x03D81294 SUBS X9, X9, 0x1
	0x03D81298 ADD X10, X10, 0x10
	0x03D8129C B.NE 0x3D81288
	0x03D812A0 MOVZ W2, 0x1
	0x03D812A4 MOV X0, X20
	0x03D812A8 BL 0x1C5C788
	0x03D812AC B 0x3D8134C
	0x03D812B0 MOV X0, X19
	0x03D812B4 MOV X1, X31
	0x03D812B8 BL 0x3DF7724
	0x03D812BC ADRP X8, 0x373000
	0x03D812C0 LDR X8, [X8 + 0xE70]
	0x03D812C4 MOV X20, X0
	0x03D812C8 LDR X8, [X8]
	0x03D812CC MOV X0, X8
	0x03D812D0 BL 0x1C16F10
	0x03D812D4 ADRP X8, 0x3E6000
	0x03D812D8 LDR X8, [X8 + 0x408]
	0x03D812DC MOV X1, X19
	0x03D812E0 MOV X3, X31
	0x03D812E4 MOV X21, X0
	0x03D812E8 LDR X2, [X8]
	0x03D812EC BL 0x3314368
	0x03D812F0 CBZ X20, 0x3D813F0
	0x03D812F4 ADRP X10, 0x39A000
	0x03D812F8 LDR X8, [X20]
	0x03D812FC LDR X10, [X10 + 0x680]
	0x03D81300 LDRH W9, [X8 + 0x12E]
	0x03D81304 LDR X1, [X10]
	0x03D81308 CBZ X9, 0x3D8132C
	0x03D8130C LDR X10, [X8 + 0xB0]
	0x03D81310 ADD X10, X10, 0x8
	0x03D81314 LDUR X11, [X10 - 0x8]
	0x03D81318 CMP X11, X1
	0x03D8131C B.EQ 0x3D813C0
	0x03D81320 SUBS X9, X9, 0x1
	0x03D81324 ADD X10, X10, 0x10
	0x03D81328 B.NE 0x3D81314
	0x03D8132C MOVZ W2, 0x1
	0x03D81330 MOV X0, X20
	0x03D81334 BL 0x1C5C788
	0x03D81338 B 0x3D813D0
	0x03D8133C LDR W9, [X10]
	0x03D81340 ADD W9, W9, 0x1
	0x03D81344 ADD X8, X8, W9, 0x4, SXTW
	0x03D81348 ADD X0, X8, 0x138
	0x03D8134C LDP X8, X1, [X0]
	0x03D81350 MOV X0, X20
	0x03D81354 BLR X8
	0x03D81358 LDR X19, [X19 + 0x458]
	0x03D8135C CBZ X19, 0x3D813F0
	0x03D81360 LDR X8, [X19]
	0x03D81364 LDR X1, [X21]
	0x03D81368 LDRH W9, [X8 + 0x12E]
	0x03D8136C CBZ X9, 0x3D81390
	0x03D81370 LDR X10, [X8 + 0xB0]
	0x03D81374 ADD X10, X10, 0x8
	0x03D81378 LDUR X11, [X10 - 0x8]
	0x03D8137C CMP X11, X1
	0x03D81380 B.EQ 0x3D813A0
	0x03D81384 SUBS X9, X9, 0x1
	0x03D81388 ADD X10, X10, 0x10
	0x03D8138C B.NE 0x3D81378
	0x03D81390 MOV X0, X19
	0x03D81394 MOV W2, W31
	0x03D81398 BL 0x1C5C788
	0x03D8139C B 0x3D813AC
	0x03D813A0 LDRSW X9, [X10]
	0x03D813A4 ADD X8, X8, X9, 0x4, LSL
	0x03D813A8 ADD X0, X8, 0x138
	0x03D813AC LDP X2, X1, [X0]
	0x03D813B0 MOV X0, X19
	0x03D813B4 LDP X20, X19, [X31 + 0x10]
	0x03D813B8 LDP X30, X21, [X31], #0x20
	0x03D813BC BR X2
	0x03D813C0 LDR W9, [X10]
	0x03D813C4 ADD W9, W9, 0x1
	0x03D813C8 ADD X8, X8, W9, 0x4, SXTW
	0x03D813CC ADD X0, X8, 0x138
	0x03D813D0 LDP X8, X2, [X0]
	0x03D813D4 MOV X0, X20
	0x03D813D8 MOV X1, X21
	0x03D813DC BLR X8
	0x03D813E0 STR X0, [X19 + 0x458]
	0x03D813E4 LDP X20, X19, [X31 + 0x10]
	0x03D813E8 LDP X30, X21, [X31], #0x20
	0x03D813EC RET
	0x03D813F0 BL 0x1C16F20
	0x03D813F4 ADRP X8, 0xFFFFFFFFFCD69000
	0x03D813F8 LDR V6, [X8 + 0x130]
	0x03D813FC FMUL S7, S3, S6
	0x03D81400 FCMP S7, S1
	0x03D81404 FMUL S6, S5, S6
	0x03D81408 FCSEL S1, S1, S7, MI
	0x03D8140C FCMP S1, S6
	0x03D81410 FCSEL S1, S1, S6, MI
	0x03D81414 FCMP S3, S2
	0x03D81418 B.PL 0x3D8144C
	0x03D8141C FCMP S1, S2
	0x03D81420 B.PL 0x3D8144C
	0x03D81424 FSUB S6, S2, S3
	0x03D81428 FSUB S1, S2, S1
	0x03D8142C FMOV S7, 1
	0x03D81430 FDIV S1, S1, S6
	0x03D81434 FMUL S6, S6, S1
	0x03D81438 FSUB S1, S7, S1
	0x03D8143C FDIV S1, S6, S1
	0x03D81440 FADD S0, S1, S0
	0x03D81444 MOV V1.16B, V2.16B
	0x03D81448 B 0x3D81480
	0x03D8144C FCMP S5, S4
	0x03D81450 B.LE 0x3D81480
	0x03D81454 FCMP S1, S4
	0x03D81458 B.LE 0x3D81480
	0x03D8145C FSUB S6, S5, S4
	0x03D81460 FSUB S1, S1, S4
	0x03D81464 FMOV S7, 1
	0x03D81468 FDIV S1, S1, S6
	0x03D8146C FMUL S6, S6, S1
	0x03D81470 FSUB S1, S7, S1
	0x03D81474 FDIV S1, S6, S1
	0x03D81478 FSUB S0, S0, S1
	0x03D8147C MOV V1.16B, V4.16B
	0x03D81480 FSUB S0, S1, S0
	0x03D81484 FCMP S0, S2
	0x03D81488 B.PL 0x3D8149C
	0x03D8148C FSUB S0, S2, S0
	0x03D81490 FSUB S1, S2, S3
	0x03D81494 FMOV S3, 1
	0x03D81498 B 0x3D814B4
	0x03D8149C FCMP S0, S4
	0x03D814A0 B.LS 0x3D814DC
	0x03D814A4 FSUB S0, S0, S4
	0x03D814A8 FSUB S1, S5, S4
	0x03D814AC FMOV S3, -1
	0x03D814B0 MOV V2.16B, V4.16B
	0x03D814B4 ADRP X8, 0xFFFFFFFFFCD68000
	0x03D814B8 LDR V4, [X8 + 0xF9C]
	0x03D814BC FABS S5, S0
	0x03D814C0 FCMP S5, S4
	0x03D814C4 B.MI 0x3D814E0
	0x03D814C8 FADD S4, S1, S0
	0x03D814CC FDIV S0, S0, S4
	0x03D814D0 FMUL S0, S1, S0
	0x03D814D4 FMUL S0, S3, S0
	0x03D814D8 FSUB S0, S2, S0
	0x03D814DC RET
	0x03D814E0 MOV V0.16B, V2.16B
	0x03D814E4 RET
	0x03D814E8 STP D9, D8, [X31 - 0x30]!
	0x03D814EC STR X30, [X31 + 0x10]
	0x03D814F0 STP X20, X19, [X31 + 0x20]
	0x03D814F4 LDR W8, [X0 + 0x404]
	0x03D814F8 MOV X19, X0
	0x03D814FC CMP W8, 0x1
	0x03D81500 B.NE 0x3D8152C
	0x03D81504 MOV X0, X19
	0x03D81508 BL 0x3D7E19C
	0x03D8150C LDR V9, [X19 + 0x480]
	0x03D81510 MOV X0, X19
	0x03D81514 MOV V8.16B, V0.16B
	0x03D81518 BL 0x3D7E19C
	0x03D8151C FCMP S8, S9
	0x03D81520 B.PL 0x3D81568
	0x03D81524 FSUB S0, S9, S0
	0x03D81528 B 0x3D81584
	0x03D8152C ADRP X20, 0x658000
	0x03D81530 LDRB W8, [X20 + 0x78F]
	0x03D81534 CBNZ W8, 0x3D8154C
	0x03D81538 ADRP X0, 0x37A000
	0x03D8153C LDR X0, [X0 + 0xF08]
	0x03D81540 BL 0x1C16CF4
	0x03D81544 MOVZ W8, 0x1
	0x03D81548 STRB W8, [X20 + 0x78F]
	0x03D8154C ADRP X8, 0x37A000
	0x03D81550 LDR X8, [X8 + 0xF08]
	0x03D81554 LDR X8, [X8]
	0x03D81558 LDR X8, [X8 + 0xB8]
	0x03D8155C LDP S1, S0, [X8]
	0x03D81560 STR S1, [X19 + 0x478]
	0x03D81564 B 0x3D815CC
	0x03D81568 LDR V8, [X19 + 0x488]
	0x03D8156C FCMP S0, S8
	0x03D81570 FMOV S0, W31
	0x03D81574 B.LE 0x3D81584
	0x03D81578 MOV X0, X19
	0x03D8157C BL 0x3D7E19C
	0x03D81580 FSUB S0, S8, S0
	0x03D81584 MOV X0, X19
	0x03D81588 STR S0, [X19 + 0x478]
	0x03D8158C BL 0x3D7E19C
	0x03D81590 LDR V9, [X19 + 0x484]
	0x03D81594 MOV X0, X19
	0x03D81598 MOV V8.16B, V1.16B
	0x03D8159C BL 0x3D7E19C
	0x03D815A0 FCMP S8, S9
	0x03D815A4 B.PL 0x3D815B0
	0x03D815A8 FSUB S0, S9, S1
	0x03D815AC B 0x3D815CC
	0x03D815B0 LDR V8, [X19 + 0x48C]
	0x03D815B4 FMOV S0, W31
	0x03D815B8 FCMP S1, S8
	0x03D815BC B.LE 0x3D815CC
	0x03D815C0 MOV X0, X19
	0x03D815C4 BL 0x3D7E19C
	0x03D815C8 FSUB S0, S8, S1
	0x03D815CC STR S0, [X19 + 0x47C]
	0x03D815D0 LDP X20, X19, [X31 + 0x20]
	0x03D815D4 LDR X30, [X31 + 0x10]
	0x03D815D8 LDP D9, D8, [X31], #0x30
	0x03D815DC RET
	0x03D815E0 STR D10, [X31 - 0x30]!
	0x03D815E4 STP D9, D8, [X31 + 0x8]
	0x03D815E8 STR X30, [X31 + 0x18]
	0x03D815EC STP X20, X19, [X31 + 0x20]
	0x03D815F0 LDR W8, [X0 + 0x404]
	0x03D815F4 MOV X19, X0
	0x03D815F8 CMP W8, 0x1
	0x03D815FC B.NE 0x3D8163C
	0x03D81600 MOV X0, X19
	0x03D81604 BL 0x3D7E19C
	0x03D81608 LDR V5, [X19 + 0x480]
	0x03D8160C MOV V8.16B, V0.16B
	0x03D81610 MOV V9.16B, V1.16B
	0x03D81614 FCMP S0, S5
	0x03D81618 B.PL 0x3D81688
	0x03D8161C LDR V2, [X19 + 0x400]
	0x03D81620 LDR V4, [X19 + 0x44C]
	0x03D81624 MOVZ W8, 0x7F800000
	0x03D81628 ADD X20, X19, 0x478
	0x03D8162C FMOV S3, W8
	0x03D81630 MOV V0.16B, V8.16B
	0x03D81634 MOV V1.16B, V5.16B
	0x03D81638 B 0x3D816AC
	0x03D8163C ADRP X20, 0x658000
	0x03D81640 LDRB W8, [X20 + 0x78F]
	0x03D81644 CBNZ W8, 0x3D8165C
	0x03D81648 ADRP X0, 0x37A000
	0x03D8164C LDR X0, [X0 + 0xF08]
	0x03D81650 BL 0x1C16CF4
	0x03D81654 MOVZ W8, 0x1
	0x03D81658 STRB W8, [X20 + 0x78F]
	0x03D8165C ADRP X8, 0x37A000
	0x03D81660 LDR X8, [X8 + 0xF08]
	0x03D81664 LDR X30, [X31 + 0x18]
	0x03D81668 LDP D9, D8, [X31 + 0x8]
	0x03D8166C LDR X8, [X8]
	0x03D81670 LDR X8, [X8 + 0xB8]
	0x03D81674 LDR V0, [X8]
	0x03D81678 STR D0, [X19 + 0x478]
	0x03D8167C LDP X20, X19, [X31 + 0x20]
	0x03D81680 LDR V10, [X31], #0x30
	0x03D81684 RET
	0x03D81688 LDR V1, [X19 + 0x488]
	0x03D8168C ADD X20, X19, 0x478
	0x03D81690 FCMP S8, S1
	0x03D81694 B.LE 0x3D816D8
	0x03D81698 LDR V2, [X19 + 0x400]
	0x03D8169C LDR V4, [X19 + 0x44C]
	0x03D816A0 MOVZ W8, 0x7F800000
	0x03D816A4 FMOV S3, W8
	0x03D816A8 MOV V0.16B, V8.16B
	0x03D816AC MOV X0, X20
	0x03D816B0 MOV X1, X31
	0x03D816B4 BL 0x3C2BFF0
	0x03D816B8 MOV V8.16B, V0.16B
	0x03D816BC LDR V0, [X19 + 0x478]
	0x03D816C0 MOV X0, X19
	0x03D816C4 MOV X1, X31
	0x03D816C8 FABS S10, S0
	0x03D816CC BL 0x3DEC4BC
	0x03D816D0 FCMP S10, S0
	0x03D816D4 B.PL 0x3D816DC
	0x03D816D8 STR W31, [X20]
	0x03D816DC LDR V1, [X19 + 0x484]
	0x03D816E0 FCMP S9, S1
	0x03D816E4 B.PL 0x3D816F8
	0x03D816E8 LDR V2, [X19 + 0x400]
	0x03D816EC LDR V4, [X19 + 0x448]
	0x03D816F0 ADD X20, X19, 0x47C
	0x03D816F4 B 0x3D81710
	0x03D816F8 LDR V1, [X19 + 0x48C]
	0x03D816FC ADD X20, X19, 0x47C
	0x03D81700 FCMP S9, S1
	0x03D81704 B.LE 0x3D81748
	0x03D81708 LDR V2, [X19 + 0x400]
	0x03D8170C LDR V4, [X19 + 0x448]
	0x03D81710 MOVZ W8, 0x7F800000
	0x03D81714 FMOV S3, W8
	0x03D81718 MOV V0.16B, V9.16B
	0x03D8171C MOV X0, X20
	0x03D81720 MOV X1, X31
	0x03D81724 BL 0x3C2BFF0
	0x03D81728 MOV V9.16B, V0.16B
	0x03D8172C LDR V0, [X19 + 0x47C]
	0x03D81730 MOV X0, X19
	0x03D81734 MOV X1, X31
	0x03D81738 FABS S10, S0
	0x03D8173C BL 0x3DEC4BC
	0x03D81740 FCMP S10, S0
	0x03D81744 B.PL 0x3D8174C
	0x03D81748 STR W31, [X20]
	0x03D8174C MOV X0, X19
	0x03D81750 MOV V0.16B, V8.16B
	0x03D81754 MOV V1.16B, V9.16B
	0x03D81758 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x667000
	010 Move W8, [X21+3520]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {91}
	017 Move X0, 0x39D000
	018 Move X0, [X0+1592]
	019 Call 0x1C17CF4
	020 Move X0, 0x3E3000
	021 Move X0, [X0+184]
	022 Call 0x1C17CF4
	023 Move X0, 0x3E7000
	024 Move X0, [X0+936]
	025 Call 0x1C17CF4
	026 Move X0, 0x3E6000
	027 Move X0, [X0+1304]
	028 Call 0x1C17CF4
	029 Move X0, 0x39D000
	030 Move X0, [X0+1904]
	031 Call 0x1C17CF4
	032 Move X0, 0x39E000
	033 Move X0, [X0+152]
	034 Call 0x1C17CF4
	035 Move X0, 0x39D000
	036 Move X0, [X0+1912]
	037 Call 0x1C17CF4
	038 Move X0, 0x3E2000
	039 Move X0, [X0+2560]
	040 Call 0x1C17CF4
	041 Move X0, 0x39E000
	042 Move X0, [X0+160]
	043 Call 0x1C17CF4
	044 Move X0, 0x3E7000
	045 Move X0, [X0+944]
	046 Call 0x1C17CF4
	047 Move X0, 0x39D000
	048 Move X0, [X0+1920]
	049 Call 0x1C17CF4
	050 Move X0, 0x3E2000
	051 Move X0, [X0+2568]
	052 Call 0x1C17CF4
	053 Move X0, 0x39D000
	054 Move X0, [X0+1600]
	055 Call 0x1C17CF4
	056 Move X0, 0x39D000
	057 Move X0, [X0+1928]
	058 Call 0x1C17CF4
	059 Move X0, 0x39C000
	060 Move X0, [X0+3712]
	061 Call 0x1C17CF4
	062 Move X0, 0x39D000
	063 Move X0, [X0+3456]
	064 Call 0x1C17CF4
	065 Move X0, 0x3E7000
	066 Move X0, [X0+952]
	067 Call 0x1C17CF4
	068 Move X0, 0x3E7000
	069 Move X0, [X0+960]
	070 Call 0x1C17CF4
	071 Move X0, 0x3E7000
	072 Move X0, [X0+968]
	073 Call 0x1C17CF4
	074 Move X0, 0x3E7000
	075 Move X0, [X0+976]
	076 Call 0x1C17CF4
	077 Move X0, 0x3E7000
	078 Move X0, [X0+832]
	079 Call 0x1C17CF4
	080 Move X0, 0x3E7000
	081 Move X0, [X0+840]
	082 Call 0x1C17CF4
	083 Move X0, 0x3E7000
	084 Move X0, [X0+984]
	085 Call 0x1C17CF4
	086 Move X0, 0x3E7000
	087 Move X0, [X0+992]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X21+3520], W8
	091 Compare X20, 0
	092 JumpIfEqual {368}
	093 Move X8, [X20+144]
	094 Compare X8, 0
	095 JumpIfEqual {152}
	096 Move X0, X19
	097 Move X1, X31
	098 Call VisualElement.GetRootVisualContainer, X0
	099 Move [X19+984], X0
	100 Compare X0, 0
	101 JumpIfEqual {121}
	102 Move X8, 0x39D000
	103 Move X8, [X8+1600]
	104 Move X21, X0
	105 Move X0, [X8]
	106 Call 0x1C17F10
	107 Move X8, 0x3E7000
	108 Move X8, [X8+984]
	109 Move X1, X19
	110 Move X3, X31
	111 Move X22, X0
	112 Move X2, [X8]
	113 Call 0x2D0F824, X0, X1, X2
	114 Move X8, 0x39D000
	115 Move X8, [X8+1592]
	116 Move X0, X21
	117 Move X1, X22
	118 Move W2, W31
	119 Move X3, [X8]
	120 Call 0x21A2534, X0, X1, X2
	121 Move X0, X19
	122 Call ScrollView.ReadSingleLineHeight, X0
	123 Move X21, [X20+144]
	124 Compare X21, 0
	125 JumpIfEqual {368}
	126 Move X23, 0x39C000
	127 Move X8, [X21]
	128 Move X23, [X23+3712]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Move X1, [X23]
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move W2, 2
	140 Move X0, X21
	141 Call 0x1C5D788
	142 Move W9, [X10]
	143 Add W9, W9, 2
	144 Add X8, X8, W9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X21
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Compare W0, 0
	151 JumpIfEqual {161}
	152 Move X20, [X31+48]
	153 Move X19, [X31+56]
	154 Move X22, [X31+32]
	155 Move X21, [X31+40]
	156 Move X24, [X31+16]
	157 Move X23, [X31+24]
	158 Move X30, [X31+64]
	159 Move X25, [X31+72]
	160 Return 
	161 Move X8, 0x39E000
	162 Move X21, [X19+1080]
	163 Move X8, [X8+160]
	164 Move X0, [X8]
	165 Call 0x1C17F10
	166 Move X8, 0x3E7000
	167 Move X8, [X8+832]
	168 Move X1, X19
	169 Move X3, X31
	170 Move X22, X0
	171 Move X2, [X8]
	172 Call 0x2D0F824, X0, X1, X2
	173 Compare X21, 0
	174 JumpIfEqual {368}
	175 Move X8, 0x39E000
	176 Move X8, [X8+152]
	177 Move X0, X21
	178 Move X1, X22
	179 Move W2, W31
	180 Move X3, [X8]
	181 Call 0x21A2534, X0, X1, X2
	182 Move X8, [X19]
	183 Move X0, X19
	184 Move X9, [X8+1896]
	185 Move X1, [X8+1904]
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X8, 0x39D000
	188 Move X8, [X8+1920]
	189 Move X21, X0
	190 Move X8, [X8]
	191 Move X0, X8
	192 Call 0x1C17F10
	193 Move X8, 0x3E7000
	194 Move X8, [X8+976]
	195 Move X1, X19
	196 Move X3, X31
	197 Move X22, X0
	198 Move X2, [X8]
	199 Call 0x2D0F824, X0, X1, X2
	200 Compare X21, 0
	201 JumpIfEqual {368}
	202 Move X8, 0x39D000
	203 Move X8, [X8+1904]
	204 Move W2, 1
	205 Move X0, X21
	206 Move X1, X22
	207 Move X3, [X8]
	208 Call 0x21A2534, X0, X1, X2
	209 Move X8, [X19]
	210 Move X0, X19
	211 Move X9, [X8+1896]
	212 Move X1, [X8+1904]
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Move X8, 0x3E2000
	215 Move X8, [X8+2568]
	216 Move X21, X0
	217 Move X8, [X8]
	218 Move X0, X8
	219 Call 0x1C17F10
	220 Move X8, 0x3E7000
	221 Move X8, [X8+952]
	222 Move X1, X19
	223 Move X3, X31
	224 Move X22, X0
	225 Move X2, [X8]
	226 Call 0x2D0F824, X0, X1, X2
	227 Compare X21, 0
	228 JumpIfEqual {368}
	229 Move X8, 0x3E3000
	230 Move X8, [X8+184]
	231 Move X0, X21
	232 Move X1, X22
	233 Move W2, W31
	234 Move X3, [X8]
	235 Call 0x21A2534, X0, X1, X2
	236 Move X8, [X19]
	237 Move X0, X19
	238 Move X9, [X8+1896]
	239 Move X1, [X8+1904]
	240 NotImplemented "Instruction BLR not yet implemented."
	241 Move X24, 0x39D000
	242 Move X24, [X24+1928]
	243 Move X21, X0
	244 Move X8, [X24]
	245 Move X0, X8
	246 Call 0x1C17F10
	247 Move X8, 0x3E7000
	248 Move X8, [X8+840]
	249 Move X1, X19
	250 Move X3, X31
	251 Move X22, X0
	252 Move X2, [X8]
	253 Call 0x2D0F824, X0, X1, X2
	254 Compare X21, 0
	255 JumpIfEqual {368}
	256 Move X25, 0x39D000
	257 Move X25, [X25+1912]
	258 Move W2, 1
	259 Move X0, X21
	260 Move X1, X22
	261 Move X3, [X25]
	262 Call 0x21A2534, X0, X1, X2
	263 Move X8, [X19]
	264 Move X0, X19
	265 Move X9, [X8+1896]
	266 Move X1, [X8+1904]
	267 NotImplemented "Instruction BLR not yet implemented."
	268 Move X8, 0x3E7000
	269 Move X8, [X8+944]
	270 Move X21, X0
	271 Move X8, [X8]
	272 Move X0, X8
	273 Call 0x1C17F10
	274 Move X8, 0x3E7000
	275 Move X8, [X8+968]
	276 Move X1, X19
	277 Move X3, X31
	278 Move X22, X0
	279 Move X2, [X8]
	280 Call 0x2D0F824, X0, X1, X2
	281 Compare X21, 0
	282 JumpIfEqual {368}
	283 Move X8, 0x3E7000
	284 Move X8, [X8+936]
	285 Move X0, X21
	286 Move X1, X22
	287 Move W2, W31
	288 Move X3, [X8]
	289 Call 0x21A2534, X0, X1, X2
	290 Move X8, [X19]
	291 Move X0, X19
	292 Move X9, [X8+1896]
	293 Move X1, [X8+1904]
	294 NotImplemented "Instruction BLR not yet implemented."
	295 Move X8, 0x3E2000
	296 Move X8, [X8+2560]
	297 Move X21, X0
	298 Move X8, [X8]
	299 Move X0, X8
	300 Call 0x1C17F10
	301 Move X8, 0x3E7000
	302 Move X8, [X8+960]
	303 Move X1, X19
	304 Move X3, X31
	305 Move X22, X0
	306 Move X2, [X8]
	307 Call 0x2D0F824, X0, X1, X2
	308 Compare X21, 0
	309 JumpIfEqual {368}
	310 Move X8, 0x3E6000
	311 Move X8, [X8+1304]
	312 Move X0, X21
	313 Move X1, X22
	314 Move W2, W31
	315 Move X3, [X8]
	316 Call 0x21A2534, X0, X1, X2
	317 Move X20, [X20+144]
	318 Compare X20, 0
	319 JumpIfEqual {368}
	320 Move X8, [X20]
	321 Move X1, [X23]
	322 NotImplemented "Instruction LDRH not yet implemented."
	323 Compare X9, 0
	324 JumpIfEqual {331}
	325 Move X10, [X8+176]
	326 Add X10, X10, 8
	327 NotImplemented "Instruction LDUR not yet implemented."
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Subtract X9, X9, 1
	330 Add X10, X10, 16
	331 Move X0, X20
	332 Move W2, W31
	333 Call 0x1C5D788
	334 NotImplemented "Instruction LDRSW not yet implemented."
	335 Add X8, X8, X9
	336 Add X0, X8, 312
	337 Move X8, [X0]
	338 Move X1, [X0+8]
	339 Move X0, X20
	340 NotImplemented "Instruction BLR not yet implemented."
	341 Move X8, [X24]
	342 Move X20, X0
	343 Move X0, X8
	344 Call 0x1C17F10
	345 Move X8, 0x3E7000
	346 Move X8, [X8+992]
	347 Move X1, X19
	348 Move X3, X31
	349 Move X21, X0
	350 Move X2, [X8]
	351 Call 0x2D0F824, X0, X1, X2
	352 Compare X20, 0
	353 JumpIfEqual {368}
	354 Move X3, [X25]
	355 Move X0, X20
	356 Move X1, X21
	357 Move X20, [X31+48]
	358 Move X19, [X31+56]
	359 Move X22, [X31+32]
	360 Move X21, [X31+40]
	361 Move X24, [X31+16]
	362 Move X23, [X31+24]
	363 Move W2, 1
	364 Move X30, [X31+64]
	365 Move X25, [X31+72]
	366 Call 0x21A2534, X0, X1, X2
	367 Return 
	368 Call 0x1C17F20

Method: System.Void OnDetachFromPanel(UnityEngine.UIElements.DetachFromPanelEvent evt)

Disassembly:
	0x03D81868 BL 0x3EB1B50
	0x03D8186C FMUL S1, S11, S0
	0x03D81870 FMUL S0, S12, S0
	0x03D81874 STR S1, [X19 + 0x470]
	0x03D81878 STR S0, [X19 + 0x474]
	0x03D8187C FMUL S1, S8, S1
	0x03D81880 FMUL S0, S8, S0
	0x03D81884 FADD S10, S10, S1
	0x03D81888 FADD S9, S9, S0
	0x03D8188C MOV X0, X19
	0x03D81890 MOV X1, X31
	0x03D81894 BL 0x3DEC4BC
	0x03D81898 LDR V1, [X19 + 0x3F8]
	0x03D8189C LDR V2, [X19 + 0x470]
	0x03D818A0 FMUL S8, S0, S1
	0x03D818A4 FABS S0, S2
	0x03D818A8 FCMP S0, S8
	0x03D818AC B.LS 0x3D818E4
	0x03D818B0 LDR W8, [X19 + 0x404]
	0x03D818B4 CMP W8, 0x1
	0x03D818B8 B.NE 0x3D818E8
	0x03D818BC MOV X0, X19
	0x03D818C0 BL 0x3D7E19C
	0x03D818C4 LDR V1, [X19 + 0x480]
	0x03D818C8 FCMP S0, S1
	0x03D818CC B.MI 0x3D818E4
	0x03D818D0 MOV X0, X19
	0x03D818D4 BL 0x3D7E19C
	0x03D818D8 LDR V1, [X19 + 0x488]
	0x03D818DC FCMP S0, S1
	0x03D818E0 B.LE 0x3D818E8
	0x03D818E4 STR W31, [X19 + 0x470]
	0x03D818E8 LDR V0, [X19 + 0x474]
	0x03D818EC FABS S0, S0
	0x03D818F0 FCMP S0, S8
	0x03D818F4 B.LS 0x3D8192C
	0x03D818F8 LDR W8, [X19 + 0x404]
	0x03D818FC CMP W8, 0x1
	0x03D81900 B.NE 0x3D81930
	0x03D81904 MOV X0, X19
	0x03D81908 BL 0x3D7E19C
	0x03D8190C LDR V0, [X19 + 0x484]
	0x03D81910 FCMP S1, S0
	0x03D81914 B.MI 0x3D8192C
	0x03D81918 MOV X0, X19
	0x03D8191C BL 0x3D7E19C
	0x03D81920 LDR V0, [X19 + 0x48C]
	0x03D81924 FCMP S1, S0
	0x03D81928 B.LE 0x3D81930
	0x03D8192C STR W31, [X19 + 0x474]
	0x03D81930 MOV X0, X19
	0x03D81934 BL 0x3D7E19C
	0x03D81938 FADD S0, S10, S0
	0x03D8193C FADD S1, S9, S1
	0x03D81940 MOV X0, X19
	0x03D81944 LDP X20, X19, [X31 + 0x30]
	0x03D81948 LDR X30, [X31 + 0x28]
	0x03D8194C LDP D9, D8, [X31 + 0x18]
	0x03D81950 LDP D11, D10, [X31 + 0x8]
	0x03D81954 LDR V12, [X31], #0x40
	0x03D81958 B 0x3D7E1E4
	0x03D8195C LDRB W8, [X20 + 0x78F]
	0x03D81960 CBNZ W8, 0x3D81978
	0x03D81964 ADRP X0, 0x37A000
	0x03D81968 LDR X0, [X0 + 0xF08]
	0x03D8196C BL 0x1C16CF4
	0x03D81970 MOVZ W8, 0x1
	0x03D81974 STRB W8, [X20 + 0x78F]
	0x03D81978 ADRP X8, 0x37A000
	0x03D8197C LDR X8, [X8 + 0xF08]
	0x03D81980 LDR X8, [X8]
	0x03D81984 LDR X8, [X8 + 0xB8]
	0x03D81988 LDP S10, S9, [X8]
	0x03D8198C STR S10, [X19 + 0x470]
	0x03D81990 STR S9, [X19 + 0x474]
	0x03D81994 LDP X20, X19, [X31 + 0x30]
	0x03D81998 LDR X30, [X31 + 0x28]
	0x03D8199C LDP D9, D8, [X31 + 0x18]
	0x03D819A0 LDP D11, D10, [X31 + 0x8]
	0x03D819A4 LDR V12, [X31], #0x40
	0x03D819A8 RET
	0x03D819AC STP D9, D8, [X31 - 0x30]!
	0x03D819B0 STR X30, [X31 + 0x10]
	0x03D819B4 STP X20, X19, [X31 + 0x20]
	0x03D819B8 ADRP X20, 0x666000
	0x03D819BC LDRB W8, [X20 + 0xDC5]
	0x03D819C0 MOV X19, X0
	0x03D819C4 TBNZ X8, 0x0, 0x3D819DC
	0x03D819C8 ADRP X0, 0x39D000
	0x03D819CC LDR X0, [X0 + 0xAB8]
	0x03D819D0 BL 0x1C16CF4
	0x03D819D4 MOVZ W8, 0x1
	0x03D819D8 STRB W8, [X20 + 0xDC5]
	0x03D819DC MOV X0, X31
	0x03D819E0 BL 0x3C3C764
	0x03D819E4 LDR V1, [X19 + 0x440]
	0x03D819E8 MOV X0, X31
	0x03D819EC FSUB S0, S0, S1
	0x03D819F0 STR S0, [X19 + 0x448]
	0x03D819F4 BL 0x3C3C764
	0x03D819F8 MOV X0, X31
	0x03D819FC STR S0, [X19 + 0x440]
	0x03D81A00 BL 0x3C3C764
	0x03D81A04 LDR V1, [X19 + 0x444]
	0x03D81A08 MOV X0, X31
	0x03D81A0C FSUB S0, S0, S1
	0x03D81A10 STR S0, [X19 + 0x44C]
	0x03D81A14 BL 0x3C3C764
	0x03D81A18 MOV X0, X19
	0x03D81A1C STR S0, [X19 + 0x444]
	0x03D81A20 BL 0x3D8176C
	0x03D81A24 MOV X0, X19
	0x03D81A28 BL 0x3D815E0
	0x03D81A2C ADRP X20, 0x658000
	0x03D81A30 LDR V8, [X19 + 0x478]
	0x03D81A34 LDRB W8, [X20 + 0x78F]
	0x03D81A38 LDR V9, [X19 + 0x47C]
	0x03D81A3C CBNZ W8, 0x3D81A54
	0x03D81A40 ADRP X0, 0x37A000
	0x03D81A44 LDR X0, [X0 + 0xF08]
	0x03D81A48 BL 0x1C16CF4
	0x03D81A4C MOVZ W8, 0x1
	0x03D81A50 STRB W8, [X20 + 0x78F]
	0x03D81A54 ADRP X8, 0x37A000
	0x03D81A58 LDR X8, [X8 + 0xF08]
	0x03D81A5C LDR X8, [X8]
	0x03D81A60 LDR X8, [X8 + 0xB8]
	0x03D81A64 LDP S0, S1, [X8]
	0x03D81A68 ADRP X8, 0xFFFFFFFFFCD68000
	0x03D81A6C LDR V2, [X8 + 0xF20]
	0x03D81A70 FSUB S3, S8, S0
	0x03D81A74 FSUB S4, S9, S1
	0x03D81A78 FMUL S3, S3, S3
	0x03D81A7C FMUL S4, S4, S4
	0x03D81A80 FADD S3, S3, S4
	0x03D81A84 FCMP S3, S2
	0x03D81A88 B.PL 0x3D81B24
	0x03D81A8C LDR V3, [X19 + 0x470]
	0x03D81A90 LDR V4, [X19 + 0x474]
	0x03D81A94 FSUB S0, S3, S0
	0x03D81A98 FSUB S1, S4, S1
	0x03D81A9C FMUL S0, S0, S0
	0x03D81AA0 FMUL S1, S1, S1
	0x03D81AA4 FADD S0, S0, S1
	0x03D81AA8 FCMP S0, S2
	0x03D81AAC B.PL 0x3D81B24
	0x03D81AB0 LDR X20, [X19 + 0x4B0]
	0x03D81AB4 CBZ X20, 0x3D81B34
	0x03D81AB8 ADRP X10, 0x39D000
	0x03D81ABC LDR X8, [X20]
	0x03D81AC0 LDR X10, [X10 + 0xAB8]
	0x03D81AC4 ADD X19, X19, 0x440
	0x03D81AC8 LDRH W9, [X8 + 0x12E]
	0x03D81ACC LDR X1, [X10]
	0x03D81AD0 CBZ X9, 0x3D81AF4
	0x03D81AD4 LDR X10, [X8 + 0xB0]
	0x03D81AD8 ADD X10, X10, 0x8
	0x03D81ADC LDUR X11, [X10 - 0x8]
	0x03D81AE0 CMP X11, X1
	0x03D81AE4 B.EQ 0x3D81B04
	0x03D81AE8 SUBS X9, X9, 0x1
	0x03D81AEC ADD X10, X10, 0x10
	0x03D81AF0 B.NE 0x3D81ADC
	0x03D81AF4 MOVZ W2, 0x1
	0x03D81AF8 MOV X0, X20
	0x03D81AFC BL 0x1C5C788
	0x03D81B00 B 0x3D81B14
	0x03D81B04 LDR W9, [X10]
	0x03D81B08 ADD W9, W9, 0x1
	0x03D81B0C ADD X8, X8, W9, 0x4, SXTW
	0x03D81B10 ADD X0, X8, 0x138
	0x03D81B14 LDP X8, X1, [X0]
	0x03D81B18 MOV X0, X20
	0x03D81B1C BLR X8
	0x03D81B20 STP X31, X31, [X19]
	0x03D81B24 LDP X20, X19, [X31 + 0x20]
	0x03D81B28 LDR X30, [X31 + 0x10]
	0x03D81B2C LDP D9, D8, [X31], #0x30
	0x03D81B30 RET
	0x03D81B34 BL 0x1C16F20
	0x03D81B38 STR X30, [X31 - 0x30]!
	0x03D81B3C STP X22, X21, [X31 + 0x10]
	0x03D81B40 STP X20, X19, [X31 + 0x20]
	0x03D81B44 ADRP X21, 0x666000
	0x03D81B48 LDRB W8, [X21 + 0xDC6]
	0x03D81B4C MOV X20, X1
	0x03D81B50 MOV X19, X0
	0x03D81B54 TBNZ X8, 0x0, 0x3D81BB4
	0x03D81B58 ADRP X0, 0x39D000
	0x03D81B5C LDR X0, [X0 + 0xAB8]
	0x03D81B60 BL 0x1C16CF4
	0x03D81B64 ADRP X0, 0x3E6000
	0x03D81B68 LDR X0, [X0 + 0x410]
	0x03D81B6C BL 0x1C16CF4
	0x03D81B70 ADRP X0, 0x39D000
	0x03D81B74 LDR X0, [X0 + 0xCF8]
	0x03D81B78 BL 0x1C16CF4
	0x03D81B7C ADRP X0, 0x39D000
	0x03D81B80 LDR X0, [X0 + 0xD00]
	0x03D81B84 BL 0x1C16CF4
	0x03D81B88 ADRP X0, 0x3E2000
	0x03D81B8C LDR X0, [X0 + 0xBA8]
	0x03D81B90 BL 0x1C16CF4
	0x03D81B94 ADRP X0, 0x39B000
	0x03D81B98 LDR X0, [X0 + 0xE50]
	0x03D81B9C BL 0x1C16CF4
	0x03D81BA0 ADRP X0, 0x39B000
	0x03D81BA4 LDR X0, [X0 + 0xE58]
	0x03D81BA8 BL 0x1C16CF4
	0x03D81BAC MOVZ W8, 0x1
	0x03D81BB0 STRB W8, [X21 + 0xDC6]
	0x03D81BB4 CBZ X20, 0x3D81D68
	0x03D81BB8 ADRP X22, 0x39B000
	0x03D81BBC LDR X22, [X22 + 0xE58]
	0x03D81BC0 LDR X21, [X20 + 0xA0]
	0x03D81BC4 LDR X0, [X22]
	0x03D81BC8 LDR W8, [X0 + 0xE0]
	0x03D81BCC CBNZ W8, 0x3D81BD8
	0x03D81BD0 BL 0x1C16DFC
	0x03D81BD4 LDR X0, [X22]
	0x03D81BD8 LDR X8, [X0 + 0xB8]
	0x03D81BDC MOV X0, X21
	0x03D81BE0 MOV X2, X31
	0x03D81BE4 LDR X1, [X8]
	0x03D81BE8 BL 0x321BA08
	0x03D81BEC TBNZ X0, 0x0, 0x3D81D58
	0x03D81BF0 LDRB W8, [X20 + 0xA8]
	0x03D81BF4 CBZ W8, 0x3D81D58
	0x03D81BF8 ADRP X22, 0x39B000
	0x03D81BFC LDR X22, [X22 + 0xE50]
	0x03D81C00 LDR W21, [X20 + 0x9C]
	0x03D81C04 LDR X0, [X22]
	0x03D81C08 LDR W8, [X0 + 0xE0]
	0x03D81C0C CBNZ W8, 0x3D81C18
	0x03D81C10 BL 0x1C16DFC
	0x03D81C14 LDR X0, [X22]
	0x03D81C18 LDR X8, [X0 + 0xB8]
	0x03D81C1C LDR W8, [X8 + 0x4]
	0x03D81C20 CMP W21, W8
	0x03D81C24 B.EQ 0x3D81C48
	0x03D81C28 LDR W21, [X20 + 0x9C]
	0x03D81C2C MOV X0, X20
	0x03D81C30 MOV X1, X31
	0x03D81C34 BL 0x3D9C848
	0x03D81C38 MOV X2, X0
	0x03D81C3C MOV X0, X19
	0x03D81C40 MOV W1, W21
	0x03D81C44 BL 0x3D80FEC
	0x03D81C48 LDR X21, [X19 + 0x4B0]
	0x03D81C4C CBZ X21, 0x3D81CB4
	0x03D81C50 ADRP X10, 0x39D000
	0x03D81C54 LDR X8, [X21]
	0x03D81C58 LDR X10, [X10 + 0xAB8]
	0x03D81C5C LDRH W9, [X8 + 0x12E]
	0x03D81C60 LDR X1, [X10]
	0x03D81C64 CBZ X9, 0x3D81C88
	0x03D81C68 LDR X10, [X8 + 0xB0]
	0x03D81C6C ADD X10, X10, 0x8
	0x03D81C70 LDUR X11, [X10 - 0x8]
	0x03D81C74 CMP X11, X1
	0x03D81C78 B.EQ 0x3D81C98
	0x03D81C7C SUBS X9, X9, 0x1
	0x03D81C80 ADD X10, X10, 0x10
	0x03D81C84 B.NE 0x3D81C70
	0x03D81C88 MOVZ W2, 0x1
	0x03D81C8C MOV X0, X21
	0x03D81C90 BL 0x1C5C788
	0x03D81C94 B 0x3D81CA8
	0x03D81C98 LDR W9, [X10]
	0x03D81C9C ADD W9, W9, 0x1
	0x03D81CA0 ADD X8, X8, W9, 0x4, SXTW
	0x03D81CA4 ADD X0, X8, 0x138
	0x03D81CA8 LDP X8, X1, [X0]
	0x03D81CAC MOV X0, X21
	0x03D81CB0 BLR X8
	0x03D81CB4 LDR V0, [X19 + 0x470]
	0x03D81CB8 FABS S1, S0
	0x03D81CBC FMOV S0, 10
	0x03D81CC0 FCMP S1, S0
	0x03D81CC4 B.LE 0x3D81CD0
	0x03D81CC8 MOV W21, W31
	0x03D81CCC B 0x3D81CE0
	0x03D81CD0 LDR V1, [X19 + 0x474]
	0x03D81CD4 FABS S1, S1
	0x03D81CD8 FCMP S1, S0
	0x03D81CDC CSET W21, LE
	0x03D81CE0 MOVZ W8, 0x100
	0x03D81CE4 STRH W8, [X19 + 0x494]
	0x03D81CE8 LDP S0, S1, [X20 + 0xB4]
	0x03D81CEC MOV X0, X19
	0x03D81CF0 BL 0x3D81D6C
	0x03D81CF4 TBNZ X21, 0x0, 0x3D81D58
	0x03D81CF8 LDR X8, [X19]
	0x03D81CFC MOV X0, X19
	0x03D81D00 LDR X9, [X8 + 0x768]
	0x03D81D04 LDR X1, [X8 + 0x770]
	0x03D81D08 BLR X9
	0x03D81D0C LDR W1, [X20 + 0x9C]
	0x03D81D10 MOV X2, X31
	0x03D81D14 BL 0x3DBAC60
	0x03D81D18 LDR X8, [X19]
	0x03D81D1C MOV X0, X19
	0x03D81D20 LDR X9, [X8 + 0x768]
	0x03D81D24 LDR X1, [X8 + 0x770]
	0x03D81D28 BLR X9
	0x03D81D2C CBZ X0, 0x3D81D68
	0x03D81D30 MOV X1, X31
	0x03D81D34 BL 0x3DEC0CC
	0x03D81D38 LDR W1, [X20 + 0x9C]
	0x03D81D3C MOV X2, X31
	0x03D81D40 BL 0x3DBF888
	0x03D81D44 MOV X0, X20
	0x03D81D48 MOV X1, X31
	0x03D81D4C BL 0x3D9D950
	0x03D81D50 MOVZ W8, 0x1
	0x03D81D54 STRB W8, [X19 + 0x496]
	0x03D81D58 LDP X20, X19, [X31 + 0x20]
	0x03D81D5C LDP X22, X21, [X31 + 0x10]
	0x03D81D60 LDR X30, [X31], #0x30
	0x03D81D64 RET
	0x03D81D68 BL 0x1C16F20
	0x03D81D6C STR D10, [X31 - 0x30]!
	0x03D81D70 STP D9, D8, [X31 + 0x8]
	0x03D81D74 STR X30, [X31 + 0x18]
	0x03D81D78 STP X20, X19, [X31 + 0x20]
	0x03D81D7C MOV X19, X0
	0x03D81D80 STR S0, [X0 + 0x468]
	0x03D81D84 STR S1, [X0 + 0x46C]
	0x03D81D88 BL 0x3D7E19C
	0x03D81D8C STR S0, [X19 + 0x460]
	0x03D81D90 STR S1, [X19 + 0x464]
	0x03D81D94 ADRP X20, 0x658000
	0x03D81D98 LDRB W8, [X20 + 0x78F]
	0x03D81D9C CBNZ W8, 0x3D81DB4
	0x03D81DA0 ADRP X0, 0x37A000
	0x03D81DA4 LDR X0, [X0 + 0xF08]
	0x03D81DA8 BL 0x1C16CF4
	0x03D81DAC MOVZ W8, 0x1
	0x03D81DB0 STRB W8, [X20 + 0x78F]
	0x03D81DB4 ADRP X8, 0x37A000
	0x03D81DB8 LDR X8, [X8 + 0xF08]
	0x03D81DBC LDR X0, [X19 + 0x420]
	0x03D81DC0 LDR X8, [X8]
	0x03D81DC4 LDR X9, [X8 + 0xB8]
	0x03D81DC8 LDR V0, [X9]
	0x03D81DCC STR D0, [X19 + 0x470]
	0x03D81DD0 LDR X8, [X8 + 0xB8]
	0x03D81DD4 LDR V0, [X8]
	0x03D81DD8 STR D0, [X19 + 0x478]
	0x03D81DDC CBZ X0, 0x3D81EB0
	0x03D81DE0 MOV X1, X31
	0x03D81DE4 BL 0x3D83F34
	0x03D81DE8 LDR X0, [X19 + 0x420]
	0x03D81DEC CBZ X0, 0x3D81EB0
	0x03D81DF0 MOV X1, X31
	0x03D81DF4 MOV V8.16B, V0.16B
	0x03D81DF8 BL 0x3D83FE4
	0x03D81DFC LDR X0, [X19 + 0x428]
	0x03D81E00 FCMP S8, S0
	0x03D81E04 FCSEL S9, S8, S0, MI
	0x03D81E08 CBZ X0, 0x3D81EB0
	0x03D81E0C MOV X1, X31
	0x03D81E10 BL 0x3D83F34
	0x03D81E14 LDR X0, [X19 + 0x428]
	0x03D81E18 CBZ X0, 0x3D81EB0
	0x03D81E1C MOV X1, X31
	0x03D81E20 MOV V8.16B, V0.16B
	0x03D81E24 BL 0x3D83FE4
	0x03D81E28 LDR X0, [X19 + 0x420]
	0x03D81E2C FCMP S8, S0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x667000
	010 Move W8, [X21+3521]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {94}
	017 Move X0, 0x3E7000
	018 Move X0, [X0+1016]
	019 Call 0x1C17CF4
	020 Move X0, 0x3E2000
	021 Move X0, [X0+2608]
	022 Call 0x1C17CF4
	023 Move X0, 0x3E7000
	024 Move X0, [X0+1024]
	025 Call 0x1C17CF4
	026 Move X0, 0x3E2000
	027 Move X0, [X0+2616]
	028 Call 0x1C17CF4
	029 Move X0, 0x39D000
	030 Move X0, [X0+1936]
	031 Call 0x1C17CF4
	032 Move X0, 0x39E000
	033 Move X0, [X0+3368]
	034 Call 0x1C17CF4
	035 Move X0, 0x39D000
	036 Move X0, [X0+1944]
	037 Call 0x1C17CF4
	038 Move X0, 0x3E2000
	039 Move X0, [X0+2560]
	040 Call 0x1C17CF4
	041 Move X0, 0x39E000
	042 Move X0, [X0+160]
	043 Call 0x1C17CF4
	044 Move X0, 0x3E7000
	045 Move X0, [X0+944]
	046 Call 0x1C17CF4
	047 Move X0, 0x39D000
	048 Move X0, [X0+1920]
	049 Call 0x1C17CF4
	050 Move X0, 0x3E2000
	051 Move X0, [X0+2568]
	052 Call 0x1C17CF4
	053 Move X0, 0x39D000
	054 Move X0, [X0+1600]
	055 Call 0x1C17CF4
	056 Move X0, 0x39D000
	057 Move X0, [X0+1928]
	058 Call 0x1C17CF4
	059 Move X0, 0x39C000
	060 Move X0, [X0+3712]
	061 Call 0x1C17CF4
	062 Move X0, 0x39E000
	063 Move X0, [X0+2744]
	064 Call 0x1C17CF4
	065 Move X0, 0x3E3000
	066 Move X0, [X0+200]
	067 Call 0x1C17CF4
	068 Move X0, 0x3E7000
	069 Move X0, [X0+952]
	070 Call 0x1C17CF4
	071 Move X0, 0x3E7000
	072 Move X0, [X0+960]
	073 Call 0x1C17CF4
	074 Move X0, 0x3E7000
	075 Move X0, [X0+968]
	076 Call 0x1C17CF4
	077 Move X0, 0x3E7000
	078 Move X0, [X0+976]
	079 Call 0x1C17CF4
	080 Move X0, 0x3E7000
	081 Move X0, [X0+832]
	082 Call 0x1C17CF4
	083 Move X0, 0x3E7000
	084 Move X0, [X0+840]
	085 Call 0x1C17CF4
	086 Move X0, 0x3E7000
	087 Move X0, [X0+984]
	088 Call 0x1C17CF4
	089 Move X0, 0x3E7000
	090 Move X0, [X0+992]
	091 Call 0x1C17CF4
	092 Move W8, 1
	093 Move [X21+3521], W8
	094 Move X21, [X19+1112]
	095 Compare X21, 0
	096 JumpIfEqual {121}
	097 Move X10, 0x39E000
	098 Move X8, [X21]
	099 Move X10, [X10+2744]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Move X1, [X10]
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move W2, 1
	111 Move X0, X21
	112 Call 0x1C5D788
	113 Move W9, [X10]
	114 Add W9, W9, 1
	115 Add X8, X8, W9
	116 Add X0, X8, 312
	117 Move X8, [X0]
	118 Move X1, [X0+8]
	119 Move X0, X21
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move TEMP, 0
	122 Not TEMP
	123 Move W8, TEMP
	124 Move [X19+968], W8
	125 Compare X20, 0
	126 JumpIfEqual {398}
	127 Move X21, [X20+136]
	128 Compare X21, 0
	129 JumpIfEqual {182}
	130 Move X22, [X19+984]
	131 Compare X22, 0
	132 JumpIfEqual {155}
	133 Move X8, 0x39D000
	134 Move X8, [X8+1600]
	135 Move X0, [X8]
	136 Call 0x1C17F10
	137 Move X8, 0x3E7000
	138 Move X8, [X8+984]
	139 Move X1, X19
	140 Move X3, X31
	141 Move X21, X0
	142 Move X2, [X8]
	143 Call 0x2D0F824, X0, X1, X2
	144 Move X8, 0x3E7000
	145 Move X8, [X8+1016]
	146 Move X0, X22
	147 Move X1, X21
	148 Move W2, W31
	149 Move X3, [X8]
	150 Call 0x21A28B4, X0, X1, X2
	151 Move X21, [X20+136]
	152 Move [X19+984], X31
	153 Compare X21, 0
	154 JumpIfNotEqual {156}
	155 Move [X19+984], X31
	156 Move X23, 0x39C000
	157 Move X8, [X21]
	158 Move X23, [X23+3712]
	159 NotImplemented "Instruction LDRH not yet implemented."
	160 Move X1, [X23]
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move W2, 2
	170 Move X0, X21
	171 Call 0x1C5D788
	172 Move W9, [X10]
	173 Add W9, W9, 2
	174 Add X8, X8, W9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X1, [X0+8]
	178 Move X0, X21
	179 NotImplemented "Instruction BLR not yet implemented."
	180 Compare W0, 0
	181 JumpIfEqual {191}
	182 Move X20, [X31+48]
	183 Move X19, [X31+56]
	184 Move X22, [X31+32]
	185 Move X21, [X31+40]
	186 Move X24, [X31+16]
	187 Move X23, [X31+24]
	188 Move X30, [X31+64]
	189 Move X25, [X31+72]
	190 Return 
	191 Move X8, 0x39E000
	192 Move X21, [X19+1080]
	193 Move X8, [X8+160]
	194 Move X0, [X8]
	195 Call 0x1C17F10
	196 Move X8, 0x3E7000
	197 Move X8, [X8+832]
	198 Move X1, X19
	199 Move X3, X31
	200 Move X22, X0
	201 Move X2, [X8]
	202 Call 0x2D0F824, X0, X1, X2
	203 Compare X21, 0
	204 JumpIfEqual {398}
	205 Move X8, 0x39E000
	206 Move X8, [X8+3368]
	207 Move X0, X21
	208 Move X1, X22
	209 Move W2, W31
	210 Move X3, [X8]
	211 Call 0x21A28B4, X0, X1, X2
	212 Move X8, [X19]
	213 Move X0, X19
	214 Move X9, [X8+1896]
	215 Move X1, [X8+1904]
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X8, 0x39D000
	218 Move X8, [X8+1920]
	219 Move X21, X0
	220 Move X8, [X8]
	221 Move X0, X8
	222 Call 0x1C17F10
	223 Move X8, 0x3E7000
	224 Move X8, [X8+976]
	225 Move X1, X19
	226 Move X3, X31
	227 Move X22, X0
	228 Move X2, [X8]
	229 Call 0x2D0F824, X0, X1, X2
	230 Compare X21, 0
	231 JumpIfEqual {398}
	232 Move X8, 0x39D000
	233 Move X8, [X8+1936]
	234 Move W2, 1
	235 Move X0, X21
	236 Move X1, X22
	237 Move X3, [X8]
	238 Call 0x21A28B4, X0, X1, X2
	239 Move X8, [X19]
	240 Move X0, X19
	241 Move X9, [X8+1896]
	242 Move X1, [X8+1904]
	243 NotImplemented "Instruction BLR not yet implemented."
	244 Move X8, 0x3E2000
	245 Move X8, [X8+2568]
	246 Move X21, X0
	247 Move X8, [X8]
	248 Move X0, X8
	249 Call 0x1C17F10
	250 Move X8, 0x3E7000
	251 Move X8, [X8+952]
	252 Move X1, X19
	253 Move X3, X31
	254 Move X22, X0
	255 Move X2, [X8]
	256 Call 0x2D0F824, X0, X1, X2
	257 Compare X21, 0
	258 JumpIfEqual {398}
	259 Move X8, 0x3E2000
	260 Move X8, [X8+2608]
	261 Move X0, X21
	262 Move X1, X22
	263 Move W2, W31
	264 Move X3, [X8]
	265 Call 0x21A28B4, X0, X1, X2
	266 Move X8, [X19]
	267 Move X0, X19
	268 Move X9, [X8+1896]
	269 Move X1, [X8+1904]
	270 NotImplemented "Instruction BLR not yet implemented."
	271 Move X24, 0x39D000
	272 Move X24, [X24+1928]
	273 Move X21, X0
	274 Move X8, [X24]
	275 Move X0, X8
	276 Call 0x1C17F10
	277 Move X8, 0x3E7000
	278 Move X8, [X8+840]
	279 Move X1, X19
	280 Move X3, X31
	281 Move X22, X0
	282 Move X2, [X8]
	283 Call 0x2D0F824, X0, X1, X2
	284 Compare X21, 0
	285 JumpIfEqual {398}
	286 Move X25, 0x39D000
	287 Move X25, [X25+1944]
	288 Move W2, 1
	289 Move X0, X21
	290 Move X1, X22
	291 Move X3, [X25]
	292 Call 0x21A28B4, X0, X1, X2
	293 Move X8, [X19]
	294 Move X0, X19
	295 Move X9, [X8+1896]
	296 Move X1, [X8+1904]
	297 NotImplemented "Instruction BLR not yet implemented."
	298 Move X8, 0x3E7000
	299 Move X8, [X8+944]
	300 Move X21, X0
	301 Move X8, [X8]
	302 Move X0, X8
	303 Call 0x1C17F10
	304 Move X8, 0x3E7000
	305 Move X8, [X8+968]
	306 Move X1, X19
	307 Move X3, X31
	308 Move X22, X0
	309 Move X2, [X8]
	310 Call 0x2D0F824, X0, X1, X2
	311 Compare X21, 0
	312 JumpIfEqual {398}
	313 Move X8, 0x3E7000
	314 Move X8, [X8+1024]
	315 Move X0, X21
	316 Move X1, X22
	317 Move W2, W31
	318 Move X3, [X8]
	319 Call 0x21A28B4, X0, X1, X2
	320 Move X8, [X19]
	321 Move X0, X19
	322 Move X9, [X8+1896]
	323 Move X1, [X8+1904]
	324 NotImplemented "Instruction BLR not yet implemented."
	325 Move X8, 0x3E2000
	326 Move X8, [X8+2560]
	327 Move X21, X0
	328 Move X8, [X8]
	329 Move X0, X8
	330 Call 0x1C17F10
	331 Move X8, 0x3E7000
	332 Move X8, [X8+960]
	333 Move X1, X19
	334 Move X3, X31
	335 Move X22, X0
	336 Move X2, [X8]
	337 Call 0x2D0F824, X0, X1, X2
	338 Compare X21, 0
	339 JumpIfEqual {398}
	340 Move X8, 0x3E2000
	341 Move X8, [X8+2616]
	342 Move X0, X21
	343 Move X1, X22
	344 Move W2, W31
	345 Move X3, [X8]
	346 Call 0x21A28B4, X0, X1, X2
	347 Move X20, [X20+136]
	348 Compare X20, 0
	349 JumpIfEqual {398}
	350 Move X8, [X20]
	351 Move X1, [X23]
	352 NotImplemented "Instruction LDRH not yet implemented."
	353 Compare X9, 0
	354 JumpIfEqual {361}
	355 Move X10, [X8+176]
	356 Add X10, X10, 8
	357 NotImplemented "Instruction LDUR not yet implemented."
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Subtract X9, X9, 1
	360 Add X10, X10, 16
	361 Move X0, X20
	362 Move W2, W31
	363 Call 0x1C5D788
	364 NotImplemented "Instruction LDRSW not yet implemented."
	365 Add X8, X8, X9
	366 Add X0, X8, 312
	367 Move X8, [X0]
	368 Move X1, [X0+8]
	369 Move X0, X20
	370 NotImplemented "Instruction BLR not yet implemented."
	371 Move X8, [X24]
	372 Move X20, X0
	373 Move X0, X8
	374 Call 0x1C17F10
	375 Move X8, 0x3E7000
	376 Move X8, [X8+992]
	377 Move X1, X19
	378 Move X3, X31
	379 Move X21, X0
	380 Move X2, [X8]
	381 Call 0x2D0F824, X0, X1, X2
	382 Compare X20, 0
	383 JumpIfEqual {398}
	384 Move X3, [X25]
	385 Move X0, X20
	386 Move X1, X21
	387 Move X20, [X31+48]
	388 Move X19, [X31+56]
	389 Move X22, [X31+32]
	390 Move X21, [X31+40]
	391 Move X24, [X31+16]
	392 Move X23, [X31+24]
	393 Move W2, 1
	394 Move X30, [X31+64]
	395 Move X25, [X31+72]
	396 Call 0x21A28B4, X0, X1, X2
	397 Return 
	398 Call 0x1C17F20

Method: System.Void OnPointerCapture(UnityEngine.UIElements.PointerCaptureEvent evt)

Disassembly:
	0x03D81E3C CBZ X0, 0x3D81EB0
	0x03D81E40 MOV X1, X31
	0x03D81E44 BL 0x3D83F34
	0x03D81E48 LDR X0, [X19 + 0x420]
	0x03D81E4C CBZ X0, 0x3D81EB0
	0x03D81E50 MOV X1, X31
	0x03D81E54 MOV V8.16B, V0.16B
	0x03D81E58 BL 0x3D83FE4
	0x03D81E5C LDR X0, [X19 + 0x428]
	0x03D81E60 CBZ X0, 0x3D81EB0
	0x03D81E64 MOV X1, X31
	0x03D81E68 MOV V9.16B, V0.16B
	0x03D81E6C BL 0x3D83F34
	0x03D81E70 LDR X0, [X19 + 0x428]
	0x03D81E74 CBZ X0, 0x3D81EB0
	0x03D81E78 FCMP S8, S9
	0x03D81E7C MOV X1, X31
	0x03D81E80 MOV V10.16B, V0.16B
	0x03D81E84 FCSEL S8, S8, S9, GT
	0x03D81E88 BL 0x3D83FE4
	0x03D81E8C FCMP S10, S0
	0x03D81E90 FCSEL S0, S10, S0, GT
	0x03D81E94 STR S8, [X19 + 0x488]
	0x03D81E98 STR S0, [X19 + 0x48C]
	0x03D81E9C LDP X20, X19, [X31 + 0x20]
	0x03D81EA0 LDR X30, [X31 + 0x18]
	0x03D81EA4 LDP D9, D8, [X31 + 0x8]
	0x03D81EA8 LDR V10, [X31], #0x30
	0x03D81EAC RET
	0x03D81EB0 BL 0x1C16F20
	0x03D81EB4 STR X30, [X31 - 0x30]!
	0x03D81EB8 STP X22, X21, [X31 + 0x10]
	0x03D81EBC STP X20, X19, [X31 + 0x20]
	0x03D81EC0 ADRP X21, 0x666000
	0x03D81EC4 LDRB W8, [X21 + 0xDC7]
	0x03D81EC8 MOV X20, X1
	0x03D81ECC MOV X19, X0
	0x03D81ED0 TBNZ X8, 0x0, 0x3D81F18
	0x03D81ED4 ADRP X0, 0x3E6000
	0x03D81ED8 LDR X0, [X0 + 0x418]
	0x03D81EDC BL 0x1C16CF4
	0x03D81EE0 ADRP X0, 0x39D000
	0x03D81EE4 LDR X0, [X0 + 0x210]
	0x03D81EE8 BL 0x1C16CF4
	0x03D81EEC ADRP X0, 0x3E6000
	0x03D81EF0 LDR X0, [X0 + 0x420]
	0x03D81EF4 BL 0x1C16CF4
	0x03D81EF8 ADRP X0, 0x3E2000
	0x03D81EFC LDR X0, [X0 + 0xBB0]
	0x03D81F00 BL 0x1C16CF4
	0x03D81F04 ADRP X0, 0x39B000
	0x03D81F08 LDR X0, [X0 + 0xE58]
	0x03D81F0C BL 0x1C16CF4
	0x03D81F10 MOVZ W8, 0x1
	0x03D81F14 STRB W8, [X21 + 0xDC7]
	0x03D81F18 CBZ X20, 0x3D820A8
	0x03D81F1C ADRP X22, 0x39B000
	0x03D81F20 LDR X22, [X22 + 0xE58]
	0x03D81F24 LDR X21, [X20 + 0xA0]
	0x03D81F28 LDR X0, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x667000
	006 Move W8, [X21+3522]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x39E000
	014 Move X0, [X0+152]
	015 Call 0x1C17CF4
	016 Move X0, 0x39D000
	017 Move X0, [X0+1912]
	018 Call 0x1C17CF4
	019 Move X0, 0x39B000
	020 Move X0, [X0+2200]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3522], W8
	024 Compare X20, 0
	025 JumpIfEqual {71}
	026 Move X0, X20
	027 Move X1, X31
	028 Call EventBase.get_target, X0
	029 Compare X0, 0
	030 JumpIfEqual {42}
	031 Move X8, 0x39B000
	032 Move X8, [X8+2200]
	033 Move X9, [X0]
	034 Move X8, [X8]
	035 Move W11, [X9+304]
	036 Move W10, [X8+304]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, [X9+200]
	039 Add X9, X9, X10
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X19+1176], X31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 
	048 Move W8, 1
	049 Move [X19+1176], X0
	050 Move [X19+1173], W8
	051 Move X8, 0x39E000
	052 Move X1, [X19+1184]
	053 Move X8, [X8+152]
	054 Move W2, W31
	055 Move X3, [X8]
	056 Call 0x21A2534, X0, X1, X2
	057 Move X0, [X19+1176]
	058 Compare X0, 0
	059 JumpIfEqual {71}
	060 Move X8, 0x39D000
	061 Move X1, [X19+1192]
	062 Move X8, [X8+1912]
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move W2, W31
	066 Move X3, [X8]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call 0x21A2534, X0, X1, X2
	070 Return 
	071 Call 0x1C17F20

Method: System.Void OnPointerCaptureOut(UnityEngine.UIElements.PointerCaptureOutEvent evt)

Disassembly:
	0x03D81F2C LDR W8, [X0 + 0xE0]
	0x03D81F30 CBNZ W8, 0x3D81F3C
	0x03D81F34 BL 0x1C16DFC
	0x03D81F38 LDR X0, [X22]
	0x03D81F3C LDR X8, [X0 + 0xB8]
	0x03D81F40 MOV X0, X21
	0x03D81F44 MOV X2, X31
	0x03D81F48 LDR X1, [X8]
	0x03D81F4C BL 0x321BA08
	0x03D81F50 TBNZ X0, 0x0, 0x3D8206C
	0x03D81F54 LDRB W8, [X20 + 0xA8]
	0x03D81F58 CBZ W8, 0x3D8206C
	0x03D81F5C LDRB W8, [X19 + 0x495]
	0x03D81F60 CMP W8, 0x1
	0x03D81F64 B.NE 0x3D8206C
	0x03D81F68 LDRB W8, [X20 + 0x106]
	0x03D81F6C LDP S0, S1, [X20 + 0xB4]
	0x03D81F70 CBZ W8, 0x3D81F90
	0x03D81F74 MOV X0, X19
	0x03D81F78 STR S0, [X19 + 0x468]
	0x03D81F7C STR S1, [X19 + 0x46C]
	0x03D81F80 BL 0x3D7E19C
	0x03D81F84 STR S0, [X19 + 0x460]
	0x03D81F88 STR S1, [X19 + 0x464]
	0x03D81F8C B 0x3D8206C
	0x03D81F90 LDR W8, [X19 + 0x450]
	0x03D81F94 LDR V2, [X19 + 0x468]
	0x03D81F98 CMP W8, 0x1
	0x03D81F9C FSUB S2, S0, S2
	0x03D81FA0 B.EQ 0x3D81FB8
	0x03D81FA4 LDR V3, [X19 + 0x46C]
	0x03D81FA8 FSUB S3, S1, S3
	0x03D81FAC CBNZ W8, 0x3D81FBC
	0x03D81FB0 FMOV S2, W31
	0x03D81FB4 B 0x3D81FBC
	0x03D81FB8 FMOV S3, W31
	0x03D81FBC LDRB W8, [X19 + 0x496]
	0x03D81FC0 CBNZ W8, 0x3D81FE8
	0x03D81FC4 LDRB W8, [X19 + 0x494]
	0x03D81FC8 CBNZ W8, 0x3D81FE8
	0x03D81FCC FMUL S2, S2, S2
	0x03D81FD0 FMUL S3, S3, S3
	0x03D81FD4 MOVZ W8, 0x42C80000
	0x03D81FD8 FADD S2, S3, S2
	0x03D81FDC FMOV S3, W8
	0x03D81FE0 FCMP S2, S3
	0x03D81FE4 B.MI 0x3D8206C
	0x03D81FE8 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x667000
	006 Move W8, [X21+3523]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x39E000
	014 Move X0, [X0+3368]
	015 Call 0x1C17CF4
	016 Move X0, 0x39D000
	017 Move X0, [X0+1944]
	018 Call 0x1C17CF4
	019 Move X0, 0x3E2000
	020 Move X0, [X0+2672]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3523], W8
	024 Compare X20, 0
	025 JumpIfEqual {58}
	026 Move W21, [X20+144]
	027 Move X0, X20
	028 Move X1, X31
	029 Call EventBase.get_target, X0
	030 Move X2, X0
	031 Move X0, X19
	032 Move W1, W21
	033 Call ScrollView.ReleaseScrolling, X0, X1, X2
	034 Move X0, [X19+1176]
	035 Compare X0, 0
	036 JumpIfEqual {53}
	037 Move X8, 0x39E000
	038 Move X8, [X8+3368]
	039 Move X1, [X19+1184]
	040 Move W2, W31
	041 Move X3, [X8]
	042 Call 0x21A28B4, X0, X1, X2
	043 Move X0, [X19+1176]
	044 Compare X0, 0
	045 JumpIfEqual {58}
	046 Move X8, 0x39D000
	047 Move X8, [X8+1944]
	048 Move X1, [X19+1192]
	049 Move W2, W31
	050 Move X3, [X8]
	051 Call 0x21A28B4, X0, X1, X2
	052 Move [X19+1176], X31
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return 
	058 Call 0x1C17F20

Method: System.Void OnGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03D820BC STP X30, X21, [X31 + 0x40]
	0x03D820C0 STP X20, X19, [X31 + 0x50]
	0x03D820C4 ADRP X20, 0x665000
	0x03D820C8 LDRB W8, [X20 + 0xDCA]
	0x03D820CC MOV V8.16B, V1.16B
	0x03D820D0 MOV V9.16B, V0.16B
	0x03D820D4 MOV X19, X0
	0x03D820D8 TBNZ X8, 0x0, 0x3D820FC
	0x03D820DC ADRP X0, 0x39A000
	0x03D820E0 LDR X0, [X0 + 0x120]
	0x03D820E4 BL 0x1C16CF4
	0x03D820E8 ADRP X0, 0x39B000
	0x03D820EC LDR X0, [X0 + 0x678]
	0x03D820F0 BL 0x1C16CF4
	0x03D820F4 MOVZ W8, 0x1
	0x03D820F8 STRB W8, [X20 + 0xDCA]
	0x03D820FC LDR W8, [X19 + 0x404]
	0x03D82100 CMP W8, 0x1
	0x03D82104 B.EQ 0x3D82164
	0x03D82108 CMP W8, 0x2
	0x03D8210C B.NE 0x3D821D4
	0x03D82110 LDR V0, [X19 + 0x468]
	0x03D82114 LDR V1, [X19 + 0x460]
	0x03D82118 LDR V2, [X19 + 0x46C]
	0x03D8211C LDR V3, [X19 + 0x464]
	0x03D82120 LDR V4, [X19 + 0x480]
	0x03D82124 FSUB S0, S9, S0
	0x03D82128 LDR V5, [X19 + 0x484]
	0x03D8212C FSUB S2, S8, S2
	0x03D82130 FSUB S0, S1, S0
	0x03D82134 LDR V1, [X19 + 0x488]
	0x03D82138 FSUB S2, S3, S2
	0x03D8213C LDR V3, [X19 + 0x48C]
	0x03D82140 FCMP S0, S4
	0x03D82144 FCSEL S0, S0, S4, GT
	0x03D82148 FCMP S2, S5
	0x03D8214C FCSEL S2, S2, S5, GT
	0x03D82150 FCMP S0, S1
	0x03D82154 FCSEL S9, S0, S1, MI
	0x03D82158 FCMP S2, S3
	0x03D8215C FCSEL S8, S2, S3, MI
	0x03D82160 B 0x3D82404
	0x03D82164 LDR X0, [X19 + 0x418]
	0x03D82168 CBZ X0, 0x3D824A4
	0x03D8216C LDR V14, [X19 + 0x468]
	0x03D82170 LDR V15, [X19 + 0x46C]
	0x03D82174 LDR V10, [X19 + 0x460]
	0x03D82178 LDR V11, [X19 + 0x480]
	0x03D8217C MOV X1, X31
	0x03D82180 BL 0x3DE0EB8
	0x03D82184 CBZ X0, 0x3D824A4
	0x03D82188 ADRP X21, 0x39A000
	0x03D8218C LDR X8, [X0]
	0x03D82190 LDR X21, [X21 + 0x120]
	0x03D82194 MOV X20, X0
	0x03D82198 LDRH W9, [X8 + 0x12E]
	0x03D8219C LDR X1, [X21]
	0x03D821A0 CBZ X9, 0x3D821C4
	0x03D821A4 LDR X10, [X8 + 0xB0]
	0x03D821A8 ADD X10, X10, 0x8
	0x03D821AC LDUR X11, [X10 - 0x8]
	0x03D821B0 CMP X11, X1
	0x03D821B4 B.EQ 0x3D821F8
	0x03D821B8 SUBS X9, X9, 0x1
	0x03D821BC ADD X10, X10, 0x10
	0x03D821C0 B.NE 0x3D821AC
	0x03D821C4 MOVZ W2, 0x2C
	0x03D821C8 MOV X0, X20
	0x03D821CC BL 0x1C5C788
	0x03D821D0 B 0x3D82208
	0x03D821D4 LDR V0, [X19 + 0x468]
	0x03D821D8 LDR V1, [X19 + 0x46C]
	0x03D821DC LDR V2, [X19 + 0x460]
	0x03D821E0 LDR V3, [X19 + 0x464]
	0x03D821E4 FSUB S0, S9, S0
	0x03D821E8 FSUB S1, S8, S1
	0x03D821EC FSUB S9, S2, S0
	0x03D821F0 FSUB S8, S3, S1
	0x03D821F4 B 0x3D82404
	0x03D821F8 LDR W9, [X10]
	0x03D821FC ADD W9, W9, 0x2C
	0x03D82200 ADD X8, X8, W9, 0x4, SXTW
	0x03D82204 ADD X0, X8, 0x138
	0x03D82208 LDP X8, X1, [X0]
	0x03D8220C MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {91}
	008 NotImplemented "Instruction LDUR not yet implemented."
	009 NotImplemented "Instruction LDUR not yet implemented."
	010 Move X8, -53051392
	011 Move V2, [X8+3872]
	012 Move X21, X1
	013 Subtract V0, V0, V1
	014 NotImplemented "Instruction INVALID not yet implemented."
	015 NotImplemented "Instruction FADDP not yet implemented."
	016 NotImplemented "Instruction FCMP not yet implemented."
	017 Move W8, [X0+1104]
	018 Move W9, [X0+976]
	019 Move X19, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W20, 1
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 Return 
	029 Compare W9, 0
	030 JumpIfEqual {32}
	031 Move W20, W31
	032 Move X0, X19
	033 Call ScrollView.get_scrollableHeight, X0
	034 Move X8, -53047296
	035 Move V1, [X8+1040]
	036 Move W8, [X19+1104]
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 NotImplemented "Instruction CSET not yet implemented."
	039 Move W9, [X19+972]
	040 Compare W8, 0
	041 JumpIfEqual {44}
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W22, 1
	044 Compare W9, 0
	045 JumpIfEqual {47}
	046 Move W22, W31
	047 Move X0, X19
	048 Call ScrollView.get_scrollableWidth, X0
	049 Move X8, -53047296
	050 Move V1, [X8+1040]
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Move W9, [X19+968]
	054 Move W8, [X21+164]
	055 Add W31, W9, 1
	056 Subtract W8, W8, W9
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move TEMP, X20
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {71}
	062 Move W20, 1
	063 Move TEMP, X22
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {78}
	067 Move X0, X19
	068 Call ScrollView.get_isHorizontalScrollDisplayed, X0
	069 Move W22, W0
	070 Move [X19+968], W8
	071 Move X0, X19
	072 Call ScrollView.get_isVerticalScrollDisplayed, X0
	073 Move W20, W0
	074 Move TEMP, X22
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {67}
	078 Move W22, 1
	079 And W1, W22, 1
	080 And W2, W20, 1
	081 Move X0, X19
	082 Call ScrollView.UpdateScrollers, X0, X1, X2
	083 Move X0, X19
	084 Call ScrollView.UpdateContentViewTransform, X0
	085 Move X0, X19
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X30, [X31+48]
	091 Call 0x1C17F20

Method: System.Void ScheduleResetLayoutPass()

Disassembly:
	0x03D82210 BLR X8
	0x03D82214 LDR X0, [X19 + 0x418]
	0x03D82218 CBZ X0, 0x3D824A4
	0x03D8221C LDR V12, [X19 + 0x488]
	0x03D82220 MOV X1, X31
	0x03D82224 MOV V13.16B, V0.16B
	0x03D82228 BL 0x3DE0EB8
	0x03D8222C CBZ X0, 0x3D824A4
	0x03D82230 LDR X8, [X0]
	0x03D82234 LDR X1, [X21]
	0x03D82238 MOV X20, X0
	0x03D8223C LDRH W9, [X8 + 0x12E]
	0x03D82240 CBZ X9, 0x3D82264
	0x03D82244 LDR X10, [X8 + 0xB0]
	0x03D82248 ADD X10, X10, 0x8
	0x03D8224C LDUR X11, [X10 - 0x8]
	0x03D82250 CMP X11, X1
	0x03D82254 B.EQ 0x3D82274
	0x03D82258 SUBS X9, X9, 0x1
	0x03D8225C ADD X10, X10, 0x10
	0x03D82260 B.NE 0x3D8224C
	0x03D82264 MOVZ W2, 0x2C
	0x03D82268 MOV X0, X20
	0x03D8226C BL 0x1C5C788
	0x03D82270 B 0x3D82284
	0x03D82274 LDR W9, [X10]
	0x03D82278 ADD W9, W9, 0x2C
	0x03D8227C ADD X8, X8, W9, 0x4, SXTW
	0x03D82280 ADD X0, X8, 0x138
	0x03D82284 LDP X8, X1, [X0]
	0x03D82288 MOV X0, X20
	0x03D8228C FSUB S9, S9, S14
	0x03D82290 BLR X8
	0x03D82294 ADRP X8, 0x39B000
	0x03D82298 LDR X8, [X8 + 0x678]
	0x03D8229C MOV V14.16B, V0.16B
	0x03D822A0 LDR X0, [X8]
	0x03D822A4 LDR W8, [X0 + 0xE0]
	0x03D822A8 CBNZ W8, 0x3D822B0
	0x03D822AC BL 0x1C16DFC
	0x03D822B0 FSUB S3, S11, S13
	0x03D822B4 FADD S5, S12, S14
	0x03D822B8 MOV V0.16B, V9.16B
	0x03D822BC MOV V1.16B, V10.16B
	0x03D822C0 MOV V2.16B, V11.16B
	0x03D822C4 MOV V4.16B, V12.16B
	0x03D822C8 BL 0x3D813F4
	0x03D822CC LDR X0, [X19 + 0x418]
	0x03D822D0 CBZ X0, 0x3D824A4
	0x03D822D4 LDR V10, [X19 + 0x464]
	0x03D822D8 LDR V11, [X19 + 0x484]
	0x03D822DC MOV X1, X31
	0x03D822E0 MOV V9.16B, V0.16B
	0x03D822E4 BL 0x3DE0EB8
	0x03D822E8 CBZ X0, 0x3D824A4
	0x03D822EC LDR X8, [X0]
	0x03D822F0 LDR X1, [X21]
	0x03D822F4 MOV X20, X0
	0x03D822F8 LDRH W9, [X8 + 0x12E]
	0x03D822FC CBZ X9, 0x3D82320
	0x03D82300 LDR X10, [X8 + 0xB0]
	0x03D82304 ADD X10, X10, 0x8
	0x03D82308 LDUR X11, [X10 - 0x8]
	0x03D8230C CMP X11, X1
	0x03D82310 B.EQ 0x3D82330
	0x03D82314 SUBS X9, X9, 0x1
	0x03D82318 ADD X10, X10, 0x10
	0x03D8231C B.NE 0x3D82308
	0x03D82320 MOVZ W2, 0x13
	0x03D82324 MOV X0, X20
	0x03D82328 BL 0x1C5C788
	0x03D8232C B 0x3D82340
	0x03D82330 LDR W9, [X10]
	0x03D82334 ADD W9, W9, 0x13
	0x03D82338 ADD X8, X8, W9, 0x4, SXTW
	0x03D8233C ADD X0, X8, 0x138
	0x03D82340 LDP X8, X1, [X0]
	0x03D82344 MOV X0, X20
	0x03D82348 BLR X8
	0x03D8234C LDR X0, [X19 + 0x418]
	0x03D82350 CBZ X0, 0x3D824A4
	0x03D82354 LDR V12, [X19 + 0x48C]
	0x03D82358 MOV X1, X31
	0x03D8235C MOV V13.16B, V0.16B
	0x03D82360 BL 0x3DE0EB8
	0x03D82364 CBZ X0, 0x3D824A4
	0x03D82368 LDR X8, [X0]
	0x03D8236C LDR X1, [X21]
	0x03D82370 MOV X20, X0
	0x03D82374 FSUB S8, S8, S15
	0x03D82378 LDRH W9, [X8 + 0x12E]
	0x03D8237C CBZ X9, 0x3D823A0
	0x03D82380 LDR X10, [X8 + 0xB0]
	0x03D82384 ADD X10, X10, 0x8
	0x03D82388 LDUR X11, [X10 - 0x8]
	0x03D8238C CMP X11, X1
	0x03D82390 B.EQ 0x3D823B0
	0x03D82394 SUBS X9, X9, 0x1
	0x03D82398 ADD X10, X10, 0x10
	0x03D8239C B.NE 0x3D82388
	0x03D823A0 MOVZ W2, 0x13
	0x03D823A4 MOV X0, X20
	0x03D823A8 BL 0x1C5C788
	0x03D823AC B 0x3D823C0
	0x03D823B0 LDR W9, [X10]
	0x03D823B4 ADD W9, W9, 0x13
	0x03D823B8 ADD X8, X8, W9, 0x4, SXTW
	0x03D823BC ADD X0, X8, 0x138
	0x03D823C0 LDP X8, X1, [X0]
	0x03D823C4 MOV X0, X20
	0x03D823C8 BLR X8
	0x03D823CC FSUB S3, S11, S13
	0x03D823D0 FADD S5, S12, S0
	0x03D823D4 MOV V0.16B, V8.16B
	0x03D823D8 MOV V1.16B, V10.16B
	0x03D823DC MOV V2.16B, V11.16B
	0x03D823E0 MOV V4.16B, V12.16B
	0x03D823E4 BL 0x3D813F4
	0x03D823E8 MOV X0, X31
	0x03D823EC MOV V8.16B, V0.16B
	0x03D823F0 BL 0x3C3C764

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x666000
	006 Move W8, [X20+3524]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x373000
	013 Move X0, [X0+3696]
	014 Call 0x1C17CF4
	015 Move X0, 0x39D000
	016 Move X0, [X0+2744]
	017 Call 0x1C17CF4
	018 Move X0, 0x39A000
	019 Move X0, [X0+1664]
	020 Call 0x1C17CF4
	021 Move X0, 0x3E6000
	022 Move X0, [X0+1032]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3524], W8
	026 Move X20, [X19+1112]
	027 Compare X20, 0
	028 JumpIfEqual {45}
	029 Move X21, 0x39D000
	030 Move X8, [X20]
	031 Move X21, [X21+2744]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X21]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 1
	043 Move X0, X20
	044 Call 0x1C5D788
	045 Move X0, X19
	046 Move X1, X31
	047 Call VisualElement.get_schedule, X0
	048 Move X8, 0x373000
	049 Move X8, [X8+3696]
	050 Move X20, X0
	051 Move X8, [X8]
	052 Move X0, X8
	053 Call 0x1C17F10
	054 Move X8, 0x3E6000
	055 Move X8, [X8+1032]
	056 Move X1, X19
	057 Move X3, X31
	058 Move X21, X0
	059 Move X2, [X8]
	060 Call Action..ctor, X0, X1, X2
	061 Compare X20, 0
	062 JumpIfEqual {130}
	063 Move X10, 0x39A000
	064 Move X8, [X20]
	065 Move X10, [X10+1664]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Move X1, [X10]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move W2, 1
	077 Move X0, X20
	078 Call 0x1C5D788
	079 Move W9, [X10]
	080 Add W9, W9, 1
	081 Add X8, X8, W9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X1, [X0+8]
	085 Move X0, X20
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X19, [X19+1112]
	088 Compare X19, 0
	089 JumpIfEqual {130}
	090 Move X8, [X19]
	091 Move X1, [X21]
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Compare X9, 0
	094 JumpIfEqual {101}
	095 Move X10, [X8+176]
	096 Add X10, X10, 8
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Subtract X9, X9, 1
	100 Add X10, X10, 16
	101 Move X0, X19
	102 Move W2, W31
	103 Call 0x1C5D788
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Add X8, X8, X9
	106 Add X0, X8, 312
	107 Move X2, [X0]
	108 Move X1, [X0+8]
	109 Move X0, X19
	110 Move X20, [X31+16]
	111 Move X19, [X31+24]
	112 Move X30, [X31+32]
	113 Move X21, [X31+40]
	114 CallNoReturn X2
	115 Move W9, [X10]
	116 Add W9, W9, 1
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X2, [X0+8]
	121 Move X0, X20
	122 Move X1, X21
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move [X19+1112], X0
	125 Move X20, [X31+16]
	126 Move X19, [X31+24]
	127 Move X30, [X31+32]
	128 Move X21, [X31+40]
	129 Return 
	130 Call 0x1C17F20

Method: System.Void ResetLayoutPass()

Disassembly:
	0x03D81E30 FCSEL S0, S8, S0, MI
	0x03D81E34 STR S9, [X19 + 0x480]
	0x03D81E38 STR S0, [X19 + 0x484]

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+968], W8
	005 Return 

Method: System.Single ComputeElasticOffset(System.Single deltaPointer, System.Single initialScrollOffset, System.Single lowLimit, System.Single hardLowLimit, System.Single highLimit, System.Single hardHighLimit)

Disassembly:
	0x03D823F4 MOV X0, X31
	0x03D823F8 STR S0, [X19 + 0x440]
	0x03D823FC BL 0x3C3C764
	0x03D82400 STR S0, [X19 + 0x444]
	0x03D82404 LDR W8, [X19 + 0x450]
	0x03D82408 CMP W8, 0x1
	0x03D8240C B.EQ 0x3D8241C
	0x03D82410 CBNZ W8, 0x3D82420
	0x03D82414 LDR V9, [X19 + 0x480]
	0x03D82418 B 0x3D82420
	0x03D8241C LDR V8, [X19 + 0x484]
	0x03D82420 MOV X0, X19
	0x03D82424 BL 0x3D7E19C
	0x03D82428 ADRP X8, 0xFFFFFFFFFCD67000
	0x03D8242C LDR V2, [X8 + 0xF20]
	0x03D82430 FSUB S0, S0, S9
	0x03D82434 FSUB S1, S1, S8
	0x03D82438 FMUL S0, S0, S0
	0x03D8243C FMUL S1, S1, S1
	0x03D82440 FADD S0, S0, S1
	0x03D82444 FCMP S0, S2
	0x03D82448 B.MI 0x3D82468
	0x03D8244C MOV X0, X19
	0x03D82450 MOV V0.16B, V9.16B
	0x03D82454 MOV V1.16B, V8.16B
	0x03D82458 BL 0x3D825B0
	0x03D8245C ORN W8, W31, W0, 0x0
	0x03D82460 AND W0, W8, 0x1
	0x03D82464 B 0x3D82488
	0x03D82468 LDRB W8, [X19 + 0x494]
	0x03D8246C CBZ W8, 0x3D82484
	0x03D82470 LDR W8, [X19 + 0x408]
	0x03D82474 CMP W8, 0x2
	0x03D82478 MOVZ W8, 0x1
	0x03D8247C CINC W0, W8, NE
	0x03D82480 B 0x3D82488
	0x03D82484 MOVZ W0, 0x1
	0x03D82488 LDP X20, X19, [X31 + 0x50]
	0x03D8248C LDP X30, X21, [X31 + 0x40]
	0x03D82490 LDP D9, D8, [X31 + 0x30]
	0x03D82494 LDP D11, D10, [X31 + 0x20]
	0x03D82498 LDP D13, D12, [X31 + 0x10]
	0x03D8249C LDP D15, D14, [X31], #0x60
	0x03D824A0 RET
	0x03D824A4 BL 0x1C16F20
	0x03D824A8 STP X30, X21, [X31 - 0x20]!
	0x03D824AC STP X20, X19, [X31 + 0x10]
	0x03D824B0 ADRP X21, 0x665000
	0x03D824B4 LDRB W8, [X21 + 0xDC8]
	0x03D824B8 MOV X20, X1
	0x03D824BC MOV X19, X0
	0x03D824C0 TBNZ X8, 0x0, 0x3D824D8
	0x03D824C4 ADRP X0, 0x3E0000
	0x03D824C8 LDR X0, [X0 + 0xA68]
	0x03D824CC BL 0x1C16CF4
	0x03D824D0 MOVZ W8, 0x1
	0x03D824D4 STRB W8, [X21 + 0xDC8]
	0x03D824D8 CBZ X20, 0x3D82504
	0x03D824DC LDR W21, [X20 + 0x9C]
	0x03D824E0 MOV X0, X20
	0x03D824E4 MOV X1, X31

ISIL:
	001 Move X8, -53047296
	002 Move V6, [X8+304]
	003 Multiply S7, S3, S6
	004 NotImplemented "Instruction FCMP not yet implemented."
	005 Multiply S6, S5, S6
	006 NotImplemented "Instruction FCSEL not yet implemented."
	007 NotImplemented "Instruction FCMP not yet implemented."
	008 NotImplemented "Instruction FCSEL not yet implemented."
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 NotImplemented "Instruction FCMP not yet implemented."
	011 Subtract S6, S2, S3
	012 Subtract S1, S2, S1
	013 Move S7, 1
	014 NotImplemented "Instruction FDIV not yet implemented."
	015 Multiply S6, S6, S1
	016 Subtract S1, S7, S1
	017 NotImplemented "Instruction FDIV not yet implemented."
	018 Add S0, S1, S0
	019 Move V1, V2
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 Subtract S6, S5, S4
	023 Subtract S1, S1, S4
	024 Move S7, 1
	025 NotImplemented "Instruction FDIV not yet implemented."
	026 Multiply S6, S6, S1
	027 Subtract S1, S7, S1
	028 NotImplemented "Instruction FDIV not yet implemented."
	029 Subtract S0, S0, S1
	030 Move V1, V4
	031 Subtract S0, S1, S0
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 Subtract S0, S2, S0
	034 Subtract S1, S2, S3
	035 Move S3, 1
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Subtract S0, S0, S4
	038 Subtract S1, S5, S4
	039 Move S3, -1
	040 Move V2, V4
	041 Move X8, -53051392
	042 Move V4, [X8+3996]
	043 NotImplemented "Instruction FABS not yet implemented."
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 Add S4, S1, S0
	046 NotImplemented "Instruction FDIV not yet implemented."
	047 Multiply S0, S1, S0
	048 Multiply S0, S3, S0
	049 Subtract S0, S2, S0
	050 Return V0
	051 Move V0, V2
	052 Return V0

Method: System.Void ComputeInitialSpringBackVelocity()

Disassembly:
	0x03D824E8 BL 0x3D9C848
	0x03D824EC MOV X2, X0
	0x03D824F0 MOV X0, X19
	0x03D824F4 LDP X20, X19, [X31 + 0x10]
	0x03D824F8 MOV W1, W21
	0x03D824FC LDP X30, X21, [X31], #0x20
	0x03D82500 B 0x3D80FEC
	0x03D82504 BL 0x1C16F20
	0x03D82508 STP X30, X21, [X31 - 0x20]!
	0x03D8250C STP X20, X19, [X31 + 0x10]
	0x03D82510 ADRP X21, 0x665000
	0x03D82514 LDRB W8, [X21 + 0xDC9]
	0x03D82518 MOV X19, X1
	0x03D8251C MOV X20, X0
	0x03D82520 TBNZ X8, 0x0, 0x3D82538
	0x03D82524 ADRP X0, 0x39C000
	0x03D82528 LDR X0, [X0 + 0xD20]
	0x03D8252C BL 0x1C16CF4
	0x03D82530 MOVZ W8, 0x1
	0x03D82534 STRB W8, [X21 + 0xDC9]
	0x03D82538 CBZ X19, 0x3D825AC
	0x03D8253C LDR W21, [X19 + 0x9C]
	0x03D82540 MOV X0, X19
	0x03D82544 MOV X1, X31
	0x03D82548 BL 0x3D9C848
	0x03D8254C MOV X2, X0
	0x03D82550 MOV X0, X20
	0x03D82554 MOV W1, W21
	0x03D82558 BL 0x3D80FEC
	0x03D8255C TBZ X0, 0x0, 0x3D825A0
	0x03D82560 LDR X8, [X20]
	0x03D82564 MOV X0, X20
	0x03D82568 LDR X9, [X8 + 0x768]
	0x03D8256C LDR X1, [X8 + 0x770]
	0x03D82570 BLR X9
	0x03D82574 CBZ X0, 0x3D825AC
	0x03D82578 MOV X1, X31
	0x03D8257C BL 0x3DEC0CC
	0x03D82580 LDR W1, [X19 + 0x9C]
	0x03D82584 MOV X2, X31
	0x03D82588 BL 0x3DBF888
	0x03D8258C MOV X0, X19
	0x03D82590 LDP X20, X19, [X31 + 0x10]
	0x03D82594 MOV X1, X31
	0x03D82598 LDP X30, X21, [X31], #0x20
	0x03D8259C B 0x3D9D950
	0x03D825A0 LDP X20, X19, [X31 + 0x10]
	0x03D825A4 LDP X30, X21, [X31], #0x20
	0x03D825A8 RET
	0x03D825AC BL 0x1C16F20
	0x03D825B0 SUB X31, X31, 0x60
	0x03D825B4 STP D9, D8, [X31 + 0x30]
	0x03D825B8 STP X30, X21, [X31 + 0x40]
	0x03D825BC STP X20, X19, [X31 + 0x50]
	0x03D825C0 MOV V4.16B, V0.16B
	0x03D825C4 LDR V0, [X0 + 0x3F4]
	0x03D825C8 MOV V3.16B, V1.16B
	0x03D825CC MOV X19, X0
	0x03D825D0 MOVZ W8, 0x1
	0x03D825D4 FCMP S0, 0x0
	0x03D825D8 ADRP X20, 0xFFFFFFFFFCD67000
	0x03D825DC STRB W8, [X0 + 0x494]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+1028]
	007 Move X19, X0
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X0, X19
	010 Call ScrollView.get_scrollOffset, X0
	011 Move V9, [X19+1152]
	012 Move X0, X19
	013 Move V8, V0
	014 Call ScrollView.get_scrollOffset, X0
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Subtract S0, S9, S0
	017 Move X20, 0x658000
	018 Move W8, [X20+1935]
	019 Compare W8, 0
	020 JumpIfNotEqual {26}
	021 Move X0, 0x37A000
	022 Move X0, [X0+3848]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1935], W8
	026 Move X8, 0x37A000
	027 Move X8, [X8+3848]
	028 Move X8, [X8]
	029 Move X8, [X8+184]
	030 Move S1, [X8]
	031 Move S0, [X8+4]
	032 Move [X19+1144], S1
	033 Move V8, [X19+1160]
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move S0, W31
	036 Move X0, X19
	037 Call ScrollView.get_scrollOffset, X0
	038 Subtract S0, S8, S0
	039 Move X0, X19
	040 Move [X19+1144], S0
	041 Call ScrollView.get_scrollOffset, X0
	042 Move V9, [X19+1156]
	043 Move X0, X19
	044 Move V8, V1
	045 Call ScrollView.get_scrollOffset, X0
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Subtract S0, S9, S1
	048 Move V8, [X19+1164]
	049 Move S0, W31
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Move X0, X19
	052 Call ScrollView.get_scrollOffset, X0
	053 Subtract S0, S8, S1
	054 Move [X19+1148], S0
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X30, [X31+16]
	058 Move D9, [X31+48]
	059 Move D8, [X31+56]
	060 Return 

Method: System.Void SpringBack()

Disassembly:
	0x03D825E0 B.LE 0x3D82720
	0x03D825E4 LDR V1, [X19 + 0x480]
	0x03D825E8 LDR V2, [X19 + 0x484]
	0x03D825EC LDR V0, [X20 + 0xF20]
	0x03D825F0 FSUB S1, S4, S1
	0x03D825F4 FSUB S2, S3, S2
	0x03D825F8 FMUL S1, S1, S1
	0x03D825FC FMUL S2, S2, S2
	0x03D82600 FADD S1, S1, S2
	0x03D82604 FCMP S1, S0
	0x03D82608 B.MI 0x3D82754
	0x03D8260C LDR V1, [X19 + 0x488]
	0x03D82610 LDR V2, [X19 + 0x48C]
	0x03D82614 FSUB S1, S4, S1
	0x03D82618 FSUB S2, S3, S2
	0x03D8261C FMUL S1, S1, S1
	0x03D82620 FMUL S2, S2, S2
	0x03D82624 FADD S1, S1, S2
	0x03D82628 FCMP S1, S0
	0x03D8262C B.MI 0x3D82754
	0x03D82630 LDR V0, [X19 + 0x490]
	0x03D82634 STP V4, V3, [X31 + 0x10]
	0x03D82638 FCMP S0, 0x0
	0x03D8263C B.LE 0x3D826B4
	0x03D82640 MOV X0, X31
	0x03D82644 BL 0x3C3C764
	0x03D82648 LDR V1, [X19 + 0x490]
	0x03D8264C ADRP X21, 0x657000
	0x03D82650 LDRB W8, [X21 + 0x78F]
	0x03D82654 LDR V8, [X19 + 0x470]
	0x03D82658 FSUB S9, S0, S1
	0x03D8265C CBNZ W8, 0x3D82674
	0x03D82660 ADRP X0, 0x379000
	0x03D82664 LDR X0, [X0 + 0xF08]
	0x03D82668 BL 0x1C16CF4
	0x03D8266C MOVZ W8, 0x1
	0x03D82670 STRB W8, [X21 + 0x78F]
	0x03D82674 ADRP X8, 0x379000
	0x03D82678 LDR X8, [X8 + 0xF08]
	0x03D8267C FMOV S0, 10
	0x03D82680 FMOV S1, 1
	0x03D82684 FMUL S0, S9, S0
	0x03D82688 LDR X8, [X8]
	0x03D8268C FMIN S1, S0, S1
	0x03D82690 FCMP S0, 0x0
	0x03D82694 FMOV S0, W31
	0x03D82698 LDR X8, [X8 + 0xB8]
	0x03D8269C FCSEL S0, S1, S0, PL
	0x03D826A0 LDR V2, [X8]
	0x03D826A4 FSUB V1.2S, V2.2S, V8.2S
	0x00000000 INVALID
	0x03D826AC FADD V0.2S, V8.2S, V0.2S
	0x03D826B0 STR D0, [X19 + 0x470]
	0x03D826B4 MOV X0, X31
	0x03D826B8 BL 0x3C3C764
	0x03D826BC LDR V1, [X19 + 0x3FC]
	0x03D826C0 MOV X0, X19
	0x03D826C4 STR S0, [X19 + 0x490]
	0x03D826C8 STR V1, [X31]
	0x03D826CC BL 0x3D7E19C
	0x03D826D0 LDP V3, V2, [X31]
	0x03D826D4 LDR V4, [X31 + 0x2]
	0x03D826D8 MOV V0.S[1], V1.S[0]
	0x03D826DC FMOV S1, 10
	0x03D826E0 MOV V2.S[1], V4.S[0]
	0x03D826E4 FMUL S1, S3, S1
	0x03D826E8 FSUB V0.2S, V2.2S, V0.2S
	0x03D826EC FMOV S2, 1
	0x03D826F0 FMIN S2, S1, S2
	0x03D826F4 FCMP S1, 0x0
	0x03D826F8 LDR V1, [X19 + 0x470]
	0x03D826FC UNIMPLEMENTED
	0x00000000 INVALID
	0x03D82704 FMOV S3, W31
	0x03D82708 FCSEL S2, S2, S3, PL
	0x03D8270C FSUB V0.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x03D82714 FADD V0.2S, V1.2S, V0.2S
	0x03D82718 STR D0, [X19 + 0x470]
	0x03D8271C B 0x3D82724
	0x03D82720 STP V4, V3, [X31 + 0x10]
	0x03D82724 MOV X0, X19
	0x03D82728 BL 0x3D7E19C
	0x03D8272C LDP V4, V3, [X31 + 0x10]
	0x03D82730 LDR V2, [X20 + 0xF20]
	0x03D82734 FSUB S0, S0, S4
	0x03D82738 FSUB S1, S1, S3
	0x03D8273C FMUL S0, S0, S0
	0x03D82740 FMUL S1, S1, S1
	0x03D82744 FADD S0, S0, S1
	0x03D82748 FCMP S0, S2
	0x03D8274C CSET W20, PL
	0x03D82750 B 0x3D82798
	0x03D82754 ADRP X20, 0x657000
	0x03D82758 LDRB W8, [X20 + 0x78F]
	0x03D8275C CBNZ W8, 0x3D8277C
	0x03D82760 ADRP X0, 0x379000
	0x03D82764 LDR X0, [X0 + 0xF08]
	0x03D82768 STP V4, V3, [X31 + 0x10]

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W8, [X0+1028]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X19
	011 Call ScrollView.get_scrollOffset, X0
	012 Move V5, [X19+1152]
	013 Move V8, V0
	014 Move V9, V1
	015 NotImplemented "Instruction FCMP not yet implemented."
	016 Move V2, [X19+1024]
	017 Move V4, [X19+1100]
	018 Move W8, 0x7F800000
	019 Add X20, X19, 1144
	020 Move S3, W8
	021 Move V0, V8
	022 Move V1, V5
	023 Move X20, 0x658000
	024 Move W8, [X20+1935]
	025 Compare W8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, 0x37A000
	028 Move X0, [X0+3848]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+1935], W8
	032 Move X8, 0x37A000
	033 Move X8, [X8+3848]
	034 Move X30, [X31+24]
	035 Move D9, [X31+8]
	036 Move D8, [X31+16]
	037 Move X8, [X8]
	038 Move X8, [X8+184]
	039 Move V0, [X8]
	040 Move [X19+1144], D0
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move V10, [X31+48]
	044 Return 
	045 Move V1, [X19+1160]
	046 Add X20, X19, 1144
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move V2, [X19+1024]
	049 Move V4, [X19+1100]
	050 Move W8, 0x7F800000
	051 Move S3, W8
	052 Move V0, V8
	053 Move X0, X20
	054 Move X1, X31
	055 Call Mathf.SmoothDamp, V0, V1, X0, V2, V3, V4
	056 Move V8, V0
	057 Move V0, [X19+1144]
	058 Move X0, X19
	059 Move X1, X31
	060 NotImplemented "Instruction FABS not yet implemented."
	061 Call VisualElement.get_scaledPixelsPerPoint, X0
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move [X20], W31
	064 Move V1, [X19+1156]
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Move V2, [X19+1024]
	067 Move V4, [X19+1096]
	068 Add X20, X19, 1148
	069 Move V1, [X19+1164]
	070 Add X20, X19, 1148
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move V2, [X19+1024]
	073 Move V4, [X19+1096]
	074 Move W8, 0x7F800000
	075 Move S3, W8
	076 Move V0, V9
	077 Move X0, X20
	078 Move X1, X31
	079 Call Mathf.SmoothDamp, V0, V1, X0, V2, V3, V4
	080 Move V9, V0
	081 Move V0, [X19+1148]
	082 Move X0, X19
	083 Move X1, X31
	084 NotImplemented "Instruction FABS not yet implemented."
	085 Call VisualElement.get_scaledPixelsPerPoint, X0
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 Move [X20], W31
	088 Move X0, X19
	089 Move V0, V8
	090 Move V1, V9
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X30, [X31+24]
	094 Move D9, [X31+8]
	095 Move D8, [X31+16]
	096 Move V10, [X31+48]
	097 Call ScrollView.set_scrollOffset, X0, X1
	098 Return 

Method: System.Void ApplyScrollInertia()

Disassembly:
	0x03D8276C BL 0x1C16CF4
	0x03D82770 LDP V4, V3, [X31 + 0x10]
	0x03D82774 MOVZ W8, 0x1
	0x03D82778 STRB W8, [X20 + 0x78F]
	0x03D8277C ADRP X8, 0x379000
	0x03D82780 LDR X8, [X8 + 0xF08]
	0x03D82784 MOV W20, W31
	0x03D82788 LDR X8, [X8]
	0x03D8278C LDR X8, [X8 + 0xB8]
	0x03D82790 LDR V0, [X8]
	0x03D82794 STR D0, [X19 + 0x470]
	0x03D82798 MOV X0, X19
	0x03D8279C MOV V0.16B, V4.16B
	0x03D827A0 MOV V1.16B, V3.16B
	0x03D827A4 BL 0x3D7E1E4
	0x03D827A8 MOV W0, W20
	0x03D827AC LDP X20, X19, [X31 + 0x50]
	0x03D827B0 LDP X30, X21, [X31 + 0x40]
	0x03D827B4 LDP D9, D8, [X31 + 0x30]
	0x03D827B8 ADD X31, X31, 0x60
	0x03D827BC RET
	0x03D827C0 STR X30, [X31 - 0x30]!
	0x03D827C4 STP X22, X21, [X31 + 0x10]
	0x03D827C8 STP X20, X19, [X31 + 0x20]
	0x03D827CC ADRP X20, 0x665000
	0x03D827D0 LDRB W8, [X20 + 0xDCB]
	0x03D827D4 MOV X19, X0
	0x03D827D8 TBNZ X8, 0x0, 0x3D82814
	0x03D827DC ADRP X0, 0x372000
	0x03D827E0 LDR X0, [X0 + 0xE70]
	0x03D827E4 BL 0x1C16CF4
	0x03D827E8 ADRP X0, 0x39C000
	0x03D827EC LDR X0, [X0 + 0xAB8]
	0x03D827F0 BL 0x1C16CF4
	0x03D827F4 ADRP X0, 0x399000
	0x03D827F8 LDR X0, [X0 + 0x680]
	0x03D827FC BL 0x1C16CF4
	0x03D82800 ADRP X0, 0x3E5000
	0x03D82804 LDR X0, [X0 + 0x2E8]
	0x03D82808 BL 0x1C16CF4
	0x03D8280C MOVZ W8, 0x1
	0x03D82810 STRB W8, [X20 + 0xDCB]
	0x03D82814 ADRP X22, 0x39C000
	0x03D82818 LDR X22, [X22 + 0xAB8]
	0x03D8281C MOV X0, X19
	0x03D82820 BL 0x3D814E8
	0x03D82824 LDR X20, [X19 + 0x4B0]
	0x03D82828 CBZ X20, 0x3D8286C
	0x03D8282C LDR X8, [X20]
	0x03D82830 LDR X1, [X22]
	0x03D82834 LDRH W9, [X8 + 0x12E]
	0x03D82838 CBZ X9, 0x3D8285C
	0x03D8283C LDR X10, [X8 + 0xB0]
	0x03D82840 ADD X10, X10, 0x8
	0x03D82844 LDUR X11, [X10 - 0x8]
	0x03D82848 CMP X11, X1
	0x03D8284C B.EQ 0x3D828F8
	0x03D82850 SUBS X9, X9, 0x1
	0x03D82854 ADD X10, X10, 0x10
	0x03D82858 B.NE 0x3D82844
	0x03D8285C MOVZ W2, 0x1
	0x03D82860 MOV X0, X20
	0x03D82864 BL 0x1C5C788
	0x03D82868 B 0x3D82908
	0x03D8286C MOV X0, X19
	0x03D82870 MOV X1, X31
	0x03D82874 BL 0x3DF7724
	0x03D82878 ADRP X8, 0x372000
	0x03D8287C LDR X8, [X8 + 0xE70]
	0x03D82880 MOV X20, X0
	0x03D82884 LDR X8, [X8]
	0x03D82888 MOV X0, X8
	0x03D8288C BL 0x1C16F10
	0x03D82890 ADRP X8, 0x3E5000
	0x03D82894 LDR X8, [X8 + 0x2E8]
	0x03D82898 MOV X1, X19
	0x03D8289C MOV X3, X31
	0x03D828A0 MOV X21, X0
	0x03D828A4 LDR X2, [X8]
	0x03D828A8 BL 0x3314368
	0x03D828AC CBZ X20, 0x3D82A20
	0x03D828B0 ADRP X10, 0x399000
	0x03D828B4 LDR X8, [X20]
	0x03D828B8 LDR X10, [X10 + 0x680]
	0x03D828BC LDRH W9, [X8 + 0x12E]
	0x03D828C0 LDR X1, [X10]
	0x03D828C4 CBZ X9, 0x3D828E8
	0x03D828C8 LDR X10, [X8 + 0xB0]
	0x03D828CC ADD X10, X10, 0x8
	0x03D828D0 LDUR X11, [X10 - 0x8]
	0x03D828D4 CMP X11, X1
	0x03D828D8 B.EQ 0x3D82980
	0x03D828DC SUBS X9, X9, 0x1
	0x03D828E0 ADD X10, X10, 0x10
	0x03D828E4 B.NE 0x3D828D0
	0x03D828E8 MOVZ W2, 0x1
	0x03D828EC MOV X0, X20
	0x03D828F0 BL 0x1C5C788
	0x03D828F4 B 0x3D82990
	0x03D828F8 LDR W9, [X10]
	0x03D828FC ADD W9, W9, 0x1
	0x03D82900 ADD X8, X8, W9, 0x4, SXTW
	0x03D82904 ADD X0, X8, 0x138
	0x03D82908 LDP X8, X1, [X0]
	0x03D8290C MOV X0, X20
	0x03D82910 BLR X8
	0x03D82914 LDR X19, [X19 + 0x4B0]
	0x03D82918 CBZ X19, 0x3D82A20
	0x03D8291C LDR X8, [X19]
	0x03D82920 LDR X1, [X22]
	0x03D82924 LDRH W9, [X8 + 0x12E]
	0x03D82928 CBZ X9, 0x3D8294C
	0x03D8292C LDR X10, [X8 + 0xB0]
	0x03D82930 ADD X10, X10, 0x8
	0x03D82934 LDUR X11, [X10 - 0x8]
	0x03D82938 CMP X11, X1
	0x03D8293C B.EQ 0x3D8295C
	0x03D82940 SUBS X9, X9, 0x1
	0x03D82944 ADD X10, X10, 0x10
	0x03D82948 B.NE 0x3D82934
	0x03D8294C MOV X0, X19
	0x03D82950 MOV W2, W31
	0x03D82954 BL 0x1C5C788
	0x03D82958 B 0x3D82968
	0x03D8295C LDRSW X9, [X10]
	0x03D82960 ADD X8, X8, X9, 0x4, LSL
	0x03D82964 ADD X0, X8, 0x138
	0x03D82968 LDP X2, X1, [X0]
	0x03D8296C MOV X0, X19
	0x03D82970 LDP X20, X19, [X31 + 0x20]
	0x03D82974 LDP X22, X21, [X31 + 0x10]
	0x03D82978 LDR X30, [X31], #0x30
	0x03D8297C BR X2
	0x03D82980 LDR W9, [X10]
	0x03D82984 ADD W9, W9, 0x1
	0x03D82988 ADD X8, X8, W9, 0x4, SXTW
	0x03D8298C ADD X0, X8, 0x138
	0x03D82990 LDP X8, X2, [X0]
	0x03D82994 MOV X0, X20
	0x03D82998 MOV X1, X21
	0x03D8299C BLR X8
	0x03D829A0 CBZ X0, 0x3D82A20
	0x03D829A4 LDR X8, [X0]
	0x03D829A8 LDR X21, [X19 + 0x410]

ISIL:
	001 Move [X31-64], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move V0, [X0+1012]
	010 Move X19, X0
	011 Move X20, 0x658000
	012 NotImplemented "Instruction FCMP not yet implemented."
	013 Move W8, [X20+1935]
	014 Move V8, [X19+1136]
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x37A000
	018 Move X0, [X0+3848]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1935], W8
	022 Move X8, 0x37A000
	023 Move X8, [X8+3848]
	024 Move X9, -53051392
	025 Move V1, [X9+3872]
	026 Move X8, [X8]
	027 Move X8, [X8+184]
	028 Move V0, [X8]
	029 Move S10, [X8]
	030 Move S9, [X8+4]
	031 Subtract V0, V8, V0
	032 NotImplemented "Instruction INVALID not yet implemented."
	033 NotImplemented "Instruction FADDP not yet implemented."
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move V11, [X19+1096]
	036 Move S1, W31
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move V8, [X19+1020]
	039 Move V0, [X19+1012]
	040 Move V1, V8
	041 Call 0x3EB2B50
	042 Move V3, [X19+1136]
	043 Move V2, [X19+1140]
	044 Move S1, W31
	045 Multiply S3, S3, S0
	046 Multiply S2, S2, S0
	047 Add S1, S1, S8
	048 Multiply S4, S8, S3
	049 Multiply S5, S8, S2
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Add S10, S10, S4
	052 Add S9, S9, S5
	053 Move [X19+1136], S3
	054 Move [X19+1140], S2
	055 Subtract S8, S11, S1
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Move V0, [X19+1020]
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 Move V0, [X19+1012]
	060 Move V11, [X19+1136]
	061 Move V12, [X19+1140]
	062 Move V1, V8
	063 Call 0x3EB2B50
	064 Multiply S1, S11, S0
	065 Multiply S0, S12, S0
	066 Move [X19+1136], S1
	067 Move [X19+1140], S0
	068 Multiply S1, S8, S1
	069 Multiply S0, S8, S0
	070 Add S10, S10, S1
	071 Add S9, S9, S0
	072 Move X0, X19
	073 Move X1, X31
	074 Call VisualElement.get_scaledPixelsPerPoint, X0
	075 Move V1, [X19+1016]
	076 Move V2, [X19+1136]
	077 Multiply S8, S0, S1
	078 NotImplemented "Instruction FABS not yet implemented."
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Move W8, [X19+1028]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X19
	083 Call ScrollView.get_scrollOffset, X0
	084 Move V1, [X19+1152]
	085 NotImplemented "Instruction FCMP not yet implemented."
	086 Move X0, X19
	087 Call ScrollView.get_scrollOffset, X0
	088 Move V1, [X19+1160]
	089 NotImplemented "Instruction FCMP not yet implemented."
	090 Move [X19+1136], W31
	091 Move V0, [X19+1140]
	092 NotImplemented "Instruction FABS not yet implemented."
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 Move W8, [X19+1028]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X19
	097 Call ScrollView.get_scrollOffset, X0
	098 Move V0, [X19+1156]
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 Move X0, X19
	101 Call ScrollView.get_scrollOffset, X0
	102 Move V0, [X19+1164]
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 Move [X19+1140], W31
	105 Move X0, X19
	106 Call ScrollView.get_scrollOffset, X0
	107 Add S0, S10, S0
	108 Add S1, S9, S1
	109 Move X0, X19
	110 Move X20, [X31+48]
	111 Move X19, [X31+56]
	112 Move X30, [X31+40]
	113 Move D9, [X31+24]
	114 Move D8, [X31+32]
	115 Move D11, [X31+8]
	116 Move D10, [X31+16]
	117 Move V12, [X31+64]
	118 Call ScrollView.set_scrollOffset, X0, X1
	119 Return 
	120 Move W8, [X20+1935]
	121 Compare W8, 0
	122 JumpIfNotEqual {128}
	123 Move X0, 0x37A000
	124 Move X0, [X0+3848]
	125 Call 0x1C17CF4
	126 Move W8, 1
	127 Move [X20+1935], W8
	128 Move X8, 0x37A000
	129 Move X8, [X8+3848]
	130 Move X8, [X8]
	131 Move X8, [X8+184]
	132 Move S10, [X8]
	133 Move S9, [X8+4]
	134 Move [X19+1136], S10
	135 Move [X19+1140], S9
	136 Move X20, [X31+48]
	137 Move X19, [X31+56]
	138 Move X30, [X31+40]
	139 Move D9, [X31+24]
	140 Move D8, [X31+32]
	141 Move D11, [X31+8]
	142 Move D10, [X31+16]
	143 Move V12, [X31+64]
	144 Return 

Method: System.Void PostPointerUpAnimation()

Disassembly:
	0x03D829AC LDR X1, [X22]
	0x03D829B0 MOV X20, X0
	0x03D829B4 LDRH W9, [X8 + 0x12E]
	0x03D829B8 CBZ X9, 0x3D829DC
	0x03D829BC LDR X10, [X8 + 0xB0]
	0x03D829C0 ADD X10, X10, 0x8
	0x03D829C4 LDUR X11, [X10 - 0x8]
	0x03D829C8 CMP X11, X1
	0x03D829CC B.EQ 0x3D829EC
	0x03D829D0 SUBS X9, X9, 0x1
	0x03D829D4 ADD X10, X10, 0x10
	0x03D829D8 B.NE 0x3D829C4
	0x03D829DC MOVZ W2, 0x4
	0x03D829E0 MOV X0, X20
	0x03D829E4 BL 0x1C5C788
	0x03D829E8 B 0x3D829FC
	0x03D829EC LDR W9, [X10]
	0x03D829F0 ADD W9, W9, 0x4
	0x03D829F4 ADD X8, X8, W9, 0x4, SXTW
	0x03D829F8 ADD X0, X8, 0x138
	0x03D829FC LDP X8, X2, [X0]
	0x03D82A00 MOV X0, X20
	0x03D82A04 MOV X1, X21
	0x03D82A08 BLR X8
	0x03D82A0C STR X0, [X19 + 0x4B0]
	0x03D82A10 LDP X20, X19, [X31 + 0x20]
	0x03D82A14 LDP X22, X21, [X31 + 0x10]
	0x03D82A18 LDR X30, [X31], #0x30
	0x03D82A1C RET
	0x03D82A20 BL 0x1C16F20
	0x03D82A24 STP D9, D8, [X31 - 0x20]!
	0x03D82A28 STP X30, X19, [X31 + 0x10]
	0x03D82A2C LDR X8, [X0]
	0x03D82A30 MOV X19, X0
	0x03D82A34 LDR X9, [X8 + 0x768]
	0x03D82A38 LDR X1, [X8 + 0x770]
	0x03D82A3C BLR X9
	0x03D82A40 CBZ X0, 0x3D82B2C
	0x03D82A44 MOV X1, X31
	0x03D82A48 BL 0x3DED804
	0x03D82A4C ADRP X8, 0xFFFFFFFFFCD67000
	0x03D82A50 LDR V9, [X8 + 0xF9C]
	0x03D82A54 FMOV S8, 1
	0x03D82A58 FCMP S2, S9
	0x03D82A5C B.LE 0x3D82A98
	0x03D82A60 LDR X0, [X19 + 0x418]
	0x03D82A64 CBZ X0, 0x3D82B2C
	0x03D82A68 MOV X1, X31
	0x03D82A6C BL 0x3DEC528
	0x03D82A70 LDR X8, [X19]
	0x03D82A74 MOV X0, X19
	0x03D82A78 MOV V8.16B, V2.16B
	0x03D82A7C LDR X9, [X8 + 0x768]
	0x03D82A80 LDR X1, [X8 + 0x770]
	0x03D82A84 BLR X9
	0x03D82A88 CBZ X0, 0x3D82B2C
	0x03D82A8C MOV X1, X31
	0x03D82A90 BL 0x3DED804
	0x03D82A94 FDIV S8, S8, S2
	0x03D82A98 LDR X8, [X19]
	0x03D82A9C MOV X0, X19
	0x03D82AA0 LDR X9, [X8 + 0x768]
	0x03D82AA4 LDR X1, [X8 + 0x770]
	0x03D82AA8 BLR X9
	0x03D82AAC CBZ X0, 0x3D82B2C
	0x03D82AB0 MOV X1, X31
	0x03D82AB4 BL 0x3DED804
	0x03D82AB8 FCMP S3, S9
	0x03D82ABC FMOV S9, 1
	0x03D82AC0 B.LE 0x3D82AFC
	0x03D82AC4 LDR X0, [X19 + 0x418]
	0x03D82AC8 CBZ X0, 0x3D82B2C
	0x03D82ACC MOV X1, X31
	0x03D82AD0 BL 0x3DEC528
	0x03D82AD4 LDR X8, [X19]
	0x03D82AD8 MOV X0, X19
	0x03D82ADC MOV V9.16B, V3.16B
	0x03D82AE0 LDR X9, [X8 + 0x768]
	0x03D82AE4 LDR X1, [X8 + 0x770]
	0x03D82AE8 BLR X9
	0x03D82AEC CBZ X0, 0x3D82B2C
	0x03D82AF0 MOV X1, X31
	0x03D82AF4 BL 0x3DED804
	0x03D82AF8 FDIV S9, S9, S3
	0x03D82AFC LDR X0, [X19 + 0x420]
	0x03D82B00 CBZ X0, 0x3D82B2C
	0x03D82B04 MOV V0.16B, V8.16B
	0x03D82B08 MOV X1, X31
	0x03D82B0C BL 0x3D846D8
	0x03D82B10 LDR X0, [X19 + 0x428]
	0x03D82B14 CBZ X0, 0x3D82B2C
	0x03D82B18 LDP X30, X19, [X31 + 0x10]
	0x03D82B1C MOV V0.16B, V9.16B
	0x03D82B20 MOV X1, X31
	0x03D82B24 LDP D9, D8, [X31], #0x20
	0x03D82B28 B 0x3D846D8
	0x03D82B2C BL 0x1C16F20
	0x03D82B30 STR X30, [X31 - 0x30]!
	0x03D82B34 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x666000
	007 Move W8, [X20+3525]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x39D000
	014 Move X0, [X0+2744]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3525], W8
	018 Move X0, X31
	019 Call Time.get_unscaledTime
	020 Move V1, [X19+1088]
	021 Move X0, X31
	022 Subtract S0, S0, S1
	023 Move [X19+1096], S0
	024 Call Time.get_unscaledTime
	025 Move X0, X31
	026 Move [X19+1088], S0
	027 Call Time.get_unscaledTime
	028 Move V1, [X19+1092]
	029 Move X0, X31
	030 Subtract S0, S0, S1
	031 Move [X19+1100], S0
	032 Call Time.get_unscaledTime
	033 Move X0, X19
	034 Move [X19+1092], S0
	035 Call ScrollView.ApplyScrollInertia, X0
	036 Move X0, X19
	037 Call ScrollView.SpringBack, X0
	038 Move X20, 0x658000
	039 Move V8, [X19+1144]
	040 Move W8, [X20+1935]
	041 Move V9, [X19+1148]
	042 Compare W8, 0
	043 JumpIfNotEqual {49}
	044 Move X0, 0x37A000
	045 Move X0, [X0+3848]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+1935], W8
	049 Move X8, 0x37A000
	050 Move X8, [X8+3848]
	051 Move X8, [X8]
	052 Move X8, [X8+184]
	053 Move S0, [X8]
	054 Move S1, [X8+4]
	055 Move X8, -53051392
	056 Move V2, [X8+3872]
	057 Subtract S3, S8, S0
	058 Subtract S4, S9, S1
	059 Multiply S3, S3, S3
	060 Multiply S4, S4, S4
	061 Add S3, S3, S4
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move V3, [X19+1136]
	064 Move V4, [X19+1140]
	065 Subtract S0, S3, S0
	066 Subtract S1, S4, S1
	067 Multiply S0, S0, S0
	068 Multiply S1, S1, S1
	069 Add S0, S0, S1
	070 NotImplemented "Instruction FCMP not yet implemented."
	071 Move X20, [X19+1200]
	072 Compare X20, 0
	073 JumpIfEqual {107}
	074 Move X10, 0x39D000
	075 Move X8, [X20]
	076 Move X10, [X10+2744]
	077 Add X19, X19, 1088
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X1, [X10]
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move W2, 1
	089 Move X0, X20
	090 Call 0x1C5D788
	091 Move W9, [X10]
	092 Add W9, W9, 1
	093 Add X8, X8, W9
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X1, [X0+8]
	097 Move X0, X20
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move [X19], X31
	100 Move [X19+8], X31
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X30, [X31+16]
	104 Move D9, [X31+48]
	105 Move D8, [X31+56]
	106 Return 
	107 Call 0x1C17F20

Method: System.Void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt)

Disassembly:
	0x03D82B38 STP X20, X19, [X31 + 0x20]
	0x03D82B3C ADRP X21, 0x665000
	0x03D82B40 LDRB W8, [X21 + 0xDCD]
	0x03D82B44 MOV X20, X1
	0x03D82B48 MOV X19, X0
	0x03D82B4C TBNZ X8, 0x0, 0x3D82B64
	0x03D82B50 ADRP X0, 0x39A000
	0x03D82B54 LDR X0, [X0 + 0x128]
	0x03D82B58 BL 0x1C16CF4
	0x03D82B5C MOVZ W8, 0x1
	0x03D82B60 STRB W8, [X21 + 0xDCD]
	0x03D82B64 CBZ X20, 0x3D82CA0
	0x03D82B68 LDUR V0, [X20 + 0x8C]
	0x03D82B6C LDUR V1, [X20 + 0x9C]
	0x03D82B70 ADRP X8, 0xFFFFFFFFFCD67000
	0x03D82B74 LDR V2, [X8 + 0xF20]
	0x03D82B78 FSUB V0.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x03D82B80 FADDP S0, V0.2S
	0x03D82B84 FCMP S0, S2
	0x03D82B88 B.MI 0x3D82C2C
	0x03D82B8C LDR W9, [X19 + 0x450]
	0x03D82B90 LDR W8, [X19 + 0x3CC]
	0x03D82B94 CBZ W9, 0x3D82C3C
	0x03D82B98 CMP W8, 0x1
	0x03D82B9C B.NE 0x3D82C3C
	0x03D82BA0 LDR X0, [X19 + 0x420]
	0x03D82BA4 CBZ X0, 0x3D82CA0
	0x03D82BA8 MOV X1, X31
	0x03D82BAC BL 0x3DE7EEC
	0x03D82BB0 LDR X8, [X19 + 0x428]
	0x03D82BB4 CBZ X8, 0x3D82CA0
	0x03D82BB8 MOV X20, X0
	0x03D82BBC MOV X0, X8
	0x03D82BC0 MOV X1, X31
	0x03D82BC4 BL 0x3DEC528
	0x03D82BC8 MOV V0.16B, V2.16B
	0x03D82BCC MOV X0, X31
	0x03D82BD0 BL 0x3DFED98
	0x03D82BD4 CBZ X20, 0x3D82CA0
	0x03D82BD8 ADRP X11, 0x39A000
	0x03D82BDC LDR X9, [X20]
	0x03D82BE0 LDR X11, [X11 + 0x128]
	0x03D82BE4 MOV X8, X1
	0x03D82BE8 MOV X21, X0
	0x03D82BEC LDRH W10, [X9 + 0x12E]
	0x03D82BF0 LDR X1, [X11]
	0x03D82BF4 AND X22, X8, 0x0
	0x03D82BF8 CBZ X10, 0x3D82C1C
	0x03D82BFC LDR X8, [X9 + 0xB0]
	0x03D82C00 ADD X8, X8, 0x8
	0x03D82C04 LDUR X11, [X8 - 0x8]
	0x03D82C08 CMP X11, X1
	0x03D82C0C B.EQ 0x3D82C68
	0x03D82C10 SUBS X10, X10, 0x1
	0x03D82C14 ADD X8, X8, 0x10
	0x03D82C18 B.NE 0x3D82C04
	0x03D82C1C MOVZ W2, 0x1C
	0x03D82C20 MOV X0, X20
	0x03D82C24 BL 0x1C5C788
	0x03D82C28 B 0x3D82C78
	0x03D82C2C LDP X20, X19, [X31 + 0x20]
	0x03D82C30 LDP X22, X21, [X31 + 0x10]
	0x03D82C34 LDR X30, [X31], #0x30
	0x03D82C38 RET
	0x03D82C3C CBNZ W8, 0x3D82C8C
	0x03D82C40 MOV X0, X19
	0x03D82C44 BL 0x3D7DF7C
	0x03D82C48 ADRP X8, 0xFFFFFFFFFCD68000
	0x03D82C4C LDR V1, [X8 + 0x410]
	0x03D82C50 FCMP S0, S1
	0x03D82C54 B.LE 0x3D82C8C
	0x03D82C58 LDR W8, [X19 + 0x3CC]
	0x03D82C5C CMP W8, 0x2
	0x03D82C60 B.NE 0x3D82BA0
	0x03D82C64 B 0x3D82C8C
	0x03D82C68 LDR W8, [X8]
	0x03D82C6C ADD W8, W8, 0x1C
	0x03D82C70 ADD X8, X9, W8, 0x4, SXTW
	0x03D82C74 ADD X0, X8, 0x138
	0x03D82C78 LDP X8, X3, [X0]
	0x03D82C7C MOV X0, X20
	0x03D82C80 MOV X1, X21
	0x03D82C84 MOV X2, X22
	0x03D82C88 BLR X8
	0x03D82C8C MOV X0, X19
	0x03D82C90 LDP X20, X19, [X31 + 0x20]
	0x03D82C94 LDP X22, X21, [X31 + 0x10]
	0x03D82C98 LDR X30, [X31], #0x30
	0x03D82C9C B 0x3D82A24
	0x03D82CA0 BL 0x1C16F20
	0x03D82CA4 STP D13, D12, [X31 - 0x60]!
	0x03D82CA8 STP D11, D10, [X31 + 0x10]
	0x03D82CAC STP D9, D8, [X31 + 0x20]
	0x03D82CB0 STP X30, X23, [X31 + 0x30]
	0x03D82CB4 STP X22, X21, [X31 + 0x40]
	0x03D82CB8 STP X20, X19, [X31 + 0x50]
	0x03D82CBC LDR W8, [X0 + 0x450]
	0x03D82CC0 MOV X19, X0
	0x03D82CC4 MOV X20, X1
	0x03D82CC8 CMP W8, 0x1
	0x03D82CCC B.NE 0x3D82CD8
	0x03D82CD0 MOVZ W21, 0x1
	0x03D82CD4 B 0x3D82D1C
	0x03D82CD8 LDR X8, [X19]
	0x03D82CDC MOV X0, X19
	0x03D82CE0 LDR X9, [X8 + 0x768]
	0x03D82CE4 LDR X1, [X8 + 0x770]
	0x03D82CE8 BLR X9
	0x03D82CEC CBZ X0, 0x3D83014
	0x03D82CF0 MOV X1, X31
	0x03D82CF4 BL 0x3DED804
	0x03D82CF8 MOV X0, X19
	0x03D82CFC MOV X1, X31
	0x03D82D00 MOV V8.16B, V3.16B
	0x03D82D04 BL 0x3DEC528
	0x03D82D08 LDR W8, [X19 + 0x450]
	0x03D82D0C FSUB S0, S8, S3
	0x03D82D10 FCMP S0, 0x0
	0x03D82D14 CSET W21, LE
	0x03D82D18 CBZ W8, 0x3D8300C
	0x03D82D1C LDR X8, [X19]
	0x03D82D20 MOV X0, X19
	0x03D82D24 LDR X9, [X8 + 0x768]
	0x03D82D28 LDR X1, [X8 + 0x770]
	0x03D82D2C BLR X9
	0x03D82D30 CBZ X0, 0x3D83014
	0x03D82D34 MOV X1, X31
	0x03D82D38 BL 0x3DED804
	0x03D82D3C MOV X0, X19
	0x03D82D40 MOV X1, X31
	0x03D82D44 MOV V8.16B, V2.16B
	0x03D82D48 BL 0x3DEC528
	0x03D82D4C FSUB S0, S8, S2
	0x03D82D50 FCMP S0, 0x0
	0x03D82D54 CSET W22, GT
	0x03D82D58 CBZ X20, 0x3D83014
	0x03D82D5C CMP W22, 0x0
	0x03D82D60 LDRB W11, [X19 + 0x3E4]
	0x03D82D64 EOR W8, W21, 0x1
	0x03D82D68 CSET W14, EQ

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x666000
	007 Move W8, [X21+3526]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x39D000
	015 Move X0, [X0+2744]
	016 Call 0x1C17CF4
	017 Move X0, 0x3E6000
	018 Move X0, [X0+1040]
	019 Call 0x1C17CF4
	020 Move X0, 0x39D000
	021 Move X0, [X0+3320]
	022 Call 0x1C17CF4
	023 Move X0, 0x39D000
	024 Move X0, [X0+3328]
	025 Call 0x1C17CF4
	026 Move X0, 0x3E2000
	027 Move X0, [X0+2984]
	028 Call 0x1C17CF4
	029 Move X0, 0x39B000
	030 Move X0, [X0+3664]
	031 Call 0x1C17CF4
	032 Move X0, 0x39B000
	033 Move X0, [X0+3672]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3526], W8
	037 Compare X20, 0
	038 JumpIfEqual {157}
	039 Move X22, 0x39B000
	040 Move X22, [X22+3672]
	041 Move X21, [X20+160]
	042 Move X0, [X22]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X22]
	048 Move X8, [X0+184]
	049 Move X0, X21
	050 Move X2, X31
	051 Move X1, [X8]
	052 Call String.op_Equality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {151}
	057 Move W8, [X20+168]
	058 Compare W8, 0
	059 JumpIfEqual {151}
	060 Move X22, 0x39B000
	061 Move X22, [X22+3664]
	062 Move W21, [X20+156]
	063 Move X0, [X22]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X22]
	069 Move X8, [X0+184]
	070 Move W8, [X8+4]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W21, [X20+156]
	073 Move X0, X20
	074 Move X1, X31
	075 Call EventBase.get_target, X0
	076 Move X2, X0
	077 Move X0, X19
	078 Move W1, W21
	079 Call ScrollView.ReleaseScrolling, X0, X1, X2
	080 Move X21, [X19+1200]
	081 Compare X21, 0
	082 JumpIfEqual {107}
	083 Move X10, 0x39D000
	084 Move X8, [X21]
	085 Move X10, [X10+2744]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X1, [X10]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move W2, 1
	097 Move X0, X21
	098 Call 0x1C5D788
	099 Move W9, [X10]
	100 Add W9, W9, 1
	101 Add X8, X8, W9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X1, [X0+8]
	105 Move X0, X21
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move V0, [X19+1136]
	108 NotImplemented "Instruction FABS not yet implemented."
	109 Move S0, 10
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 Move W21, W31
	112 Move V1, [X19+1140]
	113 NotImplemented "Instruction FABS not yet implemented."
	114 NotImplemented "Instruction FCMP not yet implemented."
	115 NotImplemented "Instruction CSET not yet implemented."
	116 Move W8, 256
	117 NotImplemented "Instruction STRH not yet implemented."
	118 Move S0, [X20+180]
	119 Move S1, [X20+184]
	120 Move X0, X19
	121 Call ScrollView.InitTouchScrolling, X0, X1
	122 Move TEMP, X21
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfEqual {151}
	126 Move X8, [X19]
	127 Move X0, X19
	128 Move X9, [X8+1896]
	129 Move X1, [X8+1904]
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move W1, [X20+156]
	132 Move X2, X31
	133 Call PointerCaptureHelper.CapturePointer, X0, X1
	134 Move X8, [X19]
	135 Move X0, X19
	136 Move X9, [X8+1896]
	137 Move X1, [X8+1904]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Compare X0, 0
	140 JumpIfEqual {157}
	141 Move X1, X31
	142 Call VisualElement.get_panel, X0
	143 Move W1, [X20+156]
	144 Move X2, X31
	145 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	146 Move X0, X20
	147 Move X1, X31
	148 Call EventBase.StopPropagation, X0
	149 Move W8, 1
	150 Move [X19+1174], W8
	151 Move X20, [X31+32]
	152 Move X19, [X31+40]
	153 Move X22, [X31+16]
	154 Move X21, [X31+24]
	155 Move X30, [X31+48]
	156 Return 
	157 Call 0x1C17F20

Method: System.Void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt)

Disassembly:
	0x03D82EB4 MOVZ W23, 0x1
	0x03D82EB8 CBZ W22, 0x3D82FB8
	0x03D82EBC LDR X0, [X19 + 0x420]
	0x03D82EC0 CBZ X0, 0x3D83014
	0x03D82EC4 MOV X1, X31
	0x03D82EC8 BL 0x3D83EEC
	0x03D82ECC LDR X21, [X19 + 0x420]
	0x03D82ED0 CBZ X21, 0x3D83014
	0x03D82ED4 MOV X0, X21
	0x03D82ED8 MOV X1, X31
	0x03D82EDC MOV V8.16B, V0.16B
	0x03D82EE0 BL 0x3D83EEC
	0x03D82EE4 LDR X0, [X19 + 0x420]
	0x03D82EE8 CBZ X0, 0x3D83014
	0x03D82EEC MOV X1, X31
	0x03D82EF0 MOV V9.16B, V0.16B
	0x03D82EF4 BL 0x3D83F34
	0x03D82EF8 LDR X0, [X19 + 0x420]
	0x03D82EFC CBZ X0, 0x3D83014
	0x03D82F00 MOV X1, X31
	0x03D82F04 MOV V10.16B, V0.16B
	0x03D82F08 BL 0x3D83FE4
	0x03D82F0C FNEG S1, S11
	0x03D82F10 FCMP S10, S0
	0x03D82F14 FCSEL S0, S11, S1, MI
	0x03D82F18 FMUL S0, S12, S0
	0x03D82F1C FADD S0, S9, S0
	0x03D82F20 MOV X0, X21
	0x03D82F24 MOV X1, X31
	0x03D82F28 BL 0x3D83F10
	0x03D82F2C LDR W8, [X19 + 0x408]
	0x03D82F30 CMP W8, 0x1
	0x03D82F34 B.EQ 0x3D82FD8
	0x03D82F38 LDR X0, [X19 + 0x420]
	0x03D82F3C CBZ X0, 0x3D83014
	0x03D82F40 MOV X1, X31
	0x03D82F44 BL 0x3D83EEC
	0x03D82F48 ADRP X21, 0x657000
	0x03D82F4C LDRB W8, [X21 + 0x5AA]
	0x03D82F50 MOV V9.16B, V0.16B
	0x03D82F54 CBNZ W8, 0x3D82F6C
	0x03D82F58 ADRP X0, 0x378000
	0x03D82F5C LDR X0, [X0 + 0x4B8]
	0x03D82F60 BL 0x1C16CF4
	0x03D82F64 MOVZ W8, 0x1
	0x03D82F68 STRB W8, [X21 + 0x5AA]
	0x03D82F6C ADRP X8, 0x378000
	0x03D82F70 LDR X8, [X8 + 0x4B8]
	0x03D82F74 ADRP X9, 0xFFFFFFFFFCD68000
	0x03D82F78 LDR V0, [X9 + 0x240]
	0x03D82F7C FABS S1, S9
	0x03D82F80 LDR X8, [X8]
	0x03D82F84 FABS S2, S8
	0x03D82F88 FCMP S1, S2
	0x03D82F8C FCSEL S1, S1, S2, GT
	0x03D82F90 LDR X8, [X8 + 0xB8]
	0x03D82F94 FMUL S0, S1, S0
	0x03D82F98 FMOV S1, 8
	0x03D82F9C LDR V3, [X8]
	0x03D82FA0 FMUL S1, S3, S1
	0x03D82FA4 FCMP S0, S1
	0x03D82FA8 FCSEL S0, S0, S1, GT
	0x03D82FAC FABD S1, S8, S8
	0x03D82FB0 FCMP S1, S0
	0x03D82FB4 B.PL 0x3D82FD8
	0x03D82FB8 CBNZ W23, 0x3D82FE4
	0x03D82FBC LDP X20, X19, [X31 + 0x50]
	0x03D82FC0 LDP X22, X21, [X31 + 0x40]
	0x03D82FC4 LDP X30, X23, [X31 + 0x30]
	0x03D82FC8 LDP D9, D8, [X31 + 0x20]
	0x03D82FCC LDP D11, D10, [X31 + 0x10]
	0x03D82FD0 LDP D13, D12, [X31], #0x60
	0x03D82FD4 RET
	0x03D82FD8 MOV X0, X20
	0x03D82FDC MOV X1, X31
	0x03D82FE0 BL 0x3D9D950
	0x03D82FE4 MOV X0, X19
	0x03D82FE8 BL 0x3D83018
	0x03D82FEC MOV X0, X19
	0x03D82FF0 LDP X20, X19, [X31 + 0x50]
	0x03D82FF4 LDP X22, X21, [X31 + 0x40]
	0x03D82FF8 LDP X30, X23, [X31 + 0x30]
	0x03D82FFC LDP D9, D8, [X31 + 0x20]
	0x03D83000 LDP D11, D10, [X31 + 0x10]
	0x03D83004 LDP D13, D12, [X31], #0x60
	0x03D83008 B 0x3D7E314
	0x03D8300C MOV W22, W31
	0x03D83010 CBNZ X20, 0x3D82D5C
	0x03D83014 BL 0x1C16F20
	0x03D83018 STP D9, D8, [X31 - 0x20]!
	0x03D8301C STP X30, X19, [X31 + 0x10]
	0x03D83020 LDR W8, [X0 + 0x404]
	0x03D83024 CMP W8, 0x1
	0x03D83028 B.NE 0x3D83100
	0x03D8302C MOV X19, X0
	0x03D83030 LDR X0, [X0 + 0x420]
	0x03D83034 CBZ X0, 0x3D8310C
	0x03D83038 MOV X1, X31
	0x03D8303C BL 0x3D83F34
	0x03D83040 LDR X0, [X19 + 0x420]
	0x03D83044 CBZ X0, 0x3D8310C
	0x03D83048 MOV X1, X31
	0x03D8304C MOV V8.16B, V0.16B
	0x03D83050 BL 0x3D83FE4
	0x03D83054 LDR X0, [X19 + 0x428]
	0x03D83058 FCMP S8, S0
	0x03D8305C FCSEL S9, S8, S0, MI
	0x03D83060 CBZ X0, 0x3D8310C
	0x03D83064 MOV X1, X31
	0x03D83068 BL 0x3D83F34
	0x03D8306C LDR X0, [X19 + 0x428]
	0x03D83070 CBZ X0, 0x3D8310C
	0x03D83074 MOV X1, X31
	0x03D83078 MOV V8.16B, V0.16B
	0x03D8307C BL 0x3D83FE4
	0x03D83080 LDR X0, [X19 + 0x420]
	0x03D83084 FCMP S8, S0
	0x03D83088 FCSEL S0, S8, S0, MI
	0x03D8308C STR S9, [X19 + 0x480]
	0x03D83090 STR S0, [X19 + 0x484]
	0x03D83094 CBZ X0, 0x3D8310C
	0x03D83098 MOV X1, X31
	0x03D8309C BL 0x3D83F34
	0x03D830A0 LDR X0, [X19 + 0x420]
	0x03D830A4 CBZ X0, 0x3D8310C
	0x03D830A8 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x666000
	007 Move W8, [X21+3527]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x3E6000
	015 Move X0, [X0+1048]
	016 Call 0x1C17CF4
	017 Move X0, 0x39D000
	018 Move X0, [X0+528]
	019 Call 0x1C17CF4
	020 Move X0, 0x3E6000
	021 Move X0, [X0+1056]
	022 Call 0x1C17CF4
	023 Move X0, 0x3E2000
	024 Move X0, [X0+2992]
	025 Call 0x1C17CF4
	026 Move X0, 0x39B000
	027 Move X0, [X0+3672]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+3527], W8
	031 Compare X20, 0
	032 JumpIfEqual {144}
	033 Move X22, 0x39B000
	034 Move X22, [X22+3672]
	035 Move X21, [X20+160]
	036 Move X0, [X22]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X22]
	042 Move X8, [X0+184]
	043 Move X0, X21
	044 Move X2, X31
	045 Move X1, [X8]
	046 Call String.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {124}
	051 Move W8, [X20+168]
	052 Compare W8, 0
	053 JumpIfEqual {124}
	054 Move W8, [X19+1173]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W8, [X20+262]
	057 Move S0, [X20+180]
	058 Move S1, [X20+184]
	059 Compare W8, 0
	060 JumpIfEqual {67}
	061 Move X0, X19
	062 Move [X19+1128], S0
	063 Move [X19+1132], S1
	064 Call ScrollView.get_scrollOffset, X0
	065 Move [X19+1120], S0
	066 Move [X19+1124], S1
	067 Move W8, [X19+1104]
	068 Move V2, [X19+1128]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract S2, S0, S2
	071 Move V3, [X19+1132]
	072 Subtract S3, S1, S3
	073 Compare W8, 0
	074 JumpIfNotEqual {77}
	075 Move S2, W31
	076 Move S3, W31
	077 Move W8, [X19+1174]
	078 Compare W8, 0
	079 JumpIfNotEqual {89}
	080 Move W8, [X19+1172]
	081 Compare W8, 0
	082 JumpIfNotEqual {89}
	083 Multiply S2, S2, S2
	084 Multiply S3, S3, S3
	085 Move W8, 0x42C80000
	086 Add S2, S3, S2
	087 Move S3, W8
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 Move X0, X19
	090 Call ScrollView.ComputeTouchScrolling, X0, X1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X20, 0x658000
	093 Move W8, [X20+1935]
	094 Compare W8, 0
	095 JumpIfNotEqual {101}
	096 Move X0, 0x379000
	097 Move X0, [X0+3848]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X20+1935], W8
	101 Move X8, 0x379000
	102 Move X8, [X8+3848]
	103 Move X8, [X8]
	104 Move X8, [X8+184]
	105 Move V0, [X8]
	106 Move [X19+1136], D0
	107 Move W8, 1
	108 Move X0, X20
	109 Move X1, X31
	110 Move [X20+262], W8
	111 Call EventBase.StopPropagation, X0
	112 Move X8, [X19]
	113 Move X0, X19
	114 Move X9, [X8+1896]
	115 Move X1, [X8+1904]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move W1, [X20+156]
	118 Move X2, X31
	119 Call PointerCaptureHelper.HasPointerCapture, X0, X1
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {130}
	124 Move X20, [X31+32]
	125 Move X19, [X31+40]
	126 Move X22, [X31+16]
	127 Move X21, [X31+24]
	128 Move X30, [X31+48]
	129 Return 
	130 Move X8, [X19]
	131 Move X0, X19
	132 Move X9, [X8+1896]
	133 Move X1, [X8+1904]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move W1, [X20+156]
	136 Move X20, [X31+32]
	137 Move X19, [X31+40]
	138 Move X22, [X31+16]
	139 Move X21, [X31+24]
	140 Move X2, X31
	141 Move X30, [X31+48]
	142 Call PointerCaptureHelper.CapturePointer, X0, X1
	143 Return 
	144 Call 0x1C17F20

Method: System.Void OnPointerCancel(UnityEngine.UIElements.PointerCancelEvent evt)

Disassembly:
	0x03D834A8 STP X30, X23, [X31 + 0x150]
	0x03D834AC STP X22, X21, [X31 + 0x160]
	0x03D834B0 STP X20, X19, [X31 + 0x170]
	0x03D834B4 ADRP X23, 0x664000
	0x03D834B8 LDRB W8, [X23 + 0xDD1]
	0x03D834BC MOV X21, X3
	0x03D834C0 MOV X20, X2
	0x03D834C4 MOV X19, X1
	0x03D834C8 MOV X22, X0
	0x03D834CC TBNZ X8, 0x0, 0x3D834F0
	0x03D834D0 ADRP X0, 0x39A000
	0x03D834D4 LDR X0, [X0 + 0x678]
	0x03D834D8 BL 0x1C16CF4
	0x03D834DC ADRP X0, 0x3E4000
	0x03D834E0 LDR X0, [X0 + 0x460]
	0x03D834E4 BL 0x1C16CF4
	0x03D834E8 MOVZ W8, 0x1
	0x03D834EC STRB W8, [X23 + 0xDD1]
	0x03D834F0 STR X31, [X31 + 0x148]
	0x03D834F4 LDP V1, V0, [X21]
	0x03D834F8 ADD X3, X31, 0x100
	0x03D834FC MOV X0, X22
	0x03D83500 MOV X1, X19
	0x03D83504 MOV X2, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x665000
	006 Move W8, [X21+3528]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3E0000
	014 Move X0, [X0+2664]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3528], W8
	018 Compare X20, 0
	019 JumpIfEqual {33}
	020 Move W21, [X20+156]
	021 Move X0, X20
	022 Move X1, X31
	023 Call EventBase.get_target, X0
	024 Move X2, X0
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W1, W21
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call ScrollView.ReleaseScrolling, X0, X1, X2
	032 Return 
	033 Call 0x1C17F20

Method: System.Void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt)

Disassembly:
	0x03D83508 MOV X4, X31
	0x03D8350C STP V1, V0, [X31 + 0x100]
	0x03D83510 BL 0x3DF81FC
	0x03D83514 CBZ X19, 0x3D8354C
	0x03D83518 ADRP X9, 0x39A000
	0x03D8351C LDR X9, [X9 + 0x678]
	0x03D83520 LDR X8, [X19]
	0x03D83524 LDR X1, [X9]
	0x03D83528 LDRB W10, [X8 + 0x130]
	0x03D8352C LDRB W9, [X1 + 0x130]
	0x03D83530 CMP W10, W9
	0x03D83534 B.CC 0x3D838A4
	0x03D83538 LDR X8, [X8 + 0xC8]
	0x03D8353C ADD X8, X8, X9, 0x3, LSL
	0x03D83540 LDUR X8, [X8 - 0x8]
	0x03D83544 CMP X8, X1
	0x03D83548 B.NE 0x3D838A4
	0x03D8354C LDP V0, V1, [X21]
	0x03D83550 LDR X0, [X22 + 0x70]
	0x03D83554 STP V0, V1, [X31 + 0xE0]
	0x03D83558 CBZ X0, 0x3D838A0
	0x03D8355C LDR X8, [X0]
	0x03D83560 LDP V0, V1, [X31 + 0xE0]
	0x03D83564 ADD X2, X31, 0x120
	0x03D83568 MOV X1, X20
	0x03D8356C LDR X9, [X8 + 0x178]
	0x03D83570 STP V0, V1, [X31 + 0x120]
	0x03D83574 LDR X3, [X8 + 0x180]
	0x03D83578 BLR X9
	0x03D8357C CBZ X19, 0x3D838A0
	0x03D83580 MOV W1, W0
	0x03D83584 MOV X0, X19
	0x03D83588 MOV X2, X31
	0x03D8358C BL 0x3D801F4
	0x03D83590 STR W31, [X31 + 0x14C]
	0x03D83594 LDP V0, V1, [X21]
	0x03D83598 LDR X0, [X22 + 0x90]
	0x03D8359C STP V0, V1, [X31 + 0xC0]
	0x03D835A0 CBZ X0, 0x3D838A0
	0x03D835A4 ADRP X23, 0x3E4000
	0x03D835A8 LDR X23, [X23 + 0x460]
	0x03D835AC LDP V0, V1, [X31 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x665000
	006 Move W8, [X21+3529]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x39C000
	014 Move X0, [X0+3360]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3529], W8
	018 Compare X19, 0
	019 JumpIfEqual {57}
	020 Move W21, [X19+156]
	021 Move X0, X19
	022 Move X1, X31
	023 Call EventBase.get_target, X0
	024 Move X2, X0
	025 Move X0, X20
	026 Move W1, W21
	027 Call ScrollView.ReleaseScrolling, X0, X1, X2
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {52}
	032 Move X8, [X20]
	033 Move X0, X20
	034 Move X9, [X8+1896]
	035 Move X1, [X8+1904]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X0, 0
	038 JumpIfEqual {57}
	039 Move X1, X31
	040 Call VisualElement.get_panel, X0
	041 Move W1, [X19+156]
	042 Move X2, X31
	043 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	044 Move X0, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X1, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call EventBase.StopPropagation, X0
	051 Return 
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return 
	057 Call 0x1C17F20

Method: System.Void InitTouchScrolling(UnityEngine.Vector2 position)

Disassembly:
	0x03D82D6C ORR W8, W14, W8, 0x0
	0x03D82D70 ADD X9, X20, 0xB8
	0x03D82D74 ADD X10, X20, 0xBC
	0x03D82D78 CMP W8, 0x0
	0x03D82D7C MOVZ W12, 0x3F0
	0x03D82D80 MOVZ W13, 0x3E0
	0x03D82D84 CSEL X8, X9, X10, NE
	0x03D82D88 CMP W11, 0x0
	0x03D82D8C LDR V11, [X8]
	0x03D82D90 CSEL X8, X13, X12, EQ
	0x03D82D94 LDR V12, [X19, X8, LSL]
	0x03D82D98 TBZ X21, 0x0, 0x3D82DA8
	0x03D82D9C MOV W23, W31
	0x03D82DA0 CBNZ W22, 0x3D82EBC
	0x03D82DA4 B 0x3D82FB8
	0x03D82DA8 LDR X0, [X19 + 0x428]
	0x03D82DAC CBZ X0, 0x3D83014
	0x03D82DB0 MOV X1, X31
	0x03D82DB4 BL 0x3D83EEC
	0x03D82DB8 LDR X21, [X19 + 0x428]
	0x03D82DBC CBZ X21, 0x3D83014
	0x03D82DC0 MOV X0, X21
	0x03D82DC4 MOV X1, X31
	0x03D82DC8 MOV V8.16B, V0.16B
	0x03D82DCC BL 0x3D83EEC
	0x03D82DD0 LDR X0, [X19 + 0x428]
	0x03D82DD4 CBZ X0, 0x3D83014
	0x03D82DD8 LDR V13, [X20 + 0xBC]
	0x03D82DDC MOV X1, X31
	0x03D82DE0 MOV V9.16B, V0.16B
	0x03D82DE4 BL 0x3D83F34
	0x03D82DE8 LDR X0, [X19 + 0x428]
	0x03D82DEC CBZ X0, 0x3D83014
	0x03D82DF0 MOV X1, X31
	0x03D82DF4 MOV V10.16B, V0.16B
	0x03D82DF8 BL 0x3D83FE4
	0x03D82DFC FNEG S1, S13
	0x03D82E00 FCMP S10, S0
	0x03D82E04 FCSEL S0, S13, S1, MI
	0x03D82E08 FMUL S0, S12, S0
	0x03D82E0C FADD S0, S9, S0
	0x03D82E10 MOV X0, X21
	0x03D82E14 MOV X1, X31
	0x03D82E18 BL 0x3D83F10
	0x03D82E1C LDR W8, [X19 + 0x408]
	0x03D82E20 CMP W8, 0x1
	0x03D82E24 B.EQ 0x3D82EA8
	0x03D82E28 LDR X0, [X19 + 0x428]
	0x03D82E2C CBZ X0, 0x3D83014
	0x03D82E30 MOV X1, X31
	0x03D82E34 BL 0x3D83EEC
	0x03D82E38 ADRP X21, 0x657000
	0x03D82E3C LDRB W8, [X21 + 0x5AA]
	0x03D82E40 MOV V9.16B, V0.16B
	0x03D82E44 CBNZ W8, 0x3D82E5C
	0x03D82E48 ADRP X0, 0x378000
	0x03D82E4C LDR X0, [X0 + 0x4B8]
	0x03D82E50 BL 0x1C16CF4
	0x03D82E54 MOVZ W8, 0x1
	0x03D82E58 STRB W8, [X21 + 0x5AA]
	0x03D82E5C ADRP X8, 0x378000
	0x03D82E60 LDR X8, [X8 + 0x4B8]
	0x03D82E64 ADRP X9, 0xFFFFFFFFFCD68000
	0x03D82E68 LDR V0, [X9 + 0x240]
	0x03D82E6C FABS S1, S9
	0x03D82E70 LDR X8, [X8]
	0x03D82E74 FABS S2, S8
	0x03D82E78 FCMP S1, S2
	0x03D82E7C FCSEL S1, S1, S2, GT
	0x03D82E80 LDR X8, [X8 + 0xB8]
	0x03D82E84 FMUL S0, S1, S0
	0x03D82E88 FMOV S1, 8
	0x03D82E8C LDR V3, [X8]
	0x03D82E90 FMUL S1, S3, S1
	0x03D82E94 FCMP S0, S1
	0x03D82E98 FCSEL S0, S0, S1, GT
	0x03D82E9C FABD S1, S8, S8
	0x03D82EA0 FCMP S1, S0
	0x03D82EA4 B.MI 0x3D82D9C
	0x03D82EA8 MOV X0, X20
	0x03D82EAC MOV X1, X31
	0x03D82EB0 BL 0x3D9D950

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X0
	008 Move [X0+1128], S0
	009 Move [X0+1132], S1
	010 Call ScrollView.get_scrollOffset, X0
	011 Move [X19+1120], S0
	012 Move [X19+1124], S1
	013 Move X20, 0x658000
	014 Move W8, [X20+1935]
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x37A000
	018 Move X0, [X0+3848]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1935], W8
	022 Move X8, 0x37A000
	023 Move X8, [X8+3848]
	024 Move X0, [X19+1056]
	025 Move X8, [X8]
	026 Move X9, [X8+184]
	027 Move V0, [X9]
	028 Move [X19+1136], D0
	029 Move X8, [X8+184]
	030 Move V0, [X8]
	031 Move [X19+1144], D0
	032 Compare X0, 0
	033 JumpIfEqual {95}
	034 Move X1, X31
	035 Call Scroller.get_lowValue, X0
	036 Move X0, [X19+1056]
	037 Compare X0, 0
	038 JumpIfEqual {95}
	039 Move X1, X31
	040 Move V8, V0
	041 Call Scroller.get_highValue, X0
	042 Move X0, [X19+1064]
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 NotImplemented "Instruction FCSEL not yet implemented."
	045 Compare X0, 0
	046 JumpIfEqual {95}
	047 Move X1, X31
	048 Call Scroller.get_lowValue, X0
	049 Move X0, [X19+1064]
	050 Compare X0, 0
	051 JumpIfEqual {95}
	052 Move X1, X31
	053 Move V8, V0
	054 Call Scroller.get_highValue, X0
	055 Move X0, [X19+1056]
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 NotImplemented "Instruction FCSEL not yet implemented."
	058 Move [X19+1152], S9
	059 Move [X19+1156], S0
	060 Compare X0, 0
	061 JumpIfEqual {95}
	062 Move X1, X31
	063 Call Scroller.get_lowValue, X0
	064 Move X0, [X19+1056]
	065 Compare X0, 0
	066 JumpIfEqual {95}
	067 Move X1, X31
	068 Move V8, V0
	069 Call Scroller.get_highValue, X0
	070 Move X0, [X19+1064]
	071 Compare X0, 0
	072 JumpIfEqual {95}
	073 Move X1, X31
	074 Move V9, V0
	075 Call Scroller.get_lowValue, X0
	076 Move X0, [X19+1064]
	077 Compare X0, 0
	078 JumpIfEqual {95}
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Move X1, X31
	081 Move V10, V0
	082 NotImplemented "Instruction FCSEL not yet implemented."
	083 Call Scroller.get_highValue, X0
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 NotImplemented "Instruction FCSEL not yet implemented."
	086 Move [X19+1160], S8
	087 Move [X19+1164], S0
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X30, [X31+24]
	091 Move D9, [X31+8]
	092 Move D8, [X31+16]
	093 Move V10, [X31+48]
	094 Return 
	095 Call 0x1C17F20

Method: UnityEngine.UIElements.ScrollView/TouchScrollingResult ComputeTouchScrolling(UnityEngine.Vector2 position)

Disassembly:
	0x03D830AC MOV V8.16B, V0.16B
	0x03D830B0 BL 0x3D83FE4
	0x03D830B4 LDR X0, [X19 + 0x428]
	0x03D830B8 FCMP S8, S0
	0x03D830BC FCSEL S9, S8, S0, GT
	0x03D830C0 CBZ X0, 0x3D8310C
	0x03D830C4 MOV X1, X31
	0x03D830C8 BL 0x3D83F34
	0x03D830CC LDR X0, [X19 + 0x428]
	0x03D830D0 CBZ X0, 0x3D8310C
	0x03D830D4 MOV X1, X31
	0x03D830D8 MOV V8.16B, V0.16B
	0x03D830DC BL 0x3D83FE4
	0x03D830E0 FCMP S8, S0
	0x03D830E4 FCSEL S0, S8, S0, GT
	0x03D830E8 STR S9, [X19 + 0x488]
	0x03D830EC STR S0, [X19 + 0x48C]
	0x03D830F0 MOV X0, X19
	0x03D830F4 LDP X30, X19, [X31 + 0x10]
	0x03D830F8 LDP D9, D8, [X31], #0x20
	0x03D830FC B 0x3D827C0
	0x03D83100 LDP X30, X19, [X31 + 0x10]
	0x03D83104 LDP D9, D8, [X31], #0x20
	0x03D83108 RET
	0x03D8310C BL 0x1C16F20
	0x03D83110 B 0x3D8075C
	0x03D83114 STRB W31, [X0 + 0x495]
	0x03D83118 RET
	0x03D8311C STP X29, X30, [X31 - 0x60]!
	0x03D83120 STP X28, X27, [X31 + 0x10]
	0x03D83124 STP X26, X25, [X31 + 0x20]
	0x03D83128 STP X24, X23, [X31 + 0x30]
	0x03D8312C STP X22, X21, [X31 + 0x40]
	0x03D83130 STP X20, X19, [X31 + 0x50]
	0x03D83134 ADRP X20, 0x664000
	0x03D83138 ADRP X19, 0x39A000
	0x03D8313C ADRP X29, 0x3E4000
	0x03D83140 ADRP X28, 0x3E4000
	0x03D83144 ADRP X23, 0x39A000
	0x03D83148 ADRP X22, 0x39A000
	0x03D8314C ADRP X21, 0x39A000
	0x03D83150 ADRP X27, 0x3E4000
	0x03D83154 ADRP X26, 0x3E3000
	0x03D83158 ADRP X25, 0x3E4000
	0x03D8315C ADRP X24, 0x3E4000
	0x03D83160 LDR X19, [X19 + 0x678]
	0x03D83164 LDR X29, [X29 + 0x428]
	0x03D83168 LDR X28, [X28 + 0x430]
	0x03D8316C LDR X23, [X23 + 0x6B0]
	0x03D83170 LDR X22, [X22 + 0x6C0]
	0x03D83174 LDR X21, [X21 + 0x6C8]
	0x03D83178 LDRB W8, [X20 + 0xDCF]
	0x03D8317C LDR X27, [X27 + 0x438]
	0x03D83180 LDR X26, [X26 + 0x938]
	0x03D83184 LDR X25, [X25 + 0x440]
	0x03D83188 LDR X24, [X24 + 0x448]
	0x03D8318C TBNZ X8, 0x0, 0x3D8321C
	0x03D83190 ADRP X0, 0x39A000
	0x03D83194 LDR X0, [X0 + 0x678]
	0x03D83198 BL 0x1C16CF4
	0x03D8319C ADRP X0, 0x39A000
	0x03D831A0 LDR X0, [X0 + 0x6B0]
	0x03D831A4 BL 0x1C16CF4
	0x03D831A8 ADRP X0, 0x39A000
	0x03D831AC LDR X0, [X0 + 0x6C0]
	0x03D831B0 BL 0x1C16CF4
	0x03D831B4 ADRP X0, 0x3E4000
	0x03D831B8 LDR X0, [X0 + 0x438]
	0x03D831BC BL 0x1C16CF4
	0x03D831C0 ADRP X0, 0x3E4000
	0x03D831C4 LDR X0, [X0 + 0x448]
	0x03D831C8 BL 0x1C16CF4
	0x03D831CC ADRP X0, 0x3E4000
	0x03D831D0 LDR X0, [X0 + 0x428]
	0x03D831D4 BL 0x1C16CF4
	0x03D831D8 ADRP X0, 0x3E4000
	0x03D831DC LDR X0, [X0 + 0x430]
	0x03D831E0 BL 0x1C16CF4
	0x03D831E4 ADRP X0, 0x3E4000
	0x03D831E8 LDR X0, [X0 + 0x450]
	0x03D831EC BL 0x1C16CF4
	0x03D831F0 ADRP X0, 0x39A000
	0x03D831F4 LDR X0, [X0 + 0x6C8]
	0x03D831F8 BL 0x1C16CF4
	0x03D831FC ADRP X0, 0x3E4000
	0x03D83200 LDR X0, [X0 + 0x440]
	0x03D83204 BL 0x1C16CF4
	0x03D83208 ADRP X0, 0x3E3000
	0x03D8320C LDR X0, [X0 + 0x938]
	0x03D83210 BL 0x1C16CF4
	0x03D83214 MOVZ W8, 0x1
	0x03D83218 STRB W8, [X20 + 0xDCF]
	0x03D8321C LDR X8, [X19]
	0x03D83220 ADRP X9, 0xFFFFFFFFFCD6B000
	0x03D83224 LDR V0, [X9 + 0x5A8]
	0x03D83228 MOVZ W9, 0x10
	0x03D8322C LDR X8, [X8 + 0xB8]
	0x03D83230 MOV X2, X31
	0x03D83234 STR D0, [X8]
	0x03D83238 LDR X0, [X29]
	0x03D8323C STP X9, X0, [X8 + 0x8]
	0x03D83240 LDR X1, [X28]
	0x03D83244 BL 0x321B938
	0x03D83248 LDR X8, [X19]
	0x03D8324C MOV X2, X31
	0x03D83250 LDR X8, [X8 + 0xB8]
	0x03D83254 STR X0, [X8 + 0x18]
	0x03D83258 LDR X1, [X23]
	0x03D8325C BL 0x321B938
	0x03D83260 LDR X8, [X19]
	0x03D83264 MOV X2, X31
	0x03D83268 LDR X8, [X8 + 0xB8]
	0x03D8326C STR X0, [X8 + 0x20]
	0x03D83270 LDR X0, [X8 + 0x18]
	0x03D83274 LDR X1, [X22]
	0x03D83278 BL 0x321B938
	0x03D8327C LDR X8, [X19]
	0x03D83280 MOV X2, X31
	0x03D83284 LDR X8, [X8 + 0xB8]
	0x03D83288 STR X0, [X8 + 0x28]
	0x03D8328C LDR X0, [X8 + 0x18]
	0x03D83290 LDR X1, [X21]
	0x03D83294 BL 0x321B938
	0x03D83298 LDR X8, [X19]
	0x03D8329C MOV X2, X31
	0x03D832A0 LDR X8, [X8 + 0xB8]
	0x03D832A4 STR X0, [X8 + 0x30]
	0x03D832A8 LDR X0, [X8 + 0x10]
	0x03D832AC LDR X1, [X27]
	0x03D832B0 BL 0x321B938
	0x03D832B4 LDR X8, [X19]
	0x03D832B8 MOV X2, X31
	0x03D832BC LDR X8, [X8 + 0xB8]
	0x03D832C0 STR X0, [X8 + 0x38]
	0x03D832C4 LDR X0, [X8 + 0x10]
	0x03D832C8 LDR X1, [X26]
	0x03D832CC BL 0x321B938
	0x03D832D0 LDR X8, [X19]
	0x03D832D4 MOV X2, X31
	0x03D832D8 LDR X8, [X8 + 0xB8]
	0x03D832DC STR X0, [X8 + 0x40]
	0x03D832E0 LDR X1, [X23]
	0x03D832E4 BL 0x321B938
	0x03D832E8 LDR X8, [X19]
	0x03D832EC MOV X2, X31
	0x03D832F0 LDR X8, [X8 + 0xB8]
	0x03D832F4 STR X0, [X8 + 0x48]
	0x03D832F8 LDR X0, [X8 + 0x40]
	0x03D832FC LDR X1, [X22]
	0x03D83300 BL 0x321B938
	0x03D83304 LDR X8, [X19]
	0x03D83308 MOV X2, X31
	0x03D8330C LDR X8, [X8 + 0xB8]
	0x03D83310 STR X0, [X8 + 0x50]
	0x03D83314 LDR X0, [X8 + 0x40]
	0x03D83318 LDR X1, [X21]
	0x03D8331C BL 0x321B938
	0x03D83320 LDR X8, [X19]
	0x03D83324 MOV X2, X31
	0x03D83328 LDR X8, [X8 + 0xB8]
	0x03D8332C STR X0, [X8 + 0x58]
	0x03D83330 LDR X0, [X8 + 0x10]
	0x03D83334 LDR X1, [X25]
	0x03D83338 BL 0x321B938
	0x03D8333C LDR X8, [X19]
	0x03D83340 MOV X2, X31
	0x03D83344 LDR X8, [X8 + 0xB8]
	0x03D83348 STR X0, [X8 + 0x60]
	0x03D8334C LDR X0, [X8 + 0x10]
	0x03D83350 LDR X1, [X24]
	0x03D83354 BL 0x321B938
	0x03D83358 LDR X8, [X19]
	0x03D8335C MOV X2, X31
	0x03D83360 LDR X8, [X8 + 0xB8]
	0x03D83364 STR X0, [X8 + 0x68]
	0x03D83368 LDR X0, [X8 + 0x10]
	0x03D8336C LDR X1, [X23]
	0x03D83370 BL 0x321B938
	0x03D83374 LDR X8, [X19]
	0x03D83378 MOV X2, X31
	0x03D8337C LDR X8, [X8 + 0xB8]
	0x03D83380 STR X0, [X8 + 0x70]
	0x03D83384 LDR X0, [X8 + 0x10]
	0x03D83388 LDR X1, [X22]
	0x03D8338C BL 0x321B938
	0x03D83390 LDR X8, [X19]
	0x03D83394 MOV X2, X31
	0x03D83398 LDR X8, [X8 + 0xB8]
	0x03D8339C STR X0, [X8 + 0x78]
	0x03D833A0 LDR X0, [X8 + 0x10]
	0x03D833A4 LDR X1, [X21]
	0x03D833A8 BL 0x321B938
	0x03D833AC LDR X8, [X19]
	0x03D833B0 MOV X2, X31
	0x03D833B4 LDR X8, [X8 + 0xB8]
	0x03D833B8 STR X0, [X8 + 0x80]
	0x03D833BC LDR X0, [X8 + 0x10]
	0x03D833C0 ADRP X8, 0x3E4000
	0x03D833C4 LDR X8, [X8 + 0x450]
	0x03D833C8 LDR X1, [X8]
	0x03D833CC BL 0x321B938
	0x03D833D0 LDR X8, [X19]
	0x03D833D4 LDP X20, X19, [X31 + 0x50]
	0x03D833D8 LDP X22, X21, [X31 + 0x40]
	0x03D833DC LDP X24, X23, [X31 + 0x30]
	0x03D833E0 LDR X8, [X8 + 0xB8]
	0x03D833E4 LDP X26, X25, [X31 + 0x20]
	0x03D833E8 LDP X28, X27, [X31 + 0x10]
	0x03D833EC STR X0, [X8 + 0x88]
	0x03D833F0 LDP X29, X30, [X31], #0x60
	0x03D833F4 RET
	0x03D833F8 STR D8, [X31 - 0x20]!
	0x03D833FC STP X30, X19, [X31 + 0x10]
	0x03D83400 MOV V8.16B, V0.16B
	0x03D83404 MOV X19, X0
	0x03D83408 BL 0x3D7E19C
	0x03D8340C MOV X0, X19
	0x03D83410 MOV V0.16B, V8.16B
	0x03D83414 BL 0x3D7E1E4
	0x03D83418 MOV X0, X19
	0x03D8341C LDP X30, X19, [X31 + 0x10]
	0x03D83420 LDR V8, [X31], #0x20
	0x03D83424 B 0x3D7E314
	0x03D83428 STR D8, [X31 - 0x20]!
	0x03D8342C STP X30, X19, [X31 + 0x10]
	0x03D83430 MOV V8.16B, V0.16B
	0x03D83434 MOV X19, X0
	0x03D83438 BL 0x3D7E19C
	0x03D8343C MOV X0, X19
	0x03D83440 MOV V1.16B, V8.16B
	0x03D83444 BL 0x3D7E1E4
	0x03D83448 MOV X0, X19
	0x03D8344C LDP X30, X19, [X31 + 0x10]
	0x03D83450 LDR V8, [X31], #0x20
	0x03D83454 B 0x3D7E314
	0x03D83458 STP X30, X21, [X31 - 0x20]!
	0x03D8345C STP X20, X19, [X31 + 0x10]
	0x03D83460 ADRP X20, 0x664000
	0x03D83464 ADRP X21, 0x3E4000
	0x03D83468 LDRB W8, [X20 + 0xDD0]
	0x03D8346C LDR X21, [X21 + 0x458]
	0x03D83470 MOV X19, X0
	0x03D83474 TBNZ X8, 0x0, 0x3D8348C
	0x03D83478 ADRP X0, 0x3E4000
	0x03D8347C LDR X0, [X0 + 0x458]
	0x03D83480 BL 0x1C16CF4
	0x03D83484 MOVZ W8, 0x1
	0x03D83488 STRB W8, [X20 + 0xDD0]
	0x03D8348C LDR X1, [X21]
	0x03D83490 MOV X0, X19
	0x03D83494 LDP X20, X19, [X31 + 0x10]
	0x03D83498 LDP X30, X21, [X31], #0x20
	0x03D8349C B 0x2736468
	0x03D834A0 SUB X31, X31, 0x180
	0x03D834A4 STR X29, [X31 + 0x140]

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x665000
	014 Move W8, [X20+3530]
	015 Move V8, V1
	016 Move V9, V0
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x39A000
	023 Move X0, [X0+288]
	024 Call 0x1C17CF4
	025 Move X0, 0x39B000
	026 Move X0, [X0+1656]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3530], W8
	030 Move W8, [X19+1028]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move V0, [X19+1128]
	034 Move V1, [X19+1120]
	035 Move V2, [X19+1132]
	036 Move V3, [X19+1124]
	037 Move V4, [X19+1152]
	038 Subtract S0, S9, S0
	039 Move V5, [X19+1156]
	040 Subtract S2, S8, S2
	041 Subtract S0, S1, S0
	042 Move V1, [X19+1160]
	043 Subtract S2, S3, S2
	044 Move V3, [X19+1164]
	045 NotImplemented "Instruction FCMP not yet implemented."
	046 NotImplemented "Instruction FCSEL not yet implemented."
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 NotImplemented "Instruction FCSEL not yet implemented."
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 NotImplemented "Instruction FCSEL not yet implemented."
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 NotImplemented "Instruction FCSEL not yet implemented."
	053 Move X0, [X19+1048]
	054 Compare X0, 0
	055 JumpIfEqual {268}
	056 Move V14, [X19+1128]
	057 Move V15, [X19+1132]
	058 Move V10, [X19+1120]
	059 Move V11, [X19+1152]
	060 Move X1, X31
	061 Call VisualElement.get_resolvedStyle, X0
	062 Compare X0, 0
	063 JumpIfEqual {268}
	064 Move X21, 0x39A000
	065 Move X8, [X0]
	066 Move X21, [X21+288]
	067 Move X20, X0
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Move X1, [X21]
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move W2, 44
	079 Move X0, X20
	080 Call 0x1C5D788
	081 Move V0, [X19+1128]
	082 Move V1, [X19+1132]
	083 Move V2, [X19+1120]
	084 Move V3, [X19+1124]
	085 Subtract S0, S9, S0
	086 Subtract S1, S8, S1
	087 Subtract S9, S2, S0
	088 Subtract S8, S3, S1
	089 Move W9, [X10]
	090 Add W9, W9, 44
	091 Add X8, X8, W9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X1, [X0+8]
	095 Move X0, X20
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Move X0, [X19+1048]
	098 Compare X0, 0
	099 JumpIfEqual {268}
	100 Move V12, [X19+1160]
	101 Move X1, X31
	102 Move V13, V0
	103 Call VisualElement.get_resolvedStyle, X0
	104 Compare X0, 0
	105 JumpIfEqual {268}
	106 Move X8, [X0]
	107 Move X1, [X21]
	108 Move X20, X0
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Compare X9, 0
	111 JumpIfEqual {118}
	112 Move X10, [X8+176]
	113 Add X10, X10, 8
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract X9, X9, 1
	117 Add X10, X10, 16
	118 Move W2, 44
	119 Move X0, X20
	120 Call 0x1C5D788
	121 Move W9, [X10]
	122 Add W9, W9, 44
	123 Add X8, X8, W9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X20
	128 Subtract S9, S9, S14
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, 0x39B000
	131 Move X8, [X8+1656]
	132 Move V14, V0
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Subtract S3, S11, S13
	139 Add S5, S12, S14
	140 Move V0, V9
	141 Move V1, V10
	142 Move V2, V11
	143 Move V4, V12
	144 Call ScrollView.ComputeElasticOffset, V0, V1, V2, V3, V4, V5
	145 Move X0, [X19+1048]
	146 Compare X0, 0
	147 JumpIfEqual {268}
	148 Move V10, [X19+1124]
	149 Move V11, [X19+1156]
	150 Move X1, X31
	151 Move V9, V0
	152 Call VisualElement.get_resolvedStyle, X0
	153 Compare X0, 0
	154 JumpIfEqual {268}
	155 Move X8, [X0]
	156 Move X1, [X21]
	157 Move X20, X0
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move W2, 19
	168 Move X0, X20
	169 Call 0x1C5D788
	170 Move W9, [X10]
	171 Add W9, W9, 19
	172 Add X8, X8, W9
	173 Add X0, X8, 312
	174 Move X8, [X0]
	175 Move X1, [X0+8]
	176 Move X0, X20
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X0, [X19+1048]
	179 Compare X0, 0
	180 JumpIfEqual {268}
	181 Move V12, [X19+1164]
	182 Move X1, X31
	183 Move V13, V0
	184 Call VisualElement.get_resolvedStyle, X0
	185 Compare X0, 0
	186 JumpIfEqual {268}
	187 Move X8, [X0]
	188 Move X1, [X21]
	189 Move X20, X0
	190 Subtract S8, S8, S15
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Compare X9, 0
	193 JumpIfEqual {200}
	194 Move X10, [X8+176]
	195 Add X10, X10, 8
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Subtract X9, X9, 1
	199 Add X10, X10, 16
	200 Move W2, 19
	201 Move X0, X20
	202 Call 0x1C5D788
	203 Move W9, [X10]
	204 Add W9, W9, 19
	205 Add X8, X8, W9
	206 Add X0, X8, 312
	207 Move X8, [X0]
	208 Move X1, [X0+8]
	209 Move X0, X20
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Subtract S3, S11, S13
	212 Add S5, S12, S0
	213 Move V0, V8
	214 Move V1, V10
	215 Move V2, V11
	216 Move V4, V12
	217 Call ScrollView.ComputeElasticOffset, V0, V1, V2, V3, V4, V5
	218 Move X0, X31
	219 Move V8, V0
	220 Call Time.get_unscaledTime
	221 Move X0, X31
	222 Move [X19+1088], S0
	223 Call Time.get_unscaledTime
	224 Move [X19+1092], S0
	225 Move W8, [X19+1104]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Compare W8, 0
	228 JumpIfNotEqual {231}
	229 Move V9, [X19+1152]
	230 Move V8, [X19+1156]
	231 Move X0, X19
	232 Call ScrollView.get_scrollOffset, X0
	233 Move X8, -53055488
	234 Move V2, [X8+3872]
	235 Subtract S0, S0, S9
	236 Subtract S1, S1, S8
	237 Multiply S0, S0, S0
	238 Multiply S1, S1, S1
	239 Add S0, S0, S1
	240 NotImplemented "Instruction FCMP not yet implemented."
	241 Move X0, X19
	242 Move V0, V9
	243 Move V1, V8
	244 Call ScrollView.ApplyTouchScrolling, X0, X1
	245 NotImplemented "Instruction ORN not yet implemented."
	246 And W0, W8, 1
	247 Move W8, [X19+1172]
	248 Compare W8, 0
	249 JumpIfEqual {254}
	250 Move W8, [X19+1032]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move W8, 1
	253 NotImplemented "Instruction CINC not yet implemented."
	254 Move W0, 1
	255 Move X20, [X31+80]
	256 Move X19, [X31+88]
	257 Move X30, [X31+64]
	258 Move X21, [X31+72]
	259 Move D9, [X31+48]
	260 Move D8, [X31+56]
	261 Move D11, [X31+32]
	262 Move D10, [X31+40]
	263 Move D13, [X31+16]
	264 Move D12, [X31+24]
	265 Move D15, [X31+96]
	266 Move D14, [X31+104]
	267 Return X0
	268 Call 0x1C17F20

Method: System.Boolean ApplyTouchScrolling(UnityEngine.Vector2 newScrollOffset)

Disassembly:
	0x03D835B0 ADD X2, X31, 0x120
	0x03D835B4 ADD X3, X31, 0x14C
	0x03D835B8 LDR X4, [X23]
	0x03D835BC MOV X1, X20
	0x03D835C0 STP V0, V1, [X31 + 0x120]
	0x03D835C4 BL 0x2735264
	0x03D835C8 TBZ X0, 0x0, 0x3D835E0
	0x03D835CC LDR W1, [X31 + 0x14C]
	0x03D835D0 MOV X0, X19
	0x03D835D4 MOV X2, X31
	0x03D835D8 BL 0x3D7D940
	0x03D835DC B 0x3D83620
	0x03D835E0 LDP V0, V1, [X21]
	0x03D835E4 LDR X0, [X22 + 0x80]
	0x03D835E8 STP V0, V1, [X31 + 0xE0]
	0x03D835EC CBZ X0, 0x3D838A0
	0x03D835F0 LDR X8, [X0]
	0x03D835F4 LDP V0, V1, [X31 + 0xE0]
	0x03D835F8 ADD X2, X31, 0x120
	0x03D835FC MOV X1, X20
	0x03D83600 LDR X9, [X8 + 0x178]
	0x03D83604 STP V0, V1, [X31 + 0x120]
	0x03D83608 LDR X3, [X8 + 0x180]
	0x03D8360C BLR X9
	0x03D83610 AND W1, W0, 0x1
	0x03D83614 MOV X0, X19
	0x03D83618 MOV X2, X31
	0x03D8361C BL 0x3D7DF44
	0x03D83620 STR W31, [X31 + 0x148]
	0x03D83624 LDP V0, V1, [X21]
	0x03D83628 LDR X0, [X22 + 0x98]
	0x03D8362C STP V0, V1, [X31 + 0xE0]
	0x03D83630 CBZ X0, 0x3D838A0
	0x03D83634 LDP V0, V1, [X31 + 0xE0]
	0x03D83638 LDR X4, [X23]
	0x03D8363C ADD X2, X31, 0x120
	0x03D83640 ADD X3, X31, 0x148
	0x03D83644 MOV X1, X20
	0x03D83648 STP V0, V1, [X31 + 0x120]
	0x03D8364C BL 0x2735264
	0x03D83650 TBZ X0, 0x0, 0x3D83668
	0x03D83654 LDR W1, [X31 + 0x148]
	0x03D83658 MOV X0, X19
	0x03D8365C MOV X2, X31
	0x03D83660 BL 0x3D7DE9C
	0x03D83664 B 0x3D836A8
	0x03D83668 LDP V0, V1, [X21]
	0x03D8366C LDR X0, [X22 + 0x88]
	0x03D83670 STP V0, V1, [X31 + 0xE0]
	0x03D83674 CBZ X0, 0x3D838A0
	0x03D83678 LDR X8, [X0]
	0x03D8367C LDP V0, V1, [X31 + 0xE0]
	0x03D83680 ADD X2, X31, 0x120
	0x03D83684 MOV X1, X20
	0x03D83688 LDR X9, [X8 + 0x178]
	0x03D8368C STP V0, V1, [X31 + 0x120]
	0x03D83690 LDR X3, [X8 + 0x180]
	0x03D83694 BLR X9
	0x03D83698 AND W1, W0, 0x1
	0x03D8369C MOV X0, X19
	0x03D836A0 MOV X2, X31
	0x03D836A4 BL 0x3D7DF60
	0x03D836A8 LDP V0, V1, [X21]
	0x03D836AC LDR X0, [X22 + 0x78]
	0x03D836B0 STP V0, V1, [X31 + 0xE0]
	0x03D836B4 CBZ X0, 0x3D838A0
	0x03D836B8 LDR X8, [X0]
	0x03D836BC LDP V0, V1, [X31 + 0xE0]
	0x03D836C0 ADD X2, X31, 0x120
	0x03D836C4 MOV X1, X20
	0x03D836C8 LDR X9, [X8 + 0x178]
	0x03D836CC STP V0, V1, [X31 + 0x120]
	0x03D836D0 LDR X3, [X8 + 0x180]
	0x03D836D4 BLR X9
	0x03D836D8 STR W0, [X19 + 0x408]
	0x03D836DC LDP V0, V1, [X21]
	0x03D836E0 LDR X0, [X22 + 0xA0]
	0x03D836E4 STP V0, V1, [X31 + 0xC0]
	0x03D836E8 CBZ X0, 0x3D838A0
	0x03D836EC LDR X8, [X0]
	0x03D836F0 LDP V0, V1, [X31 + 0xC0]
	0x03D836F4 ADD X2, X31, 0x120
	0x03D836F8 MOV X1, X20
	0x03D836FC LDR X9, [X8 + 0x178]
	0x03D83700 STP V0, V1, [X31 + 0x120]
	0x03D83704 LDR X3, [X8 + 0x180]
	0x03D83708 BLR X9
	0x03D8370C MOV X0, X19
	0x03D83710 MOV X1, X31
	0x03D83714 BL 0x3D7E5B0
	0x03D83718 LDP V0, V1, [X21]
	0x03D8371C LDR X0, [X22 + 0xA8]
	0x03D83720 STP V0, V1, [X31 + 0xA0]
	0x03D83724 CBZ X0, 0x3D838A0
	0x03D83728 LDR X8, [X0]
	0x03D8372C LDP V0, V1, [X31 + 0xA0]
	0x03D83730 ADD X2, X31, 0x120
	0x03D83734 MOV X1, X20
	0x03D83738 LDR X9, [X8 + 0x178]
	0x03D8373C STP V0, V1, [X31 + 0x120]
	0x03D83740 LDR X3, [X8 + 0x180]
	0x03D83744 BLR X9
	0x03D83748 MOV X0, X19
	0x03D8374C MOV X1, X31
	0x03D83750 BL 0x3D7E7C4
	0x03D83754 LDP V0, V1, [X21]
	0x03D83758 LDR X0, [X22 + 0xB0]
	0x03D8375C STP V0, V1, [X31 + 0x80]
	0x03D83760 CBZ X0, 0x3D838A0
	0x03D83764 LDR X8, [X0]
	0x03D83768 LDP V0, V1, [X31 + 0x80]
	0x03D8376C ADD X2, X31, 0x120
	0x03D83770 MOV X1, X20
	0x03D83774 LDR X9, [X8 + 0x178]
	0x03D83778 STP V0, V1, [X31 + 0x120]
	0x03D8377C LDR X3, [X8 + 0x180]
	0x03D83780 BLR X9
	0x03D83784 MOV X0, X19
	0x03D83788 MOV X1, X31
	0x03D8378C BL 0x3D7E9E0
	0x03D83790 LDP V0, V1, [X21]
	0x03D83794 LDR X0, [X22 + 0xC0]
	0x03D83798 STP V0, V1, [X31 + 0x60]
	0x03D8379C CBZ X0, 0x3D838A0
	0x03D837A0 LDR X8, [X0]
	0x03D837A4 LDP V0, V1, [X31 + 0x60]
	0x03D837A8 ADD X2, X31, 0x120
	0x03D837AC MOV X1, X20
	0x03D837B0 LDR X9, [X8 + 0x178]
	0x03D837B4 STP V0, V1, [X31 + 0x120]
	0x03D837B8 LDR X3, [X8 + 0x180]
	0x03D837BC BLR X9

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], D9
	003 Move [X31+56], D8
	004 Move [X31+64], X30
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move V4, V0
	009 Move V0, [X0+1012]
	010 Move V3, V1
	011 Move X19, X0
	012 Move W8, 1
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 Move X20, -53055488
	015 Move [X0+1172], W8
	016 Move V1, [X19+1152]
	017 Move V2, [X19+1156]
	018 Move V0, [X20+3872]
	019 Subtract S1, S4, S1
	020 Subtract S2, S3, S2
	021 Multiply S1, S1, S1
	022 Multiply S2, S2, S2
	023 Add S1, S1, S2
	024 NotImplemented "Instruction FCMP not yet implemented."
	025 Move V1, [X19+1160]
	026 Move V2, [X19+1164]
	027 Subtract S1, S4, S1
	028 Subtract S2, S3, S2
	029 Multiply S1, S1, S1
	030 Multiply S2, S2, S2
	031 Add S1, S1, S2
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 Move V0, [X19+1168]
	034 Move [X31+16], V4
	035 Move [X31+24], V3
	036 NotImplemented "Instruction FCMP not yet implemented."
	037 Move X0, X31
	038 Call Time.get_unscaledTime
	039 Move V1, [X19+1168]
	040 Move X21, 0x657000
	041 Move W8, [X21+1935]
	042 Move V8, [X19+1136]
	043 Subtract S9, S0, S1
	044 Compare W8, 0
	045 JumpIfNotEqual {51}
	046 Move X0, 0x379000
	047 Move X0, [X0+3848]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X21+1935], W8
	051 Move X8, 0x379000
	052 Move X8, [X8+3848]
	053 Move S0, 10
	054 Move S1, 1
	055 Multiply S0, S9, S0
	056 Move X8, [X8]
	057 NotImplemented "Instruction FMIN not yet implemented."
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 Move S0, W31
	060 Move X8, [X8+184]
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 Move V2, [X8]
	063 Subtract V1, V2, V8
	064 NotImplemented "Instruction INVALID not yet implemented."
	065 Add V0, V8, V0
	066 Move [X19+1136], D0
	067 Move X0, X31
	068 Call Time.get_unscaledTime
	069 Move V1, [X19+1020]
	070 Move X0, X19
	071 Move [X19+1168], S0
	072 Move [X31], V1
	073 Call ScrollView.get_scrollOffset, X0
	074 Move V3, [X31]
	075 Move V2, [X31+16]
	076 Move V4, [X31+2]
	077 Move V0.S[1], V1.S[0]
	078 Move S1, 10
	079 Move V2.S[1], V4.S[0]
	080 Multiply S1, S3, S1
	081 Subtract V0, V2, V0
	082 Move S2, 1
	083 NotImplemented "Instruction FMIN not yet implemented."
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 Move V1, [X19+1136]
	086 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	087 NotImplemented "Instruction INVALID not yet implemented."
	088 Move S3, W31
	089 NotImplemented "Instruction FCSEL not yet implemented."
	090 Subtract V0, V0, V1
	091 NotImplemented "Instruction INVALID not yet implemented."
	092 Add V0, V1, V0
	093 Move [X19+1136], D0
	094 Move [X31+16], V4
	095 Move [X31+24], V3
	096 Move X0, X19
	097 Call ScrollView.get_scrollOffset, X0
	098 Move V4, [X31+16]
	099 Move V3, [X31+32]
	100 Move V2, [X20+3872]
	101 Subtract S0, S0, S4
	102 Subtract S1, S1, S3
	103 Multiply S0, S0, S0
	104 Multiply S1, S1, S1
	105 Add S0, S0, S1
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Move X20, 0x657000
	109 Move W8, [X20+1935]
	110 Compare W8, 0
	111 JumpIfNotEqual {121}
	112 Move X0, 0x379000
	113 Move X0, [X0+3848]
	114 Move [X31+16], V4
	115 Move [X31+24], V3
	116 Call 0x1C17CF4
	117 Move V4, [X31+16]
	118 Move V3, [X31+32]
	119 Move W8, 1
	120 Move [X20+1935], W8
	121 Move X8, 0x379000
	122 Move X8, [X8+3848]
	123 Move W20, W31
	124 Move X8, [X8]
	125 Move X8, [X8+184]
	126 Move V0, [X8]
	127 Move [X19+1136], D0
	128 Move X0, X19
	129 Move V0, V4
	130 Move V1, V3
	131 Call ScrollView.set_scrollOffset, X0, X1
	132 Move W0, W20
	133 Move X20, [X31+80]
	134 Move X19, [X31+88]
	135 Move X30, [X31+64]
	136 Move X21, [X31+72]
	137 Move D9, [X31+48]
	138 Move D8, [X31+56]
	139 Add X31, X31, 96
	140 Return X0

Method: System.Boolean ReleaseScrolling(System.Int32 pointerId, UnityEngine.UIElements.IEventHandler target)

Disassembly:
	0x03D81FEC BL 0x3D820AC
	0x03D81FF0 CMP W0, 0x1
	0x03D81FF4 B.NE 0x3D82034
	0x03D81FF8 ADRP X20, 0x658000
	0x03D81FFC LDRB W8, [X20 + 0x78F]
	0x03D82000 CBNZ W8, 0x3D82018
	0x03D82004 ADRP X0, 0x379000
	0x03D82008 LDR X0, [X0 + 0xF08]
	0x03D8200C BL 0x1C16CF4
	0x03D82010 MOVZ W8, 0x1
	0x03D82014 STRB W8, [X20 + 0x78F]
	0x03D82018 ADRP X8, 0x379000
	0x03D8201C LDR X8, [X8 + 0xF08]
	0x03D82020 LDR X8, [X8]
	0x03D82024 LDR X8, [X8 + 0xB8]
	0x03D82028 LDR V0, [X8]
	0x03D8202C STR D0, [X19 + 0x470]
	0x03D82030 B 0x3D8206C
	0x03D82034 MOVZ W8, 0x1
	0x03D82038 MOV X0, X20
	0x03D8203C MOV X1, X31
	0x03D82040 STRB W8, [X20 + 0x106]
	0x03D82044 BL 0x3D9D950
	0x03D82048 LDR X8, [X19]
	0x03D8204C MOV X0, X19
	0x03D82050 LDR X9, [X8 + 0x768]
	0x03D82054 LDR X1, [X8 + 0x770]
	0x03D82058 BLR X9
	0x03D8205C LDR W1, [X20 + 0x9C]
	0x03D82060 MOV X2, X31
	0x03D82064 BL 0x3DBAB50
	0x03D82068 TBZ X0, 0x0, 0x3D8207C
	0x03D8206C LDP X20, X19, [X31 + 0x20]
	0x03D82070 LDP X22, X21, [X31 + 0x10]
	0x03D82074 LDR X30, [X31], #0x30
	0x03D82078 RET
	0x03D8207C LDR X8, [X19]
	0x03D82080 MOV X0, X19
	0x03D82084 LDR X9, [X8 + 0x768]
	0x03D82088 LDR X1, [X8 + 0x770]
	0x03D8208C BLR X9
	0x03D82090 LDR W1, [X20 + 0x9C]
	0x03D82094 LDP X20, X19, [X31 + 0x20]
	0x03D82098 LDP X22, X21, [X31 + 0x10]
	0x03D8209C MOV X2, X31
	0x03D820A0 LDR X30, [X31], #0x30
	0x03D820A4 B 0x3DBAC60
	0x03D820A8 BL 0x1C16F20
	0x03D820AC STP D15, D14, [X31 - 0x60]!
	0x03D820B0 STP D13, D12, [X31 + 0x10]
	0x03D820B4 STP D11, D10, [X31 + 0x20]
	0x03D820B8 STP D9, D8, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move [X0+1174], W31
	007 NotImplemented "Instruction STRH not yet implemented."
	008 Move W19, W1
	009 Move X9, [X8+1896]
	010 Move X8, [X8+1904]
	011 Move X21, X2
	012 Move X20, X0
	013 Move X1, X8
	014 NotImplemented "Instruction BLR not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W0, W31
	017 Move X8, [X20]
	018 Move X0, X20
	019 Move X9, [X8+1896]
	020 Move X1, [X8+1904]
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move W1, W19
	023 Move X2, X31
	024 Call PointerCaptureHelper.HasPointerCapture, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {50}
	029 Move X0, X31
	030 Call Time.get_unscaledTime
	031 Move X0, X31
	032 Move [X20+1088], S0
	033 Call Time.get_unscaledTime
	034 Move W8, [X20+1028]
	035 Move [X20+1092], S0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move V0, [X20+1012]
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 Move X0, X20
	040 Call ScrollView.ExecuteElasticSpringAnimation, X0
	041 Move X8, [X20]
	042 Move X0, X20
	043 Move X9, [X8+1896]
	044 Move X1, [X8+1904]
	045 NotImplemented "Instruction BLR not yet implemented."
	046 Move W1, W19
	047 Move X2, X31
	048 Call PointerCaptureHelper.ReleasePointer, X0, X1
	049 Move W0, 1
	050 Move W0, W31
	051 Move X20, [X31+16]
	052 Move X19, [X31+24]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0

Method: System.Void ExecuteElasticSpringAnimation()

Disassembly:
	0x03D837C0 MOV X0, X19
	0x03D837C4 MOV X1, X31
	0x03D837C8 BL 0x3D7EA74
	0x03D837CC LDP V0, V1, [X21]
	0x03D837D0 LDR X0, [X22 + 0xB8]
	0x03D837D4 STP V0, V1, [X31 + 0x40]
	0x03D837D8 CBZ X0, 0x3D838A0
	0x03D837DC LDR X8, [X0]
	0x03D837E0 LDP V0, V1, [X31 + 0x40]
	0x03D837E4 ADD X2, X31, 0x120
	0x03D837E8 MOV X1, X20
	0x03D837EC LDR X9, [X8 + 0x178]
	0x03D837F0 STP V0, V1, [X31 + 0x120]
	0x03D837F4 LDR X3, [X8 + 0x180]
	0x03D837F8 BLR X9
	0x03D837FC MOV W1, W0
	0x03D83800 MOV X0, X19
	0x03D83804 MOV X2, X31
	0x03D83808 BL 0x3D7EAA4
	0x03D8380C LDP V0, V1, [X21]
	0x03D83810 LDR X0, [X22 + 0xC8]
	0x03D83814 STP V0, V1, [X31 + 0x20]
	0x03D83818 CBZ X0, 0x3D838A0
	0x03D8381C LDR X8, [X0]
	0x03D83820 LDP V0, V1, [X31 + 0x20]
	0x03D83824 ADD X2, X31, 0x120
	0x03D83828 MOV X1, X20
	0x03D8382C LDR X9, [X8 + 0x178]
	0x03D83830 STP V0, V1, [X31 + 0x120]
	0x03D83834 LDR X3, [X8 + 0x180]
	0x03D83838 BLR X9
	0x03D8383C MOV X0, X19
	0x03D83840 MOV X1, X31
	0x03D83844 BL 0x3D7EA8C
	0x03D83848 LDP V0, V1, [X21]
	0x03D8384C LDR X0, [X22 + 0xD0]
	0x03D83850 STP V0, V1, [X31]
	0x03D83854 CBZ X0, 0x3D838A0
	0x03D83858 LDR X8, [X0]
	0x03D8385C LDP V0, V1, [X31]
	0x03D83860 ADD X2, X31, 0x120
	0x03D83864 MOV X1, X20
	0x03D83868 LDR X9, [X8 + 0x178]
	0x03D8386C STP V0, V1, [X31 + 0x120]
	0x03D83870 LDR X3, [X8 + 0x180]
	0x03D83874 BLR X9
	0x03D83878 MOV X1, X0
	0x03D8387C MOV X0, X19
	0x03D83880 MOV X2, X31
	0x03D83884 BL 0x3D7EB4C
	0x03D83888 LDP X20, X19, [X31 + 0x170]
	0x03D8388C LDP X22, X21, [X31 + 0x160]
	0x03D83890 LDP X30, X23, [X31 + 0x150]
	0x03D83894 LDR X29, [X31 + 0x140]
	0x03D83898 ADD X31, X31, 0x180
	0x03D8389C RET
	0x03D838A0 BL 0x1C16F20
	0x03D838A4 MOV X0, X19
	0x03D838A8 BL 0x1C171E0
	0x03D838AC STR X30, [X31 - 0x30]!
	0x03D838B0 STP X22, X21, [X31 + 0x10]
	0x03D838B4 STP X20, X19, [X31 + 0x20]
	0x03D838B8 ADRP X21, 0x664000
	0x03D838BC ADRP X22, 0x3E4000
	0x03D838C0 ADRP X20, 0x3E4000
	0x03D838C4 LDRB W8, [X21 + 0xDD2]
	0x03D838C8 LDR X22, [X22 + 0x468]
	0x03D838CC LDR X20, [X20 + 0x470]
	0x03D838D0 MOV X19, X0
	0x03D838D4 TBNZ X8, 0x0, 0x3D83A48
	0x03D838D8 ADRP X0, 0x39A000
	0x03D838DC LDR X0, [X0 + 0x678]
	0x03D838E0 BL 0x1C16CF4
	0x03D838E4 ADRP X0, 0x3E4000
	0x03D838E8 LDR X0, [X0 + 0x478]
	0x03D838EC BL 0x1C16CF4
	0x03D838F0 ADRP X0, 0x3E3000
	0x03D838F4 LDR X0, [X0 + 0xD30]
	0x03D838F8 BL 0x1C16CF4
	0x03D838FC ADRP X0, 0x3E4000
	0x03D83900 LDR X0, [X0 + 0x480]
	0x03D83904 BL 0x1C16CF4
	0x03D83908 ADRP X0, 0x3E4000
	0x03D8390C LDR X0, [X0 + 0x488]
	0x03D83910 BL 0x1C16CF4
	0x03D83914 ADRP X0, 0x3E4000
	0x03D83918 LDR X0, [X0 + 0x490]
	0x03D8391C BL 0x1C16CF4
	0x03D83920 ADRP X0, 0x39A000
	0x03D83924 LDR X0, [X0 + 0x758]
	0x03D83928 BL 0x1C16CF4
	0x03D8392C ADRP X0, 0x3E4000
	0x03D83930 LDR X0, [X0 + 0x498]
	0x03D83934 BL 0x1C16CF4
	0x03D83938 ADRP X0, 0x3E4000
	0x03D8393C LDR X0, [X0 + 0x4A0]
	0x03D83940 BL 0x1C16CF4
	0x03D83944 ADRP X0, 0x3E4000
	0x03D83948 LDR X0, [X0 + 0x4A8]
	0x03D8394C BL 0x1C16CF4
	0x03D83950 ADRP X0, 0x3E4000
	0x03D83954 LDR X0, [X0 + 0x470]
	0x03D83958 BL 0x1C16CF4
	0x03D8395C ADRP X0, 0x3E4000
	0x03D83960 LDR X0, [X0 + 0x4B0]
	0x03D83964 BL 0x1C16CF4
	0x03D83968 ADRP X0, 0x3E4000
	0x03D8396C LDR X0, [X0 + 0x468]
	0x03D83970 BL 0x1C16CF4
	0x03D83974 ADRP X0, 0x3E4000
	0x03D83978 LDR X0, [X0 + 0x4B8]
	0x03D8397C BL 0x1C16CF4
	0x03D83980 ADRP X0, 0x3E4000
	0x03D83984 LDR X0, [X0 + 0x4C0]
	0x03D83988 BL 0x1C16CF4
	0x03D8398C ADRP X0, 0x3E0000
	0x03D83990 LDR X0, [X0 + 0x270]
	0x03D83994 BL 0x1C16CF4
	0x03D83998 ADRP X0, 0x3E4000
	0x03D8399C LDR X0, [X0 + 0x2C8]
	0x03D839A0 BL 0x1C16CF4
	0x03D839A4 ADRP X0, 0x3E4000
	0x03D839A8 LDR X0, [X0 + 0x4C8]
	0x03D839AC BL 0x1C16CF4
	0x03D839B0 ADRP X0, 0x3E4000
	0x03D839B4 LDR X0, [X0 + 0x4D0]
	0x03D839B8 BL 0x1C16CF4
	0x03D839BC ADRP X0, 0x3E4000
	0x03D839C0 LDR X0, [X0 + 0x4D8]
	0x03D839C4 BL 0x1C16CF4
	0x03D839C8 ADRP X0, 0x3E4000
	0x03D839CC LDR X0, [X0 + 0x4E0]
	0x03D839D0 BL 0x1C16CF4
	0x03D839D4 ADRP X0, 0x3E4000
	0x03D839D8 LDR X0, [X0 + 0x4E8]
	0x03D839DC BL 0x1C16CF4
	0x03D839E0 ADRP X0, 0x3E4000
	0x03D839E4 LDR X0, [X0 + 0x4F0]
	0x03D839E8 BL 0x1C16CF4
	0x03D839EC ADRP X0, 0x3E4000
	0x03D839F0 LDR X0, [X0 + 0x4F8]
	0x03D839F4 BL 0x1C16CF4
	0x03D839F8 ADRP X0, 0x3E4000
	0x03D839FC LDR X0, [X0 + 0x500]
	0x03D83A00 BL 0x1C16CF4
	0x03D83A04 ADRP X0, 0x3E4000
	0x03D83A08 LDR X0, [X0 + 0x508]
	0x03D83A0C BL 0x1C16CF4
	0x03D83A10 ADRP X0, 0x3A1000
	0x03D83A14 LDR X0, [X0 + 0x68]
	0x03D83A18 BL 0x1C16CF4
	0x03D83A1C ADRP X0, 0x3E4000
	0x03D83A20 LDR X0, [X0 + 0x510]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x665000
	007 Move W8, [X20+3531]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x372000
	014 Move X0, [X0+3696]
	015 Call 0x1C17CF4
	016 Move X0, 0x39C000
	017 Move X0, [X0+2744]
	018 Call 0x1C17CF4
	019 Move X0, 0x399000
	020 Move X0, [X0+1664]
	021 Call 0x1C17CF4
	022 Move X0, 0x3E5000
	023 Move X0, [X0+744]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3531], W8
	027 Move X22, 0x39C000
	028 Move X22, [X22+2744]
	029 Move X0, X19
	030 Call ScrollView.ComputeInitialSpringBackVelocity, X0
	031 Move X20, [X19+1200]
	032 Compare X20, 0
	033 JumpIfEqual {48}
	034 Move X8, [X20]
	035 Move X1, [X22]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Compare X9, 0
	038 JumpIfEqual {45}
	039 Move X10, [X8+176]
	040 Add X10, X10, 8
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Subtract X9, X9, 1
	044 Add X10, X10, 16
	045 Move W2, 1
	046 Move X0, X20
	047 Call 0x1C5D788
	048 Move X0, X19
	049 Move X1, X31
	050 Call VisualElement.get_schedule, X0
	051 Move X8, 0x372000
	052 Move X8, [X8+3696]
	053 Move X20, X0
	054 Move X8, [X8]
	055 Move X0, X8
	056 Call 0x1C17F10
	057 Move X8, 0x3E5000
	058 Move X8, [X8+744]
	059 Move X1, X19
	060 Move X3, X31
	061 Move X21, X0
	062 Move X2, [X8]
	063 Call Action..ctor, X0, X1, X2
	064 Compare X20, 0
	065 JumpIfEqual {162}
	066 Move X10, 0x399000
	067 Move X8, [X20]
	068 Move X10, [X10+1664]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Move X1, [X10]
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move W2, 1
	080 Move X0, X20
	081 Call 0x1C5D788
	082 Move W9, [X10]
	083 Add W9, W9, 1
	084 Add X8, X8, W9
	085 Add X0, X8, 312
	086 Move X8, [X0]
	087 Move X1, [X0+8]
	088 Move X0, X20
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X19, [X19+1200]
	091 Compare X19, 0
	092 JumpIfEqual {162}
	093 Move X8, [X19]
	094 Move X1, [X22]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move X0, X19
	105 Move W2, W31
	106 Call 0x1C5D788
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Add X8, X8, X9
	109 Add X0, X8, 312
	110 Move X2, [X0]
	111 Move X1, [X0+8]
	112 Move X0, X19
	113 Move X20, [X31+32]
	114 Move X19, [X31+40]
	115 Move X22, [X31+16]
	116 Move X21, [X31+24]
	117 Move X30, [X31+48]
	118 CallNoReturn X2
	119 Move W9, [X10]
	120 Add W9, W9, 1
	121 Add X8, X8, W9
	122 Add X0, X8, 312
	123 Move X8, [X0]
	124 Move X2, [X0+8]
	125 Move X0, X20
	126 Move X1, X21
	127 NotImplemented "Instruction BLR not yet implemented."
	128 Compare X0, 0
	129 JumpIfEqual {162}
	130 Move X8, [X0]
	131 Move X21, [X19+1040]
	132 Move X1, [X22]
	133 Move X20, X0
	134 NotImplemented "Instruction LDRH not yet implemented."
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move W2, 4
	144 Move X0, X20
	145 Call 0x1C5D788
	146 Move W9, [X10]
	147 Add W9, W9, 4
	148 Add X8, X8, W9
	149 Add X0, X8, 312
	150 Move X8, [X0]
	151 Move X2, [X0+8]
	152 Move X0, X20
	153 Move X1, X21
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move [X19+1200], X0
	156 Move X20, [X31+32]
	157 Move X19, [X31+40]
	158 Move X22, [X31+16]
	159 Move X21, [X31+24]
	160 Move X30, [X31+48]
	161 Return 
	162 Call 0x1C17F20

Method: System.Void AdjustScrollers()

Disassembly:
	0x03D83A24 BL 0x1C16CF4
	0x03D83A28 ADRP X0, 0x3E4000
	0x03D83A2C LDR X0, [X0 + 0x518]
	0x03D83A30 BL 0x1C16CF4
	0x03D83A34 ADRP X0, 0x3E4000
	0x03D83A38 LDR X0, [X0 + 0x520]
	0x03D83A3C BL 0x1C16CF4
	0x03D83A40 MOVZ W8, 0x1
	0x03D83A44 STRB W8, [X21 + 0xDD2]
	0x03D83A48 LDR X0, [X22]
	0x03D83A4C BL 0x1C16F10
	0x03D83A50 LDR X1, [X20]
	0x03D83A54 MOV X20, X0
	0x03D83A58 BL 0x2734B10
	0x03D83A5C CBZ X20, 0x3D83D50
	0x03D83A60 ADRP X8, 0x3A1000
	0x03D83A64 LDR X8, [X8 + 0x68]
	0x03D83A68 ADRP X9, 0x3E4000
	0x03D83A6C LDR X8, [X8]
	0x03D83A70 LDR X9, [X9 + 0x4B8]
	0x03D83A74 STR W31, [X20 + 0x40]
	0x03D83A78 STR X8, [X20 + 0x10]
	0x03D83A7C STR X20, [X19 + 0x70]
	0x03D83A80 LDR X0, [X9]
	0x03D83A84 ADRP X20, 0x3E4000
	0x03D83A88 LDR X20, [X20 + 0x498]
	0x03D83A8C BL 0x1C16F10
	0x03D83A90 LDR X1, [X20]
	0x03D83A94 MOV X20, X0
	0x03D83A98 BL 0x2734B10
	0x03D83A9C CBZ X20, 0x3D83D50
	0x03D83AA0 ADRP X8, 0x3E4000
	0x03D83AA4 LDR X8, [X8 + 0x510]
	0x03D83AA8 ADRP X21, 0x39A000
	0x03D83AAC LDR X8, [X8]
	0x03D83AB0 LDR X21, [X21 + 0x758]
	0x03D83AB4 STR W31, [X20 + 0x40]
	0x03D83AB8 STR X8, [X20 + 0x10]
	0x03D83ABC STR X20, [X19 + 0x78]
	0x03D83AC0 LDR X0, [X21]
	0x03D83AC4 BL 0x1C16F10
	0x03D83AC8 MOV X1, X31
	0x03D83ACC MOV X20, X0
	0x03D83AD0 BL 0x3E13BD4
	0x03D83AD4 CBZ X20, 0x3D83D50
	0x03D83AD8 ADRP X8, 0x3E4000
	0x03D83ADC LDR X8, [X8 + 0x4F0]
	0x03D83AE0 LDR X8, [X8]
	0x03D83AE4 STR X8, [X20 + 0x10]
	0x03D83AE8 STR X20, [X19 + 0x80]
	0x03D83AEC LDR X0, [X21]
	0x03D83AF0 BL 0x1C16F10
	0x03D83AF4 MOV X1, X31
	0x03D83AF8 MOV X20, X0
	0x03D83AFC BL 0x3E13BD4
	0x03D83B00 CBZ X20, 0x3D83D50
	0x03D83B04 ADRP X8, 0x3E4000
	0x03D83B08 LDR X8, [X8 + 0x520]
	0x03D83B0C ADRP X22, 0x3E4000
	0x03D83B10 ADRP X21, 0x3E4000
	0x03D83B14 LDR X8, [X8]
	0x03D83B18 LDR X22, [X22 + 0x4C0]
	0x03D83B1C STR X8, [X20 + 0x10]
	0x03D83B20 STR X20, [X19 + 0x88]
	0x03D83B24 LDR X0, [X22]
	0x03D83B28 LDR X21, [X21 + 0x4A8]
	0x03D83B2C BL 0x1C16F10

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Move X19, X0
	007 Move X9, [X8+1896]
	008 Move X1, [X8+1904]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Compare X0, 0
	011 JumpIfEqual {78}
	012 Move X1, X31
	013 Call VisualElement.get_boundingBox, X0
	014 Move X8, -53055488
	015 Move V9, [X8+3996]
	016 Move S8, 1
	017 NotImplemented "Instruction FCMP not yet implemented."
	018 Move X0, [X19+1048]
	019 Compare X0, 0
	020 JumpIfEqual {78}
	021 Move X1, X31
	022 Call VisualElement.get_layout, X0
	023 Move X8, [X19]
	024 Move X0, X19
	025 Move V8, V2
	026 Move X9, [X8+1896]
	027 Move X1, [X8+1904]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Compare X0, 0
	030 JumpIfEqual {78}
	031 Move X1, X31
	032 Call VisualElement.get_boundingBox, X0
	033 NotImplemented "Instruction FDIV not yet implemented."
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X9, [X8+1896]
	037 Move X1, [X8+1904]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {78}
	041 Move X1, X31
	042 Call VisualElement.get_boundingBox, X0
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 Move S9, 1
	045 Move X0, [X19+1048]
	046 Compare X0, 0
	047 JumpIfEqual {78}
	048 Move X1, X31
	049 Call VisualElement.get_layout, X0
	050 Move X8, [X19]
	051 Move X0, X19
	052 Move V9, V3
	053 Move X9, [X8+1896]
	054 Move X1, [X8+1904]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Compare X0, 0
	057 JumpIfEqual {78}
	058 Move X1, X31
	059 Call VisualElement.get_boundingBox, X0
	060 NotImplemented "Instruction FDIV not yet implemented."
	061 Move X0, [X19+1056]
	062 Compare X0, 0
	063 JumpIfEqual {78}
	064 Move V0, V8
	065 Move X1, X31
	066 Call Scroller.Adjust, X0, V0
	067 Move X0, [X19+1064]
	068 Compare X0, 0
	069 JumpIfEqual {78}
	070 Move X30, [X31+16]
	071 Move X19, [X31+24]
	072 Move V0, V9
	073 Move X1, X31
	074 Move D9, [X31+32]
	075 Move D8, [X31+40]
	076 Call Scroller.Adjust, X0, V0
	077 Return 
	078 Call 0x1C17F20

Method: System.Void UpdateScrollers(System.Boolean displayHorizontal, System.Boolean displayVertical)

Disassembly:
	0x03D7EA78 FMAX S0, S0, S1
	0x03D7EA7C STR S0, [X0 + 0x3F4]
	0x03D7EA80 RET
	0x03D7EA84 LDR V0, [X0 + 0x400]
	0x03D7EA88 RET
	0x03D7EA8C FMOV S1, W31
	0x03D7EA90 FMAX S0, S0, S1
	0x03D7EA94 STR S0, [X0 + 0x400]
	0x03D7EA98 RET
	0x03D7EA9C LDR W0, [X0 + 0x404]
	0x03D7EAA0 RET
	0x03D7EAA4 STP X30, X21, [X31 - 0x20]!
	0x03D7EAA8 STP X20, X19, [X31 + 0x10]
	0x03D7EAAC ADRP X21, 0x669000
	0x03D7EAB0 LDRB W8, [X21 + 0xDB7]
	0x03D7EAB4 MOV W20, W1
	0x03D7EAB8 MOV X19, X0
	0x03D7EABC TBNZ X8, 0x0, 0x3D7EAD4
	0x03D7EAC0 ADRP X0, 0x3E9000
	0x03D7EAC4 LDR X0, [X0 + 0x2E0]
	0x03D7EAC8 BL 0x1C16CF4
	0x03D7EACC MOVZ W8, 0x1
	0x03D7EAD0 STRB W8, [X21 + 0xDB7]
	0x03D7EAD4 LDR X8, [X19 + 0x420]
	0x03D7EAD8 STR W20, [X19 + 0x404]
	0x03D7EADC CBZ X8, 0x3D7EB38
	0x03D7EAE0 LDR X8, [X8 + 0x3D0]
	0x03D7EAE4 CBZ X8, 0x3D7EB38
	0x03D7EAE8 CMP W20, 0x2
	0x03D7EAEC B.NE 0x3D7EB10
	0x03D7EAF0 MOVZ W9, 0x1
	0x03D7EAF4 STRB W9, [X8 + 0x479]
	0x03D7EAF8 LDR X8, [X19 + 0x428]
	0x03D7EAFC CBZ X8, 0x3D7EB38
	0x03D7EB00 LDR X8, [X8 + 0x3D0]
	0x03D7EB04 CBZ X8, 0x3D7EB38
	0x03D7EB08 MOVZ W9, 0x1
	0x03D7EB0C B 0x3D7EB28
	0x03D7EB10 STRB W31, [X8 + 0x479]
	0x03D7EB14 LDR X8, [X19 + 0x428]
	0x03D7EB18 CBZ X8, 0x3D7EB38
	0x03D7EB1C LDR X8, [X8 + 0x3D0]
	0x03D7EB20 CBZ X8, 0x3D7EB38
	0x03D7EB24 MOV W9, W31
	0x03D7EB28 LDP X20, X19, [X31 + 0x10]
	0x03D7EB2C STRB W9, [X8 + 0x479]
	0x03D7EB30 LDP X30, X21, [X31], #0x20
	0x03D7EB34 RET
	0x03D7EB38 BL 0x1C16F20
	0x03D7EB3C LDR W0, [X0 + 0x408]
	0x03D7EB40 RET
	0x03D7EB44 STR W1, [X0 + 0x408]
	0x03D7EB48 RET
	0x03D7EB4C STP X30, X21, [X31 - 0x20]!
	0x03D7EB50 STP X20, X19, [X31 + 0x10]
	0x03D7EB54 ADRP X21, 0x669000
	0x03D7EB58 LDRB W8, [X21 + 0xDB8]
	0x03D7EB5C MOV X20, X1
	0x03D7EB60 MOV X19, X0
	0x03D7EB64 TBNZ X8, 0x0, 0x3D7EBA0
	0x03D7EB68 ADRP X0, 0x376000
	0x03D7EB6C LDR X0, [X0 + 0xE70]
	0x03D7EB70 BL 0x1C16CF4
	0x03D7EB74 ADRP X0, 0x3A0000
	0x03D7EB78 LDR X0, [X0 + 0xAB8]
	0x03D7EB7C BL 0x1C16CF4
	0x03D7EB80 ADRP X0, 0x39D000
	0x03D7EB84 LDR X0, [X0 + 0x680]
	0x03D7EB88 BL 0x1C16CF4
	0x03D7EB8C ADRP X0, 0x3E9000
	0x03D7EB90 LDR X0, [X0 + 0x2E8]
	0x03D7EB94 BL 0x1C16CF4
	0x03D7EB98 MOVZ W8, 0x1
	0x03D7EB9C STRB W8, [X21 + 0xDB8]
	0x03D7EBA0 LDR X8, [X19 + 0x410]
	0x03D7EBA4 STR X20, [X19 + 0x410]
	0x03D7EBA8 CMP X8, X20
	0x03D7EBAC B.EQ 0x3D7ECD4
	0x03D7EBB0 ADRP X20, 0x376000
	0x03D7EBB4 ADRP X21, 0x3E9000
	0x03D7EBB8 LDR X20, [X20 + 0xE70]
	0x03D7EBBC LDR X21, [X21 + 0x2E8]
	0x03D7EBC0 MOV X0, X19
	0x03D7EBC4 MOV X1, X31
	0x03D7EBC8 BL 0x3DF7724
	0x03D7EBCC LDR X8, [X20]
	0x03D7EBD0 MOV X20, X0
	0x03D7EBD4 MOV X0, X8
	0x03D7EBD8 BL 0x1C16F10
	0x03D7EBDC LDR X2, [X21]
	0x03D7EBE0 MOV X1, X19
	0x03D7EBE4 MOV X3, X31
	0x03D7EBE8 MOV X21, X0
	0x03D7EBEC BL 0x3314368
	0x03D7EBF0 CBZ X20, 0x3D7ECE0
	0x03D7EBF4 ADRP X10, 0x39D000
	0x03D7EBF8 LDR X8, [X20]
	0x03D7EBFC LDR X10, [X10 + 0x680]
	0x03D7EC00 LDRH W9, [X8 + 0x12E]
	0x03D7EC04 LDR X1, [X10]
	0x03D7EC08 CBZ X9, 0x3D7EC2C
	0x03D7EC0C LDR X10, [X8 + 0xB0]
	0x03D7EC10 ADD X10, X10, 0x8
	0x03D7EC14 LDUR X11, [X10 - 0x8]
	0x03D7EC18 CMP X11, X1
	0x03D7EC1C B.EQ 0x3D7EC3C
	0x03D7EC20 SUBS X9, X9, 0x1
	0x03D7EC24 ADD X10, X10, 0x10
	0x03D7EC28 B.NE 0x3D7EC14
	0x03D7EC2C MOVZ W2, 0x1
	0x03D7EC30 MOV X0, X20
	0x03D7EC34 BL 0x1C5C788
	0x03D7EC38 B 0x3D7EC4C
	0x03D7EC3C LDR W9, [X10]
	0x03D7EC40 ADD W9, W9, 0x1
	0x03D7EC44 ADD X8, X8, W9, 0x4, SXTW
	0x03D7EC48 ADD X0, X8, 0x138
	0x03D7EC4C LDP X8, X2, [X0]
	0x03D7EC50 MOV X0, X20
	0x03D7EC54 MOV X1, X21
	0x03D7EC58 BLR X8
	0x03D7EC5C CBZ X0, 0x3D7ECE0
	0x03D7EC60 ADRP X10, 0x3A0000
	0x03D7EC64 LDR X8, [X0]
	0x03D7EC68 LDR X21, [X19 + 0x410]
	0x03D7EC6C LDR X10, [X10 + 0xAB8]
	0x03D7EC70 MOV X20, X0
	0x03D7EC74 LDRH W9, [X8 + 0x12E]
	0x03D7EC78 LDR X1, [X10]
	0x03D7EC7C CBZ X9, 0x3D7ECA0
	0x03D7EC80 LDR X10, [X8 + 0xB0]
	0x03D7EC84 ADD X10, X10, 0x8
	0x03D7EC88 LDUR X11, [X10 - 0x8]
	0x03D7EC8C CMP X11, X1
	0x03D7EC90 B.EQ 0x3D7ECB0
	0x03D7EC94 SUBS X9, X9, 0x1
	0x03D7EC98 ADD X10, X10, 0x10
	0x03D7EC9C B.NE 0x3D7EC88
	0x03D7ECA0 MOVZ W2, 0x4
	0x03D7ECA4 MOV X0, X20
	0x03D7ECA8 BL 0x1C5C788
	0x03D7ECAC B 0x3D7ECC0
	0x03D7ECB0 LDR W9, [X10]
	0x03D7ECB4 ADD W9, W9, 0x4
	0x03D7ECB8 ADD X8, X8, W9, 0x4, SXTW
	0x03D7ECBC ADD X0, X8, 0x138
	0x03D7ECC0 LDP X8, X2, [X0]
	0x03D7ECC4 MOV X0, X20
	0x03D7ECC8 MOV X1, X21
	0x03D7ECCC BLR X8
	0x03D7ECD0 STR X0, [X19 + 0x4B0]
	0x03D7ECD4 LDP X20, X19, [X31 + 0x10]
	0x03D7ECD8 LDP X30, X21, [X31], #0x20
	0x03D7ECDC RET
	0x03D7ECE0 BL 0x1C16F20
	0x03D7ECE4 STR X30, [X31 - 0x10]!
	0x03D7ECE8 CBZ X1, 0x3D7ED20
	0x03D7ECEC LDUR V0, [X1 + 0x8C]
	0x03D7ECF0 LDUR V1, [X1 + 0x9C]
	0x03D7ECF4 ADRP X8, 0xFFFFFFFFFCD6B000
	0x03D7ECF8 LDR V2, [X8 + 0xF20]
	0x03D7ECFC FSUB V0.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x03D7ED04 FADDP S0, V0.2S
	0x03D7ED08 FCMP S0, S2
	0x03D7ED0C B.MI 0x3D7ED18
	0x03D7ED10 LDR X30, [X31], #0x10
	0x03D7ED14 B 0x3D7E5B8
	0x03D7ED18 LDR X30, [X31], #0x10
	0x03D7ED1C RET
	0x03D7ED20 BL 0x1C16F20
	0x03D7ED24 STR X30, [X31 - 0x10]!
	0x03D7ED28 CBZ X1, 0x3D7ED60
	0x03D7ED2C LDUR V0, [X1 + 0x8C]
	0x03D7ED30 LDUR V1, [X1 + 0x9C]
	0x03D7ED34 ADRP X8, 0xFFFFFFFFFCD6B000
	0x03D7ED38 LDR V2, [X8 + 0xF20]
	0x03D7ED3C FSUB V0.2S, V0.2S, V1.2S
	0x00000000 INVALID
	0x03D7ED44 FADDP S0, V0.2S
	0x03D7ED48 FCMP S0, S2
	0x03D7ED4C B.MI 0x3D7ED58
	0x03D7ED50 LDR X30, [X31], #0x10
	0x03D7ED54 B 0x3D7E7CC
	0x03D7ED58 LDR X30, [X31], #0x10
	0x03D7ED5C RET
	0x03D7ED60 BL 0x1C16F20
	0x03D7ED64 STP D9, D8, [X31 - 0x30]!
	0x03D7ED68 STP X30, X21, [X31 + 0x10]
	0x03D7ED6C STP X20, X19, [X31 + 0x20]
	0x03D7ED70 CBZ X1, 0x3D7EEA0
	0x03D7ED74 LDR X8, [X0]
	0x03D7ED78 MOV X20, X1
	0x03D7ED7C MOV X19, X0
	0x03D7ED80 LDR X9, [X8 + 0x768]
	0x03D7ED84 LDR X1, [X8 + 0x770]
	0x03D7ED88 BLR X9
	0x03D7ED8C CBZ X0, 0x3D7EE9C
	0x03D7ED90 MOV X1, X20
	0x03D7ED94 MOV X2, X31
	0x03D7ED98 BL 0x3DEF1C0
	0x03D7ED9C TBZ X0, 0x0, 0x3D7EED4
	0x03D7EDA0 ADRP X21, 0x65B000
	0x03D7EDA4 LDRB W8, [X21 + 0x78F]
	0x03D7EDA8 CBNZ W8, 0x3D7EDC0
	0x03D7EDAC ADRP X0, 0x37D000
	0x03D7EDB0 LDR X0, [X0 + 0xF08]
	0x03D7EDB4 BL 0x1C16CF4
	0x03D7EDB8 MOVZ W8, 0x1
	0x03D7EDBC STRB W8, [X21 + 0x78F]
	0x03D7EDC0 ADRP X8, 0x37D000
	0x03D7EDC4 LDR X8, [X8 + 0xF08]
	0x03D7EDC8 MOV X0, X19
	0x03D7EDCC LDR X8, [X8]
	0x03D7EDD0 LDR X8, [X8 + 0xB8]
	0x03D7EDD4 LDR V0, [X8]
	0x03D7EDD8 STR D0, [X19 + 0x470]
	0x03D7EDDC BL 0x3D7DFCC
	0x03D7EDE0 FCMP S0, 0x0
	0x03D7EDE4 FMOV S8, W31
	0x03D7EDE8 B.LE 0x3D7EE1C
	0x03D7EDEC MOV X0, X19
	0x03D7EDF0 MOV X1, X20
	0x03D7EDF4 BL 0x3D7EF1C
	0x03D7EDF8 LDR X21, [X19 + 0x428]
	0x03D7EDFC MOV X0, X19
	0x03D7EE00 MOV V8.16B, V0.16B
	0x03D7EE04 BL 0x3D7E19C
	0x03D7EE08 CBZ X21, 0x3D7EE9C
	0x03D7EE0C FADD S0, S8, S1
	0x03D7EE10 MOV X0, X21
	0x03D7EE14 MOV X1, X31
	0x03D7EE18 BL 0x3D83F10
	0x03D7EE1C MOV X0, X19
	0x03D7EE20 BL 0x3D7DF7C
	0x03D7EE24 FCMP S0, 0x0
	0x03D7EE28 B.LE 0x3D7EE68
	0x03D7EE2C MOV X0, X19
	0x03D7EE30 MOV X1, X20
	0x03D7EE34 BL 0x3D7F0D4
	0x03D7EE38 LDR X20, [X19 + 0x420]
	0x03D7EE3C MOV X0, X19
	0x03D7EE40 MOV V9.16B, V0.16B
	0x03D7EE44 BL 0x3D7E19C
	0x03D7EE48 CBZ X20, 0x3D7EE9C
	0x03D7EE4C FADD S0, S9, S0
	0x03D7EE50 MOV X0, X20
	0x03D7EE54 MOV X1, X31
	0x03D7EE58 BL 0x3D83F10
	0x03D7EE5C FCMP S9, 0x0
	0x03D7EE60 CSET W8, NE
	0x03D7EE64 B 0x3D7EE6C
	0x03D7EE68 MOV W8, W31
	0x03D7EE6C FCMP S8, 0x0
	0x03D7EE70 B.NE 0x3D7EE88
	0x03D7EE74 CBNZ W8, 0x3D7EE88
	0x03D7EE78 LDP X20, X19, [X31 + 0x20]
	0x03D7EE7C LDP X30, X21, [X31 + 0x10]
	0x03D7EE80 LDP D9, D8, [X31], #0x30
	0x03D7EE84 RET
	0x03D7EE88 MOV X0, X19
	0x03D7EE8C LDP X20, X19, [X31 + 0x20]
	0x03D7EE90 LDP X30, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x66A000
	012 Move W8, [X22+3532]
	013 Move W20, W2
	014 Move W21, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x39F000
	021 Move X0, [X0+296]
	022 Call 0x1C17CF4
	023 Move X0, 0x3A0000
	024 Move X0, [X0+3856]
	025 Call 0x1C17CF4
	026 Move X0, 0x3EA000
	027 Move X0, [X0+720]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+3532], W8
	031 Move X0, X19
	032 Call ScrollView.AdjustScrollers, X0
	033 Move X8, [X19]
	034 Move X22, [X19+1056]
	035 Move X0, X19
	036 Move X9, [X8+1896]
	037 Move X1, [X8+1904]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {298}
	041 Move X1, X31
	042 Call VisualElement.get_boundingBox, X0
	043 Move X0, [X19+1048]
	044 Compare X0, 0
	045 JumpIfEqual {298}
	046 Move X1, X31
	047 Move V8, V2
	048 Call VisualElement.get_layout, X0
	049 Compare X22, 0
	050 JumpIfEqual {298}
	051 Subtract S0, S8, S2
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 Move X0, X22
	055 Move X2, X31
	056 Call VisualElement.SetEnabled, X0, X1
	057 Move X8, [X19]
	058 Move X22, [X19+1064]
	059 Move X0, X19
	060 Move X9, [X8+1896]
	061 Move X1, [X8+1904]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X0, 0
	064 JumpIfEqual {298}
	065 Move X1, X31
	066 Call VisualElement.get_boundingBox, X0
	067 Move X0, [X19+1048]
	068 Compare X0, 0
	069 JumpIfEqual {298}
	070 Move X1, X31
	071 Move V8, V3
	072 Call VisualElement.get_layout, X0
	073 Compare X22, 0
	074 JumpIfEqual {298}
	075 Subtract S0, S8, S3
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Move X0, X22
	079 Move X2, X31
	080 Call VisualElement.SetEnabled, X0, X1
	081 Move TEMP, X21
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {88}
	085 Move W8, [X19+972]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CSET not yet implemented."
	088 Move W21, 1
	089 Move X24, 0x3A0000
	090 Move X24, [X24+3856]
	091 Move TEMP, X20
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {97}
	095 Move W8, [X19+976]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W20, 1
	098 Move W20, W31
	099 Move X1, [X24]
	100 Move W0, W21
	101 Call 0x266FACC, X0
	102 Move X8, [X19+1056]
	103 Compare X8, 0
	104 JumpIfEqual {298}
	105 Move X22, X0
	106 Move X0, X8
	107 Move X1, X31
	108 Call VisualElement.get_style, X0
	109 Compare X0, 0
	110 JumpIfEqual {298}
	111 Move X25, 0x39F000
	112 Move X8, [X0]
	113 Move X25, [X25+296]
	114 Move X26, 0x3EA000
	115 Move X23, X0
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Move X1, [X25]
	118 Move X26, [X26+720]
	119 Compare X9, 0
	120 JumpIfEqual {127}
	121 Move X10, [X8+176]
	122 Add X10, X10, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X9, X9, 1
	126 Add X10, X10, 16
	127 Move W2, 17
	128 Move X0, X23
	129 Call 0x1C5D788
	130 Move W9, [X10]
	131 Add W9, W9, 17
	132 Add X8, X8, W9
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X1, [X0+8]
	136 Move X0, X23
	137 NotImplemented "Instruction BLR not yet implemented."
	138 Move X2, [X26]
	139 Move X1, X0
	140 Move X0, X22
	141 Call 0x266FA1C, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {181}
	146 Move X0, [X19+1056]
	147 Compare X0, 0
	148 JumpIfEqual {298}
	149 Move X1, X31
	150 Call VisualElement.get_style, X0
	151 Move X1, [X24]
	152 Move X22, X0
	153 Move W0, W21
	154 Call 0x266FACC, X0
	155 Compare X22, 0
	156 JumpIfEqual {298}
	157 Move X8, [X22]
	158 Move X1, [X25]
	159 Move X21, X0
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move W2, 18
	170 Move X0, X22
	171 Call 0x1C5D788
	172 Move W9, [X10]
	173 Add W9, W9, 18
	174 Add X8, X8, W9
	175 Add X0, X8, 312
	176 Move X8, [X0]
	177 Move X2, [X0+8]
	178 Move X0, X22
	179 Move X1, X21
	180 NotImplemented "Instruction BLR not yet implemented."
	181 Move X1, [X24]
	182 Move W0, W20
	183 Call 0x266FACC, X0
	184 Move X8, [X19+1064]
	185 Compare X8, 0
	186 JumpIfEqual {298}
	187 Move X21, X0
	188 Move X0, X8
	189 Move X1, X31
	190 Call VisualElement.get_style, X0
	191 Compare X0, 0
	192 JumpIfEqual {298}
	193 Move X8, [X0]
	194 Move X1, [X25]
	195 Move X22, X0
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move W2, 17
	206 Move X0, X22
	207 Call 0x1C5D788
	208 Move W9, [X10]
	209 Add W9, W9, 17
	210 Add X8, X8, W9
	211 Add X0, X8, 312
	212 Move X8, [X0]
	213 Move X1, [X0+8]
	214 Move X0, X22
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X2, [X26]
	217 Move X1, X0
	218 Move X0, X21
	219 Call 0x266FA1C, X0, X1
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {259}
	224 Move X0, [X19+1064]
	225 Compare X0, 0
	226 JumpIfEqual {298}
	227 Move X1, X31
	228 Call VisualElement.get_style, X0
	229 Move X1, [X24]
	230 Move X21, X0
	231 Move W0, W20
	232 Call 0x266FACC, X0
	233 Compare X21, 0
	234 JumpIfEqual {298}
	235 Move X8, [X21]
	236 Move X1, [X25]
	237 Move X20, X0
	238 NotImplemented "Instruction LDRH not yet implemented."
	239 Compare X9, 0
	240 JumpIfEqual {247}
	241 Move X10, [X8+176]
	242 Add X10, X10, 8
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Subtract X9, X9, 1
	246 Add X10, X10, 16
	247 Move W2, 18
	248 Move X0, X21
	249 Call 0x1C5D788
	250 Move W9, [X10]
	251 Add W9, W9, 18
	252 Add X8, X8, W9
	253 Add X0, X8, 312
	254 Move X8, [X0]
	255 Move X2, [X0+8]
	256 Move X0, X21
	257 Move X1, X20
	258 NotImplemented "Instruction BLR not yet implemented."
	259 Move X0, [X19+1064]
	260 Compare X0, 0
	261 JumpIfEqual {298}
	262 Move S0, W31
	263 Move X1, X31
	264 Call Scroller.set_lowValue, X0, V0
	265 Move X20, [X19+1064]
	266 Move X0, X19
	267 Call ScrollView.get_scrollableHeight, X0
	268 Compare X20, 0
	269 JumpIfEqual {298}
	270 Move X0, X20
	271 Move X1, X31
	272 Call Scroller.set_highValue, X0, V0
	273 Move X0, [X19+1056]
	274 Compare X0, 0
	275 JumpIfEqual {298}
	276 Move S0, W31
	277 Move X1, X31
	278 Call Scroller.set_lowValue, X0, V0
	279 Move X20, [X19+1056]
	280 Move X0, X19
	281 Call ScrollView.get_scrollableWidth, X0
	282 Compare X20, 0
	283 JumpIfEqual {298}
	284 Move X0, X20
	285 Move X20, [X31+64]
	286 Move X19, [X31+72]
	287 Move X22, [X31+48]
	288 Move X21, [X31+56]
	289 Move X24, [X31+32]
	290 Move X23, [X31+40]
	291 Move X26, [X31+16]
	292 Move X25, [X31+24]
	293 Move X30, [X31+8]
	294 Move X1, X31
	295 Move V8, [X31+80]
	296 Call Scroller.set_highValue, X0, V0
	297 Return 
	298 Call 0x1C17F20

Method: System.Void OnScrollersGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03D83B30 LDR X1, [X21]
	0x03D83B34 MOV X20, X0
	0x03D83B38 BL 0x2734B10
	0x03D83B3C CBZ X20, 0x3D83D50
	0x03D83B40 ADRP X8, 0x3E4000
	0x03D83B44 LDR X8, [X8 + 0x508]
	0x03D83B48 LDR X8, [X8]
	0x03D83B4C STR X8, [X20 + 0x10]
	0x03D83B50 STR X20, [X19 + 0x90]
	0x03D83B54 LDR X0, [X22]
	0x03D83B58 BL 0x1C16F10
	0x03D83B5C LDR X1, [X21]
	0x03D83B60 MOV X20, X0
	0x03D83B64 BL 0x2734B10
	0x03D83B68 CBZ X20, 0x3D83D50
	0x03D83B6C ADRP X8, 0x3E4000
	0x03D83B70 LDR X8, [X8 + 0x4E0]
	0x03D83B74 ADRP X21, 0x3E0000
	0x03D83B78 LDR X8, [X8]
	0x03D83B7C LDR X21, [X21 + 0x270]
	0x03D83B80 STR X8, [X20 + 0x10]
	0x03D83B84 STR X20, [X19 + 0x98]
	0x03D83B88 LDR X0, [X21]
	0x03D83B8C BL 0x1C16F10
	0x03D83B90 MOV X1, X31
	0x03D83B94 MOV X20, X0
	0x03D83B98 BL 0x3E1B6CC
	0x03D83B9C CBZ X20, 0x3D83D50
	0x03D83BA0 ADRP X8, 0x3E4000
	0x03D83BA4 LDR X8, [X8 + 0x518]
	0x03D83BA8 MOVZ W22, 0xBF800000
	0x03D83BAC LDR X8, [X8]
	0x03D83BB0 STR W22, [X20 + 0x40]
	0x03D83BB4 STR X8, [X20 + 0x10]
	0x03D83BB8 STR X20, [X19 + 0xA0]
	0x03D83BBC LDR X0, [X21]
	0x03D83BC0 BL 0x1C16F10
	0x03D83BC4 MOV X1, X31
	0x03D83BC8 MOV X20, X0
	0x03D83BCC BL 0x3E1B6CC
	0x03D83BD0 CBZ X20, 0x3D83D50
	0x03D83BD4 ADRP X8, 0x3E4000
	0x03D83BD8 LDR X8, [X8 + 0x4D8]
	0x03D83BDC LDR X8, [X8]
	0x03D83BE0 STR W22, [X20 + 0x40]
	0x03D83BE4 STR X8, [X20 + 0x10]
	0x03D83BE8 STR X20, [X19 + 0xA8]
	0x03D83BEC LDR X0, [X21]
	0x03D83BF0 BL 0x1C16F10
	0x03D83BF4 MOV X1, X31
	0x03D83BF8 MOV X20, X0
	0x03D83BFC BL 0x3E1B6CC
	0x03D83C00 CBZ X20, 0x3D83D50
	0x03D83C04 ADRP X8, 0x3E4000
	0x03D83C08 LDR X8, [X8 + 0x4C8]
	0x03D83C0C ADRP X9, 0x3E4000
	0x03D83C10 MOVZ W10, 0x41900000
	0x03D83C14 LDR X8, [X8]
	0x03D83C18 LDR X9, [X9 + 0x4B0]
	0x03D83C1C STR W10, [X20 + 0x40]
	0x03D83C20 STR X8, [X20 + 0x10]
	0x03D83C24 STR X20, [X19 + 0xB0]
	0x03D83C28 LDR X0, [X9]
	0x03D83C2C ADRP X20, 0x3E4000
	0x03D83C30 LDR X20, [X20 + 0x4A0]
	0x03D83C34 BL 0x1C16F10
	0x03D83C38 LDR X1, [X20]
	0x03D83C3C MOV X20, X0
	0x03D83C40 BL 0x2734B10
	0x03D83C44 CBZ X20, 0x3D83D50
	0x03D83C48 ADRP X8, 0x3E4000
	0x03D83C4C LDR X8, [X8 + 0x4E8]
	0x03D83C50 MOVZ W9, 0x2
	0x03D83C54 LDR X8, [X8]
	0x03D83C58 STR W9, [X20 + 0x40]
	0x03D83C5C STR X8, [X20 + 0x10]
	0x03D83C60 STR X20, [X19 + 0xB8]
	0x03D83C64 LDR X0, [X21]
	0x03D83C68 BL 0x1C16F10
	0x03D83C6C MOV X1, X31
	0x03D83C70 MOV X20, X0
	0x03D83C74 BL 0x3E1B6CC
	0x03D83C78 CBZ X20, 0x3D83D50
	0x03D83C7C ADRP X8, 0x3E4000
	0x03D83C80 LDR X8, [X8 + 0x500]
	0x03D83C84 ADRP X22, 0x39A000
	0x03D83C88 LDR X8, [X8]
	0x03D83C8C LDR X22, [X22 + 0x678]
	0x03D83C90 STR X8, [X20 + 0x10]
	0x03D83C94 LDR X0, [X22]
	0x03D83C98 LDR W8, [X0 + 0xE0]
	0x03D83C9C CBNZ W8, 0x3D83CA8
	0x03D83CA0 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x665000
	007 Move W8, [X21+3533]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x39A000
	015 Move X0, [X0+296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3533], W8
	019 Compare X20, 0
	020 JumpIfEqual {103}
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move X8, -53055488
	024 Move V2, [X8+3872]
	025 Subtract V0, V0, V1
	026 NotImplemented "Instruction INVALID not yet implemented."
	027 NotImplemented "Instruction FADDP not yet implemented."
	028 NotImplemented "Instruction FCMP not yet implemented."
	029 Move W9, [X19+1104]
	030 Move W8, [X19+972]
	031 Compare W9, 0
	032 JumpIfEqual {76}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X19+1056]
	035 Compare X0, 0
	036 JumpIfEqual {103}
	037 Move X1, X31
	038 Call VisualElement.get_style, X0
	039 Move X8, [X19+1064]
	040 Compare X8, 0
	041 JumpIfEqual {103}
	042 Move X20, X0
	043 Move X0, X8
	044 Move X1, X31
	045 Call VisualElement.get_layout, X0
	046 Move V0, V2
	047 Move X0, X31
	048 Call StyleLength.op_Implicit, V0
	049 Compare X20, 0
	050 JumpIfEqual {103}
	051 Move X11, 0x39A000
	052 Move X9, [X20]
	053 Move X11, [X11+296]
	054 Move X8, X1
	055 Move X21, X0
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X11]
	058 And X22, X8, 0
	059 Compare X10, 0
	060 JumpIfEqual {67}
	061 Move X8, [X9+176]
	062 Add X8, X8, 8
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract X10, X10, 1
	066 Add X8, X8, 16
	067 Move W2, 28
	068 Move X0, X20
	069 Call 0x1C5D788
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return 
	076 Compare W8, 0
	077 JumpIfNotEqual {95}
	078 Move X0, X19
	079 Call ScrollView.get_scrollableWidth, X0
	080 Move X8, -53051392
	081 Move V1, [X8+1040]
	082 NotImplemented "Instruction FCMP not yet implemented."
	083 Move W8, [X19+972]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W8, [X8]
	086 Add W8, W8, 28
	087 Add X8, X9, W8
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X3, [X0+8]
	091 Move X0, X20
	092 Move X1, X21
	093 Move X2, X22
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X0, X19
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X30, [X31+48]
	101 Call ScrollView.AdjustScrollers, X0
	102 Return 
	103 Call 0x1C17F20

Method: System.Void OnScrollWheel(UnityEngine.UIElements.WheelEvent evt)

Disassembly:
	0x03D83CA4 LDR X0, [X22]
	0x03D83CA8 LDR X8, [X0 + 0xB8]
	0x03D83CAC LDR V0, [X8]
	0x03D83CB0 STR S0, [X20 + 0x40]
	0x03D83CB4 STR X20, [X19 + 0xC0]
	0x03D83CB8 LDR X0, [X21]
	0x03D83CBC BL 0x1C16F10
	0x03D83CC0 MOV X1, X31
	0x03D83CC4 MOV X20, X0
	0x03D83CC8 BL 0x3E1B6CC
	0x03D83CCC CBZ X20, 0x3D83D50
	0x03D83CD0 ADRP X8, 0x3E4000
	0x03D83CD4 LDR X8, [X8 + 0x4D0]
	0x03D83CD8 LDR X8, [X8]
	0x03D83CDC STR X8, [X20 + 0x10]
	0x03D83CE0 LDR X8, [X22]
	0x03D83CE4 LDR X8, [X8 + 0xB8]
	0x03D83CE8 LDR V0, [X8 + 0x4]
	0x03D83CEC ADRP X8, 0x3E4000
	0x03D83CF0 LDR X8, [X8 + 0x2C8]
	0x03D83CF4 STR S0, [X20 + 0x40]
	0x03D83CF8 STR X20, [X19 + 0xC8]
	0x03D83CFC LDR X0, [X8]
	0x03D83D00 BL 0x1C16F10
	0x03D83D04 MOV X1, X31
	0x03D83D08 MOV X20, X0
	0x03D83D0C BL 0x3E1C690
	0x03D83D10 CBZ X20, 0x3D83D50
	0x03D83D14 ADRP X8, 0x3E4000
	0x03D83D18 LDR X8, [X8 + 0x4F8]
	0x03D83D1C MOV X0, X19
	0x03D83D20 MOV X1, X31
	0x03D83D24 LDR X8, [X8]
	0x03D83D28 STR X8, [X20 + 0x10]
	0x03D83D2C LDR X8, [X22]
	0x03D83D30 LDP X22, X21, [X31 + 0x10]
	0x03D83D34 LDR X8, [X8 + 0xB8]
	0x03D83D38 LDR X8, [X8 + 0x8]
	0x03D83D3C STR X8, [X20 + 0x40]
	0x03D83D40 STR X20, [X19 + 0xD0]
	0x03D83D44 LDP X20, X19, [X31 + 0x20]
	0x03D83D48 LDR X30, [X31], #0x30
	0x03D83D4C B 0x3DF8490
	0x03D83D50 BL 0x1C16F20
	0x03D83D54 STR X30, [X31 - 0x40]!
	0x03D83D58 STP X24, X23, [X31 + 0x10]
	0x03D83D5C STP X22, X21, [X31 + 0x20]
	0x03D83D60 STP X20, X19, [X31 + 0x30]
	0x03D83D64 ADRP X21, 0x664000
	0x03D83D68 LDRB W8, [X21 + 0xDD3]
	0x03D83D6C MOV X19, X1
	0x03D83D70 MOV X20, X0
	0x03D83D74 TBNZ X8, 0x0, 0x3D83D8C
	0x03D83D78 ADRP X0, 0x372000
	0x03D83D7C LDR X0, [X0 + 0x5B0]
	0x03D83D80 BL 0x1C16CF4
	0x03D83D84 MOVZ W8, 0x1
	0x03D83D88 STRB W8, [X21 + 0xDD3]
	0x03D83D8C ADRP X24, 0x372000
	0x03D83D90 LDR X21, [X20 + 0x3C8]
	0x03D83D94 LDR X24, [X24 + 0x5B0]
	0x03D83D98 ADD X20, X20, 0x3C8
	0x03D83D9C MOV X0, X21
	0x03D83DA0 MOV X1, X19
	0x03D83DA4 MOV X2, X31
	0x03D83DA8 BL 0x33C0DE4
	0x03D83DAC CBZ X0, 0x3D83DCC
	0x03D83DB0 LDR X23, [X24]
	0x03D83DB4 MOV X22, X0
	0x03D83DB8 MOV X1, X23
	0x03D83DBC BL 0x1C16E00
	0x03D83DC0 MOV X1, X0
	0x03D83DC4 CBNZ X0, 0x3D83DD0
	0x03D83DC8 B 0x3D83DFC
	0x03D83DCC MOV X1, X31
	0x03D83DD0 MOV X0, X20
	0x03D83DD4 MOV X2, X21
	0x03D83DD8 BL 0x1C24138
	0x03D83DDC CMP X21, X0
	0x03D83DE0 MOV X21, X0
	0x03D83DE4 B.NE 0x3D83D9C
	0x03D83DE8 LDP X20, X19, [X31 + 0x30]
	0x03D83DEC LDP X22, X21, [X31 + 0x20]
	0x03D83DF0 LDP X24, X23, [X31 + 0x10]
	0x03D83DF4 LDR X30, [X31], #0x40
	0x03D83DF8 RET
	0x03D83DFC MOV X0, X22
	0x03D83E00 MOV X1, X23
	0x03D83E04 BL 0x1C171E0
	0x03D83E08 STR X30, [X31 - 0x40]!
	0x03D83E0C STP X24, X23, [X31 + 0x10]
	0x03D83E10 STP X22, X21, [X31 + 0x20]
	0x03D83E14 STP X20, X19, [X31 + 0x30]
	0x03D83E18 ADRP X21, 0x664000
	0x03D83E1C LDRB W8, [X21 + 0xDD4]
	0x03D83E20 MOV X19, X1
	0x03D83E24 MOV X20, X0
	0x03D83E28 TBNZ X8, 0x0, 0x3D83E40
	0x03D83E2C ADRP X0, 0x372000
	0x03D83E30 LDR X0, [X0 + 0x5B0]
	0x03D83E34 BL 0x1C16CF4
	0x03D83E38 MOVZ W8, 0x1
	0x03D83E3C STRB W8, [X21 + 0xDD4]
	0x03D83E40 ADRP X24, 0x372000
	0x03D83E44 LDR X21, [X20 + 0x3C8]
	0x03D83E48 LDR X24, [X24 + 0x5B0]
	0x03D83E4C ADD X20, X20, 0x3C8
	0x03D83E50 MOV X0, X21
	0x03D83E54 MOV X1, X19
	0x03D83E58 MOV X2, X31
	0x03D83E5C BL 0x33C0FDC
	0x03D83E60 CBZ X0, 0x3D83E80
	0x03D83E64 LDR X23, [X24]
	0x03D83E68 MOV X22, X0
	0x03D83E6C MOV X1, X23
	0x03D83E70 BL 0x1C16E00
	0x03D83E74 MOV X1, X0
	0x03D83E78 CBNZ X0, 0x3D83E84
	0x03D83E7C B 0x3D83EB0
	0x03D83E80 MOV X1, X31
	0x03D83E84 MOV X0, X20
	0x03D83E88 MOV X2, X21
	0x03D83E8C BL 0x1C24138
	0x03D83E90 CMP X21, X0
	0x03D83E94 MOV X21, X0
	0x03D83E98 B.NE 0x3D83E50
	0x03D83E9C LDP X20, X19, [X31 + 0x30]
	0x03D83EA0 LDP X22, X21, [X31 + 0x20]
	0x03D83EA4 LDP X24, X23, [X31 + 0x10]
	0x03D83EA8 LDR X30, [X31], #0x40
	0x03D83EAC RET
	0x03D83EB0 MOV X0, X22
	0x03D83EB4 MOV X1, X23
	0x03D83EB8 BL 0x1C171E0
	0x03D83EBC LDR X0, [X0 + 0x3D0]
	0x03D83EC0 RET
	0x03D83EC4 STR X1, [X0 + 0x3D0]
	0x03D83EC8 RET
	0x03D83ECC LDR X0, [X0 + 0x3D8]
	0x03D83ED0 RET
	0x03D83ED4 STR X1, [X0 + 0x3D8]
	0x03D83ED8 RET
	0x03D83EDC LDR X0, [X0 + 0x3E0]
	0x03D83EE0 RET
	0x03D83EE4 STR X1, [X0 + 0x3E0]
	0x03D83EE8 RET
	0x03D83EEC STR X30, [X31 - 0x10]!
	0x03D83EF0 LDR X0, [X0 + 0x3D0]
	0x03D83EF4 CBZ X0, 0x3D83F0C
	0x03D83EF8 LDR X8, [X0]
	0x03D83EFC LDR X2, [X8 + 0x7E8]
	0x03D83F00 LDR X1, [X8 + 0x7F0]
	0x03D83F04 LDR X30, [X31], #0x10
	0x03D83F08 BR X2
	0x03D83F0C BL 0x1C16F20
	0x03D83F10 STR X30, [X31 - 0x10]!
	0x03D83F14 LDR X0, [X0 + 0x3D0]
	0x03D83F18 CBZ X0, 0x3D83F30
	0x03D83F1C LDR X8, [X0]
	0x03D83F20 LDR X2, [X8 + 0x7F8]
	0x03D83F24 LDR X1, [X8 + 0x800]
	0x03D83F28 LDR X30, [X31], #0x10
	0x03D83F2C BR X2
	0x03D83F30 BL 0x1C16F20
	0x03D83F34 STR X30, [X31 - 0x20]!
	0x03D83F38 STP X20, X19, [X31 + 0x10]
	0x03D83F3C ADRP X20, 0x664000
	0x03D83F40 LDRB W8, [X20 + 0xDD5]
	0x03D83F44 MOV X19, X0
	0x03D83F48 TBNZ X8, 0x0, 0x3D83F60
	0x03D83F4C ADRP X0, 0x3E4000
	0x03D83F50 LDR X0, [X0 + 0x528]
	0x03D83F54 BL 0x1C16CF4
	0x03D83F58 MOVZ W8, 0x1
	0x03D83F5C STRB W8, [X20 + 0xDD5]
	0x03D83F60 LDR X0, [X19 + 0x3D0]
	0x03D83F64 CBZ X0, 0x3D83F80
	0x03D83F68 ADRP X8, 0x3E4000
	0x03D83F6C LDR X8, [X8 + 0x528]
	0x03D83F70 LDP X20, X19, [X31 + 0x10]
	0x03D83F74 LDR X1, [X8]
	0x03D83F78 LDR X30, [X31], #0x20
	0x03D83F7C B 0x28BF4FC
	0x03D83F80 BL 0x1C16F20
	0x03D83F84 STR D8, [X31 - 0x20]!
	0x03D83F88 STR X30, [X31 + 0x8]
	0x03D83F8C STP X20, X19, [X31 + 0x10]
	0x03D83F90 ADRP X20, 0x664000
	0x03D83F94 LDRB W8, [X20 + 0xDD6]
	0x03D83F98 MOV V8.16B, V0.16B
	0x03D83F9C MOV X19, X0
	0x03D83FA0 TBNZ X8, 0x0, 0x3D83FB8
	0x03D83FA4 ADRP X0, 0x3E4000
	0x03D83FA8 LDR X0, [X0 + 0x530]
	0x03D83FAC BL 0x1C16CF4
	0x03D83FB0 MOVZ W8, 0x1
	0x03D83FB4 STRB W8, [X20 + 0xDD6]
	0x03D83FB8 LDR X0, [X19 + 0x3D0]
	0x03D83FBC CBZ X0, 0x3D83FE0
	0x03D83FC0 ADRP X8, 0x3E4000
	0x03D83FC4 LDR X8, [X8 + 0x530]
	0x03D83FC8 LDP X20, X19, [X31 + 0x10]
	0x03D83FCC LDR X30, [X31 + 0x8]
	0x03D83FD0 MOV V0.16B, V8.16B
	0x03D83FD4 LDR X1, [X8]
	0x03D83FD8 LDR V8, [X31], #0x20
	0x03D83FDC B 0x28BF504
	0x03D83FE0 BL 0x1C16F20
	0x03D83FE4 STR X30, [X31 - 0x20]!
	0x03D83FE8 STP X20, X19, [X31 + 0x10]
	0x03D83FEC ADRP X20, 0x664000
	0x03D83FF0 LDRB W8, [X20 + 0xDD7]
	0x03D83FF4 MOV X19, X0
	0x03D83FF8 TBNZ X8, 0x0, 0x3D84010
	0x03D83FFC ADRP X0, 0x3E4000
	0x03D84000 LDR X0, [X0 + 0x538]
	0x03D84004 BL 0x1C16CF4
	0x03D84008 MOVZ W8, 0x1
	0x03D8400C STRB W8, [X20 + 0xDD7]
	0x03D84010 LDR X0, [X19 + 0x3D0]
	0x03D84014 CBZ X0, 0x3D84030

ISIL:
	001 Move [X31-96], D13
	002 Move [X31-88], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move W8, [X0+1104]
	014 Move X19, X0
	015 Move X20, X1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W21, 1
	018 Move X8, [X19]
	019 Move X0, X19
	020 Move X9, [X8+1896]
	021 Move X1, [X8+1904]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfEqual {256}
	025 Move X1, X31
	026 Call VisualElement.get_boundingBox, X0
	027 Move X0, X19
	028 Move X1, X31
	029 Move V8, V3
	030 Call VisualElement.get_layout, X0
	031 Move W8, [X19+1104]
	032 Subtract S0, S8, S3
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 NotImplemented "Instruction CSET not yet implemented."
	035 Compare W8, 0
	036 JumpIfEqual {253}
	037 Move X8, [X19]
	038 Move X0, X19
	039 Move X9, [X8+1896]
	040 Move X1, [X8+1904]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X0, 0
	043 JumpIfEqual {256}
	044 Move X1, X31
	045 Call VisualElement.get_boundingBox, X0
	046 Move X0, X19
	047 Move X1, X31
	048 Move V8, V2
	049 Call VisualElement.get_layout, X0
	050 Subtract S0, S8, S2
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Compare X20, 0
	054 JumpIfEqual {256}
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W11, [X19+996]
	057 Xor W8, W21, 1
	058 NotImplemented "Instruction CSET not yet implemented."
	059 Or W8, W14, W8
	060 Add X9, X20, 184
	061 Add X10, X20, 188
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W12, 1008
	064 Move W13, 992
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move V11, [X8]
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move V12, [X19]
	070 Move TEMP, X21
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {77}
	074 Move W23, W31
	075 Compare W22, 0
	076 JumpIfNotEqual {151}
	077 Move X0, [X19+1064]
	078 Compare X0, 0
	079 JumpIfEqual {256}
	080 Move X1, X31
	081 Call Scroller.get_value, X0
	082 Move X21, [X19+1064]
	083 Compare X21, 0
	084 JumpIfEqual {256}
	085 Move X0, X21
	086 Move X1, X31
	087 Move V8, V0
	088 Call Scroller.get_value, X0
	089 Move X0, [X19+1064]
	090 Compare X0, 0
	091 JumpIfEqual {256}
	092 Move V13, [X20+188]
	093 Move X1, X31
	094 Move V9, V0
	095 Call Scroller.get_lowValue, X0
	096 Move X0, [X19+1064]
	097 Compare X0, 0
	098 JumpIfEqual {256}
	099 Move X1, X31
	100 Move V10, V0
	101 Call Scroller.get_highValue, X0
	102 NotImplemented "Instruction FNEG not yet implemented."
	103 NotImplemented "Instruction FCMP not yet implemented."
	104 NotImplemented "Instruction FCSEL not yet implemented."
	105 Multiply S0, S12, S0
	106 Add S0, S9, S0
	107 Move X0, X21
	108 Move X1, X31
	109 Call Scroller.set_value, X0, V0
	110 Move W8, [X19+1032]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, [X19+1064]
	113 Compare X0, 0
	114 JumpIfEqual {256}
	115 Move X1, X31
	116 Call Scroller.get_value, X0
	117 Move X21, 0x657000
	118 Move W8, [X21+1450]
	119 Move V9, V0
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move X0, 0x378000
	123 Move X0, [X0+1208]
	124 Call 0x1C17CF4
	125 Move W8, 1
	126 Move [X21+1450], W8
	127 Move X8, 0x378000
	128 Move X8, [X8+1208]
	129 Move X9, -53051392
	130 Move V0, [X9+576]
	131 NotImplemented "Instruction FABS not yet implemented."
	132 Move X8, [X8]
	133 NotImplemented "Instruction FABS not yet implemented."
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 NotImplemented "Instruction FCSEL not yet implemented."
	136 Move X8, [X8+184]
	137 Multiply S0, S1, S0
	138 Move S1, 8
	139 Move V3, [X8]
	140 Multiply S1, S3, S1
	141 NotImplemented "Instruction FCMP not yet implemented."
	142 NotImplemented "Instruction FCSEL not yet implemented."
	143 NotImplemented "Instruction FABD not yet implemented."
	144 NotImplemented "Instruction FCMP not yet implemented."
	145 Move X0, X20
	146 Move X1, X31
	147 Call EventBase.StopPropagation, X0
	148 Move W23, 1
	149 Compare W22, 0
	150 JumpIfEqual {218}
	151 Move X0, [X19+1056]
	152 Compare X0, 0
	153 JumpIfEqual {256}
	154 Move X1, X31
	155 Call Scroller.get_value, X0
	156 Move X21, [X19+1056]
	157 Compare X21, 0
	158 JumpIfEqual {256}
	159 Move X0, X21
	160 Move X1, X31
	161 Move V8, V0
	162 Call Scroller.get_value, X0
	163 Move X0, [X19+1056]
	164 Compare X0, 0
	165 JumpIfEqual {256}
	166 Move X1, X31
	167 Move V9, V0
	168 Call Scroller.get_lowValue, X0
	169 Move X0, [X19+1056]
	170 Compare X0, 0
	171 JumpIfEqual {256}
	172 Move X1, X31
	173 Move V10, V0
	174 Call Scroller.get_highValue, X0
	175 NotImplemented "Instruction FNEG not yet implemented."
	176 NotImplemented "Instruction FCMP not yet implemented."
	177 NotImplemented "Instruction FCSEL not yet implemented."
	178 Multiply S0, S12, S0
	179 Add S0, S9, S0
	180 Move X0, X21
	181 Move X1, X31
	182 Call Scroller.set_value, X0, V0
	183 Move W8, [X19+1032]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X0, [X19+1056]
	186 Compare X0, 0
	187 JumpIfEqual {256}
	188 Move X1, X31
	189 Call Scroller.get_value, X0
	190 Move X21, 0x657000
	191 Move W8, [X21+1450]
	192 Move V9, V0
	193 Compare W8, 0
	194 JumpIfNotEqual {200}
	195 Move X0, 0x378000
	196 Move X0, [X0+1208]
	197 Call 0x1C17CF4
	198 Move W8, 1
	199 Move [X21+1450], W8
	200 Move X8, 0x378000
	201 Move X8, [X8+1208]
	202 Move X9, -53051392
	203 Move V0, [X9+576]
	204 NotImplemented "Instruction FABS not yet implemented."
	205 Move X8, [X8]
	206 NotImplemented "Instruction FABS not yet implemented."
	207 NotImplemented "Instruction FCMP not yet implemented."
	208 NotImplemented "Instruction FCSEL not yet implemented."
	209 Move X8, [X8+184]
	210 Multiply S0, S1, S0
	211 Move S1, 8
	212 Move V3, [X8]
	213 Multiply S1, S3, S1
	214 NotImplemented "Instruction FCMP not yet implemented."
	215 NotImplemented "Instruction FCSEL not yet implemented."
	216 NotImplemented "Instruction FABD not yet implemented."
	217 NotImplemented "Instruction FCMP not yet implemented."
	218 Compare W23, 0
	219 JumpIfNotEqual {236}
	220 Move X20, [X31+80]
	221 Move X19, [X31+88]
	222 Move X22, [X31+64]
	223 Move X21, [X31+72]
	224 Move X30, [X31+48]
	225 Move X23, [X31+56]
	226 Move D9, [X31+32]
	227 Move D8, [X31+40]
	228 Move D11, [X31+16]
	229 Move D10, [X31+24]
	230 Move D13, [X31+96]
	231 Move D12, [X31+104]
	232 Return 
	233 Move X0, X20
	234 Move X1, X31
	235 Call EventBase.StopPropagation, X0
	236 Move X0, X19
	237 Call ScrollView.UpdateElasticBehaviour, X0
	238 Move X0, X19
	239 Move X20, [X31+80]
	240 Move X19, [X31+88]
	241 Move X22, [X31+64]
	242 Move X21, [X31+72]
	243 Move X30, [X31+48]
	244 Move X23, [X31+56]
	245 Move D9, [X31+32]
	246 Move D8, [X31+40]
	247 Move D11, [X31+16]
	248 Move D10, [X31+24]
	249 Move D13, [X31+96]
	250 Move D12, [X31+104]
	251 Call ScrollView.UpdateContentViewTransform, X0
	252 Return 
	253 Move W22, W31
	254 Compare X20, 0
	255 JumpIfNotEqual {55}
	256 Call 0x1C17F20

Method: System.Void OnRootCustomStyleResolved(UnityEngine.UIElements.CustomStyleResolvedEvent evt)

Disassembly:
	0x03D84110 BL 0x28BF900

ISIL:
	001 Call ScrollView.ReadSingleLineHeight, X0
	002 Return 

Method: System.Void OnRootPointerUp(UnityEngine.UIElements.PointerUpEvent evt)

Disassembly:
	0x03D84114 LDR X0, [X19 + 0x3D0]
	0x03D84118 CBZ X0, 0x3D842B8

ISIL:
	001 Move [X0+1173], W31
	002 Return 

Method: System.Void ReadSingleLineHeight()

Disassembly:
	0x03D8175C LDR X30, [X31 + 0x18]
	0x03D81760 LDP D9, D8, [X31 + 0x8]
	0x03D81764 LDR V10, [X31], #0x30
	0x03D81768 B 0x3D7E1E4
	0x03D8176C STR D12, [X31 - 0x40]!
	0x03D81770 STP D11, D10, [X31 + 0x8]
	0x03D81774 STP D9, D8, [X31 + 0x18]
	0x03D81778 STR X30, [X31 + 0x28]
	0x03D8177C STP X20, X19, [X31 + 0x30]
	0x03D81780 LDR V0, [X0 + 0x3F4]
	0x03D81784 MOV X19, X0
	0x03D81788 ADRP X20, 0x658000
	0x03D8178C FCMP S0, 0x0
	0x03D81790 B.LE 0x3D8195C
	0x03D81794 LDRB W8, [X20 + 0x78F]
	0x03D81798 LDR V8, [X19 + 0x470]
	0x03D8179C CBNZ W8, 0x3D817B4
	0x03D817A0 ADRP X0, 0x37A000
	0x03D817A4 LDR X0, [X0 + 0xF08]
	0x03D817A8 BL 0x1C16CF4
	0x03D817AC MOVZ W8, 0x1
	0x03D817B0 STRB W8, [X20 + 0x78F]
	0x03D817B4 ADRP X8, 0x37A000
	0x03D817B8 LDR X8, [X8 + 0xF08]
	0x03D817BC ADRP X9, 0xFFFFFFFFFCD68000
	0x03D817C0 LDR V1, [X9 + 0xF20]
	0x03D817C4 LDR X8, [X8]
	0x03D817C8 LDR X8, [X8 + 0xB8]
	0x03D817CC LDR V0, [X8]
	0x03D817D0 LDP S10, S9, [X8]
	0x03D817D4 FSUB V0.2S, V8.2S, V0.2S
	0x00000000 INVALID
	0x03D817DC FADDP S0, V0.2S
	0x03D817E0 FCMP S0, S1
	0x03D817E4 B.MI 0x3D8198C
	0x03D817E8 LDR V11, [X19 + 0x448]
	0x03D817EC FMOV S1, W31
	0x03D817F0 FCMP S11, 0x0
	0x03D817F4 B.LE 0x3D81840
	0x03D817F8 LDR V8, [X19 + 0x3FC]
	0x03D817FC LDR V0, [X19 + 0x3F4]
	0x03D81800 MOV V1.16B, V8.16B
	0x03D81804 BL 0x3EB1B50
	0x03D81808 LDR V3, [X19 + 0x470]
	0x03D8180C LDR V2, [X19 + 0x474]
	0x03D81810 FMOV S1, W31
	0x03D81814 FMUL S3, S3, S0
	0x03D81818 FMUL S2, S2, S0
	0x03D8181C FADD S1, S1, S8
	0x03D81820 FMUL S4, S8, S3
	0x03D81824 FMUL S5, S8, S2
	0x03D81828 FCMP S1, S11
	0x03D8182C FADD S10, S10, S4
	0x03D81830 FADD S9, S9, S5
	0x03D81834 B.MI 0x3D81814
	0x03D81838 STR S3, [X19 + 0x470]
	0x03D8183C STR S2, [X19 + 0x474]
	0x03D81840 FSUB S8, S11, S1
	0x03D81844 FCMP S8, 0x0
	0x03D81848 B.LE 0x3D8188C
	0x03D8184C LDR V0, [X19 + 0x3FC]
	0x03D81850 FCMP S8, S0
	0x03D81854 B.PL 0x3D8188C
	0x03D81858 LDR V0, [X19 + 0x3F4]
	0x03D8185C LDR V11, [X19 + 0x470]
	0x03D81860 LDR V12, [X19 + 0x474]
	0x03D81864 MOV V1.16B, V8.16B

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x667000
	006 Move W8, [X20+3534]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x3E7000
	013 Move X0, [X0+1000]
	014 Call 0x1C17CF4
	015 Move X0, 0x39C000
	016 Move X0, [X0+3736]
	017 Call 0x1C17CF4
	018 Move X0, 0x3E7000
	019 Move X0, [X0+1008]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3534], W8
	023 Move [X31], X31
	024 Move [X31+8], X31
	025 Move [X31+24], X31
	026 Move X0, [X19+984]
	027 Compare X0, 0
	028 JumpIfEqual {67}
	029 Move X1, X31
	030 Call VisualElement.get_computedStyle, X0
	031 Move X8, [X0+56]
	032 Compare X8, 0
	033 JumpIfEqual {67}
	034 Move X0, [X19+984]
	035 Compare X0, 0
	036 JumpIfEqual {84}
	037 Move X1, X31
	038 Call VisualElement.get_computedStyle, X0
	039 Move X0, [X0+56]
	040 Compare X0, 0
	041 JumpIfEqual {84}
	042 Move X8, 0x3E7000
	043 Move X9, 0x3E7000
	044 Move X8, [X8+1008]
	045 Move X9, [X9+1000]
	046 Add X2, X31, 0
	047 Move X1, [X8]
	048 Move X3, [X9]
	049 Call Dictionary`2<Object, StylePropertyValue>.TryGetValue, X0, X1, X2
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {67}
	054 Move X0, [X31]
	055 Compare X0, 0
	056 JumpIfEqual {84}
	057 Move X1, [X31+8]
	058 Add X2, X31, 24
	059 Move X3, X31
	060 Add X20, X31, 24
	061 Call StyleSheet.TryReadDimension, X0, X1, X2
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {79}
	066 Or X8, X20, 7
	067 Move X20, 0x39C000
	068 Move X20, [X20+3736]
	069 Move X0, [X20]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X20]
	075 Move X8, [X0+184]
	076 Add X8, X8, 40
	077 Move V0, [X8]
	078 Move [X19+992], S0
	079 Move X20, [X31+32]
	080 Move X19, [X31+40]
	081 Move X30, [X31+16]
	082 Add X31, X31, 48
	083 Return 
	084 Call 0x1C17F20

Method: System.Void UpdateElasticBehaviour()

Disassembly:
	0x03D84018 ADRP X8, 0x3E3000
	0x03D8401C LDR X8, [X8 + 0x538]
	0x03D84020 LDP X20, X19, [X31 + 0x10]
	0x03D84024 LDR X1, [X8]
	0x03D84028 LDR X30, [X31], #0x20
	0x03D8402C B 0x28BF5A4
	0x03D84030 BL 0x1C16F20
	0x03D84034 STR D8, [X31 - 0x20]!
	0x03D84038 STR X30, [X31 + 0x8]
	0x03D8403C STP X20, X19, [X31 + 0x10]
	0x03D84040 ADRP X20, 0x663000
	0x03D84044 LDRB W8, [X20 + 0xDD8]
	0x03D84048 MOV V8.16B, V0.16B
	0x03D8404C MOV X19, X0
	0x03D84050 TBNZ X8, 0x0, 0x3D84068
	0x03D84054 ADRP X0, 0x3E3000
	0x03D84058 LDR X0, [X0 + 0x540]
	0x03D8405C BL 0x1C16CF4
	0x03D84060 MOVZ W8, 0x1
	0x03D84064 STRB W8, [X20 + 0xDD8]
	0x03D84068 LDR X0, [X19 + 0x3D0]
	0x03D8406C CBZ X0, 0x3D84090
	0x03D84070 ADRP X8, 0x3E3000
	0x03D84074 LDR X8, [X8 + 0x540]
	0x03D84078 LDP X20, X19, [X31 + 0x10]
	0x03D8407C LDR X30, [X31 + 0x8]
	0x03D84080 MOV V0.16B, V8.16B
	0x03D84084 LDR X1, [X8]
	0x03D84088 LDR V8, [X31], #0x20
	0x03D8408C B 0x28BF5AC
	0x03D84090 BL 0x1C16F20
	0x03D84094 STP X30, X23, [X31 - 0x30]!
	0x03D84098 STP X22, X21, [X31 + 0x10]
	0x03D8409C STP X20, X19, [X31 + 0x20]
	0x03D840A0 ADRP X20, 0x663000
	0x03D840A4 LDRB W8, [X20 + 0xDD9]
	0x03D840A8 MOV W21, W1
	0x03D840AC MOV X19, X0
	0x03D840B0 TBNZ X8, 0x0, 0x3D840F8
	0x03D840B4 ADRP X0, 0x3E3000
	0x03D840B8 LDR X0, [X0 + 0x548]
	0x03D840BC BL 0x1C16CF4
	0x03D840C0 ADRP X0, 0x3E3000
	0x03D840C4 LDR X0, [X0 + 0x550]
	0x03D840C8 BL 0x1C16CF4
	0x03D840CC ADRP X0, 0x398000
	0x03D840D0 LDR X0, [X0 + 0x128]
	0x03D840D4 BL 0x1C16CF4
	0x03D840D8 ADRP X0, 0x3E3000
	0x03D840DC LDR X0, [X0 + 0x380]
	0x03D840E0 BL 0x1C16CF4
	0x03D840E4 ADRP X0, 0x3DE000
	0x03D840E8 LDR X0, [X0 + 0xC90]
	0x03D840EC BL 0x1C16CF4
	0x03D840F0 MOVZ W8, 0x1
	0x03D840F4 STRB W8, [X20 + 0xDD9]
	0x03D840F8 LDR X0, [X19 + 0x3D0]
	0x03D840FC CBZ X0, 0x3D842B8
	0x03D84100 ADRP X8, 0x3E3000
	0x03D84104 LDR X8, [X8 + 0x548]
	0x03D84108 MOV W1, W21
	0x03D8410C LDR X2, [X8]

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Move W8, [X0+1028]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X0
	008 Move X0, [X0+1056]
	009 Compare X0, 0
	010 JumpIfEqual {76}
	011 Move X1, X31
	012 Call Scroller.get_lowValue, X0
	013 Move X0, [X19+1056]
	014 Compare X0, 0
	015 JumpIfEqual {76}
	016 Move X1, X31
	017 Move V8, V0
	018 Call Scroller.get_highValue, X0
	019 Move X0, [X19+1064]
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 NotImplemented "Instruction FCSEL not yet implemented."
	022 Compare X0, 0
	023 JumpIfEqual {76}
	024 Move X1, X31
	025 Call Scroller.get_lowValue, X0
	026 Move X0, [X19+1064]
	027 Compare X0, 0
	028 JumpIfEqual {76}
	029 Move X1, X31
	030 Move V8, V0
	031 Call Scroller.get_highValue, X0
	032 Move X0, [X19+1056]
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 NotImplemented "Instruction FCSEL not yet implemented."
	035 Move [X19+1152], S9
	036 Move [X19+1156], S0
	037 Compare X0, 0
	038 JumpIfEqual {76}
	039 Move X1, X31
	040 Call Scroller.get_lowValue, X0
	041 Move X0, [X19+1056]
	042 Compare X0, 0
	043 JumpIfEqual {76}
	044 Move X1, X31
	045 Move V8, V0
	046 Call Scroller.get_highValue, X0
	047 Move X0, [X19+1064]
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 NotImplemented "Instruction FCSEL not yet implemented."
	050 Compare X0, 0
	051 JumpIfEqual {76}
	052 Move X1, X31
	053 Call Scroller.get_lowValue, X0
	054 Move X0, [X19+1064]
	055 Compare X0, 0
	056 JumpIfEqual {76}
	057 Move X1, X31
	058 Move V8, V0
	059 Call Scroller.get_highValue, X0
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 Move [X19+1160], S9
	063 Move [X19+1164], S0
	064 Move X0, X19
	065 Move X30, [X31+16]
	066 Move X19, [X31+24]
	067 Move D9, [X31+32]
	068 Move D8, [X31+40]
	069 Call ScrollView.ExecuteElasticSpringAnimation, X0
	070 Return 
	071 Move X30, [X31+16]
	072 Move X19, [X31+24]
	073 Move D9, [X31+32]
	074 Move D8, [X31+40]
	075 Return 
	076 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D8411C ADRP X8, 0x3E3000
	0x03D84120 LDR X8, [X8 + 0x550]
	0x03D84124 ADRP X20, 0x3DE000
	0x03D84128 ADRP X23, 0x398000
	0x03D8412C LDR X20, [X20 + 0xC90]
	0x03D84130 LDR X23, [X23 + 0x128]
	0x03D84134 LDR X2, [X8]
	0x03D84138 ADRP X22, 0x3E3000
	0x03D8413C LDR X22, [X22 + 0x380]
	0x03D84140 CMP W21, 0x1
	0x03D84144 CSET W1, EQ
	0x03D84148 BL 0x28BF9DC
	0x03D8414C MOV X0, X19
	0x03D84150 MOV X1, X31
	0x03D84154 BL 0x3DE7EEC
	0x03D84158 LDR X1, [X20]
	0x03D8415C MOV X20, X0
	0x03D84160 CBZ W21, 0x3D841B4
	0x03D84164 MOV W0, W31
	0x03D84168 BL 0x266EACC
	0x03D8416C CBZ X20, 0x3D842B8
	0x03D84170 LDR X8, [X20]
	0x03D84174 LDR X1, [X23]
	0x03D84178 MOV X21, X0
	0x03D8417C LDRH W9, [X8 + 0x12E]
	0x03D84180 CBZ X9, 0x3D841A4
	0x03D84184 LDR X10, [X8 + 0xB0]
	0x03D84188 ADD X10, X10, 0x8
	0x03D8418C LDUR X11, [X10 - 0x8]
	0x03D84190 CMP X11, X1
	0x03D84194 B.EQ 0x3D84204
	0x03D84198 SUBS X9, X9, 0x1
	0x03D8419C ADD X10, X10, 0x10
	0x03D841A0 B.NE 0x3D8418C
	0x03D841A4 MOVZ W2, 0x14
	0x03D841A8 MOV X0, X20
	0x03D841AC BL 0x1C5C788
	0x03D841B0 B 0x3D84214
	0x03D841B4 MOVZ W0, 0x2
	0x03D841B8 BL 0x266EACC
	0x03D841BC CBZ X20, 0x3D842B8
	0x03D841C0 LDR X8, [X20]
	0x03D841C4 LDR X1, [X23]
	0x03D841C8 MOV X21, X0
	0x03D841CC LDRH W9, [X8 + 0x12E]
	0x03D841D0 CBZ X9, 0x3D841F4
	0x03D841D4 LDR X10, [X8 + 0xB0]
	0x03D841D8 ADD X10, X10, 0x8
	0x03D841DC LDUR X11, [X10 - 0x8]
	0x03D841E0 CMP X11, X1
	0x03D841E4 B.EQ 0x3D84244
	0x03D841E8 SUBS X9, X9, 0x1
	0x03D841EC ADD X10, X10, 0x10
	0x03D841F0 B.NE 0x3D841DC
	0x03D841F4 MOVZ W2, 0x14
	0x03D841F8 MOV X0, X20
	0x03D841FC BL 0x1C5C788
	0x03D84200 B 0x3D84254
	0x03D84204 LDR W9, [X10]
	0x03D84208 ADD W9, W9, 0x14
	0x03D8420C ADD X8, X8, W9, 0x4, SXTW
	0x03D84210 ADD X0, X8, 0x138
	0x03D84214 LDP X8, X2, [X0]
	0x03D84218 MOV X0, X20
	0x03D8421C MOV X1, X21
	0x03D84220 BLR X8
	0x03D84224 LDR X0, [X22]
	0x03D84228 LDR W8, [X0 + 0xE0]
	0x03D8422C CBNZ W8, 0x3D84238
	0x03D84230 BL 0x1C16DFC
	0x03D84234 LDR X0, [X22]
	0x03D84238 MOVZ W20, 0x8
	0x03D8423C MOVZ W8, 0x10
	0x03D84240 B 0x3D84280
	0x03D84244 LDR W9, [X10]
	0x03D84248 ADD W9, W9, 0x14
	0x03D8424C ADD X8, X8, W9, 0x4, SXTW
	0x03D84250 ADD X0, X8, 0x138
	0x03D84254 LDP X8, X2, [X0]
	0x03D84258 MOV X0, X20
	0x03D8425C MOV X1, X21
	0x03D84260 BLR X8
	0x03D84264 LDR X0, [X22]
	0x03D84268 LDR W8, [X0 + 0xE0]
	0x03D8426C CBNZ W8, 0x3D84278
	0x03D84270 BL 0x1C16DFC
	0x03D84274 LDR X0, [X22]
	0x03D84278 MOVZ W20, 0x10
	0x03D8427C MOVZ W8, 0x8
	0x03D84280 LDR X9, [X0 + 0xB8]
	0x03D84284 MOV X0, X19
	0x03D84288 MOV X2, X31
	0x03D8428C LDR X1, [X9, X8, LSL]
	0x03D84290 BL 0x3DF1C70
	0x03D84294 LDR X8, [X22]
	0x03D84298 MOV X0, X19
	0x03D8429C LDP X22, X21, [X31 + 0x10]
	0x03D842A0 MOV X2, X31
	0x03D842A4 LDR X8, [X8 + 0xB8]
	0x03D842A8 LDR X1, [X8, X20, LSL]
	0x03D842AC LDP X20, X19, [X31 + 0x20]
	0x03D842B0 LDP X30, X23, [X31], #0x30
	0x03D842B4 B 0x3DF1B54
	0x03D842B8 BL 0x1C16F20
	0x03D842BC FMOV S0, W31
	0x03D842C0 FMOV S1, W31
	0x03D842C4 MOVZ W2, 0x1
	0x03D842C8 MOV X1, X31
	0x03D842CC B 0x3D842D0
	0x03D842D0 SUB X31, X31, 0x80
	0x03D842D4 STP D9, D8, [X31 + 0x10]
	0x03D842D8 STP X29, X30, [X31 + 0x20]
	0x03D842DC STP X28, X27, [X31 + 0x30]
	0x03D842E0 STP X26, X25, [X31 + 0x40]
	0x03D842E4 STP X24, X23, [X31 + 0x50]
	0x03D842E8 STP X22, X21, [X31 + 0x60]
	0x03D842EC STP X20, X19, [X31 + 0x70]
	0x03D842F0 STR X1, [X31 + 0x8]
	0x03D842F4 ADRP X23, 0x663000
	0x03D842F8 ADRP X22, 0x397000
	0x03D842FC LDRB W8, [X23 + 0xDDA]
	0x03D84300 LDR X22, [X22 + 0x898]
	0x03D84304 MOV W20, W2
	0x03D84308 MOV V8.16B, V1.16B
	0x03D8430C MOV V9.16B, V0.16B
	0x03D84310 MOV X21, X0
	0x03D84314 TBNZ X8, 0x0, 0x3D843C8
	0x03D84318 ADRP X0, 0x370000
	0x03D8431C LDR X0, [X0 + 0xE70]
	0x03D84320 BL 0x1C16CF4
	0x03D84324 ADRP X0, 0x399000
	0x03D84328 LDR X0, [X0 + 0x668]
	0x03D8432C BL 0x1C16CF4
	0x03D84330 ADRP X0, 0x399000
	0x03D84334 LDR X0, [X0 + 0x670]
	0x03D84338 BL 0x1C16CF4
	0x03D8433C ADRP X0, 0x3E3000
	0x03D84340 LDR X0, [X0 + 0x2B0]
	0x03D84344 BL 0x1C16CF4
	0x03D84348 ADRP X0, 0x3E3000
	0x03D8434C LDR X0, [X0 + 0x558]
	0x03D84350 BL 0x1C16CF4
	0x03D84354 ADRP X0, 0x3E3000
	0x03D84358 LDR X0, [X0 + 0x560]
	0x03D8435C BL 0x1C16CF4
	0x03D84360 ADRP X0, 0x3E3000
	0x03D84364 LDR X0, [X0 + 0x568]
	0x03D84368 BL 0x1C16CF4
	0x03D8436C ADRP X0, 0x3E3000
	0x03D84370 LDR X0, [X0 + 0x570]
	0x03D84374 BL 0x1C16CF4
	0x03D84378 ADRP X0, 0x3E3000
	0x03D8437C LDR X0, [X0 + 0x380]
	0x03D84380 BL 0x1C16CF4
	0x03D84384 ADRP X0, 0x397000
	0x03D84388 LDR X0, [X0 + 0x898]
	0x03D8438C BL 0x1C16CF4
	0x03D84390 ADRP X0, 0x3DC000
	0x03D84394 LDR X0, [X0 + 0x260]
	0x03D84398 BL 0x1C16CF4
	0x03D8439C ADRP X0, 0x3E3000
	0x03D843A0 LDR X0, [X0 + 0x578]
	0x03D843A4 BL 0x1C16CF4
	0x03D843A8 ADRP X0, 0x3E3000
	0x03D843AC LDR X0, [X0 + 0x580]
	0x03D843B0 BL 0x1C16CF4
	0x03D843B4 ADRP X0, 0x3E3000
	0x03D843B8 LDR X0, [X0 + 0x588]
	0x03D843BC BL 0x1C16CF4
	0x03D843C0 MOVZ W8, 0x1
	0x03D843C4 STRB W8, [X23 + 0xDDA]
	0x03D843C8 LDR X0, [X22]
	0x03D843CC ADRP X24, 0x3E3000
	0x03D843D0 LDR W8, [X0 + 0xE0]
	0x03D843D4 LDR X24, [X24 + 0x380]
	0x03D843D8 CBNZ W8, 0x3D843E0
	0x03D843DC BL 0x1C16DFC
	0x03D843E0 ADRP X22, 0x3E3000
	0x03D843E4 LDR X22, [X22 + 0x558]
	0x03D843E8 MOV X0, X21
	0x03D843EC MOV X1, X31
	0x03D843F0 BL 0x3DEF578
	0x03D843F4 LDR X0, [X24]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x664000
	014 Move X19, 0x39A000
	015 Move X29, 0x3E4000
	016 Move X28, 0x3E4000
	017 Move X23, 0x39A000
	018 Move X22, 0x39A000
	019 Move X21, 0x39A000
	020 Move X27, 0x3E4000
	021 Move X26, 0x3E3000
	022 Move X25, 0x3E4000
	023 Move X24, 0x3E4000
	024 Move X19, [X19+1656]
	025 Move X29, [X29+1064]
	026 Move X28, [X28+1072]
	027 Move X23, [X23+1712]
	028 Move X22, [X22+1728]
	029 Move X21, [X21+1736]
	030 Move W8, [X20+3535]
	031 Move X27, [X27+1080]
	032 Move X26, [X26+2360]
	033 Move X25, [X25+1088]
	034 Move X24, [X24+1096]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {74}
	039 Move X0, 0x39A000
	040 Move X0, [X0+1656]
	041 Call 0x1C17CF4
	042 Move X0, 0x39A000
	043 Move X0, [X0+1712]
	044 Call 0x1C17CF4
	045 Move X0, 0x39A000
	046 Move X0, [X0+1728]
	047 Call 0x1C17CF4
	048 Move X0, 0x3E4000
	049 Move X0, [X0+1080]
	050 Call 0x1C17CF4
	051 Move X0, 0x3E4000
	052 Move X0, [X0+1096]
	053 Call 0x1C17CF4
	054 Move X0, 0x3E4000
	055 Move X0, [X0+1064]
	056 Call 0x1C17CF4
	057 Move X0, 0x3E4000
	058 Move X0, [X0+1072]
	059 Call 0x1C17CF4
	060 Move X0, 0x3E4000
	061 Move X0, [X0+1104]
	062 Call 0x1C17CF4
	063 Move X0, 0x39A000
	064 Move X0, [X0+1736]
	065 Call 0x1C17CF4
	066 Move X0, 0x3E4000
	067 Move X0, [X0+1088]
	068 Call 0x1C17CF4
	069 Move X0, 0x3E3000
	070 Move X0, [X0+2360]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X20+3535], W8
	074 Move X8, [X19]
	075 Move X9, -53039104
	076 Move V0, [X9+1448]
	077 Move W9, 16
	078 Move X8, [X8+184]
	079 Move X2, X31
	080 Move [X8], D0
	081 Move X0, [X29]
	082 Move [X8+8], X9
	083 Move [X8+16], X0
	084 Move X1, [X28]
	085 Call String.Concat, X0, X1
	086 Move X8, [X19]
	087 Move X2, X31
	088 Move X8, [X8+184]
	089 Move [X8+24], X0
	090 Move X1, [X23]
	091 Call String.Concat, X0, X1
	092 Move X8, [X19]
	093 Move X2, X31
	094 Move X8, [X8+184]
	095 Move [X8+32], X0
	096 Move X0, [X8+24]
	097 Move X1, [X22]
	098 Call String.Concat, X0, X1
	099 Move X8, [X19]
	100 Move X2, X31
	101 Move X8, [X8+184]
	102 Move [X8+40], X0
	103 Move X0, [X8+24]
	104 Move X1, [X21]
	105 Call String.Concat, X0, X1
	106 Move X8, [X19]
	107 Move X2, X31
	108 Move X8, [X8+184]
	109 Move [X8+48], X0
	110 Move X0, [X8+16]
	111 Move X1, [X27]
	112 Call String.Concat, X0, X1
	113 Move X8, [X19]
	114 Move X2, X31
	115 Move X8, [X8+184]
	116 Move [X8+56], X0
	117 Move X0, [X8+16]
	118 Move X1, [X26]
	119 Call String.Concat, X0, X1
	120 Move X8, [X19]
	121 Move X2, X31
	122 Move X8, [X8+184]
	123 Move [X8+64], X0
	124 Move X1, [X23]
	125 Call String.Concat, X0, X1
	126 Move X8, [X19]
	127 Move X2, X31
	128 Move X8, [X8+184]
	129 Move [X8+72], X0
	130 Move X0, [X8+64]
	131 Move X1, [X22]
	132 Call String.Concat, X0, X1
	133 Move X8, [X19]
	134 Move X2, X31
	135 Move X8, [X8+184]
	136 Move [X8+80], X0
	137 Move X0, [X8+64]
	138 Move X1, [X21]
	139 Call String.Concat, X0, X1
	140 Move X8, [X19]
	141 Move X2, X31
	142 Move X8, [X8+184]
	143 Move [X8+88], X0
	144 Move X0, [X8+16]
	145 Move X1, [X25]
	146 Call String.Concat, X0, X1
	147 Move X8, [X19]
	148 Move X2, X31
	149 Move X8, [X8+184]
	150 Move [X8+96], X0
	151 Move X0, [X8+16]
	152 Move X1, [X24]
	153 Call String.Concat, X0, X1
	154 Move X8, [X19]
	155 Move X2, X31
	156 Move X8, [X8+184]
	157 Move [X8+104], X0
	158 Move X0, [X8+16]
	159 Move X1, [X23]
	160 Call String.Concat, X0, X1
	161 Move X8, [X19]
	162 Move X2, X31
	163 Move X8, [X8+184]
	164 Move [X8+112], X0
	165 Move X0, [X8+16]
	166 Move X1, [X22]
	167 Call String.Concat, X0, X1
	168 Move X8, [X19]
	169 Move X2, X31
	170 Move X8, [X8+184]
	171 Move [X8+120], X0
	172 Move X0, [X8+16]
	173 Move X1, [X21]
	174 Call String.Concat, X0, X1
	175 Move X8, [X19]
	176 Move X2, X31
	177 Move X8, [X8+184]
	178 Move [X8+128], X0
	179 Move X0, [X8+16]
	180 Move X8, 0x3E4000
	181 Move X8, [X8+1104]
	182 Move X1, [X8]
	183 Call String.Concat, X0, X1
	184 Move X8, [X19]
	185 Move X20, [X31+80]
	186 Move X19, [X31+88]
	187 Move X22, [X31+64]
	188 Move X21, [X31+72]
	189 Move X24, [X31+48]
	190 Move X23, [X31+56]
	191 Move X8, [X8+184]
	192 Move X26, [X31+32]
	193 Move X25, [X31+40]
	194 Move X28, [X31+16]
	195 Move X27, [X31+24]
	196 Move [X8+136], X0
	197 Move X29, [X31+96]
	198 Move X30, [X31+104]
	199 Return 

Method: System.Void <.ctor>b__126_0(System.Single value)

Disassembly:
	0x03D843F8 LDR W8, [X0 + 0xE0]
	0x03D843FC CBNZ W8, 0x3D84408
	0x03D84400 BL 0x1C16DFC
	0x03D84404 LDR X0, [X24]
	0x03D84408 LDR X8, [X0 + 0xB8]
	0x03D8440C MOV X0, X21
	0x03D84410 MOV X2, X31
	0x03D84414 LDR X1, [X8]
	0x03D84418 BL 0x3DF1C70
	0x03D8441C LDR X0, [X22]
	0x03D84420 BL 0x1C16F10
	0x03D84424 FMOV S2, 20

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move V8, V0
	005 Move X19, X0
	006 Call ScrollView.get_scrollOffset, X0
	007 Move X0, X19
	008 Move V0, V8
	009 Call ScrollView.set_scrollOffset, X0, X1
	010 Move X0, X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Move V8, [X31+32]
	014 Call ScrollView.UpdateContentViewTransform, X0
	015 Return 

Method: System.Void <.ctor>b__126_1(System.Single value)

Disassembly:
	0x03D84428 MOV V0.16B, V9.16B
	0x03D8442C MOV V1.16B, V8.16B
	0x03D84430 MOV W1, W20
	0x03D84434 MOV X22, X0
	0x03D84438 BL 0x3D84648
	0x03D8443C CBZ X22, 0x3D84644
	0x03D84440 ADRP X8, 0x3E3000
	0x03D84444 LDR X8, [X8 + 0x578]
	0x03D84448 ADRP X23, 0x3DC000
	0x03D8444C ADRP X27, 0x399000
	0x03D84450 ADRP X28, 0x3E3000
	0x03D84454 ADRP X29, 0x399000

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move V8, V0
	005 Move X19, X0
	006 Call ScrollView.get_scrollOffset, X0
	007 Move X0, X19
	008 Move V1, V8
	009 Call ScrollView.set_scrollOffset, X0, X1
	010 Move X0, X19
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Move V8, [X31+32]
	014 Call ScrollView.UpdateContentViewTransform, X0
	015 Return 

