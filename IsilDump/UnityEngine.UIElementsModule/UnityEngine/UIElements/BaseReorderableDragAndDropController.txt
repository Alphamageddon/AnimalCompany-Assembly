Type: UnityEngine.UIElements.BaseReorderableDragAndDropController

Method: System.Collections.Generic.IEnumerable`1<System.Int32> GetSortedSelectedIds()

Disassembly:
	0x03D91AC4 BL 0x3D6B60C
	0x03D91AC8 CBZ X22, 0x3D91CF8

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void .ctor(UnityEngine.UIElements.BaseVerticalCollectionView view)

Disassembly:
	0x03D91ACC MOVZ W1, 0x1
	0x03D91AD0 MOV X0, X22
	0x03D91AD4 MOV X2, X31
	0x03D91AD8 BL 0x3DEF238
	0x03D91ADC MOV X0, X22
	0x03D91AE0 MOV X1, X31
	0x03D91AE4 BL 0x3DE7EEC
	0x03D91AE8 ADRP X8, 0x3D1000
	0x03D91AEC LDR X8, [X8 + 0xAA8]
	0x03D91AF0 MOV X23, X0
	0x03D91AF4 MOVZ W0, 0x1
	0x03D91AF8 LDR X1, [X8]
	0x03D91AFC BL 0x266EACC
	0x03D91B00 CBZ X23, 0x3D91CF8
	0x03D91B04 ADRP X10, 0x38B000
	0x03D91B08 LDR X8, [X23]
	0x03D91B0C LDR X10, [X10 + 0x128]
	0x03D91B10 MOV X24, X0
	0x03D91B14 LDRH W9, [X8 + 0x12E]
	0x03D91B18 LDR X1, [X10]
	0x03D91B1C CBZ X9, 0x3D91B40
	0x03D91B20 LDR X10, [X8 + 0xB0]
	0x03D91B24 ADD X10, X10, 0x8
	0x03D91B28 LDUR X11, [X10 - 0x8]
	0x03D91B2C CMP X11, X1
	0x03D91B30 B.EQ 0x3D91B50
	0x03D91B34 SUBS X9, X9, 0x1
	0x03D91B38 ADD X10, X10, 0x10
	0x03D91B3C B.NE 0x3D91B28
	0x03D91B40 MOVZ W2, 0x28
	0x03D91B44 MOV X0, X23
	0x03D91B48 BL 0x1C5C788
	0x03D91B4C B 0x3D91B60
	0x03D91B50 LDR W9, [X10]
	0x03D91B54 ADD W9, W9, 0x28
	0x03D91B58 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x657000
	008 Move X23, 0x364000
	009 Move X21, 0x367000
	010 Move W8, [X22+3671]
	011 Move X23, [X23+3632]
	012 Move X21, [X21+2928]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x367000
	020 Move X0, [X0+2928]
	021 Call 0x1C17CF4
	022 Move X0, 0x364000
	023 Move X0, [X0+3632]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3671], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 Move X1, [X21]
	030 Move X21, X0
	031 Call List`1<Int32>..ctor, X0
	032 Move W8, 1
	033 Move X0, X20
	034 Move X1, X31
	035 Move [X20+24], X21
	036 Move [X20+32], W8
	037 Call Object..ctor, X0
	038 Move [X20+16], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Move X23, [X31+56]
	045 Return 

Method: System.Boolean get_enableReordering()

Disassembly:
	0x03D91B5C ADD X0, X8, 0x138
	0x03D91B60 LDP X8, X2, [X0]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_enableReordering(System.Boolean value)

Disassembly:
	0x03D91B64 MOV X0, X23
	0x03D91B68 MOV X1, X24
	0x03D91B6C BLR X8

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: System.Boolean CanStartDrag(System.Collections.Generic.IEnumerable`1<System.Int32> itemIds)

Disassembly:
	0x03D91B70 STR X22, [X19 + 0x18]
	0x03D91B74 LDR X8, [X22]
	0x03D91B78 LDR X1, [X20]
	0x03D91B7C MOV X0, X22

ISIL:
	001 Move X8, [X0]
	002 Move X2, [X8+520]
	003 Move X1, [X8+528]
	004 CallNoReturn X2

Method: UnityEngine.UIElements.StartDragArgs SetupDragAndDrop(System.Collections.Generic.IEnumerable`1<System.Int32> itemIds, System.Boolean skipText = False)

Disassembly:
	0x03D91B80 LDR X9, [X8 + 0xB28]
	0x03D91B84 LDR X2, [X8 + 0xB30]
	0x03D91B88 BLR X9
	0x03D91B8C LDR X0, [X19 + 0x18]
	0x03D91B90 CBZ X0, 0x3D91CF8
	0x03D91B94 MOV X1, X31
	0x03D91B98 BL 0x3DE7EEC
	0x03D91B9C MOV X20, X0
	0x03D91BA0 MOV V0.16B, V9.16B
	0x03D91BA4 MOV X0, X31
	0x03D91BA8 BL 0x3DFED98
	0x03D91BAC CBZ X20, 0x3D91CF8
	0x03D91BB0 ADRP X24, 0x38B000
	0x03D91BB4 LDR X9, [X20]
	0x03D91BB8 LDR X24, [X24 + 0x128]
	0x03D91BBC MOV X8, X1
	0x03D91BC0 MOV X22, X0
	0x03D91BC4 LDRH W10, [X9 + 0x12E]
	0x03D91BC8 LDR X1, [X24]
	0x03D91BCC AND X23, X8, 0x0
	0x03D91BD0 CBZ X10, 0x3D91BF4
	0x03D91BD4 LDR X8, [X9 + 0xB0]
	0x03D91BD8 ADD X8, X8, 0x8
	0x03D91BDC LDUR X11, [X8 - 0x8]
	0x03D91BE0 CMP X11, X1
	0x03D91BE4 B.EQ 0x3D91C04
	0x03D91BE8 SUBS X10, X10, 0x1
	0x03D91BEC ADD X8, X8, 0x10
	0x03D91BF0 B.NE 0x3D91BDC
	0x03D91BF4 MOVZ W2, 0x2D
	0x03D91BF8 MOV X0, X20
	0x03D91BFC BL 0x1C5C788
	0x03D91C00 B 0x3D91C14
	0x03D91C04 LDR W8, [X8]
	0x03D91C08 ADD W8, W8, 0x2D
	0x03D91C0C ADD X8, X9, W8, 0x4, SXTW
	0x03D91C10 ADD X0, X8, 0x138
	0x03D91C14 LDP X8, X3, [X0]
	0x03D91C18 MOV X0, X20
	0x03D91C1C MOV X1, X22
	0x03D91C20 MOV X2, X23
	0x03D91C24 BLR X8
	0x03D91C28 LDR X0, [X19 + 0x18]
	0x03D91C2C CBZ X0, 0x3D91CF8
	0x03D91C30 MOV X1, X31
	0x03D91C34 BL 0x3DE7EEC
	0x03D91C38 MOV X20, X0
	0x03D91C3C MOV V0.16B, V8.16B
	0x03D91C40 MOV X0, X31
	0x03D91C44 BL 0x3DFED98
	0x03D91C48 CBZ X20, 0x3D91CF8
	0x03D91C4C LDR X9, [X20]
	0x03D91C50 MOV X8, X1
	0x03D91C54 LDR X1, [X24]
	0x03D91C58 MOV X22, X0
	0x03D91C5C LDRH W10, [X9 + 0x12E]
	0x03D91C60 AND X23, X8, 0x0
	0x03D91C64 CBZ X10, 0x3D91C88
	0x03D91C68 LDR X8, [X9 + 0xB0]
	0x03D91C6C ADD X8, X8, 0x8
	0x03D91C70 LDUR X11, [X8 - 0x8]
	0x03D91C74 CMP X11, X1
	0x03D91C78 B.EQ 0x3D91C98
	0x03D91C7C SUBS X10, X10, 0x1
	0x03D91C80 ADD X8, X8, 0x10
	0x03D91C84 B.NE 0x3D91C70
	0x03D91C88 MOVZ W2, 0x19
	0x03D91C8C MOV X0, X20
	0x03D91C90 BL 0x1C5C788
	0x03D91C94 B 0x3D91CA8
	0x03D91C98 LDR W8, [X8]
	0x03D91C9C ADD W8, W8, 0x19
	0x03D91CA0 ADD X8, X9, W8, 0x4, SXTW
	0x03D91CA4 ADD X0, X8, 0x138
	0x03D91CA8 LDP X8, X3, [X0]
	0x03D91CAC MOV X0, X20
	0x03D91CB0 MOV X1, X22
	0x03D91CB4 MOV X2, X23
	0x03D91CB8 BLR X8
	0x03D91CBC LDR X1, [X19 + 0x18]
	0x03D91CC0 MOV X0, X21
	0x03D91CC4 LDP X20, X19, [X31 + 0x40]
	0x03D91CC8 LDP X22, X21, [X31 + 0x30]
	0x03D91CCC LDP X24, X23, [X31 + 0x20]
	0x03D91CD0 LDP X30, X25, [X31 + 0x10]
	0x03D91CD4 MOV X2, X31
	0x03D91CD8 LDP D9, D8, [X31], #0x50
	0x03D91CDC B 0x3DF60E8
	0x03D91CE0 BL 0x1C171E0
	0x03D91CE4 BL 0x1C16F20
	0x03D91CE8 BL 0x1C16F20
	0x03D91CEC MOV X0, X1
	0x03D91CF0 MOV X1, X8
	0x03D91CF4 BL 0x1C171E0
	0x03D91CF8 BL 0x1C16F20
	0x03D91CFC BL 0x1C16F20
	0x03D91D00 MOV X0, X22
	0x03D91D04 BL 0x1C16F18
	0x03D91D08 B 0x3D91D1C
	0x03D91D0C B 0x3D91D1C
	0x03D91D10 B 0x3D91D1C
	0x03D91D14 B 0x3D91D1C
	0x03D91D18 B 0x3D91D1C
	0x03D91D1C CMP W1, 0x1
	0x03D91D20 B.NE 0x3D91D38
	0x03D91D24 BL 0x3EB1AD0
	0x03D91D28 LDR X22, [X0]
	0x03D91D2C BL 0x3EB1AE0
	0x03D91D30 MOV W24, W31
	0x03D91D34 B 0x3D91940
	0x03D91D38 MOV X19, X0
	0x03D91D3C MOV X22, X31
	0x03D91D40 B 0x3D91D48
	0x03D91D44 MOV X19, X0
	0x03D91D48 LDR X1, [X23]
	0x03D91D4C MOV X0, X21
	0x03D91D50 BL 0x1C16E00
	0x03D91D54 MOV X20, X0
	0x03D91D58 CBZ X0, 0x3D91DB4
	0x03D91D5C LDR X8, [X20]
	0x03D91D60 LDR X1, [X23]
	0x03D91D64 LDRH W9, [X8 + 0x12E]
	0x03D91D68 CBZ X9, 0x3D91D8C
	0x03D91D6C LDR X10, [X8 + 0xB0]
	0x03D91D70 ADD X10, X10, 0x8
	0x03D91D74 LDUR X11, [X10 - 0x8]
	0x03D91D78 CMP X11, X1
	0x03D91D7C B.EQ 0x3D91D9C
	0x03D91D80 SUBS X9, X9, 0x1
	0x03D91D84 ADD X10, X10, 0x10
	0x03D91D88 B.NE 0x3D91D74
	0x03D91D8C MOV X0, X20
	0x03D91D90 MOV W2, W31
	0x03D91D94 BL 0x1C5C788
	0x03D91D98 B 0x3D91DA8
	0x03D91D9C LDRSW X9, [X10]
	0x03D91DA0 ADD X8, X8, X9, 0x4, LSL
	0x03D91DA4 ADD X0, X8, 0x138
	0x03D91DA8 LDP X8, X1, [X0]
	0x03D91DAC MOV X0, X20
	0x03D91DB0 BLR X8
	0x03D91DB4 CBNZ X22, 0x3D91DC0
	0x03D91DB8 MOV X0, X19
	0x03D91DBC BL 0x1D2C690
	0x03D91DC0 MOV X0, X22
	0x03D91DC4 BL 0x1C16F18
	0x03D91DC8 BL 0x1990590
	0x03D91DCC STP D9, D8, [X31 - 0x40]!
	0x03D91DD0 STP X30, X23, [X31 + 0x10]
	0x03D91DD4 STP X22, X21, [X31 + 0x20]
	0x03D91DD8 STP X20, X19, [X31 + 0x30]
	0x03D91DDC ADRP X20, 0x656000
	0x03D91DE0 LDRB W8, [X20 + 0xE5C]
	0x03D91DE4 MOV V9.16B, V1.16B
	0x03D91DE8 MOV V8.16B, V0.16B
	0x03D91DEC MOV X19, X0
	0x03D91DF0 TBNZ X8, 0x0, 0x3D91E08
	0x03D91DF4 ADRP X0, 0x38B000
	0x03D91DF8 LDR X0, [X0 + 0x128]
	0x03D91DFC BL 0x1C16CF4
	0x03D91E00 MOVZ W8, 0x1
	0x03D91E04 STRB W8, [X20 + 0xE5C]
	0x03D91E08 LDR X0, [X19 + 0x18]
	0x03D91E0C CBZ X0, 0x3D91E80
	0x03D91E10 MOV X1, X31
	0x03D91E14 BL 0x3DE7EEC
	0x03D91E18 MOV X20, X0
	0x03D91E1C MOV V0.16B, V9.16B
	0x03D91E20 MOV X0, X31
	0x03D91E24 BL 0x3DFED98
	0x03D91E28 CBZ X20, 0x3D91F5C
	0x03D91E2C ADRP X23, 0x38B000
	0x03D91E30 LDR X9, [X20]
	0x03D91E34 LDR X23, [X23 + 0x128]
	0x03D91E38 MOV X8, X1
	0x03D91E3C MOV X21, X0
	0x03D91E40 LDRH W10, [X9 + 0x12E]
	0x03D91E44 LDR X1, [X23]
	0x03D91E48 AND X22, X8, 0x0
	0x03D91E4C CBZ X10, 0x3D91E70
	0x03D91E50 LDR X8, [X9 + 0xB0]
	0x03D91E54 ADD X8, X8, 0x8
	0x03D91E58 LDUR X11, [X8 - 0x8]
	0x03D91E5C CMP X11, X1
	0x03D91E60 B.EQ 0x3D91E94
	0x03D91E64 SUBS X10, X10, 0x1
	0x03D91E68 ADD X8, X8, 0x10
	0x03D91E6C B.NE 0x3D91E58
	0x03D91E70 MOVZ W2, 0x2D
	0x03D91E74 MOV X0, X20
	0x03D91E78 BL 0x1C5C788
	0x03D91E7C B 0x3D91EA4
	0x03D91E80 LDP X20, X19, [X31 + 0x30]
	0x03D91E84 LDP X22, X21, [X31 + 0x20]
	0x03D91E88 LDP X30, X23, [X31 + 0x10]
	0x03D91E8C LDP D9, D8, [X31], #0x40
	0x03D91E90 RET
	0x03D91E94 LDR W8, [X8]
	0x03D91E98 ADD W8, W8, 0x2D
	0x03D91E9C ADD X8, X9, W8, 0x4, SXTW
	0x03D91EA0 ADD X0, X8, 0x138
	0x03D91EA4 LDP X8, X3, [X0]
	0x03D91EA8 MOV X0, X20
	0x03D91EAC MOV X1, X21
	0x03D91EB0 MOV X2, X22
	0x03D91EB4 BLR X8
	0x03D91EB8 LDR X0, [X19 + 0x18]
	0x03D91EBC CBZ X0, 0x3D91F5C
	0x03D91EC0 MOV X1, X31
	0x03D91EC4 BL 0x3DE7EEC
	0x03D91EC8 MOV X19, X0
	0x03D91ECC MOV V0.16B, V8.16B
	0x03D91ED0 MOV X0, X31
	0x03D91ED4 BL 0x3DFED98
	0x03D91ED8 CBZ X19, 0x3D91F5C
	0x03D91EDC LDR X9, [X19]
	0x03D91EE0 MOV X8, X1
	0x03D91EE4 LDR X1, [X23]
	0x03D91EE8 MOV X20, X0
	0x03D91EEC LDRH W10, [X9 + 0x12E]
	0x03D91EF0 AND X21, X8, 0x0
	0x03D91EF4 CBZ X10, 0x3D91F18
	0x03D91EF8 LDR X8, [X9 + 0xB0]
	0x03D91EFC ADD X8, X8, 0x8
	0x03D91F00 LDUR X11, [X8 - 0x8]
	0x03D91F04 CMP X11, X1
	0x03D91F08 B.EQ 0x3D91F28
	0x03D91F0C SUBS X10, X10, 0x1
	0x03D91F10 ADD X8, X8, 0x10
	0x03D91F14 B.NE 0x3D91F00
	0x03D91F18 MOVZ W2, 0x19
	0x03D91F1C MOV X0, X19
	0x03D91F20 BL 0x1C5C788
	0x03D91F24 B 0x3D91F38
	0x03D91F28 LDR W8, [X8]
	0x03D91F2C ADD W8, W8, 0x19
	0x03D91F30 ADD X8, X9, W8, 0x4, SXTW
	0x03D91F34 ADD X0, X8, 0x138
	0x03D91F38 LDP X4, X3, [X0]
	0x03D91F3C MOV X0, X19
	0x03D91F40 MOV X1, X20
	0x03D91F44 MOV X2, X21
	0x03D91F48 LDP X20, X19, [X31 + 0x30]
	0x03D91F4C LDP X22, X21, [X31 + 0x20]
	0x03D91F50 LDP X30, X23, [X31 + 0x10]
	0x03D91F54 LDP D9, D8, [X31], #0x40
	0x03D91F58 BR X4
	0x03D91F5C BL 0x1C16F20
	0x03D91F60 RET
	0x03D91F64 STR W1, [X0 + 0x20]
	0x03D91F68 RET
	0x03D91F6C STP X30, X19, [X31 - 0x10]!
	0x03D91F70 MOV X19, X0
	0x03D91F74 LDR X0, [X0 + 0x10]
	0x03D91F78 STR X31, [X19 + 0x28]
	0x03D91F7C CBZ X0, 0x3D91F90
	0x03D91F80 LDR X8, [X0]
	0x03D91F84 LDR X9, [X8 + 0x288]
	0x03D91F88 LDR X1, [X8 + 0x290]
	0x03D91F8C BLR X9
	0x03D91F90 LDR X0, [X19 + 0x18]
	0x03D91F94 STR W31, [X19 + 0x20]
	0x03D91F98 CBZ X0, 0x3D91FA8
	0x03D91F9C MOV X1, X31
	0x03D91FA0 LDP X30, X19, [X31], #0x10
	0x03D91FA4 B 0x3DF6948
	0x03D91FA8 LDP X30, X19, [X31], #0x10
	0x03D91FAC RET
	0x03D91FB0 RET
	0x03D91FB4 MOV X1, X31
	0x03D91FB8 B 0x33BDD8C
	0x03D91FBC MOVZ W0, 0x1
	0x03D91FC0 RET
	0x03D91FC4 STP X30, X19, [X31 - 0x10]!
	0x03D91FC8 LDR X8, [X0]
	0x03D91FCC MOV X19, X0
	0x03D91FD0 LDP X9, X1, [X8 + 0x188]
	0x03D91FD4 BLR X9
	0x03D91FD8 TBZ X0, 0x0, 0x3D91FF0
	0x03D91FDC LDR X8, [X19]
	0x03D91FE0 MOV X0, X19
	0x03D91FE4 LDP X2, X1, [X8 + 0x178]
	0x03D91FE8 LDP X30, X19, [X31], #0x10
	0x03D91FEC BR X2
	0x03D91FF0 MOV W0, W31
	0x03D91FF4 LDP X30, X19, [X31], #0x10
	0x03D91FF8 RET
	0x03D91FFC STR X30, [X31 - 0x10]!
	0x03D92000 LDR X0, [X0 + 0x28]
	0x03D92004 CBZ X0, 0x3D92018
	0x03D92008 MOV X1, X31
	0x03D9200C BL 0x3DEC0CC
	0x03D92010 LDR X30, [X31], #0x10
	0x03D92014 B 0x3D914B0
	0x03D92018 BL 0x1C16F20
	0x03D9201C STP X30, X21, [X31 - 0x20]!
	0x03D92020 STP X20, X19, [X31 + 0x10]
	0x03D92024 ADRP X21, 0x655000
	0x03D92028 ADRP X20, 0x389000
	0x03D9202C LDRB W8, [X21 + 0xE5E]
	0x03D92030 LDR X20, [X20 + 0x7F0]
	0x03D92034 MOV X19, X0
	0x03D92038 TBNZ X8, 0x0, 0x3D92068
	0x03D9203C ADRP X0, 0x3D5000
	0x03D92040 LDR X0, [X0 + 0xB30]
	0x03D92044 BL 0x1C16CF4
	0x03D92048 ADRP X0, 0x389000
	0x03D9204C LDR X0, [X0 + 0x7F0]
	0x03D92050 BL 0x1C16CF4
	0x03D92054 ADRP X0, 0x38A000
	0x03D92058 LDR X0, [X0 + 0xE80]
	0x03D9205C BL 0x1C16CF4
	0x03D92060 MOVZ W8, 0x1
	0x03D92064 STRB W8, [X21 + 0xE5E]
	0x03D92068 LDR X0, [X20]
	0x03D9206C ADRP X21, 0x3D5000
	0x03D92070 LDR X20, [X19 + 0x28]
	0x03D92074 LDR W8, [X0 + 0xE0]
	0x03D92078 LDR X21, [X21 + 0xB30]
	0x03D9207C CBNZ W8, 0x3D92084
	0x03D92080 BL 0x1C16DFC
	0x03D92084 LDR X1, [X21]
	0x03D92088 MOV X0, X20
	0x03D9208C BL 0x218446C
	0x03D92090 LDR X0, [X19 + 0x28]
	0x03D92094 CBZ X0, 0x3D92138
	0x03D92098 MOV X1, X31
	0x03D9209C BL 0x3DEBF58
	0x03D920A0 LDR X1, [X21]
	0x03D920A4 BL 0x218446C
	0x03D920A8 LDR X0, [X19 + 0x28]
	0x03D920AC CBZ X0, 0x3D92138
	0x03D920B0 MOV X1, X31
	0x03D920B4 BL 0x3DEC0CC
	0x03D920B8 CBZ X0, 0x3D92138
	0x03D920BC ADRP X10, 0x38A000
	0x03D920C0 LDR X8, [X0]
	0x03D920C4 LDR X10, [X10 + 0xE80]
	0x03D920C8 MOV X19, X0
	0x03D920CC LDRH W9, [X8 + 0x12E]
	0x03D920D0 LDR X1, [X10]
	0x03D920D4 CBZ X9, 0x3D920F8
	0x03D920D8 LDR X10, [X8 + 0xB0]
	0x03D920DC ADD X10, X10, 0x8
	0x03D920E0 LDUR X11, [X10 - 0x8]
	0x03D920E4 CMP X11, X1
	0x03D920E8 B.EQ 0x3D92108
	0x03D920EC SUBS X9, X9, 0x1
	0x03D920F0 ADD X10, X10, 0x10
	0x03D920F4 B.NE 0x3D920E0
	0x03D920F8 MOVZ W2, 0x2
	0x03D920FC MOV X0, X19
	0x03D92100 BL 0x1C5C788
	0x03D92104 B 0x3D92118
	0x03D92108 LDR W9, [X10]
	0x03D9210C ADD W9, W9, 0x2
	0x03D92110 ADD X8, X8, W9, 0x4, SXTW
	0x03D92114 ADD X0, X8, 0x138
	0x03D92118 LDP X8, X1, [X0]
	0x03D9211C MOV X0, X19
	0x03D92120 BLR X8
	0x03D92124 LDP X20, X19, [X31 + 0x10]
	0x03D92128 CMP W0, 0x1
	0x03D9212C CSET W0, EQ
	0x03D92130 LDP X30, X21, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x657000
	015 Move W9, [X22+3672]
	016 Move W23, W2
	017 Move X21, X1
	018 Move X20, X0
	019 Move X19, X8
	020 Move TEMP, X9
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {68}
	024 Move X0, 0x3D7000
	025 Move X0, [X0+2808]
	026 Call 0x1C17CF4
	027 Move X0, 0x363000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0x38B000
	031 Move X0, [X0+1976]
	032 Call 0x1C17CF4
	033 Move X0, 0x38B000
	034 Move X0, [X0+1984]
	035 Call 0x1C17CF4
	036 Move X0, 0x363000
	037 Move X0, [X0+3608]
	038 Call 0x1C17CF4
	039 Move X0, 0x363000
	040 Move X0, [X0+1880]
	041 Call 0x1C17CF4
	042 Move X0, 0x364000
	043 Move X0, [X0+3600]
	044 Call 0x1C17CF4
	045 Move X0, 0x36A000
	046 Move X0, [X0+2136]
	047 Call 0x1C17CF4
	048 Move X0, 0x3D7000
	049 Move X0, [X0+2816]
	050 Call 0x1C17CF4
	051 Move X0, 0x365000
	052 Move X0, [X0+632]
	053 Call 0x1C17CF4
	054 Move X0, 0x3D6000
	055 Move X0, [X0+2224]
	056 Call 0x1C17CF4
	057 Move X0, 0x38C000
	058 Move X0, [X0+2096]
	059 Call 0x1C17CF4
	060 Move X0, 0x3D7000
	061 Move X0, [X0+2824]
	062 Call 0x1C17CF4
	063 Move X0, 0x3D7000
	064 Move X0, [X0+2832]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X22+3672], W8
	068 Move X8, [X20+24]
	069 Compare X8, 0
	070 JumpIfEqual {332}
	071 Move W9, [X8+28]
	072 Move X10, 0x365000
	073 Move X10, [X10+632]
	074 Add W9, W9, 1
	075 Move [X8+24], W31
	076 Move [X8+28], W9
	077 Move X8, [X10]
	078 Move X8, [X8+184]
	079 Move X27, [X8]
	080 Compare X21, 0
	081 JumpIfEqual {98}
	082 Move X10, 0x38B000
	083 Move X8, [X21]
	084 Move X10, [X10+1976]
	085 NotImplemented "Instruction LDRH not yet implemented."
	086 Move X1, [X10]
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X21
	096 Move W2, W31
	097 Call 0x1C5D788
	098 Move X22, X27
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add X8, X8, X9
	101 Add X0, X8, 312
	102 Move X28, 0x363000
	103 Move X29, 0x38B000
	104 Move X26, 0x364000
	105 Move X28, [X28+3608]
	106 Move X29, [X29+1984]
	107 Move X26, [X26+3600]
	108 Move X8, [X0]
	109 Move X1, [X0+8]
	110 Move X0, X21
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X21, X0
	113 Move X0, X27
	114 Move [X31], X31
	115 Move X22, X0
	116 Compare X21, 0
	117 JumpIfEqual {329}
	118 Move X8, [X21]
	119 Move X1, [X28]
	120 Move W24, W23
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 Compare X9, 0
	123 JumpIfEqual {130}
	124 Move X10, [X8+176]
	125 Add X10, X10, 8
	126 NotImplemented "Instruction LDUR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Subtract X9, X9, 1
	129 Add X10, X10, 16
	130 Move X0, X21
	131 Move W2, W31
	132 Call 0x1C5D788
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Add X8, X8, X9
	135 Add X0, X8, 312
	136 Move X8, [X0]
	137 Move X1, [X0+8]
	138 Move X0, X21
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {258}
	144 Move X8, [X21]
	145 Move X1, [X29]
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Compare X9, 0
	148 JumpIfEqual {155}
	149 Move X10, [X8+176]
	150 Add X10, X10, 8
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Subtract X9, X9, 1
	154 Add X10, X10, 16
	155 Move X0, X21
	156 Move W2, W31
	157 Call 0x1C5D788
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Add X8, X8, X9
	160 Add X0, X8, 312
	161 Move X8, [X0]
	162 Move X1, [X0+8]
	163 Move X0, X21
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move W25, W0
	166 Move X0, [X20+24]
	167 Compare X0, 0
	168 JumpIfEqual {330}
	169 Move W10, [X0+28]
	170 Move X8, [X0+16]
	171 Move X9, [X26]
	172 Add W10, W10, 1
	173 Move [X0+28], W10
	174 Compare X8, 0
	175 JumpIfEqual {331}
	176 NotImplemented "Instruction LDRSW not yet implemented."
	177 Move W11, [X8+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Add W9, W10, 1
	180 Add X8, X8, X10
	181 Move [X0+24], W9
	182 Move [X8+32], W25
	183 Move X8, [X9+32]
	184 Move X8, [X8+192]
	185 Move X2, [X8+112]
	186 Move W1, W25
	187 Call List`1<Int32>.AddWithResize, X0, X1
	188 Move W23, 1
	189 Move TEMP, X24
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {116}
	193 Move X0, X22
	194 Move X1, X31
	195 Call String.IsNullOrEmpty, X0
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfEqual {204}
	200 Move X8, 0x3D7000
	201 Move X8, [X8+2824]
	202 Move W23, 1
	203 Move X22, [X8]
	204 Move X0, [X20+16]
	205 Move W1, W25
	206 Call ListViewDraggerExtension.GetRecycledItemFromId, X0, X1
	207 Move X23, [X31]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 NotImplemented "Instruction CSEL not yet implemented."
	210 Compare X0, 0
	211 JumpIfEqual {244}
	212 Move [X31], X0
	213 Compare X23, 0
	214 JumpIfEqual {335}
	215 Move X8, [X23]
	216 Move X9, [X8+376]
	217 Move X1, [X8+384]
	218 Move X0, X23
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move X8, 0x38C000
	221 Move X8, [X8+2096]
	222 Move X24, X0
	223 Move X0, [X8]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move X8, 0x3D6000
	229 Move X8, [X8+2224]
	230 Move X3, [X8]
	231 Move X0, X24
	232 Move X1, X31
	233 Move X2, X31
	234 Call 0x22A27C4, X0, X1, X2
	235 Move X24, [X31]
	236 Compare X0, 0
	237 JumpIfEqual {244}
	238 Move X8, [X0]
	239 Move X1, [X8+2848]
	240 Move X9, [X8+2840]
	241 NotImplemented "Instruction BLR not yet implemented."
	242 Move W23, W31
	243 Move [X31], X24
	244 Move X8, 0x363000
	245 Move X8, [X8+1880]
	246 Move [X31+12], W25
	247 Move X0, [X8]
	248 Add X1, X31, 12
	249 Call 0x1C17E04
	250 Move X1, X0
	251 Move [X31], X23
	252 Move X8, 0x3D7000
	253 Move X8, [X8+2832]
	254 Move X0, [X8]
	255 Move X2, X31
	256 Call String.Format, X0, X1
	257 Move W23, W31
	258 Move X24, X31
	259 Move W23, 12
	260 Compare X21, 0
	261 JumpIfEqual {285}
	262 Move X10, 0x363000
	263 Move X8, [X21]
	264 Move X10, [X10+3584]
	265 NotImplemented "Instruction LDRH not yet implemented."
	266 Move X1, [X10]
	267 Compare X9, 0
	268 JumpIfEqual {275}
	269 Move X10, [X8+176]
	270 Add X10, X10, 8
	271 NotImplemented "Instruction LDUR not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Subtract X9, X9, 1
	274 Add X10, X10, 16
	275 Move X0, X21
	276 Move W2, W31
	277 Call 0x1C5D788
	278 NotImplemented "Instruction LDRSW not yet implemented."
	279 Add X8, X8, X9
	280 Add X0, X8, 312
	281 Move X8, [X0]
	282 Move X1, [X0+8]
	283 Move X0, X21
	284 NotImplemented "Instruction BLR not yet implemented."
	285 Compare X24, 0
	286 JumpIfNotEqual {333}
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Compare W23, 0
	289 JumpIfNotEqual {315}
	290 Move X8, 0x3D7000
	291 Move X8, [X8+2808]
	292 Move X21, [X20+24]
	293 Move X0, [X8]
	294 Call 0x1C17F10
	295 Move X8, [X20]
	296 Move X1, X20
	297 Move X3, X31
	298 Move X23, X0
	299 Move X2, [X8+592]
	300 Call Comparison`1<Int32>..ctor, X0, X1, X2
	301 Compare X21, 0
	302 JumpIfEqual {332}
	303 Move X8, 0x3D7000
	304 Move X8, [X8+2816]
	305 Move X0, X21
	306 Move X1, X23
	307 Move X2, [X8]
	308 Call List`1<Int32>.Sort, X0, X1
	309 Move W8, 2
	310 Move [X19], X22
	311 Move [X19+20], X31
	312 Move [X19+12], X31
	313 Move [X19+8], W8
	314 Move [X19+28], W31
	315 Move X20, [X31+96]
	316 Move X19, [X31+104]
	317 Move X22, [X31+80]
	318 Move X21, [X31+88]
	319 Move X24, [X31+64]
	320 Move X23, [X31+72]
	321 Move X26, [X31+48]
	322 Move X25, [X31+56]
	323 Move X28, [X31+32]
	324 Move X27, [X31+40]
	325 Move X29, [X31+16]
	326 Move X30, [X31+24]
	327 Add X31, X31, 112
	328 Return X0
	329 Call 0x1C17F20
	330 Call 0x1C17F20
	331 Call 0x1C17F20
	332 Call 0x1C17F20
	333 Move X0, X24
	334 Call 0x1C17F18
	335 Call 0x1C17F20
	336 Move X23, X0
	337 Move X22, X27
	338 Move X23, X0
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move X0, X23
	341 Call 0x3EB2AD0
	342 Move X24, [X0]
	343 Call 0x3EB2AE0
	344 Move W23, W31
	345 Compare X21, 0
	346 JumpIfNotEqual {262}
	347 Move X24, X31
	348 Move X23, X0
	349 Compare X21, 0
	350 JumpIfEqual {374}
	351 Move X10, 0x362000
	352 Move X8, [X21]
	353 Move X10, [X10+3584]
	354 NotImplemented "Instruction LDRH not yet implemented."
	355 Move X1, [X10]
	356 Compare X9, 0
	357 JumpIfEqual {364}
	358 Move X10, [X8+176]
	359 Add X10, X10, 8
	360 NotImplemented "Instruction LDUR not yet implemented."
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Subtract X9, X9, 1
	363 Add X10, X10, 16
	364 Move X0, X21
	365 Move W2, W31
	366 Call 0x1C5D788
	367 NotImplemented "Instruction LDRSW not yet implemented."
	368 Add X8, X8, X9
	369 Add X0, X8, 312
	370 Move X8, [X0]
	371 Move X1, [X0+8]
	372 Move X0, X21
	373 NotImplemented "Instruction BLR not yet implemented."
	374 Compare X24, 0
	375 JumpIfNotEqual {378}
	376 Move X0, X23
	377 Call 0x1D2D690
	378 Move X0, X24
	379 Call 0x1C17F18
	380 Call 0x1991590

Method: System.Int32 CompareId(System.Int32 id1, System.Int32 id2)

Disassembly:
	0x03D92488 ADRP X8, 0x3D5000
	0x03D9248C LDR X8, [X8 + 0xB70]
	0x03D92490 MOV X1, X19
	0x03D92494 MOV X3, X31
	0x03D92498 MOV X21, X0
	0x03D9249C LDR X2, [X8]
	0x03D924A0 BL 0x2D0E824
	0x03D924A4 CBZ X20, 0x3D9256C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W1
	003 Add X0, X31, 12
	004 Move W1, W2
	005 Move X2, X31
	006 Call Int32.CompareTo, X0, X1
	007 Move X30, [X31+16]
	008 Return X0

Method: UnityEngine.UIElements.DragVisualMode HandleDragAndDrop(UnityEngine.UIElements.IListDragAndDropArgs args)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void OnDrop(UnityEngine.UIElements.IListDragAndDropArgs args)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void DragCleanup()

Disassembly:
	0x03D924A8 ADRP X8, 0x38C000

ISIL:
	001 Return 

Method: System.Void HandleAutoExpand(UnityEngine.UIElements.ReusableCollectionItem item, UnityEngine.Vector2 pointerPosition)

Disassembly:
	0x03D924AC LDR X8, [X8 + 0x98]

ISIL:
	001 Return 

