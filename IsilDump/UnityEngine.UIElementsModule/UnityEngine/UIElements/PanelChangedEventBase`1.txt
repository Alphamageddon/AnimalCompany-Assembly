Type: UnityEngine.UIElements.PanelChangedEventBase`1

Method: UnityEngine.UIElements.IPanel get_originPanel()

Disassembly:
	0x024A231C LDP X30, X23, [X31], #0x30
	0x024A2320 RET

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Void set_originPanel(UnityEngine.UIElements.IPanel value)

Disassembly:
	0x024A2324 BL 0x1C16F20
	0x024A2328 BL 0x1C16F28

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: UnityEngine.UIElements.IPanel get_destinationPanel()

Disassembly:
	0x024A232C STP X30, X25, [X31 - 0x40]!
	0x024A2330 STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Void set_destinationPanel(UnityEngine.UIElements.IPanel value)

Disassembly:
	0x024A2334 STP X22, X21, [X31 + 0x20]
	0x024A2338 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X0+144], X1
	002 Return 

Method: System.Void Init()

Disassembly:
	0x024A233C LDR X24, [X0 + 0x10]
	0x024A2340 CBZ X24, 0x24A23E0
	0x024A2344 LDR W9, [X24 + 0x18]
	0x024A2348 CMP W9, 0x1
	0x024A234C B.LT 0x24A23C4
	0x024A2350 MOV X19, X5
	0x024A2354 MOV X20, X4
	0x024A2358 MOV W21, W3
	0x024A235C MOV W22, W2
	0x024A2360 MOV W23, W1
	0x024A2364 MOV W8, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {15}
	005 Move X8, [X1+32]
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X1, [X8+8]
	009 Call 0x2D0E634, X0
	010 Move [X19+136], X31
	011 Move [X19+144], X31
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return 
	015 Call 0x1C17F20

Method: System.Void LocalInit()

Disassembly:
	0x024A2368 CMP W8, W9
	0x024A236C B.CS 0x24A23DC

ISIL:
	001 Move [X0+136], X31
	002 Move [X0+144], X31
	003 Return 

Method: T GetPooled(UnityEngine.UIElements.IPanel originPanel, UnityEngine.UIElements.IPanel destinationPanel)

Disassembly:
	0x024A2370 CBZ X20, 0x24A23E0
	0x024A2374 LDR W9, [X20 + 0x18]
	0x024A2378 SXTW X25, W8
	0x024A237C CMP W25, W9
	0x024A2380 B.CS 0x24A23DC
	0x024A2384 ADD X8, X24, X25, 0x3, LSL
	0x024A2388 LDR X0, [X8 + 0x20]
	0x024A238C CBZ X0, 0x24A23E0
	0x024A2390 LDR X8, [X19 + 0x20]
	0x024A2394 ADD X9, X20, X25, 0x2, LSL
	0x024A2398 LDR W4, [X9 + 0x20]
	0x024A239C MOV W1, W23
	0x024A23A0 LDR X8, [X8 + 0xC0]
	0x024A23A4 MOV W2, W22
	0x024A23A8 MOV W3, W21
	0x024A23AC LDR X5, [X8 + 0x48]
	0x024A23B0 BL 0x3197C18
	0x024A23B4 LDR W9, [X24 + 0x18]
	0x024A23B8 ADD W8, W25, 0x1
	0x024A23BC CMP W8, W9
	0x024A23C0 B.LT 0x24A2368
	0x024A23C4 LDP X20, X19, [X31 + 0x30]
	0x024A23C8 LDP X22, X21, [X31 + 0x20]
	0x024A23CC LDP X24, X23, [X31 + 0x10]
	0x024A23D0 MOVZ W0, 0x1
	0x024A23D4 LDP X30, X25, [X31], #0x40
	0x024A23D8 RET
	0x024A23DC BL 0x1C16F28
	0x024A23E0 BL 0x1C16F20
	0x024A23E4 STR X30, [X31 - 0x40]!
	0x024A23E8 STP X24, X23, [X31 + 0x10]
	0x024A23EC STP X22, X21, [X31 + 0x20]
	0x024A23F0 STP X20, X19, [X31 + 0x30]
	0x024A23F4 ADRP X22, 0x1F37000
	0x024A23F8 ADRP X21, 0x1C51000
	0x024A23FC LDRB W8, [X22 + 0xBB4]
	0x024A2400 LDR X21, [X21 + 0x5A8]
	0x024A2404 MOV X20, X1
	0x024A2408 MOV X19, X0
	0x024A240C TBNZ X8, 0x0, 0x24A2424
	0x024A2410 ADRP X0, 0x1C51000
	0x024A2414 LDR X0, [X0 + 0x5A8]
	0x024A2418 BL 0x1C16CF4
	0x024A241C MOVZ W8, 0x1
	0x024A2420 STRB W8, [X22 + 0xBB4]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X21, X2
	008 Move X19, X1
	009 Move X20, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+48]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, [X21+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, [X8+40]
	039 Call 0x2D0E6C4
	040 Compare X0, 0
	041 JumpIfEqual {66}
	042 Move X22, X0
	043 Move X0, [X21+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {51}
	049 Call 0x1C5D684
	050 Move X0, [X21+32]
	051 Move [X22+136], X20
	052 Move W8, [X0+309]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfEqual {58}
	057 Call 0x1C5D684
	058 Move [X22+144], X19
	059 Move X0, X22
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return X0
	066 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x024A2424 MOV X0, X19
	0x024A2428 MOV X1, X31
	0x024A242C BL 0x33BDD8C
	0x024A2430 MOV X0, X31
	0x024A2434 BL 0x33C236C
	0x024A2438 LDR X8, [X21]
	0x024A243C MOV W21, W0
	0x024A2440 LDR W9, [X8 + 0xE0]
	0x024A2444 CBNZ W9, 0x24A2450
	0x024A2448 MOV X0, X8
	0x024A244C BL 0x1C16DFC
	0x024A2450 MOVZ W1, 0x40
	0x024A2454 MOV W0, W21
	0x024A2458 MOV X2, X31
	0x024A245C BL 0x337EE94
	0x024A2460 LDR X8, [X20 + 0x20]
	0x024A2464 MOV W21, W0
	0x024A2468 LDR X8, [X8 + 0xC0]
	0x024A246C LDR X8, [X8]
	0x024A2470 LDRB W9, [X8 + 0x135]
	0x024A2474 TBNZ X9, 0x0, 0x24A2484
	0x024A2478 MOV X0, X8
	0x024A247C BL 0x1C5C684
	0x024A2480 MOV X8, X0
	0x024A2484 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+48]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move W9, [X8+224]
	018 Compare W9, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X8
	021 Call 0x1C17DFC
	022 Move X8, [X20+32]
	023 Move X0, X19
	024 Move X8, [X8+192]
	025 Move X1, [X8+64]
	026 Call 0x2D0E54C, X0
	027 Move [X19+136], X31
	028 Move [X19+144], X31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 

