Type: UnityEngine.UIElements.VisualTreeBindingsUpdater

Method: Unity.Profiling.ProfilerMarker get_profilerMarker()

Disassembly:
	0x03CEB1E4 STR X31, [X31 + 0x50]
	0x03CEB1E8 STP X31, X31, [X31 + 0x20]
	0x03CEB1EC STR X31, [X31 + 0x30]
	0x03CEB1F0 LDR X0, [X19 + 0x38]
	0x03CEB1F4 CBZ X0, 0x3CEB514
	0x03CEB1F8 ADRP X8, 0x477000
	0x03CEB1FC LDR X8, [X8 + 0x7F8]
	0x03CEB200 ADRP X27, 0x477000
	0x03CEB204 ADRP X28, 0x477000
	0x03CEB208 ADRP X23, 0x477000
	0x03CEB20C ADRP X25, 0x477000
	0x03CEB210 LDR X27, [X27 + 0x7E0]
	0x03CEB214 LDR X28, [X28 + 0x870]
	0x03CEB218 LDR X23, [X23 + 0x7C0]
	0x03CEB21C LDR X25, [X25 + 0x880]
	0x03CEB220 LDR X1, [X8]
	0x03CEB224 ADRP X24, 0x477000
	0x03CEB228 ADRP X22, 0x477000
	0x03CEB22C ADRP X26, 0x477000
	0x03CEB230 LDR X24, [X24 + 0x860]
	0x03CEB234 LDR X22, [X22 + 0x858]
	0x03CEB238 LDR X26, [X26 + 0x7D8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6FD000
	005 Move X19, 0x478000
	006 Move W8, [X20+1841]
	007 Move X19, [X19+1976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x478000
	013 Move X0, [X0+1976]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1841], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+16]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Boolean get_disableBindingsThrottling()

Disassembly:
	0x03CEB23C ADD X8, X31, 0x8
	0x03CEB240 BL 0x2DBE924
	0x03CEB244 LDUR V0, [X31 + 0x8]
	0x03CEB248 LDR X8, [X31 + 0x18]
	0x03CEB24C STR V0, [X31 + 0x6]
	0x03CEB250 STR X8, [X31 + 0x70]
	0x03CEB254 LDR X1, [X27]
	0x03CEB258 ADD X0, X31, 0x60
	0x03CEB25C BL 0x2BC3C64
	0x03CEB260 TBZ X0, 0x0, 0x3CEB35C
	0x03CEB264 LDR X21, [X31 + 0x70]
	0x03CEB268 MOV X1, X21
	0x03CEB26C BL 0x3CEA294
	0x03CEB270 MOV X20, X0
	0x03CEB274 CBZ X0, 0x3CEB334
	0x03CEB278 CBZ X21, 0x3CEB508
	0x03CEB27C LDR X29, [X21 + 0x3A0]
	0x03CEB280 MOV X0, X19
	0x03CEB284 MOV X1, X31
	0x03CEB288 BL 0x3D1A824
	0x03CEB28C CMP X29, X0
	0x03CEB290 B.EQ 0x3CEB2D4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6FD000
	005 Move X19, 0x478000
	006 Move W8, [X20+1842]
	007 Move X19, [X19+1976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x478000
	013 Move X0, [X0+1976]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1842], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+48]
	027 Move X30, [X31+32]
	028 Return X0

Method: UnityEngine.UIElements.IBinding GetBindingObjectFromElement(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03CEB294 LDR X8, [X20]
	0x03CEB298 LDR X1, [X23]
	0x03CEB29C LDRH W9, [X8 + 0x12E]
	0x03CEB2A0 CBZ X9, 0x3CEB2C4
	0x03CEB2A4 LDR X10, [X8 + 0xB0]
	0x03CEB2A8 ADD X10, X10, 0x8
	0x03CEB2AC LDUR X11, [X10 - 0x8]
	0x03CEB2B0 CMP X11, X1
	0x03CEB2B4 B.EQ 0x3CEB318
	0x03CEB2B8 SUBS X9, X9, 0x1
	0x03CEB2BC ADD X10, X10, 0x10
	0x03CEB2C0 B.NE 0x3CEB2AC
	0x03CEB2C4 MOVZ W2, 0x2
	0x03CEB2C8 MOV X0, X20
	0x03CEB2CC BL 0x1C5C788
	0x03CEB2D0 B 0x3CEB328
	0x03CEB2D4 LDR X0, [X19 + 0x68]
	0x03CEB2D8 CBZ X0, 0x3CEB510
	0x03CEB2DC LDR W10, [X0 + 0x1C]
	0x03CEB2E0 LDR X8, [X0 + 0x10]
	0x03CEB2E4 LDR X9, [X28]
	0x03CEB2E8 ADD W10, W10, 0x1
	0x03CEB2EC STR W10, [X0 + 0x1C]
	0x03CEB2F0 CBZ X8, 0x3CEB50C
	0x03CEB2F4 LDRSW X10, [X0 + 0x18]
	0x03CEB2F8 LDR W11, [X8 + 0x18]
	0x03CEB2FC CMP W10, W11
	0x03CEB300 B.CS 0x3CEB344
	0x03CEB304 ADD W9, W10, 0x1
	0x03CEB308 ADD X8, X8, X10, 0x3, LSL
	0x03CEB30C STR W9, [X0 + 0x18]
	0x03CEB310 STR X20, [X8 + 0x20]
	0x03CEB314 B 0x3CEB254
	0x03CEB318 LDR W9, [X10]
	0x03CEB31C ADD W9, W9, 0x2
	0x03CEB320 ADD X8, X8, W9, 0x4, SXTW
	0x03CEB324 ADD X0, X8, 0x138
	0x03CEB328 LDP X8, X1, [X0]
	0x03CEB32C MOV X0, X20
	0x03CEB330 BLR X8
	0x03CEB334 MOV X0, X19
	0x03CEB338 MOV X1, X21
	0x03CEB33C BL 0x3CEA4D4
	0x03CEB340 B 0x3CEB254
	0x03CEB344 LDR X8, [X9 + 0x20]
	0x03CEB348 LDR X8, [X8 + 0xC0]
	0x03CEB34C LDR X2, [X8 + 0x70]
	0x03CEB350 MOV X1, X20
	0x03CEB354 BL 0x301BF90
	0x03CEB358 B 0x3CEB254
	0x03CEB35C LDR X1, [X26]
	0x03CEB360 ADD X0, X31, 0x60
	0x03CEB364 BL 0x2BC3C60
	0x03CEB368 LDR X0, [X19 + 0x68]
	0x03CEB36C CBZ X0, 0x3CEB514
	0x03CEB370 LDR X1, [X25]
	0x03CEB374 ADD X8, X31, 0x8
	0x03CEB378 BL 0x301CB58
	0x03CEB37C LDUR V0, [X31 + 0x8]
	0x03CEB380 LDR X8, [X31 + 0x18]
	0x03CEB384 STR V0, [X31 + 0x4]
	0x03CEB388 STR X8, [X31 + 0x50]
	0x03CEB38C LDR X1, [X24]
	0x03CEB390 ADD X0, X31, 0x40
	0x03CEB394 BL 0x2BC4350
	0x03CEB398 TBZ X0, 0x0, 0x3CEB400
	0x03CEB39C LDR X20, [X31 + 0x50]
	0x03CEB3A0 CBZ X20, 0x3CEB500
	0x03CEB3A4 LDR X8, [X20]
	0x03CEB3A8 LDR X1, [X23]
	0x03CEB3AC LDRH W9, [X8 + 0x12E]
	0x03CEB3B0 CBZ X9, 0x3CEB3D4
	0x03CEB3B4 LDR X10, [X8 + 0xB0]
	0x03CEB3B8 ADD X10, X10, 0x8
	0x03CEB3BC LDUR X11, [X10 - 0x8]
	0x03CEB3C0 CMP X11, X1
	0x03CEB3C4 B.EQ 0x3CEB3E4
	0x03CEB3C8 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x6FD000
	006 Move X21, 0x478000
	007 Move W8, [X19+1843]
	008 Move X21, [X21+1968]
	009 Move X20, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x478000
	015 Move X0, [X0+1968]
	016 Call 0x1C17CF4
	017 Move X0, 0x478000
	018 Move X0, [X0+1976]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1843], W8
	022 Move X1, [X21]
	023 Move X0, X20
	024 Call 0x1C17E00
	025 Compare X0, 0
	026 JumpIfEqual {65}
	027 Move X8, [X0]
	028 Move X1, [X21]
	029 Move X19, X0
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move X0, X19
	040 Move W2, W31
	041 Call 0x1C5D788
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Add X8, X8, X9
	044 Add X0, X8, 312
	045 Move X8, [X0]
	046 Move X1, [X0+8]
	047 Move X0, X19
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Compare X0, 0
	050 JumpIfEqual {65}
	051 Move X8, [X19]
	052 Move X1, [X21]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move X0, X19
	063 Move W2, W31
	064 Call 0x1C5D788
	065 Move X8, 0x478000
	066 Move X8, [X8+1976]
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X20, [X31+16]
	074 Move X19, [X31+24]
	075 Move X30, [X31+32]
	076 Move X21, [X31+40]
	077 NotImplemented "Instruction LDRSW not yet implemented."
	078 Add X8, X8, X9
	079 Add X0, X8, 312
	080 Move X2, [X0]
	081 Move X1, [X0+8]
	082 Move X0, X19
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 CallNoReturn X2

Method: System.Void StartTracking(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03CEB454 CBZ X9, 0x3CEB478
	0x03CEB458 LDR X10, [X8 + 0xB0]
	0x03CEB45C ADD X10, X10, 0x8
	0x03CEB460 LDUR X11, [X10 - 0x8]
	0x03CEB464 CMP X11, X1
	0x03CEB468 B.EQ 0x3CEB488
	0x03CEB46C SUBS X9, X9, 0x1
	0x03CEB470 ADD X10, X10, 0x10
	0x03CEB474 B.NE 0x3CEB460
	0x03CEB478 MOVZ W2, 0x1
	0x03CEB47C MOV X0, X20
	0x03CEB480 BL 0x1C5C788
	0x03CEB484 B 0x3CEB498
	0x03CEB488 LDR W9, [X10]
	0x03CEB48C ADD W9, W9, 0x1
	0x03CEB490 ADD X8, X8, W9, 0x4, SXTW
	0x03CEB494 ADD X0, X8, 0x138
	0x03CEB498 LDP X8, X1, [X0]
	0x03CEB49C MOV X0, X20
	0x03CEB4A0 BLR X8
	0x03CEB4A4 B 0x3CEB430
	0x03CEB4A8 LDR X1, [X22]
	0x03CEB4AC ADD X0, X31, 0x20
	0x03CEB4B0 BL 0x2BC434C
	0x03CEB4B4 LDR X8, [X19 + 0x68]
	0x03CEB4B8 CBZ X8, 0x3CEB514
	0x03CEB4BC LDP W2, W9, [X8 + 0x18]
	0x03CEB4C0 ADD W9, W9, 0x1
	0x03CEB4C4 CMP W2, 0x1
	0x03CEB4C8 STP W31, W9, [X8 + 0x18]
	0x03CEB4CC B.LT 0x3CEB4E0
	0x03CEB4D0 LDR X0, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6FD000
	006 Move W8, [X21+1844]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x478000
	014 Move X0, [X0+1992]
	015 Call 0x1C17CF4
	016 Move X0, 0x478000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1844], W8
	021 Move X0, [X20+64]
	022 Compare X0, 0
	023 JumpIfEqual {42}
	024 Move X8, 0x478000
	025 Move X8, [X8+1992]
	026 Move X1, X19
	027 Move X2, [X8]
	028 Call HashSet`1<Object>.Add, X0, X1
	029 Move X0, [X20+72]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x478000
	033 Move X8, [X8+2000]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call HashSet`1<Object>.Remove, X0, X1
	041 Return 
	042 Call 0x1C17F20

Method: System.Void StopTracking(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03CEB4D4 MOV W1, W31
	0x03CEB4D8 MOV X3, X31
	0x03CEB4DC BL 0x339FA34
	0x03CEB4E0 LDP X20, X19, [X31 + 0xD0]
	0x03CEB4E4 LDP X22, X21, [X31 + 0xC0]
	0x03CEB4E8 LDP X24, X23, [X31 + 0xB0]
	0x03CEB4EC LDP X26, X25, [X31 + 0xA0]
	0x03CEB4F0 LDP X28, X27, [X31 + 0x90]
	0x03CEB4F4 LDP X29, X30, [X31 + 0x80]
	0x03CEB4F8 ADD X31, X31, 0xE0
	0x03CEB4FC RET
	0x03CEB500 BL 0x1C16F20
	0x03CEB504 BL 0x1C16F20
	0x03CEB508 BL 0x1C16F20
	0x03CEB50C BL 0x1C16F20
	0x03CEB510 BL 0x1C16F20
	0x03CEB514 BL 0x1C16F20
	0x03CEB518 B 0x3CEB53C
	0x03CEB51C B 0x3CEB53C
	0x03CEB520 B 0x3CEB53C
	0x03CEB524 B 0x3CEB53C
	0x03CEB528 B 0x3CEB53C
	0x03CEB52C B 0x3CEB53C
	0x03CEB530 B 0x3CEB53C
	0x03CEB534 B 0x3CEB598
	0x03CEB538 B 0x3CEB5EC
	0x03CEB53C MOV X20, X0
	0x03CEB540 CMP W1, 0x1
	0x03CEB544 B.NE 0x3CEB56C
	0x03CEB548 MOV X0, X20
	0x03CEB54C BL 0x3EB1AD0
	0x03CEB550 LDR X21, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6FD000
	006 Move W8, [X21+1845]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x478000
	014 Move X0, [X0+1992]
	015 Call 0x1C17CF4
	016 Move X0, 0x478000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1845], W8
	021 Move X0, [X20+72]
	022 Compare X0, 0
	023 JumpIfEqual {42}
	024 Move X8, 0x478000
	025 Move X8, [X8+1992]
	026 Move X1, X19
	027 Move X2, [X8]
	028 Call HashSet`1<Object>.Add, X0, X1
	029 Move X0, [X20+64]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x478000
	033 Move X8, [X8+2000]
	034 Move X1, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call HashSet`1<Object>.Remove, X0, X1
	041 Return 
	042 Call 0x1C17F20

Method: System.Collections.Generic.Dictionary`2<System.Object, System.Object> get_temporaryObjectCache()

Disassembly:
	0x03CEB554 BL 0x3EB1AE0
	0x03CEB558 LDR X1, [X26]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: UnityEngine.UIElements.IBinding GetAdditionalBinding(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03CEB3CC ADD X10, X10, 0x10
	0x03CEB3D0 B.NE 0x3CEB3BC
	0x03CEB3D4 MOV X0, X20
	0x03CEB3D8 MOV W2, W31
	0x03CEB3DC BL 0x1C5C788
	0x03CEB3E0 B 0x3CEB3F0
	0x03CEB3E4 LDRSW X9, [X10]
	0x03CEB3E8 ADD X8, X8, X9, 0x4, LSL
	0x03CEB3EC ADD X0, X8, 0x138
	0x03CEB3F0 LDP X8, X1, [X0]
	0x03CEB3F4 MOV X0, X20
	0x03CEB3F8 BLR X8
	0x03CEB3FC B 0x3CEB38C
	0x03CEB400 LDR X1, [X22]
	0x03CEB404 ADD X0, X31, 0x40
	0x03CEB408 BL 0x2BC434C
	0x03CEB40C LDR X0, [X19 + 0x68]
	0x03CEB410 CBZ X0, 0x3CEB514
	0x03CEB414 LDR X1, [X25]
	0x03CEB418 ADD X8, X31, 0x8
	0x03CEB41C BL 0x301CB58
	0x03CEB420 LDUR V0, [X31 + 0x8]
	0x03CEB424 LDR X8, [X31 + 0x18]
	0x03CEB428 STR V0, [X31 + 0x2]
	0x03CEB42C STR X8, [X31 + 0x30]
	0x03CEB430 LDR X1, [X24]
	0x03CEB434 ADD X0, X31, 0x20
	0x03CEB438 BL 0x2BC4350
	0x03CEB43C TBZ X0, 0x0, 0x3CEB4A8
	0x03CEB440 LDR X20, [X31 + 0x30]
	0x03CEB444 CBZ X20, 0x3CEB504
	0x03CEB448 LDR X8, [X20]
	0x03CEB44C LDR X1, [X23]
	0x03CEB450 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6FD000
	006 Move X20, 0x478000
	007 Move W8, [X21+1846]
	008 Move X20, [X20+1976]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x478000
	015 Move X0, [X0+1984]
	016 Call 0x1C17CF4
	017 Move X0, 0x478000
	018 Move X0, [X0+1976]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1846], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Compare X19, 0
	028 JumpIfEqual {44}
	029 Move X8, [X20]
	030 Move X20, 0x478000
	031 Move X0, X19
	032 Move X2, X31
	033 Move X8, [X8+184]
	034 Move W1, [X8+4]
	035 Move X20, [X20+1984]
	036 Call VisualElement.GetProperty, X0, X1
	037 Move X1, [X20]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call 0x1C17E00
	043 Return X0
	044 Call 0x1C17F20

Method: System.Void StartTrackingRecursive(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03CEB55C ADD X0, X31, 0x60
	0x03CEB560 BL 0x2BC3C60
	0x03CEB564 CBZ X21, 0x3CEB368
	0x03CEB568 B 0x3CEB618
	0x03CEB56C MOV X21, X31
	0x03CEB570 B 0x3CEB578
	0x03CEB574 MOV X20, X0
	0x03CEB578 LDR X1, [X26]
	0x03CEB57C ADD X0, X31, 0x60
	0x03CEB580 BL 0x2BC3C60
	0x03CEB584 CBZ X21, 0x3CEB63C
	0x03CEB588 MOV X0, X21
	0x03CEB58C BL 0x1C16F18
	0x03CEB590 B 0x3CEB598
	0x03CEB594 B 0x3CEB5EC
	0x03CEB598 MOV X20, X0
	0x03CEB59C CMP W1, 0x1
	0x03CEB5A0 B.NE 0x3CEB5C8
	0x03CEB5A4 MOV X0, X20
	0x03CEB5A8 BL 0x3EB1AD0
	0x03CEB5AC LDR X21, [X0]
	0x03CEB5B0 BL 0x3EB1AE0
	0x03CEB5B4 LDR X1, [X22]
	0x03CEB5B8 ADD X0, X31, 0x20
	0x03CEB5BC BL 0x2BC434C
	0x03CEB5C0 CBZ X21, 0x3CEB4B4
	0x03CEB5C4 B 0x3CEB618
	0x03CEB5C8 MOV X21, X31
	0x03CEB5CC B 0x3CEB5D4
	0x03CEB5D0 MOV X20, X0
	0x03CEB5D4 LDR X1, [X22]
	0x03CEB5D8 ADD X0, X31, 0x20
	0x03CEB5DC BL 0x2BC434C
	0x03CEB5E0 CBZ X21, 0x3CEB63C
	0x03CEB5E4 MOV X0, X21
	0x03CEB5E8 BL 0x1C16F18
	0x03CEB5EC MOV X20, X0
	0x03CEB5F0 CMP W1, 0x1
	0x03CEB5F4 B.NE 0x3CEB620
	0x03CEB5F8 MOV X0, X20
	0x03CEB5FC BL 0x3EB1AD0
	0x03CEB600 LDR X21, [X0]
	0x03CEB604 BL 0x3EB1AE0
	0x03CEB608 LDR X1, [X22]
	0x03CEB60C ADD X0, X31, 0x40
	0x03CEB610 BL 0x2BC434C
	0x03CEB614 CBZ X21, 0x3CEB40C
	0x03CEB618 MOV X0, X21
	0x03CEB61C BL 0x1C16F18
	0x03CEB620 MOV X21, X31
	0x03CEB624 B 0x3CEB62C
	0x03CEB628 MOV X20, X0
	0x03CEB62C LDR X1, [X22]
	0x03CEB630 ADD X0, X31, 0x40
	0x03CEB634 BL 0x2BC434C
	0x03CEB638 CBNZ X21, 0x3CEB644
	0x03CEB63C MOV X0, X20
	0x03CEB640 BL 0x1D2C690
	0x03CEB644 MOV X0, X21
	0x03CEB648 BL 0x1C16F18
	0x03CEB64C BL 0x1990590
	0x03CEB650 STR X30, [X31 - 0x50]!
	0x03CEB654 STP X26, X25, [X31 + 0x10]
	0x03CEB658 STP X24, X23, [X31 + 0x20]
	0x03CEB65C STP X22, X21, [X31 + 0x30]
	0x03CEB660 STP X20, X19, [X31 + 0x40]
	0x03CEB664 ADRP X20, 0x6FC000
	0x03CEB668 ADRP X26, 0x477000
	0x03CEB66C ADRP X25, 0x477000
	0x03CEB670 ADRP X24, 0x439000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6FD000
	007 Move W8, [X21+1847]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x478000
	015 Move X0, [X0+1992]
	016 Call 0x1C17CF4
	017 Move X0, 0x478000
	018 Move X0, [X0+1976]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1847], W8
	022 Move X21, 0x478000
	023 Move X21, [X21+1976]
	024 Move X1, X19
	025 Move [X31+8], X31
	026 Call VisualTreeBindingsUpdater.GetBindingObjectFromElement, X0, X1
	027 Compare X0, 0
	028 JumpIfEqual {32}
	029 Move X0, X20
	030 Move X1, X19
	031 Call VisualTreeBindingsUpdater.StartTracking, X0, X1
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Compare X19, 0
	038 JumpIfEqual {80}
	039 Move X8, [X21]
	040 Move X0, X19
	041 Move X2, X31
	042 Move X8, [X8+184]
	043 Move W1, [X8]
	044 Call VisualElement.GetProperty, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {55}
	047 Move X0, [X20+88]
	048 Compare X0, 0
	049 JumpIfEqual {80}
	050 Move X8, 0x478000
	051 Move X8, [X8+1992]
	052 Move X1, X19
	053 Move X2, [X8]
	054 Call HashSet`1<Object>.Add, X0, X1
	055 Move X8, [X19+888]
	056 Add X0, X31, 8
	057 Move X1, X31
	058 Move [X31+8], X8
	059 Call Hierarchy.get_childCount, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W21, W0
	062 Move W22, W31
	063 Move X8, [X19+888]
	064 Add X0, X31, 8
	065 Move W1, W22
	066 Move X2, X31
	067 Move [X31+8], X8
	068 Call Hierarchy.get_Item, X0, X1
	069 Move X1, X0
	070 Move X0, X20
	071 Call VisualTreeBindingsUpdater.StartTrackingRecursive, X0, X1
	072 Add W22, W22, 1
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Return 
	080 Call 0x1C17F20

Method: System.Void StopTrackingRecursive(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03CEB674 ADRP X23, 0x439000
	0x03CEB678 ADRP X22, 0x477000
	0x03CEB67C ADRP X21, 0x477000
	0x03CEB680 LDR X26, [X26 + 0x888]
	0x03CEB684 LDRB W8, [X20 + 0x73E]
	0x03CEB688 LDR X25, [X25 + 0x890]
	0x03CEB68C LDR X24, [X24 + 0xB28]
	0x03CEB690 LDR X23, [X23 + 0xB30]
	0x03CEB694 LDR X22, [X22 + 0x898]
	0x03CEB698 LDR X21, [X21 + 0x8A0]
	0x03CEB69C MOV X19, X0
	0x03CEB6A0 TBNZ X8, 0x0, 0x3CEB6F4
	0x03CEB6A4 ADRP X0, 0x439000
	0x03CEB6A8 LDR X0, [X0 + 0xB30]
	0x03CEB6AC BL 0x1C16CF4
	0x03CEB6B0 ADRP X0, 0x439000
	0x03CEB6B4 LDR X0, [X0 + 0xB28]
	0x03CEB6B8 BL 0x1C16CF4
	0x03CEB6BC ADRP X0, 0x477000
	0x03CEB6C0 LDR X0, [X0 + 0x890]
	0x03CEB6C4 BL 0x1C16CF4
	0x03CEB6C8 ADRP X0, 0x477000
	0x03CEB6CC LDR X0, [X0 + 0x888]
	0x03CEB6D0 BL 0x1C16CF4
	0x03CEB6D4 ADRP X0, 0x477000
	0x03CEB6D8 LDR X0, [X0 + 0x8A0]
	0x03CEB6DC BL 0x1C16CF4
	0x03CEB6E0 ADRP X0, 0x477000
	0x03CEB6E4 LDR X0, [X0 + 0x898]
	0x03CEB6E8 BL 0x1C16CF4
	0x03CEB6EC MOVZ W8, 0x1
	0x03CEB6F0 STRB W8, [X20 + 0x73E]
	0x03CEB6F4 LDR X0, [X26]
	0x03CEB6F8 BL 0x1C16F10
	0x03CEB6FC LDR X1, [X25]
	0x03CEB700 MOV X20, X0
	0x03CEB704 BL 0x2DBDE08
	0x03CEB708 STR X20, [X19 + 0x38]
	0x03CEB70C LDR X0, [X26]
	0x03CEB710 BL 0x1C16F10
	0x03CEB714 LDR X1, [X25]
	0x03CEB718 MOV X20, X0
	0x03CEB71C BL 0x2DBDE08
	0x03CEB720 STR X20, [X19 + 0x40]
	0x03CEB724 LDR X0, [X26]
	0x03CEB728 BL 0x1C16F10
	0x03CEB72C LDR X1, [X25]
	0x03CEB730 MOV X20, X0
	0x03CEB734 BL 0x2DBDE08
	0x03CEB738 STP X20, X31, [X19 + 0x48]
	0x03CEB73C LDR X0, [X26]
	0x03CEB740 BL 0x1C16F10
	0x03CEB744 LDR X1, [X25]
	0x03CEB748 MOV X20, X0
	0x03CEB74C BL 0x2DBDE08
	0x03CEB750 STR X20, [X19 + 0x58]
	0x03CEB754 LDR X0, [X24]
	0x03CEB758 BL 0x1C16F10
	0x03CEB75C LDR X1, [X23]
	0x03CEB760 MOV X20, X0
	0x03CEB764 BL 0x2AA4804
	0x03CEB768 STR X20, [X19 + 0x60]
	0x03CEB76C LDR X0, [X22]
	0x03CEB770 BL 0x1C16F10
	0x03CEB774 LDR X1, [X21]
	0x03CEB778 MOV X20, X0
	0x03CEB77C BL 0x301B7C4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6FD000
	007 Move X21, 0x478000
	008 Move W8, [X22+1848]
	009 Move X21, [X21+1976]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x478000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move X0, 0x478000
	020 Move X0, [X0+1976]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1848], W8
	024 Move X0, X20
	025 Move X1, X19
	026 Move [X31+8], X31
	027 Call VisualTreeBindingsUpdater.StopTracking, X0, X1
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Compare X19, 0
	034 JumpIfEqual {76}
	035 Move X8, [X21]
	036 Move X0, X19
	037 Move X2, X31
	038 Move X8, [X8+184]
	039 Move W1, [X8]
	040 Call VisualElement.GetProperty, X0, X1
	041 Compare X0, 0
	042 JumpIfEqual {51}
	043 Move X0, [X20+88]
	044 Compare X0, 0
	045 JumpIfEqual {76}
	046 Move X8, 0x478000
	047 Move X8, [X8+2000]
	048 Move X1, X19
	049 Move X2, [X8]
	050 Call HashSet`1<Object>.Remove, X0, X1
	051 Move X8, [X19+888]
	052 Add X0, X31, 8
	053 Move X1, X31
	054 Move [X31+8], X8
	055 Call Hierarchy.get_childCount, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W21, W0
	058 Move W22, W31
	059 Move X8, [X19+888]
	060 Add X0, X31, 8
	061 Move W1, W22
	062 Move X2, X31
	063 Move [X31+8], X8
	064 Call Hierarchy.get_Item, X0, X1
	065 Move X1, X0
	066 Move X0, X20
	067 Call VisualTreeBindingsUpdater.StopTrackingRecursive, X0, X1
	068 Add W22, W22, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return 
	076 Call 0x1C17F20

Method: System.Void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType)

Disassembly:
	0x03CEB780 STR X20, [X19 + 0x68]
	0x03CEB784 MOV X0, X19
	0x03CEB788 LDP X20, X19, [X31 + 0x40]
	0x03CEB78C LDP X22, X21, [X31 + 0x30]
	0x03CEB790 LDP X24, X23, [X31 + 0x20]
	0x03CEB794 LDP X26, X25, [X31 + 0x10]
	0x03CEB798 MOV X1, X31
	0x03CEB79C LDR X30, [X31], #0x50
	0x03CEB7A0 B 0x3D1AFF0
	0x03CEB7A4 STR X30, [X31 - 0x50]!
	0x03CEB7A8 STP X26, X25, [X31 + 0x10]
	0x03CEB7AC STP X24, X23, [X31 + 0x20]
	0x03CEB7B0 STP X22, X21, [X31 + 0x30]
	0x03CEB7B4 STP X20, X19, [X31 + 0x40]
	0x03CEB7B8 ADRP X25, 0x6FC000
	0x03CEB7BC ADRP X26, 0x477000
	0x03CEB7C0 ADRP X19, 0x477000
	0x03CEB7C4 ADRP X24, 0x477000
	0x03CEB7C8 ADRP X23, 0x477000
	0x03CEB7CC ADRP X22, 0x477000
	0x03CEB7D0 ADRP X21, 0x477000
	0x03CEB7D4 ADRP X20, 0x477000
	0x03CEB7D8 LDR X26, [X26 + 0x8A8]
	0x03CEB7DC LDR X19, [X19 + 0x7B8]
	0x03CEB7E0 LDRB W8, [X25 + 0x73F]
	0x03CEB7E4 LDR X24, [X24 + 0x8B0]
	0x03CEB7E8 LDR X23, [X23 + 0x8B8]
	0x03CEB7EC LDR X22, [X22 + 0x8C0]
	0x03CEB7F0 LDR X21, [X21 + 0x8C8]
	0x03CEB7F4 LDR X20, [X20 + 0x8D0]
	0x03CEB7F8 TBNZ X8, 0x0, 0x3CEB858
	0x03CEB7FC ADRP X0, 0x477000
	0x03CEB800 LDR X0, [X0 + 0x7B8]
	0x03CEB804 BL 0x1C16CF4
	0x03CEB808 ADRP X0, 0x477000
	0x03CEB80C LDR X0, [X0 + 0x8C0]
	0x03CEB810 BL 0x1C16CF4
	0x03CEB814 ADRP X0, 0x477000
	0x03CEB818 LDR X0, [X0 + 0x8A8]
	0x03CEB81C BL 0x1C16CF4
	0x03CEB820 ADRP X0, 0x477000
	0x03CEB824 LDR X0, [X0 + 0x8B0]
	0x03CEB828 BL 0x1C16CF4
	0x03CEB82C ADRP X0, 0x477000
	0x03CEB830 LDR X0, [X0 + 0x8B8]
	0x03CEB834 BL 0x1C16CF4
	0x03CEB838 ADRP X0, 0x477000
	0x03CEB83C LDR X0, [X0 + 0x8D0]
	0x03CEB840 BL 0x1C16CF4
	0x03CEB844 ADRP X0, 0x477000
	0x03CEB848 LDR X0, [X0 + 0x8C8]
	0x03CEB84C BL 0x1C16CF4
	0x03CEB850 MOVZ W8, 0x1
	0x03CEB854 STRB W8, [X25 + 0x73F]
	0x03CEB858 LDR X0, [X26]
	0x03CEB85C MOV X1, X31
	0x03CEB860 BL 0x3C30760
	0x03CEB864 LDR X8, [X19]
	0x03CEB868 MOV X1, X31
	0x03CEB86C LDR X8, [X8 + 0xB8]
	0x03CEB870 STR W0, [X8]
	0x03CEB874 LDR X0, [X24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6FD000
	007 Move W8, [X22+1849]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x478000
	016 Move X0, [X0+1992]
	017 Call 0x1C17CF4
	018 Move X0, 0x478000
	019 Move X0, [X0+1976]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1849], W8
	023 Move X0, X20
	024 Move X1, X19
	025 Move W2, W21
	026 Move X3, X31
	027 Call BaseVisualTreeHierarchyTrackerUpdater.OnVersionChanged, X0, X1, X2
	028 Move TEMP, X21
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {73}
	032 Move X1, X19
	033 Call VisualTreeBindingsUpdater.GetBindingObjectFromElement, X0, X1
	034 Compare X0, 0
	035 JumpIfEqual {39}
	036 Move X0, X20
	037 Move X1, X19
	038 Call VisualTreeBindingsUpdater.StartTracking, X0, X1
	039 Move X0, X20
	040 Move X1, X19
	041 Call VisualTreeBindingsUpdater.StopTracking, X0, X1
	042 Move X21, 0x478000
	043 Move X21, [X21+1976]
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Compare X19, 0
	050 JumpIfEqual {79}
	051 Move X8, [X21]
	052 Move X0, X19
	053 Move X2, X31
	054 Move X8, [X8+184]
	055 Move W1, [X8]
	056 Call VisualElement.GetProperty, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {73}
	059 Move X0, [X20+88]
	060 Compare X0, 0
	061 JumpIfEqual {79}
	062 Move X8, 0x478000
	063 Move X8, [X8+1992]
	064 Move X1, X19
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X2, [X8]
	070 Move X30, [X31+48]
	071 Call HashSet`1<Object>.Add, X0, X1
	072 Return 
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return 
	079 Call 0x1C17F20

Method: System.Void OnHierarchyChange(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.HierarchyChangeType type)

Disassembly:
	0x03CEB878 BL 0x3C30760
	0x03CEB87C LDR X8, [X19]
	0x03CEB880 MOVZ W1, 0x1
	0x03CEB884 MOV W2, W31
	0x03CEB888 MOV W3, W31
	0x03CEB88C LDR X8, [X8 + 0xB8]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Compare W2, 0
	003 JumpIfNotEqual {8}
	004 Call VisualTreeBindingsUpdater.StartTrackingRecursive, X0, X1
	005 Return 
	006 Call VisualTreeBindingsUpdater.StopTrackingRecursive, X0, X1
	007 Return 
	008 Return 

Method: System.Int64 CurrentTime()

Disassembly:
	0x03CEB890 MOV X4, X31
	0x03CEB894 STR W0, [X8 + 0x4]
	0x03CEB898 LDR X8, [X19]
	0x03CEB89C LDR X0, [X23]
	0x03CEB8A0 LDR X8, [X8 + 0xB8]
	0x03CEB8A4 STR X0, [X8 + 0x8]
	0x03CEB8A8 BL 0x3BFE7FC
	0x03CEB8AC LDR X8, [X19]
	0x03CEB8B0 MOVZ W1, 0x1
	0x03CEB8B4 MOV W2, W31
	0x03CEB8B8 MOV W3, W31
	0x03CEB8BC LDR X8, [X8 + 0xB8]
	0x03CEB8C0 MOV X4, X31
	0x03CEB8C4 STR X0, [X8 + 0x10]
	0x03CEB8C8 LDR X0, [X22]
	0x03CEB8CC BL 0x3BFE7FC
	0x03CEB8D0 LDR X8, [X19]
	0x03CEB8D4 MOVZ W1, 0x1
	0x03CEB8D8 MOV W2, W31
	0x03CEB8DC MOV W3, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x6FD000
	005 Move X20, 0x433000
	006 Move W8, [X19+1850]
	007 Move X20, [X20+3336]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x433000
	013 Move X0, [X0+3336]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1850], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X0, X31
	025 Move X30, [X31+32]
	026 Call Panel.TimeSinceStartupMs
	027 Return X0

Method: System.Void PerformTrackingOperations()

Disassembly:
	0x03CEB8E0 LDR X8, [X8 + 0xB8]
	0x03CEB8E4 MOV X4, X31
	0x03CEB8E8 STR X0, [X8 + 0x18]
	0x03CEB8EC LDR X0, [X21]
	0x03CEB8F0 BL 0x3BFE7FC
	0x03CEB8F4 LDR X8, [X19]
	0x03CEB8F8 MOVZ W1, 0x1
	0x03CEB8FC MOV W2, W31
	0x03CEB900 MOV W3, W31
	0x03CEB904 LDR X8, [X8 + 0xB8]
	0x03CEB908 MOV X4, X31
	0x03CEB90C STR X0, [X8 + 0x20]
	0x03CEB910 LDR X0, [X20]
	0x03CEB914 BL 0x3BFE7FC
	0x03CEB918 LDR X8, [X19]
	0x03CEB91C LDP X20, X19, [X31 + 0x40]
	0x03CEB920 LDP X22, X21, [X31 + 0x30]
	0x03CEB924 LDP X24, X23, [X31 + 0x20]
	0x03CEB928 LDR X8, [X8 + 0xB8]
	0x03CEB92C LDP X26, X25, [X31 + 0x10]
	0x03CEB930 STR X0, [X8 + 0x28]
	0x03CEB934 STRB W31, [X8 + 0x30]
	0x03CEB938 LDR X30, [X31], #0x50
	0x03CEB93C RET
	0x03CEB940 STR X30, [X31 - 0x20]!
	0x03CEB944 STP X20, X19, [X31 + 0x10]
	0x03CEB948 ADRP X20, 0x6FC000
	0x03CEB94C ADRP X19, 0x477000
	0x03CEB950 LDRB W8, [X20 + 0x740]
	0x03CEB954 LDR X19, [X19 + 0x8D8]
	0x03CEB958 TBNZ X8, 0x0, 0x3CEB970
	0x03CEB95C ADRP X0, 0x477000
	0x03CEB960 LDR X0, [X0 + 0x8D8]
	0x03CEB964 BL 0x1C16CF4
	0x03CEB968 MOVZ W8, 0x1
	0x03CEB96C STRB W8, [X20 + 0x740]
	0x03CEB970 LDR X0, [X19]
	0x03CEB974 LDR W8, [X0 + 0xE0]
	0x03CEB978 CBNZ W8, 0x3CEB984
	0x03CEB97C BL 0x1C16DFC
	0x03CEB980 LDR X0, [X19]
	0x03CEB984 LDR X8, [X0 + 0xB8]
	0x03CEB988 LDP X20, X19, [X31 + 0x10]
	0x03CEB98C LDR W0, [X8]
	0x03CEB990 LDR X30, [X31], #0x20
	0x03CEB994 RET
	0x03CEB998 STP X30, X21, [X31 - 0x20]!
	0x03CEB99C STP X20, X19, [X31 + 0x10]
	0x03CEB9A0 ADRP X21, 0x6FC000
	0x03CEB9A4 ADRP X20, 0x477000
	0x03CEB9A8 LDRB W8, [X21 + 0x741]
	0x03CEB9AC LDR X20, [X20 + 0x8D8]
	0x03CEB9B0 MOV W19, W0
	0x03CEB9B4 TBNZ X8, 0x0, 0x3CEB9CC
	0x03CEB9B8 ADRP X0, 0x477000
	0x03CEB9BC LDR X0, [X0 + 0x8D8]
	0x03CEB9C0 BL 0x1C16CF4
	0x03CEB9C4 MOVZ W8, 0x1
	0x03CEB9C8 STRB W8, [X21 + 0x741]
	0x03CEB9CC LDR X0, [X20]
	0x03CEB9D0 LDR W8, [X0 + 0xE0]
	0x03CEB9D4 CBNZ W8, 0x3CEB9E0
	0x03CEB9D8 BL 0x1C16DFC
	0x03CEB9DC LDR X0, [X20]
	0x03CEB9E0 LDR X8, [X0 + 0xB8]
	0x03CEB9E4 STR W19, [X8]
	0x03CEB9E8 LDP X20, X19, [X31 + 0x10]
	0x03CEB9EC LDP X30, X21, [X31], #0x20
	0x03CEB9F0 RET
	0x03CEB9F4 STR X30, [X31 - 0x50]!
	0x03CEB9F8 STP X26, X25, [X31 + 0x10]
	0x03CEB9FC STP X24, X23, [X31 + 0x20]
	0x03CEBA00 STP X22, X21, [X31 + 0x30]
	0x03CEBA04 STP X20, X19, [X31 + 0x40]
	0x03CEBA08 ADRP X20, 0x6FC000
	0x03CEBA0C ADRP X23, 0x431000
	0x03CEBA10 LDRB W8, [X20 + 0x742]
	0x03CEBA14 LDR X23, [X23 + 0xE50]
	0x03CEBA18 MOV X19, X0
	0x03CEBA1C TBNZ X8, 0x0, 0x3CEBA70
	0x03CEBA20 ADRP X0, 0x477000
	0x03CEBA24 LDR X0, [X0 + 0x8E0]
	0x03CEBA28 BL 0x1C16CF4
	0x03CEBA2C ADRP X0, 0x477000
	0x03CEBA30 LDR X0, [X0 + 0x8D8]
	0x03CEBA34 BL 0x1C16CF4
	0x03CEBA38 ADRP X0, 0x477000
	0x03CEBA3C LDR X0, [X0 + 0x8E8]
	0x03CEBA40 BL 0x1C16CF4
	0x03CEBA44 ADRP X0, 0x477000
	0x03CEBA48 LDR X0, [X0 + 0x8F0]
	0x03CEBA4C BL 0x1C16CF4
	0x03CEBA50 ADRP X0, 0x477000
	0x03CEBA54 LDR X0, [X0 + 0x8F8]
	0x03CEBA58 BL 0x1C16CF4
	0x03CEBA5C ADRP X0, 0x431000
	0x03CEBA60 LDR X0, [X0 + 0xE50]
	0x03CEBA64 BL 0x1C16CF4
	0x03CEBA68 MOVZ W8, 0x1
	0x03CEBA6C STRB W8, [X20 + 0x742]
	0x03CEBA70 ADRP X22, 0x477000
	0x03CEBA74 ADRP X21, 0x477000
	0x03CEBA78 LDR X22, [X22 + 0x8F8]
	0x03CEBA7C LDR X21, [X21 + 0x8F0]
	0x03CEBA80 MOV X0, X19
	0x03CEBA84 MOV X1, X31
	0x03CEBA88 BL 0x33BDD8C
	0x03CEBA8C LDR X0, [X23]
	0x03CEBA90 LDR W8, [X0 + 0xE0]
	0x03CEBA94 CBNZ W8, 0x3CEBAA0
	0x03CEBA98 BL 0x1C16DFC
	0x03CEBA9C LDR X0, [X23]
	0x03CEBAA0 LDR X8, [X0 + 0xB8]
	0x03CEBAA4 LDR X0, [X22]
	0x03CEBAA8 ADRP X24, 0x477000
	0x03CEBAAC ADRP X25, 0x477000
	0x03CEBAB0 ADRP X22, 0x477000
	0x03CEBAB4 LDR W20, [X8]
	0x03CEBAB8 LDR X24, [X24 + 0x8E0]
	0x03CEBABC LDR X25, [X25 + 0x8E8]
	0x03CEBAC0 LDR X22, [X22 + 0x8D8]
	0x03CEBAC4 BL 0x1C16F10
	0x03CEBAC8 LDR X2, [X21]
	0x03CEBACC MOV W1, W20
	0x03CEBAD0 MOV X21, X0
	0x03CEBAD4 BL 0x301B830
	0x03CEBAD8 MOV W26, W31
	0x03CEBADC STR X21, [X19 + 0x10]
	0x03CEBAE0 LDR X0, [X23]
	0x03CEBAE4 LDR W8, [X0 + 0xE0]
	0x03CEBAE8 CBNZ W8, 0x3CEBAF4
	0x03CEBAEC BL 0x1C16DFC
	0x03CEBAF0 LDR X0, [X23]
	0x03CEBAF4 LDR X8, [X0 + 0xB8]
	0x03CEBAF8 LDR W8, [X8]
	0x03CEBAFC CMP W26, W8
	0x03CEBB00 B.GE 0x3CEBB7C
	0x03CEBB04 LDR X0, [X24]
	0x03CEBB08 LDR X20, [X19 + 0x10]
	0x03CEBB0C BL 0x1C16F10
	0x03CEBB10 MOV X1, X31
	0x03CEBB14 MOV X21, X0
	0x03CEBB18 BL 0x33BDD8C
	0x03CEBB1C CBZ X20, 0x3CEBC44
	0x03CEBB20 LDR W10, [X20 + 0x1C]
	0x03CEBB24 LDR X8, [X20 + 0x10]
	0x03CEBB28 LDR X9, [X25]
	0x03CEBB2C ADD W10, W10, 0x1
	0x03CEBB30 STR W10, [X20 + 0x1C]
	0x03CEBB34 CBZ X8, 0x3CEBC44
	0x03CEBB38 LDRSW X10, [X20 + 0x18]
	0x03CEBB3C LDR W11, [X8 + 0x18]
	0x03CEBB40 CMP W10, W11
	0x03CEBB44 B.CS 0x3CEBB5C
	0x03CEBB48 ADD W9, W10, 0x1
	0x03CEBB4C ADD X8, X8, X10, 0x3, LSL
	0x03CEBB50 STR W9, [X20 + 0x18]
	0x03CEBB54 STR X21, [X8 + 0x20]
	0x03CEBB58 B 0x3CEBB74
	0x03CEBB5C LDR X8, [X9 + 0x20]
	0x03CEBB60 MOV X0, X20
	0x03CEBB64 MOV X1, X21

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+96], X26
	004 Move [X31+104], X25
	005 Move [X31+112], X24
	006 Move [X31+120], X23
	007 Move [X31+128], X22
	008 Move [X31+136], X21
	009 Move [X31+144], X20
	010 Move [X31+152], X19
	011 Move X20, 0x6FD000
	012 Move W8, [X20+1851]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x478000
	019 Move X0, [X0+2008]
	020 Call 0x1C17CF4
	021 Move X0, 0x478000
	022 Move X0, [X0+2016]
	023 Call 0x1C17CF4
	024 Move X0, 0x478000
	025 Move X0, [X0+2024]
	026 Call 0x1C17CF4
	027 Move X0, 0x478000
	028 Move X0, [X0+1992]
	029 Call 0x1C17CF4
	030 Move X0, 0x478000
	031 Move X0, [X0+2032]
	032 Call 0x1C17CF4
	033 Move X0, 0x478000
	034 Move X0, [X0+2040]
	035 Call 0x1C17CF4
	036 Move X0, 0x478000
	037 Move X0, [X0+2000]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+1851], W8
	041 Move [X31+48], X31
	042 Move [X31+56], X31
	043 Move [X31+64], X31
	044 Move [X31+24], X31
	045 Move [X31+32], X31
	046 Move [X31+40], X31
	047 Move X0, [X19+64]
	048 Compare X0, 0
	049 JumpIfEqual {135}
	050 Move X26, 0x478000
	051 Move X26, [X26+2040]
	052 Move X24, 0x478000
	053 Move X21, 0x478000
	054 Move X24, [X24+2016]
	055 Move X21, [X21+1992]
	056 Move X1, [X26]
	057 Move X23, 0x478000
	058 Move X25, 0x478000
	059 Move X22, 0x478000
	060 Move X23, [X23+2032]
	061 Move X25, [X25+2000]
	062 Move X22, [X22+2008]
	063 Add X8, X31, 0
	064 Call HashSet`1<Object>.GetEnumerator, X0
	065 Move V0, [X31]
	066 Move X8, [X31+16]
	067 Move [X31+3], V0
	068 Move [X31+64], X8
	069 Move X1, [X24]
	070 Add X0, X31, 48
	071 Call Enumerator<Object>.MoveNext, X0
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {87}
	076 Move X20, [X31+64]
	077 Move X1, X20
	078 Call VisualTreeBindingsUpdater.GetBindingObjectFromElement, X0, X1
	079 Compare X0, 0
	080 JumpIfEqual {69}
	081 Move X0, [X19+56]
	082 Compare X0, 0
	083 JumpIfEqual {134}
	084 Move X2, [X21]
	085 Move X1, X20
	086 Call HashSet`1<Object>.Add, X0, X1
	087 Move X1, [X22]
	088 Add X0, X31, 48
	089 Call Enumerator<Object>.Dispose, X0
	090 Move X0, [X19+64]
	091 Compare X0, 0
	092 JumpIfEqual {135}
	093 Move X1, [X23]
	094 Call HashSet`1<Object>.Clear, X0
	095 Move X0, [X19+72]
	096 Compare X0, 0
	097 JumpIfEqual {135}
	098 Move X1, [X26]
	099 Add X8, X31, 24
	100 Call HashSet`1<Object>.GetEnumerator, X0
	101 Move X1, [X24]
	102 Add X0, X31, 24
	103 Call Enumerator<Object>.MoveNext, X0
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {114}
	108 Move X0, [X19+56]
	109 Compare X0, 0
	110 JumpIfEqual {133}
	111 Move X1, [X31+40]
	112 Move X2, [X25]
	113 Call HashSet`1<Object>.Remove, X0, X1
	114 Move X1, [X22]
	115 Add X0, X31, 24
	116 Call Enumerator<Object>.Dispose, X0
	117 Move X0, [X19+72]
	118 Compare X0, 0
	119 JumpIfEqual {135}
	120 Move X1, [X23]
	121 Call HashSet`1<Object>.Clear, X0
	122 Move X20, [X31+144]
	123 Move X19, [X31+152]
	124 Move X22, [X31+128]
	125 Move X21, [X31+136]
	126 Move X24, [X31+112]
	127 Move X23, [X31+120]
	128 Move X26, [X31+96]
	129 Move X25, [X31+104]
	130 Move X30, [X31+80]
	131 Add X31, X31, 160
	132 Return 
	133 Call 0x1C17F20
	134 Call 0x1C17F20
	135 Call 0x1C17F20
	136 Move X20, X0
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, X20
	139 Call 0x3EB2AD0
	140 Move X21, [X0]
	141 Call 0x3EB2AE0
	142 Move X1, [X22]
	143 Add X0, X31, 24
	144 Call Enumerator<Object>.Dispose, X0
	145 Compare X21, 0
	146 JumpIfEqual {117}
	147 Move X21, X31
	148 Move X20, X0
	149 Move X1, [X22]
	150 Add X0, X31, 24
	151 Call Enumerator<Object>.Dispose, X0
	152 Compare X21, 0
	153 JumpIfEqual {176}
	154 Move X0, X21
	155 Call 0x1C17F18
	156 Move X20, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X20
	159 Call 0x3EB2AD0
	160 Move X21, [X0]
	161 Call 0x3EB2AE0
	162 Move X1, [X22]
	163 Add X0, X31, 48
	164 Call Enumerator<Object>.Dispose, X0
	165 Compare X21, 0
	166 JumpIfEqual {90}
	167 Move X0, X21
	168 Call 0x1C17F18
	169 Move X21, X31
	170 Move X20, X0
	171 Move X1, [X22]
	172 Add X0, X31, 48
	173 Call Enumerator<Object>.Dispose, X0
	174 Compare X21, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X20
	177 Call 0x1D2D690
	178 Move X0, X21
	179 Call 0x1C17F18
	180 Call 0x1991590

Method: System.Void Update()

Disassembly:
	0x03CEBB68 LDR X8, [X8 + 0xC0]
	0x03CEBB6C LDR X2, [X8 + 0x70]
	0x03CEBB70 BL 0x301BF90
	0x03CEBB74 ADD W26, W26, 0x1
	0x03CEBB78 B 0x3CEBAE0
	0x03CEBB7C LDR X0, [X22]
	0x03CEBB80 LDR W8, [X0 + 0xE0]
	0x03CEBB84 CBNZ W8, 0x3CEBB8C
	0x03CEBB88 BL 0x1C16DFC
	0x03CEBB8C ADRP X19, 0x6FC000
	0x03CEBB90 LDRB W8, [X19 + 0x7E7]
	0x03CEBB94 CBNZ W8, 0x3CEBBAC
	0x03CEBB98 ADRP X0, 0x477000
	0x03CEBB9C LDR X0, [X0 + 0x8D8]
	0x03CEBBA0 BL 0x1C16CF4
	0x03CEBBA4 MOVZ W8, 0x1
	0x03CEBBA8 STRB W8, [X19 + 0x7E7]
	0x03CEBBAC LDR X0, [X22]
	0x03CEBBB0 LDR W8, [X0 + 0xE0]
	0x03CEBBB4 CBNZ W8, 0x3CEBBC0
	0x03CEBBB8 BL 0x1C16DFC
	0x03CEBBBC LDR X0, [X22]
	0x03CEBBC0 LDR X8, [X0 + 0xB8]
	0x03CEBBC4 LDR W8, [X8]
	0x03CEBBC8 ADDS W31, W8, 0x1
	0x03CEBBCC B.NE 0x3CEBC2C
	0x03CEBBD0 MOV X0, X31
	0x03CEBBD4 BL 0x3C63668
	0x03CEBBD8 LDR X8, [X22]
	0x03CEBBDC MOV W19, W0
	0x03CEBBE0 LDR W9, [X8 + 0xE0]
	0x03CEBBE4 CBNZ W9, 0x3CEBBF0
	0x03CEBBE8 MOV X0, X8
	0x03CEBBEC BL 0x1C16DFC
	0x03CEBBF0 ADRP X20, 0x6FC000
	0x03CEBBF4 LDRB W8, [X20 + 0x7E8]
	0x03CEBBF8 CBNZ W8, 0x3CEBC10
	0x03CEBBFC ADRP X0, 0x477000
	0x03CEBC00 LDR X0, [X0 + 0x8D8]
	0x03CEBC04 BL 0x1C16CF4
	0x03CEBC08 MOVZ W8, 0x1
	0x03CEBC0C STRB W8, [X20 + 0x7E8]
	0x03CEBC10 LDR X0, [X22]
	0x03CEBC14 LDR W8, [X0 + 0xE0]
	0x03CEBC18 CBNZ W8, 0x3CEBC24
	0x03CEBC1C BL 0x1C16DFC
	0x03CEBC20 LDR X0, [X22]
	0x03CEBC24 LDR X8, [X0 + 0xB8]
	0x03CEBC28 STR W19, [X8]
	0x03CEBC2C LDP X20, X19, [X31 + 0x40]
	0x03CEBC30 LDP X22, X21, [X31 + 0x30]
	0x03CEBC34 LDP X24, X23, [X31 + 0x20]
	0x03CEBC38 LDP X26, X25, [X31 + 0x10]
	0x03CEBC3C LDR X30, [X31], #0x50
	0x03CEBC40 RET
	0x03CEBC44 BL 0x1C16F20
	0x03CEBC48 MOV X1, X31
	0x03CEBC4C B 0x33BDD8C
	0x03CEBC50 STR X30, [X31 - 0x50]!
	0x03CEBC54 STP X26, X25, [X31 + 0x10]
	0x03CEBC58 STP X24, X23, [X31 + 0x20]
	0x03CEBC5C STP X22, X21, [X31 + 0x30]
	0x03CEBC60 STP X20, X19, [X31 + 0x40]
	0x03CEBC64 ADRP X19, 0x6FC000
	0x03CEBC68 ADRP X22, 0x431000
	0x03CEBC6C LDRB W8, [X19 + 0x743]
	0x03CEBC70 LDR X22, [X22 + 0xE78]
	0x03CEBC74 MOV X20, X1
	0x03CEBC78 MOV X21, X0
	0x03CEBC7C TBNZ X8, 0x0, 0x3CEBCB8
	0x03CEBC80 ADRP X0, 0x477000
	0x03CEBC84 LDR X0, [X0 + 0x8D8]
	0x03CEBC88 BL 0x1C16CF4
	0x03CEBC8C ADRP X0, 0x431000
	0x03CEBC90 LDR X0, [X0 + 0xE78]
	0x03CEBC94 BL 0x1C16CF4
	0x03CEBC98 ADRP X0, 0x477000
	0x03CEBC9C LDR X0, [X0 + 0x900]
	0x03CEBCA0 BL 0x1C16CF4
	0x03CEBCA4 ADRP X0, 0x430000
	0x03CEBCA8 LDR X0, [X0 + 0x898]
	0x03CEBCAC BL 0x1C16CF4
	0x03CEBCB0 MOVZ W8, 0x1
	0x03CEBCB4 STRB W8, [X19 + 0x743]
	0x03CEBCB8 LDR X1, [X22]
	0x03CEBCBC MOV X0, X20
	0x03CEBCC0 BL 0x1C16E00
	0x03CEBCC4 CBZ X0, 0x3CEBE84
	0x03CEBCC8 LDR X8, [X0]
	0x03CEBCCC LDR X21, [X21 + 0x10]
	0x03CEBCD0 LDR X1, [X22]
	0x03CEBCD4 MOV X19, X0
	0x03CEBCD8 LDRH W9, [X8 + 0x12E]
	0x03CEBCDC CBZ X9, 0x3CEBD00
	0x03CEBCE0 LDR X10, [X8 + 0xB0]
	0x03CEBCE4 ADD X10, X10, 0x8
	0x03CEBCE8 LDUR X11, [X10 - 0x8]
	0x03CEBCEC CMP X11, X1
	0x03CEBCF0 B.EQ 0x3CEBD10
	0x03CEBCF4 SUBS X9, X9, 0x1
	0x03CEBCF8 ADD X10, X10, 0x10
	0x03CEBCFC B.NE 0x3CEBCE8
	0x03CEBD00 MOV X0, X19
	0x03CEBD04 MOV W2, W31
	0x03CEBD08 BL 0x1C5C788
	0x03CEBD0C B 0x3CEBD1C
	0x03CEBD10 LDRSW X9, [X10]
	0x03CEBD14 ADD X8, X8, X9, 0x4, LSL
	0x03CEBD18 ADD X0, X8, 0x138
	0x03CEBD1C LDP X8, X1, [X0]
	0x03CEBD20 MOV X0, X19
	0x03CEBD24 BLR X8
	0x03CEBD28 CBZ X21, 0x3CEBEB4
	0x03CEBD2C ADRP X8, 0x477000
	0x03CEBD30 LDR X8, [X8 + 0x900]
	0x03CEBD34 MOV W1, W0
	0x03CEBD38 MOV X0, X21
	0x03CEBD3C LDR X2, [X8]
	0x03CEBD40 BL 0x301BCCC
	0x03CEBD44 CBZ X20, 0x3CEBEB4
	0x03CEBD48 MOV X21, X0
	0x03CEBD4C MOV X0, X20
	0x03CEBD50 MOV X1, X31
	0x03CEBD54 BL 0x3D9C848
	0x03CEBD58 CBZ X0, 0x3CEBD7C
	0x03CEBD5C ADRP X8, 0x430000
	0x03CEBD60 LDR X8, [X8 + 0x898]
	0x03CEBD64 LDR X9, [X0]
	0x03CEBD68 LDR X8, [X8]
	0x03CEBD6C LDRB W11, [X9 + 0x130]
	0x03CEBD70 LDRB W10, [X8 + 0x130]
	0x03CEBD74 CMP W11, W10
	0x03CEBD78 B.CS 0x3CEBE9C
	0x03CEBD7C MOV X24, X31
	0x03CEBD80 CBZ X21, 0x3CEBEB4
	0x03CEBD84 LDR X8, [X21 + 0x10]
	0x03CEBD88 ADRP X23, 0x477000
	0x03CEBD8C LDR X23, [X23 + 0x8D8]
	0x03CEBD90 CMP X24, X8
	0x03CEBD94 B.EQ 0x3CEBDA0
	0x03CEBD98 MOV X0, X21
	0x03CEBD9C BL 0x3CEBEB8
	0x03CEBDA0 STR X24, [X21 + 0x10]
	0x03CEBDA4 LDR X0, [X23]
	0x03CEBDA8 LDR X24, [X20 + 0x18]
	0x03CEBDAC LDR X25, [X21 + 0x28]
	0x03CEBDB0 LDR W8, [X0 + 0xE0]
	0x03CEBDB4 CBNZ W8, 0x3CEBDBC
	0x03CEBDB8 BL 0x1C16DFC
	0x03CEBDBC ADRP X26, 0x6FC000
	0x03CEBDC0 LDRB W8, [X26 + 0x7E7]
	0x03CEBDC4 CBNZ W8, 0x3CEBDDC
	0x03CEBDC8 ADRP X0, 0x477000
	0x03CEBDCC LDR X0, [X0 + 0x8D8]
	0x03CEBDD0 BL 0x1C16CF4
	0x03CEBDD4 MOVZ W8, 0x1
	0x03CEBDD8 STRB W8, [X26 + 0x7E7]
	0x03CEBDDC LDR X0, [X23]
	0x03CEBDE0 LDR W8, [X0 + 0xE0]
	0x03CEBDE4 CBNZ W8, 0x3CEBDF0
	0x03CEBDE8 BL 0x1C16DFC
	0x03CEBDEC LDR X0, [X23]
	0x03CEBDF0 LDR X8, [X0 + 0xB8]
	0x03CEBDF4 SUB X9, X24, X25
	0x03CEBDF8 LDRSW X8, [X8]
	0x03CEBDFC CMP X9, X8
	0x03CEBE00 B.LE 0x3CEBE0C
	0x03CEBE04 MOVZ W8, 0x1
	0x03CEBE08 B 0x3CEBE14
	0x03CEBE0C LDR W8, [X21 + 0x30]
	0x03CEBE10 ADD W8, W8, 0x1
	0x03CEBE14 STR W8, [X21 + 0x30]
	0x03CEBE18 LDR X8, [X20 + 0x18]
	0x03CEBE1C STR X8, [X21 + 0x28]
	0x03CEBE20 LDR X8, [X19]
	0x03CEBE24 LDR X1, [X22]
	0x03CEBE28 LDRH W9, [X8 + 0x12E]
	0x03CEBE2C CBZ X9, 0x3CEBE50
	0x03CEBE30 LDR X10, [X8 + 0xB0]
	0x03CEBE34 ADD X10, X10, 0x8
	0x03CEBE38 LDUR X11, [X10 - 0x8]
	0x03CEBE3C CMP X11, X1
	0x03CEBE40 B.EQ 0x3CEBE60
	0x03CEBE44 SUBS X9, X9, 0x1
	0x03CEBE48 ADD X10, X10, 0x10
	0x03CEBE4C B.NE 0x3CEBE38
	0x03CEBE50 MOVZ W2, 0x5
	0x03CEBE54 MOV X0, X19
	0x03CEBE58 BL 0x1C5C788
	0x03CEBE5C B 0x3CEBE70
	0x03CEBE60 LDR W9, [X10]
	0x03CEBE64 ADD W9, W9, 0x5
	0x03CEBE68 ADD X8, X8, W9, 0x4, SXTW
	0x03CEBE6C ADD X0, X8, 0x138
	0x03CEBE70 LDP X8, X1, [X0]
	0x03CEBE74 MOV X0, X19
	0x03CEBE78 BLR X8
	0x03CEBE7C STP S0, S1, [X21 + 0x18]
	0x03CEBE80 STR S2, [X21 + 0x20]
	0x03CEBE84 LDP X20, X19, [X31 + 0x40]
	0x03CEBE88 LDP X22, X21, [X31 + 0x30]
	0x03CEBE8C LDP X24, X23, [X31 + 0x20]
	0x03CEBE90 LDP X26, X25, [X31 + 0x10]
	0x03CEBE94 LDR X30, [X31], #0x50
	0x03CEBE98 RET
	0x03CEBE9C LDR X9, [X9 + 0xC8]
	0x03CEBEA0 ADD X9, X9, X10, 0x3, LSL
	0x03CEBEA4 LDUR X9, [X9 - 0x8]
	0x03CEBEA8 CMP X9, X8
	0x03CEBEAC CSEL X24, X0, X31, EQ
	0x03CEBEB0 CBNZ X21, 0x3CEBD84
	0x03CEBEB4 BL 0x1C16F20
	0x03CEBEB8 STR X30, [X31 - 0x20]!
	0x03CEBEBC STP X20, X19, [X31 + 0x10]
	0x03CEBEC0 STR X31, [X0 + 0x10]
	0x03CEBEC4 STR W31, [X0 + 0x30]
	0x03CEBEC8 STR X31, [X0 + 0x28]
	0x03CEBECC ADRP X20, 0x6ED000
	0x03CEBED0 LDRB W8, [X20 + 0x783]
	0x03CEBED4 MOV X19, X0
	0x03CEBED8 CBNZ W8, 0x3CEBEF0
	0x03CEBEDC ADRP X0, 0x408000
	0x03CEBEE0 LDR X0, [X0 + 0x5A0]
	0x03CEBEE4 BL 0x1C16CF4
	0x03CEBEE8 MOVZ W8, 0x1
	0x03CEBEEC STRB W8, [X20 + 0x783]
	0x03CEBEF0 ADRP X8, 0x408000
	0x03CEBEF4 LDR X8, [X8 + 0x5A0]
	0x03CEBEF8 LDR X8, [X8]
	0x03CEBEFC LDR X8, [X8 + 0xB8]
	0x03CEBF00 LDR V0, [X8]
	0x03CEBF04 LDR V1, [X8 + 0x8]
	0x03CEBF08 STR D0, [X19 + 0x18]
	0x03CEBF0C STR S1, [X19 + 0x20]
	0x03CEBF10 LDP X20, X19, [X31 + 0x10]
	0x03CEBF14 LDR X30, [X31], #0x20
	0x03CEBF18 RET
	0x03CEBF1C STP D9, D8, [X31 - 0x50]!
	0x03CEBF20 STR X30, [X31 + 0x10]
	0x03CEBF24 STP X24, X23, [X31 + 0x20]
	0x03CEBF28 STP X22, X21, [X31 + 0x30]
	0x03CEBF2C STP X20, X19, [X31 + 0x40]
	0x03CEBF30 ADRP X21, 0x6FC000
	0x03CEBF34 ADRP X23, 0x431000
	0x03CEBF38 LDRB W8, [X21 + 0x744]
	0x03CEBF3C LDR X23, [X23 + 0xE78]
	0x03CEBF40 MOV X19, X1
	0x03CEBF44 MOV X20, X0
	0x03CEBF48 TBNZ X8, 0x0, 0x3CEBFA8
	0x03CEBF4C ADRP X0, 0x477000
	0x03CEBF50 LDR X0, [X0 + 0x8D8]
	0x03CEBF54 BL 0x1C16CF4
	0x03CEBF58 ADRP X0, 0x477000
	0x03CEBF5C LDR X0, [X0 + 0x908]
	0x03CEBF60 BL 0x1C16CF4
	0x03CEBF64 ADRP X0, 0x408000
	0x03CEBF68 LDR X0, [X0 + 0xE00]
	0x03CEBF6C BL 0x1C16CF4
	0x03CEBF70 ADRP X0, 0x431000
	0x03CEBF74 LDR X0, [X0 + 0xE78]
	0x03CEBF78 BL 0x1C16CF4
	0x03CEBF7C ADRP X0, 0x477000
	0x03CEBF80 LDR X0, [X0 + 0x900]
	0x03CEBF84 BL 0x1C16CF4
	0x03CEBF88 ADRP X0, 0x430000
	0x03CEBF8C LDR X0, [X0 + 0x968]
	0x03CEBF90 BL 0x1C16CF4
	0x03CEBF94 ADRP X0, 0x430000
	0x03CEBF98 LDR X0, [X0 + 0x898]
	0x03CEBF9C BL 0x1C16CF4
	0x03CEBFA0 MOVZ W8, 0x1
	0x03CEBFA4 STRB W8, [X21 + 0x744]
	0x03CEBFA8 LDR X1, [X23]
	0x03CEBFAC MOV X0, X19
	0x03CEBFB0 BL 0x1C16E00
	0x03CEBFB4 CBZ X0, 0x3CEC258
	0x03CEBFB8 LDR X8, [X0]
	0x03CEBFBC LDR X20, [X20 + 0x10]
	0x03CEBFC0 LDR X1, [X23]
	0x03CEBFC4 MOV X21, X0
	0x03CEBFC8 LDRH W9, [X8 + 0x12E]
	0x03CEBFCC CBZ X9, 0x3CEBFF0
	0x03CEBFD0 LDR X10, [X8 + 0xB0]
	0x03CEBFD4 ADD X10, X10, 0x8
	0x03CEBFD8 LDUR X11, [X10 - 0x8]
	0x03CEBFDC CMP X11, X1
	0x03CEBFE0 B.EQ 0x3CEC000
	0x03CEBFE4 SUBS X9, X9, 0x1
	0x03CEBFE8 ADD X10, X10, 0x10
	0x03CEBFEC B.NE 0x3CEBFD8
	0x03CEBFF0 MOV X0, X21
	0x03CEBFF4 MOV W2, W31
	0x03CEBFF8 BL 0x1C5C788
	0x03CEBFFC B 0x3CEC00C
	0x03CEC000 LDRSW X9, [X10]
	0x03CEC004 ADD X8, X8, X9, 0x4, LSL
	0x03CEC008 ADD X0, X8, 0x138
	0x03CEC00C LDP X8, X1, [X0]
	0x03CEC010 MOV X0, X21
	0x03CEC014 BLR X8
	0x03CEC018 CBZ X20, 0x3CEC270
	0x03CEC01C ADRP X8, 0x476000
	0x03CEC020 LDR X8, [X8 + 0x900]
	0x03CEC024 MOV W1, W0
	0x03CEC028 MOV X0, X20
	0x03CEC02C LDR X2, [X8]
	0x03CEC030 BL 0x301BCCC
	0x03CEC034 CBZ X19, 0x3CEC270
	0x03CEC038 MOV X20, X0
	0x03CEC03C MOV X0, X19
	0x03CEC040 MOV X1, X31
	0x03CEC044 BL 0x3D9C848
	0x03CEC048 CBZ X0, 0x3CEC258
	0x03CEC04C ADRP X24, 0x42F000
	0x03CEC050 LDR X24, [X24 + 0x898]
	0x03CEC054 LDR X9, [X0]
	0x03CEC058 MOV X22, X0
	0x03CEC05C LDR X8, [X24]
	0x03CEC060 LDRB W11, [X9 + 0x130]
	0x03CEC064 LDRB W10, [X8 + 0x130]
	0x03CEC068 CMP W11, W10
	0x03CEC06C B.CC 0x3CEC258
	0x03CEC070 LDR X9, [X9 + 0xC8]
	0x03CEC074 ADD X9, X9, X10, 0x3, LSL
	0x03CEC078 LDUR X9, [X9 - 0x8]
	0x03CEC07C CMP X9, X8
	0x03CEC080 B.NE 0x3CEC258
	0x03CEC084 LDR X8, [X21]
	0x03CEC088 LDR X1, [X23]
	0x03CEC08C LDRH W9, [X8 + 0x12E]
	0x03CEC090 CBZ X9, 0x3CEC0B4
	0x03CEC094 LDR X10, [X8 + 0xB0]
	0x03CEC098 ADD X10, X10, 0x8
	0x03CEC09C LDUR X11, [X10 - 0x8]
	0x03CEC0A0 CMP X11, X1
	0x03CEC0A4 B.EQ 0x3CEC0C4
	0x03CEC0A8 SUBS X9, X9, 0x1
	0x03CEC0AC ADD X10, X10, 0x10
	0x03CEC0B0 B.NE 0x3CEC09C
	0x03CEC0B4 MOVZ W2, 0x5
	0x03CEC0B8 MOV X0, X21
	0x03CEC0BC BL 0x1C5C788
	0x03CEC0C0 B 0x3CEC0D4
	0x03CEC0C4 LDR W9, [X10]
	0x03CEC0C8 ADD W9, W9, 0x5
	0x03CEC0CC ADD X8, X8, W9, 0x4, SXTW
	0x03CEC0D0 ADD X0, X8, 0x138
	0x03CEC0D4 LDP X8, X1, [X0]
	0x03CEC0D8 MOV X0, X21
	0x03CEC0DC BLR X8
	0x03CEC0E0 ADRP X8, 0x476000
	0x03CEC0E4 LDR X8, [X8 + 0x8D8]
	0x03CEC0E8 MOV V8.16B, V0.16B
	0x03CEC0EC MOV V9.16B, V1.16B
	0x03CEC0F0 LDR X0, [X8]
	0x03CEC0F4 LDR W8, [X0 + 0xE0]
	0x03CEC0F8 CBNZ W8, 0x3CEC100
	0x03CEC0FC BL 0x1C16DFC
	0x03CEC100 MOV X0, X22
	0x03CEC104 MOV V0.16B, V8.16B
	0x03CEC108 MOV V1.16B, V9.16B
	0x03CEC10C BL 0x3CEC330
	0x03CEC110 TBZ X0, 0x0, 0x3CEC258
	0x03CEC114 CBZ X20, 0x3CEC270
	0x03CEC118 LDR X21, [X20 + 0x10]
	0x03CEC11C CBZ X21, 0x3CEC258

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0x6FD000
	015 Move W8, [X20+1852]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {62}
	021 Move X0, 0x478000
	022 Move X0, [X0+2048]
	023 Call 0x1C17CF4
	024 Move X0, 0x478000
	025 Move X0, [X0+2056]
	026 Call 0x1C17CF4
	027 Move X0, 0x478000
	028 Move X0, [X0+2064]
	029 Call 0x1C17CF4
	030 Move X0, 0x478000
	031 Move X0, [X0+2072]
	032 Call 0x1C17CF4
	033 Move X0, 0x478000
	034 Move X0, [X0+2080]
	035 Call 0x1C17CF4
	036 Move X0, 0x478000
	037 Move X0, [X0+2000]
	038 Call 0x1C17CF4
	039 Move X0, 0x478000
	040 Move X0, [X0+2088]
	041 Call 0x1C17CF4
	042 Move X0, 0x478000
	043 Move X0, [X0+2096]
	044 Call 0x1C17CF4
	045 Move X0, 0x478000
	046 Move X0, [X0+2104]
	047 Call 0x1C17CF4
	048 Move X0, 0x478000
	049 Move X0, [X0+2112]
	050 Call 0x1C17CF4
	051 Move X0, 0x478000
	052 Move X0, [X0+2120]
	053 Call 0x1C17CF4
	054 Move X0, 0x478000
	055 Move X0, [X0+2128]
	056 Call 0x1C17CF4
	057 Move X0, 0x478000
	058 Move X0, [X0+1976]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X20+1852], W8
	062 Move X0, X19
	063 Move X1, X31
	064 Move [X31+32], X31
	065 Move [X31+40], X31
	066 Move [X31+48], X31
	067 Call BaseVisualTreeHierarchyTrackerUpdater.Update, X0
	068 Move X8, [X19+88]
	069 Compare X8, 0
	070 JumpIfEqual {339}
	071 Move W8, [X8+32]
	072 Move X26, 0x478000
	073 Move X26, [X26+1976]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X26]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X26]
	081 Move X8, [X0+184]
	082 Move X1, X31
	083 Move X2, X31
	084 Move X20, [X8+24]
	085 Move X0, X20
	086 Call IntPtr.op_Inequality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {94}
	091 Move X0, X20
	092 Move X1, X31
	093 Call ProfilerUnsafeUtility.BeginSample, X0
	094 Move X0, [X26]
	095 Move [X31], X20
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Call VisualTreeBindingsUpdater.CurrentTime
	101 Move X8, [X19+88]
	102 Compare X8, 0
	103 JumpIfEqual {337}
	104 Move X28, 0x478000
	105 Move X29, 0x478000
	106 Move X24, 0x478000
	107 Move X20, 0x478000
	108 Move X27, 0x478000
	109 Move X28, [X28+2056]
	110 Move X29, [X29+2000]
	111 Move X24, [X24+2112]
	112 Move X20, [X20+2072]
	113 Move X27, [X27+2096]
	114 Move X21, X0
	115 Move W8, [X8+32]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, [X26]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Call VisualTreeBindingsUpdater.CurrentTime
	123 Subtract X8, X0, X21
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, [X19+88]
	126 Move X1, [X28]
	127 Call Enumerable.FirstOrDefault, X0
	128 Move X23, X0
	129 Compare X0, 0
	130 JumpIfEqual {251}
	131 Move X0, [X19+88]
	132 Compare X0, 0
	133 JumpIfEqual {338}
	134 Move X2, [X29]
	135 Move X1, X23
	136 Call HashSet`1<Object>.Remove, X0, X1
	137 Move X0, [X26]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {143}
	141 Call 0x1C17DFC
	142 Move X0, [X26]
	143 Move X8, [X0+184]
	144 Move W1, [X8]
	145 Move X0, X23
	146 Move X2, X31
	147 Call VisualElement.GetProperty, X0, X1
	148 Move X22, X0
	149 Compare X0, 0
	150 JumpIfEqual {240}
	151 Move X9, [X22]
	152 Move X8, [X24]
	153 Move W11, [X9+304]
	154 Move W10, [X8+304]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X9, [X9+200]
	157 Add X9, X9, X10
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X0, [X26]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {166}
	164 Call 0x1C17DFC
	165 Move X0, [X26]
	166 Move X8, [X0+184]
	167 Move W1, [X8]
	168 Move X0, X23
	169 Move X2, X31
	170 Move X3, X31
	171 Call VisualElement.SetProperty, X0, X1, X2
	172 Move X8, 0x478000
	173 Move X8, [X8+2104]
	174 Move X1, [X8]
	175 Add X8, X31, 8
	176 Move X0, X22
	177 Call List`1<Object>.GetEnumerator, X0
	178 NotImplemented "Instruction LDUR not yet implemented."
	179 Move X8, [X31+24]
	180 Move [X31+2], V0
	181 Move [X31+48], X8
	182 Move X1, [X20]
	183 Add X0, X31, 32
	184 Call Enumerator<Object>.MoveNext, X0
	185 Move TEMP, X0
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {214}
	189 Move X24, [X31+48]
	190 Compare X24, 0
	191 JumpIfEqual {243}
	192 Move X8, [X24]
	193 Move X1, [X27]
	194 NotImplemented "Instruction LDRH not yet implemented."
	195 Compare X9, 0
	196 JumpIfEqual {203}
	197 Move X10, [X8+176]
	198 Add X10, X10, 8
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Subtract X9, X9, 1
	202 Add X10, X10, 16
	203 Move X0, X24
	204 Move W2, W31
	205 Call 0x1C5D788
	206 NotImplemented "Instruction LDRSW not yet implemented."
	207 Add X8, X8, X9
	208 Add X0, X8, 312
	209 Move X8, [X0]
	210 Move X2, [X0+8]
	211 Move X0, X24
	212 Move X1, X23
	213 NotImplemented "Instruction BLR not yet implemented."
	214 Move X25, X31
	215 Move W23, 9
	216 Move X8, 0x478000
	217 Move X8, [X8+2064]
	218 Move X1, [X8]
	219 Add X0, X31, 32
	220 Call Enumerator<Object>.Dispose, X0
	221 Compare X25, 0
	222 JumpIfNotEqual {351}
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Compare W23, 0
	225 JumpIfNotEqual {336}
	226 Move X8, 0x478000
	227 Move X8, [X8+2128]
	228 Move X24, 0x478000
	229 Move X0, [X8]
	230 Move W8, [X0+224]
	231 Move X24, [X24+2112]
	232 Compare W8, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1C17DFC
	235 Move X8, 0x478000
	236 Move X8, [X8+2120]
	237 Move X1, [X8]
	238 Move X0, X22
	239 Call 0x2492D90, X0
	240 Move X8, [X19+88]
	241 Compare X8, 0
	242 JumpIfNotEqual {115}
	243 Call 0x1C17F20
	244 Move X24, X0
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X0, X24
	247 Call 0x3EB2AD0
	248 Move X25, [X0]
	249 Call 0x3EB2AE0
	250 Move W23, W31
	251 Move X21, X31
	252 Move W23, 14
	253 Move X20, [X31]
	254 Move X1, X31
	255 Move X2, X31
	256 Move X0, X20
	257 Call IntPtr.op_Inequality, X0, X1
	258 Move TEMP, X0
	259 And TEMP, TEMP, 1
	260 Compare TEMP, 1
	261 JumpIfNotEqual {265}
	262 Move X0, X20
	263 Move X1, X31
	264 Call ProfilerUnsafeUtility.EndSample, X0
	265 Compare X21, 0
	266 JumpIfNotEqual {353}
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Compare W23, 0
	269 JumpIfNotEqual {322}
	270 Move X0, X19
	271 Call VisualTreeBindingsUpdater.PerformTrackingOperations, X0
	272 Move X8, [X19+56]
	273 Compare X8, 0
	274 JumpIfEqual {339}
	275 Move W8, [X8+32]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move X0, [X26]
	278 Move W8, [X0+224]
	279 Compare W8, 0
	280 JumpIfNotEqual {282}
	281 Call 0x1C17DFC
	282 Call VisualTreeBindingsUpdater.CurrentTime
	283 Move X21, 0x6FD000
	284 Move W8, [X21+2022]
	285 Move X20, X0
	286 Compare W8, 0
	287 JumpIfNotEqual {293}
	288 Move X0, 0x478000
	289 Move X0, [X0+1976]
	290 Call 0x1C17CF4
	291 Move W8, 1
	292 Move [X21+2022], W8
	293 Move X0, [X26]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {299}
	297 Call 0x1C17DFC
	298 Move X0, [X26]
	299 Move X8, [X0+184]
	300 Move W8, [X8+48]
	301 Compare W8, 0
	302 JumpIfNotEqual {306}
	303 Move X8, [X19+80]
	304 Add X8, X8, 100
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X0, X19
	307 Call VisualTreeBindingsUpdater.UpdateBindings, X0
	308 Move [X19+80], X20
	309 Move X8, [X19+88]
	310 Compare X8, 0
	311 JumpIfEqual {339}
	312 Move W8, [X8+32]
	313 Compare W8, 0
	314 JumpIfNotEqual {322}
	315 Move X0, [X19+96]
	316 Compare X0, 0
	317 JumpIfEqual {339}
	318 Move X8, 0x478000
	319 Move X8, [X8+2048]
	320 Move X1, [X8]
	321 Call Dictionary`2<Object, Object>.Clear, X0
	322 Move X20, [X31+144]
	323 Move X19, [X31+152]
	324 Move X22, [X31+128]
	325 Move X21, [X31+136]
	326 Move X24, [X31+112]
	327 Move X23, [X31+120]
	328 Move X26, [X31+96]
	329 Move X25, [X31+104]
	330 Move X28, [X31+80]
	331 Move X27, [X31+88]
	332 Move X29, [X31+64]
	333 Move X30, [X31+72]
	334 Add X31, X31, 160
	335 Return 
	336 Move X21, X31
	337 Call 0x1C17F20
	338 Call 0x1C17F20
	339 Call 0x1C17F20
	340 Move X23, X1
	341 Move X25, X31
	342 Move X8, 0x477000
	343 Move X8, [X8+2064]
	344 Move X1, [X8]
	345 Add X0, X31, 32
	346 Call Enumerator<Object>.Dispose, X0
	347 Compare X25, 0
	348 JumpIfEqual {359}
	349 Move X0, X25
	350 Call 0x1C17F18
	351 Move X0, X25
	352 Call 0x1C17F18
	353 Move X0, X21
	354 Call 0x1C17F18
	355 Move X23, X1
	356 Move X24, X0
	357 Move X23, X1
	358 Move X24, X0
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X0, X24
	361 Call 0x3EB2AD0
	362 Move X21, [X0]
	363 Call 0x3EB2AE0
	364 Move W23, W31
	365 Move X21, X31
	366 Move X24, X0
	367 Move X0, [X31]
	368 Move X1, X31
	369 Move X2, X31
	370 Call IntPtr.op_Inequality, X0, X1
	371 Move TEMP, X0
	372 And TEMP, TEMP, 1
	373 Compare TEMP, 1
	374 JumpIfNotEqual {378}
	375 Move X0, [X31]
	376 Move X1, X31
	377 Call ProfilerUnsafeUtility.EndSample, X0
	378 Compare X21, 0
	379 JumpIfNotEqual {382}
	380 Move X0, X24
	381 Call 0x1D2D690
	382 Move X0, X21
	383 Call 0x1C17F18
	384 Call 0x1991590

Method: System.Void UpdateBindings()

Disassembly:
	0x03CEC120 LDR W8, [X20 + 0x30]
	0x03CEC124 CMP W8, 0x1
	0x03CEC128 B.LT 0x3CEC258
	0x03CEC12C MOV X0, X19
	0x03CEC130 MOV X1, X31
	0x03CEC134 BL 0x3D9C848
	0x03CEC138 CBZ X0, 0x3CEC154
	0x03CEC13C LDR X9, [X0]
	0x03CEC140 LDR X8, [X24]
	0x03CEC144 LDRB W11, [X9 + 0x130]
	0x03CEC148 LDRB W10, [X8 + 0x130]
	0x03CEC14C CMP W11, W10
	0x03CEC150 B.CS 0x3CEC15C
	0x03CEC154 MOV X1, X31
	0x03CEC158 B 0x3CEC170
	0x03CEC15C LDR X9, [X9 + 0xC8]
	0x03CEC160 ADD X9, X9, X10, 0x3, LSL
	0x03CEC164 LDUR X9, [X9 - 0x8]
	0x03CEC168 CMP X9, X8
	0x03CEC16C CSEL X1, X0, X31, EQ
	0x03CEC170 MOV X0, X21
	0x03CEC174 MOV X2, X31
	0x03CEC178 BL 0x3DF6A20
	0x03CEC17C CBZ X0, 0x3CEC258
	0x03CEC180 ADRP X8, 0x476000
	0x03CEC184 LDR X8, [X8 + 0x908]
	0x03CEC188 MOV X21, X0
	0x03CEC18C LDR W20, [X20 + 0x30]
	0x03CEC190 LDR X0, [X8]
	0x03CEC194 LDR W8, [X0 + 0xE0]
	0x03CEC198 CBNZ W8, 0x3CEC1A0
	0x03CEC19C BL 0x1C16DFC
	0x03CEC1A0 ADRP X8, 0x42F000
	0x03CEC1A4 LDR X8, [X8 + 0x968]
	0x03CEC1A8 LDR X9, [X19]
	0x03CEC1AC MOV W1, W20
	0x03CEC1B0 MOV X2, X31
	0x03CEC1B4 LDR X8, [X8]
	0x03CEC1B8 CMP X9, X8
	0x03CEC1BC CSEL X0, X19, X31, EQ
	0x03CEC1C0 BL 0x3DACE20
	0x03CEC1C4 MOV X19, X0
	0x03CEC1C8 CBZ X0, 0x3CEC274
	0x03CEC1CC MOV X0, X19
	0x03CEC1D0 MOV X1, X21
	0x03CEC1D4 MOV X2, X31
	0x03CEC1D8 BL 0x3D9C6C8
	0x03CEC1DC LDR X8, [X21]
	0x03CEC1E0 LDP X9, X2, [X8 + 0x198]
	0x03CEC1E4 MOV X0, X21
	0x03CEC1E8 MOV X1, X19
	0x03CEC1EC BLR X9
	0x03CEC1F0 MOV X20, X31
	0x03CEC1F4 ADRP X10, 0x407000
	0x03CEC1F8 LDR X8, [X19]
	0x03CEC1FC LDR X10, [X10 + 0xE00]
	0x03CEC200 LDRH W9, [X8 + 0x12E]
	0x03CEC204 LDR X1, [X10]
	0x03CEC208 CBZ X9, 0x3CEC22C
	0x03CEC20C LDR X10, [X8 + 0xB0]
	0x03CEC210 ADD X10, X10, 0x8
	0x03CEC214 LDUR X11, [X10 - 0x8]
	0x03CEC218 CMP X11, X1
	0x03CEC21C B.EQ 0x3CEC23C
	0x03CEC220 SUBS X9, X9, 0x1
	0x03CEC224 ADD X10, X10, 0x10
	0x03CEC228 B.NE 0x3CEC214
	0x03CEC22C MOV X0, X19
	0x03CEC230 MOV W2, W31
	0x03CEC234 BL 0x1C5C788
	0x03CEC238 B 0x3CEC248
	0x03CEC23C LDRSW X9, [X10]
	0x03CEC240 ADD X8, X8, X9, 0x4, LSL
	0x03CEC244 ADD X0, X8, 0x138
	0x03CEC248 LDP X8, X1, [X0]
	0x03CEC24C MOV X0, X19
	0x03CEC250 BLR X8
	0x03CEC254 CBNZ X20, 0x3CEC278
	0x03CEC258 LDP X20, X19, [X31 + 0x40]
	0x03CEC25C LDP X22, X21, [X31 + 0x30]
	0x03CEC260 LDP X24, X23, [X31 + 0x20]
	0x03CEC264 LDR X30, [X31 + 0x10]
	0x03CEC268 LDP D9, D8, [X31], #0x50
	0x03CEC26C RET
	0x03CEC270 BL 0x1C16F20
	0x03CEC274 BL 0x1C16F20
	0x03CEC278 MOV X0, X20
	0x03CEC27C BL 0x1C16F18
	0x03CEC280 B 0x3CEC284
	0x03CEC284 MOV X21, X0
	0x03CEC288 CMP W1, 0x1
	0x03CEC28C B.NE 0x3CEC2A8
	0x03CEC290 MOV X0, X21
	0x03CEC294 BL 0x3EB1AD0
	0x03CEC298 LDR X20, [X0]
	0x03CEC29C BL 0x3EB1AE0
	0x03CEC2A0 CBNZ X19, 0x3CEC1F4
	0x03CEC2A4 B 0x3CEC254
	0x03CEC2A8 MOV X20, X31
	0x03CEC2AC B 0x3CEC2B4
	0x03CEC2B0 MOV X21, X0
	0x03CEC2B4 CBZ X19, 0x3CEC318
	0x03CEC2B8 ADRP X10, 0x407000
	0x03CEC2BC LDR X8, [X19]
	0x03CEC2C0 LDR X10, [X10 + 0xE00]
	0x03CEC2C4 LDRH W9, [X8 + 0x12E]
	0x03CEC2C8 LDR X1, [X10]
	0x03CEC2CC CBZ X9, 0x3CEC2F0
	0x03CEC2D0 LDR X10, [X8 + 0xB0]
	0x03CEC2D4 ADD X10, X10, 0x8
	0x03CEC2D8 LDUR X11, [X10 - 0x8]
	0x03CEC2DC CMP X11, X1
	0x03CEC2E0 B.EQ 0x3CEC300
	0x03CEC2E4 SUBS X9, X9, 0x1
	0x03CEC2E8 ADD X10, X10, 0x10
	0x03CEC2EC B.NE 0x3CEC2D8
	0x03CEC2F0 MOV X0, X19
	0x03CEC2F4 MOV W2, W31
	0x03CEC2F8 BL 0x1C5C788
	0x03CEC2FC B 0x3CEC30C
	0x03CEC300 LDRSW X9, [X10]
	0x03CEC304 ADD X8, X8, X9, 0x4, LSL
	0x03CEC308 ADD X0, X8, 0x138
	0x03CEC30C LDP X8, X1, [X0]
	0x03CEC310 MOV X0, X19
	0x03CEC314 BLR X8
	0x03CEC318 CBNZ X20, 0x3CEC324
	0x03CEC31C MOV X0, X21
	0x03CEC320 BL 0x1D2C690
	0x03CEC324 MOV X0, X20
	0x03CEC328 BL 0x1C16F18
	0x03CEC32C BL 0x1990590
	0x03CEC330 STP D9, D8, [X31 - 0x30]!
	0x03CEC334 STR X30, [X31 + 0x10]
	0x03CEC338 STP X20, X19, [X31 + 0x20]
	0x03CEC33C ADRP X20, 0x6FB000
	0x03CEC340 LDRB W8, [X20 + 0x747]
	0x03CEC344 MOV V8.16B, V1.16B
	0x03CEC348 MOV V9.16B, V0.16B
	0x03CEC34C MOV X19, X0
	0x03CEC350 TBNZ X8, 0x0, 0x3CEC368
	0x03CEC354 ADRP X0, 0x430000
	0x03CEC358 LDR X0, [X0 + 0xE80]
	0x03CEC35C BL 0x1C16CF4
	0x03CEC360 MOVZ W8, 0x1
	0x03CEC364 STRB W8, [X20 + 0x747]
	0x03CEC368 CBZ X19, 0x3CEC46C
	0x03CEC36C MOV X0, X19
	0x03CEC370 MOV X1, X31
	0x03CEC374 BL 0x3DEDC10
	0x03CEC378 FADD S3, S1, S3
	0x03CEC37C FCMP S8, S3
	0x03CEC380 MOV W0, W31
	0x03CEC384 B.PL 0x3CEC45C
	0x03CEC388 FCMP S8, S1
	0x03CEC38C B.LT 0x3CEC45C
	0x03CEC390 FCMP S9, S0
	0x03CEC394 B.LT 0x3CEC45C
	0x03CEC398 FADD S0, S0, S2
	0x03CEC39C FCMP S9, S0
	0x03CEC3A0 B.PL 0x3CEC45C
	0x03CEC3A4 MOV X0, X19
	0x03CEC3A8 MOV X1, X31
	0x03CEC3AC BL 0x3DEC0CC
	0x03CEC3B0 CBZ X0, 0x3CEC45C
	0x03CEC3B4 MOV X0, X19
	0x03CEC3B8 MOV X1, X31
	0x03CEC3BC BL 0x3DEC0CC
	0x03CEC3C0 CBZ X0, 0x3CEC46C
	0x03CEC3C4 ADRP X10, 0x430000
	0x03CEC3C8 LDR X8, [X0]
	0x03CEC3CC LDR X10, [X10 + 0xE80]
	0x03CEC3D0 MOV X20, X0
	0x03CEC3D4 LDRH W9, [X8 + 0x12E]
	0x03CEC3D8 LDR X1, [X10]
	0x03CEC3DC CBZ X9, 0x3CEC400
	0x03CEC3E0 LDR X10, [X8 + 0xB0]
	0x03CEC3E4 ADD X10, X10, 0x8
	0x03CEC3E8 LDUR X11, [X10 - 0x8]
	0x03CEC3EC CMP X11, X1
	0x03CEC3F0 B.EQ 0x3CEC410
	0x03CEC3F4 SUBS X9, X9, 0x1
	0x03CEC3F8 ADD X10, X10, 0x10
	0x03CEC3FC B.NE 0x3CEC3E8
	0x03CEC400 MOVZ W2, 0x4
	0x03CEC404 MOV X0, X20
	0x03CEC408 BL 0x1C5C788
	0x03CEC40C B 0x3CEC420
	0x03CEC410 LDR W9, [X10]
	0x03CEC414 ADD W9, W9, 0x4
	0x03CEC418 ADD X8, X8, W9, 0x4, SXTW
	0x03CEC41C ADD X0, X8, 0x138
	0x03CEC420 LDP X8, X1, [X0]
	0x03CEC424 MOV X0, X20
	0x03CEC428 MOV V0.16B, V9.16B
	0x03CEC42C MOV V1.16B, V8.16B
	0x03CEC430 BLR X8
	0x03CEC434 CMP X0, X19
	0x03CEC438 B.EQ 0x3CEC458
	0x03CEC43C MOV X1, X0
	0x03CEC440 MOV X0, X19
	0x03CEC444 LDP X20, X19, [X31 + 0x20]
	0x03CEC448 LDR X30, [X31 + 0x10]
	0x03CEC44C MOV X2, X31
	0x03CEC450 LDP D9, D8, [X31], #0x30
	0x03CEC454 B 0x3DEF1C0
	0x03CEC458 MOVZ W0, 0x1
	0x03CEC45C LDP X20, X19, [X31 + 0x20]
	0x03CEC460 LDR X30, [X31 + 0x10]
	0x03CEC464 LDP D9, D8, [X31], #0x30
	0x03CEC468 RET
	0x03CEC46C BL 0x1C16F20
	0x03CEC470 STR X30, [X31 - 0x30]!
	0x03CEC474 STP X22, X21, [X31 + 0x10]
	0x03CEC478 STP X20, X19, [X31 + 0x20]
	0x03CEC47C ADRP X22, 0x6FB000
	0x03CEC480 ADRP X21, 0x430000
	0x03CEC484 LDRB W8, [X22 + 0x745]
	0x03CEC488 LDR X21, [X21 + 0xE78]
	0x03CEC48C MOV X20, X1
	0x03CEC490 MOV X19, X0
	0x03CEC494 TBNZ X8, 0x0, 0x3CEC4B8
	0x03CEC498 ADRP X0, 0x430000
	0x03CEC49C LDR X0, [X0 + 0xE78]
	0x03CEC4A0 BL 0x1C16CF4
	0x03CEC4A4 ADRP X0, 0x476000
	0x03CEC4A8 LDR X0, [X0 + 0x900]
	0x03CEC4AC BL 0x1C16CF4
	0x03CEC4B0 MOVZ W8, 0x1
	0x03CEC4B4 STRB W8, [X22 + 0x745]
	0x03CEC4B8 LDR X1, [X21]
	0x03CEC4BC MOV X0, X20
	0x03CEC4C0 BL 0x1C16E00
	0x03CEC4C4 CBZ X0, 0x3CEC510
	0x03CEC4C8 LDR X8, [X0]
	0x03CEC4CC LDR X19, [X19 + 0x10]
	0x03CEC4D0 LDR X1, [X21]
	0x03CEC4D4 MOV X20, X0
	0x03CEC4D8 LDRH W9, [X8 + 0x12E]
	0x03CEC4DC CBZ X9, 0x3CEC500
	0x03CEC4E0 LDR X10, [X8 + 0xB0]
	0x03CEC4E4 ADD X10, X10, 0x8
	0x03CEC4E8 LDUR X11, [X10 - 0x8]
	0x03CEC4EC CMP X11, X1
	0x03CEC4F0 B.EQ 0x3CEC520
	0x03CEC4F4 SUBS X9, X9, 0x1
	0x03CEC4F8 ADD X10, X10, 0x10
	0x03CEC4FC B.NE 0x3CEC4E8
	0x03CEC500 MOV X0, X20
	0x03CEC504 MOV W2, W31
	0x03CEC508 BL 0x1C5C788
	0x03CEC50C B 0x3CEC52C
	0x03CEC510 LDP X20, X19, [X31 + 0x20]
	0x03CEC514 LDP X22, X21, [X31 + 0x10]
	0x03CEC518 LDR X30, [X31], #0x30
	0x03CEC51C RET
	0x03CEC520 LDRSW X9, [X10]
	0x03CEC524 ADD X8, X8, X9, 0x4, LSL
	0x03CEC528 ADD X0, X8, 0x138
	0x03CEC52C LDP X8, X1, [X0]
	0x03CEC530 MOV X0, X20
	0x03CEC534 BLR X8
	0x03CEC538 CBZ X19, 0x3CEC568
	0x03CEC53C ADRP X8, 0x476000
	0x03CEC540 LDR X8, [X8 + 0x900]
	0x03CEC544 MOV W1, W0
	0x03CEC548 MOV X0, X19
	0x03CEC54C LDR X2, [X8]
	0x03CEC550 BL 0x301BCCC
	0x03CEC554 CBZ X0, 0x3CEC568
	0x03CEC558 LDP X20, X19, [X31 + 0x20]
	0x03CEC55C LDP X22, X21, [X31 + 0x10]
	0x03CEC560 LDR X30, [X31], #0x30
	0x03CEC564 B 0x3CEBEB8
	0x03CEC568 BL 0x1C16F20
	0x03CEC56C STR X30, [X31 - 0x40]!
	0x03CEC570 STP X24, X23, [X31 + 0x10]
	0x03CEC574 STP X22, X21, [X31 + 0x20]
	0x03CEC578 STP X20, X19, [X31 + 0x30]
	0x03CEC57C ADRP X21, 0x6FB000
	0x03CEC580 ADRP X23, 0x430000
	0x03CEC584 LDRB W8, [X21 + 0x746]
	0x03CEC588 LDR X23, [X23 + 0xE78]
	0x03CEC58C MOV X19, X1
	0x03CEC590 MOV X20, X0
	0x03CEC594 TBNZ X8, 0x0, 0x3CEC618
	0x03CEC598 ADRP X0, 0x42F000
	0x03CEC59C LDR X0, [X0 + 0x938]
	0x03CEC5A0 BL 0x1C16CF4
	0x03CEC5A4 ADRP X0, 0x476000
	0x03CEC5A8 LDR X0, [X0 + 0x910]
	0x03CEC5AC BL 0x1C16CF4
	0x03CEC5B0 ADRP X0, 0x432000
	0x03CEC5B4 LDR X0, [X0 + 0x200]
	0x03CEC5B8 BL 0x1C16CF4
	0x03CEC5BC ADRP X0, 0x42F000
	0x03CEC5C0 LDR X0, [X0 + 0x940]
	0x03CEC5C4 BL 0x1C16CF4
	0x03CEC5C8 ADRP X0, 0x42F000
	0x03CEC5CC LDR X0, [X0 + 0x948]
	0x03CEC5D0 BL 0x1C16CF4
	0x03CEC5D4 ADRP X0, 0x432000
	0x03CEC5D8 LDR X0, [X0 + 0x208]
	0x03CEC5DC BL 0x1C16CF4
	0x03CEC5E0 ADRP X0, 0x42F000
	0x03CEC5E4 LDR X0, [X0 + 0x950]
	0x03CEC5E8 BL 0x1C16CF4
	0x03CEC5EC ADRP X0, 0x476000
	0x03CEC5F0 LDR X0, [X0 + 0x918]
	0x03CEC5F4 BL 0x1C16CF4
	0x03CEC5F8 ADRP X0, 0x430000
	0x03CEC5FC LDR X0, [X0 + 0xE78]
	0x03CEC600 BL 0x1C16CF4
	0x03CEC604 ADRP X0, 0x476000
	0x03CEC608 LDR X0, [X0 + 0x900]
	0x03CEC60C BL 0x1C16CF4
	0x03CEC610 MOVZ W8, 0x1
	0x03CEC614 STRB W8, [X21 + 0x746]
	0x03CEC618 LDR X1, [X23]
	0x03CEC61C MOV X0, X19
	0x03CEC620 BL 0x1C16E00
	0x03CEC624 CBZ X0, 0x3CECA54
	0x03CEC628 CBZ X19, 0x3CECA84
	0x03CEC62C LDR X8, [X19]
	0x03CEC630 ADRP X22, 0x42F000
	0x03CEC634 ADRP X24, 0x42F000
	0x03CEC638 MOV X21, X0
	0x03CEC63C LDP X9, X1, [X8 + 0x188]
	0x03CEC640 LDR X22, [X22 + 0x950]
	0x03CEC644 LDR X24, [X24 + 0x938]
	0x03CEC648 MOV X0, X19
	0x03CEC64C BLR X9

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X20, 0x6FC000
	015 Move W8, [X20+1853]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x477000
	022 Move X0, [X0+2136]
	023 Call 0x1C17CF4
	024 Move X0, 0x477000
	025 Move X0, [X0+2008]
	026 Call 0x1C17CF4
	027 Move X0, 0x477000
	028 Move X0, [X0+2144]
	029 Call 0x1C17CF4
	030 Move X0, 0x477000
	031 Move X0, [X0+2016]
	032 Call 0x1C17CF4
	033 Move X0, 0x477000
	034 Move X0, [X0+2024]
	035 Call 0x1C17CF4
	036 Move X0, 0x477000
	037 Move X0, [X0+2152]
	038 Call 0x1C17CF4
	039 Move X0, 0x477000
	040 Move X0, [X0+2040]
	041 Call 0x1C17CF4
	042 Move X0, 0x477000
	043 Move X0, [X0+1984]
	044 Call 0x1C17CF4
	045 Move X0, 0x477000
	046 Move X0, [X0+2160]
	047 Call 0x1C17CF4
	048 Move X0, 0x477000
	049 Move X0, [X0+2168]
	050 Call 0x1C17CF4
	051 Move X0, 0x477000
	052 Move X0, [X0+2176]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+1853], W8
	056 Move [X31+96], X31
	057 Move [X31+104], X31
	058 Move [X31+112], X31
	059 Move [X31+64], X31
	060 Move [X31+72], X31
	061 Move [X31+80], X31
	062 Move [X31+32], X31
	063 Move [X31+40], X31
	064 Move [X31+48], X31
	065 Move X0, [X19+56]
	066 Compare X0, 0
	067 JumpIfEqual {282}
	068 Move X8, 0x477000
	069 Move X8, [X8+2040]
	070 Move X27, 0x477000
	071 Move X28, 0x477000
	072 Move X23, 0x477000
	073 Move X25, 0x477000
	074 Move X27, [X27+2016]
	075 Move X28, [X28+2160]
	076 Move X23, [X23+1984]
	077 Move X25, [X25+2176]
	078 Move X1, [X8]
	079 Move X24, 0x477000
	080 Move X22, 0x477000
	081 Move X26, 0x477000
	082 Move X24, [X24+2144]
	083 Move X22, [X22+2136]
	084 Move X26, [X26+2008]
	085 Add X8, X31, 8
	086 Call HashSet`1<Object>.GetEnumerator, X0
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Move X8, [X31+24]
	089 Move [X31+6], V0
	090 Move [X31+112], X8
	091 Move X1, [X27]
	092 Add X0, X31, 96
	093 Call Enumerator<Object>.MoveNext, X0
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {158}
	098 Move X21, [X31+112]
	099 Move X1, X21
	100 Call VisualTreeBindingsUpdater.GetBindingObjectFromElement, X0, X1
	101 Move X20, X0
	102 Compare X0, 0
	103 JumpIfEqual {150}
	104 Compare X21, 0
	105 JumpIfEqual {279}
	106 Move X29, [X21+928]
	107 Move X0, X19
	108 Move X1, X31
	109 Call BaseVisualTreeUpdater.get_panel, X0
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X8, [X20]
	112 Move X1, [X23]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move W2, 2
	123 Move X0, X20
	124 Call 0x1C5D788
	125 Move X0, [X19+104]
	126 Compare X0, 0
	127 JumpIfEqual {281}
	128 Move W10, [X0+28]
	129 Move X8, [X0+16]
	130 Move X9, [X28]
	131 Add W10, W10, 1
	132 Move [X0+28], W10
	133 Compare X8, 0
	134 JumpIfEqual {280}
	135 NotImplemented "Instruction LDRSW not yet implemented."
	136 Move W11, [X8+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Add W9, W10, 1
	139 Add X8, X8, X10
	140 Move [X0+24], W9
	141 Move [X8+32], X20
	142 Move W9, [X10]
	143 Add W9, W9, 2
	144 Add X8, X8, W9
	145 Add X0, X8, 312
	146 Move X8, [X0]
	147 Move X1, [X0+8]
	148 Move X0, X20
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X0, X19
	151 Move X1, X21
	152 Call VisualTreeBindingsUpdater.StopTracking, X0, X1
	153 Move X8, [X9+32]
	154 Move X8, [X8+192]
	155 Move X2, [X8+112]
	156 Move X1, X20
	157 Call List`1<Object>.AddWithResize, X0, X1
	158 Move X1, [X26]
	159 Add X0, X31, 96
	160 Call Enumerator<Object>.Dispose, X0
	161 Move X0, [X19+104]
	162 Compare X0, 0
	163 JumpIfEqual {282}
	164 Move X1, [X25]
	165 Add X8, X31, 8
	166 Call List`1<Object>.GetEnumerator, X0
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 Move X8, [X31+24]
	169 Move [X31+4], V0
	170 Move [X31+80], X8
	171 Move X1, [X24]
	172 Add X0, X31, 64
	173 Call Enumerator<Object>.MoveNext, X0
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {202}
	178 Move X20, [X31+80]
	179 Compare X20, 0
	180 JumpIfEqual {277}
	181 Move X8, [X20]
	182 Move X1, [X23]
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Compare X9, 0
	185 JumpIfEqual {192}
	186 Move X10, [X8+176]
	187 Add X10, X10, 8
	188 NotImplemented "Instruction LDUR not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X9, X9, 1
	191 Add X10, X10, 16
	192 Move X0, X20
	193 Move W2, W31
	194 Call 0x1C5D788
	195 NotImplemented "Instruction LDRSW not yet implemented."
	196 Add X8, X8, X9
	197 Add X0, X8, 312
	198 Move X8, [X0]
	199 Move X1, [X0+8]
	200 Move X0, X20
	201 NotImplemented "Instruction BLR not yet implemented."
	202 Move X1, [X22]
	203 Add X0, X31, 64
	204 Call Enumerator<Object>.Dispose, X0
	205 Move X0, [X19+104]
	206 Compare X0, 0
	207 JumpIfEqual {282}
	208 Move X1, [X25]
	209 Add X8, X31, 8
	210 Call List`1<Object>.GetEnumerator, X0
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 Move X8, [X31+24]
	213 Move [X31+2], V0
	214 Move [X31+48], X8
	215 Move X1, [X24]
	216 Add X0, X31, 32
	217 Call Enumerator<Object>.MoveNext, X0
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {247}
	222 Move X20, [X31+48]
	223 Compare X20, 0
	224 JumpIfEqual {278}
	225 Move X8, [X20]
	226 Move X1, [X23]
	227 NotImplemented "Instruction LDRH not yet implemented."
	228 Compare X9, 0
	229 JumpIfEqual {236}
	230 Move X10, [X8+176]
	231 Add X10, X10, 8
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Subtract X9, X9, 1
	235 Add X10, X10, 16
	236 Move W2, 1
	237 Move X0, X20
	238 Call 0x1C5D788
	239 Move W9, [X10]
	240 Add W9, W9, 1
	241 Add X8, X8, W9
	242 Add X0, X8, 312
	243 Move X8, [X0]
	244 Move X1, [X0+8]
	245 Move X0, X20
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move X1, [X22]
	248 Add X0, X31, 32
	249 Call Enumerator<Object>.Dispose, X0
	250 Move X8, [X19+104]
	251 Compare X8, 0
	252 JumpIfEqual {282}
	253 Move W2, [X8+24]
	254 Move W9, [X8+28]
	255 Add W9, W9, 1
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move [X8+24], W31
	258 Move [X8+28], W9
	259 Move X0, [X8+16]
	260 Move W1, W31
	261 Move X3, X31
	262 Call Array.Clear, X0, X1, X2
	263 Move X20, [X31+208]
	264 Move X19, [X31+216]
	265 Move X22, [X31+192]
	266 Move X21, [X31+200]
	267 Move X24, [X31+176]
	268 Move X23, [X31+184]
	269 Move X26, [X31+160]
	270 Move X25, [X31+168]
	271 Move X28, [X31+144]
	272 Move X27, [X31+152]
	273 Move X29, [X31+128]
	274 Move X30, [X31+136]
	275 Add X31, X31, 224
	276 Return 
	277 Call 0x1C17F20
	278 Call 0x1C17F20
	279 Call 0x1C17F20
	280 Call 0x1C17F20
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Move X20, X0
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X0, X20
	286 Call 0x3EB2AD0
	287 Move X21, [X0]
	288 Call 0x3EB2AE0
	289 Move X1, [X26]
	290 Add X0, X31, 96
	291 Call Enumerator<Object>.Dispose, X0
	292 Compare X21, 0
	293 JumpIfEqual {161}
	294 Move X21, X31
	295 Move X20, X0
	296 Move X1, [X26]
	297 Add X0, X31, 96
	298 Call Enumerator<Object>.Dispose, X0
	299 Compare X21, 0
	300 JumpIfEqual {343}
	301 Move X0, X21
	302 Call 0x1C17F18
	303 Move X20, X0
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X0, X20
	306 Call 0x3EB2AD0
	307 Move X21, [X0]
	308 Call 0x3EB2AE0
	309 Move X1, [X22]
	310 Add X0, X31, 32
	311 Call Enumerator<Object>.Dispose, X0
	312 Compare X21, 0
	313 JumpIfEqual {250}
	314 Move X21, X31
	315 Move X20, X0
	316 Move X1, [X22]
	317 Add X0, X31, 32
	318 Call Enumerator<Object>.Dispose, X0
	319 Compare X21, 0
	320 JumpIfEqual {343}
	321 Move X0, X21
	322 Call 0x1C17F18
	323 Move X20, X0
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move X0, X20
	326 Call 0x3EB2AD0
	327 Move X21, [X0]
	328 Call 0x3EB2AE0
	329 Move X1, [X22]
	330 Add X0, X31, 64
	331 Call Enumerator<Object>.Dispose, X0
	332 Compare X21, 0
	333 JumpIfEqual {205}
	334 Move X0, X21
	335 Call 0x1C17F18
	336 Move X21, X31
	337 Move X20, X0
	338 Move X1, [X22]
	339 Add X0, X31, 64
	340 Call Enumerator<Object>.Dispose, X0
	341 Compare X21, 0
	342 JumpIfNotEqual {345}
	343 Move X0, X20
	344 Call 0x1D2D690
	345 Move X0, X21
	346 Call 0x1C17F18
	347 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03CEC650 LDR X8, [X22]
	0x03CEC654 MOV X22, X0
	0x03CEC658 LDR W9, [X8 + 0xE0]
	0x03CEC65C CBNZ W9, 0x3CEC668
	0x03CEC660 MOV X0, X8
	0x03CEC664 BL 0x1C16DFC
	0x03CEC668 LDR X0, [X24]
	0x03CEC66C BL 0x2D0D5C8
	0x03CEC670 CMP X22, X0
	0x03CEC674 B.NE 0x3CEC6D8
	0x03CEC678 LDR X8, [X21]
	0x03CEC67C LDR X1, [X23]
	0x03CEC680 LDRH W9, [X8 + 0x12E]
	0x03CEC684 CBZ X9, 0x3CEC6A8
	0x03CEC688 LDR X10, [X8 + 0xB0]
	0x03CEC68C ADD X10, X10, 0x8
	0x03CEC690 LDUR X11, [X10 - 0x8]
	0x03CEC694 CMP X11, X1
	0x03CEC698 B.EQ 0x3CEC6B8
	0x03CEC69C SUBS X9, X9, 0x1
	0x03CEC6A0 ADD X10, X10, 0x10
	0x03CEC6A4 B.NE 0x3CEC690
	0x03CEC6A8 MOVZ W2, 0x3
	0x03CEC6AC MOV X0, X21
	0x03CEC6B0 BL 0x1C5C788
	0x03CEC6B4 B 0x3CEC6C8
	0x03CEC6B8 LDR W9, [X10]
	0x03CEC6BC ADD W9, W9, 0x3
	0x03CEC6C0 ADD X8, X8, W9, 0x4, SXTW
	0x03CEC6C4 ADD X0, X8, 0x138
	0x03CEC6C8 LDP X8, X1, [X0]
	0x03CEC6CC MOV X0, X21
	0x03CEC6D0 BLR X8
	0x03CEC6D4 CBZ W0, 0x3CEC90C
	0x03CEC6D8 LDR X8, [X19]
	0x03CEC6DC ADRP X22, 0x432000
	0x03CEC6E0 ADRP X24, 0x432000
	0x03CEC6E4 MOV X0, X19
	0x03CEC6E8 LDP X9, X1, [X8 + 0x188]
	0x03CEC6EC LDR X22, [X22 + 0x208]
	0x03CEC6F0 LDR X24, [X24 + 0x200]
	0x03CEC6F4 BLR X9
	0x03CEC6F8 LDR X8, [X22]
	0x03CEC6FC MOV X22, X0
	0x03CEC700 LDR W9, [X8 + 0xE0]
	0x03CEC704 CBNZ W9, 0x3CEC710
	0x03CEC708 MOV X0, X8
	0x03CEC70C BL 0x1C16DFC
	0x03CEC710 LDR X0, [X24]
	0x03CEC714 BL 0x2D0D5C8
	0x03CEC718 CMP X22, X0
	0x03CEC71C B.NE 0x3CEC760
	0x03CEC720 LDR X8, [X21]
	0x03CEC724 LDR X1, [X23]
	0x03CEC728 LDRH W9, [X8 + 0x12E]
	0x03CEC72C CBZ X9, 0x3CEC750
	0x03CEC730 LDR X10, [X8 + 0xB0]
	0x03CEC734 ADD X10, X10, 0x8
	0x03CEC738 LDUR X11, [X10 - 0x8]
	0x03CEC73C CMP X11, X1
	0x03CEC740 B.EQ 0x3CEC84C
	0x03CEC744 SUBS X9, X9, 0x1
	0x03CEC748 ADD X10, X10, 0x10
	0x03CEC74C B.NE 0x3CEC738
	0x03CEC750 MOVZ W2, 0x3
	0x03CEC754 MOV X0, X21
	0x03CEC758 BL 0x1C5C788
	0x03CEC75C B 0x3CEC85C
	0x03CEC760 LDR X8, [X19]
	0x03CEC764 MOV X0, X19
	0x03CEC768 LDP X9, X1, [X8 + 0x188]
	0x03CEC76C BLR X9
	0x03CEC770 ADRP X8, 0x476000
	0x03CEC774 LDR X8, [X8 + 0x918]
	0x03CEC778 MOV X22, X0
	0x03CEC77C LDR X8, [X8]
	0x03CEC780 LDR W9, [X8 + 0xE0]
	0x03CEC784 CBNZ W9, 0x3CEC790
	0x03CEC788 MOV X0, X8
	0x03CEC78C BL 0x1C16DFC
	0x03CEC790 ADRP X8, 0x476000
	0x03CEC794 LDR X8, [X8 + 0x910]
	0x03CEC798 LDR X0, [X8]
	0x03CEC79C BL 0x2D0D5C8
	0x03CEC7A0 CMP X22, X0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x6FC000
	011 Move X26, 0x477000
	012 Move X25, 0x477000
	013 Move X24, 0x439000
	014 Move X23, 0x439000
	015 Move X22, 0x477000
	016 Move X21, 0x477000
	017 Move X26, [X26+2184]
	018 Move W8, [X20+1854]
	019 Move X25, [X25+2192]
	020 Move X24, [X24+2856]
	021 Move X23, [X23+2864]
	022 Move X22, [X22+2200]
	023 Move X21, [X21+2208]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x439000
	030 Move X0, [X0+2864]
	031 Call 0x1C17CF4
	032 Move X0, 0x439000
	033 Move X0, [X0+2856]
	034 Call 0x1C17CF4
	035 Move X0, 0x477000
	036 Move X0, [X0+2192]
	037 Call 0x1C17CF4
	038 Move X0, 0x477000
	039 Move X0, [X0+2184]
	040 Call 0x1C17CF4
	041 Move X0, 0x477000
	042 Move X0, [X0+2208]
	043 Call 0x1C17CF4
	044 Move X0, 0x477000
	045 Move X0, [X0+2200]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+1854], W8
	049 Move X0, [X26]
	050 Call 0x1C17F10
	051 Move X1, [X25]
	052 Move X20, X0
	053 Call HashSet`1<Object>..ctor, X0
	054 Move [X19+56], X20
	055 Move X0, [X26]
	056 Call 0x1C17F10
	057 Move X1, [X25]
	058 Move X20, X0
	059 Call HashSet`1<Object>..ctor, X0
	060 Move [X19+64], X20
	061 Move X0, [X26]
	062 Call 0x1C17F10
	063 Move X1, [X25]
	064 Move X20, X0
	065 Call HashSet`1<Object>..ctor, X0
	066 Move [X19+72], X20
	067 Move [X19+80], X31
	068 Move X0, [X26]
	069 Call 0x1C17F10
	070 Move X1, [X25]
	071 Move X20, X0
	072 Call HashSet`1<Object>..ctor, X0
	073 Move [X19+88], X20
	074 Move X0, [X24]
	075 Call 0x1C17F10
	076 Move X1, [X23]
	077 Move X20, X0
	078 Call Dictionary`2<Object, Object>..ctor, X0
	079 Move [X19+96], X20
	080 Move X0, [X22]
	081 Call 0x1C17F10
	082 Move X1, [X21]
	083 Move X20, X0
	084 Call List`1<Object>..ctor, X0
	085 Move [X19+104], X20
	086 Move X0, X19
	087 Move X20, [X31+64]
	088 Move X19, [X31+72]
	089 Move X22, [X31+48]
	090 Move X21, [X31+56]
	091 Move X24, [X31+32]
	092 Move X23, [X31+40]
	093 Move X26, [X31+16]
	094 Move X25, [X31+24]
	095 Move X1, X31
	096 Move X30, [X31+80]
	097 Call BaseVisualTreeHierarchyTrackerUpdater..ctor, X0
	098 Return 

Method: System.Void .cctor()

Disassembly:
	0x03CEC7A4 B.NE 0x3CEC7C4
	0x03CEC7A8 MOV X0, X20
	0x03CEC7AC MOV X1, X19
	0x03CEC7B0 LDP X20, X19, [X31 + 0x30]
	0x03CEC7B4 LDP X22, X21, [X31 + 0x20]
	0x03CEC7B8 LDP X24, X23, [X31 + 0x10]
	0x03CEC7BC LDR X30, [X31], #0x40
	0x03CEC7C0 B 0x3CEC470
	0x03CEC7C4 LDR X8, [X19]
	0x03CEC7C8 MOV X0, X19
	0x03CEC7CC LDP X9, X1, [X8 + 0x188]
	0x03CEC7D0 BLR X9
	0x03CEC7D4 ADRP X8, 0x42F000
	0x03CEC7D8 LDR X8, [X8 + 0x948]
	0x03CEC7DC MOV X22, X0
	0x03CEC7E0 LDR X8, [X8]
	0x03CEC7E4 LDR W9, [X8 + 0xE0]
	0x03CEC7E8 CBNZ W9, 0x3CEC7F4
	0x03CEC7EC MOV X0, X8
	0x03CEC7F0 BL 0x1C16DFC
	0x03CEC7F4 ADRP X8, 0x42F000
	0x03CEC7F8 LDR X8, [X8 + 0x940]
	0x03CEC7FC LDR X0, [X8]
	0x03CEC800 BL 0x2D0D5C8
	0x03CEC804 CMP X22, X0
	0x03CEC808 B.NE 0x3CECA54
	0x03CEC80C LDR X8, [X21]
	0x03CEC810 LDR X1, [X23]
	0x03CEC814 LDRH W9, [X8 + 0x12E]
	0x03CEC818 CBZ X9, 0x3CEC83C
	0x03CEC81C LDR X10, [X8 + 0xB0]
	0x03CEC820 ADD X10, X10, 0x8
	0x03CEC824 LDUR X11, [X10 - 0x8]
	0x03CEC828 CMP X11, X1
	0x03CEC82C B.EQ 0x3CECA34
	0x03CEC830 SUBS X9, X9, 0x1
	0x03CEC834 ADD X10, X10, 0x10
	0x03CEC838 B.NE 0x3CEC824
	0x03CEC83C MOVZ W2, 0x3
	0x03CEC840 MOV X0, X21
	0x03CEC844 BL 0x1C5C788
	0x03CEC848 B 0x3CECA44
	0x03CEC84C LDR W9, [X10]
	0x03CEC850 ADD W9, W9, 0x3
	0x03CEC854 ADD X8, X8, W9, 0x4, SXTW
	0x03CEC858 ADD X0, X8, 0x138
	0x03CEC85C LDP X8, X1, [X0]
	0x03CEC860 MOV X0, X21
	0x03CEC864 BLR X8
	0x03CEC868 CBNZ W0, 0x3CEC8CC
	0x03CEC86C LDR X8, [X21]
	0x03CEC870 LDR X1, [X23]
	0x03CEC874 LDRH W9, [X8 + 0x12E]
	0x03CEC878 CBZ X9, 0x3CEC89C
	0x03CEC87C LDR X10, [X8 + 0xB0]
	0x03CEC880 ADD X10, X10, 0x8
	0x03CEC884 LDUR X11, [X10 - 0x8]
	0x03CEC888 CMP X11, X1
	0x03CEC88C B.EQ 0x3CEC8AC
	0x03CEC890 SUBS X9, X9, 0x1
	0x03CEC894 ADD X10, X10, 0x10
	0x03CEC898 B.NE 0x3CEC884
	0x03CEC89C MOVZ W2, 0x4
	0x03CEC8A0 MOV X0, X21
	0x03CEC8A4 BL 0x1C5C788
	0x03CEC8A8 B 0x3CEC8BC
	0x03CEC8AC LDR W9, [X10]
	0x03CEC8B0 ADD W9, W9, 0x4
	0x03CEC8B4 ADD X8, X8, W9, 0x4, SXTW
	0x03CEC8B8 ADD X0, X8, 0x138
	0x03CEC8BC LDP X8, X1, [X0]
	0x03CEC8C0 MOV X0, X21
	0x03CEC8C4 BLR X8
	0x03CEC8C8 TBNZ X0, 0x0, 0x3CEC90C
	0x03CEC8CC LDR X8, [X21]
	0x03CEC8D0 LDR X1, [X23]
	0x03CEC8D4 LDRH W9, [X8 + 0x12E]
	0x03CEC8D8 CBZ X9, 0x3CEC8FC
	0x03CEC8DC LDR X10, [X8 + 0xB0]
	0x03CEC8E0 ADD X10, X10, 0x8
	0x03CEC8E4 LDUR X11, [X10 - 0x8]
	0x03CEC8E8 CMP X11, X1
	0x03CEC8EC B.EQ 0x3CEC928
	0x03CEC8F0 SUBS X9, X9, 0x1
	0x03CEC8F4 ADD X10, X10, 0x10
	0x03CEC8F8 B.NE 0x3CEC8E4
	0x03CEC8FC MOVZ W2, 0x3
	0x03CEC900 MOV X0, X21
	0x03CEC904 BL 0x1C5C788
	0x03CEC908 B 0x3CEC938
	0x03CEC90C MOV X0, X20
	0x03CEC910 MOV X1, X19
	0x03CEC914 LDP X20, X19, [X31 + 0x30]
	0x03CEC918 LDP X22, X21, [X31 + 0x20]
	0x03CEC91C LDP X24, X23, [X31 + 0x10]
	0x03CEC920 LDR X30, [X31], #0x40
	0x03CEC924 B 0x3CEBC50
	0x03CEC928 LDR W9, [X10]
	0x03CEC92C ADD W9, W9, 0x3
	0x03CEC930 ADD X8, X8, W9, 0x4, SXTW
	0x03CEC934 ADD X0, X8, 0x138
	0x03CEC938 LDP X8, X1, [X0]
	0x03CEC93C MOV X0, X21

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x6FC000
	011 Move X26, 0x477000
	012 Move X19, 0x477000
	013 Move X24, 0x477000
	014 Move X23, 0x477000
	015 Move X22, 0x477000
	016 Move X21, 0x477000
	017 Move X20, 0x477000
	018 Move X26, [X26+2216]
	019 Move X19, [X19+1976]
	020 Move W8, [X25+1855]
	021 Move X24, [X24+2224]
	022 Move X23, [X23+2232]
	023 Move X22, [X22+2240]
	024 Move X21, [X21+2248]
	025 Move X20, [X20+2256]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0x477000
	031 Move X0, [X0+1976]
	032 Call 0x1C17CF4
	033 Move X0, 0x477000
	034 Move X0, [X0+2240]
	035 Call 0x1C17CF4
	036 Move X0, 0x477000
	037 Move X0, [X0+2216]
	038 Call 0x1C17CF4
	039 Move X0, 0x477000
	040 Move X0, [X0+2224]
	041 Call 0x1C17CF4
	042 Move X0, 0x477000
	043 Move X0, [X0+2232]
	044 Call 0x1C17CF4
	045 Move X0, 0x477000
	046 Move X0, [X0+2256]
	047 Call 0x1C17CF4
	048 Move X0, 0x477000
	049 Move X0, [X0+2248]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X25+1855], W8
	053 Move X0, [X26]
	054 Move X1, X31
	055 Call PropertyName.op_Implicit, X0
	056 Move X8, [X19]
	057 Move X1, X31
	058 Move X8, [X8+184]
	059 Move [X8], W0
	060 Move X0, [X24]
	061 Call PropertyName.op_Implicit, X0
	062 Move X8, [X19]
	063 Move W1, 1
	064 Move W2, W31
	065 Move W3, W31
	066 Move X8, [X8+184]
	067 Move X4, X31
	068 Move [X8+4], W0
	069 Move X8, [X19]
	070 Move X0, [X23]
	071 Move X8, [X8+184]
	072 Move [X8+8], X0
	073 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	074 Move X8, [X19]
	075 Move W1, 1
	076 Move W2, W31
	077 Move W3, W31
	078 Move X8, [X8+184]
	079 Move X4, X31
	080 Move [X8+16], X0
	081 Move X0, [X22]
	082 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	083 Move X8, [X19]
	084 Move W1, 1
	085 Move W2, W31
	086 Move W3, W31
	087 Move X8, [X8+184]
	088 Move X4, X31
	089 Move [X8+24], X0
	090 Move X0, [X21]
	091 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	092 Move X8, [X19]
	093 Move W1, 1
	094 Move W2, W31
	095 Move W3, W31
	096 Move X8, [X8+184]
	097 Move X4, X31
	098 Move [X8+32], X0
	099 Move X0, [X20]
	100 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	101 Move X8, [X19]
	102 Move X20, [X31+64]
	103 Move X19, [X31+72]
	104 Move X22, [X31+48]
	105 Move X21, [X31+56]
	106 Move X24, [X31+32]
	107 Move X23, [X31+40]
	108 Move X8, [X8+184]
	109 Move X26, [X31+16]
	110 Move X25, [X31+24]
	111 Move [X8+40], X0
	112 Move [X8+48], W31
	113 Move X30, [X31+80]
	114 Return 

