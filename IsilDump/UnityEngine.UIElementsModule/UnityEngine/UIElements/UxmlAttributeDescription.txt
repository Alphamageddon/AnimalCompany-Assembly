Type: UnityEngine.UIElements.UxmlAttributeDescription

Method: System.Void .ctor()

Disassembly:
	0x03E1BDF0 BL 0x1C16DFC
	0x03E1BDF4 LDR X0, [X23]
	0x03E1BDF8 ADRP X9, 0x34F000
	0x03E1BDFC LDR X8, [X0 + 0xB8]
	0x03E1BE00 LDR X9, [X9 + 0x948]
	0x03E1BE04 LDR X22, [X8]
	0x03E1BE08 LDR X0, [X9]
	0x03E1BE0C BL 0x1C16F10
	0x03E1BE10 ADRP X8, 0x34F000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move W8, 1
	007 Move [X19+48], W8
	008 Move [X19+56], X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Return 

Method: System.String get_name()

Disassembly:
	0x03E1BE14 LDR X8, [X8 + 0x958]
	0x03E1BE18 MOV X1, X22

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_name(System.String value)

Disassembly:
	0x03E1BE1C MOV X3, X31
	0x03E1BE20 MOV X21, X0

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Void set_obsoleteNames(System.Collections.Generic.IEnumerable`1<System.String> value)

Disassembly:
	0x03E1BE24 LDR X2, [X8]
	0x03E1BE28 BL 0x2D39838
	0x03E1BE2C LDR X8, [X23]
	0x03E1BE30 LDR X8, [X8 + 0xB8]
	0x03E1BE34 STR X21, [X8 + 0x8]
	0x03E1BE38 LDP V0, V1, [X31]
	0x03E1BE3C STP V0, V1, [X31 + 0x20]
	0x03E1BE40 CBZ X20, 0x3E1BE84
	0x03E1BE44 ADRP X8, 0x34F000
	0x03E1BE48 LDR X8, [X8 + 0x960]
	0x03E1BE4C LDR W4, [X20 + 0x40]
	0x03E1BE50 LDP V0, V1, [X31 + 0x20]
	0x03E1BE54 ADD X2, X31, 0x40
	0x03E1BE58 LDR X5, [X8]
	0x03E1BE5C MOV X0, X20
	0x03E1BE60 MOV X1, X19
	0x03E1BE64 MOV X3, X21
	0x03E1BE68 STP V0, V1, [X31 + 0x40]
	0x03E1BE6C BL 0x22A8FA4
	0x03E1BE70 LDP X20, X19, [X31 + 0x80]
	0x03E1BE74 LDP X22, X21, [X31 + 0x70]
	0x03E1BE78 LDP X30, X23, [X31 + 0x60]
	0x03E1BE7C ADD X31, X31, 0x90

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5CE000
	007 Move X22, 0x2D9000
	008 Move W8, [X21+1025]
	009 Move X22, [X22+3768]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2D9000
	017 Move X0, [X0+3768]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1025], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Call Enumerable.ToArray, X0
	024 Move [X19+24], X0
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Return 

Method: System.Void set_type(System.String value)

Disassembly:
	0x03E1BE80 RET
	0x03E1BE84 BL 0x1C16F20

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Void set_typeNamespace(System.String value)

Disassembly:
	0x03E1BE88 SUB X31, X31, 0xA0
	0x03E1BE8C STR X30, [X31 + 0x60]

ISIL:
	001 Move [X0+40], X1
	002 Return 

Method: System.Void set_use(UnityEngine.UIElements.UxmlAttributeDescription/Use value)

Disassembly:
	0x03E1BE90 STP X24, X23, [X31 + 0x70]
	0x03E1BE94 STP X22, X21, [X31 + 0x80]

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.Void set_restriction(UnityEngine.UIElements.UxmlTypeRestriction value)

Disassembly:
	0x03E1BE98 STP X20, X19, [X31 + 0x90]
	0x03E1BE9C ADRP X23, 0x5CD000

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Boolean TryGetValueFromBagAsString(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, out System.String value)

Disassembly:
	0x03E1BEA0 ADRP X24, 0x34F000
	0x03E1BEA4 LDRB W8, [X23 + 0x411]
	0x03E1BEA8 LDR X24, [X24 + 0x940]
	0x03E1BEAC MOV X19, X3
	0x03E1BEB0 MOV X22, X2
	0x03E1BEB4 MOV X20, X1
	0x03E1BEB8 MOV X21, X0
	0x03E1BEBC TBNZ X8, 0x0, 0x3E1BF04
	0x03E1BEC0 ADRP X0, 0x34F000
	0x03E1BEC4 LDR X0, [X0 + 0x948]
	0x03E1BEC8 BL 0x1C16CF4
	0x03E1BECC ADRP X0, 0x34F000
	0x03E1BED0 LDR X0, [X0 + 0x950]
	0x03E1BED4 BL 0x1C16CF4
	0x03E1BED8 ADRP X0, 0x34F000
	0x03E1BEDC LDR X0, [X0 + 0x968]
	0x03E1BEE0 BL 0x1C16CF4
	0x03E1BEE4 ADRP X0, 0x34F000
	0x03E1BEE8 LDR X0, [X0 + 0x940]
	0x03E1BEEC BL 0x1C16CF4
	0x03E1BEF0 ADRP X0, 0x34F000
	0x03E1BEF4 LDR X0, [X0 + 0x970]
	0x03E1BEF8 BL 0x1C16CF4
	0x03E1BEFC MOVZ W8, 0x1
	0x03E1BF00 STRB W8, [X23 + 0x411]
	0x03E1BF04 LDP V1, V0, [X22]
	0x03E1BF08 LDR X0, [X24]
	0x03E1BF0C STP V1, V0, [X31 + 0x40]
	0x03E1BF10 LDR W8, [X0 + 0xE0]
	0x03E1BF14 CBNZ W8, 0x3E1BF20
	0x03E1BF18 BL 0x1C16DFC
	0x03E1BF1C LDR X0, [X24]
	0x03E1BF20 LDR X8, [X0 + 0xB8]
	0x03E1BF24 LDR X22, [X8 + 0x10]
	0x03E1BF28 CBZ X22, 0x3E1BF34
	0x03E1BF2C LDP V0, V1, [X31 + 0x40]
	0x03E1BF30 B 0x3E1BF90
	0x03E1BF34 LDP V0, V1, [X31 + 0x40]
	0x03E1BF38 STP V0, V1, [X31]
	0x03E1BF3C LDR W8, [X0 + 0xE0]
	0x03E1BF40 CBNZ W8, 0x3E1BF4C
	0x03E1BF44 BL 0x1C16DFC
	0x03E1BF48 LDR X0, [X24]
	0x03E1BF4C ADRP X9, 0x34F000
	0x03E1BF50 LDR X8, [X0 + 0xB8]
	0x03E1BF54 LDR X9, [X9 + 0x948]
	0x03E1BF58 LDR X23, [X8]
	0x03E1BF5C LDR X0, [X9]
	0x03E1BF60 BL 0x1C16F10
	0x03E1BF64 ADRP X8, 0x34F000
	0x03E1BF68 LDR X8, [X8 + 0x968]
	0x03E1BF6C MOV X1, X23
	0x03E1BF70 MOV X3, X31
	0x03E1BF74 MOV X22, X0
	0x03E1BF78 LDR X2, [X8]
	0x03E1BF7C BL 0x2D39838
	0x03E1BF80 LDR X8, [X24]
	0x03E1BF84 LDR X8, [X8 + 0xB8]
	0x03E1BF88 STR X22, [X8 + 0x10]
	0x03E1BF8C LDP V0, V1, [X31]
	0x03E1BF90 STP V0, V1, [X31 + 0x20]
	0x03E1BF94 CBZ X21, 0x3E1BFE4
	0x03E1BF98 ADRP X8, 0x34F000
	0x03E1BF9C LDR X8, [X8 + 0x970]
	0x03E1BFA0 LDR W4, [X21 + 0x40]
	0x03E1BFA4 LDP V0, V1, [X31 + 0x20]
	0x03E1BFA8 ADD X2, X31, 0x40
	0x03E1BFAC LDR X6, [X8]
	0x03E1BFB0 MOV X0, X21
	0x03E1BFB4 MOV X1, X20
	0x03E1BFB8 MOV X3, X22
	0x03E1BFBC MOV X5, X19
	0x03E1BFC0 STP V0, V1, [X31 + 0x40]
	0x03E1BFC4 BL 0x22A97A4
	0x03E1BFC8 LDP X20, X19, [X31 + 0x90]
	0x03E1BFCC LDP X22, X21, [X31 + 0x80]
	0x03E1BFD0 LDP X24, X23, [X31 + 0x70]
	0x03E1BFD4 LDR X30, [X31 + 0x60]
	0x03E1BFD8 AND W0, W0, 0x1
	0x03E1BFDC ADD X31, X31, 0xA0
	0x03E1BFE0 RET
	0x03E1BFE4 BL 0x1C16F20
	0x03E1BFE8 SUB X31, X31, 0x20
	0x03E1BFEC STP X30, X19, [X31 + 0x10]
	0x03E1BFF0 MOV W19, W1
	0x03E1BFF4 STR W31, [X31 + 0xC]
	0x03E1BFF8 CBZ X0, 0x3E1C014
	0x03E1BFFC ADD X1, X31, 0xC
	0x03E1C000 MOV X2, X31
	0x03E1C004 BL 0x337BDF4
	0x03E1C008 LDR W8, [X31 + 0xC]
	0x03E1C00C ANDS W31, W0, 0x1
	0x03E1C010 CSEL W19, W8, W19, NE
	0x03E1C014 MOV W0, W19
	0x03E1C018 LDP X30, X19, [X31 + 0x10]
	0x03E1C01C ADD X31, X31, 0x20
	0x03E1C020 RET
	0x03E1C024 STR X30, [X31 - 0x20]!
	0x03E1C028 STP X20, X19, [X31 + 0x10]
	0x03E1C02C ADRP X19, 0x5CC000
	0x03E1C030 ADRP X20, 0x34E000
	0x03E1C034 LDRB W8, [X19 + 0x412]
	0x03E1C038 LDR X20, [X20 + 0x940]
	0x03E1C03C TBNZ X8, 0x0, 0x3E1C054
	0x03E1C040 ADRP X0, 0x34E000
	0x03E1C044 LDR X0, [X0 + 0x940]
	0x03E1C048 BL 0x1C16CF4
	0x03E1C04C MOVZ W8, 0x1
	0x03E1C050 STRB W8, [X19 + 0x412]
	0x03E1C054 LDR X0, [X20]
	0x03E1C058 BL 0x1C16F10
	0x03E1C05C MOV X1, X31
	0x03E1C060 MOV X19, X0
	0x03E1C064 BL 0x33BDD8C
	0x03E1C068 LDR X8, [X20]
	0x03E1C06C LDR X8, [X8 + 0xB8]
	0x03E1C070 STR X19, [X8]
	0x03E1C074 LDP X20, X19, [X31 + 0x10]
	0x03E1C078 LDR X30, [X31], #0x20
	0x03E1C07C RET
	0x03E1C080 MOV X1, X31
	0x03E1C084 B 0x33BDD8C
	0x03E1C088 SUB X31, X31, 0x20
	0x03E1C08C STP X30, X19, [X31 + 0x10]
	0x03E1C090 MOV W19, W2
	0x03E1C094 STR W31, [X31 + 0xC]
	0x03E1C098 CBZ X1, 0x3E1C0B8
	0x03E1C09C MOV X0, X1
	0x03E1C0A0 ADD X1, X31, 0xC
	0x03E1C0A4 MOV X2, X31
	0x03E1C0A8 BL 0x337BDF4
	0x03E1C0AC LDR W8, [X31 + 0xC]
	0x03E1C0B0 ANDS W31, W0, 0x1
	0x03E1C0B4 CSEL W19, W8, W19, NE
	0x03E1C0B8 MOV W0, W19
	0x03E1C0BC LDP X30, X19, [X31 + 0x10]
	0x03E1C0C0 ADD X31, X31, 0x20
	0x03E1C0C4 RET
	0x03E1C0C8 SUB X31, X31, 0x20
	0x03E1C0CC STP X30, X19, [X31 + 0x10]
	0x03E1C0D0 MOV W19, W2
	0x03E1C0D4 STR W31, [X31 + 0xC]
	0x03E1C0D8 CBZ X1, 0x3E1C0F8
	0x03E1C0DC MOV X0, X1
	0x03E1C0E0 ADD X1, X31, 0xC
	0x03E1C0E4 MOV X2, X31
	0x03E1C0E8 BL 0x337BDF4
	0x03E1C0EC LDR W8, [X31 + 0xC]
	0x03E1C0F0 ANDS W31, W0, 0x1
	0x03E1C0F4 CSEL W19, W8, W19, NE
	0x03E1C0F8 MOV W0, W19
	0x03E1C0FC LDP X30, X19, [X31 + 0x10]
	0x03E1C100 ADD X31, X31, 0x20
	0x03E1C104 RET
	0x03E1C108 STP X30, X23, [X31 - 0x30]!
	0x03E1C10C STP X22, X21, [X31 + 0x10]
	0x03E1C110 STP X20, X19, [X31 + 0x20]
	0x03E1C114 ADRP X22, 0x5CC000
	0x03E1C118 ADRP X23, 0x34E000
	0x03E1C11C ADRP X21, 0x34E000
	0x03E1C120 ADRP X20, 0x301000
	0x03E1C124 LDRB W8, [X22 + 0x413]
	0x03E1C128 LDR X23, [X23 + 0x978]
	0x03E1C12C LDR X21, [X21 + 0x980]
	0x03E1C130 LDR X20, [X20 + 0xAC0]
	0x03E1C134 MOV X19, X0
	0x03E1C138 TBNZ X8, 0x0, 0x3E1C174
	0x03E1C13C ADRP X0, 0x34E000
	0x03E1C140 LDR X0, [X0 + 0x978]
	0x03E1C144 BL 0x1C16CF4
	0x03E1C148 ADRP X0, 0x34E000
	0x03E1C14C LDR X0, [X0 + 0x988]
	0x03E1C150 BL 0x1C16CF4
	0x03E1C154 ADRP X0, 0x34E000
	0x03E1C158 LDR X0, [X0 + 0x980]
	0x03E1C15C BL 0x1C16CF4
	0x03E1C160 ADRP X0, 0x301000
	0x03E1C164 LDR X0, [X0 + 0xAC0]
	0x03E1C168 BL 0x1C16CF4
	0x03E1C16C MOVZ W8, 0x1
	0x03E1C170 STRB W8, [X22 + 0x413]
	0x03E1C174 LDR X1, [X23]
	0x03E1C178 MOV X0, X19
	0x03E1C17C BL 0x2723ED0
	0x03E1C180 LDR X9, [X21]
	0x03E1C184 LDR X8, [X20]
	0x03E1C188 STR W31, [X19 + 0x40]
	0x03E1C18C LDP X22, X21, [X31 + 0x10]
	0x03E1C190 STP X9, X8, [X19 + 0x20]
	0x03E1C194 LDP X20, X19, [X31 + 0x20]
	0x03E1C198 LDP X30, X23, [X31], #0x30
	0x03E1C19C RET
	0x03E1C1A0 SUB X31, X31, 0x90
	0x03E1C1A4 STP X30, X23, [X31 + 0x60]
	0x03E1C1A8 STP X22, X21, [X31 + 0x70]
	0x03E1C1AC STP X20, X19, [X31 + 0x80]
	0x03E1C1B0 ADRP X22, 0x5CC000
	0x03E1C1B4 ADRP X23, 0x34E000
	0x03E1C1B8 LDRB W8, [X22 + 0x414]
	0x03E1C1BC LDR X23, [X23 + 0x990]
	0x03E1C1C0 MOV X21, X2
	0x03E1C1C4 MOV X19, X1
	0x03E1C1C8 MOV X20, X0
	0x03E1C1CC TBNZ X8, 0x0, 0x3E1C214
	0x03E1C1D0 ADRP X0, 0x34E000
	0x03E1C1D4 LDR X0, [X0 + 0x998]
	0x03E1C1D8 BL 0x1C16CF4
	0x03E1C1DC ADRP X0, 0x34E000
	0x03E1C1E0 LDR X0, [X0 + 0x9A0]
	0x03E1C1E4 BL 0x1C16CF4
	0x03E1C1E8 ADRP X0, 0x34E000
	0x03E1C1EC LDR X0, [X0 + 0x9A8]
	0x03E1C1F0 BL 0x1C16CF4
	0x03E1C1F4 ADRP X0, 0x34E000
	0x03E1C1F8 LDR X0, [X0 + 0x990]
	0x03E1C1FC BL 0x1C16CF4
	0x03E1C200 ADRP X0, 0x34E000
	0x03E1C204 LDR X0, [X0 + 0x9B0]
	0x03E1C208 BL 0x1C16CF4
	0x03E1C20C MOVZ W8, 0x1
	0x03E1C210 STRB W8, [X22 + 0x414]
	0x03E1C214 LDP V1, V0, [X21]
	0x03E1C218 LDR X0, [X23]
	0x03E1C21C STP V1, V0, [X31 + 0x40]
	0x03E1C220 LDR W8, [X0 + 0xE0]
	0x03E1C224 CBNZ W8, 0x3E1C230
	0x03E1C228 BL 0x1C16DFC
	0x03E1C22C LDR X0, [X23]
	0x03E1C230 LDR X8, [X0 + 0xB8]
	0x03E1C234 LDR X21, [X8 + 0x8]
	0x03E1C238 CBZ X21, 0x3E1C244
	0x03E1C23C LDP V0, V1, [X31 + 0x40]
	0x03E1C240 B 0x3E1C2A0
	0x03E1C244 LDP V0, V1, [X31 + 0x40]
	0x03E1C248 STP V0, V1, [X31]
	0x03E1C24C LDR W8, [X0 + 0xE0]
	0x03E1C250 CBNZ W8, 0x3E1C25C
	0x03E1C254 BL 0x1C16DFC
	0x03E1C258 LDR X0, [X23]
	0x03E1C25C ADRP X9, 0x34E000
	0x03E1C260 LDR X8, [X0 + 0xB8]
	0x03E1C264 LDR X9, [X9 + 0x998]
	0x03E1C268 LDR X22, [X8]
	0x03E1C26C LDR X0, [X9]
	0x03E1C270 BL 0x1C16F10
	0x03E1C274 ADRP X8, 0x34E000
	0x03E1C278 LDR X8, [X8 + 0x9A8]
	0x03E1C27C MOV X1, X22
	0x03E1C280 MOV X3, X31
	0x03E1C284 MOV X21, X0
	0x03E1C288 LDR X2, [X8]
	0x03E1C28C BL 0x2D3D0E8
	0x03E1C290 LDR X8, [X23]
	0x03E1C294 LDR X8, [X8 + 0xB8]
	0x03E1C298 STR X21, [X8 + 0x8]
	0x03E1C29C LDP V0, V1, [X31]
	0x03E1C2A0 STP V0, V1, [X31 + 0x20]
	0x03E1C2A4 CBZ X20, 0x3E1C2E8
	0x03E1C2A8 ADRP X8, 0x34E000
	0x03E1C2AC LDR X8, [X8 + 0x9B0]
	0x03E1C2B0 LDR W4, [X20 + 0x40]
	0x03E1C2B4 LDP V0, V1, [X31 + 0x20]
	0x03E1C2B8 ADD X2, X31, 0x40
	0x03E1C2BC LDR X5, [X8]
	0x03E1C2C0 MOV X0, X20
	0x03E1C2C4 MOV X1, X19
	0x03E1C2C8 MOV X3, X21
	0x03E1C2CC STP V0, V1, [X31 + 0x40]
	0x03E1C2D0 BL 0x22A93F0
	0x03E1C2D4 LDP X20, X19, [X31 + 0x80]
	0x03E1C2D8 LDP X22, X21, [X31 + 0x70]
	0x03E1C2DC LDP X30, X23, [X31 + 0x60]
	0x03E1C2E0 ADD X31, X31, 0x90
	0x03E1C2E4 RET
	0x03E1C2E8 BL 0x1C16F20
	0x03E1C2EC SUB X31, X31, 0x20
	0x03E1C2F0 STP X30, X19, [X31 + 0x10]
	0x03E1C2F4 MOV W19, W1
	0x03E1C2F8 STR W31, [X31 + 0xC]
	0x03E1C2FC CBZ X0, 0x3E1C318
	0x03E1C300 ADD X1, X31, 0xC
	0x03E1C304 MOV X2, X31
	0x03E1C308 BL 0x339A090
	0x03E1C30C LDR W8, [X31 + 0xC]
	0x03E1C310 ANDS W31, W0, 0x1
	0x03E1C314 CSEL W19, W8, W19, NE
	0x03E1C318 MOV W0, W19
	0x03E1C31C LDP X30, X19, [X31 + 0x10]
	0x03E1C320 ADD X31, X31, 0x20
	0x03E1C324 RET
	0x03E1C328 STR X30, [X31 - 0x20]!
	0x03E1C32C STP X20, X19, [X31 + 0x10]
	0x03E1C330 ADRP X19, 0x5CC000
	0x03E1C334 ADRP X20, 0x34E000
	0x03E1C338 LDRB W8, [X19 + 0x415]
	0x03E1C33C LDR X20, [X20 + 0x990]
	0x03E1C340 TBNZ X8, 0x0, 0x3E1C358
	0x03E1C344 ADRP X0, 0x34E000
	0x03E1C348 LDR X0, [X0 + 0x990]
	0x03E1C34C BL 0x1C16CF4
	0x03E1C350 MOVZ W8, 0x1
	0x03E1C354 STRB W8, [X19 + 0x415]
	0x03E1C358 LDR X0, [X20]
	0x03E1C35C BL 0x1C16F10
	0x03E1C360 MOV X1, X31
	0x03E1C364 MOV X19, X0
	0x03E1C368 BL 0x33BDD8C
	0x03E1C36C LDR X8, [X20]
	0x03E1C370 LDR X8, [X8 + 0xB8]
	0x03E1C374 STR X19, [X8]
	0x03E1C378 LDP X20, X19, [X31 + 0x10]
	0x03E1C37C LDR X30, [X31], #0x20
	0x03E1C380 RET
	0x03E1C384 MOV X1, X31
	0x03E1C388 B 0x33BDD8C
	0x03E1C38C SUB X31, X31, 0x20
	0x03E1C390 STP X30, X19, [X31 + 0x10]
	0x03E1C394 MOV W19, W2
	0x03E1C398 STR W31, [X31 + 0xC]
	0x03E1C39C CBZ X1, 0x3E1C3BC
	0x03E1C3A0 MOV X0, X1
	0x03E1C3A4 ADD X1, X31, 0xC
	0x03E1C3A8 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X23, 0x5CE000
	013 Move W8, [X23+1026]
	014 Move X19, X3
	015 Move X20, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0x303000
	023 Move X0, [X0+2816]
	024 Call 0x1C17CF4
	025 Move X0, 0x2D9000
	026 Move X0, [X0+2600]
	027 Call 0x1C17CF4
	028 Move X0, 0x350000
	029 Move X0, [X0+2168]
	030 Call 0x1C17CF4
	031 Move X0, 0x350000
	032 Move X0, [X0+2176]
	033 Call 0x1C17CF4
	034 Move X0, 0x350000
	035 Move X0, [X0+2184]
	036 Call 0x1C17CF4
	037 Move X0, 0x2D9000
	038 Move X0, [X0+1432]
	039 Call 0x1C17CF4
	040 Move X0, 0x350000
	041 Move X0, [X0+2192]
	042 Call 0x1C17CF4
	043 Move X0, 0x2E1000
	044 Move X0, [X0+1416]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X23+1026], W8
	048 Move [X31+24], X31
	049 Move X8, [X22+16]
	050 Compare X8, 0
	051 JumpIfEqual {73}
	052 Compare X21, 0
	053 JumpIfEqual {332}
	054 Move X24, 0x350000
	055 Move X10, 0x2E1000
	056 Move X8, [X21]
	057 Move X24, [X24+2168]
	058 Move X10, [X10+1416]
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X24]
	061 Move X23, [X10]
	062 Compare X9, 0
	063 JumpIfEqual {70}
	064 Move X10, [X8+176]
	065 Add X10, X10, 8
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Subtract X9, X9, 1
	069 Add X10, X10, 16
	070 Move X0, X21
	071 Move W2, W31
	072 Call 0x1C5D788
	073 Move X8, [X22+24]
	074 Compare X8, 0
	075 JumpIfEqual {79}
	076 Move W8, [X8+24]
	077 Compare W8, 0
	078 JumpIfNotEqual {52}
	079 Move X8, 0x2D9000
	080 Move X8, [X8+2600]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X8, 0x350000
	087 Move X8, [X8+2192]
	088 Move X1, X31
	089 Move X0, [X8]
	090 Call Debug.LogError, X0
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X3, [X0+8]
	096 Add X2, X31, 24
	097 Move X0, X21
	098 Move X1, X23
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X0, [X31+24]
	101 Move X1, X31
	102 Call String.IsNullOrEmpty, X0
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {208}
	107 Move X25, 0x302000
	108 Move X25, [X25+2816]
	109 Move X0, [X25]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X8, [X20+24]
	115 Compare X8, 0
	116 JumpIfEqual {208}
	117 Move X26, 0x34F000
	118 Move X26, [X26+2184]
	119 Move W23, W31
	120 Move X0, [X25]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, [X20+24]
	126 Compare X0, 0
	127 JumpIfEqual {332}
	128 Move W8, [X0+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X8, [X25]
	131 Move W9, [X8+224]
	132 Compare W9, 0
	133 JumpIfNotEqual {139}
	134 Move X0, X8
	135 Call 0x1C17DFC
	136 Move X0, [X20+24]
	137 Compare X0, 0
	138 JumpIfEqual {332}
	139 Move X2, [X26]
	140 Add X8, X31, 0
	141 Move W1, W23
	142 Call List`1<AttributeOverride>.get_Item, X0, X1
	143 Move X0, [X31]
	144 Move X1, [X31+24]
	145 Move X2, X31
	146 Call String.op_Inequality, X0, X1
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {207}
	151 Move X0, [X25]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, [X20+24]
	157 Compare X0, 0
	158 JumpIfEqual {332}
	159 Move X2, [X26]
	160 Add X8, X31, 0
	161 Move W1, W23
	162 Call List`1<AttributeOverride>.get_Item, X0, X1
	163 Move X0, [X31+8]
	164 Move X1, [X22+16]
	165 Move X2, X31
	166 Call String.op_Inequality, X0, X1
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {265}
	171 Move X8, [X22+24]
	172 Compare X8, 0
	173 JumpIfEqual {207}
	174 Move X27, X31
	175 NotImplemented "Instruction LDRSW not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, [X25]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X0, [X20+24]
	183 Compare X0, 0
	184 JumpIfEqual {332}
	185 Move X2, [X26]
	186 Add X8, X31, 0
	187 Move W1, W23
	188 Call List`1<AttributeOverride>.get_Item, X0, X1
	189 Move X8, [X22+24]
	190 Compare X8, 0
	191 JumpIfEqual {332}
	192 Move W9, [X8+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add X8, X8, X27
	195 Move X0, [X31+8]
	196 Move X1, [X8+32]
	197 Move X2, X31
	198 Call String.op_Equality, X0, X1
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfEqual {265}
	203 Move X8, [X22+24]
	204 Add X27, X27, 1
	205 Compare X8, 0
	206 JumpIfNotEqual {175}
	207 Add W23, W23, 1
	208 Move X23, [X22+16]
	209 Compare X23, 0
	210 JumpIfEqual {225}
	211 Move X8, [X21]
	212 Move X1, [X24]
	213 NotImplemented "Instruction LDRH not yet implemented."
	214 Compare X9, 0
	215 JumpIfEqual {222}
	216 Move X10, [X8+176]
	217 Add X10, X10, 8
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Subtract X9, X9, 1
	221 Add X10, X10, 16
	222 Move X0, X21
	223 Move W2, W31
	224 Call 0x1C5D788
	225 Move X8, [X22+24]
	226 Compare X8, 0
	227 JumpIfEqual {332}
	228 Move X25, X31
	229 Move W9, [X8+24]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X9, [X21]
	233 Add X8, X8, X25
	234 Move X23, [X8+32]
	235 Move X1, [X24]
	236 NotImplemented "Instruction LDRH not yet implemented."
	237 Compare X8, 0
	238 JumpIfEqual {245}
	239 Move X10, [X9+176]
	240 Add X10, X10, 8
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Subtract X8, X8, 1
	244 Add X10, X10, 16
	245 Move X0, X21
	246 Move W2, W31
	247 Call 0x1C5D788
	248 NotImplemented "Instruction LDRSW not yet implemented."
	249 Add X8, X9, X8
	250 Add X0, X8, 312
	251 Move X8, [X0]
	252 Move X3, [X0+8]
	253 Move X0, X21
	254 Move X1, X23
	255 Move X2, X19
	256 NotImplemented "Instruction BLR not yet implemented."
	257 Move TEMP, X0
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfEqual {335}
	261 Move X8, [X22+24]
	262 Add X25, X25, 1
	263 Compare X8, 0
	264 JumpIfNotEqual {229}
	265 Move X0, [X25]
	266 Move W8, [X0+224]
	267 Compare W8, 0
	268 JumpIfNotEqual {270}
	269 Call 0x1C17DFC
	270 Move X0, [X20+24]
	271 Compare X0, 0
	272 JumpIfEqual {332}
	273 Move X2, [X26]
	274 Add X8, X31, 0
	275 Move W1, W23
	276 Call List`1<AttributeOverride>.get_Item, X0, X1
	277 Move X8, [X31+16]
	278 Move [X19], X8
	279 NotImplemented "Instruction LDRSW not yet implemented."
	280 Add X8, X8, X9
	281 Add X0, X8, 312
	282 Move X8, [X0]
	283 Move X3, [X0+8]
	284 Move X0, X21
	285 Move X1, X23
	286 Move X2, X19
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Move TEMP, X0
	289 And TEMP, TEMP, 1
	290 Compare TEMP, 1
	291 JumpIfEqual {354}
	292 Move X8, [X22+24]
	293 Compare X8, 0
	294 JumpIfEqual {333}
	295 Move X25, X31
	296 Move W9, [X8+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move X9, [X21]
	300 Add X8, X8, X25
	301 Move X23, [X8+32]
	302 Move X1, [X24]
	303 NotImplemented "Instruction LDRH not yet implemented."
	304 Compare X8, 0
	305 JumpIfEqual {312}
	306 Move X10, [X9+176]
	307 Add X10, X10, 8
	308 NotImplemented "Instruction LDUR not yet implemented."
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Subtract X8, X8, 1
	311 Add X10, X10, 16
	312 Move X0, X21
	313 Move W2, W31
	314 Call 0x1C5D788
	315 NotImplemented "Instruction LDRSW not yet implemented."
	316 Add X8, X9, X8
	317 Add X0, X8, 312
	318 Move X8, [X0]
	319 Move X3, [X0+8]
	320 Move X0, X21
	321 Move X1, X23
	322 Move X2, X19
	323 NotImplemented "Instruction BLR not yet implemented."
	324 Move TEMP, X0
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfEqual {335}
	328 Move X8, [X22+24]
	329 Add X25, X25, 1
	330 Compare X8, 0
	331 JumpIfNotEqual {296}
	332 Call 0x1C17F20
	333 Move W0, W31
	334 Move [X19], X31
	335 Move X8, 0x302000
	336 Move X8, [X8+2816]
	337 Move X0, [X8]
	338 Move W8, [X0+224]
	339 Compare W8, 0
	340 JumpIfNotEqual {342}
	341 Call 0x1C17DFC
	342 Move X8, 0x2D8000
	343 Move X8, [X8+1432]
	344 Move X19, [X20+8]
	345 Move X0, [X8]
	346 Move W8, [X0+224]
	347 Compare W8, 0
	348 JumpIfNotEqual {350}
	349 Call 0x1C17DFC
	350 Move X0, X19
	351 Move X1, X31
	352 Move X2, X31
	353 Call Object.op_Inequality, X0, X1
	354 Move W0, 1
	355 Move X20, [X31+96]
	356 Move X19, [X31+104]
	357 Move X22, [X31+80]
	358 Move X21, [X31+88]
	359 Move X24, [X31+64]
	360 Move X23, [X31+72]
	361 Move X26, [X31+48]
	362 Move X25, [X31+56]
	363 Move X30, [X31+32]
	364 Move X27, [X31+40]
	365 Add X31, X31, 112
	366 Return X0
	367 Call 0x1C17F28

Method: System.Boolean TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, System.Func`3<System.String, T, T> converterFunc, T defaultValue, ref T value)

Disassembly:
	0x022AA7A4 LDR V0, [X31 + 0x6]
	0x022AA7A8 LDR X8, [X31 + 0x70]
	0x022AA7AC ADRP X25, 0x1E72000
	0x022AA7B0 MOV X24, X31
	0x022AA7B4 STR V0, [X31 + 0x4]
	0x022AA7B8 STR X8, [X31 + 0x50]
	0x022AA7BC LDR X25, [X25 + 0x908]
	0x022AA7C0 MOV X19, X24
	0x022AA7C4 LDR X1, [X25]
	0x022AA7C8 ADD X0, X31, 0x40
	0x022AA7CC BL 0x2BC4350
	0x022AA7D0 TBZ X0, 0x0, 0x22AA994
	0x022AA7D4 LDR X23, [X31 + 0x50]
	0x022AA7D8 MOV X0, X22
	0x022AA7DC MOV X1, X23
	0x022AA7E0 MOV X2, X31
	0x022AA7E4 BL 0x3E2061C
	0x022AA7E8 LDR X8, [X20 + 0x38]
	0x022AA7EC MOV X24, X0
	0x022AA7F0 LDR X1, [X8]
	0x022AA7F4 LDRB W8, [X1 + 0x135]
	0x022AA7F8 TBNZ X8, 0x0, 0x22AA808
	0x022AA7FC MOV X0, X1
	0x022AA800 BL 0x1C5C684
	0x022AA804 MOV X1, X0
	0x022AA808 MOV X0, X24
	0x022AA80C BL 0x1C16E00
	0x022AA810 MOV X24, X0
	0x022AA814 CBZ X0, 0x22AA7C4
	0x022AA818 LDP V1, V0, [X21]
	0x022AA81C STP V1, V0, [X31 + 0x20]
	0x022AA820 LDR X8, [X20 + 0x38]
	0x022AA824 LDR X1, [X8]
	0x022AA828 LDRB W8, [X1 + 0x135]
	0x022AA82C TBNZ X8, 0x0, 0x22AA83C
	0x022AA830 MOV X0, X1
	0x022AA834 BL 0x1C5C684
	0x022AA838 MOV X1, X0
	0x022AA83C LDP V0, V1, [X31 + 0x20]
	0x022AA840 STP V0, V1, [X31]
	0x022AA844 LDR X8, [X24]
	0x022AA848 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X8, [X6+56]
	010 Move X19, X5
	011 Move W20, W4
	012 Move X21, X3
	013 Move X24, X2
	014 Move X22, X1
	015 Move X23, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {20}
	018 Move X0, X6
	019 Call 0x1C5D6E0
	020 Move [X31+40], X31
	021 Move V1, [X24]
	022 Move V0, [X24+16]
	023 Add X2, X31, 0
	024 Add X3, X31, 40
	025 Move X0, X23
	026 Move X1, X22
	027 Move X4, X31
	028 Move [X31], V1
	029 Move [X31+8], V0
	030 Call UxmlAttributeDescription.TryGetValueFromBagAsString, X0, X1, X2, X3
	031 Move W22, W0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {46}
	036 Compare X21, 0
	037 JumpIfEqual {45}
	038 Move X1, [X31+40]
	039 Move X8, [X21+24]
	040 Move X0, [X21+64]
	041 Move X3, [X21+40]
	042 Move W2, W20
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move W20, W0
	045 Move [X19], W20
	046 And W0, W22, 1
	047 Move X20, [X31+80]
	048 Move X19, [X31+88]
	049 Move X22, [X31+64]
	050 Move X21, [X31+72]
	051 Move X24, [X31+48]
	052 Move X23, [X31+56]
	053 Move X30, [X31+32]
	054 Add X31, X31, 96
	055 Return X0

Method: T GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, System.Func`3<System.String, T, T> converterFunc, T defaultValue)

Disassembly:
	0x022A9D00 LDR X8, [X1 + 0x38]
	0x022A9D04 MOV X19, X1
	0x022A9D08 MOV X20, X0
	0x022A9D0C CBNZ X8, 0x22A9D18
	0x022A9D10 MOV X0, X19
	0x022A9D14 BL 0x1C5C6E0
	0x022A9D18 LDR X8, [X20 + 0x378]
	0x022A9D1C ADD X0, X31, 0x8
	0x022A9D20 MOV X1, X31
	0x022A9D24 STR X8, [X31 + 0x8]
	0x022A9D28 BL 0x3DF88DC
	0x022A9D2C CBZ X0, 0x22A9DAC
	0x022A9D30 MOV X20, X0
	0x022A9D34 LDR X8, [X19 + 0x38]
	0x022A9D38 LDR X1, [X8]
	0x022A9D3C LDRB W8, [X1 + 0x135]
	0x022A9D40 TBNZ X8, 0x0, 0x22A9D50
	0x022A9D44 MOV X0, X1
	0x022A9D48 BL 0x1C5C684
	0x022A9D4C MOV X1, X0
	0x022A9D50 MOV X0, X20
	0x022A9D54 BL 0x1C16E00
	0x022A9D58 LDR X8, [X19 + 0x38]
	0x022A9D5C MOV X22, X0
	0x022A9D60 LDR X21, [X8]
	0x022A9D64 LDRB W8, [X21 + 0x135]
	0x022A9D68 TBNZ X8, 0x0, 0x22A9D78
	0x022A9D6C MOV X0, X21
	0x022A9D70 BL 0x1C5C684
	0x022A9D74 MOV X21, X0
	0x022A9D78 CBNZ X22, 0x22A9D9C
	0x022A9D7C LDR X8, [X20 + 0x378]
	0x022A9D80 ADD X0, X31, 0x8
	0x022A9D84 MOV X1, X31
	0x022A9D88 STR X8, [X31 + 0x8]
	0x022A9D8C BL 0x3DF88DC
	0x022A9D90 MOV X20, X0
	0x022A9D94 CBNZ X0, 0x22A9D34
	0x022A9D98 B 0x22A9DAC
	0x022A9D9C MOV X0, X22
	0x022A9DA0 MOV X1, X21
	0x022A9DA4 BL 0x1C16E00
	0x022A9DA8 CBZ X0, 0x22A9DBC
	0x022A9DAC LDP X20, X19, [X31 + 0x20]
	0x022A9DB0 LDP X22, X21, [X31 + 0x10]
	0x022A9DB4 LDR X30, [X31], #0x30
	0x022A9DB8 RET
	0x022A9DBC MOV X0, X22
	0x022A9DC0 MOV X1, X21
	0x022A9DC4 BL 0x1C171E0
	0x022A9DC8 STR X30, [X31 - 0x30]!
	0x022A9DCC STP X22, X21, [X31 + 0x10]
	0x022A9DD0 STP X20, X19, [X31 + 0x20]
	0x022A9DD4 LDR X8, [X1 + 0x38]
	0x022A9DD8 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X8, [X5+56]
	010 Move X20, X5
	011 Move W19, W4
	012 Move X21, X3
	013 Move X24, X2
	014 Move X22, X1
	015 Move X23, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {20}
	018 Move X0, X20
	019 Call 0x1C5D6E0
	020 Move [X31+40], X31
	021 Compare X21, 0
	022 JumpIfEqual {54}
	023 Move V1, [X24]
	024 Move V0, [X24+16]
	025 Add X2, X31, 0
	026 Add X3, X31, 40
	027 Move X0, X23
	028 Move X1, X22
	029 Move X4, X31
	030 Move [X31], V1
	031 Move [X31+8], V0
	032 Call UxmlAttributeDescription.TryGetValueFromBagAsString, X0, X1, X2, X3
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {44}
	037 Move X1, [X31+40]
	038 Move X8, [X21+24]
	039 Move X0, [X21+64]
	040 Move X3, [X21+40]
	041 And W2, W19, 1
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move W19, W0
	044 And W0, W19, 1
	045 Move X20, [X31+80]
	046 Move X19, [X31+88]
	047 Move X22, [X31+64]
	048 Move X21, [X31+72]
	049 Move X24, [X31+48]
	050 Move X23, [X31+56]
	051 Move X30, [X31+32]
	052 Add X31, X31, 96
	053 Return X0
	054 Move X0, 0x1E50000
	055 Move X0, [X0+1320]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X19, X0
	059 Move X0, 0x1E74000
	060 Move X0, [X0+2240]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Move X2, X31
	065 Call ArgumentNullException..ctor, X0, X1
	066 Move X0, X19
	067 Move X1, X20
	068 Call 0x1C17DEC

