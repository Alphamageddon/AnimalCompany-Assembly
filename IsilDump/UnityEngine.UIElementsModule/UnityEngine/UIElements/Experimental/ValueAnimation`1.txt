Type: UnityEngine.UIElements.Experimental.ValueAnimation`1

Method: System.Int32 get_durationMs()

Disassembly:
	0x0273F0EC MOV X0, X22
	0x0273F0F0 MOV X2, X23

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_durationMs(System.Int32 value)

Disassembly:
	0x0273F0F4 MOV W3, W21
	0x0273F0F8 LDR X8, [X8]
	0x0273F0FC LDR X8, [X8 + 0x80]
	0x0273F100 ADD X1, X8, 0x180

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSINC not yet implemented."
	003 Move [X0+24], W8
	004 Return 

Method: System.Func`2<System.Single, System.Single> get_easingCurve()

Disassembly:
	0x0273F104 BL 0x1C16D1C
	0x0273F108 LDR X8, [X25 + 0x28]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_easingCurve(System.Func`2<System.Single, System.Single> value)

Disassembly:
	0x0273F10C LDUR X9, [X29 - 0x8]
	0x0273F110 CMP X8, X9

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.Boolean get_isRunning()

Disassembly:
	0x0273F114 B.NE 0x273F134
	0x0273F118 ADD X31, X29, 0x0

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_isRunning(System.Boolean value)

Disassembly:
	0x0273F11C LDP X20, X19, [X31 + 0x40]
	0x0273F120 LDP X22, X21, [X31 + 0x30]
	0x0273F124 LDP X24, X23, [X31 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+40], W8
	003 Return 

Method: System.Action get_onAnimationCompleted()

Disassembly:
	0x0273F128 LDP X26, X25, [X31 + 0x10]
	0x0273F12C LDP X29, X30, [X31], #0x50

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_onAnimationCompleted(System.Action value)

Disassembly:
	0x0273F130 RET
	0x0273F134 BL 0x3EB1B20

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Boolean get_autoRecycle()

Disassembly:
	0x0273F138 STP X29, X30, [X31 - 0x30]!
	0x0273F13C STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_autoRecycle(System.Boolean value)

Disassembly:
	0x0273F140 STP X20, X19, [X31 + 0x20]
	0x0273F144 ADD X29, X31, 0x0
	0x0273F148 SUB X31, X31, 0x10

ISIL:
	001 And W8, W1, 1
	002 Move [X0+56], W8
	003 Return 

Method: System.Boolean get_recycled()

Disassembly:
	0x0273F14C MRS X22, 0xC000
	0x0273F150 LDR X8, [X22 + 0x28]

ISIL:
	001 Move W0, [X0+57]
	002 Return X0

Method: System.Void set_recycled(System.Boolean value)

Disassembly:
	0x0273F154 MOV X19, X1
	0x0273F158 STUR X8, [X29 - 0x8]
	0x0273F15C LDR X8, [X2 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+57], W8
	003 Return 

Method: UnityEngine.UIElements.VisualElement get_owner()

Disassembly:
	0x0273F160 LDR X8, [X8 + 0xC0]
	0x0273F164 LDR X9, [X8 + 0x38]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_owner(UnityEngine.UIElements.VisualElement value)

Disassembly:
	0x0273F168 LDR W20, [X9 + 0xFC]
	0x0273F16C ADD X9, X31, 0x0

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: System.Action`2<UnityEngine.UIElements.VisualElement, T> get_valueUpdated()

Disassembly:
	0x0273F170 ADD X10, X20, 0xF
	0x0273F174 AND X10, X10, 0x1FFFFFFFF

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_valueUpdated(System.Action`2<UnityEngine.UIElements.VisualElement, T> value)

Disassembly:
	0x0273F178 SUB X21, X9, X10
	0x0273F17C ADD X31, X21, 0x0

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.Func`2<UnityEngine.UIElements.VisualElement, T> get_initialValue()

Disassembly:
	0x0273F180 LDR X8, [X8]
	0x0273F184 LDR X8, [X8 + 0x80]

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_initialValue(System.Func`2<UnityEngine.UIElements.VisualElement, T> value)

Disassembly:
	0x0273F188 ADD X1, X8, 0x1C0
	0x0273F18C BL 0x1C16D18

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.Func`4<T, T, System.Single, T> get_interpolator()

Disassembly:
	0x0273F190 MOV X1, X0
	0x0273F194 MOV X0, X21

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_interpolator(System.Func`4<T, T, System.Single, T> value)

Disassembly:
	0x0273F198 MOV X2, X20
	0x0273F19C BL 0x3EB1AC0

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: T get_from()

Disassembly:
	0x0273F1A0 MOV X0, X19
	0x0273F1A4 MOV X1, X21
	0x0273F1A8 MOV X2, X20
	0x0273F1AC BL 0x3EB1AC0
	0x0273F1B0 LDR X8, [X22 + 0x28]
	0x0273F1B4 LDUR X9, [X29 - 0x8]
	0x0273F1B8 CMP X8, X9
	0x0273F1BC B.NE 0x273F1D4
	0x0273F1C0 ADD X31, X29, 0x0
	0x0273F1C4 LDP X20, X19, [X31 + 0x20]
	0x0273F1C8 LDP X22, X21, [X31 + 0x10]
	0x0273F1CC LDP X29, X30, [X31], #0x30
	0x0273F1D0 RET
	0x0273F1D4 BL 0x3EB1B20
	0x0273F1D8 STP X29, X30, [X31 - 0x40]!
	0x0273F1DC STR X23, [X31 + 0x10]
	0x0273F1E0 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+104]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfNotEqual {18}
	007 Move X8, [X19+80]
	008 Compare X8, 0
	009 JumpIfEqual {18}
	010 Move X1, [X19+64]
	011 Move X9, [X8+24]
	012 Move X0, [X8+64]
	013 Move X2, [X8+40]
	014 NotImplemented "Instruction BLR not yet implemented."
	015 Move W8, 1
	016 Move [X19+104], W8
	017 Move [X19+96], X0
	018 Move X0, [X19+96]
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return X0

Method: System.Void set_from(T value)

Disassembly:
	0x0273F1E4 STP X20, X19, [X31 + 0x30]
	0x0273F1E8 ADD X29, X31, 0x0
	0x0273F1EC SUB X31, X31, 0x10
	0x0273F1F0 MRS X22, 0xC000

ISIL:
	001 Move W8, 1
	002 Move [X0+104], W8
	003 Move [X0+96], X1
	004 Return 

Method: T get_to()

Disassembly:
	0x0273F1F4 LDR X8, [X22 + 0x28]
	0x0273F1F8 ADD X9, X31, 0x0

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_to(T value)

Disassembly:
	0x0273F1FC MOV X20, X0
	0x0273F200 STUR X8, [X29 - 0x8]

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.Void .ctor()

Disassembly:
	0x0273F204 STUR X1, [X29 - 0x10]
	0x0273F208 LDR X23, [X2 + 0x20]
	0x0273F20C LDR X8, [X23 + 0xC0]
	0x0273F210 LDR X8, [X8 + 0x38]
	0x0273F214 LDR W19, [X8 + 0xFC]
	0x0273F218 ADD X10, X19, 0xF
	0x0273F21C AND X10, X10, 0x1FFFFFFFF
	0x0273F220 SUB X21, X9, X10
	0x0273F224 ADD X31, X21, 0x0
	0x0273F228 LDR W8, [X8 + 0x28]
	0x0273F22C MOV X0, X21
	0x0273F230 MOV X2, X19
	0x0273F234 CMP W8, 0x0
	0x0273F238 SUB X8, X29, 0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Move [X0+104], W31
	008 Call Object..ctor, X0
	009 Move X8, [X19+32]
	010 Move X0, X20
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X8, [X8+192]
	014 Move X1, [X8+72]
	015 Move X30, [X31+32]
	016 Call 0x273F554, X0
	017 Return 

Method: System.Void Start()

Disassembly:
	0x0273F23C CSEL X1, X1, X8, LT
	0x0273F240 BL 0x3EB1AC0
	0x0273F244 LDR X8, [X23 + 0xC0]
	0x0273F248 MOV X0, X20
	0x0273F24C MOV X2, X21
	0x0273F250 MOV W3, W19
	0x0273F254 LDR X8, [X8]
	0x0273F258 LDR X8, [X8 + 0x80]
	0x0273F25C ADD X1, X8, 0x1C0
	0x0273F260 BL 0x1C16D1C
	0x0273F264 LDR X8, [X22 + 0x28]
	0x0273F268 LDUR X9, [X29 - 0x8]
	0x0273F26C CMP X8, X9
	0x0273F270 B.NE 0x273F28C
	0x0273F274 ADD X31, X29, 0x0
	0x0273F278 LDP X20, X19, [X31 + 0x30]
	0x0273F27C LDP X22, X21, [X31 + 0x20]
	0x0273F280 LDR X23, [X31 + 0x10]
	0x0273F284 LDP X29, X30, [X31], #0x40
	0x0273F288 RET
	0x0273F28C BL 0x3EB1B20
	0x0273F290 STP X30, X21, [X31 - 0x20]!
	0x0273F294 STP X20, X19, [X31 + 0x10]
	0x0273F298 LDR X8, [X1 + 0x20]
	0x0273F29C MOV X19, X1
	0x0273F2A0 MOV X20, X0
	0x0273F2A4 MOVZ W1, 0x1
	0x0273F2A8 LDR X8, [X8 + 0xC0]
	0x0273F2AC LDR X8, [X8]
	0x0273F2B0 LDR X8, [X8 + 0x80]
	0x0273F2B4 ADD X21, X8, 0x1A0
	0x0273F2B8 MOV X0, X21
	0x0273F2BC BL 0x1C16D14
	0x0273F2C0 MOV X0, X20
	0x0273F2C4 MOV X1, X21
	0x0273F2C8 BL 0x1C16D18
	0x0273F2CC STRB W31, [X0]
	0x0273F2D0 MOV X0, X20
	0x0273F2D4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1C9C000
	006 Move W8, [X21+1756]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x19DF000
	014 Move X0, [X0+3336]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1756], W8
	018 Move X8, [X20+32]
	019 Move X0, X19
	020 Move X8, [X8+192]
	021 Move X1, [X8+80]
	022 Call 0x273F6A4, X0
	023 Move X8, [X19+64]
	024 Compare X8, 0
	025 JumpIfEqual {45}
	026 Move X8, 0x19DF000
	027 Move X8, [X8+3336]
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X31
	034 Call Panel.TimeSinceStartupMs
	035 Move X8, [X19+64]
	036 Move [X19+16], X0
	037 Compare X8, 0
	038 JumpIfEqual {43}
	039 Move X0, X8
	040 Move X1, X19
	041 Move X2, X31
	042 Call VisualElement.RegisterAnimation, X0, X1
	043 Move W8, 1
	044 Move [X19+40], W8
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return 

Method: System.Void Stop()

Disassembly:
	0x0273F2D8 BL 0x33BDD8C
	0x0273F2DC LDR X8, [X19 + 0x20]
	0x0273F2E0 MOV X0, X20
	0x0273F2E4 LDP X20, X19, [X31 + 0x10]
	0x0273F2E8 LDR X8, [X8 + 0xC0]
	0x0273F2EC LDR X1, [X8 + 0x48]
	0x0273F2F0 LDR X2, [X1]
	0x0273F2F4 LDP X30, X21, [X31], #0x20
	0x0273F2F8 BR X2
	0x0273F2FC STR X30, [X31 - 0x30]!
	0x0273F300 STP X22, X21, [X31 + 0x10]
	0x0273F304 STP X20, X19, [X31 + 0x20]
	0x0273F308 ADRP X21, 0x1C9B000
	0x0273F30C LDRB W8, [X21 + 0x6DE]
	0x0273F310 MOV X20, X1
	0x0273F314 MOV X19, X0
	0x0273F318 TBNZ X8, 0x0, 0x273F330
	0x0273F31C ADRP X0, 0x19DE000
	0x0273F320 LDR X0, [X0 + 0xD08]
	0x0273F324 BL 0x1C16CF4
	0x0273F328 MOVZ W8, 0x1
	0x0273F32C STRB W8, [X21 + 0x6DE]
	0x0273F330 LDR X8, [X20 + 0x20]
	0x0273F334 MOV X0, X19
	0x0273F338 LDR X8, [X8 + 0xC0]
	0x0273F33C LDR X1, [X8 + 0x50]
	0x0273F340 LDR X8, [X1]
	0x0273F344 BLR X8
	0x0273F348 LDR X8, [X20 + 0x20]
	0x0273F34C MOV X0, X19
	0x0273F350 LDR X8, [X8 + 0xC0]
	0x0273F354 LDR X1, [X8 + 0x28]
	0x0273F358 LDR X8, [X1]
	0x0273F35C BLR X8
	0x0273F360 CBZ X0, 0x273F3F4
	0x0273F364 ADRP X8, 0x19DE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X1, [X8+80]
	009 Call 0x273F6A4, X0
	010 Move W8, [X20+40]
	011 Compare W8, 0
	012 JumpIfEqual {33}
	013 Move X0, [X20+64]
	014 Compare X0, 0
	015 JumpIfEqual {19}
	016 Move X1, X20
	017 Move X2, X31
	018 Call VisualElement.UnregisterAnimation, X0, X1
	019 Move X8, [X20+48]
	020 Move [X20+40], W31
	021 Compare X8, 0
	022 JumpIfEqual {27}
	023 Move X9, [X8+24]
	024 Move X0, [X8+64]
	025 Move X1, [X8+40]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move W8, [X20+56]
	028 Compare W8, 0
	029 JumpIfEqual {33}
	030 Move W8, [X20+57]
	031 Compare W8, 0
	032 JumpIfEqual {37}
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return 
	037 Move X8, [X19+32]
	038 Move X0, X20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X8, [X8+192]
	042 Move X1, [X8+144]
	043 Move X30, [X31+32]

Method: System.Void Recycle()

Disassembly:
	0x0273F368 LDR X8, [X8 + 0xD08]
	0x0273F36C LDR X0, [X8]
	0x0273F370 LDR W8, [X0 + 0xE0]
	0x0273F374 CBNZ W8, 0x273F37C
	0x0273F378 BL 0x1C16DFC
	0x0273F37C MOV X0, X31
	0x0273F380 BL 0x3DBD7F8
	0x0273F384 LDR X8, [X20 + 0x20]
	0x0273F388 MOV X22, X0
	0x0273F38C MOVZ W1, 0x8
	0x0273F390 LDR X8, [X8 + 0xC0]
	0x0273F394 LDR X8, [X8]
	0x0273F398 LDR X21, [X8 + 0x80]
	0x0273F39C MOV X0, X21
	0x0273F3A0 BL 0x1C16D14
	0x0273F3A4 MOV X0, X19
	0x0273F3A8 MOV X1, X21
	0x0273F3AC BL 0x1C16D18
	0x0273F3B0 STR X22, [X0]
	0x0273F3B4 LDR X8, [X20 + 0x20]
	0x0273F3B8 MOV X0, X19
	0x0273F3BC LDR X8, [X8 + 0xC0]
	0x0273F3C0 LDR X1, [X8 + 0x58]
	0x0273F3C4 LDR X8, [X1]
	0x0273F3C8 BLR X8
	0x0273F3CC LDR X8, [X20 + 0x20]
	0x0273F3D0 MOV X0, X19
	0x0273F3D4 LDP X20, X19, [X31 + 0x20]
	0x0273F3D8 LDP X22, X21, [X31 + 0x10]
	0x0273F3DC LDR X8, [X8 + 0xC0]
	0x0273F3E0 MOVZ W1, 0x1
	0x0273F3E4 LDR X2, [X8 + 0x60]
	0x0273F3E8 LDR X3, [X2]
	0x0273F3EC LDR X30, [X31], #0x30
	0x0273F3F0 BR X3
	0x0273F3F4 LDP X20, X19, [X31 + 0x20]
	0x0273F3F8 LDP X22, X21, [X31 + 0x10]
	0x0273F3FC LDR X30, [X31], #0x30
	0x0273F400 RET
	0x0273F404 STR X30, [X31 - 0x20]!
	0x0273F408 STP X20, X19, [X31 + 0x10]
	0x0273F40C LDR X8, [X1 + 0x20]
	0x0273F410 MOV X19, X1
	0x0273F414 MOV X20, X0
	0x0273F418 LDR X8, [X8 + 0xC0]
	0x0273F41C LDR X1, [X8 + 0x50]
	0x0273F420 LDR X8, [X1]
	0x0273F424 BLR X8
	0x0273F428 LDR X8, [X19 + 0x20]
	0x0273F42C MOV X0, X20
	0x0273F430 LDR X8, [X8 + 0xC0]
	0x0273F434 LDR X1, [X8 + 0x68]
	0x0273F438 LDR X8, [X1]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move X8, [X8+192]
	009 Move X1, [X8+80]
	010 Call 0x273F6A4, X0
	011 Move W8, [X20+40]
	012 Compare W8, 0
	013 JumpIfEqual {27}
	014 Move X8, [X19+32]
	015 Move W21, [X20+56]
	016 Move X0, X20
	017 Move X8, [X8+192]
	018 Move X1, [X8+152]
	019 Call 0x273F2D8, X0
	020 Compare W21, 0
	021 JumpIfEqual {27}
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 
	027 Move X8, [X19+32]
	028 Move X0, X20
	029 Move X8, [X8+192]
	030 Move X1, [X8+72]
	031 Call 0x273F554, X0
	032 Move X8, [X19+32]
	033 Move W9, 1
	034 Move X8, [X8+192]
	035 Move [X20+57], W9
	036 Move X0, [X8+176]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X8, [X19+32]
	048 Move X8, [X8+192]
	049 Move X0, [X8+176]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+184]
	057 Move X0, [X8]
	058 Compare X0, 0
	059 JumpIfEqual {70}
	060 Move X8, [X19+32]
	061 Move X1, X20
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X8, [X8+192]
	065 Move X2, [X8+184]
	066 Move X30, [X31+32]
	067 Move X21, [X31+40]
	068 Call 0x24956D8, X0, X1
	069 Return 
	070 Call 0x1C17F20

Method: System.Void UnityEngine.UIElements.Experimental.IValueAnimationUpdate.Tick(System.Int64 currentTimeMs)

Disassembly:
	0x0273F43C BLR X8
	0x0273F440 TBZ X0, 0x0, 0x273F4E0
	0x0273F444 LDR X8, [X19 + 0x20]
	0x0273F448 MOV X0, X20
	0x0273F44C LDR X8, [X8 + 0xC0]
	0x0273F450 LDR X1, [X8 + 0x70]
	0x0273F454 LDR X8, [X1]
	0x0273F458 BLR X8
	0x0273F45C LDR X8, [X19 + 0x20]
	0x0273F460 MOV X0, X20
	0x0273F464 MOV W1, W31
	0x0273F468 LDR X8, [X8 + 0xC0]
	0x0273F46C LDR X2, [X8 + 0x60]
	0x0273F470 LDR X8, [X2]
	0x0273F474 BLR X8
	0x0273F478 LDR X8, [X19 + 0x20]
	0x0273F47C MOV X0, X20
	0x0273F480 LDR X8, [X8 + 0xC0]
	0x0273F484 LDR X1, [X8 + 0x78]
	0x0273F488 LDR X8, [X1]
	0x0273F48C BLR X8
	0x0273F490 CBZ X0, 0x273F4A8
	0x0273F494 LDR X8, [X0 + 0x40]
	0x0273F498 LDR X9, [X0 + 0x18]
	0x0273F49C LDR X1, [X0 + 0x28]
	0x0273F4A0 MOV X0, X8
	0x0273F4A4 BLR X9
	0x0273F4A8 LDR X8, [X19 + 0x20]
	0x0273F4AC MOV X0, X20
	0x0273F4B0 LDR X8, [X8 + 0xC0]
	0x0273F4B4 LDR X1, [X8 + 0x80]
	0x0273F4B8 LDR X8, [X1]
	0x0273F4BC BLR X8
	0x0273F4C0 TBZ X0, 0x0, 0x273F4E0
	0x0273F4C4 LDR X8, [X19 + 0x20]
	0x0273F4C8 MOV X0, X20
	0x0273F4CC LDR X8, [X8 + 0xC0]
	0x0273F4D0 LDR X1, [X8 + 0x88]
	0x0273F4D4 LDR X8, [X1]
	0x0273F4D8 BLR X8
	0x0273F4DC TBZ X0, 0x0, 0x273F4EC
	0x0273F4E0 LDP X20, X19, [X31 + 0x10]
	0x0273F4E4 LDR X30, [X31], #0x20
	0x0273F4E8 RET
	0x0273F4EC LDR X8, [X19 + 0x20]
	0x0273F4F0 MOV X0, X20
	0x0273F4F4 LDP X20, X19, [X31 + 0x10]
	0x0273F4F8 LDR X8, [X8 + 0xC0]
	0x0273F4FC LDR X1, [X8 + 0x90]
	0x0273F500 LDR X2, [X1]
	0x0273F504 LDR X30, [X31], #0x20
	0x0273F508 BR X2
	0x0273F50C SUB X31, X31, 0x30
	0x0273F510 STP X30, X21, [X31 + 0x10]
	0x0273F514 STP X20, X19, [X31 + 0x20]
	0x0273F518 LDR X8, [X1 + 0x20]
	0x0273F51C MOV X20, X1
	0x0273F520 MOV X19, X0
	0x0273F524 LDR X8, [X8 + 0xC0]
	0x0273F528 LDR X1, [X8 + 0x50]
	0x0273F52C LDR X8, [X1]
	0x0273F530 BLR X8
	0x0273F534 LDR X8, [X20 + 0x20]
	0x0273F538 MOV X0, X19
	0x0273F53C LDR X8, [X8 + 0xC0]
	0x0273F540 LDR X1, [X8 + 0x68]
	0x0273F544 LDR X8, [X1]
	0x0273F548 BLR X8
	0x0273F54C TBZ X0, 0x0, 0x273F588
	0x0273F550 LDR X8, [X20 + 0x20]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+32]
	008 Move X21, X1
	009 Move X19, X2
	010 Move X20, X0
	011 Move X8, [X8+192]
	012 Move X1, [X8+80]
	013 Call 0x273F6A4, X0
	014 Move X9, [X20+16]
	015 Move V0, [X20+24]
	016 Move X8, [X20+32]
	017 Subtract X9, X21, X9
	018 NotImplemented "Instruction SCVTF not yet implemented."
	019 NotImplemented "Instruction SCVTF not yet implemented."
	020 NotImplemented "Instruction FDIV not yet implemented."
	021 Move S0, 1
	022 NotImplemented "Instruction FMIN not yet implemented."
	023 Compare X8, 0
	024 JumpIfEqual {31}
	025 Move X9, [X8+24]
	026 Move X0, [X8+64]
	027 Move X1, [X8+40]
	028 Move V0, V8
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move V8, V0
	031 Move X21, [X20+88]
	032 Compare X21, 0
	033 JumpIfEqual {64}
	034 Move W8, [X20+104]
	035 Compare W8, 0
	036 JumpIfNotEqual {48}
	037 Move X8, [X20+80]
	038 Compare X8, 0
	039 JumpIfEqual {48}
	040 Move X1, [X20+64]
	041 Move X9, [X8+24]
	042 Move X0, [X8+64]
	043 Move X2, [X8+40]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move W8, 1
	046 Move [X20+104], W8
	047 Move [X20+96], X0
	048 Move X1, [X20+96]
	049 Move X2, [X20+112]
	050 Move X8, [X21+24]
	051 Move X0, [X21+64]
	052 Move X3, [X21+40]
	053 Move V0, V8
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X20+72]
	056 Compare X8, 0
	057 JumpIfEqual {64}
	058 Move X2, X0
	059 Move X1, [X20+64]
	060 Move X9, [X8+24]
	061 Move X0, [X8+64]
	062 Move X3, [X8+40]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move S0, 1
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X30, [X31+16]
	069 Move X21, [X31+24]
	070 Move D9, [X31+48]
	071 Move D8, [X31+56]
	072 Return 
	073 Move X8, [X19+32]
	074 Move X0, X20
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X30, [X31+16]
	078 Move X21, [X31+24]
	079 Move X8, [X8+192]
	080 Move X1, [X8+152]
	081 Move D9, [X31+48]
	082 Move D8, [X31+56]
	083 Call 0x273F2D8, X0
	084 Return 

Method: System.Void SetDefaultValues()

Disassembly:
	0x0273F554 MOV X0, X19
	0x0273F558 LDR X8, [X8 + 0xC0]
	0x0273F55C LDR X1, [X8 + 0x80]
	0x0273F560 LDR X8, [X1]
	0x0273F564 BLR X8
	0x0273F568 LDR X8, [X20 + 0x20]
	0x0273F56C MOV W21, W0
	0x0273F570 MOV X0, X19
	0x0273F574 LDR X8, [X8 + 0xC0]
	0x0273F578 LDR X1, [X8 + 0x98]
	0x0273F57C LDR X8, [X1]
	0x0273F580 BLR X8
	0x0273F584 TBNZ X21, 0x0, 0x273F628
	0x0273F588 LDR X8, [X20 + 0x20]
	0x0273F58C MOV X0, X19
	0x0273F590 LDR X8, [X8 + 0xC0]
	0x0273F594 LDR X1, [X8 + 0x48]
	0x0273F598 LDR X8, [X1]
	0x0273F59C BLR X8
	0x0273F5A0 LDR X8, [X20 + 0x20]
	0x0273F5A4 MOVZ W1, 0x1
	0x0273F5A8 MOV X0, X19
	0x0273F5AC LDR X8, [X8 + 0xC0]
	0x0273F5B0 LDR X2, [X8 + 0xA0]
	0x0273F5B4 LDR X8, [X2]
	0x0273F5B8 BLR X8
	0x0273F5BC LDR X8, [X20 + 0x20]
	0x0273F5C0 LDR X8, [X8 + 0xC0]
	0x0273F5C4 LDR X0, [X8 + 0xB0]
	0x0273F5C8 LDRB W8, [X0 + 0x135]
	0x0273F5CC TBNZ X8, 0x0, 0x273F5D4
	0x0273F5D0 BL 0x1C5C684
	0x0273F5D4 LDR W8, [X0 + 0xE0]
	0x0273F5D8 CBNZ W8, 0x273F5E0
	0x0273F5DC BL 0x1C16DFC
	0x0273F5E0 LDR X8, [X20 + 0x20]
	0x0273F5E4 LDR X8, [X8 + 0xC0]
	0x0273F5E8 LDR X0, [X8 + 0xB0]
	0x0273F5EC LDRB W8, [X0 + 0x135]
	0x0273F5F0 TBNZ X8, 0x0, 0x273F5F8
	0x0273F5F4 BL 0x1C5C684
	0x0273F5F8 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1C9C000
	007 Move X21, 0x19DF000
	008 Move X20, 0x19DF000
	009 Move W8, [X22+1757]
	010 Move X21, [X21+3344]
	011 Move X20, [X20+3352]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x19DF000
	018 Move X0, [X0+3352]
	019 Call 0x1C17CF4
	020 Move X0, 0x19DF000
	021 Move X0, [X0+3344]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1757], W8
	025 Move W8, 400
	026 Move W9, 1
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move [X19+16], X31
	029 Move [X19+48], X31
	030 Move [X19+112], X31
	031 Move [X19+96], X31
	032 Move [X19+24], W8
	033 Move [X19+56], W9
	034 Move [X19+64], V0
	035 Move [X19+72], V0
	036 Move [X19+104], W31
	037 Move X0, [X21]
	038 Call 0x1C17F10
	039 Move X2, [X20]
	040 Move X1, X31
	041 Move X3, X31
	042 Move X20, X0
	043 Call Func`2<Single, Single>..ctor, X0, X1, X2
	044 Move [X19+32], X20
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 

Method: System.Void Unregister()

Disassembly:
	0x0273F5FC LDR X2, [X8]
	0x0273F600 CBZ X2, 0x273F638
	0x0273F604 LDR X8, [X20 + 0x20]
	0x0273F608 ADD X3, X31, 0x8
	0x0273F60C MOV X4, X19
	0x0273F610 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move X1, X0
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X2, X31
	006 Call VisualElement.UnregisterAnimation, X0, X1
	007 Return 
	008 Return 

Method: System.Void Register()

Disassembly:
	0x0273F614 LDR X1, [X8 + 0xB8]
	0x0273F618 LDR X0, [X1]
	0x0273F61C STR X19, [X31 + 0x8]
	0x0273F620 LDR X8, [X1 + 0x10]
	0x0273F624 BLR X8
	0x0273F628 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move X1, X0
	002 Move X0, [X0+64]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X2, X31
	006 Call VisualElement.RegisterAnimation, X0, X1
	007 Return 
	008 Return 

Method: System.Void SetOwner(UnityEngine.UIElements.VisualElement e)

Disassembly:
	0x0273F62C LDP X30, X21, [X31 + 0x10]
	0x0273F630 ADD X31, X31, 0x30
	0x0273F634 RET
	0x0273F638 BL 0x1C16F20
	0x0273F63C STP D9, D8, [X31 - 0x70]!
	0x0273F640 STP X29, X30, [X31 + 0x10]
	0x0273F644 STP X28, X27, [X31 + 0x20]
	0x0273F648 STP X26, X25, [X31 + 0x30]
	0x0273F64C STP X24, X23, [X31 + 0x40]
	0x0273F650 STP X22, X21, [X31 + 0x50]
	0x0273F654 STP X20, X19, [X31 + 0x60]
	0x0273F658 ADD X29, X31, 0x10
	0x0273F65C SUB X31, X31, 0x30
	0x0273F660 MRS X27, 0xC000
	0x0273F664 LDR X8, [X27 + 0x28]
	0x0273F668 MOV X19, X2
	0x0273F66C MOV X20, X0
	0x0273F670 MOV X26, X1
	0x0273F674 STUR X8, [X29 - 0x18]
	0x0273F678 LDR X8, [X2 + 0x20]
	0x0273F67C LDR X28, [X8 + 0xC0]
	0x0273F680 LDR X8, [X28 + 0x38]
	0x0273F684 LDR W22, [X8 + 0xFC]
	0x0273F688 ADD X8, X31, 0x0
	0x0273F68C ADD X9, X22, 0xF
	0x0273F690 AND X9, X9, 0x1FFFFFFFF
	0x0273F694 SUB X21, X8, X9
	0x0273F698 ADD X31, X21, 0x0
	0x0273F69C ADD X8, X31, 0x0
	0x0273F6A0 SUB X25, X8, X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+40]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfEqual {18}
	009 Move X0, [X19+64]
	010 Compare X0, 0
	011 JumpIfEqual {19}
	012 Move X1, X19
	013 Move X2, X31
	014 Call VisualElement.UnregisterAnimation, X0, X1
	015 Move W8, [X19+40]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CSET not yet implemented."
	018 Move [X19+64], X20
	019 Move W8, W31
	020 Move [X19+64], X20
	021 Compare X20, 0
	022 JumpIfEqual {35}
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X2, X31
	032 Move X30, [X31+32]
	033 Call VisualElement.RegisterAnimation, X0, X1
	034 Return 
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 

Method: System.Void CheckNotRecycled()

Disassembly:
	0x0273F6A4 ADD X31, X25, 0x0
	0x0273F6A8 ADD X8, X31, 0x0
	0x0273F6AC SUB X24, X8, X9
	0x0273F6B0 ADD X31, X24, 0x0
	0x0273F6B4 ADD X8, X31, 0x0
	0x0273F6B8 SUB X23, X8, X9
	0x0273F6BC ADD X31, X23, 0x0
	0x0273F6C0 MOV X0, X23
	0x0273F6C4 MOV W1, W31
	0x0273F6C8 MOV X2, X22
	0x0273F6CC BL 0x3EB1B10
	0x0273F6D0 LDR X1, [X28 + 0x50]
	0x0273F6D4 MOV X0, X20
	0x0273F6D8 LDR X8, [X1]
	0x0273F6DC BLR X8
	0x0273F6E0 LDR X8, [X19 + 0x20]
	0x0273F6E4 MOV X0, X20
	0x0273F6E8 LDR X8, [X8 + 0xC0]
	0x0273F6EC LDR X8, [X8]
	0x0273F6F0 LDR X1, [X8 + 0x80]
	0x0273F6F4 BL 0x1C16D18
	0x0273F6F8 LDR X8, [X19 + 0x20]
	0x0273F6FC LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+57]
	005 Compare W8, 0
	006 JumpIfNotEqual {11}
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move X30, [X31+32]
	010 Return 
	011 Move X0, 0x19B5000
	012 Move X0, [X0+1456]
	013 Move X19, X1
	014 Call 0x1C17D08
	015 Call 0x1C17F10
	016 Move X20, X0
	017 Move X0, 0x19DF000
	018 Move X0, [X0+3360]
	019 Call 0x1C17D08
	020 Move X1, X0
	021 Move X0, X20
	022 Move X2, X31
	023 Call InvalidOperationException..ctor, X0, X1
	024 Move X0, X20
	025 Move X1, X19
	026 Call 0x1C17DEC

Method: UnityEngine.UIElements.Experimental.ValueAnimation`1<T> Create(UnityEngine.UIElements.VisualElement e, System.Func`4<T, T, System.Single, T> interpolator)

Disassembly:
	0x0273F700 LDR X1, [X8 + 0xC0]
	0x0273F704 LDR X8, [X0]
	0x0273F708 MOV X0, X20
	0x0273F70C LDR X9, [X1]
	0x0273F710 SUB X26, X26, X8
	0x0273F714 BLR X9
	0x0273F718 LDR X8, [X19 + 0x20]
	0x0273F71C SCVTF S0, X26
	0x0273F720 SCVTF S1, W0
	0x0273F724 FDIV S9, S0, S1
	0x0273F728 LDR X8, [X8 + 0xC0]
	0x0273F72C FMOV S0, 1
	0x0273F730 MOV X0, X20
	0x0273F734 FMIN S8, S9, S0
	0x0273F738 LDR X1, [X8 + 0xC8]
	0x0273F73C LDR X8, [X1]
	0x0273F740 BLR X8
	0x0273F744 CBZ X0, 0x273F764
	0x0273F748 LDR X8, [X0 + 0x40]
	0x0273F74C LDR X9, [X0 + 0x18]
	0x0273F750 LDR X1, [X0 + 0x28]
	0x0273F754 MOV V0.16B, V8.16B
	0x0273F758 MOV X0, X8
	0x0273F75C BLR X9
	0x0273F760 MOV V8.16B, V0.16B
	0x0273F764 LDR X8, [X19 + 0x20]
	0x0273F768 MOV X0, X20
	0x0273F76C LDR X8, [X8 + 0xC0]
	0x0273F770 LDR X1, [X8 + 0xD0]
	0x0273F774 LDR X8, [X1]
	0x0273F778 BLR X8
	0x0273F77C CBZ X0, 0x273F8D8
	0x0273F780 LDR X8, [X19 + 0x20]
	0x0273F784 MOV X0, X20
	0x0273F788 LDR X8, [X8 + 0xC0]
	0x0273F78C LDR X1, [X8 + 0xD0]
	0x0273F790 LDR X8, [X1]
	0x0273F794 BLR X8
	0x0273F798 LDR X8, [X19 + 0x20]
	0x0273F79C MOV X26, X0
	0x0273F7A0 SUB X3, X29, 0x40
	0x0273F7A4 MOV X2, X20
	0x0273F7A8 LDR X8, [X8 + 0xC0]
	0x0273F7AC MOV X4, X21
	0x0273F7B0 LDR X1, [X8 + 0xD8]
	0x0273F7B4 LDR X8, [X1]
	0x0273F7B8 STUR X21, [X29 - 0x40]
	0x0273F7BC LDR X9, [X1 + 0x10]
	0x0273F7C0 MOV X0, X8
	0x0273F7C4 BLR X9
	0x0273F7C8 LDR X8, [X19 + 0x20]
	0x0273F7CC SUB X3, X29, 0x40
	0x0273F7D0 MOV X2, X20
	0x0273F7D4 MOV X4, X25
	0x0273F7D8 LDR X8, [X8 + 0xC0]
	0x0273F7DC LDR X1, [X8 + 0xE0]
	0x0273F7E0 LDR X0, [X1]
	0x0273F7E4 STUR X25, [X29 - 0x40]
	0x0273F7E8 LDR X8, [X1 + 0x10]
	0x0273F7EC BLR X8
	0x0273F7F0 CBZ X26, 0x273F930
	0x0273F7F4 LDR X8, [X19 + 0x20]
	0x0273F7F8 LDR X8, [X8 + 0xC0]
	0x0273F7FC LDR X9, [X8 + 0x38]
	0x0273F800 LDR X1, [X8 + 0xE8]
	0x0273F804 LDR W8, [X9 + 0x28]
	0x0273F808 LDR X0, [X1]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X20, X2
	008 Move X19, X1
	009 Move X21, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+176]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, [X20+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, [X8+176]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move X8, [X0+184]
	046 Move X22, [X8]
	047 Compare X22, 0
	048 JumpIfEqual {98}
	049 Move X0, [X20+32]
	050 Move W8, [X0+309]
	051 Move TEMP, X8
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {56}
	055 Call 0x1C5D684
	056 Move X8, [X0+192]
	057 Move X0, X22
	058 Move X1, [X8+320]
	059 Call 0x249568C, X0
	060 Compare X0, 0
	061 JumpIfEqual {98}
	062 Move X22, X0
	063 Move X0, [X20+32]
	064 Move W8, [X0+309]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {71}
	069 Call 0x1C5D684
	070 Move X0, [X20+32]
	071 Move [X22+57], W31
	072 Move W8, [X0+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Call 0x1C5D684
	078 Move X8, [X0+192]
	079 Move X0, X22
	080 Move X1, X21
	081 Move X2, [X8+328]
	082 Call 0x273F62C, X0, X1
	083 Move X0, [X20+32]
	084 Move W8, [X0+309]
	085 Move TEMP, X8
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {90}
	089 Call 0x1C5D684
	090 Move [X22+88], X19
	091 Move X0, X22
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X30, [X31+48]
	097 Return X0
	098 Call 0x1C17F20

Method: UnityEngine.UIElements.Experimental.ValueAnimation`1<T> KeepAlive()

Disassembly:
	0x0273F80C TBNZ X8, 0x1F, 0x273F81C
	0x0273F810 LDR X8, [X21]

ISIL:
	001 Move [X0+56], W31
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x0273F814 LDR X25, [X25]
	0x0273F818 B 0x273F820
	0x0273F81C MOV X8, X21
	0x0273F820 STP X8, X25, [X29 - 0x40]
	0x0273F824 SUB X8, X29, 0x1C
	0x0273F828 STUR S8, [X29 - 0x1C]
	0x0273F82C STP X8, X24, [X29 - 0x30]
	0x0273F830 LDR X8, [X1 + 0x10]
	0x0273F834 SUB X3, X29, 0x40
	0x0273F838 MOV X2, X26
	0x0273F83C MOV X4, X24
	0x0273F840 BLR X8
	0x0273F844 MOV X0, X23
	0x0273F848 MOV X1, X24
	0x0273F84C MOV X2, X22
	0x0273F850 BL 0x3EB1AC0
	0x0273F854 LDR X8, [X19 + 0x20]
	0x0273F858 MOV X0, X20
	0x0273F85C LDR X8, [X8 + 0xC0]
	0x0273F860 LDR X1, [X8 + 0xF0]
	0x0273F864 LDR X8, [X1]
	0x0273F868 BLR X8
	0x0273F86C CBZ X0, 0x273F8D8
	0x0273F870 LDR X8, [X19 + 0x20]
	0x0273F874 MOV X24, X0
	0x0273F878 MOV X0, X20
	0x0273F87C LDR X8, [X8 + 0xC0]
	0x0273F880 LDR X1, [X8 + 0x28]
	0x0273F884 LDR X8, [X1]
	0x0273F888 BLR X8
	0x0273F88C MOV X25, X0
	0x0273F890 MOV X0, X21
	0x0273F894 MOV X1, X23
	0x0273F898 MOV X2, X22
	0x0273F89C BL 0x3EB1AC0
	0x0273F8A0 LDR X8, [X19 + 0x20]
	0x0273F8A4 LDR X8, [X8 + 0xC0]
	0x0273F8A8 LDR X9, [X8 + 0x38]
	0x0273F8AC LDR X1, [X8 + 0xF8]
	0x0273F8B0 LDR W8, [X9 + 0x28]
	0x0273F8B4 LDR X0, [X1]
	0x0273F8B8 TBNZ X8, 0x1F, 0x273F8C0
	0x0273F8BC LDR X21, [X21]
	0x0273F8C0 STP X25, X21, [X29 - 0x40]
	0x0273F8C4 LDR X8, [X1 + 0x10]
	0x0273F8C8 SUB X3, X29, 0x40
	0x0273F8CC MOV X2, X24
	0x0273F8D0 MOV X4, X21
	0x0273F8D4 BLR X8
	0x0273F8D8 FMOV S0, 1
	0x0273F8DC FCMP S9, S0
	0x0273F8E0 B.LT 0x273F8FC
	0x0273F8E4 LDR X8, [X19 + 0x20]
	0x0273F8E8 MOV X0, X20
	0x0273F8EC LDR X8, [X8 + 0xC0]
	0x0273F8F0 LDR X1, [X8 + 0x98]
	0x0273F8F4 LDR X8, [X1]
	0x0273F8F8 BLR X8
	0x0273F8FC LDR X8, [X27 + 0x28]
	0x0273F900 LDUR X9, [X29 - 0x18]
	0x0273F904 CMP X8, X9
	0x0273F908 B.NE 0x273F934
	0x0273F90C SUB X31, X29, 0x10
	0x0273F910 LDP X20, X19, [X31 + 0x60]
	0x0273F914 LDP X22, X21, [X31 + 0x50]
	0x0273F918 LDP X24, X23, [X31 + 0x40]
	0x0273F91C LDP X26, X25, [X31 + 0x30]
	0x0273F920 LDP X28, X27, [X31 + 0x20]
	0x0273F924 LDP X29, X30, [X31 + 0x10]
	0x0273F928 LDP D9, D8, [X31], #0x70
	0x0273F92C RET
	0x0273F930 BL 0x1C16F20
	0x0273F934 BL 0x3EB1B20
	0x0273F938 STP X29, X30, [X31 - 0x60]!
	0x0273F93C STR X27, [X31 + 0x10]
	0x0273F940 STP X26, X25, [X31 + 0x20]
	0x0273F944 STP X24, X23, [X31 + 0x30]
	0x0273F948 STP X22, X21, [X31 + 0x40]
	0x0273F94C STP X20, X19, [X31 + 0x50]
	0x0273F950 ADD X29, X31, 0x0
	0x0273F954 SUB X31, X31, 0x10
	0x0273F958 MRS X26, 0xC000
	0x0273F95C LDR X8, [X26 + 0x28]
	0x0273F960 ADRP X21, 0x1C9B000
	0x0273F964 MOV X19, X1
	0x0273F968 MOV X20, X0
	0x0273F96C STUR X8, [X29 - 0x8]
	0x0273F970 LDRB W8, [X21 + 0x6DF]
	0x0273F974 TBNZ X8, 0x0, 0x273F998
	0x0273F978 ADRP X0, 0x19DE000
	0x0273F97C LDR X0, [X0 + 0xD18]
	0x0273F980 BL 0x1C16CF4
	0x0273F984 ADRP X0, 0x19DE000
	0x0273F988 LDR X0, [X0 + 0xD10]
	0x0273F98C BL 0x1C16CF4
	0x0273F990 MOVZ W8, 0x1
	0x0273F994 STRB W8, [X21 + 0x6DF]
	0x0273F998 LDR X8, [X19 + 0x20]
	0x0273F99C LDR X25, [X8 + 0xC0]
	0x0273F9A0 LDR X8, [X25 + 0x38]
	0x0273F9A4 LDR W22, [X8 + 0xFC]
	0x0273F9A8 ADD X8, X31, 0x0
	0x0273F9AC ADD X9, X22, 0xF
	0x0273F9B0 AND X9, X9, 0x1FFFFFFFF
	0x0273F9B4 SUB X23, X8, X9
	0x0273F9B8 ADD X31, X23, 0x0
	0x0273F9BC ADD X8, X31, 0x0
	0x0273F9C0 SUB X21, X8, X9
	0x0273F9C4 ADD X31, X21, 0x0
	0x0273F9C8 ADD X8, X31, 0x0
	0x0273F9CC SUB X24, X8, X9
	0x0273F9D0 ADD X31, X24, 0x0
	0x0273F9D4 MOV X0, X24

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X0
	007 Move X0, [X0+32]
	008 Move W8, [X0+309]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {14}
	013 Call 0x1C5D684
	014 Move X8, [X0+192]
	015 Move X0, [X8+344]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, [X19+32]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+192]
	034 Move X0, [X8+344]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move X8, [X19+32]
	042 Move X9, [X0+184]
	043 Move W10, [X8+309]
	044 Move X21, [X9]
	045 Move TEMP, X10
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {52}
	049 Move X0, X8
	050 Call 0x1C5D684
	051 Move X8, X0
	052 Move X8, [X8+192]
	053 Move X0, [X8+360]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Call 0x1C17F10
	061 Move X8, [X19+32]
	062 Move X20, X0
	063 Add X9, X8, 309
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move TEMP, X9
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {74}
	069 Move X0, X8
	070 Call 0x1C5D684
	071 Move X8, [X19+32]
	072 Add X9, X8, 309
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Move X0, X8
	075 Move X10, [X0+192]
	076 Move X22, [X10+352]
	077 Move TEMP, X9
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {84}
	081 Move X0, X8
	082 Call 0x1C5D684
	083 Move X8, X0
	084 Move X8, [X8+192]
	085 Move X0, X20
	086 Move X1, X21
	087 Move X2, X22
	088 Move X3, [X8+368]
	089 Call Func`1<Object>..ctor, X0, X1, X2
	090 Move X0, [X19+32]
	091 Move W8, [X0+309]
	092 Move TEMP, X8
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfEqual {97}
	096 Call 0x1C5D684
	097 Move X8, [X0+192]
	098 Move X0, [X8+168]
	099 Move W8, [X0+309]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {105}
	104 Call 0x1C5D684
	105 Call 0x1C17F10
	106 Move X8, [X19+32]
	107 Move X21, X0
	108 Move W9, [X8+309]
	109 Move TEMP, X9
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {116}
	113 Move X0, X8
	114 Call 0x1C5D684
	115 Move X8, X0
	116 Move X8, [X8+192]
	117 Move W2, 100
	118 Move X0, X21
	119 Move X1, X20
	120 Move X3, [X8+376]
	121 Call 0x24954D4, X0, X1, X2
	122 Move X0, [X19+32]
	123 Move W8, [X0+309]
	124 Move TEMP, X8
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfEqual {129}
	128 Call 0x1C5D684
	129 Move X8, [X0+192]
	130 Move X0, [X8+176]
	131 Move W8, [X0+309]
	132 Move TEMP, X8
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {137}
	136 Call 0x1C5D684
	137 Move X8, [X0+184]
	138 Move [X8], X21
	139 Move X0, [X19+32]
	140 Move W8, [X0+309]
	141 Move TEMP, X8
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {146}
	145 Call 0x1C5D684
	146 Move X8, [X0+192]
	147 Move X0, [X8+176]
	148 Move W8, [X0+309]
	149 Move TEMP, X8
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {160}
	153 Move X20, [X31+32]
	154 Move X19, [X31+40]
	155 Move X22, [X31+16]
	156 Move X21, [X31+24]
	157 Move X30, [X31+48]
	158 Call 0x1C5D684
	159 Return 
	160 Move X20, [X31+32]
	161 Move X19, [X31+40]
	162 Move X22, [X31+16]
	163 Move X21, [X31+24]
	164 Move X30, [X31+48]
	165 Return 

