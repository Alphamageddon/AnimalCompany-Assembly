Type: UnityEngine.UIElements.UxmlEnumAttributeDescription`1

Method: System.Void .ctor()

Disassembly:
	0x02735B10 ADD X10, X10, 0x8
	0x02735B14 LDUR X11, [X10 - 0x8]
	0x02735B18 CMP X11, X1
	0x02735B1C B.EQ 0x2735B3C
	0x02735B20 SUBS X9, X9, 0x1
	0x02735B24 ADD X10, X10, 0x10
	0x02735B28 B.NE 0x2735B14
	0x02735B2C MOV X0, X23
	0x02735B30 MOV W2, W31
	0x02735B34 BL 0x1C5C788
	0x02735B38 B 0x2735B48
	0x02735B3C LDRSW X9, [X10]
	0x02735B40 ADD X8, X8, X9, 0x4, LSL
	0x02735B44 ADD X0, X8, 0x138
	0x02735B48 LDP X8, X1, [X0]
	0x02735B4C MOV X0, X23
	0x02735B50 BLR X8
	0x02735B54 CBNZ X20, 0x2735C08
	0x02735B58 CMP W19, 0x7
	0x02735B5C B.EQ 0x2735B64
	0x02735B60 CBNZ W19, 0x2735B80
	0x02735B64 LDUR X19, [X29 - 0x30]
	0x02735B68 CBZ X19, 0x2735BC4
	0x02735B6C MOV X0, X19
	0x02735B70 MOV X1, X22
	0x02735B74 MOV X2, X31
	0x02735B78 BL 0x3E1DBCC
	0x02735B7C STR X19, [X24 + 0x38]
	0x02735B80 LDR X8, [X21 + 0x28]
	0x02735B84 LDUR X9, [X29 - 0x8]
	0x02735B88 CMP X8, X9
	0x02735B8C B.NE 0x2735C10
	0x02735B90 ADD X31, X29, 0x0
	0x02735B94 LDP X20, X19, [X31 + 0x50]
	0x02735B98 LDP X22, X21, [X31 + 0x40]
	0x02735B9C LDP X24, X23, [X31 + 0x30]
	0x02735BA0 LDP X26, X25, [X31 + 0x20]
	0x02735BA4 LDP X28, X27, [X31 + 0x10]
	0x02735BA8 LDP X29, X30, [X31], #0x60
	0x02735BAC RET
	0x02735BB0 BL 0x1C16F20
	0x02735BB4 BL 0x1C16F20
	0x02735BB8 BL 0x1C16F20
	0x02735BBC MOV X0, X27
	0x02735BC0 BL 0x1C171E0
	0x02735BC4 BL 0x1C16F20
	0x02735BC8 ADRP X0, 0x19C6000
	0x02735BCC LDR X0, [X0 + 0x578]
	0x02735BD0 BL 0x1C16D08
	0x02735BD4 BL 0x1C16F10
	0x02735BD8 MOV X19, X0
	0x02735BDC ADRP X0, 0x19E8000
	0x02735BE0 LDR X0, [X0 + 0xAC8]
	0x02735BE4 BL 0x1C16D08
	0x02735BE8 MOV X1, X0
	0x02735BEC MOV X0, X19
	0x02735BF0 MOV X2, X31
	0x02735BF4 BL 0x3314A68
	0x02735BF8 MOV X0, X19
	0x02735BFC MOV X1, X20
	0x02735C00 BL 0x1C16DEC
	0x02735C04 BL 0x1C16F20
	0x02735C08 MOV X0, X20
	0x02735C0C BL 0x1C16F18
	0x02735C10 BL 0x3EB1B20
	0x02735C14 B 0x2735C30
	0x02735C18 B 0x2735C30
	0x02735C1C B 0x2735C30
	0x02735C20 B 0x2735C30
	0x02735C24 B 0x2735C30
	0x02735C28 B 0x2735C30
	0x02735C2C B 0x2735C30
	0x02735C30 ADRP X25, 0x19BE000
	0x02735C34 LDUR X24, [X29 - 0x28]
	0x02735C38 LDR X25, [X25 + 0xE00]
	0x02735C3C MOV X23, X0
	0x02735C40 CMP W1, 0x1
	0x02735C44 B.NE 0x2735C60
	0x02735C48 MOV X0, X23
	0x02735C4C BL 0x3EB1AD0
	0x02735C50 LDR X20, [X0]
	0x02735C54 BL 0x3EB1AE0
	0x02735C58 MOV W19, W31
	0x02735C5C B 0x2735AE4
	0x02735C60 MOV X20, X31
	0x02735C64 B 0x2735C6C
	0x02735C68 MOV X23, X0
	0x02735C6C ADRP X8, 0x19BE000
	0x02735C70 LDR X8, [X8 + 0xE00]
	0x02735C74 LDR X1, [X8]
	0x02735C78 MOV X0, X26
	0x02735C7C BL 0x1C16E00
	0x02735C80 MOV X19, X0
	0x02735C84 CBZ X0, 0x2735CE8
	0x02735C88 LDR X8, [X19]
	0x02735C8C ADRP X10, 0x19BE000
	0x02735C90 LDRH W9, [X8 + 0x12E]
	0x02735C94 LDR X10, [X10 + 0xE00]
	0x02735C98 LDR X1, [X10]
	0x02735C9C CBZ X9, 0x2735CC0
	0x02735CA0 LDR X10, [X8 + 0xB0]
	0x02735CA4 ADD X10, X10, 0x8
	0x02735CA8 LDUR X11, [X10 - 0x8]
	0x02735CAC CMP X11, X1
	0x02735CB0 B.EQ 0x2735CD0
	0x02735CB4 SUBS X9, X9, 0x1
	0x02735CB8 ADD X10, X10, 0x10
	0x02735CBC B.NE 0x2735CA8
	0x02735CC0 MOV X0, X19
	0x02735CC4 MOV W2, W31
	0x02735CC8 BL 0x1C5C788
	0x02735CCC B 0x2735CDC
	0x02735CD0 LDRSW X9, [X10]
	0x02735CD4 ADD X8, X8, X9, 0x4, LSL
	0x02735CD8 ADD X0, X8, 0x138
	0x02735CDC LDP X8, X1, [X0]
	0x02735CE0 MOV X0, X19
	0x02735CE4 BLR X8
	0x02735CE8 CBNZ X20, 0x2735CF4
	0x02735CEC MOV X0, X23
	0x02735CF0 BL 0x1D2C690
	0x02735CF4 MOV X0, X20
	0x02735CF8 BL 0x1C16F18
	0x02735CFC BL 0x1990590
	0x02735D00 STP X29, X30, [X31 - 0x60]!
	0x02735D04 STP X28, X27, [X31 + 0x10]
	0x02735D08 STP X26, X25, [X31 + 0x20]
	0x02735D0C STP X24, X23, [X31 + 0x30]
	0x02735D10 STP X22, X21, [X31 + 0x40]
	0x02735D14 STP X20, X19, [X31 + 0x50]
	0x02735D18 ADD X29, X31, 0x0
	0x02735D1C SUB X31, X31, 0xA0
	0x02735D20 STUR X3, [X29 - 0x98]
	0x02735D24 MRS X19, 0xC000
	0x02735D28 LDR X8, [X19 + 0x28]
	0x02735D2C MOV X26, X4
	0x02735D30 MOV X23, X1
	0x02735D34 MOV X22, X0
	0x02735D38 STUR X8, [X29 - 0x8]
	0x02735D3C LDR X8, [X4 + 0x20]
	0x02735D40 MOV X27, X2
	0x02735D44 LDR X28, [X8 + 0xC0]
	0x02735D48 LDR X8, [X28 + 0x20]
	0x02735D4C LDR W20, [X8 + 0xFC]
	0x02735D50 ADD X8, X31, 0x0
	0x02735D54 ADD X9, X20, 0xF
	0x02735D58 AND X9, X9, 0x1FFFFFFFF
	0x02735D5C SUB X21, X8, X9
	0x02735D60 ADD X31, X21, 0x0
	0x02735D64 ADD X8, X31, 0x0
	0x02735D68 SUB X25, X8, X9
	0x02735D6C ADD X31, X25, 0x0
	0x02735D70 ADD X8, X31, 0x0
	0x02735D74 SUB X24, X8, X9
	0x02735D78 ADD X31, X24, 0x0
	0x02735D7C MOV X0, X24
	0x02735D80 MOV W1, W31
	0x02735D84 MOV X2, X20
	0x02735D88 BL 0x3EB1B10
	0x02735D8C LDP V1, V0, [X27]
	0x02735D90 STP V1, V0, [X29 - 0x30]
	0x02735D94 LDR X0, [X28 + 0x48]
	0x02735D98 LDRB W8, [X0 + 0x135]
	0x02735D9C TBNZ X8, 0x0, 0x2735DA4
	0x02735DA0 BL 0x1C5C684
	0x02735DA4 LDR W8, [X0 + 0xE0]
	0x02735DA8 CBNZ W8, 0x2735DB0
	0x02735DAC BL 0x1C16DFC
	0x02735DB0 LDR X8, [X26 + 0x20]
	0x02735DB4 LDR X8, [X8 + 0xC0]
	0x02735DB8 LDR X0, [X8 + 0x48]
	0x02735DBC LDRB W8, [X0 + 0x135]
	0x02735DC0 TBNZ X8, 0x0, 0x2735DC8
	0x02735DC4 BL 0x1C5C684
	0x02735DC8 LDR X8, [X0 + 0xB8]
	0x02735DCC LDR X27, [X8 + 0x8]
	0x02735DD0 CBZ X27, 0x2735DDC
	0x02735DD4 LDP V0, V1, [X29 - 0x30]
	0x02735DD8 B 0x2735EA8
	0x02735DDC LDP V0, V1, [X29 - 0x30]
	0x02735DE0 STP V0, V1, [X29 - 0x70]
	0x02735DE4 LDR X8, [X26 + 0x20]
	0x02735DE8 LDR X8, [X8 + 0xC0]
	0x02735DEC LDR X0, [X8 + 0x48]
	0x02735DF0 LDRB W8, [X0 + 0x135]
	0x02735DF4 TBNZ X8, 0x0, 0x2735DFC
	0x02735DF8 BL 0x1C5C684
	0x02735DFC LDR W8, [X0 + 0xE0]
	0x02735E00 CBNZ W8, 0x2735E08
	0x02735E04 BL 0x1C16DFC
	0x02735E08 LDR X8, [X26 + 0x20]
	0x02735E0C LDR X8, [X8 + 0xC0]
	0x02735E10 LDR X0, [X8 + 0x48]
	0x02735E14 LDRB W9, [X0 + 0x135]
	0x02735E18 TBNZ X9, 0x0, 0x2735E28
	0x02735E1C BL 0x1C5C684
	0x02735E20 LDR X8, [X26 + 0x20]
	0x02735E24 LDR X8, [X8 + 0xC0]
	0x02735E28 LDR X8, [X8 + 0x40]
	0x02735E2C LDR X9, [X0 + 0xB8]
	0x02735E30 LDRB W10, [X8 + 0x135]
	0x02735E34 LDR X28, [X9]
	0x02735E38 TBNZ X10, 0x0, 0x2735E48
	0x02735E3C MOV X0, X8
	0x02735E40 BL 0x1C5C684
	0x02735E44 MOV X8, X0
	0x02735E48 MOV X0, X8
	0x02735E4C BL 0x1C16F10
	0x02735E50 LDR X8, [X26 + 0x20]
	0x02735E54 MOV X1, X28
	0x02735E58 MOV X27, X0
	0x02735E5C LDR X8, [X8 + 0xC0]
	0x02735E60 LDP X2, X3, [X8 + 0x50]
	0x02735E64 LDR X8, [X3]
	0x02735E68 BLR X8
	0x02735E6C LDR X8, [X26 + 0x20]
	0x02735E70 LDR X8, [X8 + 0xC0]
	0x02735E74 LDR X0, [X8 + 0x48]
	0x02735E78 LDRB W9, [X0 + 0x135]
	0x02735E7C TBNZ X9, 0x0, 0x2735E8C
	0x02735E80 BL 0x1C5C684
	0x02735E84 LDR X8, [X26 + 0x20]
	0x02735E88 LDR X8, [X8 + 0xC0]
	0x02735E8C LDR X9, [X0 + 0xB8]
	0x02735E90 STR X27, [X9 + 0x8]
	0x02735E94 LDR X0, [X8 + 0x48]
	0x02735E98 LDRB W8, [X0 + 0x135]
	0x02735E9C TBNZ X8, 0x0, 0x2735EA4
	0x02735EA0 BL 0x1C5C684
	0x02735EA4 LDP V0, V1, [X29 - 0x70]
	0x02735EA8 STP V0, V1, [X29 - 0x50]
	0x02735EAC CBZ X22, 0x2735F74
	0x02735EB0 LDR X8, [X26 + 0x20]
	0x02735EB4 SUB X3, X29, 0x30
	0x02735EB8 MOV X2, X22
	0x02735EBC MOV X4, X21
	0x02735EC0 LDR X8, [X8 + 0xC0]
	0x02735EC4 LDR X1, [X8 + 0x60]
	0x02735EC8 LDR X0, [X1]
	0x02735ECC STUR X21, [X29 - 0x30]
	0x02735ED0 LDR X8, [X1 + 0x10]
	0x02735ED4 BLR X8
	0x02735ED8 LDR X8, [X26 + 0x20]
	0x02735EDC LDP V0, V1, [X29 - 0x50]
	0x02735EE0 SUB X3, X29, 0x30
	0x02735EE4 MOV X2, X22
	0x02735EE8 LDR X8, [X8 + 0xC0]
	0x02735EEC MOV X4, X25
	0x02735EF0 LDR X1, [X8 + 0x68]
	0x02735EF4 SUB X8, X29, 0x90
	0x02735EF8 LDR X0, [X1]
	0x02735EFC STP V0, V1, [X29 - 0x90]
	0x02735F00 STP X23, X8, [X29 - 0x30]
	0x02735F04 STP X27, X21, [X29 - 0x20]
	0x02735F08 STUR X25, [X29 - 0x10]
	0x02735F0C LDR X8, [X1 + 0x10]
	0x02735F10 BLR X8
	0x02735F14 MOV X0, X24
	0x02735F18 MOV X1, X25
	0x02735F1C MOV X2, X20
	0x02735F20 BL 0x3EB1AC0
	0x02735F24 MOV X0, X21
	0x02735F28 MOV X1, X24
	0x02735F2C MOV X2, X20
	0x02735F30 BL 0x3EB1AC0
	0x02735F34 LDUR X0, [X29 - 0x98]
	0x02735F38 MOV X1, X21
	0x02735F3C MOV X2, X20
	0x02735F40 BL 0x3EB1AC0
	0x02735F44 LDR X8, [X19 + 0x28]
	0x02735F48 LDUR X9, [X29 - 0x8]
	0x02735F4C CMP X8, X9
	0x02735F50 B.NE 0x2735F78
	0x02735F54 ADD X31, X29, 0x0
	0x02735F58 LDP X20, X19, [X31 + 0x50]
	0x02735F5C LDP X22, X21, [X31 + 0x40]
	0x02735F60 LDP X24, X23, [X31 + 0x30]
	0x02735F64 LDP X26, X25, [X31 + 0x20]
	0x02735F68 LDP X28, X27, [X31 + 0x10]
	0x02735F6C LDP X29, X30, [X31], #0x60
	0x02735F70 RET
	0x02735F74 BL 0x1C16F20
	0x02735F78 BL 0x3EB1B20
	0x02735F7C STP X29, X30, [X31 - 0x50]!
	0x02735F80 STP X26, X25, [X31 + 0x10]
	0x02735F84 STP X24, X23, [X31 + 0x20]
	0x02735F88 STP X22, X21, [X31 + 0x30]
	0x02735F8C STP X20, X19, [X31 + 0x40]
	0x02735F90 ADD X29, X31, 0x0
	0x02735F94 SUB X31, X31, 0xA0
	0x02735F98 MRS X26, 0xC000
	0x02735F9C LDR X8, [X26 + 0x28]
	0x02735FA0 ADD X10, X31, 0x0
	0x02735FA4 MOV X22, X4
	0x02735FA8 MOV X20, X3
	0x02735FAC STUR X8, [X29 - 0x8]
	0x02735FB0 LDR X8, [X4 + 0x20]
	0x02735FB4 MOV X21, X1
	0x02735FB8 MOV X19, X0
	0x02735FBC LDR X8, [X8 + 0xC0]
	0x02735FC0 LDR X9, [X8 + 0x20]
	0x02735FC4 LDR W9, [X9 + 0xFC]
	0x02735FC8 ADD X9, X9, 0xF
	0x02735FCC AND X9, X9, 0x1FFFFFFFF
	0x02735FD0 SUB X23, X10, X9
	0x02735FD4 ADD X31, X23, 0x0
	0x02735FD8 LDP V1, V0, [X2]
	0x02735FDC STP V1, V0, [X29 - 0x40]
	0x02735FE0 LDR X0, [X8 + 0x48]
	0x02735FE4 LDRB W8, [X0 + 0x135]
	0x02735FE8 TBNZ X8, 0x0, 0x2735FF0
	0x02735FEC BL 0x1C5C684
	0x02735FF0 LDR W8, [X0 + 0xE0]
	0x02735FF4 CBNZ W8, 0x2735FFC
	0x02735FF8 BL 0x1C16DFC
	0x02735FFC LDR X8, [X22 + 0x20]
	0x02736000 LDR X8, [X8 + 0xC0]
	0x02736004 LDR X0, [X8 + 0x48]
	0x02736008 LDRB W8, [X0 + 0x135]
	0x0273600C TBNZ X8, 0x0, 0x2736014
	0x02736010 BL 0x1C5C684
	0x02736014 LDR X8, [X0 + 0xB8]
	0x02736018 LDR X24, [X8 + 0x10]
	0x0273601C CBZ X24, 0x2736028
	0x02736020 LDP V0, V1, [X29 - 0x40]
	0x02736024 B 0x27360F8
	0x02736028 LDP V0, V1, [X29 - 0x40]
	0x0273602C STP V0, V1, [X29 - 0x80]
	0x02736030 LDR X8, [X22 + 0x20]
	0x02736034 LDR X8, [X8 + 0xC0]
	0x02736038 LDR X0, [X8 + 0x48]
	0x0273603C LDRB W8, [X0 + 0x135]
	0x02736040 TBNZ X8, 0x0, 0x2736048
	0x02736044 BL 0x1C5C684
	0x02736048 LDR W8, [X0 + 0xE0]
	0x0273604C CBNZ W8, 0x2736054
	0x02736050 BL 0x1C16DFC
	0x02736054 LDR X8, [X22 + 0x20]
	0x02736058 LDR X8, [X8 + 0xC0]
	0x0273605C LDR X0, [X8 + 0x48]
	0x02736060 LDRB W9, [X0 + 0x135]
	0x02736064 TBNZ X9, 0x0, 0x2736074
	0x02736068 BL 0x1C5C684
	0x0273606C LDR X8, [X22 + 0x20]
	0x02736070 LDR X8, [X8 + 0xC0]
	0x02736074 LDR X8, [X8 + 0x40]
	0x02736078 LDR X9, [X0 + 0xB8]
	0x0273607C LDRB W10, [X8 + 0x135]
	0x02736080 LDR X25, [X9]
	0x02736084 TBNZ X10, 0x0, 0x2736094
	0x02736088 MOV X0, X8
	0x0273608C BL 0x1C5C684
	0x02736090 MOV X8, X0
	0x02736094 MOV X0, X8
	0x02736098 BL 0x1C16F10
	0x0273609C LDR X8, [X22 + 0x20]
	0x027360A0 MOV X1, X25
	0x027360A4 MOV X24, X0
	0x027360A8 LDR X8, [X8 + 0xC0]
	0x027360AC LDR X3, [X8 + 0x58]
	0x027360B0 LDR X2, [X8 + 0x70]
	0x027360B4 LDR X9, [X3]
	0x027360B8 BLR X9
	0x027360BC LDR X8, [X22 + 0x20]
	0x027360C0 LDR X8, [X8 + 0xC0]
	0x027360C4 LDR X0, [X8 + 0x48]
	0x027360C8 LDRB W9, [X0 + 0x135]
	0x027360CC TBNZ X9, 0x0, 0x27360DC

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x1CA6000
	015 Move X23, 0x19BF000
	016 Move W8, [X20+1687]
	017 Move X23, [X23+1728]
	018 Move X22, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {59}
	024 Move X0, 0x19C1000
	025 Move X0, [X0+3144]
	026 Call 0x1C17CF4
	027 Move X0, 0x19BF000
	028 Move X0, [X0+3576]
	029 Call 0x1C17CF4
	030 Move X0, 0x19BF000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0x19BF000
	034 Move X0, [X0+3608]
	035 Call 0x1C17CF4
	036 Move X0, 0x19C0000
	037 Move X0, [X0+440]
	038 Call 0x1C17CF4
	039 Move X0, 0x19C0000
	040 Move X0, [X0+448]
	041 Call 0x1C17CF4
	042 Move X0, 0x19C0000
	043 Move X0, [X0+464]
	044 Call 0x1C17CF4
	045 Move X0, 0x19BF000
	046 Move X0, [X0+1728]
	047 Call 0x1C17CF4
	048 Move X0, 0x19E9000
	049 Move X0, [X0+2736]
	050 Call 0x1C17CF4
	051 Move X0, 0x19E9000
	052 Move X0, [X0+2744]
	053 Call 0x1C17CF4
	054 Move X0, 0x19E9000
	055 Move X0, [X0+2752]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+1687], W8
	059 Move X0, X19
	060 Move X1, X31
	061 Call UxmlAttributeDescription..ctor, X0
	062 Move X8, [X22+32]
	063 Move X0, [X23]
	064 Move X8, [X8+192]
	065 Move W9, [X0+224]
	066 Move X20, [X8+16]
	067 Compare W9, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X31
	072 Call Type.GetTypeFromHandle, X0
	073 Compare X0, 0
	074 JumpIfEqual {330}
	075 Move X8, [X0]
	076 Move X9, [X8+1416]
	077 Move X1, [X8+1424]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {331}
	083 Compare X19, 0
	084 JumpIfEqual {330}
	085 Move X8, 0x19E9000
	086 Move X8, [X8+2744]
	087 Move X9, 0x19E9000
	088 Move X20, 0x19E9000
	089 Move X21, 0x19C0000
	090 Move X10, [X8]
	091 Move X9, [X9+2752]
	092 Move X25, 0x19C0000
	093 Move X24, 0x19BF000
	094 Move X8, [X9]
	095 Move [X19+32], X10
	096 Move [X19+40], X8
	097 Move X8, [X22+32]
	098 Move X8, [X8+192]
	099 Move X20, [X20+2736]
	100 Move X0, [X8+24]
	101 Move X21, [X21+464]
	102 Move X25, [X25+448]
	103 Move X24, [X24+3576]
	104 Call Activator.CreateInstance
	105 Move [X19+64], W0
	106 Move X0, [X20]
	107 Call 0x1C17F10
	108 Move X1, X31
	109 Move X20, X0
	110 Call UxmlEnumeration..ctor, X0
	111 Move X0, [X21]
	112 Call 0x1C17F10
	113 Move X1, [X25]
	114 Move X21, X0
	115 Call List`1<Object>..ctor, X0
	116 Move X8, [X22+32]
	117 Move X0, [X23]
	118 Move X8, [X8+192]
	119 Move W9, [X0+224]
	120 Move X23, [X8+16]
	121 Compare W9, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X23
	125 Move X1, X31
	126 Call Type.GetTypeFromHandle, X0
	127 Move X8, [X24]
	128 Move X23, X0
	129 Move W9, [X8+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {134}
	132 Move X0, X8
	133 Call 0x1C17DFC
	134 Move X0, X23
	135 Move X1, X31
	136 Call Enum.GetValues, X0
	137 Compare X0, 0
	138 JumpIfEqual {330}
	139 Move X1, X31
	140 Call Array.GetEnumerator, X0
	141 Move X23, X0
	142 Compare X0, 0
	143 JumpIfEqual {346}
	144 Move X26, 0x19BF000
	145 Move X27, 0x19C1000
	146 Move X29, 0x19C0000
	147 Move X26, [X26+3608]
	148 Move X27, [X27+3144]
	149 Move X29, [X29+440]
	150 Move TEMP, 0
	151 Not TEMP
	152 Move X28, TEMP
	153 Move X8, [X23]
	154 Move X1, [X26]
	155 NotImplemented "Instruction LDRH not yet implemented."
	156 Compare X9, 0
	157 JumpIfEqual {164}
	158 Move X10, [X8+176]
	159 Add X10, X10, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X9, X9, 1
	163 Add X10, X10, 16
	164 Move X0, X23
	165 Move W2, W31
	166 Call 0x1C5D788
	167 NotImplemented "Instruction LDRSW not yet implemented."
	168 Add X8, X8, X9
	169 Add X0, X8, 312
	170 Move X8, [X0]
	171 Move X1, [X0+8]
	172 Move X0, X23
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {268}
	178 Move X8, [X23]
	179 Move X1, [X26]
	180 NotImplemented "Instruction LDRH not yet implemented."
	181 Compare X9, 0
	182 JumpIfEqual {189}
	183 Move X10, [X8+176]
	184 Add X10, X10, 8
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Subtract X9, X9, 1
	188 Add X10, X10, 16
	189 Move W2, 1
	190 Move X0, X23
	191 Call 0x1C5D788
	192 Move W9, [X10]
	193 Add W9, W9, 1
	194 Add X8, X8, W9
	195 Add X0, X8, 312
	196 Move X8, [X0]
	197 Move X1, [X0+8]
	198 Move X0, X23
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move X8, [X22+32]
	201 Move X24, X0
	202 Move X8, [X8+192]
	203 Move X1, [X8+32]
	204 Move W8, [X1+309]
	205 Move TEMP, X8
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfEqual {212}
	209 Move X0, X1
	210 Call 0x1C5D684
	211 Move X1, X0
	212 Compare X24, 0
	213 JumpIfEqual {326}
	214 Move X8, [X24]
	215 Move X9, [X1+64]
	216 Move X8, [X8+64]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X0, X24
	219 Call 0x1C17E08
	220 Move X8, X0
	221 Move X0, [X27]
	222 Move W25, [X8]
	223 Move W9, [X0+224]
	224 Compare W9, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move X0, X31
	228 Call CultureInfo.get_InvariantCulture
	229 Move X8, [X22+32]
	230 Move X24, X0
	231 Move X8, [X8+192]
	232 Move X0, [X8+32]
	233 Move W8, [X0+309]
	234 Move TEMP, X8
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfEqual {239}
	238 Call 0x1C5D684
	239 Move [X31+8], X0
	240 Move [X31+16], X28
	241 Move [X31+24], W25
	242 Add X0, X31, 8
	243 Move X1, X24
	244 Move X2, X31
	245 Call Enum.ToString, X0, X1
	246 Move X1, X0
	247 Compare X21, 0
	248 JumpIfEqual {327}
	249 Move W10, [X21+28]
	250 Move X8, [X21+16]
	251 Move X9, [X29]
	252 Add W10, W10, 1
	253 Move [X21+28], W10
	254 Compare X8, 0
	255 JumpIfEqual {325}
	256 NotImplemented "Instruction LDRSW not yet implemented."
	257 Move W11, [X8+24]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Add W9, W10, 1
	260 Add X8, X8, X10
	261 Move [X21+24], W9
	262 Move [X8+32], X1
	263 Move X8, [X9+32]
	264 Move X8, [X8+192]
	265 Move X2, [X8+112]
	266 Move X0, X21
	267 Call List`1<Object>.AddWithResize, X0, X1
	268 Move X25, 0x19BF000
	269 Move X25, [X25+3584]
	270 Move X22, X31
	271 Move W24, 7
	272 Move X1, [X25]
	273 Move X0, X23
	274 Call 0x1C17E00
	275 Compare X0, 0
	276 JumpIfEqual {299}
	277 Move X8, [X0]
	278 Move X1, [X25]
	279 Move X23, X0
	280 NotImplemented "Instruction LDRH not yet implemented."
	281 Compare X9, 0
	282 JumpIfEqual {289}
	283 Move X10, [X8+176]
	284 Add X10, X10, 8
	285 NotImplemented "Instruction LDUR not yet implemented."
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Subtract X9, X9, 1
	288 Add X10, X10, 16
	289 Move X0, X23
	290 Move W2, W31
	291 Call 0x1C5D788
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 Add X8, X8, X9
	294 Add X0, X8, 312
	295 Move X8, [X0]
	296 Move X1, [X0+8]
	297 Move X0, X23
	298 NotImplemented "Instruction BLR not yet implemented."
	299 Compare X22, 0
	300 JumpIfNotEqual {347}
	301 NotImplemented "Instruction CMP not yet implemented."
	302 Compare W24, 0
	303 JumpIfNotEqual {311}
	304 Compare X20, 0
	305 JumpIfEqual {330}
	306 Move X0, X20
	307 Move X1, X21
	308 Move X2, X31
	309 Call UxmlEnumeration.set_values, X0, X1
	310 Move [X19+56], X20
	311 Move X20, [X31+112]
	312 Move X19, [X31+120]
	313 Move X22, [X31+96]
	314 Move X21, [X31+104]
	315 Move X24, [X31+80]
	316 Move X23, [X31+88]
	317 Move X26, [X31+64]
	318 Move X25, [X31+72]
	319 Move X28, [X31+48]
	320 Move X27, [X31+56]
	321 Move X29, [X31+32]
	322 Move X30, [X31+40]
	323 Add X31, X31, 128
	324 Return 
	325 Call 0x1C17F20
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Move X0, X24
	329 Call 0x1C181E0
	330 Call 0x1C17F20
	331 Move X0, 0x19C7000
	332 Move X0, [X0+1400]
	333 Call 0x1C17D08
	334 Call 0x1C17F10
	335 Move X19, X0
	336 Move X0, 0x19E9000
	337 Move X0, [X0+2760]
	338 Call 0x1C17D08
	339 Move X1, X0
	340 Move X0, X19
	341 Move X2, X31
	342 Call ArgumentException..ctor, X0, X1
	343 Move X0, X19
	344 Move X1, X22
	345 Call 0x1C17DEC
	346 Call 0x1C17F20
	347 Move X0, X22
	348 Call 0x1C17F18
	349 Move X25, 0x19BE000
	350 Move X25, [X25+3584]
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Call 0x3EB2AD0
	353 Move X22, [X0]
	354 Call 0x3EB2AE0
	355 Move W24, W31
	356 Move X19, X0
	357 Move X22, X31
	358 Move X19, X0
	359 Move X8, 0x19BE000
	360 Move X8, [X8+3584]
	361 Move X1, [X8]
	362 Move X0, X23
	363 Call 0x1C17E00
	364 Move X20, X0
	365 Compare X0, 0
	366 JumpIfEqual {390}
	367 Move X8, [X20]
	368 Move X10, 0x19BE000
	369 NotImplemented "Instruction LDRH not yet implemented."
	370 Move X10, [X10+3584]
	371 Move X1, [X10]
	372 Compare X9, 0
	373 JumpIfEqual {380}
	374 Move X10, [X8+176]
	375 Add X10, X10, 8
	376 NotImplemented "Instruction LDUR not yet implemented."
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Subtract X9, X9, 1
	379 Add X10, X10, 16
	380 Move X0, X20
	381 Move W2, W31
	382 Call 0x1C5D788
	383 NotImplemented "Instruction LDRSW not yet implemented."
	384 Add X8, X8, X9
	385 Add X0, X8, 312
	386 Move X8, [X0]
	387 Move X1, [X0+8]
	388 Move X0, X20
	389 NotImplemented "Instruction BLR not yet implemented."
	390 Compare X22, 0
	391 JumpIfNotEqual {394}
	392 Move X0, X19
	393 Call 0x1D2D690
	394 Move X0, X22
	395 Call 0x1C17F18
	396 Call 0x1991590

Method: T GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)

Disassembly:
	0x027360D0 BL 0x1C5C684
	0x027360D4 LDR X8, [X22 + 0x20]
	0x027360D8 LDR X8, [X8 + 0xC0]
	0x027360DC LDR X9, [X0 + 0xB8]
	0x027360E0 STR X24, [X9 + 0x10]
	0x027360E4 LDR X0, [X8 + 0x48]
	0x027360E8 LDRB W8, [X0 + 0x135]
	0x027360EC TBNZ X8, 0x0, 0x27360F4
	0x027360F0 BL 0x1C5C684
	0x027360F4 LDP V0, V1, [X29 - 0x80]
	0x027360F8 STP V0, V1, [X29 - 0x60]
	0x027360FC CBZ X19, 0x273619C
	0x02736100 LDR X8, [X22 + 0x20]
	0x02736104 SUB X3, X29, 0x40
	0x02736108 MOV X2, X19
	0x0273610C MOV X4, X23
	0x02736110 LDR X8, [X8 + 0xC0]
	0x02736114 LDR X1, [X8 + 0x60]
	0x02736118 LDR X0, [X1]
	0x0273611C STUR X23, [X29 - 0x40]
	0x02736120 LDR X8, [X1 + 0x10]
	0x02736124 BLR X8
	0x02736128 LDR X8, [X22 + 0x20]
	0x0273612C LDP V0, V1, [X29 - 0x60]
	0x02736130 SUB X3, X29, 0x40
	0x02736134 SUB X4, X29, 0xC
	0x02736138 LDR X8, [X8 + 0xC0]
	0x0273613C MOV X2, X19
	0x02736140 LDR X1, [X8 + 0x80]
	0x02736144 SUB X8, X29, 0xA0
	0x02736148 LDR X0, [X1]
	0x0273614C STP V0, V1, [X29 - 0xA0]
	0x02736150 STP X21, X8, [X29 - 0x40]
	0x02736154 STP X24, X23, [X29 - 0x30]
	0x02736158 STUR X20, [X29 - 0x20]
	0x0273615C LDR X8, [X1 + 0x10]
	0x02736160 BLR X8
	0x02736164 LDURB W8, [X29 - 0xC]
	0x02736168 LDR X9, [X26 + 0x28]
	0x0273616C LDUR X10, [X29 - 0x8]
	0x02736170 CMP W8, 0x0
	0x02736174 CSET W0, NE
	0x02736178 CMP X9, X10
	0x0273617C B.NE 0x27361A0
	0x02736180 ADD X31, X29, 0x0
	0x02736184 LDP X20, X19, [X31 + 0x40]
	0x02736188 LDP X22, X21, [X31 + 0x30]
	0x0273618C LDP X24, X23, [X31 + 0x20]
	0x02736190 LDP X26, X25, [X31 + 0x10]
	0x02736194 LDP X29, X30, [X31], #0x50
	0x02736198 RET
	0x0273619C BL 0x1C16F20
	0x027361A0 BL 0x3EB1B20
	0x027361A4 STR X30, [X31 - 0x30]!
	0x027361A8 STP X22, X21, [X31 + 0x10]
	0x027361AC STP X20, X19, [X31 + 0x20]
	0x027361B0 ADRP X21, 0x1CA4000
	0x027361B4 ADRP X22, 0x19BD000
	0x027361B8 LDRB W8, [X21 + 0x69B]
	0x027361BC LDR X22, [X22 + 0xAC8]
	0x027361C0 MOV X19, X1
	0x027361C4 MOV X20, X0
	0x027361C8 TBNZ X8, 0x0, 0x2736228
	0x027361CC ADRP X0, 0x19BD000
	0x027361D0 LDR X0, [X0 + 0xDF8]
	0x027361D4 BL 0x1C16CF4
	0x027361D8 ADRP X0, 0x19BD000
	0x027361DC LDR X0, [X0 + 0xAC8]
	0x027361E0 BL 0x1C16CF4
	0x027361E4 ADRP X0, 0x19E7000
	0x027361E8 LDR X0, [X0 + 0xAD0]
	0x027361EC BL 0x1C16CF4
	0x027361F0 ADRP X0, 0x19E5000
	0x027361F4 LDR X0, [X0 + 0x6F8]
	0x027361F8 BL 0x1C16CF4
	0x027361FC ADRP X0, 0x19E7000
	0x02736200 LDR X0, [X0 + 0xAD8]
	0x02736204 BL 0x1C16CF4
	0x02736208 ADRP X0, 0x19E7000
	0x0273620C LDR X0, [X0 + 0xAE0]
	0x02736210 BL 0x1C16CF4
	0x02736214 ADRP X0, 0x19E7000
	0x02736218 LDR X0, [X0 + 0xAE8]
	0x0273621C BL 0x1C16CF4
	0x02736220 MOVZ W8, 0x1
	0x02736224 STRB W8, [X21 + 0x69B]
	0x02736228 LDR X0, [X22]
	0x0273622C MOVZ W1, 0x7
	0x02736230 BL 0x1C16D6C
	0x02736234 CBZ X0, 0x2736338
	0x02736238 LDR W8, [X0 + 0x18]
	0x0273623C MOV X21, X0
	0x02736240 CBZ W8, 0x2736334
	0x02736244 ADRP X8, 0x19E7000
	0x02736248 LDR X8, [X8 + 0xAD8]
	0x0273624C LDR X8, [X8]
	0x02736250 STR X8, [X21 + 0x20]
	0x02736254 CBZ X19, 0x2736338
	0x02736258 LDR X8, [X19]
	0x0273625C MOV X0, X19
	0x02736260 LDP X9, X1, [X8 + 0x1A8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move V1, [X2]
	009 Move V0, [X2+16]
	010 Move X20, X3
	011 Move X19, X1
	012 Move X21, X0
	013 Move [X31+64], V1
	014 Move [X31+72], V0
	015 Move X8, [X3+32]
	016 Move X8, [X8+192]
	017 Move X8, [X8+72]
	018 Move W9, [X8+309]
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {26}
	023 Move X0, X8
	024 Call 0x1C5D684
	025 Move X8, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X8, [X20+32]
	032 Move X8, [X8+192]
	033 Move X0, [X8+72]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Move X8, [X0+184]
	041 Move X22, [X8+8]
	042 Compare X22, 0
	043 JumpIfEqual {46}
	044 Move V0, [X31+64]
	045 Move V1, [X31+80]
	046 Move V0, [X31+64]
	047 Move V1, [X31+80]
	048 Move [X31], V0
	049 Move [X31+8], V1
	050 Move X8, [X20+32]
	051 Move X8, [X8+192]
	052 Move X0, [X8+72]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X8, [X20+32]
	064 Move X8, [X8+192]
	065 Move X0, [X8+72]
	066 Move W9, [X0+309]
	067 Move TEMP, X9
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {74}
	071 Call 0x1C5D684
	072 Move X8, [X20+32]
	073 Move X8, [X8+192]
	074 Move X8, [X8+64]
	075 Move X9, [X0+184]
	076 Move W10, [X8+309]
	077 Move X23, [X9]
	078 Move TEMP, X10
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {85}
	082 Move X0, X8
	083 Call 0x1C5D684
	084 Move X8, X0
	085 Move X0, X8
	086 Call 0x1C17F10
	087 Move X8, [X20+32]
	088 Move X1, X23
	089 Move X22, X0
	090 Move X8, [X8+192]
	091 Move X2, [X8+80]
	092 Move X3, [X8+88]
	093 Call Func`3<Object, Int32Enum, Int32Enum>..ctor, X0, X1, X2
	094 Move X8, [X20+32]
	095 Move X8, [X8+192]
	096 Move X0, [X8+72]
	097 Move W9, [X0+309]
	098 Move TEMP, X9
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {105}
	102 Call 0x1C5D684
	103 Move X8, [X20+32]
	104 Move X8, [X8+192]
	105 Move X9, [X0+184]
	106 Move [X9+8], X22
	107 Move X0, [X8+72]
	108 Move W8, [X0+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {114}
	113 Call 0x1C5D684
	114 Move V0, [X31]
	115 Move V1, [X31+16]
	116 Move [X31+32], V0
	117 Move [X31+40], V1
	118 Compare X21, 0
	119 JumpIfEqual {141}
	120 Move X8, [X20+32]
	121 Move W4, [X21+64]
	122 Move V0, [X31+32]
	123 Move V1, [X31+48]
	124 Add X2, X31, 64
	125 Move X8, [X8+192]
	126 Move X0, X21
	127 Move X1, X19
	128 Move X3, X22
	129 Move X5, [X8+104]
	130 Move [X31+64], V0
	131 Move [X31+72], V1
	132 Call UxmlAttributeDescription.GetValueFromBag, X0, X1, X2, X3, X4
	133 Move X20, [X31+128]
	134 Move X19, [X31+136]
	135 Move X22, [X31+112]
	136 Move X21, [X31+120]
	137 Move X30, [X31+96]
	138 Move X23, [X31+104]
	139 Add X31, X31, 144
	140 Return X0
	141 Call 0x1C17F20

Method: System.Boolean TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, ref T value)

Disassembly:
	0x02736264 BLR X9
	0x02736268 LDR W8, [X21 + 0x18]
	0x0273626C CMP W8, 0x1
	0x02736270 B.LS 0x2736334
	0x02736274 CMP W8, 0x2
	0x02736278 STR X0, [X21 + 0x28]
	0x0273627C B.EQ 0x2736334
	0x02736280 ADRP X9, 0x19E7000
	0x02736284 LDR X9, [X9 + 0xAE0]
	0x02736288 CMP W8, 0x3
	0x0273628C LDR X9, [X9]
	0x02736290 STR X9, [X21 + 0x30]
	0x02736294 B.LS 0x2736334
	0x02736298 CMP W8, 0x4
	0x0273629C STR X20, [X21 + 0x38]
	0x027362A0 B.EQ 0x2736334
	0x027362A4 ADRP X8, 0x19E7000
	0x027362A8 LDR X8, [X8 + 0xAD0]
	0x027362AC ADRP X9, 0x19BD000
	0x027362B0 ADRP X20, 0x19E7000
	0x027362B4 LDR X8, [X8]
	0x027362B8 LDR X9, [X9 + 0xDF8]
	0x027362BC STR X8, [X21 + 0x40]
	0x027362C0 LDR X0, [X9]
	0x027362C4 LDR W8, [X0 + 0xE0]
	0x027362C8 LDR X20, [X20 + 0xAE8]
	0x027362CC CBNZ W8, 0x27362D4
	0x027362D0 BL 0x1C16DFC
	0x027362D4 MOV X0, X19
	0x027362D8 MOV X1, X31
	0x027362DC BL 0x33B03E4
	0x027362E0 LDR X8, [X20]
	0x027362E4 MOV X1, X0
	0x027362E8 MOV X2, X31
	0x027362EC MOV X0, X8
	0x027362F0 BL 0x3227FF8
	0x027362F4 LDR W8, [X21 + 0x18]
	0x027362F8 CMP W8, 0x5
	0x027362FC B.LS 0x2736334
	0x02736300 CMP W8, 0x6
	0x02736304 STR X0, [X21 + 0x48]
	0x02736308 B.EQ 0x2736334
	0x0273630C ADRP X8, 0x19E5000
	0x02736310 LDR X8, [X8 + 0x6F8]
	0x02736314 MOV X0, X21
	0x02736318 LDP X20, X19, [X31 + 0x20]
	0x0273631C MOV X1, X31
	0x02736320 LDR X8, [X8]
	0x02736324 STR X8, [X21 + 0x50]
	0x02736328 LDP X22, X21, [X31 + 0x10]
	0x0273632C LDR X30, [X31], #0x30
	0x02736330 B 0x32278CC
	0x02736334 BL 0x1C16F28
	0x02736338 BL 0x1C16F20
	0x0273633C STR X30, [X31 - 0x30]!
	0x02736340 STP X22, X21, [X31 + 0x10]
	0x02736344 STP X20, X19, [X31 + 0x20]
	0x02736348 ADRP X21, 0x1CA4000
	0x0273634C LDRB W8, [X21 + 0x69C]
	0x02736350 MOV X20, X1
	0x02736354 MOV X19, X0
	0x02736358 TBNZ X8, 0x0, 0x273637C
	0x0273635C ADRP X0, 0x19E7000
	0x02736360 LDR X0, [X0 + 0xAF0]
	0x02736364 BL 0x1C16CF4
	0x02736368 ADRP X0, 0x19E7000
	0x0273636C LDR X0, [X0 + 0xAF8]
	0x02736370 BL 0x1C16CF4
	0x02736374 MOVZ W8, 0x1
	0x02736378 STRB W8, [X21 + 0x69C]
	0x0273637C CBZ X20, 0x27363C4
	0x02736380 LDR X8, [X20]
	0x02736384 ADRP X21, 0x19E7000
	0x02736388 ADRP X22, 0x19E7000
	0x0273638C MOV X0, X20
	0x02736390 LDP X9, X1, [X8 + 0x1A8]
	0x02736394 LDR X21, [X21 + 0xAF8]
	0x02736398 LDR X22, [X22 + 0xAF0]
	0x0273639C BLR X9
	0x027363A0 LDR X1, [X21]
	0x027363A4 LDR X3, [X22]
	0x027363A8 MOV X2, X0
	0x027363AC MOV X0, X19
	0x027363B0 LDP X20, X19, [X31 + 0x20]
	0x027363B4 LDP X22, X21, [X31 + 0x10]
	0x027363B8 MOV X4, X31
	0x027363BC LDR X30, [X31], #0x30
	0x027363C0 B 0x32277C4
	0x027363C4 BL 0x1C16F20
	0x027363C8 LDR X8, [X1 + 0x20]
	0x027363CC LDR X8, [X8 + 0xC0]
	0x027363D0 LDR X8, [X8]
	0x027363D4 LDR X8, [X8 + 0x20]
	0x027363D8 LDR X8, [X8 + 0xC0]
	0x027363DC LDR X1, [X8 + 0x20]
	0x027363E0 B 0x28CA2C8
	0x027363E4 SUB X31, X31, 0x70
	0x027363E8 STR X30, [X31 + 0x40]
	0x027363EC STP X22, X21, [X31 + 0x50]
	0x027363F0 STP X20, X19, [X31 + 0x60]
	0x027363F4 LDR X8, [X3 + 0x20]
	0x027363F8 MOV X22, X0
	0x027363FC MOV X21, X2
	0x02736400 MOV X19, X1
	0x02736404 LDR X8, [X8 + 0xC0]
	0x02736408 LDR X8, [X8]
	0x0273640C MOV X0, X8

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move V1, [X2]
	010 Move V0, [X2+16]
	011 Move X21, X4
	012 Move X19, X3
	013 Move X20, X1
	014 Move [X31+64], V1
	015 Move [X31+72], V0
	016 Move X8, [X4+32]
	017 Move X22, X0
	018 Move X8, [X8+192]
	019 Move X8, [X8+72]
	020 Move W9, [X8+309]
	021 Move TEMP, X9
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {28}
	025 Move X0, X8
	026 Call 0x1C5D684
	027 Move X8, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Move X8, [X21+32]
	034 Move X8, [X8+192]
	035 Move X0, [X8+72]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+184]
	043 Move X23, [X8+16]
	044 Compare X23, 0
	045 JumpIfEqual {48}
	046 Move V0, [X31+64]
	047 Move V1, [X31+80]
	048 Move V0, [X31+64]
	049 Move V1, [X31+80]
	050 Move [X31], V0
	051 Move [X31+8], V1
	052 Move X8, [X21+32]
	053 Move X8, [X8+192]
	054 Move X0, [X8+72]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X8, [X21+32]
	066 Move X8, [X8+192]
	067 Move X0, [X8+72]
	068 Move W9, [X0+309]
	069 Move TEMP, X9
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfEqual {76}
	073 Call 0x1C5D684
	074 Move X8, [X21+32]
	075 Move X8, [X8+192]
	076 Move X8, [X8+64]
	077 Move X9, [X0+184]
	078 Move W10, [X8+309]
	079 Move X24, [X9]
	080 Move TEMP, X10
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfEqual {87}
	084 Move X0, X8
	085 Call 0x1C5D684
	086 Move X8, X0
	087 Move X0, X8
	088 Call 0x1C17F10
	089 Move X8, [X21+32]
	090 Move X1, X24
	091 Move X23, X0
	092 Move X8, [X8+192]
	093 Move X2, [X8+112]
	094 Move X3, [X8+88]
	095 Call Func`3<Object, Int32Enum, Int32Enum>..ctor, X0, X1, X2
	096 Move X8, [X21+32]
	097 Move X8, [X8+192]
	098 Move X0, [X8+72]
	099 Move W9, [X0+309]
	100 Move TEMP, X9
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfEqual {107}
	104 Call 0x1C5D684
	105 Move X8, [X21+32]
	106 Move X8, [X8+192]
	107 Move X9, [X0+184]
	108 Move [X9+16], X23
	109 Move X0, [X8+72]
	110 Move W8, [X0+309]
	111 Move TEMP, X8
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {116}
	115 Call 0x1C5D684
	116 Move V0, [X31]
	117 Move V1, [X31+16]
	118 Move [X31+32], V0
	119 Move [X31+40], V1
	120 Compare X22, 0
	121 JumpIfEqual {146}
	122 Move X8, [X21+32]
	123 Move W4, [X22+64]
	124 Move V0, [X31+32]
	125 Move V1, [X31+48]
	126 Add X2, X31, 64
	127 Move X8, [X8+192]
	128 Move X0, X22
	129 Move X1, X20
	130 Move X3, X23
	131 Move X6, [X8+128]
	132 Move X5, X19
	133 Move [X31+64], V0
	134 Move [X31+72], V1
	135 Call UxmlAttributeDescription.TryGetValueFromBag, X0, X1, X2, X3, X4, X5
	136 Move X20, [X31+144]
	137 Move X19, [X31+152]
	138 Move X22, [X31+128]
	139 Move X21, [X31+136]
	140 Move X24, [X31+112]
	141 Move X23, [X31+120]
	142 Move X30, [X31+96]
	143 And W0, W0, 1
	144 Add X31, X31, 160
	145 Return X0
	146 Call 0x1C17F20

Method: U ConvertValueToEnum(System.String v, U defaultValue)

Disassembly:
	0x0213DDDC STP X22, X21, [X31 + 0x10]
	0x0213DDE0 STP X20, X19, [X31 + 0x20]
	0x0213DDE4 LDR X8, [X2 + 0x38]
	0x0213DDE8 MOV X20, X2
	0x0213DDEC MOV X19, X1
	0x0213DDF0 MOV X21, X0
	0x0213DDF4 CBNZ X8, 0x213DE04
	0x0213DDF8 MOV X0, X20
	0x0213DDFC BL 0x1C5C6E0
	0x0213DE00 LDR X8, [X20 + 0x38]
	0x0213DE04 LDR X0, [X8 + 0x8]
	0x0213DE08 LDP X22, X21, [X21 + 0x20]
	0x0213DE0C LDRB W8, [X0 + 0x135]
	0x0213DE10 TBNZ X8, 0x0, 0x213DE18
	0x0213DE14 BL 0x1C5C684
	0x0213DE18 BL 0x1C16F10
	0x0213DE1C LDR X8, [X20 + 0x38]
	0x0213DE20 MOV X1, X22
	0x0213DE24 MOV X2, X21
	0x0213DE28 MOV X3, X19
	0x0213DE2C LDR X4, [X8 + 0x10]
	0x0213DE30 MOV X20, X0
	0x0213DE34 BL 0x286D1D8
	0x0213DE38 MOV X0, X20
	0x0213DE3C LDP X20, X19, [X31 + 0x20]
	0x0213DE40 LDP X22, X21, [X31 + 0x10]
	0x0213DE44 LDR X30, [X31], #0x30
	0x0213DE48 RET
	0x0213DE4C STR X30, [X31 - 0x30]!
	0x0213DE50 STP X22, X21, [X31 + 0x10]
	0x0213DE54 STP X20, X19, [X31 + 0x20]
	0x0213DE58 LDR X8, [X2 + 0x38]
	0x0213DE5C MOV X20, X2
	0x0213DE60 MOV X19, X1
	0x0213DE64 MOV X21, X0
	0x0213DE68 CBNZ X8, 0x213DE78
	0x0213DE6C MOV X0, X20
	0x0213DE70 BL 0x1C5C6E0
	0x0213DE74 LDR X8, [X20 + 0x38]
	0x0213DE78 LDR X0, [X8 + 0x8]
	0x0213DE7C LDP X22, X21, [X21 + 0x20]
	0x0213DE80 LDRB W8, [X0 + 0x135]
	0x0213DE84 TBNZ X8, 0x0, 0x213DE8C
	0x0213DE88 BL 0x1C5C684
	0x0213DE8C BL 0x1C16F10
	0x0213DE90 LDR X8, [X20 + 0x38]
	0x0213DE94 MOV X1, X22
	0x0213DE98 MOV X2, X21
	0x0213DE9C MOV X3, X19
	0x0213DEA0 LDR X4, [X8 + 0x10]
	0x0213DEA4 MOV X20, X0
	0x0213DEA8 BL 0x286D5E0
	0x0213DEAC MOV X0, X20
	0x0213DEB0 LDP X20, X19, [X31 + 0x20]
	0x0213DEB4 LDP X22, X21, [X31 + 0x10]
	0x0213DEB8 LDR X30, [X31], #0x30
	0x0213DEBC RET
	0x0213DEC0 STR X30, [X31 - 0x30]!
	0x0213DEC4 STP X22, X21, [X31 + 0x10]
	0x0213DEC8 STP X20, X19, [X31 + 0x20]
	0x0213DECC LDR X8, [X2 + 0x38]
	0x0213DED0 MOV X20, X2
	0x0213DED4 MOV X19, X1
	0x0213DED8 MOV X21, X0
	0x0213DEDC CBNZ X8, 0x213DEEC
	0x0213DEE0 MOV X0, X20
	0x0213DEE4 BL 0x1C5C6E0
	0x0213DEE8 LDR X8, [X20 + 0x38]
	0x0213DEEC LDR X0, [X8 + 0x8]
	0x0213DEF0 LDP X22, X21, [X21 + 0x28]
	0x0213DEF4 LDRB W8, [X0 + 0x135]
	0x0213DEF8 TBNZ X8, 0x0, 0x213DF00
	0x0213DEFC BL 0x1C5C684
	0x0213DF00 BL 0x1C16F10
	0x0213DF04 LDR X8, [X20 + 0x38]
	0x0213DF08 MOV X1, X22
	0x0213DF0C MOV X2, X21
	0x0213DF10 MOV X3, X19
	0x0213DF14 LDR X4, [X8 + 0x10]
	0x0213DF18 MOV X20, X0
	0x0213DF1C BL 0x286EE40
	0x0213DF20 MOV X0, X20
	0x0213DF24 LDP X20, X19, [X31 + 0x20]
	0x0213DF28 LDP X22, X21, [X31 + 0x10]
	0x0213DF2C LDR X30, [X31], #0x30
	0x0213DF30 RET
	0x0213DF34 STR X30, [X31 - 0x30]!
	0x0213DF38 STP X22, X21, [X31 + 0x10]
	0x0213DF3C STP X20, X19, [X31 + 0x20]
	0x0213DF40 LDR X8, [X2 + 0x38]
	0x0213DF44 MOV X20, X2
	0x0213DF48 MOV X19, X1
	0x0213DF4C MOV X21, X0
	0x0213DF50 CBNZ X8, 0x213DF60
	0x0213DF54 MOV X0, X20
	0x0213DF58 BL 0x1C5C6E0
	0x0213DF5C LDR X8, [X20 + 0x38]
	0x0213DF60 LDR X0, [X8 + 0x8]
	0x0213DF64 LDP X22, X21, [X21 + 0x28]
	0x0213DF68 LDRB W8, [X0 + 0x135]
	0x0213DF6C TBNZ X8, 0x0, 0x213DF74
	0x0213DF70 BL 0x1C5C684
	0x0213DF74 BL 0x1C16F10
	0x0213DF78 LDR X8, [X20 + 0x38]
	0x0213DF7C MOV X1, X22
	0x0213DF80 MOV X2, X21
	0x0213DF84 MOV X3, X19
	0x0213DF88 LDR X4, [X8 + 0x10]
	0x0213DF8C MOV X20, X0
	0x0213DF90 BL 0x286F668
	0x0213DF94 MOV X0, X20
	0x0213DF98 LDP X20, X19, [X31 + 0x20]
	0x0213DF9C LDP X22, X21, [X31 + 0x10]
	0x0213DFA0 LDR X30, [X31], #0x30
	0x0213DFA4 RET
	0x0213DFA8 STR X30, [X31 - 0x30]!
	0x0213DFAC STP X22, X21, [X31 + 0x10]
	0x0213DFB0 STP X20, X19, [X31 + 0x20]
	0x0213DFB4 LDR X8, [X2 + 0x38]
	0x0213DFB8 MOV X20, X2
	0x0213DFBC MOV X19, X1
	0x0213DFC0 MOV X21, X0
	0x0213DFC4 CBNZ X8, 0x213DFD4
	0x0213DFC8 MOV X0, X20
	0x0213DFCC BL 0x1C5C6E0
	0x0213DFD0 LDR X8, [X20 + 0x38]
	0x0213DFD4 LDR X0, [X8 + 0x8]
	0x0213DFD8 LDP X22, X21, [X21 + 0x28]
	0x0213DFDC LDRB W8, [X0 + 0x135]
	0x0213DFE0 TBNZ X8, 0x0, 0x213DFE8
	0x0213DFE4 BL 0x1C5C684
	0x0213DFE8 BL 0x1C16F10
	0x0213DFEC LDR X8, [X20 + 0x38]
	0x0213DFF0 MOV X1, X22
	0x0213DFF4 MOV X2, X21
	0x0213DFF8 MOV X3, X19
	0x0213DFFC LDR X4, [X8 + 0x10]
	0x0213E000 MOV X20, X0
	0x0213E004 BL 0x2871D38
	0x0213E008 MOV X0, X20
	0x0213E00C LDP X20, X19, [X31 + 0x20]
	0x0213E010 LDP X22, X21, [X31 + 0x10]
	0x0213E014 LDR X30, [X31], #0x30
	0x0213E018 RET
	0x0213E01C STR X30, [X31 - 0x30]!
	0x0213E020 STP X22, X21, [X31 + 0x10]
	0x0213E024 STP X20, X19, [X31 + 0x20]
	0x0213E028 LDR X8, [X2 + 0x38]
	0x0213E02C MOV X20, X2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X21, X2
	009 Move W19, W1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {24}
	013 Move X0, 0x1FB7000
	014 Move X0, [X0+3576]
	015 Call 0x1C17CF4
	016 Move X0, 0x1FB7000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X8, [X21+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X21
	023 Call 0x1C5D6E0
	024 Move X0, X20
	025 Move X1, X31
	026 Call String.IsNullOrEmpty, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {76}
	031 Move X8, 0x1FB7000
	032 Move X8, [X8+1728]
	033 Move X0, [X8]
	034 Move X8, [X21+56]
	035 Move W9, [X0+224]
	036 Move X22, [X8+8]
	037 Compare W9, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X22
	041 Move X1, X31
	042 Call Type.GetTypeFromHandle, X0
	043 Move X8, 0x1FB7000
	044 Move X8, [X8+3576]
	045 Move X22, X0
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move W2, 1
	052 Move X0, X22
	053 Move X1, X20
	054 Move X3, X31
	055 Call Enum.Parse, X0, X1, X2
	056 Move X8, [X21+56]
	057 Move X22, X0
	058 Move X1, [X8]
	059 Move W8, [X1+309]
	060 Move TEMP, X8
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfEqual {67}
	064 Move X0, X1
	065 Call 0x1C5D684
	066 Move X1, X0
	067 Compare X22, 0
	068 JumpIfEqual {84}
	069 Move X8, [X22]
	070 Move X9, [X1+64]
	071 Move X8, [X8+64]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X0, X22
	074 Call 0x1C17E08
	075 Move W19, [X0]
	076 Move W0, W19
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Move X23, [X31+56]
	083 Return X0
	084 Call 0x1C17F20
	085 Move X0, X22
	086 Call 0x1C181E0
	087 Move X22, X0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, X22
	090 Call 0x3EB2AD0
	091 Move X23, X0
	092 Move X0, 0x1FBF000
	093 Move X0, [X0+1400]
	094 Call 0x1C17D08
	095 Move X8, [X23]
	096 Move X1, [X8]
	097 Call 0x1C18270
	098 Move W22, W0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {113}
	103 Move X0, 0x1FB7000
	104 Move X0, [X0+2136]
	105 Call 0x1C17D08
	106 Move X8, [X23]
	107 Move X1, [X8]
	108 Call 0x1C18270
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {160}
	113 Call 0x3EB2AE0
	114 Move X8, [X21+56]
	115 Move X0, 0x1FB7000
	116 Move X23, [X8+8]
	117 Move X0, [X0+1728]
	118 Call 0x1C17D08
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X23
	124 Move X1, X31
	125 Call Type.GetTypeFromHandle, X0
	126 Move X8, [X21+32]
	127 Move X21, X0
	128 Move W9, [X8+309]
	129 Move TEMP, X9
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {136}
	133 Move X0, X8
	134 Call 0x1C5D684
	135 Move X8, X0
	136 Move X8, [X8+192]
	137 Move TEMP, X22
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {145}
	141 Move X2, [X8+136]
	142 Move X0, X20
	143 Move X1, X21
	144 Call 0x2736410, X0, X1
	145 Move X2, [X8+152]
	146 Move X0, X20
	147 Move X1, X21
	148 Call 0x27365A8, X0, X1
	149 Move X20, X0
	150 Move X0, 0x1FB7000
	151 Move X0, [X0+2600]
	152 Call 0x1C17D08
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {157}
	156 Call 0x1C17DFC
	157 Move X0, X20
	158 Move X1, X31
	159 Call Debug.LogError, X0
	160 Move W0, 8
	161 Call 0x3EB2AF0
	162 Move X8, [X23]
	163 Move [X0], X8
	164 Move X1, 0x1D77000
	165 Add X1, X1, 3672
	166 Move X2, X31
	167 Call 0x3EB2B00
	168 Move X22, X0
	169 Call 0x3EB2AE0
	170 Move X0, X22
	171 Call 0x1D2D690
	172 Call 0x1991590

Method: System.String GetEnumNameErrorMessage(System.String v, System.Type enumType)

Disassembly:
	0x02736410 BL 0x2278924
	0x02736414 MOV X20, X0
	0x02736418 LDP V0, V1, [X21]
	0x0273641C LDR X0, [X22 + 0x10]
	0x02736420 STP V0, V1, [X31]
	0x02736424 CBZ X0, 0x2736464
	0x02736428 LDR X8, [X0]
	0x0273642C LDP V0, V1, [X31]
	0x02736430 ADD X3, X31, 0x20
	0x02736434 MOV X1, X20
	0x02736438 LDR X9, [X8 + 0x178]
	0x0273643C STP V0, V1, [X31 + 0x20]
	0x02736440 LDR X4, [X8 + 0x180]
	0x02736444 MOV X2, X19
	0x02736448 BLR X9
	0x0273644C MOV X0, X20
	0x02736450 LDP X20, X19, [X31 + 0x60]
	0x02736454 LDP X22, X21, [X31 + 0x50]
	0x02736458 LDR X30, [X31 + 0x40]
	0x0273645C ADD X31, X31, 0x70
	0x02736460 RET
	0x02736464 BL 0x1C16F20
	0x02736468 LDR X8, [X1 + 0x20]
	0x0273646C LDR X8, [X8 + 0xC0]
	0x02736470 LDR X1, [X8 + 0x20]
	0x02736474 B 0x28CA2C8
	0x02736478 LDR X0, [X0 + 0x10]
	0x0273647C RET
	0x02736480 SUB X31, X31, 0xA0
	0x02736484 STR X30, [X31 + 0x60]
	0x02736488 STP X24, X23, [X31 + 0x70]
	0x0273648C STP X22, X21, [X31 + 0x80]
	0x02736490 STP X20, X19, [X31 + 0x90]
	0x02736494 ADRP X24, 0x1CA4000
	0x02736498 ADRP X23, 0x19E7000
	0x0273649C LDRB W8, [X24 + 0x69D]
	0x027364A0 LDR X23, [X23 + 0xB00]
	0x027364A4 MOV X19, X3
	0x027364A8 MOV X22, X2
	0x027364AC MOV X21, X1
	0x027364B0 MOV X20, X0
	0x027364B4 TBNZ X8, 0x0, 0x27364CC
	0x027364B8 ADRP X0, 0x19E7000
	0x027364BC LDR X0, [X0 + 0xB00]
	0x027364C0 BL 0x1C16CF4
	0x027364C4 MOVZ W8, 0x1
	0x027364C8 STRB W8, [X24 + 0x69D]
	0x027364CC LDR X0, [X23]
	0x027364D0 STP X31, X31, [X31 + 0x20]
	0x027364D4 STR X31, [X31 + 0x30]
	0x027364D8 LDR W8, [X0 + 0xE0]
	0x027364DC CBNZ W8, 0x27364E4
	0x027364E0 BL 0x1C16DFC
	0x027364E4 LDR X0, [X22 + 0x8]
	0x027364E8 CBZ X0, 0x273658C
	0x027364EC LDP V1, V0, [X22]
	0x027364F0 ADD X2, X31, 0x40
	0x027364F4 MOV X1, X21
	0x027364F8 STP V1, V0, [X31]
	0x027364FC LDR X8, [X19 + 0x20]
	0x02736500 LDR X8, [X8 + 0xC0]
	0x02736504 LDR X3, [X8 + 0x10]
	0x02736508 STP V1, V0, [X31 + 0x40]
	0x0273650C BL 0x22AA688
	0x02736510 CBZ X0, 0x273658C
	0x02736514 LDR X8, [X19 + 0x20]
	0x02736518 LDR X8, [X8 + 0xC0]
	0x0273651C LDR X1, [X8 + 0x20]
	0x02736520 ADD X8, X31, 0x40
	0x02736524 BL 0x301CB58
	0x02736528 LDR V0, [X31 + 0x4]
	0x0273652C LDR X8, [X31 + 0x50]
	0x02736530 STR V0, [X31 + 0x2]
	0x02736534 STR X8, [X31 + 0x30]
	0x02736538 LDR X8, [X19 + 0x20]
	0x0273653C LDR X8, [X8 + 0xC0]
	0x02736540 LDR X1, [X8 + 0x40]
	0x02736544 ADD X0, X31, 0x20
	0x02736548 BL 0x2BC4350
	0x0273654C MOV X21, X31
	0x02736550 TBZ X0, 0x0, 0x2736560
	0x02736554 LDR X22, [X31 + 0x30]
	0x02736558 MOVZ W23, 0x7
	0x0273655C B 0x2736568
	0x02736560 MOV X22, X31
	0x02736564 MOVZ W23, 0x8
	0x02736568 LDR X8, [X19 + 0x20]
	0x0273656C ADD X0, X31, 0x20
	0x02736570 LDR X8, [X8 + 0xC0]
	0x02736574 LDR X1, [X8 + 0x48]
	0x02736578 BL 0x2BC434C
	0x0273657C CBNZ X21, 0x27365AC
	0x02736580 ORR W8, W23, 0x8
	0x02736584 CMP W8, 0x8
	0x02736588 B.NE 0x2736590
	0x0273658C LDR X22, [X20 + 0x10]
	0x02736590 MOV X0, X22
	0x02736594 LDP X20, X19, [X31 + 0x90]
	0x02736598 LDP X22, X21, [X31 + 0x80]
	0x0273659C LDP X24, X23, [X31 + 0x70]
	0x027365A0 LDR X30, [X31 + 0x60]
	0x027365A4 ADD X31, X31, 0xA0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1CA5000
	007 Move X22, 0x19BE000
	008 Move W8, [X21+1688]
	009 Move X22, [X22+2760]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0x19BE000
	017 Move X0, [X0+3576]
	018 Call 0x1C17CF4
	019 Move X0, 0x19BE000
	020 Move X0, [X0+2760]
	021 Call 0x1C17CF4
	022 Move X0, 0x19E8000
	023 Move X0, [X0+2768]
	024 Call 0x1C17CF4
	025 Move X0, 0x19E6000
	026 Move X0, [X0+1784]
	027 Call 0x1C17CF4
	028 Move X0, 0x19E8000
	029 Move X0, [X0+2776]
	030 Call 0x1C17CF4
	031 Move X0, 0x19E8000
	032 Move X0, [X0+2784]
	033 Call 0x1C17CF4
	034 Move X0, 0x19E8000
	035 Move X0, [X0+2792]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1688], W8
	039 Move X0, [X22]
	040 Move W1, 7
	041 Call 0x1C17D6C
	042 Compare X0, 0
	043 JumpIfEqual {109}
	044 Move W8, [X0+24]
	045 Move X21, X0
	046 Compare W8, 0
	047 JumpIfEqual {108}
	048 Move X8, 0x19E8000
	049 Move X8, [X8+2776]
	050 Move X8, [X8]
	051 Move [X21+32], X8
	052 Compare X19, 0
	053 JumpIfEqual {109}
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move X9, [X8+424]
	057 Move X1, [X8+432]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move W8, [X21+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X21+40], X0
	063 Move X9, 0x19E8000
	064 Move X9, [X9+2784]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X9, [X9]
	067 Move [X21+48], X9
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move [X21+56], X20
	070 Move X8, 0x19E8000
	071 Move X8, [X8+2768]
	072 Move X9, 0x19BE000
	073 Move X20, 0x19E8000
	074 Move X8, [X8]
	075 Move X9, [X9+3576]
	076 Move [X21+64], X8
	077 Move X0, [X9]
	078 Move W8, [X0+224]
	079 Move X20, [X20+2792]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X19
	084 Move X1, X31
	085 Call Enum.GetNames, X0
	086 Move X8, [X20]
	087 Move X1, X0
	088 Move X2, X31
	089 Move X0, X8
	090 Call String.Join, X0, X1
	091 Move W8, [X21+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move [X21+72], X0
	095 Move X8, 0x19E6000
	096 Move X8, [X8+1784]
	097 Move X0, X21
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X1, X31
	101 Move X8, [X8]
	102 Move [X21+80], X8
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Call String.Concat, X0
	107 Return X0
	108 Call 0x1C17F28
	109 Call 0x1C17F20

Method: System.String GetEnumRangeErrorMessage(System.String v, System.Type enumType)

Disassembly:
	0x027365A8 RET
	0x027365AC MOV X0, X21
	0x027365B0 BL 0x1C16F18
	0x027365B4 CMP W1, 0x1
	0x027365B8 MOV X22, X0
	0x027365BC B.NE 0x27365DC
	0x027365C0 MOV X0, X22
	0x027365C4 BL 0x3EB1AD0
	0x027365C8 LDR X21, [X0]
	0x027365CC BL 0x3EB1AE0
	0x027365D0 MOV W23, W31
	0x027365D4 MOV X22, X31
	0x027365D8 B 0x2736568
	0x027365DC MOV X21, X31
	0x027365E0 B 0x27365E8
	0x027365E4 MOV X22, X0
	0x027365E8 LDR X8, [X19 + 0x20]
	0x027365EC LDR X8, [X8 + 0xC0]
	0x027365F0 LDR X1, [X8 + 0x48]
	0x027365F4 ADD X0, X31, 0x20
	0x027365F8 BL 0x2BC434C
	0x027365FC CBNZ X21, 0x2736608
	0x02736600 MOV X0, X22
	0x02736604 BL 0x1D2C690
	0x02736608 MOV X0, X21
	0x0273660C BL 0x1C16F18
	0x02736610 BL 0x1990590
	0x02736614 MOV X1, X31
	0x02736618 B 0x33BDD8C
	0x0273661C STP X29, X30, [X31 - 0x30]!
	0x02736620 STP X22, X21, [X31 + 0x10]
	0x02736624 STP X20, X19, [X31 + 0x20]
	0x02736628 ADD X29, X31, 0x0
	0x0273662C SUB X31, X31, 0x10
	0x02736630 MRS X22, 0xC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1CA5000
	007 Move W8, [X21+1689]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x19E8000
	015 Move X0, [X0+2800]
	016 Call 0x1C17CF4
	017 Move X0, 0x19E8000
	018 Move X0, [X0+2808]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1689], W8
	022 Compare X20, 0
	023 JumpIfEqual {45}
	024 Move X8, [X20]
	025 Move X21, 0x19E8000
	026 Move X22, 0x19E8000
	027 Move X0, X20
	028 Move X9, [X8+424]
	029 Move X1, [X8+432]
	030 Move X21, [X21+2808]
	031 Move X22, [X22+2800]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X1, [X21]
	034 Move X3, [X22]
	035 Move X2, X0
	036 Move X0, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X4, X31
	042 Move X30, [X31+48]
	043 Call String.Concat, X0, X1, X2, X3
	044 Return X0
	045 Call 0x1C17F20

