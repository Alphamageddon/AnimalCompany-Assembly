Type: UnityEngine.UIElements.StylePropertyAnimationSystem/Values`1/TransitionEventsFrameState

Method: System.Collections.Generic.Queue`1<UnityEngine.UIElements.EventBase> GetPooledQueue()

Disassembly:
	0x026F6B54 ADRP X20, 0x1CE4000
	0x026F6B58 LDRB W8, [X20 + 0x566]
	0x026F6B5C MOV X19, X0
	0x026F6B60 TBNZ X8, 0x0, 0x26F6B90
	0x026F6B64 ADRP X0, 0x1A27000
	0x026F6B68 LDR X0, [X0 + 0x870]
	0x026F6B6C BL 0x1C16CF4
	0x026F6B70 ADRP X0, 0x1A27000
	0x026F6B74 LDR X0, [X0 + 0x878]
	0x026F6B78 BL 0x1C16CF4
	0x026F6B7C ADRP X0, 0x1A27000
	0x026F6B80 LDR X0, [X0 + 0x880]
	0x026F6B84 BL 0x1C16CF4
	0x026F6B88 MOVZ W8, 0x1
	0x026F6B8C STRB W8, [X20 + 0x566]
	0x026F6B90 LDR X0, [X19 + 0x20]
	0x026F6B94 LDRB W8, [X0 + 0x135]
	0x026F6B98 TBNZ X8, 0x0, 0x26F6BA0
	0x026F6B9C BL 0x1C5C684
	0x026F6BA0 LDR X8, [X0 + 0xC0]
	0x026F6BA4 LDR X0, [X8 + 0x18]
	0x026F6BA8 LDRB W8, [X0 + 0x135]
	0x026F6BAC TBNZ X8, 0x0, 0x26F6BB4
	0x026F6BB0 BL 0x1C5C684
	0x026F6BB4 LDR W8, [X0 + 0xE0]
	0x026F6BB8 CBNZ W8, 0x26F6BC0
	0x026F6BBC BL 0x1C16DFC
	0x026F6BC0 LDR X0, [X19 + 0x20]
	0x026F6BC4 LDRB W8, [X0 + 0x135]
	0x026F6BC8 TBNZ X8, 0x0, 0x26F6BD0
	0x026F6BCC BL 0x1C5C684
	0x026F6BD0 LDR X8, [X0 + 0xC0]
	0x026F6BD4 ADRP X21, 0x1A27000
	0x026F6BD8 LDR X0, [X8 + 0x18]
	0x026F6BDC LDRB W8, [X0 + 0x135]
	0x026F6BE0 LDR X21, [X21 + 0x870]
	0x026F6BE4 TBNZ X8, 0x0, 0x26F6BEC
	0x026F6BE8 BL 0x1C5C684
	0x026F6BEC LDR X8, [X0 + 0xB8]
	0x026F6BF0 LDR X0, [X21]
	0x026F6BF4 ADRP X23, 0x1A27000
	0x026F6BF8 ADRP X22, 0x1A27000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1CE5000
	005 Move W8, [X20+1371]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1A28000
	012 Move X0, [X0+2040]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1371], W8
	016 Move X0, [X19+32]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Move X8, [X0+192]
	024 Move X0, [X8+8]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, [X19+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+8]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move X8, [X0+184]
	051 Move X0, [X8]
	052 Compare X0, 0
	053 JumpIfEqual {62}
	054 Move X8, 0x1A28000
	055 Move X8, [X8+2040]
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X1, [X8]
	059 Move X30, [X31+32]
	060 Call 0x24942C0, X0
	061 Return X0
	062 Call 0x1C17F20

Method: System.Void RegisterChange()

Disassembly:
	0x026F6BFC LDR X20, [X8]
	0x026F6C00 LDR X23, [X23 + 0x880]
	0x026F6C04 LDR X22, [X22 + 0x878]
	0x026F6C08 BL 0x1C16F10

ISIL:
	001 Move W8, [X0+40]
	002 Add W8, W8, 1
	003 Move [X0+40], W8
	004 Return 

Method: System.Void UnregisterChange()

Disassembly:
	0x026F6C0C LDR X8, [X19 + 0x20]
	0x026F6C10 MOV X21, X0
	0x026F6C14 LDRB W9, [X8 + 0x135]
	0x026F6C18 TBNZ X9, 0x0, 0x26F6C28

ISIL:
	001 Move W8, [X0+40]
	002 Subtract W8, W8, 1
	003 Move [X0+40], W8
	004 Return 

Method: System.Boolean StateChanged()

Disassembly:
	0x026F6C1C MOV X0, X8
	0x026F6C20 BL 0x1C5C684
	0x026F6C24 MOV X8, X0
	0x026F6C28 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void Clear()

Disassembly:
	0x026F6C2C MOV X0, X21
	0x026F6C30 MOV X1, X20
	0x026F6C34 MOV X3, X31
	0x026F6C38 LDR X2, [X8 + 0x20]
	0x026F6C3C BL 0x2D27AA8
	0x026F6C40 LDR X0, [X23]
	0x026F6C44 BL 0x1C16F10
	0x026F6C48 LDR X8, [X22]
	0x026F6C4C MOVZ W5, 0x1
	0x026F6C50 MOVZ W6, 0xA
	0x026F6C54 MOVZ W7, 0x2710
	0x026F6C58 MOV X1, X21
	0x026F6C5C MOV X2, X31
	0x026F6C60 MOV X3, X31
	0x026F6C64 MOV X4, X31
	0x026F6C68 MOV X20, X0
	0x026F6C6C STR X8, [X31]
	0x026F6C70 BL 0x249318C
	0x026F6C74 LDR X0, [X19 + 0x20]
	0x026F6C78 LDRB W8, [X0 + 0x135]
	0x026F6C7C TBNZ X8, 0x0, 0x26F6C84
	0x026F6C80 BL 0x1C5C684
	0x026F6C84 LDR X8, [X0 + 0xC0]
	0x026F6C88 LDR X0, [X8 + 0x8]
	0x026F6C8C LDRB W8, [X0 + 0x135]
	0x026F6C90 TBNZ X8, 0x0, 0x26F6C98
	0x026F6C94 BL 0x1C5C684
	0x026F6C98 LDR X8, [X0 + 0xB8]
	0x026F6C9C STR X20, [X8]
	0x026F6CA0 LDR X0, [X19 + 0x20]
	0x026F6CA4 LDRB W8, [X0 + 0x135]
	0x026F6CA8 TBNZ X8, 0x0, 0x26F6CB0
	0x026F6CAC BL 0x1C5C684
	0x026F6CB0 LDR X8, [X0 + 0xC0]
	0x026F6CB4 LDR X0, [X8 + 0x8]
	0x026F6CB8 LDRB W8, [X0 + 0x135]
	0x026F6CBC TBNZ X8, 0x0, 0x26F6CD4
	0x026F6CC0 LDP X20, X19, [X31 + 0x30]
	0x026F6CC4 LDP X22, X21, [X31 + 0x20]
	0x026F6CC8 LDP X30, X23, [X31 + 0x10]
	0x026F6CCC ADD X31, X31, 0x40
	0x026F6CD0 B 0x1C5C684
	0x026F6CD4 LDP X20, X19, [X31 + 0x30]
	0x026F6CD8 LDP X22, X21, [X31 + 0x20]
	0x026F6CDC LDP X30, X23, [X31 + 0x10]
	0x026F6CE0 ADD X31, X31, 0x40
	0x026F6CE4 RET
	0x026F6CE8 STR X30, [X31 - 0x20]!
	0x026F6CEC STP X20, X19, [X31 + 0x10]
	0x026F6CF0 ADRP X20, 0x1CE4000
	0x026F6CF4 LDRB W8, [X20 + 0x567]
	0x026F6CF8 MOV X19, X0
	0x026F6CFC TBNZ X8, 0x0, 0x26F6D14
	0x026F6D00 ADRP X0, 0x1A27000
	0x026F6D04 LDR X0, [X0 + 0x7F8]
	0x026F6D08 BL 0x1C16CF4
	0x026F6D0C MOVZ W8, 0x1
	0x026F6D10 STRB W8, [X20 + 0x567]
	0x026F6D14 LDR X0, [X19 + 0x20]
	0x026F6D18 LDRB W8, [X0 + 0x135]
	0x026F6D1C TBNZ X8, 0x0, 0x26F6D24
	0x026F6D20 BL 0x1C5C684
	0x026F6D24 LDR X8, [X0 + 0xC0]
	0x026F6D28 LDR X0, [X8 + 0x8]
	0x026F6D2C LDRB W8, [X0 + 0x135]
	0x026F6D30 TBNZ X8, 0x0, 0x26F6D38
	0x026F6D34 BL 0x1C5C684
	0x026F6D38 LDR W8, [X0 + 0xE0]
	0x026F6D3C CBNZ W8, 0x26F6D44
	0x026F6D40 BL 0x1C16DFC
	0x026F6D44 LDR X0, [X19 + 0x20]
	0x026F6D48 LDRB W8, [X0 + 0x135]
	0x026F6D4C TBNZ X8, 0x0, 0x26F6D54
	0x026F6D50 BL 0x1C5C684
	0x026F6D54 LDR X8, [X0 + 0xC0]
	0x026F6D58 LDR X0, [X8 + 0x8]
	0x026F6D5C LDRB W8, [X0 + 0x135]
	0x026F6D60 TBNZ X8, 0x0, 0x26F6D68
	0x026F6D64 BL 0x1C5C684
	0x026F6D68 LDR X8, [X0 + 0xB8]
	0x026F6D6C LDR X0, [X8]
	0x026F6D70 CBZ X0, 0x26F6D8C
	0x026F6D74 ADRP X8, 0x1A27000
	0x026F6D78 LDR X8, [X8 + 0x7F8]
	0x026F6D7C LDP X20, X19, [X31 + 0x10]
	0x026F6D80 LDR X1, [X8]
	0x026F6D84 LDR X30, [X31], #0x20
	0x026F6D88 B 0x24932C0
	0x026F6D8C BL 0x1C16F20
	0x026F6D90 LDR W8, [X0 + 0x28]
	0x026F6D94 ADD W8, W8, 0x1
	0x026F6D98 STR W8, [X0 + 0x28]
	0x026F6D9C RET
	0x026F6DA0 LDR W8, [X0 + 0x28]
	0x026F6DA4 SUB W8, W8, 0x1
	0x026F6DA8 STR W8, [X0 + 0x28]
	0x026F6DAC RET
	0x026F6DB0 LDR W8, [X0 + 0x28]
	0x026F6DB4 CMP W8, 0x0
	0x026F6DB8 CSET W0, GT
	0x026F6DBC RET
	0x026F6DC0 SUB X31, X31, 0xB0
	0x026F6DC4 STP X30, X27, [X31 + 0x60]
	0x026F6DC8 STP X26, X25, [X31 + 0x70]
	0x026F6DCC STP X24, X23, [X31 + 0x80]
	0x026F6DD0 STP X22, X21, [X31 + 0x90]
	0x026F6DD4 STP X20, X19, [X31 + 0xA0]
	0x026F6DD8 ADRP X21, 0x1CE4000
	0x026F6DDC LDRB W8, [X21 + 0x568]
	0x026F6DE0 MOV X20, X1
	0x026F6DE4 MOV X19, X0
	0x026F6DE8 TBNZ X8, 0x0, 0x26F6E60
	0x026F6DEC ADRP X0, 0x1A27000
	0x026F6DF0 LDR X0, [X0 + 0x800]
	0x026F6DF4 BL 0x1C16CF4
	0x026F6DF8 ADRP X0, 0x1A27000
	0x026F6DFC LDR X0, [X0 + 0x808]
	0x026F6E00 BL 0x1C16CF4
	0x026F6E04 ADRP X0, 0x1A27000
	0x026F6E08 LDR X0, [X0 + 0x810]
	0x026F6E0C BL 0x1C16CF4
	0x026F6E10 ADRP X0, 0x1A27000
	0x026F6E14 LDR X0, [X0 + 0x818]
	0x026F6E18 BL 0x1C16CF4
	0x026F6E1C ADRP X0, 0x1A27000
	0x026F6E20 LDR X0, [X0 + 0x820]
	0x026F6E24 BL 0x1C16CF4
	0x026F6E28 ADRP X0, 0x1A27000
	0x026F6E2C LDR X0, [X0 + 0x828]
	0x026F6E30 BL 0x1C16CF4
	0x026F6E34 ADRP X0, 0x1A27000
	0x026F6E38 LDR X0, [X0 + 0x830]
	0x026F6E3C BL 0x1C16CF4
	0x026F6E40 ADRP X0, 0x1A27000
	0x026F6E44 LDR X0, [X0 + 0x838]
	0x026F6E48 BL 0x1C16CF4
	0x026F6E4C ADRP X0, 0x1A27000
	0x026F6E50 LDR X0, [X0 + 0x840]
	0x026F6E54 BL 0x1C16CF4
	0x026F6E58 MOVZ W8, 0x1
	0x026F6E5C STRB W8, [X21 + 0x568]
	0x026F6E60 MOVI V0.2D, 0x0
	0x026F6E64 STP V0, V0, [X31 + 0x40]
	0x026F6E68 STR V0, [X31 + 0x3]
	0x026F6E6C LDR X0, [X19 + 0x18]
	0x026F6E70 CBZ X0, 0x26F6F9C
	0x026F6E74 ADRP X8, 0x1A27000
	0x026F6E78 LDR X8, [X8 + 0x810]
	0x026F6E7C ADRP X25, 0x1A27000
	0x026F6E80 ADRP X26, 0x1A27000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], X30
	003 Move [X31+104], X27
	004 Move [X31+112], X26
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move X21, 0x1CE5000
	013 Move W8, [X21+1372]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {49}
	020 Move X0, 0x1A28000
	021 Move X0, [X0+2048]
	022 Call 0x1C17CF4
	023 Move X0, 0x1A28000
	024 Move X0, [X0+2056]
	025 Call 0x1C17CF4
	026 Move X0, 0x1A28000
	027 Move X0, [X0+2064]
	028 Call 0x1C17CF4
	029 Move X0, 0x1A28000
	030 Move X0, [X0+2072]
	031 Call 0x1C17CF4
	032 Move X0, 0x1A28000
	033 Move X0, [X0+2080]
	034 Call 0x1C17CF4
	035 Move X0, 0x1A28000
	036 Move X0, [X0+2088]
	037 Call 0x1C17CF4
	038 Move X0, 0x1A28000
	039 Move X0, [X0+2096]
	040 Call 0x1C17CF4
	041 Move X0, 0x1A28000
	042 Move X0, [X0+2104]
	043 Call 0x1C17CF4
	044 Move X0, 0x1A28000
	045 Move X0, [X0+2112]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+1372], W8
	049 NotImplemented "Instruction MOVI not yet implemented."
	050 Move [X31+64], V0
	051 Move [X31+72], V0
	052 Move [X31+3], V0
	053 Move X0, [X19+24]
	054 Compare X0, 0
	055 JumpIfEqual {150}
	056 Move X8, 0x1A28000
	057 Move X8, [X8+2064]
	058 Move X25, 0x1A28000
	059 Move X26, 0x1A28000
	060 Move X27, 0x1A28000
	061 Move X25, [X25+2080]
	062 Move X26, [X26+2112]
	063 Move X27, [X27+2104]
	064 Move X1, [X8]
	065 Move X23, 0x1A28000
	066 Move X22, 0x1A28000
	067 Move X24, 0x1A28000
	068 Move X23, [X23+2056]
	069 Move X22, [X22+2048]
	070 Move X24, [X24+2072]
	071 Add X8, X31, 0
	072 Call Dictionary`2<ElementPropertyPair, Object>.GetEnumerator, X0
	073 Move V0, [X31]
	074 Move V1, [X31+16]
	075 Move V2, [X31+2]
	076 Move [X31+48], V0
	077 Move [X31+56], V1
	078 Move [X31+5], V2
	079 Move X1, [X25]
	080 Add X0, X31, 48
	081 Call Enumerator<ElementPropertyPair, Object>.MoveNext, X0
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {121}
	086 Move X21, [X31+80]
	087 Compare X21, 0
	088 JumpIfEqual {148}
	089 Move X1, [X26]
	090 Move X0, X21
	091 Call Queue`1<Object>.Clear, X0
	092 Move X8, [X20+32]
	093 Move X8, [X8+192]
	094 Move X0, [X8+8]
	095 Move W8, [X0+309]
	096 Move TEMP, X8
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {101}
	100 Call 0x1C5D684
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X8, [X20+32]
	106 Move X8, [X8+192]
	107 Move X0, [X8+8]
	108 Move W8, [X0+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {114}
	113 Call 0x1C5D684
	114 Move X8, [X0+184]
	115 Move X0, [X8]
	116 Compare X0, 0
	117 JumpIfEqual {149}
	118 Move X2, [X27]
	119 Move X1, X21
	120 Call 0x24943E0, X0, X1
	121 Move X1, [X24]
	122 Add X0, X31, 48
	123 Call Enumerator<ElementPropertyPair, Object>.Dispose, X0
	124 Move X0, [X19+24]
	125 Compare X0, 0
	126 JumpIfEqual {150}
	127 Move X1, [X23]
	128 Call Dictionary`2<ElementPropertyPair, Object>.Clear, X0
	129 Move X0, [X19+16]
	130 Compare X0, 0
	131 JumpIfEqual {150}
	132 Move X1, [X22]
	133 Call Dictionary`2<ElementPropertyPair, Int32Enum>.Clear, X0
	134 Move [X19+32], X31
	135 Move [X19+40], W31
	136 Move X20, [X31+160]
	137 Move X19, [X31+168]
	138 Move X22, [X31+144]
	139 Move X21, [X31+152]
	140 Move X24, [X31+128]
	141 Move X23, [X31+136]
	142 Move X26, [X31+112]
	143 Move X25, [X31+120]
	144 Move X30, [X31+96]
	145 Move X27, [X31+104]
	146 Add X31, X31, 176
	147 Return 
	148 Call 0x1C17F20
	149 Call 0x1C17F20
	150 Call 0x1C17F20
	151 Move X20, X0
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X0, X20
	154 Call 0x3EB2AD0
	155 Move X21, [X0]
	156 Call 0x3EB2AE0
	157 Move X1, [X24]
	158 Add X0, X31, 48
	159 Call Enumerator<ElementPropertyPair, Object>.Dispose, X0
	160 Compare X21, 0
	161 JumpIfEqual {124}
	162 Move X0, X21
	163 Call 0x1C17F18
	164 Move X21, X31
	165 Move X20, X0
	166 Move X1, [X24]
	167 Add X0, X31, 48
	168 Call Enumerator<ElementPropertyPair, Object>.Dispose, X0
	169 Compare X21, 0
	170 JumpIfNotEqual {173}
	171 Move X0, X20
	172 Call 0x1D2D690
	173 Move X0, X21
	174 Call 0x1C17F18
	175 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x026F6E84 ADRP X27, 0x1A27000
	0x026F6E88 LDR X25, [X25 + 0x820]
	0x026F6E8C LDR X26, [X26 + 0x840]
	0x026F6E90 LDR X27, [X27 + 0x838]
	0x026F6E94 LDR X1, [X8]
	0x026F6E98 ADRP X23, 0x1A27000
	0x026F6E9C ADRP X22, 0x1A27000
	0x026F6EA0 ADRP X24, 0x1A27000
	0x026F6EA4 LDR X23, [X23 + 0x808]
	0x026F6EA8 LDR X22, [X22 + 0x800]
	0x026F6EAC LDR X24, [X24 + 0x818]
	0x026F6EB0 ADD X8, X31, 0x0
	0x026F6EB4 BL 0x2B3A2C0
	0x026F6EB8 LDP V0, V1, [X31]
	0x026F6EBC LDR V2, [X31 + 0x2]
	0x026F6EC0 STP V0, V1, [X31 + 0x30]
	0x026F6EC4 STR V2, [X31 + 0x5]
	0x026F6EC8 LDR X1, [X25]
	0x026F6ECC ADD X0, X31, 0x30
	0x026F6ED0 BL 0x2C268DC
	0x026F6ED4 TBZ X0, 0x0, 0x26F6F44
	0x026F6ED8 LDR X21, [X31 + 0x50]
	0x026F6EDC CBZ X21, 0x26F6F94
	0x026F6EE0 LDR X1, [X26]
	0x026F6EE4 MOV X0, X21
	0x026F6EE8 BL 0x24F1410
	0x026F6EEC LDR X8, [X20 + 0x20]
	0x026F6EF0 LDR X8, [X8 + 0xC0]
	0x026F6EF4 LDR X0, [X8 + 0x8]
	0x026F6EF8 LDRB W8, [X0 + 0x135]
	0x026F6EFC TBNZ X8, 0x0, 0x26F6F04
	0x026F6F00 BL 0x1C5C684
	0x026F6F04 LDR W8, [X0 + 0xE0]
	0x026F6F08 CBNZ W8, 0x26F6F10
	0x026F6F0C BL 0x1C16DFC
	0x026F6F10 LDR X8, [X20 + 0x20]
	0x026F6F14 LDR X8, [X8 + 0xC0]
	0x026F6F18 LDR X0, [X8 + 0x8]
	0x026F6F1C LDRB W8, [X0 + 0x135]
	0x026F6F20 TBNZ X8, 0x0, 0x26F6F28
	0x026F6F24 BL 0x1C5C684
	0x026F6F28 LDR X8, [X0 + 0xB8]
	0x026F6F2C LDR X0, [X8]
	0x026F6F30 CBZ X0, 0x26F6F98
	0x026F6F34 LDR X2, [X27]
	0x026F6F38 MOV X1, X21
	0x026F6F3C BL 0x24933E0
	0x026F6F40 B 0x26F6EC8
	0x026F6F44 LDR X1, [X24]
	0x026F6F48 ADD X0, X31, 0x30
	0x026F6F4C BL 0x2C26A04
	0x026F6F50 LDR X0, [X19 + 0x18]
	0x026F6F54 CBZ X0, 0x26F6F9C
	0x026F6F58 LDR X1, [X23]
	0x026F6F5C BL 0x2B39FF4
	0x026F6F60 LDR X0, [X19 + 0x10]
	0x026F6F64 CBZ X0, 0x26F6F9C
	0x026F6F68 LDR X1, [X22]
	0x026F6F6C BL 0x2B36F4C
	0x026F6F70 STR X31, [X19 + 0x20]
	0x026F6F74 STR W31, [X19 + 0x28]
	0x026F6F78 LDP X20, X19, [X31 + 0xA0]
	0x026F6F7C LDP X22, X21, [X31 + 0x90]
	0x026F6F80 LDP X24, X23, [X31 + 0x80]
	0x026F6F84 LDP X26, X25, [X31 + 0x70]
	0x026F6F88 LDP X30, X27, [X31 + 0x60]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x1CE5000
	010 Move X22, 0x1A28000
	011 Move W8, [X20+1373]
	012 Move X22, [X22+2120]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x1A28000
	019 Move X0, [X0+2128]
	020 Call 0x1C17CF4
	021 Move X0, 0x1A28000
	022 Move X0, [X0+2136]
	023 Call 0x1C17CF4
	024 Move X0, 0x1A28000
	025 Move X0, [X0+2144]
	026 Call 0x1C17CF4
	027 Move X0, 0x1A28000
	028 Move X0, [X0+2152]
	029 Call 0x1C17CF4
	030 Move X0, 0x1A28000
	031 Move X0, [X0+2120]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1373], W8
	035 Move X0, [X22]
	036 Move X25, 0x1A28000
	037 Move X21, 0x1A28000
	038 Move X24, 0x1A28000
	039 Move X23, 0x1A28000
	040 Move W8, [X0+224]
	041 Move X25, [X25+2152]
	042 Move X21, [X21+2128]
	043 Move X24, [X24+2144]
	044 Move X23, [X23+2136]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X22]
	049 Move X8, [X0+184]
	050 Move X0, [X25]
	051 Move X20, [X8]
	052 Call 0x1C17F10
	053 Move X2, [X21]
	054 Move X1, X20
	055 Move X21, X0
	056 Call Dictionary`2<ElementPropertyPair, Int32Enum>..ctor, X0, X1
	057 Move [X19+16], X21
	058 Move X8, [X22]
	059 Move X0, [X24]
	060 Move X8, [X8+184]
	061 Move X20, [X8]
	062 Call 0x1C17F10
	063 Move X2, [X23]
	064 Move X1, X20
	065 Move X21, X0
	066 Call Dictionary`2<ElementPropertyPair, Object>..ctor, X0, X1
	067 Move [X19+24], X21
	068 Move X0, X19
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move X1, X31
	076 Move X30, [X31+64]
	077 Move X25, [X31+72]
	078 Call Object..ctor, X0
	079 Return 

Method: System.Void .cctor()

Disassembly:
	0x026F6F8C ADD X31, X31, 0xB0
	0x026F6F90 RET
	0x026F6F94 BL 0x1C16F20
	0x026F6F98 BL 0x1C16F20
	0x026F6F9C BL 0x1C16F20
	0x026F6FA0 B 0x26F6FB4
	0x026F6FA4 B 0x26F6FB4
	0x026F6FA8 B 0x26F6FB4
	0x026F6FAC B 0x26F6FB4
	0x026F6FB0 B 0x26F6FB4
	0x026F6FB4 MOV X20, X0
	0x026F6FB8 CMP W1, 0x1
	0x026F6FBC B.NE 0x26F6FE8
	0x026F6FC0 MOV X0, X20
	0x026F6FC4 BL 0x3EB1AD0
	0x026F6FC8 LDR X21, [X0]
	0x026F6FCC BL 0x3EB1AE0
	0x026F6FD0 LDR X1, [X24]
	0x026F6FD4 ADD X0, X31, 0x30
	0x026F6FD8 BL 0x2C26A04
	0x026F6FDC CBZ X21, 0x26F6F50
	0x026F6FE0 MOV X0, X21
	0x026F6FE4 BL 0x1C16F18
	0x026F6FE8 MOV X21, X31
	0x026F6FEC B 0x26F6FF4
	0x026F6FF0 MOV X20, X0
	0x026F6FF4 LDR X1, [X24]
	0x026F6FF8 ADD X0, X31, 0x30
	0x026F6FFC BL 0x2C26A04
	0x026F7000 CBNZ X21, 0x26F700C
	0x026F7004 MOV X0, X20
	0x026F7008 BL 0x1D2C690
	0x026F700C MOV X0, X21
	0x026F7010 BL 0x1C16F18
	0x026F7014 BL 0x1990590
	0x026F7018 STP X30, X25, [X31 - 0x40]!
	0x026F701C STP X24, X23, [X31 + 0x10]
	0x026F7020 STP X22, X21, [X31 + 0x20]
	0x026F7024 STP X20, X19, [X31 + 0x30]
	0x026F7028 ADRP X20, 0x1CE3000
	0x026F702C ADRP X22, 0x1A26000
	0x026F7030 LDRB W8, [X20 + 0x569]
	0x026F7034 LDR X22, [X22 + 0x848]
	0x026F7038 MOV X19, X0
	0x026F703C TBNZ X8, 0x0, 0x26F7084
	0x026F7040 ADRP X0, 0x1A26000
	0x026F7044 LDR X0, [X0 + 0x850]
	0x026F7048 BL 0x1C16CF4
	0x026F704C ADRP X0, 0x1A26000
	0x026F7050 LDR X0, [X0 + 0x858]
	0x026F7054 BL 0x1C16CF4
	0x026F7058 ADRP X0, 0x1A26000
	0x026F705C LDR X0, [X0 + 0x860]
	0x026F7060 BL 0x1C16CF4
	0x026F7064 ADRP X0, 0x1A26000
	0x026F7068 LDR X0, [X0 + 0x868]
	0x026F706C BL 0x1C16CF4
	0x026F7070 ADRP X0, 0x1A26000
	0x026F7074 LDR X0, [X0 + 0x848]
	0x026F7078 BL 0x1C16CF4
	0x026F707C MOVZ W8, 0x1
	0x026F7080 STRB W8, [X20 + 0x569]
	0x026F7084 LDR X0, [X22]
	0x026F7088 ADRP X25, 0x1A26000
	0x026F708C ADRP X21, 0x1A26000
	0x026F7090 ADRP X24, 0x1A26000
	0x026F7094 ADRP X23, 0x1A26000
	0x026F7098 LDR W8, [X0 + 0xE0]
	0x026F709C LDR X25, [X25 + 0x868]
	0x026F70A0 LDR X21, [X21 + 0x850]
	0x026F70A4 LDR X24, [X24 + 0x860]
	0x026F70A8 LDR X23, [X23 + 0x858]
	0x026F70AC CBNZ W8, 0x26F70B8
	0x026F70B0 BL 0x1C16DFC
	0x026F70B4 LDR X0, [X22]
	0x026F70B8 LDR X8, [X0 + 0xB8]
	0x026F70BC LDR X0, [X25]
	0x026F70C0 LDR X20, [X8]
	0x026F70C4 BL 0x1C16F10
	0x026F70C8 LDR X2, [X21]
	0x026F70CC MOV X1, X20
	0x026F70D0 MOV X21, X0
	0x026F70D4 BL 0x2B36510
	0x026F70D8 STR X21, [X19 + 0x10]
	0x026F70DC LDR X8, [X22]
	0x026F70E0 LDR X0, [X24]
	0x026F70E4 LDR X8, [X8 + 0xB8]
	0x026F70E8 LDR X20, [X8]
	0x026F70EC BL 0x1C16F10
	0x026F70F0 LDR X2, [X23]
	0x026F70F4 MOV X1, X20
	0x026F70F8 MOV X21, X0
	0x026F70FC BL 0x2B395B8
	0x026F7100 STR X21, [X19 + 0x18]
	0x026F7104 MOV X0, X19
	0x026F7108 LDP X20, X19, [X31 + 0x30]
	0x026F710C LDP X22, X21, [X31 + 0x20]
	0x026F7110 LDP X24, X23, [X31 + 0x10]
	0x026F7114 MOV X1, X31
	0x026F7118 LDP X30, X25, [X31], #0x40
	0x026F711C B 0x33BDD8C
	0x026F7120 SUB X31, X31, 0x40
	0x026F7124 STP X30, X23, [X31 + 0x10]
	0x026F7128 STP X22, X21, [X31 + 0x20]
	0x026F712C STP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x1CE5000
	009 Move W8, [X20+1374]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x1A28000
	016 Move X0, [X0+2160]
	017 Call 0x1C17CF4
	018 Move X0, 0x1A28000
	019 Move X0, [X0+2168]
	020 Call 0x1C17CF4
	021 Move X0, 0x1A28000
	022 Move X0, [X0+2176]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+1374], W8
	026 Move X0, [X19+32]
	027 Move W8, [X0+309]
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {33}
	032 Call 0x1C5D684
	033 Move X8, [X0+192]
	034 Move X0, [X8+24]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, [X19+32]
	046 Move W8, [X0+309]
	047 Move TEMP, X8
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {52}
	051 Call 0x1C5D684
	052 Move X8, [X0+192]
	053 Move X21, 0x1A27000
	054 Move X0, [X8+24]
	055 Move W8, [X0+309]
	056 Move X21, [X21+2160]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X8, [X0+184]
	063 Move X0, [X21]
	064 Move X23, 0x1A27000
	065 Move X22, 0x1A27000
	066 Move X20, [X8]
	067 Move X23, [X23+2176]
	068 Move X22, [X22+2168]
	069 Call 0x1C17F10
	070 Move X8, [X19+32]
	071 Move X21, X0
	072 Move W9, [X8+309]
	073 Move TEMP, X9
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {80}
	077 Move X0, X8
	078 Call 0x1C5D684
	079 Move X8, X0
	080 Move X8, [X8+192]
	081 Move X0, X21
	082 Move X1, X20
	083 Move X3, X31
	084 Move X2, [X8+32]
	085 Call Func`1<Object>..ctor, X0, X1, X2
	086 Move X0, [X23]
	087 Call 0x1C17F10
	088 Move X8, [X22]
	089 Move W5, 1
	090 Move W6, 10
	091 Move W7, 0x2710
	092 Move X1, X21
	093 Move X2, X31
	094 Move X3, X31
	095 Move X4, X31
	096 Move X20, X0
	097 Move [X31], X8
	098 Call 0x249418C, X0, X1, X2, X3, X4, X5, X6, X7
	099 Move X0, [X19+32]
	100 Move W8, [X0+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {106}
	105 Call 0x1C5D684
	106 Move X8, [X0+192]
	107 Move X0, [X8+8]
	108 Move W8, [X0+309]
	109 Move TEMP, X8
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {114}
	113 Call 0x1C5D684
	114 Move X8, [X0+184]
	115 Move [X8], X20
	116 Move X0, [X19+32]
	117 Move W8, [X0+309]
	118 Move TEMP, X8
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {123}
	122 Call 0x1C5D684
	123 Move X8, [X0+192]
	124 Move X0, [X8+8]
	125 Move W8, [X0+309]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {139}
	130 Move X20, [X31+48]
	131 Move X19, [X31+56]
	132 Move X22, [X31+32]
	133 Move X21, [X31+40]
	134 Move X30, [X31+16]
	135 Move X23, [X31+24]
	136 Add X31, X31, 64
	137 Call 0x1C5D684
	138 Return 
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X22, [X31+32]
	142 Move X21, [X31+40]
	143 Move X30, [X31+16]
	144 Move X23, [X31+24]
	145 Add X31, X31, 64
	146 Return 

