Type: UnityEngine.UIElements.FloatField

Method: UnityEngine.UIElements.FloatField/FloatInput get_floatInput()

Disassembly:
	0x03D0EC70 ADRP X0, 0x455000
	0x03D0EC74 LDR X0, [X0 + 0xB10]
	0x03D0EC78 BL 0x1C16CF4
	0x03D0EC7C MOVZ W8, 0x1
	0x03D0EC80 STRB W8, [X20 + 0x8A9]
	0x03D0EC84 ADRP X22, 0x454000
	0x03D0EC88 ADRP X21, 0x40D000
	0x03D0EC8C LDR X22, [X22 + 0xB80]
	0x03D0EC90 LDR X21, [X21 + 0x898]
	0x03D0EC94 MOV X0, X19
	0x03D0EC98 MOV X1, X31
	0x03D0EC9C STR X31, [X31 + 0x8]
	0x03D0ECA0 BL 0x3CE9F64
	0x03D0ECA4 LDR X0, [X23]
	0x03D0ECA8 LDR W8, [X0 + 0xE0]
	0x03D0ECAC CBNZ W8, 0x3D0ECB8
	0x03D0ECB0 BL 0x1C16DFC
	0x03D0ECB4 LDR X0, [X23]
	0x03D0ECB8 LDR X8, [X0 + 0xB8]
	0x03D0ECBC MOV X0, X19
	0x03D0ECC0 MOV X2, X31
	0x03D0ECC4 LDR X1, [X8]
	0x03D0ECC8 BL 0x3DF1C70
	0x03D0ECCC LDR X0, [X22]
	0x03D0ECD0 BL 0x1C16F10
	0x03D0ECD4 MOV X1, X31
	0x03D0ECD8 MOV X20, X0
	0x03D0ECDC BL 0x3D86FE4
	0x03D0ECE0 STR X20, [X19 + 0x3D8]
	0x03D0ECE4 LDR X0, [X21]
	0x03D0ECE8 BL 0x1C16F10
	0x03D0ECEC MOV X1, X31
	0x03D0ECF0 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6DA000
	005 Move W8, [X20+2201]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x456000
	012 Move X0, [X0+2632]
	013 Call 0x1C17CF4
	014 Move X0, 0x456000
	015 Move X0, [X0+2640]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2201], W8
	019 Move X0, [X19+1096]
	020 Compare X0, 0
	021 JumpIfEqual {33}
	022 Move X9, 0x456000
	023 Move X9, [X9+2632]
	024 Move X8, [X0]
	025 Move X1, [X9]
	026 Move W10, [X8+304]
	027 Move W9, [X1+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X8+200]
	030 Add X8, X8, X9
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0
	037 Call 0x1C181E0

Method: System.String ValueToString(System.Single v)

Disassembly:
	0x03D0ECF4 BL 0x3DEF578
	0x03D0ECF8 CBZ X20, 0x3D0EF40
	0x03D0ECFC ADRP X8, 0x455000
	0x03D0ED00 LDR X8, [X8 + 0xB10]
	0x03D0ED04 ADRP X21, 0x454000
	0x03D0ED08 ADRP X24, 0x455000
	0x03D0ED0C ADRP X25, 0x454000
	0x03D0ED10 LDR X1, [X8]
	0x03D0ED14 LDR X21, [X21 + 0xCA0]
	0x03D0ED18 LDR X24, [X24 + 0xB08]
	0x03D0ED1C LDR X25, [X25 + 0xCB8]
	0x03D0ED20 MOV X0, X20
	0x03D0ED24 MOV X2, X31
	0x03D0ED28 BL 0x3DEF278
	0x03D0ED2C STR X20, [X19 + 0x3E0]
	0x03D0ED30 LDR X0, [X21]
	0x03D0ED34 LDR X20, [X19 + 0x3D8]
	0x03D0ED38 BL 0x1C16F10
	0x03D0ED3C LDR X2, [X24]
	0x03D0ED40 MOV X1, X19
	0x03D0ED44 MOV X3, X31
	0x03D0ED48 MOV X21, X0
	0x03D0ED4C BL 0x2D0E824
	0x03D0ED50 LDR X2, [X25]
	0x03D0ED54 MOV X0, X20
	0x03D0ED58 MOV X1, X21
	0x03D0ED5C BL 0x21EF110
	0x03D0ED60 LDR X0, [X19 + 0x3D8]
	0x03D0ED64 CBZ X0, 0x3D0EF40
	0x03D0ED68 LDR X8, [X23]
	0x03D0ED6C MOV X2, X31
	0x03D0ED70 LDR X8, [X8 + 0xB8]
	0x03D0ED74 LDR X1, [X8 + 0x8]
	0x03D0ED78 BL 0x3DF1C70
	0x03D0ED7C LDR X0, [X19 + 0x3D8]
	0x03D0ED80 CBZ X0, 0x3D0EF40
	0x03D0ED84 ADRP X20, 0x454000
	0x03D0ED88 LDR X20, [X20 + 0xC80]
	0x03D0ED8C LDR X1, [X20]
	0x03D0ED90 BL 0x2772DDC
	0x03D0ED94 CBZ X0, 0x3D0EF40
	0x03D0ED98 LDR X8, [X23]
	0x03D0ED9C MOV X2, X31
	0x03D0EDA0 LDR X8, [X8 + 0xB8]
	0x03D0EDA4 LDR X1, [X8 + 0x18]
	0x03D0EDA8 BL 0x3DF1C70

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6DA000
	007 Move [X31+12], S0
	008 Move X22, 0x456000
	009 Move X20, 0x3E8000
	010 Move W8, [X21+2202]
	011 Move X22, [X22+2648]
	012 Move X20, [X20+3144]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x3E8000
	019 Move X0, [X0+3144]
	020 Call 0x1C17CF4
	021 Move X0, 0x456000
	022 Move X0, [X0+2648]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2202], W8
	026 Move X1, [X22]
	027 Move X0, X19
	028 Call TextValueField`1<Single>.get_formatString, X0
	029 Move X8, [X20]
	030 Move X19, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X0, X31
	037 Call CultureInfo.get_InvariantCulture
	038 Compare X0, 0
	039 JumpIfEqual {55}
	040 Move X8, [X0]
	041 Move X9, [X8+536]
	042 Move X1, [X8+544]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X2, X0
	045 Add X0, X31, 12
	046 Move X1, X19
	047 Move X3, X31
	048 Call Single.ToString, X0, X1, X2
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0
	055 Call 0x1C17F20

Method: System.Single StringToValue(System.String str)

Disassembly:
	0x03D0EDAC LDR X0, [X19 + 0x3D8]
	0x03D0EDB0 CBZ X0, 0x3D0EF40
	0x03D0EDB4 LDR X1, [X20]
	0x03D0EDB8 ADRP X21, 0x40E000
	0x03D0EDBC LDR X21, [X21 + 0x830]
	0x03D0EDC0 BL 0x2772DDC
	0x03D0EDC4 LDR X8, [X22]
	0x03D0EDC8 MOV X20, X0
	0x03D0EDCC LDR W9, [X8 + 0xE0]
	0x03D0EDD0 CBNZ W9, 0x3D0EDE0
	0x03D0EDD4 MOV X0, X8
	0x03D0EDD8 BL 0x1C16DFC
	0x03D0EDDC LDR X8, [X22]
	0x03D0EDE0 LDR X0, [X21]
	0x03D0EDE4 LDR X8, [X8 + 0xB8]
	0x03D0EDE8 LDR W9, [X0 + 0xE0]
	0x03D0EDEC LDR X21, [X8 + 0x20]
	0x03D0EDF0 CBNZ W9, 0x3D0EDF8
	0x03D0EDF4 BL 0x1C16DFC
	0x03D0EDF8 MOV X0, X20
	0x03D0EDFC MOV X1, X31
	0x03D0EE00 MOV X2, X21
	0x03D0EE04 MOV X3, X31
	0x03D0EE08 BL 0x3E19D90
	0x03D0EE0C CBZ X0, 0x3D0EF40
	0x03D0EE10 LDR X8, [X23]
	0x03D0EE14 ADRP X21, 0x455000
	0x03D0EE18 ADRP X22, 0x455000
	0x03D0EE1C ADRP X24, 0x455000
	0x03D0EE20 LDR X8, [X8 + 0xB8]
	0x03D0EE24 MOV X2, X31
	0x03D0EE28 LDR X1, [X8 + 0x20]
	0x03D0EE2C LDR X21, [X21 + 0x88]
	0x03D0EE30 LDR X22, [X22 + 0xAF8]
	0x03D0EE34 LDR X24, [X24 + 0xC0]
	0x03D0EE38 BL 0x3DF1C70
	0x03D0EE3C LDR X0, [X21]
	0x03D0EE40 LDR X20, [X19 + 0x3D8]
	0x03D0EE44 BL 0x1C16F10
	0x03D0EE48 LDR X2, [X22]
	0x03D0EE4C MOV X1, X19
	0x03D0EE50 MOV X3, X31
	0x03D0EE54 MOV X21, X0
	0x03D0EE58 BL 0x2A762F4
	0x03D0EE5C LDR X0, [X24]
	0x03D0EE60 BL 0x1C16F10
	0x03D0EE64 MOV X1, X21
	0x03D0EE68 MOV X2, X31
	0x03D0EE6C MOV X22, X0
	0x03D0EE70 BL 0x3DB9C3C
	0x03D0EE74 MOV X0, X20
	0x03D0EE78 MOV X1, X22
	0x03D0EE7C MOV X2, X31
	0x03D0EE80 STR X22, [X19 + 0x3F0]
	0x03D0EE84 BL 0x3D16A80

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6DA000
	007 Move W8, [X21+2203]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x456000
	015 Move X0, [X0+2656]
	016 Call 0x1C17CF4
	017 Move X0, 0x456000
	018 Move X0, [X0+2640]
	019 Call 0x1C17CF4
	020 Move X0, 0x456000
	021 Move X0, [X0+2664]
	022 Call 0x1C17CF4
	023 Move X0, 0x452000
	024 Move X0, [X0+1960]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2203], W8
	028 Move [X31+12], W31
	029 Move X0, [X19+1096]
	030 Compare X0, 0
	031 JumpIfEqual {66}
	032 Move X8, 0x456000
	033 Move X8, [X8+2664]
	034 Move X21, 0x452000
	035 Move X1, [X8]
	036 Move X21, [X21+1960]
	037 Call TextInputBase<Single>.get_originalText, X0
	038 Move X8, [X21]
	039 Move X21, X0
	040 Move W9, [X8+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {45}
	043 Move X0, X8
	044 Call 0x1C17DFC
	045 Add X2, X31, 12
	046 Move X0, X20
	047 Move X1, X21
	048 Move X3, X31
	049 Call UINumericFieldsUtils.TryConvertStringToFloat, X0, X1, X2
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {55}
	054 Move V0, [X31+12]
	055 Move X8, 0x456000
	056 Move X8, [X8+2656]
	057 Move X0, X19
	058 Move X1, [X8]
	059 Call BaseField`1<Single>.get_rawValue, X0
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X30, [X31+16]
	063 Move X21, [X31+24]
	064 Add X31, X31, 48
	065 Return V0
	066 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D0EE88 LDR X8, [X19 + 0x378]
	0x03D0EE8C ADD X0, X31, 0x8
	0x03D0EE90 MOV X2, X31

ISIL:
	001 Move W2, 1000
	002 Move X1, X31

Method: System.Void .ctor(System.String label, System.Int32 maxLength = 1000)

Disassembly:
	0x03D0EE94 STR X8, [X31 + 0x8]
	0x03D0EE98 LDR X1, [X19 + 0x3D8]
	0x03D0EE9C BL 0x3DF891C
	0x03D0EEA0 LDR X0, [X19 + 0x3E0]
	0x03D0EEA4 CBZ X0, 0x3D0EF40
	0x03D0EEA8 LDR X8, [X23]
	0x03D0EEAC ADRP X20, 0x40F000
	0x03D0EEB0 ADRP X21, 0x455000
	0x03D0EEB4 ADRP X22, 0x40F000
	0x03D0EEB8 LDR X8, [X8 + 0xB8]
	0x03D0EEBC MOV X2, X31
	0x03D0EEC0 LDR X1, [X8 + 0x10]
	0x03D0EEC4 LDR X20, [X20 + 0xD70]
	0x03D0EEC8 LDR X21, [X21 + 0xB00]
	0x03D0EECC LDR X22, [X22 + 0xD60]
	0x03D0EED0 BL 0x3DF1C70
	0x03D0EED4 LDR X8, [X19 + 0x378]
	0x03D0EED8 ADD X0, X31, 0x8
	0x03D0EEDC MOV X2, X31
	0x03D0EEE0 STR X8, [X31 + 0x8]
	0x03D0EEE4 LDR X1, [X19 + 0x3E0]
	0x03D0EEE8 BL 0x3DF891C
	0x03D0EEEC LDR X0, [X20]
	0x03D0EEF0 BL 0x1C16F10
	0x03D0EEF4 LDR X2, [X21]
	0x03D0EEF8 MOV X1, X19
	0x03D0EEFC MOV X3, X31
	0x03D0EF00 MOV X20, X0
	0x03D0EF04 BL 0x2D0E824
	0x03D0EF08 LDR X3, [X22]
	0x03D0EF0C MOV X0, X19
	0x03D0EF10 MOV X1, X20
	0x03D0EF14 MOV W2, W31
	0x03D0EF18 BL 0x21A1534
	0x03D0EF1C MOVZ W1, 0x1
	0x03D0EF20 MOV X0, X19
	0x03D0EF24 BL 0x3D0E914
	0x03D0EF28 LDP X20, X19, [X31 + 0x40]
	0x03D0EF2C LDP X22, X21, [X31 + 0x30]
	0x03D0EF30 LDP X24, X23, [X31 + 0x20]
	0x03D0EF34 LDP X30, X25, [X31 + 0x10]
	0x03D0EF38 ADD X31, X31, 0x50
	0x03D0EF3C RET
	0x03D0EF40 BL 0x1C16F20
	0x03D0EF44 SUB X31, X31, 0x50
	0x03D0EF48 STP X30, X25, [X31 + 0x10]
	0x03D0EF4C STP X24, X23, [X31 + 0x20]
	0x03D0EF50 STP X22, X21, [X31 + 0x30]
	0x03D0EF54 STP X20, X19, [X31 + 0x40]
	0x03D0EF58 ADRP X20, 0x6D9000
	0x03D0EF5C LDRB W8, [X20 + 0x8AA]
	0x03D0EF60 MOV X19, X0
	0x03D0EF64 TBNZ X8, 0x0, 0x3D0EF94
	0x03D0EF68 ADRP X0, 0x454000
	0x03D0EF6C LDR X0, [X0 + 0xC88]
	0x03D0EF70 BL 0x1C16CF4
	0x03D0EF74 ADRP X0, 0x455000
	0x03D0EF78 LDR X0, [X0 + 0xB18]
	0x03D0EF7C BL 0x1C16CF4
	0x03D0EF80 ADRP X0, 0x455000
	0x03D0EF84 LDR X0, [X0 + 0xB20]
	0x03D0EF88 BL 0x1C16CF4
	0x03D0EF8C MOVZ W8, 0x1
	0x03D0EF90 STRB W8, [X20 + 0x8AA]
	0x03D0EF94 ADRP X23, 0x454000
	0x03D0EF98 ADRP X22, 0x455000
	0x03D0EF9C ADRP X21, 0x455000
	0x03D0EFA0 LDR X23, [X23 + 0xC88]
	0x03D0EFA4 LDR X22, [X22 + 0xB20]
	0x03D0EFA8 LDR X21, [X21 + 0xB18]
	0x03D0EFAC MOV W24, W31
	0x03D0EFB0 STR W31, [X31 + 0xC]
	0x03D0EFB4 LDR X0, [X23]
	0x03D0EFB8 STR W24, [X31 + 0x8]
	0x03D0EFBC LDR W8, [X0 + 0xE0]
	0x03D0EFC0 CBZ W8, 0x3D0EFDC
	0x03D0EFC4 LDR X8, [X0 + 0xB8]
	0x03D0EFC8 LDR W9, [X8 + 0x40]
	0x03D0EFCC LDR X20, [X8 + 0x38]
	0x03D0EFD0 CMP W24, W9
	0x03D0EFD4 B.LE 0x3D0F00C
	0x03D0EFD8 B 0x3D0F044
	0x03D0EFDC BL 0x1C16DFC
	0x03D0EFE0 LDR X0, [X23]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x6DA000
	010 Move X25, 0x456000
	011 Move X24, 0x456000
	012 Move X23, 0x456000
	013 Move W8, [X22+2204]
	014 Move X25, [X25+2632]
	015 Move X24, [X24+2672]
	016 Move X23, [X23+2680]
	017 Move W20, W2
	018 Move X21, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0x456000
	025 Move X0, [X0+2688]
	026 Call 0x1C17CF4
	027 Move X0, 0x456000
	028 Move X0, [X0+2696]
	029 Call 0x1C17CF4
	030 Move X0, 0x456000
	031 Move X0, [X0+2680]
	032 Call 0x1C17CF4
	033 Move X0, 0x456000
	034 Move X0, [X0+2632]
	035 Call 0x1C17CF4
	036 Move X0, 0x456000
	037 Move X0, [X0+2704]
	038 Call 0x1C17CF4
	039 Move X0, 0x456000
	040 Move X0, [X0+2672]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+2204], W8
	044 Move X0, [X25]
	045 Call 0x1C17F10
	046 Move X22, X0
	047 Call FloatInput..ctor, X0
	048 Move X4, [X24]
	049 Move X0, X19
	050 Move X1, X21
	051 Move W2, W20
	052 Move X3, X22
	053 Call TextValueField`1<Single>..ctor, X0, X1, X2, X3
	054 Move X0, [X23]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X23]
	060 Move X8, [X0+184]
	061 Move X0, X19
	062 Move X2, X31
	063 Move X1, [X8]
	064 Call VisualElement.AddToClassList, X0, X1
	065 Move X0, [X19+1024]
	066 Compare X0, 0
	067 JumpIfEqual {99}
	068 Move X8, [X23]
	069 Move X20, 0x456000
	070 Move X2, X31
	071 Move X8, [X8+184]
	072 Move X1, [X8+8]
	073 Move X20, [X20+2696]
	074 Call VisualElement.AddToClassList, X0, X1
	075 Move X1, [X20]
	076 Move X0, X19
	077 Call BaseField`1<Single>.get_visualInput, X0
	078 Compare X0, 0
	079 JumpIfEqual {99}
	080 Move X8, [X23]
	081 Move X20, 0x456000
	082 Move X2, X31
	083 Move X8, [X8+184]
	084 Move X1, [X8+16]
	085 Move X20, [X20+2704]
	086 Call VisualElement.AddToClassList, X0, X1
	087 Move X1, [X20]
	088 Move X0, X19
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X22, [X31+32]
	092 Move X21, [X31+40]
	093 Move X24, [X31+16]
	094 Move X23, [X31+24]
	095 Move X30, [X31+64]
	096 Move X25, [X31+72]
	097 Call TextValueField`1<Single>.AddLabelDragger, X0
	098 Return 
	099 Call 0x1C17F20

Method: System.Boolean CanTryParse(System.String textString)

Disassembly:
	0x03D0F078 LDR X21, [X8 + 0x30]
	0x03D0F07C CBNZ W9, 0x3D0F084
	0x03D0F080 BL 0x1C16DFC
	0x03D0F084 MOV X0, X20
	0x03D0F088 MOV X1, X21
	0x03D0F08C MOV X2, X31
	0x03D0F090 BL 0x3D19D04
	0x03D0F094 MOV X0, X19
	0x03D0F098 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Add X1, X31, 12
	004 Move X2, X31
	005 Move [X31+12], W31
	006 Call Single.TryParse, X0, X1
	007 And W0, W0, 1
	008 Move X30, [X31+16]
	009 Return X0

Method: System.Void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, System.Single startValue)

Disassembly:
	0x03D0F09C BL 0x3D19C20
	0x03D0F0A0 LDR X8, [X23]
	0x03D0F0A4 STR W0, [X31 + 0xC]
	0x03D0F0A8 MOV W21, W0
	0x03D0F0AC LDR X9, [X8 + 0xB8]
	0x03D0F0B0 LDR W10, [X8 + 0xE0]
	0x03D0F0B4 LDR W24, [X9 + 0x40]
	0x03D0F0B8 CBNZ W10, 0x3D0F0CC
	0x03D0F0BC MOV X0, X8
	0x03D0F0C0 BL 0x1C16DFC
	0x03D0F0C4 LDR X8, [X23]
	0x03D0F0C8 LDR X9, [X8 + 0xB8]
	0x03D0F0CC LDR X20, [X9 + 0x38]
	0x03D0F0D0 CMP W21, W24
	0x03D0F0D4 B.LE 0x3D0F0E0
	0x03D0F0D8 LDR X1, [X22]
	0x03D0F0DC B 0x3D0F0F0
	0x03D0F0E0 ADD X0, X31, 0xC
	0x03D0F0E4 MOV X1, X31
	0x03D0F0E8 BL 0x337B6E0
	0x03D0F0EC MOV X1, X0
	0x03D0F0F0 MOV X0, X20
	0x03D0F0F4 MOV X2, X31

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move V8, V3
	008 Move W19, W1
	009 Move V9, V2
	010 Move V10, V1
	011 Move V11, V0
	012 Call FloatField.get_floatInput, X0
	013 Compare X0, 0
	014 JumpIfEqual {30}
	015 Move X8, [X0]
	016 Move V2, V9
	017 Move W1, W19
	018 Move V3, V8
	019 Move X3, [X8+1992]
	020 Move X2, [X8+2000]
	021 Move X30, [X31+32]
	022 Move X19, [X31+40]
	023 Move D9, [X31+16]
	024 Move D8, [X31+24]
	025 Move V0, V11
	026 Move V1, V10
	027 Move D11, [X31+48]
	028 Move D10, [X31+56]
	029 CallNoReturn X3
	030 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D0F0F8 BL 0x321B938
	0x03D0F0FC MOV X1, X0
	0x03D0F100 MOV X0, X19
	0x03D0F104 MOV X2, X31
	0x03D0F108 BL 0x3DF1C70
	0x03D0F10C LDP X20, X19, [X31 + 0x40]
	0x03D0F110 LDP X22, X21, [X31 + 0x30]
	0x03D0F114 LDP X24, X23, [X31 + 0x20]
	0x03D0F118 LDP X30, X25, [X31 + 0x10]
	0x03D0F11C ADD X31, X31, 0x50
	0x03D0F120 RET
	0x03D0F124 STR X30, [X31 - 0x60]!
	0x03D0F128 STP X28, X27, [X31 + 0x10]
	0x03D0F12C STP X26, X25, [X31 + 0x20]
	0x03D0F130 STP X24, X23, [X31 + 0x30]
	0x03D0F134 STP X22, X21, [X31 + 0x40]
	0x03D0F138 STP X20, X19, [X31 + 0x50]
	0x03D0F13C ADRP X28, 0x6D8000
	0x03D0F140 ADRP X27, 0x454000
	0x03D0F144 ADRP X19, 0x453000
	0x03D0F148 ADRP X26, 0x454000
	0x03D0F14C ADRP X25, 0x454000
	0x03D0F150 ADRP X24, 0x40D000
	0x03D0F154 ADRP X23, 0x454000
	0x03D0F158 ADRP X22, 0x40F000
	0x03D0F15C ADRP X21, 0x454000
	0x03D0F160 ADRP X20, 0x454000
	0x03D0F164 LDR X27, [X27 + 0xB28]
	0x03D0F168 LDR X19, [X19 + 0xC88]
	0x03D0F16C LDR X26, [X26 + 0xB30]
	0x03D0F170 LDR X25, [X25 + 0xB38]
	0x03D0F174 LDRB W8, [X28 + 0x8AB]
	0x03D0F178 LDR X24, [X24 + 0xEC0]
	0x03D0F17C LDR X23, [X23 + 0xB40]
	0x03D0F180 LDR X22, [X22 + 0xD8]
	0x03D0F184 LDR X21, [X21 + 0xB48]
	0x03D0F188 LDR X20, [X20 + 0xB50]
	0x03D0F18C TBNZ X8, 0x0, 0x3D0F204
	0x03D0F190 ADRP X0, 0x453000
	0x03D0F194 LDR X0, [X0 + 0xC88]
	0x03D0F198 BL 0x1C16CF4
	0x03D0F19C ADRP X0, 0x454000
	0x03D0F1A0 LDR X0, [X0 + 0xB50]
	0x03D0F1A4 BL 0x1C16CF4
	0x03D0F1A8 ADRP X0, 0x454000
	0x03D0F1AC LDR X0, [X0 + 0xB40]
	0x03D0F1B0 BL 0x1C16CF4
	0x03D0F1B4 ADRP X0, 0x40F000
	0x03D0F1B8 LDR X0, [X0 + 0xD8]
	0x03D0F1BC BL 0x1C16CF4
	0x03D0F1C0 ADRP X0, 0x454000
	0x03D0F1C4 LDR X0, [X0 + 0xB38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6D9000
	008 Move X22, 0x455000
	009 Move X19, 0x455000
	010 Move X21, 0x40E000
	011 Move X20, 0x40E000
	012 Move W8, [X23+2205]
	013 Move X22, [X22+2728]
	014 Move X19, [X19+2680]
	015 Move X21, [X21+3768]
	016 Move X20, [X20+3776]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x455000
	022 Move X0, [X0+2680]
	023 Call 0x1C17CF4
	024 Move X0, 0x455000
	025 Move X0, [X0+2728]
	026 Call 0x1C17CF4
	027 Move X0, 0x40E000
	028 Move X0, [X0+3768]
	029 Call 0x1C17CF4
	030 Move X0, 0x40E000
	031 Move X0, [X0+3776]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+2205], W8
	035 Move X8, [X19]
	036 Move X9, [X22]
	037 Move X2, X31
	038 Move X8, [X8+184]
	039 Move [X8], X9
	040 Move X8, [X19]
	041 Move X1, [X21]
	042 Move X8, [X8+184]
	043 Move X0, [X8]
	044 Call String.Concat, X0, X1
	045 Move X8, [X19]
	046 Move X2, X31
	047 Move X8, [X8+184]
	048 Move [X8+8], X0
	049 Move X0, [X8]
	050 Move X1, [X20]
	051 Call String.Concat, X0, X1
	052 Move X8, [X19]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X8, [X8+184]
	058 Move [X8+16], X0
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Return 

