Type: UnityEngine.UIElements.UxmlIntAttributeDescription

Method: System.Void .ctor()

Disassembly:
	0x03E1CCA4 MOVZ W8, 0x1
	0x03E1CCA8 STRB W8, [X22 + 0x421]
	0x03E1CCAC LDP V1, V0, [X21]
	0x03E1CCB0 LDR X0, [X23]
	0x03E1CCB4 STP V1, V0, [X31 + 0x40]
	0x03E1CCB8 LDR W8, [X0 + 0xE0]
	0x03E1CCBC CBNZ W8, 0x3E1CCC8
	0x03E1CCC0 BL 0x1C16DFC
	0x03E1CCC4 LDR X0, [X23]
	0x03E1CCC8 LDR X8, [X0 + 0xB8]
	0x03E1CCCC LDR X21, [X8 + 0x8]
	0x03E1CCD0 CBZ X21, 0x3E1CCDC
	0x03E1CCD4 LDP V0, V1, [X31 + 0x40]
	0x03E1CCD8 B 0x3E1CD38
	0x03E1CCDC LDP V0, V1, [X31 + 0x40]
	0x03E1CCE0 STP V0, V1, [X31]
	0x03E1CCE4 LDR W8, [X0 + 0xE0]
	0x03E1CCE8 CBNZ W8, 0x3E1CCF4
	0x03E1CCEC BL 0x1C16DFC
	0x03E1CCF0 LDR X0, [X23]
	0x03E1CCF4 ADRP X9, 0x34E000
	0x03E1CCF8 LDR X8, [X0 + 0xB8]
	0x03E1CCFC LDR X9, [X9 + 0xA68]
	0x03E1CD00 LDR X22, [X8]
	0x03E1CD04 LDR X0, [X9]
	0x03E1CD08 BL 0x1C16F10
	0x03E1CD0C ADRP X8, 0x34E000
	0x03E1CD10 LDR X8, [X8 + 0xA78]
	0x03E1CD14 MOV X1, X22
	0x03E1CD18 MOV X3, X31
	0x03E1CD1C MOV X21, X0
	0x03E1CD20 LDR X2, [X8]
	0x03E1CD24 BL 0x2D392C0
	0x03E1CD28 LDR X8, [X23]
	0x03E1CD2C LDR X8, [X8 + 0xB8]
	0x03E1CD30 STR X21, [X8 + 0x8]
	0x03E1CD34 LDP V0, V1, [X31]
	0x03E1CD38 STP V0, V1, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5CD000
	008 Move X23, 0x34F000
	009 Move X21, 0x32B000
	010 Move X20, 0x302000
	011 Move W8, [X22+1039]
	012 Move X23, [X23+2360]
	013 Move X21, [X21+1544]
	014 Move X20, [X20+2752]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x34F000
	021 Move X0, [X0+2360]
	022 Call 0x1C17CF4
	023 Move X0, 0x302000
	024 Move X0, [X0+3056]
	025 Call 0x1C17CF4
	026 Move X0, 0x32B000
	027 Move X0, [X0+1544]
	028 Call 0x1C17CF4
	029 Move X0, 0x302000
	030 Move X0, [X0+2752]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+1039], W8
	034 Move X1, [X23]
	035 Move X0, X19
	036 Call TypedUxmlAttributeDescription`1<Int32>..ctor, X0
	037 Move X9, [X21]
	038 Move X8, [X20]
	039 Move [X19+64], W31
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move [X19+32], X9
	043 Move [X19+40], X8
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 

Method: System.Int32 GetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)

Disassembly:
	0x03E1CD3C CBZ X20, 0x3E1CD80
	0x03E1CD40 ADRP X8, 0x34E000
	0x03E1CD44 LDR X8, [X8 + 0xA80]
	0x03E1CD48 LDP X4, X5, [X20 + 0x40]
	0x03E1CD4C LDP V0, V1, [X31 + 0x20]
	0x03E1CD50 ADD X2, X31, 0x40
	0x03E1CD54 LDR X6, [X8]
	0x03E1CD58 MOV X0, X20
	0x03E1CD5C MOV X1, X19
	0x03E1CD60 MOV X3, X21
	0x03E1CD64 STP V0, V1, [X31 + 0x40]
	0x03E1CD68 BL 0x22A8EB8
	0x03E1CD6C LDP X20, X19, [X31 + 0x80]
	0x03E1CD70 LDP X22, X21, [X31 + 0x70]
	0x03E1CD74 LDP X30, X23, [X31 + 0x60]
	0x03E1CD78 ADD X31, X31, 0x90
	0x03E1CD7C RET
	0x03E1CD80 BL 0x1C16F20
	0x03E1CD84 STR X30, [X31 - 0x20]!
	0x03E1CD88 STP X20, X19, [X31 + 0x10]
	0x03E1CD8C ADRP X19, 0x5CC000
	0x03E1CD90 ADRP X20, 0x34E000
	0x03E1CD94 LDRB W8, [X19 + 0x422]
	0x03E1CD98 LDR X20, [X20 + 0xA60]
	0x03E1CD9C TBNZ X8, 0x0, 0x3E1CDB4
	0x03E1CDA0 ADRP X0, 0x34E000
	0x03E1CDA4 LDR X0, [X0 + 0xA60]
	0x03E1CDA8 BL 0x1C16CF4
	0x03E1CDAC MOVZ W8, 0x1
	0x03E1CDB0 STRB W8, [X19 + 0x422]
	0x03E1CDB4 LDR X0, [X20]
	0x03E1CDB8 BL 0x1C16F10
	0x03E1CDBC MOV X1, X31
	0x03E1CDC0 MOV X19, X0
	0x03E1CDC4 BL 0x33BDD8C
	0x03E1CDC8 LDR X8, [X20]
	0x03E1CDCC LDR X8, [X8 + 0xB8]
	0x03E1CDD0 STR X19, [X8]
	0x03E1CDD4 LDP X20, X19, [X31 + 0x10]
	0x03E1CDD8 LDR X30, [X31], #0x20
	0x03E1CDDC RET
	0x03E1CDE0 MOV X1, X31
	0x03E1CDE4 B 0x33BDD8C
	0x03E1CDE8 MOV X0, X1
	0x03E1CDEC MOV X1, X31
	0x03E1CDF0 B 0x3C22CDC
	0x03E1CDF4 STP X30, X19, [X31 - 0x10]!
	0x03E1CDF8 MOV X1, X31
	0x03E1CDFC MOV X19, X0
	0x03E1CE00 BL 0x33BDD8C
	0x03E1CE04 MOVZ W8, 0x1
	0x03E1CE08 STRB W8, [X19 + 0x10]
	0x03E1CE0C LDP X30, X19, [X31], #0x10
	0x03E1CE10 RET
	0x03E1CE14 AND W8, W1, 0x1
	0x03E1CE18 STRB W8, [X0 + 0x10]
	0x03E1CE1C RET
	0x03E1CE20 RET
	0x03E1CE24 LDR X0, [X0 + 0x10]
	0x03E1CE28 RET
	0x03E1CE2C LDR W0, [X0 + 0x18]
	0x03E1CE30 RET
	0x03E1CE34 LDR W0, [X0 + 0x1C]
	0x03E1CE38 RET
	0x03E1CE3C LDR W0, [X0 + 0x20]
	0x03E1CE40 RET
	0x03E1CE44 STP X30, X23, [X31 - 0x30]!
	0x03E1CE48 STP X22, X21, [X31 + 0x10]
	0x03E1CE4C STP X20, X19, [X31 + 0x20]
	0x03E1CE50 ADRP X22, 0x5CC000
	0x03E1CE54 LDRB W8, [X22 + 0x423]
	0x03E1CE58 MOV X19, X2
	0x03E1CE5C MOV X20, X1
	0x03E1CE60 MOV X21, X0
	0x03E1CE64 TBNZ X8, 0x0, 0x3E1CE88
	0x03E1CE68 ADRP X0, 0x2D8000
	0x03E1CE6C LDR X0, [X0 + 0x1C8]
	0x03E1CE70 BL 0x1C16CF4
	0x03E1CE74 ADRP X0, 0x2FF000
	0x03E1CE78 LDR X0, [X0 + 0xB58]
	0x03E1CE7C BL 0x1C16CF4
	0x03E1CE80 MOVZ W8, 0x1
	0x03E1CE84 STRB W8, [X22 + 0x423]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+104], X23
	004 Move [X31+112], X22
	005 Move [X31+120], X21
	006 Move [X31+128], X20
	007 Move [X31+136], X19
	008 Move X22, 0x5CD000
	009 Move X23, 0x34F000
	010 Move W8, [X22+1040]
	011 Move X23, [X23+2368]
	012 Move X21, X2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x34F000
	020 Move X0, [X0+2376]
	021 Call 0x1C17CF4
	022 Move X0, 0x34F000
	023 Move X0, [X0+2384]
	024 Call 0x1C17CF4
	025 Move X0, 0x34F000
	026 Move X0, [X0+2392]
	027 Call 0x1C17CF4
	028 Move X0, 0x34F000
	029 Move X0, [X0+2368]
	030 Call 0x1C17CF4
	031 Move X0, 0x34F000
	032 Move X0, [X0+2400]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1040], W8
	036 Move V1, [X21]
	037 Move V0, [X21+16]
	038 Move X0, [X23]
	039 Move [X31+64], V1
	040 Move [X31+72], V0
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X23]
	046 Move X8, [X0+184]
	047 Move X21, [X8+8]
	048 Compare X21, 0
	049 JumpIfEqual {52}
	050 Move V0, [X31+64]
	051 Move V1, [X31+80]
	052 Move V0, [X31+64]
	053 Move V1, [X31+80]
	054 Move [X31], V0
	055 Move [X31+8], V1
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X23]
	061 Move X9, 0x34F000
	062 Move X8, [X0+184]
	063 Move X9, [X9+2376]
	064 Move X22, [X8]
	065 Move X0, [X9]
	066 Call 0x1C17F10
	067 Move X8, 0x34F000
	068 Move X8, [X8+2392]
	069 Move X1, X22
	070 Move X3, X31
	071 Move X21, X0
	072 Move X2, [X8]
	073 Call Func`3<Object, Int32, Int32>..ctor, X0, X1, X2
	074 Move X8, [X23]
	075 Move X8, [X8+184]
	076 Move [X8+8], X21
	077 Move V0, [X31]
	078 Move V1, [X31+16]
	079 Move [X31+32], V0
	080 Move [X31+40], V1
	081 Compare X20, 0
	082 JumpIfEqual {104}
	083 Move X8, 0x34F000
	084 Move X8, [X8+2400]
	085 Move W4, [X20+64]
	086 Move V0, [X31+32]
	087 Move V1, [X31+48]
	088 Add X2, X31, 64
	089 Move X5, [X8]
	090 Move X0, X20
	091 Move X1, X19
	092 Move X3, X21
	093 Move [X31+64], V0
	094 Move [X31+72], V1
	095 Call UxmlAttributeDescription.GetValueFromBag, X0, X1, X2, X3, X4
	096 Move X20, [X31+128]
	097 Move X19, [X31+136]
	098 Move X22, [X31+112]
	099 Move X21, [X31+120]
	100 Move X30, [X31+96]
	101 Move X23, [X31+104]
	102 Add X31, X31, 144
	103 Return X0
	104 Call 0x1C17F20

Method: System.Boolean TryGetValueFromBag(UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc, ref System.Int32 value)

Disassembly:
	0x03E1CE88 LDR X0, [X21 + 0x28]
	0x03E1CE8C CBZ X0, 0x3E1CEDC
	0x03E1CE90 ADRP X23, 0x2FF000
	0x03E1CE94 LDR X23, [X23 + 0xB58]
	0x03E1CE98 MOVZ W22, 0x1
	0x03E1CE9C LDR W8, [X0 + 0x18]
	0x03E1CEA0 SUB W1, W22, 0x1
	0x03E1CEA4 SUB W8, W8, 0x1
	0x03E1CEA8 CMP W1, W8
	0x03E1CEAC B.GE 0x3E1CED8
	0x03E1CEB0 LDR X2, [X23]
	0x03E1CEB4 BL 0x301BCCC
	0x03E1CEB8 MOV X1, X20
	0x03E1CEBC MOV X2, X31
	0x03E1CEC0 BL 0x321BA08
	0x03E1CEC4 TBNZ X0, 0x0, 0x3E1CEE4
	0x03E1CEC8 LDR X0, [X21 + 0x28]
	0x03E1CECC ADD W22, W22, 0x2
	0x03E1CED0 CBNZ X0, 0x3E1CE9C
	0x03E1CED4 BL 0x1C16F20
	0x03E1CED8 MOV X0, X31
	0x03E1CEDC MOV W8, W31
	0x03E1CEE0 B 0x3E1CEFC
	0x03E1CEE4 LDR X0, [X21 + 0x28]
	0x03E1CEE8 CBZ X0, 0x3E1CED4
	0x03E1CEEC LDR X2, [X23]
	0x03E1CEF0 MOV W1, W22
	0x03E1CEF4 BL 0x301BCCC
	0x03E1CEF8 MOVZ W8, 0x1
	0x03E1CEFC STR X0, [X19]
	0x03E1CF00 LDP X20, X19, [X31 + 0x20]
	0x03E1CF04 LDP X22, X21, [X31 + 0x10]
	0x03E1CF08 MOV W0, W8
	0x03E1CF0C LDP X30, X23, [X31], #0x30
	0x03E1CF10 RET
	0x03E1CF14 B 0x3E1CF18
	0x03E1CF18 STP X30, X25, [X31 - 0x40]!
	0x03E1CF1C STP X24, X23, [X31 + 0x10]
	0x03E1CF20 STP X22, X21, [X31 + 0x20]
	0x03E1CF24 STP X20, X19, [X31 + 0x30]
	0x03E1CF28 ADRP X22, 0x5CC000
	0x03E1CF2C LDRB W8, [X22 + 0x424]
	0x03E1CF30 MOV X19, X2
	0x03E1CF34 MOV X21, X1
	0x03E1CF38 MOV X20, X0
	0x03E1CF3C TBNZ X8, 0x0, 0x3E1CF90
	0x03E1CF40 ADRP X0, 0x2D8000
	0x03E1CF44 LDR X0, [X0 + 0x1B8]
	0x03E1CF48 BL 0x1C16CF4
	0x03E1CF4C ADRP X0, 0x2D8000
	0x03E1CF50 LDR X0, [X0 + 0x1C0]
	0x03E1CF54 BL 0x1C16CF4
	0x03E1CF58 ADRP X0, 0x2D8000
	0x03E1CF5C LDR X0, [X0 + 0x1C8]
	0x03E1CF60 BL 0x1C16CF4
	0x03E1CF64 ADRP X0, 0x2FF000
	0x03E1CF68 LDR X0, [X0 + 0xB58]
	0x03E1CF6C BL 0x1C16CF4
	0x03E1CF70 ADRP X0, 0x323000
	0x03E1CF74 LDR X0, [X0 + 0x500]
	0x03E1CF78 BL 0x1C16CF4
	0x03E1CF7C ADRP X0, 0x2D8000
	0x03E1CF80 LDR X0, [X0 + 0x1D0]
	0x03E1CF84 BL 0x1C16CF4
	0x03E1CF88 MOVZ W8, 0x1
	0x03E1CF8C STRB W8, [X22 + 0x424]
	0x03E1CF90 LDR X22, [X20 + 0x28]
	0x03E1CF94 CBNZ X22, 0x3E1CFC4
	0x03E1CF98 ADRP X8, 0x2D8000
	0x03E1CF9C LDR X8, [X8 + 0x1D0]
	0x03E1CFA0 LDR X0, [X8]
	0x03E1CFA4 BL 0x1C16F10
	0x03E1CFA8 ADRP X8, 0x2D8000
	0x03E1CFAC LDR X8, [X8 + 0x1C0]
	0x03E1CFB0 MOV X22, X0
	0x03E1CFB4 LDR X1, [X8]
	0x03E1CFB8 BL 0x301B7C4
	0x03E1CFBC STR X22, [X20 + 0x28]
	0x03E1CFC0 CBZ X22, 0x3E1D014
	0x03E1CFC4 ADRP X25, 0x2FF000
	0x03E1CFC8 ADRP X24, 0x2D8000
	0x03E1CFCC LDR X25, [X25 + 0xB58]
	0x03E1CFD0 LDR X24, [X24 + 0x1B8]
	0x03E1CFD4 MOVZ W23, 0x1
	0x03E1CFD8 LDRSW X8, [X22 + 0x18]
	0x03E1CFDC SUB W1, W23, 0x1
	0x03E1CFE0 SUB W9, W8, 0x1
	0x03E1CFE4 CMP W1, W9

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X23, 0x5CD000
	010 Move X24, 0x34F000
	011 Move W8, [X23+1041]
	012 Move X24, [X24+2368]
	013 Move X19, X3
	014 Move X22, X2
	015 Move X20, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x34F000
	022 Move X0, [X0+2376]
	023 Call 0x1C17CF4
	024 Move X0, 0x34F000
	025 Move X0, [X0+2384]
	026 Call 0x1C17CF4
	027 Move X0, 0x34F000
	028 Move X0, [X0+2408]
	029 Call 0x1C17CF4
	030 Move X0, 0x34F000
	031 Move X0, [X0+2368]
	032 Call 0x1C17CF4
	033 Move X0, 0x34F000
	034 Move X0, [X0+2416]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+1041], W8
	038 Move V1, [X22]
	039 Move V0, [X22+16]
	040 Move X0, [X24]
	041 Move [X31+64], V1
	042 Move [X31+72], V0
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X24]
	048 Move X8, [X0+184]
	049 Move X22, [X8+16]
	050 Compare X22, 0
	051 JumpIfEqual {54}
	052 Move V0, [X31+64]
	053 Move V1, [X31+80]
	054 Move V0, [X31+64]
	055 Move V1, [X31+80]
	056 Move [X31], V0
	057 Move [X31+8], V1
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X24]
	063 Move X9, 0x34F000
	064 Move X8, [X0+184]
	065 Move X9, [X9+2376]
	066 Move X23, [X8]
	067 Move X0, [X9]
	068 Call 0x1C17F10
	069 Move X8, 0x34F000
	070 Move X8, [X8+2408]
	071 Move X1, X23
	072 Move X3, X31
	073 Move X22, X0
	074 Move X2, [X8]
	075 Call Func`3<Object, Int32, Int32>..ctor, X0, X1, X2
	076 Move X8, [X24]
	077 Move X8, [X8+184]
	078 Move [X8+16], X22
	079 Move V0, [X31]
	080 Move V1, [X31+16]
	081 Move [X31+32], V0
	082 Move [X31+40], V1
	083 Compare X21, 0
	084 JumpIfEqual {109}
	085 Move X8, 0x34F000
	086 Move X8, [X8+2416]
	087 Move W4, [X21+64]
	088 Move V0, [X31+32]
	089 Move V1, [X31+48]
	090 Add X2, X31, 64
	091 Move X6, [X8]
	092 Move X0, X21
	093 Move X1, X20
	094 Move X3, X22
	095 Move X5, X19
	096 Move [X31+64], V0
	097 Move [X31+72], V1
	098 Call 0x22AA7A4, X0, X1, X2, X3, X4, X5
	099 Move X20, [X31+144]
	100 Move X19, [X31+152]
	101 Move X22, [X31+128]
	102 Move X21, [X31+136]
	103 Move X24, [X31+112]
	104 Move X23, [X31+120]
	105 Move X30, [X31+96]
	106 And W0, W0, 1
	107 Add X31, X31, 160
	108 Return X0
	109 Call 0x1C17F20

Method: System.Int32 ConvertValueToInt(System.String v, System.Int32 defaultValue)

Disassembly:
	0x03E1CFE8 B.GE 0x3E1D018
	0x03E1CFEC LDR X2, [X25]
	0x03E1CFF0 MOV X0, X22
	0x03E1CFF4 BL 0x301BCCC
	0x03E1CFF8 MOV X1, X21
	0x03E1CFFC MOV X2, X31
	0x03E1D000 BL 0x321BA08
	0x03E1D004 TBNZ X0, 0x0, 0x3E1D050
	0x03E1D008 LDR X22, [X20 + 0x28]
	0x03E1D00C ADD W23, W23, 0x2
	0x03E1D010 CBNZ X22, 0x3E1CFD8
	0x03E1D014 BL 0x1C16F20
	0x03E1D018 LDR W11, [X22 + 0x1C]
	0x03E1D01C LDR X9, [X22 + 0x10]
	0x03E1D020 LDR X10, [X24]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move [X31+12], W31
	006 Compare X0, 0
	007 JumpIfEqual {14}
	008 Add X1, X31, 12
	009 Move X2, X31
	010 Call Int32.TryParse, X0, X1
	011 Move W8, [X31+12]
	012 And W31, W0, 1
	013 NotImplemented "Instruction CSEL not yet implemented."
	014 Move W0, W19
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Add X31, X31, 32
	018 Return X0

