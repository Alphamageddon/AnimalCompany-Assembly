Type: UnityEngine.UIElements.TextField/TextInput

Method: System.Void set_multiline(System.Boolean value)

Disassembly:
	0x03D690BC CMP X11, X1
	0x03D690C0 B.EQ 0x3D69104
	0x03D690C4 SUBS X9, X9, 0x1
	0x03D690C8 ADD X10, X10, 0x10
	0x03D690CC B.NE 0x3D690B8
	0x03D690D0 MOVZ W2, 0x1
	0x03D690D4 MOV X0, X20
	0x03D690D8 BL 0x1C5C788
	0x03D690DC B 0x3D69114
	0x03D690E0 LDRSW X9, [X10]
	0x03D690E4 ADD X8, X8, X9, 0x4, LSL
	0x03D690E8 ADD X0, X8, 0x138
	0x03D690EC LDP X2, X1, [X0]
	0x03D690F0 MOV X0, X20
	0x03D690F4 LDP X20, X19, [X31 + 0x20]
	0x03D690F8 LDP X22, X21, [X31 + 0x10]
	0x03D690FC LDR X30, [X31], #0x30
	0x03D69100 BR X2
	0x03D69104 LDR W9, [X10]
	0x03D69108 ADD W9, W9, 0x1
	0x03D6910C ADD X8, X8, W9, 0x4, SXTW
	0x03D69110 ADD X0, X8, 0x138
	0x03D69114 LDP X8, X2, [X0]
	0x03D69118 MOV X0, X20
	0x03D6911C MOV X1, X21
	0x03D69120 BLR X8
	0x03D69124 CBZ X0, 0x3D691A4
	0x03D69128 ADRP X10, 0x3B5000
	0x03D6912C LDR X8, [X0]
	0x03D69130 LDR X10, [X10 + 0xAB8]
	0x03D69134 MOV X19, X0
	0x03D69138 LDRH W9, [X8 + 0x12E]
	0x03D6913C LDR X1, [X10]
	0x03D69140 CBZ X9, 0x3D69164
	0x03D69144 LDR X10, [X8 + 0xB0]
	0x03D69148 ADD X10, X10, 0x8
	0x03D6914C LDUR X11, [X10 - 0x8]
	0x03D69150 CMP X11, X1
	0x03D69154 B.EQ 0x3D69174
	0x03D69158 SUBS X9, X9, 0x1
	0x03D6915C ADD X10, X10, 0x10
	0x03D69160 B.NE 0x3D6914C
	0x03D69164 MOVZ W2, 0x4
	0x03D69168 MOV X0, X19
	0x03D6916C BL 0x1C5C788
	0x03D69170 B 0x3D69184
	0x03D69174 LDR W9, [X10]
	0x03D69178 ADD W9, W9, 0x4
	0x03D6917C ADD X8, X8, W9, 0x4, SXTW
	0x03D69180 ADD X0, X8, 0x138
	0x03D69184 LDP X8, X2, [X0]
	0x03D69188 MOVZ W1, 0x64
	0x03D6918C MOV X0, X19
	0x03D69190 BLR X8
	0x03D69194 CBZ X22, 0x3D691A4
	0x03D69198 MOV X19, X22
	0x03D6919C STR X0, [X19 + 0x20]
	0x03D691A0 B 0x3D68FE8
	0x03D691A4 BL 0x1C16F20
	0x03D691A8 STR X30, [X31 - 0x50]!
	0x03D691AC STP X26, X25, [X31 + 0x10]
	0x03D691B0 STP X24, X23, [X31 + 0x20]
	0x03D691B4 STP X22, X21, [X31 + 0x30]
	0x03D691B8 STP X20, X19, [X31 + 0x40]
	0x03D691BC ADRP X20, 0x67E000
	0x03D691C0 LDRB W8, [X20 + 0xCDD]
	0x03D691C4 MOV X19, X0
	0x03D691C8 TBNZ X8, 0x0, 0x3D691F8
	0x03D691CC ADRP X0, 0x38C000
	0x03D691D0 LDR X0, [X0 + 0x170]
	0x03D691D4 BL 0x1C16CF4
	0x03D691D8 ADRP X0, 0x3B4000
	0x03D691DC LDR X0, [X0 + 0x630]
	0x03D691E0 BL 0x1C16CF4
	0x03D691E4 ADRP X0, 0x38A000
	0x03D691E8 LDR X0, [X0 + 0x988]
	0x03D691EC BL 0x1C16CF4
	0x03D691F0 MOVZ W8, 0x1
	0x03D691F4 STRB W8, [X20 + 0xCDD]
	0x03D691F8 STRH W31, [X31 + 0xC]
	0x03D691FC LDR X0, [X19 + 0x18]
	0x03D69200 CBZ X0, 0x3D699E4
	0x03D69204 MOV X1, X31
	0x03D69208 BL 0x3C7E218
	0x03D6920C TBZ X0, 0x0, 0x3D692BC
	0x03D69210 LDR X0, [X19 + 0x10]
	0x03D69214 CBZ X0, 0x3D699E4
	0x03D69218 LDR X8, [X0 + 0x410]
	0x03D6921C CBZ X8, 0x3D69794
	0x03D69220 MOV X1, X31
	0x03D69224 BL 0x3E0AF0C
	0x03D69228 LDR X8, [X19 + 0x10]
	0x03D6922C CBZ X8, 0x3D699E4
	0x03D69230 LDR X22, [X8 + 0x410]
	0x03D69234 CBZ X22, 0x3D699E4
	0x03D69238 MOV X20, X0
	0x03D6923C MOV X0, X22
	0x03D69240 MOV X1, X31
	0x03D69244 BL 0x3C3CF1C
	0x03D69248 MOV X21, X0
	0x03D6924C MOV X0, X22
	0x03D69250 MOV X1, X31
	0x03D69254 BL 0x3C3D058
	0x03D69258 CBZ W0, 0x3D692C8
	0x03D6925C MOV X0, X22
	0x03D69260 MOV X1, X31
	0x03D69264 BL 0x3C3D058
	0x03D69268 CMP W0, 0x2
	0x03D6926C B.NE 0x3D69334
	0x03D69270 CBZ X20, 0x3D699E4
	0x03D69274 ADRP X10, 0x3B4000
	0x03D69278 LDR X8, [X20]
	0x03D6927C LDR X10, [X10 + 0x630]
	0x03D69280 LDRH W9, [X8 + 0x12E]
	0x03D69284 LDR X1, [X10]
	0x03D69288 CBZ X9, 0x3D692AC
	0x03D6928C LDR X10, [X8 + 0xB0]
	0x03D69290 ADD X10, X10, 0x8
	0x03D69294 LDUR X11, [X10 - 0x8]
	0x03D69298 CMP X11, X1
	0x03D6929C B.EQ 0x3D693B4
	0x03D692A0 SUBS X9, X9, 0x1
	0x03D692A4 ADD X10, X10, 0x10
	0x03D692A8 B.NE 0x3D69294
	0x03D692AC MOVZ W2, 0x9
	0x03D692B0 MOV X0, X20
	0x03D692B4 BL 0x1C5C788
	0x03D692B8 B 0x3D693C4
	0x03D692BC MOV X0, X19
	0x03D692C0 BL 0x3D699E8
	0x03D692C4 B 0x3D69794
	0x03D692C8 LDR X0, [X19 + 0x18]
	0x03D692CC CBZ X0, 0x3D699E4
	0x03D692D0 MOV X1, X31
	0x03D692D4 BL 0x3C7B628
	0x03D692D8 MOV X1, X21
	0x03D692DC MOV X2, X31
	0x03D692E0 BL 0x321BA08
	0x03D692E4 TBNZ X0, 0x0, 0x3D69794
	0x03D692E8 CBZ X20, 0x3D699E4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x67F000
	008 Move X22, 0x3FE000
	009 Move W8, [X21+3289]
	010 Move X22, [X22+2560]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0x3B5000
	018 Move X0, [X0+1584]
	019 Call 0x1C17CF4
	020 Move X0, 0x3FE000
	021 Move X0, [X0+2568]
	022 Call 0x1C17CF4
	023 Move X0, 0x3FE000
	024 Move X0, [X0+2576]
	025 Call 0x1C17CF4
	026 Move X0, 0x3FE000
	027 Move X0, [X0+2560]
	028 Call 0x1C17CF4
	029 Move X0, 0x3FE000
	030 Move X0, [X0+2584]
	031 Call 0x1C17CF4
	032 Move X0, 0x3FE000
	033 Move X0, [X0+2592]
	034 Call 0x1C17CF4
	035 Move X0, 0x38C000
	036 Move X0, [X0+4064]
	037 Call 0x1C17CF4
	038 Move X0, 0x38B000
	039 Move X0, [X0+2440]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+3289], W8
	043 Move X1, [X22]
	044 Move X0, X19
	045 Call TextInputBase<Object>.get_textEdition, X0
	046 Compare X0, 0
	047 JumpIfEqual {160}
	048 Move X23, 0x3B5000
	049 Move X8, [X0]
	050 Move X23, [X23+1584]
	051 Move X21, X0
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X23]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move X0, X21
	063 Move W2, W31
	064 Call 0x1C5D788
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X21
	071 NotImplemented "Instruction BLR not yet implemented."
	072 And W8, W0, 1
	073 And W9, W20, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X1, [X22]
	076 Move X0, X19
	077 Call TextInputBase<Object>.get_textEdition, X0
	078 Compare X0, 0
	079 JumpIfEqual {160}
	080 Move X8, [X0]
	081 Move X1, [X23]
	082 Move X21, X0
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Compare X9, 0
	085 JumpIfEqual {92}
	086 Move X10, [X8+176]
	087 Add X10, X10, 8
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Subtract X9, X9, 1
	091 Add X10, X10, 16
	092 Move W2, 1
	093 Move X0, X21
	094 Call 0x1C5D788
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Move X23, [X31+56]
	101 Return 
	102 Move W9, [X10]
	103 Add W9, W9, 1
	104 Add X8, X8, W9
	105 Add X0, X8, 312
	106 Move X8, [X0]
	107 Move X2, [X0+8]
	108 And W1, W20, 1
	109 Move X0, X21
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move TEMP, X20
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {127}
	115 Move X8, 0x3FE000
	116 Move X8, [X8+2568]
	117 Move X0, X19
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X1, [X8]
	123 Move X30, [X31+48]
	124 Move X23, [X31+56]
	125 Call TextInputBase<Object>.SetMultiline, X0
	126 Return 
	127 Move X8, 0x3FE000
	128 Move X8, [X8+2584]
	129 Move X0, X19
	130 Move X1, [X8]
	131 Call TextInputBase<Object>.get_text, X0
	132 Compare X0, 0
	133 JumpIfEqual {160}
	134 Move X8, 0x38C000
	135 Move X9, 0x38B000
	136 Move X8, [X8+4064]
	137 Move X9, [X9+2440]
	138 Move X3, X31
	139 Move X1, [X8]
	140 Move X2, [X9]
	141 Call String.Replace, X0, X1, X2
	142 Move X8, 0x3FE000
	143 Move X8, [X8+2592]
	144 Move X1, X0
	145 Move X0, X19
	146 Move X2, [X8]
	147 Call TextInputBase<Object>.set_text, X0, X1
	148 Move X8, 0x3FE000
	149 Move X8, [X8+2576]
	150 Move X0, X19
	151 Move X20, [X31+32]
	152 Move X19, [X31+40]
	153 Move X22, [X31+16]
	154 Move X21, [X31+24]
	155 Move X1, [X8]
	156 Move X30, [X31+48]
	157 Move X23, [X31+56]
	158 Call TextInputBase<Object>.SetSingleLine, X0
	159 Return 
	160 Call 0x1C17F20

Method: System.Void set_isPasswordField(System.Boolean value)

Disassembly:
	0x03D69EBC MOVZ W2, 0x17
	0x03D69EC0 MOV X0, X20
	0x03D69EC4 BL 0x1C5C788
	0x03D69EC8 B 0x3D69EDC
	0x03D69ECC LDR W9, [X10]
	0x03D69ED0 ADD W9, W9, 0x17
	0x03D69ED4 ADD X8, X8, W9, 0x4, SXTW
	0x03D69ED8 ADD X0, X8, 0x138
	0x03D69EDC LDP X8, X1, [X0]
	0x03D69EE0 MOV X0, X20
	0x03D69EE4 BLR X8
	0x03D69EE8 ANDS W8, W0, 0x1
	0x03D69EEC CSEL X28, X31, X21, NE
	0x03D69EF0 CSEL X22, X31, X25, NE
	0x03D69EF4 CSEL W23, W31, W26, NE
	0x03D69EF8 CBZ W8, 0x3D69F0C
	0x03D69EFC MOV W24, W31
	0x03D69F00 MOV X22, X25
	0x03D69F04 MOV W23, W26
	0x03D69F08 B 0x3D69F70
	0x03D69F0C LDR X8, [X20]
	0x03D69F10 LDR X1, [X27]
	0x03D69F14 LDRH W9, [X8 + 0x12E]
	0x03D69F18 CBZ X9, 0x3D69F3C
	0x03D69F1C LDR X10, [X8 + 0xB0]
	0x03D69F20 ADD X10, X10, 0x8
	0x03D69F24 LDUR X11, [X10 - 0x8]
	0x03D69F28 CMP X11, X1
	0x03D69F2C B.EQ 0x3D69F4C
	0x03D69F30 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x67F000
	007 Move X22, 0x3FE000
	008 Move W8, [X21+3290]
	009 Move X22, [X22+2768]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3FE000
	017 Move X0, [X0+2768]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3290], W8
	021 Move X2, [X22]
	022 And W1, W20, 1
	023 Move X0, X19
	024 Call TextInputBase<Object>.set_isPasswordField, X0, X1
	025 Move TEMP, X20
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {38}
	029 Move X0, X19
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move W1, W31
	035 Move X30, [X31+48]
	036 Call TextInput.set_multiline, X0, X1
	037 Return 
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 

Method: System.String StringToValue(System.String str)

Disassembly:
	0x03D69F34 ADD X10, X10, 0x10
	0x03D69F38 B.NE 0x3D69F24

ISIL:
	001 Move X0, X1
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03D694F8 BL 0x3C7B628
	0x03D694FC LDR X8, [X26]
	0x03D69500 MOV X24, X0
	0x03D69504 LDR W9, [X8 + 0xE0]
	0x03D69508 CBNZ W9, 0x3D69514
	0x03D6950C MOV X0, X8
	0x03D69510 BL 0x1C16DFC
	0x03D69514 ADD X0, X31, 0xC
	0x03D69518 MOV X1, X31
	0x03D6951C BL 0x330A76C
	0x03D69520 MOV X1, X0
	0x03D69524 MOV X0, X24
	0x03D69528 MOV X2, X31
	0x03D6952C BL 0x321B938
	0x03D69530 MOV X1, X0
	0x03D69534 MOV X0, X23
	0x03D69538 MOV X2, X31
	0x03D6953C BL 0x3C7B630
	0x03D69540 MOVZ W23, 0x1
	0x03D69544 LDR W8, [X21 + 0x10]
	0x03D69548 ADD W22, W22, 0x1
	0x03D6954C CMP W22, W8
	0x03D69550 B.LT 0x3D69450
	0x03D69554 TBZ X23, 0x0, 0x3D69560
	0x03D69558 MOV X0, X19
	0x03D6955C BL 0x3D69ACC
	0x03D69560 LDR X0, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x67F000
	006 Move X20, 0x3FE000
	007 Move W8, [X21+3291]
	008 Move X20, [X20+2632]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3FE000
	015 Move X0, [X0+2640]
	016 Call 0x1C17CF4
	017 Move X0, 0x3FE000
	018 Move X0, [X0+2632]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3291], W8
	022 Move X0, [X20]
	023 Move X20, 0x3FE000
	024 Move W8, [X0+224]
	025 Move X20, [X20+2640]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call TextInputBase<Object>..ctor, X0
	036 Return 

