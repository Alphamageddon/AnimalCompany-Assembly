Type: UnityEngine.UIElements.VisualTreeViewDataUpdater

Method: Unity.Profiling.ProfilerMarker get_profilerMarker()

Disassembly:
	0x03D1F23C ADRP X20, 0x3FD000
	0x03D1F240 LDRB W8, [X21 + 0x970]
	0x03D1F244 LDR X20, [X20 + 0x820]
	0x03D1F248 MOV X19, X0
	0x03D1F24C TBNZ X8, 0x0, 0x3D1F264
	0x03D1F250 ADRP X0, 0x3FD000
	0x03D1F254 LDR X0, [X0 + 0x820]
	0x03D1F258 BL 0x1C16CF4
	0x03D1F25C MOVZ W8, 0x1
	0x03D1F260 STRB W8, [X21 + 0x970]
	0x03D1F264 LDR X0, [X20]
	0x03D1F268 LDR W8, [X0 + 0xE0]
	0x03D1F26C CBNZ W8, 0x3D1F278
	0x03D1F270 BL 0x1C16DFC
	0x03D1F274 LDR X0, [X20]
	0x03D1F278 LDR X8, [X0 + 0xB8]
	0x03D1F27C LDR X8, [X8 + 0x18]
	0x03D1F280 CBZ X8, 0x3D1F2A0
	0x03D1F284 LDR X3, [X8 + 0x18]
	0x03D1F288 LDR X0, [X8 + 0x40]
	0x03D1F28C LDR X2, [X8 + 0x28]
	0x03D1F290 MOV X1, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6C9000
	005 Move X19, 0x446000
	006 Move W8, [X20+2396]
	007 Move X19, [X19+976]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x446000
	013 Move X0, [X0+976]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2396], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType)

Disassembly:
	0x03D1F294 LDP X20, X19, [X31 + 0x10]
	0x03D1F298 LDP X30, X21, [X31], #0x20
	0x03D1F29C BR X3
	0x03D1F2A0 LDP X20, X19, [X31 + 0x10]
	0x03D1F2A4 LDP X30, X21, [X31], #0x20
	0x03D1F2A8 RET
	0x03D1F2AC STP X30, X21, [X31 - 0x20]!
	0x03D1F2B0 STP X20, X19, [X31 + 0x10]
	0x03D1F2B4 ADRP X21, 0x6C8000
	0x03D1F2B8 ADRP X20, 0x3FD000
	0x03D1F2BC LDRB W8, [X21 + 0x971]
	0x03D1F2C0 LDR X20, [X20 + 0x820]
	0x03D1F2C4 MOV X19, X0
	0x03D1F2C8 TBNZ X8, 0x0, 0x3D1F2E0
	0x03D1F2CC ADRP X0, 0x3FD000
	0x03D1F2D0 LDR X0, [X0 + 0x820]
	0x03D1F2D4 BL 0x1C16CF4
	0x03D1F2D8 MOVZ W8, 0x1
	0x03D1F2DC STRB W8, [X21 + 0x971]
	0x03D1F2E0 LDR X0, [X20]
	0x03D1F2E4 LDR W8, [X0 + 0xE0]
	0x03D1F2E8 CBNZ W8, 0x3D1F2F4
	0x03D1F2EC BL 0x1C16DFC
	0x03D1F2F0 LDR X0, [X20]
	0x03D1F2F4 LDR X8, [X0 + 0xB8]
	0x03D1F2F8 LDR X8, [X8 + 0x20]
	0x03D1F2FC CBZ X8, 0x3D1F31C
	0x03D1F300 LDR X3, [X8 + 0x18]
	0x03D1F304 LDR X0, [X8 + 0x40]
	0x03D1F308 LDR X2, [X8 + 0x28]
	0x03D1F30C MOV X1, X19
	0x03D1F310 LDP X20, X19, [X31 + 0x10]
	0x03D1F314 LDP X30, X21, [X31], #0x20
	0x03D1F318 BR X3
	0x03D1F31C LDP X20, X19, [X31 + 0x10]
	0x03D1F320 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6C9000
	007 Move W8, [X22+2397]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x444000
	016 Move X0, [X0+1992]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2397], W8
	020 Move TEMP, X21
	021 And TEMP, TEMP, 2
	022 Compare TEMP, 2
	023 JumpIfEqual {30}
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Return 
	030 Move W8, [X20+48]
	031 Move X0, [X20+32]
	032 Add W8, W8, 1
	033 Move [X20+48], W8
	034 Compare X0, 0
	035 JumpIfEqual {48}
	036 Move X8, 0x444000
	037 Move X8, [X8+1992]
	038 Move X1, X19
	039 Move X2, [X8]
	040 Call HashSet`1<Object>.Add, X0, X1
	041 Move X0, X20
	042 Move X1, X19
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03D1F3C8 LDR X0, [X0 + 0x820]
	0x03D1F3CC BL 0x1C16CF4
	0x03D1F3D0 MOVZ W8, 0x1
	0x03D1F3D4 STRB W8, [X21 + 0x973]
	0x03D1F3D8 LDR X0, [X20]
	0x03D1F3DC LDR W8, [X0 + 0xE0]
	0x03D1F3E0 CBNZ W8, 0x3D1F3EC
	0x03D1F3E4 BL 0x1C16DFC
	0x03D1F3E8 LDR X0, [X20]
	0x03D1F3EC LDR X8, [X0 + 0xB8]
	0x03D1F3F0 LDR X8, [X8 + 0x30]
	0x03D1F3F4 CBZ X8, 0x3D1F414
	0x03D1F3F8 LDR X3, [X8 + 0x18]
	0x03D1F3FC LDR X0, [X8 + 0x40]
	0x03D1F400 LDR X2, [X8 + 0x28]
	0x03D1F404 MOV X1, X19
	0x03D1F408 LDP X20, X19, [X31 + 0x10]
	0x03D1F40C LDP X30, X21, [X31], #0x20
	0x03D1F410 BR X3
	0x03D1F414 LDP X20, X19, [X31 + 0x10]
	0x03D1F418 LDP X30, X21, [X31], #0x20
	0x03D1F41C RET
	0x03D1F420 STR X30, [X31 - 0x30]!
	0x03D1F424 STP X22, X21, [X31 + 0x10]
	0x03D1F428 STP X20, X19, [X31 + 0x20]
	0x03D1F42C ADRP X22, 0x6C8000
	0x03D1F430 LDR X3, [X22 + 0x978]
	0x03D1F434 MOV W20, W2
	0x03D1F438 MOV W19, W1
	0x03D1F43C MOV W21, W0
	0x03D1F440 CBNZ X3, 0x3D1F458
	0x03D1F444 ADRP X0, 0xFFFFFFFFFCDE6000
	0x03D1F448 ADD X0, X0, 0x8F9
	0x03D1F44C BL 0x1C16CB8
	0x03D1F450 MOV X3, X0
	0x03D1F454 STR X0, [X22 + 0x978]
	0x03D1F458 AND W2, W20, 0x1
	0x03D1F45C MOV W0, W21
	0x03D1F460 MOV W1, W19
	0x03D1F464 LDP X20, X19, [X31 + 0x20]
	0x03D1F468 LDP X22, X21, [X31 + 0x10]
	0x03D1F46C LDR X30, [X31], #0x30
	0x03D1F470 BR X3
	0x03D1F474 STR X30, [X31 - 0x20]!
	0x03D1F478 STP X20, X19, [X31 + 0x10]
	0x03D1F47C ADRP X20, 0x6C8000
	0x03D1F480 LDR X1, [X20 + 0x980]
	0x03D1F484 MOV X19, X0
	0x03D1F488 CBNZ X1, 0x3D1F4A0
	0x03D1F48C ADRP X0, 0xFFFFFFFFFCDD4000
	0x03D1F490 ADD X0, X0, 0xBF0
	0x03D1F494 BL 0x1C16CB8
	0x03D1F498 MOV X1, X0
	0x03D1F49C STR X0, [X20 + 0x980]
	0x03D1F4A0 MOV X0, X19
	0x03D1F4A4 LDP X20, X19, [X31 + 0x10]
	0x03D1F4A8 LDR X30, [X31], #0x20
	0x03D1F4AC BR X1
	0x03D1F4B0 STR X30, [X31 - 0x40]!
	0x03D1F4B4 STP X24, X23, [X31 + 0x10]
	0x03D1F4B8 STP X22, X21, [X31 + 0x20]
	0x03D1F4BC STP X20, X19, [X31 + 0x30]
	0x03D1F4C0 ADRP X24, 0x6C8000
	0x03D1F4C4 LDR X5, [X24 + 0x988]
	0x03D1F4C8 MOV W19, W4
	0x03D1F4CC MOV W20, W3
	0x03D1F4D0 MOV W21, W2
	0x03D1F4D4 MOV X22, X1
	0x03D1F4D8 MOV X23, X0
	0x03D1F4DC CBNZ X5, 0x3D1F4F4
	0x03D1F4E0 ADRP X0, 0xFFFFFFFFFCDE4000
	0x03D1F4E4 ADD X0, X0, 0xC20
	0x03D1F4E8 BL 0x1C16CB8
	0x03D1F4EC MOV X5, X0
	0x03D1F4F0 STR X0, [X24 + 0x988]
	0x03D1F4F4 MOV X0, X23
	0x03D1F4F8 MOV X1, X22
	0x03D1F4FC MOV W2, W21
	0x03D1F500 MOV W3, W20
	0x03D1F504 MOV W4, W19
	0x03D1F508 LDP X20, X19, [X31 + 0x30]
	0x03D1F50C LDP X22, X21, [X31 + 0x20]
	0x03D1F510 LDP X24, X23, [X31 + 0x10]
	0x03D1F514 LDR X30, [X31], #0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6C9000
	005 Move W8, [X20+2398]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x3D5000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x444000
	015 Move X0, [X0+2032]
	016 Call 0x1C17CF4
	017 Move X0, 0x446000
	018 Move X0, [X0+984]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2398], W8
	022 Move W8, [X19+48]
	023 Move W9, [X19+52]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 
	029 Move W20, 6
	030 Move X0, [X19+24]
	031 Move [X19+52], W8
	032 Compare X0, 0
	033 JumpIfEqual {95}
	034 Move X8, [X0]
	035 Move X9, [X8+920]
	036 Move X1, [X8+928]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X1, X0
	039 Move W2, 1
	040 Move X0, X19
	041 Call VisualTreeViewDataUpdater.ValidateViewDataOnSubTree, X0, X1, X2
	042 Subtract W20, W20, 1
	043 Move W8, [X19+48]
	044 Move W9, [X19+52]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X19+24]
	047 Compare X0, 0
	048 JumpIfEqual {95}
	049 Move X8, [X0]
	050 Move X9, [X8+920]
	051 Move X1, [X8+928]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, 0x446000
	054 Move X8, [X8+984]
	055 Move X20, [X8]
	056 Compare X0, 0
	057 JumpIfEqual {63}
	058 Move X8, [X0]
	059 Move X9, [X8+360]
	060 Move X1, [X8+368]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X1, X0
	063 Move X1, X31
	064 Move X0, X20
	065 Move X2, X31
	066 Call String.Concat, X0, X1
	067 Move X8, 0x3D5000
	068 Move X8, [X8+2600]
	069 Move X20, X0
	070 Move X8, [X8]
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X0, X20
	077 Move X1, X31
	078 Call Debug.LogError, X0
	079 Move X0, [X19+32]
	080 Compare X0, 0
	081 JumpIfEqual {95}
	082 Move X20, 0x444000
	083 Move X20, [X20+2032]
	084 Move X1, [X20]
	085 Call HashSet`1<Object>.Clear, X0
	086 Move X0, [X19+40]
	087 Compare X0, 0
	088 JumpIfEqual {95}
	089 Move X1, [X20]
	090 Move X20, [X31+16]
	091 Move X19, [X31+24]
	092 Move X30, [X31+32]
	093 Call HashSet`1<Object>.Clear, X0
	094 Return 
	095 Call 0x1C17F20

Method: System.Void ValidateViewDataOnSubTree(UnityEngine.UIElements.VisualElement ve, System.Boolean enablePersistence)

Disassembly:
	0x03D1F518 BR X5
	0x03D1F51C STP X30, X23, [X31 - 0x30]!
	0x03D1F520 STP X22, X21, [X31 + 0x10]
	0x03D1F524 STP X20, X19, [X31 + 0x20]
	0x03D1F528 ADRP X23, 0x6C8000
	0x03D1F52C LDR X4, [X23 + 0x990]
	0x03D1F530 MOV W19, W3
	0x03D1F534 MOV X20, X2
	0x03D1F538 MOV W21, W1
	0x03D1F53C MOV X22, X0
	0x03D1F540 CBNZ X4, 0x3D1F558
	0x03D1F544 ADRP X0, 0xFFFFFFFFFCDEE000
	0x03D1F548 ADD X0, X0, 0xC8C
	0x03D1F54C BL 0x1C16CB8
	0x03D1F550 MOV X4, X0
	0x03D1F554 STR X0, [X23 + 0x990]
	0x03D1F558 MOV X0, X22
	0x03D1F55C MOV W1, W21
	0x03D1F560 MOV X2, X20
	0x03D1F564 MOV W3, W19
	0x03D1F568 LDP X20, X19, [X31 + 0x20]
	0x03D1F56C LDP X22, X21, [X31 + 0x10]
	0x03D1F570 LDP X30, X23, [X31], #0x30
	0x03D1F574 BR X4
	0x03D1F578 STR X30, [X31 - 0x20]!
	0x03D1F57C STP X20, X19, [X31 + 0x10]
	0x03D1F580 ADRP X20, 0x6C8000
	0x03D1F584 LDR X1, [X20 + 0x998]
	0x03D1F588 MOV X19, X0
	0x03D1F58C CBNZ X1, 0x3D1F5A4
	0x03D1F590 ADRP X0, 0xFFFFFFFFFCDFA000
	0x03D1F594 ADD X0, X0, 0x6F1
	0x03D1F598 BL 0x1C16CB8
	0x03D1F59C MOV X1, X0
	0x03D1F5A0 STR X0, [X20 + 0x998]
	0x03D1F5A4 MOV X0, X19
	0x03D1F5A8 LDP X20, X19, [X31 + 0x10]
	0x03D1F5AC LDR X30, [X31], #0x20
	0x03D1F5B0 BR X1
	0x03D1F5B4 SUB X31, X31, 0x70
	0x03D1F5B8 STP X29, X30, [X31 + 0x10]
	0x03D1F5BC STP X28, X27, [X31 + 0x20]
	0x03D1F5C0 STP X26, X25, [X31 + 0x30]
	0x03D1F5C4 STP X24, X23, [X31 + 0x40]
	0x03D1F5C8 STP X22, X21, [X31 + 0x50]
	0x03D1F5CC STP X20, X19, [X31 + 0x60]
	0x03D1F5D0 STP W5, W7, [X31 + 0x8]
	0x03D1F5D4 STR W4, [X31 + 0x4]
	0x03D1F5D8 ADRP X20, 0x6C8000
	0x03D1F5DC ADRP X21, 0x3FD000
	0x03D1F5E0 LDR W27, [X31 + 0x88]
	0x03D1F5E4 LDR X28, [X31 + 0x80]
	0x03D1F5E8 LDR W29, [X31 + 0x78]
	0x03D1F5EC LDRB W8, [X20 + 0x9A0]
	0x03D1F5F0 LDR X19, [X31 + 0x70]
	0x03D1F5F4 LDR X21, [X21 + 0x820]
	0x03D1F5F8 MOV W23, W6
	0x03D1F5FC MOV X22, X3
	0x03D1F600 MOV X24, X2
	0x03D1F604 MOV X25, X1
	0x03D1F608 MOV X26, X0
	0x03D1F60C TBNZ X8, 0x0, 0x3D1F624
	0x03D1F610 ADRP X0, 0x3FD000
	0x03D1F614 LDR X0, [X0 + 0x820]
	0x03D1F618 BL 0x1C16CF4
	0x03D1F61C MOVZ W8, 0x1
	0x03D1F620 STRB W8, [X20 + 0x9A0]
	0x03D1F624 LDR X0, [X21]
	0x03D1F628 LDR W8, [X0 + 0xE0]
	0x03D1F62C CBNZ W8, 0x3D1F634
	0x03D1F630 BL 0x1C16DFC
	0x03D1F634 ADRP X20, 0x6C8000
	0x03D1F638 LDR X8, [X20 + 0xA28]
	0x03D1F63C CBNZ X8, 0x3D1F654
	0x03D1F640 ADRP X0, 0xFFFFFFFFFCDFC000
	0x03D1F644 ADD X0, X0, 0x743
	0x03D1F648 BL 0x1C16CB8
	0x03D1F64C MOV X8, X0
	0x03D1F650 STR X0, [X20 + 0xA28]
	0x03D1F654 STR W27, [X31 + 0x88]
	0x03D1F658 STR X28, [X31 + 0x80]
	0x03D1F65C STR W29, [X31 + 0x78]
	0x03D1F660 AND W6, W23, 0x1
	0x03D1F664 STR X19, [X31 + 0x70]
	0x03D1F668 MOV X0, X26

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x6C9000
	009 Move W8, [X22+2399]
	010 Move W21, W2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x446000
	018 Move X0, [X0+800]
	019 Call 0x1C17CF4
	020 Move X0, 0x444000
	021 Move X0, [X0+2000]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2399], W8
	025 Compare X19, 0
	026 JumpIfEqual {103}
	027 And W1, W21, 1
	028 Move X0, X19
	029 Move X2, X31
	030 Call VisualElement.IsViewDataPersitenceSupportedOnChildren, X0, X1
	031 Move X8, [X20+32]
	032 Compare X8, 0
	033 JumpIfEqual {103}
	034 Move X22, 0x446000
	035 Move X22, [X22+800]
	036 Move W21, W0
	037 Move X0, X8
	038 Move X1, X19
	039 Move X2, [X22]
	040 Call HashSet`1<Object>.Contains, X0, X1
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {57}
	045 Move X0, [X20+32]
	046 Compare X0, 0
	047 JumpIfEqual {103}
	048 Move X8, 0x444000
	049 Move X8, [X8+2000]
	050 Move X1, X19
	051 Move X2, [X8]
	052 Call HashSet`1<Object>.Remove, X0, X1
	053 And W1, W21, 1
	054 Move X0, X19
	055 Move X2, X31
	056 Call VisualElement.OnViewDataReady, X0, X1
	057 Move X0, [X20+40]
	058 Compare X0, 0
	059 JumpIfEqual {103}
	060 Move X2, [X22]
	061 Move X1, X19
	062 Call HashSet`1<Object>.Contains, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {95}
	067 Move X0, [X20+40]
	068 Compare X0, 0
	069 JumpIfEqual {103}
	070 Move X8, 0x444000
	071 Move X8, [X8+2000]
	072 Move X1, X19
	073 Move X2, [X8]
	074 Call HashSet`1<Object>.Remove, X0, X1
	075 Move X8, [X19+888]
	076 Add X0, X31, 8
	077 Move X1, X31
	078 Move [X31+8], X8
	079 Call Hierarchy.get_childCount, X0
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W22, W0
	082 Move W23, W31
	083 Move X8, [X19+888]
	084 Add X0, X31, 8
	085 Move W1, W23
	086 Move X2, X31
	087 Move [X31+8], X8
	088 Call Hierarchy.get_Item, X0, X1
	089 Move X1, X0
	090 And W2, W21, 1
	091 Move X0, X20
	092 Call VisualTreeViewDataUpdater.ValidateViewDataOnSubTree, X0, X1, X2
	093 Add W23, W23, 1
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X20, [X31+48]
	096 Move X19, [X31+56]
	097 Move X22, [X31+32]
	098 Move X21, [X31+40]
	099 Move X30, [X31+16]
	100 Move X23, [X31+24]
	101 Add X31, X31, 64
	102 Return 
	103 Call 0x1C17F20

Method: System.Void PropagateToParents(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D1F324 RET
	0x03D1F328 STP X30, X21, [X31 - 0x20]!
	0x03D1F32C STP X20, X19, [X31 + 0x10]
	0x03D1F330 ADRP X21, 0x6C8000
	0x03D1F334 ADRP X20, 0x3FD000
	0x03D1F338 LDRB W8, [X21 + 0x972]
	0x03D1F33C LDR X20, [X20 + 0x820]
	0x03D1F340 MOV X19, X0
	0x03D1F344 TBNZ X8, 0x0, 0x3D1F35C
	0x03D1F348 ADRP X0, 0x3FD000
	0x03D1F34C LDR X0, [X0 + 0x820]
	0x03D1F350 BL 0x1C16CF4
	0x03D1F354 MOVZ W8, 0x1
	0x03D1F358 STRB W8, [X21 + 0x972]
	0x03D1F35C LDR X0, [X20]
	0x03D1F360 LDR W8, [X0 + 0xE0]
	0x03D1F364 CBNZ W8, 0x3D1F370
	0x03D1F368 BL 0x1C16DFC
	0x03D1F36C LDR X0, [X20]
	0x03D1F370 LDR X8, [X0 + 0xB8]
	0x03D1F374 LDR X8, [X8 + 0x28]
	0x03D1F378 CBZ X8, 0x3D1F398
	0x03D1F37C LDR X3, [X8 + 0x18]
	0x03D1F380 LDR X0, [X8 + 0x40]
	0x03D1F384 LDR X2, [X8 + 0x28]
	0x03D1F388 MOV X1, X19
	0x03D1F38C LDP X20, X19, [X31 + 0x10]
	0x03D1F390 LDP X30, X21, [X31], #0x20
	0x03D1F394 BR X3
	0x03D1F398 LDP X20, X19, [X31 + 0x10]
	0x03D1F39C LDP X30, X21, [X31], #0x20
	0x03D1F3A0 RET
	0x03D1F3A4 STP X30, X21, [X31 - 0x20]!
	0x03D1F3A8 STP X20, X19, [X31 + 0x10]
	0x03D1F3AC ADRP X21, 0x6C8000
	0x03D1F3B0 ADRP X20, 0x3FD000
	0x03D1F3B4 LDRB W8, [X21 + 0x973]
	0x03D1F3B8 LDR X20, [X20 + 0x820]
	0x03D1F3BC MOV X19, X0
	0x03D1F3C0 TBNZ X8, 0x0, 0x3D1F3D8
	0x03D1F3C4 ADRP X0, 0x3FD000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6C9000
	007 Move W8, [X21+2400]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x444000
	015 Move X0, [X0+1992]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2400], W8
	019 Compare X20, 0
	020 JumpIfEqual {55}
	021 Move X8, [X20+888]
	022 Add X0, X31, 8
	023 Move X1, X31
	024 Move [X31+8], X8
	025 Call Hierarchy.get_parent, X0
	026 Compare X0, 0
	027 JumpIfEqual {49}
	028 Move X21, 0x444000
	029 Move X21, [X21+1992]
	030 Move X20, X0
	031 Move X0, [X19+40]
	032 Compare X0, 0
	033 JumpIfEqual {55}
	034 Move X2, [X21]
	035 Move X1, X20
	036 Call HashSet`1<Object>.Add, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {49}
	041 Move X8, [X20+888]
	042 Add X0, X31, 8
	043 Move X1, X31
	044 Move [X31+8], X8
	045 Call Hierarchy.get_parent, X0
	046 Move X20, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {31}
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+16]
	052 Move X21, [X31+24]
	053 Add X31, X31, 48
	054 Return 
	055 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D1F66C MOV X1, X25
	0x03D1F670 MOV X2, X24
	0x03D1F674 MOV X3, X22
	0x03D1F678 LDP W4, W5, [X31 + 0x4]
	0x03D1F67C LDR W7, [X31 + 0xC]
	0x03D1F680 LDP X20, X19, [X31 + 0x60]
	0x03D1F684 LDP X22, X21, [X31 + 0x50]
	0x03D1F688 LDP X24, X23, [X31 + 0x40]
	0x03D1F68C LDP X26, X25, [X31 + 0x30]
	0x03D1F690 LDP X28, X27, [X31 + 0x20]
	0x03D1F694 LDP X29, X30, [X31 + 0x10]
	0x03D1F698 ADD X31, X31, 0x70
	0x03D1F69C BR X8
	0x03D1F6A0 SUB X31, X31, 0x70
	0x03D1F6A4 STP X29, X30, [X31 + 0x10]
	0x03D1F6A8 STP X28, X27, [X31 + 0x20]
	0x03D1F6AC STP X26, X25, [X31 + 0x30]
	0x03D1F6B0 STP X24, X23, [X31 + 0x40]
	0x03D1F6B4 STP X22, X21, [X31 + 0x50]
	0x03D1F6B8 STP X20, X19, [X31 + 0x60]
	0x03D1F6BC ADRP X8, 0x6C8000
	0x03D1F6C0 LDR W27, [X31 + 0x88]
	0x03D1F6C4 LDR X28, [X31 + 0x80]
	0x03D1F6C8 LDR W29, [X31 + 0x78]
	0x03D1F6CC LDR X8, [X8 + 0xA28]
	0x03D1F6D0 LDR X19, [X31 + 0x70]
	0x03D1F6D4 MOV W23, W6
	0x03D1F6D8 MOV W20, W5
	0x03D1F6DC MOV W21, W4
	0x03D1F6E0 MOV X22, X3
	0x03D1F6E4 MOV X24, X2
	0x03D1F6E8 MOV X25, X1
	0x03D1F6EC MOV X26, X0
	0x03D1F6F0 CBNZ X8, 0x3D1F714
	0x03D1F6F4 ADRP X0, 0xFFFFFFFFFCDFC000
	0x03D1F6F8 ADD X0, X0, 0x743
	0x03D1F6FC STR W7, [X31 + 0xC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6C9000
	007 Move X22, 0x444000
	008 Move X21, 0x444000
	009 Move W8, [X20+2401]
	010 Move X22, [X22+2184]
	011 Move X21, [X21+2192]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x444000
	018 Move X0, [X0+2192]
	019 Call 0x1C17CF4
	020 Move X0, 0x444000
	021 Move X0, [X0+2184]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2401], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X21]
	028 Move X20, X0
	029 Call HashSet`1<Object>..ctor, X0
	030 Move [X19+32], X20
	031 Move X0, [X22]
	032 Call 0x1C17F10
	033 Move X1, [X21]
	034 Move X20, X0
	035 Call HashSet`1<Object>..ctor, X0
	036 Move [X19+40], X20
	037 Move [X19+48], X31
	038 Move X0, X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X1, X31
	044 Move X30, [X31+48]
	045 Call Object..ctor, X0
	046 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D1F700 BL 0x1C16CB8
	0x03D1F704 LDR W7, [X31 + 0xC]
	0x03D1F708 MOV X8, X0
	0x03D1F70C ADRP X9, 0x6C8000
	0x03D1F710 STR X0, [X9 + 0xA28]
	0x03D1F714 STR W27, [X31 + 0x88]
	0x03D1F718 STR X28, [X31 + 0x80]
	0x03D1F71C STR W29, [X31 + 0x78]
	0x03D1F720 AND W6, W23, 0x1
	0x03D1F724 STR X19, [X31 + 0x70]
	0x03D1F728 MOV X0, X26
	0x03D1F72C MOV X1, X25
	0x03D1F730 MOV X2, X24
	0x03D1F734 MOV X3, X22
	0x03D1F738 MOV W4, W21
	0x03D1F73C MOV W5, W20
	0x03D1F740 LDP X20, X19, [X31 + 0x60]
	0x03D1F744 LDP X22, X21, [X31 + 0x50]
	0x03D1F748 LDP X24, X23, [X31 + 0x40]
	0x03D1F74C LDP X26, X25, [X31 + 0x30]
	0x03D1F750 LDP X28, X27, [X31 + 0x20]
	0x03D1F754 LDP X29, X30, [X31 + 0x10]
	0x03D1F758 ADD X31, X31, 0x70
	0x03D1F75C BR X8
	0x03D1F760 STP X30, X25, [X31 - 0x40]!
	0x03D1F764 STP X24, X23, [X31 + 0x10]
	0x03D1F768 STP X22, X21, [X31 + 0x20]
	0x03D1F76C STP X20, X19, [X31 + 0x30]
	0x03D1F770 ADRP X25, 0x6C8000
	0x03D1F774 LDR X6, [X25 + 0x9A8]
	0x03D1F778 MOV X19, X5
	0x03D1F77C MOV W20, W4
	0x03D1F780 MOV X21, X3
	0x03D1F784 MOV W22, W2
	0x03D1F788 MOV X23, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6C9000
	006 Move X20, 0x446000
	007 Move X19, 0x446000
	008 Move W8, [X21+2402]
	009 Move X20, [X20+992]
	010 Move X19, [X19+976]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x446000
	016 Move X0, [X0+976]
	017 Call 0x1C17CF4
	018 Move X0, 0x446000
	019 Move X0, [X0+992]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2402], W8
	023 Move X8, [X19]
	024 Move X9, [X20]
	025 Move W1, 1
	026 Move W2, W31
	027 Move X8, [X8+184]
	028 Move W3, W31
	029 Move X4, X31
	030 Move [X8], X9
	031 Move X8, [X19]
	032 Move X8, [X8+184]
	033 Move X0, [X8]
	034 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	035 Move X8, [X19]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8+8], X0
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 

