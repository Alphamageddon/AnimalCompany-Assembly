Type: UnityEngine.UIElements.UxmlEnumeration

Method: System.Collections.Generic.IEnumerable`1<System.String> get_values()

Disassembly:
	0x03E1EBC4 CMP W8, 0x17
	0x03E1EBC8 B.LS 0x3E1F37C

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_values(System.Collections.Generic.IEnumerable`1<System.String> value)

Disassembly:
	0x03E1EBCC ADRP X8, 0x34C000
	0x03E1EBD0 LDR X8, [X8 + 0xCF8]
	0x03E1EBD4 STR X20, [X19 + 0xD8]
	0x03E1EBD8 LDR X0, [X8]
	0x03E1EBDC BL 0x1C16F10
	0x03E1EBE0 MOV X1, X31
	0x03E1EBE4 MOV X20, X0
	0x03E1EBE8 BL 0x3D13208
	0x03E1EBEC CBZ X20, 0x3E1EC04
	0x03E1EBF0 LDR X8, [X19]
	0x03E1EBF4 MOV X0, X20
	0x03E1EBF8 LDR X1, [X8 + 0x40]
	0x03E1EBFC BL 0x1C16E00
	0x03E1EC00 CBZ X0, 0x3E1F380
	0x03E1EC04 LDR W8, [X21]
	0x03E1EC08 CMP W8, 0x18
	0x03E1EC0C B.LS 0x3E1F37C
	0x03E1EC10 ADRP X8, 0x34C000
	0x03E1EC14 LDR X8, [X8 + 0xC58]
	0x03E1EC18 STR X20, [X19 + 0xE0]
	0x03E1EC1C LDR X0, [X8]
	0x03E1EC20 BL 0x1C16F10
	0x03E1EC24 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5CB000
	007 Move X22, 0x314000
	008 Move W8, [X21+1066]
	009 Move X22, [X22+776]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x314000
	017 Move X0, [X0+776]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1066], W8
	021 Move X1, [X22]
	022 Move X0, X20
	023 Call Enumerable.ToList, X0
	024 Move [X19+16], X0
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Return 

Method: System.Boolean Equals(UnityEngine.UIElements.UxmlTypeRestriction other)

Disassembly:
	0x03E1EC28 MOV X20, X0
	0x03E1EC2C BL 0x3D7AAD0
	0x03E1EC30 CBZ X20, 0x3E1EC48
	0x03E1EC34 LDR X8, [X19]
	0x03E1EC38 MOV X0, X20
	0x03E1EC3C LDR X1, [X8 + 0x40]
	0x03E1EC40 BL 0x1C16E00
	0x03E1EC44 CBZ X0, 0x3E1F380
	0x03E1EC48 LDR W8, [X21]
	0x03E1EC4C CMP W8, 0x19
	0x03E1EC50 B.LS 0x3E1F37C
	0x03E1EC54 ADRP X8, 0x34C000
	0x03E1EC58 LDR X8, [X8 + 0xD18]
	0x03E1EC5C STR X20, [X19 + 0xE8]
	0x03E1EC60 LDR X0, [X8]
	0x03E1EC64 BL 0x1C16F10
	0x03E1EC68 MOV X1, X31
	0x03E1EC6C MOV X20, X0
	0x03E1EC70 BL 0x3D7B7E0
	0x03E1EC74 CBZ X20, 0x3E1EC8C
	0x03E1EC78 LDR X8, [X19]
	0x03E1EC7C MOV X0, X20
	0x03E1EC80 LDR X1, [X8 + 0x40]
	0x03E1EC84 BL 0x1C16E00
	0x03E1EC88 CBZ X0, 0x3E1F380
	0x03E1EC8C LDR W8, [X21]
	0x03E1EC90 CMP W8, 0x1A
	0x03E1EC94 B.LS 0x3E1F37C
	0x03E1EC98 ADRP X8, 0x34C000
	0x03E1EC9C LDR X8, [X8 + 0xC70]
	0x03E1ECA0 STR X20, [X19 + 0xF0]
	0x03E1ECA4 LDR X0, [X8]
	0x03E1ECA8 BL 0x1C16F10
	0x03E1ECAC MOV X1, X31
	0x03E1ECB0 MOV X20, X0
	0x03E1ECB4 BL 0x3D6B8E8
	0x03E1ECB8 CBZ X20, 0x3E1ECD0
	0x03E1ECBC LDR X8, [X19]
	0x03E1ECC0 MOV X0, X20
	0x03E1ECC4 LDR X1, [X8 + 0x40]
	0x03E1ECC8 BL 0x1C16E00
	0x03E1ECCC CBZ X0, 0x3E1F380
	0x03E1ECD0 LDR W8, [X21]
	0x03E1ECD4 CMP W8, 0x1B
	0x03E1ECD8 B.LS 0x3E1F37C
	0x03E1ECDC ADRP X8, 0x34C000
	0x03E1ECE0 LDR X8, [X8 + 0xBB8]
	0x03E1ECE4 STR X20, [X19 + 0xF8]
	0x03E1ECE8 LDR X0, [X8]
	0x03E1ECEC BL 0x1C16F10
	0x03E1ECF0 MOV X1, X31
	0x03E1ECF4 MOV X20, X0
	0x03E1ECF8 BL 0x3D8A0BC
	0x03E1ECFC CBZ X20, 0x3E1ED14
	0x03E1ED00 LDR X8, [X19]
	0x03E1ED04 MOV X0, X20
	0x03E1ED08 LDR X1, [X8 + 0x40]
	0x03E1ED0C BL 0x1C16E00
	0x03E1ED10 CBZ X0, 0x3E1F380
	0x03E1ED14 LDR W8, [X21]
	0x03E1ED18 CMP W8, 0x1C
	0x03E1ED1C B.LS 0x3E1F37C
	0x03E1ED20 ADRP X8, 0x34C000
	0x03E1ED24 LDR X8, [X8 + 0xBD8]
	0x03E1ED28 STR X20, [X19 + 0x100]
	0x03E1ED2C LDR X0, [X8]
	0x03E1ED30 BL 0x1C16F10
	0x03E1ED34 MOV X1, X31
	0x03E1ED38 MOV X20, X0
	0x03E1ED3C BL 0x3D878A0
	0x03E1ED40 CBZ X20, 0x3E1ED58
	0x03E1ED44 LDR X8, [X19]
	0x03E1ED48 MOV X0, X20
	0x03E1ED4C LDR X1, [X8 + 0x40]
	0x03E1ED50 BL 0x1C16E00
	0x03E1ED54 CBZ X0, 0x3E1F380
	0x03E1ED58 LDR W8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x5CB000
	008 Move W8, [X21+1067]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x329000
	016 Move X0, [X0+592]
	017 Call 0x1C17CF4
	018 Move X0, 0x2D7000
	019 Move X0, [X0+3152]
	020 Call 0x1C17CF4
	021 Move X0, 0x2D7000
	022 Move X0, [X0+88]
	023 Call 0x1C17CF4
	024 Move X0, 0x2D7000
	025 Move X0, [X0+3064]
	026 Call 0x1C17CF4
	027 Move X0, 0x300000
	028 Move X0, [X0+2736]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+1067], W8
	032 Compare X19, 0
	033 JumpIfEqual {80}
	034 Move X8, 0x300000
	035 Move X8, [X8+2736]
	036 Move X9, [X19]
	037 Move X8, [X8]
	038 Move W11, [X9+304]
	039 Move W10, [X8+304]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X9, [X9+200]
	042 Add X9, X9, X10
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, 0x2D7000
	046 Move X21, [X20+16]
	047 Move X22, [X19+16]
	048 Move X8, [X8+3064]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X8, 0x2D7000
	052 Move X8, [X8+3152]
	053 Move X1, X22
	054 Move X3, X31
	055 Move X23, X0
	056 Move X2, [X8]
	057 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	058 Move X8, 0x329000
	059 Move X8, [X8+592]
	060 Move X0, X21
	061 Move X1, X23
	062 Move X2, [X8]
	063 Call Enumerable.All, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {80}
	068 Move X0, [X20+16]
	069 Move X20, 0x2D7000
	070 Move X20, [X20+88]
	071 Move X1, [X20]
	072 Call Enumerable.Count, X0
	073 Move X8, [X19+16]
	074 Move X1, [X20]
	075 Move W19, W0
	076 Move X0, X8
	077 Call Enumerable.Count, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSET not yet implemented."
	080 Move W0, W31
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03E1ED5C CMP W8, 0x1D
	0x03E1ED60 B.LS 0x3E1F37C
	0x03E1ED64 ADRP X8, 0x34C000
	0x03E1ED68 LDR X8, [X8 + 0xC78]
	0x03E1ED6C STR X20, [X19 + 0x108]
	0x03E1ED70 LDR X0, [X8]
	0x03E1ED74 BL 0x1C16F10
	0x03E1ED78 MOV X1, X31
	0x03E1ED7C MOV X20, X0
	0x03E1ED80 BL 0x3D0F354
	0x03E1ED84 CBZ X20, 0x3E1ED9C
	0x03E1ED88 LDR X8, [X19]
	0x03E1ED8C MOV X0, X20
	0x03E1ED90 LDR X1, [X8 + 0x40]
	0x03E1ED94 BL 0x1C16E00
	0x03E1ED98 CBZ X0, 0x3E1F380
	0x03E1ED9C LDR W8, [X21]
	0x03E1EDA0 CMP W8, 0x1E
	0x03E1EDA4 B.LS 0x3E1F37C
	0x03E1EDA8 ADRP X8, 0x34C000
	0x03E1EDAC LDR X8, [X8 + 0xD10]
	0x03E1EDB0 STR X20, [X19 + 0x110]
	0x03E1EDB4 LDR X0, [X8]
	0x03E1EDB8 BL 0x1C16F10
	0x03E1EDBC MOV X1, X31
	0x03E1EDC0 MOV X20, X0
	0x03E1EDC4 BL 0x3D79140
	0x03E1EDC8 CBZ X20, 0x3E1EDE0
	0x03E1EDCC LDR X8, [X19]
	0x03E1EDD0 MOV X0, X20
	0x03E1EDD4 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5CB000
	007 Move X22, 0x2D7000
	008 Move X20, 0x2D7000
	009 Move W8, [X21+1068]
	010 Move X22, [X22+464]
	011 Move X20, [X20+448]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2D7000
	018 Move X0, [X0+448]
	019 Call 0x1C17CF4
	020 Move X0, 0x2D7000
	021 Move X0, [X0+464]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1068], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+16], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

