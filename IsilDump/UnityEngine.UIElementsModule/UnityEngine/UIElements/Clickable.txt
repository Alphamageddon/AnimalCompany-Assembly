Type: UnityEngine.UIElements.Clickable

Method: System.Void add_clickedWithEventInfo(System.Action`1<UnityEngine.UIElements.EventBase> value)

Disassembly:
	0x03CEDC58 LDR X3, [X8]
	0x03CEDC5C LDR X22, [X22 + 0xA00]
	0x03CEDC60 LDR X23, [X23 + 0x9C8]
	0x03CEDC64 MOV X1, X21
	0x03CEDC68 MOV W2, W31
	0x03CEDC6C BL 0x21A18B4
	0x03CEDC70 MOV X0, X19
	0x03CEDC74 MOV X1, X31
	0x03CEDC78 BL 0x3DB9E70
	0x03CEDC7C LDR X8, [X22]
	0x03CEDC80 MOV X20, X0
	0x03CEDC84 MOV X0, X8
	0x03CEDC88 BL 0x1C16F10
	0x03CEDC8C LDR X2, [X23]
	0x03CEDC90 MOV X1, X19
	0x03CEDC94 MOV X3, X31
	0x03CEDC98 MOV X21, X0
	0x03CEDC9C BL 0x2D0E824
	0x03CEDCA0 CBZ X20, 0x3CEDCCC
	0x03CEDCA4 ADRP X8, 0x475000
	0x03CEDCA8 LDR X8, [X8 + 0xA38]
	0x03CEDCAC MOV X0, X20
	0x03CEDCB0 MOV X1, X21
	0x03CEDCB4 LDP X20, X19, [X31 + 0x20]
	0x03CEDCB8 LDR X3, [X8]
	0x03CEDCBC LDP X22, X21, [X31 + 0x10]
	0x03CEDCC0 MOV W2, W31
	0x03CEDCC4 LDP X30, X23, [X31], #0x30
	0x03CEDCC8 B 0x21A18B4
	0x03CEDCCC BL 0x1C16F20
	0x03CEDCD0 STP D9, D8, [X31 - 0x30]!
	0x03CEDCD4 STP X30, X21, [X31 + 0x10]
	0x03CEDCD8 STP X20, X19, [X31 + 0x20]
	0x03CEDCDC ADRP X21, 0x6FA000
	0x03CEDCE0 LDRB W8, [X21 + 0x752]
	0x03CEDCE4 MOV X19, X1
	0x03CEDCE8 MOV X20, X0
	0x03CEDCEC TBNZ X8, 0x0, 0x3CEDD10
	0x03CEDCF0 ADRP X0, 0x475000
	0x03CEDCF4 LDR X0, [X0 + 0xA40]
	0x03CEDCF8 BL 0x1C16CF4
	0x03CEDCFC ADRP X0, 0x42F000
	0x03CEDD00 LDR X0, [X0 + 0xE50]
	0x03CEDD04 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6FB000
	009 Move W8, [X21+1866]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x476000
	017 Move X0, [X0+2376]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1866], W8
	021 Move X24, 0x476000
	022 Add X20, X20, 48
	023 Move X21, [X20]
	024 Move X24, [X24+2376]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_clickedWithEventInfo(System.Action`1<UnityEngine.UIElements.EventBase> value)

Disassembly:
	0x03CEDD08 MOVZ W8, 0x1
	0x03CEDD0C STRB W8, [X21 + 0x752]
	0x03CEDD10 MOV X0, X20
	0x03CEDD14 MOV X1, X19
	0x03CEDD18 MOV X2, X31
	0x03CEDD1C BL 0x3DBAEFC
	0x03CEDD20 TBZ X0, 0x0, 0x3CEDD78
	0x03CEDD24 CBZ X19, 0x3CEDD88
	0x03CEDD28 ADRP X21, 0x42F000
	0x03CEDD2C LDR X21, [X21 + 0xE50]
	0x03CEDD30 LDP S9, S8, [X19 + 0x90]
	0x03CEDD34 LDR X0, [X21]
	0x03CEDD38 LDR W8, [X0 + 0xE0]
	0x03CEDD3C CBNZ W8, 0x3CEDD48
	0x03CEDD40 BL 0x1C16DFC
	0x03CEDD44 LDR X0, [X21]
	0x03CEDD48 LDR X8, [X0 + 0xB8]
	0x03CEDD4C LDR X9, [X20]
	0x03CEDD50 MOV X0, X20
	0x03CEDD54 MOV X1, X19
	0x03CEDD58 LDR W2, [X8 + 0x8]
	0x03CEDD5C LDP X4, X3, [X9 + 0x1B8]
	0x03CEDD60 LDP X20, X19, [X31 + 0x20]
	0x03CEDD64 LDP X30, X21, [X31 + 0x10]
	0x03CEDD68 MOV V0.16B, V9.16B
	0x03CEDD6C MOV V1.16B, V8.16B
	0x03CEDD70 LDP D9, D8, [X31], #0x30
	0x03CEDD74 BR X4
	0x03CEDD78 LDP X20, X19, [X31 + 0x20]
	0x03CEDD7C LDP X30, X21, [X31 + 0x10]
	0x03CEDD80 LDP D9, D8, [X31], #0x30
	0x03CEDD84 RET
	0x03CEDD88 BL 0x1C16F20
	0x03CEDD8C STP X30, X21, [X31 - 0x20]!
	0x03CEDD90 STP X20, X19, [X31 + 0x10]
	0x03CEDD94 ADRP X21, 0x6FA000
	0x03CEDD98 LDRB W8, [X21 + 0x753]
	0x03CEDD9C MOV X19, X1
	0x03CEDDA0 MOV X20, X0
	0x03CEDDA4 TBNZ X8, 0x0, 0x3CEDDBC
	0x03CEDDA8 ADRP X0, 0x475000
	0x03CEDDAC LDR X0, [X0 + 0xA48]
	0x03CEDDB0 BL 0x1C16CF4
	0x03CEDDB4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6FB000
	009 Move W8, [X21+1867]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x476000
	017 Move X0, [X0+2376]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1867], W8
	021 Move X24, 0x476000
	022 Add X20, X20, 48
	023 Move X21, [X20]
	024 Move X24, [X24+2376]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_clicked(System.Action value)

Disassembly:
	0x03CEDDB8 STRB W8, [X21 + 0x753]
	0x03CEDDBC LDRB W8, [X20 + 0x50]
	0x03CEDDC0 CBZ W8, 0x3CEDDE8
	0x03CEDDC4 CBZ X19, 0x3CEDDF4
	0x03CEDDC8 LDR X8, [X20]
	0x03CEDDCC LDP S0, S1, [X19 + 0x90]
	0x03CEDDD0 MOV X0, X20
	0x03CEDDD4 MOV X1, X19
	0x03CEDDD8 LDP X3, X2, [X8 + 0x1C8]
	0x03CEDDDC LDP X20, X19, [X31 + 0x10]
	0x03CEDDE0 LDP X30, X21, [X31], #0x20
	0x03CEDDE4 BR X3
	0x03CEDDE8 LDP X20, X19, [X31 + 0x10]
	0x03CEDDEC LDP X30, X21, [X31], #0x20
	0x03CEDDF0 RET
	0x03CEDDF4 BL 0x1C16F20
	0x03CEDDF8 STP D9, D8, [X31 - 0x30]!
	0x03CEDDFC STP X30, X21, [X31 + 0x10]
	0x03CEDE00 STP X20, X19, [X31 + 0x20]
	0x03CEDE04 ADRP X21, 0x6FA000
	0x03CEDE08 LDRB W8, [X21 + 0x754]
	0x03CEDE0C MOV X19, X1
	0x03CEDE10 MOV X20, X0
	0x03CEDE14 TBNZ X8, 0x0, 0x3CEDE38
	0x03CEDE18 ADRP X0, 0x475000
	0x03CEDE1C LDR X0, [X0 + 0xA50]
	0x03CEDE20 BL 0x1C16CF4
	0x03CEDE24 ADRP X0, 0x42F000
	0x03CEDE28 LDR X0, [X0 + 0xE50]
	0x03CEDE2C BL 0x1C16CF4
	0x03CEDE30 MOVZ W8, 0x1
	0x03CEDE34 STRB W8, [X21 + 0x754]
	0x03CEDE38 LDRB W8, [X20 + 0x50]
	0x03CEDE3C CBZ W8, 0x3CEDEA8
	0x03CEDE40 MOV X0, X20
	0x03CEDE44 MOV X1, X19
	0x03CEDE48 MOV X2, X31
	0x03CEDE4C BL 0x3DBB070
	0x03CEDE50 TBZ X0, 0x0, 0x3CEDEA8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6FB000
	007 Move W8, [X21+1868]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x408000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1868], W8
	019 Move X22, 0x408000
	020 Add X20, X20, 56
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_clicked(System.Action value)

Disassembly:
	0x03CEDE54 CBZ X19, 0x3CEDEB8
	0x03CEDE58 ADRP X21, 0x42F000
	0x03CEDE5C LDR X21, [X21 + 0xE50]
	0x03CEDE60 LDP S9, S8, [X19 + 0x90]
	0x03CEDE64 LDR X0, [X21]
	0x03CEDE68 LDR W8, [X0 + 0xE0]
	0x03CEDE6C CBNZ W8, 0x3CEDE78
	0x03CEDE70 BL 0x1C16DFC
	0x03CEDE74 LDR X0, [X21]
	0x03CEDE78 LDR X8, [X0 + 0xB8]
	0x03CEDE7C LDR X9, [X20]
	0x03CEDE80 MOV X0, X20
	0x03CEDE84 MOV X1, X19
	0x03CEDE88 LDR W2, [X8 + 0x8]
	0x03CEDE8C LDP X4, X3, [X9 + 0x1D8]
	0x03CEDE90 LDP X20, X19, [X31 + 0x20]
	0x03CEDE94 LDP X30, X21, [X31 + 0x10]
	0x03CEDE98 MOV V0.16B, V9.16B
	0x03CEDE9C MOV V1.16B, V8.16B
	0x03CEDEA0 LDP D9, D8, [X31], #0x30
	0x03CEDEA4 BR X4
	0x03CEDEA8 LDP X20, X19, [X31 + 0x20]
	0x03CEDEAC LDP X30, X21, [X31 + 0x10]
	0x03CEDEB0 LDP D9, D8, [X31], #0x30
	0x03CEDEB4 RET
	0x03CEDEB8 BL 0x1C16F20
	0x03CEDEBC STP X30, X21, [X31 - 0x20]!
	0x03CEDEC0 STP X20, X19, [X31 + 0x10]
	0x03CEDEC4 ADRP X21, 0x6FA000
	0x03CEDEC8 LDRB W8, [X21 + 0x755]
	0x03CEDECC MOV X19, X1
	0x03CEDED0 MOV X20, X0
	0x03CEDED4 TBNZ X8, 0x0, 0x3CEDEEC
	0x03CEDED8 ADRP X0, 0x42F000
	0x03CEDEDC LDR X0, [X0 + 0xE50]
	0x03CEDEE0 BL 0x1C16CF4
	0x03CEDEE4 MOVZ W8, 0x1
	0x03CEDEE8 STRB W8, [X21 + 0x755]
	0x03CEDEEC LDRB W8, [X20 + 0x50]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6FB000
	007 Move W8, [X21+1869]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x408000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1869], W8
	019 Move X22, 0x408000
	020 Add X20, X20, 56
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Boolean get_active()

Disassembly:
	0x03CEDEF0 CBZ W8, 0x3CEDF34
	0x03CEDEF4 ADRP X21, 0x42F000

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_active(System.Boolean value)

Disassembly:
	0x03CEDEF8 LDR X21, [X21 + 0xE50]
	0x03CEDEFC LDR X0, [X21]
	0x03CEDF00 LDR W8, [X0 + 0xE0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+80], W8
	003 Return 

Method: UnityEngine.Vector2 get_lastMousePosition()

Disassembly:
	0x03CEDF04 CBNZ W8, 0x3CEDF10
	0x03CEDF08 BL 0x1C16DFC

ISIL:
	001 Move S0, [X0+84]
	002 Move S1, [X0+88]
	003 Return X0

Method: System.Void set_lastMousePosition(UnityEngine.Vector2 value)

Disassembly:
	0x03CEDF0C LDR X0, [X21]
	0x03CEDF10 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X0+84], S0
	002 Move [X0+92], S1
	003 Return 

Method: System.Boolean get_acceptClicksIfDisabled()

Disassembly:
	0x03CEDF14 LDR X9, [X20]
	0x03CEDF18 MOV X0, X20

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void set_acceptClicksIfDisabled(System.Boolean value)

Disassembly:
	0x03CEDF1C MOV X1, X19
	0x03CEDF20 LDR W2, [X8 + 0x8]
	0x03CEDF24 LDP X4, X3, [X9 + 0x1E8]
	0x03CEDF28 LDP X20, X19, [X31 + 0x10]
	0x03CEDF2C LDP X30, X21, [X31], #0x20
	0x03CEDF30 BR X4
	0x03CEDF34 LDP X20, X19, [X31 + 0x10]
	0x03CEDF38 LDP X30, X21, [X31], #0x20
	0x03CEDF3C RET
	0x03CEDF40 STR X30, [X31 - 0x30]!
	0x03CEDF44 STP X22, X21, [X31 + 0x10]
	0x03CEDF48 STP X20, X19, [X31 + 0x20]
	0x03CEDF4C ADRP X21, 0x6FA000
	0x03CEDF50 LDRB W8, [X21 + 0x756]
	0x03CEDF54 MOV X19, X1
	0x03CEDF58 MOV X20, X0
	0x03CEDF5C TBNZ X8, 0x0, 0x3CEDF8C
	0x03CEDF60 ADRP X0, 0x431000
	0x03CEDF64 LDR X0, [X0 + 0xCF0]
	0x03CEDF68 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+96]
	005 And W20, W1, 1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X20, [X31+16]
	008 Move X19, [X31+24]
	009 Move X30, [X31+32]
	010 Return 
	011 Move X8, [X0]
	012 Move X19, X0
	013 Move X9, [X8+408]
	014 Move X1, [X8+416]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X8, [X19]
	017 Move [X19+96], W20
	018 Move X0, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X2, [X8+392]
	022 Move X1, [X8+400]
	023 Move X30, [X31+32]
	024 CallNoReturn X2

Method: UnityEngine.UIElements.InvokePolicy get_invokePolicy()

Disassembly:
	0x03CEDF6C ADRP X0, 0x431000
	0x03CEDF70 LDR X0, [X0 + 0xCF8]

ISIL:
	001 Move W0, [X0+96]
	002 Return X0

Method: System.Void .ctor(System.Action handler, System.Int64 delay, System.Int64 interval)

Disassembly:
	0x03CEDF74 BL 0x1C16CF4
	0x03CEDF78 ADRP X0, 0x42F000
	0x03CEDF7C LDR X0, [X0 + 0xE50]
	0x03CEDF80 BL 0x1C16CF4
	0x03CEDF84 MOVZ W8, 0x1
	0x03CEDF88 STRB W8, [X21 + 0x756]
	0x03CEDF8C MOV X0, X20
	0x03CEDF90 MOV X1, X19
	0x03CEDF94 MOV X2, X31
	0x03CEDF98 BL 0x3DC06D4
	0x03CEDF9C TBZ X0, 0x0, 0x3CEE010

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X3
	006 Move X20, X2
	007 Move X21, X0
	008 Call Clickable..ctor, X0, X1
	009 Move [X21+64], X20
	010 Move [X21+72], X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move [X21+80], W31
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void .ctor(System.Action`1<UnityEngine.UIElements.EventBase> handler)

Disassembly:
	0x03CEE068 B 0x3DBF888
	0x03CEE06C BL 0x1C16F20
	0x03CEE070 STR X30, [X31 - 0x30]!
	0x03CEE074 STP X22, X21, [X31 + 0x10]
	0x03CEE078 STP X20, X19, [X31 + 0x20]
	0x03CEE07C ADRP X21, 0x6F9000
	0x03CEE080 LDRB W8, [X21 + 0x757]
	0x03CEE084 MOV X19, X1
	0x03CEE088 MOV X20, X0
	0x03CEE08C TBNZ X8, 0x0, 0x3CEE0BC
	0x03CEE090 ADRP X0, 0x474000
	0x03CEE094 LDR X0, [X0 + 0xA58]
	0x03CEE098 BL 0x1C16CF4
	0x03CEE09C ADRP X0, 0x430000
	0x03CEE0A0 LDR X0, [X0 + 0x210]
	0x03CEE0A4 BL 0x1C16CF4
	0x03CEE0A8 ADRP X0, 0x42E000
	0x03CEE0AC LDR X0, [X0 + 0xE50]
	0x03CEE0B0 BL 0x1C16CF4
	0x03CEE0B4 MOVZ W8, 0x1
	0x03CEE0B8 STRB W8, [X21 + 0x757]
	0x03CEE0BC LDRB W8, [X20 + 0x50]
	0x03CEE0C0 CBZ W8, 0x3CEE134
	0x03CEE0C4 CBZ X19, 0x3CEE18C
	0x03CEE0C8 ADRP X22, 0x42E000
	0x03CEE0CC LDR X22, [X22 + 0xE50]
	0x03CEE0D0 LDR W21, [X19 + 0x9C]
	0x03CEE0D4 LDR X0, [X22]
	0x03CEE0D8 LDR W8, [X0 + 0xE0]
	0x03CEE0DC CBNZ W8, 0x3CEE0E8
	0x03CEE0E0 BL 0x1C16DFC
	0x03CEE0E4 LDR X0, [X22]
	0x03CEE0E8 LDR X8, [X0 + 0xB8]
	0x03CEE0EC LDR W8, [X8 + 0x8]
	0x03CEE0F0 CMP W21, W8
	0x03CEE0F4 B.NE 0x3CEE144
	0x03CEE0F8 MOV X0, X20
	0x03CEE0FC MOV X1, X31
	0x03CEE100 BL 0x3DB9E70
	0x03CEE104 CBZ X0, 0x3CEE18C
	0x03CEE108 MOV X1, X31
	0x03CEE10C BL 0x3DEC0CC
	0x03CEE110 LDR W1, [X19 + 0x9C]
	0x03CEE114 MOV X2, X31
	0x03CEE118 BL 0x3DBF888
	0x03CEE11C MOV X0, X19
	0x03CEE120 LDP X20, X19, [X31 + 0x20]
	0x03CEE124 LDP X22, X21, [X31 + 0x10]
	0x03CEE128 MOV X1, X31
	0x03CEE12C LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6FA000
	006 Move W8, [X21+1870]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x475000
	014 Move X0, [X0+2384]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1870], W8
	018 Move TEMP, 0
	019 Not TEMP
	020 Move W8, TEMP
	021 Move X0, X20
	022 Move X1, X31
	023 Move [X20+92], W8
	024 Call PointerManipulator..ctor, X0
	025 Move X0, [X20+24]
	026 Move [X20+48], X19
	027 Compare X0, 0
	028 JumpIfEqual {63}
	029 Move X9, 0x475000
	030 Move X9, [X9+2384]
	031 Move W10, [X0+28]
	032 Move X8, [X0+16]
	033 Move X9, [X9]
	034 Add W10, W10, 1
	035 Move [X0+28], W10
	036 Compare X8, 0
	037 JumpIfEqual {63}
	038 NotImplemented "Instruction LDRSW not yet implemented."
	039 Move W11, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W11, 12
	044 Add W9, W10, 1
	045 NotImplemented "Instruction MADD not yet implemented."
	046 Move [X0+24], W9
	047 Move [X8+32], X31
	048 Move [X8+40], W31
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Move X8, [X9+32]
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X1, X31
	056 Move X2, X31
	057 Move X8, [X8+192]
	058 Move X3, [X8+112]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Call List`1<ManipulatorActivationFilter>.AddWithResize, X0, X1
	062 Return 
	063 Call 0x1C17F20

Method: System.Void .ctor(System.Action handler)

Disassembly:
	0x03CEDFA0 CBZ X19, 0x3CEE06C
	0x03CEDFA4 ADRP X22, 0x42F000
	0x03CEDFA8 LDR X22, [X22 + 0xE50]
	0x03CEDFAC LDR W21, [X19 + 0x9C]
	0x03CEDFB0 LDR X0, [X22]
	0x03CEDFB4 LDR W8, [X0 + 0xE0]
	0x03CEDFB8 CBNZ W8, 0x3CEDFC4
	0x03CEDFBC BL 0x1C16DFC
	0x03CEDFC0 LDR X0, [X22]
	0x03CEDFC4 LDR X8, [X0 + 0xB8]
	0x03CEDFC8 LDR W8, [X8 + 0x8]
	0x03CEDFCC CMP W21, W8
	0x03CEDFD0 B.NE 0x3CEE020
	0x03CEDFD4 MOV X0, X20
	0x03CEDFD8 MOV X1, X31
	0x03CEDFDC BL 0x3DB9E70
	0x03CEDFE0 CBZ X0, 0x3CEE06C
	0x03CEDFE4 MOV X1, X31
	0x03CEDFE8 BL 0x3DEC0CC
	0x03CEDFEC LDR W1, [X19 + 0x9C]
	0x03CEDFF0 MOV X2, X31
	0x03CEDFF4 BL 0x3DBF888
	0x03CEDFF8 MOV X0, X19
	0x03CEDFFC LDP X20, X19, [X31 + 0x20]
	0x03CEE000 LDP X22, X21, [X31 + 0x10]
	0x03CEE004 MOV X1, X31
	0x03CEE008 LDR X30, [X31], #0x30
	0x03CEE00C B 0x3DA02EC
	0x03CEE010 LDP X20, X19, [X31 + 0x20]
	0x03CEE014 LDP X22, X21, [X31 + 0x10]
	0x03CEE018 LDR X30, [X31], #0x30
	0x03CEE01C RET
	0x03CEE020 LDR X8, [X20]
	0x03CEE024 LDP S0, S1, [X19 + 0xC0]
	0x03CEE028 LDR W2, [X19 + 0x9C]
	0x03CEE02C MOV X0, X20
	0x03CEE030 LDP X9, X3, [X8 + 0x1B8]
	0x03CEE034 MOV X1, X19
	0x03CEE038 BLR X9
	0x03CEE03C MOV X0, X20
	0x03CEE040 MOV X1, X31
	0x03CEE044 BL 0x3DB9E70
	0x03CEE048 CBZ X0, 0x3CEE06C
	0x03CEE04C MOV X1, X31
	0x03CEE050 BL 0x3DEC0CC
	0x03CEE054 LDR W1, [X19 + 0x9C]
	0x03CEE058 LDP X20, X19, [X31 + 0x20]
	0x03CEE05C LDP X22, X21, [X31 + 0x10]
	0x03CEE060 MOV X2, X31
	0x03CEE064 LDR X30, [X31], #0x30

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6FB000
	006 Move W8, [X21+1871]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x476000
	014 Move X0, [X0+2384]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1871], W8
	018 Move TEMP, 0
	019 Not TEMP
	020 Move W8, TEMP
	021 Move X0, X19
	022 Move X1, X31
	023 Move [X19+92], W8
	024 Call PointerManipulator..ctor, X0
	025 Move X0, [X19+24]
	026 Move [X19+56], X20
	027 Compare X0, 0
	028 JumpIfEqual {59}
	029 Move X9, 0x476000
	030 Move X9, [X9+2384]
	031 Move W10, [X0+28]
	032 Move X8, [X0+16]
	033 Move X9, [X9]
	034 Add W10, W10, 1
	035 Move [X0+28], W10
	036 Compare X8, 0
	037 JumpIfEqual {59}
	038 NotImplemented "Instruction LDRSW not yet implemented."
	039 Move W11, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W11, 12
	042 Add W9, W10, 1
	043 NotImplemented "Instruction MADD not yet implemented."
	044 Move [X0+24], W9
	045 Move [X8+32], X31
	046 Move [X8+40], W31
	047 Move X8, [X9+32]
	048 Move X1, X31
	049 Move X2, X31
	050 Move X8, [X8+192]
	051 Move X3, [X8+112]
	052 Call List`1<ManipulatorActivationFilter>.AddWithResize, X0, X1
	053 Move [X19+80], W31
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return 
	059 Call 0x1C17F20

Method: System.Void OnTimer(UnityEngine.UIElements.TimerState timerState)

Disassembly:
	0x03CEE130 B 0x3D9D950
	0x03CEE134 LDP X20, X19, [X31 + 0x20]
	0x03CEE138 LDP X22, X21, [X31 + 0x10]
	0x03CEE13C LDR X30, [X31], #0x30
	0x03CEE140 RET
	0x03CEE144 LDR X8, [X20]
	0x03CEE148 LDP S0, S1, [X19 + 0xC0]
	0x03CEE14C MOV X0, X20
	0x03CEE150 MOV X1, X19
	0x03CEE154 LDP X9, X2, [X8 + 0x1C8]
	0x03CEE158 BLR X9
	0x03CEE15C MOV X0, X20
	0x03CEE160 MOV X1, X31
	0x03CEE164 BL 0x3DB9E70
	0x03CEE168 CBZ X0, 0x3CEE18C
	0x03CEE16C MOV X1, X31
	0x03CEE170 BL 0x3DEC0CC
	0x03CEE174 LDR W1, [X19 + 0x9C]
	0x03CEE178 LDP X20, X19, [X31 + 0x20]
	0x03CEE17C LDP X22, X21, [X31 + 0x10]
	0x03CEE180 MOV X2, X31
	0x03CEE184 LDR X30, [X31], #0x30
	0x03CEE188 B 0x3DBF888
	0x03CEE18C BL 0x1C16F20
	0x03CEE190 STR X30, [X31 - 0x30]!
	0x03CEE194 STP X22, X21, [X31 + 0x10]
	0x03CEE198 STP X20, X19, [X31 + 0x20]
	0x03CEE19C ADRP X21, 0x6F9000
	0x03CEE1A0 LDRB W8, [X21 + 0x758]
	0x03CEE1A4 MOV X19, X1
	0x03CEE1A8 MOV X20, X0
	0x03CEE1AC TBNZ X8, 0x0, 0x3CEE1DC
	0x03CEE1B0 ADRP X0, 0x474000
	0x03CEE1B4 LDR X0, [X0 + 0xA60]
	0x03CEE1B8 BL 0x1C16CF4
	0x03CEE1BC ADRP X0, 0x430000
	0x03CEE1C0 LDR X0, [X0 + 0xD20]
	0x03CEE1C4 BL 0x1C16CF4
	0x03CEE1C8 ADRP X0, 0x42E000
	0x03CEE1CC LDR X0, [X0 + 0xE50]
	0x03CEE1D0 BL 0x1C16CF4
	0x03CEE1D4 MOVZ W8, 0x1
	0x03CEE1D8 STRB W8, [X21 + 0x758]
	0x03CEE1DC LDRB W8, [X20 + 0x50]
	0x03CEE1E0 CBZ W8, 0x3CEE268
	0x03CEE1E4 MOV X0, X20
	0x03CEE1E8 MOV X1, X19
	0x03CEE1EC MOV X2, X31
	0x03CEE1F0 BL 0x3DC08B8
	0x03CEE1F4 TBZ X0, 0x0, 0x3CEE268
	0x03CEE1F8 CBZ X19, 0x3CEE2C4
	0x03CEE1FC ADRP X22, 0x42E000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+56]
	004 Move X19, X0
	005 Compare X8, 0
	006 JumpIfNotEqual {10}
	007 Move X8, [X19+48]
	008 Compare X8, 0
	009 JumpIfEqual {62}
	010 Move X8, [X19+64]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X8, [X19+72]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W1, [X19+92]
	015 Move X0, X19
	016 Call Clickable.ContainsPointer, X0, X1
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {47}
	021 Move X0, X19
	022 Move X1, X31
	023 Call Manipulator.get_target, X0
	024 Compare X0, 0
	025 JumpIfEqual {65}
	026 Move X1, X31
	027 Call VisualElement.get_enabledInHierarchy, X0
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {35}
	032 Move W8, [X19+96]
	033 Compare W8, 0
	034 JumpIfEqual {47}
	035 Move X0, X19
	036 Move X1, X31
	037 Call Clickable.Invoke, X0, X1
	038 Move X0, X19
	039 Move X1, X31
	040 Call Manipulator.get_target, X0
	041 Compare X0, 0
	042 JumpIfEqual {65}
	043 Move X1, X31
	044 Move X19, X0
	045 Call VisualElement.get_pseudoStates, X0
	046 Or W1, W0, 1
	047 Move X0, X19
	048 Move X1, X31
	049 Call Manipulator.get_target, X0
	050 Compare X0, 0
	051 JumpIfEqual {65}
	052 Move X1, X31
	053 Move X19, X0
	054 Call VisualElement.get_pseudoStates, X0
	055 And W1, W0, 0xFFFFFFFE
	056 Move X0, X19
	057 Move X2, X31
	058 Move X30, [X31+16]
	059 Move X19, [X31+24]
	060 Call VisualElement.set_pseudoStates, X0, X1
	061 Return 
	062 Move X30, [X31+16]
	063 Move X19, [X31+24]
	064 Return 
	065 Call 0x1C17F20

Method: System.Boolean IsRepeatable()

Disassembly:
	0x03CEE200 LDR X22, [X22 + 0xE50]
	0x03CEE204 LDR W21, [X19 + 0x9C]
	0x03CEE208 LDR X0, [X22]
	0x03CEE20C LDR W8, [X0 + 0xE0]
	0x03CEE210 CBNZ W8, 0x3CEE21C
	0x03CEE214 BL 0x1C16DFC
	0x03CEE218 LDR X0, [X22]
	0x03CEE21C LDR X8, [X0 + 0xB8]
	0x03CEE220 LDR W8, [X8 + 0x8]

ISIL:
	001 Move X8, [X0+64]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, 1
	004 Return X0
	005 Move X8, [X0+72]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0

Method: System.Void RegisterCallbacksOnTarget()

Disassembly:
	0x03CEE2FC CBZ W8, 0x3CEE344
	0x03CEE300 MOV X0, X20
	0x03CEE304 MOV X1, X19
	0x03CEE308 MOV X2, X31
	0x03CEE30C BL 0x3DC08B8
	0x03CEE310 TBZ X0, 0x0, 0x3CEE344
	0x03CEE314 CBZ X19, 0x3CEE350
	0x03CEE318 LDR W0, [X19 + 0x9C]
	0x03CEE31C BL 0x3CEE354
	0x03CEE320 TBZ X0, 0x0, 0x3CEE344
	0x03CEE324 LDR X8, [X20]
	0x03CEE328 LDR W2, [X19 + 0x9C]
	0x03CEE32C MOV X0, X20
	0x03CEE330 MOV X1, X19
	0x03CEE334 LDP X4, X3, [X8 + 0x1E8]
	0x03CEE338 LDP X20, X19, [X31 + 0x10]
	0x03CEE33C LDP X30, X21, [X31], #0x20
	0x03CEE340 BR X4
	0x03CEE344 LDP X20, X19, [X31 + 0x10]
	0x03CEE348 LDP X30, X21, [X31], #0x20
	0x03CEE34C RET
	0x03CEE350 BL 0x1C16F20
	0x03CEE354 STP X30, X21, [X31 - 0x20]!
	0x03CEE358 STP X20, X19, [X31 + 0x10]
	0x03CEE35C ADRP X21, 0x6F9000
	0x03CEE360 ADRP X20, 0x42E000
	0x03CEE364 LDRB W8, [X21 + 0x75B]
	0x03CEE368 LDR X20, [X20 + 0xE50]
	0x03CEE36C MOV W19, W0
	0x03CEE370 TBNZ X8, 0x0, 0x3CEE388
	0x03CEE374 ADRP X0, 0x42E000
	0x03CEE378 LDR X0, [X0 + 0xE50]
	0x03CEE37C BL 0x1C16CF4
	0x03CEE380 MOVZ W8, 0x1
	0x03CEE384 STRB W8, [X21 + 0x75B]
	0x03CEE388 LDR X0, [X20]
	0x03CEE38C LDR W8, [X0 + 0xE0]
	0x03CEE390 CBNZ W8, 0x3CEE39C
	0x03CEE394 BL 0x1C16DFC
	0x03CEE398 LDR X0, [X20]
	0x03CEE39C LDR X8, [X0 + 0xB8]
	0x03CEE3A0 LDR W8, [X8 + 0x8]
	0x03CEE3A4 CMP W8, W19
	0x03CEE3A8 LDP X20, X19, [X31 + 0x10]
	0x03CEE3AC CSET W0, NE
	0x03CEE3B0 LDP X30, X21, [X31], #0x20
	0x03CEE3B4 RET
	0x03CEE3B8 STP X30, X21, [X31 - 0x20]!
	0x03CEE3BC STP X20, X19, [X31 + 0x10]
	0x03CEE3C0 ADRP X21, 0x6F9000
	0x03CEE3C4 LDRB W8, [X21 + 0x75A]
	0x03CEE3C8 MOV X19, X1
	0x03CEE3CC MOV X20, X0
	0x03CEE3D0 TBNZ X8, 0x0, 0x3CEE3E8
	0x03CEE3D4 ADRP X0, 0x474000
	0x03CEE3D8 LDR X0, [X0 + 0xA70]
	0x03CEE3DC BL 0x1C16CF4
	0x03CEE3E0 MOVZ W8, 0x1
	0x03CEE3E4 STRB W8, [X21 + 0x75A]
	0x03CEE3E8 LDRB W8, [X20 + 0x50]
	0x03CEE3EC CBZ W8, 0x3CEE420
	0x03CEE3F0 CBZ X19, 0x3CEE42C
	0x03CEE3F4 LDR W0, [X19 + 0x90]
	0x03CEE3F8 BL 0x3CEE354
	0x03CEE3FC TBZ X0, 0x0, 0x3CEE420
	0x03CEE400 LDR X8, [X20]
	0x03CEE404 LDR W2, [X19 + 0x90]
	0x03CEE408 MOV X0, X20
	0x03CEE40C MOV X1, X19
	0x03CEE410 LDP X4, X3, [X8 + 0x1E8]
	0x03CEE414 LDP X20, X19, [X31 + 0x10]
	0x03CEE418 LDP X30, X21, [X31], #0x20
	0x03CEE41C BR X4
	0x03CEE420 LDP X20, X19, [X31 + 0x10]
	0x03CEE424 LDP X30, X21, [X31], #0x20
	0x03CEE428 RET
	0x03CEE42C BL 0x1C16F20
	0x03CEE430 STP X30, X23, [X31 - 0x30]!
	0x03CEE434 STP X22, X21, [X31 + 0x10]
	0x03CEE438 STP X20, X19, [X31 + 0x20]
	0x03CEE43C ADRP X22, 0x6F9000
	0x03CEE440 LDRB W8, [X22 + 0x75C]
	0x03CEE444 MOV W21, W2
	0x03CEE448 MOV X19, X1
	0x03CEE44C MOV X20, X0
	0x03CEE450 TBNZ X8, 0x0, 0x3CEE48C
	0x03CEE454 ADRP X0, 0x406000
	0x03CEE458 LDR X0, [X0 + 0xE70]
	0x03CEE45C BL 0x1C16CF4
	0x03CEE460 ADRP X0, 0x474000
	0x03CEE464 LDR X0, [X0 + 0xA78]
	0x03CEE468 BL 0x1C16CF4
	0x03CEE46C ADRP X0, 0x430000
	0x03CEE470 LDR X0, [X0 + 0xAB8]
	0x03CEE474 BL 0x1C16CF4
	0x03CEE478 ADRP X0, 0x42D000
	0x03CEE47C LDR X0, [X0 + 0x680]
	0x03CEE480 BL 0x1C16CF4
	0x03CEE484 MOVZ W8, 0x1
	0x03CEE488 STRB W8, [X22 + 0x75C]
	0x03CEE48C MOV X0, X20
	0x03CEE490 MOV X1, X31
	0x03CEE494 BL 0x3DB9E70
	0x03CEE498 CBZ X0, 0x3CEE5F8
	0x03CEE49C MOV X1, X31
	0x03CEE4A0 MOV X22, X0
	0x03CEE4A4 BL 0x3DEEF88
	0x03CEE4A8 ORR W1, W0, 0x1
	0x03CEE4AC MOV X0, X22
	0x03CEE4B0 MOV X2, X31
	0x03CEE4B4 BL 0x3DEEF90
	0x03CEE4B8 MOV X0, X20
	0x03CEE4BC MOV X1, X31
	0x03CEE4C0 BL 0x3DB9E70
	0x03CEE4C4 CBZ X0, 0x3CEE5F8
	0x03CEE4C8 ADRP X22, 0x406000
	0x03CEE4CC ADRP X23, 0x474000
	0x03CEE4D0 LDR X22, [X22 + 0xE70]
	0x03CEE4D4 LDR X23, [X23 + 0xA78]
	0x03CEE4D8 MOV X1, X31
	0x03CEE4DC BL 0x3DF7724
	0x03CEE4E0 LDR X8, [X22]
	0x03CEE4E4 MOV X22, X0
	0x03CEE4E8 MOV X0, X8
	0x03CEE4EC BL 0x1C16F10
	0x03CEE4F0 LDR X2, [X23]
	0x03CEE4F4 MOV X1, X20
	0x03CEE4F8 MOV X3, X31
	0x03CEE4FC MOV X23, X0
	0x03CEE500 BL 0x3314368
	0x03CEE504 CBZ X22, 0x3CEE5F8
	0x03CEE508 ADRP X10, 0x42D000
	0x03CEE50C LDR X8, [X22]
	0x03CEE510 LDR X10, [X10 + 0x680]
	0x03CEE514 LDRH W9, [X8 + 0x12E]
	0x03CEE518 LDR X1, [X10]
	0x03CEE51C CBZ X9, 0x3CEE540
	0x03CEE520 LDR X10, [X8 + 0xB0]
	0x03CEE524 ADD X10, X10, 0x8
	0x03CEE528 LDUR X11, [X10 - 0x8]
	0x03CEE52C CMP X11, X1
	0x03CEE530 B.EQ 0x3CEE550
	0x03CEE534 SUBS X9, X9, 0x1
	0x03CEE538 ADD X10, X10, 0x10
	0x03CEE53C B.NE 0x3CEE528
	0x03CEE540 MOVZ W2, 0x1
	0x03CEE544 MOV X0, X22
	0x03CEE548 BL 0x1C5C788
	0x03CEE54C B 0x3CEE560
	0x03CEE550 LDR W9, [X10]
	0x03CEE554 ADD W9, W9, 0x1
	0x03CEE558 ADD X8, X8, W9, 0x4, SXTW
	0x03CEE55C ADD X0, X8, 0x138
	0x03CEE560 LDP X8, X2, [X0]
	0x03CEE564 MOV X0, X22
	0x03CEE568 MOV X1, X23
	0x03CEE56C BLR X8
	0x03CEE570 CBZ X0, 0x3CEE5F8
	0x03CEE574 ADRP X10, 0x430000
	0x03CEE578 LDR X8, [X0]
	0x03CEE57C LDR X10, [X10 + 0xAB8]
	0x03CEE580 MOV X22, X0
	0x03CEE584 LDRH W9, [X8 + 0x12E]
	0x03CEE588 LDR X1, [X10]
	0x03CEE58C CBZ X9, 0x3CEE5B0
	0x03CEE590 LDR X10, [X8 + 0xB0]
	0x03CEE594 ADD X10, X10, 0x8
	0x03CEE598 LDUR X11, [X10 - 0x8]
	0x03CEE59C CMP X11, X1
	0x03CEE5A0 B.EQ 0x3CEE5C0
	0x03CEE5A4 SUBS X9, X9, 0x1
	0x03CEE5A8 ADD X10, X10, 0x10
	0x03CEE5AC B.NE 0x3CEE598
	0x03CEE5B0 MOVZ W2, 0x2
	0x03CEE5B4 MOV X0, X22
	0x03CEE5B8 BL 0x1C5C788
	0x03CEE5BC B 0x3CEE5D0
	0x03CEE5C0 LDR W9, [X10]
	0x03CEE5C4 ADD W9, W9, 0x2
	0x03CEE5C8 ADD X8, X8, W9, 0x4, SXTW
	0x03CEE5CC ADD X0, X8, 0x138
	0x03CEE5D0 LDP X8, X2, [X0]
	0x03CEE5D4 SXTW X1, W21
	0x03CEE5D8 MOV X0, X22
	0x03CEE5DC BLR X8
	0x03CEE5E0 MOV X0, X20
	0x03CEE5E4 MOV X1, X19
	0x03CEE5E8 LDP X20, X19, [X31 + 0x20]
	0x03CEE5EC LDP X22, X21, [X31 + 0x10]
	0x03CEE5F0 LDP X30, X23, [X31], #0x30
	0x03CEE5F4 B 0x3CED2A4
	0x03CEE5F8 BL 0x1C16F20
	0x03CEE5FC STP D9, D8, [X31 - 0x40]!
	0x03CEE600 STP X30, X23, [X31 + 0x10]
	0x03CEE604 STP X22, X21, [X31 + 0x20]
	0x03CEE608 STP X20, X19, [X31 + 0x30]
	0x03CEE60C ADRP X23, 0x6F9000
	0x03CEE610 ADRP X22, 0x42E000
	0x03CEE614 LDRB W8, [X23 + 0x75D]
	0x03CEE618 LDR X22, [X22 + 0xE78]
	0x03CEE61C MOV W21, W2
	0x03CEE620 MOV V8.16B, V1.16B
	0x03CEE624 MOV V9.16B, V0.16B
	0x03CEE628 MOV X19, X1
	0x03CEE62C MOV X20, X0
	0x03CEE630 TBNZ X8, 0x0, 0x3CEE678
	0x03CEE634 ADRP X0, 0x474000
	0x03CEE638 LDR X0, [X0 + 0xA80]
	0x03CEE63C BL 0x1C16CF4
	0x03CEE640 ADRP X0, 0x474000
	0x03CEE644 LDR X0, [X0 + 0xA88]
	0x03CEE648 BL 0x1C16CF4
	0x03CEE64C ADRP X0, 0x42E000
	0x03CEE650 LDR X0, [X0 + 0xE78]
	0x03CEE654 BL 0x1C16CF4
	0x03CEE658 ADRP X0, 0x430000
	0x03CEE65C LDR X0, [X0 + 0xAB8]
	0x03CEE660 BL 0x1C16CF4
	0x03CEE664 ADRP X0, 0x42D000
	0x03CEE668 LDR X0, [X0 + 0x680]
	0x03CEE66C BL 0x1C16CF4
	0x03CEE670 MOVZ W8, 0x1
	0x03CEE674 STRB W8, [X23 + 0x75D]
	0x03CEE678 MOVZ W8, 0x1
	0x03CEE67C MOV X0, X20
	0x03CEE680 MOV X1, X31
	0x03CEE684 STRB W8, [X20 + 0x50]
	0x03CEE688 STR W21, [X20 + 0x5C]
	0x03CEE68C BL 0x3DB9E70
	0x03CEE690 MOV W1, W21
	0x03CEE694 MOV X2, X31
	0x03CEE698 BL 0x3DBAC60
	0x03CEE69C LDR X1, [X22]
	0x03CEE6A0 MOV X0, X19
	0x03CEE6A4 BL 0x1C16E00
	0x03CEE6A8 CBNZ X0, 0x3CEE6D0
	0x03CEE6AC MOV X0, X20
	0x03CEE6B0 MOV X1, X31
	0x03CEE6B4 BL 0x3DB9E70
	0x03CEE6B8 CBZ X0, 0x3CEE980
	0x03CEE6BC MOV X1, X31
	0x03CEE6C0 BL 0x3DEC0CC
	0x03CEE6C4 MOV W1, W21
	0x03CEE6C8 MOV X2, X31
	0x03CEE6CC BL 0x3DBAC98
	0x03CEE6D0 LDR X8, [X20 + 0x40]
	0x03CEE6D4 STP S9, S8, [X20 + 0x54]
	0x03CEE6D8 CMP X8, 0x0
	0x03CEE6DC B.GT 0x3CEE6EC
	0x03CEE6E0 LDR X8, [X20 + 0x48]
	0x03CEE6E4 CMP X8, 0x1
	0x03CEE6E8 B.LT 0x3CEE934
	0x03CEE6EC MOV X0, X20
	0x03CEE6F0 MOV W1, W21
	0x03CEE6F4 BL 0x3CED224
	0x03CEE6F8 TBZ X0, 0x0, 0x3CEE72C
	0x03CEE6FC MOV X0, X20
	0x03CEE700 MOV X1, X31
	0x03CEE704 BL 0x3DB9E70
	0x03CEE708 CBZ X0, 0x3CEE980
	0x03CEE70C MOV X1, X31
	0x03CEE710 BL 0x3DEC00C
	0x03CEE714 TBNZ X0, 0x0, 0x3CEE720
	0x03CEE718 LDRB W8, [X20 + 0x60]
	0x03CEE71C CBZ W8, 0x3CEE72C
	0x03CEE720 MOV X0, X20
	0x03CEE724 MOV X1, X19
	0x03CEE728 BL 0x3CED2A4
	0x03CEE72C ADRP X23, 0x430000
	0x03CEE730 LDR X21, [X20 + 0x68]
	0x03CEE734 LDR X23, [X23 + 0xAB8]
	0x03CEE738 CBZ X21, 0x3CEE780
	0x03CEE73C LDR X8, [X21]
	0x03CEE740 LDR X22, [X20 + 0x40]
	0x03CEE744 LDR X1, [X23]
	0x03CEE748 LDRH W9, [X8 + 0x12E]
	0x03CEE74C CBZ X9, 0x3CEE770
	0x03CEE750 LDR X10, [X8 + 0xB0]
	0x03CEE754 ADD X10, X10, 0x8
	0x03CEE758 LDUR X11, [X10 - 0x8]
	0x03CEE75C CMP X11, X1
	0x03CEE760 B.EQ 0x3CEE818
	0x03CEE764 SUBS X9, X9, 0x1
	0x03CEE768 ADD X10, X10, 0x10
	0x03CEE76C B.NE 0x3CEE758
	0x03CEE770 MOVZ W2, 0x2
	0x03CEE774 MOV X0, X21
	0x03CEE778 BL 0x1C5C788
	0x03CEE77C B 0x3CEE828
	0x03CEE780 MOV X0, X20
	0x03CEE784 MOV X1, X31
	0x03CEE788 BL 0x3DB9E70
	0x03CEE78C CBZ X0, 0x3CEE980
	0x03CEE790 MOV X1, X31
	0x03CEE794 BL 0x3DF7724
	0x03CEE798 ADRP X8, 0x474000
	0x03CEE79C LDR X8, [X8 + 0xA80]
	0x03CEE7A0 MOV X21, X0
	0x03CEE7A4 LDR X8, [X8]
	0x03CEE7A8 MOV X0, X8
	0x03CEE7AC BL 0x1C16F10
	0x03CEE7B0 ADRP X8, 0x474000
	0x03CEE7B4 LDR X8, [X8 + 0xA88]
	0x03CEE7B8 MOV X1, X20
	0x03CEE7BC MOV X3, X31
	0x03CEE7C0 MOV X22, X0
	0x03CEE7C4 LDR X2, [X8]
	0x03CEE7C8 BL 0x2A6EBF4
	0x03CEE7CC CBZ X21, 0x3CEE980
	0x03CEE7D0 ADRP X10, 0x42D000
	0x03CEE7D4 LDR X8, [X21]
	0x03CEE7D8 LDR X10, [X10 + 0x680]
	0x03CEE7DC LDRH W9, [X8 + 0x12E]
	0x03CEE7E0 LDR X1, [X10]
	0x03CEE7E4 CBZ X9, 0x3CEE808
	0x03CEE7E8 LDR X10, [X8 + 0xB0]
	0x03CEE7EC ADD X10, X10, 0x8
	0x03CEE7F0 LDUR X11, [X10 - 0x8]
	0x03CEE7F4 CMP X11, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x6FA000
	008 Move X20, 0x431000
	009 Move X21, 0x475000
	010 Move W8, [X22+1872]
	011 Move X20, [X20+176]
	012 Move X21, [X21+2392]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {101}
	018 Move X0, 0x475000
	019 Move X0, [X0+2400]
	020 Call 0x1C17CF4
	021 Move X0, 0x475000
	022 Move X0, [X0+2408]
	023 Call 0x1C17CF4
	024 Move X0, 0x475000
	025 Move X0, [X0+2416]
	026 Call 0x1C17CF4
	027 Move X0, 0x475000
	028 Move X0, [X0+2424]
	029 Call 0x1C17CF4
	030 Move X0, 0x475000
	031 Move X0, [X0+2432]
	032 Call 0x1C17CF4
	033 Move X0, 0x475000
	034 Move X0, [X0+2440]
	035 Call 0x1C17CF4
	036 Move X0, 0x475000
	037 Move X0, [X0+2448]
	038 Call 0x1C17CF4
	039 Move X0, 0x475000
	040 Move X0, [X0+2456]
	041 Call 0x1C17CF4
	042 Move X0, 0x475000
	043 Move X0, [X0+2464]
	044 Call 0x1C17CF4
	045 Move X0, 0x475000
	046 Move X0, [X0+2472]
	047 Call 0x1C17CF4
	048 Move X0, 0x475000
	049 Move X0, [X0+2392]
	050 Call 0x1C17CF4
	051 Move X0, 0x475000
	052 Move X0, [X0+2480]
	053 Call 0x1C17CF4
	054 Move X0, 0x475000
	055 Move X0, [X0+2488]
	056 Call 0x1C17CF4
	057 Move X0, 0x475000
	058 Move X0, [X0+2496]
	059 Call 0x1C17CF4
	060 Move X0, 0x475000
	061 Move X0, [X0+2504]
	062 Call 0x1C17CF4
	063 Move X0, 0x475000
	064 Move X0, [X0+2512]
	065 Call 0x1C17CF4
	066 Move X0, 0x475000
	067 Move X0, [X0+2520]
	068 Call 0x1C17CF4
	069 Move X0, 0x475000
	070 Move X0, [X0+2528]
	071 Call 0x1C17CF4
	072 Move X0, 0x475000
	073 Move X0, [X0+2536]
	074 Call 0x1C17CF4
	075 Move X0, 0x475000
	076 Move X0, [X0+2544]
	077 Call 0x1C17CF4
	078 Move X0, 0x475000
	079 Move X0, [X0+2552]
	080 Call 0x1C17CF4
	081 Move X0, 0x475000
	082 Move X0, [X0+2560]
	083 Call 0x1C17CF4
	084 Move X0, 0x431000
	085 Move X0, [X0+160]
	086 Call 0x1C17CF4
	087 Move X0, 0x430000
	088 Move X0, [X0+1920]
	089 Call 0x1C17CF4
	090 Move X0, 0x475000
	091 Move X0, [X0+2568]
	092 Call 0x1C17CF4
	093 Move X0, 0x430000
	094 Move X0, [X0+1928]
	095 Call 0x1C17CF4
	096 Move X0, 0x431000
	097 Move X0, [X0+176]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X22+1872], W8
	101 Move X0, X19
	102 Move X1, X31
	103 Call Manipulator.get_target, X0
	104 Move X8, [X20]
	105 Move X20, X0
	106 Move X0, X8
	107 Call 0x1C17F10
	108 Move X2, [X21]
	109 Move X1, X19
	110 Move X3, X31
	111 Move X21, X0
	112 Call 0x2D0F824, X0, X1, X2
	113 Compare X20, 0
	114 JumpIfEqual {338}
	115 Move X8, 0x475000
	116 Move X8, [X8+2408]
	117 Move W2, [X19+96]
	118 Move X22, 0x475000
	119 Move X23, 0x475000
	120 Move X4, [X8]
	121 Move X22, [X22+2536]
	122 Move X23, [X23+2480]
	123 Move X0, X20
	124 Move X1, X21
	125 Move W3, W31
	126 Call 0x21A25DC, X0, X1, X2, X3
	127 Move X0, X19
	128 Move X1, X31
	129 Call Manipulator.get_target, X0
	130 Move X8, [X22]
	131 Move X20, X0
	132 Move X0, X8
	133 Call 0x1C17F10
	134 Move X2, [X23]
	135 Move X1, X19
	136 Move X3, X31
	137 Move X21, X0
	138 Call 0x2D0F824, X0, X1, X2
	139 Compare X20, 0
	140 JumpIfEqual {338}
	141 Move X8, 0x475000
	142 Move X8, [X8+2416]
	143 Move W2, [X19+96]
	144 Move X22, 0x475000
	145 Move X23, 0x475000
	146 Move X4, [X8]
	147 Move X22, [X22+2544]
	148 Move X23, [X23+2488]
	149 Move X0, X20
	150 Move X1, X21
	151 Move W3, W31
	152 Call 0x21A25DC, X0, X1, X2, X3
	153 Move X0, X19
	154 Move X1, X31
	155 Call Manipulator.get_target, X0
	156 Move X8, [X22]
	157 Move X20, X0
	158 Move X0, X8
	159 Call 0x1C17F10
	160 Move X2, [X23]
	161 Move X1, X19
	162 Move X3, X31
	163 Move X21, X0
	164 Call 0x2D0F824, X0, X1, X2
	165 Compare X20, 0
	166 JumpIfEqual {338}
	167 Move X8, 0x475000
	168 Move X8, [X8+2424]
	169 Move X22, 0x475000
	170 Move X23, 0x475000
	171 Move W2, 1
	172 Move X4, [X8]
	173 Move X22, [X22+2552]
	174 Move X23, [X23+2472]
	175 Move X0, X20
	176 Move X1, X21
	177 Move W3, W31
	178 Call 0x21A25DC, X0, X1, X2, X3
	179 Move X0, X19
	180 Move X1, X31
	181 Call Manipulator.get_target, X0
	182 Move X8, [X22]
	183 Move X20, X0
	184 Move X0, X8
	185 Call 0x1C17F10
	186 Move X2, [X23]
	187 Move X1, X19
	188 Move X3, X31
	189 Move X21, X0
	190 Call 0x2D0F824, X0, X1, X2
	191 Compare X20, 0
	192 JumpIfEqual {338}
	193 Move X8, 0x475000
	194 Move X8, [X8+2400]
	195 Move X22, 0x430000
	196 Move X23, 0x475000
	197 Move W2, 1
	198 Move X4, [X8]
	199 Move X22, [X22+1920]
	200 Move X23, [X23+2512]
	201 Move X0, X20
	202 Move X1, X21
	203 Move W3, W31
	204 Call 0x21A25DC, X0, X1, X2, X3
	205 Move X0, X19
	206 Move X1, X31
	207 Call Manipulator.get_target, X0
	208 Move X8, [X22]
	209 Move X20, X0
	210 Move X0, X8
	211 Call 0x1C17F10
	212 Move X2, [X23]
	213 Move X1, X19
	214 Move X3, X31
	215 Move X21, X0
	216 Call 0x2D0F824, X0, X1, X2
	217 Compare X20, 0
	218 JumpIfEqual {338}
	219 Move X8, 0x475000
	220 Move X8, [X8+2448]
	221 Move W2, [X19+96]
	222 Move X22, 0x431000
	223 Move X23, 0x475000
	224 Move X4, [X8]
	225 Move X22, [X22+160]
	226 Move X23, [X23+2520]
	227 Move X0, X20
	228 Move X1, X21
	229 Move W3, W31
	230 Call 0x21A25DC, X0, X1, X2, X3
	231 Move X0, X19
	232 Move X1, X31
	233 Call Manipulator.get_target, X0
	234 Move X8, [X22]
	235 Move X20, X0
	236 Move X0, X8
	237 Call 0x1C17F10
	238 Move X2, [X23]
	239 Move X1, X19
	240 Move X3, X31
	241 Move X21, X0
	242 Call 0x2D0F824, X0, X1, X2
	243 Compare X20, 0
	244 JumpIfEqual {338}
	245 Move X8, 0x475000
	246 Move X8, [X8+2456]
	247 Move W2, [X19+96]
	248 Move X22, 0x430000
	249 Move X23, 0x475000
	250 Move X4, [X8]
	251 Move X22, [X22+1928]
	252 Move X23, [X23+2528]
	253 Move X0, X20
	254 Move X1, X21
	255 Move W3, W31
	256 Call 0x21A25DC, X0, X1, X2, X3
	257 Move X0, X19
	258 Move X1, X31
	259 Call Manipulator.get_target, X0
	260 Move X8, [X22]
	261 Move X20, X0
	262 Move X0, X8
	263 Call 0x1C17F10
	264 Move X2, [X23]
	265 Move X1, X19
	266 Move X3, X31
	267 Move X21, X0
	268 Call 0x2D0F824, X0, X1, X2
	269 Compare X20, 0
	270 JumpIfEqual {338}
	271 Move X8, 0x475000
	272 Move X8, [X8+2464]
	273 Move X22, 0x475000
	274 Move X23, 0x475000
	275 Move W2, 1
	276 Move X4, [X8]
	277 Move X22, [X22+2568]
	278 Move X23, [X23+2496]
	279 Move X0, X20
	280 Move X1, X21
	281 Move W3, W31
	282 Call 0x21A25DC, X0, X1, X2, X3
	283 Move X0, X19
	284 Move X1, X31
	285 Call Manipulator.get_target, X0
	286 Move X8, [X22]
	287 Move X20, X0
	288 Move X0, X8
	289 Call 0x1C17F10
	290 Move X2, [X23]
	291 Move X1, X19
	292 Move X3, X31
	293 Move X21, X0
	294 Call 0x2D0F824, X0, X1, X2
	295 Compare X20, 0
	296 JumpIfEqual {338}
	297 Move X8, 0x475000
	298 Move X8, [X8+2432]
	299 Move X22, 0x475000
	300 Move X23, 0x475000
	301 Move W2, 1
	302 Move X4, [X8]
	303 Move X22, [X22+2560]
	304 Move X23, [X23+2504]
	305 Move X0, X20
	306 Move X1, X21
	307 Move W3, W31
	308 Call 0x21A25DC, X0, X1, X2, X3
	309 Move X0, X19
	310 Move X1, X31
	311 Call Manipulator.get_target, X0
	312 Move X8, [X22]
	313 Move X20, X0
	314 Move X0, X8
	315 Call 0x1C17F10
	316 Move X2, [X23]
	317 Move X1, X19
	318 Move X3, X31
	319 Move X21, X0
	320 Call 0x2D0F824, X0, X1, X2
	321 Compare X20, 0
	322 JumpIfEqual {338}
	323 Move X8, 0x475000
	324 Move X8, [X8+2440]
	325 Move X0, X20
	326 Move X1, X21
	327 Move X20, [X31+32]
	328 Move X19, [X31+40]
	329 Move X4, [X8]
	330 Move X22, [X31+16]
	331 Move X21, [X31+24]
	332 Move W2, 1
	333 Move W3, W31
	334 Move X30, [X31+48]
	335 Move X23, [X31+56]
	336 Call 0x21A25DC, X0, X1, X2, X3
	337 Return 
	338 Call 0x1C17F20

Method: System.Void UnregisterCallbacksFromTarget()

Disassembly:
	0x03CEE7F8 B.EQ 0x3CEE83C
	0x03CEE7FC SUBS X9, X9, 0x1
	0x03CEE800 ADD X10, X10, 0x10
	0x03CEE804 B.NE 0x3CEE7F0
	0x03CEE808 MOV X0, X21
	0x03CEE80C MOV W2, W31
	0x03CEE810 BL 0x1C5C788
	0x03CEE814 B 0x3CEE848
	0x03CEE818 LDR W9, [X10]
	0x03CEE81C ADD W9, W9, 0x2
	0x03CEE820 ADD X8, X8, W9, 0x4, SXTW
	0x03CEE824 ADD X0, X8, 0x138
	0x03CEE828 LDP X8, X2, [X0]
	0x03CEE82C MOV X0, X21
	0x03CEE830 MOV X1, X22
	0x03CEE834 BLR X8
	0x03CEE838 B 0x3CEE934
	0x03CEE83C LDRSW X9, [X10]
	0x03CEE840 ADD X8, X8, X9, 0x4, LSL
	0x03CEE844 ADD X0, X8, 0x138
	0x03CEE848 LDP X8, X2, [X0]
	0x03CEE84C MOV X0, X21
	0x03CEE850 MOV X1, X22
	0x03CEE854 BLR X8
	0x03CEE858 CBZ X0, 0x3CEE980
	0x03CEE85C LDR X8, [X0]
	0x03CEE860 LDR X22, [X20 + 0x48]
	0x03CEE864 LDR X1, [X23]
	0x03CEE868 MOV X21, X0
	0x03CEE86C LDRH W9, [X8 + 0x12E]
	0x03CEE870 CBZ X9, 0x3CEE894
	0x03CEE874 LDR X10, [X8 + 0xB0]
	0x03CEE878 ADD X10, X10, 0x8
	0x03CEE87C LDUR X11, [X10 - 0x8]
	0x03CEE880 CMP X11, X1
	0x03CEE884 B.EQ 0x3CEE8A4
	0x03CEE888 SUBS X9, X9, 0x1
	0x03CEE88C ADD X10, X10, 0x10
	0x03CEE890 B.NE 0x3CEE87C
	0x03CEE894 MOVZ W2, 0x4
	0x03CEE898 MOV X0, X21
	0x03CEE89C BL 0x1C5C788
	0x03CEE8A0 B 0x3CEE8B4
	0x03CEE8A4 LDR W9, [X10]
	0x03CEE8A8 ADD W9, W9, 0x4
	0x03CEE8AC ADD X8, X8, W9, 0x4, SXTW
	0x03CEE8B0 ADD X0, X8, 0x138
	0x03CEE8B4 LDP X8, X2, [X0]
	0x03CEE8B8 MOV X0, X21
	0x03CEE8BC MOV X1, X22
	0x03CEE8C0 BLR X8
	0x03CEE8C4 CBZ X0, 0x3CEE980
	0x03CEE8C8 LDR X8, [X0]
	0x03CEE8CC LDR X22, [X20 + 0x40]
	0x03CEE8D0 LDR X1, [X23]
	0x03CEE8D4 MOV X21, X0
	0x03CEE8D8 LDRH W9, [X8 + 0x12E]
	0x03CEE8DC CBZ X9, 0x3CEE900
	0x03CEE8E0 LDR X10, [X8 + 0xB0]
	0x03CEE8E4 ADD X10, X10, 0x8
	0x03CEE8E8 LDUR X11, [X10 - 0x8]
	0x03CEE8EC CMP X11, X1
	0x03CEE8F0 B.EQ 0x3CEE910
	0x03CEE8F4 SUBS X9, X9, 0x1
	0x03CEE8F8 ADD X10, X10, 0x10
	0x03CEE8FC B.NE 0x3CEE8E8
	0x03CEE900 MOVZ W2, 0x3
	0x03CEE904 MOV X0, X21
	0x03CEE908 BL 0x1C5C788
	0x03CEE90C B 0x3CEE920
	0x03CEE910 LDR W9, [X10]
	0x03CEE914 ADD W9, W9, 0x3
	0x03CEE918 ADD X8, X8, W9, 0x4, SXTW
	0x03CEE91C ADD X0, X8, 0x138
	0x03CEE920 LDP X8, X2, [X0]
	0x03CEE924 MOV X0, X21
	0x03CEE928 MOV X1, X22
	0x03CEE92C BLR X8
	0x03CEE930 STR X0, [X20 + 0x68]
	0x03CEE934 MOV X0, X20
	0x03CEE938 MOV X1, X31
	0x03CEE93C BL 0x3DB9E70
	0x03CEE940 CBZ X0, 0x3CEE980
	0x03CEE944 MOV X1, X31
	0x03CEE948 MOV X20, X0
	0x03CEE94C BL 0x3DEEF88
	0x03CEE950 ORR W1, W0, 0x1
	0x03CEE954 MOV X0, X20
	0x03CEE958 MOV X2, X31
	0x03CEE95C BL 0x3DEEF90
	0x03CEE960 CBZ X19, 0x3CEE980
	0x03CEE964 MOV X0, X19
	0x03CEE968 LDP X20, X19, [X31 + 0x30]
	0x03CEE96C LDP X22, X21, [X31 + 0x20]
	0x03CEE970 LDP X30, X23, [X31 + 0x10]
	0x03CEE974 MOV X1, X31
	0x03CEE978 LDP D9, D8, [X31], #0x40
	0x03CEE97C B 0x3DA02EC
	0x03CEE980 BL 0x1C16F20
	0x03CEE984 STP X30, X21, [X31 - 0x20]!
	0x03CEE988 STP X20, X19, [X31 + 0x10]
	0x03CEE98C MOV X19, X1
	0x03CEE990 LDR W1, [X0 + 0x5C]
	0x03CEE994 MOV X21, X0
	0x03CEE998 STP S0, S1, [X0 + 0x54]
	0x03CEE99C BL 0x3CED224
	0x03CEE9A0 MOV W20, W0
	0x03CEE9A4 MOV X0, X21
	0x03CEE9A8 MOV X1, X31
	0x03CEE9AC BL 0x3DB9E70
	0x03CEE9B0 CBZ X0, 0x3CEE9EC
	0x03CEE9B4 MOV X1, X31
	0x03CEE9B8 MOV X21, X0
	0x03CEE9BC BL 0x3DEEF88
	0x03CEE9C0 MOV W1, W0
	0x03CEE9C4 BFM W1, W20, 0x0, 0x0
	0x03CEE9C8 MOV X0, X21
	0x03CEE9CC MOV X2, X31
	0x03CEE9D0 BL 0x3DEEF90
	0x03CEE9D4 CBZ X19, 0x3CEE9EC
	0x03CEE9D8 MOV X0, X19
	0x03CEE9DC LDP X20, X19, [X31 + 0x10]
	0x03CEE9E0 MOV X1, X31
	0x03CEE9E4 LDP X30, X21, [X31], #0x20
	0x03CEE9E8 B 0x3D9D950
	0x03CEE9EC BL 0x1C16F20
	0x03CEE9F0 STP X30, X23, [X31 - 0x30]!
	0x03CEE9F4 STP X22, X21, [X31 + 0x10]
	0x03CEE9F8 STP X20, X19, [X31 + 0x20]
	0x03CEE9FC ADRP X23, 0x6F9000
	0x03CEEA00 ADRP X22, 0x42E000
	0x03CEEA04 LDRB W8, [X23 + 0x75E]
	0x03CEEA08 LDR X22, [X22 + 0xE78]
	0x03CEEA0C MOV W21, W2
	0x03CEEA10 MOV X19, X1
	0x03CEEA14 MOV X20, X0
	0x03CEEA18 TBNZ X8, 0x0, 0x3CEEA3C
	0x03CEEA1C ADRP X0, 0x42E000
	0x03CEEA20 LDR X0, [X0 + 0xE78]
	0x03CEEA24 BL 0x1C16CF4
	0x03CEEA28 ADRP X0, 0x430000
	0x03CEEA2C LDR X0, [X0 + 0xAB8]
	0x03CEEA30 BL 0x1C16CF4
	0x03CEEA34 MOVZ W8, 0x1
	0x03CEEA38 STRB W8, [X23 + 0x75E]
	0x03CEEA3C MOVN W8, 0x0
	0x03CEEA40 MOV X0, X20
	0x03CEEA44 MOV X1, X31
	0x03CEEA48 STRB W31, [X20 + 0x50]
	0x03CEEA4C STR W8, [X20 + 0x5C]
	0x03CEEA50 BL 0x3DB9E70
	0x03CEEA54 MOV W1, W21
	0x03CEEA58 MOV X2, X31
	0x03CEEA5C BL 0x3DBAE34
	0x03CEEA60 LDR X1, [X22]
	0x03CEEA64 MOV X0, X19
	0x03CEEA68 BL 0x1C16E00
	0x03CEEA6C CBNZ X0, 0x3CEEA94
	0x03CEEA70 MOV X0, X20
	0x03CEEA74 MOV X1, X31
	0x03CEEA78 BL 0x3DB9E70
	0x03CEEA7C CBZ X0, 0x3CEEBA4
	0x03CEEA80 MOV X1, X31
	0x03CEEA84 BL 0x3DEC0CC
	0x03CEEA88 MOV W1, W21
	0x03CEEA8C MOV X2, X31
	0x03CEEA90 BL 0x3DBAC98
	0x03CEEA94 MOV X0, X20
	0x03CEEA98 MOV X1, X31
	0x03CEEA9C BL 0x3DB9E70
	0x03CEEAA0 CBZ X0, 0x3CEEBA4
	0x03CEEAA4 MOV X1, X31
	0x03CEEAA8 MOV X22, X0
	0x03CEEAAC BL 0x3DEEF88
	0x03CEEAB0 AND W1, W0, 0xFFFFFFFE
	0x03CEEAB4 MOV X0, X22
	0x03CEEAB8 MOV X2, X31
	0x03CEEABC BL 0x3DEEF90
	0x03CEEAC0 LDR X8, [X20 + 0x40]
	0x03CEEAC4 CMP X8, 0x0
	0x03CEEAC8 B.GT 0x3CEEAD8
	0x03CEEACC LDR X8, [X20 + 0x48]
	0x03CEEAD0 CMP X8, 0x1
	0x03CEEAD4 B.LT 0x3CEEB60
	0x03CEEAD8 LDR X20, [X20 + 0x68]
	0x03CEEADC CBZ X20, 0x3CEEB44
	0x03CEEAE0 ADRP X10, 0x430000
	0x03CEEAE4 LDR X8, [X20]
	0x03CEEAE8 LDR X10, [X10 + 0xAB8]
	0x03CEEAEC LDRH W9, [X8 + 0x12E]
	0x03CEEAF0 LDR X1, [X10]
	0x03CEEAF4 CBZ X9, 0x3CEEB18
	0x03CEEAF8 LDR X10, [X8 + 0xB0]
	0x03CEEAFC ADD X10, X10, 0x8
	0x03CEEB00 LDUR X11, [X10 - 0x8]
	0x03CEEB04 CMP X11, X1
	0x03CEEB08 B.EQ 0x3CEEB28
	0x03CEEB0C SUBS X9, X9, 0x1
	0x03CEEB10 ADD X10, X10, 0x10
	0x03CEEB14 B.NE 0x3CEEB00
	0x03CEEB18 MOVZ W2, 0x1
	0x03CEEB1C MOV X0, X20
	0x03CEEB20 BL 0x1C5C788
	0x03CEEB24 B 0x3CEEB38
	0x03CEEB28 LDR W9, [X10]
	0x03CEEB2C ADD W9, W9, 0x1
	0x03CEEB30 ADD X8, X8, W9, 0x4, SXTW
	0x03CEEB34 ADD X0, X8, 0x138
	0x03CEEB38 LDP X8, X1, [X0]
	0x03CEEB3C MOV X0, X20
	0x03CEEB40 BLR X8
	0x03CEEB44 CBZ X19, 0x3CEEBA4
	0x03CEEB48 MOV X0, X19
	0x03CEEB4C LDP X20, X19, [X31 + 0x20]
	0x03CEEB50 LDP X22, X21, [X31 + 0x10]
	0x03CEEB54 MOV X1, X31
	0x03CEEB58 LDP X30, X23, [X31], #0x30
	0x03CEEB5C B 0x3D9D950
	0x03CEEB60 MOV X0, X20
	0x03CEEB64 MOV W1, W21
	0x03CEEB68 BL 0x3CED224
	0x03CEEB6C TBZ X0, 0x0, 0x3CEEB44
	0x03CEEB70 MOV X0, X20
	0x03CEEB74 MOV X1, X31
	0x03CEEB78 BL 0x3DB9E70
	0x03CEEB7C CBZ X0, 0x3CEEBA4
	0x03CEEB80 MOV X1, X31
	0x03CEEB84 BL 0x3DEC00C
	0x03CEEB88 TBNZ X0, 0x0, 0x3CEEB94
	0x03CEEB8C LDRB W8, [X20 + 0x60]
	0x03CEEB90 CBZ W8, 0x3CEEB44
	0x03CEEB94 MOV X0, X20
	0x03CEEB98 MOV X1, X19
	0x03CEEB9C BL 0x3CED2A4
	0x03CEEBA0 B 0x3CEEB44
	0x03CEEBA4 BL 0x1C16F20
	0x03CEEBA8 STP X30, X23, [X31 - 0x30]!
	0x03CEEBAC STP X22, X21, [X31 + 0x10]
	0x03CEEBB0 STP X20, X19, [X31 + 0x20]
	0x03CEEBB4 ADRP X23, 0x6F9000
	0x03CEEBB8 ADRP X22, 0x42E000
	0x03CEEBBC LDRB W8, [X23 + 0x75F]
	0x03CEEBC0 LDR X22, [X22 + 0xE78]
	0x03CEEBC4 MOV W21, W2
	0x03CEEBC8 MOV X19, X1
	0x03CEEBCC MOV X20, X0
	0x03CEEBD0 TBNZ X8, 0x0, 0x3CEEBF4
	0x03CEEBD4 ADRP X0, 0x42E000
	0x03CEEBD8 LDR X0, [X0 + 0xE78]
	0x03CEEBDC BL 0x1C16CF4
	0x03CEEBE0 ADRP X0, 0x430000
	0x03CEEBE4 LDR X0, [X0 + 0xAB8]
	0x03CEEBE8 BL 0x1C16CF4
	0x03CEEBEC MOVZ W8, 0x1
	0x03CEEBF0 STRB W8, [X23 + 0x75F]
	0x03CEEBF4 MOVN W8, 0x0
	0x03CEEBF8 MOV X0, X20
	0x03CEEBFC MOV X1, X31
	0x03CEEC00 STRB W31, [X20 + 0x50]
	0x03CEEC04 STR W8, [X20 + 0x5C]
	0x03CEEC08 BL 0x3DB9E70
	0x03CEEC0C MOV W1, W21
	0x03CEEC10 MOV X2, X31
	0x03CEEC14 BL 0x3DBAE34
	0x03CEEC18 LDR X1, [X22]
	0x03CEEC1C MOV X0, X19
	0x03CEEC20 BL 0x1C16E00
	0x03CEEC24 CBNZ X0, 0x3CEEC4C
	0x03CEEC28 MOV X0, X20
	0x03CEEC2C MOV X1, X31
	0x03CEEC30 BL 0x3DB9E70
	0x03CEEC34 CBZ X0, 0x3CEED18
	0x03CEEC38 MOV X1, X31
	0x03CEEC3C BL 0x3DEC0CC
	0x03CEEC40 MOV W1, W21
	0x03CEEC44 MOV X2, X31
	0x03CEEC48 BL 0x3DBAC98
	0x03CEEC4C MOV X0, X20
	0x03CEEC50 MOV X1, X31
	0x03CEEC54 BL 0x3DB9E70
	0x03CEEC58 CBZ X0, 0x3CEED18
	0x03CEEC5C MOV X1, X31
	0x03CEEC60 MOV X21, X0
	0x03CEEC64 BL 0x3DEEF88
	0x03CEEC68 AND W1, W0, 0xFFFFFFFE
	0x03CEEC6C MOV X0, X21
	0x03CEEC70 MOV X2, X31
	0x03CEEC74 BL 0x3DEEF90
	0x03CEEC78 LDR X8, [X20 + 0x40]
	0x03CEEC7C CMP X8, 0x0
	0x03CEEC80 B.GT 0x3CEEC90
	0x03CEEC84 LDR X8, [X20 + 0x48]
	0x03CEEC88 CMP X8, 0x1
	0x03CEEC8C B.LT 0x3CEECFC
	0x03CEEC90 LDR X20, [X20 + 0x68]
	0x03CEEC94 CBZ X20, 0x3CEECFC
	0x03CEEC98 ADRP X10, 0x430000
	0x03CEEC9C LDR X8, [X20]
	0x03CEECA0 LDR X10, [X10 + 0xAB8]
	0x03CEECA4 LDRH W9, [X8 + 0x12E]
	0x03CEECA8 LDR X1, [X10]
	0x03CEECAC CBZ X9, 0x3CEECD0
	0x03CEECB0 LDR X10, [X8 + 0xB0]
	0x03CEECB4 ADD X10, X10, 0x8
	0x03CEECB8 LDUR X11, [X10 - 0x8]
	0x03CEECBC CMP X11, X1
	0x03CEECC0 B.EQ 0x3CEECE0
	0x03CEECC4 SUBS X9, X9, 0x1
	0x03CEECC8 ADD X10, X10, 0x10
	0x03CEECCC B.NE 0x3CEECB8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x6FA000
	008 Move X20, 0x431000
	009 Move X21, 0x475000
	010 Move W8, [X22+1873]
	011 Move X20, [X20+176]
	012 Move X21, [X21+2392]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {101}
	018 Move X0, 0x475000
	019 Move X0, [X0+2576]
	020 Call 0x1C17CF4
	021 Move X0, 0x475000
	022 Move X0, [X0+2584]
	023 Call 0x1C17CF4
	024 Move X0, 0x475000
	025 Move X0, [X0+2592]
	026 Call 0x1C17CF4
	027 Move X0, 0x475000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x475000
	031 Move X0, [X0+2608]
	032 Call 0x1C17CF4
	033 Move X0, 0x475000
	034 Move X0, [X0+2616]
	035 Call 0x1C17CF4
	036 Move X0, 0x430000
	037 Move X0, [X0+1936]
	038 Call 0x1C17CF4
	039 Move X0, 0x431000
	040 Move X0, [X0+3368]
	041 Call 0x1C17CF4
	042 Move X0, 0x430000
	043 Move X0, [X0+1944]
	044 Call 0x1C17CF4
	045 Move X0, 0x475000
	046 Move X0, [X0+2472]
	047 Call 0x1C17CF4
	048 Move X0, 0x475000
	049 Move X0, [X0+2392]
	050 Call 0x1C17CF4
	051 Move X0, 0x475000
	052 Move X0, [X0+2480]
	053 Call 0x1C17CF4
	054 Move X0, 0x475000
	055 Move X0, [X0+2488]
	056 Call 0x1C17CF4
	057 Move X0, 0x475000
	058 Move X0, [X0+2496]
	059 Call 0x1C17CF4
	060 Move X0, 0x475000
	061 Move X0, [X0+2504]
	062 Call 0x1C17CF4
	063 Move X0, 0x475000
	064 Move X0, [X0+2512]
	065 Call 0x1C17CF4
	066 Move X0, 0x475000
	067 Move X0, [X0+2520]
	068 Call 0x1C17CF4
	069 Move X0, 0x475000
	070 Move X0, [X0+2528]
	071 Call 0x1C17CF4
	072 Move X0, 0x475000
	073 Move X0, [X0+2536]
	074 Call 0x1C17CF4
	075 Move X0, 0x475000
	076 Move X0, [X0+2544]
	077 Call 0x1C17CF4
	078 Move X0, 0x475000
	079 Move X0, [X0+2552]
	080 Call 0x1C17CF4
	081 Move X0, 0x475000
	082 Move X0, [X0+2560]
	083 Call 0x1C17CF4
	084 Move X0, 0x431000
	085 Move X0, [X0+160]
	086 Call 0x1C17CF4
	087 Move X0, 0x430000
	088 Move X0, [X0+1920]
	089 Call 0x1C17CF4
	090 Move X0, 0x475000
	091 Move X0, [X0+2568]
	092 Call 0x1C17CF4
	093 Move X0, 0x430000
	094 Move X0, [X0+1928]
	095 Call 0x1C17CF4
	096 Move X0, 0x431000
	097 Move X0, [X0+176]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X22+1873], W8
	101 Move X0, X19
	102 Move X1, X31
	103 Call Manipulator.get_target, X0
	104 Move X8, [X20]
	105 Move X20, X0
	106 Move X0, X8
	107 Call 0x1C17F10
	108 Move X2, [X21]
	109 Move X1, X19
	110 Move X3, X31
	111 Move X21, X0
	112 Call 0x2D0F824, X0, X1, X2
	113 Compare X20, 0
	114 JumpIfEqual {329}
	115 Move X8, 0x475000
	116 Move X8, [X8+2584]
	117 Move X22, 0x475000
	118 Move X23, 0x475000
	119 Move X0, X20
	120 Move X3, [X8]
	121 Move X22, [X22+2536]
	122 Move X23, [X23+2480]
	123 Move X1, X21
	124 Move W2, W31
	125 Call 0x21A28B4, X0, X1, X2
	126 Move X0, X19
	127 Move X1, X31
	128 Call Manipulator.get_target, X0
	129 Move X8, [X22]
	130 Move X20, X0
	131 Move X0, X8
	132 Call 0x1C17F10
	133 Move X2, [X23]
	134 Move X1, X19
	135 Move X3, X31
	136 Move X21, X0
	137 Call 0x2D0F824, X0, X1, X2
	138 Compare X20, 0
	139 JumpIfEqual {329}
	140 Move X8, 0x475000
	141 Move X8, [X8+2592]
	142 Move X22, 0x475000
	143 Move X23, 0x475000
	144 Move X0, X20
	145 Move X3, [X8]
	146 Move X22, [X22+2544]
	147 Move X23, [X23+2488]
	148 Move X1, X21
	149 Move W2, W31
	150 Call 0x21A28B4, X0, X1, X2
	151 Move X0, X19
	152 Move X1, X31
	153 Call Manipulator.get_target, X0
	154 Move X8, [X22]
	155 Move X20, X0
	156 Move X0, X8
	157 Call 0x1C17F10
	158 Move X2, [X23]
	159 Move X1, X19
	160 Move X3, X31
	161 Move X21, X0
	162 Call 0x2D0F824, X0, X1, X2
	163 Compare X20, 0
	164 JumpIfEqual {329}
	165 Move X8, 0x475000
	166 Move X8, [X8+2600]
	167 Move X22, 0x475000
	168 Move X23, 0x475000
	169 Move X0, X20
	170 Move X3, [X8]
	171 Move X22, [X22+2552]
	172 Move X23, [X23+2472]
	173 Move X1, X21
	174 Move W2, W31
	175 Call 0x21A28B4, X0, X1, X2
	176 Move X0, X19
	177 Move X1, X31
	178 Call Manipulator.get_target, X0
	179 Move X8, [X22]
	180 Move X20, X0
	181 Move X0, X8
	182 Call 0x1C17F10
	183 Move X2, [X23]
	184 Move X1, X19
	185 Move X3, X31
	186 Move X21, X0
	187 Call 0x2D0F824, X0, X1, X2
	188 Compare X20, 0
	189 JumpIfEqual {329}
	190 Move X8, 0x475000
	191 Move X8, [X8+2576]
	192 Move X22, 0x430000
	193 Move X23, 0x475000
	194 Move X0, X20
	195 Move X3, [X8]
	196 Move X22, [X22+1920]
	197 Move X23, [X23+2512]
	198 Move X1, X21
	199 Move W2, W31
	200 Call 0x21A28B4, X0, X1, X2
	201 Move X0, X19
	202 Move X1, X31
	203 Call Manipulator.get_target, X0
	204 Move X8, [X22]
	205 Move X20, X0
	206 Move X0, X8
	207 Call 0x1C17F10
	208 Move X2, [X23]
	209 Move X1, X19
	210 Move X3, X31
	211 Move X21, X0
	212 Call 0x2D0F824, X0, X1, X2
	213 Compare X20, 0
	214 JumpIfEqual {329}
	215 Move X8, 0x430000
	216 Move X8, [X8+1936]
	217 Move X22, 0x431000
	218 Move X23, 0x475000
	219 Move X0, X20
	220 Move X3, [X8]
	221 Move X22, [X22+160]
	222 Move X23, [X23+2520]
	223 Move X1, X21
	224 Move W2, W31
	225 Call 0x21A28B4, X0, X1, X2
	226 Move X0, X19
	227 Move X1, X31
	228 Call Manipulator.get_target, X0
	229 Move X8, [X22]
	230 Move X20, X0
	231 Move X0, X8
	232 Call 0x1C17F10
	233 Move X2, [X23]
	234 Move X1, X19
	235 Move X3, X31
	236 Move X21, X0
	237 Call 0x2D0F824, X0, X1, X2
	238 Compare X20, 0
	239 JumpIfEqual {329}
	240 Move X8, 0x431000
	241 Move X8, [X8+3368]
	242 Move X22, 0x430000
	243 Move X23, 0x475000
	244 Move X0, X20
	245 Move X3, [X8]
	246 Move X22, [X22+1928]
	247 Move X23, [X23+2528]
	248 Move X1, X21
	249 Move W2, W31
	250 Call 0x21A28B4, X0, X1, X2
	251 Move X0, X19
	252 Move X1, X31
	253 Call Manipulator.get_target, X0
	254 Move X8, [X22]
	255 Move X20, X0
	256 Move X0, X8
	257 Call 0x1C17F10
	258 Move X2, [X23]
	259 Move X1, X19
	260 Move X3, X31
	261 Move X21, X0
	262 Call 0x2D0F824, X0, X1, X2
	263 Compare X20, 0
	264 JumpIfEqual {329}
	265 Move X8, 0x430000
	266 Move X8, [X8+1944]
	267 Move X22, 0x475000
	268 Move X23, 0x475000
	269 Move X0, X20
	270 Move X3, [X8]
	271 Move X22, [X22+2568]
	272 Move X23, [X23+2496]
	273 Move X1, X21
	274 Move W2, W31
	275 Call 0x21A28B4, X0, X1, X2
	276 Move X0, X19
	277 Move X1, X31
	278 Call Manipulator.get_target, X0
	279 Move X8, [X22]
	280 Move X20, X0
	281 Move X0, X8
	282 Call 0x1C17F10
	283 Move X2, [X23]
	284 Move X1, X19
	285 Move X3, X31
	286 Move X21, X0
	287 Call 0x2D0F824, X0, X1, X2
	288 Compare X20, 0
	289 JumpIfEqual {329}
	290 Move X8, 0x475000
	291 Move X8, [X8+2608]
	292 Move X22, 0x475000
	293 Move X23, 0x475000
	294 Move X0, X20
	295 Move X3, [X8]
	296 Move X22, [X22+2560]
	297 Move X23, [X23+2504]
	298 Move X1, X21
	299 Move W2, W31
	300 Call 0x21A28B4, X0, X1, X2
	301 Move X0, X19
	302 Move X1, X31
	303 Call Manipulator.get_target, X0
	304 Move X8, [X22]
	305 Move X20, X0
	306 Move X0, X8
	307 Call 0x1C17F10
	308 Move X2, [X23]
	309 Move X1, X19
	310 Move X3, X31
	311 Move X21, X0
	312 Call 0x2D0F824, X0, X1, X2
	313 Compare X20, 0
	314 JumpIfEqual {329}
	315 Move X8, 0x475000
	316 Move X8, [X8+2616]
	317 Move X0, X20
	318 Move X1, X21
	319 Move X20, [X31+32]
	320 Move X19, [X31+40]
	321 Move X3, [X8]
	322 Move X22, [X31+16]
	323 Move X21, [X31+24]
	324 Move W2, W31
	325 Move X30, [X31+48]
	326 Move X23, [X31+56]
	327 Call 0x21A28B4, X0, X1, X2
	328 Return 
	329 Call 0x1C17F20

Method: System.Void OnMouseDown(UnityEngine.UIElements.MouseDownEvent evt)

Disassembly:
	0x03CEECD0 MOVZ W2, 0x1
	0x03CEECD4 MOV X0, X20
	0x03CEECD8 BL 0x1C5C788
	0x03CEECDC B 0x3CEECF0
	0x03CEECE0 LDR W9, [X10]
	0x03CEECE4 ADD W9, W9, 0x1
	0x03CEECE8 ADD X8, X8, W9, 0x4, SXTW
	0x03CEECEC ADD X0, X8, 0x138
	0x03CEECF0 LDP X8, X1, [X0]
	0x03CEECF4 MOV X0, X20
	0x03CEECF8 BLR X8
	0x03CEECFC CBZ X19, 0x3CEED18
	0x03CEED00 MOV X0, X19
	0x03CEED04 LDP X20, X19, [X31 + 0x20]
	0x03CEED08 LDP X22, X21, [X31 + 0x10]
	0x03CEED0C MOV X1, X31
	0x03CEED10 LDP X30, X23, [X31], #0x30
	0x03CEED14 B 0x3D9D950
	0x03CEED18 BL 0x1C16F20
	0x03CEED1C STP X30, X19, [X31 - 0x10]!
	0x03CEED20 MOV X1, X31
	0x03CEED24 BL 0x3DB9E70
	0x03CEED28 CBZ X0, 0x3CEED4C
	0x03CEED2C MOV X1, X31
	0x03CEED30 MOV X19, X0
	0x03CEED34 BL 0x3DEEF88
	0x03CEED38 AND W1, W0, 0xFFFFFFFE
	0x03CEED3C MOV X0, X19
	0x03CEED40 MOV X2, X31
	0x03CEED44 LDP X30, X19, [X31], #0x10
	0x03CEED48 B 0x3DEEF90
	0x03CEED4C BL 0x1C16F20
	0x03CEED50 STR X30, [X31 - 0x30]!
	0x03CEED54 STP X22, X21, [X31 + 0x10]
	0x03CEED58 STP X20, X19, [X31 + 0x20]
	0x03CEED5C ADRP X21, 0x6F9000
	0x03CEED60 LDRB W8, [X21 + 0x760]
	0x03CEED64 MOV X19, X1
	0x03CEED68 MOV X20, X0
	0x03CEED6C TBNZ X8, 0x0, 0x3CEED84
	0x03CEED70 ADRP X0, 0x406000
	0x03CEED74 LDR X0, [X0 + 0xE70]
	0x03CEED78 BL 0x1C16CF4
	0x03CEED7C MOVZ W8, 0x1
	0x03CEED80 STRB W8, [X21 + 0x760]
	0x03CEED84 ADRP X22, 0x406000
	0x03CEED88 LDR X21, [X20 + 0x30]!

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x6FA000
	008 Move W8, [X21+1874]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x475000
	016 Move X0, [X0+2624]
	017 Call 0x1C17CF4
	018 Move X0, 0x42F000
	019 Move X0, [X0+3664]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1874], W8
	023 Move X0, X20
	024 Move X1, X19
	025 Move X2, X31
	026 Call MouseManipulator.CanStartManipulation, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {59}
	031 Compare X19, 0
	032 JumpIfEqual {66}
	033 Move X21, 0x42F000
	034 Move X21, [X21+3664]
	035 Move S9, [X19+144]
	036 Move S8, [X19+148]
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move X9, [X20]
	045 Move X0, X20
	046 Move X1, X19
	047 Move W2, [X8+8]
	048 Move X4, [X9+440]
	049 Move X3, [X9+448]
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Move V0, V9
	055 Move V1, V8
	056 Move D9, [X31+48]
	057 Move D8, [X31+56]
	058 CallNoReturn X4
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X30, [X31+16]
	062 Move X21, [X31+24]
	063 Move D9, [X31+48]
	064 Move D8, [X31+56]
	065 Return 
	066 Call 0x1C17F20

Method: System.Void OnMouseMove(UnityEngine.UIElements.MouseMoveEvent evt)

Disassembly:
	0x03CEED8C LDR X22, [X22 + 0xE70]
	0x03CEED90 MOV X0, X21
	0x03CEED94 MOV X1, X19
	0x03CEED98 MOV X2, X31
	0x03CEED9C BL 0x33C0DE4
	0x03CEEDA0 MOV X8, X0
	0x03CEEDA4 CBZ X0, 0x3CEEDB8
	0x03CEEDA8 LDR X1, [X22]
	0x03CEEDAC LDR X9, [X8]
	0x03CEEDB0 CMP X9, X1
	0x03CEEDB4 B.NE 0x3CEEDE4
	0x03CEEDB8 MOV X0, X20
	0x03CEEDBC MOV X1, X8
	0x03CEEDC0 MOV X2, X21
	0x03CEEDC4 BL 0x1C24138
	0x03CEEDC8 CMP X21, X0
	0x03CEEDCC MOV X21, X0
	0x03CEEDD0 B.NE 0x3CEED90
	0x03CEEDD4 LDP X20, X19, [X31 + 0x20]
	0x03CEEDD8 LDP X22, X21, [X31 + 0x10]
	0x03CEEDDC LDR X30, [X31], #0x30
	0x03CEEDE0 RET
	0x03CEEDE4 MOV X0, X8
	0x03CEEDE8 BL 0x1C171E0
	0x03CEEDEC STR X30, [X31 - 0x30]!
	0x03CEEDF0 STP X22, X21, [X31 + 0x10]
	0x03CEEDF4 STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6FA000
	006 Move W8, [X21+1875]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x475000
	014 Move X0, [X0+2632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1875], W8
	018 Move W8, [X20+80]
	019 Compare W8, 0
	020 JumpIfEqual {35}
	021 Compare X19, 0
	022 JumpIfEqual {40}
	023 Move X8, [X20]
	024 Move S0, [X19+144]
	025 Move S1, [X19+148]
	026 Move X0, X20
	027 Move X1, X19
	028 Move X3, [X8+456]
	029 Move X2, [X8+464]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 CallNoReturn X3
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return 
	040 Call 0x1C17F20

Method: System.Void OnMouseUp(UnityEngine.UIElements.MouseUpEvent evt)

Disassembly:
	0x03CEEDF8 ADRP X21, 0x6F9000
	0x03CEEDFC LDRB W8, [X21 + 0x761]
	0x03CEEE00 MOV X19, X1
	0x03CEEE04 MOV X20, X0
	0x03CEEE08 TBNZ X8, 0x0, 0x3CEEE20
	0x03CEEE0C ADRP X0, 0x406000
	0x03CEEE10 LDR X0, [X0 + 0xE70]
	0x03CEEE14 BL 0x1C16CF4
	0x03CEEE18 MOVZ W8, 0x1
	0x03CEEE1C STRB W8, [X21 + 0x761]
	0x03CEEE20 ADRP X22, 0x406000
	0x03CEEE24 LDR X21, [X20 + 0x30]!
	0x03CEEE28 LDR X22, [X22 + 0xE70]
	0x03CEEE2C MOV X0, X21
	0x03CEEE30 MOV X1, X19
	0x03CEEE34 MOV X2, X31
	0x03CEEE38 BL 0x33C0FDC
	0x03CEEE3C MOV X8, X0
	0x03CEEE40 CBZ X0, 0x3CEEE54
	0x03CEEE44 LDR X1, [X22]
	0x03CEEE48 LDR X9, [X8]
	0x03CEEE4C CMP X9, X1
	0x03CEEE50 B.NE 0x3CEEE80
	0x03CEEE54 MOV X0, X20
	0x03CEEE58 MOV X1, X8
	0x03CEEE5C MOV X2, X21
	0x03CEEE60 BL 0x1C24138
	0x03CEEE64 CMP X21, X0
	0x03CEEE68 MOV X21, X0
	0x03CEEE6C B.NE 0x3CEEE2C
	0x03CEEE70 LDP X20, X19, [X31 + 0x20]
	0x03CEEE74 LDP X22, X21, [X31 + 0x10]
	0x03CEEE78 LDR X30, [X31], #0x30
	0x03CEEE7C RET
	0x03CEEE80 MOV X0, X8
	0x03CEEE84 BL 0x1C171E0
	0x03CEEE88 STR X30, [X31 - 0x40]!
	0x03CEEE8C STP X24, X23, [X31 + 0x10]
	0x03CEEE90 STP X22, X21, [X31 + 0x20]
	0x03CEEE94 STP X20, X19, [X31 + 0x30]
	0x03CEEE98 ADRP X21, 0x6F9000
	0x03CEEE9C LDRB W8, [X21 + 0x762]
	0x03CEEEA0 MOV X19, X1
	0x03CEEEA4 MOV X20, X0
	0x03CEEEA8 TBNZ X8, 0x0, 0x3CEEEC0
	0x03CEEEAC ADRP X0, 0x474000
	0x03CEEEB0 LDR X0, [X0 + 0xA90]
	0x03CEEEB4 BL 0x1C16CF4
	0x03CEEEB8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x6FA000
	008 Move W8, [X21+1876]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x475000
	016 Move X0, [X0+2640]
	017 Call 0x1C17CF4
	018 Move X0, 0x42F000
	019 Move X0, [X0+3664]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1876], W8
	023 Move W8, [X20+80]
	024 Compare W8, 0
	025 JumpIfEqual {62}
	026 Move X0, X20
	027 Move X1, X19
	028 Move X2, X31
	029 Call MouseManipulator.CanStopManipulation, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {62}
	034 Compare X19, 0
	035 JumpIfEqual {69}
	036 Move X21, 0x42F000
	037 Move X21, [X21+3664]
	038 Move S9, [X19+144]
	039 Move S8, [X19+148]
	040 Move X0, [X21]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X21]
	046 Move X8, [X0+184]
	047 Move X9, [X20]
	048 Move X0, X20
	049 Move X1, X19
	050 Move W2, [X8+8]
	051 Move X4, [X9+472]
	052 Move X3, [X9+480]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 Move V0, V9
	058 Move V1, V8
	059 Move D9, [X31+48]
	060 Move D8, [X31+56]
	061 CallNoReturn X4
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+16]
	065 Move X21, [X31+24]
	066 Move D9, [X31+48]
	067 Move D8, [X31+56]
	068 Return 
	069 Call 0x1C17F20

Method: System.Void OnMouseCaptureOut(UnityEngine.UIElements.MouseCaptureOutEvent evt)

Disassembly:
	0x03CEEEBC STRB W8, [X21 + 0x762]
	0x03CEEEC0 ADRP X24, 0x474000
	0x03CEEEC4 LDR X21, [X20 + 0x38]!
	0x03CEEEC8 LDR X24, [X24 + 0xA90]
	0x03CEEECC MOV X0, X21
	0x03CEEED0 MOV X1, X19
	0x03CEEED4 MOV X2, X31
	0x03CEEED8 BL 0x33C0DE4
	0x03CEEEDC CBZ X0, 0x3CEEEFC
	0x03CEEEE0 LDR X23, [X24]
	0x03CEEEE4 MOV X22, X0
	0x03CEEEE8 MOV X1, X23
	0x03CEEEEC BL 0x1C16E00
	0x03CEEEF0 MOV X1, X0
	0x03CEEEF4 CBNZ X0, 0x3CEEF00
	0x03CEEEF8 B 0x3CEEF2C
	0x03CEEEFC MOV X1, X31
	0x03CEEF00 MOV X0, X20
	0x03CEEF04 MOV X2, X21
	0x03CEEF08 BL 0x1C24138
	0x03CEEF0C CMP X21, X0
	0x03CEEF10 MOV X21, X0
	0x03CEEF14 B.NE 0x3CEEECC
	0x03CEEF18 LDP X20, X19, [X31 + 0x30]
	0x03CEEF1C LDP X22, X21, [X31 + 0x20]
	0x03CEEF20 LDP X24, X23, [X31 + 0x10]
	0x03CEEF24 LDR X30, [X31], #0x40
	0x03CEEF28 RET
	0x03CEEF2C MOV X0, X22
	0x03CEEF30 MOV X1, X23
	0x03CEEF34 BL 0x1C171E0
	0x03CEEF38 STR X30, [X31 - 0x40]!
	0x03CEEF3C STP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6FA000
	006 Move W8, [X21+1877]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x42F000
	014 Move X0, [X0+3664]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1877], W8
	018 Move W8, [X20+80]
	019 Compare W8, 0
	020 JumpIfEqual {41}
	021 Move X21, 0x42F000
	022 Move X21, [X21+3664]
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X9, [X20]
	031 Move X0, X20
	032 Move X1, X19
	033 Move W2, [X8+8]
	034 Move X4, [X9+488]
	035 Move X3, [X9+496]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 CallNoReturn X4
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 

Method: System.Void OnPointerDown(UnityEngine.UIElements.PointerDownEvent evt)

Disassembly:
	0x03CEEF40 STP X22, X21, [X31 + 0x20]
	0x03CEEF44 STP X20, X19, [X31 + 0x30]
	0x03CEEF48 ADRP X21, 0x6F9000
	0x03CEEF4C LDRB W8, [X21 + 0x763]
	0x03CEEF50 MOV X19, X1
	0x03CEEF54 MOV X20, X0
	0x03CEEF58 TBNZ X8, 0x0, 0x3CEEF70
	0x03CEEF5C ADRP X0, 0x474000
	0x03CEEF60 LDR X0, [X0 + 0xA90]
	0x03CEEF64 BL 0x1C16CF4
	0x03CEEF68 MOVZ W8, 0x1
	0x03CEEF6C STRB W8, [X21 + 0x763]
	0x03CEEF70 ADRP X24, 0x474000
	0x03CEEF74 LDR X21, [X20 + 0x38]!
	0x03CEEF78 LDR X24, [X24 + 0xA90]
	0x03CEEF7C MOV X0, X21
	0x03CEEF80 MOV X1, X19
	0x03CEEF84 MOV X2, X31
	0x03CEEF88 BL 0x33C0FDC
	0x03CEEF8C CBZ X0, 0x3CEEFAC
	0x03CEEF90 LDR X23, [X24]
	0x03CEEF94 MOV X22, X0
	0x03CEEF98 MOV X1, X23
	0x03CEEF9C BL 0x1C16E00
	0x03CEEFA0 MOV X1, X0
	0x03CEEFA4 CBNZ X0, 0x3CEEFB0
	0x03CEEFA8 B 0x3CEEFDC
	0x03CEEFAC MOV X1, X31
	0x03CEEFB0 MOV X0, X20
	0x03CEEFB4 MOV X2, X21
	0x03CEEFB8 BL 0x1C24138
	0x03CEEFBC CMP X21, X0
	0x03CEEFC0 MOV X21, X0
	0x03CEEFC4 B.NE 0x3CEEF7C
	0x03CEEFC8 LDP X20, X19, [X31 + 0x30]
	0x03CEEFCC LDP X22, X21, [X31 + 0x20]
	0x03CEEFD0 LDP X24, X23, [X31 + 0x10]
	0x03CEEFD4 LDR X30, [X31], #0x40
	0x03CEEFD8 RET
	0x03CEEFDC MOV X0, X22
	0x03CEEFE0 MOV X1, X23
	0x03CEEFE4 BL 0x1C171E0
	0x03CEEFE8 STR X30, [X31 - 0x40]!
	0x03CEEFEC STP X24, X23, [X31 + 0x10]
	0x03CEEFF0 STP X22, X21, [X31 + 0x20]
	0x03CEEFF4 STP X20, X19, [X31 + 0x30]
	0x03CEEFF8 ADRP X21, 0x6F9000
	0x03CEEFFC LDRB W8, [X21 + 0x764]
	0x03CEF000 MOV X19, X1
	0x03CEF004 MOV X20, X0
	0x03CEF008 TBNZ X8, 0x0, 0x3CEF020
	0x03CEF00C ADRP X0, 0x473000
	0x03CEF010 LDR X0, [X0 + 0xA90]
	0x03CEF014 BL 0x1C16CF4
	0x03CEF018 MOVZ W8, 0x1
	0x03CEF01C STRB W8, [X21 + 0x764]
	0x03CEF020 ADRP X24, 0x473000
	0x03CEF024 LDR X21, [X20 + 0x40]!
	0x03CEF028 LDR X24, [X24 + 0xA90]
	0x03CEF02C MOV X0, X21
	0x03CEF030 MOV X1, X19
	0x03CEF034 MOV X2, X31
	0x03CEF038 BL 0x33C0DE4
	0x03CEF03C CBZ X0, 0x3CEF05C
	0x03CEF040 LDR X23, [X24]
	0x03CEF044 MOV X22, X0
	0x03CEF048 MOV X1, X23
	0x03CEF04C BL 0x1C16E00
	0x03CEF050 MOV X1, X0
	0x03CEF054 CBNZ X0, 0x3CEF060
	0x03CEF058 B 0x3CEF08C
	0x03CEF05C MOV X1, X31
	0x03CEF060 MOV X0, X20
	0x03CEF064 MOV X2, X21
	0x03CEF068 BL 0x1C24138
	0x03CEF06C CMP X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6FA000
	007 Move W8, [X21+1878]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x431000
	015 Move X0, [X0+3312]
	016 Call 0x1C17CF4
	017 Move X0, 0x431000
	018 Move X0, [X0+3320]
	019 Call 0x1C17CF4
	020 Move X0, 0x42F000
	021 Move X0, [X0+3664]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1878], W8
	025 Move X0, X20
	026 Move X1, X19
	027 Move X2, X31
	028 Call PointerManipulator.CanStartManipulation, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {66}
	033 Compare X19, 0
	034 JumpIfEqual {97}
	035 Move X22, 0x42F000
	036 Move X22, [X22+3664]
	037 Move W21, [X19+156]
	038 Move X0, [X22]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X22]
	044 Move X8, [X0+184]
	045 Move W8, [X8+8]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X20
	048 Move X1, X31
	049 Call Manipulator.get_target, X0
	050 Compare X0, 0
	051 JumpIfEqual {97}
	052 Move X1, X31
	053 Call VisualElement.get_panel, X0
	054 Move W1, [X19+156]
	055 Move X2, X31
	056 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	057 Move X0, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+48]
	064 Call EventBase.StopImmediatePropagation, X0
	065 Return 
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return 
	072 Move X8, [X20]
	073 Move S0, [X19+192]
	074 Move S1, [X19+196]
	075 Move W2, [X19+156]
	076 Move X0, X20
	077 Move X9, [X8+440]
	078 Move X3, [X8+448]
	079 Move X1, X19
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X0, X20
	082 Move X1, X31
	083 Call Manipulator.get_target, X0
	084 Compare X0, 0
	085 JumpIfEqual {97}
	086 Move X1, X31
	087 Call VisualElement.get_panel, X0
	088 Move W1, [X19+156]
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X2, X31
	094 Move X30, [X31+48]
	095 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	096 Return 
	097 Call 0x1C17F20

Method: System.Void OnPointerMove(UnityEngine.UIElements.PointerMoveEvent evt)

Disassembly:
	0x03CEF070 MOV X21, X0
	0x03CEF074 B.NE 0x3CEF02C
	0x03CEF078 LDP X20, X19, [X31 + 0x30]
	0x03CEF07C LDP X22, X21, [X31 + 0x20]
	0x03CEF080 LDP X24, X23, [X31 + 0x10]
	0x03CEF084 LDR X30, [X31], #0x40
	0x03CEF088 RET
	0x03CEF08C MOV X0, X22
	0x03CEF090 MOV X1, X23
	0x03CEF094 BL 0x1C171E0
	0x03CEF098 STR X30, [X31 - 0x40]!
	0x03CEF09C STP X24, X23, [X31 + 0x10]
	0x03CEF0A0 STP X22, X21, [X31 + 0x20]
	0x03CEF0A4 STP X20, X19, [X31 + 0x30]
	0x03CEF0A8 ADRP X21, 0x6F8000
	0x03CEF0AC LDRB W8, [X21 + 0x765]
	0x03CEF0B0 MOV X19, X1
	0x03CEF0B4 MOV X20, X0
	0x03CEF0B8 TBNZ X8, 0x0, 0x3CEF0D0
	0x03CEF0BC ADRP X0, 0x473000
	0x03CEF0C0 LDR X0, [X0 + 0xA90]
	0x03CEF0C4 BL 0x1C16CF4
	0x03CEF0C8 MOVZ W8, 0x1
	0x03CEF0CC STRB W8, [X21 + 0x765]
	0x03CEF0D0 ADRP X24, 0x473000
	0x03CEF0D4 LDR X21, [X20 + 0x40]!
	0x03CEF0D8 LDR X24, [X24 + 0xA90]
	0x03CEF0DC MOV X0, X21
	0x03CEF0E0 MOV X1, X19
	0x03CEF0E4 MOV X2, X31
	0x03CEF0E8 BL 0x33C0FDC
	0x03CEF0EC CBZ X0, 0x3CEF10C
	0x03CEF0F0 LDR X23, [X24]
	0x03CEF0F4 MOV X22, X0
	0x03CEF0F8 MOV X1, X23
	0x03CEF0FC BL 0x1C16E00
	0x03CEF100 MOV X1, X0
	0x03CEF104 CBNZ X0, 0x3CEF110
	0x03CEF108 B 0x3CEF13C
	0x03CEF10C MOV X1, X31
	0x03CEF110 MOV X0, X20
	0x03CEF114 MOV X2, X21
	0x03CEF118 BL 0x1C24138
	0x03CEF11C CMP X21, X0
	0x03CEF120 MOV X21, X0
	0x03CEF124 B.NE 0x3CEF0DC
	0x03CEF128 LDP X20, X19, [X31 + 0x30]
	0x03CEF12C LDP X22, X21, [X31 + 0x20]
	0x03CEF130 LDP X24, X23, [X31 + 0x10]
	0x03CEF134 LDR X30, [X31], #0x40
	0x03CEF138 RET
	0x03CEF13C MOV X0, X22
	0x03CEF140 MOV X1, X23
	0x03CEF144 BL 0x1C171E0
	0x03CEF148 STR X30, [X31 - 0x20]!
	0x03CEF14C STP X20, X19, [X31 + 0x10]
	0x03CEF150 ADRP X20, 0x6F8000
	0x03CEF154 LDRB W8, [X20 + 0x766]
	0x03CEF158 MOV X19, X0
	0x03CEF15C TBNZ X8, 0x0, 0x3CEF174
	0x03CEF160 ADRP X0, 0x473000
	0x03CEF164 LDR X0, [X0 + 0xA98]
	0x03CEF168 BL 0x1C16CF4
	0x03CEF16C MOVZ W8, 0x1
	0x03CEF170 STRB W8, [X20 + 0x766]
	0x03CEF174 LDR X8, [X19 + 0x10]
	0x03CEF178 CBZ X8, 0x3CEF19C
	0x03CEF17C ADRP X9, 0x473000
	0x03CEF180 LDR X9, [X9 + 0xA98]
	0x03CEF184 LDR X10, [X8]
	0x03CEF188 LDR X9, [X9]
	0x03CEF18C LDRB W12, [X10 + 0x130]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6F9000
	007 Move W8, [X21+1879]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x474000
	015 Move X0, [X0+2648]
	016 Call 0x1C17CF4
	017 Move X0, 0x430000
	018 Move X0, [X0+528]
	019 Call 0x1C17CF4
	020 Move X0, 0x42E000
	021 Move X0, [X0+3664]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1879], W8
	025 Move W8, [X20+80]
	026 Compare W8, 0
	027 JumpIfEqual {61}
	028 Compare X19, 0
	029 JumpIfEqual {91}
	030 Move X22, 0x42E000
	031 Move X22, [X22+3664]
	032 Move W21, [X19+156]
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X22]
	039 Move X8, [X0+184]
	040 Move W8, [X8+8]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X20
	043 Move X1, X31
	044 Call Manipulator.get_target, X0
	045 Compare X0, 0
	046 JumpIfEqual {91}
	047 Move X1, X31
	048 Call VisualElement.get_panel, X0
	049 Move W1, [X19+156]
	050 Move X2, X31
	051 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	052 Move X0, X19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X1, X31
	058 Move X30, [X31+48]
	059 Call EventBase.StopPropagation, X0
	060 Return 
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return 
	067 Move X8, [X20]
	068 Move S0, [X19+192]
	069 Move S1, [X19+196]
	070 Move X0, X20
	071 Move X1, X19
	072 Move X9, [X8+456]
	073 Move X2, [X8+464]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X0, X20
	076 Move X1, X31
	077 Call Manipulator.get_target, X0
	078 Compare X0, 0
	079 JumpIfEqual {91}
	080 Move X1, X31
	081 Call VisualElement.get_panel, X0
	082 Move W1, [X19+156]
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X2, X31
	088 Move X30, [X31+48]
	089 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	090 Return 
	091 Call 0x1C17F20

Method: System.Void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt)

Disassembly:
	0x03CEF190 LDRB W11, [X9 + 0x130]
	0x03CEF194 CMP W12, W11
	0x03CEF198 B.CS 0x3CEF1A4
	0x03CEF19C MOV X0, X31
	0x03CEF1A0 B 0x3CEF1B8
	0x03CEF1A4 LDR X10, [X10 + 0xC8]
	0x03CEF1A8 ADD X10, X10, X11, 0x3, LSL
	0x03CEF1AC LDUR X10, [X10 - 0x8]
	0x03CEF1B0 CMP X10, X9
	0x03CEF1B4 CSEL X0, X8, X31, EQ
	0x03CEF1B8 LDP X20, X19, [X31 + 0x10]
	0x03CEF1BC LDR X30, [X31], #0x20
	0x03CEF1C0 RET
	0x03CEF1C4 STP X30, X21, [X31 - 0x20]!
	0x03CEF1C8 STP X20, X19, [X31 + 0x10]
	0x03CEF1CC ADRP X21, 0x6F8000
	0x03CEF1D0 LDRB W8, [X21 + 0x767]
	0x03CEF1D4 MOV X20, X1
	0x03CEF1D8 MOV X19, X0
	0x03CEF1DC TBNZ X8, 0x0, 0x3CEF1F4
	0x03CEF1E0 ADRP X0, 0x473000
	0x03CEF1E4 LDR X0, [X0 + 0xAA0]
	0x03CEF1E8 BL 0x1C16CF4
	0x03CEF1EC MOVZ W8, 0x1
	0x03CEF1F0 STRB W8, [X21 + 0x767]
	0x03CEF1F4 CBZ X20, 0x3CEF27C
	0x03CEF1F8 ADRP X8, 0x473000
	0x03CEF1FC LDR X8, [X8 + 0xAA0]
	0x03CEF200 LDR X9, [X20]
	0x03CEF204 LDR X8, [X8]
	0x03CEF208 LDRB W11, [X9 + 0x130]
	0x03CEF20C LDRB W10, [X8 + 0x130]
	0x03CEF210 CMP W11, W10
	0x03CEF214 B.CC 0x3CEF27C
	0x03CEF218 LDR X9, [X9 + 0xC8]
	0x03CEF21C ADD X9, X9, X10, 0x3, LSL
	0x03CEF220 LDUR X9, [X9 - 0x8]
	0x03CEF224 CMP X9, X8
	0x03CEF228 CSEL X20, X20, X31, EQ
	0x03CEF22C CBZ X20, 0x3CEF27C
	0x03CEF230 LDR X8, [X19]
	0x03CEF234 MOV X0, X19
	0x03CEF238 LDR X9, [X8 + 0x258]
	0x03CEF23C LDR X1, [X8 + 0x260]
	0x03CEF240 BLR X9
	0x03CEF244 MOV X21, X0
	0x03CEF248 MOV X0, X19
	0x03CEF24C BL 0x3CEF148
	0x03CEF250 CBZ X0, 0x3CEF2A8
	0x03CEF254 MOV X1, X31
	0x03CEF258 BL 0x3CFEE30
	0x03CEF25C TBZ X0, 0x0, 0x3CEF288
	0x03CEF260 MOV X0, X19
	0x03CEF264 BL 0x3CEF148
	0x03CEF268 CBZ X0, 0x3CEF2A8
	0x03CEF26C LDR W8, [X0 + 0x520]
	0x03CEF270 CMP W8, 0x1
	0x03CEF274 CSET W2, EQ
	0x03CEF278 B 0x3CEF28C
	0x03CEF27C LDP X20, X19, [X31 + 0x10]
	0x03CEF280 LDP X30, X21, [X31], #0x20
	0x03CEF284 RET
	0x03CEF288 MOV W2, W31
	0x03CEF28C MOV X0, X20
	0x03CEF290 MOV X1, X21
	0x03CEF294 BL 0x3CEF2AC
	0x03CEF298 MOV X1, X20
	0x03CEF29C LDP X20, X19, [X31 + 0x10]
	0x03CEF2A0 LDP X30, X21, [X31], #0x20
	0x03CEF2A4 B 0x3CEF370
	0x03CEF2A8 BL 0x1C16F20
	0x03CEF2AC STR X30, [X31 - 0x40]!
	0x03CEF2B0 STP X24, X23, [X31 + 0x10]
	0x03CEF2B4 STP X22, X21, [X31 + 0x20]
	0x03CEF2B8 STP X20, X19, [X31 + 0x30]
	0x03CEF2BC ADRP X24, 0x6F8000
	0x03CEF2C0 ADRP X23, 0x42C000
	0x03CEF2C4 ADRP X22, 0x473000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6F9000
	007 Move W8, [X21+1880]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x474000
	015 Move X0, [X0+2656]
	016 Call 0x1C17CF4
	017 Move X0, 0x430000
	018 Move X0, [X0+3360]
	019 Call 0x1C17CF4
	020 Move X0, 0x42E000
	021 Move X0, [X0+3664]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1880], W8
	025 Move W8, [X20+80]
	026 Compare W8, 0
	027 JumpIfEqual {69}
	028 Move X0, X20
	029 Move X1, X19
	030 Move X2, X31
	031 Call PointerManipulator.CanStopManipulation, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {69}
	036 Compare X19, 0
	037 JumpIfEqual {100}
	038 Move X22, 0x42E000
	039 Move X22, [X22+3664]
	040 Move W21, [X19+156]
	041 Move X0, [X22]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X22]
	047 Move X8, [X0+184]
	048 Move W8, [X8+8]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X20
	051 Move X1, X31
	052 Call Manipulator.get_target, X0
	053 Compare X0, 0
	054 JumpIfEqual {100}
	055 Move X1, X31
	056 Call VisualElement.get_panel, X0
	057 Move W1, [X19+156]
	058 Move X2, X31
	059 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	060 Move X0, X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X1, X31
	066 Move X30, [X31+48]
	067 Call EventBase.StopPropagation, X0
	068 Return 
	069 Move X20, [X31+32]
	070 Move X19, [X31+40]
	071 Move X22, [X31+16]
	072 Move X21, [X31+24]
	073 Move X30, [X31+48]
	074 Return 
	075 Move X8, [X20]
	076 Move S0, [X19+192]
	077 Move S1, [X19+196]
	078 Move W2, [X19+156]
	079 Move X0, X20
	080 Move X9, [X8+472]
	081 Move X3, [X8+480]
	082 Move X1, X19
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X0, X20
	085 Move X1, X31
	086 Call Manipulator.get_target, X0
	087 Compare X0, 0
	088 JumpIfEqual {100}
	089 Move X1, X31
	090 Call VisualElement.get_panel, X0
	091 Move W1, [X19+156]
	092 Move X20, [X31+32]
	093 Move X19, [X31+40]
	094 Move X22, [X31+16]
	095 Move X21, [X31+24]
	096 Move X2, X31
	097 Move X30, [X31+48]
	098 Call PointerCaptureHelper.PreventCompatibilityMouseEvents, X0, X1
	099 Return 
	100 Call 0x1C17F20

Method: System.Void OnPointerCancel(UnityEngine.UIElements.PointerCancelEvent evt)

Disassembly:
	0x03CEF2C8 LDRB W8, [X24 + 0x7B1]
	0x03CEF2CC LDR X23, [X23 + 0x898]
	0x03CEF2D0 LDR X22, [X22 + 0xA98]
	0x03CEF2D4 MOV W19, W2
	0x03CEF2D8 MOV X21, X1
	0x03CEF2DC MOV X20, X0
	0x03CEF2E0 TBNZ X8, 0x0, 0x3CEF304
	0x03CEF2E4 ADRP X0, 0x473000
	0x03CEF2E8 LDR X0, [X0 + 0xA98]
	0x03CEF2EC BL 0x1C16CF4
	0x03CEF2F0 ADRP X0, 0x42C000
	0x03CEF2F4 LDR X0, [X0 + 0x898]
	0x03CEF2F8 BL 0x1C16CF4
	0x03CEF2FC MOVZ W8, 0x1
	0x03CEF300 STRB W8, [X24 + 0x7B1]
	0x03CEF304 STR X21, [X20 + 0x10]
	0x03CEF308 LDR X0, [X23]
	0x03CEF30C BL 0x1C16F10
	0x03CEF310 MOV X1, X31
	0x03CEF314 MOV X21, X0
	0x03CEF318 BL 0x3DEF578
	0x03CEF31C LDR X0, [X22]
	0x03CEF320 LDR W8, [X0 + 0xE0]
	0x03CEF324 CBNZ W8, 0x3CEF32C
	0x03CEF328 BL 0x1C16DFC
	0x03CEF32C CBZ X21, 0x3CEF36C
	0x03CEF330 LDR X8, [X22]
	0x03CEF334 MOV X0, X21
	0x03CEF338 MOV X2, X31
	0x03CEF33C LDR X8, [X8 + 0xB8]
	0x03CEF340 LDR X1, [X8 + 0x30]
	0x03CEF344 BL 0x3DEF278
	0x03CEF348 LDR X2, [X20 + 0x10]
	0x03CEF34C AND W3, W19, 0x1
	0x03CEF350 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F9000
	006 Move W8, [X21+1881]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x474000
	014 Move X0, [X0+2664]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1881], W8
	018 Move W8, [X20+80]
	019 Compare W8, 0
	020 JumpIfEqual {48}
	021 Move X0, X20
	022 Move X1, X19
	023 Move X2, X31
	024 Call PointerManipulator.CanStopManipulation, X0, X1
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {48}
	029 Compare X19, 0
	030 JumpIfEqual {53}
	031 Move W0, [X19+156]
	032 Call Clickable.IsNotMouseEvent, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {48}
	037 Move X8, [X20]
	038 Move W2, [X19+156]
	039 Move X0, X20
	040 Move X1, X19
	041 Move X4, [X8+488]
	042 Move X3, [X8+496]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 CallNoReturn X4
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Call 0x1C17F20

Method: System.Void OnPointerCaptureOut(UnityEngine.UIElements.PointerCaptureOutEvent evt)

Disassembly:
	0x03CEF3B8 ADRP X20, 0x473000
	0x03CEF3BC LDR X20, [X20 + 0xAA8]
	0x03CEF3C0 MOV X1, X31
	0x03CEF3C4 BL 0x3DE7EEC
	0x03CEF3C8 LDR X1, [X20]
	0x03CEF3CC MOV X20, X0
	0x03CEF3D0 MOV W0, W31
	0x03CEF3D4 BL 0x266EACC
	0x03CEF3D8 CBZ X20, 0x3CEF7B4
	0x03CEF3DC ADRP X23, 0x42D000
	0x03CEF3E0 LDR X8, [X20]
	0x03CEF3E4 LDR X23, [X23 + 0x128]
	0x03CEF3E8 MOV X21, X0
	0x03CEF3EC LDRH W9, [X8 + 0x12E]
	0x03CEF3F0 LDR X1, [X23]
	0x03CEF3F4 CBZ X9, 0x3CEF418
	0x03CEF3F8 LDR X10, [X8 + 0xB0]
	0x03CEF3FC ADD X10, X10, 0x8
	0x03CEF400 LDUR X11, [X10 - 0x8]
	0x03CEF404 CMP X11, X1
	0x03CEF408 B.EQ 0x3CEF428
	0x03CEF40C SUBS X9, X9, 0x1
	0x03CEF410 ADD X10, X10, 0x10
	0x03CEF414 B.NE 0x3CEF400
	0x03CEF418 MOVZ W2, 0x28
	0x03CEF41C MOV X0, X20
	0x03CEF420 BL 0x1C5C788
	0x03CEF424 B 0x3CEF438
	0x03CEF428 LDR W9, [X10]
	0x03CEF42C ADD W9, W9, 0x28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F9000
	006 Move W8, [X21+1882]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x474000
	014 Move X0, [X0+2672]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1882], W8
	018 Move W8, [X20+80]
	019 Compare W8, 0
	020 JumpIfEqual {40}
	021 Compare X19, 0
	022 JumpIfEqual {45}
	023 Move W0, [X19+144]
	024 Call Clickable.IsNotMouseEvent, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {40}
	029 Move X8, [X20]
	030 Move W2, [X19+144]
	031 Move X0, X20
	032 Move X1, X19
	033 Move X4, [X8+488]
	034 Move X3, [X8+496]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 CallNoReturn X4
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 
	045 Call 0x1C17F20

Method: System.Boolean ContainsPointer(System.Int32 pointerId)

Disassembly:
	0x03CEE224 CMP W21, W8
	0x03CEE228 B.NE 0x3CEE278
	0x03CEE22C MOV X0, X20
	0x03CEE230 MOV X1, X31
	0x03CEE234 BL 0x3DB9E70
	0x03CEE238 CBZ X0, 0x3CEE2C4
	0x03CEE23C MOV X1, X31
	0x03CEE240 BL 0x3DEC0CC
	0x03CEE244 LDR W1, [X19 + 0x9C]
	0x03CEE248 MOV X2, X31
	0x03CEE24C BL 0x3DBF888
	0x03CEE250 MOV X0, X19
	0x03CEE254 LDP X20, X19, [X31 + 0x20]
	0x03CEE258 LDP X22, X21, [X31 + 0x10]
	0x03CEE25C MOV X1, X31
	0x03CEE260 LDR X30, [X31], #0x30
	0x03CEE264 B 0x3D9D950
	0x03CEE268 LDP X20, X19, [X31 + 0x20]
	0x03CEE26C LDP X22, X21, [X31 + 0x10]
	0x03CEE270 LDR X30, [X31], #0x30
	0x03CEE274 RET
	0x03CEE278 LDR X8, [X20]
	0x03CEE27C LDP S0, S1, [X19 + 0xC0]
	0x03CEE280 LDR W2, [X19 + 0x9C]
	0x03CEE284 MOV X0, X20
	0x03CEE288 LDP X9, X3, [X8 + 0x1D8]
	0x03CEE28C MOV X1, X19
	0x03CEE290 BLR X9
	0x03CEE294 MOV X0, X20
	0x03CEE298 MOV X1, X31
	0x03CEE29C BL 0x3DB9E70
	0x03CEE2A0 CBZ X0, 0x3CEE2C4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Manipulator.get_target, X0
	008 Compare X0, 0
	009 JumpIfEqual {38}
	010 Move X0, [X0+928]
	011 Compare X0, 0
	012 JumpIfEqual {38}
	013 Move W1, W20
	014 Move X2, X31
	015 Call BaseVisualElementPanel.GetTopElementUnderPointer, X0, X1
	016 Move X20, X0
	017 Move X0, X19
	018 Move X1, X31
	019 Call Manipulator.get_target, X0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, X19
	022 Move X1, X31
	023 Call Manipulator.get_target, X0
	024 Compare X0, 0
	025 JumpIfEqual {38}
	026 Move X1, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X2, X31
	030 Move X30, [X31+32]
	031 Call VisualElement.Contains, X0, X1
	032 Return X0
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move W0, 1
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Boolean IsNotMouseEvent(System.Int32 pointerId)

Disassembly:
	0x03CEF354 MOV X1, X21
	0x03CEF358 LDP X20, X19, [X31 + 0x30]
	0x03CEF35C LDP X22, X21, [X31 + 0x20]
	0x03CEF360 LDP X24, X23, [X31 + 0x10]
	0x03CEF364 LDR X30, [X31], #0x40
	0x03CEF368 B 0x3CF75EC
	0x03CEF36C BL 0x1C16F20
	0x03CEF370 STP X30, X23, [X31 - 0x30]!
	0x03CEF374 STP X22, X21, [X31 + 0x10]
	0x03CEF378 STP X20, X19, [X31 + 0x20]
	0x03CEF37C ADRP X20, 0x6F8000
	0x03CEF380 LDRB W8, [X20 + 0x768]
	0x03CEF384 MOV X19, X1
	0x03CEF388 TBNZ X8, 0x0, 0x3CEF3AC
	0x03CEF38C ADRP X0, 0x42D000
	0x03CEF390 LDR X0, [X0 + 0x128]
	0x03CEF394 BL 0x1C16CF4
	0x03CEF398 ADRP X0, 0x473000
	0x03CEF39C LDR X0, [X0 + 0xAA8]
	0x03CEF3A0 BL 0x1C16CF4
	0x03CEF3A4 MOVZ W8, 0x1
	0x03CEF3A8 STRB W8, [X20 + 0x768]
	0x03CEF3AC CBZ X19, 0x3CEF7B4
	0x03CEF3B0 LDR X0, [X19 + 0x10]
	0x03CEF3B4 CBZ X0, 0x3CEF7B4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F9000
	006 Move X20, 0x42E000
	007 Move W8, [X21+1883]
	008 Move X20, [X20+3664]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x42E000
	015 Move X0, [X0+3664]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1883], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move W8, [X8+8]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0

Method: System.Void Invoke(UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03CEE2A4 MOV X1, X31
	0x03CEE2A8 BL 0x3DEC0CC
	0x03CEE2AC LDR W1, [X19 + 0x9C]
	0x03CEE2B0 LDP X20, X19, [X31 + 0x20]
	0x03CEE2B4 LDP X22, X21, [X31 + 0x10]
	0x03CEE2B8 MOV X2, X31
	0x03CEE2BC LDR X30, [X31], #0x30
	0x03CEE2C0 B 0x3DBF888
	0x03CEE2C4 BL 0x1C16F20
	0x03CEE2C8 STP X30, X21, [X31 - 0x20]!
	0x03CEE2CC STP X20, X19, [X31 + 0x10]
	0x03CEE2D0 ADRP X21, 0x6F9000
	0x03CEE2D4 LDRB W8, [X21 + 0x759]
	0x03CEE2D8 MOV X19, X1
	0x03CEE2DC MOV X20, X0
	0x03CEE2E0 TBNZ X8, 0x0, 0x3CEE2F8
	0x03CEE2E4 ADRP X0, 0x474000
	0x03CEE2E8 LDR X0, [X0 + 0xA68]
	0x03CEE2EC BL 0x1C16CF4
	0x03CEE2F0 MOVZ W8, 0x1
	0x03CEE2F4 STRB W8, [X21 + 0x759]
	0x03CEE2F8 LDRB W8, [X20 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+56]
	005 Move X20, X0
	006 Move X19, X1
	007 Compare X8, 0
	008 JumpIfEqual {13}
	009 Move X9, [X8+24]
	010 Move X0, [X8+64]
	011 Move X1, [X8+40]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X8, [X20+48]
	014 Compare X8, 0
	015 JumpIfEqual {24}
	016 Move X3, [X8+24]
	017 Move X0, [X8+64]
	018 Move X2, [X8+40]
	019 Move X1, X19
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 CallNoReturn X3
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 

Method: System.Void SimulateSingleClick(UnityEngine.UIElements.EventBase evt, System.Int32 delayMs = 100)

Disassembly:
	0x03CEF430 ADD X8, X8, W9, 0x4, SXTW
	0x03CEF434 ADD X0, X8, 0x138
	0x03CEF438 LDP X8, X2, [X0]
	0x03CEF43C MOV X0, X20
	0x03CEF440 MOV X1, X21
	0x03CEF444 BLR X8
	0x03CEF448 LDR X0, [X19 + 0x10]
	0x03CEF44C CBZ X0, 0x3CEF7B4
	0x03CEF450 MOV X1, X31
	0x03CEF454 BL 0x3DE7EEC
	0x03CEF458 MOV X20, X0
	0x03CEF45C MOVZ W0, 0x4
	0x03CEF460 MOV X1, X31
	0x03CEF464 BL 0x3DFD0B0
	0x03CEF468 CBZ X20, 0x3CEF7B4
	0x03CEF46C LDR X9, [X20]
	0x03CEF470 MOV X8, X1
	0x03CEF474 LDR X1, [X23]
	0x03CEF478 MOV X21, X0
	0x03CEF47C LDRH W10, [X9 + 0x12E]
	0x03CEF480 AND X22, X8, 0x0
	0x03CEF484 CBZ X10, 0x3CEF4A8
	0x03CEF488 LDR X8, [X9 + 0xB0]
	0x03CEF48C ADD X8, X8, 0x8
	0x03CEF490 LDUR X11, [X8 - 0x8]
	0x03CEF494 CMP X11, X1
	0x03CEF498 B.EQ 0x3CEF4B8
	0x03CEF49C SUBS X10, X10, 0x1
	0x03CEF4A0 ADD X8, X8, 0x10
	0x03CEF4A4 B.NE 0x3CEF490
	0x03CEF4A8 MOVZ W2, 0x13
	0x03CEF4AC MOV X0, X20
	0x03CEF4B0 BL 0x1C5C788
	0x03CEF4B4 B 0x3CEF4C8
	0x03CEF4B8 LDR W8, [X8]
	0x03CEF4BC ADD W8, W8, 0x13
	0x03CEF4C0 ADD X8, X9, W8, 0x4, SXTW
	0x03CEF4C4 ADD X0, X8, 0x138
	0x03CEF4C8 LDP X8, X3, [X0]
	0x03CEF4CC MOV X0, X20
	0x03CEF4D0 MOV X1, X21
	0x03CEF4D4 MOV X2, X22
	0x03CEF4D8 BLR X8
	0x03CEF4DC LDR X0, [X19 + 0x10]
	0x03CEF4E0 CBZ X0, 0x3CEF7B4
	0x03CEF4E4 MOV X1, X31
	0x03CEF4E8 BL 0x3DE7EEC
	0x03CEF4EC MOV X20, X0
	0x03CEF4F0 FMOV S0, W31
	0x03CEF4F4 MOV X0, X31
	0x03CEF4F8 BL 0x3DFED98
	0x03CEF4FC CBZ X20, 0x3CEF7B4
	0x03CEF500 LDR X9, [X20]
	0x03CEF504 MOV X8, X1
	0x03CEF508 LDR X1, [X23]
	0x03CEF50C MOV X21, X0
	0x03CEF510 LDRH W10, [X9 + 0x12E]
	0x03CEF514 AND X22, X8, 0x0
	0x03CEF518 CBZ X10, 0x3CEF53C
	0x03CEF51C LDR X8, [X9 + 0xB0]
	0x03CEF520 ADD X8, X8, 0x8
	0x03CEF524 LDUR X11, [X8 - 0x8]
	0x03CEF528 CMP X11, X1
	0x03CEF52C B.EQ 0x3CEF54C
	0x03CEF530 SUBS X10, X10, 0x1
	0x03CEF534 ADD X8, X8, 0x10
	0x03CEF538 B.NE 0x3CEF524
	0x03CEF53C MOVZ W2, 0x1D
	0x03CEF540 MOV X0, X20
	0x03CEF544 BL 0x1C5C788
	0x03CEF548 B 0x3CEF55C
	0x03CEF54C LDR W8, [X8]
	0x03CEF550 ADD W8, W8, 0x1D
	0x03CEF554 ADD X8, X9, W8, 0x4, SXTW
	0x03CEF558 ADD X0, X8, 0x138
	0x03CEF55C LDP X8, X3, [X0]
	0x03CEF560 MOV X0, X20
	0x03CEF564 MOV X1, X21
	0x03CEF568 MOV X2, X22
	0x03CEF56C BLR X8
	0x03CEF570 LDR X0, [X19 + 0x10]
	0x03CEF574 CBZ X0, 0x3CEF7B4
	0x03CEF578 MOV X1, X31
	0x03CEF57C BL 0x3DE7EEC
	0x03CEF580 MOV X20, X0
	0x03CEF584 FMOV S0, W31
	0x03CEF588 MOV X0, X31
	0x03CEF58C BL 0x3DFED98
	0x03CEF590 CBZ X20, 0x3CEF7B4
	0x03CEF594 LDR X9, [X20]
	0x03CEF598 MOV X8, X1
	0x03CEF59C LDR X1, [X23]
	0x03CEF5A0 MOV X21, X0
	0x03CEF5A4 LDRH W10, [X9 + 0x12E]
	0x03CEF5A8 AND X22, X8, 0x0
	0x03CEF5AC CBZ X10, 0x3CEF5D0
	0x03CEF5B0 LDR X8, [X9 + 0xB0]
	0x03CEF5B4 ADD X8, X8, 0x8
	0x03CEF5B8 LDUR X11, [X8 - 0x8]
	0x03CEF5BC CMP X11, X1
	0x03CEF5C0 B.EQ 0x3CEF5E0
	0x03CEF5C4 SUBS X10, X10, 0x1
	0x03CEF5C8 ADD X8, X8, 0x10
	0x03CEF5CC B.NE 0x3CEF5B8
	0x03CEF5D0 MOVZ W2, 0x1A
	0x03CEF5D4 MOV X0, X20
	0x03CEF5D8 BL 0x1C5C788
	0x03CEF5DC B 0x3CEF5F0
	0x03CEF5E0 LDR W8, [X8]
	0x03CEF5E4 ADD W8, W8, 0x1A
	0x03CEF5E8 ADD X8, X9, W8, 0x4, SXTW
	0x03CEF5EC ADD X0, X8, 0x138
	0x03CEF5F0 LDP X8, X3, [X0]
	0x03CEF5F4 MOV X0, X20
	0x03CEF5F8 MOV X1, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x6F9000
	008 Move W8, [X22+1884]
	009 Move W21, W2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x406000
	017 Move X0, [X0+3696]
	018 Call 0x1C17CF4
	019 Move X0, 0x474000
	020 Move X0, [X0+2680]
	021 Call 0x1C17CF4
	022 Move X0, 0x430000
	023 Move X0, [X0+2744]
	024 Call 0x1C17CF4
	025 Move X0, 0x42D000
	026 Move X0, [X0+1664]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1884], W8
	030 Move X0, X20
	031 Move X1, X31
	032 Call Manipulator.get_target, X0
	033 Compare X0, 0
	034 JumpIfEqual {127}
	035 Move X1, X31
	036 Move X22, X0
	037 Call VisualElement.get_pseudoStates, X0
	038 Or W1, W0, 1
	039 Move X0, X22
	040 Move X2, X31
	041 Call VisualElement.set_pseudoStates, X0, X1
	042 Move X0, X20
	043 Move X1, X31
	044 Call Manipulator.get_target, X0
	045 Compare X0, 0
	046 JumpIfEqual {127}
	047 Move X22, 0x406000
	048 Move X23, 0x474000
	049 Move X22, [X22+3696]
	050 Move X23, [X23+2680]
	051 Move X1, X31
	052 Call VisualElement.get_schedule, X0
	053 Move X8, [X22]
	054 Move X22, X0
	055 Move X0, X8
	056 Call 0x1C17F10
	057 Move X2, [X23]
	058 Move X1, X20
	059 Move X3, X31
	060 Move X23, X0
	061 Call Action..ctor, X0, X1, X2
	062 Compare X22, 0
	063 JumpIfEqual {127}
	064 Move X10, 0x42D000
	065 Move X8, [X22]
	066 Move X10, [X10+1664]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X1, [X10]
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move W2, 1
	078 Move X0, X22
	079 Call 0x1C5D788
	080 Move W9, [X10]
	081 Add W9, W9, 1
	082 Add X8, X8, W9
	083 Add X0, X8, 312
	084 Move X8, [X0]
	085 Move X2, [X0+8]
	086 Move X0, X22
	087 Move X1, X23
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Compare X0, 0
	090 JumpIfEqual {127}
	091 Move X10, 0x430000
	092 Move X8, [X0]
	093 Move X10, [X10+2744]
	094 Move X22, X0
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Move X1, [X10]
	097 Compare X9, 0
	098 JumpIfEqual {105}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move W2, 2
	106 Move X0, X22
	107 Call 0x1C5D788
	108 Move W9, [X10]
	109 Add W9, W9, 2
	110 Add X8, X8, W9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X2, [X0+8]
	114 Move X1, W21
	115 Move X0, X22
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X0, X20
	118 Move X1, X19
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X30, [X31+48]
	124 Move X23, [X31+56]
	125 Call Clickable.Invoke, X0, X1
	126 Return 
	127 Call 0x1C17F20

Method: System.Void ProcessDownEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, System.Int32 pointerId)

Disassembly:
	0x03CEF5FC MOV X2, X22
	0x03CEF600 BLR X8
	0x03CEF604 LDR X0, [X19 + 0x10]
	0x03CEF608 CBZ X0, 0x3CEF7B4
	0x03CEF60C MOV X1, X31
	0x03CEF610 BL 0x3DE7EEC
	0x03CEF614 MOV X20, X0
	0x03CEF618 FMOV S0, W31
	0x03CEF61C MOV X0, X31
	0x03CEF620 BL 0x3DFED98
	0x03CEF624 CBZ X20, 0x3CEF7B4
	0x03CEF628 LDR X9, [X20]
	0x03CEF62C MOV X8, X1
	0x03CEF630 LDR X1, [X23]
	0x03CEF634 MOV X21, X0
	0x03CEF638 LDRH W10, [X9 + 0x12E]
	0x03CEF63C AND X22, X8, 0x0
	0x03CEF640 CBZ X10, 0x3CEF664
	0x03CEF644 LDR X8, [X9 + 0xB0]
	0x03CEF648 ADD X8, X8, 0x8
	0x03CEF64C LDUR X11, [X8 - 0x8]
	0x03CEF650 CMP X11, X1
	0x03CEF654 B.EQ 0x3CEF674
	0x03CEF658 SUBS X10, X10, 0x1
	0x03CEF65C ADD X8, X8, 0x10
	0x03CEF660 B.NE 0x3CEF64C
	0x03CEF664 MOVZ W2, 0x27
	0x03CEF668 MOV X0, X20
	0x03CEF66C BL 0x1C5C788
	0x03CEF670 B 0x3CEF684
	0x03CEF674 LDR W8, [X8]
	0x03CEF678 ADD W8, W8, 0x27
	0x03CEF67C ADD X8, X9, W8, 0x4, SXTW
	0x03CEF680 ADD X0, X8, 0x138
	0x03CEF684 LDP X8, X3, [X0]
	0x03CEF688 MOV X0, X20
	0x03CEF68C MOV X1, X21
	0x03CEF690 MOV X2, X22
	0x03CEF694 BLR X8
	0x03CEF698 LDR X0, [X19 + 0x10]
	0x03CEF69C CBZ X0, 0x3CEF7B4
	0x03CEF6A0 MOV X1, X31
	0x03CEF6A4 BL 0x3DE7EEC
	0x03CEF6A8 MOV X20, X0
	0x03CEF6AC FMOV S0, W31
	0x03CEF6B0 MOV X0, X31
	0x03CEF6B4 BL 0x3DFE658
	0x03CEF6B8 CBZ X20, 0x3CEF7B4
	0x03CEF6BC LDR X8, [X20]
	0x03CEF6C0 LDR X1, [X23]
	0x03CEF6C4 MOV X21, X0
	0x03CEF6C8 LDRH W9, [X8 + 0x12E]
	0x03CEF6CC CBZ X9, 0x3CEF6F0
	0x03CEF6D0 LDR X10, [X8 + 0xB0]
	0x03CEF6D4 ADD X10, X10, 0x8
	0x03CEF6D8 LDUR X11, [X10 - 0x8]
	0x03CEF6DC CMP X11, X1
	0x03CEF6E0 B.EQ 0x3CEF700
	0x03CEF6E4 SUBS X9, X9, 0x1
	0x03CEF6E8 ADD X10, X10, 0x10
	0x03CEF6EC B.NE 0x3CEF6D8
	0x03CEF6F0 MOVZ W2, 0x15
	0x03CEF6F4 MOV X0, X20
	0x03CEF6F8 BL 0x1C5C788
	0x03CEF6FC B 0x3CEF710
	0x03CEF700 LDR W9, [X10]
	0x03CEF704 ADD W9, W9, 0x15
	0x03CEF708 ADD X8, X8, W9, 0x4, SXTW
	0x03CEF70C ADD X0, X8, 0x138
	0x03CEF710 LDP X8, X2, [X0]
	0x03CEF714 MOV X0, X20
	0x03CEF718 MOV X1, X21
	0x03CEF71C BLR X8
	0x03CEF720 LDR X0, [X19 + 0x10]
	0x03CEF724 CBZ X0, 0x3CEF7B4
	0x03CEF728 MOV X1, X31
	0x03CEF72C BL 0x3DE7EEC
	0x03CEF730 MOV X19, X0
	0x03CEF734 FMOV S0, W31
	0x03CEF738 MOV X0, X31
	0x03CEF73C BL 0x3DFE658
	0x03CEF740 CBZ X19, 0x3CEF7B4
	0x03CEF744 LDR X8, [X19]
	0x03CEF748 LDR X1, [X23]
	0x03CEF74C MOV X20, X0
	0x03CEF750 LDRH W9, [X8 + 0x12E]
	0x03CEF754 CBZ X9, 0x3CEF778
	0x03CEF758 LDR X10, [X8 + 0xB0]
	0x03CEF75C ADD X10, X10, 0x8
	0x03CEF760 LDUR X11, [X10 - 0x8]
	0x03CEF764 CMP X11, X1
	0x03CEF768 B.EQ 0x3CEF788
	0x03CEF76C SUBS X9, X9, 0x1
	0x03CEF770 ADD X10, X10, 0x10
	0x03CEF774 B.NE 0x3CEF760
	0x03CEF778 MOVZ W2, 0x16
	0x03CEF77C MOV X0, X19
	0x03CEF780 BL 0x1C5C788
	0x03CEF784 B 0x3CEF798
	0x03CEF788 LDR W9, [X10]
	0x03CEF78C ADD W9, W9, 0x16
	0x03CEF790 ADD X8, X8, W9, 0x4, SXTW
	0x03CEF794 ADD X0, X8, 0x138
	0x03CEF798 LDP X3, X2, [X0]
	0x03CEF79C MOV X0, X19
	0x03CEF7A0 MOV X1, X20
	0x03CEF7A4 LDP X20, X19, [X31 + 0x20]
	0x03CEF7A8 LDP X22, X21, [X31 + 0x10]
	0x03CEF7AC LDP X30, X23, [X31], #0x30
	0x03CEF7B0 BR X3
	0x03CEF7B4 BL 0x1C16F20
	0x03CEF7B8 STR X30, [X31 - 0x30]!
	0x03CEF7BC STP X22, X21, [X31 + 0x10]
	0x03CEF7C0 STP X20, X19, [X31 + 0x20]
	0x03CEF7C4 ADRP X22, 0x6F8000
	0x03CEF7C8 LDRB W8, [X22 + 0x769]
	0x03CEF7CC MOV W19, W2
	0x03CEF7D0 MOV X20, X1
	0x03CEF7D4 MOV X21, X0
	0x03CEF7D8 TBNZ X8, 0x0, 0x3CEF7F0
	0x03CEF7DC ADRP X0, 0x473000
	0x03CEF7E0 LDR X0, [X0 + 0xAA0]
	0x03CEF7E4 BL 0x1C16CF4
	0x03CEF7E8 MOVZ W8, 0x1
	0x03CEF7EC STRB W8, [X22 + 0x769]
	0x03CEF7F0 CBZ X20, 0x3CEF884
	0x03CEF7F4 ADRP X8, 0x473000
	0x03CEF7F8 LDR X8, [X8 + 0xAA0]
	0x03CEF7FC LDR X9, [X20]
	0x03CEF800 LDR X8, [X8]
	0x03CEF804 LDRB W11, [X9 + 0x130]
	0x03CEF808 LDRB W10, [X8 + 0x130]
	0x03CEF80C CMP W11, W10
	0x03CEF810 B.CC 0x3CEF884
	0x03CEF814 LDR X9, [X9 + 0xC8]
	0x03CEF818 ADD X9, X9, X10, 0x3, LSL
	0x03CEF81C LDUR X9, [X9 - 0x8]
	0x03CEF820 CMP X9, X8
	0x03CEF824 B.NE 0x3CEF884
	0x03CEF828 MOV X0, X21
	0x03CEF82C BL 0x3CEF148
	0x03CEF830 CBZ X0, 0x3CEF8A0
	0x03CEF834 MOV X1, X31
	0x03CEF838 BL 0x3CFEE30
	0x03CEF83C TBZ X0, 0x0, 0x3CEF874
	0x03CEF840 MOV X0, X21
	0x03CEF844 BL 0x3CEF148
	0x03CEF848 CBZ X0, 0x3CEF8A0
	0x03CEF84C LDR W8, [X0 + 0x520]
	0x03CEF850 CMP W8, 0x1
	0x03CEF854 B.NE 0x3CEF874
	0x03CEF858 LDR X8, [X21]
	0x03CEF85C MOV X0, X21
	0x03CEF860 MOV W1, W19
	0x03CEF864 LDR X9, [X8 + 0x298]
	0x03CEF868 LDR X2, [X8 + 0x2A0]
	0x03CEF86C BLR X9
	0x03CEF870 B 0x3CEF878
	0x03CEF874 MOV W0, W31
	0x03CEF878 AND W1, W0, 0x1
	0x03CEF87C MOV X0, X20
	0x03CEF880 BL 0x3CEF8A4
	0x03CEF884 MOV X0, X21
	0x03CEF888 MOV X1, X20
	0x03CEF88C MOV W2, W19
	0x03CEF890 LDP X20, X19, [X31 + 0x20]
	0x03CEF894 LDP X22, X21, [X31 + 0x10]
	0x03CEF898 LDR X30, [X31], #0x30
	0x03CEF89C B 0x3CEF9E8
	0x03CEF8A0 BL 0x1C16F20
	0x03CEF8A4 STP X30, X21, [X31 - 0x20]!
	0x03CEF8A8 STP X20, X19, [X31 + 0x10]
	0x03CEF8AC ADRP X21, 0x6F8000
	0x03CEF8B0 LDRB W8, [X21 + 0x7B3]
	0x03CEF8B4 MOV W20, W1
	0x03CEF8B8 MOV X19, X0
	0x03CEF8BC TBNZ X8, 0x0, 0x3CEF8D4
	0x03CEF8C0 ADRP X0, 0x473000
	0x03CEF8C4 LDR X0, [X0 + 0xA98]
	0x03CEF8C8 BL 0x1C16CF4
	0x03CEF8CC MOVZ W8, 0x1
	0x03CEF8D0 STRB W8, [X21 + 0x7B3]
	0x03CEF8D4 LDR X0, [X19 + 0x50]
	0x03CEF8D8 TBZ X20, 0x0, 0x3CEF964
	0x03CEF8DC CBZ X0, 0x3CEF9E4
	0x03CEF8E0 MOV X1, X31
	0x03CEF8E4 BL 0x3DEBF58
	0x03CEF8E8 CBNZ X0, 0x3CEF9D8
	0x03CEF8EC LDR X8, [X19]
	0x03CEF8F0 MOV X0, X19
	0x03CEF8F4 LDP X9, X1, [X8 + 0x178]
	0x03CEF8F8 BLR X9
	0x03CEF8FC CBZ X0, 0x3CEF9E4
	0x03CEF900 LDR X2, [X19 + 0x50]
	0x03CEF904 MOV W1, W31
	0x03CEF908 MOV X3, X31
	0x03CEF90C BL 0x3DF6198
	0x03CEF910 LDR X8, [X19]
	0x03CEF914 MOV X0, X19
	0x03CEF918 LDP X9, X1, [X8 + 0x178]
	0x03CEF91C BLR X9
	0x03CEF920 ADRP X20, 0x473000
	0x03CEF924 LDR X20, [X20 + 0xA98]
	0x03CEF928 MOV X19, X0
	0x03CEF92C LDR X8, [X20]
	0x03CEF930 LDR W9, [X8 + 0xE0]
	0x03CEF934 CBNZ W9, 0x3CEF940
	0x03CEF938 MOV X0, X8
	0x03CEF93C BL 0x1C16DFC
	0x03CEF940 CBZ X19, 0x3CEF9E4
	0x03CEF944 LDR X8, [X20]
	0x03CEF948 MOV X0, X19
	0x03CEF94C LDP X20, X19, [X31 + 0x10]
	0x03CEF950 MOV X2, X31
	0x03CEF954 LDR X8, [X8 + 0xB8]
	0x03CEF958 LDR X1, [X8 + 0x30]
	0x03CEF95C LDP X30, X21, [X31], #0x20
	0x03CEF960 B 0x3DF1C70
	0x03CEF964 CBZ X0, 0x3CEF9D8
	0x03CEF968 MOV X1, X31
	0x03CEF96C BL 0x3DEBF58
	0x03CEF970 CBZ X0, 0x3CEF9D8
	0x03CEF974 LDR X0, [X19 + 0x50]
	0x03CEF978 CBZ X0, 0x3CEF9E4
	0x03CEF97C MOV X1, X31
	0x03CEF980 BL 0x3DF6948

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x6F9000
	010 Move X22, 0x42E000
	011 Move W8, [X23+1885]
	012 Move X22, [X22+3704]
	013 Move W21, W2
	014 Move V8, V1
	015 Move V9, V0
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x474000
	023 Move X0, [X0+2688]
	024 Call 0x1C17CF4
	025 Move X0, 0x474000
	026 Move X0, [X0+2696]
	027 Call 0x1C17CF4
	028 Move X0, 0x42E000
	029 Move X0, [X0+3704]
	030 Call 0x1C17CF4
	031 Move X0, 0x430000
	032 Move X0, [X0+2744]
	033 Call 0x1C17CF4
	034 Move X0, 0x42D000
	035 Move X0, [X0+1664]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+1885], W8
	039 Move W8, 1
	040 Move X0, X20
	041 Move X1, X31
	042 Move [X20+80], W8
	043 Move [X20+92], W21
	044 Call Manipulator.get_target, X0
	045 Move W1, W21
	046 Move X2, X31
	047 Call PointerCaptureHelper.CapturePointer, X0, X1
	048 Move X1, [X22]
	049 Move X0, X19
	050 Call 0x1C17E00
	051 Compare X0, 0
	052 JumpIfNotEqual {63}
	053 Move X0, X20
	054 Move X1, X31
	055 Call Manipulator.get_target, X0
	056 Compare X0, 0
	057 JumpIfEqual {249}
	058 Move X1, X31
	059 Call VisualElement.get_panel, X0
	060 Move W1, W21
	061 Move X2, X31
	062 Call PointerCaptureHelper.ProcessPointerCapture, X0, X1
	063 Move X8, [X20+64]
	064 Move [X20+84], S9
	065 Move [X20+92], S8
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X8, [X20+72]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X20
	070 Move W1, W21
	071 Call Clickable.ContainsPointer, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {93}
	076 Move X0, X20
	077 Move X1, X31
	078 Call Manipulator.get_target, X0
	079 Compare X0, 0
	080 JumpIfEqual {249}
	081 Move X1, X31
	082 Call VisualElement.get_enabledInHierarchy, X0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {90}
	087 Move W8, [X20+96]
	088 Compare W8, 0
	089 JumpIfEqual {93}
	090 Move X0, X20
	091 Move X1, X19
	092 Call Clickable.Invoke, X0, X1
	093 Move X23, 0x430000
	094 Move X21, [X20+104]
	095 Move X23, [X23+2744]
	096 Compare X21, 0
	097 JumpIfEqual {113}
	098 Move X8, [X21]
	099 Move X22, [X20+64]
	100 Move X1, [X23]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move W2, 2
	111 Move X0, X21
	112 Call 0x1C5D788
	113 Move X0, X20
	114 Move X1, X31
	115 Call Manipulator.get_target, X0
	116 Compare X0, 0
	117 JumpIfEqual {249}
	118 Move X1, X31
	119 Call VisualElement.get_schedule, X0
	120 Move X8, 0x474000
	121 Move X8, [X8+2688]
	122 Move X21, X0
	123 Move X8, [X8]
	124 Move X0, X8
	125 Call 0x1C17F10
	126 Move X8, 0x474000
	127 Move X8, [X8+2696]
	128 Move X1, X20
	129 Move X3, X31
	130 Move X22, X0
	131 Move X2, [X8]
	132 Call Action`1<TimerState>..ctor, X0, X1, X2
	133 Compare X21, 0
	134 JumpIfEqual {249}
	135 Move X10, 0x42D000
	136 Move X8, [X21]
	137 Move X10, [X10+1664]
	138 NotImplemented "Instruction LDRH not yet implemented."
	139 Move X1, [X10]
	140 Compare X9, 0
	141 JumpIfEqual {148}
	142 Move X10, [X8+176]
	143 Add X10, X10, 8
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Subtract X9, X9, 1
	147 Add X10, X10, 16
	148 Move X0, X21
	149 Move W2, W31
	150 Call 0x1C5D788
	151 Move W9, [X10]
	152 Add W9, W9, 2
	153 Add X8, X8, W9
	154 Add X0, X8, 312
	155 Move X8, [X0]
	156 Move X2, [X0+8]
	157 Move X0, X21
	158 Move X1, X22
	159 NotImplemented "Instruction BLR not yet implemented."
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Add X8, X8, X9
	162 Add X0, X8, 312
	163 Move X8, [X0]
	164 Move X2, [X0+8]
	165 Move X0, X21
	166 Move X1, X22
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Compare X0, 0
	169 JumpIfEqual {249}
	170 Move X8, [X0]
	171 Move X22, [X20+72]
	172 Move X1, [X23]
	173 Move X21, X0
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 4
	184 Move X0, X21
	185 Call 0x1C5D788
	186 Move W9, [X10]
	187 Add W9, W9, 4
	188 Add X8, X8, W9
	189 Add X0, X8, 312
	190 Move X8, [X0]
	191 Move X2, [X0+8]
	192 Move X0, X21
	193 Move X1, X22
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Compare X0, 0
	196 JumpIfEqual {249}
	197 Move X8, [X0]
	198 Move X22, [X20+64]
	199 Move X1, [X23]
	200 Move X21, X0
	201 NotImplemented "Instruction LDRH not yet implemented."
	202 Compare X9, 0
	203 JumpIfEqual {210}
	204 Move X10, [X8+176]
	205 Add X10, X10, 8
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Subtract X9, X9, 1
	209 Add X10, X10, 16
	210 Move W2, 3
	211 Move X0, X21
	212 Call 0x1C5D788
	213 Move W9, [X10]
	214 Add W9, W9, 3
	215 Add X8, X8, W9
	216 Add X0, X8, 312
	217 Move X8, [X0]
	218 Move X2, [X0+8]
	219 Move X0, X21
	220 Move X1, X22
	221 NotImplemented "Instruction BLR not yet implemented."
	222 Move [X20+104], X0
	223 Move X0, X20
	224 Move X1, X31
	225 Call Manipulator.get_target, X0
	226 Compare X0, 0
	227 JumpIfEqual {249}
	228 Move X1, X31
	229 Move X20, X0
	230 Call VisualElement.get_pseudoStates, X0
	231 Or W1, W0, 1
	232 Move X0, X20
	233 Move X2, X31
	234 Call VisualElement.set_pseudoStates, X0, X1
	235 Compare X19, 0
	236 JumpIfEqual {249}
	237 Move X0, X19
	238 Move X20, [X31+48]
	239 Move X19, [X31+56]
	240 Move X22, [X31+32]
	241 Move X21, [X31+40]
	242 Move X30, [X31+16]
	243 Move X23, [X31+24]
	244 Move X1, X31
	245 Move D9, [X31+64]
	246 Move D8, [X31+72]
	247 Call EventBase.StopImmediatePropagation, X0
	248 Return 
	249 Call 0x1C17F20

Method: System.Void ProcessMoveEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition)

Disassembly:
	0x03CEF984 LDR X8, [X19]
	0x03CEF988 MOV X0, X19
	0x03CEF98C LDP X9, X1, [X8 + 0x178]
	0x03CEF990 BLR X9
	0x03CEF994 ADRP X20, 0x473000
	0x03CEF998 LDR X20, [X20 + 0xA98]
	0x03CEF99C MOV X19, X0
	0x03CEF9A0 LDR X8, [X20]
	0x03CEF9A4 LDR W9, [X8 + 0xE0]
	0x03CEF9A8 CBNZ W9, 0x3CEF9B4
	0x03CEF9AC MOV X0, X8
	0x03CEF9B0 BL 0x1C16DFC
	0x03CEF9B4 CBZ X19, 0x3CEF9E4
	0x03CEF9B8 LDR X8, [X20]
	0x03CEF9BC MOV X0, X19
	0x03CEF9C0 LDP X20, X19, [X31 + 0x10]
	0x03CEF9C4 MOV X2, X31
	0x03CEF9C8 LDR X8, [X8 + 0xB8]
	0x03CEF9CC LDR X1, [X8 + 0x30]
	0x03CEF9D0 LDP X30, X21, [X31], #0x20
	0x03CEF9D4 B 0x3DF1B54
	0x03CEF9D8 LDP X20, X19, [X31 + 0x10]
	0x03CEF9DC LDP X30, X21, [X31], #0x20
	0x03CEF9E0 RET
	0x03CEF9E4 BL 0x1C16F20
	0x03CEF9E8 STR X30, [X31 - 0x30]!
	0x03CEF9EC STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move W1, [X0+92]
	007 Move X21, X0
	008 Move [X0+84], S0
	009 Move [X0+92], S1
	010 Call Clickable.ContainsPointer, X0, X1
	011 Move W20, W0
	012 Move X0, X21
	013 Move X1, X31
	014 Call Manipulator.get_target, X0
	015 Compare X0, 0
	016 JumpIfEqual {35}
	017 Move X1, X31
	018 Move X21, X0
	019 Call VisualElement.get_pseudoStates, X0
	020 Move W1, W0
	021 NotImplemented "Instruction BFM not yet implemented."
	022 Move X0, X21
	023 Move X2, X31
	024 Call VisualElement.set_pseudoStates, X0, X1
	025 Compare X19, 0
	026 JumpIfEqual {35}
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X1, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call EventBase.StopPropagation, X0
	034 Return 
	035 Call 0x1C17F20

Method: System.Void ProcessUpEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.Vector2 localPosition, System.Int32 pointerId)

Disassembly:
	0x03CEF9F0 STP X20, X19, [X31 + 0x20]
	0x03CEF9F4 ADRP X22, 0x6F8000
	0x03CEF9F8 LDRB W8, [X22 + 0x797]
	0x03CEF9FC MOV W19, W2
	0x03CEFA00 MOV X20, X1
	0x03CEFA04 MOV X21, X0
	0x03CEFA08 TBNZ X8, 0x0, 0x3CEFA20
	0x03CEFA0C ADRP X0, 0x446000
	0x03CEFA10 LDR X0, [X0 + 0x5B0]
	0x03CEFA14 BL 0x1C16CF4
	0x03CEFA18 MOVZ W8, 0x1
	0x03CEFA1C STRB W8, [X22 + 0x797]
	0x03CEFA20 CBZ X20, 0x3CEFAB8
	0x03CEFA24 LDR X8, [X21]
	0x03CEFA28 LDR X1, [X20 + 0x10]
	0x03CEFA2C MOV X0, X21
	0x03CEFA30 MOV W2, W19
	0x03CEFA34 LDR X9, [X8 + 0x268]
	0x03CEFA38 LDR X3, [X8 + 0x270]
	0x03CEFA3C BLR X9
	0x03CEFA40 LDR X8, [X21 + 0x10]
	0x03CEFA44 CBZ X8, 0x3CEFAB8
	0x03CEFA48 ADRP X9, 0x446000
	0x03CEFA4C LDR X9, [X9 + 0x5B0]
	0x03CEFA50 LDR X0, [X8 + 0x470]
	0x03CEFA54 MOV W1, W19
	0x03CEFA58 LDR X2, [X9]
	0x03CEFA5C BL 0x21BA3B8
	0x03CEFA60 LDR X8, [X20]
	0x03CEFA64 AND W1, W0, 0x1
	0x03CEFA68 MOV X0, X20
	0x03CEFA6C LDP X9, X2, [X8 + 0x1C8]
	0x03CEFA70 BLR X9
	0x03CEFA74 LDR X8, [X20]
	0x03CEFA78 MOV X0, X20
	0x03CEFA7C LDP X9, X1, [X8 + 0x178]
	0x03CEFA80 BLR X9
	0x03CEFA84 CBZ X0, 0x3CEFAB8
	0x03CEFA88 MOV X1, X31
	0x03CEFA8C MOV X21, X0
	0x03CEFA90 BL 0x3DEEF88
	0x03CEFA94 AND W1, W0, 0xFFFFFFFD
	0x03CEFA98 MOV X0, X21
	0x03CEFA9C MOV X2, X31
	0x03CEFAA0 BL 0x3DEEF90
	0x03CEFAA4 STR W19, [X20 + 0x20]
	0x03CEFAA8 LDP X20, X19, [X31 + 0x20]
	0x03CEFAAC LDP X22, X21, [X31 + 0x10]
	0x03CEFAB0 LDR X30, [X31], #0x30
	0x03CEFAB4 RET
	0x03CEFAB8 BL 0x1C16F20
	0x03CEFABC MOVZ W0, 0x1
	0x03CEFAC0 RET
	0x03CEFAC4 STP X29, X30, [X31 - 0x60]!
	0x03CEFAC8 STP X28, X27, [X31 + 0x10]
	0x03CEFACC STP X26, X25, [X31 + 0x20]
	0x03CEFAD0 STP X24, X23, [X31 + 0x30]
	0x03CEFAD4 STP X22, X21, [X31 + 0x40]
	0x03CEFAD8 STP X20, X19, [X31 + 0x50]
	0x03CEFADC ADRP X20, 0x6F8000
	0x03CEFAE0 LDRB W8, [X20 + 0x76A]
	0x03CEFAE4 MOV W21, W1
	0x03CEFAE8 MOV X19, X0
	0x03CEFAEC TBNZ X8, 0x0, 0x3CEFB7C
	0x03CEFAF0 ADRP X0, 0x473000
	0x03CEFAF4 LDR X0, [X0 + 0xAB0]
	0x03CEFAF8 BL 0x1C16CF4
	0x03CEFAFC ADRP X0, 0x42E000
	0x03CEFB00 LDR X0, [X0 + 0x8D8]
	0x03CEFB04 BL 0x1C16CF4
	0x03CEFB08 ADRP X0, 0x42F000
	0x03CEFB0C LDR X0, [X0 + 0xB08]
	0x03CEFB10 BL 0x1C16CF4
	0x03CEFB14 ADRP X0, 0x42E000
	0x03CEFB18 LDR X0, [X0 + 0x8E0]
	0x03CEFB1C BL 0x1C16CF4
	0x03CEFB20 ADRP X0, 0x473000
	0x03CEFB24 LDR X0, [X0 + 0xAB8]
	0x03CEFB28 BL 0x1C16CF4
	0x03CEFB2C ADRP X0, 0x40E000
	0x03CEFB30 LDR X0, [X0 + 0x9B0]
	0x03CEFB34 BL 0x1C16CF4
	0x03CEFB38 ADRP X0, 0x40B000
	0x03CEFB3C LDR X0, [X0 + 0x2F0]
	0x03CEFB40 BL 0x1C16CF4
	0x03CEFB44 ADRP X0, 0x40B000
	0x03CEFB48 LDR X0, [X0 + 0x2F8]
	0x03CEFB4C BL 0x1C16CF4
	0x03CEFB50 ADRP X0, 0x405000
	0x03CEFB54 LDR X0, [X0 + 0xE10]
	0x03CEFB58 BL 0x1C16CF4
	0x03CEFB5C ADRP X0, 0x404000
	0x03CEFB60 LDR X0, [X0 + 0xEF0]
	0x03CEFB64 BL 0x1C16CF4
	0x03CEFB68 ADRP X0, 0x404000
	0x03CEFB6C LDR X0, [X0 + 0x6C0]
	0x03CEFB70 BL 0x1C16CF4
	0x03CEFB74 MOVZ W8, 0x1
	0x03CEFB78 STRB W8, [X20 + 0x76A]
	0x03CEFB7C CMP W21, 0x1
	0x03CEFB80 B.LT 0x3CF00E8
	0x03CEFB84 MOV X0, X19
	0x03CEFB88 BL 0x3CF023C
	0x03CEFB8C LDR X8, [X19]
	0x03CEFB90 MOV X0, X19
	0x03CEFB94 LDP X9, X1, [X8 + 0x188]
	0x03CEFB98 BLR X9
	0x03CEFB9C CBZ X0, 0x3CF0118
	0x03CEFBA0 ADRP X10, 0x40B000
	0x03CEFBA4 LDR X8, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6F9000
	008 Move X22, 0x42E000
	009 Move W8, [X23+1886]
	010 Move X22, [X22+3704]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x42E000
	019 Move X0, [X0+3704]
	020 Call 0x1C17CF4
	021 Move X0, 0x430000
	022 Move X0, [X0+2744]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1886], W8
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W8, TEMP
	029 Move X0, X20
	030 Move X1, X31
	031 Move [X20+80], W31
	032 Move [X20+92], W8
	033 Call Manipulator.get_target, X0
	034 Move W1, W21
	035 Move X2, X31
	036 Call PointerCaptureHelper.ReleasePointer, X0, X1
	037 Move X1, [X22]
	038 Move X0, X19
	039 Call 0x1C17E00
	040 Compare X0, 0
	041 JumpIfNotEqual {52}
	042 Move X0, X20
	043 Move X1, X31
	044 Call Manipulator.get_target, X0
	045 Compare X0, 0
	046 JumpIfEqual {131}
	047 Move X1, X31
	048 Call VisualElement.get_panel, X0
	049 Move W1, W21
	050 Move X2, X31
	051 Call PointerCaptureHelper.ProcessPointerCapture, X0, X1
	052 Move X0, X20
	053 Move X1, X31
	054 Call Manipulator.get_target, X0
	055 Compare X0, 0
	056 JumpIfEqual {131}
	057 Move X1, X31
	058 Move X22, X0
	059 Call VisualElement.get_pseudoStates, X0
	060 And W1, W0, 0xFFFFFFFE
	061 Move X0, X22
	062 Move X2, X31
	063 Call VisualElement.set_pseudoStates, X0, X1
	064 Move X8, [X20+64]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, [X20+72]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X20, [X20+104]
	069 Compare X20, 0
	070 JumpIfEqual {95}
	071 Move X10, 0x430000
	072 Move X8, [X20]
	073 Move X10, [X10+2744]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X10]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 1
	085 Move X0, X20
	086 Call 0x1C5D788
	087 Move W9, [X10]
	088 Add W9, W9, 1
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X20
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Compare X19, 0
	096 JumpIfEqual {131}
	097 Move X0, X19
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X1, X31
	103 Move X30, [X31+48]
	104 Move X23, [X31+56]
	105 Call EventBase.StopPropagation, X0
	106 Return 
	107 Move X0, X20
	108 Move W1, W21
	109 Call Clickable.ContainsPointer, X0, X1
	110 Move TEMP, X0
	111 And TEMP, TEMP, 1
	112 Compare TEMP, 1
	113 JumpIfNotEqual {95}
	114 Move X0, X20
	115 Move X1, X31
	116 Call Manipulator.get_target, X0
	117 Compare X0, 0
	118 JumpIfEqual {131}
	119 Move X1, X31
	120 Call VisualElement.get_enabledInHierarchy, X0
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {128}
	125 Move W8, [X20+96]
	126 Compare W8, 0
	127 JumpIfEqual {95}
	128 Move X0, X20
	129 Move X1, X19
	130 Call Clickable.Invoke, X0, X1
	131 Call 0x1C17F20

Method: System.Void ProcessCancelEvent(UnityEngine.UIElements.EventBase evt, System.Int32 pointerId)

Disassembly:
	0x03CEFBA8 LDR X10, [X10 + 0x2F0]
	0x03CEFBAC ADRP X26, 0x42E000
	0x03CEFBB0 MOV X20, X0
	0x03CEFBB4 LDRH W9, [X8 + 0x12E]
	0x03CEFBB8 LDR X1, [X10]
	0x03CEFBBC LDR X26, [X26 + 0x8E0]
	0x03CEFBC0 CBZ X9, 0x3CEFBE4
	0x03CEFBC4 LDR X10, [X8 + 0xB0]
	0x03CEFBC8 ADD X10, X10, 0x8
	0x03CEFBCC LDUR X11, [X10 - 0x8]
	0x03CEFBD0 CMP X11, X1
	0x03CEFBD4 B.EQ 0x3CEFBF4
	0x03CEFBD8 SUBS X9, X9, 0x1
	0x03CEFBDC ADD X10, X10, 0x10
	0x03CEFBE0 B.NE 0x3CEFBCC
	0x03CEFBE4 MOVZ W2, 0x1
	0x03CEFBE8 MOV X0, X20
	0x03CEFBEC BL 0x1C5C788
	0x03CEFBF0 B 0x3CEFC04
	0x03CEFBF4 LDR W9, [X10]
	0x03CEFBF8 ADD W9, W9, 0x1
	0x03CEFBFC ADD X8, X8, W9, 0x4, SXTW
	0x03CEFC00 ADD X0, X8, 0x138
	0x03CEFC04 LDP X8, X1, [X0]
	0x03CEFC08 ADRP X23, 0x42E000
	0x03CEFC0C LDR X23, [X23 + 0x8D8]
	0x03CEFC10 MOV X0, X20
	0x03CEFC14 BLR X8
	0x03CEFC18 LDR X8, [X26]
	0x03CEFC1C MOV W22, W0
	0x03CEFC20 LDR W9, [X8 + 0xE0]
	0x03CEFC24 CBNZ W9, 0x3CEFC30
	0x03CEFC28 MOV X0, X8
	0x03CEFC2C BL 0x1C16DFC
	0x03CEFC30 LDR X0, [X23]
	0x03CEFC34 BL 0x28F9448
	0x03CEFC38 LDR X8, [X19]
	0x03CEFC3C MOV X20, X0
	0x03CEFC40 LDP X9, X1, [X8 + 0x188]
	0x03CEFC44 MOV X0, X19
	0x03CEFC48 BLR X9
	0x03CEFC4C MOV X23, X0
	0x03CEFC50 CBZ X0, 0x3CF0124
	0x03CEFC54 ADRP X28, 0x40B000
	0x03CEFC58 LDR X8, [X23]
	0x03CEFC5C LDR X28, [X28 + 0x2F8]
	0x03CEFC60 LDRH W9, [X8 + 0x12E]
	0x03CEFC64 LDR X1, [X28]
	0x03CEFC68 CBZ X9, 0x3CEFC8C
	0x03CEFC6C LDR X10, [X8 + 0xB0]
	0x03CEFC70 ADD X10, X10, 0x8
	0x03CEFC74 LDUR X11, [X10 - 0x8]
	0x03CEFC78 CMP X11, X1
	0x03CEFC7C B.EQ 0x3CEFC9C
	0x03CEFC80 SUBS X9, X9, 0x1
	0x03CEFC84 ADD X10, X10, 0x10
	0x03CEFC88 B.NE 0x3CEFC74
	0x03CEFC8C MOVZ W2, 0x6
	0x03CEFC90 MOV X0, X23
	0x03CEFC94 BL 0x1C5C788
	0x03CEFC98 B 0x3CEFCAC
	0x03CEFC9C LDR W9, [X10]
	0x03CEFCA0 ADD W9, W9, 0x6
	0x03CEFCA4 ADD X8, X8, W9, 0x4, SXTW
	0x03CEFCA8 ADD X0, X8, 0x138
	0x03CEFCAC LDP X8, X1, [X0]
	0x03CEFCB0 MOV X0, X23
	0x03CEFCB4 BLR X8
	0x03CEFCB8 LDR X9, [X19]
	0x03CEFCBC LDP X8, X1, [X9 + 0x188]
	0x03CEFCC0 TBZ X0, 0x0, 0x3CEFD90
	0x03CEFCC4 MOV X0, X19
	0x03CEFCC8 BLR X8
	0x03CEFCCC CBZ X0, 0x3CEFD04
	0x03CEFCD0 ADRP X9, 0x404000
	0x03CEFCD4 LDR X9, [X9 + 0xEF0]
	0x03CEFCD8 LDR X8, [X0]
	0x03CEFCDC LDR X1, [X9]
	0x03CEFCE0 LDRB W10, [X8 + 0x130]
	0x03CEFCE4 LDRB W9, [X1 + 0x130]
	0x03CEFCE8 CMP W10, W9
	0x03CEFCEC B.CC 0x3CF0128
	0x03CEFCF0 LDR X8, [X8 + 0xC8]
	0x03CEFCF4 ADD X8, X8, X9, 0x3, LSL
	0x03CEFCF8 LDUR X8, [X8 - 0x8]
	0x03CEFCFC CMP X8, X1
	0x03CEFD00 B.NE 0x3CF0128
	0x03CEFD04 MOV W1, W21
	0x03CEFD08 BL 0x3CF0390
	0x03CEFD0C MOV X1, X0
	0x03CEFD10 LDR X8, [X19]
	0x03CEFD14 LDP X9, X2, [X8 + 0x198]
	0x03CEFD18 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6F9000
	008 Move X22, 0x42E000
	009 Move W8, [X23+1887]
	010 Move X22, [X22+3704]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x42E000
	019 Move X0, [X0+3704]
	020 Call 0x1C17CF4
	021 Move X0, 0x430000
	022 Move X0, [X0+2744]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1887], W8
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W8, TEMP
	029 Move X0, X20
	030 Move X1, X31
	031 Move [X20+80], W31
	032 Move [X20+92], W8
	033 Call Manipulator.get_target, X0
	034 Move W1, W21
	035 Move X2, X31
	036 Call PointerCaptureHelper.ReleasePointer, X0, X1
	037 Move X1, [X22]
	038 Move X0, X19
	039 Call 0x1C17E00
	040 Compare X0, 0
	041 JumpIfNotEqual {52}
	042 Move X0, X20
	043 Move X1, X31
	044 Call Manipulator.get_target, X0
	045 Compare X0, 0
	046 JumpIfEqual {107}
	047 Move X1, X31
	048 Call VisualElement.get_panel, X0
	049 Move W1, W21
	050 Move X2, X31
	051 Call PointerCaptureHelper.ProcessPointerCapture, X0, X1
	052 Move X0, X20
	053 Move X1, X31
	054 Call Manipulator.get_target, X0
	055 Compare X0, 0
	056 JumpIfEqual {107}
	057 Move X1, X31
	058 Move X21, X0
	059 Call VisualElement.get_pseudoStates, X0
	060 And W1, W0, 0xFFFFFFFE
	061 Move X0, X21
	062 Move X2, X31
	063 Call VisualElement.set_pseudoStates, X0, X1
	064 Move X8, [X20+64]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, [X20+72]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X20, [X20+104]
	069 Compare X20, 0
	070 JumpIfEqual {95}
	071 Move X10, 0x430000
	072 Move X8, [X20]
	073 Move X10, [X10+2744]
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 Move X1, [X10]
	076 Compare X9, 0
	077 JumpIfEqual {84}
	078 Move X10, [X8+176]
	079 Add X10, X10, 8
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Subtract X9, X9, 1
	083 Add X10, X10, 16
	084 Move W2, 1
	085 Move X0, X20
	086 Call 0x1C5D788
	087 Move W9, [X10]
	088 Add W9, W9, 1
	089 Add X8, X8, W9
	090 Add X0, X8, 312
	091 Move X8, [X0]
	092 Move X1, [X0+8]
	093 Move X0, X20
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Compare X19, 0
	096 JumpIfEqual {107}
	097 Move X0, X19
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X22, [X31+16]
	101 Move X21, [X31+24]
	102 Move X1, X31
	103 Move X30, [X31+48]
	104 Move X23, [X31+56]
	105 Call EventBase.StopPropagation, X0
	106 Return 
	107 Call 0x1C17F20

Method: System.Void <SimulateSingleClick>b__43_0()

Disassembly:
	0x03CEFD1C BLR X9
	0x03CEFD20 CBZ X20, 0x3CF0134
	0x03CEFD24 ADRP X23, 0x405000
	0x03CEFD28 LDR X23, [X23 + 0xE10]
	0x03CEFD2C LDR W10, [X20 + 0x1C]
	0x03CEFD30 LDR X8, [X20 + 0x10]
	0x03CEFD34 LDR X9, [X23]
	0x03CEFD38 ADD W10, W10, 0x1
	0x03CEFD3C STR W10, [X20 + 0x1C]
	0x03CEFD40 CBZ X8, 0x3CF0104
	0x03CEFD44 LDRSW X10, [X20 + 0x18]
	0x03CEFD48 LDR W11, [X8 + 0x18]
	0x03CEFD4C CMP W10, W11

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Call Manipulator.get_target, X0
	005 Compare X0, 0
	006 JumpIfEqual {17}
	007 Move X1, X31
	008 Move X19, X0
	009 Call VisualElement.get_pseudoStates, X0
	010 And W1, W0, 0xFFFFFFFE
	011 Move X0, X19
	012 Move X2, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call VisualElement.set_pseudoStates, X0, X1
	016 Return 
	017 Call 0x1C17F20

