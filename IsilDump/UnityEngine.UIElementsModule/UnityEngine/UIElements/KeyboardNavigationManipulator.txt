Type: UnityEngine.UIElements.KeyboardNavigationManipulator

Method: System.Void .ctor(System.Action`2<UnityEngine.UIElements.KeyboardNavigationOperation, UnityEngine.UIElements.EventBase> action)

Disassembly:
	0x03DBAC3C MOV X1, X31
	0x03DBAC40 BL 0x3DEC0CC
	0x03DBAC44 LDR X8, [X20]
	0x03DBAC48 LDP X20, X19, [X31 + 0x10]
	0x03DBAC4C LDR X8, [X8 + 0xB8]
	0x03DBAC50 LDR W1, [X8 + 0x8]
	0x03DBAC54 LDR X30, [X31], #0x20
	0x03DBAC58 B 0x3DBAC98
	0x03DBAC5C BL 0x1C16F20
	0x03DBAC60 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+24], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void RegisterCallbacksOnTarget()

Disassembly:
	0x03DBAC6C MOV X20, X0
	0x03DBAC70 BL 0x3DBF31C
	0x03DBAC74 CBZ X0, 0x3DBAC8C
	0x03DBAC78 MOV X1, X20
	0x03DBAC7C MOV W2, W19
	0x03DBAC80 LDP X20, X19, [X31 + 0x10]
	0x03DBAC84 LDR X30, [X31], #0x20
	0x03DBAC88 B 0x3DBF46C
	0x03DBAC8C LDP X20, X19, [X31 + 0x10]
	0x03DBAC90 LDR X30, [X31], #0x20
	0x03DBAC94 RET
	0x03DBAC98 STP X30, X21, [X31 - 0x20]!
	0x03DBAC9C STP X20, X19, [X31 + 0x10]
	0x03DBACA0 ADRP X21, 0x62E000
	0x03DBACA4 LDRB W8, [X21 + 0x10E]
	0x03DBACA8 MOV W19, W1
	0x03DBACAC MOV X20, X0
	0x03DBACB0 TBNZ X8, 0x0, 0x3DBACC8
	0x03DBACB4 ADRP X0, 0x362000
	0x03DBACB8 LDR X0, [X0 + 0xE80]
	0x03DBACBC BL 0x1C16CF4
	0x03DBACC0 MOVZ W8, 0x1
	0x03DBACC4 STRB W8, [X21 + 0x10E]
	0x03DBACC8 CBZ X20, 0x3DBAD4C
	0x03DBACCC ADRP X10, 0x362000
	0x03DBACD0 LDR X8, [X20]
	0x03DBACD4 LDR X10, [X10 + 0xE80]
	0x03DBACD8 LDRH W9, [X8 + 0x12E]
	0x03DBACDC LDR X1, [X10]
	0x03DBACE0 CBZ X9, 0x3DBAD04
	0x03DBACE4 LDR X10, [X8 + 0xB0]
	0x03DBACE8 ADD X10, X10, 0x8
	0x03DBACEC LDUR X11, [X10 - 0x8]
	0x03DBACF0 CMP X11, X1
	0x03DBACF4 B.EQ 0x3DBAD14
	0x03DBACF8 SUBS X9, X9, 0x1
	0x03DBACFC ADD X10, X10, 0x10
	0x03DBAD00 B.NE 0x3DBACEC
	0x03DBAD04 MOVZ W2, 0x1
	0x03DBAD08 MOV X0, X20
	0x03DBAD0C BL 0x1C5C788
	0x03DBAD10 B 0x3DBAD24
	0x03DBAD14 LDR W9, [X10]
	0x03DBAD18 ADD W9, W9, 0x1
	0x03DBAD1C ADD X8, X8, W9, 0x4, SXTW
	0x03DBAD20 ADD X0, X8, 0x138
	0x03DBAD24 LDP X8, X1, [X0]
	0x03DBAD28 MOV X0, X20
	0x03DBAD2C BLR X8
	0x03DBAD30 CBZ X0, 0x3DBAD4C
	0x03DBAD34 LDR X0, [X0 + 0x28]
	0x03DBAD38 CBZ X0, 0x3DBAD58
	0x03DBAD3C MOV W1, W19
	0x03DBAD40 LDP X20, X19, [X31 + 0x10]
	0x03DBAD44 LDP X30, X21, [X31], #0x20
	0x03DBAD48 B 0x3DBFBD4
	0x03DBAD4C LDP X20, X19, [X31 + 0x10]
	0x03DBAD50 LDP X30, X21, [X31], #0x20
	0x03DBAD54 RET
	0x03DBAD58 BL 0x1C16F20
	0x03DBAD5C STR X30, [X31 - 0x20]!
	0x03DBAD60 STP X20, X19, [X31 + 0x10]
	0x03DBAD64 ADRP X20, 0x62E000
	0x03DBAD68 LDRB W8, [X20 + 0x72]
	0x03DBAD6C MOV X19, X0
	0x03DBAD70 TBNZ X8, 0x0, 0x3DBAD94
	0x03DBAD74 ADRP X0, 0x362000
	0x03DBAD78 LDR X0, [X0 + 0xE50]
	0x03DBAD7C BL 0x1C16CF4
	0x03DBAD80 ADRP X0, 0x361000
	0x03DBAD84 LDR X0, [X0 + 0x898]
	0x03DBAD88 BL 0x1C16CF4
	0x03DBAD8C MOVZ W8, 0x1
	0x03DBAD90 STRB W8, [X20 + 0x72]
	0x03DBAD94 CBZ X19, 0x3DBADD0
	0x03DBAD98 ADRP X8, 0x361000
	0x03DBAD9C LDR X8, [X8 + 0x898]
	0x03DBADA0 LDR X9, [X19]
	0x03DBADA4 LDR X8, [X8]
	0x03DBADA8 LDRB W11, [X9 + 0x130]
	0x03DBADAC LDRB W10, [X8 + 0x130]
	0x03DBADB0 CMP W11, W10
	0x03DBADB4 B.CC 0x3DBADD0
	0x03DBADB8 LDR X9, [X9 + 0xC8]
	0x03DBADBC ADD X9, X9, X10, 0x3, LSL
	0x03DBADC0 LDUR X9, [X9 - 0x8]
	0x03DBADC4 CMP X9, X8
	0x03DBADC8 CSEL X19, X19, X31, EQ
	0x03DBADCC B.EQ 0x3DBADDC
	0x03DBADD0 LDP X20, X19, [X31 + 0x10]
	0x03DBADD4 LDR X30, [X31], #0x20
	0x03DBADD8 RET
	0x03DBADDC ADRP X20, 0x362000
	0x03DBADE0 LDR X20, [X20 + 0xE50]
	0x03DBADE4 LDR X0, [X20]
	0x03DBADE8 LDR W8, [X0 + 0xE0]
	0x03DBADEC CBNZ W8, 0x3DBADF8
	0x03DBADF0 BL 0x1C16DFC
	0x03DBADF4 LDR X0, [X20]
	0x03DBADF8 LDR X8, [X0 + 0xB8]
	0x03DBADFC MOV X0, X19
	0x03DBAE00 LDR W1, [X8 + 0x8]
	0x03DBAE04 BL 0x3DBAE34
	0x03DBAE08 CBZ X19, 0x3DBAE30
	0x03DBAE0C MOV X0, X19
	0x03DBAE10 MOV X1, X31
	0x03DBAE14 BL 0x3DEC0CC
	0x03DBAE18 LDR X8, [X20]
	0x03DBAE1C LDP X20, X19, [X31 + 0x10]
	0x03DBAE20 LDR X8, [X8 + 0xB8]
	0x03DBAE24 LDR W1, [X8 + 0x8]
	0x03DBAE28 LDR X30, [X31], #0x20
	0x03DBAE2C B 0x3DBAC98
	0x03DBAE30 BL 0x1C16F20
	0x03DBAE34 STR X30, [X31 - 0x20]!
	0x03DBAE38 STP X20, X19, [X31 + 0x10]
	0x03DBAE3C MOV W19, W1
	0x03DBAE40 MOV X20, X0
	0x03DBAE44 BL 0x3DBF31C
	0x03DBAE48 CBZ X0, 0x3DBAE60
	0x03DBAE4C MOV X1, X20
	0x03DBAE50 MOV W2, W19
	0x03DBAE54 LDP X20, X19, [X31 + 0x10]
	0x03DBAE58 LDR X30, [X31], #0x20
	0x03DBAE5C B 0x3DBF598
	0x03DBAE60 LDP X20, X19, [X31 + 0x10]
	0x03DBAE64 LDR X30, [X31], #0x20
	0x03DBAE68 RET
	0x03DBAE6C LDR X0, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x62F000
	008 Move X22, 0x365000
	009 Move X21, 0x3AF000
	010 Move W8, [X20+104]
	011 Move X22, [X22+264]
	012 Move X21, [X21+3832]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {56}
	018 Move X0, 0x365000
	019 Move X0, [X0+240]
	020 Call 0x1C17CF4
	021 Move X0, 0x3AF000
	022 Move X0, [X0+3840]
	023 Call 0x1C17CF4
	024 Move X0, 0x365000
	025 Move X0, [X0+248]
	026 Call 0x1C17CF4
	027 Move X0, 0x365000
	028 Move X0, [X0+144]
	029 Call 0x1C17CF4
	030 Move X0, 0x3AF000
	031 Move X0, [X0+3848]
	032 Call 0x1C17CF4
	033 Move X0, 0x365000
	034 Move X0, [X0+168]
	035 Call 0x1C17CF4
	036 Move X0, 0x365000
	037 Move X0, [X0+256]
	038 Call 0x1C17CF4
	039 Move X0, 0x365000
	040 Move X0, [X0+264]
	041 Call 0x1C17CF4
	042 Move X0, 0x3AF000
	043 Move X0, [X0+3856]
	044 Call 0x1C17CF4
	045 Move X0, 0x3AF000
	046 Move X0, [X0+3864]
	047 Call 0x1C17CF4
	048 Move X0, 0x3AF000
	049 Move X0, [X0+3832]
	050 Call 0x1C17CF4
	051 Move X0, 0x3AF000
	052 Move X0, [X0+3872]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+104], W8
	056 Move X0, [X22]
	057 Move X20, [X19+16]
	058 Call 0x1C17F10
	059 Move X2, [X21]
	060 Move X1, X19
	061 Move X3, X31
	062 Move X21, X0
	063 Call 0x2D0F824, X0, X1, X2
	064 Compare X20, 0
	065 JumpIfEqual {143}
	066 Move X8, 0x365000
	067 Move X8, [X8+248]
	068 Move X22, 0x365000
	069 Move X23, 0x3AF000
	070 Move X0, X20
	071 Move X3, [X8]
	072 Move X22, [X22+168]
	073 Move X23, [X23+3872]
	074 Move X1, X21
	075 Move W2, W31
	076 Call 0x21A2534, X0, X1, X2
	077 Move X0, [X22]
	078 Move X20, [X19+16]
	079 Call 0x1C17F10
	080 Move X2, [X23]
	081 Move X1, X19
	082 Move X3, X31
	083 Move X21, X0
	084 Call 0x2D0F824, X0, X1, X2
	085 Compare X20, 0
	086 JumpIfEqual {143}
	087 Move X8, 0x365000
	088 Move X8, [X8+144]
	089 Move X22, 0x3AF000
	090 Move X23, 0x3AF000
	091 Move X0, X20
	092 Move X3, [X8]
	093 Move X22, [X22+3848]
	094 Move X23, [X23+3864]
	095 Move X1, X21
	096 Move W2, W31
	097 Call 0x21A2534, X0, X1, X2
	098 Move X0, [X22]
	099 Move X20, [X19+16]
	100 Call 0x1C17F10
	101 Move X2, [X23]
	102 Move X1, X19
	103 Move X3, X31
	104 Move X21, X0
	105 Call 0x2D0F824, X0, X1, X2
	106 Compare X20, 0
	107 JumpIfEqual {143}
	108 Move X8, 0x3AF000
	109 Move X8, [X8+3840]
	110 Move X22, 0x365000
	111 Move X23, 0x3AF000
	112 Move X0, X20
	113 Move X3, [X8]
	114 Move X22, [X22+256]
	115 Move X23, [X23+3856]
	116 Move X1, X21
	117 Move W2, W31
	118 Call 0x21A2534, X0, X1, X2
	119 Move X0, [X22]
	120 Move X20, [X19+16]
	121 Call 0x1C17F10
	122 Move X2, [X23]
	123 Move X1, X19
	124 Move X3, X31
	125 Move X21, X0
	126 Call 0x2D0F824, X0, X1, X2
	127 Compare X20, 0
	128 JumpIfEqual {143}
	129 Move X8, 0x365000
	130 Move X8, [X8+240]
	131 Move X0, X20
	132 Move X1, X21
	133 Move X20, [X31+32]
	134 Move X19, [X31+40]
	135 Move X3, [X8]
	136 Move X22, [X31+16]
	137 Move X21, [X31+24]
	138 Move W2, W31
	139 Move X30, [X31+48]
	140 Move X23, [X31+56]
	141 Call 0x21A2534, X0, X1, X2
	142 Return 
	143 Call 0x1C17F20

Method: System.Void UnregisterCallbacksFromTarget()

Disassembly:
	0x03DBAE78 RET
	0x03DBAE7C STR X30, [X31 - 0x30]!
	0x03DBAE80 STP X22, X21, [X31 + 0x10]
	0x03DBAE84 STP X20, X19, [X31 + 0x20]
	0x03DBAE88 ADRP X22, 0x62E000
	0x03DBAE8C ADRP X21, 0x3AE000
	0x03DBAE90 ADRP X20, 0x3AE000
	0x03DBAE94 LDRB W8, [X22 + 0x73]
	0x03DBAE98 LDR X21, [X21 + 0xF38]
	0x03DBAE9C LDR X20, [X20 + 0xF40]
	0x03DBAEA0 MOV X19, X0
	0x03DBAEA4 TBNZ X8, 0x0, 0x3DBAEC8
	0x03DBAEA8 ADRP X0, 0x3AE000
	0x03DBAEAC LDR X0, [X0 + 0xF40]
	0x03DBAEB0 BL 0x1C16CF4
	0x03DBAEB4 ADRP X0, 0x3AE000
	0x03DBAEB8 LDR X0, [X0 + 0xF38]
	0x03DBAEBC BL 0x1C16CF4
	0x03DBAEC0 MOVZ W8, 0x1
	0x03DBAEC4 STRB W8, [X22 + 0x73]
	0x03DBAEC8 MOV X0, X19
	0x03DBAECC MOV X1, X31
	0x03DBAED0 BL 0x33BDD8C
	0x03DBAED4 LDR X0, [X21]
	0x03DBAED8 BL 0x1C16F10
	0x03DBAEDC LDR X1, [X20]
	0x03DBAEE0 MOV X20, X0
	0x03DBAEE4 BL 0x2FF4F90
	0x03DBAEE8 STR X20, [X19 + 0x18]
	0x03DBAEEC LDP X20, X19, [X31 + 0x20]
	0x03DBAEF0 LDP X22, X21, [X31 + 0x10]
	0x03DBAEF4 LDR X30, [X31], #0x30
	0x03DBAEF8 RET
	0x03DBAEFC SUB X31, X31, 0x80
	0x03DBAF00 STP X30, X23, [X31 + 0x50]
	0x03DBAF04 STP X22, X21, [X31 + 0x60]
	0x03DBAF08 STP X20, X19, [X31 + 0x70]
	0x03DBAF0C ADRP X21, 0x62E000
	0x03DBAF10 LDRB W8, [X21 + 0x74]
	0x03DBAF14 MOV X20, X1
	0x03DBAF18 MOV X19, X0
	0x03DBAF1C TBNZ X8, 0x0, 0x3DBAF58
	0x03DBAF20 ADRP X0, 0x3AE000
	0x03DBAF24 LDR X0, [X0 + 0xF48]
	0x03DBAF28 BL 0x1C16CF4
	0x03DBAF2C ADRP X0, 0x3AE000
	0x03DBAF30 LDR X0, [X0 + 0xF50]
	0x03DBAF34 BL 0x1C16CF4
	0x03DBAF38 ADRP X0, 0x3AE000
	0x03DBAF3C LDR X0, [X0 + 0xF58]
	0x03DBAF40 BL 0x1C16CF4
	0x03DBAF44 ADRP X0, 0x3AE000
	0x03DBAF48 LDR X0, [X0 + 0xF60]
	0x03DBAF4C BL 0x1C16CF4
	0x03DBAF50 MOVZ W8, 0x1
	0x03DBAF54 STRB W8, [X21 + 0x74]
	0x03DBAF58 MOVI V0.2D, 0x0
	0x03DBAF5C STP V0, V0, [X31 + 0x30]
	0x03DBAF60 LDR X0, [X19 + 0x18]
	0x03DBAF64 CBZ X0, 0x3DBAFFC
	0x03DBAF68 ADRP X8, 0x3AE000
	0x03DBAF6C LDR X8, [X8 + 0xF60]
	0x03DBAF70 ADRP X23, 0x3AE000
	0x03DBAF74 ADRP X22, 0x3AE000
	0x03DBAF78 LDR X1, [X8]
	0x03DBAF7C LDR X23, [X23 + 0xF50]
	0x03DBAF80 LDR X22, [X22 + 0xF48]
	0x03DBAF84 ADD X8, X31, 0x0
	0x03DBAF88 BL 0x2FF642C
	0x03DBAF8C LDP V0, V1, [X31]
	0x03DBAF90 STP V0, V1, [X31 + 0x30]
	0x03DBAF94 LDR X1, [X23]
	0x03DBAF98 ADD X0, X31, 0x30
	0x03DBAF9C BL 0x2BC0A90
	0x03DBAFA0 MOV W21, W0
	0x03DBAFA4 TBZ X0, 0x0, 0x3DBAFD8
	0x03DBAFA8 LDR X8, [X31 + 0x40]
	0x03DBAFAC LDR W9, [X31 + 0x48]
	0x03DBAFB0 STR X8, [X31 + 0x20]
	0x03DBAFB4 STR W9, [X31 + 0x28]
	0x03DBAFB8 ADD X0, X31, 0x20
	0x03DBAFBC MOV X1, X20
	0x03DBAFC0 BL 0x3DBA420
	0x03DBAFC4 TBZ X0, 0x0, 0x3DBAF94
	0x03DBAFC8 LDR W8, [X31 + 0x28]
	0x03DBAFCC LDR X9, [X31 + 0x20]
	0x03DBAFD0 STR W8, [X19 + 0x28]
	0x03DBAFD4 STR X9, [X19 + 0x20]
	0x03DBAFD8 LDR X1, [X22]
	0x03DBAFDC ADD X0, X31, 0x30
	0x03DBAFE0 BL 0x2BC0A8C
	0x03DBAFE4 AND W0, W21, 0x1
	0x03DBAFE8 LDP X20, X19, [X31 + 0x70]
	0x03DBAFEC LDP X22, X21, [X31 + 0x60]
	0x03DBAFF0 LDP X30, X23, [X31 + 0x50]
	0x03DBAFF4 ADD X31, X31, 0x80
	0x03DBAFF8 RET
	0x03DBAFFC BL 0x1C16F20
	0x03DBB000 B 0x3DBB004
	0x03DBB004 MOV X20, X0
	0x03DBB008 CMP W1, 0x1
	0x03DBB00C B.NE 0x3DBB038
	0x03DBB010 MOV X0, X20
	0x03DBB014 BL 0x3EB1AD0
	0x03DBB018 LDR X19, [X0]
	0x03DBB01C BL 0x3EB1AE0
	0x03DBB020 LDR X1, [X22]
	0x03DBB024 ADD X0, X31, 0x30
	0x03DBB028 BL 0x2BC0A8C
	0x03DBB02C CBNZ X19, 0x3DBB040
	0x03DBB030 MOV W21, W31
	0x03DBB034 B 0x3DBAFE4
	0x03DBB038 MOV X19, X31
	0x03DBB03C B 0x3DBB04C
	0x03DBB040 MOV X0, X19
	0x03DBB044 BL 0x1C16F18
	0x03DBB048 MOV X20, X0
	0x03DBB04C LDR X1, [X22]
	0x03DBB050 ADD X0, X31, 0x30
	0x03DBB054 BL 0x2BC0A8C
	0x03DBB058 CBNZ X19, 0x3DBB064
	0x03DBB05C MOV X0, X20
	0x03DBB060 BL 0x1D2C690
	0x03DBB064 MOV X0, X19
	0x03DBB068 BL 0x1C16F18
	0x03DBB06C BL 0x1990590
	0x03DBB070 STP X30, X21, [X31 - 0x20]!
	0x03DBB074 STP X20, X19, [X31 + 0x10]
	0x03DBB078 ADRP X21, 0x62D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x62F000
	008 Move X22, 0x365000
	009 Move X21, 0x3AF000
	010 Move W8, [X20+105]
	011 Move X22, [X22+264]
	012 Move X21, [X21+3832]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {56}
	018 Move X0, 0x365000
	019 Move X0, [X0+3296]
	020 Call 0x1C17CF4
	021 Move X0, 0x3AF000
	022 Move X0, [X0+3880]
	023 Call 0x1C17CF4
	024 Move X0, 0x365000
	025 Move X0, [X0+360]
	026 Call 0x1C17CF4
	027 Move X0, 0x3AF000
	028 Move X0, [X0+3888]
	029 Call 0x1C17CF4
	030 Move X0, 0x3AF000
	031 Move X0, [X0+3848]
	032 Call 0x1C17CF4
	033 Move X0, 0x365000
	034 Move X0, [X0+168]
	035 Call 0x1C17CF4
	036 Move X0, 0x365000
	037 Move X0, [X0+256]
	038 Call 0x1C17CF4
	039 Move X0, 0x365000
	040 Move X0, [X0+264]
	041 Call 0x1C17CF4
	042 Move X0, 0x3AF000
	043 Move X0, [X0+3856]
	044 Call 0x1C17CF4
	045 Move X0, 0x3AF000
	046 Move X0, [X0+3864]
	047 Call 0x1C17CF4
	048 Move X0, 0x3AF000
	049 Move X0, [X0+3832]
	050 Call 0x1C17CF4
	051 Move X0, 0x3AF000
	052 Move X0, [X0+3872]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+105], W8
	056 Move X0, [X22]
	057 Move X20, [X19+16]
	058 Call 0x1C17F10
	059 Move X2, [X21]
	060 Move X1, X19
	061 Move X3, X31
	062 Move X21, X0
	063 Call 0x2D0F824, X0, X1, X2
	064 Compare X20, 0
	065 JumpIfEqual {143}
	066 Move X8, 0x365000
	067 Move X8, [X8+360]
	068 Move X22, 0x365000
	069 Move X23, 0x3AF000
	070 Move X0, X20
	071 Move X3, [X8]
	072 Move X22, [X22+168]
	073 Move X23, [X23+3872]
	074 Move X1, X21
	075 Move W2, W31
	076 Call 0x21A28B4, X0, X1, X2
	077 Move X0, [X22]
	078 Move X20, [X19+16]
	079 Call 0x1C17F10
	080 Move X2, [X23]
	081 Move X1, X19
	082 Move X3, X31
	083 Move X21, X0
	084 Call 0x2D0F824, X0, X1, X2
	085 Compare X20, 0
	086 JumpIfEqual {143}
	087 Move X8, 0x3AF000
	088 Move X8, [X8+3888]
	089 Move X22, 0x3AF000
	090 Move X23, 0x3AF000
	091 Move X0, X20
	092 Move X3, [X8]
	093 Move X22, [X22+3848]
	094 Move X23, [X23+3864]
	095 Move X1, X21
	096 Move W2, W31
	097 Call 0x21A28B4, X0, X1, X2
	098 Move X0, [X22]
	099 Move X20, [X19+16]
	100 Call 0x1C17F10
	101 Move X2, [X23]
	102 Move X1, X19
	103 Move X3, X31
	104 Move X21, X0
	105 Call 0x2D0F824, X0, X1, X2
	106 Compare X20, 0
	107 JumpIfEqual {143}
	108 Move X8, 0x3AE000
	109 Move X8, [X8+3880]
	110 Move X22, 0x364000
	111 Move X23, 0x3AE000
	112 Move X0, X20
	113 Move X3, [X8]
	114 Move X22, [X22+256]
	115 Move X23, [X23+3856]
	116 Move X1, X21
	117 Move W2, W31
	118 Call 0x21A28B4, X0, X1, X2
	119 Move X0, [X22]
	120 Move X20, [X19+16]
	121 Call 0x1C17F10
	122 Move X2, [X23]
	123 Move X1, X19
	124 Move X3, X31
	125 Move X21, X0
	126 Call 0x2D0F824, X0, X1, X2
	127 Compare X20, 0
	128 JumpIfEqual {143}
	129 Move X8, 0x364000
	130 Move X8, [X8+3296]
	131 Move X0, X20
	132 Move X1, X21
	133 Move X20, [X31+32]
	134 Move X19, [X31+40]
	135 Move X3, [X8]
	136 Move X22, [X31+16]
	137 Move X21, [X31+24]
	138 Move W2, W31
	139 Move X30, [X31+48]
	140 Move X23, [X31+56]
	141 Call 0x21A28B4, X0, X1, X2
	142 Return 
	143 Call 0x1C17F20

Method: System.Void OnKeyDown(UnityEngine.UIElements.KeyDownEvent evt)

Disassembly:
	0x03DBB07C LDRB W8, [X21 + 0x75]
	0x03DBB080 MOV X20, X1
	0x03DBB084 MOV X19, X0
	0x03DBB088 TBNZ X8, 0x0, 0x3DBB0A0
	0x03DBB08C ADRP X0, 0x363000
	0x03DBB090 LDR X0, [X0 + 0xD30]
	0x03DBB094 BL 0x1C16CF4
	0x03DBB098 MOVZ W8, 0x1
	0x03DBB09C STRB W8, [X21 + 0x75]
	0x03DBB0A0 CBZ X20, 0x3DBB0EC
	0x03DBB0A4 ADRP X10, 0x363000
	0x03DBB0A8 LDR X8, [X20]
	0x03DBB0AC LDR X10, [X10 + 0xD30]
	0x03DBB0B0 LDRH W9, [X8 + 0x12E]
	0x03DBB0B4 LDR X1, [X10]
	0x03DBB0B8 CBZ X9, 0x3DBB0DC
	0x03DBB0BC LDR X10, [X8 + 0xB0]
	0x03DBB0C0 ADD X10, X10, 0x8
	0x03DBB0C4 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Add X0, X31, 8
	006 Move X19, X1
	007 Move [X31+8], X1
	008 Call KeyboardNavigationManipulator.<OnKeyDown>g__GetOperation|4_0, X0
	009 Compare W0, 0
	010 JumpIfEqual {20}
	011 Move X8, [X20+24]
	012 Compare X8, 0
	013 JumpIfEqual {20}
	014 Move W1, W0
	015 Move X9, [X8+24]
	016 Move X0, [X8+64]
	017 Move X3, [X8+40]
	018 Move X2, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return 

Method: System.Void OnNavigationCancel(UnityEngine.UIElements.NavigationCancelEvent evt)

Disassembly:
	0x03DBB1AC LDR X1, [X20 + 0x88]
	0x03DBB1B0 MOV X19, X0
	0x03DBB1B4 CBNZ X1, 0x3DBB1CC
	0x03DBB1B8 ADRP X0, 0xFFFFFFFFFCD52000
	0x03DBB1BC ADD X0, X0, 0xE2A
	0x03DBB1C0 BL 0x1C16CB8
	0x03DBB1C4 MOV X1, X0
	0x03DBB1C8 STR X0, [X20 + 0x88]
	0x03DBB1CC MOV X0, X19

ISIL:
	001 Move X8, [X0+24]
	002 Compare X8, 0
	003 JumpIfEqual {10}
	004 Move X4, [X8+24]
	005 Move X0, [X8+64]
	006 Move X3, [X8+40]
	007 Move X2, X1
	008 Move W1, 2
	009 CallNoReturn X4
	010 Return 

Method: System.Void OnNavigationSubmit(UnityEngine.UIElements.NavigationSubmitEvent evt)

Disassembly:
	0x03DBB1D0 LDP X20, X19, [X31 + 0x10]
	0x03DBB1D4 LDR X30, [X31], #0x20
	0x03DBB1D8 BR X1
	0x03DBB1DC SUB X31, X31, 0x50
	0x03DBB1E0 STR D8, [X31 + 0x20]
	0x03DBB1E4 STP X30, X21, [X31 + 0x30]
	0x03DBB1E8 STP X20, X19, [X31 + 0x40]
	0x03DBB1EC ADRP X21, 0x62D000
	0x03DBB1F0 MOV X19, X8

ISIL:
	001 Move X8, [X0+24]
	002 Compare X8, 0
	003 JumpIfEqual {10}
	004 Move X4, [X8+24]
	005 Move X0, [X8+64]
	006 Move X3, [X8+40]
	007 Move X2, X1
	008 Move W1, 3
	009 CallNoReturn X4
	010 Return 

Method: System.Void OnNavigationMove(UnityEngine.UIElements.NavigationMoveEvent evt)

Disassembly:
	0x03DBB1F4 LDR X8, [X21 + 0x90]
	0x03DBB1F8 MOV V8.16B, V0.16B
	0x03DBB1FC MOV X20, X0
	0x03DBB200 STP X31, X31, [X31 + 0x8]
	0x03DBB204 STR X31, [X31 + 0x18]
	0x03DBB208 CBNZ X8, 0x3DBB220
	0x03DBB20C ADRP X0, 0xFFFFFFFFFCD48000
	0x03DBB210 ADD X0, X0, 0xD86
	0x03DBB214 BL 0x1C16CB8
	0x03DBB218 MOV X8, X0
	0x03DBB21C STR X0, [X21 + 0x90]
	0x03DBB220 ADD X1, X31, 0x8
	0x03DBB224 MOV X0, X20
	0x03DBB228 MOV V0.16B, V8.16B
	0x03DBB22C BLR X8
	0x03DBB230 LDR X8, [X31 + 0x18]
	0x03DBB234 LDUR V0, [X31 + 0x8]
	0x03DBB238 LDP X30, X21, [X31 + 0x30]
	0x03DBB23C LDR V8, [X31 + 0x20]
	0x03DBB240 STR X8, [X19 + 0x10]
	0x03DBB244 STR V0, [X19]
	0x03DBB248 LDP X20, X19, [X31 + 0x40]
	0x03DBB24C ADD X31, X31, 0x50
	0x03DBB250 RET
	0x03DBB254 STR D8, [X31 - 0x30]!
	0x03DBB258 STP X30, X21, [X31 + 0x10]
	0x03DBB25C STP X20, X19, [X31 + 0x20]
	0x03DBB260 ADRP X21, 0x62D000
	0x03DBB264 LDR X2, [X21 + 0x90]
	0x03DBB268 MOV X19, X1
	0x03DBB26C MOV V8.16B, V0.16B
	0x03DBB270 MOV X20, X0
	0x03DBB274 CBNZ X2, 0x3DBB28C
	0x03DBB278 ADRP X0, 0xFFFFFFFFFCD48000
	0x03DBB27C ADD X0, X0, 0xD86
	0x03DBB280 BL 0x1C16CB8
	0x03DBB284 MOV X2, X0
	0x03DBB288 STR X0, [X21 + 0x90]
	0x03DBB28C MOV X0, X20
	0x03DBB290 MOV X1, X19
	0x03DBB294 LDP X20, X19, [X31 + 0x20]
	0x03DBB298 LDP X30, X21, [X31 + 0x10]
	0x03DBB29C MOV V0.16B, V8.16B
	0x03DBB2A0 LDR V8, [X31], #0x30
	0x03DBB2A4 BR X2

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {46}
	004 Move W8, [X1+140]
	005 Move X2, X1
	006 Subtract W8, W8, 1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X9, -52568064
	009 Add X9, X9, 101
	010 NotImplemented "Instruction ADR not yet implemented."
	011 Move W11, [X9]
	012 Add X10, X10, X11
	013 CallNoReturn X10
	014 Move X8, [X0+24]
	015 Compare X8, 0
	016 JumpIfEqual {44}
	017 Move X4, [X8+24]
	018 Move X0, [X8+64]
	019 Move X3, [X8+40]
	020 Move W1, 7
	021 Move X8, [X0+24]
	022 Compare X8, 0
	023 JumpIfEqual {44}
	024 Move X4, [X8+24]
	025 Move X0, [X8+64]
	026 Move X3, [X8+40]
	027 Move W1, 4
	028 Move X8, [X0+24]
	029 Compare X8, 0
	030 JumpIfEqual {44}
	031 Move X4, [X8+24]
	032 Move X0, [X8+64]
	033 Move X3, [X8+40]
	034 Move W1, 6
	035 Move X8, [X0+24]
	036 Compare X8, 0
	037 JumpIfEqual {44}
	038 Move X4, [X8+24]
	039 Move X0, [X8+64]
	040 Move X3, [X8+40]
	041 Move W1, 5
	042 Move X30, [X31+16]
	043 CallNoReturn X4
	044 Move X30, [X31+16]
	045 Return 
	046 Call 0x1C17F20

Method: System.Void Invoke(UnityEngine.UIElements.KeyboardNavigationOperation operation, UnityEngine.UIElements.EventBase evt)

Disassembly:
	0x03DBB190 MOV X0, X19
	0x03DBB194 LDP X20, X19, [X31 + 0x10]
	0x03DBB198 LDR X30, [X31], #0x20
	0x03DBB19C BR X1
	0x03DBB1A0 STR X30, [X31 - 0x20]!
	0x03DBB1A4 STP X20, X19, [X31 + 0x10]
	0x03DBB1A8 ADRP X20, 0x62D000

ISIL:
	001 Move X8, [X0+24]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X4, [X8+24]
	005 Move X0, [X8+64]
	006 Move X3, [X8+40]
	007 CallNoReturn X4
	008 Return 

Method: UnityEngine.UIElements.KeyboardNavigationOperation <OnKeyDown>g__GetOperation|4_0(ref UnityEngine.UIElements.KeyboardNavigationManipulator/<>c__DisplayClass4_0 param_0)

Disassembly:
	0x03DBB0C8 CMP X11, X1
	0x03DBB0CC B.EQ 0x3DBB0F4
	0x03DBB0D0 SUBS X9, X9, 0x1
	0x03DBB0D4 ADD X10, X10, 0x10
	0x03DBB0D8 B.NE 0x3DBB0C4
	0x03DBB0DC MOVZ W2, 0x5
	0x03DBB0E0 MOV X0, X20
	0x03DBB0E4 BL 0x1C5C788
	0x03DBB0E8 B 0x3DBB104
	0x03DBB0EC MOV W0, W31
	0x03DBB0F0 B 0x3DBB11C
	0x03DBB0F4 LDR W9, [X10]
	0x03DBB0F8 ADD W9, W9, 0x5
	0x03DBB0FC ADD X8, X8, W9, 0x4, SXTW
	0x03DBB100 ADD X0, X8, 0x138
	0x03DBB104 LDP X8, X1, [X0]
	0x03DBB108 MOV X0, X20
	0x03DBB10C BLR X8
	0x03DBB110 LDR W8, [X19 + 0x20]
	0x03DBB114 CMP W0, W8
	0x03DBB118 CSET W0, EQ
	0x03DBB11C LDP X20, X19, [X31 + 0x10]
	0x03DBB120 LDP X30, X21, [X31], #0x20
	0x03DBB124 RET
	0x03DBB128 STR X30, [X31 - 0x20]!
	0x03DBB12C STP X20, X19, [X31 + 0x10]
	0x03DBB130 ADRP X20, 0x62D000
	0x03DBB134 LDR X1, [X20 + 0x78]
	0x03DBB138 MOV W19, W0
	0x03DBB13C CBNZ X1, 0x3DBB154
	0x03DBB140 ADRP X0, 0xFFFFFFFFFCD6C000
	0x03DBB144 ADD X0, X0, 0x637
	0x03DBB148 BL 0x1C16CB8
	0x03DBB14C MOV X1, X0
	0x03DBB150 STR X0, [X20 + 0x78]
	0x03DBB154 AND W0, W19, 0x1
	0x03DBB158 LDP X20, X19, [X31 + 0x10]
	0x03DBB15C LDR X30, [X31], #0x20
	0x03DBB160 BR X1
	0x03DBB164 STR X30, [X31 - 0x20]!
	0x03DBB168 STP X20, X19, [X31 + 0x10]
	0x03DBB16C ADRP X20, 0x62D000
	0x03DBB170 LDR X1, [X20 + 0x80]
	0x03DBB174 MOV X19, X0
	0x03DBB178 CBNZ X1, 0x3DBB190
	0x03DBB17C ADRP X0, 0xFFFFFFFFFCD54000
	0x03DBB180 ADD X0, X0, 0xE33
	0x03DBB184 BL 0x1C16CB8
	0x03DBB188 MOV X1, X0
	0x03DBB18C STR X0, [X20 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x62E000
	005 Move W8, [X20+106]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x3AC000
	012 Move X0, [X0+2464]
	013 Call 0x1C17CF4
	014 Move X0, 0x364000
	015 Move X0, [X0+304]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+106], W8
	019 Move X0, [X19]
	020 Compare X0, 0
	021 JumpIfEqual {53}
	022 Move W9, [X0+140]
	023 Subtract W8, W9, 273
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X9, -52568064
	026 Add X9, X9, 92
	027 NotImplemented "Instruction ADR not yet implemented."
	028 Move W11, [X9]
	029 Add X10, X10, X11
	030 Move W8, 11
	031 CallNoReturn X10
	032 Move X1, X31
	033 Call EventBase.StopPropagation, X0
	034 Move W8, W31
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move W0, W8
	038 Move X30, [X31+32]
	039 Return X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, 0x3AC000
	042 Move X8, [X8+2464]
	043 Move X1, [X8]
	044 Call 0x2EE7C54, X0
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {34}
	049 Move W8, 1
	050 Move W8, 10
	051 Move W8, 8
	052 Move W8, 9
	053 Call 0x1C17F20

