Type: UnityEngine.UIElements.BoundsField

Method: System.Void .ctor()

Disassembly:
	0x03D059CC LDR X0, [X26]
	0x03D059D0 LDR X20, [X19 + 0x458]

ISIL:
	001 Move X1, X31

Method: System.Void .ctor(System.String label)

Disassembly:
	0x03D059D4 BL 0x1C16F10
	0x03D059D8 LDR X2, [X21]
	0x03D059DC MOV X1, X19
	0x03D059E0 MOV X3, X31
	0x03D059E4 MOV X21, X0
	0x03D059E8 BL 0x2D0E824
	0x03D059EC LDR X2, [X24]
	0x03D059F0 MOV X0, X20
	0x03D059F4 MOV X1, X21
	0x03D059F8 BL 0x21EF46C
	0x03D059FC LDR X1, [X22]
	0x03D05A00 MOV X0, X19
	0x03D05A04 BL 0x2777B80
	0x03D05A08 CBZ X0, 0x3D05A3C
	0x03D05A0C LDR X8, [X0 + 0x378]
	0x03D05A10 ADD X0, X31, 0x8
	0x03D05A14 MOV X2, X31
	0x03D05A18 STR X8, [X31 + 0x8]
	0x03D05A1C LDR X1, [X19 + 0x458]
	0x03D05A20 BL 0x3DF891C
	0x03D05A24 LDP X20, X19, [X31 + 0x40]
	0x03D05A28 LDP X22, X21, [X31 + 0x30]
	0x03D05A2C LDP X24, X23, [X31 + 0x20]
	0x03D05A30 LDP X26, X25, [X31 + 0x10]
	0x03D05A34 LDR X30, [X31], #0x50
	0x03D05A38 RET
	0x03D05A3C BL 0x1C16F20
	0x03D05A40 STR X30, [X31 - 0x30]!
	0x03D05A44 STP X22, X21, [X31 + 0x10]
	0x03D05A48 STP X20, X19, [X31 + 0x20]
	0x03D05A4C ADRP X22, 0x6E2000
	0x03D05A50 ADRP X21, 0x45E000
	0x03D05A54 LDRB W8, [X22 + 0x86E]
	0x03D05A58 LDR X21, [X21 + 0x308]
	0x03D05A5C MOV X20, X1
	0x03D05A60 MOV X19, X0
	0x03D05A64 TBNZ X8, 0x0, 0x3D05AAC
	0x03D05A68 ADRP X0, 0x45E000
	0x03D05A6C LDR X0, [X0 + 0x310]
	0x03D05A70 BL 0x1C16CF4
	0x03D05A74 ADRP X0, 0x45E000
	0x03D05A78 LDR X0, [X0 + 0x308]
	0x03D05A7C BL 0x1C16CF4
	0x03D05A80 ADRP X0, 0x45E000
	0x03D05A84 LDR X0, [X0 + 0x318]
	0x03D05A88 BL 0x1C16CF4
	0x03D05A8C ADRP X0, 0x45E000
	0x03D05A90 LDR X0, [X0 + 0x320]
	0x03D05A94 BL 0x1C16CF4
	0x03D05A98 ADRP X0, 0x45E000
	0x03D05A9C LDR X0, [X0 + 0x2F0]
	0x03D05AA0 BL 0x1C16CF4
	0x03D05AA4 MOVZ W8, 0x1
	0x03D05AA8 STRB W8, [X22 + 0x86E]
	0x03D05AAC LDR X0, [X21]
	0x03D05AB0 ADRP X22, 0x45E000
	0x03D05AB4 ADRP X21, 0x45E000
	0x03D05AB8 LDR W8, [X0 + 0xE0]
	0x03D05ABC LDR X22, [X22 + 0x310]
	0x03D05AC0 LDR X21, [X21 + 0x2F0]
	0x03D05AC4 CBNZ W8, 0x3D05ACC
	0x03D05AC8 BL 0x1C16DFC
	0x03D05ACC LDR X3, [X22]
	0x03D05AD0 MOVZ W2, 0x3
	0x03D05AD4 MOV X0, X19
	0x03D05AD8 MOV X1, X20
	0x03D05ADC BL 0x276E074
	0x03D05AE0 LDR X0, [X21]
	0x03D05AE4 LDR W8, [X0 + 0xE0]
	0x03D05AE8 CBNZ W8, 0x3D05AF4
	0x03D05AEC BL 0x1C16DFC
	0x03D05AF0 LDR X0, [X21]
	0x03D05AF4 LDR X8, [X0 + 0xB8]
	0x03D05AF8 MOV X0, X19
	0x03D05AFC MOV X2, X31
	0x03D05B00 LDR X1, [X8]
	0x03D05B04 BL 0x3DF1C70
	0x03D05B08 LDR X0, [X19 + 0x408]
	0x03D05B0C CBZ X0, 0x3D05B5C
	0x03D05B10 LDR X8, [X21]
	0x03D05B14 ADRP X20, 0x45E000
	0x03D05B18 MOV X2, X31
	0x03D05B1C LDR X8, [X8 + 0xB8]
	0x03D05B20 LDR X1, [X8 + 0x8]
	0x03D05B24 LDR X20, [X20 + 0x320]
	0x03D05B28 BL 0x3DF1C70
	0x03D05B2C LDR X1, [X20]
	0x03D05B30 MOV X0, X19
	0x03D05B34 BL 0x28AF274
	0x03D05B38 CBZ X0, 0x3D05B5C
	0x03D05B3C LDR X8, [X21]
	0x03D05B40 LDP X20, X19, [X31 + 0x20]
	0x03D05B44 LDP X22, X21, [X31 + 0x10]
	0x03D05B48 MOV X2, X31
	0x03D05B4C LDR X8, [X8 + 0xB8]
	0x03D05B50 LDR X1, [X8 + 0x10]
	0x03D05B54 LDR X30, [X31], #0x30
	0x03D05B58 B 0x3DF1C70
	0x03D05B5C BL 0x1C16F20
	0x03D05B60 SUB X31, X31, 0x70
	0x03D05B64 STP X30, X23, [X31 + 0x40]
	0x03D05B68 STP X22, X21, [X31 + 0x50]
	0x03D05B6C STP X20, X19, [X31 + 0x60]
	0x03D05B70 ADRP X23, 0x6E2000
	0x03D05B74 ADRP X22, 0x45E000
	0x03D05B78 ADRP X21, 0x45E000
	0x03D05B7C LDRB W8, [X23 + 0x82E]
	0x03D05B80 LDR X22, [X22 + 0x328]
	0x03D05B84 LDR X21, [X21 + 0x330]
	0x03D05B88 MOV X20, X1
	0x03D05B8C MOV X19, X0
	0x03D05B90 TBNZ X8, 0x0, 0x3D05BB4
	0x03D05B94 ADRP X0, 0x45E000
	0x03D05B98 LDR X0, [X0 + 0x328]
	0x03D05B9C BL 0x1C16CF4
	0x03D05BA0 ADRP X0, 0x45E000
	0x03D05BA4 LDR X0, [X0 + 0x330]
	0x03D05BA8 BL 0x1C16CF4
	0x03D05BAC MOVZ W8, 0x1
	0x03D05BB0 STRB W8, [X23 + 0x82E]
	0x03D05BB4 LDR X8, [X20 + 0x10]
	0x03D05BB8 LDR V0, [X20]
	0x03D05BBC LDR X2, [X22]
	0x03D05BC0 ADD X1, X31, 0x20
	0x03D05BC4 MOV X0, X19
	0x03D05BC8 STR X8, [X31 + 0x10]
	0x03D05BCC STR V0, [X31]
	0x03D05BD0 STR V0, [X31 + 0x2]
	0x03D05BD4 STR X8, [X31 + 0x30]
	0x03D05BD8 BL 0x2779760
	0x03D05BDC LDR X1, [X21]
	0x03D05BE0 LDR X20, [X19 + 0x450]
	0x03D05BE4 ADD X8, X31, 0x20
	0x03D05BE8 MOV X0, X19
	0x03D05BEC BL 0x2777C9C
	0x03D05BF0 CBZ X20, 0x3D05C58
	0x03D05BF4 LDR X8, [X20]
	0x03D05BF8 LDR X1, [X31 + 0x20]
	0x03D05BFC LDR W2, [X31 + 0x28]
	0x03D05C00 MOV X0, X20
	0x03D05C04 LDR X9, [X8 + 0x888]
	0x03D05C08 LDR X3, [X8 + 0x890]
	0x03D05C0C BLR X9
	0x03D05C10 LDR X1, [X21]
	0x03D05C14 LDR X20, [X19 + 0x458]
	0x03D05C18 ADD X8, X31, 0x20
	0x03D05C1C MOV X0, X19
	0x03D05C20 BL 0x2777C9C
	0x03D05C24 CBZ X20, 0x3D05C58
	0x03D05C28 LDR X8, [X20]
	0x03D05C2C LDUR X1, [X31 + 0x2C]
	0x03D05C30 LDR W2, [X31 + 0x34]
	0x03D05C34 MOV X0, X20
	0x03D05C38 LDR X9, [X8 + 0x888]
	0x03D05C3C LDR X3, [X8 + 0x890]
	0x03D05C40 BLR X9
	0x03D05C44 LDP X20, X19, [X31 + 0x60]
	0x03D05C48 LDP X22, X21, [X31 + 0x50]
	0x03D05C4C LDP X30, X23, [X31 + 0x40]
	0x03D05C50 ADD X31, X31, 0x70
	0x03D05C54 RET
	0x03D05C58 BL 0x1C16F20
	0x03D05C5C STR X30, [X31 - 0x20]!
	0x03D05C60 STP X20, X19, [X31 + 0x10]
	0x03D05C64 ADRP X20, 0x6E2000
	0x03D05C68 LDRB W8, [X20 + 0x82F]
	0x03D05C6C MOV X19, X0
	0x03D05C70 TBNZ X8, 0x0, 0x3D05C94
	0x03D05C74 ADRP X0, 0x45E000
	0x03D05C78 LDR X0, [X0 + 0x338]
	0x03D05C7C BL 0x1C16CF4
	0x03D05C80 ADRP X0, 0x45E000
	0x03D05C84 LDR X0, [X0 + 0x340]
	0x03D05C88 BL 0x1C16CF4
	0x03D05C8C MOVZ W8, 0x1
	0x03D05C90 STRB W8, [X20 + 0x82F]
	0x03D05C94 LDR X0, [X19 + 0x450]
	0x03D05C98 CBZ X0, 0x3D05CCC
	0x03D05C9C ADRP X20, 0x45E000
	0x03D05CA0 LDR X20, [X20 + 0x340]
	0x03D05CA4 LDRB W1, [X19 + 0x418]
	0x03D05CA8 LDR X2, [X20]
	0x03D05CAC BL 0x28AF968
	0x03D05CB0 LDR X0, [X19 + 0x458]
	0x03D05CB4 CBZ X0, 0x3D05CCC
	0x03D05CB8 LDRB W1, [X19 + 0x418]
	0x03D05CBC LDR X2, [X20]
	0x03D05CC0 LDP X20, X19, [X31 + 0x10]
	0x03D05CC4 LDR X30, [X31], #0x20
	0x03D05CC8 B 0x28AF968
	0x03D05CCC BL 0x1C16F20
	0x03D05CD0 STP X30, X25, [X31 - 0x40]!
	0x03D05CD4 STP X24, X23, [X31 + 0x10]
	0x03D05CD8 STP X22, X21, [X31 + 0x20]
	0x03D05CDC STP X20, X19, [X31 + 0x30]
	0x03D05CE0 ADRP X25, 0x6E2000
	0x03D05CE4 ADRP X24, 0x45E000
	0x03D05CE8 ADRP X19, 0x45E000
	0x03D05CEC ADRP X23, 0x417000
	0x03D05CF0 ADRP X22, 0x417000
	0x03D05CF4 ADRP X21, 0x45E000
	0x03D05CF8 ADRP X20, 0x45D000
	0x03D05CFC LDR X24, [X24 + 0x348]
	0x03D05D00 LDRB W8, [X25 + 0x830]
	0x03D05D04 LDR X19, [X19 + 0x2D8]
	0x03D05D08 LDR X23, [X23 + 0xEB8]
	0x03D05D0C LDR X22, [X22 + 0xEC0]
	0x03D05D10 LDR X21, [X21 + 0x350]
	0x03D05D14 LDR X20, [X20 + 0xEB0]
	0x03D05D18 TBNZ X8, 0x0, 0x3D05D6C
	0x03D05D1C ADRP X0, 0x45E000
	0x03D05D20 LDR X0, [X0 + 0x2D8]
	0x03D05D24 BL 0x1C16CF4
	0x03D05D28 ADRP X0, 0x45E000
	0x03D05D2C LDR X0, [X0 + 0x348]
	0x03D05D30 BL 0x1C16CF4
	0x03D05D34 ADRP X0, 0x45D000
	0x03D05D38 LDR X0, [X0 + 0xEB0]
	0x03D05D3C BL 0x1C16CF4
	0x03D05D40 ADRP X0, 0x45E000
	0x03D05D44 LDR X0, [X0 + 0x350]
	0x03D05D48 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x6E3000
	011 Move X21, 0x45F000
	012 Move W8, [X22+2084]
	013 Move X21, [X21+408]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {64}
	020 Move X0, 0x45F000
	021 Move X0, [X0+416]
	022 Call 0x1C17CF4
	023 Move X0, 0x45F000
	024 Move X0, [X0+424]
	025 Call 0x1C17CF4
	026 Move X0, 0x45F000
	027 Move X0, [X0+432]
	028 Call 0x1C17CF4
	029 Move X0, 0x45F000
	030 Move X0, [X0+408]
	031 Call 0x1C17CF4
	032 Move X0, 0x45F000
	033 Move X0, [X0+440]
	034 Call 0x1C17CF4
	035 Move X0, 0x45F000
	036 Move X0, [X0+448]
	037 Call 0x1C17CF4
	038 Move X0, 0x45F000
	039 Move X0, [X0+456]
	040 Call 0x1C17CF4
	041 Move X0, 0x45F000
	042 Move X0, [X0+464]
	043 Call 0x1C17CF4
	044 Move X0, 0x45F000
	045 Move X0, [X0+472]
	046 Call 0x1C17CF4
	047 Move X0, 0x45F000
	048 Move X0, [X0+480]
	049 Call 0x1C17CF4
	050 Move X0, 0x45F000
	051 Move X0, [X0+488]
	052 Call 0x1C17CF4
	053 Move X0, 0x457000
	054 Move X0, [X0+408]
	055 Call 0x1C17CF4
	056 Move X0, 0x45F000
	057 Move X0, [X0+496]
	058 Call 0x1C17CF4
	059 Move X0, 0x45F000
	060 Move X0, [X0+504]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X22+2084], W8
	064 Move X0, [X21]
	065 Move [X31+8], X31
	066 Move X21, 0x45F000
	067 Move X22, 0x45F000
	068 Move W8, [X0+224]
	069 Move X21, [X21+416]
	070 Move X22, [X22+432]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X3, [X21]
	075 Move X0, X19
	076 Move X1, X20
	077 Move X2, X31
	078 Call BaseField`1<Bounds>..ctor, X0, X1, X2
	079 Move X0, X19
	080 Move W1, W31
	081 Move X2, X31
	082 Call Focusable.set_delegatesFocus, X0, X1
	083 Move X1, [X22]
	084 Move X0, X19
	085 Call BaseField`1<Bounds>.get_visualInput, X0
	086 Compare X0, 0
	087 JumpIfEqual {246}
	088 Move X23, 0x45F000
	089 Move X23, [X23+456]
	090 Move [X0+32], W31
	091 Move X0, [X23]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X23]
	097 Move X8, [X0+184]
	098 Move X0, X19
	099 Move X2, X31
	100 Move X1, [X8]
	101 Call VisualElement.AddToClassList, X0, X1
	102 Move X1, [X22]
	103 Move X0, X19
	104 Call BaseField`1<Bounds>.get_visualInput, X0
	105 Compare X0, 0
	106 JumpIfEqual {246}
	107 Move X8, [X23]
	108 Move X2, X31
	109 Move X8, [X8+184]
	110 Move X1, [X8+16]
	111 Call VisualElement.AddToClassList, X0, X1
	112 Move X0, [X19+1040]
	113 Compare X0, 0
	114 JumpIfEqual {246}
	115 Move X8, [X23]
	116 Move X25, 0x45F000
	117 Move X20, 0x457000
	118 Move X2, X31
	119 Move X8, [X8+184]
	120 Move X1, [X8+8]
	121 Move X25, [X25+480]
	122 Move X20, [X20+408]
	123 Call VisualElement.AddToClassList, X0, X1
	124 Move X0, [X25]
	125 Call 0x1C17F10
	126 Move X1, [X20]
	127 Move X20, X0
	128 Call Vector3Field..ctor, X0, X1
	129 Move [X19+1104], X20
	130 Compare X20, 0
	131 JumpIfEqual {246}
	132 Move X8, 0x45F000
	133 Move X8, [X8+488]
	134 Move X0, X20
	135 Move X2, X31
	136 Move X1, [X8]
	137 Call VisualElement.set_name, X0, X1
	138 Move X0, [X19+1104]
	139 Compare X0, 0
	140 JumpIfEqual {246}
	141 Move W1, 1
	142 Move X2, X31
	143 Call Focusable.set_delegatesFocus, X0, X1
	144 Move X0, [X19+1104]
	145 Compare X0, 0
	146 JumpIfEqual {246}
	147 Move X8, [X23]
	148 Move X26, 0x45F000
	149 Move X21, 0x45F000
	150 Move X24, 0x45F000
	151 Move X8, [X8+184]
	152 Move X2, X31
	153 Move X1, [X8+24]
	154 Move X26, [X26+464]
	155 Move X21, [X21+440]
	156 Move X24, [X24+472]
	157 Call VisualElement.AddToClassList, X0, X1
	158 Move X0, [X26]
	159 Move X20, [X19+1104]
	160 Call 0x1C17F10
	161 Move X2, [X21]
	162 Move X1, X19
	163 Move X3, X31
	164 Move X21, X0
	165 Call 0x2D0F824, X0, X1, X2
	166 Move X2, [X24]
	167 Move X0, X20
	168 Move X1, X21
	169 Call INotifyValueChangedExtensions.RegisterValueChangedCallback, X0, X1
	170 Move X1, [X22]
	171 Move X0, X19
	172 Call BaseField`1<Bounds>.get_visualInput, X0
	173 Compare X0, 0
	174 JumpIfEqual {246}
	175 Move X8, [X0+888]
	176 Move X20, 0x45F000
	177 Add X0, X31, 8
	178 Move X2, X31
	179 Move [X31+8], X8
	180 Move X1, [X19+1104]
	181 Move X20, [X20+504]
	182 Call Hierarchy.Add, X0, X1
	183 Move X0, [X25]
	184 Call 0x1C17F10
	185 Move X1, [X20]
	186 Move X20, X0
	187 Call Vector3Field..ctor, X0, X1
	188 Move [X19+1112], X20
	189 Compare X20, 0
	190 JumpIfEqual {246}
	191 Move X8, 0x45F000
	192 Move X8, [X8+496]
	193 Move X0, X20
	194 Move X2, X31
	195 Move X1, [X8]
	196 Call VisualElement.set_name, X0, X1
	197 Move X0, [X19+1112]
	198 Compare X0, 0
	199 JumpIfEqual {246}
	200 Move W1, 1
	201 Move X2, X31
	202 Call Focusable.set_delegatesFocus, X0, X1
	203 Move X0, [X19+1112]
	204 Compare X0, 0
	205 JumpIfEqual {246}
	206 Move X8, [X23]
	207 Move X21, 0x45F000
	208 Move X2, X31
	209 Move X8, [X8+184]
	210 Move X1, [X8+32]
	211 Move X21, [X21+448]
	212 Call VisualElement.AddToClassList, X0, X1
	213 Move X0, [X26]
	214 Move X20, [X19+1112]
	215 Call 0x1C17F10
	216 Move X2, [X21]
	217 Move X1, X19
	218 Move X3, X31
	219 Move X21, X0
	220 Call 0x2D0F824, X0, X1, X2
	221 Move X2, [X24]
	222 Move X0, X20
	223 Move X1, X21
	224 Call INotifyValueChangedExtensions.RegisterValueChangedCallback, X0, X1
	225 Move X1, [X22]
	226 Move X0, X19
	227 Call BaseField`1<Bounds>.get_visualInput, X0
	228 Compare X0, 0
	229 JumpIfEqual {246}
	230 Move X8, [X0+888]
	231 Add X0, X31, 8
	232 Move X2, X31
	233 Move [X31+8], X8
	234 Move X1, [X19+1112]
	235 Call Hierarchy.Add, X0, X1
	236 Move X20, [X31+64]
	237 Move X19, [X31+72]
	238 Move X22, [X31+48]
	239 Move X21, [X31+56]
	240 Move X24, [X31+32]
	241 Move X23, [X31+40]
	242 Move X26, [X31+16]
	243 Move X25, [X31+24]
	244 Move X30, [X31+80]
	245 Return 
	246 Call 0x1C17F20

Method: System.Void SetValueWithoutNotify(UnityEngine.Bounds newValue)

Disassembly:
	0x03D05E6C LDR X9, [X19]
	0x03D05E70 LDR W10, [X20 + 0x98]
	0x03D05E74 LDR X11, [X31 + 0x8]
	0x03D05E78 LDR W12, [X31 + 0x10]
	0x03D05E7C LDR X13, [X9 + 0x7F8]
	0x03D05E80 STR X8, [X31 + 0x18]
	0x03D05E84 STR W10, [X31 + 0x20]
	0x03D05E88 STUR X11, [X31 + 0x24]
	0x03D05E8C STR W12, [X31 + 0x2C]
	0x03D05E90 LDR X2, [X9 + 0x800]
	0x03D05E94 ADD X1, X31, 0x18
	0x03D05E98 MOV X0, X19
	0x03D05E9C BLR X13
	0x03D05EA0 LDP X20, X19, [X31 + 0x40]
	0x03D05EA4 LDP X30, X21, [X31 + 0x30]
	0x03D05EA8 ADD X31, X31, 0x50
	0x03D05EAC RET
	0x03D05EB0 BL 0x1C16F20
	0x03D05EB4 SUB X31, X31, 0x50
	0x03D05EB8 STP X30, X21, [X31 + 0x30]
	0x03D05EBC STP X20, X19, [X31 + 0x40]
	0x03D05EC0 ADRP X21, 0x6E2000
	0x03D05EC4 LDRB W8, [X21 + 0x832]
	0x03D05EC8 MOV X20, X1
	0x03D05ECC MOV X19, X0
	0x03D05ED0 TBNZ X8, 0x0, 0x3D05EE8
	0x03D05ED4 ADRP X0, 0x45E000
	0x03D05ED8 LDR X0, [X0 + 0x358]
	0x03D05EDC BL 0x1C16CF4
	0x03D05EE0 MOVZ W8, 0x1
	0x03D05EE4 STRB W8, [X21 + 0x832]
	0x03D05EE8 LDR X8, [X19]
	0x03D05EEC MOV X0, X19
	0x03D05EF0 LDR X9, [X8 + 0x7E8]
	0x03D05EF4 LDR X1, [X8 + 0x7F0]
	0x03D05EF8 ADD X8, X31, 0x18
	0x03D05EFC BLR X9
	0x03D05F00 LDR X8, [X31 + 0x18]
	0x03D05F04 LDR W9, [X31 + 0x20]
	0x03D05F08 STR X8, [X31 + 0x8]
	0x03D05F0C STR W9, [X31 + 0x10]
	0x03D05F10 CBZ X20, 0x3D05F5C
	0x03D05F14 LDR X8, [X20 + 0x90]
	0x03D05F18 LDR X9, [X19]
	0x03D05F1C LDR X10, [X31 + 0x8]
	0x03D05F20 LDR W11, [X31 + 0x10]
	0x03D05F24 LDR W12, [X20 + 0x98]
	0x03D05F28 LDR X13, [X9 + 0x7F8]
	0x03D05F2C STR X10, [X31 + 0x18]
	0x03D05F30 STR W11, [X31 + 0x20]
	0x03D05F34 STUR X8, [X31 + 0x24]
	0x03D05F38 STR W12, [X31 + 0x2C]
	0x03D05F3C LDR X2, [X9 + 0x800]
	0x03D05F40 ADD X1, X31, 0x18
	0x03D05F44 MOV X0, X19
	0x03D05F48 BLR X13
	0x03D05F4C LDP X20, X19, [X31 + 0x40]
	0x03D05F50 LDP X30, X21, [X31 + 0x30]
	0x03D05F54 ADD X31, X31, 0x50
	0x03D05F58 RET
	0x03D05F5C BL 0x1C16F20
	0x03D05F60 STP X30, X21, [X31 - 0x20]!
	0x03D05F64 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x6E3000
	009 Move X22, 0x45F000
	010 Move X21, 0x45F000
	011 Move W8, [X23+2085]
	012 Move X22, [X22+544]
	013 Move X21, [X21+552]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x45F000
	021 Move X0, [X0+544]
	022 Call 0x1C17CF4
	023 Move X0, 0x45F000
	024 Move X0, [X0+552]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+2085], W8
	028 Move X8, [X20+16]
	029 Move V0, [X20]
	030 Move X2, [X22]
	031 Add X1, X31, 32
	032 Move X0, X19
	033 Move [X31+16], X8
	034 Move [X31], V0
	035 Move [X31+2], V0
	036 Move [X31+48], X8
	037 Call BaseField`1<Bounds>.SetValueWithoutNotify, X0, X1
	038 Move X1, [X21]
	039 Move X20, [X19+1104]
	040 Add X8, X31, 32
	041 Move X0, X19
	042 Call BaseField`1<Bounds>.get_rawValue, X0
	043 Compare X20, 0
	044 JumpIfEqual {76}
	045 Move X8, [X20]
	046 Move S0, [X31+32]
	047 Move S1, [X31+36]
	048 Move V2, [X31+40]
	049 Move X0, X20
	050 Move X9, [X8+2184]
	051 Move X1, [X8+2192]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X1, [X21]
	054 Move X20, [X19+1112]
	055 Add X8, X31, 32
	056 Move X0, X19
	057 Call BaseField`1<Bounds>.get_rawValue, X0
	058 Compare X20, 0
	059 JumpIfEqual {76}
	060 Move X8, [X20]
	061 Move S0, [X31+44]
	062 Move S1, [X31+48]
	063 Move V2, [X31+52]
	064 Move X0, X20
	065 Move X9, [X8+2184]
	066 Move X1, [X8+2192]
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Move X20, [X31+96]
	069 Move X19, [X31+104]
	070 Move X22, [X31+80]
	071 Move X21, [X31+88]
	072 Move X30, [X31+64]
	073 Move X23, [X31+72]
	074 Add X31, X31, 112
	075 Return 
	076 Call 0x1C17F20

Method: System.Void UpdateMixedValueContent()

Disassembly:
	0x03D05F68 ADRP X20, 0x6E2000
	0x03D05F6C ADRP X21, 0x45E000
	0x03D05F70 LDRB W8, [X20 + 0x833]
	0x03D05F74 LDR X21, [X21 + 0x360]
	0x03D05F78 MOV X19, X0
	0x03D05F7C TBNZ X8, 0x0, 0x3D05F94
	0x03D05F80 ADRP X0, 0x45E000
	0x03D05F84 LDR X0, [X0 + 0x360]
	0x03D05F88 BL 0x1C16CF4
	0x03D05F8C MOVZ W8, 0x1
	0x03D05F90 STRB W8, [X20 + 0x833]
	0x03D05F94 LDR X1, [X21]
	0x03D05F98 MOV X0, X19
	0x03D05F9C LDP X20, X19, [X31 + 0x10]
	0x03D05FA0 LDP X30, X21, [X31], #0x20
	0x03D05FA4 B 0x2736468
	0x03D05FA8 SUB X31, X31, 0x160
	0x03D05FAC STR X29, [X31 + 0x100]
	0x03D05FB0 STP X30, X27, [X31 + 0x110]
	0x03D05FB4 STP X26, X25, [X31 + 0x120]
	0x03D05FB8 STP X24, X23, [X31 + 0x130]
	0x03D05FBC STP X22, X21, [X31 + 0x140]
	0x03D05FC0 STP X20, X19, [X31 + 0x150]
	0x03D05FC4 ADRP X24, 0x6E2000
	0x03D05FC8 ADRP X23, 0x45E000
	0x03D05FCC LDRB W8, [X24 + 0x834]
	0x03D05FD0 LDR X23, [X23 + 0x368]
	0x03D05FD4 MOV X21, X3
	0x03D05FD8 MOV X20, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6E3000
	005 Move W8, [X20+2086]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x45F000
	012 Move X0, [X0+560]
	013 Call 0x1C17CF4
	014 Move X0, 0x45F000
	015 Move X0, [X0+568]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2086], W8
	019 Move X0, [X19+1104]
	020 Compare X0, 0
	021 JumpIfEqual {37}
	022 Move X20, 0x45F000
	023 Move X20, [X20+568]
	024 Move W1, [X19+1048]
	025 Move X2, [X20]
	026 Call BaseField`1<Vector3>.set_showMixedValue, X0, X1
	027 Move X0, [X19+1112]
	028 Compare X0, 0
	029 JumpIfEqual {37}
	030 Move W1, [X19+1048]
	031 Move X2, [X20]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call BaseField`1<Vector3>.set_showMixedValue, X0, X1
	036 Return 
	037 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03D05FDC MOV X19, X1
	0x03D05FE0 MOV X22, X0
	0x03D05FE4 TBNZ X8, 0x0, 0x3D06008
	0x03D05FE8 ADRP X0, 0x45E000
	0x03D05FEC LDR X0, [X0 + 0x2D8]
	0x03D05FF0 BL 0x1C16CF4
	0x03D05FF4 ADRP X0, 0x45E000
	0x03D05FF8 LDR X0, [X0 + 0x368]
	0x03D05FFC BL 0x1C16CF4
	0x03D06000 MOVZ W8, 0x1
	0x03D06004 STRB W8, [X24 + 0x834]
	0x03D06008 LDP V1, V0, [X21]
	0x03D0600C LDR X4, [X23]
	0x03D06010 ADD X3, X31, 0xE0
	0x03D06014 MOV X0, X22
	0x03D06018 MOV X1, X19
	0x03D0601C MOV X2, X20
	0x03D06020 STP V1, V0, [X31 + 0xC0]
	0x03D06024 STP V1, V0, [X31 + 0xE0]
	0x03D06028 BL 0x2738F70
	0x03D0602C CBZ X19, 0x3D06064
	0x03D06030 ADRP X9, 0x45D000
	0x03D06034 LDR X9, [X9 + 0x2D8]
	0x03D06038 LDR X8, [X19]
	0x03D0603C LDR X1, [X9]
	0x03D06040 LDRB W10, [X8 + 0x130]
	0x03D06044 LDRB W9, [X1 + 0x130]
	0x03D06048 CMP W10, W9
	0x03D0604C B.CC 0x3D061F8
	0x03D06050 LDR X8, [X8 + 0xC8]
	0x03D06054 ADD X8, X8, X9, 0x3, LSL
	0x03D06058 LDUR X8, [X8 - 0x8]
	0x03D0605C CMP X8, X1
	0x03D06060 B.NE 0x3D061F8
	0x03D06064 LDP V0, V1, [X21]
	0x03D06068 LDR X0, [X22 + 0x80]
	0x03D0606C STP V0, V1, [X31 + 0xA0]
	0x03D06070 CBZ X0, 0x3D061F4
	0x03D06074 LDR X8, [X0]
	0x03D06078 LDP V0, V1, [X31 + 0xA0]
	0x03D0607C ADD X2, X31, 0xE0
	0x03D06080 MOV X1, X20
	0x03D06084 LDR X9, [X8 + 0x178]
	0x03D06088 STP V0, V1, [X31 + 0xE0]
	0x03D0608C LDR X3, [X8 + 0x180]
	0x03D06090 BLR X9
	0x03D06094 MOV W23, W0
	0x03D06098 LDP V0, V1, [X21]
	0x03D0609C LDR X0, [X22 + 0x88]
	0x03D060A0 STP V0, V1, [X31 + 0x80]
	0x03D060A4 CBZ X0, 0x3D061F4
	0x03D060A8 LDR X8, [X0]
	0x03D060AC LDP V0, V1, [X31 + 0x80]
	0x03D060B0 ADD X2, X31, 0xE0
	0x03D060B4 MOV X1, X20
	0x03D060B8 LDR X9, [X8 + 0x178]
	0x03D060BC STP V0, V1, [X31 + 0xE0]
	0x03D060C0 LDR X3, [X8 + 0x180]
	0x03D060C4 BLR X9
	0x03D060C8 MOV W24, W0
	0x03D060CC LDP V0, V1, [X21]
	0x03D060D0 LDR X0, [X22 + 0x90]
	0x03D060D4 STP V0, V1, [X31 + 0x60]
	0x03D060D8 CBZ X0, 0x3D061F4
	0x03D060DC LDR X8, [X0]
	0x03D060E0 LDP V0, V1, [X31 + 0x60]
	0x03D060E4 ADD X2, X31, 0xE0
	0x03D060E8 MOV X1, X20
	0x03D060EC LDR X9, [X8 + 0x178]
	0x03D060F0 STP V0, V1, [X31 + 0xE0]
	0x03D060F4 LDR X3, [X8 + 0x180]
	0x03D060F8 BLR X9
	0x03D060FC MOV W25, W0
	0x03D06100 LDP V0, V1, [X21]
	0x03D06104 LDR X0, [X22 + 0x98]
	0x03D06108 STP V0, V1, [X31 + 0x40]
	0x03D0610C CBZ X0, 0x3D061F4
	0x03D06110 LDR X8, [X0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x6E3000
	010 Move X24, 0x45F000
	011 Move X19, 0x45F000
	012 Move X23, 0x418000
	013 Move X22, 0x418000
	014 Move X21, 0x45E000
	015 Move X20, 0x45E000
	016 Move X24, [X24+576]
	017 Move W8, [X25+2087]
	018 Move X19, [X19+456]
	019 Move X23, [X23+3768]
	020 Move X22, [X22+3776]
	021 Move X21, [X21+584]
	022 Move X20, [X20+592]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0x45E000
	028 Move X0, [X0+456]
	029 Call 0x1C17CF4
	030 Move X0, 0x45E000
	031 Move X0, [X0+576]
	032 Call 0x1C17CF4
	033 Move X0, 0x45E000
	034 Move X0, [X0+584]
	035 Call 0x1C17CF4
	036 Move X0, 0x45E000
	037 Move X0, [X0+592]
	038 Call 0x1C17CF4
	039 Move X0, 0x417000
	040 Move X0, [X0+3768]
	041 Call 0x1C17CF4
	042 Move X0, 0x417000
	043 Move X0, [X0+3776]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X25+2087], W8
	047 Move X8, [X19]
	048 Move X9, [X24]
	049 Move X2, X31
	050 Move X8, [X8+184]
	051 Move [X8], X9
	052 Move X8, [X19]
	053 Move X1, [X23]
	054 Move X8, [X8+184]
	055 Move X0, [X8]
	056 Call String.Concat, X0, X1
	057 Move X8, [X19]
	058 Move X2, X31
	059 Move X8, [X8+184]
	060 Move [X8+8], X0
	061 Move X0, [X8]
	062 Move X1, [X22]
	063 Call String.Concat, X0, X1
	064 Move X8, [X19]
	065 Move X2, X31
	066 Move X8, [X8+184]
	067 Move [X8+16], X0
	068 Move X0, [X8]
	069 Move X1, [X21]
	070 Call String.Concat, X0, X1
	071 Move X8, [X19]
	072 Move X2, X31
	073 Move X8, [X8+184]
	074 Move [X8+24], X0
	075 Move X0, [X8]
	076 Move X1, [X20]
	077 Call String.Concat, X0, X1
	078 Move X8, [X19]
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X8, [X8+184]
	086 Move [X8+32], X0
	087 Move X30, [X31+64]
	088 Move X25, [X31+72]
	089 Return 

Method: System.Void <.ctor>b__10_0(UnityEngine.UIElements.ChangeEvent`1<UnityEngine.Vector3> e)

Disassembly:
	0x03D06114 LDP V0, V1, [X31 + 0x40]
	0x03D06118 ADD X2, X31, 0xE0
	0x03D0611C MOV X1, X20
	0x03D06120 LDR X9, [X8 + 0x178]
	0x03D06124 STP V0, V1, [X31 + 0xE0]
	0x03D06128 LDR X3, [X8 + 0x180]
	0x03D0612C BLR X9
	0x03D06130 MOV W26, W0
	0x03D06134 LDP V0, V1, [X21]
	0x03D06138 LDR X0, [X22 + 0xA0]
	0x03D0613C STP V0, V1, [X31 + 0x20]
	0x03D06140 CBZ X0, 0x3D061F4
	0x03D06144 LDR X8, [X0]
	0x03D06148 LDP V0, V1, [X31 + 0x20]
	0x03D0614C ADD X2, X31, 0xE0
	0x03D06150 MOV X1, X20
	0x03D06154 LDR X9, [X8 + 0x178]
	0x03D06158 STP V0, V1, [X31 + 0xE0]
	0x03D0615C LDR X3, [X8 + 0x180]
	0x03D06160 BLR X9
	0x03D06164 MOV W27, W0
	0x03D06168 LDP V0, V1, [X21]
	0x03D0616C LDR X0, [X22 + 0xA8]
	0x03D06170 STP V0, V1, [X31]
	0x03D06174 CBZ X0, 0x3D061F4
	0x03D06178 LDR X8, [X0]
	0x03D0617C LDP V0, V1, [X31]
	0x03D06180 ADD X2, X31, 0xE0
	0x03D06184 MOV X1, X20
	0x03D06188 LDR X9, [X8 + 0x178]
	0x03D0618C STP V0, V1, [X31 + 0xE0]
	0x03D06190 LDR X3, [X8 + 0x180]
	0x03D06194 BLR X9
	0x03D06198 CBZ X19, 0x3D061F4
	0x03D0619C LDR X9, [X19]
	0x03D061A0 MOV W8, W26
	0x03D061A4 MOV W10, W23
	0x03D061A8 BFM X8, X27, 0x20, 0x1F
	0x03D061AC BFM X10, X24, 0x20, 0x1F
	0x03D061B0 LDR X11, [X9 + 0x888]
	0x03D061B4 STR X10, [X31 + 0xE0]
	0x03D061B8 STR W25, [X31 + 0xE8]
	0x03D061BC STUR X8, [X31 + 0xEC]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x6E2000
	007 Move W8, [X21+2088]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x45E000
	015 Move X0, [X0+600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2088], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+2024]
	022 Move X1, [X8+2032]
	023 Add X8, X31, 24
	024 NotImplemented "Instruction BLR not yet implemented."
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move W9, [X31+44]
	027 Move [X31+8], X8
	028 Move [X31+16], W9
	029 Compare X20, 0
	030 JumpIfEqual {51}
	031 Move V0, [X20+144]
	032 Move X8, [X19]
	033 Move V1, [X20+152]
	034 Move X9, [X31+8]
	035 Move W10, [X31+16]
	036 Move X11, [X8+2040]
	037 Move [X31+24], D0
	038 Move [X31+32], S1
	039 Move [X31+36], X9
	040 Move [X31+44], W10
	041 Move X2, [X8+2048]
	042 Add X1, X31, 24
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X20, [X31+64]
	046 Move X19, [X31+72]
	047 Move X30, [X31+48]
	048 Move X21, [X31+56]
	049 Add X31, X31, 80
	050 Return 
	051 Call 0x1C17F20

Method: System.Void <.ctor>b__10_1(UnityEngine.UIElements.ChangeEvent`1<UnityEngine.Vector3> e)

Disassembly:
	0x03D061C0 STR W0, [X31 + 0xF4]
	0x03D061C4 LDR X2, [X9 + 0x890]
	0x03D061C8 ADD X1, X31, 0xE0
	0x03D061CC MOV X0, X19
	0x03D061D0 BLR X11
	0x03D061D4 LDP X20, X19, [X31 + 0x150]
	0x03D061D8 LDP X22, X21, [X31 + 0x140]
	0x03D061DC LDP X24, X23, [X31 + 0x130]
	0x03D061E0 LDP X26, X25, [X31 + 0x120]
	0x03D061E4 LDP X30, X27, [X31 + 0x110]
	0x03D061E8 LDR X29, [X31 + 0x100]
	0x03D061EC ADD X31, X31, 0x160
	0x03D061F0 RET
	0x03D061F4 BL 0x1C16F20
	0x03D061F8 MOV X0, X19
	0x03D061FC BL 0x1C171E0
	0x03D06200 STP X30, X21, [X31 - 0x20]!
	0x03D06204 STP X20, X19, [X31 + 0x10]
	0x03D06208 ADRP X20, 0x6E1000
	0x03D0620C ADRP X21, 0x417000
	0x03D06210 LDRB W8, [X20 + 0x835]
	0x03D06214 LDR X21, [X21 + 0xC08]
	0x03D06218 MOV X19, X0
	0x03D0621C TBNZ X8, 0x0, 0x3D06288
	0x03D06220 ADRP X0, 0x417000
	0x03D06224 LDR X0, [X0 + 0xC08]
	0x03D06228 BL 0x1C16CF4
	0x03D0622C ADRP X0, 0x45D000
	0x03D06230 LDR X0, [X0 + 0x370]
	0x03D06234 BL 0x1C16CF4
	0x03D06238 ADRP X0, 0x45D000
	0x03D0623C LDR X0, [X0 + 0x378]
	0x03D06240 BL 0x1C16CF4
	0x03D06244 ADRP X0, 0x45D000
	0x03D06248 LDR X0, [X0 + 0x380]
	0x03D0624C BL 0x1C16CF4
	0x03D06250 ADRP X0, 0x45D000
	0x03D06254 LDR X0, [X0 + 0x388]
	0x03D06258 BL 0x1C16CF4
	0x03D0625C ADRP X0, 0x45D000
	0x03D06260 LDR X0, [X0 + 0x390]
	0x03D06264 BL 0x1C16CF4
	0x03D06268 ADRP X0, 0x45D000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x6E2000
	007 Move W8, [X21+2089]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x45E000
	015 Move X0, [X0+600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2089], W8
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+2024]
	022 Move X1, [X8+2032]
	023 Add X8, X31, 24
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X8, [X31+24]
	026 Move W9, [X31+32]
	027 Move [X31+8], X8
	028 Move [X31+16], W9
	029 Compare X20, 0
	030 JumpIfEqual {51}
	031 Move V0, [X20+144]
	032 Move X8, [X19]
	033 Move X9, [X31+8]
	034 Move W10, [X31+16]
	035 Move V1, [X20+152]
	036 Move X11, [X8+2040]
	037 Move [X31+24], X9
	038 Move [X31+32], W10
	039 Move [X31+36], D0
	040 Move [X31+44], S1
	041 Move X2, [X8+2048]
	042 Add X1, X31, 24
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X20, [X31+64]
	046 Move X19, [X31+72]
	047 Move X30, [X31+48]
	048 Move X21, [X31+56]
	049 Add X31, X31, 80
	050 Return 
	051 Call 0x1C17F20

