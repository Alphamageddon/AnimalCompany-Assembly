Type: UnityEngine.UIElements.ObjectPool`1

Method: System.Int32 get_maxSize()

Disassembly:
	0x02495414 LDR X29, [X31 + 0xF0]
	0x02495418 ADD X31, X31, 0x120

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_maxSize(System.Int32 value)

Disassembly:
	0x0249541C RET
	0x02495420 SUB X31, X31, 0xF0
	0x02495424 STP X30, X23, [X31 + 0xC0]
	0x02495428 STP X22, X21, [X31 + 0xD0]
	0x0249542C STP X20, X19, [X31 + 0xE0]
	0x02495430 STRB W31, [X31 + 0x5C]
	0x02495434 LDUR X8, [X0 + 0x34]
	0x02495438 LDUR V0, [X0 + 0x24]
	0x0249543C LDUR V1, [X0 + 0x14]
	0x02495440 MOV X20, X1
	0x02495444 STR X8, [X31 + 0x50]
	0x02495448 LDR X9, [X31 + 0x50]
	0x0249544C STP V1, V0, [X31 + 0x30]
	0x02495450 LDR X8, [X2 + 0x20]
	0x02495454 LDP V1, V0, [X2]
	0x02495458 ADD X1, X31, 0x90
	0x0249545C ADD X2, X31, 0x60
	0x02495460 STR X8, [X31 + 0x20]
	0x02495464 STP V1, V0, [X31]
	0x02495468 LDR X8, [X0]
	0x0249546C LDP V1, V0, [X31 + 0x30]
	0x02495470 LDR X11, [X31 + 0x20]
	0x02495474 MOV X19, X0
	0x02495478 LDR X10, [X8 + 0x1A8]
	0x0249547C STP V1, V0, [X31 + 0x90]
	0x02495480 LDP V0, V1, [X31]
	0x02495484 STR X9, [X31 + 0xB0]
	0x02495488 STR X11, [X31 + 0x80]
	0x0249548C STP V0, V1, [X31 + 0x60]
	0x02495490 LDR X3, [X8 + 0x1B0]
	0x02495494 BLR X10
	0x02495498 TBZ X0, 0x0, 0x2495520
	0x0249549C STRB W31, [X31 + 0x5C]
	0x024954A0 ADD X1, X31, 0x5C
	0x024954A4 MOV X0, X19
	0x024954A8 MOV X2, X31
	0x024954AC BL 0x33DE64C
	0x024954B0 LDR X8, [X19 + 0x40]
	0x024954B4 CBZ X8, 0x2495558
	0x024954B8 LDRSW X9, [X19 + 0x48]
	0x024954BC LDR W10, [X8 + 0x18]
	0x024954C0 CMP W9, W10
	0x024954C4 B.GE 0x24954F0
	0x024954C8 ADD W11, W9, 0x1
	0x024954CC CMP W9, W10
	0x024954D0 STR W11, [X19 + 0x48]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x1F45000
	008 Move X23, 0x1C5F000
	009 Move W8, [X22+2960]
	010 Move X23, [X23+1448]
	011 Move X19, X2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1C5F000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2960], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move W0, W31
	029 Move W1, W21
	030 Move X2, X31
	031 Call Math.Max, X0, X1
	032 Move X8, [X20+16]
	033 Move [X20+24], W0
	034 Compare X8, 0
	035 JumpIfEqual {56}
	036 Move W8, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, [X19+32]
	039 Move X0, X20
	040 Move X8, [X8+192]
	041 Move X1, [X8+8]
	042 Call 0x249568C, X0
	043 Move X8, [X20+16]
	044 Compare X8, 0
	045 JumpIfEqual {56}
	046 Move W9, [X20+24]
	047 Move W8, [X8+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Return 
	056 Call 0x1C17F20

Method: System.Void .ctor(System.Func`1<T> CreateFunc, System.Int32 maxSize = 100)

Disassembly:
	0x024954D4 B.CS 0x249555C
	0x024954D8 ADD X8, X8, X9, 0x3, LSL
	0x024954DC MOV X21, X31
	0x024954E0 MOVZ W22, 0x1
	0x024954E4 STR X20, [X8 + 0x20]
	0x024954E8 MOVZ W23, 0x4
	0x024954EC B 0x24954FC
	0x024954F0 MOV X21, X31
	0x024954F4 MOV W22, W31
	0x024954F8 MOVZ W23, 0x2
	0x024954FC LDRB W8, [X31 + 0x5C]
	0x02495500 CBZ W8, 0x2495510
	0x02495504 MOV X0, X19
	0x02495508 MOV X1, X31
	0x0249550C BL 0x33E14E4
	0x02495510 CBNZ X21, 0x2495550
	0x02495514 ORR W8, W23, 0x2
	0x02495518 CMP W8, 0x2
	0x0249551C B.NE 0x2495538
	0x02495520 LDR X8, [X19]
	0x02495524 MOV X0, X19
	0x02495528 MOV X1, X20
	0x0249552C LDP X9, X2, [X8 + 0x198]
	0x02495530 BLR X9
	0x02495534 MOV W22, W31
	0x02495538 MOV W0, W22
	0x0249553C LDP X20, X19, [X31 + 0xE0]
	0x02495540 LDP X22, X21, [X31 + 0xD0]
	0x02495544 LDP X30, X23, [X31 + 0xC0]
	0x02495548 ADD X31, X31, 0xF0
	0x0249554C RET
	0x02495550 MOV X0, X21
	0x02495554 BL 0x1C16F18
	0x02495558 BL 0x1C16F20
	0x0249555C BL 0x1C16F28
	0x02495560 B 0x2495568
	0x02495564 B 0x2495568
	0x02495568 MOV X22, X0
	0x0249556C CMP W1, 0x1
	0x02495570 B.NE 0x2495590
	0x02495574 MOV X0, X22
	0x02495578 BL 0x3EB1AD0
	0x0249557C LDR X21, [X0]
	0x02495580 BL 0x3EB1AE0
	0x02495584 MOV W23, W31
	0x02495588 MOV W22, W31
	0x0249558C B 0x24954FC
	0x02495590 MOV X21, X31
	0x02495594 B 0x249559C
	0x02495598 MOV X22, X0
	0x0249559C LDRB W8, [X31 + 0x5C]
	0x024955A0 CBZ W8, 0x24955B0
	0x024955A4 MOV X0, X19
	0x024955A8 MOV X1, X31
	0x024955AC BL 0x33E14E4
	0x024955B0 CBNZ X21, 0x24955BC
	0x024955B4 MOV X0, X22
	0x024955B8 BL 0x1D2C690
	0x024955BC MOV X0, X21
	0x024955C0 BL 0x1C16F18
	0x024955C4 BL 0x1990590
	0x024955C8 SUB X31, X31, 0x40
	0x024955CC STP X30, X23, [X31 + 0x10]
	0x024955D0 STP X22, X21, [X31 + 0x20]
	0x024955D4 STP X20, X19, [X31 + 0x30]
	0x024955D8 MOV X20, X1
	0x024955DC MOV X19, X0
	0x024955E0 STRB W31, [X31 + 0xC]
	0x024955E4 ADD X1, X31, 0xC
	0x024955E8 MOV X2, X31
	0x024955EC BL 0x33DE64C
	0x024955F0 LDR X8, [X19 + 0x40]
	0x024955F4 CBZ X8, 0x2495698
	0x024955F8 LDRSW X9, [X19 + 0x48]
	0x024955FC LDR W10, [X8 + 0x18]
	0x02495600 CMP W9, W10
	0x02495604 B.GE 0x2495630
	0x02495608 ADD W11, W9, 0x1
	0x0249560C CMP W9, W10
	0x02495610 STR W11, [X19 + 0x48]
	0x02495614 B.CS 0x249569C
	0x02495618 ADD X8, X8, X9, 0x3, LSL
	0x0249561C MOV X21, X31
	0x02495620 MOVZ W22, 0x1
	0x02495624 STR X20, [X8 + 0x20]
	0x02495628 MOVZ W23, 0x3
	0x0249562C B 0x249563C
	0x02495630 MOV X21, X31
	0x02495634 MOV W22, W31
	0x02495638 MOVZ W23, 0x4
	0x0249563C LDRB W8, [X31 + 0xC]
	0x02495640 CBZ W8, 0x2495650
	0x02495644 MOV X0, X19
	0x02495648 MOV X1, X31
	0x0249564C BL 0x33E14E4
	0x02495650 CBNZ X21, 0x2495690
	0x02495654 ORR W8, W23, 0x4
	0x02495658 CMP W8, 0x4
	0x0249565C B.NE 0x2495678
	0x02495660 LDR X8, [X19]
	0x02495664 MOV X0, X19
	0x02495668 MOV X1, X20
	0x0249566C LDP X9, X2, [X8 + 0x198]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+32]
	008 Move X20, X3
	009 Move W22, W2
	010 Move X21, X1
	011 Move X8, [X8+192]
	012 Move X19, X0
	013 Move X8, [X8+32]
	014 Move W9, [X8+309]
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {22}
	019 Move X0, X8
	020 Call 0x1C5D684
	021 Move X8, X0
	022 Move X0, X8
	023 Call 0x1C17F10
	024 Move X8, [X20+32]
	025 Move X23, X0
	026 Move X8, [X8+192]
	027 Move X1, [X8+40]
	028 Call Stack`1<Object>..ctor, X0
	029 Move X0, X19
	030 Move X1, X31
	031 Move [X19+16], X23
	032 Call Object..ctor, X0
	033 Move X8, [X20+32]
	034 Move X0, X19
	035 Move W1, W22
	036 Move X8, [X8+192]
	037 Move X2, [X8+48]
	038 Call 0x249541C, X0, X1
	039 Compare X21, 0
	040 JumpIfNotEqual {131}
	041 Move X8, [X20+32]
	042 Move X8, [X8+192]
	043 Move X0, [X8+72]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X8, [X20+32]
	055 Move X8, [X8+192]
	056 Move X0, [X8+72]
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move X8, [X0+184]
	064 Move X21, [X8+8]
	065 Compare X21, 0
	066 JumpIfNotEqual {131}
	067 Move X8, [X20+32]
	068 Move X8, [X8+192]
	069 Move X0, [X8+72]
	070 Move W8, [X0+309]
	071 Move TEMP, X8
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {76}
	075 Call 0x1C5D684
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X8, [X20+32]
	081 Move X8, [X8+192]
	082 Move X0, [X8+72]
	083 Move W9, [X0+309]
	084 Move TEMP, X9
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {91}
	088 Call 0x1C5D684
	089 Move X8, [X20+32]
	090 Move X8, [X8+192]
	091 Move X8, [X8+56]
	092 Move X9, [X0+184]
	093 Move W10, [X8+309]
	094 Move X22, [X9]
	095 Move TEMP, X10
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {102}
	099 Move X0, X8
	100 Call 0x1C5D684
	101 Move X8, X0
	102 Move X0, X8
	103 Call 0x1C17F10
	104 Move X8, [X20+32]
	105 Move X1, X22
	106 Move X21, X0
	107 Move X8, [X8+192]
	108 Move X2, [X8+80]
	109 Move X3, [X8+88]
	110 Call Func`1<Object>..ctor, X0, X1, X2
	111 Move X8, [X20+32]
	112 Move X8, [X8+192]
	113 Move X0, [X8+72]
	114 Move W9, [X0+309]
	115 Move TEMP, X9
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {122}
	119 Call 0x1C5D684
	120 Move X8, [X20+32]
	121 Move X8, [X8+192]
	122 Move X9, [X0+184]
	123 Move [X9+8], X21
	124 Move X0, [X8+72]
	125 Move W8, [X0+309]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {131}
	130 Call 0x1C5D684
	131 Move [X19+32], X21
	132 Move X20, [X31+32]
	133 Move X19, [X31+40]
	134 Move X22, [X31+16]
	135 Move X21, [X31+24]
	136 Move X30, [X31+48]
	137 Move X23, [X31+56]
	138 Return 

Method: System.Int32 Size()

Disassembly:
	0x02495670 BLR X9
	0x02495674 MOV W22, W31
	0x02495678 MOV W0, W22
	0x0249567C LDP X20, X19, [X31 + 0x30]
	0x02495680 LDP X22, X21, [X31 + 0x20]
	0x02495684 LDP X30, X23, [X31 + 0x10]
	0x02495688 ADD X31, X31, 0x40

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: T Get()

Disassembly:
	0x0249568C RET
	0x02495690 MOV X0, X21
	0x02495694 BL 0x1C16F18
	0x02495698 BL 0x1C16F20
	0x0249569C BL 0x1C16F28
	0x024956A0 B 0x24956A8
	0x024956A4 B 0x24956A8
	0x024956A8 MOV X22, X0
	0x024956AC CMP W1, 0x1
	0x024956B0 B.NE 0x24956D0
	0x024956B4 MOV X0, X22
	0x024956B8 BL 0x3EB1AD0
	0x024956BC LDR X21, [X0]
	0x024956C0 BL 0x3EB1AE0
	0x024956C4 MOV W23, W31
	0x024956C8 MOV W22, W31
	0x024956CC B 0x249563C
	0x024956D0 MOV X21, X31
	0x024956D4 B 0x24956DC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+16]
	004 Compare X0, 0
	005 JumpIfEqual {23}
	006 Move W9, [X0+24]
	007 Compare W9, 0
	008 JumpIfEqual {15}
	009 Move X8, [X1+32]
	010 Move X8, [X8+192]
	011 Move X1, [X8+104]
	012 Move X30, [X31+16]
	013 Call Stack`1<Object>.Pop, X0
	014 Return X0
	015 Move X8, [X8+32]
	016 Compare X8, 0
	017 JumpIfEqual {23}
	018 Move X2, [X8+24]
	019 Move X0, [X8+64]
	020 Move X1, [X8+40]
	021 Move X30, [X31+16]
	022 CallNoReturn X2
	023 Call 0x1C17F20

Method: System.Void Release(T element)

Disassembly:
	0x024956D8 MOV X22, X0
	0x024956DC LDRB W8, [X31 + 0xC]
	0x024956E0 CBZ W8, 0x24956F0
	0x024956E4 MOV X0, X19
	0x024956E8 MOV X1, X31
	0x024956EC BL 0x33E14E4
	0x024956F0 CBNZ X21, 0x24956FC
	0x024956F4 MOV X0, X22
	0x024956F8 BL 0x1D2C690
	0x024956FC MOV X0, X21
	0x02495700 BL 0x1C16F18
	0x02495704 BL 0x1990590
	0x02495708 SUB X31, X31, 0x30
	0x0249570C STP X30, X21, [X31 + 0x10]
	0x02495710 STP X20, X19, [X31 + 0x20]
	0x02495714 MOV X20, X1
	0x02495718 MOV X19, X0
	0x0249571C STRB W31, [X31 + 0xC]
	0x02495720 ADD X1, X31, 0xC
	0x02495724 MOV X2, X31
	0x02495728 BL 0x33DE64C
	0x0249572C LDR W9, [X19 + 0x48]
	0x02495730 CMP W9, 0x0
	0x02495734 B.LE 0x2495770
	0x02495738 LDR X8, [X19 + 0x40]
	0x0249573C SUB W9, W9, 0x1
	0x02495740 STR W9, [X19 + 0x48]
	0x02495744 CBZ X8, 0x24957C4
	0x02495748 LDR W10, [X8 + 0x18]
	0x0249574C CMP W9, W10
	0x02495750 B.CS 0x24957C0
	0x02495754 LDR X10, [X19]
	0x02495758 ADD X8, X8, W9, 0x3, UXTW
	0x0249575C LDR X1, [X8 + 0x20]
	0x02495760 LDP X8, X2, [X10 + 0x198]
	0x02495764 MOV X0, X19
	0x02495768 BLR X8
	0x0249576C B 0x249572C
	0x02495770 LDR X8, [X20 + 0x20]
	0x02495774 LDR X8, [X8 + 0xC0]
	0x02495778 LDR X0, [X8 + 0x8]
	0x0249577C LDRB W8, [X0 + 0x135]
	0x02495780 TBNZ X8, 0x0, 0x2495788
	0x02495784 BL 0x1C5C684
	0x02495788 MOV W1, W31
	0x0249578C BL 0x1C16D6C
	0x02495790 MOV X21, X31
	0x02495794 STR X0, [X19 + 0x40]
	0x02495798 LDRB W8, [X31 + 0xC]
	0x0249579C CBZ W8, 0x24957AC
	0x024957A0 MOV X0, X19
	0x024957A4 MOV X1, X31
	0x024957A8 BL 0x33E14E4
	0x024957AC CBNZ X21, 0x24957C8
	0x024957B0 LDP X20, X19, [X31 + 0x20]
	0x024957B4 LDP X30, X21, [X31 + 0x10]
	0x024957B8 ADD X31, X31, 0x30
	0x024957BC RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x1F45000
	007 Move W8, [X22+2961]
	008 Move X20, X2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x1C5F000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x1C88000
	019 Move X0, [X0+3528]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2961], W8
	023 Move X0, [X21+16]
	024 Compare X0, 0
	025 JumpIfEqual {68}
	026 Move W8, [X0+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X20+32]
	029 Move X8, [X8+192]
	030 Move X1, [X8+120]
	031 Call Stack`1<Object>.Peek, X0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0x1C5F000
	034 Move X8, [X8+2600]
	035 Move X0, [X8]
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X8, 0x1C88000
	041 Move X8, [X8+3528]
	042 Move X1, X31
	043 Move X0, [X8]
	044 Call Debug.LogError, X0
	045 Move X0, [X21+16]
	046 Compare X0, 0
	047 JumpIfEqual {68}
	048 Move W8, [X0+24]
	049 Move W9, [X21+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, [X20+32]
	052 Move X1, X19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X8, [X8+192]
	058 Move X2, [X8+136]
	059 Move X30, [X31+48]
	060 Call Stack`1<Object>.Push, X0, X1
	061 Return 
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return 
	068 Call 0x1C17F20

