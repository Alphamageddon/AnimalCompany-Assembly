Type: UnityEngine.UIElements.UIRAtlasAllocator/Row

Method: System.Int32 get_offsetX()

Disassembly:
	0x03DC285C LDR W8, [X0 + 0xE0]
	0x03DC2860 CBNZ W8, 0x3DC2868

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_offsetX(System.Int32 value)

Disassembly:
	0x03DC2864 BL 0x1C16DFC
	0x03DC2868 MOV X0, X21

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Int32 get_offsetY()

Disassembly:
	0x03DC286C MOV X1, X31
	0x03DC2870 BL 0x3DE1000

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_offsetY(System.Int32 value)

Disassembly:
	0x03DC2874 STR X20, [X19 + 0x18]
	0x03DC2878 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X0+20], W1
	002 Return 

Method: System.Int32 get_width()

Disassembly:
	0x03DC287C LDP X22, X21, [X31 + 0x20]
	0x03DC2880 LDP X30, X23, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_width(System.Int32 value)

Disassembly:
	0x03DC2884 ADD X31, X31, 0x40
	0x03DC2888 RET

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.Void set_height(System.Int32 value)

Disassembly:
	0x03DC288C BL 0x1C16F20
	0x03DC2890 BL 0x1C16F28

ISIL:
	001 Move [X0+28], W1
	002 Return 

Method: UnityEngine.UIElements.UIRAtlasAllocator/Row Acquire(System.Int32 offsetX, System.Int32 offsetY, System.Int32 width, System.Int32 height)

Disassembly:
	0x03DC2668 BL 0x1C16D6C
	0x03DC266C LDR X8, [X19 + 0x18]
	0x03DC2670 CBZ X8, 0x3DC288C
	0x03DC2674 LDR X9, [X8]
	0x03DC2678 MOV X21, X0
	0x03DC267C MOV X0, X8
	0x03DC2680 LDP X10, X1, [X9 + 0x188]
	0x03DC2684 BLR X10
	0x03DC2688 ADRP X23, 0x331000
	0x03DC268C LDR X23, [X23 + 0x758]
	0x03DC2690 STR W0, [X31 + 0xC]
	0x03DC2694 ADD X1, X31, 0xC
	0x03DC2698 LDR X8, [X23]
	0x03DC269C MOV X0, X8
	0x03DC26A0 BL 0x1C16E04
	0x03DC26A4 CBZ X21, 0x3DC288C
	0x03DC26A8 MOV X22, X0
	0x03DC26AC CBZ X0, 0x3DC26C4
	0x03DC26B0 LDR X8, [X21]
	0x03DC26B4 MOV X0, X22
	0x03DC26B8 LDR X1, [X8 + 0x40]
	0x03DC26BC BL 0x1C16E00
	0x03DC26C0 CBZ X0, 0x3DC2894
	0x03DC26C4 LDR W8, [X21 + 0x18]
	0x03DC26C8 CBZ W8, 0x3DC2890
	0x03DC26CC STR X22, [X21 + 0x20]
	0x03DC26D0 LDR X0, [X19 + 0x18]
	0x03DC26D4 CBZ X0, 0x3DC288C
	0x03DC26D8 LDR X8, [X0]
	0x03DC26DC LDP X9, X1, [X8 + 0x1A8]
	0x03DC26E0 BLR X9
	0x03DC26E4 LDR X8, [X23]
	0x03DC26E8 STR W0, [X31 + 0x8]
	0x03DC26EC ADD X1, X31, 0x8
	0x03DC26F0 MOV X0, X8
	0x03DC26F4 BL 0x1C16E04
	0x03DC26F8 MOV X22, X0
	0x03DC26FC CBZ X0, 0x3DC2714
	0x03DC2700 LDR X8, [X21]
	0x03DC2704 MOV X0, X22
	0x03DC2708 LDR X1, [X8 + 0x40]
	0x03DC270C BL 0x1C16E00
	0x03DC2710 CBZ X0, 0x3DC2894

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x627000
	009 Move X23, 0x3A8000
	010 Move W8, [X24+283]
	011 Move X23, [X23+184]
	012 Move W19, W3
	013 Move W20, W2
	014 Move W21, W1
	015 Move W22, W0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x3A8000
	021 Move X0, [X0+232]
	022 Call 0x1C17CF4
	023 Move X0, 0x3A8000
	024 Move X0, [X0+184]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+283], W8
	028 Move X0, [X23]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X23]
	034 Move X8, [X0+184]
	035 Move X0, [X8]
	036 Compare X0, 0
	037 JumpIfEqual {57}
	038 Move X8, 0x3A8000
	039 Move X8, [X8+232]
	040 Move X1, [X8]
	041 Call 0x249568C, X0
	042 Compare X0, 0
	043 JumpIfEqual {57}
	044 Move [X0+16], W22
	045 Move [X0+20], W21
	046 Move [X0+24], W20
	047 Move [X0+28], W19
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X24, [X31+16]
	053 Move X23, [X31+24]
	054 Move [X0+32], W31
	055 Move X30, [X31+64]
	056 Return X0
	057 Call 0x1C17F20

Method: System.Void Release()

Disassembly:
	0x03DC1BB8 MOV X19, X0
	0x03DC1BBC BL 0x33BDD8C
	0x03DC1BC0 LDR X8, [X20]
	0x03DC1BC4 LDR X8, [X8 + 0xB8]
	0x03DC1BC8 STR X19, [X8]
	0x03DC1BCC LDP X20, X19, [X31 + 0x10]
	0x03DC1BD0 LDR X30, [X31], #0x20
	0x03DC1BD4 RET
	0x03DC1BD8 MOV X1, X31
	0x03DC1BDC B 0x33BDD8C
	0x03DC1BE0 STR X30, [X31 - 0x20]!
	0x03DC1BE4 STP X20, X19, [X31 + 0x10]
	0x03DC1BE8 ADRP X19, 0x627000
	0x03DC1BEC ADRP X20, 0x3A8000
	0x03DC1BF0 LDRB W8, [X19 + 0x125]
	0x03DC1BF4 LDR X20, [X20 + 0xC8]
	0x03DC1BF8 TBNZ X8, 0x0, 0x3DC1C10
	0x03DC1BFC ADRP X0, 0x3A8000
	0x03DC1C00 LDR X0, [X0 + 0xC8]
	0x03DC1C04 BL 0x1C16CF4
	0x03DC1C08 MOVZ W8, 0x1
	0x03DC1C0C STRB W8, [X19 + 0x125]
	0x03DC1C10 LDR X0, [X20]
	0x03DC1C14 BL 0x1C16F10
	0x03DC1C18 MOV X1, X31
	0x03DC1C1C MOV X19, X0
	0x03DC1C20 BL 0x33BDD8C
	0x03DC1C24 MOV X0, X19
	0x03DC1C28 LDP X20, X19, [X31 + 0x10]
	0x03DC1C2C LDR X30, [X31], #0x20
	0x03DC1C30 RET
	0x03DC1C34 LDR W0, [X0 + 0x10]
	0x03DC1C38 RET
	0x03DC1C3C STR W1, [X0 + 0x10]
	0x03DC1C40 RET
	0x03DC1C44 LDR X0, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x628000
	006 Move X20, 0x3A9000
	007 Move W8, [X21+284]
	008 Move X20, [X20+184]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3A9000
	015 Move X0, [X0+192]
	016 Call 0x1C17CF4
	017 Move X0, 0x3A9000
	018 Move X0, [X0+184]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+284], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8]
	030 Compare X0, 0
	031 JumpIfEqual {48}
	032 Move X8, 0x3A9000
	033 Move X8, [X8+192]
	034 Move X1, X19
	035 Move X2, [X8]
	036 Call 0x24956D8, X0, X1
	037 Move TEMP, 0
	038 Not TEMP
	039 Move X8, TEMP
	040 Move [X19+32], W8
	041 Move [X19+16], X8
	042 Move [X19+24], X8
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03DC2894 BL 0x1C16F44
	0x03DC2898 MOV X1, X31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03DC289C BL 0x1C16DEC
	0x03DC28A0 SUB X31, X31, 0x40
	0x03DC28A4 STP X30, X23, [X31 + 0x10]
	0x03DC28A8 STP X22, X21, [X31 + 0x20]
	0x03DC28AC STP X20, X19, [X31 + 0x30]
	0x03DC28B0 ADRP X20, 0x626000
	0x03DC28B4 LDRB W8, [X20 + 0x12D]
	0x03DC28B8 MOV X19, X0
	0x03DC28BC TBNZ X8, 0x0, 0x3DC28EC
	0x03DC28C0 ADRP X0, 0x3A0000
	0x03DC28C4 LDR X0, [X0 + 0x6E0]
	0x03DC28C8 BL 0x1C16CF4
	0x03DC28CC ADRP X0, 0x333000
	0x03DC28D0 LDR X0, [X0 + 0x130]
	0x03DC28D4 BL 0x1C16CF4
	0x03DC28D8 ADRP X0, 0x3A7000
	0x03DC28DC LDR X0, [X0 + 0x160]
	0x03DC28E0 BL 0x1C16CF4
	0x03DC28E4 MOVZ W8, 0x1
	0x03DC28E8 STRB W8, [X20 + 0x12D]
	0x03DC28EC STR W31, [X31 + 0xC]
	0x03DC28F0 LDR W21, [X19 + 0x50]
	0x03DC28F4 CBZ W21, 0x3DC29B0
	0x03DC28F8 LDR W22, [X19 + 0x54]
	0x03DC28FC CBZ W22, 0x3DC29B0
	0x03DC2900 ADRP X8, 0x333000
	0x03DC2904 LDR W23, [X19 + 0x20]
	0x03DC2908 LDR X8, [X8 + 0x130]
	0x03DC290C LDR X0, [X8]
	0x03DC2910 BL 0x1C16F10
	0x03DC2914 MOV W1, W21
	0x03DC2918 MOV W2, W22
	0x03DC291C MOV W3, W31
	0x03DC2920 MOV W4, W23
	0x03DC2924 MOV X5, X31
	0x03DC2928 MOV X20, X0
	0x03DC292C BL 0x3C21D38
	0x03DC2930 CBZ X20, 0x3DC29CC
	0x03DC2934 MOVZ W1, 0x3D
	0x03DC2938 MOV X0, X20
	0x03DC293C MOV X2, X31
	0x03DC2940 BL 0x3C396EC
	0x03DC2944 ADRP X8, 0x3A0000
	0x03DC2948 LDR X8, [X8 + 0x6E0]
	0x03DC294C ADD X0, X31, 0xC
	0x03DC2950 MOV X1, X31
	0x03DC2954 LDR X8, [X8]
	0x03DC2958 LDR X8, [X8 + 0xB8]
	0x03DC295C LDR W9, [X8]
	0x03DC2960 ADD W10, W9, 0x1
	0x03DC2964 STR W10, [X8]
	0x03DC2968 STR W9, [X31 + 0xC]
	0x03DC296C BL 0x337B6E0
	0x03DC2970 ADRP X8, 0x3A7000
	0x03DC2974 LDR X8, [X8 + 0x160]
	0x03DC2978 MOV X1, X0
	0x03DC297C MOV X2, X31
	0x03DC2980 LDR X8, [X8]
	0x03DC2984 MOV X0, X8
	0x03DC2988 BL 0x321B938
	0x03DC298C MOV X1, X0
	0x03DC2990 MOV X0, X20
	0x03DC2994 MOV X2, X31
	0x03DC2998 BL 0x3C38A84
	0x03DC299C LDR W1, [X19 + 0x24]
	0x03DC29A0 MOV X0, X20
	0x03DC29A4 MOV X2, X31
	0x03DC29A8 BL 0x3C1AB5C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x627000
	009 Move X19, 0x3A8000
	010 Move W8, [X20+285]
	011 Move X19, [X19+256]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0x3A8000
	017 Move X0, [X0+264]
	018 Call 0x1C17CF4
	019 Move X0, 0x3A8000
	020 Move X0, [X0+272]
	021 Call 0x1C17CF4
	022 Move X0, 0x3A8000
	023 Move X0, [X0+280]
	024 Call 0x1C17CF4
	025 Move X0, 0x3A8000
	026 Move X0, [X0+184]
	027 Call 0x1C17CF4
	028 Move X0, 0x3A8000
	029 Move X0, [X0+288]
	030 Call 0x1C17CF4
	031 Move X0, 0x3A8000
	032 Move X0, [X0+256]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+285], W8
	036 Move X0, [X19]
	037 Move X24, 0x3A8000
	038 Move X20, 0x3A8000
	039 Move X23, 0x3A8000
	040 Move X22, 0x3A8000
	041 Move X21, 0x3A8000
	042 Move X24, [X24+264]
	043 Move W8, [X0+224]
	044 Move X20, [X20+288]
	045 Move X23, [X23+280]
	046 Move X22, [X22+272]
	047 Move X21, [X21+184]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X19]
	052 Move X8, [X0+184]
	053 Move X0, [X24]
	054 Move X19, [X8]
	055 Call 0x1C17F10
	056 Move X2, [X20]
	057 Move X1, X19
	058 Move X3, X31
	059 Move X20, X0
	060 Call Func`1<Object>..ctor, X0, X1, X2
	061 Move X0, [X23]
	062 Call 0x1C17F10
	063 Move X3, [X22]
	064 Move W2, 100
	065 Move X1, X20
	066 Move X19, X0
	067 Call 0x24954D4, X0, X1, X2
	068 Move X8, [X21]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X8, [X8+184]
	074 Move [X8], X19
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X30, [X31+64]
	078 Return 

