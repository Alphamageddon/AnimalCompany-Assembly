Type: UnityEngine.UIElements.VisualTreeHierarchyFlagsUpdater

Method: Unity.Profiling.ProfilerMarker get_profilerMarker()

Disassembly:
	0x03D1B9D0 BLR X9
	0x03D1B9D4 CBZ X0, 0x3D1BA78
	0x03D1B9D8 ADRP X20, 0x3D8000
	0x03D1B9DC LDR X20, [X20 + 0xA28]
	0x03D1B9E0 MOV X1, X31
	0x03D1B9E4 BL 0x3DEC0CC
	0x03D1B9E8 LDR X8, [X20]
	0x03D1B9EC MOV X20, X0
	0x03D1B9F0 LDR W9, [X8 + 0xE0]
	0x03D1B9F4 CBNZ W9, 0x3D1BA00
	0x03D1B9F8 MOV X0, X8
	0x03D1B9FC BL 0x1C16DFC
	0x03D1BA00 CMP X20, 0x0
	0x03D1BA04 CSET W0, NE
	0x03D1BA08 MOV X1, X31
	0x03D1BA0C BL 0x3C06E58
	0x03D1BA10 LDR X0, [X19 + 0x18]
	0x03D1BA14 MOVZ W8, 0x1
	0x03D1BA18 STRB W8, [X19 + 0x30]
	0x03D1BA1C CBZ X0, 0x3D1BA78
	0x03D1BA20 LDR X20, [X19 + 0x40]
	0x03D1BA24 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6CD000
	005 Move X19, 0x44A000
	006 Move W8, [X20+2352]
	007 Move X19, [X19+488]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x44A000
	013 Move X0, [X0+488]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2352], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void OnVersionChanged(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType)

Disassembly:
	0x03D1BA28 BL 0x3DBBED8
	0x03D1BA2C CBZ X20, 0x3D1BA78
	0x03D1BA30 STR S0, [X20 + 0x30]
	0x03D1BA34 LDR X0, [X19 + 0x18]
	0x03D1BA38 CBZ X0, 0x3D1BA78
	0x03D1BA3C LDR X8, [X0]
	0x03D1BA40 LDR X20, [X19 + 0x40]
	0x03D1BA44 LDR X9, [X8 + 0x398]
	0x03D1BA48 LDR X1, [X8 + 0x3A0]
	0x03D1BA4C BLR X9
	0x03D1BA50 CBZ X20, 0x3D1BA78
	0x03D1BA54 LDR X8, [X20]
	0x03D1BA58 MOV X1, X0
	0x03D1BA5C MOV X0, X20
	0x03D1BA60 LDP X9, X2, [X8 + 0x178]
	0x03D1BA64 BLR X9
	0x03D1BA68 STRB W31, [X19 + 0x30]
	0x03D1BA6C LDP X20, X19, [X31 + 0x10]
	0x03D1BA70 LDR X30, [X31], #0x20
	0x03D1BA74 RET
	0x03D1BA78 BL 0x1C16F20
	0x03D1BA7C STR X30, [X31 - 0x20]!
	0x03D1BA80 STP X20, X19, [X31 + 0x10]
	0x03D1BA84 ADRP X20, 0x6CC000
	0x03D1BA88 LDRB W8, [X20 + 0x949]
	0x03D1BA8C MOV X19, X0
	0x03D1BA90 TBNZ X8, 0x0, 0x3D1BAB4
	0x03D1BA94 ADRP X0, 0x447000
	0x03D1BA98 LDR X0, [X0 + 0x7F0]
	0x03D1BA9C BL 0x1C16CF4
	0x03D1BAA0 ADRP X0, 0x449000
	0x03D1BAA4 LDR X0, [X0 + 0x270]
	0x03D1BAA8 BL 0x1C16CF4
	0x03D1BAAC MOVZ W8, 0x1
	0x03D1BAB0 STRB W8, [X20 + 0x949]
	0x03D1BAB4 LDR X0, [X19 + 0x18]
	0x03D1BAB8 CBZ X0, 0x3D1BB1C
	0x03D1BABC ADRP X20, 0x447000
	0x03D1BAC0 LDR X20, [X20 + 0x7F0]
	0x03D1BAC4 LDR X1, [X20]
	0x03D1BAC8 BL 0x2DBE450
	0x03D1BACC LDR X0, [X19 + 0x20]
	0x03D1BAD0 CBZ X0, 0x3D1BB1C
	0x03D1BAD4 LDR X1, [X20]
	0x03D1BAD8 BL 0x2DBE450
	0x03D1BADC LDR X8, [X19 + 0x28]
	0x03D1BAE0 CBZ X8, 0x3D1BB1C
	0x03D1BAE4 LDP W2, W9, [X8 + 0x18]
	0x03D1BAE8 ADD W9, W9, 0x1
	0x03D1BAEC CMP W2, 0x1
	0x03D1BAF0 STP W31, W9, [X8 + 0x18]
	0x03D1BAF4 B.LT 0x3D1BB10
	0x03D1BAF8 LDR X0, [X8 + 0x10]
	0x03D1BAFC LDP X20, X19, [X31 + 0x10]
	0x03D1BB00 MOV W1, W31
	0x03D1BB04 MOV X3, X31
	0x03D1BB08 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6CD000
	007 Move W8, [X22+2353]
	008 Move W21, W2
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x44A000
	016 Move X0, [X0+488]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2353], W8
	020 Move W8, 1860
	021 NotImplemented "Instruction MOVK not yet implemented."
	022 And W31, W21, W8
	023 Compare X20, 0
	024 JumpIfEqual {67}
	025 Move W10, 1856
	026 Move W11, 4
	027 Move W8, W21
	028 ShiftRight W8, 10
	029 And W8, W8, 511
	030 Move W9, 17
	031 NotImplemented "Instruction MOVK not yet implemented."
	032 Move W12, [X20+80]
	033 And W31, W21, W10
	034 Move X22, 0x44A000
	035 And W8, W9, W8
	036 NotImplemented "Instruction CSET not yet implemented."
	037 And W31, W21, W11
	038 Move X22, [X22+488]
	039 NotImplemented "Instruction BFM not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 NotImplemented "Instruction BFM not yet implemented."
	042 NotImplemented "Instruction BICS not yet implemented."
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move W1, W21
	050 Call VisualTreeHierarchyFlagsUpdater.DirtyHierarchy, X0, X1
	051 Move X0, [X22]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X20
	057 Call VisualTreeHierarchyFlagsUpdater.DirtyBoundingBoxHierarchy, X0
	058 Move W8, [X19+32]
	059 Add W8, W8, 1
	060 Move [X19+32], W8
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return 
	067 Call 0x1C17F20

Method: System.Void DirtyHierarchy(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VisualElementFlags mustDirtyFlags)

Disassembly:
	0x03D1BB0C B 0x339FA34
	0x03D1BB10 LDP X20, X19, [X31 + 0x10]
	0x03D1BB14 LDR X30, [X31], #0x20
	0x03D1BB18 RET
	0x03D1BB1C BL 0x1C16F20
	0x03D1BB20 SUB X31, X31, 0x90
	0x03D1BB24 STP X30, X27, [X31 + 0x40]
	0x03D1BB28 STP X26, X25, [X31 + 0x50]
	0x03D1BB2C STP X24, X23, [X31 + 0x60]
	0x03D1BB30 STP X22, X21, [X31 + 0x70]
	0x03D1BB34 STP X20, X19, [X31 + 0x80]
	0x03D1BB38 ADRP X22, 0x6CC000
	0x03D1BB3C LDRB W8, [X22 + 0x94E]
	0x03D1BB40 MOV X20, X2
	0x03D1BB44 MOV X21, X1
	0x03D1BB48 MOV X19, X0
	0x03D1BB4C TBNZ X8, 0x0, 0x3D1BBAC
	0x03D1BB50 ADRP X0, 0x449000
	0x03D1BB54 LDR X0, [X0 + 0x268]
	0x03D1BB58 BL 0x1C16CF4
	0x03D1BB5C ADRP X0, 0x449000
	0x03D1BB60 LDR X0, [X0 + 0x278]
	0x03D1BB64 BL 0x1C16CF4
	0x03D1BB68 ADRP X0, 0x449000
	0x03D1BB6C LDR X0, [X0 + 0x280]
	0x03D1BB70 BL 0x1C16CF4
	0x03D1BB74 ADRP X0, 0x449000
	0x03D1BB78 LDR X0, [X0 + 0x288]
	0x03D1BB7C BL 0x1C16CF4
	0x03D1BB80 ADRP X0, 0x402000
	0x03D1BB84 LDR X0, [X0 + 0xED0]
	0x03D1BB88 BL 0x1C16CF4
	0x03D1BB8C ADRP X0, 0x449000
	0x03D1BB90 LDR X0, [X0 + 0x290]
	0x03D1BB94 BL 0x1C16CF4
	0x03D1BB98 ADRP X0, 0x449000
	0x03D1BB9C LDR X0, [X0 + 0x298]
	0x03D1BBA0 BL 0x1C16CF4
	0x03D1BBA4 MOVZ W8, 0x1
	0x03D1BBA8 STRB W8, [X22 + 0x94E]
	0x03D1BBAC STP X31, X31, [X31 + 0x20]
	0x03D1BBB0 STR X31, [X31 + 0x30]
	0x03D1BBB4 CBZ X21, 0x3D1BD6C
	0x03D1BBB8 MOV X0, X21
	0x03D1BBBC MOV X1, X31
	0x03D1BBC0 BL 0x3DE89D4
	0x03D1BBC4 CBZ X0, 0x3D1BD6C
	0x03D1BBC8 ADRP X25, 0x402000
	0x03D1BBCC LDR X8, [X0]
	0x03D1BBD0 LDR X25, [X25 + 0xED0]
	0x03D1BBD4 LDR X23, [X19 + 0x48]
	0x03D1BBD8 MOV X22, X0
	0x03D1BBDC LDRH W9, [X8 + 0x12E]
	0x03D1BBE0 LDR X1, [X25]
	0x03D1BBE4 CBZ X9, 0x3D1BC08
	0x03D1BBE8 LDR X10, [X8 + 0xB0]
	0x03D1BBEC ADD X10, X10, 0x8
	0x03D1BBF0 LDUR X11, [X10 - 0x8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x6CD000
	011 Move W8, [X21+2354]
	012 Move W19, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x44A000
	019 Move X0, [X0+488]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2354], W8
	023 Compare X20, 0
	024 JumpIfEqual {69}
	025 Move W8, [X20+80]
	026 Move X9, [X20+888]
	027 Add X0, X31, 8
	028 Move X1, X31
	029 Or W8, W8, W19
	030 Move [X20+80], W8
	031 Move [X31+8], X9
	032 Call Hierarchy.get_childCount, X0
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X25, 0x44A000
	035 Move X25, [X25+488]
	036 Move W21, W0
	037 Move W22, W31
	038 Move X8, [X20+888]
	039 Add X0, X31, 8
	040 Move W1, W22
	041 Move X2, X31
	042 Move [X31+8], X8
	043 Call Hierarchy.get_Item, X0, X1
	044 Compare X0, 0
	045 JumpIfEqual {69}
	046 Move W8, [X0+80]
	047 Move X23, X0
	048 NotImplemented "Instruction BICS not yet implemented."
	049 Move X0, [X25]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X23
	055 Move W1, W24
	056 Call VisualTreeHierarchyFlagsUpdater.DirtyHierarchy, X0, X1
	057 Add W22, W22, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X22, [X31+48]
	062 Move X21, [X31+56]
	063 Move X24, [X31+32]
	064 Move X23, [X31+40]
	065 Move X30, [X31+16]
	066 Move X25, [X31+24]
	067 Add X31, X31, 80
	068 Return 
	069 Call 0x1C17F20

Method: System.Void DirtyBoundingBoxHierarchy(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D1BBF4 CMP X11, X1
	0x03D1BBF8 B.EQ 0x3D1BC18
	0x03D1BBFC SUBS X9, X9, 0x1
	0x03D1BC00 ADD X10, X10, 0x10
	0x03D1BC04 B.NE 0x3D1BBF0
	0x03D1BC08 MOVZ W2, 0x11
	0x03D1BC0C MOV X0, X22
	0x03D1BC10 BL 0x1C5C788
	0x03D1BC14 B 0x3D1BC28
	0x03D1BC18 LDR W9, [X10]
	0x03D1BC1C ADD W9, W9, 0x11
	0x03D1BC20 ADD X8, X8, W9, 0x4, SXTW
	0x03D1BC24 ADD X0, X8, 0x138
	0x03D1BC28 LDP X8, X2, [X0]
	0x03D1BC2C MOV X0, X22
	0x03D1BC30 MOV X1, X23
	0x03D1BC34 BLR X8
	0x03D1BC38 LDR X0, [X19 + 0x48]
	0x03D1BC3C CBZ X0, 0x3D1BD6C
	0x03D1BC40 ADRP X8, 0x449000
	0x03D1BC44 LDR X8, [X8 + 0x298]
	0x03D1BC48 ADRP X26, 0x449000
	0x03D1BC4C ADRP X27, 0x449000
	0x03D1BC50 ADRP X24, 0x449000
	0x03D1BC54 LDR X1, [X8]
	0x03D1BC58 LDR X26, [X26 + 0x280]
	0x03D1BC5C LDR X27, [X27 + 0x268]
	0x03D1BC60 LDR X24, [X24 + 0x278]
	0x03D1BC64 ADD X8, X31, 0x8
	0x03D1BC68 BL 0x2FDFD28
	0x03D1BC6C LDUR V0, [X31 + 0x8]
	0x03D1BC70 LDR X8, [X31 + 0x18]
	0x03D1BC74 STR V0, [X31 + 0x2]
	0x03D1BC78 STR X8, [X31 + 0x30]
	0x03D1BC7C LDR X1, [X26]
	0x03D1BC80 ADD X0, X31, 0x20
	0x03D1BC84 BL 0x2BBE90C
	0x03D1BC88 TBZ X0, 0x0, 0x3D1BD2C
	0x03D1BC8C LDR X0, [X27]
	0x03D1BC90 LDR W22, [X31 + 0x30]
	0x03D1BC94 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {49}
	006 Move W1, 1
	007 Move X2, X31
	008 Move X19, X0
	009 Call VisualElement.set_isBoundingBoxDirty, X0, X1
	010 Move W1, 1
	011 Move X0, X19
	012 Move X2, X31
	013 Call VisualElement.set_isWorldBoundingBoxDirty, X0, X1
	014 Move X8, [X19+888]
	015 Add X0, X31, 8
	016 Move X1, X31
	017 Move [X31+8], X8
	018 Call Hierarchy.get_parent, X0
	019 Compare X0, 0
	020 JumpIfEqual {45}
	021 Move X19, X0
	022 Move X0, X19
	023 Move X1, X31
	024 Call VisualElement.get_isBoundingBoxDirty, X0
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {45}
	029 Move W1, 1
	030 Move X0, X19
	031 Move X2, X31
	032 Call VisualElement.set_isBoundingBoxDirty, X0, X1
	033 Move W1, 1
	034 Move X0, X19
	035 Move X2, X31
	036 Call VisualElement.set_isWorldBoundingBoxDirty, X0, X1
	037 Move X8, [X19+888]
	038 Add X0, X31, 8
	039 Move X1, X31
	040 Move [X31+8], X8
	041 Call Hierarchy.get_parent, X0
	042 Move X19, X0
	043 Compare X0, 0
	044 JumpIfNotEqual {22}
	045 Move X30, [X31+16]
	046 Move X19, [X31+24]
	047 Add X31, X31, 32
	048 Return 
	049 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03D1BC98 CBNZ W8, 0x3D1BCA0
	0x03D1BC9C BL 0x1C16DFC
	0x03D1BCA0 MOV X0, X20
	0x03D1BCA4 MOV W1, W22
	0x03D1BCA8 MOV X2, X31
	0x03D1BCAC BL 0x3DE2D2C
	0x03D1BCB0 TBNZ X0, 0x0, 0x3D1BC7C
	0x03D1BCB4 MOV X0, X21
	0x03D1BCB8 MOV X1, X31
	0x03D1BCBC BL 0x3DE89D4
	0x03D1BCC0 MOV X23, X0
	0x03D1BCC4 CBZ X0, 0x3D1BD68
	0x03D1BCC8 LDR X8, [X23]
	0x03D1BCCC LDR X1, [X25]
	0x03D1BCD0 LDRH W9, [X8 + 0x12E]
	0x03D1BCD4 CBZ X9, 0x3D1BCF8
	0x03D1BCD8 LDR X10, [X8 + 0xB0]
	0x03D1BCDC ADD X10, X10, 0x8
	0x03D1BCE0 LDUR X11, [X10 - 0x8]
	0x03D1BCE4 CMP X11, X1
	0x03D1BCE8 B.EQ 0x3D1BD08
	0x03D1BCEC SUBS X9, X9, 0x1
	0x03D1BCF0 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+32]
	004 Move W9, [X0+36]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move X19, X0
	010 Move X0, [X0+24]
	011 Move [X19+36], W8
	012 Compare X0, 0
	013 JumpIfEqual {30}
	014 Move X1, X31
	015 Call BaseVisualElementPanel.UpdateElementUnderPointers, X0
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {30}
	019 Move X8, [X0]
	020 Move X9, [X8+920]
	021 Move X1, [X8+928]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Compare X0, 0
	024 JumpIfEqual {30}
	025 Move X1, X31
	026 Move X30, [X31+16]
	027 Move X19, [X31+24]
	028 Call VisualElement.UpdateBoundingBox, X0
	029 Return 
	030 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D1BCF4 B.NE 0x3D1BCE0
	0x03D1BCF8 MOVZ W2, 0x12
	0x03D1BCFC MOV X0, X23

ISIL:
	001 Move X1, X31
	002 Move [X0+32], X31
	003 Call Object..ctor, X0
	004 Return 

Method: System.Void .cctor()

Disassembly:
	0x03D1BD00 BL 0x1C5C788
	0x03D1BD04 B 0x3D1BD18
	0x03D1BD08 LDR W9, [X10]
	0x03D1BD0C ADD W9, W9, 0x12
	0x03D1BD10 ADD X8, X8, W9, 0x4, SXTW
	0x03D1BD14 ADD X0, X8, 0x138
	0x03D1BD18 LDP X8, X2, [X0]
	0x03D1BD1C MOV X0, X23
	0x03D1BD20 MOV W1, W22
	0x03D1BD24 BLR X8
	0x03D1BD28 B 0x3D1BC7C
	0x03D1BD2C LDR X1, [X24]
	0x03D1BD30 ADD X0, X31, 0x20
	0x03D1BD34 BL 0x2BBE908
	0x03D1BD38 LDR X8, [X19 + 0x48]
	0x03D1BD3C CBZ X8, 0x3D1BD6C
	0x03D1BD40 LDR W9, [X8 + 0x1C]
	0x03D1BD44 LDP X20, X19, [X31 + 0x80]
	0x03D1BD48 LDP X22, X21, [X31 + 0x70]
	0x03D1BD4C LDP X24, X23, [X31 + 0x60]
	0x03D1BD50 LDP X26, X25, [X31 + 0x50]
	0x03D1BD54 LDP X30, X27, [X31 + 0x40]
	0x03D1BD58 ADD W9, W9, 0x1
	0x03D1BD5C STP W31, W9, [X8 + 0x18]
	0x03D1BD60 ADD X31, X31, 0x90
	0x03D1BD64 RET
	0x03D1BD68 BL 0x1C16F20
	0x03D1BD6C BL 0x1C16F20
	0x03D1BD70 B 0x3D1BD84
	0x03D1BD74 B 0x3D1BD84
	0x03D1BD78 B 0x3D1BD84
	0x03D1BD7C B 0x3D1BD84
	0x03D1BD80 B 0x3D1BD84
	0x03D1BD84 MOV X20, X0
	0x03D1BD88 CMP W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6CD000
	006 Move X20, 0x44A000
	007 Move X19, 0x44A000
	008 Move W8, [X21+2355]
	009 Move X20, [X20+496]
	010 Move X19, [X19+488]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x44A000
	016 Move X0, [X0+488]
	017 Call 0x1C17CF4
	018 Move X0, 0x44A000
	019 Move X0, [X0+496]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2355], W8
	023 Move X8, [X19]
	024 Move X9, [X20]
	025 Move W1, 1
	026 Move W2, W31
	027 Move X8, [X8+184]
	028 Move W3, W31
	029 Move X4, X31
	030 Move [X8], X9
	031 Move X8, [X19]
	032 Move X8, [X8+184]
	033 Move X0, [X8]
	034 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	035 Move X8, [X19]
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8+8], X0
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 

