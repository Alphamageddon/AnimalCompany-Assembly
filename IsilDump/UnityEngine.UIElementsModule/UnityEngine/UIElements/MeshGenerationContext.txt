Type: UnityEngine.UIElements.MeshGenerationContext

Method: UnityEngine.UIElements.Painter2D get_painter2D()

Disassembly:
	0x03DC6C74 ADRP X0, 0x39F000
	0x03DC6C78 LDR X0, [X0 + 0x358]
	0x03DC6C7C BL 0x1C16CF4
	0x03DC6C80 MOVZ W8, 0x1
	0x03DC6C84 STRB W8, [X21 + 0x16E]
	0x03DC6C88 LDR X1, [X20]
	0x03DC6C8C ADD X0, X19, 0x8
	0x03DC6C90 BL 0x266C920
	0x03DC6C94 LDR X0, [X0 + 0x40]
	0x03DC6C98 LDP X20, X19, [X31 + 0x10]
	0x03DC6C9C LDP X30, X21, [X31], #0x20
	0x03DC6CA0 RET
	0x03DC6CA4 STP X30, X21, [X31 - 0x20]!
	0x03DC6CA8 STP X20, X19, [X31 + 0x10]
	0x03DC6CAC ADRP X21, 0x622000
	0x03DC6CB0 ADRP X20, 0x39F000
	0x03DC6CB4 LDRB W8, [X21 + 0x180]
	0x03DC6CB8 LDR X20, [X20 + 0x358]
	0x03DC6CBC MOV X19, X0
	0x03DC6CC0 TBNZ X8, 0x0, 0x3DC6CD8
	0x03DC6CC4 ADRP X0, 0x39F000
	0x03DC6CC8 LDR X0, [X0 + 0x358]
	0x03DC6CCC BL 0x1C16CF4
	0x03DC6CD0 MOVZ W8, 0x1
	0x03DC6CD4 STRB W8, [X21 + 0x180]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x623000
	005 Move W8, [X20+322]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3A0000
	012 Move X0, [X0+352]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+322], W8
	016 Move X20, [X19+16]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0x3A0000
	020 Move X8, [X8+352]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X19
	024 Move X20, X0
	025 Call Painter2D..ctor, X0, X1
	026 Move [X19+16], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Boolean get_hasPainter2D()

Disassembly:
	0x03DC6D30 BL 0x266DB18
	0x03DC6D34 LDR W0, [X0 + 0xC8]
	0x03DC6D38 LDP X20, X19, [X31 + 0x10]
	0x03DC6D3C LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .ctor(UnityEngine.UIElements.IStylePainter painter)

Disassembly:
	0x03DC6D40 RET
	0x03DC6D44 STP X30, X21, [X31 - 0x20]!
	0x03DC6D48 STP X20, X19, [X31 + 0x10]
	0x03DC6D4C ADRP X21, 0x622000
	0x03DC6D50 ADRP X20, 0x39F000
	0x03DC6D54 LDRB W8, [X21 + 0x151]
	0x03DC6D58 LDR X20, [X20 + 0x358]
	0x03DC6D5C MOV X19, X0
	0x03DC6D60 TBNZ X8, 0x0, 0x3DC6D78
	0x03DC6D64 ADRP X0, 0x39F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+24], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void .cctor()

Disassembly:
	0x03DC6D68 LDR X0, [X0 + 0x358]
	0x03DC6D6C BL 0x1C16CF4
	0x03DC6D70 MOVZ W8, 0x1
	0x03DC6D74 STRB W8, [X21 + 0x151]
	0x03DC6D78 LDR X1, [X20]
	0x03DC6D7C ADD X0, X19, 0x8
	0x03DC6D80 BL 0x266C920
	0x03DC6D84 LDR W0, [X0 + 0x8]
	0x03DC6D88 LDP X20, X19, [X31 + 0x10]
	0x03DC6D8C LDP X30, X21, [X31], #0x20
	0x03DC6D90 RET
	0x03DC6D94 STP X30, X21, [X31 - 0x20]!
	0x03DC6D98 STP X20, X19, [X31 + 0x10]
	0x03DC6D9C ADRP X21, 0x622000
	0x03DC6DA0 ADRP X20, 0x39F000
	0x03DC6DA4 LDRB W8, [X21 + 0x177]
	0x03DC6DA8 LDR X20, [X20 + 0x358]
	0x03DC6DAC MOV X19, X0
	0x03DC6DB0 TBNZ X8, 0x0, 0x3DC6DC8
	0x03DC6DB4 ADRP X0, 0x39F000
	0x03DC6DB8 LDR X0, [X0 + 0x358]
	0x03DC6DBC BL 0x1C16CF4
	0x03DC6DC0 MOVZ W8, 0x1
	0x03DC6DC4 STRB W8, [X21 + 0x177]
	0x03DC6DC8 LDR X1, [X20]
	0x03DC6DCC ADD X0, X19, 0x8
	0x03DC6DD0 BL 0x266C920
	0x03DC6DD4 LDUR X0, [X0 + 0x7C]
	0x03DC6DD8 LDP X20, X19, [X31 + 0x10]
	0x03DC6DDC LDP X30, X21, [X31], #0x20
	0x03DC6DE0 RET
	0x03DC6DE4 STP X30, X21, [X31 - 0x20]!
	0x03DC6DE8 STP X20, X19, [X31 + 0x10]
	0x03DC6DEC ADRP X21, 0x622000
	0x03DC6DF0 ADRP X20, 0x39F000
	0x03DC6DF4 LDRB W8, [X21 + 0x176]
	0x03DC6DF8 LDR X20, [X20 + 0x358]
	0x03DC6DFC MOV X19, X0
	0x03DC6E00 TBNZ X8, 0x0, 0x3DC6E18
	0x03DC6E04 ADRP X0, 0x39F000
	0x03DC6E08 LDR X0, [X0 + 0x358]
	0x03DC6E0C BL 0x1C16CF4
	0x03DC6E10 MOVZ W8, 0x1
	0x03DC6E14 STRB W8, [X21 + 0x176]
	0x03DC6E18 LDR X1, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x623000
	007 Move X22, 0x3A4000
	008 Move X19, 0x3A0000
	009 Move X20, 0x3A4000
	010 Move W8, [X21+323]
	011 Move X22, [X22+560]
	012 Move X19, [X19+536]
	013 Move X20, [X20+568]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x3A0000
	019 Move X0, [X0+536]
	020 Call 0x1C17CF4
	021 Move X0, 0x3A4000
	022 Move X0, [X0+568]
	023 Call 0x1C17CF4
	024 Move X0, 0x3A4000
	025 Move X0, [X0+560]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+323], W8
	029 Move X0, [X22]
	030 Move W1, 1
	031 Move W2, W31
	032 Move W3, W31
	033 Move X4, X31
	034 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	035 Move X8, [X19]
	036 Move W1, 1
	037 Move W2, W31
	038 Move W3, W31
	039 Move X8, [X8+184]
	040 Move X4, X31
	041 Move [X8], X0
	042 Move X0, [X20]
	043 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	044 Move X8, [X19]
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X8, [X8+184]
	050 Move [X8+8], X0
	051 Move X30, [X31+48]
	052 Return 

