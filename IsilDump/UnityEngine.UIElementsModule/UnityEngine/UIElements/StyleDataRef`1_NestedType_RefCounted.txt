Type: UnityEngine.UIElements.StyleDataRef`1/RefCounted

Method: System.Int32 get_refCount()

Disassembly:
	0x025C48F8 MOVZ W24, 0x1
	0x025C48FC B 0x25C491C

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x025C4900 LDR X8, [X19 + 0x20]
	0x025C4904 MOV X0, X20
	0x025C4908 LDR X8, [X8 + 0xC0]
	0x025C490C LDR X1, [X8 + 0x30]
	0x025C4910 LDR X8, [X1]
	0x025C4914 BLR X8
	0x025C4918 AND W24, W0, 0x1
	0x025C491C LDR X0, [X20 + 0x18]
	0x025C4920 STRB W24, [X20 + 0x50]
	0x025C4924 CBZ X0, 0x25C4954
	0x025C4928 ADRP X8, 0x1B58000
	0x025C492C LDR X8, [X8 + 0x3B0]
	0x025C4930 LDR X9, [X8]
	0x025C4934 LDR X8, [X0]
	0x025C4938 CMP X8, X9
	0x025C493C B.EQ 0x25C4968
	0x025C4940 ADRP X9, 0x1B58000
	0x025C4944 LDR X9, [X9 + 0x3F8]
	0x025C4948 LDR X9, [X9]
	0x025C494C CMP X8, X9
	0x025C4950 B.EQ 0x25C497C
	0x025C4954 LDP X20, X19, [X31 + 0x30]
	0x025C4958 LDP X22, X21, [X31 + 0x20]
	0x025C495C LDP X24, X23, [X31 + 0x10]
	0x025C4960 LDP X30, X25, [X31], #0x40
	0x025C4964 RET
	0x025C4968 LDP X20, X19, [X31 + 0x30]
	0x025C496C LDP X22, X21, [X31 + 0x20]
	0x025C4970 LDP X24, X23, [X31 + 0x10]
	0x025C4974 LDP X30, X25, [X31], #0x40
	0x025C4978 B 0x1C16E08
	0x025C497C BL 0x1C16E08
	0x025C4980 LDR X21, [X0]
	0x025C4984 CBZ X21, 0x25C4C94
	0x025C4988 LDR X8, [X21]
	0x025C498C LDRB W23, [X20 + 0x20]
	0x025C4990 MOVZ W1, 0x1
	0x025C4994 MOV X0, X21
	0x025C4998 LDR X9, [X8 + 0x298]
	0x025C499C LDR X2, [X8 + 0x2A0]
	0x025C49A0 BLR X9
	0x025C49A4 LDR X8, [X19 + 0x20]
	0x025C49A8 ADRP X25, 0x1B2F000
	0x025C49AC MOV X22, X0
	0x025C49B0 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move W8, 1
	009 Move [X19+16], W8
	010 Move X8, [X20+32]
	011 Move X8, [X8+192]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Move W8, [X0+224]
	020 Compare W8, 0
	021 JumpIfNotEqual {23}
	022 Call 0x1C17DFC
	023 Move X8, [X20+32]
	024 Move X8, [X8+192]
	025 Move X8, [X8+8]
	026 Add X9, X8, 309
	027 NotImplemented "Instruction LDRH not yet implemented."
	028 Move TEMP, X9
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {39}
	032 Move X0, X8
	033 Call 0x1C5D684
	034 Move X8, [X20+32]
	035 Move X8, [X8+192]
	036 Move X8, [X8+8]
	037 Add X9, X8, 309
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X0, X8
	040 Move X10, [X0+184]
	041 Move W10, [X10]
	042 Add W20, W10, 1
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {50}
	047 Move X0, X8
	048 Call 0x1C5D684
	049 Move X8, X0
	050 Move X8, [X8+184]
	051 Move [X8], W20
	052 Move [X19+20], W20
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Return 

Method: System.Void Acquire()

Disassembly:
	0x025C49B4 LDR X25, [X25 + 0x6C0]
	0x025C49B8 CBZ W23, 0x25C4A24
	0x025C49BC LDR X0, [X25]
	0x025C49C0 LDR X23, [X8 + 0x38]

ISIL:
	001 Move W8, [X0+16]
	002 Add W8, W8, 1
	003 Move [X0+16], W8
	004 Return 

Method: System.Void Release()

Disassembly:
	0x025C49C4 LDR W9, [X0 + 0xE0]
	0x025C49C8 CBNZ W9, 0x25C49D0
	0x025C49CC BL 0x1C16DFC
	0x025C49D0 MOV X0, X23

ISIL:
	001 Move W8, [X0+16]
	002 Subtract W8, W8, 1
	003 Move [X0+16], W8
	004 Return 

Method: UnityEngine.UIElements.StyleDataRef`1/RefCounted<T> Copy()

Disassembly:
	0x025C49D4 MOV X1, X31
	0x025C49D8 BL 0x338C698
	0x025C49DC MOV X1, X22
	0x025C49E0 MOV X2, X31
	0x025C49E4 BL 0x33C4FD0
	0x025C49E8 LDR X8, [X19 + 0x20]
	0x025C49EC MOV X22, X0
	0x025C49F0 LDR X8, [X8 + 0xC0]
	0x025C49F4 LDR X23, [X8 + 0x40]
	0x025C49F8 LDRB W8, [X23 + 0x135]
	0x025C49FC TBNZ X8, 0x0, 0x25C4A0C
	0x025C4A00 MOV X0, X23
	0x025C4A04 BL 0x1C5C684
	0x025C4A08 MOV X23, X0
	0x025C4A0C CBZ X22, 0x25C4A8C
	0x025C4A10 MOV X0, X22
	0x025C4A14 MOV X1, X23
	0x025C4A18 BL 0x1C16E00
	0x025C4A1C CBNZ X0, 0x25C4A90
	0x025C4A20 B 0x25C4C98
	0x025C4A24 LDR X0, [X25]
	0x025C4A28 LDR X23, [X8 + 0x58]
	0x025C4A2C LDR W9, [X0 + 0xE0]
	0x025C4A30 CBNZ W9, 0x25C4A38
	0x025C4A34 BL 0x1C16DFC
	0x025C4A38 MOV X0, X23
	0x025C4A3C MOV X1, X31
	0x025C4A40 BL 0x338C698
	0x025C4A44 MOV X1, X22
	0x025C4A48 MOV X2, X31
	0x025C4A4C BL 0x33C4FD0
	0x025C4A50 LDR X8, [X19 + 0x20]
	0x025C4A54 MOV X22, X0
	0x025C4A58 LDR X8, [X8 + 0xC0]
	0x025C4A5C LDR X23, [X8 + 0x60]
	0x025C4A60 LDRB W8, [X23 + 0x135]
	0x025C4A64 TBNZ X8, 0x0, 0x25C4A74
	0x025C4A68 MOV X0, X23
	0x025C4A6C BL 0x1C5C684
	0x025C4A70 MOV X23, X0
	0x025C4A74 CBZ X22, 0x25C4B5C
	0x025C4A78 MOV X0, X22
	0x025C4A7C MOV X1, X23

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+288], X29
	003 Move [X31+304], X30
	004 Move [X31+312], X21
	005 Move [X31+320], X20
	006 Move [X31+328], X19
	007 Move X8, [X1+32]
	008 Move X20, X1
	009 Move X21, X0
	010 Move X8, [X8+192]
	011 Move X8, [X8]
	012 Move W9, [X8+309]
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, X0
	020 Move X0, X8
	021 Call 0x1C17F10
	022 Move X8, [X20+32]
	023 Move X19, X0
	024 Move X8, [X8+192]
	025 Move X1, [X8+16]
	026 Call 0x25C4900, X0
	027 Move X8, [X20+32]
	028 Add X0, X21, 24
	029 Move X8, [X8+192]
	030 Move X1, [X8+40]
	031 Add X8, X31, 0
	032 Call InheritedData.Copy, X0
	033 Add X0, X31, 144
	034 Add X1, X31, 0
	035 Move W2, 144
	036 Call 0x3EB2AC0
	037 Compare X19, 0
	038 JumpIfEqual {51}
	039 Add X0, X19, 24
	040 Add X1, X31, 144
	041 Move W2, 144
	042 Call 0x3EB2AC0
	043 Move X0, X19
	044 Move X20, [X31+320]
	045 Move X19, [X31+328]
	046 Move X30, [X31+304]
	047 Move X21, [X31+312]
	048 Move X29, [X31+288]
	049 Add X31, X31, 336
	050 Return X0
	051 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x025C4A80 BL 0x1C16E00
	0x025C4A84 CBNZ X0, 0x25C4B60
	0x025C4A88 B 0x25C4C98
	0x025C4A8C MOV X0, X31
	0x025C4A90 STR X0, [X20 + 0x28]
	0x025C4A94 LDR X8, [X19 + 0x20]
	0x025C4A98 LDR X8, [X8 + 0xC0]
	0x025C4A9C LDR X23, [X8 + 0x40]
	0x025C4AA0 LDRB W8, [X23 + 0x135]
	0x025C4AA4 TBNZ X8, 0x0, 0x25C4AB4
	0x025C4AA8 MOV X0, X23
	0x025C4AAC BL 0x1C5C684
	0x025C4AB0 MOV X23, X0
	0x025C4AB4 CBZ X22, 0x25C4AC8
	0x025C4AB8 MOV X0, X22

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Move W8, [X0+309]
	004 Move TEMP, X8
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfEqual {9}
	008 Call 0x1C5D684
	009 Move X8, [X0+192]
	010 Move X0, [X8+8]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+184]
	018 Move W9, 1
	019 Move [X8], W9
	020 Move X30, [X31+16]
	021 Return 

