Type: UnityEngine.UIElements.EventDispatcher

Method: UnityEngine.UIElements.PointerDispatchState get_pointerState()

Disassembly:
	0x03D9C3F0 ADD X0, X31, 0x20
	0x03D9C3F4 BL 0x2BC434C

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: UnityEngine.UIElements.EventDispatcher CreateForRuntime(System.Collections.Generic.IList`1<UnityEngine.UIElements.IEventDispatchingStrategy> strategies)

Disassembly:
	0x03D9C3F8 CBNZ X20, 0x3D9C404
	0x03D9C3FC MOV X0, X19
	0x03D9C400 BL 0x1D2C690
	0x03D9C404 MOV X0, X20
	0x03D9C408 BL 0x1C16F18
	0x03D9C40C BL 0x1990590
	0x03D9C410 LDRB W8, [X0 + 0x30]
	0x03D9C414 ANDS W31, W8, 0x3
	0x03D9C418 CSET W0, NE
	0x03D9C41C RET
	0x03D9C420 STP X30, X23, [X31 - 0x30]!
	0x03D9C424 STP X22, X21, [X31 + 0x10]
	0x03D9C428 STP X20, X19, [X31 + 0x20]
	0x03D9C42C ADRP X21, 0x64B000
	0x03D9C430 ADRP X20, 0x3CB000
	0x03D9C434 LDRB W8, [X21 + 0xFD0]
	0x03D9C438 LDR X20, [X20 + 0xDB0]
	0x03D9C43C MOV X19, X1
	0x03D9C440 MOV X22, X0
	0x03D9C444 TBNZ X8, 0x0, 0x3D9C474
	0x03D9C448 ADRP X0, 0x380000
	0x03D9C44C LDR X0, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x64C000
	006 Move X21, 0x3CC000
	007 Move W8, [X20+3734]
	008 Move X21, [X21+3376]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3CC000
	015 Move X0, [X0+3376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3734], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X20, X0
	023 Call EventDispatcher..ctor, X0, X1
	024 Move X0, X20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Void .ctor(System.Collections.Generic.IList`1<UnityEngine.UIElements.IEventDispatchingStrategy> strategies)

Disassembly:
	0x03D9C450 BL 0x1C16CF4
	0x03D9C454 ADRP X0, 0x3CB000
	0x03D9C458 LDR X0, [X0 + 0xE10]
	0x03D9C45C BL 0x1C16CF4
	0x03D9C460 ADRP X0, 0x3CB000
	0x03D9C464 LDR X0, [X0 + 0xDB0]
	0x03D9C468 BL 0x1C16CF4
	0x03D9C46C MOVZ W8, 0x1
	0x03D9C470 STRB W8, [X21 + 0xFD0]
	0x03D9C474 LDR X0, [X20]
	0x03D9C478 LDR W8, [X0 + 0xE0]
	0x03D9C47C CBNZ W8, 0x3D9C488
	0x03D9C480 BL 0x1C16DFC
	0x03D9C484 LDR X0, [X20]
	0x03D9C488 LDR X8, [X0 + 0xB8]
	0x03D9C48C LDR X0, [X8]
	0x03D9C490 CBZ X0, 0x3D9C6C0
	0x03D9C494 ADRP X8, 0x3CB000
	0x03D9C498 LDR X8, [X8 + 0xE10]
	0x03D9C49C LDR X1, [X8]
	0x03D9C4A0 BL 0x249468C
	0x03D9C4A4 CBZ X19, 0x3D9C6C0
	0x03D9C4A8 CBZ X22, 0x3D9C6C0
	0x03D9C4AC LDR W21, [X19 + 0x10]
	0x03D9C4B0 ADRP X23, 0x380000
	0x03D9C4B4 LDR X23, [X23 + 0xE0]
	0x03D9C4B8 MOV X20, X0
	0x03D9C4BC MOV X0, X22
	0x03D9C4C0 MOV W1, W21
	0x03D9C4C4 MOV X2, X31
	0x03D9C4C8 BL 0x3DF169C
	0x03D9C4CC TBZ X0, 0x0, 0x3D9C52C
	0x03D9C4D0 CBZ X20, 0x3D9C6C0
	0x03D9C4D4 LDR X0, [X20 + 0x18]
	0x03D9C4D8 CBZ X0, 0x3D9C6C0
	0x03D9C4DC LDR W10, [X0 + 0x1C]
	0x03D9C4E0 LDR X8, [X0 + 0x10]
	0x03D9C4E4 LDR X9, [X23]
	0x03D9C4E8 ADD W10, W10, 0x1
	0x03D9C4EC STR W10, [X0 + 0x1C]
	0x03D9C4F0 CBZ X8, 0x3D9C6C0
	0x03D9C4F4 LDRSW X10, [X0 + 0x18]
	0x03D9C4F8 LDR W11, [X8 + 0x18]
	0x03D9C4FC CMP W10, W11
	0x03D9C500 B.CS 0x3D9C518
	0x03D9C504 ADD W9, W10, 0x1
	0x03D9C508 ADD X8, X8, X10, 0x3, LSL
	0x03D9C50C STR W9, [X0 + 0x18]
	0x03D9C510 STR X22, [X8 + 0x20]
	0x03D9C514 B 0x3D9C52C
	0x03D9C518 LDR X8, [X9 + 0x20]
	0x03D9C51C MOV X1, X22
	0x03D9C520 LDR X8, [X8 + 0xC0]
	0x03D9C524 LDR X2, [X8 + 0x70]
	0x03D9C528 BL 0x301BF90
	0x03D9C52C MOV X0, X22
	0x03D9C530 MOV X1, X31
	0x03D9C534 BL 0x3DF5CF8
	0x03D9C538 CBZ X0, 0x3D9C6AC
	0x03D9C53C MOV X22, X0
	0x03D9C540 MOV X0, X22
	0x03D9C544 MOV X1, X31
	0x03D9C548 BL 0x3DEB850
	0x03D9C54C TBZ X0, 0x0, 0x3D9C57C
	0x03D9C550 LDRB W8, [X19 + 0x30]
	0x03D9C554 TBNZ X8, 0x4, 0x3D9C57C
	0x03D9C558 MOV X0, X22
	0x03D9C55C MOV W1, W21
	0x03D9C560 MOV X2, X31
	0x03D9C564 BL 0x3DF169C
	0x03D9C568 TBZ X0, 0x0, 0x3D9C674
	0x03D9C56C CBZ X20, 0x3D9C6C0
	0x03D9C570 LDR X0, [X20 + 0x18]
	0x03D9C574 CBNZ X0, 0x3D9C624
	0x03D9C578 B 0x3D9C6C0
	0x03D9C57C MOV X0, X22
	0x03D9C580 MOV W1, W21
	0x03D9C584 MOV X2, X31
	0x03D9C588 BL 0x3DF5FCC
	0x03D9C58C TBZ X0, 0x0, 0x3D9C674
	0x03D9C590 LDR W8, [X19 + 0x30]
	0x03D9C594 TBZ X8, 0x1, 0x3D9C5F8
	0x03D9C598 LDR X9, [X22 + 0x18]
	0x03D9C59C CBZ X9, 0x3D9C5F8
	0x03D9C5A0 LDR X9, [X9 + 0x10]
	0x03D9C5A4 CBZ X9, 0x3D9C5F8
	0x03D9C5A8 LDR W9, [X9 + 0x18]
	0x03D9C5AC CMP W9, 0x1
	0x03D9C5B0 B.LT 0x3D9C5F8
	0x03D9C5B4 CBZ X20, 0x3D9C6C0
	0x03D9C5B8 LDR X0, [X20 + 0x10]
	0x03D9C5BC CBZ X0, 0x3D9C6C0
	0x03D9C5C0 LDR W11, [X0 + 0x1C]
	0x03D9C5C4 LDR X9, [X0 + 0x10]
	0x03D9C5C8 LDR X10, [X23]
	0x03D9C5CC ADD W11, W11, 0x1
	0x03D9C5D0 STR W11, [X0 + 0x1C]
	0x03D9C5D4 CBZ X9, 0x3D9C6C0
	0x03D9C5D8 LDRSW X11, [X0 + 0x18]
	0x03D9C5DC LDR W12, [X9 + 0x18]
	0x03D9C5E0 CMP W11, W12
	0x03D9C5E4 B.CS 0x3D9C68C
	0x03D9C5E8 ADD W10, W11, 0x1
	0x03D9C5EC ADD X9, X9, X11, 0x3, LSL
	0x03D9C5F0 STR W10, [X0 + 0x18]
	0x03D9C5F4 STR X22, [X9 + 0x20]
	0x03D9C5F8 TBZ X8, 0x0, 0x3D9C674
	0x03D9C5FC LDR X8, [X22 + 0x18]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x64C000
	012 Move X27, 0x3C7000
	013 Move X26, 0x3CC000
	014 Move X25, 0x3CC000
	015 Move X24, 0x3CC000
	016 Move X23, 0x3CC000
	017 Move X22, 0x3CC000
	018 Move X27, [X27+2264]
	019 Move W8, [X21+3735]
	020 Move X26, [X26+3384]
	021 Move X25, [X25+3392]
	022 Move X24, [X24+3400]
	023 Move X23, [X23+3408]
	024 Move X22, [X22+3416]
	025 Move X20, X1
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {60}
	031 Move X0, 0x3C7000
	032 Move X0, [X0+2264]
	033 Call 0x1C17CF4
	034 Move X0, 0x3CC000
	035 Move X0, [X0+3376]
	036 Call 0x1C17CF4
	037 Move X0, 0x3CC000
	038 Move X0, [X0+3424]
	039 Call 0x1C17CF4
	040 Move X0, 0x3CC000
	041 Move X0, [X0+3416]
	042 Call 0x1C17CF4
	043 Move X0, 0x3CC000
	044 Move X0, [X0+3408]
	045 Call 0x1C17CF4
	046 Move X0, 0x3CC000
	047 Move X0, [X0+3432]
	048 Call 0x1C17CF4
	049 Move X0, 0x3CC000
	050 Move X0, [X0+3384]
	051 Call 0x1C17CF4
	052 Move X0, 0x3CC000
	053 Move X0, [X0+3400]
	054 Call 0x1C17CF4
	055 Move X0, 0x3CC000
	056 Move X0, [X0+3392]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X21+3735], W8
	060 Move X0, [X27]
	061 Call 0x1C17F10
	062 Move X1, X31
	063 Move X21, X0
	064 Call ClickDetector..ctor, X0
	065 Move [X19+16], X21
	066 Move X0, [X26]
	067 Call 0x1C17F10
	068 Move X1, X31
	069 Move X21, X0
	070 Call PointerDispatchState..ctor, X0
	071 Move [X19+40], X21
	072 Move X0, [X25]
	073 Call 0x1C17F10
	074 Move X1, [X24]
	075 Move X21, X0
	076 Call Stack`1<DispatchContext>..ctor, X0
	077 Move X0, X19
	078 Move X1, X31
	079 Move [X19+56], X21
	080 Move [X19+64], W31
	081 Call Object..ctor, X0
	082 Move X0, [X23]
	083 Call 0x1C17F10
	084 Move X1, [X22]
	085 Move X21, X0
	086 Call List`1<Object>..ctor, X0
	087 Move [X19+24], X21
	088 Compare X21, 0
	089 JumpIfEqual {124}
	090 Move X8, 0x3CC000
	091 Move X8, [X8+3424]
	092 Move X22, 0x3CC000
	093 Move X0, X21
	094 Move X1, X20
	095 Move X2, [X8]
	096 Move X22, [X22+3376]
	097 Call List`1<Object>.AddRange, X0, X1
	098 Move X0, [X22]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {104}
	102 Call 0x1C17DFC
	103 Move X0, [X22]
	104 Move X8, [X0+184]
	105 Move X0, [X8]
	106 Compare X0, 0
	107 JumpIfEqual {124}
	108 Move X8, 0x3CC000
	109 Move X8, [X8+3432]
	110 Move X1, [X8]
	111 Call 0x249568C, X0
	112 Move [X19+32], X0
	113 Move X20, [X31+64]
	114 Move X19, [X31+72]
	115 Move X22, [X31+48]
	116 Move X21, [X31+56]
	117 Move X24, [X31+32]
	118 Move X23, [X31+40]
	119 Move X26, [X31+16]
	120 Move X25, [X31+24]
	121 Move X30, [X31+80]
	122 Move X27, [X31+88]
	123 Return 
	124 Call 0x1C17F20

Method: System.Boolean get_dispatchImmediately()

Disassembly:
	0x03D9C600 CBZ X8, 0x3D9C674
	0x03D9C604 LDR X8, [X8 + 0x10]
	0x03D9C608 CBZ X8, 0x3D9C674
	0x03D9C60C LDR W8, [X8 + 0x1C]
	0x03D9C610 CMP W8, 0x1
	0x03D9C614 B.LT 0x3D9C674
	0x03D9C618 CBZ X20, 0x3D9C6C0
	0x03D9C61C LDR X0, [X20 + 0x20]

ISIL:
	001 Move W8, [X0+64]
	002 Compare W8, 0
	003 JumpIfEqual {6}
	004 Move W0, 1
	005 Return X0
	006 Move W8, [X0+48]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Return X0

Method: System.Void set_processingEvents(System.Boolean value)

Disassembly:
	0x03D9C620 CBZ X0, 0x3D9C6C0
	0x03D9C624 LDR W10, [X0 + 0x1C]
	0x03D9C628 LDR X8, [X0 + 0x10]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+65], W8
	003 Return 

Method: System.Void Dispatch(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel, UnityEngine.UIElements.DispatchMode dispatchMode)

Disassembly:
	0x03D9C62C LDR X9, [X23]
	0x03D9C630 ADD W10, W10, 0x1
	0x03D9C634 STR W10, [X0 + 0x1C]
	0x03D9C638 CBZ X8, 0x3D9C6C0
	0x03D9C63C LDRSW X10, [X0 + 0x18]
	0x03D9C640 LDR W11, [X8 + 0x18]
	0x03D9C644 CMP W10, W11
	0x03D9C648 B.CS 0x3D9C660
	0x03D9C64C ADD W9, W10, 0x1
	0x03D9C650 ADD X8, X8, X10, 0x3, LSL
	0x03D9C654 STR W9, [X0 + 0x18]
	0x03D9C658 STR X22, [X8 + 0x20]
	0x03D9C65C B 0x3D9C674
	0x03D9C660 LDR X8, [X9 + 0x20]
	0x03D9C664 MOV X1, X22
	0x03D9C668 LDR X8, [X8 + 0xC0]
	0x03D9C66C LDR X2, [X8 + 0x70]
	0x03D9C670 BL 0x301BF90
	0x03D9C674 MOV X0, X22
	0x03D9C678 MOV X1, X31
	0x03D9C67C BL 0x3DF5CF8
	0x03D9C680 MOV X22, X0
	0x03D9C684 CBNZ X0, 0x3D9C540
	0x03D9C688 B 0x3D9C6AC
	0x03D9C68C LDR X8, [X10 + 0x20]
	0x03D9C690 MOV X1, X22
	0x03D9C694 LDR X8, [X8 + 0xC0]
	0x03D9C698 LDR X2, [X8 + 0x70]
	0x03D9C69C BL 0x301BF90
	0x03D9C6A0 LDR W8, [X19 + 0x30]
	0x03D9C6A4 TBNZ X8, 0x0, 0x3D9C5FC
	0x03D9C6A8 B 0x3D9C674
	0x03D9C6AC MOV X0, X20
	0x03D9C6B0 LDP X20, X19, [X31 + 0x20]
	0x03D9C6B4 LDP X22, X21, [X31 + 0x10]
	0x03D9C6B8 LDP X30, X23, [X31], #0x30
	0x03D9C6BC RET
	0x03D9C6C0 BL 0x1C16F20
	0x03D9C6C4 RET
	0x03D9C6C8 LDR X8, [X0 + 0x48]
	0x03D9C6CC STR X1, [X0 + 0x50]
	0x03D9C6D0 CBZ X8, 0x3D9C6D8
	0x03D9C6D4 RET
	0x03D9C6D8 STR X1, [X0 + 0x48]
	0x03D9C6DC RET
	0x03D9C6E0 STR X30, [X31 - 0x20]!
	0x03D9C6E4 STP X20, X19, [X31 + 0x10]
	0x03D9C6E8 ADRP X20, 0x64B000
	0x03D9C6EC LDRB W8, [X20 + 0xEF1]
	0x03D9C6F0 MOV X19, X0
	0x03D9C6F4 TBNZ X8, 0x0, 0x3D9C718
	0x03D9C6F8 ADRP X0, 0x3C6000
	0x03D9C6FC LDR X0, [X0 + 0xCD8]
	0x03D9C700 BL 0x1C16CF4
	0x03D9C704 ADRP X0, 0x37F000
	0x03D9C708 LDR X0, [X0 + 0x898]
	0x03D9C70C BL 0x1C16CF4
	0x03D9C710 MOVZ W8, 0x1
	0x03D9C714 STRB W8, [X20 + 0xEF1]
	0x03D9C718 CBZ X19, 0x3D9C844
	0x03D9C71C LDR X0, [X19 + 0x50]
	0x03D9C720 CBZ X0, 0x3D9C838
	0x03D9C724 ADRP X8, 0x37F000
	0x03D9C728 LDR X8, [X8 + 0x898]
	0x03D9C72C LDR X9, [X0]
	0x03D9C730 LDR X8, [X8]
	0x03D9C734 LDRB W11, [X9 + 0x130]
	0x03D9C738 LDRB W10, [X8 + 0x130]
	0x03D9C73C CMP W11, W10
	0x03D9C740 B.CC 0x3D9C838
	0x03D9C744 LDR X9, [X9 + 0xC8]
	0x03D9C748 ADD X9, X9, X10, 0x3, LSL
	0x03D9C74C LDUR X9, [X9 - 0x8]
	0x03D9C750 CMP X9, X8
	0x03D9C754 B.NE 0x3D9C838
	0x03D9C758 LDR W1, [X19 + 0x10]
	0x03D9C75C MOV X2, X31
	0x03D9C760 BL 0x3DF6054
	0x03D9C764 TBZ X0, 0x0, 0x3D9C838
	0x03D9C768 LDR W8, [X19 + 0x40]
	0x03D9C76C LDR X10, [X19]
	0x03D9C770 MOVZ W9, 0x208
	0x03D9C774 LDR X1, [X19 + 0x50]
	0x03D9C778 ORR W8, W8, W9, 0x0
	0x03D9C77C STR W8, [X19 + 0x40]
	0x03D9C780 LDP X8, X2, [X10 + 0x1E8]
	0x03D9C784 MOV X0, X19
	0x03D9C788 BLR X8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x64C000
	009 Move W8, [X23+3736]
	010 Move W22, W3
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x3CC000
	019 Move X0, [X0+3440]
	020 Call 0x1C17CF4
	021 Move X0, 0x3CC000
	022 Move X0, [X0+3448]
	023 Call 0x1C17CF4
	024 Move X0, 0x3CC000
	025 Move X0, [X0+3456]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+3736], W8
	029 Compare X20, 0
	030 JumpIfEqual {112}
	031 Move X23, 0x3CC000
	032 Move X24, 0x3CC000
	033 Move X23, [X23+3448]
	034 Move X24, [X24+3440]
	035 Move X0, X20
	036 Call EventBase.MarkReceivedByDispatcher, X0
	037 Move X8, [X20]
	038 Move X0, X20
	039 Move X9, [X8+392]
	040 Move X1, [X8+400]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X8, [X23]
	043 Move X23, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, [X24]
	050 Call 0x2D0E5C8
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, [X20+64]
	053 Move TEMP, X8
	054 And TEMP, TEMP, 32
	055 Compare TEMP, 32
	056 JumpIfNotEqual {112}
	057 Move X0, [X20+112]
	058 Compare X0, 0
	059 JumpIfEqual {112}
	060 Move X1, X31
	061 Call Event.get_rawType, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move X30, [X31+64]
	070 Return 
	071 Move W8, [X21+64]
	072 Compare W8, 0
	073 JumpIfEqual {86}
	074 Move X0, X21
	075 Move X1, X20
	076 Move X2, X19
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Call EventDispatcher.ProcessEvent, X0, X1, X2
	085 Return 
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W8, [X21+48]
	088 Compare W8, 0
	089 JumpIfEqual {74}
	090 Move X8, [X20]
	091 Move X0, X20
	092 Move X9, [X8+520]
	093 Move X1, [X8+528]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X0, [X21+32]
	096 Compare X0, 0
	097 JumpIfEqual {112}
	098 Move X8, 0x3CC000
	099 Move X8, [X8+3456]
	100 Move X1, X20
	101 Move X2, X19
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X3, [X8]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X24, [X31+16]
	108 Move X23, [X31+24]
	109 Move X30, [X31+64]
	110 Call Queue`1<EventRecord>.Enqueue, X0, X1
	111 Return 
	112 Call 0x1C17F20

Method: System.Void CloseGate()

Disassembly:
	0x03D9C2A0 LDUR X11, [X10 - 0x8]
	0x03D9C2A4 CMP X11, X1
	0x03D9C2A8 B.EQ 0x3D9C2C8
	0x03D9C2AC SUBS X9, X9, 0x1

ISIL:
	001 Move W8, [X0+48]
	002 Add W8, W8, 1
	003 Move [X0+48], W8
	004 Return 

Method: System.Void OpenGate()

Disassembly:
	0x03D9C2C8 LDR W9, [X10]
	0x03D9C2CC ADD W9, W9, 0x1
	0x03D9C2D0 ADD X8, X8, W9, 0x4, SXTW
	0x03D9C2D4 ADD X0, X8, 0x138
	0x03D9C2D8 LDP X8, X3, [X0]
	0x03D9C2DC MOV X0, X22
	0x03D9C2E0 MOV X1, X21
	0x03D9C2E4 MOV X2, X20
	0x03D9C2E8 BLR X8
	0x03D9C2EC TBNZ X19, 0x0, 0x3D9C320
	0x03D9C2F0 CBZ X21, 0x3D9C388
	0x03D9C2F4 LDR W8, [X21 + 0x40]
	0x03D9C2F8 AND W8, W8, W29, 0x0
	0x03D9C2FC CMP W8, 0x20
	0x03D9C300 B.NE 0x3D9C320
	0x03D9C304 LDR X0, [X21 + 0x70]
	0x03D9C308 CBZ X0, 0x3D9C320
	0x03D9C30C MOV X1, X31
	0x03D9C310 BL 0x3C62C04
	0x03D9C314 CMP W0, 0xC
	0x03D9C318 CSET W22, NE
	0x03D9C31C B 0x3D9C324
	0x03D9C320 MOVZ W22, 0x1
	0x03D9C324 LDR X0, [X26]
	0x03D9C328 LDR W8, [X0 + 0xE0]
	0x03D9C32C CBNZ W8, 0x3D9C334
	0x03D9C330 BL 0x1C16DFC
	0x03D9C334 LDR X1, [X27]
	0x03D9C338 MOV W0, W22
	0x03D9C33C MOV X2, X31
	0x03D9C340 BL 0x3C06F88
	0x03D9C344 CBZ X21, 0x3D9C384
	0x03D9C348 LDRB W8, [X21 + 0x40]
	0x03D9C34C ANDS W31, W8, W28, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x64C000
	006 Move X20, 0x358000
	007 Move W8, [X21+3737]
	008 Move X20, [X20+2600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x358000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3737], W8
	019 Move X0, [X20]
	020 Move W20, [X19+48]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move X1, X31
	028 Call Debug.Assert, X0
	029 Move W8, [X19+48]
	030 Compare W8, 0
	031 JumpIfEqual {39}
	032 Subtract W8, W8, 1
	033 Move [X19+48], W8
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call EventDispatcher.ProcessEventQueue, X0
	045 Return 

Method: System.Void ProcessEventQueue()

Disassembly:
	0x03D9CD4C TBNZ X8, 0x0, 0x3D9CD70
	0x03D9CD50 ADRP X0, 0x3CB000
	0x03D9CD54 LDR X0, [X0 + 0xE98]
	0x03D9CD58 BL 0x1C16CF4
	0x03D9CD5C ADRP X0, 0x3CB000
	0x03D9CD60 LDR X0, [X0 + 0xE90]
	0x03D9CD64 BL 0x1C16CF4
	0x03D9CD68 MOVZ W8, 0x1
	0x03D9CD6C STRB W8, [X20 + 0xE9F]
	0x03D9CD70 LDR X0, [X21]
	0x03D9CD74 BL 0x1C16F10
	0x03D9CD78 LDR X1, [X19]
	0x03D9CD7C MOV X19, X0
	0x03D9CD80 BL 0x24F2A64
	0x03D9CD84 MOV X0, X19
	0x03D9CD88 LDP X20, X19, [X31 + 0x10]
	0x03D9CD8C LDP X30, X21, [X31], #0x20
	0x03D9CD90 RET
	0x03D9CD94 STP X30, X23, [X31 - 0x30]!
	0x03D9CD98 STP X22, X21, [X31 + 0x10]
	0x03D9CD9C STP X20, X19, [X31 + 0x20]
	0x03D9CDA0 ADRP X20, 0x64B000
	0x03D9CDA4 ADRP X19, 0x3CB000
	0x03D9CDA8 LDRB W8, [X20 + 0xEA0]
	0x03D9CDAC LDR X19, [X19 + 0xEA0]
	0x03D9CDB0 TBNZ X8, 0x0, 0x3D9CDF8
	0x03D9CDB4 ADRP X0, 0x3CB000
	0x03D9CDB8 LDR X0, [X0 + 0xEA8]
	0x03D9CDBC BL 0x1C16CF4
	0x03D9CDC0 ADRP X0, 0x3CB000
	0x03D9CDC4 LDR X0, [X0 + 0xEB0]
	0x03D9CDC8 BL 0x1C16CF4
	0x03D9CDCC ADRP X0, 0x3CB000
	0x03D9CDD0 LDR X0, [X0 + 0xEB8]
	0x03D9CDD4 BL 0x1C16CF4
	0x03D9CDD8 ADRP X0, 0x3CB000
	0x03D9CDDC LDR X0, [X0 + 0xEC0]
	0x03D9CDE0 BL 0x1C16CF4
	0x03D9CDE4 ADRP X0, 0x3CB000
	0x03D9CDE8 LDR X0, [X0 + 0xEA0]
	0x03D9CDEC BL 0x1C16CF4
	0x03D9CDF0 MOVZ W8, 0x1
	0x03D9CDF4 STRB W8, [X20 + 0xEA0]
	0x03D9CDF8 LDR X0, [X19]
	0x03D9CDFC ADRP X22, 0x3CB000
	0x03D9CE00 ADRP X23, 0x3CB000
	0x03D9CE04 ADRP X21, 0x3CB000
	0x03D9CE08 LDR W8, [X0 + 0xE0]
	0x03D9CE0C LDR X22, [X22 + 0xEB8]
	0x03D9CE10 LDR X23, [X23 + 0xEC0]
	0x03D9CE14 LDR X21, [X21 + 0xEB0]
	0x03D9CE18 CBNZ W8, 0x3D9CE24
	0x03D9CE1C BL 0x1C16DFC
	0x03D9CE20 LDR X0, [X19]
	0x03D9CE24 LDR X8, [X0 + 0xB8]
	0x03D9CE28 LDR X0, [X22]
	0x03D9CE2C ADRP X22, 0x3CB000
	0x03D9CE30 LDR X20, [X8]
	0x03D9CE34 LDR X22, [X22 + 0xEA8]
	0x03D9CE38 BL 0x1C16F10
	0x03D9CE3C LDR X2, [X23]
	0x03D9CE40 MOV X1, X20
	0x03D9CE44 MOV X3, X31
	0x03D9CE48 MOV X19, X0
	0x03D9CE4C BL 0x2D27AA8
	0x03D9CE50 LDR X0, [X21]
	0x03D9CE54 LDR W8, [X0 + 0xE0]
	0x03D9CE58 CBNZ W8, 0x3D9CE60
	0x03D9CE5C BL 0x1C16DFC
	0x03D9CE60 LDR X1, [X22]
	0x03D9CE64 MOV X0, X19
	0x03D9CE68 LDP X20, X19, [X31 + 0x20]
	0x03D9CE6C LDP X22, X21, [X31 + 0x10]
	0x03D9CE70 LDP X30, X23, [X31], #0x30
	0x03D9CE74 B 0x2D0D4C0
	0x03D9CE78 STP X30, X21, [X31 - 0x20]!
	0x03D9CE7C STP X20, X19, [X31 + 0x10]
	0x03D9CE80 ADRP X20, 0x64B000
	0x03D9CE84 ADRP X21, 0x3CB000
	0x03D9CE88 LDRB W8, [X20 + 0xEA1]
	0x03D9CE8C LDR X21, [X21 + 0xEC8]
	0x03D9CE90 MOV X19, X0
	0x03D9CE94 TBNZ X8, 0x0, 0x3D9CEAC
	0x03D9CE98 ADRP X0, 0x3CB000
	0x03D9CE9C LDR X0, [X0 + 0xEC8]
	0x03D9CEA0 BL 0x1C16CF4
	0x03D9CEA4 MOVZ W8, 0x1
	0x03D9CEA8 STRB W8, [X20 + 0xEA1]
	0x03D9CEAC LDR X1, [X21]
	0x03D9CEB0 MOV X0, X19
	0x03D9CEB4 LDP X20, X19, [X31 + 0x10]
	0x03D9CEB8 LDP X30, X21, [X31], #0x20
	0x03D9CEBC B 0x24A2E38
	0x03D9CEC0 STR X30, [X31 - 0x20]!
	0x03D9CEC4 STP X20, X19, [X31 + 0x10]
	0x03D9CEC8 ADRP X19, 0x64B000
	0x03D9CECC ADRP X20, 0x3CB000
	0x03D9CED0 LDRB W8, [X19 + 0xEA2]
	0x03D9CED4 LDR X20, [X20 + 0xEA0]
	0x03D9CED8 TBNZ X8, 0x0, 0x3D9CEF0
	0x03D9CEDC ADRP X0, 0x3CB000
	0x03D9CEE0 LDR X0, [X0 + 0xEA0]
	0x03D9CEE4 BL 0x1C16CF4
	0x03D9CEE8 MOVZ W8, 0x1
	0x03D9CEEC STRB W8, [X19 + 0xEA2]
	0x03D9CEF0 LDR X0, [X20]
	0x03D9CEF4 BL 0x1C16F10
	0x03D9CEF8 MOV X1, X31
	0x03D9CEFC MOV X19, X0
	0x03D9CF00 BL 0x33BDD8C
	0x03D9CF04 LDR X8, [X20]
	0x03D9CF08 LDR X8, [X8 + 0xB8]
	0x03D9CF0C STR X19, [X8]
	0x03D9CF10 LDP X20, X19, [X31 + 0x10]
	0x03D9CF14 LDR X30, [X31], #0x20
	0x03D9CF18 RET
	0x03D9CF1C MOV X1, X31
	0x03D9CF20 B 0x33BDD8C
	0x03D9CF24 STR X30, [X31 - 0x20]!
	0x03D9CF28 STP X20, X19, [X31 + 0x10]
	0x03D9CF2C ADRP X19, 0x64B000
	0x03D9CF30 ADRP X20, 0x3CB000
	0x03D9CF34 LDRB W8, [X19 + 0xEA3]
	0x03D9CF38 LDR X20, [X20 + 0xED0]
	0x03D9CF3C TBNZ X8, 0x0, 0x3D9CF54
	0x03D9CF40 ADRP X0, 0x3CB000
	0x03D9CF44 LDR X0, [X0 + 0xED0]
	0x03D9CF48 BL 0x1C16CF4
	0x03D9CF4C MOVZ W8, 0x1
	0x03D9CF50 STRB W8, [X19 + 0xEA3]
	0x03D9CF54 LDR X0, [X20]
	0x03D9CF58 BL 0x1C16F10
	0x03D9CF5C MOV X19, X0
	0x03D9CF60 BL 0x3D9CE78
	0x03D9CF64 MOV X0, X19
	0x03D9CF68 LDP X20, X19, [X31 + 0x10]
	0x03D9CF6C LDR X30, [X31], #0x20
	0x03D9CF70 RET
	0x03D9CF74 STP X30, X23, [X31 - 0x30]!
	0x03D9CF78 STP X22, X21, [X31 + 0x10]
	0x03D9CF7C STP X20, X19, [X31 + 0x20]
	0x03D9CF80 ADRP X20, 0x64B000
	0x03D9CF84 ADRP X19, 0x3CB000
	0x03D9CF88 LDRB W8, [X20 + 0xEA4]
	0x03D9CF8C LDR X19, [X19 + 0xED8]
	0x03D9CF90 TBNZ X8, 0x0, 0x3D9CFD8
	0x03D9CF94 ADRP X0, 0x3CB000
	0x03D9CF98 LDR X0, [X0 + 0xEE0]
	0x03D9CF9C BL 0x1C16CF4
	0x03D9CFA0 ADRP X0, 0x3CB000
	0x03D9CFA4 LDR X0, [X0 + 0xEE8]
	0x03D9CFA8 BL 0x1C16CF4
	0x03D9CFAC ADRP X0, 0x3CB000
	0x03D9CFB0 LDR X0, [X0 + 0xEF0]
	0x03D9CFB4 BL 0x1C16CF4
	0x03D9CFB8 ADRP X0, 0x3CB000
	0x03D9CFBC LDR X0, [X0 + 0xEF8]
	0x03D9CFC0 BL 0x1C16CF4
	0x03D9CFC4 ADRP X0, 0x3CB000
	0x03D9CFC8 LDR X0, [X0 + 0xED8]
	0x03D9CFCC BL 0x1C16CF4
	0x03D9CFD0 MOVZ W8, 0x1
	0x03D9CFD4 STRB W8, [X20 + 0xEA4]
	0x03D9CFD8 LDR X0, [X19]
	0x03D9CFDC ADRP X22, 0x3CB000
	0x03D9CFE0 ADRP X23, 0x3CB000
	0x03D9CFE4 ADRP X21, 0x3CB000
	0x03D9CFE8 LDR W8, [X0 + 0xE0]
	0x03D9CFEC LDR X22, [X22 + 0xEF0]
	0x03D9CFF0 LDR X23, [X23 + 0xEF8]
	0x03D9CFF4 LDR X21, [X21 + 0xEE8]
	0x03D9CFF8 CBNZ W8, 0x3D9D004
	0x03D9CFFC BL 0x1C16DFC
	0x03D9D000 LDR X0, [X19]
	0x03D9D004 LDR X8, [X0 + 0xB8]
	0x03D9D008 LDR X0, [X22]
	0x03D9D00C ADRP X22, 0x3CA000
	0x03D9D010 LDR X20, [X8]
	0x03D9D014 LDR X22, [X22 + 0xEE0]
	0x03D9D018 BL 0x1C16F10
	0x03D9D01C LDR X2, [X23]
	0x03D9D020 MOV X1, X20
	0x03D9D024 MOV X3, X31
	0x03D9D028 MOV X19, X0
	0x03D9D02C BL 0x2D27AA8
	0x03D9D030 LDR X0, [X21]
	0x03D9D034 LDR W8, [X0 + 0xE0]
	0x03D9D038 CBNZ W8, 0x3D9D040
	0x03D9D03C BL 0x1C16DFC
	0x03D9D040 LDR X1, [X22]
	0x03D9D044 MOV X0, X19
	0x03D9D048 LDP X20, X19, [X31 + 0x20]
	0x03D9D04C LDP X22, X21, [X31 + 0x10]
	0x03D9D050 LDP X30, X23, [X31], #0x30
	0x03D9D054 B 0x2D0D4C0
	0x03D9D058 STP X30, X21, [X31 - 0x20]!
	0x03D9D05C STP X20, X19, [X31 + 0x10]
	0x03D9D060 ADRP X20, 0x64A000
	0x03D9D064 ADRP X21, 0x3CA000
	0x03D9D068 LDRB W8, [X20 + 0xEA5]
	0x03D9D06C LDR X21, [X21 + 0xF00]
	0x03D9D070 MOV X19, X0
	0x03D9D074 TBNZ X8, 0x0, 0x3D9D08C
	0x03D9D078 ADRP X0, 0x3CA000
	0x03D9D07C LDR X0, [X0 + 0xF00]
	0x03D9D080 BL 0x1C16CF4
	0x03D9D084 MOVZ W8, 0x1
	0x03D9D088 STRB W8, [X20 + 0xEA5]
	0x03D9D08C LDR X1, [X21]
	0x03D9D090 MOV X0, X19
	0x03D9D094 LDP X20, X19, [X31 + 0x10]
	0x03D9D098 LDP X30, X21, [X31], #0x20
	0x03D9D09C B 0x24A2E38
	0x03D9D0A0 STR X30, [X31 - 0x20]!
	0x03D9D0A4 STP X20, X19, [X31 + 0x10]
	0x03D9D0A8 ADRP X19, 0x64A000
	0x03D9D0AC ADRP X20, 0x3CA000
	0x03D9D0B0 LDRB W8, [X19 + 0xEA6]
	0x03D9D0B4 LDR X20, [X20 + 0xED8]
	0x03D9D0B8 TBNZ X8, 0x0, 0x3D9D0D0
	0x03D9D0BC ADRP X0, 0x3CA000
	0x03D9D0C0 LDR X0, [X0 + 0xED8]
	0x03D9D0C4 BL 0x1C16CF4
	0x03D9D0C8 MOVZ W8, 0x1
	0x03D9D0CC STRB W8, [X19 + 0xEA6]
	0x03D9D0D0 LDR X0, [X20]
	0x03D9D0D4 BL 0x1C16F10
	0x03D9D0D8 MOV X1, X31
	0x03D9D0DC MOV X19, X0
	0x03D9D0E0 BL 0x33BDD8C
	0x03D9D0E4 LDR X8, [X20]
	0x03D9D0E8 LDR X8, [X8 + 0xB8]
	0x03D9D0EC STR X19, [X8]
	0x03D9D0F0 LDP X20, X19, [X31 + 0x10]
	0x03D9D0F4 LDR X30, [X31], #0x20
	0x03D9D0F8 RET
	0x03D9D0FC MOV X1, X31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0x64C000
	015 Move X28, 0x3CC000
	016 Move W8, [X19+3738]
	017 Move X28, [X28+3376]
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {40}
	023 Move X0, 0x3CC000
	024 Move X0, [X0+3376]
	025 Call 0x1C17CF4
	026 Move X0, 0x3CC000
	027 Move X0, [X0+3432]
	028 Call 0x1C17CF4
	029 Move X0, 0x3CC000
	030 Move X0, [X0+3520]
	031 Call 0x1C17CF4
	032 Move X0, 0x3CC000
	033 Move X0, [X0+3528]
	034 Call 0x1C17CF4
	035 Move X0, 0x3CC000
	036 Move X0, [X0+3536]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X19+3738], W8
	040 Move X0, [X28]
	041 Move X19, [X20+32]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X28]
	047 Move X8, [X0+184]
	048 Move X0, [X8]
	049 Compare X0, 0
	050 JumpIfEqual {192}
	051 Move X8, 0x3CC000
	052 Move X8, [X8+3432]
	053 Move X29, 0x3CC000
	054 Move X1, [X8]
	055 Move X29, [X29+3520]
	056 Call 0x249568C, X0
	057 Move W8, 1
	058 Move [X20+32], X0
	059 Move [X20+65], W8
	060 Compare X19, 0
	061 JumpIfEqual {193}
	062 Move W8, [X19+32]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X27, 0x3CC000
	065 Move X22, 0x358000
	066 Move X27, [X27+3528]
	067 Move X22, [X22+2600]
	068 Move X24, 0x119000
	069 Move X21, X31
	070 Add X24, X24, 3672
	071 Move X1, [X27]
	072 Move X0, X19
	073 Call Queue`1<EventRecord>.Dequeue, X0
	074 Move X25, X0
	075 Move X2, X1
	076 Move X0, X20
	077 Move X1, X25
	078 Call EventDispatcher.ProcessEvent, X0, X1, X2
	079 Move X26, X31
	080 Move W23, 6
	081 Compare X25, 0
	082 JumpIfEqual {189}
	083 Move X8, [X25]
	084 Move X1, [X8+544]
	085 Move X9, [X8+536]
	086 Move X0, X25
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Compare X26, 0
	089 JumpIfNotEqual {190}
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Compare W23, 0
	092 JumpIfNotEqual {153}
	093 Move W8, [X19+32]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X23, X0
	097 Move X0, X23
	098 Call 0x3EB2AD0
	099 Move X26, X0
	100 Move X0, 0x3C5000
	101 Move X0, [X0+752]
	102 Call 0x1C17D08
	103 Move X8, [X26]
	104 Move X1, [X8]
	105 Call 0x1C18270
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {124}
	110 Move X8, [X26]
	111 Move [X31+8], X8
	112 Call 0x3EB2AE0
	113 Move X0, X22
	114 Call 0x1C17D08
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Move X1, X31
	122 Call Debug.Assert, X0
	123 Move X21, [X31+8]
	124 Move W0, 8
	125 Call 0x3EB2AF0
	126 Move X8, [X26]
	127 Move [X0], X8
	128 Move X1, X24
	129 Move X2, X31
	130 Call 0x3EB2B00
	131 Move X23, X0
	132 Move W26, W1
	133 Move W8, 1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, X23
	136 Call 0x3EB2AD0
	137 Move X8, [X0]
	138 Move [X31+8], X8
	139 Call 0x3EB2AE0
	140 Move X26, [X31+8]
	141 Move W23, W31
	142 Compare X25, 0
	143 JumpIfNotEqual {83}
	144 Move X26, X1
	145 Move X23, X0
	146 Move X26, X1
	147 Move X23, X0
	148 Call 0x3EB2AE0
	149 Move X22, X31
	150 Move X22, X31
	151 Move X21, X31
	152 Move W23, 7
	153 Move X22, X31
	154 Move [X20+65], W31
	155 Move X0, [X28]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {161}
	159 Call 0x1C17DFC
	160 Move X0, [X28]
	161 Move X8, [X0+184]
	162 Move X0, [X8]
	163 Compare X0, 0
	164 JumpIfEqual {192}
	165 Move X2, [X29]
	166 Move X1, X19
	167 Call 0x24956D8, X0, X1
	168 Compare X22, 0
	169 JumpIfNotEqual {194}
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Compare W23, 0
	172 JumpIfNotEqual {175}
	173 Compare X21, 0
	174 JumpIfNotEqual {196}
	175 Move X20, [X31+96]
	176 Move X19, [X31+104]
	177 Move X22, [X31+80]
	178 Move X21, [X31+88]
	179 Move X24, [X31+64]
	180 Move X23, [X31+72]
	181 Move X26, [X31+48]
	182 Move X25, [X31+56]
	183 Move X28, [X31+32]
	184 Move X27, [X31+40]
	185 Move X29, [X31+16]
	186 Move X30, [X31+24]
	187 Add X31, X31, 112
	188 Return 
	189 Call 0x1C17F20
	190 Move X0, X26
	191 Call 0x1C17F18
	192 Call 0x1C17F20
	193 Call 0x1C17F20
	194 Move X0, X22
	195 Call 0x1C17F18
	196 Move X0, 0x3CB000
	197 Move X0, [X0+3544]
	198 Call 0x1C17D08
	199 Move X1, X0
	200 Move X0, X21
	201 Call 0x1C17DEC
	202 Move [X31+8], X31
	203 Compare X25, 0
	204 JumpIfEqual {219}
	205 Move X8, [X25]
	206 Move X1, [X8+544]
	207 Move X9, [X8+536]
	208 Move X0, X25
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Move X8, [X31+8]
	211 Compare X8, 0
	212 JumpIfEqual {225}
	213 Move X0, [X31+8]
	214 Call 0x1C17F18
	215 Move X23, X0
	216 Move W26, W1
	217 Compare X25, 0
	218 JumpIfNotEqual {205}
	219 Call 0x1C17F20
	220 Call 0x1991590
	221 Move X23, X0
	222 Move X21, X31
	223 Move X23, X0
	224 Move W26, W1
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move X0, X23
	227 Call 0x3EB2AD0
	228 Move X22, [X0]
	229 Call 0x3EB2AE0
	230 Move W23, W31
	231 Move X22, X31
	232 Move X23, X0
	233 Move [X20+65], W31
	234 Move X0, [X28]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {240}
	238 Call 0x1C17DFC
	239 Move X0, [X28]
	240 Move X8, [X0+184]
	241 Move X0, [X8]
	242 Compare X0, 0
	243 JumpIfNotEqual {245}
	244 Call 0x1C17F20
	245 Move X2, [X29]
	246 Move X1, X19
	247 Call 0x24956D8, X0, X1
	248 Compare X22, 0
	249 JumpIfNotEqual {252}
	250 Move X0, X23
	251 Call 0x1D2D690
	252 Move X0, X22
	253 Call 0x1C17F18
	254 Call 0x1991590

Method: System.Void ProcessEvent(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x03D9C82C LDR W8, [X19 + 0x40]
	0x03D9C830 AND W8, W8, 0xFFFFFFF7
	0x03D9C834 STR W8, [X19 + 0x40]
	0x03D9C838 LDP X20, X19, [X31 + 0x10]
	0x03D9C83C LDR X30, [X31], #0x20
	0x03D9C840 RET
	0x03D9C844 BL 0x1C16F20
	0x03D9C848 LDR X0, [X0 + 0x50]
	0x03D9C84C RET
	0x03D9C850 STR X30, [X31 - 0x50]!
	0x03D9C854 STP X26, X25, [X31 + 0x10]
	0x03D9C858 STP X24, X23, [X31 + 0x20]
	0x03D9C85C STP X22, X21, [X31 + 0x30]
	0x03D9C860 STP X20, X19, [X31 + 0x40]
	0x03D9C864 ADRP X20, 0x64B000
	0x03D9C868 ADRP X19, 0x3CB000
	0x03D9C86C LDRB W8, [X20 + 0xE9D]
	0x03D9C870 LDR X19, [X19 + 0xE18]
	0x03D9C874 TBNZ X8, 0x0, 0x3D9C940
	0x03D9C878 ADRP X0, 0x3CB000
	0x03D9C87C LDR X0, [X0 + 0xE20]
	0x03D9C880 BL 0x1C16CF4
	0x03D9C884 ADRP X0, 0x3CB000
	0x03D9C888 LDR X0, [X0 + 0xE28]
	0x03D9C88C BL 0x1C16CF4
	0x03D9C890 ADRP X0, 0x3CB000
	0x03D9C894 LDR X0, [X0 + 0xD30]
	0x03D9C898 BL 0x1C16CF4
	0x03D9C89C ADRP X0, 0x3CB000
	0x03D9C8A0 LDR X0, [X0 + 0xE30]
	0x03D9C8A4 BL 0x1C16CF4
	0x03D9C8A8 ADRP X0, 0x3CB000
	0x03D9C8AC LDR X0, [X0 + 0xE38]
	0x03D9C8B0 BL 0x1C16CF4
	0x03D9C8B4 ADRP X0, 0x3CB000
	0x03D9C8B8 LDR X0, [X0 + 0xE40]
	0x03D9C8BC BL 0x1C16CF4
	0x03D9C8C0 ADRP X0, 0x3CB000
	0x03D9C8C4 LDR X0, [X0 + 0xE48]
	0x03D9C8C8 BL 0x1C16CF4
	0x03D9C8CC ADRP X0, 0x3CB000
	0x03D9C8D0 LDR X0, [X0 + 0xE50]
	0x03D9C8D4 BL 0x1C16CF4
	0x03D9C8D8 ADRP X0, 0x3CB000
	0x03D9C8DC LDR X0, [X0 + 0xE58]
	0x03D9C8E0 BL 0x1C16CF4
	0x03D9C8E4 ADRP X0, 0x3CB000
	0x03D9C8E8 LDR X0, [X0 + 0xE60]
	0x03D9C8EC BL 0x1C16CF4
	0x03D9C8F0 ADRP X0, 0x3CB000
	0x03D9C8F4 LDR X0, [X0 + 0xE68]
	0x03D9C8F8 BL 0x1C16CF4
	0x03D9C8FC ADRP X0, 0x3CB000
	0x03D9C900 LDR X0, [X0 + 0xE70]
	0x03D9C904 BL 0x1C16CF4
	0x03D9C908 ADRP X0, 0x3CB000
	0x03D9C90C LDR X0, [X0 + 0xE78]
	0x03D9C910 BL 0x1C16CF4
	0x03D9C914 ADRP X0, 0x3CB000
	0x03D9C918 LDR X0, [X0 + 0xE80]
	0x03D9C91C BL 0x1C16CF4
	0x03D9C920 ADRP X0, 0x3CB000
	0x03D9C924 LDR X0, [X0 + 0xE88]
	0x03D9C928 BL 0x1C16CF4
	0x03D9C92C ADRP X0, 0x3CB000
	0x03D9C930 LDR X0, [X0 + 0xE18]
	0x03D9C934 BL 0x1C16CF4
	0x03D9C938 MOVZ W8, 0x1
	0x03D9C93C STRB W8, [X20 + 0xE9D]
	0x03D9C940 LDR X0, [X19]
	0x03D9C944 ADRP X26, 0x3CB000
	0x03D9C948 ADRP X20, 0x3CB000
	0x03D9C94C ADRP X25, 0x3CB000
	0x03D9C950 ADRP X24, 0x3CB000
	0x03D9C954 ADRP X21, 0x3CB000
	0x03D9C958 ADRP X23, 0x3CB000
	0x03D9C95C ADRP X22, 0x3CB000
	0x03D9C960 LDR X26, [X26 + 0xE30]
	0x03D9C964 LDR X20, [X20 + 0xE88]
	0x03D9C968 LDR X25, [X25 + 0xE70]
	0x03D9C96C LDR W8, [X0 + 0xE0]
	0x03D9C970 LDR X24, [X24 + 0xE68]
	0x03D9C974 LDR X21, [X21 + 0xD30]
	0x03D9C978 LDR X23, [X23 + 0xE38]
	0x03D9C97C LDR X22, [X22 + 0xE78]
	0x03D9C980 CBNZ W8, 0x3D9C98C
	0x03D9C984 BL 0x1C16DFC
	0x03D9C988 LDR X0, [X19]
	0x03D9C98C LDR X8, [X0 + 0xB8]
	0x03D9C990 LDR X0, [X26]
	0x03D9C994 LDR X19, [X8]
	0x03D9C998 BL 0x1C16F10
	0x03D9C99C LDR X2, [X20]
	0x03D9C9A0 MOV X1, X19
	0x03D9C9A4 MOV X3, X31
	0x03D9C9A8 MOV X20, X0
	0x03D9C9AC BL 0x2D27AA8
	0x03D9C9B0 LDR X0, [X25]
	0x03D9C9B4 BL 0x1C16F10
	0x03D9C9B8 LDR X3, [X24]
	0x03D9C9BC MOVZ W2, 0x64
	0x03D9C9C0 MOV X1, X20
	0x03D9C9C4 MOV X19, X0
	0x03D9C9C8 BL 0x24944D4
	0x03D9C9CC LDR X8, [X21]
	0x03D9C9D0 MOVZ W1, 0x9
	0x03D9C9D4 LDR X8, [X8 + 0xB8]
	0x03D9C9D8 STR X19, [X8]
	0x03D9C9DC LDR X0, [X23]
	0x03D9C9E0 BL 0x1C16D6C
	0x03D9C9E4 LDR X8, [X22]
	0x03D9C9E8 MOV X19, X0
	0x03D9C9EC MOV X0, X8
	0x03D9C9F0 BL 0x1C16F10
	0x03D9C9F4 MOV X1, X31
	0x03D9C9F8 MOV X20, X0
	0x03D9C9FC BL 0x33BDD8C
	0x03D9CA00 CBZ X19, 0x3D9CC7C
	0x03D9CA04 CBZ X20, 0x3D9CA1C
	0x03D9CA08 LDR X8, [X19]
	0x03D9CA0C MOV X0, X20
	0x03D9CA10 LDR X1, [X8 + 0x40]
	0x03D9CA14 BL 0x1C16E00
	0x03D9CA18 CBZ X0, 0x3D9CC70
	0x03D9CA1C LDR W8, [X19 + 0x18]
	0x03D9CA20 CBZ W8, 0x3D9CC6C
	0x03D9CA24 ADRP X8, 0x3CB000
	0x03D9CA28 LDR X8, [X8 + 0xE50]
	0x03D9CA2C STR X20, [X19 + 0x20]
	0x03D9CA30 LDR X0, [X8]
	0x03D9CA34 BL 0x1C16F10
	0x03D9CA38 MOV X1, X31
	0x03D9CA3C MOV X20, X0
	0x03D9CA40 BL 0x33BDD8C
	0x03D9CA44 CBZ X20, 0x3D9CA5C
	0x03D9CA48 LDR X8, [X19]
	0x03D9CA4C MOV X0, X20
	0x03D9CA50 LDR X1, [X8 + 0x40]
	0x03D9CA54 BL 0x1C16E00
	0x03D9CA58 CBZ X0, 0x3D9CC70
	0x03D9CA5C LDR W8, [X19 + 0x18]
	0x03D9CA60 CMP W8, 0x1
	0x03D9CA64 B.LS 0x3D9CC6C
	0x03D9CA68 ADRP X8, 0x3CB000
	0x03D9CA6C LDR X8, [X8 + 0xE48]
	0x03D9CA70 STR X20, [X19 + 0x28]
	0x03D9CA74 LDR X0, [X8]
	0x03D9CA78 BL 0x1C16F10
	0x03D9CA7C MOV X1, X31
	0x03D9CA80 MOV X20, X0
	0x03D9CA84 BL 0x33BDD8C
	0x03D9CA88 CBZ X20, 0x3D9CAA0
	0x03D9CA8C LDR X8, [X19]
	0x03D9CA90 MOV X0, X20
	0x03D9CA94 LDR X1, [X8 + 0x40]
	0x03D9CA98 BL 0x1C16E00
	0x03D9CA9C CBZ X0, 0x3D9CC70
	0x03D9CAA0 LDR W8, [X19 + 0x18]
	0x03D9CAA4 CMP W8, 0x2
	0x03D9CAA8 B.LS 0x3D9CC6C
	0x03D9CAAC ADRP X8, 0x3CB000
	0x03D9CAB0 LDR X8, [X8 + 0xE80]
	0x03D9CAB4 STR X20, [X19 + 0x30]
	0x03D9CAB8 LDR X0, [X8]
	0x03D9CABC BL 0x1C16F10
	0x03D9CAC0 MOV X1, X31
	0x03D9CAC4 MOV X20, X0
	0x03D9CAC8 BL 0x33BDD8C
	0x03D9CACC CBZ X20, 0x3D9CAE4
	0x03D9CAD0 LDR X8, [X19]
	0x03D9CAD4 MOV X0, X20
	0x03D9CAD8 LDR X1, [X8 + 0x40]
	0x03D9CADC BL 0x1C16E00
	0x03D9CAE0 CBZ X0, 0x3D9CC70
	0x03D9CAE4 LDR W8, [X19 + 0x18]
	0x03D9CAE8 CMP W8, 0x3
	0x03D9CAEC B.LS 0x3D9CC6C
	0x03D9CAF0 ADRP X8, 0x3CB000
	0x03D9CAF4 LDR X8, [X8 + 0xE58]
	0x03D9CAF8 STR X20, [X19 + 0x38]
	0x03D9CAFC LDR X0, [X8]
	0x03D9CB00 BL 0x1C16F10
	0x03D9CB04 MOV X1, X31
	0x03D9CB08 MOV X20, X0
	0x03D9CB0C BL 0x33BDD8C
	0x03D9CB10 CBZ X20, 0x3D9CB28
	0x03D9CB14 LDR X8, [X19]
	0x03D9CB18 MOV X0, X20
	0x03D9CB1C LDR X1, [X8 + 0x40]
	0x03D9CB20 BL 0x1C16E00
	0x03D9CB24 CBZ X0, 0x3D9CC70
	0x03D9CB28 LDR W8, [X19 + 0x18]
	0x03D9CB2C CMP W8, 0x4
	0x03D9CB30 B.LS 0x3D9CC6C
	0x03D9CB34 ADRP X8, 0x3CB000
	0x03D9CB38 LDR X8, [X8 + 0xE60]
	0x03D9CB3C STR X20, [X19 + 0x40]
	0x03D9CB40 LDR X0, [X8]
	0x03D9CB44 BL 0x1C16F10
	0x03D9CB48 MOV X1, X31
	0x03D9CB4C MOV X20, X0
	0x03D9CB50 BL 0x33BDD8C
	0x03D9CB54 CBZ X20, 0x3D9CB6C
	0x03D9CB58 LDR X8, [X19]
	0x03D9CB5C MOV X0, X20
	0x03D9CB60 LDR X1, [X8 + 0x40]
	0x03D9CB64 BL 0x1C16E00
	0x03D9CB68 CBZ X0, 0x3D9CC70
	0x03D9CB6C LDR W8, [X19 + 0x18]
	0x03D9CB70 CMP W8, 0x5
	0x03D9CB74 B.LS 0x3D9CC6C
	0x03D9CB78 ADRP X8, 0x3CB000
	0x03D9CB7C LDR X8, [X8 + 0xE20]
	0x03D9CB80 STR X20, [X19 + 0x48]
	0x03D9CB84 LDR X0, [X8]
	0x03D9CB88 BL 0x1C16F10
	0x03D9CB8C MOV X1, X31
	0x03D9CB90 MOV X20, X0
	0x03D9CB94 BL 0x33BDD8C
	0x03D9CB98 CBZ X20, 0x3D9CBB0
	0x03D9CB9C LDR X8, [X19]
	0x03D9CBA0 MOV X0, X20
	0x03D9CBA4 LDR X1, [X8 + 0x40]
	0x03D9CBA8 BL 0x1C16E00
	0x03D9CBAC CBZ X0, 0x3D9CC70
	0x03D9CBB0 LDR W8, [X19 + 0x18]
	0x03D9CBB4 CMP W8, 0x6
	0x03D9CBB8 B.LS 0x3D9CC6C
	0x03D9CBBC ADRP X8, 0x3CB000
	0x03D9CBC0 LDR X8, [X8 + 0xE40]
	0x03D9CBC4 STR X20, [X19 + 0x50]
	0x03D9CBC8 LDR X0, [X8]
	0x03D9CBCC BL 0x1C16F10
	0x03D9CBD0 MOV X1, X31
	0x03D9CBD4 MOV X20, X0
	0x03D9CBD8 BL 0x33BDD8C
	0x03D9CBDC CBZ X20, 0x3D9CBF4
	0x03D9CBE0 LDR X8, [X19]
	0x03D9CBE4 MOV X0, X20
	0x03D9CBE8 LDR X1, [X8 + 0x40]
	0x03D9CBEC BL 0x1C16E00
	0x03D9CBF0 CBZ X0, 0x3D9CC70
	0x03D9CBF4 LDR W8, [X19 + 0x18]
	0x03D9CBF8 CMP W8, 0x7
	0x03D9CBFC B.LS 0x3D9CC6C
	0x03D9CC00 ADRP X8, 0x3CB000
	0x03D9CC04 LDR X8, [X8 + 0xE28]
	0x03D9CC08 STR X20, [X19 + 0x58]
	0x03D9CC0C LDR X0, [X8]
	0x03D9CC10 BL 0x1C16F10
	0x03D9CC14 MOV X1, X31
	0x03D9CC18 MOV X20, X0
	0x03D9CC1C BL 0x33BDD8C
	0x03D9CC20 CBZ X20, 0x3D9CC38
	0x03D9CC24 LDR X8, [X19]
	0x03D9CC28 MOV X0, X20
	0x03D9CC2C LDR X1, [X8 + 0x40]
	0x03D9CC30 BL 0x1C16E00
	0x03D9CC34 CBZ X0, 0x3D9CC70
	0x03D9CC38 LDR W8, [X19 + 0x18]
	0x03D9CC3C CMP W8, 0x8
	0x03D9CC40 B.LS 0x3D9CC6C
	0x03D9CC44 STR X20, [X19 + 0x60]
	0x03D9CC48 LDR X8, [X21]
	0x03D9CC4C LDP X22, X21, [X31 + 0x30]
	0x03D9CC50 LDP X24, X23, [X31 + 0x20]
	0x03D9CC54 LDP X26, X25, [X31 + 0x10]
	0x03D9CC58 LDR X8, [X8 + 0xB8]
	0x03D9CC5C STR X19, [X8 + 0x8]
	0x03D9CC60 LDP X20, X19, [X31 + 0x40]
	0x03D9CC64 LDR X30, [X31], #0x50
	0x03D9CC68 RET
	0x03D9CC6C BL 0x1C16F28
	0x03D9CC70 BL 0x1C16F44
	0x03D9CC74 MOV X1, X31
	0x03D9CC78 BL 0x1C16DEC
	0x03D9CC7C BL 0x1C16F20
	0x03D9CC80 MOV X1, X31
	0x03D9CC84 B 0x33BDD8C
	0x03D9CC88 MOV X1, X31
	0x03D9CC8C B 0x33BDD8C
	0x03D9CC90 MOV X1, X31
	0x03D9CC94 B 0x33BDD8C
	0x03D9CC98 MOV X1, X31
	0x03D9CC9C B 0x33BDD8C
	0x03D9CCA0 MOV X1, X31
	0x03D9CCA4 B 0x33BDD8C
	0x03D9CCA8 MOV X1, X31
	0x03D9CCAC B 0x33BDD8C
	0x03D9CCB0 MOV X1, X31
	0x03D9CCB4 B 0x33BDD8C
	0x03D9CCB8 MOV X1, X31
	0x03D9CCBC B 0x33BDD8C
	0x03D9CCC0 MOV X1, X31
	0x03D9CCC4 B 0x33BDD8C
	0x03D9CCC8 STR X30, [X31 - 0x20]!
	0x03D9CCCC STP X20, X19, [X31 + 0x10]
	0x03D9CCD0 ADRP X19, 0x64B000
	0x03D9CCD4 ADRP X20, 0x3CB000
	0x03D9CCD8 LDRB W8, [X19 + 0xE9E]
	0x03D9CCDC LDR X20, [X20 + 0xE18]
	0x03D9CCE0 TBNZ X8, 0x0, 0x3D9CCF8
	0x03D9CCE4 ADRP X0, 0x3CB000
	0x03D9CCE8 LDR X0, [X0 + 0xE18]
	0x03D9CCEC BL 0x1C16CF4
	0x03D9CCF0 MOVZ W8, 0x1
	0x03D9CCF4 STRB W8, [X19 + 0xE9E]
	0x03D9CCF8 LDR X0, [X20]
	0x03D9CCFC BL 0x1C16F10
	0x03D9CD00 MOV X1, X31
	0x03D9CD04 MOV X19, X0
	0x03D9CD08 BL 0x33BDD8C
	0x03D9CD0C LDR X8, [X20]
	0x03D9CD10 LDR X8, [X8 + 0xB8]
	0x03D9CD14 STR X19, [X8]
	0x03D9CD18 LDP X20, X19, [X31 + 0x10]
	0x03D9CD1C LDR X30, [X31], #0x20
	0x03D9CD20 RET
	0x03D9CD24 MOV X1, X31
	0x03D9CD28 B 0x33BDD8C
	0x03D9CD2C STP X30, X21, [X31 - 0x20]!
	0x03D9CD30 STP X20, X19, [X31 + 0x10]
	0x03D9CD34 ADRP X20, 0x64B000
	0x03D9CD38 ADRP X21, 0x3CB000
	0x03D9CD3C ADRP X19, 0x3CB000
	0x03D9CD40 LDRB W8, [X20 + 0xE9F]
	0x03D9CD44 LDR X21, [X21 + 0xE90]
	0x03D9CD48 LDR X19, [X19 + 0xE98]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X22, 0x64C000
	013 Move W8, [X22+3739]
	014 Move X21, X2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0x358000
	022 Move X0, [X0+2600]
	023 Call 0x1C17CF4
	024 Move X0, 0x3CC000
	025 Move X0, [X0+3472]
	026 Call 0x1C17CF4
	027 Move X0, 0x3CC000
	028 Move X0, [X0+3480]
	029 Call 0x1C17CF4
	030 Move X0, 0x3CC000
	031 Move X0, [X0+3488]
	032 Call 0x1C17CF4
	033 Move X0, 0x381000
	034 Move X0, [X0+3712]
	035 Call 0x1C17CF4
	036 Move X0, 0x3CC000
	037 Move X0, [X0+3496]
	038 Call 0x1C17CF4
	039 Move X0, 0x3CC000
	040 Move X0, [X0+3504]
	041 Call 0x1C17CF4
	042 Move X0, 0x380000
	043 Move X0, [X0+2200]
	044 Call 0x1C17CF4
	045 Move X0, 0x3CC000
	046 Move X0, [X0+3512]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+3739], W8
	050 Move [X31+48], X31
	051 Move [X31+56], X31
	052 Move [X31+32], X31
	053 Move [X31+40], X31
	054 Compare X19, 0
	055 JumpIfEqual {286}
	056 Move W8, [X19+64]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 32
	059 Compare TEMP, 32
	060 JumpIfEqual {62}
	061 Move X22, X31
	062 Move X22, [X19+112]
	063 Compare X22, 0
	064 JumpIfEqual {71}
	065 Move X0, X22
	066 Move X1, X31
	067 Call Event.get_rawType, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W26, W31
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Move W23, W31
	072 Move W26, 1
	073 Add X0, X31, 56
	074 Move X1, X20
	075 Call EventDispatcherGate..ctor, X0, X1
	076 Move X8, [X19]
	077 Move X9, [X8+424]
	078 Move X2, [X8+432]
	079 Move X0, X19
	080 Move X1, X21
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move W8, [X19+64]
	083 Move W9, 65
	084 And W31, W8, W9
	085 Move X0, X20
	086 Move X1, X19
	087 Move X2, X21
	088 Move W3, W23
	089 Call EventDispatcher.ApplyDispatchingStrategies, X0, X1, X2, X3
	090 Move X0, [X19+56]
	091 Compare X0, 0
	092 JumpIfEqual {142}
	093 Move X0, [X0+24]
	094 Compare X0, 0
	095 JumpIfEqual {290}
	096 Move X8, 0x3CC000
	097 Move X8, [X8+3496]
	098 Move X1, [X8]
	099 Add X8, X31, 8
	100 Call List`1<Object>.GetEnumerator, X0
	101 Move X25, 0x3CC000
	102 Move X27, 0x3CC000
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 Move X8, [X31+24]
	105 Move X25, [X25+3480]
	106 Move X27, [X27+3472]
	107 Move [X31+2], V0
	108 Move [X31+48], X8
	109 Move X1, [X25]
	110 Add X0, X31, 32
	111 Call Enumerator<Object>.MoveNext, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {130}
	116 Move X24, [X31+48]
	117 Compare X24, 0
	118 JumpIfEqual {285}
	119 Move X0, X24
	120 Move X1, X31
	121 Call VisualElement.get_panel, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X19+72]
	124 Move [X19+80], X24
	125 Compare X8, 0
	126 JumpIfNotEqual {128}
	127 Move [X19+72], X24
	128 Move X0, X19
	129 Call EventDispatchUtilities.ExecuteDefaultAction, X0
	130 Move X24, X31
	131 Move W25, 14
	132 Move X1, [X27]
	133 Add X0, X31, 32
	134 Call Enumerator<Object>.Dispose, X0
	135 Compare X24, 0
	136 JumpIfNotEqual {291}
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Compare W25, 0
	139 JumpIfNotEqual {191}
	140 Move X8, [X19+72]
	141 Move [X19+80], X8
	142 Move W8, [X19+48]
	143 And W31, W8, 3
	144 Move X8, [X19+72]
	145 Compare X8, 0
	146 JumpIfEqual {159}
	147 Move X9, 0x380000
	148 Move X9, [X9+2200]
	149 Move X10, [X8]
	150 Move X9, [X9]
	151 Move W12, [X10+304]
	152 Move W11, [X9+304]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X10, [X10+200]
	155 Add X10, X10, X11
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 NotImplemented "Instruction CSEL not yet implemented."
	159 Move X0, [X19+80]
	160 Compare X0, 0
	161 JumpIfEqual {173}
	162 Move X8, 0x380000
	163 Move X8, [X8+2200]
	164 Move X9, [X0]
	165 Move X8, [X8]
	166 Move W11, [X9+304]
	167 Move W10, [X8+304]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X9, [X9+200]
	170 Add X9, X9, X10
	171 NotImplemented "Instruction LDUR not yet implemented."
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Compare X21, 0
	174 JumpIfEqual {294}
	175 Move X10, 0x381000
	176 Move X8, [X21]
	177 Move X10, [X10+3712]
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Move X1, [X10]
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X21
	189 Move W2, W31
	190 Call 0x1C5D788
	191 Move X19, X31
	192 NotImplemented "Instruction LDRSW not yet implemented."
	193 Add X8, X8, X9
	194 Add X0, X8, 312
	195 Move X8, [X0]
	196 Move X1, [X0+8]
	197 Move X0, X21
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Move X8, [X19+72]
	200 Move [X19+80], X0
	201 Compare X8, 0
	202 JumpIfNotEqual {204}
	203 Move [X19+72], X0
	204 Compare X0, 0
	205 JumpIfEqual {293}
	206 Move X1, X31
	207 Call VisualElement.get_panel, X0
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X0, X19
	210 Call EventDispatchUtilities.ExecuteDefaultAction, X0
	211 Move X8, [X19]
	212 Move X9, [X8+456]
	213 Move X2, [X8+464]
	214 Move X0, X19
	215 Move X1, X21
	216 NotImplemented "Instruction BLR not yet implemented."
	217 Move X0, [X20+16]
	218 Compare X0, 0
	219 JumpIfEqual {289}
	220 Move X1, X19
	221 Move X2, X31
	222 Call ClickDetector.ProcessEvent, X0, X1
	223 Compare W23, 0
	224 JumpIfNotEqual {232}
	225 Move W8, [X19+64]
	226 And W8, W8, 1
	227 Or W8, W26, W8
	228 Move TEMP, X8
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfNotEqual {265}
	232 Move W19, 1
	233 Move X8, 0x358000
	234 Move X8, [X8+2600]
	235 Move X0, [X8]
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {240}
	239 Call 0x1C17DFC
	240 Move X8, 0x3CC000
	241 Move X8, [X8+3512]
	242 Move X1, [X8]
	243 Move W0, W19
	244 Move X2, X31
	245 Call Debug.Assert, X0, X1
	246 Move X19, X31
	247 Move X0, [X31+56]
	248 Compare X0, 0
	249 JumpIfEqual {286}
	250 Call EventDispatcher.OpenGate, X0
	251 Compare X19, 0
	252 JumpIfNotEqual {287}
	253 Move X20, [X31+128]
	254 Move X19, [X31+136]
	255 Move X22, [X31+112]
	256 Move X21, [X31+120]
	257 Move X24, [X31+96]
	258 Move X23, [X31+104]
	259 Move X26, [X31+80]
	260 Move X25, [X31+88]
	261 Move X30, [X31+64]
	262 Move X27, [X31+72]
	263 Add X31, X31, 144
	264 Return 
	265 Compare X22, 0
	266 JumpIfEqual {295}
	267 Move X0, X22
	268 Move X1, X31
	269 Call Event.get_rawType, X0
	270 NotImplemented "Instruction CMP not yet implemented."
	271 NotImplemented "Instruction CSET not yet implemented."
	272 Move X8, 0x3CC000
	273 Move X8, [X8+3504]
	274 Move X0, [X8]
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X0, X24
	280 Move X1, X19
	281 Call PropagationPaths.Build, X0, X1
	282 Move [X19+56], X0
	283 Compare X0, 0
	284 JumpIfNotEqual {93}
	285 Call 0x1C17F20
	286 Call 0x1C17F20
	287 Move X0, X19
	288 Call 0x1C17F18
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Move X0, X24
	292 Call 0x1C17F18
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Move X25, X0
	297 Move [X31], X1
	298 Move X25, X0
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move [X31], X1
	301 Move X0, X25
	302 Call 0x3EB2AD0
	303 Move X24, [X0]
	304 Call 0x3EB2AE0
	305 Move W25, W31
	306 Move X24, X31
	307 Move X1, [X27]
	308 Add X0, X31, 32
	309 Call Enumerator<Object>.Dispose, X0
	310 Compare X24, 0
	311 JumpIfNotEqual {319}
	312 Move X8, [X31]
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move X0, X25
	315 Call 0x3EB2AD0
	316 Move X19, [X0]
	317 Call 0x3EB2AE0
	318 Move X19, X31
	319 Move X0, X24
	320 Call 0x1C17F18
	321 Move X25, X0
	322 Move [X31], X1
	323 Move X25, X0
	324 Move X0, [X31+56]
	325 Compare X0, 0
	326 JumpIfNotEqual {328}
	327 Call 0x1C17F20
	328 Call EventDispatcher.OpenGate, X0
	329 Compare X19, 0
	330 JumpIfNotEqual {333}
	331 Move X0, X25
	332 Call 0x1D2D690
	333 Move X0, X19
	334 Call 0x1C17F18
	335 Call 0x1991590

Method: System.Void ApplyDispatchingStrategies(UnityEngine.UIElements.EventBase evt, UnityEngine.UIElements.IPanel panel, System.Boolean imguiEventIsInitiallyUsed)

Disassembly:
	0x03D9D118 LDR X20, [X20 + 0xF08]
	0x03D9D11C TBNZ X8, 0x0, 0x3D9D134
	0x03D9D120 ADRP X0, 0x3CA000
	0x03D9D124 LDR X0, [X0 + 0xF08]
	0x03D9D128 BL 0x1C16CF4
	0x03D9D12C MOVZ W8, 0x1
	0x03D9D130 STRB W8, [X19 + 0xEA7]
	0x03D9D134 LDR X0, [X20]
	0x03D9D138 BL 0x1C16F10
	0x03D9D13C MOV X19, X0
	0x03D9D140 BL 0x3D9D058
	0x03D9D144 MOV X0, X19
	0x03D9D148 LDP X20, X19, [X31 + 0x10]
	0x03D9D14C LDR X30, [X31], #0x20
	0x03D9D150 RET
	0x03D9D154 STP X30, X23, [X31 - 0x30]!
	0x03D9D158 STP X22, X21, [X31 + 0x10]
	0x03D9D15C STP X20, X19, [X31 + 0x20]
	0x03D9D160 ADRP X20, 0x64A000
	0x03D9D164 ADRP X19, 0x3CA000
	0x03D9D168 LDRB W8, [X20 + 0xEA8]
	0x03D9D16C LDR X19, [X19 + 0xF10]
	0x03D9D170 TBNZ X8, 0x0, 0x3D9D1B8
	0x03D9D174 ADRP X0, 0x3CA000
	0x03D9D178 LDR X0, [X0 + 0xF18]
	0x03D9D17C BL 0x1C16CF4
	0x03D9D180 ADRP X0, 0x3CA000
	0x03D9D184 LDR X0, [X0 + 0xF20]
	0x03D9D188 BL 0x1C16CF4
	0x03D9D18C ADRP X0, 0x3CA000
	0x03D9D190 LDR X0, [X0 + 0xF28]
	0x03D9D194 BL 0x1C16CF4
	0x03D9D198 ADRP X0, 0x3CA000
	0x03D9D19C LDR X0, [X0 + 0xF30]
	0x03D9D1A0 BL 0x1C16CF4
	0x03D9D1A4 ADRP X0, 0x3CA000
	0x03D9D1A8 LDR X0, [X0 + 0xF10]
	0x03D9D1AC BL 0x1C16CF4
	0x03D9D1B0 MOVZ W8, 0x1
	0x03D9D1B4 STRB W8, [X20 + 0xEA8]
	0x03D9D1B8 LDR X0, [X19]
	0x03D9D1BC ADRP X22, 0x3CA000
	0x03D9D1C0 ADRP X23, 0x3CA000
	0x03D9D1C4 ADRP X21, 0x3CA000
	0x03D9D1C8 LDR W8, [X0 + 0xE0]
	0x03D9D1CC LDR X22, [X22 + 0xF28]
	0x03D9D1D0 LDR X23, [X23 + 0xF30]
	0x03D9D1D4 LDR X21, [X21 + 0xF20]
	0x03D9D1D8 CBNZ W8, 0x3D9D1E4
	0x03D9D1DC BL 0x1C16DFC
	0x03D9D1E0 LDR X0, [X19]
	0x03D9D1E4 LDR X8, [X0 + 0xB8]
	0x03D9D1E8 LDR X0, [X22]
	0x03D9D1EC ADRP X22, 0x3CA000
	0x03D9D1F0 LDR X20, [X8]
	0x03D9D1F4 LDR X22, [X22 + 0xF18]
	0x03D9D1F8 BL 0x1C16F10
	0x03D9D1FC LDR X2, [X23]
	0x03D9D200 MOV X1, X20
	0x03D9D204 MOV X3, X31
	0x03D9D208 MOV X19, X0
	0x03D9D20C BL 0x2D27AA8
	0x03D9D210 LDR X0, [X21]
	0x03D9D214 LDR W8, [X0 + 0xE0]
	0x03D9D218 CBNZ W8, 0x3D9D220
	0x03D9D21C BL 0x1C16DFC
	0x03D9D220 LDR X1, [X22]
	0x03D9D224 MOV X0, X19
	0x03D9D228 LDP X20, X19, [X31 + 0x20]
	0x03D9D22C LDP X22, X21, [X31 + 0x10]
	0x03D9D230 LDP X30, X23, [X31], #0x30
	0x03D9D234 B 0x2D0D4C0
	0x03D9D238 STP X30, X21, [X31 - 0x20]!
	0x03D9D23C STP X20, X19, [X31 + 0x10]
	0x03D9D240 ADRP X20, 0x64A000
	0x03D9D244 ADRP X21, 0x3CA000
	0x03D9D248 LDRB W8, [X20 + 0xEA9]
	0x03D9D24C LDR X21, [X21 + 0xF38]
	0x03D9D250 MOV X19, X0
	0x03D9D254 TBNZ X8, 0x0, 0x3D9D26C
	0x03D9D258 ADRP X0, 0x3CA000
	0x03D9D25C LDR X0, [X0 + 0xF38]
	0x03D9D260 BL 0x1C16CF4
	0x03D9D264 MOVZ W8, 0x1
	0x03D9D268 STRB W8, [X20 + 0xEA9]
	0x03D9D26C LDR X1, [X21]
	0x03D9D270 MOV X0, X19
	0x03D9D274 LDP X20, X19, [X31 + 0x10]
	0x03D9D278 LDP X30, X21, [X31], #0x20
	0x03D9D27C B 0x31A000C
	0x03D9D280 STR X30, [X31 - 0x20]!
	0x03D9D284 STP X20, X19, [X31 + 0x10]
	0x03D9D288 ADRP X19, 0x64A000
	0x03D9D28C ADRP X20, 0x3CA000
	0x03D9D290 LDRB W8, [X19 + 0xEAA]
	0x03D9D294 LDR X20, [X20 + 0xF10]
	0x03D9D298 TBNZ X8, 0x0, 0x3D9D2B0
	0x03D9D29C ADRP X0, 0x3CA000
	0x03D9D2A0 LDR X0, [X0 + 0xF10]
	0x03D9D2A4 BL 0x1C16CF4
	0x03D9D2A8 MOVZ W8, 0x1
	0x03D9D2AC STRB W8, [X19 + 0xEAA]
	0x03D9D2B0 LDR X0, [X20]
	0x03D9D2B4 BL 0x1C16F10
	0x03D9D2B8 MOV X1, X31
	0x03D9D2BC MOV X19, X0
	0x03D9D2C0 BL 0x33BDD8C
	0x03D9D2C4 LDR X8, [X20]
	0x03D9D2C8 LDR X8, [X8 + 0xB8]
	0x03D9D2CC STR X19, [X8]
	0x03D9D2D0 LDP X20, X19, [X31 + 0x10]
	0x03D9D2D4 LDR X30, [X31], #0x20
	0x03D9D2D8 RET
	0x03D9D2DC MOV X1, X31
	0x03D9D2E0 B 0x33BDD8C
	0x03D9D2E4 STR X30, [X31 - 0x20]!
	0x03D9D2E8 STP X20, X19, [X31 + 0x10]
	0x03D9D2EC ADRP X19, 0x64A000
	0x03D9D2F0 ADRP X20, 0x3CA000
	0x03D9D2F4 LDRB W8, [X19 + 0xEAB]
	0x03D9D2F8 LDR X20, [X20 + 0xF40]
	0x03D9D2FC TBNZ X8, 0x0, 0x3D9D314
	0x03D9D300 ADRP X0, 0x3CA000
	0x03D9D304 LDR X0, [X0 + 0xF40]
	0x03D9D308 BL 0x1C16CF4
	0x03D9D30C MOVZ W8, 0x1
	0x03D9D310 STRB W8, [X19 + 0xEAB]
	0x03D9D314 LDR X0, [X20]
	0x03D9D318 BL 0x1C16F10
	0x03D9D31C MOV X19, X0
	0x03D9D320 BL 0x3D9D238
	0x03D9D324 MOV X0, X19
	0x03D9D328 LDP X20, X19, [X31 + 0x10]
	0x03D9D32C LDR X30, [X31], #0x20
	0x03D9D330 RET
	0x03D9D334 STP X30, X23, [X31 - 0x30]!
	0x03D9D338 STP X22, X21, [X31 + 0x10]
	0x03D9D33C STP X20, X19, [X31 + 0x20]
	0x03D9D340 ADRP X20, 0x64A000
	0x03D9D344 ADRP X19, 0x3CA000
	0x03D9D348 LDRB W8, [X20 + 0xEAC]
	0x03D9D34C LDR X19, [X19 + 0xF48]
	0x03D9D350 TBNZ X8, 0x0, 0x3D9D398
	0x03D9D354 ADRP X0, 0x3CA000
	0x03D9D358 LDR X0, [X0 + 0xF50]
	0x03D9D35C BL 0x1C16CF4
	0x03D9D360 ADRP X0, 0x3CA000
	0x03D9D364 LDR X0, [X0 + 0xF58]
	0x03D9D368 BL 0x1C16CF4
	0x03D9D36C ADRP X0, 0x3CA000
	0x03D9D370 LDR X0, [X0 + 0xF60]
	0x03D9D374 BL 0x1C16CF4
	0x03D9D378 ADRP X0, 0x3CA000
	0x03D9D37C LDR X0, [X0 + 0xF68]
	0x03D9D380 BL 0x1C16CF4
	0x03D9D384 ADRP X0, 0x3CA000
	0x03D9D388 LDR X0, [X0 + 0xF48]
	0x03D9D38C BL 0x1C16CF4
	0x03D9D390 MOVZ W8, 0x1
	0x03D9D394 STRB W8, [X20 + 0xEAC]
	0x03D9D398 LDR X0, [X19]
	0x03D9D39C ADRP X22, 0x3CA000
	0x03D9D3A0 ADRP X23, 0x3CA000
	0x03D9D3A4 ADRP X21, 0x3CA000
	0x03D9D3A8 LDR W8, [X0 + 0xE0]
	0x03D9D3AC LDR X22, [X22 + 0xF60]
	0x03D9D3B0 LDR X23, [X23 + 0xF68]
	0x03D9D3B4 LDR X21, [X21 + 0xF58]
	0x03D9D3B8 CBNZ W8, 0x3D9D3C4
	0x03D9D3BC BL 0x1C16DFC
	0x03D9D3C0 LDR X0, [X19]
	0x03D9D3C4 LDR X8, [X0 + 0xB8]
	0x03D9D3C8 LDR X0, [X22]
	0x03D9D3CC ADRP X22, 0x3CA000
	0x03D9D3D0 LDR X20, [X8]
	0x03D9D3D4 LDR X22, [X22 + 0xF50]
	0x03D9D3D8 BL 0x1C16F10
	0x03D9D3DC LDR X2, [X23]
	0x03D9D3E0 MOV X1, X20
	0x03D9D3E4 MOV X3, X31
	0x03D9D3E8 MOV X19, X0
	0x03D9D3EC BL 0x2D27AA8
	0x03D9D3F0 LDR X0, [X21]
	0x03D9D3F4 LDR W8, [X0 + 0xE0]
	0x03D9D3F8 CBNZ W8, 0x3D9D400
	0x03D9D3FC BL 0x1C16DFC
	0x03D9D400 LDR X1, [X22]
	0x03D9D404 MOV X0, X19
	0x03D9D408 LDP X20, X19, [X31 + 0x20]
	0x03D9D40C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X23, 0x64B000
	015 Move W8, [X23+3740]
	016 Move W19, W3
	017 Move X20, X2
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x357000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x3CB000
	028 Move X0, [X0+3552]
	029 Call 0x1C17CF4
	030 Move X0, 0x3CB000
	031 Move X0, [X0+3560]
	032 Call 0x1C17CF4
	033 Move X0, 0x3CB000
	034 Move X0, [X0+3568]
	035 Call 0x1C17CF4
	036 Move X0, 0x3CB000
	037 Move X0, [X0+3576]
	038 Call 0x1C17CF4
	039 Move X0, 0x3CB000
	040 Move X0, [X0+3584]
	041 Call 0x1C17CF4
	042 Move X0, 0x3CB000
	043 Move X0, [X0+3592]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X23+3740], W8
	047 Move [X31+32], X31
	048 Move [X31+40], X31
	049 Move [X31+48], X31
	050 Move X0, [X22+24]
	051 Compare X0, 0
	052 JumpIfEqual {184}
	053 Move X8, 0x3CB000
	054 Move X8, [X8+3584]
	055 Move X24, 0x3CB000
	056 Move X25, 0x3CB000
	057 Move X24, [X24+3560]
	058 Move X25, [X25+3576]
	059 Move X1, [X8]
	060 Move X26, 0x357000
	061 Move X27, 0x3CB000
	062 Move X23, 0x3CB000
	063 Move X26, [X26+2600]
	064 Move X27, [X27+3592]
	065 Move X23, [X23+3552]
	066 Add X8, X31, 8
	067 Call List`1<Object>.GetEnumerator, X0
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Move X8, [X31+24]
	070 Move W28, 65
	071 Move W29, 33
	072 Move [X31+2], V0
	073 Move [X31+48], X8
	074 Move X1, [X24]
	075 Add X0, X31, 32
	076 Call Enumerator<Object>.MoveNext, X0
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {164}
	081 Move X22, [X31+48]
	082 Compare X22, 0
	083 JumpIfEqual {181}
	084 Move X8, [X22]
	085 Move X1, [X25]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X22
	096 Move W2, W31
	097 Call 0x1C5D788
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Add X8, X8, X9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X2, [X0+8]
	103 Move X0, X22
	104 Move X1, X21
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {74}
	110 Move X8, [X22]
	111 Move X1, [X25]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move W2, 1
	122 Move X0, X22
	123 Call 0x1C5D788
	124 Move W9, [X10]
	125 Add W9, W9, 1
	126 Add X8, X8, W9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X3, [X0+8]
	130 Move X0, X22
	131 Move X1, X21
	132 Move X2, X20
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move TEMP, X19
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {150}
	138 Compare X21, 0
	139 JumpIfEqual {183}
	140 Move W8, [X21+64]
	141 And W8, W8, W29
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X0, [X21+112]
	144 Compare X0, 0
	145 JumpIfEqual {150}
	146 Move X1, X31
	147 Call Event.get_rawType, X0
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction CSET not yet implemented."
	150 Move W22, 1
	151 Move X0, [X26]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X1, [X27]
	157 Move W0, W22
	158 Move X2, X31
	159 Call Debug.Assert, X0, X1
	160 Compare X21, 0
	161 JumpIfEqual {182}
	162 Move W8, [X21+64]
	163 And W31, W8, W28
	164 Move X1, [X23]
	165 Add X0, X31, 32
	166 Call Enumerator<Object>.Dispose, X0
	167 Move X20, [X31+144]
	168 Move X19, [X31+152]
	169 Move X22, [X31+128]
	170 Move X21, [X31+136]
	171 Move X24, [X31+112]
	172 Move X23, [X31+120]
	173 Move X26, [X31+96]
	174 Move X25, [X31+104]
	175 Move X28, [X31+80]
	176 Move X27, [X31+88]
	177 Move X29, [X31+64]
	178 Move X30, [X31+72]
	179 Add X31, X31, 160
	180 Return 
	181 Call 0x1C17F20
	182 Call 0x1C17F20
	183 Call 0x1C17F20
	184 Call 0x1C17F20
	185 Move X19, X0
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move X0, X19
	188 Call 0x3EB2AD0
	189 Move X20, [X0]
	190 Call 0x3EB2AE0
	191 Move X1, [X23]
	192 Add X0, X31, 32
	193 Call Enumerator<Object>.Dispose, X0
	194 Compare X20, 0
	195 JumpIfEqual {167}
	196 Move X0, X20
	197 Call 0x1C17F18
	198 Move X20, X31
	199 Move X19, X0
	200 Move X1, [X23]
	201 Add X0, X31, 32
	202 Call Enumerator<Object>.Dispose, X0
	203 Compare X20, 0
	204 JumpIfNotEqual {207}
	205 Move X0, X19
	206 Call 0x1D2D690
	207 Move X0, X20
	208 Call 0x1C17F18
	209 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03D9D850 BL 0x1C171E0
	0x03D9D854 STR X30, [X31 - 0x20]!
	0x03D9D858 STP X20, X19, [X31 + 0x10]
	0x03D9D85C ADRP X20, 0x64B000
	0x03D9D860 LDRB W8, [X20 + 0x7]
	0x03D9D864 MOV X19, X0
	0x03D9D868 TBNZ X8, 0x0, 0x3D9D88C
	0x03D9D86C ADRP X0, 0x3CA000
	0x03D9D870 LDR X0, [X0 + 0xF90]
	0x03D9D874 BL 0x1C16CF4
	0x03D9D878 ADRP X0, 0x3CA000
	0x03D9D87C LDR X0, [X0 + 0xF98]
	0x03D9D880 BL 0x1C16CF4
	0x03D9D884 MOVZ W8, 0x1
	0x03D9D888 STRB W8, [X20 + 0x7]
	0x03D9D88C LDR X0, [X19 + 0x20]
	0x03D9D890 CBZ X0, 0x3D9D8F4
	0x03D9D894 LDR W8, [X0 + 0x18]
	0x03D9D898 CMP W8, 0x1
	0x03D9D89C B.LT 0x3D9D8D4
	0x03D9D8A0 ADRP X8, 0x3CA000
	0x03D9D8A4 LDR X8, [X8 + 0xF98]
	0x03D9D8A8 MOV W1, W31
	0x03D9D8AC LDR X2, [X8]
	0x03D9D8B0 BL 0x30F5C44
	0x03D9D8B4 MOV X20, X1
	0x03D9D8B8 CBZ X1, 0x3D9D8DC
	0x03D9D8BC LDR X8, [X20]
	0x03D9D8C0 MOV X0, X20
	0x03D9D8C4 LDR X9, [X8 + 0x228]
	0x03D9D8C8 LDR X1, [X8 + 0x230]
	0x03D9D8CC BLR X9
	0x03D9D8D0 B 0x3D9D8E0
	0x03D9D8D4 MOV X0, X31
	0x03D9D8D8 B 0x3D9D8E8
	0x03D9D8DC MOV X0, X31
	0x03D9D8E0 CMP X0, X19
	0x03D9D8E4 CSEL X0, X20, X31, EQ
	0x03D9D8E8 LDP X20, X19, [X31 + 0x10]
	0x03D9D8EC LDR X30, [X31], #0x20
	0x03D9D8F0 RET
	0x03D9D8F4 BL 0x1C16F20
	0x03D9D8F8 STP X30, X21, [X31 - 0x20]!
	0x03D9D8FC STP X20, X19, [X31 + 0x10]
	0x03D9D900 ADRP X21, 0x64A000
	0x03D9D904 LDRB W8, [X21 + 0xEC2]
	0x03D9D908 MOV X19, X1
	0x03D9D90C MOV X20, X0
	0x03D9D910 TBNZ X8, 0x0, 0x3D9D928
	0x03D9D914 ADRP X0, 0x3CA000
	0x03D9D918 LDR X0, [X0 + 0xFA0]
	0x03D9D91C BL 0x1C16CF4
	0x03D9D920 MOVZ W8, 0x1
	0x03D9D924 STRB W8, [X21 + 0xEC2]
	0x03D9D928 LDR X0, [X20 + 0x58]
	0x03D9D92C CBZ X0, 0x3D9D94C
	0x03D9D930 ADRP X8, 0x3CA000
	0x03D9D934 LDR X8, [X8 + 0xFA0]
	0x03D9D938 MOV X1, X19
	0x03D9D93C LDP X20, X19, [X31 + 0x10]
	0x03D9D940 LDR X2, [X8]
	0x03D9D944 LDP X30, X21, [X31], #0x20
	0x03D9D948 B 0x301C318
	0x03D9D94C BL 0x1C16F20
	0x03D9D950 LDR W8, [X0 + 0x40]
	0x03D9D954 ORR W8, W8, 0x1
	0x03D9D958 STR W8, [X0 + 0x40]
	0x03D9D95C RET
	0x03D9D960 LDRB W8, [X0 + 0x30]
	0x03D9D964 TBZ X8, 0x2, 0x3D9D974
	0x03D9D968 LDR W8, [X0 + 0x40]
	0x03D9D96C ORR W8, W8, 0x4
	0x03D9D970 STR W8, [X0 + 0x40]
	0x03D9D974 RET
	0x03D9D978 LDRB W8, [X0 + 0x40]
	0x03D9D97C UBFM W0, W8, 0x7, 0x1F
	0x03D9D980 RET
	0x03D9D984 SUB X31, X31, 0x80
	0x03D9D988 STR X30, [X31 + 0x50]
	0x03D9D98C STP X22, X21, [X31 + 0x60]
	0x03D9D990 STP X20, X19, [X31 + 0x70]
	0x03D9D994 ADRP X21, 0x64A000
	0x03D9D998 LDRB W8, [X21 + 0xEF0]
	0x03D9D99C MOV X19, X1
	0x03D9D9A0 MOV X20, X0
	0x03D9D9A4 TBNZ X8, 0x0, 0x3D9DA34
	0x03D9D9A8 ADRP X0, 0x3CA000
	0x03D9D9AC LDR X0, [X0 + 0xFA8]
	0x03D9D9B0 BL 0x1C16CF4
	0x03D9D9B4 ADRP X0, 0x3CA000
	0x03D9D9B8 LDR X0, [X0 + 0xFB0]
	0x03D9D9BC BL 0x1C16CF4
	0x03D9D9C0 ADRP X0, 0x356000
	0x03D9D9C4 LDR X0, [X0 + 0xA28]
	0x03D9D9C8 BL 0x1C16CF4
	0x03D9D9CC ADRP X0, 0x3CA000
	0x03D9D9D0 LDR X0, [X0 + 0xD90]
	0x03D9D9D4 BL 0x1C16CF4
	0x03D9D9D8 ADRP X0, 0x3CA000
	0x03D9D9DC LDR X0, [X0 + 0xD98]
	0x03D9D9E0 BL 0x1C16CF4
	0x03D9D9E4 ADRP X0, 0x3CA000
	0x03D9D9E8 LDR X0, [X0 + 0xDA0]
	0x03D9D9EC BL 0x1C16CF4
	0x03D9D9F0 ADRP X0, 0x3C7000
	0x03D9D9F4 LDR X0, [X0 + 0xB8]
	0x03D9D9F8 BL 0x1C16CF4
	0x03D9D9FC ADRP X0, 0x3C7000
	0x03D9DA00 LDR X0, [X0 + 0xC0]
	0x03D9DA04 BL 0x1C16CF4
	0x03D9DA08 ADRP X0, 0x3C6000
	0x03D9DA0C LDR X0, [X0 + 0xEB8]
	0x03D9DA10 BL 0x1C16CF4
	0x03D9DA14 ADRP X0, 0x3CA000
	0x03D9DA18 LDR X0, [X0 + 0xDA8]
	0x03D9DA1C BL 0x1C16CF4
	0x03D9DA20 ADRP X0, 0x3CA000
	0x03D9DA24 LDR X0, [X0 + 0xFB8]
	0x03D9DA28 BL 0x1C16CF4
	0x03D9DA2C MOVZ W8, 0x1
	0x03D9DA30 STRB W8, [X21 + 0xEF0]
	0x03D9DA34 STR X31, [X31 + 0x58]
	0x03D9DA38 STP X31, X31, [X31 + 0x40]
	0x03D9DA3C STP X31, X31, [X31 + 0x30]
	0x03D9DA40 STP X31, X31, [X31 + 0x20]
	0x03D9DA44 CBZ X19, 0x3D9DCD0
	0x03D9DA48 LDRB W8, [X19 + 0x40]
	0x03D9DA4C TBZ X8, 0x5, 0x3D9DCB4
	0x03D9DA50 LDR X8, [X19 + 0x70]
	0x03D9DA54 CBZ X8, 0x3D9DCB4
	0x03D9DA58 CBZ X20, 0x3D9DCD0
	0x03D9DA5C LDR X0, [X20 + 0x3A0]
	0x03D9DA60 CBZ X0, 0x3D9DCD0
	0x03D9DA64 LDR X8, [X0]
	0x03D9DA68 LDR X9, [X8 + 0x3F8]
	0x03D9DA6C LDR X1, [X8 + 0x400]
	0x03D9DA70 BLR X9
	0x03D9DA74 CBZ W0, 0x3D9DCB4
	0x03D9DA78 LDRB W8, [X20 + 0x10]
	0x03D9DA7C CBZ W8, 0x3D9DB98
	0x03D9DA80 ADRP X8, 0x3C7000
	0x03D9DA84 LDR X8, [X8 + 0xC0]
	0x03D9DA88 LDR X9, [X20]
	0x03D9DA8C LDR X8, [X8]
	0x03D9DA90 LDRB W11, [X9 + 0x130]
	0x03D9DA94 LDRB W10, [X8 + 0x130]
	0x03D9DA98 CMP W11, W10
	0x03D9DA9C B.CS 0x3D9DAA8
	0x03D9DAA0 MOV X21, X31
	0x03D9DAA4 B 0x3D9DABC
	0x03D9DAA8 LDR X9, [X9 + 0xC8]
	0x03D9DAAC ADD X9, X9, X10, 0x3, LSL
	0x03D9DAB0 LDUR X9, [X9 - 0x8]
	0x03D9DAB4 CMP X9, X8
	0x03D9DAB8 CSEL X21, X20, X31, EQ
	0x03D9DABC MOV X0, X19
	0x03D9DAC0 MOV X1, X21
	0x03D9DAC4 BL 0x3D9D8F8
	0x03D9DAC8 TBNZ X0, 0x0, 0x3D9DCB4
	0x03D9DACC LDR X8, [X19 + 0x50]
	0x03D9DAD0 CBZ X8, 0x3D9DB0C
	0x03D9DAD4 ADRP X9, 0x3C7000
	0x03D9DAD8 LDR X9, [X9 + 0xB8]
	0x03D9DADC LDR X10, [X8]
	0x03D9DAE0 LDR X9, [X9]
	0x03D9DAE4 LDRB W12, [X10 + 0x130]
	0x03D9DAE8 LDRB W11, [X9 + 0x130]
	0x03D9DAEC CMP W12, W11
	0x03D9DAF0 B.CC 0x3D9DB08
	0x03D9DAF4 LDR X10, [X10 + 0xC8]
	0x03D9DAF8 ADD X10, X10, X11, 0x3, LSL
	0x03D9DAFC LDUR X10, [X10 - 0x8]
	0x03D9DB00 CMP X10, X9
	0x03D9DB04 B.EQ 0x3D9DCC8
	0x03D9DB08 MOV W8, W31
	0x03D9DB0C CBZ X21, 0x3D9DCD0
	0x03D9DB10 CMP W8, 0x0
	0x03D9DB14 CSET W2, EQ
	0x03D9DB18 MOVZ W3, 0x1
	0x03D9DB1C MOV X0, X21
	0x03D9DB20 MOV X1, X19
	0x03D9DB24 MOV X4, X31
	0x03D9DB28 BL 0x3DB80C0
	0x03D9DB2C LDR W8, [X19 + 0x40]
	0x03D9DB30 MOV W9, W8
	0x03D9DB34 TBZ X0, 0x0, 0x3D9DB54
	0x03D9DB38 LDRB W10, [X19 + 0x30]
	0x03D9DB3C ORR W9, W8, 0x1
	0x03D9DB40 STR W9, [X19 + 0x40]
	0x03D9DB44 TBZ X10, 0x2, 0x3D9DB54
	0x03D9DB48 MOVZ W9, 0x5
	0x03D9DB4C ORR W9, W8, W9, 0x0
	0x03D9DB50 STR W9, [X19 + 0x40]
	0x03D9DB54 TBZ X9, 0x5, 0x3D9DCD0
	0x03D9DB58 LDR X0, [X19 + 0x70]
	0x03D9DB5C CBZ X0, 0x3D9DCD0
	0x03D9DB60 MOV X1, X31
	0x03D9DB64 BL 0x3C62C04
	0x03D9DB68 CMP W0, 0xC
	0x03D9DB6C B.NE 0x3D9DB98
	0x03D9DB70 ADRP X8, 0x356000
	0x03D9DB74 LDR X8, [X8 + 0xA28]
	0x03D9DB78 LDR W21, [X19 + 0x40]
	0x03D9DB7C LDR X0, [X8]
	0x03D9DB80 LDR W8, [X0 + 0xE0]
	0x03D9DB84 CBNZ W8, 0x3D9DB8C
	0x03D9DB88 BL 0x1C16DFC
	0x03D9DB8C AND W0, W21, 0x1
	0x03D9DB90 MOV X1, X31
	0x03D9DB94 BL 0x3C06E58
	0x03D9DB98 LDR W8, [X20 + 0x328]
	0x03D9DB9C CMP W8, 0x1
	0x03D9DBA0 B.LT 0x3D9DCB4
	0x03D9DBA4 ADRP X8, 0x3CA000
	0x03D9DBA8 LDR X8, [X8 + 0xFB0]
	0x03D9DBAC LDR X0, [X8]
	0x03D9DBB0 LDR W8, [X0 + 0xE0]
	0x03D9DBB4 CBNZ W8, 0x3D9DBBC
	0x03D9DBB8 BL 0x1C16DFC
	0x03D9DBBC ADRP X8, 0x3CA000
	0x03D9DBC0 LDR X8, [X8 + 0xFA8]
	0x03D9DBC4 ADD X0, X31, 0x58
	0x03D9DBC8 LDR X1, [X8]
	0x03D9DBCC BL 0x28F996C
	0x03D9DBD0 STP X0, X1, [X31 + 0x40]
	0x03D9DBD4 LDR X8, [X20 + 0x378]
	0x03D9DBD8 LDR X21, [X31 + 0x58]
	0x03D9DBDC STR X8, [X31 + 0x38]
	0x03D9DBE0 ADD X0, X31, 0x38
	0x03D9DBE4 MOV X1, X31
	0x03D9DBE8 BL 0x3DF88F8
	0x03D9DBEC MOV X1, X0
	0x03D9DBF0 CBZ X21, 0x3D9DCD8
	0x03D9DBF4 ADRP X8, 0x3C6000
	0x03D9DBF8 LDR X8, [X8 + 0xEB8]
	0x03D9DBFC LDR X2, [X8]
	0x03D9DC00 MOV X0, X21
	0x03D9DC04 BL 0x301C194
	0x03D9DC08 LDR X0, [X31 + 0x58]
	0x03D9DC0C CBZ X0, 0x3D9DCDC
	0x03D9DC10 ADRP X8, 0x3CA000
	0x03D9DC14 LDR X8, [X8 + 0xDA8]
	0x03D9DC18 LDR X1, [X8]
	0x03D9DC1C ADD X8, X31, 0x8
	0x03D9DC20 BL 0x301CB58
	0x03D9DC24 LDUR V0, [X31 + 0x8]
	0x03D9DC28 LDR X8, [X31 + 0x18]
	0x03D9DC2C ADRP X22, 0x3CA000
	0x03D9DC30 STR V0, [X31 + 0x2]
	0x03D9DC34 STR X8, [X31 + 0x30]
	0x03D9DC38 LDR X22, [X22 + 0xD98]
	0x03D9DC3C LDR X1, [X22]
	0x03D9DC40 ADD X0, X31, 0x20
	0x03D9DC44 BL 0x2BC4350
	0x03D9DC48 TBZ X0, 0x0, 0x3D9DC84
	0x03D9DC4C LDR X21, [X31 + 0x30]
	0x03D9DC50 CBZ X21, 0x3D9DCD4
	0x03D9DC54 LDR X8, [X21 + 0x378]
	0x03D9DC58 STR X8, [X31 + 0x38]
	0x03D9DC5C ADD X0, X31, 0x38
	0x03D9DC60 MOV X1, X31
	0x03D9DC64 BL 0x3DF88DC
	0x03D9DC68 CMP X0, X20
	0x03D9DC6C B.NE 0x3D9DC3C
	0x03D9DC70 MOV X0, X21
	0x03D9DC74 MOV X1, X19
	0x03D9DC78 BL 0x3D9D984
	0x03D9DC7C LDRB W8, [X19 + 0x40]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x64B000
	011 Move X19, 0x3CB000
	012 Move W8, [X20+3741]
	013 Move X19, [X19+3608]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {68}
	018 Move X0, 0x3CB000
	019 Move X0, [X0+3616]
	020 Call 0x1C17CF4
	021 Move X0, 0x3CB000
	022 Move X0, [X0+3624]
	023 Call 0x1C17CF4
	024 Move X0, 0x3CB000
	025 Move X0, [X0+3376]
	026 Call 0x1C17CF4
	027 Move X0, 0x3CB000
	028 Move X0, [X0+3632]
	029 Call 0x1C17CF4
	030 Move X0, 0x3CB000
	031 Move X0, [X0+3640]
	032 Call 0x1C17CF4
	033 Move X0, 0x3CB000
	034 Move X0, [X0+3648]
	035 Call 0x1C17CF4
	036 Move X0, 0x3CB000
	037 Move X0, [X0+3656]
	038 Call 0x1C17CF4
	039 Move X0, 0x3CB000
	040 Move X0, [X0+3664]
	041 Call 0x1C17CF4
	042 Move X0, 0x3CB000
	043 Move X0, [X0+3672]
	044 Call 0x1C17CF4
	045 Move X0, 0x3CB000
	046 Move X0, [X0+3680]
	047 Call 0x1C17CF4
	048 Move X0, 0x3CB000
	049 Move X0, [X0+3688]
	050 Call 0x1C17CF4
	051 Move X0, 0x3CB000
	052 Move X0, [X0+3696]
	053 Call 0x1C17CF4
	054 Move X0, 0x3CB000
	055 Move X0, [X0+3704]
	056 Call 0x1C17CF4
	057 Move X0, 0x3CB000
	058 Move X0, [X0+3712]
	059 Call 0x1C17CF4
	060 Move X0, 0x3CB000
	061 Move X0, [X0+3720]
	062 Call 0x1C17CF4
	063 Move X0, 0x3CB000
	064 Move X0, [X0+3608]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X20+3741], W8
	068 Move X0, [X19]
	069 Move X26, 0x3CB000
	070 Move X20, 0x3CB000
	071 Move X25, 0x3CB000
	072 Move X24, 0x3CB000
	073 Move X21, 0x3CB000
	074 Move X23, 0x3CB000
	075 Move X22, 0x3CB000
	076 Move X26, [X26+3632]
	077 Move X20, [X20+3720]
	078 Move X25, [X25+3696]
	079 Move W8, [X0+224]
	080 Move X24, [X24+3688]
	081 Move X21, [X21+3376]
	082 Move X23, [X23+3640]
	083 Move X22, [X22+3704]
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X19]
	088 Move X8, [X0+184]
	089 Move X0, [X26]
	090 Move X19, [X8]
	091 Call 0x1C17F10
	092 Move X2, [X20]
	093 Move X1, X19
	094 Move X3, X31
	095 Move X20, X0
	096 Call Func`1<Object>..ctor, X0, X1, X2
	097 Move X0, [X25]
	098 Call 0x1C17F10
	099 Move X3, [X24]
	100 Move W2, 100
	101 Move X1, X20
	102 Move X19, X0
	103 Call 0x24954D4, X0, X1, X2
	104 Move X8, [X21]
	105 Move W1, 9
	106 Move X8, [X8+184]
	107 Move [X8], X19
	108 Move X0, [X23]
	109 Call 0x1C17D6C
	110 Move X8, [X22]
	111 Move X19, X0
	112 Move X0, X8
	113 Call 0x1C17F10
	114 Move X1, X31
	115 Move X20, X0
	116 Call Object..ctor, X0
	117 Compare X19, 0
	118 JumpIfEqual {292}
	119 Compare X20, 0
	120 JumpIfEqual {127}
	121 Move X8, [X19]
	122 Move X0, X20
	123 Move X1, [X8+64]
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {289}
	127 Move W8, [X19+24]
	128 Compare W8, 0
	129 JumpIfEqual {288}
	130 Move X8, 0x3CB000
	131 Move X8, [X8+3664]
	132 Move [X19+32], X20
	133 Move X0, [X8]
	134 Call 0x1C17F10
	135 Move X1, X31
	136 Move X20, X0
	137 Call Object..ctor, X0
	138 Compare X20, 0
	139 JumpIfEqual {146}
	140 Move X8, [X19]
	141 Move X0, X20
	142 Move X1, [X8+64]
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfEqual {289}
	146 Move W8, [X19+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X8, 0x3CB000
	149 Move X8, [X8+3656]
	150 Move [X19+40], X20
	151 Move X0, [X8]
	152 Call 0x1C17F10
	153 Move X1, X31
	154 Move X20, X0
	155 Call Object..ctor, X0
	156 Compare X20, 0
	157 JumpIfEqual {164}
	158 Move X8, [X19]
	159 Move X0, X20
	160 Move X1, [X8+64]
	161 Call 0x1C17E00
	162 Compare X0, 0
	163 JumpIfEqual {289}
	164 Move W8, [X19+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X8, 0x3CB000
	167 Move X8, [X8+3712]
	168 Move [X19+48], X20
	169 Move X0, [X8]
	170 Call 0x1C17F10
	171 Move X1, X31
	172 Move X20, X0
	173 Call Object..ctor, X0
	174 Compare X20, 0
	175 JumpIfEqual {182}
	176 Move X8, [X19]
	177 Move X0, X20
	178 Move X1, [X8+64]
	179 Call 0x1C17E00
	180 Compare X0, 0
	181 JumpIfEqual {289}
	182 Move W8, [X19+24]
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Move X8, 0x3CB000
	185 Move X8, [X8+3672]
	186 Move [X19+56], X20
	187 Move X0, [X8]
	188 Call 0x1C17F10
	189 Move X1, X31
	190 Move X20, X0
	191 Call Object..ctor, X0
	192 Compare X20, 0
	193 JumpIfEqual {200}
	194 Move X8, [X19]
	195 Move X0, X20
	196 Move X1, [X8+64]
	197 Call 0x1C17E00
	198 Compare X0, 0
	199 JumpIfEqual {289}
	200 Move W8, [X19+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move X8, 0x3CB000
	203 Move X8, [X8+3680]
	204 Move [X19+64], X20
	205 Move X0, [X8]
	206 Call 0x1C17F10
	207 Move X1, X31
	208 Move X20, X0
	209 Call Object..ctor, X0
	210 Compare X20, 0
	211 JumpIfEqual {218}
	212 Move X8, [X19]
	213 Move X0, X20
	214 Move X1, [X8+64]
	215 Call 0x1C17E00
	216 Compare X0, 0
	217 JumpIfEqual {289}
	218 Move W8, [X19+24]
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move X8, 0x3CB000
	221 Move X8, [X8+3616]
	222 Move [X19+72], X20
	223 Move X0, [X8]
	224 Call 0x1C17F10
	225 Move X1, X31
	226 Move X20, X0
	227 Call Object..ctor, X0
	228 Compare X20, 0
	229 JumpIfEqual {236}
	230 Move X8, [X19]
	231 Move X0, X20
	232 Move X1, [X8+64]
	233 Call 0x1C17E00
	234 Compare X0, 0
	235 JumpIfEqual {289}
	236 Move W8, [X19+24]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X8, 0x3CB000
	239 Move X8, [X8+3648]
	240 Move [X19+80], X20
	241 Move X0, [X8]
	242 Call 0x1C17F10
	243 Move X1, X31
	244 Move X20, X0
	245 Call Object..ctor, X0
	246 Compare X20, 0
	247 JumpIfEqual {254}
	248 Move X8, [X19]
	249 Move X0, X20
	250 Move X1, [X8+64]
	251 Call 0x1C17E00
	252 Compare X0, 0
	253 JumpIfEqual {289}
	254 Move W8, [X19+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X8, 0x3CB000
	257 Move X8, [X8+3624]
	258 Move [X19+88], X20
	259 Move X0, [X8]
	260 Call 0x1C17F10
	261 Move X1, X31
	262 Move X20, X0
	263 Call Object..ctor, X0
	264 Compare X20, 0
	265 JumpIfEqual {272}
	266 Move X8, [X19]
	267 Move X0, X20
	268 Move X1, [X8+64]
	269 Call 0x1C17E00
	270 Compare X0, 0
	271 JumpIfEqual {289}
	272 Move W8, [X19+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move [X19+96], X20
	275 Move X8, [X21]
	276 Move X22, [X31+48]
	277 Move X21, [X31+56]
	278 Move X24, [X31+32]
	279 Move X23, [X31+40]
	280 Move X26, [X31+16]
	281 Move X25, [X31+24]
	282 Move X8, [X8+184]
	283 Move [X8+8], X19
	284 Move X20, [X31+64]
	285 Move X19, [X31+72]
	286 Move X30, [X31+80]
	287 Return 
	288 Call 0x1C17F28
	289 Call 0x1C17F44
	290 Move X1, X31
	291 Call 0x1C17DEC
	292 Call 0x1C17F20

