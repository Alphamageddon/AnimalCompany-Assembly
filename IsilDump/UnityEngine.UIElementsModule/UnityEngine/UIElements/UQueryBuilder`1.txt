Type: UnityEngine.UIElements.UQueryBuilder`1

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSelector> get_styleSelectors()

Disassembly:
	0x02725044 LDR X0, [X0 + 0xA58]
	0x02725048 BL 0x1C16CF4
	0x0272504C ADRP X0, 0x19F8000
	0x02725050 LDR X0, [X0 + 0xA60]
	0x02725054 BL 0x1C16CF4
	0x02725058 MOVZ W8, 0x1
	0x0272505C STRB W8, [X22 + 0x64A]
	0x02725060 LDR X0, [X20]
	0x02725064 BL 0x211B0E8
	0x02725068 CBZ X0, 0x2725200
	0x0272506C LDR X8, [X0]
	0x02725070 LDR X1, [X19]
	0x02725074 LDP X9, X2, [X8 + 0x1C8]
	0x02725078 BLR X9
	0x0272507C LDR X8, [X20]
	0x02725080 MOV W20, W0
	0x02725084 MOV X0, X8
	0x02725088 BL 0x211B0E8
	0x0272508C LDR X8, [X21 + 0x20]
	0x02725090 MOV X22, X0
	0x02725094 LDRB W9, [X8 + 0x135]
	0x02725098 TBNZ X9, 0x0, 0x27250A4
	0x0272509C MOV X0, X8
	0x027250A0 BL 0x1C5C684
	0x027250A4 MOV X0, X19
	0x027250A8 BL 0x2724044
	0x027250AC CBZ X22, 0x2725200
	0x027250B0 LDR X8, [X22]
	0x027250B4 ADRP X23, 0x19F8000
	0x027250B8 MOV X1, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1CB6000
	005 Move W8, [X20+1598]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x19F9000
	012 Move X0, [X0+2488]
	013 Call 0x1C17CF4
	014 Move X0, 0x19F9000
	015 Move X0, [X0+2496]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1598], W8
	019 Move X20, [X19]
	020 Compare X20, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0x19F9000
	023 Move X8, [X8+2496]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0x19F9000
	027 Move X8, [X8+2488]
	028 Move X20, X0
	029 Move X1, [X8]
	030 Call List`1<Object>..ctor, X0
	031 Move [X19], X20
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSelectorPart> get_parts()

Disassembly:
	0x027250BC MOV X0, X22
	0x027250C0 LDP X9, X2, [X8 + 0x1C8]
	0x027250C4 LDR X23, [X23 + 0xA50]
	0x027250C8 BLR X9
	0x027250CC LDR X8, [X23]
	0x027250D0 MOV W22, W0
	0x027250D4 MOV X0, X8
	0x027250D8 BL 0x211B0E8
	0x027250DC CBZ X0, 0x2725200
	0x027250E0 LDR X8, [X0]
	0x027250E4 LDR X1, [X19 + 0x8]
	0x027250E8 LDP X9, X2, [X8 + 0x1C8]
	0x027250EC BLR X9
	0x027250F0 LDR X8, [X23]
	0x027250F4 MOV W23, W0
	0x027250F8 MOV X0, X8
	0x027250FC BL 0x211B0E8
	0x02725100 LDR X8, [X21 + 0x20]
	0x02725104 MOV X21, X0
	0x02725108 LDRB W9, [X8 + 0x135]
	0x0272510C TBNZ X9, 0x0, 0x2725118
	0x02725110 MOV X0, X8
	0x02725114 BL 0x1C5C684
	0x02725118 MOV X0, X19
	0x0272511C BL 0x27240BC
	0x02725120 CBZ X21, 0x2725200
	0x02725124 LDR X8, [X21]
	0x02725128 ADRP X24, 0x19F8000
	0x0272512C MOV X1, X0
	0x02725130 MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1CB6000
	005 Move W8, [X20+1599]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x19F9000
	012 Move X0, [X0+2504]
	013 Call 0x1C17CF4
	014 Move X0, 0x19F9000
	015 Move X0, [X0+2512]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1599], W8
	019 Move X20, [X19+8]
	020 Compare X20, 0
	021 JumpIfNotEqual {32}
	022 Move X8, 0x19F9000
	023 Move X8, [X8+2512]
	024 Move X0, [X8]
	025 Call 0x1C17F10
	026 Move X8, 0x19F9000
	027 Move X8, [X8+2504]
	028 Move X20, X0
	029 Move X1, [X8]
	030 Call List`1<StyleSelectorPart>..ctor, X0
	031 Move [X19+8], X20
	032 Move X0, X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Void .ctor(UnityEngine.UIElements.VisualElement visualElement)

Disassembly:
	0x02725134 LDP X9, X2, [X8 + 0x1C8]
	0x02725138 LDR X24, [X24 + 0xA60]
	0x0272513C BLR X9
	0x02725140 LDR X8, [X24]
	0x02725144 MOV W21, W0
	0x02725148 MOV X0, X8
	0x0272514C BL 0x211B0E8
	0x02725150 CBZ X0, 0x2725200
	0x02725154 LDR X8, [X0]
	0x02725158 LDR X1, [X19 + 0x10]
	0x0272515C ADRP X24, 0x19F8000
	0x02725160 LDP X9, X2, [X8 + 0x1C8]
	0x02725164 LDR X24, [X24 + 0xA58]
	0x02725168 BLR X9
	0x0272516C LDR X8, [X24]
	0x02725170 MOV W24, W0
	0x02725174 MOV X0, X8
	0x02725178 BL 0x211B0E8
	0x0272517C CBZ X0, 0x2725200
	0x02725180 LDR X9, [X0]
	0x02725184 MOVZ W25, 0x5529
	0x02725188 MOVZ W8, 0xEBA4
	0x0272518C MOVK W25, 0xA5550000
	0x02725190 MOVK W8, 0xBD650000
	0x02725194 MADD W10, W20, W25, W22
	0x02725198 MUL W8, W8, W25
	0x0272519C LDR X1, [X19 + 0x18]
	0x027251A0 MADD W8, W10, W25, W8
	0x027251A4 LDP X10, X2, [X9 + 0x1C8]
	0x027251A8 ADD W8, W23, W8
	0x027251AC MADD W8, W8, W25, W21
	0x027251B0 MADD W20, W8, W25, W24
	0x027251B4 BLR X10
	0x027251B8 MADD W20, W20, W25, W0
	0x027251BC ADD X0, X19, 0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1CB6000
	008 Move X22, 0x19F9000
	009 Move X21, 0x19F9000
	010 Move W8, [X23+1600]
	011 Move X22, [X22+2520]
	012 Move X21, [X21+2528]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x19F9000
	020 Move X0, [X0+2528]
	021 Call 0x1C17CF4
	022 Move X0, 0x19F9000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1600], W8
	027 Move [X19+32], X31
	028 Move [X19+40], X31
	029 Move [X19+16], X20
	030 Move [X19+24], X31
	031 Move [X19+32], W31
	032 Move [X19], X31
	033 Move [X19+8], X31
	034 Move X0, [X22]
	035 Call 0x1C17F10
	036 Move X1, [X21]
	037 Move X20, X0
	038 Call List`1<RuleMatcher>..ctor, X0
	039 Move [X19+24], X20
	040 Move [X19+36], W31
	041 Move [X19+40], W31
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 

Method: UnityEngine.UIElements.UQueryBuilder`1<T> Class(System.String classname)

Disassembly:
	0x027251C0 MOV X1, X31
	0x027251C4 BL 0x337B6D8
	0x027251C8 MADD W20, W20, W25, W0
	0x027251CC ADD X0, X19, 0x24
	0x027251D0 MOV X1, X31
	0x027251D4 BL 0x337B6D8
	0x027251D8 MADD W20, W20, W25, W0
	0x027251DC ADD X0, X19, 0x28
	0x027251E0 MOV X1, X31
	0x027251E4 BL 0x337B6D8
	0x027251E8 MADD W0, W20, W25, W0
	0x027251EC LDP X20, X19, [X31 + 0x30]
	0x027251F0 LDP X22, X21, [X31 + 0x20]
	0x027251F4 LDP X24, X23, [X31 + 0x10]
	0x027251F8 LDP X30, X25, [X31], #0x40
	0x027251FC RET
	0x02725200 BL 0x1C16F20
	0x02725204 STP X1, X2, [X0]
	0x02725208 RET
	0x0272520C STR X30, [X31 - 0x20]!
	0x02725210 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X2+32]
	007 Move X21, X1
	008 Move X20, X8
	009 Move W9, [X0+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move X8, [X0+192]
	016 Move X0, X19
	017 Move X1, X21
	018 Move X2, [X8+8]
	019 Call 0x27253F8, X0, X1
	020 Move V1, [X19+16]
	021 Move V0, [X19+32]
	022 Move V2, [X19]
	023 Move [X20+16], V1
	024 Move [X20+24], V0
	025 Move [X20], V2
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: UnityEngine.UIElements.UQueryBuilder`1<T> Name(System.String id)

Disassembly:
	0x02725214 MOV X8, X0
	0x02725218 LDR X0, [X2 + 0x20]
	0x0272521C LDR X19, [X8 + 0x8]
	0x02725220 MOV X20, X1
	0x02725224 LDRB W9, [X0 + 0x135]
	0x02725228 TBNZ X9, 0x0, 0x2725230
	0x0272522C BL 0x1C5C684
	0x02725230 MOV X0, X20
	0x02725234 MOV X1, X19
	0x02725238 LDP X20, X19, [X31 + 0x10]
	0x0272523C LDR X30, [X31], #0x20
	0x02725240 RET
	0x02725244 STP X30, X21, [X31 - 0x20]!
	0x02725248 STP X20, X19, [X31 + 0x10]
	0x0272524C CBZ X1, 0x272533C
	0x02725250 MOV X19, X1
	0x02725254 MOV X21, X0
	0x02725258 MOV X0, X1
	0x0272525C MOV X1, X31
	0x02725260 MOV X20, X2
	0x02725264 BL 0x3E19CAC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X0
	006 Move X0, [X2+32]
	007 Move X21, X1
	008 Move X20, X8
	009 Move W9, [X0+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {15}
	014 Call 0x1C5D684
	015 Move X8, [X0+192]
	016 Move X0, X19
	017 Move X1, X21
	018 Move X2, [X8+24]
	019 Call 0x272551C, X0, X1
	020 Move V1, [X19+16]
	021 Move V0, [X19+32]
	022 Move V2, [X19]
	023 Move [X20+16], V1
	024 Move [X20+24], V0
	025 Move [X20], V2
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: UnityEngine.UIElements.UQueryBuilder`1<T> SingleBaseType()

Disassembly:
	0x02725268 TBZ X0, 0x0, 0x2725284
	0x0272526C LDR X8, [X19]
	0x02725270 MOV X0, X19
	0x02725274 LDP X9, X1, [X8 + 0x1B8]
	0x02725278 BLR X9
	0x0272527C MOV X19, X0
	0x02725280 CBZ X0, 0x272533C
	0x02725284 LDR X8, [X19]
	0x02725288 LDP X1, X2, [X21]
	0x0272528C MOV X0, X19
	0x02725290 LDP X9, X3, [X8 + 0x1A8]
	0x02725294 BLR X9
	0x02725298 LDR X0, [X20 + 0x20]
	0x0272529C LDR X21, [X19 + 0x18]
	0x027252A0 LDRB W8, [X0 + 0x135]
	0x027252A4 TBNZ X8, 0x0, 0x27252AC
	0x027252A8 BL 0x1C5C684
	0x027252AC LDR X8, [X0 + 0xC0]
	0x027252B0 LDR X1, [X8 + 0x10]
	0x027252B4 LDRB W8, [X1 + 0x135]
	0x027252B8 TBNZ X8, 0x0, 0x27252C8
	0x027252BC MOV X0, X1
	0x027252C0 BL 0x1C5C684
	0x027252C4 MOV X1, X0
	0x027252C8 MOV X0, X21
	0x027252CC BL 0x1C16E00
	0x027252D0 LDR X8, [X20 + 0x20]
	0x027252D4 MOV X20, X0
	0x027252D8 LDRB W9, [X8 + 0x135]
	0x027252DC TBNZ X9, 0x0, 0x27252EC
	0x027252E0 MOV X0, X8
	0x027252E4 BL 0x1C5C684
	0x027252E8 MOV X8, X0
	0x027252EC LDR X8, [X8 + 0xC0]
	0x027252F0 LDR X21, [X8 + 0x10]
	0x027252F4 LDRB W8, [X21 + 0x135]
	0x027252F8 TBNZ X8, 0x0, 0x2725308
	0x027252FC MOV X0, X21
	0x02725300 BL 0x1C5C684
	0x02725304 MOV X21, X0
	0x02725308 CBZ X20, 0x2725328
	0x0272530C MOV X0, X20
	0x02725310 MOV X1, X21
	0x02725314 BL 0x1C16E00
	0x02725318 CBNZ X0, 0x272532C
	0x0272531C MOV X0, X20
	0x02725320 MOV X1, X21
	0x02725324 BL 0x1C171E0
	0x02725328 MOV X0, X31
	0x0272532C STR X31, [X19 + 0x18]
	0x02725330 LDP X20, X19, [X31 + 0x10]
	0x02725334 LDP X30, X21, [X31], #0x20
	0x02725338 RET
	0x0272533C BL 0x1C16F20
	0x02725340 STR X30, [X31 - 0x30]!
	0x02725344 STP X22, X21, [X31 + 0x10]
	0x02725348 STP X20, X19, [X31 + 0x20]
	0x0272534C ADRP X22, 0x1CB5000
	0x02725350 ADRP X21, 0x19F8000
	0x02725354 LDRB W8, [X22 + 0x64B]
	0x02725358 LDR X21, [X21 + 0xA68]
	0x0272535C MOV X20, X1
	0x02725360 MOV X19, X0
	0x02725364 TBNZ X8, 0x0, 0x272537C
	0x02725368 ADRP X0, 0x19F8000
	0x0272536C LDR X0, [X0 + 0xA68]
	0x02725370 BL 0x1C16CF4
	0x02725374 MOVZ W8, 0x1
	0x02725378 STRB W8, [X22 + 0x64B]
	0x0272537C LDR X0, [X21]
	0x02725380 LDR W8, [X0 + 0xE0]
	0x02725384 CBNZ W8, 0x2725390
	0x02725388 BL 0x1C16DFC
	0x0272538C LDR X0, [X21]
	0x02725390 LDR X8, [X20 + 0x20]
	0x02725394 LDR X9, [X0 + 0xB8]
	0x02725398 LDRB W10, [X8 + 0x135]
	0x0272539C LDR X21, [X9]
	0x027253A0 TBNZ X10, 0x0, 0x27253B0
	0x027253A4 MOV X0, X8
	0x027253A8 BL 0x1C5C684
	0x027253AC MOV X8, X0
	0x027253B0 LDR X8, [X8 + 0xC0]
	0x027253B4 LDR X0, [X8 + 0x20]
	0x027253B8 LDRB W8, [X0 + 0x135]
	0x027253BC TBNZ X8, 0x0, 0x27253C4
	0x027253C0 BL 0x1C5C684
	0x027253C4 LDR W8, [X0 + 0xE0]
	0x027253C8 CBNZ W8, 0x27253D0
	0x027253CC BL 0x1C16DFC
	0x027253D0 LDR X0, [X20 + 0x20]
	0x027253D4 LDRB W8, [X0 + 0x135]
	0x027253D8 TBNZ X8, 0x0, 0x27253E0
	0x027253DC BL 0x1C5C684
	0x027253E0 LDR X8, [X0 + 0xC0]
	0x027253E4 MOV X0, X19
	0x027253E8 MOV X1, X21
	0x027253EC LDP X20, X19, [X31 + 0x20]
	0x027253F0 LDR X2, [X8 + 0x18]
	0x027253F4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X21, 0x1CB6000
	008 Move W9, [X21+1601]
	009 Move X22, X1
	010 Move X19, X0
	011 Move X20, X8
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x19F9000
	017 Move X0, [X0+2536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1601], W8
	021 Move X0, [X22+32]
	022 Move W8, [X0+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move X0, X19
	029 Call 0x27250BC, X0
	030 Move X8, [X22+32]
	031 Move X21, X0
	032 Move W9, [X8+309]
	033 Move TEMP, X9
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {40}
	037 Move X0, X8
	038 Call 0x1C5D684
	039 Move X8, X0
	040 Move X8, [X8+192]
	041 Move X0, [X8+48]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, [X22+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+48]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+184]
	068 Move X1, X31
	069 Move X0, [X8]
	070 Add X8, X31, 64
	071 Call StyleSelectorPart.CreatePredicate, X0
	072 Move V0, [X31+4]
	073 Move X8, [X31+80]
	074 Move [X31], V0
	075 Move [X31+16], X8
	076 Compare X21, 0
	077 JumpIfEqual {125}
	078 Move V0, [X31]
	079 Move X8, [X31+16]
	080 Move X9, 0x19F9000
	081 Move X9, [X9+2536]
	082 Move [X31+2], V0
	083 Move [X31+48], X8
	084 Move W11, [X21+28]
	085 Move X8, [X21+16]
	086 Move X10, [X9]
	087 Add W9, W11, 1
	088 Move [X21+28], W9
	089 Compare X8, 0
	090 JumpIfEqual {125}
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Move W11, [X8+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add W10, W9, 1
	095 Move [X21+24], W10
	096 Move X10, [X31+48]
	097 Move V0, [X31+2]
	098 Move W11, 24
	099 NotImplemented "Instruction MADD not yet implemented."
	100 Move [X8+48], X10
	101 Move [X8+2], V0
	102 Move X8, [X10+32]
	103 Move V0, [X31+2]
	104 Move X9, [X31+48]
	105 Add X1, X31, 64
	106 Move X8, [X8+192]
	107 Move X0, X21
	108 Move X2, [X8+112]
	109 Move [X31+4], V0
	110 Move [X31+80], X9
	111 Call List`1<StyleSelectorPart>.AddWithResize, X0, X1
	112 Move V1, [X19+16]
	113 Move V0, [X19+32]
	114 Move V2, [X19]
	115 Move X22, [X31+112]
	116 Move X21, [X31+120]
	117 Move X30, [X31+96]
	118 Move [X20+16], V1
	119 Move [X20+24], V0
	120 Move [X20], V2
	121 Move X20, [X31+128]
	122 Move X19, [X31+136]
	123 Add X31, X31, 144
	124 Return X0
	125 Call 0x1C17F20

Method: System.Void AddClass(System.String c)

Disassembly:
	0x027253F8 LDR X30, [X31], #0x30
	0x027253FC B 0x2725244
	0x02725400 SUB X31, X31, 0x30
	0x02725404 STP X31, X30, [X31 + 0x8]
	0x02725408 STP X20, X19, [X31 + 0x20]
	0x0272540C LDP X19, X20, [X0]
	0x02725410 STR X31, [X31]
	0x02725414 LDR X0, [X1 + 0x20]
	0x02725418 LDRB W8, [X0 + 0x135]
	0x0272541C TBNZ X8, 0x0, 0x2725424
	0x02725420 BL 0x1C5C684
	0x02725424 LDR X8, [X0 + 0xC0]
	0x02725428 ADD X0, X31, 0x0
	0x0272542C MOV X1, X19
	0x02725430 MOV X2, X20
	0x02725434 LDR X3, [X8 + 0x30]
	0x02725438 BL 0x2BC5564
	0x0272543C LDP X0, X1, [X31]
	0x02725440 LDP X20, X19, [X31 + 0x20]
	0x02725444 LDR X30, [X31 + 0x10]
	0x02725448 ADD X31, X31, 0x30
	0x0272544C RET
	0x02725450 SUB X31, X31, 0x30
	0x02725454 STR X30, [X31 + 0x10]
	0x02725458 STP X20, X19, [X31 + 0x20]
	0x0272545C LDR X8, [X1 + 0x20]
	0x02725460 MOV X19, X1
	0x02725464 MOV X20, X0
	0x02725468 LDRB W9, [X8 + 0x135]
	0x0272546C TBNZ X9, 0x0, 0x272547C
	0x02725470 MOV X0, X8
	0x02725474 BL 0x1C5C684
	0x02725478 MOV X8, X0
	0x0272547C LDR X8, [X8 + 0xC0]
	0x02725480 LDR X0, [X8 + 0x20]
	0x02725484 LDRB W8, [X0 + 0x135]
	0x02725488 TBNZ X8, 0x0, 0x2725490
	0x0272548C BL 0x1C5C684
	0x02725490 LDR W8, [X0 + 0xE0]
	0x02725494 CBNZ W8, 0x272549C
	0x02725498 BL 0x1C16DFC
	0x0272549C LDR X0, [X19 + 0x20]
	0x027254A0 LDRB W8, [X0 + 0x135]
	0x027254A4 TBNZ X8, 0x0, 0x27254AC
	0x027254A8 BL 0x1C5C684
	0x027254AC LDR X8, [X0 + 0xC0]
	0x027254B0 MOV X0, X20
	0x027254B4 LDR X1, [X8 + 0x38]
	0x027254B8 BL 0x2725400
	0x027254BC STP X0, X1, [X31]
	0x027254C0 LDR X0, [X19 + 0x20]
	0x027254C4 LDRB W8, [X0 + 0x135]
	0x027254C8 TBNZ X8, 0x0, 0x27254D0
	0x027254CC BL 0x1C5C684
	0x027254D0 LDR X8, [X0 + 0xC0]
	0x027254D4 ADD X1, X31, 0x0
	0x027254D8 LDR X0, [X8 + 0x28]
	0x027254DC BL 0x1C16E04
	0x027254E0 LDP X20, X19, [X31 + 0x20]
	0x027254E4 LDR X30, [X31 + 0x10]
	0x027254E8 ADD X31, X31, 0x30
	0x027254EC RET
	0x027254F0 SUB X31, X31, 0x30
	0x027254F4 STR X30, [X31 + 0x10]
	0x027254F8 STP X20, X19, [X31 + 0x20]
	0x027254FC LDR X8, [X1 + 0x20]
	0x02725500 MOV X19, X1
	0x02725504 MOV X20, X0
	0x02725508 LDRB W9, [X8 + 0x135]
	0x0272550C TBNZ X9, 0x0, 0x272551C
	0x02725510 MOV X0, X8
	0x02725514 BL 0x1C5C684
	0x02725518 MOV X8, X0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0x1CB6000
	008 Move W8, [X22+1602]
	009 Move X21, X2
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x19F9000
	017 Move X0, [X0+2536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1602], W8
	021 Compare X20, 0
	022 JumpIfEqual {77}
	023 Move X0, [X21+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X0, X19
	031 Call 0x27250BC, X0
	032 Move X19, X0
	033 Add X8, X31, 64
	034 Move X0, X20
	035 Move X1, X31
	036 Call StyleSelectorPart.CreateClass, X0
	037 Move V0, [X31+4]
	038 Move X8, [X31+80]
	039 Move [X31], V0
	040 Move [X31+16], X8
	041 Compare X19, 0
	042 JumpIfEqual {84}
	043 Move V0, [X31]
	044 Move X8, [X31+16]
	045 Move X9, 0x19F9000
	046 Move X9, [X9+2536]
	047 Move [X31+2], V0
	048 Move [X31+48], X8
	049 Move W11, [X19+28]
	050 Move X8, [X19+16]
	051 Move X10, [X9]
	052 Add W9, W11, 1
	053 Move [X19+28], W9
	054 Compare X8, 0
	055 JumpIfEqual {84}
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Move W11, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add W10, W9, 1
	060 Move [X19+24], W10
	061 Move X10, [X31+48]
	062 Move V0, [X31+2]
	063 Move W11, 24
	064 NotImplemented "Instruction MADD not yet implemented."
	065 Move [X8+48], X10
	066 Move [X8+2], V0
	067 Move X8, [X10+32]
	068 Move V0, [X31+2]
	069 Move X9, [X31+48]
	070 Add X1, X31, 64
	071 Move X8, [X8+192]
	072 Move X0, X19
	073 Move X2, [X8+112]
	074 Move [X31+4], V0
	075 Move [X31+80], X9
	076 Call List`1<StyleSelectorPart>.AddWithResize, X0, X1
	077 Move X20, [X31+128]
	078 Move X19, [X31+136]
	079 Move X22, [X31+112]
	080 Move X21, [X31+120]
	081 Move X30, [X31+96]
	082 Add X31, X31, 144
	083 Return 
	084 Call 0x1C17F20

Method: System.Void AddName(System.String id)

Disassembly:
	0x0272551C LDR X8, [X8 + 0xC0]
	0x02725520 LDR X0, [X8 + 0x20]
	0x02725524 LDRB W8, [X0 + 0x135]
	0x02725528 TBNZ X8, 0x0, 0x2725530
	0x0272552C BL 0x1C5C684
	0x02725530 LDR W8, [X0 + 0xE0]
	0x02725534 CBNZ W8, 0x272553C
	0x02725538 BL 0x1C16DFC
	0x0272553C LDR X0, [X19 + 0x20]
	0x02725540 LDRB W8, [X0 + 0x135]
	0x02725544 TBNZ X8, 0x0, 0x272554C
	0x02725548 BL 0x1C5C684
	0x0272554C LDR X8, [X0 + 0xC0]
	0x02725550 MOV X0, X20
	0x02725554 LDR X1, [X8 + 0x38]
	0x02725558 BL 0x2725400
	0x0272555C STP X0, X1, [X31]
	0x02725560 LDR X0, [X19 + 0x20]
	0x02725564 LDRB W8, [X0 + 0x135]
	0x02725568 TBNZ X8, 0x0, 0x2725570
	0x0272556C BL 0x1C5C684
	0x02725570 LDR X8, [X0 + 0xC0]
	0x02725574 ADD X1, X31, 0x0
	0x02725578 LDR X0, [X8 + 0x28]
	0x0272557C BL 0x1C16E04
	0x02725580 LDP X20, X19, [X31 + 0x20]
	0x02725584 LDR X30, [X31 + 0x10]
	0x02725588 ADD X31, X31, 0x30
	0x0272558C RET
	0x02725590 STR X30, [X31 - 0x30]!
	0x02725594 STP X22, X21, [X31 + 0x10]
	0x02725598 STP X20, X19, [X31 + 0x20]
	0x0272559C ADRP X22, 0x1CB5000
	0x027255A0 LDRB W8, [X22 + 0x64C]
	0x027255A4 MOV X19, X2
	0x027255A8 MOV X21, X1
	0x027255AC MOV X20, X0
	0x027255B0 TBNZ X8, 0x0, 0x27255C8
	0x027255B4 ADRP X0, 0x19F8000
	0x027255B8 LDR X0, [X0 + 0xA58]
	0x027255BC BL 0x1C16CF4
	0x027255C0 MOVZ W8, 0x1
	0x027255C4 STRB W8, [X22 + 0x64C]
	0x027255C8 LDR X8, [X20]
	0x027255CC CMP X8, X21
	0x027255D0 B.EQ 0x27255E8
	0x027255D4 LDP X20, X19, [X31 + 0x20]
	0x027255D8 LDP X22, X21, [X31 + 0x10]
	0x027255DC MOV W0, W31
	0x027255E0 LDR X30, [X31], #0x30
	0x027255E4 RET
	0x027255E8 ADRP X8, 0x19F8000
	0x027255EC LDR X8, [X8 + 0xA58]
	0x027255F0 LDR X0, [X8]
	0x027255F4 BL 0x211B0E8
	0x027255F8 CBZ X0, 0x272561C
	0x027255FC LDR X8, [X0]
	0x02725600 LDR X1, [X20 + 0x8]
	0x02725604 MOV X2, X19
	0x02725608 LDP X20, X19, [X31 + 0x20]
	0x0272560C LDP X4, X3, [X8 + 0x1B8]
	0x02725610 LDP X22, X21, [X31 + 0x10]
	0x02725614 LDR X30, [X31], #0x30
	0x02725618 BR X4
	0x0272561C BL 0x1C16F20
	0x02725620 STP X30, X21, [X31 - 0x20]!
	0x02725624 STP X20, X19, [X31 + 0x10]
	0x02725628 LDR X8, [X2 + 0x20]
	0x0272562C MOV X20, X2
	0x02725630 MOV X21, X1
	0x02725634 MOV X19, X0
	0x02725638 LDRB W9, [X8 + 0x135]
	0x0272563C TBNZ X9, 0x0, 0x272564C

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0x1CB6000
	008 Move W8, [X22+1603]
	009 Move X21, X2
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x19F9000
	017 Move X0, [X0+2536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1603], W8
	021 Compare X20, 0
	022 JumpIfEqual {77}
	023 Move X0, [X21+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X0, X19
	031 Call 0x27250BC, X0
	032 Move X19, X0
	033 Add X8, X31, 64
	034 Move X0, X20
	035 Move X1, X31
	036 Call StyleSelectorPart.CreateId, X0
	037 Move V0, [X31+4]
	038 Move X8, [X31+80]
	039 Move [X31], V0
	040 Move [X31+16], X8
	041 Compare X19, 0
	042 JumpIfEqual {84}
	043 Move V0, [X31]
	044 Move X8, [X31+16]
	045 Move X9, 0x19F9000
	046 Move X9, [X9+2536]
	047 Move [X31+2], V0
	048 Move [X31+48], X8
	049 Move W11, [X19+28]
	050 Move X8, [X19+16]
	051 Move X10, [X9]
	052 Add W9, W11, 1
	053 Move [X19+28], W9
	054 Compare X8, 0
	055 JumpIfEqual {84}
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Move W11, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add W10, W9, 1
	060 Move [X19+24], W10
	061 Move X10, [X31+48]
	062 Move V0, [X31+2]
	063 Move W11, 24
	064 NotImplemented "Instruction MADD not yet implemented."
	065 Move [X8+48], X10
	066 Move [X8+2], V0
	067 Move X8, [X10+32]
	068 Move V0, [X31+2]
	069 Move X9, [X31+48]
	070 Add X1, X31, 64
	071 Move X8, [X8+192]
	072 Move X0, X19
	073 Move X2, [X8+112]
	074 Move [X31+4], V0
	075 Move [X31+80], X9
	076 Call List`1<StyleSelectorPart>.AddWithResize, X0, X1
	077 Move X20, [X31+128]
	078 Move X19, [X31+136]
	079 Move X22, [X31+112]
	080 Move X21, [X31+120]
	081 Move X30, [X31+96]
	082 Add X31, X31, 144
	083 Return 
	084 Call 0x1C17F20

Method: System.Void AddPseudoStatesRuleIfNecessasy()

Disassembly:
	0x02725640 MOV X0, X8
	0x02725644 BL 0x1C5C684
	0x02725648 MOV X8, X0
	0x0272564C LDR X8, [X8 + 0xC0]
	0x02725650 LDR X0, [X8]
	0x02725654 LDRB W8, [X0 + 0x135]
	0x02725658 TBNZ X8, 0x0, 0x2725660
	0x0272565C BL 0x1C5C684
	0x02725660 CBZ X21, 0x2725670
	0x02725664 LDR X8, [X21]
	0x02725668 CMP X8, X0
	0x0272566C B.EQ 0x2725680
	0x02725670 LDP X20, X19, [X31 + 0x10]
	0x02725674 MOV W0, W31
	0x02725678 LDP X30, X21, [X31], #0x20
	0x0272567C RET
	0x02725680 LDR X0, [X20 + 0x20]
	0x02725684 LDRB W8, [X0 + 0x135]
	0x02725688 TBNZ X8, 0x0, 0x2725690
	0x0272568C BL 0x1C5C684
	0x02725690 LDR X8, [X0 + 0xC0]
	0x02725694 LDR X0, [X8 + 0x20]
	0x02725698 LDRB W8, [X0 + 0x135]
	0x0272569C TBNZ X8, 0x0, 0x27256A4
	0x027256A0 BL 0x1C5C684
	0x027256A4 LDR W8, [X0 + 0xE0]
	0x027256A8 CBNZ W8, 0x27256B0
	0x027256AC BL 0x1C16DFC
	0x027256B0 LDR X0, [X20 + 0x20]
	0x027256B4 LDRB W8, [X0 + 0x135]
	0x027256B8 TBNZ X8, 0x0, 0x27256C0
	0x027256BC BL 0x1C5C684
	0x027256C0 LDR X8, [X0 + 0xC0]
	0x027256C4 LDR X1, [X8]
	0x027256C8 LDRB W8, [X1 + 0x135]
	0x027256CC TBNZ X8, 0x0, 0x27256DC
	0x027256D0 MOV X0, X1
	0x027256D4 BL 0x1C5C684
	0x027256D8 MOV X1, X0
	0x027256DC LDR X8, [X21]
	0x027256E0 LDR X9, [X1 + 0x40]
	0x027256E4 MOV X0, X21
	0x027256E8 LDR X8, [X8 + 0x40]
	0x027256EC CMP X8, X9
	0x027256F0 B.NE 0x2725728
	0x027256F4 BL 0x1C16E08
	0x027256F8 MOV X8, X0
	0x027256FC LDR X0, [X20 + 0x20]
	0x02725700 LDP X21, X20, [X8]
	0x02725704 LDRB W9, [X0 + 0x135]
	0x02725708 TBNZ X9, 0x0, 0x2725710
	0x0272570C BL 0x1C5C684
	0x02725710 MOV X0, X19
	0x02725714 MOV X2, X20
	0x02725718 LDP X20, X19, [X31 + 0x10]
	0x0272571C MOV X1, X21
	0x02725720 LDP X30, X21, [X31], #0x20
	0x02725724 B 0x2725590
	0x02725728 BL 0x1C171E0
	0x0272572C STP X30, X21, [X31 - 0x20]!
	0x02725730 STP X20, X19, [X31 + 0x10]
	0x02725734 ADRP X20, 0x1CB5000
	0x02725738 ADRP X21, 0x19F8000
	0x0272573C LDRB W8, [X20 + 0x64D]
	0x02725740 LDR X21, [X21 + 0xA60]
	0x02725744 MOV X19, X0
	0x02725748 TBNZ X8, 0x0, 0x272576C
	0x0272574C ADRP X0, 0x19F8000
	0x02725750 LDR X0, [X0 + 0xA58]
	0x02725754 BL 0x1C16CF4
	0x02725758 ADRP X0, 0x19F8000
	0x0272575C LDR X0, [X0 + 0xA60]
	0x02725760 BL 0x1C16CF4
	0x02725764 MOVZ W8, 0x1
	0x02725768 STRB W8, [X20 + 0x64D]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+120], X21
	004 Move [X31+128], X20
	005 Move [X31+136], X19
	006 Move X21, 0x1CB6000
	007 Move W8, [X21+1604]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x19F9000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1604], W8
	019 Move W8, [X19+36]
	020 Compare W8, 0
	021 JumpIfNotEqual {25}
	022 Move W8, [X19+40]
	023 Compare W8, 0
	024 JumpIfEqual {82}
	025 Move X0, [X20+32]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move X0, X19
	033 Call 0x27250BC, X0
	034 Move X19, X0
	035 Add X0, X31, 24
	036 Move W1, 4
	037 Move X2, X31
	038 Move [X31+32], X31
	039 Move [X31+40], X31
	040 Move [X31+24], X31
	041 Call StyleSelectorPart.set_type, X0, X1
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move X8, [X31+40]
	044 Move [X31], V0
	045 Move [X31+16], X8
	046 Compare X19, 0
	047 JumpIfEqual {88}
	048 Move V0, [X31]
	049 Move X8, [X31+16]
	050 Move X9, 0x19F9000
	051 Move X9, [X9+2536]
	052 Move [X31+3], V0
	053 Move [X31+64], X8
	054 Move W11, [X19+28]
	055 Move X8, [X19+16]
	056 Move X10, [X9]
	057 Add W9, W11, 1
	058 Move [X19+28], W9
	059 Compare X8, 0
	060 JumpIfEqual {88}
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Move W11, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add W10, W9, 1
	065 Move [X19+24], W10
	066 Move X10, [X31+64]
	067 Move V0, [X31+3]
	068 Move W11, 24
	069 NotImplemented "Instruction MADD not yet implemented."
	070 Move [X8+48], X10
	071 Move [X8+2], V0
	072 Move X8, [X10+32]
	073 Move V0, [X31+3]
	074 Move X9, [X31+64]
	075 Add X1, X31, 80
	076 Move X8, [X8+192]
	077 Move X0, X19
	078 Move X2, [X8+112]
	079 Move [X31+5], V0
	080 Move [X31+96], X9
	081 Call List`1<StyleSelectorPart>.AddWithResize, X0, X1
	082 Move X20, [X31+128]
	083 Move X19, [X31+136]
	084 Move X30, [X31+112]
	085 Move X21, [X31+120]
	086 Add X31, X31, 144
	087 Return 
	088 Call 0x1C17F20

Method: System.Void FinishSelector()

Disassembly:
	0x0272576C LDR X0, [X21]
	0x02725770 BL 0x211B0E8
	0x02725774 CBZ X0, 0x27257D8
	0x02725778 LDR X8, [X0]
	0x0272577C LDR X1, [X19]
	0x02725780 ADRP X20, 0x19F8000
	0x02725784 LDP X9, X2, [X8 + 0x1C8]
	0x02725788 LDR X20, [X20 + 0xA58]
	0x0272578C BLR X9
	0x02725790 LDR X8, [X20]
	0x02725794 MOV W20, W0
	0x02725798 MOV X0, X8
	0x0272579C BL 0x211B0E8
	0x027257A0 CBZ X0, 0x27257D8
	0x027257A4 LDR X8, [X0]
	0x027257A8 LDR X1, [X19 + 0x8]
	0x027257AC LDP X9, X2, [X8 + 0x1C8]
	0x027257B0 BLR X9
	0x027257B4 MOVZ W8, 0x5529
	0x027257B8 MOVK W8, 0xA5550000
	0x027257BC MADD W8, W20, W8, W0
	0x027257C0 LDP X20, X19, [X31 + 0x10]
	0x027257C4 MOVZ W9, 0x1975
	0x027257C8 MOVK W9, 0xBCB20000
	0x027257CC ADD W0, W8, W9
	0x027257D0 LDP X30, X21, [X31], #0x20
	0x027257D4 RET
	0x027257D8 BL 0x1C16F20
	0x027257DC STR X30, [X31 - 0x20]!
	0x027257E0 STP X20, X19, [X31 + 0x10]
	0x027257E4 MOV X19, X0
	0x027257E8 LDR X0, [X0 + 0x20]
	0x027257EC LDRB W8, [X0 + 0x135]
	0x027257F0 TBNZ X8, 0x0, 0x27257F8
	0x027257F4 BL 0x1C5C684
	0x027257F8 LDR X8, [X0 + 0xC0]
	0x027257FC LDR X0, [X8 + 0x50]
	0x02725800 LDRB W8, [X0 + 0x135]
	0x02725804 TBNZ X8, 0x0, 0x272580C
	0x02725808 BL 0x1C5C684
	0x0272580C BL 0x1C16F10
	0x02725810 LDR X8, [X19 + 0x20]
	0x02725814 MOV X20, X0
	0x02725818 LDRB W9, [X8 + 0x135]
	0x0272581C TBNZ X9, 0x0, 0x272582C
	0x02725820 MOV X0, X8
	0x02725824 BL 0x1C5C684
	0x02725828 MOV X8, X0
	0x0272582C LDR X8, [X8 + 0xC0]
	0x02725830 MOV X0, X20
	0x02725834 LDR X1, [X8 + 0x58]
	0x02725838 BL 0x297E308
	0x0272583C LDR X0, [X19 + 0x20]
	0x02725840 LDRB W8, [X0 + 0x135]
	0x02725844 TBNZ X8, 0x0, 0x272584C
	0x02725848 BL 0x1C5C684
	0x0272584C LDR X8, [X0 + 0xC0]
	0x02725850 LDR X0, [X8 + 0x20]
	0x02725854 LDRB W8, [X0 + 0x135]
	0x02725858 TBNZ X8, 0x0, 0x2725860
	0x0272585C BL 0x1C5C684
	0x02725860 LDR X8, [X0 + 0xB8]
	0x02725864 STR X20, [X8]
	0x02725868 LDR X0, [X19 + 0x20]
	0x0272586C LDRB W8, [X0 + 0x135]
	0x02725870 TBNZ X8, 0x0, 0x2725878
	0x02725874 BL 0x1C5C684
	0x02725878 LDR X8, [X0 + 0xC0]
	0x0272587C LDR X0, [X8 + 0x20]
	0x02725880 LDRB W8, [X0 + 0x135]
	0x02725884 TBNZ X8, 0x0, 0x272588C
	0x02725888 BL 0x1C5C684
	0x0272588C LDR X0, [X19 + 0x20]
	0x02725890 LDRB W8, [X0 + 0x135]
	0x02725894 TBNZ X8, 0x0, 0x272589C
	0x02725898 BL 0x1C5C684
	0x0272589C LDR X8, [X0 + 0xC0]
	0x027258A0 LDR X0, [X8 + 0x60]
	0x027258A4 LDRB W8, [X0 + 0x135]
	0x027258A8 TBNZ X8, 0x0, 0x27258B0
	0x027258AC BL 0x1C5C684
	0x027258B0 BL 0x1C16F10
	0x027258B4 LDR X8, [X19 + 0x20]
	0x027258B8 MOV X20, X0
	0x027258BC LDRB W9, [X8 + 0x135]
	0x027258C0 TBNZ X9, 0x0, 0x27258D0
	0x027258C4 MOV X0, X8
	0x027258C8 BL 0x1C5C684
	0x027258CC MOV X8, X0
	0x027258D0 LDR X8, [X8 + 0xC0]
	0x027258D4 MOV X0, X20
	0x027258D8 LDR X1, [X8 + 0x68]
	0x027258DC BL 0x2EF30E8
	0x027258E0 LDR X0, [X19 + 0x20]
	0x027258E4 LDRB W8, [X0 + 0x135]
	0x027258E8 TBNZ X8, 0x0, 0x27258F0
	0x027258EC BL 0x1C5C684
	0x027258F0 LDR X8, [X0 + 0xC0]
	0x027258F4 LDR X0, [X8 + 0x20]
	0x027258F8 LDRB W8, [X0 + 0x135]
	0x027258FC TBNZ X8, 0x0, 0x2725904
	0x02725900 BL 0x1C5C684
	0x02725904 LDR X8, [X0 + 0xB8]
	0x02725908 STR X20, [X8 + 0x8]
	0x0272590C LDR X0, [X19 + 0x20]
	0x02725910 LDRB W8, [X0 + 0x135]
	0x02725914 TBNZ X8, 0x0, 0x272591C
	0x02725918 BL 0x1C5C684
	0x0272591C LDR X8, [X0 + 0xC0]
	0x02725920 LDR X0, [X8 + 0x20]
	0x02725924 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1CB6000
	006 Move W8, [X21+1605]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x19F9000
	014 Move X0, [X0+2544]
	015 Call 0x1C17CF4
	016 Move X0, 0x19F9000
	017 Move X0, [X0+2552]
	018 Call 0x1C17CF4
	019 Move X0, 0x19F9000
	020 Move X0, [X0+2560]
	021 Call 0x1C17CF4
	022 Move X0, 0x19F9000
	023 Move X0, [X0+2568]
	024 Call 0x1C17CF4
	025 Move X0, 0x19F9000
	026 Move X0, [X0+2576]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+1605], W8
	030 Move X0, [X20+32]
	031 Move W8, [X0+309]
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {37}
	036 Call 0x1C5D684
	037 Move X8, [X0+192]
	038 Move X0, X19
	039 Move X1, [X8+56]
	040 Call 0x27259B0, X0
	041 Move X0, [X20+32]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 Move X0, X19
	049 Call 0x2725044, X0
	050 Compare X0, 0
	051 JumpIfEqual {139}
	052 Move W8, [X0+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, 0x19F9000
	055 Move X8, [X8+2576]
	056 Move X0, [X8]
	057 Call 0x1C17F10
	058 Move X1, X31
	059 Move X21, X0
	060 Call StyleComplexSelector..ctor, X0
	061 Move X0, [X20+32]
	062 Move W8, [X0+309]
	063 Move TEMP, X8
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfEqual {68}
	067 Call 0x1C5D684
	068 Move X0, X19
	069 Call 0x2725044, X0
	070 Compare X0, 0
	071 JumpIfEqual {139}
	072 Move X8, 0x19F9000
	073 Move X8, [X8+2560]
	074 Move X1, [X8]
	075 Call List`1<Object>.ToArray, X0
	076 Compare X21, 0
	077 JumpIfEqual {139}
	078 Move X1, X0
	079 Move X0, X21
	080 Move X2, X31
	081 Call StyleComplexSelector.set_selectors, X0, X1
	082 Move X0, [X20+32]
	083 Move W8, [X0+309]
	084 Move TEMP, X8
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {89}
	088 Call 0x1C5D684
	089 Move X0, X19
	090 Call 0x2725044, X0
	091 Compare X0, 0
	092 JumpIfEqual {139}
	093 Move W2, [X0+24]
	094 Move W8, [X0+28]
	095 Add W8, W8, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move [X0+24], W31
	098 Move [X0+28], W8
	099 Move X0, [X0+16]
	100 Move W1, W31
	101 Move X3, X31
	102 Call Array.Clear, X0, X1, X2
	103 Move X0, [X19+24]
	104 Compare X0, 0
	105 JumpIfEqual {139}
	106 Move X9, 0x19F9000
	107 Move X9, [X9+2544]
	108 Move W10, [X0+28]
	109 Move X8, [X0+16]
	110 Move X9, [X9]
	111 Add W10, W10, 1
	112 Move [X0+28], W10
	113 Compare X8, 0
	114 JumpIfEqual {139}
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Move W11, [X8+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Add W9, W10, 1
	119 Add X8, X8, X10
	120 Move [X0+24], W9
	121 Move [X8+32], X31
	122 Move [X8+40], X21
	123 Move X20, [X31+16]
	124 Move X19, [X31+24]
	125 Move X30, [X31+32]
	126 Move X21, [X31+40]
	127 Return 
	128 Move X8, [X9+32]
	129 Move X20, [X31+16]
	130 Move X19, [X31+24]
	131 Move X1, X31
	132 Move X2, X21
	133 Move X8, [X8+192]
	134 Move X3, [X8+112]
	135 Move X30, [X31+32]
	136 Move X21, [X31+40]
	137 Call List`1<RuleMatcher>.AddWithResize, X0, X1
	138 Return 
	139 Call 0x1C17F20

Method: System.Boolean CurrentSelectorEmpty()

Disassembly:
	0x02725928 TBNZ X8, 0x0, 0x2725930
	0x0272592C BL 0x1C5C684
	0x02725930 LDR X0, [X19 + 0x20]
	0x02725934 LDRB W8, [X0 + 0x135]
	0x02725938 TBNZ X8, 0x0, 0x2725940
	0x0272593C BL 0x1C5C684
	0x02725940 LDR X8, [X0 + 0xC0]
	0x02725944 LDR X0, [X8 + 0x70]
	0x02725948 LDRB W8, [X0 + 0x135]
	0x0272594C TBNZ X8, 0x0, 0x2725954
	0x02725950 BL 0x1C5C684
	0x02725954 BL 0x1C16F10
	0x02725958 LDR X8, [X19 + 0x20]
	0x0272595C MOV X20, X0
	0x02725960 LDRB W9, [X8 + 0x135]
	0x02725964 TBNZ X9, 0x0, 0x2725974
	0x02725968 MOV X0, X8
	0x0272596C BL 0x1C5C684
	0x02725970 MOV X8, X0
	0x02725974 LDR X8, [X8 + 0xC0]
	0x02725978 MOV X0, X20
	0x0272597C LDR X1, [X8 + 0x78]
	0x02725980 BL 0x2EF30E8
	0x02725984 LDR X0, [X19 + 0x20]
	0x02725988 LDRB W8, [X0 + 0x135]
	0x0272598C TBNZ X8, 0x0, 0x2725994
	0x02725990 BL 0x1C5C684
	0x02725994 LDR X8, [X0 + 0xC0]
	0x02725998 LDR X0, [X8 + 0x20]
	0x0272599C LDRB W8, [X0 + 0x135]
	0x027259A0 TBNZ X8, 0x0, 0x27259A8
	0x027259A4 BL 0x1C5C684
	0x027259A8 LDR X8, [X0 + 0xB8]
	0x027259AC STR X20, [X8 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1CB6000
	006 Move W8, [X21+1606]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x19F9000
	014 Move X0, [X0+2584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1606], W8
	018 Move X0, [X20+32]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Move X0, X19
	026 Call 0x27250BC, X0
	027 Compare X0, 0
	028 JumpIfEqual {47}
	029 Move W8, [X0+24]
	030 Compare W8, 0
	031 JumpIfNotEqual {38}
	032 Move W8, [X19+32]
	033 Compare W8, 0
	034 JumpIfNotEqual {38}
	035 Move W8, [X19+36]
	036 Compare W8, 0
	037 JumpIfEqual {44}
	038 Move W0, W31
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0
	044 Move W8, [X19+40]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 Call 0x1C17F20

Method: System.Void FinishCurrentSelector()

Disassembly:
	0x027259B0 LDR X0, [X19 + 0x20]
	0x027259B4 LDRB W8, [X0 + 0x135]
	0x027259B8 TBNZ X8, 0x0, 0x27259C0
	0x027259BC BL 0x1C5C684
	0x027259C0 LDR X8, [X0 + 0xC0]
	0x027259C4 LDR X0, [X8 + 0x20]
	0x027259C8 LDRB W8, [X0 + 0x135]
	0x027259CC TBNZ X8, 0x0, 0x27259DC
	0x027259D0 LDP X20, X19, [X31 + 0x10]
	0x027259D4 LDR X30, [X31], #0x20
	0x027259D8 B 0x1C5C684
	0x027259DC LDP X20, X19, [X31 + 0x10]
	0x027259E0 LDR X30, [X31], #0x20
	0x027259E4 RET
	0x027259E8 STP X30, X21, [X31 - 0x20]!
	0x027259EC STP X20, X19, [X31 + 0x10]
	0x027259F0 LDR X8, [X2 + 0x8]
	0x027259F4 STP X1, X2, [X0 + 0x20]
	0x027259F8 MOV X19, X0
	0x027259FC MOV X20, X1
	0x02725A00 STR X8, [X0 + 0x10]
	0x02725A04 LDRB W21, [X2 + 0x52]
	0x02725A08 STR X0, [X0 + 0x40]
	0x02725A0C MOV X0, X2
	0x02725A10 BL 0x1C16D84
	0x02725A14 TBZ X0, 0x0, 0x2725A30
	0x02725A18 CMP W21, 0x1
	0x02725A1C B.NE 0x2725A34
	0x02725A20 ADRP X8, 0xFFFFFFFFFF298000
	0x02725A24 ADD X8, X8, 0xB0
	0x02725A28 STR X8, [X19 + 0x18]
	0x02725A2C B 0x2725A44
	0x02725A30 CBZ X20, 0x2725A5C
	0x02725A34 LDR X8, [X19 + 0x10]
	0x02725A38 LDR X9, [X19 + 0x20]
	0x02725A3C STR X8, [X19 + 0x18]
	0x02725A40 STR X9, [X19 + 0x40]
	0x02725A44 ADRP X8, 0xFFFFFFFFFF298000
	0x02725A48 ADD X8, X8, 0x68
	0x02725A4C STR X8, [X19 + 0x38]
	0x02725A50 LDP X20, X19, [X31 + 0x10]
	0x02725A54 LDP X30, X21, [X31], #0x20
	0x02725A58 RET
	0x02725A5C ADRP X1, 0xFFFFFFFFFE3F6000
	0x02725A60 ADD X1, X1, 0xEE3
	0x02725A64 MOV X0, X31
	0x02725A68 BL 0x1C16F3C
	0x02725A6C MOV X1, X31
	0x02725A70 BL 0x1C16DEC
	0x02725A74 LDR X8, [X0 + 0x40]
	0x02725A78 LDR X3, [X0 + 0x18]
	0x02725A7C LDR X2, [X0 + 0x28]
	0x02725A80 AND W1, W1, 0x1
	0x02725A84 MOV X0, X8
	0x02725A88 BR X3
	0x02725A8C STP X30, X21, [X31 - 0x20]!
	0x02725A90 STP X20, X19, [X31 + 0x10]
	0x02725A94 LDR X8, [X2 + 0x8]
	0x02725A98 STP X1, X2, [X0 + 0x20]
	0x02725A9C MOV X19, X0
	0x02725AA0 MOV X20, X1
	0x02725AA4 STR X8, [X0 + 0x10]
	0x02725AA8 LDRB W21, [X2 + 0x52]
	0x02725AAC STR X0, [X0 + 0x40]
	0x02725AB0 MOV X0, X2
	0x02725AB4 BL 0x1C16D84
	0x02725AB8 TBZ X0, 0x0, 0x2725AD4
	0x02725ABC CMP W21, 0x1
	0x02725AC0 B.NE 0x2725AD8
	0x02725AC4 ADRP X8, 0xFFFFFFFFFF298000
	0x02725AC8 ADD X8, X8, 0x130
	0x02725ACC STR X8, [X19 + 0x18]
	0x02725AD0 B 0x2725AE8
	0x02725AD4 CBZ X20, 0x2725B00
	0x02725AD8 LDR X8, [X19 + 0x10]
	0x02725ADC LDR X9, [X19 + 0x20]
	0x02725AE0 STR X8, [X19 + 0x18]
	0x02725AE4 STR X9, [X19 + 0x40]
	0x02725AE8 ADRP X8, 0xFFFFFFFFFF298000
	0x02725AEC ADD X8, X8, 0xC0
	0x02725AF0 STR X8, [X19 + 0x38]
	0x02725AF4 LDP X20, X19, [X31 + 0x10]
	0x02725AF8 LDP X30, X21, [X31], #0x20
	0x02725AFC RET
	0x02725B00 ADRP X1, 0xFFFFFFFFFE3F6000
	0x02725B04 ADD X1, X1, 0xEE3
	0x02725B08 MOV X0, X31
	0x02725B0C BL 0x1C16F3C
	0x02725B10 MOV X1, X31
	0x02725B14 BL 0x1C16DEC
	0x02725B18 LDR X8, [X0 + 0x40]
	0x02725B1C LDR X2, [X0 + 0x18]
	0x02725B20 LDR X1, [X0 + 0x28]
	0x02725B24 MOV X0, X8
	0x02725B28 BR X2
	0x02725B2C STP X30, X21, [X31 - 0x20]!
	0x02725B30 STP X20, X19, [X31 + 0x10]
	0x02725B34 LDR X8, [X2 + 0x8]
	0x02725B38 STP X1, X2, [X0 + 0x20]
	0x02725B3C MOV X19, X0
	0x02725B40 MOV X20, X1
	0x02725B44 STR X8, [X0 + 0x10]
	0x02725B48 LDRB W21, [X2 + 0x52]
	0x02725B4C STR X0, [X0 + 0x40]
	0x02725B50 MOV X0, X2
	0x02725B54 BL 0x1C16D84
	0x02725B58 TBZ X0, 0x0, 0x2725B74

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x1CB6000
	006 Move W8, [X21+1607]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x19F9000
	014 Move X0, [X0+2592]
	015 Call 0x1C17CF4
	016 Move X0, 0x19F9000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0x19F9000
	020 Move X0, [X0+2608]
	021 Call 0x1C17CF4
	022 Move X0, 0x19F9000
	023 Move X0, [X0+2616]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1607], W8
	027 Move X0, [X20+32]
	028 Move W8, [X0+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {34}
	033 Call 0x1C5D684
	034 Move X8, [X0+192]
	035 Move X0, X19
	036 Move X1, [X8+72]
	037 Call 0x2725928, X0
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {126}
	042 Move X8, 0x19F9000
	043 Move X8, [X8+2616]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X1, X31
	047 Move X21, X0
	048 Call StyleSelector..ctor, X0
	049 Compare X21, 0
	050 JumpIfEqual {131}
	051 Move W1, [X19+32]
	052 Move X0, X21
	053 Move X2, X31
	054 Call StyleSelector.set_previousRelationship, X0, X1
	055 Move X0, [X20+32]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move X8, [X0+192]
	063 Move X0, X19
	064 Move X1, [X8+80]
	065 Call 0x2725640, X0
	066 Move X0, [X19+8]
	067 Compare X0, 0
	068 JumpIfEqual {131}
	069 Move X8, 0x19F9000
	070 Move X8, [X8+2608]
	071 Move X1, [X8]
	072 Call List`1<StyleSelectorPart>.ToArray, X0
	073 Move X1, X0
	074 Move X0, X21
	075 Move X2, X31
	076 Call StyleSelector.set_parts, X0, X1
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 Move [X21+28], D0
	079 Move X0, [X20+32]
	080 Move W8, [X0+309]
	081 Move TEMP, X8
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfEqual {86}
	085 Call 0x1C5D684
	086 Move X0, X19
	087 Call 0x2725044, X0
	088 Compare X0, 0
	089 JumpIfEqual {131}
	090 Move X9, 0x19F9000
	091 Move X9, [X9+2592]
	092 Move W10, [X0+28]
	093 Move X8, [X0+16]
	094 Move X9, [X9]
	095 Add W10, W10, 1
	096 Move [X0+28], W10
	097 Compare X8, 0
	098 JumpIfEqual {131}
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Move W11, [X8+24]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add W9, W10, 1
	103 Add X8, X8, X10
	104 Move [X0+24], W9
	105 Move [X8+32], X21
	106 Move X8, [X9+32]
	107 Move X1, X21
	108 Move X8, [X8+192]
	109 Move X2, [X8+112]
	110 Call List`1<Object>.AddWithResize, X0, X1
	111 Move X8, [X19+8]
	112 Compare X8, 0
	113 JumpIfEqual {131}
	114 Move W2, [X8+24]
	115 Move W9, [X8+28]
	116 Add W9, W9, 1
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X8+24], W31
	119 Move [X8+28], W9
	120 Move X0, [X8+16]
	121 Move W1, W31
	122 Move X3, X31
	123 Call Array.Clear, X0, X1, X2
	124 Move [X19+36], W31
	125 Move [X19+40], W31
	126 Move X20, [X31+16]
	127 Move X19, [X31+24]
	128 Move X30, [X31+32]
	129 Move X21, [X31+40]
	130 Return 
	131 Call 0x1C17F20

Method: UnityEngine.UIElements.UQueryState`1<T> Build()

Disassembly:
	0x02725B5C CMP W21, 0x1
	0x02725B60 B.NE 0x2725B78
	0x02725B64 ADRP X8, 0xFFFFFFFFFF298000
	0x02725B68 ADD X8, X8, 0x184
	0x02725B6C STR X8, [X19 + 0x18]
	0x02725B70 B 0x2725B88
	0x02725B74 CBZ X20, 0x2725BA0
	0x02725B78 LDR X8, [X19 + 0x10]
	0x02725B7C LDR X9, [X19 + 0x20]
	0x02725B80 STR X8, [X19 + 0x18]
	0x02725B84 STR X9, [X19 + 0x40]
	0x02725B88 ADRP X8, 0xFFFFFFFFFF298000
	0x02725B8C ADD X8, X8, 0x13C
	0x02725B90 STR X8, [X19 + 0x38]
	0x02725B94 LDP X20, X19, [X31 + 0x10]
	0x02725B98 LDP X30, X21, [X31], #0x20
	0x02725B9C RET
	0x02725BA0 ADRP X1, 0xFFFFFFFFFE3F6000
	0x02725BA4 ADD X1, X1, 0xEE3
	0x02725BA8 MOV X0, X31
	0x02725BAC BL 0x1C16F3C
	0x02725BB0 MOV X1, X31
	0x02725BB4 BL 0x1C16DEC
	0x02725BB8 LDR X8, [X0 + 0x40]
	0x02725BBC LDR X3, [X0 + 0x18]
	0x02725BC0 LDR X2, [X0 + 0x28]
	0x02725BC4 MOV X0, X8
	0x02725BC8 BR X3
	0x02725BCC STP X30, X21, [X31 - 0x20]!
	0x02725BD0 STP X20, X19, [X31 + 0x10]
	0x02725BD4 LDR X8, [X2 + 0x8]
	0x02725BD8 STP X1, X2, [X0 + 0x20]
	0x02725BDC MOV X19, X0
	0x02725BE0 MOV X20, X1
	0x02725BE4 STR X8, [X0 + 0x10]
	0x02725BE8 LDRB W21, [X2 + 0x52]
	0x02725BEC STR X0, [X0 + 0x40]
	0x02725BF0 MOV X0, X2
	0x02725BF4 BL 0x1C16D84
	0x02725BF8 TBZ X0, 0x0, 0x2725C14
	0x02725BFC CMP W21, 0x1
	0x02725C00 B.NE 0x2725C18
	0x02725C04 ADRP X8, 0xFFFFFFFFFF298000
	0x02725C08 ADD X8, X8, 0x1DC
	0x02725C0C STR X8, [X19 + 0x18]
	0x02725C10 B 0x2725C28
	0x02725C14 CBZ X20, 0x2725C40
	0x02725C18 LDR X8, [X19 + 0x10]
	0x02725C1C LDR X9, [X19 + 0x20]
	0x02725C20 STR X8, [X19 + 0x18]
	0x02725C24 STR X9, [X19 + 0x40]
	0x02725C28 ADRP X8, 0xFFFFFFFFFF298000
	0x02725C2C ADD X8, X8, 0x194
	0x02725C30 STR X8, [X19 + 0x38]
	0x02725C34 LDP X20, X19, [X31 + 0x10]
	0x02725C38 LDP X30, X21, [X31], #0x20
	0x02725C3C RET
	0x02725C40 ADRP X1, 0xFFFFFFFFFE3F6000
	0x02725C44 ADD X1, X1, 0xEE3
	0x02725C48 MOV X0, X31
	0x02725C4C BL 0x1C16F3C
	0x02725C50 MOV X1, X31
	0x02725C54 BL 0x1C16DEC
	0x02725C58 LDR X8, [X0 + 0x40]
	0x02725C5C LDR X3, [X0 + 0x18]
	0x02725C60 LDR X2, [X0 + 0x28]
	0x02725C64 MOV X0, X8
	0x02725C68 BR X3
	0x02725C6C STR X30, [X31 - 0x30]!
	0x02725C70 STP X22, X21, [X31 + 0x10]
	0x02725C74 STP X20, X19, [X31 + 0x20]
	0x02725C78 LDR X8, [X2 + 0x8]
	0x02725C7C STP X1, X2, [X0 + 0x20]
	0x02725C80 MOV X19, X0
	0x02725C84 MOV X20, X2
	0x02725C88 STR X8, [X0 + 0x10]
	0x02725C8C LDRB W22, [X2 + 0x52]
	0x02725C90 STR X0, [X0 + 0x40]
	0x02725C94 MOV X0, X2
	0x02725C98 MOV X21, X1
	0x02725C9C BL 0x1C16D84
	0x02725CA0 TBZ X0, 0x0, 0x2725CB8
	0x02725CA4 CMP W22, 0x1
	0x02725CA8 B.NE 0x2725CC0
	0x02725CAC ADRP X8, 0xFFFFFFFFFF298000
	0x02725CB0 ADD X8, X8, 0x254
	0x02725CB4 B 0x2725D34
	0x02725CB8 CBZ W22, 0x2725CD4
	0x02725CBC CBZ X21, 0x2725D54
	0x02725CC0 LDR X8, [X19 + 0x10]
	0x02725CC4 LDR X9, [X19 + 0x20]
	0x02725CC8 STR X8, [X19 + 0x18]
	0x02725CCC STR X9, [X19 + 0x40]
	0x02725CD0 B 0x2725D38
	0x02725CD4 LDRB W8, [X19 + 0x70]
	0x02725CD8 CBZ W8, 0x2725D04
	0x02725CDC MOV X0, X20
	0x02725CE0 BL 0x1C16D7C
	0x02725CE4 MOV W21, W0
	0x02725CE8 MOV X0, X20
	0x02725CEC BL 0x1C17238
	0x02725CF0 TBZ X21, 0x0, 0x2725D10
	0x02725CF4 TBZ X0, 0x0, 0x2725D20
	0x02725CF8 ADRP X8, 0xFFFFFFFFFF298000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+120], X21
	004 Move [X31+128], X20
	005 Move [X31+136], X19
	006 Move X21, 0x1CB6000
	007 Move W8, [X21+1608]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x19F9000
	015 Move X0, [X0+2536]
	016 Call 0x1C17CF4
	017 Move X0, 0x19F9000
	018 Move X0, [X0+2624]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1608], W8
	022 Move [X31+24], X31
	023 Move [X31+32], X31
	024 Move [X31+40], X31
	025 Move X0, [X19+32]
	026 Move W8, [X0+309]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {32}
	031 Call 0x1C5D684
	032 Move X8, [X0+192]
	033 Move X0, X20
	034 Move X1, [X8+88]
	035 Call 0x272576C, X0
	036 Move X21, [X20+24]
	037 Compare X21, 0
	038 JumpIfEqual {127}
	039 Move W8, [X21+24]
	040 Compare W8, 0
	041 JumpIfNotEqual {111}
	042 Move X0, [X19+32]
	043 Move W8, [X0+309]
	044 Move TEMP, X8
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {49}
	048 Call 0x1C5D684
	049 Move X0, X20
	050 Call 0x27250BC, X0
	051 Move X21, X0
	052 Add X0, X31, 24
	053 Move W1, 1
	054 Move X2, X31
	055 Move [X31+32], X31
	056 Move [X31+40], X31
	057 Move [X31+24], X31
	058 Call StyleSelectorPart.set_type, X0, X1
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X8, [X31+40]
	061 Move [X31], V0
	062 Move [X31+16], X8
	063 Compare X21, 0
	064 JumpIfEqual {127}
	065 Move V0, [X31]
	066 Move X8, [X31+16]
	067 Move X9, 0x19F9000
	068 Move X9, [X9+2536]
	069 Move [X31+3], V0
	070 Move [X31+64], X8
	071 Move W11, [X21+28]
	072 Move X8, [X21+16]
	073 Move X10, [X9]
	074 Add W9, W11, 1
	075 Move [X21+28], W9
	076 Compare X8, 0
	077 JumpIfEqual {127}
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 Move W11, [X8+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add W10, W9, 1
	082 Move [X21+24], W10
	083 Move X10, [X31+64]
	084 Move V0, [X31+3]
	085 Move W11, 24
	086 NotImplemented "Instruction MADD not yet implemented."
	087 Move [X8+48], X10
	088 Move [X8+2], V0
	089 Move X8, [X10+32]
	090 Move V0, [X31+3]
	091 Move X9, [X31+64]
	092 Add X1, X31, 80
	093 Move X8, [X8+192]
	094 Move X0, X21
	095 Move X2, [X8+112]
	096 Move [X31+5], V0
	097 Move [X31+96], X9
	098 Call List`1<StyleSelectorPart>.AddWithResize, X0, X1
	099 Move X0, [X19+32]
	100 Move W8, [X0+309]
	101 Move TEMP, X8
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {106}
	105 Call 0x1C5D684
	106 Move X8, [X0+192]
	107 Move X0, X20
	108 Move X1, [X8+88]
	109 Call 0x272576C, X0
	110 Move X21, [X20+24]
	111 Move X0, [X19+32]
	112 Move X19, [X20+16]
	113 Move W8, [X0+309]
	114 Move TEMP, X8
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfEqual {119}
	118 Call 0x1C5D684
	119 Move X0, X19
	120 Move X1, X21
	121 Move X20, [X31+128]
	122 Move X19, [X31+136]
	123 Move X30, [X31+112]
	124 Move X21, [X31+120]
	125 Add X31, X31, 144
	126 Return X0
	127 Call 0x1C17F20

Method: System.Boolean Equals(UnityEngine.UIElements.UQueryBuilder`1<T> other)

Disassembly:
	0x02725CFC ADD X8, X8, 0x350
	0x02725D00 B 0x2725D34
	0x02725D04 ADRP X8, 0xFFFFFFFFFF298000
	0x02725D08 ADD X8, X8, 0x234
	0x02725D0C B 0x2725D34
	0x02725D10 TBZ X0, 0x0, 0x2725D2C
	0x02725D14 ADRP X8, 0xFFFFFFFFFF298000
	0x02725D18 ADD X8, X8, 0x290
	0x02725D1C B 0x2725D34
	0x02725D20 ADRP X8, 0xFFFFFFFFFF298000
	0x02725D24 ADD X8, X8, 0x314
	0x02725D28 B 0x2725D34
	0x02725D2C ADRP X8, 0xFFFFFFFFFF298000
	0x02725D30 ADD X8, X8, 0x264
	0x02725D34 STR X8, [X19 + 0x18]
	0x02725D38 ADRP X8, 0xFFFFFFFFFF298000
	0x02725D3C ADD X8, X8, 0x1EC
	0x02725D40 STR X8, [X19 + 0x38]
	0x02725D44 LDP X20, X19, [X31 + 0x20]
	0x02725D48 LDP X22, X21, [X31 + 0x10]
	0x02725D4C LDR X30, [X31], #0x30
	0x02725D50 RET
	0x02725D54 ADRP X1, 0xFFFFFFFFFE3F6000
	0x02725D58 ADD X1, X1, 0xEE3
	0x02725D5C MOV X0, X31
	0x02725D60 BL 0x1C16F3C
	0x02725D64 MOV X1, X31
	0x02725D68 BL 0x1C16DEC
	0x02725D6C LDR X8, [X0 + 0x40]
	0x02725D70 LDR X3, [X0 + 0x18]
	0x02725D74 LDR X2, [X0 + 0x28]
	0x02725D78 MOV X0, X8
	0x02725D7C BR X3
	0x02725D80 STP X30, X21, [X31 - 0x20]!
	0x02725D84 STP X20, X19, [X31 + 0x10]
	0x02725D88 LDR X8, [X2 + 0x8]
	0x02725D8C STP X1, X2, [X0 + 0x20]
	0x02725D90 MOV X19, X0
	0x02725D94 MOV X20, X1
	0x02725D98 STR X8, [X0 + 0x10]
	0x02725D9C LDRB W21, [X2 + 0x52]
	0x02725DA0 STR X0, [X0 + 0x40]
	0x02725DA4 MOV X0, X2
	0x02725DA8 BL 0x1C16D84
	0x02725DAC TBZ X0, 0x0, 0x2725DC8
	0x02725DB0 CMP W21, 0x1
	0x02725DB4 B.NE 0x2725DCC
	0x02725DB8 ADRP X8, 0xFFFFFFFFFF298000
	0x02725DBC ADD X8, X8, 0x44C
	0x02725DC0 STR X8, [X19 + 0x18]
	0x02725DC4 B 0x2725DDC
	0x02725DC8 CBZ X20, 0x2725DF4
	0x02725DCC LDR X8, [X19 + 0x10]
	0x02725DD0 LDR X9, [X19 + 0x20]
	0x02725DD4 STR X8, [X19 + 0x18]
	0x02725DD8 STR X9, [X19 + 0x40]
	0x02725DDC ADRP X8, 0xFFFFFFFFFF298000
	0x02725DE0 ADD X8, X8, 0x3DC
	0x02725DE4 STR X8, [X19 + 0x38]
	0x02725DE8 LDP X20, X19, [X31 + 0x10]
	0x02725DEC LDP X30, X21, [X31], #0x20
	0x02725DF0 RET
	0x02725DF4 ADRP X1, 0xFFFFFFFFFE3F6000
	0x02725DF8 ADD X1, X1, 0xEE3
	0x02725DFC MOV X0, X31
	0x02725E00 BL 0x1C16F3C
	0x02725E04 MOV X1, X31
	0x02725E08 BL 0x1C16DEC
	0x02725E0C LDR X8, [X0 + 0x40]
	0x02725E10 LDR X2, [X0 + 0x18]
	0x02725E14 LDR X1, [X0 + 0x28]
	0x02725E18 MOV X0, X8
	0x02725E1C BR X2
	0x02725E20 STP X30, X21, [X31 - 0x20]!
	0x02725E24 STP X20, X19, [X31 + 0x10]
	0x02725E28 LDR X8, [X2 + 0x8]
	0x02725E2C STP X1, X2, [X0 + 0x20]
	0x02725E30 MOV X19, X0
	0x02725E34 MOV X20, X1
	0x02725E38 STR X8, [X0 + 0x10]
	0x02725E3C LDRB W21, [X2 + 0x52]
	0x02725E40 STR X0, [X0 + 0x40]
	0x02725E44 MOV X0, X2
	0x02725E48 BL 0x1C16D84
	0x02725E4C TBZ X0, 0x0, 0x2725E68
	0x02725E50 CMP W21, 0x1
	0x02725E54 B.NE 0x2725E6C
	0x02725E58 ADRP X8, 0xFFFFFFFFFF298000
	0x02725E5C ADD X8, X8, 0x4A0
	0x02725E60 STR X8, [X19 + 0x18]
	0x02725E64 B 0x2725E7C
	0x02725E68 CBZ X20, 0x2725E94
	0x02725E6C LDR X8, [X19 + 0x10]
	0x02725E70 LDR X9, [X19 + 0x20]
	0x02725E74 STR X8, [X19 + 0x18]
	0x02725E78 STR X9, [X19 + 0x40]
	0x02725E7C ADRP X8, 0xFFFFFFFFFF298000
	0x02725E80 ADD X8, X8, 0x458
	0x02725E84 STR X8, [X19 + 0x38]
	0x02725E88 LDP X20, X19, [X31 + 0x10]
	0x02725E8C LDP X30, X21, [X31], #0x20
	0x02725E90 RET
	0x02725E94 ADRP X1, 0xFFFFFFFFFE3F6000
	0x02725E98 ADD X1, X1, 0xEE3
	0x02725E9C MOV X0, X31
	0x02725EA0 BL 0x1C16F3C
	0x02725EA4 MOV X1, X31
	0x02725EA8 BL 0x1C16DEC
	0x02725EAC LDR X8, [X0 + 0x40]
	0x02725EB0 LDR X3, [X0 + 0x18]
	0x02725EB4 LDR X2, [X0 + 0x28]
	0x02725EB8 AND X1, X1, 0x0
	0x02725EBC MOV X0, X8
	0x02725EC0 BR X3
	0x02725EC4 STP X30, X21, [X31 - 0x20]!
	0x02725EC8 STP X20, X19, [X31 + 0x10]
	0x02725ECC LDR X8, [X2 + 0x8]
	0x02725ED0 STP X1, X2, [X0 + 0x20]
	0x02725ED4 MOV X19, X0
	0x02725ED8 MOV X20, X1
	0x02725EDC STR X8, [X0 + 0x10]
	0x02725EE0 LDRB W21, [X2 + 0x52]
	0x02725EE4 STR X0, [X0 + 0x40]
	0x02725EE8 MOV X0, X2
	0x02725EEC BL 0x1C16D84
	0x02725EF0 TBZ X0, 0x0, 0x2725F0C
	0x02725EF4 CMP W21, 0x1
	0x02725EF8 B.NE 0x2725F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1CB6000
	008 Move X22, 0x19F9000
	009 Move W8, [X23+1609]
	010 Move X22, [X22+2632]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x19F9000
	019 Move X0, [X0+2640]
	020 Call 0x1C17CF4
	021 Move X0, 0x19F9000
	022 Move X0, [X0+2632]
	023 Call 0x1C17CF4
	024 Move X0, 0x19F9000
	025 Move X0, [X0+2648]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+1609], W8
	029 Move X0, [X22]
	030 Call 0x211C0E8
	031 Compare X0, 0
	032 JumpIfEqual {170}
	033 Move X8, [X0]
	034 Move X2, [X19]
	035 Move X1, [X20]
	036 Move X9, [X8+440]
	037 Move X3, [X8+448]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {162}
	043 Move X0, [X22]
	044 Call 0x211C0E8
	045 Move X8, [X21+32]
	046 Move X22, X0
	047 Move W9, [X8+309]
	048 Move TEMP, X9
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {54}
	052 Move X0, X8
	053 Call 0x1C5D684
	054 Move X0, X20
	055 Call 0x2725044, X0
	056 Move X8, [X21+32]
	057 Move X23, X0
	058 Move W9, [X8+309]
	059 Move TEMP, X9
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfEqual {65}
	063 Move X0, X8
	064 Call 0x1C5D684
	065 Move X0, X19
	066 Call 0x2725044, X0
	067 Compare X22, 0
	068 JumpIfEqual {170}
	069 Move X8, [X22]
	070 Move X2, X0
	071 Move X0, X22
	072 Move X1, X23
	073 Move X9, [X8+440]
	074 Move X3, [X8+448]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {162}
	080 Move X22, 0x19F9000
	081 Move X22, [X22+2640]
	082 Move X0, [X22]
	083 Call 0x211C0E8
	084 Compare X0, 0
	085 JumpIfEqual {170}
	086 Move X8, [X0]
	087 Move X2, [X19+8]
	088 Move X1, [X20+8]
	089 Move X9, [X8+440]
	090 Move X3, [X8+448]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {162}
	096 Move X0, [X22]
	097 Call 0x211C0E8
	098 Move X8, [X21+32]
	099 Move X22, X0
	100 Move W9, [X8+309]
	101 Move TEMP, X9
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {107}
	105 Move X0, X8
	106 Call 0x1C5D684
	107 Move X0, X20
	108 Call 0x27250BC, X0
	109 Move X8, [X21+32]
	110 Move X21, X0
	111 Move W9, [X8+309]
	112 Move TEMP, X9
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfEqual {118}
	116 Move X0, X8
	117 Call 0x1C5D684
	118 Move X0, X19
	119 Call 0x27250BC, X0
	120 Compare X22, 0
	121 JumpIfEqual {170}
	122 Move X8, [X22]
	123 Move X2, X0
	124 Move X0, X22
	125 Move X1, X21
	126 Move X9, [X8+440]
	127 Move X3, [X8+448]
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {162}
	133 Move X8, [X20+16]
	134 Move X9, [X19+16]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, 0x19F9000
	137 Move X8, [X8+2648]
	138 Move X0, [X8]
	139 Call 0x211C0E8
	140 Compare X0, 0
	141 JumpIfEqual {170}
	142 Move X8, [X0]
	143 Move X2, [X19+24]
	144 Move X1, [X20+24]
	145 Move X9, [X8+440]
	146 Move X3, [X8+448]
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {162}
	152 Move W8, [X20+32]
	153 Move W9, [X19+32]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move W8, [X20+36]
	156 Move W9, [X19+36]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move W8, [X20+40]
	159 Move W9, [X19+40]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CSET not yet implemented."
	162 Move W0, W31
	163 Move X20, [X31+32]
	164 Move X19, [X31+40]
	165 Move X22, [X31+16]
	166 Move X21, [X31+24]
	167 Move X30, [X31+48]
	168 Move X23, [X31+56]
	169 Return X0
	170 Call 0x1C17F20

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x02725EFC ADRP X8, 0xFFFFFFFFFF298000
	0x02725F00 ADD X8, X8, 0x500
	0x02725F04 STR X8, [X19 + 0x18]
	0x02725F08 B 0x2725F20
	0x02725F0C CBZ X20, 0x2725F38
	0x02725F10 LDR X8, [X19 + 0x10]
	0x02725F14 LDR X9, [X19 + 0x20]
	0x02725F18 STR X8, [X19 + 0x18]
	0x02725F1C STR X9, [X19 + 0x40]
	0x02725F20 ADRP X8, 0xFFFFFFFFFF298000
	0x02725F24 ADD X8, X8, 0x4B0
	0x02725F28 STR X8, [X19 + 0x38]
	0x02725F2C LDP X20, X19, [X31 + 0x10]
	0x02725F30 LDP X30, X21, [X31], #0x20
	0x02725F34 RET
	0x02725F38 ADRP X1, 0xFFFFFFFFFE3F6000
	0x02725F3C ADD X1, X1, 0xEE3
	0x02725F40 MOV X0, X31
	0x02725F44 BL 0x1C16F3C
	0x02725F48 MOV X1, X31
	0x02725F4C BL 0x1C16DEC
	0x02725F50 LDR X8, [X0 + 0x40]
	0x02725F54 LDR X2, [X0 + 0x18]
	0x02725F58 LDR X1, [X0 + 0x28]
	0x02725F5C MOV X0, X8
	0x02725F60 BR X2
	0x02725F64 STP X30, X21, [X31 - 0x20]!
	0x02725F68 STP X20, X19, [X31 + 0x10]
	0x02725F6C LDR X8, [X2 + 0x8]
	0x02725F70 STP X1, X2, [X0 + 0x20]
	0x02725F74 MOV X19, X0
	0x02725F78 MOV X20, X1
	0x02725F7C STR X8, [X0 + 0x10]
	0x02725F80 LDRB W21, [X2 + 0x52]
	0x02725F84 STR X0, [X0 + 0x40]
	0x02725F88 MOV X0, X2
	0x02725F8C BL 0x1C16D84
	0x02725F90 TBZ X0, 0x0, 0x2725FAC
	0x02725F94 CMP W21, 0x1
	0x02725F98 B.NE 0x2725FB0
	0x02725F9C ADRP X8, 0xFFFFFFFFFF298000
	0x02725FA0 ADD X8, X8, 0x564
	0x02725FA4 STR X8, [X19 + 0x18]
	0x02725FA8 B 0x2725FC0
	0x02725FAC CBZ X20, 0x2725FD8
	0x02725FB0 LDR X8, [X19 + 0x10]
	0x02725FB4 LDR X9, [X19 + 0x20]
	0x02725FB8 STR X8, [X19 + 0x18]
	0x02725FBC STR X9, [X19 + 0x40]
	0x02725FC0 ADRP X8, 0xFFFFFFFFFF298000
	0x02725FC4 ADD X8, X8, 0x50C
	0x02725FC8 STR X8, [X19 + 0x38]
	0x02725FCC LDP X20, X19, [X31 + 0x10]
	0x02725FD0 LDP X30, X21, [X31], #0x20
	0x02725FD4 RET
	0x02725FD8 ADRP X1, 0xFFFFFFFFFE3F6000
	0x02725FDC ADD X1, X1, 0xEE3
	0x02725FE0 MOV X0, X31
	0x02725FE4 BL 0x1C16F3C
	0x02725FE8 MOV X1, X31
	0x02725FEC BL 0x1C16DEC
	0x02725FF0 LDR X8, [X0 + 0x40]
	0x02725FF4 LDR X2, [X0 + 0x18]
	0x02725FF8 LDR X1, [X0 + 0x28]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X8, [X2+32]
	007 Move X20, X2
	008 Move X21, X1
	009 Move X19, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Compare X21, 0
	027 JumpIfEqual {30}
	028 Move X8, [X21]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W0, W31
	031 Move X0, [X20+32]
	032 Move W8, [X0+309]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Move X8, [X0+192]
	039 Move X1, [X8]
	040 Move W8, [X1+309]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {48}
	045 Move X0, X1
	046 Call 0x1C5D684
	047 Move X1, X0
	048 Move X8, [X21]
	049 Move X9, [X1+64]
	050 Move X0, X21
	051 Move X8, [X8+64]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Call 0x1C17E08
	054 Move V1, [X0+16]
	055 Move V0, [X0+32]
	056 Move V2, [X0]
	057 Move [X31+16], V1
	058 Move [X31+24], V0
	059 Move [X31], V2
	060 Move X0, [X20+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+192]
	068 Move V0, [X31]
	069 Move V1, [X31+16]
	070 Move V2, [X31+2]
	071 Add X1, X31, 48
	072 Move X2, [X8+112]
	073 Move X0, X19
	074 Move [X31+48], V0
	075 Move [X31+56], V1
	076 Move [X31+5], V2
	077 Call 0x2725CFC, X0, X1
	078 Move X20, [X31+112]
	079 Move X19, [X31+120]
	080 Move X30, [X31+96]
	081 Move X21, [X31+104]
	082 And W0, W0, 1
	083 Add X31, X31, 128
	084 Return X0
	085 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x02725FFC MOV X0, X8
	0x02726000 BR X2
	0x02726004 STP X30, X21, [X31 - 0x20]!
	0x02726008 STP X20, X19, [X31 + 0x10]
	0x0272600C LDR X8, [X2 + 0x8]
	0x02726010 STP X1, X2, [X0 + 0x20]
	0x02726014 MOV X19, X0
	0x02726018 MOV X20, X1
	0x0272601C STR X8, [X0 + 0x10]
	0x02726020 LDRB W21, [X2 + 0x52]
	0x02726024 STR X0, [X0 + 0x40]
	0x02726028 MOV X0, X2
	0x0272602C BL 0x1C16D84
	0x02726030 TBZ X0, 0x0, 0x272604C
	0x02726034 CMP W21, 0x1
	0x02726038 B.NE 0x2726050
	0x0272603C ADRP X8, 0xFFFFFFFFFF297000
	0x02726040 ADD X8, X8, 0x5D8
	0x02726044 STR X8, [X19 + 0x18]
	0x02726048 B 0x2726060
	0x0272604C CBZ X20, 0x2726078
	0x02726050 LDR X8, [X19 + 0x10]
	0x02726054 LDR X9, [X19 + 0x20]
	0x02726058 STR X8, [X19 + 0x18]
	0x0272605C STR X9, [X19 + 0x40]
	0x02726060 ADRP X8, 0xFFFFFFFFFF297000
	0x02726064 ADD X8, X8, 0x570
	0x02726068 STR X8, [X19 + 0x38]
	0x0272606C LDP X20, X19, [X31 + 0x10]
	0x02726070 LDP X30, X21, [X31], #0x20
	0x02726074 RET
	0x02726078 ADRP X1, 0xFFFFFFFFFE3F5000
	0x0272607C ADD X1, X1, 0xEE3
	0x02726080 MOV X0, X31
	0x02726084 BL 0x1C16F3C
	0x02726088 MOV X1, X31
	0x0272608C BL 0x1C16DEC
	0x02726090 LDR X8, [X0 + 0x40]
	0x02726094 LDR X2, [X0 + 0x18]
	0x02726098 LDR X1, [X0 + 0x28]
	0x0272609C MOV X0, X8
	0x027260A0 BR X2
	0x027260A4 STP X30, X21, [X31 - 0x20]!
	0x027260A8 STP X20, X19, [X31 + 0x10]
	0x027260AC LDR X8, [X2 + 0x8]
	0x027260B0 STP X1, X2, [X0 + 0x20]
	0x027260B4 MOV X19, X0
	0x027260B8 MOV X20, X1
	0x027260BC STR X8, [X0 + 0x10]
	0x027260C0 LDRB W21, [X2 + 0x52]
	0x027260C4 STR X0, [X0 + 0x40]
	0x027260C8 MOV X0, X2
	0x027260CC BL 0x1C16D84
	0x027260D0 TBZ X0, 0x0, 0x27260EC
	0x027260D4 CMP W21, 0x1
	0x027260D8 B.NE 0x27260F0
	0x027260DC ADRP X8, 0xFFFFFFFFFF297000
	0x027260E0 ADD X8, X8, 0x654
	0x027260E4 STR X8, [X19 + 0x18]
	0x027260E8 B 0x2726100
	0x027260EC CBZ X20, 0x2726118
	0x027260F0 LDR X8, [X19 + 0x10]
	0x027260F4 LDR X9, [X19 + 0x20]
	0x027260F8 STR X8, [X19 + 0x18]
	0x027260FC STR X9, [X19 + 0x40]
	0x02726100 ADRP X8, 0xFFFFFFFFFF297000
	0x02726104 ADD X8, X8, 0x5E4
	0x02726108 STR X8, [X19 + 0x38]
	0x0272610C LDP X20, X19, [X31 + 0x10]
	0x02726110 LDP X30, X21, [X31], #0x20
	0x02726114 RET
	0x02726118 ADRP X1, 0xFFFFFFFFFE3F5000
	0x0272611C ADD X1, X1, 0xEE3
	0x02726120 MOV X0, X31
	0x02726124 BL 0x1C16F3C
	0x02726128 MOV X1, X31
	0x0272612C BL 0x1C16DEC
	0x02726130 LDR X8, [X0 + 0x40]
	0x02726134 LDR X2, [X0 + 0x18]
	0x02726138 LDR X1, [X0 + 0x28]
	0x0272613C MOV X0, X8
	0x02726140 BR X2
	0x02726144 STR X30, [X31 - 0x30]!
	0x02726148 STP X22, X21, [X31 + 0x10]
	0x0272614C STP X20, X19, [X31 + 0x20]
	0x02726150 LDR X8, [X2 + 0x8]
	0x02726154 STP X1, X2, [X0 + 0x20]
	0x02726158 MOV X19, X0
	0x0272615C MOV X20, X2
	0x02726160 STR X8, [X0 + 0x10]
	0x02726164 LDRB W22, [X2 + 0x52]
	0x02726168 STR X0, [X0 + 0x40]
	0x0272616C MOV X0, X2
	0x02726170 MOV X21, X1
	0x02726174 BL 0x1C16D84
	0x02726178 TBZ X0, 0x0, 0x2726198
	0x0272617C ADRP X8, 0xFFFFFFFFFF297000
	0x02726180 ADRP X9, 0xFFFFFFFFFF297000
	0x02726184 ADD X8, X8, 0x6D4
	0x02726188 ADD X9, X9, 0x6A8
	0x0272618C CMP W22, 0x1
	0x02726190 CSEL X8, X9, X8, EQ
	0x02726194 B 0x27261A8
	0x02726198 CBZ W22, 0x27261C8
	0x0272619C CBZ X21, 0x272622C
	0x027261A0 ADRP X8, 0xFFFFFFFFFF297000
	0x027261A4 ADD X8, X8, 0x70C
	0x027261A8 STR X8, [X19 + 0x18]
	0x027261AC ADRP X8, 0xFFFFFFFFFF297000
	0x027261B0 ADD X8, X8, 0x660
	0x027261B4 STR X8, [X19 + 0x38]
	0x027261B8 LDP X20, X19, [X31 + 0x20]
	0x027261BC LDP X22, X21, [X31 + 0x10]
	0x027261C0 LDR X30, [X31], #0x30
	0x027261C4 RET
	0x027261C8 LDRB W8, [X19 + 0x70]
	0x027261CC CBZ W8, 0x27261F8
	0x027261D0 MOV X0, X20
	0x027261D4 BL 0x1C16D7C
	0x027261D8 MOV W21, W0
	0x027261DC MOV X0, X20
	0x027261E0 BL 0x1C17238
	0x027261E4 TBZ X21, 0x0, 0x2726204
	0x027261E8 TBZ X0, 0x0, 0x2726214
	0x027261EC ADRP X8, 0xFFFFFFFFFF297000
	0x027261F0 ADD X8, X8, 0x87C
	0x027261F4 B 0x27261A8
	0x027261F8 ADRP X8, 0xFFFFFFFFFF297000
	0x027261FC ADD X8, X8, 0x740
	0x02726200 B 0x27261A8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x1CB5000
	010 Move X20, 0x19F8000
	011 Move W8, [X22+1610]
	012 Move X20, [X20+2632]
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x19F8000
	020 Move X0, [X0+2640]
	021 Call 0x1C17CF4
	022 Move X0, 0x19F8000
	023 Move X0, [X0+2632]
	024 Call 0x1C17CF4
	025 Move X0, 0x19F8000
	026 Move X0, [X0+2648]
	027 Call 0x1C17CF4
	028 Move X0, 0x19F8000
	029 Move X0, [X0+2656]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+1610], W8
	033 Move X0, [X20]
	034 Call 0x211C0E8
	035 Compare X0, 0
	036 JumpIfEqual {159}
	037 Move X8, [X0]
	038 Move X1, [X19]
	039 Move X9, [X8+456]
	040 Move X2, [X8+464]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move X8, [X20]
	043 Move W20, W0
	044 Move X0, X8
	045 Call 0x211C0E8
	046 Move X8, [X21+32]
	047 Move X22, X0
	048 Move W9, [X8+309]
	049 Move TEMP, X9
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {55}
	053 Move X0, X8
	054 Call 0x1C5D684
	055 Move X0, X19
	056 Call 0x2725044, X0
	057 Compare X22, 0
	058 JumpIfEqual {159}
	059 Move X8, [X22]
	060 Move X23, 0x19F8000
	061 Move X1, X0
	062 Move X0, X22
	063 Move X9, [X8+456]
	064 Move X2, [X8+464]
	065 Move X23, [X23+2640]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X23]
	068 Move W22, W0
	069 Move X0, X8
	070 Call 0x211C0E8
	071 Compare X0, 0
	072 JumpIfEqual {159}
	073 Move X8, [X0]
	074 Move X1, [X19+8]
	075 Move X9, [X8+456]
	076 Move X2, [X8+464]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X8, [X23]
	079 Move W23, W0
	080 Move X0, X8
	081 Call 0x211C0E8
	082 Move X8, [X21+32]
	083 Move X21, X0
	084 Move W9, [X8+309]
	085 Move TEMP, X9
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {91}
	089 Move X0, X8
	090 Call 0x1C5D684
	091 Move X0, X19
	092 Call 0x27250BC, X0
	093 Compare X21, 0
	094 JumpIfEqual {159}
	095 Move X8, [X21]
	096 Move X24, 0x19F8000
	097 Move X1, X0
	098 Move X0, X21
	099 Move X9, [X8+456]
	100 Move X2, [X8+464]
	101 Move X24, [X24+2656]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X8, [X24]
	104 Move W21, W0
	105 Move X0, X8
	106 Call 0x211C0E8
	107 Compare X0, 0
	108 JumpIfEqual {159}
	109 Move X8, [X0]
	110 Move X1, [X19+16]
	111 Move X24, 0x19F8000
	112 Move X9, [X8+456]
	113 Move X2, [X8+464]
	114 Move X24, [X24+2648]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X8, [X24]
	117 Move W24, W0
	118 Move X0, X8
	119 Call 0x211C0E8
	120 Compare X0, 0
	121 JumpIfEqual {159}
	122 Move X9, [X0]
	123 Move W25, 0x5529
	124 Move W8, 0xEBA4
	125 NotImplemented "Instruction MOVK not yet implemented."
	126 NotImplemented "Instruction MOVK not yet implemented."
	127 NotImplemented "Instruction MADD not yet implemented."
	128 Multiply W8, W8, W25
	129 Move X1, [X19+24]
	130 NotImplemented "Instruction MADD not yet implemented."
	131 Move X10, [X9+456]
	132 Move X2, [X9+464]
	133 Add W8, W23, W8
	134 NotImplemented "Instruction MADD not yet implemented."
	135 NotImplemented "Instruction MADD not yet implemented."
	136 NotImplemented "Instruction BLR not yet implemented."
	137 NotImplemented "Instruction MADD not yet implemented."
	138 Add X0, X19, 32
	139 Move X1, X31
	140 Call Int32.GetHashCode, X0
	141 NotImplemented "Instruction MADD not yet implemented."
	142 Add X0, X19, 36
	143 Move X1, X31
	144 Call Int32.GetHashCode, X0
	145 NotImplemented "Instruction MADD not yet implemented."
	146 Add X0, X19, 40
	147 Move X1, X31
	148 Call Int32.GetHashCode, X0
	149 NotImplemented "Instruction MADD not yet implemented."
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move X30, [X31+64]
	157 Move X25, [X31+72]
	158 Return X0
	159 Call 0x1C17F20

