Type: UnityEngine.UIElements.UIElementsUtility

Method: System.Void .ctor()

Disassembly:
	0x03E19574 BL 0x1C16F20
	0x03E19578 STR D8, [X31 - 0x30]!
	0x03E1957C STP X30, X21, [X31 + 0x10]
	0x03E19580 STP X20, X19, [X31 + 0x20]
	0x03E19584 ADRP X21, 0x5CF000
	0x03E19588 LDRB W8, [X21 + 0x3E7]
	0x03E1958C MOV X19, X1
	0x03E19590 MOV X20, X0
	0x03E19594 TBNZ X8, 0x0, 0x3E195AC
	0x03E19598 ADRP X0, 0x2DA000
	0x03E1959C LDR X0, [X0 + 0x598]
	0x03E195A0 BL 0x1C16CF4
	0x03E195A4 MOVZ W8, 0x1
	0x03E195A8 STRB W8, [X21 + 0x3E7]
	0x03E195AC FMOV S8, 1
	0x03E195B0 CBZ X20, 0x3E19614
	0x03E195B4 LDR X8, [X20 + 0x3A0]
	0x03E195B8 CBZ X8, 0x3E19614
	0x03E195BC ADRP X8, 0x2DA000
	0x03E195C0 LDR X8, [X8 + 0x598]
	0x03E195C4 LDR X0, [X8]
	0x03E195C8 LDR W8, [X0 + 0xE0]
	0x03E195CC CBNZ W8, 0x3E195D4
	0x03E195D0 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D0000
	006 Move X20, 0x352000
	007 Move W8, [X21+983]
	008 Move X20, [X20+1800]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x352000
	015 Move X0, [X0+1800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+983], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call UIEventRegistration.RegisterUIElementSystem, X0
	033 Return 

Method: System.Boolean UnityEngine.UIElements.IUIElementsUtility.MakeCurrentIMGUIContainerDirty()

Disassembly:
	0x03E195D4 MOV X0, X19
	0x03E195D8 MOV X1, X31
	0x03E195DC MOV X2, X31
	0x03E195E0 BL 0x3C3883C
	0x03E195E4 TBNZ X0, 0x0, 0x3E19614
	0x03E195E8 LDR X8, [X20 + 0x3A0]
	0x03E195EC CBZ X8, 0x3E19628
	0x03E195F0 CBZ X19, 0x3E19628
	0x03E195F4 LDR V8, [X8 + 0x34]
	0x03E195F8 MOV X0, X19
	0x03E195FC MOV X1, X31
	0x03E19600 BL 0x3C419CC
	0x03E19604 ADRP X8, 0xFFFFFFFFFCCD1000
	0x03E19608 LDR V1, [X8 + 0x330]
	0x03E1960C FMAX S0, S0, S1
	0x03E19610 FDIV S8, S8, S0
	0x03E19614 LDP X20, X19, [X31 + 0x20]
	0x03E19618 LDP X30, X21, [X31 + 0x10]
	0x03E1961C MOV V0.16B, V8.16B
	0x03E19620 LDR V8, [X31], #0x30
	0x03E19624 RET
	0x03E19628 BL 0x1C16F20
	0x03E1962C STR X30, [X31 - 0x30]!
	0x03E19630 STP X22, X21, [X31 + 0x10]
	0x03E19634 STP X20, X19, [X31 + 0x20]
	0x03E19638 ADRP X20, 0x5CF000
	0x03E1963C LDRB W8, [X20 + 0x3E8]
	0x03E19640 MOV X19, X0
	0x03E19644 TBNZ X8, 0x0, 0x3E19674
	0x03E19648 ADRP X0, 0x351000
	0x03E1964C LDR X0, [X0 + 0x7B0]
	0x03E19650 BL 0x1C16CF4
	0x03E19654 ADRP X0, 0x2DC000
	0x03E19658 LDR X0, [X0 + 0x278]
	0x03E1965C BL 0x1C16CF4
	0x03E19660 ADRP X0, 0x303000
	0x03E19664 LDR X0, [X0 + 0xE98]
	0x03E19668 BL 0x1C16CF4
	0x03E1966C MOVZ W8, 0x1
	0x03E19670 STRB W8, [X20 + 0x3E8]
	0x03E19674 MOV X0, X19
	0x03E19678 MOV X1, X31
	0x03E1967C BL 0x32277A8
	0x03E19680 TBZ X0, 0x0, 0x3E1969C
	0x03E19684 ADRP X8, 0x2DC000
	0x03E19688 LDR X8, [X8 + 0x278]
	0x03E1968C LDR X8, [X8]
	0x03E19690 LDR X8, [X8 + 0xB8]
	0x03E19694 LDR X19, [X8]
	0x03E19698 B 0x3E19754

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D0000
	005 Move X19, 0x304000
	006 Move W8, [X20+984]
	007 Move X19, [X19+3736]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x352000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move X0, 0x352000
	016 Move X0, [X0+1936]
	017 Call 0x1C17CF4
	018 Move X0, 0x304000
	019 Move X0, [X0+3736]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+984], W8
	023 Move X0, [X19]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X19]
	029 Move X8, [X0+184]
	030 Move X8, [X8]
	031 Compare X8, 0
	032 JumpIfEqual {59}
	033 Move W20, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W9, [X0+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {44}
	038 Call 0x1C17DFC
	039 Move X8, [X19]
	040 Move X8, [X8+184]
	041 Move X8, [X8]
	042 Compare X8, 0
	043 JumpIfEqual {59}
	044 Move X9, 0x352000
	045 Move X9, [X9+1928]
	046 Move X0, X8
	047 Move X1, [X9]
	048 Call Stack`1<Object>.Peek, X0
	049 Compare X0, 0
	050 JumpIfEqual {59}
	051 Move X1, X31
	052 Call IMGUIContainer.MarkDirtyLayout, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move X30, [X31+32]
	058 Return X0
	059 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IUIElementsUtility.TakeCapture()

Disassembly:
	0x03E1969C CBZ X19, 0x3E19768
	0x03E196A0 MOV X0, X19
	0x03E196A4 MOV X1, X31
	0x03E196A8 BL 0x322BC30
	0x03E196AC CBZ X0, 0x3E19768
	0x03E196B0 MOVZ W1, 0x20
	0x03E196B4 MOV X2, X31
	0x03E196B8 MOV X19, X0
	0x03E196BC BL 0x322C668
	0x03E196C0 TBNZ X0, 0x1F, 0x3E19754
	0x03E196C4 ADRP X21, 0x303000
	0x03E196C8 LDR X21, [X21 + 0xE98]
	0x03E196CC MOV W20, W0
	0x03E196D0 LDR X0, [X21]
	0x03E196D4 LDR W8, [X0 + 0xE0]
	0x03E196D8 CBNZ W8, 0x3E196E4
	0x03E196DC BL 0x1C16DFC
	0x03E196E0 LDR X0, [X21]
	0x03E196E4 LDR X8, [X0 + 0xB8]
	0x03E196E8 ADD W21, W20, 0x1
	0x03E196EC MOV X0, X19
	0x03E196F0 MOV W1, W21
	0x03E196F4 LDR X22, [X8 + 0x60]
	0x03E196F8 MOV X2, X31
	0x03E196FC BL 0x3222A1C
	0x03E19700 ADRP X8, 0x351000
	0x03E19704 LDR X8, [X8 + 0x7B0]
	0x03E19708 MOV W1, W0
	0x03E1970C MOV X0, X22
	0x03E19710 LDR X2, [X8]
	0x03E19714 BL 0x22E7490
	0x03E19718 TBNZ X0, 0x1F, 0x3E19754
	0x03E1971C LDR W8, [X19 + 0x10]
	0x03E19720 CMP W8, W21
	0x03E19724 B.LE 0x3E19754
	0x03E19728 MOV X0, X19
	0x03E1972C MOV W1, W31
	0x03E19730 MOV W2, W20
	0x03E19734 MOV X3, X31
	0x03E19738 BL 0x3228DE4
	0x03E1973C CBZ X0, 0x3E19768
	0x03E19740 LDP X20, X19, [X31 + 0x20]
	0x03E19744 LDP X22, X21, [X31 + 0x10]
	0x03E19748 MOV X1, X31
	0x03E1974C LDR X30, [X31], #0x30
	0x03E19750 B 0x322BC30
	0x03E19754 MOV X0, X19
	0x03E19758 LDP X20, X19, [X31 + 0x20]
	0x03E1975C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D0000
	005 Move X19, 0x304000
	006 Move W8, [X20+985]
	007 Move X19, [X19+3736]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x352000
	013 Move X0, [X0+1928]
	014 Call 0x1C17CF4
	015 Move X0, 0x352000
	016 Move X0, [X0+1936]
	017 Call 0x1C17CF4
	018 Move X0, 0x304000
	019 Move X0, [X0+3736]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+985], W8
	023 Move X0, [X19]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X19]
	029 Move X8, [X0+184]
	030 Move X8, [X8]
	031 Compare X8, 0
	032 JumpIfEqual {57}
	033 Move W20, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W9, [X0+224]
	036 Compare W9, 0
	037 JumpIfNotEqual {44}
	038 Call 0x1C17DFC
	039 Move X8, [X19]
	040 Move X8, [X8+184]
	041 Move X8, [X8]
	042 Compare X8, 0
	043 JumpIfEqual {57}
	044 Move X9, 0x352000
	045 Move X9, [X9+1928]
	046 Move X0, X8
	047 Move X1, [X9]
	048 Call Stack`1<Object>.Peek, X0
	049 Move X1, X31
	050 Call MouseCaptureController.CaptureMouse, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 NotImplemented "Instruction CSET not yet implemented."
	055 Move X30, [X31+32]
	056 Return X0
	057 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IUIElementsUtility.ReleaseCapture()

Disassembly:
	0x03E19760 LDR X30, [X31], #0x30
	0x03E19764 RET

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean UnityEngine.UIElements.IUIElementsUtility.ProcessEvent(System.Int32 instanceID, System.IntPtr nativeEventPtr, ref System.Boolean eventHandled)

Disassembly:
	0x03E19768 BL 0x1C16F20
	0x03E1976C STP X29, X30, [X31 - 0x60]!
	0x03E19770 STP X28, X27, [X31 + 0x10]
	0x03E19774 STP X26, X25, [X31 + 0x20]
	0x03E19778 STP X24, X23, [X31 + 0x30]
	0x03E1977C STP X22, X21, [X31 + 0x40]
	0x03E19780 STP X20, X19, [X31 + 0x50]
	0x03E19784 ADRP X21, 0x5CF000
	0x03E19788 ADRP X22, 0x351000
	0x03E1978C ADRP X19, 0x351000
	0x03E19790 ADRP X20, 0x303000
	0x03E19794 ADRP X29, 0x351000
	0x03E19798 ADRP X28, 0x351000
	0x03E1979C ADRP X27, 0x340000
	0x03E197A0 ADRP X26, 0x351000
	0x03E197A4 ADRP X25, 0x351000
	0x03E197A8 ADRP X24, 0x351000
	0x03E197AC ADRP X23, 0x351000
	0x03E197B0 LDR X22, [X22 + 0x7B8]
	0x03E197B4 LDR X19, [X19 + 0x7C0]
	0x03E197B8 LDR X20, [X20 + 0xE98]
	0x03E197BC LDR X29, [X29 + 0x7C8]
	0x03E197C0 LDR X28, [X28 + 0x7D0]
	0x03E197C4 LDR X27, [X27 + 0x20]
	0x03E197C8 LDR X26, [X26 + 0x5B0]
	0x03E197CC LDRB W8, [X21 + 0x3E9]
	0x03E197D0 LDR X25, [X25 + 0x5B8]
	0x03E197D4 LDR X24, [X24 + 0x7D8]
	0x03E197D8 LDR X23, [X23 + 0x7E0]
	0x03E197DC TBNZ X8, 0x0, 0x3E19878
	0x03E197E0 ADRP X0, 0x2E3000
	0x03E197E4 LDR X0, [X0 + 0x8D8]
	0x03E197E8 BL 0x1C16CF4
	0x03E197EC ADRP X0, 0x351000
	0x03E197F0 LDR X0, [X0 + 0x7D0]
	0x03E197F4 BL 0x1C16CF4
	0x03E197F8 ADRP X0, 0x351000
	0x03E197FC LDR X0, [X0 + 0x7C8]
	0x03E19800 BL 0x1C16CF4
	0x03E19804 ADRP X0, 0x340000
	0x03E19808 LDR X0, [X0 + 0x20]
	0x03E1980C BL 0x1C16CF4
	0x03E19810 ADRP X0, 0x351000
	0x03E19814 LDR X0, [X0 + 0x5B8]
	0x03E19818 BL 0x1C16CF4
	0x03E1981C ADRP X0, 0x351000
	0x03E19820 LDR X0, [X0 + 0x5B0]
	0x03E19824 BL 0x1C16CF4
	0x03E19828 ADRP X0, 0x351000
	0x03E1982C LDR X0, [X0 + 0x7C0]
	0x03E19830 BL 0x1C16CF4
	0x03E19834 ADRP X0, 0x351000
	0x03E19838 LDR X0, [X0 + 0x7B8]
	0x03E1983C BL 0x1C16CF4
	0x03E19840 ADRP X0, 0x351000
	0x03E19844 LDR X0, [X0 + 0x7E8]
	0x03E19848 BL 0x1C16CF4
	0x03E1984C ADRP X0, 0x303000
	0x03E19850 LDR X0, [X0 + 0xE98]
	0x03E19854 BL 0x1C16CF4
	0x03E19858 ADRP X0, 0x351000
	0x03E1985C LDR X0, [X0 + 0x7E0]
	0x03E19860 BL 0x1C16CF4
	0x03E19864 ADRP X0, 0x351000
	0x03E19868 LDR X0, [X0 + 0x7D8]
	0x03E1986C BL 0x1C16CF4
	0x03E19870 MOVZ W8, 0x1
	0x03E19874 STRB W8, [X21 + 0x3E9]
	0x03E19878 LDR X0, [X22]
	0x03E1987C BL 0x1C16F10
	0x03E19880 LDR X1, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5D0000
	007 Move W8, [X22+986]
	008 Move X19, X3
	009 Move X20, X2
	010 Move W21, W1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x352000
	016 Move X0, [X0+1616]
	017 Call 0x1C17CF4
	018 Move X0, 0x304000
	019 Move X0, [X0+3736]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+986], W8
	023 Move X0, X20
	024 Move X1, X31
	025 Move X2, X31
	026 Move [X31+8], X31
	027 Call IntPtr.op_Inequality, X0, X1
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {80}
	032 Move X22, 0x304000
	033 Move X22, [X22+3736]
	034 Move X0, [X22]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X22]
	040 Move X8, [X0+184]
	041 Move X0, [X8+8]
	042 Compare X0, 0
	043 JumpIfEqual {87}
	044 Move X8, 0x352000
	045 Move X8, [X8+1616]
	046 Add X2, X31, 8
	047 Move W1, W21
	048 Move X3, [X8]
	049 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {80}
	054 Move X0, [X31+8]
	055 Compare X0, 0
	056 JumpIfEqual {87}
	057 Move X8, [X0]
	058 Move X9, [X8+1016]
	059 Move X1, [X8+1024]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X22]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X22]
	068 Move X8, [X0+184]
	069 Move X0, [X8+16]
	070 Compare X0, 0
	071 JumpIfEqual {87}
	072 Move X1, X20
	073 Move X2, X31
	074 Call Event.CopyFromPtr, X0, X1
	075 Move X0, [X31+8]
	076 Call UIElementsUtility.DoDispatch, X0
	077 And W8, W0, 1
	078 Move [X19], W8
	079 Move W0, 1
	080 Move W0, W31
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Return X0
	087 Call 0x1C17F20

Method: System.Boolean UnityEngine.UIElements.IUIElementsUtility.CleanupRoots()

Disassembly:
	0x03E19EB8 MOV X0, X20
	0x03E19EBC MOV X1, X31
	0x03E19EC0 BL 0x3E06810
	0x03E19EC4 LDR V0, [X31 + 0x9]
	0x03E19EC8 LDR X8, [X31 + 0xA0]
	0x03E19ECC STR V0, [X31 + 0xB]
	0x03E19ED0 STR X8, [X31 + 0xC0]
	0x03E19ED4 CBZ X21, 0x3E1A14C
	0x03E19ED8 LDR V0, [X31 + 0xB]
	0x03E19EDC LDR X8, [X31 + 0xC0]
	0x03E19EE0 STR V0, [X31 + 0x3]
	0x03E19EE4 STR X8, [X31 + 0x40]
	0x03E19EE8 LDR W8, [X21 + 0x18]
	0x03E19EEC CBZ W8, 0x3E1A150
	0x03E19EF0 LDR X8, [X31 + 0x40]
	0x03E19EF4 LDR V0, [X31 + 0x3]
	0x03E19EF8 STR X8, [X21 + 0x30]
	0x03E19EFC STR V0, [X21 + 0x2]
	0x03E19F00 LDR X0, [X31 + 0xE8]
	0x03E19F04 CBZ X0, 0x3E1A14C
	0x03E19F08 LDR X2, [X22]
	0x03E19F0C MOV W1, W31
	0x03E19F10 BL 0x304F2B0
	0x03E19F14 CBZ X1, 0x3E1A14C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D0000
	005 Move X19, 0x304000
	006 Move W8, [X20+987]
	007 Move X19, [X19+3736]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x304000
	013 Move X0, [X0+3736]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+987], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, W31
	027 Move [X8], X31
	028 Move [X8+8], X31
	029 Move [X8+16], X31
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Boolean UnityEngine.UIElements.IUIElementsUtility.EndContainerGUIFromException(System.Exception exception)

Disassembly:
	0x03E19F18 MOV X0, X1
	0x03E19F1C MOV X1, X31
	0x03E19F20 BL 0x3E057F0
	0x03E19F24 CBZ X0, 0x3E1A14C
	0x03E19F28 LDR W8, [X0 + 0x18]
	0x03E19F2C CBZ W8, 0x3E1A150
	0x03E19F30 LDR X0, [X0 + 0x20]
	0x03E19F34 CBZ X0, 0x3E1A14C
	0x03E19F38 MOV X1, X31
	0x03E19F3C BL 0x3E05D14
	0x03E19F40 MOV X20, X0
	0x03E19F44 ADD X8, X31, 0x18
	0x03E19F48 MOV X0, X19
	0x03E19F4C MOV X1, X31
	0x03E19F50 BL 0x3E067F8
	0x03E19F54 LDUR V0, [X31 + 0x18]
	0x03E19F58 LDR X8, [X31 + 0x28]
	0x03E19F5C STR V0, [X31 + 0x9]
	0x03E19F60 STR X8, [X31 + 0xA0]
	0x03E19F64 CBZ X20, 0x3E1A14C
	0x03E19F68 LDR V0, [X31 + 0x9]
	0x03E19F6C LDR X8, [X31 + 0xA0]
	0x03E19F70 STR V0, [X31]
	0x03E19F74 STR X8, [X31 + 0x10]
	0x03E19F78 LDR W8, [X20 + 0x18]
	0x03E19F7C CMP W8, 0x1
	0x03E19F80 B.LS 0x3E1A150
	0x03E19F84 LDR X8, [X31 + 0x10]
	0x03E19F88 LDR V0, [X31]
	0x03E19F8C STR X8, [X20 + 0x48]
	0x03E19F90 STUR V0, [X20 + 0x38]
	0x03E19F94 B 0x3E1A0F8
	0x03E19F98 CBZ X19, 0x3E1A124
	0x03E19F9C LDR X2, [X8]
	0x03E19FA0 ADD X0, X0, 0x20
	0x03E19FA4 MOV X1, X21
	0x03E19FA8 BL 0x272520C
	0x03E19FAC STP X0, X1, [X31 + 0xE0]
	0x03E19FB0 CBZ X1, 0x3E1A14C
	0x03E19FB4 ADRP X8, 0x303000
	0x03E19FB8 LDR X8, [X8 + 0x828]
	0x03E19FBC MOV X0, X1
	0x03E19FC0 MOV W1, W31
	0x03E19FC4 LDR X2, [X8]
	0x03E19FC8 BL 0x304F2B0
	0x03E19FCC CBZ X1, 0x3E1A14C
	0x03E19FD0 MOV X0, X1
	0x03E19FD4 MOV X1, X31
	0x03E19FD8 BL 0x3E057F0
	0x03E19FDC CBZ X0, 0x3E1A14C
	0x03E19FE0 LDR W8, [X0 + 0x18]
	0x03E19FE4 CBZ W8, 0x3E1A150
	0x03E19FE8 LDR X0, [X0 + 0x20]
	0x03E19FEC CBZ X0, 0x3E1A14C
	0x03E19FF0 MOV X1, X31
	0x03E19FF4 BL 0x3E05D14
	0x03E19FF8 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5D0000
	005 Move X19, 0x304000
	006 Move W8, [X20+988]
	007 Move X19, [X19+3736]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x307000
	013 Move X0, [X0+1480]
	014 Call 0x1C17CF4
	015 Move X0, 0x352000
	016 Move X0, [X0+1944]
	017 Call 0x1C17CF4
	018 Move X0, 0x352000
	019 Move X0, [X0+1936]
	020 Call 0x1C17CF4
	021 Move X0, 0x304000
	022 Move X0, [X0+3736]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+988], W8
	026 Move X0, [X19]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X19]
	032 Move X8, [X0+184]
	033 Move X8, [X8]
	034 Compare X8, 0
	035 JumpIfEqual {66}
	036 Move W8, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, 0x307000
	039 Move X8, [X8+1480]
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X31
	046 Call GUIUtility.EndContainer
	047 Move X0, [X19]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X19]
	053 Move X8, [X0+184]
	054 Move X0, [X8]
	055 Compare X0, 0
	056 JumpIfEqual {66}
	057 Move X8, 0x352000
	058 Move X8, [X8+1944]
	059 Move X1, [X8]
	060 Call Stack`1<Object>.Pop, X0
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move W0, W31
	064 Move X30, [X31+32]
	065 Return X0
	066 Call 0x1C17F20

Method: System.Void RegisterCachedPanel(System.Int32 instanceID, UnityEngine.UIElements.Panel panel)

Disassembly:
	0x03E16500 STR X8, [X31 + 0x40]
	0x03E16504 LDR X1, [X22]
	0x03E16508 ADD X0, X31, 0x30
	0x03E1650C BL 0x2BC4350
	0x03E16510 TBZ X0, 0x0, 0x3E16558
	0x03E16514 LDR X0, [X31 + 0x40]
	0x03E16518 CBZ X0, 0x3E165D4
	0x03E1651C LDR X8, [X0]
	0x03E16520 LDR X1, [X23]
	0x03E16524 LDRB W10, [X8 + 0x130]
	0x03E16528 LDRB W9, [X1 + 0x130]
	0x03E1652C CMP W10, W9
	0x03E16530 B.CC 0x3E165D0
	0x03E16534 LDR X10, [X8 + 0xC8]
	0x03E16538 ADD X9, X10, X9, 0x3, LSL
	0x03E1653C LDUR X9, [X9 - 0x8]
	0x03E16540 CMP X9, X1
	0x03E16544 B.NE 0x3E165D0
	0x03E16548 LDR X1, [X8 + 0x490]
	0x03E1654C LDR X9, [X8 + 0x488]
	0x03E16550 BLR X9
	0x03E16554 B 0x3E16504
	0x03E16558 LDR X1, [X21]
	0x03E1655C ADD X0, X31, 0x30
	0x03E16560 BL 0x2BC434C
	0x03E16564 LDR X0, [X20]
	0x03E16568 LDR W8, [X0 + 0xE0]
	0x03E1656C CBNZ W8, 0x3E16574
	0x03E16570 BL 0x1C16DFC
	0x03E16574 MOV X0, X31
	0x03E16578 BL 0x3C018E4
	0x03E1657C TBZ X0, 0x0, 0x3E165BC
	0x03E16580 LDR X0, [X19]
	0x03E16584 LDR W8, [X0 + 0xE0]
	0x03E16588 CBNZ W8, 0x3E16590
	0x03E1658C BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5D3000
	007 Move X21, 0x307000
	008 Move W8, [X22+989]
	009 Move X21, [X21+3736]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x355000
	017 Move X0, [X0+1632]
	018 Call 0x1C17CF4
	019 Move X0, 0x307000
	020 Move X0, [X0+3736]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+989], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8+8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x355000
	035 Move X8, [X8+1632]
	036 Move W1, W20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	045 Return 
	046 Call 0x1C17F20

Method: System.Void RemoveCachedPanel(System.Int32 instanceID)

Disassembly:
	0x03E1662C BL 0x2BC434C
	0x03E16630 LDR X8, [X31 + 0x10]
	0x03E16634 CBNZ X8, 0x3E16640
	0x03E16638 LDR X0, [X31 + 0x8]
	0x03E1663C BL 0x1D2C690
	0x03E16640 LDR X0, [X31 + 0x10]
	0x03E16644 BL 0x1C16F18
	0x03E16648 BL 0x1990590
	0x03E1664C SUB X31, X31, 0x60
	0x03E16650 STP X30, X21, [X31 + 0x40]
	0x03E16654 STP X20, X19, [X31 + 0x50]
	0x03E16658 ADRP X19, 0x5D2000
	0x03E1665C ADRP X21, 0x305000
	0x03E16660 LDRB W8, [X19 + 0x3BC]
	0x03E16664 LDR X21, [X21 + 0x930]
	0x03E16668 TBNZ X8, 0x0, 0x3E166C8
	0x03E1666C ADRP X0, 0x354000
	0x03E16670 LDR X0, [X0 + 0x6A8]
	0x03E16674 BL 0x1C16CF4
	0x03E16678 ADRP X0, 0x354000
	0x03E1667C LDR X0, [X0 + 0x6B0]
	0x03E16680 BL 0x1C16CF4
	0x03E16684 ADRP X0, 0x354000
	0x03E16688 LDR X0, [X0 + 0x6B8]
	0x03E1668C BL 0x1C16CF4
	0x03E16690 ADRP X0, 0x354000
	0x03E16694 LDR X0, [X0 + 0x6C0]
	0x03E16698 BL 0x1C16CF4
	0x03E1669C ADRP X0, 0x354000
	0x03E166A0 LDR X0, [X0 + 0x6C8]
	0x03E166A4 BL 0x1C16CF4
	0x03E166A8 ADRP X0, 0x352000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D3000
	006 Move X20, 0x307000
	007 Move W8, [X21+990]
	008 Move X20, [X20+3736]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x355000
	015 Move X0, [X0+1648]
	016 Call 0x1C17CF4
	017 Move X0, 0x307000
	018 Move X0, [X0+3736]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+990], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X0, [X8+8]
	030 Compare X0, 0
	031 JumpIfEqual {42}
	032 Move X8, 0x355000
	033 Move X8, [X8+1648]
	034 Move W1, W19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X2, [X8]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call Dictionary`2<Int32, Object>.Remove, X0, X1
	041 Return 
	042 Call 0x1C17F20

Method: System.Boolean TryGetPanel(System.Int32 instanceID, out UnityEngine.UIElements.Panel panel)

Disassembly:
	0x03E1614C LDR X0, [X0 + 0x930]
	0x03E16150 BL 0x1C16CF4
	0x03E16154 MOVZ W8, 0x1
	0x03E16158 STRB W8, [X23 + 0x44E]
	0x03E1615C LDR X0, [X21]
	0x03E16160 LDR W8, [X0 + 0xE0]
	0x03E16164 CBNZ W8, 0x3E16170
	0x03E16168 BL 0x1C16DFC
	0x03E1616C LDR X0, [X21]
	0x03E16170 LDR X8, [X22]
	0x03E16174 LDR X9, [X0 + 0xB8]
	0x03E16178 LDR W10, [X8 + 0xE0]
	0x03E1617C LDR X20, [X9 + 0x38]
	0x03E16180 CBNZ W10, 0x3E1618C
	0x03E16184 MOV X0, X8
	0x03E16188 BL 0x1C16DFC
	0x03E1618C MOV X0, X20
	0x03E16190 MOV X1, X19
	0x03E16194 MOV X2, X31
	0x03E16198 BL 0x3C354F8
	0x03E1619C TBZ X0, 0x0, 0x3E16204
	0x03E161A0 CBZ X19, 0x3E16260
	0x03E161A4 MOV X0, X19
	0x03E161A8 MOV X1, X31
	0x03E161AC BL 0x33BE520
	0x03E161B0 CBZ X0, 0x3E16260
	0x03E161B4 LDR X8, [X0]
	0x03E161B8 LDP X9, X1, [X8 + 0x1A8]
	0x03E161BC BLR X9
	0x03E161C0 ADRP X8, 0x304000
	0x03E161C4 LDR X8, [X8 + 0x5A8]
	0x03E161C8 MOV X2, X31
	0x03E161CC LDR X1, [X8]
	0x03E161D0 BL 0x321BA08
	0x03E161D4 TBZ X0, 0x0, 0x3E16204
	0x03E161D8 ADRP X8, 0x2DD000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5D3000
	007 Move X21, 0x307000
	008 Move W8, [X22+991]
	009 Move X21, [X21+3736]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x355000
	017 Move X0, [X0+1616]
	018 Call 0x1C17CF4
	019 Move X0, 0x307000
	020 Move X0, [X0+3736]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+991], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, [X8+8]
	032 Compare X0, 0
	033 JumpIfEqual {46}
	034 Move X8, 0x355000
	035 Move X8, [X8+1616]
	036 Move W1, W20
	037 Move X2, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X3, [X8]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	045 Return X0
	046 Call 0x1C17F20

Method: System.Void BeginContainerGUI(UnityEngine.GUILayoutUtility/LayoutCache cache, UnityEngine.Event evt, UnityEngine.UIElements.IMGUIContainer container)

Disassembly:
	0x03E19FFC ADD X8, X31, 0x90
	0x03E1A000 MOV X0, X19
	0x03E1A004 MOV X1, X31
	0x03E1A008 BL 0x3E067F8
	0x03E1A00C LDR V0, [X31 + 0x9]
	0x03E1A010 LDR X8, [X31 + 0xA0]
	0x03E1A014 STR V0, [X31 + 0xB]
	0x03E1A018 STR X8, [X31 + 0xC0]
	0x03E1A01C CBZ X20, 0x3E1A14C
	0x03E1A020 LDR V0, [X31 + 0xB]
	0x03E1A024 LDR X8, [X31 + 0xC0]
	0x03E1A028 STR V0, [X31 + 0x7]
	0x03E1A02C STR X8, [X31 + 0x80]
	0x03E1A030 LDR W8, [X20 + 0x18]
	0x03E1A034 CBZ W8, 0x3E1A150
	0x03E1A038 LDR X8, [X31 + 0x80]
	0x03E1A03C LDR V0, [X31 + 0x7]
	0x03E1A040 STR X8, [X20 + 0x30]
	0x03E1A044 STR V0, [X20 + 0x2]
	0x03E1A048 B 0x3E1A0F8
	0x03E1A04C LDR X2, [X8]
	0x03E1A050 ADD X0, X0, 0x10
	0x03E1A054 MOV X1, X21
	0x03E1A058 BL 0x272520C
	0x03E1A05C STP X0, X1, [X31 + 0xE0]
	0x03E1A060 CBZ X1, 0x3E1A14C
	0x03E1A064 ADRP X8, 0x302000
	0x03E1A068 LDR X8, [X8 + 0x828]
	0x03E1A06C MOV X0, X1
	0x03E1A070 MOV W1, W31
	0x03E1A074 LDR X2, [X8]
	0x03E1A078 BL 0x304F2B0
	0x03E1A07C CBZ X1, 0x3E1A14C
	0x03E1A080 MOV X0, X1
	0x03E1A084 MOV X1, X31
	0x03E1A088 BL 0x3E057F0
	0x03E1A08C CBZ X0, 0x3E1A14C
	0x03E1A090 LDR W8, [X0 + 0x18]
	0x03E1A094 CBZ W8, 0x3E1A150
	0x03E1A098 LDR X0, [X0 + 0x20]
	0x03E1A09C CBZ X0, 0x3E1A14C
	0x03E1A0A0 MOV X1, X31
	0x03E1A0A4 BL 0x3E05D14
	0x03E1A0A8 MOV X19, X0
	0x03E1A0AC ADD X8, X31, 0x90
	0x03E1A0B0 MOV X0, X20
	0x03E1A0B4 MOV X1, X31
	0x03E1A0B8 BL 0x3E06810
	0x03E1A0BC LDR V0, [X31 + 0x9]
	0x03E1A0C0 LDR X8, [X31 + 0xA0]
	0x03E1A0C4 STR V0, [X31 + 0xB]
	0x03E1A0C8 STR X8, [X31 + 0xC0]
	0x03E1A0CC CBZ X19, 0x3E1A14C
	0x03E1A0D0 LDR V0, [X31 + 0xB]
	0x03E1A0D4 LDR X8, [X31 + 0xC0]
	0x03E1A0D8 STR V0, [X31 + 0x5]
	0x03E1A0DC STR X8, [X31 + 0x60]
	0x03E1A0E0 LDR W8, [X19 + 0x18]
	0x03E1A0E4 CBZ W8, 0x3E1A150
	0x03E1A0E8 LDR X8, [X31 + 0x60]
	0x03E1A0EC LDR V0, [X31 + 0x5]
	0x03E1A0F0 STR X8, [X19 + 0x30]
	0x03E1A0F4 STR V0, [X19 + 0x2]
	0x03E1A0F8 ADRP X8, 0x302000
	0x03E1A0FC LDR X8, [X8 + 0x838]
	0x03E1A100 ADD X0, X31, 0xE0
	0x03E1A104 LDR X1, [X8]
	0x03E1A108 BL 0x2725340
	0x03E1A10C LDP X20, X19, [X31 + 0x120]
	0x03E1A110 LDP X22, X21, [X31 + 0x110]
	0x03E1A114 LDP X30, X23, [X31 + 0x100]
	0x03E1A118 LDR X29, [X31 + 0xF0]
	0x03E1A11C ADD X31, X31, 0x130
	0x03E1A120 RET
	0x03E1A124 LDR X2, [X8]
	0x03E1A128 MOV X1, X21
	0x03E1A12C BL 0x272520C
	0x03E1A130 ADRP X8, 0x302000
	0x03E1A134 LDR X8, [X8 + 0x838]
	0x03E1A138 STP X0, X1, [X31 + 0xD0]
	0x03E1A13C ADD X0, X31, 0xD0
	0x03E1A140 LDR X8, [X8]
	0x03E1A144 MOV X1, X8
	0x03E1A148 B 0x3E1A108
	0x03E1A14C BL 0x1C16F20
	0x03E1A150 BL 0x1C16F28
	0x03E1A154 ADRP X0, 0x2DE000
	0x03E1A158 LDR X0, [X0 + 0x528]
	0x03E1A15C BL 0x1C16D08
	0x03E1A160 BL 0x1C16F10
	0x03E1A164 MOV X19, X0
	0x03E1A168 ADRP X0, 0x310000
	0x03E1A16C LDR X0, [X0 + 0x1A0]
	0x03E1A170 BL 0x1C16D08
	0x03E1A174 MOV X1, X0
	0x03E1A178 MOV X0, X19
	0x03E1A17C MOV X2, X31
	0x03E1A180 BL 0x330E100
	0x03E1A184 ADRP X0, 0x350000
	0x03E1A188 LDR X0, [X0 + 0x808]
	0x03E1A18C BL 0x1C16D08
	0x03E1A190 MOV X1, X0
	0x03E1A194 MOV X0, X19
	0x03E1A198 BL 0x1C16DEC
	0x03E1A19C STP X29, X30, [X31 - 0x50]!
	0x03E1A1A0 STP X26, X25, [X31 + 0x10]
	0x03E1A1A4 STP X24, X23, [X31 + 0x20]
	0x03E1A1A8 STP X22, X21, [X31 + 0x30]
	0x03E1A1AC STP X20, X19, [X31 + 0x40]
	0x03E1A1B0 SUB X31, X31, 0x3F0
	0x03E1A1B4 ADRP X26, 0x5CE000
	0x03E1A1B8 ADRP X25, 0x350000
	0x03E1A1BC ADRP X20, 0x350000
	0x03E1A1C0 ADRP X19, 0x302000
	0x03E1A1C4 ADRP X22, 0x2DB000
	0x03E1A1C8 ADRP X23, 0x350000
	0x03E1A1CC ADRP X21, 0x350000
	0x03E1A1D0 ADRP X24, 0x350000
	0x03E1A1D4 LDR X25, [X25 + 0x810]
	0x03E1A1D8 LDR X20, [X20 + 0x818]
	0x03E1A1DC LDRB W8, [X26 + 0x3EF]
	0x03E1A1E0 LDR X19, [X19 + 0x830]
	0x03E1A1E4 LDR X22, [X22 + 0x278]
	0x03E1A1E8 LDR X23, [X23 + 0x820]
	0x03E1A1EC LDR X21, [X21 + 0x828]
	0x03E1A1F0 LDR X24, [X24 + 0x830]
	0x03E1A1F4 TBNZ X8, 0x0, 0x3E1A254
	0x03E1A1F8 ADRP X0, 0x2DB000
	0x03E1A1FC LDR X0, [X0 + 0x278]
	0x03E1A200 BL 0x1C16CF4
	0x03E1A204 ADRP X0, 0x350000
	0x03E1A208 LDR X0, [X0 + 0x818]
	0x03E1A20C BL 0x1C16CF4
	0x03E1A210 ADRP X0, 0x350000
	0x03E1A214 LDR X0, [X0 + 0x828]
	0x03E1A218 BL 0x1C16CF4
	0x03E1A21C ADRP X0, 0x350000
	0x03E1A220 LDR X0, [X0 + 0x820]
	0x03E1A224 BL 0x1C16CF4
	0x03E1A228 ADRP X0, 0x350000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5CF000
	008 Move W8, [X22+992]
	009 Move X20, X2
	010 Move X21, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x347000
	017 Move X0, [X0+688]
	018 Call 0x1C17CF4
	019 Move X0, 0x306000
	020 Move X0, [X0+1480]
	021 Call 0x1C17CF4
	022 Move X0, 0x301000
	023 Move X0, [X0+1216]
	024 Call 0x1C17CF4
	025 Move X0, 0x351000
	026 Move X0, [X0+1952]
	027 Call 0x1C17CF4
	028 Move X0, 0x303000
	029 Move X0, [X0+3736]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+992], W8
	033 Compare X20, 0
	034 JumpIfEqual {163}
	035 Move X23, 0x306000
	036 Move W8, [X20+984]
	037 Move X23, [X23+1480]
	038 Compare W8, 0
	039 JumpIfEqual {57}
	040 Move X0, [X20+928]
	041 Compare X0, 0
	042 JumpIfEqual {163}
	043 Move X8, [X0]
	044 Move X9, [X8+536]
	045 Move X1, [X8+544]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X23]
	048 Move X22, X0
	049 Move W9, [X8+224]
	050 Compare W9, 0
	051 JumpIfNotEqual {54}
	052 Move X0, X8
	053 Call 0x1C17DFC
	054 Move X0, X22
	055 Move X1, X31
	056 Call GUIUtility.BeginContainerFromOwner, X0
	057 Move X0, X20
	058 Move X1, X31
	059 Call IMGUIContainer.get_guiState, X0
	060 Move X8, [X23]
	061 Move X22, X0
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X22
	068 Move X1, X31
	069 Call GUIUtility.BeginContainer, X0
	070 Move X22, 0x303000
	071 Move X22, [X22+3736]
	072 Move X0, [X22]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X22]
	078 Move X8, [X0+184]
	079 Move X0, [X8]
	080 Compare X0, 0
	081 JumpIfEqual {163}
	082 Move X8, 0x351000
	083 Move X8, [X8+1952]
	084 Move X1, X20
	085 Move X2, [X8]
	086 Call Stack`1<Object>.Push, X0, X1
	087 Move X0, [X23]
	088 Move W22, [X20+1096]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {94}
	092 Call 0x1C17DFC
	093 Move X0, [X23]
	094 Move X8, [X0+184]
	095 Move [X8+4], W22
	096 Move X0, [X20+928]
	097 Compare X0, 0
	098 JumpIfEqual {163}
	099 Move X8, [X0]
	100 Move X9, [X8+536]
	101 Move X1, [X8+544]
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Compare X0, 0
	104 JumpIfEqual {163}
	105 Move X1, X31
	106 Call Object.GetInstanceID, X0
	107 Move X8, [X23]
	108 Move X8, [X8+184]
	109 Move [X8+8], W0
	110 Move X0, X31
	111 Call Event.get_current
	112 Compare X0, 0
	113 JumpIfEqual {121}
	114 Move X0, X31
	115 Call Event.get_current
	116 Compare X0, 0
	117 JumpIfEqual {163}
	118 Move X1, X21
	119 Move X2, X31
	120 Call Event.CopyFrom, X0, X1
	121 Move X0, X21
	122 Move X1, X31
	123 Call Event.set_current, X0
	124 Move X22, 0x301000
	125 Move X21, 0x347000
	126 Move X22, [X22+1216]
	127 Move X21, [X21+688]
	128 Move X0, X20
	129 Move X1, X31
	130 Call VisualElement.get_enabledInHierarchy, X0
	131 Move X8, [X22]
	132 Move W20, W0
	133 Move W9, [X8+224]
	134 Compare W9, 0
	135 JumpIfNotEqual {138}
	136 Move X0, X8
	137 Call 0x1C17DFC
	138 And W0, W20, 1
	139 Move X1, X31
	140 Call GUI.set_enabled, X0
	141 Move X0, [X21]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X0, X19
	147 Move X1, X31
	148 Call GUILayoutUtility.BeginContainer, X0
	149 Move X0, [X23]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move X20, [X31+32]
	155 Move X19, [X31+40]
	156 Move X22, [X31+16]
	157 Move X21, [X31+24]
	158 Move X0, X31
	159 Move X30, [X31+48]
	160 Move X23, [X31+56]
	161 Call GUIUtility.ResetGlobalState
	162 Return 
	163 Call 0x1C17F20

Method: System.Void EndContainerGUI(UnityEngine.Event evt, UnityEngine.Rect layoutSize)

Disassembly:
	0x03E1A22C LDR X0, [X0 + 0x830]
	0x03E1A230 BL 0x1C16CF4
	0x03E1A234 ADRP X0, 0x350000
	0x03E1A238 LDR X0, [X0 + 0x810]
	0x03E1A23C BL 0x1C16CF4
	0x03E1A240 ADRP X0, 0x302000
	0x03E1A244 LDR X0, [X0 + 0x830]
	0x03E1A248 BL 0x1C16CF4
	0x03E1A24C MOVZ W8, 0x1
	0x03E1A250 STRB W8, [X26 + 0x3EF]
	0x03E1A254 LDR X2, [X25]
	0x03E1A258 MOVI V0.2D, 0x0
	0x03E1A25C ADD X0, X31, 0x390
	0x03E1A260 MOV X1, X31
	0x03E1A264 STP V0, V0, [X31 + 0x3D0]
	0x03E1A268 STP V0, V0, [X31 + 0x3B0]
	0x03E1A26C STP V0, V0, [X31 + 0x390]
	0x03E1A270 BL 0x2724134
	0x03E1A274 LDP V0, V1, [X31 + 0x390]
	0x03E1A278 LDR V2, [X31 + 0x3B]
	0x03E1A27C LDR X1, [X20]
	0x03E1A280 ADD X0, X31, 0x3C0
	0x03E1A284 STP V0, V1, [X31 + 0x3C0]
	0x03E1A288 STR V2, [X31 + 0x3E]
	0x03E1A28C BL 0x2724B5C
	0x03E1A290 LDR X8, [X19]
	0x03E1A294 MOVI V0.2D, 0x0
	0x03E1A298 LDR X8, [X8 + 0xB8]
	0x03E1A29C STP X0, X1, [X8]
	0x03E1A2A0 LDR X2, [X25]
	0x03E1A2A4 ADD X0, X31, 0x360
	0x03E1A2A8 MOV X1, X31
	0x03E1A2AC STP V0, V0, [X31 + 0x370]
	0x03E1A2B0 STR V0, [X31 + 0x36]
	0x03E1A2B4 BL 0x2724134
	0x03E1A2B8 LDP V0, V1, [X31 + 0x360]
	0x03E1A2BC LDR V2, [X31 + 0x38]
	0x03E1A2C0 LDR X8, [X22]
	0x03E1A2C4 LDR X2, [X23]
	0x03E1A2C8 STP V0, V1, [X31 + 0x3C0]
	0x03E1A2CC STR V2, [X31 + 0x3E]
	0x03E1A2D0 LDR X8, [X8 + 0xB8]
	0x03E1A2D4 ADD X0, X31, 0x3C0
	0x03E1A2D8 LDR X1, [X8]
	0x03E1A2DC ADD X8, X31, 0x330
	0x03E1A2E0 BL 0x2724214
	0x03E1A2E4 LDP V0, V1, [X31 + 0x330]
	0x03E1A2E8 LDR V2, [X31 + 0x35]
	0x03E1A2EC LDR X1, [X20]
	0x03E1A2F0 ADD X0, X31, 0x3C0
	0x03E1A2F4 STP V0, V1, [X31 + 0x3C0]
	0x03E1A2F8 STR V2, [X31 + 0x3E]
	0x03E1A2FC BL 0x2724B5C
	0x03E1A300 LDR X8, [X19]
	0x03E1A304 MOVI V0.2D, 0x0
	0x03E1A308 LDR X8, [X8 + 0xB8]
	0x03E1A30C STP X0, X1, [X8 + 0x10]
	0x03E1A310 LDR X2, [X25]
	0x03E1A314 ADD X0, X31, 0x300
	0x03E1A318 MOV X1, X31
	0x03E1A31C STP V0, V0, [X31 + 0x310]
	0x03E1A320 STR V0, [X31 + 0x30]
	0x03E1A324 BL 0x2724134
	0x03E1A328 LDP V0, V1, [X31 + 0x300]
	0x03E1A32C LDR V2, [X31 + 0x32]
	0x03E1A330 LDR X8, [X22]
	0x03E1A334 LDR X2, [X21]
	0x03E1A338 STP V0, V1, [X31 + 0x3C0]
	0x03E1A33C STR V2, [X31 + 0x3E]
	0x03E1A340 LDR X8, [X8 + 0xB8]
	0x03E1A344 ADD X0, X31, 0x3C0
	0x03E1A348 LDR X1, [X8]
	0x03E1A34C ADD X8, X31, 0x2D0
	0x03E1A350 BL 0x27241C0
	0x03E1A354 LDP V0, V1, [X31 + 0x2D0]
	0x03E1A358 LDR V2, [X31 + 0x2F]
	0x03E1A35C LDR X1, [X20]
	0x03E1A360 ADD X0, X31, 0x3C0
	0x03E1A364 STP V0, V1, [X31 + 0x3C0]
	0x03E1A368 STR V2, [X31 + 0x3E]
	0x03E1A36C BL 0x2724B5C
	0x03E1A370 LDR X8, [X19]
	0x03E1A374 MOVI V0.2D, 0x0
	0x03E1A378 LDR X8, [X8 + 0xB8]
	0x03E1A37C STP X0, X1, [X8 + 0x20]
	0x03E1A380 LDR X2, [X25]
	0x03E1A384 ADD X0, X31, 0x2A0
	0x03E1A388 MOV X1, X31
	0x03E1A38C STP V0, V0, [X31 + 0x2B0]
	0x03E1A390 STR V0, [X31 + 0x2A]
	0x03E1A394 BL 0x2724134
	0x03E1A398 LDP V0, V1, [X31 + 0x2A0]
	0x03E1A39C LDR V2, [X31 + 0x2C]
	0x03E1A3A0 LDR X8, [X22]
	0x03E1A3A4 LDR X2, [X23]
	0x03E1A3A8 STP V0, V1, [X31 + 0x3C0]
	0x03E1A3AC STR V2, [X31 + 0x3E]
	0x03E1A3B0 LDR X8, [X8 + 0xB8]
	0x03E1A3B4 ADD X0, X31, 0x3C0
	0x03E1A3B8 LDR X1, [X8]
	0x03E1A3BC ADD X8, X31, 0x270
	0x03E1A3C0 BL 0x2724214
	0x03E1A3C4 LDP V0, V1, [X31 + 0x270]
	0x03E1A3C8 LDR V2, [X31 + 0x29]
	0x03E1A3CC LDR X8, [X22]
	0x03E1A3D0 LDR X2, [X21]
	0x03E1A3D4 STP V0, V1, [X31 + 0x3C0]
	0x03E1A3D8 STR V2, [X31 + 0x3E]
	0x03E1A3DC LDR X8, [X8 + 0xB8]
	0x03E1A3E0 ADD X0, X31, 0x3C0
	0x03E1A3E4 LDR X1, [X8]
	0x03E1A3E8 ADD X8, X31, 0x240
	0x03E1A3EC BL 0x27241C0
	0x03E1A3F0 LDP V0, V1, [X31 + 0x240]
	0x03E1A3F4 LDR V2, [X31 + 0x26]
	0x03E1A3F8 LDR X1, [X20]
	0x03E1A3FC ADD X0, X31, 0x3C0
	0x03E1A400 STP V0, V1, [X31 + 0x3C0]
	0x03E1A404 STR V2, [X31 + 0x3E]
	0x03E1A408 BL 0x2724B5C
	0x03E1A40C LDR X8, [X19]
	0x03E1A410 MOVI V0.2D, 0x0
	0x03E1A414 LDR X8, [X8 + 0xB8]
	0x03E1A418 STP X0, X1, [X8 + 0x30]
	0x03E1A41C LDR X2, [X25]
	0x03E1A420 ADD X0, X31, 0x210
	0x03E1A424 MOV X1, X31
	0x03E1A428 STP V0, V0, [X31 + 0x220]
	0x03E1A42C STR V0, [X31 + 0x21]
	0x03E1A430 BL 0x2724134
	0x03E1A434 LDP V0, V1, [X31 + 0x210]
	0x03E1A438 LDR V2, [X31 + 0x23]
	0x03E1A43C LDR X1, [X24]
	0x03E1A440 ADD X8, X31, 0x1E0
	0x03E1A444 ADD X0, X31, 0x3C0
	0x03E1A448 STP V0, V1, [X31 + 0x3C0]
	0x03E1A44C STR V2, [X31 + 0x3E]
	0x03E1A450 BL 0x2724268
	0x03E1A454 LDP V0, V1, [X31 + 0x1E0]
	0x03E1A458 LDR V2, [X31 + 0x20]

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x5CF000
	010 Move W8, [X20+993]
	011 Move V8, V3
	012 Move V9, V2
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x305000
	019 Move X0, [X0+3024]
	020 Call 0x1C17CF4
	021 Move X0, 0x347000
	022 Move X0, [X0+688]
	023 Call 0x1C17CF4
	024 Move X0, 0x306000
	025 Move X0, [X0+1480]
	026 Call 0x1C17CF4
	027 Move X0, 0x351000
	028 Move X0, [X0+1944]
	029 Call 0x1C17CF4
	030 Move X0, 0x351000
	031 Move X0, [X0+1936]
	032 Call 0x1C17CF4
	033 Move X0, 0x303000
	034 Move X0, [X0+3736]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+993], W8
	038 Move X0, X31
	039 Call Event.get_current
	040 Compare X0, 0
	041 JumpIfEqual {168}
	042 Move X20, 0x347000
	043 Move X21, 0x303000
	044 Move X20, [X20+688]
	045 Move X21, [X21+3736]
	046 Move X1, X31
	047 Call Event.get_type, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X21]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X21]
	055 Move X8, [X0+184]
	056 Move X8, [X8]
	057 Compare X8, 0
	058 JumpIfEqual {168}
	059 Move W8, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, [X20]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move V0, V9
	067 Move V1, V8
	068 Move X0, X31
	069 Call GUILayoutUtility.LayoutFromContainer, V0, V1
	070 Move X22, 0x306000
	071 Move X22, [X22+1480]
	072 Move X0, [X22]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X22]
	078 Move X8, [X20]
	079 Move X9, [X0+184]
	080 Move X23, 0x305000
	081 Move W10, [X8+224]
	082 Move W20, [X9+8]
	083 Move X23, [X23+3024]
	084 Compare W10, 0
	085 JumpIfNotEqual {88}
	086 Move X0, X8
	087 Call 0x1C17DFC
	088 Move W0, W20
	089 Move W1, W31
	090 Move X2, X31
	091 Call GUILayoutUtility.SelectIDList, X0, X1
	092 Move X0, [X23]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X31
	098 Call GUIContent.ClearStaticCache
	099 Move X0, [X21]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X21]
	105 Move X8, [X0+184]
	106 Move X8, [X8]
	107 Compare X8, 0
	108 JumpIfEqual {168}
	109 Move X0, X31
	110 Call Event.get_current
	111 Compare X19, 0
	112 JumpIfEqual {168}
	113 Move X1, X0
	114 Move X0, X19
	115 Move X2, X31
	116 Call Event.CopyFrom, X0, X1
	117 Move X0, [X21]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {123}
	121 Call 0x1C17DFC
	122 Move X0, [X21]
	123 Move X8, [X0+184]
	124 Move X8, [X8]
	125 Compare X8, 0
	126 JumpIfEqual {168}
	127 Move W8, [X8+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, [X22]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X31
	135 Call GUIUtility.EndContainer
	136 Move X0, [X21]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {142}
	140 Call 0x1C17DFC
	141 Move X0, [X21]
	142 Move X8, [X0+184]
	143 Move X0, [X8]
	144 Compare X0, 0
	145 JumpIfEqual {168}
	146 Move X8, 0x351000
	147 Move X8, [X8+1944]
	148 Move X20, [X31+48]
	149 Move X19, [X31+56]
	150 Move X22, [X31+32]
	151 Move X21, [X31+40]
	152 Move X30, [X31+16]
	153 Move X23, [X31+24]
	154 Move X1, [X8]
	155 Move D9, [X31+64]
	156 Move D8, [X31+72]
	157 Call Stack`1<Object>.Pop, X0
	158 Return 
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X30, [X31+16]
	164 Move X23, [X31+24]
	165 Move D9, [X31+64]
	166 Move D8, [X31+72]
	167 Return 
	168 Call 0x1C17F20

Method: UnityEngine.UIElements.EventBase CreateEvent(UnityEngine.Event systemEvent)

Disassembly:
	0x03E1A45C LDR X1, [X20]
	0x03E1A460 ADD X0, X31, 0x3C0
	0x03E1A464 STP V0, V1, [X31 + 0x3C0]
	0x03E1A468 STR V2, [X31 + 0x3E]
	0x03E1A46C BL 0x2724B5C
	0x03E1A470 LDR X8, [X19]
	0x03E1A474 MOVI V0.2D, 0x0
	0x03E1A478 LDR X8, [X8 + 0xB8]
	0x03E1A47C STP X0, X1, [X8 + 0x40]
	0x03E1A480 LDR X2, [X25]
	0x03E1A484 ADD X0, X31, 0x1B0
	0x03E1A488 MOV X1, X31
	0x03E1A48C STP V0, V0, [X31 + 0x1C0]
	0x03E1A490 STR V0, [X31 + 0x1B]
	0x03E1A494 BL 0x2724134
	0x03E1A498 LDP V0, V1, [X31 + 0x1B0]
	0x03E1A49C LDR V2, [X31 + 0x1D]
	0x03E1A4A0 LDR X1, [X24]
	0x03E1A4A4 ADD X8, X31, 0x180
	0x03E1A4A8 ADD X0, X31, 0x3C0
	0x03E1A4AC STP V0, V1, [X31 + 0x3C0]
	0x03E1A4B0 STR V2, [X31 + 0x3E]
	0x03E1A4B4 BL 0x2724268
	0x03E1A4B8 LDP V0, V1, [X31 + 0x180]
	0x03E1A4BC LDR V2, [X31 + 0x1A]
	0x03E1A4C0 LDR X8, [X22]
	0x03E1A4C4 LDR X2, [X23]
	0x03E1A4C8 STP V0, V1, [X31 + 0x3C0]
	0x03E1A4CC STR V2, [X31 + 0x3E]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5CF000
	005 Move W8, [X20+994]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x303000
	012 Move X0, [X0+3736]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+994], W8
	016 Compare X19, 0
	017 JumpIfEqual {37}
	018 Move X20, 0x303000
	019 Move X20, [X20+3736]
	020 Move X0, X19
	021 Move X1, X31
	022 Call Event.get_rawType, X0
	023 Move X8, [X20]
	024 Move W20, W0
	025 Move W9, [X8+224]
	026 Compare W9, 0
	027 JumpIfNotEqual {30}
	028 Move X0, X8
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move W1, W20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Call UIElementsUtility.CreateEvent, X0, X1
	036 Return X0
	037 Call 0x1C17F20

Method: UnityEngine.UIElements.EventBase CreateEvent(UnityEngine.Event systemEvent, UnityEngine.EventType eventType)

Disassembly:
	0x03E15CB8 RET
	0x03E15CBC STR D8, [X31 - 0x40]!
	0x03E15CC0 STR X30, [X31 + 0x8]
	0x03E15CC4 STP X24, X23, [X31 + 0x10]
	0x03E15CC8 STP X22, X21, [X31 + 0x20]
	0x03E15CCC STP X20, X19, [X31 + 0x30]
	0x03E15CD0 ADRP X20, 0x5D3000
	0x03E15CD4 ADRP X22, 0x306000
	0x03E15CD8 LDRB W8, [X20 + 0x3B2]
	0x03E15CDC LDR X22, [X22 + 0x930]
	0x03E15CE0 MOV V8.16B, V0.16B
	0x03E15CE4 MOV W19, W0
	0x03E15CE8 TBNZ X8, 0x0, 0x3E15D24
	0x03E15CEC ADRP X0, 0x306000
	0x03E15CF0 LDR X0, [X0 + 0x918]
	0x03E15CF4 BL 0x1C16CF4
	0x03E15CF8 ADRP X0, 0x306000
	0x03E15CFC LDR X0, [X0 + 0x920]
	0x03E15D00 BL 0x1C16CF4
	0x03E15D04 ADRP X0, 0x306000
	0x03E15D08 LDR X0, [X0 + 0x928]
	0x03E15D0C BL 0x1C16CF4
	0x03E15D10 ADRP X0, 0x306000
	0x03E15D14 LDR X0, [X0 + 0x930]
	0x03E15D18 BL 0x1C16CF4
	0x03E15D1C MOVZ W8, 0x1
	0x03E15D20 STRB W8, [X20 + 0x3B2]
	0x03E15D24 LDR X0, [X22]
	0x03E15D28 LDR W8, [X0 + 0xE0]
	0x03E15D2C CBNZ W8, 0x3E15D38
	0x03E15D30 BL 0x1C16DFC
	0x03E15D34 LDR X0, [X22]
	0x03E15D38 LDR X8, [X0 + 0xB8]
	0x03E15D3C LDR W8, [X8 + 0x30]
	0x03E15D40 TBNZ X8, 0x1F, 0x3E15E50
	0x03E15D44 LDR W8, [X0 + 0xE0]
	0x03E15D48 CBNZ W8, 0x3E15D50
	0x03E15D4C BL 0x1C16DFC
	0x03E15D50 ADRP X23, 0x306000
	0x03E15D54 ADRP X24, 0x306000
	0x03E15D58 LDR X23, [X23 + 0x928]
	0x03E15D5C LDR X24, [X24 + 0x918]
	0x03E15D60 BL 0x3E15A6C
	0x03E15D64 LDR X8, [X22]
	0x03E15D68 MOV X20, X0
	0x03E15D6C LDR W9, [X8 + 0xE0]
	0x03E15D70 CBNZ W9, 0x3E15D80
	0x03E15D74 MOV X0, X8
	0x03E15D78 BL 0x1C16DFC
	0x03E15D7C LDR X8, [X22]
	0x03E15D80 CBZ X20, 0x3E15E68
	0x03E15D84 LDR X9, [X8 + 0xB8]
	0x03E15D88 LDR W1, [X9 + 0x30]
	0x03E15D8C LDR W9, [X20 + 0x18]
	0x03E15D90 CMP W1, W9
	0x03E15D94 B.GE 0x3E15E50
	0x03E15D98 LDR W9, [X8 + 0xE0]
	0x03E15D9C CBNZ W9, 0x3E15DB4
	0x03E15DA0 MOV X0, X8
	0x03E15DA4 BL 0x1C16DFC
	0x03E15DA8 LDR X8, [X22]
	0x03E15DAC LDR X8, [X8 + 0xB8]
	0x03E15DB0 LDR W1, [X8 + 0x30]
	0x03E15DB4 LDR X2, [X23]
	0x03E15DB8 MOV X0, X20
	0x03E15DBC BL 0x301BCCC
	0x03E15DC0 CBZ X0, 0x3E15E24
	0x03E15DC4 LDR X9, [X0]
	0x03E15DC8 LDR X8, [X24]
	0x03E15DCC MOV X21, X0
	0x03E15DD0 LDRB W11, [X9 + 0x130]
	0x03E15DD4 LDRB W10, [X8 + 0x130]
	0x03E15DD8 CMP W11, W10
	0x03E15DDC B.CC 0x3E15E24
	0x03E15DE0 LDR X9, [X9 + 0xC8]
	0x03E15DE4 ADD X9, X9, X10, 0x3, LSL
	0x03E15DE8 LDUR X9, [X9 - 0x8]
	0x03E15DEC CMP X9, X8
	0x03E15DF0 B.NE 0x3E15E24
	0x03E15DF4 LDR V0, [X21 + 0x16C]
	0x03E15DF8 FCMP S0, S8
	0x03E15DFC B.GE 0x3E15E50
	0x03E15E00 LDR W8, [X21 + 0x1D8]
	0x03E15E04 CMP W8, W19
	0x03E15E08 B.NE 0x3E15E24
	0x03E15E0C LDR X0, [X22]
	0x03E15E10 LDR W8, [X0 + 0xE0]
	0x03E15E14 CBNZ W8, 0x3E15E1C
	0x03E15E18 BL 0x1C16DFC
	0x03E15E1C MOV X0, X21
	0x03E15E20 BL 0x3E15AF4
	0x03E15E24 LDR X8, [X22]
	0x03E15E28 LDR W9, [X8 + 0xE0]
	0x03E15E2C CBNZ W9, 0x3E15E3C
	0x03E15E30 MOV X0, X8
	0x03E15E34 BL 0x1C16DFC
	0x03E15E38 LDR X8, [X22]
	0x03E15E3C LDR X9, [X8 + 0xB8]
	0x03E15E40 LDR W10, [X9 + 0x30]
	0x03E15E44 ADD W10, W10, 0x1
	0x03E15E48 STR W10, [X9 + 0x30]
	0x03E15E4C B 0x3E15D6C
	0x03E15E50 LDP X20, X19, [X31 + 0x30]
	0x03E15E54 LDP X22, X21, [X31 + 0x20]
	0x03E15E58 LDP X24, X23, [X31 + 0x10]
	0x03E15E5C LDR X30, [X31 + 0x8]
	0x03E15E60 LDR V8, [X31], #0x40
	0x03E15E64 RET
	0x03E15E68 BL 0x1C16F20
	0x03E15E6C STP X30, X21, [X31 - 0x20]!
	0x03E15E70 STP X20, X19, [X31 + 0x10]
	0x03E15E74 ADRP X21, 0x5D3000
	0x03E15E78 ADRP X20, 0x306000
	0x03E15E7C LDRB W8, [X21 + 0x3B3]
	0x03E15E80 LDR X20, [X20 + 0x930]
	0x03E15E84 MOV W19, W0
	0x03E15E88 TBNZ X8, 0x0, 0x3E15EA0
	0x03E15E8C ADRP X0, 0x306000
	0x03E15E90 LDR X0, [X0 + 0x930]
	0x03E15E94 BL 0x1C16CF4
	0x03E15E98 MOVZ W8, 0x1
	0x03E15E9C STRB W8, [X21 + 0x3B3]
	0x03E15EA0 LDR X0, [X20]
	0x03E15EA4 LDR W8, [X0 + 0xE0]
	0x03E15EA8 CBNZ W8, 0x3E15EB0
	0x03E15EAC BL 0x1C16DFC
	0x03E15EB0 MOVN W8, 0x80800000
	0x03E15EB4 FMOV S0, W8
	0x03E15EB8 MOV W0, W19
	0x03E15EBC BL 0x3E15CBC
	0x03E15EC0 LDR X8, [X20]
	0x03E15EC4 LDP X20, X19, [X31 + 0x10]
	0x03E15EC8 MOVN W9, 0x0
	0x03E15ECC LDR X8, [X8 + 0xB8]
	0x03E15ED0 STR W9, [X8 + 0x30]
	0x03E15ED4 LDP X30, X21, [X31], #0x20
	0x03E15ED8 RET
	0x03E15EDC STR X30, [X31 - 0x20]!
	0x03E15EE0 STP X20, X19, [X31 + 0x10]
	0x03E15EE4 ADRP X20, 0x5D3000
	0x03E15EE8 ADRP X19, 0x306000
	0x03E15EEC LDRB W8, [X20 + 0x3B4]
	0x03E15EF0 LDR X19, [X19 + 0x930]
	0x03E15EF4 TBNZ X8, 0x0, 0x3E15F0C
	0x03E15EF8 ADRP X0, 0x306000
	0x03E15EFC LDR X0, [X0 + 0x930]
	0x03E15F00 BL 0x1C16CF4
	0x03E15F04 MOVZ W8, 0x1
	0x03E15F08 STRB W8, [X20 + 0x3B4]
	0x03E15F0C LDR X0, [X19]
	0x03E15F10 LDR W8, [X0 + 0xE0]
	0x03E15F14 CBNZ W8, 0x3E15F20
	0x03E15F18 BL 0x1C16DFC
	0x03E15F1C LDR X0, [X19]
	0x03E15F20 LDR X8, [X0 + 0xB8]
	0x03E15F24 LDP X20, X19, [X31 + 0x10]
	0x03E15F28 LDR X0, [X8 + 0x38]
	0x03E15F2C LDR X30, [X31], #0x20
	0x03E15F30 RET
	0x03E15F34 STP X30, X21, [X31 - 0x20]!
	0x03E15F38 STP X20, X19, [X31 + 0x10]
	0x03E15F3C ADRP X21, 0x5D3000
	0x03E15F40 ADRP X20, 0x306000
	0x03E15F44 LDRB W8, [X21 + 0x3B5]
	0x03E15F48 LDR X20, [X20 + 0x930]
	0x03E15F4C MOV X19, X0
	0x03E15F50 TBNZ X8, 0x0, 0x3E15F68
	0x03E15F54 ADRP X0, 0x306000
	0x03E15F58 LDR X0, [X0 + 0x930]
	0x03E15F5C BL 0x1C16CF4
	0x03E15F60 MOVZ W8, 0x1
	0x03E15F64 STRB W8, [X21 + 0x3B5]
	0x03E15F68 LDR X0, [X20]
	0x03E15F6C LDR W8, [X0 + 0xE0]
	0x03E15F70 CBNZ W8, 0x3E15F7C
	0x03E15F74 BL 0x1C16DFC
	0x03E15F78 LDR X0, [X20]
	0x03E15F7C LDR X8, [X0 + 0xB8]
	0x03E15F80 STR X19, [X8 + 0x38]
	0x03E15F84 LDP X20, X19, [X31 + 0x10]
	0x03E15F88 LDP X30, X21, [X31], #0x20
	0x03E15F8C RET
	0x03E15F90 STR X30, [X31 - 0x20]!
	0x03E15F94 STP X20, X19, [X31 + 0x10]
	0x03E15F98 ADRP X20, 0x5D3000
	0x03E15F9C ADRP X19, 0x306000
	0x03E15FA0 LDRB W8, [X20 + 0x3B6]
	0x03E15FA4 LDR X19, [X19 + 0x930]
	0x03E15FA8 TBNZ X8, 0x0, 0x3E15FCC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5D4000
	006 Move W8, [X21+995]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {57}
	013 Move X0, 0x356000
	014 Move X0, [X0+1544]
	015 Call 0x1C17CF4
	016 Move X0, 0x356000
	017 Move X0, [X0+1552]
	018 Call 0x1C17CF4
	019 Move X0, 0x354000
	020 Move X0, [X0+40]
	021 Call 0x1C17CF4
	022 Move X0, 0x356000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0x356000
	026 Move X0, [X0+1568]
	027 Call 0x1C17CF4
	028 Move X0, 0x356000
	029 Move X0, [X0+1576]
	030 Call 0x1C17CF4
	031 Move X0, 0x356000
	032 Move X0, [X0+1584]
	033 Call 0x1C17CF4
	034 Move X0, 0x354000
	035 Move X0, [X0+864]
	036 Call 0x1C17CF4
	037 Move X0, 0x307000
	038 Move X0, [X0+2392]
	039 Call 0x1C17CF4
	040 Move X0, 0x356000
	041 Move X0, [X0+1592]
	042 Call 0x1C17CF4
	043 Move X0, 0x356000
	044 Move X0, [X0+1600]
	045 Call 0x1C17CF4
	046 Move X0, 0x356000
	047 Move X0, [X0+1608]
	048 Call 0x1C17CF4
	049 Move X0, 0x308000
	050 Move X0, [X0+3664]
	051 Call 0x1C17CF4
	052 Move X0, 0x353000
	053 Move X0, [X0+2760]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+995], W8
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X9, -52936704
	059 Move W8, W20
	060 Add X9, X9, 1498
	061 NotImplemented "Instruction ADR not yet implemented."
	062 Move W11, [X9]
	063 Add X10, X10, X11
	064 CallNoReturn X10
	065 Move X20, 0x308000
	066 Move X20, [X20+3664]
	067 Move X0, [X20]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X20]
	073 Compare X19, 0
	074 JumpIfEqual {224}
	075 Move X8, [X0+184]
	076 Move X0, X19
	077 Move X1, X31
	078 Move W20, [X8+8]
	079 Call Event.get_button, X0
	080 Move X8, 0x307000
	081 Move X8, [X8+2392]
	082 Move W21, W0
	083 Move X8, [X8]
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move W0, W20
	090 Move W1, W21
	091 Move X2, X31
	092 Call PointerDeviceState.HasAdditionalPressedButtons, X0, X1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {131}
	097 Move X8, 0x356000
	098 Move X8, [X8+1600]
	099 Move X20, 0x308000
	100 Move X20, [X20+3664]
	101 Move X0, [X20]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {107}
	105 Call 0x1C17DFC
	106 Move X0, [X20]
	107 Compare X19, 0
	108 JumpIfEqual {224}
	109 Move X8, [X0+184]
	110 Move X0, X19
	111 Move X1, X31
	112 Move W20, [X8+8]
	113 Call Event.get_button, X0
	114 Move X8, 0x307000
	115 Move X8, [X8+2392]
	116 Move W21, W0
	117 Move X8, [X8]
	118 Move W9, [X8+224]
	119 Compare W9, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X8
	122 Call 0x1C17DFC
	123 Move W0, W20
	124 Move W1, W21
	125 Move X2, X31
	126 Call PointerDeviceState.HasAdditionalPressedButtons, X0, X1
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {222}
	131 Move X8, 0x356000
	132 Move X8, [X8+1608]
	133 Move X1, [X8]
	134 Move X0, X19
	135 Move X20, [X31+16]
	136 Move X19, [X31+24]
	137 Move X30, [X31+32]
	138 Move X21, [X31+40]
	139 Call 0x24A47C0, X0
	140 Return X0
	141 Move X8, 0x356000
	142 Move X8, [X8+1544]
	143 Move X8, 0x356000
	144 Move X8, [X8+1552]
	145 Move X1, [X8]
	146 Move X0, X19
	147 Move X20, [X31+16]
	148 Move X19, [X31+24]
	149 Move X30, [X31+32]
	150 Move X21, [X31+40]
	151 Call 0x29010E4, X0
	152 Return X0
	153 Move X8, 0x356000
	154 Move X8, [X8+1584]
	155 Move X8, 0x356000
	156 Move X8, [X8+1576]
	157 Move X1, [X8]
	158 Move X0, X19
	159 Move X20, [X31+16]
	160 Move X19, [X31+24]
	161 Move X30, [X31+32]
	162 Move X21, [X31+40]
	163 Call 0x31A17A0, X0
	164 Return X0
	165 Move X8, 0x356000
	166 Move X8, [X8+1560]
	167 Move X8, 0x356000
	168 Move X8, [X8+1568]
	169 Move X1, [X8]
	170 Move X0, X19
	171 Move X20, [X31+16]
	172 Move X19, [X31+24]
	173 Move X30, [X31+32]
	174 Move X21, [X31+40]
	175 Call 0x2EE7D50, X0
	176 Return X0
	177 Move X8, 0x353000
	178 Move X8, [X8+2760]
	179 Move X0, [X8]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move X0, X19
	185 Move X20, [X31+16]
	186 Move X19, [X31+24]
	187 Move X1, X31
	188 Move X30, [X31+32]
	189 Move X21, [X31+40]
	190 Call WheelEvent.GetPooled, X0
	191 Return X0
	192 Move X8, 0x354000
	193 Move X8, [X8+40]
	194 Move X0, [X8]
	195 Move W8, [X0+224]
	196 Compare W8, 0
	197 JumpIfNotEqual {199}
	198 Call 0x1C17DFC
	199 Move X0, X19
	200 Move X20, [X31+16]
	201 Move X19, [X31+24]
	202 Move X1, X31
	203 Move X30, [X31+32]
	204 Move X21, [X31+40]
	205 Call IMGUIEvent.GetPooled, X0
	206 Return X0
	207 Move X8, 0x354000
	208 Move X8, [X8+864]
	209 Move X0, [X8]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 Move X0, X19
	215 Move X20, [X31+16]
	216 Move X19, [X31+24]
	217 Move X1, X31
	218 Move X30, [X31+32]
	219 Move X21, [X31+40]
	220 Call MouseLeaveWindowEvent.GetPooled, X0
	221 Return X0
	222 Move X8, 0x356000
	223 Move X8, [X8+1592]
	224 Call 0x1C17F20

Method: System.Boolean DoDispatch(UnityEngine.UIElements.BaseVisualElementPanel panel)

Disassembly:
	0x03E19884 MOV X19, X0
	0x03E19888 BL 0x2601D04
	0x03E1988C LDR X8, [X20]
	0x03E19890 LDR X8, [X8 + 0xB8]
	0x03E19894 STR X19, [X8]
	0x03E19898 LDR X0, [X29]
	0x03E1989C BL 0x1C16F10
	0x03E198A0 LDR X1, [X28]
	0x03E198A4 MOV X19, X0
	0x03E198A8 BL 0x2A12DD4
	0x03E198AC LDR X8, [X20]
	0x03E198B0 LDR X8, [X8 + 0xB8]
	0x03E198B4 STR X19, [X8 + 0x8]
	0x03E198B8 LDR X0, [X27]
	0x03E198BC BL 0x1C16F10
	0x03E198C0 MOV X1, X31
	0x03E198C4 MOV X19, X0
	0x03E198C8 BL 0x3C63690
	0x03E198CC LDR X0, [X20]
	0x03E198D0 FMOV V0.4S, 0x0
	0x03E198D4 MOVZ W9, 0x41900000
	0x03E198D8 LDR X8, [X0 + 0xB8]
	0x03E198DC STR X19, [X8 + 0x10]
	0x03E198E0 STUR V0, [X8 + 0x18]
	0x03E198E4 LDR X8, [X0 + 0xB8]
	0x03E198E8 STR W9, [X8 + 0x28]
	0x03E198EC BL 0x1C16F10
	0x03E198F0 MOV X19, X0
	0x03E198F4 BL 0x3E18574
	0x03E198F8 LDR X8, [X20]
	0x03E198FC LDR X8, [X8 + 0xB8]
	0x03E19900 STR X19, [X8 + 0x30]
	0x03E19904 LDR X0, [X26]
	0x03E19908 BL 0x1C16F10
	0x03E1990C LDR X1, [X25]
	0x03E19910 MOV X19, X0
	0x03E19914 BL 0x301B7C4
	0x03E19918 LDR X8, [X20]
	0x03E1991C LDR X0, [X24]
	0x03E19920 MOVZ W1, 0x1
	0x03E19924 MOV W2, W31
	0x03E19928 LDR X8, [X8 + 0xB8]
	0x03E1992C MOV W3, W31
	0x03E19930 MOV X4, X31
	0x03E19934 STP X19, X0, [X8 + 0x38]
	0x03E19938 LDR X9, [X23]
	0x03E1993C STR X9, [X8 + 0x48]
	0x03E19940 BL 0x3BFE7FC
	0x03E19944 LDR X8, [X20]
	0x03E19948 MOVZ W1, 0x1
	0x03E1994C MOV W2, W31
	0x03E19950 MOV W3, W31
	0x03E19954 LDR X9, [X8 + 0xB8]
	0x03E19958 MOV X4, X31
	0x03E1995C LDR X8, [X9 + 0x48]
	0x03E19960 STR X0, [X9 + 0x50]
	0x03E19964 MOV X0, X8
	0x03E19968 BL 0x3BFE7FC
	0x03E1996C LDR X8, [X20]
	0x03E19970 MOVZ W1, 0x5
	0x03E19974 LDR X8, [X8 + 0xB8]
	0x03E19978 STR X0, [X8 + 0x58]
	0x03E1997C ADRP X8, 0x2E3000
	0x03E19980 LDR X8, [X8 + 0x8D8]
	0x03E19984 LDR X0, [X8]
	0x03E19988 BL 0x1C16D6C
	0x03E1998C ADRP X8, 0x351000
	0x03E19990 LDR X8, [X8 + 0x7E8]
	0x03E19994 MOV X2, X31
	0x03E19998 MOV X19, X0
	0x03E1999C LDR X1, [X8]
	0x03E199A0 BL 0x32C5BD8
	0x03E199A4 LDR X8, [X20]
	0x03E199A8 LDP X22, X21, [X31 + 0x40]
	0x03E199AC LDP X24, X23, [X31 + 0x30]
	0x03E199B0 LDP X26, X25, [X31 + 0x20]
	0x03E199B4 LDR X8, [X8 + 0xB8]
	0x03E199B8 LDP X28, X27, [X31 + 0x10]
	0x03E199BC STR X19, [X8 + 0x60]
	0x03E199C0 LDP X20, X19, [X31 + 0x50]
	0x03E199C4 LDP X29, X30, [X31], #0x60
	0x03E199C8 RET
	0x03E199CC STR X30, [X31 - 0x10]!
	0x03E199D0 LDR X0, [X0 + 0x8]
	0x03E199D4 CBZ X0, 0x3E199E8
	0x03E199D8 LDR X8, [X0]
	0x03E199DC LDP X2, X1, [X8 + 0x168]
	0x03E199E0 LDR X30, [X31], #0x10
	0x03E199E4 BR X2
	0x03E199E8 BL 0x1C16F20
	0x03E199EC MOV X1, X31
	0x03E199F0 B 0x3D440BC
	0x03E199F4 MOV X2, X31
	0x03E199F8 B 0x3D43FDC
	0x03E199FC MOV W0, W31
	0x03E19A00 RET
	0x03E19A04 RET
	0x03E19A08 SUB X31, X31, 0x70
	0x03E19A0C STP X29, X30, [X31 + 0x10]
	0x03E19A10 STP X28, X27, [X31 + 0x20]
	0x03E19A14 STP X26, X25, [X31 + 0x30]
	0x03E19A18 STP X24, X23, [X31 + 0x40]
	0x03E19A1C STP X22, X21, [X31 + 0x50]
	0x03E19A20 STP X20, X19, [X31 + 0x60]
	0x03E19A24 ADRP X19, 0x5CF000
	0x03E19A28 LDRB W8, [X19 + 0x3EA]
	0x03E19A2C MOV X21, X1
	0x03E19A30 MOV X20, X0
	0x03E19A34 STR W2, [X31 + 0xC]
	0x03E19A38 TBNZ X8, 0x0, 0x3E19A8C
	0x03E19A3C ADRP X0, 0x34B000
	0x03E19A40 LDR X0, [X0 + 0x2C0]
	0x03E19A44 BL 0x1C16CF4
	0x03E19A48 ADRP X0, 0x351000
	0x03E19A4C LDR X0, [X0 + 0x7F0]
	0x03E19A50 BL 0x1C16CF4
	0x03E19A54 ADRP X0, 0x304000
	0x03E19A58 LDR X0, [X0 + 0xA40]
	0x03E19A5C BL 0x1C16CF4
	0x03E19A60 ADRP X0, 0x303000
	0x03E19A64 LDR X0, [X0 + 0x828]
	0x03E19A68 BL 0x1C16CF4
	0x03E19A6C ADRP X0, 0x351000
	0x03E19A70 LDR X0, [X0 + 0x7F8]
	0x03E19A74 BL 0x1C16CF4
	0x03E19A78 ADRP X0, 0x351000
	0x03E19A7C LDR X0, [X0 + 0x800]
	0x03E19A80 BL 0x1C16CF4
	0x03E19A84 MOVZ W8, 0x1
	0x03E19A88 STRB W8, [X19 + 0x3EA]
	0x03E19A8C LDR X0, [X20 + 0x10]
	0x03E19A90 CBZ X0, 0x3E19B84
	0x03E19A94 LDR W22, [X0 + 0x18]
	0x03E19A98 CMP W22, 0x1
	0x03E19A9C B.LT 0x3E19B88
	0x03E19AA0 ADRP X28, 0x303000
	0x03E19AA4 ADRP X29, 0x351000
	0x03E19AA8 ADRP X19, 0x351000
	0x03E19AAC LDR X28, [X28 + 0x828]
	0x03E19AB0 LDR X29, [X29 + 0x800]
	0x03E19AB4 LDR X19, [X19 + 0x7F8]
	0x03E19AB8 MOV W23, W31
	0x03E19ABC LDR X2, [X28]
	0x03E19AC0 MOV W1, W23
	0x03E19AC4 BL 0x304F2B0
	0x03E19AC8 MOV X24, X0
	0x03E19ACC LDR X0, [X29]
	0x03E19AD0 MOV X25, X1
	0x03E19AD4 LDR W8, [X0 + 0xE0]
	0x03E19AD8 CBNZ W8, 0x3E19AE4
	0x03E19ADC BL 0x1C16DFC
	0x03E19AE0 LDR X0, [X29]
	0x03E19AE4 LDR X8, [X0 + 0xB8]
	0x03E19AE8 LDR X26, [X8 + 0x8]
	0x03E19AEC CBNZ X26, 0x3E19B38
	0x03E19AF0 LDR W8, [X0 + 0xE0]
	0x03E19AF4 CBNZ W8, 0x3E19B00
	0x03E19AF8 BL 0x1C16DFC
	0x03E19AFC LDR X0, [X29]
	0x03E19B00 LDR X8, [X0 + 0xB8]
	0x03E19B04 LDR X27, [X8]
	0x03E19B08 ADRP X8, 0x34B000
	0x03E19B0C LDR X8, [X8 + 0x2C0]
	0x03E19B10 LDR X0, [X8]
	0x03E19B14 BL 0x1C16F10
	0x03E19B18 LDR X2, [X19]
	0x03E19B1C MOV X1, X27
	0x03E19B20 MOV X3, X31
	0x03E19B24 MOV X26, X0
	0x03E19B28 BL 0x2A76ACC
	0x03E19B2C LDR X8, [X29]
	0x03E19B30 LDR X8, [X8 + 0xB8]
	0x03E19B34 STR X26, [X8 + 0x8]
	0x03E19B38 MOV X0, X21
	0x03E19B3C MOV X1, X25
	0x03E19B40 MOV X2, X26
	0x03E19B44 MOV X3, X31
	0x03E19B48 BL 0x3D52C48
	0x03E19B4C TBZ X0, 0x0, 0x3E19B70
	0x03E19B50 LDR X8, [X20]
	0x03E19B54 MOV X0, X20
	0x03E19B58 MOV X1, X24
	0x03E19B5C MOV X2, X25
	0x03E19B60 LDP X9, X4, [X8 + 0x198]
	0x03E19B64 MOV X3, X21
	0x03E19B68 BLR X9
	0x03E19B6C TBNZ X0, 0x0, 0x3E19BE0
	0x03E19B70 ADD W23, W23, 0x1
	0x03E19B74 CMP W22, W23
	0x03E19B78 B.EQ 0x3E19B88
	0x03E19B7C LDR X0, [X20 + 0x10]
	0x03E19B80 CBNZ X0, 0x3E19ABC
	0x03E19B84 BL 0x1C16F20
	0x03E19B88 LDR W2, [X31 + 0xC]
	0x03E19B8C MOV X0, X20
	0x03E19B90 MOV X1, X21
	0x03E19B94 MOV X3, X31
	0x03E19B98 BL 0x3D43FEC
	0x03E19B9C LDR X0, [X20 + 0x10]
	0x03E19BA0 CBZ X0, 0x3E19B84
	0x03E19BA4 LDR W8, [X0 + 0x18]
	0x03E19BA8 SUBS W2, W8, W22
	0x03E19BAC B.LE 0x3E19BE0
	0x03E19BB0 ADRP X8, 0x351000
	0x03E19BB4 LDR X8, [X8 + 0x7F0]
	0x03E19BB8 MOV W1, W22
	0x03E19BBC LDP X20, X19, [X31 + 0x60]
	0x03E19BC0 LDP X22, X21, [X31 + 0x50]
	0x03E19BC4 LDR X3, [X8]
	0x03E19BC8 LDP X24, X23, [X31 + 0x40]
	0x03E19BCC LDP X26, X25, [X31 + 0x30]
	0x03E19BD0 LDP X28, X27, [X31 + 0x20]
	0x03E19BD4 LDP X29, X30, [X31 + 0x10]
	0x03E19BD8 ADD X31, X31, 0x70
	0x03E19BDC B 0x3051190
	0x03E19BE0 LDP X20, X19, [X31 + 0x60]
	0x03E19BE4 LDP X22, X21, [X31 + 0x50]
	0x03E19BE8 LDP X24, X23, [X31 + 0x40]
	0x03E19BEC LDP X26, X25, [X31 + 0x30]
	0x03E19BF0 LDP X28, X27, [X31 + 0x20]
	0x03E19BF4 LDP X29, X30, [X31 + 0x10]
	0x03E19BF8 ADD X31, X31, 0x70
	0x03E19BFC RET
	0x03E19C00 LDR X8, [X0]
	0x03E19C04 STR X2, [X0 + 0x10]
	0x03E19C08 LDP X3, X2, [X8 + 0x178]
	0x03E19C0C BR X3
	0x03E19C10 STR X30, [X31 - 0x20]!
	0x03E19C14 STP X20, X19, [X31 + 0x10]
	0x03E19C18 ADRP X19, 0x5CF000
	0x03E19C1C ADRP X20, 0x351000
	0x03E19C20 LDRB W8, [X19 + 0x3EB]
	0x03E19C24 LDR X20, [X20 + 0x800]
	0x03E19C28 TBNZ X8, 0x0, 0x3E19C40
	0x03E19C2C ADRP X0, 0x351000
	0x03E19C30 LDR X0, [X0 + 0x800]
	0x03E19C34 BL 0x1C16CF4
	0x03E19C38 MOVZ W8, 0x1
	0x03E19C3C STRB W8, [X19 + 0x3EB]
	0x03E19C40 LDR X0, [X20]
	0x03E19C44 BL 0x1C16F10
	0x03E19C48 MOV X1, X31
	0x03E19C4C MOV X19, X0
	0x03E19C50 BL 0x33BDD8C
	0x03E19C54 LDR X8, [X20]
	0x03E19C58 LDR X8, [X8 + 0xB8]
	0x03E19C5C STR X19, [X8]
	0x03E19C60 LDP X20, X19, [X31 + 0x10]
	0x03E19C64 LDR X30, [X31], #0x20
	0x03E19C68 RET
	0x03E19C6C MOV X1, X31
	0x03E19C70 B 0x33BDD8C
	0x03E19C74 RET
	0x03E19C78 LDR X0, [X0 + 0x18]
	0x03E19C7C RET
	0x03E19C80 STR X1, [X0 + 0x18]
	0x03E19C84 RET
	0x03E19C88 STP X30, X19, [X31 - 0x10]!
	0x03E19C8C LDR X8, [X0]
	0x03E19C90 STP X2, X31, [X0 + 0x10]
	0x03E19C94 MOV X19, X0
	0x03E19C98 LDP X9, X2, [X8 + 0x178]
	0x03E19C9C BLR X9
	0x03E19CA0 STR X31, [X19 + 0x10]
	0x03E19CA4 LDP X30, X19, [X31], #0x10
	0x03E19CA8 RET
	0x03E19CAC LDR X8, [X0 + 0x10]
	0x03E19CB0 CMP X8, 0x0
	0x03E19CB4 CSET W0, NE
	0x03E19CB8 RET
	0x03E19CBC MOV X1, X31
	0x03E19CC0 B 0x3D440BC
	0x03E19CC4 LDR X8, [X0 + 0x18]
	0x03E19CC8 CBNZ X8, 0x3E19CD0
	0x03E19CCC STR X3, [X0 + 0x18]
	0x03E19CD0 MOVZ W0, 0x1
	0x03E19CD4 RET
	0x03E19CD8 STR X30, [X31 - 0x20]!
	0x03E19CDC STP X20, X19, [X31 + 0x10]
	0x03E19CE0 ADRP X19, 0x5CF000
	0x03E19CE4 ADRP X20, 0x304000
	0x03E19CE8 LDRB W8, [X19 + 0x3EC]
	0x03E19CEC LDR X20, [X20 + 0xA68]
	0x03E19CF0 TBNZ X8, 0x0, 0x3E19D08
	0x03E19CF4 ADRP X0, 0x304000
	0x03E19CF8 LDR X0, [X0 + 0xA68]
	0x03E19CFC BL 0x1C16CF4
	0x03E19D00 MOVZ W8, 0x1
	0x03E19D04 STRB W8, [X19 + 0x3EC]
	0x03E19D08 LDR X0, [X20]
	0x03E19D0C BL 0x1C16F10
	0x03E19D10 MOV X1, X31
	0x03E19D14 MOV X19, X0
	0x03E19D18 BL 0x3D440BC
	0x03E19D1C MOV X0, X19
	0x03E19D20 LDP X20, X19, [X31 + 0x10]
	0x03E19D24 LDR X30, [X31], #0x20
	0x03E19D28 RET
	0x03E19D2C MOV X1, X31
	0x03E19D30 B 0x3D440BC
	0x03E19D34 STR X30, [X31 - 0x20]!
	0x03E19D38 STP X20, X19, [X31 + 0x10]
	0x03E19D3C ADRP X19, 0x5CF000
	0x03E19D40 ADRP X20, 0x304000
	0x03E19D44 LDRB W8, [X19 + 0x3ED]
	0x03E19D48 LDR X20, [X20 + 0xA68]
	0x03E19D4C TBNZ X8, 0x0, 0x3E19D64
	0x03E19D50 ADRP X0, 0x304000
	0x03E19D54 LDR X0, [X0 + 0xA68]
	0x03E19D58 BL 0x1C16CF4
	0x03E19D5C MOVZ W8, 0x1
	0x03E19D60 STRB W8, [X19 + 0x3ED]
	0x03E19D64 LDR X0, [X20]
	0x03E19D68 BL 0x1C16F10
	0x03E19D6C MOV X1, X31
	0x03E19D70 MOV X19, X0
	0x03E19D74 BL 0x3D440BC
	0x03E19D78 LDR X8, [X20]
	0x03E19D7C LDR X8, [X8 + 0xB8]
	0x03E19D80 STR X19, [X8]
	0x03E19D84 LDP X20, X19, [X31 + 0x10]
	0x03E19D88 LDR X30, [X31], #0x20
	0x03E19D8C RET
	0x03E19D90 SUB X31, X31, 0x130
	0x03E19D94 STR X29, [X31 + 0xF0]
	0x03E19D98 STP X30, X23, [X31 + 0x100]
	0x03E19D9C STP X22, X21, [X31 + 0x110]
	0x03E19DA0 STP X20, X19, [X31 + 0x120]
	0x03E19DA4 ADRP X22, 0x5CF000
	0x03E19DA8 LDRB W8, [X22 + 0x3EE]
	0x03E19DAC MOV X19, X2
	0x03E19DB0 MOV X20, X1
	0x03E19DB4 MOV X21, X0
	0x03E19DB8 TBNZ X8, 0x0, 0x3E19E00
	0x03E19DBC ADRP X0, 0x303000
	0x03E19DC0 LDR X0, [X0 + 0x828]
	0x03E19DC4 BL 0x1C16CF4
	0x03E19DC8 ADRP X0, 0x303000
	0x03E19DCC LDR X0, [X0 + 0x830]
	0x03E19DD0 BL 0x1C16CF4
	0x03E19DD4 ADRP X0, 0x303000
	0x03E19DD8 LDR X0, [X0 + 0x838]
	0x03E19DDC BL 0x1C16CF4
	0x03E19DE0 ADRP X0, 0x303000
	0x03E19DE4 LDR X0, [X0 + 0x840]
	0x03E19DE8 BL 0x1C16CF4
	0x03E19DEC ADRP X0, 0x303000
	0x03E19DF0 LDR X0, [X0 + 0x848]
	0x03E19DF4 BL 0x1C16CF4
	0x03E19DF8 MOVZ W8, 0x1
	0x03E19DFC STRB W8, [X22 + 0x3EE]
	0x03E19E00 STP X31, X31, [X31 + 0xE0]
	0x03E19E04 STP X31, X31, [X31 + 0xD0]
	0x03E19E08 CBZ X21, 0x3E1A154
	0x03E19E0C ADRP X22, 0x303000
	0x03E19E10 LDR X22, [X22 + 0x830]
	0x03E19E14 ADRP X23, 0x303000
	0x03E19E18 LDR X0, [X22]
	0x03E19E1C LDR W8, [X0 + 0xE0]
	0x03E19E20 LDR X23, [X23 + 0x848]
	0x03E19E24 CBNZ W8, 0x3E19E2C
	0x03E19E28 BL 0x1C16DFC
	0x03E19E2C LDR X0, [X23]
	0x03E19E30 LDR W8, [X0 + 0xE0]
	0x03E19E34 CBNZ W8, 0x3E19E3C
	0x03E19E38 BL 0x1C16DFC
	0x03E19E3C LDR X8, [X22]
	0x03E19E40 LDR X0, [X8 + 0xB8]
	0x03E19E44 ADRP X8, 0x303000
	0x03E19E48 LDR X8, [X8 + 0x840]
	0x03E19E4C CBZ X20, 0x3E19F98
	0x03E19E50 CBZ X19, 0x3E1A04C
	0x03E19E54 LDR X2, [X8]
	0x03E19E58 ADD X0, X0, 0x30
	0x03E19E5C MOV X1, X21
	0x03E19E60 BL 0x272520C
	0x03E19E64 STP X0, X1, [X31 + 0xE0]
	0x03E19E68 CBZ X1, 0x3E1A14C
	0x03E19E6C ADRP X22, 0x303000
	0x03E19E70 LDR X22, [X22 + 0x828]
	0x03E19E74 MOV X0, X1
	0x03E19E78 MOV W1, W31
	0x03E19E7C LDR X2, [X22]
	0x03E19E80 BL 0x304F2B0
	0x03E19E84 CBZ X1, 0x3E1A14C
	0x03E19E88 MOV X0, X1
	0x03E19E8C MOV X1, X31
	0x03E19E90 BL 0x3E057F0
	0x03E19E94 CBZ X0, 0x3E1A14C
	0x03E19E98 LDR W8, [X0 + 0x18]
	0x03E19E9C CBZ W8, 0x3E1A150
	0x03E19EA0 LDR X0, [X0 + 0x20]
	0x03E19EA4 CBZ X0, 0x3E1A14C
	0x03E19EA8 MOV X1, X31
	0x03E19EAC BL 0x3E05D14
	0x03E19EB0 MOV X21, X0
	0x03E19EB4 ADD X8, X31, 0x90

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x5D0000
	009 Move W8, [X19+996]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x2DB000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x2DB000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move X0, 0x304000
	022 Move X0, [X0+3736]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+996], W8
	026 Compare X20, 0
	027 JumpIfEqual {311}
	028 Move X8, [X20]
	029 Move X19, 0x2DB000
	030 Move X21, 0x304000
	031 Move X0, X20
	032 Move X9, [X8+1016]
	033 Move X1, [X8+1024]
	034 Move X19, [X19+2600]
	035 Move X21, [X21+3736]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X8, [X19]
	038 Move W19, W0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 Move X1, X31
	047 Call Debug.Assert, X0
	048 Move X0, [X21]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X21]
	054 Move X8, [X0+184]
	055 Move X0, [X8+16]
	056 Compare X0, 0
	057 JumpIfEqual {311}
	058 Move X1, X31
	059 Call Event.get_type, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X0, X31
	062 Call Camera.get_current
	063 Move X19, X0
	064 Move X0, X31
	065 Call RenderTexture.get_active
	066 Move X22, X0
	067 Move X0, X31
	068 Move X1, X31
	069 Call Camera.SetupCurrent, X0
	070 Move X0, X31
	071 Move X1, X31
	072 Call RenderTexture.set_active, X0
	073 Move X0, [X21]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {79}
	077 Call 0x1C17DFC
	078 Move X0, [X21]
	079 Move X8, [X0+184]
	080 Move X1, X31
	081 Move X2, X31
	082 Move X23, [X8+80]
	083 Move X0, X23
	084 Call IntPtr.op_Inequality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {92}
	089 Move X0, X23
	090 Move X1, X31
	091 Call ProfilerUnsafeUtility.BeginSample, X0
	092 Move X0, [X21]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X21]
	098 Move X8, [X0+184]
	099 Move X9, [X20]
	100 Move X1, [X8+16]
	101 Move X8, [X9+696]
	102 Move X2, [X9+704]
	103 Move X0, X20
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X21, X31
	106 Move W24, 3
	107 Move X0, X23
	108 Move X1, X31
	109 Move X2, X31
	110 Call IntPtr.op_Inequality, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {118}
	115 Move X0, X23
	116 Move X1, X31
	117 Call ProfilerUnsafeUtility.EndSample, X0
	118 Compare X21, 0
	119 JumpIfNotEqual {312}
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Compare W24, 0
	122 JumpIfNotEqual {288}
	123 Move X8, [X20]
	124 Move X0, X20
	125 Move X9, [X8+600]
	126 Move X1, [X8+608]
	127 NotImplemented "Instruction BLR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X0, X19
	130 Move X1, X31
	131 NotImplemented "Instruction CSET not yet implemented."
	132 Call Camera.SetupCurrent, X0
	133 Move X0, X22
	134 Move X1, X31
	135 Call RenderTexture.set_active, X0
	136 Move X8, [X20]
	137 Move X0, X20
	138 Move X9, [X8+728]
	139 Move X1, [X8+736]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X0, [X21]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {147}
	145 Call 0x1C17DFC
	146 Move X0, [X21]
	147 Move X8, [X0+184]
	148 Move X0, [X8+16]
	149 Call UIElementsUtility.CreateEvent, X0
	150 Move X8, [X21]
	151 Move X19, X0
	152 Move W9, [X8+224]
	153 Compare W9, 0
	154 JumpIfNotEqual {158}
	155 Move X0, X8
	156 Call 0x1C17DFC
	157 Move X8, [X21]
	158 Move X8, [X8+184]
	159 Move X0, [X8+16]
	160 Compare X0, 0
	161 JumpIfEqual {316}
	162 Move X1, X31
	163 Call Event.get_type, X0
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, [X21]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {171}
	169 Call 0x1C17DFC
	170 Move X0, [X21]
	171 Move X8, [X0+184]
	172 Move X0, [X8+16]
	173 Compare X0, 0
	174 JumpIfEqual {320}
	175 Move X1, X31
	176 Call Event.get_type, X0
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, [X21]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {184}
	182 Call 0x1C17DFC
	183 Move X0, [X21]
	184 Move X8, [X0+184]
	185 Move X0, [X8+16]
	186 Compare X0, 0
	187 JumpIfEqual {322}
	188 Move X1, X31
	189 Call Event.get_type, X0
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move W22, 1
	192 Move X0, [X21]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {198}
	196 Call 0x1C17DFC
	197 Move X0, [X21]
	198 Move X8, [X0+184]
	199 Move X23, [X8+88]
	200 Move X0, X23
	201 Move X1, X31
	202 Move X2, X31
	203 Call IntPtr.op_Inequality, X0, X1
	204 Move TEMP, X0
	205 And TEMP, TEMP, 1
	206 Compare TEMP, 1
	207 JumpIfNotEqual {211}
	208 Move X0, X23
	209 Move X1, X31
	210 Call ProfilerUnsafeUtility.BeginSample, X0
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move W8, 1
	213 NotImplemented "Instruction CINC not yet implemented."
	214 Move X0, X20
	215 Move X1, X19
	216 Move X3, X31
	217 Call BaseVisualElementPanel.SendEvent, X0, X1, X2
	218 Move X21, X31
	219 Move W22, 9
	220 Move X0, X23
	221 Move X1, X31
	222 Move X2, X31
	223 Call IntPtr.op_Inequality, X0, X1
	224 Move TEMP, X0
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfNotEqual {231}
	228 Move X0, X23
	229 Move X1, X31
	230 Call ProfilerUnsafeUtility.EndSample, X0
	231 Compare X21, 0
	232 JumpIfNotEqual {317}
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Compare W22, 0
	235 JumpIfNotEqual {257}
	236 Compare X19, 0
	237 JumpIfEqual {319}
	238 Move X0, X19
	239 Move X1, X31
	240 Call EventBase.get_isPropagationStopped, X0
	241 Move TEMP, X0
	242 And TEMP, TEMP, 1
	243 Compare TEMP, 1
	244 JumpIfNotEqual {261}
	245 Move X8, [X20]
	246 Move X1, [X8+928]
	247 Move X9, [X8+920]
	248 Move X0, X20
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Compare X0, 0
	251 JumpIfEqual {321}
	252 Move W1, 2048
	253 Move X2, X31
	254 Call VisualElement.IncrementVersion, X0, X1
	255 Move X20, X31
	256 Move W21, 1
	257 Move X20, X31
	258 Move W21, W31
	259 Compare X19, 0
	260 JumpIfNotEqual {263}
	261 Move W21, W31
	262 Move X20, X31
	263 Move X10, 0x2DB000
	264 Move X8, [X19]
	265 Move X10, [X10+3584]
	266 NotImplemented "Instruction LDRH not yet implemented."
	267 Move X1, [X10]
	268 Compare X9, 0
	269 JumpIfEqual {276}
	270 Move X10, [X8+176]
	271 Add X10, X10, 8
	272 NotImplemented "Instruction LDUR not yet implemented."
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Subtract X9, X9, 1
	275 Add X10, X10, 16
	276 Move X0, X19
	277 Move W2, W31
	278 Call 0x1C5D788
	279 NotImplemented "Instruction LDRSW not yet implemented."
	280 Add X8, X8, X9
	281 Add X0, X8, 312
	282 Move X8, [X0]
	283 Move X1, [X0+8]
	284 Move X0, X19
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Compare X20, 0
	287 JumpIfNotEqual {314}
	288 And W0, W21, 1
	289 Move X20, [X31+48]
	290 Move X19, [X31+56]
	291 Move X22, [X31+32]
	292 Move X21, [X31+40]
	293 Move X24, [X31+16]
	294 Move X23, [X31+24]
	295 Move X30, [X31+64]
	296 Return X0
	297 Move X0, [X21]
	298 Move W8, [X0+224]
	299 Compare W8, 0
	300 JumpIfNotEqual {303}
	301 Call 0x1C17DFC
	302 Move X0, [X21]
	303 Move X8, [X0+184]
	304 Move X0, [X8+16]
	305 Compare X0, 0
	306 JumpIfEqual {323}
	307 Move X1, X31
	308 Call Event.get_type, X0
	309 NotImplemented "Instruction CMP not yet implemented."
	310 NotImplemented "Instruction CSET not yet implemented."
	311 Call 0x1C17F20
	312 Move X0, X21
	313 Call 0x1C17F18
	314 Move X0, X20
	315 Call 0x1C17F18
	316 Call 0x1C17F20
	317 Move X0, X21
	318 Call 0x1C17F18
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F20
	323 Call 0x1C17F20
	324 Move X22, X1
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move X21, X0
	327 Move X0, X21
	328 Call 0x3EB2AD0
	329 Move X8, [X0]
	330 Move [X31+8], X8
	331 Call 0x3EB2AE0
	332 Move X21, [X31+8]
	333 Move W22, W31
	334 Move [X31+8], X31
	335 Move X0, X23
	336 Move X1, X31
	337 Move X2, X31
	338 Call IntPtr.op_Inequality, X0, X1
	339 Move TEMP, X0
	340 And TEMP, TEMP, 1
	341 Compare TEMP, 1
	342 JumpIfNotEqual {346}
	343 Move X0, X23
	344 Move X1, X31
	345 Call ProfilerUnsafeUtility.EndSample, X0
	346 Move X8, [X31+8]
	347 Compare X8, 0
	348 JumpIfEqual {382}
	349 Move X0, [X31+8]
	350 Call 0x1C17F18
	351 Move X22, X1
	352 Move X21, X0
	353 Move X21, X0
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X0, X21
	356 Call 0x3EB2AD0
	357 Move X8, [X0]
	358 Move [X31+8], X8
	359 Call 0x3EB2AE0
	360 Move X21, [X31+8]
	361 Move W24, W31
	362 Move [X31+8], X31
	363 Move X21, X0
	364 Move X0, X23
	365 Move X1, X31
	366 Move X2, X31
	367 Call IntPtr.op_Inequality, X0, X1
	368 Move TEMP, X0
	369 And TEMP, TEMP, 1
	370 Compare TEMP, 1
	371 JumpIfNotEqual {375}
	372 Move X0, X23
	373 Move X1, X31
	374 Call ProfilerUnsafeUtility.EndSample, X0
	375 Move X8, [X31+8]
	376 Compare X8, 0
	377 JumpIfEqual {416}
	378 Move X0, [X31+8]
	379 Call 0x1C17F18
	380 Move X22, X1
	381 Move X21, X0
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move X0, X21
	384 Call 0x3EB2AD0
	385 Move X20, [X0]
	386 Call 0x3EB2AE0
	387 Move X20, X31
	388 Move X21, X0
	389 Compare X19, 0
	390 JumpIfEqual {414}
	391 Move X10, 0x2DB000
	392 Move X8, [X19]
	393 Move X10, [X10+3584]
	394 NotImplemented "Instruction LDRH not yet implemented."
	395 Move X1, [X10]
	396 Compare X9, 0
	397 JumpIfEqual {404}
	398 Move X10, [X8+176]
	399 Add X10, X10, 8
	400 NotImplemented "Instruction LDUR not yet implemented."
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Subtract X9, X9, 1
	403 Add X10, X10, 16
	404 Move X0, X19
	405 Move W2, W31
	406 Call 0x1C5D788
	407 NotImplemented "Instruction LDRSW not yet implemented."
	408 Add X8, X8, X9
	409 Add X0, X8, 312
	410 Move X8, [X0]
	411 Move X1, [X0+8]
	412 Move X0, X19
	413 NotImplemented "Instruction BLR not yet implemented."
	414 Compare X20, 0
	415 JumpIfNotEqual {418}
	416 Move X0, X21
	417 Call 0x1D2D690
	418 Move X0, X20
	419 Call 0x1C17F18
	420 Call 0x1991590

Method: System.Void GetAllPanels(System.Collections.Generic.List`1<UnityEngine.UIElements.Panel> panels, UnityEngine.UIElements.ContextType contextType)

Disassembly:
	0x03E166AC LDR X0, [X0 + 0xCC0]
	0x03E166B0 BL 0x1C16CF4
	0x03E166B4 ADRP X0, 0x305000
	0x03E166B8 LDR X0, [X0 + 0x930]
	0x03E166BC BL 0x1C16CF4
	0x03E166C0 MOVZ W8, 0x1
	0x03E166C4 STRB W8, [X19 + 0x3BC]
	0x03E166C8 LDR X0, [X21]
	0x03E166CC STP X31, X31, [X31 + 0x20]
	0x03E166D0 STR X31, [X31 + 0x30]
	0x03E166D4 LDR W8, [X0 + 0xE0]
	0x03E166D8 CBNZ W8, 0x3E166E4
	0x03E166DC BL 0x1C16DFC
	0x03E166E0 LDR X0, [X21]
	0x03E166E4 LDR X8, [X0 + 0xB8]
	0x03E166E8 LDR X0, [X8 + 0x48]
	0x03E166EC CBZ X0, 0x3E167CC
	0x03E166F0 ADRP X8, 0x354000
	0x03E166F4 LDR X8, [X8 + 0x6C8]
	0x03E166F8 ADRP X20, 0x354000
	0x03E166FC ADRP X19, 0x354000
	0x03E16700 LDR X1, [X8]
	0x03E16704 LDR X20, [X20 + 0x6B0]
	0x03E16708 LDR X19, [X19 + 0x6A8]
	0x03E1670C ADD X8, X31, 0x8
	0x03E16710 BL 0x301CB58
	0x03E16714 LDUR V0, [X31 + 0x8]
	0x03E16718 LDR X8, [X31 + 0x18]
	0x03E1671C STR V0, [X31 + 0x2]
	0x03E16720 STR X8, [X31 + 0x30]
	0x03E16724 LDR X1, [X20]
	0x03E16728 ADD X0, X31, 0x20
	0x03E1672C BL 0x2BC4350
	0x03E16730 TBZ X0, 0x0, 0x3E16764
	0x03E16734 LDR X8, [X31 + 0x30]
	0x03E16738 CBZ X8, 0x3E167C4
	0x03E1673C LDR X9, [X8 + 0x70]
	0x03E16740 CBZ X9, 0x3E16754
	0x03E16744 LDR X9, [X9 + 0x10]
	0x03E16748 CBZ X9, 0x3E167C8
	0x03E1674C LDR W9, [X9 + 0x18]
	0x03E16750 CBNZ W9, 0x3E16724
	0x03E16754 MOV X0, X8
	0x03E16758 MOV X1, X31
	0x03E1675C BL 0x3DB282C
	0x03E16760 B 0x3E16724
	0x03E16764 LDR X1, [X19]
	0x03E16768 ADD X0, X31, 0x20
	0x03E1676C BL 0x2BC434C
	0x03E16770 LDR X0, [X21]
	0x03E16774 LDR W8, [X0 + 0xE0]
	0x03E16778 CBNZ W8, 0x3E16784
	0x03E1677C BL 0x1C16DFC
	0x03E16780 LDR X0, [X21]
	0x03E16784 LDR X8, [X0 + 0xB8]
	0x03E16788 LDR X8, [X8 + 0x48]
	0x03E1678C CBZ X8, 0x3E167CC
	0x03E16790 LDP W2, W9, [X8 + 0x18]
	0x03E16794 ADD W9, W9, 0x1
	0x03E16798 CMP W2, 0x1
	0x03E1679C STP W31, W9, [X8 + 0x18]
	0x03E167A0 B.LT 0x3E167B4
	0x03E167A4 LDR X0, [X8 + 0x10]
	0x03E167A8 MOV W1, W31
	0x03E167AC MOV X3, X31
	0x03E167B0 BL 0x339FA34
	0x03E167B4 LDP X20, X19, [X31 + 0x50]
	0x03E167B8 LDP X30, X21, [X31 + 0x40]
	0x03E167BC ADD X31, X31, 0x60
	0x03E167C0 RET
	0x03E167C4 BL 0x1C16F20
	0x03E167C8 BL 0x1C16F20
	0x03E167CC BL 0x1C16F20
	0x03E167D0 B 0x3E167DC
	0x03E167D4 B 0x3E167DC
	0x03E167D8 B 0x3E167DC
	0x03E167DC MOV X19, X0
	0x03E167E0 CMP W1, 0x1
	0x03E167E4 B.NE 0x3E16818
	0x03E167E8 MOV X0, X19
	0x03E167EC BL 0x3EB1AD0
	0x03E167F0 LDR X20, [X0]
	0x03E167F4 BL 0x3EB1AE0
	0x03E167F8 ADRP X8, 0x354000
	0x03E167FC LDR X8, [X8 + 0x6A8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0x5D3000
	008 Move X21, 0x307000
	009 Move W8, [X22+997]
	010 Move X21, [X21+3736]
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x34F000
	018 Move X0, [X0+2384]
	019 Call 0x1C17CF4
	020 Move X0, 0x34F000
	021 Move X0, [X0+2392]
	022 Call 0x1C17CF4
	023 Move X0, 0x34F000
	024 Move X0, [X0+2400]
	025 Call 0x1C17CF4
	026 Move X0, 0x355000
	027 Move X0, [X0+1656]
	028 Call 0x1C17CF4
	029 Move X0, 0x307000
	030 Move X0, [X0+3736]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+997], W8
	034 Move X0, [X21]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X31+32], X31
	037 Move [X31], V0
	038 Move [X31+8], V0
	039 Move X21, 0x34F000
	040 Move W8, [X0+224]
	041 Move X21, [X21+2384]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X8, X31, 0
	046 Call UIElementsUtility.GetPanelsIterator
	047 Move X1, [X21]
	048 Add X0, X31, 0
	049 Call Enumerator<Int32, Object>.MoveNext, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {93}
	054 Move X22, 0x355000
	055 Move X22, [X22+1656]
	056 Move X0, [X31+24]
	057 Compare X0, 0
	058 JumpIfEqual {100}
	059 Move X8, [X0]
	060 Move X9, [X8+1016]
	061 Move X1, [X8+1024]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Compare X20, 0
	065 JumpIfEqual {100}
	066 Move W10, [X20+28]
	067 Move X1, [X31+24]
	068 Move X8, [X20+16]
	069 Move X9, [X22]
	070 Add W10, W10, 1
	071 Move [X20+28], W10
	072 Compare X8, 0
	073 JumpIfEqual {100}
	074 NotImplemented "Instruction LDRSW not yet implemented."
	075 Move W11, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Add W9, W10, 1
	078 Add X8, X8, X10
	079 Move [X20+24], W9
	080 Move [X8+32], X1
	081 Move X8, [X9+32]
	082 Move X0, X20
	083 Move X8, [X8+192]
	084 Move X2, [X8+112]
	085 Call List`1<Object>.AddWithResize, X0, X1
	086 Move X1, [X21]
	087 Add X0, X31, 0
	088 Call Enumerator<Int32, Object>.MoveNext, X0
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {56}
	093 Move X20, [X31+80]
	094 Move X19, [X31+88]
	095 Move X22, [X31+64]
	096 Move X21, [X31+72]
	097 Move X30, [X31+48]
	098 Add X31, X31, 96
	099 Return 
	100 Call 0x1C17F20

Method: System.Collections.Generic.Dictionary`2/Enumerator<System.Int32, UnityEngine.UIElements.Panel> GetPanelsIterator()

Disassembly:
	0x03E1A4D0 LDR X8, [X8 + 0xB8]
	0x03E1A4D4 ADD X0, X31, 0x3C0
	0x03E1A4D8 LDR X1, [X8]
	0x03E1A4DC ADD X8, X31, 0x150
	0x03E1A4E0 BL 0x2724214
	0x03E1A4E4 LDP V0, V1, [X31 + 0x150]
	0x03E1A4E8 LDR V2, [X31 + 0x17]
	0x03E1A4EC LDR X1, [X20]
	0x03E1A4F0 ADD X0, X31, 0x3C0
	0x03E1A4F4 STP V0, V1, [X31 + 0x3C0]
	0x03E1A4F8 STR V2, [X31 + 0x3E]
	0x03E1A4FC BL 0x2724B5C
	0x03E1A500 LDR X8, [X19]
	0x03E1A504 MOVI V0.2D, 0x0
	0x03E1A508 LDR X8, [X8 + 0xB8]
	0x03E1A50C STP X0, X1, [X8 + 0x50]
	0x03E1A510 LDR X2, [X25]
	0x03E1A514 ADD X0, X31, 0x120
	0x03E1A518 MOV X1, X31
	0x03E1A51C STP V0, V0, [X31 + 0x130]
	0x03E1A520 STR V0, [X31 + 0x12]
	0x03E1A524 BL 0x2724134
	0x03E1A528 LDP V0, V1, [X31 + 0x120]
	0x03E1A52C LDR V2, [X31 + 0x14]
	0x03E1A530 LDR X1, [X24]
	0x03E1A534 ADD X8, X31, 0xF0
	0x03E1A538 ADD X0, X31, 0x3C0
	0x03E1A53C STP V0, V1, [X31 + 0x3C0]
	0x03E1A540 STR V2, [X31 + 0x3E]
	0x03E1A544 BL 0x2724268
	0x03E1A548 LDP V0, V1, [X31 + 0xF0]
	0x03E1A54C LDR V2, [X31 + 0x11]
	0x03E1A550 LDR X8, [X22]
	0x03E1A554 LDR X2, [X21]
	0x03E1A558 STP V0, V1, [X31 + 0x3C0]
	0x03E1A55C STR V2, [X31 + 0x3E]
	0x03E1A560 LDR X8, [X8 + 0xB8]
	0x03E1A564 ADD X0, X31, 0x3C0
	0x03E1A568 LDR X1, [X8]
	0x03E1A56C ADD X8, X31, 0xC0
	0x03E1A570 BL 0x27241C0
	0x03E1A574 LDP V0, V1, [X31 + 0xC0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x5CF000
	007 Move X20, 0x303000
	008 Move X19, X8
	009 Move W8, [X21+998]
	010 Move X20, [X20+3736]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x351000
	016 Move X0, [X0+1960]
	017 Call 0x1C17CF4
	018 Move X0, 0x303000
	019 Move X0, [X0+3736]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+998], W8
	023 Move X0, [X20]
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move [X31+32], X31
	026 Move [X31], V0
	027 Move [X31+8], V0
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move X0, [X8+8]
	035 Compare X0, 0
	036 JumpIfEqual {54}
	037 Move X8, 0x351000
	038 Move X8, [X8+1960]
	039 Move X1, [X8]
	040 Add X8, X31, 0
	041 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	042 Move X8, [X31+32]
	043 Move V1, [X31]
	044 Move V0, [X31+16]
	045 Move X30, [X31+48]
	046 Move X21, [X31+56]
	047 Move [X19+32], X8
	048 Move [X19], V1
	049 Move [X19+8], V0
	050 Move X20, [X31+64]
	051 Move X19, [X31+72]
	052 Add X31, X31, 80
	053 Return X0
	054 Call 0x1C17F20

Method: System.Single PixelsPerUnitScaleForElement(UnityEngine.UIElements.VisualElement ve, UnityEngine.Sprite sprite)

Disassembly:
	0x03E1A578 LDR V2, [X31 + 0xE]
	0x03E1A57C LDR X1, [X20]
	0x03E1A580 ADD X0, X31, 0x3C0
	0x03E1A584 STP V0, V1, [X31 + 0x3C0]
	0x03E1A588 STR V2, [X31 + 0x3E]
	0x03E1A58C BL 0x2724B5C
	0x03E1A590 LDR X8, [X19]
	0x03E1A594 MOVI V0.2D, 0x0
	0x03E1A598 LDR X8, [X8 + 0xB8]
	0x03E1A59C STP X0, X1, [X8 + 0x60]
	0x03E1A5A0 LDR X2, [X25]
	0x03E1A5A4 ADD X0, X31, 0x90
	0x03E1A5A8 MOV X1, X31
	0x03E1A5AC STP V0, V0, [X31 + 0xA0]
	0x03E1A5B0 STR V0, [X31 + 0x9]
	0x03E1A5B4 BL 0x2724134
	0x03E1A5B8 LDP V0, V1, [X31 + 0x90]
	0x03E1A5BC LDR V2, [X31 + 0xB]
	0x03E1A5C0 LDR X1, [X24]
	0x03E1A5C4 ADD X8, X31, 0x60
	0x03E1A5C8 ADD X0, X31, 0x3C0
	0x03E1A5CC STP V0, V1, [X31 + 0x3C0]
	0x03E1A5D0 STR V2, [X31 + 0x3E]
	0x03E1A5D4 BL 0x2724268
	0x03E1A5D8 LDP V0, V1, [X31 + 0x60]
	0x03E1A5DC LDR V2, [X31 + 0x8]
	0x03E1A5E0 LDR X8, [X22]
	0x03E1A5E4 LDR X2, [X23]
	0x03E1A5E8 STP V0, V1, [X31 + 0x3C0]
	0x03E1A5EC STR V2, [X31 + 0x3E]
	0x03E1A5F0 LDR X8, [X8 + 0xB8]
	0x03E1A5F4 ADD X0, X31, 0x3C0
	0x03E1A5F8 LDR X1, [X8]
	0x03E1A5FC ADD X8, X31, 0x30
	0x03E1A600 BL 0x2724214
	0x03E1A604 LDP V0, V1, [X31 + 0x30]
	0x03E1A608 LDR V2, [X31 + 0x5]
	0x03E1A60C LDR X8, [X22]
	0x03E1A610 LDR X2, [X21]
	0x03E1A614 STP V0, V1, [X31 + 0x3C0]
	0x03E1A618 STR V2, [X31 + 0x3E]
	0x03E1A61C LDR X8, [X8 + 0xB8]
	0x03E1A620 ADD X0, X31, 0x3C0
	0x03E1A624 LDR X1, [X8]
	0x03E1A628 ADD X8, X31, 0x0

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x5CF000
	007 Move W8, [X21+999]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2DA000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+999], W8
	019 Move S8, 1
	020 Compare X20, 0
	021 JumpIfEqual {53}
	022 Move X8, [X20+928]
	023 Compare X8, 0
	024 JumpIfEqual {53}
	025 Move X8, 0x2DA000
	026 Move X8, [X8+1432]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {53}
	040 Move X8, [X20+928]
	041 Compare X8, 0
	042 JumpIfEqual {60}
	043 Compare X19, 0
	044 JumpIfEqual {60}
	045 Move V8, [X8+52]
	046 Move X0, X19
	047 Move X1, X31
	048 Call Sprite.get_pixelsPerUnit, X0
	049 Move X8, -53669888
	050 Move V1, [X8+816]
	051 NotImplemented "Instruction FMAX not yet implemented."
	052 NotImplemented "Instruction FDIV not yet implemented."
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X30, [X31+16]
	056 Move X21, [X31+24]
	057 Move V0, V8
	058 Move V8, [X31+48]
	059 Return V0
	060 Call 0x1C17F20

Method: System.String ParseMenuName(System.String menuName)

Disassembly:
	0x03E1A62C BL 0x27241C0
	0x03E1A630 LDP V0, V1, [X31]
	0x03E1A634 LDR V2, [X31 + 0x2]
	0x03E1A638 LDR X1, [X20]
	0x03E1A63C ADD X0, X31, 0x3C0
	0x03E1A640 STP V0, V1, [X31 + 0x3C0]
	0x03E1A644 STR V2, [X31 + 0x3E]
	0x03E1A648 BL 0x2724B5C
	0x03E1A64C LDR X8, [X19]
	0x03E1A650 LDR X8, [X8 + 0xB8]
	0x03E1A654 STP X0, X1, [X8 + 0x70]
	0x03E1A658 ADD X31, X31, 0x3F0
	0x03E1A65C LDP X20, X19, [X31 + 0x40]
	0x03E1A660 LDP X22, X21, [X31 + 0x30]
	0x03E1A664 LDP X24, X23, [X31 + 0x20]
	0x03E1A668 LDP X26, X25, [X31 + 0x10]
	0x03E1A66C LDP X29, X30, [X31], #0x50
	0x03E1A670 RET
	0x03E1A674 STR X30, [X31 - 0x20]!
	0x03E1A678 STP X20, X19, [X31 + 0x10]
	0x03E1A67C ADRP X19, 0x5CE000
	0x03E1A680 ADRP X20, 0x350000
	0x03E1A684 LDRB W8, [X19 + 0x3F0]
	0x03E1A688 LDR X20, [X20 + 0x838]
	0x03E1A68C TBNZ X8, 0x0, 0x3E1A6A4
	0x03E1A690 ADRP X0, 0x350000
	0x03E1A694 LDR X0, [X0 + 0x838]
	0x03E1A698 BL 0x1C16CF4
	0x03E1A69C MOVZ W8, 0x1
	0x03E1A6A0 STRB W8, [X19 + 0x3F0]
	0x03E1A6A4 LDR X0, [X20]
	0x03E1A6A8 LDP X20, X19, [X31 + 0x10]
	0x03E1A6AC LDR X30, [X31], #0x20
	0x03E1A6B0 RET
	0x03E1A6B4 STP X30, X21, [X31 - 0x20]!
	0x03E1A6B8 STP X20, X19, [X31 + 0x10]
	0x03E1A6BC ADRP X20, 0x5CE000
	0x03E1A6C0 ADRP X21, 0x2E2000
	0x03E1A6C4 LDRB W8, [X20 + 0x3F1]
	0x03E1A6C8 LDR X21, [X21 + 0x790]
	0x03E1A6CC MOV X19, X0
	0x03E1A6D0 TBNZ X8, 0x0, 0x3E1A6E8
	0x03E1A6D4 ADRP X0, 0x2E2000
	0x03E1A6D8 LDR X0, [X0 + 0x790]
	0x03E1A6DC BL 0x1C16CF4
	0x03E1A6E0 MOVZ W8, 0x1
	0x03E1A6E4 STRB W8, [X20 + 0x3F1]
	0x03E1A6E8 LDR X8, [X19]
	0x03E1A6EC MOV X0, X19
	0x03E1A6F0 LDP X9, X1, [X8 + 0x188]
	0x03E1A6F4 BLR X9
	0x03E1A6F8 LDR X8, [X19]
	0x03E1A6FC MOV X20, X0
	0x03E1A700 MOV X0, X19
	0x03E1A704 LDP X9, X1, [X8 + 0x178]
	0x03E1A708 BLR X9
	0x03E1A70C LDR X1, [X21]
	0x03E1A710 MOV X2, X0
	0x03E1A714 MOV X0, X20
	0x03E1A718 LDP X20, X19, [X31 + 0x10]
	0x03E1A71C MOV X3, X31
	0x03E1A720 LDP X30, X21, [X31], #0x20
	0x03E1A724 B 0x32274B8
	0x03E1A728 MOV X0, X31
	0x03E1A72C RET
	0x03E1A730 STP X30, X21, [X31 - 0x20]!
	0x03E1A734 STP X20, X19, [X31 + 0x10]
	0x03E1A738 ADRP X20, 0x5CE000
	0x03E1A73C ADRP X21, 0x350000
	0x03E1A740 LDRB W8, [X20 + 0x3F2]
	0x03E1A744 LDR X21, [X21 + 0x840]
	0x03E1A748 MOV X19, X0
	0x03E1A74C TBNZ X8, 0x0, 0x3E1A764
	0x03E1A750 ADRP X0, 0x350000
	0x03E1A754 LDR X0, [X0 + 0x840]
	0x03E1A758 BL 0x1C16CF4
	0x03E1A75C MOVZ W8, 0x1
	0x03E1A760 STRB W8, [X20 + 0x3F2]
	0x03E1A764 LDR X1, [X21]
	0x03E1A768 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5CF000
	007 Move W8, [X20+1000]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x351000
	014 Move X0, [X0+1968]
	015 Call 0x1C17CF4
	016 Move X0, 0x2DC000
	017 Move X0, [X0+632]
	018 Call 0x1C17CF4
	019 Move X0, 0x303000
	020 Move X0, [X0+3736]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1000], W8
	024 Move X0, X19
	025 Move X1, X31
	026 Call String.IsNullOrEmpty, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {36}
	031 Move X8, 0x2DC000
	032 Move X8, [X8+632]
	033 Move X8, [X8]
	034 Move X8, [X8+184]
	035 Move X19, [X8]
	036 Compare X19, 0
	037 JumpIfEqual {101}
	038 Move X0, X19
	039 Move X1, X31
	040 Call String.TrimEnd, X0
	041 Compare X0, 0
	042 JumpIfEqual {101}
	043 Move W1, 32
	044 Move X2, X31
	045 Move X19, X0
	046 Call String.LastIndexOf, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfEqual {94}
	051 Move X21, 0x303000
	052 Move X21, [X21+3736]
	053 Move W20, W0
	054 Move X0, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X0+184]
	061 Add W21, W20, 1
	062 Move X0, X19
	063 Move W1, W21
	064 Move X22, [X8+96]
	065 Move X2, X31
	066 Call String.get_Chars, X0, X1
	067 Move X8, 0x351000
	068 Move X8, [X8+1968]
	069 Move W1, W0
	070 Move X0, X22
	071 Move X2, [X8]
	072 Call Array.IndexOf, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, -2147483648
	075 Compare TEMP, -2147483648
	076 JumpIfEqual {94}
	077 Move W8, [X19+16]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, X19
	080 Move W1, W31
	081 Move W2, W20
	082 Move X3, X31
	083 Call String.Substring, X0, X1, X2
	084 Compare X0, 0
	085 JumpIfEqual {101}
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X1, X31
	091 Move X30, [X31+48]
	092 Call String.TrimEnd, X0
	093 Return X0
	094 Move X0, X19
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Return X0
	101 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03E1A76C LDP X20, X19, [X31 + 0x10]
	0x03E1A770 LDP X30, X21, [X31], #0x20
	0x03E1A774 B 0x2736468
	0x03E1A778 STP X30, X21, [X31 - 0x20]!
	0x03E1A77C STP X20, X19, [X31 + 0x10]
	0x03E1A780 ADRP X20, 0x5CE000
	0x03E1A784 ADRP X21, 0x303000
	0x03E1A788 LDRB W8, [X20 + 0x3F3]
	0x03E1A78C LDR X21, [X21 + 0xB20]
	0x03E1A790 MOV X19, X0
	0x03E1A794 TBNZ X8, 0x0, 0x3E1A7C4
	0x03E1A798 ADRP X0, 0x303000
	0x03E1A79C LDR X0, [X0 + 0xB20]
	0x03E1A7A0 BL 0x1C16CF4
	0x03E1A7A4 ADRP X0, 0x34F000
	0x03E1A7A8 LDR X0, [X0 + 0xB48]
	0x03E1A7AC BL 0x1C16CF4
	0x03E1A7B0 ADRP X0, 0x2E1000
	0x03E1A7B4 LDR X0, [X0 + 0x588]
	0x03E1A7B8 BL 0x1C16CF4
	0x03E1A7BC MOVZ W8, 0x1
	0x03E1A7C0 STRB W8, [X20 + 0x3F3]
	0x03E1A7C4 LDR X0, [X21]
	0x03E1A7C8 BL 0x1C16F10
	0x03E1A7CC MOV X20, X0
	0x03E1A7D0 BL 0x3E0A2F4
	0x03E1A7D4 CBZ X20, 0x3E1A834
	0x03E1A7D8 ADRP X8, 0x2E1000
	0x03E1A7DC LDR X8, [X8 + 0x588]
	0x03E1A7E0 LDR X8, [X8]
	0x03E1A7E4 STR X8, [X20 + 0x10]
	0x03E1A7E8 STR X20, [X19 + 0x18]
	0x03E1A7EC LDR X0, [X21]
	0x03E1A7F0 BL 0x1C16F10
	0x03E1A7F4 MOV X20, X0
	0x03E1A7F8 BL 0x3E0A2F4
	0x03E1A7FC CBZ X20, 0x3E1A834
	0x03E1A800 ADRP X8, 0x34F000
	0x03E1A804 LDR X8, [X8 + 0xB48]
	0x03E1A808 MOV X0, X19
	0x03E1A80C MOV X1, X31
	0x03E1A810 LDR X8, [X8]
	0x03E1A814 STR X8, [X20 + 0x10]
	0x03E1A818 STR X20, [X19 + 0x20]
	0x03E1A81C BL 0x33BDD8C
	0x03E1A820 MOVZ W8, 0x1
	0x03E1A824 STRB W8, [X19 + 0x10]
	0x03E1A828 LDP X20, X19, [X31 + 0x10]
	0x03E1A82C LDP X30, X21, [X31], #0x20
	0x03E1A830 RET
	0x03E1A834 BL 0x1C16F20
	0x03E1A838 STP X30, X19, [X31 - 0x10]!
	0x03E1A83C MOV X1, X31
	0x03E1A840 MOV X19, X0
	0x03E1A844 BL 0x33BDD8C
	0x03E1A848 MOVZ W8, 0x1
	0x03E1A84C STRB W8, [X19 + 0x10]
	0x03E1A850 LDP X30, X19, [X31], #0x10
	0x03E1A854 RET
	0x03E1A858 STR X30, [X31 - 0x20]!
	0x03E1A85C STP X20, X19, [X31 + 0x10]
	0x03E1A860 ADRP X19, 0x5CE000
	0x03E1A864 ADRP X20, 0x350000
	0x03E1A868 LDRB W8, [X19 + 0x3F4]
	0x03E1A86C LDR X20, [X20 + 0x848]
	0x03E1A870 TBNZ X8, 0x0, 0x3E1A888
	0x03E1A874 ADRP X0, 0x350000
	0x03E1A878 LDR X0, [X0 + 0x848]
	0x03E1A87C BL 0x1C16CF4
	0x03E1A880 MOVZ W8, 0x1
	0x03E1A884 STRB W8, [X19 + 0x3F4]
	0x03E1A888 LDR X0, [X20]
	0x03E1A88C LDP X20, X19, [X31 + 0x10]
	0x03E1A890 LDR X30, [X31], #0x20
	0x03E1A894 RET
	0x03E1A898 STP X30, X21, [X31 - 0x20]!
	0x03E1A89C STP X20, X19, [X31 + 0x10]
	0x03E1A8A0 ADRP X20, 0x5CE000
	0x03E1A8A4 ADRP X21, 0x2E2000
	0x03E1A8A8 LDRB W8, [X20 + 0x3F5]
	0x03E1A8AC LDR X21, [X21 + 0x790]
	0x03E1A8B0 MOV X19, X0
	0x03E1A8B4 TBNZ X8, 0x0, 0x3E1A8CC
	0x03E1A8B8 ADRP X0, 0x2E2000
	0x03E1A8BC LDR X0, [X0 + 0x790]
	0x03E1A8C0 BL 0x1C16CF4
	0x03E1A8C4 MOVZ W8, 0x1
	0x03E1A8C8 STRB W8, [X20 + 0x3F5]
	0x03E1A8CC LDR X8, [X19]
	0x03E1A8D0 MOV X0, X19
	0x03E1A8D4 LDP X9, X1, [X8 + 0x188]
	0x03E1A8D8 BLR X9
	0x03E1A8DC LDR X8, [X19]
	0x03E1A8E0 MOV X20, X0
	0x03E1A8E4 MOV X0, X19
	0x03E1A8E8 LDP X9, X1, [X8 + 0x178]
	0x03E1A8EC BLR X9
	0x03E1A8F0 LDR X1, [X21]
	0x03E1A8F4 MOV X2, X0
	0x03E1A8F8 MOV X0, X20
	0x03E1A8FC LDP X20, X19, [X31 + 0x10]
	0x03E1A900 MOV X3, X31
	0x03E1A904 LDP X30, X21, [X31], #0x20
	0x03E1A908 B 0x32274B8
	0x03E1A90C MOV X0, X31
	0x03E1A910 RET
	0x03E1A914 STP X30, X21, [X31 - 0x20]!
	0x03E1A918 STP X20, X19, [X31 + 0x10]
	0x03E1A91C ADRP X20, 0x5CE000
	0x03E1A920 ADRP X21, 0x350000
	0x03E1A924 LDRB W8, [X20 + 0x3F6]
	0x03E1A928 LDR X21, [X21 + 0x850]
	0x03E1A92C MOV X19, X0
	0x03E1A930 TBNZ X8, 0x0, 0x3E1A948
	0x03E1A934 ADRP X0, 0x350000
	0x03E1A938 LDR X0, [X0 + 0x850]
	0x03E1A93C BL 0x1C16CF4
	0x03E1A940 MOVZ W8, 0x1
	0x03E1A944 STRB W8, [X20 + 0x3F6]
	0x03E1A948 LDR X1, [X21]
	0x03E1A94C MOV X0, X19
	0x03E1A950 LDP X20, X19, [X31 + 0x10]
	0x03E1A954 LDP X30, X21, [X31], #0x20
	0x03E1A958 B 0x2736468
	0x03E1A95C STP X30, X21, [X31 - 0x20]!
	0x03E1A960 STP X20, X19, [X31 + 0x10]
	0x03E1A964 ADRP X20, 0x5CE000
	0x03E1A968 ADRP X21, 0x303000
	0x03E1A96C LDRB W8, [X20 + 0x3F7]
	0x03E1A970 LDR X21, [X21 + 0xB20]
	0x03E1A974 MOV X19, X0
	0x03E1A978 TBNZ X8, 0x0, 0x3E1A9B4
	0x03E1A97C ADRP X0, 0x303000
	0x03E1A980 LDR X0, [X0 + 0xB20]
	0x03E1A984 BL 0x1C16CF4
	0x03E1A988 ADRP X0, 0x2E1000
	0x03E1A98C LDR X0, [X0 + 0x588]
	0x03E1A990 BL 0x1C16CF4
	0x03E1A994 ADRP X0, 0x2E1000
	0x03E1A998 LDR X0, [X0 + 0x798]
	0x03E1A99C BL 0x1C16CF4
	0x03E1A9A0 ADRP X0, 0x2E4000
	0x03E1A9A4 LDR X0, [X0 + 0x120]
	0x03E1A9A8 BL 0x1C16CF4
	0x03E1A9AC MOVZ W8, 0x1
	0x03E1A9B0 STRB W8, [X20 + 0x3F7]
	0x03E1A9B4 LDR X0, [X21]
	0x03E1A9B8 BL 0x1C16F10
	0x03E1A9BC MOV X20, X0
	0x03E1A9C0 BL 0x3E0A2F4
	0x03E1A9C4 CBZ X20, 0x3E1AA4C
	0x03E1A9C8 ADRP X8, 0x2E1000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x5CF000
	014 Move X22, 0x351000
	015 Move X19, 0x351000
	016 Move X20, 0x303000
	017 Move X29, 0x351000
	018 Move X28, 0x351000
	019 Move X27, 0x340000
	020 Move X26, 0x351000
	021 Move X25, 0x351000
	022 Move X24, 0x351000
	023 Move X23, 0x351000
	024 Move X22, [X22+1976]
	025 Move X19, [X19+1984]
	026 Move X20, [X20+3736]
	027 Move X29, [X29+1992]
	028 Move X28, [X28+2000]
	029 Move X27, [X27+32]
	030 Move X26, [X26+1456]
	031 Move W8, [X21+1001]
	032 Move X25, [X25+1464]
	033 Move X24, [X24+2008]
	034 Move X23, [X23+2016]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {77}
	039 Move X0, 0x2E3000
	040 Move X0, [X0+2264]
	041 Call 0x1C17CF4
	042 Move X0, 0x351000
	043 Move X0, [X0+2000]
	044 Call 0x1C17CF4
	045 Move X0, 0x351000
	046 Move X0, [X0+1992]
	047 Call 0x1C17CF4
	048 Move X0, 0x340000
	049 Move X0, [X0+32]
	050 Call 0x1C17CF4
	051 Move X0, 0x351000
	052 Move X0, [X0+1464]
	053 Call 0x1C17CF4
	054 Move X0, 0x351000
	055 Move X0, [X0+1456]
	056 Call 0x1C17CF4
	057 Move X0, 0x351000
	058 Move X0, [X0+1984]
	059 Call 0x1C17CF4
	060 Move X0, 0x351000
	061 Move X0, [X0+1976]
	062 Call 0x1C17CF4
	063 Move X0, 0x351000
	064 Move X0, [X0+2024]
	065 Call 0x1C17CF4
	066 Move X0, 0x303000
	067 Move X0, [X0+3736]
	068 Call 0x1C17CF4
	069 Move X0, 0x351000
	070 Move X0, [X0+2016]
	071 Call 0x1C17CF4
	072 Move X0, 0x351000
	073 Move X0, [X0+2008]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X21+1001], W8
	077 Move X0, [X22]
	078 Call 0x1C17F10
	079 Move X1, [X19]
	080 Move X19, X0
	081 Call Stack`1<Object>..ctor, X0
	082 Move X8, [X20]
	083 Move X8, [X8+184]
	084 Move [X8], X19
	085 Move X0, [X29]
	086 Call 0x1C17F10
	087 Move X1, [X28]
	088 Move X19, X0
	089 Call Dictionary`2<Int32, Object>..ctor, X0
	090 Move X8, [X20]
	091 Move X8, [X8+184]
	092 Move [X8+8], X19
	093 Move X0, [X27]
	094 Call 0x1C17F10
	095 Move X1, X31
	096 Move X19, X0
	097 Call Event..ctor, X0
	098 Move X0, [X20]
	099 Move V0, 0
	100 Move W9, 0x41900000
	101 Move X8, [X0+184]
	102 Move [X8+16], X19
	103 Move [X8+24], V0
	104 Move X8, [X0+184]
	105 Move [X8+40], W9
	106 Call 0x1C17F10
	107 Move X19, X0
	108 Call UIElementsUtility..ctor, X0
	109 Move X8, [X20]
	110 Move X8, [X8+184]
	111 Move [X8+48], X19
	112 Move X0, [X26]
	113 Call 0x1C17F10
	114 Move X1, [X25]
	115 Move X19, X0
	116 Call List`1<Object>..ctor, X0
	117 Move X8, [X20]
	118 Move X0, [X24]
	119 Move W1, 1
	120 Move W2, W31
	121 Move X8, [X8+184]
	122 Move W3, W31
	123 Move X4, X31
	124 Move [X8+56], X19
	125 Move [X8+64], X0
	126 Move X9, [X23]
	127 Move [X8+72], X9
	128 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	129 Move X8, [X20]
	130 Move W1, 1
	131 Move W2, W31
	132 Move W3, W31
	133 Move X9, [X8+184]
	134 Move X4, X31
	135 Move X8, [X9+72]
	136 Move [X9+80], X0
	137 Move X0, X8
	138 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	139 Move X8, [X20]
	140 Move W1, 5
	141 Move X8, [X8+184]
	142 Move [X8+88], X0
	143 Move X8, 0x2E3000
	144 Move X8, [X8+2264]
	145 Move X0, [X8]
	146 Call 0x1C17D6C
	147 Move X8, 0x351000
	148 Move X8, [X8+2024]
	149 Move X2, X31
	150 Move X19, X0
	151 Move X1, [X8]
	152 Call RuntimeHelpers.InitializeArray, X0, X1
	153 Move X8, [X20]
	154 Move X22, [X31+64]
	155 Move X21, [X31+72]
	156 Move X24, [X31+48]
	157 Move X23, [X31+56]
	158 Move X26, [X31+32]
	159 Move X25, [X31+40]
	160 Move X8, [X8+184]
	161 Move X28, [X31+16]
	162 Move X27, [X31+24]
	163 Move [X8+96], X19
	164 Move X20, [X31+80]
	165 Move X19, [X31+88]
	166 Move X29, [X31+96]
	167 Move X30, [X31+104]
	168 Return 

