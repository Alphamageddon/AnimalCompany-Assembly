Type: UnityEngine.UIElements.SortColumnDescription/UxmlObjectTraits`1

Method: System.Void Init(ref T obj, UnityEngine.UIElements.IUxmlAttributes bag, UnityEngine.UIElements.CreationContext cc)

Disassembly:
	0x02739334 LDR X8, [X0]
	0x02739338 LDP V0, V1, [X31]
	0x0273933C ADD X2, X31, 0x60
	0x02739340 MOV X1, X21
	0x02739344 LDR X9, [X8 + 0x178]
	0x02739348 STP V0, V1, [X31 + 0x60]
	0x0273934C LDR X3, [X8 + 0x180]
	0x02739350 BLR X9
	0x02739354 LDR X8, [X20 + 0x20]
	0x02739358 MOV X21, X0
	0x0273935C LDR X8, [X8 + 0xC0]
	0x02739360 LDR X1, [X8 + 0x8]
	0x02739364 LDRB W8, [X1 + 0x135]
	0x02739368 TBNZ X8, 0x0, 0x2739378
	0x0273936C MOV X0, X1
	0x02739370 BL 0x1C5C684
	0x02739374 MOV X1, X0
	0x02739378 CBZ X19, 0x2739420
	0x0273937C LDR X8, [X19]
	0x02739380 LDRB W9, [X1 + 0x130]
	0x02739384 LDRB W10, [X8 + 0x130]
	0x02739388 CMP W10, W9
	0x0273938C B.CC 0x2739418
	0x02739390 LDR X8, [X8 + 0xC8]
	0x02739394 ADD X8, X8, X9, 0x3, LSL
	0x02739398 LDUR X8, [X8 - 0x8]
	0x0273939C CMP X8, X1
	0x027393A0 B.NE 0x2739418
	0x027393A4 LDR X8, [X20 + 0x20]
	0x027393A8 LDR X8, [X8 + 0xC0]
	0x027393AC LDR X1, [X8 + 0x8]
	0x027393B0 LDRB W8, [X1 + 0x135]
	0x027393B4 TBNZ X8, 0x0, 0x27393C4
	0x027393B8 MOV X0, X1
	0x027393BC BL 0x1C5C684
	0x027393C0 MOV X1, X0
	0x027393C4 LDR X8, [X19]
	0x027393C8 LDRB W9, [X1 + 0x130]
	0x027393CC LDRB W10, [X8 + 0x130]
	0x027393D0 CMP W10, W9
	0x027393D4 B.CC 0x2739418
	0x027393D8 LDR X8, [X8 + 0xC8]
	0x027393DC ADD X8, X8, X9, 0x3, LSL
	0x027393E0 LDUR X8, [X8 - 0x8]
	0x027393E4 CMP X8, X1
	0x027393E8 B.NE 0x2739418
	0x027393EC LDR X8, [X20 + 0x20]
	0x027393F0 MOV X0, X19
	0x027393F4 MOV X1, X21
	0x027393F8 LDR X8, [X8 + 0xC0]
	0x027393FC LDR X2, [X8 + 0x10]
	0x02739400 BL 0x277A8A0
	0x02739404 LDP X20, X19, [X31 + 0xA0]
	0x02739408 LDP X22, X21, [X31 + 0x90]
	0x0273940C LDP X30, X23, [X31 + 0x80]
	0x02739410 ADD X31, X31, 0xB0
	0x02739414 RET
	0x02739418 MOV X0, X19
	0x0273941C BL 0x1C171E0
	0x02739420 BL 0x1C16F20
	0x02739424 STP X30, X23, [X31 - 0x30]!
	0x02739428 STP X22, X21, [X31 + 0x10]
	0x0273942C STP X20, X19, [X31 + 0x20]
	0x02739430 ADRP X20, 0x1CA1000
	0x02739434 LDRB W8, [X20 + 0x6B0]
	0x02739438 MOV X19, X0
	0x0273943C TBNZ X8, 0x0, 0x273946C
	0x02739440 ADRP X0, 0x19BB000
	0x02739444 LDR X0, [X0 + 0x1B8]
	0x02739448 BL 0x1C16CF4
	0x0273944C ADRP X0, 0x19BB000
	0x02739450 LDR X0, [X0 + 0x1C0]
	0x02739454 BL 0x1C16CF4
	0x02739458 ADRP X0, 0x19BB000
	0x0273945C LDR X0, [X0 + 0x1D0]
	0x02739460 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 Compare X0, 0
	009 JumpIfEqual {101}
	010 Move X23, X0
	011 Move V0, [X3]
	012 Move V1, [X3+16]
	013 Move X0, [X0+24]
	014 Move X22, X3
	015 Move [X31+64], V0
	016 Move [X31+72], V1
	017 Compare X0, 0
	018 JumpIfEqual {101}
	019 Move X8, [X0]
	020 Move V0, [X31+64]
	021 Move V1, [X31+80]
	022 Move X21, X2
	023 Move X20, X1
	024 Move X9, [X8+376]
	025 Move [X31+96], V0
	026 Move [X31+104], V1
	027 Move X3, [X8+384]
	028 Add X2, X31, 96
	029 Move X1, X21
	030 Move X19, X4
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X8, [X20]
	033 Compare X8, 0
	034 JumpIfEqual {101}
	035 Move X9, [X19+32]
	036 Move X1, X0
	037 Move X0, X8
	038 Move X9, [X9+192]
	039 Move X2, [X9+32]
	040 Call SortColumnDescription.set_columnName, X0, X1
	041 Move V0, [X22]
	042 Move V1, [X22+16]
	043 Move X0, [X23+32]
	044 Move [X31+32], V0
	045 Move [X31+40], V1
	046 Compare X0, 0
	047 JumpIfEqual {101}
	048 Move X8, [X0]
	049 Move V0, [X31+32]
	050 Move V1, [X31+48]
	051 Add X2, X31, 96
	052 Move X1, X21
	053 Move X9, [X8+376]
	054 Move [X31+96], V0
	055 Move [X31+104], V1
	056 Move X3, [X8+384]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X8, [X20]
	059 Compare X8, 0
	060 JumpIfEqual {101}
	061 Move X9, [X19+32]
	062 Move W1, W0
	063 Move X0, X8
	064 Move X9, [X9+192]
	065 Move X2, [X9+40]
	066 Call SortColumnDescription.set_columnIndex, X0, X1
	067 Move V0, [X22]
	068 Move V1, [X22+16]
	069 Move X0, [X23+40]
	070 Move [X31], V0
	071 Move [X31+8], V1
	072 Compare X0, 0
	073 JumpIfEqual {101}
	074 Move X8, [X0]
	075 Move V0, [X31]
	076 Move V1, [X31+16]
	077 Add X2, X31, 96
	078 Move X1, X21
	079 Move X9, [X8+376]
	080 Move [X31+96], V0
	081 Move [X31+104], V1
	082 Move X3, [X8+384]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X8, [X20]
	085 Compare X8, 0
	086 JumpIfEqual {101}
	087 Move X9, [X19+32]
	088 Move W1, W0
	089 Move X0, X8
	090 Move X9, [X9+192]
	091 Move X2, [X9+48]
	092 Call SortColumnDescription.set_direction, X0, X1
	093 Move X20, [X31+160]
	094 Move X19, [X31+168]
	095 Move X22, [X31+144]
	096 Move X21, [X31+152]
	097 Move X30, [X31+128]
	098 Move X23, [X31+136]
	099 Add X31, X31, 176
	100 Return 
	101 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x02739464 MOVZ W8, 0x1
	0x02739468 STRB W8, [X20 + 0x6B0]
	0x0273946C CBZ X19, 0x273958C
	0x02739470 MOV X0, X19
	0x02739474 MOV X1, X31
	0x02739478 BL 0x322B8DC
	0x0273947C MOV X1, X31
	0x02739480 BL 0x32277A8
	0x02739484 MOV X20, X31
	0x02739488 TBNZ X0, 0x0, 0x2739578
	0x0273948C MOVZ W1, 0x2C
	0x02739490 MOV X0, X19
	0x02739494 MOV W2, W31
	0x02739498 MOV X3, X31
	0x0273949C BL 0x3229AE8
	0x027394A0 CBZ X0, 0x273958C
	0x027394A4 LDR W8, [X0 + 0x18]
	0x027394A8 MOV X19, X0
	0x027394AC CBZ W8, 0x2739574
	0x027394B0 ADRP X8, 0x19BB000
	0x027394B4 LDR X8, [X8 + 0x1D0]
	0x027394B8 LDR X0, [X8]
	0x027394BC BL 0x1C16F10
	0x027394C0 ADRP X8, 0x19BB000
	0x027394C4 LDR X8, [X8 + 0x1C0]
	0x027394C8 MOV X20, X0
	0x027394CC LDR X1, [X8]
	0x027394D0 BL 0x301B7C4
	0x027394D4 LDR W8, [X19 + 0x18]
	0x027394D8 CMP W8, 0x1
	0x027394DC B.LT 0x2739578
	0x027394E0 ADRP X23, 0x19BB000
	0x027394E4 LDR X23, [X23 + 0x1B8]
	0x027394E8 MOV X21, X31
	0x027394EC ADD X22, X19, 0x20
	0x027394F0 CMP W21, W8
	0x027394F4 B.CS 0x2739590
	0x027394F8 LDR X0, [X22, X21, LSL #3]
	0x027394FC CBZ X0, 0x273958C
	0x02739500 MOV X1, X31
	0x02739504 BL 0x322B8DC
	0x02739508 CBZ X20, 0x273958C
	0x0273950C LDR W10, [X20 + 0x1C]
	0x02739510 LDR X8, [X20 + 0x10]
	0x02739514 LDR X9, [X23]
	0x02739518 ADD W10, W10, 0x1
	0x0273951C STR W10, [X20 + 0x1C]
	0x02739520 CBZ X8, 0x273958C
	0x02739524 LDRSW X10, [X20 + 0x18]
	0x02739528 LDR W11, [X8 + 0x18]
	0x0273952C MOV X1, X0
	0x02739530 CMP W10, W11
	0x02739534 B.CS 0x273954C
	0x02739538 ADD W9, W10, 0x1
	0x0273953C ADD X8, X8, X10, 0x3, LSL
	0x02739540 STR W9, [X20 + 0x18]
	0x02739544 STR X1, [X8 + 0x20]
	0x02739548 B 0x2739560
	0x0273954C LDR X8, [X9 + 0x20]
	0x02739550 MOV X0, X20
	0x02739554 LDR X8, [X8 + 0xC0]
	0x02739558 LDR X2, [X8 + 0x70]
	0x0273955C BL 0x301BF90
	0x02739560 LDR W8, [X19 + 0x18]
	0x02739564 ADD X21, X21, 0x1
	0x02739568 CMP W21, W8
	0x0273956C B.LT 0x27394F0
	0x02739570 B 0x2739578
	0x02739574 MOV X20, X31
	0x02739578 MOV X0, X20
	0x0273957C LDP X20, X19, [X31 + 0x20]
	0x02739580 LDP X22, X21, [X31 + 0x10]
	0x02739584 LDP X30, X23, [X31], #0x30
	0x02739588 RET
	0x0273958C BL 0x1C16F20
	0x02739590 BL 0x1C16F28
	0x02739594 STP X30, X21, [X31 - 0x20]!
	0x02739598 STP X20, X19, [X31 + 0x10]
	0x0273959C ADRP X20, 0x1CA1000
	0x027395A0 ADRP X21, 0x19E4000
	0x027395A4 LDRB W8, [X20 + 0x6B1]
	0x027395A8 LDR X21, [X21 + 0xB20]
	0x027395AC MOV X19, X0
	0x027395B0 TBNZ X8, 0x0, 0x27395EC
	0x027395B4 ADRP X0, 0x19E4000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x1CA2000
	006 Move X21, 0x19E5000
	007 Move W8, [X20+1702]
	008 Move X21, [X21+2848]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {43}
	014 Move X0, 0x19E5000
	015 Move X0, [X0+3048]
	016 Call 0x1C17CF4
	017 Move X0, 0x19E5000
	018 Move X0, [X0+3056]
	019 Call 0x1C17CF4
	020 Move X0, 0x19E5000
	021 Move X0, [X0+3064]
	022 Call 0x1C17CF4
	023 Move X0, 0x19E5000
	024 Move X0, [X0+3072]
	025 Call 0x1C17CF4
	026 Move X0, 0x19E5000
	027 Move X0, [X0+3080]
	028 Call 0x1C17CF4
	029 Move X0, 0x19E5000
	030 Move X0, [X0+2848]
	031 Call 0x1C17CF4
	032 Move X0, 0x19E5000
	033 Move X0, [X0+3088]
	034 Call 0x1C17CF4
	035 Move X0, 0x19E5000
	036 Move X0, [X0+3096]
	037 Call 0x1C17CF4
	038 Move X0, 0x19E5000
	039 Move X0, [X0+3104]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+1702], W8
	043 Move X0, [X21]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X20, X0
	047 Call UxmlStringAttributeDescription..ctor, X0
	048 Compare X20, 0
	049 JumpIfEqual {98}
	050 Move X8, 0x19E5000
	051 Move X8, [X8+3088]
	052 Move X9, 0x19E5000
	053 Move X8, [X8]
	054 Move X9, [X9+3080]
	055 Move [X20+16], X8
	056 Move [X19+24], X20
	057 Move X0, [X9]
	058 Call 0x1C17F10
	059 Move X1, X31
	060 Move X20, X0
	061 Call UxmlIntAttributeDescription..ctor, X0
	062 Compare X20, 0
	063 JumpIfEqual {98}
	064 Move X8, 0x19E5000
	065 Move X8, [X8+3096]
	066 Move X9, 0x19E5000
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W10, TEMP
	070 Move X8, [X8]
	071 Move X9, [X9+3072]
	072 Move [X20+64], W10
	073 Move [X20+16], X8
	074 Move [X19+32], X20
	075 Move X0, [X9]
	076 Move X20, 0x19E5000
	077 Move X20, [X20+3064]
	078 Call 0x1C17F10
	079 Move X1, [X20]
	080 Move X20, X0
	081 Call 0x2735B10, X0
	082 Compare X20, 0
	083 JumpIfEqual {98}
	084 Move X8, 0x19E5000
	085 Move X8, [X8+3104]
	086 Move X0, X19
	087 Move X1, X31
	088 Move X8, [X8]
	089 Move [X20+64], W31
	090 Move [X20+16], X8
	091 Move [X19+40], X20
	092 Move X20, [X31+16]
	093 Move X19, [X31+24]
	094 Move X30, [X31+32]
	095 Move X21, [X31+40]
	096 Call BaseUxmlTraits..ctor, X0
	097 Return 
	098 Call 0x1C17F20

