Type: UnityEngine.UIElements.ReusableTreeViewItem

Method: UnityEngine.UIElements.VisualElement get_rootElement()

Disassembly:
	0x03CF9044 LDP X20, X19, [X31 + 0x20]
	0x03CF9048 LDR X3, [X8]
	0x03CF904C LDP X22, X21, [X31 + 0x10]
	0x03CF9050 MOV W2, W31
	0x03CF9054 LDP X30, X23, [X31], #0x30
	0x03CF9058 B 0x21A1534

ISIL:
	001 Move X8, X0
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Return X0
	006 Move X0, [X8+16]
	007 Return X0

Method: System.Void add_onPointerUp(System.Action`1<UnityEngine.UIElements.PointerUpEvent> value)

Disassembly:
	0x03CF31BC BLR X9
	0x03CF31C0 TBZ X0, 0x0, 0x3CF384C
	0x03CF31C4 MOV X0, X20
	0x03CF31C8 BL 0x3CF1324
	0x03CF31CC CBZ X0, 0x3CF38B0
	0x03CF31D0 LDR X0, [X0 + 0x4B0]
	0x03CF31D4 CBZ X0, 0x3CF38B4
	0x03CF31D8 ADRP X29, 0x404000
	0x03CF31DC LDR X29, [X29 + 0xB68]
	0x03CF31E0 LDR X2, [X29]
	0x03CF31E4 MOV W1, W24
	0x03CF31E8 BL 0x2FDCA84
	0x03CF31EC TBZ X0, 0x0, 0x3CF31F4
	0x03CF31F0 TBZ X22, 0x0, 0x3CF35F4
	0x03CF31F4 MOV X0, X20
	0x03CF31F8 MOV W1, W23
	0x03CF31FC STR W27, [X31 + 0x10]
	0x03CF3200 BL 0x3CF293C
	0x03CF3204 ADRP X8, 0x401000
	0x03CF3208 LDR X8, [X8 + 0xE30]
	0x03CF320C MOV X25, X0
	0x03CF3210 LDR X0, [X8]
	0x03CF3214 BL 0x1C16F10
	0x03CF3218 ADRP X8, 0x404000
	0x03CF321C LDR X8, [X8 + 0xB70]
	0x03CF3220 MOV X27, X0
	0x03CF3224 LDR X1, [X8]
	0x03CF3228 BL 0x2FDBF14
	0x03CF322C CBZ X25, 0x3CF38B8
	0x03CF3230 ADRP X10, 0x428000
	0x03CF3234 LDR X8, [X25]
	0x03CF3238 LDR X10, [X10 + 0x7B8]
	0x03CF323C LDRH W9, [X8 + 0x12E]
	0x03CF3240 LDR X1, [X10]
	0x03CF3244 CBZ X9, 0x3CF3268
	0x03CF3248 LDR X10, [X8 + 0xB0]
	0x03CF324C ADD X10, X10, 0x8
	0x03CF3250 LDUR X11, [X10 - 0x8]
	0x03CF3254 CMP X11, X1
	0x03CF3258 B.EQ 0x3CF3278
	0x03CF325C SUBS X9, X9, 0x1
	0x03CF3260 ADD X10, X10, 0x10
	0x03CF3264 B.NE 0x3CF3250
	0x03CF3268 MOV X0, X25

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6F5000
	009 Move W8, [X21+1977]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x470000
	017 Move X0, [X0+2888]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1977], W8
	021 Move X24, 0x470000
	022 Add X20, X20, 112
	023 Move X21, [X20]
	024 Move X24, [X24+2888]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onPointerUp(System.Action`1<UnityEngine.UIElements.PointerUpEvent> value)

Disassembly:
	0x03CF3030 ADD X0, X8, 0x138
	0x03CF3034 LDP X8, X1, [X0]
	0x03CF3038 MOV X0, X22
	0x03CF303C BLR X8
	0x03CF3040 CBNZ X23, 0x3CF304C
	0x03CF3044 MOV X0, X24
	0x03CF3048 BL 0x1D2C690
	0x03CF304C MOV X0, X23
	0x03CF3050 BL 0x1C16F18
	0x03CF3054 BL 0x1990590
	0x03CF3058 SUB X31, X31, 0xB0
	0x03CF305C STP X29, X30, [X31 + 0x50]
	0x03CF3060 STP X28, X27, [X31 + 0x60]
	0x03CF3064 STP X26, X25, [X31 + 0x70]
	0x03CF3068 STP X24, X23, [X31 + 0x80]
	0x03CF306C STP X22, X21, [X31 + 0x90]
	0x03CF3070 STP X20, X19, [X31 + 0xA0]
	0x03CF3074 ADRP X21, 0x6F4000
	0x03CF3078 ADRP X19, 0x46F000
	0x03CF307C LDRB W8, [X21 + 0x786]
	0x03CF3080 LDR X19, [X19 + 0xB98]
	0x03CF3084 MOV W27, W3
	0x03CF3088 MOV W22, W2
	0x03CF308C MOV W23, W1
	0x03CF3090 MOV X20, X0
	0x03CF3094 TBNZ X8, 0x0, 0x3CF313C
	0x03CF3098 ADRP X0, 0x46F000
	0x03CF309C LDR X0, [X0 + 0xB98]
	0x03CF30A0 BL 0x1C16CF4
	0x03CF30A4 ADRP X0, 0x401000
	0x03CF30A8 LDR X0, [X0 + 0xDF8]
	0x03CF30AC BL 0x1C16CF4
	0x03CF30B0 ADRP X0, 0x400000
	0x03CF30B4 LDR X0, [X0 + 0xE00]
	0x03CF30B8 BL 0x1C16CF4
	0x03CF30BC ADRP X0, 0x428000
	0x03CF30C0 LDR X0, [X0 + 0x7B8]
	0x03CF30C4 BL 0x1C16CF4
	0x03CF30C8 ADRP X0, 0x428000
	0x03CF30CC LDR X0, [X0 + 0x7C0]
	0x03CF30D0 BL 0x1C16CF4
	0x03CF30D4 ADRP X0, 0x400000
	0x03CF30D8 LDR X0, [X0 + 0xE18]
	0x03CF30DC BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6F5000
	009 Move W8, [X21+1978]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x470000
	017 Move X0, [X0+2888]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1978], W8
	021 Move X24, 0x470000
	022 Add X20, X20, 112
	023 Move X21, [X20]
	024 Move X24, [X24+2888]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_onToggleValueChanged(System.Action`1<UnityEngine.UIElements.ChangeEvent`1<System.Boolean>> value)

Disassembly:
	0x03CF326C MOV W2, W31
	0x03CF3270 BL 0x1C5C788
	0x03CF3274 B 0x3CF3284
	0x03CF3278 LDRSW X9, [X10]
	0x03CF327C ADD X8, X8, X9, 0x4, LSL
	0x03CF3280 ADD X0, X8, 0x138
	0x03CF3284 LDP X8, X1, [X0]
	0x03CF3288 MOV X0, X25
	0x03CF328C BLR X8
	0x03CF3290 MOV X28, X0
	0x03CF3294 STR W24, [X31 + 0x14]
	0x03CF3298 STR W22, [X31 + 0xC]
	0x03CF329C CBZ X0, 0x3CF38BC
	0x03CF32A0 ADRP X26, 0x400000
	0x03CF32A4 ADRP X21, 0x428000
	0x03CF32A8 ADRP X22, 0x401000
	0x03CF32AC ADRP X24, 0x401000
	0x03CF32B0 LDR X26, [X26 + 0xE18]
	0x03CF32B4 LDR X21, [X21 + 0x7C0]
	0x03CF32B8 LDR X22, [X22 + 0xDF8]
	0x03CF32BC LDR X24, [X24 + 0xE10]
	0x03CF32C0 LDR X8, [X28]
	0x03CF32C4 LDR X1, [X26]
	0x03CF32C8 LDRH W9, [X8 + 0x12E]
	0x03CF32CC CBZ X9, 0x3CF32F0
	0x03CF32D0 LDR X10, [X8 + 0xB0]
	0x03CF32D4 ADD X10, X10, 0x8
	0x03CF32D8 LDUR X11, [X10 - 0x8]
	0x03CF32DC CMP X11, X1
	0x03CF32E0 B.EQ 0x3CF3300
	0x03CF32E4 SUBS X9, X9, 0x1
	0x03CF32E8 ADD X10, X10, 0x10
	0x03CF32EC B.NE 0x3CF32D8
	0x03CF32F0 MOV X0, X28
	0x03CF32F4 MOV W2, W31
	0x03CF32F8 BL 0x1C5C788
	0x03CF32FC B 0x3CF330C
	0x03CF3300 LDRSW X9, [X10]
	0x03CF3304 ADD X8, X8, X9, 0x4, LSL
	0x03CF3308 ADD X0, X8, 0x138
	0x03CF330C LDP X8, X1, [X0]
	0x03CF3310 MOV X0, X28
	0x03CF3314 BLR X8
	0x03CF3318 TBZ X0, 0x0, 0x3CF33EC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6F5000
	009 Move W8, [X21+1979]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x470000
	017 Move X0, [X0+2880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1979], W8
	021 Move X24, 0x470000
	022 Add X20, X20, 120
	023 Move X21, [X20]
	024 Move X24, [X24+2880]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_onToggleValueChanged(System.Action`1<UnityEngine.UIElements.ChangeEvent`1<System.Boolean>> value)

Disassembly:
	0x03CF30E0 ADRP X0, 0x401000
	0x03CF30E4 LDR X0, [X0 + 0xE10]
	0x03CF30E8 BL 0x1C16CF4
	0x03CF30EC ADRP X0, 0x46F000
	0x03CF30F0 LDR X0, [X0 + 0xB28]
	0x03CF30F4 BL 0x1C16CF4
	0x03CF30F8 ADRP X0, 0x404000
	0x03CF30FC LDR X0, [X0 + 0xB68]
	0x03CF3100 BL 0x1C16CF4
	0x03CF3104 ADRP X0, 0x46F000
	0x03CF3108 LDR X0, [X0 + 0xBA0]
	0x03CF310C BL 0x1C16CF4
	0x03CF3110 ADRP X0, 0x404000
	0x03CF3114 LDR X0, [X0 + 0xB70]
	0x03CF3118 BL 0x1C16CF4
	0x03CF311C ADRP X0, 0x46F000
	0x03CF3120 LDR X0, [X0 + 0xB68]
	0x03CF3124 BL 0x1C16CF4
	0x03CF3128 ADRP X0, 0x401000
	0x03CF312C LDR X0, [X0 + 0xE30]
	0x03CF3130 BL 0x1C16CF4
	0x03CF3134 MOVZ W8, 0x1
	0x03CF3138 STRB W8, [X21 + 0x786]
	0x03CF313C LDR X0, [X19]
	0x03CF3140 STP X31, X31, [X31 + 0x30]
	0x03CF3144 STR X31, [X31 + 0x40]
	0x03CF3148 LDR W8, [X0 + 0xE0]
	0x03CF314C CBNZ W8, 0x3CF3158
	0x03CF3150 BL 0x1C16DFC
	0x03CF3154 LDR X0, [X19]
	0x03CF3158 LDR X8, [X0 + 0xB8]
	0x03CF315C MOV X1, X31
	0x03CF3160 MOV X2, X31
	0x03CF3164 LDR X19, [X8]
	0x03CF3168 MOV X0, X19
	0x03CF316C BL 0x33C5D2C
	0x03CF3170 TBZ X0, 0x0, 0x3CF3180
	0x03CF3174 MOV X0, X19
	0x03CF3178 MOV X1, X31
	0x03CF317C BL 0x3BFE970
	0x03CF3180 MOV X0, X20
	0x03CF3184 MOV W1, W23
	0x03CF3188 BL 0x3CF1E44
	0x03CF318C TBZ X0, 0x0, 0x3CF384C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6F5000
	009 Move W8, [X21+1980]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x470000
	017 Move X0, [X0+2880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1980], W8
	021 Move X24, 0x470000
	022 Add X20, X20, 120
	023 Move X21, [X20]
	024 Move X24, [X24+2880]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x03CF8F20 LDR X8, [X8 + 0x88]
	0x03CF8F24 ADRP X23, 0x46A000
	0x03CF8F28 MOV X0, X20
	0x03CF8F2C MOV X1, X21
	0x03CF8F30 LDR X3, [X8]
	0x03CF8F34 LDR X23, [X23 + 0xD20]
	0x03CF8F38 MOV W2, W31
	0x03CF8F3C BL 0x21A1534
	0x03CF8F40 MOV X0, X19
	0x03CF8F44 MOV X1, X31
	0x03CF8F48 BL 0x3DB9E70
	0x03CF8F4C LDR X8, [X22]
	0x03CF8F50 MOV X20, X0
	0x03CF8F54 MOV X0, X8
	0x03CF8F58 BL 0x1C16F10
	0x03CF8F5C LDR X2, [X23]
	0x03CF8F60 MOV X1, X19
	0x03CF8F64 MOV X3, X31
	0x03CF8F68 MOV X21, X0
	0x03CF8F6C BL 0x2D0E824
	0x03CF8F70 CBZ X20, 0x3CF905C
	0x03CF8F74 ADRP X8, 0x46A000
	0x03CF8F78 LDR X8, [X8 + 0xCF8]
	0x03CF8F7C ADRP X22, 0x46A000
	0x03CF8F80 ADRP X23, 0x46A000
	0x03CF8F84 MOV X0, X20
	0x03CF8F88 LDR X3, [X8]
	0x03CF8F8C LDR X22, [X22 + 0xD30]
	0x03CF8F90 LDR X23, [X23 + 0xD08]
	0x03CF8F94 MOV X1, X21
	0x03CF8F98 MOV W2, W31
	0x03CF8F9C BL 0x21A1534
	0x03CF8FA0 MOV X0, X19
	0x03CF8FA4 MOV X1, X31
	0x03CF8FA8 BL 0x3DB9E70
	0x03CF8FAC LDR X8, [X22]
	0x03CF8FB0 MOV X20, X0
	0x03CF8FB4 MOV X0, X8
	0x03CF8FB8 BL 0x1C16F10
	0x03CF8FBC LDR X2, [X23]
	0x03CF8FC0 MOV X1, X19
	0x03CF8FC4 MOV X3, X31
	0x03CF8FC8 MOV X21, X0
	0x03CF8FCC BL 0x2D0E824
	0x03CF8FD0 CBZ X20, 0x3CF905C
	0x03CF8FD4 ADRP X8, 0x46A000
	0x03CF8FD8 LDR X8, [X8 + 0xCF0]
	0x03CF8FDC ADRP X22, 0x46A000
	0x03CF8FE0 ADRP X23, 0x46A000
	0x03CF8FE4 MOV X0, X20
	0x03CF8FE8 LDR X3, [X8]
	0x03CF8FEC LDR X22, [X22 + 0xD28]
	0x03CF8FF0 LDR X23, [X23 + 0xD00]
	0x03CF8FF4 MOV X1, X21
	0x03CF8FF8 MOV W2, W31
	0x03CF8FFC BL 0x21A1534
	0x03CF9000 MOV X0, X19
	0x03CF9004 MOV X1, X31
	0x03CF9008 BL 0x3DB9E70
	0x03CF900C LDR X8, [X22]
	0x03CF9010 MOV X20, X0
	0x03CF9014 MOV X0, X8
	0x03CF9018 BL 0x1C16F10
	0x03CF901C LDR X2, [X23]
	0x03CF9020 MOV X1, X19
	0x03CF9024 MOV X3, X31
	0x03CF9028 MOV X21, X0
	0x03CF902C BL 0x2D0E824
	0x03CF9030 CBZ X20, 0x3CF905C
	0x03CF9034 ADRP X8, 0x469000
	0x03CF9038 LDR X8, [X8 + 0xCE8]
	0x03CF903C MOV X0, X20
	0x03CF9040 MOV X1, X21

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x6F0000
	011 Move X25, 0x426000
	012 Move X20, 0x46B000
	013 Move X24, 0x46B000
	014 Move X23, 0x46B000
	015 Move X22, 0x426000
	016 Move X21, 0x46B000
	017 Move X25, [X25+1928]
	018 Move W8, [X26+1981]
	019 Move X20, [X20+3224]
	020 Move X24, [X24+3232]
	021 Move X23, [X23+3240]
	022 Move X22, [X22+1632]
	023 Move X21, [X21+3248]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {49}
	029 Move X0, 0x46B000
	030 Move X0, [X0+3232]
	031 Call 0x1C17CF4
	032 Move X0, 0x426000
	033 Move X0, [X0+1632]
	034 Call 0x1C17CF4
	035 Move X0, 0x426000
	036 Move X0, [X0+1928]
	037 Call 0x1C17CF4
	038 Move X0, 0x46B000
	039 Move X0, [X0+3224]
	040 Call 0x1C17CF4
	041 Move X0, 0x46B000
	042 Move X0, [X0+3248]
	043 Call 0x1C17CF4
	044 Move X0, 0x46B000
	045 Move X0, [X0+3240]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X26+1981], W8
	049 Move X0, X19
	050 Call ReusableCollectionItem..ctor, X0
	051 Move X0, [X25]
	052 Call 0x1C17F10
	053 Move X2, [X20]
	054 Move X1, X19
	055 Move X3, X31
	056 Move X20, X0
	057 Call 0x2D0F824, X0, X1, X2
	058 Move [X19+136], X20
	059 Move X0, [X24]
	060 Call 0x1C17F10
	061 Move X2, [X23]
	062 Move X1, X19
	063 Move X3, X31
	064 Move X20, X0
	065 Call 0x2D0F824, X0, X1, X2
	066 Move [X19+144], X20
	067 Move X0, [X22]
	068 Call 0x1C17F10
	069 Move X2, [X21]
	070 Move X1, X19
	071 Move X3, X31
	072 Move X20, X0
	073 Call 0x2D0F824, X0, X1, X2
	074 Move [X19+152], X20
	075 Move X20, [X31+64]
	076 Move X19, [X31+72]
	077 Move X22, [X31+48]
	078 Move X21, [X31+56]
	079 Move X24, [X31+32]
	080 Move X23, [X31+40]
	081 Move X26, [X31+16]
	082 Move X25, [X31+24]
	083 Move X30, [X31+80]
	084 Return 

Method: System.Void Init(UnityEngine.UIElements.VisualElement item)

Disassembly:
	0x03CF905C BL 0x1C16F20
	0x03CF9060 STP X30, X23, [X31 - 0x30]!
	0x03CF9064 STP X22, X21, [X31 + 0x10]
	0x03CF9068 STP X20, X19, [X31 + 0x20]
	0x03CF906C ADRP X21, 0x6EE000
	0x03CF9070 ADRP X20, 0x3FA000
	0x03CF9074 LDRB W8, [X21 + 0x7C7]
	0x03CF9078 LDR X20, [X20 + 0x970]
	0x03CF907C MOV X19, X0
	0x03CF9080 TBNZ X8, 0x0, 0x3CF9134
	0x03CF9084 ADRP X0, 0x3FA000
	0x03CF9088 LDR X0, [X0 + 0x970]
	0x03CF908C BL 0x1C16CF4
	0x03CF9090 ADRP X0, 0x469000
	0x03CF9094 LDR X0, [X0 + 0xD38]
	0x03CF9098 BL 0x1C16CF4
	0x03CF909C ADRP X0, 0x469000
	0x03CF90A0 LDR X0, [X0 + 0xD40]
	0x03CF90A4 BL 0x1C16CF4
	0x03CF90A8 ADRP X0, 0x469000
	0x03CF90AC LDR X0, [X0 + 0xA18]
	0x03CF90B0 BL 0x1C16CF4
	0x03CF90B4 ADRP X0, 0x469000
	0x03CF90B8 LDR X0, [X0 + 0xA28]
	0x03CF90BC BL 0x1C16CF4
	0x03CF90C0 ADRP X0, 0x469000
	0x03CF90C4 LDR X0, [X0 + 0xD00]
	0x03CF90C8 BL 0x1C16CF4
	0x03CF90CC ADRP X0, 0x469000
	0x03CF90D0 LDR X0, [X0 + 0xD08]
	0x03CF90D4 BL 0x1C16CF4
	0x03CF90D8 ADRP X0, 0x469000
	0x03CF90DC LDR X0, [X0 + 0xD10]
	0x03CF90E0 BL 0x1C16CF4
	0x03CF90E4 ADRP X0, 0x469000
	0x03CF90E8 LDR X0, [X0 + 0xD18]
	0x03CF90EC BL 0x1C16CF4
	0x03CF90F0 ADRP X0, 0x469000
	0x03CF90F4 LDR X0, [X0 + 0xD20]
	0x03CF90F8 BL 0x1C16CF4
	0x03CF90FC ADRP X0, 0x469000
	0x03CF9100 LDR X0, [X0 + 0x9F0]
	0x03CF9104 BL 0x1C16CF4
	0x03CF9108 ADRP X0, 0x469000
	0x03CF910C LDR X0, [X0 + 0xD28]
	0x03CF9110 BL 0x1C16CF4
	0x03CF9114 ADRP X0, 0x469000
	0x03CF9118 LDR X0, [X0 + 0xD30]
	0x03CF911C BL 0x1C16CF4
	0x03CF9120 ADRP X0, 0x425000
	0x03CF9124 LDR X0, [X0 + 0xB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x6EF000
	008 Move X21, 0x423000
	009 Move X22, 0x46A000
	010 Move W8, [X23+1982]
	011 Move X21, [X21+2200]
	012 Move X22, [X22+2816]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x46A000
	020 Move X0, [X0+2816]
	021 Call 0x1C17CF4
	022 Move X0, 0x423000
	023 Move X0, [X0+2200]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1982], W8
	027 Move [X20+16], X19
	028 Move X0, [X21]
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X21, X0
	032 Call VisualElement..ctor, X0
	033 Move X0, [X22]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Compare X21, 0
	039 JumpIfEqual {63}
	040 Move X8, [X22]
	041 Move X0, X21
	042 Move X2, X31
	043 Move X8, [X8+184]
	044 Move X1, [X8+8]
	045 Call VisualElement.set_name, X0, X1
	046 Move X8, [X22]
	047 Move X0, X21
	048 Move X2, X31
	049 Move X8, [X8+184]
	050 Move X1, [X8+8]
	051 Call VisualElement.AddToClassList, X0, X1
	052 Move X0, X20
	053 Move X1, X21
	054 Move X2, X19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Move X23, [X31+56]
	061 Call ReusableTreeViewItem.InitExpandHierarchy, X0, X1, X2
	062 Return 
	063 Call 0x1C17F20

Method: System.Void InitExpandHierarchy(UnityEngine.UIElements.VisualElement root, UnityEngine.UIElements.VisualElement item)

Disassembly:
	0x03CF8A70 MOV X0, X20
	0x03CF8A74 MOV W2, W31
	0x03CF8A78 BL 0x1C5C788
	0x03CF8A7C B 0x3CF8A8C
	0x03CF8A80 LDRSW X9, [X10]
	0x03CF8A84 ADD X8, X8, X9, 0x4, LSL
	0x03CF8A88 ADD X0, X8, 0x138
	0x03CF8A8C LDP X8, X1, [X0]
	0x03CF8A90 MOV X0, X20
	0x03CF8A94 BLR X8
	0x03CF8A98 CBNZ X23, 0x3CF8B44
	0x03CF8A9C CMP W24, 0x6
	0x03CF8AA0 B.EQ 0x3CF8AA8
	0x03CF8AA4 CBNZ W24, 0x3CF8B30
	0x03CF8AA8 ADRP X20, 0x3FB000
	0x03CF8AAC LDR X20, [X20 + 0x970]
	0x03CF8AB0 LDR X0, [X20]
	0x03CF8AB4 LDR W8, [X0 + 0xE0]
	0x03CF8AB8 CBNZ W8, 0x3CF8AC0
	0x03CF8ABC BL 0x1C16DFC
	0x03CF8AC0 MOV X0, X31
	0x03CF8AC4 BL 0x3C01AB0
	0x03CF8AC8 CBZ W0, 0x3CF8AEC
	0x03CF8ACC LDR X0, [X20]
	0x03CF8AD0 LDR W8, [X0 + 0xE0]
	0x03CF8AD4 CBNZ W8, 0x3CF8ADC
	0x03CF8AD8 BL 0x1C16DFC
	0x03CF8ADC MOV X0, X31
	0x03CF8AE0 BL 0x3C01AB0
	0x03CF8AE4 CMP W0, 0x1
	0x03CF8AE8 B.NE 0x3CF8B30
	0x03CF8AEC MOVZ W8, 0x1
	0x03CF8AF0 STRB W8, [X19 + 0x10]
	0x03CF8AF4 TBNZ X22, 0x1F, 0x3CF8B30
	0x03CF8AF8 ADRP X8, 0x423000
	0x03CF8AFC LDR X8, [X8 + 0x958]
	0x03CF8B00 LDR X0, [X8]
	0x03CF8B04 LDR W8, [X0 + 0xE0]
	0x03CF8B08 CBNZ W8, 0x3CF8B10
	0x03CF8B0C BL 0x1C16DFC
	0x03CF8B10 MOV W0, W21
	0x03CF8B14 MOV W1, W22
	0x03CF8B18 LDP X20, X19, [X31 + 0x30]
	0x03CF8B1C LDP X22, X21, [X31 + 0x20]
	0x03CF8B20 LDP X24, X23, [X31 + 0x10]
	0x03CF8B24 MOV X2, X31
	0x03CF8B28 LDP X30, X25, [X31], #0x40
	0x03CF8B2C B 0x3DA5E70
	0x03CF8B30 LDP X20, X19, [X31 + 0x30]
	0x03CF8B34 LDP X22, X21, [X31 + 0x20]
	0x03CF8B38 LDP X24, X23, [X31 + 0x10]
	0x03CF8B3C LDP X30, X25, [X31], #0x40
	0x03CF8B40 RET
	0x03CF8B44 MOV X0, X23
	0x03CF8B48 BL 0x1C16F18
	0x03CF8B4C BL 0x1C16F20
	0x03CF8B50 B 0x3CF8B6C
	0x03CF8B54 MOV X24, X0
	0x03CF8B58 MOV W22, W31
	0x03CF8B5C B 0x3CF8B78
	0x03CF8B60 B 0x3CF8B6C
	0x03CF8B64 MOV X24, X0
	0x03CF8B68 B 0x3CF8B78
	0x03CF8B6C MOV X24, X0
	0x03CF8B70 MOV W22, W31
	0x03CF8B74 MOV W21, W31
	0x03CF8B78 CMP W1, 0x1
	0x03CF8B7C B.NE 0x3CF8B9C
	0x03CF8B80 MOV X0, X24
	0x03CF8B84 BL 0x3EB1AD0
	0x03CF8B88 LDR X23, [X0]
	0x03CF8B8C BL 0x3EB1AE0
	0x03CF8B90 MOV W24, W31
	0x03CF8B94 CBNZ X20, 0x3CF8A40
	0x03CF8B98 B 0x3CF8A98
	0x03CF8B9C MOV X23, X31
	0x03CF8BA0 B 0x3CF8BA8
	0x03CF8BA4 MOV X24, X0
	0x03CF8BA8 CBZ X20, 0x3CF8C04
	0x03CF8BAC LDR X8, [X20]
	0x03CF8BB0 LDR X1, [X25]
	0x03CF8BB4 LDRH W9, [X8 + 0x12E]
	0x03CF8BB8 CBZ X9, 0x3CF8BDC
	0x03CF8BBC LDR X10, [X8 + 0xB0]
	0x03CF8BC0 ADD X10, X10, 0x8
	0x03CF8BC4 LDUR X11, [X10 - 0x8]
	0x03CF8BC8 CMP X11, X1
	0x03CF8BCC B.EQ 0x3CF8BEC
	0x03CF8BD0 SUBS X9, X9, 0x1
	0x03CF8BD4 ADD X10, X10, 0x10
	0x03CF8BD8 B.NE 0x3CF8BC4
	0x03CF8BDC MOV X0, X20
	0x03CF8BE0 MOV W2, W31
	0x03CF8BE4 BL 0x1C5C788
	0x03CF8BE8 B 0x3CF8BF8
	0x03CF8BEC LDRSW X9, [X10]
	0x03CF8BF0 ADD X8, X8, X9, 0x4, LSL
	0x03CF8BF4 ADD X0, X8, 0x138
	0x03CF8BF8 LDP X8, X1, [X0]
	0x03CF8BFC MOV X0, X20
	0x03CF8C00 BLR X8
	0x03CF8C04 CBNZ X23, 0x3CF8C10
	0x03CF8C08 MOV X0, X24
	0x03CF8C0C BL 0x1D2C690
	0x03CF8C10 MOV X0, X23
	0x03CF8C14 BL 0x1C16F18
	0x03CF8C18 BL 0x1990590
	0x03CF8C1C STP X30, X21, [X31 - 0x20]!
	0x03CF8C20 STP X20, X19, [X31 + 0x10]
	0x03CF8C24 ADRP X21, 0x6EF000
	0x03CF8C28 LDRB W8, [X21 + 0x7C5]
	0x03CF8C2C MOV X20, X1
	0x03CF8C30 MOV X19, X0
	0x03CF8C34 TBNZ X8, 0x0, 0x3CF8C58
	0x03CF8C38 ADRP X0, 0x3FB000
	0x03CF8C3C LDR X0, [X0 + 0x970]
	0x03CF8C40 BL 0x1C16CF4
	0x03CF8C44 ADRP X0, 0x46A000
	0x03CF8C48 LDR X0, [X0 + 0x950]
	0x03CF8C4C BL 0x1C16CF4
	0x03CF8C50 MOVZ W8, 0x1
	0x03CF8C54 STRB W8, [X21 + 0x7C5]
	0x03CF8C58 MOV X0, X19
	0x03CF8C5C MOV X1, X31
	0x03CF8C60 BL 0x3DBAE7C
	0x03CF8C64 LDR X0, [X19 + 0x18]
	0x03CF8C68 STR X20, [X19 + 0x30]
	0x03CF8C6C CBZ X0, 0x3CF8D94
	0x03CF8C70 ADRP X20, 0x46A000
	0x03CF8C74 LDR X20, [X20 + 0x950]
	0x03CF8C78 LDR W9, [X0 + 0x1C]
	0x03CF8C7C LDR X8, [X0 + 0x10]
	0x03CF8C80 LDR X10, [X20]
	0x03CF8C84 ADD W9, W9, 0x1
	0x03CF8C88 STR W9, [X0 + 0x1C]
	0x03CF8C8C CBZ X8, 0x3CF8D94
	0x03CF8C90 LDRSW X9, [X0 + 0x18]
	0x03CF8C94 LDR W11, [X8 + 0x18]
	0x03CF8C98 ADRP X21, 0x3FB000
	0x03CF8C9C LDR X21, [X21 + 0x970]
	0x03CF8CA0 CMP W9, W11
	0x03CF8CA4 B.CS 0x3CF8CC8
	0x03CF8CA8 MOVZ W11, 0xC
	0x03CF8CAC ADD W10, W9, 0x1
	0x03CF8CB0 MOVZ W12, 0x1
	0x03CF8CB4 MADD X8, X9, X11, X8
	0x03CF8CB8 STR W10, [X0 + 0x18]
	0x03CF8CBC STR X12, [X8 + 0x20]
	0x03CF8CC0 STR W31, [X8 + 0x28]
	0x03CF8CC4 B 0x3CF8CE0
	0x03CF8CC8 LDR X8, [X10 + 0x20]
	0x03CF8CCC MOVZ W1, 0x1
	0x03CF8CD0 MOV X2, X31
	0x03CF8CD4 LDR X8, [X8 + 0xC0]
	0x03CF8CD8 LDR X3, [X8 + 0x70]
	0x03CF8CDC BL 0x2FF57C0
	0x03CF8CE0 LDR X0, [X21]
	0x03CF8CE4 LDR W8, [X0 + 0xE0]
	0x03CF8CE8 CBNZ W8, 0x3CF8CF0
	0x03CF8CEC BL 0x1C16DFC
	0x03CF8CF0 MOV X0, X31
	0x03CF8CF4 BL 0x3C01AB0
	0x03CF8CF8 CBZ W0, 0x3CF8D1C
	0x03CF8CFC LDR X0, [X21]
	0x03CF8D00 LDR W8, [X0 + 0xE0]
	0x03CF8D04 CBNZ W8, 0x3CF8D0C
	0x03CF8D08 BL 0x1C16DFC
	0x03CF8D0C MOV X0, X31
	0x03CF8D10 BL 0x3C01AB0
	0x03CF8D14 CMP W0, 0x1
	0x03CF8D18 B.NE 0x3CF8D68
	0x03CF8D1C LDR X0, [X19 + 0x18]
	0x03CF8D20 CBZ X0, 0x3CF8D94
	0x03CF8D24 LDR W9, [X0 + 0x1C]
	0x03CF8D28 LDR X8, [X0 + 0x10]
	0x03CF8D2C LDR X10, [X20]
	0x03CF8D30 ADD W9, W9, 0x1
	0x03CF8D34 STR W9, [X0 + 0x1C]
	0x03CF8D38 CBZ X8, 0x3CF8D94
	0x03CF8D3C LDRSW X9, [X0 + 0x18]
	0x03CF8D40 LDR W11, [X8 + 0x18]
	0x03CF8D44 CMP W9, W11
	0x03CF8D48 B.CS 0x3CF8D74
	0x03CF8D4C MOVZ W11, 0xC
	0x03CF8D50 ADD W10, W9, 0x1
	0x03CF8D54 MOVZ X12, 0x2
	0x03CF8D58 MADD X8, X9, X11, X8
	0x03CF8D5C STR W10, [X0 + 0x18]
	0x03CF8D60 STR X12, [X8 + 0x20]
	0x03CF8D64 STR W31, [X8 + 0x28]
	0x03CF8D68 LDP X20, X19, [X31 + 0x10]
	0x03CF8D6C LDP X30, X21, [X31], #0x20
	0x03CF8D70 RET
	0x03CF8D74 LDR X8, [X10 + 0x20]
	0x03CF8D78 LDP X20, X19, [X31 + 0x10]
	0x03CF8D7C MOVZ X1, 0x2
	0x03CF8D80 MOV X2, X31
	0x03CF8D84 LDR X8, [X8 + 0xC0]
	0x03CF8D88 LDR X3, [X8 + 0x70]
	0x03CF8D8C LDP X30, X21, [X31], #0x20
	0x03CF8D90 B 0x2FF57C0
	0x03CF8D94 BL 0x1C16F20
	0x03CF8D98 STP X30, X23, [X31 - 0x30]!
	0x03CF8D9C STP X22, X21, [X31 + 0x10]
	0x03CF8DA0 STP X20, X19, [X31 + 0x20]
	0x03CF8DA4 ADRP X21, 0x6EF000
	0x03CF8DA8 ADRP X20, 0x3FB000
	0x03CF8DAC LDRB W8, [X21 + 0x7C6]
	0x03CF8DB0 LDR X20, [X20 + 0x970]
	0x03CF8DB4 MOV X19, X0
	0x03CF8DB8 TBNZ X8, 0x0, 0x3CF8E6C
	0x03CF8DBC ADRP X0, 0x3FB000
	0x03CF8DC0 LDR X0, [X0 + 0x970]
	0x03CF8DC4 BL 0x1C16CF4
	0x03CF8DC8 ADRP X0, 0x46A000
	0x03CF8DCC LDR X0, [X0 + 0xCE8]
	0x03CF8DD0 BL 0x1C16CF4
	0x03CF8DD4 ADRP X0, 0x46A000
	0x03CF8DD8 LDR X0, [X0 + 0xCF0]
	0x03CF8DDC BL 0x1C16CF4
	0x03CF8DE0 ADRP X0, 0x426000
	0x03CF8DE4 LDR X0, [X0 + 0x88]
	0x03CF8DE8 BL 0x1C16CF4
	0x03CF8DEC ADRP X0, 0x46A000
	0x03CF8DF0 LDR X0, [X0 + 0xCF8]
	0x03CF8DF4 BL 0x1C16CF4
	0x03CF8DF8 ADRP X0, 0x46A000
	0x03CF8DFC LDR X0, [X0 + 0xD00]
	0x03CF8E00 BL 0x1C16CF4
	0x03CF8E04 ADRP X0, 0x46A000
	0x03CF8E08 LDR X0, [X0 + 0xD08]
	0x03CF8E0C BL 0x1C16CF4
	0x03CF8E10 ADRP X0, 0x46A000
	0x03CF8E14 LDR X0, [X0 + 0xD10]
	0x03CF8E18 BL 0x1C16CF4
	0x03CF8E1C ADRP X0, 0x46A000
	0x03CF8E20 LDR X0, [X0 + 0xD18]
	0x03CF8E24 BL 0x1C16CF4
	0x03CF8E28 ADRP X0, 0x46A000
	0x03CF8E2C LDR X0, [X0 + 0xD20]
	0x03CF8E30 BL 0x1C16CF4
	0x03CF8E34 ADRP X0, 0x46A000
	0x03CF8E38 LDR X0, [X0 + 0x9F0]
	0x03CF8E3C BL 0x1C16CF4
	0x03CF8E40 ADRP X0, 0x46A000
	0x03CF8E44 LDR X0, [X0 + 0xD28]
	0x03CF8E48 BL 0x1C16CF4
	0x03CF8E4C ADRP X0, 0x46A000
	0x03CF8E50 LDR X0, [X0 + 0xD30]
	0x03CF8E54 BL 0x1C16CF4
	0x03CF8E58 ADRP X0, 0x426000
	0x03CF8E5C LDR X0, [X0 + 0xB0]
	0x03CF8E60 BL 0x1C16CF4
	0x03CF8E64 MOVZ W8, 0x1
	0x03CF8E68 STRB W8, [X21 + 0x7C6]
	0x03CF8E6C LDR X0, [X20]
	0x03CF8E70 LDR W8, [X0 + 0xE0]
	0x03CF8E74 CBNZ W8, 0x3CF8E7C
	0x03CF8E78 BL 0x1C16DFC
	0x03CF8E7C ADRP X22, 0x46A000
	0x03CF8E80 LDR X22, [X22 + 0x9F0]
	0x03CF8E84 MOV X0, X31
	0x03CF8E88 BL 0x3C01AB0
	0x03CF8E8C CBZ W0, 0x3CF8EDC
	0x03CF8E90 LDR X0, [X20]
	0x03CF8E94 LDR W8, [X0 + 0xE0]
	0x03CF8E98 CBNZ W8, 0x3CF8EA0
	0x03CF8E9C BL 0x1C16DFC
	0x03CF8EA0 MOV X0, X31
	0x03CF8EA4 BL 0x3C01AB0
	0x03CF8EA8 MOV W20, W0
	0x03CF8EAC MOV X0, X19
	0x03CF8EB0 MOV X1, X31
	0x03CF8EB4 BL 0x3DB9E70
	0x03CF8EB8 CMP W20, 0x1
	0x03CF8EBC MOV X20, X0
	0x03CF8EC0 B.EQ 0x3CF8EEC
	0x03CF8EC4 LDR X0, [X22]
	0x03CF8EC8 BL 0x1C16F10
	0x03CF8ECC ADRP X8, 0x46A000
	0x03CF8ED0 LDR X8, [X8 + 0xD18]
	0x03CF8ED4 LDR X2, [X8]
	0x03CF8ED8 B 0x3CF8F60
	0x03CF8EDC MOV X0, X19
	0x03CF8EE0 MOV X1, X31
	0x03CF8EE4 BL 0x3DB9E70
	0x03CF8EE8 MOV X20, X0
	0x03CF8EEC ADRP X8, 0x426000
	0x03CF8EF0 LDR X8, [X8 + 0xB0]
	0x03CF8EF4 ADRP X21, 0x46A000
	0x03CF8EF8 LDR X0, [X8]
	0x03CF8EFC LDR X21, [X21 + 0xD10]
	0x03CF8F00 BL 0x1C16F10
	0x03CF8F04 LDR X2, [X21]
	0x03CF8F08 MOV X1, X19
	0x03CF8F0C MOV X3, X31
	0x03CF8F10 MOV X21, X0
	0x03CF8F14 BL 0x2D0E824
	0x03CF8F18 CBZ X20, 0x3CF905C

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x6F0000
	013 Move W8, [X22+1983]
	014 Move X19, X2
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0x46B000
	022 Move X0, [X0+3200]
	023 Call 0x1C17CF4
	024 Move X0, 0x46B000
	025 Move X0, [X0+2816]
	026 Call 0x1C17CF4
	027 Move X0, 0x46B000
	028 Move X0, [X0+3208]
	029 Call 0x1C17CF4
	030 Move X0, 0x425000
	031 Move X0, [X0+296]
	032 Call 0x1C17CF4
	033 Move X0, 0x46B000
	034 Move X0, [X0+3216]
	035 Call 0x1C17CF4
	036 Move X0, 0x46B000
	037 Move X0, [X0+2944]
	038 Call 0x1C17CF4
	039 Move X0, 0x425000
	040 Move X0, [X0+2096]
	041 Call 0x1C17CF4
	042 Move X0, 0x424000
	043 Move X0, [X0+2200]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X22+1983], W8
	047 Move [X31+8], X31
	048 Move [X20+80], X21
	049 Compare X21, 0
	050 JumpIfEqual {329}
	051 Move X23, 0x46B000
	052 Move X23, [X23+3216]
	053 Move X0, X21
	054 Move X1, X31
	055 Call VisualElement.get_style, X0
	056 Move X1, [X23]
	057 Move X21, X0
	058 Move W0, 2
	059 Call 0x266FACC, X0
	060 Compare X21, 0
	061 JumpIfEqual {329}
	062 Move X25, 0x425000
	063 Move X8, [X21]
	064 Move X25, [X25+296]
	065 Move X26, 0x424000
	066 Move X24, 0x46B000
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X1, [X25]
	069 Move X26, [X26+2200]
	070 Move X24, [X24+2816]
	071 Move X22, X0
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 20
	081 Move X0, X21
	082 Call 0x1C5D788
	083 Move W9, [X10]
	084 Add W9, W9, 20
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X2, [X0+8]
	089 Move X0, X21
	090 Move X1, X22
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X0, [X26]
	093 Call 0x1C17F10
	094 Move X1, X31
	095 Move X21, X0
	096 Call VisualElement..ctor, X0
	097 Move X0, [X24]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Compare X21, 0
	103 JumpIfEqual {329}
	104 Move X8, [X24]
	105 Move X0, X21
	106 Move X2, X31
	107 Move X8, [X8+184]
	108 Move X1, [X8+32]
	109 Call VisualElement.set_name, X0, X1
	110 Move X0, X21
	111 Move X1, X31
	112 Call VisualElement.get_style, X0
	113 Move X1, [X23]
	114 Move X22, X0
	115 Move W0, 2
	116 Call 0x266FACC, X0
	117 Compare X22, 0
	118 JumpIfEqual {329}
	119 Move X8, [X22]
	120 Move X1, [X25]
	121 Move X23, X0
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Compare X9, 0
	124 JumpIfEqual {131}
	125 Move X10, [X8+176]
	126 Add X10, X10, 8
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Subtract X9, X9, 1
	130 Add X10, X10, 16
	131 Move W2, 20
	132 Move X0, X22
	133 Call 0x1C5D788
	134 Move W9, [X10]
	135 Add W9, W9, 20
	136 Add X8, X8, W9
	137 Add X0, X8, 312
	138 Move X8, [X0]
	139 Move X2, [X0+8]
	140 Move X0, X22
	141 Move X1, X23
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X8, [X20+80]
	144 Move [X20+88], X21
	145 Compare X8, 0
	146 JumpIfEqual {329}
	147 Move X8, [X8+888]
	148 Move X22, 0x46B000
	149 Move X22, [X22+2944]
	150 Add X0, X31, 8
	151 Move X1, X21
	152 Move X2, X31
	153 Move [X31+8], X8
	154 Call Hierarchy.Add, X0, X1
	155 Move X0, [X22]
	156 Call 0x1C17F10
	157 Move X1, X31
	158 Move X21, X0
	159 Call Toggle..ctor, X0
	160 Compare X21, 0
	161 JumpIfEqual {329}
	162 Move X8, [X24]
	163 Move X23, 0x46B000
	164 Move X0, X21
	165 Move X2, X31
	166 Move X8, [X8+184]
	167 Move X1, [X8+16]
	168 Move X23, [X23+3208]
	169 Call VisualElement.set_name, X0, X1
	170 Move X0, X21
	171 Move X1, X20
	172 Move X2, X31
	173 Call VisualElement.set_userData, X0, X1
	174 Move [X20+72], X21
	175 Move X0, [X23]
	176 Move W8, [X0+224]
	177 Compare W8, 0
	178 JumpIfNotEqual {181}
	179 Call 0x1C17DFC
	180 Move X0, [X23]
	181 Move X8, [X0+184]
	182 Move X0, X21
	183 Move X2, X31
	184 Move X1, [X8+8]
	185 Call VisualElement.AddToClassList, X0, X1
	186 Move X0, [X20+72]
	187 Compare X0, 0
	188 JumpIfEqual {329}
	189 Move X8, [X24]
	190 Move X2, X31
	191 Move X8, [X8+184]
	192 Move X1, [X8+16]
	193 Call VisualElement.AddToClassList, X0, X1
	194 Move X0, [X20+72]
	195 Compare X0, 0
	196 JumpIfEqual {329}
	197 Move X21, 0x46B000
	198 Move X21, [X21+3200]
	199 Move X1, [X21]
	200 Call 0x2773DDC, X0
	201 Compare X0, 0
	202 JumpIfEqual {329}
	203 Move X8, [X23]
	204 Move X2, X31
	205 Move X8, [X8+184]
	206 Move X1, [X8+24]
	207 Call VisualElement.AddToClassList, X0, X1
	208 Move X0, [X20+72]
	209 Compare X0, 0
	210 JumpIfEqual {329}
	211 Move X1, [X21]
	212 Move X27, 0x425000
	213 Move X27, [X27+2096]
	214 Call 0x2773DDC, X0
	215 Move X8, [X22]
	216 Move X21, X0
	217 Move W9, [X8+224]
	218 Compare W9, 0
	219 JumpIfNotEqual {223}
	220 Move X0, X8
	221 Call 0x1C17DFC
	222 Move X8, [X22]
	223 Move X0, [X27]
	224 Move X8, [X8+184]
	225 Move W9, [X0+224]
	226 Move X22, [X8+32]
	227 Compare W9, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move X0, X21
	231 Move X1, X31
	232 Move X2, X22
	233 Move X3, X31
	234 Call UQueryExtensions.Q, X0, X1, X2
	235 Move [X20+104], X0
	236 Compare X0, 0
	237 JumpIfEqual {329}
	238 Move X8, [X23]
	239 Move X2, X31
	240 Move X8, [X8+184]
	241 Move X1, [X8+32]
	242 Call VisualElement.AddToClassList, X0, X1
	243 Move X8, [X20+80]
	244 Compare X8, 0
	245 JumpIfEqual {329}
	246 Move X8, [X8+888]
	247 Add X0, X31, 8
	248 Move X2, X31
	249 Move [X31+8], X8
	250 Move X1, [X20+72]
	251 Call Hierarchy.Add, X0, X1
	252 Move X0, [X26]
	253 Call 0x1C17F10
	254 Move X1, X31
	255 Move X21, X0
	256 Call VisualElement..ctor, X0
	257 Compare X21, 0
	258 JumpIfEqual {329}
	259 Move X8, [X24]
	260 Move X0, X21
	261 Move X2, X31
	262 Move X8, [X8+184]
	263 Move X1, [X8+40]
	264 Call VisualElement.set_name, X0, X1
	265 Move X0, X21
	266 Move X1, X31
	267 Call VisualElement.get_style, X0
	268 Move X22, X0
	269 Move S0, 1
	270 Move X0, X31
	271 Call StyleFloat.op_Implicit, V0
	272 Compare X22, 0
	273 JumpIfEqual {329}
	274 Move X8, [X22]
	275 Move X1, [X25]
	276 Move X23, X0
	277 NotImplemented "Instruction LDRH not yet implemented."
	278 Compare X9, 0
	279 JumpIfEqual {286}
	280 Move X10, [X8+176]
	281 Add X10, X10, 8
	282 NotImplemented "Instruction LDUR not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Subtract X9, X9, 1
	285 Add X10, X10, 16
	286 Move W2, 21
	287 Move X0, X22
	288 Call 0x1C5D788
	289 Move W9, [X10]
	290 Add W9, W9, 21
	291 Add X8, X8, W9
	292 Add X0, X8, 312
	293 Move X8, [X0]
	294 Move X2, [X0+8]
	295 Move X0, X22
	296 Move X1, X23
	297 NotImplemented "Instruction BLR not yet implemented."
	298 Move [X20+96], X21
	299 Move X8, [X24]
	300 Move X0, X21
	301 Move X2, X31
	302 Move X8, [X8+184]
	303 Move X1, [X8+40]
	304 Call VisualElement.AddToClassList, X0, X1
	305 Move X0, [X20+80]
	306 Compare X0, 0
	307 JumpIfEqual {329}
	308 Move X1, [X20+96]
	309 Move X2, X31
	310 Call VisualElement.Add, X0, X1
	311 Move X0, [X20+96]
	312 Compare X0, 0
	313 JumpIfEqual {329}
	314 Move X1, X19
	315 Move X2, X31
	316 Call VisualElement.Add, X0, X1
	317 Move X20, [X31+80]
	318 Move X19, [X31+88]
	319 Move X22, [X31+64]
	320 Move X21, [X31+72]
	321 Move X24, [X31+48]
	322 Move X23, [X31+56]
	323 Move X26, [X31+32]
	324 Move X25, [X31+40]
	325 Move X30, [X31+16]
	326 Move X27, [X31+24]
	327 Add X31, X31, 96
	328 Return 
	329 Call 0x1C17F20

Method: System.Void PreAttachElement()

Disassembly:
	0x03CF9128 BL 0x1C16CF4
	0x03CF912C MOVZ W8, 0x1
	0x03CF9130 STRB W8, [X21 + 0x7C7]
	0x03CF9134 LDR X0, [X20]
	0x03CF9138 LDR W8, [X0 + 0xE0]
	0x03CF913C CBNZ W8, 0x3CF9144
	0x03CF9140 BL 0x1C16DFC
	0x03CF9144 ADRP X22, 0x469000
	0x03CF9148 LDR X22, [X22 + 0x9F0]
	0x03CF914C MOV X0, X31
	0x03CF9150 BL 0x3C01AB0
	0x03CF9154 CBZ W0, 0x3CF91A4
	0x03CF9158 LDR X0, [X20]
	0x03CF915C LDR W8, [X0 + 0xE0]
	0x03CF9160 CBNZ W8, 0x3CF9168
	0x03CF9164 BL 0x1C16DFC
	0x03CF9168 MOV X0, X31
	0x03CF916C BL 0x3C01AB0
	0x03CF9170 MOV W20, W0
	0x03CF9174 MOV X0, X19
	0x03CF9178 MOV X1, X31
	0x03CF917C BL 0x3DB9E70
	0x03CF9180 CMP W20, 0x1
	0x03CF9184 MOV X20, X0
	0x03CF9188 B.EQ 0x3CF91B4
	0x03CF918C LDR X0, [X22]
	0x03CF9190 BL 0x1C16F10
	0x03CF9194 ADRP X8, 0x469000
	0x03CF9198 LDR X8, [X8 + 0xD18]
	0x03CF919C LDR X2, [X8]
	0x03CF91A0 B 0x3CF9228
	0x03CF91A4 MOV X0, X19
	0x03CF91A8 MOV X1, X31
	0x03CF91AC BL 0x3DB9E70
	0x03CF91B0 MOV X20, X0
	0x03CF91B4 ADRP X8, 0x425000
	0x03CF91B8 LDR X8, [X8 + 0xB0]
	0x03CF91BC ADRP X21, 0x469000
	0x03CF91C0 LDR X0, [X8]
	0x03CF91C4 LDR X21, [X21 + 0xD10]
	0x03CF91C8 BL 0x1C16F10
	0x03CF91CC LDR X2, [X21]
	0x03CF91D0 MOV X1, X19
	0x03CF91D4 MOV X3, X31
	0x03CF91D8 MOV X21, X0
	0x03CF91DC BL 0x2D0E824
	0x03CF91E0 CBZ X20, 0x3CF9324
	0x03CF91E4 ADRP X8, 0x469000
	0x03CF91E8 LDR X8, [X8 + 0xA18]
	0x03CF91EC ADRP X23, 0x469000
	0x03CF91F0 MOV X0, X20
	0x03CF91F4 MOV X1, X21
	0x03CF91F8 LDR X3, [X8]
	0x03CF91FC LDR X23, [X23 + 0xD20]
	0x03CF9200 MOV W2, W31
	0x03CF9204 BL 0x21A18B4
	0x03CF9208 MOV X0, X19
	0x03CF920C MOV X1, X31
	0x03CF9210 BL 0x3DB9E70
	0x03CF9214 LDR X8, [X22]
	0x03CF9218 MOV X20, X0
	0x03CF921C MOV X0, X8
	0x03CF9220 BL 0x1C16F10
	0x03CF9224 LDR X2, [X23]
	0x03CF9228 MOV X1, X19
	0x03CF922C MOV X3, X31
	0x03CF9230 MOV X21, X0
	0x03CF9234 BL 0x2D0E824
	0x03CF9238 CBZ X20, 0x3CF9324
	0x03CF923C ADRP X8, 0x469000
	0x03CF9240 LDR X8, [X8 + 0xA28]
	0x03CF9244 ADRP X22, 0x469000
	0x03CF9248 ADRP X23, 0x469000
	0x03CF924C MOV X0, X20
	0x03CF9250 LDR X3, [X8]
	0x03CF9254 LDR X22, [X22 + 0xD30]
	0x03CF9258 LDR X23, [X23 + 0xD08]
	0x03CF925C MOV X1, X21
	0x03CF9260 MOV W2, W31
	0x03CF9264 BL 0x21A18B4
	0x03CF9268 MOV X0, X19
	0x03CF926C MOV X1, X31
	0x03CF9270 BL 0x3DB9E70
	0x03CF9274 LDR X8, [X22]
	0x03CF9278 MOV X20, X0
	0x03CF927C MOV X0, X8
	0x03CF9280 BL 0x1C16F10
	0x03CF9284 LDR X2, [X23]
	0x03CF9288 MOV X1, X19
	0x03CF928C MOV X3, X31
	0x03CF9290 MOV X21, X0
	0x03CF9294 BL 0x2D0E824
	0x03CF9298 CBZ X20, 0x3CF9324
	0x03CF929C ADRP X8, 0x469000
	0x03CF92A0 LDR X8, [X8 + 0xD40]
	0x03CF92A4 ADRP X22, 0x469000
	0x03CF92A8 ADRP X23, 0x469000
	0x03CF92AC MOV X0, X20
	0x03CF92B0 LDR X3, [X8]
	0x03CF92B4 LDR X22, [X22 + 0xD28]
	0x03CF92B8 LDR X23, [X23 + 0xD00]
	0x03CF92BC MOV X1, X21
	0x03CF92C0 MOV W2, W31
	0x03CF92C4 BL 0x21A18B4
	0x03CF92C8 MOV X0, X19
	0x03CF92CC MOV X1, X31
	0x03CF92D0 BL 0x3DB9E70
	0x03CF92D4 LDR X8, [X22]
	0x03CF92D8 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6EF000
	007 Move X21, 0x46A000
	008 Move W8, [X20+1984]
	009 Move X21, [X21+2816]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x46A000
	016 Move X0, [X0+3200]
	017 Call 0x1C17CF4
	018 Move X0, 0x46A000
	019 Move X0, [X0+2816]
	020 Call 0x1C17CF4
	021 Move X0, 0x425000
	022 Move X0, [X0+1624]
	023 Call 0x1C17CF4
	024 Move X0, 0x425000
	025 Move X0, [X0+1912]
	026 Call 0x1C17CF4
	027 Move X0, 0x46A000
	028 Move X0, [X0+3256]
	029 Call 0x1C17CF4
	030 Move X0, 0x46A000
	031 Move X0, [X0+2944]
	032 Call 0x1C17CF4
	033 Move X0, 0x424000
	034 Move X0, [X0+2096]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+1984], W8
	038 Move X0, X19
	039 Call ReusableCollectionItem.PreAttachElement, X0
	040 Move X8, [X19]
	041 Move X0, X19
	042 Move X9, [X8+376]
	043 Move X1, [X8+384]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X21]
	046 Move X20, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Compare X20, 0
	053 JumpIfEqual {128}
	054 Move X8, [X21]
	055 Move X0, X20
	056 Move X2, X31
	057 Move X8, [X8+184]
	058 Move X1, [X8+8]
	059 Call VisualElement.AddToClassList, X0, X1
	060 Move X0, [X19+80]
	061 Compare X0, 0
	062 JumpIfEqual {69}
	063 Move X8, 0x425000
	064 Move X8, [X8+1912]
	065 Move X1, [X19+136]
	066 Move W2, W31
	067 Move X3, [X8]
	068 Call 0x21A2534, X0, X1, X2
	069 Move X0, [X19+72]
	070 Compare X0, 0
	071 JumpIfEqual {122}
	072 Move X8, 0x46A000
	073 Move X8, [X8+3200]
	074 Move X22, 0x46A000
	075 Move X21, 0x424000
	076 Move X1, [X8]
	077 Move X22, [X22+2944]
	078 Move X21, [X21+2096]
	079 Call 0x2773DDC, X0
	080 Move X8, [X22]
	081 Move X20, X0
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {88}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X8, [X22]
	088 Move X0, [X21]
	089 Move X8, [X8+184]
	090 Move W9, [X0+224]
	091 Move X21, [X8+32]
	092 Compare W9, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X20
	096 Move X1, X31
	097 Move X2, X21
	098 Move X3, X31
	099 Call UQueryExtensions.Q, X0, X1, X2
	100 Compare X0, 0
	101 JumpIfEqual {128}
	102 Move X8, 0x425000
	103 Move X8, [X8+1624]
	104 Move X1, [X19+152]
	105 Move W2, W31
	106 Move X3, [X8]
	107 Call 0x21A2534, X0, X1, X2
	108 Move X0, [X19+72]
	109 Compare X0, 0
	110 JumpIfEqual {122}
	111 Move X8, 0x46A000
	112 Move X1, [X19+144]
	113 Move X8, [X8+3256]
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X2, [X8]
	119 Move X30, [X31+48]
	120 Call 0x21F0110, X0, X1
	121 Return 
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X22, [X31+16]
	125 Move X21, [X31+24]
	126 Move X30, [X31+48]
	127 Return 
	128 Call 0x1C17F20

Method: System.Void DetachElement()

Disassembly:
	0x03CF92DC MOV X0, X8
	0x03CF92E0 BL 0x1C16F10
	0x03CF92E4 LDR X2, [X23]
	0x03CF92E8 MOV X1, X19
	0x03CF92EC MOV X3, X31
	0x03CF92F0 MOV X21, X0
	0x03CF92F4 BL 0x2D0E824
	0x03CF92F8 CBZ X20, 0x3CF9324
	0x03CF92FC ADRP X8, 0x469000
	0x03CF9300 LDR X8, [X8 + 0xD38]
	0x03CF9304 MOV X0, X20
	0x03CF9308 MOV X1, X21
	0x03CF930C LDP X20, X19, [X31 + 0x20]
	0x03CF9310 LDR X3, [X8]
	0x03CF9314 LDP X22, X21, [X31 + 0x10]
	0x03CF9318 MOV W2, W31
	0x03CF931C LDP X30, X23, [X31], #0x30
	0x03CF9320 B 0x21A18B4
	0x03CF9324 BL 0x1C16F20
	0x03CF9328 STP X30, X21, [X31 - 0x20]!
	0x03CF932C STP X20, X19, [X31 + 0x10]
	0x03CF9330 ADRP X21, 0x6EE000
	0x03CF9334 LDRB W8, [X21 + 0x7C8]
	0x03CF9338 MOV X20, X1
	0x03CF933C MOV X19, X0
	0x03CF9340 TBNZ X8, 0x0, 0x3CF9358
	0x03CF9344 ADRP X0, 0x426000
	0x03CF9348 LDR X0, [X0 + 0x228]
	0x03CF934C BL 0x1C16CF4
	0x03CF9350 MOVZ W8, 0x1
	0x03CF9354 STRB W8, [X21 + 0x7C8]
	0x03CF9358 MOV X0, X19
	0x03CF935C MOV X1, X20
	0x03CF9360 MOV X2, X31
	0x03CF9364 BL 0x3DBAEFC
	0x03CF9368 TBZ X0, 0x0, 0x3CF9398
	0x03CF936C CBZ X20, 0x3CF9390
	0x03CF9370 ADRP X8, 0x426000
	0x03CF9374 LDR X8, [X8 + 0x228]
	0x03CF9378 LDR X9, [X20]
	0x03CF937C LDR X8, [X8]
	0x03CF9380 LDRB W11, [X9 + 0x130]
	0x03CF9384 LDRB W10, [X8 + 0x130]
	0x03CF9388 CMP W11, W10
	0x03CF938C B.CS 0x3CF93A4
	0x03CF9390 MOV X1, X31
	0x03CF9394 B 0x3CF93B8
	0x03CF9398 LDP X20, X19, [X31 + 0x10]
	0x03CF939C LDP X30, X21, [X31], #0x20
	0x03CF93A0 RET
	0x03CF93A4 LDR X9, [X9 + 0xC8]
	0x03CF93A8 ADD X9, X9, X10, 0x3, LSL
	0x03CF93AC LDUR X9, [X9 - 0x8]
	0x03CF93B0 CMP X9, X8
	0x03CF93B4 CSEL X1, X20, X31, EQ
	0x03CF93B8 MOV X0, X19
	0x03CF93BC LDP X20, X19, [X31 + 0x10]
	0x03CF93C0 LDP X30, X21, [X31], #0x20
	0x03CF93C4 B 0x3CF93C8
	0x03CF93C8 STP X30, X21, [X31 - 0x20]!
	0x03CF93CC STP X20, X19, [X31 + 0x10]
	0x03CF93D0 MOV X19, X1
	0x03CF93D4 MOV X1, X31
	0x03CF93D8 MOV X20, X0
	0x03CF93DC BL 0x3DB9E70
	0x03CF93E0 CBZ X0, 0x3CF9460
	0x03CF93E4 LDR X8, [X0 + 0x3A0]
	0x03CF93E8 CBZ X8, 0x3CF9454
	0x03CF93EC LDR X8, [X8 + 0x60]
	0x03CF93F0 CBZ X8, 0x3CF9454
	0x03CF93F4 MOV X0, X20
	0x03CF93F8 MOV X1, X31
	0x03CF93FC BL 0x3DB9E70
	0x03CF9400 CBZ X0, 0x3CF9460
	0x03CF9404 LDR X8, [X0 + 0x3A0]
	0x03CF9408 CBZ X8, 0x3CF9460
	0x03CF940C LDR X21, [X8 + 0x60]
	0x03CF9410 MOV X0, X20
	0x03CF9414 MOV X1, X31
	0x03CF9418 BL 0x3DB9E70
	0x03CF941C CBZ X21, 0x3CF9460
	0x03CF9420 MOV X2, X0
	0x03CF9424 MOV X0, X21
	0x03CF9428 MOV X1, X19
	0x03CF942C BL 0x3CF8828
	0x03CF9430 CBZ X19, 0x3CF9460
	0x03CF9434 MOV X0, X19
	0x03CF9438 MOV X1, X31
	0x03CF943C BL 0x3D9D950
	0x03CF9440 MOV X0, X19
	0x03CF9444 LDP X20, X19, [X31 + 0x10]
	0x03CF9448 MOV X1, X31
	0x03CF944C LDP X30, X21, [X31], #0x20
	0x03CF9450 B 0x3D9D960
	0x03CF9454 LDP X20, X19, [X31 + 0x10]
	0x03CF9458 LDP X30, X21, [X31], #0x20
	0x03CF945C RET
	0x03CF9460 BL 0x1C16F20
	0x03CF9464 STR X30, [X31 - 0x20]!
	0x03CF9468 STP X20, X19, [X31 + 0x10]
	0x03CF946C MOV X19, X1
	0x03CF9470 MOV X1, X31
	0x03CF9474 MOV X20, X0
	0x03CF9478 BL 0x3DB9E70
	0x03CF947C CBZ X0, 0x3CF94E8
	0x03CF9480 LDR X8, [X0 + 0x3A0]
	0x03CF9484 CBZ X8, 0x3CF94B4
	0x03CF9488 LDR X8, [X8 + 0x60]
	0x03CF948C CBZ X8, 0x3CF94B4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x6EF000
	007 Move X21, 0x46A000
	008 Move W8, [X20+1985]
	009 Move X21, [X21+2816]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {38}
	015 Move X0, 0x46A000
	016 Move X0, [X0+3200]
	017 Call 0x1C17CF4
	018 Move X0, 0x46A000
	019 Move X0, [X0+2816]
	020 Call 0x1C17CF4
	021 Move X0, 0x425000
	022 Move X0, [X0+1688]
	023 Call 0x1C17CF4
	024 Move X0, 0x425000
	025 Move X0, [X0+1944]
	026 Call 0x1C17CF4
	027 Move X0, 0x46A000
	028 Move X0, [X0+3264]
	029 Call 0x1C17CF4
	030 Move X0, 0x46A000
	031 Move X0, [X0+2944]
	032 Call 0x1C17CF4
	033 Move X0, 0x424000
	034 Move X0, [X0+2096]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+1985], W8
	038 Move X0, X19
	039 Call ReusableCollectionItem.DetachElement, X0
	040 Move X8, [X19]
	041 Move X0, X19
	042 Move X9, [X8+376]
	043 Move X1, [X8+384]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X21]
	046 Move X20, X0
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {52}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Compare X20, 0
	053 JumpIfEqual {128}
	054 Move X8, [X21]
	055 Move X0, X20
	056 Move X2, X31
	057 Move X8, [X8+184]
	058 Move X1, [X8+8]
	059 Call VisualElement.RemoveFromClassList, X0, X1
	060 Move X0, [X19+80]
	061 Compare X0, 0
	062 JumpIfEqual {69}
	063 Move X8, 0x425000
	064 Move X8, [X8+1944]
	065 Move X1, [X19+136]
	066 Move W2, W31
	067 Move X3, [X8]
	068 Call 0x21A28B4, X0, X1, X2
	069 Move X0, [X19+72]
	070 Compare X0, 0
	071 JumpIfEqual {122}
	072 Move X8, 0x46A000
	073 Move X8, [X8+3200]
	074 Move X22, 0x46A000
	075 Move X21, 0x424000
	076 Move X1, [X8]
	077 Move X22, [X22+2944]
	078 Move X21, [X21+2096]
	079 Call 0x2773DDC, X0
	080 Move X8, [X22]
	081 Move X20, X0
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {88}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X8, [X22]
	088 Move X0, [X21]
	089 Move X8, [X8+184]
	090 Move W9, [X0+224]
	091 Move X21, [X8+32]
	092 Compare W9, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X20
	096 Move X1, X31
	097 Move X2, X21
	098 Move X3, X31
	099 Call UQueryExtensions.Q, X0, X1, X2
	100 Compare X0, 0
	101 JumpIfEqual {128}
	102 Move X8, 0x425000
	103 Move X8, [X8+1688]
	104 Move X1, [X19+152]
	105 Move W2, W31
	106 Move X3, [X8]
	107 Call 0x21A28B4, X0, X1, X2
	108 Move X0, [X19+72]
	109 Compare X0, 0
	110 JumpIfEqual {122}
	111 Move X8, 0x46A000
	112 Move X1, [X19+144]
	113 Move X8, [X8+3264]
	114 Move X20, [X31+32]
	115 Move X19, [X31+40]
	116 Move X22, [X31+16]
	117 Move X21, [X31+24]
	118 Move X2, [X8]
	119 Move X30, [X31+48]
	120 Call 0x21F05C8, X0, X1
	121 Return 
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X22, [X31+16]
	125 Move X21, [X31+24]
	126 Move X30, [X31+48]
	127 Return 
	128 Call 0x1C17F20

Method: System.Void Indent(System.Int32 depth)

Disassembly:
	0x03CF2D5C B.NE 0x3CF2D48
	0x03CF2D60 MOV X0, X22
	0x03CF2D64 MOV W2, W31
	0x03CF2D68 BL 0x1C5C788
	0x03CF2D6C B 0x3CF2D7C

ISIL:
	001 Move X8, [X0+88]
	002 Compare X8, 0
	003 JumpIfEqual {7}
	004 Move [X0+128], W1
	005 Call ReusableTreeViewItem.UpdateIndentLayout, X0
	006 Return 
	007 Return 

Method: System.Void SetExpandedWithoutNotify(System.Boolean expanded)

Disassembly:
	0x03CF2E24 CBZ X0, 0x3CF2EBC
	0x03CF2E28 LDR X0, [X0 + 0x4B0]
	0x03CF2E2C CBZ X0, 0x3CF2EBC
	0x03CF2E30 ADRP X8, 0x42B000
	0x03CF2E34 LDR X8, [X8 + 0x8C0]
	0x03CF2E38 MOV W1, W21
	0x03CF2E3C LDR X2, [X8]
	0x03CF2E40 BL 0x2FDDF0C

ISIL:
	001 Move X0, [X0+72]
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move X8, [X0]
	005 And W1, W1, 1
	006 Move X3, [X8+2184]
	007 Move X2, [X8+2192]
	008 CallNoReturn X3
	009 Return 

Method: System.Void SetToggleVisibility(System.Boolean visible)

Disassembly:
	0x03CF2EEC ADD W1, W20, W23
	0x03CF2EF0 ADD X8, X31, 0x8
	0x03CF2EF4 BL 0x30872C4
	0x03CF2EF8 LDUR V0, [X31 + 0x8]
	0x03CF2EFC LDR X8, [X31 + 0x18]
	0x03CF2F00 ADD X0, X31, 0x20

ISIL:
	001 Move X0, [X0+72]
	002 Compare X0, 0
	003 JumpIfEqual {8}
	004 And W1, W1, 1
	005 Move X2, X31
	006 Call VisualElement.set_visible, X0, X1
	007 Return 
	008 Return 

Method: System.Void OnToggleGeometryChanged(UnityEngine.UIElements.GeometryChangedEvent evt)

Disassembly:
	0x03CF95C4 BL 0x1C16F20
	0x03CF95C8 LDR X8, [X0 + 0x30]
	0x03CF95CC CBZ X8, 0x3CF95E0
	0x03CF95D0 LDR X3, [X8 + 0x18]
	0x03CF95D4 LDR X0, [X8 + 0x40]
	0x03CF95D8 LDR X2, [X8 + 0x28]
	0x03CF95DC BR X3
	0x03CF95E0 RET
	0x03CF95E4 STP X30, X25, [X31 - 0x40]!
	0x03CF95E8 STP X24, X23, [X31 + 0x10]
	0x03CF95EC STP X22, X21, [X31 + 0x20]
	0x03CF95F0 STP X20, X19, [X31 + 0x30]
	0x03CF95F4 ADRP X22, 0x6EE000
	0x03CF95F8 ADRP X21, 0x469000
	0x03CF95FC LDRB W8, [X22 + 0x7CA]
	0x03CF9600 LDR X21, [X21 + 0xD50]
	0x03CF9604 MOV X20, X1
	0x03CF9608 MOV X19, X0
	0x03CF960C TBNZ X8, 0x0, 0x3CF969C
	0x03CF9610 ADRP X0, 0x469000
	0x03CF9614 LDR X0, [X0 + 0x948]
	0x03CF9618 BL 0x1C16CF4
	0x03CF961C ADRP X0, 0x469000
	0x03CF9620 LDR X0, [X0 + 0xD58]
	0x03CF9624 BL 0x1C16CF4
	0x03CF9628 ADRP X0, 0x469000
	0x03CF962C LDR X0, [X0 + 0xD60]
	0x03CF9630 BL 0x1C16CF4
	0x03CF9634 ADRP X0, 0x469000
	0x03CF9638 LDR X0, [X0 + 0xD68]
	0x03CF963C BL 0x1C16CF4
	0x03CF9640 ADRP X0, 0x469000
	0x03CF9644 LDR X0, [X0 + 0xC80]
	0x03CF9648 BL 0x1C16CF4
	0x03CF964C ADRP X0, 0x469000
	0x03CF9650 LDR X0, [X0 + 0xD50]
	0x03CF9654 BL 0x1C16CF4
	0x03CF9658 ADRP X0, 0x425000
	0x03CF965C LDR X0, [X0 + 0x90]
	0x03CF9660 BL 0x1C16CF4
	0x03CF9664 ADRP X0, 0x469000
	0x03CF9668 LDR X0, [X0 + 0xD70]
	0x03CF966C BL 0x1C16CF4
	0x03CF9670 ADRP X0, 0x425000
	0x03CF9674 LDR X0, [X0 + 0xA8]
	0x03CF9678 BL 0x1C16CF4
	0x03CF967C ADRP X0, 0x422000
	0x03CF9680 LDR X0, [X0 + 0x898]
	0x03CF9684 BL 0x1C16CF4
	0x03CF9688 ADRP X0, 0x469000
	0x03CF968C LDR X0, [X0 + 0xD78]
	0x03CF9690 BL 0x1C16CF4
	0x03CF9694 MOVZ W8, 0x1
	0x03CF9698 STRB W8, [X22 + 0x7CA]
	0x03CF969C LDR X0, [X21]
	0x03CF96A0 ADRP X22, 0x469000
	0x03CF96A4 ADRP X21, 0x422000
	0x03CF96A8 LDR W8, [X0 + 0xE0]
	0x03CF96AC LDR X22, [X22 + 0xD68]
	0x03CF96B0 LDR X21, [X21 + 0x898]
	0x03CF96B4 CBNZ W8, 0x3CF96BC
	0x03CF96B8 BL 0x1C16DFC
	0x03CF96BC LDR X3, [X22]
	0x03CF96C0 MOV X0, X19
	0x03CF96C4 MOV X1, X20
	0x03CF96C8 MOV X2, X31
	0x03CF96CC BL 0x2773884
	0x03CF96D0 LDR X0, [X21]
	0x03CF96D4 BL 0x1C16F10
	0x03CF96D8 MOV X1, X31
	0x03CF96DC MOV X20, X0
	0x03CF96E0 BL 0x3DEF578
	0x03CF96E4 CBZ X20, 0x3CF9814
	0x03CF96E8 ADRP X8, 0x469000
	0x03CF96EC LDR X8, [X8 + 0xD78]
	0x03CF96F0 ADRP X21, 0x469000
	0x03CF96F4 MOV X0, X20
	0x03CF96F8 MOV X2, X31
	0x03CF96FC LDR X1, [X8]
	0x03CF9700 LDR X21, [X21 + 0xC80]
	0x03CF9704 BL 0x3DEF278
	0x03CF9708 MOVZ W1, 0x1
	0x03CF970C MOV X0, X20
	0x03CF9710 MOV X2, X31
	0x03CF9714 BL 0x3DEF238
	0x03CF9718 STR X20, [X19 + 0x448]
	0x03CF971C LDR X1, [X21]
	0x03CF9720 MOV X0, X19
	0x03CF9724 BL 0x2772DDC
	0x03CF9728 CBZ X0, 0x3CF9814
	0x03CF972C LDR X1, [X19 + 0x448]
	0x03CF9730 MOV X2, X31
	0x03CF9734 BL 0x3DF60E8
	0x03CF9738 LDR X1, [X21]
	0x03CF973C MOV X0, X19
	0x03CF9740 BL 0x2772DDC
	0x03CF9744 CBZ X0, 0x3CF9814
	0x03CF9748 ADRP X20, 0x469000
	0x03CF974C ADRP X21, 0x469000
	0x03CF9750 ADRP X22, 0x469000
	0x03CF9754 ADRP X23, 0x425000
	0x03CF9758 ADRP X24, 0x469000
	0x03CF975C ADRP X25, 0x425000
	0x03CF9760 LDR X20, [X20 + 0x948]
	0x03CF9764 LDR X21, [X21 + 0xD58]
	0x03CF9768 LDR X22, [X22 + 0xD70]
	0x03CF976C LDR X23, [X23 + 0xA8]
	0x03CF9770 LDR X24, [X24 + 0xD60]
	0x03CF9774 LDR X25, [X25 + 0x90]
	0x03CF9778 MOV W1, W31
	0x03CF977C MOV X2, X31
	0x03CF9780 BL 0x3DEF238
	0x03CF9784 MOV X0, X19
	0x03CF9788 MOV X1, X31
	0x03CF978C BL 0x3CF9818
	0x03CF9790 LDR X0, [X20]
	0x03CF9794 BL 0x1C16F10
	0x03CF9798 LDR X2, [X21]
	0x03CF979C MOV X1, X19
	0x03CF97A0 MOV X3, X31
	0x03CF97A4 MOV X20, X0
	0x03CF97A8 BL 0x2A6B948
	0x03CF97AC LDR X0, [X22]
	0x03CF97B0 BL 0x1C16F10
	0x03CF97B4 MOV X1, X20
	0x03CF97B8 MOV X21, X0
	0x03CF97BC BL 0x3CED068
	0x03CF97C0 MOV X0, X19
	0x03CF97C4 MOV X1, X21
	0x03CF97C8 MOV X2, X31
	0x03CF97CC STR X21, [X19 + 0x450]
	0x03CF97D0 BL 0x3D16A80
	0x03CF97D4 LDR X0, [X23]
	0x03CF97D8 BL 0x1C16F10

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x6EF000
	009 Move W8, [X20+1986]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x424000
	016 Move X0, [X0+288]
	017 Call 0x1C17CF4
	018 Move X0, 0x3FB000
	019 Move X0, [X0+1448]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1986], W8
	023 Move X0, [X19+104]
	024 Compare X0, 0
	025 JumpIfEqual {150}
	026 Move X1, X31
	027 Call VisualElement.get_resolvedStyle, X0
	028 Compare X0, 0
	029 JumpIfEqual {150}
	030 Move X21, 0x424000
	031 Move X8, [X0]
	032 Move X21, [X21+288]
	033 Move X20, X0
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X21]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move W2, 44
	045 Move X0, X20
	046 Call 0x1C5D788
	047 Move W9, [X10]
	048 Add W9, W9, 44
	049 Add X8, X8, W9
	050 Add X0, X8, 312
	051 Move X8, [X0]
	052 Move X1, [X0+8]
	053 Move X0, X20
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X0, [X19+104]
	056 Compare X0, 0
	057 JumpIfEqual {150}
	058 Move X1, X31
	059 Move V8, V0
	060 Call VisualElement.get_resolvedStyle, X0
	061 Compare X0, 0
	062 JumpIfEqual {150}
	063 Move X8, [X0]
	064 Move X1, [X21]
	065 Move X20, X0
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move W2, 22
	076 Move X0, X20
	077 Call 0x1C5D788
	078 Move W9, [X10]
	079 Add W9, W9, 22
	080 Add X8, X8, W9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X1, [X0+8]
	084 Move X0, X20
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move X0, [X19+104]
	087 Compare X0, 0
	088 JumpIfEqual {150}
	089 Move X1, X31
	090 Move V9, V0
	091 Call VisualElement.get_resolvedStyle, X0
	092 Compare X0, 0
	093 JumpIfEqual {150}
	094 Move X8, [X0]
	095 Move X1, [X21]
	096 Move X21, 0x3FB000
	097 Move X20, X0
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Move X21, [X21+1448]
	100 Compare X9, 0
	101 JumpIfEqual {108}
	102 Move X10, [X8+176]
	103 Add X10, X10, 8
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X10, X10, 16
	108 Move W2, 23
	109 Move X0, X20
	110 Call 0x1C5D788
	111 Move W9, [X10]
	112 Add W9, W9, 23
	113 Add X8, X8, W9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X20
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X0, [X21]
	120 Move V10, [X19+132]
	121 Add S1, S8, S9
	122 Add S8, S1, S0
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move W8, 1
	128 NotImplemented "Instruction FABD not yet implemented."
	129 Move S1, W8
	130 NotImplemented "Instruction FCMP not yet implemented."
	131 Move [X19+132], S8
	132 Move X0, X19
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X30, [X31+32]
	136 Move X21, [X31+40]
	137 Move D9, [X31+16]
	138 Move D8, [X31+24]
	139 Move V10, [X31+64]
	140 Call ReusableTreeViewItem.UpdateIndentLayout, X0
	141 Return 
	142 Move X20, [X31+48]
	143 Move X19, [X31+56]
	144 Move X30, [X31+32]
	145 Move X21, [X31+40]
	146 Move D9, [X31+16]
	147 Move D8, [X31+24]
	148 Move V10, [X31+64]
	149 Return 
	150 Call 0x1C17F20

Method: System.Void UpdateIndentLayout()

Disassembly:
	0x03CF9490 MOV X0, X20
	0x03CF9494 MOV X1, X31
	0x03CF9498 BL 0x3DB9E70
	0x03CF949C CBZ X0, 0x3CF94E8
	0x03CF94A0 LDR X8, [X0 + 0x3A0]
	0x03CF94A4 CBZ X8, 0x3CF94E8
	0x03CF94A8 LDR X8, [X8 + 0x60]
	0x03CF94AC CBZ X8, 0x3CF94E8
	0x03CF94B0 STRB W31, [X8 + 0x10]
	0x03CF94B4 CBZ X19, 0x3CF94E8
	0x03CF94B8 MOV X0, X19
	0x03CF94BC MOV X1, X31
	0x03CF94C0 BL 0x3DA02FC
	0x03CF94C4 TBZ X0, 0x0, 0x3CF94D4
	0x03CF94C8 LDP X20, X19, [X31 + 0x10]
	0x03CF94CC LDR X30, [X31], #0x20
	0x03CF94D0 RET
	0x03CF94D4 MOV X0, X20
	0x03CF94D8 MOV X1, X19
	0x03CF94DC LDP X20, X19, [X31 + 0x10]
	0x03CF94E0 LDR X30, [X31], #0x20
	0x03CF94E4 B 0x3CF9328
	0x03CF94E8 BL 0x1C16F20
	0x03CF94EC STR X30, [X31 - 0x20]!
	0x03CF94F0 STP X20, X19, [X31 + 0x10]
	0x03CF94F4 MOV X19, X1
	0x03CF94F8 MOV X1, X31
	0x03CF94FC MOV X20, X0
	0x03CF9500 BL 0x3DB9E70
	0x03CF9504 CBZ X0, 0x3CF9560
	0x03CF9508 LDR X8, [X0 + 0x3A0]
	0x03CF950C CBZ X8, 0x3CF954C
	0x03CF9510 LDR X8, [X8 + 0x60]
	0x03CF9514 CBZ X8, 0x3CF954C
	0x03CF9518 MOV X0, X20
	0x03CF951C MOV X1, X31
	0x03CF9520 BL 0x3DB9E70
	0x03CF9524 CBZ X0, 0x3CF9560
	0x03CF9528 LDR X8, [X0 + 0x3A0]
	0x03CF952C CBZ X8, 0x3CF9560
	0x03CF9530 LDR X8, [X8 + 0x60]
	0x03CF9534 CBZ X8, 0x3CF9560
	0x03CF9538 LDRB W8, [X8 + 0x10]
	0x03CF953C CBZ W8, 0x3CF954C
	0x03CF9540 LDP X20, X19, [X31 + 0x10]
	0x03CF9544 LDR X30, [X31], #0x20
	0x03CF9548 RET
	0x03CF954C MOV X0, X20
	0x03CF9550 MOV X1, X19
	0x03CF9554 LDP X20, X19, [X31 + 0x10]
	0x03CF9558 LDR X30, [X31], #0x20
	0x03CF955C B 0x3CF9328
	0x03CF9560 BL 0x1C16F20
	0x03CF9564 STP X30, X21, [X31 - 0x20]!
	0x03CF9568 STP X20, X19, [X31 + 0x10]
	0x03CF956C ADRP X21, 0x6EE000
	0x03CF9570 LDRB W8, [X21 + 0x7C9]
	0x03CF9574 MOV X19, X1
	0x03CF9578 MOV X20, X0
	0x03CF957C TBNZ X8, 0x0, 0x3CF9594
	0x03CF9580 ADRP X0, 0x469000
	0x03CF9584 LDR X0, [X0 + 0xD48]
	0x03CF9588 BL 0x1C16CF4
	0x03CF958C MOVZ W8, 0x1
	0x03CF9590 STRB W8, [X21 + 0x7C9]
	0x03CF9594 CBZ X19, 0x3CF95C4
	0x03CF9598 LDR W8, [X19 + 0x8C]
	0x03CF959C CMP W8, 0x13F
	0x03CF95A0 B.NE 0x3CF95B8
	0x03CF95A4 MOV X0, X20
	0x03CF95A8 MOV X1, X19
	0x03CF95AC LDP X20, X19, [X31 + 0x10]
	0x03CF95B0 LDP X30, X21, [X31], #0x20
	0x03CF95B4 B 0x3CF93C8
	0x03CF95B8 LDP X20, X19, [X31 + 0x10]
	0x03CF95BC LDP X30, X21, [X31], #0x20
	0x03CF95C0 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x6EF000
	008 Move W8, [X20+1987]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x46A000
	015 Move X0, [X0+2816]
	016 Call 0x1C17CF4
	017 Move X0, 0x424000
	018 Move X0, [X0+296]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1987], W8
	022 Move X0, [X19+88]
	023 Compare X0, 0
	024 JumpIfEqual {91}
	025 Move X1, X31
	026 Call VisualElement.get_style, X0
	027 Move S0, [X19+128]
	028 Move S1, [X19+132]
	029 Move X20, X0
	030 Move X0, X31
	031 NotImplemented "Instruction SCVTF not yet implemented."
	032 Multiply S0, S1, S0
	033 Call StyleLength.op_Implicit, V0
	034 Compare X20, 0
	035 JumpIfEqual {91}
	036 Move X11, 0x424000
	037 Move X9, [X20]
	038 Move X11, [X11+296]
	039 Move X23, 0x46A000
	040 Move X8, X1
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X11]
	043 Move X23, [X23+2816]
	044 Move X21, X0
	045 And X22, X8, 0
	046 Compare X10, 0
	047 JumpIfEqual {54}
	048 Move X8, [X9+176]
	049 Add X8, X8, 8
	050 NotImplemented "Instruction LDUR not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Subtract X10, X10, 1
	053 Add X8, X8, 16
	054 Move W2, 54
	055 Move X0, X20
	056 Call 0x1C5D788
	057 Move W8, [X8]
	058 Add W8, W8, 54
	059 Add X8, X9, W8
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X3, [X0+8]
	063 Move X0, X20
	064 Move X1, X21
	065 Move X2, X22
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X0, [X23]
	068 Move X20, [X19+88]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Compare X20, 0
	074 JumpIfEqual {91}
	075 Move X8, [X23]
	076 Move W9, [X19+128]
	077 Move X0, X20
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X8, [X8+184]
	081 Move X22, [X31+16]
	082 Move X21, [X31+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSET not yet implemented."
	085 Move X1, [X8+32]
	086 Move X3, X31
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Call VisualElement.EnableInClassList, X0, X1, X2
	090 Return 
	091 Call 0x1C17F20

Method: System.Void OnPointerUp(UnityEngine.UIElements.PointerUpEvent evt)

Disassembly:
	0x03CF97DC LDR X2, [X24]
	0x03CF97E0 MOV X1, X19
	0x03CF97E4 MOV X3, X31
	0x03CF97E8 MOV X20, X0
	0x03CF97EC BL 0x2D0E824
	0x03CF97F0 LDR X3, [X25]
	0x03CF97F4 MOV X0, X19

ISIL:
	001 Move X8, [X0+112]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X3, [X8+24]
	005 Move X0, [X8+64]
	006 Move X2, [X8+40]
	007 CallNoReturn X3
	008 Return 

Method: System.Void OnToggleValueChanged(UnityEngine.UIElements.ChangeEvent`1<System.Boolean> evt)

Disassembly:
	0x03CF97F8 MOV X1, X20
	0x03CF97FC LDP X20, X19, [X31 + 0x30]
	0x03CF9800 LDP X22, X21, [X31 + 0x20]
	0x03CF9804 LDP X24, X23, [X31 + 0x10]
	0x03CF9808 MOV W2, W31
	0x03CF980C LDP X30, X25, [X31], #0x40
	0x03CF9810 B 0x21A1534

ISIL:
	001 Move X8, [X0+120]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X3, [X8+24]
	005 Move X0, [X8+64]
	006 Move X2, [X8+40]
	007 CallNoReturn X3
	008 Return 

