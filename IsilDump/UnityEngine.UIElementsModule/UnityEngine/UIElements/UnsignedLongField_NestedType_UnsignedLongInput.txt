Type: UnityEngine.UIElements.UnsignedLongField/UnsignedLongInput

Method: UnityEngine.UIElements.UnsignedLongField get_parentUnsignedLongField()

Disassembly:
	0x03D8D68C ADRP X0, 0x366000
	0x03D8D690 LDR X0, [X0 + 0xA28]
	0x03D8D694 BL 0x1C16D08
	0x03D8D698 LDR W8, [X0 + 0xE0]
	0x03D8D69C CBNZ W8, 0x3D8D6A4
	0x03D8D6A0 BL 0x1C16DFC
	0x03D8D6A4 ADRP X0, 0x3DA000
	0x03D8D6A8 LDR X0, [X0 + 0x978]
	0x03D8D6AC BL 0x1C16D08
	0x03D8D6B0 MOV X1, X31
	0x03D8D6B4 BL 0x3C06A04
	0x03D8D6B8 B 0x3D8D620
	0x03D8D6BC MOVZ W0, 0x8
	0x03D8D6C0 BL 0x3EB1AF0
	0x03D8D6C4 LDR X8, [X19]
	0x03D8D6C8 STR X8, [X0]
	0x03D8D6CC ADRP X1, 0x127000
	0x03D8D6D0 ADD X1, X1, 0xE58
	0x03D8D6D4 MOV X2, X31
	0x03D8D6D8 BL 0x3EB1B00
	0x03D8D6DC MOV X19, X0
	0x03D8D6E0 BL 0x3EB1AE0
	0x03D8D6E4 MOV X0, X19
	0x03D8D6E8 BL 0x1D2C690
	0x03D8D6EC BL 0x1990590
	0x03D8D6F0 MOV X1, X31
	0x03D8D6F4 B 0x33BDD8C
	0x03D8D6F8 MOV X1, X31
	0x03D8D6FC B 0x33BDD8C
	0x03D8D700 STR X30, [X31 - 0x10]!
	0x03D8D704 MOV X0, X31
	0x03D8D708 BL 0x3C3B89C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x65B000
	005 Move W8, [X20+3629]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3DB000
	012 Move X0, [X0+2240]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3629], W8
	016 Move X0, X19
	017 Move X1, X31
	018 Call VisualElement.get_parent, X0
	019 Compare X0, 0
	020 JumpIfEqual {32}
	021 Move X9, 0x3DB000
	022 Move X9, [X9+2240]
	023 Move X8, [X0]
	024 Move X1, [X9]
	025 Move W10, [X8+304]
	026 Move W9, [X1+304]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X8+200]
	029 Add X8, X8, X9
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x03D8D410 MOV X2, X31
	0x03D8D414 BL 0x3C245EC
	0x03D8D418 MOVZ W8, 0x1
	0x03D8D41C STRB W8, [X19 + 0x10]
	0x03D8D420 LDP X20, X19, [X31 + 0x20]
	0x03D8D424 LDP X22, X21, [X31 + 0x10]
	0x03D8D428 LDR X30, [X31], #0x30
	0x03D8D42C RET
	0x03D8D430 LDR W8, [X20 + 0x10]
	0x03D8D434 CBZ W8, 0x3D8D464
	0x03D8D438 ADRP X8, 0x366000
	0x03D8D43C LDR X8, [X8 + 0xA28]
	0x03D8D440 LDR X0, [X8]
	0x03D8D444 LDR W8, [X0 + 0xE0]
	0x03D8D448 CBNZ W8, 0x3D8D450
	0x03D8D44C BL 0x1C16DFC
	0x03D8D450 ADRP X8, 0x3DA000
	0x03D8D454 LDR X8, [X8 + 0x958]
	0x03D8D458 MOV X1, X31
	0x03D8D45C LDR X0, [X8]
	0x03D8D460 BL 0x3C06A04
	0x03D8D464 MOV X0, X19
	0x03D8D468 LDP X20, X19, [X31 + 0x20]
	0x03D8D46C LDP X22, X21, [X31 + 0x10]
	0x03D8D470 LDR X30, [X31], #0x30
	0x03D8D474 B 0x3D8D478
	0x03D8D478 STR X30, [X31 - 0x20]!
	0x03D8D47C STP X20, X19, [X31 + 0x10]
	0x03D8D480 LDRB W8, [X0 + 0x10]
	0x03D8D484 MOV X19, X0
	0x03D8D488 CBZ W8, 0x3D8D4D0
	0x03D8D48C ADRP X20, 0x64C000
	0x03D8D490 LDRB W8, [X20 + 0x78F]
	0x03D8D494 CBNZ W8, 0x3D8D4AC
	0x03D8D498 ADRP X0, 0x36E000
	0x03D8D49C LDR X0, [X0 + 0xF08]
	0x03D8D4A0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x65B000
	007 Move X22, 0x3DB000
	008 Move X20, 0x3D3000
	009 Move W8, [X21+3630]
	010 Move X22, [X22+2272]
	011 Move X20, [X20+1960]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x3DB000
	018 Move X0, [X0+2272]
	019 Call 0x1C17CF4
	020 Move X0, 0x3DB000
	021 Move X0, [X0+2280]
	022 Call 0x1C17CF4
	023 Move X0, 0x3D3000
	024 Move X0, [X0+1960]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3630], W8
	028 Move X1, [X22]
	029 Move X0, X19
	030 Call TextValueInput<UInt64>..ctor, X0
	031 Move X0, [X20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X20]
	037 Move X8, [X0+184]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X8, [X8+32]
	041 Move [X19+1024], X8
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+48]
	045 Return 

Method: System.String get_allowedCharacters()

Disassembly:
	0x03D8D70C SUB W8, W0, 0x1
	0x03D8D710 CMP W8, 0x3
	0x03D8D714 CSET W0, CC
	0x03D8D718 LDR X30, [X31], #0x10
	0x03D8D71C RET
	0x03D8D720 LDR X0, [X0 + 0x50]
	0x03D8D724 RET
	0x03D8D728 STR X30, [X31 - 0x20]!
	0x03D8D72C STP X20, X19, [X31 + 0x10]
	0x03D8D730 MOV X20, X0
	0x03D8D734 LDR X0, [X0 + 0x50]
	0x03D8D738 CMP X0, X1
	0x03D8D73C B.EQ 0x3D8D76C
	0x03D8D740 MOV X19, X1
	0x03D8D744 CBZ X0, 0x3D8D750
	0x03D8D748 MOV X1, X31
	0x03D8D74C BL 0x3DBD034
	0x03D8D750 STR X19, [X20 + 0x50]
	0x03D8D754 CBZ X19, 0x3D8D76C
	0x03D8D758 MOV X0, X19
	0x03D8D75C LDP X20, X19, [X31 + 0x10]
	0x03D8D760 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x65B000
	005 Move X19, 0x3D3000
	006 Move W8, [X20+3631]
	007 Move X19, [X19+1960]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x3D3000
	013 Move X0, [X0+1960]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3631], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void ApplyInputDeviceDelta(UnityEngine.Vector3 delta, UnityEngine.UIElements.DeltaSpeed speed, System.UInt64 startValue)

Disassembly:
	0x03D8D764 LDR X30, [X31], #0x20
	0x03D8D768 B 0x3DBD028
	0x03D8D76C LDP X20, X19, [X31 + 0x10]
	0x03D8D770 LDR X30, [X31], #0x20
	0x03D8D774 RET
	0x03D8D778 STR X30, [X31 - 0x20]!
	0x03D8D77C STP X20, X19, [X31 + 0x10]
	0x03D8D780 MOV W20, W1
	0x03D8D784 MOV X19, X0
	0x03D8D788 BL 0x3D8D4E8
	0x03D8D78C TBZ X0, 0x0, 0x3D8D7AC
	0x03D8D790 MOV X0, X19
	0x03D8D794 BL 0x3D8D880
	0x03D8D798 AND W8, W0, 0x1
	0x03D8D79C STRB W8, [X19 + 0x41]
	0x03D8D7A0 TBZ X0, 0x0, 0x3D8D7CC
	0x03D8D7A4 STRB W31, [X19 + 0x80]
	0x03D8D7A8 B 0x3D8D7F0
	0x03D8D7AC MOV X0, X31
	0x03D8D7B0 BL 0x3C3B89C
	0x03D8D7B4 CMP W20, 0x1
	0x03D8D7B8 B.NE 0x3D8D790
	0x03D8D7BC SUB W8, W0, 0x1
	0x03D8D7C0 CMP W8, 0x3
	0x03D8D7C4 B.CC 0x3D8D81C
	0x03D8D7C8 B 0x3D8D790
	0x03D8D7CC MOV X0, X19
	0x03D8D7D0 BL 0x3D8DB4C
	0x03D8D7D4 LDRB W8, [X19 + 0x41]
	0x03D8D7D8 AND W9, W0, 0x1
	0x03D8D7DC STRB W9, [X19 + 0x40]
	0x03D8D7E0 CBNZ W8, 0x3D8D7A4
	0x03D8D7E4 TBNZ X0, 0x0, 0x3D8D7A4
	0x03D8D7E8 MOV X0, X19
	0x03D8D7EC BL 0x3D8DF98
	0x03D8D7F0 ADD X0, X31, 0x8
	0x03D8D7F4 MOV X1, X19
	0x03D8D7F8 STR X31, [X31 + 0x8]
	0x03D8D7FC BL 0x3D8F3C0
	0x03D8D800 LDR X20, [X31 + 0x8]
	0x03D8D804 MOV X0, X19
	0x03D8D808 BL 0x3D8E904
	0x03D8D80C MOV X0, X19
	0x03D8D810 BL 0x3D8F05C
	0x03D8D814 CBZ X20, 0x3D8D850
	0x03D8D818 STP X31, X31, [X20 + 0x58]
	0x03D8D81C LDP X20, X19, [X31 + 0x10]
	0x03D8D820 LDR X30, [X31], #0x20
	0x03D8D824 RET
	0x03D8D828 CMP W1, 0x1
	0x03D8D82C B.NE 0x3D8D854
	0x03D8D830 BL 0x3EB1AD0
	0x03D8D834 LDR X19, [X0]
	0x03D8D838 BL 0x3EB1AE0
	0x03D8D83C CBZ X20, 0x3D8D850
	0x03D8D840 STP X31, X31, [X20 + 0x58]
	0x03D8D844 CBZ X19, 0x3D8D81C
	0x03D8D848 MOV X0, X19
	0x03D8D84C BL 0x1C16F18
	0x03D8D850 BL 0x1C16F20
	0x03D8D854 CBZ X20, 0x3D8D864
	0x03D8D858 STP X31, X31, [X20 + 0x58]
	0x03D8D85C B 0x3D8D870
	0x03D8D860 CBNZ X20, 0x3D8D868
	0x03D8D864 BL 0x1C16F20
	0x03D8D868 STP X31, X31, [X20 + 0x58]
	0x03D8D86C CBNZ X19, 0x3D8D874
	0x03D8D870 BL 0x1D2C690
	0x03D8D874 MOV X0, X19
	0x03D8D878 BL 0x1C16F18
	0x03D8D87C BL 0x1990590
	0x03D8D880 SUB X31, X31, 0xC0
	0x03D8D884 STP D11, D10, [X31 + 0x60]
	0x03D8D888 STP D9, D8, [X31 + 0x70]
	0x03D8D88C STP X30, X25, [X31 + 0x80]
	0x03D8D890 STP X24, X23, [X31 + 0x90]
	0x03D8D894 STP X22, X21, [X31 + 0xA0]
	0x03D8D898 STP X20, X19, [X31 + 0xB0]
	0x03D8D89C ADRP X20, 0x65A000
	0x03D8D8A0 LDRB W8, [X20 + 0xE45]
	0x03D8D8A4 MOV X19, X0
	0x03D8D8A8 TBNZ X8, 0x0, 0x3D8D8FC
	0x03D8D8AC ADRP X0, 0x3DA000
	0x03D8D8B0 LDR X0, [X0 + 0x980]
	0x03D8D8B4 BL 0x1C16CF4
	0x03D8D8B8 ADRP X0, 0x3DA000
	0x03D8D8BC LDR X0, [X0 + 0x988]
	0x03D8D8C0 BL 0x1C16CF4
	0x03D8D8C4 ADRP X0, 0x3DA000
	0x03D8D8C8 LDR X0, [X0 + 0x968]
	0x03D8D8CC BL 0x1C16CF4
	0x03D8D8D0 ADRP X0, 0x38F000
	0x03D8D8D4 LDR X0, [X0 + 0xE50]
	0x03D8D8D8 BL 0x1C16CF4
	0x03D8D8DC ADRP X0, 0x3DA000
	0x03D8D8E0 LDR X0, [X0 + 0x990]
	0x03D8D8E4 BL 0x1C16CF4
	0x03D8D8E8 ADRP X0, 0x3DA000
	0x03D8D8EC LDR X0, [X0 + 0x998]
	0x03D8D8F0 BL 0x1C16CF4
	0x03D8D8F4 MOVZ W8, 0x1
	0x03D8D8F8 STRB W8, [X20 + 0xE45]
	0x03D8D8FC LDR X20, [X19 + 0x10]
	0x03D8D900 CBNZ X20, 0x3D8D918
	0x03D8D904 MOV X0, X19
	0x03D8D908 BL 0x3D8D55C
	0x03D8D90C MOV X20, X0
	0x03D8D910 STR X0, [X19 + 0x10]
	0x03D8D914 CBZ X0, 0x3D8DB48
	0x03D8D918 ADRP X23, 0x3DA000
	0x03D8D91C LDR X8, [X20]
	0x03D8D920 LDR X23, [X23 + 0x968]
	0x03D8D924 LDRH W9, [X8 + 0x12E]
	0x03D8D928 LDR X1, [X23]
	0x03D8D92C CBZ X9, 0x3D8D950
	0x03D8D930 LDR X10, [X8 + 0xB0]
	0x03D8D934 ADD X10, X10, 0x8
	0x03D8D938 LDUR X11, [X10 - 0x8]
	0x03D8D93C CMP X11, X1
	0x03D8D940 B.EQ 0x3D8D960
	0x03D8D944 SUBS X9, X9, 0x1
	0x03D8D948 ADD X10, X10, 0x10
	0x03D8D94C B.NE 0x3D8D938
	0x03D8D950 MOVZ W2, 0x3
	0x03D8D954 MOV X0, X20
	0x03D8D958 BL 0x1C5C788
	0x03D8D95C B 0x3D8D970
	0x03D8D960 LDR W9, [X10]
	0x03D8D964 ADD W9, W9, 0x3
	0x03D8D968 ADD X8, X8, W9, 0x4, SXTW
	0x03D8D96C ADD X0, X8, 0x138
	0x03D8D970 LDP X9, X1, [X0]
	0x03D8D974 ADD X8, X31, 0x38
	0x03D8D978 MOV X0, X20
	0x03D8D97C BLR X9
	0x03D8D980 LDUR V0, [X31 + 0x40]
	0x03D8D984 LDP W8, W24, [X31 + 0x50]
	0x03D8D988 LDP S9, S8, [X31 + 0x38]
	0x03D8D98C STR V0, [X31 + 0x2]
	0x03D8D990 STR W8, [X31 + 0x30]
	0x03D8D994 CBZ W24, 0x3D8DB20

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x65B000
	013 Move X23, 0x3DB000
	014 Move X22, 0x367000
	015 Move W8, [X24+3632]
	016 Move X23, [X23+2312]
	017 Move X22, [X22+1448]
	018 Move X21, X2
	019 Move W20, W1
	020 Move V8, V1
	021 Move V9, V0
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0x367000
	028 Move X0, [X0+1448]
	029 Call 0x1C17CF4
	030 Move X0, 0x3DB000
	031 Move X0, [X0+2320]
	032 Call 0x1C17CF4
	033 Move X0, 0x3DB000
	034 Move X0, [X0+2312]
	035 Call 0x1C17CF4
	036 Move X0, 0x3DB000
	037 Move X0, [X0+2328]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X24+3632], W8
	041 Move X0, X21
	042 Move X1, X31
	043 Call NumericFieldDraggerUtility.CalculateIntDragSensitivity, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction UCVTF not yet implemented."
	046 NotImplemented "Instruction CSET not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move X2, X31
	050 Call NumericFieldDraggerUtility.Acceleration, X0, X1
	051 Move X1, [X23]
	052 Move X0, X19
	053 Move V10, V0
	054 Call TextInputBase<UInt64>.get_text, X0
	055 Move X8, [X19]
	056 Move X1, X0
	057 Move X0, X19
	058 Move X9, [X8+1912]
	059 Move X2, [X8+1920]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X20, X0
	062 Move V0, V9
	063 Move V1, V8
	064 Move V2, V10
	065 Move X0, X31
	066 Call NumericFieldDraggerUtility.NiceDelta, X0, V0
	067 Move X0, [X22]
	068 Move V8, V0
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 NotImplemented "Instruction FCVT not yet implemented."
	074 Multiply D8, D11, D0
	075 Add X0, X31, 40
	076 Move V0, V8
	077 Call 0x3EB2C00
	078 NotImplemented "Instruction FCMP not yet implemented."
	079 Move D1, -0.5
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 Move V0, [X31+40]
	082 Move D1, -1
	083 Move D1, 0.5
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 Move V0, [X31+40]
	086 Move D1, 1
	087 NotImplemented "Instruction FCVTZS not yet implemented."
	088 Add D1, D0, D1
	089 And X31, X8, 1
	090 NotImplemented "Instruction FCSEL not yet implemented."
	091 Add D0, D8, D1
	092 NotImplemented "Instruction FRINTP not yet implemented."
	093 Add D0, D8, D1
	094 NotImplemented "Instruction FRINTM not yet implemented."
	095 Move X8, 0x7FF00000
	096 Move D1, X8
	097 NotImplemented "Instruction FCVTZS not yet implemented."
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 Move X8, 0x80000000
	100 NotImplemented "Instruction CSEL not yet implemented."
	101 Move X2, X20
	102 Call UnsignedLongInput.ClampToMinMaxULongValue, X0, X1, X2
	103 Move X20, X0
	104 Move X0, X19
	105 Call UnsignedLongInput.get_parentUnsignedLongField, X0
	106 Compare X0, 0
	107 JumpIfEqual {160}
	108 Move X8, 0x3DB000
	109 Move X8, [X8+2320]
	110 Move X1, [X8]
	111 Call TextInputBaseField`1<UInt64>.get_isDelayed, X0
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {140}
	116 Move X8, [X19]
	117 Move X0, X19
	118 Move X1, X20
	119 Move X9, [X8+2008]
	120 Move X2, [X8+2016]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X8, 0x3DB000
	123 Move X8, [X8+2328]
	124 Move X1, X0
	125 Move X0, X19
	126 Move X20, [X31+80]
	127 Move X19, [X31+88]
	128 Move X2, [X8]
	129 Move X22, [X31+64]
	130 Move X21, [X31+72]
	131 Move X24, [X31+48]
	132 Move X23, [X31+56]
	133 Move X30, [X31+32]
	134 Move D9, [X31+16]
	135 Move D8, [X31+24]
	136 Move D11, [X31+96]
	137 Move D10, [X31+104]
	138 Call TextInputBase<UInt64>.set_text, X0, X1
	139 Return 
	140 Move X0, X19
	141 Call UnsignedLongInput.get_parentUnsignedLongField, X0
	142 Compare X0, 0
	143 JumpIfEqual {160}
	144 Move X8, [X0]
	145 Move X1, X20
	146 Move X20, [X31+80]
	147 Move X19, [X31+88]
	148 Move X22, [X31+64]
	149 Move X21, [X31+72]
	150 Move X3, [X8+2040]
	151 Move X2, [X8+2048]
	152 Move X24, [X31+48]
	153 Move X23, [X31+56]
	154 Move X30, [X31+32]
	155 Move D9, [X31+16]
	156 Move D8, [X31+24]
	157 Move D11, [X31+96]
	158 Move D10, [X31+104]
	159 CallNoReturn X3
	160 Call 0x1C17F20

Method: System.UInt64 ClampToMinMaxULongValue(System.Int64 niceDelta, System.UInt64 value)

Disassembly:
	0x03D8D998 ADRP X20, 0x38F000
	0x03D8D99C LDR X20, [X20 + 0xE50]
	0x03D8D9A0 ADRP X25, 0x3DA000
	0x03D8D9A4 LDP S10, S11, [X31 + 0x58]
	0x03D8D9A8 LDR X8, [X20]
	0x03D8D9AC LDR W9, [X8 + 0xE0]
	0x03D8D9B0 LDR X25, [X25 + 0x998]
	0x03D8D9B4 CBNZ W9, 0x3D8D9C4
	0x03D8D9B8 MOV X0, X8
	0x03D8D9BC BL 0x1C16DFC
	0x03D8D9C0 LDR X8, [X20]
	0x03D8D9C4 LDR X0, [X25]
	0x03D8D9C8 LDR X8, [X8 + 0xB8]
	0x03D8D9CC LDR W9, [X0 + 0xE0]
	0x03D8D9D0 LDR W20, [X8 + 0x14]
	0x03D8D9D4 CBNZ W9, 0x3D8D9E0
	0x03D8D9D8 BL 0x1C16DFC
	0x03D8D9DC LDR X0, [X25]
	0x03D8D9E0 LDR X8, [X0 + 0xB8]
	0x03D8D9E4 LDR X21, [X8 + 0x58]
	0x03D8D9E8 CBNZ X21, 0x3D8DA3C
	0x03D8D9EC LDR W8, [X0 + 0xE0]
	0x03D8D9F0 CBNZ W8, 0x3D8D9FC
	0x03D8D9F4 BL 0x1C16DFC
	0x03D8D9F8 LDR X0, [X25]
	0x03D8D9FC ADRP X9, 0x3DA000
	0x03D8DA00 LDR X8, [X0 + 0xB8]
	0x03D8DA04 LDR X9, [X9 + 0x988]
	0x03D8DA08 LDR X22, [X8]
	0x03D8DA0C LDR X0, [X9]
	0x03D8DA10 BL 0x1C16F10
	0x03D8DA14 ADRP X8, 0x3DA000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x65B000
	007 Move X22, 0x367000
	008 Move W8, [X21+3633]
	009 Move X22, [X22+1448]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x367000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3633], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSNEG not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Add X8, X19, X8
	030 NotImplemented "Instruction CSINV not yet implemented."
	031 Subtract X8, X19, X8
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0

Method: System.String ValueToString(System.UInt64 v)

Disassembly:
	0x03D8DA18 LDR X8, [X8 + 0x990]
	0x03D8DA1C MOV X1, X22
	0x03D8DA20 MOV X3, X31
	0x03D8DA24 MOV X21, X0
	0x03D8DA28 LDR X2, [X8]
	0x03D8DA2C BL 0x2D40E50
	0x03D8DA30 LDR X8, [X25]
	0x03D8DA34 LDR X8, [X8 + 0xB8]
	0x03D8DA38 STR X21, [X8 + 0x58]
	0x03D8DA3C LDR V0, [X31 + 0x2]
	0x03D8DA40 LDR W8, [X31 + 0x30]
	0x03D8DA44 STR V0, [X31]
	0x03D8DA48 STR W8, [X31 + 0x10]
	0x03D8DA4C CBZ X19, 0x3D8DB48
	0x03D8DA50 ADRP X8, 0x3DA000
	0x03D8DA54 LDR X8, [X8 + 0x980]
	0x03D8DA58 LDR V0, [X31]
	0x03D8DA5C LDR W9, [X31 + 0x10]
	0x03D8DA60 FMOV S2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x65B000
	005 Move W8, [X20+3634]
	006 Move X19, X0
	007 Move [X31+8], X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x3DB000
	013 Move X0, [X0+2336]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3634], W8
	017 Move X1, [X19+1024]
	018 Add X0, X31, 8
	019 Move X2, X31
	020 Call UInt64.ToString, X0, X1
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0

Method: System.UInt64 StringToValue(System.String str)

Disassembly:
	0x03D8DA64 LDR X6, [X8]
	0x03D8DA68 STUR V0, [X31 + 0x40]
	0x03D8DA6C FMOV S5, W31
	0x03D8DA70 ADD X4, X31, 0x38
	0x03D8DA74 MOV X0, X19
	0x03D8DA78 MOV V0.16B, V9.16B
	0x03D8DA7C MOV V1.16B, V8.16B
	0x03D8DA80 MOV V3.16B, V10.16B
	0x03D8DA84 MOV V4.16B, V11.16B
	0x03D8DA88 MOV W1, W20
	0x03D8DA8C MOV X2, X31
	0x03D8DA90 MOV X3, X21
	0x03D8DA94 MOV W5, W31
	0x03D8DA98 STP S9, S8, [X31 + 0x38]
	0x03D8DA9C STP W9, W24, [X31 + 0x50]
	0x03D8DAA0 STP S10, S11, [X31 + 0x58]
	0x03D8DAA4 BL 0x21AB94C
	0x03D8DAA8 LDR X20, [X19 + 0x10]
	0x03D8DAAC CBNZ X20, 0x3D8DAC4
	0x03D8DAB0 MOV X0, X19
	0x03D8DAB4 BL 0x3D8D55C
	0x03D8DAB8 MOV X20, X0
	0x03D8DABC STR X0, [X19 + 0x10]
	0x03D8DAC0 CBZ X0, 0x3D8DB48
	0x03D8DAC4 LDR X8, [X20]
	0x03D8DAC8 LDR X1, [X23]
	0x03D8DACC LDRH W9, [X8 + 0x12E]
	0x03D8DAD0 CBZ X9, 0x3D8DAF4
	0x03D8DAD4 LDR X10, [X8 + 0xB0]
	0x03D8DAD8 ADD X10, X10, 0x8
	0x03D8DADC LDUR X11, [X10 - 0x8]
	0x03D8DAE0 CMP X11, X1
	0x03D8DAE4 B.EQ 0x3D8DB04
	0x03D8DAE8 SUBS X9, X9, 0x1
	0x03D8DAEC ADD X10, X10, 0x10
	0x03D8DAF0 B.NE 0x3D8DADC
	0x03D8DAF4 MOVZ W2, 0x2
	0x03D8DAF8 MOV X0, X20
	0x03D8DAFC BL 0x1C5C788
	0x03D8DB00 B 0x3D8DB14
	0x03D8DB04 LDR W9, [X10]
	0x03D8DB08 ADD W9, W9, 0x2

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x65B000
	009 Move X22, 0x3DB000
	010 Move X21, 0x3D3000
	011 Move W8, [X23+3635]
	012 Move X22, [X22+2224]
	013 Move X21, [X21+1960]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x3DB000
	021 Move X0, [X0+2224]
	022 Call 0x1C17CF4
	023 Move X0, 0x3D3000
	024 Move X0, [X0+1960]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3635], W8
	028 Move X1, [X22]
	029 Move X0, X20
	030 Move [X31+8], X31
	031 Call TextInputBase<UInt64>.get_originalText, X0
	032 Move X8, [X21]
	033 Move X20, X0
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Add X2, X31, 8
	040 Move X0, X19
	041 Move X1, X20
	042 Move X3, X31
	043 Call UINumericFieldsUtils.TryConvertStringToULong, X0, X1, X2
	044 Move X0, [X31+8]
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+16]
	050 Move X23, [X31+24]
	051 Add X31, X31, 64
	052 Return X0

