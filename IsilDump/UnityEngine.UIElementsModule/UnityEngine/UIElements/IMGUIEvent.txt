Type: UnityEngine.UIElements.IMGUIEvent

Method: System.Void .cctor()

Disassembly:
	0x03DAFA14 LDRB W8, [X22 + 0x3]
	0x03DAFA18 LDR X23, [X23 + 0xC18]
	0x03DAFA1C LDR X21, [X21 + 0xC20]
	0x03DAFA20 MOV X20, X1
	0x03DAFA24 MOV X19, X0
	0x03DAFA28 TBNZ X8, 0x0, 0x3DAFA4C
	0x03DAFA2C ADRP X0, 0x3B9000
	0x03DAFA30 LDR X0, [X0 + 0xC20]
	0x03DAFA34 BL 0x1C16CF4
	0x03DAFA38 ADRP X0, 0x3B9000
	0x03DAFA3C LDR X0, [X0 + 0xC18]
	0x03DAFA40 BL 0x1C16CF4
	0x03DAFA44 MOVZ W8, 0x1
	0x03DAFA48 STRB W8, [X22 + 0x3]
	0x03DAFA4C LDR X0, [X23]
	0x03DAFA50 BL 0x1C16F10
	0x03DAFA54 LDR X1, [X21]
	0x03DAFA58 MOV X21, X0
	0x03DAFA5C BL 0x30F573C
	0x03DAFA60 MOV X0, X19
	0x03DAFA64 MOV X1, X31
	0x03DAFA68 STR X21, [X19 + 0x20]
	0x03DAFA6C STR W31, [X19 + 0x38]
	0x03DAFA70 BL 0x33BDD8C
	0x03DAFA74 STR X20, [X19 + 0x10]
	0x03DAFA78 STR W31, [X19 + 0x3C]
	0x03DAFA7C LDP X20, X19, [X31 + 0x20]
	0x03DAFA80 LDP X22, X21, [X31 + 0x10]
	0x03DAFA84 LDP X30, X23, [X31], #0x30
	0x03DAFA88 RET
	0x03DAFA8C LDR X0, [X0 + 0x10]
	0x03DAFA90 RET
	0x03DAFA94 STP X30, X21, [X31 - 0x20]!
	0x03DAFA98 STP X20, X19, [X31 + 0x10]
	0x03DAFA9C ADRP X21, 0x639000
	0x03DAFAA0 LDRB W8, [X21 + 0x4]
	0x03DAFAA4 MOV X19, X1
	0x03DAFAA8 MOV X20, X0
	0x03DAFAAC TBNZ X8, 0x0, 0x3DAFAC4
	0x03DAFAB0 ADRP X0, 0x36E000
	0x03DAFAB4 LDR X0, [X0 + 0x628]
	0x03DAFAB8 BL 0x1C16CF4
	0x03DAFABC MOVZ W8, 0x1
	0x03DAFAC0 STRB W8, [X21 + 0x4]
	0x03DAFAC4 LDR X0, [X20 + 0x18]
	0x03DAFAC8 CMP X0, X19
	0x03DAFACC B.EQ 0x3DAFB4C
	0x03DAFAD0 CBZ X0, 0x3DAFB48
	0x03DAFAD4 MOV X1, X31
	0x03DAFAD8 BL 0x3E0C77C
	0x03DAFADC CBZ X0, 0x3DAFB58
	0x03DAFAE0 ADRP X10, 0x36E000
	0x03DAFAE4 LDR X8, [X0]
	0x03DAFAE8 LDR X10, [X10 + 0x628]
	0x03DAFAEC MOV X21, X0
	0x03DAFAF0 LDRH W9, [X8 + 0x12E]
	0x03DAFAF4 LDR X1, [X10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x639000
	008 Move X19, 0x3BA000
	009 Move W8, [X20+4087]
	010 Move X19, [X19+3016]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x3BA000
	016 Move X0, [X0+3024]
	017 Call 0x1C17CF4
	018 Move X0, 0x3B9000
	019 Move X0, [X0+3448]
	020 Call 0x1C17CF4
	021 Move X0, 0x3BA000
	022 Move X0, [X0+3032]
	023 Call 0x1C17CF4
	024 Move X0, 0x3BA000
	025 Move X0, [X0+3040]
	026 Call 0x1C17CF4
	027 Move X0, 0x3BA000
	028 Move X0, [X0+3016]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+4087], W8
	032 Move X0, [X19]
	033 Move X22, 0x3BA000
	034 Move X23, 0x3BA000
	035 Move X21, 0x3B9000
	036 Move W8, [X0+224]
	037 Move X22, [X22+3032]
	038 Move X23, [X23+3040]
	039 Move X21, [X21+3448]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X19]
	044 Move X8, [X0+184]
	045 Move X0, [X22]
	046 Move X22, 0x3BA000
	047 Move X20, [X8]
	048 Move X22, [X22+3024]
	049 Call 0x1C17F10
	050 Move X2, [X23]
	051 Move X1, X20
	052 Move X3, X31
	053 Move X19, X0
	054 Call Func`1<Object>..ctor, X0, X1, X2
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X1, [X22]
	061 Move X0, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Call 0x2D0E4C0, X0
	069 Return 

Method: UnityEngine.UIElements.IMGUIEvent GetPooled(UnityEngine.Event systemEvent)

Disassembly:
	0x03DAFAF8 CBZ X9, 0x3DAFB1C
	0x03DAFAFC LDR X10, [X8 + 0xB0]
	0x03DAFB00 ADD X10, X10, 0x8
	0x03DAFB04 LDUR X11, [X10 - 0x8]
	0x03DAFB08 CMP X11, X1
	0x03DAFB0C B.EQ 0x3DAFB2C
	0x03DAFB10 SUBS X9, X9, 0x1
	0x03DAFB14 ADD X10, X10, 0x10
	0x03DAFB18 B.NE 0x3DAFB04
	0x03DAFB1C MOVZ W2, 0xE
	0x03DAFB20 MOV X0, X21
	0x03DAFB24 BL 0x1C5C788
	0x03DAFB28 B 0x3DAFB3C
	0x03DAFB2C LDR W9, [X10]
	0x03DAFB30 ADD W9, W9, 0xE
	0x03DAFB34 ADD X8, X8, W9, 0x4, SXTW
	0x03DAFB38 ADD X0, X8, 0x138
	0x03DAFB3C LDP X8, X1, [X0]
	0x03DAFB40 MOV X0, X21
	0x03DAFB44 BLR X8
	0x03DAFB48 STR X19, [X20 + 0x18]
	0x03DAFB4C LDP X20, X19, [X31 + 0x10]
	0x03DAFB50 LDP X30, X21, [X31], #0x20
	0x03DAFB54 RET
	0x03DAFB58 BL 0x1C16F20
	0x03DAFB5C STR X30, [X31 - 0x20]!
	0x03DAFB60 STP X20, X19, [X31 + 0x10]
	0x03DAFB64 MOV X1, X31
	0x03DAFB68 MOV X19, X0
	0x03DAFB6C BL 0x3DAFBA0
	0x03DAFB70 MOV X20, X0
	0x03DAFB74 CBZ X0, 0x3DAFB8C
	0x03DAFB78 LDR X8, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x639000
	006 Move X20, 0x3B9000
	007 Move W8, [X21+4088]
	008 Move X20, [X20+3448]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3BA000
	015 Move X0, [X0+3048]
	016 Call 0x1C17CF4
	017 Move X0, 0x3B9000
	018 Move X0, [X0+3448]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+4088], W8
	022 Move X0, [X20]
	023 Move X20, 0x3BA000
	024 Move W8, [X0+224]
	025 Move X20, [X20+3048]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Call 0x2D0E6C4
	031 Compare X0, 0
	032 JumpIfEqual {42}
	033 Move X1, X19
	034 Move X20, X0
	035 Call EventBase.set_imguiEvent, X0, X1
	036 Move X0, X20
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Call 0x1C17F20

Method: System.Void Init()

Disassembly:
	0x03DAFB7C MOV X0, X20
	0x03DAFB80 LDR X9, [X8 + 0x228]
	0x03DAFB84 LDR X1, [X8 + 0x230]
	0x03DAFB88 BLR X9
	0x03DAFB8C CMP X0, X19
	0x03DAFB90 CSEL X0, X20, X31, EQ
	0x03DAFB94 LDP X20, X19, [X31 + 0x10]
	0x03DAFB98 LDR X30, [X31], #0x20
	0x03DAFB9C RET
	0x03DAFBA0 SUB X31, X31, 0x70
	0x03DAFBA4 STP X30, X21, [X31 + 0x50]
	0x03DAFBA8 STP X20, X19, [X31 + 0x60]
	0x03DAFBAC ADRP X21, 0x639000
	0x03DAFBB0 LDRB W8, [X21 + 0x6]
	0x03DAFBB4 MOV X20, X1
	0x03DAFBB8 MOV X19, X0
	0x03DAFBBC TBNZ X8, 0x0, 0x3DAFC10
	0x03DAFBC0 ADRP X0, 0x3B9000
	0x03DAFBC4 LDR X0, [X0 + 0xC28]
	0x03DAFBC8 BL 0x1C16CF4
	0x03DAFBCC ADRP X0, 0x3B9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x639000
	006 Move X21, 0x3BA000
	007 Move W8, [X20+4089]
	008 Move X21, [X21+3056]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3BA000
	015 Move X0, [X0+3056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4089], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x2D0E634, X0
	022 Move W8, 7
	023 Move [X19+48], W8
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return 

Method: System.Void LocalInit()

Disassembly:
	0x03DAFBD0 LDR X0, [X0 + 0xC30]
	0x03DAFBD4 BL 0x1C16CF4
	0x03DAFBD8 ADRP X0, 0x3B9000

ISIL:
	001 Move W8, 7
	002 Move [X0+48], W8
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x03DAFBDC LDR X0, [X0 + 0xC38]
	0x03DAFBE0 BL 0x1C16CF4
	0x03DAFBE4 ADRP X0, 0x3B9000
	0x03DAFBE8 LDR X0, [X0 + 0xC40]
	0x03DAFBEC BL 0x1C16CF4
	0x03DAFBF0 ADRP X0, 0x3B8000
	0x03DAFBF4 LDR X0, [X0 + 0xF90]
	0x03DAFBF8 BL 0x1C16CF4
	0x03DAFBFC ADRP X0, 0x3B8000
	0x03DAFC00 LDR X0, [X0 + 0xF98]
	0x03DAFC04 BL 0x1C16CF4
	0x03DAFC08 MOVZ W8, 0x1
	0x03DAFC0C STRB W8, [X21 + 0x6]
	0x03DAFC10 MOVI V0.2D, 0x0
	0x03DAFC14 STR X31, [X31 + 0x48]
	0x03DAFC18 STP V0, V0, [X31 + 0x20]
	0x03DAFC1C CBZ X20, 0x3DAFC84
	0x03DAFC20 LDR X8, [X20 + 0x378]
	0x03DAFC24 ADD X0, X31, 0x48
	0x03DAFC28 MOV X1, X31
	0x03DAFC2C STR X8, [X31 + 0x48]
	0x03DAFC30 BL 0x3DF88DC
	0x03DAFC34 CBZ X0, 0x3DAFC84
	0x03DAFC38 MOV X20, X0
	0x03DAFC3C MOV X0, X20
	0x03DAFC40 MOV X1, X31
	0x03DAFC44 BL 0x3DEB850
	0x03DAFC48 TBNZ X0, 0x0, 0x3DAFCB0
	0x03DAFC4C LDR X8, [X20 + 0x378]
	0x03DAFC50 ADD X0, X31, 0x48

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x639000
	006 Move X20, 0x3B9000
	007 Move W8, [X21+4090]
	008 Move X20, [X20+3448]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x3BA000
	015 Move X0, [X0+3064]
	016 Call 0x1C17CF4
	017 Move X0, 0x3B9000
	018 Move X0, [X0+3448]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+4090], W8
	022 Move X0, [X20]
	023 Move X20, 0x3BA000
	024 Move W8, [X0+224]
	025 Move X20, [X20+3064]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Call 0x2D0E54C, X0
	032 Move W8, 7
	033 Move [X19+48], W8
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 

