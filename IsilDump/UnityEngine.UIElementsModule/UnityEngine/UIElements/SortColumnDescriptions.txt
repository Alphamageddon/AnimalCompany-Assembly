Type: UnityEngine.UIElements.SortColumnDescriptions

Method: System.Void add_changed(System.Action value)

Disassembly:
	0x03D7B070 MOV X1, X19
	0x03D7B074 BLR X9
	0x03D7B078 MOV X20, X31
	0x03D7B07C ADRP X10, 0x378000
	0x03D7B080 LDR X8, [X19]
	0x03D7B084 LDR X10, [X10 + 0xE00]
	0x03D7B088 LDRH W9, [X8 + 0x12E]
	0x03D7B08C LDR X1, [X10]
	0x03D7B090 CBZ X9, 0x3D7B0B4
	0x03D7B094 LDR X10, [X8 + 0xB0]
	0x03D7B098 ADD X10, X10, 0x8
	0x03D7B09C LDUR X11, [X10 - 0x8]
	0x03D7B0A0 CMP X11, X1
	0x03D7B0A4 B.EQ 0x3D7B0F0
	0x03D7B0A8 SUBS X9, X9, 0x1
	0x03D7B0AC ADD X10, X10, 0x10
	0x03D7B0B0 B.NE 0x3D7B09C
	0x03D7B0B4 MOV X0, X19
	0x03D7B0B8 MOV W2, W31
	0x03D7B0BC BL 0x1C5C788
	0x03D7B0C0 B 0x3D7B0FC
	0x03D7B0C4 LDR X8, [X20]
	0x03D7B0C8 STR S8, [X20 + 0x3F8]
	0x03D7B0CC MOV X0, X20
	0x03D7B0D0 LDR X9, [X8 + 0x7C8]
	0x03D7B0D4 LDR X1, [X8 + 0x7D0]
	0x03D7B0D8 BLR X9
	0x03D7B0DC MOV X0, X20
	0x03D7B0E0 LDP X20, X19, [X31 + 0x20]
	0x03D7B0E4 LDP X30, X21, [X31 + 0x10]
	0x03D7B0E8 LDP D9, D8, [X31], #0x30
	0x03D7B0EC B 0x3D7AB5C
	0x03D7B0F0 LDRSW X9, [X10]
	0x03D7B0F4 ADD X8, X8, X9, 0x4, LSL
	0x03D7B0F8 ADD X0, X8, 0x138
	0x03D7B0FC LDP X8, X1, [X0]
	0x03D7B100 MOV X0, X19
	0x03D7B104 BLR X8
	0x03D7B108 CBNZ X20, 0x3D7B124

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x66D000
	007 Move W8, [X21+3456]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x37A000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3456], W8
	019 Move X22, 0x37A000
	020 Add X20, X20, 24
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_changed(System.Action value)

Disassembly:
	0x03D7B10C LDP X20, X19, [X31 + 0x20]
	0x03D7B110 LDP X30, X21, [X31 + 0x10]
	0x03D7B114 LDP D9, D8, [X31], #0x30
	0x03D7B118 RET
	0x03D7B11C BL 0x1C16F20
	0x03D7B120 BL 0x1C16F20
	0x03D7B124 MOV X0, X20
	0x03D7B128 BL 0x1C16F18
	0x03D7B12C B 0x3D7B134
	0x03D7B130 B 0x3D7B134
	0x03D7B134 MOV X21, X0
	0x03D7B138 CMP W1, 0x1
	0x03D7B13C B.NE 0x3D7B158
	0x03D7B140 MOV X0, X21
	0x03D7B144 BL 0x3EB1AD0
	0x03D7B148 LDR X20, [X0]
	0x03D7B14C BL 0x3EB1AE0
	0x03D7B150 CBNZ X19, 0x3D7B07C
	0x03D7B154 B 0x3D7B108
	0x03D7B158 MOV X20, X31
	0x03D7B15C B 0x3D7B164
	0x03D7B160 MOV X21, X0
	0x03D7B164 CBZ X19, 0x3D7B1C8
	0x03D7B168 ADRP X10, 0x378000
	0x03D7B16C LDR X8, [X19]
	0x03D7B170 LDR X10, [X10 + 0xE00]
	0x03D7B174 LDRH W9, [X8 + 0x12E]
	0x03D7B178 LDR X1, [X10]
	0x03D7B17C CBZ X9, 0x3D7B1A0
	0x03D7B180 LDR X10, [X8 + 0xB0]
	0x03D7B184 ADD X10, X10, 0x8
	0x03D7B188 LDUR X11, [X10 - 0x8]
	0x03D7B18C CMP X11, X1
	0x03D7B190 B.EQ 0x3D7B1B0
	0x03D7B194 SUBS X9, X9, 0x1
	0x03D7B198 ADD X10, X10, 0x10
	0x03D7B19C B.NE 0x3D7B188
	0x03D7B1A0 MOV X0, X19
	0x03D7B1A4 MOV W2, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x66D000
	007 Move W8, [X21+3457]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x37A000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3457], W8
	019 Move X22, 0x37A000
	020 Add X20, X20, 24
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Collections.Generic.IEnumerator`1<UnityEngine.UIElements.SortColumnDescription> GetEnumerator()

Disassembly:
	0x03D7B1A8 BL 0x1C5C788
	0x03D7B1AC B 0x3D7B1BC
	0x03D7B1B0 LDRSW X9, [X10]
	0x03D7B1B4 ADD X8, X8, X9, 0x4, LSL
	0x03D7B1B8 ADD X0, X8, 0x138
	0x03D7B1BC LDP X8, X1, [X0]
	0x03D7B1C0 MOV X0, X19
	0x03D7B1C4 BLR X8
	0x03D7B1C8 CBNZ X20, 0x3D7B1D4
	0x03D7B1CC MOV X0, X21
	0x03D7B1D0 BL 0x1D2C690
	0x03D7B1D4 MOV X0, X20
	0x03D7B1D8 BL 0x1C16F18
	0x03D7B1DC BL 0x1990590
	0x03D7B1E0 STP X30, X19, [X31 - 0x10]!
	0x03D7B1E4 LDR X8, [X0]
	0x03D7B1E8 STR S0, [X0 + 0x3F8]
	0x03D7B1EC MOV X19, X0
	0x03D7B1F0 LDR X9, [X8 + 0x7C8]
	0x03D7B1F4 LDR X1, [X8 + 0x7D0]
	0x03D7B1F8 BLR X9
	0x03D7B1FC MOV X0, X19
	0x03D7B200 LDP X30, X19, [X31], #0x10
	0x03D7B204 B 0x3D7AB5C
	0x03D7B208 STP D9, D8, [X31 - 0x20]!
	0x03D7B20C STP X30, X19, [X31 + 0x10]
	0x03D7B210 MOV X19, X0
	0x03D7B214 LDR X0, [X0 + 0x3D8]
	0x03D7B218 FMOV S9, W31
	0x03D7B21C CBZ X0, 0x3D7B278
	0x03D7B220 LDR X8, [X19 + 0x3E0]
	0x03D7B224 CBZ X8, 0x3D7B278
	0x03D7B228 MOV X1, X31
	0x03D7B22C MOV V8.16B, V0.16B
	0x03D7B230 BL 0x3DEC528
	0x03D7B234 FMOV W8, S2
	0x03D7B238 AND W8, W8, 0x7FFFFFFF
	0x03D7B23C MOVZ W9, 0x7F800000
	0x03D7B240 CMP W8, W9
	0x03D7B244 B.HI 0x3D7B278

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x66D000
	005 Move W8, [X20+3458]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3EC000
	012 Move X0, [X0+1840]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3458], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x3EC000
	020 Move X8, [X19]
	021 Move X10, [X10+1840]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03D7B248 LDR X0, [X19 + 0x3D8]

ISIL:
	001 Call SortColumnDescriptions.GetEnumerator, X0
	002 Return X0

Method: System.Void Add(UnityEngine.UIElements.SortColumnDescription item)

Disassembly:
	0x03D7B24C CBZ X0, 0x3D7B288
	0x03D7B250 MOV X1, X31
	0x03D7B254 BL 0x3DEC528
	0x03D7B258 LDR V0, [X19 + 0x3F4]
	0x03D7B25C FMOV S1, -2
	0x03D7B260 FADD S1, S2, S1
	0x03D7B264 FMUL S2, S1, S8
	0x03D7B268 FDIV S0, S2, S0
	0x03D7B26C FMOV S2, 1
	0x03D7B270 FMAXNM S0, S0, S2
	0x03D7B274 FSUB S9, S1, S0
	0x03D7B278 LDP X30, X19, [X31 + 0x10]
	0x03D7B27C MOV V0.16B, V9.16B
	0x03D7B280 LDP D9, D8, [X31], #0x20
	0x03D7B284 RET
	0x03D7B288 BL 0x1C16F20
	0x03D7B28C STR X30, [X31 - 0x50]!
	0x03D7B290 STP X26, X25, [X31 + 0x10]
	0x03D7B294 STP X24, X23, [X31 + 0x20]
	0x03D7B298 STP X22, X21, [X31 + 0x30]
	0x03D7B29C STP X20, X19, [X31 + 0x40]
	0x03D7B2A0 ADRP X26, 0x66C000
	0x03D7B2A4 ADRP X25, 0x3EC000
	0x03D7B2A8 ADRP X19, 0x3EC000
	0x03D7B2AC ADRP X24, 0x3E7000
	0x03D7B2B0 ADRP X23, 0x3EB000
	0x03D7B2B4 ADRP X22, 0x3EC000
	0x03D7B2B8 ADRP X21, 0x3EC000
	0x03D7B2BC ADRP X20, 0x3EC000
	0x03D7B2C0 LDR X25, [X25 + 0x138]
	0x03D7B2C4 LDR X19, [X19 + 0x110]
	0x03D7B2C8 LDRB W8, [X26 + 0xD92]
	0x03D7B2CC LDR X24, [X24 + 0xED8]
	0x03D7B2D0 LDR X23, [X23 + 0x930]
	0x03D7B2D4 LDR X22, [X22 + 0x140]
	0x03D7B2D8 LDR X21, [X21 + 0x148]
	0x03D7B2DC LDR X20, [X20 + 0x150]
	0x03D7B2E0 TBNZ X8, 0x0, 0x3D7B340
	0x03D7B2E4 ADRP X0, 0x3EC000
	0x03D7B2E8 LDR X0, [X0 + 0x110]
	0x03D7B2EC BL 0x1C16CF4
	0x03D7B2F0 ADRP X0, 0x3EC000
	0x03D7B2F4 LDR X0, [X0 + 0x150]
	0x03D7B2F8 BL 0x1C16CF4
	0x03D7B2FC ADRP X0, 0x3EC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x66D000
	006 Move W8, [X21+3459]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3ED000
	014 Move X0, [X0]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3459], W8
	018 Move X21, [X20+16]
	019 Compare X21, 0
	020 JumpIfEqual {51}
	021 Move X10, 0x3ED000
	022 Move X8, [X21]
	023 Move X10, [X10]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move X0, X21
	035 Move W2, W31
	036 Call 0x1C5D788
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Add X8, X8, X9
	039 Add X0, X8, 312
	040 Move X8, [X0]
	041 Move X1, [X0+8]
	042 Move X0, X21
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move W1, W0
	045 Move X0, X20
	046 Move X2, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x03D79AB4 LDRB W8, [X23 + 0xD7C]
	0x03D79AB8 MOV X21, X3
	0x03D79ABC MOV X20, X2
	0x03D79AC0 MOV X19, X1
	0x03D79AC4 MOV X22, X0
	0x03D79AC8 TBNZ X8, 0x0, 0x3D79AE0
	0x03D79ACC ADRP X0, 0x3EE000
	0x03D79AD0 LDR X0, [X0 + 0xB0]
	0x03D79AD4 BL 0x1C16CF4
	0x03D79AD8 MOVZ W8, 0x1
	0x03D79ADC STRB W8, [X23 + 0xD7C]
	0x03D79AE0 LDP V1, V0, [X21]
	0x03D79AE4 ADD X3, X31, 0x60
	0x03D79AE8 MOV X0, X22
	0x03D79AEC MOV X1, X19
	0x03D79AF0 MOV X2, X20
	0x03D79AF4 MOV X4, X31
	0x03D79AF8 STP V1, V0, [X31 + 0x60]
	0x03D79AFC BL 0x3CFE60C
	0x03D79B00 CBZ X19, 0x3D79B38
	0x03D79B04 ADRP X9, 0x3EE000
	0x03D79B08 LDR X9, [X9 + 0xB0]
	0x03D79B0C LDR X8, [X19]
	0x03D79B10 LDR X1, [X9]
	0x03D79B14 LDRB W10, [X8 + 0x130]
	0x03D79B18 LDRB W9, [X1 + 0x130]
	0x03D79B1C CMP W10, W9
	0x03D79B20 B.CC 0x3D79C08
	0x03D79B24 LDR X8, [X8 + 0xC8]
	0x03D79B28 ADD X8, X8, X9, 0x3, LSL
	0x03D79B2C LDUR X8, [X8 - 0x8]
	0x03D79B30 CMP X8, X1
	0x03D79B34 B.NE 0x3D79C08
	0x03D79B38 LDP V0, V1, [X21]
	0x03D79B3C LDR X0, [X22 + 0xB8]
	0x03D79B40 STP V0, V1, [X31 + 0x40]
	0x03D79B44 CBZ X0, 0x3D79C04
	0x03D79B48 LDR X8, [X0]
	0x03D79B4C LDP V0, V1, [X31 + 0x40]
	0x03D79B50 ADD X2, X31, 0x80
	0x03D79B54 MOV X1, X20
	0x03D79B58 LDR X9, [X8 + 0x178]
	0x03D79B5C STP V0, V1, [X31 + 0x80]
	0x03D79B60 LDR X3, [X8 + 0x180]
	0x03D79B64 BLR X9
	0x03D79B68 CBZ X19, 0x3D79C04
	0x03D79B6C AND W1, W0, 0x1
	0x03D79B70 MOV X0, X19
	0x03D79B74 BL 0x3D79590
	0x03D79B78 LDP V0, V1, [X21]
	0x03D79B7C LDR X0, [X22 + 0xC8]
	0x03D79B80 STP V0, V1, [X31 + 0x20]
	0x03D79B84 CBZ X0, 0x3D79C04
	0x03D79B88 LDR X8, [X0]
	0x03D79B8C LDP V0, V1, [X31 + 0x20]
	0x03D79B90 ADD X2, X31, 0x80
	0x03D79B94 MOV X1, X20
	0x03D79B98 LDR X9, [X8 + 0x178]
	0x03D79B9C STP V0, V1, [X31 + 0x80]
	0x03D79BA0 LDR X3, [X8 + 0x180]
	0x03D79BA4 BLR X9
	0x03D79BA8 MOV X1, X0
	0x03D79BAC MOV X0, X19
	0x03D79BB0 BL 0x3D794E4
	0x03D79BB4 LDP V0, V1, [X21]
	0x03D79BB8 LDR X0, [X22 + 0xC0]
	0x03D79BBC STP V0, V1, [X31]
	0x03D79BC0 CBZ X0, 0x3D79C04
	0x03D79BC4 LDR X8, [X0]
	0x03D79BC8 LDP V0, V1, [X31]
	0x03D79BCC ADD X2, X31, 0x80
	0x03D79BD0 MOV X1, X20
	0x03D79BD4 LDR X9, [X8 + 0x178]
	0x03D79BD8 STP V0, V1, [X31 + 0x80]
	0x03D79BDC LDR X3, [X8 + 0x180]
	0x03D79BE0 BLR X9
	0x03D79BE4 MOV X1, X0
	0x03D79BE8 MOV X0, X19
	0x03D79BEC BL 0x3D79490
	0x03D79BF0 LDP X20, X19, [X31 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x66F000
	007 Move W8, [X20+3460]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x3EF000
	014 Move X0, [X0]
	015 Call 0x1C17CF4
	016 Move X0, 0x3EF000
	017 Move X0, [X0+8]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3460], W8
	021 Move X20, [X19+16]
	022 Compare X20, 0
	023 JumpIfEqual {81}
	024 Move X21, 0x3EF000
	025 Move X22, 0x3EF000
	026 Move X21, [X21]
	027 Move X22, [X22+8]
	028 Move X8, [X20]
	029 Move X1, [X21]
	030 NotImplemented "Instruction LDRH not yet implemented."
	031 Compare X9, 0
	032 JumpIfEqual {39}
	033 Move X10, [X8+176]
	034 Add X10, X10, 8
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Subtract X9, X9, 1
	038 Add X10, X10, 16
	039 Move X0, X20
	040 Move W2, W31
	041 Call 0x1C5D788
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Add X8, X8, X9
	044 Add X0, X8, 312
	045 Move X8, [X0]
	046 Move X1, [X0+8]
	047 Move X0, X20
	048 NotImplemented "Instruction BLR not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, [X19+16]
	051 Compare X20, 0
	052 JumpIfEqual {81}
	053 Move X8, [X20]
	054 Move X1, [X22]
	055 NotImplemented "Instruction LDRH not yet implemented."
	056 Compare X9, 0
	057 JumpIfEqual {64}
	058 Move X10, [X8+176]
	059 Add X10, X10, 8
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Subtract X9, X9, 1
	063 Add X10, X10, 16
	064 Move X0, X20
	065 Move W2, W31
	066 Call 0x1C5D788
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add X8, X8, X9
	069 Add X0, X8, 312
	070 Move X8, [X0]
	071 Move X2, [X0+8]
	072 Move X0, X20
	073 Move W1, W31
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X1, X0
	076 Move X0, X19
	077 Call SortColumnDescriptions.Remove, X0, X1
	078 Move X20, [X19+16]
	079 Compare X20, 0
	080 JumpIfNotEqual {28}
	081 Call 0x1C17F20
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return 

Method: System.Boolean Contains(UnityEngine.UIElements.SortColumnDescription item)

Disassembly:
	0x03D7B634 BL 0x1C16CF4
	0x03D7B638 ADRP X0, 0x3A2000
	0x03D7B63C LDR X0, [X0 + 0xC78]
	0x03D7B640 BL 0x1C16CF4
	0x03D7B644 ADRP X0, 0x3E8000
	0x03D7B648 LDR X0, [X0 + 0x270]
	0x03D7B64C BL 0x1C16CF4
	0x03D7B650 ADRP X0, 0x3A2000
	0x03D7B654 LDR X0, [X0 + 0xB20]
	0x03D7B658 BL 0x1C16CF4
	0x03D7B65C ADRP X0, 0x3EC000
	0x03D7B660 LDR X0, [X0 + 0x158]
	0x03D7B664 BL 0x1C16CF4
	0x03D7B668 ADRP X0, 0x382000
	0x03D7B66C LDR X0, [X0 + 0xEC8]
	0x03D7B670 BL 0x1C16CF4
	0x03D7B674 ADRP X0, 0x3EC000
	0x03D7B678 LDR X0, [X0 + 0x160]
	0x03D7B67C BL 0x1C16CF4
	0x03D7B680 ADRP X0, 0x3A2000
	0x03D7B684 LDR X0, [X0 + 0xB68]
	0x03D7B688 BL 0x1C16CF4
	0x03D7B68C MOVZ W8, 0x1
	0x03D7B690 STRB W8, [X20 + 0xD94]
	0x03D7B694 LDR X0, [X21]
	0x03D7B698 BL 0x1C16F10
	0x03D7B69C MOV X1, X31
	0x03D7B6A0 MOV X20, X0
	0x03D7B6A4 BL 0x3E1B6CC
	0x03D7B6A8 CBZ X20, 0x3D7B788
	0x03D7B6AC ADRP X8, 0x3EC000
	0x03D7B6B0 LDR X8, [X8 + 0x158]
	0x03D7B6B4 LDR X8, [X8]
	0x03D7B6B8 STR W31, [X20 + 0x40]
	0x03D7B6BC STR X8, [X20 + 0x10]
	0x03D7B6C0 STR X20, [X19 + 0x78]
	0x03D7B6C4 LDR X0, [X21]
	0x03D7B6C8 BL 0x1C16F10
	0x03D7B6CC MOV X1, X31
	0x03D7B6D0 MOV X20, X0
	0x03D7B6D4 BL 0x3E1B6CC
	0x03D7B6D8 CBZ X20, 0x3D7B788
	0x03D7B6DC ADRP X8, 0x3EC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x66D000
	006 Move W8, [X21+3461]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x3ED000
	014 Move X0, [X0]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3461], W8
	018 Move X20, [X20+16]
	019 Compare X20, 0
	020 JumpIfEqual {50}
	021 Move X10, 0x3ED000
	022 Move X8, [X20]
	023 Move X10, [X10]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Move X1, [X10]
	026 Compare X9, 0
	027 JumpIfEqual {34}
	028 Move X10, [X8+176]
	029 Add X10, X10, 8
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Subtract X9, X9, 1
	033 Add X10, X10, 16
	034 Move W2, 4
	035 Move X0, X20
	036 Call 0x1C5D788
	037 Move W9, [X10]
	038 Add W9, W9, 4
	039 Add X8, X8, W9
	040 Add X0, X8, 312
	041 Move X3, [X0]
	042 Move X2, [X0+8]
	043 Move X0, X20
	044 Move X1, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 CallNoReturn X3
	050 Call 0x1C17F20

Method: System.Void CopyTo(UnityEngine.UIElements.SortColumnDescription[] array, System.Int32 arrayIndex)

Disassembly:
	0x03D7B6E0 LDR X8, [X8 + 0x160]
	0x03D7B6E4 MOVZ W9, 0x42C80000
	0x03D7B6E8 LDR X8, [X8]
	0x03D7B6EC STR W9, [X20 + 0x40]
	0x03D7B6F0 STR X8, [X20 + 0x10]
	0x03D7B6F4 STR X20, [X19 + 0x80]
	0x03D7B6F8 LDR X0, [X21]
	0x03D7B6FC BL 0x1C16F10
	0x03D7B700 MOV X1, X31
	0x03D7B704 MOV X20, X0
	0x03D7B708 BL 0x3E1B6CC
	0x03D7B70C CBZ X20, 0x3D7B788
	0x03D7B710 ADRP X8, 0x382000
	0x03D7B714 LDR X8, [X8 + 0xEC8]
	0x03D7B718 ADRP X9, 0x3A2000
	0x03D7B71C LDR X8, [X8]
	0x03D7B720 LDR X9, [X9 + 0xB20]
	0x03D7B724 STR W31, [X20 + 0x40]
	0x03D7B728 STR X8, [X20 + 0x10]
	0x03D7B72C STR X20, [X19 + 0x88]
	0x03D7B730 LDR X0, [X9]
	0x03D7B734 BL 0x1C16F10
	0x03D7B738 MOV X1, X31
	0x03D7B73C MOV X20, X0
	0x03D7B740 BL 0x3E0A2F4
	0x03D7B744 CBZ X20, 0x3D7B788
	0x03D7B748 ADRP X8, 0x3A2000
	0x03D7B74C LDR X8, [X8 + 0xB68]
	0x03D7B750 ADRP X9, 0x37A000
	0x03D7B754 MOV X0, X19
	0x03D7B758 MOV X1, X31
	0x03D7B75C LDR X8, [X8]
	0x03D7B760 LDR X9, [X9 + 0x278]
	0x03D7B764 STR X8, [X20 + 0x10]
	0x03D7B768 LDR X8, [X9]
	0x03D7B76C LDR X8, [X8 + 0xB8]
	0x03D7B770 LDR X8, [X8]
	0x03D7B774 STR X8, [X20 + 0x40]
	0x03D7B778 STR X20, [X19 + 0x90]
	0x03D7B77C LDP X20, X19, [X31 + 0x10]
	0x03D7B780 LDP X30, X21, [X31], #0x20
	0x03D7B784 B 0x3CEA004
	0x03D7B788 BL 0x1C16F20
	0x03D7B78C STP X30, X21, [X31 - 0x20]!
	0x03D7B790 STP X20, X19, [X31 + 0x10]
	0x03D7B794 ADRP X20, 0x66C000
	0x03D7B798 ADRP X21, 0x3EC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x66D000
	007 Move W8, [X22+3462]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x3ED000
	016 Move X0, [X0]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3462], W8
	020 Move X21, [X21+16]
	021 Compare X21, 0
	022 JumpIfEqual {54}
	023 Move X10, 0x3ED000
	024 Move X8, [X21]
	025 Move X10, [X10]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move W2, 5
	037 Move X0, X21
	038 Call 0x1C5D788
	039 Move W9, [X10]
	040 Add W9, W9, 5
	041 Add X8, X8, W9
	042 Add X0, X8, 312
	043 Move X4, [X0]
	044 Move X3, [X0+8]
	045 Move X0, X21
	046 Move X1, X20
	047 Move W2, W19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 CallNoReturn X4
	054 Call 0x1C17F20

Method: System.Boolean Remove(UnityEngine.UIElements.SortColumnDescription desc)

Disassembly:
	0x03D7B4BC LDP V0, V1, [X31 + 0x40]
	0x03D7B4C0 ADD X2, X31, 0x80
	0x03D7B4C4 MOV X1, X19
	0x03D7B4C8 LDR X9, [X8 + 0x178]
	0x03D7B4CC STP V0, V1, [X31 + 0x80]
	0x03D7B4D0 LDR X3, [X8 + 0x180]
	0x03D7B4D4 BLR X9
	0x03D7B4D8 CBZ X22, 0x3D7B5FC
	0x03D7B4DC LDR V1, [X22 + 0x3F8]
	0x03D7B4E0 STR S0, [X22 + 0x3F0]
	0x03D7B4E4 MOV X0, X22
	0x03D7B4E8 MOV V0.16B, V1.16B
	0x03D7B4EC BL 0x3D7AB5C
	0x03D7B4F0 LDP V0, V1, [X20]
	0x03D7B4F4 LDR X0, [X21 + 0x80]
	0x03D7B4F8 STP V0, V1, [X31 + 0x20]
	0x03D7B4FC CBZ X0, 0x3D7B5FC
	0x03D7B500 LDR X8, [X0]
	0x03D7B504 LDP V0, V1, [X31 + 0x20]
	0x03D7B508 ADD X2, X31, 0x80
	0x03D7B50C MOV X1, X19
	0x03D7B510 LDR X9, [X8 + 0x178]
	0x03D7B514 STP V0, V1, [X31 + 0x80]
	0x03D7B518 LDR X3, [X8 + 0x180]
	0x03D7B51C BLR X9
	0x03D7B520 LDR V1, [X22 + 0x3F8]
	0x03D7B524 STR S0, [X22 + 0x3F4]
	0x03D7B528 MOV X0, X22
	0x03D7B52C MOV V0.16B, V1.16B
	0x03D7B530 BL 0x3D7AB5C
	0x03D7B534 LDP V0, V1, [X20]
	0x03D7B538 LDR X0, [X21 + 0x90]
	0x03D7B53C STP V0, V1, [X31]
	0x03D7B540 CBZ X0, 0x3D7B5FC
	0x03D7B544 LDR X8, [X0]
	0x03D7B548 LDP V0, V1, [X31]
	0x03D7B54C ADD X2, X31, 0x80
	0x03D7B550 MOV X1, X19
	0x03D7B554 LDR X9, [X8 + 0x178]
	0x03D7B558 STP V0, V1, [X31 + 0x80]
	0x03D7B55C LDR X3, [X8 + 0x180]
	0x03D7B560 BLR X9
	0x03D7B564 MOV X1, X31
	0x03D7B568 MOV X23, X0
	0x03D7B56C BL 0x32277A8
	0x03D7B570 TBZ X0, 0x0, 0x3D7B588
	0x03D7B574 ADRP X8, 0x37A000
	0x03D7B578 LDR X8, [X8 + 0x278]
	0x03D7B57C LDR X8, [X8]
	0x03D7B580 LDR X8, [X8 + 0xB8]
	0x03D7B584 LDR X23, [X8]
	0x03D7B588 LDR X0, [X22 + 0x3E8]
	0x03D7B58C CBZ X0, 0x3D7B5FC
	0x03D7B590 LDR X8, [X0]
	0x03D7B594 MOV X1, X23
	0x03D7B598 LDR X9, [X8 + 0xB28]
	0x03D7B59C LDR X2, [X8 + 0xB30]
	0x03D7B5A0 BLR X9
	0x03D7B5A4 LDP V0, V1, [X20]
	0x03D7B5A8 LDR X0, [X21 + 0x88]
	0x03D7B5AC STP V0, V1, [X31 + 0x40]
	0x03D7B5B0 CBZ X0, 0x3D7B5FC
	0x03D7B5B4 LDR X8, [X0]
	0x03D7B5B8 LDP V0, V1, [X31 + 0x40]
	0x03D7B5BC ADD X2, X31, 0x80
	0x03D7B5C0 MOV X1, X19
	0x03D7B5C4 LDR X9, [X8 + 0x178]
	0x03D7B5C8 STP V0, V1, [X31 + 0x80]
	0x03D7B5CC LDR X3, [X8 + 0x180]
	0x03D7B5D0 BLR X9
	0x03D7B5D4 LDR X8, [X22]
	0x03D7B5D8 MOV X0, X22
	0x03D7B5DC LDR X9, [X8 + 0x7D8]
	0x03D7B5E0 LDR X1, [X8 + 0x7E0]
	0x03D7B5E4 BLR X9
	0x03D7B5E8 LDP X20, X19, [X31 + 0xC0]
	0x03D7B5EC LDP X22, X21, [X31 + 0xB0]
	0x03D7B5F0 LDP X30, X23, [X31 + 0xA0]
	0x03D7B5F4 ADD X31, X31, 0xD0
	0x03D7B5F8 RET
	0x03D7B5FC BL 0x1C16F20
	0x03D7B600 STP X30, X21, [X31 - 0x20]!
	0x03D7B604 STP X20, X19, [X31 + 0x10]
	0x03D7B608 ADRP X20, 0x66C000
	0x03D7B60C ADRP X21, 0x3E8000
	0x03D7B610 LDRB W8, [X20 + 0xD94]
	0x03D7B614 LDR X21, [X21 + 0x270]
	0x03D7B618 MOV X19, X0
	0x03D7B61C TBNZ X8, 0x0, 0x3D7B694
	0x03D7B620 ADRP X0, 0x37A000
	0x03D7B624 LDR X0, [X0 + 0x278]
	0x03D7B628 BL 0x1C16CF4
	0x03D7B62C ADRP X0, 0x3EB000
	0x03D7B630 LDR X0, [X0 + 0xD30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x66D000
	006 Move W8, [X21+3463]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x3ED000
	014 Move X0, [X0+184]
	015 Call 0x1C17CF4
	016 Move X0, 0x3ED000
	017 Move X0, [X0]
	018 Call 0x1C17CF4
	019 Move X0, 0x3ED000
	020 Move X0, [X0+192]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3463], W8
	024 Compare X20, 0
	025 JumpIfEqual {87}
	026 Move X21, [X19+16]
	027 Compare X21, 0
	028 JumpIfEqual {105}
	029 Move X10, 0x3ED000
	030 Move X8, [X21]
	031 Move X10, [X10]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Move X1, [X10]
	034 Compare X9, 0
	035 JumpIfEqual {42}
	036 Move X10, [X8+176]
	037 Add X10, X10, 8
	038 NotImplemented "Instruction LDUR not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Subtract X9, X9, 1
	041 Add X10, X10, 16
	042 Move W2, 6
	043 Move X0, X21
	044 Call 0x1C5D788
	045 Move W9, [X10]
	046 Add W9, W9, 6
	047 Add X8, X8, W9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X2, [X0+8]
	051 Move X0, X21
	052 Move X1, X20
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {81}
	058 Move [X20+40], X31
	059 Move X8, 0x3ED000
	060 Move X8, [X8+184]
	061 Move X0, [X8]
	062 Call 0x1C17F10
	063 Move X8, 0x3ED000
	064 Move X8, [X8+192]
	065 Move X1, X19
	066 Move X3, X31
	067 Move X21, X0
	068 Move X2, [X8]
	069 Call Action`1<Object>..ctor, X0, X1, X2
	070 Move X0, X20
	071 Move X1, X21
	072 Call SortColumnDescription.remove_changed, X0, X1
	073 Move X8, [X19+24]
	074 Compare X8, 0
	075 JumpIfEqual {80}
	076 Move X9, [X8+24]
	077 Move X0, [X8+64]
	078 Move X1, [X8+40]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move W0, 1
	081 Move W0, W31
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Move X21, [X31+40]
	086 Return X0
	087 Move X0, 0x381000
	088 Move X0, [X0+1400]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X19, X0
	092 Move X0, 0x3ED000
	093 Move X0, [X0+224]
	094 Call 0x1C17D08
	095 Move X1, X0
	096 Move X0, X19
	097 Move X2, X31
	098 Call ArgumentException..ctor, X0, X1
	099 Move X0, 0x3ED000
	100 Move X0, [X0+232]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Call 0x1C17DEC
	105 Call 0x1C17F20

Method: System.Void OnDescriptionChanged(UnityEngine.UIElements.SortColumnDescription desc)

Disassembly:
	0x03D7B79C LDRB W8, [X20 + 0xD95]
	0x03D7B7A0 LDR X21, [X21 + 0x110]
	0x03D7B7A4 MOV X19, X0
	0x03D7B7A8 TBNZ X8, 0x0, 0x3D7B7C0
	0x03D7B7AC ADRP X0, 0x3EC000
	0x03D7B7B0 LDR X0, [X0 + 0x110]
	0x03D7B7B4 BL 0x1C16CF4

ISIL:
	001 Move X8, [X0+24]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x03D7B7B8 MOVZ W8, 0x1
	0x03D7B7BC STRB W8, [X20 + 0xD95]
	0x03D7B7C0 LDR X0, [X21]
	0x03D7B7C4 LDR W8, [X0 + 0xE0]
	0x03D7B7C8 CBNZ W8, 0x3D7B7D0
	0x03D7B7CC BL 0x1C16DFC
	0x03D7B7D0 MOV X0, X19
	0x03D7B7D4 LDP X20, X19, [X31 + 0x10]
	0x03D7B7D8 LDP X30, X21, [X31], #0x20
	0x03D7B7DC B 0x3D7AC98
	0x03D7B7E0 STP X30, X21, [X31 - 0x20]!
	0x03D7B7E4 STP X20, X19, [X31 + 0x10]
	0x03D7B7E8 ADRP X20, 0x66C000
	0x03D7B7EC ADRP X21, 0x3EC000
	0x03D7B7F0 LDRB W8, [X20 + 0xD96]
	0x03D7B7F4 LDR X21, [X21 + 0x168]
	0x03D7B7F8 MOV X19, X0
	0x03D7B7FC TBNZ X8, 0x0, 0x3D7B814
	0x03D7B800 ADRP X0, 0x3EC000
	0x03D7B804 LDR X0, [X0 + 0x168]
	0x03D7B808 BL 0x1C16CF4
	0x03D7B80C MOVZ W8, 0x1
	0x03D7B810 STRB W8, [X20 + 0xD96]
	0x03D7B814 LDR X1, [X21]
	0x03D7B818 MOV X0, X19
	0x03D7B81C LDP X20, X19, [X31 + 0x10]
	0x03D7B820 LDP X30, X21, [X31], #0x20
	0x03D7B824 B 0x2736468
	0x03D7B828 STP X30, X21, [X31 - 0x20]!
	0x03D7B82C STP X20, X19, [X31 + 0x10]
	0x03D7B830 ADRP X20, 0x66C000
	0x03D7B834 ADRP X21, 0x3EC000
	0x03D7B838 LDRB W8, [X20 + 0xD97]
	0x03D7B83C LDR X21, [X21 + 0x170]
	0x03D7B840 MOV X19, X0
	0x03D7B844 TBNZ X8, 0x0, 0x3D7B85C
	0x03D7B848 ADRP X0, 0x3EC000
	0x03D7B84C LDR X0, [X0 + 0x170]
	0x03D7B850 BL 0x1C16CF4
	0x03D7B854 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x66D000
	005 Move W8, [X20+3464]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3ED000
	012 Move X0, [X0]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3464], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0x3ED000
	020 Move X8, [X19]
	021 Move X10, [X10]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Boolean get_IsReadOnly()

Disassembly:
	0x03D7B858 STRB W8, [X20 + 0xD97]
	0x03D7B85C LDR X1, [X21]
	0x03D7B860 MOV X0, X19
	0x03D7B864 LDP X20, X19, [X31 + 0x10]
	0x03D7B868 LDP X30, X21, [X31], #0x20
	0x03D7B86C B 0x2773064
	0x03D7B870 STR X30, [X31 - 0x30]!
	0x03D7B874 STP X22, X21, [X31 + 0x10]
	0x03D7B878 STP X20, X19, [X31 + 0x20]
	0x03D7B87C ADRP X21, 0x66C000
	0x03D7B880 ADRP X22, 0x3EC000
	0x03D7B884 LDRB W8, [X21 + 0xD98]
	0x03D7B888 LDR X22, [X22 + 0x170]
	0x03D7B88C MOV W20, W1
	0x03D7B890 MOV X19, X0
	0x03D7B894 TBNZ X8, 0x0, 0x3D7B8D0
	0x03D7B898 ADRP X0, 0x3EC000
	0x03D7B89C LDR X0, [X0 + 0x170]
	0x03D7B8A0 BL 0x1C16CF4
	0x03D7B8A4 ADRP X0, 0x3EC000
	0x03D7B8A8 LDR X0, [X0 + 0x178]
	0x03D7B8AC BL 0x1C16CF4
	0x03D7B8B0 ADRP X0, 0x3EC000
	0x03D7B8B4 LDR X0, [X0 + 0x180]
	0x03D7B8B8 BL 0x1C16CF4
	0x03D7B8BC ADRP X0, 0x3A0000
	0x03D7B8C0 LDR X0, [X0 + 0xAD8]
	0x03D7B8C4 BL 0x1C16CF4
	0x03D7B8C8 MOVZ W8, 0x1
	0x03D7B8CC STRB W8, [X21 + 0xD98]
	0x03D7B8D0 LDR X1, [X22]
	0x03D7B8D4 MOV X0, X19
	0x03D7B8D8 BL 0x2773064
	0x03D7B8DC AND W8, W0, 0x1
	0x03D7B8E0 AND W1, W20, 0x1
	0x03D7B8E4 CMP W8, W1
	0x03D7B8E8 B.EQ 0x3D7B944
	0x03D7B8EC ADRP X8, 0x3EC000
	0x03D7B8F0 LDR X8, [X8 + 0x178]
	0x03D7B8F4 MOV X0, X19
	0x03D7B8F8 LDR X2, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x66D000
	005 Move W8, [X20+3465]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x3ED000
	012 Move X0, [X0]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3465], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {46}
	019 Move X10, 0x3ED000
	020 Move X8, [X19]
	021 Move X10, [X10]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move W2, 1
	033 Move X0, X19
	034 Call 0x1C5D788
	035 Move W9, [X10]
	036 Add W9, W9, 1
	037 Add X8, X8, W9
	038 Add X0, X8, 312
	039 Move X2, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 CallNoReturn X2
	046 Call 0x1C17F20

Method: System.Void Insert(System.Int32 index, UnityEngine.UIElements.SortColumnDescription desc)

Disassembly:
	0x03D7B300 LDR X0, [X0 + 0x140]
	0x03D7B304 BL 0x1C16CF4
	0x03D7B308 ADRP X0, 0x3EC000
	0x03D7B30C LDR X0, [X0 + 0x148]
	0x03D7B310 BL 0x1C16CF4
	0x03D7B314 ADRP X0, 0x3E7000
	0x03D7B318 LDR X0, [X0 + 0xED8]
	0x03D7B31C BL 0x1C16CF4
	0x03D7B320 ADRP X0, 0x3EB000
	0x03D7B324 LDR X0, [X0 + 0x930]
	0x03D7B328 BL 0x1C16CF4
	0x03D7B32C ADRP X0, 0x3EC000
	0x03D7B330 LDR X0, [X0 + 0x138]
	0x03D7B334 BL 0x1C16CF4
	0x03D7B338 MOVZ W8, 0x1
	0x03D7B33C STRB W8, [X26 + 0xD92]
	0x03D7B340 LDR X8, [X19]
	0x03D7B344 LDR X9, [X25]
	0x03D7B348 MOV X2, X31
	0x03D7B34C LDR X8, [X8 + 0xB8]
	0x03D7B350 STR X9, [X8]
	0x03D7B354 LDR X8, [X19]
	0x03D7B358 LDR X1, [X24]
	0x03D7B35C LDR X8, [X8 + 0xB8]
	0x03D7B360 LDR X0, [X8]
	0x03D7B364 BL 0x321B938
	0x03D7B368 LDR X8, [X19]
	0x03D7B36C MOV X2, X31
	0x03D7B370 LDR X8, [X8 + 0xB8]
	0x03D7B374 STR X0, [X8 + 0x8]
	0x03D7B378 LDR X0, [X8]
	0x03D7B37C LDR X1, [X23]
	0x03D7B380 BL 0x321B938
	0x03D7B384 LDR X8, [X19]
	0x03D7B388 MOV X2, X31
	0x03D7B38C LDR X8, [X8 + 0xB8]
	0x03D7B390 STR X0, [X8 + 0x10]
	0x03D7B394 LDR X0, [X8]
	0x03D7B398 LDR X1, [X22]
	0x03D7B39C BL 0x321B938
	0x03D7B3A0 LDR X8, [X19]
	0x03D7B3A4 MOV X2, X31
	0x03D7B3A8 LDR X8, [X8 + 0xB8]
	0x03D7B3AC STR X0, [X8 + 0x18]
	0x03D7B3B0 LDR X0, [X8]
	0x03D7B3B4 LDR X1, [X21]
	0x03D7B3B8 BL 0x321B938
	0x03D7B3BC LDR X8, [X19]
	0x03D7B3C0 MOV X2, X31
	0x03D7B3C4 LDR X8, [X8 + 0xB8]
	0x03D7B3C8 STR X0, [X8 + 0x20]
	0x03D7B3CC LDR X0, [X8]
	0x03D7B3D0 LDR X1, [X20]
	0x03D7B3D4 BL 0x321B938
	0x03D7B3D8 LDR X8, [X19]
	0x03D7B3DC LDP X20, X19, [X31 + 0x40]
	0x03D7B3E0 LDP X22, X21, [X31 + 0x30]
	0x03D7B3E4 LDP X24, X23, [X31 + 0x20]
	0x03D7B3E8 LDR X8, [X8 + 0xB8]
	0x03D7B3EC LDP X26, X25, [X31 + 0x10]
	0x03D7B3F0 STR X0, [X8 + 0x28]
	0x03D7B3F4 LDR X30, [X31], #0x50
	0x03D7B3F8 RET
	0x03D7B3FC SUB X31, X31, 0xD0
	0x03D7B400 STP X30, X23, [X31 + 0xA0]
	0x03D7B404 STP X22, X21, [X31 + 0xB0]
	0x03D7B408 STP X20, X19, [X31 + 0xC0]
	0x03D7B40C ADRP X23, 0x66C000
	0x03D7B410 LDRB W8, [X23 + 0xD93]
	0x03D7B414 MOV X20, X3
	0x03D7B418 MOV X19, X2
	0x03D7B41C MOV X22, X1
	0x03D7B420 MOV X21, X0
	0x03D7B424 TBNZ X8, 0x0, 0x3D7B448
	0x03D7B428 ADRP X0, 0x3EC000
	0x03D7B42C LDR X0, [X0 + 0x110]
	0x03D7B430 BL 0x1C16CF4
	0x03D7B434 ADRP X0, 0x37A000
	0x03D7B438 LDR X0, [X0 + 0x278]
	0x03D7B43C BL 0x1C16CF4
	0x03D7B440 MOVZ W8, 0x1
	0x03D7B444 STRB W8, [X23 + 0xD93]
	0x03D7B448 LDP V1, V0, [X20]
	0x03D7B44C ADD X3, X31, 0x60
	0x03D7B450 MOV X0, X21
	0x03D7B454 MOV X1, X22
	0x03D7B458 MOV X2, X19
	0x03D7B45C MOV X4, X31
	0x03D7B460 STP V1, V0, [X31 + 0x60]
	0x03D7B464 BL 0x3CEA08C
	0x03D7B468 CBZ X22, 0x3D7B4A8
	0x03D7B46C ADRP X8, 0x3EC000
	0x03D7B470 LDR X8, [X8 + 0x110]
	0x03D7B474 LDR X9, [X22]
	0x03D7B478 LDR X8, [X8]
	0x03D7B47C LDRB W11, [X9 + 0x130]
	0x03D7B480 LDRB W10, [X8 + 0x130]
	0x03D7B484 CMP W11, W10
	0x03D7B488 B.CS 0x3D7B494
	0x03D7B48C MOV X22, X31
	0x03D7B490 B 0x3D7B4A8
	0x03D7B494 LDR X9, [X9 + 0xC8]
	0x03D7B498 ADD X9, X9, X10, 0x3, LSL
	0x03D7B49C LDUR X9, [X9 - 0x8]
	0x03D7B4A0 CMP X9, X8
	0x03D7B4A4 CSEL X22, X22, X31, EQ
	0x03D7B4A8 LDP V0, V1, [X20]
	0x03D7B4AC LDR X0, [X21 + 0x78]
	0x03D7B4B0 STP V0, V1, [X31 + 0x40]
	0x03D7B4B4 CBZ X0, 0x3D7B5FC
	0x03D7B4B8 LDR X8, [X0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x66D000
	009 Move W8, [X22+3466]
	010 Move X19, X2
	011 Move W21, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x3ED000
	018 Move X0, [X0+184]
	019 Call 0x1C17CF4
	020 Move X0, 0x3ED000
	021 Move X0, [X0+8]
	022 Call 0x1C17CF4
	023 Move X0, 0x3ED000
	024 Move X0, [X0+192]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+3466], W8
	028 Compare X19, 0
	029 JumpIfEqual {102}
	030 Move X0, X20
	031 Move X1, X19
	032 Call SortColumnDescriptions.Contains, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {109}
	037 Move X22, [X20+16]
	038 Compare X22, 0
	039 JumpIfEqual {127}
	040 Move X10, 0x3ED000
	041 Move X8, [X22]
	042 Move X10, [X10+8]
	043 Move X24, 0x3ED000
	044 Move X23, 0x3ED000
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Move X24, [X24+184]
	048 Move X23, [X23+192]
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move W2, 3
	058 Move X0, X22
	059 Call 0x1C5D788
	060 Move W9, [X10]
	061 Add W9, W9, 3
	062 Add X8, X8, W9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X3, [X0+8]
	066 Move X0, X22
	067 Move W1, W21
	068 Move X2, X19
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X0, [X24]
	071 Call 0x1C17F10
	072 Move X2, [X23]
	073 Move X1, X20
	074 Move X3, X31
	075 Move X21, X0
	076 Call Action`1<Object>..ctor, X0, X1, X2
	077 Move X0, X19
	078 Move X1, X21
	079 Call SortColumnDescription.add_changed, X0, X1
	080 Move X8, [X20+24]
	081 Compare X8, 0
	082 JumpIfEqual {94}
	083 Move X2, [X8+24]
	084 Move X0, [X8+64]
	085 Move X1, [X8+40]
	086 Move X20, [X31+48]
	087 Move X19, [X31+56]
	088 Move X22, [X31+32]
	089 Move X21, [X31+40]
	090 Move X24, [X31+16]
	091 Move X23, [X31+24]
	092 Move X30, [X31+64]
	093 CallNoReturn X2
	094 Move X20, [X31+48]
	095 Move X19, [X31+56]
	096 Move X22, [X31+32]
	097 Move X21, [X31+40]
	098 Move X24, [X31+16]
	099 Move X23, [X31+24]
	100 Move X30, [X31+64]
	101 Return 
	102 Move X0, 0x381000
	103 Move X0, [X0+1400]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X19, X0
	107 Move X0, 0x3ED000
	108 Move X0, [X0+200]
	109 Move X0, 0x381000
	110 Move X0, [X0+1400]
	111 Call 0x1C17D08
	112 Call 0x1C17F10
	113 Move X19, X0
	114 Move X0, 0x3ED000
	115 Move X0, [X0+208]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X19
	119 Move X2, X31
	120 Call ArgumentException..ctor, X0, X1
	121 Move X0, 0x3ED000
	122 Move X0, [X0+216]
	123 Call 0x1C17D08
	124 Move X1, X0
	125 Move X0, X19
	126 Call 0x1C17DEC
	127 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03D79DFC RET
	0x03D79E00 STR X30, [X31 - 0x40]!
	0x03D79E04 STP X24, X23, [X31 + 0x10]
	0x03D79E08 STP X22, X21, [X31 + 0x20]
	0x03D79E0C STP X20, X19, [X31 + 0x30]
	0x03D79E10 ADRP X21, 0x66E000
	0x03D79E14 LDRB W8, [X21 + 0xD7E]
	0x03D79E18 MOV X19, X1
	0x03D79E1C MOV X20, X0
	0x03D79E20 TBNZ X8, 0x0, 0x3D79E38
	0x03D79E24 ADRP X0, 0x3EE000
	0x03D79E28 LDR X0, [X0 + 0xB8]
	0x03D79E2C BL 0x1C16CF4
	0x03D79E30 MOVZ W8, 0x1
	0x03D79E34 STRB W8, [X21 + 0xD7E]
	0x03D79E38 ADRP X24, 0x3EE000
	0x03D79E3C LDR X21, [X20 + 0x30]!
	0x03D79E40 LDR X24, [X24 + 0xB8]
	0x03D79E44 MOV X0, X21
	0x03D79E48 MOV X1, X19
	0x03D79E4C MOV X2, X31
	0x03D79E50 BL 0x33C0DE4
	0x03D79E54 CBZ X0, 0x3D79E74
	0x03D79E58 LDR X23, [X24]
	0x03D79E5C MOV X22, X0
	0x03D79E60 MOV X1, X23
	0x03D79E64 BL 0x1C16E00
	0x03D79E68 MOV X1, X0
	0x03D79E6C CBNZ X0, 0x3D79E78
	0x03D79E70 B 0x3D79EA4
	0x03D79E74 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x66F000
	007 Move X22, 0x3EE000
	008 Move X20, 0x3EE000
	009 Move W8, [X21+3467]
	010 Move X22, [X22+2120]
	011 Move X20, [X20+2128]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x3EE000
	018 Move X0, [X0+2128]
	019 Call 0x1C17CF4
	020 Move X0, 0x3EE000
	021 Move X0, [X0+2120]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3467], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call List`1<Object>..ctor, X0
	030 Move [X19+16], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

