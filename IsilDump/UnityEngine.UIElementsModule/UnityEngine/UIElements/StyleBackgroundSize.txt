Type: UnityEngine.UIElements.StyleBackgroundSize

Method: UnityEngine.UIElements.BackgroundSize get_value()

Disassembly:
	0x03DFEE18 MOV W0, W31
	0x03DFEE1C RET
	0x03DFEE20 STP X30, X21, [X31 - 0x20]!
	0x03DFEE24 STP X20, X19, [X31 + 0x10]
	0x03DFEE28 ADRP X21, 0x5EA000
	0x03DFEE2C LDRB W8, [X21 + 0x2CD]
	0x03DFEE30 MOV X20, X1
	0x03DFEE34 MOV X19, X0
	0x03DFEE38 TBNZ X8, 0x0, 0x3DFEE50
	0x03DFEE3C ADRP X0, 0x36B000
	0x03DFEE40 LDR X0, [X0 + 0xD80]
	0x03DFEE44 BL 0x1C16CF4
	0x03DFEE48 MOVZ W8, 0x1
	0x03DFEE4C STRB W8, [X21 + 0x2CD]
	0x03DFEE50 CBZ X20, 0x3DFEEB4
	0x03DFEE54 ADRP X8, 0x36B000

ISIL:
	001 Subtract X31, X31, 32
	002 Move W9, [X0+20]
	003 Compare W9, 0
	004 JumpIfEqual {8}
	005 Move [X31], X31
	006 Move [X31+8], X31
	007 Move [X31+16], W31
	008 Move W9, [X0+16]
	009 Move V0, [X0]
	010 Move [X31+16], W9
	011 Move [X31], V0
	012 Move W9, [X31+16]
	013 Move V0, [X31]
	014 Move [X8+16], W9
	015 Move [X8], V0
	016 Add X31, X31, 32
	017 Return X0

Method: UnityEngine.UIElements.StyleKeyword get_keyword()

Disassembly:
	0x03DFEE58 LDR X8, [X8 + 0xD80]
	0x03DFEE5C LDR X9, [X20]

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void .ctor(UnityEngine.UIElements.StyleKeyword keyword)

Disassembly:
	0x03DFEE60 LDR X8, [X8]
	0x03DFEE64 CMP X9, X8
	0x03DFEE68 B.NE 0x3DFEEB4

ISIL:
	001 Move [X0], X31
	002 Move [X0+8], X31
	003 Move [X0+16], W31
	004 Move [X0+20], W1
	005 Return 

Method: System.Void .ctor(UnityEngine.UIElements.BackgroundSize v, UnityEngine.UIElements.StyleKeyword keyword)

Disassembly:
	0x03DFEE6C MOV X0, X20
	0x03DFEE70 BL 0x1C16E08
	0x03DFEE74 LDR W8, [X0 + 0x8]
	0x03DFEE78 LDR W9, [X19 + 0x8]
	0x03DFEE7C CMP W9, W8
	0x03DFEE80 B.NE 0x3DFEEB4

ISIL:
	001 Move [X0+20], W2
	002 Move W8, [X1+16]
	003 Move V0, [X1]
	004 Move [X0+16], W8
	005 Move [X0], V0
	006 Return 

Method: System.Boolean op_Equality(UnityEngine.UIElements.StyleBackgroundSize lhs, UnityEngine.UIElements.StyleBackgroundSize rhs)

Disassembly:
	0x03DFEE84 LDR X8, [X0]
	0x03DFEE88 LDR X9, [X19]
	0x03DFEE8C FMOV S0, W8
	0x03DFEE90 FMOV S1, W9
	0x03DFEE94 UBFM X10, X8, 0x20, 0x3F
	0x03DFEE98 UBFM X8, X9, 0x20, 0x3F
	0x03DFEE9C FCMP S0, S1
	0x03DFEEA0 CSET W9, EQ
	0x03DFEEA4 CMP W10, W8
	0x03DFEEA8 CSET W8, EQ
	0x03DFEEAC AND W0, W9, W8, 0x0
	0x03DFEEB0 B 0x3DFEEB8
	0x03DFEEB4 MOV W0, W31
	0x03DFEEB8 LDP X20, X19, [X31 + 0x10]
	0x03DFEEBC LDP X30, X21, [X31], #0x20
	0x03DFEEC0 RET
	0x03DFEEC4 STP X30, X19, [X31 - 0x10]!
	0x03DFEEC8 MOV X1, X31
	0x03DFEECC MOV X19, X0
	0x03DFEED0 BL 0x338FE0C
	0x03DFEED4 LDP W8, W10, [X19 + 0x4]
	0x03DFEED8 MOVZ W9, 0x18D
	0x03DFEEDC MUL W11, W0, W9
	0x03DFEEE0 EOR W8, W11, W8, 0x0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move W8, [X0+20]
	004 Move W9, [X1+20]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W8, [X0+16]
	007 Move V0, [X0]
	008 Add X0, X31, 32
	009 Move X2, X31
	010 Move [X31+48], W8
	011 Move [X31+2], V0
	012 Move W8, [X1+16]
	013 Move V0, [X1]
	014 Add X1, X31, 0
	015 Move [X31+16], W8
	016 Move [X31], V0
	017 Call BackgroundSize.op_Equality, X0, X1
	018 Move W0, W31
	019 Move X30, [X31+64]
	020 And W0, W0, 1
	021 Add X31, X31, 80
	022 Return X0

Method: UnityEngine.UIElements.StyleBackgroundSize op_Implicit(UnityEngine.UIElements.StyleKeyword keyword)

Disassembly:
	0x03DFEEE4 MUL W8, W8, W9
	0x03DFEEE8 EOR W0, W8, W10, 0x0
	0x03DFEEEC LDP X30, X19, [X31], #0x10

ISIL:
	001 Move [X8], X31
	002 Move [X8+8], X31
	003 Move [X8+16], W31
	004 Move [X8+20], W0
	005 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.StyleBackgroundSize other)

Disassembly:
	0x03DFEEF0 RET
	0x03DFEEF4 SUB X31, X31, 0x40
	0x03DFEEF8 STR X30, [X31 + 0x10]
	0x03DFEEFC STP X22, X21, [X31 + 0x20]
	0x03DFEF00 STP X20, X19, [X31 + 0x30]
	0x03DFEF04 ADRP X22, 0x5EA000
	0x03DFEF08 ADRP X21, 0x36B000
	0x03DFEF0C ADRP X20, 0x36B000
	0x03DFEF10 LDRB W8, [X22 + 0x2CE]
	0x03DFEF14 LDR X21, [X21 + 0xD80]
	0x03DFEF18 LDR X20, [X20 + 0xD88]
	0x03DFEF1C MOV X19, X0
	0x03DFEF20 TBNZ X8, 0x0, 0x3DFEF44
	0x03DFEF24 ADRP X0, 0x36B000
	0x03DFEF28 LDR X0, [X0 + 0xD80]
	0x03DFEF2C BL 0x1C16CF4
	0x03DFEF30 ADRP X0, 0x36B000
	0x03DFEF34 LDR X0, [X0 + 0xD88]
	0x03DFEF38 BL 0x1C16CF4
	0x03DFEF3C MOVZ W8, 0x1
	0x03DFEF40 STRB W8, [X22 + 0x2CE]
	0x03DFEF44 LDR W8, [X19 + 0x8]
	0x03DFEF48 LDR X9, [X19]
	0x03DFEF4C LDR X0, [X21]
	0x03DFEF50 ADD X1, X31, 0x0
	0x03DFEF54 STR W8, [X31 + 0x8]
	0x03DFEF58 STR X9, [X31]
	0x03DFEF5C BL 0x1C16E04
	0x03DFEF60 LDR X1, [X20]
	0x03DFEF64 BL 0x2295A68
	0x03DFEF68 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+128], X30
	003 Move W8, [X1+16]
	004 Move W9, [X1+20]
	005 Move V0, [X1]
	006 Move [X31+48], W8
	007 Move [X31+2], V0
	008 Move W8, [X0+16]
	009 Move V0, [X0]
	010 Move [X31+16], W8
	011 Move [X31], V0
	012 Move W8, [X0+20]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move V0, [X31+2]
	015 Move W8, [X31+48]
	016 Move V1, [X31]
	017 Move W9, [X31+16]
	018 Add X0, X31, 96
	019 Add X1, X31, 64
	020 Move X2, X31
	021 Move [X31+6], V0
	022 Move [X31+112], W8
	023 Move [X31+4], V1
	024 Move [X31+80], W9
	025 Call BackgroundSize.op_Equality, X0, X1
	026 Move W0, W31
	027 Move X30, [X31+128]
	028 And W0, W0, 1
	029 Add X31, X31, 144
	030 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03DFEF6C LDP X22, X21, [X31 + 0x20]
	0x03DFEF70 LDR X30, [X31 + 0x10]
	0x03DFEF74 ADD X31, X31, 0x40
	0x03DFEF78 RET
	0x03DFEF7C SUB X31, X31, 0x50
	0x03DFEF80 STP X30, X19, [X31 + 0x40]
	0x03DFEF84 LDR W9, [X0 + 0x18]
	0x03DFEF88 CMP W9, 0x4
	0x03DFEF8C B.HI 0x3DFF064
	0x03DFEF90 MOV X19, X8
	0x03DFEF94 ADRP X8, 0xFFFFFFFFFCD9A000
	0x03DFEF98 ADD X8, X8, 0x5C1
	0x03DFEF9C ADR X10, 0x10
	0x03DFEFA0 LDRB W11, [X8, X9, LSL]
	0x03DFEFA4 ADD X10, X10, X11, 0x2, LSL
	0x03DFEFA8 BR X10
	0x03DFEFAC ADD X8, X31, 0x28
	0x03DFEFB0 BL 0x3DFD838
	0x03DFEFB4 LDUR V0, [X31 + 0x28]
	0x03DFEFB8 LDR W8, [X31 + 0x38]
	0x03DFEFBC LDRB W9, [X31 + 0x3F]
	0x03DFEFC0 LDURH W10, [X31 + 0x3D]
	0x03DFEFC4 STR V0, [X31 + 0x1]
	0x03DFEFC8 STR W8, [X31 + 0x20]
	0x03DFEFCC STRB W9, [X31 + 0x26]
	0x03DFEFD0 STRH W10, [X31 + 0xC]
	0x03DFEFD4 STRB W9, [X31 + 0xE]
	0x03DFEFD8 MOVZ W8, 0x1
	0x03DFEFDC B 0x3DFF034
	0x03DFEFE0 ADD X8, X31, 0x28
	0x03DFEFE4 BL 0x3DFD838
	0x03DFEFE8 LDUR V0, [X31 + 0x28]
	0x03DFEFEC LDR W9, [X31 + 0x38]
	0x03DFEFF0 LDURH W10, [X31 + 0x3D]
	0x03DFEFF4 LDRB W11, [X31 + 0x3F]
	0x03DFEFF8 LDRB W8, [X31 + 0x3C]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x5EB000
	007 Move W8, [X21+702]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x36C000
	015 Move X0, [X0+3352]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+702], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X8, 0x36C000
	022 Move X8, [X8+3352]
	023 Move X9, [X20]
	024 Move X8, [X8]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X0, X20
	028 Call 0x1C17E08
	029 Move V0, [X0]
	030 Move X8, [X0+16]
	031 Add X1, X31, 0
	032 Move X0, X19
	033 Move [X31], V0
	034 Move [X31+16], X8
	035 Call StyleBackgroundSize.Equals, X0, X1
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 And W0, W0, 1
	041 Add X31, X31, 64
	042 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03DFEFFC STR V0, [X31 + 0x1]
	0x03DFF000 STR W9, [X31 + 0x20]
	0x03DFF004 STRH W10, [X31 + 0xC]
	0x03DFF008 STRB W11, [X31 + 0xE]
	0x03DFF00C B 0x3DFF034
	0x03DFF010 LDR W8, [X0 + 0x10]
	0x03DFF014 LDR V0, [X0]
	0x03DFF018 STR W8, [X31 + 0x20]
	0x03DFF01C STR V0, [X31 + 0x1]
	0x03DFF020 LDRB W9, [X0 + 0x17]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call BackgroundSize.GetHashCode, X0
	006 Move W8, [X19+20]
	007 Move W9, 397
	008 Multiply W9, W0, W9
	009 Xor W0, W9, W8
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.String ToString()

Disassembly:
	0x03DFF024 LDURH W10, [X0 + 0x15]
	0x03DFF028 LDRB W8, [X0 + 0x14]
	0x03DFF02C STRB W9, [X31 + 0xE]
	0x03DFF030 STRH W10, [X31 + 0xC]
	0x03DFF034 LDR V0, [X31 + 0x1]
	0x03DFF038 LDR W9, [X31 + 0x20]
	0x03DFF03C STRB W8, [X19 + 0x14]
	0x03DFF040 LDRB W8, [X31 + 0xE]
	0x03DFF044 LDRH W10, [X31 + 0xC]
	0x03DFF048 STR W9, [X19 + 0x10]
	0x03DFF04C STR V0, [X19]
	0x03DFF050 STRB W8, [X19 + 0x17]
	0x03DFF054 STURH W10, [X19 + 0x15]
	0x03DFF058 LDP X30, X19, [X31 + 0x40]
	0x03DFF05C ADD X31, X31, 0x50
	0x03DFF060 RET
	0x03DFF064 ADRP X0, 0x2FD000
	0x03DFF068 LDR X0, [X0 + 0x758]
	0x03DFF06C BL 0x1C16D08
	0x03DFF070 BL 0x1C16F10
	0x03DFF074 MOV X1, X31
	0x03DFF078 MOV X19, X0
	0x03DFF07C BL 0x3380288
	0x03DFF080 ADRP X0, 0x36A000
	0x03DFF084 LDR X0, [X0 + 0xD90]
	0x03DFF088 BL 0x1C16D08
	0x03DFF08C MOV X1, X0
	0x03DFF090 MOV X0, X19
	0x03DFF094 BL 0x1C16DEC
	0x03DFF098 LDR W0, [X0 + 0x18]
	0x03DFF09C RET
	0x03DFF0A0 STR W1, [X0 + 0x18]
	0x03DFF0A4 STP X31, X31, [X0 + 0x8]
	0x03DFF0A8 STR X31, [X0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x5EA000
	008 Move X21, 0x36B000
	009 Move X20, 0x36B000
	010 Move W8, [X22+703]
	011 Move X21, [X21+3352]
	012 Move X20, [X20+3360]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x36B000
	019 Move X0, [X0+3352]
	020 Call 0x1C17CF4
	021 Move X0, 0x36B000
	022 Move X0, [X0+3360]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+703], W8
	026 Move X8, [X19+16]
	027 Move V0, [X19]
	028 Move X0, [X21]
	029 Add X1, X31, 0
	030 Move [X31+16], X8
	031 Move [X31], V0
	032 Call 0x1C17E04
	033 Move X1, [X20]
	034 Call 0x2296080, X0
	035 Move X20, [X31+64]
	036 Move X19, [X31+72]
	037 Move X22, [X31+48]
	038 Move X21, [X31+56]
	039 Move X30, [X31+32]
	040 Add X31, X31, 80
	041 Return X0

