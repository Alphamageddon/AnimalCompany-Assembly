Type: UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesBackgroundSize

Method: System.Func`3<UnityEngine.UIElements.BackgroundSize, UnityEngine.UIElements.BackgroundSize, System.Boolean> get_SameFunc()

Disassembly:
	0x03E060D8 BL 0x306C960
	0x03E060DC LDR X0, [X23]

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Boolean IsSame(UnityEngine.UIElements.BackgroundSize a, UnityEngine.UIElements.BackgroundSize b)

Disassembly:
	0x03E060E0 LDR W8, [X0 + 0xE0]
	0x03E060E4 CBNZ W8, 0x3E060F0
	0x03E060E8 BL 0x1C16DFC
	0x03E060EC LDR X0, [X23]
	0x03E060F0 ADRP X9, 0x364000
	0x03E060F4 LDR X8, [X0 + 0xB8]
	0x03E060F8 LDR X9, [X9 + 0xE0]
	0x03E060FC LDR X20, [X8 + 0x8]
	0x03E06100 LDR X0, [X9]
	0x03E06104 BL 0x1C16F10
	0x03E06108 ADRP X8, 0x364000
	0x03E0610C LDR X8, [X8 + 0x110]
	0x03E06110 MOV X1, X31
	0x03E06114 MOV X3, X31
	0x03E06118 MOV X21, X0
	0x03E0611C LDR X2, [X8]
	0x03E06120 BL 0x295B494
	0x03E06124 CBZ X20, 0x3E0639C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+64], X30
	003 Move W8, [X0+16]
	004 Move V0, [X0]
	005 Add X0, X31, 32
	006 Move X2, X31
	007 Move [X31+48], W8
	008 Move [X31+2], V0
	009 Move W8, [X1+16]
	010 Move V0, [X1]
	011 Add X1, X31, 0
	012 Move [X31+16], W8
	013 Move [X31], V0
	014 Call BackgroundSize.op_Equality, X0, X1
	015 Move X30, [X31+64]
	016 And W0, W0, 1
	017 Add X31, X31, 80
	018 Return X0

Method: System.Boolean ConvertUnits(UnityEngine.UIElements.VisualElement owner, UnityEngine.UIElements.StyleSheets.StylePropertyId prop, ref UnityEngine.UIElements.BackgroundSize a, ref UnityEngine.UIElements.BackgroundSize b)

Disassembly:
	0x03E06128 ADRP X8, 0x364000
	0x03E0612C LDR X8, [X8 + 0xF8]
	0x03E06130 MOV X0, X20
	0x03E06134 MOV X1, X21
	0x03E06138 LDR X2, [X8]
	0x03E0613C BL 0x306CE6C
	0x03E06140 LDR X8, [X23]
	0x03E06144 LDR X8, [X8 + 0xB8]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {9}
	003 Move X0, X1
	004 Move X1, X3
	005 Move X2, X4
	006 Move X3, X31
	007 Call VisualElement.TryConvertBackgroundSizeUnits, X0, X1, X2
	008 Return X0
	009 Move [X31-16], X30
	010 Call 0x1C17F20

Method: System.Void UpdateComputedStyle()

Disassembly:
	0x03E06148 LDR X8, [X8 + 0x8]
	0x03E0614C CBZ X8, 0x3E0639C
	0x03E06150 ADRP X9, 0x2ED000
	0x03E06154 LDR X9, [X9 + 0x5A8]
	0x03E06158 LDR X0, [X9]
	0x03E0615C ADRP X9, 0x2ED000
	0x03E06160 LDR X9, [X9 + 0x988]
	0x03E06164 LDR W20, [X8 + 0x18]
	0x03E06168 LDR X21, [X9]
	0x03E0616C LDR W9, [X0 + 0xE0]
	0x03E06170 CBNZ W9, 0x3E06178
	0x03E06174 BL 0x1C16DFC
	0x03E06178 MOVZ W0, 0x4
	0x03E0617C MOV W1, W20
	0x03E06180 MOV X2, X31
	0x03E06184 BL 0x337EE94
	0x03E06188 CMP W0, 0x1
	0x03E0618C B.LT 0x3E06338
	0x03E06190 ADRP X25, 0x364000
	0x03E06194 LDR X25, [X25 + 0x100]
	0x03E06198 MOV X22, X31
	0x03E0619C MOV W29, W31
	0x03E061A0 MOV W20, W31
	0x03E061A4 ADD X19, X19, 0x10
	0x03E061A8 MOV W24, W0
	0x03E061AC MOVZ W8, 0x1
	0x03E061B0 MOVZ W27, 0x13
	0x03E061B4 MOVZ W28, 0x11
	0x03E061B8 TBZ X8, 0x0, 0x3E061C4
	0x03E061BC LDR X0, [X23]
	0x03E061C0 B 0x3E062A4
	0x03E061C4 LDR X0, [X23]
	0x03E061C8 LDR W8, [X0 + 0xE0]
	0x03E061CC CBNZ W8, 0x3E061D8
	0x03E061D0 BL 0x1C16DFC
	0x03E061D4 LDR X0, [X23]
	0x03E061D8 LDR X8, [X0 + 0xB8]
	0x03E061DC LDR X9, [X8 + 0x8]
	0x03E061E0 CBZ X9, 0x3E0639C
	0x03E061E4 LDR W8, [X9 + 0x18]
	0x03E061E8 CMP W20, W8
	0x03E061EC B.GE 0x3E06278
	0x03E061F0 LDR W8, [X0 + 0xE0]
	0x03E061F4 CBNZ W8, 0x3E0620C
	0x03E061F8 BL 0x1C16DFC
	0x03E061FC LDR X8, [X23]
	0x03E06200 LDR X8, [X8 + 0xB8]
	0x03E06204 LDR X9, [X8 + 0x8]
	0x03E06208 CBZ X9, 0x3E0639C
	0x03E0620C LDR X2, [X25]
	0x03E06210 ADD X8, X31, 0x8
	0x03E06214 MOV X0, X9
	0x03E06218 MOV W1, W20
	0x03E0621C BL 0x306A7D0
	0x03E06220 LDR W8, [X31 + 0x10]
	0x03E06224 CMP W8, W29
	0x03E06228 B.NE 0x3E06278
	0x03E0622C LDR X0, [X23]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move W20, [X0+72]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X19, X0
	011 Move W21, W31
	012 Move W22, 80
	013 Move X8, [X19+40]
	014 Compare X8, 0
	015 JumpIfEqual {62}
	016 Move W9, [X8+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X23, W21
	019 Add X8, X8, X23
	020 Move X0, [X8+32]
	021 Compare X0, 0
	022 JumpIfEqual {62}
	023 Move X1, X31
	024 Call VisualElement.get_computedStyle, X0
	025 Move X8, [X19+40]
	026 Compare X8, 0
	027 JumpIfEqual {62}
	028 Move W9, [X8+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, [X19+48]
	031 Compare X9, 0
	032 JumpIfEqual {62}
	033 Move W10, [X9+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X10, [X19+64]
	036 Compare X10, 0
	037 JumpIfEqual {62}
	038 Move W11, [X10+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X8, X8, X23
	041 Add X9, X9, X23
	042 NotImplemented "Instruction MADD not yet implemented."
	043 Move X1, [X8+32]
	044 Move W8, [X10+108]
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move W2, [X9+32]
	047 Add X3, X31, 0
	048 Move X4, X31
	049 Move [X31+16], W8
	050 Move [X31], V0
	051 Call ComputedStyle.ApplyPropertyAnimation, X0, X1, X2, X3
	052 Add W21, W21, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X20, [X31+64]
	055 Move X19, [X31+72]
	056 Move X22, [X31+48]
	057 Move X21, [X31+56]
	058 Move X30, [X31+32]
	059 Move X23, [X31+40]
	060 Add X31, X31, 80
	061 Return 
	062 Call 0x1C17F20
	063 Call 0x1C17F28

Method: System.Void UpdateComputedStyle(System.Int32 i)

Disassembly:
	0x03E06230 LDR W8, [X0 + 0xE0]
	0x03E06234 CBNZ W8, 0x3E06240
	0x03E06238 BL 0x1C16DFC
	0x03E0623C LDR X0, [X23]
	0x03E06240 LDR X8, [X0 + 0xB8]
	0x03E06244 LDR X0, [X8 + 0x8]
	0x03E06248 CBZ X0, 0x3E0639C
	0x03E0624C LDR X2, [X25]
	0x03E06250 ADD X8, X31, 0x8
	0x03E06254 MOV W1, W20
	0x03E06258 BL 0x306A7D0
	0x03E0625C LDR X0, [X31 + 0x8]
	0x03E06260 MOV X1, X21
	0x03E06264 MOV X2, X31
	0x03E06268 BL 0x321BA08
	0x03E0626C TBZ X0, 0x0, 0x3E06278
	0x03E06270 ADD W20, W20, 0x1
	0x03E06274 B 0x3E061C4
	0x03E06278 LDR X0, [X23]
	0x03E0627C LDR W8, [X0 + 0xE0]
	0x03E06280 CBNZ W8, 0x3E0628C
	0x03E06284 BL 0x1C16DFC
	0x03E06288 LDR X0, [X23]
	0x03E0628C LDR X8, [X0 + 0xB8]
	0x03E06290 LDR X8, [X8 + 0x8]
	0x03E06294 CBZ X8, 0x3E0639C
	0x03E06298 LDR W8, [X8 + 0x18]
	0x03E0629C CMP W8, W20
	0x03E062A0 B.EQ 0x3E06338
	0x03E062A4 LDR W8, [X0 + 0xE0]
	0x03E062A8 CBNZ W8, 0x3E062B4
	0x03E062AC BL 0x1C16DFC
	0x03E062B0 LDR X0, [X23]
	0x03E062B4 LDR X8, [X0 + 0xB8]
	0x03E062B8 LDR X0, [X8 + 0x8]
	0x03E062BC CBZ X0, 0x3E0639C
	0x03E062C0 LDR X2, [X25]
	0x03E062C4 ADD X8, X31, 0x8
	0x03E062C8 MOV W1, W20
	0x03E062CC BL 0x306A7D0
	0x03E062D0 LDR X8, [X23]
	0x03E062D4 LDR X8, [X8 + 0xB8]
	0x03E062D8 LDR X0, [X8 + 0x8]
	0x03E062DC CBZ X0, 0x3E0639C
	0x03E062E0 LDR X2, [X25]
	0x03E062E4 LDR W29, [X31 + 0x10]
	0x03E062E8 ADD X8, X31, 0x8
	0x03E062EC MOV W1, W20
	0x03E062F0 BL 0x306A7D0
	0x03E062F4 LDR X21, [X31 + 0x8]
	0x03E062F8 CBZ X21, 0x3E0639C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X8, [X0+40]
	007 Compare X8, 0
	008 JumpIfEqual {55}
	009 Move W9, [X8+24]
	010 Move W19, W1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move X21, W19
	013 Add X8, X8, X21
	014 Move X20, X0
	015 Move X0, [X8+32]
	016 Compare X0, 0
	017 JumpIfEqual {55}
	018 Move X1, X31
	019 Call VisualElement.get_computedStyle, X0
	020 Move X8, [X20+40]
	021 Compare X8, 0
	022 JumpIfEqual {55}
	023 Move W9, [X8+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X9, [X20+48]
	026 Compare X9, 0
	027 JumpIfEqual {55}
	028 Move W10, [X9+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X10, [X20+64]
	031 Compare X10, 0
	032 JumpIfEqual {55}
	033 Move W11, [X10+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add X8, X8, X21
	036 Move W11, 80
	037 Add X9, X9, X21
	038 Move X1, [X8+32]
	039 NotImplemented "Instruction NOP not yet implemented."
	040 NotImplemented "Instruction MADD not yet implemented."
	041 Move W10, [X8+108]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 Move W2, [X9+32]
	044 Add X3, X31, 0
	045 Move X4, X31
	046 Move [X31+16], W10
	047 Move [X31], V0
	048 Call ComputedStyle.ApplyPropertyAnimation, X0, X1, X2, X3
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Add X31, X31, 64
	054 Return 
	055 Call 0x1C17F20
	056 Call 0x1C17F28

Method: UnityEngine.UIElements.BackgroundSize Lerp(UnityEngine.UIElements.BackgroundSize a, UnityEngine.UIElements.BackgroundSize b, System.Single t)

Disassembly:
	0x03E062FC LDR X8, [X21]
	0x03E06300 CMP W29, 0x3
	0x03E06304 MOV X0, X21
	0x03E06308 LDP X9, X1, [X8 + 0x158]
	0x03E0630C MOVZ W8, 0xD
	0x03E06310 CSEL W8, W27, W8, EQ
	0x03E06314 CMP W29, 0x6
	0x03E06318 CSEL W26, W28, W8, EQ
	0x03E0631C BLR X9
	0x03E06320 MUL W8, W0, W26
	0x03E06324 STR W8, [X19, X22, LSL #2]
	0x03E06328 ADD X22, X22, 0x1
	0x03E0632C CMP X22, X24
	0x03E06330 MOV W8, W31
	0x03E06334 B.NE 0x3E061B8
	0x03E06338 LDR X0, [X23]
	0x03E0633C LDR W8, [X0 + 0xE0]
	0x03E06340 CBNZ W8, 0x3E0634C
	0x03E06344 BL 0x1C16DFC
	0x03E06348 LDR X0, [X23]
	0x03E0634C LDR X8, [X0 + 0xB8]
	0x03E06350 LDR X8, [X8 + 0x8]
	0x03E06354 CBZ X8, 0x3E0639C
	0x03E06358 LDP W2, W9, [X8 + 0x18]
	0x03E0635C ADD W9, W9, 0x1
	0x03E06360 CMP W2, 0x1
	0x03E06364 STP W31, W9, [X8 + 0x18]
	0x03E06368 B.LT 0x3E0637C
	0x03E0636C LDR X0, [X8 + 0x10]
	0x03E06370 MOV W1, W31
	0x03E06374 MOV X3, X31
	0x03E06378 BL 0x339FA34
	0x03E0637C LDP X20, X19, [X31 + 0x70]
	0x03E06380 LDP X22, X21, [X31 + 0x60]
	0x03E06384 LDP X24, X23, [X31 + 0x50]
	0x03E06388 LDP X26, X25, [X31 + 0x40]
	0x03E0638C LDP X28, X27, [X31 + 0x30]
	0x03E06390 LDP X29, X30, [X31 + 0x20]
	0x03E06394 ADD X31, X31, 0x80
	0x03E06398 RET
	0x03E0639C BL 0x1C16F20
	0x03E063A0 BL 0x1C16F28
	0x03E063A4 MOV X1, X31
	0x03E063A8 B 0x33BDD8C
	0x03E063AC STR X30, [X31 - 0x30]!
	0x03E063B0 STP X22, X21, [X31 + 0x10]
	0x03E063B4 STP X20, X19, [X31 + 0x20]
	0x03E063B8 ADRP X21, 0x5E2000
	0x03E063BC ADRP X22, 0x317000
	0x03E063C0 ADRP X19, 0x317000
	0x03E063C4 ADRP X20, 0x317000
	0x03E063C8 LDRB W8, [X21 + 0x310]
	0x03E063CC LDR X22, [X22 + 0x9D0]
	0x03E063D0 LDR X19, [X19 + 0x9C8]
	0x03E063D4 LDR X20, [X20 + 0xA10]
	0x03E063D8 TBNZ X8, 0x0, 0x3E06408
	0x03E063DC ADRP X0, 0x317000
	0x03E063E0 LDR X0, [X0 + 0x9C8]
	0x03E063E4 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, X1
	010 Move X1, X31
	011 Move V8, V0
	012 Move X20, X0
	013 Move X21, X8
	014 Call BackgroundSize.get_x, X0
	015 Move X22, X0
	016 Move X0, X19
	017 Move X1, X31
	018 Call BackgroundSize.get_x, X0
	019 Move S0, W22
	020 Move S1, W0
	021 Move W8, 0x4B000000
	022 Subtract S1, S1, S0
	023 Move S9, W8
	024 Move W8, 0xCB000000
	025 Multiply S1, S1, S8
	026 Move S10, W8
	027 Add S0, S1, S0
	028 NotImplemented "Instruction FMIN not yet implemented."
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 NotImplemented "Instruction FCSEL not yet implemented."
	031 And X8, X0, 0
	032 Move W9, S0
	033 Move X0, X20
	034 Move X1, X31
	035 Or X22, X8, X9
	036 Call BackgroundSize.get_y, X0
	037 Move X20, X0
	038 Move X0, X19
	039 Move X1, X31
	040 Call BackgroundSize.get_y, X0
	041 Move S0, W20
	042 Move S1, W0
	043 Subtract S1, S1, S0
	044 Multiply S1, S1, S8
	045 Add S0, S1, S0
	046 NotImplemented "Instruction FMIN not yet implemented."
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 And X8, X0, 0
	049 Move [X21], X31
	050 Move [X21+8], X31
	051 Move [X21+16], W31
	052 Move X0, X21
	053 Move X1, X22
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+24]
	059 Move D9, [X31+8]
	060 Move D8, [X31+16]
	061 NotImplemented "Instruction FCSEL not yet implemented."
	062 Move W9, S0
	063 Or X2, X8, X9
	064 Move X3, X31
	065 Move V10, [X31+64]
	066 Call BackgroundSize..ctor, X0, X1, X2
	067 Return X0

Method: System.Void UpdateValues()

Disassembly:
	0x03E063E8 ADRP X0, 0x317000
	0x03E063EC LDR X0, [X0 + 0x9D0]
	0x03E063F0 BL 0x1C16CF4
	0x03E063F4 ADRP X0, 0x317000
	0x03E063F8 LDR X0, [X0 + 0xA10]
	0x03E063FC BL 0x1C16CF4
	0x03E06400 MOVZ W8, 0x1
	0x03E06404 STRB W8, [X21 + 0x310]
	0x03E06408 LDR X0, [X22]
	0x03E0640C BL 0x1C16F10
	0x03E06410 LDR X1, [X19]
	0x03E06414 MOV X19, X0
	0x03E06418 BL 0x306A2C8
	0x03E0641C LDR X8, [X20]
	0x03E06420 LDP X22, X21, [X31 + 0x10]
	0x03E06424 LDR X8, [X8 + 0xB8]
	0x03E06428 STR X19, [X8 + 0x8]
	0x03E0642C LDP X20, X19, [X31 + 0x20]
	0x03E06430 LDR X30, [X31], #0x30
	0x03E06434 RET
	0x03E06438 STR X30, [X31 - 0x20]!
	0x03E0643C STP X20, X19, [X31 + 0x10]
	0x03E06440 ADRP X19, 0x5E2000
	0x03E06444 ADRP X20, 0x364000
	0x03E06448 LDRB W8, [X19 + 0x311]
	0x03E0644C LDR X20, [X20 + 0xC0]
	0x03E06450 TBNZ X8, 0x0, 0x3E06468
	0x03E06454 ADRP X0, 0x364000
	0x03E06458 LDR X0, [X0 + 0xC0]
	0x03E0645C BL 0x1C16CF4
	0x03E06460 MOVZ W8, 0x1
	0x03E06464 STRB W8, [X19 + 0x311]
	0x03E06468 LDR X0, [X20]
	0x03E0646C BL 0x1C16F10
	0x03E06470 MOV X1, X31
	0x03E06474 MOV X19, X0
	0x03E06478 BL 0x33BDD8C
	0x03E0647C LDR X8, [X20]
	0x03E06480 LDR X8, [X8 + 0xB8]
	0x03E06484 STR X19, [X8]
	0x03E06488 LDP X20, X19, [X31 + 0x10]
	0x03E0648C LDR X30, [X31], #0x20
	0x03E06490 RET
	0x03E06494 MOV X1, X31
	0x03E06498 B 0x33BDD8C
	0x03E0649C STR X30, [X31 - 0x10]!
	0x03E064A0 CBZ X1, 0x3E064BC
	0x03E064A4 LDR X8, [X1]
	0x03E064A8 MOV X0, X1
	0x03E064AC LDP X2, X8, [X8 + 0x168]
	0x03E064B0 MOV X1, X8
	0x03E064B4 LDR X30, [X31], #0x10
	0x03E064B8 BR X2
	0x03E064BC BL 0x1C16F20
	0x03E064C0 LDR W8, [X1 + 0x8]
	0x03E064C4 CMP W8, 0x3
	0x03E064C8 B.NE 0x3E064D4
	0x03E064CC MOV W0, W31
	0x03E064D0 RET

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+176], X30
	003 Move [X31+192], X24
	004 Move [X31+200], X23
	005 Move [X31+208], X22
	006 Move [X31+216], X21
	007 Move [X31+224], X20
	008 Move [X31+232], X19
	009 Move W20, [X0+72]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X19, X0
	012 Move X21, X31
	013 Move W22, 52
	014 Move W23, 56
	015 Move X8, [X19+56]
	016 Compare X8, 0
	017 JumpIfEqual {62}
	018 Move W9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X9, [X19+64]
	021 Compare X9, 0
	022 JumpIfEqual {62}
	023 Move W10, [X9+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X24, X9, X22
	026 NotImplemented "Instruction LDUR not yet implemented."
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 Add X0, X31, 32
	029 Add X1, X31, 0
	030 Move [X31+160], W9
	031 Move [X31+9], V1
	032 Move W10, [X24+16]
	033 Move V2, [X24]
	034 Move [X31+128], W10
	035 Move [X31+7], V2
	036 Move V0, [X8]
	037 Add X8, X31, 56
	038 Move [X31+48], W9
	039 Move [X31+2], V1
	040 Move [X31+16], W10
	041 Move [X31], V2
	042 Call ValuesBackgroundSize.Lerp, X0, X1, V0
	043 Move W8, [X31+72]
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Add X21, X21, 1
	046 Add X22, X22, 80
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add X23, X23, 40
	049 Move [X31+96], W8
	050 Move [X31+5], V0
	051 Move [X24+56], W8
	052 Move [X24+40], V0
	053 Move X20, [X31+224]
	054 Move X19, [X31+232]
	055 Move X22, [X31+208]
	056 Move X21, [X31+216]
	057 Move X24, [X31+192]
	058 Move X23, [X31+200]
	059 Move X30, [X31+176]
	060 Add X31, X31, 240
	061 Return 
	062 Call 0x1C17F20
	063 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03E064D4 AND W8, W8, 0xFFFFFFFB
	0x03E064D8 CMP W8, 0x2
	0x03E064DC CSET W0, NE
	0x03E064E0 RET
	0x03E064E4 LDR X0, [X0 + 0x10]
	0x03E064E8 RET
	0x03E064EC LDR X0, [X0 + 0x20]
	0x03E064F0 RET
	0x03E064F4 MOV X1, X31
	0x03E064F8 B 0x33BDD8C
	0x03E064FC LDR X0, [X0 + 0x10]
	0x03E06500 RET
	0x03E06504 MOV X1, X31
	0x03E06508 B 0x33BDD8C
	0x03E0650C STR X1, [X0 + 0x10]
	0x03E06510 RET
	0x03E06514 LDR W0, [X0 + 0x18]
	0x03E06518 RET
	0x03E0651C STR W1, [X0 + 0x18]
	0x03E06520 RET
	0x03E06524 STP X30, X25, [X31 - 0x40]!
	0x03E06528 STP X24, X23, [X31 + 0x10]
	0x03E0652C STP X22, X21, [X31 + 0x20]
	0x03E06530 STP X20, X19, [X31 + 0x30]
	0x03E06534 ADRP X20, 0x5E2000
	0x03E06538 ADRP X23, 0x364000
	0x03E0653C LDRB W8, [X20 + 0x312]
	0x03E06540 LDR X23, [X23 + 0x120]
	0x03E06544 MOV X19, X0
	0x03E06548 TBNZ X8, 0x0, 0x3E0659C
	0x03E0654C ADRP X0, 0x364000
	0x03E06550 LDR X0, [X0 + 0x128]
	0x03E06554 BL 0x1C16CF4
	0x03E06558 ADRP X0, 0x2ED000
	0x03E0655C LDR X0, [X0 + 0xEB8]
	0x03E06560 BL 0x1C16CF4
	0x03E06564 ADRP X0, 0x364000
	0x03E06568 LDR X0, [X0 + 0x130]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5E3000
	008 Move X23, 0x365000
	009 Move X20, 0x365000
	010 Move X21, 0x365000
	011 Move W8, [X22+777]
	012 Move X23, [X23+80]
	013 Move X20, [X20+88]
	014 Move X21, [X21+96]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x365000
	021 Move X0, [X0+80]
	022 Call 0x1C17CF4
	023 Move X0, 0x365000
	024 Move X0, [X0+88]
	025 Call 0x1C17CF4
	026 Move X0, 0x365000
	027 Move X0, [X0+96]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+777], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X2, [X20]
	034 Move X1, X31
	035 Move X3, X31
	036 Move X20, X0
	037 Call Func`3<BackgroundSize, BackgroundSize, Boolean>..ctor, X0, X1, X2
	038 Move [X19+136], X20
	039 Move X1, [X21]
	040 Move X0, X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Call Values`1<BackgroundSize>..ctor, X0
	048 Return 

