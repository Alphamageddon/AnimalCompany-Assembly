Type: UnityEngine.UIElements.PointerCaptureEventBase`1

Method: System.Void set_relatedTarget(UnityEngine.UIElements.IEventHandler value)

Disassembly:
	0x024A3CA4 TBNZ X8, 0x0, 0x24A3CAC
	0x024A3CA8 BL 0x1C5C684

ISIL:
	001 Move [X0+136], X1
	002 Return 

Method: System.Int32 get_pointerId()

Disassembly:
	0x024A3CAC MOVZ W23, 0x1
	0x024A3CB0 STR W31, [X20 + 0x8C]

ISIL:
	001 Move W0, [X0+144]
	002 Return X0

Method: System.Void set_pointerId(System.Int32 value)

Disassembly:
	0x024A3CB4 STRB W23, [X20 + 0x85]
	0x024A3CB8 ADRP X22, 0x1F36000

ISIL:
	001 Move [X0+144], W1
	002 Return 

Method: System.Void Init()

Disassembly:
	0x024A3CBC LDRB W8, [X22 + 0x78F]
	0x024A3CC0 CBNZ W8, 0x24A3CD4
	0x024A3CC4 ADRP X0, 0x1C58000
	0x024A3CC8 LDR X0, [X0 + 0xF08]
	0x024A3CCC BL 0x1C16CF4
	0x024A3CD0 STRB W23, [X22 + 0x78F]
	0x024A3CD4 ADRP X23, 0x1C58000
	0x024A3CD8 LDR X23, [X23 + 0xF08]
	0x024A3CDC LDR X0, [X19]
	0x024A3CE0 LDR X8, [X23]
	0x024A3CE4 LDRB W9, [X0 + 0x135]
	0x024A3CE8 LDR X8, [X8 + 0xB8]
	0x024A3CEC LDP S9, S8, [X8]
	0x024A3CF0 TBNZ X9, 0x0, 0x24A3D1C
	0x024A3CF4 BL 0x1C5C684
	0x024A3CF8 LDRB W8, [X22 + 0x78F]
	0x024A3CFC STP S9, S8, [X20 + 0xF0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {19}
	006 Move X8, [X1+32]
	007 Move X20, X1
	008 Move X19, X0
	009 Move X8, [X8+192]
	010 Move X1, [X8+8]
	011 Call 0x2D0E634, X0
	012 Move X8, [X20+32]
	013 Move X0, X19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X8, [X8+192]
	017 Move X1, [X8+16]
	018 Move X30, [X31+32]
	019 Call 0x1C17F20

Method: System.Void LocalInit()

Disassembly:
	0x024A3D00 CBNZ W8, 0x24A3D20
	0x024A3D04 ADRP X0, 0x1C58000
	0x024A3D08 LDR X0, [X0 + 0xF08]
	0x024A3D0C BL 0x1C16CF4
	0x024A3D10 MOVZ W8, 0x1
	0x024A3D14 STRB W8, [X22 + 0x78F]
	0x024A3D18 B 0x24A3D20
	0x024A3D1C STP S9, S8, [X20 + 0xF0]
	0x024A3D20 LDR X8, [X23]
	0x024A3D24 LDR X0, [X19]
	0x024A3D28 LDR X8, [X8 + 0xB8]
	0x024A3D2C LDRB W9, [X0 + 0x135]
	0x024A3D30 LDP S9, S8, [X8]
	0x024A3D34 TBNZ X9, 0x0, 0x24A3D3C
	0x024A3D38 BL 0x1C5C684
	0x024A3D3C MOV X0, X20
	0x024A3D40 MOV X1, X21
	0x024A3D44 MOV X2, X31
	0x024A3D48 STP S9, S8, [X20 + 0xF8]
	0x024A3D4C BL 0x3DA04E8
	0x024A3D50 MOV X0, X21
	0x024A3D54 MOV X1, X31
	0x024A3D58 BL 0x3C62C04
	0x024A3D5C CBZ W0, 0x24A3D74
	0x024A3D60 MOV X0, X21
	0x024A3D64 MOV X1, X31
	0x024A3D68 BL 0x3C62C04
	0x024A3D6C CMP W0, 0x1E
	0x024A3D70 B.NE 0x24A3DC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x1F37000
	005 Move W8, [X20+3002]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x1C7A000
	012 Move X0, [X0+3664]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3002], W8
	016 Compare X19, 0
	017 JumpIfEqual {36}
	018 Move X20, 0x1C7A000
	019 Move X20, [X20+3664]
	020 Move W8, 3
	021 Move [X19+48], W8
	022 Move [X19+136], X31
	023 Move X0, [X20]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move W8, [X8+4]
	031 Move [X19+144], W8
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 
	036 Call 0x1C17F20

Method: T GetPooled(UnityEngine.UIElements.IEventHandler target, UnityEngine.UIElements.IEventHandler relatedTarget, System.Int32 pointerId)

Disassembly:
	0x024A3D74 LDR X0, [X19]
	0x024A3D78 LDRB W8, [X0 + 0x135]
	0x024A3D7C TBNZ X8, 0x0, 0x24A3D84
	0x024A3D80 BL 0x1C5C684
	0x024A3D84 LDR W22, [X20 + 0x9C]
	0x024A3D88 MOV X0, X21
	0x024A3D8C MOV X1, X31
	0x024A3D90 BL 0x3C62EB4
	0x024A3D94 LDR X8, [X24]
	0x024A3D98 MOV W23, W0
	0x024A3D9C LDR W9, [X8 + 0xE0]
	0x024A3DA0 CBNZ W9, 0x24A3DAC
	0x024A3DA4 MOV X0, X8
	0x024A3DA8 BL 0x1C16DFC
	0x024A3DAC MOV W0, W22
	0x024A3DB0 MOV W1, W23
	0x024A3DB4 MOV X2, X31
	0x024A3DB8 BL 0x3DA5914
	0x024A3DBC B 0x24A3E30
	0x024A3DC0 MOV X0, X21
	0x024A3DC4 MOV X1, X31
	0x024A3DC8 BL 0x3C62C04
	0x024A3DCC CMP W0, 0x1
	0x024A3DD0 B.EQ 0x24A3DE8
	0x024A3DD4 MOV X0, X21
	0x024A3DD8 MOV X1, X31
	0x024A3DDC BL 0x3C62C04
	0x024A3DE0 CMP W0, 0x1F
	0x024A3DE4 B.NE 0x24A410C
	0x024A3DE8 LDR X0, [X19]
	0x024A3DEC LDRB W8, [X0 + 0x135]
	0x024A3DF0 TBNZ X8, 0x0, 0x24A3DF8
	0x024A3DF4 BL 0x1C5C684
	0x024A3DF8 LDR W22, [X20 + 0x9C]
	0x024A3DFC MOV X0, X21
	0x024A3E00 MOV X1, X31
	0x024A3E04 BL 0x3C62EB4
	0x024A3E08 LDR X8, [X24]
	0x024A3E0C MOV W23, W0
	0x024A3E10 LDR W9, [X8 + 0xE0]
	0x024A3E14 CBNZ W9, 0x24A3E20
	0x024A3E18 MOV X0, X8
	0x024A3E1C BL 0x1C16DFC
	0x024A3E20 MOV W0, W22
	0x024A3E24 MOV W1, W23
	0x024A3E28 MOV X2, X31
	0x024A3E2C BL 0x3DA5E70
	0x024A3E30 MOV X0, X21
	0x024A3E34 MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X3+32]
	008 Move X21, X3
	009 Move W19, W2
	010 Move X20, X1
	011 Move W9, [X8+309]
	012 Move X22, X0
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {20}
	017 Move X0, X8
	018 Call 0x1C5D684
	019 Move X8, X0
	020 Move X8, [X8+192]
	021 Move X0, [X8+48]
	022 Move W8, [X0+309]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {28}
	027 Call 0x1C5D684
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, [X21+32]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+192]
	040 Move X0, [X8+40]
	041 Call 0x2D0E6C4
	042 Compare X0, 0
	043 JumpIfEqual {72}
	044 Move X1, X22
	045 Move X2, X31
	046 Move X23, X0
	047 Call EventBase.set_target, X0, X1
	048 Move X0, [X21+32]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {56}
	054 Call 0x1C5D684
	055 Move X0, [X21+32]
	056 Move [X23+136], X20
	057 Move W8, [X0+309]
	058 Move TEMP, X8
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {63}
	062 Call 0x1C5D684
	063 Move [X23+144], W19
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X0, X23
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Return X0
	072 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x024A3E38 BL 0x3C62EB4
	0x024A3E3C LDR X8, [X19]
	0x024A3E40 MOV W22, W0
	0x024A3E44 LDRB W9, [X8 + 0x135]
	0x024A3E48 TBNZ X9, 0x0, 0x24A3E54
	0x024A3E4C MOV X0, X8
	0x024A3E50 BL 0x1C5C684
	0x024A3E54 STR W22, [X20 + 0xAC]
	0x024A3E58 LDR X0, [X19]
	0x024A3E5C LDRB W8, [X0 + 0x135]
	0x024A3E60 TBNZ X8, 0x0, 0x24A3E68
	0x024A3E64 BL 0x1C5C684
	0x024A3E68 LDR X0, [X24]
	0x024A3E6C LDR W22, [X20 + 0x9C]
	0x024A3E70 LDR W8, [X0 + 0xE0]
	0x024A3E74 CBNZ W8, 0x24A3E7C
	0x024A3E78 BL 0x1C16DFC
	0x024A3E7C MOV W0, W22
	0x024A3E80 MOV X1, X31
	0x024A3E84 BL 0x3DA9E70
	0x024A3E88 LDR X8, [X19]
	0x024A3E8C MOV W22, W0
	0x024A3E90 LDRB W9, [X8 + 0x135]
	0x024A3E94 TBNZ X9, 0x0, 0x24A3EA0
	0x024A3E98 MOV X0, X8
	0x024A3E9C BL 0x1C5C684
	0x024A3EA0 MOV X0, X21
	0x024A3EA4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X19, X1
	006 Move X20, X0
	007 Move X8, [X8+192]
	008 Move X8, [X8+48]
	009 Move W9, [X8+309]
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {17}
	014 Move X0, X8
	015 Call 0x1C5D684
	016 Move X8, X0
	017 Move W9, [X8+224]
	018 Compare W9, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X8
	021 Call 0x1C17DFC
	022 Move X8, [X19+32]
	023 Move X0, X20
	024 Move X8, [X8+192]
	025 Move X1, [X8+64]
	026 Call 0x2D0E54C, X0
	027 Move X8, [X19+32]
	028 Move X0, X20
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X8, [X8+192]
	032 Move X1, [X8+16]
	033 Move X30, [X31+32]
	034 Call 0x24A3D00, X0
	035 Return 

