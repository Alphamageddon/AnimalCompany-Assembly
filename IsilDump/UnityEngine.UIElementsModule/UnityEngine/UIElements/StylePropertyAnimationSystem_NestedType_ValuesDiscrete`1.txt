Type: UnityEngine.UIElements.StylePropertyAnimationSystem/ValuesDiscrete`1

Method: System.Func`3<T, T, System.Boolean> get_SameFunc()

Disassembly:
	0x027ED34C MOV X1, X21
	0x027ED350 MOV X2, X23

ISIL:
	001 Move X0, [X0+136]
	002 Return X0

Method: System.Boolean IsSame(T a, T b)

Disassembly:
	0x027ED354 LDR X4, [X8]
	0x027ED358 BL 0x2B39E54
	0x027ED35C LDR X0, [X31 + 0x8]
	0x027ED360 CBZ X0, 0x27ED3CC
	0x027ED364 ADRP X8, 0x1930000
	0x027ED368 LDR X8, [X8 + 0xE78]
	0x027ED36C MOV X1, X22
	0x027ED370 LDR X2, [X8]
	0x027ED374 BL 0x24F1750
	0x027ED378 LDR X22, [X20 + 0x20]
	0x027ED37C CBZ X22, 0x27ED3CC
	0x027ED380 LDR X8, [X22 + 0x20]
	0x027ED384 CBNZ X8, 0x27ED3A4
	0x027ED388 CBZ X21, 0x27ED3CC
	0x027ED38C MOV X0, X21
	0x027ED390 MOV X1, X31
	0x027ED394 BL 0x3DEC0CC
	0x027ED398 STR X0, [X22 + 0x20]
	0x027ED39C LDR X22, [X20 + 0x20]
	0x027ED3A0 CBZ X22, 0x27ED3CC
	0x027ED3A4 LDR X8, [X19 + 0x20]
	0x027ED3A8 MOV X0, X22
	0x027ED3AC LDR X8, [X8 + 0xC0]
	0x027ED3B0 LDR X1, [X8 + 0x58]
	0x027ED3B4 BL 0x26F5BFC
	0x027ED3B8 LDP X20, X19, [X31 + 0x30]
	0x027ED3BC LDP X22, X21, [X31 + 0x20]
	0x027ED3C0 LDP X24, X23, [X31 + 0x10]
	0x027ED3C4 LDR X30, [X31], #0x40
	0x027ED3C8 RET
	0x027ED3CC BL 0x1C16F20
	0x027ED3D0 SUB X31, X31, 0x40
	0x027ED3D4 STP X30, X23, [X31 + 0x10]
	0x027ED3D8 STP X22, X21, [X31 + 0x20]
	0x027ED3DC STP X20, X19, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+144], X20
	004 Move [X31+152], X19
	005 Move X8, [X2+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move W9, [X8+309]
	009 Move TEMP, X9
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {16}
	013 Move X0, X8
	014 Call 0x1C5D684
	015 Move X8, X0
	016 Move X8, [X8+192]
	017 Move X0, [X8+16]
	018 Call 0x28032B4
	019 Move V1, [X20]
	020 Move V0, [X20+16]
	021 Move [X31+32], V1
	022 Move [X31+40], V0
	023 Move V1, [X19]
	024 Move V0, [X19+16]
	025 Move [X31], V1
	026 Move [X31+8], V0
	027 Compare X0, 0
	028 JumpIfEqual {49}
	029 Move X8, [X0]
	030 Move V0, [X31+32]
	031 Move V1, [X31+48]
	032 Move V2, [X31]
	033 Move V3, [X31+16]
	034 Add X1, X31, 96
	035 Move X9, [X8+440]
	036 Move [X31+96], V0
	037 Move [X31+104], V1
	038 Move [X31+64], V2
	039 Move [X31+72], V3
	040 Move X3, [X8+448]
	041 Add X2, X31, 64
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X20, [X31+144]
	044 Move X19, [X31+152]
	045 Move X30, [X31+128]
	046 And W0, W0, 1
	047 Add X31, X31, 160
	048 Return X0
	049 Call 0x1C17F20

Method: T Lerp(T a, T b, System.Single t)

Disassembly:
	0x027ED3E0 ADRP X23, 0x1BED000
	0x027ED3E4 LDRB W8, [X23 + 0x994]
	0x027ED3E8 MOV X19, X3
	0x027ED3EC MOV X21, X2
	0x027ED3F0 MOV X22, X1
	0x027ED3F4 MOV X20, X0

ISIL:
	001 Move S1, 0.5
	002 NotImplemented "Instruction FCMP not yet implemented."
	003 NotImplemented "Instruction CSEL not yet implemented."
	004 Move V1, [X9]
	005 Move V0, [X9+16]
	006 Move [X8], V1
	007 Move [X8+8], V0
	008 Return X0

Method: System.Void UpdateValues()

Disassembly:
	0x027ED3F8 TBNZ X8, 0x0, 0x27ED428
	0x027ED3FC ADRP X0, 0x1930000
	0x027ED400 LDR X0, [X0 + 0xE70]
	0x027ED404 BL 0x1C16CF4
	0x027ED408 ADRP X0, 0x1930000
	0x027ED40C LDR X0, [X0 + 0xE80]
	0x027ED410 BL 0x1C16CF4
	0x027ED414 ADRP X0, 0x1930000
	0x027ED418 LDR X0, [X0 + 0xE88]
	0x027ED41C BL 0x1C16CF4
	0x027ED420 MOVZ W8, 0x1
	0x027ED424 STRB W8, [X23 + 0x994]
	0x027ED428 STR X31, [X31 + 0x8]
	0x027ED42C LDR X8, [X20 + 0x20]
	0x027ED430 CBZ X8, 0x27ED4B4
	0x027ED434 LDR X0, [X8 + 0x18]
	0x027ED438 CBZ X0, 0x27ED4B4
	0x027ED43C ADRP X8, 0x1930000
	0x027ED440 LDR X8, [X8 + 0xE70]
	0x027ED444 ADD X3, X31, 0x8
	0x027ED448 MOV X1, X22
	0x027ED44C MOV X2, X21
	0x027ED450 LDR X4, [X8]
	0x027ED454 BL 0x2B3B8B4
	0x027ED458 TBZ X0, 0x0, 0x27ED4B8
	0x027ED45C LDR X0, [X31 + 0x8]
	0x027ED460 CBZ X0, 0x27ED4B4
	0x027ED464 ADRP X21, 0x1930000
	0x027ED468 LDR X21, [X21 + 0xE80]
	0x027ED46C LDR W8, [X0 + 0x20]
	0x027ED470 CMP W8, 0x0
	0x027ED474 B.LE 0x27ED4B8
	0x027ED478 LDR X1, [X21]
	0x027ED47C BL 0x24F18D4
	0x027ED480 CBZ X0, 0x27ED4B4
	0x027ED484 LDR X8, [X0]
	0x027ED488 LDR X9, [X8 + 0x218]
	0x027ED48C LDR X1, [X8 + 0x220]
	0x027ED490 BLR X9
	0x027ED494 LDR X0, [X20 + 0x20]
	0x027ED498 CBZ X0, 0x27ED4B4
	0x027ED49C LDR X8, [X19 + 0x20]
	0x027ED4A0 LDR X8, [X8 + 0xC0]
	0x027ED4A4 LDR X1, [X8 + 0x60]
	0x027ED4A8 BL 0x26F5C0C
	0x027ED4AC LDR X0, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+160], X30
	003 Move W8, [X0+72]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move X9, X31
	006 Move W10, 64
	007 Move W11, 56
	008 Move S0, 0.5
	009 Add X12, X31, 96
	010 Add X13, X31, 128
	011 Move X14, [X0+56]
	012 Compare X14, 0
	013 JumpIfEqual {54}
	014 Move W15, [X14+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X15, [X0+64]
	017 Compare X15, 0
	018 JumpIfEqual {54}
	019 Move W16, [X15+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X15, X15, X10
	022 Move V2, [X15-32]
	023 Move V1, [X15-16]
	024 Add X9, X9, 1
	025 Add X10, X10, 128
	026 Move [X31+32], V2
	027 Move [X31+40], V1
	028 Move V4, [X15]
	029 Move V3, [X15+16]
	030 Move [X31], V4
	031 Move [X31+8], V3
	032 Move V3, [X14]
	033 Move V4, [X31]
	034 Move V5, [X31+16]
	035 Move [X31+128], V2
	036 Move [X31+136], V1
	037 Add X11, X11, 40
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 Move [X31+96], V4
	040 Move [X31+104], V5
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move V1, [X14]
	043 Move V2, [X14+16]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move [X31+128], V1
	046 Move [X31+136], V2
	047 Move V1, [X31+128]
	048 Move V2, [X31+144]
	049 Move [X15+64], V1
	050 Move [X15+72], V2
	051 Move X30, [X31+160]
	052 Add X31, X31, 176
	053 Return 
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x027ED4B0 CBNZ X0, 0x27ED46C
	0x027ED4B4 BL 0x1C16F20
	0x027ED4B8 LDP X20, X19, [X31 + 0x30]
	0x027ED4BC LDP X22, X21, [X31 + 0x20]
	0x027ED4C0 LDP X30, X23, [X31 + 0x10]
	0x027ED4C4 ADD X31, X31, 0x40
	0x027ED4C8 RET
	0x027ED4CC SUB X31, X31, 0x70
	0x027ED4D0 STR D8, [X31 + 0x30]
	0x027ED4D4 STR X30, [X31 + 0x38]
	0x027ED4D8 STP X24, X23, [X31 + 0x40]
	0x027ED4DC STP X22, X21, [X31 + 0x50]
	0x027ED4E0 STP X20, X19, [X31 + 0x60]
	0x027ED4E4 ADRP X22, 0x1BED000
	0x027ED4E8 LDRB W8, [X22 + 0x995]
	0x027ED4EC MOV X19, X3
	0x027ED4F0 MOV W21, W2
	0x027ED4F4 MOV X23, X1
	0x027ED4F8 MOV X20, X0
	0x027ED4FC TBNZ X8, 0x0, 0x27ED544
	0x027ED500 ADRP X0, 0x1930000
	0x027ED504 LDR X0, [X0 + 0xE90]
	0x027ED508 BL 0x1C16CF4
	0x027ED50C ADRP X0, 0x1930000
	0x027ED510 LDR X0, [X0 + 0xE98]
	0x027ED514 BL 0x1C16CF4
	0x027ED518 ADRP X0, 0x1930000
	0x027ED51C LDR X0, [X0 + 0xEA0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X1+32]
	006 Move X19, X1
	007 Move X20, X0
	008 Move X8, [X8+192]
	009 Move X8, [X8+8]
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X0, X8
	019 Call 0x1C17F10
	020 Move X8, [X19+32]
	021 Move X1, X31
	022 Move X21, X0
	023 Move X8, [X8+192]
	024 Move X2, [X8+144]
	025 Move X3, [X8+152]
	026 Call Func`3<Background, Background, Boolean>..ctor, X0, X1, X2
	027 Move [X20+136], X21
	028 Move X8, [X19+32]
	029 Move X0, X20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X8, [X8+192]
	033 Move X1, [X8+160]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call 0x27EE0FC, X0
	037 Return 

