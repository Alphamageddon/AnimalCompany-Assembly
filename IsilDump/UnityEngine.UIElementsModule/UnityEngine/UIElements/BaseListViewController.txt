Type: UnityEngine.UIElements.BaseListViewController

Method: System.Void add_itemsSourceSizeChanged(System.Action value)

Disassembly:
	0x03CEFD50 B.CS 0x3CEFD68
	0x03CEFD54 ADD W9, W10, 0x1
	0x03CEFD58 ADD X8, X8, X10, 0x2, LSL
	0x03CEFD5C STR W9, [X20 + 0x18]
	0x03CEFD60 STR W22, [X8 + 0x20]
	0x03CEFD64 B 0x3CEFD80
	0x03CEFD68 LDR X8, [X9 + 0x20]
	0x03CEFD6C LDR X8, [X8 + 0xC0]
	0x03CEFD70 LDR X2, [X8 + 0x70]
	0x03CEFD74 MOV X0, X20
	0x03CEFD78 MOV W1, W22
	0x03CEFD7C BL 0x2FDC70C
	0x03CEFD80 SUBS W21, W21, 0x1
	0x03CEFD84 ADD W22, W22, 0x1
	0x03CEFD88 B.NE 0x3CEFD2C
	0x03CEFD8C B 0x3CF0070
	0x03CEFD90 MOV X0, X19
	0x03CEFD94 BLR X8
	0x03CEFD98 CBZ X0, 0x3CF012C
	0x03CEFD9C MOV X1, X31
	0x03CEFDA0 BL 0x33BE520
	0x03CEFDA4 CBZ X0, 0x3CF0130
	0x03CEFDA8 LDR X8, [X0]
	0x03CEFDAC LDR X1, [X8 + 0x860]
	0x03CEFDB0 LDR X9, [X8 + 0x858]
	0x03CEFDB4 BLR X9
	0x03CEFDB8 ADRP X8, 0x40E000
	0x03CEFDBC LDR X8, [X8 + 0x9B0]
	0x03CEFDC0 MOV X23, X0
	0x03CEFDC4 LDR X0, [X8]
	0x03CEFDC8 BL 0x1C16F10
	0x03CEFDCC ADRP X8, 0x473000
	0x03CEFDD0 LDR X8, [X8 + 0xAB0]
	0x03CEFDD4 MOV X24, X0
	0x03CEFDD8 LDR X2, [X8]
	0x03CEFDDC MOV X1, X31
	0x03CEFDE0 MOV X3, X31
	0x03CEFDE4 BL 0x2D2F428
	0x03CEFDE8 ADRP X8, 0x473000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6F9000
	007 Move W8, [X21+1888]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x406000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1888], W8
	019 Move X22, 0x406000
	020 Add X20, X20, 48
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Combine, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void remove_itemsSourceSizeChanged(System.Action value)

Disassembly:
	0x03CEFDEC LDR X8, [X8 + 0xAB8]
	0x03CEFDF0 LDR X2, [X8]
	0x03CEFDF4 MOV X0, X23
	0x03CEFDF8 MOV X1, X24
	0x03CEFDFC BL 0x21C570C
	0x03CEFE00 ADRP X8, 0x404000
	0x03CEFE04 LDR X8, [X8 + 0x6C0]
	0x03CEFE08 MOV X23, X0
	0x03CEFE0C LDR X0, [X8]
	0x03CEFE10 LDR W8, [X0 + 0xE0]
	0x03CEFE14 CBNZ W8, 0x3CEFE1C
	0x03CEFE18 BL 0x1C16DFC
	0x03CEFE1C MOV X0, X23
	0x03CEFE20 MOV X1, X31
	0x03CEFE24 MOV X2, X31
	0x03CEFE28 BL 0x3395F0C
	0x03CEFE2C TBZ X0, 0x0, 0x3CEFF88
	0x03CEFE30 CBZ X23, 0x3CF013C
	0x03CEFE34 LDR X8, [X23]
	0x03CEFE38 LDR X1, [X8 + 0x470]
	0x03CEFE3C LDR X9, [X8 + 0x468]
	0x03CEFE40 MOV X0, X23
	0x03CEFE44 BLR X9
	0x03CEFE48 CBZ X0, 0x3CF0140
	0x03CEFE4C LDR W8, [X0 + 0x18]
	0x03CEFE50 CBZ W8, 0x3CF0144
	0x03CEFE54 LDR X0, [X0 + 0x20]
	0x03CEFE58 CBZ X0, 0x3CF0148
	0x03CEFE5C MOV X1, X31
	0x03CEFE60 BL 0x33970C4
	0x03CEFE64 TBZ X0, 0x0, 0x3CEFF88
	0x03CEFE68 LDR X8, [X23]
	0x03CEFE6C LDR X1, [X8 + 0x470]
	0x03CEFE70 LDR X9, [X8 + 0x468]
	0x03CEFE74 MOV X0, X23
	0x03CEFE78 BLR X9
	0x03CEFE7C CBZ X0, 0x3CF014C
	0x03CEFE80 LDR W8, [X0 + 0x18]
	0x03CEFE84 CBZ W8, 0x3CF0150

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6F9000
	007 Move W8, [X21+1889]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x406000
	015 Move X0, [X0+3696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1889], W8
	019 Move X22, 0x406000
	020 Add X20, X20, 48
	021 Move X21, [X20]
	022 Move X22, [X22+3696]
	023 Move X0, X21
	024 Move X1, X19
	025 Move X2, X31
	026 Call Delegate.Remove, X0, X1
	027 Move X8, X0
	028 Compare X0, 0
	029 JumpIfEqual {33}
	030 Move X1, [X22]
	031 Move X9, [X8]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X20
	034 Move X1, X8
	035 Move X2, X21
	036 Call 0x1C25138
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X21, X0
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X30, [X31+48]
	044 Return 
	045 Move X0, X8
	046 Call 0x1C181E0

Method: System.Void add_itemsAdded(System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> value)

Disassembly:
	0x03CEFE88 CBZ X20, 0x3CF0154
	0x03CEFE8C ADRP X27, 0x405000
	0x03CEFE90 LDR X23, [X0 + 0x20]
	0x03CEFE94 LDR X27, [X27 + 0xE10]
	0x03CEFE98 MOV W29, W31
	0x03CEFE9C LDR W10, [X20 + 0x1C]
	0x03CEFEA0 LDR X8, [X20 + 0x10]
	0x03CEFEA4 LDR X9, [X27]
	0x03CEFEA8 ADD W10, W10, 0x1
	0x03CEFEAC STR W10, [X20 + 0x1C]
	0x03CEFEB0 CBZ X8, 0x3CF0110
	0x03CEFEB4 LDRSW X10, [X20 + 0x18]
	0x03CEFEB8 LDR W11, [X8 + 0x18]
	0x03CEFEBC ADD W1, W29, W22
	0x03CEFEC0 CMP W10, W11
	0x03CEFEC4 B.CS 0x3CEFEDC
	0x03CEFEC8 ADD W9, W10, 0x1
	0x03CEFECC ADD X8, X8, X10, 0x2, LSL
	0x03CEFED0 STR W9, [X20 + 0x18]
	0x03CEFED4 STR W1, [X8 + 0x20]
	0x03CEFED8 B 0x3CEFEF0
	0x03CEFEDC LDR X8, [X9 + 0x20]
	0x03CEFEE0 LDR X8, [X8 + 0xC0]
	0x03CEFEE4 LDR X2, [X8 + 0x70]
	0x03CEFEE8 MOV X0, X20
	0x03CEFEEC BL 0x2FDC70C
	0x03CEFEF0 LDR X8, [X19]
	0x03CEFEF4 LDP X9, X1, [X8 + 0x188]
	0x03CEFEF8 MOV X0, X19
	0x03CEFEFC BLR X9
	0x03CEFF00 MOV X24, X0
	0x03CEFF04 MOV X0, X23
	0x03CEFF08 MOV X1, X31
	0x03CEFF0C BL 0x33A703C
	0x03CEFF10 CBZ X24, 0x3CF0114
	0x03CEFF14 LDR X8, [X24]
	0x03CEFF18 LDR X1, [X28]
	0x03CEFF1C MOV X25, X0
	0x03CEFF20 LDRH W9, [X8 + 0x12E]
	0x03CEFF24 CBZ X9, 0x3CEFF48
	0x03CEFF28 LDR X10, [X8 + 0xB0]
	0x03CEFF2C ADD X10, X10, 0x8
	0x03CEFF30 LDUR X11, [X10 - 0x8]
	0x03CEFF34 CMP X11, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6F9000
	009 Move W8, [X21+1890]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x474000
	017 Move X0, [X0+2704]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1890], W8
	021 Move X24, 0x474000
	022 Add X20, X20, 56
	023 Move X21, [X20]
	024 Move X24, [X24+2704]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_itemsAdded(System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> value)

Disassembly:
	0x03CEFF38 B.EQ 0x3CEFF58
	0x03CEFF3C SUBS X9, X9, 0x1
	0x03CEFF40 ADD X10, X10, 0x10
	0x03CEFF44 B.NE 0x3CEFF30
	0x03CEFF48 MOVZ W2, 0x2
	0x03CEFF4C MOV X0, X24
	0x03CEFF50 BL 0x1C5C788
	0x03CEFF54 B 0x3CEFF68
	0x03CEFF58 LDR W9, [X10]
	0x03CEFF5C ADD W9, W9, 0x2
	0x03CEFF60 ADD X8, X8, W9, 0x4, SXTW
	0x03CEFF64 ADD X0, X8, 0x138
	0x03CEFF68 LDP X8, X2, [X0]
	0x03CEFF6C MOV X0, X24
	0x03CEFF70 MOV X1, X25
	0x03CEFF74 BLR X8
	0x03CEFF78 ADD W29, W29, 0x1
	0x03CEFF7C CMP W29, W21
	0x03CEFF80 B.NE 0x3CEFE9C
	0x03CEFF84 B 0x3CF0070
	0x03CEFF88 CBZ X20, 0x3CF0138
	0x03CEFF8C ADRP X25, 0x405000
	0x03CEFF90 LDR X25, [X25 + 0xE10]
	0x03CEFF94 MOV W24, W31
	0x03CEFF98 LDR W10, [X20 + 0x1C]
	0x03CEFF9C LDR X8, [X20 + 0x10]
	0x03CEFFA0 LDR X9, [X25]
	0x03CEFFA4 ADD W10, W10, 0x1
	0x03CEFFA8 STR W10, [X20 + 0x1C]
	0x03CEFFAC CBZ X8, 0x3CF0108
	0x03CEFFB0 LDRSW X10, [X20 + 0x18]
	0x03CEFFB4 LDR W11, [X8 + 0x18]
	0x03CEFFB8 ADD W1, W24, W22
	0x03CEFFBC CMP W10, W11
	0x03CEFFC0 B.CS 0x3CEFFD8
	0x03CEFFC4 ADD W9, W10, 0x1
	0x03CEFFC8 ADD X8, X8, X10, 0x2, LSL
	0x03CEFFCC STR W9, [X20 + 0x18]
	0x03CEFFD0 STR W1, [X8 + 0x20]
	0x03CEFFD4 B 0x3CEFFEC
	0x03CEFFD8 LDR X8, [X9 + 0x20]
	0x03CEFFDC LDR X8, [X8 + 0xC0]
	0x03CEFFE0 LDR X2, [X8 + 0x70]
	0x03CEFFE4 MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6F9000
	009 Move W8, [X21+1891]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x474000
	017 Move X0, [X0+2704]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1891], W8
	021 Move X24, 0x474000
	022 Add X20, X20, 56
	023 Move X21, [X20]
	024 Move X24, [X24+2704]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void add_itemsRemoved(System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> value)

Disassembly:
	0x03CEFFE8 BL 0x2FDC70C
	0x03CEFFEC LDR X8, [X19]
	0x03CEFFF0 LDP X9, X1, [X8 + 0x188]
	0x03CEFFF4 MOV X0, X19
	0x03CEFFF8 BLR X9
	0x03CEFFFC MOV X23, X0
	0x03CF0000 CBZ X0, 0x3CF010C
	0x03CF0004 LDR X8, [X23]
	0x03CF0008 LDR X1, [X28]
	0x03CF000C LDRH W9, [X8 + 0x12E]
	0x03CF0010 CBZ X9, 0x3CF0034
	0x03CF0014 LDR X10, [X8 + 0xB0]
	0x03CF0018 ADD X10, X10, 0x8
	0x03CF001C LDUR X11, [X10 - 0x8]
	0x03CF0020 CMP X11, X1
	0x03CF0024 B.EQ 0x3CF0044
	0x03CF0028 SUBS X9, X9, 0x1
	0x03CF002C ADD X10, X10, 0x10
	0x03CF0030 B.NE 0x3CF001C
	0x03CF0034 MOVZ W2, 0x2
	0x03CF0038 MOV X0, X23
	0x03CF003C BL 0x1C5C788
	0x03CF0040 B 0x3CF0054
	0x03CF0044 LDR W9, [X10]
	0x03CF0048 ADD W9, W9, 0x2
	0x03CF004C ADD X8, X8, W9, 0x4, SXTW
	0x03CF0050 ADD X0, X8, 0x138
	0x03CF0054 LDP X8, X2, [X0]
	0x03CF0058 MOV X0, X23
	0x03CF005C MOV X1, X31
	0x03CF0060 BLR X8
	0x03CF0064 ADD W24, W24, 0x1
	0x03CF0068 CMP W24, W21
	0x03CF006C B.NE 0x3CEFF98
	0x03CF0070 LDR X8, [X19 + 0x38]
	0x03CF0074 CBZ X8, 0x3CF008C
	0x03CF0078 LDR X0, [X8 + 0x40]
	0x03CF007C LDR X9, [X8 + 0x18]
	0x03CF0080 LDR X2, [X8 + 0x28]
	0x03CF0084 MOV X1, X20
	0x03CF0088 BLR X9
	0x03CF008C MOV X22, X31
	0x03CF0090 LDR X0, [X26]
	0x03CF0094 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6F9000
	009 Move W8, [X21+1892]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x473000
	017 Move X0, [X0+2704]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1892], W8
	021 Move X24, 0x473000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+2704]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_itemsRemoved(System.Action`1<System.Collections.Generic.IEnumerable`1<System.Int32>> value)

Disassembly:
	0x03CF0098 CBNZ W8, 0x3CF00A0
	0x03CF009C BL 0x1C16DFC
	0x03CF00A0 ADRP X8, 0x42E000
	0x03CF00A4 LDR X8, [X8 + 0xB08]
	0x03CF00A8 MOV X0, X20
	0x03CF00AC LDR X1, [X8]
	0x03CF00B0 BL 0x28F9588
	0x03CF00B4 CBNZ X22, 0x3CF011C
	0x03CF00B8 LDR X8, [X19 + 0x30]
	0x03CF00BC CBZ X8, 0x3CF00E8
	0x03CF00C0 LDR X2, [X8 + 0x18]
	0x03CF00C4 LDR X0, [X8 + 0x40]
	0x03CF00C8 LDR X1, [X8 + 0x28]
	0x03CF00CC LDP X20, X19, [X31 + 0x50]
	0x03CF00D0 LDP X22, X21, [X31 + 0x40]
	0x03CF00D4 LDP X24, X23, [X31 + 0x30]
	0x03CF00D8 LDP X26, X25, [X31 + 0x20]
	0x03CF00DC LDP X28, X27, [X31 + 0x10]
	0x03CF00E0 LDP X29, X30, [X31], #0x60
	0x03CF00E4 BR X2
	0x03CF00E8 LDP X20, X19, [X31 + 0x50]
	0x03CF00EC LDP X22, X21, [X31 + 0x40]
	0x03CF00F0 LDP X24, X23, [X31 + 0x30]
	0x03CF00F4 LDP X26, X25, [X31 + 0x20]
	0x03CF00F8 LDP X28, X27, [X31 + 0x10]
	0x03CF00FC LDP X29, X30, [X31], #0x60
	0x03CF0100 RET
	0x03CF0104 BL 0x1C16F20
	0x03CF0108 BL 0x1C16F20
	0x03CF010C BL 0x1C16F20
	0x03CF0110 BL 0x1C16F20
	0x03CF0114 BL 0x1C16F20
	0x03CF0118 BL 0x1C16F20
	0x03CF011C MOV X0, X22
	0x03CF0120 BL 0x1C16F18
	0x03CF0124 BL 0x1C16F20
	0x03CF0128 BL 0x1C171E0
	0x03CF012C BL 0x1C16F20
	0x03CF0130 BL 0x1C16F20
	0x03CF0134 BL 0x1C16F20
	0x03CF0138 BL 0x1C16F20
	0x03CF013C BL 0x1C16F20
	0x03CF0140 BL 0x1C16F20
	0x03CF0144 BL 0x1C16F28

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6F8000
	009 Move W8, [X21+1893]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x473000
	017 Move X0, [X0+2704]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1893], W8
	021 Move X24, 0x473000
	022 Add X20, X20, 64
	023 Move X21, [X20]
	024 Move X24, [X24+2704]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: UnityEngine.UIElements.BaseListView get_baseListView()

Disassembly:
	0x03CF0148 BL 0x1C16F20
	0x03CF014C BL 0x1C16F20
	0x03CF0150 BL 0x1C16F28
	0x03CF0154 BL 0x1C16F20
	0x03CF0158 B 0x3CF01D4
	0x03CF015C B 0x3CF01D4
	0x03CF0160 B 0x3CF01D4
	0x03CF0164 B 0x3CF01D4
	0x03CF0168 B 0x3CF01D4
	0x03CF016C B 0x3CF01D4
	0x03CF0170 B 0x3CF01D4
	0x03CF0174 B 0x3CF01D4
	0x03CF0178 B 0x3CF01D4
	0x03CF017C B 0x3CF01D4
	0x03CF0180 B 0x3CF01D4
	0x03CF0184 B 0x3CF01D4
	0x03CF0188 B 0x3CF01D4
	0x03CF018C B 0x3CF01D4
	0x03CF0190 B 0x3CF01D4
	0x03CF0194 B 0x3CF01D4
	0x03CF0198 B 0x3CF01D4
	0x03CF019C B 0x3CF01D4
	0x03CF01A0 B 0x3CF01D4
	0x03CF01A4 B 0x3CF01D4
	0x03CF01A8 B 0x3CF01D4
	0x03CF01AC B 0x3CF01D4
	0x03CF01B0 B 0x3CF01D4
	0x03CF01B4 B 0x3CF01D4
	0x03CF01B8 B 0x3CF01D4
	0x03CF01BC B 0x3CF01D4
	0x03CF01C0 B 0x3CF01D4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6F8000
	005 Move W8, [X20+1894]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x473000
	012 Move X0, [X0+2712]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1894], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {26}
	019 Move X9, 0x473000
	020 Move X9, [X9+2712]
	021 Move X10, [X8]
	022 Move X9, [X9]
	023 Move W12, [X10+304]
	024 Move W11, [X9+304]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X31
	027 Move X10, [X10+200]
	028 Add X10, X10, X11
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Void InvokeMakeItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem)

Disassembly:
	0x03CF01C4 B 0x3CF01D4
	0x03CF01C8 B 0x3CF01D4
	0x03CF01CC B 0x3CF01D4
	0x03CF01D0 B 0x3CF01D4
	0x03CF01D4 MOV X21, X0
	0x03CF01D8 CMP W1, 0x1
	0x03CF01DC B.NE 0x3CF01F4
	0x03CF01E0 MOV X0, X21
	0x03CF01E4 BL 0x3EB1AD0
	0x03CF01E8 LDR X22, [X0]
	0x03CF01EC BL 0x3EB1AE0
	0x03CF01F0 B 0x3CF0090
	0x03CF01F4 MOV X22, X31
	0x03CF01F8 B 0x3CF0200
	0x03CF01FC MOV X21, X0
	0x03CF0200 LDR X0, [X26]
	0x03CF0204 LDR W8, [X0 + 0xE0]
	0x03CF0208 CBNZ W8, 0x3CF0210
	0x03CF020C BL 0x1C16DFC
	0x03CF0210 ADRP X8, 0x42E000
	0x03CF0214 LDR X8, [X8 + 0xB08]
	0x03CF0218 LDR X1, [X8]
	0x03CF021C MOV X0, X20
	0x03CF0220 BL 0x28F9588
	0x03CF0224 CBNZ X22, 0x3CF0230
	0x03CF0228 MOV X0, X21
	0x03CF022C BL 0x1D2C690
	0x03CF0230 MOV X0, X22
	0x03CF0234 BL 0x1C16F18
	0x03CF0238 BL 0x1990590
	0x03CF023C STR X30, [X31 - 0x20]!
	0x03CF0240 STP X20, X19, [X31 + 0x10]
	0x03CF0244 ADRP X20, 0x6F7000
	0x03CF0248 LDRB W8, [X20 + 0x773]
	0x03CF024C MOV X19, X0
	0x03CF0250 TBNZ X8, 0x0, 0x3CF0268
	0x03CF0254 ADRP X0, 0x40A000
	0x03CF0258 LDR X0, [X0 + 0x2F8]
	0x03CF025C BL 0x1C16CF4
	0x03CF0260 MOVZ W8, 0x1
	0x03CF0264 STRB W8, [X20 + 0x773]
	0x03CF0268 LDR X8, [X19]
	0x03CF026C MOV X0, X19
	0x03CF0270 LDP X9, X1, [X8 + 0x188]
	0x03CF0274 BLR X9
	0x03CF0278 CBZ X0, 0x3CF029C
	0x03CF027C MOV X1, X31
	0x03CF0280 BL 0x33BE520
	0x03CF0284 CBZ X0, 0x3CF029C
	0x03CF0288 MOV X1, X31
	0x03CF028C BL 0x3396BF8
	0x03CF0290 ORN W8, W31, W0, 0x0
	0x03CF0294 AND W20, W8, 0x1
	0x03CF0298 B 0x3CF02A0
	0x03CF029C MOVZ W20, 0x1
	0x03CF02A0 LDR X8, [X19]
	0x03CF02A4 MOV X0, X19
	0x03CF02A8 LDP X9, X1, [X8 + 0x188]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F8000
	006 Move W8, [X21+1895]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x473000
	014 Move X0, [X0+2720]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1895], W8
	018 Compare X20, 0
	019 JumpIfEqual {57}
	020 Move X8, 0x473000
	021 Move X8, [X8+2720]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 Move W11, [X9+304]
	025 Move W10, [X8+304]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, [X9+200]
	028 Add X9, X9, X10
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Compare X20, 0
	033 JumpIfEqual {57}
	034 Move X8, [X19]
	035 Move X0, X19
	036 Move X9, [X8+600]
	037 Move X1, [X8+608]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X21, X0
	040 Move X0, X19
	041 Call BaseListViewController.get_baseListView, X0
	042 Compare X0, 0
	043 JumpIfEqual {73}
	044 Move X1, X31
	045 Call BaseVerticalCollectionView.get_reorderable, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {62}
	050 Move X0, X19
	051 Call BaseListViewController.get_baseListView, X0
	052 Compare X0, 0
	053 JumpIfEqual {73}
	054 Move W8, [X0+1312]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return 
	062 Move W2, W31
	063 Move X0, X20
	064 Move X1, X21
	065 Call ReusableListViewItem.Init, X0, X1, X2
	066 Move X1, X20
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Call BaseListViewController.PostInitRegistration, X0, X1
	072 Return 
	073 Call 0x1C17F20

Method: System.Void PostInitRegistration(UnityEngine.UIElements.ReusableListViewItem listItem)

Disassembly:
	0x03CF0370 BL 0x337DF1C
	0x03CF0374 ADRP X0, 0x472000
	0x03CF0378 LDR X0, [X0 + 0xAC8]
	0x03CF037C BL 0x1C16D08
	0x03CF0380 MOV X1, X0
	0x03CF0384 MOV X0, X19
	0x03CF0388 BL 0x1C16DEC
	0x03CF038C BL 0x1C16F20
	0x03CF0390 STP X30, X21, [X31 - 0x20]!
	0x03CF0394 STP X20, X19, [X31 + 0x10]
	0x03CF0398 ADRP X21, 0x6F7000
	0x03CF039C LDRB W8, [X21 + 0x770]
	0x03CF03A0 MOV W20, W1
	0x03CF03A4 MOV X19, X0
	0x03CF03A8 TBNZ X8, 0x0, 0x3CF03C0
	0x03CF03AC ADRP X0, 0x403000
	0x03CF03B0 LDR X0, [X0 + 0x6C0]
	0x03CF03B4 BL 0x1C16CF4
	0x03CF03B8 MOVZ W8, 0x1
	0x03CF03BC STRB W8, [X21 + 0x770]
	0x03CF03C0 CBZ X19, 0x3CF0468
	0x03CF03C4 MOV X0, X19
	0x03CF03C8 MOV X1, X31
	0x03CF03CC BL 0x33BE520
	0x03CF03D0 CBZ X0, 0x3CF0468
	0x03CF03D4 LDR X8, [X0]
	0x03CF03D8 ADRP X21, 0x403000
	0x03CF03DC LDR X9, [X8 + 0x428]
	0x03CF03E0 LDR X1, [X8 + 0x430]
	0x03CF03E4 LDR X21, [X21 + 0x6C0]
	0x03CF03E8 BLR X9
	0x03CF03EC LDR X8, [X21]
	0x03CF03F0 MOV X21, X0
	0x03CF03F4 LDR W9, [X8 + 0xE0]
	0x03CF03F8 CBNZ W9, 0x3CF0404
	0x03CF03FC MOV X0, X8
	0x03CF0400 BL 0x1C16DFC
	0x03CF0404 MOV X0, X21
	0x03CF0408 MOV X1, X31
	0x03CF040C MOV X2, X31
	0x03CF0410 BL 0x3395194
	0x03CF0414 TBNZ X0, 0x0, 0x3CF046C
	0x03CF0418 MOV X0, X19
	0x03CF041C MOV X1, X31
	0x03CF0420 BL 0x3395B7C
	0x03CF0424 ADD W1, W0, W20
	0x03CF0428 MOV X0, X21
	0x03CF042C MOV X2, X31
	0x03CF0430 BL 0x33A2DF8
	0x03CF0434 MOV X20, X0
	0x03CF0438 MOV X0, X19
	0x03CF043C MOV X1, X31
	0x03CF0440 BL 0x3395B7C
	0x03CF0444 MOV W2, W0
	0x03CF0448 MOV X0, X19
	0x03CF044C MOV X1, X20
	0x03CF0450 MOV X3, X31
	0x03CF0454 BL 0x33A0C7C
	0x03CF0458 MOV X0, X20
	0x03CF045C LDP X20, X19, [X31 + 0x10]
	0x03CF0460 LDP X30, X21, [X31], #0x20
	0x03CF0464 RET
	0x03CF0468 BL 0x1C16F20
	0x03CF046C ADRP X0, 0x403000
	0x03CF0470 LDR X0, [X0 + 0x5B0]
	0x03CF0474 BL 0x1C16D08
	0x03CF0478 BL 0x1C16F10
	0x03CF047C MOV X19, X0
	0x03CF0480 ADRP X0, 0x472000
	0x03CF0484 LDR X0, [X0 + 0xAD0]
	0x03CF0488 BL 0x1C16D08
	0x03CF048C MOV X1, X0
	0x03CF0490 MOV X0, X19
	0x03CF0494 MOV X2, X31
	0x03CF0498 BL 0x337DF1C
	0x03CF049C ADRP X0, 0x472000
	0x03CF04A0 LDR X0, [X0 + 0xAD8]
	0x03CF04A4 BL 0x1C16D08
	0x03CF04A8 MOV X1, X0
	0x03CF04AC MOV X0, X19
	0x03CF04B0 BL 0x1C16DEC
	0x03CF04B4 LDR X8, [X0 + 0x38]
	0x03CF04B8 CBZ X8, 0x3CF04CC
	0x03CF04BC LDR X3, [X8 + 0x18]
	0x03CF04C0 LDR X0, [X8 + 0x40]
	0x03CF04C4 LDR X2, [X8 + 0x28]
	0x03CF04C8 BR X3
	0x03CF04CC RET
	0x03CF04D0 LDR X8, [X0 + 0x30]
	0x03CF04D4 CBZ X8, 0x3CF04E8
	0x03CF04D8 LDR X2, [X8 + 0x18]
	0x03CF04DC LDR X0, [X8 + 0x40]
	0x03CF04E0 LDR X1, [X8 + 0x28]
	0x03CF04E4 BR X2
	0x03CF04E8 RET
	0x03CF04EC STP X30, X25, [X31 - 0x40]!
	0x03CF04F0 STP X24, X23, [X31 + 0x10]
	0x03CF04F4 STP X22, X21, [X31 + 0x20]
	0x03CF04F8 STP X20, X19, [X31 + 0x30]
	0x03CF04FC ADRP X22, 0x6F7000
	0x03CF0500 LDRB W8, [X22 + 0x76B]
	0x03CF0504 MOV W19, W2
	0x03CF0508 MOV W20, W1
	0x03CF050C MOV X21, X0
	0x03CF0510 TBNZ X8, 0x0, 0x3CF0528
	0x03CF0514 ADRP X0, 0x40A000
	0x03CF0518 LDR X0, [X0 + 0x2F0]
	0x03CF051C BL 0x1C16CF4
	0x03CF0520 MOVZ W8, 0x1
	0x03CF0524 STRB W8, [X22 + 0x76B]
	0x03CF0528 LDR X8, [X21]
	0x03CF052C MOV X0, X21
	0x03CF0530 LDP X9, X1, [X8 + 0x188]
	0x03CF0534 BLR X9
	0x03CF0538 CMP W20, W19
	0x03CF053C B.EQ 0x3CF0648
	0x03CF0540 CBZ X0, 0x3CF0648
	0x03CF0544 CMP W20, W19
	0x03CF0548 CSEL W23, W20, W19, LT
	0x03CF054C CSEL W24, W20, W19, GT
	0x03CF0550 TBNZ X23, 0x1F, 0x3CF0648
	0x03CF0554 LDR X8, [X21]
	0x03CF0558 MOV X0, X21
	0x03CF055C LDP X9, X1, [X8 + 0x188]
	0x03CF0560 BLR X9
	0x03CF0564 CBZ X0, 0x3CF065C
	0x03CF0568 ADRP X10, 0x40A000
	0x03CF056C LDR X8, [X0]
	0x03CF0570 LDR X10, [X10 + 0x2F0]
	0x03CF0574 MOV X22, X0
	0x03CF0578 LDRH W9, [X8 + 0x12E]
	0x03CF057C LDR X1, [X10]
	0x03CF0580 CBZ X9, 0x3CF05A4
	0x03CF0584 LDR X10, [X8 + 0xB0]
	0x03CF0588 ADD X10, X10, 0x8
	0x03CF058C LDUR X11, [X10 - 0x8]
	0x03CF0590 CMP X11, X1
	0x03CF0594 B.EQ 0x3CF05B4
	0x03CF0598 SUBS X9, X9, 0x1
	0x03CF059C ADD X10, X10, 0x10
	0x03CF05A0 B.NE 0x3CF058C
	0x03CF05A4 MOVZ W2, 0x1
	0x03CF05A8 MOV X0, X22
	0x03CF05AC BL 0x1C5C788
	0x03CF05B0 B 0x3CF05C4
	0x03CF05B4 LDR W9, [X10]
	0x03CF05B8 ADD W9, W9, 0x1
	0x03CF05BC ADD X8, X8, W9, 0x4, SXTW
	0x03CF05C0 ADD X0, X8, 0x138
	0x03CF05C4 LDP X8, X1, [X0]
	0x03CF05C8 MOV X0, X22
	0x03CF05CC BLR X8
	0x03CF05D0 CMP W24, W0
	0x03CF05D4 B.GE 0x3CF0648
	0x03CF05D8 CMP W20, W19
	0x03CF05DC MOVZ W8, 0x1
	0x03CF05E0 CSNEG W25, W8, W8, GT
	0x03CF05E4 CMP W23, W24
	0x03CF05E8 B.GE 0x3CF0618
	0x03CF05EC MOV W22, W19
	0x03CF05F0 MOV X0, X21
	0x03CF05F4 MOV W1, W20
	0x03CF05F8 MOV W2, W22
	0x03CF05FC BL 0x3CF0660
	0x03CF0600 ADD W22, W22, W25
	0x03CF0604 CMP W22, W20
	0x03CF0608 CSEL W8, W20, W22, GT
	0x03CF060C CSEL W9, W20, W22, LT
	0x03CF0610 CMP W8, W9
	0x03CF0614 B.LT 0x3CF05F0
	0x03CF0618 LDR X8, [X21 + 0x28]
	0x03CF061C CBZ X8, 0x3CF0648
	0x03CF0620 LDR X4, [X8 + 0x18]
	0x03CF0624 LDR X0, [X8 + 0x40]
	0x03CF0628 LDR X3, [X8 + 0x28]
	0x03CF062C MOV W1, W20
	0x03CF0630 MOV W2, W19
	0x03CF0634 LDP X20, X19, [X31 + 0x30]
	0x03CF0638 LDP X22, X21, [X31 + 0x20]
	0x03CF063C LDP X24, X23, [X31 + 0x10]
	0x03CF0640 LDP X30, X25, [X31], #0x40
	0x03CF0644 BR X4
	0x03CF0648 LDP X20, X19, [X31 + 0x30]
	0x03CF064C LDP X22, X21, [X31 + 0x20]
	0x03CF0650 LDP X24, X23, [X31 + 0x10]
	0x03CF0654 LDP X30, X25, [X31], #0x40
	0x03CF0658 RET
	0x03CF065C BL 0x1C16F20
	0x03CF0660 STP X30, X25, [X31 - 0x40]!
	0x03CF0664 STP X24, X23, [X31 + 0x10]
	0x03CF0668 STP X22, X21, [X31 + 0x20]
	0x03CF066C STP X20, X19, [X31 + 0x30]
	0x03CF0670 ADRP X20, 0x6F7000
	0x03CF0674 LDRB W8, [X20 + 0x772]
	0x03CF0678 MOV W19, W2
	0x03CF067C MOV W21, W1
	0x03CF0680 MOV X24, X0
	0x03CF0684 TBNZ X8, 0x0, 0x3CF069C
	0x03CF0688 ADRP X0, 0x40A000
	0x03CF068C LDR X0, [X0 + 0x2F8]
	0x03CF0690 BL 0x1C16CF4
	0x03CF0694 MOVZ W8, 0x1
	0x03CF0698 STRB W8, [X20 + 0x772]
	0x03CF069C LDR X8, [X24]
	0x03CF06A0 MOV X0, X24
	0x03CF06A4 LDP X9, X1, [X8 + 0x188]
	0x03CF06A8 BLR X9
	0x03CF06AC LDR X8, [X24]
	0x03CF06B0 MOV X22, X0
	0x03CF06B4 MOV X0, X24
	0x03CF06B8 LDP X9, X1, [X8 + 0x188]
	0x03CF06BC BLR X9
	0x03CF06C0 LDR X8, [X24]
	0x03CF06C4 MOV X20, X0
	0x03CF06C8 MOV X0, X24
	0x03CF06CC LDP X9, X1, [X8 + 0x188]
	0x03CF06D0 BLR X9
	0x03CF06D4 CBZ X0, 0x3CF089C
	0x03CF06D8 ADRP X25, 0x40A000
	0x03CF06DC LDR X8, [X0]
	0x03CF06E0 LDR X25, [X25 + 0x2F8]
	0x03CF06E4 MOV X23, X0
	0x03CF06E8 LDRH W9, [X8 + 0x12E]
	0x03CF06EC LDR X1, [X25]
	0x03CF06F0 CBZ X9, 0x3CF0714
	0x03CF06F4 LDR X10, [X8 + 0xB0]
	0x03CF06F8 ADD X10, X10, 0x8
	0x03CF06FC LDUR X11, [X10 - 0x8]
	0x03CF0700 CMP X11, X1
	0x03CF0704 B.EQ 0x3CF0724
	0x03CF0708 SUBS X9, X9, 0x1
	0x03CF070C ADD X10, X10, 0x10
	0x03CF0710 B.NE 0x3CF06FC
	0x03CF0714 MOV X0, X23
	0x03CF0718 MOV W2, W31
	0x03CF071C BL 0x1C5C788
	0x03CF0720 B 0x3CF0730
	0x03CF0724 LDRSW X9, [X10]
	0x03CF0728 ADD X8, X8, X9, 0x4, LSL
	0x03CF072C ADD X0, X8, 0x138
	0x03CF0730 LDP X8, X2, [X0]
	0x03CF0734 MOV X0, X23
	0x03CF0738 MOV W1, W19
	0x03CF073C BLR X8
	0x03CF0740 LDR X8, [X24]
	0x03CF0744 MOV X23, X0
	0x03CF0748 MOV X0, X24
	0x03CF074C LDP X9, X1, [X8 + 0x188]
	0x03CF0750 BLR X9
	0x03CF0754 CBZ X0, 0x3CF089C
	0x03CF0758 LDR X8, [X0]
	0x03CF075C LDR X1, [X25]
	0x03CF0760 MOV X24, X0
	0x03CF0764 LDRH W9, [X8 + 0x12E]
	0x03CF0768 CBZ X9, 0x3CF078C
	0x03CF076C LDR X10, [X8 + 0xB0]
	0x03CF0770 ADD X10, X10, 0x8
	0x03CF0774 LDUR X11, [X10 - 0x8]
	0x03CF0778 CMP X11, X1
	0x03CF077C B.EQ 0x3CF079C
	0x03CF0780 SUBS X9, X9, 0x1
	0x03CF0784 ADD X10, X10, 0x10
	0x03CF0788 B.NE 0x3CF0774
	0x03CF078C MOV X0, X24
	0x03CF0790 MOV W2, W31
	0x03CF0794 BL 0x1C5C788
	0x03CF0798 B 0x3CF07A8
	0x03CF079C LDRSW X9, [X10]
	0x03CF07A0 ADD X8, X8, X9, 0x4, LSL
	0x03CF07A4 ADD X0, X8, 0x138
	0x03CF07A8 LDP X8, X2, [X0]
	0x03CF07AC MOV X0, X24
	0x03CF07B0 MOV W1, W21
	0x03CF07B4 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x6F8000
	008 Move W8, [X20+1896]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x42D000
	015 Move X0, [X0+296]
	016 Call 0x1C17CF4
	017 Move X0, 0x473000
	018 Move X0, [X0+2728]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+1896], W8
	022 Compare X19, 0
	023 JumpIfEqual {291}
	024 Move X0, [X19+16]
	025 Compare X0, 0
	026 JumpIfEqual {291}
	027 Move X20, 0x473000
	028 Move X20, [X20+2728]
	029 Move X1, X31
	030 Call VisualElement.get_style, X0
	031 Move X1, [X20]
	032 Move X20, X0
	033 Move W0, W31
	034 Call 0x266FACC, X0
	035 Compare X20, 0
	036 JumpIfEqual {291}
	037 Move X23, 0x42D000
	038 Move X8, [X20]
	039 Move X23, [X23+296]
	040 Move X21, X0
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X23]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 40
	052 Move X0, X20
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 40
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X2, [X0+8]
	060 Move X0, X20
	061 Move X1, X21
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X0, [X19+16]
	064 Compare X0, 0
	065 JumpIfEqual {291}
	066 Move X1, X31
	067 Call VisualElement.get_style, X0
	068 Move X20, X0
	069 Move W0, 4
	070 Move X1, X31
	071 Call StyleLength.op_Implicit, X0
	072 Compare X20, 0
	073 JumpIfEqual {291}
	074 Move X9, [X20]
	075 Move X8, X1
	076 Move X1, [X23]
	077 Move X21, X0
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 And X22, X8, 0
	080 Compare X10, 0
	081 JumpIfEqual {88}
	082 Move X8, [X9+176]
	083 Add X8, X8, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X10, X10, 1
	087 Add X8, X8, 16
	088 Move W2, 19
	089 Move X0, X20
	090 Call 0x1C5D788
	091 Move W8, [X8]
	092 Add W8, W8, 19
	093 Add X8, X9, W8
	094 Add X0, X8, 312
	095 Move X8, [X0]
	096 Move X3, [X0+8]
	097 Move X0, X20
	098 Move X1, X21
	099 Move X2, X22
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Move X0, [X19+16]
	102 Compare X0, 0
	103 JumpIfEqual {291}
	104 Move X1, X31
	105 Call VisualElement.get_style, X0
	106 Move X20, X0
	107 Move S0, W31
	108 Move X0, X31
	109 Call StyleLength.op_Implicit, V0
	110 Compare X20, 0
	111 JumpIfEqual {291}
	112 Move X9, [X20]
	113 Move X8, X1
	114 Move X1, [X23]
	115 Move X21, X0
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 And X22, X8, 0
	118 Compare X10, 0
	119 JumpIfEqual {126}
	120 Move X8, [X9+176]
	121 Add X8, X8, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X10, X10, 1
	125 Add X8, X8, 16
	126 Move W2, 29
	127 Move X0, X20
	128 Call 0x1C5D788
	129 Move W8, [X8]
	130 Add W8, W8, 29
	131 Add X8, X9, W8
	132 Add X0, X8, 312
	133 Move X8, [X0]
	134 Move X3, [X0+8]
	135 Move X0, X20
	136 Move X1, X21
	137 Move X2, X22
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move X0, [X19+16]
	140 Compare X0, 0
	141 JumpIfEqual {291}
	142 Move X1, X31
	143 Call VisualElement.get_style, X0
	144 Move X20, X0
	145 Move S0, W31
	146 Move X0, X31
	147 Call StyleLength.op_Implicit, V0
	148 Compare X20, 0
	149 JumpIfEqual {291}
	150 Move X9, [X20]
	151 Move X8, X1
	152 Move X1, [X23]
	153 Move X21, X0
	154 NotImplemented "Instruction LDRH not yet implemented."
	155 And X22, X8, 0
	156 Compare X10, 0
	157 JumpIfEqual {164}
	158 Move X8, [X9+176]
	159 Add X8, X8, 8
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Subtract X10, X10, 1
	163 Add X8, X8, 16
	164 Move W2, 26
	165 Move X0, X20
	166 Call 0x1C5D788
	167 Move W8, [X8]
	168 Add W8, W8, 26
	169 Add X8, X9, W8
	170 Add X0, X8, 312
	171 Move X8, [X0]
	172 Move X3, [X0+8]
	173 Move X0, X20
	174 Move X1, X21
	175 Move X2, X22
	176 NotImplemented "Instruction BLR not yet implemented."
	177 Move X0, [X19+16]
	178 Compare X0, 0
	179 JumpIfEqual {291}
	180 Move X1, X31
	181 Call VisualElement.get_style, X0
	182 Move X20, X0
	183 Move S0, W31
	184 Move X0, X31
	185 Call StyleLength.op_Implicit, V0
	186 Compare X20, 0
	187 JumpIfEqual {291}
	188 Move X9, [X20]
	189 Move X8, X1
	190 Move X1, [X23]
	191 Move X21, X0
	192 NotImplemented "Instruction LDRH not yet implemented."
	193 And X22, X8, 0
	194 Compare X10, 0
	195 JumpIfEqual {202}
	196 Move X8, [X9+176]
	197 Add X8, X8, 8
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Subtract X10, X10, 1
	201 Add X8, X8, 16
	202 Move W2, 39
	203 Move X0, X20
	204 Call 0x1C5D788
	205 Move W8, [X8]
	206 Add W8, W8, 39
	207 Add X8, X9, W8
	208 Add X0, X8, 312
	209 Move X8, [X0]
	210 Move X3, [X0+8]
	211 Move X0, X20
	212 Move X1, X21
	213 Move X2, X22
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Move X0, [X19+16]
	216 Compare X0, 0
	217 JumpIfEqual {291}
	218 Move X1, X31
	219 Call VisualElement.get_style, X0
	220 Move X20, X0
	221 Move S0, W31
	222 Move X0, X31
	223 Call StyleFloat.op_Implicit, V0
	224 Compare X20, 0
	225 JumpIfEqual {291}
	226 Move X8, [X20]
	227 Move X1, [X23]
	228 Move X21, X0
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Compare X9, 0
	231 JumpIfEqual {238}
	232 Move X10, [X8+176]
	233 Add X10, X10, 8
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Subtract X9, X9, 1
	237 Add X10, X10, 16
	238 Move W2, 21
	239 Move X0, X20
	240 Call 0x1C5D788
	241 Move W9, [X10]
	242 Add W9, W9, 21
	243 Add X8, X8, W9
	244 Add X0, X8, 312
	245 Move X8, [X0]
	246 Move X2, [X0+8]
	247 Move X0, X20
	248 Move X1, X21
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move X0, [X19+16]
	251 Compare X0, 0
	252 JumpIfEqual {291}
	253 Move X1, X31
	254 Call VisualElement.get_style, X0
	255 Move X19, X0
	256 Move S0, W31
	257 Move X0, X31
	258 Call StyleFloat.op_Implicit, V0
	259 Compare X19, 0
	260 JumpIfEqual {291}
	261 Move X8, [X19]
	262 Move X1, [X23]
	263 Move X20, X0
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Compare X9, 0
	266 JumpIfEqual {273}
	267 Move X10, [X8+176]
	268 Add X10, X10, 8
	269 NotImplemented "Instruction LDUR not yet implemented."
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Subtract X9, X9, 1
	272 Add X10, X10, 16
	273 Move W2, 22
	274 Move X0, X19
	275 Call 0x1C5D788
	276 Move W9, [X10]
	277 Add W9, W9, 22
	278 Add X8, X8, W9
	279 Add X0, X8, 312
	280 Move X3, [X0]
	281 Move X2, [X0+8]
	282 Move X0, X19
	283 Move X1, X20
	284 Move X20, [X31+32]
	285 Move X19, [X31+40]
	286 Move X22, [X31+16]
	287 Move X21, [X31+24]
	288 Move X30, [X31+48]
	289 Move X23, [X31+56]
	290 CallNoReturn X3
	291 Call 0x1C17F20

Method: System.Void InvokeBindItem(UnityEngine.UIElements.ReusableCollectionItem reusableItem, System.Int32 index)

Disassembly:
	0x03CF07B8 CBZ X22, 0x3CF089C
	0x03CF07BC LDR X8, [X22]
	0x03CF07C0 LDR X1, [X25]
	0x03CF07C4 MOV X24, X0
	0x03CF07C8 LDRH W9, [X8 + 0x12E]
	0x03CF07CC CBZ X9, 0x3CF07F0
	0x03CF07D0 LDR X10, [X8 + 0xB0]
	0x03CF07D4 ADD X10, X10, 0x8
	0x03CF07D8 LDUR X11, [X10 - 0x8]
	0x03CF07DC CMP X11, X1
	0x03CF07E0 B.EQ 0x3CF0800
	0x03CF07E4 SUBS X9, X9, 0x1
	0x03CF07E8 ADD X10, X10, 0x10
	0x03CF07EC B.NE 0x3CF07D8
	0x03CF07F0 MOVZ W2, 0x1
	0x03CF07F4 MOV X0, X22
	0x03CF07F8 BL 0x1C5C788
	0x03CF07FC B 0x3CF0810
	0x03CF0800 LDR W9, [X10]
	0x03CF0804 ADD W9, W9, 0x1
	0x03CF0808 ADD X8, X8, W9, 0x4, SXTW
	0x03CF080C ADD X0, X8, 0x138
	0x03CF0810 LDP X8, X3, [X0]
	0x03CF0814 MOV X0, X22
	0x03CF0818 MOV W1, W21
	0x03CF081C MOV X2, X23
	0x03CF0820 BLR X8
	0x03CF0824 CBZ X20, 0x3CF089C
	0x03CF0828 LDR X8, [X20]
	0x03CF082C LDR X1, [X25]
	0x03CF0830 LDRH W9, [X8 + 0x12E]
	0x03CF0834 CBZ X9, 0x3CF0858
	0x03CF0838 LDR X10, [X8 + 0xB0]
	0x03CF083C ADD X10, X10, 0x8
	0x03CF0840 LDUR X11, [X10 - 0x8]
	0x03CF0844 CMP X11, X1
	0x03CF0848 B.EQ 0x3CF0868
	0x03CF084C SUBS X9, X9, 0x1
	0x03CF0850 ADD X10, X10, 0x10
	0x03CF0854 B.NE 0x3CF0840
	0x03CF0858 MOVZ W2, 0x1
	0x03CF085C MOV X0, X20
	0x03CF0860 BL 0x1C5C788
	0x03CF0864 B 0x3CF0878
	0x03CF0868 LDR W9, [X10]
	0x03CF086C ADD W9, W9, 0x1
	0x03CF0870 ADD X8, X8, W9, 0x4, SXTW
	0x03CF0874 ADD X0, X8, 0x138
	0x03CF0878 LDP X4, X3, [X0]
	0x03CF087C MOV X0, X20
	0x03CF0880 MOV W1, W19
	0x03CF0884 MOV X2, X24
	0x03CF0888 LDP X20, X19, [X31 + 0x30]
	0x03CF088C LDP X22, X21, [X31 + 0x20]
	0x03CF0890 LDP X24, X23, [X31 + 0x10]
	0x03CF0894 LDP X30, X25, [X31], #0x40
	0x03CF0898 BR X4
	0x03CF089C BL 0x1C16F20
	0x03CF08A0 LDR X8, [X0 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6F8000
	007 Move W8, [X22+1897]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x473000
	016 Move X0, [X0+2720]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1897], W8
	020 Compare X20, 0
	021 JumpIfEqual {59}
	022 Move X8, 0x473000
	023 Move X8, [X8+2720]
	024 Move X9, [X20]
	025 Move X8, [X8]
	026 Move W11, [X9+304]
	027 Move W10, [X8+304]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X9, [X9+200]
	030 Add X9, X9, X10
	031 NotImplemented "Instruction LDUR not yet implemented."
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X21
	034 Call BaseListViewController.get_baseListView, X0
	035 Compare X0, 0
	036 JumpIfEqual {69}
	037 Move X1, X31
	038 Call BaseVerticalCollectionView.get_reorderable, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {55}
	043 Move X0, X21
	044 Call BaseListViewController.get_baseListView, X0
	045 Compare X0, 0
	046 JumpIfEqual {69}
	047 Move W8, [X0+1312]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X21]
	050 Move X0, X21
	051 Move W1, W19
	052 Move X9, [X8+664]
	053 Move X2, [X8+672]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move W0, W31
	056 And W1, W0, 1
	057 Move X0, X20
	058 Call ReusableListViewItem.UpdateDragHandle, X0, X1
	059 Move X0, X21
	060 Move X1, X20
	061 Move W2, W19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Call CollectionViewController.InvokeBindItem, X0, X1, X2
	068 Return 
	069 Call 0x1C17F20

Method: System.Boolean NeedsDragHandle(System.Int32 index)

Disassembly:
	0x03CF0ABC ADRP X0, 0x403000
	0x03CF0AC0 LDR X0, [X0 + 0xEF0]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void AddItems(System.Int32 itemCount)

Disassembly:
	0x03CF0AC4 BL 0x1C16CF4
	0x03CF0AC8 MOVZ W8, 0x1
	0x03CF0ACC STRB W8, [X21 + 0x76D]
	0x03CF0AD0 MOV X0, X19
	0x03CF0AD4 BL 0x3CF023C
	0x03CF0AD8 CBZ X20, 0x3CF0CC4
	0x03CF0ADC ADRP X8, 0x42B000
	0x03CF0AE0 LDR X8, [X8 + 0x790]
	0x03CF0AE4 MOV X0, X20
	0x03CF0AE8 LDR X1, [X8]
	0x03CF0AEC BL 0x2FDE354
	0x03CF0AF0 LDR X8, [X19 + 0x40]
	0x03CF0AF4 CBZ X8, 0x3CF0B0C
	0x03CF0AF8 LDR X9, [X8 + 0x18]
	0x03CF0AFC LDR X0, [X8 + 0x40]
	0x03CF0B00 LDR X2, [X8 + 0x28]
	0x03CF0B04 MOV X1, X20
	0x03CF0B08 BLR X9
	0x03CF0B0C LDR X8, [X19]
	0x03CF0B10 MOV X0, X19
	0x03CF0B14 LDP X9, X1, [X8 + 0x188]
	0x03CF0B18 BLR X9
	0x03CF0B1C CBZ X0, 0x3CF0CD8
	0x03CF0B20 ADRP X24, 0x40A000
	0x03CF0B24 LDR X8, [X0]
	0x03CF0B28 LDR X24, [X24 + 0x2F8]
	0x03CF0B2C MOV X21, X0
	0x03CF0B30 LDRH W9, [X8 + 0x12E]
	0x03CF0B34 LDR X1, [X24]
	0x03CF0B38 CBZ X9, 0x3CF0B5C
	0x03CF0B3C LDR X10, [X8 + 0xB0]
	0x03CF0B40 ADD X10, X10, 0x8
	0x03CF0B44 LDUR X11, [X10 - 0x8]
	0x03CF0B48 CMP X11, X1
	0x03CF0B4C B.EQ 0x3CF0B6C
	0x03CF0B50 SUBS X9, X9, 0x1
	0x03CF0B54 ADD X10, X10, 0x10
	0x03CF0B58 B.NE 0x3CF0B44
	0x03CF0B5C MOVZ W2, 0x6
	0x03CF0B60 MOV X0, X21
	0x03CF0B64 BL 0x1C5C788
	0x03CF0B68 B 0x3CF0B7C
	0x03CF0B6C LDR W9, [X10]
	0x03CF0B70 ADD W9, W9, 0x6
	0x03CF0B74 ADD X8, X8, W9, 0x4, SXTW
	0x03CF0B78 ADD X0, X8, 0x138
	0x03CF0B7C LDP X8, X1, [X0]
	0x03CF0B80 MOV X0, X21
	0x03CF0B84 BLR X8
	0x03CF0B88 TBZ X0, 0x0, 0x3CF0BF4
	0x03CF0B8C LDR X8, [X19]
	0x03CF0B90 MOV X0, X19
	0x03CF0B94 LDP X9, X1, [X8 + 0x188]
	0x03CF0B98 BLR X9
	0x03CF0B9C CBZ X0, 0x3CF0BD4
	0x03CF0BA0 ADRP X9, 0x403000
	0x03CF0BA4 LDR X9, [X9 + 0xEF0]
	0x03CF0BA8 LDR X8, [X0]
	0x03CF0BAC LDR X1, [X9]
	0x03CF0BB0 LDRB W10, [X8 + 0x130]
	0x03CF0BB4 LDRB W9, [X1 + 0x130]
	0x03CF0BB8 CMP W10, W9
	0x03CF0BBC B.CC 0x3CF0CDC
	0x03CF0BC0 LDR X8, [X8 + 0xC8]
	0x03CF0BC4 ADD X8, X8, X9, 0x3, LSL
	0x03CF0BC8 LDUR X8, [X8 - 0x8]
	0x03CF0BCC CMP X8, X1
	0x03CF0BD0 B.NE 0x3CF0CDC
	0x03CF0BD4 MOV X1, X20
	0x03CF0BD8 BL 0x3CF0CFC
	0x03CF0BDC LDR X8, [X19]
	0x03CF0BE0 MOV X1, X0
	0x03CF0BE4 MOV X0, X19
	0x03CF0BE8 LDP X9, X2, [X8 + 0x198]
	0x03CF0BEC BLR X9
	0x03CF0BF0 B 0x3CF0C9C
	0x03CF0BF4 LDR W8, [X20 + 0x18]
	0x03CF0BF8 SUBS W21, W8, 0x1
	0x03CF0BFC B.MI 0x3CF0C9C
	0x03CF0C00 ADRP X25, 0x42D000
	0x03CF0C04 LDR X25, [X25 + 0xF38]
	0x03CF0C08 LDR X8, [X19]
	0x03CF0C0C MOV X0, X19
	0x03CF0C10 LDP X9, X1, [X8 + 0x188]
	0x03CF0C14 BLR X9
	0x03CF0C18 LDR X2, [X25]
	0x03CF0C1C MOV X22, X0
	0x03CF0C20 MOV X0, X20
	0x03CF0C24 MOV W1, W21
	0x03CF0C28 BL 0x2FDC41C
	0x03CF0C2C CBZ X22, 0x3CF0CD8
	0x03CF0C30 LDR X8, [X22]
	0x03CF0C34 LDR X1, [X24]
	0x03CF0C38 MOV W23, W0
	0x03CF0C3C LDRH W9, [X8 + 0x12E]
	0x03CF0C40 CBZ X9, 0x3CF0C64
	0x03CF0C44 LDR X10, [X8 + 0xB0]
	0x03CF0C48 ADD X10, X10, 0x8
	0x03CF0C4C LDUR X11, [X10 - 0x8]
	0x03CF0C50 CMP X11, X1
	0x03CF0C54 B.EQ 0x3CF0C74
	0x03CF0C58 SUBS X9, X9, 0x1
	0x03CF0C5C ADD X10, X10, 0x10
	0x03CF0C60 B.NE 0x3CF0C4C
	0x03CF0C64 MOVZ W2, 0xA
	0x03CF0C68 MOV X0, X22
	0x03CF0C6C BL 0x1C5C788
	0x03CF0C70 B 0x3CF0C84
	0x03CF0C74 LDR W9, [X10]
	0x03CF0C78 ADD W9, W9, 0xA
	0x03CF0C7C ADD X8, X8, W9, 0x4, SXTW
	0x03CF0C80 ADD X0, X8, 0x138
	0x03CF0C84 LDP X8, X2, [X0]
	0x03CF0C88 MOV X0, X22
	0x03CF0C8C MOV W1, W23
	0x03CF0C90 BLR X8
	0x03CF0C94 SUBS W21, W21, 0x1
	0x03CF0C98 B.PL 0x3CF0C08
	0x03CF0C9C LDR X8, [X19 + 0x30]
	0x03CF0CA0 CBZ X8, 0x3CF0CC4
	0x03CF0CA4 LDR X2, [X8 + 0x18]
	0x03CF0CA8 LDR X0, [X8 + 0x40]
	0x03CF0CAC LDR X1, [X8 + 0x28]
	0x03CF0CB0 LDP X20, X19, [X31 + 0x30]
	0x03CF0CB4 LDP X22, X21, [X31 + 0x20]
	0x03CF0CB8 LDP X24, X23, [X31 + 0x10]
	0x03CF0CBC LDP X30, X25, [X31], #0x40
	0x03CF0CC0 BR X2
	0x03CF0CC4 LDP X20, X19, [X31 + 0x30]
	0x03CF0CC8 LDP X22, X21, [X31 + 0x20]
	0x03CF0CCC LDP X24, X23, [X31 + 0x10]
	0x03CF0CD0 LDP X30, X25, [X31], #0x40
	0x03CF0CD4 RET
	0x03CF0CD8 BL 0x1C16F20
	0x03CF0CDC BL 0x1C171E0
	0x03CF0CE0 LDR X8, [X0 + 0x40]
	0x03CF0CE4 CBZ X8, 0x3CF0CF8
	0x03CF0CE8 LDR X3, [X8 + 0x18]
	0x03CF0CEC LDR X0, [X8 + 0x40]
	0x03CF0CF0 LDR X2, [X8 + 0x28]
	0x03CF0CF4 BR X3
	0x03CF0CF8 RET
	0x03CF0CFC STP X30, X25, [X31 - 0x40]!
	0x03CF0D00 STP X24, X23, [X31 + 0x10]
	0x03CF0D04 STP X22, X21, [X31 + 0x20]
	0x03CF0D08 STP X20, X19, [X31 + 0x30]
	0x03CF0D0C ADRP X21, 0x6F7000
	0x03CF0D10 LDRB W8, [X21 + 0x771]
	0x03CF0D14 MOV X19, X1
	0x03CF0D18 MOV X20, X0
	0x03CF0D1C TBNZ X8, 0x0, 0x3CF0D40
	0x03CF0D20 ADRP X0, 0x404000
	0x03CF0D24 LDR X0, [X0 + 0xE28]
	0x03CF0D28 BL 0x1C16CF4
	0x03CF0D2C ADRP X0, 0x42D000
	0x03CF0D30 LDR X0, [X0 + 0xF38]
	0x03CF0D34 BL 0x1C16CF4
	0x03CF0D38 MOVZ W8, 0x1
	0x03CF0D3C STRB W8, [X21 + 0x771]
	0x03CF0D40 CBZ X20, 0x3CF0E60
	0x03CF0D44 MOV X0, X20
	0x03CF0D48 MOV X1, X31
	0x03CF0D4C BL 0x3395B7C
	0x03CF0D50 CBZ X19, 0x3CF0E60
	0x03CF0D54 LDR W8, [X19 + 0x18]
	0x03CF0D58 SUBS W21, W0, W8
	0x03CF0D5C B.MI 0x3CF0E64
	0x03CF0D60 MOV X0, X20
	0x03CF0D64 MOV X1, X31
	0x03CF0D68 BL 0x33BE520
	0x03CF0D6C CBZ X0, 0x3CF0E60
	0x03CF0D70 LDR X8, [X0]
	0x03CF0D74 LDR X9, [X8 + 0x428]
	0x03CF0D78 LDR X1, [X8 + 0x430]
	0x03CF0D7C BLR X9
	0x03CF0D80 CBZ W21, 0x3CF0E44
	0x03CF0D84 MOV W1, W21
	0x03CF0D88 MOV X2, X31
	0x03CF0D8C BL 0x33A2DF8
	0x03CF0D90 MOV X21, X0
	0x03CF0D94 MOV X0, X20
	0x03CF0D98 MOV X1, X31
	0x03CF0D9C BL 0x3395B7C
	0x03CF0DA0 CMP W0, 0x1
	0x03CF0DA4 B.LT 0x3CF0E2C
	0x03CF0DA8 ADRP X25, 0x42D000
	0x03CF0DAC LDR X25, [X25 + 0xF38]
	0x03CF0DB0 MOV W22, W31
	0x03CF0DB4 MOV W23, W31
	0x03CF0DB8 MOV W24, W31
	0x03CF0DBC LDR W8, [X19 + 0x18]
	0x03CF0DC0 CMP W23, W8
	0x03CF0DC4 B.GE 0x3CF0DE8
	0x03CF0DC8 LDR X2, [X25]
	0x03CF0DCC MOV X0, X19
	0x03CF0DD0 MOV W1, W23
	0x03CF0DD4 BL 0x2FDC41C
	0x03CF0DD8 CMP W24, W0
	0x03CF0DDC B.NE 0x3CF0DE8
	0x03CF0DE0 ADD W23, W23, 0x1
	0x03CF0DE4 B 0x3CF0E14
	0x03CF0DE8 MOV X0, X20
	0x03CF0DEC MOV W1, W24
	0x03CF0DF0 MOV X2, X31
	0x03CF0DF4 BL 0x3395BDC
	0x03CF0DF8 CBZ X21, 0x3CF0E60
	0x03CF0DFC MOV X1, X0
	0x03CF0E00 MOV X0, X21
	0x03CF0E04 MOV W2, W22
	0x03CF0E08 MOV X3, X31
	0x03CF0E0C BL 0x339F798
	0x03CF0E10 ADD W22, W22, 0x1
	0x03CF0E14 MOV X0, X20
	0x03CF0E18 MOV X1, X31
	0x03CF0E1C ADD W24, W24, 0x1
	0x03CF0E20 BL 0x3395B7C
	0x03CF0E24 CMP W24, W0
	0x03CF0E28 B.LT 0x3CF0DBC
	0x03CF0E2C MOV X0, X21
	0x03CF0E30 LDP X20, X19, [X31 + 0x30]
	0x03CF0E34 LDP X22, X21, [X31 + 0x20]
	0x03CF0E38 LDP X24, X23, [X31 + 0x10]
	0x03CF0E3C LDP X30, X25, [X31], #0x40
	0x03CF0E40 RET
	0x03CF0E44 LDP X20, X19, [X31 + 0x30]
	0x03CF0E48 LDP X22, X21, [X31 + 0x20]
	0x03CF0E4C LDP X24, X23, [X31 + 0x10]
	0x03CF0E50 MOV W1, W31
	0x03CF0E54 MOV X2, X31
	0x03CF0E58 LDP X30, X25, [X31], #0x40
	0x03CF0E5C B 0x33A2DF8
	0x03CF0E60 BL 0x1C16F20
	0x03CF0E64 ADRP X0, 0x403000
	0x03CF0E68 LDR X0, [X0 + 0x5B0]
	0x03CF0E6C BL 0x1C16D08
	0x03CF0E70 BL 0x1C16F10
	0x03CF0E74 MOV X19, X0
	0x03CF0E78 ADRP X0, 0x472000
	0x03CF0E7C LDR X0, [X0 + 0xAF0]
	0x03CF0E80 BL 0x1C16D08
	0x03CF0E84 MOV X1, X0
	0x03CF0E88 MOV X0, X19
	0x03CF0E8C MOV X2, X31
	0x03CF0E90 BL 0x337DF1C
	0x03CF0E94 ADRP X0, 0x472000
	0x03CF0E98 LDR X0, [X0 + 0xAF8]
	0x03CF0E9C BL 0x1C16D08
	0x03CF0EA0 MOV X1, X0
	0x03CF0EA4 MOV X0, X19
	0x03CF0EA8 BL 0x1C16DEC
	0x03CF0EAC STP X30, X25, [X31 - 0x40]!
	0x03CF0EB0 STP X24, X23, [X31 + 0x10]
	0x03CF0EB4 STP X22, X21, [X31 + 0x20]
	0x03CF0EB8 STP X20, X19, [X31 + 0x30]
	0x03CF0EBC ADRP X19, 0x6F7000
	0x03CF0EC0 LDRB W8, [X19 + 0x76E]
	0x03CF0EC4 MOV W22, W1
	0x03CF0EC8 MOV X20, X0
	0x03CF0ECC TBNZ X8, 0x0, 0x3CF0F08
	0x03CF0ED0 ADRP X0, 0x42D000
	0x03CF0ED4 LDR X0, [X0 + 0x8D8]
	0x03CF0ED8 BL 0x1C16CF4
	0x03CF0EDC ADRP X0, 0x42E000
	0x03CF0EE0 LDR X0, [X0 + 0xB08]
	0x03CF0EE4 BL 0x1C16CF4
	0x03CF0EE8 ADRP X0, 0x42D000
	0x03CF0EEC LDR X0, [X0 + 0x8E0]
	0x03CF0EF0 BL 0x1C16CF4
	0x03CF0EF4 ADRP X0, 0x404000
	0x03CF0EF8 LDR X0, [X0 + 0xE10]
	0x03CF0EFC BL 0x1C16CF4
	0x03CF0F00 MOVZ W8, 0x1
	0x03CF0F04 STRB W8, [X19 + 0x76E]
	0x03CF0F08 CMP W22, 0x1
	0x03CF0F0C B.LT 0x3CF1010
	0x03CF0F10 LDR X8, [X20]
	0x03CF0F14 ADRP X24, 0x42D000
	0x03CF0F18 ADRP X19, 0x42D000
	0x03CF0F1C MOV X0, X20
	0x03CF0F20 LDP X9, X1, [X8 + 0x1C8]
	0x03CF0F24 LDR X24, [X24 + 0x8E0]
	0x03CF0F28 LDR X19, [X19 + 0x8D8]
	0x03CF0F2C BLR X9
	0x03CF0F30 LDR X8, [X24]
	0x03CF0F34 MOV W21, W0
	0x03CF0F38 LDR W9, [X8 + 0xE0]
	0x03CF0F3C CBNZ W9, 0x3CF0F48
	0x03CF0F40 MOV X0, X8
	0x03CF0F44 BL 0x1C16DFC
	0x03CF0F48 LDR X0, [X19]
	0x03CF0F4C ADRP X23, 0x42E000
	0x03CF0F50 LDR X23, [X23 + 0xB08]
	0x03CF0F54 BL 0x28F9448
	0x03CF0F58 SUB W8, W21, W22
	0x03CF0F5C CMP W8, W21
	0x03CF0F60 MOV X19, X0
	0x03CF0F64 B.GE 0x3CF0FD4
	0x03CF0F68 ADRP X25, 0x404000
	0x03CF0F6C LDR X25, [X25 + 0xE10]
	0x03CF0F70 SUB W22, W31, W22
	0x03CF0F74 CBZ X19, 0x3CF1024
	0x03CF0F78 LDR W10, [X19 + 0x1C]
	0x03CF0F7C LDR X8, [X19 + 0x10]
	0x03CF0F80 LDR X9, [X25]
	0x03CF0F84 ADD W10, W10, 0x1
	0x03CF0F88 STR W10, [X19 + 0x1C]
	0x03CF0F8C CBZ X8, 0x3CF1028
	0x03CF0F90 LDRSW X10, [X19 + 0x18]
	0x03CF0F94 LDR W11, [X8 + 0x18]
	0x03CF0F98 ADD W1, W21, W22
	0x03CF0F9C CMP W10, W11
	0x03CF0FA0 B.CS 0x3CF0FB8
	0x03CF0FA4 ADD W9, W10, 0x1
	0x03CF0FA8 ADD X8, X8, X10, 0x2, LSL
	0x03CF0FAC STR W9, [X19 + 0x18]
	0x03CF0FB0 STR W1, [X8 + 0x20]
	0x03CF0FB4 B 0x3CF0FCC
	0x03CF0FB8 LDR X8, [X9 + 0x20]
	0x03CF0FBC LDR X8, [X8 + 0xC0]
	0x03CF0FC0 LDR X2, [X8 + 0x70]
	0x03CF0FC4 MOV X0, X19
	0x03CF0FC8 BL 0x2FDC70C
	0x03CF0FCC ADDS W22, W22, 0x1
	0x03CF0FD0 B.CC 0x3CF0F74
	0x03CF0FD4 LDR X8, [X20]
	0x03CF0FD8 LDR X9, [X8 + 0x2D8]
	0x03CF0FDC LDR X2, [X8 + 0x2E0]
	0x03CF0FE0 MOV X0, X20
	0x03CF0FE4 MOV X1, X19
	0x03CF0FE8 BLR X9
	0x03CF0FEC MOV X20, X31
	0x03CF0FF0 LDR X0, [X24]
	0x03CF0FF4 LDR W8, [X0 + 0xE0]
	0x03CF0FF8 CBNZ W8, 0x3CF1000
	0x03CF0FFC BL 0x1C16DFC
	0x03CF1000 LDR X1, [X23]
	0x03CF1004 MOV X0, X19
	0x03CF1008 BL 0x28F9588
	0x03CF100C CBNZ X20, 0x3CF102C
	0x03CF1010 LDP X20, X19, [X31 + 0x30]
	0x03CF1014 LDP X22, X21, [X31 + 0x20]
	0x03CF1018 LDP X24, X23, [X31 + 0x10]
	0x03CF101C LDP X30, X25, [X31], #0x40
	0x03CF1020 RET
	0x03CF1024 BL 0x1C16F20
	0x03CF1028 BL 0x1C16F20
	0x03CF102C MOV X0, X20
	0x03CF1030 BL 0x1C16F18
	0x03CF1034 B 0x3CF103C
	0x03CF1038 B 0x3CF103C
	0x03CF103C MOV X21, X0
	0x03CF1040 CMP W1, 0x1
	0x03CF1044 B.NE 0x3CF105C
	0x03CF1048 MOV X0, X21
	0x03CF104C BL 0x3EB1AD0
	0x03CF1050 LDR X20, [X0]
	0x03CF1054 BL 0x3EB1AE0
	0x03CF1058 B 0x3CF0FF0
	0x03CF105C MOV X20, X31
	0x03CF1060 B 0x3CF1068
	0x03CF1064 MOV X21, X0
	0x03CF1068 LDR X0, [X24]
	0x03CF106C LDR W8, [X0 + 0xE0]
	0x03CF1070 CBNZ W8, 0x3CF1078
	0x03CF1074 BL 0x1C16DFC
	0x03CF1078 LDR X1, [X23]
	0x03CF107C MOV X0, X19
	0x03CF1080 BL 0x28F9588
	0x03CF1084 CBNZ X20, 0x3CF1090
	0x03CF1088 MOV X0, X21
	0x03CF108C BL 0x1D2C690
	0x03CF1090 MOV X0, X20
	0x03CF1094 BL 0x1C16F18
	0x03CF1098 BL 0x1990590
	0x03CF109C STP X30, X21, [X31 - 0x20]!
	0x03CF10A0 STP X20, X19, [X31 + 0x10]
	0x03CF10A4 ADRP X20, 0x6F6000
	0x03CF10A8 LDRB W8, [X20 + 0x76F]
	0x03CF10AC MOV X19, X0
	0x03CF10B0 TBNZ X8, 0x0, 0x3CF10D4
	0x03CF10B4 ADRP X0, 0x409000
	0x03CF10B8 LDR X0, [X0 + 0x2F0]
	0x03CF10BC BL 0x1C16CF4
	0x03CF10C0 ADRP X0, 0x409000
	0x03CF10C4 LDR X0, [X0 + 0x2F8]
	0x03CF10C8 BL 0x1C16CF4
	0x03CF10CC MOVZ W8, 0x1
	0x03CF10D0 STRB W8, [X20 + 0x76F]
	0x03CF10D4 LDR X8, [X19]
	0x03CF10D8 MOV X0, X19
	0x03CF10DC LDP X9, X1, [X8 + 0x188]
	0x03CF10E0 BLR X9
	0x03CF10E4 CBZ X0, 0x3CF1238
	0x03CF10E8 MOV X0, X19
	0x03CF10EC BL 0x3CF023C
	0x03CF10F0 LDR X8, [X19]
	0x03CF10F4 MOV X0, X19
	0x03CF10F8 LDP X9, X1, [X8 + 0x188]
	0x03CF10FC BLR X9
	0x03CF1100 CBZ X0, 0x3CF1244
	0x03CF1104 ADRP X10, 0x409000
	0x03CF1108 LDR X8, [X0]
	0x03CF110C LDR X10, [X10 + 0x2F0]
	0x03CF1110 MOV X20, X0
	0x03CF1114 LDRH W9, [X8 + 0x12E]
	0x03CF1118 LDR X1, [X10]
	0x03CF111C CBZ X9, 0x3CF1140
	0x03CF1120 LDR X10, [X8 + 0xB0]
	0x03CF1124 ADD X10, X10, 0x8
	0x03CF1128 LDUR X11, [X10 - 0x8]
	0x03CF112C CMP X11, X1
	0x03CF1130 B.EQ 0x3CF1150
	0x03CF1134 SUBS X9, X9, 0x1
	0x03CF1138 ADD X10, X10, 0x10
	0x03CF113C B.NE 0x3CF1128
	0x03CF1140 MOVZ W2, 0x1
	0x03CF1144 MOV X0, X20
	0x03CF1148 BL 0x1C5C788
	0x03CF114C B 0x3CF1160
	0x03CF1150 LDR W9, [X10]
	0x03CF1154 ADD W9, W9, 0x1
	0x03CF1158 ADD X8, X8, W9, 0x4, SXTW
	0x03CF115C ADD X0, X8, 0x138
	0x03CF1160 LDP X8, X1, [X0]
	0x03CF1164 MOV X0, X20
	0x03CF1168 BLR X8
	0x03CF116C SUB W1, W0, 0x1
	0x03CF1170 MOV W0, W31
	0x03CF1174 MOV X2, X31
	0x03CF1178 BL 0x35DED78
	0x03CF117C LDR X8, [X19]
	0x03CF1180 MOV X20, X0
	0x03CF1184 MOV X0, X19
	0x03CF1188 LDP X9, X1, [X8 + 0x188]
	0x03CF118C BLR X9
	0x03CF1190 CBZ X0, 0x3CF1244
	0x03CF1194 ADRP X10, 0x409000
	0x03CF1198 LDR X8, [X0]
	0x03CF119C LDR X10, [X10 + 0x2F8]
	0x03CF11A0 MOV X21, X0
	0x03CF11A4 LDRH W9, [X8 + 0x12E]
	0x03CF11A8 LDR X1, [X10]
	0x03CF11AC CBZ X9, 0x3CF11D0
	0x03CF11B0 LDR X10, [X8 + 0xB0]
	0x03CF11B4 ADD X10, X10, 0x8
	0x03CF11B8 LDUR X11, [X10 - 0x8]
	0x03CF11BC CMP X11, X1
	0x03CF11C0 B.EQ 0x3CF11E0
	0x03CF11C4 SUBS X9, X9, 0x1
	0x03CF11C8 ADD X10, X10, 0x10
	0x03CF11CC B.NE 0x3CF11B8
	0x03CF11D0 MOVZ W2, 0x4
	0x03CF11D4 MOV X0, X21
	0x03CF11D8 BL 0x1C5C788
	0x03CF11DC B 0x3CF11F0
	0x03CF11E0 LDR W9, [X10]
	0x03CF11E4 ADD W9, W9, 0x4
	0x03CF11E8 ADD X8, X8, W9, 0x4, SXTW
	0x03CF11EC ADD X0, X8, 0x138
	0x03CF11F0 LDP X8, X1, [X0]
	0x03CF11F4 MOV X0, X21
	0x03CF11F8 BLR X8
	0x03CF11FC LDR X8, [X19 + 0x40]
	0x03CF1200 CBZ X8, 0x3CF1218
	0x03CF1204 LDR X9, [X8 + 0x18]
	0x03CF1208 LDR X0, [X8 + 0x40]
	0x03CF120C LDR X2, [X8 + 0x28]
	0x03CF1210 MOV X1, X20
	0x03CF1214 BLR X9
	0x03CF1218 LDR X8, [X19 + 0x30]
	0x03CF121C CBZ X8, 0x3CF1238
	0x03CF1220 LDR X2, [X8 + 0x18]
	0x03CF1224 LDR X0, [X8 + 0x40]
	0x03CF1228 LDR X1, [X8 + 0x28]
	0x03CF122C LDP X20, X19, [X31 + 0x10]
	0x03CF1230 LDP X30, X21, [X31], #0x20
	0x03CF1234 BR X2
	0x03CF1238 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x6F8000
	014 Move W8, [X20+1898]
	015 Move W21, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {56}
	021 Move X0, 0x473000
	022 Move X0, [X0+2736]
	023 Call 0x1C17CF4
	024 Move X0, 0x42E000
	025 Move X0, [X0+2264]
	026 Call 0x1C17CF4
	027 Move X0, 0x42F000
	028 Move X0, [X0+2824]
	029 Call 0x1C17CF4
	030 Move X0, 0x42E000
	031 Move X0, [X0+2272]
	032 Call 0x1C17CF4
	033 Move X0, 0x473000
	034 Move X0, [X0+2744]
	035 Call 0x1C17CF4
	036 Move X0, 0x40E000
	037 Move X0, [X0+2480]
	038 Call 0x1C17CF4
	039 Move X0, 0x40B000
	040 Move X0, [X0+752]
	041 Call 0x1C17CF4
	042 Move X0, 0x40B000
	043 Move X0, [X0+760]
	044 Call 0x1C17CF4
	045 Move X0, 0x405000
	046 Move X0, [X0+3600]
	047 Call 0x1C17CF4
	048 Move X0, 0x404000
	049 Move X0, [X0+3824]
	050 Call 0x1C17CF4
	051 Move X0, 0x404000
	052 Move X0, [X0+1728]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X20+1898], W8
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X19
	058 Call BaseListViewController.EnsureItemSourceCanBeResized, X0
	059 Move X8, [X19]
	060 Move X0, X19
	061 Move X9, [X8+392]
	062 Move X1, [X8+400]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Compare X0, 0
	065 JumpIfEqual {449}
	066 Move X10, 0x40B000
	067 Move X8, [X0]
	068 Move X10, [X10+752]
	069 Move X26, 0x42E000
	070 Move X20, X0
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Move X1, [X10]
	073 Move X26, [X26+2272]
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move W2, 1
	083 Move X0, X20
	084 Call 0x1C5D788
	085 Move W9, [X10]
	086 Add W9, W9, 1
	087 Add X8, X8, W9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X23, 0x42E000
	092 Move X23, [X23+2264]
	093 Move X0, X20
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X8, [X26]
	096 Move W22, W0
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X0, [X23]
	103 Call CollectionPool`2<Object, Int32>.Get
	104 Move X8, [X19]
	105 Move X20, X0
	106 Move X9, [X8+392]
	107 Move X1, [X8+400]
	108 Move X0, X19
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X23, X0
	111 Compare X0, 0
	112 JumpIfEqual {452}
	113 Move X28, 0x40B000
	114 Move X8, [X23]
	115 Move X28, [X28+760]
	116 NotImplemented "Instruction LDRH not yet implemented."
	117 Move X1, [X28]
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move W2, 6
	127 Move X0, X23
	128 Call 0x1C5D788
	129 Move W9, [X10]
	130 Add W9, W9, 6
	131 Add X8, X8, W9
	132 Add X0, X8, 312
	133 Move X8, [X0]
	134 Move X1, [X0+8]
	135 Move X0, X23
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X9, [X19]
	138 Move X8, [X9+392]
	139 Move X1, [X9+400]
	140 Move TEMP, X0
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfNotEqual {193}
	144 Move X0, X19
	145 NotImplemented "Instruction BLR not yet implemented."
	146 Compare X0, 0
	147 JumpIfEqual {159}
	148 Move X9, 0x404000
	149 Move X9, [X9+3824]
	150 Move X8, [X0]
	151 Move X1, [X9]
	152 Move W10, [X8+304]
	153 Move W9, [X1+304]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X8, [X8+200]
	156 Add X8, X8, X9
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move W1, W21
	160 Call BaseListViewController.AddToArray, X0, X1
	161 Move X1, X0
	162 Move X8, [X19]
	163 Move X9, [X8+408]
	164 Move X2, [X8+416]
	165 Move X0, X19
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Compare X20, 0
	168 JumpIfEqual {456}
	169 Move X23, 0x405000
	170 Move X23, [X23+3600]
	171 Move W10, [X20+28]
	172 Move X8, [X20+16]
	173 Move X9, [X23]
	174 Add W10, W10, 1
	175 Move [X20+28], W10
	176 Compare X8, 0
	177 JumpIfEqual {444}
	178 NotImplemented "Instruction LDRSW not yet implemented."
	179 Move W11, [X8+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Add W9, W10, 1
	182 Add X8, X8, X10
	183 Move [X20+24], W9
	184 Move [X8+32], W22
	185 Move X8, [X9+32]
	186 Move X8, [X8+192]
	187 Move X2, [X8+112]
	188 Move X0, X20
	189 Move W1, W22
	190 Call List`1<Int32>.AddWithResize, X0, X1
	191 Subtract W21, W21, 1
	192 Add W22, W22, 1
	193 Move X0, X19
	194 NotImplemented "Instruction BLR not yet implemented."
	195 Compare X0, 0
	196 JumpIfEqual {454}
	197 Move X1, X31
	198 Call "il2cpp_vm_object_is_inst", X0
	199 Compare X0, 0
	200 JumpIfEqual {455}
	201 Move X8, [X0]
	202 Move X1, [X8+2144]
	203 Move X9, [X8+2136]
	204 NotImplemented "Instruction BLR not yet implemented."
	205 Move X8, 0x40E000
	206 Move X8, [X8+2480]
	207 Move X23, X0
	208 Move X0, [X8]
	209 Call 0x1C17F10
	210 Move X8, 0x473000
	211 Move X8, [X8+2736]
	212 Move X24, X0
	213 Move X2, [X8]
	214 Move X1, X31
	215 Move X3, X31
	216 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	217 Move X8, 0x473000
	218 Move X8, [X8+2744]
	219 Move X2, [X8]
	220 Move X0, X23
	221 Move X1, X24
	222 Call 0x21C670C, X0, X1
	223 Move X8, 0x404000
	224 Move X8, [X8+1728]
	225 Move X23, X0
	226 Move X0, [X8]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Move X0, X23
	232 Move X1, X31
	233 Move X2, X31
	234 Call Type.op_Inequality, X0, X1
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {333}
	239 Compare X23, 0
	240 JumpIfEqual {458}
	241 Move X8, [X23]
	242 Move X1, [X8+1136]
	243 Move X9, [X8+1128]
	244 Move X0, X23
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Compare X0, 0
	247 JumpIfEqual {459}
	248 Move W8, [X0+24]
	249 Compare W8, 0
	250 JumpIfEqual {460}
	251 Move X0, [X0+32]
	252 Compare X0, 0
	253 JumpIfEqual {461}
	254 Move X1, X31
	255 Call Type.get_IsValueType, X0
	256 Move TEMP, X0
	257 And TEMP, TEMP, 1
	258 Compare TEMP, 1
	259 JumpIfNotEqual {333}
	260 Move X8, [X23]
	261 Move X1, [X8+1136]
	262 Move X9, [X8+1128]
	263 Move X0, X23
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Compare X0, 0
	266 JumpIfEqual {462}
	267 Move W8, [X0+24]
	268 Compare W8, 0
	269 JumpIfEqual {463}
	270 Compare X20, 0
	271 JumpIfEqual {464}
	272 Move X27, 0x405000
	273 Move X23, [X0+32]
	274 Move X27, [X27+3600]
	275 Move W29, W31
	276 Move W10, [X20+28]
	277 Move X8, [X20+16]
	278 Move X9, [X27]
	279 Add W10, W10, 1
	280 Move [X20+28], W10
	281 Compare X8, 0
	282 JumpIfEqual {447}
	283 NotImplemented "Instruction LDRSW not yet implemented."
	284 Move W11, [X8+24]
	285 Add W1, W29, W22
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Add W9, W10, 1
	288 Add X8, X8, X10
	289 Move [X20+24], W9
	290 Move [X8+32], W1
	291 Move X8, [X9+32]
	292 Move X8, [X8+192]
	293 Move X2, [X8+112]
	294 Move X0, X20
	295 Call List`1<Int32>.AddWithResize, X0, X1
	296 Move X8, [X19]
	297 Move X9, [X8+392]
	298 Move X1, [X8+400]
	299 Move X0, X19
	300 NotImplemented "Instruction BLR not yet implemented."
	301 Move X24, X0
	302 Move X0, X23
	303 Move X1, X31
	304 Call Activator.CreateInstance, X0
	305 Compare X24, 0
	306 JumpIfEqual {448}
	307 Move X8, [X24]
	308 Move X1, [X28]
	309 Move X25, X0
	310 NotImplemented "Instruction LDRH not yet implemented."
	311 Compare X9, 0
	312 JumpIfEqual {319}
	313 Move X10, [X8+176]
	314 Add X10, X10, 8
	315 NotImplemented "Instruction LDUR not yet implemented."
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Subtract X9, X9, 1
	318 Add X10, X10, 16
	319 Move W2, 2
	320 Move X0, X24
	321 Call 0x1C5D788
	322 Move W9, [X10]
	323 Add W9, W9, 2
	324 Add X8, X8, W9
	325 Add X0, X8, 312
	326 Move X8, [X0]
	327 Move X2, [X0+8]
	328 Move X0, X24
	329 Move X1, X25
	330 NotImplemented "Instruction BLR not yet implemented."
	331 Add W29, W29, 1
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Compare X20, 0
	334 JumpIfEqual {457}
	335 Move X25, 0x405000
	336 Move X25, [X25+3600]
	337 Move W24, W31
	338 Move W10, [X20+28]
	339 Move X8, [X20+16]
	340 Move X9, [X25]
	341 Add W10, W10, 1
	342 Move [X20+28], W10
	343 Compare X8, 0
	344 JumpIfEqual {445}
	345 NotImplemented "Instruction LDRSW not yet implemented."
	346 Move W11, [X8+24]
	347 Add W1, W24, W22
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Add W9, W10, 1
	350 Add X8, X8, X10
	351 Move [X20+24], W9
	352 Move [X8+32], W1
	353 Move X8, [X9+32]
	354 Move X8, [X8+192]
	355 Move X2, [X8+112]
	356 Move X0, X20
	357 Call List`1<Int32>.AddWithResize, X0, X1
	358 Move X8, [X19]
	359 Move X9, [X8+392]
	360 Move X1, [X8+400]
	361 Move X0, X19
	362 NotImplemented "Instruction BLR not yet implemented."
	363 Move X23, X0
	364 Compare X0, 0
	365 JumpIfEqual {446}
	366 Move X8, [X23]
	367 Move X1, [X28]
	368 NotImplemented "Instruction LDRH not yet implemented."
	369 Compare X9, 0
	370 JumpIfEqual {377}
	371 Move X10, [X8+176]
	372 Add X10, X10, 8
	373 NotImplemented "Instruction LDUR not yet implemented."
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Subtract X9, X9, 1
	376 Add X10, X10, 16
	377 Move W2, 2
	378 Move X0, X23
	379 Call 0x1C5D788
	380 Move W9, [X10]
	381 Add W9, W9, 2
	382 Add X8, X8, W9
	383 Add X0, X8, 312
	384 Move X8, [X0]
	385 Move X2, [X0+8]
	386 Move X0, X23
	387 Move X1, X31
	388 NotImplemented "Instruction BLR not yet implemented."
	389 Add W24, W24, 1
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X8, [X19+56]
	392 Compare X8, 0
	393 JumpIfEqual {399}
	394 Move X0, [X8+64]
	395 Move X9, [X8+24]
	396 Move X2, [X8+40]
	397 Move X1, X20
	398 NotImplemented "Instruction BLR not yet implemented."
	399 Move X22, X31
	400 Move X0, [X26]
	401 Move W8, [X0+224]
	402 Compare W8, 0
	403 JumpIfNotEqual {405}
	404 Call 0x1C17DFC
	405 Move X8, 0x42E000
	406 Move X8, [X8+2824]
	407 Move X0, X20
	408 Move X1, [X8]
	409 Call CollectionPool`2<Object, Int32>.Release, X0
	410 Compare X22, 0
	411 JumpIfNotEqual {450}
	412 Move X8, [X19+48]
	413 Compare X8, 0
	414 JumpIfEqual {431}
	415 Move X2, [X8+24]
	416 Move X0, [X8+64]
	417 Move X1, [X8+40]
	418 Move X20, [X31+80]
	419 Move X19, [X31+88]
	420 Move X22, [X31+64]
	421 Move X21, [X31+72]
	422 Move X24, [X31+48]
	423 Move X23, [X31+56]
	424 Move X26, [X31+32]
	425 Move X25, [X31+40]
	426 Move X28, [X31+16]
	427 Move X27, [X31+24]
	428 Move X29, [X31+96]
	429 Move X30, [X31+104]
	430 CallNoReturn X2
	431 Move X20, [X31+80]
	432 Move X19, [X31+88]
	433 Move X22, [X31+64]
	434 Move X21, [X31+72]
	435 Move X24, [X31+48]
	436 Move X23, [X31+56]
	437 Move X26, [X31+32]
	438 Move X25, [X31+40]
	439 Move X28, [X31+16]
	440 Move X27, [X31+24]
	441 Move X29, [X31+96]
	442 Move X30, [X31+104]
	443 Return 
	444 Call 0x1C17F20
	445 Call 0x1C17F20
	446 Call 0x1C17F20
	447 Call 0x1C17F20
	448 Call 0x1C17F20
	449 Call 0x1C17F20
	450 Move X0, X22
	451 Call 0x1C17F18
	452 Call 0x1C17F20
	453 Call 0x1C181E0
	454 Call 0x1C17F20
	455 Call 0x1C17F20
	456 Call 0x1C17F20
	457 Call 0x1C17F20
	458 Call 0x1C17F20
	459 Call 0x1C17F20
	460 Call 0x1C17F28
	461 Call 0x1C17F20
	462 Call 0x1C17F20
	463 Call 0x1C17F28
	464 Call 0x1C17F20
	465 Move X21, X0
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move X0, X21
	468 Call 0x3EB2AD0
	469 Move X22, [X0]
	470 Call 0x3EB2AE0
	471 Move X22, X31
	472 Move X21, X0
	473 Move X0, [X26]
	474 Move W8, [X0+224]
	475 Compare W8, 0
	476 JumpIfNotEqual {478}
	477 Call 0x1C17DFC
	478 Move X8, 0x42E000
	479 Move X8, [X8+2824]
	480 Move X1, [X8]
	481 Move X0, X20
	482 Call CollectionPool`2<Object, Int32>.Release, X0
	483 Compare X22, 0
	484 JumpIfNotEqual {487}
	485 Move X0, X21
	486 Call 0x1D2D690
	487 Move X0, X22
	488 Call 0x1C17F18
	489 Call 0x1991590

Method: System.Void Move(System.Int32 index, System.Int32 newIndex)

Disassembly:
	0x03CF14EC LDR X10, [X8 + 0xB0]
	0x03CF14F0 ADD X10, X10, 0x8
	0x03CF14F4 LDUR X11, [X10 - 0x8]
	0x03CF14F8 CMP X11, X1
	0x03CF14FC B.EQ 0x3CF151C
	0x03CF1500 SUBS X9, X9, 0x1
	0x03CF1504 ADD X10, X10, 0x10
	0x03CF1508 B.NE 0x3CF14F4
	0x03CF150C MOV X0, X20
	0x03CF1510 MOV W2, W31
	0x03CF1514 BL 0x1C5C788
	0x03CF1518 B 0x3CF1528
	0x03CF151C LDRSW X9, [X10]
	0x03CF1520 ADD X8, X8, X9, 0x4, LSL
	0x03CF1524 ADD X0, X8, 0x138
	0x03CF1528 LDP X8, X1, [X0]
	0x03CF152C ADRP X24, 0x402000
	0x03CF1530 LDR X24, [X24 + 0xE00]
	0x03CF1534 MOV X0, X20
	0x03CF1538 BLR X8
	0x03CF153C MOV X20, X0
	0x03CF1540 CBZ X0, 0x3CF1798
	0x03CF1544 ADRP X25, 0x402000
	0x03CF1548 ADRP X26, 0x42A000
	0x03CF154C ADRP X27, 0x403000
	0x03CF1550 ADRP X28, 0x471000
	0x03CF1554 LDR X25, [X25 + 0xE18]
	0x03CF1558 LDR X26, [X26 + 0x7C0]
	0x03CF155C LDR X27, [X27 + 0xE10]
	0x03CF1560 LDR X28, [X28 + 0xB18]
	0x03CF1564 LDR X8, [X20]
	0x03CF1568 LDR X1, [X25]
	0x03CF156C LDRH W9, [X8 + 0x12E]
	0x03CF1570 CBZ X9, 0x3CF1594
	0x03CF1574 LDR X10, [X8 + 0xB0]
	0x03CF1578 ADD X10, X10, 0x8
	0x03CF157C LDUR X11, [X10 - 0x8]
	0x03CF1580 CMP X11, X1
	0x03CF1584 B.EQ 0x3CF15A4
	0x03CF1588 SUBS X9, X9, 0x1
	0x03CF158C ADD X10, X10, 0x10
	0x03CF1590 B.NE 0x3CF157C
	0x03CF1594 MOV X0, X20
	0x03CF1598 MOV W2, W31
	0x03CF159C BL 0x1C5C788
	0x03CF15A0 B 0x3CF15B0
	0x03CF15A4 LDRSW X9, [X10]
	0x03CF15A8 ADD X8, X8, X9, 0x4, LSL
	0x03CF15AC ADD X0, X8, 0x138
	0x03CF15B0 LDP X8, X1, [X0]
	0x03CF15B4 MOV X0, X20
	0x03CF15B8 BLR X8
	0x03CF15BC TBZ X0, 0x0, 0x3CF16EC
	0x03CF15C0 LDR X8, [X20]
	0x03CF15C4 LDR X1, [X26]
	0x03CF15C8 LDRH W9, [X8 + 0x12E]
	0x03CF15CC CBZ X9, 0x3CF15F0
	0x03CF15D0 LDR X10, [X8 + 0xB0]
	0x03CF15D4 ADD X10, X10, 0x8
	0x03CF15D8 LDUR X11, [X10 - 0x8]
	0x03CF15DC CMP X11, X1
	0x03CF15E0 B.EQ 0x3CF1600
	0x03CF15E4 SUBS X9, X9, 0x1
	0x03CF15E8 ADD X10, X10, 0x10
	0x03CF15EC B.NE 0x3CF15D8
	0x03CF15F0 MOV X0, X20
	0x03CF15F4 MOV W2, W31
	0x03CF15F8 BL 0x1C5C788
	0x03CF15FC B 0x3CF160C
	0x03CF1600 LDRSW X9, [X10]
	0x03CF1604 ADD X8, X8, X9, 0x4, LSL
	0x03CF1608 ADD X0, X8, 0x138
	0x03CF160C LDP X8, X1, [X0]
	0x03CF1610 MOV X0, X20
	0x03CF1614 BLR X8
	0x03CF1618 LDR X8, [X19]
	0x03CF161C MOV W21, W0
	0x03CF1620 LDR X9, [X8 + 0x2A8]
	0x03CF1624 LDR X2, [X8 + 0x2B0]
	0x03CF1628 MOV X0, X19
	0x03CF162C MOV W1, W21
	0x03CF1630 BLR X9
	0x03CF1634 MOV W22, W0
	0x03CF1638 ADDS W31, W0, 0x1
	0x03CF163C B.NE 0x3CF1698
	0x03CF1640 LDR X0, [X19 + 0x38]
	0x03CF1644 CBZ X0, 0x3CF178C
	0x03CF1648 LDR W10, [X0 + 0x1C]
	0x03CF164C LDR X8, [X0 + 0x10]
	0x03CF1650 LDR X9, [X27]
	0x03CF1654 ADD W10, W10, 0x1
	0x03CF1658 STR W10, [X0 + 0x1C]
	0x03CF165C CBZ X8, 0x3CF1790

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x6F7000
	010 Move W8, [X22+1899]
	011 Move W19, W2
	012 Move W20, W1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x40A000
	019 Move X0, [X0+752]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1899], W8
	023 Move X8, [X21]
	024 Move X0, X21
	025 Move X9, [X8+392]
	026 Move X1, [X8+400]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Compare X0, 0
	030 JumpIfEqual {102}
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Move TEMP, X23
	035 And TEMP, TEMP, -2147483648
	036 Compare TEMP, -2147483648
	037 JumpIfEqual {102}
	038 Move X8, [X21]
	039 Move X0, X21
	040 Move X9, [X8+392]
	041 Move X1, [X8+400]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare X0, 0
	044 JumpIfEqual {111}
	045 Move X10, 0x40A000
	046 Move X8, [X0]
	047 Move X10, [X10+752]
	048 Move X22, X0
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Move X1, [X10]
	051 Compare X9, 0
	052 JumpIfEqual {59}
	053 Move X10, [X8+176]
	054 Add X10, X10, 8
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Subtract X9, X9, 1
	058 Add X10, X10, 16
	059 Move W2, 1
	060 Move X0, X22
	061 Call 0x1C5D788
	062 Move W9, [X10]
	063 Add W9, W9, 1
	064 Add X8, X8, W9
	065 Add X0, X8, 312
	066 Move X8, [X0]
	067 Move X1, [X0+8]
	068 Move X0, X22
	069 NotImplemented "Instruction BLR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W8, 1
	073 NotImplemented "Instruction CSNEG not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W22, W19
	076 Move X0, X21
	077 Move W1, W20
	078 Move W2, W22
	079 Call BaseListViewController.Swap, X0, X1, X2
	080 Add W22, W22, W25
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 NotImplemented "Instruction CSEL not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, [X21+40]
	086 Compare X8, 0
	087 JumpIfEqual {102}
	088 Move X4, [X8+24]
	089 Move X0, [X8+64]
	090 Move X3, [X8+40]
	091 Move W1, W20
	092 Move W2, W19
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X30, [X31+64]
	100 Move X25, [X31+72]
	101 CallNoReturn X4
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X24, [X31+16]
	107 Move X23, [X31+24]
	108 Move X30, [X31+64]
	109 Move X25, [X31+72]
	110 Return 
	111 Call 0x1C17F20

Method: System.Void RemoveItem(System.Int32 index)

Disassembly:
	0x03CF18BC B.LT 0x3CF18D0
	0x03CF18C0 LDR X0, [X8 + 0x10]
	0x03CF18C4 MOV W1, W31
	0x03CF18C8 MOV X3, X31
	0x03CF18CC BL 0x339FA34
	0x03CF18D0 LDR X0, [X19 + 0x48]
	0x03CF18D4 CBZ X0, 0x3CF1914
	0x03CF18D8 ADRP X8, 0x409000
	0x03CF18DC LDR X8, [X8 + 0x678]
	0x03CF18E0 LDR X1, [X8]
	0x03CF18E4 BL 0x2DAA53C
	0x03CF18E8 LDR X1, [X19 + 0x38]
	0x03CF18EC CBZ X1, 0x3CF1908
	0x03CF18F0 MOV X0, X19
	0x03CF18F4 MOV W2, W31
	0x03CF18F8 MOV X3, X20
	0x03CF18FC BL 0x3CF429C
	0x03CF1900 LDR X8, [X19 + 0x40]
	0x03CF1904 STR X8, [X19 + 0x18]
	0x03CF1908 LDP X20, X19, [X31 + 0x10]
	0x03CF190C LDR X30, [X31], #0x20
	0x03CF1910 RET
	0x03CF1914 BL 0x1C16F20
	0x03CF1918 LDR X0, [X0 + 0x38]
	0x03CF191C RET
	0x03CF1920 STP X30, X21, [X31 - 0x20]!
	0x03CF1924 STP X20, X19, [X31 + 0x10]
	0x03CF1928 ADRP X21, 0x6F6000
	0x03CF192C LDRB W8, [X21 + 0x777]
	0x03CF1930 MOV X19, X1
	0x03CF1934 MOV X20, X0
	0x03CF1938 TBNZ X8, 0x0, 0x3CF1950
	0x03CF193C ADRP X0, 0x471000
	0x03CF1940 LDR X0, [X0 + 0xB30]
	0x03CF1944 BL 0x1C16CF4
	0x03CF1948 MOVZ W8, 0x1
	0x03CF194C STRB W8, [X21 + 0x777]
	0x03CF1950 CBZ X19, 0x3CF1988
	0x03CF1954 ADRP X8, 0x471000
	0x03CF1958 LDR X8, [X8 + 0xB30]
	0x03CF195C LDR X9, [X19]
	0x03CF1960 LDR X8, [X8]
	0x03CF1964 LDRB W11, [X9 + 0x130]
	0x03CF1968 LDRB W10, [X8 + 0x130]
	0x03CF196C CMP W11, W10
	0x03CF1970 B.CC 0x3CF1988
	0x03CF1974 LDR X9, [X9 + 0xC8]
	0x03CF1978 ADD X9, X9, X10, 0x3, LSL
	0x03CF197C LDUR X9, [X9 - 0x8]
	0x03CF1980 CMP X9, X8
	0x03CF1984 B.EQ 0x3CF1994
	0x03CF1988 LDP X20, X19, [X31 + 0x10]
	0x03CF198C LDP X30, X21, [X31], #0x20
	0x03CF1990 RET
	0x03CF1994 LDR X8, [X20]
	0x03CF1998 MOV X0, X20
	0x03CF199C LDR X9, [X8 + 0x258]
	0x03CF19A0 LDR X1, [X8 + 0x260]
	0x03CF19A4 BLR X9
	0x03CF19A8 LDR X8, [X19]
	0x03CF19AC MOV X1, X0
	0x03CF19B0 MOV X0, X19
	0x03CF19B4 LDP X9, X2, [X8 + 0x188]
	0x03CF19B8 BLR X9
	0x03CF19BC MOV X0, X20
	0x03CF19C0 MOV X1, X19
	0x03CF19C4 LDP X20, X19, [X31 + 0x10]
	0x03CF19C8 LDP X30, X21, [X31], #0x20
	0x03CF19CC B 0x3CF19D0
	0x03CF19D0 STR X30, [X31 - 0x40]!
	0x03CF19D4 STP X24, X23, [X31 + 0x10]
	0x03CF19D8 STP X22, X21, [X31 + 0x20]
	0x03CF19DC STP X20, X19, [X31 + 0x30]
	0x03CF19E0 ADRP X20, 0x6F6000
	0x03CF19E4 ADRP X22, 0x471000
	0x03CF19E8 LDRB W8, [X20 + 0x77A]
	0x03CF19EC LDR X22, [X22 + 0xB38]
	0x03CF19F0 MOV X21, X1
	0x03CF19F4 MOV X19, X0
	0x03CF19F8 TBNZ X8, 0x0, 0x3CF1A70
	0x03CF19FC ADRP X0, 0x471000
	0x03CF1A00 LDR X0, [X0 + 0xB40]
	0x03CF1A04 BL 0x1C16CF4
	0x03CF1A08 ADRP X0, 0x471000
	0x03CF1A0C LDR X0, [X0 + 0xB48]
	0x03CF1A10 BL 0x1C16CF4
	0x03CF1A14 ADRP X0, 0x403000
	0x03CF1A18 LDR X0, [X0 + 0xE70]
	0x03CF1A1C BL 0x1C16CF4
	0x03CF1A20 ADRP X0, 0x471000
	0x03CF1A24 LDR X0, [X0 + 0xB50]
	0x03CF1A28 BL 0x1C16CF4
	0x03CF1A2C ADRP X0, 0x471000
	0x03CF1A30 LDR X0, [X0 + 0xB58]
	0x03CF1A34 BL 0x1C16CF4
	0x03CF1A38 ADRP X0, 0x42A000
	0x03CF1A3C LDR X0, [X0 + 0x680]
	0x03CF1A40 BL 0x1C16CF4
	0x03CF1A44 ADRP X0, 0x42C000
	0x03CF1A48 LDR X0, [X0 + 0x8C0]
	0x03CF1A4C BL 0x1C16CF4
	0x03CF1A50 ADRP X0, 0x471000
	0x03CF1A54 LDR X0, [X0 + 0xB60]
	0x03CF1A58 BL 0x1C16CF4
	0x03CF1A5C ADRP X0, 0x471000
	0x03CF1A60 LDR X0, [X0 + 0xB38]
	0x03CF1A64 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x6F7000
	008 Move X21, 0x42D000
	009 Move W8, [X22+1900]
	010 Move X21, [X21+2272]
	011 Move W20, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x472000
	018 Move X0, [X0+2784]
	019 Call 0x1C17CF4
	020 Move X0, 0x42D000
	021 Move X0, [X0+2272]
	022 Call 0x1C17CF4
	023 Move X0, 0x404000
	024 Move X0, [X0+3600]
	025 Call 0x1C17CF4
	026 Move X0, 0x472000
	027 Move X0, [X0+2792]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1900], W8
	031 Move X0, [X21]
	032 Move [X31+24], X31
	033 Move [X31], X31
	034 Move [X31+8], X31
	035 Move X21, 0x472000
	036 Move W8, [X0+224]
	037 Move X21, [X21+2784]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X1, [X21]
	042 Move X21, 0x472000
	043 Move X21, [X21+2792]
	044 Add X0, X31, 24
	045 Call CollectionPool`2<Object, Int32>.Get, X0
	046 Move X8, X1
	047 Move X1, [X31+24]
	048 Move [X31], X0
	049 Move [X31+8], X8
	050 Compare X1, 0
	051 JumpIfEqual {90}
	052 Move X9, 0x404000
	053 Move X9, [X9+3600]
	054 Move W10, [X1+28]
	055 Move X8, [X1+16]
	056 Move X9, [X9]
	057 Add W10, W10, 1
	058 Move [X1+28], W10
	059 Compare X8, 0
	060 JumpIfEqual {91}
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Move W11, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add W9, W10, 1
	065 Add X8, X8, X10
	066 Move [X1+24], W9
	067 Move [X8+32], W20
	068 Move X8, [X9+32]
	069 Move X8, [X8+192]
	070 Move X2, [X8+112]
	071 Move X0, X1
	072 Move W1, W20
	073 Call List`1<Int32>.AddWithResize, X0, X1
	074 Move X1, [X31+24]
	075 Move X8, [X19]
	076 Move X9, [X8+728]
	077 Move X2, [X8+736]
	078 Move X0, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X1, [X21]
	081 Add X0, X31, 0
	082 Call 0x24A7D20, X0
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X30, [X31+16]
	088 Add X31, X31, 64
	089 Return 
	090 Call 0x1C17F20
	091 Call 0x1C17F20
	092 Move X20, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, X20
	095 Call 0x3EB2AD0
	096 Move X19, [X0]
	097 Call 0x3EB2AE0
	098 Move X1, [X21]
	099 Add X0, X31, 0
	100 Call 0x24A7D20, X0
	101 Compare X19, 0
	102 JumpIfEqual {83}
	103 Move X0, X19
	104 Call 0x1C17F18
	105 Move X19, X31
	106 Move X20, X0
	107 Move X1, [X21]
	108 Add X0, X31, 0
	109 Call 0x24A7D20, X0
	110 Compare X19, 0
	111 JumpIfNotEqual {114}
	112 Move X0, X20
	113 Call 0x1D2D690
	114 Move X0, X19
	115 Call 0x1C17F18
	116 Call 0x1991590

Method: System.Void RemoveItems(System.Collections.Generic.List`1<System.Int32> indices)

Disassembly:
	0x03CF1A68 MOVZ W8, 0x1
	0x03CF1A6C STRB W8, [X20 + 0x77A]
	0x03CF1A70 LDR X0, [X22]
	0x03CF1A74 BL 0x1C16F10
	0x03CF1A78 MOV X1, X31
	0x03CF1A7C MOV X20, X0
	0x03CF1A80 BL 0x33BDD8C
	0x03CF1A84 CBZ X20, 0x3CF1C24
	0x03CF1A88 ADRP X8, 0x471000
	0x03CF1A8C LDR X8, [X8 + 0xB48]
	0x03CF1A90 STP X19, X21, [X20 + 0x10]
	0x03CF1A94 ADRP X22, 0x471000
	0x03CF1A98 LDR X0, [X8]
	0x03CF1A9C LDR X22, [X22 + 0xB50]
	0x03CF1AA0 BL 0x1C16F10
	0x03CF1AA4 LDR X2, [X22]
	0x03CF1AA8 MOV X1, X19
	0x03CF1AAC MOV X3, X31
	0x03CF1AB0 MOV X22, X0
	0x03CF1AB4 BL 0x2A6B948
	0x03CF1AB8 CBZ X21, 0x3CF1C24
	0x03CF1ABC ADRP X23, 0x471000
	0x03CF1AC0 ADRP X24, 0x471000
	0x03CF1AC4 LDR X23, [X23 + 0xB40]
	0x03CF1AC8 LDR X24, [X24 + 0xB58]
	0x03CF1ACC MOV X0, X21
	0x03CF1AD0 MOV X1, X22
	0x03CF1AD4 BL 0x3CF21BC
	0x03CF1AD8 LDR X0, [X23]
	0x03CF1ADC LDR X21, [X20 + 0x18]
	0x03CF1AE0 BL 0x1C16F10
	0x03CF1AE4 LDR X2, [X24]
	0x03CF1AE8 MOV X1, X19
	0x03CF1AEC MOV X3, X31
	0x03CF1AF0 MOV X22, X0
	0x03CF1AF4 BL 0x2A6B948
	0x03CF1AF8 CBZ X21, 0x3CF1C24
	0x03CF1AFC MOV X0, X21
	0x03CF1B00 MOV X1, X22
	0x03CF1B04 BL 0x3CF226C
	0x03CF1B08 MOV X0, X19
	0x03CF1B0C BL 0x3CF1324
	0x03CF1B10 CBZ X0, 0x3CF1C24
	0x03CF1B14 LDRB W8, [X0 + 0x4AC]
	0x03CF1B18 CBZ W8, 0x3CF1BE0
	0x03CF1B1C MOV X0, X19
	0x03CF1B20 BL 0x3CF1324
	0x03CF1B24 CBZ X0, 0x3CF1C24
	0x03CF1B28 LDR X8, [X20 + 0x18]
	0x03CF1B2C CBZ X8, 0x3CF1C24
	0x03CF1B30 LDR X0, [X0 + 0x4B0]
	0x03CF1B34 CBZ X0, 0x3CF1C24
	0x03CF1B38 ADRP X9, 0x42C000
	0x03CF1B3C LDR X9, [X9 + 0x8C0]
	0x03CF1B40 LDR W1, [X8 + 0x24]
	0x03CF1B44 LDR X2, [X9]
	0x03CF1B48 BL 0x2FDDF0C
	0x03CF1B4C MOV X0, X19
	0x03CF1B50 BL 0x3CF1324
	0x03CF1B54 CBZ X0, 0x3CF1C24
	0x03CF1B58 ADRP X19, 0x403000
	0x03CF1B5C ADRP X21, 0x471000
	0x03CF1B60 LDR X19, [X19 + 0xE70]
	0x03CF1B64 LDR X21, [X21 + 0xB60]
	0x03CF1B68 MOV X1, X31
	0x03CF1B6C BL 0x3DF7724
	0x03CF1B70 LDR X8, [X19]
	0x03CF1B74 MOV X19, X0
	0x03CF1B78 MOV X0, X8
	0x03CF1B7C BL 0x1C16F10
	0x03CF1B80 LDR X2, [X21]
	0x03CF1B84 MOV X1, X20
	0x03CF1B88 MOV X3, X31
	0x03CF1B8C MOV X21, X0
	0x03CF1B90 BL 0x3314368
	0x03CF1B94 CBZ X19, 0x3CF1C24
	0x03CF1B98 ADRP X10, 0x42A000
	0x03CF1B9C LDR X8, [X19]
	0x03CF1BA0 LDR X10, [X10 + 0x680]
	0x03CF1BA4 LDRH W9, [X8 + 0x12E]
	0x03CF1BA8 LDR X1, [X10]
	0x03CF1BAC CBZ X9, 0x3CF1BD0
	0x03CF1BB0 LDR X10, [X8 + 0xB0]
	0x03CF1BB4 ADD X10, X10, 0x8
	0x03CF1BB8 LDUR X11, [X10 - 0x8]
	0x03CF1BBC CMP X11, X1
	0x03CF1BC0 B.EQ 0x3CF1BF4
	0x03CF1BC4 SUBS X9, X9, 0x1
	0x03CF1BC8 ADD X10, X10, 0x10
	0x03CF1BCC B.NE 0x3CF1BB8
	0x03CF1BD0 MOVZ W2, 0x1
	0x03CF1BD4 MOV X0, X19
	0x03CF1BD8 BL 0x1C5C788
	0x03CF1BDC B 0x3CF1C04
	0x03CF1BE0 LDP X20, X19, [X31 + 0x30]
	0x03CF1BE4 LDP X22, X21, [X31 + 0x20]
	0x03CF1BE8 LDP X24, X23, [X31 + 0x10]
	0x03CF1BEC LDR X30, [X31], #0x40
	0x03CF1BF0 RET
	0x03CF1BF4 LDR W9, [X10]
	0x03CF1BF8 ADD W9, W9, 0x1
	0x03CF1BFC ADD X8, X8, W9, 0x4, SXTW
	0x03CF1C00 ADD X0, X8, 0x138
	0x03CF1C04 LDP X3, X2, [X0]
	0x03CF1C08 MOV X0, X19
	0x03CF1C0C MOV X1, X21
	0x03CF1C10 LDP X20, X19, [X31 + 0x30]
	0x03CF1C14 LDP X22, X21, [X31 + 0x20]
	0x03CF1C18 LDP X24, X23, [X31 + 0x10]
	0x03CF1C1C LDR X30, [X31], #0x40
	0x03CF1C20 BR X3
	0x03CF1C24 BL 0x1C16F20
	0x03CF1C28 STR X30, [X31 - 0x30]!
	0x03CF1C2C STP X22, X21, [X31 + 0x10]
	0x03CF1C30 STP X20, X19, [X31 + 0x20]
	0x03CF1C34 ADRP X22, 0x6F6000
	0x03CF1C38 LDRB W8, [X22 + 0x778]
	0x03CF1C3C MOV W19, W2
	0x03CF1C40 MOV X20, X1
	0x03CF1C44 MOV X21, X0
	0x03CF1C48 TBNZ X8, 0x0, 0x3CF1C60
	0x03CF1C4C ADRP X0, 0x471000
	0x03CF1C50 LDR X0, [X0 + 0xB30]
	0x03CF1C54 BL 0x1C16CF4
	0x03CF1C58 MOVZ W8, 0x1
	0x03CF1C5C STRB W8, [X22 + 0x778]
	0x03CF1C60 CBZ X20, 0x3CF1D1C
	0x03CF1C64 ADRP X8, 0x471000
	0x03CF1C68 LDR X8, [X8 + 0xB30]
	0x03CF1C6C LDR X9, [X20]
	0x03CF1C70 LDR X8, [X8]
	0x03CF1C74 LDRB W11, [X9 + 0x130]
	0x03CF1C78 LDRB W10, [X8 + 0x130]
	0x03CF1C7C CMP W11, W10
	0x03CF1C80 B.CC 0x3CF1D1C
	0x03CF1C84 LDR X9, [X9 + 0xC8]
	0x03CF1C88 ADD X9, X9, X10, 0x3, LSL
	0x03CF1C8C LDUR X9, [X9 - 0x8]
	0x03CF1C90 CMP X9, X8
	0x03CF1C94 B.NE 0x3CF1D1C
	0x03CF1C98 LDR X8, [X21]
	0x03CF1C9C MOV X0, X21
	0x03CF1CA0 MOV W1, W19
	0x03CF1CA4 LDP X9, X2, [X8 + 0x1F8]
	0x03CF1CA8 BLR X9
	0x03CF1CAC MOV W1, W0
	0x03CF1CB0 MOV X0, X21
	0x03CF1CB4 BL 0x3CF41C8
	0x03CF1CB8 LDR X8, [X20 + 0x58]
	0x03CF1CBC CBZ X8, 0x3CF1CCC
	0x03CF1CC0 STR W0, [X20 + 0x80]
	0x03CF1CC4 MOV X0, X20
	0x03CF1CC8 BL 0x3CF8490
	0x03CF1CCC MOV X0, X21
	0x03CF1CD0 MOV W1, W19
	0x03CF1CD4 BL 0x3CF1D70
	0x03CF1CD8 LDR X8, [X20 + 0x48]
	0x03CF1CDC CBZ X8, 0x3CF1CF8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x6F7000
	010 Move W8, [X21+1901]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x40A000
	018 Move X0, [X0+760]
	019 Call 0x1C17CF4
	020 Move X0, 0x42B000
	021 Move X0, [X0+1936]
	022 Call 0x1C17CF4
	023 Move X0, 0x404000
	024 Move X0, [X0+3624]
	025 Call 0x1C17CF4
	026 Move X0, 0x42D000
	027 Move X0, [X0+3896]
	028 Call 0x1C17CF4
	029 Move X0, 0x403000
	030 Move X0, [X0+3824]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X21+1901], W8
	034 Move X0, X19
	035 Call BaseListViewController.EnsureItemSourceCanBeResized, X0
	036 Compare X20, 0
	037 JumpIfEqual {169}
	038 Move X8, 0x42B000
	039 Move X8, [X8+1936]
	040 Move X0, X20
	041 Move X1, [X8]
	042 Call List`1<Int32>.Sort, X0
	043 Move X8, [X19+64]
	044 Compare X8, 0
	045 JumpIfEqual {51}
	046 Move X9, [X8+24]
	047 Move X0, [X8+64]
	048 Move X2, [X8+40]
	049 Move X1, X20
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X8, [X19]
	052 Move X0, X19
	053 Move X9, [X8+392]
	054 Move X1, [X8+400]
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Compare X0, 0
	057 JumpIfEqual {178}
	058 Move X24, 0x40A000
	059 Move X8, [X0]
	060 Move X24, [X24+760]
	061 Move X21, X0
	062 NotImplemented "Instruction LDRH not yet implemented."
	063 Move X1, [X24]
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move W2, 6
	073 Move X0, X21
	074 Call 0x1C5D788
	075 Move W9, [X10]
	076 Add W9, W9, 6
	077 Add X8, X8, W9
	078 Add X0, X8, 312
	079 Move X8, [X0]
	080 Move X1, [X0+8]
	081 Move X0, X21
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {113}
	087 Move X8, [X19]
	088 Move X0, X19
	089 Move X9, [X8+392]
	090 Move X1, [X8+400]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Compare X0, 0
	093 JumpIfEqual {105}
	094 Move X9, 0x403000
	095 Move X9, [X9+3824]
	096 Move X8, [X0]
	097 Move X1, [X9]
	098 Move W10, [X8+304]
	099 Move W9, [X1+304]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X8+200]
	102 Add X8, X8, X9
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X1, X20
	106 Call BaseListViewController.RemoveFromArray, X0, X1
	107 Move X8, [X19]
	108 Move X1, X0
	109 Move X0, X19
	110 Move X9, [X8+408]
	111 Move X2, [X8+416]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 Move W8, [X20+24]
	114 Subtract W21, W8, 1
	115 Move X25, 0x42D000
	116 Move X25, [X25+3896]
	117 Move X8, [X19]
	118 Move X0, X19
	119 Move X9, [X8+392]
	120 Move X1, [X8+400]
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X2, [X25]
	123 Move X22, X0
	124 Move X0, X20
	125 Move W1, W21
	126 Call List`1<Int32>.get_Item, X0, X1
	127 Compare X22, 0
	128 JumpIfEqual {178}
	129 Move X8, [X22]
	130 Move X1, [X24]
	131 Move W23, W0
	132 NotImplemented "Instruction LDRH not yet implemented."
	133 Compare X9, 0
	134 JumpIfEqual {141}
	135 Move X10, [X8+176]
	136 Add X10, X10, 8
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Subtract X9, X9, 1
	140 Add X10, X10, 16
	141 Move W2, 10
	142 Move X0, X22
	143 Call 0x1C5D788
	144 Move W9, [X10]
	145 Add W9, W9, 10
	146 Add X8, X8, W9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X2, [X0+8]
	150 Move X0, X22
	151 Move W1, W23
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Subtract W21, W21, 1
	154 Move X8, [X19+48]
	155 Compare X8, 0
	156 JumpIfEqual {169}
	157 Move X2, [X8+24]
	158 Move X0, [X8+64]
	159 Move X1, [X8+40]
	160 Move X20, [X31+48]
	161 Move X19, [X31+56]
	162 Move X22, [X31+32]
	163 Move X21, [X31+40]
	164 Move X24, [X31+16]
	165 Move X23, [X31+24]
	166 Move X30, [X31+64]
	167 Move X25, [X31+72]
	168 CallNoReturn X2
	169 Move X20, [X31+48]
	170 Move X19, [X31+56]
	171 Move X22, [X31+32]
	172 Move X21, [X31+40]
	173 Move X24, [X31+16]
	174 Move X23, [X31+24]
	175 Move X30, [X31+64]
	176 Move X25, [X31+72]
	177 Return 
	178 Call 0x1C17F20
	179 Call 0x1C181E0

Method: System.Void RemoveItems(System.Int32 itemCount)

Disassembly:
	0x03CF1EAC BL 0x30872C4
	0x03CF1EB0 LDUR V0, [X31 + 0x8]
	0x03CF1EB4 LDR X8, [X31 + 0x18]
	0x03CF1EB8 ADD X0, X31, 0x20
	0x03CF1EBC MOV X1, X31
	0x03CF1EC0 STR V0, [X31 + 0x2]
	0x03CF1EC4 STR X8, [X31 + 0x30]
	0x03CF1EC8 BL 0x3D8797C
	0x03CF1ECC B 0x3CF1ED4
	0x03CF1ED0 MOV W0, W31
	0x03CF1ED4 LDP X20, X19, [X31 + 0x50]
	0x03CF1ED8 LDP X30, X21, [X31 + 0x40]
	0x03CF1EDC AND W0, W0, 0x1
	0x03CF1EE0 ADD X31, X31, 0x60
	0x03CF1EE4 RET
	0x03CF1EE8 BL 0x1C16F20
	0x03CF1EEC LDR X0, [X0 + 0x48]
	0x03CF1EF0 CBZ X0, 0x3CF1F00
	0x03CF1EF4 AND W1, W1, 0x1
	0x03CF1EF8 MOV X2, X31
	0x03CF1EFC B 0x3DF2050
	0x03CF1F00 RET
	0x03CF1F04 STP X30, X21, [X31 - 0x20]!
	0x03CF1F08 STP X20, X19, [X31 + 0x10]
	0x03CF1F0C ADRP X21, 0x6F6000
	0x03CF1F10 LDRB W8, [X21 + 0x779]
	0x03CF1F14 MOV X19, X1
	0x03CF1F18 MOV X20, X0
	0x03CF1F1C TBNZ X8, 0x0, 0x3CF1F64
	0x03CF1F20 ADRP X0, 0x471000
	0x03CF1F24 LDR X0, [X0 + 0xB40]
	0x03CF1F28 BL 0x1C16CF4
	0x03CF1F2C ADRP X0, 0x471000
	0x03CF1F30 LDR X0, [X0 + 0xB48]
	0x03CF1F34 BL 0x1C16CF4
	0x03CF1F38 ADRP X0, 0x471000
	0x03CF1F3C LDR X0, [X0 + 0xB50]
	0x03CF1F40 BL 0x1C16CF4
	0x03CF1F44 ADRP X0, 0x471000
	0x03CF1F48 LDR X0, [X0 + 0xB58]
	0x03CF1F4C BL 0x1C16CF4
	0x03CF1F50 ADRP X0, 0x471000
	0x03CF1F54 LDR X0, [X0 + 0xB30]
	0x03CF1F58 BL 0x1C16CF4
	0x03CF1F5C MOVZ W8, 0x1
	0x03CF1F60 STRB W8, [X21 + 0x779]
	0x03CF1F64 CBZ X19, 0x3CF202C
	0x03CF1F68 ADRP X8, 0x471000
	0x03CF1F6C LDR X8, [X8 + 0xB30]
	0x03CF1F70 LDR X9, [X19]
	0x03CF1F74 LDR X8, [X8]
	0x03CF1F78 LDRB W11, [X9 + 0x130]
	0x03CF1F7C LDRB W10, [X8 + 0x130]
	0x03CF1F80 CMP W11, W10
	0x03CF1F84 B.CC 0x3CF200C
	0x03CF1F88 LDR X9, [X9 + 0xC8]
	0x03CF1F8C ADD X9, X9, X10, 0x3, LSL
	0x03CF1F90 LDUR X9, [X9 - 0x8]
	0x03CF1F94 CMP X9, X8
	0x03CF1F98 B.NE 0x3CF200C
	0x03CF1F9C ADRP X8, 0x471000
	0x03CF1FA0 LDR X8, [X8 + 0xB48]
	0x03CF1FA4 LDR X0, [X8]
	0x03CF1FA8 BL 0x1C16F10
	0x03CF1FAC ADRP X8, 0x471000
	0x03CF1FB0 LDR X8, [X8 + 0xB50]
	0x03CF1FB4 MOV X1, X20
	0x03CF1FB8 MOV X3, X31
	0x03CF1FBC MOV X21, X0
	0x03CF1FC0 LDR X2, [X8]
	0x03CF1FC4 BL 0x2A6B948
	0x03CF1FC8 MOV X0, X19
	0x03CF1FCC MOV X1, X21
	0x03CF1FD0 BL 0x3CF2030
	0x03CF1FD4 ADRP X8, 0x471000
	0x03CF1FD8 LDR X8, [X8 + 0xB40]
	0x03CF1FDC LDR X0, [X8]
	0x03CF1FE0 BL 0x1C16F10
	0x03CF1FE4 ADRP X8, 0x471000
	0x03CF1FE8 LDR X8, [X8 + 0xB58]
	0x03CF1FEC MOV X1, X20
	0x03CF1FF0 MOV X3, X31
	0x03CF1FF4 MOV X21, X0
	0x03CF1FF8 LDR X2, [X8]
	0x03CF1FFC BL 0x2A6B948
	0x03CF2000 MOV X0, X19
	0x03CF2004 MOV X1, X21
	0x03CF2008 BL 0x3CF20E0
	0x03CF200C LDR X8, [X20]
	0x03CF2010 LDR X1, [X19 + 0x10]
	0x03CF2014 MOV X0, X20
	0x03CF2018 LDP X20, X19, [X31 + 0x10]
	0x03CF201C LDR X3, [X8 + 0x288]
	0x03CF2020 LDR X2, [X8 + 0x290]
	0x03CF2024 LDP X30, X21, [X31], #0x20
	0x03CF2028 BR X3
	0x03CF202C BL 0x1C16F20
	0x03CF2030 STR X30, [X31 - 0x40]!
	0x03CF2034 STP X24, X23, [X31 + 0x10]
	0x03CF2038 STP X22, X21, [X31 + 0x20]
	0x03CF203C STP X20, X19, [X31 + 0x30]
	0x03CF2040 ADRP X21, 0x6F5000
	0x03CF2044 LDRB W8, [X21 + 0x7BA]
	0x03CF2048 MOV X19, X1
	0x03CF204C MOV X20, X0
	0x03CF2050 TBNZ X8, 0x0, 0x3CF2068
	0x03CF2054 ADRP X0, 0x470000
	0x03CF2058 LDR X0, [X0 + 0xB48]
	0x03CF205C BL 0x1C16CF4
	0x03CF2060 MOVZ W8, 0x1
	0x03CF2064 STRB W8, [X21 + 0x7BA]
	0x03CF2068 ADRP X24, 0x470000
	0x03CF206C LDR X21, [X20 + 0x70]!
	0x03CF2070 LDR X24, [X24 + 0xB48]
	0x03CF2074 MOV X0, X21
	0x03CF2078 MOV X1, X19
	0x03CF207C MOV X2, X31
	0x03CF2080 BL 0x33C0FDC
	0x03CF2084 CBZ X0, 0x3CF20A4
	0x03CF2088 LDR X23, [X24]
	0x03CF208C MOV X22, X0
	0x03CF2090 MOV X1, X23
	0x03CF2094 BL 0x1C16E00
	0x03CF2098 MOV X1, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x6F7000
	010 Move W8, [X19+1902]
	011 Move W22, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x42D000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move X0, 0x42E000
	021 Move X0, [X0+2824]
	022 Call 0x1C17CF4
	023 Move X0, 0x42D000
	024 Move X0, [X0+2272]
	025 Call 0x1C17CF4
	026 Move X0, 0x404000
	027 Move X0, [X0+3600]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+1902], W8
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X20]
	033 Move X24, 0x42D000
	034 Move X19, 0x42D000
	035 Move X0, X20
	036 Move X9, [X8+456]
	037 Move X1, [X8+464]
	038 Move X24, [X24+2272]
	039 Move X19, [X19+2264]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, [X24]
	042 Move W21, W0
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {48}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X0, [X19]
	049 Move X23, 0x42E000
	050 Move X23, [X23+2824]
	051 Call CollectionPool`2<Object, Int32>.Get
	052 Subtract W8, W21, W22
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X19, X0
	055 Move X25, 0x404000
	056 Move X25, [X25+3600]
	057 Subtract W22, W31, W22
	058 Compare X19, 0
	059 JumpIfEqual {107}
	060 Move W10, [X19+28]
	061 Move X8, [X19+16]
	062 Move X9, [X25]
	063 Add W10, W10, 1
	064 Move [X19+28], W10
	065 Compare X8, 0
	066 JumpIfEqual {108}
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Move W11, [X8+24]
	069 Add W1, W21, W22
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add W9, W10, 1
	072 Add X8, X8, X10
	073 Move [X19+24], W9
	074 Move [X8+32], W1
	075 Move X8, [X9+32]
	076 Move X8, [X8+192]
	077 Move X2, [X8+112]
	078 Move X0, X19
	079 Call List`1<Int32>.AddWithResize, X0, X1
	080 Add W22, W22, 1
	081 Move X8, [X20]
	082 Move X9, [X8+728]
	083 Move X2, [X8+736]
	084 Move X0, X20
	085 Move X1, X19
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X20, X31
	088 Move X0, [X24]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X1, [X23]
	094 Move X0, X19
	095 Call CollectionPool`2<Object, Int32>.Release, X0
	096 Compare X20, 0
	097 JumpIfNotEqual {109}
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X30, [X31+64]
	105 Move X25, [X31+72]
	106 Return 
	107 Call 0x1C17F20
	108 Call 0x1C17F20
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Move X21, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, X21
	114 Call 0x3EB2AD0
	115 Move X20, [X0]
	116 Call 0x3EB2AE0
	117 Move X20, X31
	118 Move X21, X0
	119 Move X0, [X24]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X1, [X23]
	125 Move X0, X19
	126 Call CollectionPool`2<Object, Int32>.Release, X0
	127 Compare X20, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X21
	130 Call 0x1D2D690
	131 Move X0, X20
	132 Call 0x1C17F18
	133 Call 0x1991590

Method: System.Void ClearItems()

Disassembly:
	0x03CF209C CBNZ X0, 0x3CF20A8
	0x03CF20A0 B 0x3CF20D4
	0x03CF20A4 MOV X1, X31
	0x03CF20A8 MOV X0, X20
	0x03CF20AC MOV X2, X21
	0x03CF20B0 BL 0x1C24138
	0x03CF20B4 CMP X21, X0
	0x03CF20B8 MOV X21, X0
	0x03CF20BC B.NE 0x3CF2074
	0x03CF20C0 LDP X20, X19, [X31 + 0x30]
	0x03CF20C4 LDP X22, X21, [X31 + 0x20]
	0x03CF20C8 LDP X24, X23, [X31 + 0x10]
	0x03CF20CC LDR X30, [X31], #0x40
	0x03CF20D0 RET
	0x03CF20D4 MOV X0, X22
	0x03CF20D8 MOV X1, X23
	0x03CF20DC BL 0x1C171E0
	0x03CF20E0 STR X30, [X31 - 0x40]!
	0x03CF20E4 STP X24, X23, [X31 + 0x10]
	0x03CF20E8 STP X22, X21, [X31 + 0x20]
	0x03CF20EC STP X20, X19, [X31 + 0x30]
	0x03CF20F0 ADRP X21, 0x6F5000
	0x03CF20F4 LDRB W8, [X21 + 0x7BC]
	0x03CF20F8 MOV X19, X1
	0x03CF20FC MOV X20, X0
	0x03CF2100 TBNZ X8, 0x0, 0x3CF2118
	0x03CF2104 ADRP X0, 0x470000
	0x03CF2108 LDR X0, [X0 + 0xB40]
	0x03CF210C BL 0x1C16CF4
	0x03CF2110 MOVZ W8, 0x1
	0x03CF2114 STRB W8, [X21 + 0x7BC]
	0x03CF2118 ADRP X24, 0x470000
	0x03CF211C LDR X21, [X20 + 0x78]!
	0x03CF2120 LDR X24, [X24 + 0xB40]
	0x03CF2124 MOV X0, X21
	0x03CF2128 MOV X1, X19
	0x03CF212C MOV X2, X31
	0x03CF2130 BL 0x33C0FDC
	0x03CF2134 CBZ X0, 0x3CF2154
	0x03CF2138 LDR X23, [X24]
	0x03CF213C MOV X22, X0
	0x03CF2140 MOV X1, X23
	0x03CF2144 BL 0x1C16E00
	0x03CF2148 MOV X1, X0
	0x03CF214C CBNZ X0, 0x3CF2158
	0x03CF2150 B 0x3CF2184
	0x03CF2154 MOV X1, X31
	0x03CF2158 MOV X0, X20
	0x03CF215C MOV X2, X21
	0x03CF2160 BL 0x1C24138
	0x03CF2164 CMP X21, X0
	0x03CF2168 MOV X21, X0
	0x03CF216C B.NE 0x3CF2124
	0x03CF2170 LDP X20, X19, [X31 + 0x30]
	0x03CF2174 LDP X22, X21, [X31 + 0x20]
	0x03CF2178 LDP X24, X23, [X31 + 0x10]
	0x03CF217C LDR X30, [X31], #0x40
	0x03CF2180 RET
	0x03CF2184 MOV X0, X22
	0x03CF2188 MOV X1, X23
	0x03CF218C BL 0x1C171E0
	0x03CF2190 STR X30, [X31 - 0x10]!
	0x03CF2194 CBZ X1, 0x3CF21B0
	0x03CF2198 LDR X8, [X0]
	0x03CF219C LDR X1, [X1 + 0x10]
	0x03CF21A0 LDR X3, [X8 + 0x288]
	0x03CF21A4 LDR X2, [X8 + 0x290]
	0x03CF21A8 LDR X30, [X31], #0x10
	0x03CF21AC BR X3
	0x03CF21B0 BL 0x1C16F20
	0x03CF21B4 MOV X1, X31
	0x03CF21B8 B 0x33BDD8C
	0x03CF21BC STR X30, [X31 - 0x40]!
	0x03CF21C0 STP X24, X23, [X31 + 0x10]
	0x03CF21C4 STP X22, X21, [X31 + 0x20]
	0x03CF21C8 STP X20, X19, [X31 + 0x30]
	0x03CF21CC ADRP X21, 0x6F5000
	0x03CF21D0 LDRB W8, [X21 + 0x7B9]
	0x03CF21D4 MOV X19, X1
	0x03CF21D8 MOV X20, X0
	0x03CF21DC TBNZ X8, 0x0, 0x3CF21F4
	0x03CF21E0 ADRP X0, 0x470000
	0x03CF21E4 LDR X0, [X0 + 0xB48]
	0x03CF21E8 BL 0x1C16CF4
	0x03CF21EC MOVZ W8, 0x1
	0x03CF21F0 STRB W8, [X21 + 0x7B9]
	0x03CF21F4 ADRP X24, 0x470000
	0x03CF21F8 LDR X21, [X20 + 0x70]!
	0x03CF21FC LDR X24, [X24 + 0xB48]
	0x03CF2200 MOV X0, X21
	0x03CF2204 MOV X1, X19
	0x03CF2208 MOV X2, X31
	0x03CF220C BL 0x33C0DE4
	0x03CF2210 CBZ X0, 0x3CF2230
	0x03CF2214 LDR X23, [X24]
	0x03CF2218 MOV X22, X0
	0x03CF221C MOV X1, X23
	0x03CF2220 BL 0x1C16E00
	0x03CF2224 MOV X1, X0
	0x03CF2228 CBNZ X0, 0x3CF2234
	0x03CF222C B 0x3CF2260
	0x03CF2230 MOV X1, X31
	0x03CF2234 MOV X0, X20
	0x03CF2238 MOV X2, X21
	0x03CF223C BL 0x1C24138
	0x03CF2240 CMP X21, X0
	0x03CF2244 MOV X21, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x6F6000
	006 Move W8, [X20+1903]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x409000
	013 Move X0, [X0+752]
	014 Call 0x1C17CF4
	015 Move X0, 0x409000
	016 Move X0, [X0+760]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+1903], W8
	020 Move X8, [X19]
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X1, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Compare X0, 0
	026 JumpIfEqual {117}
	027 Move X0, X19
	028 Call BaseListViewController.EnsureItemSourceCanBeResized, X0
	029 Move X8, [X19]
	030 Move X0, X19
	031 Move X9, [X8+392]
	032 Move X1, [X8+400]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Compare X0, 0
	035 JumpIfEqual {122}
	036 Move X10, 0x409000
	037 Move X8, [X0]
	038 Move X10, [X10+752]
	039 Move X20, X0
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move W2, 1
	051 Move X0, X20
	052 Call 0x1C5D788
	053 Move W9, [X10]
	054 Add W9, W9, 1
	055 Add X8, X8, W9
	056 Add X0, X8, 312
	057 Move X8, [X0]
	058 Move X1, [X0+8]
	059 Move X0, X20
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Subtract W1, W0, 1
	062 Move W0, W31
	063 Move X2, X31
	064 Call Enumerable.Range, X0, X1
	065 Move X8, [X19]
	066 Move X20, X0
	067 Move X0, X19
	068 Move X9, [X8+392]
	069 Move X1, [X8+400]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare X0, 0
	072 JumpIfEqual {122}
	073 Move X10, 0x409000
	074 Move X8, [X0]
	075 Move X10, [X10+760]
	076 Move X21, X0
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Move X1, [X10]
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move W2, 4
	088 Move X0, X21
	089 Call 0x1C5D788
	090 Move W9, [X10]
	091 Add W9, W9, 4
	092 Add X8, X8, W9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X0, X21
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X19+64]
	099 Compare X8, 0
	100 JumpIfEqual {106}
	101 Move X9, [X8+24]
	102 Move X0, [X8+64]
	103 Move X2, [X8+40]
	104 Move X1, X20
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X8, [X19+48]
	107 Compare X8, 0
	108 JumpIfEqual {117}
	109 Move X2, [X8+24]
	110 Move X0, [X8+64]
	111 Move X1, [X8+40]
	112 Move X20, [X31+16]
	113 Move X19, [X31+24]
	114 Move X30, [X31+32]
	115 Move X21, [X31+40]
	116 CallNoReturn X2
	117 Move X20, [X31+16]
	118 Move X19, [X31+24]
	119 Move X30, [X31+32]
	120 Move X21, [X31+40]
	121 Return 
	122 Call 0x1C17F20

Method: System.Void RaiseOnSizeChanged()

Disassembly:
	0x03CF14D0 ADRP X10, 0x42A000
	0x03CF14D4 LDR X8, [X0]
	0x03CF14D8 LDR X10, [X10 + 0x7B8]
	0x03CF14DC MOV X20, X0
	0x03CF14E0 LDRH W9, [X8 + 0x12E]
	0x03CF14E4 LDR X1, [X10]
	0x03CF14E8 CBZ X9, 0x3CF150C

ISIL:
	001 Move X8, [X0+48]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X2, [X8+24]
	005 Move X0, [X8+64]
	006 Move X1, [X8+40]
	007 CallNoReturn X2
	008 Return 

Method: System.Void RaiseItemsAdded(System.Collections.Generic.IEnumerable`1<System.Int32> indices)

Disassembly:
	0x03CF14B4 ADD W9, W9, 0x1
	0x03CF14B8 STP W31, W9, [X8 + 0x18]
	0x03CF14BC LDR X8, [X19]
	0x03CF14C0 LDR X9, [X8 + 0x298]
	0x03CF14C4 LDR X2, [X8 + 0x2A0]
	0x03CF14C8 BLR X9
	0x03CF14CC CBZ X0, 0x3CF1794

ISIL:
	001 Move X8, [X0+56]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X3, [X8+24]
	005 Move X0, [X8+64]
	006 Move X2, [X8+40]
	007 CallNoReturn X3
	008 Return 

Method: System.Void RaiseItemsRemoved(System.Collections.Generic.IEnumerable`1<System.Int32> indices)

Disassembly:
	0x03CF1CE0 LDR X9, [X8]
	0x03CF1CE4 AND W1, W0, 0x1
	0x03CF1CE8 MOV X0, X8
	0x03CF1CEC LDR X10, [X9 + 0x888]
	0x03CF1CF0 LDR X2, [X9 + 0x890]
	0x03CF1CF4 BLR X10
	0x03CF1CF8 MOV X0, X21

ISIL:
	001 Move X8, [X0+64]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X3, [X8+24]
	005 Move X0, [X8+64]
	006 Move X2, [X8+40]
	007 CallNoReturn X3
	008 Return 

Method: System.Array AddToArray(System.Array source, System.Int32 itemCount)

Disassembly:
	0x03CF1390 CSEL X0, X8, X31, EQ
	0x03CF1394 LDP X20, X19, [X31 + 0x10]
	0x03CF1398 LDR X30, [X31], #0x20
	0x03CF139C RET
	0x03CF13A0 LDR X0, [X0 + 0x18]
	0x03CF13A4 RET
	0x03CF13A8 STP X30, X19, [X31 - 0x10]!
	0x03CF13AC ADRP X0, 0x402000
	0x03CF13B0 LDR X0, [X0 + 0x5B0]
	0x03CF13B4 BL 0x1C16D08
	0x03CF13B8 BL 0x1C16F10
	0x03CF13BC MOV X19, X0
	0x03CF13C0 ADRP X0, 0x471000
	0x03CF13C4 LDR X0, [X0 + 0xB08]
	0x03CF13C8 BL 0x1C16D08
	0x03CF13CC MOV X1, X0
	0x03CF13D0 MOV X0, X19
	0x03CF13D4 MOV X2, X31
	0x03CF13D8 BL 0x337DF1C
	0x03CF13DC ADRP X0, 0x471000
	0x03CF13E0 LDR X0, [X0 + 0xB10]
	0x03CF13E4 BL 0x1C16D08
	0x03CF13E8 MOV X1, X0
	0x03CF13EC MOV X0, X19
	0x03CF13F0 BL 0x1C16DEC
	0x03CF13F4 SUB X31, X31, 0x70
	0x03CF13F8 STR X30, [X31 + 0x10]
	0x03CF13FC STP X28, X27, [X31 + 0x20]
	0x03CF1400 STP X26, X25, [X31 + 0x30]
	0x03CF1404 STP X24, X23, [X31 + 0x40]
	0x03CF1408 STP X22, X21, [X31 + 0x50]
	0x03CF140C STP X20, X19, [X31 + 0x60]
	0x03CF1410 ADRP X20, 0x6F6000
	0x03CF1414 LDRB W8, [X20 + 0x776]
	0x03CF1418 MOV X19, X0
	0x03CF141C TBNZ X8, 0x0, 0x3CF1488
	0x03CF1420 ADRP X0, 0x471000
	0x03CF1424 LDR X0, [X0 + 0xB18]
	0x03CF1428 BL 0x1C16CF4
	0x03CF142C ADRP X0, 0x471000
	0x03CF1430 LDR X0, [X0 + 0xB20]
	0x03CF1434 BL 0x1C16CF4
	0x03CF1438 ADRP X0, 0x402000
	0x03CF143C LDR X0, [X0 + 0xE00]
	0x03CF1440 BL 0x1C16CF4
	0x03CF1444 ADRP X0, 0x42A000
	0x03CF1448 LDR X0, [X0 + 0x7B8]
	0x03CF144C BL 0x1C16CF4
	0x03CF1450 ADRP X0, 0x42A000
	0x03CF1454 LDR X0, [X0 + 0x7C0]
	0x03CF1458 BL 0x1C16CF4
	0x03CF145C ADRP X0, 0x402000
	0x03CF1460 LDR X0, [X0 + 0xE18]
	0x03CF1464 BL 0x1C16CF4
	0x03CF1468 ADRP X0, 0x403000
	0x03CF146C LDR X0, [X0 + 0xE10]
	0x03CF1470 BL 0x1C16CF4
	0x03CF1474 ADRP X0, 0x409000
	0x03CF1478 LDR X0, [X0 + 0x858]
	0x03CF147C BL 0x1C16CF4
	0x03CF1480 MOVZ W8, 0x1
	0x03CF1484 STRB W8, [X20 + 0x776]
	0x03CF1488 LDR X0, [X19 + 0x30]
	0x03CF148C CBZ X0, 0x3CF1794
	0x03CF1490 ADRP X8, 0x471000
	0x03CF1494 LDR X8, [X8 + 0xB20]
	0x03CF1498 LDR X1, [X8]
	0x03CF149C BL 0x2A1FE04
	0x03CF14A0 LDR X8, [X19 + 0x38]
	0x03CF14A4 CBZ X8, 0x3CF1794
	0x03CF14A8 LDR W9, [X8 + 0x1C]
	0x03CF14AC MOV X0, X19
	0x03CF14B0 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6F7000
	006 Move W8, [X21+1904]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x403000
	014 Move X0, [X0+1728]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1904], W8
	018 Compare X19, 0
	019 JumpIfEqual {68}
	020 Move X0, X19
	021 Move X1, X31
	022 Call "il2cpp_vm_object_is_inst", X0
	023 Compare X0, 0
	024 JumpIfEqual {68}
	025 Move X8, [X0]
	026 Move X21, 0x403000
	027 Move X9, [X8+1064]
	028 Move X1, [X8+1072]
	029 Move X21, [X21+1728]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X21]
	032 Move X21, X0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X21
	039 Move X1, X31
	040 Move X2, X31
	041 Call Type.op_Equality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {69}
	046 Move X0, X19
	047 Move X1, X31
	048 Call Array.get_Length, X0
	049 Add W1, W0, W20
	050 Move X0, X21
	051 Move X2, X31
	052 Call Array.CreateInstance, X0, X1
	053 Move X20, X0
	054 Move X0, X19
	055 Move X1, X31
	056 Call Array.get_Length, X0
	057 Move W2, W0
	058 Move X0, X19
	059 Move X1, X20
	060 Move X3, X31
	061 Call Array.Copy, X0, X1, X2
	062 Move X0, X20
	063 Move X20, [X31+16]
	064 Move X19, [X31+24]
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Return X0
	068 Call 0x1C17F20
	069 Move X0, 0x403000
	070 Move X0, [X0+1456]
	071 Call 0x1C17D08
	072 Call 0x1C17F10
	073 Move X19, X0
	074 Move X0, 0x472000
	075 Move X0, [X0+2768]
	076 Call 0x1C17D08
	077 Move X1, X0
	078 Move X0, X19
	079 Move X2, X31
	080 Call InvalidOperationException..ctor, X0, X1
	081 Move X0, 0x472000
	082 Move X0, [X0+2776]
	083 Call 0x1C17D08
	084 Move X1, X0
	085 Move X0, X19
	086 Call 0x1C17DEC

Method: System.Array RemoveFromArray(System.Array source, System.Collections.Generic.List`1<System.Int32> indicesToRemove)

Disassembly:
	0x03CF1CFC MOV W1, W19
	0x03CF1D00 BL 0x3CF1E44
	0x03CF1D04 LDR X8, [X20 + 0x48]
	0x03CF1D08 CBZ X8, 0x3CF1D1C
	0x03CF1D0C AND W1, W0, 0x1
	0x03CF1D10 MOV X0, X8
	0x03CF1D14 MOV X2, X31
	0x03CF1D18 BL 0x3DF2050
	0x03CF1D1C MOV X0, X21
	0x03CF1D20 MOV X1, X20
	0x03CF1D24 MOV W2, W19
	0x03CF1D28 LDP X20, X19, [X31 + 0x20]
	0x03CF1D2C LDP X22, X21, [X31 + 0x10]
	0x03CF1D30 LDR X30, [X31], #0x30
	0x03CF1D34 B 0x3CEF9E8
	0x03CF1D38 STP X30, X19, [X31 - 0x10]!
	0x03CF1D3C LDR X8, [X0]
	0x03CF1D40 MOV X19, X0
	0x03CF1D44 LDP X9, X2, [X8 + 0x1F8]
	0x03CF1D48 BLR X9
	0x03CF1D4C MOV W1, W0
	0x03CF1D50 MOV X0, X19
	0x03CF1D54 LDP X30, X19, [X31], #0x10
	0x03CF1D58 B 0x3CF41C8
	0x03CF1D5C LDR X8, [X0 + 0x58]
	0x03CF1D60 CBZ X8, 0x3CF1D6C
	0x03CF1D64 STR W1, [X0 + 0x80]
	0x03CF1D68 B 0x3CF8490
	0x03CF1D6C RET
	0x03CF1D70 SUB X31, X31, 0x60
	0x03CF1D74 STP X30, X21, [X31 + 0x40]
	0x03CF1D78 STP X20, X19, [X31 + 0x50]
	0x03CF1D7C ADRP X21, 0x6F6000
	0x03CF1D80 LDRB W8, [X21 + 0x785]
	0x03CF1D84 MOV W20, W1
	0x03CF1D88 MOV X19, X0
	0x03CF1D8C TBNZ X8, 0x0, 0x3CF1DA4
	0x03CF1D90 ADRP X0, 0x471000
	0x03CF1D94 LDR X0, [X0 + 0xB68]
	0x03CF1D98 BL 0x1C16CF4
	0x03CF1D9C MOVZ W8, 0x1
	0x03CF1DA0 STRB W8, [X21 + 0x785]
	0x03CF1DA4 MOV X0, X19
	0x03CF1DA8 MOV W1, W20
	0x03CF1DAC STP X31, X31, [X31 + 0x20]
	0x03CF1DB0 STR X31, [X31 + 0x30]
	0x03CF1DB4 BL 0x3CF3D08
	0x03CF1DB8 TBZ X0, 0x0, 0x3CF1E08
	0x03CF1DBC LDR X0, [X19 + 0x40]
	0x03CF1DC0 CBZ X0, 0x3CF1E20
	0x03CF1DC4 ADRP X8, 0x471000
	0x03CF1DC8 LDR X8, [X8 + 0xB68]
	0x03CF1DCC MOV W1, W20
	0x03CF1DD0 LDR X2, [X8]
	0x03CF1DD4 ADD X8, X31, 0x8
	0x03CF1DD8 BL 0x30872C4
	0x03CF1DDC LDUR V0, [X31 + 0x8]
	0x03CF1DE0 LDR X8, [X31 + 0x18]
	0x03CF1DE4 ADD X0, X31, 0x20
	0x03CF1DE8 MOV X1, X31
	0x03CF1DEC STR V0, [X31 + 0x2]
	0x03CF1DF0 STR X8, [X31 + 0x30]
	0x03CF1DF4 BL 0x3D8796C
	0x03CF1DF8 MOV W1, W0
	0x03CF1DFC MOV X0, X19
	0x03CF1E00 BL 0x3CF4238
	0x03CF1E04 B 0x3CF1E0C
	0x03CF1E08 MOV W0, W31
	0x03CF1E0C LDP X20, X19, [X31 + 0x50]
	0x03CF1E10 LDP X30, X21, [X31 + 0x40]
	0x03CF1E14 AND W0, W0, 0x1
	0x03CF1E18 ADD X31, X31, 0x60
	0x03CF1E1C RET
	0x03CF1E20 BL 0x1C16F20
	0x03CF1E24 LDR X0, [X0 + 0x48]
	0x03CF1E28 CBZ X0, 0x3CF1E40
	0x03CF1E2C LDR X8, [X0]
	0x03CF1E30 AND W1, W1, 0x1
	0x03CF1E34 LDR X3, [X8 + 0x888]
	0x03CF1E38 LDR X2, [X8 + 0x890]
	0x03CF1E3C BR X3
	0x03CF1E40 RET
	0x03CF1E44 SUB X31, X31, 0x60
	0x03CF1E48 STP X30, X21, [X31 + 0x40]
	0x03CF1E4C STP X20, X19, [X31 + 0x50]
	0x03CF1E50 ADRP X21, 0x6F6000
	0x03CF1E54 LDRB W8, [X21 + 0x781]
	0x03CF1E58 MOV W19, W1
	0x03CF1E5C MOV X20, X0
	0x03CF1E60 TBNZ X8, 0x0, 0x3CF1E78
	0x03CF1E64 ADRP X0, 0x471000
	0x03CF1E68 LDR X0, [X0 + 0xB68]
	0x03CF1E6C BL 0x1C16CF4
	0x03CF1E70 MOVZ W8, 0x1
	0x03CF1E74 STRB W8, [X21 + 0x781]
	0x03CF1E78 MOV X0, X20
	0x03CF1E7C MOV W1, W19
	0x03CF1E80 STP X31, X31, [X31 + 0x20]
	0x03CF1E84 STR X31, [X31 + 0x30]
	0x03CF1E88 BL 0x3CF3D08
	0x03CF1E8C TBZ X0, 0x0, 0x3CF1ED0
	0x03CF1E90 LDR X0, [X20 + 0x40]
	0x03CF1E94 CBZ X0, 0x3CF1EE8
	0x03CF1E98 ADRP X8, 0x471000
	0x03CF1E9C LDR X8, [X8 + 0xB68]
	0x03CF1EA0 MOV W1, W19
	0x03CF1EA4 LDR X2, [X8]
	0x03CF1EA8 ADD X8, X31, 0x8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x6F7000
	010 Move W8, [X21+1905]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x404000
	018 Move X0, [X0+3624]
	019 Call 0x1C17CF4
	020 Move X0, 0x42D000
	021 Move X0, [X0+3896]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1905], W8
	025 Compare X20, 0
	026 JumpIfEqual {105}
	027 Move X0, X20
	028 Move X1, X31
	029 Call Array.get_Length, X0
	030 Compare X19, 0
	031 JumpIfEqual {105}
	032 Move W8, [X19+24]
	033 Subtract W21, W0, W8
	034 Move X0, X20
	035 Move X1, X31
	036 Call "il2cpp_vm_object_is_inst", X0
	037 Compare X0, 0
	038 JumpIfEqual {105}
	039 Move X8, [X0]
	040 Move X9, [X8+1064]
	041 Move X1, [X8+1072]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare W21, 0
	044 JumpIfEqual {93}
	045 Move W1, W21
	046 Move X2, X31
	047 Call Array.CreateInstance, X0, X1
	048 Move X21, X0
	049 Move X0, X20
	050 Move X1, X31
	051 Call Array.get_Length, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X25, 0x42D000
	054 Move X25, [X25+3896]
	055 Move W22, W31
	056 Move W23, W31
	057 Move W24, W31
	058 Move W8, [X19+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X2, [X25]
	061 Move X0, X19
	062 Move W1, W23
	063 Call List`1<Int32>.get_Item, X0, X1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Add W23, W23, 1
	066 Move X0, X20
	067 Move W1, W24
	068 Move X2, X31
	069 Call Array.GetValue, X0, X1
	070 Compare X21, 0
	071 JumpIfEqual {105}
	072 Move X1, X0
	073 Move X0, X21
	074 Move W2, W22
	075 Move X3, X31
	076 Call Array.SetValue, X0, X1, X2
	077 Add W22, W22, 1
	078 Move X0, X20
	079 Move X1, X31
	080 Add W24, W24, 1
	081 Call Array.get_Length, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X21
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Move X25, [X31+72]
	092 Return X0
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move W1, W31
	100 Move X2, X31
	101 Move X30, [X31+64]
	102 Move X25, [X31+72]
	103 Call Array.CreateInstance, X0, X1
	104 Return X0
	105 Call 0x1C17F20
	106 Move X0, 0x403000
	107 Move X0, [X0+1456]
	108 Call 0x1C17D08
	109 Call 0x1C17F10
	110 Move X19, X0
	111 Move X0, 0x472000
	112 Move X0, [X0+2800]
	113 Call 0x1C17D08
	114 Move X1, X0
	115 Move X0, X19
	116 Move X2, X31
	117 Call InvalidOperationException..ctor, X0, X1
	118 Move X0, 0x472000
	119 Move X0, [X0+2808]
	120 Call 0x1C17D08
	121 Move X1, X0
	122 Move X0, X19
	123 Call 0x1C17DEC

Method: System.Void Swap(System.Int32 lhs, System.Int32 rhs)

Disassembly:
	0x03CF1660 LDRSW X10, [X0 + 0x18]
	0x03CF1664 LDR W11, [X8 + 0x18]
	0x03CF1668 CMP W10, W11
	0x03CF166C B.CS 0x3CF1684
	0x03CF1670 ADD W9, W10, 0x1
	0x03CF1674 ADD X8, X8, X10, 0x2, LSL
	0x03CF1678 STR W9, [X0 + 0x18]
	0x03CF167C STR W21, [X8 + 0x20]
	0x03CF1680 B 0x3CF1698
	0x03CF1684 LDR X8, [X9 + 0x20]
	0x03CF1688 LDR X8, [X8 + 0xC0]
	0x03CF168C LDR X2, [X8 + 0x70]
	0x03CF1690 MOV W1, W21
	0x03CF1694 BL 0x2FDC70C
	0x03CF1698 LDR X8, [X19]
	0x03CF169C LDR X23, [X19 + 0x30]
	0x03CF16A0 LDR X9, [X8 + 0x2B8]
	0x03CF16A4 LDR X2, [X8 + 0x2C0]
	0x03CF16A8 MOV X0, X19
	0x03CF16AC MOV W1, W21
	0x03CF16B0 BLR X9
	0x03CF16B4 MOV X3, X0
	0x03CF16B8 STP X31, X31, [X31]
	0x03CF16BC ADD X0, X31, 0x0
	0x03CF16C0 MOV W1, W21
	0x03CF16C4 MOV W2, W22
	0x03CF16C8 MOV X4, X31
	0x03CF16CC BL 0x3D87960
	0x03CF16D0 CBZ X23, 0x3CF1788
	0x03CF16D4 LDP X2, X3, [X31]
	0x03CF16D8 LDR X4, [X28]
	0x03CF16DC MOV X0, X23
	0x03CF16E0 MOV W1, W21
	0x03CF16E4 BL 0x2A1FC6C
	0x03CF16E8 B 0x3CF1564
	0x03CF16EC MOV X21, X31
	0x03CF16F0 MOVZ W22, 0x5
	0x03CF16F4 CBZ X20, 0x3CF1750
	0x03CF16F8 LDR X8, [X20]
	0x03CF16FC LDR X1, [X24]
	0x03CF1700 LDRH W9, [X8 + 0x12E]
	0x03CF1704 CBZ X9, 0x3CF1728
	0x03CF1708 LDR X10, [X8 + 0xB0]
	0x03CF170C ADD X10, X10, 0x8
	0x03CF1710 LDUR X11, [X10 - 0x8]
	0x03CF1714 CMP X11, X1
	0x03CF1718 B.EQ 0x3CF1738
	0x03CF171C SUBS X9, X9, 0x1
	0x03CF1720 ADD X10, X10, 0x10
	0x03CF1724 B.NE 0x3CF1710
	0x03CF1728 MOV X0, X20
	0x03CF172C MOV W2, W31
	0x03CF1730 BL 0x1C5C788
	0x03CF1734 B 0x3CF1744
	0x03CF1738 LDRSW X9, [X10]
	0x03CF173C ADD X8, X8, X9, 0x4, LSL
	0x03CF1740 ADD X0, X8, 0x138
	0x03CF1744 LDP X8, X1, [X0]
	0x03CF1748 MOV X0, X20
	0x03CF174C BLR X8
	0x03CF1750 CBNZ X21, 0x3CF179C
	0x03CF1754 CMP W22, 0x5
	0x03CF1758 B.EQ 0x3CF1760
	0x03CF175C CBNZ W22, 0x3CF1768
	0x03CF1760 MOV X0, X19
	0x03CF1764 BL 0x3CF1868
	0x03CF1768 LDP X20, X19, [X31 + 0x60]
	0x03CF176C LDP X22, X21, [X31 + 0x50]
	0x03CF1770 LDP X24, X23, [X31 + 0x40]
	0x03CF1774 LDP X26, X25, [X31 + 0x30]
	0x03CF1778 LDP X28, X27, [X31 + 0x20]
	0x03CF177C LDR X30, [X31 + 0x10]
	0x03CF1780 ADD X31, X31, 0x70
	0x03CF1784 RET
	0x03CF1788 BL 0x1C16F20
	0x03CF178C BL 0x1C16F20
	0x03CF1790 BL 0x1C16F20
	0x03CF1794 BL 0x1C16F20
	0x03CF1798 BL 0x1C16F20
	0x03CF179C MOV X0, X21
	0x03CF17A0 BL 0x1C16F18
	0x03CF17A4 B 0x3CF17C4
	0x03CF17A8 B 0x3CF17C4
	0x03CF17AC B 0x3CF17C4
	0x03CF17B0 B 0x3CF17C4
	0x03CF17B4 B 0x3CF17C4
	0x03CF17B8 B 0x3CF17C4
	0x03CF17BC B 0x3CF17C4
	0x03CF17C0 B 0x3CF17C4
	0x03CF17C4 CMP W1, 0x1
	0x03CF17C8 B.NE 0x3CF17E4
	0x03CF17CC BL 0x3EB1AD0
	0x03CF17D0 LDR X21, [X0]
	0x03CF17D4 BL 0x3EB1AE0
	0x03CF17D8 MOV W22, W31
	0x03CF17DC CBNZ X20, 0x3CF16F8
	0x03CF17E0 B 0x3CF1750
	0x03CF17E4 MOV X19, X0
	0x03CF17E8 MOV X21, X31
	0x03CF17EC B 0x3CF17F4
	0x03CF17F0 MOV X19, X0
	0x03CF17F4 CBZ X20, 0x3CF1850
	0x03CF17F8 LDR X8, [X20]
	0x03CF17FC LDR X1, [X24]
	0x03CF1800 LDRH W9, [X8 + 0x12E]
	0x03CF1804 CBZ X9, 0x3CF1828
	0x03CF1808 LDR X10, [X8 + 0xB0]
	0x03CF180C ADD X10, X10, 0x8
	0x03CF1810 LDUR X11, [X10 - 0x8]
	0x03CF1814 CMP X11, X1
	0x03CF1818 B.EQ 0x3CF1838
	0x03CF181C SUBS X9, X9, 0x1
	0x03CF1820 ADD X10, X10, 0x10
	0x03CF1824 B.NE 0x3CF1810
	0x03CF1828 MOV X0, X20
	0x03CF182C MOV W2, W31
	0x03CF1830 BL 0x1C5C788
	0x03CF1834 B 0x3CF1844
	0x03CF1838 LDRSW X9, [X10]
	0x03CF183C ADD X8, X8, X9, 0x4, LSL
	0x03CF1840 ADD X0, X8, 0x138
	0x03CF1844 LDP X8, X1, [X0]
	0x03CF1848 MOV X0, X20
	0x03CF184C BLR X8
	0x03CF1850 CBNZ X21, 0x3CF185C
	0x03CF1854 MOV X0, X19
	0x03CF1858 BL 0x1D2C690
	0x03CF185C MOV X0, X21
	0x03CF1860 BL 0x1C16F18
	0x03CF1864 BL 0x1990590
	0x03CF1868 STR X30, [X31 - 0x20]!
	0x03CF186C STP X20, X19, [X31 + 0x10]
	0x03CF1870 ADRP X20, 0x6F6000
	0x03CF1874 LDRB W8, [X20 + 0x78A]
	0x03CF1878 MOV X19, X0
	0x03CF187C TBNZ X8, 0x0, 0x3CF18A0
	0x03CF1880 ADRP X0, 0x409000
	0x03CF1884 LDR X0, [X0 + 0x678]
	0x03CF1888 BL 0x1C16CF4
	0x03CF188C ADRP X0, 0x471000
	0x03CF1890 LDR X0, [X0 + 0xB28]
	0x03CF1894 BL 0x1C16CF4
	0x03CF1898 MOVZ W8, 0x1
	0x03CF189C STRB W8, [X20 + 0x78A]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x6F7000
	010 Move W8, [X20+1906]
	011 Move W19, W2
	012 Move W21, W1
	013 Move X24, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x40A000
	019 Move X0, [X0+760]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1906], W8
	023 Move X8, [X24]
	024 Move X0, X24
	025 Move X9, [X8+392]
	026 Move X1, [X8+400]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X8, [X24]
	029 Move X22, X0
	030 Move X0, X24
	031 Move X9, [X8+392]
	032 Move X1, [X8+400]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X8, [X24]
	035 Move X20, X0
	036 Move X0, X24
	037 Move X9, [X8+392]
	038 Move X1, [X8+400]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Compare X0, 0
	041 JumpIfEqual {159}
	042 Move X25, 0x40A000
	043 Move X8, [X0]
	044 Move X25, [X25+760]
	045 Move X23, X0
	046 NotImplemented "Instruction LDRH not yet implemented."
	047 Move X1, [X25]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move X0, X23
	057 Move W2, W31
	058 Call 0x1C5D788
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add X8, X8, X9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X2, [X0+8]
	064 Move X0, X23
	065 Move W1, W19
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X24]
	068 Move X23, X0
	069 Move X0, X24
	070 Move X9, [X8+392]
	071 Move X1, [X8+400]
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare X0, 0
	074 JumpIfEqual {159}
	075 Move X8, [X0]
	076 Move X1, [X25]
	077 Move X24, X0
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Compare X9, 0
	080 JumpIfEqual {87}
	081 Move X10, [X8+176]
	082 Add X10, X10, 8
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Subtract X9, X9, 1
	086 Add X10, X10, 16
	087 Move X0, X24
	088 Move W2, W31
	089 Call 0x1C5D788
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Add X8, X8, X9
	092 Add X0, X8, 312
	093 Move X8, [X0]
	094 Move X2, [X0+8]
	095 Move X0, X24
	096 Move W1, W21
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Compare X22, 0
	099 JumpIfEqual {159}
	100 Move X8, [X22]
	101 Move X1, [X25]
	102 Move X24, X0
	103 NotImplemented "Instruction LDRH not yet implemented."
	104 Compare X9, 0
	105 JumpIfEqual {112}
	106 Move X10, [X8+176]
	107 Add X10, X10, 8
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Subtract X9, X9, 1
	111 Add X10, X10, 16
	112 Move W2, 1
	113 Move X0, X22
	114 Call 0x1C5D788
	115 Move W9, [X10]
	116 Add W9, W9, 1
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X3, [X0+8]
	121 Move X0, X22
	122 Move W1, W21
	123 Move X2, X23
	124 NotImplemented "Instruction BLR not yet implemented."
	125 Compare X20, 0
	126 JumpIfEqual {159}
	127 Move X8, [X20]
	128 Move X1, [X25]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W2, 1
	139 Move X0, X20
	140 Call 0x1C5D788
	141 Move W9, [X10]
	142 Add W9, W9, 1
	143 Add X8, X8, W9
	144 Add X0, X8, 312
	145 Move X4, [X0]
	146 Move X3, [X0+8]
	147 Move X0, X20
	148 Move W1, W19
	149 Move X2, X24
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move X30, [X31+64]
	157 Move X25, [X31+72]
	158 CallNoReturn X4
	159 Call 0x1C17F20

Method: System.Void EnsureItemSourceCanBeResized()

Disassembly:
	0x03CF123C LDP X30, X21, [X31], #0x20
	0x03CF1240 RET
	0x03CF1244 BL 0x1C16F20
	0x03CF1248 MOV X1, X31
	0x03CF124C B 0x33BDD8C
	0x03CF1250 MOV X1, X31
	0x03CF1254 B 0x33BDD8C
	0x03CF1258 STR X30, [X31 - 0x20]!
	0x03CF125C STP X20, X19, [X31 + 0x10]
	0x03CF1260 ADRP X20, 0x6F6000
	0x03CF1264 LDRB W8, [X20 + 0x774]
	0x03CF1268 MOV X19, X0
	0x03CF126C TBNZ X8, 0x0, 0x3CF1290
	0x03CF1270 ADRP X0, 0x42B000
	0x03CF1274 LDR X0, [X0 + 0x3D8]
	0x03CF1278 BL 0x1C16CF4
	0x03CF127C ADRP X0, 0x402000
	0x03CF1280 LDR X0, [X0 + 0x6C0]
	0x03CF1284 BL 0x1C16CF4
	0x03CF1288 MOVZ W8, 0x1
	0x03CF128C STRB W8, [X20 + 0x774]
	0x03CF1290 CBZ X19, 0x3CF1320
	0x03CF1294 LDR X8, [X19]
	0x03CF1298 MOV X0, X19
	0x03CF129C LDR X9, [X8 + 0x3C8]
	0x03CF12A0 LDR X1, [X8 + 0x3D0]
	0x03CF12A4 BLR X9
	0x03CF12A8 TBZ X0, 0x0, 0x3CF1310
	0x03CF12AC LDR X8, [X19]
	0x03CF12B0 MOV X0, X19
	0x03CF12B4 LDR X9, [X8 + 0x448]
	0x03CF12B8 LDR X1, [X8 + 0x450]
	0x03CF12BC BLR X9
	0x03CF12C0 ADRP X8, 0x402000
	0x03CF12C4 LDR X8, [X8 + 0x6C0]
	0x03CF12C8 ADRP X9, 0x42B000
	0x03CF12CC MOV X19, X0
	0x03CF12D0 LDR X8, [X8]
	0x03CF12D4 LDR X9, [X9 + 0x3D8]
	0x03CF12D8 LDR W10, [X8 + 0xE0]
	0x03CF12DC LDR X20, [X9]
	0x03CF12E0 CBNZ W10, 0x3CF12EC
	0x03CF12E4 MOV X0, X8
	0x03CF12E8 BL 0x1C16DFC
	0x03CF12EC MOV X0, X20
	0x03CF12F0 MOV X1, X31
	0x03CF12F4 BL 0x338C698
	0x03CF12F8 MOV X1, X0
	0x03CF12FC MOV X0, X19
	0x03CF1300 LDP X20, X19, [X31 + 0x10]
	0x03CF1304 MOV X2, X31
	0x03CF1308 LDR X30, [X31], #0x20
	0x03CF130C B 0x3395194
	0x03CF1310 LDP X20, X19, [X31 + 0x10]
	0x03CF1314 MOV W0, W31
	0x03CF1318 LDR X30, [X31], #0x20
	0x03CF131C RET
	0x03CF1320 BL 0x1C16F20
	0x03CF1324 STR X30, [X31 - 0x20]!
	0x03CF1328 STP X20, X19, [X31 + 0x10]
	0x03CF132C ADRP X20, 0x6F6000
	0x03CF1330 LDRB W8, [X20 + 0x775]
	0x03CF1334 MOV X19, X0
	0x03CF1338 TBNZ X8, 0x0, 0x3CF1350
	0x03CF133C ADRP X0, 0x471000
	0x03CF1340 LDR X0, [X0 + 0xB00]
	0x03CF1344 BL 0x1C16CF4
	0x03CF1348 MOVZ W8, 0x1
	0x03CF134C STRB W8, [X20 + 0x775]
	0x03CF1350 LDR X8, [X19 + 0x10]
	0x03CF1354 CBZ X8, 0x3CF1378
	0x03CF1358 ADRP X9, 0x471000
	0x03CF135C LDR X9, [X9 + 0xB00]
	0x03CF1360 LDR X10, [X8]
	0x03CF1364 LDR X9, [X9]
	0x03CF1368 LDRB W12, [X10 + 0x130]
	0x03CF136C LDRB W11, [X9 + 0x130]
	0x03CF1370 CMP W12, W11
	0x03CF1374 B.CS 0x3CF1380
	0x03CF1378 MOV X0, X31
	0x03CF137C B 0x3CF1394
	0x03CF1380 LDR X10, [X10 + 0xC8]
	0x03CF1384 ADD X10, X10, X11, 0x3, LSL
	0x03CF1388 LDUR X10, [X10 - 0x8]
	0x03CF138C CMP X10, X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6F7000
	005 Move W8, [X20+1907]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x40A000
	012 Move X0, [X0+760]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1907], W8
	016 Move X8, [X19]
	017 Move X0, X19
	018 Move X9, [X8+392]
	019 Move X1, [X8+400]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 Compare X0, 0
	022 JumpIfEqual {31}
	023 Move X1, X31
	024 Call "il2cpp_vm_object_is_inst", X0
	025 Compare X0, 0
	026 JumpIfEqual {31}
	027 Move X1, X31
	028 Call Type.get_IsArray, X0
	029 NotImplemented "Instruction ORN not yet implemented."
	030 And W20, W8, 1
	031 Move W20, 1
	032 Move X8, [X19]
	033 Move X0, X19
	034 Move X9, [X8+392]
	035 Move X1, [X8+400]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Compare X0, 0
	038 JumpIfEqual {81}
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X9, [X8+392]
	042 Move X1, [X8+400]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Compare X0, 0
	045 JumpIfEqual {99}
	046 Move X10, 0x40A000
	047 Move X8, [X0]
	048 Move X10, [X10+760]
	049 Move X19, X0
	050 NotImplemented "Instruction LDRH not yet implemented."
	051 Move X1, [X10]
	052 Compare X9, 0
	053 JumpIfEqual {60}
	054 Move X10, [X8+176]
	055 Add X10, X10, 8
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Subtract X9, X9, 1
	059 Add X10, X10, 16
	060 Move W2, 6
	061 Move X0, X19
	062 Call 0x1C5D788
	063 Move W9, [X10]
	064 Add W9, W9, 6
	065 Add X8, X8, W9
	066 Add X0, X8, 312
	067 Move X8, [X0]
	068 Move X1, [X0+8]
	069 Move X0, X19
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Compare W20, 0
	072 JumpIfEqual {77}
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {81}
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Return 
	081 Move X0, 0x403000
	082 Move X0, [X0+1456]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X19, X0
	086 Move X0, 0x472000
	087 Move X0, [X0+2752]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X19
	091 Move X2, X31
	092 Call InvalidOperationException..ctor, X0, X1
	093 Move X0, 0x472000
	094 Move X0, [X0+2760]
	095 Call 0x1C17D08
	096 Move X1, X0
	097 Move X0, X19
	098 Call 0x1C17DEC
	099 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03CF2248 B.NE 0x3CF2200
	0x03CF224C LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <AddItems>g__IsGenericList|15_0(System.Type t)

Disassembly:
	0x03CF2258 LDR X30, [X31], #0x40
	0x03CF225C RET
	0x03CF2260 MOV X0, X22
	0x03CF2264 MOV X1, X23
	0x03CF2268 BL 0x1C171E0
	0x03CF226C STR X30, [X31 - 0x40]!
	0x03CF2270 STP X24, X23, [X31 + 0x10]
	0x03CF2274 STP X22, X21, [X31 + 0x20]
	0x03CF2278 STP X20, X19, [X31 + 0x30]
	0x03CF227C ADRP X21, 0x6F5000
	0x03CF2280 LDRB W8, [X21 + 0x7BB]
	0x03CF2284 MOV X19, X1
	0x03CF2288 MOV X20, X0
	0x03CF228C TBNZ X8, 0x0, 0x3CF22A4
	0x03CF2290 ADRP X0, 0x470000
	0x03CF2294 LDR X0, [X0 + 0xB40]
	0x03CF2298 BL 0x1C16CF4
	0x03CF229C MOVZ W8, 0x1
	0x03CF22A0 STRB W8, [X21 + 0x7BB]
	0x03CF22A4 ADRP X24, 0x470000
	0x03CF22A8 LDR X21, [X20 + 0x78]!
	0x03CF22AC LDR X24, [X24 + 0xB40]
	0x03CF22B0 MOV X0, X21
	0x03CF22B4 MOV X1, X19
	0x03CF22B8 MOV X2, X31
	0x03CF22BC BL 0x33C0DE4
	0x03CF22C0 CBZ X0, 0x3CF22E0
	0x03CF22C4 LDR X23, [X24]
	0x03CF22C8 MOV X22, X0
	0x03CF22CC MOV X1, X23
	0x03CF22D0 BL 0x1C16E00
	0x03CF22D4 MOV X1, X0
	0x03CF22D8 CBNZ X0, 0x3CF22E4
	0x03CF22DC B 0x3CF2310
	0x03CF22E0 MOV X1, X31
	0x03CF22E4 MOV X0, X20
	0x03CF22E8 MOV X2, X21
	0x03CF22EC BL 0x1C24138
	0x03CF22F0 CMP X21, X0
	0x03CF22F4 MOV X21, X0
	0x03CF22F8 B.NE 0x3CF22B0
	0x03CF22FC LDP X20, X19, [X31 + 0x30]
	0x03CF2300 LDP X22, X21, [X31 + 0x20]
	0x03CF2304 LDP X24, X23, [X31 + 0x10]
	0x03CF2308 LDR X30, [X31], #0x40
	0x03CF230C RET
	0x03CF2310 MOV X0, X22
	0x03CF2314 MOV X1, X23
	0x03CF2318 BL 0x1C171E0
	0x03CF231C STR X30, [X31 - 0x60]!
	0x03CF2320 STP X28, X27, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6F6000
	005 Move W8, [X20+1908]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x42B000
	012 Move X0, [X0+984]
	013 Call 0x1C17CF4
	014 Move X0, 0x402000
	015 Move X0, [X0+1728]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+1908], W8
	019 Compare X19, 0
	020 JumpIfEqual {63}
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+968]
	024 Move X1, [X8+976]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {58}
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X9, [X8+1096]
	033 Move X1, [X8+1104]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X8, 0x402000
	036 Move X8, [X8+1728]
	037 Move X9, 0x42B000
	038 Move X19, X0
	039 Move X8, [X8]
	040 Move X9, [X9+984]
	041 Move W10, [X8+224]
	042 Move X20, [X9]
	043 Compare W10, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Call Type.GetTypeFromHandle, X0
	050 Move X1, X0
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X2, X31
	055 Move X30, [X31+32]
	056 Call Type.op_Equality, X0, X1
	057 Return X0
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move W0, W31
	061 Move X30, [X31+32]
	062 Return X0
	063 Call 0x1C17F20

