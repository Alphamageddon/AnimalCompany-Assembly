Type: UnityEngine.UIElements.TreeDataController`1

Method: System.Void SetRootItems(System.Collections.Generic.IList`1<UnityEngine.UIElements.TreeViewItemData`1<T>> rootItems)

Disassembly:
	0x026FC914 LDRB W8, [X0 + 0x135]
	0x026FC918 TBNZ X8, 0x0, 0x26FC920
	0x026FC91C BL 0x1C5C684
	0x026FC920 LDR X8, [X0 + 0xC0]
	0x026FC924 MOV X0, X24
	0x026FC928 MOV W1, W23
	0x026FC92C LDR X2, [X8 + 0x48]
	0x026FC930 ADD X8, X31, 0xA0
	0x026FC934 BL 0x29F7B6C
	0x026FC938 LDR V0, [X31 + 0xA]
	0x026FC93C LDR X8, [X31 + 0xB0]
	0x026FC940 STR V0, [X31 + 0x8]
	0x026FC944 STR X8, [X31 + 0x90]
	0x026FC948 LDR X8, [X21 + 0x10]
	0x026FC94C LDR V0, [X21]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 NotImplemented "Instruction MOVI not yet implemented."
	005 Move [X31], V0
	006 Move [X31+8], V0
	007 Move X8, [X2+32]
	008 Move X19, X0
	009 Add X0, X31, 0
	010 Move X8, [X8+192]
	011 Move X2, [X8+16]
	012 Call 0x26FD2A4, X0, X1
	013 Move V1, [X31]
	014 Move V0, [X31+16]
	015 Move [X19+16], V1
	016 Move [X19+24], V0
	017 Move X30, [X31+32]
	018 Move X19, [X31+40]
	019 Add X31, X31, 48
	020 Return 

Method: T GetDataForId(System.Int32 id)

Disassembly:
	0x026FC950 STR X8, [X31 + 0x70]
	0x026FC954 STR V0, [X31 + 0x6]
	0x026FC958 LDR X0, [X20 + 0x20]
	0x026FC95C LDRB W8, [X0 + 0x135]
	0x026FC960 TBNZ X8, 0x0, 0x26FC968
	0x026FC964 BL 0x1C5C684
	0x026FC968 LDR X8, [X0 + 0xC0]
	0x026FC96C LDR V0, [X31 + 0x6]
	0x026FC970 LDR X9, [X31 + 0x70]
	0x026FC974 ADD X0, X31, 0x80
	0x026FC978 LDR X3, [X8 + 0x80]
	0x026FC97C ADD X1, X31, 0xA0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move X8, [X2+32]
	004 Add X0, X0, 16
	005 Move X8, [X8+192]
	006 Move X2, [X8+32]
	007 Add X8, X31, 8
	008 Call 0x26FD428, X0, X1
	009 Move X0, [X31+16]
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return X0

Method: System.Int32 GetParentId(System.Int32 id)

Disassembly:
	0x026FC980 MOV W2, W22
	0x026FC984 STR V0, [X31 + 0xA]

ISIL:
	001 Add X0, X0, 16
	002 Call 0x26FD4B8, X0, X1
	003 Return X0

Method: System.Boolean HasChildren(System.Int32 id)

Disassembly:
	0x026FC988 STR X9, [X31 + 0xB0]
	0x026FC98C BL 0x2700138
	0x026FC990 LDR X22, [X19 + 0x8]
	0x026FC994 LDR V0, [X31 + 0x8]
	0x026FC998 LDR X8, [X31 + 0x90]
	0x026FC99C STR V0, [X31 + 0x4]
	0x026FC9A0 STR X8, [X31 + 0x50]
	0x026FC9A4 CBZ X22, 0x26FCC28
	0x026FC9A8 LDR V0, [X31 + 0x4]
	0x026FC9AC LDR X8, [X31 + 0x50]
	0x026FC9B0 STR V0, [X31 + 0x2]
	0x026FC9B4 STR X8, [X31 + 0x30]
	0x026FC9B8 LDR X0, [X20 + 0x20]
	0x026FC9BC LDRB W8, [X0 + 0x135]
	0x026FC9C0 TBNZ X8, 0x0, 0x26FC9C8
	0x026FC9C4 BL 0x1C5C684
	0x026FC9C8 LDR X8, [X0 + 0xC0]
	0x026FC9CC LDR V0, [X31 + 0x2]
	0x026FC9D0 LDR X9, [X31 + 0x30]
	0x026FC9D4 ADD X2, X31, 0xA0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move [X31+8], X31
	005 Move [X31+16], X31
	006 Move [X31+24], X31
	007 Move X8, [X2+32]
	008 Move X19, X2
	009 Add X0, X0, 16
	010 Move X8, [X8+192]
	011 Move X2, [X8+32]
	012 Add X8, X31, 8
	013 Call 0x26FD428, X0, X1
	014 Move X8, [X19+32]
	015 Add X0, X31, 8
	016 Move X8, [X8+192]
	017 Move X1, [X8+88]
	018 Call 0x2701094, X0
	019 Move X30, [X31+32]
	020 Move X19, [X31+40]
	021 And W0, W0, 1
	022 Add X31, X31, 48
	023 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.Int32> GetItemIds(System.Collections.Generic.IEnumerable`1<UnityEngine.UIElements.TreeViewItemData`1<T>> items)

Disassembly:
	0x026FC9D8 LDR X3, [X8 + 0x88]
	0x026FC9DC MOV X0, X22
	0x026FC9E0 MOV W1, W23
	0x026FC9E4 STR V0, [X31 + 0xA]
	0x026FC9E8 STR X9, [X31 + 0xB0]
	0x026FC9EC BL 0x29F7C0C
	0x026FC9F0 LDR X0, [X20 + 0x20]
	0x026FC9F4 LDR X22, [X19 + 0x10]
	0x026FC9F8 LDRB W8, [X0 + 0x135]
	0x026FC9FC TBNZ X8, 0x0, 0x26FCA04
	0x026FCA00 BL 0x1C5C684
	0x026FCA04 CBZ X22, 0x26FCC28
	0x026FCA08 ADRP X8, 0x1A21000
	0x026FCA0C LDR X8, [X8 + 0x8B0]
	0x026FCA10 LDR W1, [X21]
	0x026FCA14 MOV X0, X22
	0x026FCA18 MOV W2, W23
	0x026FCA1C LDR X3, [X8]
	0x026FCA20 BL 0x2A0A330
	0x026FCA24 LDR X8, [X31 + 0x90]
	0x026FCA28 LDR V0, [X31 + 0x8]
	0x026FCA2C STR X8, [X31 + 0x10]
	0x026FCA30 STR V0, [X31]
	0x026FCA34 LDR X0, [X20 + 0x20]
	0x026FCA38 LDRB W8, [X0 + 0x135]
	0x026FCA3C TBNZ X8, 0x0, 0x26FCA44
	0x026FCA40 BL 0x1C5C684
	0x026FCA44 LDR X8, [X0 + 0xC0]
	0x026FCA48 LDR V0, [X31]
	0x026FCA4C LDR X9, [X31 + 0x10]
	0x026FCA50 ADD X1, X31, 0xA0
	0x026FCA54 LDR X2, [X8 + 0x90]
	0x026FCA58 MOV X0, X19
	0x026FCA5C STR V0, [X31 + 0xA]
	0x026FCA60 STR X9, [X31 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+32]
	005 Move X20, X1
	006 Move X19, X0
	007 Move W9, [X8+309]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move X0, X8
	013 Call 0x1C5D684
	014 Move X8, X0
	015 Move X8, [X8+192]
	016 Move X0, [X8+96]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Call 0x1C17F10
	024 Move X8, [X20+32]
	025 Move X20, X0
	026 Move W9, [X8+309]
	027 Move TEMP, X9
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {34}
	031 Move X0, X8
	032 Call 0x1C5D684
	033 Move X8, X0
	034 Move X8, [X8+192]
	035 Move TEMP, 1
	036 Not TEMP
	037 Move W1, TEMP
	038 Move X0, X20
	039 Move X2, [X8+104]
	040 Call 0x239D224, X0, X1
	041 Compare X20, 0
	042 JumpIfEqual {49}
	043 Move [X20+40], X19
	044 Move X0, X20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<System.Int32> GetChildrenIds(System.Int32 id)

Disassembly:
	0x026FCA64 BL 0x26FCDDC
	0x026FCA68 B 0x26FCC10
	0x026FCA6C LDR X0, [X20 + 0x20]
	0x026FCA70 LDR X23, [X19 + 0x10]
	0x026FCA74 LDRB W8, [X0 + 0x135]
	0x026FCA78 TBNZ X8, 0x0, 0x26FCA80
	0x026FCA7C BL 0x1C5C684
	0x026FCA80 CBZ X23, 0x26FCC28
	0x026FCA84 ADRP X8, 0x1A21000
	0x026FCA88 LDR W1, [X21]
	0x026FCA8C LDR X8, [X8 + 0x8A8]
	0x026FCA90 MOV X0, X23
	0x026FCA94 LDR X2, [X8]
	0x026FCA98 BL 0x2A0B690
	0x026FCA9C TBNZ X22, 0x1F, 0x26FCAF0
	0x026FCAA0 LDR X23, [X19]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+32], X30
	003 Move [X31+40], X19
	004 Move X8, [X2+32]
	005 Move X19, X2
	006 Add X0, X0, 16
	007 Move X8, [X8+192]
	008 Move X2, [X8+32]
	009 Add X8, X31, 8
	010 Call 0x26FD428, X0, X1
	011 Move X8, [X19+32]
	012 Move X0, [X31+24]
	013 Move X30, [X31+32]
	014 Move X19, [X31+40]
	015 Move X8, [X8+192]
	016 Move X1, [X8+128]
	017 Add X31, X31, 48
	018 Call 0x26FC9D8, X0
	019 Return X0

Method: System.Void Move(System.Int32 id, System.Int32 newParentId, System.Int32 childIndex = -1)

Disassembly:
	0x026FCAA4 CBZ X23, 0x26FCC28
	0x026FCAA8 ADRP X10, 0x1A1F000
	0x026FCAAC LDR X8, [X23]
	0x026FCAB0 LDR X10, [X10 + 0x7A0]
	0x026FCAB4 LDRH W9, [X8 + 0x12E]
	0x026FCAB8 LDR X1, [X10]
	0x026FCABC CBZ X9, 0x26FCAE0
	0x026FCAC0 LDR X10, [X8 + 0xB0]
	0x026FCAC4 ADD X10, X10, 0x8
	0x026FCAC8 LDUR X11, [X10 - 0x8]
	0x026FCACC CMP X11, X1
	0x026FCAD0 B.EQ 0x26FCAF8
	0x026FCAD4 SUBS X9, X9, 0x1
	0x026FCAD8 ADD X10, X10, 0x10
	0x026FCADC B.NE 0x26FCAC8
	0x026FCAE0 MOV X0, X23
	0x026FCAE4 MOV W2, W31
	0x026FCAE8 BL 0x1C5C788
	0x026FCAEC B 0x26FCB04
	0x026FCAF0 MOV W23, W31
	0x026FCAF4 B 0x26FCB18
	0x026FCAF8 LDRSW X9, [X10]
	0x026FCAFC ADD X8, X8, X9, 0x4, LSL
	0x026FCB00 ADD X0, X8, 0x138
	0x026FCB04 LDP X8, X1, [X0]
	0x026FCB08 MOV X0, X23
	0x026FCB0C BLR X8
	0x026FCB10 CMP W0, W22
	0x026FCB14 CSET W23, GT
	0x026FCB18 LDR X0, [X20 + 0x20]
	0x026FCB1C LDR X19, [X19]
	0x026FCB20 LDRB W8, [X0 + 0x135]
	0x026FCB24 TBNZ X8, 0x0, 0x26FCB2C
	0x026FCB28 BL 0x1C5C684
	0x026FCB2C CBZ X19, 0x26FCC28
	0x026FCB30 LDR W20, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X8, [X4+32]
	009 Move W19, W3
	010 Move W21, W1
	011 Add X23, X0, 16
	012 Move X8, [X8+192]
	013 Move W20, W2
	014 Move X0, X23
	015 Move W1, W2
	016 Move X8, [X8+144]
	017 Move W2, W21
	018 Move X22, X4
	019 Move X8, [X8+32]
	020 Move X8, [X8+192]
	021 Move X3, [X8+160]
	022 Call 0x26FD81C, X0, X1, X2
	023 Move TEMP, X0
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfNotEqual {34}
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Return 
	034 Move X8, [X22+32]
	035 Move W1, W21
	036 Move W2, W20
	037 Move W3, W19
	038 Move X8, [X8+192]
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X0, X23
	044 Move X4, [X8+152]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Call 0x26FD530, X0, X1, X2, X3
	048 Return 

Method: System.Boolean IsChildOf(System.Int32 childId, System.Int32 id)

Disassembly:
	0x026FCB34 TBZ X23, 0x0, 0x26FCB80
	0x026FCB38 ADRP X10, 0x1A1F000
	0x026FCB3C LDR X8, [X19]
	0x026FCB40 LDR X10, [X10 + 0x7A8]
	0x026FCB44 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move X8, [X3+32]
	002 Add X0, X0, 16
	003 Move X8, [X8+192]
	004 Move X3, [X8+160]
	005 Call 0x26FD81C, X0, X1, X2
	006 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.Int32> GetAllItemIds(System.Collections.Generic.IEnumerable`1<System.Int32> rootIds = null)

Disassembly:
	0x026FCB48 LDR X1, [X10]
	0x026FCB4C CBZ X9, 0x26FCB70
	0x026FCB50 LDR X10, [X8 + 0xB0]
	0x026FCB54 ADD X10, X10, 0x8
	0x026FCB58 LDUR X11, [X10 - 0x8]
	0x026FCB5C CMP X11, X1
	0x026FCB60 B.EQ 0x26FCBC8
	0x026FCB64 SUBS X9, X9, 0x1
	0x026FCB68 ADD X10, X10, 0x10
	0x026FCB6C B.NE 0x26FCB58
	0x026FCB70 MOVZ W2, 0x3
	0x026FCB74 MOV X0, X19
	0x026FCB78 BL 0x1C5C788
	0x026FCB7C B 0x26FCBD8
	0x026FCB80 ADRP X10, 0x1A1F000
	0x026FCB84 LDR X8, [X19]
	0x026FCB88 LDR X10, [X10 + 0x7A0]
	0x026FCB8C LDRH W9, [X8 + 0x12E]
	0x026FCB90 LDR X1, [X10]
	0x026FCB94 CBZ X9, 0x26FCBB8
	0x026FCB98 LDR X10, [X8 + 0xB0]
	0x026FCB9C ADD X10, X10, 0x8
	0x026FCBA0 LDUR X11, [X10 - 0x8]
	0x026FCBA4 CMP X11, X1
	0x026FCBA8 B.EQ 0x26FCBF0
	0x026FCBAC SUBS X9, X9, 0x1
	0x026FCBB0 ADD X10, X10, 0x10
	0x026FCBB4 B.NE 0x26FCBA0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+32]
	006 Move X21, X2
	007 Move X19, X1
	008 Move X20, X0
	009 Move X8, [X8+192]
	010 Move X8, [X8+168]
	011 Move W9, [X8+309]
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {19}
	016 Move X0, X8
	017 Call 0x1C5D684
	018 Move X8, X0
	019 Move X0, X8
	020 Call 0x1C17F10
	021 Move X8, [X21+32]
	022 Move TEMP, 1
	023 Not TEMP
	024 Move W1, TEMP
	025 Move X21, X0
	026 Move X8, [X8+192]
	027 Move X2, [X8+176]
	028 Call 0x2397664, X0, X1
	029 Compare X21, 0
	030 JumpIfEqual {39}
	031 Move [X21+40], X19
	032 Move [X21+48], X20
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X0, X21
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x026FCBB8 MOVZ W2, 0x2
	0x026FCBBC MOV X0, X19
	0x026FCBC0 BL 0x1C5C788
	0x026FCBC4 B 0x26FCC00
	0x026FCBC8 LDR W9, [X10]
	0x026FCBCC ADD W9, W9, 0x3
	0x026FCBD0 ADD X8, X8, W9, 0x4, SXTW
	0x026FCBD4 ADD X0, X8, 0x138
	0x026FCBD8 LDP X8, X3, [X0]
	0x026FCBDC MOV X0, X19
	0x026FCBE0 MOV W1, W22
	0x026FCBE4 MOV W2, W20
	0x026FCBE8 BLR X8
	0x026FCBEC B 0x26FCC10
	0x026FCBF0 LDR W9, [X10]
	0x026FCBF4 ADD W9, W9, 0x2
	0x026FCBF8 ADD X8, X8, W9, 0x4, SXTW
	0x026FCBFC ADD X0, X8, 0x138
	0x026FCC00 LDP X8, X2, [X0]
	0x026FCC04 MOV X0, X19
	0x026FCC08 MOV W1, W20
	0x026FCC0C BLR X8
	0x026FCC10 LDP X20, X19, [X31 + 0xF0]
	0x026FCC14 LDP X22, X21, [X31 + 0xE0]
	0x026FCC18 LDP X24, X23, [X31 + 0xD0]
	0x026FCC1C LDR X30, [X31 + 0xC0]
	0x026FCC20 ADD X31, X31, 0x100
	0x026FCC24 RET
	0x026FCC28 BL 0x1C16F20
	0x026FCC2C SUB X31, X31, 0xD0
	0x026FCC30 STP X30, X23, [X31 + 0xA0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x1CDF000
	007 Move X22, 0x1A22000
	008 Move X20, 0x1A22000
	009 Move W8, [X21+1435]
	010 Move X22, [X22+2184]
	011 Move X20, [X20+2192]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x1A22000
	018 Move X0, [X0+2192]
	019 Call 0x1C17CF4
	020 Move X0, 0x1A22000
	021 Move X0, [X0+2184]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1435], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Stack`1<Object>..ctor, X0
	030 Move [X19+48], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

