Type: UnityEngine.UIElements.BackgroundPropertyHelper

Method: UnityEngine.UIElements.BackgroundPosition ConvertScaleModeToBackgroundPosition(UnityEngine.ScaleMode scaleMode = 0)

Disassembly:
	0x03CEA2A4 LDRB W8, [X19 + 0x733]
	0x03CEA2A8 LDR X21, [X21 + 0x7B0]
	0x03CEA2AC MOV X20, X1
	0x03CEA2B0 TBNZ X8, 0x0, 0x3CEA2D4
	0x03CEA2B4 ADRP X0, 0x478000
	0x03CEA2B8 LDR X0, [X0 + 0x7B0]
	0x03CEA2BC BL 0x1C16CF4
	0x03CEA2C0 ADRP X0, 0x478000
	0x03CEA2C4 LDR X0, [X0 + 0x7B8]
	0x03CEA2C8 BL 0x1C16CF4
	0x03CEA2CC MOVZ W8, 0x1
	0x03CEA2D0 STRB W8, [X19 + 0x733]
	0x03CEA2D4 LDR X1, [X21]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X31
	004 Add X0, X31, 24
	005 Move S0, W31
	006 Move X1, X31
	007 Move [X31+8], W31
	008 Move [X31], X31
	009 Call Length..ctor, X0, V0
	010 Move X30, [X31+16]
	011 Move X8, [X31+24]
	012 Move [X31+4], X8
	013 Move X0, [X31+32]
	014 Move X1, X8
	015 ShiftRight X1, 32
	016 And X1, X1, 0x7FFFFFFF
	017 Return X0

Method: UnityEngine.UIElements.BackgroundRepeat ConvertScaleModeToBackgroundRepeat(UnityEngine.ScaleMode scaleMode = 0)

Disassembly:
	0x03CEA550 BL 0x1C16F20
	0x03CEA554 LDR X0, [X0 + 0x60]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.UIElements.BackgroundSize ConvertScaleModeToBackgroundSize(UnityEngine.ScaleMode scaleMode = 0)

Disassembly:
	0x03CEA560 STP X22, X21, [X31 + 0x10]
	0x03CEA564 STP X20, X19, [X31 + 0x20]
	0x03CEA568 ADRP X21, 0x6FD000
	0x03CEA56C LDRB W8, [X21 + 0x737]
	0x03CEA570 MOV X19, X1
	0x03CEA574 MOV X20, X0
	0x03CEA578 TBNZ X8, 0x0, 0x3CEA59C
	0x03CEA57C ADRP X0, 0x478000
	0x03CEA580 LDR X0, [X0 + 0x7C8]
	0x03CEA584 BL 0x1C16CF4
	0x03CEA588 ADRP X0, 0x478000
	0x03CEA58C LDR X0, [X0 + 0x7B8]
	0x03CEA590 BL 0x1C16CF4
	0x03CEA594 MOVZ W8, 0x1
	0x03CEA598 STRB W8, [X21 + 0x737]
	0x03CEA59C ADRP X21, 0x478000
	0x03CEA5A0 LDR X21, [X21 + 0x7B8]
	0x03CEA5A4 MOV X1, X19
	0x03CEA5A8 STR X31, [X31 + 0x8]
	0x03CEA5AC BL 0x3CEA294
	0x03CEA5B0 CBZ X0, 0x3CEA5C0
	0x03CEA5B4 MOV X0, X20
	0x03CEA5B8 MOV X1, X19
	0x03CEA5BC BL 0x3CEA454
	0x03CEA5C0 LDR X0, [X21]
	0x03CEA5C4 LDR W8, [X0 + 0xE0]
	0x03CEA5C8 CBNZ W8, 0x3CEA5D0
	0x03CEA5CC BL 0x1C16DFC
	0x03CEA5D0 CBZ X19, 0x3CEA670
	0x03CEA5D4 LDR X8, [X21]
	0x03CEA5D8 MOV X0, X19
	0x03CEA5DC MOV X2, X31
	0x03CEA5E0 LDR X8, [X8 + 0xB8]
	0x03CEA5E4 LDR W1, [X8]
	0x03CEA5E8 BL 0x3DF3018
	0x03CEA5EC CBZ X0, 0x3CEA60C
	0x03CEA5F0 LDR X0, [X20 + 0x58]
	0x03CEA5F4 CBZ X0, 0x3CEA670
	0x03CEA5F8 ADRP X8, 0x478000
	0x03CEA5FC LDR X8, [X8 + 0x7C8]
	0x03CEA600 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], D8
	003 Move [X31+40], X30
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X19, X8
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add X0, X31, 8
	010 Move W1, 1
	011 Move [X31+8], X31
	012 Move [X31+16], X31
	013 Move [X31+24], W31
	014 Move [X31+8], X31
	015 Move [X31+16], X31
	016 Move [X31+24], W31
	017 Add X0, X31, 8
	018 Move W1, 2
	019 Call BackgroundSize..ctor, X0, X1
	020 Move W8, [X31+8]
	021 NotImplemented "Instruction LDUR not yet implemented."
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 Move W8, 0x42C80000
	024 Move S8, W8
	025 Move V0, V8
	026 Move X0, X31
	027 Call Length.Percent, V0
	028 Move X20, X0
	029 Move V0, V8
	030 Move X0, X31
	031 Call Length.Percent, V0
	032 Move W8, W31
	033 Move [X19], W8
	034 Move [X19+4], X20
	035 Move [X19+12], X0
	036 Move X20, [X31+48]
	037 Move X19, [X31+56]
	038 Move X30, [X31+40]
	039 Move V8, [X31+32]
	040 Add X31, X31, 64
	041 Return X0

Method: UnityEngine.ScaleMode ResolveUnityBackgroundScaleMode(UnityEngine.UIElements.BackgroundPosition backgroundPositionX, UnityEngine.UIElements.BackgroundPosition backgroundPositionY, UnityEngine.UIElements.BackgroundRepeat backgroundRepeat, UnityEngine.UIElements.BackgroundSize backgroundSize, out System.Boolean valid)

Disassembly:
	0x03CEA668 LDR X30, [X31], #0x30
	0x03CEA66C RET
	0x03CEA670 BL 0x1C16F20
	0x03CEA674 STR X30, [X31 - 0x30]!
	0x03CEA678 STP X22, X21, [X31 + 0x10]
	0x03CEA67C STP X20, X19, [X31 + 0x20]
	0x03CEA680 ADRP X22, 0x6FD000
	0x03CEA684 ADRP X21, 0x478000
	0x03CEA688 LDRB W8, [X22 + 0x738]
	0x03CEA68C LDR X21, [X21 + 0x7B8]
	0x03CEA690 MOV X19, X1
	0x03CEA694 MOV X20, X0
	0x03CEA698 TBNZ X8, 0x0, 0x3CEA6BC
	0x03CEA69C ADRP X0, 0x478000
	0x03CEA6A0 LDR X0, [X0 + 0x7D0]
	0x03CEA6A4 BL 0x1C16CF4
	0x03CEA6A8 ADRP X0, 0x478000
	0x03CEA6AC LDR X0, [X0 + 0x7B8]
	0x03CEA6B0 BL 0x1C16CF4
	0x03CEA6B4 MOVZ W8, 0x1
	0x03CEA6B8 STRB W8, [X22 + 0x738]
	0x03CEA6BC MOV X0, X20
	0x03CEA6C0 MOV X1, X19
	0x03CEA6C4 STR X31, [X31 + 0x8]
	0x03CEA6C8 BL 0x3CEA4D4
	0x03CEA6CC LDR X0, [X21]
	0x03CEA6D0 LDR W8, [X0 + 0xE0]
	0x03CEA6D4 CBNZ W8, 0x3CEA6DC
	0x03CEA6D8 BL 0x1C16DFC
	0x03CEA6DC CBZ X19, 0x3CEA77C
	0x03CEA6E0 LDR X8, [X21]
	0x03CEA6E4 MOV X0, X19
	0x03CEA6E8 MOV X2, X31
	0x03CEA6EC LDR X8, [X8 + 0xB8]
	0x03CEA6F0 LDR W1, [X8]
	0x03CEA6F4 BL 0x3DF3018
	0x03CEA6F8 CBZ X0, 0x3CEA718
	0x03CEA6FC LDR X0, [X20 + 0x58]
	0x03CEA700 CBZ X0, 0x3CEA77C
	0x03CEA704 ADRP X8, 0x478000
	0x03CEA708 LDR X8, [X8 + 0x7D0]
	0x03CEA70C MOV X1, X19
	0x03CEA710 LDR X2, [X8]
	0x03CEA714 BL 0x2DBE67C
	0x03CEA718 LDR X8, [X19 + 0x378]
	0x03CEA71C ADD X0, X31, 0x8
	0x03CEA720 MOV X1, X31
	0x03CEA724 STR X8, [X31 + 0x8]
	0x03CEA728 BL 0x3DF8994
	0x03CEA72C CMP W0, 0x1
	0x03CEA730 B.LT 0x3CEA76C
	0x03CEA734 MOV W21, W0
	0x03CEA738 MOV W22, W31
	0x03CEA73C LDR X8, [X19 + 0x378]
	0x03CEA740 ADD X0, X31, 0x8
	0x03CEA744 MOV W1, W22
	0x03CEA748 MOV X2, X31
	0x03CEA74C STR X8, [X31 + 0x8]
	0x03CEA750 BL 0x3DF98E4
	0x03CEA754 MOV X1, X0
	0x03CEA758 MOV X0, X20
	0x03CEA75C BL 0x3CEA674
	0x03CEA760 ADD W22, W22, 0x1
	0x03CEA764 CMP W21, W22
	0x03CEA768 B.NE 0x3CEA73C
	0x03CEA76C LDP X20, X19, [X31 + 0x20]
	0x03CEA770 LDP X22, X21, [X31 + 0x10]
	0x03CEA774 LDR X30, [X31], #0x30
	0x03CEA778 RET
	0x03CEA77C BL 0x1C16F20
	0x03CEA780 STR X30, [X31 - 0x30]!
	0x03CEA784 STP X22, X21, [X31 + 0x10]
	0x03CEA788 STP X20, X19, [X31 + 0x20]
	0x03CEA78C ADRP X22, 0x6FD000
	0x03CEA790 LDRB W8, [X22 + 0x739]
	0x03CEA794 MOV W21, W2
	0x03CEA798 MOV X19, X1
	0x03CEA79C MOV X20, X0
	0x03CEA7A0 TBNZ X8, 0x0, 0x3CEA7C4
	0x03CEA7A4 ADRP X0, 0x478000
	0x03CEA7A8 LDR X0, [X0 + 0x7C8]
	0x03CEA7AC BL 0x1C16CF4
	0x03CEA7B0 ADRP X0, 0x478000
	0x03CEA7B4 LDR X0, [X0 + 0x7B8]
	0x03CEA7B8 BL 0x1C16CF4
	0x03CEA7BC MOVZ W8, 0x1
	0x03CEA7C0 STRB W8, [X22 + 0x739]
	0x03CEA7C4 MOV X0, X20
	0x03CEA7C8 MOV X1, X19
	0x03CEA7CC MOV W2, W21
	0x03CEA7D0 MOV X3, X31
	0x03CEA7D4 BL 0x3D1AD8C
	0x03CEA7D8 TBZ X21, 0x0, 0x3CEA864
	0x03CEA7DC MOV X1, X19
	0x03CEA7E0 BL 0x3CEA294
	0x03CEA7E4 CBZ X0, 0x3CEA7F8
	0x03CEA7E8 MOV X0, X20
	0x03CEA7EC MOV X1, X19
	0x03CEA7F0 BL 0x3CEA454
	0x03CEA7F4 B 0x3CEA804
	0x03CEA7F8 MOV X0, X20
	0x03CEA7FC MOV X1, X19
	0x03CEA800 BL 0x3CEA4D4
	0x03CEA804 ADRP X21, 0x478000
	0x03CEA808 LDR X21, [X21 + 0x7B8]
	0x03CEA80C LDR X0, [X21]
	0x03CEA810 LDR W8, [X0 + 0xE0]
	0x03CEA814 CBNZ W8, 0x3CEA81C
	0x03CEA818 BL 0x1C16DFC
	0x03CEA81C CBZ X19, 0x3CEA874
	0x03CEA820 LDR X8, [X21]
	0x03CEA824 MOV X0, X19
	0x03CEA828 MOV X2, X31
	0x03CEA82C LDR X8, [X8 + 0xB8]
	0x03CEA830 LDR W1, [X8]
	0x03CEA834 BL 0x3DF3018
	0x03CEA838 CBZ X0, 0x3CEA864
	0x03CEA83C LDR X0, [X20 + 0x58]
	0x03CEA840 CBZ X0, 0x3CEA874
	0x03CEA844 ADRP X8, 0x478000
	0x03CEA848 LDR X8, [X8 + 0x7C8]
	0x03CEA84C MOV X1, X19
	0x03CEA850 LDP X20, X19, [X31 + 0x20]
	0x03CEA854 LDP X22, X21, [X31 + 0x10]
	0x03CEA858 LDR X2, [X8]
	0x03CEA85C LDR X30, [X31], #0x30
	0x03CEA860 B 0x2DBEF30
	0x03CEA864 LDP X20, X19, [X31 + 0x20]
	0x03CEA868 LDP X22, X21, [X31 + 0x10]
	0x03CEA86C LDR X30, [X31], #0x30
	0x03CEA870 RET
	0x03CEA874 BL 0x1C16F20
	0x03CEA878 CMP W2, 0x1
	0x03CEA87C B.EQ 0x3CEA888
	0x03CEA880 CBNZ W2, 0x3CEA88C
	0x03CEA884 B 0x3CEA55C
	0x03CEA888 B 0x3CEA674
	0x03CEA88C RET
	0x03CEA890 STR X30, [X31 - 0x20]!
	0x03CEA894 STP X20, X19, [X31 + 0x10]
	0x03CEA898 ADRP X19, 0x6FD000
	0x03CEA89C ADRP X20, 0x433000
	0x03CEA8A0 LDRB W8, [X19 + 0x73A]
	0x03CEA8A4 LDR X20, [X20 + 0xD08]
	0x03CEA8A8 TBNZ X8, 0x0, 0x3CEA8C0
	0x03CEA8AC ADRP X0, 0x433000
	0x03CEA8B0 LDR X0, [X0 + 0xD08]
	0x03CEA8B4 BL 0x1C16CF4
	0x03CEA8B8 MOVZ W8, 0x1
	0x03CEA8BC STRB W8, [X19 + 0x73A]
	0x03CEA8C0 LDR X0, [X20]
	0x03CEA8C4 LDR W8, [X0 + 0xE0]
	0x03CEA8C8 CBNZ W8, 0x3CEA8D0
	0x03CEA8CC BL 0x1C16DFC
	0x03CEA8D0 LDP X20, X19, [X31 + 0x10]
	0x03CEA8D4 MOV X0, X31
	0x03CEA8D8 LDR X30, [X31], #0x20
	0x03CEA8DC B 0x3DBD7F8
	0x03CEA8E0 SUB X31, X31, 0xA0
	0x03CEA8E4 STR X30, [X31 + 0x50]
	0x03CEA8E8 STP X26, X25, [X31 + 0x60]
	0x03CEA8EC STP X24, X23, [X31 + 0x70]
	0x03CEA8F0 STP X22, X21, [X31 + 0x80]
	0x03CEA8F4 STP X20, X19, [X31 + 0x90]
	0x03CEA8F8 ADRP X20, 0x6FD000
	0x03CEA8FC LDRB W8, [X20 + 0x73B]
	0x03CEA900 MOV X19, X0
	0x03CEA904 TBNZ X8, 0x0, 0x3CEA964
	0x03CEA908 ADRP X0, 0x478000
	0x03CEA90C LDR X0, [X0 + 0x7D8]
	0x03CEA910 BL 0x1C16CF4
	0x03CEA914 ADRP X0, 0x478000
	0x03CEA918 LDR X0, [X0 + 0x7E0]
	0x03CEA91C BL 0x1C16CF4
	0x03CEA920 ADRP X0, 0x478000
	0x03CEA924 LDR X0, [X0 + 0x7E8]
	0x03CEA928 BL 0x1C16CF4
	0x03CEA92C ADRP X0, 0x478000
	0x03CEA930 LDR X0, [X0 + 0x7C8]
	0x03CEA934 BL 0x1C16CF4
	0x03CEA938 ADRP X0, 0x478000
	0x03CEA93C LDR X0, [X0 + 0x7F0]
	0x03CEA940 BL 0x1C16CF4
	0x03CEA944 ADRP X0, 0x478000
	0x03CEA948 LDR X0, [X0 + 0x7F8]
	0x03CEA94C BL 0x1C16CF4
	0x03CEA950 ADRP X0, 0x478000
	0x03CEA954 LDR X0, [X0 + 0x7D0]
	0x03CEA958 BL 0x1C16CF4
	0x03CEA95C MOVZ W8, 0x1
	0x03CEA960 STRB W8, [X20 + 0x73B]
	0x03CEA964 STP X31, X31, [X31 + 0x30]
	0x03CEA968 STR X31, [X31 + 0x40]
	0x03CEA96C STP X31, X31, [X31 + 0x18]
	0x03CEA970 STR X31, [X31 + 0x28]
	0x03CEA974 LDR X0, [X19 + 0x40]
	0x03CEA978 CBZ X0, 0x3CEAA98
	0x03CEA97C ADRP X26, 0x478000
	0x03CEA980 LDR X26, [X26 + 0x7F8]
	0x03CEA984 ADRP X24, 0x478000
	0x03CEA988 ADRP X21, 0x478000
	0x03CEA98C LDR X24, [X24 + 0x7E0]
	0x03CEA990 LDR X21, [X21 + 0x7C8]
	0x03CEA994 LDR X1, [X26]
	0x03CEA998 ADRP X23, 0x478000
	0x03CEA99C ADRP X25, 0x478000
	0x03CEA9A0 ADRP X22, 0x478000
	0x03CEA9A4 LDR X23, [X23 + 0x7F0]
	0x03CEA9A8 LDR X25, [X25 + 0x7D0]
	0x03CEA9AC LDR X22, [X22 + 0x7D8]
	0x03CEA9B0 ADD X8, X31, 0x0
	0x03CEA9B4 BL 0x2DBE924
	0x03CEA9B8 LDR V0, [X31]
	0x03CEA9BC LDR X8, [X31 + 0x10]
	0x03CEA9C0 STR V0, [X31 + 0x3]
	0x03CEA9C4 STR X8, [X31 + 0x40]
	0x03CEA9C8 LDR X1, [X24]
	0x03CEA9CC ADD X0, X31, 0x30
	0x03CEA9D0 BL 0x2BC3C64
	0x03CEA9D4 TBZ X0, 0x0, 0x3CEAA00
	0x03CEA9D8 LDR X20, [X31 + 0x40]
	0x03CEA9DC MOV X1, X20
	0x03CEA9E0 BL 0x3CEA294
	0x03CEA9E4 CBZ X0, 0x3CEA9C8
	0x03CEA9E8 LDR X0, [X19 + 0x38]
	0x03CEA9EC CBZ X0, 0x3CEAA94
	0x03CEA9F0 LDR X2, [X21]
	0x03CEA9F4 MOV X1, X20
	0x03CEA9F8 BL 0x2DBEF30
	0x03CEA9FC B 0x3CEA9C8
	0x03CEAA00 LDR X1, [X22]
	0x03CEAA04 ADD X0, X31, 0x30

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], D8
	003 Move [X31+144], X30
	004 Move [X31+152], X27
	005 Move [X31+160], X26
	006 Move [X31+168], X25
	007 Move [X31+176], X24
	008 Move [X31+184], X23
	009 Move [X31+192], X22
	010 Move [X31+200], X21
	011 Move [X31+208], X20
	012 Move [X31+216], X19
	013 Move X25, X1
	014 Move X24, X0
	015 Add X0, X31, 112
	016 Move S0, W31
	017 Move X1, X31
	018 Move X19, X6
	019 Move X20, X5
	020 Move X21, X4
	021 Move X23, X3
	022 Move X22, X2
	023 Move [X31+96], W31
	024 Move [X31+88], X31
	025 Move [X31+112], X31
	026 Call Length..ctor, X0, V0
	027 Move X8, [X31+112]
	028 Move [X31+112], X24
	029 Move [X31+120], W25
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 Move [X31+92], X8
	032 Move X26, [X31+88]
	033 Move X8, X8
	034 ShiftRight X8, 32
	035 And X8, X8, 0x7FFFFFFF
	036 Move [X31+96], W8
	037 Move X2, X31
	038 Move [X31+88], X26
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 Call Length.op_Equality, X0, X1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {104}
	046 Add X0, X31, 112
	047 Move S0, W31
	048 Move X1, X31
	049 Move [X31+96], W31
	050 Move [X31+88], X31
	051 Move [X31+112], X31
	052 Call Length..ctor, X0, V0
	053 Move X8, [X31+112]
	054 Move [X31+112], X22
	055 Move [X31+120], W23
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move [X31+92], X8
	058 Move X26, [X31+88]
	059 Move X8, X8
	060 ShiftRight X8, 32
	061 And X8, X8, 0x7FFFFFFF
	062 Move [X31+96], W8
	063 Move X2, X31
	064 Move [X31+88], X26
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Call Length.op_Equality, X0, X1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {104}
	072 Move X8, X21
	073 ShiftRight X8, 32
	074 And X8, X8, 0x7FFFFFFF
	075 Compare X8, 0
	076 JumpIfNotEqual {104}
	077 Compare W21, 0
	078 JumpIfNotEqual {104}
	079 Move W8, [X20+16]
	080 Move V0, [X20]
	081 Add X0, X31, 88
	082 Move W1, 1
	083 Move [X31+88], X31
	084 Move [X31+96], X31
	085 Move [X31+80], W8
	086 Move [X31+4], V0
	087 Move [X31+104], W31
	088 Move W27, 1
	089 Call BackgroundSize..ctor, X0, X1
	090 Move W8, [X31+88]
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 Add X0, X31, 64
	094 Add X1, X31, 88
	095 Move [X31+88], W8
	096 Move [X31+92], X9
	097 Move [X31+100], X10
	098 Call BackgroundSize.Equals, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {104}
	103 Move W26, 1
	104 Add X0, X31, 112
	105 Move S0, W31
	106 Move X1, X31
	107 Move [X31+96], W31
	108 Move [X31+88], X31
	109 Move [X31+112], X31
	110 Call Length..ctor, X0, V0
	111 Move X8, [X31+112]
	112 Move [X31+112], X24
	113 Move [X31+120], W25
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 Move [X31+92], X8
	116 Move X26, [X31+88]
	117 Move X8, X8
	118 ShiftRight X8, 32
	119 And X8, X8, 0x7FFFFFFF
	120 Move [X31+96], W8
	121 Move X2, X31
	122 Move [X31+88], X26
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 Call Length.op_Equality, X0, X1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move TEMP, X0
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfNotEqual {187}
	130 Add X0, X31, 112
	131 Move S0, W31
	132 Move X1, X31
	133 Move [X31+96], W31
	134 Move [X31+88], X31
	135 Move [X31+112], X31
	136 Call Length..ctor, X0, V0
	137 Move X8, [X31+112]
	138 Move [X31+112], X22
	139 Move [X31+120], W23
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 Move [X31+92], X8
	142 Move X26, [X31+88]
	143 Move X8, X8
	144 ShiftRight X8, 32
	145 And X8, X8, 0x7FFFFFFF
	146 Move [X31+96], W8
	147 Move X2, X31
	148 Move [X31+88], X26
	149 NotImplemented "Instruction LDUR not yet implemented."
	150 Call Length.op_Equality, X0, X1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {187}
	156 Move X8, X21
	157 ShiftRight X8, 32
	158 And X8, X8, 0x7FFFFFFF
	159 Compare X8, 0
	160 JumpIfNotEqual {187}
	161 Compare W21, 0
	162 JumpIfNotEqual {187}
	163 Move W8, [X20+16]
	164 Move V0, [X20]
	165 Add X0, X31, 88
	166 Move W1, 2
	167 Move [X31+88], X31
	168 Move [X31+96], X31
	169 Move [X31+48], W8
	170 Move [X31+2], V0
	171 Move [X31+104], W31
	172 Move W26, 2
	173 Call BackgroundSize..ctor, X0, X1
	174 Move W8, [X31+88]
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 Add X0, X31, 32
	178 Add X1, X31, 88
	179 Move [X31+88], W8
	180 Move [X31+92], X9
	181 Move [X31+100], X10
	182 Call BackgroundSize.Equals, X0, X1
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {270}
	187 Add X0, X31, 112
	188 Move S0, W31
	189 Move X1, X31
	190 Move [X31+96], W31
	191 Move [X31+88], X31
	192 Move [X31+112], X31
	193 Call Length..ctor, X0, V0
	194 Move X8, [X31+112]
	195 Move [X31+112], X24
	196 Move [X31+120], W25
	197 NotImplemented "Instruction LDUR not yet implemented."
	198 Move [X31+92], X8
	199 Move X26, [X31+88]
	200 Move X8, X8
	201 ShiftRight X8, 32
	202 And X8, X8, 0x7FFFFFFF
	203 Move [X31+96], W8
	204 Move X2, X31
	205 Move [X31+88], X26
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 Call Length.op_Equality, X0, X1
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {271}
	213 Add X0, X31, 112
	214 Move S0, W31
	215 Move X1, X31
	216 Move [X31+96], W31
	217 Move [X31+88], X31
	218 Move [X31+112], X31
	219 Call Length..ctor, X0, V0
	220 Move X8, [X31+112]
	221 Move [X31+112], X22
	222 Move [X31+120], W23
	223 NotImplemented "Instruction LDUR not yet implemented."
	224 Move [X31+92], X8
	225 Move X24, [X31+88]
	226 Move X8, X8
	227 ShiftRight X8, 32
	228 And X8, X8, 0x7FFFFFFF
	229 Move [X31+96], W8
	230 Move X2, X31
	231 Move [X31+88], X24
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 Call Length.op_Equality, X0, X1
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {271}
	239 Move X8, X21
	240 ShiftRight X8, 32
	241 And X8, X8, 0x7FFFFFFF
	242 Compare X8, 0
	243 JumpIfNotEqual {271}
	244 Compare W21, 0
	245 JumpIfNotEqual {271}
	246 Move W8, [X20+16]
	247 Move V0, [X20]
	248 Move X0, X31
	249 Move [X31+16], W8
	250 Move W8, 0x42C80000
	251 Move S8, W8
	252 Move [X31], V0
	253 Move V0, V8
	254 Call Length.Percent, V0
	255 Move X20, X0
	256 Move V0, V8
	257 Move X0, X31
	258 Call Length.Percent, V0
	259 Move [X31+100], X0
	260 Add X0, X31, 0
	261 Add X1, X31, 88
	262 Move [X31+88], W31
	263 Move [X31+92], X20
	264 Call BackgroundSize.Equals, X0, X1
	265 Move TEMP, X0
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfNotEqual {271}
	269 Move W26, W31
	270 Move W27, 1
	271 Move W27, W31
	272 Move W26, W31
	273 Move [X19], W27
	274 Move W0, W26
	275 Move X20, [X31+208]
	276 Move X19, [X31+216]
	277 Move X22, [X31+192]
	278 Move X21, [X31+200]
	279 Move X24, [X31+176]
	280 Move X23, [X31+184]
	281 Move X26, [X31+160]
	282 Move X25, [X31+168]
	283 Move X30, [X31+144]
	284 Move X27, [X31+152]
	285 Move V8, [X31+128]
	286 Add X31, X31, 224
	287 Return X0

