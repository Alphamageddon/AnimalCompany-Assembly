Type: UnityEngine.UIElements.ElementUnderPointer

Method: UnityEngine.UIElements.VisualElement GetTopElementUnderPointer(System.Int32 pointerId, out UnityEngine.Vector2 pickPosition, out System.Boolean isTemporary)

Disassembly:
	0x03D9F584 ADRP X8, 0x3C9000
	0x03D9F588 LDR X8, [X8 + 0x30]
	0x03D9F58C LDR X0, [X8]
	0x03D9F590 BL 0x2D0D5C8
	0x03D9F594 CMP X26, X0
	0x03D9F598 B.NE 0x3D9F470
	0x03D9F59C ADD X0, X31, 0x10
	0x03D9F5A0 MOV X1, X20
	0x03D9F5A4 BL 0x3D9B238
	0x03D9F5A8 MOV X0, X23
	0x03D9F5AC MOV X1, X24
	0x03D9F5B0 MOV X2, X31
	0x03D9F5B4 MOV V0.16B, V8.16B
	0x03D9F5B8 MOV V1.16B, V9.16B
	0x03D9F5BC MOV W3, W22
	0x03D9F5C0 BL 0x3D9F8CC
	0x03D9F5C4 ADRP X8, 0x3C9000
	0x03D9F5C8 LDR X8, [X8 + 0x88]
	0x03D9F5CC LDR X4, [X8]
	0x03D9F5D0 MOV X0, X23
	0x03D9F5D4 MOV X1, X24
	0x03D9F5D8 MOV X2, X31
	0x03D9F5DC MOV V0.16B, V8.16B
	0x03D9F5E0 MOV V1.16B, V9.16B
	0x03D9F5E4 MOV W3, W22
	0x03D9F5E8 BL 0x2231AE8
	0x03D9F5EC ADRP X8, 0x37D000
	0x03D9F5F0 LDR X8, [X8 + 0xE50]
	0x03D9F5F4 LDR X0, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+48]
	003 Compare X9, 0
	004 JumpIfEqual {28}
	005 Move W8, [X9+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X8, W1
	008 Add X9, X9, X8
	009 Move V0, [X9+32]
	010 Move [X2], D0
	011 Move X9, [X0+56]
	012 Compare X9, 0
	013 JumpIfEqual {28}
	014 Move W10, [X9+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Add X9, X9, X8
	017 Move W9, [X9+32]
	018 Move [X3], W9
	019 Move X9, [X0+16]
	020 Compare X9, 0
	021 JumpIfEqual {28}
	022 Move W10, [X9+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X8, X9, X8
	025 Move X0, [X8+32]
	026 Move X30, [X31+16]
	027 Return X0
	028 Call 0x1C17F20
	029 Call 0x1C17F28

Method: UnityEngine.UIElements.VisualElement GetTopElementUnderPointer(System.Int32 pointerId)

Disassembly:
	0x03D9F5F8 LDR W8, [X0 + 0xE0]
	0x03D9F5FC CBNZ W8, 0x3D9F610
	0x03D9F600 BL 0x1C16DFC
	0x03D9F604 ADRP X8, 0x37D000
	0x03D9F608 LDR X8, [X8 + 0xE50]
	0x03D9F60C LDR X0, [X8]
	0x03D9F610 LDR X8, [X0 + 0xB8]
	0x03D9F614 LDR W8, [X8 + 0x8]
	0x03D9F618 CMP X22, X8
	0x03D9F61C B.NE 0x3D9F65C
	0x03D9F620 MOV X0, X23
	0x03D9F624 MOV X1, X24

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X8, X8, W1
	008 Move X0, [X8+32]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: System.Void SetElementUnderPointer(UnityEngine.UIElements.VisualElement newElementUnderPointer, System.Int32 pointerId, UnityEngine.Vector2 pointerPos)

Disassembly:
	0x03D9F628 MOV X2, X25
	0x03D9F62C MOV V0.16B, V8.16B
	0x03D9F630 MOV V1.16B, V9.16B
	0x03D9F634 BL 0x3D9FC44
	0x03D9F638 ADRP X8, 0x3C9000
	0x03D9F63C LDR X8, [X8 + 0x80]
	0x03D9F640 LDR X3, [X8]
	0x03D9F644 MOV X0, X23
	0x03D9F648 MOV X1, X24
	0x03D9F64C MOV X2, X25
	0x03D9F650 MOV V0.16B, V8.16B
	0x03D9F654 MOV V1.16B, V9.16B
	0x03D9F658 BL 0x221FA20
	0x03D9F65C MOV X23, X31
	0x03D9F660 MOVZ W19, 0x1E
	0x03D9F664 LDR X0, [X31 + 0x10]
	0x03D9F668 CBZ X0, 0x3D9F780
	0x03D9F66C BL 0x3D9B2C8
	0x03D9F670 CBNZ X23, 0x3D9F798
	0x03D9F674 CMP W19, 0x1E
	0x03D9F678 B.EQ 0x3D9F470
	0x03D9F67C CBZ W19, 0x3D9F470
	0x03D9F680 B 0x3D9F758
	0x03D9F684 BL 0x1C16F20
	0x03D9F688 B 0x3D9F7C0
	0x03D9F68C BL 0x1C16F28
	0x03D9F690 B 0x3D9F7A8
	0x03D9F694 B 0x3D9F6A4
	0x03D9F698 B 0x3D9F6A4
	0x03D9F69C B 0x3D9F6A4
	0x03D9F6A0 B 0x3D9F6A4
	0x03D9F6A4 MOV X26, X0
	0x03D9F6A8 CMP W1, 0x1
	0x03D9F6AC B.NE 0x3D9F7B0
	0x03D9F6B0 MOV X0, X26
	0x03D9F6B4 BL 0x3EB1AD0
	0x03D9F6B8 LDR X23, [X0]
	0x03D9F6BC BL 0x3EB1AE0
	0x03D9F6C0 MOV W19, W31
	0x03D9F6C4 B 0x3D9F664
	0x03D9F6C8 B 0x3D9F734
	0x03D9F6CC B 0x3D9F734
	0x03D9F6D0 B 0x3D9F734
	0x03D9F6D4 B 0x3D9F734
	0x03D9F6D8 B 0x3D9F6DC
	0x03D9F6DC MOV X26, X0
	0x03D9F6E0 CMP W1, 0x1
	0x03D9F6E4 B.NE 0x3D9F7B8
	0x03D9F6E8 MOV X0, X26
	0x03D9F6EC BL 0x3EB1AD0
	0x03D9F6F0 LDR X23, [X0]
	0x03D9F6F4 BL 0x3EB1AE0
	0x03D9F6F8 MOV W19, W31
	0x03D9F6FC B 0x3D9F454
	0x03D9F700 B 0x3D9F704
	0x03D9F704 MOV X26, X0
	0x03D9F708 CMP W1, 0x1
	0x03D9F70C B.NE 0x3D9F7A0
	0x03D9F710 MOV X0, X26
	0x03D9F714 BL 0x3EB1AD0
	0x03D9F718 LDR X25, [X0]
	0x03D9F71C BL 0x3EB1AE0
	0x03D9F720 MOV W19, W31
	0x03D9F724 B 0x3D9F1E4
	0x03D9F728 B 0x3D9F734
	0x03D9F72C B 0x3D9F734
	0x03D9F730 B 0x3D9F734
	0x03D9F734 MOV X26, X0
	0x03D9F738 CMP W1, 0x1
	0x03D9F73C B.NE 0x3D9F7A8
	0x03D9F740 MOV X0, X26
	0x03D9F744 BL 0x3EB1AD0
	0x03D9F748 LDR X25, [X0]
	0x03D9F74C BL 0x3EB1AE0
	0x03D9F750 MOV W19, W31
	0x03D9F754 B 0x3D9EF80
	0x03D9F758 LDP X20, X19, [X31 + 0x90]
	0x03D9F75C LDP X22, X21, [X31 + 0x80]
	0x03D9F760 LDP X24, X23, [X31 + 0x70]
	0x03D9F764 LDP X26, X25, [X31 + 0x60]
	0x03D9F768 LDP X28, X27, [X31 + 0x50]
	0x03D9F76C LDP X29, X30, [X31 + 0x40]
	0x03D9F770 LDP D9, D8, [X31 + 0x30]
	0x03D9F774 ADD X31, X31, 0xA0
	0x03D9F778 RET
	0x03D9F77C BL 0x1C16F28
	0x03D9F780 BL 0x1C16F20
	0x03D9F784 BL 0x1C16F44

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x649000
	010 Move X23, 0x355000
	011 Move W8, [X22+3772]
	012 Move X23, [X23+2600]
	013 Move V8, V1
	014 Move V9, V0
	015 Move W19, W2
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x355000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3772], W8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 NotImplemented "Instruction ORN not yet implemented."
	033 Move W0, W8
	034 ShiftRight W0, 31
	035 And W0, W0, 0x7FFFFFFF
	036 Move X1, X31
	037 Call Debug.Assert, X0
	038 Move X8, [X20+24]
	039 Compare X8, 0
	040 JumpIfEqual {100}
	041 Move W9, [X8+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X9, [X20+56]
	044 Compare X9, 0
	045 JumpIfEqual {100}
	046 Move W10, [X9+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X22, W19
	049 Add X8, X8, X22
	050 Add X9, X9, X22
	051 Move X8, [X8+32]
	052 Move [X9+32], W31
	053 Move X9, [X20+48]
	054 Compare X9, 0
	055 JumpIfEqual {100}
	056 Move W10, [X9+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X9, X9, X22
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X9+32], S9
	061 Move [X9+40], S8
	062 Move X23, [X20+16]
	063 Compare X23, 0
	064 JumpIfEqual {100}
	065 Compare X21, 0
	066 JumpIfEqual {73}
	067 Move X8, [X23]
	068 Move X0, X21
	069 Move X1, [X8+64]
	070 Call 0x1C17E00
	071 Compare X0, 0
	072 JumpIfEqual {102}
	073 Move W8, [X23+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X8, X23, X22
	076 Move [X8+32], X21
	077 Move X8, [X20+32]
	078 Compare X8, 0
	079 JumpIfEqual {100}
	080 Move W9, [X8+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X8, X8, X22
	083 Move [X8+32], X31
	084 Move X8, [X20+40]
	085 Compare X8, 0
	086 JumpIfEqual {100}
	087 Move W9, [X8+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X8, X8, X22
	090 Move [X8+32], X31
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X30, [X31+16]
	096 Move X23, [X31+24]
	097 Move D9, [X31+64]
	098 Move D8, [X31+72]
	099 Return 
	100 Call 0x1C17F20
	101 Call 0x1C17F28
	102 Call 0x1C17F44
	103 Move X1, X31
	104 Call 0x1C17DEC

Method: UnityEngine.Vector2 GetEventPointerPosition(UnityEngine.UIElements.EventBase triggerEvent)

Disassembly:
	0x03D9F788 MOV X1, X31
	0x03D9F78C BL 0x1C16DEC
	0x03D9F790 MOV X0, X25
	0x03D9F794 BL 0x1C16F18
	0x03D9F798 MOV X0, X23
	0x03D9F79C BL 0x1C16F18
	0x03D9F7A0 MOV X25, X31
	0x03D9F7A4 B 0x3D9F824
	0x03D9F7A8 MOV X25, X31
	0x03D9F7AC B 0x3D9F804
	0x03D9F7B0 MOV X23, X31
	0x03D9F7B4 B 0x3D9F7E4
	0x03D9F7B8 MOV X23, X31
	0x03D9F7BC B 0x3D9F7C4
	0x03D9F7C0 MOV X26, X0
	0x03D9F7C4 LDR X0, [X31 + 0x18]
	0x03D9F7C8 CBNZ X0, 0x3D9F7D0
	0x03D9F7CC BL 0x1C16F20
	0x03D9F7D0 BL 0x3D9B2C8
	0x03D9F7D4 CBZ X23, 0x3D9F838
	0x03D9F7D8 MOV X0, X23
	0x03D9F7DC BL 0x1C16F18
	0x03D9F7E0 MOV X26, X0
	0x03D9F7E4 LDR X0, [X31 + 0x10]
	0x03D9F7E8 CBNZ X0, 0x3D9F7F0
	0x03D9F7EC BL 0x1C16F20
	0x03D9F7F0 BL 0x3D9B2C8
	0x03D9F7F4 CBZ X23, 0x3D9F838
	0x03D9F7F8 MOV X0, X23
	0x03D9F7FC BL 0x1C16F18
	0x03D9F800 MOV X26, X0
	0x03D9F804 LDR X0, [X31 + 0x28]
	0x03D9F808 CBNZ X0, 0x3D9F810
	0x03D9F80C BL 0x1C16F20
	0x03D9F810 BL 0x3D9B2C8
	0x03D9F814 CBZ X25, 0x3D9F838
	0x03D9F818 MOV X0, X25
	0x03D9F81C BL 0x1C16F18
	0x03D9F820 MOV X26, X0
	0x03D9F824 LDR X0, [X31 + 0x20]
	0x03D9F828 CBNZ X0, 0x3D9F830
	0x03D9F82C BL 0x1C16F20
	0x03D9F830 BL 0x3D9B2C8
	0x03D9F834 CBNZ X25, 0x3D9F840
	0x03D9F838 MOV X0, X26
	0x03D9F83C BL 0x1D2C690
	0x03D9F840 MOV X0, X25
	0x03D9F844 BL 0x1C16F18
	0x03D9F848 BL 0x1990590
	0x03D9F84C STP X30, X21, [X31 - 0x20]!
	0x03D9F850 STP X20, X19, [X31 + 0x10]
	0x03D9F854 ADRP X21, 0x648000
	0x03D9F858 ADRP X20, 0x37C000
	0x03D9F85C LDRB W8, [X21 + 0xF83]
	0x03D9F860 LDR X20, [X20 + 0x958]
	0x03D9F864 MOV W19, W0
	0x03D9F868 TBNZ X8, 0x0, 0x3D9F880
	0x03D9F86C ADRP X0, 0x37C000
	0x03D9F870 LDR X0, [X0 + 0x958]
	0x03D9F874 BL 0x1C16CF4
	0x03D9F878 MOVZ W8, 0x1
	0x03D9F87C STRB W8, [X21 + 0xF83]
	0x03D9F880 LDR X0, [X20]
	0x03D9F884 LDR W8, [X0 + 0xE0]
	0x03D9F888 CBNZ W8, 0x3D9F894
	0x03D9F88C BL 0x1C16DFC
	0x03D9F890 LDR X0, [X20]
	0x03D9F894 LDR X8, [X0 + 0xB8]
	0x03D9F898 LDR X8, [X8]
	0x03D9F89C CBZ X8, 0x3D9F8C4
	0x03D9F8A0 LDR W9, [X8 + 0x18]
	0x03D9F8A4 CMP W9, W19
	0x03D9F8A8 B.LS 0x3D9F8C8
	0x03D9F8AC MOVZ W9, 0x18
	0x03D9F8B0 SMADDL X8, X19, X9, X8
	0x03D9F8B4 LDP S0, S1, [X8 + 0x20]
	0x03D9F8B8 LDP X20, X19, [X31 + 0x10]
	0x03D9F8BC LDP X30, X21, [X31], #0x20
	0x03D9F8C0 RET
	0x03D9F8C4 BL 0x1C16F20
	0x03D9F8C8 BL 0x1C16F28
	0x03D9F8CC SUB X31, X31, 0x60
	0x03D9F8D0 STP D9, D8, [X31 + 0x10]
	0x03D9F8D4 STP X30, X25, [X31 + 0x20]
	0x03D9F8D8 STP X24, X23, [X31 + 0x30]
	0x03D9F8DC STP X22, X21, [X31 + 0x40]
	0x03D9F8E0 STP X20, X19, [X31 + 0x50]
	0x03D9F8E4 ADRP X22, 0x648000
	0x03D9F8E8 LDRB W8, [X22 + 0xF60]
	0x03D9F8EC MOV W20, W3
	0x03D9F8F0 MOV V8.16B, V1.16B
	0x03D9F8F4 MOV V9.16B, V0.16B
	0x03D9F8F8 MOV X21, X2
	0x03D9F8FC MOV X19, X1
	0x03D9F900 MOV X23, X0
	0x03D9F904 TBNZ X8, 0x0, 0x3D9F934
	0x03D9F908 ADRP X0, 0x354000
	0x03D9F90C LDR X0, [X0 + 0xE00]
	0x03D9F910 BL 0x1C16CF4
	0x03D9F914 ADRP X0, 0x3C9000
	0x03D9F918 LDR X0, [X0 + 0x90]
	0x03D9F91C BL 0x1C16CF4
	0x03D9F920 ADRP X0, 0x3C9000
	0x03D9F924 LDR X0, [X0 + 0x98]
	0x03D9F928 BL 0x1C16CF4
	0x03D9F92C MOVZ W8, 0x1
	0x03D9F930 STRB W8, [X22 + 0xF60]
	0x03D9F934 ADRP X24, 0x354000
	0x03D9F938 LDR X24, [X24 + 0xE00]
	0x03D9F93C CBZ X23, 0x3D9FA0C

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x649000
	007 Move X21, 0x37E000
	008 Move W8, [X19+3773]
	009 Move X21, [X21+3704]
	010 Move X20, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x380000
	016 Move X0, [X0+3376]
	017 Call 0x1C17CF4
	018 Move X0, 0x37E000
	019 Move X0, [X0+3704]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3773], W8
	023 Move X1, [X21]
	024 Move X0, X20
	025 Call 0x1C17E00
	026 Compare X0, 0
	027 JumpIfEqual {43}
	028 Move X8, [X0]
	029 Move X1, [X21]
	030 Move X19, X0
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Compare X9, 0
	033 JumpIfEqual {40}
	034 Move X10, [X8+176]
	035 Add X10, X10, 8
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract X9, X9, 1
	039 Add X10, X10, 16
	040 Move W2, 5
	041 Move X0, X19
	042 Call 0x1C5D788
	043 Move X21, 0x380000
	044 Move X21, [X21+3376]
	045 Move X0, X20
	046 Move X1, [X21]
	047 Call 0x1C17E00
	048 Compare X0, 0
	049 JumpIfEqual {96}
	050 Move X8, [X0]
	051 Move X1, [X21]
	052 Move X19, X0
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move W2, 1
	063 Move X0, X19
	064 Call 0x1C5D788
	065 Move W9, [X10]
	066 Add W9, W9, 5
	067 Add X8, X8, W9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X19
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move X8, [X19]
	074 Move X1, [X21]
	075 Move V8, V0
	076 NotImplemented "Instruction LDRH not yet implemented."
	077 Compare X9, 0
	078 JumpIfEqual {85}
	079 Move X10, [X8+176]
	080 Add X10, X10, 8
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Subtract X9, X9, 1
	084 Add X10, X10, 16
	085 Move W2, 5
	086 Move X0, X19
	087 Call 0x1C5D788
	088 Move W9, [X10]
	089 Add W9, W9, 5
	090 Add X8, X8, W9
	091 Add X0, X8, 312
	092 Move X8, [X0]
	093 Move X1, [X0+8]
	094 Move X0, X19
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move TEMP, 0x800000
	097 Not TEMP
	098 Move W8, TEMP
	099 Move S8, W8
	100 Move V1, V8
	101 Move W9, [X10]
	102 Add W9, W9, 1
	103 Add X8, X8, W9
	104 Add X0, X8, 312
	105 Move X8, [X0]
	106 Move X1, [X0+8]
	107 Move X0, X19
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move V8, V0
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X30, [X31+16]
	113 Move X21, [X31+24]
	114 Move V0, V8
	115 Move V8, [X31+48]
	116 Return X0

Method: System.Void SetTemporaryElementUnderPointer(UnityEngine.UIElements.VisualElement newElementUnderPointer, System.Int32 pointerId, UnityEngine.UIElements.EventBase triggerEvent)

Disassembly:
	0x03D9F940 MOV X0, X23
	0x03D9F944 MOV X1, X31

ISIL:
	001 Move W4, 1

Method: System.Void SetElementUnderPointer(UnityEngine.UIElements.VisualElement newElementUnderPointer, System.Int32 pointerId, UnityEngine.UIElements.EventBase triggerEvent)

Disassembly:
	0x03D9FB94 LDR X0, [X31 + 0x8]
	0x03D9FB98 BL 0x1C16F18

ISIL:
	001 Move W4, W31
	002 Call ElementUnderPointer.SetElementUnderPointer, X0, X1, X2, X3, X4
	003 Return 

Method: System.Void SetElementUnderPointer(UnityEngine.UIElements.VisualElement newElementUnderPointer, System.Int32 pointerId, UnityEngine.UIElements.EventBase triggerEvent, System.Boolean temporary)

Disassembly:
	0x03D9F948 BL 0x3DEC0CC
	0x03D9F94C CBZ X0, 0x3D9FA0C
	0x03D9F950 ADRP X8, 0x3C9000
	0x03D9F954 LDR X8, [X8 + 0x98]
	0x03D9F958 MOV X0, X21
	0x03D9F95C MOV V0.16B, V9.16B
	0x03D9F960 MOV V1.16B, V8.16B
	0x03D9F964 LDR X2, [X8]
	0x03D9F968 MOV W1, W20
	0x03D9F96C BL 0x24A4FCC
	0x03D9F970 MOV X22, X0
	0x03D9F974 CBZ X0, 0x3D9FAE4
	0x03D9F978 LDR X8, [X22 + 0x48]
	0x03D9F97C STR X23, [X22 + 0x50]
	0x03D9F980 CBNZ X8, 0x3D9F988
	0x03D9F984 STR X23, [X22 + 0x48]
	0x03D9F988 LDR X8, [X23]
	0x03D9F98C LDP X9, X2, [X8 + 0x198]
	0x03D9F990 MOV X0, X23
	0x03D9F994 MOV X1, X22
	0x03D9F998 BLR X9
	0x03D9F99C MOV X23, X31
	0x03D9F9A0 MOVZ W25, 0x5
	0x03D9F9A4 LDR X8, [X22]
	0x03D9F9A8 LDR X1, [X24]
	0x03D9F9AC LDRH W9, [X8 + 0x12E]
	0x03D9F9B0 CBZ X9, 0x3D9F9D4
	0x03D9F9B4 LDR X10, [X8 + 0xB0]
	0x03D9F9B8 ADD X10, X10, 0x8
	0x03D9F9BC LDUR X11, [X10 - 0x8]
	0x03D9F9C0 CMP X11, X1
	0x03D9F9C4 B.EQ 0x3D9F9E4
	0x03D9F9C8 SUBS X9, X9, 0x1
	0x03D9F9CC ADD X10, X10, 0x10
	0x03D9F9D0 B.NE 0x3D9F9BC
	0x03D9F9D4 MOV X0, X22
	0x03D9F9D8 MOV W2, W31
	0x03D9F9DC BL 0x1C5C788
	0x03D9F9E0 B 0x3D9F9F0
	0x03D9F9E4 LDRSW X9, [X10]
	0x03D9F9E8 ADD X8, X8, X9, 0x4, LSL
	0x03D9F9EC ADD X0, X8, 0x138
	0x03D9F9F0 LDP X8, X1, [X0]
	0x03D9F9F4 MOV X0, X22
	0x03D9F9F8 BLR X8
	0x03D9F9FC CBNZ X23, 0x3D9FAE8
	0x03D9FA00 CMP W25, 0x5
	0x03D9FA04 B.EQ 0x3D9FA0C
	0x03D9FA08 CBNZ W25, 0x3D9FABC
	0x03D9FA0C CBZ X19, 0x3D9FABC
	0x03D9FA10 ADRP X8, 0x3C9000
	0x03D9FA14 LDR X8, [X8 + 0x90]
	0x03D9FA18 MOV X0, X21
	0x03D9FA1C MOV V0.16B, V9.16B
	0x03D9FA20 MOV V1.16B, V8.16B
	0x03D9FA24 LDR X2, [X8]
	0x03D9FA28 MOV W1, W20
	0x03D9FA2C BL 0x24A4FCC
	0x03D9FA30 MOV X20, X0
	0x03D9FA34 CBZ X0, 0x3D9FAD8
	0x03D9FA38 LDR X8, [X20 + 0x48]
	0x03D9FA3C STR X19, [X20 + 0x50]
	0x03D9FA40 CBNZ X8, 0x3D9FA48
	0x03D9FA44 STR X19, [X20 + 0x48]
	0x03D9FA48 LDR X8, [X19]
	0x03D9FA4C LDP X9, X2, [X8 + 0x198]
	0x03D9FA50 MOV X0, X19
	0x03D9FA54 MOV X1, X20
	0x03D9FA58 BLR X9
	0x03D9FA5C MOV X19, X31
	0x03D9FA60 LDR X8, [X20]
	0x03D9FA64 LDR X1, [X24]
	0x03D9FA68 LDRH W9, [X8 + 0x12E]
	0x03D9FA6C CBZ X9, 0x3D9FA90
	0x03D9FA70 LDR X10, [X8 + 0xB0]
	0x03D9FA74 ADD X10, X10, 0x8
	0x03D9FA78 LDUR X11, [X10 - 0x8]
	0x03D9FA7C CMP X11, X1
	0x03D9FA80 B.EQ 0x3D9FAA0
	0x03D9FA84 SUBS X9, X9, 0x1
	0x03D9FA88 ADD X10, X10, 0x10
	0x03D9FA8C B.NE 0x3D9FA78
	0x03D9FA90 MOV X0, X20
	0x03D9FA94 MOV W2, W31
	0x03D9FA98 BL 0x1C5C788
	0x03D9FA9C B 0x3D9FAAC
	0x03D9FAA0 LDRSW X9, [X10]
	0x03D9FAA4 ADD X8, X8, X9, 0x4, LSL
	0x03D9FAA8 ADD X0, X8, 0x138
	0x03D9FAAC LDP X8, X1, [X0]
	0x03D9FAB0 MOV X0, X20
	0x03D9FAB4 BLR X8
	0x03D9FAB8 CBNZ X19, 0x3D9FADC
	0x03D9FABC LDP X20, X19, [X31 + 0x50]
	0x03D9FAC0 LDP X22, X21, [X31 + 0x40]
	0x03D9FAC4 LDP X24, X23, [X31 + 0x30]
	0x03D9FAC8 LDP X30, X25, [X31 + 0x20]
	0x03D9FACC LDP D9, D8, [X31 + 0x10]
	0x03D9FAD0 ADD X31, X31, 0x60
	0x03D9FAD4 RET
	0x03D9FAD8 BL 0x1C16F20
	0x03D9FADC MOV X0, X19
	0x03D9FAE0 BL 0x1C16F18
	0x03D9FAE4 BL 0x1C16F20
	0x03D9FAE8 MOV X0, X23
	0x03D9FAEC BL 0x1C16F18
	0x03D9FAF0 B 0x3D9FAF4
	0x03D9FAF4 MOV X23, X0
	0x03D9FAF8 CMP W1, 0x1
	0x03D9FAFC B.NE 0x3D9FB24
	0x03D9FB00 MOV X0, X23
	0x03D9FB04 BL 0x3EB1AD0
	0x03D9FB08 LDR X8, [X0]
	0x03D9FB0C STR X8, [X31 + 0x8]
	0x03D9FB10 BL 0x3EB1AE0
	0x03D9FB14 LDR X23, [X31 + 0x8]
	0x03D9FB18 MOV W25, W31
	0x03D9FB1C CBNZ X22, 0x3D9F9A4
	0x03D9FB20 B 0x3D9F9FC
	0x03D9FB24 STR X31, [X31 + 0x8]
	0x03D9FB28 B 0x3D9FB30
	0x03D9FB2C MOV X23, X0
	0x03D9FB30 CBZ X22, 0x3D9FB8C
	0x03D9FB34 LDR X8, [X22]
	0x03D9FB38 LDR X1, [X24]
	0x03D9FB3C LDRH W9, [X8 + 0x12E]
	0x03D9FB40 CBZ X9, 0x3D9FB64
	0x03D9FB44 LDR X10, [X8 + 0xB0]
	0x03D9FB48 ADD X10, X10, 0x8
	0x03D9FB4C LDUR X11, [X10 - 0x8]
	0x03D9FB50 CMP X11, X1
	0x03D9FB54 B.EQ 0x3D9FB74
	0x03D9FB58 SUBS X9, X9, 0x1
	0x03D9FB5C ADD X10, X10, 0x10
	0x03D9FB60 B.NE 0x3D9FB4C
	0x03D9FB64 MOV X0, X22
	0x03D9FB68 MOV W2, W31
	0x03D9FB6C BL 0x1C5C788
	0x03D9FB70 B 0x3D9FB80
	0x03D9FB74 LDRSW X9, [X10]
	0x03D9FB78 ADD X8, X8, X9, 0x4, LSL
	0x03D9FB7C ADD X0, X8, 0x138
	0x03D9FB80 LDP X8, X1, [X0]
	0x03D9FB84 MOV X0, X22
	0x03D9FB88 BLR X8
	0x03D9FB8C LDR X8, [X31 + 0x8]
	0x03D9FB90 CBZ X8, 0x3D9FC30

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x649000
	010 Move X25, 0x355000
	011 Move W8, [X24+3774]
	012 Move X25, [X25+2600]
	013 Move W23, W4
	014 Move X20, X3
	015 Move W19, W2
	016 Move X22, X1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x355000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x380000
	026 Move X0, [X0+3376]
	027 Call 0x1C17CF4
	028 Move X0, 0x37E000
	029 Move X0, [X0+3704]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+3774], W8
	033 Move X0, [X25]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 NotImplemented "Instruction ORN not yet implemented."
	039 Move W0, W8
	040 ShiftRight W0, 31
	041 And W0, W0, 0x7FFFFFFF
	042 Move X1, X31
	043 Call Debug.Assert, X0
	044 Move X8, [X21+56]
	045 Compare X8, 0
	046 JumpIfEqual {167}
	047 Move W9, [X8+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X24, W19
	050 And W9, W23, 1
	051 Add X8, X8, X24
	052 Move [X8+32], W9
	053 Move X23, [X21+48]
	054 Move X1, X20
	055 Call ElementUnderPointer.GetEventPointerPosition, X0, X1
	056 Compare X23, 0
	057 JumpIfEqual {167}
	058 Move W8, [X23+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X8, X23, X24
	061 Move [X8+32], S0
	062 Move [X8+40], S1
	063 Move X8, [X21+24]
	064 Compare X8, 0
	065 JumpIfEqual {167}
	066 Move W9, [X8+24]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X8, X8, X24
	069 Move X8, [X8+32]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X23, [X21+16]
	072 Compare X23, 0
	073 JumpIfEqual {167}
	074 Compare X22, 0
	075 JumpIfEqual {82}
	076 Move X8, [X23]
	077 Move X0, X22
	078 Move X1, [X8+64]
	079 Call 0x1C17E00
	080 Compare X0, 0
	081 JumpIfEqual {169}
	082 Move W8, [X23+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X8, X23, X24
	085 Move [X8+32], X22
	086 Move X8, [X21+32]
	087 Compare X8, 0
	088 JumpIfEqual {167}
	089 Move W9, [X8+24]
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Add X8, X8, X24
	092 Move X8, [X8+32]
	093 Compare X8, 0
	094 JumpIfNotEqual {122}
	095 Move X23, 0x37E000
	096 Move X23, [X23+3704]
	097 Move X0, X20
	098 Move X1, [X23]
	099 Call 0x1C17E00
	100 Compare X0, 0
	101 JumpIfEqual {122}
	102 Move X22, [X21+32]
	103 Compare X22, 0
	104 JumpIfEqual {167}
	105 Move X1, [X23]
	106 Move X0, X20
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {115}
	110 Move X8, [X22]
	111 Move X1, [X8+64]
	112 Call 0x1C17E00
	113 Compare X0, 0
	114 JumpIfEqual {169}
	115 Move X1, [X23]
	116 Move X0, X20
	117 Call 0x1C17E00
	118 Move W8, [X22+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add X8, X22, X24
	121 Move [X8+32], X0
	122 Move X8, [X21+40]
	123 Compare X8, 0
	124 JumpIfEqual {167}
	125 Move W9, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add X8, X8, X24
	128 Move X8, [X8+32]
	129 Compare X8, 0
	130 JumpIfNotEqual {158}
	131 Move X22, 0x380000
	132 Move X22, [X22+3376]
	133 Move X0, X20
	134 Move X1, [X22]
	135 Call 0x1C17E00
	136 Compare X0, 0
	137 JumpIfEqual {158}
	138 Move X21, [X21+40]
	139 Compare X21, 0
	140 JumpIfEqual {167}
	141 Move X1, [X22]
	142 Move X0, X20
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfEqual {151}
	146 Move X8, [X21]
	147 Move X1, [X8+64]
	148 Call 0x1C17E00
	149 Compare X0, 0
	150 JumpIfEqual {169}
	151 Move X1, [X22]
	152 Move X0, X20
	153 Call 0x1C17E00
	154 Move W8, [X21+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add X8, X21, X24
	157 Move [X8+32], X0
	158 Move X20, [X31+48]
	159 Move X19, [X31+56]
	160 Move X22, [X31+32]
	161 Move X21, [X31+40]
	162 Move X24, [X31+16]
	163 Move X23, [X31+24]
	164 Move X30, [X31+64]
	165 Move X25, [X31+72]
	166 Return 
	167 Call 0x1C17F20
	168 Call 0x1C17F28
	169 Call 0x1C17F44
	170 Move X1, X31
	171 Call 0x1C17DEC

Method: System.Void CommitElementUnderPointers(UnityEngine.UIElements.EventDispatcher dispatcher, UnityEngine.UIElements.ContextType contextType)

Disassembly:
	0x03D9FB9C B 0x3D9FBA0
	0x03D9FBA0 MOV X23, X0
	0x03D9FBA4 CMP W1, 0x1
	0x03D9FBA8 B.NE 0x3D9FBC4
	0x03D9FBAC MOV X0, X23
	0x03D9FBB0 BL 0x3EB1AD0
	0x03D9FBB4 LDR X19, [X0]
	0x03D9FBB8 BL 0x3EB1AE0
	0x03D9FBBC CBNZ X20, 0x3D9FA60
	0x03D9FBC0 B 0x3D9FAB8
	0x03D9FBC4 MOV X19, X31
	0x03D9FBC8 B 0x3D9FBD0
	0x03D9FBCC MOV X23, X0
	0x03D9FBD0 CBZ X20, 0x3D9FC2C
	0x03D9FBD4 LDR X8, [X20]
	0x03D9FBD8 LDR X1, [X24]
	0x03D9FBDC LDRH W9, [X8 + 0x12E]
	0x03D9FBE0 CBZ X9, 0x3D9FC04
	0x03D9FBE4 LDR X10, [X8 + 0xB0]
	0x03D9FBE8 ADD X10, X10, 0x8
	0x03D9FBEC LDUR X11, [X10 - 0x8]
	0x03D9FBF0 CMP X11, X1
	0x03D9FBF4 B.EQ 0x3D9FC14
	0x03D9FBF8 SUBS X9, X9, 0x1
	0x03D9FBFC ADD X10, X10, 0x10
	0x03D9FC00 B.NE 0x3D9FBEC
	0x03D9FC04 MOV X0, X20
	0x03D9FC08 MOV W2, W31
	0x03D9FC0C BL 0x1C5C788
	0x03D9FC10 B 0x3D9FC20
	0x03D9FC14 LDRSW X9, [X10]
	0x03D9FC18 ADD X8, X8, X9, 0x4, LSL
	0x03D9FC1C ADD X0, X8, 0x138
	0x03D9FC20 LDP X8, X1, [X0]
	0x03D9FC24 MOV X0, X20
	0x03D9FC28 BLR X8
	0x03D9FC2C CBNZ X19, 0x3D9FC38
	0x03D9FC30 MOV X0, X23
	0x03D9FC34 BL 0x1D2C690
	0x03D9FC38 MOV X0, X19
	0x03D9FC3C BL 0x1C16F18
	0x03D9FC40 BL 0x1990590
	0x03D9FC44 STP D9, D8, [X31 - 0x50]!
	0x03D9FC48 STR X30, [X31 + 0x10]
	0x03D9FC4C STP X24, X23, [X31 + 0x20]
	0x03D9FC50 STP X22, X21, [X31 + 0x30]
	0x03D9FC54 STP X20, X19, [X31 + 0x40]
	0x03D9FC58 ADRP X21, 0x648000
	0x03D9FC5C LDRB W8, [X21 + 0xF5F]
	0x03D9FC60 MOV V8.16B, V1.16B
	0x03D9FC64 MOV V9.16B, V0.16B
	0x03D9FC68 MOV X20, X2
	0x03D9FC6C MOV X19, X1
	0x03D9FC70 MOV X22, X0
	0x03D9FC74 TBNZ X8, 0x0, 0x3D9FCA4
	0x03D9FC78 ADRP X0, 0x354000
	0x03D9FC7C LDR X0, [X0 + 0xE00]
	0x03D9FC80 BL 0x1C16CF4
	0x03D9FC84 ADRP X0, 0x3C9000
	0x03D9FC88 LDR X0, [X0 + 0xA0]
	0x03D9FC8C BL 0x1C16CF4
	0x03D9FC90 ADRP X0, 0x3C9000
	0x03D9FC94 LDR X0, [X0 + 0xA8]
	0x03D9FC98 BL 0x1C16CF4
	0x03D9FC9C MOVZ W8, 0x1
	0x03D9FCA0 STRB W8, [X21 + 0xF5F]
	0x03D9FCA4 ADRP X23, 0x354000
	0x03D9FCA8 LDR X23, [X23 + 0xE00]
	0x03D9FCAC CBZ X22, 0x3D9FD7C
	0x03D9FCB0 MOV X0, X22
	0x03D9FCB4 MOV X1, X31
	0x03D9FCB8 BL 0x3DEC0CC
	0x03D9FCBC CBZ X0, 0x3D9FD7C
	0x03D9FCC0 ADRP X8, 0x3C9000
	0x03D9FCC4 LDR X8, [X8 + 0xA0]
	0x03D9FCC8 MOV X0, X20
	0x03D9FCCC MOV V0.16B, V9.16B
	0x03D9FCD0 MOV V1.16B, V8.16B
	0x03D9FCD4 LDR X2, [X8]
	0x03D9FCD8 MOV W1, W31
	0x03D9FCDC BL 0x31A0A90
	0x03D9FCE0 MOV X21, X0
	0x03D9FCE4 CBZ X0, 0x3D9FE50
	0x03D9FCE8 LDR X8, [X21 + 0x48]
	0x03D9FCEC STR X22, [X21 + 0x50]
	0x03D9FCF0 CBNZ X8, 0x3D9FCF8
	0x03D9FCF4 STR X22, [X21 + 0x48]
	0x03D9FCF8 LDR X8, [X22]
	0x03D9FCFC LDP X9, X2, [X8 + 0x198]
	0x03D9FD00 MOV X0, X22
	0x03D9FD04 MOV X1, X21
	0x03D9FD08 BLR X9
	0x03D9FD0C MOV X22, X31
	0x03D9FD10 MOVZ W24, 0x5
	0x03D9FD14 LDR X8, [X21]
	0x03D9FD18 LDR X1, [X23]
	0x03D9FD1C LDRH W9, [X8 + 0x12E]
	0x03D9FD20 CBZ X9, 0x3D9FD44
	0x03D9FD24 LDR X10, [X8 + 0xB0]
	0x03D9FD28 ADD X10, X10, 0x8
	0x03D9FD2C LDUR X11, [X10 - 0x8]
	0x03D9FD30 CMP X11, X1
	0x03D9FD34 B.EQ 0x3D9FD54
	0x03D9FD38 SUBS X9, X9, 0x1
	0x03D9FD3C ADD X10, X10, 0x10
	0x03D9FD40 B.NE 0x3D9FD2C
	0x03D9FD44 MOV X0, X21
	0x03D9FD48 MOV W2, W31
	0x03D9FD4C BL 0x1C5C788
	0x03D9FD50 B 0x3D9FD60
	0x03D9FD54 LDRSW X9, [X10]
	0x03D9FD58 ADD X8, X8, X9, 0x4, LSL
	0x03D9FD5C ADD X0, X8, 0x138
	0x03D9FD60 LDP X8, X1, [X0]
	0x03D9FD64 MOV X0, X21
	0x03D9FD68 BLR X8
	0x03D9FD6C CBNZ X22, 0x3D9FE54
	0x03D9FD70 CMP W24, 0x5
	0x03D9FD74 B.EQ 0x3D9FD7C
	0x03D9FD78 CBNZ W24, 0x3D9FE2C
	0x03D9FD7C CBZ X19, 0x3D9FE2C
	0x03D9FD80 ADRP X8, 0x3C9000
	0x03D9FD84 LDR X8, [X8 + 0xA8]
	0x03D9FD88 MOV X0, X20
	0x03D9FD8C MOV V0.16B, V9.16B
	0x03D9FD90 MOV V1.16B, V8.16B
	0x03D9FD94 LDR X2, [X8]
	0x03D9FD98 MOV W1, W31
	0x03D9FD9C BL 0x31A0A90
	0x03D9FDA0 MOV X20, X0
	0x03D9FDA4 CBZ X0, 0x3D9FE44
	0x03D9FDA8 LDR X8, [X20 + 0x48]
	0x03D9FDAC STR X19, [X20 + 0x50]
	0x03D9FDB0 CBNZ X8, 0x3D9FDB8
	0x03D9FDB4 STR X19, [X20 + 0x48]
	0x03D9FDB8 LDR X8, [X19]
	0x03D9FDBC LDP X9, X2, [X8 + 0x198]
	0x03D9FDC0 MOV X0, X19
	0x03D9FDC4 MOV X1, X20
	0x03D9FDC8 BLR X9
	0x03D9FDCC MOV X19, X31
	0x03D9FDD0 LDR X8, [X20]
	0x03D9FDD4 LDR X1, [X23]
	0x03D9FDD8 LDRH W9, [X8 + 0x12E]
	0x03D9FDDC CBZ X9, 0x3D9FE00
	0x03D9FDE0 LDR X10, [X8 + 0xB0]
	0x03D9FDE4 ADD X10, X10, 0x8
	0x03D9FDE8 LDUR X11, [X10 - 0x8]
	0x03D9FDEC CMP X11, X1
	0x03D9FDF0 B.EQ 0x3D9FE10
	0x03D9FDF4 SUBS X9, X9, 0x1
	0x03D9FDF8 ADD X10, X10, 0x10
	0x03D9FDFC B.NE 0x3D9FDE8
	0x03D9FE00 MOV X0, X20
	0x03D9FE04 MOV W2, W31
	0x03D9FE08 BL 0x1C5C788
	0x03D9FE0C B 0x3D9FE1C
	0x03D9FE10 LDRSW X9, [X10]
	0x03D9FE14 ADD X8, X8, X9, 0x4, LSL
	0x03D9FE18 ADD X0, X8, 0x138
	0x03D9FE1C LDP X8, X1, [X0]
	0x03D9FE20 MOV X0, X20
	0x03D9FE24 BLR X8
	0x03D9FE28 CBNZ X19, 0x3D9FE48
	0x03D9FE2C LDP X20, X19, [X31 + 0x40]
	0x03D9FE30 LDP X22, X21, [X31 + 0x30]
	0x03D9FE34 LDP X24, X23, [X31 + 0x20]
	0x03D9FE38 LDR X30, [X31 + 0x10]
	0x03D9FE3C LDP D9, D8, [X31], #0x50
	0x03D9FE40 RET
	0x03D9FE44 BL 0x1C16F20
	0x03D9FE48 MOV X0, X19
	0x03D9FE4C BL 0x1C16F18
	0x03D9FE50 BL 0x1C16F20
	0x03D9FE54 MOV X0, X22
	0x03D9FE58 BL 0x1C16F18
	0x03D9FE5C B 0x3D9FE60
	0x03D9FE60 MOV X22, X0
	0x03D9FE64 CMP W1, 0x1
	0x03D9FE68 B.NE 0x3D9FE90
	0x03D9FE6C MOV X0, X22
	0x03D9FE70 BL 0x3EB1AD0
	0x03D9FE74 LDR X8, [X0]
	0x03D9FE78 STR X8, [X31 + 0x18]
	0x03D9FE7C BL 0x3EB1AE0
	0x03D9FE80 LDR X22, [X31 + 0x18]
	0x03D9FE84 MOV W24, W31
	0x03D9FE88 CBNZ X21, 0x3D9FD14
	0x03D9FE8C B 0x3D9FD6C
	0x03D9FE90 STR X31, [X31 + 0x18]
	0x03D9FE94 B 0x3D9FE9C
	0x03D9FE98 MOV X22, X0
	0x03D9FE9C CBZ X21, 0x3D9FEF8
	0x03D9FEA0 LDR X8, [X21]
	0x03D9FEA4 LDR X1, [X23]
	0x03D9FEA8 LDRH W9, [X8 + 0x12E]
	0x03D9FEAC CBZ X9, 0x3D9FED0
	0x03D9FEB0 LDR X10, [X8 + 0xB0]
	0x03D9FEB4 ADD X10, X10, 0x8
	0x03D9FEB8 LDUR X11, [X10 - 0x8]
	0x03D9FEBC CMP X11, X1
	0x03D9FEC0 B.EQ 0x3D9FEE0
	0x03D9FEC4 SUBS X9, X9, 0x1
	0x03D9FEC8 ADD X10, X10, 0x10
	0x03D9FECC B.NE 0x3D9FEB8
	0x03D9FED0 MOV X0, X21
	0x03D9FED4 MOV W2, W31
	0x03D9FED8 BL 0x1C5C788
	0x03D9FEDC B 0x3D9FEEC
	0x03D9FEE0 LDRSW X9, [X10]
	0x03D9FEE4 ADD X8, X8, X9, 0x4, LSL
	0x03D9FEE8 ADD X0, X8, 0x138
	0x03D9FEEC LDP X8, X1, [X0]
	0x03D9FEF0 MOV X0, X21
	0x03D9FEF4 BLR X8
	0x03D9FEF8 LDR X8, [X31 + 0x18]
	0x03D9FEFC CBZ X8, 0x3D9FF9C
	0x03D9FF00 LDR X0, [X31 + 0x18]
	0x03D9FF04 BL 0x1C16F18
	0x03D9FF08 B 0x3D9FF0C
	0x03D9FF0C MOV X22, X0
	0x03D9FF10 CMP W1, 0x1
	0x03D9FF14 B.NE 0x3D9FF30
	0x03D9FF18 MOV X0, X22
	0x03D9FF1C BL 0x3EB1AD0
	0x03D9FF20 LDR X19, [X0]
	0x03D9FF24 BL 0x3EB1AE0
	0x03D9FF28 CBNZ X20, 0x3D9FDD0
	0x03D9FF2C B 0x3D9FE28
	0x03D9FF30 MOV X19, X31
	0x03D9FF34 B 0x3D9FF3C
	0x03D9FF38 MOV X22, X0
	0x03D9FF3C CBZ X20, 0x3D9FF98
	0x03D9FF40 LDR X8, [X20]
	0x03D9FF44 LDR X1, [X23]
	0x03D9FF48 LDRH W9, [X8 + 0x12E]
	0x03D9FF4C CBZ X9, 0x3D9FF70
	0x03D9FF50 LDR X10, [X8 + 0xB0]
	0x03D9FF54 ADD X10, X10, 0x8
	0x03D9FF58 LDUR X11, [X10 - 0x8]
	0x03D9FF5C CMP X11, X1
	0x03D9FF60 B.EQ 0x3D9FF80
	0x03D9FF64 SUBS X9, X9, 0x1
	0x03D9FF68 ADD X10, X10, 0x10
	0x03D9FF6C B.NE 0x3D9FF58
	0x03D9FF70 MOV X0, X20
	0x03D9FF74 MOV W2, W31
	0x03D9FF78 BL 0x1C5C788
	0x03D9FF7C B 0x3D9FF8C
	0x03D9FF80 LDRSW X9, [X10]
	0x03D9FF84 ADD X8, X8, X9, 0x4, LSL
	0x03D9FF88 ADD X0, X8, 0x138
	0x03D9FF8C LDP X8, X1, [X0]
	0x03D9FF90 MOV X0, X20
	0x03D9FF94 BLR X8
	0x03D9FF98 CBNZ X19, 0x3D9FFA4
	0x03D9FF9C MOV X0, X22
	0x03D9FFA0 BL 0x1D2C690
	0x03D9FFA4 MOV X0, X19
	0x03D9FFA8 BL 0x1C16F18
	0x03D9FFAC BL 0x1990590
	0x03D9FFB0 STP X30, X25, [X31 - 0x40]!
	0x03D9FFB4 STP X24, X23, [X31 + 0x10]
	0x03D9FFB8 STP X22, X21, [X31 + 0x20]
	0x03D9FFBC STP X20, X19, [X31 + 0x30]
	0x03D9FFC0 ADRP X21, 0x648000
	0x03D9FFC4 ADRP X20, 0x37D000
	0x03D9FFC8 LDRB W8, [X21 + 0xEC0]
	0x03D9FFCC LDR X20, [X20 + 0xE50]
	0x03D9FFD0 MOV X19, X0
	0x03D9FFD4 TBNZ X8, 0x0, 0x3DA0028
	0x03D9FFD8 ADRP X0, 0x356000
	0x03D9FFDC LDR X0, [X0 + 0x9B8]
	0x03D9FFE0 BL 0x1C16CF4
	0x03D9FFE4 ADRP X0, 0x3C9000
	0x03D9FFE8 LDR X0, [X0 + 0xB0]
	0x03D9FFEC BL 0x1C16CF4
	0x03D9FFF0 ADRP X0, 0x3C9000
	0x03D9FFF4 LDR X0, [X0 + 0xB8]
	0x03D9FFF8 BL 0x1C16CF4
	0x03D9FFFC ADRP X0, 0x37D000
	0x03DA0000 LDR X0, [X0 + 0xE50]
	0x03DA0004 BL 0x1C16CF4
	0x03DA0008 ADRP X0, 0x3AD000
	0x03DA000C LDR X0, [X0 + 0xA88]
	0x03DA0010 BL 0x1C16CF4
	0x03DA0014 ADRP X0, 0x37E000
	0x03DA0018 LDR X0, [X0 + 0xA40]
	0x03DA001C BL 0x1C16CF4
	0x03DA0020 MOVZ W8, 0x1
	0x03DA0024 STRB W8, [X21 + 0xEC0]
	0x03DA0028 LDR X0, [X20]
	0x03DA002C ADRP X25, 0x37E000
	0x03DA0030 ADRP X24, 0x3C8000
	0x03DA0034 ADRP X23, 0x3C8000
	0x03DA0038 ADRP X22, 0x3AD000
	0x03DA003C ADRP X21, 0x355000
	0x03DA0040 LDR X25, [X25 + 0xA40]
	0x03DA0044 LDR W8, [X0 + 0xE0]
	0x03DA0048 LDR X24, [X24 + 0xB8]
	0x03DA004C LDR X23, [X23 + 0xB0]
	0x03DA0050 LDR X22, [X22 + 0xA88]
	0x03DA0054 LDR X21, [X21 + 0x9B8]
	0x03DA0058 CBNZ W8, 0x3DA0064
	0x03DA005C BL 0x1C16DFC
	0x03DA0060 LDR X0, [X20]
	0x03DA0064 LDR X8, [X0 + 0xB8]
	0x03DA0068 LDR X0, [X25]
	0x03DA006C LDR W1, [X8]
	0x03DA0070 BL 0x1C16D6C
	0x03DA0074 STR X0, [X19 + 0x10]
	0x03DA0078 LDR X8, [X20]
	0x03DA007C LDR X0, [X25]
	0x03DA0080 LDR X8, [X8 + 0xB8]
	0x03DA0084 LDR W1, [X8]
	0x03DA0088 BL 0x1C16D6C
	0x03DA008C STR X0, [X19 + 0x18]
	0x03DA0090 LDR X8, [X20]
	0x03DA0094 LDR X0, [X24]
	0x03DA0098 LDR X8, [X8 + 0xB8]
	0x03DA009C LDR W1, [X8]
	0x03DA00A0 BL 0x1C16D6C
	0x03DA00A4 STR X0, [X19 + 0x20]
	0x03DA00A8 LDR X8, [X20]
	0x03DA00AC LDR X0, [X23]
	0x03DA00B0 LDR X8, [X8 + 0xB8]
	0x03DA00B4 LDR W1, [X8]
	0x03DA00B8 BL 0x1C16D6C
	0x03DA00BC STR X0, [X19 + 0x28]
	0x03DA00C0 LDR X8, [X20]
	0x03DA00C4 LDR X0, [X22]
	0x03DA00C8 LDR X8, [X8 + 0xB8]
	0x03DA00CC LDR W1, [X8]
	0x03DA00D0 BL 0x1C16D6C
	0x03DA00D4 STR X0, [X19 + 0x30]
	0x03DA00D8 LDR X8, [X20]
	0x03DA00DC LDR X0, [X21]
	0x03DA00E0 LDR X8, [X8 + 0xB8]
	0x03DA00E4 LDR W1, [X8]
	0x03DA00E8 BL 0x1C16D6C
	0x03DA00EC STR X0, [X19 + 0x38]
	0x03DA00F0 MOV X0, X19
	0x03DA00F4 LDP X20, X19, [X31 + 0x30]
	0x03DA00F8 LDP X22, X21, [X31 + 0x20]
	0x03DA00FC LDP X24, X23, [X31 + 0x10]
	0x03DA0100 MOV X1, X31
	0x03DA0104 LDP X30, X25, [X31], #0x40
	0x03DA0108 B 0x33BDD8C
	0x03DA010C STR X30, [X31 - 0x20]!
	0x03DA0110 STP X20, X19, [X31 + 0x10]
	0x03DA0114 ADRP X19, 0x647000
	0x03DA0118 ADRP X20, 0x37F000
	0x03DA011C LDRB W8, [X19 + 0xEC1]
	0x03DA0120 LDR X20, [X20 + 0x228]
	0x03DA0124 TBNZ X8, 0x0, 0x3DA013C
	0x03DA0128 ADRP X0, 0x37F000
	0x03DA012C LDR X0, [X0 + 0x228]
	0x03DA0130 BL 0x1C16CF4
	0x03DA0134 MOVZ W8, 0x1
	0x03DA0138 STRB W8, [X19 + 0xEC1]
	0x03DA013C LDR X8, [X20]
	0x03DA0140 LDP X20, X19, [X31 + 0x10]
	0x03DA0144 LDR X8, [X8 + 0xB8]
	0x03DA0148 LDR X9, [X8]
	0x03DA014C ADD X0, X9, 0x1
	0x03DA0150 STR X0, [X8]
	0x03DA0154 LDR X30, [X31], #0x20
	0x03DA0158 RET
	0x03DA015C MOVN X0, 0x0
	0x03DA0160 RET
	0x03DA0164 LDR W0, [X0 + 0x10]
	0x03DA0168 RET
	0x03DA016C LDR X0, [X0 + 0x18]
	0x03DA0170 RET
	0x03DA0174 STR X1, [X0 + 0x18]
	0x03DA0178 RET
	0x03DA017C LDR X0, [X0 + 0x20]
	0x03DA0180 RET
	0x03DA0184 STR X1, [X0 + 0x20]
	0x03DA0188 RET
	0x03DA018C STR X1, [X0 + 0x28]
	0x03DA0190 RET
	0x03DA0194 STR X1, [X0 + 0x28]
	0x03DA0198 RET
	0x03DA019C LDR W0, [X0 + 0x30]
	0x03DA01A0 RET
	0x03DA01A4 STR W1, [X0 + 0x30]
	0x03DA01A8 RET
	0x03DA01AC LDR X0, [X0 + 0x38]
	0x03DA01B0 RET
	0x03DA01B4 STR X1, [X0 + 0x38]
	0x03DA01B8 RET
	0x03DA01BC LDR W0, [X0 + 0x40]
	0x03DA01C0 RET
	0x03DA01C4 STR W1, [X0 + 0x40]
	0x03DA01C8 RET
	0x03DA01CC RET
	0x03DA01D0 LDR X8, [X0]
	0x03DA01D4 LDP X2, X1, [X8 + 0x198]
	0x03DA01D8 BR X2
	0x03DA01DC RET
	0x03DA01E0 STP X30, X19, [X31 - 0x10]!
	0x03DA01E4 LDR X8, [X0]
	0x03DA01E8 MOV X19, X0
	0x03DA01EC LDP X9, X1, [X8 + 0x1B8]
	0x03DA01F0 BLR X9
	0x03DA01F4 LDR W8, [X19 + 0x40]
	0x03DA01F8 ORR W8, W8, 0x400
	0x03DA01FC STR W8, [X19 + 0x40]
	0x03DA0200 LDP X30, X19, [X31], #0x10
	0x03DA0204 RET
	0x03DA0208 LDR W8, [X0 + 0x40]
	0x03DA020C ANDS W31, W1, 0x1
	0x03DA0210 MOVZ W9, 0x400
	0x03DA0214 CSEL W9, W9, W31, NE
	0x03DA0218 AND W8, W8, 0xFFFFFBFF
	0x03DA021C ORR W8, W8, W9, 0x0
	0x03DA0220 STR W8, [X0 + 0x40]
	0x03DA0224 RET
	0x03DA0228 LDR W8, [X0 + 0x30]
	0x03DA022C AND W0, W8, 0x1
	0x03DA0230 RET
	0x03DA0234 LDRB W8, [X0 + 0x30]
	0x03DA0238 UBFM W0, W8, 0x1, 0x1
	0x03DA023C RET
	0x03DA0240 LDRB W8, [X0 + 0x30]
	0x03DA0244 UBFM W0, W8, 0x3, 0x3
	0x03DA0248 RET
	0x03DA024C LDR W8, [X0 + 0x30]
	0x03DA0250 ANDS W31, W1, 0x1
	0x03DA0254 MOVZ W9, 0x8
	0x03DA0258 CSEL W9, W9, W31, NE
	0x03DA025C AND W8, W8, 0xFFFFFFF7
	0x03DA0260 ORR W8, W8, W9, 0x0
	0x03DA0264 STR W8, [X0 + 0x30]
	0x03DA0268 RET
	0x03DA026C LDRB W8, [X0 + 0x30]
	0x03DA0270 UBFM W0, W8, 0x4, 0x4
	0x03DA0274 RET
	0x03DA0278 LDR W8, [X0 + 0x30]
	0x03DA027C ANDS W31, W1, 0x1
	0x03DA0280 MOVZ W9, 0x10
	0x03DA0284 CSEL W9, W9, W31, NE
	0x03DA0288 AND W8, W8, 0xFFFFFFEF
	0x03DA028C ORR W8, W8, W9, 0x0
	0x03DA0290 STR W8, [X0 + 0x30]
	0x03DA0294 RET
	0x03DA0298 LDR X0, [X0 + 0x48]
	0x03DA029C RET
	0x03DA02A0 STR X1, [X0 + 0x48]
	0x03DA02A4 RET
	0x03DA02A8 LDR X0, [X0 + 0x58]
	0x03DA02AC RET
	0x03DA02B0 LDR W8, [X0 + 0x40]
	0x03DA02B4 BFM W8, W1, 0x0, 0x0
	0x03DA02B8 STR W8, [X0 + 0x40]
	0x03DA02BC RET
	0x03DA02C0 LDRB W8, [X0 + 0x40]
	0x03DA02C4 UBFM W0, W8, 0x1, 0x1
	0x03DA02C8 RET
	0x03DA02CC LDR W8, [X0 + 0x40]
	0x03DA02D0 ANDS W31, W1, 0x1
	0x03DA02D4 MOVZ W9, 0x2
	0x03DA02D8 CSEL W9, W9, W31, NE
	0x03DA02DC AND W8, W8, 0xFFFFFFFD
	0x03DA02E0 ORR W8, W8, W9, 0x0
	0x03DA02E4 STR W8, [X0 + 0x40]
	0x03DA02E8 RET
	0x03DA02EC LDR W8, [X0 + 0x40]
	0x03DA02F0 ORR W8, W8, 0x3
	0x03DA02F4 STR W8, [X0 + 0x40]
	0x03DA02F8 RET
	0x03DA02FC LDRB W8, [X0 + 0x40]
	0x03DA0300 UBFM W0, W8, 0x2, 0x2
	0x03DA0304 RET
	0x03DA0308 LDR W8, [X0 + 0x40]
	0x03DA030C ANDS W31, W1, 0x1
	0x03DA0310 MOVZ W9, 0x4
	0x03DA0314 CSEL W9, W9, W31, NE
	0x03DA0318 AND W8, W8, 0xFFFFFFFB
	0x03DA031C ORR W8, W8, W9, 0x0
	0x03DA0320 STR W8, [X0 + 0x40]
	0x03DA0324 RET
	0x03DA0328 LDR W0, [X0 + 0x60]
	0x03DA032C RET
	0x03DA0330 STR W1, [X0 + 0x60]
	0x03DA0334 RET
	0x03DA0338 LDR X0, [X0 + 0x68]
	0x03DA033C RET
	0x03DA0340 STP X30, X21, [X31 - 0x20]!
	0x03DA0344 STP X20, X19, [X31 + 0x10]
	0x03DA0348 ADRP X21, 0x647000
	0x03DA034C LDRB W8, [X21 + 0xEC3]
	0x03DA0350 MOV X20, X1
	0x03DA0354 MOV X19, X0
	0x03DA0358 TBNZ X8, 0x0, 0x3DA0370
	0x03DA035C ADRP X0, 0x37B000
	0x03DA0360 LDR X0, [X0 + 0x898]
	0x03DA0364 BL 0x1C16CF4
	0x03DA0368 MOVZ W8, 0x1
	0x03DA036C STRB W8, [X21 + 0xEC3]
	0x03DA0370 LDRB W8, [X19 + 0x40]
	0x03DA0374 STR X20, [X19 + 0x68]
	0x03DA0378 TBZ X8, 0x5, 0x3DA03C0
	0x03DA037C LDR X8, [X19 + 0x70]
	0x03DA0380 CBZ X8, 0x3DA03C0
	0x03DA0384 LDR X8, [X19]
	0x03DA0388 MOV X0, X19
	0x03DA038C LDP X9, X1, [X8 + 0x1D8]
	0x03DA0390 BLR X9
	0x03DA0394 CBZ X0, 0x3DA03E0
	0x03DA0398 ADRP X8, 0x37B000
	0x03DA039C LDR X8, [X8 + 0x898]
	0x03DA03A0 LDR X9, [X0]
	0x03DA03A4 LDR X8, [X8]
	0x03DA03A8 LDRB W11, [X9 + 0x130]
	0x03DA03AC LDRB W10, [X8 + 0x130]
	0x03DA03B0 CMP W11, W10
	0x03DA03B4 B.CS 0x3DA03CC
	0x03DA03B8 MOV X0, X31
	0x03DA03BC B 0x3DA03E0
	0x03DA03C0 LDP X20, X19, [X31 + 0x10]
	0x03DA03C4 LDP X30, X21, [X31], #0x20
	0x03DA03C8 RET
	0x03DA03CC LDR X9, [X9 + 0xC8]
	0x03DA03D0 ADD X9, X9, X10, 0x3, LSL
	0x03DA03D4 LDUR X9, [X9 - 0x8]
	0x03DA03D8 CMP X9, X8
	0x03DA03DC CSEL X0, X0, X31, EQ
	0x03DA03E0 LDRB W8, [X19 + 0x40]
	0x03DA03E4 TBNZ X8, 0x5, 0x3DA03F8
	0x03DA03E8 CBZ X0, 0x3DA0428
	0x03DA03EC LDP S0, S1, [X19 + 0x78]
	0x03DA03F0 MOV X20, X31
	0x03DA03F4 B 0x3DA0404
	0x03DA03F8 LDR X20, [X19 + 0x70]
	0x03DA03FC LDP S0, S1, [X19 + 0x78]
	0x03DA0400 CBZ X0, 0x3DA0424
	0x03DA0404 MOV X1, X31
	0x03DA0408 BL 0x3D16BD4
	0x03DA040C CBZ X20, 0x3DA0428
	0x03DA0410 MOV X0, X20
	0x03DA0414 LDP X20, X19, [X31 + 0x10]
	0x03DA0418 MOV X1, X31
	0x03DA041C LDP X30, X21, [X31], #0x20
	0x03DA0420 B 0x3C62CD0
	0x03DA0424 CBNZ X20, 0x3DA0410
	0x03DA0428 BL 0x1C16F20
	0x03DA042C LDRB W8, [X0 + 0x40]
	0x03DA0430 UBFM W0, W8, 0x3, 0x3
	0x03DA0434 RET
	0x03DA0438 LDR W8, [X0 + 0x40]
	0x03DA043C MOVZ W9, 0x208
	0x03DA0440 ANDS W31, W1, 0x1
	0x03DA0444 AND W10, W8, 0xFFFFFFF7
	0x03DA0448 ORR W8, W8, W9, 0x0
	0x03DA044C CSEL W8, W8, W10, NE
	0x03DA0450 STR W8, [X0 + 0x40]
	0x03DA0454 RET
	0x03DA0458 LDR W8, [X0 + 0x40]
	0x03DA045C ANDS W31, W1, 0x1
	0x03DA0460 MOVZ W9, 0x200
	0x03DA0464 CSEL W9, W9, W31, NE
	0x03DA0468 AND W8, W8, 0xFFFFFDFF
	0x03DA046C ORR W8, W8, W9, 0x0
	0x03DA0470 STR W8, [X0 + 0x40]
	0x03DA0474 RET
	0x03DA0478 LDRB W8, [X0 + 0x41]
	0x03DA047C UBFM W0, W8, 0x1, 0x1
	0x03DA0480 RET
	0x03DA0484 LDRB W8, [X0 + 0x41]
	0x03DA0488 UBFM W0, W8, 0x2, 0x2
	0x03DA048C RET
	0x03DA0490 LDRB W8, [X0 + 0x41]
	0x03DA0494 UBFM W0, W8, 0x3, 0x3
	0x03DA0498 RET
	0x03DA049C LDR W8, [X0 + 0x40]
	0x03DA04A0 ANDS W31, W1, 0x1
	0x03DA04A4 MOVZ W9, 0x800
	0x03DA04A8 CSEL W9, W9, W31, NE
	0x03DA04AC AND W8, W8, 0xFFFFF7FF
	0x03DA04B0 ORR W8, W8, W9, 0x0
	0x03DA04B4 STR W8, [X0 + 0x40]
	0x03DA04B8 RET
	0x03DA04BC LDRB W8, [X0 + 0x40]
	0x03DA04C0 UBFM W0, W8, 0x5, 0x5
	0x03DA04C4 RET
	0x03DA04C8 LDR W8, [X0 + 0x40]
	0x03DA04CC ANDS W31, W1, 0x1
	0x03DA04D0 MOVZ W9, 0x20
	0x03DA04D4 CSEL W9, W9, W31, NE
	0x03DA04D8 AND W8, W8, 0xFFFFFFDF
	0x03DA04DC ORR W8, W8, W9, 0x0
	0x03DA04E0 STR W8, [X0 + 0x40]
	0x03DA04E4 RET
	0x03DA04E8 STP X30, X21, [X31 - 0x20]!
	0x03DA04EC STP X20, X19, [X31 + 0x10]
	0x03DA04F0 ADRP X21, 0x647000
	0x03DA04F4 LDRB W8, [X21 + 0xEC5]
	0x03DA04F8 MOV X20, X1
	0x03DA04FC MOV X19, X0
	0x03DA0500 TBNZ X8, 0x0, 0x3DA0518
	0x03DA0504 ADRP X0, 0x3B9000
	0x03DA0508 LDR X0, [X0 + 0x20]
	0x03DA050C BL 0x1C16CF4
	0x03DA0510 MOVZ W8, 0x1
	0x03DA0514 STRB W8, [X21 + 0xEC5]
	0x03DA0518 LDR X21, [X19 + 0x70]
	0x03DA051C CBZ X21, 0x3DA0558
	0x03DA0520 CBZ X20, 0x3DA057C
	0x03DA0524 CBZ X21, 0x3DA0594
	0x03DA0528 MOV X0, X21
	0x03DA052C MOV X1, X20
	0x03DA0530 MOV X2, X31
	0x03DA0534 BL 0x3C637B4
	0x03DA0538 LDR W8, [X19 + 0x40]
	0x03DA053C MOV X0, X20
	0x03DA0540 MOV X1, X31
	0x03DA0544 ORR W8, W8, 0x20
	0x03DA0548 STR W8, [X19 + 0x40]
	0x03DA054C BL 0x3C62C40
	0x03DA0550 STP S0, S1, [X19 + 0x78]
	0x03DA0554 B 0x3DA0588
	0x03DA0558 ADRP X8, 0x3B9000
	0x03DA055C LDR X8, [X8 + 0x20]
	0x03DA0560 LDR X0, [X8]
	0x03DA0564 BL 0x1C16F10
	0x03DA0568 MOV X1, X31
	0x03DA056C MOV X21, X0
	0x03DA0570 BL 0x3C63690
	0x03DA0574 STR X21, [X19 + 0x70]
	0x03DA0578 CBNZ X20, 0x3DA0524
	0x03DA057C LDR W8, [X19 + 0x40]
	0x03DA0580 AND W8, W8, 0xFFFFFFDF
	0x03DA0584 STR W8, [X19 + 0x40]
	0x03DA0588 LDP X20, X19, [X31 + 0x10]
	0x03DA058C LDP X30, X21, [X31], #0x20
	0x03DA0590 RET
	0x03DA0594 BL 0x1C16F20
	0x03DA0598 LDP S0, S1, [X0 + 0x78]
	0x03DA059C RET
	0x03DA05A0 STP S0, S1, [X0 + 0x78]
	0x03DA05A4 RET
	0x03DA05A8 B 0x3DA05AC
	0x03DA05AC STP X30, X21, [X31 - 0x20]!
	0x03DA05B0 STP X20, X19, [X31 + 0x10]
	0x03DA05B4 ADRP X21, 0x647000
	0x03DA05B8 ADRP X20, 0x37D000
	0x03DA05BC LDRB W8, [X21 + 0xEC6]
	0x03DA05C0 LDR X20, [X20 + 0xD08]
	0x03DA05C4 MOV X19, X0
	0x03DA05C8 TBNZ X8, 0x0, 0x3DA05F8
	0x03DA05CC ADRP X0, 0x37F000
	0x03DA05D0 LDR X0, [X0 + 0x228]
	0x03DA05D4 BL 0x1C16CF4
	0x03DA05D8 ADRP X0, 0x3C8000
	0x03DA05DC LDR X0, [X0 + 0xC0]
	0x03DA05E0 BL 0x1C16CF4
	0x03DA05E4 ADRP X0, 0x37D000
	0x03DA05E8 LDR X0, [X0 + 0xD08]
	0x03DA05EC BL 0x1C16CF4
	0x03DA05F0 MOVZ W8, 0x1
	0x03DA05F4 STRB W8, [X21 + 0xEC6]
	0x03DA05F8 LDR X0, [X20]
	0x03DA05FC ADRP X20, 0x37F000
	0x03DA0600 LDR W8, [X0 + 0xE0]
	0x03DA0604 LDR X20, [X20 + 0x228]
	0x03DA0608 CBNZ W8, 0x3DA0610
	0x03DA060C BL 0x1C16DFC
	0x03DA0610 MOV X0, X31
	0x03DA0614 BL 0x3DBD7F8
	0x03DA0618 STR X0, [X19 + 0x18]
	0x03DA061C STR X31, [X19 + 0x28]
	0x03DA0620 LDR X8, [X20]
	0x03DA0624 LDR X8, [X8 + 0xB8]
	0x03DA0628 LDR X9, [X8 + 0x8]
	0x03DA062C ADD X10, X9, 0x1
	0x03DA0630 STR X10, [X8 + 0x8]
	0x03DA0634 LDR X0, [X19 + 0x38]
	0x03DA0638 STR X9, [X19 + 0x20]
	0x03DA063C STR W31, [X19 + 0x30]
	0x03DA0640 CBZ X0, 0x3DA0648
	0x03DA0644 BL 0x3DA06EC
	0x03DA0648 LDR X8, [X19 + 0x58]
	0x03DA064C STR X31, [X19 + 0x38]
	0x03DA0650 STP X31, X31, [X19 + 0x48]
	0x03DA0654 CBZ X8, 0x3DA06E8
	0x03DA0658 LDP W2, W9, [X8 + 0x18]
	0x03DA065C ADD W9, W9, 0x1
	0x03DA0660 CMP W2, 0x1
	0x03DA0664 STP W31, W9, [X8 + 0x18]
	0x03DA0668 B.LT 0x3DA067C
	0x03DA066C LDR X0, [X8 + 0x10]
	0x03DA0670 MOV W1, W31
	0x03DA0674 MOV X3, X31
	0x03DA0678 BL 0x339FA34
	0x03DA067C LDR W8, [X19 + 0x40]
	0x03DA0680 STR W31, [X19 + 0x60]
	0x03DA0684 ADRP X20, 0x639000
	0x03DA0688 AND W8, W8, 0xFFFFFFF8
	0x03DA068C STR W8, [X19 + 0x40]
	0x03DA0690 LDRB W9, [X20 + 0x78F]
	0x03DA0694 CBNZ W9, 0x3DA06B0
	0x03DA0698 ADRP X0, 0x35B000
	0x03DA069C LDR X0, [X0 + 0xF08]
	0x03DA06A0 BL 0x1C16CF4
	0x03DA06A4 MOVZ W8, 0x1
	0x03DA06A8 STRB W8, [X20 + 0x78F]
	0x03DA06AC LDR W8, [X19 + 0x40]
	0x03DA06B0 ADRP X9, 0x35B000
	0x03DA06B4 LDR X9, [X9 + 0xF08]
	0x03DA06B8 MOVN W10, 0xEF8
	0x03DA06BC AND W8, W8, W10, 0x0
	0x03DA06C0 ORR W8, W8, 0x80
	0x03DA06C4 LDR X9, [X9]
	0x03DA06C8 LDR X9, [X9 + 0xB8]
	0x03DA06CC LDR V0, [X9]
	0x03DA06D0 STR X31, [X19 + 0x68]
	0x03DA06D4 STR W8, [X19 + 0x40]
	0x03DA06D8 STR D0, [X19 + 0x78]
	0x03DA06DC LDP X20, X19, [X31 + 0x10]
	0x03DA06E0 LDP X30, X21, [X31], #0x20
	0x03DA06E4 RET
	0x03DA06E8 BL 0x1C16F20
	0x03DA06EC STR X30, [X31 - 0x20]!
	0x03DA06F0 STP X20, X19, [X31 + 0x10]
	0x03DA06F4 ADRP X20, 0x647000
	0x03DA06F8 LDRB W8, [X20 + 0xFD1]
	0x03DA06FC MOV X19, X0
	0x03DA0700 TBNZ X8, 0x0, 0x3DA0730
	0x03DA0704 ADRP X0, 0x3C3000
	0x03DA0708 LDR X0, [X0 + 0xED8]
	0x03DA070C BL 0x1C16CF4
	0x03DA0710 ADRP X0, 0x3C8000
	0x03DA0714 LDR X0, [X0 + 0xC8]
	0x03DA0718 BL 0x1C16CF4
	0x03DA071C ADRP X0, 0x3C7000
	0x03DA0720 LDR X0, [X0 + 0xDB0]
	0x03DA0724 BL 0x1C16CF4
	0x03DA0728 MOVZ W8, 0x1
	0x03DA072C STRB W8, [X20 + 0xFD1]
	0x03DA0730 LDR X8, [X19 + 0x20]
	0x03DA0734 CBZ X8, 0x3DA07F8
	0x03DA0738 LDP W2, W9, [X8 + 0x18]
	0x03DA073C ADD W9, W9, 0x1
	0x03DA0740 CMP W2, 0x1
	0x03DA0744 STP W31, W9, [X8 + 0x18]
	0x03DA0748 B.LT 0x3DA075C
	0x03DA074C LDR X0, [X8 + 0x10]
	0x03DA0750 MOV W1, W31
	0x03DA0754 MOV X3, X31
	0x03DA0758 BL 0x339FA34
	0x03DA075C LDR X8, [X19 + 0x18]
	0x03DA0760 CBZ X8, 0x3DA07F8
	0x03DA0764 LDP W2, W9, [X8 + 0x18]
	0x03DA0768 ADD W9, W9, 0x1
	0x03DA076C CMP W2, 0x1
	0x03DA0770 STP W31, W9, [X8 + 0x18]
	0x03DA0774 B.LT 0x3DA0788
	0x03DA0778 LDR X0, [X8 + 0x10]
	0x03DA077C MOV W1, W31
	0x03DA0780 MOV X3, X31
	0x03DA0784 BL 0x339FA34
	0x03DA0788 LDR X8, [X19 + 0x10]
	0x03DA078C CBZ X8, 0x3DA07F8
	0x03DA0790 LDP W2, W9, [X8 + 0x18]
	0x03DA0794 ADRP X20, 0x3C7000
	0x03DA0798 LDR X20, [X20 + 0xDB0]
	0x03DA079C ADD W9, W9, 0x1
	0x03DA07A0 CMP W2, 0x1
	0x03DA07A4 STP W31, W9, [X8 + 0x18]
	0x03DA07A8 B.LT 0x3DA07BC
	0x03DA07AC LDR X0, [X8 + 0x10]
	0x03DA07B0 MOV W1, W31
	0x03DA07B4 MOV X3, X31
	0x03DA07B8 BL 0x339FA34
	0x03DA07BC LDR X0, [X20]
	0x03DA07C0 LDR W8, [X0 + 0xE0]
	0x03DA07C4 CBNZ W8, 0x3DA07D0
	0x03DA07C8 BL 0x1C16DFC
	0x03DA07CC LDR X0, [X20]
	0x03DA07D0 LDR X8, [X0 + 0xB8]
	0x03DA07D4 LDR X0, [X8]
	0x03DA07D8 CBZ X0, 0x3DA07F8
	0x03DA07DC ADRP X8, 0x3C8000
	0x03DA07E0 LDR X8, [X8 + 0xC8]
	0x03DA07E4 MOV X1, X19
	0x03DA07E8 LDP X20, X19, [X31 + 0x10]
	0x03DA07EC LDR X2, [X8]
	0x03DA07F0 LDR X30, [X31], #0x20
	0x03DA07F4 B 0x24946D8
	0x03DA07F8 BL 0x1C16F20
	0x03DA07FC LDR W8, [X0 + 0x40]
	0x03DA0800 ANDS W31, W1, 0x1
	0x03DA0804 MOVZ W9, 0x10
	0x03DA0808 CSEL W9, W9, W31, NE
	0x03DA080C AND W8, W8, 0xFFFFFFEF
	0x03DA0810 ORR W8, W8, W9, 0x0
	0x03DA0814 STR W8, [X0 + 0x40]
	0x03DA0818 RET
	0x03DA081C STP X30, X23, [X31 - 0x30]!
	0x03DA0820 STP X22, X21, [X31 + 0x10]
	0x03DA0824 STP X20, X19, [X31 + 0x20]
	0x03DA0828 ADRP X22, 0x647000
	0x03DA082C ADRP X23, 0x3C8000
	0x03DA0830 ADRP X21, 0x3C8000
	0x03DA0834 LDRB W8, [X22 + 0xEC7]
	0x03DA0838 LDR X23, [X23 + 0xD0]
	0x03DA083C LDR X21, [X21 + 0xD8]
	0x03DA0840 MOV W20, W1
	0x03DA0844 MOV X19, X0
	0x03DA0848 TBNZ X8, 0x0, 0x3DA086C

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D9
	003 Move [X31+56], D8
	004 Move [X31+64], X29
	005 Move [X31+72], X30
	006 Move [X31+80], X28
	007 Move [X31+88], X27
	008 Move [X31+96], X26
	009 Move [X31+104], X25
	010 Move [X31+112], X24
	011 Move [X31+120], X23
	012 Move [X31+128], X22
	013 Move [X31+136], X21
	014 Move [X31+144], X20
	015 Move [X31+152], X19
	016 Move X22, 0x649000
	017 Move W8, [X22+3775]
	018 Move X20, X1
	019 Move X21, X0
	020 Move [X31+12], W2
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {108}
	025 Move X0, 0x37D000
	026 Move X0, [X0+2360]
	027 Call 0x1C17CF4
	028 Move X0, 0x3C4000
	029 Move X0, [X0+2320]
	030 Call 0x1C17CF4
	031 Move X0, 0x3CA000
	032 Move X0, [X0+48]
	033 Call 0x1C17CF4
	034 Move X0, 0x3CA000
	035 Move X0, [X0+80]
	036 Call 0x1C17CF4
	037 Move X0, 0x380000
	038 Move X0, [X0+512]
	039 Call 0x1C17CF4
	040 Move X0, 0x3C4000
	041 Move X0, [X0+3464]
	042 Call 0x1C17CF4
	043 Move X0, 0x3CA000
	044 Move X0, [X0+88]
	045 Call 0x1C17CF4
	046 Move X0, 0x3CA000
	047 Move X0, [X0+56]
	048 Call 0x1C17CF4
	049 Move X0, 0x37D000
	050 Move X0, [X0+2368]
	051 Call 0x1C17CF4
	052 Move X0, 0x3CA000
	053 Move X0, [X0+96]
	054 Call 0x1C17CF4
	055 Move X0, 0x37D000
	056 Move X0, [X0+2376]
	057 Call 0x1C17CF4
	058 Move X0, 0x3CA000
	059 Move X0, [X0+104]
	060 Call 0x1C17CF4
	061 Move X0, 0x3CA000
	062 Move X0, [X0+64]
	063 Call 0x1C17CF4
	064 Move X0, 0x380000
	065 Move X0, [X0+520]
	066 Call 0x1C17CF4
	067 Move X0, 0x37D000
	068 Move X0, [X0+2384]
	069 Call 0x1C17CF4
	070 Move X0, 0x3C4000
	071 Move X0, [X0+3488]
	072 Call 0x1C17CF4
	073 Move X0, 0x3C4000
	074 Move X0, [X0+2328]
	075 Call 0x1C17CF4
	076 Move X0, 0x3CA000
	077 Move X0, [X0+112]
	078 Call 0x1C17CF4
	079 Move X0, 0x3CA000
	080 Move X0, [X0+72]
	081 Call 0x1C17CF4
	082 Move X0, 0x3CA000
	083 Move X0, [X0+120]
	084 Call 0x1C17CF4
	085 Move X0, 0x381000
	086 Move X0, [X0+552]
	087 Call 0x1C17CF4
	088 Move X0, 0x380000
	089 Move X0, [X0+3376]
	090 Call 0x1C17CF4
	091 Move X0, 0x37E000
	092 Move X0, [X0+3704]
	093 Call 0x1C17CF4
	094 Move X0, 0x3CA000
	095 Move X0, [X0+128]
	096 Call 0x1C17CF4
	097 Move X0, 0x37D000
	098 Move X0, [X0+2392]
	099 Call 0x1C17CF4
	100 Move X0, 0x3CA000
	101 Move X0, [X0+136]
	102 Call 0x1C17CF4
	103 Move X0, 0x37E000
	104 Move X0, [X0+3664]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X22+3775], W8
	108 Move [X31+32], X31
	109 Move [X31+40], X31
	110 Move [X31+16], X31
	111 Move [X31+24], X31
	112 Move X26, [X21+24]
	113 Compare X26, 0
	114 JumpIfEqual {774}
	115 Move X27, 0x380000
	116 Move X28, 0x37E000
	117 Move X29, 0x381000
	118 Move X27, [X27+3376]
	119 Move X28, [X28+3704]
	120 Move X29, [X29+552]
	121 Move X22, X31
	122 Move W8, [X26+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X9, [X21+32]
	125 Compare X9, 0
	126 JumpIfEqual {774}
	127 Move W10, [X9+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add X9, X9, X22
	131 Add X19, X26, X22
	132 Move X25, [X9+32]
	133 Add X19, X19, 32
	134 Move X23, [X19]
	135 Move X9, [X21+16]
	136 Compare X9, 0
	137 JumpIfEqual {774}
	138 Move W10, [X9+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add X9, X9, X22
	141 Move X24, [X9+32]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Compare X24, 0
	144 JumpIfEqual {152}
	145 Move X8, [X26]
	146 Move X0, X24
	147 Move X1, [X8+64]
	148 Call 0x1C17E00
	149 Compare X0, 0
	150 JumpIfEqual {775}
	151 Move W8, [X26+24]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move [X19], X24
	154 Compare X25, 0
	155 JumpIfEqual {186}
	156 Move X8, [X25]
	157 Move X1, [X28]
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Compare X9, 0
	160 JumpIfEqual {167}
	161 Move X10, [X8+176]
	162 Add X10, X10, 8
	163 NotImplemented "Instruction LDUR not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Subtract X9, X9, 1
	166 Add X10, X10, 16
	167 Move W2, 5
	168 Move X0, X25
	169 Call 0x1C5D788
	170 Compare X25, 0
	171 JumpIfEqual {272}
	172 Move X8, [X25]
	173 Move X1, [X28]
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move W2, 5
	184 Move X0, X25
	185 Call 0x1C5D788
	186 Move X8, [X21+40]
	187 Compare X8, 0
	188 JumpIfEqual {774}
	189 Move W9, [X8+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Add X8, X8, X22
	192 Move X8, [X8+32]
	193 Compare X8, 0
	194 JumpIfNotEqual {429}
	195 Add X0, X31, 40
	196 Move X1, X20
	197 Call EventDispatcherGate..ctor, X0, X1
	198 Move X8, 0x37D000
	199 Move X8, [X8+2392]
	200 Move X0, [X8]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move W1, [X31+12]
	206 Move W0, W22
	207 Call PointerDeviceState.GetPointerPosition, X0, X1
	208 Move V8, V0
	209 Move V9, V1
	210 Move X0, X23
	211 Move X1, X24
	212 Move X2, X31
	213 Move W3, W22
	214 Call PointerEventsHelper.SendOverOut, X0, X1, X2, X3, X4
	215 Move X8, 0x3CA000
	216 Move X8, [X8+136]
	217 Move X4, [X8]
	218 Move X0, X23
	219 Move X1, X24
	220 Move X2, X31
	221 Move V0, V8
	222 Move V1, V9
	223 Move W3, W22
	224 Call 0x2232AE8, X0, X1, X2, X3, X4
	225 Move X8, [X21+48]
	226 Compare X8, 0
	227 JumpIfEqual {727}
	228 Move W9, [X8+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Add X8, X8, X22
	231 Move [X8+32], S8
	232 Move [X8+40], S9
	233 Move X8, 0x37E000
	234 Move X8, [X8+3664]
	235 Move X0, [X8]
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {243}
	239 Call 0x1C17DFC
	240 Move X8, 0x37E000
	241 Move X8, [X8+3664]
	242 Move X0, [X8]
	243 Move X8, [X0+184]
	244 Move W8, [X8+8]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X0, X23
	247 Move X1, X24
	248 Move X2, X31
	249 Move V0, V8
	250 Move V1, V9
	251 Call MouseEventsHelper.SendMouseOverMouseOut, X0, X1, X2, X3
	252 Move X8, 0x3CA000
	253 Move X8, [X8+128]
	254 Move X3, [X8]
	255 Move X0, X23
	256 Move X1, X24
	257 Move X2, X31
	258 Move V0, V8
	259 Move V1, V9
	260 Call 0x2220A20, X0, X1, X2, X3
	261 Move X25, X31
	262 Move W19, 12
	263 Move X0, [X31+40]
	264 Compare X0, 0
	265 JumpIfEqual {774}
	266 Call EventDispatcher.OpenGate, X0
	267 Compare X25, 0
	268 JumpIfNotEqual {778}
	269 Compare W19, 0
	270 JumpIfEqual {429}
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X8, [X21+40]
	273 Compare X8, 0
	274 JumpIfEqual {774}
	275 Move W9, [X8+24]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Add X8, X8, X22
	278 Move X23, [X8+32]
	279 Compare X23, 0
	280 JumpIfEqual {626}
	281 Move X8, [X23]
	282 Move X24, [X21+48]
	283 Move X1, [X27]
	284 NotImplemented "Instruction LDRH not yet implemented."
	285 Compare X9, 0
	286 JumpIfEqual {293}
	287 Move X10, [X8+176]
	288 Add X10, X10, 8
	289 NotImplemented "Instruction LDUR not yet implemented."
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Subtract X9, X9, 1
	292 Add X10, X10, 16
	293 Move W2, 1
	294 Move X0, X23
	295 Call 0x1C5D788
	296 Move W9, [X10]
	297 Add W9, W9, 5
	298 Add X8, X8, W9
	299 Add X0, X8, 312
	300 Move X8, [X0]
	301 Move X1, [X0+8]
	302 Move X0, X25
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Move X8, [X21+48]
	305 Compare X8, 0
	306 JumpIfEqual {774}
	307 Move W9, [X8+24]
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Add X8, X8, X22
	310 Move [X8+32], S0
	311 Move [X8+40], S1
	312 Move X8, [X25]
	313 Move X9, [X29]
	314 Move V8, V0
	315 Move V9, V1
	316 Move W11, [X8+304]
	317 Move W10, [X9+304]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X11, [X8+200]
	320 Add X10, X11, X10
	321 NotImplemented "Instruction LDUR not yet implemented."
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Move X9, [X8+392]
	324 Move X1, [X8+400]
	325 Move X0, X25
	326 NotImplemented "Instruction BLR not yet implemented."
	327 Move X8, 0x37F000
	328 Move X8, [X8+520]
	329 Move X26, X0
	330 Move X8, [X8]
	331 Move W9, [X8+224]
	332 Compare W9, 0
	333 JumpIfNotEqual {336}
	334 Move X0, X8
	335 Call 0x1C17DFC
	336 Move X8, 0x37F000
	337 Move X8, [X8+512]
	338 Move X0, [X8]
	339 Call 0x2D0E5C8
	340 NotImplemented "Instruction CMP not yet implemented."
	341 Move X8, [X25]
	342 Move X0, X25
	343 Move X9, [X8+392]
	344 Move X1, [X8+400]
	345 NotImplemented "Instruction BLR not yet implemented."
	346 Move X8, 0x37C000
	347 Move X8, [X8+2384]
	348 Move X26, X0
	349 Move X8, [X8]
	350 Move W9, [X8+224]
	351 Compare W9, 0
	352 JumpIfNotEqual {355}
	353 Move X0, X8
	354 Call 0x1C17DFC
	355 Move X8, 0x37C000
	356 Move X8, [X8+2360]
	357 Move X0, [X8]
	358 Call 0x2D0E5C8
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Move X8, [X25]
	361 Move X0, X25
	362 Move X9, [X8+392]
	363 Move X1, [X8+400]
	364 NotImplemented "Instruction BLR not yet implemented."
	365 Move X8, 0x37C000
	366 Move X8, [X8+2376]
	367 Move X26, X0
	368 Move X8, [X8]
	369 Move W9, [X8+224]
	370 Compare W9, 0
	371 JumpIfNotEqual {374}
	372 Move X0, X8
	373 Call 0x1C17DFC
	374 Move X8, 0x37C000
	375 Move X8, [X8+2368]
	376 Move X0, [X8]
	377 Call 0x2D0E5C8
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Move X8, [X25]
	380 Move X0, X25
	381 Move X9, [X8+392]
	382 Move X1, [X8+400]
	383 NotImplemented "Instruction BLR not yet implemented."
	384 Move X8, 0x3C3000
	385 Move X8, [X8+2328]
	386 Move X26, X0
	387 Move X8, [X8]
	388 Move W9, [X8+224]
	389 Compare W9, 0
	390 JumpIfNotEqual {393}
	391 Move X0, X8
	392 Call 0x1C17DFC
	393 Move X8, 0x3C3000
	394 Move X8, [X8+2320]
	395 Move X0, [X8]
	396 Call 0x2D0E5C8
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Add X0, X31, 32
	399 Move X1, X20
	400 Call EventDispatcherGate..ctor, X0, X1
	401 Move X0, X23
	402 Move X1, X24
	403 Move X2, X25
	404 Move V0, V8
	405 Move V1, V9
	406 Move W3, W22
	407 Call PointerEventsHelper.SendOverOut, X0, X1, X2, X3, X4
	408 Move X8, 0x3C9000
	409 Move X8, [X8+136]
	410 Move X4, [X8]
	411 Move X0, X23
	412 Move X1, X24
	413 Move X2, X25
	414 Move V0, V8
	415 Move V1, V9
	416 Move W3, W22
	417 Call 0x2232AE8, X0, X1, X2, X3, X4
	418 Move X25, X31
	419 Move W19, 19
	420 Move X0, [X31+32]
	421 Compare X0, 0
	422 JumpIfEqual {774}
	423 Call EventDispatcher.OpenGate, X0
	424 Compare X25, 0
	425 JumpIfNotEqual {778}
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Compare W19, 0
	428 JumpIfNotEqual {757}
	429 Move X8, [X21+32]
	430 Compare X8, 0
	431 JumpIfEqual {774}
	432 Move W9, [X8+24]
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Add X8, X8, X22
	435 Move [X8+32], X31
	436 Move X8, [X21+40]
	437 Compare X8, 0
	438 JumpIfEqual {774}
	439 Move W9, [X8+24]
	440 NotImplemented "Instruction CMP not yet implemented."
	441 Add X8, X8, X22
	442 Move X25, [X8+32]
	443 Compare X25, 0
	444 JumpIfEqual {626}
	445 Move X8, [X25]
	446 Move X1, [X27]
	447 NotImplemented "Instruction LDRH not yet implemented."
	448 Compare X9, 0
	449 JumpIfEqual {456}
	450 Move X10, [X8+176]
	451 Add X10, X10, 8
	452 NotImplemented "Instruction LDUR not yet implemented."
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Subtract X9, X9, 1
	455 Add X10, X10, 16
	456 Move W2, 1
	457 Move X0, X25
	458 Call 0x1C5D788
	459 Move W9, [X10]
	460 Add W9, W9, 1
	461 Add X8, X8, W9
	462 Add X0, X8, 312
	463 Move X8, [X0]
	464 Move X1, [X0+8]
	465 Move X0, X25
	466 NotImplemented "Instruction BLR not yet implemented."
	467 Move X8, [X21+48]
	468 Compare X8, 0
	469 JumpIfEqual {774}
	470 Move W9, [X8+24]
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Add X8, X8, X22
	473 Move [X8+32], S0
	474 Move [X8+40], S1
	475 Move X8, [X25]
	476 Move X9, [X29]
	477 Move V8, V0
	478 Move V9, V1
	479 Move W11, [X8+304]
	480 Move W10, [X9+304]
	481 NotImplemented "Instruction CMP not yet implemented."
	482 Move X11, [X8+200]
	483 Add X10, X11, X10
	484 NotImplemented "Instruction LDUR not yet implemented."
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move X9, [X8+392]
	487 Move X1, [X8+400]
	488 Move X0, X25
	489 NotImplemented "Instruction BLR not yet implemented."
	490 Move X8, 0x3C9000
	491 Move X8, [X8+120]
	492 Move X26, X0
	493 Move X8, [X8]
	494 Move W9, [X8+224]
	495 Compare W9, 0
	496 JumpIfNotEqual {499}
	497 Move X0, X8
	498 Call 0x1C17DFC
	499 Move X8, 0x3C9000
	500 Move X8, [X8+88]
	501 Move X0, [X8]
	502 Call 0x2D0E5C8
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Move X8, [X25]
	505 Move X0, X25
	506 Move X9, [X8+392]
	507 Move X1, [X8+400]
	508 NotImplemented "Instruction BLR not yet implemented."
	509 Move X8, 0x3C9000
	510 Move X8, [X8+104]
	511 Move X26, X0
	512 Move X8, [X8]
	513 Move W9, [X8+224]
	514 Compare W9, 0
	515 JumpIfNotEqual {518}
	516 Move X0, X8
	517 Call 0x1C17DFC
	518 Move X8, 0x3C9000
	519 Move X8, [X8+80]
	520 Move X0, [X8]
	521 Call 0x2D0E5C8
	522 NotImplemented "Instruction CMP not yet implemented."
	523 Move X8, [X25]
	524 Move X0, X25
	525 Move X9, [X8+392]
	526 Move X1, [X8+400]
	527 NotImplemented "Instruction BLR not yet implemented."
	528 Move X8, 0x3C3000
	529 Move X8, [X8+3488]
	530 Move X26, X0
	531 Move X8, [X8]
	532 Move W9, [X8+224]
	533 Compare W9, 0
	534 JumpIfNotEqual {537}
	535 Move X0, X8
	536 Call 0x1C17DFC
	537 Move X8, 0x3C3000
	538 Move X8, [X8+3464]
	539 Move X0, [X8]
	540 Call 0x2D0E5C8
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Move X8, [X25]
	543 Move X0, X25
	544 Move X9, [X8+392]
	545 Move X1, [X8+400]
	546 NotImplemented "Instruction BLR not yet implemented."
	547 Move X8, 0x3C9000
	548 Move X8, [X8+112]
	549 Move X26, X0
	550 Move X8, [X8]
	551 Move W9, [X8+224]
	552 Compare W9, 0
	553 JumpIfNotEqual {556}
	554 Move X0, X8
	555 Call 0x1C17DFC
	556 Move X8, 0x3C9000
	557 Move X8, [X8+96]
	558 Move X0, [X8]
	559 Call 0x2D0E5C8
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Add X0, X31, 24
	562 Move X1, X20
	563 Call EventDispatcherGate..ctor, X0, X1
	564 Move X0, X23
	565 Move X1, X24
	566 Move X2, X25
	567 Move V0, V8
	568 Move V1, V9
	569 Call MouseEventsHelper.SendMouseOverMouseOut, X0, X1, X2, X3
	570 Move X8, 0x3C9000
	571 Move X8, [X8+128]
	572 Move X3, [X8]
	573 Move X0, X23
	574 Move X1, X24
	575 Move X2, X25
	576 Move V0, V8
	577 Move V1, V9
	578 Call 0x2220A20, X0, X1, X2, X3
	579 Move X23, X31
	580 Move W19, 25
	581 Move X0, [X31+24]
	582 Compare X0, 0
	583 JumpIfEqual {774}
	584 Call EventDispatcher.OpenGate, X0
	585 Compare X23, 0
	586 JumpIfNotEqual {780}
	587 Compare W19, 0
	588 JumpIfEqual {590}
	589 NotImplemented "Instruction CMP not yet implemented."
	590 Move X8, [X21+40]
	591 Compare X8, 0
	592 JumpIfEqual {774}
	593 Move W9, [X8+24]
	594 NotImplemented "Instruction CMP not yet implemented."
	595 Add X8, X8, X22
	596 Move [X8+32], X31
	597 Move W9, [X10]
	598 Add W9, W9, 5
	599 Add X8, X8, W9
	600 Add X0, X8, 312
	601 Move X8, [X0]
	602 Move X1, [X0+8]
	603 Move X0, X25
	604 NotImplemented "Instruction BLR not yet implemented."
	605 Move X8, [X21+48]
	606 Compare X8, 0
	607 JumpIfEqual {774}
	608 Move W9, [X8+24]
	609 NotImplemented "Instruction CMP not yet implemented."
	610 Add X8, X8, X22
	611 Move W9, [X10]
	612 Add W9, W9, 1
	613 Add X8, X8, W9
	614 Add X0, X8, 312
	615 Move X8, [X0]
	616 Move X1, [X0+8]
	617 Move X0, X23
	618 NotImplemented "Instruction BLR not yet implemented."
	619 Compare X24, 0
	620 JumpIfEqual {774}
	621 Move W8, [X24+24]
	622 NotImplemented "Instruction CMP not yet implemented."
	623 Add X8, X24, X22
	624 Move [X8+32], S0
	625 Move [X8+40], S1
	626 Move X26, [X21+24]
	627 Add X22, X22, 1
	628 Compare X26, 0
	629 JumpIfNotEqual {122}
	630 Move X8, [X25]
	631 Move X0, X25
	632 Move X9, [X8+392]
	633 Move X1, [X8+400]
	634 NotImplemented "Instruction BLR not yet implemented."
	635 Move X8, 0x3C9000
	636 Move X8, [X8+64]
	637 Move X26, X0
	638 Move X8, [X8]
	639 Move W9, [X8+224]
	640 Compare W9, 0
	641 JumpIfNotEqual {644}
	642 Move X0, X8
	643 Call 0x1C17DFC
	644 Move X8, 0x3C9000
	645 Move X8, [X8+56]
	646 Move X0, [X8]
	647 Call 0x2D0E5C8
	648 NotImplemented "Instruction CMP not yet implemented."
	649 Move X8, [X25]
	650 Move X0, X25
	651 Move X9, [X8+392]
	652 Move X1, [X8+400]
	653 NotImplemented "Instruction BLR not yet implemented."
	654 Move X8, 0x3C9000
	655 Move X8, [X8+72]
	656 Move X26, X0
	657 Move X8, [X8]
	658 Move W9, [X8+224]
	659 Compare W9, 0
	660 JumpIfNotEqual {663}
	661 Move X0, X8
	662 Call 0x1C17DFC
	663 Move X8, 0x3C9000
	664 Move X8, [X8+48]
	665 Move X0, [X8]
	666 Call 0x2D0E5C8
	667 NotImplemented "Instruction CMP not yet implemented."
	668 Add X0, X31, 16
	669 Move X1, X20
	670 Call EventDispatcherGate..ctor, X0, X1
	671 Move X0, X23
	672 Move X1, X24
	673 Move X2, X31
	674 Move V0, V8
	675 Move V1, V9
	676 Move W3, W22
	677 Call PointerEventsHelper.SendOverOut, X0, X1, X2, X3, X4
	678 Move X8, 0x3C9000
	679 Move X8, [X8+136]
	680 Move X4, [X8]
	681 Move X0, X23
	682 Move X1, X24
	683 Move X2, X31
	684 Move V0, V8
	685 Move V1, V9
	686 Move W3, W22
	687 Call 0x2232AE8, X0, X1, X2, X3, X4
	688 Move X8, 0x37D000
	689 Move X8, [X8+3664]
	690 Move X0, [X8]
	691 Move W8, [X0+224]
	692 Compare W8, 0
	693 JumpIfNotEqual {698}
	694 Call 0x1C17DFC
	695 Move X8, 0x37D000
	696 Move X8, [X8+3664]
	697 Move X0, [X8]
	698 Move X8, [X0+184]
	699 Move W8, [X8+8]
	700 NotImplemented "Instruction CMP not yet implemented."
	701 Move X0, X23
	702 Move X1, X24
	703 Move X2, X25
	704 Move V0, V8
	705 Move V1, V9
	706 Call MouseEventsHelper.SendMouseOverMouseOut, X0, X1, X2, X3
	707 Move X8, 0x3C9000
	708 Move X8, [X8+128]
	709 Move X3, [X8]
	710 Move X0, X23
	711 Move X1, X24
	712 Move X2, X25
	713 Move V0, V8
	714 Move V1, V9
	715 Call 0x2220A20, X0, X1, X2, X3
	716 Move X23, X31
	717 Move W19, 30
	718 Move X0, [X31+16]
	719 Compare X0, 0
	720 JumpIfEqual {774}
	721 Call EventDispatcher.OpenGate, X0
	722 Compare X23, 0
	723 JumpIfNotEqual {780}
	724 NotImplemented "Instruction CMP not yet implemented."
	725 Compare W19, 0
	726 JumpIfEqual {590}
	727 Call 0x1C17F20
	728 Call 0x1C17F28
	729 Move X26, X0
	730 NotImplemented "Instruction CMP not yet implemented."
	731 Move X0, X26
	732 Call 0x3EB2AD0
	733 Move X23, [X0]
	734 Call 0x3EB2AE0
	735 Move W19, W31
	736 Move X26, X0
	737 NotImplemented "Instruction CMP not yet implemented."
	738 Move X0, X26
	739 Call 0x3EB2AD0
	740 Move X23, [X0]
	741 Call 0x3EB2AE0
	742 Move W19, W31
	743 Move X26, X0
	744 NotImplemented "Instruction CMP not yet implemented."
	745 Move X0, X26
	746 Call 0x3EB2AD0
	747 Move X25, [X0]
	748 Call 0x3EB2AE0
	749 Move W19, W31
	750 Move X26, X0
	751 NotImplemented "Instruction CMP not yet implemented."
	752 Move X0, X26
	753 Call 0x3EB2AD0
	754 Move X25, [X0]
	755 Call 0x3EB2AE0
	756 Move W19, W31
	757 Move X20, [X31+144]
	758 Move X19, [X31+152]
	759 Move X22, [X31+128]
	760 Move X21, [X31+136]
	761 Move X24, [X31+112]
	762 Move X23, [X31+120]
	763 Move X26, [X31+96]
	764 Move X25, [X31+104]
	765 Move X28, [X31+80]
	766 Move X27, [X31+88]
	767 Move X29, [X31+64]
	768 Move X30, [X31+72]
	769 Move D9, [X31+48]
	770 Move D8, [X31+56]
	771 Add X31, X31, 160
	772 Return 
	773 Call 0x1C17F28
	774 Call 0x1C17F20
	775 Call 0x1C17F44
	776 Move X1, X31
	777 Call 0x1C17DEC
	778 Move X0, X25
	779 Call 0x1C17F18
	780 Move X0, X23
	781 Call 0x1C17F18
	782 Move X25, X31
	783 Move X25, X31
	784 Move X23, X31
	785 Move X23, X31
	786 Move X26, X0
	787 Move X0, [X31+24]
	788 Compare X0, 0
	789 JumpIfNotEqual {791}
	790 Call 0x1C17F20
	791 Call EventDispatcher.OpenGate, X0
	792 Compare X23, 0
	793 JumpIfEqual {824}
	794 Move X0, X23
	795 Call 0x1C17F18
	796 Move X26, X0
	797 Move X0, [X31+16]
	798 Compare X0, 0
	799 JumpIfNotEqual {801}
	800 Call 0x1C17F20
	801 Call EventDispatcher.OpenGate, X0
	802 Compare X23, 0
	803 JumpIfEqual {824}
	804 Move X0, X23
	805 Call 0x1C17F18
	806 Move X26, X0
	807 Move X0, [X31+40]
	808 Compare X0, 0
	809 JumpIfNotEqual {811}
	810 Call 0x1C17F20
	811 Call EventDispatcher.OpenGate, X0
	812 Compare X25, 0
	813 JumpIfEqual {824}
	814 Move X0, X25
	815 Call 0x1C17F18
	816 Move X26, X0
	817 Move X0, [X31+32]
	818 Compare X0, 0
	819 JumpIfNotEqual {821}
	820 Call 0x1C17F20
	821 Call EventDispatcher.OpenGate, X0
	822 Compare X25, 0
	823 JumpIfNotEqual {826}
	824 Move X0, X26
	825 Call 0x1D2D690
	826 Move X0, X25
	827 Call 0x1C17F18
	828 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03DA0FB0 B 0x3DA1000
	0x03DA0FB4 LDR X0, [X19 + 0x10]
	0x03DA0FB8 CBZ X0, 0x3DA1014
	0x03DA0FBC ADRP X8, 0x3C8000
	0x03DA0FC0 LDR X8, [X8 + 0x168]
	0x03DA0FC4 MOV W1, W23
	0x03DA0FC8 LDR X2, [X8]
	0x03DA0FCC BL 0x301DA48
	0x03DA0FD0 CMP W20, 0x1
	0x03DA0FD4 B.EQ 0x3DA0FF0
	0x03DA0FD8 CMP W20, 0x2
	0x03DA0FDC B.NE 0x3DA0FFC
	0x03DA0FE0 LDR W8, [X19 + 0x18]
	0x03DA0FE4 SUB W8, W8, 0x1
	0x03DA0FE8 STR W8, [X19 + 0x18]
	0x03DA0FEC B 0x3DA0FFC
	0x03DA0FF0 LDR W8, [X19 + 0x1C]
	0x03DA0FF4 SUB W8, W8, 0x1
	0x03DA0FF8 STR W8, [X19 + 0x1C]
	0x03DA0FFC MOVZ W0, 0x1
	0x03DA1000 LDP X20, X19, [X31 + 0x30]
	0x03DA1004 LDP X22, X21, [X31 + 0x20]
	0x03DA1008 LDP X24, X23, [X31 + 0x10]
	0x03DA100C LDR X30, [X31], #0x40
	0x03DA1010 RET
	0x03DA1014 BL 0x1C16F20
	0x03DA1018 STP X30, X21, [X31 - 0x20]!
	0x03DA101C STP X20, X19, [X31 + 0x10]
	0x03DA1020 ADRP X21, 0x646000
	0x03DA1024 LDRB W8, [X21 + 0xECF]
	0x03DA1028 MOV X20, X1
	0x03DA102C MOV X19, X0
	0x03DA1030 TBNZ X8, 0x0, 0x3DA1048
	0x03DA1034 ADRP X0, 0x3C7000
	0x03DA1038 LDR X0, [X0 + 0x170]
	0x03DA103C BL 0x1C16CF4
	0x03DA1040 MOVZ W8, 0x1
	0x03DA1044 STRB W8, [X21 + 0xECF]
	0x03DA1048 LDR X0, [X19 + 0x10]
	0x03DA104C CBZ X0, 0x3DA10E8
	0x03DA1050 ADRP X9, 0x3C7000
	0x03DA1054 LDR X9, [X9 + 0x170]
	0x03DA1058 LDR W10, [X0 + 0x1C]
	0x03DA105C LDR X8, [X0 + 0x10]
	0x03DA1060 LDR X9, [X9]
	0x03DA1064 ADD W10, W10, 0x1
	0x03DA1068 STR W10, [X0 + 0x1C]
	0x03DA106C CBZ X8, 0x3DA10E8
	0x03DA1070 LDRSW X10, [X0 + 0x18]
	0x03DA1074 LDR W11, [X8 + 0x18]
	0x03DA1078 CMP W10, W11
	0x03DA107C B.CS 0x3DA1094
	0x03DA1080 ADD W9, W10, 0x1
	0x03DA1084 ADD X8, X8, X10, 0x3, LSL
	0x03DA1088 STR W9, [X0 + 0x18]
	0x03DA108C STR X20, [X8 + 0x20]
	0x03DA1090 B 0x3DA10A8
	0x03DA1094 LDR X8, [X9 + 0x20]
	0x03DA1098 MOV X1, X20
	0x03DA109C LDR X8, [X8 + 0xC0]
	0x03DA10A0 LDR X2, [X8 + 0x70]
	0x03DA10A4 BL 0x301BF90
	0x03DA10A8 CBZ X20, 0x3DA10E8
	0x03DA10AC LDR W8, [X20 + 0x10]
	0x03DA10B0 CMP W8, 0x1
	0x03DA10B4 B.EQ 0x3DA10D0
	0x03DA10B8 CMP W8, 0x2
	0x03DA10BC B.NE 0x3DA10DC
	0x03DA10C0 LDR W8, [X19 + 0x18]
	0x03DA10C4 ADD W8, W8, 0x1
	0x03DA10C8 STR W8, [X19 + 0x18]
	0x03DA10CC B 0x3DA10DC
	0x03DA10D0 LDR W8, [X19 + 0x1C]
	0x03DA10D4 ADD W8, W8, 0x1
	0x03DA10D8 STR W8, [X19 + 0x1C]
	0x03DA10DC LDP X20, X19, [X31 + 0x10]
	0x03DA10E0 LDP X30, X21, [X31], #0x20
	0x03DA10E4 RET
	0x03DA10E8 BL 0x1C16F20
	0x03DA10EC STR X30, [X31 - 0x20]!
	0x03DA10F0 STP X20, X19, [X31 + 0x10]
	0x03DA10F4 ADRP X20, 0x646000
	0x03DA10F8 LDRB W8, [X20 + 0xED1]
	0x03DA10FC MOV X19, X0
	0x03DA1100 TBNZ X8, 0x0, 0x3DA1118
	0x03DA1104 ADRP X0, 0x3C7000
	0x03DA1108 LDR X0, [X0 + 0x158]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x648000
	010 Move X20, 0x37D000
	011 Move W8, [X21+3776]
	012 Move X20, [X20+3664]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x356000
	019 Move X0, [X0+2488]
	020 Call 0x1C17CF4
	021 Move X0, 0x3C9000
	022 Move X0, [X0+176]
	023 Call 0x1C17CF4
	024 Move X0, 0x3C9000
	025 Move X0, [X0+184]
	026 Call 0x1C17CF4
	027 Move X0, 0x37D000
	028 Move X0, [X0+3664]
	029 Call 0x1C17CF4
	030 Move X0, 0x3AD000
	031 Move X0, [X0+2696]
	032 Call 0x1C17CF4
	033 Move X0, 0x37E000
	034 Move X0, [X0+2624]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+3776], W8
	038 Move X0, [X20]
	039 Move X25, 0x37E000
	040 Move X24, 0x3C8000
	041 Move X23, 0x3C8000
	042 Move X22, 0x3AD000
	043 Move X21, 0x355000
	044 Move X25, [X25+2624]
	045 Move W8, [X0+224]
	046 Move X24, [X24+184]
	047 Move X23, [X23+176]
	048 Move X22, [X22+2696]
	049 Move X21, [X21+2488]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X20]
	054 Move X8, [X0+184]
	055 Move X0, [X25]
	056 Move W1, [X8]
	057 Call 0x1C17D6C
	058 Move [X19+16], X0
	059 Move X8, [X20]
	060 Move X0, [X25]
	061 Move X8, [X8+184]
	062 Move W1, [X8]
	063 Call 0x1C17D6C
	064 Move [X19+24], X0
	065 Move X8, [X20]
	066 Move X0, [X24]
	067 Move X8, [X8+184]
	068 Move W1, [X8]
	069 Call 0x1C17D6C
	070 Move [X19+32], X0
	071 Move X8, [X20]
	072 Move X0, [X23]
	073 Move X8, [X8+184]
	074 Move W1, [X8]
	075 Call 0x1C17D6C
	076 Move [X19+40], X0
	077 Move X8, [X20]
	078 Move X0, [X22]
	079 Move X8, [X8+184]
	080 Move W1, [X8]
	081 Call 0x1C17D6C
	082 Move [X19+48], X0
	083 Move X8, [X20]
	084 Move X0, [X21]
	085 Move X8, [X8+184]
	086 Move W1, [X8]
	087 Call 0x1C17D6C
	088 Move [X19+56], X0
	089 Move X0, X19
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X24, [X31+16]
	095 Move X23, [X31+24]
	096 Move X1, X31
	097 Move X30, [X31+64]
	098 Move X25, [X31+72]
	099 Call Object..ctor, X0
	100 Return 

