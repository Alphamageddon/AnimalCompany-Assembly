Type: UnityEngine.UIElements.VisualTreeStyleUpdaterTraversal

Method: System.Single get_currentPixelsPerPoint()

Disassembly:
	0x03D1D488 ADD X0, X31, 0xD0
	0x03D1D48C LDR X1, [X8]

ISIL:
	001 Move V0, [X0+48]
	002 Return V0

Method: System.Void set_currentPixelsPerPoint(System.Single value)

Disassembly:
	0x03D1D490 BL 0x2BC9B60
	0x03D1D494 CBZ X24, 0x3D1CF98

ISIL:
	001 Move [X0+48], S0
	002 Return 

Method: System.Void PrepareTraversal(System.Single pixelsPerPoint)

Disassembly:
	0x03D1CE54 LDR X0, [X19]
	0x03D1CE58 ADRP X9, 0x448000

ISIL:
	001 Move [X0+48], S0
	002 Return 

Method: System.Void AddChangedElement(UnityEngine.UIElements.VisualElement ve, UnityEngine.UIElements.VersionChangeType versionChangeType)

Disassembly:
	0x03D1C5E4 MOV X1, X31
	0x03D1C5E8 STR X8, [X31 + 0x8]
	0x03D1C5EC BL 0x3DF88DC
	0x03D1C5F0 MOV X20, X0
	0x03D1C5F4 CBNZ X0, 0x3D1C5C4
	0x03D1C5F8 LDP X20, X19, [X31 + 0x20]
	0x03D1C5FC LDP X30, X21, [X31 + 0x10]
	0x03D1C600 ADD X31, X31, 0x30
	0x03D1C604 RET
	0x03D1C608 BL 0x1C16F20
	0x03D1C60C STR X30, [X31 - 0x10]!
	0x03D1C610 CBZ X0, 0x3D1C638
	0x03D1C614 LDR W8, [X0 + 0x2A4]
	0x03D1C618 LDR W9, [X0 + 0x2A8]
	0x03D1C61C UBFM X10, X1, 0x20, 0x3F
	0x03D1C620 ORR W8, W8, W10, 0x0
	0x03D1C624 ORR W9, W9, W2, 0x0
	0x03D1C628 STR W8, [X0 + 0x2A4]
	0x03D1C62C STR W9, [X0 + 0x2A8]
	0x03D1C630 LDR X30, [X31], #0x10
	0x03D1C634 RET
	0x03D1C638 BL 0x1C16F20
	0x03D1C63C SUB X31, X31, 0x170
	0x03D1C640 STP X29, X30, [X31 + 0x110]
	0x03D1C644 STP X28, X27, [X31 + 0x120]
	0x03D1C648 STP X26, X25, [X31 + 0x130]
	0x03D1C64C STP X24, X23, [X31 + 0x140]
	0x03D1C650 STP X22, X21, [X31 + 0x150]
	0x03D1C654 STP X20, X19, [X31 + 0x160]
	0x03D1C658 ADRP X22, 0x6CB000
	0x03D1C65C LDRB W8, [X22 + 0x94C]
	0x03D1C660 MOV W20, W2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x6CC000
	007 Move W8, [X22+2376]
	008 Move W21, W2
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x447000
	016 Move X0, [X0+1992]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2376], W8
	020 Move X0, [X20+24]
	021 Compare X0, 0
	022 JumpIfEqual {44}
	023 Move X8, 0x447000
	024 Move X8, [X8+1992]
	025 Move X1, X19
	026 Move X2, [X8]
	027 Call HashSet`1<Object>.Add, X0, X1
	028 Move TEMP, X21
	029 And TEMP, TEMP, 16
	030 Compare TEMP, 16
	031 JumpIfNotEqual {35}
	032 Move X0, X20
	033 Move X1, X19
	034 Call VisualTreeStyleUpdaterTraversal.PropagateToChildren, X0, X1
	035 Move X0, X20
	036 Move X1, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Call VisualTreeStyleUpdaterTraversal.PropagateToParents, X0, X1
	043 Return 
	044 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x03D1CA7C LDR X0, [X23]
	0x03D1CA80 LDR W8, [X0 + 0xE0]
	0x03D1CA84 CBNZ W8, 0x3D1CA8C
	0x03D1CA88 BL 0x1C16DFC
	0x03D1CA8C ADRP X8, 0x448000
	0x03D1CA90 LDR X8, [X8 + 0x310]
	0x03D1CA94 LDR X0, [X8]
	0x03D1CA98 BL 0x2D0D6C4
	0x03D1CA9C MOV X23, X0
	0x03D1CAA0 CBZ X0, 0x3D1CBDC
	0x03D1CAA4 MOV X0, X23
	0x03D1CAA8 MOV X1, X21
	0x03D1CAAC MOV X2, X31
	0x03D1CAB0 BL 0x3D9C6C8
	0x03D1CAB4 MOV X0, X21
	0x03D1CAB8 MOV X1, X23
	0x03D1CABC MOV X2, X31
	0x03D1CAC0 BL 0x3DA1680
	0x03D1CAC4 MOV X24, X31
	0x03D1CAC8 MOVZ W25, 0x19
	0x03D1CACC ADRP X10, 0x3D7000
	0x03D1CAD0 LDR X8, [X23]
	0x03D1CAD4 LDR X10, [X10 + 0xE00]
	0x03D1CAD8 LDRH W9, [X8 + 0x12E]
	0x03D1CADC LDR X1, [X10]
	0x03D1CAE0 CBZ X9, 0x3D1CB04
	0x03D1CAE4 LDR X10, [X8 + 0xB0]
	0x03D1CAE8 ADD X10, X10, 0x8
	0x03D1CAEC LDUR X11, [X10 - 0x8]
	0x03D1CAF0 CMP X11, X1
	0x03D1CAF4 B.EQ 0x3D1CB14
	0x03D1CAF8 SUBS X9, X9, 0x1
	0x03D1CAFC ADD X10, X10, 0x10
	0x03D1CB00 B.NE 0x3D1CAEC
	0x03D1CB04 MOV X0, X23
	0x03D1CB08 MOV W2, W31
	0x03D1CB0C BL 0x1C5C788
	0x03D1CB10 B 0x3D1CB20
	0x03D1CB14 LDRSW X9, [X10]
	0x03D1CB18 ADD X8, X8, X9, 0x4, LSL
	0x03D1CB1C ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x6CC000
	005 Move W8, [X20+2377]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x447000
	012 Move X0, [X0+2032]
	013 Call 0x1C17CF4
	014 Move X0, 0x449000
	015 Move X0, [X0+624]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2377], W8
	019 Move X0, [X19+24]
	020 Compare X0, 0
	021 JumpIfEqual {52}
	022 Move X20, 0x447000
	023 Move X20, [X20+2032]
	024 Move X1, [X20]
	025 Call HashSet`1<Object>.Clear, X0
	026 Move X0, [X19+32]
	027 Compare X0, 0
	028 JumpIfEqual {52}
	029 Move X1, [X20]
	030 Call HashSet`1<Object>.Clear, X0
	031 Move X8, [X19+40]
	032 Compare X8, 0
	033 JumpIfEqual {52}
	034 Move W2, [X8+24]
	035 Move W9, [X8+28]
	036 Add W9, W9, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X8+24], W31
	039 Move [X8+28], W9
	040 Move X0, [X8+16]
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W1, W31
	044 Move X3, X31
	045 Move X30, [X31+32]
	046 Call Array.Clear, X0, X1, X2
	047 Return 
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Return 
	052 Call 0x1C17F20

Method: System.Void PropagateToChildren(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D1D498 MOV X0, X24
	0x03D1D49C BL 0x1C16F18
	0x03D1D4A0 MOV X24, X31
	0x03D1D4A4 B 0x3D1D4AC
	0x03D1D4A8 MOV X25, X0
	0x03D1D4AC ADRP X8, 0x447000
	0x03D1D4B0 LDR X8, [X8 + 0x340]
	0x03D1D4B4 LDR X1, [X8]
	0x03D1D4B8 ADD X0, X31, 0xD0
	0x03D1D4BC BL 0x2BC9B60
	0x03D1D4C0 CBNZ X24, 0x3D1D4CC
	0x03D1D4C4 MOV X0, X25
	0x03D1D4C8 BL 0x1D2C690
	0x03D1D4CC MOV X0, X24
	0x03D1D4D0 BL 0x1C16F18
	0x03D1D4D4 BL 0x1990590
	0x03D1D4D8 STP X30, X27, [X31 - 0x50]!
	0x03D1D4DC STP X26, X25, [X31 + 0x10]
	0x03D1D4E0 STP X24, X23, [X31 + 0x20]
	0x03D1D4E4 STP X22, X21, [X31 + 0x30]
	0x03D1D4E8 STP X20, X19, [X31 + 0x40]
	0x03D1D4EC LDR X8, [X3 + 0x50]
	0x03D1D4F0 CBZ X8, 0x3D1D58C
	0x03D1D4F4 LDR W9, [X8 + 0x18]
	0x03D1D4F8 SUBS W26, W9, 0x1
	0x03D1D4FC B.MI 0x3D1D590
	0x03D1D500 MOV X19, X3
	0x03D1D504 MOV X20, X2
	0x03D1D508 MOV X21, X1
	0x03D1D50C MOVZ W27, 0x18
	0x03D1D510 LDR W9, [X8 + 0x18]
	0x03D1D514 CMP W26, W9
	0x03D1D518 B.CS 0x3D1D5A8
	0x03D1D51C CBZ X21, 0x3D1D58C
	0x03D1D520 UMADDL X8, X26, X27, X8
	0x03D1D524 LDP W25, W22, [X8 + 0x20]
	0x03D1D528 LDR W23, [X8 + 0x28]
	0x03D1D52C LDR X24, [X8 + 0x30]
	0x03D1D530 MOV X0, X21
	0x03D1D534 MOV X1, X31
	0x03D1D538 BL 0x3DEF4F8
	0x03D1D53C TBZ X0, 0x0, 0x3D1D558
	0x03D1D540 LDR X0, [X21 + 0x3B0]
	0x03D1D544 CBZ X0, 0x3D1D58C
	0x03D1D548 MOV W1, W25
	0x03D1D54C MOV X2, X31
	0x03D1D550 BL 0x3DE7BB4
	0x03D1D554 TBNZ X0, 0x0, 0x3D1D57C
	0x03D1D558 MOV X0, X21
	0x03D1D55C MOV W1, W25
	0x03D1D560 MOV X2, X20
	0x03D1D564 MOV X3, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x6CB000
	009 Move W8, [X21+2378]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x446000
	017 Move X0, [X0+1992]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2378], W8
	021 Compare X19, 0
	022 JumpIfEqual {64}
	023 Move X8, [X19+888]
	024 Add X0, X31, 8
	025 Move X1, X31
	026 Move [X31+8], X8
	027 Call Hierarchy.get_childCount, X0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X24, 0x446000
	030 Move X24, [X24+1992]
	031 Move W21, W0
	032 Move W22, W31
	033 Move X8, [X19+888]
	034 Add X0, X31, 8
	035 Move W1, W22
	036 Move X2, X31
	037 Move [X31+8], X8
	038 Call Hierarchy.get_Item, X0, X1
	039 Move X8, [X20+24]
	040 Compare X8, 0
	041 JumpIfEqual {64}
	042 Move X2, [X24]
	043 Move X23, X0
	044 Move X0, X8
	045 Move X1, X23
	046 Call HashSet`1<Object>.Add, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {54}
	051 Move X0, X20
	052 Move X1, X23
	053 Call VisualTreeStyleUpdaterTraversal.PropagateToChildren, X0, X1
	054 Add W22, W22, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, [X31+48]
	057 Move X19, [X31+56]
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Move X24, [X31+16]
	061 Move X23, [X31+24]
	062 Move X30, [X31+64]
	063 Return 
	064 Call 0x1C17F20

Method: System.Void PropagateToParents(UnityEngine.UIElements.VisualElement ve)

Disassembly:
	0x03D1D568 MOV W4, W22
	0x03D1D56C MOV W5, W23
	0x03D1D570 MOV X6, X24
	0x03D1D574 MOV X7, X31
	0x03D1D578 BL 0x3DD0A28
	0x03D1D57C SUBS W26, W26, 0x1
	0x03D1D580 B.MI 0x3D1D590
	0x03D1D584 LDR X8, [X19 + 0x50]
	0x03D1D588 CBNZ X8, 0x3D1D510
	0x03D1D58C BL 0x1C16F20
	0x03D1D590 LDP X20, X19, [X31 + 0x40]
	0x03D1D594 LDP X22, X21, [X31 + 0x30]
	0x03D1D598 LDP X24, X23, [X31 + 0x20]
	0x03D1D59C LDP X26, X25, [X31 + 0x10]
	0x03D1D5A0 LDP X30, X27, [X31], #0x50
	0x03D1D5A4 RET
	0x03D1D5A8 BL 0x1C16F28
	0x03D1D5AC SUB X31, X31, 0x80
	0x03D1D5B0 STP X30, X25, [X31 + 0x40]
	0x03D1D5B4 STP X24, X23, [X31 + 0x50]
	0x03D1D5B8 STP X22, X21, [X31 + 0x60]
	0x03D1D5BC STP X20, X19, [X31 + 0x70]
	0x03D1D5C0 ADRP X21, 0x6CA000
	0x03D1D5C4 LDRB W8, [X21 + 0x94D]
	0x03D1D5C8 MOV X20, X1
	0x03D1D5CC MOV X19, X0
	0x03D1D5D0 TBNZ X8, 0x0, 0x3D1D630
	0x03D1D5D4 ADRP X0, 0x447000
	0x03D1D5D8 LDR X0, [X0 + 0x278]
	0x03D1D5DC BL 0x1C16CF4
	0x03D1D5E0 ADRP X0, 0x447000
	0x03D1D5E4 LDR X0, [X0 + 0x280]
	0x03D1D5E8 BL 0x1C16CF4
	0x03D1D5EC ADRP X0, 0x447000
	0x03D1D5F0 LDR X0, [X0 + 0x288]
	0x03D1D5F4 BL 0x1C16CF4
	0x03D1D5F8 ADRP X0, 0x400000
	0x03D1D5FC LDR X0, [X0 + 0xED0]
	0x03D1D600 BL 0x1C16CF4
	0x03D1D604 ADRP X0, 0x447000
	0x03D1D608 LDR X0, [X0 + 0x290]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x6CB000
	007 Move W8, [X21+2379]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x446000
	015 Move X0, [X0+1992]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2379], W8
	019 Compare X20, 0
	020 JumpIfEqual {55}
	021 Move X8, [X20+888]
	022 Add X0, X31, 8
	023 Move X1, X31
	024 Move [X31+8], X8
	025 Call Hierarchy.get_parent, X0
	026 Compare X0, 0
	027 JumpIfEqual {49}
	028 Move X21, 0x446000
	029 Move X21, [X21+1992]
	030 Move X20, X0
	031 Move X0, [X19+32]
	032 Compare X0, 0
	033 JumpIfEqual {55}
	034 Move X2, [X21]
	035 Move X1, X20
	036 Call HashSet`1<Object>.Add, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {49}
	041 Move X8, [X20+888]
	042 Add X0, X31, 8
	043 Move X1, X31
	044 Move [X31+8], X8
	045 Call Hierarchy.get_parent, X0
	046 Move X20, X0
	047 Compare X0, 0
	048 JumpIfNotEqual {31}
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X30, [X31+16]
	052 Move X21, [X31+24]
	053 Add X31, X31, 48
	054 Return 
	055 Call 0x1C17F20

Method: System.Void OnProcessMatchResult(UnityEngine.UIElements.VisualElement current, UnityEngine.UIElements.StyleSheets.MatchResultInfo info)

Disassembly:
	0x03D1D60C BL 0x1C16CF4
	0x03D1D610 ADRP X0, 0x447000
	0x03D1D614 LDR X0, [X0 + 0x298]
	0x03D1D618 BL 0x1C16CF4
	0x03D1D61C ADRP X0, 0x447000
	0x03D1D620 LDR X0, [X0 + 0x378]
	0x03D1D624 BL 0x1C16CF4
	0x03D1D628 MOVZ W8, 0x1
	0x03D1D62C STRB W8, [X21 + 0x94D]
	0x03D1D630 STP X31, X31, [X31 + 0x20]
	0x03D1D634 STR X31, [X31 + 0x30]
	0x03D1D638 CBZ X20, 0x3D1D7CC

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {15}
	004 Move W8, [X0+676]
	005 Move W9, [X0+680]
	006 Move X10, X1
	007 ShiftRight X10, 32
	008 And X10, X10, 0x7FFFFFFF
	009 Or W8, W8, W10
	010 Or W9, W9, W2
	011 Move [X0+676], W8
	012 Move [X0+680], W9
	013 Move X30, [X31+16]
	014 Return 
	015 Call 0x1C17F20

Method: System.Void TraverseRecursive(UnityEngine.UIElements.VisualElement element, System.Int32 depth)

Disassembly:
	0x03D1D63C MOV X0, X20
	0x03D1D640 MOV X1, X31
	0x03D1D644 BL 0x3DE89D4
	0x03D1D648 CBZ X0, 0x3D1D7CC
	0x03D1D64C ADRP X24, 0x400000
	0x03D1D650 LDR X8, [X0]
	0x03D1D654 LDR X24, [X24 + 0xED0]
	0x03D1D658 LDR X22, [X19 + 0x48]
	0x03D1D65C MOV X21, X0
	0x03D1D660 LDRH W9, [X8 + 0x12E]
	0x03D1D664 LDR X1, [X24]
	0x03D1D668 CBZ X9, 0x3D1D68C
	0x03D1D66C LDR X10, [X8 + 0xB0]
	0x03D1D670 ADD X10, X10, 0x8
	0x03D1D674 LDUR X11, [X10 - 0x8]
	0x03D1D678 CMP X11, X1
	0x03D1D67C B.EQ 0x3D1D69C
	0x03D1D680 SUBS X9, X9, 0x1
	0x03D1D684 ADD X10, X10, 0x10
	0x03D1D688 B.NE 0x3D1D674
	0x03D1D68C MOVZ W2, 0x11
	0x03D1D690 MOV X0, X21
	0x03D1D694 BL 0x1C5C788
	0x03D1D698 B 0x3D1D6AC
	0x03D1D69C LDR W9, [X10]
	0x03D1D6A0 ADD W9, W9, 0x11
	0x03D1D6A4 ADD X8, X8, W9, 0x4, SXTW
	0x03D1D6A8 ADD X0, X8, 0x138
	0x03D1D6AC LDP X8, X2, [X0]
	0x03D1D6B0 MOV X0, X21
	0x03D1D6B4 MOV X1, X22
	0x03D1D6B8 BLR X8
	0x03D1D6BC LDR X0, [X19 + 0x48]
	0x03D1D6C0 CBZ X0, 0x3D1D7CC
	0x03D1D6C4 LDR W8, [X0 + 0x18]
	0x03D1D6C8 CMP W8, 0x1
	0x03D1D6CC B.LT 0x3D1D7B0
	0x03D1D6D0 ADRP X8, 0x447000
	0x03D1D6D4 LDR X8, [X8 + 0x298]
	0x03D1D6D8 ADRP X25, 0x447000
	0x03D1D6DC ADRP X23, 0x447000
	0x03D1D6E0 LDR X1, [X8]
	0x03D1D6E4 LDR X25, [X25 + 0x280]
	0x03D1D6E8 LDR X23, [X23 + 0x278]
	0x03D1D6EC ADD X8, X31, 0x8
	0x03D1D6F0 BL 0x2FDFD28
	0x03D1D6F4 LDUR V0, [X31 + 0x8]
	0x03D1D6F8 LDR X8, [X31 + 0x18]
	0x03D1D6FC STR V0, [X31 + 0x2]
	0x03D1D700 STR X8, [X31 + 0x30]
	0x03D1D704 LDR X1, [X25]
	0x03D1D708 ADD X0, X31, 0x20
	0x03D1D70C BL 0x2BBE90C
	0x03D1D710 TBZ X0, 0x0, 0x3D1D790
	0x03D1D714 LDR W21, [X31 + 0x30]
	0x03D1D718 MOV X0, X20
	0x03D1D71C MOV X1, X31
	0x03D1D720 BL 0x3DE89D4
	0x03D1D724 MOV X22, X0
	0x03D1D728 CBZ X0, 0x3D1D7C8
	0x03D1D72C LDR X8, [X22]
	0x03D1D730 LDR X1, [X24]
	0x03D1D734 LDRH W9, [X8 + 0x12E]
	0x03D1D738 CBZ X9, 0x3D1D75C
	0x03D1D73C LDR X10, [X8 + 0xB0]
	0x03D1D740 ADD X10, X10, 0x8
	0x03D1D744 LDUR X11, [X10 - 0x8]
	0x03D1D748 CMP X11, X1
	0x03D1D74C B.EQ 0x3D1D76C
	0x03D1D750 SUBS X9, X9, 0x1
	0x03D1D754 ADD X10, X10, 0x10
	0x03D1D758 B.NE 0x3D1D744
	0x03D1D75C MOVZ W2, 0x10
	0x03D1D760 MOV X0, X22
	0x03D1D764 BL 0x1C5C788
	0x03D1D768 B 0x3D1D77C
	0x03D1D76C LDR W9, [X10]
	0x03D1D770 ADD W9, W9, 0x10
	0x03D1D774 ADD X8, X8, W9, 0x4, SXTW
	0x03D1D778 ADD X0, X8, 0x138
	0x03D1D77C LDP X8, X2, [X0]
	0x03D1D780 MOV X0, X22
	0x03D1D784 MOV W1, W21
	0x03D1D788 BLR X8
	0x03D1D78C B 0x3D1D704
	0x03D1D790 LDR X1, [X23]
	0x03D1D794 ADD X0, X31, 0x20
	0x03D1D798 BL 0x2BBE908
	0x03D1D79C LDR X8, [X19 + 0x48]
	0x03D1D7A0 CBZ X8, 0x3D1D7CC
	0x03D1D7A4 LDR W9, [X8 + 0x1C]
	0x03D1D7A8 ADD W9, W9, 0x1
	0x03D1D7AC STP W31, W9, [X8 + 0x18]
	0x03D1D7B0 LDP X20, X19, [X31 + 0x70]
	0x03D1D7B4 LDP X22, X21, [X31 + 0x60]
	0x03D1D7B8 LDP X24, X23, [X31 + 0x50]
	0x03D1D7BC LDP X30, X25, [X31 + 0x40]
	0x03D1D7C0 ADD X31, X31, 0x80
	0x03D1D7C4 RET
	0x03D1D7C8 BL 0x1C16F20
	0x03D1D7CC BL 0x1C16F20
	0x03D1D7D0 B 0x3D1D7DC
	0x03D1D7D4 B 0x3D1D7DC
	0x03D1D7D8 B 0x3D1D7DC
	0x03D1D7DC MOV X20, X0
	0x03D1D7E0 CMP W1, 0x1
	0x03D1D7E4 B.NE 0x3D1D810
	0x03D1D7E8 MOV X0, X20
	0x03D1D7EC BL 0x3EB1AD0
	0x03D1D7F0 LDR X21, [X0]
	0x03D1D7F4 BL 0x3EB1AE0
	0x03D1D7F8 LDR X1, [X23]
	0x03D1D7FC ADD X0, X31, 0x20
	0x03D1D800 BL 0x2BBE908
	0x03D1D804 CBZ X21, 0x3D1D79C
	0x03D1D808 MOV X0, X21
	0x03D1D80C BL 0x1C16F18
	0x03D1D810 MOV X21, X31
	0x03D1D814 B 0x3D1D81C
	0x03D1D818 MOV X20, X0
	0x03D1D81C LDR X1, [X23]
	0x03D1D820 ADD X0, X31, 0x20
	0x03D1D824 BL 0x2BBE908
	0x03D1D828 CBNZ X21, 0x3D1D834
	0x03D1D82C MOV X0, X20
	0x03D1D830 BL 0x1D2C690
	0x03D1D834 MOV X0, X21
	0x03D1D838 BL 0x1C16F18
	0x03D1D83C BL 0x1990590
	0x03D1D840 SUB X31, X31, 0x90
	0x03D1D844 STP X31, X30, [X31 + 0x48]
	0x03D1D848 STP X24, X23, [X31 + 0x60]
	0x03D1D84C STP X22, X21, [X31 + 0x70]
	0x03D1D850 STP X20, X19, [X31 + 0x80]
	0x03D1D854 STP X31, X31, [X31 + 0x38]
	0x03D1D858 CBZ X2, 0x3D1D934
	0x03D1D85C MOV X19, X1
	0x03D1D860 MOV X20, X0
	0x03D1D864 MOV X0, X2
	0x03D1D868 MOV X1, X31
	0x03D1D86C BL 0x3E064FC
	0x03D1D870 CBZ X0, 0x3D1D934
	0x03D1D874 LDR W8, [X0 + 0x18]
	0x03D1D878 MOV X21, X0
	0x03D1D87C CMP W8, 0x1
	0x03D1D880 B.LT 0x3D1D91C
	0x03D1D884 MOV W24, W31
	0x03D1D888 CMP W24, W8
	0x03D1D88C B.CS 0x3D1D938
	0x03D1D890 ADD X8, X21, W24, 0x3, SXTW
	0x03D1D894 LDR X22, [X8 + 0x20]
	0x03D1D898 CBZ X22, 0x3D1D934
	0x03D1D89C LDRB W8, [X22 + 0x28]
	0x03D1D8A0 CBZ W8, 0x3D1D90C
	0x03D1D8A4 MOV X0, X22
	0x03D1D8A8 MOV X1, X31
	0x03D1D8AC BL 0x3E064E4
	0x03D1D8B0 MOV X23, X0
	0x03D1D8B4 MOV X0, X22
	0x03D1D8B8 MOV X1, X31
	0x03D1D8BC BL 0x3E064EC
	0x03D1D8C0 MOV X3, X0
	0x03D1D8C4 ADD X0, X31, 0x38
	0x03D1D8C8 MOV X1, X23
	0x03D1D8CC MOV X2, X19
	0x03D1D8D0 MOV X4, X31
	0x03D1D8D4 BL 0x3E07D2C
	0x03D1D8D8 LDR X0, [X20 + 0x10]
	0x03D1D8DC LDUR V0, [X31 + 0x38]
	0x03D1D8E0 LDR X8, [X31 + 0x48]
	0x03D1D8E4 STR V0, [X31 + 0x2]
	0x03D1D8E8 STR X8, [X31 + 0x30]
	0x03D1D8EC CBZ X0, 0x3D1D934
	0x03D1D8F0 LDR V0, [X31 + 0x2]
	0x03D1D8F4 LDR X8, [X31 + 0x30]
	0x03D1D8F8 ADD X1, X31, 0x0
	0x03D1D8FC MOV X2, X31
	0x03D1D900 STR V0, [X31]
	0x03D1D904 STR X8, [X31 + 0x10]
	0x03D1D908 BL 0x3E07DB0
	0x03D1D90C LDR W8, [X21 + 0x18]
	0x03D1D910 ADD W24, W24, 0x1
	0x03D1D914 CMP W24, W8
	0x03D1D918 B.LT 0x3D1D888
	0x03D1D91C LDP X20, X19, [X31 + 0x80]
	0x03D1D920 LDP X22, X21, [X31 + 0x70]
	0x03D1D924 LDP X24, X23, [X31 + 0x60]
	0x03D1D928 LDR X30, [X31 + 0x50]
	0x03D1D92C ADD X31, X31, 0x90
	0x03D1D930 RET
	0x03D1D934 BL 0x1C16F20
	0x03D1D938 BL 0x1C16F28
	0x03D1D93C STR X30, [X31 - 0x20]!
	0x03D1D940 STP X20, X19, [X31 + 0x10]
	0x03D1D944 ADRP X19, 0x6CA000
	0x03D1D948 ADRP X20, 0x447000
	0x03D1D94C LDRB W8, [X19 + 0x952]
	0x03D1D950 LDR X20, [X20 + 0x330]
	0x03D1D954 TBNZ X8, 0x0, 0x3D1D96C
	0x03D1D958 ADRP X0, 0x447000
	0x03D1D95C LDR X0, [X0 + 0x330]
	0x03D1D960 BL 0x1C16CF4
	0x03D1D964 MOVZ W8, 0x1
	0x03D1D968 STRB W8, [X19 + 0x952]
	0x03D1D96C LDR X0, [X20]
	0x03D1D970 BL 0x1C16F10
	0x03D1D974 MOV X1, X31
	0x03D1D978 MOV X19, X0
	0x03D1D97C BL 0x33BDD8C
	0x03D1D980 LDR X8, [X20]
	0x03D1D984 LDR X8, [X8 + 0xB8]
	0x03D1D988 STR X19, [X8]
	0x03D1D98C LDP X20, X19, [X31 + 0x10]
	0x03D1D990 LDR X30, [X31], #0x20
	0x03D1D994 RET
	0x03D1D998 MOV X1, X31
	0x03D1D99C B 0x33BDD8C
	0x03D1D9A0 SUB X31, X31, 0x50
	0x03D1D9A4 STR X30, [X31 + 0x40]
	0x03D1D9A8 LDR X8, [X1 + 0x10]
	0x03D1D9AC LDR V0, [X1]
	0x03D1D9B0 ADD X0, X31, 0x20
	0x03D1D9B4 ADD X1, X31, 0x0
	0x03D1D9B8 STR X8, [X31 + 0x30]
	0x03D1D9BC STR V0, [X31 + 0x2]
	0x03D1D9C0 LDR X8, [X2 + 0x10]
	0x03D1D9C4 LDR V0, [X2]
	0x03D1D9C8 MOV X2, X31
	0x03D1D9CC STR X8, [X31 + 0x10]
	0x03D1D9D0 STR V0, [X31]
	0x03D1D9D4 BL 0x3D528A0
	0x03D1D9D8 LDR X30, [X31 + 0x40]
	0x03D1D9DC ADD X31, X31, 0x50
	0x03D1D9E0 RET
	0x03D1D9E4 STR X30, [X31 - 0x30]!
	0x03D1D9E8 STP X22, X21, [X31 + 0x10]
	0x03D1D9EC STP X20, X19, [X31 + 0x20]
	0x03D1D9F0 ADRP X22, 0x6CA000
	0x03D1D9F4 ADRP X21, 0x447000
	0x03D1D9F8 LDRB W8, [X22 + 0x953]
	0x03D1D9FC LDR X21, [X21 + 0x380]
	0x03D1DA00 MOV X20, X1
	0x03D1DA04 MOV X19, X0
	0x03D1DA08 TBNZ X8, 0x0, 0x3D1DA20
	0x03D1DA0C ADRP X0, 0x447000
	0x03D1DA10 LDR X0, [X0 + 0x380]
	0x03D1DA14 BL 0x1C16CF4
	0x03D1DA18 MOVZ W8, 0x1
	0x03D1DA1C STRB W8, [X22 + 0x953]
	0x03D1DA20 MOV X0, X19
	0x03D1DA24 MOV X1, X31
	0x03D1DA28 BL 0x33BDD8C
	0x03D1DA2C STR X20, [X19 + 0x10]
	0x03D1DA30 LDR X0, [X21]
	0x03D1DA34 BL 0x1C16F10
	0x03D1DA38 MOV X20, X0
	0x03D1DA3C BL 0x3D1DA58
	0x03D1DA40 STR X20, [X19 + 0x18]
	0x03D1DA44 MOV X0, X19
	0x03D1DA48 LDP X20, X19, [X31 + 0x20]
	0x03D1DA4C LDP X22, X21, [X31 + 0x10]
	0x03D1DA50 LDR X30, [X31], #0x30
	0x03D1DA54 B 0x3D1DAB4
	0x03D1DA58 STP X30, X21, [X31 - 0x20]!
	0x03D1DA5C STP X20, X19, [X31 + 0x10]
	0x03D1DA60 ADRP X21, 0x6CA000
	0x03D1DA64 ADRP X20, 0x447000
	0x03D1DA68 LDRB W8, [X21 + 0x958]
	0x03D1DA6C LDR X20, [X20 + 0x388]
	0x03D1DA70 MOV X19, X0
	0x03D1DA74 TBNZ X8, 0x0, 0x3D1DA8C
	0x03D1DA78 ADRP X0, 0x447000
	0x03D1DA7C LDR X0, [X0 + 0x388]
	0x03D1DA80 BL 0x1C16CF4
	0x03D1DA84 MOVZ W8, 0x1
	0x03D1DA88 STRB W8, [X21 + 0x958]
	0x03D1DA8C MOV X0, X19
	0x03D1DA90 MOV X1, X31
	0x03D1DA94 BL 0x33BDD8C
	0x03D1DA98 LDR X0, [X20]
	0x03D1DA9C MOVZ W1, 0x7
	0x03D1DAA0 BL 0x1C16D6C
	0x03D1DAA4 STR X0, [X19 + 0x10]
	0x03D1DAA8 LDP X20, X19, [X31 + 0x10]
	0x03D1DAAC LDP X30, X21, [X31], #0x20
	0x03D1DAB0 RET
	0x03D1DAB4 STP X30, X27, [X31 - 0x50]!
	0x03D1DAB8 STP X26, X25, [X31 + 0x10]
	0x03D1DABC STP X24, X23, [X31 + 0x20]
	0x03D1DAC0 STP X22, X21, [X31 + 0x30]
	0x03D1DAC4 STP X20, X19, [X31 + 0x40]
	0x03D1DAC8 ADRP X26, 0x6CA000
	0x03D1DACC ADRP X27, 0x447000
	0x03D1DAD0 ADRP X25, 0x447000
	0x03D1DAD4 ADRP X24, 0x447000
	0x03D1DAD8 ADRP X23, 0x447000
	0x03D1DADC ADRP X22, 0x447000
	0x03D1DAE0 ADRP X21, 0x447000
	0x03D1DAE4 ADRP X20, 0x447000
	0x03D1DAE8 LDR X27, [X27 + 0x390]
	0x03D1DAEC LDR X25, [X25 + 0x398]
	0x03D1DAF0 LDRB W8, [X26 + 0x957]
	0x03D1DAF4 LDR X24, [X24 + 0x3A0]
	0x03D1DAF8 LDR X23, [X23 + 0x3A8]
	0x03D1DAFC LDR X22, [X22 + 0x3B0]
	0x03D1DB00 LDR X21, [X21 + 0x3B8]
	0x03D1DB04 LDR X20, [X20 + 0x3C0]
	0x03D1DB08 MOV X19, X0
	0x03D1DB0C TBNZ X8, 0x0, 0x3D1DB6C
	0x03D1DB10 ADRP X0, 0x447000
	0x03D1DB14 LDR X0, [X0 + 0x3B0]
	0x03D1DB18 BL 0x1C16CF4
	0x03D1DB1C ADRP X0, 0x447000
	0x03D1DB20 LDR X0, [X0 + 0x3C0]
	0x03D1DB24 BL 0x1C16CF4
	0x03D1DB28 ADRP X0, 0x447000
	0x03D1DB2C LDR X0, [X0 + 0x3A0]
	0x03D1DB30 BL 0x1C16CF4
	0x03D1DB34 ADRP X0, 0x447000
	0x03D1DB38 LDR X0, [X0 + 0x398]
	0x03D1DB3C BL 0x1C16CF4
	0x03D1DB40 ADRP X0, 0x447000
	0x03D1DB44 LDR X0, [X0 + 0x3B8]
	0x03D1DB48 BL 0x1C16CF4
	0x03D1DB4C ADRP X0, 0x447000
	0x03D1DB50 LDR X0, [X0 + 0x3A8]
	0x03D1DB54 BL 0x1C16CF4
	0x03D1DB58 ADRP X0, 0x447000
	0x03D1DB5C LDR X0, [X0 + 0x390]
	0x03D1DB60 BL 0x1C16CF4
	0x03D1DB64 MOVZ W8, 0x1
	0x03D1DB68 STRB W8, [X26 + 0x957]
	0x03D1DB6C LDR X2, [X27]
	0x03D1DB70 MOV X0, X19
	0x03D1DB74 MOV W1, W31
	0x03D1DB78 BL 0x22AAE6C
	0x03D1DB7C LDR X2, [X25]
	0x03D1DB80 MOVZ W1, 0x1
	0x03D1DB84 MOV X0, X19
	0x03D1DB88 BL 0x22AAE6C
	0x03D1DB8C LDR X2, [X24]
	0x03D1DB90 MOVZ W1, 0x2
	0x03D1DB94 MOV X0, X19
	0x03D1DB98 BL 0x22AAE6C
	0x03D1DB9C LDR X2, [X23]
	0x03D1DBA0 MOVZ W1, 0x3
	0x03D1DBA4 MOV X0, X19
	0x03D1DBA8 BL 0x22AAE6C
	0x03D1DBAC LDR X2, [X22]
	0x03D1DBB0 MOVZ W1, 0x4
	0x03D1DBB4 MOV X0, X19
	0x03D1DBB8 BL 0x22AAE6C
	0x03D1DBBC LDR X2, [X21]
	0x03D1DBC0 MOVZ W1, 0x5
	0x03D1DBC4 MOV X0, X19
	0x03D1DBC8 BL 0x22AAE6C
	0x03D1DBCC LDR X2, [X20]
	0x03D1DBD0 MOV X0, X19
	0x03D1DBD4 LDP X20, X19, [X31 + 0x40]
	0x03D1DBD8 LDP X22, X21, [X31 + 0x30]
	0x03D1DBDC LDP X24, X23, [X31 + 0x20]
	0x03D1DBE0 LDP X26, X25, [X31 + 0x10]
	0x03D1DBE4 MOVZ W1, 0x6
	0x03D1DBE8 LDP X30, X27, [X31], #0x50
	0x03D1DBEC B 0x22AAE6C
	0x03D1DBF0 STR X30, [X31 - 0x30]!
	0x03D1DBF4 STP X22, X21, [X31 + 0x10]
	0x03D1DBF8 STP X20, X19, [X31 + 0x20]
	0x03D1DBFC ADRP X20, 0x6CA000
	0x03D1DC00 LDRB W8, [X20 + 0x954]
	0x03D1DC04 MOV X19, X0
	0x03D1DC08 TBNZ X8, 0x0, 0x3D1DC20
	0x03D1DC0C ADRP X0, 0x3D6000
	0x03D1DC10 LDR X0, [X0 + 0xE00]
	0x03D1DC14 BL 0x1C16CF4
	0x03D1DC18 MOVZ W8, 0x1
	0x03D1DC1C STRB W8, [X20 + 0x954]
	0x03D1DC20 ADRP X22, 0x3D6000
	0x03D1DC24 LDR X22, [X22 + 0xE00]
	0x03D1DC28 MOV W20, W31
	0x03D1DC2C LDR X0, [X19 + 0x18]
	0x03D1DC30 CBZ X0, 0x3D1DCB8
	0x03D1DC34 MOV W1, W20
	0x03D1DC38 BL 0x3D1DCBC
	0x03D1DC3C CBZ X0, 0x3D1DCB8
	0x03D1DC40 LDR X8, [X0]
	0x03D1DC44 LDR X1, [X22]
	0x03D1DC48 MOV X21, X0
	0x03D1DC4C LDRH W9, [X8 + 0x12E]
	0x03D1DC50 CBZ X9, 0x3D1DC74
	0x03D1DC54 LDR X10, [X8 + 0xB0]
	0x03D1DC58 ADD X10, X10, 0x8
	0x03D1DC5C LDUR X11, [X10 - 0x8]
	0x03D1DC60 CMP X11, X1
	0x03D1DC64 B.EQ 0x3D1DC84
	0x03D1DC68 SUBS X9, X9, 0x1
	0x03D1DC6C ADD X10, X10, 0x10
	0x03D1DC70 B.NE 0x3D1DC5C
	0x03D1DC74 MOV X0, X21
	0x03D1DC78 MOV W2, W31
	0x03D1DC7C BL 0x1C5C788
	0x03D1DC80 B 0x3D1DC90
	0x03D1DC84 LDRSW X9, [X10]
	0x03D1DC88 ADD X8, X8, X9, 0x4, LSL
	0x03D1DC8C ADD X0, X8, 0x138
	0x03D1DC90 LDP X8, X1, [X0]
	0x03D1DC94 MOV X0, X21
	0x03D1DC98 BLR X8

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+272], X29
	003 Move [X31+280], X30
	004 Move [X31+288], X28
	005 Move [X31+296], X27
	006 Move [X31+304], X26
	007 Move [X31+312], X25
	008 Move [X31+320], X24
	009 Move [X31+328], X23
	010 Move [X31+336], X22
	011 Move [X31+344], X21
	012 Move [X31+352], X20
	013 Move [X31+360], X19
	014 Move X22, 0x6CB000
	015 Move W8, [X22+2380]
	016 Move W20, W2
	017 Move X21, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {52}
	023 Move X0, 0x448000
	024 Move X0, [X0+616]
	025 Call 0x1C17CF4
	026 Move X0, 0x448000
	027 Move X0, [X0+784]
	028 Call 0x1C17CF4
	029 Move X0, 0x448000
	030 Move X0, [X0+792]
	031 Call 0x1C17CF4
	032 Move X0, 0x448000
	033 Move X0, [X0+800]
	034 Call 0x1C17CF4
	035 Move X0, 0x3D7000
	036 Move X0, [X0+3584]
	037 Call 0x1C17CF4
	038 Move X0, 0x448000
	039 Move X0, [X0+624]
	040 Call 0x1C17CF4
	041 Move X0, 0x448000
	042 Move X0, [X0+304]
	043 Call 0x1C17CF4
	044 Move X0, 0x448000
	045 Move X0, [X0+776]
	046 Call 0x1C17CF4
	047 Move X0, 0x448000
	048 Move X0, [X0+808]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X22+2380], W8
	052 NotImplemented "Instruction MOVI not yet implemented."
	053 Move X0, X19
	054 Move X1, X21
	055 Move [X31+256], X31
	056 Move [X31+224], V0
	057 Move [X31+232], V0
	058 Move [X31+192], V0
	059 Move [X31+200], V0
	060 Move [X31+11], V0
	061 Call VisualTreeStyleUpdaterTraversal.ShouldSkipElement, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {414}
	066 Move X0, [X19+24]
	067 Compare X0, 0
	068 JumpIfEqual {146}
	069 Move X8, 0x448000
	070 Move X8, [X8+800]
	071 Move X1, X21
	072 Move X2, [X8]
	073 Call HashSet`1<Object>.Contains, X0, X1
	074 Move W24, W0
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {84}
	079 Compare X21, 0
	080 JumpIfEqual {146}
	081 Add X8, X21, 676
	082 NotImplemented "Instruction MOVI not yet implemented."
	083 Move [X8], D0
	084 Move X0, [X19+56]
	085 Compare X0, 0
	086 JumpIfEqual {146}
	087 Call StyleMatchingContext.get_styleSheetCount, X0
	088 Compare X21, 0
	089 JumpIfEqual {146}
	090 Move W22, W0
	091 Move X0, [X21+952]
	092 Compare X0, 0
	093 JumpIfEqual {147}
	094 Move X28, 0x448000
	095 Move X28, [X28+776]
	096 Move W23, W31
	097 Move W8, [X0+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X2, [X28]
	100 Move W1, W23
	101 Call List`1<Object>.get_Item, X0, X1
	102 Compare X0, 0
	103 JumpIfEqual {146}
	104 Move X1, X31
	105 Move X25, X0
	106 Call StyleSheet.get_flattenedRecursiveImports, X0
	107 Compare X0, 0
	108 JumpIfEqual {137}
	109 Move X0, X25
	110 Move X1, X31
	111 Call StyleSheet.get_flattenedRecursiveImports, X0
	112 Compare X0, 0
	113 JumpIfEqual {146}
	114 Move W26, W31
	115 Move W8, [X0+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X27, [X19+56]
	118 Move X0, X25
	119 Move X1, X31
	120 Call StyleSheet.get_flattenedRecursiveImports, X0
	121 Compare X0, 0
	122 JumpIfEqual {146}
	123 Move X2, [X28]
	124 Move W1, W26
	125 Call List`1<Object>.get_Item, X0, X1
	126 Compare X27, 0
	127 JumpIfEqual {146}
	128 Move X1, X0
	129 Move X0, X27
	130 Call StyleMatchingContext.AddStyleSheet, X0, X1
	131 Move X0, X25
	132 Move X1, X31
	133 Add W26, W26, 1
	134 Call StyleSheet.get_flattenedRecursiveImports, X0
	135 Compare X0, 0
	136 JumpIfNotEqual {115}
	137 Move X0, [X19+56]
	138 Compare X0, 0
	139 JumpIfEqual {146}
	140 Move X1, X25
	141 Call StyleMatchingContext.AddStyleSheet, X0, X1
	142 Move X0, [X21+952]
	143 Add W23, W23, 1
	144 Compare X0, 0
	145 JumpIfNotEqual {97}
	146 Call 0x1C17F20
	147 Move X8, [X19+56]
	148 Compare X8, 0
	149 JumpIfEqual {146}
	150 Move X26, [X8+24]
	151 Move X0, X21
	152 Move X1, X31
	153 Call VisualElement.get_computedStyle, X0
	154 Move X1, X31
	155 Call ComputedStyle.get_customPropertiesCount, X0
	156 Move X8, [X19+56]
	157 Move TEMP, X24
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {263}
	161 Compare X8, 0
	162 JumpIfEqual {146}
	163 Move [X8+32], X21
	164 Move X1, [X19+40]
	165 Move W23, W0
	166 Subtract W2, W22, 1
	167 Move X0, X8
	168 Move X3, X31
	169 Call StyleSelectorHelper.FindMatches, X0, X1, X2
	170 Move X2, [X19+40]
	171 Add X8, X31, 88
	172 Move X0, X19
	173 Move X1, X21
	174 Call VisualTreeStyleUpdaterTraversal.ProcessMatchedRules, X0, X1, X2
	175 Add X0, X31, 176
	176 Add X1, X31, 88
	177 Move W2, 88
	178 Call 0x3EB2AC0
	179 Add X8, X31, 0
	180 Add X0, X31, 176
	181 Move X1, X31
	182 Call ComputedStyle.Acquire, X0
	183 Move X0, X21
	184 Move X1, X31
	185 Call VisualElement.get_hasInlineStyle, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {196}
	190 Move X0, [X21+944]
	191 Compare X0, 0
	192 JumpIfEqual {146}
	193 Add X1, X31, 176
	194 Move X2, X31
	195 Call InlineStyleAccess.ApplyInlineStyles, X0, X1
	196 Move X24, 0x448000
	197 Move X24, [X24+616]
	198 Move X0, [X24]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Add X0, X31, 176
	204 Move X1, X31
	205 Call ComputedTransitionUtils.UpdateComputedTransitions, X0
	206 Move X0, X21
	207 Move X1, X31
	208 Call VisualElement.get_hasRunningAnimations, X0
	209 Move TEMP, X0
	210 And TEMP, TEMP, 1
	211 Compare TEMP, 1
	212 JumpIfNotEqual {235}
	213 Move X0, X21
	214 Move X1, X31
	215 Call VisualElement.get_computedStyle, X0
	216 Move X8, [X24]
	217 Move X24, X0
	218 Move W9, [X8+224]
	219 Compare W9, 0
	220 JumpIfNotEqual {223}
	221 Move X0, X8
	222 Call 0x1C17DFC
	223 Add X1, X31, 176
	224 Move X0, X24
	225 Move X2, X31
	226 Call ComputedTransitionUtils.SameTransitionProperty, X0, X1
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfEqual {235}
	231 Add X2, X31, 176
	232 Move X0, X19
	233 Move X1, X21
	234 Call VisualTreeStyleUpdaterTraversal.CancelAnimationsWithNoTransitionProperty, X0, X1, X2
	235 Add X0, X31, 176
	236 Move X1, X31
	237 Call ComputedStyle.get_hasTransition, X0
	238 Move TEMP, X0
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfNotEqual {267}
	242 Move X0, X21
	243 Move X1, X31
	244 Call VisualElement.get_styleInitialized, X0
	245 Move TEMP, X0
	246 And TEMP, TEMP, 1
	247 Compare TEMP, 1
	248 JumpIfNotEqual {267}
	249 Move X0, X21
	250 Move X1, X31
	251 Call VisualElement.get_computedStyle, X0
	252 Add X3, X31, 176
	253 Move X1, X21
	254 Move X2, X0
	255 Call VisualTreeStyleUpdaterTraversal.ProcessTransitions, X0, X1, X2, X3
	256 Add X1, X31, 176
	257 Move X0, X21
	258 Move X2, X31
	259 Call VisualElement.SetComputedStyle, X0, X1
	260 Move X0, X19
	261 Move X1, X21
	262 Call VisualTreeStyleUpdaterTraversal.ForceUpdateTransitions, X0, X1
	263 Compare X8, 0
	264 JumpIfEqual {146}
	265 Move X9, [X21+792]
	266 Move [X8+24], X9
	267 Add X1, X31, 176
	268 Move X0, X21
	269 Move X2, X31
	270 Call VisualElement.SetComputedStyle, X0, X1
	271 Add X0, X31, 176
	272 Move X1, X31
	273 Call ComputedStyle.Release, X0
	274 Move W1, 1
	275 Move X0, X21
	276 Move X2, X31
	277 Call VisualElement.set_styleInitialized, X0, X1
	278 Move X0, X21
	279 Move X1, X31
	280 Call VisualElement.get_computedStyle, X0
	281 Move X8, 0x448000
	282 Move X8, [X8+808]
	283 Move X1, [X8]
	284 Call 0x266D5CC, X0
	285 Move [X21+800], W0
	286 Move X8, [X19+56]
	287 Compare X8, 0
	288 JumpIfEqual {146}
	289 Move [X8+32], X31
	290 Move X8, [X19+40]
	291 Compare X8, 0
	292 JumpIfEqual {146}
	293 Move W2, [X8+24]
	294 Move W9, [X8+28]
	295 Add W9, W9, 1
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move [X8+24], W31
	298 Move [X8+28], W9
	299 Move X0, [X8+16]
	300 Move W1, W31
	301 Move X3, X31
	302 Call Array.Clear, X0, X1, X2
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move X0, X21
	305 Move X1, X31
	306 Call VisualElement.get_computedStyle, X0
	307 Move X1, X31
	308 Call ComputedStyle.get_customPropertiesCount, X0
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X23, 0x448000
	311 Move X23, [X23+792]
	312 Move X0, [X23]
	313 Move W8, [X0+224]
	314 Compare W8, 0
	315 JumpIfNotEqual {318}
	316 Call 0x1C17DFC
	317 Move X0, [X23]
	318 Move X8, [X0+184]
	319 Move X0, X21
	320 Move X2, X31
	321 Move W1, [X8+16]
	322 Call VisualElement.HasEventCallbacksOrDefaultActions, X0, X1
	323 Move TEMP, X0
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfNotEqual {377}
	327 Move X0, [X23]
	328 Move W8, [X0+224]
	329 Compare W8, 0
	330 JumpIfNotEqual {332}
	331 Call 0x1C17DFC
	332 Move X8, 0x448000
	333 Move X8, [X8+784]
	334 Move X0, [X8]
	335 Call 0x2D0E6C4
	336 Move X23, X0
	337 Compare X0, 0
	338 JumpIfEqual {428}
	339 Move X0, X23
	340 Move X1, X21
	341 Move X2, X31
	342 Call EventBase.set_target, X0, X1
	343 Move X0, X21
	344 Move X1, X23
	345 Move X2, X31
	346 Call CallbackEventHandler.HandleEventAtTargetAndDefaultPhase, X0, X1
	347 Move X24, X31
	348 Move W25, 25
	349 Move X10, 0x3D7000
	350 Move X8, [X23]
	351 Move X10, [X10+3584]
	352 NotImplemented "Instruction LDRH not yet implemented."
	353 Move X1, [X10]
	354 Compare X9, 0
	355 JumpIfEqual {362}
	356 Move X10, [X8+176]
	357 Add X10, X10, 8
	358 NotImplemented "Instruction LDUR not yet implemented."
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Subtract X9, X9, 1
	361 Add X10, X10, 16
	362 Move X0, X23
	363 Move W2, W31
	364 Call 0x1C5D788
	365 NotImplemented "Instruction LDRSW not yet implemented."
	366 Add X8, X8, X9
	367 Add X0, X8, 312
	368 Move X8, [X0]
	369 Move X1, [X0+8]
	370 Move X0, X23
	371 NotImplemented "Instruction BLR not yet implemented."
	372 Compare X24, 0
	373 JumpIfNotEqual {429}
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Compare W25, 0
	376 JumpIfNotEqual {414}
	377 Move X8, [X19+56]
	378 Compare X8, 0
	379 JumpIfEqual {146}
	380 Move X0, [X8+48]
	381 Compare X0, 0
	382 JumpIfEqual {146}
	383 Move X1, X21
	384 Move X2, X31
	385 Call AncestorFilter.PushElement, X0, X1
	386 Move X0, X19
	387 Move X1, X21
	388 Move W2, W20
	389 Move X3, X31
	390 Call HierarchyTraversal.Recurse, X0, X1, X2
	391 Move X8, [X19+56]
	392 Compare X8, 0
	393 JumpIfEqual {146}
	394 Move X0, [X8+48]
	395 Compare X0, 0
	396 JumpIfEqual {146}
	397 Move X1, X31
	398 Call AncestorFilter.PopElement, X0
	399 Move X0, [X19+56]
	400 Compare X0, 0
	401 JumpIfEqual {146}
	402 Move [X0+24], X26
	403 Call StyleMatchingContext.get_styleSheetCount, X0
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move X19, [X19+56]
	406 Compare X19, 0
	407 JumpIfEqual {146}
	408 Move X0, X19
	409 Call StyleMatchingContext.get_styleSheetCount, X0
	410 Subtract W2, W0, W22
	411 Move X0, X19
	412 Move W1, W22
	413 Call StyleMatchingContext.RemoveStyleSheetRange, X0, X1, X2
	414 Move X20, [X31+352]
	415 Move X19, [X31+360]
	416 Move X22, [X31+336]
	417 Move X21, [X31+344]
	418 Move X24, [X31+320]
	419 Move X23, [X31+328]
	420 Move X26, [X31+304]
	421 Move X25, [X31+312]
	422 Move X28, [X31+288]
	423 Move X27, [X31+296]
	424 Move X29, [X31+272]
	425 Move X30, [X31+280]
	426 Add X31, X31, 368
	427 Return 
	428 Call 0x1C17F20
	429 Move X0, X24
	430 Call 0x1C17F18
	431 Move X25, X0
	432 NotImplemented "Instruction CMP not yet implemented."
	433 Move X0, X25
	434 Call 0x3EB2AD0
	435 Move X24, [X0]
	436 Call 0x3EB2AE0
	437 Move W25, W31
	438 Compare X23, 0
	439 JumpIfNotEqual {349}
	440 Move X24, X31
	441 Move X25, X0
	442 Compare X23, 0
	443 JumpIfEqual {467}
	444 Move X10, 0x3D7000
	445 Move X8, [X23]
	446 Move X10, [X10+3584]
	447 NotImplemented "Instruction LDRH not yet implemented."
	448 Move X1, [X10]
	449 Compare X9, 0
	450 JumpIfEqual {457}
	451 Move X10, [X8+176]
	452 Add X10, X10, 8
	453 NotImplemented "Instruction LDUR not yet implemented."
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Subtract X9, X9, 1
	456 Add X10, X10, 16
	457 Move X0, X23
	458 Move W2, W31
	459 Call 0x1C5D788
	460 NotImplemented "Instruction LDRSW not yet implemented."
	461 Add X8, X8, X9
	462 Add X0, X8, 312
	463 Move X8, [X0]
	464 Move X1, [X0+8]
	465 Move X0, X23
	466 NotImplemented "Instruction BLR not yet implemented."
	467 Compare X24, 0
	468 JumpIfNotEqual {471}
	469 Move X0, X25
	470 Call 0x1D2D690
	471 Move X0, X24
	472 Call 0x1C17F18
	473 Call 0x1991590

Method: System.Void ProcessTransitions(UnityEngine.UIElements.VisualElement element, ref UnityEngine.UIElements.ComputedStyle oldStyle, ref UnityEngine.UIElements.ComputedStyle newStyle)

Disassembly:
	0x03D1E4D8 MOV X0, X20
	0x03D1E4DC MOV X1, X31
	0x03D1E4E0 BL 0x3C0649C
	0x03D1E4E4 LDR X0, [X19 + 0x20]
	0x03D1E4E8 CBZ X0, 0x3D1E514
	0x03D1E4EC ADRP X20, 0x444000
	0x03D1E4F0 LDR X20, [X20 + 0x7F0]
	0x03D1E4F4 LDR X1, [X20]
	0x03D1E4F8 BL 0x2DBE450
	0x03D1E4FC LDR X0, [X19 + 0x28]
	0x03D1E500 CBZ X0, 0x3D1E514
	0x03D1E504 LDR X1, [X20]
	0x03D1E508 LDP X20, X19, [X31 + 0x10]
	0x03D1E50C LDR X30, [X31], #0x20
	0x03D1E510 B 0x2DBE450
	0x03D1E514 BL 0x1C16F20
	0x03D1E518 SUB X31, X31, 0x40
	0x03D1E51C STP X30, X23, [X31 + 0x10]
	0x03D1E520 STP X22, X21, [X31 + 0x20]
	0x03D1E524 STP X20, X19, [X31 + 0x30]
	0x03D1E528 ADRP X22, 0x6C9000
	0x03D1E52C LDRB W8, [X22 + 0x95F]
	0x03D1E530 MOV W21, W2
	0x03D1E534 MOV X19, X1
	0x03D1E538 MOV X20, X0
	0x03D1E53C TBNZ X8, 0x0, 0x3D1E560
	0x03D1E540 ADRP X0, 0x446000
	0x03D1E544 LDR X0, [X0 + 0x320]
	0x03D1E548 BL 0x1C16CF4
	0x03D1E54C ADRP X0, 0x444000
	0x03D1E550 LDR X0, [X0 + 0x7D0]
	0x03D1E554 BL 0x1C16CF4
	0x03D1E558 MOVZ W8, 0x1
	0x03D1E55C STRB W8, [X22 + 0x95F]
	0x03D1E560 CBZ X19, 0x3D1E668
	0x03D1E564 AND W1, W21, 0x1
	0x03D1E568 MOV X0, X19
	0x03D1E56C MOV X2, X31
	0x03D1E570 BL 0x3DF27E8
	0x03D1E574 LDR X8, [X20 + 0x20]
	0x03D1E578 CBZ X8, 0x3D1E668
	0x03D1E57C ADRP X22, 0x446000
	0x03D1E580 LDR X22, [X22 + 0x320]
	0x03D1E584 MOV W21, W0
	0x03D1E588 MOV X0, X8
	0x03D1E58C MOV X1, X19
	0x03D1E590 LDR X2, [X22]
	0x03D1E594 BL 0x2DBE4B0
	0x03D1E598 TBZ X0, 0x0, 0x3D1E5C8
	0x03D1E59C LDR X0, [X20 + 0x20]
	0x03D1E5A0 CBZ X0, 0x3D1E668
	0x03D1E5A4 ADRP X8, 0x444000
	0x03D1E5A8 LDR X8, [X8 + 0x7D0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X8, [X3+80]
	012 Compare X8, 0
	013 JumpIfEqual {59}
	014 Move W9, [X8+24]
	015 Subtract W26, W9, 1
	016 Move X19, X3
	017 Move X20, X2
	018 Move X21, X1
	019 Move W27, 24
	020 Move W9, [X8+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Compare X21, 0
	023 JumpIfEqual {59}
	024 NotImplemented "Instruction UMADDL not yet implemented."
	025 Move W25, [X8+32]
	026 Move W22, [X8+36]
	027 Move W23, [X8+40]
	028 Move X24, [X8+48]
	029 Move X0, X21
	030 Move X1, X31
	031 Call VisualElement.get_hasInlineStyle, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {46}
	036 Move X0, [X21+944]
	037 Compare X0, 0
	038 JumpIfEqual {59}
	039 Move W1, W25
	040 Move X2, X31
	041 Call InlineStyleAccess.IsValueSet, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {55}
	046 Move X0, X21
	047 Move W1, W25
	048 Move X2, X20
	049 Move X3, X19
	050 Move W4, W22
	051 Move W5, W23
	052 Move X6, X24
	053 Move X7, X31
	054 Call ComputedStyle.StartAnimation, X0, X1, X2, X3, X4, X5, X6
	055 Subtract W26, W26, 1
	056 Move X8, [X19+80]
	057 Compare X8, 0
	058 JumpIfNotEqual {20}
	059 Call 0x1C17F20
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X22, [X31+48]
	063 Move X21, [X31+56]
	064 Move X24, [X31+32]
	065 Move X23, [X31+40]
	066 Move X26, [X31+16]
	067 Move X25, [X31+24]
	068 Move X30, [X31+80]
	069 Move X27, [X31+88]
	070 Return 
	071 Call 0x1C17F28

Method: System.Void ForceUpdateTransitions(UnityEngine.UIElements.VisualElement element)

Disassembly:
	0x03D1E5AC MOV X1, X19
	0x03D1E5B0 LDR X2, [X8]
	0x03D1E5B4 BL 0x2DBE67C
	0x03D1E5B8 AND W1, W21, 0x1
	0x03D1E5BC MOV X0, X19
	0x03D1E5C0 MOV X2, X31
	0x03D1E5C4 BL 0x3DF2864
	0x03D1E5C8 LDR X0, [X20 + 0x28]
	0x03D1E5CC CBZ X0, 0x3D1E668
	0x03D1E5D0 LDR X2, [X22]
	0x03D1E5D4 MOV X1, X19
	0x03D1E5D8 BL 0x2DBE4B0
	0x03D1E5DC TBZ X0, 0x0, 0x3D1E654
	0x03D1E5E0 LDR X0, [X20 + 0x28]
	0x03D1E5E4 CBZ X0, 0x3D1E668
	0x03D1E5E8 ADRP X8, 0x444000
	0x03D1E5EC LDR X8, [X8 + 0x7D0]
	0x03D1E5F0 MOV X1, X19
	0x03D1E5F4 LDR X2, [X8]
	0x03D1E5F8 BL 0x2DBE67C
	0x03D1E5FC LDR X8, [X19 + 0x378]
	0x03D1E600 ADD X0, X31, 0x8
	0x03D1E604 MOV X1, X31
	0x03D1E608 STR X8, [X31 + 0x8]
	0x03D1E60C BL 0x3DF8994
	0x03D1E610 CMP W0, 0x1
	0x03D1E614 B.LT 0x3D1E654
	0x03D1E618 MOV W22, W0
	0x03D1E61C MOV W23, W31
	0x03D1E620 LDR X8, [X19 + 0x378]
	0x03D1E624 ADD X0, X31, 0x8
	0x03D1E628 MOV W1, W23
	0x03D1E62C MOV X2, X31
	0x03D1E630 STR X8, [X31 + 0x8]
	0x03D1E634 BL 0x3DF98E4
	0x03D1E638 MOV X1, X0
	0x03D1E63C AND W2, W21, 0x1
	0x03D1E640 MOV X0, X20
	0x03D1E644 BL 0x3D1E518
	0x03D1E648 ADD W23, W23, 0x1
	0x03D1E64C CMP W22, W23
	0x03D1E650 B.NE 0x3D1E620
	0x03D1E654 LDP X20, X19, [X31 + 0x30]
	0x03D1E658 LDP X22, X21, [X31 + 0x20]
	0x03D1E65C LDP X30, X23, [X31 + 0x10]
	0x03D1E660 ADD X31, X31, 0x40
	0x03D1E664 RET
	0x03D1E668 BL 0x1C16F20
	0x03D1E66C STR X30, [X31 - 0x30]!
	0x03D1E670 STP X22, X21, [X31 + 0x10]
	0x03D1E674 STP X20, X19, [X31 + 0x20]
	0x03D1E678 ADRP X20, 0x6C9000
	0x03D1E67C ADRP X22, 0x444000
	0x03D1E680 ADRP X21, 0x444000
	0x03D1E684 LDRB W8, [X20 + 0x961]
	0x03D1E688 LDR X22, [X22 + 0x888]
	0x03D1E68C LDR X21, [X21 + 0x890]
	0x03D1E690 MOV X19, X0
	0x03D1E694 TBNZ X8, 0x0, 0x3D1E6B8
	0x03D1E698 ADRP X0, 0x444000
	0x03D1E69C LDR X0, [X0 + 0x890]
	0x03D1E6A0 BL 0x1C16CF4
	0x03D1E6A4 ADRP X0, 0x444000
	0x03D1E6A8 LDR X0, [X0 + 0x888]
	0x03D1E6AC BL 0x1C16CF4
	0x03D1E6B0 MOVZ W8, 0x1
	0x03D1E6B4 STRB W8, [X20 + 0x961]
	0x03D1E6B8 LDR X0, [X22]
	0x03D1E6BC BL 0x1C16F10
	0x03D1E6C0 LDR X1, [X21]
	0x03D1E6C4 MOV X20, X0
	0x03D1E6C8 BL 0x2DBDE08
	0x03D1E6CC STR X20, [X19 + 0x20]
	0x03D1E6D0 LDR X0, [X22]
	0x03D1E6D4 BL 0x1C16F10
	0x03D1E6D8 LDR X1, [X21]
	0x03D1E6DC MOV X20, X0
	0x03D1E6E0 BL 0x2DBDE08
	0x03D1E6E4 STP X20, X31, [X19 + 0x28]
	0x03D1E6E8 MOV X0, X19
	0x03D1E6EC LDP X20, X19, [X31 + 0x20]
	0x03D1E6F0 LDP X22, X21, [X31 + 0x10]
	0x03D1E6F4 MOV X1, X31
	0x03D1E6F8 LDR X30, [X31], #0x30
	0x03D1E6FC B 0x33BDD8C
	0x03D1E700 STP X30, X21, [X31 - 0x20]!
	0x03D1E704 STP X20, X19, [X31 + 0x10]
	0x03D1E708 ADRP X21, 0x6C9000
	0x03D1E70C ADRP X20, 0x446000
	0x03D1E710 ADRP X19, 0x446000
	0x03D1E714 LDRB W8, [X21 + 0x962]
	0x03D1E718 LDR X20, [X20 + 0x3E0]
	0x03D1E71C LDR X19, [X19 + 0x3D0]
	0x03D1E720 TBNZ X8, 0x0, 0x3D1E744
	0x03D1E724 ADRP X0, 0x446000
	0x03D1E728 LDR X0, [X0 + 0x3D0]
	0x03D1E72C BL 0x1C16CF4
	0x03D1E730 ADRP X0, 0x446000
	0x03D1E734 LDR X0, [X0 + 0x3E0]
	0x03D1E738 BL 0x1C16CF4
	0x03D1E73C MOVZ W8, 0x1
	0x03D1E740 STRB W8, [X21 + 0x962]
	0x03D1E744 LDR X8, [X19]
	0x03D1E748 LDR X9, [X20]
	0x03D1E74C MOVZ W1, 0x1
	0x03D1E750 MOV W2, W31
	0x03D1E754 LDR X8, [X8 + 0xB8]
	0x03D1E758 MOV W3, W31
	0x03D1E75C MOV X4, X31
	0x03D1E760 STR X9, [X8]
	0x03D1E764 LDR X8, [X19]
	0x03D1E768 LDR X8, [X8 + 0xB8]
	0x03D1E76C LDR X0, [X8]
	0x03D1E770 BL 0x3BFE7FC
	0x03D1E774 LDR X8, [X19]
	0x03D1E778 LDP X20, X19, [X31 + 0x10]
	0x03D1E77C LDR X8, [X8 + 0xB8]
	0x03D1E780 STR X0, [X8 + 0x8]
	0x03D1E784 LDP X30, X21, [X31], #0x20
	0x03D1E788 RET
	0x03D1E78C STP X30, X25, [X31 - 0x40]!
	0x03D1E790 STP X24, X23, [X31 + 0x10]
	0x03D1E794 STP X22, X21, [X31 + 0x20]
	0x03D1E798 STP X20, X19, [X31 + 0x30]
	0x03D1E79C ADRP X20, 0x6C9000
	0x03D1E7A0 ADRP X24, 0x3FE000
	0x03D1E7A4 LDRB W8, [X20 + 0x963]
	0x03D1E7A8 LDR X24, [X24 + 0x820]
	0x03D1E7AC MOV X19, X0
	0x03D1E7B0 TBNZ X8, 0x0, 0x3D1E7D4
	0x03D1E7B4 ADRP X0, 0x3D5000
	0x03D1E7B8 LDR X0, [X0 + 0xD28]
	0x03D1E7BC BL 0x1C16CF4
	0x03D1E7C0 ADRP X0, 0x3FE000
	0x03D1E7C4 LDR X0, [X0 + 0x820]
	0x03D1E7C8 BL 0x1C16CF4
	0x03D1E7CC MOVZ W8, 0x1
	0x03D1E7D0 STRB W8, [X20 + 0x963]
	0x03D1E7D4 LDR X0, [X24]
	0x03D1E7D8 LDR W8, [X0 + 0xE0]
	0x03D1E7DC CBNZ W8, 0x3D1E7E8
	0x03D1E7E0 BL 0x1C16DFC
	0x03D1E7E4 LDR X0, [X24]
	0x03D1E7E8 LDR X8, [X0 + 0xB8]
	0x03D1E7EC ADRP X25, 0x3D5000
	0x03D1E7F0 LDR X20, [X8]
	0x03D1E7F4 LDR X25, [X25 + 0xD28]
	0x03D1E7F8 MOV X0, X20
	0x03D1E7FC MOV X1, X19
	0x03D1E800 MOV X2, X31
	0x03D1E804 BL 0x33C0DE4
	0x03D1E808 CBZ X0, 0x3D1E828
	0x03D1E80C LDR X23, [X25]
	0x03D1E810 MOV X22, X0
	0x03D1E814 MOV X1, X23
	0x03D1E818 BL 0x1C16E00
	0x03D1E81C MOV X21, X0
	0x03D1E820 CBNZ X0, 0x3D1E82C
	0x03D1E824 B 0x3D1E870
	0x03D1E828 MOV X21, X31
	0x03D1E82C LDR X0, [X24]
	0x03D1E830 LDR W8, [X0 + 0xE0]
	0x03D1E834 CBNZ W8, 0x3D1E840
	0x03D1E838 BL 0x1C16DFC
	0x03D1E83C LDR X0, [X24]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X21, 0x6CA000
	011 Move W8, [X21+2381]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x447000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move X0, 0x447000
	022 Move X0, [X0+640]
	023 Call 0x1C17CF4
	024 Move X0, 0x447000
	025 Move X0, [X0+648]
	026 Call 0x1C17CF4
	027 Move X0, 0x400000
	028 Move X0, [X0+3792]
	029 Call 0x1C17CF4
	030 Move X0, 0x447000
	031 Move X0, [X0+656]
	032 Call 0x1C17CF4
	033 Move X0, 0x447000
	034 Move X0, [X0+664]
	035 Call 0x1C17CF4
	036 Move X0, 0x447000
	037 Move X0, [X0+888]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2381], W8
	041 Move [X31+32], X31
	042 Move [X31+40], X31
	043 Move [X31+48], X31
	044 Compare X20, 0
	045 JumpIfEqual {154}
	046 Move X0, X20
	047 Move X1, X31
	048 Call VisualElement.get_styleAnimation, X0
	049 Compare X0, 0
	050 JumpIfEqual {154}
	051 Move X24, 0x400000
	052 Move X8, [X0]
	053 Move X24, [X24+3792]
	054 Move X22, [X19+72]
	055 Move X21, X0
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Move X1, [X24]
	058 Compare X9, 0
	059 JumpIfEqual {66}
	060 Move X10, [X8+176]
	061 Add X10, X10, 8
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Subtract X9, X9, 1
	065 Add X10, X10, 16
	066 Move W2, 17
	067 Move X0, X21
	068 Call 0x1C5D788
	069 Move W9, [X10]
	070 Add W9, W9, 17
	071 Add X8, X8, W9
	072 Add X0, X8, 312
	073 Move X8, [X0]
	074 Move X2, [X0+8]
	075 Move X0, X21
	076 Move X1, X22
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X0, [X19+72]
	079 Compare X0, 0
	080 JumpIfEqual {154}
	081 Move W8, [X0+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X8, 0x447000
	084 Move X8, [X8+664]
	085 Move X25, 0x447000
	086 Move X23, 0x447000
	087 Move X1, [X8]
	088 Move X25, [X25+640]
	089 Move X23, [X23+632]
	090 Add X8, X31, 8
	091 Call List`1<Int32Enum>.GetEnumerator, X0
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 Move X8, [X31+24]
	094 Move [X31+2], V0
	095 Move [X31+48], X8
	096 Move X1, [X25]
	097 Add X0, X31, 32
	098 Call Enumerator<Int32Enum>.MoveNext, X0
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {133}
	103 Move W21, [X31+48]
	104 Move X0, X20
	105 Move X1, X31
	106 Call VisualElement.get_styleAnimation, X0
	107 Move X22, X0
	108 Compare X0, 0
	109 JumpIfEqual {153}
	110 Move X8, [X22]
	111 Move X1, [X24]
	112 NotImplemented "Instruction LDRH not yet implemented."
	113 Compare X9, 0
	114 JumpIfEqual {121}
	115 Move X10, [X8+176]
	116 Add X10, X10, 8
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Subtract X9, X9, 1
	120 Add X10, X10, 16
	121 Move W2, 16
	122 Move X0, X22
	123 Call 0x1C5D788
	124 Move W9, [X10]
	125 Add W9, W9, 16
	126 Add X8, X8, W9
	127 Add X0, X8, 312
	128 Move X8, [X0]
	129 Move X2, [X0+8]
	130 Move X0, X22
	131 Move W1, W21
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move X1, [X23]
	134 Add X0, X31, 32
	135 Call Enumerator<Int32Enum>.Dispose, X0
	136 Move X8, [X19+72]
	137 Compare X8, 0
	138 JumpIfEqual {154}
	139 Move W9, [X8+28]
	140 Add W9, W9, 1
	141 Move [X8+24], W31
	142 Move [X8+28], W9
	143 Move X20, [X31+112]
	144 Move X19, [X31+120]
	145 Move X22, [X31+96]
	146 Move X21, [X31+104]
	147 Move X24, [X31+80]
	148 Move X23, [X31+88]
	149 Move X30, [X31+64]
	150 Move X25, [X31+72]
	151 Add X31, X31, 128
	152 Return 
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Move X20, X0
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X0, X20
	158 Call 0x3EB2AD0
	159 Move X21, [X0]
	160 Call 0x3EB2AE0
	161 Move X1, [X23]
	162 Add X0, X31, 32
	163 Call Enumerator<Int32Enum>.Dispose, X0
	164 Compare X21, 0
	165 JumpIfEqual {136}
	166 Move X0, X21
	167 Call 0x1C17F18
	168 Move X21, X31
	169 Move X20, X0
	170 Move X1, [X23]
	171 Add X0, X31, 32
	172 Call Enumerator<Int32Enum>.Dispose, X0
	173 Compare X21, 0
	174 JumpIfNotEqual {177}
	175 Move X0, X20
	176 Call 0x1D2D690
	177 Move X0, X21
	178 Call 0x1C17F18
	179 Call 0x1991590

Method: System.Void CancelAnimationsWithNoTransitionProperty(UnityEngine.UIElements.VisualElement element, ref UnityEngine.UIElements.ComputedStyle newStyle)

Disassembly:
	0x03D1CB20 LDP X8, X1, [X0]
	0x03D1CB24 MOV X0, X23
	0x03D1CB28 BLR X8
	0x03D1CB2C CBNZ X24, 0x3D1CBE0
	0x03D1CB30 CMP W25, 0x19
	0x03D1CB34 B.EQ 0x3D1CB3C
	0x03D1CB38 CBNZ W25, 0x3D1CBBC
	0x03D1CB3C LDR X8, [X19 + 0x38]
	0x03D1CB40 CBZ X8, 0x3D1C814
	0x03D1CB44 LDR X0, [X8 + 0x30]
	0x03D1CB48 CBZ X0, 0x3D1C814
	0x03D1CB4C MOV X1, X21
	0x03D1CB50 MOV X2, X31
	0x03D1CB54 BL 0x3D8CD54
	0x03D1CB58 MOV X0, X19
	0x03D1CB5C MOV X1, X21
	0x03D1CB60 MOV W2, W20
	0x03D1CB64 MOV X3, X31
	0x03D1CB68 BL 0x3D43FEC
	0x03D1CB6C LDR X8, [X19 + 0x38]
	0x03D1CB70 CBZ X8, 0x3D1C814
	0x03D1CB74 LDR X0, [X8 + 0x30]
	0x03D1CB78 CBZ X0, 0x3D1C814
	0x03D1CB7C MOV X1, X31
	0x03D1CB80 BL 0x3D8CF84
	0x03D1CB84 LDR X0, [X19 + 0x38]
	0x03D1CB88 CBZ X0, 0x3D1C814
	0x03D1CB8C STR X26, [X0 + 0x18]
	0x03D1CB90 BL 0x3D1C1A8
	0x03D1CB94 CMP W0, W22
	0x03D1CB98 B.LE 0x3D1CBBC
	0x03D1CB9C LDR X19, [X19 + 0x38]
	0x03D1CBA0 CBZ X19, 0x3D1C814
	0x03D1CBA4 MOV X0, X19
	0x03D1CBA8 BL 0x3D1C1A8
	0x03D1CBAC SUB W2, W0, W22
	0x03D1CBB0 MOV X0, X19
	0x03D1CBB4 MOV W1, W22
	0x03D1CBB8 BL 0x3D1C3C8
	0x03D1CBBC LDP X20, X19, [X31 + 0x160]
	0x03D1CBC0 LDP X22, X21, [X31 + 0x150]
	0x03D1CBC4 LDP X24, X23, [X31 + 0x140]
	0x03D1CBC8 LDP X26, X25, [X31 + 0x130]
	0x03D1CBCC LDP X28, X27, [X31 + 0x120]
	0x03D1CBD0 LDP X29, X30, [X31 + 0x110]
	0x03D1CBD4 ADD X31, X31, 0x170
	0x03D1CBD8 RET
	0x03D1CBDC BL 0x1C16F20
	0x03D1CBE0 MOV X0, X24
	0x03D1CBE4 BL 0x1C16F18
	0x03D1CBE8 B 0x3D1CBEC
	0x03D1CBEC MOV X25, X0
	0x03D1CBF0 CMP W1, 0x1
	0x03D1CBF4 B.NE 0x3D1CC14
	0x03D1CBF8 MOV X0, X25
	0x03D1CBFC BL 0x3EB1AD0
	0x03D1CC00 LDR X24, [X0]
	0x03D1CC04 BL 0x3EB1AE0
	0x03D1CC08 MOV W25, W31
	0x03D1CC0C CBNZ X23, 0x3D1CACC
	0x03D1CC10 B 0x3D1CB2C
	0x03D1CC14 MOV X24, X31
	0x03D1CC18 B 0x3D1CC20
	0x03D1CC1C MOV X25, X0
	0x03D1CC20 CBZ X23, 0x3D1CC84
	0x03D1CC24 ADRP X10, 0x3D7000
	0x03D1CC28 LDR X8, [X23]
	0x03D1CC2C LDR X10, [X10 + 0xE00]
	0x03D1CC30 LDRH W9, [X8 + 0x12E]
	0x03D1CC34 LDR X1, [X10]
	0x03D1CC38 CBZ X9, 0x3D1CC5C
	0x03D1CC3C LDR X10, [X8 + 0xB0]
	0x03D1CC40 ADD X10, X10, 0x8
	0x03D1CC44 LDUR X11, [X10 - 0x8]
	0x03D1CC48 CMP X11, X1
	0x03D1CC4C B.EQ 0x3D1CC6C
	0x03D1CC50 SUBS X9, X9, 0x1
	0x03D1CC54 ADD X10, X10, 0x10
	0x03D1CC58 B.NE 0x3D1CC44
	0x03D1CC5C MOV X0, X23
	0x03D1CC60 MOV W2, W31
	0x03D1CC64 BL 0x1C5C788
	0x03D1CC68 B 0x3D1CC78
	0x03D1CC6C LDRSW X9, [X10]
	0x03D1CC70 ADD X8, X8, X9, 0x4, LSL
	0x03D1CC74 ADD X0, X8, 0x138
	0x03D1CC78 LDP X8, X1, [X0]
	0x03D1CC7C MOV X0, X23
	0x03D1CC80 BLR X8
	0x03D1CC84 CBNZ X24, 0x3D1CC90
	0x03D1CC88 MOV X0, X25
	0x03D1CC8C BL 0x1D2C690
	0x03D1CC90 MOV X0, X24
	0x03D1CC94 BL 0x1C16F18
	0x03D1CC98 BL 0x1990590
	0x03D1CC9C STP X30, X21, [X31 - 0x20]!
	0x03D1CCA0 STP X20, X19, [X31 + 0x10]
	0x03D1CCA4 ADRP X21, 0x6CB000
	0x03D1CCA8 LDRB W8, [X21 + 0x94F]
	0x03D1CCAC MOV X19, X1
	0x03D1CCB0 MOV X20, X0
	0x03D1CCB4 TBNZ X8, 0x0, 0x3D1CCCC
	0x03D1CCB8 ADRP X0, 0x448000
	0x03D1CCBC LDR X0, [X0 + 0x320]
	0x03D1CCC0 BL 0x1C16CF4
	0x03D1CCC4 MOVZ W8, 0x1
	0x03D1CCC8 STRB W8, [X21 + 0x94F]
	0x03D1CCCC LDR X0, [X20 + 0x20]
	0x03D1CCD0 CBZ X0, 0x3D1CD1C
	0x03D1CCD4 ADRP X21, 0x448000
	0x03D1CCD8 LDR X21, [X21 + 0x320]
	0x03D1CCDC MOV X1, X19
	0x03D1CCE0 LDR X2, [X21]
	0x03D1CCE4 BL 0x2DBE4B0
	0x03D1CCE8 TBZ X0, 0x0, 0x3D1CCF4
	0x03D1CCEC MOV W8, W31
	0x03D1CCF0 B 0x3D1CD0C
	0x03D1CCF4 LDR X0, [X20 + 0x18]
	0x03D1CCF8 CBZ X0, 0x3D1CD1C
	0x03D1CCFC LDR X2, [X21]
	0x03D1CD00 MOV X1, X19
	0x03D1CD04 BL 0x2DBE4B0
	0x03D1CD08 EOR W8, W0, 0x1
	0x03D1CD0C LDP X20, X19, [X31 + 0x10]
	0x03D1CD10 AND W0, W8, 0x1
	0x03D1CD14 LDP X30, X21, [X31], #0x20
	0x03D1CD18 RET
	0x03D1CD1C BL 0x1C16F20
	0x03D1CD20 SUB X31, X31, 0x1D0
	0x03D1CD24 STR D8, [X31 + 0x160]
	0x03D1CD28 STP X29, X30, [X31 + 0x170]
	0x03D1CD2C STP X28, X27, [X31 + 0x180]
	0x03D1CD30 STP X26, X25, [X31 + 0x190]
	0x03D1CD34 STP X24, X23, [X31 + 0x1A0]
	0x03D1CD38 STP X22, X21, [X31 + 0x1B0]
	0x03D1CD3C STP X20, X19, [X31 + 0x1C0]
	0x03D1CD40 ADRP X23, 0x6CB000
	0x03D1CD44 ADRP X19, 0x448000
	0x03D1CD48 MOV X25, X8
	0x03D1CD4C LDRB W8, [X23 + 0x950]
	0x03D1CD50 LDR X19, [X19 + 0x330]
	0x03D1CD54 MOV X21, X2
	0x03D1CD58 MOV X22, X1
	0x03D1CD5C MOV X20, X0
	0x03D1CD60 ADD X26, X31, 0xA0
	0x03D1CD64 TBNZ X8, 0x0, 0x3D1CDF4
	0x03D1CD68 ADRP X0, 0x448000
	0x03D1CD6C LDR X0, [X0 + 0x338]
	0x03D1CD70 BL 0x1C16CF4
	0x03D1CD74 ADRP X0, 0x448000
	0x03D1CD78 LDR X0, [X0 + 0x340]
	0x03D1CD7C BL 0x1C16CF4
	0x03D1CD80 ADRP X0, 0x448000
	0x03D1CD84 LDR X0, [X0 + 0x348]
	0x03D1CD88 BL 0x1C16CF4
	0x03D1CD8C ADRP X0, 0x448000
	0x03D1CD90 LDR X0, [X0 + 0x350]
	0x03D1CD94 BL 0x1C16CF4
	0x03D1CD98 ADRP X0, 0x448000
	0x03D1CD9C LDR X0, [X0 + 0x358]
	0x03D1CDA0 BL 0x1C16CF4
	0x03D1CDA4 ADRP X0, 0x448000
	0x03D1CDA8 LDR X0, [X0 + 0x360]
	0x03D1CDAC BL 0x1C16CF4
	0x03D1CDB0 ADRP X0, 0x448000
	0x03D1CDB4 LDR X0, [X0 + 0x368]
	0x03D1CDB8 BL 0x1C16CF4
	0x03D1CDBC ADRP X0, 0x448000
	0x03D1CDC0 LDR X0, [X0 + 0x1F8]
	0x03D1CDC4 BL 0x1C16CF4
	0x03D1CDC8 ADRP X0, 0x448000
	0x03D1CDCC LDR X0, [X0 + 0x2A8]
	0x03D1CDD0 BL 0x1C16CF4
	0x03D1CDD4 ADRP X0, 0x448000
	0x03D1CDD8 LDR X0, [X0 + 0x370]
	0x03D1CDDC BL 0x1C16CF4
	0x03D1CDE0 ADRP X0, 0x448000
	0x03D1CDE4 LDR X0, [X0 + 0x330]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+72], X27
	004 Move [X31+80], X26
	005 Move [X31+88], X25
	006 Move [X31+96], X24
	007 Move [X31+104], X23
	008 Move [X31+112], X22
	009 Move [X31+120], X21
	010 Move [X31+128], X20
	011 Move [X31+136], X19
	012 Move X22, 0x6CC000
	013 Move W8, [X22+2382]
	014 Move X20, X2
	015 Move X21, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0x449000
	022 Move X0, [X0+616]
	023 Call 0x1C17CF4
	024 Move X0, 0x449000
	025 Move X0, [X0+632]
	026 Call 0x1C17CF4
	027 Move X0, 0x449000
	028 Move X0, [X0+640]
	029 Call 0x1C17CF4
	030 Move X0, 0x449000
	031 Move X0, [X0+648]
	032 Call 0x1C17CF4
	033 Move X0, 0x402000
	034 Move X0, [X0+3792]
	035 Call 0x1C17CF4
	036 Move X0, 0x449000
	037 Move X0, [X0+656]
	038 Call 0x1C17CF4
	039 Move X0, 0x449000
	040 Move X0, [X0+664]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+2382], W8
	044 Move [X31+32], X31
	045 Move [X31+40], X31
	046 Move [X31+48], X31
	047 Compare X21, 0
	048 JumpIfEqual {172}
	049 Move X0, X21
	050 Move X1, X31
	051 Call VisualElement.get_styleAnimation, X0
	052 Compare X0, 0
	053 JumpIfEqual {172}
	054 Move X25, 0x402000
	055 Move X8, [X0]
	056 Move X25, [X25+3792]
	057 Move X23, [X19+72]
	058 Move X22, X0
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Move X1, [X25]
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move W2, 17
	070 Move X0, X22
	071 Call 0x1C5D788
	072 Move W9, [X10]
	073 Add W9, W9, 17
	074 Add X8, X8, W9
	075 Add X0, X8, 312
	076 Move X8, [X0]
	077 Move X2, [X0+8]
	078 Move X0, X22
	079 Move X1, X23
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X0, [X19+72]
	082 Compare X0, 0
	083 JumpIfEqual {172}
	084 Move X8, 0x449000
	085 Move X8, [X8+664]
	086 Move X26, 0x449000
	087 Move X27, 0x449000
	088 Move X24, 0x449000
	089 Move X1, [X8]
	090 Move X26, [X26+640]
	091 Move X27, [X27+616]
	092 Move X24, [X24+632]
	093 Add X8, X31, 8
	094 Call List`1<Int32Enum>.GetEnumerator, X0
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 Move X8, [X31+24]
	097 Move [X31+2], V0
	098 Move [X31+48], X8
	099 Move X1, [X26]
	100 Add X0, X31, 32
	101 Call Enumerator<Int32Enum>.MoveNext, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {149}
	106 Move X0, [X27]
	107 Move W22, [X31+48]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X20
	113 Move W1, W22
	114 Move X2, X31
	115 Call ComputedTransitionUtils.HasTransitionProperty, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {99}
	120 Move X0, X21
	121 Move X1, X31
	122 Call VisualElement.get_styleAnimation, X0
	123 Move X23, X0
	124 Compare X0, 0
	125 JumpIfEqual {171}
	126 Move X8, [X23]
	127 Move X1, [X25]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move W2, 18
	138 Move X0, X23
	139 Call 0x1C5D788
	140 Move W9, [X10]
	141 Add W9, W9, 18
	142 Add X8, X8, W9
	143 Add X0, X8, 312
	144 Move X8, [X0]
	145 Move X2, [X0+8]
	146 Move X0, X23
	147 Move W1, W22
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X1, [X24]
	150 Add X0, X31, 32
	151 Call Enumerator<Int32Enum>.Dispose, X0
	152 Move X8, [X19+72]
	153 Compare X8, 0
	154 JumpIfEqual {172}
	155 Move W9, [X8+28]
	156 Move X20, [X31+128]
	157 Move X19, [X31+136]
	158 Move X22, [X31+112]
	159 Move X21, [X31+120]
	160 Move X24, [X31+96]
	161 Move X23, [X31+104]
	162 Move X26, [X31+80]
	163 Move X25, [X31+88]
	164 Move X30, [X31+64]
	165 Move X27, [X31+72]
	166 Add W9, W9, 1
	167 Move [X8+24], W31
	168 Move [X8+28], W9
	169 Add X31, X31, 144
	170 Return 
	171 Call 0x1C17F20
	172 Call 0x1C17F20
	173 Move X20, X0
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X0, X20
	176 Call 0x3EB2AD0
	177 Move X21, [X0]
	178 Call 0x3EB2AE0
	179 Move X1, [X24]
	180 Add X0, X31, 32
	181 Call Enumerator<Int32Enum>.Dispose, X0
	182 Compare X21, 0
	183 JumpIfEqual {152}
	184 Move X0, X21
	185 Call 0x1C17F18
	186 Move X21, X31
	187 Move X20, X0
	188 Move X1, [X24]
	189 Add X0, X31, 32
	190 Call Enumerator<Int32Enum>.Dispose, X0
	191 Compare X21, 0
	192 JumpIfNotEqual {195}
	193 Move X0, X20
	194 Call 0x1D2D690
	195 Move X0, X21
	196 Call 0x1C17F18
	197 Call 0x1991590

Method: System.Boolean ShouldSkipElement(UnityEngine.UIElements.VisualElement element)

Disassembly:
	0x03D1DC9C ADD W20, W20, 0x1
	0x03D1DCA0 CMP W20, 0x7
	0x03D1DCA4 B.NE 0x3D1DC2C
	0x03D1DCA8 LDP X20, X19, [X31 + 0x20]
	0x03D1DCAC LDP X22, X21, [X31 + 0x10]
	0x03D1DCB0 LDR X30, [X31], #0x30
	0x03D1DCB4 RET
	0x03D1DCB8 BL 0x1C16F20
	0x03D1DCBC STR X30, [X31 - 0x10]!
	0x03D1DCC0 LDR X8, [X0 + 0x10]
	0x03D1DCC4 CBZ X8, 0x3D1DCE4
	0x03D1DCC8 LDR W9, [X8 + 0x18]
	0x03D1DCCC CMP W9, W1
	0x03D1DCD0 B.LS 0x3D1DCE8
	0x03D1DCD4 ADD X8, X8, W1, 0x3, SXTW
	0x03D1DCD8 LDR X0, [X8 + 0x20]
	0x03D1DCDC LDR X30, [X31], #0x10
	0x03D1DCE0 RET
	0x03D1DCE4 BL 0x1C16F20
	0x03D1DCE8 BL 0x1C16F28
	0x03D1DCEC STP X30, X21, [X31 - 0x20]!
	0x03D1DCF0 STP X20, X19, [X31 + 0x10]
	0x03D1DCF4 ADRP X21, 0x6CA000
	0x03D1DCF8 LDRB W8, [X21 + 0x955]
	0x03D1DCFC MOV W19, W1
	0x03D1DD00 MOV X20, X0
	0x03D1DD04 TBNZ X8, 0x0, 0x3D1DD1C
	0x03D1DD08 ADRP X0, 0x3FF000
	0x03D1DD0C LDR X0, [X0 + 0x928]
	0x03D1DD10 BL 0x1C16CF4
	0x03D1DD14 MOVZ W8, 0x1
	0x03D1DD18 STRB W8, [X21 + 0x955]
	0x03D1DD1C LDR X0, [X20 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x6CB000
	006 Move W8, [X21+2383]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x448000
	014 Move X0, [X0+800]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2383], W8
	018 Move X0, [X20+32]
	019 Compare X0, 0
	020 JumpIfEqual {44}
	021 Move X21, 0x448000
	022 Move X21, [X21+800]
	023 Move X1, X19
	024 Move X2, [X21]
	025 Call HashSet`1<Object>.Contains, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {31}
	030 Move W8, W31
	031 Move X0, [X20+24]
	032 Compare X0, 0
	033 JumpIfEqual {44}
	034 Move X2, [X21]
	035 Move X1, X19
	036 Call HashSet`1<Object>.Contains, X0, X1
	037 Xor W8, W0, 1
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 And W0, W8, 1
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Return X0
	044 Call 0x1C17F20

Method: UnityEngine.UIElements.ComputedStyle ProcessMatchedRules(UnityEngine.UIElements.VisualElement element, System.Collections.Generic.List`1<UnityEngine.UIElements.StyleSheets.SelectorMatchRecord> matchingSelectors)

Disassembly:
	0x03D1DD20 CBZ X0, 0x3D1DE48
	0x03D1DD24 MOV W1, W19
	0x03D1DD28 BL 0x3D1DEB8
	0x03D1DD2C CBZ X0, 0x3D1DE48
	0x03D1DD30 ADRP X21, 0x3FF000
	0x03D1DD34 LDR X8, [X0]
	0x03D1DD38 LDR X21, [X21 + 0x928]
	0x03D1DD3C MOV X20, X0
	0x03D1DD40 LDRH W9, [X8 + 0x12E]
	0x03D1DD44 LDR X1, [X21]
	0x03D1DD48 CBZ X9, 0x3D1DD6C
	0x03D1DD4C LDR X10, [X8 + 0xB0]
	0x03D1DD50 ADD X10, X10, 0x8
	0x03D1DD54 LDUR X11, [X10 - 0x8]
	0x03D1DD58 CMP X11, X1
	0x03D1DD5C B.EQ 0x3D1DD7C
	0x03D1DD60 SUBS X9, X9, 0x1
	0x03D1DD64 ADD X10, X10, 0x10
	0x03D1DD68 B.NE 0x3D1DD54
	0x03D1DD6C MOVZ W2, 0x1
	0x03D1DD70 MOV X0, X20
	0x03D1DD74 BL 0x1C5C788
	0x03D1DD78 B 0x3D1DD8C
	0x03D1DD7C LDR W9, [X10]
	0x03D1DD80 ADD W9, W9, 0x1
	0x03D1DD84 ADD X8, X8, W9, 0x4, SXTW
	0x03D1DD88 ADD X0, X8, 0x138
	0x03D1DD8C LDP X8, X1, [X0]
	0x03D1DD90 MOV X0, X20
	0x03D1DD94 BLR X8
	0x03D1DD98 MOV X1, X31
	0x03D1DD9C MOV X2, X31
	0x03D1DDA0 MOV X19, X0
	0x03D1DDA4 BL 0x33C5D2C
	0x03D1DDA8 TBZ X0, 0x0, 0x3D1DDB8
	0x03D1DDAC MOV X0, X19
	0x03D1DDB0 MOV X1, X31
	0x03D1DDB4 BL 0x3BFE970
	0x03D1DDB8 LDR X8, [X20]
	0x03D1DDBC LDR X1, [X21]
	0x03D1DDC0 LDRH W9, [X8 + 0x12E]
	0x03D1DDC4 CBZ X9, 0x3D1DDE8
	0x03D1DDC8 LDR X10, [X8 + 0xB0]
	0x03D1DDCC ADD X10, X10, 0x8
	0x03D1DDD0 LDUR X11, [X10 - 0x8]
	0x03D1DDD4 CMP X11, X1
	0x03D1DDD8 B.EQ 0x3D1DDF8
	0x03D1DDDC SUBS X9, X9, 0x1
	0x03D1DDE0 ADD X10, X10, 0x10
	0x03D1DDE4 B.NE 0x3D1DDD0
	0x03D1DDE8 MOVZ W2, 0x2
	0x03D1DDEC MOV X0, X20
	0x03D1DDF0 BL 0x1C5C788
	0x03D1DDF4 B 0x3D1DE08
	0x03D1DDF8 LDR W9, [X10]
	0x03D1DDFC ADD W9, W9, 0x2
	0x03D1DE00 ADD X8, X8, W9, 0x4, SXTW
	0x03D1DE04 ADD X0, X8, 0x138
	0x03D1DE08 LDP X8, X1, [X0]
	0x03D1DE0C MOV X0, X20
	0x03D1DE10 BLR X8
	0x03D1DE14 MOV X20, X31
	0x03D1DE18 MOV X0, X19
	0x03D1DE1C MOV X1, X31
	0x03D1DE20 MOV X2, X31
	0x03D1DE24 BL 0x33C5D2C
	0x03D1DE28 TBZ X0, 0x0, 0x3D1DE38
	0x03D1DE2C MOV X0, X19
	0x03D1DE30 MOV X1, X31
	0x03D1DE34 BL 0x3BFEA0C
	0x03D1DE38 CBNZ X20, 0x3D1DE4C
	0x03D1DE3C LDP X20, X19, [X31 + 0x10]
	0x03D1DE40 LDP X30, X21, [X31], #0x20
	0x03D1DE44 RET
	0x03D1DE48 BL 0x1C16F20
	0x03D1DE4C MOV X0, X20
	0x03D1DE50 BL 0x1C16F18
	0x03D1DE54 CMP W1, 0x1
	0x03D1DE58 MOV X21, X0
	0x03D1DE5C B.NE 0x3D1DE74
	0x03D1DE60 MOV X0, X21
	0x03D1DE64 BL 0x3EB1AD0
	0x03D1DE68 LDR X20, [X0]
	0x03D1DE6C BL 0x3EB1AE0
	0x03D1DE70 B 0x3D1DE18
	0x03D1DE74 MOV X20, X31
	0x03D1DE78 B 0x3D1DE80
	0x03D1DE7C MOV X21, X0
	0x03D1DE80 MOV X0, X19
	0x03D1DE84 MOV X1, X31
	0x03D1DE88 MOV X2, X31
	0x03D1DE8C BL 0x33C5D2C
	0x03D1DE90 TBZ X0, 0x0, 0x3D1DEA0
	0x03D1DE94 MOV X0, X19
	0x03D1DE98 MOV X1, X31
	0x03D1DE9C BL 0x3BFEA0C
	0x03D1DEA0 CBNZ X20, 0x3D1DEAC
	0x03D1DEA4 MOV X0, X21
	0x03D1DEA8 BL 0x1D2C690
	0x03D1DEAC MOV X0, X20
	0x03D1DEB0 BL 0x1C16F18
	0x03D1DEB4 BL 0x1990590
	0x03D1DEB8 STR X30, [X31 - 0x10]!
	0x03D1DEBC LDR X8, [X0 + 0x10]
	0x03D1DEC0 CBZ X8, 0x3D1DEE0
	0x03D1DEC4 LDR W9, [X8 + 0x18]
	0x03D1DEC8 CMP W9, W1
	0x03D1DECC B.LS 0x3D1DEE4
	0x03D1DED0 ADD X8, X8, W1, 0x3, SXTW
	0x03D1DED4 LDR X0, [X8 + 0x20]
	0x03D1DED8 LDR X30, [X31], #0x10
	0x03D1DEDC RET
	0x03D1DEE0 BL 0x1C16F20
	0x03D1DEE4 BL 0x1C16F28
	0x03D1DEE8 STR X30, [X31 - 0x40]!
	0x03D1DEEC STP X24, X23, [X31 + 0x10]
	0x03D1DEF0 STP X22, X21, [X31 + 0x20]
	0x03D1DEF4 STP X20, X19, [X31 + 0x30]
	0x03D1DEF8 ADRP X22, 0x6CA000
	0x03D1DEFC LDRB W8, [X22 + 0x956]
	0x03D1DF00 MOV W19, W2
	0x03D1DF04 MOV X20, X1
	0x03D1DF08 MOV X21, X0
	0x03D1DF0C TBNZ X8, 0x0, 0x3D1DF24
	0x03D1DF10 ADRP X0, 0x3FF000
	0x03D1DF14 LDR X0, [X0 + 0x928]
	0x03D1DF18 BL 0x1C16CF4
	0x03D1DF1C MOVZ W8, 0x1
	0x03D1DF20 STRB W8, [X22 + 0x956]
	0x03D1DF24 ADRP X24, 0x3FF000
	0x03D1DF28 LDR X24, [X24 + 0x928]
	0x03D1DF2C MOV W22, W31
	0x03D1DF30 LDR X0, [X21 + 0x18]
	0x03D1DF34 CBZ X0, 0x3D1DFCC
	0x03D1DF38 MOV W1, W22
	0x03D1DF3C BL 0x3D1DCBC
	0x03D1DF40 CBZ X0, 0x3D1DFCC
	0x03D1DF44 LDR X8, [X0]
	0x03D1DF48 LDR X1, [X24]
	0x03D1DF4C MOV X23, X0
	0x03D1DF50 LDRH W9, [X8 + 0x12E]
	0x03D1DF54 CBZ X9, 0x3D1DF78
	0x03D1DF58 LDR X10, [X8 + 0xB0]
	0x03D1DF5C ADD X10, X10, 0x8
	0x03D1DF60 LDUR X11, [X10 - 0x8]
	0x03D1DF64 CMP X11, X1
	0x03D1DF68 B.EQ 0x3D1DF88
	0x03D1DF6C SUBS X9, X9, 0x1
	0x03D1DF70 ADD X10, X10, 0x10
	0x03D1DF74 B.NE 0x3D1DF60
	0x03D1DF78 MOVZ W2, 0x3
	0x03D1DF7C MOV X0, X23
	0x03D1DF80 BL 0x1C5C788
	0x03D1DF84 B 0x3D1DF98
	0x03D1DF88 LDR W9, [X10]
	0x03D1DF8C ADD W9, W9, 0x3
	0x03D1DF90 ADD X8, X8, W9, 0x4, SXTW
	0x03D1DF94 ADD X0, X8, 0x138
	0x03D1DF98 LDP X8, X3, [X0]
	0x03D1DF9C MOV X0, X23
	0x03D1DFA0 MOV X1, X20
	0x03D1DFA4 MOV W2, W19
	0x03D1DFA8 BLR X8
	0x03D1DFAC ADD W22, W22, 0x1
	0x03D1DFB0 CMP W22, 0x7
	0x03D1DFB4 B.NE 0x3D1DF30
	0x03D1DFB8 LDP X20, X19, [X31 + 0x30]
	0x03D1DFBC LDP X22, X21, [X31 + 0x20]
	0x03D1DFC0 LDP X24, X23, [X31 + 0x10]
	0x03D1DFC4 LDR X30, [X31], #0x40
	0x03D1DFC8 RET
	0x03D1DFCC BL 0x1C16F20
	0x03D1DFD0 STR X30, [X31 - 0x10]!
	0x03D1DFD4 LDR X0, [X0 + 0x18]
	0x03D1DFD8 CBZ X0, 0x3D1DFE4
	0x03D1DFDC LDR X30, [X31], #0x10
	0x03D1DFE0 B 0x3D1DEB8
	0x03D1DFE4 BL 0x1C16F20
	0x03D1DFE8 STP X30, X21, [X31 - 0x20]!
	0x03D1DFEC STP X20, X19, [X31 + 0x10]
	0x03D1DFF0 LDR X21, [X0 + 0x10]
	0x03D1DFF4 CBZ X21, 0x3D1E038
	0x03D1DFF8 MOV X19, X2
	0x03D1DFFC MOV W20, W1
	0x03D1E000 CBZ X2, 0x3D1E018
	0x03D1E004 LDR X8, [X21]
	0x03D1E008 MOV X0, X19
	0x03D1E00C LDR X1, [X8 + 0x40]
	0x03D1E010 BL 0x1C16E00
	0x03D1E014 CBZ X0, 0x3D1E040
	0x03D1E018 LDR W8, [X21 + 0x18]
	0x03D1E01C CMP W8, W20
	0x03D1E020 B.LS 0x3D1E03C
	0x03D1E024 ADD X8, X21, W20, 0x3, SXTW
	0x03D1E028 STR X19, [X8 + 0x20]
	0x03D1E02C LDP X20, X19, [X31 + 0x10]
	0x03D1E030 LDP X30, X21, [X31], #0x20
	0x03D1E034 RET
	0x03D1E038 BL 0x1C16F20
	0x03D1E03C BL 0x1C16F28
	0x03D1E040 BL 0x1C16F44
	0x03D1E044 MOV X1, X31
	0x03D1E048 BL 0x1C16DEC
	0x03D1E04C STR X30, [X31 - 0x40]!
	0x03D1E050 STP X24, X23, [X31 + 0x10]
	0x03D1E054 STP X22, X21, [X31 + 0x20]
	0x03D1E058 STP X20, X19, [X31 + 0x30]
	0x03D1E05C ADRP X21, 0x6C9000
	0x03D1E060 LDRB W8, [X21 + 0x959]
	0x03D1E064 MOV X19, X1
	0x03D1E068 MOV X20, X0
	0x03D1E06C TBNZ X8, 0x0, 0x3D1E084
	0x03D1E070 ADRP X0, 0x446000
	0x03D1E074 LDR X0, [X0 + 0x3C8]
	0x03D1E078 BL 0x1C16CF4
	0x03D1E07C MOVZ W8, 0x1
	0x03D1E080 STRB W8, [X21 + 0x959]
	0x03D1E084 ADRP X24, 0x446000
	0x03D1E088 LDR X21, [X20 + 0x10]!
	0x03D1E08C LDR X24, [X24 + 0x3C8]
	0x03D1E090 MOV X0, X21
	0x03D1E094 MOV X1, X19
	0x03D1E098 MOV X2, X31
	0x03D1E09C BL 0x33C0DE4
	0x03D1E0A0 CBZ X0, 0x3D1E0C0
	0x03D1E0A4 LDR X23, [X24]
	0x03D1E0A8 MOV X22, X0
	0x03D1E0AC MOV X1, X23
	0x03D1E0B0 BL 0x1C16E00
	0x03D1E0B4 MOV X1, X0
	0x03D1E0B8 CBNZ X0, 0x3D1E0C4
	0x03D1E0BC B 0x3D1E0F0
	0x03D1E0C0 MOV X1, X31
	0x03D1E0C4 MOV X0, X20
	0x03D1E0C8 MOV X2, X21
	0x03D1E0CC BL 0x1C24138
	0x03D1E0D0 CMP X21, X0
	0x03D1E0D4 MOV X21, X0
	0x03D1E0D8 B.NE 0x3D1E090
	0x03D1E0DC LDP X20, X19, [X31 + 0x30]
	0x03D1E0E0 LDP X22, X21, [X31 + 0x20]
	0x03D1E0E4 LDP X24, X23, [X31 + 0x10]
	0x03D1E0E8 LDR X30, [X31], #0x40
	0x03D1E0EC RET
	0x03D1E0F0 MOV X0, X22
	0x03D1E0F4 MOV X1, X23
	0x03D1E0F8 BL 0x1C171E0
	0x03D1E0FC STR X30, [X31 - 0x40]!
	0x03D1E100 STP X24, X23, [X31 + 0x10]
	0x03D1E104 STP X22, X21, [X31 + 0x20]
	0x03D1E108 STP X20, X19, [X31 + 0x30]
	0x03D1E10C ADRP X21, 0x6C9000
	0x03D1E110 LDRB W8, [X21 + 0x95A]
	0x03D1E114 MOV X19, X1
	0x03D1E118 MOV X20, X0
	0x03D1E11C TBNZ X8, 0x0, 0x3D1E134
	0x03D1E120 ADRP X0, 0x446000
	0x03D1E124 LDR X0, [X0 + 0x3C8]
	0x03D1E128 BL 0x1C16CF4
	0x03D1E12C MOVZ W8, 0x1
	0x03D1E130 STRB W8, [X21 + 0x95A]
	0x03D1E134 ADRP X24, 0x446000
	0x03D1E138 LDR X21, [X20 + 0x10]!
	0x03D1E13C LDR X24, [X24 + 0x3C8]
	0x03D1E140 MOV X0, X21
	0x03D1E144 MOV X1, X19
	0x03D1E148 MOV X2, X31
	0x03D1E14C BL 0x33C0FDC
	0x03D1E150 CBZ X0, 0x3D1E170
	0x03D1E154 LDR X23, [X24]
	0x03D1E158 MOV X22, X0
	0x03D1E15C MOV X1, X23
	0x03D1E160 BL 0x1C16E00
	0x03D1E164 MOV X1, X0
	0x03D1E168 CBNZ X0, 0x3D1E174
	0x03D1E16C B 0x3D1E1A0
	0x03D1E170 MOV X1, X31
	0x03D1E174 MOV X0, X20
	0x03D1E178 MOV X2, X21
	0x03D1E17C BL 0x1C24138
	0x03D1E180 CMP X21, X0
	0x03D1E184 MOV X21, X0
	0x03D1E188 B.NE 0x3D1E140
	0x03D1E18C LDP X20, X19, [X31 + 0x30]
	0x03D1E190 LDP X22, X21, [X31 + 0x20]
	0x03D1E194 LDP X24, X23, [X31 + 0x10]
	0x03D1E198 LDR X30, [X31], #0x40
	0x03D1E19C RET
	0x03D1E1A0 MOV X0, X22
	0x03D1E1A4 MOV X1, X23
	0x03D1E1A8 BL 0x1C171E0
	0x03D1E1AC LDR X8, [X0 + 0x10]
	0x03D1E1B0 STR X1, [X0 + 0x18]
	0x03D1E1B4 CBZ X8, 0x3D1E1C8
	0x03D1E1B8 LDR X3, [X8 + 0x18]
	0x03D1E1BC LDR X0, [X8 + 0x40]
	0x03D1E1C0 LDR X2, [X8 + 0x28]
	0x03D1E1C4 BR X3
	0x03D1E1C8 RET
	0x03D1E1CC STP X30, X21, [X31 - 0x20]!
	0x03D1E1D0 STP X20, X19, [X31 + 0x10]
	0x03D1E1D4 ADRP X21, 0x6C9000
	0x03D1E1D8 ADRP X20, 0x3DC000
	0x03D1E1DC LDRB W8, [X21 + 0x95B]
	0x03D1E1E0 LDR X20, [X20 + 0xC10]
	0x03D1E1E4 MOV X19, X0
	0x03D1E1E8 TBNZ X8, 0x0, 0x3D1E200
	0x03D1E1EC ADRP X0, 0x3DC000
	0x03D1E1F0 LDR X0, [X0 + 0xC10]
	0x03D1E1F4 BL 0x1C16CF4
	0x03D1E1F8 MOVZ W8, 0x1
	0x03D1E1FC STRB W8, [X21 + 0x95B]
	0x03D1E200 LDR X8, [X19]
	0x03D1E204 MOVZ W1, 0x1
	0x03D1E208 MOV X0, X19
	0x03D1E20C LDP X9, X2, [X8 + 0x1E8]
	0x03D1E210 BLR X9
	0x03D1E214 LDR X0, [X20]
	0x03D1E218 LDR W8, [X0 + 0xE0]
	0x03D1E21C CBNZ W8, 0x3D1E224
	0x03D1E220 BL 0x1C16DFC
	0x03D1E224 MOV X0, X19
	0x03D1E228 LDP X20, X19, [X31 + 0x10]
	0x03D1E22C MOV X1, X31
	0x03D1E230 LDP X30, X21, [X31], #0x20
	0x03D1E234 B 0x33B3E9C
	0x03D1E238 RET
	0x03D1E23C STR X30, [X31 - 0x20]!
	0x03D1E240 STP X20, X19, [X31 + 0x10]
	0x03D1E244 ADRP X20, 0x6C9000
	0x03D1E248 ADRP X19, 0x446000
	0x03D1E24C LDRB W8, [X20 + 0x95C]
	0x03D1E250 LDR X19, [X19 + 0x3D0]
	0x03D1E254 TBNZ X8, 0x0, 0x3D1E26C
	0x03D1E258 ADRP X0, 0x446000
	0x03D1E25C LDR X0, [X0 + 0x3D0]
	0x03D1E260 BL 0x1C16CF4
	0x03D1E264 MOVZ W8, 0x1
	0x03D1E268 STRB W8, [X20 + 0x95C]
	0x03D1E26C LDR X0, [X19]
	0x03D1E270 LDR W8, [X0 + 0xE0]
	0x03D1E274 CBNZ W8, 0x3D1E280
	0x03D1E278 BL 0x1C16DFC
	0x03D1E27C LDR X0, [X19]
	0x03D1E280 LDR X8, [X0 + 0xB8]
	0x03D1E284 LDP X20, X19, [X31 + 0x10]
	0x03D1E288 LDR X0, [X8 + 0x8]
	0x03D1E28C LDR X30, [X31], #0x20
	0x03D1E290 RET
	0x03D1E294 STR X30, [X31 - 0x30]!
	0x03D1E298 STP X22, X21, [X31 + 0x10]
	0x03D1E29C STP X20, X19, [X31 + 0x20]
	0x03D1E2A0 ADRP X22, 0x6C9000
	0x03D1E2A4 LDRB W8, [X22 + 0x95D]
	0x03D1E2A8 MOV W21, W2
	0x03D1E2AC MOV X19, X1
	0x03D1E2B0 MOV X20, X0
	0x03D1E2B4 TBNZ X8, 0x0, 0x3D1E2CC
	0x03D1E2B8 ADRP X0, 0x444000
	0x03D1E2BC LDR X0, [X0 + 0x7C8]
	0x03D1E2C0 BL 0x1C16CF4
	0x03D1E2C4 MOVZ W8, 0x1
	0x03D1E2C8 STRB W8, [X22 + 0x95D]
	0x03D1E2CC TBNZ X21, 0x1, 0x3D1E2E0
	0x03D1E2D0 LDP X20, X19, [X31 + 0x20]
	0x03D1E2D4 LDP X22, X21, [X31 + 0x10]
	0x03D1E2D8 LDR X30, [X31], #0x30
	0x03D1E2DC RET
	0x03D1E2E0 LDR W8, [X20 + 0x30]
	0x03D1E2E4 LDR X0, [X20 + 0x20]
	0x03D1E2E8 ADD W8, W8, 0x1
	0x03D1E2EC STR W8, [X20 + 0x30]
	0x03D1E2F0 CBZ X0, 0x3D1E320
	0x03D1E2F4 ADRP X8, 0x444000
	0x03D1E2F8 LDR X8, [X8 + 0x7C8]
	0x03D1E2FC MOV X1, X19
	0x03D1E300 LDR X2, [X8]
	0x03D1E304 BL 0x2DBEF30
	0x03D1E308 MOV X0, X20
	0x03D1E30C MOV X1, X19
	0x03D1E310 LDP X20, X19, [X31 + 0x20]
	0x03D1E314 LDP X22, X21, [X31 + 0x10]
	0x03D1E318 LDR X30, [X31], #0x30
	0x03D1E31C B 0x3D1E324
	0x03D1E320 BL 0x1C16F20
	0x03D1E324 SUB X31, X31, 0x30
	0x03D1E328 STP X30, X21, [X31 + 0x10]
	0x03D1E32C STP X20, X19, [X31 + 0x20]
	0x03D1E330 ADRP X21, 0x6C9000
	0x03D1E334 LDRB W8, [X21 + 0x960]
	0x03D1E338 MOV X20, X1
	0x03D1E33C MOV X19, X0
	0x03D1E340 TBNZ X8, 0x0, 0x3D1E358
	0x03D1E344 ADRP X0, 0x444000
	0x03D1E348 LDR X0, [X0 + 0x7C8]
	0x03D1E34C BL 0x1C16CF4
	0x03D1E350 MOVZ W8, 0x1
	0x03D1E354 STRB W8, [X21 + 0x960]
	0x03D1E358 CBZ X20, 0x3D1E3C4
	0x03D1E35C LDR X8, [X20 + 0x378]
	0x03D1E360 ADD X0, X31, 0x8
	0x03D1E364 MOV X1, X31
	0x03D1E368 STR X8, [X31 + 0x8]
	0x03D1E36C BL 0x3DF88DC
	0x03D1E370 CBZ X0, 0x3D1E3B4
	0x03D1E374 ADRP X21, 0x444000
	0x03D1E378 LDR X21, [X21 + 0x7C8]
	0x03D1E37C MOV X20, X0
	0x03D1E380 LDR X0, [X19 + 0x28]
	0x03D1E384 CBZ X0, 0x3D1E3C4
	0x03D1E388 LDR X2, [X21]
	0x03D1E38C MOV X1, X20
	0x03D1E390 BL 0x2DBEF30
	0x03D1E394 TBZ X0, 0x0, 0x3D1E3B4
	0x03D1E398 LDR X8, [X20 + 0x378]
	0x03D1E39C ADD X0, X31, 0x8
	0x03D1E3A0 MOV X1, X31
	0x03D1E3A4 STR X8, [X31 + 0x8]
	0x03D1E3A8 BL 0x3DF88DC
	0x03D1E3AC MOV X20, X0
	0x03D1E3B0 CBNZ X0, 0x3D1E380
	0x03D1E3B4 LDP X20, X19, [X31 + 0x20]
	0x03D1E3B8 LDP X30, X21, [X31 + 0x10]
	0x03D1E3BC ADD X31, X31, 0x30
	0x03D1E3C0 RET
	0x03D1E3C4 BL 0x1C16F20
	0x03D1E3C8 STR X30, [X31 - 0x20]!
	0x03D1E3CC STP X20, X19, [X31 + 0x10]
	0x03D1E3D0 ADRP X20, 0x6C9000
	0x03D1E3D4 LDRB W8, [X20 + 0x95E]
	0x03D1E3D8 MOV X19, X0
	0x03D1E3DC TBNZ X8, 0x0, 0x3D1E40C
	0x03D1E3E0 ADRP X0, 0x3D5000
	0x03D1E3E4 LDR X0, [X0 + 0xA28]
	0x03D1E3E8 BL 0x1C16CF4
	0x03D1E3EC ADRP X0, 0x444000
	0x03D1E3F0 LDR X0, [X0 + 0x7F0]
	0x03D1E3F4 BL 0x1C16CF4
	0x03D1E3F8 ADRP X0, 0x446000
	0x03D1E3FC LDR X0, [X0 + 0x3D8]
	0x03D1E400 BL 0x1C16CF4
	0x03D1E404 MOVZ W8, 0x1
	0x03D1E408 STRB W8, [X20 + 0x95E]
	0x03D1E40C LDP W8, W9, [X19 + 0x30]
	0x03D1E410 CMP W8, W9
	0x03D1E414 B.NE 0x3D1E424
	0x03D1E418 LDP X20, X19, [X31 + 0x10]
	0x03D1E41C LDR X30, [X31], #0x20
	0x03D1E420 RET
	0x03D1E424 MOVZ W20, 0x6
	0x03D1E428 LDR X0, [X19 + 0x18]
	0x03D1E42C STR W8, [X19 + 0x34]
	0x03D1E430 CBZ X0, 0x3D1E514
	0x03D1E434 LDR X8, [X0]
	0x03D1E438 LDR X9, [X8 + 0x398]
	0x03D1E43C LDR X1, [X8 + 0x3A0]
	0x03D1E440 BLR X9
	0x03D1E444 MOV X1, X0
	0x03D1E448 MOVZ W2, 0x1
	0x03D1E44C MOV X0, X19
	0x03D1E450 BL 0x3D1E518
	0x03D1E454 SUBS W20, W20, 0x1
	0x03D1E458 B.EQ 0x3D1E46C
	0x03D1E45C LDP W8, W9, [X19 + 0x30]
	0x03D1E460 CMP W9, W8
	0x03D1E464 B.NE 0x3D1E428
	0x03D1E468 B 0x3D1E4E4
	0x03D1E46C LDR X0, [X19 + 0x18]
	0x03D1E470 CBZ X0, 0x3D1E514
	0x03D1E474 LDR X8, [X0]
	0x03D1E478 LDR X9, [X8 + 0x398]
	0x03D1E47C LDR X1, [X8 + 0x3A0]
	0x03D1E480 BLR X9
	0x03D1E484 ADRP X8, 0x446000
	0x03D1E488 LDR X8, [X8 + 0x3D8]
	0x03D1E48C LDR X20, [X8]
	0x03D1E490 CBZ X0, 0x3D1E4A8
	0x03D1E494 LDR X8, [X0]
	0x03D1E498 LDP X9, X1, [X8 + 0x168]
	0x03D1E49C BLR X9
	0x03D1E4A0 MOV X1, X0
	0x03D1E4A4 B 0x3D1E4AC
	0x03D1E4A8 MOV X1, X31
	0x03D1E4AC MOV X0, X20
	0x03D1E4B0 MOV X2, X31
	0x03D1E4B4 BL 0x321B938
	0x03D1E4B8 ADRP X8, 0x3D5000
	0x03D1E4BC LDR X8, [X8 + 0xA28]
	0x03D1E4C0 MOV X20, X0
	0x03D1E4C4 LDR X8, [X8]
	0x03D1E4C8 LDR W9, [X8 + 0xE0]
	0x03D1E4CC CBNZ W9, 0x3D1E4D8
	0x03D1E4D0 MOV X0, X8
	0x03D1E4D4 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 464
	002 Move [X31+352], D8
	003 Move [X31+368], X29
	004 Move [X31+376], X30
	005 Move [X31+384], X28
	006 Move [X31+392], X27
	007 Move [X31+400], X26
	008 Move [X31+408], X25
	009 Move [X31+416], X24
	010 Move [X31+424], X23
	011 Move [X31+432], X22
	012 Move [X31+440], X21
	013 Move [X31+448], X20
	014 Move [X31+456], X19
	015 Move X23, 0x6CB000
	016 Move X19, 0x448000
	017 Move X25, X8
	018 Move W8, [X23+2384]
	019 Move X19, [X19+816]
	020 Move X21, X2
	021 Move X22, X1
	022 Move X20, X0
	023 Add X26, X31, 160
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {63}
	028 Move X0, 0x448000
	029 Move X0, [X0+824]
	030 Call 0x1C17CF4
	031 Move X0, 0x448000
	032 Move X0, [X0+832]
	033 Call 0x1C17CF4
	034 Move X0, 0x448000
	035 Move X0, [X0+840]
	036 Call 0x1C17CF4
	037 Move X0, 0x448000
	038 Move X0, [X0+848]
	039 Call 0x1C17CF4
	040 Move X0, 0x448000
	041 Move X0, [X0+856]
	042 Call 0x1C17CF4
	043 Move X0, 0x448000
	044 Move X0, [X0+864]
	045 Call 0x1C17CF4
	046 Move X0, 0x448000
	047 Move X0, [X0+872]
	048 Call 0x1C17CF4
	049 Move X0, 0x448000
	050 Move X0, [X0+504]
	051 Call 0x1C17CF4
	052 Move X0, 0x448000
	053 Move X0, [X0+680]
	054 Call 0x1C17CF4
	055 Move X0, 0x448000
	056 Move X0, [X0+880]
	057 Call 0x1C17CF4
	058 Move X0, 0x448000
	059 Move X0, [X0+816]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X23+2384], W8
	063 Move X0, [X19]
	064 NotImplemented "Instruction MOVI not yet implemented."
	065 Move [X31+336], X31
	066 Move [X31+252], W31
	067 Move [X31+240], X31
	068 Move [X31+192], X31
	069 Move [X31+144], X31
	070 Move [X31+152], X31
	071 Move [X26+144], V0
	072 Move [X26+152], V0
	073 Move [X26+112], V0
	074 Move [X26+120], V0
	075 Move [X26+6], V0
	076 Move [X26+48], V0
	077 Move [X26+56], V0
	078 Move [X26], V0
	079 Move [X26+8], V0
	080 Move [X31+128], X31
	081 Move [X31+96], V0
	082 Move [X31+104], V0
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X19]
	088 Move X8, [X0+184]
	089 Move X23, [X8+8]
	090 Compare X23, 0
	091 JumpIfNotEqual {113}
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X19]
	097 Move X9, 0x448000
	098 Move X8, [X0+184]
	099 Move X9, [X9+824]
	100 Move X24, [X8]
	101 Move X0, [X9]
	102 Call 0x1C17F10
	103 Move X8, 0x448000
	104 Move X8, [X8+880]
	105 Move X1, X24
	106 Move X3, X31
	107 Move X23, X0
	108 Move X2, [X8]
	109 Call Comparison`1<SelectorMatchRecord>..ctor, X0, X1, X2
	110 Move X8, [X19]
	111 Move X8, [X8+184]
	112 Move [X8+8], X23
	113 Compare X21, 0
	114 JumpIfEqual {458}
	115 Move X8, 0x448000
	116 Move X8, [X8+872]
	117 Move X0, X21
	118 Move X1, X23
	119 Move X2, [X8]
	120 Call List`1<SelectorMatchRecord>.Sort, X0, X1
	121 Compare X22, 0
	122 JumpIfEqual {458}
	123 Move X0, X22
	124 Move X1, X31
	125 Call VisualElement.get_fullTypeName, X0
	126 Compare X0, 0
	127 JumpIfEqual {458}
	128 Move X8, [X0]
	129 Move X9, [X8+344]
	130 Move X1, [X8+352]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move V0, [X20+48]
	133 Move W23, W0
	134 Add X0, X31, 252
	135 Move X1, X31
	136 Move [X31+252], S0
	137 Call Single.GetHashCode, X0
	138 Move X9, [X20+56]
	139 Compare X9, 0
	140 JumpIfEqual {458}
	141 Move W8, W0
	142 Move X0, [X9+24]
	143 Move [X31+360], X25
	144 Compare X0, 0
	145 JumpIfEqual {458}
	146 Move X19, 0x448000
	147 Move X29, 0x448000
	148 Move X19, [X19+864]
	149 Move X29, [X29+840]
	150 Move W9, 397
	151 NotImplemented "Instruction SMADDL not yet implemented."
	152 Move X8, W8
	153 Move X1, X31
	154 Xor X27, X9, X8
	155 Call StyleVariableContext.GetVariableHash, X0
	156 Move X1, [X19]
	157 Move W23, W0
	158 Add X8, X31, 8
	159 Move X0, X21
	160 Call List`1<SelectorMatchRecord>.GetEnumerator, X0
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 Move X8, [X31+40]
	164 Move W28, W31
	165 Move [X26+48], V0
	166 Move [X26+56], V1
	167 Move [X31+240], X8
	168 Move X1, [X29]
	169 Add X0, X31, 208
	170 Call Enumerator<SelectorMatchRecord>.MoveNext, X0
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {183}
	175 Move X8, [X31+240]
	176 Compare X8, 0
	177 JumpIfEqual {451}
	178 Move X8, [X8+40]
	179 Compare X8, 0
	180 JumpIfEqual {452}
	181 Move W8, [X8+28]
	182 Add W28, W8, W28
	183 Move X8, 0x448000
	184 Move X8, [X8+832]
	185 Add X0, X31, 208
	186 Move X1, [X8]
	187 Call Enumerator<SelectorMatchRecord>.Dispose, X0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X8, [X20+56]
	190 Compare X8, 0
	191 JumpIfEqual {458}
	192 Move X0, [X20+16]
	193 Compare X0, 0
	194 JumpIfEqual {458}
	195 Move X1, [X8+24]
	196 Move X2, X31
	197 Call StyleVariableContext.AddInitialRange, X0, X1
	198 Move X1, [X19]
	199 Add X8, X31, 8
	200 Move X0, X21
	201 Call List`1<SelectorMatchRecord>.GetEnumerator, X0
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 Move X8, [X31+40]
	205 Move W19, 397
	206 Move [X26], V0
	207 Move [X26+8], V1
	208 Move [X31+192], X8
	209 Move X1, [X29]
	210 Add X0, X31, 160
	211 Call Enumerator<SelectorMatchRecord>.MoveNext, X0
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {251}
	216 Move X0, [X31+192]
	217 Compare X0, 0
	218 JumpIfEqual {454}
	219 Move X24, [X31+176]
	220 Move X25, [X0+40]
	221 Move X1, X31
	222 Call StyleComplexSelector.get_specificity, X0
	223 Compare X24, 0
	224 JumpIfEqual {455}
	225 Move W26, W0
	226 Move X0, X24
	227 Move X1, X31
	228 Call StyleSheet.get_contentHash, X0
	229 Multiply X8, X27, X19
	230 Move X9, W0
	231 Xor X27, X8, X9
	232 Compare X25, 0
	233 JumpIfEqual {453}
	234 Move X8, [X25]
	235 Move X9, [X8+344]
	236 Move X1, [X8+352]
	237 Move X0, X25
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Move W10, [X25+28]
	240 Multiply X8, X27, X19
	241 Move X9, W0
	242 Xor X8, X8, X9
	243 Multiply X8, X8, X19
	244 Move X9, W26
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Xor X27, X8, X9
	247 Move X0, X20
	248 Move X1, X24
	249 Move X2, X25
	250 Call VisualTreeStyleUpdaterTraversal.ProcessMatchedVariables, X0, X1, X2
	251 Move X8, 0x447000
	252 Move X8, [X8+832]
	253 Add X0, X31, 160
	254 Move X1, [X8]
	255 Call Enumerator<SelectorMatchRecord>.Dispose, X0
	256 Move X8, [X22+888]
	257 Add X0, X31, 152
	258 Move X1, X31
	259 Move [X31+152], X8
	260 Call Hierarchy.get_parent, X0
	261 Move X24, X0
	262 Compare X0, 0
	263 JumpIfEqual {265}
	264 Move W8, [X24+800]
	265 Move W8, W31
	266 Move W9, 397
	267 Move X8, W8
	268 Multiply X9, X27, X9
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Xor X19, X9, X8
	271 Move X28, 0x447000
	272 Move X0, [X20+16]
	273 Move X28, [X28+504]
	274 Compare X0, 0
	275 JumpIfEqual {458}
	276 Move X1, X31
	277 Call StyleVariableContext.GetVariableHash, X0
	278 Move W25, W0
	279 Move W8, 397
	280 Move X9, W25
	281 Multiply X8, X19, X8
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Xor X23, X8, X9
	284 Move X0, [X28]
	285 Move X19, 0x447000
	286 Move W8, [X0+224]
	287 Move X19, [X19+864]
	288 Compare W8, 0
	289 JumpIfNotEqual {291}
	290 Call 0x1C17DFC
	291 Add X1, X31, 144
	292 Move W0, W25
	293 Call StyleCache.TryGetValue, X0, X1
	294 Move TEMP, X0
	295 And TEMP, TEMP, 1
	296 Compare TEMP, 1
	297 JumpIfEqual {316}
	298 Move X8, 0x447000
	299 Move X27, [X20+16]
	300 Move X8, [X8+680]
	301 Move X0, [X8]
	302 Call 0x1C17F10
	303 Move X1, X27
	304 Move X2, X31
	305 Move X26, X0
	306 Call StyleVariableContext..ctor, X0, X1
	307 Move X0, [X28]
	308 Move [X31+144], X26
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move W0, W25
	314 Move X1, X26
	315 Call StyleCache.SetValue, X0, X1
	316 Move X8, [X20+56]
	317 Compare X8, 0
	318 JumpIfEqual {458}
	319 Move X9, [X31+144]
	320 Move [X8+24], X9
	321 Move X28, 0x447000
	322 Move X28, [X28+504]
	323 Move W8, 397
	324 Multiply X8, X19, X8
	325 Move X9, W23
	326 Xor X23, X8, X9
	327 Move X19, 0x447000
	328 Move X19, [X19+864]
	329 Move X8, [X20+56]
	330 Compare X8, 0
	331 JumpIfEqual {458}
	332 Move X8, [X8+24]
	333 Move [X22+792], X8
	334 Move X0, [X20+16]
	335 Compare X0, 0
	336 JumpIfEqual {458}
	337 Move X1, X31
	338 Call StyleVariableContext.Clear, X0
	339 Move X0, [X28]
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Add X1, X31, 256
	345 Move X0, X23
	346 Call StyleCache.TryGetValue, X0, X1
	347 Move TEMP, X0
	348 And TEMP, TEMP, 1
	349 Compare TEMP, 1
	350 JumpIfEqual {432}
	351 Compare X24, 0
	352 JumpIfEqual {359}
	353 Move X0, X24
	354 Move X1, X31
	355 Call VisualElement.get_computedStyle, X0
	356 Move X0, X24
	357 Move X1, X31
	358 Call VisualElement.get_computedStyle, X0
	359 Move X8, 0x447000
	360 Move X8, [X8+856]
	361 Move X0, [X8]
	362 Move W8, [X0+224]
	363 Compare W8, 0
	364 JumpIfNotEqual {366}
	365 Call 0x1C17DFC
	366 Move X0, X31
	367 Call InitialStyle.Get
	368 Add X8, X31, 8
	369 Move X1, X31
	370 Move X24, X0
	371 Call ComputedStyle.Create, X0
	372 Add X0, X31, 256
	373 Add X1, X31, 8
	374 Move W2, 88
	375 Call 0x3EB2AC0
	376 Move X0, X22
	377 Move X1, X31
	378 Move [X31+320], X23
	379 Call VisualElement.get_scaledPixelsPerPoint, X0
	380 Move X1, [X19]
	381 Add X8, X31, 8
	382 Move X0, X21
	383 Move V8, V0
	384 Call List`1<SelectorMatchRecord>.GetEnumerator, X0
	385 NotImplemented "Instruction LDUR not yet implemented."
	386 NotImplemented "Instruction LDUR not yet implemented."
	387 Move X8, [X31+40]
	388 Move [X31+96], V0
	389 Move [X31+104], V1
	390 Move [X31+128], X8
	391 Move X1, [X29]
	392 Add X0, X31, 96
	393 Call Enumerator<SelectorMatchRecord>.MoveNext, X0
	394 Move TEMP, X0
	395 And TEMP, TEMP, 1
	396 Compare TEMP, 1
	397 JumpIfNotEqual {415}
	398 Move X8, [X20+56]
	399 Compare X8, 0
	400 JumpIfEqual {456}
	401 Move X0, [X20+64]
	402 Compare X0, 0
	403 JumpIfEqual {457}
	404 Move X1, [X31+112]
	405 Move X2, [X31+128]
	406 Move X3, [X8+24]
	407 Move V0, V8
	408 Move X4, X31
	409 Call StylePropertyReader.SetContext, X0, X1, X2, X3, V0
	410 Move X1, [X20+64]
	411 Add X0, X31, 256
	412 Move X2, X24
	413 Move X3, X31
	414 Call ComputedStyle.ApplyProperties, X0, X1, X2
	415 Move X8, 0x447000
	416 Move X8, [X8+832]
	417 Add X0, X31, 96
	418 Move X1, [X8]
	419 Call Enumerator<SelectorMatchRecord>.Dispose, X0
	420 Add X0, X31, 256
	421 Move X1, X24
	422 Move X2, X31
	423 Call ComputedStyle.FinalizeApply, X0, X1
	424 Move X0, [X28]
	425 Move W8, [X0+224]
	426 Compare W8, 0
	427 JumpIfNotEqual {429}
	428 Call 0x1C17DFC
	429 Add X1, X31, 256
	430 Move X0, X23
	431 Call StyleCache.SetValue, X0, X1
	432 Move X0, [X31+360]
	433 Add X1, X31, 256
	434 Move W2, 88
	435 Call 0x3EB2AC0
	436 Move X20, [X31+448]
	437 Move X19, [X31+456]
	438 Move X22, [X31+432]
	439 Move X21, [X31+440]
	440 Move X24, [X31+416]
	441 Move X23, [X31+424]
	442 Move X26, [X31+400]
	443 Move X25, [X31+408]
	444 Move X28, [X31+384]
	445 Move X27, [X31+392]
	446 Move X29, [X31+368]
	447 Move X30, [X31+376]
	448 Move V8, [X31+352]
	449 Add X31, X31, 464
	450 Return X0
	451 Call 0x1C17F20
	452 Call 0x1C17F20
	453 Call 0x1C17F20
	454 Call 0x1C17F20
	455 Call 0x1C17F20
	456 Call 0x1C17F20
	457 Call 0x1C17F20
	458 Call 0x1C17F20
	459 Move X25, X0
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Move X0, X25
	462 Call 0x3EB2AD0
	463 Move X20, [X0]
	464 Call 0x3EB2AE0
	465 Move X8, 0x447000
	466 Move X8, [X8+832]
	467 Add X0, X31, 96
	468 Move X1, [X8]
	469 Call Enumerator<SelectorMatchRecord>.Dispose, X0
	470 Move X28, 0x447000
	471 Move X28, [X28+504]
	472 Compare X20, 0
	473 JumpIfEqual {420}
	474 Move X0, X20
	475 Call 0x1C17F18
	476 Move X20, X31
	477 Move X25, X0
	478 Move X8, 0x447000
	479 Move X8, [X8+832]
	480 Move X1, [X8]
	481 Add X0, X31, 96
	482 Call Enumerator<SelectorMatchRecord>.Dispose, X0
	483 Compare X20, 0
	484 JumpIfEqual {535}
	485 Move X0, X20
	486 Call 0x1C17F18
	487 Move X25, X0
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Move X0, X25
	490 Call 0x3EB2AD0
	491 Move X24, [X0]
	492 Call 0x3EB2AE0
	493 Move X8, 0x447000
	494 Move X8, [X8+832]
	495 Add X0, X31, 160
	496 Move X1, [X8]
	497 Call Enumerator<SelectorMatchRecord>.Dispose, X0
	498 Compare X24, 0
	499 JumpIfEqual {256}
	500 Move X24, X31
	501 Move X25, X0
	502 Move X8, 0x447000
	503 Move X8, [X8+832]
	504 Move X1, [X8]
	505 Add X0, X31, 160
	506 Call Enumerator<SelectorMatchRecord>.Dispose, X0
	507 Compare X24, 0
	508 JumpIfEqual {535}
	509 Move X0, X24
	510 Call 0x1C17F18
	511 Move X25, X0
	512 NotImplemented "Instruction CMP not yet implemented."
	513 Move X0, X25
	514 Call 0x3EB2AD0
	515 Move X24, [X0]
	516 Call 0x3EB2AE0
	517 Move X8, 0x447000
	518 Move X8, [X8+832]
	519 Add X0, X31, 208
	520 Move X1, [X8]
	521 Call Enumerator<SelectorMatchRecord>.Dispose, X0
	522 Compare X24, 0
	523 JumpIfEqual {188}
	524 Move X0, X24
	525 Call 0x1C17F18
	526 Move X24, X31
	527 Move X25, X0
	528 Move X8, 0x447000
	529 Move X8, [X8+832]
	530 Move X1, [X8]
	531 Add X0, X31, 208
	532 Call Enumerator<SelectorMatchRecord>.Dispose, X0
	533 Compare X24, 0
	534 JumpIfNotEqual {537}
	535 Move X0, X25
	536 Call 0x1D2D690
	537 Move X0, X24
	538 Call 0x1C17F18
	539 Call 0x1991590

Method: System.Void ProcessMatchedVariables(UnityEngine.UIElements.StyleSheet sheet, UnityEngine.UIElements.StyleRule rule)

Disassembly:
	0x03D1E840 LDR X0, [X0 + 0xB8]
	0x03D1E844 MOV X1, X21
	0x03D1E848 MOV X2, X20
	0x03D1E84C BL 0x1C24138
	0x03D1E850 CMP X20, X0
	0x03D1E854 MOV X20, X0
	0x03D1E858 B.NE 0x3D1E7F8
	0x03D1E85C LDP X20, X19, [X31 + 0x30]
	0x03D1E860 LDP X22, X21, [X31 + 0x20]
	0x03D1E864 LDP X24, X23, [X31 + 0x10]
	0x03D1E868 LDP X30, X25, [X31], #0x40
	0x03D1E86C RET
	0x03D1E870 MOV X0, X22
	0x03D1E874 MOV X1, X23
	0x03D1E878 BL 0x1C171E0
	0x03D1E87C STP X30, X25, [X31 - 0x40]!
	0x03D1E880 STP X24, X23, [X31 + 0x10]
	0x03D1E884 STP X22, X21, [X31 + 0x20]
	0x03D1E888 STP X20, X19, [X31 + 0x30]
	0x03D1E88C ADRP X20, 0x6C9000
	0x03D1E890 ADRP X24, 0x3FE000
	0x03D1E894 LDRB W8, [X20 + 0x964]
	0x03D1E898 LDR X24, [X24 + 0x820]
	0x03D1E89C MOV X19, X0
	0x03D1E8A0 TBNZ X8, 0x0, 0x3D1E8C4
	0x03D1E8A4 ADRP X0, 0x3D5000
	0x03D1E8A8 LDR X0, [X0 + 0xD28]
	0x03D1E8AC BL 0x1C16CF4
	0x03D1E8B0 ADRP X0, 0x3FE000
	0x03D1E8B4 LDR X0, [X0 + 0x820]
	0x03D1E8B8 BL 0x1C16CF4
	0x03D1E8BC MOVZ W8, 0x1
	0x03D1E8C0 STRB W8, [X20 + 0x964]
	0x03D1E8C4 LDR X0, [X24]
	0x03D1E8C8 LDR W8, [X0 + 0xE0]
	0x03D1E8CC CBNZ W8, 0x3D1E8D8
	0x03D1E8D0 BL 0x1C16DFC
	0x03D1E8D4 LDR X0, [X24]
	0x03D1E8D8 LDR X8, [X0 + 0xB8]
	0x03D1E8DC ADRP X25, 0x3D5000
	0x03D1E8E0 LDR X20, [X8]
	0x03D1E8E4 LDR X25, [X25 + 0xD28]
	0x03D1E8E8 MOV X0, X20
	0x03D1E8EC MOV X1, X19
	0x03D1E8F0 MOV X2, X31
	0x03D1E8F4 BL 0x33C0FDC
	0x03D1E8F8 CBZ X0, 0x3D1E918
	0x03D1E8FC LDR X23, [X25]
	0x03D1E900 MOV X22, X0
	0x03D1E904 MOV X1, X23
	0x03D1E908 BL 0x1C16E00
	0x03D1E90C MOV X21, X0
	0x03D1E910 CBNZ X0, 0x3D1E91C
	0x03D1E914 B 0x3D1E960
	0x03D1E918 MOV X21, X31
	0x03D1E91C LDR X0, [X24]
	0x03D1E920 LDR W8, [X0 + 0xE0]
	0x03D1E924 CBNZ W8, 0x3D1E930
	0x03D1E928 BL 0x1C16DFC
	0x03D1E92C LDR X0, [X24]
	0x03D1E930 LDR X0, [X0 + 0xB8]
	0x03D1E934 MOV X1, X21
	0x03D1E938 MOV X2, X20

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+72], X31
	003 Move [X31+80], X30
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move [X31+56], X31
	011 Move [X31+64], X31
	012 Compare X2, 0
	013 JumpIfEqual {72}
	014 Move X19, X1
	015 Move X20, X0
	016 Move X0, X2
	017 Move X1, X31
	018 Call StyleRule.get_properties, X0
	019 Compare X0, 0
	020 JumpIfEqual {72}
	021 Move W8, [X0+24]
	022 Move X21, X0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W24, W31
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Add X8, X21, W24
	027 Move X22, [X8+32]
	028 Compare X22, 0
	029 JumpIfEqual {72}
	030 Move W8, [X22+40]
	031 Compare W8, 0
	032 JumpIfEqual {60}
	033 Move X0, X22
	034 Move X1, X31
	035 Call StyleProperty.get_name, X0
	036 Move X23, X0
	037 Move X0, X22
	038 Move X1, X31
	039 Call StyleProperty.get_values, X0
	040 Move X3, X0
	041 Add X0, X31, 56
	042 Move X1, X23
	043 Move X2, X19
	044 Move X4, X31
	045 Call StyleVariable..ctor, X0, X1, X2, X3
	046 Move X0, [X20+16]
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X8, [X31+72]
	049 Move [X31+2], V0
	050 Move [X31+48], X8
	051 Compare X0, 0
	052 JumpIfEqual {72}
	053 Move V0, [X31+2]
	054 Move X8, [X31+48]
	055 Add X1, X31, 0
	056 Move X2, X31
	057 Move [X31], V0
	058 Move [X31+16], X8
	059 Call StyleVariableContext.Add, X0, X1
	060 Move W8, [X21+24]
	061 Add W24, W24, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X20, [X31+128]
	064 Move X19, [X31+136]
	065 Move X22, [X31+112]
	066 Move X21, [X31+120]
	067 Move X24, [X31+96]
	068 Move X23, [X31+104]
	069 Move X30, [X31+80]
	070 Add X31, X31, 144
	071 Return 
	072 Call 0x1C17F20
	073 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03D1CF20 MOV X1, X31
	0x03D1CF24 EOR X27, X9, X8, 0x0
	0x03D1CF28 BL 0x3E08568
	0x03D1CF2C LDR X1, [X19]
	0x03D1CF30 MOV W23, W0
	0x03D1CF34 ADD X8, X31, 0x8
	0x03D1CF38 MOV X0, X21
	0x03D1CF3C BL 0x305B004
	0x03D1CF40 LDUR V0, [X31 + 0x8]
	0x03D1CF44 LDUR V1, [X31 + 0x18]
	0x03D1CF48 LDR X8, [X31 + 0x28]
	0x03D1CF4C MOV W28, W31
	0x03D1CF50 STP V0, V1, [X26 + 0x30]
	0x03D1CF54 STR X8, [X31 + 0xF0]
	0x03D1CF58 LDR X1, [X29]
	0x03D1CF5C ADD X0, X31, 0xD0
	0x03D1CF60 BL 0x2BC9B64
	0x03D1CF64 TBZ X0, 0x0, 0x3D1CF84
	0x03D1CF68 LDR X8, [X31 + 0xF0]
	0x03D1CF6C CBZ X8, 0x3D1D33C
	0x03D1CF70 LDR X8, [X8 + 0x28]
	0x03D1CF74 CBZ X8, 0x3D1D340
	0x03D1CF78 LDR W8, [X8 + 0x1C]
	0x03D1CF7C ADD W28, W8, W28
	0x03D1CF80 B 0x3D1CF58
	0x03D1CF84 ADRP X8, 0x448000
	0x03D1CF88 LDR X8, [X8 + 0x340]
	0x03D1CF8C ADD X0, X31, 0xD0
	0x03D1CF90 LDR X1, [X8]
	0x03D1CF94 BL 0x2BC9B60
	0x03D1CF98 CMP W28, 0x0
	0x03D1CF9C B.LE 0x3D1CFBC
	0x03D1CFA0 LDR X8, [X20 + 0x38]
	0x03D1CFA4 CBZ X8, 0x3D1D358
	0x03D1CFA8 LDR X0, [X20 + 0x10]
	0x03D1CFAC CBZ X0, 0x3D1D358
	0x03D1CFB0 LDR X1, [X8 + 0x18]
	0x03D1CFB4 MOV X2, X31
	0x03D1CFB8 BL 0x3E080D0
	0x03D1CFBC LDR X1, [X19]
	0x03D1CFC0 ADD X8, X31, 0x8
	0x03D1CFC4 MOV X0, X21
	0x03D1CFC8 BL 0x305B004
	0x03D1CFCC LDUR V0, [X31 + 0x8]
	0x03D1CFD0 LDUR V1, [X31 + 0x18]
	0x03D1CFD4 LDR X8, [X31 + 0x28]
	0x03D1CFD8 MOVZ W19, 0x18D
	0x03D1CFDC STP V0, V1, [X26]
	0x03D1CFE0 STR X8, [X31 + 0xC0]
	0x03D1CFE4 LDR X1, [X29]
	0x03D1CFE8 ADD X0, X31, 0xA0
	0x03D1CFEC BL 0x2BC9B64
	0x03D1CFF0 TBZ X0, 0x0, 0x3D1D078
	0x03D1CFF4 LDR X0, [X31 + 0xC0]
	0x03D1CFF8 CBZ X0, 0x3D1D348
	0x03D1CFFC LDR X24, [X31 + 0xB0]
	0x03D1D000 LDR X25, [X0 + 0x28]
	0x03D1D004 MOV X1, X31
	0x03D1D008 BL 0x3E057D0
	0x03D1D00C CBZ X24, 0x3D1D34C
	0x03D1D010 MOV W26, W0
	0x03D1D014 MOV X0, X24
	0x03D1D018 MOV X1, X31
	0x03D1D01C BL 0x3E06DD0
	0x03D1D020 MUL X8, X27, X19
	0x03D1D024 SXTW X9, W0
	0x03D1D028 EOR X27, X8, X9, 0x0
	0x03D1D02C CBZ X25, 0x3D1D344
	0x03D1D030 LDR X8, [X25]
	0x03D1D034 LDP X9, X1, [X8 + 0x158]
	0x03D1D038 MOV X0, X25
	0x03D1D03C BLR X9
	0x03D1D040 LDR W10, [X25 + 0x1C]
	0x03D1D044 MUL X8, X27, X19
	0x03D1D048 SXTW X9, W0
	0x03D1D04C EOR X8, X8, X9, 0x0
	0x03D1D050 MUL X8, X8, X19
	0x03D1D054 SXTW X9, W26
	0x03D1D058 CMP W10, 0x0
	0x03D1D05C EOR X27, X8, X9, 0x0
	0x03D1D060 B.LE 0x3D1CFE4
	0x03D1D064 MOV X0, X20
	0x03D1D068 MOV X1, X24
	0x03D1D06C MOV X2, X25
	0x03D1D070 BL 0x3D1D840
	0x03D1D074 B 0x3D1CFE4
	0x03D1D078 ADRP X8, 0x447000
	0x03D1D07C LDR X8, [X8 + 0x340]
	0x03D1D080 ADD X0, X31, 0xA0
	0x03D1D084 LDR X1, [X8]
	0x03D1D088 BL 0x2BC9B60
	0x03D1D08C LDR X8, [X22 + 0x378]
	0x03D1D090 ADD X0, X31, 0x98
	0x03D1D094 MOV X1, X31
	0x03D1D098 STR X8, [X31 + 0x98]
	0x03D1D09C BL 0x3DF88DC
	0x03D1D0A0 MOV X24, X0
	0x03D1D0A4 CBZ X0, 0x3D1D0B0
	0x03D1D0A8 LDR W8, [X24 + 0x320]
	0x03D1D0AC B 0x3D1D0B4
	0x03D1D0B0 MOV W8, W31
	0x03D1D0B4 MOVZ W9, 0x18D
	0x03D1D0B8 SXTW X8, W8
	0x03D1D0BC MUL X9, X27, X9
	0x03D1D0C0 CMP W28, 0x0
	0x03D1D0C4 EOR X19, X9, X8, 0x0
	0x03D1D0C8 B.LE 0x3D1D180
	0x03D1D0CC ADRP X28, 0x447000
	0x03D1D0D0 LDR X0, [X20 + 0x10]
	0x03D1D0D4 LDR X28, [X28 + 0x1F8]
	0x03D1D0D8 CBZ X0, 0x3D1D358
	0x03D1D0DC MOV X1, X31
	0x03D1D0E0 BL 0x3E08568
	0x03D1D0E4 MOV W25, W0
	0x03D1D0E8 MOVZ W8, 0x18D
	0x03D1D0EC SXTW X9, W25
	0x03D1D0F0 MUL X8, X19, X8
	0x03D1D0F4 CMP W23, W0
	0x03D1D0F8 EOR X23, X8, X9, 0x0
	0x03D1D0FC B.EQ 0x3D1D198
	0x03D1D100 LDR X0, [X28]
	0x03D1D104 ADRP X19, 0x447000
	0x03D1D108 LDR W8, [X0 + 0xE0]
	0x03D1D10C LDR X19, [X19 + 0x360]
	0x03D1D110 CBNZ W8, 0x3D1D118
	0x03D1D114 BL 0x1C16DFC
	0x03D1D118 ADD X1, X31, 0x90

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x6CC000
	014 Move X23, 0x449000
	015 Move X22, 0x447000
	016 Move X29, 0x447000
	017 Move X28, 0x449000
	018 Move X27, 0x449000
	019 Move X26, 0x449000
	020 Move X25, 0x449000
	021 Move X21, 0x449000
	022 Move X24, 0x449000
	023 Move X23, [X23+680]
	024 Move X22, [X22+2184]
	025 Move X29, [X29+2192]
	026 Move X28, [X28+688]
	027 Move X27, [X27+696]
	028 Move X26, [X26+704]
	029 Move W8, [X20+2385]
	030 Move X25, [X25+712]
	031 Move X21, [X21+720]
	032 Move X24, [X24+728]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {73}
	038 Move X0, 0x449000
	039 Move X0, [X0+704]
	040 Call 0x1C17CF4
	041 Move X0, 0x447000
	042 Move X0, [X0+2192]
	043 Call 0x1C17CF4
	044 Move X0, 0x447000
	045 Move X0, [X0+2184]
	046 Call 0x1C17CF4
	047 Move X0, 0x449000
	048 Move X0, [X0+696]
	049 Call 0x1C17CF4
	050 Move X0, 0x449000
	051 Move X0, [X0+736]
	052 Call 0x1C17CF4
	053 Move X0, 0x449000
	054 Move X0, [X0+744]
	055 Call 0x1C17CF4
	056 Move X0, 0x449000
	057 Move X0, [X0+688]
	058 Call 0x1C17CF4
	059 Move X0, 0x449000
	060 Move X0, [X0+720]
	061 Call 0x1C17CF4
	062 Move X0, 0x449000
	063 Move X0, [X0+728]
	064 Call 0x1C17CF4
	065 Move X0, 0x449000
	066 Move X0, [X0+680]
	067 Call 0x1C17CF4
	068 Move X0, 0x448000
	069 Move X0, [X0+712]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X20+2385], W8
	073 Move X0, [X23]
	074 Call 0x1C17F10
	075 Move X1, X31
	076 Move X20, X0
	077 Call StyleVariableContext..ctor, X0
	078 Move [X19+16], X20
	079 Move X0, [X22]
	080 Call 0x1C17F10
	081 Move X1, [X29]
	082 Move X20, X0
	083 Call HashSet`1<Object>..ctor, X0
	084 Move [X19+24], X20
	085 Move X0, [X22]
	086 Call 0x1C17F10
	087 Move X1, [X29]
	088 Move X20, X0
	089 Call HashSet`1<Object>..ctor, X0
	090 Move [X19+32], X20
	091 Move X0, [X28]
	092 Call 0x1C17F10
	093 Move X1, [X27]
	094 Move X20, X0
	095 Call List`1<SelectorMatchRecord>..ctor, X0
	096 Move W8, 0x3F800000
	097 Move [X19+40], X20
	098 Move [X19+48], W8
	099 Move X0, [X26]
	100 Call 0x1C17F10
	101 Move X2, [X25]
	102 Move X1, X31
	103 Move X3, X31
	104 Move X20, X0
	105 Call Action`2<Object, MatchResultInfo>..ctor, X0, X1, X2
	106 Move X0, [X21]
	107 Call 0x1C17F10
	108 Move X1, X20
	109 Move X21, X0
	110 Call StyleMatchingContext..ctor, X0, X1
	111 Move [X19+56], X21
	112 Move X0, [X24]
	113 Call 0x1C17F10
	114 Move X1, X31
	115 Move X20, X0
	116 Call StylePropertyReader..ctor, X0
	117 Move [X19+64], X20
	118 Move X8, 0x448000
	119 Move X8, [X8+744]
	120 Move X0, [X8]
	121 Call 0x1C17F10
	122 Move X8, 0x448000
	123 Move X8, [X8+736]
	124 Move X20, X0
	125 Move X1, [X8]
	126 Call List`1<Int32Enum>..ctor, X0
	127 Move [X19+72], X20
	128 Move X0, X19
	129 Move X20, [X31+80]
	130 Move X19, [X31+88]
	131 Move X22, [X31+64]
	132 Move X21, [X31+72]
	133 Move X24, [X31+48]
	134 Move X23, [X31+56]
	135 Move X26, [X31+32]
	136 Move X25, [X31+40]
	137 Move X28, [X31+16]
	138 Move X27, [X31+24]
	139 Move X1, X31
	140 Move X29, [X31+96]
	141 Move X30, [X31+104]
	142 Call HierarchyTraversal..ctor, X0
	143 Return 

