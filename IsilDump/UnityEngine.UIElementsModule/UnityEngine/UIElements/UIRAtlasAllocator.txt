Type: UnityEngine.UIElements.UIRAtlasAllocator

Method: System.Int32 get_maxAtlasSize()

Disassembly:
	0x03DC1A50 BL 0x33BDD8C
	0x03DC1A54 MOV X0, X19

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Int32 get_maxImageWidth()

Disassembly:
	0x03DC1A58 LDP X20, X19, [X31 + 0x10]
	0x03DC1A5C LDR X30, [X31], #0x20

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Int32 get_maxImageHeight()

Disassembly:
	0x03DC1A60 RET
	0x03DC1A64 MOV X1, X31

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Int32 get_virtualWidth()

Disassembly:
	0x03DC1A68 B 0x33BDD8C
	0x03DC1A6C STR X30, [X31 - 0x40]!

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.Void set_virtualWidth(System.Int32 value)

Disassembly:
	0x03DC1A70 STP X24, X23, [X31 + 0x10]
	0x03DC1A74 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X0+28], W1
	002 Return 

Method: System.Int32 get_virtualHeight()

Disassembly:
	0x03DC1A78 STP X20, X19, [X31 + 0x30]
	0x03DC1A7C ADRP X20, 0x627000

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_virtualHeight(System.Int32 value)

Disassembly:
	0x03DC1A80 ADRP X19, 0x3A8000
	0x03DC1A84 LDRB W8, [X20 + 0x123]

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: System.Int32 get_physicalWidth()

Disassembly:
	0x03DC1A88 LDR X19, [X19 + 0x128]
	0x03DC1A8C TBNZ X8, 0x0, 0x3DC1AE0

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_physicalWidth(System.Int32 value)

Disassembly:
	0x03DC1A90 ADRP X0, 0x3A8000
	0x03DC1A94 LDR X0, [X0 + 0xC8]

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: System.Int32 get_physicalHeight()

Disassembly:
	0x03DC1A98 BL 0x1C16CF4
	0x03DC1A9C ADRP X0, 0x3A8000

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_physicalHeight(System.Int32 value)

Disassembly:
	0x03DC1AA0 LDR X0, [X0 + 0x130]
	0x03DC1AA4 BL 0x1C16CF4

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Boolean get_disposed()

Disassembly:
	0x03DC1AA8 ADRP X0, 0x3A8000
	0x03DC1AAC LDR X0, [X0 + 0x138]

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_disposed(System.Boolean value)

Disassembly:
	0x03DC1AB0 BL 0x1C16CF4
	0x03DC1AB4 ADRP X0, 0x3A8000
	0x03DC1AB8 LDR X0, [X0 + 0x140]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+72], W8
	003 Return 

Method: System.Void Dispose()

Disassembly:
	0x03DC1ABC BL 0x1C16CF4
	0x03DC1AC0 ADRP X0, 0x3A8000
	0x03DC1AC4 LDR X0, [X0 + 0x148]
	0x03DC1AC8 BL 0x1C16CF4
	0x03DC1ACC ADRP X0, 0x3A8000
	0x03DC1AD0 LDR X0, [X0 + 0x128]
	0x03DC1AD4 BL 0x1C16CF4
	0x03DC1AD8 MOVZ W8, 0x1
	0x03DC1ADC STRB W8, [X20 + 0x123]
	0x03DC1AE0 LDR X0, [X19]
	0x03DC1AE4 ADRP X24, 0x3A8000
	0x03DC1AE8 ADRP X20, 0x3A8000
	0x03DC1AEC ADRP X23, 0x3A8000
	0x03DC1AF0 ADRP X22, 0x3A8000
	0x03DC1AF4 ADRP X21, 0x3A8000
	0x03DC1AF8 LDR X24, [X24 + 0x130]
	0x03DC1AFC LDR W8, [X0 + 0xE0]
	0x03DC1B00 LDR X20, [X20 + 0x148]
	0x03DC1B04 LDR X23, [X23 + 0x140]
	0x03DC1B08 LDR X22, [X22 + 0x138]
	0x03DC1B0C LDR X21, [X21 + 0xC8]
	0x03DC1B10 CBNZ W8, 0x3DC1B1C
	0x03DC1B14 BL 0x1C16DFC
	0x03DC1B18 LDR X0, [X19]
	0x03DC1B1C LDR X8, [X0 + 0xB8]
	0x03DC1B20 LDR X0, [X24]
	0x03DC1B24 LDR X19, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x628000
	006 Move X20, 0x33A000
	007 Move W8, [X21+277]
	008 Move X20, [X20+3088]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x33A000
	015 Move X0, [X0+3088]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+277], W8
	019 Move X8, [X19]
	020 Move W1, 1
	021 Move X0, X19
	022 Move X9, [X8+392]
	023 Move X2, [X8+400]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X1, X31
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Call GC.SuppressFinalize, X0
	037 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03DC1B28 BL 0x1C16F10
	0x03DC1B2C LDR X2, [X20]
	0x03DC1B30 MOV X1, X19
	0x03DC1B34 MOV X3, X31
	0x03DC1B38 MOV X20, X0
	0x03DC1B3C BL 0x2D27AA8
	0x03DC1B40 LDR X0, [X23]
	0x03DC1B44 BL 0x1C16F10
	0x03DC1B48 LDR X3, [X22]
	0x03DC1B4C MOVZ W2, 0x64
	0x03DC1B50 MOV X1, X20
	0x03DC1B54 MOV X19, X0
	0x03DC1B58 BL 0x24944D4
	0x03DC1B5C LDR X8, [X21]
	0x03DC1B60 LDP X22, X21, [X31 + 0x20]
	0x03DC1B64 LDP X24, X23, [X31 + 0x10]
	0x03DC1B68 LDR X8, [X8 + 0xB8]
	0x03DC1B6C STR X19, [X8]
	0x03DC1B70 LDP X20, X19, [X31 + 0x30]
	0x03DC1B74 LDR X30, [X31], #0x40
	0x03DC1B78 RET
	0x03DC1B7C STR X30, [X31 - 0x20]!
	0x03DC1B80 STP X20, X19, [X31 + 0x10]
	0x03DC1B84 ADRP X19, 0x627000
	0x03DC1B88 ADRP X20, 0x3A8000
	0x03DC1B8C LDRB W8, [X19 + 0x124]
	0x03DC1B90 LDR X20, [X20 + 0x128]
	0x03DC1B94 TBNZ X8, 0x0, 0x3DC1BAC
	0x03DC1B98 ADRP X0, 0x3A8000
	0x03DC1B9C LDR X0, [X0 + 0x128]
	0x03DC1BA0 BL 0x1C16CF4
	0x03DC1BA4 MOVZ W8, 0x1
	0x03DC1BA8 STRB W8, [X19 + 0x124]
	0x03DC1BAC LDR X0, [X20]
	0x03DC1BB0 BL 0x1C16F10
	0x03DC1BB4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+72]
	005 Compare W8, 0
	006 JumpIfNotEqual {41}
	007 Move X19, X0
	008 Move TEMP, X1
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {39}
	012 Move X8, [X19+56]
	013 Compare X8, 0
	014 JumpIfEqual {28}
	015 Move X20, X31
	016 Move W9, [X8+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X9, X8, X20
	020 Move X0, [X9+32]
	021 Compare X0, 0
	022 JumpIfEqual {25}
	023 Call Row.Release, X0
	024 Move X8, [X19+56]
	025 Add X20, X20, 1
	026 Compare X8, 0
	027 JumpIfNotEqual {16}
	028 Call 0x1C17F20
	029 Move X0, [X19+48]
	030 Move [X19+56], X31
	031 Compare X0, 0
	032 JumpIfEqual {38}
	033 Move X20, [X0+40]
	034 Call AreaNode.Release, X0
	035 Move X0, X20
	036 Compare X20, 0
	037 JumpIfNotEqual {33}
	038 Move [X19+48], X31
	039 Move W8, 1
	040 Move [X19+72], W8
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return 
	045 Call 0x1C17F28

Method: System.Int32 GetLog2OfNextPower(System.Int32 n)

Disassembly:
	0x03DC1CC8 ADRP X8, 0xFFFFFFFFFCD2C000
	0x03DC1CCC LDR V0, [X8 + 0x5B8]
	0x03DC1CD0 MOV X0, X19
	0x03DC1CD4 MOV X1, X31
	0x03DC1CD8 STR D0, [X19 + 0x38]
	0x03DC1CDC BL 0x33BDD8C
	0x03DC1CE0 LDR X0, [X24]
	0x03DC1CE4 LDR W8, [X0 + 0xE0]
	0x03DC1CE8 CBNZ W8, 0x3DC1CF0
	0x03DC1CEC BL 0x1C16DFC
	0x03DC1CF0 ADRP X25, 0x626000
	0x03DC1CF4 LDRB W8, [X25 + 0x7E5]
	0x03DC1CF8 CBNZ W8, 0x3DC1D10
	0x03DC1CFC ADRP X0, 0x3A1000
	0x03DC1D00 LDR X0, [X0 + 0x6B0]
	0x03DC1D04 BL 0x1C16CF4
	0x03DC1D08 MOVZ W8, 0x1
	0x03DC1D0C STRB W8, [X25 + 0x7E5]
	0x03DC1D10 LDR X0, [X24]
	0x03DC1D14 LDR W8, [X0 + 0xE0]
	0x03DC1D18 CBNZ W8, 0x3DC1D24
	0x03DC1D1C BL 0x1C16DFC
	0x03DC1D20 LDR X0, [X24]
	0x03DC1D24 LDR X8, [X0 + 0xB8]
	0x03DC1D28 LDR X0, [X8]
	0x03DC1D2C CBZ X0, 0x3DC1DAC
	0x03DC1D30 ADRP X24, 0x3A8000
	0x03DC1D34 ADRP X25, 0x3A3000
	0x03DC1D38 LDR X24, [X24 + 0x150]
	0x03DC1D3C LDR X25, [X25 + 0xAB8]
	0x03DC1D40 MOV X1, X31
	0x03DC1D44 BL 0x3DE01F8
	0x03DC1D48 STR W0, [X19 + 0x10]
	0x03DC1D4C STP W23, W22, [X19 + 0x20]
	0x03DC1D50 STP X21, X20, [X19 + 0x28]
	0x03DC1D54 LDR X0, [X24]
	0x03DC1D58 LDR W22, [X19 + 0x3C]
	0x03DC1D5C BL 0x1C16F10
	0x03DC1D60 MOV X1, X21
	0x03DC1D64 MOV X2, X20
	0x03DC1D68 MOV W3, W22
	0x03DC1D6C MOV X4, X31
	0x03DC1D70 MOV X23, X0
	0x03DC1D74 BL 0x3D1FF90
	0x03DC1D78 STR X23, [X19 + 0x40]
	0x03DC1D7C LDR X0, [X25]
	0x03DC1D80 BL 0x1C16F10
	0x03DC1D84 MOVZ W1, 0x40
	0x03DC1D88 MOV X2, X31
	0x03DC1D8C MOV X20, X0
	0x03DC1D90 BL 0x3D286D0
	0x03DC1D94 STR X20, [X19 + 0x48]
	0x03DC1D98 LDP X20, X19, [X31 + 0x30]
	0x03DC1D9C LDP X22, X21, [X31 + 0x20]
	0x03DC1DA0 LDP X24, X23, [X31 + 0x10]
	0x03DC1DA4 LDP X30, X25, [X31], #0x40
	0x03DC1DA8 RET
	0x03DC1DAC BL 0x1C16F20
	0x03DC1DB0 LDRB W0, [X0 + 0x58]
	0x03DC1DB4 RET
	0x03DC1DB8 AND W8, W1, 0x1
	0x03DC1DBC STRB W8, [X0 + 0x58]
	0x03DC1DC0 RET
	0x03DC1DC4 STP X30, X21, [X31 - 0x20]!
	0x03DC1DC8 STP X20, X19, [X31 + 0x10]
	0x03DC1DCC ADRP X21, 0x627000
	0x03DC1DD0 ADRP X20, 0x339000
	0x03DC1DD4 LDRB W8, [X21 + 0x127]
	0x03DC1DD8 LDR X20, [X20 + 0xC10]
	0x03DC1DDC MOV X19, X0
	0x03DC1DE0 TBNZ X8, 0x0, 0x3DC1DF8
	0x03DC1DE4 ADRP X0, 0x339000
	0x03DC1DE8 LDR X0, [X0 + 0xC10]
	0x03DC1DEC BL 0x1C16CF4
	0x03DC1DF0 MOVZ W8, 0x1
	0x03DC1DF4 STRB W8, [X21 + 0x127]

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X1, X31
	007 Call Mathf.NextPowerOfTwo, X0
	008 Move X20, 0x621000
	009 Move W8, [X20+3640]
	010 Move W19, W0
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x333000
	014 Move X0, [X0+1448]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+3640], W8
	018 Move X20, 0x333000
	019 Move X20, [X20+1448]
	020 NotImplemented "Instruction SCVTF not yet implemented."
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 NotImplemented "Instruction FCVT not yet implemented."
	027 Move D1, 2
	028 Move X0, X31
	029 Call Math.Log, V0, V1
	030 Move X19, 0x619000
	031 Move W8, [X19+1495]
	032 Move V8, V0
	033 Compare W8, 0
	034 JumpIfNotEqual {40}
	035 Move X0, 0x333000
	036 Move X0, [X0+1448]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X19+1495], W8
	040 Move X0, [X20]
	041 NotImplemented "Instruction INVALID not yet implemented."
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 NotImplemented "Instruction FCVT not yet implemented."
	047 Add X0, X31, 24
	048 Move V0, V8
	049 Call 0x3EB2C00
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Move D1, -0.5
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 Move V0, [X31+24]
	054 Move D1, -1
	055 Move D1, 0.5
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 Move V0, [X31+24]
	058 Move D1, 1
	059 NotImplemented "Instruction FCVTZS not yet implemented."
	060 Add D1, D0, D1
	061 And X31, X8, 1
	062 NotImplemented "Instruction FCSEL not yet implemented."
	063 Add D0, D8, D1
	064 NotImplemented "Instruction FRINTP not yet implemented."
	065 Add D0, D8, D1
	066 NotImplemented "Instruction FRINTM not yet implemented."
	067 Move X8, 0x7FF00000
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X30, [X31+16]
	071 Move D1, X8
	072 NotImplemented "Instruction FCVTZS not yet implemented."
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 Move W8, 0x80000000
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 Move D9, [X31+48]
	077 Move D8, [X31+56]
	078 Return X0

Method: System.Void .ctor(System.Int32 initialAtlasSize, System.Int32 maxAtlasSize, System.Int32 sidePadding = 1)

Disassembly:
	0x03DC1DF8 LDR X8, [X19]
	0x03DC1DFC MOVZ W1, 0x1
	0x03DC1E00 MOV X0, X19
	0x03DC1E04 LDP X9, X2, [X8 + 0x188]
	0x03DC1E08 BLR X9
	0x03DC1E0C LDR X0, [X20]
	0x03DC1E10 LDR W8, [X0 + 0xE0]
	0x03DC1E14 CBNZ W8, 0x3DC1E1C
	0x03DC1E18 BL 0x1C16DFC
	0x03DC1E1C MOV X0, X19
	0x03DC1E20 LDP X20, X19, [X31 + 0x10]
	0x03DC1E24 MOV X1, X31
	0x03DC1E28 LDP X30, X21, [X31], #0x20
	0x03DC1E2C B 0x33B3E9C
	0x03DC1E30 STP X30, X23, [X31 - 0x30]!
	0x03DC1E34 STP X22, X21, [X31 + 0x10]
	0x03DC1E38 STP X20, X19, [X31 + 0x20]
	0x03DC1E3C ADRP X21, 0x627000
	0x03DC1E40 LDRB W8, [X21 + 0x128]
	0x03DC1E44 MOV W20, W1
	0x03DC1E48 MOV X19, X0
	0x03DC1E4C TBNZ X8, 0x0, 0x3DC1E88
	0x03DC1E50 ADRP X0, 0x332000
	0x03DC1E54 LDR X0, [X0 + 0x598]
	0x03DC1E58 BL 0x1C16CF4
	0x03DC1E5C ADRP X0, 0x35A000
	0x03DC1E60 LDR X0, [X0 + 0x620]
	0x03DC1E64 BL 0x1C16CF4
	0x03DC1E68 ADRP X0, 0x3A1000
	0x03DC1E6C LDR X0, [X0 + 0x6B0]
	0x03DC1E70 BL 0x1C16CF4
	0x03DC1E74 ADRP X0, 0x35C000
	0x03DC1E78 LDR X0, [X0 + 0x240]
	0x03DC1E7C BL 0x1C16CF4
	0x03DC1E80 MOVZ W8, 0x1
	0x03DC1E84 STRB W8, [X21 + 0x128]
	0x03DC1E88 LDRB W8, [X19 + 0x58]
	0x03DC1E8C CBNZ W8, 0x3DC1FF8
	0x03DC1E90 TBZ X20, 0x0, 0x3DC1FF0
	0x03DC1E94 ADRP X8, 0x332000
	0x03DC1E98 LDR X8, [X8 + 0x598]
	0x03DC1E9C LDR X20, [X19 + 0x18]
	0x03DC1EA0 LDR X0, [X8]
	0x03DC1EA4 LDR W8, [X0 + 0xE0]
	0x03DC1EA8 CBNZ W8, 0x3DC1EB0
	0x03DC1EAC BL 0x1C16DFC
	0x03DC1EB0 MOV X0, X20
	0x03DC1EB4 MOV X1, X31
	0x03DC1EB8 MOV X2, X31
	0x03DC1EBC BL 0x3C354F8
	0x03DC1EC0 TBZ X0, 0x0, 0x3DC1EF0
	0x03DC1EC4 ADRP X8, 0x35C000
	0x03DC1EC8 LDR X8, [X8 + 0x240]
	0x03DC1ECC LDR X20, [X19 + 0x18]
	0x03DC1ED0 LDR X0, [X8]
	0x03DC1ED4 LDR W8, [X0 + 0xE0]
	0x03DC1ED8 CBNZ W8, 0x3DC1EE0
	0x03DC1EDC BL 0x1C16DFC
	0x03DC1EE0 MOV X0, X20
	0x03DC1EE4 MOV X1, X31
	0x03DC1EE8 BL 0x3DE1000
	0x03DC1EEC STR X31, [X19 + 0x18]
	0x03DC1EF0 LDR X8, [X19 + 0x40]
	0x03DC1EF4 CBZ X8, 0x3DC1EFC
	0x03DC1EF8 STR X31, [X19 + 0x40]
	0x03DC1EFC LDR X0, [X19 + 0x48]
	0x03DC1F00 CBZ X0, 0x3DC1F10
	0x03DC1F04 MOV X1, X31
	0x03DC1F08 BL 0x3D284BC
	0x03DC1F0C STR X31, [X19 + 0x48]
	0x03DC1F10 ADRP X20, 0x35A000
	0x03DC1F14 LDR X20, [X20 + 0x620]
	0x03DC1F18 LDR W21, [X19 + 0x10]
	0x03DC1F1C LDR X0, [X20]
	0x03DC1F20 LDR W8, [X0 + 0xE0]
	0x03DC1F24 CBNZ W8, 0x3DC1F30
	0x03DC1F28 BL 0x1C16DFC
	0x03DC1F2C LDR X0, [X20]
	0x03DC1F30 LDR X8, [X0 + 0xB8]
	0x03DC1F34 ADRP X23, 0x626000
	0x03DC1F38 LDRB W9, [X23 + 0xB58]
	0x03DC1F3C LDR W22, [X8]
	0x03DC1F40 CBNZ W9, 0x3DC1F58
	0x03DC1F44 MOV X0, X20
	0x03DC1F48 BL 0x1C16CF4
	0x03DC1F4C LDR X0, [X20]
	0x03DC1F50 MOVZ W8, 0x1
	0x03DC1F54 STRB W8, [X23 + 0xB58]
	0x03DC1F58 LDR W8, [X0 + 0xE0]
	0x03DC1F5C CBNZ W8, 0x3DC1F64
	0x03DC1F60 BL 0x1C16DFC
	0x03DC1F64 CMP W21, W22
	0x03DC1F68 B.EQ 0x3DC1FF0
	0x03DC1F6C ADRP X21, 0x3A1000
	0x03DC1F70 LDR X21, [X21 + 0x6B0]
	0x03DC1F74 LDR X0, [X21]
	0x03DC1F78 LDR W8, [X0 + 0xE0]
	0x03DC1F7C CBNZ W8, 0x3DC1F84
	0x03DC1F80 BL 0x1C16DFC
	0x03DC1F84 ADRP X22, 0x626000
	0x03DC1F88 LDRB W8, [X22 + 0x7E5]
	0x03DC1F8C CBNZ W8, 0x3DC1FA4
	0x03DC1F90 ADRP X0, 0x3A1000
	0x03DC1F94 LDR X0, [X0 + 0x6B0]
	0x03DC1F98 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x628000
	009 Move X23, 0x35B000
	010 Move W8, [X24+278]
	011 Move X23, [X23+2032]
	012 Move W22, W3
	013 Move W21, W2
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x3A9000
	021 Move X0, [X0+200]
	022 Call 0x1C17CF4
	023 Move X0, 0x35B000
	024 Move X0, [X0+2032]
	025 Call 0x1C17CF4
	026 Move X0, 0x3A9000
	027 Move X0, [X0+216]
	028 Call 0x1C17CF4
	029 Move X0, 0x35D000
	030 Move X0, [X0+584]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+278], W8
	034 Move X0, X19
	035 Move X1, X31
	036 Call Object..ctor, X0
	037 Move X0, [X23]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 NotImplemented "Instruction CSET not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, [X0+224]
	042 NotImplemented "Instruction CSET not yet implemented."
	043 And W23, W9, W10
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X24, 0x35D000
	048 Move X24, [X24+584]
	049 Move W0, W23
	050 Move X1, X31
	051 Call Assert.IsTrue, X0
	052 Move W0, W20
	053 Move X1, X31
	054 Call Mathf.NextPowerOfTwo, X0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Move X1, X31
	058 Call Assert.IsTrue, X0
	059 Move W0, W21
	060 Move X1, X31
	061 Call Mathf.NextPowerOfTwo, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSET not yet implemented."
	064 Move X1, X31
	065 Call Assert.IsTrue, X0
	066 Move W8, W22
	067 ShiftRight W8, 31
	068 And W8, W8, 0x3FFFFFFF
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X19+64], W22
	071 Move [X19+68], W8
	072 Move [X19+16], W21
	073 Move [X19+20], W21
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CINC not yet implemented."
	076 NotImplemented "Instruction SBFM not yet implemented."
	077 Add W9, W21, 3
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 NotImplemented "Instruction SBFM not yet implemented."
	081 Add W8, W9, W8
	082 Move [X19+24], W8
	083 Move [X19+28], W20
	084 Move [X19+32], W20
	085 Move X0, [X24]
	086 Move X23, 0x3A9000
	087 Move X22, 0x3A9000
	088 Move W8, [X0+224]
	089 Move X23, [X23+216]
	090 Move X22, [X22+200]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move W0, W21
	095 Call UIRAtlasAllocator.GetLog2OfNextPower, X0
	096 Move X8, [X23]
	097 Add W1, W0, 1
	098 Move X0, X8
	099 Call 0x1C17D6C
	100 Move [X19+56], X0
	101 Move X0, [X22]
	102 Move W20, W20
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 NotImplemented "Instruction BFM not yet implemented."
	108 Move X0, X31
	109 Move X1, X20
	110 Call AreaNode.Acquire, X0
	111 Move [X19+48], X0
	112 Move X0, X19
	113 Move X20, [X31+48]
	114 Move X19, [X31+56]
	115 Move X22, [X31+32]
	116 Move X21, [X31+40]
	117 Move X24, [X31+16]
	118 Move X23, [X31+24]
	119 Move X30, [X31+64]
	120 Call UIRAtlasAllocator.BuildAreas, X0
	121 Return 

Method: System.Boolean TryAllocate(System.Int32 width, System.Int32 height, out UnityEngine.RectInt location)

Disassembly:
	0x03DC212C LDR X8, [X8]
	0x03DC2130 LDR W9, [X8 + 0xE0]
	0x03DC2134 CBNZ W9, 0x3DC2140
	0x03DC2138 MOV X0, X8
	0x03DC213C BL 0x1C16DFC
	0x03DC2140 MOV W0, W23
	0x03DC2144 MOV X1, X31
	0x03DC2148 BL 0x3DE1100
	0x03DC214C CMP W25, W0
	0x03DC2150 CSEL W8, W25, W0, GT
	0x03DC2154 STR W8, [X21 + 0x50]
	0x03DC2158 ADRP X23, 0x622000
	0x03DC215C LDRB W8, [X23 + 0xD8E]
	0x03DC2160 LDR W25, [X21 + 0x54]
	0x03DC2164 CBNZ W8, 0x3DC217C
	0x03DC2168 ADRP X0, 0x331000
	0x03DC216C LDR X0, [X0 + 0x5A8]
	0x03DC2170 BL 0x1C16CF4
	0x03DC2174 MOVZ W8, 0x1
	0x03DC2178 STRB W8, [X23 + 0xD8E]
	0x03DC217C LDR X0, [X24]
	0x03DC2180 LDR W23, [X22 + 0x4]
	0x03DC2184 LDR W26, [X22 + 0xC]
	0x03DC2188 LDR W8, [X0 + 0xE0]
	0x03DC218C CBNZ W8, 0x3DC2194
	0x03DC2190 BL 0x1C16DFC
	0x03DC2194 ADD W1, W26, W23
	0x03DC2198 MOV W0, W23
	0x03DC219C MOV X2, X31
	0x03DC21A0 BL 0x337EDF0
	0x03DC21A4 MOV X1, X31
	0x03DC21A8 BL 0x3DE1100
	0x03DC21AC CMP W25, W0
	0x03DC21B0 CSEL W8, W25, W0, GT
	0x03DC21B4 STR W8, [X21 + 0x54]
	0x03DC21B8 ADRP X23, 0x622000
	0x03DC21BC LDRB W8, [X23 + 0xD8B]
	0x03DC21C0 CBNZ W8, 0x3DC21D8
	0x03DC21C4 ADRP X0, 0x331000
	0x03DC21C8 LDR X0, [X0 + 0x5A8]
	0x03DC21CC BL 0x1C16CF4
	0x03DC21D0 MOVZ W8, 0x1
	0x03DC21D4 STRB W8, [X23 + 0xD8B]
	0x03DC21D8 LDR X0, [X24]
	0x03DC21DC LDR W23, [X22]
	0x03DC21E0 LDR W25, [X22 + 0x8]
	0x03DC21E4 LDR W8, [X0 + 0xE0]
	0x03DC21E8 CBNZ W8, 0x3DC21F0
	0x03DC21EC BL 0x1C16DFC
	0x03DC21F0 ADD W1, W25, W23
	0x03DC21F4 MOV W0, W23
	0x03DC21F8 MOV X2, X31
	0x03DC21FC BL 0x337EE94
	0x03DC2200 ADRP X26, 0x622000
	0x03DC2204 LDRB W8, [X26 + 0xD8C]
	0x03DC2208 LDR W25, [X21 + 0x38]
	0x03DC220C MOV W23, W0
	0x03DC2210 CBNZ W8, 0x3DC2228
	0x03DC2214 ADRP X0, 0x331000
	0x03DC2218 LDR X0, [X0 + 0x5A8]
	0x03DC221C BL 0x1C16CF4
	0x03DC2220 MOVZ W8, 0x1
	0x03DC2224 STRB W8, [X26 + 0xD8C]
	0x03DC2228 LDR X0, [X24]
	0x03DC222C LDR W24, [X22 + 0x4]
	0x03DC2230 LDR W22, [X22 + 0xC]
	0x03DC2234 LDR W8, [X0 + 0xE0]
	0x03DC2238 CBNZ W8, 0x3DC2240
	0x03DC223C BL 0x1C16DFC
	0x03DC2240 ADD W1, W22, W24
	0x03DC2244 MOV W0, W24
	0x03DC2248 MOV X2, X31
	0x03DC224C BL 0x337EE94
	0x03DC2250 LDR X8, [X20]
	0x03DC2254 LDR W26, [X21 + 0x38]
	0x03DC2258 MOV W22, W0
	0x03DC225C MOV X0, X20
	0x03DC2260 LDP X9, X1, [X8 + 0x188]
	0x03DC2264 BLR X9
	0x03DC2268 LDR X8, [X20]
	0x03DC226C MOV W24, W0
	0x03DC2270 MOV X0, X20
	0x03DC2274 LDP X9, X1, [X8 + 0x1A8]
	0x03DC2278 BLR X9
	0x03DC227C ADD W8, W25, W23
	0x03DC2280 ADD W9, W26, W22
	0x03DC2284 STP W24, W0, [X19 + 0x8]
	0x03DC2288 STP W8, W9, [X19]
	0x03DC228C LDP X2, X3, [X19]
	0x03DC2290 MOV X0, X21
	0x03DC2294 MOV X1, X20
	0x03DC2298 BL 0x3DC22C8
	0x03DC229C MOVZ W0, 0x1
	0x03DC22A0 B 0x3DC22AC
	0x03DC22A4 MOV W0, W31
	0x03DC22A8 STP X31, X31, [X19]
	0x03DC22AC LDP X20, X19, [X31 + 0x40]
	0x03DC22B0 LDP X22, X21, [X31 + 0x30]
	0x03DC22B4 LDP X24, X23, [X31 + 0x20]
	0x03DC22B8 LDP X26, X25, [X31 + 0x10]
	0x03DC22BC LDR X30, [X31], #0x50
	0x03DC22C0 RET
	0x03DC22C4 BL 0x1C16F20
	0x03DC22C8 STP X30, X23, [X31 - 0x30]!
	0x03DC22CC STP X22, X21, [X31 + 0x10]
	0x03DC22D0 STP X20, X19, [X31 + 0x20]
	0x03DC22D4 ADRP X23, 0x626000
	0x03DC22D8 LDRB W8, [X23 + 0x12A]
	0x03DC22DC MOV X22, X3
	0x03DC22E0 MOV X19, X2
	0x03DC22E4 MOV X20, X1
	0x03DC22E8 MOV X21, X0
	0x03DC22EC TBNZ X8, 0x0, 0x3DC2310
	0x03DC22F0 ADRP X0, 0x331000
	0x03DC22F4 LDR X0, [X0 + 0xA28]
	0x03DC22F8 BL 0x1C16CF4
	0x03DC22FC ADRP X0, 0x331000
	0x03DC2300 LDR X0, [X0 + 0x598]
	0x03DC2304 BL 0x1C16CF4
	0x03DC2308 MOVZ W8, 0x1
	0x03DC230C STRB W8, [X23 + 0x12A]
	0x03DC2310 LDRB W8, [X21 + 0x58]
	0x03DC2314 CBZ W8, 0x3DC2330
	0x03DC2318 MOV X0, X21
	0x03DC231C LDP X20, X19, [X31 + 0x20]
	0x03DC2320 LDP X22, X21, [X31 + 0x10]
	0x03DC2324 MOV X1, X31
	0x03DC2328 LDP X30, X23, [X31], #0x30
	0x03DC232C B 0x3D909FC
	0x03DC2330 ADRP X8, 0x331000
	0x03DC2334 LDR X8, [X8 + 0x598]
	0x03DC2338 UBFM X23, X22, 0x20, 0x3F
	0x03DC233C LDR X0, [X8]
	0x03DC2340 LDR W8, [X0 + 0xE0]
	0x03DC2344 CBNZ W8, 0x3DC234C
	0x03DC2348 BL 0x1C16DFC
	0x03DC234C MOV X0, X20
	0x03DC2350 MOV X1, X31
	0x03DC2354 MOV X2, X31
	0x03DC2358 BL 0x3C354F8
	0x03DC235C ADRP X9, 0x331000
	0x03DC2360 LDR X9, [X9 + 0xA28]
	0x03DC2364 MOV W8, W0
	0x03DC2368 CMP W22, 0x0
	0x03DC236C LDR X0, [X9]
	0x03DC2370 CSET W9, GT
	0x03DC2374 CMP W23, 0x0
	0x03DC2378 CSET W11, GT
	0x03DC237C LDR W10, [X0 + 0xE0]
	0x03DC2380 AND W8, W9, W8, 0x0
	0x03DC2384 AND W22, W11, W8, 0x0
	0x03DC2388 CBNZ W10, 0x3DC2390
	0x03DC238C BL 0x1C16DFC
	0x03DC2390 MOV W0, W22
	0x03DC2394 MOV X1, X31
	0x03DC2398 BL 0x3C06E58
	0x03DC239C CBZ X20, 0x3DC240C
	0x03DC23A0 LDR X8, [X20]
	0x03DC23A4 LDR X21, [X21 + 0x48]
	0x03DC23A8 MOV X0, X20
	0x03DC23AC LDP X9, X1, [X8 + 0x188]
	0x03DC23B0 BLR X9
	0x03DC23B4 LDR X8, [X20]
	0x03DC23B8 MOV W22, W0
	0x03DC23BC MOV X0, X20
	0x03DC23C0 LDP X9, X1, [X8 + 0x1A8]
	0x03DC23C4 BLR X9
	0x03DC23C8 CBZ X21, 0x3DC240C
	0x03DC23CC MOV W3, W22
	0x03DC23D0 BFM X3, X0, 0x20, 0x1F
	0x03DC23D4 MOV X0, X21
	0x03DC23D8 MOV X1, X20
	0x03DC23DC MOV X4, X19
	0x03DC23E0 LDP X20, X19, [X31 + 0x20]
	0x03DC23E4 LDP X22, X21, [X31 + 0x10]
	0x03DC23E8 FMOV S0, 1
	0x03DC23EC FMOV S1, 1
	0x03DC23F0 FMOV S2, 1
	0x03DC23F4 FMOV S3, 1
	0x03DC23F8 MOVZ W5, 0x1
	0x03DC23FC MOV X2, X31
	0x03DC2400 MOV X6, X31
	0x03DC2404 LDP X30, X23, [X31], #0x30
	0x03DC2408 B 0x3D28784
	0x03DC240C BL 0x1C16F20
	0x03DC2410 SUB X31, X31, 0x80
	0x03DC2414 STP X30, X21, [X31 + 0x60]
	0x03DC2418 STP X20, X19, [X31 + 0x70]
	0x03DC241C ADRP X21, 0x626000
	0x03DC2420 LDRB W8, [X21 + 0x12B]
	0x03DC2424 MOV X19, X1
	0x03DC2428 MOV X20, X0
	0x03DC242C TBNZ X8, 0x0, 0x3DC2444
	0x03DC2430 ADRP X0, 0x331000
	0x03DC2434 LDR X0, [X0 + 0xA28]
	0x03DC2438 BL 0x1C16CF4
	0x03DC243C MOVZ W8, 0x1
	0x03DC2440 STRB W8, [X21 + 0x12B]
	0x03DC2444 LDRB W8, [X20 + 0x58]
	0x03DC2448 CBZ W8, 0x3DC2464
	0x03DC244C MOV X0, X20
	0x03DC2450 LDP X20, X19, [X31 + 0x70]
	0x03DC2454 LDP X30, X21, [X31 + 0x60]
	0x03DC2458 MOV X1, X31
	0x03DC245C ADD X31, X31, 0x80
	0x03DC2460 B 0x3D909FC
	0x03DC2464 LDR W8, [X19 + 0x8]
	0x03DC2468 CMP W8, 0x1
	0x03DC246C B.LT 0x3DC2480
	0x03DC2470 LDR W8, [X19 + 0xC]
	0x03DC2474 CMP W8, 0x0
	0x03DC2478 CSET W21, GT
	0x03DC247C B 0x3DC2484
	0x03DC2480 MOV W21, W31
	0x03DC2484 ADRP X8, 0x331000
	0x03DC2488 LDR X8, [X8 + 0xA28]
	0x03DC248C LDR X0, [X8]
	0x03DC2490 LDR W8, [X0 + 0xE0]
	0x03DC2494 CBNZ W8, 0x3DC249C
	0x03DC2498 BL 0x1C16DFC
	0x03DC249C MOV W0, W21
	0x03DC24A0 MOV X1, X31
	0x03DC24A4 BL 0x3C06E58
	0x03DC24A8 LDP V2, V0, [X19 + 0x10]
	0x03DC24AC LDR V1, [X19]
	0x03DC24B0 LDR X0, [X20 + 0x40]
	0x03DC24B4 STP V2, V0, [X31 + 0x40]
	0x03DC24B8 STR V1, [X31 + 0x3]
	0x03DC24BC CBZ X0, 0x3DC24EC
	0x03DC24C0 LDP V0, V1, [X31 + 0x30]
	0x03DC24C4 LDR V2, [X31 + 0x5]
	0x03DC24C8 ADD X1, X31, 0x0
	0x03DC24CC MOV X2, X31
	0x03DC24D0 STP V0, V1, [X31]
	0x03DC24D4 STR V2, [X31 + 0x2]
	0x03DC24D8 BL 0x3D20B1C
	0x03DC24DC LDP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x627000
	014 Move X25, 0x35C000
	015 Move W8, [X19+279]
	016 Move X25, [X25+584]
	017 Move X21, X3
	018 Move W23, W2
	019 Move W22, W1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x35A000
	026 Move X0, [X0+2032]
	027 Call 0x1C17CF4
	028 Move X0, 0x35C000
	029 Move X0, [X0+584]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+279], W8
	033 Move X0, [X25]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X25]
	039 Move X8, [X0+184]
	040 Move X1, X31
	041 Move X2, X31
	042 Move X19, [X8]
	043 Move X0, X19
	044 Call IntPtr.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {52}
	049 Move X0, X19
	050 Move X1, X31
	051 Call ProfilerUnsafeUtility.BeginSample, X0
	052 Move [X21], X31
	053 Move [X21+8], X31
	054 Move W8, [X20+72]
	055 Compare W8, 0
	056 JumpIfEqual {86}
	057 Move X24, X31
	058 Move W26, W31
	059 Move X0, X19
	060 Move X1, X31
	061 Move X2, X31
	062 Call IntPtr.op_Inequality, X0, X1
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {70}
	067 Move X0, X19
	068 Move X1, X31
	069 Call ProfilerUnsafeUtility.EndSample, X0
	070 Compare X24, 0
	071 JumpIfNotEqual {230}
	072 Move W0, W26
	073 Move X20, [X31+80]
	074 Move X19, [X31+88]
	075 Move X22, [X31+64]
	076 Move X21, [X31+72]
	077 Move X24, [X31+48]
	078 Move X23, [X31+56]
	079 Move X26, [X31+32]
	080 Move X25, [X31+40]
	081 Move X28, [X31+16]
	082 Move X27, [X31+24]
	083 Move X29, [X31+96]
	084 Move X30, [X31+104]
	085 Return X0
	086 Move W26, W31
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X24, X31
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W8, [X20+20]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W8, [X20+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, [X25]
	095 Move W8, [X20+68]
	096 Move W9, [X0+224]
	097 Subtract W8, W23, W8
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CSINC not yet implemented."
	100 Compare W9, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move W0, W24
	104 Call UIRAtlasAllocator.GetLog2OfNextPower, X0
	105 Move X8, [X20+56]
	106 Compare X8, 0
	107 JumpIfEqual {232}
	108 Move W9, [X8+24]
	109 Move W25, W0
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X29, W25
	112 Add X8, X8, X29
	113 Move X8, [X8+32]
	114 Move W9, [X20+68]
	115 Compare X8, 0
	116 JumpIfEqual {121}
	117 Move W10, [X8+24]
	118 Move W11, [X8+32]
	119 Subtract W10, W10, W11
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X27, [X20+48]
	122 Compare X27, 0
	123 JumpIfEqual {57}
	124 Move W8, 1
	125 NotImplemented "Instruction LSLV not yet implemented."
	126 Add W28, W9, W8
	127 Move X0, X20
	128 Move X1, X27
	129 Move W2, W25
	130 Move W3, W28
	131 Move W4, W22
	132 Call UIRAtlasAllocator.TryPartitionArea, X0, X1, X2, X3, X4
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {142}
	137 Move X27, [X27+40]
	138 Move X24, X31
	139 Move W26, W31
	140 Compare X27, 0
	141 JumpIfNotEqual {127}
	142 Move X8, [X20+56]
	143 Compare X8, 0
	144 JumpIfEqual {234}
	145 Move W9, [X8+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Add X8, X8, X29
	148 Move X8, [X8+32]
	149 Compare X8, 0
	150 JumpIfEqual {57}
	151 Move W9, [X8+32]
	152 Move W10, [X8+16]
	153 Move W11, [X8+20]
	154 Move [X21+8], W22
	155 Move [X21+12], W23
	156 Add W9, W9, W10
	157 Move [X21], W9
	158 Move [X21+4], W11
	159 Move W9, [X8+32]
	160 Add W22, W9, W22
	161 Move [X8+32], W22
	162 Move X9, 0x35A000
	163 Move X9, [X9+2032]
	164 Move W23, [X8+24]
	165 Move X0, [X9]
	166 Move W9, [X0+224]
	167 Compare W9, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CSET not yet implemented."
	172 Move X1, X31
	173 Call Assert.IsTrue, X0
	174 Move X22, 0x623000
	175 Move W8, [X22+3469]
	176 Move W24, [X20+36]
	177 Compare W8, 0
	178 JumpIfNotEqual {184}
	179 Move X0, 0x332000
	180 Move X0, [X0+1448]
	181 Call 0x1C17CF4
	182 Move W8, 1
	183 Move [X22+3469], W8
	184 Move X23, 0x332000
	185 Move X23, [X23+1448]
	186 Move W22, [X21]
	187 Move W25, [X21+8]
	188 Move X0, [X23]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Add W1, W25, W22
	194 Move W0, W22
	195 Move X2, X31
	196 Call Math.Max, X0, X1
	197 NotImplemented "Instruction CMP not yet implemented."
	198 NotImplemented "Instruction CSEL not yet implemented."
	199 Move X1, X31
	200 Call Mathf.NextPowerOfTwo, X0
	201 Move [X20+36], W0
	202 Move X22, 0x623000
	203 Move W8, [X22+3470]
	204 Move W24, [X20+40]
	205 Compare W8, 0
	206 JumpIfNotEqual {212}
	207 Move X0, 0x332000
	208 Move X0, [X0+1448]
	209 Call 0x1C17CF4
	210 Move W8, 1
	211 Move [X22+3470], W8
	212 Move X0, [X23]
	213 Move W22, [X21+4]
	214 Move W21, [X21+12]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Add W1, W21, W22
	220 Move W0, W22
	221 Move X2, X31
	222 Call Math.Max, X0, X1
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction CSEL not yet implemented."
	225 Move X1, X31
	226 Call Mathf.NextPowerOfTwo, X0
	227 Move X24, X31
	228 Move [X20+40], W0
	229 Move W26, 1
	230 Move X0, X24
	231 Call 0x1C17F18
	232 Call 0x1C17F20
	233 Call 0x1C17F28
	234 Call 0x1C17F20
	235 Call 0x1C17F28
	236 Move X20, X0
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X0, X20
	239 Call 0x3EB2AD0
	240 Move X24, [X0]
	241 Call 0x3EB2AE0
	242 Move X24, X31
	243 Move X20, X0
	244 Move X0, X19
	245 Move X1, X31
	246 Move X2, X31
	247 Call IntPtr.op_Inequality, X0, X1
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {255}
	252 Move X0, X19
	253 Move X1, X31
	254 Call ProfilerUnsafeUtility.EndSample, X0
	255 Compare X24, 0
	256 JumpIfNotEqual {259}
	257 Move X0, X20
	258 Call 0x1D2D690
	259 Move X0, X24
	260 Call 0x1C17F18
	261 Call 0x1991590

Method: System.Boolean TryPartitionArea(UnityEngine.UIElements.UIRAtlasAllocator/AreaNode areaNode, System.Int32 rowIndex, System.Int32 rowHeight, System.Int32 minWidth)

Disassembly:
	0x03DC24E0 LDP X30, X21, [X31 + 0x60]
	0x03DC24E4 ADD X31, X31, 0x80
	0x03DC24E8 RET
	0x03DC24EC BL 0x1C16F20
	0x03DC24F0 STP X30, X19, [X31 - 0x10]!
	0x03DC24F4 LDRB W8, [X0 + 0x58]
	0x03DC24F8 MOV X19, X0
	0x03DC24FC CBZ W8, 0x3DC2510
	0x03DC2500 MOV X0, X19
	0x03DC2504 MOV X1, X31
	0x03DC2508 LDP X30, X19, [X31], #0x10
	0x03DC250C B 0x3D909FC
	0x03DC2510 MOV X0, X19
	0x03DC2514 BL 0x3DC2534
	0x03DC2518 LDR X0, [X19 + 0x48]
	0x03DC251C CBZ X0, 0x3DC2530
	0x03DC2520 LDR X1, [X19 + 0x18]
	0x03DC2524 MOV X2, X31
	0x03DC2528 LDP X30, X19, [X31], #0x10
	0x03DC252C B 0x3D2915C
	0x03DC2530 BL 0x1C16F20
	0x03DC2534 SUB X31, X31, 0x40
	0x03DC2538 STP X30, X23, [X31 + 0x10]
	0x03DC253C STP X22, X21, [X31 + 0x20]
	0x03DC2540 STP X20, X19, [X31 + 0x30]
	0x03DC2544 ADRP X20, 0x626000
	0x03DC2548 ADRP X21, 0x331000
	0x03DC254C LDRB W8, [X20 + 0x12C]
	0x03DC2550 LDR X21, [X21 + 0x598]
	0x03DC2554 MOV X19, X0
	0x03DC2558 TBNZ X8, 0x0, 0x3DC25AC
	0x03DC255C ADRP X0, 0x331000
	0x03DC2560 LDR X0, [X0 + 0xA28]
	0x03DC2564 BL 0x1C16CF4
	0x03DC2568 ADRP X0, 0x331000
	0x03DC256C LDR X0, [X0 + 0x758]
	0x03DC2570 BL 0x1C16CF4
	0x03DC2574 ADRP X0, 0x331000
	0x03DC2578 LDR X0, [X0 + 0x9D0]
	0x03DC257C BL 0x1C16CF4
	0x03DC2580 ADRP X0, 0x331000
	0x03DC2584 LDR X0, [X0 + 0x598]
	0x03DC2588 BL 0x1C16CF4
	0x03DC258C ADRP X0, 0x35B000
	0x03DC2590 LDR X0, [X0 + 0x240]
	0x03DC2594 BL 0x1C16CF4
	0x03DC2598 ADRP X0, 0x3A7000
	0x03DC259C LDR X0, [X0 + 0x158]
	0x03DC25A0 BL 0x1C16CF4
	0x03DC25A4 MOVZ W8, 0x1
	0x03DC25A8 STRB W8, [X20 + 0x12C]
	0x03DC25AC LDR X0, [X21]
	0x03DC25B0 LDR X20, [X19 + 0x18]
	0x03DC25B4 LDR W8, [X0 + 0xE0]
	0x03DC25B8 CBNZ W8, 0x3DC25C0
	0x03DC25BC BL 0x1C16DFC
	0x03DC25C0 MOV X0, X20
	0x03DC25C4 MOV X1, X31
	0x03DC25C8 MOV X2, X31
	0x03DC25CC BL 0x3C3883C
	0x03DC25D0 TBZ X0, 0x0, 0x3DC25E4
	0x03DC25D4 MOV X0, X19
	0x03DC25D8 BL 0x3DC28A0
	0x03DC25DC MOV X20, X0
	0x03DC25E0 B 0x3DC2874
	0x03DC25E4 LDR X0, [X19 + 0x18]
	0x03DC25E8 CBZ X0, 0x3DC288C
	0x03DC25EC LDR X8, [X0]
	0x03DC25F0 LDP X9, X1, [X8 + 0x188]
	0x03DC25F4 BLR X9
	0x03DC25F8 LDR W8, [X19 + 0x50]
	0x03DC25FC CMP W0, W8
	0x03DC2600 B.NE 0x3DC2624
	0x03DC2604 LDR X0, [X19 + 0x18]
	0x03DC2608 CBZ X0, 0x3DC288C
	0x03DC260C LDR X8, [X0]
	0x03DC2610 LDP X9, X1, [X8 + 0x1A8]
	0x03DC2614 BLR X9
	0x03DC2618 LDR W8, [X19 + 0x54]
	0x03DC261C CMP W0, W8
	0x03DC2620 B.EQ 0x3DC2878
	0x03DC2624 MOV X0, X19
	0x03DC2628 BL 0x3DC28A0
	0x03DC262C LDR X8, [X21]
	0x03DC2630 MOV X20, X0
	0x03DC2634 LDR W9, [X8 + 0xE0]
	0x03DC2638 CBNZ W9, 0x3DC2644
	0x03DC263C MOV X0, X8
	0x03DC2640 BL 0x1C16DFC
	0x03DC2644 MOV X0, X20
	0x03DC2648 MOV X1, X31
	0x03DC264C MOV X2, X31
	0x03DC2650 BL 0x3C3883C
	0x03DC2654 TBZ X0, 0x0, 0x3DC27D8
	0x03DC2658 ADRP X8, 0x331000
	0x03DC265C LDR X8, [X8 + 0x9D0]
	0x03DC2660 MOVZ W1, 0x4
	0x03DC2664 LDR X0, [X8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X23, 0x627000
	014 Move W8, [X23+280]
	015 Move W24, W4
	016 Move W21, W3
	017 Move W22, W2
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x3A8000
	025 Move X0, [X0+184]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+280], W8
	029 Compare X19, 0
	030 JumpIfEqual {116}
	031 Move W23, [X19+24]
	032 Move W0, W31
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W27, [X19+28]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X8, [X20+56]
	037 Compare X8, 0
	038 JumpIfEqual {116}
	039 Move W9, [X8+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X28, W22
	042 Add X8, X8, X28
	043 Move X0, [X8+32]
	044 Move W24, [X19+16]
	045 Move W25, [X19+20]
	046 Compare X0, 0
	047 JumpIfEqual {49}
	048 Call Row.Release, X0
	049 Move X8, 0x3A8000
	050 Move X8, [X8+184]
	051 Move X0, [X8]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move W0, W24
	057 Move W1, W25
	058 Move W2, W23
	059 Move W3, W21
	060 Call Row.Acquire, X0, X1, X2, X3
	061 Move X29, [X20+56]
	062 Compare X29, 0
	063 JumpIfEqual {116}
	064 Move X26, X0
	065 Compare X0, 0
	066 JumpIfEqual {73}
	067 Move X8, [X29]
	068 Move X0, X26
	069 Move X1, [X8+64]
	070 Call 0x1C17E00
	071 Compare X0, 0
	072 JumpIfEqual {118}
	073 Move W8, [X29+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X9, X29, X28
	076 Subtract W8, W27, W21
	077 Move [X9+32], X26
	078 Add W9, W25, W21
	079 Move [X19+24], W23
	080 Move [X19+28], W8
	081 Move [X19+16], W24
	082 Move [X19+20], W9
	083 Move X8, [X20+48]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X8, [X19+40]
	086 Move [X20+48], X8
	087 Move X8, X19
	088 Add X8, X8, 32
	089 Move X9, [X8]
	090 Compare X9, 0
	091 JumpIfEqual {94}
	092 Move X10, [X19+40]
	093 Move [X9+40], X10
	094 Move X10, [X19+40]
	095 Compare X10, 0
	096 JumpIfEqual {98}
	097 Move [X10+32], X9
	098 Move X0, X19
	099 Move [X8], X31
	100 Move [X8+8], X31
	101 Call AreaNode.Release, X0
	102 Move W0, 1
	103 Move X20, [X31+80]
	104 Move X19, [X31+88]
	105 Move X22, [X31+64]
	106 Move X21, [X31+72]
	107 Move X24, [X31+48]
	108 Move X23, [X31+56]
	109 Move X26, [X31+32]
	110 Move X25, [X31+40]
	111 Move X28, [X31+16]
	112 Move X27, [X31+24]
	113 Move X29, [X31+96]
	114 Move X30, [X31+104]
	115 Return X0
	116 Call 0x1C17F20
	117 Call 0x1C17F28
	118 Call 0x1C17F44
	119 Move X1, X31
	120 Call 0x1C17DEC

Method: System.Void BuildAreas()

Disassembly:
	0x03DC2034 MOV X21, X0
	0x03DC2038 TBNZ X8, 0x0, 0x3DC2050
	0x03DC203C ADRP X0, 0x35B000
	0x03DC2040 LDR X0, [X0 + 0x240]
	0x03DC2044 BL 0x1C16CF4
	0x03DC2048 MOVZ W8, 0x1
	0x03DC204C STRB W8, [X23 + 0x129]
	0x03DC2050 LDRB W8, [X21 + 0x58]
	0x03DC2054 CBZ W8, 0x3DC2078
	0x03DC2058 MOV X0, X21
	0x03DC205C MOV X1, X31
	0x03DC2060 BL 0x3D909FC
	0x03DC2064 MOVI V0.2D, 0x0
	0x03DC2068 MOV W0, W31
	0x03DC206C STP V0, V0, [X22 + 0x10]
	0x03DC2070 STR V0, [X22]
	0x03DC2074 B 0x3DC22A8
	0x03DC2078 CBZ X20, 0x3DC22C4
	0x03DC207C LDR X8, [X20]
	0x03DC2080 LDR X23, [X21 + 0x40]
	0x03DC2084 MOV X0, X20
	0x03DC2088 LDP X9, X1, [X8 + 0x188]
	0x03DC208C BLR X9
	0x03DC2090 LDR X8, [X20]
	0x03DC2094 LDR W25, [X21 + 0x3C]
	0x03DC2098 MOV W24, W0
	0x03DC209C MOV X0, X20
	0x03DC20A0 LDP X9, X1, [X8 + 0x1A8]
	0x03DC20A4 BLR X9
	0x03DC20A8 CBZ X23, 0x3DC22C4
	0x03DC20AC LDR W8, [X21 + 0x3C]
	0x03DC20B0 ADD W1, W25, W24
	0x03DC20B4 MOV X3, X22
	0x03DC20B8 MOV X4, X31
	0x03DC20BC ADD W2, W8, W0
	0x03DC20C0 MOV X0, X23
	0x03DC20C4 BL 0x3D20560
	0x03DC20C8 TBZ X0, 0x0, 0x3DC22A4
	0x03DC20CC ADRP X23, 0x622000
	0x03DC20D0 LDRB W8, [X23 + 0xD8D]
	0x03DC20D4 LDR W25, [X21 + 0x50]
	0x03DC20D8 CBNZ W8, 0x3DC20F0
	0x03DC20DC ADRP X0, 0x331000
	0x03DC20E0 LDR X0, [X0 + 0x5A8]
	0x03DC20E4 BL 0x1C16CF4
	0x03DC20E8 MOVZ W8, 0x1
	0x03DC20EC STRB W8, [X23 + 0xD8D]
	0x03DC20F0 ADRP X24, 0x331000
	0x03DC20F4 LDR X24, [X24 + 0x5A8]
	0x03DC20F8 LDR W23, [X22]
	0x03DC20FC LDR W26, [X22 + 0x8]
	0x03DC2100 LDR X0, [X24]
	0x03DC2104 LDR W8, [X0 + 0xE0]
	0x03DC2108 CBNZ W8, 0x3DC2110
	0x03DC210C BL 0x1C16DFC
	0x03DC2110 ADD W1, W26, W23
	0x03DC2114 MOV W0, W23
	0x03DC2118 MOV X2, X31
	0x03DC211C BL 0x337EDF0
	0x03DC2120 ADRP X8, 0x35B000
	0x03DC2124 LDR X8, [X8 + 0x240]
	0x03DC2128 MOV W23, W0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x627000
	010 Move W8, [X20+281]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x3A8000
	017 Move X0, [X0+200]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+281], W8
	021 Move W9, [X19+16]
	022 Move W8, [X19+28]
	023 Move W24, [X19+32]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X23, 0x3A8000
	027 Move X20, [X19+48]
	028 Move X23, [X23+200]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W10, W24
	031 ShiftRight W10, 31
	032 And W10, W10, 0x3FFFFFFF
	033 Move W9, W31
	034 Move [X19+32], W10
	035 Move W25, W24
	036 Move W9, W8
	037 ShiftRight W9, 31
	038 And W9, W9, 0x3FFFFFFF
	039 Move W25, W31
	040 Move [X19+28], W9
	041 Move W9, W8
	042 Move X0, [X23]
	043 Move W21, W8
	044 Move W22, W9
	045 Move W10, [X0+224]
	046 Compare W10, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 NotImplemented "Instruction BFM not yet implemented."
	050 NotImplemented "Instruction BFM not yet implemented."
	051 Move X0, X22
	052 Move X1, X21
	053 Call AreaNode.Acquire, X0
	054 Compare X0, 0
	055 JumpIfEqual {75}
	056 Move X1, X20
	057 Move X21, X0
	058 Call AreaNode.AddAfter, X0, X1
	059 Move W9, [X19+16]
	060 Move W8, [X19+28]
	061 Move W24, [X19+32]
	062 Move X20, X21
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X20, X21
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X24, [X31+16]
	071 Move X23, [X31+24]
	072 Move X30, [X31+64]
	073 Move X25, [X31+72]
	074 Return 
	075 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03DC27E8 MOV X0, X21
	0x03DC27EC LDP X9, X1, [X8 + 0x188]
	0x03DC27F0 BLR X9
	0x03DC27F4 LDR X8, [X19 + 0x18]
	0x03DC27F8 CBZ X8, 0x3DC288C
	0x03DC27FC LDR X9, [X8]
	0x03DC2800 MOV W23, W0
	0x03DC2804 MOV X0, X8
	0x03DC2808 LDP X10, X1, [X9 + 0x1A8]
	0x03DC280C BLR X10
	0x03DC2810 CBZ X22, 0x3DC288C
	0x03DC2814 MOV W4, W23
	0x03DC2818 BFM X4, X0, 0x20, 0x1F
	0x03DC281C FMOV S0, 1
	0x03DC2820 FMOV S1, 1
	0x03DC2824 FMOV S2, 1
	0x03DC2828 FMOV S3, 1
	0x03DC282C MOV X0, X22
	0x03DC2830 MOV X1, X20
	0x03DC2834 MOV X2, X21
	0x03DC2838 MOV X3, X31
	0x03DC283C MOV X5, X31
	0x03DC2840 MOV W6, W31
	0x03DC2844 MOV X7, X31
	0x03DC2848 BL 0x3D288D0
	0x03DC284C ADRP X8, 0x35B000
	0x03DC2850 LDR X8, [X8 + 0x240]
	0x03DC2854 LDR X21, [X19 + 0x18]
	0x03DC2858 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x627000
	006 Move X21, 0x3A8000
	007 Move X19, 0x35C000
	008 Move W8, [X20+282]
	009 Move X21, [X21+248]
	010 Move X19, [X19+584]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x35C000
	016 Move X0, [X0+584]
	017 Call 0x1C17CF4
	018 Move X0, 0x3A8000
	019 Move X0, [X0+248]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+282], W8
	023 Move X0, [X21]
	024 Move W1, 1
	025 Move W2, W31
	026 Move W3, W31
	027 Move X4, X31
	028 Call ProfilerUnsafeUtility.CreateMarker, X0, X1, X2, X3
	029 Move X8, [X19]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X8, [X8+184]
	033 Move [X8], X0
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 

