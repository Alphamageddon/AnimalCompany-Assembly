Type: UnityEngine.UIElements.UxmlAsset

Method: System.String get_fullTypeName()

Disassembly:
	0x03E1DE24 CBNZ X20, 0x3E1DE50
	0x03E1DE28 ADRP X8, 0x2D7000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Int32 get_id()

Disassembly:
	0x03E1DE2C LDR X8, [X8 + 0x1D0]
	0x03E1DE30 LDR X0, [X8]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Int32 get_orderInDocument()

Disassembly:
	0x03E1DE34 BL 0x1C16F10
	0x03E1DE38 ADRP X8, 0x2D7000

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.Int32 get_parentId()

Disassembly:
	0x03E1DE3C LDR X8, [X8 + 0x1C0]
	0x03E1DE40 MOV X20, X0

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Boolean TryGetAttributeValue(System.String propertyName, out System.String value)

Disassembly:
	0x03E1DE44 LDR X1, [X8]
	0x03E1DE48 BL 0x301B7C4
	0x03E1DE4C STR X20, [X19 + 0x58]
	0x03E1DE50 MOV X0, X20
	0x03E1DE54 LDP X20, X19, [X31 + 0x10]
	0x03E1DE58 LDR X30, [X31], #0x20
	0x03E1DE5C RET
	0x03E1DE60 LDR X8, [X0 + 0x58]
	0x03E1DE64 CMP X8, 0x0
	0x03E1DE68 CSET W0, NE
	0x03E1DE6C RET
	0x03E1DE70 STR X30, [X31 - 0x20]!
	0x03E1DE74 STP X20, X19, [X31 + 0x10]
	0x03E1DE78 ADRP X20, 0x5CB000
	0x03E1DE7C LDRB W8, [X20 + 0x42E]
	0x03E1DE80 MOV X19, X0
	0x03E1DE84 TBNZ X8, 0x0, 0x3E1DEA8
	0x03E1DE88 ADRP X0, 0x347000
	0x03E1DE8C LDR X0, [X0 + 0x110]
	0x03E1DE90 BL 0x1C16CF4
	0x03E1DE94 ADRP X0, 0x347000
	0x03E1DE98 LDR X0, [X0 + 0x118]
	0x03E1DE9C BL 0x1C16CF4
	0x03E1DEA0 MOVZ W8, 0x1
	0x03E1DEA4 STRB W8, [X20 + 0x42E]
	0x03E1DEA8 LDR X20, [X19 + 0x60]
	0x03E1DEAC CBNZ X20, 0x3E1DED8
	0x03E1DEB0 ADRP X8, 0x347000
	0x03E1DEB4 LDR X8, [X8 + 0x118]
	0x03E1DEB8 LDR X0, [X8]
	0x03E1DEBC BL 0x1C16F10
	0x03E1DEC0 ADRP X8, 0x347000
	0x03E1DEC4 LDR X8, [X8 + 0x110]
	0x03E1DEC8 MOV X20, X0
	0x03E1DECC LDR X1, [X8]
	0x03E1DED0 BL 0x301B7C4
	0x03E1DED4 STR X20, [X19 + 0x60]
	0x03E1DED8 MOV X0, X20
	0x03E1DEDC LDP X20, X19, [X31 + 0x10]
	0x03E1DEE0 LDR X30, [X31], #0x20
	0x03E1DEE4 RET
	0x03E1DEE8 LDR X8, [X0 + 0x60]
	0x03E1DEEC CMP X8, 0x0
	0x03E1DEF0 CSET W0, NE
	0x03E1DEF4 RET
	0x03E1DEF8 LDRB W0, [X0 + 0x68]
	0x03E1DEFC RET
	0x03E1DF00 RET
	0x03E1DF04 SUB X31, X31, 0x40
	0x03E1DF08 STP X30, X21, [X31 + 0x20]
	0x03E1DF0C STP X20, X19, [X31 + 0x30]
	0x03E1DF10 ADRP X20, 0x5CB000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5CC000
	008 Move W8, [X22+1059]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x2D8000
	017 Move X0, [X0+456]
	018 Call 0x1C17CF4
	019 Move X0, 0x2FF000
	020 Move X0, [X0+2904]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1059], W8
	024 Move X0, [X21+40]
	025 Compare X0, 0
	026 JumpIfEqual {49}
	027 Move X23, 0x2FF000
	028 Move X23, [X23+2904]
	029 Move W22, 1
	030 Move W8, [X0+24]
	031 Subtract W1, W22, 1
	032 Subtract W8, W8, 1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X2, [X23]
	035 Call List`1<Object>.get_Item, X0, X1
	036 Move X1, X20
	037 Move X2, X31
	038 Call String.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {50}
	043 Move X0, [X21+40]
	044 Add W22, W22, 2
	045 Compare X0, 0
	046 JumpIfNotEqual {30}
	047 Call 0x1C17F20
	048 Move X0, X31
	049 Move W8, W31
	050 Move X0, [X21+40]
	051 Compare X0, 0
	052 JumpIfEqual {47}
	053 Move X2, [X23]
	054 Move W1, W22
	055 Call List`1<Object>.get_Item, X0, X1
	056 Move W8, 1
	057 Move [X19], X0
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move W0, W8
	063 Move X30, [X31+48]
	064 Move X23, [X31+56]
	065 Return X0

Method: System.Void SetAttribute(System.String name, System.String value)

Disassembly:
	0x03E1DF14 LDRB W8, [X20 + 0x42F]

ISIL:
No ISIL was generated
Method: System.Void SetOrAddProperty(System.String propertyName, System.String propertyValue)

Disassembly:
	0x03E1DF18 MOV X19, X0
	0x03E1DF1C TBNZ X8, 0x0, 0x3E1DF70
	0x03E1DF20 ADRP X0, 0x2DF000
	0x03E1DF24 LDR X0, [X0 + 0x110]
	0x03E1DF28 BL 0x1C16CF4
	0x03E1DF2C ADRP X0, 0x34D000
	0x03E1DF30 LDR X0, [X0 + 0xB78]
	0x03E1DF34 BL 0x1C16CF4
	0x03E1DF38 ADRP X0, 0x34C000
	0x03E1DF3C LDR X0, [X0 + 0xB20]
	0x03E1DF40 BL 0x1C16CF4
	0x03E1DF44 ADRP X0, 0x329000
	0x03E1DF48 LDR X0, [X0 + 0x3E0]
	0x03E1DF4C BL 0x1C16CF4
	0x03E1DF50 ADRP X0, 0x2DE000
	0x03E1DF54 LDR X0, [X0 + 0x588]
	0x03E1DF58 BL 0x1C16CF4
	0x03E1DF5C ADRP X0, 0x34C000
	0x03E1DF60 LDR X0, [X0 + 0xB78]
	0x03E1DF64 BL 0x1C16CF4
	0x03E1DF68 MOVZ W8, 0x1
	0x03E1DF6C STRB W8, [X20 + 0x42F]
	0x03E1DF70 LDR X0, [X19 + 0x30]
	0x03E1DF74 ADRP X20, 0x2DF000
	0x03E1DF78 LDR X20, [X20 + 0x110]
	0x03E1DF7C MOV X1, X31
	0x03E1DF80 BL 0x32277A8
	0x03E1DF84 TBNZ X0, 0x0, 0x3E1DFB8
	0x03E1DF88 LDR X0, [X19 + 0x28]
	0x03E1DF8C CBZ X0, 0x3E1E088
	0x03E1DF90 ADRP X21, 0x2DE000
	0x03E1DF94 LDR X21, [X21 + 0x588]
	0x03E1DF98 LDR X2, [X20]
	0x03E1DF9C LDR X1, [X21]
	0x03E1DFA0 BL 0x301C318
	0x03E1DFA4 TBNZ X0, 0x0, 0x3E1DFB8
	0x03E1DFA8 LDR X2, [X19 + 0x30]
	0x03E1DFAC LDR X1, [X21]
	0x03E1DFB0 MOV X0, X19
	0x03E1DFB4 BL 0x3E1CF18
	0x03E1DFB8 LDR X0, [X19 + 0x40]
	0x03E1DFBC MOV X1, X31
	0x03E1DFC0 BL 0x32277A8
	0x03E1DFC4 TBNZ X0, 0x0, 0x3E1DFF8
	0x03E1DFC8 LDR X0, [X19 + 0x28]
	0x03E1DFCC CBZ X0, 0x3E1E088
	0x03E1DFD0 ADRP X21, 0x329000
	0x03E1DFD4 LDR X21, [X21 + 0x3E0]
	0x03E1DFD8 LDR X2, [X20]
	0x03E1DFDC LDR X1, [X21]
	0x03E1DFE0 BL 0x301C318
	0x03E1DFE4 TBNZ X0, 0x0, 0x3E1DFF8
	0x03E1DFE8 LDR X2, [X19 + 0x40]
	0x03E1DFEC LDR X1, [X21]
	0x03E1DFF0 MOV X0, X19
	0x03E1DFF4 BL 0x3E1CF18
	0x03E1DFF8 LDR W8, [X19 + 0x48]
	0x03E1DFFC CBZ W8, 0x3E1E078
	0x03E1E000 LDR X0, [X19 + 0x28]
	0x03E1E004 CBZ X0, 0x3E1E088
	0x03E1E008 ADRP X21, 0x34B000
	0x03E1E00C LDR X21, [X21 + 0xB20]
	0x03E1E010 LDR X2, [X20]
	0x03E1E014 LDR X1, [X21]
	0x03E1E018 BL 0x301C318
	0x03E1E01C TBNZ X0, 0x0, 0x3E1E078
	0x03E1E020 LDR X0, [X19 + 0x28]
	0x03E1E024 CBZ X0, 0x3E1E088
	0x03E1E028 ADRP X8, 0x34B000
	0x03E1E02C LDR X8, [X8 + 0xB78]
	0x03E1E030 LDR X2, [X20]
	0x03E1E034 LDR X1, [X8]
	0x03E1E038 BL 0x301C318
	0x03E1E03C TBNZ X0, 0x0, 0x3E1E078
	0x03E1E040 ADRP X8, 0x34C000
	0x03E1E044 LDR X8, [X8 + 0xB78]
	0x03E1E048 MOVN X9, 0x0
	0x03E1E04C ADD X0, X31, 0x8
	0x03E1E050 MOV X1, X31
	0x03E1E054 LDR X8, [X8]
	0x03E1E058 STP X8, X9, [X31 + 0x8]
	0x03E1E05C LDR W8, [X19 + 0x48]
	0x03E1E060 STR W8, [X31 + 0x18]
	0x03E1E064 BL 0x33B162C
	0x03E1E068 LDR X1, [X21]
	0x03E1E06C MOV X2, X0
	0x03E1E070 MOV X0, X19
	0x03E1E074 BL 0x3E1CF18
	0x03E1E078 LDP X20, X19, [X31 + 0x30]
	0x03E1E07C LDP X30, X21, [X31 + 0x20]
	0x03E1E080 ADD X31, X31, 0x40
	0x03E1E084 RET
	0x03E1E088 BL 0x1C16F20
	0x03E1E08C STR X30, [X31 - 0x30]!
	0x03E1E090 STP X22, X21, [X31 + 0x10]
	0x03E1E094 STP X20, X19, [X31 + 0x20]
	0x03E1E098 ADRP X21, 0x5CA000
	0x03E1E09C ADRP X22, 0x2D5000
	0x03E1E0A0 LDRB W8, [X21 + 0x430]
	0x03E1E0A4 LDR X22, [X22 + 0x6C0]
	0x03E1E0A8 MOV X20, X1
	0x03E1E0AC MOV X19, X0
	0x03E1E0B0 TBNZ X8, 0x0, 0x3E1E0EC
	0x03E1E0B4 ADRP X0, 0x2D7000
	0x03E1E0B8 LDR X0, [X0 + 0x278]
	0x03E1E0BC BL 0x1C16CF4
	0x03E1E0C0 ADRP X0, 0x2D5000
	0x03E1E0C4 LDR X0, [X0 + 0x6C0]
	0x03E1E0C8 BL 0x1C16CF4
	0x03E1E0CC ADRP X0, 0x2FD000
	0x03E1E0D0 LDR X0, [X0 + 0x898]
	0x03E1E0D4 BL 0x1C16CF4
	0x03E1E0D8 ADRP X0, 0x2DE000
	0x03E1E0DC LDR X0, [X0 + 0x790]
	0x03E1E0E0 BL 0x1C16CF4
	0x03E1E0E4 MOVZ W8, 0x1
	0x03E1E0E8 STRB W8, [X21 + 0x430]
	0x03E1E0EC LDR X0, [X22]
	0x03E1E0F0 LDR W8, [X0 + 0xE0]
	0x03E1E0F4 CBNZ W8, 0x3E1E0FC
	0x03E1E0F8 BL 0x1C16DFC
	0x03E1E0FC MOV X0, X19
	0x03E1E100 MOV X1, X31
	0x03E1E104 MOV X2, X31
	0x03E1E108 BL 0x3395194
	0x03E1E10C TBZ X0, 0x0, 0x3E1E134

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x5CC000
	010 Move W8, [X22+1060]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x2D8000
	019 Move X0, [X0+440]
	020 Call 0x1C17CF4
	021 Move X0, 0x2D8000
	022 Move X0, [X0+448]
	023 Call 0x1C17CF4
	024 Move X0, 0x2D8000
	025 Move X0, [X0+456]
	026 Call 0x1C17CF4
	027 Move X0, 0x2FF000
	028 Move X0, [X0+2904]
	029 Call 0x1C17CF4
	030 Move X0, 0x323000
	031 Move X0, [X0+1280]
	032 Call 0x1C17CF4
	033 Move X0, 0x2D8000
	034 Move X0, [X0+464]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+1060], W8
	038 Move X22, [X20+40]
	039 Compare X22, 0
	040 JumpIfNotEqual {53}
	041 Move X8, 0x2D8000
	042 Move X8, [X8+464]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X8, 0x2D8000
	046 Move X8, [X8+448]
	047 Move X22, X0
	048 Move X1, [X8]
	049 Call List`1<Object>..ctor, X0
	050 Move [X20+40], X22
	051 Compare X22, 0
	052 JumpIfEqual {76}
	053 Move X25, 0x2FF000
	054 Move X24, 0x2D8000
	055 Move X25, [X25+2904]
	056 Move X24, [X24+440]
	057 Move W23, 1
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Subtract W1, W23, 1
	060 Subtract W9, W8, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X2, [X25]
	063 Move X0, X22
	064 Call List`1<Object>.get_Item, X0, X1
	065 Move X1, X21
	066 Move X2, X31
	067 Call String.op_Equality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {90}
	072 Move X22, [X20+40]
	073 Add W23, W23, 2
	074 Compare X22, 0
	075 JumpIfNotEqual {58}
	076 Call 0x1C17F20
	077 Move W11, [X22+28]
	078 Move X9, [X22+16]
	079 Move X10, [X24]
	080 Add W11, W11, 1
	081 Move [X22+28], W11
	082 Compare X9, 0
	083 JumpIfEqual {76}
	084 Move W11, [X9+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add W10, W8, 1
	087 Add X8, X9, X8
	088 Move [X22+24], W10
	089 Move [X8+32], X21
	090 Move X0, [X20+40]
	091 Compare X0, 0
	092 JumpIfEqual {76}
	093 Move X8, 0x322000
	094 Move X8, [X8+1280]
	095 Move W1, W23
	096 Move X2, X19
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X3, [X8]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X30, [X31+64]
	105 Move X25, [X31+72]
	106 Call List`1<Object>.set_Item, X0, X1, X2
	107 Return 
	108 Move X8, [X10+32]
	109 Move X0, X22
	110 Move X1, X21
	111 Move X8, [X8+192]
	112 Move X2, [X8+112]
	113 Call List`1<Object>.AddWithResize, X0, X1
	114 Move X0, [X20+40]
	115 Compare X0, 0
	116 JumpIfEqual {76}
	117 Move W10, [X0+28]
	118 Move X8, [X0+16]
	119 Move X9, [X24]
	120 Add W10, W10, 1
	121 Move [X0+28], W10
	122 Compare X8, 0
	123 JumpIfEqual {76}
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Move W11, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add W9, W10, 1
	128 Add X8, X8, X10
	129 Move [X0+24], W9
	130 Move [X8+32], X19
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X22, [X31+32]
	134 Move X21, [X31+40]
	135 Move X24, [X31+16]
	136 Move X23, [X31+24]
	137 Move X30, [X31+64]
	138 Move X25, [X31+72]
	139 Return 
	140 Move X8, [X9+32]
	141 Move X1, X19
	142 Move X20, [X31+48]
	143 Move X19, [X31+56]
	144 Move X22, [X31+32]
	145 Move X21, [X31+40]
	146 Move X8, [X8+192]
	147 Move X24, [X31+16]
	148 Move X23, [X31+24]
	149 Move X2, [X8+112]
	150 Move X30, [X31+64]
	151 Move X25, [X31+72]
	152 Call List`1<Object>.AddWithResize, X0, X1
	153 Return 

