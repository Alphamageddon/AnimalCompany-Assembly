Type: UnityEngine.UIElements.InheritedData

Method: UnityEngine.UIElements.InheritedData Copy()

Disassembly:
	0x03DFBAB4 ADRP X8, 0x36E000
	0x03DFBAB8 LDR X8, [X8 + 0xC88]
	0x03DFBABC LDR X9, [X20]
	0x03DFBAC0 LDR X8, [X8]
	0x03DFBAC4 CMP X9, X8
	0x03DFBAC8 B.EQ 0x3DFBAD4
	0x03DFBACC MOV W0, W31

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X0
	003 Move X0, X8
	004 Move W2, 144
	005 Call 0x3EB2AC0
	006 Move X30, [X31+16]
	007 Return X0

Method: System.Void CopyFrom(ref UnityEngine.UIElements.InheritedData other)

Disassembly:
	0x03DFBAD0 B 0x3DFBB08
	0x03DFBAD4 MOV X0, X20
	0x03DFBAD8 BL 0x1C16E08
	0x03DFBADC MOV X1, X0
	0x03DFBAE0 ADD X0, X31, 0x48

ISIL:
	001 Move [X31-16], X30
	002 Move W2, 144
	003 Call 0x3EB2B30
	004 Move X30, [X31+16]
	005 Return 

Method: System.Boolean op_Equality(UnityEngine.UIElements.InheritedData lhs, UnityEngine.UIElements.InheritedData rhs)

Disassembly:
	0x03DFBAE4 MOVZ W2, 0x48
	0x03DFBAE8 BL 0x3EB1AC0
	0x03DFBAEC ADD X0, X31, 0x0
	0x03DFBAF0 MOVZ W2, 0x48
	0x03DFBAF4 MOV X1, X19
	0x03DFBAF8 BL 0x3EB1AC0
	0x03DFBAFC ADD X0, X31, 0x48
	0x03DFBB00 ADD X1, X31, 0x0
	0x03DFBB04 BL 0x3DFB914
	0x03DFBB08 LDP X20, X19, [X31 + 0xA0]
	0x03DFBB0C LDP X30, X21, [X31 + 0x90]
	0x03DFBB10 AND W0, W0, 0x1
	0x03DFBB14 ADD X31, X31, 0xB0
	0x03DFBB18 RET
	0x03DFBB1C SUB X31, X31, 0x50
	0x03DFBB20 STP X30, X25, [X31 + 0x10]
	0x03DFBB24 STP X24, X23, [X31 + 0x20]
	0x03DFBB28 STP X22, X21, [X31 + 0x30]
	0x03DFBB2C STP X20, X19, [X31 + 0x40]
	0x03DFBB30 MOV X1, X31
	0x03DFBB34 MOV X19, X0
	0x03DFBB38 BL 0x3D8D1E4
	0x03DFBB3C LDR W8, [X19 + 0x18]
	0x03DFBB40 LDUR V0, [X19 + 0x1C]
	0x03DFBB44 MOVZ W24, 0x18D
	0x03DFBB48 ADD X9, X31, 0x0
	0x03DFBB4C MUL W10, W0, W24
	0x03DFBB50 ADD X0, X31, 0x0
	0x03DFBB54 MOV X1, X31
	0x03DFBB58 ORR X20, X9, 0x7
	0x03DFBB5C ORR X21, X9, 0xF
	0x03DFBB60 ORR X22, X9, 0xF
	0x03DFBB64 EOR W25, W10, W8, 0x0
	0x03DFBB68 STR V0, [X31]
	0x03DFBB6C BL 0x338FE0C
	0x03DFBB70 MOV W23, W0
	0x03DFBB74 MOV X0, X20
	0x03DFBB78 MOV X1, X31
	0x03DFBB7C BL 0x338FE0C
	0x03DFBB80 MOV W20, W0
	0x03DFBB84 MOV X0, X21
	0x03DFBB88 MOV X1, X31
	0x03DFBB8C BL 0x338FE0C
	0x03DFBB90 MOV W21, W0
	0x03DFBB94 MOV X0, X22
	0x03DFBB98 MOV X1, X31
	0x03DFBB9C BL 0x338FE0C
	0x03DFBBA0 MUL W8, W25, W24
	0x03DFBBA4 EOR W8, W23, W8, 0x0
	0x03DFBBA8 EOR W8, W8, W20, 0x2
	0x03DFBBAC LDP W9, W10, [X19 + 0x2C]
	0x03DFBBB0 EOR W8, W8, W21, 0x2
	0x03DFBBB4 EOR W8, W8, W0, 0x1
	0x03DFBBB8 MUL W8, W8, W24
	0x03DFBBBC LDP W11, W12, [X19 + 0x34]
	0x03DFBBC0 EOR W8, W8, W9, 0x0
	0x03DFBBC4 MUL W8, W8, W24
	0x03DFBBC8 EOR W8, W8, W10, 0x0
	0x03DFBBCC MUL W8, W8, W24
	0x03DFBBD0 EOR W8, W8, W11, 0x0
	0x03DFBBD4 MUL W8, W8, W24
	0x03DFBBD8 ADD X0, X19, 0x3C
	0x03DFBBDC MOV X1, X31
	0x03DFBBE0 EOR W20, W8, W12, 0x0
	0x03DFBBE4 BL 0x338FE0C
	0x03DFBBE8 LDP W9, W10, [X19 + 0x40]
	0x03DFBBEC MUL W8, W20, W24
	0x03DFBBF0 EOR W8, W8, W0, 0x0
	0x03DFBBF4 MUL W8, W8, W24
	0x03DFBBF8 EOR W8, W8, W9, 0x0
	0x03DFBBFC MUL W8, W8, W24
	0x03DFBC00 LDP X20, X19, [X31 + 0x40]
	0x03DFBC04 LDP X22, X21, [X31 + 0x30]
	0x03DFBC08 LDP X24, X23, [X31 + 0x20]
	0x03DFBC0C LDP X30, X25, [X31 + 0x10]
	0x03DFBC10 EOR W0, W8, W10, 0x0
	0x03DFBC14 ADD X31, X31, 0x50
	0x03DFBC18 RET
	0x03DFBC1C STR X30, [X31 - 0x10]!
	0x03DFBC20 MOV X1, X0
	0x03DFBC24 MOV X0, X8
	0x03DFBC28 MOVZ W2, 0x54
	0x03DFBC2C BL 0x3EB1AC0
	0x03DFBC30 LDR X30, [X31], #0x10
	0x03DFBC34 RET
	0x03DFBC38 STR X30, [X31 - 0x10]!
	0x03DFBC3C MOVZ W2, 0x54
	0x03DFBC40 BL 0x3EB1B30
	0x03DFBC44 LDR X30, [X31], #0x10
	0x03DFBC48 RET
	0x03DFBC4C SUB X31, X31, 0x60
	0x03DFBC50 STR X30, [X31 + 0x40]
	0x03DFBC54 STP X20, X19, [X31 + 0x50]
	0x03DFBC58 LDR X8, [X0 + 0x10]
	0x03DFBC5C LDR V0, [X0]
	0x03DFBC60 MOV X19, X1
	0x03DFBC64 MOV X20, X0
	0x03DFBC68 STR X8, [X31 + 0x30]
	0x03DFBC6C STR V0, [X31 + 0x2]
	0x03DFBC70 LDR X8, [X1 + 0x10]
	0x03DFBC74 LDR V0, [X1]
	0x03DFBC78 ADD X0, X31, 0x20
	0x03DFBC7C ADD X1, X31, 0x0
	0x03DFBC80 STR X8, [X31 + 0x10]
	0x03DFBC84 STR V0, [X31]
	0x03DFBC88 BL 0x3DFBDD0
	0x03DFBC8C TBZ X0, 0x0, 0x3DFBDBC
	0x03DFBC90 LDUR V0, [X20 + 0x18]
	0x03DFBC94 LDUR V1, [X19 + 0x18]
	0x03DFBC98 FMOV X8, D0
	0x03DFBC9C FMOV X9, D1
	0x03DFBCA0 UBFM X8, X8, 0x20, 0x3F
	0x03DFBCA4 UBFM X9, X9, 0x20, 0x3F
	0x03DFBCA8 UNIMPLEMENTED
	0x03DFBCAC UNIMPLEMENTED
	0x03DFBCB0 FMOV S1, W8
	0x03DFBCB4 FMOV S3, W9
	0x03DFBCB8 ADRP X8, 0xFFFFFFFFFCCEE000
	0x03DFBCBC FSUB S1, S1, S3
	0x03DFBCC0 LDR V3, [X8 + 0xF20]
	0x03DFBCC4 FSUB V0.2S, V2.2S, V0.2S
	0x03DFBCC8 FMUL S1, S1, S1
	0x00000000 INVALID
	0x03DFBCD0 FADD S1, S0, S1
	0x03DFBCD4 MOV S0, V0.S[1]
	0x03DFBCD8 FADD S0, S0, S1
	0x03DFBCDC FCMP S0, S3
	0x03DFBCE0 B.PL 0x3DFBDBC
	0x03DFBCE4 LDR V0, [X20 + 0x28]
	0x03DFBCE8 LDR V1, [X19 + 0x28]
	0x03DFBCEC MOV W0, W31
	0x03DFBCF0 FCMP S0, S1
	0x03DFBCF4 B.NE 0x3DFBDC0
	0x03DFBCF8 LDR W8, [X20 + 0x2C]
	0x03DFBCFC LDR W9, [X19 + 0x2C]
	0x03DFBD00 CMP W8, W9
	0x03DFBD04 B.NE 0x3DFBDC0
	0x03DFBD08 LDR X8, [X20 + 0x30]
	0x03DFBD0C LDR X9, [X19 + 0x30]
	0x03DFBD10 MOV W0, W31
	0x03DFBD14 FMOV S0, W8
	0x03DFBD18 FMOV S1, W9
	0x03DFBD1C FCMP S0, S1
	0x03DFBD20 B.NE 0x3DFBDC0
	0x03DFBD24 UBFM X8, X8, 0x20, 0x3F
	0x03DFBD28 UBFM X9, X9, 0x20, 0x3F

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+352], D8
	003 Move [X31+368], X29
	004 Move [X31+376], X30
	005 Move [X31+384], X22
	006 Move [X31+392], X21
	007 Move [X31+400], X20
	008 Move [X31+408], X19
	009 Move X21, 0x5EE000
	010 Move W8, [X21+682]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x2F9000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+682], W8
	022 Move D0, [X19]
	023 Move D3, [X19+8]
	024 Move D1, [X20]
	025 Move D2, [X20+8]
	026 Move X8, -53547008
	027 Move V8, [X8+3872]
	028 Subtract V0, V1, V0
	029 NotImplemented "Instruction INVALID not yet implemented."
	030 Subtract V1, V2, V3
	031 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	032 NotImplemented "Instruction INVALID not yet implemented."
	033 Add V0, V0, V2
	034 Add V0, V1, V0
	035 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	036 Add V0, V1, V0
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move V0, [X20+16]
	039 Move V1, [X19+16]
	040 Move W0, W31
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 Move W8, [X20+20]
	043 Move W9, [X19+20]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move V0, [X20+24]
	046 Move V1, [X19+24]
	047 Move W0, W31
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 Move W8, [X20+28]
	050 Move W9, [X19+28]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X0, X31, 208
	053 Move W2, 144
	054 Move X1, X20
	055 Call 0x3EB2AC0
	056 Move V0, [X31+15]
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Add X0, X31, 64
	059 Move W2, 144
	060 Move X1, X19
	061 Move [X31+2], V0
	062 Move [X31+44], V1
	063 Call 0x3EB2AC0
	064 Move V0, [X31+6]
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 Add X0, X31, 32
	067 Add X1, X31, 0
	068 Move X2, X31
	069 Move [X31], V0
	070 Move [X31+12], V1
	071 Call TextShadow.op_Equality, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {148}
	076 Move X8, 0x2F9000
	077 Move X8, [X8+1432]
	078 Move X21, [X20+64]
	079 Move X22, [X19+64]
	080 Move X0, [X8]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X21
	086 Move X1, X22
	087 Move X2, X31
	088 Call Object.op_Equality, X0, X1
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {148}
	093 Move X0, [X20+72]
	094 Move X1, [X20+80]
	095 Move X2, [X19+72]
	096 Move X3, [X19+80]
	097 Move X4, X31
	098 Call FontDefinition.op_Equality, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {148}
	103 Move W8, [X20+88]
	104 Move W9, [X19+88]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move V0, [X20+92]
	107 Move V1, [X19+92]
	108 Move W0, W31
	109 NotImplemented "Instruction FCMP not yet implemented."
	110 Move W8, [X20+96]
	111 Move W9, [X19+96]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W8, [X20+100]
	114 Move W9, [X19+100]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move D0, [X20+104]
	117 Move D1, [X20+112]
	118 Move D2, [X19+104]
	119 Move D3, [X19+112]
	120 Subtract V0, V0, V2
	121 NotImplemented "Instruction INVALID not yet implemented."
	122 Subtract V1, V1, V3
	123 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	124 NotImplemented "Instruction INVALID not yet implemented."
	125 Add V0, V0, V2
	126 Add V0, V1, V0
	127 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	128 Add V0, V1, V0
	129 NotImplemented "Instruction FCMP not yet implemented."
	130 Move V0, [X20+120]
	131 Move V1, [X19+120]
	132 NotImplemented "Instruction FCMP not yet implemented."
	133 Move W8, [X20+124]
	134 Move W9, [X19+124]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move W8, [X20+128]
	137 Move W9, [X19+128]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move V0, [X20+132]
	140 Move V1, [X19+132]
	141 Move W8, [X20+136]
	142 Move W9, [X19+136]
	143 NotImplemented "Instruction FCMP not yet implemented."
	144 NotImplemented "Instruction CSET not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction CSET not yet implemented."
	147 And W0, W10, W8
	148 Move W0, W31
	149 Move X20, [X31+400]
	150 Move X19, [X31+408]
	151 Move X22, [X31+384]
	152 Move X21, [X31+392]
	153 Move X29, [X31+368]
	154 Move X30, [X31+376]
	155 Move V8, [X31+352]
	156 Add X31, X31, 416
	157 Return X0

Method: System.Boolean Equals(UnityEngine.UIElements.InheritedData other)

Disassembly:
	0x03DFBD54 B.NE 0x3DFBDC0
	0x03DFBD58 LDR W8, [X20 + 0x40]
	0x03DFBD5C LDR W9, [X19 + 0x40]
	0x03DFBD60 CMP W8, W9
	0x03DFBD64 B.NE 0x3DFBDC0
	0x03DFBD68 LDUR X8, [X20 + 0x44]
	0x03DFBD6C LDUR X9, [X19 + 0x44]
	0x03DFBD70 MOV W0, W31
	0x03DFBD74 FMOV S0, W8
	0x03DFBD78 FMOV S1, W9
	0x03DFBD7C FCMP S0, S1
	0x03DFBD80 B.NE 0x3DFBDC0
	0x03DFBD84 UBFM X8, X8, 0x20, 0x3F
	0x03DFBD88 UBFM X9, X9, 0x20, 0x3F
	0x03DFBD8C CMP W8, W9
	0x03DFBD90 B.NE 0x3DFBDC0
	0x03DFBD94 LDR V0, [X19 + 0x4C]
	0x03DFBD98 LDR V1, [X20 + 0x4C]
	0x03DFBD9C FCMP S1, S0

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+288], X29
	003 Move [X31+304], X30
	004 Move [X31+312], X19
	005 Move X19, X0
	006 Add X0, X31, 144
	007 Move W2, 144
	008 Call 0x3EB2AC0
	009 Add X0, X31, 0
	010 Move W2, 144
	011 Move X1, X19
	012 Call 0x3EB2AC0
	013 Add X0, X31, 144
	014 Add X1, X31, 0
	015 Call InheritedData.op_Equality, X0, X1
	016 Move X30, [X31+304]
	017 Move X19, [X31+312]
	018 Move X29, [X31+288]
	019 And W0, W0, 1
	020 Add X31, X31, 320
	021 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03DFBDA0 B.NE 0x3DFBDC0
	0x03DFBDA4 LDRB W8, [X20 + 0x50]
	0x03DFBDA8 LDRB W9, [X19 + 0x50]
	0x03DFBDAC EOR W8, W9, W8, 0x0
	0x03DFBDB0 ANDS W31, W8, 0x1
	0x03DFBDB4 CSET W0, EQ
	0x03DFBDB8 B 0x3DFBDC0
	0x03DFBDBC MOV W0, W31
	0x03DFBDC0 LDP X20, X19, [X31 + 0x50]
	0x03DFBDC4 LDR X30, [X31 + 0x40]
	0x03DFBDC8 ADD X31, X31, 0x60
	0x03DFBDCC RET
	0x03DFBDD0 STR X30, [X31 - 0x20]!
	0x03DFBDD4 STP X20, X19, [X31 + 0x10]
	0x03DFBDD8 MOV X19, X1
	0x03DFBDDC MOV X20, X0
	0x03DFBDE0 LDR X0, [X0]
	0x03DFBDE4 LDR X1, [X1]
	0x03DFBDE8 MOV X2, X31
	0x03DFBDEC BL 0x3DE1F4C
	0x03DFBDF0 TBZ X0, 0x0, 0x3DFBE48
	0x03DFBDF4 LDR V0, [X20 + 0x8]
	0x03DFBDF8 LDUR V1, [X20 + 0xC]
	0x03DFBDFC LDR V2, [X19 + 0x8]
	0x03DFBE00 LDUR V3, [X19 + 0xC]
	0x03DFBE04 ADRP X8, 0xFFFFFFFFFCCEE000
	0x03DFBE08 LDR V4, [X8 + 0xF20]
	0x03DFBE0C FSUB S0, S0, S2
	0x03DFBE10 FSUB V1.2S, V1.2S, V3.2S
	0x03DFBE14 FMUL S0, S0, S0
	0x00000000 INVALID
	0x03DFBE1C FADD S0, S0, S1
	0x03DFBE20 MOV S1, V1.S[1]
	0x03DFBE24 FADD S0, S1, S0
	0x03DFBE28 FCMP S0, S4
	0x03DFBE2C B.PL 0x3DFBE48
	0x03DFBE30 LDRB W8, [X20 + 0x14]
	0x03DFBE34 LDRB W9, [X19 + 0x14]
	0x03DFBE38 EOR W8, W9, W8, 0x0
	0x03DFBE3C ANDS W31, W8, 0x1
	0x03DFBE40 CSET W0, EQ
	0x03DFBE44 B 0x3DFBE4C

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+288], X29
	003 Move [X31+304], X30
	004 Move [X31+312], X21
	005 Move [X31+320], X20
	006 Move [X31+328], X19
	007 Move X21, 0x5EE000
	008 Move W8, [X21+683]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x36F000
	016 Move X0, [X0+3192]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+683], W8
	020 Compare X20, 0
	021 JumpIfEqual {27}
	022 Move X8, 0x36F000
	023 Move X8, [X8+3192]
	024 Move X9, [X20]
	025 Move X8, [X8]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W0, W31
	028 Move X0, X20
	029 Call 0x1C17E08
	030 Move X1, X0
	031 Add X0, X31, 144
	032 Move W2, 144
	033 Call 0x3EB2B30
	034 Add X0, X31, 0
	035 Move W2, 144
	036 Move X1, X19
	037 Call 0x3EB2AC0
	038 Add X0, X31, 144
	039 Add X1, X31, 0
	040 Call InheritedData.op_Equality, X0, X1
	041 Move X20, [X31+320]
	042 Move X19, [X31+328]
	043 Move X30, [X31+304]
	044 Move X21, [X31+312]
	045 Move X29, [X31+288]
	046 And W0, W0, 1
	047 Add X31, X31, 336
	048 Return X0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03DFBE48 MOV W0, W31
	0x03DFBE4C LDP X20, X19, [X31 + 0x10]
	0x03DFBE50 LDR X30, [X31], #0x20
	0x03DFBE54 RET
	0x03DFBE58 UBFM X8, X0, 0x20, 0x3F
	0x03DFBE5C FMOV S0, W0
	0x03DFBE60 FMOV S1, W1
	0x03DFBE64 UBFM X9, X2, 0x20, 0x3F
	0x03DFBE68 FMOV S2, W2
	0x03DFBE6C FMOV S3, W3
	0x03DFBE70 FSUB S0, S0, S2
	0x03DFBE74 FSUB S1, S1, S3
	0x03DFBE78 ADRP X10, 0xFFFFFFFFFCCEE000
	0x03DFBE7C FMOV S2, W8
	0x03DFBE80 FMOV S3, W9
	0x03DFBE84 FSUB S2, S2, S3
	0x03DFBE88 LDR V3, [X10 + 0xF20]
	0x03DFBE8C FMUL S0, S0, S0
	0x03DFBE90 FMUL S2, S2, S2
	0x03DFBE94 FADD S0, S0, S2
	0x03DFBE98 FMUL S1, S1, S1
	0x03DFBE9C FADD S0, S1, S0
	0x03DFBEA0 FCMP S0, S3
	0x03DFBEA4 CSET W0, MI
	0x03DFBEA8 RET
	0x03DFBEAC LDR V0, [X0]
	0x03DFBEB0 LDR V1, [X1]
	0x03DFBEB4 MOV W8, W31
	0x03DFBEB8 FCMP S0, S1
	0x03DFBEBC B.NE 0x3DFBF04
	0x03DFBEC0 LDR W9, [X0 + 0x4]
	0x03DFBEC4 LDR W10, [X1 + 0x4]
	0x03DFBEC8 CMP W9, W10
	0x03DFBECC B.NE 0x3DFBF04
	0x03DFBED0 LDR V0, [X0 + 0x8]
	0x03DFBED4 LDR V1, [X1 + 0x8]
	0x03DFBED8 MOV W8, W31
	0x03DFBEDC FCMP S0, S1
	0x03DFBEE0 B.NE 0x3DFBF04
	0x03DFBEE4 LDR W9, [X0 + 0xC]
	0x03DFBEE8 LDR W10, [X1 + 0xC]
	0x03DFBEEC CMP W9, W10
	0x03DFBEF0 B.NE 0x3DFBF04
	0x03DFBEF4 LDR V0, [X0 + 0x10]
	0x03DFBEF8 LDR V1, [X1 + 0x10]
	0x03DFBEFC FCMP S0, S1
	0x03DFBF00 CSET W8, EQ
	0x03DFBF04 MOV W0, W8
	0x03DFBF08 RET
	0x03DFBF0C LDR V0, [X0]
	0x03DFBF10 LDR V1, [X1]
	0x03DFBF14 MOV W8, W31
	0x03DFBF18 FCMP S0, S1
	0x03DFBF1C B.NE 0x3DFBF80
	0x03DFBF20 LDR W9, [X0 + 0x4]
	0x03DFBF24 LDR W10, [X1 + 0x4]
	0x03DFBF28 CMP W9, W10
	0x03DFBF2C B.NE 0x3DFBF80
	0x03DFBF30 LDR V0, [X0 + 0x8]
	0x03DFBF34 LDR V1, [X1 + 0x8]
	0x03DFBF38 MOV W8, W31
	0x03DFBF3C FCMP S0, S1
	0x03DFBF40 B.NE 0x3DFBF80
	0x03DFBF44 LDR W9, [X0 + 0xC]
	0x03DFBF48 LDR W10, [X1 + 0xC]
	0x03DFBF4C CMP W9, W10
	0x03DFBF50 B.NE 0x3DFBF80
	0x03DFBF54 LDR V0, [X0 + 0x10]
	0x03DFBF58 LDR V1, [X1 + 0x10]
	0x03DFBF5C FCMP S0, S1
	0x03DFBF60 B.NE 0x3DFBF7C
	0x03DFBF64 LDRB W8, [X0 + 0x14]
	0x03DFBF68 LDRB W9, [X1 + 0x14]
	0x03DFBF6C EOR W8, W9, W8, 0x0
	0x03DFBF70 ANDS W31, W8, 0x1
	0x03DFBF74 CSET W8, EQ
	0x03DFBF78 B 0x3DFBF80
	0x03DFBF7C MOV W8, W31
	0x03DFBF80 MOV W0, W8
	0x03DFBF84 RET
	0x03DFBF88 SUB X31, X31, 0xC0
	0x03DFBF8C STP X30, X19, [X31 + 0xB0]
	0x03DFBF90 MOV X19, X0
	0x03DFBF94 ADD X0, X31, 0x58
	0x03DFBF98 MOVZ W2, 0x54
	0x03DFBF9C BL 0x3EB1AC0
	0x03DFBFA0 ADD X0, X31, 0x0
	0x03DFBFA4 MOVZ W2, 0x54
	0x03DFBFA8 MOV X1, X19
	0x03DFBFAC BL 0x3EB1AC0
	0x03DFBFB0 ADD X0, X31, 0x58
	0x03DFBFB4 ADD X1, X31, 0x0
	0x03DFBFB8 BL 0x3DFBC4C
	0x03DFBFBC LDP X30, X19, [X31 + 0xB0]
	0x03DFBFC0 AND W0, W0, 0x1
	0x03DFBFC4 ADD X31, X31, 0xC0
	0x03DFBFC8 RET
	0x03DFBFCC SUB X31, X31, 0xD0
	0x03DFBFD0 STP X30, X21, [X31 + 0xB0]
	0x03DFBFD4 STP X20, X19, [X31 + 0xC0]
	0x03DFBFD8 ADRP X21, 0x5ED000
	0x03DFBFDC LDRB W8, [X21 + 0x2AF]
	0x03DFBFE0 MOV X20, X1
	0x03DFBFE4 MOV X19, X0
	0x03DFBFE8 TBNZ X8, 0x0, 0x3DFC000
	0x03DFBFEC ADRP X0, 0x36E000
	0x03DFBFF0 LDR X0, [X0 + 0xC90]
	0x03DFBFF4 BL 0x1C16CF4
	0x03DFBFF8 MOVZ W8, 0x1
	0x03DFBFFC STRB W8, [X21 + 0x2AF]
	0x03DFC000 CBZ X20, 0x3DFC01C
	0x03DFC004 ADRP X8, 0x36D000
	0x03DFC008 LDR X8, [X8 + 0xC90]
	0x03DFC00C LDR X9, [X20]
	0x03DFC010 LDR X8, [X8]
	0x03DFC014 CMP X9, X8
	0x03DFC018 B.EQ 0x3DFC024
	0x03DFC01C MOV W0, W31
	0x03DFC020 B 0x3DFC058
	0x03DFC024 MOV X0, X20
	0x03DFC028 BL 0x1C16E08
	0x03DFC02C MOV X1, X0
	0x03DFC030 ADD X0, X31, 0x58
	0x03DFC034 MOVZ W2, 0x54
	0x03DFC038 BL 0x3EB1AC0
	0x03DFC03C ADD X0, X31, 0x0
	0x03DFC040 MOVZ W2, 0x54
	0x03DFC044 MOV X1, X19
	0x03DFC048 BL 0x3EB1AC0
	0x03DFC04C ADD X0, X31, 0x58
	0x03DFC050 ADD X1, X31, 0x0
	0x03DFC054 BL 0x3DFBC4C
	0x03DFC058 LDP X20, X19, [X31 + 0xC0]
	0x03DFC05C LDP X30, X21, [X31 + 0xB0]
	0x03DFC060 AND W0, W0, 0x1
	0x03DFC064 ADD X31, X31, 0xD0
	0x03DFC068 RET
	0x03DFC06C STP X30, X21, [X31 - 0x20]!
	0x03DFC070 STP X20, X19, [X31 + 0x10]
	0x03DFC074 MOV X19, X0
	0x03DFC078 BL 0x3DFC0C0
	0x03DFC07C MOV W20, W0
	0x03DFC080 ADD X0, X19, 0x18
	0x03DFC084 BL 0x3DFC190
	0x03DFC088 MOVZ W21, 0x18D
	0x03DFC08C MUL W8, W20, W21
	0x03DFC090 EOR W20, W8, W0, 0x0
	0x03DFC094 ADD X0, X19, 0x28
	0x03DFC098 BL 0x3DFC1E0
	0x03DFC09C MUL W8, W20, W21
	0x03DFC0A0 EOR W20, W8, W0, 0x0
	0x03DFC0A4 ADD X0, X19, 0x3C
	0x03DFC0A8 BL 0x3DFC254
	0x03DFC0AC MUL W8, W20, W21
	0x03DFC0B0 LDP X20, X19, [X31 + 0x10]
	0x03DFC0B4 EOR W0, W8, W0, 0x0
	0x03DFC0B8 LDP X30, X21, [X31], #0x20
	0x03DFC0BC RET
	0x03DFC0C0 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x5EE000
	015 Move X26, 0x2F9000
	016 Move W8, [X20+684]
	017 Move X26, [X26+1432]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x2F9000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+684], W8
	028 Move V0, [X19]
	029 Add X8, X31, 0
	030 Add X0, X31, 0
	031 Move X1, X31
	032 Or X21, X8, 7
	033 Or X22, X8, 15
	034 Or X23, X8, 15
	035 Move [X31], V0
	036 Call Single.GetHashCode, X0
	037 Move W20, W0
	038 Move X0, X21
	039 Move X1, X31
	040 Call Single.GetHashCode, X0
	041 Move W21, W0
	042 Move X0, X22
	043 Move X1, X31
	044 Call Single.GetHashCode, X0
	045 Move W22, W0
	046 Move X0, X23
	047 Move X1, X31
	048 Call Single.GetHashCode, X0
	049 Move W23, W0
	050 Add X0, X19, 16
	051 Move X1, X31
	052 Call Single.GetHashCode, X0
	053 Move W28, [X19+20]
	054 Move W24, W0
	055 Add X0, X19, 24
	056 Move X1, X31
	057 Call Single.GetHashCode, X0
	058 Move W29, [X19+28]
	059 Move W25, W0
	060 Add X0, X19, 32
	061 Move X1, X31
	062 Call TextShadow.GetHashCode, X0
	063 Move X8, [X26]
	064 Move X27, [X19+64]
	065 Move W26, W0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {71}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X0, X27
	072 Move X1, X31
	073 Move X2, X31
	074 Call Object.op_Equality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {80}
	079 Move W0, W31
	080 Move X0, [X19+64]
	081 Compare X0, 0
	082 JumpIfEqual {181}
	083 Move X8, [X0]
	084 Move X9, [X8+344]
	085 Move X1, [X8+352]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Xor W8, W20, W21
	088 Move W27, 397
	089 Xor W8, W8, W22
	090 Multiply W9, W24, W27
	091 Xor W8, W8, W23
	092 Xor W9, W9, W28
	093 Multiply W8, W8, W27
	094 Multiply W10, W25, W27
	095 Xor W8, W9, W8
	096 Xor W10, W10, W29
	097 Multiply W8, W8, W27
	098 Xor W8, W10, W8
	099 Multiply W8, W8, W27
	100 Xor W8, W8, W26
	101 Multiply W8, W8, W27
	102 Xor W20, W0, W8
	103 Add X0, X19, 72
	104 Move X1, X31
	105 Call FontDefinition.GetHashCode, X0
	106 Move W8, [X19+88]
	107 Multiply W9, W20, W27
	108 Xor W9, W9, W0
	109 Multiply W9, W9, W27
	110 Add X0, X19, 92
	111 Move X1, X31
	112 Xor W20, W9, W8
	113 Call Single.GetHashCode, X0
	114 Move W10, [X19+96]
	115 Move W11, [X19+100]
	116 Multiply W8, W0, W27
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 Multiply W9, W20, W27
	119 Xor W8, W8, W10
	120 Xor W8, W8, W9
	121 Add X12, X31, 0
	122 Multiply W8, W8, W27
	123 Add X0, X31, 0
	124 Move X1, X31
	125 Or X20, X12, 7
	126 Or X21, X12, 15
	127 Or X22, X12, 15
	128 Xor W24, W8, W11
	129 Move [X31], V0
	130 Call Single.GetHashCode, X0
	131 Move W23, W0
	132 Move X0, X20
	133 Move X1, X31
	134 Call Single.GetHashCode, X0
	135 Move W20, W0
	136 Move X0, X21
	137 Move X1, X31
	138 Call Single.GetHashCode, X0
	139 Move W21, W0
	140 Move X0, X22
	141 Move X1, X31
	142 Call Single.GetHashCode, X0
	143 Multiply W8, W24, W27
	144 Xor W8, W23, W8
	145 Xor W8, W8, W20
	146 Xor W8, W8, W21
	147 Xor W20, W8, W0
	148 Add X0, X19, 120
	149 Move X1, X31
	150 Call Single.GetHashCode, X0
	151 Move W9, [X19+124]
	152 Move W10, [X19+128]
	153 Multiply W8, W20, W27
	154 Xor W8, W8, W0
	155 Multiply W8, W8, W27
	156 Xor W8, W8, W9
	157 Multiply W8, W8, W27
	158 Add X0, X19, 132
	159 Move X1, X31
	160 Xor W20, W8, W10
	161 Call Single.GetHashCode, X0
	162 Move W8, [X19+136]
	163 Multiply W9, W0, W27
	164 Move X22, [X31+80]
	165 Move X21, [X31+88]
	166 Move X24, [X31+64]
	167 Move X23, [X31+72]
	168 Xor W8, W9, W8
	169 Multiply W9, W20, W27
	170 Move X20, [X31+96]
	171 Move X19, [X31+104]
	172 Move X26, [X31+48]
	173 Move X25, [X31+56]
	174 Move X28, [X31+32]
	175 Move X27, [X31+40]
	176 Move X29, [X31+16]
	177 Move X30, [X31+24]
	178 Xor W0, W8, W9
	179 Add X31, X31, 112
	180 Return X0
	181 Call 0x1C17F20

