Type: UnityEngine.UIElements.MouseEnterWindowEvent

Method: System.Void .cctor()

Disassembly:
	0x03DA7E74 BL 0x1C5C788
	0x03DA7E78 B 0x3DA7E8C
	0x03DA7E7C LDR W9, [X10]
	0x03DA7E80 ADD W9, W9, 0x1
	0x03DA7E84 ADD X8, X8, W9, 0x4, SXTW
	0x03DA7E88 ADD X0, X8, 0x138
	0x03DA7E8C LDP X8, X1, [X0]
	0x03DA7E90 MOV X0, X24
	0x03DA7E94 BLR X8
	0x03DA7E98 STP S0, S1, [X22 + 0x88]
	0x03DA7E9C LDR X8, [X24]
	0x03DA7EA0 LDR X1, [X26]
	0x03DA7EA4 LDRH W9, [X8 + 0x12E]
	0x03DA7EA8 CBZ X9, 0x3DA7ECC
	0x03DA7EAC LDR X10, [X8 + 0xB0]
	0x03DA7EB0 ADD X10, X10, 0x8
	0x03DA7EB4 LDUR X11, [X10 - 0x8]
	0x03DA7EB8 CMP X11, X1
	0x03DA7EBC B.EQ 0x3DA7EDC
	0x03DA7EC0 SUBS X9, X9, 0x1
	0x03DA7EC4 ADD X10, X10, 0x10
	0x03DA7EC8 B.NE 0x3DA7EB4
	0x03DA7ECC MOVZ W2, 0x1
	0x03DA7ED0 MOV X0, X24
	0x03DA7ED4 BL 0x1C5C788
	0x03DA7ED8 B 0x3DA7EEC
	0x03DA7EDC LDR W9, [X10]
	0x03DA7EE0 ADD W9, W9, 0x1
	0x03DA7EE4 ADD X8, X8, W9, 0x4, SXTW
	0x03DA7EE8 ADD X0, X8, 0x138
	0x03DA7EEC LDP X8, X1, [X0]
	0x03DA7EF0 MOV X0, X24
	0x03DA7EF4 BLR X8
	0x03DA7EF8 STP S0, S1, [X22 + 0x90]
	0x03DA7EFC LDR X8, [X24]
	0x03DA7F00 LDR X1, [X26]
	0x03DA7F04 LDRH W9, [X8 + 0x12E]
	0x03DA7F08 CBZ X9, 0x3DA7F2C
	0x03DA7F0C LDR X10, [X8 + 0xB0]
	0x03DA7F10 ADD X10, X10, 0x8
	0x03DA7F14 LDUR X11, [X10 - 0x8]
	0x03DA7F18 CMP X11, X1
	0x03DA7F1C B.EQ 0x3DA7F3C
	0x03DA7F20 SUBS X9, X9, 0x1
	0x03DA7F24 ADD X10, X10, 0x10
	0x03DA7F28 B.NE 0x3DA7F14
	0x03DA7F2C MOVZ W2, 0x3
	0x03DA7F30 MOV X0, X24
	0x03DA7F34 BL 0x1C5C788
	0x03DA7F38 B 0x3DA7F4C
	0x03DA7F3C LDR W9, [X10]
	0x03DA7F40 ADD W9, W9, 0x3
	0x03DA7F44 ADD X8, X8, W9, 0x4, SXTW
	0x03DA7F48 ADD X0, X8, 0x138
	0x03DA7F4C LDP X8, X1, [X0]
	0x03DA7F50 MOV X0, X24
	0x03DA7F54 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x641000
	008 Move X19, 0x3C2000
	009 Move W8, [X20+3906]
	010 Move X19, [X19+1336]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x3C2000
	016 Move X0, [X0+1344]
	017 Call 0x1C17CF4
	018 Move X0, 0x3C2000
	019 Move X0, [X0+64]
	020 Call 0x1C17CF4
	021 Move X0, 0x3C2000
	022 Move X0, [X0+1352]
	023 Call 0x1C17CF4
	024 Move X0, 0x3C2000
	025 Move X0, [X0+1360]
	026 Call 0x1C17CF4
	027 Move X0, 0x3C2000
	028 Move X0, [X0+1336]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+3906], W8
	032 Move X0, [X19]
	033 Move X22, 0x3C2000
	034 Move X23, 0x3C2000
	035 Move X21, 0x3C2000
	036 Move W8, [X0+224]
	037 Move X22, [X22+1352]
	038 Move X23, [X23+1360]
	039 Move X21, [X21+64]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X19]
	044 Move X8, [X0+184]
	045 Move X0, [X22]
	046 Move X22, 0x3C2000
	047 Move X20, [X8]
	048 Move X22, [X22+1344]
	049 Call 0x1C17F10
	050 Move X2, [X23]
	051 Move X1, X20
	052 Move X3, X31
	053 Move X19, X0
	054 Call Func`1<Object>..ctor, X0, X1, X2
	055 Move X0, [X21]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X1, [X22]
	061 Move X0, X19
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Move X23, [X31+56]
	068 Call 0x2D0E4C0, X0
	069 Return 

Method: System.Void Init()

Disassembly:
	0x03DA7F58 STP S0, S1, [X22 + 0x98]
	0x03DA7F5C LDR X8, [X24]
	0x03DA7F60 LDR X1, [X26]
	0x03DA7F64 LDRH W9, [X8 + 0x12E]
	0x03DA7F68 CBZ X9, 0x3DA7F8C
	0x03DA7F6C LDR X10, [X8 + 0xB0]
	0x03DA7F70 ADD X10, X10, 0x8
	0x03DA7F74 LDUR X11, [X10 - 0x8]
	0x03DA7F78 CMP X11, X1
	0x03DA7F7C B.EQ 0x3DA7F9C
	0x03DA7F80 SUBS X9, X9, 0x1
	0x03DA7F84 ADD X10, X10, 0x10
	0x03DA7F88 B.NE 0x3DA7F74
	0x03DA7F8C MOVZ W2, 0x5
	0x03DA7F90 MOV X0, X24
	0x03DA7F94 BL 0x1C5C788
	0x03DA7F98 B 0x3DA7FAC
	0x03DA7F9C LDR W9, [X10]
	0x03DA7FA0 ADD W9, W9, 0x5
	0x03DA7FA4 ADD X8, X8, W9, 0x4, SXTW
	0x03DA7FA8 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x641000
	006 Move X21, 0x3C2000
	007 Move W8, [X20+3907]
	008 Move X21, [X21+1368]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3C2000
	015 Move X0, [X0+1368]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3907], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x31A10F4, X0
	022 Move W8, 4
	023 Move [X19+48], W8
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return 

Method: System.Void LocalInit()

Disassembly:
	0x03DA7FAC LDP X8, X1, [X0]
	0x03DA7FB0 MOV X0, X24
	0x03DA7FB4 BLR X8

ISIL:
	001 Move W8, 4
	002 Move [X0+48], W8
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x03DA7FB8 STR W0, [X22 + 0xA4]
	0x03DA7FBC LDR X8, [X24]
	0x03DA7FC0 LDR X1, [X26]
	0x03DA7FC4 LDRH W9, [X8 + 0x12E]
	0x03DA7FC8 CBZ X9, 0x3DA7FEC
	0x03DA7FCC LDR X10, [X8 + 0xB0]
	0x03DA7FD0 ADD X10, X10, 0x8
	0x03DA7FD4 LDUR X11, [X10 - 0x8]
	0x03DA7FD8 CMP X11, X1
	0x03DA7FDC B.EQ 0x3DA7FF4
	0x03DA7FE0 SUBS X9, X9, 0x1
	0x03DA7FE4 ADD X10, X10, 0x10
	0x03DA7FE8 B.NE 0x3DA7FD4
	0x03DA7FEC MOVZ W2, 0x4
	0x03DA7FF0 B 0x3DA81D4
	0x03DA7FF4 LDR W9, [X10]
	0x03DA7FF8 ADD W9, W9, 0x4
	0x03DA7FFC B 0x3DA81E8
	0x03DA8000 LDR W9, [X10]
	0x03DA8004 ADD W9, W9, 0x13
	0x03DA8008 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x641000
	006 Move X21, 0x3C2000
	007 Move W8, [X20+3908]
	008 Move X21, [X21+1376]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x3C2000
	015 Move X0, [X0+1376]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3908], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Call 0x31A2898, X0
	022 Move W8, 4
	023 Move [X19+48], W8
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Return 

Method: System.Void PostDispatch(UnityEngine.UIElements.IPanel panel)

Disassembly:
	0x03DA800C ADD X0, X8, 0x138
	0x03DA8010 LDP X8, X1, [X0]
	0x03DA8014 MOV X0, X24
	0x03DA8018 BLR X8
	0x03DA801C STR W0, [X22 + 0x84]
	0x03DA8020 LDR X8, [X24]
	0x03DA8024 LDR X1, [X26]
	0x03DA8028 LDRH W9, [X8 + 0x12E]
	0x03DA802C CBZ X9, 0x3DA8050
	0x03DA8030 LDR X10, [X8 + 0xB0]
	0x03DA8034 ADD X10, X10, 0x8
	0x03DA8038 LDUR X11, [X10 - 0x8]
	0x03DA803C CMP X11, X1
	0x03DA8040 B.EQ 0x3DA8060
	0x03DA8044 SUBS X9, X9, 0x1
	0x03DA8048 ADD X10, X10, 0x10
	0x03DA804C B.NE 0x3DA8038
	0x03DA8050 MOVZ W2, 0x5
	0x03DA8054 MOV X0, X24
	0x03DA8058 BL 0x1C5C788
	0x03DA805C B 0x3DA8070
	0x03DA8060 LDR W9, [X10]
	0x03DA8064 ADD W9, W9, 0x5
	0x03DA8068 ADD X8, X8, W9, 0x4, SXTW
	0x03DA806C ADD X0, X8, 0x138
	0x03DA8070 LDP X8, X1, [X0]
	0x03DA8074 MOV X0, X24
	0x03DA8078 BLR X8
	0x03DA807C STP S0, S1, [X22 + 0x88]
	0x03DA8080 LDR X8, [X24]
	0x03DA8084 LDR X1, [X26]
	0x03DA8088 LDRH W9, [X8 + 0x12E]
	0x03DA808C CBZ X9, 0x3DA80B0
	0x03DA8090 LDR X10, [X8 + 0xB0]
	0x03DA8094 ADD X10, X10, 0x8
	0x03DA8098 LDUR X11, [X10 - 0x8]
	0x03DA809C CMP X11, X1
	0x03DA80A0 B.EQ 0x3DA80C0
	0x03DA80A4 SUBS X9, X9, 0x1
	0x03DA80A8 ADD X10, X10, 0x10
	0x03DA80AC B.NE 0x3DA8098
	0x03DA80B0 MOVZ W2, 0x5
	0x03DA80B4 MOV X0, X24
	0x03DA80B8 BL 0x1C5C788
	0x03DA80BC B 0x3DA80D0
	0x03DA80C0 LDR W9, [X10]
	0x03DA80C4 ADD W9, W9, 0x5
	0x03DA80C8 ADD X8, X8, W9, 0x4, SXTW
	0x03DA80CC ADD X0, X8, 0x138
	0x03DA80D0 LDP X8, X1, [X0]
	0x03DA80D4 MOV X0, X24
	0x03DA80D8 BLR X8
	0x03DA80DC STP S0, S1, [X22 + 0x90]
	0x03DA80E0 LDR X8, [X24]
	0x03DA80E4 LDR X1, [X26]
	0x03DA80E8 LDRH W9, [X8 + 0x12E]
	0x03DA80EC CBZ X9, 0x3DA8110
	0x03DA80F0 LDR X10, [X8 + 0xB0]
	0x03DA80F4 ADD X10, X10, 0x8
	0x03DA80F8 LDUR X11, [X10 - 0x8]
	0x03DA80FC CMP X11, X1
	0x03DA8100 B.EQ 0x3DA8120
	0x03DA8104 SUBS X9, X9, 0x1
	0x03DA8108 ADD X10, X10, 0x10
	0x03DA810C B.NE 0x3DA80F8
	0x03DA8110 MOVZ W2, 0x7
	0x03DA8114 MOV X0, X24
	0x03DA8118 BL 0x1C5C788
	0x03DA811C B 0x3DA8130
	0x03DA8120 LDR W9, [X10]
	0x03DA8124 ADD W9, W9, 0x7
	0x03DA8128 ADD X8, X8, W9, 0x4, SXTW
	0x03DA812C ADD X0, X8, 0x138
	0x03DA8130 LDP X8, X1, [X0]
	0x03DA8134 MOV X0, X24
	0x03DA8138 BLR X8
	0x03DA813C STP S0, S1, [X22 + 0x98]
	0x03DA8140 LDR X8, [X24]
	0x03DA8144 LDR X1, [X26]
	0x03DA8148 LDRH W9, [X8 + 0x12E]
	0x03DA814C CBZ X9, 0x3DA8170
	0x03DA8150 LDR X10, [X8 + 0xB0]
	0x03DA8154 ADD X10, X10, 0x8
	0x03DA8158 LDUR X11, [X10 - 0x8]
	0x03DA815C CMP X11, X1
	0x03DA8160 B.EQ 0x3DA8180
	0x03DA8164 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x640000
	007 Move X21, 0x378000
	008 Move W8, [X22+3909]
	009 Move X21, [X21+544]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x375000
	017 Move X0, [X0+3720]
	018 Call 0x1C17CF4
	019 Move X0, 0x378000
	020 Move X0, [X0+552]
	021 Call 0x1C17CF4
	022 Move X0, 0x378000
	023 Move X0, [X0+544]
	024 Call 0x1C17CF4
	025 Move X0, 0x3C1000
	026 Move X0, [X0+1384]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3909], W8
	030 Move X8, [X20]
	031 Move X1, [X21]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 4
	042 Move X0, X20
	043 Call 0x1C5D788
	044 Move W9, [X10]
	045 Add W9, W9, 4
	046 Add X8, X8, W9
	047 Add X0, X8, 312
	048 Move X8, [X0]
	049 Move X1, [X0+8]
	050 Move X21, 0x3C1000
	051 Move X21, [X21+1384]
	052 Move X0, X20
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X0, 0
	055 JumpIfEqual {67}
	056 Move X8, 0x378000
	057 Move X8, [X8+552]
	058 Move X9, [X0]
	059 Move X8, [X8]
	060 Move W11, [X9+304]
	061 Move W10, [X8+304]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X9, [X9+200]
	064 Add X9, X9, X10
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Compare X19, 0
	068 JumpIfEqual {83}
	069 Move X8, 0x375000
	070 Move X8, [X8+3720]
	071 Move X9, [X19]
	072 Move X8, [X8]
	073 Move W11, [X9+304]
	074 Move W10, [X8+304]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X9, [X9+200]
	077 Add X9, X9, X10
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X19
	081 Move X1, X31
	082 Call BaseVisualElementPanel.CommitElementUnderPointers, X0
	083 Move X2, [X21]
	084 Move X0, X20
	085 Move X1, X19
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X30, [X31+48]
	091 Call 0x31A1584, X0, X1
	092 Return 

